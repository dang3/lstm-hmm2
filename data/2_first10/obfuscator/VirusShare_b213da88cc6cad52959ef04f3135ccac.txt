inc
add
xchg
dec
jae
or
je
inc
jae
push
jae
jb
jae
push
inc
jae
push
inc
jae
mov
bound
jae
add
setle
addl
inc
jae
jae
jae
lahf
inc
jae
dec
inc
jae
push
inc
jae
roll
mov
dec
jae
rolb
dec
inc
jae
lret
inc
jae
lret
inc
jae
inc
inc
jae
sahf
inc
jae
iret
inc
jae
add
push
sahf
inc
jae
add
gs
jae
xchg
inc
jae
xchg
dec
jae
jnp
jae
popa
dec
jae
jl
jae
aas
inc
jae
cltd
inc
jae
xchg
inc
jae
pop
inc
jae
xchg
dec
jae
push
inc
jae
lahf
inc
jae
leave
inc
jae
mov
inc
jae
or
and
mov
jae
cltd
inc
jae
mov
inc
jae
xchg
dec
jae
xchg
inc
jae
cwtl
inc
jae
inc
inc
jae
mov
dec
jae
add
in
mov
inc
jae
or
dec
jae
jno
jae
addr16
jae
dec
inc
jae
faddl
inc
push
inc
jae
xchg
dec
jae
out
jae
cmp
jle
cmp
cmp
andl
jae
add
imul
jae
push
jae
add
jmp
in
inc
jae
xor
dec
jae
mov
mov
insl
dec
jae
lahf
inc
jae
jne
jae
jne
jae
imul
sahf
inc
jae
imul
xchg
dec
jae
pop
dec
jae
push
jae
in
inc
jae
xchg
dec
jae
fildl
xor
jae
popf
inc
jae
add
add
add
add
add
add
mov
inc
add
add
add
inc
add
mov
inc
add
add
add
add
add
add
add
inc
add
add
add
movsb
inc
add
add
add
movsb
inc
add
add
inc
add
add
add
cmpsb
inc
add
add
add
inc
add
test
add
push
test
or
push
stos
inc
add
add
add
add
add
add
cmp
inc
add
add
add
inc
add
mov
add
mov
add
add
add
add
add
add
mov
inc
add
add
add
add
add
inc
add
mov
add
add
add
add
and
inc
add
mov
or
dec
mov
or
dec
mov
add
push
mov
or
pop
mov
inc
add
add
add
add
add
rolb
rolb
rolb
add
add
roll
add
add
add
add
roll
add
add
inc
add
ret
inc
add
add
add
ret
inc
add
ret
inc
add
add
add
ret
inc
add
les
add
add
lcall
add
inc
add
add
add
inc
add
add
add
lds
add
movb
add
add
add
add
inc
add
inc
add
add
add
add
add
movl
add
add
or
or
enterw
add
add
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
loop
stos
push
dec
call
add
add
add
xor
add
cmp
add
add
add
cmc
shll
aad
mov
mov
popf
xor
xchg
add
add
add
add
mov
add
add
add
add
int3
xor
or
repz
push
cmp
inc
into
xlat
sub
rorb
and
cmp
xor
or
stos
add
xchg
push
inc
add
ret
inc
add
add
insl
xor
or
add
add
inc
add
rol
add
add
jle
add
insb
je
add
add
add
add
add
xor
add
add
sbb
test
add
add
add
xor
add
add
add
sbb
add
add
add
add
add
add
add
sbb
loope
fsub
loopne
fsub
loopne
fucom
aam
mov
in
xchg
xchg
mov
jae
xchg
mov
mov
xchg
sub
cwtl
out
mov
aam
loopne
fsub
loop
add
fucom
fcmovu
fstp
fcmovu
fmulp
iret
jmp
lock
pop
cli
pop
cmp
pop
xor
pop
xor
push
ds
pop
cmp
pusha
cmp
pusha
cmp
pop
cmp
push
aas
notl
cli
pop
xor
pop
cmp
jp
in
test
add
fcmovnu
fsubr
mov
hlt
push
inc
cmc
pop
inc
cld
addr16
jl
jl
push
negb
cli
arpl
pop
incb
pop
inc
sti
inc
js
std
insl
dec
sti
pop
cmp
dec
cmp
aad
add
loopne
mov
ja
cld
jns
imull
cli
jno
std
jg
stc
jno
in
pop
aas
jmp
cmp
push
cmp
push
cmp
pop
cmp
pop
dec
clc
insl
push
stc
bound
inc
cli
pop
ss
mov
add
ffreep
mov
loopne
hlt
cwtl
cmp
je
xchg
jns
xchg
pop
ficoml
out
push
in
js
jmp
xchg
xchg
xchg
mov
out
test
addr16
outsb
pop
jmp
pop
in
imul
inc
imulb
add
add
mov
ror
sti
popf
mov
jnp
xchg
jl
xchg
jl
xchg
addr16
jmp
iret
mov
out
fucom
enter
rcl
into
lret
stos
mov
xchg
pop
inc
stc
jnp
add
in
fcmovbe
out
icebp
rcl
aam
cmpsl
lcall
std
xchg
jg
xchg
jnp
mov
test
cltd
mov
mov
fsubs
fsubs
loop
jg
jge
notb
fcmovnbe
rol
enter
enter
pushf
cmpsb
xchg
std
sahf
mov
fwait
mov
xchg
jle
mov
lcall
je
andl
popa
testl
fstp
add
out
iret
ljmp
mov
cmpsl
cwtl
ljmp
std
fwait
mov
xchg
cmp
shl
call
add
shll
loopne
loope
into
in
loop
enter
ljmp
cltd
xchg
xchg
jle
add
shl
call
add
add
lds
lock
xlat
fabs
enter
mov
popf
mov
xchg
addl
add
add
add
add
add
mov
xchg
lods
sub
add
add
ror
lret
aam
out
int3
ljmp
mov
mov
add
add
mov
add
mov
scas
add
sahf
add
add
mov
fsubr
in
rcr
ret
rcl
shl
test
jmp
dec
mov
mov
mov
add
add
fcomp
xchg
sbb
stos
push
lea
add
int3
leave
jmp
hlt
fsubr
icebp
lret
jmp
cli
movsb
xchg
cld
xchg
cmp
jg
add
cld
xchg
movsb
out
mov
sbb
add
aam
fmul
fucom
rcr
mov
mov
xchg
cmp
addb
add
add
jl
jnp
cli
mov
pause
or
imul
xchg
add
fidivrl
loop
repz
stc
test
mov
stc
mov
sti
mov
jns
ljmp
std
mov
sti
mov
cli
mov
stc
scas
movsl
clc
test
repnz
mov
rcr
fst
out
leave
out
ret
out
stos
ljmp
xchg
jg
add
jo
jns
ljmp
inc
mov
sar
mov
mov
imull
add
add
mov
out
mov
call
mov
int
in
out
shr
mov
add
lret
int3
loopne
rcr
mov
mov
mov
std
sahf
lcall
add
jnp
pushl
pushl
incl
inc
sar
leave
dec
sar
rcl
rcl
std
into
sar
lret
int
enter
cli
mov
idivl
repnz
ret
out
aad
in
jmp
fucomip
out
out
jmp
out
out
loopne
lock
in
aam
out
mov
add
add
add
aad
in
hlt
lret
jmp
fxch
std
test
cld
lahf
pushf
mov
xchg
jge
add
mov
jo
pushl
cli
jb
jp
jmp
dec
int
rcl
call
fcomp
fabs
fabs
xlat
aam
cld
rcl
sti
int3
iret
cli
enter
sar
mov
mov
cli
fcom
stc
loope
mul
in
in
ljmp
ljmp
jmp
in
lret
mov
jecxz
in
fld
scas
movsb
stos
sahf
mov
cli
fwait
test
add
add
mov
pushl
pushl
rcrb
bnd
call
dec
sar
rcl
call
fdivr
fabs
fsub
fucomip
jmp
in
jmp
jmp
fsubrp
std
xlat
fdivrp
rcr
sti
into
sar
leave
lret
sti
sarl
mov
jecxz
std
in
call
div
cmc
clc
clc
lock
stc
jmp
cmc
in
out
fsub
out
call
mov
mov
lods
mov
popf
mov
lea
add
add
jge
pushl
pushl
sti
jne
pushf
inc
shrl
call
dec
sar
rcr
call
fdivrp
fsub
jmp
jmp
loop
jmp
lock
bnd
repz
repz
jecxz
loope
std
fucom
std
xlat
fdivrp
rcl
sti
enter
mov
mov
in
call
stc
stc
stc
sti
sti
cmc
clc
clc
out
out
lock
in
loop
ret
call
mov
sahf
mov
xchg
cmp
jbe
cli
xchg
jns
jb
pushl
stc
jno
ret
push
pop
mov
nop
inc
dec
sar
aam
fcomp
fchs
fsubp
jmp
in
jmp
out
jmp
icebp
jmp
repz
hlt
jmp
cmc
jmp
idiv
call
call
out
jecxz
fsub
std
ret
mov
fcom
ljmp
sti
sti
clc
clc
imul
out
lock
in
xlat
test
pushl
lcall
cli
sahf
mov
add
add
add
nop
jne
mov
jno
rcrb
cmp
sbb
roll
dec
int3
call
aam
aad
fcomp
fsub
fucomip
jmp
in
jmp
out
jmp
bnd
repz
cmc
jmp
idiv
call
call
call
jmp
idiv
in
cld
rcl
jmp
icebp
dec
into
pushl
call
into
jmp
std
div
cli
in
jmp
repz
ret
std
mov
scas
movsl
std
mov
xchg
jnp
cwtl
addb
add
add
std
xchg
jp
sahf
mov
jae
rcrl
xor
cmpsb
cwtl
inc
mov
rcl
call
aam
fnsetpm(287
fucomip
jmp
in
jmp
out
jmp
bnd
repz
cmc
jmp
idiv
call
call
call
jmp
idiv
fabs
loope
jmp
repz
lock
jmp
lret
int3
pushl
call
into
in
jmp
out
stc
stc
mov
std
test
xchg
jl
xchg
add
add
add
mov
stos
sahf
jl
incb
lahf
mov
mov
inc
ret
dec
int3
call
aam
aam
rcl
fsub
fucomip
jmp
in
jmp
out
jmp
bnd
repz
cmc
jmp
idiv
call
call
call
call
out
jmp
bnd
lock
in
fucomip
inc
mov
les
in
fstp
cld
into
enter
std
lods
sahf
jmp
incb
add
add
mov
incl
lcall
mov
dec
lret
dec
sar
lret
int
xlat
fdivrp
fnsetpm(287
fsubrp
jmp
in
jmp
out
jmp
icebp
jmp
repz
hlt
jmp
cmc
jmp
idiv
in
dec
sar
mov
ljmp
mov
dec
lret
fucomip
jmp
out
jmp
in
fucomip
fsub
fabs
call
aam
mov
pushl
ror
mov
lcall
incb
add
add
add
test
call
pushl
ret
leave
leave
dec
leave
std
lret
xlat
fucom
jmp
ljmp
jmp
bnd
repz
hlt
dec
lret
xchg
lcall
lcall
lcall
lcall
inc
mov
fsubrp
fnsetpm(287
fcomp
call
fcos
iret
sar
mov
inc
mov
lret
mov
std
xchg
jge
mov
andb
add
test
cmpsl
cltd
pushl
mov
std
mov
mov
fchs
fsub
fsubrp
jmp
in
jmp
out
jmp
lock
out
pushl
lcall
lcall
lcall
lcall
lcall
ljmp
call
rcl
dec
sar
enter
mov
mov
mov
std
xchg
jl
mov
andl
add
stos
xchg
std
cmpsl
lcall
dec
int
lret
int
iret
sar
leave
lret
sar
fucom
fucomip
jmp
in
jmp
out
pushl
lcall
mov
mov
inc
mov
mov
lcall
lcall
ljmp
aam
call
aam
lret
int
mov
sarb
xchg
ljmp
xchg
jge
mov
jle
add
cmpsb
xchg
mov
mov
dec
int3
dec
into
call
aad
rcl
cld
leave
lret
jecxz
fucom
fucomip
dec
sar
lahf
mov
lahf
mov
fwait
test
xchg
ja
mov
std
xchg
mov
jno
add
add
add
cmpsb
xchg
lcall
lcall
call
xlat
dec
sar
leave
leave
inc
sar
mov
scas
mov
sahf
mov
ja
xchg
andb
add
add
mov
ljmp
dec
leave
dec
enter
dec
sar
rcl
rcr
cld
mov
fucom
ljmp
xchg
js
mov
mov
arpl
xchg
xchg
xchg
xchg
xchg
cmpsl
lea
add
jmp
lcall
dec
sar
lret
mov
sarb
test
sahf
mov
xchg
jl
mov
andb
cmpsb
movsb
mov
inc
sar
int3
dec
sar
rcl
aad
cld
enter
aad
sahf
lea
movups
push
es
insl
cmp
fidivrs
std
lea
mov
xchg
xchg
xchg
lods
xchg
add
add
sahf
lcall
inc
mov
ret
mov
std
stos
popf
std
lahf
lcall
incb
sti
xchg
jbe
add
add
movsb
fwait
pushl
mov
inc
int3
dec
sar
rcl
aam
cld
mov
push
adc
add
add
xor
cs
jg
mov
xchg
xchg
xchg
jae
add
jmp
lcall
inc
sar
mov
lods
mov
mov
decl
std
ja
add
add
cmpsb
cwtl
ljmp
pushl
inc
mov
lret
int
call
aam
mov
add
add
add
add
xor
cmp
xor
mov
xchg
xchg
test
add
pushl
lcall
std
mov
mov
stos
sahf
jmp
call
std
jp
sti
mov
add
sahf
xchg
ljmp
mov
mov
inc
dec
leave
dec
int
ret
ret
push
add
add
add
push
push
push
push
push
adc
adc
and
jbe
cmp
xchg
xchg
xchg
test
add
mov
lcall
mov
cld
lods
sahf
hlt
popf
test
lcall
imul
pop
cld
test
sti
mov
ljmp
pushl
mov
inc
leave
fmull
add
add
add
adc
and
and
add
add
add
push
push
std
mov
arpl
xchg
test
add
ljmp
lcall
pushl
cld
mov
out
pop
in
sbbb
pop
cld
lea
add
xchg
mov
stos
mov
mov
pushl
mov
std
mov
cs
add
add
fs
xchg
xchg
lcall
mov
sahf
mov
stos
sahf
jmp
mov
dec
loopne
dec
in
mov
add
movsb
xchg
cltd
mov
test
mov
std
stos
sahf
std
mov
mov
mov
pop
add
add
add
das
std
xchg
xchg
mov
mov
lcall
ljmp
cld
cwtl
cmp
xchg
xchg
jle
xchg
jnp
in
xchg
outsb
stc
movsb
xchg
cltd
mov
cmpsl
lcall
pushl
pushl
mov
movsb
imul
pop
add
pop
std
xchg
mov
mov
ljmp
lcall
jmp
cwtl
test
mov
insb
testl
add
sti
xchg
cmp
test
fwait
mov
stos
sahf
pushl
ljmp
pushl
fmuls
push
adc
push
adc
outsl
push
std
outsl
std
mov
jmp
lcall
jmp
call
decb
std
andb
add
sti
xchg
jle
mov
sahf
mov
cmpsb
xchg
ljmp
jmp
ljmp
jmp
clc
fwait
mov
popf
mov
mov
lcall
lcall
lcall
call
incl
js
add
stc
pushf
test
jbe
xchg
cmp
xchg
ljmp
lcall
jmp
jmp
lcall
std
xchg
cmp
xchg
xchg
cmp
jbe
mov
test
jg
js
jb
stc
lcall
add
add
lea
jne
cwtl
cmp
xchg
jmp
call
call
call
mov
lea
mov
xchg
andl
pop
js
pushl
insl
inc
cli
mov
add
xchg
jp
test
je
xchg
jge
fwait
test
mov
decl
decl
incl
std
jle
jle
jns
pushl
pushl
ljmp
insl
inc
sti
mov
add
cld
jae
andl
insl
call
call
decl
js
je
std
outsb
inc
ljmp
ljmp
imul
pop
stc
mov
add
mov
jg
incl
mov
mov
outsb
decl
cld
sbbb
incl
sti
pushf
addl
add
sti
xchg
jns
nop
jae
sbbl
arpl
xchg
fs
sbbl
addl
add
add
incl
add
add
incl
add
add
incl
incl
incl
add
add
incl
add
add
incl
inc
add
add
jmp
add
add
push
add
add
cld
add
add
cld
aas
incl
jg
add
iret
incl
jmp
pop
add
incl
push
sldt
incb
push
pop
add
cld
add
clc
pop
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
incb
add
add
add
incl
add
addb
add
add
add
add
add
addb
addb
add
addb
addb
add
rolb
orb
add
rolb
add
add
jmp
add
add
add
push
add
add
add
clc
add
add
add
cld
add
add
add
incl
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
jg
add
sub
add
xor
add
pusha
add
add
add
add
call
loope
loopne
loopne
loopne
loopne
loopne
aam
out
mov
jmp
xchg
xchg
in
mov
xchg
xacquire
repnz
in
mov
out
xchg
cmp
mov
mov
aad
loopne
loopne
loop
loope
in
call
into
fcmovu
fcmovu
fdivrp
fmulp
iret
jmp
push
outsl
pop
cli
pop
cmp
cli
pop
xor
stc
pop
xor
push
push
ds
sti
pop
cmp
cld
pusha
cmp
cld
pusha
cmp
cli
pop
cmp
repz
aas
push
push
cmp
cli
pop
xor
cli
pop
cmp
bnd
jmp
lods
test
fcmovnu
loop
in
loopne
loop
fcmovnu
fcomi
jmp
bound
hlt
push
inc
push
pop
inc
cld
addr16
jl
jl
push
push
pop
inc
cli
arpl
js
incb
push
pop
inc
sti
inc
js
std
insl
dec
sti
pop
cmp
repnz
cmp
fcmovnbe
repz
loope
icebp
ret
ffreep
mov
cld
ja
cld
jns
push
outsb
pop
cli
jno
std
jg
stc
jno
in
pop
aas
jmp
pop
cmp
loop
cmp
jmp
push
cmp
ljmp
clc
insl
push
stc
bound
pusha
inc
cli
pop
ss
andb
add
add
mov
jecxz
hlt
cwtl
cmp
lea
xchg
std
jns
incb
pop
ficoml
jmp
push
in
js
jmp
xchg
out
xchg
ljmp
out
test
jnp
in
outsb
pop
jmp
pop
in
imul
std
insl
inc
push
gs
lock
push
aad
mov
call
ror
sti
popf
mov
cld
jnp
std
xchg
jl
xchg
jl
clc
xchg
call
xchg
mov
ror
inc
jecxz
mov
loop
inc
fucom
dec
in
inc
rcl
dec
lret
fildll
jb
call
pop
inc
cli
jno
shr
loop
push
in
stos
cwtl
cmp
not
out
icebp
call
aad
push
cmpsl
lcall
pushf
mov
std
xchg
jg
std
xchg
jnp
decb
js
call
mov
popf
fsubs
mov
fistpl
jg
repz
push
nop
jp
cli
jo
sar
mov
out
ljmp
aam
rcr
dec
loopne
jmp
enter
stos
pushf
cmpsb
xchg
std
sahf
mov
fwait
mov
xchg
jle
std
mov
stc
lcall
stc
test
cld
jge
ret
push
mov
imul
ja
xchg
testb
cli
jmp
add
add
lods
fwait
sub
lret
fsubrp
out
dec
ljmp
fidivrs
ljmp
xchg
std
fwait
mov
xchg
cmp
stc
movsb
adc
add
add
in
in
or
in
in
jecxz
in
daa
repnz
mov
in
fucom
inc
loope
dec
in
jmp
lret
enter
movsb
ljmp
xchg
cltd
xchg
cld
xchg
jns
clc
cmpsb
xchg
inc
ljmp
fucom
ljmp
loopne
fiaddl
ret
push
rorl
add
in
mov
xor
ret
mov
cld
fdiv
repnz
in
inc
xlat
fcos
loope
clc
lods
mov
popf
mov
std
xchg
jle
clc
sahf
xchg
add
add
add
add
in
in
add
loop
sbb
ljmp
pop
roll
fwait
int3
mov
xchg
aad
sbb
scas
ds
xor
repz
jmp
movsb
dec
lret
fmul
fstp
call
in
out
dec
ljmp
fistpll
xchg
jmp
cmp
fwait
test
add
add
add
add
into
into
xor
fcmovu
add
add
add
jg
dec
ret
subb
aam
adc
xor
aad
lret
cmp
inc
mov
dec
mov
lock
jmp
jmp
inc
inc
fsubp
call
aad
push
test
jmp
jl
cli
pushf
xchg
add
add
or
shlb
pusha
enter
cmp
pop
jecxz
fiadds
lock
icebp
aas
fucom
xchg
sbb
sahf
xor
add
lock
add
scas
popf
cmp
int3
leave
lock
hlt
fsubr
icebp
dec
jmp
sar
cli
movsb
xchg
cld
xchg
cmp
xchg
jl
clc
cmpsl
xchg
add
add
in
jecxz
add
fucom
add
add
add
add
add
xchg
jge
std
jl
int3
cmc
mov
mov
decl
mov
add
jmp
pushf
pop
rcr
fscale
enter
rcr
mov
mov
xchg
std
xchg
cmp
xchg
jge
hlt
mov
add
imulb
push
out
jnp
cli
mov
xchg
push
nop
cmp
pop
imul
xchg
xchg
fcom
pop
add
add
lock
icebp
add
hlt
hlt
xor
add
add
mov
scas
fsubrp
in
jmp
icebp
repz
call
fdivrp
stc
test
mov
jl
sti
xchg
jl
out
ljmp
icebp
ror
add
andl
ljmp
lods
std
mov
sti
mov
cli
mov
stc
scas
movsl
stc
cmpsl
xchg
out
mov
mov
out
in
out
loopne
add
mov
nop
add
mov
lcall
out
add
mov
push
rcr
aad
jmp
inc
jmp
mov
ljmp
xchg
xchg
jle
cli
popf
xchg
cli
nop
je
jo
jns
ljmp
mov
inc
mov
std
ret
sti
sarb
cli
mov
clc
lods
lahf
out
clc
mov
xchg
dec
cmc
cmpsl
xchg
pusha
out
mov
xchg
ljmp
lret
in
mul
ror
in
int
shl
lret
ret
mov
shlb
repz
sub
mov
loope
imulb
dec
loopne
inc
fcmovnu
mov
mov
cmpsb
std
sahf
lcall
js
repnz
add
add
add
mov
push
in
jo
pushl
incl
mov
inc
sar
leave
leave
dec
sar
rcl
rcl
std
into
sar
cld
lret
int
sti
enter
cli
mov
mov
idivl
mov
repnz
ret
out
aad
in
jmp
jmp
jmp
jmp
out
out
jmp
out
lock
in
loop
iret
in
in
mov
dec
hlt
mov
pushf
and
aad
jmp
repnz
dec
jmp
call
std
test
cld
lahf
pushf
mov
xchg
jl
stc
popf
xchg
repnz
movl
pushl
pushl
cli
jb
jp
jmp
lret
int
call
aam
call
fcomp
fabs
fabs
xlat
std
aam
cld
rcl
sti
int3
iret
cli
enter
ret
sti
mov
mov
cld
lret
sar
fcom
stc
loope
push
out
push
in
ljmp
repz
ljmp
fucomip
jmp
jecxz
int3
loop
ret
mov
inc
inc
jecxz
inc
in
fld
scas
movsb
stos
sahf
mov
mov
cld
nop
jbe
out
jmp
jbe
jno
std
pushl
pushl
call
pop
inc
push
jns
call
dec
sar
call
call
fdivr
fabs
fsub
fucomip
jmp
in
jmp
jmp
fsubrp
std
xlat
fdivrp
cld
rcr
sti
into
sar
cli
leave
lret
sti
sarl
inc
mov
jecxz
std
in
call
stc
div
push
clc
clc
push
clc
stc
jmp
cmc
jmp
in
out
fsub
out
iret
call
jmp
ffree
mov
ljmp
nop
popf
mov
std
mov
imull
add
add
add
hlt
mov
push
repnz
pushl
sti
jne
lcall
push
call
dec
sar
call
fdivr
call
fdivrp
fsub
jmp
jmp
jmp
out
jmp
lock
jmp
repnz
jmp
repz
jmp
repz
jecxz
loope
std
fucom
std
xlat
fdivrp
sti
rcl
sti
enter
mov
lods
dec
ret
in
call
std
stc
stc
stc
sti
sti
push
clc
clc
out
out
lock
in
jecxz
ret
call
mov
movsb
std
sahf
mov
std
xchg
cmp
jbe
cld
xchg
ja
cld
test
pushl
pushl
stc
jno
inc
pop
cmp
mov
mov
dec
sar
call
fcomp
fchs
fsubp
jmp
in
jmp
out
jmp
icebp
jmp
repz
jmp
hlt
jmp
cmc
jmp
idiv
call
idiv
call
idiv
out
jecxz
fsub
std
ret
mov
mov
fcom
ljmp
std
sti
sti
in
sti
clc
clc
push
out
out
push
jecxz
jmp
fcom
push
sarb
pushl
xchg
lcall
ja
cld
xchg
jnp
add
add
repnz
or
xchg
decl
dec
call
pop
aas
incl
sbb
call
xorb
mov
dec
int3
call
aam
call
fcomp
fsub
fucomip
jmp
in
jmp
out
jmp
repnz
jmp
repz
jmp
cmc
jmp
idiv
call
idiv
call
idiv
call
idiv
jmp
idiv
in
cld
rcl
jmp
icebp
dec
into
pushl
mov
call
into
jmp
idiv
std
div
cli
in
jmp
cmc
push
leave
ret
std
mov
scas
movsl
std
mov
mov
xchg
jnp
sti
xchg
jle
add
add
imull
js
lcall
push
inc
pop
aas
ljmp
and
std
cmpsb
cwtl
inc
mov
call
aam
call
aam
fnsetpm(287
fucomip
jmp
in
jmp
out
jmp
repnz
jmp
repz
jmp
cmc
jmp
idiv
call
idiv
call
idiv
call
idiv
jmp
idiv
std
fabs
loope
jmp
repz
jmp
lock
jmp
jmp
dec
int3
pushl
mov
call
into
in
jmp
std
out
stc
stc
mov
lahf
std
test
mov
xchg
jl
std
xchg
add
add
repz
incb
sahf
jl
incb
jne
lahf
mov
pushl
ret
dec
int3
call
aam
aam
rcl
fsub
fucomip
jmp
in
jmp
out
jmp
repnz
jmp
repz
jmp
cmc
jmp
idiv
call
idiv
call
idiv
call
idiv
call
fdivr
out
jmp
repnz
jmp
lock
jmp
in
fucomip
inc
mov
inc
mov
jmp
loope
fstp
cld
into
enter
cmpsb
std
lods
sahf
jmp
jl
incb
add
add
add
cli
nop
je
incb
arpl
decl
test
ljmp
mov
dec
lret
dec
sar
std
lret
int
xlat
fdivrp
fnsetpm(287
fsubrp
jmp
in
jmp
out
jmp
icebp
jmp
repz
jmp
hlt
jmp
cmc
jmp
idiv
jmp
icebp
dec
sar
mov
mov
ljmp
test
dec
lret
fucomip
jmp
out
jmp
in
fucomip
fsub
fabs
call
aam
pushl
mov
ror
mov
xchg
lcall
jns
incb
add
add
add
fcompp
add
fwait
cmpl
insb
hlt
call
cltd
pushl
inc
sar
leave
leave
dec
leave
std
lret
call
fucom
jmp
ljmp
jecxz
jmp
repnz
jmp
repz
jmp
hlt
dec
lret
movsl
xchg
lcall
mov
lcall
mov
lcall
mov
lcall
xchg
inc
mov
fsubrp
fnsetpm(287
fcomp
call
fcos
dec
sar
mov
lcall
lret
mov
std
xchg
jge
std
mov
std
andb
add
add
mov
cmp
mov
cltd
pushl
mov
mov
mov
std
mov
fchs
fsub
fsubrp
jmp
in
jmp
out
jmp
lock
jmp
out
pushl
lcall
mov
lcall
mov
lcall
lcall
mov
lcall
ljmp
call
call
xlat
dec
sar
dec
leave
mov
cltd
pushl
lods
jmp
jl
decb
incl
add
add
loop
add
mov
lcall
mov
int
dec
int
dec
sar
std
leave
lret
iret
sar
fucom
fucomip
jmp
in
jmp
out
pushl
lcall
xchg
mov
ljmp
mov
imul
cmpsb
xchg
sar
mov
lcall
mov
lcall
mov
call
call
aam
dec
int
inc
inc
mov
jmp
cwtl
jmp
decb
pop
incl
add
add
aam
add
mov
mov
int3
dec
int3
dec
into
call
aad
rcl
cld
leave
lret
fucom
fucomip
dec
sar
lcall
mov
fwait
test
std
xchg
ja
std
mov
xchg
std
xchg
std
xchg
std
mov
std
popf
adcb
stos
inc
jmp
mov
lcall
mov
xlat
dec
sar
dec
leave
inc
sar
mov
scas
ljmp
mov
lcall
ja
incb
pusha
incl
add
add
cmpsl
xchg
imul
mov
mov
leave
dec
enter
lret
into
sar
call
rcr
cld
mov
fucom
ljmp
xchg
js
std
mov
std
mov
xchg
std
xchg
std
xchg
std
xchg
std
xchg
std
xchg
std
fwait
jge
inc
mov
in
lcall
mov
jmp
dec
int3
inc
sarb
pushl
lcall
xchg
jl
std
mov
incb
outsb
testb
add
clc
test
movsb
stc
mov
inc
sar
dec
int3
dec
sar
call
xlat
aad
cld
enter
rcl
lcall
pop
jmp
adc
push
jmp
adc
ljmp
sub
fidivrs
std
lea
std
mov
std
xchg
std
xchg
std
xchg
std
sahf
subb
sahf
push
sahf
std
lcall
inc
mov
inc
mov
mov
std
stos
popf
std
lahf
lcall
jnp
incb
pop
cld
test
out
add
lahf
xchg
aad
mov
inc
sar
mov
mov
dec
int3
dec
sar
call
aam
cld
mov
mov
push
adc
incl
add
incl
add
incl
add
incl
add
pushl
cs
mov
popf
jg
std
mov
std
xchg
std
xchg
std
mov
loope
or
movsb
xchg
in
lcall
mov
pushl
sar
mov
scas
lods
mov
jmp
cmp
lea
andb
push
cld
sti
xchg
jne
cld
lcall
mov
scas
mov
mov
dec
lret
dec
sar
call
aam
cld
mov
ja
add
add
add
add
add
add
add
add
add
add
xor
xor
cmp
xor
std
mov
std
xchg
std
xchg
std
test
mov
pop
pushl
mov
lcall
mov
mov
mov
stos
sahf
jmp
xchg
call
imul
jp
cld
jg
mov
clc
test
xchg
std
ljmp
pushl
mov
inc
mov
dec
leave
dec
int
inc
ret
jbe
incl
add
incl
add
incl
add
incl
push
push
decl
push
push
call
adc
jmp
and
pushl
cmp
std
xchg
std
xchg
std
xchg
std
test
movsl
mov
mov
mov
lcall
test
pushl
sahf
push
popf
test
sti
lcall
std
xchg
std
jge
std
jle
in
imull
add
iret
movb
cltd
mov
jmp
cmpsb
pushl
scas
mov
mov
inc
enter
mov
push
add
incl
add
incl
add
call
adc
jmp
and
incl
add
incl
add
pushl
push
push
std
mov
xchg
std
xchg
std
test
inc
mov
jmp
mov
lcall
lods
pushl
lahf
cld
mov
jo
out
pop
in
sbbb
sbbl
stc
popf
test
add
add
sahf
mov
xchg
xchg
ljmp
stos
pushl
stos
mov
mov
mov
mov
ljmp
sbb
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
xchg
std
xchg
std
nop
outsl
fdivr
mov
inc
lcall
mov
lahf
stos
sahf
jmp
ljmp
jmp
jb
std
jmp
pop
hlt
shll
add
add
cwtl
cmpl
mov
ljmp
stos
mov
std
stos
sahf
std
mov
mov
mov
mov
outsl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
pushl
das
std
xchg
std
xchg
std
xchg
std
lods
xchg
pop
jmp
mov
lcall
lahf
movsl
xchg
cld
cwtl
cmp
cltd
xchg
call
fistpll
in
xchg
repnz
lds
repz
lcall
jmp
xchg
mov
pushl
cmpsb
pushl
mov
jmp
pop
incl
add
incl
add
incl
add
lcall
jns
std
xchg
std
mov
stos
xchg
nop
test
lcall
xchg
jmp
cwtl
test
sti
mov
mov
sbbl
hlt
mov
add
hlt
ret
std
nop
js
cwtl
test
cld
fwait
mov
ljmp
cmpsl
ljmp
lahf
ljmp
cmpsb
scas
movsb
fmuls
jmp
push
adc
sub
adc
int3
outsl
push
std
outsl
std
mov
test
jmp
lcall
xchg
jmp
mov
call
ja
decb
push
std
jg
cmc
stc
lahf
mov
cmc
mov
jne
std
mov
lcall
xchg
ljmp
mov
jmp
fwait
ljmp
cwtl
cli
lahf
clc
fwait
mov
popf
mov
mov
mov
lcall
mov
lcall
mov
lcall
cmp
nop
js
decl
addr16
jge
std
ja
cld
stc
xchg
jl
imull
je
lea
call
mov
jmp
popf
jmp
mov
lcall
jmp
lcall
lcall
cmp
cltd
xchg
call
jl
decl
jo
incl
pop
js
jb
sti
mov
out
add
add
add
add
mov
outsl
out
jne
lcall
mov
jmp
xchg
lcall
jg
call
cmp
xchg
jg
call
std
mov
decb
jo
incl
gs
jle
js
pushl
insl
inc
cld
andl
iret
movb
add
add
mov
outsb
lods
incb
je
call
test
jmp
test
decl
insl
decl
imul
xchg
incb
pop
jle
jns
pushl
pushl
ljmp
insb
inc
sti
cld
jg
jl
mov
add
add
add
lds
dec
std
xchg
incb
insl
call
jns
call
js
decl
pop
js
je
std
outsb
inc
ljmp
ljmp
ljmp
ljmp
ja
repnz
xchg
js
idivb
add
repz
mov
pop
std
andb
jg
incl
decl
insb
decl
outsb
decl
pop
incl
incb
js
clc
stos
xchg
and
in
in
add
ret
stc
pushf
test
cld
mov
cld
lea
incb
pusha
incl
incl
pop
std
jno
cld
jae
clc
test
rolb
incb
add
add
incb
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
jmp
add
add
cld
jg
clc
add
add
xor
add
pop
add
addl
inc
pop
add
cld
add
jmp
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
push
add
add
add
clc
add
add
add
cld
add
add
add
incl
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
insl
xor
add
add
mov
add
mov
push
add
inc
add
add
add
add
or
push
bound
outsl
ja
gs
add
adc
outsl
arpl
inc
je
cs
bound
outsl
ja
gs
add
pop
dec
add
add
add
or
add
add
add
add
add
add
add
add
add
rclb
jae
iret
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
add
inc
addb
add
add
add
add
add
add
or
push
bound
outsl
ja
gs
add
adc
outsl
arpl
inc
je
cs
bound
outsl
ja
gs
add
add
pop
add
add
sub
pushf
add
add
add
add
add
add
add
add
add
add
rclb
jae
iret
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
add
inc
addb
add
add
add
add
add
add
inc
imul
adc
add
add
or
or
add
add
add
add
push
add
gs
add
add
add
pop
mov
or
add
incl
pop
add
add
push
add
gs
add
add
add
add
mov
xor
add
add
or
inc
outsl
insl
insl
popa
outsb
xor
add
or
inc
js
je
es
sub
add
mov
add
add
add
add
add
sub
incl
fiadds
add
or
add
bound
outsl
ja
gs
add
adc
outsl
arpl
inc
je
cs
bound
outsl
ja
gs
add
add
add
add
sub
pushf
add
add
add
and
add
sbb
add
add
add
add
rclb
jae
iret
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
add
inc
addb
add
add
add
add
add
add
popa
jo
xor
push
add
adc
xchg
or
incl
cmp
add
add
gs
xor
add
add
add
inc
inc
add
ja
inc
add
add
pop
add
mov
add
mov
ret
incl
add
add
add
push
add
add
incl
add
add
add
inc
add
add
add
mov
add
pop
inc
add
add
add
inc
add
add
add
incl
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
incl
add
add
inc
add
add
xchg
pop
inc
add
add
add
add
push
add
add
incl
add
add
inc
add
loopne
add
add
add
pop
inc
add
pop
inc
add
add
add
add
add
dec
add
pushl
clc
mov
add
add
add
inc
add
add
add
incl
add
add
js
add
inc
add
add
add
pop
inc
add
pop
inc
add
or
add
incl
add
xor
bound
arpl
cs
insb
add
add
sub
or
add
add
push
clc
jb
add
decl
add
add
add
add
add
add
pop
inc
add
adc
add
jle
add
test
add
test
add
push
dec
inc
dec
inc
add
inc
dec
inc
add
mov
add
push
add
add
repz
push
cmp
add
nop
add
add
add
add
push
inc
add
add
add
jno
xorl
js
push
test
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
incl
add
add
inc
add
add
nop
and
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
pusha
inc
add
add
add
inc
add
add
add
adc
xor
inc
add
add
add
inc
add
xchg
inc
add
add
cmp
add
or
incl
add
add
add
add
inc
add
and
sbb
js
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
inc
add
inc
add
adc
inc
add
pusha
inc
add
incl
add
jecxz
add
subl
jmp
subl
jmp
subl
jmp
subl
jmp
subl
jmp
subl
jmp
add
add
add
inc
add
add
add
inc
add
incl
add
add
inc
add
add
add
and
add
add
add
add
add
inc
popa
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
adc
js
inc
add
add
add
add
inc
add
inc
add
add
push
add
add
xchg
inc
add
incl
add
add
add
add
and
sbb
mov
popa
inc
add
popa
inc
add
popa
inc
add
bound
popa
inc
add
popa
inc
add
add
add
inc
add
pusha
inc
add
adc
inc
add
adc
add
into
popa
inc
add
incl
add
packsswb
add
incl
add
shlb
add
add
add
xor
insb
and
incl
add
fsubs
subl
jmp
subl
jmp
subl
jmp
add
add
add
add
add
inc
add
add
add
xchg
inc
add
add
add
xchg
inc
add
add
add
nop
inc
add
add
add
add
add
add
add
add
nop
inc
add
add
add
add
add
add
add
add
inc
add
add
add
mov
pop
add
add
add
les
add
add
add
add
mov
pop
add
add
mov
pop
add
add
add
add
add
inc
add
add
add
mov
pop
add
add
add
add
mov
pop
add
add
inc
add
add
add
addl
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
inc
add
add
add
addl
mov
add
cmp
inc
add
add
add
addl
mov
add
add
inc
add
add
add
inc
add
add
add
jg
add
add
add
inc
add
add
add
inc
add
add
add
jle
add
add
add
add
add
add
jle
add
add
add
inc
add
add
add
lahf
inc
add
enter
pop
add
or
inc
add
inc
add
loopne
add
bound
sub
add
add
push
add
inc
add
add
add
popf
inc
add
incl
add
add
jns
add
inc
add
add
add
cmp
add
inc
add
add
add
test
add
add
sbb
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
call
add
mov
roll
test
clc
test
inc
add
add
xchg
add
add
and
add
mov
inc
add
add
add
adc
cmp
add
mov
add
mov
add
mov
inc
add
add
add
or
add
xchg
add
add
add
add
add
addr16
add
and
lock
add
add
add
add
mov
add
incl
add
add
add
add
push
and
pushf
jge
add
incl
add
inc
add
add
add
les
add
jge
add
add
add
sbb
dec
add
add
add
loopne
inc
add
and
xchg
xchg
add
add
pusha
imul
jp
inc
add
add
add
inc
add
inc
add
adc
inc
add
inc
add
add
inc
add
adc
inc
add
inc
add
add
inc
add
adc
inc
add
inc
add
adc
inc
add
adc
add
les
add
inc
add
adc
inc
add
inc
add
add
add
inc
add
inc
add
adc
inc
add
add
add
sbb
add
add
add
push
add
subl
jmp
add
add
add
inc
add
add
add
sahf
inc
add
incl
add
add
inc
add
imul
clc
imul
push
jl
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
and
add
cmp
inc
add
add
add
dec
add
add
push
add
add
add
add
cmp
pop
add
jb
outsl
add
jb
popa
add
and
inc
add
insb
add
jae
pop
add
imul
outsl
add
outsl
add
je
pusha
jl
add
add
sub
xor
add
test
or
add
loopne
inc
add
jl
add
add
add
add
cmp
add
add
inc
add
add
add
lahf
and
adc
inc
add
add
add
sub
cmp
add
test
pop
add
add
and
js
inc
add
add
add
add
inc
add
add
add
jl
inc
add
jge
add
add
add
pop
add
add
incl
add
add
add
add
lahf
and
pushf
jge
add
incl
adc
dec
add
add
add
sub
inc
add
jge
add
add
add
adc
dec
add
add
add
xchg
outsb
inc
add
lahf
and
int3
jge
add
add
add
adc
push
add
add
jge
add
add
hlt
outsb
inc
add
lahf
and
in
inc
add
add
inc
add
add
add
add
push
outsl
inc
add
jge
add
add
add
jo
add
jo
add
jo
add
jo
add
add
inc
add
inc
add
add
add
add
adc
inc
add
adc
add
jl
inc
add
adc
inc
add
adc
inc
add
add
add
inc
add
adc
inc
add
adc
add
int3
push
add
adc
inc
add
adc
inc
add
add
add
push
add
adc
inc
add
adc
add
inc
jo
add
inc
add
adc
inc
add
adc
inc
add
add
adc
inc
add
adc
add
insb
imul
imul
aam
inc
add
adc
inc
add
inc
add
adc
inc
add
adc
add
subl
jmp
subl
jmp
subl
jmp
subl
jmp
subl
jmp
subl
jmp
subl
jmp
subl
jmp
subl
jmp
add
add
add
add
add
add
add
add
add
addl
add
add
add
add
add
push
mov
xor
adc
xlat
add
xor
rclb
xchg
dec
add
scas
lods
dec
popa
push
or
scas
int
adc
leave
loop
aad
imul
icebp
dec
scas
test
addr16
lods
mov
mov
rorl
mov
cmp
add
add
add
add
decl
add
add
xchg
dec
mov
loop
pop
insb
add
dec
mov
inc
shl
add
add
push
and
add
add
add
add
add
add
aad
add
add
insb
add
add
add
push
add
push
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
incl
add
add
add
add
sub
add
add
add
popa
fs
je
je
add
outsl
arpl
cs
insb
add
inc
outsl
arpl
inc
je
cs
bound
outsl
ja
gs
push
bound
outsl
ja
gs
lock
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
enter
aad
add
call
add
add
lock
test
adc
sub
sub
lock
test
adc
sub
sub
lock
test
adc
sub
sub
jl
outsl
cmpsb
inc
stos
cmpsb
lret
fidivrl
sub
mov
sub
push
cwtl
lret
inc
cmp
add
add
nop
movsl
mov
dec
xchg
jo
gs
mov
daa
popa
dec
stos
dec
inc
mov
fdivrs
or
add
add
push
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
std
jmp
std
jmp
std
jmp
add
add
add
add
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
or
add
std
incl
add
add
add
add
add
add
addl
add
add
popa
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
push
inc
dec
dec
inc
push
dec
cs
inc
pop
add
inc
outsl
insl
arpl
imul
gs
push
insb
imul
add
cmp
add
rolb
add
fadds
add
or
add
and
add
add
add
add
add
jp
add
xchg
add
add
add
add
popf
fstl
add
lock
sub
popf
fstl
add
lock
sub
fstl
add
lock
sub
scas
test
add
jecxz
mov
sbb
mov
pop
aad
cmp
cmp
add
add
roll
stos
and
lret
loop
ja
inc
jnp
mov
and
push
fistpll
add
jbe
push
xor
add
add
add
add
add
add
add
add
jb
add
jb
add
add
add
add
test
jmp
std
jmp
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
sti
std
incl
add
add
add
add
add
add
mov
add
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
add
add
add
cmp
aaa
add
add
xor
dec
push
inc
dec
dec
inc
push
dec
cs
inc
pop
add
inc
outsl
insl
arpl
imul
gs
outsl
insl
bound
dec
insl
popa
addr16
outsl
insl
bound
cmp
add
jo
add
cmp
add
rolb
add
fadds
add
add
add
clc
add
add
add
add
add
inc
add
add
add
bound
add
add
add
xchg
fmuls
adc
out
lea
mov
add
xchg
fmuls
adc
out
lea
cmpsl
fisttpll
xor
mov
stos
sub
test
pop
inc
mov
fstp
js
ret
pop
incl
add
clc
out
add
inc
test
iret
pop
add
aad
mov
or
dec
popf
jge
pminub
pop
mov
and
imul
inc
mov
or
add
add
push
and
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
arpl
xor
cmp
data16
add
add
add
add
add
add
data16
add
add
add
add
add
aaa
add
aaa
add
aaa
add
add
push
push
dec
dec
push
inc
dec
cs
inc
pop
add
push
imul
imul
outsl
arpl
push
imul
stos
push
add
stos
push
xor
add
cmp
add
rolb
add
fadds
add
call
add
add
add
add
jl
insl
scas
iret
adc
push
add
insl
fstpt
scas
iret
adc
push
add
insb
fstpt
scas
iret
adc
push
add
movsl
and
and
cmpsb
inc
xchg
sbb
mov
dec
adc
lcall
inc
jne
imul
cmp
add
add
add
add
decl
add
add
out
ja
mov
jbe
fdivl
sub
repnz
dec
mov
test
pop
insb
int
add
add
popw
push
and
add
add
add
add
pop
add
pop
add
xchg
add
add
add
add
popa
jae
xor
bound
outsl
arpl
push
push
popa
jbe
inc
insb
popa
jae
dec
bound
arpl
je
cs
push
popa
jbe
inc
insb
popa
jae
add
outsl
arpl
popa
jbe
inc
insb
popa
jae
add
pop
add
add
add
fsub
inc
add
sahf
inc
add
incl
add
add
loopne
add
and
push
push
lea
or
or
js
add
add
add
add
add
add
add
add
subb
push
test
sub
add
add
add
add
incl
add
add
add
pop
inc
add
decl
add
add
add
inc
add
add
add
jnp
add
add
add
incl
add
addb
add
add
movsb
pop
inc
add
push
mov
add
add
cmp
inc
add
add
add
jnp
add
add
add
add
add
incl
add
addb
add
add
sbb
add
push
mov
add
add
dec
loopne
add
add
add
inc
add
add
add
incl
add
addb
add
add
loopne
inc
add
push
mov
add
add
jo
inc
add
add
add
inc
add
add
add
add
add
incl
add
addb
add
add
pop
pop
inc
add
mov
add
add
add
add
add
add
add
add
incl
add
addb
add
add
movsb
gs
add
lcall
add
insb
jnp
add
add
add
jp
add
incl
add
add
add
call
add
in
inc
add
add
add
jp
add
incl
add
adcb
add
add
int3
pusha
inc
add
fcoml
add
fdivrl
add
add
add
inc
add
incl
add
adcb
add
add
sbb
add
sbb
faddl
or
push
add
add
add
add
add
incl
add
add
incl
add
andb
add
add
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
orb
add
add
push
xchg
inc
add
add
add
add
add
add
add
add
jnp
add
jnp
add
add
test
add
mov
mov
mov
inc
outsl
jb
xor
add
dec
outsl
fs
xor
dec
outsl
fs
xor
inc
outsw
jb
gs
gs
jae
add
add
push
outsb
fs
je
imul
add
add
jo
dec
outsb
outsw
add
add
inc
outsl
jb
xor
add
insl
outsl
fs
popa
imul
dec
inc
add
mov
add
add
popa
jae
xor
add
imul
add
add
add
add
add
add
add
or
add
add
jb
imul
add
add
or
add
add
jo
add
add
arpl
jo
add
inc
outsl
js
add
add
dec
add
add
aaa
add
inc
add
add
add
add
add
add
add
add
add
add
add
sub
add
inc
add
add
inc
add
add
add
add
add
add
inc
add
jge
add
add
xchg
movl
mov
and
icebp
decl
adc
push
lret
das
hlt
pop
inc
sbb
sbbl
push
cmp
add
outsb
aad
cmp
xchg
inc
imul
or
pop
cltd
dec
aam
cltd
pop
push
bound
outsl
ja
gs
add
mov
scas
inc
cltd
pop
cmc
adc
cwtl
std
pushf
inc
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
jae
outsl
arpl
outsl
arpl
push
dec
inc
outsl
arpl
inc
je
add
mov
add
add
add
add
add
add
jl
add
out
add
xor
add
dec
lods
xor
or
stos
add
xchg
push
imul
cs
push
add
xor
inc
cmp
outsl
addr16
insl
and
insb
gs
jbe
ss
imul
cs
dec
inc
add
add
sbb
inc
add
add
add
add
add
add
add
inc
add
inc
add
xor
add
bound
outsl
ja
gs
add
gs
add
cmp
xor
or
stos
add
xchg
inc
outsl
jb
add
add
pop
dec
lods
xor
or
stos
add
xchg
inc
imul
fisttpl
xor
or
stos
add
xchg
dec
popa
bound
xor
add
dec
lods
xor
or
stos
add
xchg
inc
outsl
insl
insl
popa
outsb
xor
add
add
bound
outsl
ja
gs
add
adc
add
add
adc
add
pop
add
add
gs
xor
add
gs
imul
jae
add
add
inc
add
jle
add
add
sub
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
outsl
jb
addr16
jne
fs
imul
jle
add
inc
add
add
xor
inc
add
or
je
jmp
push
mov
call
jmp
add
add
gs
gs
xor
cs
insb
add
add
or
outsl
popa
fs
imul
add
add
lods
jle
add
jle
add
add
inc
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
jns
je
insl
inc
imul
jns
add
inc
add
add
dec
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
gs
inc
imul
add
add
add
pop
out
add
or
je
jmp
push
mov
call
jmp
add
add
gs
gs
jo
popa
je
inc
add
add
inc
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
dec
push
push
dec
dec
push
inc
dec
outsl
arpl
add
add
add
add
inc
add
add
fs
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
add
add
jo
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
jb
gs
imul
lods
jle
add
add
add
jl
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
jae
gs
insb
xor
cs
insb
add
add
add
gs
insb
inc
js
arpl
gs
add
add
addb
add
mov
inc
add
or
je
jmp
push
mov
call
jmp
add
add
jae
add
add
add
add
inc
xor
add
addb
addb
add
xchg
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
lock
addl
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
sub
loopne
insb
mov
inc
mov
inc
lock
addl
lods
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
lock
addl
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
push
add
add
insb
dec
outsl
jbe
dec
gs
outsl
jb
add
add
addl
add
add
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
outsl
xor
add
add
sldt
add
gs
outsl
popa
fs
imul
add
add
add
add
shl
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
cld
addl
add
add
fsub
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
outsl
bound
dec
outsl
arpl
add
addl
add
add
call
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
addl
add
add
hlt
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
outsl
bound
inc
jb
add
cld
addl
add
add
add
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
xor
add
add
add
add
push
dec
inc
inc
jb
insl
push
je
imul
add
addl
add
or
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
add
addl
test
add
add
sbb
inc
add
or
je
jmp
push
mov
call
jmp
add
add
popa
addr16
jb
insl
push
gs
add
add
add
add
add
add
add
add
add
inc
inc
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
jae
outsl
insb
xor
je
bound
jae
outsl
insb
add
jo
inc
add
add
add
add
add
add
add
test
and
inc
add
xor
add
mov
add
inc
js
push
je
jb
dec
outsl
popa
add
add
or
pusha
add
add
pop
add
imul
outsl
add
jae
pop
add
jns
jae
je
add
xor
xor
pop
add
add
add
add
add
add
add
cmp
push
add
xor
and
push
add
xor
add
add
cmp
inc
add
add
add
add
add
add
add
jae
incl
add
add
add
add
dec
add
jb
outsl
add
add
je
and
bound
add
imul
sbb
add
push
add
push
add
outsl
add
add
je
and
add
add
add
insb
daa
inc
mov
inc
incl
rorb
nop
scas
out
dec
cmpl
jg
sbb
addl
push
test
test
mov
push
inc
cmpsl
add
lods
sub
popa
push
stos
and
lret
loop
ja
insl
popa
addr16
outsl
insl
bound
add
repz
fwait
aad
sbb
mov
cmp
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
dec
push
inc
dec
dec
inc
push
dec
outsl
arpl
add
add
inc
outsl
insl
arpl
imul
add
add
add
add
add
add
xor
inc
add
inc
add
out
add
xor
add
je
add
jae
dec
popf
jge
pminub
pop
mov
imul
add
add
dec
push
push
imul
imul
addl
add
add
add
add
test
inc
add
out
add
xor
add
out
ja
mov
jbe
fdivl
sub
imul
gs
insb
popa
jae
xor
lcall
dec
mov
iret
mov
inc
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
dec
popa
arpl
insl
gs
inc
insb
popa
jae
pop
inc
insb
popa
jae
xor
bound
outsl
arpl
push
push
popa
jbe
inc
insb
popa
jae
dec
bound
arpl
je
add
add
add
add
add
add
add
add
adc
inc
add
out
add
xor
add
nop
movsl
mov
dec
xchg
jo
gs
mov
imul
push
add
add
add
jo
add
add
add
sub
add
push
add
cmp
das
add
add
ja
ja
add
add
xor
xor
xor
xor
add
outsl
add
add
add
add
add
je
je
jo
cmp
das
add
add
ja
ja
add
add
xor
xor
xor
xor
add
outsl
add
das
add
add
dec
add
add
je
insl
add
add
addl
add
add
xor
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
addb
add
je
je
jo
cmp
das
add
add
ja
ja
add
outsl
add
add
add
add
outsb
add
add
add
jb
arpl
push
add
add
push
add
add
outsl
add
jb
arpl
add
add
add
cmp
add
xor
xor
xor
xor
add
jno
cmp
add
jno
cmp
add
add
je
je
jo
cmp
das
add
add
ja
ja
add
popa
add
add
add
outsl
add
das
add
aas
add
add
add
xor
xor
xor
xor
add
push
add
add
add
and
add
and
or
add
and
add
add
add
or
add
add
add
or
add
and
add
and
or
mov
add
add
add
gs
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
cld
addl
add
add
inc
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
outsl
arpl
jae
xor
jb
je
add
addl
add
add
dec
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
outsl
arpl
jae
xor
js
add
add
add
add
fs
xor
inc
imul
cld
addl
add
add
pop
out
add
or
je
jmp
push
mov
call
jmp
add
add
outsl
fs
xor
dec
gs
add
add
cld
addl
add
add
fs
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
addl
add
add
jo
inc
add
or
je
jmp
push
mov
call
jmp
add
add
or
sub
xor
or
stos
add
xchg
adc
add
add
outsb
add
add
add
add
add
addl
add
add
jl
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jbe
inc
imul
addl
add
add
mov
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
add
push
add
add
add
add
icebp
dec
lods
xor
or
stos
add
xchg
or
add
and
inc
add
imul
add
add
or
add
inc
add
imul
add
pop
pop
jbe
popa
dec
bound
gs
cmp
add
add
jo
insb
add
jb
add
and
push
add
cmp
das
add
add
ja
ja
add
add
add
add
add
outsl
add
add
push
inc
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
push
popa
jb
outsl
jbe
add
add
pop
pop
jbe
popa
dec
popa
je
dec
fs
popa
insb
insb
add
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
dec
bound
gs
fs
data16
add
test
xchg
out
add
cmp
push
add
xor
add
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
inc
imul
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
pop
pop
jbe
popa
inc
imul
add
sldt
add
je
imul
outsb
addr16
add
pop
pop
jbe
popa
dec
jae
je
imul
fs
jbe
popa
dec
jb
jae
insb
je
push
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
inc
jb
dec
outsl
jbe
add
add
pop
pop
jbe
popa
dec
outsb
inc
jb
outsl
jb
add
add
sub
add
add
sub
add
pop
pop
jbe
popa
push
je
inc
insl
jo
pop
pop
jbe
popa
push
je
inc
outsl
jo
add
add
pop
pop
jbe
popa
push
popa
jb
outsl
jo
add
add
pop
pop
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
push
outsl
push
outsb
imul
add
add
add
jbe
popa
push
gs
jns
je
insl
inc
jb
outsl
jb
pop
pop
jbe
popa
push
je
push
outsl
inc
outsb
jae
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
push
popa
jb
outsl
jbe
add
jbe
popa
push
je
dec
outsl
jbe
add
add
or
or
add
add
or
add
or
inc
add
inc
add
add
cwtl
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
insb
insb
push
imul
outsl
arpl
or
inc
add
mov
add
add
movsb
out
add
or
je
jmp
push
mov
call
jmp
add
add
outsl
jae
dec
gs
popa
addr16
add
add
or
inc
add
inc
add
add
mov
inc
add
or
je
jmp
push
mov
call
jmp
add
add
outsb
fs
gs
popa
addr16
add
add
or
inc
add
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jne
inc
bound
push
je
imul
addl
add
add
enter
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
fs
insb
add
push
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
popl
clc
popl
add
add
aam
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
outsb
jne
push
imul
or
inc
add
inc
add
add
loopne
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
push
imul
add
call
nop
inc
add
add
in
out
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
jb
popa
fs
jb
arpl
jae
add
add
call
nop
inc
add
add
clc
out
add
or
je
jmp
push
mov
call
jmp
add
add
inc
add
add
add
inc
add
or
je
jmp
push
mov
call
jmp
add
add
adc
mov
inc
mov
add
lock
sub
test
adc
sub
sub
add
add
add
add
add
push
pop
dec
push
fisttpl
sbb
add
add
xor
or
stos
add
xchg
mov
dec
sbb
mov
cmp
add
add
xor
add
push
add
add
jno
insb
add
add
outsb
add
add
js
add
add
jbe
popa
dec
outsb
push
je
push
popa
jb
add
pop
pop
jbe
popa
dec
xor
jb
add
jbe
popa
inc
jb
outsl
jb
jbe
jb
insb
outsl
ja
add
jbe
popa
push
gs
insl
add
jbe
popa
push
je
dec
xor
add
jbe
popa
dec
outsb
push
je
add
pop
pop
jbe
popa
inc
jb
gs
bound
imul
pop
pop
jbe
popa
dec
popa
je
dec
fs
popa
insb
insb
dec
add
add
jbe
popa
inc
popa
jae
dec
bound
popa
jb
pop
pop
jbe
popa
inc
popa
jae
dec
bound
add
add
jbe
popa
push
je
inc
imul
pop
pop
jbe
popa
push
arpl
jae
push
outsl
push
outsb
imul
jbe
popa
push
arpl
imul
add
and
add
pop
add
imul
outsl
add
jae
pop
add
jns
jae
je
add
xor
xor
pop
add
add
add
add
add
add
add
add
add
add
add
incb
xchg
lock
adc
add
or
xchg
adc
ss
lahf
add
add
call
xchg
inc
add
add
add
outsl
add
add
imul
add
add
pop
pop
jbe
popa
push
popa
jb
gs
bound
fs
data16
add
pop
pop
jbe
popa
dec
bound
popa
jb
sub
push
add
xor
push
pop
stos
mov
leave
pop
inc
sahf
push
pop
and
jbe
popa
dec
popa
je
dec
gs
inc
popa
insb
insb
add
add
pop
pop
jbe
popa
dec
gs
add
add
jbe
popa
push
popa
jb
gs
bound
add
jbe
popa
push
popa
jb
popa
je
add
add
and
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
jo
xor
add
or
add
inc
imul
outsl
ja
add
inc
add
xchg
inc
add
add
adc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
imul
outsb
addr16
add
or
inc
add
inc
add
add
sbb
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
popa
jns
jb
fs
imul
je
imul
add
inc
add
add
add
sub
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
nop
pop
mov
sbb
outsl
or
mov
and
push
add
xor
inc
insb
popa
jae
add
add
adc
adc
xor
push
inc
dec
outsb
je
jb
popa
insb
add
and
add
push
add
add
add
add
add
add
xchg
inc
add
inc
add
xor
add
gs
add
add
inc
outsl
jne
je
add
push
gs
outsl
jbe
add
dec
gs
outsb
jne
add
add
add
add
inc
adc
inc
add
add
add
add
add
add
jg
inc
insb
xchg
js
imul
insl
xor
dec
adc
xchg
and
iret
outsb
fstpl
dec
inc
mov
ss
data16
add
add
adc
pop
add
add
add
add
add
add
dec
add
add
dec
sbb
mov
cmp
sbb
les
js
stos
add
cmp
add
add
add
inc
add
add
add
jbe
popa
dec
outsb
inc
jae
jb
add
add
jbe
popa
push
popa
jb
popa
jb
dec
outsl
data16
add
pop
pop
jbe
popa
push
gs
data16
popa
jb
bound
add
pop
pop
jbe
popa
push
popa
jb
gs
popa
jb
fs
data16
add
pop
pop
jbe
popa
inc
popa
imul
outsb
add
add
jbe
popa
dec
bound
jae
add
int3
xor
add
ss
inc
dec
lods
js
push
test
test
xlat
fidivl
insb
daa
inc
mov
inc
incl
cmp
xor
or
stos
add
xchg
xchg
add
add
add
add
add
insl
xor
or
outsl
jb
xor
sbb
add
and
jmp
insl
xor
xor
xchg
add
add
add
aas
or
add
incl
jo
add
add
outsl
arpl
popa
jbe
inc
insb
popa
jae
xor
jmp
add
outsl
arpl
popa
jbe
inc
insb
popa
jae
dec
bound
arpl
je
cs
push
popa
jbe
inc
insb
popa
jae
add
loopne
clc
pop
filds
incl
lar
sub
sbb
add
addr16
push
add
add
adc
add
or
add
add
add
or
add
add
or
add
add
or
push
add
add
imul
outsl
add
add
or
push
add
add
add
add
add
add
add
add
add
add
imul
add
or
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
insb
add
add
add
add
xor
add
or
add
add
xor
add
or
add
add
add
or
add
add
or
add
add
add
or
add
add
add
xor
add
or
add
add
xor
add
or
add
add
or
add
add
xor
add
or
or
add
popa
add
add
add
add
add
data16
insb
add
add
add
add
add
or
push
imul
add
adc
dec
push
push
imul
imul
outsl
arpl
sub
sub
add
and
adc
add
add
add
add
add
add
add
add
push
or
add
rolb
add
add
or
dec
insl
popa
addr16
outsl
insl
bound
add
push
add
inc
outsl
insl
arpl
imul
gs
outsl
insl
bound
add
addb
add
add
add
sub
push
add
and
adc
add
add
add
add
and
push
add
push
add
add
add
out
int
add
add
add
add
add
add
addb
adc
or
add
dec
add
popa
add
add
outsl
add
bound
outsl
add
add
add
add
fsubrp
mov
xor
adc
incl
scas
add
add
add
imul
add
inc
outsl
insl
arpl
imul
gs
add
push
push
or
ja
sldt
sub
je
add
and
adc
add
add
add
add
scas
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
out
int
add
add
add
add
add
pushl
lock
pop
fsubrp
mov
xor
adc
incl
sbb
add
add
add
gs
add
pop
sub
add
add
add
lahf
inc
add
add
add
inc
add
add
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
add
add
lahf
inc
add
jge
add
lahf
inc
add
inc
add
inc
add
add
add
add
inc
add
lahf
inc
add
add
add
popf
inc
add
fwait
inc
add
add
inc
add
inc
add
add
add
add
add
fwait
inc
add
inc
add
incl
add
add
add
add
push
push
sub
add
sub
incl
add
add
add
add
pusha
pushf
lcall
push
das
add
add
incl
add
add
add
add
add
add
add
add
pop
add
add
incl
add
add
add
add
push
push
sldt
add
incl
add
add
add
add
push
push
das
add
sub
call
popf
inc
add
inc
add
add
add
add
add
add
push
push
sldt
add
std
push
incl
add
add
add
add
pusha
jl
inc
add
add
add
incl
add
add
add
add
push
push
xor
add
sub
add
add
add
jmp
add
push
cmp
add
lahf
inc
add
add
add
incl
add
add
push
das
xor
int3
pusha
inc
add
add
add
incl
add
add
add
add
push
push
xor
add
add
adc
stc
push
incl
add
add
add
add
pusha
enter
push
sub
adc
add
insb
lahf
inc
add
add
add
add
add
add
pusha
fcomps
add
push
das
xor
mov
add
pusha
inc
add
add
add
pusha
inc
add
incl
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
mov
add
incl
add
add
add
add
add
add
lcall
cwtl
lcall
jl
inc
add
add
add
add
add
movsb
gs
add
incl
add
add
add
jl
inc
add
add
add
add
add
add
add
subb
incl
add
add
add
add
add
add
inc
add
add
add
pushf
inc
add
add
add
add
add
add
add
or
inc
add
inc
add
inc
add
incl
add
add
fwait
inc
add
incl
add
add
jl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
jge
add
add
gs
inc
add
jae
gs
jns
add
add
inc
dec
popa
insl
add
add
test
push
call
inc
add
xchg
push
call
inc
add
inc
add
add
xchg
pop
call
inc
add
inc
add
inc
add
add
add
inc
outsl
js
add
add
jae
gs
add
add
je
outsb
fs
gs
test
inc
add
inc
add
popa
je
add
add
xor
add
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
mov
mov
lea
call
mov
lea
call
mov
push
lea
push
push
call
push
call
call
mov
lea
push
push
call
lea
call
lea
push
lea
lea
push
push
mov
movl
call
lea
push
call
mov
lea
call
lea
call
mov
push
push
call
mov
lea
call
mov
lea
mov
lea
movl
call
push
jmp
testb
je
lea
call
lea
call
lea
call
ret
mov
lea
call
lea
call
ret
mov
mov
mov
pop
mov
mov
pop
pop
mov
mov
mov
xor
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
mov
lea
push
push
call
lea
push
call
mov
lea
mov
call
lea
call
lea
mov
mov
mov
push
lea
push
call
mov
lea
call
push
push
call
mov
neg
sbb
neg
neg
lea
call
cmp
je
lea
mov
mov
lea
push
call
push
call
cmp
jne
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
lea
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
cmp
jge
push
push
push
push
call
lea
push
lea
push
call
lea
push
lea
push
call
lea
call
mov
push
push
push
push
call
push
lea
push
push
call
push
call
call
push
jmp
testb
je
lea
call
lea
call
lea
call
lea
push
push
call
ret
lea
mov
call
lea
call
lea
push
push
call
lea
mov
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
xor
push
call
movb
jmp
pusha
pusha
pushf
mov
mov
pushl
pushl
pushf
mov
lea
jmp
jmp
mov
lea
jbe
pushf
pushf
jmp
aas
mov
stc
test
pusha
sub
clc
pushl
jmp
jmp
fnclex
movb
pushf
push
mov
lea
jmp
cmc
mov
test
stc
cmc
call
call
aas
mov
adc
lea
push
call
lea
call
mov
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
mov
movl
test
jne
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
lea
mov
mov
push
mov
mov
call
lea
call
mov
test
jne
push
push
call
mov
lea
mov
mov
mov
push
call
fmuls
push
fnstsw
test
jne
fstps
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
movl
fwait
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
xor
push
call
lea
jge
push
mov
push
pushf
push
jmp
mov
or
mov
bt
pusha
sub
je
add
pushf
call
mov
movb
pushf
mov
jmp
mov
jmp
pushf
pushf
mov
pushf
mov
push
jmp
rcr
add
call
pusha
jmp
pushl
popl
pushf
pushf
lea
jmp
pushl
movb
pushl
popl
push
lea
jmp
stc
ror
pop
pop
neg
pushl
sbb
and
adc
lea
mov
bt
pushf
cmp
stc
sub
call
mov
push
pushf
pushf
pushf
popl
pusha
pushf
pushf
pushf
pushl
popl
pushf
pushl
push
pushl
lea
jmp
call
mov
push
pushf
popl
movw
mov
pushf
mov
pushl
pushf
push
mov
pushf
pushf
mov
call
inc
jmp
mov
pushf
pushf
push
mov
pushf
lea
jmp
pusha
jmp
mov
pusha
pusha
pushf
popl
call
mov
push
movb
lea
jmp
pushl
call
call
pushl
popl
push
pushl
push
movb
lea
jmp
pusha
sub
jge
add
cmc
call
jmp
sub
cmp
shr
jmp
bsf
mov
rcr
ror
mov
or
cmp
xor
cmc
mov
pushf
clc
add
jg
add
push
test
clc
jmp
cmc
pushf
rol
jmp
mov
call
call
mov
call
lea
push
call
lea
call
movl
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
xor
mov
call
test
je
mov
push
call
push
lea
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
mov
lea
push
lea
mov
push
lea
push
push
push
movl
call
cmp
jge
push
push
push
push
call
mov
lea
call
lea
call
mov
lea
push
push
call
lea
push
push
call
lea
lea
mov
movl
call
lea
call
push
call
sub
call
mov
pusha
pushl
lea
jmp
mov
mov
mov
movb
lea
jmp
mov
pushf
jmp
jmp
pusha
mov
push
pushl
push
lea
jmp
pushf
popl
call
jmp
jmp
call
pushf
mov
pushf
pushf
popl
call
pushl
mov
call
call
jmp
mov
push
mov
pushf
mov
push
pushf
pushf
push
lea
jmp
mov
pushl
popl
mov
pusha
push
lea
jmp
pushl
xor
push
xor
jmp
mov
movb
mov
jmp
lea
pushf
clc
rol
call
mov
push
push
lea
jmp
sub
movb
cmp
push
call
pushl
mov
mov
pushf
lea
jmp
lahf
bsf
rol
mov
shr
ja
bswap
mov
test
clc
test
add
call
push
pusha
call
pusha
mov
movw
movb
mov
call
push
mov
mov
push
push
lea
jmp
mov
pushl
mov
movl
jmp
push
jmp
movzbl
dec
bsf
add
shl
bts
call
mov
pushf
pusha
call
call
jmp
pushf
pusha
pushl
popl
movw
mov
pushf
lea
jmp
call
shld
call
mov
pushf
call
pushf
call
push
stc
bswap
mov
cmp
call
pusha
jmp
pushf
pushf
pusha
mov
pushf
call
jmp
push
mov
pushf
mov
pusha
lea
jmp
pushf
popl
jmp
jmp
call
movl
jmp
mov
sub
call
pusha
call
pushf
pushf
popl
btr
push
stc
push
btr
rcr
lea
bts
push
bts
setg
push
bt
rol
setge
push
stc
pushl
cmc
xchg
xchg
push
movl
xchg
mov
mov
call
jmp
movl
add
lea
jg
pusha
mov
push
mov
pusha
pushf
lea
jmp
mov
mov
push
mov
pushf
lea
jmp
pushf
mov
and
ror
neg
mov
call
mov
pushf
pushl
ret
call
rep
btc
pushf
btc
mov
btr
bsr
sub
mov
cld
cmp
pushl
popf
mov
movb
lea
jmp
mov
call
call
mov
pusha
lea
jmp
lea
call
lea
push
call
lea
call
push
jmp
lea
call
lea
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
push
mov
call
push
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
mov
lea
push
lea
push
lea
push
push
push
movl
call
cmp
jge
push
push
push
push
call
lea
call
lea
call
mov
lea
push
push
call
lea
push
push
call
lea
lea
mov
movl
call
lea
call
lea
lea
push
push
movl
movl
call
test
je
call
call
push
jmp
lea
call
lea
call
lea
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
xor
lea
mov
lea
mov
mov
movl
movl
call
lea
push
push
call
lea
fstp
call
mov
push
call
lea
push
push
call
mov
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
mov
fwait
push
jmp
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
mov
mov
call
push
push
push
mov
movl
mov
xor
lea
xor
rep
mov
lea
rep
mov
lea
push
push
rep
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
cmp
mov
je
lea
lea
push
push
push
movl
call
push
push
call
mov
call
lea
lea
push
push
push
call
cmp
je
mov
mov
lea
push
push
call
lea
push
push
mov
movl
call
lea
push
lea
push
push
lea
push
push
call
push
call
mov
lea
lea
push
lea
push
push
push
call
add
lea
push
push
call
mov
lea
call
sub
lea
jo
movswl
mov
lea
push
lea
push
push
movl
call
mov
lea
push
push
push
call
lea
lea
push
push
call
lea
push
call
mov
lea
call
lea
call
lea
lea
push
push
push
call
mov
add
push
push
call
test
je
lea
lea
push
push
push
call
push
mov
push
call
mov
call
lea
lea
push
push
push
call
cmp
jl
xor
jmp
mov
push
call
call
movl
push
jmp
mov
mov
push
call
call
push
jmp
lea
call
lea
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
lea
lea
push
push
push
call
mov
lea
push
call
mov
mov
lea
call
mov
lea
lea
push
push
push
call
mov
add
lea
push
push
push
call
push
call
call
mov
lea
push
push
call
lea
call
lea
push
lea
lea
push
push
mov
movl
call
mov
mov
mov
mov
lea
lea
mov
push
movl
push
lea
push
call
push
lea
lea
push
push
call
push
call
mov
lea
call
lea
lea
push
lea
push
push
push
call
add
push
jmp
testb
je
lea
call
lea
call
lea
lea
push
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
push
call
mov
mov
lea
call
mov
lea
call
mov
mov
cmp
jg
mov
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
mov
lea
call
lea
lea
push
lea
push
push
push
call
add
lea
lea
movl
push
push
mov
call
lea
lea
mov
movl
call
lea
lea
push
push
movl
movl
call
test
je
mov
lea
push
push
call
push
call
mov
call
mov
lea
push
push
call
lea
call
mov
xor
test
setne
neg
test
je
mov
push
push
call
test
jne
jmp
mov
push
push
call
test
jne
mov
lea
call
mov
add
jo
mov
jmp
mov
push
push
call
test
jne
mov
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
lea
push
push
push
call
add
mov
push
call
mov
lea
call
lea
lea
push
push
mov
movl
call
lea
lea
mov
movl
call
lea
lea
push
push
movl
movl
call
test
je
mov
lea
push
push
call
push
call
mov
call
mov
lea
push
push
call
xor
lea
test
sete
neg
mov
call
test
je
push
call
lea
push
push
call
sub
mov
mov
mov
mov
lea
mov
mov
sub
mov
mov
mov
lea
push
mov
mov
push
mov
mov
mov
mov
lea
push
mov
mov
mov
call
push
call
add
lea
push
push
call
movl
push
jmp
lea
lea
push
lea
push
push
push
call
add
lea
call
ret
mov
lea
call
lea
call
lea
call
lea
call
mov
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
mov
test
jne
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
movl
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
lea
mov
mov
movl
push
mov
mov
call
lea
call
mov
test
jne
push
push
call
mov
lea
mov
mov
mov
push
call
fmuls
push
fnstsw
test
jne
fstps
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
movl
fwait
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
mov
mov
xor
lea
mov
mov
call
mov
lea
call
cmp
jne
push
push
call
mov
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
push
mov
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
push
mov
call
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
call
mov
push
call
test
je
mov
mov
lea
mov
mov
call
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
fnclex
jge
push
jmp
mov
lea
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
fnclex
jge
push
mov
push
push
push
call
mov
mov
lea
mov
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
call
mov
mov
push
call
test
mov
jne
mov
mov
mov
mov
lea
mov
push
push
mov
mov
mov
call
lea
lea
push
lea
push
lea
mov
mov
push
lea
movl
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
push
push
call
push
lea
push
call
lea
call
lea
lea
push
lea
push
push
push
call
add
jmp
mov
mov
mov
lea
mov
push
push
mov
mov
mov
movl
call
lea
lea
push
lea
push
lea
mov
mov
push
lea
movl
mov
push
push
call
test
fnclex
jge
mov
push
push
push
push
call
mov
mov
push
push
call
push
lea
push
call
lea
call
lea
lea
push
push
push
call
add
mov
lea
push
push
call
push
push
call
lea
push
push
call
push
jmp
testb
je
lea
call
lea
call
lea
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
lea
mov
push
mov
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
lea
push
push
call
lea
push
push
call
lea
call
push
jmp
testb
je
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
push
mov
call
mov
lea
mov
push
mov
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
mov
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
movl
mov
push
mov
call
mov
mov
push
push
mov
call
test
fnclex
jge
mov
push
push
push
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
lea
mov
push
push
call
cmp
fnclex
jge
mov
push
push
push
push
call
mov
push
push
call
lea
push
push
call
lea
call
push
jmp
testb
je
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
xor
push
mov
call
lea
push
push
call
add
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
xor
push
push
mov
call
lea
push
push
call
add
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
push
mov
call
mov
add
push
mov
mov
mov
push
mov
call
test
je
push
call
push
lea
push
call
push
push
call
lea
call
mov
lea
push
push
call
push
jmp
testb
je
lea
call
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
movl
mov
push
mov
call
mov
add
mov
push
push
call
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
xor
push
push
mov
call
lea
push
push
call
add
push
push
call
lea
call
mov
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmpl
je
call
mov
xor
movw
ret
mov
xor
movw
ret
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
push
mov
call
lea
lea
mov
call
lea
lea
call
push
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
push
mov
call
lea
lea
mov
call
lea
add
push
push
call
push
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
push
mov
call
mov
add
push
mov
mov
call
test
je
lea
push
push
call
jmp
mov
lea
call
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
in
enter
call
add
mov
lret
mov
lret
lret
out
add
cld
lret
or
add
sbb
add
sub
add
ds
add
push
lret
add
fs
add
je
add
mov
add
xchg
lret
add
push
add
subb
add
ror
add
fmulp
add
lock
add
push
int3
add
push
int3
add
cs
add
inc
int3
add
push
add
adcb
adcb
add
add
push
add
xorb
add
int3
add
or
add
mov
add
add
add
push
add
adc
add
in
add
clc
int3
add
adc
add
push
int
add
int
add
add
xorb
add
dec
int
add
add
push
int
add
int
add
add
mov
int
add
int
add
int
add
into
add
push
into
add
xor
add
pop
add
andb
addb
pop
into
add
push
into
add
test
add
test
add
mov
add
movsb
into
add
mov
add
ret
add
into
add
fmulp
add
lock
add
add
add
adc
add
and
add
cmp
add
dec
iret
add
lods
add
andb
pop
iret
add
push
iret
add
mov
add
pushf
iret
add
mov
add
mov
iret
add
fmul
add
imul
add
cli
iret
add
or
add
sbb
add
and
add
rolb
add
rolb
add
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outsb
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
jbe
popa
push
popa
jb
outsl
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outsl
data16
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jb
dec
outsl
jbe
add
add
pop
pop
jbe
popa
dec
outsb
inc
jae
jb
add
add
jbe
popa
push
je
push
popa
jb
outsl
jbe
add
add
jbe
popa
dec
popa
je
dec
fs
popa
insb
insb
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
gs
bound
imul
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
arpl
jae
push
outsl
push
outsb
imul
jbe
popa
push
popa
jb
gs
popa
jb
fs
data16
add
pop
pop
jbe
popa
push
gs
insl
add
add
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
dec
jae
je
imul
add
jbe
popa
push
gs
jns
je
insl
inc
jb
outsl
jb
add
pop
pop
jbe
popa
dec
jb
jae
insb
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
dec
outsb
inc
jb
outsl
jb
add
add
jbe
popa
dec
bound
gs
add
pop
popa
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
add
fs
imul
xor
imul
jbe
popa
push
je
inc
imul
add
pop
inc
dec
jae
outsb
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
imul
add
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
push
je
inc
insl
jo
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
add
pop
pop
jbe
popa
dec
bound
popa
jb
add
inc
insb
insb
inc
jne
arpl
outsb
inc
popa
insb
insb
add
add
jbe
popa
inc
popa
jae
dec
bound
popa
jb
add
pop
popa
fs
data16
je
outsb
add
add
jbe
popa
dec
popa
je
dec
fs
popa
insb
insb
dec
add
add
jbe
popa
push
arpl
imul
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
dec
gs
add
add
dec
jae
jb
add
add
jbe
popa
dec
bound
jae
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outsb
fs
gs
add
add
jbe
popa
push
je
push
outsl
push
outsb
imul
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
popa
imul
outsb
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
dec
outsb
push
je
push
popa
jb
add
pop
pop
jbe
popa
push
popa
jb
popa
je
add
pop
pop
jbe
popa
dec
xor
jb
add
add
dec
insb
outsl
add
add
pop
pop
jbe
popa
inc
jb
outsl
jb
jbe
jb
insb
outsl
ja
add
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
dec
outsb
push
je
add
add
pop
pop
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
dec
gs
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
popa
jb
gs
bound
add
add
jbe
popa
push
je
inc
outsl
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
insb
insb
add
add
pop
pop
jbe
popa
push
je
push
outsl
inc
outsb
jae
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
gs
data16
popa
jb
bound
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
popa
jb
outsl
jo
add
add
pop
pop
jbe
popa
push
popa
jb
gs
bound
fs
data16
add
pop
inc
dec
popa
je
outsb
add
add
jbe
popa
inc
popa
jae
dec
bound
add
add
jbe
popa
push
je
dec
outsl
jbe
add
add
pop
popa
insb
insb
insl
jne
add
add
dec
je
outsb
add
add
pop
inc
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
insb
iret
dec
add
or
add
add
pusha
add
addb
add
pusha
add
orb
add
dec
add
adcb
add
xor
add
adc
add
or
add
add
add
add
cwtl
add
addb
add
adc
add
or
add
add
add
add
mov
add
adc
add
or
add
add
xor
add
add
xorb
add
enter
add
add
adc
add
or
add
add
add
add
add
addb
add
adc
add
or
add
add
add
add
adc
add
add
add
adc
add
or
add
add
add
add
and
add
add
add
adc
add
or
add
add
add
add
xor
add
add
add
adc
add
or
add
add
add
add
inc
add
add
add
add
insb
iret
dec
add
or
add
add
add
add
push
add
add
add
sbb
add
mov
add
add
add
mov
add
and
add
mov
add
add
add
scas
add
add
add
add
add
add
add
test
add
mov
add
add
add
incb
add
add
mov
add
add
add
push
add
push
add
push
add
dec
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
add
add
xor
xor
inc
add
add
add
and
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
ja
ja
ja
add
add
xor
xor
xor
xor
add
outsl
add
add
sub
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
inc
add
inc
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
add
cmp
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
inc
add
inc
add
add
js
add
add
add
add
add
xor
add
add
add
jne
xor
add
add
add
jne
add
add
add
add
add
add
and
call
fucom
jecxz
fsub
loopne
loopne
loopne
loopne
aam
out
mov
jmp
xchg
xchg
in
mov
xchg
xacquire
repnz
in
mov
out
xchg
cmp
mov
mov
aad
loopne
loopne
loop
loope
in
call
into
fcmovu
fcmovu
fdivrp
fmulp
iret
jmp
push
outsl
pop
cli
pop
cmp
cli
pop
xor
stc
pop
xor
push
push
ds
sti
pop
cmp
cld
pusha
cmp
cld
pusha
cmp
cli
pop
cmp
repz
aas
push
push
cmp
cli
pop
xor
cli
pop
cmp
bnd
jmp
lods
test
fcmovnu
loop
in
loopne
loop
fcmovnu
fcomi
jmp
bound
hlt
push
inc
push
pop
inc
cld
addr16
jl
jl
push
push
pop
inc
cli
arpl
js
incb
push
pop
inc
sti
inc
js
std
insl
dec
sti
pop
cmp
repnz
cmp
fcmovnbe
repz
loope
icebp
ret
ffreep
mov
cld
ja
cld
jns
push
outsb
pop
cli
jno
std
jg
stc
jno
in
pop
aas
jmp
pop
cmp
loop
cmp
jmp
push
cmp
ljmp
clc
insl
push
stc
bound
pusha
inc
cli
pop
ss
andb
add
add
mov
jecxz
hlt
cwtl
cmp
lea
xchg
std
jns
incb
pop
ficoml
jmp
push
in
js
jmp
xchg
out
xchg
ljmp
out
test
jnp
in
outsb
pop
jmp
pop
in
imul
std
insl
inc
push
gs
lock
push
aad
mov
call
ror
sti
popf
mov
cld
jnp
std
xchg
jl
xchg
jl
clc
xchg
call
xchg
mov
ror
inc
jecxz
mov
loop
inc
fucom
dec
in
inc
rcl
dec
lret
fildll
jb
call
pop
inc
cli
jno
shr
loop
push
in
stos
cwtl
cmp
not
out
icebp
call
aad
push
cmpsl
lcall
pushf
mov
std
xchg
jg
std
xchg
jnp
decb
js
call
mov
popf
fsubs
mov
fistpl
jg
repz
push
nop
jp
cli
jo
sar
mov
out
ljmp
aam
rcr
dec
loopne
jmp
enter
stos
pushf
cmpsb
xchg
std
sahf
mov
fwait
mov
xchg
jle
std
mov
stc
lcall
stc
test
cld
jge
ret
push
mov
imul
ja
xchg
testb
cli
jmp
add
add
lods
fwait
sub
lret
fsubrp
out
dec
ljmp
fidivrs
ljmp
xchg
std
fwait
mov
xchg
cmp
stc
movsb
adc
add
add
in
in
or
in
in
jecxz
in
daa
repnz
mov
in
fucom
inc
loope
dec
in
jmp
lret
enter
movsb
ljmp
xchg
cltd
xchg
cld
xchg
jns
clc
cmpsb
xchg
inc
ljmp
fucom
ljmp
loopne
fiaddl
ret
push
rorl
add
in
mov
xor
ret
mov
cld
fdiv
repnz
in
inc
xlat
fcos
loope
clc
lods
mov
popf
mov
std
xchg
jle
clc
sahf
xchg
add
add
add
add
in
in
add
loop
sbb
ljmp
pop
roll
fwait
int3
mov
xchg
aad
sbb
scas
ds
xor
repz
jmp
movsb
dec
lret
fmul
fstp
call
in
out
dec
ljmp
fistpll
xchg
jmp
cmp
fwait
test
add
add
add
add
into
into
xor
fcmovu
add
add
add
jg
dec
ret
subb
aam
adc
xor
aad
lret
cmp
inc
mov
dec
mov
lock
jmp
jmp
inc
inc
fsubp
call
aad
push
test
jmp
jl
cli
pushf
xchg
add
add
or
shlb
pusha
enter
cmp
pop
jecxz
fiadds
lock
icebp
aas
fucom
xchg
sbb
sahf
xor
add
lock
add
scas
popf
cmp
int3
leave
lock
hlt
fsubr
icebp
dec
jmp
sar
cli
movsb
xchg
cld
xchg
cmp
xchg
jl
clc
cmpsl
xchg
add
add
in
jecxz
add
fucom
add
add
add
add
add
xchg
jge
std
jl
int3
cmc
mov
mov
decl
mov
add
jmp
pushf
pop
rcr
fscale
enter
rcr
mov
mov
xchg
std
xchg
cmp
xchg
jge
hlt
mov
add
imulb
push
out
jnp
cli
mov
xchg
push
nop
cmp
pop
imul
xchg
xchg
fcom
pop
add
add
lock
icebp
add
hlt
hlt
xor
add
add
mov
scas
fsubrp
in
jmp
icebp
repz
call
fdivrp
stc
test
mov
jl
sti
xchg
jl
out
ljmp
icebp
ror
add
andl
ljmp
lods
std
mov
sti
mov
cli
mov
stc
scas
movsl
stc
cmpsl
xchg
out
mov
mov
out
in
out
loopne
add
mov
nop
add
mov
lcall
out
add
mov
push
rcr
aad
jmp
inc
jmp
mov
ljmp
xchg
xchg
jle
cli
popf
xchg
cli
nop
je
jo
jns
ljmp
mov
inc
mov
std
ret
sti
sarb
cli
mov
clc
lods
lahf
out
clc
mov
xchg
dec
cmc
cmpsl
xchg
pusha
out
mov
xchg
ljmp
lret
in
mul
ror
in
int
shl
lret
ret
mov
shlb
repz
sub
mov
loope
imulb
dec
loopne
inc
fcmovnu
mov
mov
cmpsb
std
sahf
lcall
js
repnz
add
add
add
mov
push
in
jo
pushl
incl
mov
inc
sar
leave
leave
dec
sar
rcl
rcl
std
into
sar
cld
lret
int
sti
enter
cli
mov
mov
idivl
mov
repnz
ret
out
aad
in
jmp
jmp
jmp
jmp
out
out
jmp
out
lock
in
loop
iret
in
in
mov
dec
hlt
mov
pushf
and
aad
jmp
repnz
dec
jmp
call
std
test
cld
lahf
pushf
mov
xchg
jl
stc
popf
xchg
repnz
movl
pushl
pushl
cli
jb
jp
jmp
lret
int
call
aam
call
fcomp
fabs
fabs
xlat
std
aam
cld
rcl
sti
int3
iret
cli
enter
ret
sti
mov
mov
cld
lret
sar
fcom
stc
loope
push
out
push
in
ljmp
repz
ljmp
fucomip
jmp
jecxz
int3
loop
ret
mov
inc
inc
jecxz
inc
in
fld
scas
movsb
stos
sahf
mov
mov
cld
nop
jbe
out
jmp
jbe
jno
std
pushl
pushl
call
pop
inc
push
jns
call
dec
sar
call
call
fdivr
fabs
fsub
fucomip
jmp
in
jmp
jmp
fsubrp
std
xlat
fdivrp
cld
rcr
sti
into
sar
cli
leave
lret
sti
sarl
inc
mov
jecxz
std
in
call
stc
div
push
clc
clc
push
clc
stc
jmp
cmc
jmp
in
out
fsub
out
iret
call
jmp
ffree
mov
ljmp
nop
popf
mov
std
mov
imull
add
add
add
hlt
mov
push
repnz
pushl
sti
jne
lcall
push
call
dec
sar
call
fdivr
call
fdivrp
fsub
jmp
jmp
jmp
out
jmp
lock
jmp
repnz
jmp
repz
jmp
repz
jecxz
loope
std
fucom
std
xlat
fdivrp
sti
rcl
sti
enter
mov
lods
dec
ret
in
call
std
stc
stc
stc
sti
sti
push
clc
clc
out
out
lock
in
jecxz
ret
call
mov
movsb
std
sahf
mov
std
xchg
cmp
jbe
cld
xchg
ja
cld
test
pushl
pushl
stc
jno
inc
pop
cmp
mov
mov
dec
sar
call
fcomp
fchs
fsubp
jmp
in
jmp
out
jmp
icebp
jmp
repz
jmp
hlt
jmp
cmc
jmp
idiv
call
idiv
call
idiv
out
jecxz
fsub
std
ret
mov
mov
fcom
ljmp
std
sti
sti
in
sti
clc
clc
push
out
out
push
jecxz
jmp
fcom
push
sarb
pushl
xchg
lcall
ja
cld
xchg
jnp
add
add
repnz
or
xchg
decl
dec
call
pop
aas
incl
sbb
call
xorb
mov
dec
int3
call
aam
call
fcomp
fsub
fucomip
jmp
in
jmp
out
jmp
repnz
jmp
repz
jmp
cmc
jmp
idiv
call
idiv
call
idiv
call
idiv
jmp
idiv
in
cld
rcl
jmp
icebp
dec
into
pushl
mov
call
into
jmp
idiv
std
div
cli
in
jmp
cmc
push
leave
ret
std
mov
scas
movsl
std
mov
mov
xchg
jnp
sti
xchg
jle
add
add
imull
js
lcall
push
inc
pop
aas
ljmp
and
std
cmpsb
cwtl
inc
mov
call
aam
call
aam
fnsetpm(287
fucomip
jmp
in
jmp
out
jmp
repnz
jmp
repz
jmp
cmc
jmp
idiv
call
idiv
call
idiv
call
idiv
jmp
idiv
std
fabs
loope
jmp
repz
jmp
lock
jmp
jmp
dec
int3
pushl
mov
call
into
in
jmp
std
out
stc
stc
mov
lahf
std
test
mov
xchg
jl
std
xchg
add
add
repz
incb
sahf
jl
incb
jne
lahf
mov
pushl
ret
dec
int3
call
aam
aam
rcl
fsub
fucomip
jmp
in
jmp
out
jmp
repnz
jmp
repz
jmp
cmc
jmp
idiv
call
idiv
call
idiv
call
idiv
call
fdivr
out
jmp
repnz
jmp
lock
jmp
in
fucomip
inc
mov
inc
mov
jmp
loope
fstp
cld
into
enter
cmpsb
std
lods
sahf
jmp
jl
incb
add
add
add
cli
nop
je
incb
arpl
decl
test
ljmp
mov
dec
lret
dec
sar
std
lret
int
xlat
fdivrp
fnsetpm(287
fsubrp
jmp
in
jmp
out
jmp
icebp
jmp
repz
jmp
hlt
jmp
cmc
jmp
idiv
jmp
icebp
dec
sar
mov
mov
ljmp
test
dec
lret
fucomip
jmp
out
jmp
in
fucomip
fsub
fabs
call
aam
pushl
mov
ror
mov
xchg
lcall
jns
incb
add
add
add
fcompp
add
fwait
cmpl
insb
hlt
call
cltd
pushl
inc
sar
leave
leave
dec
leave
std
lret
call
fucom
jmp
ljmp
jecxz
jmp
repnz
jmp
repz
jmp
hlt
dec
lret
movsl
xchg
lcall
mov
lcall
mov
lcall
mov
lcall
xchg
inc
mov
fsubrp
fnsetpm(287
fcomp
call
fcos
dec
sar
mov
lcall
lret
mov
std
xchg
jge
std
mov
std
andb
add
add
mov
cmp
mov
cltd
pushl
mov
mov
mov
std
mov
fchs
fsub
fsubrp
jmp
in
jmp
out
jmp
lock
jmp
out
pushl
lcall
mov
lcall
mov
lcall
lcall
mov
lcall
ljmp
call
call
xlat
dec
sar
dec
leave
mov
cltd
pushl
lods
jmp
jl
decb
incl
add
add
loop
add
mov
lcall
mov
int
dec
int
dec
sar
std
leave
lret
iret
sar
fucom
fucomip
jmp
in
jmp
out
pushl
lcall
xchg
mov
ljmp
mov
imul
cmpsb
xchg
sar
mov
lcall
mov
lcall
mov
call
call
aam
dec
int
inc
inc
mov
jmp
cwtl
jmp
decb
pop
incl
add
add
aam
add
mov
mov
int3
dec
int3
dec
into
call
aad
rcl
cld
leave
lret
fucom
fucomip
dec
sar
lcall
mov
fwait
test
std
xchg
ja
std
mov
xchg
std
xchg
std
xchg
std
mov
std
popf
adcb
stos
inc
jmp
mov
lcall
mov
xlat
dec
sar
dec
leave
inc
sar
mov
scas
ljmp
mov
lcall
ja
incb
pusha
incl
add
add
cmpsl
xchg
imul
mov
mov
leave
dec
enter
lret
into
sar
call
rcr
cld
mov
fucom
ljmp
xchg
js
std
mov
std
mov
xchg
std
xchg
std
xchg
std
xchg
std
xchg
std
xchg
std
fwait
jge
inc
mov
in
lcall
mov
jmp
dec
int3
inc
sarb
pushl
lcall
xchg
jl
std
mov
incb
outsb
testb
add
clc
test
movsb
stc
mov
inc
sar
dec
int3
dec
sar
call
xlat
aad
cld
enter
rcl
lcall
pop
jmp
adc
push
jmp
adc
ljmp
sub
fidivrs
std
lea
std
mov
std
xchg
std
xchg
std
xchg
std
sahf
subb
sahf
push
sahf
std
lcall
inc
mov
inc
mov
mov
std
stos
popf
std
lahf
lcall
jnp
incb
pop
cld
test
out
add
lahf
xchg
aad
mov
inc
sar
mov
mov
dec
int3
dec
sar
call
aam
cld
mov
mov
push
adc
incl
add
incl
add
incl
add
incl
add
pushl
cs
mov
popf
jg
std
mov
std
xchg
std
xchg
std
mov
loope
or
movsb
xchg
in
lcall
mov
pushl
sar
mov
scas
lods
mov
jmp
cmp
lea
andb
push
cld
sti
xchg
jne
cld
lcall
mov
scas
mov
mov
dec
lret
dec
sar
call
aam
cld
mov
ja
add
add
add
add
add
add
add
add
add
add
xor
xor
cmp
xor
std
mov
std
xchg
std
xchg
std
test
mov
pop
pushl
mov
lcall
mov
mov
mov
stos
sahf
jmp
xchg
call
imul
jp
cld
jg
mov
clc
test
xchg
std
ljmp
pushl
mov
inc
mov
dec
leave
dec
int
inc
ret
jbe
incl
add
incl
add
incl
add
incl
push
push
decl
push
push
call
adc
jmp
and
pushl
cmp
std
xchg
std
xchg
std
xchg
std
test
movsl
mov
mov
mov
lcall
test
pushl
sahf
push
popf
test
sti
lcall
std
xchg
std
jge
std
jle
in
imull
add
iret
movb
cltd
mov
jmp
cmpsb
pushl
scas
mov
mov
inc
enter
mov
push
add
incl
add
incl
add
call
adc
jmp
and
incl
add
incl
add
pushl
push
push
std
mov
xchg
std
xchg
std
test
inc
mov
jmp
mov
lcall
lods
pushl
lahf
cld
mov
jo
out
pop
in
sbbb
sbbl
stc
popf
test
add
add
sahf
mov
xchg
xchg
ljmp
stos
pushl
stos
mov
mov
mov
mov
ljmp
sbb
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
xchg
std
xchg
std
nop
outsl
fdivr
mov
inc
lcall
mov
lahf
stos
sahf
jmp
ljmp
jmp
jb
std
jmp
pop
hlt
shll
add
add
cwtl
cmpl
mov
ljmp
stos
mov
std
stos
sahf
std
mov
mov
mov
mov
outsl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
pushl
das
std
xchg
std
xchg
std
xchg
std
lods
xchg
pop
jmp
mov
lcall
lahf
movsl
xchg
cld
cwtl
cmp
cltd
xchg
call
fistpll
in
xchg
repnz
lds
repz
lcall
jmp
xchg
mov
pushl
cmpsb
pushl
mov
jmp
pop
incl
add
incl
add
incl
add
lcall
jns
std
xchg
std
mov
stos
xchg
nop
test
lcall
xchg
jmp
cwtl
test
sti
mov
mov
sbbl
hlt
mov
add
hlt
ret
std
nop
js
cwtl
test
cld
fwait
mov
ljmp
cmpsl
ljmp
lahf
ljmp
cmpsb
scas
movsb
fmuls
jmp
push
adc
sub
adc
int3
outsl
push
std
outsl
std
mov
test
jmp
lcall
xchg
jmp
mov
call
ja
decb
push
std
jg
cmc
stc
lahf
mov
cmc
mov
jne
std
mov
lcall
xchg
ljmp
mov
jmp
fwait
ljmp
cwtl
cli
lahf
clc
fwait
mov
popf
mov
mov
mov
lcall
mov
lcall
mov
lcall
cmp
nop
js
decl
addr16
jge
std
ja
cld
stc
xchg
jl
imull
je
lea
call
mov
jmp
popf
jmp
mov
lcall
jmp
lcall
lcall
cmp
cltd
xchg
call
jl
decl
jo
incl
pop
js
jb
sti
mov
out
add
add
add
add
mov
outsl
out
jne
lcall
mov
jmp
xchg
lcall
jg
call
cmp
xchg
jg
call
std
mov
decb
jo
incl
gs
jle
js
pushl
insl
inc
cld
andl
iret
movb
add
add
mov
outsb
lods
incb
je
call
test
jmp
test
decl
insl
decl
imul
xchg
incb
pop
jle
jns
pushl
pushl
ljmp
insb
inc
sti
cld
jg
jl
mov
add
add
add
lds
dec
std
xchg
incb
insl
call
jns
call
js
decl
pop
js
je
std
outsb
inc
ljmp
ljmp
ljmp
ljmp
ja
repnz
xchg
js
idivb
add
repz
mov
pop
std
andb
jg
incl
decl
insb
decl
outsb
decl
pop
incl
incb
js
clc
stos
xchg
and
in
in
add
ret
stc
pushf
test
cld
mov
cld
lea
incb
pusha
incl
incl
pop
std
jno
cld
jae
clc
test
rolb
incb
add
add
incb
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
jmp
add
add
cld
jg
clc
add
add
xor
add
pop
add
addl
inc
pop
add
cld
add
jmp
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
push
add
add
add
clc
add
add
add
cld
add
add
add
incl
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
add
add
add
add
add
add
sbb
loope
fsub
loopne
fsub
loopne
fucom
aam
mov
in
xchg
xchg
mov
jae
xchg
mov
mov
xchg
sub
cwtl
out
mov
aam
loopne
fsub
loop
add
fucom
fcmovu
fstp
fcmovu
fmulp
iret
jmp
lock
pop
cli
pop
cmp
pop
xor
pop
xor
push
ds
pop
cmp
pusha
cmp
pusha
cmp
pop
cmp
push
aas
notl
cli
pop
xor
pop
cmp
jp
in
test
add
fcmovnu
fsubr
mov
hlt
push
inc
cmc
pop
inc
cld
addr16
jl
jl
push
negb
cli
arpl
pop
incb
pop
inc
sti
inc
js
std
insl
dec
sti
pop
cmp
dec
cmp
aad
add
loopne
mov
ja
cld
jns
imull
cli
jno
std
jg
stc
jno
in
pop
aas
jmp
cmp
push
cmp
push
cmp
pop
cmp
pop
dec
clc
insl
push
stc
bound
inc
cli
pop
ss
mov
add
ffreep
mov
loopne
hlt
cwtl
cmp
je
xchg
jns
xchg
pop
ficoml
out
push
in
js
jmp
xchg
xchg
xchg
mov
out
test
addr16
outsb
pop
jmp
pop
in
imul
inc
imulb
add
add
mov
ror
sti
popf
mov
jnp
xchg
jl
xchg
jl
xchg
addr16
jmp
iret
mov
out
fucom
enter
rcl
into
lret
stos
mov
xchg
pop
inc
stc
jnp
add
in
fcmovbe
out
icebp
rcl
aam
cmpsl
lcall
std
xchg
jg
xchg
jnp
mov
test
cltd
mov
mov
fsubs
fsubs
loop
jg
jge
notb
fcmovnbe
rol
enter
enter
pushf
cmpsb
xchg
std
sahf
mov
fwait
mov
xchg
jle
mov
lcall
je
andl
popa
testl
fstp
add
out
iret
ljmp
mov
cmpsl
cwtl
ljmp
std
fwait
mov
xchg
cmp
shl
call
add
shll
loopne
loope
into
in
loop
enter
ljmp
cltd
xchg
xchg
jle
add
shl
call
add
add
lds
lock
xlat
fabs
enter
mov
popf
mov
xchg
addl
add
add
add
add
add
mov
xchg
lods
sub
add
add
ror
lret
aam
out
int3
ljmp
mov
mov
add
add
mov
add
mov
scas
add
sahf
add
add
mov
fsubr
in
rcr
ret
rcl
shl
test
jmp
dec
mov
mov
mov
add
add
fcomp
xchg
sbb
stos
push
lea
add
int3
leave
jmp
hlt
fsubr
icebp
lret
jmp
cli
movsb
xchg
cld
xchg
cmp
jg
add
cld
xchg
movsb
out
mov
sbb
add
aam
fmul
fucom
rcr
mov
mov
xchg
cmp
addb
add
add
jl
jnp
cli
mov
pause
or
imul
xchg
add
fidivrl
loop
repz
stc
test
mov
stc
mov
sti
mov
jns
ljmp
std
mov
sti
mov
cli
mov
stc
scas
movsl
clc
test
repnz
mov
rcr
fst
out
leave
out
ret
out
stos
ljmp
xchg
jg
add
jo
jns
ljmp
inc
mov
sar
mov
mov
imull
add
add
mov
out
mov
call
mov
int
in
out
shr
mov
add
lret
int3
loopne
rcr
mov
mov
mov
std
sahf
lcall
add
jnp
pushl
pushl
incl
inc
sar
leave
dec
sar
rcl
rcl
std
into
sar
lret
int
enter
cli
mov
idivl
repnz
ret
out
aad
in
jmp
fucomip
out
out
jmp
out
out
loopne
lock
in
aam
out
mov
add
add
add
aad
in
hlt
lret
jmp
fxch
std
test
cld
lahf
pushf
mov
xchg
jge
add
mov
jo
pushl
cli
jb
jp
jmp
dec
int
rcl
call
fcomp
fabs
fabs
xlat
aam
cld
rcl
sti
int3
iret
cli
enter
sar
mov
mov
cli
fcom
stc
loope
mul
in
in
ljmp
ljmp
jmp
in
lret
mov
jecxz
in
fld
scas
movsb
stos
sahf
mov
cli
fwait
test
add
add
mov
pushl
pushl
rcrb
bnd
call
dec
sar
rcl
call
fdivr
fabs
fsub
fucomip
jmp
in
jmp
jmp
fsubrp
std
xlat
fdivrp
rcr
sti
into
sar
leave
lret
sti
sarl
mov
jecxz
std
in
call
div
cmc
clc
clc
lock
stc
jmp
cmc
in
out
fsub
out
call
mov
mov
lods
mov
popf
mov
lea
add
add
jge
pushl
pushl
sti
jne
pushf
inc
shrl
call
dec
sar
rcr
call
fdivrp
fsub
jmp
jmp
loop
jmp
lock
bnd
repz
repz
jecxz
loope
std
fucom
std
xlat
fdivrp
rcl
sti
enter
mov
mov
in
call
stc
stc
stc
sti
sti
cmc
clc
clc
out
out
lock
in
loop
ret
call
mov
sahf
mov
xchg
cmp
jbe
cli
xchg
jns
jb
pushl
stc
jno
ret
push
pop
mov
nop
inc
dec
sar
aam
fcomp
fchs
fsubp
jmp
in
jmp
out
jmp
icebp
jmp
repz
hlt
jmp
cmc
jmp
idiv
call
call
out
jecxz
fsub
std
ret
mov
fcom
ljmp
sti
sti
clc
clc
imul
out
lock
in
xlat
test
pushl
lcall
cli
sahf
mov
add
add
add
nop
jne
mov
jno
rcrb
cmp
sbb
roll
dec
int3
call
aam
aad
fcomp
fsub
fucomip
jmp
in
jmp
out
jmp
bnd
repz
cmc
jmp
idiv
call
call
call
jmp
idiv
in
cld
rcl
jmp
icebp
dec
into
pushl
call
into
jmp
std
div
cli
in
jmp
repz
ret
std
mov
scas
movsl
std
mov
xchg
jnp
cwtl
addb
add
add
std
xchg
jp
sahf
mov
jae
rcrl
xor
cmpsb
cwtl
inc
mov
rcl
call
aam
fnsetpm(287
fucomip
jmp
in
jmp
out
jmp
bnd
repz
cmc
jmp
idiv
call
call
call
jmp
idiv
fabs
loope
jmp
repz
lock
jmp
lret
int3
pushl
call
into
in
jmp
out
stc
stc
mov
std
test
xchg
jl
xchg
add
add
add
mov
stos
sahf
jl
incb
lahf
mov
mov
inc
ret
dec
int3
call
aam
aam
rcl
fsub
fucomip
jmp
in
jmp
out
jmp
bnd
repz
cmc
jmp
idiv
call
call
call
call
out
jmp
bnd
lock
in
fucomip
inc
mov
les
in
fstp
cld
into
enter
std
lods
sahf
jmp
incb
add
add
mov
incl
lcall
mov
dec
lret
dec
sar
lret
int
xlat
fdivrp
fnsetpm(287
fsubrp
jmp
in
jmp
out
jmp
icebp
jmp
repz
hlt
jmp
cmc
jmp
idiv
in
dec
sar
mov
ljmp
mov
dec
lret
fucomip
jmp
out
jmp
in
fucomip
fsub
fabs
call
aam
mov
pushl
ror
mov
lcall
incb
add
add
add
test
call
pushl
ret
leave
leave
dec
leave
std
lret
xlat
fucom
jmp
ljmp
jmp
bnd
repz
hlt
dec
lret
xchg
lcall
lcall
lcall
lcall
inc
mov
fsubrp
fnsetpm(287
fcomp
call
fcos
iret
sar
mov
inc
mov
lret
mov
std
xchg
jge
mov
andb
add
test
cmpsl
cltd
pushl
mov
std
mov
mov
fchs
fsub
fsubrp
jmp
in
jmp
out
jmp
lock
out
pushl
lcall
lcall
lcall
lcall
lcall
ljmp
call
rcl
dec
sar
enter
mov
mov
mov
std
xchg
jl
mov
andl
add
stos
xchg
std
cmpsl
lcall
dec
int
lret
int
iret
sar
leave
lret
sar
fucom
fucomip
jmp
in
jmp
out
pushl
lcall
mov
mov
inc
mov
mov
lcall
lcall
ljmp
aam
call
aam
lret
int
mov
sarb
xchg
ljmp
xchg
jge
mov
jle
add
cmpsb
xchg
mov
mov
dec
int3
dec
into
call
aad
rcl
cld
leave
lret
jecxz
fucom
fucomip
dec
sar
lahf
mov
lahf
mov
fwait
test
xchg
ja
mov
std
xchg
mov
jno
add
add
add
cmpsb
xchg
lcall
lcall
call
xlat
dec
sar
leave
leave
inc
sar
mov
scas
mov
sahf
mov
ja
xchg
andb
add
add
mov
ljmp
dec
leave
dec
enter
dec
sar
rcl
rcr
cld
mov
fucom
ljmp
xchg
js
mov
mov
arpl
xchg
xchg
xchg
xchg
xchg
cmpsl
lea
add
jmp
lcall
dec
sar
lret
mov
sarb
test
sahf
mov
xchg
jl
mov
andb
cmpsb
movsb
mov
inc
sar
int3
dec
sar
rcl
aad
cld
enter
aad
sahf
lea
movups
push
es
insl
cmp
fidivrs
std
lea
mov
xchg
xchg
xchg
lods
xchg
add
add
sahf
lcall
inc
mov
ret
mov
std
stos
popf
std
lahf
lcall
incb
sti
xchg
jbe
add
add
movsb
fwait
pushl
mov
inc
int3
dec
sar
rcl
aam
cld
mov
push
adc
add
add
xor
cs
jg
mov
xchg
xchg
xchg
jae
add
jmp
lcall
inc
sar
mov
lods
mov
mov
decl
std
ja
add
add
cmpsb
cwtl
ljmp
pushl
inc
mov
lret
int
call
aam
mov
add
add
add
add
xor
cmp
xor
mov
xchg
xchg
test
add
pushl
lcall
std
mov
mov
stos
sahf
jmp
call
std
jp
sti
mov
add
sahf
xchg
ljmp
mov
mov
inc
dec
leave
dec
int
ret
ret
push
add
add
add
push
push
push
push
push
adc
adc
and
jbe
cmp
xchg
xchg
xchg
test
add
mov
lcall
mov
cld
lods
sahf
hlt
popf
test
lcall
imul
pop
cld
test
sti
mov
ljmp
pushl
mov
inc
leave
fmull
add
add
add
adc
and
and
add
add
add
push
push
std
mov
arpl
xchg
test
add
ljmp
lcall
pushl
cld
mov
out
pop
in
sbbb
pop
cld
lea
add
xchg
mov
stos
mov
mov
pushl
mov
std
mov
cs
add
add
fs
xchg
xchg
lcall
mov
sahf
mov
stos
sahf
jmp
mov
dec
loopne
dec
in
mov
add
movsb
xchg
cltd
mov
test
mov
std
stos
sahf
std
mov
mov
mov
pop
add
add
add
das
std
xchg
xchg
mov
mov
lcall
ljmp
cld
cwtl
cmp
xchg
xchg
jle
xchg
jnp
in
xchg
outsb
stc
movsb
xchg
cltd
mov
cmpsl
lcall
pushl
pushl
mov
movsb
imul
pop
add
pop
std
xchg
mov
mov
ljmp
lcall
jmp
cwtl
test
mov
insb
testl
add
sti
xchg
cmp
test
fwait
mov
stos
sahf
pushl
ljmp
pushl
fmuls
push
adc
push
adc
outsl
push
std
outsl
std
mov
jmp
lcall
jmp
call
decb
std
andb
add
sti
xchg
jle
mov
sahf
mov
cmpsb
xchg
ljmp
jmp
ljmp
jmp
clc
fwait
mov
popf
mov
mov
lcall
lcall
lcall
call
incl
js
add
stc
pushf
test
jbe
xchg
cmp
xchg
ljmp
lcall
jmp
jmp
lcall
std
xchg
cmp
xchg
xchg
cmp
jbe
mov
test
jg
js
jb
stc
lcall
add
add
lea
jne
cwtl
cmp
xchg
jmp
call
call
call
mov
lea
mov
xchg
andl
pop
js
pushl
insl
inc
cli
mov
add
xchg
jp
test
je
xchg
jge
fwait
test
mov
decl
decl
incl
std
jle
jle
jns
pushl
pushl
ljmp
insl
inc
sti
mov
add
cld
jae
andl
insl
call
call
decl
js
je
std
outsb
inc
ljmp
ljmp
imul
pop
stc
mov
add
mov
jg
incl
mov
mov
outsb
decl
cld
sbbb
incl
sti
pushf
addl
add
sti
xchg
jns
nop
jae
sbbl
arpl
xchg
fs
sbbl
addl
add
add
incl
add
add
incl
add
add
incl
incl
incl
add
add
incl
add
add
incl
inc
add
add
jmp
add
add
push
add
add
cld
add
add
cld
aas
incl
jg
add
iret
incl
jmp
pop
add
incl
push
sldt
incb
push
pop
add
cld
add
clc
pop
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
incb
add
add
add
incl
add
addb
add
add
add
add
add
addb
addb
add
addb
addb
add
rolb
orb
add
rolb
add
add
jmp
add
add
add
push
add
add
add
clc
add
add
add
cld
add
add
add
incl
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
jg
add
dec
pop
nop
add
add
add
add
incl
add
add
add
add
xor
add
push
pop
mov
int
mov
push
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
and
and
fs
add
add
add
and
jmp
and
sbb
lods
movsb
push
jge
sbb
lods
or
and
sbb
lods
fwait
cmp
lods
sbb
lods
inc
cmp
and
sbb
lods
or
sub
push
sub
add
and
sbb
lods
in
lods
jle
and
sbb
lods
add
sbb
lods
sbb
lods
cli
sbb
lods
popl
sub
pop
lods
sbb
lods
popl
and
sbb
lods
push
imul
push
inc
add
dec
add
dec
loopne
push
and
add
add
add
adc
adc
add
adc
add
add
add
add
add
add
add
add
add
or
add
add
ret
fisttpl
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
nop
daa
add
jl
add
inc
and
add
add
add
add
mov
add
add
or
cmp
add
je
js
add
add
adc
add
adc
add
adc
add
adc
add
add
add
add
and
add
inc
add
add
push
add
add
add
push
add
addb
and
add
add
add
add
or
add
add
add
or
inc
add
inc
add
add
add
or
add
add
add
or
inc
add
inc
dec
enter
jl
and
sbb
decl
mov
mov
ret
add
fsubrs
mov
shrl
jbe
jns
out
int
adc
sub
lea
cld
aam
gs
pop
je
cld
pop
jb
or
popl
pop
outsb
cld
pop
sti
ds
int3
js
pop
jg
sbb
mov
sahf
repz
icebp
push
mov
out
xchg
push
jne
and
jno
xor
xor
in
rcll
scas
lods
jp
scas
mov
test
fdivl
hlt
dec
xor
xorw
pop
pop
inc
cmpsb
push
xorb
adc
test
sahf
and
mov
mov
cmp
adc
add
push
mov
int
pop
dec
sbb
fsubrl
ljmp
xchg
xchg
fldcw
push
das
add
lret
dec
xchg
ss
out
ss
adc
cmp
push
pop
hlt
sarl
test
popf
mov
cld
pop
and
ja
fwait
inc
jbe
push
mov
loope
stc
mov
push
adc
inc
fwait
cmp
rcrl
mov
mov
push
mov
icebp
and
add
push
repnz
je
int3
fadd
repnz
out
outsl
cmpsl
std
push
sbb
sar
jg
mov
push
aaa
push
lods
subl
fisttpl
pop
icebp
aas
shl
inc
mov
clc
lods
cmp
xchg
push
xchg
daa
push
jno
mov
cmpl
ret
sub
ficompl
pop
lcall
mov
push
icebp
xchg
sbb
xor
lods
xchg
rcll
popa
popf
mov
lock
clc
fimull
insb
es
mov
push
aam
and
pop
cmpsl
ds
aam
shr
or
or
dec
dec
fcompl
cmp
lret
inc
cmp
ret
std
jg
es
cmp
outsl
push
pop
imul
jl
add
inc
std
dec
jns
or
cmc
sub
stos
mov
dec
arpl
mov
sub
js
adc
cvttps2pi
pop
add
aaa
stos
push
ljmp
xchg
dec
ret
rcrb
push
stc
in
jb
jl
out
out
mov
bound
xor
sub
xchg
and
leave
out
pop
stos
adc
jmp
insl
inc
jmp
adc
dec
flds
pop
xor
leave
push
and
fsubl
inc
out
sti
inc
and
into
dec
mov
jge
mov
ljmp
mov
dec
mov
cmp
xor
fwait
das
fmuls
movsl
sub
les
nop
adc
push
add
adc
mov
pop
stos
jns
sub
adc
stos
add
add
in
out
fcoms
icebp
push
arpl
adc
push
mov
fwait
stc
push
mov
je
mov
xchg
pusha
dec
cmp
mov
dec
repz
mov
out
sub
pushf
and
mov
cltd
aad
adc
pusha
mov
push
cmp
mov
mov
call
cmc
or
aaa
push
fwait
cli
push
push
jl
xchg
mov
mov
adc
fidivl
fcmovne
pop
sub
cli
add
addr16
fsubs
cmpsl
push
cltd
mov
cld
cltd
and
cli
cld
jbe
in
push
movsl
enter
pop
add
fcoml
mov
hlt
xor
out
es
das
push
leave
fucomip
daa
aaa
mov
call
sti
outsb
push
and
sbb
push
hlt
fdivl
idivl
nop
scas
and
stos
sbb
add
jae
mov
das
sbb
push
scas
mov
imul
pop
lea
xchg
scas
pop
xchg
mov
jp
out
ja
mov
pusha
leave
pop
add
inc
xor
dec
repnz
push
jl
inc
and
scas
sahf
into
cltd
shlb
je
movsb
sbb
pop
aaa
push
or
testl
cwtl
mov
out
enter
and
das
lods
sbbl
popf
outsl
lea
iret
ds
adc
repz
and
test
fdivs
adc
imul
mov
ror
push
cmp
gs
je
scas
sbb
add
out
test
jbe
sub
xor
cmpsb
add
or
push
adcb
lcall
push
jl
add
cmp
popa
mov
xor
out
cmc
cld
inc
push
pop
mov
pop
icebp
std
loop
fs
fstl
lret
addb
and
jle
mov
call
cmp
mov
into
pusha
scas
aam
inc
addr16
adc
mov
fnstsw
sub
out
bound
or
insl
push
sbb
cltd
leavew
out
adc
push
cli
andb
jmp
inc
sbb
aaa
out
mov
mov
sub
sub
fsubr
xchg
jmp
jg
in
std
push
adc
cmp
and
or
fstps
xchg
popf
loopne
dec
sbb
out
aad
or
ja
add
repz
jbe
in
add
push
pop
mov
mov
dec
dec
mov
xchg
cmp
or
dec
cmc
jae
jg
add
shlb
cwtl
xor
movsl
popa
xchg
push
test
or
pusha
mov
cmp
aaa
xlat
adc
insl
jp
sbb
push
push
ss
sbb
dec
mov
bound
dec
lret
adc
sub
mov
scas
dec
sbb
add
xchg
sbb
in
dec
lret
jl
lcall
lock
out
push
xor
cwtl
repnz
xchg
imul
sbbl
inc
test
cmp
xchg
shll
ljmp
ret
inc
loope
outsl
adc
mov
sbb
sti
or
adc
daa
fdivs
je
scas
fdivrl
add
sbb
and
cwtl
aad
push
lret
cmpsb
and
icebp
ja
add
fidivrl
lret
pop
sub
mov
adc
push
jno
add
jmp
rorl
jb
mov
mov
sub
or
fimuls
sbbl
outsl
jecxz
push
and
stos
sub
fbstp
push
or
sbb
subb
sub
pop
mov
mov
dec
dec
sub
in
ret
mov
inc
into
mov
jecxz
dec
adc
fs
subl
test
jmp
pop
faddl
nop
frstor
hlt
jne
andl
mov
push
dec
xchg
dec
das
cli
pop
lock
push
push
mov
jae
stos
pop
out
dec
addb
mov
in
ffree
addr16
movaps
mov
pop
sbb
and
mov
hlt
divl
pusha
stos
add
cmp
push
sbb
in
and
sub
xchg
nop
sub
inc
enter
xlat
xor
dec
lods
push
shll
dec
rcrb
and
stos
adc
mov
aad
int
and
inc
xchg
ret
inc
lds
out
popl
in
xlat
inc
and
cli
adc
cmp
into
xchg
mov
push
push
loopne
push
test
pop
push
rorb
jle
ret
sti
orb
add
fbstp
fwait
cmc
push
scas
pop
sbb
js
mov
out
lret
mov
aam
cmp
xchg
fwait
sub
mov
dec
jb
bound
sbb
jne
push
pop
xchg
add
ja
popf
xor
in
xor
pop
push
outsb
mov
das
and
xor
adcb
mov
data16
lock
pop
fimuls
out
push
mov
aas
dec
cmp
insl
nop
xchg
push
xchg
iret
cmp
outsb
pop
gs
lcall
fcoml
out
push
aaa
mov
repnz
lods
mov
mov
shl
fwait
test
pop
scas
fcomps
mov
inc
dec
aaa
jp
or
dec
inc
fs
stos
adc
dec
xor
test
mov
cmp
mov
nop
mov
scas
add
pop
fcoml
lock
mov
lods
popf
movsl
sbb
or
std
scas
pop
std
loope
xor
aad
fildll
call
cmp
rol
add
imul
in
jmp
ret
or
jne
out
xchg
rolb
pop
movsb
push
aad
push
push
jns
in
pusha
ficoms
pop
jecxz
out
pop
loope
sbb
ljmp
ret
mov
lret
and
dec
and
mov
mov
mov
push
cmpsl
mov
stos
fs
dec
cmp
xor
sbb
rol
xchg
sub
and
lea
pop
imul
push
xchg
dec
add
lret
adc
or
mull
bound
or
push
shlb
cltd
push
mov
fwait
mov
pop
fmul
cld
xor
shll
pop
pop
sbb
mov
and
shrl
lea
jge
test
dec
push
js
xchg
les
and
push
add
sbb
call
shlb
mov
push
mov
fnsave
or
jp
adc
test
dec
xor
mov
cmp
xchg
das
cmp
push
dec
dec
gs
xlat
fdivs
movsl
inc
mov
out
pop
jno
ja
or
jecxz
xor
dec
pop
push
fists
sbb
adc
dec
xor
cwtl
mov
mov
sub
fiaddl
inc
push
aam
pusha
out
aam
scas
mov
inc
xor
and
push
fadds
rorb
push
mov
fsubrs
dec
lods
dec
xchg
inc
das
pop
cmp
dec
and
or
sub
inc
xor
cwtl
int3
cld
dec
jp
sub
mov
inc
jo
pop
xor
loope
jl
inc
adc
sub
das
push
outsl
sub
jle
sub
int
iret
xchg
out
cmp
shll
rep
out
stos
cli
dec
ret
inc
aas
add
mov
int
sub
repnz
imul
push
push
xchg
incl
loopne
jg
xchg
pusha
pop
fstps
dec
pushf
inc
shr
imul
mov
mov
aaa
cmp
cld
xchg
enter
fs
mov
mov
mov
out
pop
inc
push
ds
mov
inc
icebp
test
mov
mulb
pop
fmuls
jne
add
mov
pop
daa
lret
pop
sub
dec
xlat
sub
int3
xor
or
out
test
dec
or
push
sub
mov
mov
test
cwtl
mov
cmp
jmp
and
pop
sub
fisubs
sbb
insb
mov
inc
mov
mov
in
mov
out
outsb
sub
sbb
aaa
dec
lock
ficoml
mov
in
out
adc
cmp
gs
mov
add
ss
mov
push
movsl
ret
dec
out
pop
xor
aaa
dec
lahf
xchg
and
xchg
ss
push
fs
jp
scas
mov
clc
fiadds
sub
test
lret
inc
cli
pop
cmp
pop
xor
rep
dec
movsb
test
pcmpeqw
pop
roll
mov
xchg
insl
outsl
fwait
mov
pop
int
adc
daa
dec
cmp
push
and
jne
adc
jp
cmp
imul
and
inc
imul
in
xchg
and
sbb
pop
jmp
mov
rcl
sbb
mov
xchg
movsb
icebp
mov
das
outsb
lret
and
sub
scas
leave
jo
cmp
hlt
xchg
imul
adcb
cmp
test
sbb
movsb
pop
int3
adc
or
dec
sbbb
fidivs
pop
xor
xchg
scas
mov
push
xor
mov
fistps
les
sarl
mov
xor
xchg
inc
adc
loope
insl
xchg
sub
pop
xchg
or
movsl
lret
dec
sbb
scas
scas
mov
inc
int3
cmp
fdivs
jae
mov
test
xor
fcomps
int
fsubrs
sub
js
rcll
fildl
inc
stc
js
mov
dec
out
lea
f2xm1
xchg
sbb
cli
sub
data16
out
popf
cmpsl
cmp
jl
dec
js
fisubl
loop
xor
push
into
and
fstpt
sbb
sbb
lods
adcl
les
rorl
nop
inc
jno
inc
add
aas
dec
shr
mov
sub
push
mov
jmp
pop
push
fldcw
or
xchg
repnz
clc
cmp
sbb
jle
das
inc
lret
push
sub
xchg
push
mov
hlt
pop
aam
das
lret
sub
je
out
roll
pop
mov
addr16
ficompl
xchg
sub
imul
mov
out
mov
rcrb
add
repz
inc
pop
add
dec
and
pop
cmp
xor
push
imul
mov
pop
pop
mov
jg
adc
mov
daa
push
push
push
inc
add
cmp
rcll
movsb
lods
and
jg
cltd
pusha
cmp
hlt
sti
test
pop
xor
xchg
adc
sub
dec
and
adc
add
xor
sub
in
pop
je
sbb
inc
mov
pop
mov
daa
sbb
mov
pop
and
jno
pusha
xchg
cwtl
sbb
mov
loope
dec
lock
cmpb
stos
out
leave
aaa
pop
bound
movl
dec
adc
dec
js,pn
aam
test
inc
imul
jl
std
jg
dec
fdivr
pop
insl
lahf
mov
into
xor
cmpsb
lcall
mov
popa
ret
or
das
and
mov
repz
movsl
fisubl
int3
ret
jle
pop
or
lods
pusha
cmp
push
popa
pop
fimull
xor
and
dec
pop
jo
dec
lods
cwtl
out
mov
xchg
jmp
pop
mov
movsb
dec
mov
pop
or
xor
mov
repz
fidivrl
push
jnp
mov
js
mov
lahf
jno
rcll
lea
add
add
mov
repz
dec
pop
xor
pop
pop
rclb
movsl
push
fmul
pop
jae
adc
adc
repnz
push
das
cmp
call
out
and
lret
push
jbe
sbbl
sub
sahf
aad
addr16
pop
or
xchg
pop
sub
or
and
iret
aam
pop
out
sub
xchg
into
decl
or
fnstsw
lcall
icebp
lcall
jbe
xorb
outsb
and
xchg
mov
mov
out
pop
lret
or
push
es
loop
icebp
jp
push
lods
scas
hlt
aas
fdiv
lret
lret
out
in
jle
jnp
shrb
mov
xor
ds
push
mov
lds
xor
das
leave
add
popf
fdivs
mov
stos
xchg
je
xchg
fsub
push
mov
repnz
out
sbb
xchg
idiv
push
jl
push
and
mov
clc
add
xchg
inc
jg
sub
mov
push
xor
or
mov
lea
lock
lahf
nop
clc
jns
hlt
shl
jno
dec
fdivrl
js
rcrb
cmp
lret
cmp
or
negl
xchg
cmp
je
mov
xor
sub
xchg
mov
mov
movsb
jne
xor
pop
xor
lock
mov
fs
pop
xlat
ja
adc
push
push
sub
ljmp
adc
imul
cli
addb
push
mov
in
jp
mov
int3
cli
or
test
cmp
push
rorl
dec
ja
stos
sbb
fcomps
cmp
jno
mov
mov
out
push
icebp
je
inc
fldz
sub
insb
xchg
addr16
scas
mov
sbb
mov
cmp
pop
adc
mov
popa
cmp
clc
decl
out
cmp
scas
shlb
lods
inc
xor
sbb
fdivl
and
mov
js
dec
sub
push
lcall
inc
xchg
bound
inc
push
das
jle
cli
aad
mov
pop
pusha
adc
fs
mov
mov
cmp
ret
or
sarl
ljmp
xchg
pusha
push
mov
lock
sub
dec
aas
imul
jns
neg
fldl
insb
popf
or
jns
mov
sub
dec
xchg
xchg
inc
or
jo
arpl
test
repz
popa
loop
jg
ret
loop
mov
insl
addr16
scas
pop
and
fwait
push
test
cmc
addr16
int
fwait
adc
aad
adc
mov
fcmovnb
push
or
rcrb
fists
data16
sbb
mov
and
test
xchg
dec
push
xchg
insl
or
dec
jg
ret
adc
mov
cmp
cmpsb
and
jl
add
bound
aaa
jne
inc
clc
pushf
mov
add
ret
xor
bound
cmp
stos
xor
rsqrtps
in
stc
push
clc
push
xchg
pop
adc
scas
pop
fcomps
aad
sbb
nop
out
push
push
int
inc
mov
mov
push
jge
mov
jg
sub
jp
push
in
pop
mov
lock
jecxz
dec
push
mov
mov
jl
aaa
mov
hlt
cmp
pushf
sbb
cmpsb
xlat
fildll
out
mov
jae
add
in
mov
jb
pop
scas
andb
push
push
leave
aaa
andb
xlat
mov
jl
mov
and
nop
in
sbb
and
jns
sahf
and
push
inc
dec
cmpsb
lods
and
inc
push
or
jmp
jecxz
pop
xchg
push
xchg
imul
xor
mov
mov
jbe
pop
sub
mov
push
xor
mov
lret
and
dec
and
outsb
outsb
mov
pop
xor
jae
adc
push
insb
cmp
ret
and
jmp
jb
popf
lret
add
pop
mov
test
jne
pop
daa
into
add
dec
std
lds
mov
inc
cld
mov
sbb
aas
imul
pusha
ljmp
iret
and
sbb
call
cli
out
mov
xchg
out
rolb
dec
xchg
decb
ljmp
cmp
mov
scas
dec
or
inc
sub
jecxz
lcall
inc
hlt
insl
push
xor
ret
sub
xchg
lds
and
xor
out
or
inc
push
jnp
adc
xchg
push
add
inc
clc
ret
adc
jne
jbe
sub
lcall
mov
jbe
imul
stos
pusha
repnz
xor
cmp
jp
aam
push
or
loop
mov
cmpsb
inc
cld
lret
stos
push
lret
push
das
mov
fnstcw
jmp
sbb
stos
scas
mov
lds
lcall
loopne
push
mov
mov
jp
repnz
cwtl
pop
or
insl
xor
aam
mov
andb
pop
sbb
mov
les
sbb
cmp
jb
pushl
dec
std
add
insb
cmp
push
sub
mov
dec
or
insb
or
enter
gs
aaa
out
sub
xor
mov
dec
inc
aam
lds
mov
jg
iret
jb
pop
add
push
ds
jae
push
dec
push
mov
fst
lods
outsb
fs
add
loop
mov
mov
jae
xor
ficomps
repnz
mov
out
sahf
sbb
imul
or
int
testb
sbbl
cmp
or
outsb
mov
lods
mov
ficomps
sub
fisubrl
pop
push
inc
subb
repz
testb
xchg
inc
mov
enter
sbb
cmp
lods
sbb
stc
push
jns
rorl
je
mov
aam
popa
jnp
imul
rorb
cmp
sbb
ret
inc
adc
lret
cmp
fcompl
mulb
inc
mov
inc
icebp
inc
scas
in
mov
setae
mov
jp
mov
cmp
je
pushf
test
jmp
and
add
inc
push
add
jg
sarl
js
hlt
mov
push
iret
shrl
mov
mov
push
xor
adc
mov
dec
fcoms
adc
push
push
dec
adc
cmc
inc
mov
cmp
inc
xor
cld
ret
sbb
ret
pop
test
sbb
rcrb
loopne
loopne
push
dec
fcoml
leave
loope
inc
test
mov
xchg
mov
dec
loop
sub
mov
mov
xchg
std
int
movsl
sub
sub
jo
cwtl
lods
in
add
testb
mov
xor
add
mov
mov
lahf
movsb
mov
out
xchg
inc
lds
jne
in
inc
repz
push
movb
pop
aaa
or
shr
dec
adc
out
shrb
add
inc
jb
push
dec
jns
push
cmp
movsb
mov
push
rolb
mov
jns
mov
mov
xchg
xchg
and
filds
sub
cmpl
out
shlb
das
fildll
adc
into
cmp
inc
cs
jbe
les
out
arpl
iret
fdivs
es
and
xor
pop
push
cmc
adc
rcrb
lret
mov
scas
sbbb
push
jl
sbb
dec
mov
cs
ret
sti
mov
in
xor
inc
or
adc
mov
adc
mov
fnstenv
loope
bound
orl
mov
mov
add
jnp
stos
sbb
pushl
fadds
xchg
push
and
mov
dec
andb
das
mov
fidivrs
jne
sbb
pop
push
dec
scas
sub
mov
sbb
ret
xchg
mov
shll
adc
cmpsb
mov
sbb
aas
pop
cmp
pushf
push
daa
mov
xchg
stos
adc
pop
shr
add
dec
fst
cmp
push
dec
sahf
clc
cmpsl
xchg
cmpsl
and
test
jno
enter
cmc
movsb
or
test
push
stos
and
sbbb
add
and
fs
iret
xchg
cmp
imul
cmp
cltd
negl
insl
jo
out
or
add
sbb
add
out
pushw
adc
mov
and
adc
and
mov
push
jecxz
fsubs
loop
cs
testl
daa
mov
xchg
in
mov
dec
push
stc
mov
lods
pop
xlat
cmp
xchg
add
and
iret
inc
rclb
mov
lahf
push
sub
pop
push
and
adc
in
xchg
std
ret
rcrb
fldt
in
cmp
aas
aad
imul
pushf
inc
adc
push
add
cld
jl
and
add
out
leave
out
jae
sub
xchg
les
lahf
scas
pusha
jbe
xchg
lods
fists
jne
inc
xor
js
or
mov
or
and
addr16
jp
push
mov
pop
imul
jbe
repnz
dec
jnp
repz
sbb
xor
arpl
lds
in
xor
sbb
ret
jno
jg
aas
lock
outsl
je
lret
dec
push
sub
push
jne
push
data16
xchg
in
jl
add
pusha
add
and
pop
dec
cmc
mov
fcompl
mov
mov
pop
xchg
pop
mov
sub
movsb
lahf
dec
add
jp
rclb
aaa
mov
push
pop
out
add
test
rclb
in
cmc
xor
jmp
and
jne
dec
push
imul
in
test
scas
adc
in
out
mov
dec
repnz
lods
mov
inc
inc
jle
cmp
insl
cmp
or
or
dec
test
jl
sub
sub
scas
mov
xor
xchg
inc
pop
add
call
pop
out
cmp
loopne
adc
mov
lods
mov
xchg
in
mov
clc
cwtl
mov
out
jno
inc
jg
hlt
aam
and
sarl
pop
test
jle
mov
test
repz
xor
outsb
push
fs
cld
ret
insb
pop
push
inc
dec
jmp
leave
lods
push
and
dec
inc
jb
pand
jb
cmp
mov
or
aaa
mov
jecxz
out
mov
and
rcll
das
and
cld
push
mov
dec
icebp
out
call
sahf
stc
icebp
jp
insl
jb
movsl
pop
in
pop
pop
sbb
push
in
mov
popf
enter
push
pusha
aad
add
hlt
and
out
nop
int
adc
add
icebp
cmp
std
xorb
cli
lret
push
and
mov
clc
inc
cld
test
stos
icebp
addl
sub
call
jne
gs
adc
xchg
jne
pop
mov
adc
outsl
mov
inc
test
sbb
sub
mov
jge
daa
lcall
mov
dec
inc
iret
test
sti
icebp
pop
xor
xor
add
test
and
int
test
repnz
cld
mov
cmc
aad
add
call
push
xchg
jmp
js
aas
add
daa
hlt
or
mov
push
pop
imul
adc
mov
test
rolb
idivl
test
mov
rcll
dec
dec
jg
cwtl
out
inc
sbb
adc
jnp
lods
insb
stos
sbb
or
test
rcrl
outsl
in
jmp
push
insl
adc
call
jg
fsts
ljmp
inc
sbb
pop
sbb
or
movsl
hlt
inc
inc
les
in
xchg
push
testl
fnsave
sbb
cmp
imul
push
push
jns
mov
mov
lods
inc
push
in
loopne
and
filds
jnp
rorl
sahf
sbb
xchg
aas
xor
xchg
jne
lock
ret
mov
xor
add
jns
scas
inc
cli
lea
adc
mov
sbb
aam
push
or
mov
inc
je
push
jmp
dec
gs
aaa
rcll
xchg
jne
sbbb
jnp
or
je
sub
inc
mov
cli
cwtl
xor
es
lods
xor
and
jg
mov
xchg
adcl
xor
inc
out
add
fidivrl
call
mov
xor
mov
cmp
nop
popf
bound
mov
ljmp
jecxz
dec
mov
ja
fbld
dec
stos
jnp
test
int3
shr
pop
xchg
scas
stos
cmp
xchg
out
lret
pop
seto
cwtl
add
movsl
je
test
mov
inc
in
push
jl
aaa
das
pop
and
int3
push
push
jae
jge
dec
push
xchg
mov
push
mov
das
push
test
adc
popa
fnstsw
jnp
lret
xchg
sub
ss
scas
inc
mov
ss
loope
inc
int
daa
inc
sbb
inc
cmpsl
inc
dec
out
and
scas
das
jecxz
mov
out
and
xchg
lret
push
out
jecxz
loop
loope
sub
mov
stc
lock
dec
aas
imul
add
test
jecxz
xchg
jp
cmpsl
mov
ljmp
ret
and
enter
inc
push
dec
push
sub
dec
in
aam
or
adc
adc
hlt
lock
jnp
push
or
rolb
cmpsb
das
add
push
leave
leave
cmpl
inc
leave
mov
xchg
inc
cmp
lahf
xchg
and
pop
jb
sahf
bound
sub
jge
adc
push
adc
xchg
dec
and
fwait
or
xor
pop
cwtl
cmp
lods
fstpt
xor
insb
xor
adc
das
and
inc
pause
sub
das
inc
jg
sub
scas
nop
repnz
pusha
mov
in
dec
mov
mov
or
sti
inc
dec
movsb
lahf
pop
pop
jnp
sub
lock
movsb
adc
popf
sbb
fbld
add
iret
or
jmp
ja
push
shlb
sahf
mov
add
jo
out
push
push
hlt
movb
mov
jne
jmp
xor
push
popa
clc
xor
xor
mov
jg
mov
ficoml
sub
pop
lgs
mov
test
bound
pop
pop
mov
sub
cmp
clc
jo
testb
loope
sbb
pop
dec
jge,pn
add
sbb
sarl
fucom
mov
sti
std
add
mov
loope
dec
push
or
add
test
lds
mov
ss
roll
mov
and
cmp
mov
or
adc
add
outsb
enter
xor
dec
cmp
test
add
inc
push
push
adc
shll
add
dec
sahf
inc
aas
sub
cmp
shrl
arpl
sub
addr16
mov
fcomps
insb
or
aas
mov
mov
pop
mov
pop
stc
aad
loope
call
xor
xlat
lcall
sub
push
repz
push
dec
out
in
iret
popa
xchg
xor
or
adc
orb
sub
int3
mov
mov
outsb
xchg
jnp
scas
jp
mov
addr16
rorl
jmp
mov
jae
pop
insb
cmp
orl
leave
pop
ficomps
in
inc
cmpsl
in
dec
stc
das
lret
enter
int3
and
xchg
and
xchg
xor
mulb
xor
lods
jb
jb
push
hlt
scas
sub
mov
imul
dec
popa
aas
push
and
xor
cmp
jmp
lds
sbb
fistps
icebp
and
mov
adc
rcr
mov
loope
xor
cmp
mov
ret
aam
dec
inc
rcrb
lgs
mov
dec
bound
fldenv
inc
popf
scas
js
jle
mov
jecxz
mov
jl
add
repz
ret
enter
test
xchg
inc
xchg
mov
testl
andl
sbb
int3
mov
push
ror
test
cmpsl
cmp
pop
enter
sti
jmp
out
mov
jmp
and
test
psubsb
push
shll
imul
sbb
adc
dec
dec
pop
xchg
lret
sub
sbbl
mov
push
cmpsb
ss
sahf
pushf
mov
xor
jnp
imul
sahf
pop
outsl
icebp
or
fsubl
fldcw
inc
ficomps
or
pop
push
ss
paddw
shl
divb
inc
add
cs
sbb
ss
xchg
sub
js
insb
pop
pop
inc
mov
lods
mov
xor
mov
pop
dec
jge
bound
scas
or
adc
jne
ret
sub
push
testl
dec
push
jecxz
or
out
leave
nop
cld
sbb
cmpsl
cwtl
pop
aad
mov
mov
stos
and
insb
xor
aaa
xor
gs
and
int3
pop
fmull
inc
cli
insl
mov
xor
leave
adc
fsubrl
jp
adc
aam
xchg
iret
dec
or
std
pop
push
inc
es
xchg
cmp
mov
jecxz
sub
pop
int
arpl
sub
and
cmpsl
mov
adc
jg
cwtl
fs
and
xlat
jnp
jne
jno
fbstp
pop
mov
xchg
shll
mov
mov
cmp
cmc
and
sbb
push
add
rclb
call
jno
push
cmp
adc
pop
mov
loop
shll
nop
pop
inc
mov
cs
es
and
pop
clc
or
ret
test
pop
fistpl
outsb
das
and
xor
rclb
jg
mov
inc
popa
xlat
adc
sub
icebp
fsubs
xlat
test
and
lea
sbb
iret
out
popf
jl
cltd
daa
mov
push
and
scas
dec
mov
cli
push
mov
push
jb
push
rcrb
push
xor
dec
fnstcw
shrl
xchg
xor
inc
jae
lods
test
dec
icebp
or
mov
enter
adc
popf
xor
popl
in
add
mov
sub
out
cmp
xchg
scas
lret
adc
in
xor
fidivs
int3
lcall
mov
lret
jmp
adc
add
mov
pop
xlat
pushf
dec
pusha
mov
shrl
mov
ds
test
scas
mov
in
sub
and
pop
mov
lret
pop
pop
cld
inc
sub
xor
mov
push
call
push
shlb
pop
test
aas
ret
pop
mov
icebp
loop,pt
cli
cmpsl
mov
push
and
sub
ret
xor
xor
xchg
movsl
dec
rcrb
jae
push
imul
mov
xor
in
rcr
push
lods
or
outsl
ja
pop
ja
and
sub
xor
stos
mov
add
dec
das
into
fidivrs
mov
fs
and
ret
loopne
fisubrl
or
push
add
mov
adc
gs
pushf
js
and
shrl
xor
mov
push
testl
movsl
sti
int3
rcrb
fisubs
orl
xchg
sbb
jo
incl
sub
push
mov
or
cmp
clc
imul
inc
push
mov
aad
daa
shlb
xlat
and
int
outsl
adcb
rcl
lret
mov
add
mov
xchg
push
jb
or
rolb
cli
sub
mov
mov
sbbl
pop
adc
sub
sti
mov
push
push
movsb
sub
loope
out
xchg
cmp
sbb
mov
mov
je
int
xchg
adc
pushf
xchg
mov
lock
fisubs
jp
int3
and
inc
stos
aam
cli
test
ds
mov
cmp
dec
push
xchg
jb
cmp
dec
xlat
or
orl
sti
shlb
cli
dec
mov
addr16
outsl
clc
movsl
push
cmc
incb
lock
adc
push
ja
add
in
mov
and
mov
jge
gs
mov
adc
nop
popf
sub
test
dec
jge
fcoms
jne
mov
addb
lcall
out
shll
test
mov
scas
into
stc
lea
loopne
shll
xchg
repnz
adc
mov
fidivl
mov
enter
out
out
xchg
xchg
cld
jbe
pop
and
xor
sbb
rclb
fcoml
jmp
xor
pop
mov
aam
push
add
jns
cmpsl
ret
addr16
sbb
inc
negb
out
sub
xchg
imul
arpl
mov
fstl
xchg
mov
adc
ret
sbb
in
test
cmpsl
inc
in
insl
pop
popa
xchg
jge
inc
pop
loopne
bound
bound
push
stc
stos
inc
lahf
push
lret
mov
xlat
out
pushf
flds
sub
mov
mov
mov
inc
les
sbbl
pop
aam
fstpt
pop
cmp
clc
test
jb
push
sbb
adc
test
xchg
ss
push
insb
loope
dec
pop
xchg
in
mov
mov
pop
jle
subl
sub
add
jle
inc
lahf
dec
addb
aad
jg
das
lds
cmp
inc
and
roll
inc
mov
sar
es
scas
xchg
lahf
ret
and
adc
sbbb
scas
cli
sub
sub
stc
cmp
test
cld
cmc
mov
popa
sbb
fdivl
sti
add
shlb
mov
cmp
or
lods
mov
xchg
rcll
cld
lods
jmp
loopne
outsl
or
push
dec
outsl
sbb
cmc
rcrl
iret
das
push
in
inc
lahf
cmpsb
lods
jns
cwtl
fnstenv
aam
mov
shl
scas
push
fstps
das
mov
mov
insb
mov
lods
fstl
into
cmp
idiv
pop
push
dec
lock
int3
sti
scas
test
scas
xor
pop
sub
loope
or
movsb
jmp
loope
add
icebp
xchg
test
rclb
jne
cld
dec
xchg
sub
imul
push
push
and
iret
push
inc
mov
adc
jg
push
fcmovu
and
notl
in
xchg
pop
push
sbb
outsl
ja
xchg
fsubrp
aaa
jne
cwtl
cs
mov
in
mov
pop
scas
std
inc
cld
jae
sbb
or
cli
jnp
andb
mov
adcl
sub
dec
loope
xlat
loopne
or
in
push
shlb
cmpsl
sti
pop
lea
popa
sub
fisubrl
mov
aam
cmp
clc
stos
or
pop
sbbl
mov
xchg
out
jo
rcl
int
dec
shrb
test
lcall
out
or
rorl
lea
cmpsb
inc
call
popf
js
lret
out
ret
xor
pusha
inc
cltd
repz
nop
repnz
push
loopne
jp
popf
inc
mov
xchg
and
jns
adc
notb
pop
inc
movsb
xchg
mov
sub
push
lret
or
fs
pop
xchg
mov
fadds
insl
repz
and
or
jae
pmulhw
cli
adc
lahf
andb
jge
xlat
push
scas
dec
fidivs
out
repz
or
add
imul
rcl
xlat
sbb
daa
mov
mov
filds
lea
cltd
lea
or
jp
fdivl
test
xchg
push
subl
cmp
lahf
lock
push
lods
mov
dec
rorb
lods
mov
mov
lret
sub
or
sub
xlat
push
lret
add
movsb
jmp
out
sub
sti
pop
add
and
stos
pusha
das
push
cli
pop
dec
fimull
sbb
dec
sbb
loopne
inc
inc
repnz
notb
dec
jp
test
lock
mov
jp
addr16
sub
sub
outsl
aaa
lret
cmp
dec
fidivl
sarl
adc
push
jmp
in
mov
rcr
sub
xor
or
pop
push
cmpsl
lahf
jle
orb
rcrl
push
das
test
or
loope
outsb
loopne
push
shrb
push
cmpsl
cmp
mov
movb
call
adc
jmp
aas
inc
xchg
cmp
lods
xor
xor
mov
hlt
mov
nop
xchg
movl
inc
mov
sub
stos
cltd
push
fnstcw
sbb
cmp
sub
cld
xor
scas
bound
jge
inc
xor
xchg
inc
movsb
aaa
push
loop
in
imul
push
push
test
iret
sbb
lods
or
cmp
inc
cs
fldenv
aam
data16
es
fistpl
cmp
mov
hlt
xchg
ljmp
outsl
jb
and
adc
sub
add
cmp
sti
and
bound
cs
and
jg
lods
outsb
outsb
mov
mov
xchg
stc
lods
dec
mov
add
pop
test
sub
sub
das
xor
movlps
cltd
scas
subl
push
lcall
jle
andl
cmp
arpl
push
imul
mov
pop
pop
xchg
iret
test
scas
mov
sbb
aam
and
push
adc
repnz
or
xchg
mov
test
shrl
and
dec
cmp
shlb
dec
mov
rorl
mov
inc
inc
repz
ds
pop
out
outsl
repnz
jle
mov
cltd
jge
or
sbb
pop
mov
test
jbe
add
test
mov
enter
loope
stc
hlt
jo
int3
idivl
cld
jp
push
stc
mov
sub
push
cmp
add
daa
mov
out
pop
and
in
roll
test
mov
xchg
mov
test
test
ret
xor
push
mov
pop
ljmp
jb
add
data16
sbb
imul
or
ss
inc
inc
orb
jns
iret
push
nop
lods
cmp
jge
rorb
mov
jl
mov
imul
mov
sub
jl
sbb
ss
lods
push
adc
cmp
stos
push
sbb
xor
fsubrp
js
xor
icebp
cs
sbb
jbe
dec
or
add
or
and
push
push
stos
dec
ds
negb
xchg
loopne
js
jecxz
hlt
arpl
jo
stos
inc
jne
stos
dec
in
ljmp
xchg
jecxz
mov
dec
lea
cmp
sub
cmpsl
cmp
push
and
mov
cltd
mov
ja
lods
or
arpl
push
pusha
cmp
lods
out
jno
loopne
test
jb
test
std
xorb
pop
and
clc
add
aam
push
xchg
mov
pushf
mov
sti
mov
aam
out
jecxz
mov
test
insb
pop
fistl
jg
cwtl
pop
stos
mov
outsb
xor
mov
jnp
shrl
aad
xchg
inc
daa
jbe
pop
xor
rcl
push
jbe
in
imul
push
cmp
sbb
dec
stc
xchg
cld
adc
ljmp
cli
or
jo
popa
nop
js
dec
xchg
popa
xor
adc
sub
mov
enter
rcll
pop
inc
pop
lcall
movsl
mov
and
mul
daa
jnp
jp
je
arpl
ljmp
into
aaa
mov
or
sbb
stc
jns
sub
in
mov
add
lods
jno
or
sbb
add
repz
loope
inc
sub
loop
mov
dec
xchg
sbb
mov
lock
cmpsb
lock
int
inc
stc
addr16
shr
outsl
lods
push
or
jle
and
pop
outsb
iret
pop
lcall
add
fmull
push
add
imul
sub
cmp
adc
rorl
jmp
jns
cwtl
lret
cld
iret
xchg
hlt
add
cmp
jb
jmp
lea
fxch
xor
adc
cwtl
xchg
dec
sub
repnz
cmp
sahf
cmc
push
sub
add
add
mov
mov
ja
stc
call
stc
add
inc
add
test
xor
push
sbb
scas
mov
pop
dec
sub
inc
loop
daa
outsl
and
fisttpl
or
movsb
test
and
pop
mov
inc
mov
ljmp
inc
add
add
ja
jecxz
jg
into
mov
sub
test
mov
sahf
test
push
adc
fsubs
rcll
notb
insl
adc
rcrb
adc
std
mov
mov
push
cld
or
movsl
fcomps
cld
je
add
fidivs
dec
mov
movsb
dec
int
sub
sbb
icebp
cltd
imul
jge
mov
aam
mov
sub
push
notl
mov
cwtl
push
test
mov
fwait
ja
xor
mov
fsubs
lock
rcrl
jnp
lcall
popa
cwtl
mov
fcmovnb
aas
adc
andb
mov
mov
adc
ds
xchg
and
sarl
xor
in
test
nop
movsb
jecxz
cmp
int
cmp
mov
inc
jne
push
inc
jnp
fsubrp
mov
mov
xchg
sub
mov
lods
inc
jl
aad
movsb
cmpsl
aaa
mov
test
fcomi
je
sbb
jmp
pop
mov
jecxz
mov
sub
or
or
popl
lea
dec
adcb
cmp
mov
imulb
push
ret
push
dec
fs
xlat
add
lret
pop
cmc
dec
hlt
pusha
addb
push
addl
test
call
adc
popf
sub
cltd
ja
cs
pop
xor
xlat
negb
lods
sbb
jmp
sbb
pop
or
test
cmp
jmp
movsl
pop
nop
sub
out
es
ljmp
popf
xor
scas
pusha
pop
jecxz
jmp
sub
test
add
insl
daa
in
mov
or
cmpsl
xchg
cwtl
int
adc
jne
pusha
or
xchg
stc
mov
push
adc
pop
cmp
mulb
add
mov
out
das
adc
push
lds
sarl
mov
sarl
out
imul
movsb
mov
ret
xchg
cmp
mov
jo
lahf
and
jg
cltd
ficomps
mov
or
adc
mov
sbb
inc
dec
nop
and
repz
jbe
sbb
jecxz
sbb
mov
sbb
pop
movsb
dec
fnstsw
aad
xor
outsl
dec
xchg
pop
mov
mov
dec
insl
es
jmp
into
cmp
std
dec
adc
cmpsb
jmp
add
mov
cmc
stos
lods
mov
jns
std
xor
sub
andb
xlat
dec
mov
nop
sbb
push
aas
fistps
push
ss
inc
popa
push
and
jecxz
mov
cmpsb
or
xchg
nop
enter
mov
out
mov
add
xchg
popa
pop
out
xor
pop
jge
xchg
add
fcoms
stos
or
sbb
lcall
lcall
xchg
pushf
cmpsl
aas
mov
imul
add
rorl
in
stos
fisubrl
inc
or
shll
pop
inc
into
mov
das
mov
mov
dec
cmp
sub
repz
mov
fimull
mov
dec
ret
or
push
fidivrs
jmp
mov
iret
inc
in
out
jmp
adc
in
push
mov
pop
jecxz
into
data16
mov
sarl
sbb
ljmp
shl
mov
inc
xchg
inc
cmp
inc
dec
xchg
std
add
mov
mov
add
sbbl
xchg
popf
or
pop
andl
mov
out
xor
push
rorb
cmc
ljmp
xor
fcmovnb
pop
and
ljmp
pop
dec
mov
sete
xor
sbb
hlt
subl
dec
fdivr
jnp
cmpsl
xor
mov
mov
pop
shrl
cmp
mov
divl
mov
dec
xchg
out
std
sbb
shl
and
xchg
sub
andl
push
movsl
test
clc
xor
xor
add
stc
push
jmp
cltd
mov
pop
dec
rolb
fnstenv
stc
data16
sbb
jmp
xor
dec
jle
and
loop
lods
cltd
mov
sbb
jle
hlt
hlt
test
jae
mov
inc
out
add
push
out
aas
daa
lds
xor
adc
lods
ljmp
dec
cmp
cmc
and
jb
pop
loopne
dec
jmp
push
sub
xlat
pop
popa
fmuls
pop
in
and
sbb
add
insb
cmp
adc
imul
and
scas
inc
imul
je
ret
cltd
out
not
ja
inc
mov
pushf
adc
outsb
popa
xor
sbb
stc
fbld
pop
andl
xor
shrb
dec
ret
dec
push
cltd
daa
push
clc
push
pop
bswap
rcr
addr16
cmp
xchg
jne
xchg
cmp
or
pop
push
mov
xlat
xchg
adc
cmp
movsl
in
mov
fisubl
mov
mov
sbb
movsb
or
imul
pop
sub
movsb
cmpsl
mov
mov
scas
jb
adc
fildll
sub
repz
mov
mov
ss
or
cmpsb
dec
scas
xchg
movsb
xor
clc
ret
stos
sbb
lea
outsb
lret
not
dec
dec
jo
int
icebp
mov
inc
fcoml
mov
inc
jns
cmpb
in
into
stos
mov
stos
and
aad
aad
inc
out
ss
in
hlt
lea
int
test
arpl
push
and
and
jp
or
fmulp
push
dec
adc
fs
pop
fisttpll
call
outsl
out
lcall
fwait
and
repz
aam
adc
adc
jbe
loop
nop
and
mov
sub
jb
int
daa
jb
or
fadd
mov
outsb
movq
cmpsb
cmpsb
push
outsl
pop
mov
dec
addr16
and
js
test
outsl
pop
dec
jmp
cmp
out
insb
fs
cmp
nop
or
cmp
pop
jne
xor
pop
adc
jl
sahf
and
notl
out
andl
imul
stos
shll
ret
scas
cmp
xor
pop
or
aaa
xorb
pop
negb
loopne
jae
rol
mov
dec
xchg
scas
mov
mov
ss
loop
xchg
lds
sub
adc
xchg
pop
add
rcrb
xchg
into
sbb
push
movsl
mov
ret
sub
mov
test
mov
cmp
push
xchg
fyl2x
ja
cmp
je
fdivrl
lret
popf
popf
push
pop
adc
xlat
cmp
pop
sub
out
lret
adc
mov
pop
adc
xchg
push
jg
cmpsb
push
fists
loope
cli
jle
jecxz
ja
in
sbb
xchg
mov
arpl
mov
or
push
inc
stos
out
and
mov
orb
or
dec
dec
and
pop
jne
in
leave
insb
sbb
aad
test
std
call
jmp
in
mov
inc
scas
call
cltd
rol
lahf
pop
scas
ret
das
imul
mov
in
mov
sbb
insb
adc
add
xchg
add
pop
mov
jmp
pop
std
insl
sub
daa
imul
lcall
negl
sbb
pop
jnp
les
and
lcall
and
push
add
sbb
pop
or
jb
in
in
shll
mov
leave
push
pop
sub
jns
push
ret
aad
push
mov
jmp
outsl
mov
pop
inc
jg
hlt
ret
daa
add
imul
in
sbb
mov
or
dec
lahf
xor
sbb
mov
data16
sub
aam
aad
dec
cmp
shrb
xor
pop
pop
push
sub
scas
cwtl
add
pop
add
gs
xchg
scas
xlat
int3
mov
shrb
inc
xchg
xor
cmp
setno
adc
cmpb
pop
xor
insl
std
cmp
daa
divl
inc
fwait
pop
jg
repnz
insl
pop
dec
add
pop
pop
pop
idivb
cs
mov
fwait
imul
mov
int3
fsub
into
out
lret
dec
iret
imul
adc
rcrb
icebp
fndisi(8087
dec
les
stos
cmp
decb
pop
or
cmp
or
mov
jne
iret
add
xlat
mov
fdiv
dec
roll
xchg
xor
pop
sar
mov
inc
or
ljmp
lods
scas
divb
dec
lods
sub
mov
pop
mov
jnp
std
or
fidivs
fwait
outsl
in
mov
mov
movsb
mov
jae
mov
cmpsb
repz
scas
loope
and
pop
jmp
ljmp
mov
sub
cmp
push
pop
repnz
cld
rcrl
push
inc
fisubl
dec
imul
push
pop
test
jnp
inc
mov
iret
mov
jmp
pop
cmc
call
in
lods
lods
xchg
js
out
sub
in
ficoms
in
or
sbb
fst
pop
adc
enter
mov
cld
es
add
adc
pushf
fadds
insl
sbb
fucomp
cmc
xchg
pop
inc
adc
pushf
xor
iret
fadd
test
jecxz
push
xor
mov
mov
fs
imul
sub
jecxz
jge
push
or
adc
lret
mov
jno
inc
xchg
or
stc
add
std
cmpsb
xor
push
push
repnz
aad
popl
out
mov
and
das
xor
dec
sbb
jle
push
cmp
or
dec
dec
lds
jg
icebp
mov
jl
pop
or
scas
sarb
pop
jbe
test
repnz
sub
push
mov
jb
pop
cmp
dec
add
mov
int
test
out
jns
and
push
rcrb
lret
testl
pop
xor
pop
std
add
jl
sbb
ror
mov
push
bound
sti
xchg
nop
mov
fnstsw
sbb
negl
js
jp
sub
addr16
lret
xor
pop
or
push
cmpsb
sub
dec
lods
cmpsl
lods
sub
js
dec
xor
xor
pop
jg
xor
cmp
push
pop
mov
cld
or
lret
and
lahf
lret
add
fstpt
pop
push
mov
ja
movsl
loope
adc
jnp
dec
mov
stc
mov
sbb
addr16
fsubs
cbtw
fadds
jmp
jge
add
mov
repz
sub
jae
cmp
xchg
das
test
push
mov
pop
fdivs
fcomps
addr16
hlt
je
push
fadd
andl
mov
or
or
cmp
test
jl
xchg
sub
stos
inc
adc
jb
in
mov
movb
repz
js
or
sub
jecxz
shlb
mov
pop
or
mov
stos
rcrb
roll
xor
push
inc
adc
adc
push
cmc
cs
orb
fisubrs
jmp
push
rcll
mov
ret
and
ficomps
jmp
push
out
and
add
nop
ret
xchg
repz
and
push
inc
sbb
and
pop
add
dec
mov
dec
sub
and
std
mov
popa
iret
hlt
cmp
xor
mov
xchg
ja
xchg
lcall
and
xor
je
and
push
dec
jbe
jae,pn
aam
movsb
dec
out
dec
xor
push
stc
lea
cmpsb
addr16
rorb
xchg
mov
cmp
loopne
mov
out
mov
imul
push
daa
pop
stos
insl
pop
add
cli
and
dec
movsb
stc
popf
inc
mov
and
int3
cmp
sbb
jg
inc
mov
mov
add
and
ljmp
ds
mov
idivl
push
pop
stos
fistps
clc
in
scas
icebp
adc
pop
jns
dec
sbb
ss
cld
xor
nop
push
sar
pop
dec
mov
sub
jmp
xchg
inc
mov
ficoml
sahf
dec
mov
out
add
out
movups
dec
or
mov
jle
lods
pop
cltd
mov
mov
add
jle
sbb
push
adc
dec
dec
imul
add
or
push
sub
cmp
inc
shrl
outsb
cmp
xor
dec
stos
mov
cld
jmp
bound
nop
aam
pusha
adc
lahf
hlt
rorb
inc
mov
cmp
jb
repnz
sbb
cmp
insb
adc
out
dec
jecxz
xor
in
push
inc
les
mov
mov
cmpsb
inc
mov
js
shrb
fstpt
jl
jmp
jbe
repz
jbe
jno
mov
lcall
je
or
psrad
mov
stos
idivl
and
sbbl
rcrl
jne
xor
mov
out
in
orl
shrl
das
in
and
pop
icebp
sub
jmp
es
xchg
pop
das
hlt
and
mov
out
inc
xor
scas
pop
das
mov
imul
inc
scas
jbe
cmpsl
sbb
stc
push
cmp
cmpl
inc
inc
or
pusha
sub
xor
sti
into
pop
inc
repz
mov
mov
rorb
mov
sbb
sti
stos
xchg
hlt
xor
push
add
jnp
int
jb
cmpsl
cmp
rol
mov
lret
pusha
inc
ret
push
push
pop
test
cs
mov
xor
in
mov
push
jae
mov
push
mov
mov
loopne
mov
and
data16
or
sti
leave
sub
hlt
push
insb
inc
xchg
mov
idivl
mov
ret
scas
pop
mov
sub
sbb
pop
mov
cmp
xlat
xchg
jbe
fsubp
jno
adc
les
sbb
shrl
xchg
lcall
fwait
xchg
push
jecxz
mov
std
pop
xchg
xchg
test
lahf
mov
cmp
inc
jmp
xchg
cmc
cmc
mov
fimuls
push
xchg
in
vpandn
std
mov
dec
mov
cmp
insl
cwtl
out
sahf
mov
dec
iret
add
inc
xchg
adc
ss
test
sbb
jp
int
stos
push
inc
push
push
imul
mov
idivb
ficomps
scas
rol
jecxz
pop
insb
int3
dec
push
push
popf
xor
lret
stc
cmp
pop
pop
sub
jg
lock
xchg
in
pop
pushf
mov
arpl
cmp
pop
cltd
pop
xor
pop
and
jle
enter
push
xlat
or
mov
test
in
hlt
pusha
xor
jecxz
adc
in
jb
lret
pop
repnz
scas
das
dec
outsl
sar
pop
mov
jmp
jge
inc
pop
fldcw
push
mov
and
daa
loope
pop
push
subb
aad
hlt
adc
pop
or
mov
mov
jae
jecxz
mov
mov
cmp
jb
cmpsl
sub
arpl
aas
mov
arpl
push
dec
jle
inc
pop
xchg
dec
xchg
mov
popf
cmp
fidivl
xchg
adc
push
int
sub
gs
fists
cli
in
jbe
jg
push
or
icebp
pop
mov
xor
test
leave
dec
repnz
mov
inc
xor
gs
orl
pop
ret
faddl
js
pinsrw
loopne
inc
jg
push
nop
xor
movsb
js
movsl
jmp
mov
add
mov
cmp
enter
pop
pop
push
mov
or
push
push
lods
cmp
sahf
cmpsb
int
xor
jnp
clc
add
pop
add
sub
dec
in
pop
or
lds
pop
sub
lods
pop
cld
add
mov
or
in
fbld
fisubrl
arpl
xor
xchg
loopne
push
sub
xchg
xchg
test
cmp
stos
aas
push
jnp
pop
and
mov
dec
xor
xchg
adc
mov
inc
rcrb
add
add
aas
dec
push
sahf
mov
decb
shrb
popf
push
scas
adc
data16
push
bsr
pusha
sub
xchg
loop
inc
cwtl
mov
xor
insb
jae
dec
scas
daa
movsb
push
jae
xor
lret
xchg
or
mov
jle
int3
push
push
imul
pinsrw
rcrl
outsb
fldcw
gs
lea
aaa
call
jo
inc
inc
pop
xor
sub
xorl
scas
leave
or
and
sbb
xchg
cmp
ficoml
sbb
mov
lds
sub
aam
js
sub
mov
rcrl
clc
jecxz
jecxz
aas
mov
sub
and
repz
shll
repnz
sub
ret
sbb
push
push
insb
insb
mov
cwtl
cltd
xchg
mov
imul
ret
xor
push
mov
sbb
inc
jae
arpl
movsl
sbb
xor
decb
arpl
cmpsb
jo
in
push
push
cmp
popf
rcll
int3
enter
mov
scas
pop
sub
movsb
xor
push
orb
arpl
adc
add
testl
sub
sub
cld
inc
jb
mov
pop
fldenv
sub
add
cs
movsl
rolb
shll
dec
xor
cmp
sub
or
aam
hlt
inc
cmpsb
mov
inc
jp
inc
cli
mov
int
fdivrp
and
mov
nop
jno
mov
loop
cmp
cmpsb
rorb
and
and
add
out
iret
dec
aas
popa
test
jg
dec
in
stos
ret
push
pushf
push
xchg
pop
testl
clc
iret
test
push
or
add
ret
sbb
jae
mov
rclb
adc
jnp
pop
xorb
or
xor
and
cmp
xor
cmp
cmp
pop
jbe
loope
or
popf
or
sub
icebp
jp
mov
and
cmpsb
loopne
iret
mov
out
call
lret
xor
outsl
dec
adc
dec
adc
cwtl
mov
or
xor
mov
stc
dec
or
dec
nop
xor
xor
dec
popf
xor
lea
les
xor
push
fucomp
ds
mov
sbb
int3
pop
cmp
in
je
lods
aad
mov
adc
add
adcb
into
mov
or
icebp
pop
sbb
sub
sub
fcoms
xchg
into
outsl
or
or
xlat
in
loop
jl
enter
icebp
call
jns
inc
movsb
inc
sbb
pop
pop
inc
push
lcall
setb
adc
jl
cmp
pop
dec
pop
mov
and
xlat
dec
mov
push
shlb
add
xchg
dec
fs
inc
fstpt
mov
stos
outsb
mov
lahf
test
jmp
lahf
rcll
mov
and
je
xlat
dec
inc
fisubl
xchg
push
scas
fidivl
decl
cmp
mov
nop
inc
fnstenv
mov
mov
push
lock
daa
pop
sbb
es
jbe
lods
mov
in
pop
mov
pop
sbb
sub
fs
movsl
daa
sbb
mov
repz
aad
test
test
popa
jb
mov
loopne
loopne
inc
push
or
fnstcw
and
and
cli
shrb
sub
insl
or
push
inc
dec
cmp
sar
mov
xor
push
in
or
std
test
jns
mov
sbb
icebp
mov
addr16
inc
fistps
jne
ret
repz
ret
insl
call
lret
ret
add
mov
mov
mov
popf
mov
lds
sbb
jecxz
jle
adc
mov
icebp
pop
inc
sahf
js
inc
lret
andl
jg
sub
xchg
das
scas
or
in
jbe
mov
fwait
ss
push
xchg
test
pushf
cwtl
idiv
lea
cwtl
adc
sbb
xchg
push
mov
fcmovu
mov
enter
ja
xlat
dec
jp
int
lret
shl
inc
out
fs
lret
mov
dec
dec
aaa
mov
xchg
test
jae
out
push
lahf
ret
push
push
and
pop
repz
fists
and
pop
pop
fistpll
mov
lret
sbb
mov
inc
xor
mov
and
les
push
sub
addr16
sbb
push
xchg
mov
push
mov
pop
shl
mulb
inc
lret
data16
stos
scas
sub
out
pop
mov
imull
into
mov
mov
add
mov
jmp
sbb
sub
mov
ss
enter
shlb
inc
ss
popf
in
jl
clc
ljmp
enter
stos
mov
loopne
push
imul
dec
xchg
enter
scas
scas
das
sbb
pop
jge
add
inc
addr16
sahf
mov
scas
pop
jne
addr16
and
lock
inc
lcall
popf
sub
cwtl
push
xor
and
insl
sub
or
in
push
daa
push
and
movsl
and
dec
inc
mov
ljmp
rorb
xchg
mov
rcr
sbb
mov
xchg
mov
mov
jne
inc
test
out
fwait
adc
jb
arpl
test
sub
pop
push
fmull
jb
pop
jno
popl
mov
data16
add
cmp
inc
xor
lods
es
jg
xlat
mov
scas
add
mov
mov
repz
push
pusha
mov
xor
ljmp
in
pusha
mov
les
pushf
ret
cmp
popf
fcom
cwtl
je
je
sub
cwtl
aaa
mov
movsb
mov
mov
pop
dec
adc
inc
lret
mov
sub
test
pusha
jne
inc
dec
cmp
jge
popf
jbe
test
mov
and
xchg
jge
mov
in
adc
xor
mov
aad
adc
inc
lock
mov
imul
call
repnz
jo
jo
sarb
lcall
jns
stos
ret
or
fistl
clc
roll
aam
in
inc
arpl
mov
dec
out
jbe
stc
out
and
or
cli
daa
add
push
xchg
xlat
xchg
sub
sbb
je
add
rolb
into
push
fcmovnu
es
ret
sub
rol
stos
mov
push
lret
sbb
cmp
sub
mov
adc
stc
fldl
sarb
jae
jle
cwtl
push
sbb
je
movsb
repnz
sbb
add
mov
cmc
sbb
sbb
sbb
subl
push
mov
sti
xor
lods
xor
das
and
push
outsl
xor
dec
and
cmp
out
cmp
mov
sub
rcrl
dec
je
jo
frstor
fsubrl
movsl
enter
in
addr16
jle
sti
push
test
adc
fstpt
data16
pop
adc
xchg
das
cwtl
mov
jge
dec
jmp
dec
mov
and
std
scas
xor
repz
sub
sub
rcll
adc
cmpsl
xor
pop
mov
mov
jg
pop
jge
repz
fwait
pop
sub
sub
cmp
xor
add
fistpll
lds
bound
mov
pop
and
inc
shlb
insl
mov
jnp
xor
pop
cli
setb
fbld
jns
sarl
mov
mov
pop
subl
push
les
push
ret
mov
lea
iret
jne
jmp
mov
in
stos
pusha
push
jp
out
fnstsw
mov
adc
add
cwtl
aas
test
fidivs
js,pt
fs
xor
dec
push
orb
sub
fs
push
ror
lcall
call
cli
mov
adc
or
cmp
xchg
or
nop
push
movsl
out
fincstp
add
mov
ficoms
imul
lcall
popa
jnp
sub
punpckldq
ljmp
adc
inc
mov
sti
daa
popf
cmp
pop
jno
cmp
xchg
mov
jge
mov
mov
adc
pop
ret
ja
mov
vmovss
ret
mov
not
push
inc
push
and
in
ret
test
inc
test
dec
scas
xchg
mov
cmp
mov
add
fistpll
cmp
xchg
cwtl
mov
les
in
or
nop
cmpsb
add
repnz
mov
sti
mov
aad
mov
sbb
jnp
sub
push
ss
mov
mov
add
mov
add
lahf
xlat
call
fcompl
dec
mov
jno
mov
or
scas
xor
jecxz
mov
jecxz
sbb
and
push
xchg
daa
lahf
fisubl
jle
mov
push
push
js
inc
mov
pop
xchg
inc
and
adc
mov
push
jl
inc
jne
das
sbb
adc
mov
call
xlat
ret
push
shrl
push
outsl
xchg
dec
cmpl
mov
sub
cmc
cwtl
dec
cmp
sbb
or
fnstsw
cmc
xor
adc
adc
and
adc
test
std
clc
mov
push
stc
cwtl
js
push
stos
out
push
sub
fidivl
and
clc
aam
les
mov
icebp
push
jnp
or
inc
insl
push
repnz
ror
sub
pop
imul
fnstcw
mov
mov
mov
lret
add
push
mov
fs
in
and
ja
bound
push
xchg
mov
and
or
loopne
jmp
lds
or
push
neg
push
pop
jb
mov
lahf
push
inc
sarl
sub
dec
aaa
js
mov
fcomp
ja
xchg
cmp
std
in
xchg
mov
les
mov
jl
out
das
add
sub
mov
call
adc
inc
stc
dec
stos
push
mov
ficoml
imul
int3
xor
mov
repnz
fnstsw
les
insb
imul
fs
out
xlat
mov
mov
sbb
cld
add
mov
pop
pop
ljmp
sub
lahf
mov
jmp
push
insl
jle
test
sahf
aas
push
enter
leave
lahf
ret
push
mov
pop
push
pop
mov
imul
inc
shrl
xchg
push
test
pop
inc
pusha
adc
leave
cmp
mov
mov
xchg
fnstsw
ret
mov
pop
add
hlt
and
hlt
test
cltd
lret
cmp
lock
popf
push
mov
pop
or
sbb
sbb
decl
cli
pop
xchg
cmpsb
clc
dec
or
ljmp
stos
loop
ret
cltd
inc
movsl
aas
cld
xlat
jb
dec
stos
pop
inc
je
add
call
jmp
adc
jle
pushf
sub
fisttpll
or
inc
pusha
les
pusha
movsl
jo
or
mov
cmp
loopne
scas
std
dec
insl
xor
mov
sbb
dec
push
pop
jle
push
cmp
cmpsb
in
leave
sbb
xchg
aad
into
mov
out
in
sarl
cli
sub
xchg
jg
adc
cmc
icebp
rcll
and
add
cs
call
mov
push
mull
cmpsl
clc
in
loopne
ja
pusha
xchg
push
adc
mov
mov
cmp
and
jg
mulb
pop
stos
or
fs
or
xor
in
clc
icebp
jae
jp
test
push
pop
pushf
decb
sbb
mov
decl
mov
loop
mov
stc
lods
jl
inc
stos
push
xchg
shrl
xchg
rorl
ret
lds
xchg
adc
adc
adc
pop
xor
adc
aam
cmp
je
insb
push
lea
fisubrl
ss
fcompl
loope
xchg
sbb
je
mov
mov
push
jnp
call
or
movaps
xor
stos
lds
mov
in
popa
addr16
scas
inc
out
sbb
lods
mov
sub
andb
inc
cmpsb
push
cmpsb
mov
hlt
sub
jl
in
push
insl
mov
xor
out
les
ror
mov
adc
inc
bound
adc
cs
jl
jle
jbe
repz
sar
movsb
cli
pop
lea
inc
js
xchg
scas
sub
pusha
push
jle
push
std
pop
adc
pop
push
hlt
jae
jp
lret
out
mov
pop
push
in
cmp
fs
push
divb
push
ficoms
adc
mov
xor
push
loopne
in
aad
imul
arpl
imul
test
xchg
sub
inc
ror
iret
add
stc
movsb
ljmp
sub
cmp
jns
fbstp
inc
loopne
dec
mov
std
repz
jle
and
inc
cmp
lret
xchg
cmp
out
test
cs
sub
addr16
jbe
sbb
or
rcl
inc
add
fsubs
call
mov
ret
jg
adc
mov
in
lods
aaa
push
dec
dec
jp
imul
push
in
jmp
sub
pop
cmc
xor
int3
mov
and
push
jp
dec
cmpsb
sti
add
int3
div
jle
jb
pop
lods
hlt
in
cmp
add
out
xor
into
fbld
scas
pop
mov
jbe
in
ret
and
in
and
mov
jecxz
test
or
jae
pop
dec
jne
es
xor
push
push
sbb
ss
and
push
iret
mov
mov
repnz
or
repz
in
call
cltd
jns
push
xchg
pop
jmp
inc
movsb
lcall
icebp
aam
cmc
jo
insl
or
jmp
and
dec
adc
jns
pop
test
mov
pushf
mov
lods
cmp
mov
push
imul
js
mov
dec
sub
out
or
imul
sahf
insb
sti
test
repz
repnz
mov
mov
xor
pop
cmc
test
mov
ror
mov
xchg
jl
mov
cli
jmp
icebp
sub
es
lret
iret
movsl
insl
or
inc
pop
in
xchg
fwait
mov
inc
push
lret
arpl
dec
pop
shl
dec
jge
test
in
sub
in
and
loop
lcall
in
movsb
push
out
xchg
mov
jg
inc
sbb
call
inc
mov
lret
popa
gs
and
leave
movsb
clc
add
pop
fnstsw
mov
mov
jne
push
sbb
add
fdivs
jns
and
orl
outsb
mov
lret
mov
std
ret
and
xor
mov
es
sbb
push
out
pop
insb
pop
addl
jle
mov
mov
adc
push
pop
mov
bound
adc
call
xchg
outsb
fistl
iret
push
sub
popa
shll
jno
data16
mov
xchg
jo
xor
orl
cmp
out
mov
icebp
lea
push
in
fcmovb
mov
aaa
xchg
shll
push
inc
push
insb
mov
outsl
add
mov
fcoml
sahf
repnz
test
sahf
push
push
push
lea
add
xchg
flds
mov
mov
add
pop
test
bound
cmp
add
xor
call
mov
test
pop
inc
and
movsb
or
or
daa
cmp
arpl
aaa
mov
xor
mov
sbb
inc
stos
adc
fcoms
iret
leave
xchg
xorb
mov
jnp
mov
std
xor
out
outsb
pop
aaa
jo
in
jg
push
fcmovne
in
mov
jne
mov
inc
or
lea
dec
mov
xchg
lea
aam
out
out
and
mov
popa
inc
shll
inc
sub
ss
mov
popf
insb
das
add
push
imul
cmp
mov
das
and
inc
mov
or
enter
cmpsl
rorb
aas
daa
xchg
sarl
aad
pop
loope
push
push
pop
dec
pop
out
dec
js
dec
sbb
mov
in
jecxz
js
movsb
cmp
sub
adc
sub
fnstenv
out
pop
dec
bound
fisubl
ss
daa
mov
cltd
cmpsl
test
xor
or
loope
pushf
jp
mov
inc
push
call
jne
shll
in
sbb
add
clc
pusha
repz
in
jbe
xchg
shl
daa
fbld
cmp
pop
cltd
or
rorl
ret
adc
icebp
and
jns
or
xchg
mov
inc
cmp
sub
xchg
lcall
stos
sub
pop
clc
cmpsb
xor
stos
lcall
movsb
cmp
mov
icebp
mov
pop
fmull
stos
mov
mov
arpl
mov
mov
push
test
lahf
xor
aaa
adc
mov
sbb
mov
mov
pop
pop
fnsetpm(287
je
mov
clc
cmp
aam
int3
sarb
out
rcr
faddl
mov
lcall
jl
bts
rorl
dec
test
sbb
sbb
out
inc
or
adc
movsl
lods
lret
out
rcrb
je
mov
pusha
cmpsb
mov
clc
frstor
aam
stos
push
dec
andl
xor
jne
pop
jmp
insb
jbe
jl
lahf
repnz
lret
stos
add
test
cwtl
lahf
push
cmp
mov
outsb
push
scas
pop
mulb
in
dec
ja
or
adc
mov
and
rcrb
or
sub
dec
adc
mov
xor
test
mov
pop
sahf
dec
jp,pt
and
sub
mov
xor
xchg
add
push
xchg
in
sbb
mov
dec
mov
popf
repnz
cmp
and
xlat
iret
cltd
and
push
mov
adc
dec
shlb
fadds
popf
push
sbb
cmp
cld
mov
loope
cmpsl
iret
cld
xchg
jb
pop
iret
dec
shl
fcoms
or
add
clc
push
push
mov
stos
out
repz
push
sbb
ljmp
je
mov
sbb
lock
sbb
and
shll
push
dec
mov
das
cltd
outsl
aas
test
push
mov
sbb
lahf
push
test
jo
cmp
xchg
flds
push
add
leave
ja
inc
ljmp
in
pop
jg
adc
dec
pop
out
and
lret
sbb
jl
inc
lcall
add
pop
push
sar
xchg
mov
or
cmp
inc
add
and
pop
inc
nop
inc
insb
mov
data16
shrb
int3
push
pop
sbb
or
jbe
les
sub
jecxz
jle
inc
mov
mov
les
movsl
loopne
cmp
lcall
cmp
das
or
inc
sub
sbb
nop
jecxz
movsl
or
insl
jnp
out
sar
fs
rcrl
lea
jne
fwait
push
and
xchg
imul
daa
je
or
pop
xor
sbb
cmp
xor
push
sub
iret
mov
mov
dec
arpl
xchg
push
jmp
push
testl
in
outsl
dec
pop
mov
arpl
inc
xchg
das
rorb
ljmp
je
sbb
xchg
sbb
aas
inc
xchg
or
aam
daa
jl
int
pop
repz
cmp
icebp
push
xlat
bndldx
mov
pusha
dec
pop
daa
and
pop
xchg
pop
jg,pt
popa
push
pop
xchg
cwtl
dec
cltd
xlat
loopne
sbb
outsl
and
xchg
subl
or
test
orb
cmpsb
fisubl
xchg
jne
ja
mov
leave
cmpsb
test
dec
fisttps
push
aam
outsl
fwait
icebp
int
add
pop
sbb
pop
pop
imul
lcall
out
cmpsl
bound
rcrl
inc
adc
jmp
loopne
aaa
dec
sbb
dec
out
icebp
call
sbbb
loope
fs
push
out
xchg
movsb
or
sub
jg
xor
jmp
dec
jmp
dec
outsb
push
mov
push
das
jl
hlt
in
int3
repz
lret
adc
lods
lea
add
adc
inc
mov
call
cmp
call
int3
addr16
pop
cmc
push
pusha
sub
sarb
mov
sub
nop
out
pop
adc
xor
movsb
dec
in
bound
out
mov
push
push
lock
inc
pop
sti
sbbl
push
kmovw
shlb
ds
add
cmp
and
arpl
nop
mov
mov
jg
dec
stos
pop
sarl
push
outsl
lock
mov
enter
fs
movsb
pop
and
test
rol
and
pop
add
mulb
mov
mov
ljmp
addl
aad
jp
or
cmp
xor
xchg
pop
pop
jne
cltd
je
add
cmp
stos
push
and
mov
or
inc
repnz
ljmp
dec
movsb
pop
xor
mov
sbb
ds
ja
icebp
stos
push
cmc
adcb
fwait
ljmp
mov
mov
lock
mov
push
sarb
std
je
in
jp
push
mov
dec
xor
cltd
xor
lds
into
push
pop
mov
xchg
sbb
mov
sub
and
pop
scas
ror
imul
fdivrp
adc
cmp
lock
in
pushf
cmp
jae
fadds
inc
jnp
xchg
arpl
rcll
out
mov
dec
or
push
mov
mov
fwait
adc
andb
ror
cmp
pusha
clc
mov
jnp
repz
aad
sbb
dec
sub
xlat
jb
repz
in
sbb
popa
or
xorl
aas
fadd
dec
mov
std
in
movsb
int3
repz
call
rcrl
inc
adc
pop
out
ret
push
cld
popf
ret
pop
mov
sti
shll
lret
add
or
lods
lods
imul
aam
add
push
test
lret
xor
adc
mov
sti
out
jb
jle
and
idivl
aas
ja
jns
insl
add
subb
call
xchg
adc
and
lret
mov
scas
sbb
pop
cld
in
outsl
sub
stos
sub
xchg
adc
rcr
jg
jp
repz
sahf
xor
jne
or
pop
add
inc
mov
aaa
mov
es
data16
xor
std
dec
cmpsl
fs
xor
xor
jmp
cmp
xchg
insb
dec
fdivrp
xchg
imul
mov
mov
push
popa
jmp
cmp
and
cmp
jle
in
jns
jb
pop
sub
lea
cmpsl
push
inc
cltd
cmp
cmp
mov
push
scas
xchg
push
pop
sti
mov
push
lret
sub
xor
cs
mov
xor
push
js
inc
dec
leave
jmp
xchg
jp
daa
mov
mov
notl
ds
bound
jmp
or
mov
push
pop
je
mov
xchg
mov
test
inc
mov
les
mov
jbe,pt
xlat
testb
pushf
lret
leave
mov
mov
push
cs
xor
iret
shlb
push
leave
lock
adc
pop
fdivrs
mov
add
lahf
idivb
das
out
es
mov
add
sbb
rcrb
cmp
adc
jp
arpl
lcall
sub
movsl
addr16
sub
rclb
pop
sub
sbb
fs
hlt
xchg
stc
lcall
stos
sti
sub
jge
pop
mov
repnz
arpl
cmp
mov
addr16
in
nop
add
leave
js
sub
mov
push
dec
shl
jns
movsl
adc
aas
popa
inc
push
rorb
mov
mov
sbb
aas
setbe
loope
add
inc
notb
je
sbb
fucomip
cmp
sbb
maskmovq
inc
sbb
dec
test
mov
add
sbb
ss
jg
xchg
lcall
test
pop
out
mov
ljmp
pushf
fsubrs
push
dec
nop
mov
lock
lock
sub
sub
in
imul
pop
lcall
fnstsw
mov
or
and
jecxz
gs
cs
ficoms
out
xchg
push
jbe
cmpl
sbb
mov
stos
nop
rcll
shll
push
adc
fwait
sub
add
sti
pop
mov
sarb
in
pusha
ja
or
flds
sbb
ljmp
inc
mov
xchg
imul
ret
mov
push
in
or
int3
test
push
pop
mov
call
xlat
mov
mov
push
out
xor
push
add
adc
pop
cmp
daa
jns
or
inc
subl
dec
int3
mov
push
inc
xor
mov
sbb
mov
adc
xlat
push
jo
inc
mov
inc
sbb
mov
push
loope
gs
cli
push
dec
sub
movsb
add
mov
and
xor
push
sub
inc
and
jno
add
or
loop
or
sbb
xchg
cmpsb
or
outsl
mov
rclb
inc
mov
sub
jmp
test
push
adc
stc
addb
pusha
sti
push
xchg
loop
sbb
push
sar
sbb
addl
push
sahf
sahf
in
test
cmp
aaa
add
test
mov
inc
int3
data16
aas
xor
or
pop
push
fdivs
adc
mov
inc
mov
cmc
mov
push
xchg
inc
mov
sub
sbb
je
ss
shr
sahf
adcl
inc
push
dec
dec
fdivrp
push
inc
das
lcall
bound
out
mov
xor
push
shll
and
aad
xchg
push
mov
mov
dec
push
hlt
cmp
scas
adc
icebp
cmc
dec
push
cmpsl
mov
push
fsts
xchg
or
aaa
xor
jp
roll
push
lret
in
push
pop
stos
and
or
lret
xchg
repz
in
dec
call
dec
and
pop
pop
insl
jno
aam
pusha
lods
dec
scas
loopne
xchg
popf
lods
cltd
jl
jge
adcb
mov
add
popf
ficoms
pop
jb
and
xor
clc
mov
or
in
mov
int3
js
aam
push
xchg
jge
or
dec
lret
ret
dec
and
mov
loop
mov
mov
push
scas
add
mov
dec
je
or
dec
jne
sbb
inc
xor
xchg
sahf
jge
push
outsb
sti
sbb
dec
les
mov
xor
mov
pushf
ljmp
mov
dec
xchg
add
outsb
popa
jnp
addr16
push
in
cs
lods
push
mov
mov
test
pop
mov
or
imul
fwait
xlat
gs
push
stc
test
lahf
dec
mov
cmp
ret
out
mov
inc
fdivs
imul
orl
enter
ret
jmp
add
inc
push
enter
add
sbb
lock
and
xlat
pop
jmp
enter
mov
shr
rorb
mov
xchg
hlt
push
inc
sub
inc
or
xchg
xor
and
mov
add
les
shrb
stos
movsl
mov
lock
hlt
sahf
cli
adc
xchg
cwtl
or
loope
repnz
in
test
jnp
mov
mov
pop
xor
dec
mov
icebp
pushf
pop
push
or
popa
and
add
and
dec
push
cltd
stos
les
fs
ds
in
mov
sbb
sub
fcompl
aas
add
mov
dec
popf
mov
and
mov
pop
imul
cmpsl
xchg
cmp
leave
sbb
popa
sub
dec
hlt
outsb
pop
mov
push
std
ljmp
movq
leave
lret
dec
pusha
push
sbb
rclb
leave
repz
mov
mov
mull
xor
fnsave
fs
ja
push
sbb
jecxz
shl
mov
outsl
cltd
fcoms
xor
arpl
lea
in
out
popf
jmp
cmp
sub
adc
mov
sbb
xchg
pop
outsb
mov
cld
pop
std
and
dec
mov
ret
or
push
pop
shlb
jbe
sub
mov
int3
jge
push
pusha
fdivr
adc
ss
subb
lahf
aad
dec
jne
incb
mov
xor
pop
dec
loop
adc
push
dec
std
or
pushf
jo
sbb
popa
cli
lcall
test
dec
rcll
add
fsubp
jmp
mov
mov
ret
adc
lea
jg
lea
mov
jb
gs
mov
mov
inc
int
sub
inc
xchg
pop
cmpb
inc
adc
fsts
mov
xchg
int
fdivrl
dec
xor
jmp
xchg
in
add
sbb
cltd
popa
adc
push
sub
sub
out
jp
and
js
js
jno
sbb
jno
lcall
and
icebp
and
bound
insl
push
cwtd
add
push
mov
test
dec
mov
add
sub
xchg
cltd
push
pop
repnz
mov
mov
lea
cmpsb
push
xchg
nop
pop
in
mov
scas
sub
int3
les
push
pop
orb
js
stc
sbb
je
lock
add
mov
sub
out
xor
mov
cmp
stos
insb
fwait
cmpsb
mov
xchg
fdiv
mov
movsb
cltd
sub
ljmp
add
stc
nop
and
and
sub
imull
mov
cli
mov
fistl
adc
add
xchg
std
sub
push
push
aad
stos
or
fs
mov
xor
adc
push
adc
xchg
inc
dec
dec
cmp
cs
mov
out
lods
inc
mov
xor
jle
dec
cmp
inc
fsubrs
push
dec
jle
mov
out
mov
pop
in
push
jb
dec
jbe
mov
pop
inc
movsb
dec
pop
pop
popa
xor
jmp
in
in
xchg
and
inc
mov
scas
popf
mov
pop
xchg
mov
mov
out
xor
mov
pop
push
mov
pop
jo
loop
js
or
pop
divb
out
in
in
clc
in
aam
ja
xor
sub
jne
test
and
gs
xchg
daa
adc
jmp
iret
sbb
iret
inc
push
loop
es
jb
xor
mov
xchg
lcall
cmpsl
stos
pop
jg
add
pop
jg
jne
jb
and
mov
xchg
pop
xchg
out
jb
dec
mov
sub
dec
cmpsl
andb
cs
popa
in
cmpsb
cli
addb
adc
test
inc
push
int
call
xchg
js
jl
dec
xlat
sbb
jl
mov
ret
rcr
subb
adc
rcrl
mov
fwait
mov
pushf
xor
mov
xlat
mov
stos
lret
adc
add
scas
xor
lock
data16
pop
lods
push
cmp
push
or
push
jmp
ret
dec
cld
push
add
popf
push
adc
push
add
repz
xchg
xchg
sahf
lds
cli
lods
decb
shll
sbb
aam
mov
stos
sub
out
pop
ljmp
arpl
cld
inc
lret
dec
jle
call
xchg
mov
sbb
js
std
fsubl
imulb
mov
adc
dec
cmp
lds
fcoms
mov
cmpsl
or
cmp
ss
inc
mov
js
notl
inc
and
xchg
rorb
cmp
mov
inc
test
sub
gs
loope
pop
rorl
adc
sbb
leave
pop
jle
inc
mov
lea
sbb
push
fadd
dec
sub
bound
and
int3
shlb
xchg
add
movsl
imul
ss
xlat
shl
int3
mov
cld
movsb
cltd
bound
sbb
cmp
sarl
pop
imul
outsb
cld
stc
xor
mov
data16
mov
addl
outsb
stc
test
add
xor
int
das
in
ftst
ss
loop
mov
outsl
call
add
or
xor
mov
dec
inc
in
cs
loope
and
addr16
mov
inc
stc
adc
je
sahf
out
inc
into
fadds
pop
mov
add
fs
jl
or
cltd
inc
jo
jge
jl
cmpsl
out
lods
jmp
ljmp
aaa
scas
or
cmc
loopne
xor
pusha
ljmp
pusha
add
xor
inc
xor
stos
rcrb
pop
sub
jo
int3
sub
or
jle
mov
and
ud0
push
push
arpl
int3
push
pop
mov
push
test
dec
ror
add
cmpsl
add
push
inc
sub
sbb
addr16
leave
fidivs
jp
fstpt
int
call
out
xchg
imull
sbb
add
jg
loope
dec
cmpsl
xor
nop
inc
jp
add
mov
fsub
mov
jns
in
adc
jle
scas
inc
sbb
and
sub
mov
mov
orl
sub
lds
sbb
lods
notl
dec
push
or
fs
jge
jle
xchg
inc
push
hlt
add
push
push
lods
sbb
imul
lret
or
cmpsl
loope
fstpt
dec
inc
notl
ss
imul
pop
lcall
repnz
int
mov
cmp
pop
mov
pop
out
xor
push
pop
in
jle
cmp
push
inc
das
mov
mul
pop
mov
jg
inc
stos
mov
shlb
fwait
adc
movsb
cmp
mov
cmp
fldl
dec
out
inc
push
xchg
lret
repz
cmc
mov
cmpsl
aaa
mov
cmpsl
pop
arpl
push
ljmp
push
stos
sti
imul
dec
test
mov
stc
ret
add
sahf
leave
sub
mulb
adc
dec
xchg
rorb
jle
mov
pop
scas
xlat
jmp
rorl
mov
add
jmp
call
xor
push
div
sub
cmc
xchg
aam
sahf
sti
mov
pop
clc
dec
sar
cmc
adc
cltd
dec
test
daa
nop
cld
aas
lcall
pusha
ret
push
inc
aas
dec
scas
sub
xchg
push
and
sbb
jecxz
cmp
ror
dec
xchg
mov
or
lcall
add
jmp
mov
xchg
clc
movsb
mov
sbb
or
scas
cwtl
add
or
ret
or
scas
adc
loope
inc
fsts
das
pop
icebp
mov
fimull
mov
add
pop
repz
sbb
mov
dec
jl
divb
mov
stos
popa
lods
loopne
lcall
addr16
push
stos
iret
mov
sahf
lods
or
inc
inc
pop
inc
scas
push
nop
ds
mov
js
aam
pop
fs
in
jmp
push
ds
pop
inc
mov
xchg
arpl
outsb
xchg
add
sbb
or
incl
sub
pop
ret
insl
insb
push
cmp
push
cmp
push
push
repnz
jae
fstps
in
inc
cwtl
lret
xchg
cmpsb
es
cmp
jle
sahf
sbb
fsubl
test
and
movsb
pop
bound
cli
insb
call
popa
mov
rclb
sbb
bound
adc
mov
add
xor
inc
fwait
imul
fistl
ss
xlat
sahf
pop
add
dec
jecxz
orl
pop
mov
insl
sub
sbb
aas
mov
mov
push
inc
or
xor
jecxz
hlt
pop
ja
ja
arpl
pushf
into
push
sbb
cs
or
push
pusha
adc
pop
fadd
outsb
jae
imul
mov
ret
iret
mov
xor
int3
test
bound
or
cmp
loopne
clc
lea
rcrl
cmp
roll
jns
ja
xor
pop
cmpsb
loop
cmp
ret
inc
sbb
stos
sbb
push
or
xchg
int3
mov
cwtl
xchg
std
lea
icebp
in
pop
mov
out
xchg
insl
out
mov
pop
inc
inc
lcall
jge
inc
in
das
ret
scas
ljmp
push
stos
rcll
jmp
sti
ja
iret
add
pop
or
clc
xor
loope
roll
lret
jmp
bound
std
adc
mov
adc
mov
xchg
sbbl
mov
in
setp
mov
fwait
je
dec
and
jecxz,pn
xorl
cltd
repz
mov
shll
dec
and
mov
xchg
sbb
aaa
add
cmp
add
or
fiadds
sarl
jae
pop
mov
cli
repz
xlat
mov
stos
push
jo
shlb
cmp
std
repz
popa
xor
adc
mov
add
push
push
push
std
fisttpll
enter
lods
imul
icebp
shlb
mov
xchg
adcl
sbb
enter
push
mov
pop
test
loop
mov
xchg
lock
sti
inc
xor
xchg
mov
loope
xchg
test
cld
sbb
outsb
mov
pop
pop
imul
fcomps
mov
in
mov
sub
adc
lret
mov
lahf
stos
aam
test
lock
jp
xor
clc
out
cmpsl
jnp
pop
dec
mul
stc
divb
aaa
in
ret
jmp
aaa
cmp
sub
clc
and
and
leave
lcall
add
push
adc
pop
arpl
mov
xchg
lcall
push
xchg
dec
push
loopne
repz
add
mov
and
pop
mov
cmc
pop
jno
stc
fdivrl
xor
scas
shrb
jns
inc
and
cwtl
outsb
xchg
push
push
jno
xchg
lea
adc
pop
lods
cld
popf
and
inc
pop
int3
das
jae
jmp
dec
push
jge
mov
mov
aas
insl
loopne
stc
xchg
mov
pop
and
inc
pop
shlb
pop
push
or
fisttpll
pop
sub
or
sbb
dec
mov
or
sub
incl
nop
inc
mov
fidivs
arpl
jl
dec
repnz
out
dec
orl
cld
or
cltd
lret
call
cmp
push
cmpsl
fsts
sub
cwtl
rorb
repz
pop
pop
and
push
test
stc
xor
cmp
jge
xor
inc
xor
std
and
pop
mov
stc
mov
ret
jge
imul
dec
add
mov
stc
push
jg
mov
cwtl
and
fbstp
hlt
sub
mov
fmul
cmp
pop
xor
or
in
movsl
arpl
push
clc
std
cwtl
aaa
in
dec
sub
pushf
rorl
sub
jb
stos
mov
xchg
pop
jp
or
and
inc
scas
fwait
mov
lds
push
repnz
mov
mov
jbe
rolb
rorl
xor
inc
sbb
icebp
stc
mov
sbb
and
negb
cli
cmp
dec
push
add
cmp
jnp
jge
fbld
popf
push
rcll
push
jl
and
and
out
xlat
jecxz
sbb
add
ljmp
leave
rcl
push
inc
cmp
insb
dec
outsb
xor
jb
adc
hlt
pop
in
push
rolb
xor
dec
insl
dec
jo
das
icebp
cmp
add
outsl
mov
and
jmp
push
push
dec
incb
or
add
or
push
popf
lahf
mov
popa
sub
or
aam
sbb
ret
and
and
je
add
bound
push
mov
insb
fwait
xchg
lock
pop
jo
pop
and
dec
lret
pushf
pop
and
mov
pop
or
outsl
inc
pop
int3
loopne
push
fwait
imulb
outsb
fstps
lds
stos
arpl
add
or
push
fidivs
push
jnp
push
sub
and
or
das
cwtl
test
or
scas
sahf
push
xor
xor
filds
mov
mov
ja
cmp
imul
pop
test
add
ljmp
mov
ret
jg
xchg
daa
mov
or
sahf
outsl
adc
lret
adc
lret
rorl
mov
iret
decb
sub
in
fs
test
fisubl
xchg
push
sbb
loope
mov
cs
bound
arpl
xchg
cmp
clc
out
fadds
lock
repnz
scas
xchg
lahf
jns
mov
mov
mov
add
subl
hlt
frndint
test
leave
adc
mov
outsl
and
cmc
mov
push
out
pop
lds
nop
aaa
sti
nop
inc
mov
imul
xor
mov
inc
push
xchg
sbb
mov
andb
mov
cli
jb
mov
int
or
es
jl
idivb
mov
pop
adc
mov
out
xchg
pop
push
jnp
inc
inc
test
mov
dec
adc
jae
inc
fnsetpm(287
cld
mov
mov
dec
imull
mov
imul
addr16
imul
mov
ret
mov
jae
add
nop
xchg
sub
push
test
jno
mov
cmp
jne
push
push
pusha
dec
mov
clc
insl
cld
add
add
mov
mov
and
pop
arpl
add
loopne
mov
mov
loop
ret
add
add
pusha
jns
rep
dec
testl
xchg
mov
mov
jl
add
inc
dec
sbb
rcr
fs
adc
adc
pop
dec
loope
pusha
aas
jno
and
divb
test
mov
cmc
fists
or
xchg
repnz
add
outsl
adc
or
in
pusha
scas
inc
mov
out
xchg
inc
addr16
fmuls
je
pop
jl
popf
and
js
xchg
roll
inc
add
sbb
adc
test
xchg
int3
ss
or
xchg
sbb
mov
push
dec
nop
cmp
out
and
je
loopne
sub
mov
andb
mov
inc
testb
and
mov
cwtl
fisttps
ja
decb
aas
pop
pop
ret
stos
stos
dec
push
adcl
int3
mov
push
push
ljmp
mov
jg
push
push
fst
mov
add
sub
test
xor
sbb
insb
pop
jb
or
out
hlt
out
js
mov
mov
adc
and
xor
and
js
xchg
mov
push
and
popa
lahf
into
shrl
sub
jb
jo
sbb
les
push
stos
in
push
xor
dec
add
xchg
rcll
mov
and
dec
hlt
dec
loopne
cltd
in
and
mov
inc
shll
cmp
xchg
add
ror
in
out
push
sub
pop
cmc
xchg
xchg
test
mov
loop
or
xor
loopne
loopne
pop
sub
les
push
lret
test
shlb
shrl
idivb
pop
aam
lahf
xchg
popa
fisttps
mov
leave
xchg
into
and
addps
imul
xchg
div
out
aad
js
pusha
fcmovnbe
and
andl
aaa
scas
movl
insl
mull
jns
xor
repz
adc
jb
inc
inc
mov
push
and
and
cmp
clc
aad
pop
pand
xchg
or
aad
out
mov
xor
movsl
loope
pop
cli
divb
leave
adc
adc
mov
adc
stos
mov
dec
stos
jo
mov
mov
jl
sub
jb
push
push
bound
in
jns
popf
pushf
rol
fisttpl
insb
add
pop
mov
rorl
dec
iret
arpl
push
imul
jo
push
sahf
xlat
dec
or
inc
xor
movsl
inc
dec
loop
imul
adc
cmp
adc
pop
jnp
enter
inc
and
lret
aad
std
xchg
xchg
xchg
lock
xchg
sbb
or
push
mov
jl
jno
out
fmull
stos
popf
mov
dec
xor
icebp
imul
hlt
pop
fwait
shrb
in
xchg
dec
shr
dec
jb
mov
xchg
out
fscale
pop
inc
mov
dec
adc
movl
lcall
addr16
cmc
xor
xchg
push
psrad
xchg
fimuls
or
hlt
mov
cmp
lret
jb
push
inc
sub
loopne
add
cmp
sub
xor
cmp
cmp
adc
pop
andl
sti
push
cmp
loopne
cld
lods
les
in
imul
or
call
mov
into
es
push
test
jecxz
push
lods
or
add
jne
jo
idivl
xor
lahf
pop
dec
insb
mov
pop
mulb
push
cmpsl
test
jno
das
xor
mov
add
jo
pop
stos
int
leave
test
outsb
mov
outsb
sub
sbb
cld
mov
aam
sbb
dec
jns
orb
test
lret
addl
ljmp
aad
or
dec
cwtl
icebp
push
inc
pop
jle
stos
jp
subl
ret
jo
int
shrb
jno
sbb
lea
mov
fs
int
cltd
mov
cli
fdivl
jge
mov
daa
fldcw
or
push
rorb
jns
das
xchg
cmp
jns
xor
inc
xor
dec
dec
cltd
push
notb
sub
adc
scas
mov
sub
mov
dec
pop
dec
lods
mov
popa
popa
pop
dec
cmp
or
mov
mov
out
inc
cmp
pop
adc
fisttpl
mov
jnp
dec
jg
fidivl
mov
sbb
mov
mov
sarl
pop
or
pop
xchg
das
adc
mov
imulb
jns
out
push
mov
xchg
loopne
arpl
in
push
int3
lods
js
fistpll
push
adc
and
outsb
loope
or
fnstcw
movb
int
or
lds
stos
outsb
pop
and
or
inc
sub
pop
xor
dec
push
pop
inc
aas
stos
repz
pop
mov
mov
push
bsr
mov
xchg
jno
or
dec
insl
push
mov
mov
hlt
xchg
dec
cmp
xchg
mov
fcmovb
sub
push
xor
jb
stos
inc
call
jnp
mov
jmp
lcall
mov
dec
dec
xchg
mov
mov
scas
imul
cmp
repz
xchg
xchg
inc
stos
out
loop
dec
add
ja
ja
cmp
xchg
jecxz
cmpsb
mov
mov
xchg
lahf
iret
mov
test
pop
out
or
push
adc
mov
or
insb
pop
dec
aam
sub
jns
pushf
lret
stc
into
shlb
mov
in
sar
sbb
pop
aaa
jo
xor
inc
popf
scas
icebp
arpl
je
xchg
xor
fisttps
jne
push
ud0
roll
jbe
adc
fsubrl
andl
sbb
aad
xor
or
mov
or
jno
cmp
jmp
pop
cmp
in
fwait
dec
fs
sub
xchg
cld
inc
push
fldl
push
cmpsb
insb
imul
out
add
and
data16
mov
or
out
pop
push
jo
sub
int3
xor
fnstsw
inc
push
out
jecxz
enter
or
or
mov
xchg
das
dec
sbb
pop
stc
scas
ja
pop
inc
call
cmpsl
fists
cmp
mov
sub
in
imulb
sbb
xor
ret
and
xchg
or
fdivs
jns
repz
mov
or
ja
fwait
shrb
addr16
cmpsl
fwait
push
adc
popa
push
push
sub
in
int
jno
fcompl
inc
scas
mov
pop
negl
imul
cmp
add
inc
aaa
aaa
push
in
mov
lea
dec
sti
and
and
push
mov
xchg
lahf
mov
in
xor
jbe
cli
pop
or
iret
wbinvd
jbe
dec
cmc
mov
aad
xchg
sbb
out
cvtpi2ps
femms
cmc
test
int
sbb
mov
shlb
inc
clc
pop
xchg
and
cmp
out
inc
jbe
js
sbbl
cmpsl
call
daa
cmc
es
push
test
dec
lods
leave
jb
push
shr
mov
ljmp
add
jmp
cli
ret
or
out
pop
cmp
test
je
add
aam
mov
push
mov
cmp
lea
addb
pop
xchg
imul
jg
jecxz
in
sti
sub
retw
addr16
call
icebp
rcll
sbb
push
push
push
dec
rorl
pushf
cmp
sbb
xchg
add
jge
or
mov
xor
mov
inc
popf
push
sbb
in
out
xchg
ds
add
sti
pop
jp
rcll
inc
stc
stos
int3
add
cli
mov
adc
addl
or
dec
das
imul
out
dec
imul
daa
xchg
or
inc
or
inc
push
ljmp
xchg
xchg
lret
js
dec
mov
jmp
lahf
clc
xchg
cmpsl
add
ret
push
sub
es
test
je
nop
mov
lahf
dec
je
xchg
std
mov
mov
jb
mov
gs
daa
inc
jge
ljmp
outsl
mov
fisttpll
xchg
cmp
add
stc
xor
jecxz
rorl
fists
xchg
mov
push
in
jmp
mov
bound
pop
lahf
int3
sti
dec
cltd
mov
mov
pop
psrlw
outsl
or
movsb
sarl
in
test
xor
call
sub
xor
mov
pop
or
mov
mov
orl
insb
push
jl
insl
dec
jne
mov
or
fwait
pop
je
cmp
inc
ret
int
out
int
nop
into
js
sbb
addr16
cs
lahf
dec
adc
jnp
fwait
out
xchg
int
sub
outsb
sbb
dec
sub
cmp
add
dec
and
mov
inc
mov
xor
adc
mov
bound
mov
jo
cmp
mov
adc
call
push
mov
add
movsb
fs
xor
cld
xchg
ds
lahf
sbb
repnz
add
cltd
out
daa
adc
fwait
sbb
cmpsl
mov
int
sub
psubsb
pop
xchg
js
mov
test
push
cmp
repz
mov
or
daa
sub
in
or
sub
dec
leave
leave
testl
mov
int
mov
xchg
loop
sbb
fcoms
cmp
cmp
push
shll
sbb
loope
sahf
xorl
sub
and
ljmp
fwait
test
xor
mov
add
ret
loope
insb
cwtl
out
and
push
pop
imul
mov
jno
scas
call
and
out
sub
sbb
fistpl
jno
and
mov
loopne
add
imul
fnstcw
jne
cmp
in
shll
js
int
xchg
int
mov
jg
nop
popf
leave
pop
hlt
lahf
pop
sub
mov
cltd
adc
icebp
sar
sub
xchg
and
push
aad
cmp
sahf
stos
stos
and
adc
push
test
mov
lret
divl
mov
mov
jae
dec
mov
mov
mov
lret
mov
daa
or
jne
mov
negl
inc
add
das
push
xor
xchg
adc
out
mov
add
jmp
dec
test
adc
xchg
push
or
mov
rcll
pop
enter
test
mov
ljmp
inc
int
ds
das
testl
lds
pop
mov
mov
add
andb
fwait
stc
pop
loop
repnz
pop
mov
inc
mov
mov
jle
inc
xorl
jns
testl
jnp
mov
fwait
mov
in
dec
arpl
loope
test
jmp
lahf
jecxz
add
cmp
inc
pop
cld
dec
mov
lret
popf
lea
push
sarl
scas
stos
push
adc
add
mov
mov
push
sbb
movl
inc
dec
cmp
add
loopne
sub
mov
jge
xlat
sub
sahf
loop
mov
mov
and
adc
pop
movb
cmp
jo
jle
mov
push
mov
ljmp
test
test
xor
out
sbb
xor
push
pusha
std
outsl
sbbb
cli
jmp
test
or
lret
shl
out
out
out
cmc
in
pop
inc
xchg
cmp
inc
cmp
xchg
sbb
jns
xchg
aam
out
popf
shll
inc
arpl
mov
add
aas
xchg
ret
jecxz
test
int
jmp
jg
int3
addr16
inc
lret
or
ret
fsts
dec
lods
cs
dec
mov
fcoml
mov
push
xlat
jno
aam
in
bnd
addr16
mov
rolb
or
iret
add
xchg
rorb
cmp
pop
sar
adc
ficompl
in
in
repz
inc
or
popf
fldl2e
jecxz
jg
ja
mov
cli
cmc
ret
fmulp
sti
fsubrs
inc
aas
jge
add
filds
pop
cmp
sbb
insb
mov
and
jecxz
and
cs
gs
ja
insw
inc
xor
loop
call
shll
repz
stc
pop
les
dec
xor
or
sbb
sub
inc
jle
incb
xchg
int3
stos
push
inc
fldz
sbbl
pop
or
icebp
in
imul
jne
aam
sub
repz
jb
xor
inc
test
cmc
pop
xor
fidivs
pop
je
loop
fadds
loopne
lcall
pop
aaa
js
jo
push
cmp
shlb
int
in
aas
pop
fistpl
or
or
xchg
and
repz
mov
push
jp
lret
sub
sbb
mov
daa
dec
inc
dec
cld
pop
fdivrl
shll
aas
pop
jae
sub
scas
movsb
fbld
in
or
jb
rorb
mov
push
leave
push
test
ret
and
push
sbb
fs
enter
xchg
xor
lret
sbb
cmc
cmp
inc
pop
lahf
sub
dec
fs
sub
jno
pusha
loopne
pushf
mov
add
adc
enter
jecxz
sbb
and
xchg
xchg
iret
fcmovbe
pop
dec
inc
push
pop
mov
and
jecxz
cmp
or
and
sub
xchg
jne
sahf
dec
cmp
inc
or
xor
outsb
add
dec
test
mov
jge
push
data16
mov
inc
pop
push
pusha
fs
aas
inc
js
jae
das
mov
dec
xchg
lret
fcmovnbe
dec
fmuls
inc
cmp
jo
lret
jge
add
push
sub
mov
popf
sbb
cld
dec
mov
insl
mov
insl
jp
inc
lock
add
test
pop
mov
sbb
cmc
push
out
aas
test
push
sarb
imul
pusha
xor
into
mov
es
push
jbe
or
fdivr
icebp
adc
in
es
mov
test
cmc
into
stc
ret
icebp
daa
out
mov
pop
add
loopne
and
popf
push
xor
js
xor
dec
add
iret
cmp
sub
mov
dec
pop
mov
adc
insb
mov
hlt
aas
imul
pusha
sub
std
movsl
push
in
repz
add
adc
nop
mov
inc
std
sbb
jnp
jne
enter
loope
adc
mov
sub
push
cmp
push
mov
push
imul
and
pop
popf
imul
fwait
int
pop
iret
outsb
xor
out
test
xsha256
cmpsb
adc
popf
xor
testl
mov
and
shrb
mov
mov
clc
jb
xchg
xchg
out
loope
mov
cmp
ret
xchg
fcomps
movsb
fsubr
test
mov
mov
lret
mov
cli
imul
and
es
lods
shrb
mov
xor
in
mov
sbb
int
inc
ds
xchg
bound
push
inc
mov
mov
fwait
call
ret
push
in
push
push
mov
daa
repz
mov
adc
imul
or
add
jnp
push
sub
xchg
movsb
decb
js
add
leave
sti
dec
cs
rclb
add
imul
enterw
sti
stc
out
xchg
xor
fistpll
and
stos
test
mov
mov
cmp
sarb
aaa
ss
pop
push
jge
xor
out
arpl
das
ret
in
jecxz
xchg
push
push
std
lock
jb
mov
sub
push
ret
leave
pop
xchg
das
jns
jge
add
dec
minps
pop
pop
and
repz
lods
aaa
jecxz
out
push
notb
das
decb
pop
xchg
or
aad
sahf
and
in
push
test
or
pop
fstpt
aad
dec
xchg
loopne
sets
mov
jnp
loop
push
scas
icebp
insb
mov
cmp
stos
leave
mov
mov
xchg
cmp
out
jle
bound
in
inc
and
mov
lahf
addr16
movsb
mov
imul
xor
sbb
xchg
out
mov
icebp
insb
pushf
jge
les
pusha
int3
imul
out
push
mov
add
cmpsb
rorl
mov
xchg
push
mov
adc
shr
int3
push
mov
stos
push
push
and
pop
imul
and
pop
mov
es
into
lea
add
gs
in
shll
push
dec
pop
and
add
out
notb
in
or
popf
js
rclb
inc
div
inc
jecxz
sub
push
cmp
add
out
scas
dec
inc
sub
aaa
test
lock
ret
testb
and
cwtl
mov
push
push
inc
push
mov
mov
mov
mov
mov
or
xchg
pushf
rolb
xor
shrb
lds
xorb
sub
adcl
mov
mov
aas
sbb
xchg
rcrb
test
push
data16
push
pop
jge
adc
sbb
je
pop
ljmp
adc
or
adc
jmp
iret
std
or
inc
shll
lds
fbstp
or
jecxz
mov
adc
mov
cmp
into
mov
xor
outsl
inc
cwtl
mov
cmpsl
movsl
pop
add
test
cmp
test
add
xchg
jo
or
cmp
mov
adc
fwait
sub
and
pop
pop
jmp
add
mov
pop
sbb
cmp
and
or
xchg
movsl
mov
ja
xchg
xchg
mov
jns
movsb
fwait
cmc
and
out
pop
xor
pop
xor
cltd
and
add
fisubrl
fldcw
dec
popf
loop
or
test
popa
out
idivb
sbb
insb
cmp
dec
aaa
in
ret
mov
inc
in
imul
and
add
xor
sbb
mov
shll
shll
out
subb
ljmp
add
mov
jmp
les
push
aaa
sbb
xchg
popa
mov
fimuls
cmp
aaa
sbb
ja
gs
mov
iret
divl
loop
mov
cmp
pop
lret
loopne
mov
dec
mull
fnstsw
repz
and
and
add
sbb
pop
xchg
lret
dec
es
enter
pop
inc
fmuls
mov
mov
push
add
dec
inc
mov
ljmp
xor
xor
add
push
push
sahf
pop
push
outsl
pop
fistl
sub
adcb
sbb
call
bnd
fidivrs
jg
jge
test
lea
jle
aas
pop
aam
shlb
dec
push
sbb
xlat
push
sti
pop
xchg
shrl
push
push
movsl
jge
dec
jns
sbb
push
out
xchg
sarb
or
std
loopne
jmp
addr16
add
push
jmp
mov
and
fcoms
addr16
xor
sbb
push
jl
les
and
pop
cmp
nop
push
cld
and
cmp
mov
push
adc
xchg
ja
add
les
ljmp
cli
or
and
sbb
insl
adc
sbb
cmp
iret
inc
int
jl
cmp
in
push
xor
pop
mov
sbb
and
mov
jnp
inc
xorl
mov
pop
aam
into
out
or
lret
xor
adcl
shrl
xor
addr16
mov
shl
cmp
pusha
jp
xchg
es
fisttps
sub
and
xchg
in
mov
push
sahf
pop
int
adc
testb
xor
add
or
push
push
add
inc
cmp
int
mov
iret
mov
fnstenv
lea
cmp
mov
repz
in
adc
pusha
pop
shufps
mov
mov
call
cmp
jle
fs
mov
cs
cmpb
ret
inc
cli
fcompl
lret
ret
lods
test
in
shl
inc
negb
repz
mov
jle
push
aad
pop
scas
sbb
iret
daa
pop
push
fbld
test
mov
loopne
xchg
dec
test
mov
jae
nop
out
mov
stos
aas
sahf
and
enter
ficoml
movsb
adc
int3
inc
jmp
mov
aam
dec
push
push
ljmp
dec
mov
pushl
int
sub
cmp
sbbb
repz
pop
sub
ret
pop
out
cli
jg
stc
lcall
sub
dec
mov
inc
cmpb
sbb
fisubs
int
jg
sub
daa
mov
mov
cmp
mov
leave
insl
aam
sbb
inc
rcr
push
xchg
mov
push
pop
mov
sbb
cld
mov
ds
aad
inc
fistpl
lock
jne
xchg
mov
ja
or
js
add
push
adc
inc
cmpsl
jae
mov
lods
xchg
decb
or
pusha
xor
or
cmp
sti
inc
dec
push
dec
sbb
mov
sbb
loope
scas
cmp
int3
test
sub
xchg
pushf
and
push
test
and
jmp
xor
mov
int3
cmpsl
xor
test
pop
testl
jp
mov
mov
xor
sub
xor
stos
sbb
xchg
dec
jmp
push
cmp
outsl
mov
stos
stos
inc
pop
stc
fiadds
push
pushf
bound
inc
lret
push
lret
mov
sbb
mov
lahf
fadd
sti
xor
popf
dec
mul
mov
or
inc
adc
cmp
in
dec
pop
notb
sbb
lods
dec
bound
inc
jnp
in
add
xchg
sub
jae
push
inc
sbb
xchg
cld
cld
js
out
stos
pop
add
and
inc
inc
cltd
pop
ud1
cmp
mov
in
icebp
mov
roll
mov
mov
pop
outsb
and
xchg
insl
into
fcomps
mov
ljmp
faddl
xchg
adc
or
jo
jns
jp
fs
out
icebp
pop
push
or
adc
enter
aam
sbb
clc
and
fidivrl
cmp
arpl
std
inc
mov
cmp
jmp
fs
push
jmp
push
cmp
xor
cltd
jnp
rolb
push
xor
aaa
mov
in
mov
or
xchg
add
rolb
stos
sbb
push
daa
push
icebp
movl
in
add
rclb
subl
cmp
jecxz
mov
aaa
out
mov
mov
mov
pop
rcrb
mov
fdivl
popa
pop
fisubs
inc
mov
stc
test
add
or
push
xchg
jo
sub
mov
pop
mov
dec
mov
std
bound
cmp
and
roll
pop
sahf
sub
js
repnz
enter
pop
lds
arpl
sub
fwait
sbb
imul
mov
jg
into
adc
mov
pop
mov
pop
es
xor
sbb
or
dec
push
mov
mov
inc
fcompl
xchg
in
cmp
cs
ret
leave
in
xor
and
lahf
pop
or
ds
ja
mov
pop
push
subl
mov
fsubrl
cs
pop
std
nop
xchg
out
inc
and
sarl
enter
inc
mov
repnz
ljmp
loop
cmp
and
lret
sbb
lds
lea
or
pop
loop
xchg
sub
les
pop
into
rcrb
fldcw
out
sub
cltd
fnsave
mov
int
adc
pop
add
insb
mov
cmp
mov
mov
cmc
popa
push
mov
sbbb
add
scas
push
cmp
in
out
sub
push
sbb
shrl
pop
lahf
xor
imul
lods
sub
add
fisubrl
mov
adc
cmp
fsubrl
xor
out
jg
cmp
les
jae
cs
cmp
xor
lea
lock
js
or
jg
ds
or
aas
jge
push
clc
test
jne
push
and
into
imulb
mov
inc
ret
xor
mov
jecxz
sarl
jle
ret
jp
adc
cmp
std
jmp
xchg
out
and
dec
mov
call
jns
sbb
cmpsl
pop
fwait
push
je
cld
adc
push
insb
inc
inc
leave
jb
and
iret
subb
cli
pop
das
jnp
mov
push
or
ja
cld
shl
jb
mov
pop
test
inc
out
hlt
sbb
sbb
sarb
dec
xor
push
das
sbb
inc
stos
mov
adc
jns
fwait
mov
and
cmp
mov
sbb
test
movb
mov
pop
ljmp
pop
pushf
and
push
mov
in
fdivl
cmp
out
mov
sti
inc
loop
push
sub
xor
cmp
sbb
je
aaa
in
adc
jno
xor
mov
cmpsl
inc
mov
xor
fidivl
outsb
dec
minps
jecxz
mov
push
les
insb
adc
jmp
lds
jge
inc
adc
inc
mov
scas
js
mov
dec
sbb
and
std
ss
adc
loop
pop
and
loope
mov
dec
push
jle
xchg
sbb
push
lods
dec
mov
xchg
xchg
daa
push
inc
dec
push
sbb
or
add
jo
add
lret
sub
loop
mov
adc
lahf
inc
nop
pop
inc
daa
adc
aas
jmp
mov
dec
push
sub
push
testl
adc
inc
mov
xor
rolb
jmp
stos
scas
les
hlt
nop
push
inc
popa
je
in
push
cwtl
dec
add
movsl
and
call
fstl
in
sbb
jecxz
or
inc
adc
add
aas
loop
xor
mov
dec
insl
inc
inc
mov
jge
icebp
mov
test
mov
push
pusha
sbb
jge
je
in
neg
pop
jne
je
sbb
repz
sub
fdivrs
pushf
pop
mov
pop
xor
dec
movsb
mov
adc
and
mov
js
in
int3
xor
pop
mov
mov
mov
mov
jge
pop
xor
in
cltd
addr16
mov
or
bound
loopne
inc
mov
add
mov
lcall
adc
decl
pop
and
insl
mov
add
mov
sbb
mov
sti
sbb
fcmovnb
icebp
mov
xchg
mov
ljmp
sub
js
or
sub
sbb
out
cmp
dec
aas
or
add
jo
insb
hlt
pop
pop
mov
mov
cmp
lcall
and
jmp
stos
je
ds
cs
add
inc
adc
lds
xor
xchg
mov
hlt
add
sbb
int
aas
mov
test
mov
jno
push
sarl
cmp
insl
mov
and
fwait
xchg
jae
js
pushf
or
sbb
mov
inc
xor
mov
out
ficompl
test
mov
jne
ljmp
xchg
cltd
or
mov
mov
jne
sbb
xchg
and
jge
subb
pushw
xchg
adc
add
insl
aad
addr16
adc
nop
sub
bound
les
repnz
mov
mov
pcmpeqd
mov
lret
in
cmp
pop
sub
sub
cmovnp
add
fdivrl
aas
pusha
leave
mull
lret
repnz
cmc
xor
test
movsb
mov
jae
nop
dec
pushf
ja
push
sub
aad
sub
clc
xor
into
andb
jmp
adc
cld
imul
stos
sahf
cltd
inc
mov
pop
adc
sbb
lds
add
xchg
sub
lea
sub
ss
out
les
cmp
aad
ljmp
arpl
mov
int
lds
sbb
arpl
mov
sbb
rolb
xchg
xchg
xchg
xchg
out
lods
mov
rcrl
jae
les
cmpsl
lock
sub
movsb
fmul
dec
addr16
shll
sub
sbb
or
out
push
scas
outsb
cmc
jnp
pushf
inc
sbb
mov
orb
pop
dec
adc
imul
enter
dec
cli
xor
inc
mull
enter
cmp
cmp
sub
jg
push
mov
and
lds
iret
repz
cmpl
ficoml
imul
sbb
outsb
mov
jge
xchg
push
sub
jp
out
ret
das
lret
or
cli
push
cltd
sbb
adc
jno
and
out
mov
addb
add
mov
xchg
jno
inc
ret
jo
jne
sahf
push
lods
insb
test
shlb
mov
cmp
jmp
mov
outsl
mov
add
aas
push
mov
and
xlat
popf
data16
popf
mov
test
sbb
push
push
cmp
and
dec
or
test
dec
pop
mov
add
cmp
xor
sbb
fstps
add
icebp
jne
or
icebp
filds
jge
rcrb
xchg
lods
xchg
xchg
jecxz
push
sarb
stos
adc
fmul
xchg
pop
adc
push
jge
fdivrs
push
pusha
arpl
jno
lahf
sti
cwtl
out
insb
pop
nop
inc
sbbb
fnclex
sahf
out
fs
icebp
mov
lcall
dec
into
sbb
cmpl
pop
mov
aas
clc
je
push
loopne
cmp
fldenv
in
pop
movsl
fwait
pop
repnz
mov
mov
scas
push
ss
gs
jl
popa
or
mov
jge
xchg
scas
in
mov
mov
mov
aaa
dec
mov
int3
lods
push
or
test
stos
mov
jo
cmp
xorl
jo
fistpll
lahf
inc
mov
push
daa
mov
inc
or
ficompl
mov
out
in
leave
stc
pop
pop
lods
add
mov
stc
mov
call
shl
push
mov
pop
flds
aam
dec
mov
cmc
jecxz
adc
fcmovnu
dec
xor
stos
shlb
inc
sub
hlt
inc
test
adc
dec
test
test
pop
mov
cmp
ss
test
rorb
mov
mov
data16
pop
mov
add
mov
push
xchg
std
sub
lods
sbb
sub
fildl
and
mov
arpl
push
inc
mov
out
xor
repnz
mov
test
jle
push
add
add
leave
cmp
pushf
shl
fnstenv
repnz
lds
push
xor
cli
dec
iret
or
mov
jg
inc
pop
imul
inc
add
mov
mov
mov
xlat
inc
shr
cmp
push
push
rcll
mov
push
les
cli
adc
jae
pop
pop
or
sub
sti
sub
sbb
pop
sbb
cmc
sti
jp
inc
add
mov
or
fbld
jns
dec
jne
insb
ss
in
inc
jmp
xor
and
loope
imul
mov
xor
out
xchg
arpl
insl
push
test
sbb
ficompl
movsl
pop
testb
or
mov
sub
fisttpl
mov
mov
repnz
in
mov
xlat
andb
lea
insl
repz
mov
call
adc
jmp
test
adc
cmp
push
push
mov
push
jb
mov
ja
pop
inc
mov
loop
push
inc
mov
or
fldt
cmp
push
sbb
daa
jb
jecxz
popl
add
sbb
stos
les
sub
dec
mov
adc
xchg
cmp
cmp
movsl
clc
sbb
jo
adc
fs
add
jmp
lea
jecxz
or
cmp
or
sbb
popa
lret
cld
js
dec
or
push
dec
adc
popf
mov
aaa
sbb
dec
cmpb
mov
jecxz
inc
and
into
in
aas
sub
int3
outsl
enter
pusha
roll
mov
pop
xchg
out
ss
ljmp
inc
test
and
popf
mov
xchg
mov
mov
lods
js
sbb
cmp
jecxz
push
xchg
cmp
mov
fnstenv
jp
outsl
pop
neg
cmp
cs
or
aam
inc
and
lret
out
rorb
popa
pop
rorb
arpl
sarl
int
iret
out
cld
add
mov
or
mov
adc
pusha
aam
dec
add
lret
insb
cmpl
leave
loope
movsb
or
adc
je
subl
mov
scas
nop
clc
push
cwtl
adc
add
mov
or
dec
testb
out
ret
fistps
cltd
adc
std
xor
cmp
mov
cmp
cmpsl
sub
mov
jae
imul
movsb
sub
repz
sub
movsb
ret
sub
jge
adc
fidivs
add
fstpt
lret
xorl
sahf
mov
aas
out
add
lahf
sub
mov
fcomps
jmp
gs
lret
repz
aam
aam
xchg
jl
lret
jl
mov
xor
xchg
in
das
sbb
cmp
xor
ret
stos
shlb
gs
push
dec
mov
add
jae
int
fwait
sbb
adc
popf
repz
iret
push
cmp
scas
mov
fmuls
xchg
cs
mov
add
sarb
and
imul
mov
fdivs
cwtl
outsl
cmp
sbb
pop
lock
pop
es
test
and
mov
int3
fstpl
push
in
into
pop
in
sbb
aaa
arpl
stc
stc
stc
xchg
push
mov
es
aad
into
aaa
cwtl
xchg
jl
mov
rclb
loope
fdivl
push
push
and
mov
jne
fstps
cmp
rcr
sti
sbb
scas
sub
outsb
lret
pop
insl
out
adc
xchg
push
loope
cmpsb
movsb
pop
jp
cmp
hlt
dec
rolb
mov
mov
and
int
pop
int
mov
das
inc
nop
sbb
nop
mov
push
cmp
xchg
sub
aad
xchg
sbb
or
add
push
aad
add
jo
hlt
outsl
sub
int3
mov
and
mov
popa
xchg
cmp
das
jbe
in
and
inc
daa
stc
clc
aas
xor
js
inc
ss
sbb
mov
or
inc
mov
scas
in
pushf
dec
cmp
sbb
push
fsubs
fcoms
test
daa
lods
mov
push
inc
sub
daa
dec
jmp
aam
ficomps
and
cmp
sbb
cmp
dec
xchg
outsb
inc
test
push
add
ljmp
lods
push
push
mov
cwtl
fimuls
push
aam
repz
or
das
in
imul
inc
out
add
sub
sub
iret
mov
cmp
repnz
add
add
xchg
xchg
pop
mov
dec
lahf
in
je
mov
negl
aad
cmc
shll
dec
out
aaa
ja
push
into
add
xor
mov
popl
and
jge
out
xor
test
jbe
mov
pop
fwait
dec
jmp
jmp
daa
fsubp
xchg
or
jg
pop
add
faddl
and
ret
push
inc
ss
mov
pop
adc
jnp
fistps
pop
stc
or
push
mov
mov
xor
mov
mov
mov
mov
dec
stc
fs
pop
loop
push
je
inc
jle
in
pop
xchg
pop
adc
decl
and
dec
sahf
fwait
xchg
std
add
xchg
andl
loope
sbb
dec
mov
loopne
jo
xor
pop
fsubrs
lcall
pop
add
ss
jmp
aas
cmpsb
mov
or
pop
arpl
fstps
xor
mull
xor
fcmovnb
lods
pop
mov
shll
xor
dec
push
std
inc
shl
fcoml
cmp
and
cmp
call
iret
arpl
fcmovbe
and
mov
scas
leave
movsl
inc
mov
push
push
insl
inc
sbb
fldt
ficompl
sbbb
fisubrs
bound
repnz
push
push
and
sbb
inc
fs
leave
add
cld
test
lods
cmp
adc
fisubrs
loop
adc
or
leave
or
daa
inc
ret
cmpsb
cmp
rcrb
stc
sahf
inc
cmp
mov
test
xlat
aas
shll
mov
insb
ljmp
fs
ds
fsts
mov
mov
out
and
das
mov
jae
out
jns
mov
out
and
push
push
jns
cmc
sarb
xor
mov
jae
lret
sahf
daa
xchg
and
push
push
es
incb
negl
inc
cwtl
xchg
je
mov
in
mov
les
pop
sbbl
adc
in
xor
popa
jo
add
mov
lret
pop
mov
bound
mov
cmc
pop
mov
rorb
push
inc
jmp
sub
fs
cmp
dec
mov
out
dec
stos
and
enter
push
bound
pop
clc
cmpsb
push
lea
mov
sbb
lea
pushf
adc
push
cmp
sti
jnp
js
ja
shr
and
mov
sbb
mov
call
dec
loop
ds
jge
or
pop
jl
push
lret
jns
mov
inc
push
mov
lods
and
test
cmp
rorb
mov
jae
cmp
mov
sbb
imul
adc
cmp
les
mov
clc
mov
loop
ss
sahf
dec
mov
cli
add
push
xchg
jmp
mov
adc
jno
cmp
lods
xchg
arpl
jl
int3
addr16
sub
jnp,pt
mulb
out
xchg
push
push
aam
jecxz
sbb
ja
or
scas
or
imul
inc
int3
fs
popf
shrb
or
jge
mul
mov
imul
out
js
and
jne
fsubl
sub
dec
xor
jo
add
out
push
ljmp
sbb
lcall
movsb
sub
sub
jnp
in
test
dec
push
mov
mov
lret
popf
jns
sbb
add
call
mov
cmp
push
sahf
sbb
push
jp
sbb
sbb
xor
add
mov
hlt
xor
imul
mov
pcmpeqb
and
xchg
cs
in
je
scas
sti
or
in
xchg
adc
push
add
cld
js
lret
inc
dec
mov
shr
inc
in
lahf
cmp
push
or
mov
xlat
in
push
popa
rcrb
adc
cmc
test
shll
ret
popf
add
outsb
testb
enter
push
insb
aam
xchg
push
adc
push
xchg
and
int
inc
into
inc
or
enter
add
and
inc
jae
xor
mov
bound
add
adc
sbb
dec
jns
shll
popa
add
sbbl
int
dec
xchg
aad
lods
sub
mov
cmp
xor
pop
scas
mov
and
rorl
fstp
inc
int
mov
in
fdivrs
in
test
xchg
pop
sbb
popl
int3
mov
ljmp
leave
sub
jecxz
ljmp
int3
pop
mov
dec
push
clc
xor
movsb
test
dec
lods
pop
aam
movsl
aam
jl
cmp
inc
add
cmp
dec
jno
fbld
movsb
andb
cmp
dec
mov
movsl
pop
push
push
push
xchg
mov
sbb
xchg
sbb
xchg
bound
pop
vcvttsd2si
inc
hlt
inc
pop
fs
fs
mov
add
movsb
outsb
rorb
pop
and
and
mov
out
jg
je
xor
sarb
shlb
lea
ss
repnz
mov
sbb
add
jecxz
xor
es
push
mov
cltd
popl
inc
xchg
lock
xchg
lods
repnz
rcl
cwtl
xchg
movswl
sub
add
rolb
int3
outsl
arpl
andb
jns
mov
in
mov
and
sbb
lods
dec
or
jg
adc
sbb
out
mov
incl
add
inc
mov
adc
shl
mov
pop
sbb
and
dec
mov
push
sub
mov
pop
xor
nop
add
lods
pusha
lock
out
movl
pop
xor
fs
loopne
jle
add
xchg
xor
arpl
fisubrl
inc
push
fdiv
mov
repz
or
pop
sub
or
xor
xchg
pop
movsb
mov
dec
push
xchg
das
aaa
cmpsl
lods
xor
pushf
popf
mov
jns
push
loope
inc
mov
vpsubq
std
mov
and
mov
mov
shll
jno
sar
lahf
cwtl
jb
sub
mov
cld
fnstcw
sub
inc
add
mov
outsl
add
push
rorb
cltd
aaa
mov
add
cmp
mov
push
es
jge
aam
daa
adc
loopne
filds
fiadds
or
je
and
aas
jne
cmc
sub
adc
into
pusha
jmp
xor
jmp
outsl
cwtl
lea
test
jo
push
loop
dec
mov
pop
outsb
repz
or
pusha
sbb
lods
push
loopne
lock
cmp
into
jmp
loope
mov
lret
or
bound
cs
sbb
adc
js
mov
mov
and
xor
loop
dec
inc
negb
pop
pop
push
lahf
stos
jl
xchg
sub
imul
mov
push
mov
sub
ret
cwtl
or
ss
jns
rcrb
or
add
mov
jo
ljmp
es
into
jmp
notb
xor
jp
mov
lds
imulb
push
mov
outsl
pop
out
push
dec
sub
inc
sbb
repnz
in
sub
mov
out
add
jb
iret
adc
dec
inc
lcall
push
pop
std
sbb
lret
addr16
push
sub
aaa
pop
xor
addr16
shrl
popw
pop
cli
dec
enter
std
std
cmp
fsubl
adc
out
cmc
mov
lea
jb
popa
insl
or
cwtl
mov
jns
and
cmpsb
dec
dec
aam
mov
inc
stos
lods
mov
shrb
sbb
mov
movsl
iret
daa
mov
movsl
mov
pop
js
dec
or
dec
lods
iret
nop
in
pushf
jno
push
adc
inc
lret
pop
ret
lcall
rcr
xchg
int
jno
shlb
jmp
or
inc
fdivrs
ss
jnp
leave
mov
dec
add
jb
jg
fs
jl
cmc
dec
rcrb
lret
jnp
cli
pop
xor
mov
cwtl
push
dec
stc
and
fldl
lahf
rcll
aam
pushf
add
jp
pop
je
jb
dec
sbb
dec
js
pop
popa
jae
jecxz
icebp
mov
fdiv
stc
les
add
fwait
lea
popl
cld
outsb
mov
mov
xchg
mov
cli
jmp
mov
xchg
int3
jg
lcall
xchg
sub
mov
xchg
push
es
pop
enter
inc
push
les
push
and
cmp
movsb
fwait
je
std
lods
xchg
out
cmp
pop
mov
outsb
sub
cltd
mov
mov
test
sbb
push
jnp
mov
mov
xor
xor
xor
sub
gs
lahf
xchg
xchg
inc
adc
xchg
and
loop
jge
pop
pop
cmp
mov
in
scas
jge
lea
and
fildll
cs
lcall
mov
hlt
or
cltd
repz
dec
std
sti
dec
repz
fists
ret
pop
sbb
inc
aad
pop
repz
add
and
and
lea
inc
sub
int3
push
cltd
jge
ficomps
les
rcll
repz
add
fisubrs
xchg
in
adc
loope
sahf
sbb
pop
dec
repnz
add
pop
lods
mov
inc
add
popf
push
popf
fs
or
imul
cmp
je
and
imulb
sbb
movsb
rol
sub
rorb
push
add
test
inc
pop
sub
test
fnstsw
xor
and
sti
push
pusha
repnz
stos
pop
xor
fdivrl
icebp
inc
pop
mov
int3
iret
xor
notb
repnz
aaa
or
out
sub
jo
mov
adcb
or
pusha
pop
sub
jmp
cmpsl
pop
frstor
out
jge
lods
stos
es
ficomps
addr16
test
int
lock
jb
sbb
out
pop
test
mov
push
sub
leave
sbb
idivb
arpl
std
dec
pop
jge
push
pop
mov
mov
rolb
push
dec
addl
ret
divb
sbb
sub
xchg
or
and
jno
je
ret
pop
ret
add
pop
es
push
sbbl
dec
cmp
push
add
pop
inc
lahf
sub
out
daa
lret
dec
mov
cs
sub
sbb
popf
and
mov
push
mov
outsl
dec
dec
test
arpl
or
fwait
mov
and
cmp
lea
xchg
add
jecxz
and
daa
cwtl
loop
sbb
or
jo
in
les
test
sub
in
and
bound
sub
push
idivl
xchg
shl
std
jmp
je
in
xor
dec
js
outsl
sbb
stos
inc
adcl
cmpsl
adc
mov
or
lods
pushw
sub
or
scas
dec
into
inc
mov
ljmp
add
test
jo
scas
push
jns
mov
pop
out
dec
and
inc
adc
into
cmpsb
add
std
mov
popf
sub
jb
int
stc
push
lock
mov
xchg
sysenter
cmp
cmp
je
outsb
test
add
or
loope
dec
insl
bound
lahf
jb
int3
in
mov
mov
mov
cmp
mov
loope
iret
movsl
dec
mov
int3
mov
into
mov
in
mov
or
decl
inc
cmp
mov
ds
jb
sti
sub
and
sahf
or
repnz
das
movsb
sbb
jno
mov
sub
mov
jl
dec
in
sbb
push
and
imul
ret
fwait
loope
sbb
mov
or
into
cs
xor
movsb
les
and
mov
add
jbe
cmp
enter
in
enter
dec
daa
xchg
jg
ljmp
ja
cli
mov
push
jb
mov
push
addr16
jg
repz
fsubs
out
jno
test
sbb
mov
je
adc
mov
xor
xchg
mov
shrb
dec
dec
repnz
or
fnstenv
adc
add
or
pop
sub
sbb
adc
iret
fimull
inc
fwait
push
mov
jmp
lahf
loope
inc
movsl
sub
and
mov
mov
fdivrs
xchg
movb
pop
jno
sub
or
xor
aam
dec
or
ss
pop
jmp
push
scas
sahf
add
push
rolb
ja
adc
test
ljmp
pop
mov
cmpsb
gs
mov
icebp
fs
mov
jne
inc
dec
sbb
pop
jp
adc
fisubrl
jo
push
jo
xor
jnp
or
addr16
jb
rolb
jmp
pop
addr16
fiaddl
pop
lea
adc
pop
imul
jae
jg
mov
test
sbb
jg
mov
mov
pop
fiadds
xchg
fsubl
outsb
cmp
xor
out
fsubl
icebp
pop
clc
mov
lret
lret
nop
cmp
mov
mov
sbb
pop
loop
mov
jo
adc
cltd
push
and
cmc
in
int3
xor
xor
or
in
cmp
pop
inc
dec
xchg
pop
sbb
aaa
dec
inc
xchg
jp
xor
add
jp
lods
lods
jle
sub
das
shr
cmp
push
xor
test
sub
fwait
hlt
mov
cmp
and
push
shrl
mov
add
subl
lds
xchg
add
iret
jno
das
dec
in
push
xchg
addr16
cwtl
das
lret
sub
jo
movsl
aas
in
loope
or
or
push
sub
aad
ljmp
or
cld
add
insl
fldcw
mov
ja
js
inc
dec
xor
mov
inc
cmpsl
inc
outsl
add
pushf
cs
jbe
jg
jecxz
xor
scas
sub
ljmp
mov
add
dec
fisubl
or
fdivrs
jp
jecxz
pushf
mov
adc
jo
or
psubw
jns
repz
inc
pop
cmp
cmovb
negb
aas
cmc
in
loope
imul
fisttpll
mov
inc
pop
xor
movsl
or
lcall
jecxz
mov
addr16
sub
test
stos
inc
bound
rcl
out
add
popa
imul
in
outsl
and
lea
mov
inc
xchg
cmp
sbbl
add
inc
aam
sbb
aas
loope
fimuls
xchg
or
movsl
mov
adc
fdivrs
addr16
jne
aad
sti
pusha
repz
adc
in
push
push
sahf
mov
add
pop
inc
mov
int3
mov
nop
pop
xchg
jno
push
stos
shrl
and
movsl
mov
cli
push
sbb
push
push
add
mov
jl
cld
sbbb
mov
jmp
in
pop
push
int
push
pop
setb
enter
pop
cld
mov
xor
jp
fwait
push
mov
rolb
lods
das
push
ror
push
fwait
ret
cmpb
xchg
cltd
pop
adcl
sbbl
add
lahf
pop
into
notl
mov
jbe
cli
rcrl
insb
lods
mov
jo
test
stos
push
pop
cmp
mov
stc
into
jge
out
mov
jno
pop
pop
jg
fs
adc
mov
repnz
add
mov
scas
lcall
fildll
mov
xor
xchg
cmpsb
into
mov
test
sub
inc
decb
push
aas
push
int3
test
dec
fcoms
push
rorl
les
mov
fwait
or
adcb
mov
sub
adc
xchg
out
adc
xor
cmpsb
cmpb
arpl
call
add
pushf
jp
cmpb
repnz
not
dec
jecxz
mov
cmp
inc
inc
mov
pop
or
fisubl
sbb
dec
mov
pop
orb
bound
enter
push
xchg
imul
xchg
insl
or
int
sub
les
push
jne
arpl
dec
nop
mov
or
or
stc
mov
bound
adc
cld
fnstcw
enter
lods
andb
dec
inc
daa
lods
fcompl
mov
mov
mov
adc
movsl
push
into
test
and
cmpsl
insl
fistpl
sti
ja
lods
call
push
push
decb
mov
add
fwait
test
fsub
adc
aas
jns
pushf
xchg
shll
xor
mov
test
ret
rcr
adc
in
lods
int3
sub
test
orb
dec
xor
or
js
popa
cli
dec
xor
jg
popf
push
cwtl
clc
mulb
icebp
movsl
and
xchg
sbb
mov
push
imull
notl
popf
sub
sub
addr16
mov
dec
pop
xchg
add
mov
ja
cmp
pop
sbb
add
movsb
in
btr
in
out
xchg
shlb
and
add
adc
or
push
mov
or
and
nop
mov
xor
dec
cmp
sbb
inc
out
out
pushf
inc
popf
xor
ss
cmp
inc
imul
fisttps
xchg
loopne
sahf
pop
icebp
jae
lahf
push
xchg
andl
lret
pushf
and
sbb
bound
arpl
xchg
jae
repnz
arpl
rorl
and
lret
dec
or
dec
repnz
data16
lods
mov
push
loopne
cmp
cmc
push
enter
cli
test
fcoml
push
andb
sub
push
test
cwtl
mov
hlt
fmulp
enter
hlt
gs
xchg
cmc
inc
fstps
scas
es
xchg
sbb
das
xchg
scas
mov
out
push
or
gs
ret
xchg
sar
sub
sarb
fnstsw
cltd
mov
sbb
adc
pusha
pop
pop
add
stos
idivb
cmpsl
lods
addr16
adcb
sub
add
mov
je
mov
inc
cmp
mov
jle
xchg
jnp
push
in
xchg
fwait
clc
cmpsl
pop
jp
nop
cwtl
push
clc
lods
out
or
xor
inc
in
cld
mov
lcall
sub
in
rcrl
adc
xchg
outsb
mov
aaa
sbb
lcall
mov
mov
push
lret
cmp
decb
sar
mov
xor
aaa
pop
mov
push
mov
aam
fsts
and
mov
sub
rcl
mov
insl
sub
sub
jno
mov
into
sbb
push
jns
popa
add
les
mov
mov
rcll
cmp
fistl
in
jno
pop
sub
mov
or
cmp
adc
pop
adc
daa
cmpsb
jl
adc
jbe
mov
setnp
sub
push
or
push
xcrypt-ecb
cmpsl
dec
sahf
add
add
nop
in
lods
xor
xor
dec
xchg
int
xor
ja
inc
mov
mov
xchg
jne
jl
jge
popf
xor
xor
cmp
aaa
shll
shlb
mov
cli
shlb
rcl
push
mov
sbb
xchg
popf
mov
sbb
scas
pop
das
dec
mov
lcall
cmc
cmp
xchg
or
sahf
add
push
rclb
mov
adc
pushf
or
int3
lret
filds
cmpsl
push
fcom
adc
pop
cmc
es
xor
or
jo
pop
or
stc
pushf
push
jge
lods
mov
pop
mov
mov
push
pop
xchg
xchg
xchg
aaa
xlat
mov
sbb
in
cmp
add
mov
int3
imul
ja
jb
movsl
popa
xor
push
fisubl
sub
xchg
jmp
push
cmc
push
repnz
sub
daa
imul
inc
pop
in
dec
stos
out
in
pop
or
and
adc
in
xchg
cmp
and
sub
mov
mov
push
dec
ficomps
in
fldenv
lahf
and
outsb
in
loopne
hlt
data16
imulb
mov
dec
fists
lock
out
ljmp
push
mov
cmp
mov
fbld
idiv
sbb
pop
aas
cltd
inc
sub
cmpsb
pop
lock
or
pop
push
inc
mov
mov
jb
andb
inc
cmp
xchg
sahf
roll
insb
dec
clc
dec
fldcw
sub
shl
add
add
idivb
test
inc
mov
xor
insl
cmp
pop
adc
mov
aas
subl
jg
frstor
jl
add
call
mov
into
mov
mov
xorl
in
out
icebp
cmp
pusha
jecxz
add
fimull
addr16
fmuls
mov
mov
jp
inc
add
cmp
std
inc
lds
pusha
iret
aaa
mov
sbb
clc
pop
jne
adc
dec
std
movsl
imulb
pushf
pop
insl
loop
ret
loope
pop
xchg
jnp
fs
add
push
hlt
aas
loopne
int3
mov
or
sub
fsts
cmp
jbe
rcrb
popa
and
push
test
mov
daa
aad
jae
adc
dec
clc
lret
fsubl
push
push
mov
inc
mov
cmp
xchg
movsb
daa
lods
shlb
cmp
loop
lret
push
jne
add
in
pop
pushf
or
test
pusha
nop
loopw
jb
popa
jle
mov
cmp
stc
int3
sbb
arpl
adc
movsl
mov
divb
and
pop
adc
cmp
pop
stos
xchg
enter
mov
ds
fs
pusha
push
out
mov
xor
inc
jecxz
add
shl
sti
mov
sub
enter
push
xor
bound
in
add
xchg
ret
ret
and
push
push
std
xchg
pop
jns
lret
loope
jno
mov
hlt
cwtl
es
jmp
sbb
or
dec
mov
cmp
loopne
clc
inc
mov
mov
rorl
scas
push
outsb
pop
sub
js
and
lea
adcl
dec
sbb
lea
cwtl
inc
dec
dec
lock
dec
jb
in
add
enter
testb
ljmp
sub
add
cmp
lods
xor
cmp
sbb
insb
lds
test
xchg
aad
addr16
fucomp
dec
jp
divb
push
pshufw
add
mov
std
pop
mov
loope
je
lods
in
lds
ds
add
adc
jbe
lret
in
test
sar
mov
push
fadds
lea
dec
ds
bound
jne
and
or
addr16
push
test
or
xor
stos
dec
mov
scas
cwtl
mov
fildll
dec
jge
lahf
mov
push
lods
es
mov
lcall
and
decl
mov
mov
ljmp
mov
cmp
inc
jnp
icebp
jge
ljmp
xlat
cmp
in
xor
pop
xchg
cmpsb
add
aaa
fwait
cs
mov
xor
cs
adc
jmp
hlt
mov
in
xor
mov
cmp
cmp
xor
mov
movsl
xchg
cs
pop
js
cmpsl
into
sbb
jle
ja
mov
inc
and
pop
mov
inc
jmp
push
jecxz
mov
ljmp
add
roll
gs
cmp
xchg
aam
adc
stos
std
jo
mov
cmc
push
mov
adcb
cmpsl
mov
dec
cli
add
jp
cmp
cld
push
dec
push
dec
cld
out
sbb
cmp
fcomps
cwtl
into
loope
movsb
adc
dec
mov
pop
rclb
cmc
fiaddl
adc
xor
add
sti
xchg
imul
push
pop
push
cmp
pop
cmpsb
nop
push
cmovae
jae
xchg
aam
and
lret
out
xchg
adc
insb
jbe
jne
ljmp
in
jo
add
cmp
testl
shrl
mov
dec
adc
add
divl
adc
mov
fucomp
mov
xor
stos
movsb
sbb
sbbb
mov
push
sub
cli
or
xor
ds
insl
paddsw
dec
sub
cli
push
movsl
movsl
imul
mov
jbe
mov
mov
cwtl
sbb
ret
add
fcoms
dec
add
sbb
call
add
pop
add
jne
and
jle
jne
in
pop
into
mov
mov
xor
fsub
mov
xchg
push
testb
add
cmp
or
jge
jmp
dec
xchg
jl
arpl
fs
mov
in
sti
xchg
xchg
gs
mov
inc
add
jecxz
int
in
popa
push
hlt
movsb
mov
mov
mov
jecxz
in
mov
add
dec
dec
popa
dec
xor
cmpsl
bound
mov
ljmp
cltd
rcrb
push
cmpb
cmp
mov
or
mov
mov
jnp
loopne
fwait
out
pop
mov
and
call
dec
xor
pusha
movsb
pop
sub
leave
and
inc
sub
jnp
dec
les
in
mov
imulb
fmuls
lret
push
pop
scas
shlb
inc
mov
popa
jo
outsl
lret
repz
popa
lods
push
aam
mov
rcr
or
in
cwtl
and
sbb
ret
aad
sub
fs
fs
pop
cmp
inc
mov
inc
cli
cmp
xor
mov
leave
adc
push
jecxz
pop
ret
fists
push
xor
rcrl
ljmp
adc
cmp
std
xor
or
or
sar
dec
sub
jecxz
mov
out
pop
int
sbb
adc
mov
test
sbb
jl
lret
out
fneni(8087
mov
sti
mov
or
repnz
fmuls
rorl
pusha
in
push
sbb
inc
pop
xor
das
pop
xchg
out
hlt
add
jnp
out
dec
jae,pt
or
xchg
xor
ret
popa
ret
nop
js
jae
lcall
xor
jl
adc
push
rorb
ljmp
ret
jbe
dec
pop
outsb
in
lahf
cs
push
in
ljmp
sbb
cmpsl
sub
pop
mov
in
push
push
adc
jns
popf
sbb
ds
mov
cltd
loopne
jmp
int
sbb
pop
iret
xchg
mov
xchg
leave
sub
adc
int
lcall
xor
xorl
outsb
inc
dec
fmulp
ret
push
jg
jp
adc
mov
repnz
fildl
movsl
mov
jmp
aam
mov
repnz
insl
jg
mov
push
cmp
sub
inc
popf
shlb
scas
ja
fsts
fucomip
mov
mov
add
out
fists
dec
in
push
mov
lods
out
cmp
mov
jmp
sub
jb
adc
pop
mov
sbb
pop
pop
xor
aas
shlb
adc
into
push
jnp
jl
imul
adc
inc
mov
pop
dec
lcall
pop
fs
inc
mov
jns
mov
repnz
pop
clc
sub
mov
repnz
inc
cmp
add
mov
push
arpl
out
mov
mov
pop
xchg
adc
je
pop
loopne
dec
jle
subb
mov
add
aad
or
push
push
clc
add
ss
sub
stos
xlat
inc
inc
adcl
inc
mov
inc
xorl
jae
mov
movsl
and
sahf
ja
popf
bound
mov
rcrb
or
pop
cmpsl
out
adc
cli
and
rolb
daa
std
mov
or
out
push
push
nop
jle
movsl
jle
call
and
dec
sub
or
inc
pop
mov
je
sbb
ret
lret
mov
mov
add
insb
sbb
pop
xchg
or
mov
lds
lock
fistpl
cmp
aad
ficoml
cwtl
dec
lcall
fucom
jge
pushf
sub
pushf
int3
call
or
mov
jne
insb
mov
int
pop
inc
add
rorl
or
out
fldl
add
mov
push
push
mov
lret
lds
xchg
push
nop
xor
mov
jle
div
push
sub
imul
enter
jp
sub
sarl
data16
fnsave
pop
lods
jge
shll
test
outsl
imul
push
je
pop
xchg
mov
pop
pop
dec
ds
pop
sahf
and
inc
lret
dec
xchg
xchg
pop
in
mov
push
mov
lcall
and
rep
add
movsl
loop
pop
sub
dec
ret
mov
push
shll
lret
xchg
das
jmp
xchg
push
mov
dec
mov
push
insl
fldl
jne
push
fnstenv
pop
push
aam
cs
loop
outsl
pop
sub
insl
adc
jb
dec
sub
adc
dec
lcall
jnp
test
push
mov
fwait
sbb
mov
xor
int
rolb
pop
inc
loope
rcl
bound
pop
push
cwtl
js
negb
ss
out
and
jge
inc
jo
scas
inc
and
mov
inc
xor
arpl
adc
and
push
iret
or
mov
cwtl
test
test
push
jg
adc
les
adc
int3
out
scas
stc
out
cmp
cmpsl
ljmp
jnp
in
gs
mov
cmpsb
pop
fdiv
loopne
imul
outsb
mov
xor
or
outsb
clc
mov
ffreep
insb
jge
lock
iret
repz
ljmp
leave
adc
in
push
pop
jnp
adc
pop
inc
frstpm(287
push
std
stos
movsb
pusha
or
aaa
xchg
mov
adc
push
int3
mov
icebp
push
sub
sub
sbb
push
push
mov
hlt
or
jmp
inc
pop
or
ds
mov
gs
xchg
nop
nop
dec
sub
idiv
test
lahf
fmulp
mov
or
jg
shll
inc
decl
mov
push
or
leave
ret
inc
stos
pop
mov
fcompl
call
sbb
cld
repnz
lcall
push
adc
pop
add
or
mov
and
xchg
dec
jecxz
push
xor
daa
sub
xor
inc
popa
adc
ja
loopne
fs
cs
lods
clc
lahf
xor
les
push
jge
mov
xchg
es
and
addl
lret
add
dec
pushf
cwtl
or
lret
and
add
xorl
mov
dec
xlat
sbb
aas
xor
sahf
movsb
push
cli
in
push
fsts
jnp
xor
je
enter
repnz
jo
mov
adc
jmp
mov
xchg
in
test
lds
lock
inc
rolb
mov
xchg
push
cwtl
in
jns
inc
xlat
pop
or
inc
popf
or
mov
mov
jns
in
mov
mov
push
or
push
push
mov
into
or
nop
push
stos
out
bound
setle
sbb
lcall
aad
or
push
sub
inc
mov
cltd
pusha
inc
out
mov
xchg
or
cltd
pop
fists
ficoml
std
mov
outsb
mov
in
ljmp
sahf
cltd
xlat
push
or
or
and
and
or
imull
out
shll
mov
xchg
inc
lock
mov
rcrb
pushf
inc
add
dec
lcall
add
add
fldcw
inc
pop
shr
sbb
adc
fnsave
sbb
enter
popa
lcall
clc
push
inc
sti
lret
sbb
inc
popa
nop
jecxz
dec
subl
mov
in
lock
mov
sub
jnp
jb
loopne
xchg
mov
lea
and
leave
scas
inc
mov
ja
mov
cmp
sbb
push
and
xchg
sbb
xchg
out
jo
pop
inc
sbb
sbb
mov
push
fucomi
out
daa
cwtl
es
loopne
cmc
mov
cmpb
mov
dec
jp
es
adc
fwait
and
add
lcall
insb
adc
sbb
mov
andb
das
pop
pusha
mov
pop
sub
or
movsb
dec
push
fists
xor
push
test
movsl
xchg
arpl
out
mov
iret
loop
pop
ss
cmp
dec
mov
mov
mov
aaa
push
inc
das
pop
js
add
daa
out
in
or
sbb
xor
push
push
clc
cmp
mov
xor
sbb
sbb
or
leave
jo
pop
push
xor
push
push
popa
fstp
sbb
outsl
repz
test
pop
mov
in
imul
int
or
cli
jns
into
pop
mov
lds
daa
int3
adc
mov
loopne
jnp
xor
addb
mov
mov
imul
xor
bound
and
mov
sub
and
adc
xor
outsb
lds
in
pop
sbb
fmul
cs
jg
sub
cld
and
in
fldt
and
sarl
fisubl
fstps
mov
test
xor
shll
hlt
imulb
roll
pop
loopne
xor
cmp
int
cld
mov
rclb
adc
push
xor
outsb
add
clc
pop
sti
enter
push
add
or
pop
inc
cmp
rcr
xchg
fs
cmp
xchg
inc
scas
push
inc
xor
or
js
mov
loopne
jns
stos
imul
mov
add
test
mov
aam
int3
jnp
ja
test
dec
jo
gs
stc
into
fs
outsl
pop
jp
data16
fistpll
jge
push
test
lcall
push
cmp
mov
push
or
popf
mov
sub
pop
sub
mov
aam
jb
fisubrl
add
jns
out
addr16
stos
xchg
or
insb
pusha
xchg
lcall
mov
movsb
call
and
aam
test
mov
mov
mov
or
repnz
arpl
loope
mov
xchg
mov
jp
or
ljmp
mov
lds
xchg
inc
cmc
outsb
dec
pop
jno
mov
and
fimuls
inc
push
mov
sub
lods
mov
or
inc
dec
arpl
sbb
cli
dec
or
inc
nop
pop
js
pop
push
iret
cmp
das
sti
or
cwtl
lcall
int3
stc
xor
mov
jno
test
push
lods
mov
and
incb
xchg
call
pop
std
mov
sub
stc
inc
lods
pop
sub
and
fdivrs
push
or
test
xchg
jnp
jmp
mov
out
dec
add
cmp
cmp
jp
lret
popa
mov
dec
push
jge
int
lcall
pop
outsb
js
sub
addr16
sbb
mov
pop
subb
shrl
jbe
inc
shlb
mov
push
scas
xchg
jl
jbe
repz
xor
cld
sarb
pop
jne
mov
insb
into
imull
cmpsb
cltd
sbb
or
out
cwtl
in
fisttpl
shl
pushf
sub
pushf
adc
out
scas
mov
mov
cmp
lds
lock
lret
mov
mov
or
call
in
and
sbb
push
sub
bound
imul
pop
adc
loop
add
push
jbe
insb
xchg
jge
test
scas
jbe
into
shrl
hlt
jbe
jp
out
inc
sbb
or
or
jle
push
insb
fdivrs
adc
ds
jge
out
movsb
adcb
iret
ret
lea
lcall
mov
ljmp
jmp
pop
inc
ss
push
and
jb
ror
stos
sbbb
sub
pushf
enter
mov
mov
sti
mov
das
cmp
inc
mov
jp
sar
push
push
push
repz
push
out
popf
sub
out
jmp
lods
xor
cmpb
dec
dec
out
pop
fcoml
fdivp
sahf
dec
xor
mov
sti
mov
push
push
xor
dec
xchg
mov
or
mov
push
or
push
add
dec
setl
gs
fistpll
sbb
cmp
loopne
xchg
adc
in
pop
adc
mov
insb
jge
or
mov
jns
mov
into
xchg
js
or
mov
insl
push
int
push
xor
mov
and
sub
mov
jno
jae
sbb
rorb
loope
mov
int3
ljmp
rcrb
stos
inc
les
ret
outsb
fstpt
add
ficoms
mov
push
add
jae
add
or
inc
pop
sbb
add
vpshaq
xor
pop
or
test
cmp
std
ror
loope
repnz
jmp
sub
sbb
or
cmp
data16
fwait
or
sub
mov
inc
mov
jae
mov
dec
pop
call
mov
mov
xor
inc
pop
or
ret
cs
dec
mov
push
bound
pop
les
fidivrl
jecxz
nop
js
lea
push
push
pop
mov
rcrl
or
push
ljmp
mov
mov
or
dec
fdivl
aad
push
ds
xor
jecxz
es
repz
dec
insb
pushf
in
inc
test
dec
in
push
rorb
inc
imul
lret
pop
adc
fcmovbe
adc
daa
xor
push
mov
sbb
cs
xor
jno,pt
push
lcall
cld
test
cmpsl
mov
push
cld
mov
int3
dec
dec
push
insl
out
fimull
repnz
cli
inc
sub
jecxz
scas
sbb
sub
movsb
xchg
inc
cli
popf
in
mov
nop
pusha
out
adc
mov
fwait
jl
inc
and
jns
add
popa
movl
mov
mov
xchg
sub
aad
mov
mov
arpl
or
cmp
jne
cmc
rcll
jmp
call
dec
push
fwait
fs
lods
pop
pushf
pusha
dec
sub
aad
lods
or
xor
leave
add
xchg
mov
jl
bound
int
mov
sub
es
pop
repnz
and
mov
pop
test
mov
jmp
clc
inc
rcll
aaa
push
stc
iret
clc
je
or
sbb
ret
jecxz
jge
setae
xor
stos
pop
jmp
push
insb
cmp
inc
fistpl
test
lahf
mov
pop
add
add
sub
aaa
inc
pop
cmp
in
push
pop
sub
or
fyl2xp1
jl
adc
pop
mov
mov
and
pop
push
dec
and
pop
in
mov
decb
leave
in
push
lds
pop
test
jmp
xor
cwtl
xchg
or
scas
loope
inc
cli
dec
add
inc
dec
jmp
jo
imul
jp
sbb
add
lock
push
mov
call
pushf
and
inc
jo
jae
out
xchg
cmpsl
dec
stos
mov
or
mov
jnp
call
orb
fcomps
jmp
mov
mov
xchg
adc
lret
nop
pop
pop
ror
jmp
pop
jo
xor
push
hlt
mov
lret
pop
fnop
mov
xchg
push
push
inc
sub
mov
int
sbb
aas
loop
add
cmpsb
outsb
shl
lds
mov
sbb
jno
mov
out
fldenv
jl
sub
dec
bound
in
mov
sbb
jle
inc
push
sti
cld
lock
sbb
add
pop
pop
jl
inc
icebp
js
push
leave
or
push
mov
or
add
inc
inc
and
adc
xor
mov
rorb
adc
movd
mov
pop
loope
addr16
cmp
jno
scas
jne
sub
jnp
mov
scas
mov
clc
dec
sub
repz
imul
adc
std
push
ljmp
push
ret
push
push
decl
cltd
and
adc
ljmp
jp
add
adc
lods
ret
imul
jae
jp
xlat
pop
jno
cmp
xchg
fprem1
mov
incl
stos
jp
push
test
fdivp
popf
or
xor
and
addl
cltd
mov
test
cmp
clc
nop
sbb
inc
ffree
add
in
xchg
icebp
lods
mov
xor
aas
divl
popf
lea
out
out
or
xor
daa
movsl
pop
cmp
mov
inc
std
pop
mov
inc
fisttpl
cmpsl
mov
adc
or
les
adc
sti
or
dec
push
mov
jge
imul
nop
sbb
mov
pop
int3
jmp
add
add
fsubrs
pop
nop
xchg
mov
dec
outsl
xchg
pushf
nop
test
add
xor
cwtl
xchg
in
sbb
in
jb
popa
add
or
movsb
or
mov
ds
lret
incl
sub
push
xchg
mov
ror
cli
sbb
shl
lcall
leave
add
dec
add
add
cmc
mov
bound
xlat
iret
mov
and
fsubrs
cmp
das
das
cmp
push
lds
xchg
dec
imul
xchg
sub
shrl
and
mov
cmp
adc
mov
inc
dec
mov
sbb
sub
test
xor
cwtl
xchg
cmc
mov
and
out
fidivrl
xlat
xchg
lods
add
mov
loopne
shl
in
and
mov
or
xchg
push
lcall
mov
lret
sbb
popa
arpl
mov
pop
jb
insb
shll
hlt
mov
push
lock
mov
push
xlat
add
cmp
int
iret
hlt
jmp
aad
aas
push
movsb
pusha
push
addr16
push
fmul
cli
mov
xor
test
or
lods
cli
dec
movsb
xchg
push
xchg
pushf
jo
add
pop
or
mov
inc
sub
xchg
xor
adc
int3
stos
cltd
cmp
stos
or
in
mov
popa
sub
js
mov
nop
ds
dec
jg
pushf
xlat
cltd
fisttpll
daa
and
lds
adc
stos
xchg
add
add
mov
cltd
and
jb
lods
shl
push
jge
es
imulb
pop
xchg
cmpsl
out
sbb
idiv
pop
int3
stos
lock
mov
xor
push
jecxz
inc
ja
setge
rcll
mov
push
sub
mov
aas
jmp
fs
fimull
pop
lock
xor
xchg
ret
mov
ficompl
xor
sub
jmp
xor
mov
movsb
fcomi
orb
fucomi
gs
mov
jmp
push
mov
cmp
das
or
leave
ljmp
xchg
jmp
shll
popa
jmp
or
jmp
adc
push
cs
lahf
inc
adc
xchg
mov
xor
out
ja
imul
sahf
dec
push
or
lds
call
sub
iret
or
push
or
into
fldlg2
shll
cld
cmp
cmp
sbb
hlt
push
jge
sbb
popf
out
shl
jnp
cmp
mov
mov
mov
mov
add
dec
insb
or
mov
cmpsb
pushl
pop
ds
out
test
dec
inc
jo
push
sub
and
out
xchg
call
add
sbb
ljmp
inc
mov
fadds
mov
xor
jmp
add
push
mov
or
push
das
in
mov
data16
popf
in
pop
inc
mov
xchg
sub
popf
lock
mov
mov
aad
xchg
cmpsl
push
jmp
ret
mov
in
jo
adc
inc
and
into
iret
push
inc
scas
js
adc
xor
cmp
push
and
jmp
push
or
jp
adc
mov
mov
nop
jnp
incb
out
xchg
sub
adc
mov
mov
push
arpl
mov
xchg
and
aam
push
loop
insb
inc
mov
and
jae
psrad
adc
dec
fs
jbe
mov
pop
aam
pop
gs
incl
clc
mov
cmp
sbb
mov
scas
hlt
fcmovne
jb
xchg
out
xlat
push
push
imul
add
bound
jg
incb
cmp
cwtl
insl
adc
push
xor
loop
fwait
push
in
sahf
lock
in
ds
mov
into
and
mov
ja
jns
test
lds
stc
lock
rcll
pop
sahf
lods
sbb
and
stos
dec
add
jbe
cmp
es
test
pusha
sahf
mov
nop
or
push
sti
adc
ds
pusha
adc
mov
add
popa
shll
scas
sub
dec
mov
mov
push
insb
scas
bound
lods
sub
shrb
mov
pop
hlt
sbb
rorb
adc
dec
sbb
sbb
lcall
cmc
xchg
jae
ds
leave
jp
nop
call
mov
test
push
cmp
fs
cmp
push
xor
or
xchg
add
ljmp
xor
daa
pop
aam
sbb
pop
into
dec
jge
pop
xchg
pop
pop
loop
es
arpl
pop
mov
jns
mov
jle
inc
push
mov
jb
pusha
mov
rcll
in
sub
xchg
mov
pop
out
mov
lcall
sbb
and
test
jecxz
adc
adc
or
mov
sub
adc
mov
jnp
std
push
test
dec
jno
dec
jecxz
outsl
xor
xor
dec
and
xchg
loope
or
mov
xchg
sbb
arpl
mov
adcl
adc
into
rorl
sub
lret
dec
icebp
sbb
dec
rolb
jmp
pop
sbb
inc
sbbb
in
sub
scas
ret
or
daa
xlat
sbb
cmpl
lods
pop
dec
or
stc
jecxz
movsb
jg
jge
mov
jle
ja
aad
add
jns
sub
xor
sarl
iret
outsb
andb
sbb
mov
and
std
mov
mov
call
mov
rorb
movsl
add
out
mov
in
pop
cmp
imul
dec
inc
cmp
popf
push
lcall
int
and
int
gs
xor
mov
popf
cmp
cld
hlt
fimuls
out
ds
je
inc
nop
jecxz
js
mov
cltd
shll
pop
add
or
mov
mov
pop
je
jnp
repnz
test
lods
and
fstpl
scas
and
bound
lods
dec
pop
or
push
ret
ja
sub
lods
mov
mov
lods
sub
cwtd
stc
in
lcall
adc
rcl
mov
fnsave
int
and
test
fidivrs
out
repz
add
lock
test
test
jmp
sbb
pop
out
and
sub
fdivrl
sbb
xchg
xchg
int3
sub
push
pop
xor
lret
push
fcoms
jbe,pt
push
xor
cmpb
stc
mov
insb
and
test
mov
lea
aam
jno
cs
cmp
mov
mov
push
xchg
shll
mov
and
inc
mov
movsb
pop
dec
mov
xchg
arpl
mov
pop
call
and
test
mov
inc
jns
adc
and
shll
sbb
aaa
add
cmp
sbb
push
mov
jo
cmp
cmp
and
add
arpl
sbb
push
popa
sbb
add
mov
pop
dec
mov
js
fcomip
xchg
into
adc
je
push
jns
clc
mov
push
pop
pop
add
lock
shlb
nop
and
popa
imul
leave
test
cmpsl
sub
and
lods
dec
mov
cmp
pop
jle
dec
mov
xlat
test
lret
mov
lahf
cmp
pusha
icebp
sahf
add
push
fistl
and
jo
adc
in
das
dec
jl
test
mov
xor
cmpb
add
loop
orl
jns
sub
mov
xchg
fbld
fwait
cmp
ret
add
inc
mov
push
orb
sahf
jp
and
fptan
jmp
and
hlt
fadds
rol
sub
xchg
ret
mov
nop
xchg
outsb
imul
sbb
jbe
fldenv
fstpl
lods
push
adc
sbb
ret
adcl
in
fnstenv
sbb
fs
scas
imul
cli
inc
xchg
push
in
jbe
add
cmpsl
repz
mov
call
mov
inc
mov
and
mov
iret
pop
pop
imul
push
test
cwtl
adc
pop
jecxz
mov
push
es
pop
pop
xor
cmp
push
das
push
jne
adc
jbe
les
ret
jmp
xor
xor
mov
clc
not
adc
loopne
idivl
shrl
insl
xchg
xor
adc
js
leave
inc
sub
xor
fwait
stc
pop
je
shl
mov
mov
dec
mov
pop
or
in
xlat
sbb
addr16
lcall
nop
xchg
outsb
cltd
cltd
repz
fdivrs
xor
js
aam
add
in
inc
aam
out
mov
pop
cmp
xchg
push
movl
or
jmp
inc
filds
mov
pop
push
in
mov
loopne
arpl
jns
sub
fnstsw
jg
aaa
mov
mov
aad
int
push
inc
cmp
lcall
inc
addb
adc
or
je
pushf
mov
int
xlat
and
cmp
pop
cmp
inc
ja
mov
hlt
push
jno
lds
jp
arpl
repz
xchg
jmp
ss
iret
xor
xor
aam
fsubr
popf
push
jmp
jbe
mov
fcmovbe
out
in
pop
test
mov
inc
out
imul
test
out
xor
lock
jns
sub
inc
xchg
int3
pop
arpl
xchg
dec
iret
cwtl
xchg
xchg
ficompl
popf
adc
xor
sbb
cmp
lret
lahf
stos
stc
adc
mov
aas
xchg
jle
bound
push
adc
adc
pop
cld
test
ret
jne
or
sbb
ds
sbb
mov
xchg
stos
outsb
mov
push
movb
jp
mov
dec
mov
bnd
cmp
xchg
or
inc
les
imul
mov
aaa
mov
and
roll
pushf
jne
cwtl
iret
and
mov
mov
xor
add
outsl
and
and
out
push
lret
lret
psraw
adc
mov
das
xor
and
sarb
jecxz
xchg
jmp
jl
xchg
mov
adc
int3
pop
fistl
xor
mov
movd
add
xor
hlt
jb
xchg
loopne
push
dec
cmp
cmp
xor
inc
lahf
jbe
jp
pop
ss
and
lcall
sbb
test
scas
lods
mov
mov
call
filds
les
popf
aad
out
and
mov
and
aam
js
push
sbb
aas
xor
inc
dec
cmp
push
or
or
popa
repz
out
popf
xchg
pop
jecxz
mov
inc
insb
pusha
adcb
pop
lods
adc
jae
cmpsl
scas
leave
stc
xor
jb
jp
faddl
add
cmp
sbb
lret
xchg
fwait
pop
sub
add
js
xchg
jae
pop
push
adc
fidivs
jle
mov
ret
jbe
jg
mov
xor
pop
sbb
jecxz
cwtl
mov
in
jge
stc
out
neg
inc
lods
push
pop
add
mov
cmpsl
scas
and
test
lcall
fcomps
fcompl
std
mov
and
xor
push
loopne
sbb
xor
inc
inc
pop
cli
test
stos
in
xorb
leave
stos
xchg
push
loopne
sbb
inc
jnp
jp
xchg
sbb
mov
lret
mov
ret
jb
push
mov
inc
scas
loop
jg
out
popa
test
mov
in
lea
ja
lahf
dec
or
sbb
push
inc
iret
cs
sub
sbb
aas
sub
lcall
mov
loopne
loope
stc
popl
jge
xchg
sahf
push
ss
inc
outsl
xchg
popaw
inc
dec
ljmp
mov
cmp
outsb
inc
into
scas
cld
sti
dec
push
pop
sbb
mov
push
adc
jns
into
push
pop
sbb
loopne
add
loop
dec
fisttpl
inc
mov
jbe
pop
test
addl
adc
push
loope
lods
into
rorb
lahf
inc
xor
pop
fwait
pop
pop
pop
cltd
inc
and
jp
mov
pop
push
cmp
add
movsb
push
cmp
gs
adc
xor
add
sub
mov
scas
adcb
nop
das
pushf
ja
cmpsl
bound
xchg
std
xchg
push
rolb
aas
mov
sbb
arpl
or
xchg
aaa
insl
jle
cmp
and
push
fnstsw
icebp
adc
xor
or
xlat
scas
jp
cmp
push
loop
push
pop
cld
idivb
dec
xor
mov
aaa
cmp
enter
and
mov
xor
mov
std
hlt
inc
adc
mov
mov
cmpsb
int
adc
stc
cmc
inc
outsb
outsl
shlb
sbb
pop
in
es
fcmovnb
pop
cmpsl
or
mov
pushl
jb
xchg
push
scas
jmp
xchg
and
mov
mov
cmp
pop
push
pop
jae
jbe
scas
insb
inc
pop
mov
mov
xor
fsubl
cmp
stos
aas
sar
push
filds
xchg
out
jmp
lahf
insl
cmp
cltd
fwait
shl
fwait
push
dec
imulb
mov
std
adc
dec
jb
push
mov
add
and
mov
cmpsb
sbb
sahf
fnstenv
jecxz
or
mov
fldt
lods
pushf
cltd
popf
add
icebp
ret
lret
and
pop
cmp
mov
fistpl
mov
jne
add
and
stos
enter
call
lcall
and
in
jb
in
popa
repnz
sub
xor
add
xchg
xchg
or
rorl
cmpsb
pop
int
loopne
popf
daa
int
sub
andl
mov
jmp
aas
movl
sti
cltd
lahf
pop
clc
std
out
lret
sarb
sub
ret
jo
mov
scas
and
push
push
or
jg
mov
xchg
sahf
rolb
fsubrs
push
nop
pop
pop
mov
push
sbb
jle
xchg
xor
or
stos
jb
xor
sbb
push
and
lret
sub
int
and
or
sbb
push
cmp
fwait
pushf
xor
andl
aam
xor
mov
add
sbb
loope
int3
nop
decl
orb
ret
int3
sub
inc
and
cmp
int
mov
pop
and
cltd
jne
mov
push
sbb
addr16
sbb
scas
cwtl
test
cwtl
imul
jo
inc
fimull
cmc
cmp
jmp
or
std
pop
test
shll
cmp
lods
daa
fildll
push
or
fnstenv
cmc
mov
jmp
push
inc
inc
pop
inc
mov
test
in
jg
or
mov
shlb
push
cmp
movsb
add
mov
mov
or
jns
cmp
push
mov
aaa
add
into
in
test
lods
enter
sub
loop
jns
or
xchg
stc
xchg
cmp
cmpsl
and
cld
jmp
fsubr
mov
fcomi
push
add
in
hlt
in
or
and
fdivrs
push
adc
jo
inc
xlat
sub
movshdup
lret
mov
mov
shrl
mov
cmp
andb
lock
jae
jno
dec
push
sub
test
xor
mov
inc
jns
cld
pop
mov
je
stos
int3
fdiv
or
xor
lret
out
push
rcrl
mov
pop
into
es
insb
pop
movsb
in
int
repnz
movlps
loopne
sahf
and
test
ret
jecxz
lods
arpl
loope
ret
ret
daa
insl
test
cmp
xchg
or
jecxz
dec
orb
testb
inc
push
sarl
lret
sub
sarb
sub
lret
int3
repz
roll
test
dec
push
dec
lods
push
push
fsubr
or
fwait
inc
cmp
stos
mov
mov
or
cmc
jmp
or
mov
faddl
jne
jns
or
movsl
es
sub
inc
add
fsts
xor
ljmp
pop
aaa
adc
imul
cmp
mov
mov
jle
in
sbb
jg
mov
pop
mov
lods
xchg
outsb
rcll
je
mov
xchg
shrb
jecxz
xchg
ljmp
movsb
adc
mov
pop
rcrb
fucomip
fmull
ds
push
mov
jns
adc
inc
cs
js
hlt
push
pop
mov
les
add
out
lret
mov
dec
gs
nop
pushf
push
addr16
stos
in
inc
mov
paddusb
xor
push
xchg
scas
test
adc
int
sbb
mov
jp
mov
out
clc
imul
inc
add
or
std
leave
out
ret
stos
xor
mov
jmp
xchg
popf
cmp
or
rorb
mov
in
pop
movsb
and
mov
mov
jnp
fiadds
dec
mov
pop
push
pop
mov
pop
sbb
adc
push
sahf
sti
loopne
fwait
imul
xor
adc
imul
in
inc
push
cs
xchg
adc
pushf
stc
dec
cmpsb
adc
add
ret
mov
mov
mov
add
iret
out
mov
rorb
frstor
lods
mov
out
mov
xchg
fs
push
in
mov
cmpsb
sti
jne
cmpsl
pop
mov
cmpsb
scas
mov
inc
dec
xchg
orl
out
and
fdivrl
stc
test
push
xor
inc
jg
loope
xor
jbe
or
cltd
or
loop
or
and
cmp
mov
sub
pushf
dec
pop
sub
stc
imul
hlt
push
nop
adc
add
lods
mov
insb
addl
jo
in
pop
cmpsb
hlt
pop
test
add
mov
popa
out
jecxz
popa
xor
mov
lret
mov
jmp
out
adc
mov
xchg
pop
test
cwtl
mov
mov
jl
and
stos
adc
cmp
add
jg
mov
js
and
add
or
dec
lock
stc
push
pushf
hlt
aad
lahf
add
push
pop
mov
adc
test
out
ljmp
jmp
sbb
negb
mov
jbe
rol
lcall
arpl
repz
and
xchg
push
sbb
xor
test
inc
dec
ljmp
aam
inc
sub
popl
push
and
mov
addr16
pop
mov
sub
add
movsb
leave
or
sahf
pop
out
je
loope
pop
push
fndisi(8087
inc
pop
push
jp
dec
leave
fmul
jmp
nop
ljmp
add
xor
inc
jmp
rorl
sbb
or
pop
mov
mov
inc
out
movsb
sub
pop
ljmp
inc
xor
sub
dec
pop
fildl
dec
out
outsb
inc
push
into
and
jne
std
into
movsb
daa
cmp
jnp
andb
sarl
test
jae
jo
adc
and
imul
scas
rcr
test
add
and
aam
push
out
adcl
lods
sub
mov
jo
je
fisttps
inc
repz
xor
or
lock
in
cmp
fidivrs
pop
mov
jb
cmp
adc
jle
push
in
jnp
mov
jp
mov
jns
push
adc
push
mov
sbb
adc
push
push
fisttps
jae
cltd
push
mov
data16
lods
adc
mov
dec
or
jnp
and
adcl
sub
mov
aam
les
shr
and
xor
in
xor
popa
push
push
aam
cmpb
repnz
sbb
pop
js
adc
daa
inc
sbb
jle
stos
js
sti
je
pop
std
cmp
gs
iret
jo
add
movsl
dec
xchg
mov
jno
shlb
add
mov
mov
lock
and
bts
data16
xor
iret
cmpsb
decb
lock
mov
test
sbb
add
loopne
insb
xor
inc
mov
xor
mov
pop
mov
fwait
push
jbe
cmp
insb
add
dec
mov
dec
xor
fisttpll
cmc
push
push
mov
push
sbb
arpl
aam
fisttpl
add
adc
add
mov
movsb
sub
test
and
or
mov
sbb
push
push
out
repnz
stos
jl
xchg
inc
ljmp
mulb
fdivr
popa
iret
call
fdivrs
and
pop
int
div
mull
jnp
push
cli
addl
inc
inc
stc
cmpsl
repz
mov
xlat
push
rol
xchg
mov
jb
int3
jg
pop
lret
adc
sub
dec
mov
dec
sbb
int3
gs
push
aaa
pusha
xor
stos
enter
adc
xchg
push
pop
mov
gs
stos
je
push
or
out
mov
jl
std
cli
push
aad
mov
repz
mov
jae
je
repnz
cmp
adc
pop
push
mov
sub
sbb
les
movl
js
fldcw
push
outsb
loopne
jecxz
clc
cmpsl
adc
fbstp
xchg
lahf
pop
push
xchg
std
sbb
popf
out
sbb
cmp
enter
add
pop
outsl
adcl
fiaddl
adc
test
dec
pop
jl
jmp
adc
and
sbb
push
stos
mov
push
hlt
inc
sbb
and
data16
imul
psrlq
movsl
sbb
imul
out
sti
insb
lods
xor
adc
inc
fcomps
push
pop
flds
and
imul
inc
adcl
fs
jns
fistpll
repz
sbb
push
cli
jnp
xor
stos
and
out
sbb
cmp
cld
add
pop
xor
cmp
or
test
rcl
xchg
or
aam
jb
push
mov
cmp
ret
jg
push
pop
push
rcr
paddb
and
divl
sbb
sahf
pminsw
stc
xor
push
mov
mov
mov
and
pop
ljmp
scas
inc
mov
dec
mov
push
aad
test
or
dec
cmpsb
jb
lods
add
jg
mov
into
xchg
mov
jne
dec
push
push
fsts
mov
push
arpl
xchg
sub
imul
lds
cmpsl
and
and
push
mov
fstps
leave
cmpsl
sbb
iret
sub
mov
fcoml
sub
cmp
inc
mov
xchg
lods
daa
in
imul
push
cltd
fsts
xchg
ds
scas
or
push
aaa
or
cmp
push
push
dec
adc
add
in
adc
push
adc
cltd
jle
imul
fbld
lods
icebp
rcrb
mov
lea
xchg
fists
dec
fs
push
fisttpll
mov
out
test
sti
out
push
pop
xchg
xchg
icebp
cmpsb
nop
pop
sbb
leave
pop
loop
clc
mov
sub
mov
jns
xchg
pushf
sbb
cli
pop
push
lret
ror
js
push
xchg
cs
bound
pusha
push
shrl
clc
ds
mov
push
push
lds
das
ljmp
xor
dec
jno
and
pop
and
mov
int
cld
icebp
mov
ss
enter
inc
push
lret
pop
pushf
jl
loopne
popf
std
sbb
loopne
jecxz
repz
or
jg
out
aaa
popa
je
mov
clc
adc
sti
add
movsb
dec
add
flds
hlt
dec
into
pusha
dec
enter
sub
xor
cmpsl
add
cmp
jae
jo
jecxz
cs
pusha
shlb
mov
scas
mov
insl
mov
lret
sbb
adc
sub
jo
mov
pop
repz
cmpsl
sti
movsb
push
sub
mov
pushl
rcl
gs
xor
lret
xor
lods
enter
lea
lods
popf
lods
dec
push
shrl
mov
scas
sub
sti
cli
pop
and
mov
xor
std
jbe
xchg
sbbl
into
movsb
jmp
pusha
cs
fidivrl
andb
outsb
mov
push
inc
cld
dec
sub
leave
js
aaa
js
loope
int
in
lahf
push
cmpsb
dec
lret
dec
pop
out
mov
frstor
jno
lds
in
pop
mov
jg
xchg
nop
push
and
out
adc
imul
insb
rcll
imul
aaa
push
jle
out
mov
jae,pt
sbb
mov
pop
adcb
push
pop
xorl
xchg
fwait
jae
push
insl
loope
add
loop
call
jge
sbb
cmpsl
cld
sbb
jb
jl
outsb
std
sahf
mov
cwtl
dec
negl
add
out
mov
dec
push
dec
and
pop
xchg
outsl
pop
std
mov
cmpsb
xchg
mov
aam
addr16
lods
daa
popa
gs
int
xchg
loopne
nop
imul
std
push
adc
mov
shl
aam
jmp
nop
sahf
or
jmp
and
pop
or
pop
pop
leave
in
adc
je
pop
call
add
pop
jmp
fbstp
stc
sarl
add
push
nop
jno
pop
test
push
fld
pop
shr
push
push
insb
lock
push
mov
or
es
mov
pop
dec
sti
fidivrs
fdivr
push
inc
fldenv
add
ljmp
nop
adc
fimull
aas
push
or
push
icebp
or
sti
mov
je
push
mov
cli
fnstsw
xor
xor
jns
insl
or
jb
aam
sbb
mov
ljmp
xchg
lods
cmp
mov
sub
enter
mov
xchg
bound
daa
addr16
or
pusha
cmp
adc
outsb
pop
dec
movsl
adc
fbstp
or
inc
ret
and
add
subb
out
push
ret
scas
push
insl
bound
adc
das
sub
movsb
out
jmp
xchg
lcall
mov
mov
cmp
out
adc
lret
pop
in
test
out
push
cmp
push
mov
ljmp
push
adc
popaw
dec
pop
sbb
push
mov
cltd
test
xchg
rorl
stos
mov
sbb
mov
add
cmpsl
dec
or
sti
jne,pn
jne
and
mov
push
std
pop
repnz
sahf
or
jmp
add
jl
mov
xorl
cli
inc
fcoml
mov
mov
mov
lcall
and
vprotq
popf
xchg
leave
jge
les
inc
lods
push
fxch
sub
inc
and
sub
cmp
mov
mov
stos
add
mov
addr16
inc
shll
and
or
repnz
fistpl
scas
or
add
inc
lret
cs
mov
dec
jg
je
dec
push
sti
movlps
cmc
sub
js
icebp
pop
in
push
mov
xchg
inc
jl
cs
and
mov
sbb
popf
mov
inc
dec
pop
je
arpl
add
mov
jmp
pop
shlb
leave
and
cmp
mov
mov
mov
jb
push
test
shl
sbbb
data16
fcmovbe
sub
sub
cmp
inc
in
jo
sqrtps
icebp
jmp
pushf
cmp
stos
aad
mov
movsl
mov
loop
or
pop
lods
mov
cld
xchg
testb
push
xchg
or
adc
sahf
negb
mov
jecxz
push
mov
loop
and
sub
fidivl
incl
int
add
lcall
or
mov
daa
shll
xor
jb
xor
rclb
xchg
inc
dec
das
xor
mov
dec
stos
stos
push
xor
shr
ret
out
iret
xor
xlat
into
sub
mov
cs
jne
sbb
and
jmp
fnstenv
mov
mov
rolb
sub
pushf
jae
pusha
inc
je
push
sub
push
xchg
aaa
adc
cld
andl
lods
addl
or
stos
stc
in
test
iret
or
sub
or
sub
das
pop
mov
stos
cltd
and
mov
mov
sti
lea
outsl
mov
pop
xor
je
stc
xchg
das
nop
pop
add
popa
insl
loop
mov
rol
cmp
push
sub
push
xor
repnz
cmp
push
or
adc
das
test
int
mov
push
push
test
dec
push
lds
test
or
js
sub
test
movsb
jmp
dec
pop
jecxz
mov
inc
cmpsb
pop
push
cmp
inc
xor
push
pushf
sbb
hlt
push
push
jne
clc
mov
xor
enter
jns
loop
xchg
jns
dec
je
out
pop
xor
add
mov
data16
jbe
or
nop
push
mov
test
add
add
jg
js,pt
fsubrs
enter
ror
imul
cmp
inc
ret
inc
and
ret
scas
shll
mov
dec
repz
mov
int
jmp
cmp
add
loope,pn
stc
pop
xchg
jnp
pop
aaa
dec
jecxz
cs
inc
mov
data16
fisubrs
jb
sub
jp
lods
push
cli
inc
lods
push
fisttps
add
xchg
mov
imul
pushf
jbe
aam
inc
scas
mov
in
mov
jp
lods
mov
imul
or
mov
test
dec
sarb
shrl
adc
jmp
xor
jbe
sahf
xchg
pushf
in
outsl
mov
xchg
jl
rolb
xor
aas
iret
push
popf
out
mov
push
popf
add
jb
mul
and
or
fadds
pop
jl
mov
mov
mov
jno
push
ljmp
cmc
fildl
insb
xor
loopne
jb
test
aas
sub
pop
mov
lcall
push
faddl
add
lahf
ret
xchg
subl
inc
lods
push
movsb
mov
mov
xor
add
repnz
jg
sub
daa
mov
ss
cwtl
mov
jmp
shl
stos
xor
movsl
ficoml
xor
outsl
dec
dec
insb
test
dec
mov
lret
out
jl
adc
xchg
mov
sti
jmp
mov
sub
dec
loopne
jbe
movups
sub
in
dec
insb
leave
scas
mov
in
int
outsl
insb
ret
sbbb
outsb
in
push
shrl
cmp
xor
popf
pushf
ret
jo
popf
pop
and
test
sub
test
scas
ljmp
or
mov
dec
pop
inc
stos
xor
les
ret
shl
or
xchg
arpl
jecxz
add
cltd
jbe
xchg
mov
jmp
adc
fnstsw
testb
jecxz
dec
js
xchg
ja
mov
pop
add
and
adc
mov
dec
insb
in
addb
movsb
movsl
add
jno
pop
cs
xor
sub
or
fwait
pop
imul
cld
mov
xor
xchg
add
stc
insl
sub
jbe
stc
pop
xchg
cmp
pop
adc
adc
adc
aaa
mov
jo
mov
xchg
ss
or
dec
aam
imul
test
call
ss
dec
pusha
sub
mov
imul
push
pop
pop
pop
mov
cmp
popa
bound
push
xchg
xor
std
xchg
pop
or
test
fistpll
push
sbb
mov
push
loopne
dec
imul
mov
mov
add
aam
daa
lds
pop
cmp
or
ss
enter
sbb
dec
mov
js
in
adc
std
daa
cmp
movsb
mov
mov
xchg
push
lret
aam
test
mov
pushf
inc
out
roll
fs
ret
xor
sarl
popl
sahf
nop
out
xlat
push
ficoml
sbb
int
push
or
lret
es
jmp
cmc
dec
aaa
in
or
pop
icebp
cmp
pop
inc
inc
dec
divl
sbb
aad
outsb
scas
frstor
jl
ret
mov
outsl
add
cltd
lods
adc
fxch
jecxz
inc
add
rorl
xor
jnp
push
xchg
jo
xor
or
adc
xor
xchg
mov
leave
push
xlat
les
jno
push
cmp
enter
sbb
std
dec
mov
mov
mov
mov
int
mov
scas
pop
lds
loope
rol
imul
dec
fstl
nop
jb
xchg
xor
xor
sbb
xchg
mov
mov
mov
xchg
lods
cmp
and
les
push
push
int3
pop
push
test
lea
push
ljmp
out
dec
mov
test
lock
push
add
outsb
xchg
push
fstpl
mov
rorl
ret
sti
xlat
lds
sub
push
pop
push
sbb
lock
pop
btsl
jo
das
mov
and
cwtl
mov
jge
inc
adc
xor
sahf
jg
lods
fisubl
push
aam
xchg
inc
int3
insb
imul
shl
sub
dec
and
sar
dec
das
push
das
mov
ljmp
call
jmp
mov
scas
sar
fldcw
rol
or
inc
jo
sbb
movsl
cmpsl
jmp
icebp
in
push
rol
push
ss
push
and
and
aad
pop
xchg
and
fistpl
adc
sbb
cwtl
sbb
mov
and
bound
inc
xchg
je
sub
adc
cli
add
push
xchg
jecxz
or
dec
lret
lcall
hlt
les
mov
ret
mov
repz
pop
nop
fwait
out
in
pop
pop
xor
inc
mov
jo
in
ljmp
inc
jp
or
xchg
loope
jno
add
ljmp
mov
lds
sub
ljmp
push
and
adc
xchg
loopne
pop
inc
sbb
fidivs
ljmp
daa
and
imulb
xlat
xchg
pop
xchg
mov
mov
stc
sbb
pop
ja
rcl
pop
orb
xor
js
repz
les
add
loop
fwait
mov
iret
or
test
pusha
ffreep
gs
popf
pop
lods
xchg
inc
ret
mov
insl
mov
sbb
incl
sub
cwtl
std
js
or
inc
test
hlt
add
pushf
frstor
add
inc
ret
jnp
jae
std
pop
pop
int3
cwtl
pop
ret
and
xlat
nop
push
push
fldt
cltd
pop
lea
cmpsl
xchg
lahf
in
dec
movsb
push
insb
lods
cltd
lea
cmp
repz
mov
fsubr
int3
shrb
test
rcll
mov
push
cmpsl
loopne
jmp
mov
jg
xchg
repnz
sbb
lock
pop
das
loopne
jb
xchg
test
in
inc
fldenv
push
fstp
add
orl
cltd
dec
clc
shrl
adc
fcmovnb
jno
out
iret
and
movsb
aaa
mov
add
push
pop
xor
add
lcall
xchg
jl
idiv
jne
jo
les
ja
push
add
jl
sti
push
pop
stos
mov
rolb
roll
sti
mov
mov
test
jl
insl
aam
dec
movsb
aam
jecxz
arpl
sbb
jne
rorb
jmp
xchg
and
lock
mov
loope
xorb
icebp
jmp
mov
sarb
pop
out
stos
psrlq
cmp
mov
dec
jnp
jne
cmp
sub
movsb
push
mov
std
fsubs
jp
andb
stos
or
and
hlt
xor
shrl
mov
add
mov
cwtl
dec
adc
stos
aad
inc
inc
ss
repz
aad
out
mov
adc
cmp
mov
js
inc
add
mov
jg
add
fdivrl
add
inc
jns
int
dec
mov
loope
popa
repz
enter
mov
or
mov
mov
and
mov
out
fistl
cmpsl
sarb
dec
outsl
dec
addr16
mov
cmp
dec
pop
aas
xchg
push
and
dec
jg
ret
scas
fcmovnb
movsb
repz
adc
mov
aas
das
out
ljmp
sub
push
aaa
loope
inc
insl
or
lret
lock
push
mov
popf
pop
in
dec
jae
cmp
push
inc
mov
out
andb
or
adc
sbb
push
lods
cmpsb
sbb
out
push
cmp
aas
sub
cmc
jno
dec
les
xor
jb
mov
push
dec
decl
in
mov
jae
bound
cld
imul
insb
mov
bnd
int3
cmp
jne
inc
add
jecxz
in
test
stos
in
sub
jge
icebp
addr16
xor
xchg
pusha
adc
xchg
mov
pop
data16
sub
jbe
les
sub
popa
stc
mov
push
loope
inc
xchg
rcrb
mov
sub
test
mov
mov
lea
aam
mull
arpl
sbb
movl
cs
sbbl
shll
outsl
cli
repnz
jne
xor
int
and
xor
cmp
lds
xchg
mov
jns
fists
push
ljmp
push
lock
mov
cmpsb
dec
mov
jbe
xor
xor
jne
adc
and
ss
cmp
mov
jno
ret
mov
jno
jp
push
sbb
popa
add
pushf
adc
sbb
subl
aad
mov
and
test
mov
sahf
lret
aas
pop
pop
cmp
mov
push
out
or
xor
in
dec
adc
ja
sbb
testb
aaa
ljmp
enter
push
sbb
out
mov
ret
lods
jb
stc
xchg
je
jecxz
sub
or
scas
aas
jge
hlt
sti
fidivrl
mov
jmp
and
push
cltd
scas
inc
mov
mov
add
xor
lret
and
ds
cmp
subb
xlat
fldl
or
adc
arpl
inc
cmp
sub
sbbl
mov
je
call
and
hlt
xchg
packuswb
arpl
pop
sahf
sub
stos
ja
out
pop
lods
jecxz
mov
cld
adc
pop
and
mov
sbb
mov
add
scas
xor
inc
ret
pop
xor
shll
icebp
push
sub
daa
clc
stc
ljmp
xor
or
sub
ja
push
das
shrb
pop
push
or
inc
mov
or
movsb
fidivs
dec
repz
xchg
jno
add
dec
lret
xor
shl
in
aaa
call
push
push
imul
and
fildl
ret
pop
out
sbb
test
xor
sub
push
push
lods
scas
ret
cmc
rolb
ficoml
dec
jmp
bound
dec
cmp
mov
aaa
loope
inc
pop
mov
push
pop
daa
and
mov
push
push
xchg
jns
js
rolb
push
cmp
and
popa
lock
jg
mov
push
mov
mov
aas
xchg
lret
and
cmp
test
mov
leave
mov
sahf
or
cmpsb
cmp
lcall
cmp
std
xchg
hlt
fucomi
mov
fcomi
pop
xor
jns
mov
fwait
adc
cmpl
pop
bound
fnstsw
pop
jbe
sub
lcall
out
pop
push
out
push
and
mov
push
es
adc
mov
repnz
cmp
fmul
xchg
test
sub
into
add
adc
lea
xchg
inc
sti
das
push
enter
test
sub
push
int
add
enter
ret
cld
sub
jno
mov
int
mov
mov
int3
mov
pop
filds
dec
cmp
mov
sbb
mov
or
fimuls
push
leave
negl
pop
sub
push
or
out
ret
std
push
daa
fcomps
push
insl
jge
jno
and
pop
sbb
or
stos
push
pop
push
pop
adcb
mov
pushl
out
sub
xlat
sub
inc
into
mov
dec
ret
lods
loop
roll
hlt
push
inc
xchg
aad
movsb
sti
mov
mov
sbb
lret
add
cld
sbb
dec
js
test
test
and
or
sahf
jp
cld
nop
push
push
and
jnp
scas
leave
in
data16
cmc
movsb
test
hlt
pop
inc
fisubrs
loopne
dec
lea
icebp
fistpl
test
or
pushf
xchg
in
xchg
lods
cmp
icebp
sub
imul
dec
dec
pushl
clc
inc
je
clc
push
pushf
out
inc
mov
aam
mov
sub
mov
sbb
add
add
into
test
std
dec
mov
shlb
test
and
adc
mov
pop
sbb
jne
popa
sahf
fwait
loop
nop
popf
shlb
inc
popa
fcmovu
lahf
xchg
xor
fsubrl
aas
and
jl
frstor
mov
cs
add
jg
adc
jmpw
or
xlat
ret
popf
scas
and
cmpsb
add
mov
jecxz
inc
jecxz
jae
cmp
lea
mull
testl
les
pop
out
lock
push
push
adc
cmp
push
add
out
xor
xor
sbbl
test
xchg
push
out
jnp
decb
mov
pop
fadds
fucomi
jecxz
je
or
adc
int3
fnstenv
pop
jmp
or
dec
mov
lods
outsl
jne
ss
inc
inc
ljmp
jmp
subb
stos
xor
out
icebp
arpl
push
mov
test
xchg
ret
push
pop
jno
sub
cmp
lret
fstpl
jg
shlb
jge
andb
jge
shrl
cmp
fbstp
mov
dec
fildll
xchg
fucomp
test
cmp
jmp
sti
jge
add
ds
cmp
subl
adcb
imul
pop
cmpsb
das
lods
arpl
push
movsl
popf
fwait
outsb
dec
inc
scas
add
inc
test
or
push
cmp
aam
inc
sti
push
lret
std
hlt
mov
add
sub
dec
push
mov
jae
sub
cwtl
adc
cmp
push
addr16
out
pop
sbb
mov
lahf
and
xor
pop
cld
jnp
add
mov
push
pop
cmp
mov
jp
cmpsb
cld
mov
add
and
xor
mul
and
movsb
push
mov
aas
hlt
fidivs
loopne
xor
sbb
rclb
jae
mov
xchg
out
pop
rcrl
and
mov
mov
push
fmuls
lods
mov
loop
lret
pop
add
adc
fiaddl
outsl
mov
aam
jp
sti
ss
fwait
aas
jb
xor
pop
mov
in
pop
lcall
fstpl
sub
cmp
pop
cmp
pop
jo
adc
pop
xor
lods
pop
insb
mov
ljmp
dec
jae
cmp
pop
xchg
xchg
push
sbb
dec
mov
adc
adcl
xlat
xchg
cmc
lcall
sub
mov
add
adc
hlt
fisubs
inc
repnz
rol
lea
cmc
mov
insb
adc
or
mov
test
dec
test
hlt
mov
les
cld
xchg
outsb
mov
add
cmp
in
rorl
adc
daa
mov
pmaddwd
popa
or
fwait
int3
leave
sub
mov
xchg
mov
div
loope
ret
pop
repz
sbbb
mov
push
cwtl
shrb
mov
faddl
inc
cwtl
cmp
pop
out
mov
push
sahf
sub
xchg
out
dec
inc
mov
in
adc
stos
or
js
add
ja
add
mov
add
push
and
out
xlat
lods
cli
lods
fcmovnu
aad
sbb
test
dec
aam
push
outsl
inc
xchg
push
bound
aas
neg
fwait
sbb
mov
imul
test
push
and
ds
add
jae
icebp
loope
stos
xor
push
mov
xlat
sarl
xlat
pop
jb
pop
jae
scas
xor
push
cld
jmp
decb
js
das
or
dec
pusha
push
and
fiadds
cmp
lock
sub
clc
xchg
mov
mov
mov
cmp
pop
dec
xchg
push
jecxz
xchg
lcall
mov
cmp
addr16
jo
shrl
jns
ljmp
mov
lds
push
pop
dec
and
cmc
xor
mov
sbb
or
xchg
arpl
outsb
and
xchg
sbb
pop
cmp
inc
inc
adc
xchg
out
push
inc
call
outsl
mov
mov
imul
lret
xor
je
dec
push
das
iret
int3
cmp
jno
or
push
popf
int3
adc
xchg
ljmp
fcompl
iret
push
mov
xor
fucom
mov
imul
mov
ret
stos
cmp
add
pop
into
fmull
mov
push
xor
sub
scas
cmp
jecxz
rcr
std
call
aad
addr16
andl
ret
fisttps
sub
test
das
dec
fcmovnb
mov
jne
loopne
fwait
mov
cmpb
xchg
mov
push
cmp
push
jns
and
jmp
icebp
lret
mov
outsb
xor
das
xchg
icebp
xchg
pop
sub
mov
adc
subb
cmp
out
or
out
js
insl
and
or
xor
xchg
push
mov
clc
adc
cli
pop
and
fcomps
pop
sbb
sbb
pusha
out
push
fadds
sub
xchg
add
push
bound
or
sbb
jl
xlat
js
inc
enter
adc
loope
jecxz
roll
mov
mov
jge
dec
or
mov
pop
lahf
shlb
fisubs
and
and
sbb
fistps
mov
mov
jecxz
mov
cli
add
aaa
push
out
xchg
mov
mov
or
jno
adc
push
add
mov
scas
xor
idivb
jne
or
fdivl
mov
roll
repz
ficoms
movsb
rorl
out
and
mov
push
push
or
hlt
sub
scas
in
inc
or
idivb
in
dec
pop
jne
call
les
ds
gs
xlat
xor
das
repnz
dec
jo
bnd
into
and
pop
add
ret
jae
adc
cltd
mov
ljmp
test
sub
imul
les
repz
jae
pop
notb
xor
in
push
xchg
test
out
xor
fisttpll
daa
lret
in
adc
lods
test
popf
jb
mov
lea
iret
scas
in
mov
jnp
fisubl
orb
lcall
or
add
add
sbb
cwtl
dec
lcall
adc
fdivs
cmp
jle
cwtl
lahf
jo
movsl
mov
dec
sub
data16
leave
push
scas
out
fcmovne
rorl
sbb
aaa
and
pop
sub
or
subl
inc
jo
test
dec
pop
sbb
sbbl
fldt
jnp
lds
pop
int3
mov
jbe
pop
sar
fbld
mov
jg
and
stos
jmp
adc
outsb
dec
fisubs
cmpsb
ficompl
or
adc
xor
ljmp
sbb
mov
adc
add
lds
jbe
pop
mov
je
popf
loopne
xor
fimull
add
repnz
push
mov
loope
test
loopne
xlat
inc
mov
out
mov
xor
lcall
stos
xor
inc
jne
stos
inc
jle
mov
xor
lcall
pushf
mov
fwait
dec
push
test
jb
jns
and
nop
push
mov
push
roll
fisubrs
sbb
mov
xor
stos
pushf
popa
dec
pop
pop
lock
rolb
inc
jb
notb
inc
fnstenv
setle
add
arpl
test
mov
or
pop
sti
lods
in
and
inc
aaa
pusha
sar
pop
or
outsl
std
call
lds
popw
inc
out
insb
outsb
sbb
insl
outsl
jns
mov
mov
dec
inc
fistl
inc
dec
cmp
fistps
pop
xchg
or
lahf
sub
test
adcb
and
stos
adc
or
or
dec
push
cmc
mov
jp
xor
and
mov
add
inc
test
and
mov
lods
push
sbb
dec
push
xchg
sarb
xlat
repz
cmp
addr16
lcall
out
xor
pop
jl
mov
insl
stos
mov
stos
fdivr
xchg
ss
out
inc
ret
arpl
xor
pop
fs
mov
icebp
cmp
in
or
nop
cmp
fadd
jb
cmpsl
and
addr16
repz
stc
int3
cld
das
sbb
mov
std
mov
in
fsubs
sub
sbb
inc
adc
add
pop
adc
aaa
cmpsb
daa
mov
cmpsl
sub
cmp
and
mov
xor
pop
ja
jbe
add
inc
xor
call
add
popa
dec
pop
mov
repz
lock
shlb
sbb
mov
xchg
rcll
pop
xchg
sar
mov
cmp
lods
scas
jle
pop
cmpsb
pop
dec
mov
and
sub
jne
pop
push
jmp
jmp
push
test
cmp
lret
pop
ret
lods
test
icebp
jecxz
jbe
lret
cmp
push
jle
mov
add
push
sub
mov
xor
daa
inc
jae
inc
mov
cmp
lret
pop
mov
dec
add
repnz
insb
adc
test
xor
adc
mov
sbb
cmp
aam
js
iret
pop
imul
jo
push
push
xor
dec
add
cwtl
add
or
test
push
and
adc
cmc
lock
mov
decl
int3
mull
or
imul
jbe
and
push
sbb
adc
addr16
sbb
ret
add
lahf
pop
testb
rcr
xchg
push
jmp
xchg
roll
ret
inc
inc
enter
sub
xchg
fldcw
mov
jns
add
cld
cltd
jbe
jge
pop
inc
mov
nop
dec
mov
sarb
sub
insb
movsl
xchg
dec
insb
add
push
xor
je
mov
movsb
mov
les
daa
xor
pop
into
sub
repnz
push
cmp
fwait
fwait
mov
insb
es
jp
sbb
push
inc
mov
push
cs
mov
gs
leave
fsubs
clc
xlat
xor
xor
pop
dec
jp
inc
or
xchg
mov
pop
addr16
in
popa
mov
or
pop
add
jns
push
mov
cld
mov
push
shrl
pop
and
push
inc
mov
or
popf
xchg
pushf
sub
pop
out
mov
jp
push
mov
push
dec
lret
or
or
xchg
mov
lcall
pop
dec
mov
popf
ljmp
jo
jecxz
dec
dec
call
xor
and
movsl
int
pop
add
ss
rolb
or
test
xor
dec
std
into
mov
or
pop
jae
shr
out
xorb
pop
int
sarl
lods
stos
mov
cmp
cmp
sti
mov
testl
int3
sub
repnz
inc
mov
je
imul
cwtl
in
das
sub
add
mov
push
xor
dec
ljmp
sahf
js
aaa
pop
xchg
add
mov
dec
fldt
rclb
aad
mov
lds
out
hlt
shr
icebp
mov
or
imul
push
ret
mov
sbb
or
lcall
in
int3
and
and
adc
push
fwait
adc
pop
inc
mov
stos
xlat
xor
pop
pop
sbb
pop
xorl
loop
lahf
push
repnz
or
in
out
ret
push
test
out
cmpsb
not
and
ds
leave
xor
mov
andl
jae
popf
sub
sti
out
jmp
jbe
cmp
jmp
andl
pop
sub
movsl
cmp
push
jmp
adc
cs
mov
mov
inc
add
mov
sahf
clc
mov
push
repz
inc
dec
pop
movsl
pusha
xchg
lock
pop
sub
pop
lcall
decl
popa
inc
cmp
mov
dec
int3
test
dec
sub
lock
xor
ret
flds
cld
mov
xor
inc
jl
xchg
pusha
sub
jns
sbb
push
xchg
xorl
iret
mov
les
add
dec
or
push
adcl
xchg
xor
pushf
sub
pop
pop
cmp
xor
dec
xor
nop
cmp
sbb
ljmp
pop
push
push
dec
lock
mov
pop
dec
sub
inc
lock
sbb
push
adc
xlat
or
and
adc
pop
mov
das
in
adc
ss
sbb
push
cmp
jg
xchg
adc
and
jmp
divl
xor
cmpsl
or
fisubrs
insl
jl
push
out
sub
sbb
mov
popf
xchg
or
pop
pop
leave
fwait
movsl
sub
std
xor
arpl
imul
inc
int3
sub
fsubp
cmpl
into
fildl
int
lds
adc
in
mov
jnp
or
inc
push
push
xor
je
in
ffree
inc
jne
out
mov
jo
cmp
mov
mov
mov
rorl
leave
call
inc
arpl
daa
jg
fldl
push
adc
stos
les
lret
fdiv
xchg
adcb
pop
push
pushf
ljmp
adc
xor
in
int3
mov
movsl
mov
ret
adc
shrl
cltd
sbb
jle
lock
or
ffree
sub
or
pop
lcall
les
cmp
in
ja
jecxz
push
rorl
adc
mov
lods
hlt
mov
dec
shlb
sahf
arpl
sub
iret
lahf
lds
test
jnp
adc
xor
hlt
nop
sub
inc
pop
xorb
call
push
jmp
xor
bound
dec
ds
jae
mov
and
cmpl
jne
mov
inc
sbb
dec
push
sbb
mov
inc
push
stos
ljmp
cmp
push
mov
sarl
into
scas
lahf
lock
xor
fidivrs
mov
cmpsl
shll
rcl
and
into
or
int
dec
fmul
push
stos
jnp,pt
lods
lret
imul
xor
cmpl
pop
fmuls
cli
es
in
push
inc
scas
in
fistps
mov
fwait
push
popa
mov
sahf
sub
data16
mov
mov
iret
mov
jge
in
xchg
stc
movsb
lock
xchg
jmp
icebp
out
imul
iret
cmp
push
pop
outsl
and
pop
xor
push
pop
mov
testl
xchg
cmp
push
icebp
int3
dec
xlat
fisttpl
push
adc
xchg
push
push
push
movsb
je
dec
sbb
sub
push
xchg
jp
cmpsl
mov
insl
sbb
bound
mov
lea
mov
imul
enter
push
je
and
push
daa
xchg
add
fs
mov
js
lahf
push
insl
jecxz
and
lret
push
addr16
lret
iret
lahf
dec
test
in
mov
mov
sbb
add
sub
out
pop
and
mov
dec
imul
pushf
pop
rcrl
das
test
insb
pop
mov
mov
cmp
inc
pop
sub
call
add
pop
xchg
lahf
jle
in
pop
sub
xor
inc
in
stos
add
inc
lahf
cmp
pop
add
cmpsb
nop
and
ljmp
cmpsb
ret
inc
sbbl
add
in
jbe
ljmp
loopne
cmp
out
mov
xor
scas
cmp
stc
aam
xchg
pop
mov
cmp
pusha
loope
addb
push
inc
xchg
mov
filds
push
cmpsl
out
aam
pop
aas
in
or
ljmp
xchg
dec
pop
pop
addr16
sbb
jne
sub
ret
into
mov
adc
inc
shl
cld
push
and
mov
xchg
pop
out
mov
xchg
cwtl
jp
push
pop
std
mov
enter
and
push
outsl
mov
stos
pusha
dec
xlat
add
mov
mov
out
pop
fs
pop
fsts
fbstp
cs
ret
imul
cmp
dec
xchg
xchg
add
push
sarb
sub
je
mov
or
and
aas
pusha
sbb
mov
push
mov
cs
js
das
hlt
jge
inc
dec
subb
mov
lods
test
inc
daa
xlat
sub
cld
test
mov
sub
pop
mov
push
sub
fdivr
iret
in
stc
sahf
push
mov
lahf
mov
mov
dec
adc
repz
mov
push
cltd
jae
stc
push
inc
mov
push
out
imul
mov
mov
push
imul
subb
dec
sbb
or
mov
jmp
xor
sub
inc
jp
rorb
faddp
add
add
fcmovnbe
rcrl
push
rcl
movsb
push
out
mov
insl
jge
jecxz
aaa
addr16
push
ret
jnp
mov
xchg
inc
push
sub
jecxz
push
lret
mov
fld1
cmp
add
imul
push
int
idivl
data16
jmp
and
dec
push
bound
cmpsl
fstps
push
jmp
subl
sub
and
jo
push
sub
mov
stos
xor
jb
jb
push
lods
or
les
pop
xlat
in
out
les
mov
stc
fiadds
mov
pop
jns
mov
xor
adc
sbb
xor
lret
add
lock
repnz
cmp
lock
xor
ret
movl
icebp
pop
and
jge
sbb
inc
sahf
pop
stos
cmp
ret
inc
orps
mov
mov
outsl
ljmp
xchg
fdivs
frstor
cmp
sar
icebp
add
stos
xor
ljmp
out
mov
inc
add
bound
sbb
jle
push
and
lahf
test
fdivrp
loop
data16
cmp
and
das
inc
pop
inc
pusha
pop
fwait
dec
sub
push
in
push
repnz
in
scas
xchg
scas
ds
mov
out
inc
pop
cld
inc
cmpsb
pop
mov
sub
rolb
loope
xor
push
and
jg
push
fisttpll
rolb
xchg
add
mov
sub
add
lods
daa
popf
inc
es
mov
loopne
jb
jo
repnz
insl
and
div
jg
hlt
xchg
test
xchg
xor
int
jbe
dec
dec
pop
push
or
jge
mov
adc
hlt
std
inc
mov
or
stos
xchg
test
cmc
jae
inc
xchg
and
sub
push
sub
call
pop
js
pop
int3
mov
out
xor
cmp
add
rcl
xor
jle
jbe
rol
jne
into
out
cs
mov
inc
je
dec
fucom
sub
fnstenv
mov
mov
stc
sbbb
hlt
stos
daa
fwait
out
stc
inc
jle
out
push
lods
xchg
and
ja
jne
nop
test
pop
mov
jae
movsl
pop
out
frstor
loop
and
mov
gs
inc
inc
test
add
daa
dec
jg
mov
js
dec
sub
push
push
xchg
out
jmp
jbe
orl
in
or
cmp
insl
hlt
iret
push
cmp
popf
shld
std
loope
push
or
adc
mov
fucomip
les
into
pop
sub
pop
dec
jns
pop
gs
push
popf
ljmp
movsl
jge
out
mov
jge
xchg
mov
add
sub
outsb
shrb
xchg
aad
fnstsw
push
xchg
loope
and
mov
add
test
in
add
jne
fists
fstpt
arpl
js
jo
jbe
jns
scas
loopne
lods
pop
imul
adc
mul
aaa
cs
jnp
mov
and
or
adc
lock
sub
out
xor
mov
cmp
ret
jmp
fsubl
notl
leave
xor
dec
cld
push
mov
sub
adc
push
ljmp
lock
cvtdq2ps
popf
fs
cmpsb
pop
pop
es
cwtl
sbb
test
adcb
sahf
shlb
rcr
pop
jbe
push
iret
mov
adc
jno
sub
testb
mov
sbb
jmp
push
inc
test
jne
pop
xor
je
or
cld
lret
cmp
sbb
test
cmp
subl
xchg
mov
jb
mov
jle
push
mov
cltd
cmp
cmpsl
sbb
pop
mov
jnp
sbb
sbb
into
push
dec
pop
popf
rcrb
sub
in
arpl
xlat
adc
rcr
cmc
adc
pop
das
out
in
sbbl
sub
ss
mov
mov
push
xchg
xchg
out
xchg
mov
xchg
push
sarl
or
shlb
inc
dec
xchg
fsubrp
imull
test
addb
in
adc
or
lcall
in
roll
adc
arpl
fwait
rcrb
gs
sbb
arpl
dec
jbe
mov
aas
push
push
add
mov
fs
outsb
inc
lock
push
movsb
jbe
flds
andb
or
pop
iret
dec
pop
adc
dec
mov
inc
push
loopne,pt
mov
in
mov
arpl
mov
adc
dec
inc
pop
std
imul
mov
sub
mov
stc
insl
xchg
imul
xchg
pushf
and
push
out
fidivrs
mov
xor
add
push
in
shrb
xchg
or
add
popl
add
nop
jae
dec
pop
lret
dec
push
lahf
loopne
decb
hlt
les
mov
mov
hlt
lock
test
adc
dec
inc
ljmp
inc
push
int3
mov
xchg
icebp
pop
dec
jno
mov
xchg
add
pop
cmp
lcall
mov
pop
mov
sbb
ret
shll
xchg
ja
add
js
dec
repnz
xchg
mov
xor
dec
fcomp
pop
xor
ret
and
dec
adc
push
xor
sbb
mov
sub
mov
repz
sub
mov
dec
sub
mov
add
push
filds
push
andps
pop
fistps
pop
divl
pop
push
adc
dec
fdivrl
push
adc
and
int3
outsb
out
pop
adc
jne
mov
outsb
ss
lret
int
inc
mov
adcb
stos
or
xor
mov
out
mov
loope
daa
add
test
shll
mulb
or
fs
mov
mov
mov
enter
sub
mov
xchg
scas
icebp
cmp
shll
dec
insb
outsl
aaa
xlat
push
lock
pop
out
jmp
sbbb
sbb
les
icebp
adc
popf
jbe
ss
mov
popf
sarl
sbb
sbb
mov
jmp
fidivrs
pop
mov
scas
ss
addr16
push
repnz
fmuls
mov
cmp
call
xchg
shll
inc
add
in
adc
sub
test
add
fnstsw
and
lods
arpl
daa
imul
hlt
mov
cmp
pop
lds
sub
ja
andl
xor
mov
psubsb
jb
push
sbb
jnp
xor
icebp
push
push
sub
or
lock
pop
pop
loopne
mov
cs
pushf
pop
loop
sub
sub
lods
ds
mov
out
aaa
repnz
push
inc
fdivrp
xchg
out
mov
shr
sub
jb
sub
sbb
adc
imul
inc
xlat
scas
ljmp
lcall
std
ror
mov
idivb
movsb
xor
and
rcrl
aam
xchg
add
sbbl
pop
sub
test
ret
cmp
push
mov
mov
je
mov
sub
jecxz
cmp
je
popa
fwait
dec
cltd
clc
dec
lock
loope
add
adc
fs
inc
xchg
push
push
adc
outsb
sub
xor
loop
addb
lret
mov
mov
inc
test
fdivl
leave
jg,pn
adc
inc
enter
inc
iret
incl
sub
mov
lret
in
xor
fadds
sub
vorps
inc
scas
xlat
cwtl
cmp
imul
lods
mov
sub
push
and
or
outsl
push
xor
jge
cmp
js
mov
cmc
outsl
push
outsl
cmpsl
lret
add
adc
pop
dec
mov
cmp
and
pop
movsl
or
fisubs
sub
jmp
fstps
jge
movsl
cmpsb
inc
jl
test
xchg
or
std
xor
test
cmp
push
sbb
mov
sbb
pop
aad
fcmovb
add
mov
fiaddl
pop
push
shlb
gs
sub
sbb
and
popf
iret
cmc
scas
call
dec
insl
mov
cmp
inc
push
jecxz
mov
mov
push
or
lods
mov
outsb
imul
dec
cmp
push
add
imul
or
dec
jp
jnp
and
cmc
cmpsl
adc
mov
sub
in
jg
daa
data16
pop
sti
dec
pop
leave
jmp
mov
scas
inc
jns
inc
insb
ret
pushf
mov
mov
xchg
insb
jle
imul
cmpsb
sub
dec
rorl
mov
repnz
inc
mov
bound
and
xchg
and
sbb
dec
mov
pop
xor
dec
mov
jbe
mov
xor
mov
adc
outsb
pop
test
inc
cld
jp
push
cmpsl
gs
popa
dec
mov
pop
inc
xlat
flds
cmp
mov
add
cmpb
sbb
jle
adc
push
loop
sbb
roll
push
sub
pusha
lret
in
mov
push
iret
fcoms
int
inc
sbb
fxch
pop
adc
ss
push
xor
adc
mov
icebp
xor
mov
in
fbld
sub
aas
aad
xlat
out
int
push
lea
aam
mov
inc
pop
and
cmpsl
inc
out
out
in
out
js
xlat
lea
dec
inc
fnstcw
push
dec
and
adc
in
adc
mov
adc
pop
xchg
mov
in
test
mov
mov
sti
jmp
xor
imul
mov
inc
adc
fisubrs
cmp
cmp
mov
xor
dec
js
jl
pop
in
push
adc
dec
movsl
js
mov
out
xchg
cmp
mov
cmpl
out
jns
push
pop
movsl
mov
sbb
add
movsb
xorl
mov
cmp
sbb
lret
pop
jno
call
outsb
xor
into
sbb
and
lret
loope
pop
xor
test
cmp
insb
xchg
sbb
and
xor
mov
add
mov
jg
pushf
fadds
ss
xor
daa
xor
and
mov
rol
xor
rolb
fcmovbe
adc
int3
inc
daa
pop
add
lcall
outsb
imul
xchg
lods
mov
test
or
bound
push
and
sbb
mov
test
cwtl
out
push
add
xchg
cmp
jne
js
cld
iret
scas
sub
mov
fcomps
shll
fwait
pop
lcall
scas
in
xchg
xchg
cmp
mov
or
test
inc
jg
mov
orb
sub
jle
js
popf
je
addl
sbbb
xorb
lret
jl
loopne
leavew
xchg
adc
add
or
incl
xor
int
arpl
cltd
das
rcll
stos
or
bound
in
test
dec
add
cld
xchg
cmpsb
adc
movsl
push
stos
sub
push
popf
stos
jne
popa
lock
cmpsb
jne
ja
je
push
lods
inc
sub
dec
inc
push
scas
and
or
xchg
jmp
jb
fisubl
inc
std
iret
jmp
and
out
jmp
inc
mov
jl
mov
inc
out
adc
test
inc
es
add
imul
cli
add
jns
ds
mov
fcoml
cli
cmpsl
arpl
xchg
popf
in
mov
cwtl
cmp
sbb
movsb
loope
mov
inc
aad
jo
jne
dec
jae
fsubr
sbb
inc
mov
mov
movsb
repz
imul
cmp
arpl
mov
mov
mov
sarb
sbbb
push
fwait
cwtl
aas
gs
adc
push
add
xor
lret
popa
mov
xor
sbb
inc
or
shrb
sub
add
cld
adc
mov
lods
insb
insb
fcompl
in
fmull
mov
es
repz
adc
into
pop
pop
adc
or
dec
or
sti
insl
mov
ret
popa
repz
xchg
add
outsl
xchg
jge
rorb
add
push
mov
mov
mov
flds
and
xchg
adc
cs
jecxz
insl
test
add
addr16
addb
je
jo
pop
pop
repz
jbe
shl
icebp
xchg
mov
shll
xorl
mov
push
fildll
cmpl
addr16
ja
mov
xchg
mov
iret
mov
push
dec
sbb
cmp
ja
mov
jle
mov
mov
jae
push
pop
leave
call
mov
rorb
scas
mov
es
dec
rcll
xor
jge
jne
push
fisttpll
negb
mov
add
jne
jg
xchg
or
pop
int
enter
sahf
les
inc
inc
jg
int3
adc
lods
js
and
inc
test
jb
ret
cli
xor
iret
sub
push
mov
cmp
addr16
sbb
sub
pop
imul
mov
imul
inc
sbb
mov
ja
ret
dec
jle
loope
fisttps
dec
cmp
imulb
mov
popa
mov
sub
ja
daa
rorb
pop
fcomps
rcrl
mov
in
inc
ud0
push
jg
mov
inc
push
ds
pop
andl
mov
mov
rcrl
bound
pop
mov
mov
and
inc
mov
ret
addr16
xchg
arpl
movsl
inc
xor
fisttps
das
mov
mov
shlb
addr16
in
pusha
inc
xchg
sbb
adc
mov
push
in
push
push
stc
adc
push
js
adc
add
inc
or
ss
sub
xchg
fdivs
leave
or
in
jge
enter
pushf
inc
popf
inc
cmp
stc
jl
push
push
and
mov
call
ljmp
out
adc
jne
ret
mov
inc
cltd
pop
mov
cmc
hlt
imul
stos
in
gs
es
or
adc
call
and
inc
add
loop
mov
nop
mov
je
xor
push
xchg
sub
push
popa
fwait
outsl
shll
mov
dec
insb
repnz
mov
lock
sbb
xor
pop
lock
movsb
xchg
cld
loop
fldenv
popa
dec
imul
sbb
and
cmp
pop
adc
push
out
lea
adcl
addr16
jb
inc
insl
inc
loop
pop
fdiv
sbb
push
mov
xchg
ljmp
and
jl
out
sti
push
mov
enter
stos
gs
enter
fs
fildl
leave
imul
xchg
mov
sub
push
dec
testl
shlb
pushl
adc
cwtl
sar
ljmp
adc
push
adc
dec
inc
ret
lods
add
sbbl
test
adc
pop
fadd
rcll
sub
in
jb
pop
aaa
mov
int3
aad
inc
sub
jns
xor
adc
mov
in
or
into
lock
jne
xor
hlt
sbb
sbb
xchg
adc
imul
daa
insb
mul
aad
cmpsb
fsubl
fcomp
xchg
add
shlb
inc
inc
insl
push
jle
call
add
inc
sub
adc
dec
pop
mov
sub
aam
cs
out
sbb
lret
adc
bound
jns
dec
mov
call
pop
int
adc
mov
gs
or
insl
aad
mov
cmp
push
mov
inc
push
pop
int3
nop
lods
cli
shr
ja
jmp
jg
aam
out
or
in
mov
call
or
out
xchg
pop
ret
rcrb
in
std
pusha
inc
pop
cmp
xchg
sub
xchg
adc
sub
in
out
xchg
or
pop
xchg
sub
inc
dec
sub
push
lds
and
xchg
test
mov
jge
add
pop
and
divb
xlat
lods
stc
js
test
xchg
cmp
cli
negl
adc
adc
jl
clc
dec
imul
dec
and
xor
pop
sbb
pop
gs
jne
add
jg
pop
fisttpl
stos
dec
pop
add
js
hlt
loop
mov
lahf
repz
in
iret
ljmp
sub
adc
lea
scas
xor
ret
or
test
lret
push
movsb
add
cmp
daa
clc
xchg
dec
push
or
out
jl
fsubs
mov
loop
xor
stos
movsb
sub
or
and
sub
in
rolb
rorl
lods
mov
and
popfw
inc
insb
iret
lret
aas
cmp
aas
loope
jge
aaa
sbb
pop
jmp
mov
pop
lea
aaa
dec
testb
subl
push
jbe
inc
bound
xchg
push
sub
fsubrl
cs
pushf
cltd
test
xchg
and
repz
test
mov
push
adc
sbb
cld
jle
scas
jecxz
lahf
or
sbb
test
and
sbb
bound
or
push
xchg
xor
cmpsl
ds
pop
cmp
lahf
push
mov
adc
xor
sub
mov
jb
outsb
fldcw
outsb
bound
jae
nop
jge
sbb
or
cwtl
repz
or
adc
movsb
mov
stos
pop
or
push
fsubl
aam
cmpsl
mov
push
movsl
xchg
loopne
popf
push
enter
mov
sbb
icebp
notb
inc
and
int3
pop
sbb
pop
jo
cwtl
sbb
mull
jge
lea
push
mov
movsl
leave
jo
test
mov
stos
xchg
inc
cmpsb
add
inc
jno
fcoms
mov
cmpl
imul
pop
push
out
pop
add
pop
xchg
or
push
xor
out
lods
cmp
scas
sub
mov
sub
pusha
ljmp
cmpsl
or
repz
push
sahf
pop
ficomps
or
adc
cmpsb
test
outsb
shl
push
outsl
sub
sbb
adc
std
ret
add
ret
andl
ds
push
scas
jl
mov
pop
fists
dec
add
insl
arpl
sbb
stos
in
aas
sahf
xor
jns
mov
outsl
cmp
pop
scas
imul
cmpsl
test
xor
movsb
mov
call
sarb
sbb
jmp
jle
pop
out
daa
push
addl
fmuls
test
xchg
sbb
popf
push
push
mov
dec
sti
xchg
adc
jp
out
stc
mov
mov
push
xchg
sti
push
ds
xchg
mov
jnp
mov
inc
in
dec
add
mov
and
xor
scas
cmp
std
stos
stc
in
inc
mov
cmpsl
jg
adc
ret
dec
fnsave
cmpsb
xor
push
std
or
ss
cs
sbb
test
inc
mov
jno
aas
jae
movb
loopne
pop
aam
iret
shll
imul
pop
pop
fwait
adc
pop
stos
iret
es
lods
dec
add
inc
dec
in
xor
dec
mov
push
ljmp
xchg
sahf
fimull
pop
iret
std
movsl
or
jmp
mov
ret
jns
push
outsb
roll
jne
adc
iret
xor
push
ficompl
xchg
movsb
xchg
jbe
sbb
push
aam
pop
pusha
outsb
dec
lret
iret
movsb
xchg
adc
ficoml
pop
in
and
mov
arpl
fldt
xchg
and
and
push
mov
sub
dec
jno
adc
ljmp
adc
dec
cmp
push
addb
test
xor
out
mov
repz
adc
ss
pop
push
and
pop
das
in
jne
add
loope
pop
xor
adc
cmpsb
inc
mov
enter
add
movl
in
and
and
dec
adc
or
std
xor
and
loop
dec
daa
cs
jle
test
mov
sarl
cltd
daa
push
mov
int
jg
adc
xor
jo
fcmove
stos
addb
xor
inc
out
adc
shll
std
movsb
sub
mov
push
cli
ss
xor
pop
and
loopne
push
sub
sbb
add
xchg
decb
pop
pop
fstpt
push
nop
dec
jle
es
enter
sti
pop
cld
sbb
inc
fisubrs
push
popf
cmp
lret
sarl
sbb
stc
fst
and
dec
adc
insl
inc
mov
push
cmc
push
sub
pop
inc
cmc
pop
pop
inc
jne
loop
xor
xor
cmp
mov
unpcklps
pushf
cmpsl
sti
xchg
lods
and
xor
std
jp
stos
iret
dec
fistps
push
int
scas
pop
mov
insl
psubw
push
add
add
add
xchg
pop
push
mov
call
xchg
inc
jne
inc
inc
push
jecxz
xchg
mov
shlb
sub
mov
out
xchg
jecxz
pushl
adc
shrd
loopne
jl
addl
cmpsl
daa
mov
std
stc
xchg
outsl
sbb
out
scas
scas
pop
leave
es
inc
sub
jne
push
xchg
scas
mov
adc
in
lcall
rolb
pop
or
push
loop
push
inc
stos
and
stos
popl
je
add
add
stc
mov
mov
lret
repnz
dec
dec
mov
push
dec
les
lret
xchg
popa
in
xchg
icebp
push
std
in
adc
inc
xor
add
lret
ret
mov
fsub
mov
push
inc
jp
test
mov
jecxz
jbe
std
and
out
dec
fdiv
xchg
add
pop
in
mov
test
enter
xor
add
shlb
aaa
inc
dec
outsb
jecxz
decl
imul
and
push
movsb
mov
adc
js
jg
lods
sbb
cmpsl
ja
push
ds
or
imul
or
mov
pop
scas
xchg
push
push
enter
lret
je
repz
std
push
cmc
gs
push
sarl
aam
icebp
ss
push
xchg
hlt
mov
inc
das
aaa
mov
adc
pop
mov
push
xor
insb
insb
lods
movswl
pop
pop
push
jl
sub
inc
jb
sbb
dec
js
jge
in
into
pop
fnstcw
jp
inc
movl
jbe
sub
jmp
sbb
xlat
pop
scas
cmp
incb
das
std
mov
dec
dec
loopne
sti
jno
enter
push
xchg
adc
daa
or
mov
xchg
push
jb
dec
mov
enter
iret
into
push
dec
out
mov
frstor
pop
sti
dec
xchg
sbb
mov
add
xor
push
cmp
call
out
sbb
push
jmp
mov
push
push
pop
mov
daa
test
fdivrl
mov
xchg
xchg
xchg
ja
stc
xchg
rclb
jb
or
adc
stos
bound
jl
stc
es
add
add
in
lret
mov
int
add
cmp
mov
jo
xchg
and
std
sahf
lret
out
mov
shll
lock
bnd
jbe
in
push
lods
pop
or
jae
enter
jne
lahf
fs
pop
sub
pop
loope
daa
enter
cld
xchg
cmpsb
sub
xor
scas
xchg
mov
xor
xchg
mov
jg
js
stos
xlat
nopl
lret
cmpsb
push
push
mov
iret
jns
fwait
cmp
je
stc
mov
mov
dec
add
sub
jb
xor
inc
dec
fstl
xchg
and
scas
sub
mov
push
call
mov
pop
pop
call
je
mov
add
xor
mov
aam
mov
jno
test
outsb
mov
jo
dec
out
mov
stos
decl
mov
mov
pop
mov
cwtl
dec
jne
pop
add
add
addr16
inc
mov
xchg
mov
push
cld
push
daa
add
in
sbb
int3
jae
ret
push
pop
mov
popa
ja
lahf
add
std
sub
dec
sub
inc
mov
add
mov
fistpl
xchg
jno
push
fwait
inc
push
inc
imulb
cmp
dec
test
fmull
pusha
in
lcall
jno
es
pop
push
out
xlat
call
fistl
sub
pop
inc
stos
lret
adc
sbb
adc
inc
xchg
xchg
push
mov
cld
jmp
addr16
mov
jp
and
arpl
or
mov
mov
mov
or
mov
in
push
cmpsb
outsl
push
dec
divb
xchg
xchg
xchg
cld
add
out
and
cli
cld
stos
xor
clc
aaa
and
fsubs
inc
jbe
aad
mov
scas
push
or
lahf
mov
repz
sub
xorb
leave
ss
in
fidivl
push
push
mov
dec
adc
push
or
inc
out
adc
movsb
add
rcll
push
push
mov
dec
arpl
test
rorl
mov
pop
mov
jecxz
ret
dec
andl
xchg
ljmp
pop
push
sbb
adc
shl
and
xsaveopt
or
out
jg
es
mov
popf
arpl
lds
xlat
into
dec
mov
lret
sbb
push
mov
adc
adc
and
xor
in
add
jae
test
sbbb
inc
xor
or
cmp
and
repz
cmpsl
test
cmpb
push
xchg
repnz
mov
sub
cmp
into
cmc
jo
add
clc
sbb
pop
adc
adc
cmpsb
scas
sub
mov
pop
arpl
cmp
dec
push
jle
add
jo
mov
xor
push
mov
inc
pop
hlt
pop
fstl
push
mov
les
sub
adcl
test
out
sbb
jmp
jle
in
push
xchg
mov
jbe
xchg
dec
inc
mov
pusha
movsb
sarl
push
adc
pop
mov
mov
mov
idivb
mov
inc
or
adc
xchg
adc
and
stc
sub
lret
orl
leave
jmp
push
mov
pop
in
scas
lds
mov
cwtl
inc
push
cmp
adc
roll
pop
or
nop
mov
xlat
pop
jp
ss
mov
ljmp
adc
sub
mov
ja
sub
lcall
cltd
shl
sbb
loop
xchg
cmc
enter
dec
roll
mov
mov
sub
mov
orb
test
out
or
xchg
mov
outsb
adc
cmpsb
mov
push
cmc
repnz
es
inc
into
or
les
fimull
push
adc
xlat
add
mov
dec
lea
adc
ljmp
out
add
in
ror
mov
add
mov
or
push
mov
or
adc
fsubrl
rcll
cmp
xchg
in
add
cs
mov
pop
fdivrl
leave
insl
pop
or
xchg
push
fs
push
sub
mov
pusha
jle
ljmp
mov
mov
and
std
int
and
rolb
pushf
add
dec
cmp
loop
out
dec
pop
outsb
push
and
rcll
shll
jb
je
add
lret
ds
mov
mov
mov
xchg
pushf
cltd
push
add
mov
out
std
lcall
mov
pusha
sub
mov
cmc
jne
mov
inc
sbb
popf
push
dec
imul
dec
inc
sahf
adc
jnp
and
dec
mov
xor
ss
xchg
gs
sub
testl
cmp
mov
xchg
xor
jp
imul
pop
in
loope
sub
aas
outsl
mov
dec
jns
add
lcall
repnz
ret
adcb
push
fisttpl
or
test
inc
shlb
aas
rol
pop
fwait
jbe
pop
ss
test
cs
xchg
lock
mov
test
imul
jns
push
jns
push
jb
and
aam
imul
xchg
aas
sub
or
out
jg
pop
or
sub
jno
adc
or
addr16
addr16
hlt
adc
fnsave
stc
js
ds
aaa
jo
push
pop
vmovdqu
clc
aaa
insb
rcrl
jae
lea
je
pop
push
and
mov
mov
call
mov
add
cmp
xchg
orb
cmp
je
daa
mov
ret
cwtl
push
mov
bswap
sarb
dec
pop
std
aaa
sub
loope
jecxz
in
pop
jl
add
in
rcrl
lret
stc
sub
stc
jns
enter
mov
lock
loopne
push
push
mov
imul
and
in
mov
data16
data16
pushf
repz
jb
gs
aam
cs
inc
jns
jbe
mov
lods
sub
jmp
das
inc
push
pop
imull
xor
or
push
sbb
pop
add
mov
test
mov
or
pusha
call
repz
xor
outsl
fidivs
mov
pusha
test
loopne
test
mov
adc
sbb
les
jb
cwtl
setns
push
sbb
cmpsl
mov
fcoms
enter
add
aad
sub
dec
or
jae
stos
pop
or
aaa
sbb
sbb
push
add
aam
repz
ljmp
cld
addl
jmp
pop
push
lds
adc
lods
icebp
xchg
mov
mov
pop
fimull
nop
mov
ja
rcr
dec
iret
lds
sbb
pop
mov
lock
jnp
jp
test
sbb
xchg
xchg
sahf
adc
test
push
in
aas
push
testl
std
ds
and
stos
push
aad
adc
sbb
pop
push
jo
ret
sub
mov
sbb
inc
daa
push
fistpl
mov
fdivs
dec
call
add
addl
or
scas
mov
iret
xchg
xor
rol
adc
aaa
aad
dec
in
inc
stos
xorl
mov
fucomp
ret
lret
sub
and
stos
cmpsb
xchg
pop
movsl
xor
movsb
out
aas
mov
cmpl
mov
mov
dec
lds
sahf
aas
mov
xor
in
mov
dec
sti
dec
mov
aam
mov
scas
cmp
jo
shrl
jmp
lret
pop
pop
and
cltd
jnp
loopne
inc
bound
stos
sub
sbb
xchg
stos
movsl
push
cli
scas
test
icebp
push
mov
nop
pop
mov
sub
and
jb
sbb
sbb
pop
fmuls
lcall
mov
mov
lea
jae
lret
xchg
or
pop
mov
xchg
sti
jle
call
sub
jmp
inc
lock
leave
fistpl
mov
rorb
sub
fmuls
cld
in
loope
cmp
sub
orb
cmpsl
sti
lcall
fucom
fwait
jl
inc
cmpsl
out
xor
arpl
dec
sbb
outsb
jg
pushf
push
shrb
iret
xchg
nop
add
sub
mov
or
mov
addr16
negb
push
mov
xchg
and
cmpsl
jne
sbb
and
mov
test
movsb
pop
jns
jne
sub
loopne
jns
push
xor
ret
xchg
fcmovnb
lock
inc
sub
ljmp
or
push
mov
sti
sbb
rcrb
inc
mov
cmp
mov
addr16
jae
mov
cmpsl
jle
ljmp
pop
mov
fidivl
or
push
mov
jo
xlat
and
add
lods
adcb
sub
and
nop
lahf
pop
daa
push
mov
jnp
shrb
test
not
push
add
shll
mov
imul
in
jae
jb
cli
cmp
xchg
addr16
out
in
data16
cmpb
mov
xchg
js
in
add
aas
lods
fidivrs
in
lret
aad
shufps
wbinvd
pop
mov
add
test
in
adc
xchg
push
mov
mov
lods
bound
mov
aam
imul
ret
dec
lea
test
out
fisttpl
pop
cwtl
push
xchg
xchg
subb
jnp
sub
les
xchg
fisubrs
repz
add
outsb
pop
cmpl
fdivrs
dec
pushf
xorl
and
fcoml
cmp
sbb
or
scas
lock
popf
pop
xchg
mov
jne
pop
stc
adc
loope
xchg
jp
add
adc
shll
push
es
mov
clc
push
jp
mov
sbb
sub
mov
inc
cwtl
aad
scas
push
push
int
pop
stos
mov
mov
pop
xor
fcoml
xor
lods
push
out
pushf
xor
jo
jp
dec
cs
shll
sarb
mov
push
cmpsb
cmp
inc
sbb
inc
xor
dec
cmpsb
inc
movsb
cltd
sub
popf
push
jne
in
dec
data16
cmpsb
sub
leave
push
arpl
test
cltd
ficomps
call
push
xor
push
pop
sub
cltd
fwait
leave
or
subl
xchg
hlt
push
and
addr16
dec
cmpsb
cmp
inc
jle
or
dec
mov
push
movsb
sbb
push
push
mov
sahf
les
xor
mov
sub
inc
and
cmp
sarl
cmp
jno
jns
shll
add
cli
jne
xchg
mov
push
fimull
mov
adc
lahf
fimuls
jle
cmpb
dec
fstl
push
outsl
pop
out
xchg
test
cmp
xchg
nop
xor
xchg
mov
pushf
inc
out
sub
sbb
aad
dec
mov
enter
and
in
dec
adcl
imul
cmpsb
lods
or
mov
jnp
mov
adc
add
xchg
or
sub
int
addr16
repnz
adcb
cmp
jns
das
jecxz
cld
stos
or
push
pop
or
sub
cmpl
lods
mov
sti
mov
push
into
movsb
dec
mov
pop
sub
subl
rolb
cltd
outsl
xor
scas
add
mov
pop
mov
popa
jns
jecxz
dec
outsl
into
mov
outsb
push
xor
inc
pop
bound
lcall
mov
pop
mov
mov
or
lcall
or
mov
iret
adc
clc
or
popf
and
dec
fcmovnbe
sbb
pop
and
lods
push
cltd
fiadds
gs
or
jp
jno
rcl
addr16
out
fs
jp
aam
and
jns
das
adc
dec
fisttps
dec
ds
cmc
push
push
sbb
rolb
insb
ds
push
sar
jl
les
pop
pop
mov
outsb
sti
mov
lock
inc
hlt
push
push
pop
lea
push
xchg
and
clc
dec
insl
dec
es
mov
fsubrl
out
jnp
dec
loope
mov
aas
ljmp
ss
cmp
outsb
sub
stos
popf
pop
push
pop
lods
ljmp
dec
push
repnz
je
add
cmp
inc
dec
adc
mov
sub
cmp
mov
push
xor
jnp
mov
mov
gs
stc
repz
jno
fnstcw
enter
jae
sbb
sarb
dec
adc
iret
xchg
xor
movsl
inc
sbb
mov
pusha
jo
mov
inc
stos
xchg
mov
cld
jnp
push
aad
loopne
outsl
ss
cmpsb
cmp
and
subb
mov
or
inc
rorb
mov
push
lahf
pop
push
call
addr16
add
test
divl
lret
push
pop
adc
xchg
cmp
mov
or
sbb
out
xlat
jge
ret
or
jnp
push
xor
push
mov
or
dec
cmp
xor
idivb
sub
mov
sti
jne
cmc
int3
xchg
movsb
jge
mov
imul
jg
jmp
mov
movsl
mov
pop
outsb
fldt
pushf
pop
arpl
psrlq
bound
mov
xlat
sar
adc
cwtl
sub
pop
sub
cmpsb
inc
loopne
maxps
ss
adc
and
lea
add
xchg
fisttpl
testb
jbe
mov
mov
xor
adc
in
lods
adc
in
fcoml
cmpsb
leave
adc
call
and
push
mov
out
into
lcall
and
jo
nop
xorl
hlt
mov
rorl
movsl
xchg
cmc
jns
icebp
xchg
test
cmp
or
mov
ja
dec
pop
mov
shlb
add
je
mov
inc
add
loop
mov
test
aas
add
lods
add
or
cmpsb
xchg
inc
in
jl
call
and
sub
mov
das
bound
push
outsl
arpl
cmp
sbb
into
fcoml
and
imull
xchg
or
out
data16
stos
add
xchg
mov
es
xchg
in
jmp
cmp
ficoml
adc
add
dec
xchg
rcr
loopne
rclb
sbb
cs
std
es
popa
in
mov
pop
jge
lret
push
push
push
loope
pop
orb
xor
inc
mov
out
aam
xchg
mov
dec
bound
inc
into
and
call
mov
cmpl
cmc
mov
and
add
js
and
jmp
mov
ljmp
mov
jp
mov
incl
fsts
push
aas
mov
bound
xchg
fidivrs
cmp
in
orb
and
sahf
mov
fsubr
test
movsl
negb
jmp
sahf
xor
inc
hlt
mov
ja
pop
mov
mov
inc
insl
xor
xchg
add
dec
mov
mov
stc
test
jg
es
inc
pop
mov
sbb
sub
sub
lret
lret
cltd
dec
in
push
inc
jns
or
out
ss
or
lods
xchg
push
stc
pop
or
sub
fwait
push
scas
dec
dec
pop
pop
xchg
inc
stc
or
outsb
arpl
mov
dec
pop
fists
lret
dec
aad
sbb
in
lods
clc
fsubrs
aas
jg
jbe
cli
adc
pop
and
push
cmpsb
addr16
mov
mov
pop
je
rorl
adc
scas
mov
inc
out
add
andb
dec
ja
icebp
inc
popf
push
jge
movsb
pop
mov
mov
mov
into
in
ja
pop
iret
add
jl
in
mov
mov
inc
xchg
je
adc
and
jne
movl
rcr
lret
or
inc
aam
sbb
fcmovbe
js
repnz
ffreep
jle
mov
or
call
aam
fsubl
mul
jecxz
das
into
cmp
cmp
adc
mov
addl
outsb
and
xorl
pop
fld
and
jle
sub
test
imul
cmp
sbb
mov
hlt
mov
aam
hlt
hlt
jl
cmp
outsb
dec
stos
in
or
sbb
cmpsb
int
lret
nop
push
in
test
xchg
rcr
ljmp
sti
in
jb
xlat
repnz
dec
dec
or
jle
pop
stc
pop
xor
ret
pop
fsts
fs
ret
cmp
xor
and
jmp
divb
iret
inc
hlt
nop
adc
push
stc
rclb
cmpsb
test
pop
inc
pop
scas
adc
push
insb
xchg
pop
ss
std
repnz
paddusb
popf
inc
xor
in
add
pop
ds
pop
movsb
test
pusha
in
push
lock
mov
decb
jg
fwait
mov
xor
add
imul
fimuls
insb
sub
in
push
aam
push
push
or
mov
stc
loopne
sub
and
ds
insb
clc
mov
call
mov
add
popf
in
mov
dec
mov
ds
jecxz
ljmp
std
adc
inc
push
jno
leave
cmc
or
jmp
jae
shlb
push
in
push
sahf
and
xor
bound
mov
shr
movsb
andb
int3
push
inc
cmp
mov
ret
xchg
ds
push
or
mov
push
add
sarl
cli
insb
popf
or
push
jge
rcr
cmp
pop
cli
pop
xorl
dec
subb
imul
pop
nop
dec
jae
pop
popa
stos
add
add
and
aad
in
fnstenv
fstpl
mov
cmp
imul
mov
jnp
rolb
mov
jp
hlt
sti
add
push
movsl
sub
inc
xchg
ret
scas
in
test
imul
outsb
rorb
push
aaa
outsb
sbbb
push
in
mov
into
mov
cld
shll
jmp
adc
xor
push
mov
and
cmp
loop
and
ljmp
arpl
shlb
mov
in
mov
repz
adc
call
aas
pop
out
stos
arpl
cltd
adc
mov
adc
int3
xchg
mov
repnz
and
fiaddl
cmpb
scas
pop
iret
dec
sbb
xchg
cmpsl
or
sub
enter
xor
pop
mov
in
pop
xchg
lret
aam
or
rorl
mov
insl
js
jl
push
pmaxub
and
mov
and
cmc
lret
jne
ret
push
jl
cmp
mov
add
sbb
pop
sbb
xchg
addr16
add
add
je
add
mov
fmul
divb
add
bound
add
decl
lock
ja
mov
jge
movsb
cld
or
movsl
mov
mov
mov
and
push
sbb
ss
loop
stos
cli
cli
jl
insb
adc
adc
fisubrs
mov
xchg
js
iret
sub
loope
scas
adc
or
pop
in
inc
jne
ss
pop
or
push
adc
pop
jae
loopne
mov
jmp
push
js
inc
cmp
in
mov
mov
pop
test
jne
or
stos
mov
movsl
enter
jmp
stos
jecxz
mov
push
adc
mov
sbb
test
add
mov
mov
add
push
xchg
inc
fstpl
lret
into
cmpsl
and
stc
and
gs
std
test
or
push
ret
push
std
mov
adc
sub
cmpsl
into
xchg
outsl
popl
shl
inc
xor
mov
mov
adc
ficoml
aad
mov
ljmp
mov
pushf
out
adc
imul
das
jge
cli
jbe
cwtl
ret
push
mov
pop
inc
imul
imull
and
fldenv
repnz
iret
mov
rcrl
in
sbb
leave
push
push
mov
aaa
xor
dec
dec
aaa
divl
leave
bound
mov
xor
push
shrb
icebp
jns
outsl
inc
push
pop
ja
outsl
inc
xor
inc
stos
cs
xor
xor
stos
jnp
jbe
fcomps
sbb
inc
into
mov
or
xchg
or
imul
out
pop
ficomps
fcmovbe
pop
pop
xchg
add
sbb
mov
aad
add
arpl
imul
lret
and
test
rorl
test
lock
hlt
xlat
adc
repz
popf
iret
sbb
cli
cmp
sti
mov
mov
push
inc
jmp
cld
jo
fidivl
ljmp
rclb
movsb
and
or
mov
sbbl
mov
push
shrb
fs
mov
cli
movsb
mov
repz
push
fcoms
fiadds
xor
inc
xchg
imul
aas
xor
mov
push
or
inc
fsubl
jp
cmpsb
clc
test
mov
fidivrl
nop
gs
push
mov
and
mov
push
aaa
mov
push
mov
rcrb
addb
sbbl
mulb
ljmp
sub
je
pusha
mov
push
xor
mov
int
imul
cmc
dec
push
push
popl
cmp
test
xor
inc
xchg
jl
js
out
push
out
addl
xorl
aaa
push
inc
xchg
sub
mov
sub
xchg
int3
dec
xor
or
mov
and
adc
ja
nop
dec
daa
pop
fnstsw
lret
pop
es
mov
push
mov
call
mov
mov
insl
scas
mov
sbb
loopne
cld
xchg
xchg
int
loope
adc
pushf
push
sub
pop
js
mov
stos
pop
jne
cmp
pop
dec
jae
iret
hlt
pushf
bound
mov
jg
jmp
int3
push
dec
sub
dec
push
das
sub
and
popf
bound
adc
mov
lcall
popf
movsl
enter
iret
scas
pusha
sub
jg
fistpll
xchg
in
dec
dec
or
mov
lret
jns
pushf
das
je
mov
add
in
mov
xchg
mov
hlt
dec
repnz
jae
pop
leave
lock
sbb
in
mov
frstor
rol
sarb
lcall
jae
shrb
mov
jns
addb
sub
popa
pop
cli
test
dec
stc
stos
inc
xchg
gs
movsb
mov
jnp
lea
push
sub
jge
mov
stos
sbbl
loop
xchg
loopne
test
cmp
loopne
call
aad
inc
fxch
cmc
jnp
cmp
and
dec
xchg
outsb
mov
push
add
cwtl
mov
mov
fs
xor
or
mov
adcb
jno
sbb
xor
pop
or
into
cwtl
dec
or
mov
and
push
jmp
pop
inc
clc
cmpsl
dec
es
das
pop
int3
fstps
dec
mov
nop
sub
out
lret
adc
clc
clc
dec
repnz
pop
jg
mov
imul
pop
push
jae
mov
in
inc
dec
jge
jno
shlb
mov
lock
add
cmp
xchg
sbb
repnz
mov
sbb
pop
fsub
cld
push
dec
fsts
sbb
dec
es
js
xor
inc
je
mov
int3
mov
repnz
leave
add
adc
adc
push
and
cmp
iret
or
cmp
push
xchg
inc
popa
movsl
dec
out
xlat
lods
xor
jbe
sahf
movsl
sbb
push
mov
pop
adc
sbb
xor
mov
fstl
out
mov
mov
out
insb
cmp
sub
daa
cmp
fwait
test
out
aaa
and
push
out
jbe
xor
jne
inc
les
andl
jbe
push
jae
mov
add
add
repnz
fucomi
scas
mov
lea
xchg
push
xor
repz
xorl
or
cmp
adc
cmpsb
xchg
lods
int3
mov
mov
or
mov
xchg
cmp
push
shlb
jo
jb
push
loope
mov
bsf
imul
imul
lods
mov
inc
push
cmp
imul
fstl
jne
ret
add
xor
inc
inc
aam
lods
and
fcom
adc
sbb
xchg
in
divl
jl
icebp
rolb
jle
xorb
inc
aas
aaa
scas
sub
pop
cli
popf
inc
push
pop
inc
ret
lods
pop
insb
adc
popa
scas
push
sahf
or
xor
sbb
stos
mov
adc
js
sbb
cmp
jl
bound
xor
sbbl
mov
push
insl
ror
mov
jo
xchg
stos
mov
sub
lods
in
sahf
jge
dec
test
jae
pop
fwait
and
push
mov
and
push
push
cmp
push
push
xchg
mov
add
adc
je
in
adc
cmp
inc
aaa
cmp
or
fwait
insb
mov
mov
jmp
adc
xchg
adc
push
lret
jmp
push
xchg
ficoms
int
inc
outsb
mov
out
pop
repnz
cs
and
xor
ja
jl
xor
push
lea
xor
pop
ss
xchg
mov
repz
outsb
or
enter
mov
loop
sbb
int3
jmp
sbb
in
push
xor
mov
sbb
cltd
mov
xchg
fidivrl
scas
xchg
mov
xchg
and
jecxz
xchg
ja
xchg
repz
pop
stc
dec
cmp
inc
or
adc
shll
cmc
add
arpl
clc
jns
loop
jmp
cmp
outsl
sub
loop
leave
fs
push
cmp
inc
dec
and
js
add
inc
dec
mov
jns
imul
sub
ljmp
mov
mov
out
hlt
movsb
adc
inc
icebp
lcall
inc
xchg
in
loop
cmpsl
dec
pusha
ret
add
push
pop
shl
movsb
adc
jg
or
fcompl
pop
push
jp
push
ljmp
push
or
and
or
es
pop
data16
add
inc
andb
sbb
lock
out
push
out
into
and
and
ret
repz
cli
xchg
add
jbe
or
xlat
shlb
out
mov
movsb
cmpsl
add
cwtl
flds
mov
lea
pop
sub
jnp
pop
push
daa
in
or
xchg
fisubrl
xor
ds
je
test
repnz
mov
call
sarl
dec
dec
repnz
add
push
sbbl
loopne
rcrb
jb
mov
aam
pop
rcrl
cmpsb
fsubr
mov
mov
rorl
mov
jo
mov
insb
iret
pop
into
dec
dec
daa
loope
lret
pop
imul
mov
loope
jb
push
mov
fwait
es
fsts
icebp
repnz
mov
mov
jp
mov
mov
leave
mov
sbb
mov
jp
xlat
fmull
test
push
je
jne
mov
rcl
lods
fistl
in
imul
aas
cs
out
adc
xchg
movsb
fwait
cmp
xor
cmpsl
fbld
fcmovnu
leave
lods
and
js
ljmp
ljmp
inc
xchg
mov
scas
xlat
dec
stos
push
loop
sub
xchg
fists
popf
sbb
pop
out
mov
or
int
iret
push
jecxz
push
ds
jl
dec
rolb
cmp
add
movsb
cmp
fstl
mov
sbb
mov
sbb
stos
dec
negl
pop
rcr
in
sbb
out
test
dec
aam
in
stc
dec
lds
adc
xlat
dec
fxch
fs
loop
or
sbb
mov
sub
inc
insl
sbb
fiaddl
cmp
mov
lret
lds
push
dec
mov
xor
xorb
mov
jno,pn
lds
mov
xchg
mov
call
and
mov
mov
scas
cwtl
jmp
movsl
ficoml
imul
cmp
mov
cmpsb
bnd
shll
sbb
fisttpl
iret
cmp
stc
jmp
call
stos
mov
push
loop
add
loopne
pushf
in
out
incl
mov
sbb
imul
mov
adc
sahf
out
shrb
jecxz
iretw
enter
movsb
xchg
jno
outsl
xchg
mov
mov
mov
fmul
cmpsb
mov
pop
subl
lods
add
xlat
int
mov
or
mov
orl
das
bound
clc
mov
test
fnsave
icebp
jl
jge
inc
sbb
aaa
das
xchg
enter
scas
cmpl
ret
les
jno
dec
ja
pop
mov
mov
mul
dec
es
fidivrl
push
sbb
sti
fimull
scas
outsb
pop
mov
ds
push
pop
les
shrl
add
jg
icebp
and
mov
mov
sbb
dec
pop
icebp
push
xor
inc
gs
fadds
mov
mov
aam
jge
inc
mov
push
sub
jae
jns
push
and
outsl
ror
mov
arpl
addr16
mov
inc
int3
inc
es
fdivrs
xchg
mov
inc
add
sti
cmpsb
mov
cwtl
and
add
jbe
shlb
jo
pop
mov
arpl
notb
jl
xor
jo
push
dec
loope
popf
adc
addr16
into
mov
adc
int
in
popf
xchg
out
aas
jecxz
cmpsl
cmp
pop
or
push
nop
jmp
in
lcall
mov
mov
lahf
fstps
test
loop
adc
ds
mov
adc
int
loop
data16
arpl
aaa
jecxz
push
pusha
aam
mov
sti
jnp
cmp
sbb
push
add
and
jl
call
cltd
arpl
and
cmp
movsb
loopne
xchg
or
cmp
loop
or
ror
jmp
cmp
and
mov
mov
push
jecxz
adc
mov
jl
fsubs
push
out
pop
test
pop
loope
push
pushf
call
dec
mov
jb
test
sub
inc
cli
xor
movsb
test
lcall
mov
xor
jmp
mov
mov
out
lock
repz
pop
sub
inc
jecxz
add
xor
test
pop
fwait
add
pop
loop
addr16
stos
mov
nop
rorl
cmp
and
xor
mov
mov
out
shl
lock
fisttps
cmpsl
sahf
imul
fistpl
test
das
xor
jle
mov
or
ljmp
push
add
pushl
jno
cltd
xor
add
mov
pushl
mov
jae
mov
test
xchg
jecxz
mov
xchg
fisttpll
popf
ret
mov
pop
jmp
adc
stos
xlat
add
mov
cmpb
test
sti
lods
add
xor
sub
movsb
dec
add
mov
leave
mov
fisubrs
sbb
add
shrb
in
xchg
and
and
pcmpeqd
leave
loop
jmp
mov
xchg
fisubrl
adc
xchg
dec
imul
fs
dec
gs
and
lods
cmp
mov
scas
out
cmpl
test
vrsqrtss
jle
cmpsb
dec
mov
xchg
scas
icebp
jo
xchg
outsb
push
or
jbe
add
or
sub
repz
rorl
ret
fcmovbe
pop
data16
jle
jge
outsl
ja
stc
jmp
pop
or
enter
pop
cmp
ret
dec
ficoml
cwtl
and
or
push
ljmp
xor
enter
into
adc
push
xor
loop
push
test
pushf
or
dec
out
lock
aad
cltd
std
pop
inc
mov
mov
mov
mov
inc
dec
inc
shrl
adc
mov
mov
std
mov
adc
cmpsb
mov
hlt
es
insb
xorb
mov
or
pop
mov
add
clc
pop
pop
inc
jge
es
call
mov
adc
fcoml
lds
or
xchg
loope
mov
int
xchg
fidivrl
mov
sar
push
jns
inc
add
aas
xchg
lcall
adc
inc
fldenv
jmp
pop
xchg
sub
stc
sbb
test
shll
testl
insb
lods
daa
mov
popa
and
mov
sub
lret
sub
mov
fwait
lret
stos
and
push
fnstenv
push
iret
sbb
jno
repnz
sahf
and
xchg
pop
or
mov
sbb
or
or
xchg
sbb
cwtl
clc
xchg
enter
clc
mov
xchg
test
cmp
rorl
push
adc
ret
clc
sub
lcall
inc
scas
rolb
dec
out
cmp
push
mov
lds
sti
or
fwait
cwtl
lods
adc
or
popa
pop
cmp
adc
aam
sbb
sub
xchg
ror
cmp
in
imul
sbb
int
dec
pop
pop
or
adc
ljmp
ds
mov
nop
sub
push
pop
test
pop
enter
sub
test
ret
jne
repnz
jne
lds
push
dec
add
inc
movsl
test
out
lahf
or
mov
xor
test
or
jo
sbb
jecxz
addr16
push
pop
pop
rorb
adc
mov
dec
jl
jns
pop
jb
fcoms
icebp
and
je
test
jb
mov
div
aam
in
push
rcl
jle
pusha
imul
testb
jo
cmp
dec
pop
sti
bound
lea
pop
xchg
jl
pop
ret
and
dec
push
mov
xchg
or
adc
js
inc
jnp
rolb
adc
stos
lret
jmp
call
adc
or
imul
rol
pop
or
mov
push
js
icebp
fcmovne
mov
push
enter
push
jo
cli
repz
jecxz
imul
leave
mov
mov
jp
xor
cmpsb
mov
mov
pop
cmp
ret
jg
inc
sti
jae
les
out
adc
inc
out
ret
loope
dec
test
int
pop
xchg
cmp
pusha
out
movb
lahf
test
mov
imul
pop
adc
stos
in
mov
cli
xor
aad
fucomp
xlat
add
sbb
jne
addl
sbb
dec
push
or
adc
or
add
push
xor
sbb
fmull
cli
mov
push
data16
adcb
adc
jnp
and
iret
push
jg
ja
push
xchg
adc
out
xchg
cmpb
notb
cmp
int
test
nop
ret
push
adcl
pop
bound
mov
iret
push
dec
mov
add
jo
dec
mov
call
mov
test
add
test
hlt
outsb
in
shrb
push
dec
mov
insb
xorl
sti
adc
sbb
push
call
lock
fnstsw
lcall
push
ret
jns
adc
mov
insb
sti
sti
pop
and
push
or
jg
pop
pop
pop
and
inc
arpl
jp
shl
pop
dec
lods
cmp
int3
pop
ret
jge
jo
cld
sub
and
ss
out
or
decb
xor
inc
jb
aam
and
push
cmpsl
or
pop
jb
inc
int3
mov
les
push
daa
stos
rorl
adc
fsub
mov
or
loope
mov
xor
xchg
int3
mov
jl
xorl
daa
js
xor
adc
cmp
movsb
inc
scas
cmpsl
or
cmp
mov
or
fdivrp
out
push
iret
subb
xchg
test
sysret
pop
and
jmp
fdiv
jns
jecxz
lcall
mov
pop
xchg
inc
mov
es
sarb
xor
mov
fisttps
out
sub
frstor
mov
sub
pop
fidivrl
cmp
daa
stc
loop
insb
sbb
js
push
insl
jge
lock
sub
jmp
in
jg
pop
pushf
inc
cmp
jnp
popf
mov
xchg
repnz
add
ficompl
je
push
sti
and
inc
jne
and
cmp
jmp
rcrb
xor
sarl
fwait
shll
lods
je
andb
pop
addr16
out
jae
mov
mov
sub
gs
sbb
leave
pop
fs
inc
stos
xchg
inc
shrb
in
test
mov
mov
add
test
fstpl
xchg
xlat
orb
hlt
pop
movsb
mov
fistps
fld
xchg
movsb
inc
test
sbb
xor
jecxz
cwtl
xor
cmp
gs
sbb
daa
xor
aaa
fwait
pop
dec
xchg
popf
in
mov
dec
sarl
mov
ds
mov
mov
fimull
or
mov
jo
enter
lods
fcmovnb
clc
stc
mov
fsub
inc
andl
xchg
shlb
dec
dec
shll
or
cmp
xchg
in
jno
mov
mov
jns
test
js
repz
notb
outsb
fcom
sbb
xchg
adc
push
xor
xchg
cmp
pusha
xchg
lahf
or
insb
adc
add
dec
or
sbbb
mov
loopne
imulb
pushf
repz
adc
sar
and
lret
cmc
lret
rorb
fwait
addb
clc
add
imul
pop
fnstsw
adc
test
lods
sahf
outsb
sub
inc
mov
addr16
sbbb
push
aam
push
inc
pop
push
xchg
dec
xor
lahf
mov
into
sbb
lahf
sub
test
add
fcmove
push
inc
mov
sbb
sbb
or
outsb
dec
inc
mov
andl
mov
aaa
cmp
repz
or
es
mov
mov
and
mov
int
repz
push
scas
mov
movsl
movb
lock
dec
push
xor
sub
jbe
pop
mov
fistps
mov
popf
inc
dec
sbb
lods
sbb
cwtl
mov
xor
dec
ret
jnp
push
jae
repz
pop
mov
pushf
add
jp
dec
or
xchg
les
push
ret
or
dec
adc
jl
cld
aas
call
arpl
jb
jns
push
mov
mov
mov
pop
jb
aad
or
cmp
shll
jbe
xchg
mov
mov
stc
and
loopne
lret
popa
in
movsl
push
dec
mov
lods
xchg
jecxz
xor
dec
mov
dec
or
leave
mov
div
pop
pop
xchg
sbb
mov
sub
aas
mulb
inc
lock
jmp
jmp
add
sbb
das
sbb
pop
les
adc
insl
or
mov
lods
jae
inc
jl
pop
and
cmp
outsl
xchg
mov
mov
pop
add
push
jo
scas
sbb
adc
xor
inc
lahf
stc
shrb
sub
and
dec
sub
mov
cs
scas
jae
add
sbb
sub
sbbb
sahf
jecxz
sub
je
andb
or
imul
lds
ss
mov
lcall
jp
cli
rcll
sbb
in
xor
sub
dec
out
add
fcomp
jo
mov
imul
ficomps
scas
dec
outsl
popa
test
inc
push
bound
pop
pop
outsb
jp
shlb
pop
xor
cmp
xchg
cmp
push
sbb
mov
loopne
mov
daa
je
lret
in
cld
pusha
dec
push
inc
mov
dec
or
and
fwait
je
and
sbb
ljmp
leave
cmpl
or
push
lods
cltd
inc
mov
xlat
inc
scas
add
adc
in
imul
push
sbb
sub
mov
jae
push
movsl
sub
cmp
call
cmpsb
xor
lods
mov
dec
fdivrl
lds
sub
lret
pop
scas
je
cmp
clc
imul
mov
shlb
lock
mov
push
push
mov
rcr
mov
or
mov
mov
arpl
and
cmp
nop
and
ss
sub
test
ret
andb
in
cmc
call
sbb
inc
iret
loopne
loope
mov
in
mov
lcall
dec
and
hlt
hlt
js
mov
push
inc
pop
cmp
imul
pop
paddw
cmp
push
dec
sub
pusha
dec
repnz
mov
inc
and
test
fldcw
adc
jp
xchg
fildll
aaa
cmp
push
out
xchg
ret
out
fimuls
xchg
lret
shll
adc
sar
loop
hlt
sub
out
dec
or
and
xor
aad
in
xlat
les
xchg
xchg
xchg
pushf
fs
bswap
dec
scas
repnz
pushf
mov
outsl
push
xor
pop
push
test
add
mov
mov
out
xor
pop
ja
dec
xchg
mov
inc
jmp
or
pop
shlb
shr
shlb
push
ficomps
cmp
mov
repnz
adc
jno
rcll
dec
cmpsl
xor
push
adc
insl
pop
pop
sub
mov
stos
lea
and
mov
xor
push
adc
lds
mov
pop
or
repnz
sbb
fld
rcrl
cmp
mov
push
push
cmp
lea
dec
iret
add
and
lods
xchg
mov
dec
je
jnp
rcrb
or
movsb
pop
cmp
cli
and
sbb
mov
nop
mov
sub
pop
xor
jl
sbb
sbb
add
jecxz
data16
dec
push
scas
pop
lret
loopne
cli
mov
andb
cwtl
dec
mov
das
ret
repz
adc
dec
sub
pushf
pop
dec
add
sbb
mov
push
dec
les
and
adc
fadds
cli
jp
mov
mov
cmp
inc
mov
push
dec
ret
add
nop
adc
sahf
mov
or
add
xchg
stos
cwtl
inc
mov
dec
inc
mov
flds
push
mov
loopne
clc
fnstenv
sub
inc
test
mov
mov
mov
push
cs
xlat
jne
data16
rcrl
sub
pop
push
jp
jb
mov
mov
iret
aam
sbb
cwtl
xchg
test
mov
dec
pushl
jno
rcl
jmp
daa
jp
add
push
sahf
sbb
sub
sbbl
mov
out
aad
sbb
mov
nop
sbb
xchg
out
mov
dec
mov
dec
mov
dec
cmp
repz
xor
test
testb
cmpl
dec
aaa
es
push
jl
mov
mov
cmp
xchg
cmp
push
inc
sub
sub
xorb
or
cmp
out
sbb
int3
sahf
movsb
xor
sbb
sahf
mov
std
mov
adc
enter
rcr
insb
push
xor
jnp
jle
or
data16
loopne
sub
mov
adc
push
imul
jbe
and
or
ljmp
sbb
ljmp
test
fcoms
jmp
test
adc
aaa
cltd
rcrl
addl
add
jno
loopne
sbb
bound
inc
shll
push
mov
inc
sahf
jecxz
jle
push
lds
lret
lods
fldenv
test
ja
sbb
pop
popa
fsubs
jge
xchg
insb
shlb
aam
ficoms
push
test
jno
pop
add
inc
cmp
dec
or
js
mov
dec
cmc
cmp
push
fidivl
xchg
xchg
mov
sti
add
jmp
popa
test
mov
or
mov
or
jmp
mov
cmpsb
addr16
mov
sbb
mov
mov
add
push
stos
sets
pop
sbb
xor
ret
jnp
dec
enter
jecxz
fstpt
aad
pop
xchg
ljmp
cmp
cmp
popf
ja
mov
das
jmp
xor
les
cli
push
lret
fwait
lock
cmp
outsl
sub
xchg
rolb
push
inc
xchg
xor
mov
jno
inc
mov
divb
sti
insl
or
and
inc
add
adc
mov
sti
sarl
insl
int3
push
icebp
sahf
xchg
pusha
ja
sub
js
mov
and
fstl
pop
jecxz
movsl
sti
int
push
and
daa
pusha
cmc
or
shrl
sahf
cmp
jae
pop
inc
jne
ret
xor
cmp
push
test
add
cs
mov
aad
mov
xchg
or
test
adc
or
lcall
jb
lods
das
adc
push
and
push
sahf
inc
repnz
push
jg
outsb
loop
dec
push
pop
cmpsl
mov
mov
sbb
xor
aad
lods
push
cmpsb
jp
mov
pop
jbe
stc
adc
aaa
mov
fwait
mov
loope
cmp
gs
pop
fistl
or
push
jmp
enter
push
mov
xchg
lods
jecxz
push
jo
xor
sbb
xchg
and
cmp
mov
xchg
fsubrl
pushf
push
bound
jl
loop
mov
cmpsb
repnz
aad
insl
pop
divb
mov
repz
sub
dec
mov
jmp
sbb
adc
cltd
inc
leave
mov
inc
jge
xor
ja
test
xor
rorl
push
push
es
pop
shl
xchg
sbb
xor
mov
out
orl
ss
pop
cmp
insb
daa
mov
push
divb
jae
scas
jno
pusha
inc
imul
cmp
pop
aaa
adc
jmp
push
jne
dec
dec
ffreep
les
movsb
jb
xchg
rol
cld
and
fildl
mov
aad
pop
ss
lds
sbb
ss
sbb
jp
enter
pop
mov
jmp
push
add
inc
cmpl
rcr
pop
push
pop
fwait
jg
stos
subl
mov
pop
mov
fstpl
aas
sbb
iret
pushf
lahf
cs
loop
imul
pop
cltd
cmpsl
push
xchg
rolb
sbb
in
fcoms
aaa
push
dec
ss
leave
ds
sahf
icebp
test
das
jo
sub
and
inc
mov
inc
sbb
jae
shlb
and
loope
sbb
cmp
inc
inc
cmpsl
ja
sahf
pop
leave
add
cmp
dec
xchg
outsl
shrl
and
sahf
int
inc
mov
push
push
fs
sub
jno
movsl
pop
mul
xchg
rcll
dec
xchg
cmpsb
arpl
sub
das
lret
scas
mov
rcrb
push
or
inc
jo
sbb
pop
fisttps
aam
jg
jbe
rcrl
enter
insb
insb
and
lret
out
mov
outsl
or
mov
sbb
fcomps
xor
stc
or
int
mov
add
loopne
push
mov
cmp
sbb
and
pop
push
push
jg
jmp
xor
mov
lcall
cmp
adc
movsb
xor
pop
fidivrs
mov
and
loop
pop
add
adc
xchg
mov
and
sub
mov
lret
bound
cmpsl
jge
dec
mov
in
outsl
and
inc
jns
je
gs
xor
test
sahf
adc
pop
cmpsl
sub
sub
jo
xor
aas
jae
or
pop
pop
ljmp
mov
pusha
fmuls
pop
xchg
push
ja
rclb
mov
dec
enter
push
mov
jecxz
pop
test
sub
adc
mov
mov
repnz
lcall
pop
shrb
dec
mov
cmpsl
mov
inc
mul
cwtl
sub
fcmovbe
mov
xchg
pop
arpl
inc
int
hlt
nop
jae
lcall
inc
add
xchg
sbb
cmp
inc
pop
sbb
outsb
into
jp
imul
insb
test
dec
data16
fcom
push
lods
les
ja
mov
jns
mov
aam
sti
jb
mov
hlt
nop
cli
cmp
loop
aad
push
test
adc
sahf
mov
mov
ds
cmp
lods
stc
scas
mov
xor
lahf
add
mov
xchg
sub
cmpb
inc
imul
fs
ss
sub
out
cmp
stos
cmp
jle
outsl
in
adc
lds
mov
xchg
and
xor
mov
mov
ds
mov
xchg
cmc
cmp
cmpsb
movsl
inc
test
fstp
sbb
pop
lea
push
adc
in
xchg
mov
cli
bswap
out
loopne
xor
push
mov
lcall
leave
pop
ja
mov
in
or
test
lods
jmp
cmp
sub
mov
add
rclb
enter
fistl
and
fdivrs
cmpsl
int3
fisttpl
mov
jbe
and
inc
sbb
sbb
dec
lds
lret
into
test
inc
in
scas
and
mov
sbb
stos
outsl
gs
bound
push
cmp
divl
add
mov
scas
outsb
movswl
xchg
inc
rcrb
mov
fwait
dec
test
insl
ljmp
shl
pop
adc
test
mov
rcrl
popf
mov
sbb
add
mov
sub
push
mov
out
das
lock
outsl
into
xlat
rcll
inc
cmpb
jecxz
mov
int3
out
popf
jmp
int
in
mov
xor
sbb
sub
xchg
rcrl
add
adc
sbb
fsubs
and
lea
mov
outsb
jecxz
cmp
out
xlat
push
mov
clc
jae
sbb
mov
cmp
imul
dec
outsl
outsl
mov
lds
jbe
insl
in
imul
inc
jp
jmp
fdivp
nop
rorb
test
fsubrl
jg
rcrl
dec
fidivrs
pop
in
mov
sub
mov
into
mov
mov
mov
mov
notb
pop
jge,pt
mov
xor
repz
gs
add
xchg
pop
aaa
jno
push
inc
repz
sbb
out
pop
push
in
add
mov
testb
out
inc
pop
outsb
lds
jne
dec
jg
xchg
test
out
adc
mov
jmp
outsl
or
pop
mov
xor
pop
mov
mov
shrl
call
jp
shrl
outsb
rorl
mov
xor
jge
and
mov
out
pop
mov
rol
xchg
out
movsl
fcoml
aas
jmp
movsl
push
push
addr16
sub
scas
dec
pop
sbb
inc
push
mov
jge
sahf
xorl
dec
cmpsl
push
aam
pop
push
push
insl
cmp
xor
js
sahf
movsl
jecxz
into
popf
jle
push
xor
push
out
dec
xchg
cltd
je
push
out
pop
dec
popa
cwtl
lods
xchg
or
mull
xor
xor
frstor
outsl
mov
popf
push
ret
loop
jp
cmp
icebp
out
sbb
sbb
push
enter
xchg
pop
mov
in
loope
sub
sbb
dec
cmp
lods
stos
pop
xor
pop
loop
mov
popf
cmc
popf
mov
inc
jmp
inc
push
push
rcrl
lcall
mov
cmpsl
adc
pop
or
push
cmp
xchg
aaa
sub
and
rcrb
and
sub
scas
mov
popf
or
pop
jnp
stos
mov
add
das
push
dec
push
cmp
and
lahf
inc
xchg
add
push
in
divl
test
imul
sbb
sbb
loope
js
lahf
mov
inc
lret
lret
ljmp
cmp
sub
outsl
dec
inc
inc
and
test
push
into
movsl
fsts
xchg
das
dec
adc
data16
dec
or
dec
out
aas
and
mov
add
dec
out
fwait
dec
daa
or
xor
pushf
jae
lret
xchg
adc
stc
shrl
add
js
adc
push
lret
and
xchg
and
lcall
pop
lea
mov
gs
pushf
xchg
lret
popa
cld
in
das
cmp
mov
pop
push
shll
pop
lret
test
daa
mov
cmp
mov
pop
sub
cmc
into
mov
cmpsb
mov
movsb
and
jg
dec
add
mov
xorl
adc
lahf
int
sub
push
ja
sub
std
and
sub
loope
lds
fidivrs
or
or
enter
xchg
in
sbb
cli
int
xchg
test
fdivrs
dec
mov
clc
dec
orb
fldl
cli
ret
add
push
pop
sub
inc
sub
ja
scas
jae
call
cs
rol
call
std
fucom
leave
jmp
adc
push
cmp
mov
dec
aam
sub
sahf
out
and
aas
lret
inc
out
fstps
or
fdivrl
jmp
divb
cmp
push
or
rorb
lcall
int
mov
test
fwait
sbb
aas
cmp
mov
loop
lods
fwait
out
cmc
lret
jg
roll
adc
push
push
aaa
pop
xchg
xor
push
mov
pop
mov
jnp
mov
insb
sti
dec
popf
xchg
cmpb
aaa
lods
mov
mov
orb
inc
jb
insl
std
mov
add
das
leave
cwtl
testb
data16
cwtl
insb
mov
call
mov
sbb
or
and
das
push
enter
dec
mov
out
ss
xchg
jecxz
popa
outsb
and
cmpsl
mov
add
mov
ja
add
jp
sbb
ljmp
add
mov
sbb
outsl
xchg
sarl
std
sahf
xor
mov
fisubl
testb
ja
jns
pop
jp
jg
lods
push
pop
lds
jl
or
clc
and
xor
sub
and
and
jle
jp
shl
shll
aas
push
fdivs
mov
rol
sti
push
jge
jecxz
pushf
or
cmp
rolb
mov
inc
dec
sarl
xchg
mov
jge
mov
pusha
xorb
imul
out
testl
lods
cmp
lods
repnz
adc
cmpsb
dec
hlt
push
inc
mov
lret
and
int3
and
push
sbbl
enter
push
jecxz
icebp
pop
mov
cltd
icebp
jnp
xor
push
cmc
ret
xchg
lods
pushf
mov
add
xlat
subl
loop
stos
fdivrl
cmp
dec
xor
adc
pop
add
roll
add
cs
adc
push
inc
das
mov
fstl
div
adc
fwait
insb
push
rcrb
incb
aas
mov
pop
and
sbb
mov
fwait
cs
adc
pop
and
xchg
jle
leave
mov
pop
pop
mov
xchg
xchg
push
sub
adc
push
jnp
add
cmp
imul
popa
imul
lret
add
adc
mov
fidivrs
cmp
xor
push
push
test
mov
xor
jp
sub
sub
xor
arpl
xchg
mov
xor
pop
dec
cmp
sti
dec
mov
pop
jp
pop
ja
mov
adc
loop
in
jae
add
rorb
mov
sahf
fcmove
imul
jmp
push
aad
pushl
jmp
pop
mov
or
pop
and
pop
stos
sub
push
pushf
adc
xchg
in
ret
cmp
inc
test
push
jb
in
cmp
andl
push
test
xchg
adc
adc
out
sahf
loope
xchg
loopne
and
mov
or
fldenv
and
aad
mov
fwait
sbb
stos
push
mov
fwait
mov
jmp
mov
push
push
fdivp
rcrb
loope
insb
insl
sbb
int
ds
shrl
mov
inc
fisubrs
sub
ret
mov
lret
inc
in
cld
ja
and
jb
daa
jl
mov
mov
add
out
add
out
dec
rcrl
iret
push
insb
jge
leave
push
addl
aam
hlt
push
popf
cmp
int
in
cmp
lods
adc
dec
mov
mov
xchg
fwait
rcr
icebp
aaa
out
out
inc
mov
push
mov
movsl
pop
mov
popf
mov
jns
jle
test
loope
sub
testb
shrb
push
and
ljmp
push
fstpl
xchg
jns
and
jl
enter
mov
xchg
pushf
inc
push
cwtl
test
push
cwtl
mov
rcl
shll
insl
pop
push
mov
mov
call
mov
sbb
es
mov
repnz
cmp
jecxz
jg,pt
cwtl
dec
mov
inc
jecxz
jo
inc
mov
fstps
pop
idivl
fndisi(8087
aas
xchg
jg
push
sub
ret
jns
dec
bnd
xor
mov
les
jl
insl
inc
or
push
pop
xbegin
pop
in
movsl
adc
out
sahf
pop
dec
movsb
lret
outsb
lret
imul
fdivrs
imul
jmp
sbb
xlat
adc
hlt
js
es
incl
xchg
xchg
insl
push
adc
xchg
sbb
pop
inc
jp
push
in
sbb
daa
addl
cmp
stos
mov
cmpsb
mov
mov
pusha
push
test
dec
inc
xchg
adc
or
test
xor
aad
and
mov
insb
rclb
gs
or
dec
inc
mov
xchg
notb
mov
mov
jecxz
dec
pop
sub
and
push
addr16
out
adc
out
and
inc
loopne
scas
adc
inc
push
xor
adc
push
mov
cmp
adc
jb
push
xchg
mov
nop
popf
jb
xchg
arpl
push
fs
sti
into
out
clc
cmp
inc
inc
arpl
lret
sub
rcll
mov
pop
insb
mov
cltd
mov
sbb
jle
pop
fstpl
pop
mov
or
pop
pop
xchg
movsb
jno
xchg
mov
add
fldcw
dec
pop
mov
cmp
mov
pop
push
mov
es
sub
fstpt
movsb
cmp
repz
dec
rolb
mov
cmpsl
lret
cmc
jns
xchg
jno
jo
stc
fs
xlat
sbb
sbb
mov
roll
out
add
xchg
fidivs
jnp
arpl
push
insl
mov
out
dec
xchg
insb
in
jmp
sub
sub
inc
push
lock
xlat
data16
pop
mov
sbb
push
jb
push
in
inc
fmull
cmp
sub
rcrl
aas
add
out
pop
jg
sbb
mov
dec
dec
and
push
rcl
xor
jno
mov
pop
and
mov
push
and
sbb
cmp
stos
jecxz
aas
rcll
test
push
mov
ljmp
sbb
clc
add
xlat
bound
movq
popa
xor
lock
push
out
sti
pop
pop
aas
aas
mov
cli
ret
rcr
pushl
mov
add
add
js
dec
stos
sarl
sbb
negb
and
in
es
repz
adc
xchg
mov
or
xchg
out
popf
sbb
sub
inc
xchg
xor
fs
pop
aam
pushf
into
add
adc
cmpsl
pop
insb
and
dec
xor
sub
jo
jbe
add
mov
push
add
out
mov
scas
fwait
lret
test
rorb
ljmp
mov
popa
sub
push
jp
shl
gs
push
sbb
cli
fisttpll
pop
xorb
loopne
xor
lods
es
cmp
mov
adc
out
shll
mov
shrl
sbb
mov
mov
xor
adc
popl
sub
fucomip
sub
aaa
lods
xorl
mov
pop
sbb
test
hlt
inc
imul
fadds
push
or
loopne
incb
dec
aaa
pop
adc
sub
inc
out
dec
mov
pop
popf
stos
out
xchg
int3
push
out
inc
mov
or
mov
mov
xchg
xchg
push
daa
lret
pop
js
jbe
xlat
sub
mov
jmp
lcall
pop
pusha
int3
adc
mov
int
ljmp
cmpsb
pop
jle
lahf
xor
aam
leave
mov
xchg
push
xchg
ret
mov
popf
cmp
incb
rorb
add
and
pop
dec
inc
mov
pushf
out
into
cli
scas
cld
jns
js
adc
loopne,pt
jmp
push
dec
cmp
incl
cmp
les
das
stc
and
and
pop
jmp
xor
in
rcl
mov
jl
push
pop
mov
cwtl
or
idivb
mov
das
pop
pusha
add
add
fmull
ret
data16
push
mov
f2xm1
mov
lcall
fwait
or
push
and
aad
inc
mov
mov
mov
sub
js
pop
add
gs
cmp
jmp
sub
nop
sub
adc
cltd
add
mov
inc
in
push
inc
in
push
cmpsl
dec
push
push
test
lahf
popf
into
mov
ficoml
fwait
xchg
xchg
es
adc
sahf
jl
adc
bound
mov
jne
or
jbe
or
jbe
adc
sub
push
sub
cmp
mov
mov
sahf
add
mov
pop
pop
xorl
shrb
or
sbb
rorb
inc
mov
mov
shll
jmp
xchg
in
jnp
clc
jno
jbe
out
hlt
lcall
sbb
cli
dec
inc
mov
test
aad
sbb
fdivr
pop
cmp
adc
pop
pop
jmp
sbb
xchg
cwtl
xchg
sahf
xchg
push
out
and
push
sub
mov
xchg
cmpsl
jmp
ficoms
roll
fisttpl
repz
add
xchg
lcall
icebp
test
push
ljmp
sub
xchg
dec
jb
jbe
cmc
dec
div
stc
ret
push
push
scas
push
mov
inc
and
or
pop
jmp
sub
lds
xchg
or
sbb
movsb
adc
adc
arpl
sub
mov
in
data16
cmp
aaa
mov
stos
sbb
mov
inc
sti
cltd
iret
ror
nop
ljmp
inc
leave
mov
mov
fsts
shlb
xchg
adc
inc
sbb
or
shlb
in
sbb
lds
sbb
repz
sbb
cmpsl
ljmp
jne
jg
xor
je
pusha
ret
dec
outsb
cmpsb
into
rolb
js
xchg
les
je
addb
mov
push
xor
and
sbb
push
shlb
fidivrl
pop
and
xor
rcll
call
dec
jl
and
xchg
xchg
fisubs
jp
imul
jnp
mov
xchg
in
or
mov
mov
inc
outsb
js
xor
push
mov
or
mov
mov
fwait
xor
out
pop
and
sub
mov
aaa
pop
leave
repnz
cld
and
adc
adc
jge
in
cmpl
daa
jmp
sub
int
xor
pop
mov
jae
scas
or
inc
sarb
mov
and
cmpsl
pushl
jp
sti
lods
fadd
cmp
mov
add
lods
rcll
enter
shll
test
dec
adc
cmc
loop
hlt
sub
std
adc
or
jno
clc
push
cltd
xchg
out
jb
mov
das
ss
adc
push
mov
or
xchg
pop
xor
enter
icebp
call
ror
mov
add
add
adc
jbe
sub
pop
push
mov
imul
test
or
pop
mov
stos
repz
insb
adc
in
fiadds
rolb
cs
ja
pushf
shlb
int3
loopne
jg
int
fwait
inc
cmp
lods
in
jno
and
sbb
jp
cmp
mov
es
scas
fcmovnu
mov
nop
rcrl
jg
mov
add
xchg
mov
movsl
and
jnp
leave
sub
push
aas
add
cmp
cmpsl
dec
sub
fsts
loopne,pt
cmp
add
fisubs
jge
xchg
inc
adc
xor
xchg
push
sbb
addr16
fdiv
ret
repnz
lock
fiadds
inc
notb
pop
test
fnstcw
aad
xchg
cwtl
push
xchg
dec
cltd
ret
js
jecxz
push
push
in
mov
fstl
and
and
mov
sbb
mov
sub
xchg
cli
and
mov
mov
cmpsb
jge
xchg
xorb
mov
shll
xchg
in
jmp
sarl
mov
mov
adc
rcrb
xor
adc
sub
inc
adc
test
or
push
mov
andb
xor
inc
stos
nop
in
int
mov
stos
fisttps
mov
mov
rcr
add
pop
pop
stc
or
subb
dec
cmc
push
fisubrl
xor
ret
jecxz
and
fadds
mov
pop
pop
mov
xchg
sub
adc
mov
and
adc
cld
in
dec
mov
movsl
push
inc
add
xchg
push
mov
in
mov
shrl
jne
sub
imul
or
pop
sbb
in
icebp
push
jns
movsl
mov
push
frstor
jcxz
mov
int3
shll
cmp
mov
mov
xchg
mov
fstpt
xchg
push
mov
jb
fimuls
stc
sbb
push
cmpb
cmpsb
pop
mov
jo
inc
mov
cmp
adc
mov
cwtl
xchg
icebp
ljmp
push
mov
in
lods
lock
cmp
ja
adc
inc
dec
in
dec
add
in
leave
xor
popa
dec
jg
dec
pop
cwtl
cmpl
in
adc
in
gs
mov
mov
cld
jl
cmp
mov
jae
push
dec
std
testb
ficoml
pop
out
insl
in
scas
aas
mov
shll
loope
xor
cmovb
mov
xchg
shrl
lret
and
xchg
pop
jmp
iret
cli
and
cwtl
lret
sub
outsb
inc
scas
loop
lret
and
fwait
or
push
mov
stos
in
fstp
pop
inc
xchg
daa
adc
add
dec
cld
jp
mov
or
lret
jo
sti
andl
jge
sbb
movsl
scas
enter
mov
ret
ret
or
call
add
movsb
push
add
fwait
dec
xchg
mov
sub
xchg
fidivs
push
into
mov
push
sbb
mov
sub
mov
cmp
mulb
jbe
dec
sahf
or
adc
nop
cmpsl
negl
and
test
add
jbe
mov
cmove
sub
inc
mov
dec
cmpsb
push
inc
pop
and
insb
bound
dec
gs
xchg
pop
and
sbb
popf
push
lock
mov
icebp
dec
push
inc
cmp
and
stos
shlb
les
pop
dec
mov
rcr
mov
stos
sbb
mov
jg
std
jge
lret
xchg
inc
mov
rolb
xor
call
jmp
add
ret
xchg
or
dec
lods
dec
xchg
stos
popf
mov
dec
cltd
lret
js
push
dec
mov
xor
push
std
sbb
stc
dec
push
lahf
int
push
idivb
std
cmp
push
fs
scas
pop
xchg
pop
and
xchg
pop
push
int3
lock
push
ljmp
push
inc
aam
mov
xor
mov
ficoml
adc
cmp
cld
jle
sub
xor
addr16
imul
jg
inc
inc
repnz
mov
push
xor
cwtl
cmp
dec
fldcw
dec
cmp
inc
pop
push
xchg
sbb
adc
cmp
xor
sbb
aaa
push
xchg
popf
push
js
test
pushf
xchg
xchg
aad
mov
cs
dec
mov
and
push
cmpsl
xchg
mov
mov
ds
xor
cmp
xchg
sub
dec
jnp
jb
push
dec
out
pop
movsb
das
jl
sub
add
dec
push
xor
inc
mov
or
add
std
push
mov
push
clc
cli
inc
sbb
push
xor
pop
rcrl
ljmp
fcmovnbe
fdivrp
mov
cmp
mov
mov
imul
popf
push
popa
jle
and
mov
dec
jg
inc
lods
lret
jbe
xchg
test
mov
jo
mov
test
and
cwtl
mov
aas
mov
arpl
jecxz
xchg
test
jae
fnstenv
jge
adc
add
stos
cmp
dec
xchg
mov
in
xchg
decl
dec
nop
mov
lds
enter
xchg
outsb
sbb
lret
or
mov
outsl
dec
mov
jno
push
jge
pop
clc
sub
aam
adc
sub
jle
arpl
pop
lret
scas
adc
out
enter
and
test
jle
mov
pop
hlt
shrl
scas
fs
shll
cmpl
cli
enter
out
or
inc
fcomps
jmp
outsl
dec
cltd
loop
outsl
add
cli
je
es
jb
mov
in
rorl
aam
fcmove
mov
jo
lds
dec
cmp
mov
lock
mov
adc
add
sub
out
adc
mov
add
xchg
sub
mov
push
fisubrl
out
dec
pop
mov
imul
pop
repnz
xchg
mov
adc
dec
fstpt
cld
jb
dec
jl
test
xchg
inc
sub
mov
mov
pop
and
leave
jg
lret
xchg
popf
mov
jbe
push
les
push
add
mov
stos
push
hlt
and
pop
mov
xchg
and
xchg
shr
sub
call
in
cmp
je
stos
out
out
fmull
fistpll
xchg
aaa
ret
lret
fs
into
sti
fisttpl
or
cld
fists
test
lock
cwtl
arpl
push
pop
icebp
or
and
gs
enter
scas
cmpsb
cmp
sub
fadds
ds
xlat
push
inc
addr16
pop
xchg
fldl
and
dec
movl
in
scas
sbb
mov
js
movsl
subw
sbb
pushl
push
int3
pop
push
pop
mov
mov
or
mov
push
and
pop
mov
dec
xchg
stc
gs
cmpsb
loope
insb
mov
sub
pop
pop
add
mov
aad
cmp
jg
ret
outsb
or
jb
push
cld
cwtl
dec
push
xor
inc
mov
lods
inc
push
jb
sub
fneni(8087
stc
out
push
imul
mov
dec
imul
adc
enter
out
mov
fprem
aaa
cmp
mov
push
int
aam
popf
mov
mov
divps
pop
or
push
cwtl
dec
adc
cmp
aad
icebp
push
imul
mov
out
jge
dec
add
and
stos
cld
adc
test
adc
or
lret
les
out
popa
or
dec
iret
es
imul
into
or
xor
pop
subb
jp
mov
dec
xor
jmp
and
jb
stos
inc
repz
adc
jb
xchg
mov
movsl
lahf
imul
fs
fdivl
loope
mov
cmp
push
inc
test
ljmp
test
pop
jo
cbtw
scas
movsb
dec
mov
lods
test
out
cwtl
mov
or
or
sarb
sbb
fadds
push
mov
and
add
rorb
push
mov
aaa
sub
and
push
arpl
jl
xor
pop
add
js
inc
push
mov
dec
mov
pop
dec
mov
mov
sub
mov
mov
inc
xchg
ret
lock
pop
in
jno
cmp
es
movsl
stc
dec
mov
push
lods
ljmp
mov
pushf
cs
cltd
sti
ds
test
mov
cmpsb
mov
popf
rorl
lods
push
mov
xchg
ret
hlt
popf
sub
ja
xor
mov
iret
cmpsl
jne
inc
mov
sub
sub
push
andb
sbb
cmp
mov
insb
sbb
jge
or
je
sbb
cmc
aas
sub
iret
push
lret
xor
mov
fcomi
adc
shrb
mov
xor
mov
sbb
or
jbe
mov
dec
push
jecxz
int3
imul
sub
push
shll
mov
loope
push
xchg
push
aas
push
dec
pusha
cmc
imul
ds
leave
push
add
jbe
dec
inc
xchg
ljmp
xor
adc
sbb
addr16
mov
mov
aas
and
lret
and
out
in
xchg
mov
out
pop
movsb
inc
jnp
fisttpl
insl
inc
iret
jno
mov
scas
lds
jmp
notb
jmp
movsl
and
nop
cmp
into
lret
xchg
dec
fisubs
ljmp
dec
popa
lock
mov
and
int
mov
push
push
adc
dec
shlb
inc
jnp
fdivrl
xchg
pop
or
adc
stos
cmc
cmpl
std
cmpsl
sbb
int
movsl
popf
lret
push
frstor
xorl
out
jbe
adc
pusha
jne
loope
mov
orb
outsl
cli
mov
adc
lds
mov
inc
mov
imul
pop
pcmpeqw
std
out
adc
jnp
loop
dec
fwait
mov
leave
xor
mull
or
mov
mov
es
imul
adc
mul
mov
lods
push
insb
mov
imul
sbb
iret
sti
stos
mov
or
sub
mov
jp
ja
sub
mov
lock
add
push
mov
jne
outsl
jle
dec
lea
push
insb
lcall
cmp
ret
insb
pop
dec
rol
xchg
cltd
push
jp
xor
xchg
push
jne
pop
sub
cmp
xchg
xchg
sub
add
push
and
push
dec
push
jns
add
cmp
mov
push
ficoml
dec
andb
jno
adc
pop
stos
pop
mov
rcll
cwtl
lea
jae
xor
fsubrl
punpcklbw
sub
loop
pop
add
sub
add
add
jo
push
or
sub
jl
repnz
mov
pop
int3
xrelease
dec
cld
insl
sbb
xor
xchg
push
jl
ss
stos
pop
mov
ret
push
jnp
add
jmp
inc
test
ljmp
inc
decl
popa
pop
xchg
inc
push
inc
loope
add
sahf
in
rcrl
fistpll
lea
push
push
and
or
inc
ds
xor
mov
pushf
addr16
and
repz
pop
fistps
jmp
nop
mov
jmp
int
xchg
into
jae
shlb
mov
and
cmp
jno
push
sbb
inc
sbb
cmpsb
fcompl
jae
cld
mov
fmuls
sub
jno
pusha
cmp
mov
mov
pop
cmp
cmp
fsubrs
bound
cmp
daa
add
in
xchg
sub
jl
in
add
leave
out
adc
sbb
push
andb
sbb
clc
imul
lods
fadd
jg
cwtl
aas
or
das
cld
mov
cmp
mov
addr16
mov
jae,pt
push
xchg
dec
cltd
or
sub
sub
push
bswap
idivl
outsl
sbb
jg
clc
aam
sbb
sbb
call
subl
fidivs
push
pop
jge
ss
sbb
adc
mov
imul
xor
sub
mov
faddl
xchg
xchg
push
adcl
pop
mov
out
sbb
adc
jb
pop
dec
or
daa
cmpsb
pop
loop
and
lret
hlt
push
push
or
js
ljmp
pop
pop
outsb
mul
push
fcmovnb
inc
sub
sub
movsb
stc
sbb
adc
in
jle
sbb
js
stc
hlt
mov
jle
jae
shll
adc
mov
xor
inc
in
inc
outsb
adcl
xor
rclb
leave
or
push
lret
inc
sub
inc
push
imul
pop
xchg
xlat
cmp
iret
loopne
mov
inc
jno
sti
roll
inc
mov
cmp
push
jne
scas
xor
xor
mov
ljmp
xchg
or
fwait
xlat
adc
pushf
insl
out
sub
popf
lret
mov
adc
dec
bound
js
js
xor
sbb
xchg
loop
and
fdivrl
mov
mov
add
inc
jmp
jno
add
mov
jl
sbb
fisubs
push
mov
leave
or
lret
jbe
stos
sbb
imul
fdivl
push
mov
sbb
std
pushf
test
cld
int3
sbb
test
lret
xor
xlat
mov
mov
std
pop
sti
sbb
mov
adc
lret
xchg
dec
cmp
dec
adc
dec
dec
pushf
std
test
arpl
in
xchg
xchg
stos
je
clc
idivb
pop
pop
mov
ffreep
xor
cmp
push
sar
gs
jle
js
pop
loopne
stos
push
xchg
xchg
in
jae
mov
mov
rcr
and
add
gs
cs
mov
popa
stc
xor
push
jle
xchg
rol
mov
es
jb
sbb
cli
mov
or
mov
jp
adc
sbb
sub
outsb
jmp
movsl
sub
mov
out
enter
stos
lret
std
int3
out
xor
daa
repz
cli
fsub
xchg
jnp
xchg
xchg
sub
dec
mov
adc
sub
sub
arpl
mov
xor
adc
sub
mov
mov
mov
es
neg
cwtl
jns
push
aam
lds
stc
and
mov
dec
cwtl
subb
imul
push
cmp
adc
lret
popf
or
sbb
je
push
test
xlat
mov
and
adc
popl
xchg
mov
js
push
fstps
adc
lret
sbb
shlb
adc
insb
ss
jmp
mov
or
add
sar
aad
repz
mov
lahf
insl
mov
add
jne
aas
and
jae
lock
xor
shlb
repz
sbb
sub
insb
adc
mov
dec
cwtl
clc
or
xchg
jmp
mov
rclb
mov
pushw
mov
mov
xor
outsb
mov
dec
pop
lahf
push
mov
daa
add
pop
xchg
add
incb
or
lods
sub
push
or
xchg
call
repz
std
or
xchg
adc
and
sbb
clc
test
inc
xor
sbb
adc
inc
inc
cmp
jnp
xchg
push
cs
pushl
pop
lea
repnz
jge
in
arpl
xor
cli
mov
xchg
jne
aaa
lods
std
ret
movsb
add
in
sbb
push
push
dec
in
and
cmc
mov
int
movsb
subl
pop
popa
test
sbb
rcrb
add
sub
loope
nop
sub
outsl
rcl
pop
mov
jl
xchg
pop
inc
rorb
mov
xor
cmp
and
movsl
adc
aam
cmp
scas
fistpll
mov
and
or
cwtl
xor
mov
mov
fidivrl
xor
or
fisubl
dec
mov
mov
lret
dec
decb
arpl
icebp
cmp
insl
sub
bound
add
adc
ljmp
or
repnz
sub
jbe
xchg
or
sub
hlt
scas
jno
cwtl
cmpsb
and
jge
iret
mov
mov
pop
mov
dec
iret
mov
daa
rclb
sarl
inc
iret
jae
inc
sub
adc
lret
les
sbb
mov
and
add
lea
and
dec
loop
jb
push
and
mov
les
or
outsl
sub
iret
mov
jge
jle
lea
aas
testl
cmpsl
rcl
xor
add
mov
pop
ss
mov
sub
pop
cwtl
mov
pop
lcall
outsb
cmp
jge
xor
outsl
xor
cltd
push
icebp
adc
out
test
inc
pop
push
leave
xchg
pop
ret
xchg
loop
xchg
aaa
xor
ret
sti
cmpsl
sbb
mov
sbb
mov
out
jb
xor
mov
mull
push
mov
jns
ljmp
and
dec
xorb
cmp
adc
js
popl
std
ljmp
xor
cmpb
adc
mov
mov
and
inc
or
aas
xlat
mov
sbb
add
jbe
adc
dec
icebp
jb
sub
adc
mov
inc
push
mov
jg
ds
arpl
popl
push
sub
imul
cmp
add
sbb
lods
mov
push
imul
dec
mov
mov
gs
jmp
jno
dec
jbe
dec
or
pop
in
sbb
ja
hlt
push
xchg
push
leave
sub
rcrb
or
mov
mov
cmp
pop
jns
xchg
jns
cmp
lea
jmp
shr
inc
push
lret
push
push
dec
rorl
xor
in
adc
pop
dec
jecxz
aaa
pop
sub
and
inc
push
mov
cmpsl
jmp
imul
jae
cmc
icebp
mov
insb
nop
stos
pop
inc
lcall
jge
mov
leave
cmp
aam
fucomi
mov
aas
cld
or
into
mov
push
dec
dec
pop
notl
push
test
cmpl
inc
enter
gs
pop
data16
popf
rorb
ds
push
scas
inc
mov
fldcw
add
cli
push
push
sbb
insb
push
sahf
movsb
clc
push
imulb
sbbl
push
cmp
js
ror
push
xchg
sarb
cs
icebp
movsl
xchg
bound
adc
outsb
add
jns
xlat
imul
in
roll
movsl
and
add
mov
in
sahf
sbb
dec
mov
pop
iret
xor
pop
xor
out
dec
inc
adc
push
xor
add
and
incl
pop
mov
test
out
add
sbb
mov
and
inc
iret
insb
pop
cmpl
js
jecxz
mov
xchg
xchg
add
adc
jbe
addr16
aas
test
push
movzbl
inc
inc
fisubs
mov
rcr
or
cmc
neg
int
sbb
jp
pop
leave
insl
push
loope
cli
imul
mov
nop
sti
inc
mov
fnstcw
xchg
inc
ret
dec
hlt
push
push
movsb
ret
out
push
mov
jl
mov
cmc
or
sbb
or
jle
out
inc
xchg
add
xchg
and
and
mov
dec
daa
fsubrl
loope
fstpl
rcrl
outsl
mov
add
ret
das
shr
fs
call
lods
push
mov
sub
lret
std
inc
int
call
repnz
jl
cmpb
mov
xchg
mov
fs
push
in
sbbb
insb
out
in
sbb
xor
xlat
push
pop
xchg
cmc
fidivrs
mov
pop
xor
mov
xor
push
sub
mov
mov
mov
sbb
repnz
xchg
jmp
mov
cmp
loop
in
dec
xchg
push
aam
int
adc
je
arpl
aad
adc
loopne
fnop
mov
mov
aam
lea
sbb
int3
mov
mov
sbb
and
push
ss
xor
xchg
mov
inc
addb
inc
cmc
insl
adc
sbb
cmpsb
test
roll
mov
daa
cmp
loope
dec
fstl
loopne
iret
or
push
rcll
push
loopne
in
mov
jne
dec
loope
mov
cmpsb
iret
fs
pop
fstpl
insl
loop
adc
insb
jmp
sbb
sti
hlt
xchg
data16
test
sbb
cwtl
pushf
and
pop
stos
mov
movsl
push
test
lds
sub
clc
out
pop
and
pop
inc
push
in
jne
mov
jmp
shlb
mov
dec
jno
add
mov
pop
das
dec
cmp
shll
shrb
push
sub
push
pop
push
adc
dec
ds
and
outsb
je
inc
push
gs
sti
stos
enter
dec
cmpl
clc
test
fs
sbb
xor
int3
aad
dec
rolb
scas
inc
repnz
fs
mov
mov
dec
cmc
sarb
inc
sbb
add
push
js
inc
push
push
adc
cmp
sub
std
out
popa
imul
mov
scas
adc
xchg
mov
and
std
inc
enter
push
pop
pushf
dec
shll
ljmp
dec
push
ds
mov
cld
arpl
and
dec
push
lret
jbe
inc
cmpsl
push
insb
lea
adc
dec
adc
mov
mov
imull
jnp
mov
mov
jno
sbb
cmc
fnstenv
je
call
incb
push
mov
push
pop
pop
ret
cmc
repnz
sbb
insb
int3
mov
lds
pop
repz
sub
dec
sbb
ret
cmp
mov
sti
jle
fisubl
shl
rclb
xchg
adc
imulb
ds
mov
adc
stc
es
xlat
jne
push
cld
lahf
and
jne
aam
xchg
xor
inc
in
into
leave
push
pop
insb
cld
xor
mov
pop
adc
or
adc
adcl
andl
xchg
sarl
aas
or
inc
inc
sub
push
push
inc
inc
fnstenv
popa
xchg
cmc
pusha
nop
mov
enter
xchg
cmpl
aas
push
js
int3
in
mov
popf
popf
inc
push
fistl
pop
dec
adc
cmp
fwait
push
test
sub
cmp
pop
xor
pop
pop
mov
out
or
js
ret
negb
ds
or
dec
lret
addb
xlat
outsb
xchg
or
outsl
or
or
mov
stos
mov
sub
aad
cmp
cmp
xabort
daa
cmp
cmp
mov
pop
int
mov
lret
cmpsl
adc
in
add
daa
and
xor
fisttpl
sub
cli
mov
pop
inc
enter
mov
sbb
pushf
jecxz
pop
cmp
mov
out
xchg
xor
insl
outsb
mov
les
pushf
pop
mov
es
and
clc
xor
fs
repz
in
in
or
ljmp
ljmp
add
testb
sti
pop
ss
or
lret
fimuls
xchg
imul
dec
insb
in
js
mov
lret
mov
sahf
sub
fwait
subl
dec
lods
jo
cmp
pop
jmp
add
icebp
insl
push
cmp
pop
aas
js
add
nop
testl
inc
ss
lods
push
shr
adc
dec
in
ret
inc
dec
mov
test
jle
inc
ret
pop
fisttpl
inc
cmp
repnz
sub
in
xacquire
iret
lret
popf
mov
nop
cltd
insb
pushf
and
xor
clc
jnp
xor
xchg
mov
ja
adc
or
aas
in
cltd
mov
xlat
and
cs
xchg
push
nop
loope
adc
cmp
fsub
mov
mov
jne,pt
jecxz
jecxz
fwait
xchg
xchg
lds
test
scas
mov
stos
shll
xchg
adc
xchg
inc
mov
cmp
clc
ss
arpl
fmul
jmp
cmp
dec
sbb
repnz
jb
xor
push
jle
je
inc
push
es
out
pop
aad
jb
cmp
or
cmp
test
jbe
int3
call
sti
jns
dec
arpl
pop
out
mov
mov
loop
jne
imul
adc
test
dec
inc
pop
in
aaa
int
lock
mov
mov
pop
lods
jbe
aam
dec
cmp
pop
hlt
std
sub
outsl
jb
xchg
dec
adc
enter
sbb
bound
inc
int3
jge
cs
adc
cltd
mov
ret
jno
jecxz
mov
push
fdivl
std
and
jbe
cmp
sbb
adc
xor
rcrl
inc
icebp
mov
enter
rolb
dec
fdivrs
dec
dec
jge
pop
xor
test
or
mov
push
or
das
pop
sub
scas
mov
in
mov
dec
gs
imul
push
popf
lret
cli
stc
xchg
imul
fcmovu
outsl
enter
pop
pop
sbb
outsb
vmovaps
dec
test
push
rcrb
push
into
mov
add
repz
aas
pop
out
push
add
or
stos
stos
lock
cmp
fidivrl
loopne
gs
jl
insl
movl
mov
out
xlat
add
iret
or
jmp
sbb
fisubrs
sub
push
les
inc
cvtpi2ps
or
lock
xor
rcrb
add
imul
fldl
mov
lcall
inc
outsb
iretw
or
mov
dec
mov
test
sbb
lods
inc
or
stos
popa
es
or
jle
repz
mov
aam
fcmovne
cmp
or
sub
outsl
cltd
cmp
or
adc
rolb
xor
mov
sbb
jg
popa
roll
add
negb
inc
dec
mov
sub
push
xor
pop
cmp
or
mov
outsl
sub
negl
shrb
adc
mov
adc
testb
xor
scas
and
fildll
fsts
out
and
jl
xchg
daa
or
and
icebp
enter
mov
outsl
test
addr16
popa
testl
int3
or
enter
pop
jns
aas
push
dec
data16
cmp
add
mov
stc
leave
mov
adc
mov
pop
inc
xor
push
jmp
fdivrl
xchg
and
inc
push
mov
fisubrs
cmp
xor
jb
mov
adc
adc
testb
mov
aam
inc
jmp
or
sbb
xlat
sahf
sub
loope
mov
jne
xlat
push
imul
sbb
mov
into
inc
inc
jge
jp
loop
xor
push
sahf
cmp
leave
sahf
jmp
pop
pop
mov
push
adc
fldt
push
sbb
add
and
lock
leave
jbe
cmp
or
imul
jne
push
int
jp
into
in
and
orb
cmp
outsb
push
pop
jge
xchg
lahf
jge
into
movsb
or
inc
and
sub
icebp
test
ret
jmp
hlt
lahf
xchg
mov
das
punpckhbw
cmp
nop
add
pushf
xor
aad
mov
xchg
mov
mov
out
rcll
xor
shl
test
pop
pop
xor
test
icebp
xlat
idivl
loop
and
lds
mov
jecxz
push
push
hlt
pop
out
sub
inc
jno
pop
fldcw
out
int
push
mov
in
test
popf
in
scas
repnz
add
mov
loop
mov
mov
jl
dec
adc
sub
and
loop
hlt
adc
lret
dec
lock
jecxz
pop
out
std
mov
sub
or
enter
lret
es
leave
lret
imulb
jnp
adc
jle
pop
mov
insb
into
in
dec
push
setae
pop
inc
mov
pop
decb
sbb
shrb
into
mov
cltd
enter
sub
or
dec
jle
nop
fisttps
mov
mov
xchg
clc
fidivrs
stc
cs
fdivr
jne
in
cmp
adcl
aad
or
add
popa
inc
sbb
pop
jno
rcr
or
and
cmp
add
and
and
mov
rcll
xadd
sbb
pusha
mov
push
mov
mov
ja
mov
cmp
inc
movsb
mov
out
cltd
mov
sbb
adc
jbe
popa
pop
out
mov
xor
aaa
in
nop
cltd
test
call
mov
in
sbb
ror
cmp
into
jbe
sbb
icebp
push
mov
pop
jne
aas
lods
hlt
mov
mov
mov
cmp
addl
stc
lods
mov
aam
ret
adcb
in
insl
pop
addb
add
xor
adc
adc
int3
inc
in
jmp
aaa
mov
adc
cld
rolb
and
jmp
jns
push
adc
xchg
pushf
cmp
sbb
or
inc
xchg
clc
mov
pusha
in
test
orb
xorb
sbb
lret
sbb
mov
xchg
fs
pop
add
add
bound
cmpb
xor
or
mov
cmp
mov
je
mull
mov
outsb
cmpsl
dec
push
mov
add
xlat
leave
mov
xchg
xchg
pop
lcall
mov
cmp
cwtl
add
cmp
test
divb
xchg
push
ja
repz
mov
pop
cwtl
dec
add
jo
gs
lods
mov
cmp
cmc
dec
push
stos
out
sbb
and
jae
es
ficoml
jne
and
test
repz
fisubl
sbb
cmp
es
lods
pusha
pop
jg
es
jns
push
movsb
pop
and
xor
mov
dec
pop
xchg
cmp
lock
enter
clc
push
clc
cmp
movsl
cmp
add
and
pop
lods
xchg
jo
ror
divb
insl
inc
push
sbb
xchg
or
xor
push
mov
leave
loop
mov
sbb
fcomip
mov
sbb
ljmp
jbe
in
adc
pop
or
push
ljmp
fistl
mov
stc
sahf
inc
js
lock
popf
movsl
xor
jno
mov
movsl
out
leave
paddsb
ret
dec
and
cli
or
sbb
mov
ljmp
lods
cmp
or
xor
inc
jle
sub
dec
mov
loop
inc
sbb
dec
aad
mov
daa
mov
sub
xor
cli
xchg
jecxz
push
xchg
cs
mov
int
pop
and
hlt
in
sub
cli
xlat
mov
imul
push
pop
ret
xchg
fisubrs
imul
adc
and
ds
cmpsl
dec
mov
push
pushf
jge
or
or
mov
sbb
movsl
xchg
or
mov
and
mov
lods
mov
adc
jbe
inc
addr16
add
int3
mov
mov
add
outsb
xor
insl
jo
sahf
mov
clc
adc
jnp
pop
jl
daa
mov
mov
or
outsb
add
inc
adc
cmpsl
adc
mov
mov
jae
mov
mov
pusha
push
mov
jge
cmp
ja
std
mov
imul
roll
jae
loopne
lcall
daa
dec
les
xlat
inc
divl
adc
setb
push
add
stc
fstl
test
mov
insl
out
mov
mov
roll
sub
cmpsl
sub
push
addr16
pop
and
sub
jbe
roll
push
int3
out
push
inc
push
imulb
cmp
bound
in
dec
jle
aaa
dec
dec
mov
addr16
cli
xchg
xchg
mov
lret
or
xchg
faddp
xor
jg
loope
inc
adc
mov
outsl
mov
inc
inc
adc
enter
mov
sub
add
test
adc
xlat
and
adc
stc
mov
jbe
push
mov
add
pop
pusha
push
sub
rorl
mov
xor
fadds
sbb
in
lret
pop
ss
inc
sbb
aaa
int3
daa
mov
add
fistpl
push
gs
int
out
cltd
imul
xchg
out
in
mov
shrb
mov
rol
push
lods
cmp
cmc
mov
xor
in
je
xor
nop
lret
inc
fbld
lods
outsb
sbb
inc
mov
pop
inc
xchg
mov
mov
and
fs
popf
sub
mov
js
sub
ss
lods
dec
das
fldl
fsubr
repnz
mov
and
adc
stos
push
dec
adc
push
mov
and
xchg
pop
pop
inc
jne
dec
pop
mov
sub
stos
inc
cwtl
repnz
and
xchg
lret
ds
dec
push
cmp
or
and
pop
out
cmpsl
cli
rorl
inc
jl
dec
dec
out
adc
mov
les
stos
stos
sub
repnz
jae
cmc
push
sbb
fs
repnz
ja
xchg
sahf
sbb
pop
fmulp
push
js
fstl
call
mov
ja
cltd
jne
cs
popa
add
stos
daa
add
mov
sbbl
fildll
sub
fdivl
adc
pop
and
outsl
xorb
adc
sub
xchg
loopne
lods
inc
sub
int
aas
in
sti
fs
sahf
or
int
or
dec
loop
xchg
xchg
test
inc
adc
in
xor
jmp
or
jecxz
cmp
add
cmpsl
enter
sbb
loope
icebp
ja
stc
push
mov
sbb
int
push
xor
sub
pop
add
push
jo
ret
leave
jecxz
jge
iret
and
es
and
cli
push
ljmp
out
les
test
dec
xchg
or
sub
xor
repz
bndldx
xchg
dec
sub
lea
loopne
mov
in
scas
pop
add
xor
insl
rclb
and
and
nop
stc
jbe
lahf
fsubrl
jg
je
xchg
mov
jno
movsb
js
push
xlat
add
xchg
scas
jmp
aaa
aam
loopne
xor
push
call
push
mov
mov
cli
mov
ja
fwait
pop
cmpsb
cltd
xchg
inc
xchg
mov
adc
imul
cwtl
enter
fbstp
mov
xlat
push
xchg
outsb
push
cmpsl
stos
sub
sbb
rcrl
hlt
push
xchg
adc
stos
mov
js
push
pop
loop
mov
mov
lds
nop
add
mov
cltd
xor
enter
sbb
or
inc
and
cmp
jecxz
jne
mov
test
and
ljmp
outsb
and
push
xor
imul
daa
data16
rcl
scas
pushf
sub
add
push
out
push
loope
mov
mov
jle
sbb
hlt
shl
cmpsl
insb
push
cmp
call
pop
fsubrp
inc
dec
push
andb
dec
and
or
mov
add
lea
in
lea
sub
push
pusha
mov
faddl
xor
cmpb
clc
insl
daa
and
out
fstpt
add
xchg
push
outsb
es
mov
scas
insb
imul
jno
daa
cld
daa
pusha
pop
enter
add
and
sub
repnz
add
mov
sbb
fwait
xchg
jno
fidivl
inc
aad
sub
lea
cmp
lock
adc
cmp
out
sahf
or
call
sbb
subl
aas
mov
cld
popf
mov
aaa
jb
pop
addr16
fwait
pop
push
or
fwait
or
icebp
or
fs
jecxz
cmp
and
push
add
aas
es
lods
or
jp
aam
inc
cmp
cs
bnd
js
je,pt
outsl
pop
push
dec
insb
in
ja
jo
clc
mov
movsl
fwait
das
imul
aas
adc
xchg
insl
in
mov
seto
test
add
xor
ljmp
loopne
addr16
enter
mov
mov
xlat
icebp
pop
call
push
into
or
adc
sub
adc
inc
mov
pop
popf
ds
rcr
push
scas
adc
lahf
std
enter
dec
inc
dec
out
jo
mov
aam
js
or
sub
push
icebp
push
inc
repnz
out
outsl
dec
sbb
aas
sub
enter
je
out
mov
add
fcoml
jb
pop
scas
jmp
cmp
sub
xchg
push
outsl
push
bound
test
sub
decb
cmp
sub
inc
add
sub
push
pop
pop
xor
sub
daa
cmp
lods
clc
enter
gs
addb
dec
insl
sub
adc
out
decb
xor
fbld
gs
adc
shrl
shll
mov
xor
nop
movsb
sti
xlat
cli
iret
mov
cld
inc
aaa
xor
sbb
adc
std
insl
add
xor
jmp
push
decl
cwtl
jl
sub
push
ljmp
stc
dec
push
stos
leave
data16
loop
add
push
xchg
ljmp
xchg
rclb
mov
cmp
push
les
sub
addr16
cmc
cmp
push
sub
loop
hlt
das
jne
loop
mov
push
jge
pop
or
adc
jb
xchg
out
xchg
imul
imulb
test
nop
jg
xchg
or
movsb
popf
pop
mov
repnz
imul
movsl
into
inc
enter
loope
dec
mov
mov
test
jecxz
in
or
xchg
and
and
imul
daa
add
andb
mov
fisubs
pop
jge
mov
and
in
loopne
mov
in
cmp
aam
jb
pop
add
dec
and
jecxz
gs
js
sbbb
adc
movsb
aam
push
jle
not
in
cmpsl
mov
jnp
mov
jae
lcall
cld
sti
jl
fdivrp
mov
dec
pop
stc
sub
shrl
xor
stc
bound
adcl
jne
dec
dec
or
and
pop
sbb
pop
jns
xchg
inc
lods
pop
add
xor
lock
lock
je
imul
mov
bound
xor
call
jg
idivb
popa
movsl
add
paddd
mov
mov
cld
jge
mov
mov
orb
mov
fisttps
sarl
icebp
xorb
pushf
and
out
jb
adc
sub
jg
xchg
bound
dec
iret
imull
jae
in
in
xlat
mov
mov
or
lods
push
mov
int
pop
mov
int
sbb
repnz
std
adc
cmp
stos
in
nop
cs
ret
push
lock
pop
xor
test
fldcw
mov
dec
lret
push
outsb
or
mov
test
inc
cmp
leave
ljmp
in
fldenv
jge
pop
lcall
adc
sub
cmp
pop
loop
jno
mov
loope
pop
or
out
leave
ds
cmp
mov
pop
cmp
mull
loopne
mov
addl
or
xchg
xchg
gs
push
in
push
ljmp
cmp
or
mov
cmp
sub
jge
int
cld
mov
mov
loopne
mov
shll
lds
xlat
repz
outsl
pop
mov
fimull
pop
fsubrs
jmp
lret
mov
movsl
jbe
pop
add
ret
insl
stos
sbb
mov
cmp
pop
cltd
sub
or
rcrl
jmp
aaa
mov
and
incb
repz
in
cmpsb
push
xchg
jbe
daa
cmpps
adc
ror
push
popa
sub
mov
inc
aaa
push
mov
ficomps
fsubl
add
std
idivw
addr16
jle
or
mov
cmp
cmp
push
mov
loop
lods
call
cmpsb
movsb
inc
js
pop
adc
dec
shrl
push
or
int
popf
mov
into
dec
add
loope
es
push
sub
mov
dec
xchg
mov
inc
mov
shlb
packssdw
xchg
movsl
aam
dec
inc
cmc
stos
mov
sub
push
mov
push
jmp
jbe
fcoms
xchg
add
and
pop
shl
rolb
clc
pop
jl
and
add
aaa
out
test
rcrl
into
mov
jge
shll
sbb
mov
mov
loop
jne
push
test
out
movsb
lock
pop
fsubs
xchg
and
ret
xor
cltd
test
loope
std
add
imul
sbb
or
and
cs
or
jo
jp
loop
cld
sbb
push
lcall
jb
cmc
addr16
sbb
shll
ror
pushf
xchg
lods
xor
cmp
xchg
ds
sbb
into
xor
cmp
imul
ljmp
sub
mov
cmp
aad
icebp
and
idiv
aad
mov
adc
push
daa
ret
incl
fists
sub
lahf
test
sub
jbe
stc
mov
mov
mov
adc
adc
pop
out
rsqrtps
je
aad
cmp
test
mov
fnstsw
mov
scas
out
or
jmp
adc
mov
mov
dec
sub
add
mov
pop
mov
fisttps
sbb
pop
mov
test
jne
lcall
inc
jo
add
jns
test
popa
pop
mov
fldcw
xchg
inc
cmp
jmp
dec
stos
in
lds
lret
pushf
xchg
int
add
rcl
sbb
mov
mov
test
sarb
xor
scas
ret
dec
pop
icebp
in
sbb
ja
nop
jnp
pop
out
cltd
incb
and
or
fisttps
das
xlat
cmp
sub
push
or
jge
andb
je
inc
sbb
out
xchg
jae
fidivs
popf
gs
movsl
inc
inc
inc
pop
jmp
mov
in
insb
jge
ret
inc
push
and
repz
negb
xor
xchg
das
andb
or
mov
push
nop
jp,pt
push
xor
pop
sbb
outsb
adc
adc
jae
outsb
mov
xchg
ret
cmpsl
xor
insb
or
cli
aas
push
sbb
outsb
sbb
sub
sub
push
repnz
aaa
fs
ret
cmp
xor
jae
mov
xor
or
xor
loop
or
pop
subb
mov
sub
mov
inc
pop
jnp
push
push
mov
mov
pop
sub
push
sbb
dec
or
in
repnz
data16
xchg
sub
js
jge
mov
jl
mov
mov
inc
inc
pop
sbb
push
rcl
jg
in
and
fs
mov
fists
cld
mov
ja
jmp
aaa
or
inc
mov
xchg
push
mov
jmp
jmp
inc
lcall
out
mov
push
adc
test
jecxz
mov
mov
jne
aam
xor
rcrb
cmpsb
pop
pop
push
adc
lods
imul
mov
clc
test
push
jg
wbinvd
jns
jecxz
incb
inc
xor
ret
and
test
jbe
sbb
mov
loop
dec
lods
sbb
testl
mov
cmc
test
mov
inc
sahf
xor
push
lcall
jne
jno
lahf
rcl
mov
insl
lret
rcl
jp
xchg
int
xchg
and
mov
popf
lret
mov
xor
push
sar
cmp
repz
fldt
imul
jb
adc
outsl
fsubp
dec
dec
cwtl
and
cmp
fistpl
pusha
lods
fistps
imul
sub
sbb
popa
mov
xchg
stos
jno
mov
mov
mov
add
test
nop
in
xchg
sbb
jle
shrl
out
xor
loop
stos
mov
inc
jp
inc
xor
pop
dec
adc
ljmp
push
sub
gs
divb
nop
mov
mov
es
test
lcall
push
test
rolb
mov
sub
ret
inc
or
test
push
push
sub
popf
inc
out
fsub
fmul
aam
sbb
or
lds
push
inc
inc
scas
mov
mov
and
and
stc
push
cmc
loope
jae
js
shrb
arpl
xchg
sub
mov
jg
push
xor
shrl
pop
roll
fstpt
cld
frstor
add
pushf
xor
pusha
mov
adc
sub
xchg
add
or
lret
mov
mov
aad
jb
jle
push
cmp
ss
add
lcall
mov
in
out
fisttpll
mov
out
add
outsb
stos
in
int3
inc
paddusb
cmp
push
stos
pushf
rolb
in
ja
test
in
fucom
push
fcoms
mov
movsb
aam
int
shlb
cli
inc
cmc
test
imul
cmp
aaa
add
adc
out
mov
adc
mov
adc
cmp
sbb
loope
imul
je
push
pop
int3
jae
add
xor
add
dec
xlat
je
lahf
and
xchg
mov
mov
sbb
add
roll
cltd
shll
xchg
aaa
movsb
jnp
lock
push
sarb
cmp
jns
mov
stos
dec
inc
leave
push
enter
and
fimuls
rep
lcall
dec
lret
and
mov
int3
pop
and
sti
push
hlt
adc
cmpsb
psraw
ja
and
sbb
inc
inc
fcomps
pop
nop
xor
daa
mov
lcall
in
roll
sbb
in
scas
dec
notl
loope
sarl
add
push
rclb
add
in
pop
mov
xor
pusha
dec
add
or
flds
xor
fwait
inc
pop
mov
outsb
cmp
cmp
es
mov
das
and
xlat
xor
ret
mov
clc
jmp
dec
xchg
out
jae
xchg
jne
cltd
loopne
push
faddl
sbb
or
lcall
mov
popf
xlat
ss
pop
cmp
mov
ljmp
add
icebp
mov
sbb
fiadds
ficoms
popf
in
push
jnp
sbb
and
inc
inc
push
or
es
loopne
xchg
jbe
sarl
push
icebp
rclb
or
xchg
in
push
fwait
imul
dec
jno
sub
push
sub
out
mov
fwait
adc
addr16
sbb
and
repnz
scas
les
adc
insl
fwait
add
sbb
push
dec
or
cltd
and
push
lcall
jecxz
push
aad
jne
or
xchg
hlt
lea
addb
sbb
ss
and
cmpsl
xchg
aam
jno
fwait
mov
mov
out
ror
mov
inc
push
xlat
icebp
dec
mov
or
fdivr
test
pop
add
out
nop
inc
cmp
movsb
js
dec
jmp
fbld
cmp
in
fdivrp
pop
push
dec
mov
stc
or
shl
mov
shrl
imul
nop
aam
data16
jb
xchg
jmp
push
and
mov
push
ss
and
dec
mov
lock
call
add
push
loopne
mov
inc
ror
fs
jne
sbb
fstpt
pop
loope
lods
jmp
imul
adc
jle
jp
popa
je
push
jle
je
mov
cwtl
mov
out
sub
and
ja
shlb
or
sub
mov
jp
and
or
mov
mov
push
cmp
cmc
pop
loope
es
fwait
rcl
pop
mov
cli
or
mov
rolb
popf
cli
movsb
sbb
out
dec
sbb
imul
je
xchg
pop
scas
mov
in
and
into
dec
cmp
cmpsl
lods
jl
es
lods
jp
xor
adc
pusha
ljmp
in
push
int
jmp
jp
jl
jns
aad
data16
push
push
inc
mov
mov
imul
pop
sbb
lret
xchg
pop
scas
int3
dec
and
push
adc
mov
mov
stos
popa
inc
mov
pusha
gs
pop
pop
pop
push
sub
das
fstpl
sbb
dec
sub
ds
inc
aaa
mov
pop
and
pop
jge
xor
jo
es
inc
dec
push
fwait
and
cmc
loope
jge
and
shl
ret
adc
gs
and
lret
subb
mov
add
xor
aas
cmp
xor
mov
sbb
push
adc
data16
inc
add
cmc
xorl
insl
mov
cmp
cmp
fldl
cmp
lods
mov
sbb
dec
dec
sub
adc
xchg
subb
sarl
sub
jns
cmp
jbe
jg
popf
jno
gs
dec
lods
in
jbe
mov
dec
lock
xor
cmp
int3
lods
sub
testl
inc
ds
stc
mov
xor
xlat
sub
push
push
jb
movl
pop
fisubl
sar
popf
inc
in
daa
sub
cmp
inc
dec
ss
clc
adc
inc
loop
nop
cmpsb
cmpsl
and
mov
sarl
rclb
push
iret
mov
loopne
and
sbb
mov
loopne
sbbl
sub
in
mov
fnstenv
daa
int3
pop
xor
lock
xchg
adc
push
jle
andl
jle
ljmp
imul
js
push
mov
xchg
push
adc
xchg
xor
push
frstor
mov
or
fs
jae
push
dec
xchg
add
fsubp
xlat
jge
mov
jmp
cmc
sbb
push
or
in
xchg
mov
fwait
sub
push
cmovg
or
shlb
sbb
mov
inc
pop
insl
int
pop
aam
inc
mov
les
sbb
scas
adc
std
insb
sub
fcomi
push
cmp
dec
loope
cli
add
sbb
data16
clc
out
out
push
lret
inc
outsl
rorl
inc
fistpl
xchg
mov
adc
adc
dec
cmp
scas
fiadds
mov
sbb
jmp
jmp
ljmp
xor
adc
adc
cmpsl
loope
pop
addr16
pop
push
movsb
or
dec
lahf
jb
lcall
pop
movsl
shlb
in
imul
cmp
shll
test
mov
sbb
rol
cmp
scas
lahf
pop
lods
gs
xor
adc
lods
xchg
dec
jnp
push
outsb
inc
loopne
mov
ret
in
movsb
jecxz
xor
cltd
cmp
das
mov
jo
cltd
lcall
jle
pop
sub
out
cmp
aas
bound
jnp
cmp
sub
hlt
pop
or
test
mov
lcall
push
fdivs
lods
jmp
scas
enter
adc
popl
in
bound
test
test
inc
xlat
repnz
fisubl
xchg
sbb
mov
xor
popf
xor
xlat
xor
dec
call
mov
ret
cmp
test
cmp
add
push
stos
mov
insl
aas
jl
xchg
popf
hlt
push
sbb
inc
shr
cmp
sub
sbb
aas
cmp
mov
sarb
and
adc
imul
std
adc
cltd
dec
and
iret
adc
clc
jge
iret
ss
xchg
add
and
cmpsl
adc
cmp
inc
dec
aam
push
jle
das
push
sbb
notl
mov
cmp
sbb
jle
loopne
mov
mov
stos
test
out
sbb
call
and
dec
adc
popf
and
mov
xlat
sbb
loop
sbb
gs
testl
mov
js
movq
repnz
or
jl
dec
cmp
push
repz
shlb
iret
in
inc
adc
mov
lods
mov
enter
add
inc
mov
stos
add
arpl
mov
scas
jno
xchg
aaa
mov
lret
mov
sbb
sbb
js
ljmp
lahf
sub
test
not
xchg
scas
jle
xchg
xor
add
dec
mov
jns
sub
fistl
and
xchg
pop
or
cmp
out
imul
outsb
mov
stc
pusha
aaa
loope
add
test
jne
dec
cli
pop
in
subl
jae
cmp
adc
out
push
and
xor
stc
mov
add
cmp
roll
ffreep
stos
dec
sahf
out
inc
sub
shr
push
xchg
mov
push
mov
xor
pop
adc
pushf
xchg
or
loopne
xchg
dec
push
mov
cmp
addb
inc
xlat
adc
cmpsl
push
andl
call
xchg
fbstp
mov
jecxz
stos
mov
push
dec
and
test
shrb
jmp
xor
jb
cmpsb
nop
aas
push
and
shlb
sub
xor
dec
loop
not
outsb
outsl
sub
jbe
dec
and
in
add
ds
outsl
jg
popa
repnz
jne
cmpsb
shll
aad
mov
and
dec
repz
daa
cld
adc
scas
imul
pop
fdivrl
fnsave
aas
ficoms
pop
mov
out
cs
pop
std
mov
rcl
mov
and
sub
repnz
add
les
jo
clc
aaa
sahf
inc
mov
dec
jae
int
subb
mov
xor
outsb
lret
mov
in
inc
jbe
sbb
sbb
mov
sahf
jne
mov
jne
sbb
cmp
nop
pop
mov
push
in
sbb
shlb
adc
mov
mov
pop
notb
in
sub
leave
ret
inc
mov
test
shrl
insb
stc
and
push
add
push
les
fbld
hlt
xchg
loopne
dec
inc
inc
dec
jne
lods
fmul
inc
shl
call
test
bound
into
sbb
add
shlb
cs
out
inc
in
lods
test
and
es
sti
call
fimuls
movsl
sbb
int
fwait
daa
lret
inc
xor
xor
movsb
in
repz
and
shll
mov
jmp
loop
pop
lock
adc
jg
xor
jle
ss
xchg
xchg
sahf
andb
loop
lods
jae
xchg
into
pop
push
push
insl
cltd
pop
fmul
jp
mov
adc
pop
or
in
lcall
gs
ja
and
or
push
jb
push
cmp
loop
js
push
movsb
aas
rorl
loop
mov
clc
pop
mov
xor
je
push
fs
adc
orb
jbe
dec
sub
mov
aas
and
xor
mov
xchg
or
dec
mov
sub
imul
sbb
in
and
popa
stos
insl
gs
test
dec
adc
inc
movsb
xchg
inc
or
and
inc
xor
push
scas
loop
out
mov
jmp
push
xchg
adc
popl
int
xchg
dec
in
aad
mov
mov
ds
pop
jl
fidivrs
shl
inc
int3
into
pop
pusha
repnz
les
test
push
orl
rcr
mov
lods
mov
outsl
and
test
xchg
push
pop
outsl
inc
leave
aam
inc
dec
sbb
loope
pop
xor
sbb
mov
cmpsb
push
js
xor
inc
fdivl
xchg
insb
adc
ss
nop
mov
clc
inc
cmp
leave
cltd
movsl
bound
inc
and
cmp
xchg
sbb
int3
aaa
cmp
pushf
inc
adc
pop
cwtl
xchg
sub
fsts
push
dec
mov
or
test
mov
mov
enter
add
pop
orl
lea
stos
popf
cmp
xchg
xor
adc
in
add
repnz
xlat
push
test
outsl
jbe
mov
pop
push
sub
stos
adc
inc
xor
cmp
xor
xor
xchg
pop
stc
pop
int
cmp
loopne
cmp
into
les
scas
dec
rcrl
ret
imul
jmp
add
arpl
mov
or
orl
mov
sbb
pop
nop
cmp
sub
arpl
push
inc
mov
popa
sub
jmp
in
pop
add
popa
dec
icebp
jns
xor
and
mov
aam
in
in
dec
inc
push
jl
imul
mov
out
clc
pop
push
xor
inc
popa
mov
mov
push
xchg
daa
testl
nop
xchg
mov
push
mov
pusha
xchg
sub
imul
ja
jmp
loopne
lret
hlt
cmc
push
push
imul
mov
cmp
sbb
xor
in
adc
xor
aam
xor
adc
xor
cltd
out
fdivl
das
jae
mov
fs
rcll
ds
aam
sbb
aas
add
repnz
mov
dec
pop
jg
fs
mov
xchg
loopne
rcll
jno
inc
lret
mov
add
fnstcw
xchg
jns
mov
mov
pop
xor
test
mov
and
mov
sti
mov
mov
cs
inc
mov
iret
push
mov
daa
mov
mov
xchg
sub
out
pop
es
mov
xor
iret
movsb
repnz
ret
and
popl
pop
sbb
push
imul
arpl
xchg
sbb
aaa
inc
jge,pt
icebp
test
sub
pop
repnz
cmp
inc
and
aam
into
sti
fs
imul
mov
lret
jbe
adc
iret
mov
jb
call
dec
cli
sub
cmp
stos
jle
pop
mov
out
clc
push
popa
xlat
clc
negl
mov
test
and
je
and
loopne
cs
xor
push
cld
int
hlt
mov
cmp
xchg
and
push
enter
xchg
dec
inc
sahf
xor
insl
jae
cli
mov
out
int
push
movl
mov
sar
pop
imul
mov
cmpsl
pop
cmpsl
hlt
in
scas
jp
repz
dec
out
aas
addl
in
pop
mov
jns
pop
icebp
lock
or
sbb
std
addl
test
and
daa
xor
ret
and
insl
push
pop
roll
lock
call
nop
xor
adc
ss
ret
dec
jae
pop
and
dec
aad
mov
lea
add
and
leave
aas
xchg
test
sub
out
add
arpl
gs
or
xor
push
dec
icebp
lea
mov
xor
cmc
les
out
sbb
std
sbb
sbb
aam
pop
cmp
mov
xchg
push
pop
pop
nop
mov
out
shlb
jg
data16
pop
nop
inc
jl
jg
xor
imul
out
sbb
pop
jae
mov
sbbb
push
je
cmp
or
movsl
push
add
subl
test
pop
roll
xchg
cmp
mov
pop
jnp
fidivrl
sub
inc
in
loopne
sbb
clc
mov
std
cmc
xchg
lahf
mov
cmp
add
xchg
outsl
pop
cmp
push
cmp
cli
insb
jb
dec
pusha
ds
lock
and
out
and
in
sbb
stos
das
loop
scas
jmp
pop
or
push
xor
pop
or
out
adc
mov
cwtl
imul
movsb
jae
mov
movsl
xor
leave
sarb
leave
sbb
movsb
cmp
fadd
inc
and
fsts
mov
test
add
std
pop
xor
sub
xchg
jecxz
fmull
dec
das
adc
or
mov
jl
jo
push
dec
cwtl
xlat
call
int3
push
mov
enter
test
sub
dec
dec
xchg
jecxz
sbb
xchg
test
imull
js
pop
outsl
shl
jge
xchg
loope
test
sahf
lea
lcall
mov
mov
push
sbb
jecxz
xor
cmc
sub
shrb
push
int
and
add
pop
fildll
arpl
inc
mov
push
xchg
fdivp
and
data16
sahf
insb
xor
push
pop
int3
inc
adc
or
pop
xchg
lcall
xchg
or
jno
adc
xor
sbb
idiv
call
movq
sbb
daa
lahf
std
in
lret
push
and
adc
sub
push
popa
shrb
loop
cmc
cli
cs
jp
ss
mov
jmp
scas
int
xorb
clc
dec
sti
in
inc
inc
adc
adc
imul
inc
adc
out
mov
cmp
xchg
scas
fnstcw
pop
aam
pop
prefetch
or
jecxz
adc
add
roll
pop
in
aaa
add
aad
dec
repz
add
mov
xchg
dec
xchg
cmp
insb
fisubl
pop
mov
shlb
rclb
ret
out
subb
xchg
sub
popf
popl
pusha
repz
sti
or
or
mov
add
jecxz
mov
test
mov
popf
lret
pop
push
fisubrs
scas
jecxz
shl
inc
enter
cli
sar
std
mov
nop
mov
sbb
call
ret
add
dec
jg
jp
inc
je
popf
add
sti
es
fidivrl
out
pop
jle
xchg
cmp
cmpsl
mov
xchg
dec
bound
xchg
or
popf
add
dec
scas
sbb
test
test
or
xchg
out
std
mov
scas
clc
rcl
mov
imul
jno
adc
mov
testb
adc
addb
movsl
rolb
adc
repz
cltd
add
push
and
cs
adc
add
adc
divl
lock
outsb
adc
pop
adc
or
ljmp
cmpsl
xor
enter
or
push
adc
mov
das
sub
pop
sbb
scas
mov
sbb
sbb
pop
lods
jae
ror
pop
stos
addr16
test
push
shr
mov
or
lock
push
pop
popa
ret
les
sbb
stc
rcrb
or
lret
incl
call
jo
sbb
mov
sti
cmp
sbb
adc
push
sbb
cmp
cld
cmp
jecxz
xor
push
stos
sbb
xchg
popa
sbb
or
mov
cmp
inc
rol
cld
nop
cmpsb
inc
add
dec
cmpsl
nop
mov
mov
je
fadds
inc
ds
js
loope
xchg
dec
sbb
shll
scas
sahf
movsl
mov
xor
or
in
xchg
lahf
pop
cwtl
movsb
iret
ljmp
pop
aam
jno
imul
int
js
mov
lcall
lahf
mov
es
test
mov
fmuls
das
sub
sub
inc
ret
scas
leave
mov
dec
lods
mov
mov
mov
loopne
scas
push
jo
mov
inc
das
pop
inc
push
xchg
push
mov
leave
mov
jl
xor
cmp
mov
mov
call
mov
in
jl
push
cmc
jecxz
jnp
ret
lret
lods
rorl
xchg
cld
xor
sahf
idivb
xor
or
repnz
xchg
push
in
dec
into
pusha
fnstcw
pusha
insl
push
ret
sbb
mov
or
mov
outsb
lods
xor
fstpt
test
addr16
push
addl
jp
addps
jo
je
push
outsl
popf
push
dec
pushf
sub
int3
lods
in
push
pop
imul
call
dec
cmpsl
jno
mov
sti
mov
pop
xchg
in
lock
fcomps
arpl
outsb
sbb
and
in
insl
add
in
std
stos
mov
in
sbb
fisubs
mov
or
sub
jae
push
insl
movsb
or
lahf
pop
add
fwait
int3
jp
into
shl
lock
test
mov
jp
cmc
roll
jne
mov
in
ljmp
sbb
mov
daa
cwtl
xchg
shll
lods
jl
popf
insl
mov
dec
out
mov
xchg
mov
push
sti
adc
enter
test
pop
mov
sahf
popa
in
std
add
aam
inc
bound
mov
int
inc
xchg
add
jle
mov
add
enter
fisubrl
int
cltd
dec
adc
adc
jae
cli
mov
xchg
inc
lcall
adc
fs
and
xchg
mov
cmp
jmp
dec
jl
mov
addl
lret
vprotb
clc
push
insb
mov
cmpl
lea
mov
push
xor
mov
cltd
dec
and
xchg
inc
call
dec
dec
cmp
push
idivl
add
push
cmp
orb
imulb
fmull
shl
sub
ss
mov
or
daa
or
ljmp
lds
mov
or
push
je
rorb
mov
subl
ret
dec
lahf
cmpsl
gs
xchg
lret
jecxz
mov
movsl
nop
sub
iret
mov
es
shrb
lcall
insb
sahf
loop
cmc
xor
aaa
cmpsl
or
outsl
enter
stos
mov
data16
nop
push
mov
dec
lcall
sbb
jbe
xchg
xor
mov
popa
stos
mov
pushl
test
jg
mov
mov
shll
cmc
imul
xor
lcall
cmp
xlat
pop
out
stos
xchg
jnp
testl
jbe
out
icebp
push
or
cmp
xchg
lcall
sahf
cmpsb
negb
in
imul
stos
repnz
mov
mov
xor
pop
lret
or
xchg
out
inc
fs
sbb
mov
pop
mov
push
movsb
pop
sbb
sub
stc
mov
push
pushf
test
punpcklbw
xor
fldcw
push
sbb
ret
rcll
dec
mov
sub
mov
cmp
jo
inc
into
arpl
cmp
push
pop
jecxz
mov
outsl
ss
sub
push
in
sub
popa
jns
dec
cltd
mov
mov
cmc
loope
inc
lods
sub
shlb
add
push
or
mov
xchg
out
cmp
sahf
sti
outsl
xor
stc
or
fwait
dec
movsl
js
pop
pop
loop
mov
movsb
push
cmpsl
icebp
loopne
jp
ja
test
jp
rorb
int
ja
bound
test
mov
cmpsb
add
xchg
cltd
sbb
das
movsl
or
rcll
jnp
ret
mov
mov
outsb
mov
out
repz
jmp
outsl
mov
sbb
cmp
orb
lcall
push
lock
out
repnz
shrb
jg
pop
push
inc
adc
dec
stos
cmp
xchg
stos
cs
mov
push
inc
dec
adc
rcrb
loop
jecxz
cmpsb
popf
mov
mov
fldenv
adc
cmpl
push
xchg
xchg
mov
inc
sub
jmp
test
xchg
mov
fcmovne
fwait
mov
je
rorb
xchg
dec
mov
lret
sub
icebp
imul
incl
or
dec
subl
adc
adc
rorl
rcl
push
cld
sub
push
inc
outsb
aad
mov
or
mov
dec
adc
rcll
ds
arpl
sub
fwait
pop
imul
pop
sbb
inc
inc
jp
xor
scas
mov
cmpsl
fucomi
into
dec
bound
cwtl
inc
cmp
nop
sub
test
xchg
into
mov
or
int
mov
push
add
lock
or
xchg
add
or
mov
jg
les
loop
lock
mov
movsb
or
pop
in
fidivs
jp
mov
cld
inc
inc
andb
ljmp
arpl
mov
push
popf
cmpsb
rorb
hlt
jno
inc
mov
ljmp
cmp
mov
pushf
inc
outsb
loope
stos
adc
lock
cld
lods
jne
mov
adc
mov
mov
inc
xchg
in
or
jbe
push
icebp
push
xlat
cmp
rsqrtps
cld
push
lds
sub
jno
pop
cmp
imul
sbb
arpl
xor
les
loop
outsl
jne
repnz
push
jmp
xchg
lcall
push
aaa
mov
jp
outsl
movsl
and
sub
fdivl
dec
xor
enter
xchg
test
ja
jbe
int
push
dec
dec
cli
mov
push
adc
sub
cli
xlat
xchg
xchg
jbe
pop
xchg
cmpsb
sub
dec
int3
scas
inc
adc
cmp
sbb
inc
daa
pop
push
add
mov
mov
enter
in
mov
push
daa
mov
push
popf
pop
shl
int
mov
cmpsl
pop
and
mov
lret
mov
adc
nop
jne
sbb
adc
inc
push
xor
lret
or
and
push
mov
or
dec
rol
sbb
cmpsb
cs
jne
in
or
push
fidivrs
add
xor
xor
cmp
pop
stos
addr16
int
call
std
adc
mov
pusha
jmp
push
mov
movl
enter
mov
mov
into
ret
js
dec
mov
jecxz
xchg
test
out
mul
sbb
dec
imul
fucomp
cmpsl
inc
xor
loope
xchg
jae
jl
push
jb
dec
insl
adc
xor
push
dec
add
jmp
mov
repz
inc
add
pop
xor
stc
nop
lea
out
cmp
jnp
lret
int3
sbb
ds
stos
popf
and
dec
insl
sub
scas
adc
pop
xor
pop
jns
xlat
movsl
pushl
negb
lea
mov
sub
fdiv
sub
pop
gs
xchg
ror
pop
jb
je
lcall
stc
imull
cmovb
xchg
aas
je
test
dec
adc
shlb
aad
popa
mov
dec
mov
xor
mov
sahf
sbb
jo
add
outsb
xlat
fisubrl
pop
xchg
shl
inc
shll
gs
negl
xor
xor
out
subb
mov
mov
jl
out
aad
jle
mov
gs
out
shlb
adc
lahf
fnstsw
xchg
fistps
sbb
mov
scas
or
aad
imul
sbb
xchg
mov
lea
scas
xor
dec
pop
into
fsubp
repz
xor
fisttps
mov
into
mov
add
clc
push
push
cltd
js
sbb
push
jnp
in
jbe
popa
adc
mov
andl
shlb
fwait
push
mov
mov
cmp
leave
cmpsl
or
loope
sti
push
outsb
sbb
pop
push
fisubs
xchg
and
es
xor
cmp
shll
insl
cltd
fstps
stos
inc
cwtl
mov
jnp
out
or
push
ret
and
loopne
and
and
cli
je
rcr
imul
xchg
std
add
cmp
xchg
push
in
mov
push
mov
mov
sub
mov
and
xchg
xor
jne
ret
adc
and
shrb
test
cwtl
or
in
addr16
flds
cli
rclb
and
iret
shrl
sbb
outsb
daa
movsb
or
dec
aam
sub
sbb
pop
lds
pop
mov
cmp
mov
js
test
pushf
aaa
sbb
das
repz
pop
cmc
jbe
add
pop
loopne
add
or
jle
js
dec
mov
mov
shl
call
out
adc
test
lret
mov
test
lods
inc
test
out
aas
push
in
cmp
or
mov
push
gs
loope
inc
mov
popf
lret
movsb
or
mov
or
into
mov
loope
xchg
cmp
push
cltd
mov
dec
add
mov
mov
gs
jg
push
sub
push
lods
jo
and
push
test
int3
and
adcl
insl
and
sbbl
fimull
insb
add
jp
ja
sbb
mov
inc
imul
pop
icebp
xor
clc
add
sbb
fists
jno
inc
xor
dec
mov
pusha
jp
inc
sbb
inc
hlt
sub
xor
mov
pop
lods
hlt
test
push
or
inc
jl
shrl
stos
decb
call
sbb
popf
clc
outsl
mov
mov
sbb
andb
aaa
mov
cltd
cmc
sbb
and
into
jecxz
push
xchg
adc
dec
stos
push
xchg
jae
push
add
fnstenv
pop
out
adc
dec
mov
sub
jecxz
nop
andl
popa
inc
and
ja
loop
dec
xor
sub
hlt
mov
add
pop
push
flds
or
push
jne
mov
leave
decb
xor
xchg
fcomp
popf
inc
lahf
aas
ret
adc
mov
in
and
push
push
and
nop
rcrl
pop
inc
fistl
mov
mov
lahf
xlat
jge
add
or
xor
inc
subb
pop
adc
lcall
fmuls
mov
roll
adc
mov
mov
cmp
mov
push
jge
push
lret
stc
xchg
shl
sub
or
sub
lret
mov
inc
subl
xlat
pop
dec
cli
lock
push
xchg
inc
iret
inc
sub
xor
pop
pop
insb
push
dec
lods
test
shrl
pop
mov
add
mov
andb
outsb
stc
sub
loop
scas
adc
ja
xchg
in
push
mov
mov
lea
sbb
add
cmp
lods
or
xor
jb
push
insl
ds
jbe
cmp
jp
rcll
hlt
sub
xchg
and
in
adcb
inc
pop
repz
sbb
cmpl
adc
into
stc
inc
sbb
push
xchg
call
sbb
mov
mov
std
push
lock
out
aaa
pop
jmp
jnp
sbb
dec
inc
clc
les
out
incl
loopne
add
fistl
and
jmp
sub
mov
lea
cwtl
cltd
dec
in
int3
pop
gs
daa
sahf
sbb
adc
jecxz
add
sar
sbb
xchg
mov
dec
movsb
movsb
in
inc
test
imul
add
mov
leave
push
in
cli
rcr
insl
lcall
mov
out
out
loopne
cmpsl
shrl
insb
out
pop
xlat
xor
ficoml
call
inc
daa
add
cmp
jb
inc
lcall
vpunpckhqdq
imul
xor
or
sbb
push
ret
cmc
jns
push
and
cmc
jae
or
test
clc
cltd
or
and
sbb
xchg
mov
cmp
mov
xor
lds
iret
jmp
ret
data16
incl
fs
pop
jb
fstcw
rolb
dec
xchg
sbb
pop
in
dec
nop
rcl
loopne
mov
imul
nop
or
ds
cmp
test
out
pop
into
movl
cmp
jnp
add
jno
insb
xor
mov
mov
jnp
int
mov
daa
pop
sbb
xchg
xor
orb
jne
dec
xlat
sub
dec
in
fcoml
push
insb
jp
dec
add
sbb
or
cmp
jmp
outsb
ds
add
testb
loopne
hlt
mov
push
xchg
mov
int3
dec
mov
imul
adc
sub
cmp
iret
lcall
push
or
lods
jnp
xchg
and
mov
stc
or
mov
dec
xor
pop
jle
add
std
and
lods
cmp
imul
imul
ficoms
or
pop
outsb
and
in
in
mov
out
bound
xor
adcl
int3
mov
int
and
sbb
pop
push
dec
xchg
ret
gs
mov
mov
push
xor
mov
xor
jl
movsl
cmp
add
pushf
mov
add
xor
xor
dec
mov
insl
ljmp
dec
loop
cmpsb
push
mov
inc
mov
testl
mov
dec
xor
dec
xchg
xchg
jmp
insl
lret
fcoml
push
inc
aam
popf
jne
xchg
jb
jne
frstor
dec
dec
add
out
push
sub
rcrb
ret
mov
cmp
cmp
xchg
clc
cli
or
shl
jp
sarb
push
out
leave
shll
sub
or
inc
int3
je
pop
xchg
sub
jecxz
mov
or
bound
daa
fwait
xor
jl
cwtl
cmp
arpl
cmp
xor
in
divb
test
jecxz
insb
cmp
stos
imul
out
or
call
xlat
icebp
add
dec
sbb
cmc
jecxz
imul
push
arpl
adc
mov
xorl
sbb
into
enter
js
xchg
ja
push
push
mov
dec
sbb
inc
clc
sbb
or
pop
mov
lret
xor
inc
mov
ret
push
outsl
push
ljmp
outsb
add
aad
inc
jge
sbb
cmc
inc
dec
arpl
add
aam
rol
std
inc
out
xchg
push
pop
mov
das
negl
mov
pop
lods
xchg
mov
sbb
mov
out
lcall
insl
lock
sbb
aaa
adc
add
mov
into
jecxz
rclb
std
insb
add
dec
scas
push
imul
push
jmp
int
dec
sub
cmp
sub
imul
rcrb
sbb
or
int3
or
stc
call
mov
add
out
clc
dec
xchg
pop
jbe
mov
ss
jnp
sarb
cmpsb
fcmovb
repnz
shrb
or
in
sbb
jle
pop
les
insb
pop
lcall
lret
int3
xchg
cmp
in
enter
inc
dec
xchg
hlt
sbb
dec
sbb
clc
mov
rclb
cld
cli
pushf
stc
jne
dec
mov
mov
xlat
adc
sub
insb
dec
loop
fs
roll
push
movsl
add
mov
nop
jb
fistpl
lock
cmp
je
push
dec
push
jge
and
cmpsl
fisttps
mov
pop
jle
fstl
adc
mov
loopne
mov
popa
fs
mov
imul
sbb
add
push
sub
pop
push
negb
test
jmp
lea
lods
adc
inc
xchg
push
sbb
xchg
cmp
cmp
dec
jb
test
xchg
inc
inc
sub
sbb
push
xchg
xlat
xchg
xor
lods
cmp
ja
sti
mov
jns
add
jne
xor
aam
mov
out
add
ret
loope
cs
inc
mov
mov
xorb
jmp
lcall
sahf
mov
pop
mov
imul
shll
hlt
popf
xchg
lcall
adc
dec
mov
sbb
stos
jbe
popf
sbb
imul
jecxz
or
or
and
jns
pop
jae
loopne
call
test
add
push
in
add
add
sti
es
or
outsl
mov
mov
jbe
sub
test
or
jbe
leave
mov
mov
jmp
fisttps
mov
ljmp
or
mov
sar
adc
fs
or
pop
mov
push
xor
push
dec
aaa
xchg
ss
mov
idivb
cwtl
xchg
add
scas
mov
and
fnstsw
inc
xor
and
xor
jae
jne
lret
sbb
sbb
hlt
xchg
outsl
fcompl
frstor
je
les
fimull
xor
push
add
push
out
repz
cmp
pop
addr16
sbb
cmp
jp
dec
iret
outsb
je
add
push
xchg
hlt
sub
aad
loopne
shrb
cli
xor
aas
sbb
insb
ret
pusha
inc
sbb
push
jnp
loop
mov
lret
ret
adcl
mov
addb
jo
lret
jb
pushf
mov
jo
enter
sahf
and
call
outsb
test
add
xchg
pusha
lea
mov
nop
push
pop
fsubr
pusha
xchg
mov
in
frstor
pop
test
scas
and
sub
cwtl
cmp
ljmp
cmc
add
movsl
push
hlt
cmpsb
sub
repz
and
stc
sub
mov
and
lea
mov
add
test
mov
repz
add
sub
clc
pop
mov
jb
lods
xorb
addl
mov
mov
cwtl
xor
fldpi
rorb
mov
xchg
inc
adc
fldenv
dec
add
inc
movl
daa
testl
aaa
adc
pop
push
imul
push
xor
mov
or
in
int3
cmp
xor
and
add
mov
adc
jle
cmp
insl
sbb
mov
xchg
les
in
mov
inc
iret
out
add
inc
sahf
mov
push
pop
cs
pop
or
mov
mov
jecxz
pop
inc
xchg
jb
loope
mov
jmp
add
iret
mov
fcoms
data16
mov
push
add
jp
std
xchg
daa
orb
xor
push
jno
sub
add
inc
jo
negb
add
mov
xor
sub
stc
xor
sarb
sbb
sbb
gs
dec
cmp
enter
int
cmp
repz
loope
push
inc
out
xor
and
push
or
inc
fsubs
lock
jl
jmp
jg
inc
jmp
je
cmp
repnz
jo
jbe
mov
and
andl
cli
out
adc
sub
ljmp
loope
sub
dec
xor
das
mov
sahf
push
test
scas
fildll
sbb
xchg
insb
adcb
jae
xchg
mov
lea
dec
fistpl
jb
movsb
sub
bound
ret
iret
xor
shrb
outsl
cmp
add
and
xchg
stos
lcall
sub
mov
mov
xor
fidivl
push
sub
xor
dec
in
test
je
lret
mov
jbe
cmp
push
mov
mov
pop
xchg
sub
inc
push
test
push
lcall
cmpsb
mov
and
call
cld
push
push
dec
iret
scas
push
sub
xor
adcl
movsl
jae
adc
push
xchg
in
movsb
pop
cmp
xchg
dec
std
mov
bound
xchg
addr16
push
test
nop
mov
mov
shlb
shl
mov
psubsw
pop
xchg
fs
sbb
push
inc
imul
inc
or
pop
aaa
jmp
xchg
mov
aas
insb
inc
jns
sahf
cmp
test
shlb
mov
jne
xchg
pop
push
scas
xor
aas
cmp
in
mov
sub
aad
pop
dec
sub
jg
hlt
imul
adc
or
sub
cmp
inc
xchg
fadds
das
xchg
mov
jmp
and
test
fs
fmul
ret
hlt
inc
push
out
xchg
call
addl
adc
mov
in
mov
mov
jae
dec
stos
movsl
mov
insl
dec
push
lret
sub
mov
and
mov
loop
sub
push
stc
add
add
leave
sarl
arpl
push
add
push
fnstsw
out
jecxz
shrb
dec
jecxz
pusha
aam
movups
inc
call
jne
mov
sub
lret
jb
stos
add
push
outsb
icebp
aaa
gs
xchg
popa
les
stos
mov
imul
jmp
xchg
xchg
pop
fisubs
fs
sahf
mov
xor
sbb
nop
or
mov
mov
mov
jne
add
push
push
mov
add
inc
icebp
and
adc
lret
ja
test
fnsave
in
es
lahf
push
das
stc
mov
adc
mov
push
sbb
jmp
xchg
clc
fildl
or
mov
sti
or
add
icebp
int
inc
das
popa
mov
leave
xor
out
mov
jae
test
inc
xchg
jbe
sub
mov
or
jmp
dec
adc
jb
sarb
scas
pop
cltd
imul
mov
and
or
or
adc
out
cld
pop
and
mov
xchg
sbb
push
mov
out
jmp
fisubrl
add
pop
cmpsl
js
ljmp
sbb
out
xchg
xor
jo
mov
push
pusha
push
sahf
test
pop
jp
loopne
loop
cmpsb
pop
cmp
cmpsw
ret
shrl
pop
or
jg
popf
and
inc
mov
or
mov
mov
pop
sbb
orb
add
xor
fwait
sbb
mov
fisttpll
fcomps
jle
add
mov
mov
or
stos
mov
push
push
ret
iret
and
lock
outsl
scas
ljmp
or
and
mov
and
fidivrl
jmp
lods
rorb
out
jne
jno
stos
or
icebp
jg
mov
loopne
addr16
mov
pop
je
mov
mov
rorb
jle
inc
pop
mov
test
jae
cltd
jae
test
test
shlb
xor
sub
xchg
xchg
sub
xchg
push
inc
xchg
mov
adc
sub
inc
pop
xorb
sub
out
stos
inc
add
sbb
mov
mov
push
cmp
push
xchg
sbb
inc
add
inc
lahf
inc
sbb
out
cwtl
jge
dec
test
enter
jne
and
movsl
push
jo
dec
jb
pop
lds
dec
jl
push
cmp
out
cmp
sbb
jg
cmp
pop
repz
mov
int3
add
push
punpcklbw
insb
mov
mov
fisubs
sub
sub
mov
adc
sbbb
push
cmp
lcall
test
jp
mov
fdivs
lods
xchg
pop
shl
enter
lahf
in
lock
cld
cmpsb
jg
stos
xchg
rorb
ss
in
lods
mov
mov
cld
sbb
mov
xor
adc
push
movb
xchg
test
inc
test
out
jmp
push
cmpsl
sbb
ficoms
jmp
std
xlat
sbb
mov
xchg
lea
ret
inc
xchg
jne
pop
jl
mov
rcll
int3
and
pop
inc
inc
icebp
pushf
shlb
gs
roll
and
nop
add
jmp
ds
push
xor
movsb
inc
sahf
leave
pop
jns
mov
in
shlb
ret
fisubl
popa
mov
call
shrl
jbe
stos
push
adc
fdiv
icebp
shlb
leave
jl
insl
icebp
les
mov
adc
pop
scas
loop
fistpl
test
mov
into
mov
sub
lods
inc
sbb
insl
pop
lahf
and
mov
ja
rorl
and
pop
repz
aaa
mov
mov
ss
push
aaa
and
push
add
iret
in
push
dec
mov
data16
lods
outsb
ret
loop
shl
out
mov
mov
les
int3
ljmp
dec
in
scas
es
or
negl
mov
pop
icebp
push
sti
xor
lods
jg
push
cwtl
cmp
mov
fistpl
pop
xor
push
out
mov
push
xchg
pop
xchg
jae
out
sbb
mov
jno
andb
cmp
xchg
loop
or
mov
shrl
mov
fcomps
adc
repz
rorl
xor
inc
push
popa
pusha
xchg
jns
and
cmp
dec
jno
out
adc
sti
push
dec
mov
mov
cmp
imul
or
xlat
data16
mov
dec
stos
stc
sahf
dec
pop
fisubrl
inc
sub
es
sbb
out
push
lds
icebp
js
jo
mov
push
orl
push
loopne
enter
addr16
iret
xchg
and
mov
lock
cmc
movsl
cltd
xchg
or
into
push
lret
cmp
lock
adc
inc
dec
and
mov
cmp
lahf
cmp
jge
mov
pop
in
in
inc
je
in
xchg
pmullw
das
mov
or
insl
add
movsl
pop
jge
in
fistpl
leave
in
jmp
fmull
lret
push
cmc
adc
mov
pop
xchg
mov
lock
fbstp
imul
pushf
shll
stos
push
aaa
stos
push
xorb
ljmp
lock
test
into
aaa
jbe
nop
mov
pop
mov
loopne
xor
jg
lods
imul
pop
xchg
mov
adc
ret
jo
das
cmp
dec
and
insl
add
xor
mov
xlat
cmp
mov
testb
sub
pop
xor
popf
adc
outsb
lods
mov
or
mov
or
add
pop
sahf
inc
jno
mov
or
movsl
arpl
test
xchg
je
jecxz
movzwl
pop
pop
cmpsb
psubw
jne
sub
and
xchg
and
mov
jecxz
rcl
insb
popa
add
popa
dec
enter
mov
mov
dec
jbe
int3
jae
andl
test
cmp
sub
sarl
insb
add
pushl
shrb
loop
mov
and
push
aam
sbb
aam
sub
pushf
shll
cli
sub
pop
xchg
add
sahf
dec
sub
test
mov
ds
leave
sub
or
xchg
mov
push
xor
pusha
insl
imul
mov
cmp
pushf
sub
mov
fdivs
pusha
insl
nop
lea
cli
ljmp
jl
mov
inc
inc
xor
cmp
sub
arpl
add
xchg
adc
js
fwait
ret
xchg
out
pop
imul
push
test
lock
add
mov
sub
pop
cmp
imul
or
lea
and
mov
andb
sub
ds
and
cs
mov
jo
imul
movsb
je
sar
stos
enter
mov
aas
iret
in
sub
ja
inc
sub
inc
xor
jno
mov
cld
fisubrl
jae
sub
and
adc
inc
movsb
fcmovnb
dec
ds
sub
clc
pusha
call
cli
call
and
mov
xchg
lds
lcall
imul
subb
je
fstpl
dec
ret
pop
jae
add
jg
inc
rclb
adc
cmpsb
les
mov
jle
pop
inc
adc
jecxz
je
pusha
jb
insl
loope
xchg
cmpsb
add
jle
lret
fdivs
cmp
insb
add
mov
inc
clc
fs
dec
test
inc
mov
in
int3
jnp
int3
popa
jl
addl
adc
inc
jb
addr16
pop
aaa
lods
fwait
push
xor
add
or
inc
fcoms
stos
jle
stos
cmpsb
ja
cmpb
ja
or
or
rcl
adc
mov
pop
jae
sbb
sbb
popf
test
ds
dec
sub
xchg
pop
in
enter
fnsave
dec
int3
ja
inc
fmull
in
lahf
sub
mov
shlb
push
fwait
mov
popa
imul
mov
daa
loopne
or
in
cmp
add
mov
mov
sti
jnp
mov
mov
xchg
or
sub
mov
leave
std
leave
loopne
mov
nop
mov
stc
push
mov
aas
fistl
sar
sbb
int
rorl
sbb
ss
repnz
xor
int
inc
movlps
adc
pop
loopne
into
cmp
and
arpl
push
pop
movsb
cmp
add
std
mov
in
xchg
inc
loopne
push
pop
sti
arpl
pop
bound
stc
pushf
add
sbb
and
int
sbbl
mov
xchg
js
add
stos
mov
mov
xor
cmp
xchg
dec
jbe
insb
shll
add
pushf
dec
pop
cmpl
adc
jnp
sbb
adc
mov
mov
cmc
lods
loopne
push
add
dec
ds
inc
cwtl
sti
or
inc
pop
or
sti
mov
aaa
jo
jp
lret
push
cmp
loopne
loop
dec
inc
adc
ret
fcompl
outsl
pop
lods
adc
insb
push
adc
add
stos
mov
das
adc
repnz
aas
orl
loop
fs
or
cmpsb
push
scas
ds
push
jp
xorb
adc
xlat
cmp
adc
insb
push
leave
mov
mov
dec
add
pop
mull
daa
out
mov
push
icebp
xor
inc
inc
cmp
aaa
pusha
test
in
pop
jnp
mov
es
testb
sahf
cwtl
fs
lea
int
pop
jb
mov
fucompp
test
scas
mov
pop
push
icebp
scas
je
addb
pop
test
lret
adc
rcrl
mov
inc
scas
fwait
mov
or
mov
aad
jle
push
xchg
push
push
and
rep
xchg
xlat
js
jne
push
mov
adc
inc
cmp
aaa
mov
sub
cs
adc
lcall
push
jns
pushf
dec
mov
jo
hlt
cmp
sbb
xchg
mov
dec
cmp
cwtl
js
dec
and
mov
out
dec
sub
sarb
cmp
mov
mov
dec
cmp
imul
lods
in
pop
add
pop
adc
mov
mov
adc
mov
cld
or
imul
imul
out
xlat
dec
lds
cmpsb
push
fwait
xchg
jno
std
clc
lods
dec
in
std
mov
push
and
mov
lahf
cmc
xor
sub
add
and
mov
and
xor
mov
mov
jo
dec
shll
inc
test
cld
adc
in
cmc
mov
jmp
add
dec
jmp
jle
fwait
pop
inc
jmp
imul
or
sahf
xchg
add
push
jae
xchg
mov
and
or
mov
es
in
mov
icebp
cli
cmp
push
xor
mov
sub
mov
sub
mov
inc
or
dec
bound
mov
jge
sarl
mov
adc
in
clc
femms
sbb
cwtl
push
pusha
adc
mov
popa
xchg
lret
lds
mov
mov
leave
add
jg
inc
fldenv
lods
or
sbb
pop
push
ja
jmp
test
push
in
jo
xor
dec
mov
cmc
mov
stos
lods
dec
out
and
sahf
push
mov
jmp
scas
add
shlb
mov
aas
into
xor
xor
lret
xchg
in
notb
leave
pop
in
negl
adc
inc
je
rorl
out
mov
clc
cs
dec
pop
enter
sbb
stos
and
push
sbb
dec
js
addr16
ret
je
sbb
mov
lahf
repnz
pop
int
dec
in
and
cmc
sub
mov
xor
stc
pop
int3
aad
cli
xchg
iret
xchg
in
call
fidivl
in
insb
xchg
scas
jg
lahf
mov
repz
fisttpl
aas
push
cmpsb
ljmp
mov
test
cmc
jo
shlb
push
aaa
push
mov
push
stc
push
inc
inc
dec
mov
sbbl
jnp
xor
add
cmpsb
push
stos
dec
popl
repnz
xchg
xor
ss
lds
stos
jg
divb
test
mov
dec
cmpsl
dec
fstl
jp
test
mov
aad
aam
and
into
ja
cld
je
xchg
jle
clc
xor
test
fidivs
addr16
scas
dec
or
sub
clc
divl
cli
dec
mov
call
movsl
jecxz
shrl
adc
fadds
sub
add
or
or
pop
mov
lcall
out
rcr
fs
pusha
push
pop
pop
pop
mov
movsb
pop
mov
ss
loope
inc
mov
pop
pop
pop
lret
fwait
inc
mov
cs
jbe
mov
jae
lret
push
and
and
inc
insl
rcrl
or
orl
jb
ss
lcall
aad
popa
arpl
push
pushf
push
test
inc
xchg
call
pop
loop
inc
push
stos
cld
jnp
or
sbb
sub
mov
test
xchg
aaa
mov
sbb
rorl
inc
aas
xchg
or
ret
lret
aad
and
sbb
jge
stos
test
repz
push
aaa
sbb
or
cwtl
jno
jae
popa
xchg
dec
xchg
dec
or
cld
ljmp
mov
call
scas
inc
xchg
shl
test
xor
push
jbe
xchg
inc
mov
sub
push
jo
fisttps
or
sub
ja
pop
pop
cmp
call
pop
mov
mov
roll
ret
popf
js
add
loopne
cli
lods
push
cmpl
rolb
xchg
sbb
mov
xchg
jo
dec
scas
jmp
mov
or
arpl
dec
sarl
mov
daa
sti
mov
adc
fmuls
pop
lcall
stc
jae
bound
fsubs
sbb
jecxz
ret
popf
movsb
sub
in
or
mov
xor
lahf
jno
pusha
stos
xor
push
das
mov
data16
and
leave
in
pusha
out
inc
pop
push
mov
repz
push
bound
cs
adc
mov
or
loop
cld
scas
in
jbe
ljmp
arpl
lods
push
mov
das
jmp
movsb
enter
js
out
pop
adc
fildl
pop
loope
cli
flds
mov
sub
dec
adc
jo
dec
inc
and
push
xchg
data16
push
repz
jb
sti
push
jle
mov
cmpsb
cmc
cmp
iret
mov
push
push
push
out
sti
hlt
jae
jns
shrb
lods
mov
push
jl
sub
loop
mov
jmp
add
adc
enter
insl
fmul
stos
jbe
xor
mov
push
xchg
dec
leave
adc
icebp
jb
imul
popa
popa
jmp
lock
jnp
jne
mov
adc
inc
cltd
dec
xchg
mov
sbb
fwait
daa
flds
scas
inc
inc
cmp
orl
and
cwtl
fstpl
shrb
call
mov
test
leave
outsl
andb
mov
pop
stos
push
lods
imul
push
test
jle
imul
adcb
lods
subb
xlat
add
sbb
push
dec
dec
adc
pop
jae
mov
push
ds
push
repnz
mov
cmp
dec
loopne
addr16
push
sbb
repnz
xchg
dec
sbb
add
ret
inc
sarb
push
hlt
jecxz
add
xchg
sub
adc
fidivl
shll
mov
int3
adc
sti
mov
daa
fistps
sahf
and
aaa
add
ret
aad
cmpb
test
mov
cmp
inc
insl
aam
and
dec
movsb
testl
fwait
bound
sti
push
dec
adc
leave
ret
cmpb
das
lret
shll
or
enter
adc
leave
ja
or
lock
scas
out
leave
jb
inc
lret
sbb
or
out
cmpsb
inc
push
mov
inc
xchg
sbb
movl
mov
test
arpl
dec
mov
cld
add
ret
scas
push
mov
cwtl
push
inc
cli
imul
out
andl
cltd
stc
mov
hlt
test
jae
jno
negl
ja
xor
addl
int
mov
cmpb
inc
and
dec
push
adc
les
cmp
cmp
adc
xchg
cmp
cmc
mov
pop
js
push
cmp
add
sub
xor
pop
andb
pop
sub
repz
dec
inc
cmpsb
push
xchg
jecxz
pop
cltd
sub
pop
dec
or
lods
xlat
in
cli
pop
add
cld
cmp
fisubrl
nop
mov
pop
xchg
test
les
testb
stc
ret
adc
adc
mov
push
fidivs
mov
jnp
jl
mov
cmp
mov
add
movsb
pop
scas
mov
and
pop
icebp
cmp
xchg
lret
inc
mov
mov
fnstsw
inc
xor
int
pusha
mov
fsubrl
xlat
stos
mov
enter
jbe
adc
stc
insl
rcrl
pop
xchg
xor
outsb
into
cld
xorb
pop
addr16
push
mov
outsl
cmp
mov
or
cli
pop
cmpsl
and
dec
and
cltd
dec
dec
inc
or
and
roll
inc
sbb
es
xchg
jne
sbb
xor
cmpsb
mov
int3
out
stc
arpl
jmp
clc
dec
sti
aaa
mov
xor
or
mov
pop
int
xchg
inc
loope
je,pn
push
mul
sub
xchg
cmp
insb
icebp
out
dec
push
daa
fsts
sub
mov
push
loope
imul
stos
pop
in
jne
push
clc
sbb
insb
sub
xchg
shll
out
xchg
sbb
int
aaa
add
xchg
sar
xchg
fwait
aas
fprem1
lcall
push
and
push
das
aam
push
sbbb
mov
xor
les
cmp
inc
out
cs
and
fidivrl
cld
inc
jg
ja
pop
jge
pop
fs
xor
inc
xchg
adc
push
push
rorl
lods
xor
jae
sub
jl
aaa
mov
cmpsl
aad
mov
cmp
stos
adc
pusha
and
cli
add
gs
pusha
pusha
filds
lret
jl
and
or
mov
popf
fadds
iret
mov
adcb
sarl
loope
sub
adc
adc
fisubrl
sbbl
out
mov
scas
or
mul
jge
sahf
lret
and
jbe
aaa
adc
or
sti
jmp
mov
rorl
shrl
int
fsubrl
jae
fnstsw
imul
cmc
stos
adc
lcall
out
sbb
call
pop
or
nop
cwtl
out
sub
mov
lcall
cmp
mov
jo
lret
nop
jmp
pop
push
inc
daa
cmpsb
stc
jno
pop
sub
xchg
or
mov
inc
push
dec
enter
repz
int
mov
sbb
cmpsl
xchg
call
std
gs
rcr
imul
out
xchg
jnp
push
stos
cmp
xchg
push
push
test
mov
repnz
inc
inc
fsubl
test
test
sub
pop
aaa
fidivrs
pop
scas
mov
ljmp
jp
push
das
repnz
test
sub
popa
test
arpl
push
pop
xlat
push
into
dec
lods
push
test
push
andb
cs
out
out
push
arpl
and
js
push
mov
or
js
cld
outsl
ja
int3
push
mov
in
repz
arpl
push
mov
stos
inc
mov
adcb
mov
test
or
lds
inc
push
cmpsl
pushf
mov
jne
rorb
scas
lcall
mov
inc
cmp
push
out
pop
or
fisttps
mov
xor
lods
push
mov
sub
sbb
and
cmp
lock
adc
mov
rcll
insl
mov
sahf
xlat
sti
add
lock
adc
adc
jle
loop
testb
mov
loope
cwtl
mov
cli
sub
inc
sub
pop
sub
mov
in
rol
mov
mov
fdivrl
lret
push
sub
call
dec
pop
mov
and
fwait
je
outsl
pop
scas
push
mov
mov
inc
es
sbb
popf
fstpt
sub
dec
lds
xchg
shr
or
ds
scas
jecxz,pn
or
jmp
in
inc
jo
fsubs
lret
in
andb
loopne
push
or
sarl
mov
repz
in
sti
fcmovnbe
push
mov
xlat
subl
cmpsb
xchg
jne
and
frstor
push
mov
and
or
or
xchg
push
mov
test
pop
outsb
out
push
movsl
popf
lods
loope
adc
mov
push
pop
add
iret
es
cmp
in
enter
mov
lret
jno
out
cmc
push
dec
rcl
push
ljmp
repnz
pop
je
add
xor
hlt
mov
fistl
fcomps
jno
mov
mov
rorl
ret
add
adc
ja
sar
loope
orl
lds
rcll
sub
add
filds
xchg
enter
in
adc
shll
das
sub
sbb
jnp
inc
jg
ret
in
lcall
outsb
mov
lea
fcomi
jle
adc
cmp
mov
icebp
jecxz
int
mov
stos
aas
and
sub
and
xchg
std
xchg
in
inc
inc
je
xchg
pop
orb
cltd
push
imul
ds
pop
lcall
jno
mov
js
in
rcll
fnstsw
dec
enter
in
addb
stos
dec
loopne
push
rolb
lcall
ret
sbb
leave
scas
int
fistps
inc
sbb
mov
jbe
add
into
pop
and
popl
cmp
andl
xor
or
xchg
dec
cmp
inc
xchg
dec
movsl
jecxz
mov
mov
jg
aas
sbb
jnp
mov
jg
fdivl
dec
popl
jge
lea
inc
sti
adc
xor
out
mov
adc
jge
push
push
pop
repz
scas
mov
mov
mov
daa
fs
mov
push
addr16
inc
sahf
loopne
bound
enter
push
testl
lea
fisttps
fbstp
dec
stos
iret
pushf
bound
popf
call
cld
mov
mov
pop
fdivrs
mov
movsb
std
jmp
sbb
jmp
pushf
fs
fisttps
pop
mov
and
mov
imul
test
bound
test
push
mov
pop
fwait
sub
mov
insl
mov
mov
cmpsl
add
pop
add
cmp
xlat
fld
ja
rcrl
scas
mov
xor
enter
mov
add
ds
and
dec
cli
mov
mov
outsb
bound
push
and
cmp
nop
fdivrl
popf
je
ja
jecxz
mov
inc
inc
mov
mov
jecxz
shlb
bound
or
not
adc
dec
add
scas
in
ljmp
in
add
in
xchg
dec
pop
cmp
mov
and
push
inc
push
int
lret
adc
push
in
pop
fnstcw
mov
or
test
mov
lock
mov
mov
adc
add
mov
mov
mov
xor
pop
sarl
xor
pushf
cltd
lds
aas
mov
push
mov
cmp
int3
pusha
mov
mov
lret
ret
inc
loope
sub
icebp
sub
bound
insl
mov
ret
pushf
sbb
xchg
notb
inc
imul
xchg
jnp
mov
scas
lock
test
das
cmp
and
je
fistl
lods
xchg
jns
jb
inc
shlb
xchg
inc
mov
pop
addr16
in
stos
jnp
bound
push
jle
gs
inc
jge
repz
push
add
xchg
sbb
arpl
jg
mov
xchg
mov
mov
sarb
pop
push
stos
in
scas
mov
data16
xchg
cs
xrelease
pop
outsl
je
and
adc
enter
insb
add
lahf
aam
sub
adc
mov
dec
sub
add
int3
imulb
add
xchg
cmp
add
fisubl
push
icebp
jge
cmp
sub
and
stc
das
pop
xchg
popa
fwait
jle
mov
repz
push
push
sub
push
sbb
jecxz
movb
lret
xchg
icebp
mov
fimull
pop
xchg
push
sub
stc
push
ret
jmp
insb
aam
mov
imul
mov
das
sub
sbb
mov
clc
shrb
subb
ret
jg
xchg
cmc
xor
cmpsb
sub
lret
and
lcall
mov
xchg
xchg
mov
rclb
scas
sbb
test
aad
jmp
repnz
add
and
jns
dec
pop
xchg
sbb
mov
insb
add
decb
xor
dec
xchg
inc
pop
mov
sbb
cmp
adc
ret
popa
add
fucom
nop
ds
or
pop
pop
arpl
adc
nop
nop
lret
and
sub
pop
int3
inc
xchg
push
jle
pop
push
dec
or
pop
xor
inc
push
inc
xor
in
enter
jb
lret
jmp
or
push
adc
test
cmp
mov
push
add
add
dec
cwtl
lods
cmp
jl
or
das
cltd
test
xlat
ja
mov
mov
imul
aaa
mov
inc
rep
imul
and
jmp
shll
fdiv
imul
jle
mov
mov
inc
shrl
scas
adcb
push
mov
test
push
cmpsl
jne
add
notb
jle
icebp
scas
outsb
inc
pushf
in
cmpsl
gs
in
cs
jnp
fs
scas
js
sub
andl
pushl
mul
or
xchg
mov
mov
mov
roll
mov
ja
add
push
in
jns
or
sub
jae
lcall
push
or
out
jae
mov
addr16
repz
and
mov
xlat
pop
in
loope
xor
pop
fldt
cmp
cmpsb
in
or
push
stos
inc
push
xlat
adc
sti
insb
into
loope
arpl
mov
mov
adc
test
in
inc
loope
jbe
data16
xlat
adc
jmp
outsl
movb
aaa
inc
into
lods
fsub
dec
lods
lock
xchg
mov
sbb
hlt
xchg
enter
outsl
mov
icebp
inc
push
int
enter
dec
das
pop
leave
push
mov
scas
icebp
mov
xchg
cmp
sbb
pop
das
cmpsl
inc
mov
in
aam
fidivs
mov
jns
or
aam
or
loopne
sub
imul
push
aaa
adc
cmp
adc
test
mull
pop
sub
sbbl
cltd
aam
pop
loope
in
xlat
and
mov
xlat
push
loope
ret
stos
addb
dec
loope
lea
lcall
dec
pop
pop
push
fnsave
arpl
or
repnz
pop
adc
dec
je
cwtl
and
scas
xor
dec
in
sub
inc
sbb
shlb
xor
mov
aaa
out
mov
xchg
gs
push
and
fistl
mov
inc
mov
adc
add
out
push
sub
aam
out
ds
fidivs
dec
or
sti
aas
push
mov
xor
dec
sub
leave
lret
xor
shl
cmp
and
xchg
in
sub
jne
and
or
addb
int
push
loop
mov
add
addl
shll
arpl
sbb
pop
test
mov
cmpsl
call
mov
mov
mov
icebp
pop
push
insl
enter
aad
ja
out
sarl
or
rorb
insb
and
add
jge
sbb
push
shrb
dec
clc
dec
cmc
pop
mov
mov
fcomps
movsb
pop
in
mov
rcl
cli
pop
cmpsl
mov
xchg
sti
xor
daa
in
cmp
xchg
add
push
fidivrs
sbb
ficoms
xor
sti
dec
fmul
pop
aas
xchg
pop
gs
repz
adc
out
or
lret
decl
inc
test
cli
push
outsb
and
or
add
mov
xlat
int3
dec
stos
jbe
xor
jbe
sub
push
dec
and
jnp
pop
jle
xchg
dec
test
dec
test
sub
mov
jmp
push
fldenv
add
mov
fldt
or
xrelease
stos
xchg
cwtl
testb
push
mov
xchg
clc
mov
mov
jg
mov
ds
cwtl
cmp
push
int3
or
adc
es
mov
fs
jp
leave
es
push
lods
pop
add
scas
xor
repnz
inc
ret
and
in
push
pop
add
adc
cwtl
pop
jle
inc
pushl
xor
movsb
push
inc
loope
lret
xor
push
dec
mov
adc
pop
ror
movsl
adc
fildl
or
mov
movsb
int
mov
sbb
xchg
xchg
outsl
adc
mov
push
pop
sbb
jne
lcallw
imul
cmp
add
xchg
shlb
xchg
imul
lcall
cwtl
call
push
jo
cli
adc
push
mov
bound
fucomip
adc
add
push
cmp
aas
cmp
jns
xchg
sbb
mov
pusha
in
lods
pusha
xor
pop
dec
xchg
mov
pop
push
sub
mov
mov
pusha
add
cmp
mov
mov
push
mov
daa
in
ds
fsts
testl
fisubrl
mov
cmc
sbb
movsb
int3
test
push
xor
adc
fildll
inc
or
jecxz
ds
push
hlt
sub
sbb
pop
dec
int
aam
adc
inc
imul
into
adc
or
adc
pop
test
jecxz
or
mov
fsts
out
mov
cmp
jo
lods
push
js
sub
stos
or
data16
out
insl
xlat
das
xor
push
xchg
jge
inc
arpl
mov
mov
pop
aam
lds
mov
aam
lret
push
mov
inc
call
mov
sub
or
ret
xor
out
loop
loop
shl
dec
lahf
aas
cli
sahf
jecxz
rorl
jecxz
aaa
adc
mov
xchg
mov
mov
cmp
and
outsb
adc
cmp
rolb
loope
stc
mov
mov
or
pushf
xor
js
aad
mov
and
pop
sub
inc
aam
arpl
sub
pusha
dec
jo
int3
sbb
mov
adc
and
xor
adc
push
in
sti
sahf
lea
lds
in
jnp
outsl
sbb
sbb
inc
lods
lods
lds
fs
data16
inc
mov
mov
rol
pop
inc
imul
xor
xor
fmul
call
clc
int
dec
test
call
pushf
sbb
pop
inc
mov
loop
dec
xchg
push
nop
sti
adc
aaa
cltd
das
test
jp
jbe
mov
imulb
lods
push
into
adc
xor
mov
mov
movd
dec
add
cmp
loope
ficompl
xlat
push
inc
mov
movsb
cmp
fs
fwait
rcrb
pop
cs
sub
xor
sbb
mov
xchg
int
rep
push
andl
outsb
push
das
mov
and
cltd
shrb
push
and
push
pusha
xchg
subl
mov
popf
je
fcmovb
fbld
mov
cmpsb
xchg
push
lret
sub
jbe
nop
push
inc
leave
mov
lcall
pushf
sarl
pop
jecxz
push
add
xor
mov
sbb
xchg
dec
jmp
and
xor
mov
push
ljmp
ljmp
mov
or
das
shlb
jae
xchg
add
push
push
clc
rclb
mov
int3
cmp
sub
push
xchg
aaa
loopne
sub
pop
push
xchg
fwait
in
pop
push
dec
call
test
pop
out
repnz
ja
and
shl
cli
inc
xor
dec
xor
in
xchg
push
xchg
lods
push
cmp
imul
sbb
dec
fdivr
adc
js
xorb
mov
dec
sub
loopne
xchg
sbb
pop
cmp
cli
pop
mov
sub
xor
jg
jo
enter
push
sti
xchg
add
into
out
sbb
push
bound
sbb
adc
jns
xchg
mov
aam
adc
gs
or
movsb
jb
mov
int3
dec
lods
jmp
stos
xchg
xchg
sub
pop
cmp
or
xor
jecxz
sbb
arpl
aad
add
adcb
int
test
xor
rorl
ret
stos
pop
loop
adc
gs
jb
sbb
jbe
inc
aaa
cld
cmp
fimuls
sub
nop
and
jl
jmp
jg
test
test
jns
inc
jmp
out
mov
out
mov
jp
pop
add
pop
imul
dec
lds
and
dec
clc
adc
mov
lods
cli
adc
jb
js
xchg
xchg
icebp
adc
inc
ljmp
fdiv
hlt
and
sub
stc
push
das
xor
lret
jbe
int
je
mov
in
aas
mov
das
lods
call
mov
sub
inc
jb
jb
ljmp
push
push
adc
lods
mov
ds
aad
jo
mov
insl
pop
sahf
ja
movb
shl
cmpsl
rorl
pop
lcall
hlt
or
es
addr16
dec
xchg
mov
jle
mov
xchg
inc
jb
cpuid
mov
mov
imul
xchg
cmpsb
jp
nop
mov
mov
rcll
push
into
sbb
xchg
pop
xchg
pop
iret
inc
mov
xchg
adcl
out
pop
clc
mov
dec
ret
dec
jnp
icebp
leave
scas
call
pusha
sub
push
repnz
loop
adc
call
out
fmull
mov
dec
xor
jg
mov
es
push
leave
aaa
fwait
inc
les
jbe
outsb
jbe
enter
pop
push
bound
jecxz
enterw
push
sbb
scas
xorb
and
imull
xor
cmp
xchg
pop
mov
cmp
fdivrs
add
imul
fstpt
mov
xchg
push
inc
fmull
lods
iret
js
sarl
dec
jg
xchg
xchg
inc
daa
ret
dec
clc
dec
jmp
daa
jnp
jg
add
add
in
cmp
lea
xor
add
jnp
lret
ficoms
pusha
mov
in
scas
mov
dec
stc
jecxz
js
adc
shlb
imull
loopne
push
pop
sub
mov
push
fnstsw
repz
outsb
loop
xchg
lcall
fildl
popa
aad
cld
mov
jo
repnz
xchg
push
sub
pop
push
adc
lods
pop
push
xor
mov
mov
lcall
sbb
dec
ljmp
push
mov
dec
push
ret
popf
or
sbb
push
fwait
adc
add
mov
loope
leave
mov
add
aaa
imul
data16
subb
mov
xor
pop
lret
mov
cmp
aad
sub
movsl
out
je
xchg
and
inc
xchg
xlat
pop
cmp
in
cmpsl
add
enter
adc
xchg
fs
shrl
aas
nop
xchg
pop
pop
mov
sub
mov
sbb
jne
xor
xor
movsl
imull
jno
xor
sbb
imul
mov
xchg
scas
xor
mov
cmp
jg
sahf
ret
inc
xor
mov
push
fwait
outsl
inc
xlat
mov
ret
adc
sbb
add
mov
add
mov
inc
lcall
push
paddw
in
mov
push
or
clc
add
fcoml
inc
aad
out
mov
mov
pop
mov
jno
mov
movsl
cwtl
lods
shr
call
push
fcmovbe
je
mov
ret
addl
test
inc
jg
dec
mov
into
xchg
or
sbb
add
sub
imul
mov
pop
jne
lock
shll
ja
outsl
cmpb
jge
rorb
pop
adc
imul
xchg
fisubrs
and
out
mov
fsubrs
jle
testl
lods
jge
or
imul
fidivrs
out
mov
adc
nop
mov
test
or
mov
jne
fdivr
lds
and
cmpsb
fisubrl
imull
out
xchg
and
lock
jb
out
scas
lcall
mov
xchg
inc
lret
lea
sub
out
cmp
adc
cmc
pop
cmp
in
call
cmp
xchg
dec
adc
cmp
pop
jg
fnstsw
lret
mov
jl
pop
inc
loopne
fisubl
sbb
pop
mov
or
xor
mov
mov
push
pop
ror
inc
inc
adc
and
andb
inc
popf
aad
ds
mov
sbbb
rorl
pushf
pop
push
sub
push
add
icebp
jge
pop
mov
cmpxchg8b
lret
in
xor
call
cmp
add
mov
fists
or
jno
aad
or
bswap
cmpsl
addr16
ja
adc
push
repnz
scas
popf
push
adc
loopne
mov
popa
repnz
leave
xor
lahf
jbe
je
cltd
les
or
stc
fisttpl
aam
dec
lods
stc
sahf
mov
inc
ret
movsb
ds
pop
cs
loop
and
inc
insl
les
call
pop
je
fwait
sahf
stos
adc
mov
mov
xchg
insb
and
xlat
mov
xchg
pop
jo
sti
and
rcll
imul
hlt
dec
outsb
cmc
xchg
jl
pop
and
cs
in
sbb
sub
rolb
mov
xchg
repnz
cltd
or
out
jnp
cmc
mov
es
mov
push
outsb
and
ds
push
dec
xor
sbb
fmulp
mov
push
mov
rol
cli
int3
lcall
or
std
in
das
mov
xchg
sbb
loopne
aam
jmp
mov
pop
out
inc
repnz
cmp
push
shrl
inc
inc
repz
fwait
pop
or
shr
cmp
stc
xor
scas
cmc
add
inc
addr16
lea
ret
lret
pop
push
adc
outsl
cmp
fwait
insb
pop
jno
push
shrb
lcall
mov
xor
into
ficoml
dec
add
dec
cmp
outsl
lods
xchg
scas
mov
xor
data16
sbb
lock
inc
xlat
jmp
sbb
aaa
jmp
js
or
rorl
jge
hlt
rcrb
jmp
sub
adc
push
jge
add
sbb
jp
repnz
loopne
pop
mov
add
sbb
stos
mov
add
lcall
sub
idivb
add
xchg
pop
mov
outsb
pushf
pop
inc
dec
xchg
jno
xchg
inc
shlb
push
cld
xor
les
add
pop
into
push
or
add
or
push
mov
stos
add
push
adc
and
fstpl
pop
push
gs
mov
pop
lock
push
ljmp
adcl
sub
js
ficompl
pop
shrb
inc
push
jl
sub
aad
dec
ljmp
les
les
mov
pop
call
lret
or
shrb
cs
mov
stos
cmp
push
or
mov
lods
rcrl
push
inc
pop
into
xor
fbld
bound
outsb
jle
push
aam
add
stc
sbb
and
loop
lods
inc
lock
incl
decb
in
imul
bound
pusha
xchg
inc
adc
push
fstpl
add
sub
or
jbe
cli
out
xor
loop
ret
in
jmp
cmp
fwait
scas
scas
rclb
mov
in
jp
in
outsb
fbld
jno
int
rcll
sbbb
rcrb
sub
scas
inc
cli
mov
jb
lods
or
inc
cmp
xchg
jns
jae
sub
dec
jnp
push
repz
clc
cmp
mov
sarb
dec
pushf
push
push
adc
jg
scas
push
xchg
js
mov
andb
xchg
mov
push
sarb
jb
pop
mov
mov
aad
cs
stc
push
int3
push
inc
aam
stc
xchg
std
js
cmp
add
popf
icebp
pop
xchg
or
sbb
ret
rorl
in
inc
sbb
aad
or
xor
cmp
push
jge
jno,pt
aas
fildll
pop
pop
xor
jecxz
push
int3
icebp
pusha
nop
mov
sbb
push
jns
dec
lods
xchg
neg
inc
int
jnp
dec
add
aaa
push
jnp
pop
lret
add
imul
mov
sub
jnp
inc
push
pop
cmp
pop
outsl
iret
pop
enter
fucomip
xchg
push
cmpsb
rol
out
mov
and
xchg
adc
xor
in
stos
fidivs
iret
jecxz
mov
cli
jp
push
lret
testl
cltd
jo
xchg
mov
sub
incb
mov
das
add
xchg
adcb
jecxz
ss
adcb
movsb
or
mov
pop
jnp
mov
push
in
ja
adc
xor
mov
dec
lock
roll
bound
scas
cmp
mov
push
dec
add
inc
pusha
je
xchg
cs
loop
dec
mov
mov
dec
ret
jno
pop
cwtl
mov
mov
mov
std
mov
int
sti
ficompl
fsubs
cmp
adc
in
fisttpl
ret
jae
lock
outsl
sahf
insl
aam
push
xchg
and
mov
sbb
fcmovnbe
loop
adc
mov
pcmpeqd
pop
push
mov
mov
xchg
es
mov
dec
jmp
mov
js
popa
call
sbb
loopne
lahf
mov
hlt
xchg
frstor
jg
jno
mov
repz
ja
xchg
out
stc
xor
mov
pop
pop
sub
add
and
inc
dec
scas
sub
scas
sarb
out
scas
and
inc
jns
cltd
xor
mov
or
fs
mov
cmp
cmp
out
fstpl
sub
mov
dec
ret
insl
into
dec
cmp
outsl
mov
test
bound
jbe
aaa
gs
outsb
mov
fdiv
xlat
cltd
fisttpll
xchg
and
xor
inc
pop
push
push
pushf
push
ss
scas
rcr
leave
ss
cmpsl
jge
dec
out
pop
popa
jp
inc
adc
outsb
pushl
dec
or
mov
lods
int3
fwait
icebp
adc
mov
mov
sbb
adc
sbb
xlat
ja
sbb
or
addb
adc
fwait
sub
out
aam
add
push
mov
mov
pusha
lahf
test
insl
pop
sub
cli
roll
inc
aam
aaa
xchg
std
pslld
inc
sahf
cmpb
mov
aas
inc
mov
idivb
test
loop
ret
pop
ss
mov
adc
adc
push
scas
xor
movaps
inc
sbb
rorl
xchg
aaa
push
push
js
dec
xchg
xor
mov
aam
dec
addr16
sbb
xor
dec
mov
dec
test
sar
imul
or
inc
pop
mov
jno
xor
sbb
int3
jmp
ja
and
jg
xor
mov
arpl
lret
enter
xlat
lds
fldt
cltd
and
je
addb
add
mov
pop
les
fidivrs
mov
notl
pop
sub
icebp
insb
cs
xchg
cwtl
and
scas
ja
mov
xor
rolb
jno
cli
lahf
jle
pop
mov
sub
bound
mov
fldl
jne
add
sarb
fsubr
xchg
adc
adc
and
imul
fwait
mov
imul
out
inc
xchg
sti
fadds
add
movsb
sub
xchg
movsb
fdiv
push
and
sbb
add
xorl
xor
sub
inc
or
bound
mov
xlat
aad
mov
pop
test
pop
mov
repz
and
je
mov
pop
fnstsw
or
lds
ja
rclb
mov
aaa
fprem
in
arpl
scas
outsb
mov
mov
enter
dec
fstpt
xor
mov
or
or
gs
jo
rcrl
fcmovu
cwtl
dec
push
popa
pusha
pop
shlb
cld
push
int3
rcrb
dec
push
xlat
iret
in
push
xchg
push
add
push
push
cmp
fsub
scas
adc
fs
xchg
out
negb
lea
test
xchg
sahf
loop
and
mov
adc
dec
dec
ret
popw
movsl
rcrl
mov
xchg
fwait
jnp
jecxz
adc
into
adc
jno
outsb
adc
jno
arpl
bound
pop
enter
cmp
xchg
sahf
jb
dec
test
jb
adc
ja
orb
incb
jl
gs
loope
je
pop
lods
or
mov
add
inc
lock
jle
add
out
cld
pop
jno
fnstenv
pushf
jb
fldenv
pop
inc
pop
loopne
lea
mov
sbb
int
mov
mov
inc
jge
sub
insb
or
test
lahf
add
cltd
push
mov
aam
inc
loope
enter
dec
shll
mov
out
jbe
int
and
les
mov
aaa
mov
mov
test
or
inc
mov
xor
scas
pop
or
push
dec
dec
xchg
lods
mov
dec
or
inc
add
nop
out
lret
mov
xor
push
movsb
pop
mov
ficoms
test
push
lock
daa
pop
or
inc
imul
sub
scas
push
jp
pop
add
sbb
mov
fwait
add
mov
sbb
out
aaa
sbb
dec
scas
call
xor
insb
xchg
cmp
call
icebp
orl
add
pop
sub
pop
xor
add
inc
jne
cs
test
dec
fldcw
push
dec
out
mov
cli
in
add
inc
or
rorl
mov
loop
add
push
cmp
sbb
les
xchg
roll
ffreep
inc
mov
add
inc
data16
loop
jecxz
into
pop
add
and
scas
lcall
push
mov
cmp
xchg
stc
loopne
ds
stos
pop
ljmp
adc
fisttps
lds
test
inc
stos
in
ss
and
lock
sbb
addr16
mov
stos
js
dec
ljmp
push
imul
push
mov
ljmp
das
mov
cmp
add
push
movsl
mov
dec
inc
das
mov
cmpsl
mov
test
dec
mov
cwtl
xchg
or
insb
xchg
jno
xchg
sub
loop
mov
lret
ja
pop
arpl
ss
mov
xor
in
into
add
push
ficompl
mov
pop
sbb
xchg
leave
inc
adc
dec
sbb
adc
add
dec
adc
fwait
repnz
pop
and
orb
repnz
add
into
loopne
push
fwait
lods
aad
int
fcmovbe
sahf
mov
dec
popf
dec
push
jnp
mov
fistpll
fnsave
push
and
pop
jecxz
mov
mov
mov
cmc
xchg
adc
pop
sub
fnstsw
dec
popf
pop
jle
dec
lds
xchg
arpl
out
cmp
seta
sbb
xor
push
fucom
daa
cmp
pop
and
stos
inc
mov
jecxz
imul
jbe
flds
adc
aas
scas
lret
dec
enter
inc
xchg
jb
or
push
inc
loopne
sub
cmp
sub
iret
rorb
cwtl
cltd
sbb
xor
push
bound
stos
adc
lods
mov
fbld
adc
inc
push
or
enter
adc
pop
pop
jns
mov
sub
jge
cmpsb
inc
inc
mov
pop
in
imul
sti
adc
dec
adc
movsl
repnz
ficomps
arpl
fucomi
fistl
mov
out
xlat
xor
insb
mov
inc
jle
aas
mov
cmp
out
push
sbb
je
clc
add
pusha
sbb
lods
movsl
iret
or
mov
and
shlb
aaa
push
arpl
mov
retw
pop
pop
add
push
ficoml
loope
fld
dec
push
clc
int
mov
dec
scas
push
cmp
and
fwait
decl
inc
clc
push
mov
stos
mov
dec
test
add
xchg
fcom
loope
das
in
adc
es
outsb
push
pop
cmc
xchg
addr16
push
adc
test
dec
cmpsb
pushf
mov
icebp
mov
hlt
cli
and
push
pop
loope
or
aaa
pop
ja
and
dec
push
sub
cltd
out
arpl
bound
inc
rorl
pusha
ljmp
cld
push
xchg
in
mov
xchg
mov
and
cmpsb
ret
sub
or
jp
sub
fs
mov
sbb
or
addr16
test
cld
iret
pop
cmc
sarb
add
jmp
mov
les
outsl
mov
or
mov
int3
gs
dec
inc
push
in
xchg
shlb
sbb
icebp
loope
sti
xor
test
inc
inc
sub
push
cmp
dec
xlat
mov
test
notl
mov
fs
sbb
jb
push
jmp
and
call
pop
arpl
jl
shrl
in
or
lahf
cmpsl
xchg
mov
mov
or
rorb
shl
call
push
pop
xchg
sbb
fwait
push
gs
pop
dec
cmp
jnp
lret
ds
mov
clc
fsubl
adc
hlt
dec
cmp
andl
arpl
stos
inc
push
repnz
mov
movsb
testb
jo
or
int
gs
rclb
pop
inc
clc
sbb
push
fwait
mov
jb
lods
gs
sub
repz
cwtl
inc
dec
push
xchg
and
inc
xchg
repz
mov
lods
imul
xor
ret
nop
loop
and
xchg
xchg
cmpl
mov
add
jne
imul
add
ljmp
sbb
mov
cwtl
push
xor
and
dec
bound
mov
push
fiadds
cltd
mov
inc
jo
loopne
push
negb
inc
pushf
inc
adc
jl
dec
or
push
stos
int
or
dec
stos
fstpl
outsb
lret
jge
sarb
cmp
xor
popa
pop
pop
push
mov
cmp
lret
les
cmc
jbe
jae
mov
inc
ljmp
mov
pushf
dec
fnstsw
bound
jmp
aaa
or
pop
and
fiadds
cmpsl
test
ds
rcr
loope
jecxz
ss
and
loop
cmc
pushf
jge
xchg
xchg
fcmovnbe
sbb
stos
xchg
or
push
fldt
daa
sbb
mov
push
xor
sub
in
pushf
mov
cld
push
jb
loopne
dec
stos
mov
sbb
call
aas
push
push
loop
jnp
sub
roll
cmpsb
xchg
inc
test
arpl
das
dec
lock
push
mov
roll
xor
sub
lea
lret
ja
push
cltd
cmpsl
fcmovnb
pop
movsb
xor
xchg
shrb
cld
out
std
sub
ret
add
inc
lret
jne
and
inc
pusha
insb
xor
mov
cwtl
sub
cwtl
inc
out
data16
pop
xorl
push
rorb
dec
fstps
xchg
insl
stc
add
dec
jecxz
std
push
jge
out
add
fimull
mov
int3
fst
cmc
lcall
and
dec
dec
add
add
popf
test
bound
adc
push
and
inc
add
adc
inc
jae
stc
scas
jbe
sbb
mov
push
mov
add
adc
xor
sub
out
cmp
sub
add
rcll
pop
mov
sub
test
xchg
ret
jle
daa
lahf
add
lret
jge
mov
fisttpl
aas
outsb
jno
pop
and
fsubl
push
inc
inc
ss
inc
mov
repz
pop
es
or
daa
mov
xor
mov
pop
fimull
cmpsl
sbb
pushf
arpl
repnz
mov
xchg
jns
sahf
inc
jl
fstpl
mov
or
in
inc
xchg
ja
aam
int3
jo
mov
out
mov
mov
dec
cltd
push
push
cwtl
sarb
add
imul
outsl
jecxz
fistpll
mov
xchg
lret
and
dec
inc
lea
xchg
ljmp
mov
jo
cwtl
shrl
mov
pop
xchg
cwtl
aam
push
out
jle
or
jp
pop
xchg
pop
mov
xchg
adc
cmp
adc
aas
add
push
bound
mov
pushf
jbe
insl
xchg
scas
repz
pop
add
lahf
push
ds
aaa
stos
pop
repnz
imul
xchg
das
jns
inc
and
push
xchg
mov
jmp
mov
push
push
add
fst
xlat
in
sahf
lret
inc
pop
rcr
repnz
into
jae
xchg
inc
fwait
lret
mov
push
js
sti
inc
cwtl
dec
push
leave
dec
leave
push
mov
movsl
in
xchg
in
add
repnz
cmp
test
cli
divl
out
xor
fmull
ljmp
or
daa
enter
mov
cmp
inc
add
mov
sub
cld
mov
ret
mov
jg
push
dec
pop
jg
aaa
mov
inc
jne
and
adc
pop
xchg
push
pop
in
lods
mov
sar
test
ror
xchg
jl
dec
mov
mov
cltd
lahf
xor
push
enter
sbb
push
adc
hlt
fwait
int
mov
lods
in
outsl
imul
int3
ja
popf
repz
les
mov
and
adc
xor
rcl
mov
in
pusha
outsl
push
fstpl
imul
ret
stos
pop
insb
and
mov
vandnps
sbb
and
sti
imul
int
sbb
sub
dec
xchg
lret
fnstcw
imul
lods
sub
xchg
jbe
ret
adc
jne
clc
shll
fistps
jne
leave
insl
daa
cli
out
in
in
aam
adc
cmp
xor
pop
xor
pop
sub
test
lods
sbb
jae
or
fdivp
add
dec
adc
inc
pop
add
ja
add
sbb
and
add
insb
adc
jb
dec
pop
xor
jbe
push
cld
dec
dec
xor
push
or
addr16
push
adc
jecxz,pt
mov
or
mov
push
imul
fwait
sbb
pusha
cltd
setnp
push
inc
adc
test
test
fisubrs
xor
jnp
adc
add
mov
enter
sub
jge
push
adc
pop
add
mov
pop
sbb
lock
sbb
jge
add
cs
call
push
jl
cmp
add
add
xor
jmp
mov
jp
lods
push
sbb
push
xchg
idivl
je
ret
leave
or
sti
aaa
jbe
jl
sub
jo
pop
ficomps
aas
mov
sub
mov
fistl
push
fs
insl
adc
add
xor
movsl
xchg
mov
sbb
fildll
hlt
mov
fimuls
ljmp
leave
loopne
add
or
in
push
xchg
stos
mov
stos
sub
adc
ds
fsts
sbb
cltd
pop
stos
jg
fbld
adcb
cmp
jl
sbb
mov
pop
sti
and
cli
push
inc
clc
cwtl
xchg
push
clc
nop
movsl
icebp
sti
xchg
aad
xor
sbb
cmpsb
jns
enter
popa
sbb
push
push
out
shlb
mov
sub
or
jl
sbb
dec
iret
pop
fcomip
inc
aas
pop
sub
push
repz
into
rdmsr
fimuls
gs
and
loope
mov
notb
int
lret
inc
ds
pop
pushf
pop
aad
push
and
mov
sbb
and
mov
std
pusha
incl
in
mov
es
inc
mov
into
movsl
rorl
cmc
test
xor
repz
adc
jnp
dec
aaa
out
js
ret
inc
pop
dec
cli
pop
jae
cmp
cmp
mov
xor
cmp
into
aas
sbb
dec
mov
loopne
pop
add
inc
sbb
jnp
jge
daa
push
adc
jno
mov
and
push
inc
sbb
int
jecxz
clc
mov
push
stos
sub
movsb
xchg
sub
jbe
shrl
je
movsl
adc
and
jge
dec
push
add
mov
cmp
punpckldq
leave
pop
arpl
fwait
les
jle
insb
push
in
jg
push
insl
shlb
mov
dec
aam
cmp
xlat
lods
repz
mov
jae
inc
pop
insb
sbb
push
inc
imul
pop
inc
push
jae
scas
je
push
test
xor
mov
das
out
dec
add
in
outsl
mov
sahf
cmp
sub
ret
int
int
in
fimull
xchg
pop
add
mov
push
ret
jl
add
cmp
jb
push
fwait
jo
xchg
cmp
fldenv
jb
loope
scas
and
lods
repnz
xchg
push
jecxz
add
and
fstpl
and
and
lds
pop
sahf
pop
enter
sahf
fcoms
jecxz
pop
call
push
ret
pop
int3
shl
outsb
cltd
mov
jo
push
outsl
gs
sbb
push
and
sbb
sub
pusha
out
lea
lods
pop
jns
cmp
add
push
mov
xor
out
fwait
aad
fstps
xor
fnstsw
lods
push
imul
out
mov
sbb
lds
or
pop
aam
inc
mov
dec
cmp
sub
adc
cmpsl
pop
and
push
fidivrl
jle
add
movsb
lahf
mov
je
nop
mov
popf
push
mov
push
adc
out
fwait
hlt
mov
cmp
inc
aaa
cmpsl
inc
in
push
dec
stc
repz
mov
xor
movsl
jo
fisttpll
jnp
mov
jo
lahf
mov
mov
sti
cltd
xchg
cmp
push
repnz
fdivrl
orb
mov
in
imull
arpl
repnz
lcall
movsl
in
pop
push
insl
push
add
pop
pop
push
cmp
pop
out
adc
xor
push
enter
push
or
out
and
mov
cmp
and
pop
xchg
cmpsl
std
and
sbb
out
out
cli
hlt
scas
and
data16
mov
sub
inc
mov
sbb
jle
cmp
shlb
jo
lret
jnp
pop
int3
xchg
jbe
lods
ret
lds
pop
mov
xchg
lds
adc
std
ds
call
insl
test
sbb
mov
ret
mov
ds
adc
imul
ja
loop
mov
push
outsb
js
fstps
xchg
dec
add
frstor
adc
divl
xchg
lcall
outsl
cld
jle
sbbl
xor
jae
or
pop
pop
cmp
pop
xchg
mov
mov
pop
cwtl
fimull
data16
aaa
loopne
btc
mov
xor
pop
push
ret
mov
jecxz
pushf
xor
mov
je
lods
adc
push
dec
jne
mov
cltd
fildll
dec
pop
push
in
lods
mov
fldcw
and
push
mov
cmp
xchg
mov
inc
aam
outsl
sub
pop
jg
movsl
repz
and
sbbb
xchg
in
mov
enter
or
or
jl
push
or
mov
adc
dec
shll
insb
lds
out
arpl
jnp
dec
jl
lods
inc
jmp
loope
fmulp
and
sbb
or
and
cwtl
pushf
cmc
mov
push
and
adc
aas
dec
cvtps2pd
nop
into
add
adc
pop
bound
pop
sub
fwait
rcr
stc
push
xchg
mov
shr
icebp
mov
ror
jno
xchg
inc
cmpsb
jmp
pop
bound
out
pop
xor
push
sub
loopne
loopne
cmpsb
adc
movl
or
xchg
mov
adc
out
dec
xchg
pop
rorb
cmc
xchg
mov
cld
stc
imul
cli
int3
scas
fldl
mov
iret
xor
lds
daa
cmp
mov
rcrb
or
sbb
and
mov
add
jne
dec
outsb
sbb
xor
inc
icebp
mov
daa
enter
mov
jns
aas
call
jmp
in
fwait
jno
and
dec
std
sub
push
pop
mov
sub
movsb
inc
subl
jmp
inc
pop
push
sahf
pop
std
mov
ud1
and
es
xchg
dec
je
gs
cmpsl
fnstcw
pop
rorb
xor
je
test
inc
data16
js
sbb
cmp
xchg
pop
int3
jecxz
sbb
fcoms
fisubl
repz
sarl
push
loope
negb
inc
test
push
xchg
push
sub
xchg
inc
xchg
sti
add
subl
mov
mov
adc
leave
pop
or
xor
mov
shrb
cmp
sub
scas
push
fucomp
test
lea
stos
rcrb
movsb
sbb
pop
dec
pop
ficoml
inc
mov
mov
pop
rcll
sub
add
andb
movsl
pop
je
pop
or
mov
mov
dec
movsb
xchg
in
imul
push
dec
iret
in
inc
in
cwtl
mov
js
fadds
add
jne
outsb
andl
enter
inc
arpl
push
and
mov
adc
jne
add
inc
xor
inc
or
or
insb
pushf
stc
int3
mov
and
rcrb
xor
mov
movups
mov
repnz
adc
test
pop
jb
jnp
iret
pop
sarl
adc
jae
out
shll
stos
aam
mov
addr16
gs
mov
into
xlat
sub
int
in
cmp
mov
sub
pop
sbb
imul
inc
add
out
sbb
xorb
inc
imul
add
jl
mov
mov
adc
or
pop
jl
mov
mov
push
jb
in
test
or
divl
jge
in
test
xor
pop
pop
iret
loopne
sbb
push
aad
mov
cmc
sub
xchg
fwait
inc
lret
addr16
loope
or
imul
xchg
and
or
fildl
test
or
je
lock
pop
test
cmp
mov
test
pop
xorb
sbb
popa
in
cmc
mov
sub
inc
xchg
out
mov
fsubrs
hlt
inc
sahf
pop
mov
pop
dec
loopne
mov
cli
int3
popf
adc
pop
shrb
cwtl
inc
fdivl
and
aas
and
nop
es
popa
xchg
popa
jecxz
add
mov
sub
lock
in
dec
mulb
int
pop
cmpsb
jmp
pop
and
mov
jo
dec
cwtl
and
rorl
inc
jecxz
push
add
adcb
stc
cld
cltd
negl
jns
sub
out
cwtl
in
fisttpl
lock
sub
mov
and
mov
sbb
aas
pusha
push
dec
push
mov
hlt
push
or
lret
jo
mov
in
lret
imul
adc
lahf
arpl
daa
mov
test
imul
icebp
push
pop
inc
push
jne
mov
mov
or
pushl
dec
or
lock
dec
mov
fcompl
aaa
fidivs
popa
pop
aam
jo
test
cmp
dec
stc
pop
xchg
and
and
xchg
loopne
out
ja
push
jmp
test
lds
inc
adc
pop
mov
mov
ljmp
rorl
cmc
scas
xchg
rcr
cs
and
repz
cmp
adc
shlb
add
sbb
jb
inc
sti
cli
ss
xchg
cmp
inc
jge
or
js
bound
iret
adc
mov
jge
jns
jno
cwtl
pushf
imul
negb
pop
mov
js
outsb
stc
insb
daa
add
dec
repz
push
sub
push
aam
movsl
mov
scas
pop
lret
mov
xchg
mov
repnz
sub
and
pop
xchg
fisubrl
mov
test
inc
mov
call
mov
push
cltd
mov
cmp
add
cmp
add
enter
dec
pop
inc
push
cwtl
add
pop
arpl
ss
mov
jp
lret
ss
push
fidivrs
lcall
jne
roll
or
pop
fs
jg
je
dec
aad
mov
sbb
jns
jb
les
inc
sbb
fwait
popf
push
ss
loope
add
out
insl
xor
stc
stos
rorb
mov
repz
sbb
cli
xchg
fldt
movsl
mov
lcallw
mov
pop
mov
push
addl
cmp
mov
sbb
xlat
lods
add
pop
xchg
push
mov
xlat
insb
jecxz
lret
pushf
popa
imul
push
mov
add
leave
movsb
push
rclb
aad
ret
cmp
shr
push
inc
clc
hlt
iret
mov
stos
aaa
mov
xchg
or
fisubrs
adc
jp
push
into
addr16
divb
push
adc
das
xor
sahf
das
push
sbb
sarb
in
fstpt
cwtl
lahf
lds
loope
aas
fsubs
xchg
jnp
xchg
fwait
ret
ret
aaa
sahf
xlat
adc
pop
iret
sub
jno
repnz
stos
adc
arpl
mov
leave
mov
sub
imul
in
out
mov
xchg
insl
int
int
loop
aas
jge
fidivrl
shll
in
add
inc
or
xchg
lret
notl
inc
les
dec
add
mov
pop
into
xchg
add
and
inc
pop
outsl
sbb
lock
and
out
scas
mov
outsl
adcl
movsl
pop
mov
mov
xchg
out
mov
dec
jno
lds
xor
jae
aad
orb
shl
inc
fistl
out
sub
mov
in
ja
in
dec
jmp
xor
xor
mov
cs
lods
sub
imul
cmp
inc
shl
xor
push
popf
je
dec
fsubrp
mov
adc
ja
pop
or
pop
sub
dec
jle
and
ret
outsl
lods
adc
fdivr
outsb
push
addr16
test
adc
lea
adc
out
mov
and
pop
push
iret
jmp
mov
flds
or
xchg
sbb
sahf
sub
add
push
fnstsw
xchg
int3
jnp
imul
jge
lcall
outsb
fimull
pop
das
aad
sbb
clc
dec
sub
mov
loope
or
xchg
and
inc
jle
push
pop
shrb
sahf
test
int3
out
or
in
mov
cmp
mov
insl
scas
jmp
push
ret
pop
pop
sub
into
adc
mov
dec
aad
fistpll
bnd
aaa
push
pop
cltd
shrl
push
lds
cmp
pushf
push
arpl
lea
mov
popa
cmpsl
sarb
leave
jle
jb
xchg
andl
data16
add
sti
incb
sahf
es
ljmp
cmp
popf
cmp
movsb
push
in
mov
scas
adc
push
sbb
into
gs
push
nop
pop
add
sub
fisttpll
cld
adc
mov
add
mov
cld
xchg
lds
mov
push
mov
xchg
ds
fstcw
stos
or
rolb
mov
sbb
ss
lock
hlt
xor
and
push
and
incl
in
dec
xchg
inc
mov
lcall
mov
imul
js
pop
dec
adc
insb
jne
push
pop
stos
xchg
ja
or
jmp
adc
bound
int
or
test
les
mov
inc
incl
fsubs
lcall
lock
lret
mov
cltd
pop
rol
data16
xor
or
mov
mov
out
nop
pop
cmp
cmp
sub
mov
xchg
dec
imul
inc
aaa
shlb
bound
xchg
add
adc
inc
movl
sub
pop
add
dec
loopne
push
fisubl
mov
call
aaa
scas
push
inc
rcr
pop
or
mov
push
jne
or
xlat
cmp
lods
out
loop
and
add
adc
not
pop
das
jo
ficoml
cld
jmp
loope
xor
push
jo
mov
mov
and
mov
sub
cmp
dec
mov
xchg
ds
cmp
push
insb
lahf
sbb
vpcmpgtw
mov
in
iret
das
rorl
dec
in
dec
xchg
xchg
jns
mov
mov
xchg
insb
or
fstl
cmp
inc
sub
mov
fdivs
or
sti
cmp
ret
inc
lahf
mov
aad
mov
lods
push
gs
jbe
pusha
pop
jb
mov
aad
call
sub
push
pop
xchg
jne
jge
jo
lret
add
fdivrl
xor
jge
arpl
add
xor
fdiv
push
inc
push
andl
subb
in
test
jg
sbb
in
cs
cmp
adc
xchg
dec
pop
and
pop
or
mov
movsl
dec
ret
into
xor
xchg
and
xchg
arpl
sub
mov
ja
add
popf
cmp
test
pop
fdivrs
imul
mov
inc
dec
inc
cs
sub
jae
add
fmuls
pop
stc
jno
cld
or
popa
fwait
enter
pusha
test
xor
lods
fwait
jg
or
xor
mov
and
xor
inc
pop
shrb
add
pusha
aad
dec
xchg
xchg
shll
pop
xor
sub
out
mov
ja
pop
pop
in
push
mov
push
inc
pop
lret
xor
pop
pop
jge
imul
scas
bound
mov
jbe
pushf
push
out
xor
rorl
lock
mov
dec
inc
orb
negl
repz
sbb
sub
push
scas
pop
insl
xchg
aas
into
add
xchg
mov
out
jae
scas
sbbl
and
lahf
int
shrb
fwait
push
insl
pop
out
imul
inc
mul
push
rcrl
push
loopne
inc
lahf
jl
mov
mov
or
jge
jecxz
in
mov
mov
jg
mov
xchg
ret
mov
insb
pop
xchg
sbb
push
aam
incl
lods
mov
sbb
call
fsubrs
jbe
aam
out
pop
mov
loopne
cmpsb
inc
pop
or
lret
out
adc
enter
jbe
addr16
jae
sbb
sbb
xor
jmp
dec
cmpsb
fnstsw
lret
aad
movsl
negl
sbb
call
das
inc
pop
test
gs
cltd
aam
mov
lahf
mov
add
mov
ds
rol
inc
mov
rorb
loope
mov
out
and
jle
adc
dec
loope
call
pop
dec
inc
loopne
xor
inc
cmp
ljmp
xor
inc
cmpb
ret
movsl
cmp
ret
fwait
sbb
dec
and
sbb
mov
cmp
or
lret
add
in
popf
mov
jne
jg
mov
sti
outsl
lods
cmc
jne
mov
mov
insl
jmp
imul
loope
outsl
outsl
into
popa
mov
sti
loope
ja
int
orl
ret
cmp
sub
maxps
inc
add
inc
or
add
dec
or
in
push
mov
mov
mov
xchg
adc
jno
fisttps
scas
test
jne
test
testb
jge
mov
push
es
pop
or
popa
xchg
subb
imul
mov
xor
ljmp
mov
sbb
loopne
dec
mov
jbe
arpl
inc
jae
push
push
femms
ficoms
jne
xor
xchg
cmp
das
add
je
addl
jbe
cmp
mov
push
cmp
mov
test
js
lret
int
jmp
or
movb
das
push
js
test
and
adc
ja
mov
pop
add
jl
mov
jg
cwtl
shll
xchg
xchg
jb
sbb
cmp
in
pop
repnz
cmpsl
cmp
xchg
lret
adcb
and
xchg
or
imul
nop
adc
fisubl
loope
push
lock
mov
adc
out
outsb
lahf
cmc
cmpb
ror
into
or
sub
fnsave
sbb
jmp
mulps
clc
sbb
sbb
data16
sbb
movsb
jb
lret
dec
movsb
mov
xchg
cld
inc
fsubrs
insl
movsb
test
shrl
mov
mov
arpl
andl
mov
cltd
mov
mov
test
lea
xchg
in
mov
rcr
cltd
sbb
pop
push
xor
es
fists
push
adc
mov
mov
in
dec
jmp
in
sbbl
push
mov
notl
and
imul
mov
fidivrs
mov
outsl
in
in
mov
jno
pop
in
and
push
mov
inc
pop
rorb
cmc
inc
mov
loope
xor
jl
stos
push
dec
fwait
cmp
call
call
push
add
pop
mov
lahf
pop
ffree
sarb
aas
ss
mov
sub
idivb
push
and
outsb
mov
popf
mov
jge
jmp
cmp
and
repnz
ds
arpl
xor
xor
sarb
mov
sbb
mov
leave
test
lock
jecxz
adc
imul
bound
push
pop
popa
test
sub
xchg
sbb
and
pop
and
movsb
movsb
and
rcl
xchg
outsl
push
mov
xor
push
out
adc
xor
shr
lahf
int
push
ljmp
in
cwtl
push
neg
or
bound
pop
inc
mov
rorl
lcall
cs
outsl
fnop
push
mov
mov
cwtl
add
test
loop
scas
or
inc
popf
aad
sub
pop
pop
lcall
daa
dec
arpl
sub
lahf
inc
mov
adc
popf
scas
in
or
outsb
loope
lods
sbb
aad
jnp
movsb
ljmp
pop
mov
rcl
mov
push
test
cli
insb
aad
popf
cmp
lds
push
xor
rorl
jnp
xchg
add
out
mov
stc
insl
dec
rcll
std
lods
mov
test
pop
xchg
sbb
jg
outsb
xlat
int3
jb
pop
pop
insl
sub
fadds
in
and
xor
cmpsl
cld
push
in
jg
mov
lods
sbb
sbb
movsl
aas
pop
or
rcll
adc
aad
mov
push
inc
xlat
mov
imul
pop
rorb
mov
add
fdivr
pop
add
sbb
imul
shl
push
data16
mov
jmp
shl
out
mov
loop
xchg
add
dec
pop
and
sbb
cmp
daa
ja
arpl
sub
lret
mov
outsl
mov
jno
lahf
mov
jns
das
div
mov
lcall
push
stc
leave
lahf
out
sbbl
cwtl
loope
ss
adcl
int
sub
lahf
mov
bound
jmp
pop
mov
pop
sbb
int
and
mov
xchg
and
mov
pop
sub
jae
arpl
jg
sub
push
insl
test
push
les
push
mov
xchg
clc
pushf
adc
pop
addb
inc
dec
or
test
rcll
hlt
xchg
lds
hlt
cmp
pop
adc
dec
dec
lahf
stc
or
ficoms
clc
rcrb
out
mov
jg
sub
push
dec
dec
push
jge
dec
xorl
adc
and
std
jl
bound
jno
sbbl
test
loope
cmpsb
push
imul
ja
ficomps
push
mov
dec
aas
lods
aam
js
inc
or
fildl
sub
xor
mov
xlat
mulb
stos
in
xchg
in
stos
mov
lock
push
scas
lret
add
ficomps
mov
mov
lods
data16
mov
mov
scas
fisubl
lahf
les
in
mov
test
dec
ret
rorl
cmp
mov
aad
cmp
sbb
dec
push
cmp
mov
dec
push
lcall
loope
or
mov
jl
xor
add
xchg
inc
cmp
sbb
inc
in
orb
repz
mov
or
pop
sbb
push
jmp
mov
test
in
int3
or
or
pop
inc
daa
sar
xor
jp
sbb
lret
xor
cld
add
addb
add
ss
cmc
xchg
or
inc
xchg
cmp
int
push
idivl
mov
mov
cmp
int3
fisttps
in
push
addr16
and
or
push
inc
roll
adcb
mov
int3
push
adc
inc
cmpl
mov
insl
shrl
lds
dec
repz
pop
adc
icebp
and
shrl
fstpt
jnp
push
jecxz
aas
cmpsb
loop
xchg
int
mov
xlat
add
add
ret
jo
xor
daa
call
les
xchg
cltd
lds
stos
xor
mov
pop
mov
mov
jl
dec
and
aaa
mov
shll
jne
mov
xor
arpl
jae
lds
push
imul
dec
outsb
mov
jbe
push
fisubrl
jne
dec
in
clc
add
cmp
jecxz
in
movsl
insl
dec
inc
rcrl
adcl
xchg
push
push
xchg
jle
notl
test
cs
ffreep
aam
mov
sbb
test
or
lret
inc
and
shr
xchg
not
mov
mov
scas
or
jge
dec
negl
icebp
addb
pop
fistl
aad
push
ffree
push
lret
js
insb
and
mov
outsb
enter
fcmovnu
out
and
jne
dec
stos
mov
std
cltd
popa
ljmp
pop
loope
add
stc
mov
or
mov
mov
ss
bound
sbb
leave
jnp
sarl
push
adc
mov
dec
outsl
sbb
mov
cmp
ret
and
dec
inc
inc
mov
aad
and
sar
mov
subb
and
or
movsl
fs
add
push
cmpsl
or
ret
inc
pusha
pusha
pop
push
fsubs
in
mov
rorb
popa
push
lahf
push
xor
popa
mov
js
and
loop
testb
jno
scas
and
enter
adc
cli
add
jp
hlt
mov
aam
add
arpl
pop
xchg
push
cli
shll
imul
test
sub
mov
mov
stc
adc
cmp
je
mov
mov
popf
aaa
jb
and
xor
xchg
stos
sbb
jecxz
mov
stos
pxor
roll
jno
adcb
adc
fbld
ret
adcb
pushf
jp
xchg
pop
mov
stc
lods
dec
jp
les
adc
mov
inc
addb
mov
mov
fidivrs
nop
cmp
adcb
mov
call
inc
and
out
lea
inc
sub
add
push
cmp
hlt
pop
fisubs
cltd
mov
xchg
icebp
aaa
into
icebp
mov
sarb
inc
push
mov
repz
mov
or
addl
sub
lods
sti
add
out
adc
mov
pop
gs
fnstcw
mov
sbb
mov
mov
movsl
out
incw
push
or
sbb
inc
pop
jnp
not
dec
mov
and
imul
mov
paddb
dec
imul
push
lds
xor
icebp
imul
neg
cmp
in
int3
jecxz
pop
bound
test
push
mov
hlt
cmp
xor
jg
repz
push
jp
mov
jns
xchg
sbb
xchg
ret
scas
sub
mov
mov
test
dec
iret
mov
adc
or
mov
lret
ss
cwtl
jle
mov
in
mov
ds
dec
xor
and
jmp
enter
mov
add
ss
data16
jl
les
movsl
sub
fucomi
lds
pusha
mov
sahf
imul
cmp
decb
ret
sub
mov
int
mov
xchg
test
adc
xor
loopne
inc
repnz
pop
add
outsb
inc
cld
or
lret
fisttps
outsl
cwtl
sub
das
or
xor
popa
hlt
xor
dec
cld
loop
mov
sti
out
xor
pop
and
mov
lret
mov
insb
dec
jp
xor
mov
test
mov
cli
lods
add
xor
mov
les
ret
xor
fadd
mov
ja
mov
leave
loopne
in
dec
mov
inc
xor
imul
mov
jmp
scas
dec
fsubrs
sub
mov
xorb
add
jne
iret
lcall
fcomps
fisttpll
jle
pop
mov
incb
in
dec
adc
jle
mov
jle
and
sbb
ret
dec
adc
mov
cmp
in
or
les
bound
cmp
stc
xchg
adc
jnp
imul
mov
cmp
ss
iret
jecxz
jae
xlat
inc
pop
xchg
dec
sub
in
mov
insl
cmp
ja
and
scas
xchg
imul
mov
movl
test
cwtl
inc
mov
adc
jmp
sbb
popa
int3
movsl
aam
mov
mov
push
push
mov
pop
lds
loope
mov
mov
inc
fsts
mov
mov
or
fwait
rcrb
addr16
popw
out
jl
movsl
mov
das
or
outsb
pop
movsbl
pop
test
inc
out
sub
dec
add
neg
mov
imul
jae
lock
iret
cld
sahf
out
jmp
and
mov
call
add
pop
pusha
arpl
shrl
negb
jns
inc
mov
jle
outsl
push
test
push
pusha
sbb
lods
jbe
add
ja
imul
cmp
insl
pop
mov
cmp
je
push
push
in
cmc
lods
xchg
mov
addr16
aam
add
aaa
mov
int
dec
sbb
adc
mov
cli
inc
pop
mov
loope
or
jle
jbe
mov
jno
and
mov
stos
sbb
add
jmp
insb
and
pop
es
cmp
fcoms
mov
loop
rol
scas
jge
push
mov
insl
mov
lods
sub
notb
into
rorb
fs
mov
lret
mov
mov
test
pop
dec
fld
push
dec
call
mov
jno
rorl
nop
dec
cmpsl
stos
orb
mov
mov
js
adc
outsl
push
add
jecxz
decb
xchg
ljmp
cld
cmpsl
sub
lock
and
dec
in
pop
test
fsubrl
imull
adc
adc
es
scas
add
inc
mov
roll
cmc
ljmp
aas
repz
mov
sub
or
sub
das
jp
in
pop
sub
rolb
dec
into
inc
inc
out
jge
movsb
mov
cmpl
xor
pop
std
rclb
mov
mov
cld
sar
sbb
lds
add
ja
sub
pop
inc
aas
jo
mov
inc
inc
mov
enter
rcrl
arpl
xchg
sbb
adc
push
adc
ret
and
sbb
pop
insb
jecxz
clc
inc
jno
fcompl
iret
jge
mov
jecxz
jo
mov
jno
pusha
push
jb
test
adc
sub
push
cli
popa
fnsave
pop
jecxz
cld
mov
jge
mov
xchg
bound
mov
sbb
out
loope
jnp
pop
adc
pop
aad
pop
in
andl
jmp
push
push
int
mov
jb
and
subb
movb
imul
cmp
and
inc
sbb
outsb
dec
mov
sbb
push
je
cltd
and
dec
movsb
in
pushf
ss
sbb
cmp
mov
sahf
sub
xchg
cmp
jnp
out
aam
jmp
jns
adcb
pop
lods
pop
dec
loopne
shll
inc
cltd
jo
jecxz
repz
fsubr
sbb
mov
daa
mov
inc
out
xor
add
mov
lret
es
sbb
movsl
mov
pop
jg
mov
ds
movsb
out
push
fildl
imul
fcmovu
dec
pop
dec
xchg
lcall
sub
loope
mov
movsl
sti
ffreep
xor
push
push
shll
ja
pop
rcr
pop
inc
out
add
fstpl
jle
sub
mov
or
pop
stos
sub
pop
mov
jnp
outsw
cmp
xchg
sub
in
lods
inc
cmp
in
lahf
sarb
cs
jmp
lea
cmp
lea
jle
inc
ljmp
das
addr16
adc
ljmp
or
lods
or
pop
sahf
sbb
mov
sbb
daa
sbb
pusha
push
add
jge
fstl
push
aad
push
imul
add
mov
lcall
cltd
jle
mov
js
xor
sub
mov
aad
dec
jo
or
sbb
mov
jecxz
lcall
aas
test
call
cmp
aam
mov
add
xchg
std
cs
jnp
jg
in
in
cmc
mov
bound
lcall
shll
mov
inc
test
xchg
and
push
push
lcall
cld
mov
aaa
lods
outsl
lcall
xor
push
and
mov
xor
mov
repnz
outsl
dec
cmpsb
xor
rcll
mov
cli
bound
xchg
das
subl
or
aas
push
pop
mov
jb
xor
and
ljmp
sbb
out
dec
movsl
adc
aam
xor
es
cmp
jbe
mov
call
fiaddl
cmp
cmpsl
rol
mov
sarl
aad
sbbb
inc
mov
or
pop
lods
push
pop
mov
push
out
cmp
into
mov
adc
sbb
shrl
mov
mov
push
push
mov
cmp
mov
xchg
xlat
std
adc
jge
or
stos
xchg
out
ffree
int
jmp
pop
ror
or
mov
aas
insl
loop
fists
and
cmp
bound
cmp
test
or
cmp
or
and
pop
loope
xor
fs
sbb
sub
int
loope
adc
cmp
stc
jne
icebp
jle
popa
shr
out
cmp
mov
adc
sbb
pop
aam
xor
je
inc
fsubr
mov
inc
popa
enter
fistpl
push
jbe
mov
xlat
jl
and
pop
movsl
and
les
insl
jecxz
xchg
ret
xchg
lds
pop
dec
mov
jecxz
push
sbb
aas
lret
push
out
xor
es
ss
in
pop
repnz
imul
add
lods
add
xchg
mov
xchg
and
test
fidivrs
mov
lds
xorl
push
test
std
mov
aas
fldt
mov
pop
lock
sbb
lret
jo
xchg
mov
mov
jge
pop
imul
inc
test
mov
sarb
std
jmp
xor
or
mov
outsb
push
xor
imul
push
pop
push
adc
lahf
shl
cmp
and
shrd
push
push
fyl2x
and
in
movsb
and
fisttpl
adc
dec
add
stc
add
test
cmp
jge
add
mov
cmp
xchg
lods
xchg
mov
into
shr
sub
cmpsb
test
ljmp
rclb
sbb
dec
rcll
cmp
or
ja
dec
fisubrs
sbb
mov
dec
fisubl
rorl
jno
rcll
and
shrl
cmp
pop
xchg
push
add
ja
jl
rcrl
icebp
mov
mov
push
add
stc
adcl
mov
subl
in
dec
test
adc
pop
adc
dec
loopne
xor
enter
loop
out
imul
inc
shrb
dec
hlt
popf
push
adc
stc
ljmp
lcall
mov
jmp
xchg
stos
jl
subl
mov
fistps
inc
sbb
std
mov
xor
xor
int3
xchg
dec
inc
xchg
jb
in
jg
jecxz
sbb
mov
les
pop
inc
push
mov
mov
test
aad
call
cmp
pusha
fiaddl
movsb
sahf
adc
xor
addr16
ljmp
jge
or
push
je
in
pusha
add
push
notb
aam
dec
pop
pop
adc
dec
iret
jb
fxch
mov
jo
mov
cltd
imul
mov
cmc
jnp
dec
adc
pusha
jb
xchg
push
push
cmp
and
jge
xor
frstor
js
out
sub
and
nop
shrb
dec
sub
fsub
xor
andb
fldln2
mov
dec
mov
adc
test
loope
push
mov
xor
or
jmp
ss
into
gs
fidivl
fmuls
jns
or
jle
pop
push
mov
mov
mov
into
stc
push
jno
ret
dec
jge
sti
adc
jne
ret
sti
inc
enter
push
bound
inc
push
test
ds
shrb
call
cltd
xchg
arpl
lds
jmp
cmp
ljmp
mov
pop
sahf
pop
cmpsl
jae
mov
out
aaa
jno
lods
mov
jg
cli
sahf
scas
push
jge
push
jge
push
fidivrl
lods
cs
sti
pop
mov
push
push
in
aad
aam
sbb
imul
loope
icebp
jbe
cmc
imul
shld
jne
pusha
pop
cmp
lea
xor
jp
int
xchg
xchg
xor
pop
aaa
sub
fcmovnb
icebp
jne
xchg
xor
push
mov
sarb
add
xchg
insl
fnstenv
jne
cmp
jb
dec
stos
lret
xor
ds
push
mov
daa
mov
mov
adc
cwtl
cmp
mov
icebp
in
mov
xor
fsubrs
xor
icebp
add
in
xor
aam
shl
imul
cld
fdivs
inc
mov
in
jns
jmp
stc
cmp
fwait
nop
sub
xchg
dec
or
or
insl
add
mov
rcl
cmp
in
rolb
shrb
mov
sub
scas
pop
sahf
cmp
mov
cwtl
xlat
push
out
pusha
inc
fsub
adc
imul
mov
mov
or
and
sti
divl
push
cltd
and
pop
mov
sub
into
outsb
jmp
dec
inc
repz
js
out
cs
jnp
shlb
push
and
push
jl
movsl
cmp
dec
cld
pop
enter
xor
xchg
cli
cmpl
mov
sub
lret
leave
scas
movsb
lret
cmp
xor
mov
aaa
sarl
dec
int3
popl
mov
add
jmp
dec
xchg
mov
push
push
add
fsts
or
test
lea
imul
icebp
lock
jnp
leave
loop
fldenv
sti
dec
mov
mov
inc
inc
jbe
data16
popa
test
es
pop
mov
shll
adc
adcl
test
pop
shll
fimull
notb
test
jmp
aam
sbb
outsb
lcall
out
adc
sub
mov
leave
test
rcll
cmp
in
ljmp
pop
fisubrs
pop
add
inc
sbb
outsb
int
and
cmp
nop
fmuls
or
enter
inc
xchg
aam
decb
pusha
jae
inc
mov
jo
jb
xor
gs
push
jno
sarl
push
jmp
jmp
or
mov
push
icebp
mov
out
push
lock
scas
out
jmp
adc
pop
mulb
inc
es
jae
sarb
push
push
test
sub
push
pop
sub
sbb
sub
outsb
cmp
inc
adc
pop
xor
inc
or
push
lock
inc
cli
dec
sbb
dec
hlt
rcrl
push
pushf
sbb
sbb
adc
sub
dec
lret
sti
or
rcr
iret
lea
adc
jle
dec
cmpsl
rcrl
cltd
mov
adc
xor
repnz
inc
js
push
sbb
je
loop
xchg
aaa
xchg
push
repz
pop
lahf
sub
adcl
add
scas
pop
add
push
mov
mov
jecxz
cwtl
add
push
adc
and
cwtl
xor
inc
movsb
scas
int
daa
cmp
test
inc
jp
mov
scas
cmp
pop
cltd
js
pop
scas
sbb
sub
ja
aam
xor
arpl
stos
out
ret
jge
mov
cmp
test
push
es
xor
ja
pop
mov
push
lcall
pop
sbb
sbb
jecxz
fst
frstor
push
sbb
xlat
bound
gs
mov
out
and
sub
icebp
xor
stc
dec
shrl
inc
mov
mov
shll
out
cmpsb
push
cli
push
sbb
in
ficomps
mov
dec
pop
push
outsl
in
sub
or
inc
cmp
jns
sbb
adc
lcall
outsb
divb
jmp
inc
and
jnp
push
push
ds
dec
jae
call
nop
cld
scas
sti
jmp
cmc
test
js
pushf
arpl
jle
js
je
insb
mov
or
cltd
cmc
add
imul
ljmp
mov
mov
inc
or
adc
scas
dec
mov
mov
inc
cmpsl
leave
dec
add
jmp
xchg
fs
fldcw
enter
and
ret
addl
push
push
xlat
xor
push
jge
popf
mov
in
ja
pop
cld
lret
mov
sbb
and
fcmovne
cwtl
dec
out
mov
mov
enter
popf
out
and
xor
mov
mov
aaa
fmuls
mov
push
adc
mov
aad
dec
loopnew
test
into
repz
cmpsb
adc
jnp
daa
dec
test
addr16
jb
dec
inc
jno
jae
push
push
and
andb
ret
test
sbb
fcoms
or
test
push
push
jns
mov
lret
xchg
test
jle
es
les
xchg
jns
add
icebp
pop
push
les
mov
xchg
fstpt
xchg
pop
aad
stos
movsl
mov
push
cmc
call
shrl
shr
lods
out
loop
jne
inc
mov
iret
add
or
or
pop
lock
ret
dec
sahf
and
jge
popa
pop
jecxz
cmpsl
push
clc
imul
push
insl
daa
out
imul
cltd
ja
mov
lock
xor
and
bound
fcompl
jmp
and
mov
push
mov
jl
add
icebp
loopne
jae
push
js
ljmp
push
inc
pop
mov
push
clc
xor
loope
lcall
lret
push
adc
lods
mov
shll
adc
ficompl
inc
sbb
or
repz
lods
mov
es
add
push
jp
idivb
push
xchg
mov
jle
das
fistpl
std
xchg
adc
ret
in
adc
adcl
inc
dec
mov
or
imul
mov
popf
mov
push
es
jle
xor
neg
test
ret
es
jge
and
add
into
iret
lds
xchg
add
dec
adc
lahf
dec
fwait
inc
mov
add
sub
mov
mov
stos
push
add
pop
daa
jmp
pop
sbb
rcl
sete
aas
fiadds
sbb
and
std
scas
loope
das
and
jl
mov
cmp
outsl
stos
cmp
or
clc
ss
daa
mov
mov
lock
sub
and
leave
les
push
sbb
pop
adc
in
push
mov
xor
inc
imulb
js
pop
mov
sub
xor
js
mov
repnz
add
or
ret
xchg
push
xlat
inc
cmp
loope
adc
cmpsl
xchg
push
pop
or
inc
cld
rol
imul
fisubs
testb
jl
mov
nop
push
ret
insb
xchg
mov
jb
jg
std
cmp
dec
cli
shrb
sbb
testb
nop
sbb
aaa
out
cmpl
inc
lret
push
ficomps
xor
mov
enter
dec
ret
das
imul
jmp
out
leave
push
ja
mov
ds
cmpb
iret
in
inc
push
cmp
xor
leave
add
out
aaa
inc
inc
pop
jmp
cld
jo
mov
enter
sbb
mov
dec
inc
loop
jge
icebp
cld
xchg
push
nop
dec
jp
loop
sbb
or
testb
aad
rorl
xor
test
sub
pop
movsl
adc
arpl
decb
push
lods
lret
hlt
call
adc
in
jbe
adc
je
mov
pop
and
shlb
cwtl
or
aad
fmulp
xchg
ljmp
in
jno
or
lock
rclb
icebp
jb
lret
ss
pop
add
popa
in
stc
imul
inc
lahf
hlt
loope
aam
sbb
ljmp
aad
into
imul
or
add
mov
imul
ja
cmp
imul
enter
mov
aas
push
push
mov
repnz
out
xchg
sub
out
fiaddl
jg
add
inc
dec
jmp
sbb
pop
cwtl
loop
popa
icebp
out
test
cmp
rorb
inc
mov
outsl
sub
jbe
shlb
in
pop
add
cli
cmpsl
aas
pushf
pushf
mov
fistl
scas
int3
mov
add
hlt
xlat
std
inc
pop
hlt
int3
adc
jmp
cmp
push
sbb
out
dec
fsubl
cmpsb
repz
push
add
push
pop
cli
xor
pop
imul
mov
sarb
test
aaa
and
xchg
clc
clc
negl
insb
mov
pusha
sub
pop
xchg
sti
test
in
sti
cld
into
xor
dec
fistl
cmpsb
pop
adc
add
arpl
jae
adc
mov
or
pop
cmpsl
push
inc
dec
movsl
enter
mov
pop
fsubp
xchg
lock
push
adcl
jbe
xchg
ret
inc
or
insb
push
jecxz
pop
jne
mov
imul
cmp
jg
test
popa
call
xor
loope
mov
pop
iret
in
lret
pop
test
ljmp
inc
inc
cmp
dec
sbb
push
out
or
in
add
cltd
push
sahf
fistl
pop
flds
sahf
aad
and
fisubs
lods
jne
movsb
add
push
adc
in
gs
cwtl
push
mov
lods
mov
pop
push
xchg
fcomi
xchg
xor
sbb
jl
in
sub
test
lea
pop
jae
orb
mov
cmpsb
inc
xchg
cmp
mov
clc
lret
int
xchg
lahf
cmc
inc
mov
movsb
lcall
push
push
shrb
push
xchg
fistpll
call
xchg
cmp
fcmove
dec
pop
dec
in
jo
cmp
rcrl
loope
cmpsb
popf
add
sbb
dec
test
cmp
xorb
pop
repz
mov
jnp
lcall
xchg
sub
sub
lret
xchg
push
iret
xor
fcoms
fimull
add
sbb
jbe
xchg
push
pushf
xchg
insl
popa
and
mov
outsb
pop
jbe
jge
pusha
pop
ret
andl
adc
ds
inc
js
mov
fidivl
push
or
repz
pop
inc
ss
fs
xchg
jnp
adc
mov
push
xlat
inc
ds
dec
mov
imul
add
mov
push
pop
pop
and
cmp
roll
sub
sbb
insl
sub
lock
into
pop
xchg
loop
adc
iret
clc
jae
lds
mov
mov
orl
in
mov
push
pop
xchg
iret
jae
int3
outsl
dec
repnz
cld
ja
sbb
pop
push
inc
jmp
in
jp
ja
stos
mov
loop
pop
clc
mov
jp
sbb
mov
inc
sarl
push
sub
xor
mov
jnp
lods
ja
xor
mov
pop
je
int
aam
out
mov
das
cwtl
or
lcall
nop
test
xchg
lods
adcb
dec
aam
xchg
xlat
jp
pop
div
and
push
or
daa
out
push
add
dec
mov
mov
out
mov
lds
xchg
jne
popl
pop
loop
test
and
cmc
sbb
cmp
inc
sti
push
int
addl
xchg
in
mov
xor
and
push
cli
aad
inc
test
out
ljmp
mov
inc
pop
jl
cmp
sub
mov
xchg
sub
insb
jle
in
shrl
and
sbb
not
fadds
out
sub
and
scas
inc
ja
shll
lret
cmp
scas
xchg
mov
xor
mov
and
cmp
mov
out
test
mov
daa
and
scas
sub
mov
std
lds
push
push
inc
push
xchg
jbe
out
push
cmp
popf
push
outsl
ljmp
xor
sahf
fldl
data16
shl
ja
pop
pop
aas
enter
dec
mov
sub
roll
imul
jmp
sbb
xchg
insb
push
or
pop
sbb
in
test
ljmp
fs
push
push
inc
enter
insl
bnd
mov
decl
push
inc
ret
int
fsubl
push
sbb
and
dec
out
inc
imul
jbe
push
mov
xchg
sub
inc
mov
cmp
ja
adc
jnp
mov
out
jge
xchg
inc
add
inc
out
inc
lds
mul
add
jnp
daa
adc
movsb
fcmovnb
dec
int
adc
sahf
sub
cmp
push
cmpsb
adc
dec
test
loop
divb
mov
push
repz
or
sbb
fs
aas
add
sahf
xor
pop
stos
xor
fcompl
adc
pop
or
xor
fiaddl
test
mov
sbb
in
inc
lcall
sbb
repnz
xor
das
inc
cld
out
inc
dec
cmpsb
jno
jb
inc
cmp
jae
add
pop
mov
mov
and
addr16
clc
push
mov
lret
nop
fmuls
fistpl
jmp
lods
jmp
imul
mov
adc
decb
jg
push
insl
scas
mov
bound
leave
sahf
in
arpl
adc
push
pop
movsb
jns
push
les
insl
addr16
shl
mov
push
leave
cld
pushf
mov
adc
adc
xor
cmp
into
adc
mov
or
jge
adc
outsl
mov
daa
aas
sbb
cld
jnp
outsl
arpl
fstl
inc
pop
ret
fcmovb
cmp
dec
add
sbb
adc
test
mov
mov
mov
cld
jns
jge
sbb
insl
lea
subps
cmp
movsb
and
xchg
add
data16
or
nop
pop
mov
sub
cld
mov
adc
test
js
mov
push
in
mov
je
popf
add
movsl
iret
cmpsb
enter
mov
ret
mov
ja
push
fwait
movsb
add
sub
cmp
or
push
xchg
es
ds
pushf
mulb
push
sub
xor
and
add
jne
xchg
shll
sarl
aaa
push
out
sbb
jl
out
xorl
jne
sbb
adcb
mov
pusha
add
out
cmp
mov
pop
cltd
shll
add
rolb
imul
pop
mov
ficoms
mov
mov
push
cmp
shlb
jg
mov
hlt
xorb
jl
subb
jg
jmp
push
push
mov
mov
shl
xchg
sub
stos
std
dec
mov
shr
inc
or
adc
fs
add
es
mov
jge
pop
adc
and
jmp
mov
sub
or
faddp
sub
pushf
inc
push
in
mov
and
nop
mov
aam
in
out
cwtl
xlat
ljmp
jmp
lcall
jnp,pt
or
rcr
ljmp
clc
adc
or
nop
mov
xor
outsb
inc
es
or
and
stos
outsb
inc
test
inc
adc
sarb
mov
int
int
popf
sbb
ljmp
jecxz
jae
dec
fmull
mov
movsb
mov
mov
scas
fdivrs
add
repnz
dec
iret
jge
mov
jge
mov
popa
add
inc
sub
mov
pop
enter
lret
in
imul
jl
pop
sti
jbe
mov
outsb
adc
ret
jle
es
sub
pop
movsl
dec
imul
sti
insb
jmp
jo
inc
or
aam
jecxz
test
movsl
pop
mov
popa
lcall
jl
xchg
push
in
pushw
cmpsb
pop
dec
push
sti
mov
jae
xlat
or
or
jecxz
jp
fstpl
push
cmp
and
xor
sbb
pop
loopne
sti
sub
jo
aam
pop
push
pop
mov
fcoml
push
mov
jb
mov
insb
sub
test
mov
aas
sbb
jg
fwait
sub
push
sub
out
fld
mov
pushf
mov
out
adc
xchg
test
arpl
adc
repz
mov
sub
popf
out
xor
jecxz
mov
lret
xor
jmp
lds
loop
idivb
mov
lock
cmp
push
jb,pt
mov
in
lods
xchg
ss
mov
dec
repz
push
addb
xchg
dec
push
mov
inc
bound
jl
notb
jle
sti
aas
test
cmp
xlat
push
popf
fidivrl
ja
sbb
fstps
jnp
pop
jnp
aad
sub
mov
aad
addb
add
js
mov
mov
add
fstpl
xchg
ss
xor
adc
pop
cmp
dec
cs
jbe
or
sahf
int
and
lds
je
ja
stc
push
orl
dec
xchg
inc
mov
inc
enter
mov
jle
shl
xorb
pop
push
insl
call
ja
repnz
or
mov
ss
lret
inc
ds
aad
and
and
inc
sbb
dec
aam
std
push
fstpl
push
xchg
lods
mov
or
adc
xor
push
scas
icebp
repnz
js
lods
adc
xchg
les
and
mov
push
push
add
addl
xor
sbb
fsubrs
xchg
mov
iret
sti
or
popa
es
and
enter
push
fnstcw
repz
rcl
lock
cli
sub
sub
dec
sti
insb
call
xchg
xchg
enter
jmp
mov
fwait
push
pop
jne
inc
inc
pusha
outsb
cwtl
iret
mov
fs
mov
pushf
push
sbb
pop
adc
test
push
loope
sbb
ficompl
sarl
or
pushf
mov
mov
mov
mov
ret
inc
shll
data16
mov
add
repz
or
push
cmp
imul
fscale
mov
cmpsl
pusha
adc
push
mov
pop
in
cmp
enter
push
fs
cwtl
sbb
cmp
lods
leave
pop
loope
cmc
mov
ja
mov
push
xchg
sub
add
call
insb
xchg
fiaddl
outsb
mov
mov
dec
xchg
mov
or
pop
mov
pop
int3
xor
add
testb
mov
xor
cld
add
cmp
popf
sbb
mov
sub
outsl
push
cmp
ja
mov
jp
sub
cmp
or
movsl
int
pushl
int3
push
stos
jbe
les
outsb
insl
in
nop
mov
dec
push
fwait
cmc
cmpb
mov
mov
cmp
pop
adc
sbb
daa
loop
add
fstpl
or
xchg
stc
adc
push
arpl
lods
int3
mov
mov
sbb
repz
rcrb
or
js
sti
sbb
add
jmp
aam
sub
mov
pushf
icebp
repz
dec
movsb
stos
dec
inc
sub
scas
push
cli
hlt
js
push
mov
jmp
inc
int3
push
faddp
and
jae
cld
movsl
mov
out
mov
lret
das
or
xor
js
mov
mov
dec
jg
pop
sahf
dec
cmp
ds
sub
outsl
inc
test
push
push
repz
pusha
loop
mov
test
pop
xor
fimull
push
adc
sub
shll
sahf
xchg
inc
addr16
dec
mov
lahf
cmp
sub
push
and
xor
jg
in
es
jecxz
cmp
sarl
dec
or
cmp
aaa
mov
cmp
lret
out
mov
sbb
mov
dec
pop
mov
andl
fwait
mov
sti
mov
popf
push
inc
rol
iretw
mov
add
push
push
push
je
lods
dec
fimuls
out
sarb
ss
inc
adc
shll
adc
arpl
es
addb
mov
dec
scas
inc
outsl
sbb
xchg
jbe
sub
addr16
push
adc
jno
outsl
pushf
or
mov
xor
pusha
inc
mov
cmpsb
and
fistps
cs
sub
pop
dec
in
lock
pop
sahf
mov
jae
loope
nop
push
or
dec
div
xchg
aaa
pop
push
iret
pop
dec
add
jne
pop
xchg
int3
out
popf
test
aam
aaa
jecxz
bnd
jb
sub
push
xor
into
pop
push
cltd
or
or
jl
add
fcom
push
lret
inc
test
xor
fistpl
paddusw
jb
push
out
imul
or
popf
pop
stos
inc
pop
add
adc
sahf
test
dec
adc
movlhps
dec
dec
arpl
lret
js
ret
js
jecxz
cmp
aam
loopne
inc
mov
xor
xor
and
mov
adc
add
xchg
xchg
mov
xchg
in
or
icebp
mov
movsl
movsb
lock
push
sbb
lret
cld
test
push
adc
subl
inc
xor
mov
sti
scas
sbb
shrb
sbb
outsb
pop
stos
dec
js
xchg
repz
inc
scas
cmpsl
mov
pop
andl
dec
stos
ror
cmp
gs
jb
shlb
cmp
sahf
test
fucomp
outsb
pop
jg
test
dec
gs
iret
in
outsb
jbe
lahf
adc
or
mov
addb
jae
mov
clc
mov
fstps
std
mov
and
repnz
ljmp
mov
in
int
inc
daa
lcall
outsl
iret
inc
adc
and
cmpsl
call
push
push
dec
adc
and
adc
cmp
int3
lds
cmp
pop
pop
int
cmp
jnp
adc
mov
add
addb
rcll
add
imul
cmp
adc
push
lods
out
and
xor
test
loope
cmp
cmp
xchg
dec
dec
subb
std
push
or
fwait
test
lods
cmp
lea
mov
lds
stos
test
rol
push
mov
aad
out
inc
addr16
inc
jecxz
jmp
movsb
nop
insl
rclb
bound
aad
jp
cmp
lea
inc
call
aas
pop
cmpsb
mov
std
cmp
mov
dec
cmp
mov
stc
pop
ss
rcr
in
jne
filds
jnp
insb
cmp
aam
mov
ss
mov
sbb
stos
mov
dec
pop
adc
mov
stos
into
and
and
pop
lret
mov
clc
dec
push
testb
xor
dec
jge
and
xor
pop
push
sub
scas
or
in
fildll
ja
dec
pusha
sbb
cmp
sbb
hlt
and
inc
sbb
jmp
mov
dec
jmp
mov
push
in
js
jbe
clc
lods
xchg
aad
stos
mov
pop
cld
mov
outsb
fwait
sbb
std
test
ljmp
lcall
fxch
js
mov
outsl
mov
or
sahf
fs
jb
cwtl
dec
or
dec
dec
xchg
pop
xchg
dec
out
clc
in
idivl
out
xor
shlb
pop
cwtl
nop
lahf
xor
outsb
daa
sub
clc
jo
jecxz
cmp
push
insl
inc
in
pop
mov
mov
sbb
mov
pop
cmpsb
mov
aam
movsl
stc
pop
and
imul
loope
mov
add
jne
pop
jmp
xchg
es
push
mov
mov
inc
jne
push
sub
out
sbb
loop
jle
jl
pop
ss
in
mov
rcll
sbb
loope
adc
rcll
pop
icebp
inc
mov
iret
mov
in
and
loop
ljmp
aaa
iret
orl
outsb
push
mov
or
shll
ja
rcl
adc
sub
or
cmp
add
mov
adc
loopne
jmp
into
into
mov
mov
and
and
adc
or
pop
mov
sub
adc
xor
cmp
ljmp
hlt
mov
mov
stos
stos
jbe
lahf
adc
test
inc
jno
or
push
mov
or
sbb
flds
or
pop
out
xchg
add
pop
inc
dec
xchg
sub
mov
xlat
mov
sub
mov
jb
pusha
push
sub
in
in
jae
stos
imul
and
jmp
out
dec
mov
add
push
iret
rorl
out
cltd
ret
cmpl
sub
ret
in
stos
mov
repz
test
mov
cmp
es
adc
lea
std
cmp
roll
add
divb
iret
xchg
cmpsb
and
jnp
cwtl
xchg
fstpl
lret
cmpsb
mov
clc
lret
je
add
cmpsl
cmp
in
adc
ret
nop
jmp
and
loopne
shlb
cmp
xchg
jle
lret
js
mov
test
lock
jae
mov
aad
repnz
insb
hlt
mov
test
cmp
in
push
icebp
xor
lret
jno
lret
subb
jmp
push
mov
pop
and
push
push
loopne
mov
call
orb
inc
push
leave
fs
in
stos
test
mov
xor
add
out
xlat
inc
clc
loop
mov
rcl
je
sub
xor
rorb
mov
and
and
in
cmp
fwait
lret
mov
into
cs
or
pop
iret
hlt
testb
rorb
jne
or
sti
insb
int
sbb
movsb
aas
xchg
mov
mov
push
sub
outsb
dec
fidivl
insl
xchg
add
jae
in
xchg
mov
lret
dec
mov
adc
pop
xchg
dec
mov
in
insb
mov
mov
push
jmp
hlt
mov
rcll
test
test
dec
add
sbb
inc
push
xchg
push
mov
icebp
f2xm1
sbb
notb
ret
or
sbb
lods
fs
js
pusha
gs
push
gs
or
or
jl
jnp
add
cmc
adc
cli
dec
adc
push
pop
lret
adc
mov
add
fsubs
cli
push
add
sbb
push
imul
sub
sbb
icebp
push
adc
mov
outsl
rcrl
sbb
out
jle
loopne
pop
sub
jl
sarb
dec
push
insb
mov
adcb
sbbl
adc
push
fstps
rorl
or
jle
xchg
imulb
add
xchg
lcall
mov
xchg
jmp
push
cmc
and
das
stc
pop
xchg
pop
dec
int
roll
pop
lret
sbb
sbb
test
pusha
pop
imul
mov
pop
repz
shl
push
sbbl
jbe
rcrb
fwait
or
lcall
cltd
mov
outsb
mov
in
lret
mov
dec
cmpsb
aas
int
inc
das
mov
in
add
pusha
int
in
loop
or
push
mov
push
adc
pop
xor
dec
jmp
outsb
mov
fstpl
pop
idivb
test
mov
out
or
rolb
bound
cmp
ljmp
cld
in
scas
cwtl
stos
xor
adc
enter
adc
test
jp
in
mov
stos
out
out
scas
aam
lock
ljmp
adc
rcll
jnp
or
inc
ficoml
ret
shr
jns
into
mov
outsl
insb
adc
xor
jno
lret
call
out
adc
xchg
mov
in
xchg
and
pop
loope
mov
das
or
ret
xchg
enter
jg
in
movsb
mov
cmp
pop
incb
cwtl
pop
idiv
cs
cmp
cld
push
mov
mov
push
jl
mov
dec
jne
leave
add
je
popf
mov
mov
std
out
xchg
pop
aaa
repnz
mov
cmpsb
cltd
in
jmp
fdivr
cld
mov
push
push
int3
mov
cmp
pop
lea
push
dec
jg
mov
lret
adc
add
movb
in
jge
shlb
iret
sub
sbb
pop
scas
cmp
mov
mov
cmp
idiv
fnstenv
sti
push
scas
stos
inc
or
adcl
int3
lock
ret
inc
fistpll
adc
lret
add
xchg
mov
dec
dec
ficompl
pop
cmp
popf
or
mov
arpl
jnp
in
loope
rcrb
mov
jno
inc
imul
aad
jle
sbb
pop
dec
mov
xor
xchg
bound
scas
sbb
scas
divb
and
sbb
lock
jmp
jl
in
add
lods
inc
in
stc
ljmp
fidivrl
mov
pop
pop
inc
adc
popa
ret
mov
xor
int
cmpsb
jge
outsl
jle
sbb
pop
cmp
jecxz
mov
cmp
fistpl
jle
nop
outsl
cmc
bound
roll
repnz
stos
out
mov
add
loope
lcall
adc
push
push
sub
xchg
xchg
ds
imul
ss
bound
out
aad
xor
fdivrs
lret
push
iret
lcall
int3
dec
cmp
enter
jg
pop
nop
jns
or
jb
addr16
rcrl
dec
cmpsb
mov
and
pop
leave
insl
adc
and
pop
mov
test
outsb
sub
js
jns
ret
cmp
jnp
shlb
adc
jecxz
cs
ljmp
mov
or
ror
adc
rclb
mov
lds
cltd
insb
mov
lods
inc
sub
push
mov
fidivrs
stos
push
mov
test
sbb
and
sbbb
mov
or
jp
xor
adc
mov
xlat
mov
cltd
shlb
outsb
xchg
sbb
pop
repz
gs
xor
fldcw
gs
sahf
scas
loopne
scas
pop
sub
mov
mov
iret
dec
aam
aaa
xchg
push
sub
clc
pop
add
xor
xor
sbb
xchg
repz
out
cmp
xchg
fimuls
jnp
fildll
scas
in
cmp
pop
test
mov
jae
sbb
jbe
xchg
sbb
inc
jle
push
cs
sbb
and
or
sbb
rorl
int3
lods
mov
lahf
iret
jg
push
xor
sub
or
fnstsw
xchg
into
lea
or
cmp
xchg
aaa
pop
bound
bound
test
imul
mov
jb
ror
sahf
cmp
or
add
in
or
dec
lods
or
pusha
dec
rcl
lods
iret
inc
mov
push
mov
inc
fs
stos
sub
or
ds
push
inc
sbbl
inc
mov
add
push
inc
lods
or
imul
push
insb
cmpb
cmp
imul
ds
adc
sbb
mov
mov
ljmp
das
jbe
outsb
scas
fwait
and
pushf
or
xor
aad
jle
ss
push
stos
das
lahf
pushf
inc
mov
add
sysenter
fsts
adc
int
pop
negl
inc
jl
dec
push
add
push
cmp
sbb
icebp
sbb
pushf
hlt
adc
pop
add
movsl
insb
cmp
mov
add
roll
xchg
rcrl
cld
pop
jo
lods
divl
push
sub
jb
mov
cmpb
push
sbb
iret
mov
mov
sti
or
test
pushf
and
ja
xor
jecxz
inc
fidivrl
je
mov
dec
sahf
push
mov
into
xor
jbe
in
jmp
andl
pop
popf
mov
xor
push
ja
mov
icebp
enter
jp
add
pop
xorl
cmp
sarb
dec
dec
in
xor
dec
movsl
xor
add
scas
incb
fstl
or
or
stos
movsb
outsb
fwait
and
pop
ja
add
cmp
shl
push
push
cld
adc
imul
jbe
pop
or
xor
inc
into
inc
fsubrs
or
scas
mov
pop
popf
xor
xor
outsl
add
rorl
pop
cltd
and
cmp
mov
stc
lret
pop
adc
test
pushf
jae
loop
add
dec
es
mov
xchg
dec
pop
cmp
mov
cmp
push
sarl
cmp
cld
xchg
rcrl
aas
ss
mov
xor
sahf
add
fdivrp
dec
sub
adc
and
and
inc
mov
dec
out
mov
fisubl
jno
jle
rcl
sbb
shlb
loopne
inc
and
mov
adc
movb
stos
cs
mov
adc
push
dec
sbb
xchg
les
mov
mov
jecxz
lods
pop
dec
outsb
cmp
sub
outsb
jae
add
jo
test
cmp
filds
enter
outsb
imul
pop
orb
and
dec
inc
fs
sbb
push
push
xchg
push
arpl
clc
mov
loope
shll
ss
jle
add
lods
lods
xor
push
mov
inc
loope
mov
cmpsl
and
mov
pusha
mov
dec
cltd
jnp
dec
cmc
push
mov
push
cltd
fcmovb
adc
dec
decl
push
inc
out
cmp
dec
out
push
ja
data16
adc
cltd
xchg
jg
imul
sahf
sub
rcll
test
ret
bound
in
gs
lods
mov
add
xor
sub
mov
shrb
dec
push
and
lods
xor
aaa
inc
xchg
scas
xchg
cmp
adc
fisttps
or
cli
push
jecxz
insb
divb
aam
mov
enter
xor
or
pop
push
mov
or
in
push
pop
lret
mov
mov
pop
xor
aad
xchg
cmc
dec
push
inc
xor
pop
mov
sub
or
stc
shrl
out
inc
in
sahf
icebp
or
dec
ds
and
push
pop
jae
je
sbb
or
mov
add
push
ret
notb
ret
sbb
lret
in
cmp
sti
loope
not
pusha
ret
loopne
mov
mov
mov
in
and
push
std
and
shl
push
aam
jecxz
xor
js
loopne
out
and
rclb
orb
mov
jmp
in
lods
pushf
pop
movsbl
push
xor
dec
cli
cmp
clc
jle
test
mov
mov
dec
sub
pop
push
cmpsl
sub
mov
lret
ret
dec
or
ret
scas
scas
sbb
and
pop
outsl
mov
cltd
mov
movsbl
pop
roll
std
pop
mov
pushf
xor
sub
mov
inc
mov
and
in
xchg
popf
in
sti
into
add
test
popa
jo
xchg
jl
out
sub
mov
push
fsub
cltd
pop
sbb
sahf
mov
loope
and
add
sbb
adc
inc
fisubrs
or
inc
rcl
inc
mov
cltd
rclb
push
xchg
mov
ja
sub
dec
and
pop
xchg
sub
lods
mov
mov
gs
les
imul
and
dec
mov
icebp
je
adc
call
stos
xchg
sti
xorl
out
jbe
aam
cmp
test
or
adc
lods
test
imul
inc
jp
jb
adc
pop
inc
pop
jge
inc
leave
iret
jbe
jbe
mov
cli
fsubrl
imul
xchg
outsb
cmp
loopne
xor
popa
sti
dec
jmp
cvtdq2ps
jmp
sti
jl
sahf
in
mov
push
cs
pop
loop
hlt
scas
or
fsubl
stos
push
lds
push
popf
sub
add
popa
bound
fsubl
pxor
cwtl
daa
lds
pop
addb
sbb
test
movsb
push
or
push
mov
jmp
pop
lcall
out
jl
inc
dec
call
divb
inc
test
fisttpl
jnp
mov
mov
push
pop
popf
or
ljmp
mov
std
ret
inc
add
sbbb
xchg
and
hlt
sbb
fcompl
xchg
ja
maxps
add
js
adc
pop
push
sub
xchg
dec
jmp
sub
mov
dec
bound
pushf
and
gs
jno
inc
dec
xchg
mov
iret
inc
xchg
insl
outsb
mov
lcall
repz
popa
xor
cmp
lret
adc
mov
push
dec
nop
outsb
fs
dec
add
cmpsl
fadds
dec
je
push
sub
xchg
movups
push
stos
jbe
xchg
cwtl
xchg
xchg
fimuls
cmp
xchg
add
adc
sbb
scas
xor
scas
and
xor
pop
pop
adc
les
cmp
stc
rclb
cmpl
outsb
dec
push
xlat
iret
sub
or
jbe
sub
xchg
jmp
mov
push
push
mov
mov
add
push
mov
shr
mov
xchg
inc
mov
push
gs
xlat
idivl
sbb
sub
cld
test
xor
cwtl
inc
pop
xor
pushf
and
sbb
enter
add
sbb
jecxz
dec
cli
cld
mov
fnstenv
inc
cmpsl
ret
adc
mov
lcall
mov
mov
mov
adc
sahf
popf
mov
jg
sahf
repz
js
adc
inc
push
lds
insl
cmpsl
lret
cmp
push
stos
scas
ja
in
push
cmpsb
cmp
mov
pop
sti
push
je
fs
mov
fbld
mov
sarb
out
roll
mov
sbb
lds
stos
popa
push
loope
push
dec
jge
push
mov
out
pop
push
outsb
stos
fidivl
idivl
mov
fisubrl
push
insl
cli
dec
mov
adc
cmp
pop
push
cli
xor
addl
mov
jmp
incl
sbb
jno
cmpsb
mov
mov
std
loop
int
mov
sar
je
mov
xchg
scas
push
jecxz
jnp
into
mov
adc
lods
jbe
imul
rep
or
xor
out
mov
add
cmp
fisubl
aas
pop
imul
ja
jge
lods
xor
mov
lahf
loopne
mov
pop
dec
xor
lea
lret
and
add
andl
loop
lea
push
pop
dec
and
mov
mov
dec
inc
mov
mov
aad
sub
in
rorb
mov
push
arpl
rcrl
push
sub
iret
mov
rcll
out
jae
jmp
push
mov
mov
and
adc
xchg
push
mov
test
pop
mov
push
jb
pop
jb
test
imul
jbe
push
lock
adc
adcb
lret
xchg
push
and
es
popf
or
or
test
sahf
or
mov
mov
dec
jge
int
jecxz
stos
call
outsb
dec
stc
in
sub
loope
inc
in
shrb
cmp
and
mov
test
mov
sbb
cmpsb
lret
or
pop
push
test
push
xor
inc
pop
daa
jne
or
and
dec
mov
inc
pop
cmc
shlb
pop
out
xchg
bound
mov
mov
mov
mov
or
dec
mov
pop
fisubs
test
pop
sub
sub
shrl
out
jp
out
inc
push
adc
or
jmp
loop
add
sbb
pop
or
mov
repz
jmp
push
popa
add
adc
and
fcomip
push
xlat
add
jno
cmp
in
jp
cmpsl
jecxz
pop
stos
xor
insb
repnz
mov
movsl
hlt
sbb
inc
aas
adc
adc
in
mov
xlat
icebp
jne
push
pop
jg
int3
jg
in
fstpl
mov
mov
aad
mov
push
push
out
dec
push
mov
mov
add
inc
daa
arpl
movsb
sub
stos
inc
and
test
and
xchg
mov
or
mov
mov
repnz
xor
fisubl
sahf
mov
mov
dec
popf
mov
push
into
cmp
xor
push
dec
mov
add
stos
and
inc
outsl
push
aam
mov
scas
iret
push
fsubrs
outsb
add
jle
mov
or
push
sbb
aad
insb
pop
sub
cmpl
std
jno
test
push
sbb
pusha
int
cmp
mov
lds
push
mov
bnd
je
pusha
lahf
mov
xchg
push
imulb
nop
test
lcall
addr16
xchg
popf
fucomip
xchg
cwtl
pop
sbbl
fs
cmp
ret
jp
mov
sbb
pop
mov
cmp
xchg
nop
cmc
push
incl
mulb
bound
mov
xchg
dec
nop
mulb
outsb
sbb
ljmp
pop
je
loopne
mov
jle
das
pop
pop
adc
and
xchg
push
sbb
in
ss
xchg
dec
dec
loope
ret
mov
adc
orl
icebp
mov
icebp
aaa
mov
cltd
scas
cmpsb
adc
shrb
fs
sti
mov
mov
sbb
dec
stc
gs
mov
jne
adc
cmp
in
fstps
cmpsl
in
jmp
xchg
test
cli
sbb
dec
lods
lock
rcll
cmpsl
out
andb
mov
icebp
mov
out
cltd
lods
sbb
jnp
pop
push
mov
xchg
push
sbb
and
fidivl
lahf
jne
add
mov
mov
cmpsl
and
sub
pop
leave
test
jae
sti
fisubrl
lret
jle,pn
push
xchg
mov
add
fldl2t
jge
cmp
ret
lret
push
pop
repz
dec
ret
gs
enter
negl
cld
cmpsl
shl
rcrb
xchg
outsl
xchg
push
cwtl
int
fs
and
out
xor
lahf
ret
add
cli
sbb
lods
push
cli
and
sti
cmp
jecxz
and
mov
imul
std
xchg
jne
lds
xchg
push
sub
cld
sub
test
icebp
stos
fidivl
jl
fistps
mov
fildll
push
leave
popa
loopne
int
mov
mov
dec
loopne
mov
inc
jge
inc
or
int3
mov
xchg
mov
jo
mov
inc
inc
or
mov
sub
cmc
add
data16
hlt
xchg
cmp
rep
fwait
jl
push
les
jecxz
mov
out
std
sbb
jecxz
xor
hlt
popf
cltd
arpl
dec
cltd
or
insl
or
scas
insl
sub
lret
and
dec
push
test
fcoml
clc
mov
push
and
jnp
mov
xor
dec
push
fdivl
out
jle
fcoms
movsl
test
repz
negl
je
xchg
push
inc
call
sarl
in
aaa
mov
xchg
sub
enter
xchg
or
sti
aad
push
dec
add
call
lcall
xor
adc
subl
ret
sub
cli
inc
daa
cltd
imul
lods
or
fcmovnu
push
cli
push
xchg
jge
aas
fbld
mov
cmpl
cmpsl
or
push
sub
cmpsl
rorb
fwait
and
cmpsl
add
sub
mov
sub
inc
xchg
inc
jmp
ret
cmp
clc
aaa
std
push
jle
jmp
mov
dec
lcall
test
add
cmpsb
push
jb
push
je
insl
sahf
cmpsl
push
pop
sbb
into
mov
fwait
mov
mov
push
sbb
pop
pop
syscall
mov
in
sub
nop
incb
test
push
xor
sub
lods
ljmp
ret
add
fistpl
mov
scas
xor
push
inc
pop
pusha
xchg
fiaddl
mov
pusha
in
push
mov
or
cmpsb
dec
inc
rcrb
in
pop
jl
mov
mov
loope
ret
xor
mov
sub
xchg
daa
xor
int
xchg
arpl
sub
sarl
or
or
out
cld
jns
imul
xchg
imul
lcall
aas
push
lods
aaa
test
cmp
ja
aaa
fistps
dec
sti
xlat
fcom
daa
jnp
push
gs
lea
in
ficompl
push
call
push
inc
add
test
fs
lds
outsb
cld
rorb
xchg
lds
dec
inc
mov
mov
shl
push
push
mov
arpl
pop
lea
or
lock
das
dec
adc
cmp
sbbl
fnstenv
mov
push
xchg
pop
bound
repz
push
arpl
or
and
daa
xor
stos
out
insb
leave
scas
lret
and
cltd
and
sbb
sbbl
mov
push
mov
adc
mov
push
inc
cld
rcl
xor
es
or
repnz
out
in
mov
test
mov
pusha
mov
lret
inc
sbb
int3
loope
and
xchg
movsl
repnz
mov
scas
outsb
xor
inc
adc
sub
in
imul
jnp
cli
shll
cmp
outsb
pop
fwait
mov
mov
add
mov
nop
inc
mov
ret
subb
sbb
jge
hlt
pop
in
xchg
push
xchg
out
jbe
insb
or
icebp
out
xchg
into
inc
into
pop
ret
mov
stos
aas
fimull
call
adcb
imul
ja
cmp
or
sub
pushf
inc
in
stc
jg
and
jns
sub
inc
add
scas
into
mov
lock
dec
dec
aam
inc
and
cli
adc
cmc
aaa
dec
or
insl
mov
clc
addr16
push
repnz
or
test
call
inc
sbb
jg
sub
xor
sub
hlt
or
pop
lock
jno
mov
pop
push
rorb
lods
mov
adc
cmp
pop
add
cmp
sbb
mov
xor
int3
ss
cmp
push
data16
in
pop
mov
push
jae
cmpsl
and
pop
xor
mov
ja
and
fsubr
test
addr16
aam
fcomi
add
out
xor
adc
dec
repz
adc
movsl
rolb
fmul
inc
hlt
jbe
mov
imul
and
mov
dec
cmp
cwtl
pop
aad
dec
jge
iret
jp
or
test
jae
inc
scas
repz
sub
adc
adc
mov
dec
jge
mov
or
pop
roll
adc
inc
jg
test
lods
nop
pop
cmp
push
pusha
test
negl
pop
cs
daa
dec
sub
daa
fmull
ss
jb
test
push
into
outsl
push
mov
sti
addb
and
es
mov
clc
movl
aam
add
push
lcall
das
out
andl
xchg
add
pop
shll
add
sbb
popf
xchg
dec
repnz
daa
xor
xlat
jae
inc
imul
sbb
jle
lock
xor
push
push
loopne
and
xchg
lahf
popf
jmp
repnz
adcl
mov
add
testb
out
mov
xchg
inc
xor
cmp
and
dec
push
les
xchg
call
in
sbb
pop
mov
int3
mov
lcall
fs
imul
pusha
or
push
push
jl
pop
xchg
push
adc
leave
leave
dec
mov
mov
sub
cmp
in
ss
popf
dec
mov
adc
pop
sbb
pop
shlb
xor
add
jnp
mov
add
sub
jo
je
cld
rol
fcmovbe
dec
xchg
shr
jno
hlt
fs
mov
mov
adcl
mov
fwait
pop
dec
jae
repz
or
lods
fs
pop
dec
jg
dec
mov
nop
inc
hlt
aas
enter
call
sub
aas
lahf
sub
lcall
mov
es
push
sbb
mov
mov
push
mov
cmp
fstp
and
pusha
js
and
cmp
faddl
xchg
push
xchg
jp
jg
addr16
push
dec
add
pop
push
or
stos
lret
jecxz
ljmp
ret
repz
jne
adc
lods
mov
ret
std
inc
daa
leave
jbe
in
or
cmp
lock
inc
dec
xor
mov
repz
push
xchg
shlb
pop
xchg
sbb
dec
clc
mov
xor
call
sub
and
inc
cmc
popf
dec
inc
inc
aas
mov
xor
call
into
xchg
scas
aaa
jl
lds
inc
int
jg
jo
aaa
sbb
sub
xchg
mov
stc
inc
inc
adc
sub
in
cli
jbe
in
cmp
cli
xchg
rol
or
cli
or
fdivl
rclb
push
pop
mov
mov
xchg
mov
hlt
repnz
pop
mov
dec
mov
pushf
sbb
mov
imul
out
in
inc
movl
ds
and
pop
pop
xchg
arpl
insl
enter
xchg
and
loop
es
mov
pushf
xchg
bound
daa
movsl
in
bound
loopne
jmp
cmpsl
push
scas
xchg
dec
ror
lahf
mov
mov
out
popa
loopne
ss
and
dec
testb
icebp
jle
shrb
mov
cmp
mov
add
cmp
mov
ret
lods
imull
add
test
fnsave
cmp
cltd
outsb
xor
xor
adc
jae
pushl
ljmp
add
dec
mov
mov
adc
xchg
push
scas
mov
mov
inc
push
jno
sbb
imull
push
push
adc
sbb
push
adc
inc
adc
cmp
inc
flds
jns
out
push
sbb
in
rcll
mov
push
mov
inc
add
jmp
loop
es
pop
add
cmp
sub
loopne
hlt
sbb
jge
addb
lret
mov
fwait
cmc
jno
cld
dec
push
iret
repnz
sbb
stos
fimull
loop
addr16
pop
cmp
jl
arpl
movzwl
xor
mov
movsl
pop
idiv
xor
mov
int3
sbb
jne
pop
icebp
cmp
lock
inc
push
sbb
dec
mov
and
xor
int
into
sbb
cld
sub
sub
pop
inc
push
jae
pushf
test
push
sub
or
les
mov
adc
test
sbb
clc
mov
rclb
lcall
inc
or
call
sbb
mov
lcall
mov
or
jg
add
test
int3
cs
movb
mov
jg
idivb
xor
or
xchg
xor
fldt
sahf
mov
aad
pop
insl
jbe
pop
jle
iret
push
out
rcrb
lock
dec
mov
mov
sbb
stos
in
pop
cmp
push
in
cmp
cmp
scas
sbb
mov
popa
popa
dec
jl
add
sbb
mov
inc
insl
pusha
cmp
add
les
in
ds
sti
ljmp
test
xor
jbe
adc
out
sub
jb
rcl
xlat
and
nop
pop
or
insb
add
fwait
jp
adc
iret
inc
dec
mov
mov
pop
ucomiss
xor
icebp
movsb
cmc
sub
cmp
cli
xor
repz
or
mov
push
push
popa
xlat
call
push
repz
mov
cmp
test
in
inc
nop
xor
and
fwait
adc
xchg
push
cmpsb
mov
ljmp
nop
and
aad
sub
lcall
icebp
push
sub
test
imul
push
mov
movsb
jmp
sbb
mov
pushf
lods
sub
ret
pop
fcoml
lods
mov
fidivrl
jbe
add
mov
pushf
pop
pop
pop
std
inc
xchg
push
fiadds
in
and
lods
jno
aam
add
and
mov
inc
push
jg
subl
mov
les
jp
sahf
or
movsb
jnp
shl
aam
cmc
iret
orl
mov
loope
ljmp
in
add
add
lahf
adc
ja
sub
int3
jmp
mov
xorb
repnz
xor
es
scas
mov
add
adc
js
pusha
and
fisubrl
sub
imul
int
mov
insl
pusha
sarb
movsb
lcall
scas
cmpsl
mov
mov
pop
jbe
mov
test
or
jbe
dec
cmp
fldcw
inc
jbe
or
leave
and
repnz
mov
scas
pusha
mov
movl
mov
add
in
xchg
fcoml
or
add
and
jg
mov
pop
fs
mov
fnsave
shrl
data16
push
lret
xchg
add
popa
dec
adc
xchg
ds
mov
xchg
and
hlt
push
xlat
mov
push
test
jecxz
xor
sub
loope
adc
loopne
jp
scas
and
xchg
xchg
ret
sub
mov
pop
or
xor
and
jnp
sub
jecxz
shl
xchg
cltd
jle
jne
mov
rclb
movsl
pop
addr16
rcll
jbe
mov
shr
dec
jb
mov
cmp
outsl
mov
jl
jbe
jle
mov
and
insb
icebp
push
dec
and
aas
and
movb
ja
ljmp
leave
les
aas
std
xor
pushf
lods
and
negb
ficomps
sub
cmp
cltd
imul
cmc
mov
adc
dec
or
imul
xchg
testb
fdiv
dec
test
cmc
ss
xor
pop
pop
aam
shlb
adc
jg
inc
cmp
stos
pushf
stos
and
rcrb
cltd
mov
jns
xchg
fdivs
push
ret
out
test
adcb
adcb
loopne
jno
mov
popa
adc
insl
fcmovu
xchg
mov
aam
rorb
int
xorb
lcall
xchg
lahf
imul
inc
imul
mov
inc
cld
lcall
loopne
inc
fwait
popf
and
aaa
stc
push
cmc
int
shlb
mov
repz
pusha
fadds
inc
rclb
iret
xchg
fists
push
push
dec
and
sub
xchg
cs
fwait
xor
adc
jl
iret
imul
sarb
cmp
iret
fcoms
xor
aaa
leave
insb
hlt
jnp
sti
jmp
push
push
cmp
sbb
pop
test
daa
and
arpl
inc
test
pop
out
ss
addr16
scas
mov
das
inc
in
xorl
arpl
push
adc
jns
mov
sbb
sbb
and
lahf
mov
sti
add
cmpsb
inc
push
adc
lahf
xchg
add
daa
es
sub
pop
cli
into
inc
cmp
pop
cltd
setge
add
inc
pop
add
or
enter
xchg
imul
jnp
mov
mov
push
shrb
scas
repz
test
jnp
mov
lahf
addr16
sti
pop
cmpsl
mov
jb
sub
and
cli
cltd
mov
lcall
or
xchg
nop
sti
xor
aaa
sub
pop
aad
out
fsubs
lock
insl
movsb
aas
mov
gs
mov
xchg
pop
add
jmp
repnz
adc
push
cmp
nop
push
dec
cmp
push
add
std
mov
jg
inc
inc
insl
mov
mov
je
and
das
sbb
mov
jns
clc
push
mov
jae
pop
sub
jge
orl
sbb
ds
push
iret
es
scas
xor
mov
loopne
mov
test
imul
insl
mov
mov
imul
testl
mov
adc
pop
ficomps
adc
movsb
jp
movb
push
pop
mov
iret
adc
dec
fs
pop
mov
or
popa
hlt
testb
and
jge
jno
push
pop
lret
add
aaa
and
test
mov
call
out
fsub
inc
dec
xor
pusha
sub
lds
cmp
cltd
jge
push
inc
dec
lahf
ds
stos
xchg
out
fstpt
xchg
lods
cmp
in
inc
stos
jns
push
cld
push
ds
imul
adc
lret
push
jno
push
dec
sbb
pop
xchg
lret
pop
je
sub
jne
int3
mov
ficoms
and
dec
movsb
ret
test
les
push
mov
in
ficomps
pop
lcall
xor
sbb
mov
dec
dec
pop
or
out
mov
pusha
push
mov
add
push
cwtl
mov
jae
xchg
dec
repz
jge
aas
insl
ds
sbb
push
mov
es
pushf
or
stc
cltd
movsl
int3
xor
in
mov
dec
mov
addr16
lret
test
cmp
repz
push
xchg
xor
loope
and
or
jb
xchg
movsb
sar
push
mov
punpcklwd
xchg
movsb
jb
jne
scas
pusha
add
jg
mov
push
add
subb
jecxz
or
mov
inc
sahf
lcall
pop
aas
test
fbstp
lahf
test
lcall
imul
adc
popa
iret
aas
add
mov
push
cmc
jmp
and
dec
mov
pop
jb
insb
cmp
inc
insb
imul
mov
imul
imul
push
push
loopne
jl
js
cmpsb
sub
and
push
fdivrp
es
insb
inc
insl
rorl
pop
lods
and
push
cli
movsb
shr
inc
mov
lea
imulb
lcall
repnz
jns
aas
mov
and
fadds
pusha
dec
dec
adc
pop
jg
push
sub
aam
mov
and
icebp
mov
mov
in
nop
mov
rcll
xchg
jecxz
lds
outsl
pop
sub
jbe
repz
mov
sub
inc
pop
fsubs
roll
shlb
push
mov
mov
fsubrs
add
xor
sbb
outsl
stos
push
fnstcw
repz
xor
outsb
or
arpl
mov
cmp
sbb
push
sbb
mov
jne
xchg
sub
in
jg
aaa
mov
test
popf
xor
cmpl
pop
scas
mov
icebp
mov
xchg
jp
cltd
inc
test
mov
inc
jb
repnz
ss
or
adc
cmc
imul
fsin
sbb
cmp
cmpsb
scas
mov
lret
jmp
in
xor
jg
enter
or
cwtl
inc
ror
stos
jmp
lret
shr
mov
and
push
push
scas
ret
mov
mov
faddl
iret
pop
push
mov
mov
adc
mov
repz
fdivrs
stc
lret
or
or
add
or
enter
das
pop
fisttpl
fidivrs
pusha
outsl
stos
cmpsl
sahf
test
lods
pop
roll
or
pop
imul
out
out
pop
dec
jb
add
mov
mull
pop
test
inc
add
inc
or
mov
orl
fsubl
xchg
or
ja
adc
rorl
push
lahf
sub
mov
jmp
addr16
xor
sahf
and
push
out
cmp
jne
movsl
out
shll
sub
sub
dec
pusha
sub
xchg
mov
sub
pop
sbb
in
push
repz
ds
insl
in
jb
leave
mov
fidivs
mov
scas
xchg
adc
lods
xchg
mov
cmp
mov
or
sub
sub
enter
adc
mov
scas
sub
mov
setl
and
mov
movsl
sbb
and
pop
addr16
cli
adc
inc
lods
jbe
insb
mov
inc
int
xor
pushf
mov
loopne
fsts
les
xor
mov
xor
sub
and
pop
adc
stc
hlt
ljmp
adc
xchg
sub
mov
sub
movsb
add
pop
pop
inc
scas
int3
pop
sarb
lcall
xor
jmp
aaa
andl
pop
inc
dec
loop
mov
mov
incb
lcall
sub
push
sti
test
or
xchg
mov
aas
rolb
popf
pop
enter
and
outsl
mov
cwtl
or
daa
adc
pop
cli
xchg
fisubs
daa
pop
xchg
adc
test
inc
push
jo
pop
xchg
mov
mov
jecxz
push
adc
inc
mov
jno
movsl
xlat
push
mov
push
xor
in
jne
rorb
and
xchg
lea
add
aad
or
arpl
inc
aam
push
adc
xor
daa
fldt
mov
push
sbbb
pop
pop
jbe
pop
xchg
imul
cmp
pop
dec
cwtl
stc
or
or
lcall
call
inc
add
out
sub
aam
sbb
mov
push
loop
mov
nop
jo
jl
inc
mov
dec
aas
into
ret
sbb
mov
aaa
jns
or
lahf
lcall
fisttpl
cmp
addr16
inc
jmp
jle
fisubrs
popf
xchg
mov
orl
jg
mov
ud2
pop
sbb
shrb
jecxz
pop
int3
lea
nop
mov
mov
sub
shrl
mov
iret
cmpsb
shrb
addr16
test
loope
xor
cltd
push
test
mov
bnd
dec
cmpsl
mov
and
jmp
add
mov
or
rcrb
cltd
sbb
das
adc
push
push
out
add
xor
lods
mov
pop
push
jg
in
movsl
imul
sub
cmp
jb
jns
decb
push
rorl
adc
jnp
sub
out
in
cmp
ret
inc
lea
adc
cld
dec
clc
lds
je
and
sbb
cmpsl
sti
popa
in
add
sbb
stos
mov
aaa
pop
pop
adc
das
stos
fisttps
addr16
and
and
pop
cmc
or
cmpsl
mov
fdivrp
jmp
mov
mov
cmp
push
dec
cmp
ficomps
data16
and
mov
add
cmc
test
mov
fstl
imul
sbb
jne
and
lret
lahf
clc
adc
outsb
lds
nop
sub
outsl
into
in
jecxz
inc
lock
push
push
xor
xchg
iret
call
ss
jns
aam
push
jle
inc
clc
adc
dec
xor
inc
add
stos
push
fisubl
cs
sbb
xor
cmp
sbb
loopne
mov
mov
sbb
jns
add
mov
dec
push
aas
or
les
loopne
pushf
mov
xor
xor
in
ds
ror
fimull
sahf
lds
jl
sbb
sbb
push
lret
add
aad
sub
cli
aad
xchg
push
inc
cmp
popa
push
push
mov
mov
adc
fs
icebp
and
pushf
jae
insb
in
ljmp
loop
adc
pushf
sbb
adc
hlt
les
loope
add
jo
cwtl
lods
aam
dec
mov
mov
xlat
sub
dec
sahf
jmp
daa
push
or
jle
loopne
popf
pop
push
mov
push
cmp
popf
aam
test
mov
inc
rorl
jp
roll
push
xchg
pop
cmp
mov
add
daa
cmpsl
xor
add
jne
fstl
out
dec
test
cmpb
jae
mov
mov
and
sti
ret
add
loope
mov
scas
sub
dec
adc
pop
push
and
into
or
inc
inc
mov
in
mov
cs
add
mov
mov
aaa
inc
ret
sahf
jo
aas
inc
mov
push
or
cmpsb
sbb
sub
sahf
aad
scas
inc
aad
fildl
push
icebp
mov
sarl
adc
push
dec
das
push
lods
mov
jmp
bound
add
out
and
dec
nop
push
int
mov
insb
es
dec
jmp
imul
stos
aam
mov
dec
movsl
nop
add
jg
or
xchg
pop
and
je
pushl
mov
xchg
jno
mov
xchg
xchg
fnsave
mov
jb
jle
mov
fsts
mov
in
mov
pop
sub
jns
dec
lcall
sbb
adc
inc
fs
sbb
clc
out
jno
push
test
xchg
pop
xor
nop
pop
sub
into
sahf
aaa
fistpl
mov
lcall
data16
mov
push
scas
jae
and
daa
jp
jle
rolb
and
dec
inc
test
xor
aas
mov
lods
pop
jnp
in
add
ret
jb
call
xchg
xchg
and
gs
mov
gs
repnz
fadd
fdivrs
divb
in
xchg
xchg
fidivs
nopl
and
mov
add
jo
cmp
incl
fadd
mov
loopne
rep
push
mov
sub
jp
and
loopne,pn
sbb
fistpl
xchg
fdivs
repz
add
stos
loopne
inc
sub
xchg
mov
add
add
pop
enter
inc
or
cmpsb
jbe
or
pop
movsb
xchg
fs
data16
mov
mov
add
jecxz
pop
gs
push
dec
pop
push
xchg
unpckhps
pop
mov
xor
shrb
cmp
mov
fisttpll
mov
and
iret
mov
out
sbb
imul
fcoms
std
rcl
divl
mov
ret
lods
lcall
js
mov
xchg
ret
js
add
js
aad
xchg
push
scas
push
enter
je
and
call
or
pop
and
cli
testl
push
mov
xchg
sbb
and
pop
cltd
test
jbe
inc
rol
data16
xor
je
pushf
repz
pop
pop
or
mov
gs
into
or
mov
or
mov
add
xchg
cmp
cld
leave
mov
push
push
mov
cwtl
inc
test
sub
scas
mov
adc
shrb
dec
and
subl
and
and
repnz
xor
ds
js
fmull
and
lds
movsb
mov
mov
sub
sbb
dec
das
add
mov
inc
leave
xor
or
fs
lret
xchg
loope
jo
xorb
adc
add
out
inc
fbld
lret
inc
ljmp
add
rcrl
fwait
inc
stos
dec
jp
insl
mov
xor
out
stc
out
pop
sub
mov
xchg
nop
divl
or
lret
iret
adc
adc
sub
addr16
adc
loop
les
jmp
xorl
jp
xor
popa
leave
xor
jmp
adc
mov
push
inc
insb
aaa
lret
leave
jp
cmp
arpl
mov
cwtl
jmp
loope
mov
push
jg
adc
fimull
inc
jnp
test
sbb
or
cmpsb
aad
and
and
push
xchg
ss
mov
in
mov
push
push
or
in
ror
sub
jnp
pop
ljmp
xchg
mov
dec
ds
push
test
mov
mov
adc
in
shrl
push
std
aam
mov
push
js
mov
jo
mov
cmp
sub
dec
add
lods
sbb
ja
shl
scas
mov
sbbb
mov
mov
aad
or
push
das
pop
push
push
pop
xor
lcall
adc
mov
xchg
cmc
pop
enter
int3
idivb
shll
jp
jnp
sahf
ljmp
and
jl
cmp
mov
bnd
jecxz
jl
sub
pop
and
pop
outsl
mov
dec
pop
addb
sub
push
jbe
shlb
leave
ss
cld
movsl
aas
sbb
or
jge
sbb
xor
in
lds
push
out
loope
dec
xchg
add
loope
inc
cwtl
cmc
dec
xchg
popf
pop
pop
lock
sbb
add
jmp
ss
shlb
daa
cmpb
xchg
leave
lahf
add
jae
xchg
xchg
mov
movsb
adc
stc
subl
mov
cmp
add
mov
mov
sub
mov
arpl
fst
jbe
push
sahf
mov
mov
dec
jmp
jl
je
mov
pop
fcmovu
push
dec
cmp
aas
xchg
add
add
insl
aad
or
push
adc
jb
push
mov
mov
xchg
lods
xor
dec
xchg
in
in
movsb
mov
jg
hlt
lds
push
lret
jbe
xor
data16
xor
dec
sub
cwtl
pushf
xchg
ljmp
pop
outsl
rol
es
add
or
cmp
mov
mov
adc
cmp
dec
shll
call
gs
push
cmp
and
jne
ss
mov
or
je
sbb
cmp
sbb
mov
xorl
jbe
int
dec
mov
and
adc
in
mov
inc
inc
adc
lods
sub
sub
push
ljmp
scas
jmp
test
das
or
scas
pop
dec
outsb
adc
cltd
mov
out
adc
fisttps
dec
into
fsubrs
ds
adc
add
jp
negb
and
mov
push
cmc
imul
jmp
push
stos
sub
nop
cltd
add
dec
cmp
sbb
repnz
stos
xchg
jmp
pop
sahf
enter
pop
or
fs
pop
outsb
hlt
xchg
and
outsl
push
or
insl
test
sub
push
in
scas
repnz
icebp
sbb
sahf
call
cmp
das
jne
adc
gs
pop
ja
xor
test
std
mov
aaa
fadd
aad
add
mov
test
jo
outsb
insl
xor
mov
or
out
xchg
subl
sub
xchg
shrl
out
test
push
test
lret
xchg
and
adc
imul
and
push
xor
sbbb
xor
addr16
or
daa
mov
stos
pop
stos
packsswb
or
fisubl
sti
sbb
sbb
dec
in
pop
dec
lret
scas
adc
inc
and
inc
in
mov
mov
cmp
cmpsl
test
cwtl
sub
adc
idivb
aam
sbb
xor
in
xchg
ret
push
add
jb
xor
inc
pop
xchg
data16
popa
lods
mov
mov
sbb
fnsave
xor
sbb
dec
aam
sub
pop
gs
xchg
and
push
cld
jbe
fisubs
jmp
pop
out
sysexit
repnz
xor
jg
sti
mov
add
xchg
aaa
or
imul
xchg
xor
movsb
test
adc
stos
lock
dec
adc
roll
int
jle
mov
xchg
daa
addr16
lock
cld
lahf
jl
scas
jge
push
es
ja
and
imul
loope
jbe
jge
add
xor
fidivrs
dec
insl
call
mov
popf
movsl
ja
mov
mov
push
add
ret
mov
lahf
nop
xor
mov
fisubl
xor
mov
pop
fildl
test
dec
into
cld
mov
aas
inc
sbb
test
in
in
jbe
jnp
jns
lahf
or
sub
inc
les
push
push
leave
sbb
push
into
add
push
repnz
push
ss
sub
add
aaa
scas
dec
loope
jecxz
lcall
loop
ja
pusha
ja
ja
in
mov
adc
fldenv
sbb
call
xlat
and
rcll
arpl
dec
scas
cmpl
push
xorl
out
sub
lock
loopne
lock
aaa
xchg
mov
lcall
test
bnd
ret
fdivs
inc
add
dec
inc
aaa
lcall
mov
adc
shrl
dec
pop
sarb
repnz
sbb
mov
sbb
push
pop
outsl
xchg
xchg
dec
std
aaa
shll
inc
lret
sub
sub
xor
out
xor
in
xchg
cmpsb
mov
jle
inc
push
lods
mov
jae
sub
jae
mov
push
push
bound
inc
cmp
rcrb
orb
cld
ds
jl
adc
ja
push
popf
ja
xchg
sub
lock
jae
mov
sbb
loope
xor
add
or
inc
lret
or
dec
add
push
es
int
jg
insb
test
push
push
mov
push
out
dec
movb
lahf
mov
cmp
mov
xchg
icebp
xor
xchg
sub
ds
mov
lds
dec
aas
push
add
stos
or
add
mov
mov
and
mov
sub
mov
popa
jmp
cs
sub
jo
adc
jl
in
push
sub
sahf
mov
aad
scas
or
leave
adc
dec
sahf
movsb
sti
sbb
enter
adc
xchg
inc
fadds
sub
into
into
insl
jge
or
mov
adc
bound
popa
cmpsb
push
into
or
xlat
lcall
sub
inc
addb
lods
mov
enter
shl
or
and
pop
push
dec
jb
adc
inc
movsl
cs
shlb
subb
adc
fstps
push
jae
inc
pop
jl
and
fwait
add
stos
mov
fisttps
lret
daa
or
sahf
arpl
scas
enter
lahf
inc
psubusw
xchg
jns
out
movsb
mov
fistl
push
xchg
shll
inc
pop
mov
or
xor
sub
mov
pushf
popf
out
pop
popl
xor
enterw
jmp
adc
xchg
or
sahf
mov
or
ljmp
xor
dec
mov
sahf
adc
mov
ret
or
inc
xchg
jo
sub
outsb
dec
mov
ljmp
xchg
mov
cmp
pop
jge
fdivs
insb
push
xchg
jne
xor
inc
roll
fldt
pop
sub
pop
sub
adc
or
mov
lds
xchg
jnp
jecxz
xor
fsubrl
and
pop
add
jmp
add
jp
sbb
fisubl
fsubs
outsl
push
cmpsb
xor
test
into
cli
stc
aam
mov
scas
pop
jb
sahf
ret
ret
lods
lock
jle
test
cmp
cwtl
add
adc
stos
pop
adc
call
into
inc
mov
imul
outsb
lret
and
arpl
dec
dec
xchg
push
fmuls
out
pop
fst
test
cwtl
popf
jns
leave
loope
mov
xchg
jge
xchg
bound
sbb
cmp
dec
mov
mov
jae
mov
fs
out
leave
outsl
add
shr
pop
inc
adc
ficoml
pop
int3
inc
xor
xor
popa
shr
xor
in
inc
mov
cmp
repz
cwtl
mov
and
movsb
sbb
roll
cmp
inc
dec
push
mov
cld
js
je
adc
repnz
pop
test
xor
inc
or
add
scas
shlb
xlat
cli
xchg
mov
sub
pop
int3
ss
push
dec
aad
jno
shld
cmp
insl
jo
roll
push
mov
enter
lods
addr16
push
mov
leave
test
mov
fcompp
xchg
add
cmp
jne
icebp
shl
push
out
out
mov
mov
xchg
loope
jge
in
leave
xorb
inc
mov
shl
jle
aam
inc
xor
ror
mov
xchg
rorb
xor
mov
bound
das
sub
add
aad
mov
fsubp
pop
clc
xchg
sub
pop
arpl
cmp
jne
adcl
sbbl
cltd
std
movsl
xchg
adc
insl
add
jg
cwtl
sbb
aas
fmuls
dec
xchg
xchg
aaa
ret
iret
in
cli
cmc
or
cmp
movsl
pop
shrl
push
cli
andl
shlb
popf
xchg
mov
das
out
addr16
pop
insl
outsl
sbb
sbb
and
loopne
add
push
imul
xor
loope
and
stc
push
cmp
mov
ret
les
dec
sahf
out
push
mov
movsb
aad
test
outsb
or
cmp
addr16
ss
mov
adc
loopne
fdivl
jge
push
push
stc
sbb
ret
jb
mov
scas
push
jge
lock
enter
add
adc
shlb
insb
dec
and
loope
pop
sub
sahf
push
cmp
add
stc
lock
ds
out
sbb
xchg
fisubs
les
int
popf
stos
es
lahf
cmpsl
subl
dec
jmp
mov
inc
adc
sub
push
ret
dec
js
add
setg
or
imul
adc
dec
fidivl
in
inc
jg
idivl
hlt
sbb
adc
popa
scas
dec
fldl2e
arpl
pop
in
ret
aam
lahf
jle
lcall
jg
ja
jne
or
pop
push
add
bound
gs
jbe
imul
sahf
repz
stos
fisubrs
addr16
inc
icebp
insb
aad
adc
pop
push
jb
test
arpl
lret
lds
cmp
push
cmp
cmp
in
aam
arpl
and
ja
movsl
dec
push
xor
and
inc
mov
inc
dec
xchg
xchg
jle
xchg
xchg
test
pop
jle
xlat
and
addl
adc
xchg
inc
mov
jmp
lret
imul
inc
sbb
mov
and
inc
sbb
clc
insb
push
pop
faddl
xchg
lahf
scas
fcomip
xchg
mov
lods
push
or
dec
sub
dec
sub
adc
dec
hlt
repz
sbb
fstps
or
mov
int3
mov
addl
cmc
push
or
stos
dec
mov
push
cmp
ret
lahf
fwait
mov
jecxz
scas
sbb
cmp
xchg
int
mov
ljmp
scas
cmp
mov
xor
in
shrb
mov
leave
rorb
adc
cmp
sbb
subb
pop
fisttpl
pop
lea
rorb
cmpsl
stos
je
xchg
sub
out
push
mov
lahf
mov
std
gs
jg
xchg
lcall
sub
clc
sub
test
pop
fwait
inc
dec
pop
sbb
call
mov
insl
jbe
xor
iret
adc
lret
cmp
xor
mov
repnz
dec
decl
dec
push
movsl
pop
jl
push
lret
lret
mov
jmp
add
ljmp
shl
movsl
jb
ja
mov
int3
inc
hlt
jne
movsl
inc
out
mov
lret
xor
pop
adc
inc
mov
xchg
push
add
mov
cmpsb
mov
cmp
xchg
pushf
mov
cwtl
adc
into
ljmp
adc
stos
inc
pop
insb
xchg
fisttps
scas
sbb
adc
sti
pop
int
faddl
cs
xchg
ss
jb
sti
and
out
mov
cwtl
xchg
or
add
les
sub
mulb
xchg
mov
jmp
std
cli
fcmovnb
bound
pop
jns
mov
in
lods
pop
xchg
arpl
imulb
add
pop
push
jne
leave
jno
mov
bound
mov
pop
push
sub
sbb
cmp
pop
lods
es
adc
jg
xchg
jle
add
sub
ret
mov
and
imul
outsl
and
or
movnti
and
xchg
out
mov
xor
pop
push
mov
je
jge
cltd
lcall
lea
mov
push
lods
pop
stos
mov
pushf
gs
jg
push
push
adc
pop
xor
mov
int3
sub
nop
out
adc
out
repz
repz
jge
test
jmp
mov
add
ficoms
cmp
push
mov
xchg
fadds
inc
sbb
xchg
add
test
popf
outsl
jmp
sub
add
add
ss
aas
push
test
inc
add
ss
jnp
scas
or
leave
imulb
jle
jg
mov
xchg
arpl
fcomps
imul
mov
inc
in
or
pmuludq
lds
dec
int3
sbb
lahf
xchg
sahf
imul
nop
sti
jne
das
sbb
cmp
pop
push
sbb
les
jnp
pop
sbb
lret
adc
pop
test
adc
adc
outsb
xor
rclb
pop
jle
pushl
push
pxor
mov
out
cmc
xor
call
lea
aad
inc
or
pop
inc
or
addl
andb
sub
popl
movsb
push
or
xchg
cmpsb
mov
je
sub
mov
xchg
lds
inc
lods
scas
lea
adc
das
dec
add
xor
mov
inc
in
test
jno
xor
aaa
pinsrw
adc
mov
fadd
lock
sbb
or
mov
mov
push
ja
rolb
les
cltd
outsl
dec
imul
repz
repnz
out
mov
push
fildll
jl
mov
aas
stos
mov
pop
inc
mov
lods
xchg
xchg
loopne
mov
sysret
and
jg
shlb
push
pop
dec
sub
mov
xor
or
sbb
test
std
fnstsw
gs
xchg
mov
pop
leave
ret
mov
scas
std
cmc
mul
dec
lret
mov
shr
imul
jmp
sub
xor
cli
ljmp
adc
pop
jo
inc
cmc
pop
push
mov
mov
mov
test
mov
ss
or
jae
mov
and
push
sub
pop
fs
nopl
divb
sbb
push
fldenv
fmuls
into
das
stos
shll
lods
pop
lods
jle
les
xor
pop
mov
sbb
ret
test
lods
xchg
and
fadds
add
int
cmp
xchg
xchg
hlt
adc
test
pop
push
dec
xchg
loop
cmpsb
nop
and
scas
repnz
stos
in
icebp
negb
ret
push
xchg
lods
repnz
lcall
inc
cli
jge
sub
lock
push
cmpsb
cmp
popf
mov
cmpsl
sti
nop
iret
mov
jb
mov
xor
or
sbb
pop
arpl
loope
lahf
mov
mov
add
mov
andb
sahf
push
jg
roll
lea
mov
enter
lods
ja
inc
jecxz
add
imul
iret
mov
ret
scas
lods
mov
add
and
into
adc
insb
mov
aad
cmpb
sbb
pop
bound
divl
mov
outsb
sub
dec
aam
push
sub
push
sub
dec
cmp
mov
pop
daa
mov
pop
dec
iret
mov
push
in
out
jne
in
jne
scas
mov
mov
loop
mov
in
inc
rorl
dec
sahf
jp
jg
xor
je
ljmp
insb
cwtl
mov
adc
movsb
cltd
mov
cwtl
cmp
cmp
arpl
sub
test
pop
xchg
das
push
test
fwait
mov
xlat
sub
pop
cmp
dec
iret
sub
hlt
jbe
loope
in
xor
xor
test
mov
xor
int
add
mov
aaa
push
mov
pop
cmp
mov
xor
das
cmp
fldt
inc
aas
stos
mov
cmp
mov
or
cmp
mov
int
mov
in
outsl
fucomp
push
or
ja
push
xor
xor
bound
xchg
lcall
or
jne
mov
loop
push
xor
sti
adc
add
cmpsb
fstpl
rcr
fidivrl
push
test
stos
enter
jge
xchg
inc
ja
jp
movb
add
ret
aaa
or
inc
jno
shlb
cmp
and
inc
xchg
pusha
insb
loope
outsb
adc
xchg
in
dec
xor
cld
out
pop
fmuls
clc
xor
mov
jno
js
or
clc
mov
mov
pop
lods
and
test
loope
push
mov
shll
sbb
das
pop
out
dec
ja
cmp
clc
mov
fcmovu
dec
cmp
leave
dec
pop
incb
scas
jbe
nop
cmp
and
mov
nop
ret
ds
or
pop
sbb
mov
or
mov
nop
jb
or
or
push
ret
sarl
in
inc
addr16
push
xlat
sarl
imul
cmp
xor
scas
mov
mov
pop
or
clc
mov
inc
repz
hlt
fistpl
pop
aad
push
fisubs
loope
arpl
jnp
mov
pop
add
xchg
div
and
cltd
push
int3
push
aaa
shll
sahf
not
jb
jmp
clc
cmp
jnp
neg
les
rcrl
xchg
mov
inc
mov
jne
sub
into
and
dec
enter
inc
jecxz
cwtl
cmc
sub
dec
mov
sbb
in
mov
mov
fidivrs
repnz
sub
ret
sub
xchg
or
jno
mov
pusha
pop
cwtl
iret
ljmp
mov
jmp
lcall
shr
xor
cmpsl
popf
jge
mov
mov
add
or
sbb
rcrl
in
lahf
mov
mov
push
and
call
dec
lods
and
lcall
pop
aaa
cmpsl
test
push
in
or
mov
jo
cmp
dec
dec
stos
dec
push
push
jbe
dec
jge
in
repnz
idivb
mov
mov
inc
imul
sub
mov
repz
pop
scas
pushl
cli
sbb
sbb
fadd
int3
aas
or
jae
lret
cmp
and
and
loope
dec
inc
jg
lcall
inc
mov
inc
pop
in
outsb
movsb
xor
mov
mov
sti
call
adc
dec
adc
jns
out
pop
fwait
mov
mov
dec
cmp
icebp
sbbb
andb
mov
aad
xor
sarb
mov
loopne
aas
leave
sub
addr16
mov
sbb
and
sbb
popa
dec
jmp
imul
dec
inc
cs
and
cmp
lock
gs
add
sbb
inc
scas
push
stc
dec
dec
out
ss
cltd
popa
xchg
sbb
test
insb
aas
jo
fbstp
xor
mov
cmp
pop
cmc
jnp
sub
out
mov
cmp
insl
push
pop
cwtl
mov
jge
sbb
push
xchg
push
out
or
lret
in
xchg
mov
mov
fcompl
loop
call
fwait
cltd
sub
pop
jo
push
push
addl
mov
std
add
lods
pop
push
loopne
nop
lahf
xchg
or
sahf
jae
movsl
ljmp
sbb
inc
push
dec
leave
jle
push
or
cmc
shrl
xchg
add
arpl
push
addl
fwait
jecxz
push
cmp
cmp
jb
pop
pop
xchg
js
fwait
sbb
pop
loop
sub
push
sbb
sbb
repz
adc
cmp
outsb
mov
call
das
dec
imul
nop
inc
stos
cmc
sbb
mov
stc
bound
int
mov
jae
pop
push
aas
test
xchg
subl
sbb
pop
jo
sti
xorb
cmc
sar
or
adc
sub
out
insb
nop
mov
pushf
loop
and
sub
daa
mov
push
loopne
cmp
or
push
test
inc
sub
adc
enter
mov
fdivl
stc
inc
pusha
pop
push
test
inc
pop
adc
out
repz
aas
sbb
in
fstps
sbb
cwtl
sbb
mov
mov
cmp
jno
add
jae
xor
pop
jle
jne
push
call
inc
jnp
pusha
xchg
mov
loope
dec
pop
cmp
lods
dec
cmpsl
sbb
and
into
scas
sub
sub
fs
cmp
cmp
mov
or
ficoms
in
pop
fs
inc
aad
inc
test
das
je
or
insb
outsl
sub
mov
mov
mov
popf
sub
gs
lods
cmp
pushf
inc
xchg
fs
mov
mov
fcmovnbe
in
push
push
les
xchg
lret
xchg
and
rcr
test
xchg
jmp
sbb
dec
xchg
mov
dec
mov
cmpsb
lea
push
mov
repnz
hlt
daa
mov
cmpsb
inc
push
sub
cmpsl
pop
adc
fs
insb
add
mov
iret
xchg
std
imul
or
jo
jnp
cmpsl
mov
pop
and
rcr
imul
cmp
push
jb
pop
insb
int
and
mov
mov
xor
movsl
xchg
sub
rcrb
dec
jmp
pop
xchg
push
pusha
hlt
fs
push
pop
gs
sar
nop
bound
inc
pop
orb
add
div
mov
add
mov
scas
sbb
cmp
rorb
sub
xchg
jge
or
insl
int3
and
or
jle
xor
testl
fdivs
fdivrs
test
sbb
lea
and
inc
out
sarl
xchg
movl
into
pusha
out
js
mov
push
adc
call
xor
mov
enter
jl
ljmp
jbe
or
negb
repnz
int3
gs
cli
mov
adc
xor
jle
xor
das
fisubrs
stos
gs
cwtl
repnz
sahf
mov
add
test
fwait
or
fdivl
pop
jge
enter
es
mov
dec
movsb
adc
jge
into
adc
rolb
sti
push
pusha
sub
sarb
and
gs
lods
add
lods
scas
cwtl
lea
add
inc
adc
and
fildl
dec
frstor
roll
aas
lcall
inc
lret
jae
mov
mov
dec
test
xor
xchg
lock
push
push
inc
jo
xor
inc
add
pop
pop
icebp
jecxz
cld
in
jae
fcomi
push
sub
jecxz
mov
push
sbb
nop
push
sbb
out
xchg
mov
inc
sbb
insl
stos
mov
pop
mov
adc
mov
movb
or
out
xor
popa
pop
sti
enter
cmp
std
int
sub
aad
clc
ret
scas
daa
gs
jno
add
push
lds
je
mov
or
mov
cwtl
adc
mov
popf
cwtl
pop
loop
mov
xlat
push
int3
in
test
push
lock
sbb
sub
into
ret
test
dec
roll
xlat
aaa
test
lds
inc
and
fsubrl
nop
add
fwait
mov
sub
mov
cmp
lods
ret
dec
daa
loop
stos
pop
sarl
lahf
adc
pop
lds
test
jo
fcmovnb
sbb
outsl
inc
pop
sub
inc
mov
hlt
fisubrl
fldt
pop
ja
or
mov
adc
pop
int3
icebp
outsl
addr16
shlb
cmpsb
iret
pushf
das
arpl
pop
xchg
dec
test
es
sub
cld
jg
ja
push
lds
jg
mov
in
in
dec
flds
jnp
pop
cmpsb
xor
jmp
mov
adc
or
das
mov
iret
or
mov
addl
sub
mov
add
aaa
imul
sbb
dec
sbb
mov
mov
lcall
fcoml
inc
mov
lods
inc
xchg
sbb
push
repz
mov
push
xor
imul
mov
sub
mov
jno
push
cli
aam
or
fsubr
push
ljmp
icebp
push
insl
movsb
jns
mov
cmp
es
cmp
call
stos
jl
mov
mov
dec
fsts
push
cli
mov
int3
mov
mov
inc
mov
sti
push
lret
lret
arpl
mov
aaa
fstps
ret
in
pop
sbb
cmp
push
mov
mov
mov
pop
ret
stos
add
push
dec
xor
in
mov
jne
fsts
and
ret
jae
std
test
and
add
mov
jb
rolw
cmp
cwtl
ds
insb
xchg
je
push
ja
lea
test
adc
stos
scas
mov
dec
mov
and
xor
dec
das
jg
xchg
cltd
and
sbb
pop
pop
add
sbb
push
add
jbe
jp
movsb
test
pushf
jge
mov
cmpsb
or
stc
shrl
jp
scas
add
push
stc
data16
sub
lods
cmpsl
dec
pop
rcr
pop
addr16
pop
mov
call
aam
ljmp
pushf
out
leave
adc
xchg
imul
pusha
mov
add
or
lea
vmovdqu
lcall
mov
inc
inc
push
ret
push
dec
data16
mov
push
adc
mov
mov
xchg
dec
das
sbb
out
xor
mov
loop
xor
jg
jno
movsb
fldl
xorb
fcoml
cmp
inc
adc
ret
in
inc
int
mov
cld
pop
insb
xlat
push
leave
sbb
mov
add
add
inc
and
xchg
je
iret
dec
adc
adc
les
jbe
nop
pop
xchg
or
xlat
xorps
jnp
inc
inc
mov
sahf
jns
dec
push
or
into
cltd
push
add
enter
push
xchg
inc
sub
or
arpl
mov
jmp
and
dec
pop
and
adc
in
add
jmp
arpl
mov
xchg
mov
pop
mov
mov
push
loop
mov
mov
fnstcw
in
cmp
daa
fs
jno
test
mov
mov
or
push
loopne
mov
pop
les
or
mov
dec
pop
mov
pusha
leave
enter
ja
inc
push
pusha
in
jo
enter
or
cld
ss
out
inc
cwtl
test
jnp
loop
imull
or
pop
xchg
pop
or
add
jge
or
sbb
xchg
clc
fs
ljmp
or
cmp
inc
aam
ret
fwait
sbb
push
scas
mov
leave
add
xlat
xchg
mov
push
lods
inc
not
xchg
sbb
xor
fmulp
insl
stos
inc
inc
xor
fidivl
pop
imul
fcomps
and
scas
pop
sti
and
add
mov
mov
rcll
stos
lods
ss
incl
fisubl
mov
add
push
xchg
fcmovbe
cvtps2pi
xor
sub
push
and
push
mov
adc
lods
sbb
lahf
es
jae
popa
jns
xchg
cltd
push
xchg
inc
mov
lahf
dec
adc
mov
inc
cli
and
sbbb
add
sbb
xchg
mov
mov
punpckhwd
mov
insb
daa
sub
fsts
jmp
call
clc
mov
push
das
pop
gs
adc
xor
or
sbb
mov
pop
mov
mov
outsl
jo
imul
fwait
int3
scas
cmp
pop
js
sub
out
cwtl
gs
movsb
mov
lret
aaa
pop
jg
dec
lret
adc
add
jno
sbb
jge
scas
inc
dec
scas
repz
mov
and
enter
filds
cmpsb
cltd
dec
ror
mov
xor
jmp
fimull
popa
jbe
jle
mov
mov
scas
inc
inc
xorb
addb
push
cltd
xor
or
cld
push
fsts
xor
pusha
jne
and
lcall
xchg
jmp
xchg
fidivrl
enter
add
mov
pop
test
insb
jbe
pop
mov
ljmp
mov
sbb
push
out
mov
adc
cmp
jns
or
jo
movsb
mov
scas
xchg
add
sub
jp
lods
shl
outsl
scas
mov
incl
or
lds
pushf
stc
test
xor
cmp
inc
sbb
pop
mov
jb
mov
jge
test
test
sbb
outsl
xor
dec
fldcw
cwtl
pop
jle
pop
test
subb
imul
and
push
push
mov
push
pop
add
daa
sbb
inc
fisubs
mov
out
neg
mov
cmp
in
in
push
aad
inc
inc
nop
mov
in
cmp
cmp
mov
xor
or
dec
xchg
mov
lret
les
cli
pushf
nop
inc
cmp
cmp
cmp
and
aas
lahf
push
push
orb
jge
push
or
mov
pop
mov
and
pop
jo
scas
mov
jne
mov
pop
push
insb
and
xchg
and
jmp
cwtl
mov
inc
inc
pop
mov
mov
fucom
add
xchg
cmp
sahf
cs
lock
mov
sbb
pop
and
movsb
inc
cltd
stos
jge
push
hlt
incb
repnz
adc
in
sbb
jg
into
pop
fdivl
add
scas
add
cmp
sub
jb
iret
jg
icebp
jns
ret
inc
mov
push
lret
jmp
jae
inc
mov
push
or
inc
push
xor
das
pop
mov
fadd
dec
in
out
repz
std
das
lea
stos
ret
or
fldcw
js
xor
mov
mov
stos
imul
shrb
lock
fisttpl
xchg
xor
ffree
add
cld
jg
xlat
xchg
ss
les
call
mov
je
pushf
or
or
inc
sub
cmp
arpl
push
test
inc
aad
sub
or
sub
ud0
movsl
jmp
into
xlat
stos
inc
cli
jmp
mov
add
xor
pop
outsb
sub
xchg
xchg
mov
scas
cmc
jne
sub
mov
sbb
sbb
jp
bound
add
xchg
in
push
cwtl
repz
enter
mov
jp
or
pause
shrl
imul
sub
lcall
out
test
ret
leave
lea
cltd
lret
mov
sbb
hlt
mov
and
out
fdivrl
xchg
ret
popf
dec
inc
xchg
xchg
xchg
jbe
jae
movsl
dec
cmp
jecxz
cmpsl
inc
push
sbb
or
xchg
scas
adc
mov
and
repz
enter
adc
xchg
pop
movsl
push
ret
aam
pop
in
push
sbb
movsb
out
and
sub
popf
les
fdivrl
scas
mov
fwait
in
fs
push
mov
mov
es
scas
mov
mov
movsb
sbb
mov
jge
cmp
mov
cltd
mov
jmp
cmp
xor
insl
hlt
pusha
icebp
inc
mov
dec
mov
inc
xor
je
push
cmpsl
add
push
pusha
pop
popf
cld
jae
mov
rcrl
fidivrl
mov
out
gs
sub
imul
xor
push
push
lock
ret
pop
std
lods
test
push
in
in
aad
jle
xor
loop
push
inc
mov
mov
mov
clc
loopne
imul
inc
sahf
add
xor
pop
dec
lcall
mov
jae
mov
sarl
xor
cltd
call
jnp
lods
jne
pushf
movsl
sub
add
or
cmp
cmp
sbb
pop
sarl
and
mov
sti
sub
decl
scas
mov
ja
repz
loope
pushf
iret
mov
mov
mov
fadd
out
insb
xor
fcoml
push
jg
pop
cltd
adc
xor
iret
addr16
pushf
pop
push
jo
cmp
cmpb
ss
mov
xor
into
pop
iret
repz
cvtps2pd
out
and
lahf
std
pop
sbb
das
xor
and
stos
jnp
mov
pop
dec
and
enter
pop
mov
cmp
ljmp
cltd
lret
add
test
adc
xor
fiadds
jnp
shlb
fs
mov
mov
xchg
int3
ja
or
adc
push
loopne
adc
mov
lret
ss
popa
ret
fildll
in
jg
in
mov
cmp
push
push
mov
pop
fidivrl
add
lods
xchg
adc
lcall
sub
or
mov
mov
xor
test
test
pop
ja
mov
mov
outsb
dec
jp
pop
or
mov
push
inc
leave
add
add
test
pop
div
jl
icebp
mov
fs
sahf
cli
xchg
add
ret
rcr
data16
xor
adc
mov
gs
insb
arpl
ret
ret
insl
mov
int
push
rol
ficompl
and
stos
int3
dec
int3
sub
ror
scas
pop
inc
mov
push
lds
inc
xchg
pop
rcl
adc
movsl
lods
aas
bound
jb
and
stos
xchg
sbb
add
in
in
test
adc
js
add
mov
xchg
stc
sbb
sar
sub
outsb
iret
mov
or
in
push
or
stos
fwait
mov
add
push
adc
int
xor
xor
xor
ljmp
pop
adc
pop
fsubrl
ljmp
mov
sbb
addl
push
xchg
idivl
ds
int3
mov
pushl
movsl
leave
xchg
outsl
cmp
cmp
jno
mov
sbb
cmp
inc
mov
out
adc
add
inc
add
fstps
dec
add
sbb
xchg
sub
jmp
std
pop
cmpsl
movsb
mov
adc
pop
repz
popf
dec
cmc
or
pop
and
cli
add
js
push
popa
jo
nop
movl
jbe
xchg
mov
mov
pop
cld
fisubrl
clc
jp
mov
icebp
ja
sbb
test
cmp
add
mov
call
lret
mov
in
or
ja
mov
jle
mov
and
sub
cli
push
mov
sub
ret
push
mov
mov
pop
cwtl
pop
lahf
cmpsb
out
lea
and
jecxz
mov
rcrb
sub
mov
sbb
sub
dec
inc
xor
xor
pop
ret
gs
jmp
jge
sbb
outsb
fucomp
call
xchg
fnstsw
jge
adc
mov
and
fisttps
sub
in
mov
add
inc
mov
dec
add
add
and
addr16
pushf
fdiv
xchg
out
xchg
jge
xor
pop
ffreep
outsb
cmp
in
and
mov
sbb
cmp
mov
inc
and
sbb
push
cltd
test
mov
xchg
icebp
mov
jp
mov
sarl
lcall
cmp
xor
dec
ja
sbb
jne
lods
rclb
xchg
lret
jle
enter
ds
shl
and
xchg
xchg
mov
lods
mov
repz
push
push
sbb
xor
es
sub
jbe
add
xchg
push
fcompl
dec
mov
rcl
imul
xchg
imul
and
or
mov
cmpsl
mov
jae
jp
and
dec
cwtl
adc
xor
stos
shrb
movsb
and
dec
inc
fbstp
pop
pop
mov
out
mov
or
test
movsb
fwait
clc
cmpsl
lods
mov
add
in
adc
int
call
add
mov
dec
and
lret
xlat
mov
jl
lcall
dec
xor
inc
xorb
inc
sub
add
pop
pop
jbe
in
int
jl
mov
dec
dec
lcall
aam
cwtl
mov
cld
dec
xchg
sub
pop
out
fbld
add
push
xor
sub
subl
out
or
sbb
or
sub
xchg
cmp
stos
dec
andl
stos
xchg
in
mov
insb
and
push
fwait
xor
sar
lock
cmp
repz
push
xlat
sub
pop
pop
jl
addb
mov
add
sti
out
xor
ret
cs
aam
push
iret
cmp
sbb
mov
mov
sub
xor
and
inc
dec
out
push
mov
mov
xchg
xchg
scas
cmovne
das
dec
adcl
and
mov
ljmp
fs
mov
lods
aad
xchg
mov
mov
adc
mov
xor
mov
dec
adc
mov
fs
mov
int3
sub
cmp
mov
pop
mov
xlat
test
int
call
ljmp
xor
mov
xor
inc
inc
cmpl
mov
addl
out
out
in
mov
mov
xchg
push
mul
or
roll
incb
xchg
hlt
stos
inc
popf
cld
xchg
popa
stos
xchg
int3
out
fcomps
scas
or
mov
sbb
nop
test
jg
push
cli
movsl
stos
ret
jnp
iret
mov
jge
jno
cmpl
sub
mov
pop
sbb
or
xor
sbb
sahf
sub
mov
sub
ud0
movsb
mov
mov
cmpsl
repz
and
mov
add
das
jb
push
es
lods
push
fbstp
push
adc
mov
int
scas
out
push
dec
ljmp
pop
xchg
push
pop
outsb
sub
lods
xchg
mov
fidivrl
scas
aam
ss
sbb
les
and
leave
cmc
jb
dec
xlat
mov
notl
lret
bound
ret
xchg
sub
es
push
int3
jb
fisubrs
add
nop
mov
sub
push
imul
inc
inc
fstps
adc
data16
dec
inc
sbb
pop
push
mov
enter
fbstp
ljmp
xor
lds
hlt
fldenv
test
ds
nop
push
sarb
pop
xchg
cmp
push
pusha
sub
int
pop
ret
push
push
dec
daa
mov
add
pop
push
aaa
push
scas
lret
add
sbb
ss
jmp
arpl
push
xor
inc
jp
pop
add
iret
xlat
mov
sbb
cmpsb
sbb
pop
addr16
xchg
pop
movsb
jae
jge
jo
out
xchg
repnz
pop
ret
sbb
jno
mov
cmp
push
test
sub
jae
mov
fsubrl
pop
mov
push
cmp
mov
jle
ss
adc
lods
jb
stc
jno
imulb
hlt
add
and
fisubl
sbbl
pop
jne
pop
cmp
lret
xchg
dec
outsl
rclb
or
xchg
inc
xchg
clc
inc
pop
popf
mov
push
add
shr
mov
inc
pop
sbb
cmp
int
add
testl
cs
dec
ja
dec
in
test
dec
jle
leave
bound
loopne
negb
or
mov
je
jne
into
jmp
push
push
push
fistl
dec
int
rcl
in
rcrl
inc
pop
jnp
test
sub
add
add
mov
jle
icebp
mov
ja
lea
icebp
xor
cmpl
fidivl
mov
scas
mov
clc
or
or
or
cld
or
ds
aam
data16
leave
mov
addr16
pop
pusha
dec
xor
faddp
scas
lcall
roll
push
scas
pop
in
push
pop
mov
or
and
and
sti
pusha
repz
cmpsb
jbe
movsl
div
push
jge
notl
fldenv
and
aaa
jno
lret
test
xor
mov
pop
ret
addl
dec
jbe
mov
cmc
xlat
data16
inc
dec
test
push
icebp
mov
pop
xor
jle
addr16
push
xor
xor
jae
sbb
das
dec
clc
cs
in
scas
inc
mov
jnp
adc
cltd
stos
dec
jnp
jmp
out
inc
pop
data16
sti
add
cmp
daa
daa
fucomip
call
mov
mov
test
iret
insb
scas
cli
sub
and
dec
out
cld
cmp
mov
cli
sub
mov
xor
fwait
mov
push
sub
mov
mov
adc
aad
ds
jae
cwtl
xlat
mov
push
shrb
lods
and
out
pop
leave
adcl
imul
push
and
test
jne
mov
out
sahf
cmpsb
stos
mov
xchg
rclb
jl
and
push
mov
dec
mov
mov
pushf
cmp
push
dec
insb
jae
cmp
sbb
and
and
mov
sbb
popf
outsl
jne
mov
mov
sti
inc
shrb
jecxz
mov
jnp
shrb
imul
xacquire
xchg
push
mov
je
mov
std
xor
sub
and
repnz
cs
jl
fisubrl
fucomip
movsl
push
xchg
pop
sub
jl
jmp
mov
xor
jne
ja
cli
mov
sub
jbe
inc
aas
jecxz
pusha
lahf
jnp
lds
cmp
inc
arpl
fldt
sub
in
cmp
pop
cmp
rol
in
lods
mov
outsb
imul
ss
movsl
cmp
inc
cmpsb
pusha
cmpsl
cwtl
inc
or
cmpsb
or
add
cwtl
inc
shrl
adc
js
sub
and
pushl
in
shlb
insl
jmp
call
cmp
clc
jge
imul
sarl
clc
inc
test
in
xor
or
enter
xor
pop
fs
scas
adc
jne
jle
or
jecxz
fwait
in
rcr
call
or
mov
test
inc
dec
aaa
daa
push
mov
sbb
mov
in
dec
xchg
dec
das
imul
xchg
xor
call
fs
repnz
dec
repnz
mov
add
or
jge
xchg
jbe
and
pop
outsl
cmp
test
ficomps
imul
daa
inc
sbb
pop
int3
dec
dec
shll
out
or
leave
inc
test
pop
mov
ret
dec
lcall
out
sub
mov
ret
cs
int3
and
push
aad
adc
dec
scas
out
xchg
xor
xchg
insb
dec
cvtpi2ps
cmc
les
bound
fidivrl
mov
data16
and
aad
pop
mov
imul
jns
loop
repnz
inc
jb
ret
mov
ss
sarb
mov
movsl
js
addr16
push
aaa
xchg
jb
mov
jg
lods
cmp
add
mov
mov
fnstenv
cmc
lock
push
cltd
add
in
mov
xor
adc
xor
lock
or
ja
jecxz
mov
enter
es
clc
repz
adc
dec
adc
call
push
adc
iret
dec
pusha
divb
jmp
repz
xchg
or
addr16
or
aam
push
mov
test
cmp
stc
and
inc
jne
sub
cmp
fsubs
test
fcmovnu
push
out
cli
xchg
call
adc
pop
mov
cmpsl
icebp
jae
cltd
jne
jmp
mov
fcmovu
inc
xlat
fstl
push
xor
inc
int3
cld
incl
cltd
add
inc
xabort
in
jo
std
or
push
je
lret
jb
sbb
pop
inc
jmp
or
stc
jb
ret
add
mov
or
adc
adc
cltd
push
test
fidivrl
stc
xchg
inc
adc
and
imul
cmp
rcrl
push
sbb
test
xchg
adc
outsl
and
nop
sbb
pop
std
push
out
in
or
pop
into
dec
aaa
nop
incl
jnp
cmpsl
sarl
lcall
jo
popf
arpl
mov
sub
stc
test
js
mov
add
sbb
inc
daa
call
fistl
push
xchg
cltd
clc
mov
in
cmp
out
sub
sub
repnz
inc
pop
adc
lods
dec
mov
jb
adc
out
sub
pop
leave
mov
adc
pop
adc
ljmp
mov
jns
ss
xchg
mov
dec
movsl
dec
sbb
or
mov
add
mov
push
aas
sub
cmp
sub
sub
icebp
mov
pop
sub
mov
xor
inc
jge
loope
outsl
fbstp
inc
sub
mov
insb
pop
int3
shll
adc
subb
ret
imul
and
cmpsb
pop
loope
inc
pop
mov
pop
pop
outsl
pushf
pop
pop
popf
xchg
leave
inc
push
sbb
mov
cmc
stos
je
rcrb
adc
les
jns
lds
add
in
dec
mov
xchg
data16
adc
repnz
mov
pop
iret
mov
add
shll
mov
insb
pop
mov
and
shlb
test
mov
inc
loope
add
mov
sbb
push
cmp
sub
adc
fisubrs
cmp
dec
dec
xchg
std
cmp
push
push
inc
xor
xchg
xor
test
mov
inc
idiv
add
mov
not
iret
sub
pop
mov
fistpl
in
sbb
jge
push
jno
rcll
push
dec
into
xchg
addr16
push
icebp
subb
cwtl
fistl
dec
mov
gs
jae
int
jnp
in
loopne
mov
add
sti
sbb
push
incb
inc
shll
sbb
imull
out
mov
sbb
mov
clc
add
jb
sub
xlat
push
dec
lcall
pusha
pop
push
jge
inc
add
aad
push
cs
cli
mov
adc
xor
inc
stos
dec
cmp
stc
stos
ficoms
or
cltd
pop
loopne
mov
push
cmp
pop
fisubrl
sbb
ret
test
inc
mov
stos
ret
in
div
push
cmp
inc
gs
cltd
pusha
loope
fmuls
pop
in
lock
mov
cld
pop
add
jmp
pop
iret
jbe
add
mov
mov
ret
div
in
ljmp
adc
ljmp
xchg
inc
ljmp
xchg
mov
mov
and
or
outsl
xchg
scas
imul
or
sub
nopl
push
pop
mov
repnz
lods
push
into
mov
movsb
dec
and
xchg
mov
loop
fwait
cmp
xchg
xchg
sahf
xchg
cld
mov
mov
push
ficomps
push
jmp
adc
xor
jge
cmp
rcrl
cltd
clc
dec
lcall
aam
faddl
ror
push
les
cltd
ja
fsubrp
jns
add
out
fimull
push
bound
fstl
inc
divb
xchg
fisttpll
clc
sub
adc
sbb
add
or
icebp
cwtl
xchg
cmpsb
and
vprotw
pop
mov
mov
mov
add
cmc
xchg
cltd
rcrl
adc
push
rcll
push
jb
gs
mov
pop
popa
mov
push
pop
les
scas
xor
gs
test
fistps
inc
out
or
fisttpl
mov
ret
in
movsl
std
add
setle
jmp
pop
inc
adcb
mov
or
andl
mov
cmpsl
ds
cwtl
or
mov
push
sub
mov
pushf
inc
aas
cmpsl
xchg
stos
int
out
es
fstl
mov
clc
nop
in
in
incb
xchg
lret
cmp
jns
aad
inc
inc
daa
jae
sub
ljmp
cvtps2pd
pop
jb,pt
js
add
outsb
rcrb
jae
pop
cwtl
jne
push
dec
test
push
cmp
sbb
ja
jg
dec
mov
push
es
daa
xchg
in
jp
xor
sbb
aam
and
cmp
ss
rolb
sbb
sbb
push
adc
dec
iret
loope
cmp
jbe
je
or
fs
adc
xor
cmp
inc
rolb
loope
cli
testl
mov
cmpsl
add
pop
inc
cmc
faddl
jecxz
and
lods
out
loop
cmp
push
add
mov
je
mov
dec
call
lods
ss
cmp
mov
push
mov
sub
add
jbe
xchg
or
or
jl
out
mov
sbb
adc
test
add
cmpl
mov
pop
rcrb
pop
sbb
xor
imul
addb
xor
fwait
loope
lret
cmpsb
aas
xchg
adc
push
sub
mov
out
fisubs
jg
std
adc
jge
bound
lret
or
cltd
mov
xor
push
es
lock
ss
ja
lea
or
popf
pop
ret
cmp
jp
call
push
and
mov
adc
and
xlat
lock
aad
aam
js
push
in
jecxz
mov
xor
and
xchg
repz
ss
xchg
fsubrs
je
push
xor
test
push
fadds
mov
int
cmp
leave
mov
fnstsw
fldt
out
cbtw
lods
or
cltd
mov
cmp
push
ret
cltd
xor
mov
and
sub
enter
push
movsl
mov
add
fcmovnb
adc
inc
inc
in
hlt
call
negb
push
mov
int
pop
imul
test
jl
jno
lock
das
aad
pusha
fcompl
lods
or
enter
sbb
fsubs
clc
pop
or
or
inc
outsl
shrb
cmpb
lahf
mov
sbb
jb
push
lea
aam
add
in
ss
mov
ja
subl
jg
lods
outsl
xor
dec
sbb
loope
dec
mov
pop
pop
jle
pop
jbe
ret
scas
shrl
cmp
sahf
or
daa
and
stos
adc
mov
sahf
sub
cld
adc
cmp
mov
xchg
and
push
into
std
pusha
or
imul
popa
psubsw
fistps
mov
pop
xchg
pop
movl
jge
or
cmp
test
ret
scas
xchg
mov
add
repnz
mov
sub
mov
push
inc
fcmovbe
jb
mov
mov
aad
mov
daa
cmp
sbb
or
adc
xlat
pop
push
dec
xor
jo
pop
in
fidivrl
fnstsw
push
insb
ja
push
xor
shll
adc
xchg
aaa
fists
inc
push
jmp
test
xor
fwait
adc
outsl
mov
testb
pusha
dec
jl
inc
inc
filds
test
inc
stos
pop
faddl
inc
lods
adc
lcall
pop
xchg
sbb
dec
popa
cmc
push
pop
lock
cmp
adc
pop
mov
and
outsb
movsb
add
mov
negb
rclb
jecxz
outsb
and
cli
push
mov
or
sbb
xchg
out
pusha
fsts
stc
js
sub
jno
pop
cmpsl
pop
adc
and
lahf
xor
out
and
int
es
mov
xchg
js
cmp
movsl
inc
xor
xchg
push
ror
lahf
dec
notl
fldenvs
sahf
xchg
or
adc
int
arpl
sbb
scas
test
sbb
dec
cld
and
push
stos
addr16
into
jecxz
out
xor
andb
bound
and
adc
dec
mov
push
adc
das
or
aas
inc
or
loop
ret
or
inc
scas
cmp
mov
mov
jmp
push
push
pop
dec
cmp
mov
and
xchg
cmpsl
adc
xor
dec
mov
adc
mov
movsb
sti
mov
and
divb
and
push
inc
or
jo
push
jne
pop
cmp
arpl
fcoml
test
mov
test
fwait
stos
xchg
xor
jp
push
add
insl
cmp
stos
push
pop
out
sub
iret
data16
mov
sub
cmp
cltd
ja
cld
dec
and
push
pop
and
xchg
push
mov
neg
dec
cmc
and
in
daa
nop
in
pop
cmp
push
ljmp
int
mov
pop
dec
call
xchg
jl
movsb
lea
negb
fwait
in
imul
sub
add
enter
mov
jae
loopne,pt
ret
and
ss
adc
pop
out
mov
push
mov
inc
push
xchg
adc
std
sbb
into
push
push
ret
lcall
fsubp
fadd
xchg
push
test
inc
inc
xor
pop
dec
inc
loop
jl
imul
xlat
addr16
pop
adc
jno
out
mov
xor
out
dec
bound
mov
add
mulb
and
pop
sub
aaa
cmp
pop
pop
push
mov
jl
outsb
sti
push
inc
inc
enter
xlat
daa
jae
je
aam
adc
and
adc
push
push
adc
outsl
mov
incb
aam
cli
jmp
jne
mov
pop
dec
clc
sbb
adc
loopne
outsb
loop
and
and
out
sub
inc
inc
pushf
sub
aam
xchg
mull
imul
add
js
inc
and
push
js
js
inc
pop
les
sub
stos
shlb
dec
dec
insb
lret
popf
leave
daa
loop
inc
push
aad
fldl
mov
xchg
repnz
mov
insb
push
jno
or
sub
cmpsl
jge
pop
mov
fdivp
or
repnz
cld
xor
dec
cmp
lahf
cmpsl
int3
rol
es
push
adc
sbb
mov
adc
pop
lods
xor
xchg
std
arpl
jns
frstor
jo
mov
xchg
cmp
mov
rcll
push
push
and
cmp
loop
jl
fadd
dec
mov
scas
mov
sub
clc
js
jns
inc
push
jne
lret
push
push
sub
arpl
dec
subl
jmp
and
mov
jbe
rol
fstl
fwait
xacquire
jle
rcrb
adc
fimuls
mov
pop
adc
xchg
mov
adc
xchg
mov
aad
jnp
fistpll
je
popa
push
lahf
or
mov
lock
pop
inc
cmp
scas
sub
rcl
jnp
cltd
mov
or
lea
dec
fstps
and
or
out
stc
push
mov
sbb
aad
roll
ffree
mov
push
enter
fs
push
xchg
xchg
imul
xchg
lock
movsb
rcll
jmp
imul
fsubrs
push
cmp
adc
mov
scas
sti
dec
adc
or
push
movsb
jnp
fcompl
mov
ljmp
xchg
sbb
fnstenv
jecxz
push
mov
xchg
call
or
orb
sahf
inc
jno
mov
mov
iret
mov
push
clc
ret
test
rclb
enter
sbb
stos
sbb
outsl
aad
mov
sbb
dec
cmp
mov
shlb
push
xlat
shlb
cmpsl
stc
ficoml
push
mov
xor
loopne
or
sub
in
cmovbe
inc
mov
jae
or
out
push
or
inc
js
dec
faddp
enter
add
pop
and
sub
push
call
sbb
cli
sbb
loopne
in
jne
int3
inc
lods
mov
arpl
mov
shrl
das
xor
push
ss
cmpb
mov
xchg
test
loope
cmp
idivb
enter
dec
dec
push
add
idivl
dec
enter
or
into
js
cmc
sbb
mov
push
mov
icebp
out
scas
cmc
xor
pop
xchg
adc
outsb
das
jmp
and
add
xchg
pop
fdivl
loop
jns
jae
movsb
ret
mov
fdiv
kxorb
es
stc
mov
dec
fs
test
add
cmc
add
in
ret
ljmp
andl
cmc
push
es
cli
out
mov
mov
xchg
dec
subb
adc
in
aad
push
push
mov
xor
xor
xor
mov
mov
aam
cmp
insb
cli
dec
sbb
dec
into
sbb
mov
jae
pop
aas
sti
push
xchg
pop
decb
mov
add
rclb
shll
int3
push
inc
cltd
out
les
add
into
inc
ja
pop
adc
sbb
addr16
push
aas
xor
mov
add
ja
pop
cmp
pushf
mov
mov
ljmp
in
xchg
pop
xor
sub
jl
or
shl
cmp
pop
cmpsb
pop
aad
adc
arpl
push
inc
or
push
les
mov
in
dec
ds
mov
movsb
pop
xchg
adcb
or
pop
sbb
mov
xor
pop
and
lds
sbb
add
jns
dec
outsl
pop
jbe
je
addr16
mov
mov
inc
add
inc
inc
xchg
js
lods
pop
aad
fcomp
add
jp
lock
out
test
adc
xor
mov
lcall
mov
and
push
xchg
cmp
mov
push
clc
pop
sbb
inc
or
cmp
repz
mov
jge
dec
pop
push
ss
sbb
test
jp
out
xchg
mov
dec
cmc
push
sub
loop
aaa
xchg
add
fdivrp
aam
cmpsl
cs
das
sbb
repnz
xchg
lret
or
dec
mov
lret
jmp
push
test
fisttpll
pop
jbe
fimuls
je
cmp
addr16
add
pop
push
js
jno
xor
sbb
das
mov
jbe
aam
dec
jno
push
jmp
jge
mov
fnstenv
das
xchg
loope
pop
seto
int
or
fwait
add
mov
sub
xor
addb
test
mov
inc
popa
test
dec
call
cmp
adc
add
adc
jne
xchg
fbstp
outsb
jne
jbe
mov
jge
add
dec
insl
fisttpl
pop
es
in
mov
pop
in
pop
bound
stc
pop
adc
out
pop
pop
loop
pop
and
mov
fisubrl
addr16
leave
loop
decl
movlps
xchg
fldcw
xor
aas
or
push
cmp
popf
jno
cmc
push
loope
loopne
jns
xor
in
adc
add
addr16
out
push
shrb
jns
repnz
daa
ds
outsb
cmpsb
movb
jg
push
sub
iret
cmp
mov
push
mov
std
fcoml
mov
fadds
xchg
pop
cmp
shll
push
sub
insb
cmp
fisubrs
cmp
add
xor
adc
divl
xchg
and
lds
adc
pop
inc
cli
jne
ss
sbb
add
sbb
jg
sbb
enter
test
in
mov
cmp
sti
test
cmp
pushf
adc
hlt
sub
or
cwtl
daa
xor
cld
shll
ffreep
in
iret
xchg
push
sub
mov
ja
shr
test
pop
jmp
add
lahf
nop
mov
pop
sub
push
xchg
sar
sahf
pop
sbb
dec
xlat
sub
imul
dec
adc
mov
out
push
les
fistps
jmp
cli
lahf
mov
jg
lret
and
hlt
addb
inc
or
sahf
jne
dec
movsl
dec
lods
xor
jnp
and
mov
ljmp
arpl
jl
mov
and
repnz
or
test
movsb
fisttpl
movsb
pop
push
loop
mov
mov
aam
xchg
jmp
push
out
test
out
jecxz
push
cmp
and
je
and
mov
add
ror
mov
jecxz
cmpsl
pop
push
aas
aad
jbe
lret
jecxz
dec
movsb
imul
lock
loop
add
mov
test
out
sbb
cmpsb
adc
or
dec
mov
mov
dec
sbb
jl
test
outsl
daa
jge
sub
sbb
sbb
push
sbb
in
dec
ffree
mov
xor
sti
loopne
push
fbld
orl
test
in
or
outsb
cvtdq2ps
adc
or
push
mov
xchg
stos
pusha
test
pop
call
popa
in
lock
cmp
sti
fidivrl
pop
push
or
cmpsb
ss
outsb
inc
shlb
scas
cwtl
cmpsl
adc
sbb
cwtl
popf
push
movsb
in
add
movb
jp
decl
pop
mov
adc
pop
mulb
pusha
clc
xor
negl
jp
fimuls
dec
mov
not
xor
mov
lods
lods
fists
jae
jp
ficomps
or
aaa
push
push
int
mov
jns
or
adc
mov
insl
add
scas
idivb
lret
pop
jge
lea
xchg
or
jae
inc
cli
jne
mov
xchg
rorl
je
stos
jbe
js
xchg
dec
arpl
cld
repz
jo
int
add
and
shlb
out
mov
push
aas
xor
push
xor
or
fcoml
jl
sarb
sbb
pop
test
push
and
in
xorb
jbe
xor
test
adc
shlb
movsb
std
add
idiv
add
fsub
pop
cs
jno
pop
xor
push
ffreep
imul
test
mov
insl
out
rolb
lods
lcall
or
fdivl
imul
daa
fcoml
hlt
dec
adc
leave
lods
adc
aam
stos
jle
repnz
mov
push
cmc
dec
pop
lcall
xor
lods
push
mov
mulb
cld
lcall
push
icebp
mov
mov
hlt
scas
push
xor
mov
jmp
push
add
xchg
jecxz
adc
std
daa
ss
lods
sub
and
xlat
rclb
fsub
leave
push
leave
add
cmpsl
mov
xchg
pop
pop
nop
popa
xorb
jns
mov
jl
bswap
cli
or
add
xchg
or
pop
int
or
mov
and
or
mov
xor
arpl
das
ja
fsts
insl
mov
sahf
out
mov
psubq
mov
negb
add
pop
and
push
mov
out
lods
insb
ret
test
xor
test
and
mov
out
cmpb
nop
mov
sahf
add
lahf
repz
jno
lds
add
pop
cmp
push
or
mov
les
inc
lock
out
ja
lret
and
adc
xor
sbb
xor
jno
inc
mov
div
push
enter
leave
cmp
adc
and
inc
in
or
mov
sub
add
inc
adc
and
jns
sbb
mov
out
inc
fidivl
sub
xchg
xchg
lock
mov
push
mov
mov
and
pop
adc
ja
loop
bound
mov
into
fwait
lods
stos
inc
xchg
pop
push
lods
div
sbb
inc
cs
daa
fs
test
icebp
push
int3
push
lcall
dec
aam
mov
lods
bound
xor
dec
les
jb
pop
jns
jne
xor
jmp
xchg
loop
xchg
negl
xor
mov
add
faddl
addl
movsb
popa
cmp
mov
jo
ljmp
or
mov
pop
inc
rclb
push
jae
rorb
jo
add
out
cld
je
in
xor
js
push
fisubs
clc
fcoml
jae
jbe
mov
mov
mov
fisttpll
mov
das
push
xchg
ljmp
dec
push
or
movsl
into
out
mov
mov
mov
push
or
pop
cmpsl
hlt
mov
mov
pop
push
jne
ret
sahf
lods
in
dec
std
xlat
imulb
and
cmp
cmp
xor
adc
jno
js
push
xadd
arpl
test
stos
dec
pop
shll
cli
outsb
xchg
mov
cmpxchg
aas
jmp
push
sub
sbb
test
enter
loope
pushf
add
dec
sbb
dec
test
mov
repnz
jp
xchg
push
xor
mov
mov
push
addr16
data16
lock
mov
mov
mov
mov
add
stc
sbbb
xorb
xlat
test
leave
test
aaa
jle
cwtl
fstps
es
aad
out
adc
mov
xchg
hlt
dec
es
insl
mov
popl
fs
aad
pop
cmp
dec
sub
push
out
daa
arpl
and
xchg
xor
arpl
iret
xchg
xchg
mov
xchg
outsb
and
andb
dec
push
aaa
addr16
dec
cwtl
push
cmpsb
push
mov
ljmp
mov
out
mov
jg
stos
sub
mov
test
data16
jae
test
mov
cwtl
mov
mov
jns
ds
jp
lods
xchg
adc
nop
pop
loop
mov
dec
aaa
fsts
movsb
dec
add
push
and
pushl
mov
xor
lds
popf
pop
insl
outsl
mov
scas
cmp
rcrl
fdivl
ret
jmp
sub
or
pusha
leave
and
mov
insl
push
push
adc
xchg
jno
in
sbb
in
insl
mov
xor
or
arpl
adc
cmp
mov
pop
add
mov
repnz
clc
push
ret
xor
adc
mov
jae
adc
pushf
add
xorb
fdivr
jnp
sub
mov
pop
jp
mov
mov
pop
std
push
or
dec
or
mov
push
jge
repnz
push
pop
sahf
pop
fs
mov
test
out
pop
nop
mov
nop
sub
adc
mov
and
cmc
loop
fidivl
jae
data16
add
adc
jae
mov
dec
fwait
pop
popf
mov
xor
out
jecxz
lock
ss
hlt
pop
mov
shrb
popa
dec
adc
fldl
jge
xlat
xor
mov
arpl
inc
pop
out
ljmp
and
jno
sbb
mov
in
ret
leave
push
mov
loope
xchg
dec
insb
mul
mov
fwait
or
movsb
sbb
out
pop
pop
push
test
push
out
xchg
aad
adc
mov
xor
in
inc
adc
mov
xchg
fldl
inc
jmp
ds
clc
mov
repnz
fildll
test
fldl
in
addb
sub
mov
jg
in
fwait
sub
insb
mov
es
flds
xchg
dec
jmp
dec
bound
xlat
xchg
popa
adcl
pop
inc
and
cs
imul
and
outsb
jnp
xchg
jp
loop
pop
push
push
pop
xchg
cmpsl
icebp
in
cmp
pop
int
ficomps
iret
push
movsb
ljmp
xor
sbbl
push
xchg
icebp
lods
sub
pop
push
adc
push
jb
xor
aas
mov
je
fcompl
inc
jp
fcomip
and
aas
sar
pop
enter
stos
lods
jle
pop
add
dec
adc
xlat
pop
repz
out
je
stc
or
jbe
xor
ret
mov
insl
popf
jl
inc
rcll
mov
push
and
mov
fcmovbe
pop
fmuls
cmp
jecxz
cmpsb
inc
dec
add
mov
sbb
push
xchg
in
xor
sub
cmpsb
adc
xor
leave
push
in
pop
test
xchg
sbb
jnp
jge
inc
jb
inc
stos
cmp
mov
dec
fwait
push
sahf
nop
jmp
imul
mov
mov
cmpsb
xchg
inc
push
mov
test
mov
test
es
bound
and
fwait
lea
call
add
dec
and
mov
daa
fimuls
lods
or
inc
xor
cmpsl
xchg
push
stos
sbb
sub
mov
popa
xlat
push
das
add
nop
das
jbe
inc
pop
gs
mov
xchg
outsl
ret
xchg
shrb
loopne
xor
pop
loop
scas
xor
rcrb
fcoml
dec
pushf
add
jl
add
aam
mov
cmpsb
mov
push
lds
mov
clc
ror
inc
add
stos
cs
push
mov
jo
push
add
outsb
mov
adc
cmp
lea
push
mov
popf
pop
inc
fs
sbb
mov
inc
sbb
fcoms
sbb
pop
jmp
mov
jnp
cli
aas
or
pop
aad
out
jg
je
int
pushf
mov
mov
jb
repnz
xor
pop
pop
sti
sahf
and
mov
aaa
decb
and
sub
in
mov
fdivrs
push
addr16
xor
in
fmul
inc
inc
mov
arpl
shrl
xor
mov
retw
sbb
adc
lcall
out
ljmp
test
cld
mov
cmc
aam
popa
in
ret
jb
jg
jbe
lret
lods
outsl
jp
adc
div
adc
out
sbb
push
repz
or
xor
iret
dec
call
pop
fwait
inc
pop
mov
xchg
cmp
outsb
int
xchg
cmc
rclb
out
jnp
mov
test
movsl
in
push
rcrb
das
lock
pushf
stos
adc
sbb
mov
inc
lods
lret
dec
or
insl
xor
ss
pop
fsubrp
xchg
xchg
jge
sbb
sbbl
pushf
pushf
scas
jns
lea
jo
adc
int
mov
test
push
lret
icebp
pop
int
inc
mov
xchg
sar
push
sbb
aam
movsl
mov
std
dec
or
movsl
cltd
push
xchg
and
fwait
inc
outsl
pop
pop
push
dec
mov
push
jge
popa
sub
xchg
rorl
loopne
and
xor
push
loopne
mov
xchg
cltd
or
and
dec
push
nop
gs
ret
cld
sub
mov
dec
ds
cmp
push
sub
adcb
loope
push
repz
cmp
cmp
jae
inc
clc
inc
push
lcall
shll
ljmp
fnstsw
ss
sahf
pushfw
xchg
idivb
data16
mov
out
insb
mov
rorb
fs
jmp
cwtl
pop
and
lret
push
dec
inc
in
xchg
lods
inc
pop
and
pop
outsl
ljmp
inc
addl
xchg
jmp
jg
mov
in
jp
mov
xchg
mov
ret
jge
dec
pop
xchg
push
out
or
test
mov
sahf
xchg
xlat
mov
push
pop
pop
fnstcw
inc
outsb
or
push
inc
into
hlt
and
cli
das
xchg
mov
les
scas
jl
lahf
sbb
into
mov
xor
pop
es
add
hlt
popf
push
cmp
int
jns
in
lret
xlat
push
push
ss
dec
xor
mov
dec
mov
dec
pusha
aad
pop
xor
cmp
or
xor
insl
xchg
lods
imul
jno
je
loopne
lock
adc
push
xchg
imul
cs
in
test
divl
pop
push
add
loopne
cmpsb
shll
negb
stos
pusha
repnz
aaa
jno
mov
outsb
mov
dec
cmp
in
in
pop
jnp
fstl
pushf
sub
lret
mov
sub
test
std
pop
jbe
mov
call
push
out
lock
data16
and
das
jecxz
cmp
push
pop
mov
cld
add
and
test
pop
pop
outsl
add
cltd
and
fwait
mov
das
cmp
out
insb
lods
fldcw
roll
cmp
or
das
into
xchg
subb
jmp
cld
lds
js
add
or
push
scas
fsubl
cld
fmull
and
add
push
sub
notb
scas
cmp
xchg
popf
push
in
sbb
sub
cltd
sbb
andl
arpl
dec
int3
loop
loopne
xchg
fists
jle
test
adc
mov
jno
rorb
add
mov
or
in
mov
loop
cmc
in
dec
es
dec
loope
aad
mov
fiadds
jbe
jmp
xchg
movsl
cmc
ljmp
xor
jge
mov
roll
mov
add
and
ret
push
sbb
xor
xor
loope
mov
adc
pop
iret
xor
popf
inc
clc
jns,pt
adc
add
mov
cwtl
pusha
mov
or
sbb
inc
daa
pop
dec
jae
nop
shr
inc
xor
mov
sbb
cmpsb
dec
pop
int3
mov
dec
inc
xchg
je
cli
push
outsl
push
push
filds
jmp
ljmp
push
sbb
lret
pop
or
push
je
push
push
lods
sub
in
enter
sbbb
inc
shlb
xor
push
arpl
test
jl
sbbb
sub
addr16
or
xchg
pop
adc
or
scas
inc
adc
xchg
scas
adc
cs
clc
repnz
sbb
jno
imul
push
call
and
add
push
pop
adc
sbb
sbb
adcb
test
out
imul
mov
pop
test
sbb
stc
cmp
fsub
fstpl
xchg
arpl
xor
jl,pt
mov
xchg
jge
pop
jbe
pop
or
and
pop
xor
cwtl
push
rolb
nop
xchg
mov
mov
pushf
pop
cmpsb
inc
pop
rcl
arpl
fwait
adc
pop
mov
test
dec
and
sub
repz
stos
push
lcall
dec
add
push
dec
mov
mov
addl
or
push
jnp
aas
lahf
mov
pop
mov
call
movsb
xor
cmp
in
and
and
mov
aam
push
adc
mov
sbb
insl
stos
stos
adc
ds
mov
jbe
pop
adc
mov
or
dec
popa
lret
mov
call
cwtl
or
stos
add
add
fidivl
dec
mov
jmp
sub
out
popa
in
cwtl
sub
jmp
rcll
mov
sbb
mov
mov
inc
call
lock
mov
mov
test
inc
and
in
int3
sbb
cmp
mov
adc
push
and
addr16
mov
fwait
mov
nop
mov
add
into
mov
push
frndint
pusha
sub
adc
arpl
enter
jmp
pusha
xlat
test
or
cli
mov
fildll
repnz
mov
imul
out
aam
sbb
inc
hlt
out
lods
movsl
addr16
or
push
cmc
pop
mov
add
xor
dec
aas
and
in
arpl
add
insl
xor
jno
sbb
inc
out
in
jae
jle
mov
addb
stc
ret
shr
xchg
pop
and
sub
sbb
sti
fiaddl
ja
adc
loopne
jl
push
shrb
fsubp
aam
pop
push
scas
lahf
es
setne
inc
pop
mov
and
mov
test
or
addr16
outsb
xchg
das
gs
loop
sarb
aaa
daa
cmp
mov
les
jnp
add
mov
xchg
aad
xor
pusha
push
pop
mov
mov
jmp
iret
push
nop
loopne
mov
ficomps
mov
mov
cmp
sti
hlt
imul
imul
shll
jle
jle
cmp
push
add
arpl
popf
pop
xorb
cmc
loope
rorl
loop
out
mov
or
inc
es
mov
andl
insl
mov
leave
mov
cmp
sahf
ljmp
jg
xlat
inc
xor
push
cmpsb
mov
rorl
pop
daa
scas
test
cmpb
adc
jp
aaa
jp
dec
and
fwait
std
mov
sub
fsubl
xchg
cwtl
lods
and
add
adc
gs
iret
inc
pop
cld
stos
add
int3
sbb
jns
sarb
xchg
cwtl
push
jge
and
dec
cmp
ss
pop
daa
jbe
andb
mov
in
arpl
dec
sahf
xchg
cld
insl
or
adc
shr
test
icebp
fdivrs
jmp
and
inc
in
push
cmpb
push
data16
jmp
or
nop
push
icebp
cmp
test
pop
dec
add
addr16
out
and
mov
imul
cmp
daa
cltd
mov
pop
fprem1
mov
push
movsb
jae
je
and
cs
lds
ds
sti
adcb
rcll
cmp
pop
push
pop
lret
fwait
sub
mov
pop
insl
add
stos
sub
mov
xchg
inc
insl
cmp
iret
stos
mov
mov
add
jmp
cld
outsl
lods
jo
cmp
cmp
jg
xor
nop
cmc
lret
jl
inc
lea
xchg
xchg
frstor
testw
andb
dec
ljmp
lds
push
pop
mov
mov
inc
add
sahf
sub
movsl
popf
jne
lods
pop
stos
mov
mov
sub
lahf
push
dec
dec
dec
jp
mov
sub
ret
call
fdivrs
jbe
ret
pop
and
push
dec
callw
into
ja
cmp
push
aam
out
inc
ds
and
into
xchg
jl
jmp
cltd
jo
out
inc
mov
xchg
pop
into
inc
popf
pop
scas
lock
dec
lcall
jne
test
pop
sbb
inc
push
frstor
pop
xor
rdtsc
jge
jb
xor
icebp
movl
les
fcomps
add
adc
push
jo
hlt
mov
shlb
mov
int
push
decb
imul
aam
lret
loope
fsubl
popf
or
out
ret
daa
jl
stos
xchg
gs
inc
xchg
lret
sub
lock
sub
notb
sbb
mulb
pop
mov
popf
adcl
dec
adc
xor
aas
jnp
out
lret
xor
ficompl
xor
pop
mov
cwtl
lret
adc
add
fs
xor
imul
movsb
mov
push
stos
lahf
inc
shl
mov
rolb
adc
adc
pop
movsl
cmpsl
ret
xor
xchg
lcall
js
bound
scas
shr
imulb
fs
sub
xchg
mov
and
add
sbb
into
int
or
pop
int3
lods
pop
lods
xchg
jbe,pn
imul
mov
ja
pop
dec
inc
push
mov
orl
pop
add
mov
push
lahf
xchg
insb
fdiv
jle
inc
push
sub
sbb
test
xor
mov
fdivl
adc
mov
dec
push
xchg
sub
outsb
shl
cmp
pushf
inc
sub
rorb
jl
les
bound
pop
mov
pop
sbb
in
or
add
or
orb
lock
shr
addr16
adc
cld
out
cmp
cmpsl
push
pop
mov
jg
jbe
fisttpll
jo
cmpsl
or
push
sti
in
lock
cmp
sbb
mov
test
push
pushf
inc
push
repnz
push
gs
outsb
cmp
imul
xchg
cld
xor
mov
add
push
mov
jns
mov
sar
jns
push
leave
mov
xorb
jge
jns
xor
arpl
and
sbb
sbb
test
mov
xor
fs
pop
or
popa
dec
in
inc
ret
jnp
sbb
stos
enter
xchg
jp
stc
aam
data16
or
sub
push
cmpsb
mov
rcrl
inc
and
je
sbb
rolb
dec
clc
cltd
out
lahf
out
lsl
repz
pop
xor
ror
xchg
or
leave
lock
into
mov
fldl
subb
xchg
gs
mov
jg
in
in
cwtl
inc
cmp
addr16
je
je
push
pop
push
push
ret
jb
pop
lods
dec
std
rorb
and
or
mov
cltd
popa
pop
push
cmp
push
xchg
lods
push
fiaddl
dec
bound
xchg
mov
cmpsl
xchg
cltd
push
dec
lahf
sbb
mov
int
push
orl
dec
jge
add
pop
sub
out
sti
jb
das
test
shlb
adc
ja
dec
inc
push
mov
dec
and
pop
xchg
imul
pop
sbbb
and
das
sub
mov
lahf
inc
cmpl
mov
pushf
iret
sub
xor
or
jle
push
sbb
mov
lods
mov
pop
mov
lds
cmpsl
sub
xor
jecxz
lock
arpl
push
int3
ljmp
or
shlb
dec
xchg
fs
inc
xchg
shll
pop
imul
movsl
mov
andl
leave
adc
lods
xchg
dec
jb
fsubs
jmp
outsl
pmaxsw
xor
pop
xor
test
push
pop
fwait
sbb
fnsave
sarb
mov
lret
lret
push
cli
push
rcrl
loope
cli
sbb
xchg
add
sub
and
popa
lret
insb
dec
xlat
into
pop
dec
xor
dec
inc
sbb
je
cs
and
rorl
in
stc
adc
imul
mov
mov
sub
or
mov
inc
outsb
ficompl
mov
xlat
daa
jae
mov
lret
sub
push
sbb
ret
adcb
sahf
inc
push
pop
adc
xor
fdivr
or
les
xor
int
stos
push
adc
xchg
sub
mov
add
aas
inc
pop
pop
mov
dec
xor
cli
cmp
pusha
cmp
jle
xchg
aas
or
int3
sarl
rcrl
in
cmp
jnp
pop
das
mov
shll
lds
repnz
mov
dec
xchg
pcmpeqw
xor
fwait
out
xor
jo
lock
mov
cmp
pop
pop
pop
add
inc
adc
pop
mov
push
and
imul
aad
add
clc
addr16
mov
stc
and
jo
mov
cmp
fistpll
push
jp
sbbb
push
cmpsb
add
xlat
jns
push
ret
xor
fs
sub
scas
mov
add
mov
jb
jb
cwtl
mov
iret
mov
ror
mov
dec
fs
loope
shll
xor
roll
push
fxch
imul
cmpsb
cmp
lock
adc
imul
lcall
mov
sar
sti
ret
pushf
xchg
add
sbb
roll
adc
jg
sub
adc
inc
adc
aas
jecxz
out
mov
rolb
cmp
in
out
mov
adc
or
xlat
or
ja
cwtl
mov
cmp
push
or
or
add
sub
inc
xchg
movsl
push
int
xchg
mov
roll
dec
xlat
xchg
pop
jge
popf
cmp
add
test
xchg
fdivrl
rcll
or
dec
dec
or
add
stos
mov
lock
push
adc
inc
dec
mov
mov
fcomps
mov
icebp
imul
and
dec
lcall
popf
movsb
lcall
lahf
addr16
push
shl
pop
xor
sbb
xor
fstl
and
pusha
cmpsl
xor
pop
xchg
cmp
clc
dec
mov
aaa
jae
cmp
add
ds
adc
movsl
imul
mov
xlat
roll
shr
xchg
cmc
pusha
cmpsl
dec
jnp
xchg
xchg
sti
or
mov
or
pop
lods
imul
jecxz
mov
insl
jnp
shrl
scas
mov
sbb
adc
push
mov
push
stc
pop
ss
repz
ret
loopne
je
gs
push
addl
out
in
push
push
mov
fucomp
aad
mov
inc
scas
jae
adc
jne
shlb
gs
inc
mov
adc
test
leave
dec
inc
in
popf
push
push
jno
or
add
pop
xor
cmp
out
xor
mov
lahf
adc
inc
ja
mov
rep
out
pop
cmp
sti
xchg
xlat
add
and
inc
out
fiaddl
outsb
jge
imul
mov
mov
sbb
test
cmp
nop
movsl
mov
mov
loope
xchg
push
adc
mov
jne
fdivr
pop
sbb
dec
dec
sub
inc
mov
or
aad
jecxz
lret
repnz
and
lds
inc
int3
aas
int3
adc
mov
mov
xor
imul
pusha
mov
iret
add
push
mov
mov
lcall
pop
sbbl
push
aas
lret
inc
mov
stos
pop
stos
int3
int
mov
insb
divb
push
and
inc
repz
jo
sub
inc
lret
and
rcrb
outsb
fcmove
out
das
jp
nop
lret
mov
inc
xor
int3
mov
int
inc
inc
mov
lret
inc
mov
adc
fildl
jp
sub
pop
in
test
in
dec
bound
add
mov
cmp
fs
loope
mov
cmpsl
mov
mov
push
inc
pop
loopne
in
loopne
icebp
push
rolb
mov
pop
jecxz
lods
rcrb
add
std
mov
and
popa
pop
scas
mov
fdivs
xchg
xchg
test
jge
pop
pusha
stos
out
sub
xchg
cli
inc
cmc
test
xor
cld
cltd
jnp
mov
pop
cmc
shl
lret
or
mov
mov
shrl
jecxz
out
addr16
popf
mov
push
sbb
cmp
pop
mov
inc
mov
mov
sub
xor
mov
jp
xorl
bound
sbb
sub
mov
dec
popa
std
mov
cli
mov
pusha
pushf
cmp
mov
xchg
pop
fistps
mov
jnp
imul
outsl
lods
pop
cmpl
dec
adc
in
and
movsl
jno
lea
inc
fucomip
lods
repz
xor
mov
adc
call
hlt
in
jns
sub
rcll
lea
outsb
lea
push
jecxz
aaa
push
sbb
push
mov
jne
jnp
fwait
mulb
adc
jae
dec
arpl
xchg
stos
fisubrl
icebp
adc
lea
add
jae
fnsave
fs
adc
mov
out
adc
and
mov
sbb
jmp
jno
popf
xchg
call
cli
mov
lret
sbb
xchg
xchg
lea
js,pt
repnz
jge
in
repz
adc
mov
push
cld
fstl
rcrl
adc
loope
es
mov
orb
xor
sub
inc
xchg
in
push
inc
ss
pop
lcall
stos
add
mov
aas
daa
mov
xor
add
jle
idiv
fs
arpl
test
inc
xor
aad
stos
lods
out
in
mov
pop
sti
sub
es
mov
dec
xor
xor
ds
dec
inc
pop
add
xor
xlat
cltd
lods
fimull
add
pushf
or
and
pop
or
lock
divl
iret
and
mov
push
or
or
xchg
add
out
cmp
dec
push
sbb
push
cmpsl
push
mov
addr16
pop
adc
push
test
mov
dec
loopne
idivl
cmp
or
mov
aaa
adc
or
iret
sbb
fs
ret
andb
xchg
stc
xchg
movsl
mov
insl
aas
aad
inc
jno
sub
loop
mov
shl
xor
xchg
ljmp
pop
cmp
add
js
shrb
push
pop
mov
pop
test
mov
in
pop
inc
ja,pn
adc
cwtl
dec
sbb
cs
jmp
dec
mov
sbb
add
cld
cmp
daa
inc
add
mov
add
fcoms
dec
xchg
aas
add
mov
mov
pusha
aam
decb
dec
movsl
jnp
out
popf
add
or
insb
jecxz
rcrb
aas
ja
mov
adcl
sbb
out
movsl
dec
mov
xor
or
dec
cltd
std
cs
jl
add
lret
push
push
or
popa
sub
dec
and
xchg
les
inc
add
mov
sbb
jns
data16
stc
rolb
mov
cmp
lock
push
sub
loope
pusha
adc
xor
daa
cld
sub
jns
rorb
ret
xor
subb
mov
pop
in
xor
daa
hlt
pop
syscall
dec
xchg
jmp
es
pushf
jle
pop
fstpl
data16
jae
mov
inc
imul
negb
rclb
cwtl
lahf
movd
cmpsl
insb
test
mov
scas
lock
and
adc
shr
cmp
jnp
cltd
inc
cmc
add
bound
cwtl
popa
fs
clc
adc
dec
dec
xchg
xchg
xchg
loope
adc
xor
addr16
scas
mov
jne
mov
leave
pop
mov
mov
push
addr16
mov
sti
mov
arpl
rcrb
adc
lods
xchg
mov
cmp
and
adc
xchg
mov
lea
dec
mov
icebp
or
in
es
cwtl
jmp
mov
sbb
mov
push
add
push
jno
sub
outsb
mov
pop
xorps
xchg
orl
push
sub
jb,pt
testb
xchg
out
out
adc
xlat
lods
movsl
sbbb
ja
xor
sbb
jae
add
xor
stos
fs
sub
xor
imul
rorb
pop
jb
push
push
fsub
dec
orb
xor
add
and
sub
fs
push
sti
mov
xchg
push
movsb
hlt
and
imul
xchg
arpl
aaa
les
push
push
mov
and
ja
sub
mov
iret
xor
sbb
jnp
xchg
mov
inc
sbb
jo
fcoms
mov
sbb
xor
xchg
loopne
faddp
mov
or
inc
cmp
jo
insl
imul
sub
jmp
push
push
out
push
cmp
mov
imul
sarb
cmc
pop
mov
inc
jg
aaa
dec
call
add
xor
push
das
andl
jecxz
xchg
adc
xor
xor
iret
push
cltd
inc
add
mov
mov
sbb
jmp
xor
pusha
mov
adc
aaa
fsubrp
jnp
sti
dec
nop
in
pop
out
les
addl
or
aam
test
and
bound
push
sarl
mov
insl
push
jb
test
sbb
sub
jle
sbb
in
std
popa
push
jcxz
rolb
xchg
loop
dec
mov
int
scas
cmc
movsl
pop
sarb
aas
jns
fisubl
dec
push
adc
imul
rol
cmp
push
popa
jnp
fadds
mov
repz
or
fcomps
notl
stos
push
inc
adc
test
fnstsw
and
or
into
mov
scas
addr16
and
mov
push
xchg
jmp
aam
inc
insb
movsb
aaa
scas
stc
ja
sub
cmp
out
jnp
cld
inc
jb
shrl
mov
js
scas
fisttps
fs
push
pop
cmp
xchg
ljmp
fsubrl
nop
stc
mov
pop
xchg
xlat
je
daa
xor
adc
divb
sub
xor
subl
cwtl
call
dec
out
mov
aad
mov
inc
sub
in
enter
and
rcrl
dec
les
inc
in
dec
xchg
xchg
rol
fistps
inc
add
iret
ret
mov
inc
mov
in
loopne
repnz
pop
sarl
andl
xor
xchg
insl
mov
ja
js
cmc
sub
scas
mov
mov
adc
xor
out
mov
mov
test
popf
mov
imul
dec
std
push
out
int3
mov
pop
vunpckhps
xchg
in
push
mov
dec
xchg
pop
mov
test
jns
repnz
das
xor
hlt
push
sbb
fcompl
out
sbb
call
pop
xchg
pusha
fnsetpm(287
sbb
jge
dec
ret
aad
inc
mov
lret
test
or
jl
hlt
pop
xchg
lahf
test
gs
mov
icebp
fistps
jo
dec
mov
xor
jns
sahf
pop
outsl
fimuls
movsl
aam
jmp
cmp
test
stos
pop
aad
cmp
xchg
jl
xor
cmp
out
xchg
cmp
inc
sbb
sbb
aam
sub
fstl
xchg
cmp
les
add
popf
push
cmc
inc
inc
aas
jae
das
add
mov
adc
call
mov
jmp
sub
xchg
jp
pop
and
xchg
shlb
das
and
mov
negl
sti
cli
in
pop
in
inc
test
dec
inc
fiaddl
and
outsb
in
mov
aam
lret
lahf
sbb
mov
inc
fwait
in
hlt
mov
js
mov
shl
dec
xor
shl
stos
scas
sbbb
orb
pop
test
cmp
ret
fcmovnu
adc
add
out
cld
sub
je
or
sbb
cltd
cmp
or
mov
popf
es
cmp
out
mov
sbb
cmp
xchg
mov
jbe
imul
test
jge
lahf
ret
mov
ja
jo
push
faddl
je
jb
jne
mov
mov
sarl
pop
fstpt
xor
mov
jo
fs
leave
or
mov
jbe
mov
push
jbe
push
lret
mov
add
cmpb
sub
je
in
pop
inc
dec
inc
repz
jbe
inc
ss
dec
mov
dec
jmp
lods
jns
jb
inc
cmp
jnp
push
stc
xchg
sub
jno
stc
leave
bound
fidivl
popf
scas
les
lock
fisttpl
sub
popa
mov
pop
xor
outsl
inc
test
or
sar
mov
cmp
cltd
sbb
mov
jge
je
xchg
add
fsubp
mov
cmp
mov
ja
xor
add
sbb
adc
or
daa
mov
push
int3
jo
arpl
and
jo
cmp
mov
add
jno
outsb
sbb
lods
mov
in
sub
sti
jl
pop
lret
or
fcoms
add
outsl
ljmp
mov
xor
mov
andb
icebp
push
jecxz
ljmp
cmp
jnp
mov
pop
push
and
push
push
sbb
and
sub
sbb
inc
test
sub
xchg
xchg
and
out
mov
add
sbb
jno
push
sbb
and
inc
cmpsb
test
ds
fsubs
popf
pop
sub
pop
icebp
jbe,pn
push
pop
inc
movsb
mov
testb
outsl
out
fisubrl
mov
mov
inc
enter
sti
inc
jb
bound
shlb
imul
loopne
xor
sbb
pop
test
mov
sbb
cli
aam
jge
adc
data16
mull
mov
popa
xchg
movl
out
mov
push
dec
or
lock
mov
test
mov
pop
aam
ret
mov
xchg
or
sbb
xchg
xchg
add
std
ret
cmp
mov
hlt
shrb
xchg
sbb
cmp
insb
xor
addl
inc
mov
daa
pushf
dec
nop
js
aam
dec
push
ret
push
dec
jl
stos
jae
add
stos
xor
xchg
dec
xor
mov
inc
adc
jae
in
and
adc
cmpl
lods
insl
ja
cmpsl
addb
push
sbb
xor
push
fldcw
cmp
cmp
in
pop
out
push
mov
sahf
icebp
stos
xor
incb
insl
jno
movsb
out
mov
or
ret
add
mov
add
cmp
jecxz
inc
insl
ss
lret
lcall
test
xor
enter
mov
push
lahf
fisubrs
andl
fdivrs
sar
push
inc
ss
in
dec
mov
popa
add
out
xchg
pop
addb
test
hlt
add
cmp
pop
lods
cmc
iret
xchg
and
es
mov
insl
push
or
push
adc
lret
les
insl
test
lahf
mov
sbb
jl
das
or
sub
push
sbb
sub
insb
sbb
outsl
sub
jo
or
shl
adc
sub
call
leave
inc
in
in
out
xchg
mov
in
xchg
or
ds
mov
and
test
rorl
cmp
lock
xchg
dec
imul
push
in
repz
cmp
addr16
je
icebp
xor
xor
ljmp
sbb
adc
xchg
inc
lds
sub
je
xchg
xchg
mov
sti
cmpsb
test
in
xchg
into
pop
jmp
cmpsl
push
or
dec
in
pop
ss
pop
loop
iret
insl
lahf
and
roll
and
fwait
sbb
jmp
xchg
sti
pop
loop
inc
pop
cld
jg
add
dec
ds
cld
xchg
mov
mov
sahf
arpl
fimuls
xrelease
pop
cmc
popw
add
xlat
sahf
rcrb
jle
sahf
shl
fsubs
andb
popa
or
cmp
mov
int3
fdivl
jg
dec
cmpsb
leave
cmp
or
add
dec
xchg
and
test
mov
xlat
repz
nop
gs
xchg
xchg
or
fiadds
cmp
out
and
aas
xchg
adc
push
mov
test
insl
jge
push
fs
cmp
inc
ss
fidivs
std
push
inc
ss
jmp
aas
jmp
aas
cli
jae
push
rcl
ret
lods
clc
cltd
shll
pop
xchg
xor
addr16
out
in
jb
xlat
fwait
add
and
out
shrb
cmpsl
scas
mov
lock
mov
and
dec
les
outsb
cmp
leave
sbb
popa
dec
xchg
xor
push
dec
scas
dec
mov
shrl
dec
stos
pop
mov
jmp
fstpl
test
pop
mov
leave
pop
jmp
mov
push
aad
nop
dec
gs
pushf
mulps
sub
movsl
and
mov
insb
icebp
int3
pop
aam
test
pop
dec
add
in
test
mov
mov
jne
int
bound
xchg
or
xor
lods
scas
mov
js
xor
xchg
xlat
fcmovu
and
lea
cmpsb
mov
or
test
sub
popa
sahf
xchg
dec
sarl
cmp
or
xor
fmull
xchg
popf
xchg
xor
sub
jecxz
jb
mov
mov
gs
cmp
push
sub
xor
ret
push
dec
cmp
icebp
sbb
repnz
inc
cmp
rorl
inc
jne
cmp
sbb
test
mov
jge
mov
or
sbb
jae
xchg
test
hlt
xlat
adc
sub
mov
iret
inc
rcr
push
aaa
jae
in
inc
mov
lahf
push
sub
sysenter
mov
and
inc
out
push
cs
dec
sbb
or
dec
or
insl
or
mov
dec
adc
in
in
in
and
sbb
mov
das
sub
arpl
loop
into
fmul
mov
mov
mov
push
out
lods
mov
cmp
je
bswap
cmpsl
rolb
push
jo
dec
push
aaa
pop
push
into
mov
cmc
jmp
dec
lea
fistpl
push
mov
or
jbe
xchg
sti
dec
int
mov
pop
inc
push
push
int
jle
mov
and
pusha
jge
out
cmp
or
mov
loopne
cld
sbbl
xchg
movsb
sti
in
inc
xor
rclb
xchg
cs
js
dec
pop
sub
mov
adc
stc
aam
jnp
frstor
repz
pop
test
xor
push
enter
rcr
add
xlat
inc
xor
adc
dec
dec
jno
inc
int3
xchg
xchg
adc
sbb
push
sahf
cmp
xchg
std
andnps
in
in
scas
inc
sarl
xor
lds
outsb
mov
cmp
sub
xchg
fimuls
pop
xchg
add
mov
enter
rcll
mov
jmp
fisubs
aad
and
ds
mov
mov
icebp
push
push
lahf
jl
mov
shrl
clc
int3
xchg
subl
aaa
inc
daa
inc
and
dec
cmp
or
or
clc
fcoms
movsl
mov
push
scas
insb
test
es
adc
xorl
cmp
adc
push
rcrb
popf
pusha
aam
mov
loop
mov
lret
push
adc
mov
notb
rcr
icebp
nop
xchg
sbb
in
or
dec
add
bound
pop
les
mov
sub
jnp
out
fsubp
aaa
popa
lahf
mov
imul
lcall
cli
jg
lret
mov
insb
sbb
insb
xor
fld
push
mov
and
push
sbb
sbb
jmp
mov
jl
jbe
jg
ja
or
insl
ficoms
sbb
mov
lds
js
mov
add
hlt
push
cmp
inc
cmp
xor
or
jns
fldt
orl
insb
jge
clc
insb
out
int
mov
mov
push
mov
xor
jns
inc
test
sbb
gs
xchg
inc
je
das
adc
pop
push
in
sub
movsl
xchg
mov
imul
sahf
out
pusha
jnp
mov
jne
xchg
subb
in
nop
mov
icebp
daa
daa
cmp
mov
jnp
ret
call
xchg
push
adc
jb
outsb
inc
shll
dec
repnz
adc
sbb
cld
pop
outsb
mov
cmp
add
ret
fdivs
jecxz
adc
in
insb
ja
testb
lret
stc
lahf
loope
dec
ds
ljmp
in
mov
fstpt
cli
mov
fildll
cmp
std
xor
getsec
jnp
imul
scas
push
out
or
mov
jno
inc
mov
jns
xchg
shr
and
ret
aas
rolb
outsb
repz
fnstsw
lods
cli
sub
or
dec
pop
jmp
mov
sub
std
or
aad
roll
es
push
lea
sub
movsl
xchg
inc
movsl
imul
enter
sahf
xchg
es
or
or
bound
dec
les
fldenv
sub
push
add
sahf
fists
xchg
nop
adc
stc
imul
xchg
mov
xchg
hlt
filds
inc
stos
loop
jg
int3
xchg
cmp
push
sbb
out
pop
sbb
ja
int
push
or
leave
sbb
nop
adc
ja
jae
adc
loopne
cld
add
mov
in
push
xchg
sub
sahf
leave
pop
jno
inc
shrl
dec
addr16
sbb
push
int
ds
or
cli
filds
jle
aaa
mov
inc
jge
cmpsb
movsl
std
sbbb
sbb
clc
push
xchg
mov
int
push
roll
xchg
sahf
pop
mov
and
out
aad
sbbb
adc
shlb
repnz
stos
pop
add
repz
jmp
stos
or
pop
popf
test
movsl
imul
insl
cmp
push
test
jns
lock
and
out
sub
cmc
and
jne
pop
cltd
xchg
mov
in
lds
lcall
out
mov
ret
mov
sub
pop
lods
xor
xorl
fldl
adc
xchg
test
mov
mov
push
or
mulb
dec
pop
pop
testl
mov
fstps
or
std
xor
aam
cmpsb
push
ss
inc
push
lahf
in
sbb
push
inc
out
xchg
je
rclb
or
jns
faddl
mov
dec
scas
out
outsl
repnz
jns
js
fidivrs
mov
or
dec
adcb
xchg
movsl
dec
jp
and
inc
es
aas
inc
mov
lret
dec
or
push
repnz
mov
xor
or
cmpsl
add
loop
sub
clc
push
jne
jmp
les
out
lods
and
jmp
cmp
scas
dec
sbb
inc
jne
xor
addr16
mov
push
adc
daa
and
xor
xchg
sbbl
jmp
push
sahf
push
inc
cmp
sub
mov
lcall
lds
adc
imul
lret
mov
xchg
cmp
jo
cs
nop
in
adc
shrb
push
pop
add
xchg
inc
call
xchg
out
test
inc
ret
mull
aam
xor
pop
sbb
out
and
test
js
adc
xorb
push
and
stc
or
hlt
xor
xrelease
pop
sbb
jno
mov
lods
sub
sahf
push
outsb
subb
imul
aad
push
lock
xor
xor
adc
les
sbb
or
mov
in
rorb
jo
out
ljmp
lret
push
shrb
fs
pop
mull
fstps
xchg
ja
lock
daa
mov
lea
jg
adc
pop
add
xor
xchg
dec
pushf
pop
or
xchg
inc
pop
test
xchg
lds
xor
inc
mov
data16
xchg
xchg
xor
rcll
stc
test
cld
jmp
adc
dec
xchg
jecxz
roll
jo
mov
mov
adc
push
imul
scas
mov
lea
shr
lret
add
sarl
in
push
test
pop
and
dec
dec
inc
cmp
and
in
leave
ds
inc
or
ret
push
push
popa
adc
cwtl
xorps
mov
xor
scas
fs
mov
jno
sub
xchg
jb
das
lahf
ret
jg
jns
mov
stos
sbbb
call
ret
dec
lock
cli
outsb
and
addr16
push
inc
xor
cmp
adc
imul
inc
inc
int3
mov
ljmp
int
fcomps
lds
push
mov
jns
dec
std
arpl
inc
repz
sub
mov
xor
arpl
adc
inc
jp
xchg
sbb
stos
dec
jo
mov
lods
mov
sub
mov
bound
test
jp
fnstenv
aam
mov
xchg
and
fsubs
in
add
sub
and
pop
mov
lcall
cmp
xchg
imul
jmp
or
rorb
mov
push
cmp
dec
mov
lods
push
idivb
inc
int3
jae
icebp
mov
and
and
hlt
add
mov
sub
mov
std
aad
jle
xchg
sti
mov
daa
popa
sti
cmc
repz
cmp
std
inc
push
sahf
ss
nopl
lods
sub
xchg
dec
dec
add
add
pop
sub
push
lret
out
pusha
fnstsw
out
inc
cmp
cli
iret
ss
push
enter
and
shll
mov
data16
or
jo
jb
jl
mov
test
test
push
xlat
dec
scas
cmpsb
jbe
out
in
mov
sbb
xchg
insl
daa
lret
mov
cmp
test
pop
or
lret
scas
scas
xchg
and
jae
mov
xor
xchg
movsl
cmp
sbb
loop
dec
mov
int
scas
and
out
mov
jecxz
mov
push
lcall
hlt
add
arpl
loop
aad
stos
mov
pop
sbb
cmc
mov
lods
or
das
push
es
cltd
push
mov
sarb
stos
scas
repnz
mov
cmp
xchg
mov
mov
inc
adc
mov
or
mov
cmpl
mov
les
cmp
fs
imul
mov
lret
movsl
stc
repnz
push
add
sbb
out
cltd
insl
jmp
sbb
es
das
mov
int3
xlat
popf
xor
cmp
cld
lods
or
sub
pop
cmp
pop
lcall
ret
sbb
movsl
jno
inc
test
inc
js
xchg
inc
mov
sti
jnp
addr16
lret
imul
rclb
pop
call
xor
sub
push
push
ljmp
inc
mov
mov
bound
xor
xor
mov
cmp
mov
pop
cmp
ficoms
lock
mov
xor
cmp
nop
inc
fcoml
lods
xor
ds
imull
push
xchg
sub
sub
cld
daa
movsb
fst
out
hlt
push
scas
or
dec
test
xor
aam
jne
lds
and
sbb
or
xchg
rcrl
call
mov
aas
jg
dec
sahf
vmovapd
cli
scas
push
dec
mov
mov
and
or
loop
fsubr
leave
nop
sub
mov
ret
je
mov
jno
pop
push
inc
lods
pop
mov
mov
stos
cmp
or
dec
lahf
cmp
mov
xlat
push
add
sbb
adc
inc
push
js
out
push
lret
ljmp
sbb
arpl
jecxz
js
shrb
mov
cli
or
adc
mov
mov
sub
mov
imull
sbb
push
cmpb
pop
outsl
mov
push
inc
push
aas
js
dec
jnp
push
sbb
xchg
in
rolb
cmp
dec
fnstsw
daa
sub
mov
fwait
loopne
xchg
mov
sub
fs
sub
out
push
or
insb
orb
in
and
outsb
adc
popf
or
mov
aas
call
rol
adc
cltd
xchg
sbb
mov
jecxz
out
add
mov
mov
loopne
cwtl
or
or
jg
aam
out
push
xchg
cli
pop
mov
lds
lods
punpckhbw
lea
dec
in
aaa
into
js
aad
xchg
fwait
sbb
enter
or
and
xchg
rolb
or
in
or
daa
push
cmc
ficomps
test
or
mov
sbb
test
inc
jge
std
lods
test
pop
ficoml
fisttpll
add
xchg
pop
xor
mov
lahf
outsl
bswap
cmp
mov
adc
mov
pop
pop
mov
fcoms
out
roll
imul
dec
or
into
mov
jge
gs
push
xor
jle
orl
rorb
mov
sub
jno
sbbb
cmp
ret
lret
les
push
mov
imull
cmc
cmpsl
data16
push
sbb
jnp
outsb
xchg
xchg
out
and
dec
test
sahf
dec
rolb
mov
cmp
adc
movsb
or
push
sbbb
mov
arpl
jno
in
mov
xlat
adcl
outsl
js
aam
or
mov
xchg
pop
xchg
ljmp
aad
jno
xchg
mov
xlat
dec
sbb
push
fwait
int
push
and
dec
dec
cmp
push
shrb
stc
idivb
xchg
xchg
mov
sbbb
xor
fsubl
push
es
push
ja
pop
mov
sbb
mov
jne
ljmp
xor
inc
push
sub
imul
movsl
xchg
jle
nop
push
mov
push
xor
addr16
dec
jmp
mov
fists
fdiv
testb
sahf
sbb
testl
sub
and
lret
pop
sub
es
loope
xchg
mov
or
inc
scas
inc
inc
jbe
aam
das
mov
or
mov
xchg
mov
or
mov
out
fidivl
dec
ret
dec
lea
stos
test
dec
inc
add
or
xlat
dec
ljmp
loope
and
mov
inc
inc
jbe
aad
mov
roll
xchg
push
adc
loopne
jle
int3
push
xor
pop
lods
insb
jne
jle
arpl
or
es
xorb
sbb
cmpxchg
cmp
and
fsubrs
xchg
lods
js
adc
pop
mov
cmp
insb
cmpsb
insl
pop
cmc
call
pushf
stc
stc
jbe
dec
hlt
pop
imul
test
repz
jne
xlat
pusha
inc
ss
jp
out
aad
idivl
xchg
shll
mov
lret
ja
push
adc
cmp
mov
cmpsb
pop
jmp
push
rcl
push
cmpsl
and
adc
and
divb
mov
aam
xor
or
das
add
lret
subb
dec
cmovo
stos
push
imul
pop
bound
clc
adc
xchg
nop
cmp
jo
imul
div
shlb
std
xor
inc
repz
or
push
lods
jg
mov
push
stc
movsl
mov
lock
and
ja
icebp
arpl
xor
mov
mov
pushf
loop
xor
mov
lahf
dec
jb
pop
and
pop
push
add
cmp
xor
jg
daa
push
adc
inc
add
dec
jp
lock
int3
and
into
jne
roll
popf
sub
inc
push
mov
lods
jmp
sbb
addr16
std
adc
call
mov
jb
inc
mov
xor
dec
adc
push
cmp
xchg
stos
jl
sub
lret
loopne
mov
xlat
sub
push
in
push
rcrl
mov
cmp
dec
daa
fidivrs
xchg
rcl
insl
add
mov
mov
push
inc
test
loopne
jo
inc
and
sub
adc
pop
sbb
mov
sub
sub
xor
jle
pushf
sbb
mov
cs
sahf
imul
scas
loope
cmc
aad
pshufw
mov
dec
dec
mov
xchg
out
insl
jnp
fcomip
xchg
mov
adc
sub
jle
out
lcall
inc
xor
mov
sbb
sub
imul
mov
adcl
into
leave
outsb
pop
jbe
popf
fs
push
push
add
lret
enter
dec
xchg
pop
jmp
cwtl
jnp
je
lods
cli
mov
cmp
je
mov
pop
icebp
sbb
adc
xor
rcr
sub
pop
push
dec
xlat
incb
or
pop
mov
push
nop
test
fisttpll
jbe
call
test
jno
pop
jns
push
orb
je
test
imul
dec
fadds
mov
mov
movsl
and
cltd
push
mov
std
incl
js
in
jle
nop
sahf
push
mov
dec
jle
sbb
lock
js
aaa
aam
sahf
ds
sub
cmc
fnstenv
nop
repz
lock
enter
push
lret
xchg
jbe
cmp
dec
je
push
imul
rcr
in
push
shlb
out
test
cld
sbb
inc
rorb
mov
fdivl
sti
fs
popa
mov
cmp
jg
mov
out
mov
pop
and
jbe
or
sub
push
inc
dec
les
popa
cld
inc
jns
jg
and
lock
stos
call
cltd
ja
jne
jae
push
scas
lds
cmp
dec
pop
jp
mov
stc
and
mov
push
or
cmc
imul
sub
jle
movsl
jo
pusha
mov
fcmovbe
imul
push
bound
lcall
js
cmp
jmp
jmp
rol
mov
and
addr16
xor
call
jno
cmp
jecxz
lock
int
mov
pop
stos
dec
iret
inc
scas
sub
sub
xor
roll
lahf
or
leave
jno
and
push
arpl
pop
test
rcll
mov
imul
lcall
mulb
xor
pop
ret
cmp
fmuls
loopne
sub
in
das
push
xor
lock
cltd
negl
subl
inc
mov
xor
mov
popa
dec
bound
xchg
lcall
inc
adc
sub
xchg
nop
shll
fbstp
sub
adc
cld
mov
or
mov
pop
push
mov
pusha
out
loope
jge
mov
and
xor
push
xlat
stos
hlt
cmpsl
movsl
cmp
sub
aam
jmp
and
sbb
jmp
add
repz
das
jle
stos
xadd
xor
sub
insb
push
sbb
adc
push
and
dec
insl
cmpl
lods
jbe,pn
data16
div
or
dec
popa
push
add
mov
cmc
push
jp
pop
ja
je
les
int
sarb
movb
in
sub
inc
xchg
test
xor
out
popf
inc
push
adc
adc
faddp
mov
hlt
insl
mov
xchg
adc
cld
push
mov
lcall
push
outsl
mov
xchg
sub
xlat
push
outsb
andb
or
rcll
cmpsb
arpl
sub
int3
shll
rorb
lcall
lods
ja
notl
and
mov
push
sbb
push
pushf
sahf
cmp
dec
pop
mov
push
out
sahf
iret
jne
lcall
and
add
lock
lods
out
arpl
inc
xor
inc
leave
fwait
mov
xchg
in
neg
insb
nop
clc
cmp
sahf
jns
nop
mov
cmpl
loopne
xchg
sub
push
iret
push
pop
lods
repnz
int
lods
test
imul
pop
cmpsl
movsl
xlat
cwtl
rorl
in
loop
cmp
cmpsb
ret
mov
dec
es
lret
or
nop
fmul
fldt
jge
or
pop
mov
insb
and
xor
sbb
ds
out
mov
inc
push
out
sub
loope
ljmp
jae
pop
add
sub
add
and
and
in
scas
js,pn
mov
fdivrl
xchg
stc
add
pop
lock
testl
cwtl
xor
xchg
xchg
or
test
mov
call
sub
push
sub
or
lcall
mov
insl
mov
pop
and
lahf
adc
mov
push
insb
aas
rol
pop
jmp
int
cmp
aam
xor
sbb
and
add
cwtl
xor
dec
cwtl
mov
sbb
mov
out
adc
pshufw
mov
cmp
and
out
dec
mov
pop
mov
int3
je
push
bsf
testl
fdiv
outsl
xchg
int3
fiadds
pop
xchg
fidivl
popf
jns
popf
inc
in
fisubrs
cmp
arpl
and
mov
pop
mov
aaa
sbb
test
sbb
or
sbb
push
jo
push
dec
aas
push
pop
inc
adc
adc
push
jl
xchg
cmp
inc
ss
or
sbb
xor
cmp
sbb
inc
adc
addb
dec
stos
mov
fbstp
sti
add
sub
dec
data16
xchg
out
xchg
pop
lds
sbb
adc
in
jmp
dec
movsb
mov
sbb
enter
loope
mov
pop
out
xchg
mov
sub
pop
insl
dec
cmp
dec
push
sub
sub
mov
rolb
add
or
or
jae
inc
cs
pop
jge
mov
popa
sbb
imul
mov
imul
orb
sbb
lock
out
or
push
aaa
clc
mov
rolb
mov
das
lret
cmp
movsb
sbb
repz
into
push
divb
mov
xor
iret
cmpsl
ret
imul
out
xor
push
jle
mov
xchg
push
sub
dec
jmp
js
ror
xor
orl
rclb
sbbl
xchg
sub
mov
cmp
mov
sub
jns
xor
adc
inc
mov
sbb
lahf
negl
xor
or
dec
jo
aam
adc
adc
jg
inc
xor
adc
adc
lods
push
push
dec
add
je
out
or
xchg
pop
test
movsb
int
jg
pusha
imul
pop
cld
fimuls
or
hlt
sub
xchg
pusha
in
xor
idiv
jmp
inc
pop
adc
push
pop
daa
das
sbb
psllq
out
or
fs
or
jnp
jae
cltd
xchg
pop
loopne
test
in
mov
xor
push
ds
cmp
negl
fldenv
adc
cld
loope
loopne
cmp
mov
je
xchg
fmull
mov
add
popa
leave
pop
movsl
xchg
js
rorl
cwtl
pop
shr
mov
in
adc
cmp
mov
jle
add
add
cwtl
jecxz
pop
sub
cmp
sbb
jecxz
and
inc
sbb
add
aas
push
loopne
lcall
icebp
addr16
cld
inc
xlat
pop
rorl
repnz
add
adc
iret
test
dec
aad
in
aaa
lock
in
adc
scas
jo
cwtl
and
jl
push
lret
std
xsaves
subb
imul
idiv
fsubs
ror
push
dec
mov
add
jl
cli
adc
ja
adc
lahf
mov
xchg
push
out
sbb
jnp
sahf
inc
sub
push
adc
outsl
and
dec
repnz
pusha
pop
sahf
gs
imul
push
clc
push
das
popf
mov
ret
push
nop
test
xchg
mov
leave
jg
dec
adc
jae
leave
dec
stc
inc
stc
out
jbe
push
leave
mov
inc
aas
mov
aas
mov
jns
sti
sub
mov
stos
and
push
or
pop
insl
lods
sbb
aad
inc
stos
push
xchg
jns
jge
jb
call
mov
test
lret
dec
pop
xor
xchg
call
ror
xlat
int
sbb
out
jae
mov
adc
sbb
inc
mov
movsl
mov
subb
nop
mov
cmp
cwtl
adc
inc
imul
pop
add
inc
and
pop
fstpl
sub
jge
sahf
stos
sub
lret
adc
adc
add
inc
push
jecxz
push
push
pop
inc
testl
jae
push
shr
fiaddl
fisttpl
cli
outsb
cltd
mov
negl
test
adcl
sub
rolb
in
fs
inc
dec
out
out
imul
xchg
and
shlb
mov
lods
lcall
mov
clc
mov
nop
or
enter
inc
sbb
je
stos
mov
dec
inc
push
fs
shll
push
fsincos
mov
push
mov
jne
in
aas
sahf
imul
fildl
imul
cld
enter
mov
add
push
jne
inc
icebp
push
adc
arpl
ljmp
leave
and
add
jo
in
xor
add
pop
and
xor
test
push
adc
call
add
sub
scas
cmpsl
jmp
pop
out
outsl
jmp
gs
lea
lds
and
hlt
mov
cli
adc
roll
sbb
mov
pop
dec
pop
insl
jb
dec
sub
clc
inc
mov
pop
test
sub
test
test
iret
mov
and
push
out
rcrl
or
xchg
or
sti
fs
leave
xchg
ret
jnp
adc
test
xchg
movlps
xchg
shl
add
inc
fwait
jbe
stos
xor
pop
scas
dec
fimull
cmp
test
js
clc
lcall
cmp
lods
sbb
lock
dec
faddl
push
xlat
fldcw
pop
ljmp
add
rolb
mov
into
repz
xlat
xchg
out
punpckhdq
scas
les
xchg
xor
movb
int3
fldenv
sub
fstps
dec
ret
aaa
mov
pop
cmpb
push
scas
xor
stc
sbb
push
fwait
cltd
pop
lods
stos
xor
lods
inc
sbb
iret
push
mov
cmpsb
cmp
xor
into
insb
pushf
fildl
stc
outsb
mov
lret
cmp
sub
mov
lock
scas
and
lods
cltd
adc
je
sbb
mov
add
ja
cs
push
ss
test
add
jp
lret
fisttpl
xchg
mov
ret
stos
jp
dec
sbb
loopne
arpl
popa
push
push
cmp
call
mov
mov
insl
sbb
xlat
mov
leave
sub
aad
mov
xchg
shrl
test
daa
subl
insl
or
in
and
js
ja
mov
mov
and
add
inc
dec
jo
addb
sbb
pop
shlb
pusha
imul
call
scas
xor
xchg
lret
push
and
mov
push
hlt
shr
or
sbb
inc
jnp
mov
aam
or
out
xlat
and
aad
mov
fadds
int
sub
ficomps
and
mov
fucomip
or
fnstsw
fwait
push
or
stos
imul
jl
rolb
or
test
and
mov
int3
outsb
and
out
inc
repz
push
scas
testb
imul
xchg
adc
fs
sti
adc
int
out
ss
ret
or
lret
std
out
adc
sub
jg
jmp
or
mov
sbb
mov
das
jp
cmp
mov
orb
imul
aaa
push
mov
mov
jp
cmpsl
add
mov
push
fcmove
ja
aad
loopne
sub
mov
jae
mov
add
shlb
jne
inc
adc
fcoms
test
push
sub
cmpsl
sbbb
cmp
ja
mov
lods
sbb
mov
fimuls
sarb
cmp
jmp
jae
orb
cmp
mov
mov
or
shll
sbb
cmp
fs
into
xchg
shr
test
jb
mov
xchg
push
lea
mov
out
mov
cmp
in
aam
ljmp
cmpsl
xor
test
cmp
sti
dec
je,pn
jae
arpl
cmp
jbe
push
sbb
fwait
jne
jmp
mov
mov
jmp
pop
ret
push
mov
dec
sbb
icebp
lret
xchg
repnz
pop
add
pop
pop
mov
lret
shlb
xchg
test
sarl
mov
mov
sbb
sarl
sbb
jnp
and
and
in
sub
insb
hlt
mov
lahf
popa
fdivrl
adc
push
mov
les
mov
out
test
test
mov
repz
int
movsl
jbe
jge
fadds
mov
pop
dec
mov
inc
js
insl
loopne
inc
jle
out
in
test
inc
rcrb
push
sbb
or
test
into
adc
mov
ficoms
xor
dec
push
inc
jb
jo
inc
lcall
daa
mov
push
adc
xchg
ret
in
call
sub
clc
imulb
lock
setb
outsb
cmp
xor
call
ljmp
lds
aad
call
imul
xacquire
xlat
mov
add
outsl
cmp
shrl
ss
cltd
sarb
lea
adc
and
js
mov
std
fmuls
pshufw
call
xor
mov
jns
mov
add
popf
pop
cli
cwtl
sub
cld
or
mov
ret
call
xchg
pop
pop
lea
out
sbb
add
xchg
or
cmp
pusha
jmp
dec
xor
cmp
movsb
pop
xchg
add
and
pop
sub
jae
loop
aam
ffree
cwtl
and
and
cmp
int
outsb
call
sahf
fbstp
mull
mov
stos
xor
jg
push
push
dec
cmpsl
addr16
inc
adc
adc
stos
cwtl
scas
pop
bound
dec
into
sahf
fldt
rcrl
idivl
dec
leave
andl
lock
icebp
movsl
addr16
ja
inc
add
out
scas
mov
outsb
mov
mov
sub
sub
ljmp
push
sbb
jne
int
jl
and
ss
mov
test
mov
sarb
movsl
jg
push
or
pop
fldt
push
mov
cmp
inc
mov
cld
push
push
inc
or
push
into
imul
mov
pop
in
das
push
and
test
mov
jns
mov
sub
gs
int3
popa
mov
inc
cmp
sbb
xchg
lret
jo
jl
mov
xor
cmp
ret
outsl
dec
push
gs
out
cwtl
xchg
stos
push
in
and
push
pop
mov
pop
and
lret
ljmp
repz
test
stos
sbb
fbld
cmp
into
loope
call
xor
mov
adc
gs
sbb
xchg
and
or
pop
push
imul
sbb
scas
aam
ja
mov
dec
shll
dec
mov
subl
fsubp
icebp
repz
xchg
fisttps
movsl
mov
pop
addr16
or
adc
xchg
mov
in
dec
out
divl
out
lahf
cmp
mov
ds
popf
je
pop
fisubl
dec
adc
insb
ret
jb
enter
fwait
dec
add
inc
movsl
cld
out
out
inc
mov
cmp
fs
js
mov
movsl
mov
xlat
xchg
test
sub
lods
aam
mov
push
pop
cmp
pop
les
dec
fnop
arpl
pop
into
mov
mov
sbb
push
lret
mov
mov
enter
or
out
push
ret
sbb
gs
and
stc
jns
test
add
movsb
pop
add
mov
loope
cmp
sub
inc
push
add
push
and
lock
aam
push
aaa
add
rep
sbb
push
mov
xchg
fisttps
push
loopne
dec
jnp
add
xchg
pop
xor
jecxz
sbb
and
arpl
cmpb
mov
stc
das
shll
sub
lret
cwtl
sti
jnp
pop
sbb
cmpsl
pop
ja
lahf
shl
pop
push
mov
or
cmc
inc
imul
test
and
gs
jp
fstpt
add
decb
dec
shrl
cmpsb
push
sbb
imul
nop
lret
dec
adc
dec
xor
popa
sub
out
outsb
dec
cld
stos
inc
push
in
pop
int
and
sub
or
scas
lock
mov
imul
jmp
shrl
pushf
sbb
add
rcrl
std
pushf
xor
jg
adc
cmp
or
push
cmp
jp
push
push
enter
and
and
cmp
jo
pop
out
in
mov
xor
dec
push
imul
push
jo
sbb
sub
loop
pop
fwait
push
cmpsl
daa
and
sti
inc
rcrb
movsb
sar
cmp
mov
stos
andl
rcrl
xchg
stos
stc
aam
dec
mov
cmp
jb
test
pop
sbb
stc
dec
nop
enter
sbb
aam
mov
stos
xchg
sti
in
sar
lods
sub
das
cs
xor
mov
fstp
sahf
and
push
xchg
sub
into
sbbl
push
push
test
dec
push
sbb
pop
jb
xlat
fmul
repz
aam
inc
mov
sbb
out
xchg
stos
and
xchg
push
adc
mov
lock
clc
mov
dec
addr16
jmp
adc
das
ja
repnz
add
xchg
dec
mov
ja
sbb
or
test
mov
popa
sbb
das
in
fs
cwtl
dec
sub
out
stc
lret
adc
jp
sbb
mov
sub
shrl
les
call
mov
jecxz
cmp
lods
cmp
xchg
adc
mov
sub
insb
cmpsb
push
push
mov
or
push
cs
fiadds
out
test
cltd
and
adc
pop
int3
insl
bound
lret
and
dec
inc
fldpi
mov
push
jmp
dec
ljmp
xchg
or
out
xor
nop
mov
mov
push
out
xchg
negb
sar
pop
push
add
stos
cli
repz
loop
faddl
sbb
cs
mov
jp
push
mov
pop
xchg
mov
add
outsb
int3
lret
pop
inc
and
or
cmp
adc
stc
adc
xor
fidivrl
or
insb
or
fnstenv
movl
cmpb
mov
push
es
add
sbb
dec
pop
popa
cwtl
dec
stos
add
sub
ljmp
testb
jae
jae
les
inc
call
jno
push
and
mov
stos
inc
fisttpl
mov
das
cmc
jmp
inc
fwait
add
sbb
pop
mov
adc
roll
and
cmpsl
aam
sbb
loopne
sbb
sub
push
sub
data16
xor
lret
dec
mov
in
push
mov
sub
push
fmul
clc
mov
flds
xor
push
test
shll
clc
js
cs
mov
cmp
loopne
pop
mov
subl
int3
inc
les
es
jmp
hlt
add
cli
aaa
cmpsb
dec
stos
dec
pushf
mov
push
mov
jmp
mov
jae
lds
mov
out
push
push
mov
cli
pusha
push
sbb
popa
unpckhps
call
xor
shrl
hlt
cltd
pushf
jle
aas
adc
icebp
xchg
add
punpckhdq
lret
or
insl
fistps
and
ds
adcb
iret
sti
jb
xor
out
mov
nop
mov
pusha
pop
scas
push
jle
scas
loop
sbb
xor
test
push
mov
dec
inc
push
or
ds
sbb
lock
adc
add
ds
fiadds
inc
mov
mov
adc
testb
and
cli
push
push
xor
mov
rclb
xor
mov
push
hlt
mov
inc
adc
fmuls
mov
divl
xchg
mov
ffree
push
scas
pop
xchg
lods
xor
xchg
mov
push
fmull
xchg
loopne
mov
jno,pn
and
push
jnp
out
sti
add
aam
inc
cmc
sub
mov
push
pop
fwait
pop
rcll
pop
rol
stos
jbe
push
aaa
sbb
push
push
movsb
sbb
sti
nop
dec
aaa
jge
fisubrl
mov
pop
enter
mov
sub
and
sbb
into
fisubrl
xchg
and
adc
lahf
xor
push
imul
push
and
out
xchg
push
mov
nop
sub
cmpsb
fs
lret
lret
push
dec
adc
iret
push
enter
mov
pop
xor
aas
jns
jns
push
and
je
adc
insb
lods
lock
shll
xlat
pop
mov
mov
mov
xchg
mov
jmp
push
movsb
adc
lcall
push
dec
popf
cwtl
mov
insb
xchg
fldt
std
gs
lea
adc
fdivrl
jns
data16
or
dec
movsb
fyl2xp1
bound
xor
popa
sub
sarb
adc
sbb
xchg
nop
or
or
mov
loope
push
movsb
pop
out
nop
rclb
cmpsb
aam
hlt
les
xorb
pop
jo
sahf
aas
iret
xchg
cmp
mov
divl
inc
aad
mov
sub
popf
push
mov
jge
push
or
xor
add
sub
cli
add
push
incl
gs
call
test
xchg
fwait
and
cwtl
into
sub
sub
ds
xchg
js
inc
cmp
add
adc
sbb
add
cmpsl
cmp
push
out
sub
jae
enter
stos
dec
push
leave
stc
lea
ret
leave
or
test
dec
jp
xor
ss
xlat
dec
pop
ret
int
mov
scas
cmp
xchg
gs
int3
sbb
insl
mov
xlat
incb
dec
jne
jno
inc
fsubs
mov
sub
out
or
fcmovnb
gs
push
dec
popa
sbb
push
rcrl
cli
mov
sahf
fucomp
movsl
lods
lds
mov
xchg
mov
add
jge
cmp
into
pushf
lea
cmp
or
out
inc
push
sbb
adc
mov
jns
cltd
movsl
mov
repz
jnp
and
ja
mov
xchg
fs
imul
dec
out
insb
pusha
sbb
das
dec
jp
loop
outsb
jo
jae
addr16
out
stos
xor
sub
arpl
push
sarl
push
lds
ret
sahf
push
aad
mov
notl
xor
fwait
aad
mov
jg
popf
push
inc
out
repz
push
mov
sarb
cwtl
inc
orb
push
repz
xor
add
popf
fs
cmp
es
mov
lret
push
shl
dec
sbb
and
lds
ss
fbld
add
pop
cmp
inc
mov
icebp
pop
adc
pop
inc
add
adc
insb
test
sbb
jo
dec
push
jb
push
xor
add
jb
mov
and
fsubl
popa
add
jmp
dec
add
add
call
inc
mov
and
xlat
fdivr
xor
aaa
fidivl
add
repz
xchg
adc
hlt
xor
cli
fistl
sub
or
sub
xor
jmp
dec
iret
shl
mov
in
adc
test
imul
jb
sbb
mov
xchg
dec
repnz
or
push
sub
inc
int3
xchg
inc
or
jne
hlt
shll
cmpsb
dec
das
out
pop
pop
cli
mov
mov
insb
push
mov
or
out
hlt
call
dec
idivb
inc
rorb
test
aaa
addr16
jne
or
mov
inc
mov
sub
enter
fcoml
xchg
leave
dec
in
or
adc
out
xchg
and
adc
test
pop
inc
test
mov
fbld
outsl
fmuls
pop
push
lcall
in
movsb
ficoms
iret
push
push
jne
and
xor
jp
ret
ds
es
xchg
add
out
mov
adc
sbb
push
movb
mov
adc
ret
or
std
xchg
and
cltd
movsl
leave
lret
mov
pop
add
or
mov
sub
sbb
xor
ficompl
arpl
and
orl
addb
loop
cmp
in
imul
fldt
push
or
xlat
mov
jb
out
pop
int
loopne
adc
xchg
push
dec
les
and
mov
fldt
insl
sti
add
sub
xor
fcoms
pop
pop
pop
add
loopne
sub
xor
jnp
aad
cmp
xchg
dec
test
pop
mov
in
inc
cmpsl
aaa
jmp
andb
ror
aas
mov
xchg
and
adc
sbb
in
mov
cli
push
out
adc
push
push
mov
cwtl
jge
sub
jno
xchg
dec
dec
mov
cli
clc
inc
add
fsubrs
aas
push
push
scas
test
pop
shl
in
jmp
lods
pop
fidivrl
inc
fdivr
sbb
scas
sti
lcall
in
out
outsl
insb
pop
inc
cmp
sub
out
ret
cmp
ret
inc
sti
sub
sbb
rcll
mov
insb
xchg
test
sub
push
inc
stos
das
sahf
or
dec
out
add
cmc
push
fcmovbe
xor
and
jnp
test
cmp
stc
insb
dec
sbb
adcb
daa
mov
outsb
in
add
in
pop
pushf
jle
push
fistps
scas
jp
inc
sar
shlb
insb
aad
in
jns
cmp
cmp
pop
inc
inc
jl
adc
cwtl
mov
sbb
in
mov
enter
inc
test
adc
inc
sub
or
leave
jae
ficoml
fildll
in
sbb
cmp
dec
add
mov
stc
jmp
cltd
add
pop
sar
lock
subl
fdivrl
xchg
mov
notl
movsl
push
outsb
outsb
lcall
call
cmp
mov
aas
test
push
rcl
scas
ja
sti
enter
inc
sub
mov
lods
jo
or
dec
xor
je
jo
rcrl
mov
jg
andb
push
pop
adcb
and
ret
add
push
pop
fldl
xchg
cmp
cli
pop
xlat
xor
shrl
mov
mov
cmp
sbb
mov
push
daa
sbb
div
push
push
mov
ja
idivb
fmull
stos
jbe
mov
sub
jp
jge
push
xchg
jb
dec
fsts
jecxz
lahf
mov
add
test
cli
jmp
jbe
mov
push
push
mov
subl
add
aam
adc
mov
sbb
into
jnp
pop
xor
fs
insl
jo
dec
cmp
std
ljmp
inc
ljmp
movsb
sbb
pop
jns
iret
pop
add
pop
sub
inc
sub
cmp
scas
mov
push
fcomps
jge
jno
or
call
gs
or
mov
orl
xor
sti
push
xchg
xchg
mov
aaa
aad
jnp
ja
add
fcoml
push
xchg
pop
xchg
test
clc
ds
cld
pop
inc
int
icebp
sti
lret
lea
cmp
or
mov
pushf
aaa
sti
pop
dec
outsl
sub
aaa
or
or
mov
das
shrb
xorps
fdivrl
mov
enter
out
popf
bound
xor
add
leave
bound
nop
cmp
mov
mov
push
push
mov
jg
pop
push
loopne
or
adc
cmc
xlat
mov
xor
jb
dec
cmp
insl
sbb
in
fcmove
cmp
add
fwait
mov
sbb
dec
cmpsb
jne
pop
add
pop
jmp
inc
fdivrs
sbb
inc
mov
stos
sbb
dec
mov
or
imulb
sbb
leave
push
mov
xchg
and
leave
jecxz
cmp
mov
cmp
xlat
xchg
mov
not
mov
dec
xlat
push
popa
pop
mov
popl
mov
int
cltd
fbstp
repz
cmp
dec
lcall
cwtl
xor
orb
mov
sahf
js
and
jne
js
lret
fmul
jnp
scas
clc
mov
aas
xor
sub
jnp
rorb
xlat
push
pop
in
jb
and
decb
dec
std
add
cld
in
mov
pop
clc
pop
mov
aad
mov
jge
push
push
loop
or
test
xorl
ss
inc
imul
dec
sub
sti
out
sbb
ja,pt
mov
add
mov
sbb
cltd
andl
je
or
push
stos
stc
inc
xor
inc
mov
mov
scas
adc
xlat
push
jnp
repz
in
mov
aaa
outsb
jae
add
adc
jl
sub
in
ds
fs
or
mov
lcall
test
cld
xchg
push
arpl
mov
jb
ss
add
jecxz
fs
cmc
jge
cmp
outsl
cmp
aas
notb
inc
test
mov
mov
in
pop
je
mov
ja
mov
ret
mov
xor
push
mov
jp
adc
pop
pop
lock
loopne
adc
sti
shrb
jecxz
mov
or
sbb
sahf
xchg
dec
mov
jnp
push
push
in
adc
mov
mov
icebp
push
mov
cmp
inc
push
sahf
push
ds
jmp
cli
lock
fdivrs
jne
scas
inc
add
cmp
and
int3
popf
jae
fimull
xor
mov
mov
mov
rclb
push
por
jb
sbb
rclb
nop
dec
jp
sub
out
inc
bound
push
cmp
je
mov
cli
inc
iret
push
gs
inc
dec
lcall
jo
xor
add
aaa
bound
xlat
ds
stc
jno
pop
inc
hlt
push
sub
xchg
push
sbb
lods
sbb
cli
mov
aam
jae
mov
mov
xor
jbe
jns
push
cwtl
punpckhdq
hlt
je
lahf
ds
adcb
stc
jg
push
call
and
out
bnd
dec
push
out
push
inc
int3
jns
xorb
mov
lret
push
loope
imul
psubw
popf
faddl
imulb
mov
and
mov
mov
into
push
sub
aas
xor
dec
mov
mov
mov
rclb
jns
jne
adc
in
aam
mov
mov
dec
js
and
jmp
enter
lcall
addl
repnz
add
cwtl
inc
dec
pop
addb
hlt
sub
cmp
mov
aas
ret
mov
inc
repnz
aas
mov
sub
cmp
inc
imul
stc
cmp
aas
mov
lret
mov
aaa
cmp
dec
xor
pushf
adc
xor
pop
jne
pop
cmp
cmp
push
dec
idivl
mov
fbld
and
lcall
repz
dec
push
call
cmp
xorl
stos
leave
test
cmp
pop
cmp
and
inc
imul
inc
jno
movsl
ds
lods
mov
and
dec
xchg
jno
pop
adc
ds
adc
cmp
idivb
js
mov
adc
mov
jp
adc
mov
dec
jbe
and
jmp
dec
add
std
aaa
mov
cmpsb
mov
repnz
repz
push
imul
xorb
sub
push
sahf
lock
mov
sti
inc
loopne
rorl
jne
bound
xchg
and
mov
das
mov
cmpsb
jl
and
sti
jl
iret
rol
push
mov
iret
mov
cmp
ds
hlt
ja
mov
rcrl
std
jbe
sbb
sbb
std
popf
les
add
data16
paddb
mov
sarl
hlt
jne
inc
push
ljmp
jg
test
mov
xchg
cmpsl
enter
cmp
fidivs
inc
inc
sub
div
pop
in
outsl
je
cmp
dec
js
adc
ret
or
rorb
call
rorb
xor
mov
roll
mull
adc
bound
adc
mov
mov
fstpl
in
add
pop
inc
stc
ss
sbb
mov
mov
mov
hlt
add
imul
mov
inc
mov
jb
enter
cmp
data16
and
divb
addr16
out
push
pop
cmp
lret
adc
inc
jmp
fwait
ror
test
mov
or
adc
fsts
movsl
adc
shlb
add
fdivl
adc
pop
push
repz
rolb
sub
mov
jae
inc
dec
in
les
dec
mov
jle
mov
jmp
pushl
fistpl
inc
ds
idiv
pusha
jmp
cmp
jne
mov
sub
xchg
es
outsl
jle
sbb
cmp
pop
push
rorl
cmp
inc
jbe
cmp
adc
and
js
mov
mov
ret
out
inc
push
add
cmc
xor
adc
lret
repnz
mov
dec
inc
xchg
jne
mov
xor
or
stc
cmp
scas
gs
call
cmc
jns
imul
cmp
xchg
aaa
mov
stos
sbb
inc
test
outsl
lahf
ror
inc
bound
jle
rorl
inc
push
dec
jb
jne
pop
test
shll
add
adc
and
jnp
ret
add
in
xor
xchg
dec
xor
divb
cmp
out
add
repz
pop
lret
mov
mov
cmp
pop
sub
inc
cmp
hlt
cli
mov
cwtl
cmp
mov
mov
sub
fwait
daa
mov
pop
and
dec
and
cmp
pop
ret
sub
mov
push
cmp
pop
jns
adc
loopne
shl
mov
stos
movnti
ret
pop
add
lock
sahf
mov
adc
mov
mov
cltd
div
add
dec
inc
push
jno
mov
lock
or
std
cmp
cmp
add
hlt
jnp
outsl
inc
ljmp
rol
add
lods
aas
sbb
outsb
add
ror
add
mov
mov
pop
inc
xor
adc
shlb
fimuls
jp
pop
sub
inc
lds
push
out
cmp
add
mov
xor
mov
sub
imull
aaa
dec
lock
sub
out
jl
dec
iret
mov
lea
sub
outsl
inc
cmp
repz
loop
inc
imul
jle
sub
inc
test
pusha
rorl
fstpt
loopne,pt
ret
or
cmp
cli
int3
pop
adc
je
mov
lahf
iret
out
mov
cmp
push
outsb
sbb
shl
pop
add
sub
xchg
fbstp
mov
dec
popf
imul
shlb
inc
adc
jl
push
sbb
push
mov
cmpsb
arpl
inc
icebp
inc
mov
add
nop
adc
xchg
pop
inc
rol
cld
adc
add
subl
ret
xchg
aaa
inc
sbb
inc
lock
mov
pop
jg
iret
addr16
push
jnp
sbb
push
in
stc
mov
je
fiadds
add
mov
push
insl
pop
clc
insl
mov
das
dec
shl
jnp
mov
mov
pop
cmpl
fisubl
test
inc
cmp
repnz
and
inc
addr16
cmp
cmp
roll
adc
mov
subb
aam
mov
arpl
push
sub
aaa
ret
sbb
iret
xor
sti
xor
fstpl
into
call
stc
mov
push
insb
shl
popa
add
cwtl
and
lea
dec
jae
mov
aas
shrl
sub
add
inc
and
dec
and
sbb
add
outsb
and
jbe
add
or
add
and
out
and
fsubl
add
into
and
mov
and
xchg
and
xchg
add
jo
add
bound
add
push
and
inc
and
pop
and
xor
add
dec
daa
add
cmp
add
es
add
adc
add
mulb
add
in
add
shlb
add
les
add
shlb
add
loop
add
out
and
cli
and
adc
add
and
add
xor
add
inc
and
pop
and
push
and
test
add
xchg
and
movsb
and
mov
add
and
aam
add
loopne
add
in
and
mulb
add
adc
add
and
add
add
pop
and
add
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
and
add
cs
add
push
and
add
xchg
add
mov
add
into
and
add
cld
and
add
es
ss
inc
es
pop
es
insb
es
jl
add
mov
add
mov
es
mov
add
ret
add
add
add
add
movsb
and
lcall
add
and
je
add
jp
add
push
add
pusha
and
jo
add
add
add
cmp
add
add
add
mov
add
stos
and
lcall
add
and
fsubl
add
ljmp
add
add
and
add
add
add
jo
jp
add
sub
incl
add
add
jp
add
sub
pop
jp
loopne
jp
nop
mov
loopne
jp
mov
jp
nop
pusha
js
push
data16
and
sub
data16
subb
sub
push
jp
add
sub
pop
jp
rcrb
sub
jp
sbbb
mov
pop
jp
adc
sub
sbb
adc
sub
cmp
sarb
jp
loopne
js
shlb
rorb
jp
mov
push
jp
loopne
jp
mov
push
jp
sarb
jp
loopne
jns
rclb
sub
jb
sub
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
mov
push
jp
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
jp
out
sub
jp
add
sub
jb
sub
jb
sub
push
sub
pop
jp
mov
push
jp
loopne
jp
mov
push
jp
push
cmpb
dec
jns
rclb
sub
sub
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
sarb
js
loopne
js
jo
js
mov
ja
sub
ja
sub
jne
sub
js
add
sub
js
inc
cmp
xor
js
orb
sub
cmp
add
sub
push
jp
loopne
jp
loopne
js
shlb
mov
jp
loopne
jp
mov
push
jp
loopne
jp
mov
push
jp
mov
js
loopne
jns
rclb
sub
sub
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
sarb
js
loopne
js
jo
js
mov
ja
sub
ja
sub
jne
sub
js
add
sub
js
inc
cmp
xor
js
orb
sub
cmp
add
sub
push
jp
loopne
jp
loopne
js
shlb
rorb
jp
mov
push
jp
loopne
jp
out
sub
push
jp
add
sub
out
sub
push
jp
mov
js
xorb
pusha
jno
sub
js
loopne
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
mov
push
jp
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
jb
sub
jb
sub
mov
loopne
jp
mov
push
jp
loopne
jp
out
sub
push
jp
add
sub
out
sub
push
jp
mov
js
xorb
pusha
jno
sub
js
loopne
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
out
sub
out
sub
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
out
sub
out
sub
insb
jp
out
sub
out
sub
insb
jp
add
add
addb
add
add
aas
ljmp
data16
data16
jo
jp
mov
popf
jnp
pusha
mov
mov
mov
add
add
lcall
sbb
sub
jp
add
sub
jp
add
sub
out
sub
out
sub
out
sub
out
sub
pop
jp
out
sub
out
sub
pop
jp
lock
jp
adc
sub
jp
add
sub
mov
loopne
jp
mov
out
sub
out
sub
push
jp
add
sub
out
sub
push
jp
xor
sub
add
add
add
adc
jp
mov
xor
add
sub
js
pusha
fdivrl
inc
sarl
mov
jmp
sub
xlat
jp
jo
jns
scas
out
jp
call
outsb
imul
outsb
and
arpl
je
outsl
outsb
add
add
movsl
jns
fsubrp
jp
add
add
arpl
loopne
add
add
add
add
add
add
add
add
incl
add
add
incl
add
add
loopne
sub
incl
add
add
jp
incl
add
add
out
sub
cld
jp
sar
jp
add
add
incl
add
add
hlt
jp
incl
add
add
mov
incl
add
add
mov
incl
add
add
jmp
mov
add
add
incl
add
add
mov
add
add
dec
mov
pop
mov
jmp
cmpb
cmpb
add
add
decl
cmpb
add
add
incl
add
add
jp
add
add
and
jp
incl
add
add
xchg
add
add
testb
sub
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
push
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
add
lock
add
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
sub
xor
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
add
add
incl
add
add
dec
jnp
incl
add
add
jnp
enter
rclb
sub
adc
jns
adc
jns
cmp
jns
xor
jle
sub
jns
pop
adc
jns
push
adc
jns
dec
adc
jns
inc
adc
jns
je
jns
jo
jns
insb
adc
jns
fs
jns
pushf
push
jns
cwtl
push
jns
and
jle
xchg
push
jns
nop
push
jns
mov
jns
mov
jns
test
jns
adcb
sub
jns
mov
jns
mov
jns
lods
push
jns
test
jns
movsb
push
jns
mov
push
jns
fcoms
jns
aam
jns
rclb
jns
int3
push
jns
enter
les
jns
rclb
sub
push
jns
call
push
jns
adc
jns
cmp
jns
xor
jns
pop
push
jns
jl
jns
pushf
pop
jns
mov
pop
jns
cld
pop
jns
sbb
jns
cmp
jns
pop
pop
jns
js
jns
nop
adc
mov
jns
movsb
adc
mov
adc
enter
in
jns
sbb
jns
adc
jns
add
jns
and
jns
inc
adc
test
jle
jo
jns
xchg
adc
adcb
sub
adc
and
insl
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
inc
insb
popa
jae
and
gs
jb
push
jae
jb
jo
outsl
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outsl
jb
popa
je
sub
and
and
arpl
jo
outsl
jb
add
add
insb
popa
arpl
outsb
je
fs
gs
pop
pop
and
outsl
jae
jb
daa
add
add
pusha
jo
popa
arpl
outsb
je
fs
gs
and
outsl
jae
jb
daa
add
pusha
outsl
insl
outsb
imul
jae
addr16
add
and
gs
pop
pop
add
add
outsb
gs
pop
add
pusha
insb
outsl
arpl
and
je
bound
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
outsl
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outsl
jo
and
outsb
jae
jb
arpl
and
outsl
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
insb
and
jo
popa
arpl
outsb
je
insl
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
add
arpl
and
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outsb
addr16
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outsl
data16
add
add
pusha
jbe
popa
insb
insb
daa
add
bound
insb
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
sub
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
cmp
fs
gs
add
outsb
gs
add
add
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
xor
insb
insb
add
pop
pop
popaw
jae
arpl
insb
add
pop
pop
je
imul
add
jae
arpl
insb
add
add
jo
jae
popa
insb
add
add
pop
pop
arpl
insb
add
bound
gs
add
add
cmp
add
add
cmp
add
pusha
popa
outsb
outsl
outsb
jns
outsl
jne
and
insl
gs
popa
arpl
add
add
imul
gs
jo
popa
je
sub
insl
gs
jb
dec
push
dec
dec
add
add
pop
je
jne
imul
add
add
bound
cmp
add
add
jo
outsl
je
arpl
cmp
add
imul
add
add
jb
jne
insb
and
add
add
popa
je
arpl
add
gs
jo
popa
je
and
popa
je
arpl
fs
je
and
insl
bound
and
je
jne
je
jb
push
jb
add
gs
jo
popa
je
and
popa
je
arpl
fs
je
and
insl
bound
and
outsb
jae
jb
arpl
and
insb
jo
jb
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
fs
jb
arpl
and
insb
jo
jb
add
add
jge
add
pusha
popa
fs
jae
outsl
jb
add
pusha
jbe
outsl
jb
imul
add
add
and
sub
add
jbe
imul
insb
popa
je
insb
add
add
cs
cs
add
and
outsl
ja
add
jbe
insb
popa
je
insb
add
add
outsb
jae
add
add
outsb
gs
push
dec
dec
dec
dec
push
dec
add
push
add
imul
add
add
imul
pop
imul
pop
imul
pop
imul
outsl
outsl
insb
add
add
jne
jae
outsb
gs
add
outsl
jne
insb
add
insb
outsl
outsb
and
add
data16
outsl
popa
je
add
insb
outsl
outsb
add
add
imul
jb
add
add
popa
jb
add
add
outsb
imul
outsb
and
jae
daa
add
jne
imul
je
jne
je
add
popa
jae
and
add
jne
and
add
imul
add
outsl
jb
and
add
popa
jb
add
add
outsb
jae
and
add
insb
popa
je
insb
and
add
sub
add
insb
popa
je
add
jae
add
jnp
outsl
jb
add
add
out
sub
out
sub
out
sub
pop
jnp
in
jnp
mov
jnp
imul
jnp
sbb
push
jnp
std
push
jnp
mov
jnp
nop
push
jnp
lahf
push
jnp
and
aas
and
add
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
call
es
fldenv
jnp
decl
and
jnp
jmp
and
sub
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
xor
push
dec
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
dec
cmp
cmp
add
fs
dec
dec
dec
dec
and
and
jns
add
fs
jns
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
decl
sarb
sarb
pushl
sarb
movsl
jns
add
jns
jo
jp
lock
jns
and
add
or
add
dec
mov
jp
adc
jp
xor
jp
loopne
jp
nop
daa
jp
inc
es
push
das
jp
mov
jp
jo
jp
shlb
push
cmp
add
jp
push
cmpb
movsb
jns
lock
jp
nop
sub
loopne
jp
and
js
pusha
das
jp
push
das
jp
mov
jp
adc
jp
shrb
sub
push
jp
push
cmpb
mov
jnp
cmpb
sub
jns
aas
ljmp
add
add
add
add
or
add
loopne
jns
ljmp
mov
xlat
jnp
out
aad
sub
aad
sub
sarl
and
aam
sub
jmp
sub
ljmp
test
jns
cli
ljmp
icebp
sarl
jp
jnp
clc
sarl
std
sarl
jnp
and
sarb
xchg
sarb
jne
jnp
jp
jnp
jge
jnp
push
mov
jnp
push
out
jnp
xor
jnp
jae
jb
outsb
and
outsl
and
add
mov
jnp
push
out
jnp
and
jnp
fdivrs
jnp
push
out
jnp
pop
in
jnp
imul
and
jb
outsb
and
jae
je
outsl
outsb
add
jns
cltd
jecxz
sub
sub
jae
cmp
bound
and
je
imul
imul
je
add
add
jae
cmp
bound
and
je
cmp
jnp
push
out
jnp
lods
in
jnp
call
insb
jp
add
add
inc
add
add
jns
and
sub
mov
jnp
add
add
ljmp
stc
jnp
das
stc
jnp
add
add
jnp
jnp
inc
clc
jnp
loopne
jnp
out
sub
out
sub
out
sub
out
sub
jnp
out
sub
out
sub
out
sub
idivl
lock
jnp
mov
jnp
mov
hlt
jnp
mov
jnp
add
jnp
loopne
jnp
inc
jnp
xor
jnp
rorb
sub
lea
push
mov
and
jnp
mov
mov
rorb
jnp
shrb
jnp
mov
cmpb
cmpl
rclb
sub
cmpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
movsl
jnp
int3
movsl
jnp
add
add
ljmp
mov
jnp
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
loopne
js
add
add
outsl
js
add
add
outsl
js
add
add
outsl
js
add
add
loopne
js
add
outsl
js
push
or
add
outsl
js
pop
or
add
outsl
js
or
add
outsl
js
or
add
outsl
js
or
add
outsl
js
or
add
outsl
js
or
add
loopne
js
or
outsl
js
push
or
add
outsl
js
wbinvd
add
shrb
adc
add
outsl
js
adc
add
outsl
js
adc
add
outsl
js
adc
add
outsl
js
adc
add
loopne
js
adc
outsl
js
push
or
add
outsl
js
pop
or
add
outsl
js
sbb
add
outsl
js
sbb
add
outsl
js
sbb
add
outsl
js
sbb
add
outsl
js
sbb
add
loopne
js
sbb
outsl
js
push
or
add
outsl
js
pop
or
add
outsl
js
and
add
outsl
js
and
add
outsl
js
and
add
outsl
js
and
add
outsl
js
and
add
loopne
js
and
outsl
js
or
add
insl
js
daa
or
add
outsl
js
sub
add
outsl
js
sub
add
outsl
js
sub
add
outsl
js
sub
add
outsl
js
sub
add
loopne
js
sub
outsl
js
or
add
insl
js
das
or
add
outsl
js
xor
add
outsl
js
xor
add
outsl
js
xor
add
outsl
js
xor
add
outsl
js
xor
add
loopne
js
xor
outsl
js
or
add
insl
js
aaa
or
add
outsl
js
cmp
add
outsl
js
cmp
add
outsl
js
cmp
add
outsl
js
cmp
add
outsl
js
cmp
add
loopne
js
cmp
outsl
js
or
add
insl
js
aas
or
add
outsl
js
inc
or
add
outsl
js
inc
or
add
outsl
js
inc
or
add
outsl
js
inc
or
add
outsl
js
inc
or
add
outsl
js
inc
or
add
outsl
js
inc
or
add
outsl
js
inc
or
add
outsl
js
dec
or
add
outsl
js
dec
or
add
outsl
js
dec
or
add
outsl
js
dec
or
add
outsl
js
dec
or
add
outsl
js
dec
or
add
outsl
js
dec
or
add
outsl
js
dec
or
add
outsl
js
push
or
add
outsl
js
push
or
add
outsl
js
push
or
add
outsl
js
push
or
add
outsl
js
push
or
add
outsl
js
push
or
add
outsl
js
push
or
add
outsl
js
push
or
add
outsl
js
pop
or
add
outsl
js
pop
or
add
outsl
js
pop
or
add
outsl
js
pop
or
add
outsl
js
pop
or
add
outsl
js
pop
or
add
outsl
js
pop
or
add
outsl
js
pop
or
add
outsl
js
pusha
or
add
outsl
js
popa
or
add
outsl
js
bound
add
outsl
js
arpl
add
outsl
js
or
add
insl
js
or
add
insl
js
or
add
js
or
add
js
push
outsl
js
imul
sub
add
loopne
js
imul
loopne
js
insb
or
add
outsl
js
insl
or
add
outsl
js
outsb
or
add
outsl
js
outsl
or
add
outsl
js
jo
add
loopne
js
jno
add
loopne
js
jb
add
loopne
js
jae
add
loopne
js
je
add
loopne
js
jne
add
loopne
js
jbe
add
loopne
js
ja
add
loopne
js
js
add
loopne
js
jns
add
loopne
js
jp
add
loopne
js
jnp
add
loopne
js
jl
add
loopne
js
jge
add
loopne
js
jle
add
loopne
js
jg
add
loopne
js
sbbb
loopne
js
andl
sub
outsl
js
sbbl
loopne
js
test
add
outsl
js
test
add
outsl
js
xchg
add
outsl
js
xchg
add
outsl
js
mov
add
outsl
js
mov
add
outsl
js
mov
add
outsl
js
mov
add
outsl
js
mov
add
outsl
js
lea
add
outsl
js
mov
add
outsl
js
push
add
loopne
js
nop
or
add
outsl
js
xchg
or
add
outsl
js
xchg
or
add
outsl
js
xchg
or
add
outsl
js
xchg
or
add
outsl
js
xchg
or
add
outsl
js
xchg
or
add
outsl
js
xchg
or
add
outsl
js
cwtl
or
add
outsl
js
cltd
or
add
outsl
js
lcall
sub
outsl
js
pushf
or
add
outsl
js
popf
or
add
outsl
js
sahf
or
add
outsl
js
lahf
or
add
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
movsb
or
add
outsl
js
movsl
or
add
outsl
js
cmpsb
or
add
outsl
js
cmpsl
or
add
outsl
js
test
add
loopne
js
test
outsl
js
stos
or
add
outsl
js
stos
or
add
outsl
js
lods
or
add
outsl
js
lods
or
add
outsl
js
scas
or
add
outsl
js
scas
or
add
outsl
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
rcrb
loopne
js
rcrl
loopne
js
ret
add
outsl
js
ret
or
add
outsl
js
les
add
outsl
js
lds
add
outsl
js
pop
add
loopne
js
data16
loopne
js
enter
loopne
js
leave
or
add
outsl
js
lret
add
outsl
js
lret
or
add
outsl
js
int3
or
add
outsl
js
int
adc
loopne
js
into
or
add
outsl
js
iret
or
add
outsl
js
rclb
add
outsl
js
rcll
add
outsl
js
rclb
add
outsl
js
rcll
add
outsl
js
aam
add
loopne
js
aad
add
loopne
js
or
add
insb
js
xlat
or
add
outsl
js
fcoms
add
outsl
js
fsts
add
outsl
js
ficoml
add
outsl
js
fistl
add
outsl
js
fcoml
add
outsl
js
fstl
add
outsl
js
ficoms
add
outsl
js
fists
add
outsl
js
loopne
inc
add
outsl
js
loope
inc
add
outsl
js
loop
inc
add
outsl
js
jecxz
add
loopne
js
in
add
loopne
js
in
add
loopne
js
out
add
loopne
js
out
add
loopne
js
call
outsl
js
jmp
outsl
js
ljmp
sub
adc
add
outsl
js
in
or
add
outsl
js
in
or
add
outsl
js
out
or
add
outsl
js
out
or
add
outsl
js
lock
add
insl
js
icebp
or
add
insb
js
repnz
add
insl
js
repz
add
insl
js
hlt
or
add
outsl
js
cmc
or
add
outsl
js
testb
add
arpl
testl
js
clc
or
add
outsl
js
stc
or
add
outsl
js
cli
or
add
outsl
js
sti
or
add
outsl
js
cld
or
add
outsl
js
std
or
add
outsl
js
push
add
loopne
js
incl
add
inc
bound
add
add
outsl
js
add
add
outsl
js
add
add
outsl
js
add
add
outsl
js
add
add
lock
js
add
insb
js
push
adc
add
outsl
js
pop
or
add
insb
js
or
add
loopne
js
or
add
loopne
js
or
add
lock
js
or
add
loopne
js
or
add
lock
js
or
insb
js
push
or
add
insb
js
wbinvd
add
lock
js
adc
add
lock
js
adc
add
lock
js
adc
add
lock
js
adc
add
lock
js
adc
add
lock
js
adc
insb
js
push
or
add
insb
js
pop
or
add
insb
js
sbb
add
lock
js
sbb
add
lock
js
sbb
add
lock
js
sbb
add
lock
js
sbb
add
lock
js
sbb
insb
js
push
or
add
insb
js
pop
or
add
insb
js
and
add
outsl
js
and
add
outsl
js
and
add
outsl
js
and
add
outsl
js
and
add
lock
js
and
insb
js
or
add
insb
js
daa
or
add
insb
js
sub
add
lock
js
sub
add
lock
js
sub
add
lock
js
sub
add
lock
js
sub
add
lock
js
sub
insb
js
or
add
insb
js
das
or
add
insb
js
xor
add
loopne
js
xor
add
loopne
js
xor
add
loopne
js
xor
add
loopne
js
xor
add
loopne
js
xor
outsl
js
or
add
insb
js
aaa
or
add
insb
js
cmp
add
lock
js
cmp
add
lock
js
cmp
add
lock
js
cmp
add
lock
js
cmp
add
lock
js
cmp
insb
js
or
add
insb
js
aas
or
add
insb
js
inc
push
add
loopne
js
inc
push
add
loopne
js
inc
push
add
loopne
js
inc
push
add
loopne
js
inc
push
add
loopne
js
inc
push
add
loopne
js
inc
push
add
loopne
js
inc
push
add
loopne
js
dec
push
add
loopne
js
dec
push
add
loopne
js
dec
push
add
loopne
js
dec
push
add
loopne
js
dec
push
add
loopne
js
dec
push
add
loopne
js
dec
push
add
loopne
js
dec
push
add
loopne
js
push
or
add
insb
js
push
or
add
insb
js
push
or
add
insb
js
push
or
add
insb
js
push
or
add
insb
js
push
or
add
insb
js
push
or
add
insb
js
push
or
add
insb
js
pop
or
add
insb
js
pop
or
add
insb
js
pop
or
add
insb
js
pop
or
add
insb
js
pop
or
add
insb
js
pop
or
add
insb
js
pop
or
add
insb
js
pop
or
add
insb
js
pusha
push
add
loopne
js
popa
or
add
insb
js
bound
add
outsl
js
arpl
add
outsl
js
fs
add
loopne
js
gs
add
loopne
js
push
add
loopne
js
addr16
add
loopne
js
push
outsl
js
imul
sub
add
loopne
js
imul
loopne
js
insb
or
add
insb
js
insl
or
add
insb
js
outsb
push
add
loopne
js
outsl
push
add
loopne
js
jo
add
lock
js
jno
add
loopne
js
jb
add
loopne
js
jae
add
loopne
js
je
add
loopne
js
jne
add
loopne
js
jbe
add
loopne
js
ja
add
loopne
js
js
add
lock
js
jns
add
lock
js
jp
add
lock
js
jnp
add
lock
js
jl
add
lock
js
jge
add
lock
js
jle
add
loopne
js
jg
add
loopne
js
sbbb
sub
outsl
js
sbbb
sub
outsl
js
test
js
test
js
xchg
js
xchg
js
mov
js
mov
js
mov
js
mov
js
mov
js
lea
js
mov
js
sbb
js
nop
push
add
loopne
js
xchg
push
add
loopne
js
xchg
push
add
loopne
js
xchg
push
add
loopne
js
xchg
push
add
loopne
js
xchg
push
add
loopne
js
xchg
push
add
loopne
js
xchg
push
add
loopne
js
cwtl
push
add
loopne
js
cltd
push
add
loopne
js
lcall
sub
outsl
js
pushf
push
add
loopne
js
popf
push
add
loopne
js
sahf
push
add
loopne
js
lahf
push
add
loopne
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
movsb
pop
add
loopne
js
movsl
push
add
loopne
js
cmpsb
or
add
insb
js
cmpsl
or
add
insb
js
test
add
loopne
js
test
outsl
js
stos
adc
add
outsl
js
stos
push
add
loopne
js
lods
pop
add
loopne
js
lods
push
add
loopne
js
scas
push
add
loopne
js
scas
push
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
add
loopne
js
mov
insb
js
mov
insb
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
mov
outsl
js
rclb
loopne
js
rcll
loopne
js
ret
add
insb
js
ret
or
add
insb
js
les
add
lock
js
lds
add
lock
js
or
add
insb
js
push
add
loopne
js
enter
loopne
js
leave
adc
add
outsl
js
lret
add
outsl
js
lret
adc
add
outsl
js
int3
adc
add
outsl
js
int
add
loopne
js
into
adc
add
outsl
js
iret
adc
add
outsl
js
rorb
add
lock
js
rcll
add
outsl
js
rclb
add
outsl
js
rcll
add
outsl
js
aam
add
lock
js
aad
add
loopne
js
or
add
insb
js
xlat
or
add
insb
js
fcoms
add
outsl
js
fsts
add
outsl
js
fimull
add
lock
js
fistl
add
outsl
js
fcoml
add
outsl
js
fstl
add
outsl
js
fimuls
add
lock
js
fists
add
outsl
js
loopne
add
lock
js
loope
add
loopne
js
loop
add
loopne
js
jecxz
add
lock
js
in
add
lock
js
in
add
loopne
js
out
add
lock
js
out
add
lock
js
call
outsl
js
jmp
outsl
js
ljmp
sub
push
add
loopne
js
in
push
add
loopne
js
in
push
add
loopne
js
out
or
add
insb
js
out
push
add
loopne
js
lock
add
insb
js
icebp
push
add
loopne
js
repnz
add
loopne
js
repz
add
loopne
js
hlt
or
add
insb
js
cmc
push
add
loopne
js
testb
add
insb
js
testl
js
clc
push
add
loopne
js
stc
push
add
loopne
js
cli
push
add
loopne
js
sti
or
add
insb
js
cld
push
add
loopne
js
std
push
add
loopne
js
push
add
loopne
js
decl
add
lock
js
rorb
jp
mov
out
sub
push
jp
and
sub
gs
out
sub
push
jp
adc
sub
pop
jp
lock
jp
rcrb
sub
out
sub
jl
sub
jp
out
sub
out
sub
out
sub
out
sub
pop
jp
out
sub
out
sub
pop
jp
lock
jp
adc
sub
mov
loopne
jp
mov
out
sub
push
jp
and
sub
gs
out
sub
push
jp
adc
sub
pop
jp
lock
jp
rcrb
sub
out
sub
jl
sub
jp
nop
mov
loopne
jp
mov
pusha
js
push
data16
and
sub
data16
subb
sub
push
jp
add
sub
pop
jp
rcrb
sub
out
sub
jl
sub
jp
adc
sub
out
sub
out
sub
out
sub
jb
sub
jb
sub
mov
loopne
jp
and
js
adc
sub
push
jp
jo
js
lock
jp
push
cmpb
dec
jns
rclb
sub
jb
sub
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
mov
push
jp
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
jp
add
sub
mov
loopne
jp
mov
xor
add
sub
jp
add
sub
jb
sub
jb
sub
mov
loopne
jp
mov
int
sub
push
jp
nop
into
js
lock
jp
adc
js
loopne
jns
rclb
sub
jb
sub
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
mov
push
jp
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
jp
add
sub
jp
add
sub
cs
leave
mov
ss
mov
bound
jae
cwtl
xchg
sub
mov
fwait
push
cmp
aam
push
addr16
outsl
sbb
dec
ficompl
cmc
mov
push
pop
aas
xchg
ret
or
pop
and
nop
xor
xor
notl
mov
movsl
mov
xlat
pop
xchg
sub
cmp
xchg
movsb
jge
jbe
imul
je
icebp
inc
popf
jo
fs
and
sub
and
negb
popa
imul
mov
cmp
pop
stc
into
mov
push
or
or
hlt
inc
orl
insb
shrl
or
mov
js
xchg
mov
arpl
insl
jmp
add
push
pop
shl
cmpsb
ja
clc
jmp
dec
or
inc
push
mov
in
pop
sbb
cltd
lea
lahf
adc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
adc
add
or
add
push
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
sbb
add
sldt
add
and
inc
ja
sarb
iret
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
mov
call
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
mov
movsb
mull
jno
and
mov
gs
and
cmp
iret
sti
shlb
repz
ret
sbb
add
pop
fwait
dec
sbb
sbb
sbb
inc
add
mov
mov
pop
adcl
mov
dec
mov
mov
aad
jge
push
outsl
mov
je
mov
cmp
mov
xorb
fcompl
je
fwait
rcl
icebp
sahf
shrl
jecxz
dec
cmp
aad
mov
popf
rorl
pushf
lods
ja
mov
sub
sub
sub
stos
test
sti
inc
mov
mov
adc
stos
fbld
push
push
ds
adc
mov
insl
xor
enter
in
out
mov
ret
cmp
and
xchg
cmpsl
aad
addb
push
arpl
push
jo
push
or
sub
das
rolb
or
pop
cmp
sbb
in
sub
pop
cld
insl
sub
fbstp
cmp
arpl
gs
ja
mov
scas
in
inc
cs
ret
xor
jb
fs
dec
mov
xor
dec
data16
jo
dec
ret
push
push
mov
push
out
sbb
xchg
rcll
test
cltd
sub
jno
test
mov
adc
rcl
mov
push
stos
inc
push
or
cltd
jmp
fisttps
daa
test
fwait
loope
mov
leave
lds
mov
dec
stos
fmuls
jecxz
ja
lret
mov
outsl
cs
out
orb
outsl
arpl
mov
in
cmp
add
mov
push
arpl
cli
mov
fsubrp
insb
push
movsb
adc
mov
jb
bnd
pushf
popa
es
shlb
mov
loopne
jge
ljmp
jge
mov
addr16
cmpsb
cwtl
enter
arpl
scas
or
aas
adc
inc
sbb
xor
jge
and
ja
sub
stos
lret
mov
sahf
cmp
or
sbb
lret
mov
jle
cld
pushf
sub
in
cli
cmp
pop
inc
dec
mov
inc
insb
shl
sub
repz
shl
sub
pop
jp
mov
js
xor
sub
pop
jp
lock
jp
adc
sub
cmp
nop
and
sub
mov
sub
repz
xor
sub
push
jp
add
sub
push
jp
xor
sub
repz
shl
sub
repz
mov
pop
jp
out
sub
push
jp
rcrb
sub
pop
jp
adc
sub
mov
loopne
jp
nop
and
sub
out
sub
repz
xor
sub
push
jp
out
sub
push
jp
xor
sub
add
add
jb
sub
jb
sub
cmp
loopne
jp
mov
push
jp
loopne
jp
out
sub
push
jp
add
sub
out
sub
push
jp
cmpb
sub
js
adc
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
sarb
js
loopne
js
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
add
sub
js
inc
cmp
xor
js
orb
sub
cmp
add
sub
push
jp
loopne
js
shlb
add
js
loopne
jp
mov
push
jp
loopne
jp
adcb
pusha
push
jp
mov
js
nop
xor
rclb
sub
aas
js
adc
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
sarb
js
loopne
js
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
add
sub
js
inc
cmp
xor
js
orb
sub
cmp
add
sub
push
jp
inc
push
jp
push
cmpb
out
sub
js
loopne
js
push
push
jp
out
sub
push
jp
loopne
js
shlb
rorb
jp
mov
push
jp
loopne
jp
lock
js
mov
js
push
cmpb
dec
jns
rclb
sub
js
and
js
adc
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
mov
push
jp
jo
js
ror
sub
iret
js
xor
js
lock
js
push
push
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
jb
sub
jb
sub
pop
jp
mov
push
jp
loopne
jp
adcb
pusha
push
jp
mov
js
nop
iret
js
rclb
sub
aas
js
adc
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
sarb
js
loopne
js
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
add
sub
js
inc
cmp
xor
js
orb
sub
cmp
add
sub
push
jp
inc
push
jp
push
cmpb
out
sub
js
mov
js
push
push
jp
out
sub
push
jp
loopne
js
shlb
jo
js
loopne
jp
mov
push
jp
loopne
jp
adcb
pusha
push
jp
mov
js
nop
xor
rclb
sub
aas
js
adc
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
sarb
js
loopne
js
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
add
sub
js
inc
cmp
xor
js
orb
sub
cmp
add
sub
push
jp
inc
push
jp
push
cmpb
ret
push
cmpb
ret
rol
sub
ljmp
loopne
js
shlb
pusha
fnstcw
loopne
jp
mov
push
jp
loopne
jp
adcb
pusha
push
jp
mov
js
nop
xor
rclb
sub
aas
js
adc
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
sarb
js
loopne
js
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
add
sub
js
inc
cmp
xor
js
orb
sub
cmp
add
sub
push
jp
rcr
js
push
cmpb
fdivrs
push
cmpb
fdivrs
push
push
jp
pusha
fistpll
mov
push
jp
jo
jp
add
sub
js
rcr
sub
xor
xor
inc
inc
inc
inc
inc
inc
add
add
xor
xor
xor
ss
cmp
popa
bound
data16
add
loopne
js
shlb
push
in
js
loopne
jp
mov
push
jp
loopne
jp
adcb
pusha
push
jp
mov
js
nop
iret
js
rclb
sub
aas
js
adc
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
sarb
js
loopne
js
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
add
sub
js
inc
cmp
xor
js
orb
sub
cmp
add
sub
push
jp
inc
push
jp
push
cmpb
loope
sub
js
mov
js
push
push
jp
loopne
js
mov
push
jp
and
sub
push
jp
add
sub
push
jp
lock
jp
loopne
js
nop
and
rclb
sub
js
shlb
sub
idivb
loopne
jp
mov
and
shlb
sub
push
jp
jo
js
lock
sarb
sub
push
jp
loopne
jp
lock
jp
loopne
jp
inc
and
shrb
loopne
js
push
es
andb
sub
push
jp
add
sub
push
jp
lock
jp
loopne
js
nop
and
rclb
sub
js
shlb
sub
mov
loopne
jp
mov
and
shlb
sub
push
jp
jo
js
lock
sarb
sub
push
jp
loopne
jp
lock
jp
loopne
jp
inc
and
shrb
add
js
push
es
out
sub
idivb
xor
js
xor
js
loopne
js
lock
jp
lock
xor
sub
pop
jp
lock
jp
adc
sub
cmc
js
mov
repz
adc
js
xor
sub
push
jp
loopne
jp
adc
sub
jge
sub
jp
add
sub
jp
add
sub
push
jp
and
js
xor
js
add
js
lock
jp
jo
js
xor
sub
pop
jp
lock
jp
adc
sub
idivb
mov
icebp
js
xor
sub
pop
jp
inc
mov
adc
js
adc
sub
push
jp
add
sub
pop
jp
rcrb
sub
mov
sbbb
mov
pop
jp
loopne
js
shlb
cmp
sub
pop
jp
mov
push
jp
loopne
jp
adcb
pusha
push
jp
mov
js
nop
iret
js
rclb
sub
aas
js
adc
js
push
cmpb
push
jp
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
sarb
js
loopne
js
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
add
sub
js
inc
cmp
xor
js
orb
sub
cmp
add
sub
push
jp
inc
push
jp
push
cmpb
cmpb
cmpb
into
js
push
push
jp
sar
js
mov
push
jp
jo
jp
add
sub
pop
jp
mov
jp
nop
pusha
js
push
data16
and
sub
data16
subb
sub
push
jp
add
sub
pop
jp
rcrb
sub
jp
sbbb
mov
pop
jp
adc
sub
out
sub
cmp
sarb
jp
xor
js
xor
js
xor
js
loopne
js
lock
jp
out
sub
push
jp
rcrb
sub
pop
jp
adc
sub
mov
loopne
jp
shl
js
out
sub
repz
xor
sub
push
jp
out
sub
push
jp
xor
sub
push
jp
and
js
xor
js
add
js
lock
jp
jo
js
xor
sub
pop
jp
lock
jp
adc
sub
hlt
js
mov
icebp
js
xor
sub
pop
jp
inc
mov
adc
js
adc
sub
push
jp
add
sub
pop
jp
rcrb
sub
mov
sbbb
mov
pop
jp
and
sub
push
jp
add
sub
push
jp
lock
jp
loopne
js
out
sub
push
jp
push
and
shlb
sub
mov
loopne
jp
mov
and
shlb
sub
push
jp
jo
js
lock
sarb
sub
push
jp
loopne
jp
lock
jp
loopne
jp
inc
and
shrb
add
js
push
es
out
sub
repz
shl
sub
repz
mov
pop
jp
out
sub
push
jp
rcrb
sub
pop
jp
adc
sub
mov
loopne
jp
nop
and
sub
out
sub
out
sub
push
jp
add
sub
out
sub
push
jp
xor
sub
out
sub
out
sub
out
sub
out
sub
pop
jp
out
sub
out
sub
pop
jp
lock
jp
adc
sub
mov
loopne
jp
mov
out
sub
out
sub
push
jp
add
sub
out
sub
push
jp
xor
sub
pop
jp
mov
pusha
js
push
data16
and
sub
data16
subb
sub
push
jp
add
sub
pop
jp
rcrb
sub
jp
sbbb
mov
pop
jp
adc
sub
out
sub
cmp
out
sub
idivb
xor
js
xor
js
loopne
js
lock
jp
out
sub
push
jp
rcrb
sub
pop
jp
adc
sub
js
loopne
jp
shl
js
adc
js
xor
sub
push
jp
out
sub
push
jp
xor
sub
out
sub
out
sub
out
sub
out
sub
pop
jp
out
sub
out
sub
pop
jp
lock
jp
adc
sub
mov
loopne
jp
mov
mov
adc
sub
pop
jp
inc
mov
adc
js
adc
sub
push
jp
add
sub
pop
jp
rcrb
sub
mov
sbbb
mov
pop
jp
shl
sub
repz
shl
sub
pop
jp
out
sub
push
jp
rcrb
sub
pop
jp
adc
sub
mov
loopne
jp
mov
out
sub
out
sub
push
jp
add
sub
out
sub
push
jp
xor
sub
jp
add
sub
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
push
test
loopne
js
pusha
xchg
js
adc
loopne
js
shlb
rorb
jp
mov
push
jp
loopne
jp
lock
jp
nop
mov
jns
lock
js
xorb
pusha
jno
sub
js
loopne
jp
adc
js
sarb
sub
mov
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
add
js
jo
js
lock
js
add
sub
ja
sub
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
jb
sub
jb
sub
pop
jp
mov
push
jp
loopne
jp
lock
jp
nop
push
jns
lock
js
xorb
pusha
jno
sub
jns
push
inc
jns
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
jp
jo
js
and
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
nop
scas
js
and
js
lock
js
add
sub
ja
sub
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
js
loopne
js
shlb
jo
js
loopne
jp
mov
mov
jp
add
jp
push
mov
jns
rclb
sub
jb
sub
js
push
cmpb
push
jp
and
js
adc
js
xor
js
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
andb
sub
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
jb
sub
jb
sub
mov
jp
mov
mov
jp
add
jp
push
mov
jns
rclb
sub
jb
sub
js
push
cmpb
push
jp
and
js
adc
js
xor
js
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
andb
sub
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
add
add
jmp
add
test
loop
dec
inc
lods
sar
aad
jecxz
int
cmp
notb
xchg
pop
sar
js
int
sub
jne
subl
imul
mov
pop
xchg
add
mov
in
add
jecxz
ljmp
inc
lds
lea
hlt
or
or
mov
mov
push
rcrl
mov
jmp
das
push
and
adc
xchg
popf
sbb
dec
sbb
pop
add
hlt
stc
leave
dec
movl
es
pop
ljmp
sahf
leave
lds
outsl
test
jge
mov
mov
mov
arpl
aaa
daa
push
mov
cmp
mov
push
jbe
cmpb
jg
pushf
pop
fs
xor
mov
cs
cmp
imul
or
mov
repnz
mov
push
insb
in
in
bswap
imul
gs
or
repnz
jmp
xchg
add
rcrb
jbe
adc
icebp
jnp
cld
mov
insl
fistl
aaa
jp
ljmp
lret
add
or
jecxz
das
jmp
push
pop
fstpt
ja
sub
jae
cmp
mov
mov
pop
in
cli
inc
sbbl
adc
sbb
mov
lock
sbb
xor
inc
leave
mov
call
test
sub
adc
xor
push
adc
mov
pop
add
loopne
inc
xchg
es
pop
dec
mov
xor
or
dec
jne
arpl
iret
cld
test
cmp
mov
jp
les
push
push
lock
int
xchg
imul
pusha
sub
jecxz
loop
fidivrs
sub
and
or
pop
sub
out
test
push
cmpsl
push
ret
test
insl
pop
add
std
test
fdivl
pop
sub
sar
int3
add
nop
mov
xchg
repnz
cmc
fs
out
ds
scas
adc
sub
adc
xor
xchg
outsl
rolb
inc
dec
mov
jno
mov
fidivrs
cmp
outsb
insl
je
sub
jno
cmp
movsb
pop
fs
dec
mov
lods
std
jnp
jl
xor
cmp
insb
fimuls
add
decb
pop
jno
cmp
inc
frstor
jae
ret
inc
inc
stos
pusha
clc
push
xchg
xor
xchg
fsts
dec
push
and
arpl
movb
movsl
enter
jge
adc
jo
add
fisubrl
aaa
cmp
data16
push
mov
jmp
xorb
mov
mov
xor
push
add
add
imul
mov
mov
inc
xor
stos
jae
xor
sbb
cmpsb
mov
gs
mulb
push
hlt
nop
cs
loope
pop
roll
push
popf
xlat
popf
dec
jns
into
cli
add
adc
pop
sub
and
push
mov
clc
mov
inc
xor
repnz
les
insl
push
jge
xchg
cmp
sbb
jge
sti
les
jecxz
jbe
stos
nopl
mov
xchg
lods
lea
mov
pop
xchg
sbb
daa
scas
mov
popa
or
bound
ljmp
into
test
cmc
and
mov
loop
mul
xchg
subb
sub
movsl
sub
pop
cwtl
mov
mov
inc
test
iret
mov
push
jbe
pop
add
mov
aad
es
pop
mov
cmp
push
push
lret
arpl
jp
fstpl
sahf
push
and
push
push
xchg
icebp
popl
dec
add
pop
mov
ret
cmp
ret
cmc
jne
xchg
sub
stos
lahf
adc
test
fbld
jle,pt
aas
mov
inc
divb
shll
push
sahf
std
dec
jp
jg
nop
or
lds
xchg
mov
pop
je
in
add
add
mov
out
ja
inc
mov
lock
jle
rcr
iret
stos
dec
xor
scas
push
sub
adc
addr16
cld
icebp
fimull
xchg
lret
pop
ret
push
mov
scas
mov
loopne
ja
lcall
bound
ss
inc
scas
jo
xchg
gs
xlat
cmp
mov
clc
cltd
inc
shl
push
mov
cmp
jne
lcall
jo
mov
dec
je
push
lods
scas
in
stos
dec
jo
dec
sub
xchg
shl
shll
inc
push
imul
popa
pop
pop
lcall
das
call
jo
fwait
push
pop
or
add
fwait
aas
adc
roll
fdivp
int
sub
or
pop
int
andl
mov
cmpsb
bound
xor
mov
pop
and
pop
or
out
ficompl
adc
mov
repz
sbb
lods
adc
sub
jno
test
xchg
push
adc
mov
push
and
cmp
pop
sarb
mov
push
jle
testb
movsl
aam
loope
sbb
pop
test
xchg
adc
ds
out
lret
or
int3
cmp
movl
mov
in
push
dec
lcall
icebp
jl
add
jle
mov
pop
mulb
aam
mov
jbe
ja
cltd
shrb
push
cmp
fbstp
jmp
push
mov
mov
xor
mov
lea
inc
test
and
mull
sahf
fwait
sbb
scas
les
js
loope
lds
adc
xor
movsl
mov
cmovo
pop
sub
daa
fidivs
adc
mov
push
lods
mov
dec
clc
lods
mov
sbb
pop
xchg
and
ss
fmull
push
cmpl
divl
shl
sbbb
mov
daa
xchg
xlat
pop
or
or
or
dec
lret
mov
push
scas
cmpl
jmp
lahf
xchg
mov
push
push
mov
cmp
scas
lret
addr16
push
aas
mov
ja
in
cmc
dec
stos
inc
dec
cwtl
out
jns
in
ret
cmp
rcrb
push
inc
mov
mov
pop
mov
jecxz
repnz
sub
popa
frstor
mov
jns
stos
push
scas
and
cmpl
gs
aam
dec
insl
out
fldt
pop
flds
sbb
xor
push
fstpl
and
push
sbb
outsb
jecxz
push
mov
sbb
jg
call
in
cmp
mov
push
jg
shl
jne
sti
jge
rcrl
mov
shlb
jmp
adc
aad
xor
imul
cmp
xor
in
addr16
js
mov
cmp
je
daa
sti
ss
push
stos
dec
sti
or
int3
mov
mov
je
push
nop
insl
xchg
adc
lea
inc
sbb
dec
in
sbb
xor
cmp
stos
cmc
popa
arpl
jle
mov
xchg
in
cmp
cmp
out
dec
fmull
pop
wrmsr
cmpsb
jp
js
pusha
xchg
jmp
and
out
jl
mov
and
adc
pusha
cmp
aad
pop
cmp
lret
inc
dec
xor
mov
fldt
adc
or
mov
cmpsb
xlat
cltd
lea
stos
jle
sti
les
adc
push
cmp
icebp
test
fldl
cmpsb
add
outsl
mov
loopne
jle
cmp
push
aaa
movsb
push
sub
dec
cld
sub
call
cmp
fmull
push
inc
int
pop
fcmovnbe
add
rep
in
iret
mov
mov
out
ss
les
stc
int3
mov
adc
pop
repnz
aas
sar
int
xchg
test
fidivrl
cltd
std
sbbl
fildl
xchg
push
mov
ja
adc
inc
jg
loop
fsts
insb
adc
out
pop
push
fsubrl
mov
cmc
sbbl
stos
mov
fnstenv
lods
icebp
lods
jmp
cld
xlat
cmpsl
mov
or
push
adc
loope
js
je
sub
xor
pop
or
cmpsl
shr
ljmp
jmp
mov
movsl
mov
imul
shrb
lcall
idivb
test
inc
xor
cli
jb
pop
test
fsubl
popf
xor
clc
test
das
addr16
sub
jns
fs
lods
mov
fstps
push
rcl
push
test
pop
repz
dec
arpl
add
push
and
data16
inc
jnp
ret
in
jecxz
jae
pop
add
movsl
in
lret
push
aam
mov
jne
pop
adc
sbbl
int
mov
outsb
sub
inc
cmpsl
pop
inc
xor
pop
cs
popa
out
mov
call
mov
mov
sbb
xor
dec
outsb
jb
xchg
sbb
pop
add
jo
xor
cmc
push
fdivs
inc
mov
mov
mov
ret
xchg
pop
fs
jge
divb
and
imul
xor
arpl
rep
call
clc
clc
mov
push
arpl
cld
dec
out
lret
push
cli
mov
push
fs
popl
iret
sub
popf
cmp
bound
xlat
mov
ja
out
jecxz
mov
insb
push
dec
jae
sar
in
jae
mov
int3
aas
dec
inc
stos
inc
xor
mov
inc
mov
ret
inc
pop
or
shrl
fwait
and
jge
pusha
outsb
and
sub
loop
lcall
sub
int3
jnp
adc
dec
mov
add
lods
jo
inc
outsl
jne
push
lods
cmc
jp
mov
dec
push
jecxz
push
fbld
das
std
cmp
cwtl
fcom
or
dec
xchg
hlt
enter
jne
lret
cmp
xchg
scas
lods
jnp
sub
jno
in
xchg
jo
pop
sub
movsb
mov
rol
andb
aaa
nop
jg
jg
std
mov
inc
sub
sbb
mov
inc
decl
cmp
loop
les
adc
cmpsl
imul
mov
adc
in
data16
sbb
popa
or
mov
mov
out
ds
mov
mov
xchg
sub
mov
cmp
popa
repz
js
jmp
ret
pushf
sti
out
aam
notl
add
imul
pushf
mov
popf
mov
or
aad
push
rorb
pushf
roll
in
sub
test
rdpmc
inc
sbb
add
pushf
add
lds
and
lods
dec
out
fsubrs
add
dec
and
hlt
mov
hlt
lret
int3
mov
arpl
das
js
jp
mov
arpl
neg
pop
add
sub
inc
sbb
and
pop
push
mov
insb
dec
xchg
cmp
aam
mov
fstpl
and
jne
popa
insb
pop
jecxz
xchg
ret
sub
add
imul
into
adc
fnstsw
dec
loope
sbb
dec
int
out
mov
xor
mov
and
cmc
sbb
shlb
test
fldt
or
cli
cltd
adc
daa
adc
jns
sti
jmp
cmp
in
cmpsb
sarb
pop
xor
and
out
imul
mov
xchg
xor
ret
xchg
mov
lahf
mov
jnp
ret
mov
sub
das
inc
test
adc
addr16
clc
mov
addr16
jp
adc
jnp
aad
mov
dec
cwtl
imul
lods
fimuls
cmp
rcrl
add
shrl
outsl
divl
dec
insl
or
loope
xor
sahf
xchg
jl
and
in
inc
leave
andb
pop
sbbl
cltd
mov
or
adc
adc
or
cmpb
std
fcmove
test
and
sub
mov
add
es
mov
sbb
add
add
lahf
data16
dec
lock
jl
jp
in
xlat
sub
gs
rclb
add
stos
mov
and
fistps
cmp
call
bnd
mov
dec
adcl
sbb
jo
je
adc
or
aas
iret
cmp
enter
xchg
pop
insl
fidivl
mov
repnz
xchg
push
test
lret
mov
daa
and
sti
jp
lcall
aaa
lock
and
push
hlt
cmp
mov
pop
mov
jno
enter
and
or
mov
orb
mov
mov
mov
loop
imul
dec
pop
lret
dec
sbb
je
les
ja
lods
movsb
push
cmp
xchg
mov
adc
sub
mov
or
pusha
pop
sbb
pop
dec
jno
out
scas
pusha
sti
push
call
mull
lcall
pop
mov
mov
mov
repz
mov
cmp
inc
fidivl
insl
and
or
adc
push
pop
push
xchg
les
bound
ds
into
rep
stc
rclb
rorl
lea
je
push
into
cmpl
mov
popf
pop
inc
ret
xor
mov
movsb
mov
push
cmp
and
inc
cmpsl
out
outsb
cmpsb
das
popa
aaa
pop
push
iret
stc
gs
imul
mov
imul
outsl
ret
setnp
push
mov
mov
shr
pushl
mov
mov
icebp
fimuls
lock
lds
ficomps
inc
sub
dec
jmp
fildl
xor
inc
mov
fistps
mov
cmp
inc
mov
inc
rorb
test
cli
into
inc
out
cmp
push
and
adc
js
dec
enter
jbe
and
pop
int
in
cmp
add
dec
in
or
mov
sub
xor
in
dec
das
lods
adc
inc
shll
lret
mov
add
movsb
out
cld
xor
xchg
xor
inc
push
in
push
fs
pop
or
jge
popl
push
pop
loop
imul
or
sub
push
test
dec
mov
lock
cs
push
pop
lea
repz
das
int3
lahf
hlt
adcl
fdivr
addr16
mov
shl
dec
fwait
sub
mov
aas
fisubl
jo
shlb
das
aam
push
xchg
jns
add
ja
int
xchg
in
cmp
mov
pop
push
negl
stos
or
lock
aam
test
mov
stos
mov
or
pop
aaa
arpl
data16
daa
jno
fsubrl
jb
cmpsb
into
cmp
movsl
data16
xor
lock
lcall
pop
ret
loopne
xchg
popl
xchg
sar
fstl
jnp
xchg
adc
mov
xchg
mov
jne
dec
mov
orl
popa
sbb
xchg
testb
out
rolb
cwtl
in
in
jge
and
mov
jmp
xor
xor
imul
inc
add
out
push
pop
mov
push
pop
sahf
and
xor
push
stos
nop
rcrb
dec
rol
and
sahf
cmpsb
out
iret
push
and
xchg
mov
fs
loopne
xchg
cmp
into
mov
xchg
sub
fxch
out
mov
rcrb
fcomi
das
stos
mov
fs
in
jns
out
jo
popf
push
sbb
fnstsw
adc
adc
push
int
or
mov
sbb
out
repz
push
jl
sar
orb
adc
mov
mov
addr16
mov
test
dec
mov
js
sbb
stc
jmp
cmpsl
mov
mov
mov
and
push
jmp
adc
lret
push
mov
stos
inc
cmp
mov
ja
sbb
or
lods
pop
cs
adcb
cmpsb
or
movsl
lds
movsl
pop
cli
mov
cmp
mov
sbb
add
push
call
add
jae
add
jne
mov
mov
add
push
fld1
jno
pop
xlat
sbb
dec
jbe
xchg
fsubrs
cmp
es
mov
lds
dec
clc
nop
dec
lock
outsb
mov
addb
cmpb
xor
mov
sbb
imul
sub
mov
add
pop
popa
push
data16
sahf
outsl
ret
or
xchg
sub
je
dec
test
sahf
mov
arpl
mov
xorl
xchg
cmp
cmc
push
sub
cltd
or
outsb
or
fcomip
cwtl
mov
loopne
sbb
mov
fcmovne
pushf
test
inc
scas
cwtl
cltd
movsl
xchg
flds
call
mull
imul
in
pop
aad
and
push
addr16
jne
mov
lret
out
pop
sub
pop
repz
jno,pt
cmp
ret
cmpsl
rcll
pop
aas
jl
lods
inc
lret
push
cmc
stos
add
xchg
mov
pusha
fstps
xor
cmp
dec
popa
stc
cwtl
movsb
ljmp
test
pop
jae
je
mov
jae
testb
or
mov
in
cltd
or
and
jle
in
scas
cmpsl
inc
ss
ljmp
shl
push
insb
mov
jns
inc
jge
mov
test
repnz
inc
xchg
test
push
pop
mov
jecxz
jp
outsl
mov
stc
adc
or
mov
dec
mov
push
xor
pop
adc
add
add
sub
cltd
mov
or
jno
cmp
pop
lock
shrb
inc
sahf
jmp
shl
sub
mov
aaa
pop
pop
cmp
or
push
dec
fldenv
mov
ja
insb
mov
sbb
sar
inc
add
jge
jnp
dec
sbb
gs
and
jae
out
and
add
cmc
push
xlat
movsl
xchg
cwtl
les
cmp
pop
mov
fisubrl
pop
cld
mov
mov
mov
add
leave
push
sti
push
ficoml
rcrl
daa
movsb
cli
lds
ret
sbb
jno
int3
adc
incl
xor
xor
mov
cmp
jbe
or
movsl
insl
shll
clc
shl
out
aas
sar
enter
add
js
inc
out
push
add
addl
mov
mov
leave
xor
or
mov
and
ja
add
fcmovnu
dec
ror
adc
dec
jmp
or
stos
add
divl
sub
inc
add
faddp
and
mov
add
push
fsubp
or
lcall
fs
push
js
ja
dec
scas
add
orl
jecxz
lods
and
mov
push
cmpsl
inc
popf
out
adc
sbb
sub
cwtl
mov
popf
outsb
inc
insb
pop
mov
jg
inc
dec
mov
mov
mov
pusha
push
pop
jg
and
ds
cmp
mov
pop
cmp
int
cmc
push
test
pushf
sbb
lods
jl
xchg
mov
jbe
inc
addb
in
lahf
cmp
loopne
sub
sub
std
mov
inc
adc
xchg
xchg
sub
sbb
fcomp
adc
push
inc
mov
jnp
loop
pop
mov
ficomps
inc
popa
mov
push
add
sbb
add
xchg
repz
aam
andl
push
inc
sarl
xchg
movsb
inc
inc
xchg
punpckldq
gs
or
dec
lea
lods
pop
les
mov
out
xchg
and
xchg
xlat
in
sbb
aad
enter
lret
pusha
lods
mov
lcall
push
adcl
xchg
ret
jmp
sub
cs
test
rclb
pusha
cs
adc
mov
push
cmp
fwait
popf
es
sub
or
push
jg
xchg
call
mov
repnz
jle
movsl
shrl
add
push
inc
sbb
mov
mov
mov
jo
insb
sub
ret
and
xchg
push
add
and
jae
or
mov
cmp
out
les
enter
sbb
adc
lds
push
mov
clc
push
mov
cli
in
sbb
insb
jns
push
xchg
fdivl
sub
mov
xchg
push
mov
jg
adc
les
pop
or
divl
fisttpll
loope
aas
mov
lret
pop
and
sahf
cmp
xor
sbb
in
cmp
outsl
pop
mov
inc
adc
loop
das
sarl
movmskps
stc
in
fidivl
pusha
jge
icebp
or
and
rcll
adcb
xor
and
lcall
daa
xor
imul
mov
cltd
dec
pop
fistl
imul
dec
sbb
mov
movsb
inc
imul
dec
jg
mov
sbbl
fs
inc
xchg
jge
mov
mov
mov
pop
popa
imul
mov
dec
sbbb
andb
outsl
add
mov
pop
push
adc
push
cltd
lahf
popa
mov
pusha
les
bnd
imul
inc
jo
pop
es
cmp
rcrl
pusha
push
insl
push
cmp
test
pop
cmc
pop
sbb
test
dec
jl
inc
loop
xlat
push
sub
pop
push
lret
scas
xor
add
jle
ljmp
clc
mov
jecxz
pop
push
mov
dec
lods
mov
or
hlt
jp
mov
pop
shl
sti
fmul
into
dec
lock
cmc
ds
sbb
pushf
adc
or
fbstp
std
pop
inc
in
adc
cmpsl
lret
mov
jo
sbb
and
mov
lods
mov
int3
inc
jge
mov
stos
pop
fnstsw
addb
dec
insl
lods
xchg
lahf
mov
jecxz
fidivs
xchg
fadds
mov
std
fidivrl
jl
jl
rcll
lds
sbb
mov
imul
ret
movsl
jge
test
aad
andl
lock
xor
sbb
add
sbb
sets
cmpsl
push
mov
jno
push
jnp
std
movsl
and
test
shll
mov
adc
inc
cmp
pop
xchg
cli
movl
in
xchg
or
sub
jae
loop
mov
ja
andb
nop
xchg
pop
add
jo
movsb
cmp
jg
add
jmp
push
outsl
pusha
jbe
push
int3
sbb
mov
ftst
sbb
pop
xor
push
pop
and
xchg
int3
push
and
jns
movsl
inc
sub
push
call
stos
jle
fistps
push
js
or
out
inc
mov
popf
shll
and
sub
add
mov
cmp
jmp
sbb
push
sbb
outsb
add
clc
xor
rcrb
es
cmpsb
xchg
xor
add
lock
loope
mov
mov
jo
inc
xchg
or
mov
or
insb
jno
xor
jae
call
popa
das
les
mov
test
sti
ds
xchg
aad
sbbl
or
xchg
std
or
jne
shll
mov
loopne
adc
mov
mov
stos
mov
cltd
rcrb
lcall
cmpl
cmpsb
insb
push
hlt
xchg
das
jne
or
pop
jb
out
fsts
sub
testl
dec
xor
sub
out
ljmp
pop
data16
xchg
push
repz
pop
pop
adc
mov
mov
cli
or
xchg
aaa
loopne
pop
mov
iret
sbb
mov
cmpsl
fnsave
test
pop
out
inc
in
xchg
inc
sbb
js
out
shlb
sub
mov
sub
inc
cmp
leave
scas
repz
mov
or
ret
into
loope
aad
mov
aaa
pop
addr16
rcrb
mov
jge
repz
bswap
adc
popa
mov
daa
adc
sbb
pop
popf
sbb
loopne
inc
popa
loopne
push
xchg
jmp
add
bound
stc
push
cmp
mov
inc
adc
enter
jle
test
ja
adc
dec
xor
sbb
mov
sbb
inc
mov
mov
int3
fs
aaa
rcl
sar
and
jbe
jle
sub
sti
mov
lcall
scas
inc
dec
sti
jmp
mov
and
idivl
or
aam
add
pop
test
sarb
cmc
push
cmp
jp
xor
mov
mov
mov
xchg
mov
lahf
call
or
dec
popf
pop
mov
jmp
dec
psadbw
fwait
mov
cmp
loop
rol
inc
clc
out
fists
stos
sub
or
das
js
jne
out
jns
bound
pop
movsl
adc
incb
add
inc
je
and
pusha
push
je
mov
xchg
push
mov
push
lods
icebp
cmp
mov
insl
and
daa
lock
mov
aas
push
mov
fwait
mov
imul
push
mov
arpl
xchg
cmp
push
push
dec
cld
lea
outsb
xor
ficoml
scas
push
dec
lea
stc
mov
orb
pop
push
jno
cltd
push
sbb
adc
or
push
sti
push
fistps
jecxz
ljmp
stos
jno
jnp
mov
and
xor
shr
mov
xlat
movsb
pop
jb
scas
push
jmp
xchg
cmp
jne
mov
arpl
lea
or
xchg
cli
fidivs
std
inc
push
imul
stc
call
ljmp
into
nop
push
fcmovbe
imul
cmpsb
dec
and
popf
or
stc
notb
sbb
mov
adc
jnp
and
xor
movl
ficoml
stc
push
sub
ret
cmp
daa
dec
hlt
pop
imul
adc
or
lcall
in
loopne
pop
out
repz
jns
add
jne
inc
mov
xchg
mov
lcall
mov
subl
cmp
and
xor
data16
cmp
frstor
and
loop
loop
mov
dec
fimuls
ljmp
mov
dec
mov
inc
mov
jae
sbb
pop
push
xchg
popa
into
sub
mov
sbb
or
adc
insl
lods
cmp
sub
shll
adc
pop
dec
daa
bound
jecxz
sbb
or
jmp
sbb
in
clc
leave
inc
add
stc
fmuls
arpl
mov
in
fwait
iret
sbbb
sbbl
div
add
testl
iret
pushf
jle
faddp
xlat
fistpl
mov
in
cltd
dec
fistpl
aam
mov
cld
stos
mov
sub
shrl
mov
xchg
add
adc
mov
pop
add
push
and
mov
add
orl
cmp
sub
mov
push
cld
push
sub
mov
mov
fdivrs
mov
andb
mov
mov
fisubl
aas
test
cs
push
xor
pop
push
test
push
mov
xchg
mov
sub
test
lods
adc
jnp
repnz
mov
or
dec
enter
aam
into
jle
lods
nop
push
cmp
push
fldenv
cmp
add
mov
and
insl
xor
movb
cmpsl
orl
jp
jns
jmp
in
push
add
loop
push
mov
sbb
mov
mov
sarl
xchg
pop
loop
stos
cmp
in
stos
arpl
nop
nop
lea
inc
mov
cwtl
mov
xchg
fdivrl
mov
stc
mov
pop
fsubl
xchg
fwait
es
sub
pusha
add
mov
push
mov
mov
jbe
in
insb
mov
repnz
inc
mov
pop
or
inc
pusha
cwtl
dec
jne
dec
out
sub
int
push
pop
push
xlat
xchg
and
jb
and
enter
jae
cmp
movb
out
lea
testb
imul
outsl
outsl
ficoms
xchg
push
xor
pusha
add
add
test
sub
push
sbb
out
xlat
xlat
mov
stos
stos
dec
lcall
popf
addb
xchg
cli
adc
pop
pop
mov
inc
inc
mov
lock
in
lods
lods
inc
addr16
mov
mov
scas
inc
mov
movsb
movsb
push
xchg
jb
in
rol
ret
jne
std
std
loope
xchg
xchg
cmp
pop
ss
inc
aas
aas
jle
div
cmc
dec
int3
int3
sbbl
hlt
movsl
movsl
push
xor
in
or
icebp
stc
xchg
jno
loop
fcomp
stos
push
xor
bound
adc
add
push
mov
inc
pop
ret
ret
popf
sub
sbb
mov
add
lcall
adc
and
addb
es
int
daa
daa
dec
int
mov
lahf
jne
ljmp
sbbl
sbb
xor
sbb
ss
outsb
fsubr
pop
pop
mov
mov
push
movsb
dec
cmp
jbe
mov
mov
jge
sub
push
jecxz,pt
fnsave
das
pop
xchg
test
push
add
add
and
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
fnstcw
cmp
dec
dec
xchg
aam
dec
cwtl
call
iret
iret
test
sarb
in
stos
dec
push
sti
sti
in
lds
xchg
dec
dec
lcall
test
iret
inc
inc
mov
stc
stc
jmp
cmpl
mov
mov
test
dec
repz
push
mov
rolb
mov
xchg
aas
mov
cmp
jo
cmc
cmc
icebp
fistpll
ja
fcmovu
scas
arpl
and
adc
and
jmp
push
repz
insl
rcl
mov
adc
or
xor
in
in
ret
loope
pop
mov
int3
inc
inc
mov
pop
pop
cs
les
cmpb
inc
cmp
fs
mov
xchg
jae
out
pusha
pusha
rcrb
dec
sahf
jg
fsubl
jle
sub
nop
cmp
inc
inc
mov
out
out
sarl
adc
jns
fisubs
sbb
fcmovnu
lods
cmp
loopne
push
xor
fs
cmp
je
or
adc
dec
dec
xchg
or
push
or
and
dec
in
pop
mov
outsb
rcl
mov
cmpsb
bound
test
xchg
cmp
in
mov
repnz
out
inc
enter
aaa
aaa
outsb
mov
insl
fimull
aad
rorb
pushf
loopne
test
fdivr
push
push
lods
pop
hlt
hlt
repz
gs
jp
jmp
or
adc
mov
js
outsl
and
cs
and
sbb
icebp
cmpsb
cmpsb
push
mov
jae
mov
and
call
mov
and
pop
fisttpll
xchg
fdivrl
mov
nop
jo
loopne
ds
mov
jno
data16
fmuls
nop
add
div
notl
push
push
sbb
popa
popa
ret
xor
scas
sarb
xchg
pop
rol
daa
sbb
sahf
daa
cmp
loope
adc
clc
jmp
cwtl
cwtl
sub
adc
and
test
cmpsl
xchg
xchg
xor
push
push
cmp
xchg
leave
dec
into
into
xchg
push
push
stos
js
sub
movsl
mov
orb
sbb
mov
out
movb
mov
inc
inc
xorb
sub
push
lret
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
jl
clc
test
out
cltd
jnp
testb
imul
outsl
outsl
fidivs
xor
pusha
push
add
add
addr16
test
out
xlat
xlat
mov
stos
stos
dec
out
jbe
lcall
pop
popf
leave
leave
mov
jge
xchg
cli
out
adc
inc
inc
mov
lock
or
aam
addr16
std
scas
scas
inc
ljmp
push
divl
in
rol
pop
mov
jne
std
std
loope
xchg
xchg
cmp
push
ss
pop
aas
aas
jle
div
cmc
add
int3
orl
push
hlt
in
shll
icebp
stc
or
loop
fcomp
stos
jae
xor
adc
add
or
xchg
push
and
inc
gs
ret
popf
pop
sbb
xor
xchg
xchg
aaa
mov
lcall
or
adc
addb
cmp
daa
daa
dec
imul
or
sbb
sub
je
sbb
sbb
ss
pop
pop
mov
mov
push
movsb
idivb
cmp
mov
mov
jge
sub
push
jnp
jecxz
ds
das
pop
jno
test
xchg
push
push
cmpsb
cmc
rcl
mov
add
in
shrl
inc
pusha
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
lea
mov
jb
dec
dec
xchg
fimuls
aam
pop
mov
iret
iret
test
sarb
sub
sti
in
push
inc
inc
xchg
dec
dec
lcall
test
xchg
inc
inc
mov
stc
stc
jmp
push
jg
incb
cmp
js
lahf
lahf
and
jecxz
push
mov
incb
add
popl
lods
popf
popf
and
cmc
icebp
add
mov
ja
fcmovu
scas
jne
and
adc
and
jmp
sbb
repz
push
rcl
mov
dec
or
sbb
adc
xor
pop
pop
mov
mov
pop
pop
cs
les
bnd
cld
cmpb
enter
mov
sub
out
pusha
pusha
shlb
dec
sahf
rcr
fsubl
data16
push
jle
nop
cmp
inc
inc
mov
out
out
sub
adc
cmp
fisubs
loop
or
sbb
loopne
fstpt
xor
fs
cmp
je
or
adc
dec
dec
xchg
fildl
push
or
and
dec
insb
pop
pop
mov
pop
rcl
mov
out
bound
cmpsb
xchg
xchg
cmp
in
shll
jns
repnz
out
xor
enter
aaa
outsb
pop
insl
insl
fidivl
aad
mov
dec
dec
pushf
shrb
insb
fdivs
hlt
repz
ljmp
scas
jp
hlt
mov
or
sbb
js
mov
cs
jb
sbb
and
cmpsb
push
icebp
mov
jae
mov
push
call
frstor
pushf
pop
pop
and
xchg
fnstsw
mov
test
loopne
ds
mov
jno
data16
stos
dec
dec
nop
fadds
add
add
push
push
sbb
popa
popa
ret
xor
scas
stc
mov
xchg
xchg
rol
pop
sbb
sahf
daa
mov
clc
clc
jmp
cwtl
cwtl
sub
imul
jo
mov
mov
sub
and
jmp
xchg
push
stos
ljmp
sub
movsl
jp
mov
mov
mov
orb
gs
out
xor
test
push
inc
add
cltd
sub
nopl
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
arpl
jl
out
cltd
ja
testb
imul
imul
outsl
lds
push
xor
add
add
test
sub
out
xlat
mov
xlat
stos
dec
out
jbe
lcall
pop
popf
or
inc
leave
jge
xchg
out
adc
pop
inc
mov
inc
lock
or
lods
inc
in
lods
aam
addr16
pop
std
mov
pushf
and
movsb
jb
xchg
jb
fwait
pop
shlb
sbb
xchg
cmp
push
ss
pop
ss
jle
aas
div
add
int3
orl
push
hlt
movsl
in
xor
icebp
stc
or
jno
xchg
jno
stos
jae
xor
xor
or
xchg
push
and
and
popf
pop
ret
sbb
sub
xchg
aaa
mov
add
pop
push
or
adc
adc
fistpll
jmp
dec
imul
jne
lahf
jne
adc
or
pop
je
sbb
sbb
ss
outsb
pop
mov
pop
mov
movsb
notb
jbe
cmp
mov
mov
into
mov
push
jnp
jecxz
jecxz,pt
pop
jno
test
xchg
test
cmc
push
sarl
add
in
shrl
jecxz
cld
mov
enter
in
pop
push
mov
lret
mov
jb
cmp
fimuls
cwtl
aam
pop
mov
pop
iret
test
sarb
sub
stos
dec
in
sti
in
push
sti
inc
xchg
inc
dec
lcall
test
xchg
test
iret
inc
stc
jmp
push
add
cmpl
js
cmp
and
jecxz
push
mov
mov
popl
lods
xchg
popf
and
cmc
icebp
add
mov
ja
mov
scas
jne
and
and
and
adc
in
push
std
push
repz
dec
int
sbb
adc
xor
in
pop
mov
mov
inc
pop
cmp
les
repnz
jle
cmpb
inc
cmp
pop
mov
sub
jae
xchg
jae
shlb
dec
sahf
rorl
mov
data16
push
jle
nop
cmp
mov
lret
sub
mov
sub
fisubs
loop
or
sbb
fneni(8087
fstpt
loopne
fs
xor
je
cmp
adc
or
fisttpl
or
push
and
insb
and
mov
pop
ret
outsb
shrl
cmpsb
bound
xor
jns
mov
aad
out
mov
aaa
outsb
pop
aaa
insl
fidivl
aad
fs
pushf
rorb
dec
loopne
insb
fdivs
hlt
repz
hlt
ljmp
gs
mov
inc
jmp
or
lock
dec
outsl
and
sbb
and
cmpsb
push
icebp
cmpsb
mov
mov
xchg
push
call
mov
pushf
je
and
dec
xchg
fisttpll
popa
fdivrl
mov
test
jl,pt
ds
les
dec
nop
fmuls
push
add
testb
adc
popa
ret
xor
scas
stc
push
mov
pop
xchg
xchg
cltd
pop
rcrl
mov
loope
jmp
clc
cwtl
sub
adc
mov
xor
fwait
push
cmp
push
xchg
and
into
xchg
push
stos
call
push
js
fbld
mov
or
or
out
xor
inc
test
inc
push
add
cltd
sub
sub
mov
lret
mov
test
push
mov
sub
push
movsl
arpl
test
cltd
ja
testb
repnz
mov
outsl
outsl
xchg
push
vpunpcklbw
xor
add
add
test
sub
out
mov
xlat
xlat
dec
out
stos
in
lcall
pop
popf
addb
xchg
out
adc
pop
pop
mov
inc
inc
sti
or
lock
in
lods
lods
mov
aam
pop
std
mov
scas
and
movsb
movsb
in
jb
fwait
pop
rol
ret
loope
std
std
cmp
push
es
pop
ss
aas
aas
cmc
add
testl
hlt
movsl
movsl
shll
icebp
loop
jno
stos
jae
fsubs
xor
sub
adc
add
push
mov
popf
pop
ret
ret
xor
sbb
aaa
mov
add
lcall
adc
sbb
loop
int
jmp
dec
imul
mov
lahf
jne
adc
or
sbb
je
sub
sbb
ss
outsb
outsb
mov
pop
pop
pop
sti
mov
push
jbe
cmp
mov
jge
mov
push
jnp
sub
jecxz,pt
pop
jno
das
adc
push
push
mov
add
add
sub
in
inc
pusha
and
jecxz
cld
cld
jns
mov
mov
pop
pop
aam
push
lea
lret
fnstcw
dec
cmp
xchg
fimuls
cwtl
aam
dec
mov
pop
pop
test
iret
mov
sub
out
dec
in
stos
in
push
sti
sti
xchg
inc
inc
lcall
xor
xchg
test
jmp
push
add
incb
push
push
js
cmp
and
jecxz
test
repz
push
pop
mov
inc
add
lods
xchg
xchg
and
cmp
add
cmc
arpl
mov
mov
jne
fiaddl
and
and
adc
in
std
push
repz
dec
int
sbb
or
xor
in
in
mov
mov
inc
inc
cmp
pop
xchg
push
les
cmpsl
cmpsl
cld
cmpb
inc
cmp
fs
sub
sbb
xchg
jae
shlb
sbbl
data16
push
jle
sub
stos
nop
nop
or
inc
inc
sub
out
imul
mov
cmpsl
jns
fidivrs
or
lods
jbe
fcmovnu
cmp
loopne
push
xor
je
cmp
adc
or
xchg
fisttpl
or
push
push
dec
insb
and
mov
pop
ret
outsb
rcl
inc
out
lods
lods
les
xchg
xchg
xor
in
mov
aad
out
mov
enter
aaa
fidivl
lea
pushf
rorb
dec
loopne
test
lods
cli
push
push
repz
hlt
hlt
iret
and
gs
mov
inc
jmp
or
outsl
aad
mov
dec
outsl
and
cmp
sbb
icebp
cmpsb
cmpsb
jae
mov
xchg
push
mov
and
call
call
and
pop
xchg
fisttpll
popa
fdivrl
mov
test
jo
inc
ds
mov
int3
stos
data16
fmuls
push
add
div
sbb
push
push
ret
popa
push
xor
push
imul
xchg
cmp
sbb
sahf
fnstcw
loope
jmp
clc
clc
sub
adc
sarb
pop
mov
xchg
sub
and
push
adc
and
jmp
stos
call
push
js
sub
mov
orb
fidivrl
out
movb
mov
inc
inc
sub
sub
lret
mov
test
push
push
insl
mov
push
arpl
arpl
jl
ja
ja
jnp
jnp
repnz
outsl
outsl
outsl
outsl
lds
xor
xor
add
add
addr16
sub
xlat
xlat
xlat
xlat
stos
stos
stos
stos
jbe
jbe
lret
lret
addb
jge
jge
cli
cli
cli
pop
pop
pop
pop
inc
inc
inc
inc
lock
lods
lods
lods
aam
aam
mov
scas
scas
scas
pushf
pushf
pushf
pushf
movsb
movsb
movsb
movsb
jb
jb
rol
shlb
std
std
xchg
xchg
xchg
xchg
es
aas
aas
aas
div
div
int3
int3
int3
int3
xor
xor
movsl
movsl
movsl
movsl
in
in
icebp
icebp
icebp
icebp
jno
jno
fcomp
fcomp
xor
xor
adc
add
add
mov
and
ret
ret
ret
sbb
sbb
xchg
xchg
xchg
xchg
add
lcall
adc
adc
addb
loop
jmp
jmp
daa
daa
daa
mov
mov
jne
jne
or
or
addl
sub
sbb
sbb
sbb
sbb
outsb
outsb
pop
pop
pop
pop
mov
push
push
push
cmp
cmp
mov
mov
sub
sub
jecxz
jecxz
das
das
das
das
test
push
rcl
rcl
add
add
in
in
in
in
and
and
cld
cld
cld
cld
mov
mov
pop
pop
pop
pop
push
push
lret
lret
lret
lret
mov
cmp
cmp
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
iret
iret
iret
iret
rcl
rcl
out
out
out
out
stos
stos
stos
stos
sti
sti
sti
sti
inc
inc
inc
inc
dec
dec
dec
dec
xor
xor
test
inc
inc
stc
stc
stc
stc
add
add
jg
jg
push
push
push
push
cmp
cmp
lahf
lahf
lahf
lahf
test
test
push
push
push
push
mov
inc
inc
inc
xchg
xchg
xchg
xchg
popf
popf
popf
popf
cmp
cmp
cmc
cmc
cmc
cmc
mov
mov
mov
fcmovu
fisubl
and
and
adc
adc
push
repz
rcl
int
int
or
or
adc
adc
in
in
in
in
pop
pop
pop
pop
xchg
xchg
xchg
xchg
inc
inc
inc
inc
pop
pop
pop
pop
les
jle
jle
cmp
fs
pop
pop
pop
sbb
sbb
jae
jae
pusha
pusha
pusha
pusha
addl
and
and
sub
sub
nop
nop
nop
nop
mov
inc
inc
out
out
out
out
mov
adc
adc
ficomps
pop
pop
or
or
fcmovnu
fcmovnu
loopne
loopne
xor
xor
cmp
cmp
or
or
dec
dec
dec
dec
push
push
push
push
and
and
pop
pop
pop
pop
ret
ret
rcl
lods
lods
lods
lods
bound
bound
xchg
xchg
xchg
in
in
jns
jns
out
out
enter
aaa
aaa
aaa
aaa
insl
insl
insl
insl
lea
aad
dec
dec
dec
dec
test
insb
insb
insb
push
push
push
push
hlt
hlt
hlt
hlt
ljmp
gs
jp
scas
scas
scas
scas
or
or
mov
js
js
and
cs
sbb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
mov
call
fstp
fnsave
je
pop
pop
pop
dec
dec
dec
dec
mov
mov
mov
jo
ds
mov
data16
dec
dec
dec
add
add
div
div
push
push
push
push
popa
popa
popa
popa
xor
push
push
push
mov
xchg
rcrl
sahf
sahf
loope
loope
clc
clc
clc
clc
cwtl
cwtl
cwtl
cwtl
adc
adc
imul
xchg
xchg
xchg
fwait
fwait
fwait
fwait
push
push
push
push
xchg
jmp
into
push
push
push
push
sub
sub
mov
mov
or
mov
out
inc
inc
inc
inc
push
inc
inc
inc
cltd
cltd
cltd
cltd
sub
pfcmpeq
mov
mov
push
push
push
mov
push
push
push
push
cmpsl
hlt
push
push
gs
jle
movsb
pop
sbb
imul
stos
pop
cli
lods
xchg
add
dec
push
cli
xor
imulb
lods
xchg
jbe
mov
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
ret
adc
dec
andl
pop
popl
xchg
pushf
xchg
adc
ficompl
xchg
sub
and
imul
mov
ret
jns
hlt
imul
cltd
fnsave
daa
mov
loope
pop
lods
mov
data16
and
mov
into
jge
dec
fbld
xor
in
xor
inc
jg
loopne
fs
scas
imul
sub
stc
pop
push
inc
popl
clc
jnp
and
jae
loop
dec
jb
pop
jecxz
stos
push
popw
sub
mov
ret
lcall
shl
xchg
xor
push
add
in
sub
mov
repnz
repz
hlt
fisubl
mov
xor
mov
cmpsb
les
push
repz
jne
mulb
out
pusha
inc
push
lahf
jno
push
adc
stc
mov
ds
add
out
mov
push
xchg
add
aam
add
adc
cwtl
sbb
inc
inc
mov
fldenv
inc
call
pop
cmp
out
out
enter
jl
jmp
push
test
add
add
addl
xor
pop
insb
sti
decl
std
push
cmp
cmp
or
cmpsb
pop
push
cmp
ss
or
movntq
rclb
fwait
sbb
rolb
dec
ja
push
sbb
sbb
mov
mov
cmp
pop
sbb
or
mov
mov
test
icebp
push
dec
pop
jne
mov
pusha
jg
lahf
es
mov
cmp
xor
sti
pop
jbe
inc
mov
and
push
icebp
in
lret
xlat
adc
xchg
adc
adc
test
dec
test
cmp
stc
scas
insl
mov
sahf
sbb
in
push
xchg
insb
push
mov
cltd
mov
xchg
adc
fs
test
aas
lock
out
nop
xor
dec
dec
xchg
sarl
fsin
mov
aam
iret
xor
movsl
mov
aas
in
cmp
int3
pop
push
inc
jle
ret
imul
mov
cmp
cmc
scas
ret
cmpb
shrb
sub
and
enter
adc
pushf
call
or
int
sbb
add
dec
andl
out
out
stos
or
mov
out
fstps
outsl
dec
aam
lahf
ljmp
movsb
xor
and
sub
xchg
movsl
mov
mov
je
lret
mov
nop
loopne
fsubs
icebp
neg
in
inc
push
push
int
das
notb
jbe
mov
inc
push
dec
stos
int3
filds
in
mov
sahf
sbb
sub
jg
gs
add
pop
popf
pop
xor
xchg
cs
or
pop
sbb
fistl
adc
insl
mov
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
aas
jae
push
jns
adc
mov
int
push
pop
stos
std
pop
adc
cmp
js
repz
lret
push
cmp
mov
push
or
loop
mov
sub
or
cmp
mov
or
push
fs
test
jnp
mov
aad
pop
insb
dec
inc
push
mov
push
gs
jle
movsb
pop
sbb
pop
daa
cmp
inc
popf
pop
icebp
pop
cli
lods
stos
add
dec
xchg
cli
xor
push
insl
jbe
divb
mov
xlat
in
cld
lret
sub
xlat
inc
xor
mov
pop
mov
dec
sbb
inc
cwtl
sar
loope
das
ret
add
dec
adcl
stc
shrl
pop
popl
out
xchg
adc
jmp
push
xchg
fiaddl
je
shrl
dec
sub
leave
mov
jne
jns
hlt
js
pop
cltd
imul
fisttpll
mov
pop
lods
and
data16
jge
dec
fbld
xor
in
xor
pusha
jg
bound
fs
scas
imul
sub
stc
xchg
push
inc
sbb
xchg
jnp
mov
jae
and
dec
jb
pop
jecxz
stos
push
data16
jmp
pop
ret
add
xchg
xchg
xor
movsl
mov
add
sbb
mov
mov
cmpsl
xchg
repnz
repz
dec
mov
mov
xor
pop
cmpsb
les
push
repz
xor
mulb
out
pusha
inc
stos
lahf
jno
push
adc
push
mov
ds
push
fstl
scas
mov
push
xchg
mov
les
aam
add
adc
cwtl
sbb
mov
mov
sahf
fldenv
inc
call
pop
mov
out
out
enter
jl
inc
cmovb
test
leave
add
add
xchg
xor
adc
lods
jb
insb
dec
decl
std
sti
cmp
cmp
daa
or
push
shrl
ss
or
mov
push
xchg
setbe
mov
xchg
fwait
sbb
and
popa
mov
sbb
sbb
mov
mov
cmp
pop
sbb
sbb
mov
lods
test
sub
enter
test
jne
dec
fstpl
mov
lahf
cmc
jb
mov
jle
pop
xor
inc
mov
and
fdivr
in
mov
icebp
in
arpl
xor
lret
inc
adc
xchg
adc
movb
mov
scas
adc
sahf
sbb
repz
xchg
rclb
mov
insb
mov
xchg
adc
fs
test
aas
lock
fcoms
dec
xchg
sarl
fld
mov
aam
ss
movsl
sub
lods
aas
movsb
popf
cmp
xchg
js
or
inc
jle
bound
test
fcoms
pop
scas
ret
xor
pop
lahf
mov
sub
and
enter
adc
mov
es
sbb
hlt
mov
in
add
xchg
out
out
stos
jle
mov
out
out
out
fnstenv
outsl
dec
into
or
sub
mov
xor
xchg
movsl
xor
xor
aaa
lret
cmpsb
rclb
xor
inc
notl
jg
notb
jbe
mov
inc
dec
dec
stos
int3
push
add
in
mov
sahf
jecxz
push
sbb
sub
mov
ljmp
pop
je
cli
jae
or
cs
fistl
xor
insl
adc
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
pop
jae
push
aas
into
adc
jns
jae
int
push
ljmp
fists
inc
js
repz
lret
push
cmp
mov
push
jb
loop
or
cmp
mov
test
jno
or
fsubp
mov
pushf
rcll
test
jnp
mov
aad
pop
insb
dec
je
mov
push
cmpsl
inc
jle
gs
sbb
movsb
daa
cmp
imul
stos
pop
jecxz
xchg
add
and
jbe
imulb
mov
dec
in
cld
xlat
sub
xlat
lret
xor
mov
mov
mov
inc
cwtl
push
pop
loope
das
ret
add
adcl
xchg
shrl
stc
popl
out
xchg
adc
jmp
push
xchg
ficompl
aam
xorl
loopne
sub
mov
jne
mov
cltd
imul
daa
fnsave
mov
pop
lods
and
data16
into
jge
cmp
arpl
dec
sbb
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
or
xchg
sub
pop
push
ficoms
clc
jae
and
dec
jb
add
jecxz
push
data16
mov
add
lds
movsl
or
xor
xchg
add
or
sub
cmpsl
xchg
mov
repz
hlt
add
rcrl
bound
xor
push
repz
xor
mulb
in
pusha
inc
stos
out
jno
push
lahf
outsb
mov
stc
mov
xchg
cmp
add
push
xchg
mov
les
pop
push
add
aam
pusha
call
mov
mov
inc
fldenv
sahf
call
pop
mov
enter
jl
inc
or
jmp
push
add
add
orb
xchg
xor
adc
lods
jo
insb
dec
jb
std
sti
incl
cmp
daa
cmp
or
push
rcll
cmp
or
addr16
xchg
movntq
out
mov
xchg
fwait
sbb
mov
dec
adc
sbb
shl
and
loopne
adc
or
mov
mov
test
jne
dec
pop
cltd
out
mov
pusha
add
lahf
es
mov
cmp
pop
xor
inc
mov
and
fadd
in
mov
cld
in
arpl
xor
lret
inc
adc
movb
mov
scas
adc
sub
insl
mov
mov
repz
ja
jecxz
sub
test
cli
dec
jmp
test
mov
mov
fsubrs
and
nop
dec
xchg
dec
cmp
rcl
mov
mov
cmc
cmpsb
iret
cmpl
mov
sub
popf
js
or
int3
jle
bound
test
fcoms
pop
test
lahf
mov
xchg
aad
test
adc
cmpsl
jge
call
jnp
es
js
outsb
hlt
sbb
subl
ljmp
or
adc
mov
into
ss
ljmp
movsb
xor
and
xor
aaa
mov
nop
loopne
shlb
icebp
dec
cwtl
in
inc
neg
int
push
push
xchg
pop
das
testb
out
inc
dec
mov
int3
push
dec
xchg
in
add
sahf
jecxz
push
sbb
gs
jg
pop
popf
add
mov
pop
xor
or
cs
addr16
sbb
adc
xor
insl
adc
lcall
clc
pop
mov
jmp
cmp
into
out
daa
popa
mov
leave
sbb
in
in
jp
mov
pushf
pop
fcomip
push
aas
jae
sbb
jae
aaa
notl
int
pop
pop
stos
cmp
js
fldt
mov
sub
mov
push
jb
loop
or
cmp
mov
incl
test
jno
or
fidivs
push
fs
ror
popa
test
aad
mov
dec
je
mov
push
cmpsl
hlt
jle
gs
sbb
movsb
pop
cmp
imul
stos
pop
cli
dec
xchg
add
and
xor
xchg
jbe
cmc
and
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
adcl
xchg
inc
imul
roll
out
adc
jmp
insl
xchg
ficompl
aam
cmpl
sub
mov
jne
mov
hlt
js
mov
fnsave
mov
pop
lods
mov
data16
and
cmp
arpl
dec
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
cmp
pop
push
inc
xchg
xchg
mov
jnp
and
jae
loop
dec
jecxz
pop
data16
jmp
add
mov
lcall
xor
xchg
and
push
in
pop
adcb
sub
cmpsl
xchg
mov
repz
dec
mov
hlt
fiaddl
aad
add
les
push
mov
xor
mov
in
addl
pusha
pop
push
lahf
jno
push
adc
stc
mov
xchg
cmp
add
out
mov
push
jno
pop
les
aam
pusha
call
cwtl
xchg
jmp
inc
addr16
fnstenv
mov
sbb
out
enter
jl
jmp
push
test
add
add
addl
push
lods
jo
insb
dec
jb
std
sti
decl
orps
test
daa
cmp
push
rcll
cmp
ss
or
push
mov
xchg
out
sbb
mov
dec
ja
push
sbb
loop
mov
mov
adc
or
mov
enter
test
icebp
scas
dec
pop
jne
mov
pusha
jg
lahf
add
jb
lds
pop
xor
sti
mov
inc
lret
fadd
and
arpl
in
lret
inc
adc
xchg
test
adc
test
dec
sar
cmp
stc
insl
mov
sahf
fdiv
xor
ja
jecxz
sub
test
cli
dec
xchg
inc
and
les
push
fsubrs
xchg
dec
dec
fld
sarl
mov
mov
aam
iret
xor
fisubl
mov
sub
popf
cmp
xchg
js
fwait
int3
pop
push
bound
test
lea
pop
idivl
xor
ret
lahf
mov
xchg
shrb
sub
and
adc
arpl
or
outsb
hlt
sbb
add
dec
out
outsb
xchg
stos
jle
jmp
or
mov
mov
into
outsl
ljmp
mov
scas
mov
sub
and
xor
je
mov
and
rclb
icebp
dec
cwtl
add
neg
in
jg
push
int
das
notb
inc
dec
mov
int3
push
dec
stos
in
add
sahf
jecxz
rorl
push
mov
push
gs
add
pop
add
mov
jae
xchg
cs
or
push
rcr
jmp
adc
lcall
mov
jmp
cmp
into
out
daa
test
loope
in
jp
mov
pushf
pop
push
aas
jae
sbb
adc
mov
int
pop
pop
stos
std
fists
cmp
lret
scas
mov
sub
and
pop
inc
mov
mov
mov
incl
or
or
mov
fcomps
push
jnp
test
aad
mov
dec
je
insb
rolb
mov
or
or
push
push
aad
aad
xor
xor
ss
movsl
movsl
movsl
cmp
cmp
mov
inc
inc
inc
mov
sahf
sahf
sahf
addl
xlat
xlat
sti
sti
sti
sti
jl
jl
jecxz
jecxz
cmp
cmp
addb
fwait
das
das
das
das
incl
xor
xor
mov
inc
inc
inc
inc
inc
jmp
lret
lret
lret
push
push
push
push
jnp
jnp
xchg
xchg
xchg
xchg
xor
xor
cmpsb
cmpsb
cmpsb
cmpsb
ret
ret
and
cmp
out
out
out
dec
dec
dec
dec
xchg
xchg
xchg
xchg
or
or
inc
inc
inc
inc
cli
cli
cli
cli
ret
ret
ret
ret
dec
dec
dec
dec
or
or
cs
data16
sub
and
and
mov
mov
jbe
jbe
pop
pop
pop
pop
mov
dec
dec
dec
insl
insl
insl
insl
mov
rcl
and
jb
jb
clc
clc
clc
div
div
fs
push
cwtl
push
push
push
push
aam
aam
movsb
movsb
movsb
movsb
pop
pop
pop
pop
int3
int3
int3
int3
pop
pop
pop
pop
gs
mov
xchg
xchg
xchg
xchg
insb
insb
insb
insb
jo
jo
dec
dec
dec
dec
push
push
push
push
std
std
std
std
in
in
in
in
mov
fcmovu
ficompl
pop
pop
adc
inc
inc
inc
push
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
lea
popf
popf
test
nop
fcomp
fcomp
stos
stos
stos
stos
add
add
mov
mov
or
or
div
div
in
in
pop
pop
pop
pop
add
mov
mov
inc
inc
inc
inc
push
push
push
push
rcl
rcl
sub
sub
push
push
push
push
lret
aas
aas
lar
add
rol
shrl
mov
add
add
add
adc
adc
imul
cmp
cmp
adc
adc
inc
inc
dec
dec
dec
dec
addr16
ljmp
xchg
repnz
iret
iret
iret
into
into
into
into
lock
mov
out
out
jae
jae
xchg
xchg
xchg
xchg
lods
lods
lods
lods
je
je
and
and
out
out
lods
lods
lods
lods
xor
test
loop
stc
stc
stc
aaa
aaa
aaa
aaa
call
sbb
sbb
jne
jne
fildll
outsb
outsb
inc
inc
inc
inc
icebp
icebp
icebp
icebp
sbb
sbb
jno
jno
sbb
sub
sub
mov
outsl
outsl
mov
mov
bound
bound
push
push
push
stos
stos
stos
stos
sbb
sbb
mov
sbb
sbb
cld
cld
cld
push
push
push
push
ds
dec
dec
dec
mov
rcl
rcl
jns
jns
and
and
lcall
fcmovnb
rol
js
js
int
int
pop
pop
pop
pop
hlt
hlt
hlt
hlt
pop
pop
pop
pop
fstp
fstp
test
test
xor
xor
mov
pop
pop
mov
xor
mov
mov
adc
adc
adc
adc
pop
pop
pop
pop
daa
daa
daa
daa
addb
in
pop
pop
pop
pop
pusha
pusha
pusha
pusha
push
push
push
push
jg
jg
test
sbb
sbb
dec
dec
dec
or
sub
in
jp
jp
lahf
lahf
lahf
lahf
xchg
xchg
xchg
xchg
leave
leave
leave
leave
pushf
pushf
pushf
pushf
out
out
out
out
mov
loopne
loopne
cmp
cmp
dec
dec
scas
scas
scas
scas
sub
sub
cmc
cmc
cmc
cmc
mov
mov
enter
jmp
jmp
mov
cmp
cmp
addl
cltd
cltd
cltd
cltd
popa
popa
popa
popa
pop
pop
pop
pop
sub
sub
add
add
jle
jle
mov
ja
ja
es
loope
imul
adc
arpl
push
push
push
push
and
and
or
or
jge
jge
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
aas
aaa
das
daa
pop
pop
sysret
ds
push
push
push
cmp
adc
or
add
add
or
or
movups
adc
push
adc
sbb
add
adc
add
or
pop
sbb
and
xor
daa
cmp
xor
sbb
add
add
and
add
adc
add
or
add
add
add
add
add
add
add
loopne
js
shlb
mov
pop
jp
mov
push
jp
loopne
jp
push
dec
jns
lock
jp
lock
sub
dec
jns
lock
jns
mov
js
xorb
pusha
jno
sub
jns
push
inc
jns
push
inc
jns
and
sub
je
sub
js
adc
js
push
or
and
js
xor
sub
inc
jns
jo
js
adc
sub
or
pusha
vmread
loopne
jp
adc
sub
inc
jns
pusha
inc
jns
rolb
jo
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
jb
sub
jb
sub
mov
loopne
jp
mov
push
jp
loopne
jp
out
sub
push
jp
add
sub
out
sub
push
jp
mov
js
xorb
pusha
jno
sub
jns
push
inc
jns
loopne
js
xorb
add
inc
je
sub
or
push
or
and
js
rorb
sub
or
xor
js
loopne
js
pusha
vmread
loopne
jp
mov
push
jp
out
sub
out
sub
js
mov
ja
sub
ja
sub
ja
sub
jne
sub
js
loopne
jp
mov
jp
loopne
jp
adcb
orb
sub
jg
add
and
or
add
sbb
sldt
add
and
or
or
xchg
testl
adc
add
xor
xor
or
xchg
testl
adc
add
xor
xor
push
add
add
sldt
add
sub
or
add
fiaddl
add
adc
add
xor
xor
dec
add
add
add
adc
add
xor
or
dec
add
add
add
adc
add
xor
or
dec
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
adc
and
adc
and
add
add
add
and
adc
and
add
add
add
add
adc
add
add
and
adc
and
adc
add
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
add
add
add
add
add
add
add
and
adc
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
addb
and
add
add
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
inc
add
add
add
or
add
inc
add
add
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
or
add
inc
add
or
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
and
add
add
add
inc
inc
and
add
adc
add
adc
and
add
add
and
inc
inc
add
add
adc
add
adc
inc
add
inc
add
add
add
adc
add
add
add
add
adc
and
inc
add
add
add
inc
add
adc
add
adc
inc
and
add
add
add
adc
add
inc
inc
and
inc
add
add
add
inc
inc
and
add
and
inc
add
adc
add
adc
inc
and
inc
inc
add
inc
inc
and
add
adc
add
add
and
add
add
and
add
and
inc
add
adc
add
adc
and
inc
inc
add
add
adc
add
inc
inc
and
add
add
add
adc
add
add
add
add
adc
add
inc
add
adc
inc
add
inc
add
add
add
add
and
add
and
add
adc
and
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
inc
adc
add
add
inc
adc
adc
add
add
add
inc
add
add
add
inc
adc
add
add
add
add
inc
adc
add
add
inc
add
add
add
inc
add
adc
adc
adc
add
add
add
inc
add
inc
add
add
add
inc
adc
add
add
inc
add
adc
adc
adc
add
add
add
inc
adc
add
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
adc
add
add
add
inc
add
inc
add
adc
add
add
add
inc
adc
adc
add
add
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
and
add
and
add
xor
add
sub
add
add
add
adc
add
or
add
and
add
xor
add
sub
add
add
add
popa
sub
ja
bound
jb
bound
popa
sub
add
add
jb
add
popa
bound
add
add
add
add
mov
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
movsl
jns
add
add
xor
jle
incl
add
add
add
add
jns
add
add
and
add
xor
jle
sub
add
jo
jle
add
add
add
add
push
aas
jle
add
add
add
add
adc
add
or
jle
add
add
add
add
incl
add
add
add
add
movsl
jns
call
movsl
jns
add
add
fsubs
add
or
add
add
add
or
jle
test
jns
add
add
enter
add
add
add
add
incl
add
add
add
add
movsl
jns
adc
add
add
add
push
add
add
add
add
add
enter
js
jns
add
add
jo
jle
incl
add
add
add
add
jle
add
add
add
add
incl
add
add
add
add
movsb
jns
and
add
add
add
movsb
jns
push
aas
jle
loopne
jns
mov
add
add
add
add
movsb
jns
mov
jle
shlb
add
add
add
add
add
incl
add
add
add
add
jle
add
add
add
add
incl
add
add
add
add
movsb
jns
add
add
push
add
add
jle
js
jns
add
add
or
jle
add
add
add
add
adc
add
sarb
sub
add
add
add
add
incl
add
add
add
add
mov
jns
adc
add
add
add
adc
add
or
add
add
add
sarb
sub
mov
add
cmpb
sub
add
add
add
add
incl
add
add
add
add
mov
jns
adc
add
add
add
mov
add
add
add
add
add
cmpb
sub
add
add
jle,pt
add
add
add
add
incl
add
add
add
add
movsb
jns
add
add
jo
jns
or
jle
inc
mov
add
inc
cmp
add
add
add
incl
add
add
add
add
mov
jns
add
add
add
add
inc
cmp
jns
add
add
add
add
add
add
incl
add
add
add
add
mov
add
add
add
sarb
add
add
jns
add
add
sarb
add
add
add
incl
add
add
add
add
add
add
add
add
incl
add
add
add
add
mov
jns
add
add
jo
jns
mov
mov
add
cmpb
sub
add
add
add
add
mov
add
sarb
sub
add
add
add
add
add
add
incl
add
add
add
add
mov
jns
andb
add
add
add
mov
add
cmpb
sub
add
add
jle
add
add
add
add
incl
add
add
add
add
jle
add
add
add
add
incl
add
add
add
add
mov
jns
add
add
pusha
mov
add
dec
cmp
sub
jns
add
add
mov
jns
andb
add
add
add
jns
push
mov
jns
add
add
or
jns
jo
jle
sbb
jns
add
add
cld
mov
add
xor
sub
mov
add
xor
sub
add
add
add
add
incl
add
add
add
add
cmp
sub
add
add
add
add
incl
add
add
add
add
mov
add
add
add
pusha
mov
add
adc
sub
jns
mov
add
add
incl
add
add
add
dec
in
jp
nop
jp
sub
add
add
incl
add
add
add
add
pop
jp
js
jle
add
add
incl
add
add
add
add
add
add
add
add
mov
jns
pop
mov
add
lock
sub
add
add
mov
xchg
sbb
add
add
add
add
incl
add
add
add
add
push
add
add
jmp
jns
and
add
push
mov
add
incl
jns
and
add
cmp
add
jmp
arpl
add
add
sub
sub
add
add
call
add
add
incl
arpl
add
add
or
sub
add
add
fdivrs
add
jmp
arpl
add
add
call
add
add
mov
add
inc
arpl
add
add
enter
and
add
js
jns
jmp
add
add
add
add
sub
add
incl
add
add
adc
add
jmp
jns
add
add
sbb
sub
add
add
incl
add
add
add
add
add
add
add
add
mov
jns
pop
mov
add
lock
sub
add
add
mov
xchg
sbb
add
add
add
add
incl
jns
and
add
pusha
mov
add
jmp
bound
and
add
dec
mov
add
incl
bound
and
add
xor
add
jmp
bound
add
add
call
add
add
bound
add
add
sti
bound
and
add
lock
add
call
bound
and
add
fdivrs
add
pushl
add
add
cmpb
call
add
add
add
add
jo
jns
pushl
jns
js
jns
and
add
and
add
call
jns
add
add
pop
popa
jns
add
add
and
sub
add
add
popa
jns
add
add
ss
jns
add
add
ds
jns
and
add
lock
sub
add
add
call
popa
jns
and
add
fdivs
add
test
jns
incl
add
add
incl
add
add
add
add
add
add
add
add
add
and
add
jo
jns
inc
popa
jns
add
add
enter
and
add
and
add
sbb
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
mov
sub
add
add
sbb
add
add
cmp
jle
add
add
incl
add
add
add
add
cmp
add
add
add
shlb
sub
mov
jns
lock
sub
add
add
add
add
or
add
add
incl
add
add
add
add
jp
add
add
add
add
mov
jns
pop
mov
add
lock
sub
add
add
jns
and
add
sub
add
jmp
jns
add
add
push
add
add
sbb
add
incl
jns
add
add
dec
pusha
jns
and
add
enter
jmp
pusha
jns
add
add
sub
sub
add
add
mov
add
add
incl
pusha
jns
and
add
pusha
mov
sub
add
add
jmp
pusha
jns
add
add
orb
sub
add
add
incl
add
add
add
add
xor
add
add
and
add
sub
add
inc
pusha
jns
and
add
adc
add
jmp
add
add
clc
mov
sub
add
add
call
add
add
add
add
test
jns
pushl
jns
jnp
jns
add
add
inc
addr16
and
add
pusha
mov
sub
add
add
jns
incl
add
add
incl
add
add
add
add
add
add
jns
mov
add
add
cmp
add
pushl
addr16
and
add
loopne
jns
call
addr16
add
add
enter
add
add
incl
add
add
add
add
add
add
add
call
mov
jns
pop
mov
add
add
add
lock
sub
add
add
mov
sub
add
add
nop
mov
sub
add
add
push
addr16
add
add
clc
addr16
and
add
inc
mov
sub
add
add
call
addr16
add
add
fsubs
sub
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
jmp
jns
and
add
shlb
add
incl
jns
and
add
test
jns
jmp
data16
and
add
nop
mov
sub
add
add
pushl
jns
incl
jns
call
jns
jmp
data16
push
data16
inc
data16
call
data16
and
add
sub
add
pushl
add
add
adc
add
call
xchg
sbb
add
add
mov
sub
add
add
js
jns
and
add
mov
add
add
lcall
sub
ljmp
cmp
jns
decl
lcall
in
gs
cld
gs
and
add
js
jns
fsubs
sub
add
add
and
add
mov
add
add
or
add
jmp
jns
and
add
lock
sub
add
add
incl
sub
add
add
fdivs
add
ljmp
fs
pushl
fs
add
add
cmp
and
add
nop
mov
sub
add
add
call
fs
add
add
sbb
add
add
sarb
add
incl
add
add
add
xlat
out
jnp
mov
add
add
incl
add
add
add
ljmp
add
add
add
jle
pusha
dec
jle
pop
mov
add
je
jnp
add
add
and
sub
add
add
loopne
jle
push
fs
and
add
enter
inc
fs
add
add
pusha
dec
jle
pop
mov
add
add
add
ds
jnp
add
add
rorb
sub
add
add
nop
dec
jle
fsubs
and
add
js
jle
ljmp
xchg
sbb
add
add
dec
jle
incl
add
add
add
add
incl
add
add
add
adc
jnp
add
add
add
add
sub
sub
jle
pop
mov
add
pushf
out
jnp
add
add
or
sub
add
add
enter
call
xchg
sbb
add
add
add
add
ljmp
jns
add
add
push
add
add
incl
add
add
add
and
jnp
dec
cmp
sub
add
add
incl
add
add
add
jne
jnp
add
add
add
add
cwtl
dec
jle
mov
mov
add
jmp
jnp
add
add
js
jle
and
add
cmp
sub
add
add
jl
jns
and
add
loopne
jle
call
jns
add
add
mov
mov
add
add
add
mov
jnp
add
add
call
add
add
test
jle
jmp
jns
and
add
nop
dec
jle
cmp
sub
add
add
js
jle
decl
jns
and
add
and
sub
add
add
jmp
jnp
sub
add
add
or
sub
add
add
clc
jnp
sub
add
add
jnp
sub
add
add
clc
dec
jle
call
jnp
sub
add
add
mov
add
add
ljmp
add
add
mov
sub
add
add
mov
add
add
add
jnp
sub
add
add
inc
dec
jle
pushl
jns
and
add
sub
sub
add
add
call
jns
add
add
pop
jp
sub
add
add
sbb
sub
add
add
pushl
jp
sub
add
add
jp
sub
add
add
enter
call
jp
sub
add
add
jp
sub
add
add
mov
add
add
push
jp
sub
add
add
jp
sub
add
add
jp
sub
add
add
jp
sub
add
add
js
jle
pushl
add
add
add
add
sub
sub
add
add
call
add
add
adc
sub
add
add
pushl
jns
add
add
js
jns
and
add
rorb
call
jns
add
add
pop
jns
sub
add
add
mov
jle
pushl
jns
sub
add
add
cwtl
dec
jle
call
jns
sub
add
add
jns
sub
add
add
dec
dec
jle
push
jns
sub
add
add
xor
sub
add
add
call
jns
sub
add
add
jns
sub
add
add
loopne
jle
pushl
add
add
add
add
add
add
fmuls
sub
add
add
jmp
jns
add
add
push
add
add
mov
sub
add
add
incl
jns
and
add
jo
jle
jmp
js
sub
ljmp
js
sub
pushl
js
sub
decl
jns
incl
js
sub
add
add
cmp
push
js
sub
add
add
loopne
jle
call
js
sub
add
add
js
sub
add
add
rorb
pushl
add
add
incl
decl
add
add
lcall
add
add
jns
ljmp
jns
pushl
jns
or
add
js
jns
incl
jns
or
add
dec
jg
sub
call
jns
jmp
jg
sub
jg
sub
add
add
sub
sub
add
add
call
jg
sub
add
add
jg
sub
add
add
aaa
jle
add
add
incl
add
add
add
add
add
add
add
add
inc
jle
cmp
jns
add
add
lock
sub
add
add
inc
jle
and
add
fadds
sub
add
add
push
jg
sub
add
add
jg
sub
add
add
jg
sub
add
add
jg
sub
add
add
jg
sub
add
add
pusha
inc
jle
pushl
add
add
dec
inc
jle
call
add
add
jle
add
add
incl
add
add
add
add
add
add
add
push
inc
jle
sbb
jns
pop
mov
add
add
add
lock
sub
add
add
inc
jle
and
add
clc
inc
jle
pushl
jns
add
add
js
jns
add
add
inc
jle
sub
add
add
jns
add
add
push
jle
sub
add
pop
jle
sub
add
add
jns
push
add
add
jns
pop
add
add
jns
or
add
inc
jle
sub
add
add
push
add
add
pushl
jle
sub
add
add
push
inc
jle
call
jle
sub
add
add
jle
sub
add
add
add
sub
add
add
push
jle
sub
add
add
call
add
add
call
jle
sub
add
add
jle
sub
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
jno
sub
add
add
add
fadds
sub
mov
jns
pop
mov
add
add
add
lock
sub
add
add
add
add
inc
inc
jle
call
add
add
sub
sub
add
add
pushl
jns
and
add
adc
sub
add
add
call
jns
and
add
clc
inc
jle
pushl
jge
sub
add
add
jle
add
add
incl
add
add
add
add
or
add
add
add
rolb
sbb
jns
pop
mov
add
add
add
lock
sub
add
add
add
add
push
add
add
call
jge
sub
add
add
xor
add
incl
add
add
add
add
or
sub
add
add
add
jo
jle
push
mov
jns
lock
sub
add
add
jle
and
add
sbb
sub
add
add
push
jge
sub
add
add
rolb
call
jge
sub
add
add
jge
sub
add
add
mov
jle
pushl
add
add
add
add
add
add
add
add
push
add
add
call
add
add
push
inc
jle
pushl
jns
add
add
js
jns
and
add
add
sub
add
add
call
jns
add
add
pop
jl
sub
add
add
lock
jle
pushl
jl
sub
add
add
jl
sub
incl
jl
sub
add
add
test
jle
jmp
jl
sub
add
add
nop
inc
jle
inc
jl
sub
add
add
js
jle
jmp
add
add
and
sub
add
add
incl
add
add
add
add
add
add
add
add
loopne
jle
pushl
jns
add
add
js
jns
and
add
rolb
sub
add
add
call
jns
add
add
pop
jae
sub
add
add
addb
pushl
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
jae
sub
decl
jae
sub
add
add
dec
inc
jle
jmp
jae
sub
add
add
xor
inc
jae
sub
add
add
jae
sub
add
add
jae
sub
add
add
call
add
add
pushl
mov
add
add
fadds
call
add
add
add
add
mov
pushl
jns
add
add
js
jns
add
add
inc
jb
sub
add
add
jns
add
add
push
jb
sub
add
add
jns
cmp
jns
add
add
lock
sub
add
add
jle
and
add
xor
sub
add
add
pushl
jb
sub
cmp
sub
incl
jb
sub
call
jb
sub
lcall
jns
and
add
clc
pop
jle
inc
jb
sub
add
add
jb
sub
add
add
jb
sub
add
add
mov
jle
pushl
add
add
leave
jle
add
add
incl
add
add
add
add
add
add
add
add
mov
jns
add
add
lock
sub
add
add
add
add
pop
pop
jle
call
add
add
add
add
or
sub
add
add
pushl
jns
and
add
lock
jle
call
jns
add
add
pop
jno
sub
add
add
jno
sub
add
add
jno
sub
pushl
jno
sub
add
jno,pt
sub
jno
sub
add
add
jno
sub
call
jno
sub
add
add
jno
sub
add
add
pusha
pop
jle
inc
jno
sub
add
add
jno
sub
add
add
push
pop
jle
jmp
add
add
add
add
add
add
add
add
adc
sub
add
add
call
add
add
add
add
jns
add
add
outsb
jo
sub
add
add
jns
and
add
fcomps
sub
add
add
call
jns
add
add
pop
jo
sub
add
add
jo
sub
add
add
jo
sub
add
add
lcall
jmp
jo
sub
add
add
jo
jle
inc
jo
sub
add
add
jo
sub
add
add
enter
add
add
incl
add
add
add
add
out
sub
add
add
add
add
enter
add
add
incl
add
add
add
add
add
add
add
and
sub
jle
cmp
jns
lock
sub
add
add
pop
jle
and
add
enter
jmp
add
add
add
add
mov
add
add
incl
add
add
pusha
pop
jle
jmp
jns
and
add
dec
pop
jle
incl
jns
add
add
dec
ja
sub
add
add
jns
add
add
pop
ja
sub
add
add
ja
sub
add
sub
sub
add
ss
sub
add
add
ja
sub
add
add
ja
sub
add
add
ja
sub
add
add
clc
pop
jle
jmp
ja
sub
add
add
mov
add
add
inc
ja
sub
add
add
ja
sub
add
add
ja
sub
add
add
cwtl
pop
jle
pushl
add
add
add
add
add
add
add
add
pop
pop
jle
pushl
jns
js
jns
incl
jns
add
add
mov
jle
add
add
incl
add
add
add
add
js
add
add
add
add
xor
sub
jle
cmp
jns
lock
sub
add
add
pop
jle
and
add
fcomps
sub
add
add
jmp
jbe
sub
add
add
jbe
sub
add
add
mov
sub
add
add
incl
jbe
sub
add
add
jo
jle
jmp
jbe
sub
add
add
jbe
sub
add
add
jbe
sub
add
add
jbe
sub
add
add
jbe
sub
add
add
cmp
sub
add
add
jmp
add
add
add
add
add
add
add
add
add
add
rcrb
pushl
jns
add
add
js
jns
add
add
inc
jne
sub
add
add
jns
add
add
pop
jne
sub
add
and
jns
and
add
nop
pop
jle
incl
jne
sub
decl
jne
sub
add
add
inc
pop
jle
jmp
jne
sub
add
add
jne
sub
add
add
xor
inc
jne
sub
add
add
jne
sub
add
add
loopne
jle
jmp
add
add
add
add
add
add
add
add
mov
add
add
call
add
add
add
add
jns
add
add
outsb
je
sub
add
add
sub
add
add
iret
jle
add
add
incl
add
add
add
add
cmpb
add
add
add
mov
sbb
jns
pop
mov
add
add
add
lock
sub
add
add
jle
and
add
xor
sub
add
add
call
jns
and
add
sbb
sub
add
add
pushl
je
sub
add
add
je
sub
add
add
enter
call
je
sub
add
add
mov
jle
push
je
sub
add
add
cwtl
push
jle
call
je
sub
add
add
inc
push
jle
pushl
add
add
sub
sub
add
add
call
add
add
adc
sub
add
add
pushl
jns
and
add
clc
push
jle
call
jns
add
add
pop
or
and
add
test
jle
pushl
or
add
add
cmp
jns
cmp
jns
and
add
pusha
push
jle
call
or
and
add
dec
push
jle
push
or
add
add
clc
or
and
add
cmp
sub
add
add
call
or
and
add
loopne
jle
pushl
add
add
add
add
add
add
fcoms
sub
add
add
add
add
jmp
jns
add
add
add
add
add
add
add
add
mov
sub
add
add
js
and
add
js
jle
add
add
push
push
jle
incl
jns
add
add
add
add
add
add
add
add
sub
sub
add
add
xchg
sbb
add
add
push
jle
jmp
or
add
add
sub
jns
and
add
enter
incl
or
and
add
mov
jle
jmp
or
and
add
cwtl
push
jle
inc
or
and
add
inc
push
jle
jmp
add
add
sub
sub
add
add
incl
add
add
adc
sub
add
add
jmp
jns
ljmp
jns
and
add
rclb
incl
jns
decl
jns
and
add
mov
jle
jmp
or
and
add
cwtl
push
jle
incl
or
and
add
inc
push
jle
jmp
or
and
add
sub
sub
add
add
inc
or
and
add
adc
sub
add
add
jmp
add
add
clc
push
jle
incl
add
add
mov
add
add
jmp
jns
add
add
push
add
add
jns
and
add
cwtl
push
jle
call
jns
add
add
pop
or
add
add
and
jns
je
add
mov
add
add
add
and
and
xchg
push
add
add
add
dec
and
mov
add
pop
add
scas
and
pop
push
add
sub
add
inc
and
dec
and
sbb
add
outsb
and
jbe
add
or
add
and
out
and
fsubl
add
into
and
mov
and
xchg
and
xchg
add
jo
add
bound
add
push
and
inc
and
pop
and
xor
add
dec
daa
add
cmp
add
es
add
adc
add
mulb
add
in
add
shlb
add
les
add
shlb
add
loop
add
out
and
cli
and
adc
add
and
add
xor
add
inc
and
pop
and
push
and
test
add
xchg
and
movsb
and
mov
add
and
aam
add
loopne
add
in
and
mulb
add
adc
add
and
add
add
pop
and
add
add
xchg
and
add
and
add
and
add
and
add
and
add
and
add
and
add
cs
add
push
and
add
xchg
add
mov
add
into
and
add
cld
and
add
es
ss
inc
es
pop
es
insb
es
jl
add
mov
add
mov
es
mov
add
ret
add
add
add
add
movsb
and
lcall
add
and
je
add
jp
add
push
add
pusha
and
jo
add
add
add
cmp
add
add
add
mov
add
stos
and
lcall
add
and
fsubl
add
ljmp
add
add
and
add
add
add
add
insb
jae
jb
jo
inc
add
mov
push
outsb
insl
popa
jo
imul
insb
gs
add
jo
imul
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
popa
je
inc
imul
outsb
addr16
add
xor
inc
jb
popa
je
inc
imul
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sahf
add
insl
imul
outsl
arpl
jae
add
add
outsb
push
jb
arpl
jae
ret
add
jb
jne
insb
push
jb
je
arpl
ret
outsl
popa
fs
imul
add
or
insb
jae
jb
outsb
inc
add
jno
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
jns
je
insl
inc
imul
jns
add
je
popa
insb
inc
jb
gs
add
jb
jne
insb
push
jne
jb
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
gs
and
inc
gs
outsl
fs
gs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
fiadds
push
outsl
jae
dec
gs
popa
addr16
add
xchg
add
insb
insb
push
imul
push
gs
imul
add
fs
imul
add
outsl
ja
imul
aad
inc
imul
outsl
ja
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
popa
je
push
imul
incl
inc
gs
gs
je
jo
imul
leave
add
jbe
push
imul
push
push
inc
push
xor
cs
insb
add
jb
push
push
js
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
data16
je
arpl
add
add
addr16
arpl
push
add
gs
arpl
add
imul
add
data16
je
add
imul
add
imul
add
imul
add
popa
insl
add
dec
push
push
inc
push
push
cs
insb
add
push
push
inc
push
dec
cs
dec
dec
add
add
insb
push
outsb
ja
outsb
add
add
imul
jo
imul
dec
gs
jo
jb
add
cltd
add
popa
jo
insb
insb
outsl
arpl
jo
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
pop
add
je
jns
je
insl
push
imul
gs
outsl
arpl
push
imul
inc
jb
popa
je
push
push
add
cli
add
je
jne
jb
outsb
je
push
dec
add
movsl
add
push
gs
popa
insb
jne
add
gs
popa
insb
jne
add
inc
js
je
push
add
lret
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
testl
jne
jb
outsb
je
jb
arpl
jae
mov
jo
gs
insb
insb
outsl
arpl
mov
jo
imul
push
insb
jae
insb
insb
outsl
arpl
add
inc
jb
add
je
popa
insb
imul
imul
je
outsl
outsb
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
push
gs
outsb
push
gs
js
gs
imul
gs
or
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
gs
imul
popf
add
popa
jo
gs
jb
jns
fwait
add
popa
jo
jb
popa
je
add
mov
popa
fs
jb
je
push
je
add
add
popa
fs
imul
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
je
dec
popa
outsb
fs
add
adc
inc
imul
push
add
je
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
imul
gs
add
add
imul
lods
add
push
gs
js
gs
imul
gs
add
gs
outsl
arpl
fs
arpl
insl
outsb
je
add
gs
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
jae
inc
imul
jb
add
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
mov
dec
jae
popa
fs
gs
fs
je
add
mov
dec
jae
popa
fs
outsl
fs
je
add
jl
push
gs
je
dec
popa
outsb
fs
add
in
dec
jne
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
add
mov
inc
push
dec
outsb
outsw
add
inc
inc
push
add
xor
inc
gs
inc
dec
inc
push
add
popa
add
je
outsb
fs
inc
imul
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
gs
outsl
arpl
fs
js
push
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
adc
inc
gs
imul
push
add
gs
inc
imul
inc
push
dec
xor
cs
insb
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
je
insb
ja
add
arpl
jae
push
lds
add
add
daa
add
add
add
or
add
add
add
mov
daa
add
lock
add
subb
add
add
pusha
add
pusha
add
xor
add
shlb
add
shlb
add
xor
add
push
sub
add
add
add
add
add
add
push
sub
or
add
add
pop
add
add
add
inc
cs
insb
add
add
add
add
add
jp
and
sub
insb
jp
jo
jp
adc
sub
jmp
sub
les
std
les
stos
les
outsb
fstpt
xor
jnp
pop
fstpt
into
fstpt
mov
fidivrs
dec
fidivrs
aaa
fidivrs
in
jnp
rcr
jnp
mov
fnstsw
push
fnstsw
cmc
fnstsw
push
call
jnp
js
jnp
out
jnp
and
sub
gs
inc
fs
lock
sub
sbb
rcrb
js
sbbb
sub
js
and
js
and
sub
sub
sub
js
and
js
rcl
sub
jmp
sub
js
adc
js
mov
js
pusha
cmpb
xchg
and
js
xor
js
loopne
js
jo
js
and
sub
mov
js
add
js
push
mov
sub
push
sub
jns
xor
sub
jns
and
in
jns
lds
shr
jp
mov
jnp,pt
lcall
add
add
add
scas
jp
imul
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
imul
gs
xor
cs
insb
add
add
add
add
nop
add
jmp
nop
add
jmp
nop
add
jmp
add
add
add
add
jns
add
add
cs
inc
push
gs
gs
imul
sbb
sub
add
add
aas
inc
push
inc
js
gs
imul
jo
outsl
push
push
inc
inc
push
sbb
sub
add
add
aas
inc
push
dec
outsl
je
insl
jo
gs
outsb
je
fs
inc
jb
jo
outsl
push
push
inc
inc
add
add
outsl
outsb
sub
and
and
je
imul
outsb
je
and
je
add
jb
gs
xor
cs
insb
add
add
jne
imul
outsb
add
insl
jo
gs
gs
outsb
addr16
outsb
je
jb
popa
arpl
and
jae
outsl
bound
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
jae
outsb
arpl
outsl
outsb
imul
add
add
push
imul
jns
outsb
addr16
outsb
je
jb
popa
arpl
and
jae
outsl
bound
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
je
gs
dec
push
sub
add
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
outsb
outsl
insl
and
arpl
jae
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
jae
outsb
outsl
je
popa
je
popa
arpl
bound
add
push
sbb
sub
add
add
aas
inc
push
dec
outsb
jbe
insb
imul
outsb
je
inc
jb
jo
outsl
push
push
inc
inc
add
dec
push
add
dec
outsl
xor
jae
add
add
inc
arpl
imul
jne
inc
jb
popa
jns
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
popa
outsb
daa
je
bound
jb
imul
imul
bound
add
cs
add
inc
gs
gs
jo
popa
je
inc
add
add
inc
outsl
jo
inc
imul
gs
gs
inc
imul
pop
and
gs
jns
je
insl
inc
imul
jns
add
add
pop
pop
add
pop
fs
fs
insb
add
add
fs
jne
fs
insb
add
sub
pop
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
insb
insl
outsl
outsb
cs
insb
add
inc
xor
inc
cmp
xor
xor
xor
cmp
xor
cmp
xor
xor
xor
cmp
cmp
inc
xor
xor
aaa
xor
xor
xor
cmp
inc
xor
cmp
inc
xor
xor
inc
aaa
inc
xor
xor
xor
inc
xor
xor
xor
cmp
inc
cmp
inc
cmp
xor
cmp
add
add
ja
outsb
outsl
ja
add
add
pop
arpl
pop
add
add
pop
cmp
add
pop
ja
outsb
imul
insb
add
add
pop
dec
outsb
je
jb
gs
gs
fs
imul
je
jo
jne
jb
dec
outsb
outsw
inc
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
pop
dec
outsb
je
jb
gs
jo
outsb
push
jb
inc
add
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
pop
jle
add
cmp
xor
cmp
aaa
xor
xor
inc
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
aaa
xor
inc
inc
ss
xor
inc
xor
inc
aaa
xor
inc
xor
cmp
xor
xor
xor
cmp
cmp
xor
inc
inc
inc
inc
inc
inc
inc
ss
cmp
xor
xor
xor
xor
xor
inc
ss
cmp
inc
inc
inc
aaa
xor
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
xor
cmp
inc
cmp
xor
xor
xor
inc
inc
add
add
xor
inc
cmp
inc
inc
inc
xor
aaa
xor
inc
xor
inc
inc
inc
inc
inc
inc
xor
xor
xor
xor
xor
inc
inc
cmp
inc
xor
inc
xor
inc
xor
xor
inc
xor
inc
inc
inc
xor
xor
xor
xor
cmp
xor
cmp
cmp
inc
inc
cmp
inc
xor
xor
xor
aaa
ss
xor
xor
inc
cmp
xor
inc
inc
inc
cmp
xor
xor
xor
inc
inc
inc
inc
inc
inc
add
add
inc
inc
xor
xor
cmp
xor
inc
inc
inc
aaa
cmp
xor
cmp
inc
inc
inc
inc
inc
aaa
xor
xor
xor
inc
cmp
xor
xor
xor
xor
inc
inc
inc
cmp
ss
xor
xor
cmp
inc
xor
xor
inc
inc
inc
ss
inc
inc
xor
cmp
xor
ss
xor
xor
inc
xor
inc
inc
xor
inc
inc
xor
xor
xor
inc
inc
inc
xor
xor
xor
cmp
inc
cmp
inc
ss
xor
inc
ss
inc
add
add
inc
cmp
cmp
xor
cmp
cmp
xor
cmp
inc
inc
ss
aaa
inc
xor
inc
xor
xor
aaa
cmp
xor
inc
xor
cmp
cmp
xor
cmp
aaa
inc
xor
inc
cmp
aaa
cmp
cmp
xor
ss
cmp
aaa
cmp
ss
inc
xor
inc
inc
xor
inc
inc
xor
ss
xor
inc
inc
inc
xor
inc
xor
xor
inc
xor
xor
inc
inc
xor
xor
cmp
xor
inc
inc
add
add
inc
inc
cmp
xor
ss
inc
xor
xor
ss
xor
ss
xor
xor
xor
ss
cmp
inc
xor
ss
inc
inc
xor
xor
xor
cmp
inc
xor
xor
xor
aaa
xor
inc
xor
xor
xor
xor
inc
xor
xor
inc
xor
ss
cmp
inc
xor
inc
cmp
ss
xor
inc
inc
inc
cmp
inc
inc
xor
xor
aaa
aaa
cmp
aaa
inc
xor
add
add
cmp
cmp
xor
inc
xor
inc
ss
xor
inc
inc
xor
inc
xor
inc
xor
inc
aaa
inc
ss
inc
inc
xor
xor
xor
inc
ss
xor
xor
xor
cmp
inc
inc
xor
xor
xor
inc
inc
inc
ss
inc
aaa
aaa
xor
xor
aaa
xor
xor
cmp
inc
cmp
cmp
aaa
inc
inc
aaa
xor
cmp
xor
cmp
cmp
xor
xor
inc
inc
inc
xor
add
inc
inc
xor
cmp
inc
aaa
xor
cmp
cmp
ss
inc
inc
xor
cmp
ss
xor
cmp
xor
inc
inc
xor
inc
inc
inc
inc
xor
xor
xor
inc
xor
xor
xor
xor
xor
cmp
xor
xor
xor
inc
xor
xor
inc
ss
aaa
inc
cmp
xor
xor
inc
inc
inc
ss
inc
inc
xor
inc
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
inc
inc
xor
xor
xor
inc
aaa
xor
inc
inc
xor
ss
ss
inc
xor
inc
inc
aaa
inc
xor
xor
inc
aaa
ss
xor
inc
xor
xor
xor
xor
xor
inc
ss
aaa
xor
inc
cmp
xor
xor
xor
xor
aaa
xor
inc
inc
xor
xor
xor
inc
cmp
cmp
inc
aaa
inc
cmp
cmp
inc
cmp
inc
xor
inc
inc
inc
xor
add
pop
inc
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
inc
inc
inc
xor
xor
xor
aaa
cmp
xor
xor
xor
inc
xor
inc
inc
inc
inc
xor
inc
xor
inc
inc
xor
cmp
inc
xor
ss
ss
xor
inc
inc
inc
xor
inc
xor
xor
inc
cmp
inc
xor
xor
inc
xor
inc
inc
inc
xor
inc
xor
cmp
xor
inc
xor
xor
inc
inc
aaa
add
add
inc
xor
inc
cmp
xor
xor
xor
xor
aaa
inc
cmp
cmp
inc
xor
inc
inc
inc
inc
xor
cmp
xor
inc
xor
inc
inc
ss
inc
cmp
cmp
inc
xor
inc
cmp
xor
cmp
xor
aaa
xor
inc
xor
xor
xor
cmp
inc
inc
xor
inc
inc
cmp
inc
ss
xor
aaa
xor
xor
inc
inc
xor
inc
xor
inc
xor
inc
xor
cmp
cmp
inc
inc
xor
xor
xor
cmp
xor
inc
inc
xor
xor
inc
xor
xor
xor
cmp
inc
cmp
cmp
aaa
aaa
cmp
inc
inc
inc
cmp
xor
aaa
xor
xor
cmp
xor
xor
xor
xor
inc
xor
inc
xor
cmp
inc
cmp
aaa
cmp
xor
xor
xor
inc
inc
xor
xor
xor
cmp
inc
inc
inc
cmp
inc
xor
xor
xor
cmp
inc
inc
inc
inc
inc
inc
inc
inc
xor
add
pop
xor
xor
cmp
xor
inc
cmp
xor
xor
aaa
xor
inc
inc
xor
xor
xor
xor
ss
xor
aaa
cmp
xor
inc
cmp
xor
aaa
inc
ss
inc
inc
xor
xor
inc
xor
ss
aaa
xor
inc
xor
aaa
xor
xor
aaa
inc
xor
inc
xor
xor
xor
xor
xor
xor
inc
xor
cmp
xor
inc
inc
add
add
fs
jbe
jb
pop
gs
pop
push
add
pop
and
or
pop
and
popa
sub
add
add
ja
imul
outsl
imul
inc
inc
cmp
inc
inc
cmp
xor
xor
cmp
xor
xor
inc
inc
xor
cmp
xor
xor
inc
inc
inc
aaa
cmp
xor
inc
xor
inc
cmp
xor
xor
inc
xor
xor
inc
inc
inc
cmp
inc
xor
aaa
xor
pop
inc
inc
xor
inc
inc
aaa
xor
xor
inc
inc
xor
cmp
cmp
inc
xor
inc
aaa
cmp
xor
cmp
inc
inc
ss
xor
inc
inc
xor
xor
inc
xor
inc
inc
inc
inc
inc
inc
xor
inc
inc
cmp
inc
inc
xor
aaa
cmp
inc
xor
inc
ss
inc
inc
xor
inc
inc
cmp
cmp
inc
add
add
xor
ss
inc
inc
xor
aaa
xor
ss
inc
xor
inc
xor
inc
xor
xor
xor
xor
ss
xor
xor
xor
inc
xor
inc
xor
xor
inc
inc
aaa
aaa
inc
xor
aaa
cmp
inc
aaa
xor
inc
inc
aaa
inc
inc
inc
xor
inc
inc
aaa
inc
xor
xor
inc
inc
inc
add
add
mov
out
mov
pop
push
push
jb
push
ss
outsl
jb
inc
inc
add
add
xor
inc
xor
cmp
xor
xor
inc
xor
inc
xor
inc
inc
cmp
xor
inc
xor
xor
cmp
xor
xor
xor
cmp
inc
inc
cmp
aaa
inc
aaa
inc
xor
xor
xor
xor
inc
xor
aaa
xor
xor
xor
xor
inc
add
add
inc
aaa
inc
xor
xor
inc
xor
xor
xor
inc
xor
inc
xor
inc
inc
inc
inc
inc
cmp
inc
inc
xor
cmp
xor
xor
xor
ss
ss
cmp
xor
cmp
cmp
xor
inc
xor
inc
inc
aaa
xor
xor
inc
inc
xor
inc
inc
xor
inc
xor
aaa
cmp
aaa
xor
xor
pop
inc
xor
xor
xor
xor
inc
cmp
inc
inc
xor
xor
inc
inc
inc
inc
inc
inc
cmp
xor
cmp
ss
xor
aaa
cmp
inc
inc
xor
cmp
inc
aaa
xor
inc
xor
xor
cmp
xor
xor
inc
xor
xor
xor
cmp
inc
inc
inc
cmp
inc
xor
inc
xor
xor
inc
xor
aaa
cmp
inc
xor
xor
xor
xor
cmp
inc
cmp
xor
inc
inc
ss
xor
xor
cmp
xor
xor
add
cmp
inc
xor
xor
xor
inc
xor
inc
inc
inc
cmp
xor
inc
xor
inc
cmp
inc
xor
inc
xor
xor
xor
xor
inc
cmp
inc
xor
inc
ss
inc
inc
xor
xor
inc
xor
xor
ss
xor
cmp
add
add
cmp
aaa
xor
inc
xor
xor
inc
xor
cmp
inc
inc
xor
inc
inc
inc
inc
xor
aaa
aaa
aaa
aaa
xor
inc
xor
cmp
inc
xor
inc
xor
cmp
ss
inc
xor
xor
xor
inc
inc
inc
cmp
inc
xor
add
pop
inc
inc
cmp
inc
aaa
inc
cmp
xor
inc
xor
cmp
xor
inc
inc
inc
cmp
inc
ss
xor
inc
inc
inc
xor
cmp
inc
xor
xor
inc
xor
xor
xor
inc
xor
inc
inc
inc
inc
xor
xor
inc
xor
xor
xor
inc
inc
cmp
xor
xor
inc
add
add
cmp
xor
ss
inc
xor
xor
inc
cmp
ss
aaa
xor
ss
inc
aaa
inc
inc
inc
xor
cmp
xor
xor
inc
cmp
xor
aaa
inc
xor
inc
xor
inc
inc
inc
inc
inc
xor
inc
inc
xor
inc
inc
xor
inc
xor
aaa
inc
cmp
inc
ss
inc
ss
xor
add
pop
push
das
das
ja
ja
outsb
xor
xor
arpl
add
outsl
jo
outsb
add
add
jns
add
add
cs
inc
push
dec
outsb
jo
je
gs
arpl
inc
aas
and
outsb
jo
je
gs
arpl
addr16
push
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
inc
jb
jo
outsl
push
push
inc
inc
inc
inc
jb
jo
outsl
push
push
inc
inc
push
sbb
sub
add
add
aas
inc
push
inc
popa
outsb
outsb
outsl
je
insb
jne
push
jo
outsl
push
push
inc
inc
add
push
outsb
data16
jne
push
cmp
cmp
je
imul
arpl
popa
jae
bound
data16
and
jo
je
je
popa
je
arpl
outsb
outsl
je
bound
data16
jne
push
add
add
add
jns
add
add
cs
inc
inc
add
add
push
sbb
sub
add
add
dec
add
push
dec
inc
sub
push
je
imul
cmp
dec
jne
jo
je
je
imul
je
jb
outsb
outsl
je
jae
arpl
imul
jne
jo
je
je
imul
je
jb
push
sbb
sub
add
add
push
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
add
add
add
add
jns
add
add
cs
inc
push
dec
outsb
jbe
insb
imul
jb
popa
je
inc
jb
jo
outsl
push
push
inc
inc
add
add
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
daa
je
popa
insb
insb
outsl
ja
imul
add
add
add
add
add
add
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
add
add
insb
jne
dec
popa
insl
gs
add
jns
add
add
cs
inc
push
push
popa
insb
jne
push
jns
gs
imul
inc
dec
popa
insl
gs
popa
insb
jne
push
popa
imul
jo
outsl
push
push
inc
inc
add
add
add
sub
je
jns
outsb
and
and
je
imul
daa
sub
jae
outsl
jb
and
add
insl
gs
popa
insb
jne
push
popa
imul
jo
and
jae
popa
je
push
and
add
add
add
jns
add
add
cs
inc
dec
add
add
and
add
push
sbb
sub
add
add
aas
inc
push
je
jo
pop
imul
aam
jp
add
add
jne
add
jae
add
out
jp
cli
jp
cli
jp
xchg
idivl
aam
jp
add
add
lcall
add
add
cmc
jle
sbb
jle
lock
jle
add
jle
adc
add
add
add
or
jle
or
jle
loopne
jle
loopne
jle
push
add
add
add
add
push
jle
loopne
add
mov
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
incl
or
add
and
mov
and
mov
and
dec
adc
jl
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
jle
xor
jle
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
or
add
sbb
jns
or
add
cmp
jns
adc
add
dec
sub
adc
add
pushf
sub
adc
add
mov
add
add
sub
sbb
add
adc
jns
sbb
add
sub
jns
sbb
add
je
jns
sbb
add
mov
add
add
sub
js
add
les
jns
jns
add
hlt
sub
jp
add
in
jns
cld
add
add
sub
incl
add
adc
jns
xorb
add
add
lock
call
push
add
push
add
jle
add
add
incl
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
add
add
add
cld
pushl
add
add
add
incl
add
addb
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
cmp
add
add
sub
jns
and
jns
pop
sub
jns
push
sub
jns
inc
sub
jns
insb
sub
jns
cwtl
jns,pn
mov
jns
mov
jns
test
jns
subb
sub
jns
mov
jns
mov
jns
lods
jns,pn
test
jns
movsb
jns,pn
mov
jns,pn
aam
jns
enter
shrb
sub
jns,pn
mov
jns,pn
call
jns,pn
adc
jns
or
jns
add
jns
xor
jns
xor
jns
sub
jns
and
jns
push
jns,pn
dec
jns,pn
add
add
add
add
add
add
jle
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
cld
mov
jg
jg
jg
jg
jo
jle
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
call
jns
add
add
cs
inc
push
imul
gs
jae
fs
inc
add
add
add
push
sbb
sub
add
add
aas
inc
push
aas
and
popa
jae
arpl
outsl
jae
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
imul
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
call
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
outsl
jae
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
imul
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
jns
add
add
cs
inc
push
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
jns
add
add
cs
inc
push
insb
outsl
imul
jb
jae
fs
inc
add
add
jns
add
add
cs
inc
push
insb
outsb
addr16
pop
gs
outsl
jb
jae
fs
inc
add
push
sbb
sub
add
add
aas
inc
push
outsl
jne
pop
outsl
pop
jb
outsb
addr16
jae
fs
inc
add
add
add
add
add
push
sbb
sub
add
add
aas
inc
push
jb
outsb
je
insl
gs
gs
outsl
jb
jae
fs
inc
add
jns
add
add
cs
inc
push
popaw
imul
jae
bound
gs
jae
fs
inc
add
add
add
push
sbb
sub
add
add
aas
inc
push
popaw
arpl
inc
insb
outsl
arpl
gs
jae
fs
inc
add
push
sbb
sub
add
add
aas
inc
push
pop
dec
outsl
arpl
jo
insb
outsl
arpl
gs
jae
fs
inc
add
add
push
push
push
inc
jb
gs
gs
outsl
jb
add
add
push
inc
insb
outsl
jae
push
gs
gs
add
push
dec
jo
outsb
push
gs
gs
add
push
push
push
inc
outsb
jne
gs
je
push
jb
arpl
jae
jae
add
ja
jae
jo
xor
cs
insb
add
add
add
add
and
xor
pop
cmp
add
add
and
add
add
add
das
add
and
add
add
cmp
add
jb
add
ja
add
and
jae
add
jae
add
add
add
sub
sub
sub
and
add
add
jae
popa
outsb
fs
insb
outsl
outsb
gs
and
add
add
arpl
imul
and
add
jbe
jb
imul
and
add
add
js
insb
and
add
popa
outsb
fs
insb
outsl
outsb
gs
add
arpl
imul
and
add
jbe
jb
imul
add
add
inc
xor
add
add
add
sub
add
cmp
add
je
jle
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
popa
jo
jae
add
es
outsl
je
add
es
add
add
es
je
add
add
es
insl
jo
add
add
inc
cmp
add
add
inc
sub
cmp
add
cmp
js
insb
add
add
popa
outsb
fs
insb
outsl
outsb
add
outsb
arpl
imul
jbe
jb
imul
sub
sub
xor
movsb
xor
enter
call
xor
cmp
jle
and
jle
dec
xor
jo
jle
xchg
xor
mov
xor
inc
jb
outsl
jb
outsb
jne
insb
and
xor
and
and
gs
arpl
and
inc
and
jne
and
and
jo
je
jae
jb
popa
insl
add
jb
jb
outsl
arpl
outsb
je
gs
jo
jns
add
add
jb
jb
jo
jb
imul
insb
popa
jb
je
outsl
outsb
add
inc
jb
outsl
jb
jo
jb
imul
insl
outsb
je
add
inc
jb
outsl
jb
jo
jb
imul
outsb
outsl
ja
add
inc
jb
outsl
jb
jb
popa
imul
and
add
inc
jb
outsl
jb
and
jo
jns
je
add
add
jb
jb
jb
popa
imul
jb
bound
gs
add
add
jb
jb
jb
popa
imul
insl
outsb
je
jbe
insb
jne
add
add
inc
popa
imul
jb
popa
and
gs
outsb
je
outsb
popa
insl
add
jb
jb
jo
jb
imul
insl
outsb
je
add
dec
gs
outsl
jb
and
insb
outsl
arpl
imul
insb
gs
add
imul
outsl
jo
outsb
and
insb
add
jb
jb
add
dec
outsl
and
jb
jb
add
add
je
gs
jo
popa
je
inc
add
add
push
gs
imul
bound
gs
add
inc
outsl
jo
inc
imul
gs
gs
inc
imul
gs
imul
arpl
add
add
add
outsb
inc
js
arpl
je,pn
outsb
jae
js
je,pn
outsb
jae
js
je,pn
outsb
jae
js
add
add
add
add
popa
addr16
insb
insb
add
add
dec
insl
popa
addr16
imul
outsb
inc
js
add
add
insl
dec
outsb
imul
add
add
insl
push
gs
jo
imul
push
jns
inc
gs
jo
imul
push
jns
dec
outsl
popa
fs
outsl
fs
add
add
insl
inc
gs
outsl
fs
gs
outsb
outsw
add
add
push
jns
inc
gs
jns
inc
jb
insl
dec
popa
insl
add
add
outsb
fs
insl
popa
add
add
add
add
fs
jne
add
add
xor
add
push
sbb
sub
add
add
aas
inc
push
push
gs
push
gs
inc
popa
imul
jns
je
push
push
inc
inc
add
inc
jb
jo
outsl
addr16
jo
imul
jb
je
insl
jae
popa
jb
and
popa
bound
and
je
jb
jo
ja
jb
jne
and
jae
insb
data16
je
popaw
imul
add
jns
je
addr16
jo
imul
jb
je
insl
jae
popa
jb
and
popa
bound
and
outsw
jb
and
and
ja
jb
jne
and
insb
data16
je
and
and
jb
outsl
jb
gs
jns
add
add
cs
inc
push
dec
outsb
jbe
insb
imul
addr16
inc
inc
jb
jo
outsl
push
push
inc
inc
add
imul
popa
and
insb
imul
outsb
addr16
add
cmp
add
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
je
jae
jo
outsl
jb
and
jae
arpl
insb
and
je
bound
imul
add
bound
gs
add
bound
and
gs
and
add
add
dec
popa
jae
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
arpl
daa
je
je
jne
arpl
and
add
add
add
add
jns
add
add
cs
inc
push
dec
outsl
inc
push
insb
push
jne
jo
jb
inc
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
inc
jb
jo
outsl
push
push
inc
inc
add
push
sbb
sub
add
add
aas
inc
push
inc
insb
outsl
arpl
outsb
addr16
outsb
jo
je
outsb
insb
jns
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
inc
jb
jo
outsl
push
push
inc
inc
add
and
outsb
bound
imul
and
jo
je
imul
imul
outsb
je
and
and
jae
outsl
bound
arpl
add
jns
add
add
cs
inc
push
dec
outsb
jbe
insb
imul
je
js
inc
inc
jb
jo
outsl
push
push
inc
inc
add
add
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
insb
je
jo
and
popa
outsb
outsb
gs
jae
add
inc
imul
add
add
add
add
jo
gs
outsl
fs
popa
jae
cmp
gs
imul
imul
outsb
outsl
je
bound
jae
arpl
imul
and
jae
arpl
push
outsl
fs
inc
imul
fs
popa
jae
cmp
inc
gs
gs
dec
push
sub
and
jae
and
and
insb
insb
gs
and
and
arpl
jo
imul
arpl
inc
imul
fs
popa
jae
cmp
je
imul
gs
insl
outsl
fs
outsb
outsb
outsl
je
jne
and
outsb
jne
insb
and
add
add
add
insb
je
jb
imul
jb
fs
outsb
jo
je
and
jbe
insb
imul
jb
jae
jp
add
add
inc
imul
push
gs
fs
outsb
jo
je
inc
jb
popa
jns
imul
jae
imul
jo
je
jne
data16
popa
jb
jne
outsb
je
add
add
je
jne
inc
jne
data16
add
add
jns
add
add
cs
inc
push
inc
jns
gs
jb
popa
jns
popa
jb
insl
gs
jb
inc
jb
jo
outsl
push
push
inc
inc
add
add
jb
popa
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
dec
inc
push
pop
push
inc
inc
inc
dec
dec
inc
and
and
inc
pop
inc
dec
inc
pop
pop
inc
push
dec
push
pop
push
inc
inc
inc
dec
dec
inc
and
outsb
outsb
outsl
je
bound
jne
gs
je
and
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
outsb
jbe
insb
imul
popa
outsb
fs
jae
jo
fs
outsb
add
add
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
outsb
jbe
insb
imul
and
and
outsl
arpl
jo
fs
outsb
add
jb
popa
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
imul
js
and
addr16
and
and
je
popa
and
insb
je
jo
and
and
outsl
arpl
jae
jp
add
add
jb
popa
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
insb
popa
imul
insb
outsb
addr16
and
and
je
popa
and
insb
je
jo
and
and
outsl
arpl
jae
jp
and
and
pop
push
inc
inc
inc
dec
dec
inc
and
and
arpl
imul
dec
popa
jae
push
gs
imul
outsl
outsb
inc
imul
addr16
push
sbb
sub
add
add
dec
add
add
add
push
sbb
sub
add
add
aas
inc
push
dec
popa
jae
push
gs
imul
outsl
outsb
inc
popa
imul
push
imul
outsl
outsb
inc
imul
jns
je
push
push
inc
inc
add
add
dec
popa
jae
push
gs
imul
insl
gs
popa
and
jae
and
je
jbe
insb
imul
insl
imul
jb
jno
imul
jb
insl
gs
jb
daa
add
inc
popa
jae
dec
pop
inc
arpl
gs
and
xor
jae
and
jae
and
and
je
gs
and
and
and
and
arpl
imul
popa
jae
dec
pop
inc
arpl
gs
add
add
add
push
sbb
sub
add
add
aas
inc
push
inc
jb
inc
inc
gs
jne
je
arpl
jo
outsl
jb
inc
jb
jo
outsl
push
push
inc
inc
add
add
add
jns
add
add
cs
inc
push
dec
gs
popa
fs
jb
inc
inc
gs
jne
je
arpl
jo
outsl
jb
inc
jb
jo
outsl
push
push
inc
inc
add
add
popa
jne
je
arpl
jo
outsl
jb
and
outsb
outsb
outsl
je
fs
jo
and
jae
popa
and
je
and
jae
jo
jae
jo
jb
jae
add
add
add
add
jns
add
add
cs
inc
push
dec
inc
inc
inc
popa
fs
jb
inc
inc
gs
jne
je
arpl
jo
outsl
jb
imul
jb
jo
outsl
push
push
inc
inc
add
add
inc
gs
jne
je
arpl
jo
outsl
jb
imul
dec
inc
inc
and
arpl
popaw
imul
inc
push
sub
add
add
dec
dec
inc
inc
sub
add
add
add
push
sbb
sub
add
add
aas
inc
push
dec
outsb
je
addr16
inc
jb
jo
outsl
push
push
inc
inc
add
push
sbb
sub
add
add
aas
inc
push
inc
inc
push
inc
arpl
gs
jb
inc
inc
jb
jo
outsl
push
push
inc
inc
add
push
and
outsl
fs
jb
jb
add
add
fs
imul
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
popa
add
add
add
add
add
add
insl
add
add
add
jg
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
popa
add
add
add
outsl
add
add
add
jnp
add
jg
add
test
add
lea
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
imul
add
ja
add
addl
add
xchg
add
lea
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
jno
add
jae
add
ja
add
mov
add
popl
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
add
daa
add
add
das
add
add
push
add
add
gs
add
addl
add
xchg
add
add
lahf
add
add
stos
add
add
mov
add
mov
add
add
iret
add
add
aad
add
fildl
add
repz
add
pop
push
add
or
push
add
pop
push
add
pop
push
add
and
add
sub
add
das
push
add
cmp
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
gs
add
jns
add
jg
add
addl
add
push
add
mov
push
add
lods
push
add
mov
push
add
lds
add
int
add
roll
add
flds
add
filds
add
icebp
push
add
testl
add
std
push
add
or
add
adc
add
pop
pop
add
daa
pop
add
aaa
pop
add
inc
pop
add
dec
pop
add
dec
pop
add
push
pop
add
push
pop
add
push
pop
add
popa
pop
add
insl
pop
add
jae
add
jns
add
mov
add
lea
add
popf
pop
add
lahf
pop
add
mov
add
mov
pop
add
leave
pop
add
int
add
iret
pop
add
roll
add
fildl
add
loope
add
jmp
add
in
pop
add
testl
add
invd
add
adc
or
add
or
add
or
add
or
add
or
add
or
add
add
push
or
add
add
pop
or
add
add
pop
or
add
add
jno
add
orl
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
dec
or
add
add
push
or
add
add
pop
or
add
add
jno
add
ja
add
test
add
mov
add
fwait
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
popa
or
add
add
or
add
add
jne
add
jnp
add
jg
add
orl
add
mov
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
push
or
add
add
pop
or
add
add
outsl
or
add
add
mov
add
lea
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
pop
or
add
add
popa
or
add
add
jae
add
ja
add
orl
mov
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
prefetch
add
or
add
and
add
sub
or
add
dec
or
add
imul
add
test
add
mov
add
mov
or
add
mov
or
add
int
add
rorl
add
fisttpl
add
out
add
repz
add
decl
add
pop
push
add
sbb
push
add
daa
push
add
das
push
add
xor
push
add
dec
push
add
push
push
add
pop
push
add
pop
push
add
imul
add
add
jne
add
jge
add
xchg
add
push
add
xchg
push
add
fwait
push
add
mov
add
mov
add
mov
push
add
rorl
add
aad
add
fisttpl
add
in
push
add
out
push
add
stc
push
add
pop
sldt
or
add
or
sldt
and
sldt
xor
add
inc
sldt
inc
sldt
dec
sldt
dec
sldt
push
sldt
pop
sldt
pop
sldt
sldt
imul
add
add
xchg
sldt
mov
sldt
pop
jae
arpl
jae
fs
insb
add
cs
add
sub
jle
inc
xor
mov
jg
sub
aaa
jle
and
jle
mov
jns
mov
jns
lods
cmpsb
jns
test
jns
movsb
cmpsb
jns
mov
cmpsb
jns
add
add
add
add
addb
add
add
add
add
addb
add
add
add
dec
add
add
add
sub
add
rorb
addb
add
or
push
add
push
add
add
bswap
lea
pushf
popl
sbb
bt
sar
rcl
pushl
popl
shld
and
shl
movl
shr
bsr
sar
or
mov
neg
sub
jmp
movb
pushf
push
inc
pushl
mov
push
push
pushf
movb
lea
jmp
call
mov
call
jmp
inc
jmp
add
shl
movzbl
sar
xor
stc
setne
rol
bsf
setne
dec
inc
rcr
xor
call
bt
add
call
jmp
shr
xor
or
mov
pushf
cmp
sub
pushl
clc
add
call
movzbw
btc
ror
clc
jmp
push
movb
pushf
mov
call
pushl
popl
movb
push
lea
jmp
jmp
mov
mov
sub
call
xor
cmc
pushf
push
stc
sub
call
pusha
movl
push
mov
movb
mov
jmp
push
pushf
mov
mov
mov
mov
jmp
mov
mov
mov
lea
jmp
mov
pusha
jmp
jmp
push
mov
pusha
push
pushl
lea
jmp
mov
pushf
push
mov
pusha
mov
pushl
pushf
mov
push
mov
call
mov
mov
pushf
lea
jmp
inc
btc
xor
mov
shld
sar
shl
add
shr
dec
movzbl
call
pusha
jmp
stc
sub
test
call
rcr
bswap
mov
seta
rcl
rcr
sub
add
setl
not
pushf
pusha
mov
call
push
pushl
mov
call
cmc
jmp
add
pushf
pushl
bt
sub
jmp
pushf
popl
movw
pushl
popl
pushl
pushf
mov
pushf
lea
jmp
rcl
bt
ror
bsf
bswap
adc
mov
bt
jmp
inc
pushf
movl
pushf
movw
lea
jmp
call
mov
pushf
mov
push
movb
lea
jmp
pushf
pop
mov
xchg
call
cld
std
cld
pushf
rep
rcr
mov
add
sub
stc
mov
test
cld
test
pushl
popf
mov
movb
mov
mov
lea
jmp
xchg
jmp
jmp
bt
push
test
add
lea
jnp
pushf
pushf
pushl
pushf
pushl
popl
pusha
lea
jmp
mov
call
mov
pusha
jmp
sub
bt
sub
call
pushf
push
sub
pushf
push
mov
push
push
movl
lea
jmp
pushf
jmp
bswap
movsbl
rcr
lea
test
call
xor
jmp
lahf
aam
movzbl
mov
jmp
mov
mov
jmp
sub
test
stc
shl
movb
pushf
pusha
mov
pushf
pushf
jmp
movb
pushl
pushl
popl
push
pusha
push
push
lea
jmp
sub
pushf
shr
mov
jmp
add
push
pushl
mov
pusha
mov
pushf
lea
jmp
push
mov
push
pushf
pushf
movb
pushl
ret
pushf
mov
jmp
push
push
mov
pusha
push
pushf
pushf
lea
jmp
pusha
pusha
push
mov
movb
call
pushf
mov
pusha
pushf
lea
jmp
call
mov
pushf
popl
jmp
pushf
popl
movw
pushl
movb
call
pusha
pushf
inc
pushl
push
bt
jmp
mov
mov
lea
bswap
mov
movw
pushf
mov
bswap
pushf
popl
inc
shl
xor
pushl
popl
sbb
movl
shl
mov
dec
bt
mov
or
sub
cmc
ror
mov
mov
bswap
shl
pop
lea
clc
test
pushf
sub
pushf
pushf
pusha
lea
jmp
sub
movl
inc
neg
sbb
mov
push
push
not
sub
bswap
push
ror
sub
bswap
bts
rcl
inc
bsr
lea
movw
test
sub
pushf
pushf
lea
jmp
jmp
mov
mov
movb
push
pushf
pushf
lea
jmp
pushl
popl
pushf
pushl
pusha
push
lea
jmp
cmp
adc
xor
mov
btc
sbb
test
cmc
sub
pusha
pushf
inc
sbb
btc
push
btc
not
bswap
sub
add
shl
clc
rcl
sub
sar
add
bsf
mov
cmc
call
xor
mov
call
call
movb
pushl
mov
call
call
not
mov
pushf
bswap
jmp
push
bt
clc
mov
clc
test
pushf
pusha
bswap
call
shr
sub
cmc
dec
shr
neg
bts
bt
pushf
ror
shl
and
inc
bsf
pushf
mov
jmp
not
jmp
xchg
call
pusha
bt
add
jmp
push
jmp
pushf
popl
jmp
mov
pushf
movl
mov
mov
pushf
movw
push
mov
pusha
mov
pushl
mov
push
mov
push
call
mov
mov
pushf
movb
pushf
lea
jmp
test
mov
rcr
bts
cmp
and
mov
clc
clc
not
pusha
test
not
jmp
pushf
popl
jmp
cmc
xor
stc
sub
mov
jmp
pushf
clc
mov
clc
test
pusha
mov
call
ror
clc
mov
lea
xor
mov
cmc
jmp
pusha
mov
not
shl
push
add
pushf
mov
jmp
jmp
jmp
pushl
popl
movb
pushf
movw
pusha
lea
jmp
push
call
sub
call
xor
jmp
push
mov
push
mov
call
add
pushl
mov
pushf
inc
pushl
pushf
call
mov
jmp
cmp
test
sub
push
mov
pushf
pushf
push
lea
jmp
call
mov
pushf
pushf
lea
jmp
setge
push
mov
call
call
lea
movzbw
push
mov
pusha
call
pusha
mov
mov
call
test
add
pushf
jmp
mov
pushl
lea
jmp
inc
pusha
not
pusha
mov
inc
jmp
xchg
bts
mov
lea
rcl
bsf
movsbw
add
sub
jae
xor
not
inc
call
inc
movzbw
inc
btr
movb
cmc
mov
clc
pushf
cmp
movl
add
call
xchg
pop
bswap
not
lea
mov
xchg
movl
call
mov
movzbw
mov
not
pushf
pushl
mov
movzbw
pushf
popl
adc
sub
pushl
popl
shl
rol
rcr
movl
cmc
call
mov
push
pushf
pushf
jmp
lea
push
cmc
call
pusha
bts
notl
rol
pushf
mov
stc
call
mov
push
lea
jmp
stc
sub
pushf
push
movl
lea
jmp
inc
pusha
jmp
add
pusha
pushf
mov
pushl
pushl
push
pushf
lea
jmp
test
rol
shr
sub
jmp
sub
pusha
pushf
pushl
lea
jmp
das
movzww
cmp
sub
pushf
jmp
ror
pushl
jmp
pushf
call
stc
jmp
inc
pushf
clc
pushl
bt
ror
pushf
jmp
add
add
push
pushl
popl
push
push
lea
jmp
mov
call
call
mov
pushf
mov
pushf
push
movb
push
mov
pushf
call
mov
pushf
call
jmp
pushl
pushf
popl
pushf
pushl
pushl
popl
movw
mov
lea
jmp
cmc
shr
cmc
mov
call
bswap
mov
xchg
push
mov
mov
bswap
movsbw
pushf
popl
clc
pushl
popl
rol
push
jmp
not
movzbw
movsbw
pushf
cmc
neg
and
mov
pushl
dec
push
stc
sub
mov
test
sub
mov
mov
not
ror
shl
dec
rcr
bswap
neg
xor
cmp
not
mov
bt
jmp
test
movb
add
jmp
push
inc
call
test
xor
bswap
mov
stc
cmp
mov
sbb
mov
mov
cmc
stc
add
call
pusha
push
pusha
mov
pushf
call
push
jmp
mov
mov
pushf
xchg
movsbw
pop
pushf
xchg
pop
movl
mov
call
movsbw
movsbw
cmc
ror
add
bswap
bsf
bsr
neg
mov
mov
pusha
sub
pushf
lea
jmp
dec
mov
jae
add
pushf
lea
jge
pusha
inc
push
call
call
pusha
shl
mov
jmp
jmp
shld
jmp
bt
sub
push
cmp
pusha
add
pushf
jmp
sbb
shl
inc
mov
add
rol
pushf
cmc
add
mov
pusha
pushl
mov
mov
call
sub
pushf
pushl
and
call
call
stc
cwtl
push
pushf
sub
pushf
jmp
mov
push
pushf
lea
jmp
movb
push
and
pushf
push
movw
mov
call
cmp
xor
pushf
jmp
jmp
pusha
pushf
call
pushf
popl
rcr
bsr
bt
pushl
popl
rcr
neg
dec
sbb
movl
clc
mov
sar
sub
lea
jns
ror
movzbw
xor
bswap
inc
inc
mov
bt
cmp
cmc
sub
pushf
push
pushf
pushf
lea
jmp
movsbw
pop
mov
lea
pusha
std
lea
pushf
lea
jo
std
push
xchg
std
mov
cld
call
push
call
mov
pusha
jmp
movzbw
movsbw
call
call
pusha
sub
push
pushf
call
mov
pushf
lea
mov
movzbl
mov
mov
call
jmp
call
adc
pop
lret
and
add
add
add
sub
adc
pop
mov
adc
sub
adc
adc
adc
adc
or
add
repz
sbb
add
or
adc
es
adc
add
adc
or
adc
or
adc
add
adc
repz
adc
adc
sbb
adc
add
adc
or
adc
sbb
adc
pop
mov
adc
push
fistl
add
repz
add
add
or
adc
push
cmpsl
adc
sbb
adc
push
fistl
add
add
adc
or
adc
sbb
adc
sub
adc
add
adc
pop
mov
adc
es
adc
daa
jge
add
or
adc
pop
mov
adc
add
add
sbb
adc
adc
adc
sub
adc
add
adc
sub
adc
or
adc
or
adc
sbb
adc
es
adc
dec
repz
and
add
adc
sbb
adc
sub
adc
push
cmpsl
adc
or
adc
or
add
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sub
adc
push
inc
adc
or
adc
daa
jge
add
or
adc
or
add
push
inc
adc
add
adc
add
adc
es
adc
es
adc
or
adc
adc
mov
adc
or
adc
add
adc
sub
adc
es
adc
sub
adc
and
repz
daa
push
adc
pop
lret
sub
adc
or
adc
es
adc
add
add
pop
jne
add
adc
add
adc
add
adc
or
adc
or
add
push
adc
or
adc
push
cmpsl
adc
sub
adc
push
cmpsl
adc
dec
repz
and
lret
adc
sub
adc
pop
jne
add
daa
push
adc
sub
add
add
add
sub
add
fistps
add
cmp
sub
push
pushl
movb
lea
jmp
lea
jnp
mov
push
lea
jmp
push
push
mov
jmp
pushf
popl
bswap
xchg
adc
pushl
popl
cmc
shr
clc
not
movl
xchg
xchg
pushf
mov
neg
bsr
neg
sub
cmc
ror
inc
bsf
pushf
movsbw
bswap
neg
lea
stc
sub
pushf
pushl
lea
jmp
jmp
jmp
mov
pushf
mov
jmp
mov
push
call
std
mov
pusha
call
xor
pushf
bswap
bswap
lea
cmp
sub
pusha
lea
jmp
cmp
cmp
sub
push
bt
bt
call
mov
pusha
add
movb
pushl
movb
pushf
lea
jmp
test
stc
clc
sub
clc
shr
call
setns
btc
movzbl
mov
shl
pusha
or
sbb
mov
pusha
bt
test
add
jmp
cmc
mov
push
neg
mov
clc
bt
sub
stc
jmp
pushf
pushl
mov
pushf
movl
movb
lea
jmp
mov
pushf
movb
mov
mov
lea
jmp
movw
call
ror
btc
stc
ror
pusha
ror
inc
neg
bswap
lea
pushf
lea
movb
sub
pushf
pusha
movb
lea
jmp
mov
call
jmp
add
rcr
cmc
jns
mov
bt
cmp
xor
pushf
call
pushf
push
jmp
pusha
call
pusha
mov
pushf
pushf
push
mov
lea
jmp
xchg
movzbw
movw
movw
bswap
mov
movzbw
mov
mov
push
movzbl
xchg
mov
pushf
popl
dec
cmp
mov
shr
pushl
popl
movsbw
jmp
jmp
mov
push
mov
lea
jno
pushf
pushf
xchg
call
mov
mov
call
pusha
call
neg
rol
movzbl
test
add
pushf
jmp
mov
rol
not
dec
and
sub
lea
cmc
ror
adc
test
lea
bswap
movzbw
rcl
bswap
lea
stc
sub
pusha
pusha
pushf
mov
lea
jmp
mov
pushl
mov
jmp
stc
mov
call
pushf
mov
mov
pushf
mov
pushf
mov
pushf
mov
pusha
pusha
jmp
pushf
pusha
pushl
popl
pushf
lea
jmp
sub
pushf
pushf
pusha
mov
lea
jmp
jmp
pusha
movb
mov
mov
mov
pushf
pusha
jmp
pushf
aaa
mov
bts
pushf
mov
stc
call
call
cld
pusha
rep
stc
mov
shld
shld
bsr
adc
mov
clc
cmp
cmc
pushl
popf
push
mov
lea
jmp
shr
jmp
jmp
mov
movw
mov
call
mov
pushf
jmp
jmp
cwtl
mov
shr
mov
jmp
call
mov
pusha
pushf
mov
push
mov
movb
jmp
jmp
btc
aad
mov
movzbl
clc
mov
dec
call
cmp
neg
mov
sub
cmc
stc
mov
bt
pusha
movl
sub
test
shr
pushf
pushf
push
mov
movb
pushf
jmp
pop
pushf
popl
bsr
sbb
shl
pushl
popl
xadd
xor
dec
movl
neg
sar
or
mov
shr
sub
ror
ror
pushf
bswap
push
lea
movb
sub
push
pushf
lea
jmp
mov
jmp
pushf
popl
test
sub
shr
inc
pushl
popl
inc
sbb
ror
movl
rol
cmp
and
btc
mov
shl
or
sub
btc
rol
rcr
lea
ror
or
bswap
shld
rcl
lea
pushf
call
movsbw
shl
mov
cmc
test
cmp
cmp
sub
pusha
movw
mov
pushl
lea
jmp
mov
movw
lea
jmp
stc
add
jmp
sub
pusha
push
lea
jmp
cmp
call
pushf
call
movsbw
pushf
pushf
popl
dec
pushl
popl
btr
cmp
cmc
bsr
movl
dec
movw
ror
mov
shr
or
sbb
sub
pop
call
push
jmp
pusha
pushf
pushl
popl
movb
movb
pushf
lea
jmp
rcr
mov
cmp
add
call
push
call
push
inc
clc
call
xor
shl
add
cmp
movzbl
bsr
bsr
push
shl
mov
mov
bswap
test
cmp
call
movzbl
pushf
popl
pop
pushl
popl
btr
shr
movl
bsf
rcl
rcl
mov
bswap
sub
sub
call
mov
push
pushf
call
movw
jmp
push
mov
mov
push
push
movzbw
mov
movzbw
mov
not
movsbl
movsbw
pusha
pushf
popl
and
bt
pushl
popl
cmp
stc
add
xor
movl
xor
mov
add
btc
bsr
shl
sub
bt
movsbl
call
bsf
dec
shld
lea
call
mov
pushf
mov
pushf
pushl
ret
push
mov
movsbl
not
xchg
jmp
daa
shld
clc
cltd
mov
shl
pop
cmp
shrd
ror
cmp
pop
std
popf
lea
cltd
pop
sete
pop
call
mov
push
lea
jmp
inc
mov
call
jmp
push
push
mov
pushf
lea
jno
pushf
shl
inc
adc
bt
pushl
neg
inc
push
pushf
pushf
neg
mov
inc
movw
inc
movzbw
sub
not
call
jmp
call
call
push
pusha
mov
pushf
jmp
test
pushf
xor
call
push
jmp
mov
bswap
jmp
sub
jmp
pushf
popl
push
jmp
pushf
mov
mov
jmp
call
mov
sar
dec
stc
sub
not
bts
btc
ror
rcl
or
cmp
bswap
bts
shl
rcr
shld
lea
call
inc
push
jmp
sub
pusha
lea
jmp
jmp
pushl
popl
push
lea
jmp
das
and
mov
rcr
mov
cmp
jmp
not
push
bswap
lea
jle
pushf
mov
inc
clc
lea
cmp
call
movb
movb
push
mov
movb
lea
jmp
jmp
push
movb
movb
pushl
popl
pushf
pushf
lea
jmp
lea
mov
cwtl
mov
xchg
cwtl
mov
bswap
lea
jnp
movsbl
pop
not
not
call
lea
jae
push
pushf
popl
pushf
mov
jmp
bt
bt
movb
sub
stc
sub
jns
bt
shl
push
mov
call
adc
and
or
sub
call
aam
mov
test
jmp
call
cmc
movl
ror
ror
neg
movl
or
shr
bswap
btr
dec
lea
cmc
test
pushl
bt
sub
pushf
mov
pushf
lea
jmp
mov
pusha
call
mov
pushf
push
call
jmp
push
mov
push
pushf
pushf
pushf
mov
call
mov
call
mov
sbb
bt
shrd
sub
lea
jmp
jmp
bswap
call
inc
pushf
pushl
pusha
jmp
add
push
pusha
jmp
pusha
call
xchg
bswap
movzbw
xchg
movzbw
pop
call
pushf
pushl
pusha
pop
pushf
popl
rcl
movzbw
bswap
pop
pushl
popl
stc
lea
bts
movl
rcr
sub
mov
rol
or
call
test
add
pushf
bt
pushf
sub
pushf
jmp
mov
pusha
mov
jmp
test
call
pop
xchg
mov
xchg
mov
pushf
mov
jmp
movb
mov
push
pushf
mov
lea
movsbw
movzbl
mov
movsbl
lea
mov
mov
movw
lea
pop
pushf
popl
bt
rcl
bt
pushl
popl
movzbw
pop
shl
btr
movl
add
sub
bsr
mov
bt
sub
sub
movsbw
push
ror
add
pop
shrd
bswap
ror
lea
call
cmp
clc
mov
not
bt
pusha
test
cmp
and
movb
lea
jbe
push
push
mov
call
pushl
popl
pusha
mov
push
movl
lea
jmp
call
call
call
pushf
push
pushf
popl
push
pushf
call
push
push
mov
pushf
push
mov
mov
movw
push
movw
xchg
pop
pop
push
not
push
lea
xchg
lea
not
pushf
pushf
bt
movsbl
ror
pushl
popl
sar
movzbw
not
push
cmp
jmp
cmc
ror
rol
mov
neg
bsf
bswap
btc
lea
test
pushl
test
stc
sub
pusha
lea
jmp
rcl
bt
bswap
mov
dec
mov
test
call
call
cmc
test
add
call
mov
pusha
pushl
ret
rcl
movzbw
jmp
lea
jno
sub
jo
push
pushf
mov
mov
movb
mov
pusha
push
lea
jmp
sub
pusha
btc
lea
jle
ror
sar
mov
push
pusha
bswap
rol
cmc
lea
call
pushf
popl
shl
dec
lea
bsr
pushl
popl
pushl
lea
movl
cmc
cmp
movzbw
pushf
mov
bts
sub
call
call
mov
mov
pusha
mov
movw
pushf
pusha
mov
jmp
sub
push
pusha
jmp
mov
mov
mov
lea
jmp
movzbw
mov
movl
mov
movsbw
pushf
popl
shl
movsbw
stc
pushl
popl
inc
movl
cmp
sbb
bswap
mov
shl
bt
sub
clc
bts
bts
ror
and
bswap
or
lea
bt
sub
pusha
movw
pusha
lea
jmp
pushf
movw
push
mov
push
mov
mov
pusha
lea
jmp
mov
push
pushf
jmp
mov
xchg
pushf
popl
bt
pushl
popl
sub
neg
movzbw
dec
movl
add
movsbw
or
mov
bsf
rcr
sub
ror
movsbw
ror
cmc
bt
call
lea
jnp
pushf
inc
pusha
call
jmp
inc
cmp
movw
add
clc
bt
movb
jmp
push
mov
pushf
pushf
push
lea
jmp
mov
pusha
lea
jmp
sub
test
cbtw
test
stc
cwtl
clc
bt
call
movb
inc
clc
add
bt
pusha
cmp
sub
pushf
jmp
movsbl
lea
ror
sbb
or
bswap
clc
shl
shr
btr
lea
pushf
sub
pusha
push
mov
movb
lea
jmp
xchg
mov
pushf
mov
xchg
pushf
jmp
call
shl
movl
sub
rol
jmp
xchg
jmp
call
pushf
pushf
pushf
inc
pusha
mov
pushl
lea
bt
cmp
bt
xor
push
call
pusha
xchg
call
push
push
pushf
popl
pushf
pushl
popl
pushf
pushf
lea
jmp
cmc
shl
movb
pusha
pusha
call
mov
call
jmp
pushf
pushf
popl
movw
pushl
popl
push
lea
jmp
push
bswap
pop
mov
mov
movzbw
movw
push
mov
pusha
pushf
popl
sar
pushl
popl
xor
movzbw
btc
movzbw
movl
xchg
cmp
push
mov
sub
mov
mov
bswap
sub
bswap
jmp
jmp
ror
call
jmp
mov
push
lea
jmp
pushf
mov
mov
pushf
lea
jmp
pushf
pusha
pusha
pushf
mov
mov
push
lea
jmp
mov
pusha
mov
jmp
sbb
sub
rcr
btr
rcr
neg
rcr
ror
not
btc
movsbw
and
sbb
movsbw
bswap
mov
call
push
mov
mov
jmp
pusha
mov
jmp
mov
push
pushl
movl
pushf
lea
jmp
mov
mov
pusha
mov
mov
call
cmc
pushf
add
stc
pushf
sub
clc
clc
jmp
dec
mov
clc
xor
jmp
mov
movsbl
xchg
lea
jp
pusha
pushf
popl
pusha
bts
pushl
popl
clc
movsbw
ror
movsbw
movl
or
pop
test
mov
rol
bsf
lea
sub
rcl
ror
cmc
ror
shld
test
shr
bswap
bswap
pushf
not
not
lea
mov
mov
test
movb
sub
pushf
push
lea
jmp
add
movl
jmp
pushf
xadd
xchg
mov
call
pusha
pushf
popl
jmp
pushf
inc
mov
pusha
cmc
cmc
pusha
sub
call
ror
mov
pusha
pushf
inc
jmp
setno
lahf
mov
push
mov
pushf
jmp
stc
sub
push
pusha
mov
movb
lea
jmp
mov
jmp
bts
bts
ror
adc
neg
stc
btr
bswap
inc
shld
adc
lea
stc
stc
sub
push
mov
lea
jmp
sete
clc
mov
neg
mov
push
jmp
pusha
lea
jl
inc
pushf
ror
pushf
inc
call
aaa
bsf
neg
mov
sub
mov
call
pushf
call
pushf
popl
movsbw
xchg
call
pusha
mov
mov
pusha
pushf
mov
jmp
mov
stc
lea
jmp
movb
pushf
popl
call
pushf
aas
bsf
mov
call
cmc
push
cmc
ror
test
pushl
mov
sub
clc
stc
bt
clc
ror
cmp
stc
call
stc
sub
jmp
call
mov
jmp
jmp
call
pushf
pushl
popl
movl
lea
jmp
pusha
mov
not
bswap
xchg
lea
pusha
movzbw
mov
mov
call
jmp
lea
ja
pusha
ror
aaa
sub
lea
xadd
xor
xor
lea
aaa
sub
movzbw
bsf
lea
jmp
btr
pushl
ror
movl
pusha
cmc
bswap
not
rcr
bts
lea
cmp
jmp
xchg
call
add
test
sub
mov
pushf
jmp
mov
test
push
add
pushl
bt
shrd
pushl
mov
pushf
push
pusha
pushf
popl
call
mov
bswap
pop
mov
jmp
btc
not
aas
pusha
mov
cmc
bt
sub
mov
mov
pushf
mov
pushf
movw
push
movb
lea
jmp
push
inc
stc
bt
pushf
xor
cmp
test
jmp
mov
pushf
pushf
mov
call
call
call
jmp
pusha
pusha
jmp
mov
jmp
inc
cmc
cmc
add
call
jmp
call
mov
jmp
jmp
pusha
mov
pushf
lea
jns
push
pusha
mov
pusha
call
push
push
pusha
pusha
jmp
not
cwtl
mov
call
pushl
mov
call
call
jmp
call
cmc
jmp
rol
call
call
jmp
movb
pushf
pushl
popl
push
lea
jmp
pushf
not
call
xchg
pushf
not
bswap
xchg
pushf
jmp
lea
jmp
stc
mov
bt
btc
mov
mov
cmc
pushf
movw
not
jmp
push
push
mov
jmp
pushf
popl
pushf
pushf
mov
pushl
popl
push
lea
jmp
jmp
jmp
not
jmp
add
push
push
mov
pusha
pushf
lea
jmp
rcl
mov
bsr
rol
pushf
sub
rcr
ror
and
clc
shld
neg
bswap
or
cmc
lea
pushf
test
sub
pushf
mov
push
mov
lea
jmp
inc
pusha
call
sub
movw
mov
pusha
lea
jmp
stc
ror
cmc
jmp
jmp
jmp
jmp
call
stc
call
cmc
push
sub
jmp
pusha
pushl
jmp
pushl
call
test
cmc
cbtw
cmc
clc
cwtl
push
bt
sub
call
cwtl
jp
mov
sbb
bt
mov
call
bts
not
ror
add
shl
sets
bsf
bswap
bsr
lea
setg
add
jge
sar
sub
movsbw
shrd
neg
mov
or
mov
shl
setae
shrd
add
rol
call
mov
clc
jmp
sub
pusha
pushf
lea
jmp
bswap
lea
jg
pusha
pusha
inc
clc
bt
jmp
pop
mov
pushl
pushl
ret
pusha
call
mov
call
pushf
popl
call
jmp
call
lret
add
mov
push
xchg
add
call
out
pop
pusha
jp
ret
mull
sbb
stc
jne
push
cmp
pusha
shrb
repz
es
ds
jmp
dec
test
aam
ja
or
cmp
push
xor
fwait
rolb
cmp
xchg
ss
cmc
pusha
movsl
out
inc
cmp
add
outsb
rcll
push
xchg
out
xor
jle
xor
rorl
jns
pop
pop
sarb
and
sub
call
and
dec
ss
test
and
pop
sarb
mov
cmpb
dec
in
and
pop
and
gs
cmp
outsb
hlt
mov
insb
add
add
fidivs
jecxz
enter
adc
xchg
inc
lds
loop
adc
cmp
sub
loope
sbb
xor
aam
adc
or
addr16
into
push
jecxz
jecxz
xor
xchg
cmp
clc
hlt
sub
adc
or
sub
aaa
adc
jmp
adc
jno
outsl
mov
mov
mov
icebp
jno
shll
cmpsl
adc
pop
mov
scas
mov
fdivrs
mov
mov
fcompl
inc
mov
mov
dec
stc
jp
pop
mov
lcall
inc
mov
cld
jmp
jnp
add
clc
ret
cli
ds
sbb
test
xlat
jns
sbb
mov
inc
jo
fldt
sub
lret
cs
out
mov
push
call
and
lcall
sahf
incb
xchg
dec
insb
rcll
popa
fldl
imul
mov
pop
aad
dec
enter
lret
loope
pop
into
ljmp
sub
mov
dec
push
mov
ja
addb
loop
xor
jl
ror
repz
lcall
adc
and
stos
push
sarl
or
and
push
ficoms
and
sarb
add
std
je
inc
mov
sbb
cmp
jnp
movsl
insb
mov
aas
jmp
ds
sbb
shr
inc
test
pop
mov
lcall
daa
xchg
sbb
push
jg
push
add
iret
cmp
mov
popf
or
mov
mov
js
int3
and
ficoml
pushf
enter
insb
loop
in
push
mov
movsb
push
xchg
cli
insl
fisttps
lcall
jle
xchg
mov
mov
and
dec
cmp
out
fs
adc
sti
cmp
in
lcall
mov
clc
cmp
add
iret
mov
xchg
sarb
cltd
fbstp
add
xorb
je
or
pop
jb
enter
repnz
pop
inc
sbb
dec
inc
cwtl
or
push
mov
pop
mov
or
dec
mov
add
fcoml
dec
lods
sbb
int
fstps
ds
incl
push
xor
addr16
data16
push
push
cmp
call
dec
mov
mov
adc
mov
cmp
cmp
sti
pop
fistl
inc
lods
sbb
lahf
mov
lods
dec
jge
enter
mov
sub
xchg
mov
or
pop
mov
adc
and
mov
pushl
imul
jne
sbb
add
jge
mov
decb
mov
mov
gs
mov
xchg
stos
inc
aam
inc
mov
cmp
mov
dec
fnstenv
and
in
ret
data16
loop
mov
aaa
popa
mull
cli
ds
inc
mov
adc
jae
and
push
enter
sub
aam
insl
lock
cltd
inc
cli
call
or
mov
movsl
or
push
or
cmp
int
pop
lcall
and
add
xor
rorb
and
cltd
pop
call
inc
je
mov
mov
dec
jl
jb
adc
mov
bound
fsubs
js
out
jne
pop
lds
stos
or
jo
dec
scas
enter
and
and
cld
mov
jle
rcrl
rolb
add
flds
or
loope
jbe
mov
movsl
cmpsb
adc
ret
popa
xchg
cli
enter
pop
dec
dec
ss
out
mov
sbb
int
mov
mov
arpl
fists
inc
and
cmpsb
mov
xchg
add
pusha
repnz
mov
jge
mov
mov
in
adc
fistl
les
test
cmp
roll
push
ss
fimull
xor
jecxz
in
jl
xchg
mov
test
mov
jl
das
mov
out
xchg
repnz
cmp
mov
scas
or
add
dec
pop
ret
jmp
imul
ret
pop
inc
adc
jo
outsb
frstor
dec
mov
adcb
out
mov
xchg
outsl
aad
mov
ret
and
adc
les
lea
push
cltd
adc
pop
in
ss
test
or
mov
and
aam
pop
lret
ljmp
inc
test
mov
inc
test
sahf
and
xchg
push
inc
mov
ret
add
sub
dec
or
pushf
adc
dec
mov
ljmp
imul
mov
xchg
adc
and
sub
adc
push
test
push
mov
fucomip
xchg
ret
lret
pop
mov
pop
subb
aam
lea
sti
and
stc
mov
icebp
mov
mov
adc
push
xchg
stos
ffreep
push
dec
popf
sub
dec
push
xchg
lahf
loop
out
dec
add
add
popf
pop
inc
cmp
fiaddl
clc
ficoms
sbb
leave
movsl
mov
ret
ss
push
call
test
xor
lret
inc
sub
aam
mov
push
fs
inc
jns
cmp
outsb
cld
mov
push
dec
xor
or
repz
lcall
scas
in
add
icebp
lea
fcmovbe
sti
adc
xor
xor
sbb
fidivl
dec
or
add
xchg
mov
push
cwtl
repnz
mov
push
inc
sub
out
or
aam
xchg
sub
or
mov
call
or
inc
pusha
mov
call
mov
mov
fdivrl
cs
or
mov
cli
repnz
push
push
cs
inc
ret
test
add
rorb
sub
andb
xchg
in
xchg
out
pop
fldenv
inc
lods
and
rcrl
lcall
ja
subb
lret
inc
and
aad
vmovss
jns
stc
dec
in
outsb
icebp
mov
popa
paddb
faddl
sub
push
xor
repz
add
and
aas
out
ds
mov
lahf
cmp
or
pusha
xchg
xor
je
sbb
fsubs
dec
add
nop
add
mov
repz
xchg
fidivrl
fdivr
js
cmp
movsl
sub
loop
or
push
sti
mov
and
jl
inc
insl
mov
out
jecxz
mov
mov
jmp
push
add
push
std
test
xchg
outsb
push
mov
ret
jge
mov
sbb
mov
pop
ss
dec
dec
insb
sub
loope
dec
inc
stc
and
aam
pop
movl
cwtl
popf
out
test
sarl
lcall
inc
mov
add
xchg
push
push
stos
and
repz
rcrl
xor
sbb
inc
inc
xchg
lret
dec
daa
inc
cmpsb
jecxz
aad
stos
scas
idivb
leave
inc
in
outsb
divb
repz
test
xchg
out
lret
mov
pop
bound
aas
jecxz
mov
inc
sub
pop
and
xor
add
adc
dec
or
or
repnz
into
cwtl
data16
clc
testl
jecxz
sub
loope
or
dec
jbe
ffree
dec
mov
mov
jae
inc
push
cltd
mov
mov
sbb
cmp
pop
popf
mov
cmp
and
adc
sbb
pop
sbb
iret
aas
scas
and
or
jne
cmp
iret
scas
mov
xchg
pop
fistl
aaa
stos
cltd
addb
sub
pop
push
roll
scas
mov
xlat
icebp
lahf
fidivrl
sbb
xor
adc
cmp
aaa
addr16
mov
lcall
xor
movb
movsl
pop
fidivrl
adcb
and
icebp
or
lods
outsb
sub
mov
dec
sbb
sbb
pushf
lahf
aad
and
cld
shrb
dec
mov
iret
dec
mov
mov
dec
idivb
roll
mov
into
outsb
pop
xlat
inc
ret
cmp
mov
push
jp
cmp
sti
jg
xchg
hlt
arpl
aad
mov
roll
pop
mov
mov
out
fnstcw
notb
xor
cmp
push
push
in
pop
adc
lock
cmp
loope
inc
lods
lcall
add
inc
mov
cmp
div
mov
shlb
jb
sbb
int3
mov
sub
cmp
int3
inc
add
pop
aas
divl
push
shll
cmp
xchg
or
push
insl
lcall
pop
xchg
jle
sub
sarl
jmp
rep
jecxz
mov
jns
xchg
sbb
add
leave
out
push
mov
call
xchg
adc
pusha
iret
dec
ret
xor
fcompl
loop
fwait
cld
gs
nop
dec
cmp
dec
sub
push
out
aad
rcrb
jns
dec
dec
in
outsb
sti
mov
shr
popf
push
pop
arpl
adc
repz
mov
loopne
out
or
xlat
bound
jo
addl
fmull
dec
add
mov
ret
xchg
cmp
testl
dec
movsl
sub
out
popf
or
add
sbb
call
jne
add
jl
inc
insb
mov
loope
inc
cmc
xor
or
arpl
arpl
aas
test
mov
aam
iret
rorl
fadds
cmp
pop
xchg
jne
sub
cli
out
mov
pop
pop
shrb
pusha
out
stos
and
xchg
adc
fdivl
or
imull
std
pop
into
cli
and
xchg
ds
shll
or
mov
jns
pop
cwtl
inc
xchg
inc
scas
and
aas
mov
inc
ficoms
jnp
lock
dec
mov
ljmp
in
push
lret
jmp
cld
fidivrs
gs
adc
icebp
pop
mov
js
push
jmp
jo
nop
add
jecxz,pn
mov
jae
mov
add
decl
popa
mov
lcall
add
dec
int
cmpsl
jns
arpl
sbb
shr
push
jp
jg
loope
add
insb
addr16
xchg
repnz
loopne
ret
sbb
cltd
and
call
and
mov
ljmp
xchg
sub
dec
rcrb
inc
repnz
cmp
rcr
insl
jmp
aad
pop
xor
add
dec
int
cmpsl
push
jnp
push
call
in
push
call
out
pop
dec
push
call
lods
cs
cmp
cmp
enter
jle
jo
mov
push
sub
pop
into
out
je
jne
pop
sub
xor
dec
in
rcrl
ficoml
daa
mov
pop
xor
push
ja
stos
cmove
xorb
inc
mov
ljmp
stos
and
ljmp
loopne
add
rorl
push
mov
jl
jecxz
arpl
push
inc
mov
push
sarb
pop
mov
in
jo
dec
inc
inc
imul
ljmp
sbb
add
mov
xchg
jne
mov
xchg
dec
aaa
mov
sahf
mull
sarl
adc
push
call
popa
mov
adc
mov
ljmp
and
jnp
scas
xchg
mov
inc
mov
test
data16
mov
clc
pop
enter
daa
test
addr16
loopne
mov
imulb
jns
sbb
addr16
aas
push
sbb
sbb
add
push
data16
outsl
in
cmp
iret
aaa
clc
aas
ss
dec
cld
adc
fstpl
pop
popf
dec
mov
push
jns
test
adc
pop
mov
inc
push
call
xchg
push
dec
mov
add
and
dec
lcall
jo
aam
lods
adc
xchg
mov
or
xchg
icebp
cltd
xchg
pop
dec
cmp
jne
stos
xor
jbe
imulb
mov
ret
scas
and
mov
inc
mov
ret
sub
ja
call
test
mov
aam
inc
test
sub
pop
ret
dec
mov
jg
jmp
cmpsl
xlat
lret
xor
lods
sub
ljmp
scas
xchg
call
xchg
dec
call
int
aam
inc
xlat
jne
xchg
in
pop
jmp
dec
sub
mov
xor
dec
sub
out
jle
movsb
sbb
or
outsl
mov
mov
sbb
jns
add
sub
mov
add
xor
hlt
imul
das
xchg
sti
adc
mov
adc
pusha
out
mov
shrb
ds
mov
jecxz
ret
aam
inc
aad
dec
mov
das
lahf
or
iret
jp
stos
sarb
pop
sub
out
or
fs
lds
es
lds
xchg
cmpl
neg
aad
mov
jb
mov
rclb
dec
sub
sbb
sbb
mov
fisttpll
inc
lds
lods
adc
ljmp
adc
xorb
cmp
inc
das
mov
jmp
jle
jns
or
outsb
stc
mov
arpl
pop
nop
sub
xchg
mov
cld
in
repz
dec
pop
mov
jg
loop
cli
mov
dec
cli
fcom
add
addl
add
sbb
fmull
dec
jge
addl
pop
jae
dec
icebp
sbb
das
xchg
xchg
or
popf
or
fsub
push
jge
jecxz
shll
jno
insl
mov
out
or
pop
or
xor
push
inc
mov
jecxz
adc
inc
mov
mov
mov
adc
lods
mov
es
mov
pop
rclb
add
pop
or
in
and
xchg
add
inc
pop
popa
sub
add
mov
dec
lcall
sub
stos
lods
lcall
mov
sahf
movsb
and
std
addr16
pop
iret
sub
pop
lds
iret
sbb
dec
jno
and
jge
push
sbb
push
lods
arpl
pop
addr16
ds
mov
cmp
test
ret
rorb
jp
out
push
rcll
xor
fadds
sub
sti
or
out
hlt
sbb
ljmp
out
xor
add
push
out
or
pop
and
mov
push
fisttps
daa
xchg
or
adc
in
testl
aad
and
fidivrl
jnp
jmp
adc
jecxz
fidivrs
mov
jp
mov
xorl
shrl
mov
mov
sahf
lahf
adc
push
lret
ficoml
leave
jecxz
xchg
repnz
jl
pop
cmpl
call
das
mov
je
cmp
or
in
sti
call
nop
lds
lcall
fildl
and
scas
pop
jns
iret
cmp
pop
cmpl
mov
push
pop
test
lods
sbb
scas
cmpsb
inc
add
stc
jl
lods
xchg
inc
xchg
or
jne
dec
lods
sbb
stc
push
das
pop
cltd
dec
lcall
xchg
or
out
fs
sbb
mov
mov
mov
lahf
popf
pop
jae
pusha
sbb
xchg
and
leave
push
stos
push
jge
jno
push
jns
or
mov
aaa
test
pop
push
add
pop
std
adcl
pusha
pop
mov
ret
jg
pop
inc
int3
ret
and
pushf
mov
pop
in
ss
jns
mov
push
push
cmp
push
pop
lds
loopne
es
test
inc
jle
add
int
inc
imulb
in
xchg
push
imulb
push
addb
or
mov
pop
mov
imul
jl
mul
ret
enter
fs
pushf
mov
pop
in
ss
mov
fdivr
jge
fxam
jno
dec
inc
push
and
aam
pop
movb
fsubrl
adc
test
pop
sub
sbb
mov
cmpsb
mov
cmpsl
movsb
xor
mov
sbb
xchg
sub
sbb
mov
adc
call
add
pop
je
jg
mov
sti
jns
sub
jmp
in
nop
push
fiaddl
pop
mov
fs
je
bound
dec
aam
rcrb
mov
inc
sub
pop
pop
sahf
in
jns
or
outsb
hlt
mov
mov
or
repz
imul
pop
bound
in
ds
in
xlat
aad
inc
pop
xlat
sub
or
lea
jl
test
pop
pop
inc
bt
xchg
adc
fdiv
push
xchg
mov
sub
popf
or
hlt
push
in
xor
mov
int3
loopne
sbb
mov
in
push
insl
gs
lcall
add
pop
roll
mov
in
inc
xchg
push
and
test
mov
mov
stos
cli
aaa
xor
test
out
push
add
pop
mov
sbb
push
enter
cmp
popa
mov
mov
or
popa
scas
push
dec
xor
sub
add
stc
je
add
test
addr16
dec
mov
jecxz
cwtl
aad
outsl
and
popa
inc
or
sbbb
mov
sub
mov
inc
mov
lahf
repz
jp
fistl
lcall
ror
cmp
dec
mov
mov
pcmpeqw
cmpsb
lahf
adc
sahf
rcrb
dec
jae
jne
std
cmp
push
mov
in
jae
dec
mov
jp
stc
cmp
sti
test
pop
xchg
jns
dec
lcall
or
pusha
fnstsw
adc
and
pop
mov
adc
jg
insl
lret
cmp
jne
sbb
das
jo
jns
lret
cmpsl
pushf
jns
negl
add
or
aas
cmp
sti
loope
lahf
adc
dec
pop
add
mov
cmp
aas
mov
cmp
mov
mov
ss
xor
mov
mov
lods
and
or
push
out
lea
mov
lea
and
cmp
icebp
push
clc
jg
pop
mov
in
adc
test
scas
push
and
into
dec
dec
lcall
pop
shlb
sahf
sbb
dec
sarl
sar
pop
mov
movsb
nop
xchg
repnz
jle
pusha
mov
xchg
pop
mov
xchg
adc
iret
fistpll
xchg
push
add
xor
dec
ja
mov
cltd
and
push
mov
mov
xchg
ds
sub
inc
jo
fmull
mov
mov
dec
xchg
cli
push
int3
aaa
mov
out
push
mov
pop
std
test
xchg
gs
cmpb
out
into
int
and
pop
out
xor
lcall
in
sub
push
pop
lds
jmp
sub
test
pusha
lods
lcall
mov
add
xchg
push
mulb
mov
add
jmp
pop
rorl
pusha
stos
inc
lcall
lods
and
in
dec
push
mov
addl
lret
ror
mov
inc
mov
sub
in
movsb
test
mov
pop
lds
sbb
dec
inc
lcall
and
imul
rcll
adc
das
repz
mov
sahf
and
or
xorb
out
xlat
enter
push
jae
call
mov
cmp
inc
jo
inc
mov
ss
clc
jno
push
inc
lret
adc
push
call
pusha
mov
int3
pop
inc
lcall
dec
mov
repnz
std
outsl
pop
xor
inc
sub
bound
and
dec
lea
xchg
and
cltd
sbb
jmp
and
xor
sbb
addr16
mov
ret
jp
and
lret
daa
mov
adc
sub
pop
inc
add
jl
in
sub
mov
add
out
sub
movl
xchg
ss
inc
xchg
in
xchg
push
xchg
cmpsl
and
ret
pop
add
jmp
jmp
adc
inc
push
inc
sbb
imul
dec
pop
or
int3
frstor
push
cltd
adc
xor
xor
inc
dec
cmp
jge
sub
rorl
dec
aam
push
lret
loope
sub
dec
xchg
daa
test
test
jb
imul
repz
xchg
push
data16
les
mov
sbb
jmp
adc
inc
mov
sub
push
test
imul
fs
xchg
add
in
repz
push
rcr
dec
pop
repnz
and
xlat
xor
sbb
mov
sbb
xor
test
and
xchg
pop
xchg
or
push
enter
jns
jbe
std
sub
fbld
or
popf
or
inc
je
popf
jo
mov
add
and
jmp
insl
mov
mov
popf
inc
jmp
push
call
subb
cltd
or
ljmp
xchg
fbld
inc
lcall
pop
into
sub
adc
fs
jae
push
ss
or
iret
sbb
daa
push
lods
inc
mov
insb
xchg
gs
mov
mov
push
adc
cs
addl
jo
mov
jge
insb
xchg
pushf
mov
pop
jge
xor
push
cmp
jge
fxam
and
lret
aam
push
movl
cwtl
nop
push
push
test
jno
test
lea
jecxz
xchg
push
push
movsb
and
push
jno
orb
xor
jmp
pop
filds
stos
sub
ljmp
xchg
or
sbb
inc
xchg
int
push
sub
insl
repnz
inc
loop
mov
scas
dec
cld
outsb
sahf
mov
push
iret
lods
push
xchg
cli
xor
xlat
int
pop
dec
push
jae
jecxz
mov
pop
cwtl
inc
lcall
out
inc
les
sbb
adc
cs
fildl
and
lret
cmp
scas
movsl
sarb
imull
lcall
iret
stos
push
sti
jo
jo
pop
mov
je
jne
push
enter
scas
pop
je
or
sbb
dec
lret
push
call
xor
lret
in
inc
lcall
imul
or
push
pop
xchg
scas
mov
test
sbb
fstpl
mov
imulb
std
push
mov
push
mov
xor
and
inc
and
add
scas
lods
daa
popf
ret
lcall
push
xchg
dec
enter
sahf
mov
mov
aaa
insb
std
inc
cmpsb
cmpsl
push
dec
fwait
stos
xchg
add
mov
xor
adc
inc
les
pop
inc
jb
jecxz
jae
rolb
cmp
inc
lcall
scas
sbb
mov
mov
lea
jne
sbb
sub
inc
out
out
pop
pop
les
lods
adc
dec
jb
mov
xor
mov
hlt
or
ds
test
xchg
dec
arpl
jge
inc
mov
inc
lods
fdivr
cmp
xchg
iret
test
push
push
ret
push
fwait
and
fsubr
add
vsubpd
icebp
aam
hlt
inc
lcall
stos
or
cmp
stos
aam
jge,pn
add
cmp
movsl
mov
lods
sbb
ss
das
sbb
xlat
ds
xchg
in
pop
mov
inc
lcall
sahf
push
mov
fs
push
pop
fcmovnu
jge
jge
fwait
jnp
mov
sub
dec
sahf
rcr
mov
lods
and
loopne
mov
xor
call
push
add
inc
lcall
in
shll
mov
xchg
inc
fmuls
sbb
or
fsub
push
cmpsb
jmp
jg
xchg
stos
sub
repz
xlat
inc
mov
adc
push
inc
lcall
push
shlb
push
mov
mov
sbb
dec
lahf
cmpsl
inc
das
push
rcrl
inc
sbb
ja
pop
jg
test
mov
repz
imul
pop
shrb
sbb
sub
lcall
stos
push
lcall
cmp
push
xlat
lret
out
push
mov
popf
jp
setno
mov
iret
xor
out
lret
int
into
clc
fdivrp
jg
sbb
adcb
jo
and
lds
jmp
jecxz
mov
popa
push
adc
stc
push
js
or
inc
and
jecxz
pusha
jae
cmp
or
loop
inc
xchg
icebp
push
jae
inc
inc
mov
mov
xchg
addr16
sarb
mov
sub
cmc
fbld
shrb
lret
dec
and
adc
jecxz
sarl
dec
in
outsb
repz
popa
pop
mov
and
xor
shll
adc
jmp
pusha
or
fwait
xchg
push
mov
dec
fmuls
sub
xor
movsb
int
sbb
and
pop
mov
popa
add
fimull
cwtl
rcll
cwtl
lea
sub
call
in
in
sbb
in
or
mov
jns
inc
outsl
mov
scas
daa
inc
lcall
fadds
mov
and
mov
adc
test
sti
gs
loope
aad
shlb
je
dec
fldenv
dec
and
xchg
xchg
pop
jbe
push
push
lahf
inc
lcall
or
popa
daa
xchg
mov
sti
divb
adc
xor
cmp
pusha
hlt
fcmove
xor
aad
mov
xchg
into
es
aad
cmp
sbb
sub
or
pop
ret
dec
pop
and
mov
faddl
sub
das
pop
aam
add
jae
cmp
lcall
dec
mov
adc
adc
sub
pop
cwtl
push
mov
add
rolb
xchg
mov
xor
jp
push
out
bsf
mov
xlat
pop
ret
mov
lcall
jmp
sbb
add
sub
xor
int3
sub
fstpl
cmc
push
outsb
xchg
jo
scas
imul
fcmovnb
push
lock
outsl
loope
mov
out
jno
push
sub
int3
dec
lea
insb
jno
mov
pop
std
ss
inc
pop
sbb
jge
pop
in
mov
jns
pop
pop
les
loopne
and
xchg
xor
mov
ss
repz
xchg
push
push
test
add
lds
enter
fimuls
cltd
std
adc
push
inc
fdivl
push
add
pop
lcall
mov
mov
data16
cmpsb
sub
jno
push
dec
mov
push
ret
xor
stos
dec
bound
ljmp
cmp
imul
jmp
jbe
pop
cmp
neg
mov
repz
loop
test
push
rcrb
fistpl
cmp
cs
xorb
mov
sub
jo
pop
mov
cld
and
cltd
cmp
jmp
addr16
ja
xchg
pop
lcall
adc
mov
cltd
cmpsl
rcrl
mov
add
std
pop
dec
cmp
pop
sub
dec
adc
loop
les
in
xchg
add
push
fmull
sub
shr
cs
mov
inc
pop
lcall
adc
mov
jae
ficoml
mov
aaa
js
push
call
push
roll
xor
cmp
aas
je
pushl
lds
cmp
ds
add
mov
pop
in
mov
or
jnp
jno
data16
inc
mov
mov
inc
dec
cld
loopne
and
out
shlb
xor
mov
scas
sbb
or
mov
jecxz
sarb
cmc
dec
in
int
shll
cmp
jmp
imul
xorb
ljmp
mov
jle
mov
shlb
aas
inc
cwtl
pop
mov
jecxz
in
repz
in
xchg
in
jno
scas
or
or
lock
add
push
lcall
or
je
gs
mov
rcrb
clc
js
ret
jns
inc
sarb
out
dec
xchg
das
xchg
pop
jbe
push
mov
hlt
pop
shr
adc
sbb
pop
lcall
or
dec
mov
icebp
or
aas
inc
jmp
sbb
insl
data16
lods
pusha
fdivrs
push
mov
mov
push
scas
mov
or
lret
ja
in
insb
lret
xchg
scas
xor
pop
fwait
out
nop
mov
pop
ljmp
push
sub
jae
add
repnz
leave
mov
inc
cmp
fstp
and
dec
xchg
ljmp
mov
xchg
test
nop
adc
sbb
nop
sarb
out
and
mov
fists
xchg
sbb
add
sub
inc
and
cltd
test
cmp
and
pop
lcall
mov
movsl
adc
popf
mov
test
jns
cmp
iret
mov
push
mov
add
insl
and
loopne
lods
sub
pop
subl
jp
lcall
push
call
pop
push
scas
push
lret
lahf
leave
or
ljmp
xor
and
test
shlb
mov
daa
outsl
jmp
inc
pop
shl
xchg
adc
xchg
jnp
push
and
mov
mov
jo
jmp
lcall
xor
mov
mov
sub
and
outsl
pop
push
andb
or
or
mov
hlt
pop
int3
das
jo
xor
lahf
ret
dec
mov
pop
lcall
pop
ffreep
xchg
jge
xorl
jns
test
loopne
mov
hlt
jb
dec
xchg
arpl
imul
enter
dec
xor
andb
jl
jl
dec
cltd
ds
xor
xchg
ljmp
inc
mov
lock
mov
inc
cmp
call
xchg
adc
inc
mov
sbb
dec
cmpl
sub
outsl
push
sbbb
std
mov
xchg
insb
mov
pusha
jp
gs
iret
iret
cmp
mov
pop
lods
ss
jle
sbb
jge
sub
sbb
xchg
aam
pop
movb
shrl
mov
jl
mov
pushf
add
adc
inc
mov
in
xchg
push
push
movsl
movsb
jne
repnz
call
mov
pushf
pop
aad
sub
pop
lcall
push
shl
ret
out
les
int
push
cmp
mov
cmc
insl
or
cmpsl
push
loope
mov
pop
das
mov
ret
push
mov
pushf
add
lret
cmp
add
call
pop
lcall
cwtl
adc
pushf
add
and
mov
push
fadds
and
mov
int3
push
inc
lahf
pop
test
cmp
inc
cs
xchg
jmp
aad
mov
jns
test
mov
addr16
shrl
dec
loop
stos
ljmp
adc
mov
leave
and
cmpsb
jo
fistpll
int
xor
xchg
mov
and
stos
ja
ss
mov
mov
xchg
jp
es
pop
mov
scas
push
sub
loope
or
sub
mov
jmp
sti
jmp
clc
jno
inc
fs
add
adc
aas
mov
cmp
push
pop
mov
and
xchg
pushf
sti
push
repnz
dec
fdivrl
adc
es
jp
jp
or
pushl
xchg
cmp
loop
out
jno
int
repz
rclb
push
xor
imul
jmp
mov
aas
lret
add
std
or
aam
fdivrl
ja
loope
push
xchg
add
sahf
je
adc
sbb
sti
imul
jl
aaa
cmpsl
ret
imul
inc
rcll
sub
mov
fs
pop
loop
cmpsl
and
mov
jns
jge
cmp
push
mov
es
xchg
pop
bound
sti
push
bnd
jp
xlat
pop
iret
stos
pop
shlb
or
or
insl
std
insl
hlt
pop
mov
pop
loope
out
jno
push
rclb
imul
xor
xchg
hlt
pusha
notb
mov
addr16
cmp
stos
cmp
dec
cwtl
add
clc
outsb
or
adc
lods
cmp
mov
inc
mov
cld
jle
mov
stc
or
ret
mov
stos
jo
addr16
sbb
repnz
das
test
inc
push
xor
daa
ds
dec
mov
jle
imul
inc
int3
inc
and
pop
bound
iret
cmp
xchg
sbb
insb
or
mov
lock
push
mov
or
or
xchg
add
pop
xchg
repnz
or
mov
push
fs
fwait
or
jns
pop
int3
stos
data16
inc
and
cli
popf
insb
jmp
inc
aam
dec
leave
ljmp
movsb
cmp
inc
sahf
push
mov
es
sub
popa
in
sbb
adc
jnp
mov
mov
popa
icebp
nop
arpl
xchg
addr16
dec
ret
mov
fs
popf
insb
mov
xchg
mov
stos
cmp
or
mov
rcrb
cmpsb
pushl
xchg
cmp
add
mov
jg
and
insb
loop
je
pop
leave
pop
cmp
pusha
aad
shll
movsb
ret
ds
out
jns
mov
sub
data16
xchg
outsb
lods
cwtl
add
lods
cmp
mov
gs
jl
out
jg
jmp
xor
dec
and
lret
mov
mov
mov
sbb
pop
jecxz
push
in
mov
sahf
stc
or
cmp
push
lret
inc
xlat
mov
mov
push
mov
cli
push
mov
js
jp
inc
aam
dec
jmp
cmp
sub
ss
mov
js
add
cmp
adc
add
or
xor
mov
cltd
push
pushf
sti
push
mov
out
movsl
xor
add
std
or
in
in
mov
psubd
jnp
jo
loop
fldl
mov
faddl
mov
or
dec
int
and
cmp
adc
or
jle
outsl
lcall
sub
imul
and
inc
ss
inc
mov
pop
fwait
or
push
pxor
mov
js
insl
jne
xchg
cmc
add
fcoml
cmpsl
push
cmc
mov
shlb
push
scas
aas
pop
test
push
cmpsl
adc
cltd
or
xor
pop
into
test
stc
cwtl
imul
insb
or
mov
icebp
popa
add
pop
mov
mov
jb
xchg
int
lds
sub
add
roll
sarl
pop
push
xor
daa
mov
mov
push
mov
mov
add
dec
mov
jmp
into
mov
stos
int
fnstcw
sub
adcl
lock
bound
repnz
lret
jbe
cmpl
mov
lods
and
cld
xchg
cmc
add
jb
insb
or
les
mov
sahf
je
jne
out
inc
adc
mov
lahf
dec
fimuls
push
lods
cmp
test
jge
cmp
pop
int
addr16
inc
and
adc
hlt
pop
out
xchg
add
jnp
js
mov
arpl
xchg
testb
and
jmp
lcall
in
mov
gs
jl
sti
imul
push
or
roll
dec
cltd
popa
jmp
push
in
push
popf
sbb
fldt
or
test
in
lock
push
cmpsl
add
cs
xlat
inc
and
or
repz
inc
and
jns
fs
popf
insb
fisubl
cwtl
adc
jl
arpl
cmc
pop
scas
cmp
mov
jg
and
inc
shlb
aaa
push
mov
jle
dec
cmp
dec
sbbl
daa
mov
in
jmp
push
les
das
dec
mov
loope
clc
cwtl
sbb
leave
pop
cmp
sub
fwait
or
mov
pushf
sti
push
roll
cmp
cmp
inc
shlb
pushf
sti
push
in
notl
push
fisttpll
out
push
jno
jecxz
and
movsl
sub
mov
imul
jb
jbe
loopne
cwtl
or
mulb
dec
insb
add
movsl
xor
rolb
sarb
scas
cmp
mov
cmc
gs
pop
aaa
mov
inc
mov
mov
mov
imul
insl
adcl
xor
and
mov
or
es
mov
test
fildll
int3
mov
dec
iret
pop
cmp
add
push
xor
xor
ljmp
stc
out
and
sti
jo
xorl
aad
test
and
loopne
mulb
pop
lret
mov
in
mov
aaa
ret
insb
or
mov
and
pop
iret
stos
pop
mov
mov
xchg
repnz
insl
ret
shll
add
xor
lds
and
sub
push
shll
xchg
mov
xchg
add
adc
out
adc
push
gs
insb
in
jge
negl
hlt
sbb
fisttps
flds
repz
mov
outsl
call
in
outsl
lcall
fidivrs
and
int3
inc
and
mov
and
pop
leave
test
and
jle
test
jle
mov
jmp
nop
mov
mov
cwtl
pop
iret
pop
cmp
jle
lds
iret
jl
lods
cmp
and
xor
sti
imul
cmp
fadd
pop
int
addr16
mov
ret
rorl
movsb
push
rcrb
push
aaa
ret
gs
pushf
outsl
movsb
ljmp
test
repz
xchg
iret
dec
fistpll
mov
sbb
dec
lret
lret
fisttpll
out
push
fisttpll
out
xchg
in
notb
cld
push
lea
and
xchg
or
dec
pop
roll
rcll
cmp
clc
outsb
or
dec
fmuls
mov
test
cmp
dec
loop
xor
sub
rorl
mov
mov
xchg
add
push
mov
shr
in
jle
push
int3
inc
and
std
test
out
out
mov
dec
iret
pop
cmp
push
pop
fmuls
fdivs
rclb
mov
bound
shll
aam
dec
cltd
jne
addr16
or
mov
inc
mov
into
inc
fidivrl
pop
jp
jne
popa
icebp
nop
arpl
in
adc
ds
shlb
adc
inc
xchg
sbb
lock
aam
ret
push
lds
mov
out
in
jle
in
jp
jp
rorb
mov
fs
dec
sbb
or
sub
rcll
sub
call
gs
pop
int
loopw
aam
sub
xchg
testb
call
aas
fdivrs
ret
push
lds
xor
push
rolb
shlb
jae
pop
rolb
shlb
addr16
bound
mov
sbb
lock
mov
rcrl
xchg
addr16
adc
mov
fmuls
fcomps
fs
jg
jmp
lds
mull
icebp
push
mov
test
dec
frstor
les
test
push
cmp
fs
cmp
mov
pusha
notb
test
cmp
scas
xor
mov
mov
and
popf
or
arpl
xchg
gs
imul
sbb
add
adcb
subb
xchg
cmc
add
jne
popa
add
paddusw
scas
pop
lea
test
xchg
repnz
mov
xchg
icebp
add
mov
nop
testl
aas
lret
adc
in
sbb
jmp
sti
sahf
insl
int3
mov
jmp
cmp
int3
imul
jae
cmp
lahf
punpckhdq
loopne
mov
imul
pusha
notb
jnp
in
inc
sub
jo
add
std
or
lcall
in
sbb
lock
bound
jo
insl
icebp
popa
add
jbe
rcll
inc
xchg
adc
in
sbb
cmp
lahf
sbb
cld
adcl
test
pop
enter
cmp
jmp
push
in
push
dec
iret
pop
cmp
aas
cmp
dec
scas
and
repz
mov
jae
push
lds
iret
push
ja
xorb
pop
into
test
mov
out
popa
icebp
nop
arpl
cld
insl
std
test
lods
inc
shll
lret
scas
pop
xacquire
xchg
adc
int3
gs
mov
das
lcall
push
into
pop
cmp
adc
pop
out
sahf
or
cmpsb
dec
or
je
aad
sub
pop
push
xchg
jb
or
fs
popf
insb
movsl
jmp
cltd
push
decl
loop
sbb
les
mov
mov
and
movb
inc
mov
mov
js
popa
mov
nop
testl
out
sbb
in
lock
data16
xchg
outsb
popf
insb
loop
pop
loop
in
popa
icebp
nop
arpl
mov
les
mov
mov
sbb
sub
cmp
inc
call
mov
sbb
push
cmc
push
pushf
xor
addr16
lock
bound
lret
ja
xorb
clc
outsb
or
jg
aas
scas
lret
sub
xor
push
cmp
xor
xchg
gs
pop
nop
push
popa
nop
inc
divl
xorb
jecxz
push
in
stos
and
movsl
xor
notl
dec
push
xor
cmp
mov
jle
sub
test
jecxz
push
in
lret
inc
aam
dec
jmp
imul
in
inc
pop
int3
inc
and
out
jo
mov
cwtl
pushf
or
pop
jp
and
mov
adc
push
shll
or
shlb
out
sbb
shlb
inc
push
xor
pop
pop
fisttpll
out
dec
leave
pop
cmp
and
dec
frstor
call
mov
and
add
loopw
pop
loop
rcrb
scas
pop
test
mov
sbb
iret
stos
pop
xchg
mov
scas
leave
cmp
pop
jge
dec
fists
cmpsl
push
cmc
lea
cmp
jno
ja
loope
sbb
add
cmp
mov
xor
lahf
punpckhdq
xchg
xor
outsb
cld
fwait
jbe
test
inc
fdivl
in
xchg
adc
push
les
lcall
mov
and
jge
insb
or
out
and
pop
xchg
mov
sbb
xchg
or
dec
and
mov
rclb
dec
adc
push
inc
roll
aad
push
sahf
or
cmpsb
inc
aaa
mov
stc
jne
mov
jle
addr16
sub
ds
test
rcrl
stos
shl
in
jg
pop
mov
gs
cmp
inc
incb
xchg
add
add
pop
jp
and
fisttpl
mov
push
cld
aas
add
fs
xchg
cmc
add
int
lret
mov
push
lahf
push
dec
xlat
inc
and
pop
popa
loope
adc
sub
scas
int
ret
cmpsb
push
mov
movsl
inc
mov
mov
out
sti
jge
je
jo
aam
sub
add
addr16
je
xlat
inc
and
cmp
fildll
jp
in
dec
pusha
in
jge
mull
cmp
cmp
dec
fisttpll
out
enter
pop
lock
xchg
or
cli
push
pop
xchg
adc
stos
push
mov
mov
and
cmp
sbb
adc
mov
imul
pop
repnz
jns
jmp
pop
rclb
inc
sbb
gs
adc
push
inc
push
xor
les
mov
fwait
decb
pop
loop
mov
movsl
int3
aas
enter
repnz
imul
adc
sbb
pop
lret
scas
pop
mov
lcall
push
popf
or
roll
aad
and
push
fisttpll
out
fsts
pop
sti
pop
xchg
add
and
jmp
imul
inc
aam
sub
push
aaa
ret
xchg
jb
es
jne
out
pop
mov
nop
pop
les
int3
popf
or
dec
frstor
out
sti
fwait
or
pop
int3
stos
data16
aam
sub
stc
cwtl
imul
mov
mov
xchg
jae
and
xchg
sbb
mov
inc
mov
push
mov
js
popa
mov
lods
mov
mov
out
jg
jmp
shlb
aam
repz
gs
mov
jle
addr16
sub
stc
mov
xchg
mov
sahf
outsl
cld
xchg
cmc
add
jns
jg
jmp
sub
mov
pop
iret
stos
pop
into
jp
jl
testb
pop
cmp
outsl
sub
jge
je
out
or
inc
shlb
aam
dec
cmpsb
mov
cmpsb
mov
rorl
and
inc
out
insl
std
test
xlat
push
les
pop
jp
imul
xor
ret
ds
xor
jmp
xorb
psubd
jae
push
push
ret
cmpsb
push
hlt
mov
out
imul
sbb
das
xchg
sbb
jbe
cmpl
jo
xorl
jle
jle
jge
negl
es
mov
push
lds
iret
add
jno
xorb
stos
cmp
push
mov
std
or
fmull
mov
insl
hlt
pop
add
repz
gs
fimull
ficoml
jp
outsl
or
out
push
sahf
or
cmpsb
dec
adc
rcll
lods
pop
mov
mov
sbb
cmp
mov
std
or
lods
and
or
movsl
sub
lds
adcl
out
mov
xor
and
test
mov
ret
push
lds
xchg
add
sahf
aaa
jge
arpl
cmc
inc
scas
cmp
lock
xchg
outsb
fistpll
lahf
pop
enter
jg
cld
xchg
cmc
add
cld
data16
xchg
outsb
lods
push
mov
ret
pop
leave
test
mov
fimull
fidivl
adc
push
pop
into
test
jp
in
and
cmp
pop
popf
or
inc
and
cmp
sahf
or
cmpsb
pop
imul
mov
stos
into
cmp
loop
idivl
push
cld
subps
inc
sub
aas
pop
inc
and
cmp
jo
xorl
jge
aaa
mov
cmpsl
sub
mov
or
or
cmpsb
adc
je
lea
mov
jle
jge
negl
and
mov
pop
repz
ss
mov
xor
test
aam
out
leave
pop
cmp
sub
mov
cmc
insb
loop
je
imulb
cltd
push
xor
adc
daa
cmpsb
sub
out
adc
pop
xchg
adc
xchg
or
aad
shlb
or
or
jg
mov
xor
jno
push
insb
or
loop
cmpsb
xor
scas
pop
dec
ret
ret
cmpsb
xor
scas
jp
add
int3
inc
and
arpl
cmc
inc
fisttps
push
std
or
std
insb
loop
je
outsb
clc
outsb
or
dec
cmp
lods
aas
scas
lret
sbb
dec
aad
sub
push
cs
or
cmc
insb
loop
je
pop
les
int3
dec
clc
gs
pushf
outsl
ljmp
lock
xorb
ret
push
lds
xor
pop
pop
fisttpll
out
mov
stos
into
cmp
sbb
add
push
cld
adc
adc
or
mov
jle
outsl
lret
inc
shlb
mov
sbb
jb
jge
addr16
cmp
inc
out
adcl
xor
or
inc
shlb
cwtl
decl
mov
pop
hlt
cmp
int3
pop
iret
stos
pop
rolb
adc
cmp
aas
movsl
xor
push
test
push
testb
movsb
ret
ds
mov
lea
pushf
sti
push
dec
dec
fnstcw
cli
popf
insb
mov
push
xor
aas
mov
cmp
cs
mov
add
sbb
push
cmp
ds
dec
ret
mov
push
mov
enter
leave
inc
aad
dec
ljmp
mov
cld
or
pop
jb
sub
sub
inc
and
ja
imul
insl
fidivrl
test
mov
aad
xchg
ljmp
roll
aad
jecxz
in
jle
pusha
cli
push
adcl
pop
int3
stos
mov
lock
bound
movb
jo
loop
add
in
cmc
pushf
outsl
test
xchg
pop
bound
sbb
adc
pop
ljmp
or
push
xor
int
aam
data16
xchg
outsb
popf
push
mov
jle
imul
mov
loope
adc
adc
mov
jmp
cmpsl
addr16
sbb
xor
mov
mov
and
xlat
fs
jbe
loopne
mov
mov
sbb
add
fsubrl
push
test
push
mov
fistps
mov
xchg
adc
sahf
push
xchg
repz
in
cmpsl
aaa
push
mov
xlat
and
xchg
adc
ret
push
lds
mov
dec
into
pop
cmp
les
mov
xor
pop
jp
inc
add
add
push
fisttpll
out
mov
test
rcll
and
inc
mov
stos
cmp
or
xor
int
call
cmp
imul
insl
int3
cmpsl
cmp
mov
xchg
pop
xchg
repnz
fwait
xor
push
xor
jle
cmc
gs
push
push
insb
or
mov
add
fisttps
fldenv
add
std
or
sahf
push
xchg
repz
in
js
mov
gs
imul
fdivrl
add
pop
jbe
imul
adc
pop
leave
test
mov
in
sbb
or
dec
sub
daa
cmpsb
daa
mov
and
mov
sahf
stc
or
hlt
ja
xorb
mov
jns
jnp
inc
aad
dec
scas
int3
inc
fidivrl
mov
es
mov
jmp
cli
popf
insb
mov
add
sub
mov
and
mov
dec
mov
adc
dec
sbb
sbb
cmp
pushf
mov
add
jecxz
out
mov
imull
je
dec
rolb
sarb
pop
int
addr16
filds
mov
enter
pop
bnd
cld
xchg
cmc
add
test
xchg
repz
out
sbb
arpl
xchg
xchg
stos
xor
xchg
add
movl
call
mov
aad
pop
int
sbbl
cli
je
lea
jmp
mov
test
inc
shlb
out
mov
dec
fstpt
mov
sbb
call
es
add
add
cmp
add
mov
sbb
xchg
push
rorl
mov
insl
hlt
pop
out
mov
xchg
adc
cli
fs
popf
insb
jmp
and
jns
mov
aas
mov
mov
scas
rclb
mov
mov
sbb
adc
add
inc
push
jl
testb
or
fldt
popa
ljmp
cld
fwait
jbe
mov
lods
lret
inc
mov
push
lahf
push
jb
xchg
testb
sbb
daa
stos
cmp
or
and
pop
mov
inc
aam
dec
incl
mov
inc
xlat
mov
pop
iret
pop
cmp
jle
sbb
inc
aad
sub
jp
push
les
inc
and
and
pop
add
jbe
jle
call
dec
mov
mov
mov
pop
int3
stos
data16
xchg
add
jp
sub
pop
cmp
add
push
mov
stos
int
iret
lock
mov
push
sahf
or
cmpsb
inc
ljmp
mov
mov
loope
adc
lea
int3
inc
and
repz
gs
lock
lds
xorl
rcll
push
push
mov
and
push
xchg
sub
pop
icebp
outsl
lcall
lcall
mov
push
pushf
sti
push
xchg
sub
sahf
and
add
pop
xchg
adc
jmp
jecxz
jne
push
xchg
jb
pop
xchg
nop
testl
daa
sarb
mov
enter
test
mov
dec
mov
js
jp
rcll
data16
fs
sub
imul
cmp
test
jge
sub
push
xor
jbe
inc
aad
dec
in
inc
aad
dec
cld
mov
mov
sbb
fsubrs
xlat
inc
and
jbe
pop
iret
stos
pop
rorb
dec
sub
jg
lret
pop
ds
sub
pushf
add
std
or
lods
cmp
fistpl
inc
fidivrl
stos
int
cmc
lods
cs
movsl
xor
sbb
push
lds
cmpsb
push
test
xchg
cmc
add
or
pop
fisttpl
cwtl
adc
and
test
pop
test
lahf
pop
xchg
adc
inc
xchg
mov
lock
jmp
rcll
push
out
rolb
sarb
loopne
adc
push
popa
add
pop
mov
mov
cs
dec
fmuls
fdivs
jp
jp
fisttpl
mov
outsb
or
cmp
sbb
punpckhwd
addr16
adc
dec
mov
repz
gs
pushf
outsl
ljmp
es
cmp
inc
outsb
out
jl
negb
add
rolb
dec
mov
push
lahf
push
popa
jmp
push
in
push
sahf
sbb
and
popl
std
or
or
outsl
orl
decl
stc
movsb
sub
int3
inc
and
gs
aas
sub
roll
shll
mov
jg
and
jge
testl
dec
fldt
pop
lret
scas
pop
repnz
xchg
adc
mov
mov
jecxz
loop
pop
loop
pop
test
push
insb
repnz
pop
bnd
lods
and
xor
je
inc
fidivrl
lds
sub
cmp
jns
mov
pop
nop
push
popa
nop
inc
imul
add
add
dec
sub
int3
stos
xchg
icebp
jp
jp
inc
into
pop
cmp
xor
push
xor
cmp
cmp
cmp
cmp
sub
xchg
add
std
or
push
push
xor
addr16
mov
xchg
daa
mov
mov
sbb
decb
push
les
and
mov
inc
in
mov
add
pop
ret
ret
fimull
fidivl
mov
test
lock
and
es
cmp
inc
jns
outsl
or
out
popa
loopne
adc
add
rcrb
addb
repz
sti
pusha
jmp
push
in
add
cli
movsl
cs
pop
int3
stos
data16
in
jg
push
fisttps
flds
mov
jg
pop
sahf
adc
cmp
sub
lds
arpl
add
pop
jns
jg
jmp
push
mov
mov
ja
loope
sbb
or
out
jg
jmp
xorb
mov
xor
cmpsb
cmp
jle
mov
lock
test
xchg
repz
out
insb
or
out
jle
insl
hlt
pop
loopne
outsl
lcall
mov
xchg
mov
sahf
stc
or
cmp
cmp
dec
orb
clc
or
mov
xchg
lock
mov
rcrl
lcall
cmp
popf
or
cmp
xchg
jb
outsl
std
insl
hlt
pop
mov
adcl
push
ret
cmpsb
push
loop
inc
aad
dec
in
icebp
popa
add
inc
mov
xchg
jns
jno
jecxz
pusha
stc
imul
dec
fnsave
and
push
iret
pop
cmp
push
jge
jo
loop
clc
jp
jp
xchg
push
test
push
test
shll
mov
fimuls
sbb
jnp
mov
sub
ljmp
mov
lea
xchg
repz
in
aas
mov
dec
mov
jbe
jo
aas
scas
lret
es
aas
pop
test
push
mov
popf
insb
lret
inc
rolb
shlb
dec
fidivrs
dec
sub
push
xor
sbb
sbb
cmp
dec
fimull
fisubrl
mov
rep
lcall
aad
dec
scas
sbbb
out
sbb
ja
jl
negb
cmpsb
cmp
fisttps
fldenv
mov
jle
inc
enter
dec
mov
popa
xchg
js
ljmp
in
arpl
jp
in
cmp
rcrb
push
in
out
imul
insl
cwtl
loop
lcall
stos
into
cmp
leave
cmp
mov
xchg
pop
roll
roll
and
jmp
hlt
xchg
outsb
leave
movsb
movsb
ret
ds
push
sbb
inc
fisttpl
fnsave
and
and
cmp
adcl
sub
lds
popf
push
xchg
repz
in
add
xor
dec
imulb
test
lds
test
ficomps
test
jge
je
dec
push
mov
sbb
push
adc
jno
jecxz
lds
mov
xchg
pop
xchg
add
fs
lret
pop
ds
rcrb
scas
pop
test
stc
in
inc
xlat
mov
stos
into
inc
aad
dec
mov
fs
sub
inc
mov
addb
sbb
sub
sbb
das
test
addr16
dec
mov
lahf
fmull
mov
pop
jp
ds
lahf
adc
out
jnp
mov
sbb
pusha
clc
outsb
or
adc
fsubr
jbe
cmpl
repz
cmc
je
into
pop
cmp
pop
cmp
test
std
or
dec
int3
inc
and
and
dec
dec
int3
inc
and
dec
sub
adc
notl
repz
fistl
mov
push
xor
sub
xchg
add
sahf
insl
gs
popl
xchg
icebp
add
xchg
push
mov
es
xchg
add
xor
daa
xchg
mov
sahf
pop
lea
mov
inc
mov
jl
cmp
mov
inc
mov
outsb
cli
push
mov
inc
mov
mov
out
ret
pop
into
test
cmp
inc
jle
jne
out
add
out
imul
lds
and
pop
xchg
adc
cwtl
push
imul
cmp
mov
mov
xor
in
push
jl
outsl
or
out
mov
scas
leave
cmp
adc
fcoms
mov
and
loope
fisttpl
fnstsw
loope
jae
mov
nop
testl
pop
test
enter
pop
in
scas
inc
shll
js
ljmp
jmp
out
pop
dec
fmuls
fdivs
xchg
pop
bound
decb
jbe
inc
adc
je
cmp
es
cs
movsl
cmp
jb
xchg
adc
rolb
inc
test
scas
inc
pushf
and
out
jg
jmp
mov
sbb
mov
xchg
jle
jne
mov
lock
mov
outsb
out
adc
or
outsb
loopne
adc
inc
or
jb
insb
or
rcrl
stos
shlw
xlat
inc
fidivrl
outsb
or
dec
outsl
insb
or
scas
pop
leave
pop
cmp
js
push
lret
cmc
adc
arpl
xchg
les
push
cmp
push
test
mov
lret
pop
ds
cld
imul
insl
adcl
add
adc
outsl
lcall
add
pop
insl
out
jl
negb
xor
mov
fcoml
inc
and
das
fistpl
fs
in
sbb
mov
pop
int3
stos
xchg
and
push
std
jnp
mov
fistl
cmpsl
push
mov
shrl
hlt
xchg
outsb
mov
int3
push
into
inc
shll
punpckhdq
ljmp
cs
dec
fimuls
dec
jge
jns
jmp
lcall
ljmp
bound
dec
sub
and
setg
or
pop
rclb
sub
shrb
mov
dec
mov
jp
adc
dec
fdivrl
cs
mov
out
cli
mov
les
jbe
loopne
mov
mov
inc
shll
mov
sbb
inc
mov
adc
and
lret
scas
xchg
sbb
mov
js
pop
xor
test
jge
sub
popf
push
les
int3
mov
mov
sbb
jge
adc
xor
jnp
mov
cltd
adc
ret
ret
insb
loop
je
or
rorl
mov
cmp
inc
scas
aaa
cmpsl
ret
mov
test
cmp
mov
stos
sbb
adc
jns
sub
fisttpl
fisttpll
rolb
shlb
xor
sbb
idivb
mov
sub
adc
adc
in
sbb
ficoms
mov
xchg
repnz
movsb
das
mov
mov
dec
fisttpll
out
mov
xchg
sahf
or
cmpsb
emms
out
adc
pop
lods
cmp
in
bound
mov
es
pushf
into
pop
lret
scas
pop
mov
andl
and
ret
push
imul
jl
ret
push
lds
jg
xchg
cmc
add
lods
sub
lds
dec
enter
sub
mov
js
pop
mov
mov
aad
sub
xor
sub
mov
shlb
adc
gs
adc
in
sbb
jmp
sti
sahf
insl
int3
cmp
and
gs
roll
rcll
in
lcall
dec
sub
push
scas
cmp
mov
in
xor
sbb
and
sbb
xchg
cmc
add
fmuls
movsb
push
cld
lret
stos
shlw
mov
fimuls
sub
aas
pop
popf
or
pop
rorb
push
roll
movsb
pushf
push
mov
es
inc
lret
pop
ds
lea
and
sti
dec
int
and
xor
test
jne
mov
push
mov
jg
jg
sbb
mov
inc
mov
adc
or
pop
jp
jae
notl
test
mov
jge
mull
adc
push
dec
cmp
cmp
mov
hlt
gs
pushf
outsl
fisttps
movsb
push
in
iret
pop
cmp
jle
fs
popf
insb
fst
inc
aad
dec
in
push
xor
jns
popa
icebp
nop
arpl
ja
arpl
cmc
xor
call
movsb
dec
xor
dec
aad
sub
pop
enter
pop
fidivrl
push
sbb
dec
frstor
adc
pop
cmp
ss
or
dec
mov
fmuls
mov
jg
lock
jp
pop
rolb
shlb
jo
outsb
or
sbb
into
pop
cmp
and
mov
pop
stos
jle
scas
aas
pop
test
xchg
addr16
aad
dec
sti
xchg
add
lahf
or
cwtl
setg
or
pop
mov
fimull
fidivl
loope
adc
push
jo
jnp
in
dec
aas
stos
cmp
push
xchg
in
stos
cmp
inc
lods
xor
mov
fs
adc
daa
int3
dec
frstor
pop
stos
inc
mov
mov
cmp
addl
pop
cltd
or
insb
in
push
jge
gs
push
ret
mov
or
jle
cmp
jne
mov
fcoms
lods
pop
mov
fistpl
mov
stc
mov
mov
inc
mov
sbb
add
lret
xchg
fs
daa
mov
and
lahf
sub
jb
xchg
cwtl
add
fisttpll
out
push
roll
aad
push
int3
inc
and
xchg
testb
push
hlt
jbe
cmpl
push
xor
daa
xor
enter
dec
mov
mov
jle
jne
sbb
dec
fnstcw
xchg
lock
lods
es
cs
dec
fnstcw
dec
adc
add
popf
adc
xlat
inc
and
or
mov
gs
push
leave
inc
fidivrl
add
mov
inc
mov
insb
cld
xchg
cmc
add
mov
sahf
sbb
sbb
add
std
or
loope
ljmp
dec
movb
js
scas
aas
pop
test
test
notl
movsl
cmp
dec
frstor
mov
lods
xchg
adc
sbb
and
fwait
or
dec
cmp
stos
sub
imul
adc
sbb
sahf
or
cmpsb
inc
cwtl
adc
cmp
dec
lds
iret
push
add
or
sub
lds
cmp
clc
imul
mov
adc
push
cwtl
push
imul
jge
je
xor
xchg
insl
std
test
push
into
pop
cmp
xor
pop
rcrl
pop
mov
enter
dec
jle
ja
loope
or
movsb
and
push
les
push
xor
sub
and
dec
cs
aas
pop
test
shll
aad
jp
jp
stc
jno
xorb
or
jno
xorb
pushf
xor
push
orb
sti
push
mov
push
ret
cmpsb
push
xchg
xchg
add
adcb
andb
scas
cmp
mov
pop
int3
inc
and
stos
int
lea
xchg
mov
test
hlt
add
cs
push
ret
ret
adcl
test
xor
ljmp
stc
in
jbe
jge
negl
pop
fisubs
mov
lds
mov
adc
mov
jno
xorb
push
mov
es
clc
jle
mov
fsubrl
cli
jg
imul
adc
imul
or
push
cmp
into
pop
cmp
xor
aad
leave
test
pop
rolb
rolb
aaa
mov
or
xor
inc
inc
and
ja
sbb
aad
xchg
scas
cmp
add
cmc
lock
lret
das
mov
jns
bound
shll
stc
cwtl
imul
sub
roll
sarl
test
mov
sbb
mov
and
cmp
and
out
cltd
or
jl
cmp
movsl
xor
sub
stos
sub
sbb
push
mov
out
std
test
xchg
sbb
jns
gs
pop
movsb
sub
add
js
imul
pop
push
rclb
jbe
call
sbb
add
and
inc
in
sbb
cmp
cmpsb
movsb
xor
lds
iret
push
fisttps
fldenv
xchg
or
jle
pop
pop
int3
stos
mov
pop
iret
stos
pop
loopne
mov
js
push
lods
cs
lods
and
pop
xchg
adc
add
sbb
outsb
imul
push
cmc
or
push
loopne
in
dec
fdivrs
inc
es
sub
lods
sub
pop
xchg
adc
add
sbb
sub
jb
lcall
adcl
fisttps
fsts
fdivl
in
pop
int3
inc
and
pop
jb
adc
or
adc
xor
ja
xorb
jg
mov
rorl
mov
or
je
xor
loope
adc
add
jl
inc
pusha
loope
adc
or
dec
arpl
jo
loop
data16
adc
push
jnp
xchg
cmc
add
imul
mov
stos
xchg
push
mov
es
mov
gs
jbe
enter
sub
dec
fidivrs
int3
stos
shrw
jecxz
pop
rolb
rclb
idivl
jp
ret
push
mov
sub
outsl
xlat
inc
aad
dec
cld
fisttps
mov
sbb
cmp
pop
icebp
nop
add
std
or
out
jns
mov
jno
jns
jmp
sub
pop
rclb
sub
dec
fnstcw
and
xor
cld
jnp
fs
popf
insb
movsl
mov
stos
loopne
notb
notb
dec
sub
daa
jns
insb
or
shrl
mov
stos
into
cmp
sbb
sbb
arpl
xchg
orl
imul
cmc
add
or
jge
pusha
pop
repnz
fisttps
fldenv
adc
xor
jbe
sub
dec
das
fisubrl
data16
xchg
outsb
cmp
sbb
mov
xchg
es
ljmp
push
std
cmp
dec
sub
cmp
xor
sbb
cli
push
mov
inc
mov
cmp
cs
inc
inc
ret
ret
sbb
xchg
pop
bound
mov
mov
enter
aaa
push
mov
iret
cmp
inc
leave
pop
cmp
sub
adc
jecxz
jecxz
jne
lods
and
outsb
cld
fwait
jbe
aam
iret
stos
pop
rcr
fdivrl
and
sbb
mov
xchg
daa
pop
iret
pop
cmp
jle
iret
pop
cmp
xchg
add
jno
xorb
fisttps
flds
cltd
or
pop
inc
jecxz
push
in
movsl
inc
shll
out
jno
xchg
setg
or
sbb
push
mov
stc
out
jno
add
adc
fsubs
das
test
pop
test
push
xlat
inc
and
sub
insl
hlt
pop
in
lret
inc
xlat
mov
mov
push
cld
insl
jmp
push
in
jo
in
jne
mov
cmpsl
aaa
push
mov
decl
enter
je
and
jbe
loopne
ret
push
mov
lds
xor
push
aam
xor
ret
push
lds
call
xchg
repz
int
lea
inc
xlat
mov
movsl
add
dec
push
lret
lret
mov
xchg
adc
test
add
data16
pushf
sti
push
lcall
xor
mov
popa
jmp
push
in
push
roll
movsb
aas
mov
scas
and
enter
inc
movsb
sub
mov
xor
outsb
pop
aad
sub
pop
fcomps
scas
pop
cld
in
in
jg
or
xadd
mov
xor
or
adc
dec
frstor
push
in
ret
lods
pop
cli
push
pushf
xor
scas
xor
int
ficoms
pop
cmp
and
jp
in
add
cmp
mov
clc
jp
jp
in
insl
std
test
mov
mov
jnp
mov
sbb
sahf
pop
jp
insb
or
repz
into
pop
cmp
ds
dec
push
fimuls
add
in
bound
or
imul
into
cmp
je
inc
lret
mov
inc
daa
shlb
ljmp
push
in
xchg
add
std
or
mov
mov
and
or
fsubrl
pop
int3
stos
sarw
cmp
outsl
mov
int
int
and
aas
inc
jecxz
push
in
mov
mov
lods
and
xor
out
aas
scas
lret
mov
rcr
pop
int
addb
ds
cld
jns
mov
rorl
dec
mov
and
lea
or
movsb
sub
lds
aas
mov
inc
mov
push
movsl
add
fisttps
fnstenv
push
fdivl
in
mov
mov
mov
and
outsl
ret
cmpsl
push
jecxz
dec
fidivrs
std
test
aam
shll
sub
jno
push
lret
sti
add
data16
sti
imul
sbb
std
int3
pop
lret
scas
pop
mov
or
popf
or
xchg
add
pop
sub
pop
sub
test
int
lock
push
and
xchg
or
imul
fwait
jbe
pusha
jmp
jns
addr16
sbb
push
xor
cmp
cmp
adc
jge
addr16
cmp
jg
fisttpl
mov
cmp
add
xor
xchg
testl
dec
std
inc
fisttpl
fnstsw
sbb
dec
enter
push
mov
popf
or
and
push
push
cld
jnp
cmp
adcl
test
hlt
push
cld
adc
pop
repnz
mov
test
cmc
jno
xorb
mov
gs
inc
or
bound
mov
gs
jl
les
int3
aas
dec
lret
pop
ds
cld
je
lea
inc
aad
dec
mov
jne
adc
xor
dec
fnstcw
xchg
adc
repnz
les
pop
in
popf
or
in
mov
data16
adc
jg
mov
mov
xchg
setnp
outsb
popf
pop
leave
push
shlb
sbb
add
push
aaa
ret
adcl
test
in
bound
ret
cmpsb
push
lcall
rcll
mov
in
jle
test
nop
testl
test
mov
fld1
jae
xchg
arpl
jg
jmp
xchg
fs
adcl
test
daa
mov
and
inc
int3
inc
and
outsb
or
sub
and
sbb
movsb
cmp
sbb
xchg
or
xor
and
fidivs
imul
mov
roll
mov
jns
jmp
outsl
sti
imul
cmp
pop
cmp
xor
andl
fcom
dec
ret
shl
outsb
cld
fwait
jbe
push
jle
call
test
xchg
cmc
add
cmpsl
es
cs
das
scas
aas
pop
test
push
movsl
je
fdivl
in
inc
ret
ret
insb
loop
je
pop
aad
sub
aas
jbe
insb
or
loop
pop
int
addr16
fs
and
pusha
push
fmuls
fcomps
pop
rolb
shlb
mov
inc
mov
test
xchg
inc
fisttpl
inc
aad
dec
in
dec
ret
in
stos
cmp
add
jg
jmp
fsubrl
mov
pop
int3
push
lds
outsb
popf
jno
cmp
mov
lods
test
movsb
ret
ds
or
jmp
out
lahf
sbb
aad
int3
add
arpl
jo
xorl
testb
ret
push
lds
dec
jns
xchg
cmc
add
pop
repnz
fs
jecxz
cltd
push
add
adc
lret
cmp
movsl
xor
aad
sub
or
pusha
repz
cmc
push
xchg
pop
xchg
repnz
xchg
cmp
push
cmp
jl
or
cmp
popf
or
mov
mull
icebp
pop
faddl
mov
jmp
insb
mov
or
inc
and
aaa
filds
mov
enter
cmp
push
push
roll
rcrl
xlat
push
lret
mov
mov
pop
sahf
or
cmpsb
inc
jp
xchg
cmc
add
mov
xchg
jns
xchg
testb
sub
sbb
nop
sbb
jmp
mov
ret
aam
enter
fists
mov
inc
and
pushf
sti
push
mov
outsb
cld
fwait
jbe
ljmp
je
and
insl
cld
xchg
cmc
add
xchg
or
xchg
add
cmp
mov
jg
js
ljmp
pop
cmpsb
inc
shll
dec
sub
or
sub
xchg
or
in
xchg
hlt
imul
out
adc
es
mov
add
sub
pop
xchg
pop
bound
inc
mov
jo
push
cld
or
xor
daa
test
mov
and
das
movsb
cmp
dec
in
loop
je
repz
jp
fs
jno
jecxz
lds
mov
jmp
arpl
xchg
gs
dec
fistpll
dec
mov
inc
mov
movsb
push
in
in
sbb
mov
and
fnstsw
stos
into
cmp
fwait
jbe
fwait
add
push
test
push
testb
stos
xor
int
mov
popl
mov
and
loop
lock
bound
xor
loope
jae
add
mov
pushf
sti
push
jecxz
sbb
aad
int3
lahf
sbb
or
mov
test
cmp
or
jo
xorl
scas
jp
rcll
add
in
jno
xorb
inc
aad
dec
in
inc
shll
dec
sub
jno
xchg
pop
bound
mov
lods
mov
repnz
adc
mov
inc
mov
sbb
xor
dec
call
xchg
mov
lods
fs
imul
clc
lahf
push
pop
lret
scas
pop
mov
push
xchg
repz
out
pop
xchg
repnz
and
xor
pop
imul
add
push
xor
cmp
jo
xorl
xchg
cmp
mov
orb
stc
or
test
shll
xchg
mov
dec
push
xor
or
es
mov
jb
in
test
test
push
mov
ja
xorb
mov
into
pop
into
test
xchg
lock
int
and
pop
jae
jg
jmp
mov
mov
jne
pop
push
xor
daa
inc
fimuls
popa
fiadds
mov
enter
xor
lea
sub
rcll
mov
cmpsl
ret
xchg
adc
in
sbb
or
cmp
sub
jae
outsb
or
sbb
adcl
movsb
ret
ds
jnp
mov
xchg
lahf
cli
or
addr16
cli
jne
mov
sbb
and
adcl
movsl
xor
sub
cli
push
out
jl
negb
xchg
pop
bound
decl
lods
add
or
cmpsb
gs
out
mov
daa
mov
filds
mov
cmpsb
fs
push
jp
jp
push
roll
rcrl
movsl
es
cs
mov
test
pop
xchg
adc
push
rolb
shrb
jne
pusha
pop
repnz
mov
xchg
pusha
mov
xchg
in
idivb
fildll
movsl
xor
dec
frstor
cltd
push
cld
bswap
inc
int3
inc
and
mov
data16
dec
rolb
mov
call
xorl
inc
xlat
mov
out
test
dec
fimull
fidivrl
aad
sub
push
scas
xor
int
fisubs
shll
rolb
inc
jecxz
push
in
jbe
push
cld
xor
pop
std
jmp
stc
cwtl
imul
xchg
sbb
je
pop
leave
test
mov
mov
jle
imul
shll
arpl
cmc
adc
in
mov
les
stos
cmp
or
clc
outsb
or
sub
pop
into
test
aam
or
int
addr16
jne
mov
rclb
push
loope
cmp
mov
in
mov
mov
and
hlt
pop
inc
aam
sub
mov
sub
lds
adc
pushf
add
std
or
dec
aad
sub
xor
int3
dec
fimull
mov
out
jo
pop
fimuls
push
xchg
adc
mov
jg
outsl
push
mov
jns
jbe
cmp
mov
xchg
scas
sub
roll
aad
fistps
scas
pop
test
xor
out
cld
fwait
jbe
dec
les
int3
aas
in
stc
cwtl
imul
pop
int3
stos
data16
push
mov
es
adcb
andb
adc
push
test
push
mov
sub
or
rolb
shlb
sub
cmp
mov
repz
adc
or
in
xlat
xor
push
mov
mov
or
adc
das
mov
insl
std
test
ficompl
stos
pop
cmpsb
es
movb
jbe
add
push
jbe
addr16
sub
roll
in
dec
fidivrs
xchg
cmc
add
orb
decl
out
loopne
lcall
jns
jmp
arpl
bound
mov
sbb
jmpw
jmp
cs
push
push
xor
dec
fimull
fisubrl
sbb
or
lea
mov
inc
mov
mov
mov
and
xorb
cs
nop
push
popa
nop
jp
pop
jp
jg
push
mov
iret
stos
pop
loopne
fistl
add
push
les
jge
notl
pop
lahf
punpckhdq
out
sbb
mov
mov
push
lds
sti
push
in
cld
xchg
cmc
add
xchg
sbb
outsb
cld
fwait
jbe
mov
test
gs
pushf
outsl
mov
cmpsl
loopne
jecxz
jne
data16
push
cld
dec
mov
mov
sbb
mov
mov
mov
sbb
lock
cmp
or
in
mov
in
sbb
cs
outsb
cld
fwait
jbe
jns
ja
loope
push
int3
inc
and
pop
cmp
dec
or
add
push
roll
inc
mov
jle
dec
fistpll
mov
and
daa
cmpsl
aaa
push
mov
jl
pop
mov
mov
in
sbb
add
scas
pop
ds
mov
lods
lret
inc
mov
jae
cmp
cmpsl
aaa
push
mov
cmpsl
push
nop
jmpw
jmp
loope
loope
jae
ret
push
mov
addr16
dec
movsl
xor
int
xchg
mov
mov
xchg
or
xor
cmp
push
and
sub
movb
jb
dec
frstor
lods
pop
mov
mov
loope
in
mov
ljmp
and
and
enter
push
test
dec
fdivrl
pop
jb
jp
scas
aas
pop
test
mov
mov
fisttps
pop
ds
stos
and
xchg
or
cmp
movsl
xor
push
mov
mov
mov
push
ret
ret
int
and
fs
or
decb
mov
jle
and
repz
fwait
cmp
xor
scas
insl
fiaddl
mov
lods
inc
fimuls
or
and
xlat
inc
and
pop
mov
lods
mov
jmp
lds
jb
pusha
pop
repnz
aam
add
add
dec
inc
push
dec
inc
dec
xor
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
push
dec
inc
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
inc
dec
dec
xor
cs
insb
add
push
inc
push
push
cs
insb
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
push
push
add
and
add
and
add
pop
push
add
and
add
push
add
and
add
push
add
dec
pop
push
add
and
add
push
add
push
add
add
add
add
add
add
and
add
inc
gs
jns
je
insl
inc
imul
jns
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
add
add
add
add
je
jns
je
insl
inc
imul
jns
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
push
jne
jb
add
add
je
popa
jae
inc
jb
outsl
jb
add
push
insb
gs
add
inc
gs
outsl
fs
gs
imul
add
add
je
popa
jae
inc
jb
outsl
jb
add
insb
jae
jb
outsb
inc
add
add
fs
imul
add
add
jb
jne
insb
push
jb
je
arpl
add
outsb
push
jb
arpl
jae
add
push
gs
imul
outsl
arpl
jae
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
gs
je
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
add
outsl
jae
dec
popa
outsb
fs
add
add
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
insb
jae
jb
jo
inc
add
add
gs
inc
imul
gs
imul
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
insl
jo
jb
push
je
imul
inc
outsl
insl
jo
jb
push
je
imul
push
je
push
outsb
ja
outsb
add
add
imul
jo
imul
gs
jo
jb
add
add
popa
jo
insb
insb
outsl
arpl
add
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
je
jns
je
insl
push
imul
gs
outsl
arpl
push
imul
jb
popa
je
push
push
add
add
je
jne
jb
outsb
je
push
dec
add
add
push
gs
popa
insb
jne
add
add
inc
gs
popa
insb
jne
add
add
imul
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
js
je
jb
arpl
jae
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
dec
gs
jo
imul
insb
jae
insb
insb
outsl
arpl
add
push
insb
jae
jb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsb
push
gs
js
gs
imul
gs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
gs
imul
add
dec
gs
jo
gs
jb
jns
add
dec
gs
jo
jb
popa
je
add
add
inc
popa
fs
jb
je
push
je
add
add
popa
fs
imul
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
je
dec
popa
outsb
fs
add
add
je
imul
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
imul
gs
add
push
jb
je
inc
imul
push
gs
js
gs
imul
gs
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
inc
insb
jne
push
inc
jne
data16
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
popa
fs
gs
fs
je
add
add
inc
popa
fs
outsl
fs
je
add
add
je
je
dec
popa
outsb
fs
add
add
insb
je
inc
jns
gs
outsl
push
imul
add
dec
inc
dec
popa
jo
je
imul
dec
inc
dec
popa
jo
je
imul
inc
gs
je
imul
inc
add
add
je
je
imul
push
add
add
je
push
dec
outsb
outsw
add
add
je
inc
push
add
add
je
inc
dec
inc
push
add
add
je
outsb
fs
inc
imul
je
imul
dec
imul
add
add
jae
dec
gs
popa
addr16
add
add
fs
imul
add
outsl
ja
imul
add
outsb
fs
imul
add
inc
imul
js
popa
jb
insl
inc
add
add
fs
je
push
imul
add
je
gs
je
jo
imul
add
jbe
push
imul
add
gs
insb
inc
js
arpl
gs
add
add
jne
ja
add
add
outsb
popa
insl
add
add
jae
popa
arpl
add
imul
add
add
popa
insb
jo
popa
add
add
jne
jae
add
imul
add
add
arpl
jae
add
add
gs
arpl
add
jne
addr16
arpl
add
pop
jae
jb
ja
add
add
je
fs
jo
gs
dec
outsb
outsw
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
add
push
push
add
add
stos
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
push
add
add
add
pop
push
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
push
add
pop
push
add
add
add
pushl
add
add
test
and
mov
lods
xchg
xchg
repz
jmp
popa
icebp
nop
arpl
mulb
rclb
pop
test
xor
pop
rolb
shlb
cltd
adc
leave
pop
cmp
sub
jae
std
jno
xorb
aas
scas
lret
out
stc
cwtl
imul
shlb
mov
test
pop
iret
stos
pop
das
mov
xchg
or
mov
xchg
aas
sub
sbb
cmpsb
xor
scas
insl
inc
fdivl
in
pop
lea
sahf
or
cmpsb
dec
sbb
cmp
lret
pop
ds
fistps
mov
xlat
adc
dec
int
and
sub
dec
fdivrs
push
xor
cmp
orl
cli
or
scas
and
adc
inc
or
push
fmuls
fdivrs
std
insl
hlt
pop
roll
mov
js
dec
aaa
mov
xor
sbb
mov
dec
fisttpll
out
push
les
fistpll
in
mov
in
sbb
loop
in
jg
pop
lds
iret
push
and
or
push
lea
or
mov
jns
nopl
ficompl
stos
pop
lods
sub
lds
xor
and
xor
pop
lahf
sbb
rolb
shlb
jmp
pushf
dec
ret
ret
cli
push
mov
dec
mov
je
jbe
nop
push
popa
nop
aaa
inc
leave
pop
cmp
sbb
mov
stc
je
lea
sbb
aad
xchg
insb
std
insl
hlt
pop
lods
pop
leave
pop
cmp
js
pop
int3
stos
iretw
mov
test
inc
es
add
in
out
jo
pop
push
xor
or
ret
in
sbb
shlb
sbb
jo
inc
aam
dec
leave
xor
mov
stos
into
cmp
inc
mov
cmp
movsl
and
mov
lock
lea
mov
cltd
adc
sbb
jmp
icebp
nop
arpl
or
adc
xlat
pop
into
test
mov
dec
fidivrs
mov
sbb
subb
cmp
lock
pop
mov
pop
leave
pop
cmp
pusha
cmp
xchg
add
cld
xchg
cmc
add
faddl
mov
mov
sbb
into
push
lds
cwtl
imul
add
xor
push
lret
dec
fnstcw
fdivrl
inc
and
and
xchg
popa
jmp
push
in
push
rcll
pop
mov
inc
shll
add
sahf
jl
push
lret
mov
add
and
rcrl
stos
data16
or
in
imul
xchg
pop
xchg
repnz
jne
inc
fisttpl
leave
pop
cmp
pusha
jne
jno
jecxz
ljmp
jmp
cwtl
adc
loope
adc
and
dec
frstor
mov
xor
dec
sbbl
mov
pushf
push
jae
add
sbb
add
sbb
fs
popf
insb
mov
popf
or
jb
xchg
addb
repz
sti
dec
roll
aad
inc
enter
cmp
imul
sbb
adcb
andb
scas
pop
test
push
lahf
push
xor
sub
insl
and
pop
xlat
inc
and
js
dec
fistpll
fnstcw
push
popa
nop
and
or
mov
popa
mulb
push
mov
aad
xchg
sbb
in
jbe
cmpl
push
lds
mov
mov
and
mov
mov
cs
fistl
jg
xchg
cmc
add
aaa
mov
dec
mov
cmpsb
push
mov
mov
inc
mov
daa
mov
bnd
cmpl
dec
fdivrl
ret
cmpsb
push
mov
push
mov
adc
lods
cmp
lret
lret
push
mov
and
sarl
gs
pop
mulb
insb
fcmove
pop
leave
test
lock
test
pop
test
icebp
gs
pushf
outsl
inc
shlb
jmp
jge
cmp
aas
pop
test
psubd
cwtl
add
or
push
xor
adc
jecxz
push
in
push
rolb
rcrb
add
push
les
jno
jecxz
mov
mov
xchg
jge
outsl
or
repnz
sbb
outsb
push
mov
jle
imul
and
mov
inc
mov
mov
xchg
icebp
add
movsl
ja
lcall
pusha
pop
repnz
adcb
loope
cmpsb
lret
pop
into
test
je
out
pop
inc
inc
and
ja
dec
ret
in
xor
add
sub
jmp
or
add
jp
jp
pop
les
int3
and
call
sbb
xchg
adc
in
sbb
jb
addr16
pop
or
add
jl
pop
leave
test
mov
pushf
bound
mov
inc
mov
popa
jmp
push
in
push
outsl
ljmp
les
jmp
jge
inc
enter
sub
enter
cmp
push
shlb
fisttpll
ljmpw
jns
push
cld
pop
ljmp
xchg
or
xor
cmp
add
mov
test
popf
xor
lahf
or
stc
imul
adc
dec
rolb
sarb
rcrb
pop
cmp
pop
push
xor
dec
in
cmc
pushf
outsl
movsb
cmp
divb
cmpl
lds
iret
sub
push
mov
enter
cs
cmp
pop
leave
dec
ret
mov
mov
in
jg
iret
inc
aad
dec
test
loop
push
fstpt
mov
cltd
sbb
stos
cmp
or
or
hlt
push
cld
dec
lods
cmp
push
shlb
mov
jmp
dec
fimull
movsb
push
bnd
js
ljmp
mov
lret
and
jle
call
or
jle
movsl
xor
mov
jg
inc
pusha
loope
adc
or
push
aaa
ret
xchg
add
sahf
jnp
xor
mov
insb
call
mov
lds
xchg
add
bound
stos
cmp
dec
lret
inc
shll
pushf
sti
push
in
push
lret
sti
movsb
sub
pop
jp
push
mov
fwait
decb
out
sbb
sti
push
mov
mov
loop
loope
jae
add
or
mov
mov
sbb
pop
mov
inc
addb
sti
popa
icebp
nop
arpl
inc
stos
cld
xchg
cmc
add
hlt
imul
sub
sbb
sub
add
std
or
movb
inc
mov
aas
ljmp
mov
stos
xchg
sbb
imul
insl
mov
pop
leave
test
mov
mov
mov
inc
sub
or
shlb
mov
cmp
rclb
push
clc
lret
pop
leave
test
call
negb
and
in
sbb
jb
in
pop
int3
inc
and
icebp
nop
arpl
mov
xchg
mov
es
in
adc
insb
lds
test
fisubrs
add
jbe
and
pusha
notb
mov
das
vpunpcklbw
xchg
pusha
test
mov
xchg
push
sbb
mov
movsb
ret
ds
inc
lret
pop
ds
insl
in
sbb
push
xor
and
dec
les
int3
aas
test
cltd
clc
or
sub
mov
xchg
icebp
add
jbe
imul
outsb
or
dec
addr16
push
cld
push
push
push
inc
mov
jmp
loope
movsb
xor
movsb
cmp
sbb
arpl
xchg
gs
test
cmp
dec
ja
jge
negl
and
sub
loopne
adc
addr16
lock
in
adc
in
sbb
adc
ss
inc
mov
mov
cmpsb
cmp
inc
mov
sti
cmp
push
lds
mov
cltd
clc
or
push
fdivl
in
clc
jno
xorb
in
jge
notl
add
addr16
notl
popa
out
jl
mulb
es
cmp
push
and
movsb
adc
mov
setge
dec
fistpll
mov
icebp
push
xchg
jb
es
push
lds
push
xor
popw
mov
jle
dec
popf
push
xchg
repz
in
adc
jns
xchg
add
sahf
jbe
test
in
sbb
push
lahf
punpckhdq
pop
stos
inc
arpl
jno
jecxz
lret
mov
aad
dec
mov
imul
insl
mov
mov
mov
in
cld
dec
les
int3
aas
aas
mov
dec
mov
jg
outsb
xlat
pop
int3
stos
xchg
pushl
xorb
sub
or
icebp
jl
jne
and
repnz
out
jo
stc
outsl
lcall
popa
add
pop
jmp
adc
xor
mov
push
shlb
dec
mov
or
ds
test
jge
outsb
xchg
push
pushf
sti
push
cld
gs
xchg
cmc
add
fwait
or
cli
push
mull
icebp
ss
int
and
cmp
push
mov
inc
mov
add
mov
xchg
fstpl
stos
pop
xchg
lds
mov
test
les
int3
aas
dec
rcll
and
scas
aas
pop
test
sti
push
in
js
mov
cmp
data16
xchg
testb
repnz
loopne
loopne
jb
mov
mov
inc
and
outsl
xchg
add
std
or
es
inc
mov
adcb
sub
fisttps
flds
ljmp
pop
bound
jp
jge
fs
popf
insb
test
jle
mov
mov
lret
mov
shlb
insl
hlt
pop
in
pushf
and
or
or
rcll
xor
lahf
punpckhdq
je
jbe
cmp
roll
aad
arpl
js
ljmp
fstpt
add
and
ljmp
stc
lds
xchg
add
sahf
cmp
scas
fmull
movsb
push
cld
rcll
push
out
push
lea
jb
xchg
push
push
xor
addr16
cs
mov
ret
ds
mov
out
jg
jp
in
push
dec
xlat
inc
and
xor
mov
pop
pop
jp
adc
dec
fistpll
mov
and
adc
pop
fdivl
in
dec
into
pop
cmp
xor
outsb
cld
fwait
jbe
push
xchg
jb
pop
dec
into
pop
cmp
and
add
pop
out
fs
popf
insb
lahf
or
adc
movsb
ret
fidivrl
mov
inc
mov
add
sub
sub
rclb
push
hlt
lds
lods
pop
jmp
xor
dec
fidivrs
cmp
add
adcl
test
int
enter
mov
add
push
int
and
push
in
jbe
cmpl
stc
imul
cmp
inc
inc
fistpl
rclb
inc
jl
insb
or
iret
popf
push
mov
es
ret
inc
shll
call
dec
frstor
sti
push
roll
daa
mov
sub
insl
out
adc
or
cmp
and
mov
fwait
decb
in
pop
leave
inc
into
pop
cmp
adc
xor
fmuls
fsubrs
or
pop
int3
inc
and
cmp
sbb
imul
insl
ret
sub
xor
loop
pop
loop
pop
repnz
xchg
fistpl
ljmp
adc
or
ret
or
imul
jmp
push
in
add
push
xor
and
and
rclb
lods
pop
mov
jecxz
hlt
xchg
outsb
xchg
lcall
mov
and
insb
lahf
jns
rclb
xor
sub
jl
jne
inc
inc
into
pop
cmp
jno
push
shll
push
mov
jae
aas
adcb
loop
mov
mov
inc
mov
cmpsb
aaa
cmpsl
ret
cltd
adc
mull
icebp
pop
dec
xlat
inc
and
sbb
ret
ret
push
xor
and
or
mov
mov
cld
xchg
cmc
add
lret
mov
arpl
cmc
sbb
push
lds
cmpsb
push
mov
push
mov
mov
and
xchg
adc
leave
dec
ret
mov
fsubrs
mov
shlb
jne
out
or
cmp
pop
es
pop
test
sti
je
lea
mov
jle
dec
mov
xchg
mov
mov
and
inc
in
ja
jne
out
pop
mov
mov
movsb
ret
ds
fmull
mov
shlb
jns
jmp
sub
sub
pop
adc
aaa
scas
cmp
mov
push
int
and
push
sbb
adc
push
adc
fwait
or
jae
aam
sub
fidivrl
iret
stos
pop
cltd
cwtl
sbb
into
dec
fdivrs
mov
pop
enter
add
orb
decl
out
mov
xchg
lock
xor
sub
sbb
jecxz
gs
jg
jmp
pop
ljmp
es
jbe
loopne
jmp
jmp
inc
and
ja
push
shlb
sahf
insl
ret
popa
add
inc
add
push
lret
lret
cli
push
lea
adc
test
add
xchg
std
or
sub
fwait
sbb
lock
adc
pop
cltd
jno
fs
sub
sahf
or
cmpsb
push
std
js
mov
inc
roll
aad
ds
mov
test
cmp
mov
into
mov
xchg
cwtl
adc
pop
fisttpl
fstpl
cli
jne
mov
iret
arpl
xchg
gs
add
out
jl
testb
jge
negl
popf
in
movsb
popa
mulb
push
iret
pop
leave
test
out
pushf
setg
or
rorl
jne
out
ud2
xchg
add
jnp
mov
jg
bound
stos
jmp
ljmp
or
xor
cmc
jnp
mov
call
xchg
adc
mov
in
out
lock
bound
arpl
loop
xchg
and
icebp
fs
bound
sub
xor
stc
mov
jle
push
fisttps
fldenv
loopne
lcall
or
adc
stos
cmp
add
dec
sub
push
loop
jmp
jge
repz
pushf
outsl
ficoml
lods
push
enter
or
mov
sub
sbbb
ljmp
jecxz
pop
ret
ret
push
xchg
repz
mov
movsb
roll
inc
cmpsl
mov
mov
sub
mov
inc
mov
dec
enter
cmp
xchg
jp
insb
loop
je
jl
gs
pop
repz
cmc
pop
or
and
xchg
sbb
aad
lock
loopne
jecxz
jne
add
inc
rolb
sarb
pop
fisttpl
mov
xchg
lock
shll
cmp
push
aas
stos
cmp
or
or
out
je
lea
imul
sbb
aad
int3
pop
lret
pop
ds
mov
cmpsb
addl
dec
lret
lret
mov
inc
mov
outsl
out
jl
notb
leave
dec
frstor
shrl
stc
cwtl
sbb
aad
rcr
pop
repnz
mov
repnz
daa
mov
and
xchg
pushf
sti
push
repnz
sbb
xchg
add
xor
test
sbb
push
xor
push
push
jecxz
push
ret
cmpsb
push
cli
inc
fisttpl
dec
fstpt
inc
daa
shlb
inc
shll
lods
mov
loop
sahf
or
cmpsb
gs
cmp
dec
sbb
xor
arpl
xchg
testb
out
mov
cltd
clc
or
pop
jecxz
push
in
mov
rorl
pop
cmp
sub
mov
inc
mov
and
jo
loop
cmp
in
gs
pushf
outsl
sahf
xlat
pop
repnz
xchg
adcb
andb
out
sbb
dec
rclb
addr16
in
lea
scas
aas
pop
test
int
mov
aaa
outsb
cld
fwait
jbe
test
scas
lret
lods
cmp
mov
inc
mov
mull
icebp
dec
cmc
pusha
notb
inc
and
adc
xchg
cmc
add
addr16
insl
hlt
pop
out
push
popf
or
pop
enter
cltd
push
xchg
repz
mov
push
mov
xor
dec
add
mov
mov
shrb
out
jg
jmp
insl
pushf
imul
mov
push
xor
cmp
mov
mov
xchg
repnz
adc
sbb
adc
dec
xchg
sbb
scas
aas
pop
test
pop
mov
aas
lods
and
sbb
or
jnp
sbb
pop
int3
stos
iretw
stos
lods
lret
inc
icebp
out
loopne
jb
rorb
mov
add
jbe
mov
jbe
jge
negl
push
cltd
sub
and
ss
adc
mulb
push
lods
xor
or
mov
movsl
int3
aas
ret
mov
stc
xchg
adc
push
lds
adc
jle
call
aaa
ret
jle
mov
testl
or
push
jno
inc
inc
iret
pop
cmp
jo
fwait
or
sub
jmp
dec
mov
shlb
xor
adc
pop
iret
stos
pop
into
imul
hlt
pop
mov
fmuls
fdivrs
push
imul
add
adc
xor
dec
cltd
add
or
insb
icebp
popa
add
jbe
sub
push
pushf
sti
push
mov
rcrb
jb
in
fstpl
test
cmpsl
dec
int3
inc
and
mov
js
mov
mov
shll
mov
push
test
push
cli
jg
fs
or
cmpsl
add
gs
sub
gs
pushf
outsl
scas
rcrl
stos
rolw
add
and
fimull
fidivl
les
int3
jge
pop
into
test
out
jo
dec
fisttps
add
and
add
fimuls
add
dec
fistpll
or
mov
dec
mov
cwtl
imul
leave
pop
cmp
add
fs
push
add
push
aad
sub
cmp
push
mov
mov
cwtl
push
imul
jnp
mov
mov
lret
sub
cmp
dec
sub
dec
ret
ret
fisttps
fnstenv
lods
daa
mov
and
cmp
daa
inc
mov
test
and
and
or
ljmp
mov
popa
icebp
nop
arpl
cmp
ds
test
ret
lods
pop
cli
stos
xor
mov
inc
mov
inc
fisttpll
out
adc
stc
gs
pushf
outsl
ljmp
fcompl
stos
scas
call
xorl
pop
fisttpll
out
out
outsl
lcall
movsl
int3
aas
ljmp
ret
mov
cs
mov
sbb
adc
pop
xchg
adc
xchg
sbb
lea
fisttpl
fisttpll
in
lcall
fwait
decb
jmp
repz
gs
adc
mov
jnp
js
ljmp
xorl
lods
pop
ljmp
mov
in
filds
dec
scas
cmpsb
lods
lret
inc
lods
insb
sti
imul
adc
jae
in
nop
or
ret
inc
xlat
mov
xchg
sti
aam
lret
mov
test
pop
test
and
pop
adc
scas
sub
push
les
adc
mov
xchg
add
jae
adcl
lcall
popf
in
mov
sub
lds
mov
scas
lret
jl
addr16
pop
or
or
cmpsb
adc
jo
loop
fmuls
mov
xor
or
push
ret
cmpsb
push
loop
fisttpll
out
rclb
jmp
mov
inc
mov
pop
lds
iret
push
dec
xlat
inc
and
cmp
stos
inc
int3
pop
lret
scas
pop
mov
sub
fistpl
dec
fdivrl
sbb
push
and
dec
jmp
mov
inc
sub
or
inc
and
nop
testl
repz
std
rcrb
test
mov
test
jp
cmp
mov
test
cmp
jecxz
std
test
ficoml
lods
pop
cli
push
outsb
or
dec
mov
mov
and
out
pop
int3
inc
and
out
mov
mov
mov
and
push
mov
mov
dec
movb
pop
lahf
add
xchg
or
in
cld
popf
add
xor
std
insl
hlt
pop
int3
mov
stos
in
insb
loop
je
mov
mov
data16
xchg
outsb
nop
addb
imul
nop
push
popa
nop
js
mov
jle
js
setg
or
int3
inc
fidivrl
cld
fwait
jbe
push
jp
in
dec
out
pusha
notb
mov
and
cld
ja
xorb
cmp
jbe
cmpl
adc
test
jge
and
mov
lods
cmp
jbe
cmpl
xchg
mov
sbb
xor
cmp
scas
cmp
mov
sti
lock
bound
movsb
and
adc
push
je
fs
aaa
stc
jp
jp
inc
push
xor
daa
xchg
adc
pop
jp
imul
dec
mov
insl
pushf
je
adc
mov
jg
push
sarl
pop
sahf
or
cmpsb
push
mov
lcall
xor
mov
push
mov
gs
and
add
pop
jmp
ss
out
jo
push
les
int3
jge
dec
fdivrl
cmp
sbb
mov
js
cs
xchg
cmc
add
out
je
lea
clc
outsb
or
adc
pop
enter
icebp
insl
std
test
dec
aad
sub
pop
xchg
sbb
nop
push
popa
nop
js
dec
fidivrs
dec
fnstsw
push
adcb
cmpb
stos
int
jmp
out
jl
testb
mov
jg
bound
bound
push
lds
mov
jmp
lock
bound
mov
imul
sbb
shlb
xchg
les
mov
dec
jecxz
push
in
push
ret
ret
pop
int
addr16
scas
cmp
cmp
data16
xchg
outsb
punpckhdq
mov
cmpl
adc
or
popf
or
adc
gs
pushf
outsl
ljmp
mov
scas
jp
push
scas
aas
pop
test
cmp
ss
imul
sub
inc
xlat
mov
mov
lcall
sub
mov
jns
push
mov
gs
jo
call
push
mov
jns
das
dec
rclb
adc
inc
aam
dec
mov
popa
add
push
scas
cmp
mov
repnz
xchg
add
cmp
notl
rolb
mov
out
adcl
pop
iret
stos
pop
into
jmp
xor
mov
inc
mov
stos
xor
cwtl
push
imul
jp
jp
jns
jne
out
push
mov
push
roll
rcrl
cmp
cs
test
mov
dec
enter
ss
cmpsl
ret
mov
mov
jge
je
insl
test
xchg
sbb
aad
adc
fistl
cmpsl
push
mov
and
test
jmp
fistl
mov
out
mov
adc
daa
jne
jnp
in
pop
insl
std
test
stos
inc
shll
fnstcw
or
add
leave
push
shll
lds
loop
call
jo
xorl
mov
ljmp
sbb
ret
mov
stos
movb
dec
test
outsb
cld
fwait
jbe
pop
adcb
adcb
test
push
jmp
nop
push
popa
nop
js
outsb
cld
fwait
jbe
popf
push
test
push
cld
arpl
jns
jmp
cmp
cli
je
lea
pop
xchg
repnz
mov
icebp
insb
out
adc
dec
test
push
rcll
push
popa
fisubrs
in
leave
pop
int
addr16
and
fimull
fisubrl
pop
into
test
inc
es
sub
and
aad
ret
mov
xchg
xlat
dec
fidivrs
aad
dec
test
dec
sub
push
in
jae
xchg
in
sbb
or
gs
pushf
outsl
xchg
insb
jmp
ret
mov
mov
mov
pop
repnz
fs
cmpsb
xor
push
mov
es
notb
jb
in
mov
call
mov
cmp
jo
cmp
mov
repnz
inc
aam
sub
and
sbb
mov
push
cmpsl
jl
jle
call
and
jns
mov
dec
mov
push
in
jbe
jl
negb
pop
into
test
sub
movb
aad
dec
lret
push
jns
inc
lret
mov
pop
cmp
and
mov
add
divb
xorb
dec
fidivrs
add
jl
pop
lret
scas
pop
test
jo
xorl
xor
pushl
cmpl
sbb
adc
mulb
cmp
lcall
ss
mov
es
dec
fimull
fisubrl
ret
push
lds
mulb
dec
push
lret
pop
ds
stc
jae
xchg
push
rclb
addr16
inc
and
sbb
mov
lds
xchg
mov
lods
and
ds
xor
int
mov
insb
movsl
or
jle
jmp
push
in
add
sahf
or
cmpsb
inc
pop
lahf
punpckhdq
add
sub
dec
sub
adc
jl
jne
insb
jg
imul
or
popa
out
jg
jmp
add
xchg
adc
lret
sub
push
xor
imul
xor
push
jno
xor
xchg
adc
xchg
or
xor
int
mov
mov
inc
mov
cmp
les
xchg
addr16
data16
xchg
outsb
test
dec
sub
int
loopw
loope
adc
data16
outsl
or
into
outsl
in
bound
sub
push
pushf
sti
push
repz
fimuls
sbb
imul
insl
mov
dec
mov
in
add
es
inc
mov
clc
jo
xorl
test
dec
fnstcw
fdivrl
add
push
sbb
pop
bound
out
movsb
mov
xorb
xor
scas
pop
add
or
sub
pop
iret
pop
cmp
pusha
push
rcll
in
push
inc
jp
daa
jb
int3
popf
ljmp
mov
mov
cwtl
sbb
add
popa
mov
jmp
shr
add
add
add
add
popf
jmp
mov
mov
sbb
popl
jmp
roll
jmp
call
jmp
mov
mov
xchg
iret
pop
into
test
call
jmp
in
out
jo
inc
sbb
jmp
xchg
ljmp
xor
add
mov
xchg
and
mov
mov
mov
add
cmp
jmp
call
dec
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
adc
add
add
jmp
rorb
mov
call
jmp
ja
int3
popf
sbb
shll
mov
add
repnz
lcall
pop
sub
jmp
pop
jae
fld1
adc
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
sbb
add
pop
jmp
jmp
xchg
inc
pusha
or
add
add
jmp
mov
and
cli
pop
cld
clc
pushf
addl
pusha
jmp
mov
ret
jmp
add
popl
adc
adc
andl
inc
and
jmp
sub
mov
lahf
cli
or
inc
mov
jmp
movzbl
jmp
cmp
jmp
pop
in
call
jmp
fistpl
test
pop
jp
andl
ret
jmp
add
jmp
xor
add
add
scas
add
shlb
punpcklwd
ret
inc
call
jmp
fs
push
in
push
movsl
cmp
je
jmp
fcompl
scas
pop
movsb
bnd
push
pushf
jmp
and
jne
inc
sbb
pop
jmp
xlat
shll
add
add
jb
jmp
sahf
test
popf
rcrb
push
fisttpl
rcrb
scas
pop
mov
mov
cmp
incl
sbb
xchg
gs
call
jmp
orl
stc
or
mov
inc
cmc
mov
mov
pushl
jmp
push
test
add
add
jmp
xor
mov
std
jg
icebp
mov
jmp
outsb
add
sbb
add
add
jmp
rorl
dec
mov
mov
and
cmp
jne
addl
jmp
inc
outsl
in
mov
ret
mov
jb
mov
int3
popf
push
ficoml
loope
pop
or
add
push
rcrb
js
add
jne
addl
mov
jmp
in
mov
jo
cmp
jmp
ja
call
jmp
cmp
data16
je
jmp
call
jmp
int3
popf
mov
sub
add
xchg
cltd
clc
or
pop
jnp
add
jmp
mov
jmp
xchg
cltd
clc
or
call
jmp
pop
int3
inc
and
mov
mov
andb
sub
jo
mov
jmp
push
mov
rolb
add
jmp
jns
js
ljmp
lcall
adc
call
push
push
inc
push
xor
cs
insb
add
fldl
add
pop
int3
inc
and
or
popl
lea
push
pushf
addl
jmp
repz
lock
lret
js
jl
testb
shr
adc
add
scas
cld
lcall
imul
jmp
fisttps
mov
xchg
adc
call
dec
jo
outsb
inc
insb
imul
add
ret
call
jmp
jg
js
ljmp
iret
xchg
push
adc
sub
sbb
ret
jmp
repnz
into
pop
lret
scas
pop
mov
sub
jmp
ja
movl
jmp
mov
jmp
loop
add
add
jmp
push
mov
xchg
jl
and
call
jmp
lahf
int
call
jmp
xor
sbb
pop
scas
sub
jmp
stos
push
push
aad
add
add
jmp
and
mov
mov
add
cmp
jmp
sbb
add
adc
add
inc
es
adc
inc
jmp
and
loope
call
jmp
popa
loope
adc
sub
in
popf
ret
das
fsubs
bound
pushf
jmp
and
add
add
jmp
push
xchg
add
jnp
mov
cmp
add
add
scas
adc
add
fs
push
lahf
out
add
jmp
aad
add
add
jmp
jns
outsb
or
sbb
bound
inc
and
jmp
data16
sub
jmp
xchg
mov
inc
and
jmp
add
pop
adc
popf
jns
outsb
or
sbb
mov
add
push
adcb
cmpb
jmp
in
sub
cmc
jle
sub
xor
jmp
sahf
pop
cltd
jl
pushl
mov
jmp
jb
mov
jmp
jns
mov
movsl
and
and
add
add
fucomi
add
add
jmp
and
cmp
mov
mov
jmp
add
mov
aad
outsl
lcall
jge
notl
pop
popa
jmp
in
imul
xchg
add
push
fisttpll
out
jmp
inc
adc
xchg
jne
jmp
mov
cwtl
xchg
call
jmp
and
mov
add
jmp
adc
ret
jmp
pop
jno
mov
addl
jmp
jle
xor
add
add
jmp
orl
es
jo
jmp
mov
shlb
cltd
aam
mov
jmp
popa
jmp
call
jmp
jp
jle
call
imul
ret
call
jmp
lods
cmp
mov
cmc
ljmp
incl
pop
jmp
mov
mov
das
test
sub
es
or
add
push
push
inc
push
xor
cs
insb
add
and
add
push
cwtl
push
imul
add
add
lea
push
pushf
addl
jmp
fwait
dec
pop
sub
mov
movl
jmp
sbb
add
add
or
add
or
add
movl
mov
rol
ret
test
add
insl
ljmp
stc
mov
adcb
add
in
stc
lcall
mov
jmp
popf
ret
adc
xor
scas
push
idivl
jmp
jbe
jno
jecxz
cmpl
and
fcmove
incl
jmp
inc
movzbl
jmp
fwait
and
call
jmp
xor
jbe
aas
call
inc
insl
jo
jns
insb
imul
add
popl
jmp
xor
cmpsl
add
jmp
popf
jmp
xchg
mov
add
add
jmp
push
xchg
add
jno
cmpsb
and
push
pushf
jmp
adc
or
imul
inc
and
jmp
int3
popf
mov
stos
int
aam
imul
insl
cwtl
sub
or
add
iret
push
xor
ret
lcall
cmp
inc
jmp
pusha
jmp
mov
add
jmp
call
jmp
cmp
push
lahf
punpckhdq
mulb
add
add
mov
jmp
stos
das
mov
aam
jg
sar
inc
adc
or
and
in
jae
xchg
cmpsb
lret
inc
mov
mov
mov
andb
sub
jo
mov
jmp
pop
jecxz
push
in
mov
cmpsb
shll
lock
lea
ret
bound
mov
push
cmp
jl
negb
jnp
sbb
orl
ret
call
jmp
rorb
dec
movsb
and
push
fisttps
flds
roll
add
add
out
pop
rolb
rclb
add
lock
jmp
cmp
jmp
pop
sbb
adc
dec
fidivrs
movzbl
add
cmp
je
jmp
xchg
mov
jmp
cmc
addr16
popl
jmp
sub
sub
or
dec
sub
jno
movsl
xor
xor
rolb
add
jmp
inc
roll
shll
inc
fidivrl
xchg
cmp
jmp
pushf
jmp
mov
ret
ljmp
test
mov
and
jge
lods
xor
aaa
dec
mov
cmpl
in
ja
mov
pop
jmp
xchg
push
pushf
sti
push
xchg
sub
cmp
mov
in
cmc
pushf
outsl
test
arpl
xchg
mov
cmc
inc
inc
fidivrl
and
in
push
roll
roll
pusha
sub
adc
add
push
gs
insb
imul
inc
popa
je
add
sub
xchg
fs
jl
jne
insb
adc
mov
nop
and
popa
mov
sarl
int3
xor
adc
xor
inc
xor
sub
call
jmp
cmp
xor
adc
xchg
push
adc
adc
and
inc
and
jmp
js
cmp
xor
test
add
ficompl
scas
pop
popl
mov
js
dec
or
mov
movw
jmp
or
adc
mov
addr16
gs
dec
ret
mov
call
push
push
inc
push
xor
cs
insb
add
push
inc
push
shll
add
pop
sub
jmp
movzbl
jmp
mov
subl
out
adc
inc
or
mov
popa
incl
popf
ret
xor
jp
inc
xchg
setg
or
inc
fimull
fidivl
push
roll
aad
adcl
add
jmp
inc
fisttpll
out
xor
mov
scas
ret
leave
addl
pusha
jmp
je
jmp
mov
leave
lods
cmp
sub
jmp
dec
and
jl
mov
jmp
sbb
fcomps
xchg
addr16
jge
je
jo
add
rolb
add
jmp
xchg
pop
xchg
adc
rcrb
test
cmpsl
mov
jmp
shrb
mov
jmp
aaa
mov
and
and
push
jmp
lock
bound
mov
jmp
mov
test
cmp
leave
add
jl
divb
fldl
out
add
xchg
popf
pushl
jmp
aad
into
test
pop
cmp
sbb
sub
xchg
add
cmp
pop
into
test
ja
loope
cmp
sbbb
std
mov
jmp
cltd
or
inc
rolb
sarb
dec
sub
jmp
cwtl
or
in
mov
aaa
xchg
rep
lcall
lret
mov
cmc
call
ja
jo
imul
cmp
add
loopne
xchg
jmp
jecxz
imul
add
lea
jmp
cmp
sub
rolb
rclb
shll
dec
jp
push
cmp
inc
push
xor
es
jo
loop
xchg
into
dec
aaa
popa
mov
jmp
jo
addr16
sbb
push
xor
xor
jnp
mov
popa
pop
jmp
call
ja
jo
imul
test
dec
fdivrs
pushf
addl
pusha
jmp
xchg
adc
push
xchg
repz
std
das
push
fs
call
jmp
call
jmp
mov
fdiv
adcl
test
jge
je
jbe
movzbl
add
cmp
je
jmp
jb
xchg
cmc
add
push
fimuls
xor
outsb
cld
fwait
jbe
loop
std
test
dec
shr
or
add
push
push
inc
push
xor
cs
insb
add
pushf
push
jmp
pop
jmp
inc
aad
sub
imul
mull
pushf
outsl
fdivl
pop
enter
mov
xchg
fwait
or
mov
fisttps
mov
mov
mov
add
jne
addl
jmp
call
inc
insb
outsl
jae
inc
insb
imul
add
xchg
or
push
imul
call
jmp
dec
push
add
sbbl
int
movw
jmp
mov
jecxz
adcl
test
dec
lret
es
push
adc
rcll
dec
movl
jmp
les
mov
cmc
rcll
cmpsb
push
aam
jne
mov
aaa
ret
jmp
fistpl
stos
pop
scas
push
xlat
inc
and
aaa
rclb
cmpsl
push
mov
and
lods
add
add
rorl
ljmp
mov
mov
ret
xor
es
mov
and
mov
push
pushf
jmp
add
in
gs
pushf
outsl
sar
push
pop
sub
add
xchg
popf
pushl
jmp
popf
sbb
mov
inc
mov
mov
shll
jmp
mov
pusha
jmp
int
shlb
or
cmpsb
ficoms
mov
xlat
mov
stc
insl
loopne
mov
jmp
arpl
push
fmull
movsb
push
cld
das
mov
pop
xchg
add
sahf
aaa
xchg
or
movzbl
add
cmp
je
jmp
aaa
in
ljmp
fwait
or
xor
ss
mov
addr16
xor
dec
or
fidivs
lods
and
push
pop
loop
andb
jmp
popa
jmp
aas
movsl
xor
fisttps
jnp
jnp
in
insb
xor
inc
sub
inc
and
popf
ret
scas
sub
lds
pop
std
rclb
cmpsl
push
mov
push
mov
shr
xor
and
dec
cmpsl
and
mov
jle
jle
pop
lret
scas
pop
mov
mov
ret
mov
jmp
push
pushf
xor
push
push
fimuls
add
dec
fdivrs
testl
icebp
or
iret
pop
cmp
jo
or
inc
rcrb
fbld
jns
jmp
stos
mov
and
jmp
jno
add
pop
int
addr16
js
mov
scas
pop
pop
movzbl
add
cmp
je
jmp
sbb
test
mov
sbb
push
inc
jmp
lea
mov
sbb
icebp
push
or
popl
lea
jmp
xor
and
mov
xor
jmp
push
jmp
jl
jne
out
nopl
popa
clc
outsb
or
adc
nop
xor
add
add
jmp
je
js
ljmp
movsl
inc
das
loope
enter
add
add
or
cli
lret
pusha
jmp
pop
jmp
aaa
mov
xchg
std
or
push
rolb
sarb
jne
push
cld
sbb
sbb
mov
add
cmp
je
jmp
roll
dec
mov
xor
lods
sub
jmp
mov
xchg
cmp
pop
and
cld
jbe
nop
clc
daa
or
ja
loope
enter
inc
mov
xor
stc
imul
or
add
push
dec
inc
dec
dec
xor
cs
insb
add
int3
popf
adc
in
sbb
cmc
jns
mov
jae
xchg
cmc
add
fistl
lods
pop
lahf
dec
roll
jbe
jnp
inc
ljmp
cmpsb
xor
scas
or
adc
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
add
add
lea
xchg
jae
ret
jne
addl
mov
jmp
mov
jmp
inc
rolb
shlb
inc
shlb
pop
jp
es
pop
cs
in
xor
xorl
jmp
mov
popf
jmp
xor
fdivrp
imul
jmp
pop
int
and
jb
hlt
push
cld
aas
lret
mov
aas
ficompl
popa
incl
popf
ret
or
cmp
je
jmp
ljmp
cmc
gs
adc
icebp
decl
fwait
or
sbb
sbb
jnp
mov
sub
ficoml
fisubs
sbb
cltd
clc
or
mov
add
mov
mov
jmp
jns
insl
hlt
pop
sti
loopnew
adc
aaa
mov
stos
into
cmp
add
jmp
and
dec
add
sbb
xchg
fistl
mov
shl
inc
pop
sub
mov
movl
jmp
push
add
test
pop
test
test
cwtl
decl
lods
mov
incl
inc
and
lock
bound
sub
repz
fadds
movl
add
pushl
jmp
jae
jbe
loopne
mov
sub
cmp
mov
jmp
ret
mov
and
movsl
scas
cmp
inc
aam
dec
stc
call
fisttpll
xor
xchg
push
pushf
sti
push
aad
outsl
lcall
mov
out
push
call
jmp
sbb
jmp
insl
sti
imul
adc
repnz
fimull
ficompl
push
add
call
outsb
cld
fwait
jbe
jge
insl
hlt
pop
int3
stos
das
mov
push
add
add
ret
mov
add
jo
jmp
cld
jl
jne
insb
xor
pop
or
sbb
je
cmpsl
inc
repnz
mov
mov
mov
andb
sub
jo
jmp
mov
xchg
cltd
and
orl
add
cmp
jmp
xor
arpl
rolb
add
jmp
fwait
push
mov
es
pop
fwait
or
push
cs
mov
fs
jmp
lock
mov
sub
jmp
jae
push
fisttpl
fnstsw
mov
sbb
inc
mov
jg
jecxz
decl
aad
je
aam
jmp
xor
imul
or
mov
into
pop
cmp
jg
fisttps
fsts
int
test
jmp
addl
jmp
enter
pop
into
je
jo
loop
and
cmpsl
sub
add
add
jne
addl
jmp
adc
push
jno
aaa
ret
lods
pop
cli
sbbl
pop
lds
iret
das
dec
pop
pusha
jmp
pop
rcll
sub
imul
inc
xlat
mov
enter
int
mov
sar
inc
adc
nop
mov
jmp
sub
out
insb
loop
je
aas
mov
mov
sahf
stc
or
jecxz
sub
mov
movw
jmp
dec
roll
aad
pop
xchg
pop
bound
out
outsl
int
popf
ret
inc
ret
ret
xor
popf
xor
mov
jmp
ljmp
notl
notb
mov
and
test
arpl
push
call
jmp
inc
iret
pop
cmp
and
adc
and
sub
cmp
cmc
gs
sub
jge
je
inc
nop
and
push
pushf
jmp
out
ljmp
dec
push
daa
dec
jmp
cs
push
lds
xor
jmp
mov
and
pop
int
addr16
mov
aad
xchg
loopne
mov
ret
movsb
and
cmp
je
jmp
jle
jns
jmp
in
push
xchg
cs
jmp
pop
push
xor
or
inc
mov
addr16
mov
jmp
cld
fs
popf
insb
xchg
push
std
adc
push
xor
lods
mov
or
andb
sub
jo
jmp
mov
mov
mov
jle
inc
or
cmp
imul
adc
mov
jmp
jmp
and
inc
dec
int3
inc
and
dec
sub
jmp
jge
push
xor
inc
adc
sub
ret
jne
addl
mov
jmp
xlat
push
shll
pop
loop
xchg
push
mov
es
and
loop
adc
rcr
fidivs
fidivs
jmp
rolb
add
jmp
dec
or
shll
popa
inc
enter
sub
lds
iret
ds
pop
into
test
outsl
or
shrl
popl
jmp
int3
inc
mov
subb
adc
inc
push
outsb
or
dec
sub
or
add
xchg
popf
pushl
mov
jmp
jae
push
sbb
dec
jmp
adcl
loopne
mov
sbb
stc
mov
sub
add
mov
xor
lock
aad
in
sbb
dec
inc
subb
add
add
je
fs
jo
gs
dec
outsb
outsw
add
mov
mov
cmpb
popf
jmp
inc
fisttpll
out
out
adc
data16
dec
aad
sub
xor
pop
jmp
scas
aaa
cmpsl
ret
fimuls
decb
call
push
push
inc
push
xor
cs
insb
add
aas
in
jno
xorb
repnz
add
inc
or
pusha
jmp
push
jmp
out
sldt
add
add
add
pop
lea
ret
jmp
nop
adc
jg
lahf
xor
ss
popf
jmp
into
adc
add
push
jmp
out
aas
addl
jmp
imul
int3
dec
ret
mov
jmp
mov
cmpsb
negb
addb
jmp
rclb
pop
mov
add
test
xchg
repnz
movsb
xor
or
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
nop
movsb
jo
mov
jmp
add
fistps
scas
pop
mov
mov
dec
mov
aam
cmp
int
inc
and
add
push
movsl
xor
push
lea
jmp
jp
popa
add
add
pop
jp
xor
pushf
xor
jo
push
dec
shr
movb
movl
popa
jmp
pushl
jmp
mov
icebp
test
mov
dec
fistpll
sarb
cmp
jmp
lea
jmp
imul
jnp
jns
jmp
xchg
push
push
xor
jle
sub
jmp
mov
add
add
loop
out
jmp
popf
jmp
cmpsl
xor
stos
cmp
sbb
fs
popf
insb
lret
pop
rcll
add
mov
addl
mov
popl
jmp
adc
iret
cld
fimuls
mov
sub
sub
pushf
xor
dec
pusha
notb
mov
jmp
notl
xchg
adc
in
sbb
jmp
andb
adc
pop
bound
add
add
jmp
pusha
jmp
push
aad
sub
cmp
push
lahf
push
ficomps
stos
pop
mov
scas
cmp
mov
xor
jl
sub
add
xchg
jmp
addl
dec
fdivrl
pop
cmp
xor
jmp
popa
jmp
mov
xchg
icebp
add
scas
es
mov
incl
push
pushf
jmp
add
push
jns
dec
xor
sar
inc
adc
mov
and
jmp
jbe
imul
add
sahf
sub
adcl
cmp
ret
jmp
movsb
xor
int
lea
in
les
cmpsl
push
jecxz
dec
fidivrs
dec
adc
lock
jo
jmp
adc
mov
pushf
push
mov
gs
push
shlb
pop
jmp
pop
les
int3
js,pn
jbe
loopne
pop
rcll
sub
mov
cmc
sub
jmp
bound
xchg
testb
add
add
jmp
aam
les
cmpsl
ret
bnd
xchg
cltd
mov
add
pop
sub
jmp
iret
dec
fdivrl
xchg
adc
jle
outsl
or
sar
div
cmc
je
jmp
std
jg
mov
sti
jle
mov
adc
push
jp
jp
out
jecxz
jne
rcrl
test
mov
out
add
add
mov
add
cmp
jmp
mov
mov
add
add
jmp
out
jge
cli
dec
jmp
rcrb
fs
sub
mov
inc
mov
dec
addr16
mov
jmp
scas
and
sbb
jle
mov
fs
jmp
xlat
inc
fidivrl
inc
and
popa
jbe
jne
out
inc
xor
jae
leave
stos
add
movl
inc
insb
hlt
push
cld
push
sbb
in
jmp
jno
xorb
loopne
adc
sub
push
mov
stos
lret
mov
mov
sbb
out
sbb
iret
dec
fnstcw
pop
cmp
aas
jnp
addr16
or
cmpsb
xor
scas
dec
push
xchg
mov
rcll
xor
popa
icebp
nop
arpl
sub
pop
roll
rcll
pushf
pop
xchg
adc
add
int3
pop
int
addr16
ret
cmpsl
push
jecxz
cmc
gs
push
out
js
mov
push
ret
ret
fdivl
in
enter
gs
fadds
mov
cmpl
inc
inc
fimuls
or
mov
lds
test
fisubs
or
jle
aaa
cmpsl
ret
push
add
lea
js
mov
adc
rcll
pop
mov
pop
cmp
and
imul
add
pop
mov
gs
jbe
int
and
xor
and
inc
adc
ds
fdivl
in
jnp
gs
aas
mov
xchg
out
jl
jne
xor
push
ret
cmpsb
push
cli
call
leave
ret
push
shlb
mov
hlt
dec
lret
lret
in
sbb
dec
cmpsb
cmp
mov
xchg
inc
and
cmp
es
les
pop
pop
jp
adc
mov
inc
mov
setae
xchg
pop
mov
stos
into
cmp
sub
xor
out
or
jge
testl
outsb
mov
xor
out
fs
popf
insb
lahf
ret
mov
fistpll
dec
inc
call
jae
cmp
je
lea
mov
js
pop
xor
cs
mov
sub
jg
xchg
add
daa
pop
xchg
or
xor
ja
popf
or
xor
aas
scas
lret
out
jp
jp
or
pop
ret
ret
or
in
negb
push
xor
sub
push
lds
cs
inc
mov
sbb
adc
push
push
inc
and
pop
adc
fcompl
fs
arpl
xchg
xchg
inc
and
and
aad
push
pushf
sti
push
jecxz
mov
std
jne
mov
mov
test
cmp
lds
cmpsb
push
mov
pop
leave
test
stos
ja
outsl
or
mov
rcrl
xchg
add
push
test
push
mov
insb
fisubl
popa
add
pop
outsb
insb
or
mov
inc
aam
dec
out
jmp
push
in
pop
jmp
adc
sub
insl
faddl
mov
fwait
or
pop
divb
xchg
dec
rolb
sarb
ret
pop
enter
hlt
push
lahf
push
mov
add
ljmp
push
lret
pop
ds
pop
iret
pop
cmp
retw
push
lret
cmc
dec
jecxz
push
in
outsb
stc
imul
outsl
or
les
mov
dec
mov
lds
gs
xchg
cmc
add
lds
test
fimuls
add
push
jle
xchg
cmc
add
sub
mov
lods
icebp
call
mov
mov
inc
mov
fiadds
mov
movsb
pop
jne
mov
add
jecxz
sub
stc
imul
xor
pop
lret
dec
ret
adcl
popa
nop
gs
lods
or
jle
rcll
and
jmp
les
int3
aas
push
nop
push
popa
nop
aaa
insb
loope
adc
xor
push
aam
mov
inc
mov
insl
std
insl
hlt
pop
mov
pop
iret
stos
pop
into
and
sub
or
mov
int3
aas
mov
lahf
xchg
loope
mov
add
test
push
lret
scas
pushf
adc
sti
jno
xorb
add
sbb
aad
adc
into
test
test
push
faddl
lods
loopne
loopne
jb
iret
pop
repnz
fs
push
mov
cmp
add
lret
js
add
cmpsb
xor
scas
sbb
inc
fidivrl
std
test
inc
sbb
xchg
enter
cmp
mov
dec
push
push
js
mov
lea
sub
mov
mov
cmp
ja
jb
dec
sub
test
jge
xor
pop
pop
ret
xor
inc
jmp
or
jmp
call
fs
outsb
or
sbb
pusha
notb
sub
ljmp
js
ljmp
adc
lods
adc
ja
jp
in
inc
cmp
mov
or
sub
pop
lock
push
jns
aas
mov
popf
int
add
xchg
push
mov
es
ficoml
cmpsl
push
mov
dec
fstpt
into
test
mov
int3
inc
and
popf
in
mov
mov
jg
cmp
data16
xchg
outsb
mov
adc
cmc
popa
icebp
nop
arpl
out
js
mov
scas
or
mov
add
iret
mov
in
pop
iret
stos
pop
movsl
inc
iret
pop
cmp
jo
lock
aam
loopne
adc
dec
pop
into
pop
cmp
addr16
sahf
push
sbb
and
pop
cmp
popa
add
movsb
and
xchg
push
xor
mov
rep
pop
ret
call
frstor
xchg
testb
add
push
call
repnz
sbb
cmc
gs
push
mov
shll
and
pusha
and
jne
dec
fdivrs
notb
cmpsl
ret
sbb
add
and
and
cmp
sub
fadds
add
mov
or
out
cmc
jnp
mov
lods
xor
mov
inc
mov
and
xor
jbe
and
movsl
xor
inc
shll
les
mov
sbb
push
dec
cmp
test
add
jl
rcll
ja
sbb
aad
lea
xchg
dec
fidivrs
cltd
clc
or
stos
add
add
mov
inc
mov
rep
lcall
and
notb
stc
addr16
insb
or
out
leave
push
lds
jmp
mov
int3
add
jge
lds
mov
int
cmpb
hlt
pop
sti
mov
cld
cli
jle
mov
xor
in
gs
pushf
outsl
sahf
add
inc
int3
inc
and
mov
and
mov
fwait
push
xchg
jb
pop
pop
inc
and
sbb
outsl
lcall
in
jle
or
pandn
movsb
push
in
out
jg
jmp
xorb
insb
loop
je
push
rcll
jbe
sbb
xchg
pop
bound
mov
cmc
pushf
outsl
xchg
lock
bound
pop
fdiv
push
rolb
inc
mov
push
xor
es
or
je
mov
inc
mov
jnp
push
movsb
jae
or
sahf
or
cmpsb
dec
xlat
arpl
xchg
gs
dec
rclb
and
sub
push
mov
jns
das
inc
leave
pop
cmp
sbb
xchg
pop
rclb
push
hlt
push
rcll
ja
test
pop
test
or
xor
adc
push
hlt
pop
mov
add
call
xor
pop
into
test
lods
lret
inc
icebp
xchg
push
xchg
repz
test
pop
sahf
or
pop
ret
ret
movsb
ret
ds
push
int
and
push
lret
scas
pop
fsubl
stos
das
mov
mov
rolb
inc
stos
ljmp
push
lahf
push
xchg
nop
testl
and
aaa
jle
push
cld
psrad
lcall
bound
mov
xchg
cmp
and
cmp
hlt
jg
mov
mov
mov
das
fwait
ja
jp
in
inc
shr
mov
add
xor
js
bound
aam
dec
jmp
sahf
pop
inc
fisttps
flds
fidivs
xor
cmp
add
js
mov
mov
loopne
add
mov
add
xchg
and
test
pop
test
mov
sti
lret
mov
lret
scas
pop
mov
push
shlb
jle
or
out
jl
divb
push
shll
mov
jg
jmp
dec
mov
add
movsl
aas
mov
inc
mov
xor
roll
mov
lock
sbb
push
stos
iretw
adc
push
jno
aaa
inc
rolb
shlb
sahf
or
cmpsb
fildl
mov
mov
movsb
dec
lret
mov
inc
and
push
and
mov
jmp
movb
adc
imul
fwait
imul
mov
movsl
int3
aas
ljmp
push
fisttpl
fnsave
repz
mov
sub
repz
cmc
pop
jae
push
push
scas
and
lret
pop
ds
adc
cmpsb
xor
int
mov
pop
cmp
jg
xlat
inc
and
outsb
add
fmull
mov
xchg
testb
dec
call
inc
aad
dec
ljmp
or
jl
jmp
push
lea
sub
pop
iret
stos
pop
loopne
xchg
add
leave
pop
cmp
and
gs
adc
int
lds
mov
mov
xor
xor
dec
pusha
jmp
push
in
add
jecxz
imul
dec
frstor
outsl
lcall
data16
mov
add
arpl
xchg
mov
aam
loop
call
inc
aad
dec
movsl
repz
xchg
in
jb
xchg
loope
icebp
nop
arpl
call
stc
rcll
mov
cmp
pop
outsb
jmp
push
in
or
movsl
xor
push
pop
aad
sub
jp
push
mov
and
rclb
mov
cltd
clc
or
jns
xchg
testb
xchg
jp
movsb
in
inc
adc
je
jmp
ret
jmp
call
pushl
imul
adc
push
lahf
push
inc
leave
pop
cmp
sub
inc
shlb
insb
or
cmc
sbb
pop
fisttpl
fisttpll
adc
sbb
std
insl
hlt
pop
mov
cmp
jecxz
push
in
pop
enter
popa
xor
sub
sub
adc
inc
shlb
fidivrl
add
push
mov
and
mov
es
fiadds
mov
mov
and
cld
jnp
ljmp
daa
inc
mov
and
push
lds
cwtl
imul
inc
fwait
sbb
pop
fisttpll
out
scas
sub
sahf
or
cmpsb
inc
stc
ja
xorb
mov
xchg
and
sub
scas
aas
pop
test
inc
mov
sub
lds
mov
pop
jp
cmpsb
xor
insb
cli
push
pop
leave
test
lock
pushf
outsl
fidivl
xchg
push
inc
mov
mov
ds
pop
int
lea
xchg
add
push
xor
dec
push
and
jbe
loopne
jmp
stc
cwtl
imul
test
insl
hlt
pop
sti
mov
cltd
clc
or
jl
outsb
or
or
fdivs
ficoml
mov
lahf
cli
or
mov
dec
rclb
xor
sahf
dec
rclb
adc
or
in
cltd
push
cmp
jle
mov
inc
mov
or
xchg
add
std
or
ljmp
inc
xlat
mov
out
sbb
or
in
mov
stc
imul
lret
scas
pop
mov
xchg
jg
out
adc
push
mov
stos
pusha
std
insl
hlt
pop
adc
mov
sub
push
or
clc
jg
mov
cmpsb
and
test
push
roll
shll
xchg
add
sahf
jbe
dec
fstpt
mov
lods
cmp
or
push
pushf
sti
push
mov
mov
inc
mov
outsl
loope
adc
and
arpl
xchg
gs
xorl
and
cltd
or
sub
ja
loope
mov
mov
cs
mulw
icebp
push
imul
hlt
pop
mov
out
jl
notb
lods
cmp
mov
inc
mov
lahf
add
sti
lock
bound
jmp
jmp
stc
setae
xchg
pop
clc
jns
mov
cmp
push
adc
mov
inc
mov
dec
leave
pop
cmp
push
jge
outsl
or
repnz
roll
aad
into
inc
fidivrl
in
mov
dec
mov
cmpsb
push
mov
fdivrl
fdivl
in
das
mov
cmp
add
add
sahf
sub
and
sub
or
inc
out
ret
push
lds
push
ret
cmpsb
push
cli
roll
mov
cmc
pushf
outsl
lret
mov
mov
dec
mov
call
xchg
cld
pmulhw
mov
inc
enter
add
cmp
rclb
or
je
pop
into
test
movsb
ret
shlb
xchg
nop
testl
sub
xor
out
xchg
sbb
aad
or
rorb
dec
movsb
xor
push
xchg
sahf
stc
or
cli
jbe
cmpl
nop
push
popa
nop
aaa
dec
fldt
adc
js
mov
adc
aad
shll
cld
fwait
jbe
jae
jne
out
pop
imul
or
mov
jecxz
cmp
fildl
mov
stos
mov
mov
lret
pop
ds
inc
fimull
ficompl
das
mov
or
nop
push
popa
nop
js
jge
je
pusha
loopne
hlt
xchg
outsb
nop
mov
cld
lods
sub
xor
es
movsb
cmp
dec
and
and
push
push
fimuls
adc
mov
add
pop
and
sub
xor
sub
lds
cltd
push
sahf
or
cs
lea
mov
sbb
jns
pop
lret
lret
mov
inc
mov
push
addr16
sbb
jecxz
push
pop
lret
lods
pop
fisttpl
inc
and
pop
popf
sbb
jno
pusha
pop
repnz
xchg
add
mov
xor
and
dec
add
cmpsb
and
push
lahf
push
mov
xchg
repnz
inc
roll
aad
dec
push
xor
sub
inc
aam
dec
mov
pop
std
fists
mov
imul
cmp
mov
nop
add
outsb
cld
fwait
jbe
and
sub
pop
int3
inc
and
fs
push
jmp
in
je
xor
imul
insl
int3
push
int
and
push
xchg
aad
push
roll
aad
mov
scas
mov
mov
mov
sbb
mov
movsl
int3
aas
aad
xchg
mov
push
test
push
sti
pushf
sbb
pusha
notb
movsb
ret
ds
sbb
mull
icebp
or
movsb
cmp
dec
lods
and
inc
int3
inc
and
sbb
sub
mov
xor
add
pop
aas
lret
jl
jne
xor
insb
loop
je
test
mov
sbb
push
mov
push
movsl
adc
out
lret
stos
rcrw
mov
call
outsl
hlt
push
cld
push
pop
popf
or
cmp
out
adc
push
out
lods
and
jge
icebp
popa
add
sbb
pop
fstpt
gs
pushf
outsl
xchg
mov
in
ret
ficompl
stos
xchg
test
xchg
repnz
lea
orb
cli
or
popl
in
imul
insl
cwtl
jno
insl
hlt
pop
mov
sub
flds
scas
inc
xlat
inc
and
imul
ja
mov
mov
pop
iret
stos
pop
add
add
cmp
cmpsb
xor
scas
sbb
mov
mov
mov
mov
mov
mov
dec
frstor
mov
dec
sub
popa
pop
pop
call
arpl
xchg
add
js
jg
jmp
clc
or
fidivl
loopne
adc
push
push
xchg
add
ss
mov
gs
push
mov
into
cmp
pop
sahf
or
cmpsb
dec
inc
fisttpll
out
mov
mov
hlt
push
cld
xor
movsb
dec
xchg
adc
sub
xchg
jb
jno
lret
pop
ds
loope
sti
sahf
insl
sahf
jne
add
sbb
xchg
testb
pop
out
inc
mov
sub
add
lea
pop
int3
stos
xchg
loopne
cld
fwait
jbe
ja
outsb
or
sub
test
lock
push
insb
loop
je
jno
jo
loop
aad
fstpt
add
cmp
xchg
xchg
dec
fnstcw
icebp
nop
arpl
out
icebp
sbb
mov
mov
xor
ret
call
mov
cld
xchg
cmc
add
xor
bound
punpckhwd
scas
adc
add
insb
in
bound
pop
jb
push
xchg
add
sahf
pusha
lods
sub
test
jge
jns
lret
pop
ds
imul
adc
sbb
sub
push
xchg
repz
ljmp
sub
ss
jae
insl
hlt
pop
aam
iret
stos
pop
rclb
xor
ja
cmp
mov
mov
push
cmp
xor
in
jp
jp
xchg
call
inc
nop
push
test
push
loopne
fisttpll
out
xchg
pop
xchg
adc
test
mov
push
shll
mov
sub
inc
into
pop
cmp
and
call
push
aaa
push
mov
inc
mov
and
mov
sbbl
lods
pop
cmc
pop
into
pop
cmp
addr16
sti
imul
push
xchg
add
lods
cmp
cli
push
and
pop
popf
or
movsb
cmp
inc
jae
arpl
cmc
je
aam
sub
xchg
adc
js
imul
mov
and
addl
cli
jl
jne
jp
and
scas
cmp
mov
das
stos
cmp
inc
jb
outsb
or
or
mov
add
mov
loopne
cld
fwait
jbe
sbb
add
sti
imul
pop
xor
xor
scas
sbb
imul
insl
ret
lcall
notl
xor
scas
pop
inc
aam
sub
and
dec
sub
inc
cmpsb
cmp
mov
xchg
mov
je
movsl
cmp
mov
lods
jns
jne
out
push
sbb
and
add
adc
mov
dec
roll
aad
popf
sbb
movsb
cmp
jnp
mulb
or
popf
or
lcall
sub
pop
fists
lods
pop
mov
cld
pand
scas
pop
cld
ficompl
scas
pop
xchg
sbb
ljmp
stc
mov
mov
fisttpl
mov
xchg
icebp
add
inc
jmp
sti
dec
mulb
xchg
popa
xor
inc
xlat
inc
and
js
sbb
aad
out
stos
cmp
dec
cltd
pop
xchg
repnz
in
jnp
mov
lods
xor
mov
inc
mov
loop
notb
cmpsl
ret
xor
int
ret
mov
pop
into
test
and
les
out
repz
cmpl
sub
pop
dec
ret
ret
push
mov
frstor
inc
mov
fildll
call
lds
mov
xchg
repz
cmpsl
lock
notb
dec
sub
dec
jl
js
ljmp
arpl
xor
ja
lock
push
mov
stc
iret
push
lret
mov
mov
jp
inc
fdivl
in
sub
rolb
inc
test
sub
repnz
xchg
adc
jns
mov
xchg
adc
cmp
mov
lods
or
jle
xor
dec
les
int3
sub
cmpsb
xor
scas
pop
orb
sti
push
mov
rcll
adc
or
ljmp
pusha
notb
mov
mov
sub
out
jg
mov
addr16
pop
ljmp
xchg
jb
sub
lock
fisttpl
fnstsw
xchg
or
fs
popf
insb
test
mov
in
sbb
inc
les
int3
add
stc
out
mov
stos
cmp
sbb
pop
int3
stos
data16
mov
leave
dec
ret
mov
push
in
in
sbb
pop
cmp
sub
mov
inc
mov
jo
xorl
inc
xchg
ljmp
dec
fistpll
daa
inc
mov
add
ljmp
test
hlt
imul
insl
ret
insl
hlt
pop
mov
and
mov
inc
aam
sub
jp
in
das
arpl
outsb
or
sbb
cmp
inc
inc
fimuls
push
daa
mov
xchg
setg
or
pinsrw
fidivrs
test
push
not
push
lret
mov
pop
cmpsl
jmp
push
in
cmp
scas
cmp
mov
push
adcl
dec
fnstcw
test
push
cld
cli
jb
xchg
add
addr16
movsl
push
repz
pop
aam
sub
pusha
pop
repnz
and
stos
cmp
jb
xchg
sub
insl
and
add
xchg
push
rcll
jbe
inc
shll
fwait
decb
and
xor
push
ret
cmpsb
push
mov
mov
addr16
adc
int
jns
imul
frstor
mov
test
test
pop
jp
imul
lods
out
icebp
nop
arpl
jg
xchg
add
popa
ljmp
mulb
sbb
out
in
clc
lahf
push
xor
push
lds
idivl
mov
jne
outsb
or
pop
or
push
push
xor
addr16
fimull
fisubrl
inc
and
ja
outsl
lcall
ljmp
insl
pushf
sub
popa
icebp
nop
arpl
aaa
mov
inc
mov
mov
leave
rorl
mov
mov
jecxz
push
in
mov
ret
lret
xchg
loopne
icebp
nop
arpl
jbe
mov
movsl
int3
aas
fmuls
inc
es
xchg
adc
push
mov
js
ljmp
ss
jb
xchg
js
add
adc
or
add
sbb
xchg
sbb
add
mov
inc
mov
push
lret
cmc
mull
pushf
outsl
fcoml
push
xor
imul
mull
xchg
pusha
leave
pop
leave
pop
cmp
jle
inc
shlb
adc
mov
mov
inc
mov
hlt
insb
loop
je
inc
fimull
fidivl
lock
cld
fwait
jbe
mov
lods
cmp
or
sbb
pop
repnz
fs
jo
xorl
mov
cmp
pop
adc
mov
cmpsl
ret
sbb
cmpsl
sub
lds
pop
fisttpl
fnstsw
aad
repnz
fs
hlt
jp
jp
or
jg
popa
add
xor
adc
dec
lods
and
add
dec
sub
jo
data16
xchg
outsb
fistps
cmp
in
gs
pop
repnz
lret
stos
sarw
sub
jle
cmpsb
xor
scas
dec
jns
ja
loope
je
arpl
cmc
sbb
stos
cmp
sub
pop
int3
stos
data16
push
les
xchg
adc
nop
adc
roll
shll
adc
or
mov
ret
mov
sub
pop
movsl
xor
je
lea
enter
outsl
inc
enter
sbb
xchg
mov
test
pop
mov
pop
out
test
test
push
mov
sti
imul
dec
fwait
or
fimull
fisubrl
into
pop
cmp
jg
je
lea
fimull
fidivrl
ret
ret
push
mov
loop
je
or
jp
mov
pusha
add
andl
mov
mov
mov
mov
mov
mov
mov
ret
call
imul
aam
dec
cmpsb
push
pushf
sti
push
repz
lock
bound
inc
insb
inc
aam
inc
mov
mov
add
sub
shll
in
bound
add
pop
into
test
ret
cmpsb
push
mov
push
mov
lods
dec
dec
leave
pop
cmp
aaa
rcll
pop
mov
xchg
mov
outsb
cld
fwait
jbe
add
xchg
pop
fcoms
mov
jle
call
push
mov
xchg
push
fistpl
test
sahf
stc
or
pop
out
mov
fwait
pushf
or
in
movsl
roll
mov
jmp
jbe
nop
in
icebp
les
call
inc
add
add
mov
inc
mov
jbe
imul
sarb
dec
call
pusha
test
mov
sbb
add
pop
int
leave
test
call
mov
call
cli
cmp
into
dec
fidivrs
ds
test
mov
stos
into
cmp
inc
mov
xchg
call
and
fmuls
test
push
mov
shr
jb
add
jnp
cltd
or
push
or
sub
cmp
add
loop
cltd
push
pop
test
push
inc
sub
mov
cwtl
jb
xchg
testb
ficomps
sub
call
jb
mov
jns
dec
mov
movsl
mov
enter
aas
add
scas
adc
sub
subb
call
imul
push
mov
in
xlat
adc
inc
fmuls
fdivs
push
sbb
sub
into
inc
add
jecxz
pushf
xor
adc
inc
in
jns
jge
testl
add
dec
sbb
pop
rolb
shlb
test
mov
dec
mov
sbb
pop
nop
pop
xchg
repnz
shrl
pop
enter
push
lcall
into
test
push
xor
add
pusha
pop
repnz
jno
jecxz
adc
jl
xor
int
mov
scas
sub
dec
sub
adc
stos
cmp
inc
stos
sub
push
lds
xorl
daa
repnz
fisttps
lods
and
inc
mov
shlb
cmp
dec
sbb
adcl
out
mov
roll
aad
cltd
sbb
adc
fimuls
push
loop
hlt
push
cld
push
cmpsb
movsb
ret
ds
fimull
mov
shlb
scas
pop
xrelease
aad
xchg
or
push
lds
jne
data16
mov
add
jns
ja
xorb
jge
je
add
adcb
orb
ljmp
mov
cmpsl
push
aam
sub
int
addr16
hlt
pop
sbb
mov
add
movzwl
lea
ret
call
aas
mov
mov
and
mov
and
xor
cmp
je
mov
jmp
cmp
je
add
cmp
jne
xor
inc
ret
push
push
pushl
mov
mov
call
xor
jmp
call
test
dec
fidivrs
jl
testb
or
xor
pop
in
adc
pop
jb
sub
pushf
xor
ds
cmp
dec
push
pusha
pop
repnz
je
push
test
push
cltd
ljmp
and
dec
cmpsb
fcomps
test
push
lock
push
mov
mov
call
xchg
and
fs
push
mov
pop
fistl
idivb
mov
mov
stos
xor
popa
in
sbb
adc
dec
sub
xor
mov
adc
add
xchg
sbb
popf
or
dec
fstpt
or
cmp
in
jge
mull
add
push
jns
dec
pop
mov
jg
sub
add
cmpl
cmc
gs
dec
adc
push
cwtl
push
imul
stc
imul
call
stc
imul
cmp
pop
enter
das
adc
inc
xor
rol
xchg
jne
add
mov
mov
and
imul
adc
adc
or
push
enter
and
clc
xor
gs
push
je
lea
roll
aad
hlt
je
lea
fisttps
flds
push
mov
jl
mulb
enter
push
mov
or
push
fisttpll
out
mov
lods
lret
inc
movsb
inc
lret
lret
popf
or
data16
xchg
outsb
leave
movsb
sub
mov
addr16
jmp
jge
pop
lret
scas
pop
repnz
inc
aam
dec
call
inc
aad
dec
in
cltd
or
sub
xchg
mov
stos
cmp
adcl
jecxz
mov
cmp
pop
sub
add
out
jl
divb
mov
js
push
cmp
add
dec
enter
and
sub
push
lea
call
sub
mov
jne
xor
jmp
mov
mov
mov
test
je
test
jle
add
jmp
xor
jmp
rolb
addr16
mov
push
push
mov
test
je
cmp
jb
cmp
jb
lea
shr
push
pop
je
mov
mov
and
mov
cmp
jne
movzwl
and
add
lea
mov
add
inc
cmp
jb
add
jne
pop
pop
jmp
add
xor
inc
pop
leave
ret
call
adc
lahf
punpckhdq
cmc
add
aaa
cmpsl
aaa
push
mov
cmpl
xor
and
roll
rcll
divb
xchg
imul
cltd
add
repnz
pop
bnd
push
xchg
repz
mov
pushf
xor
insl
addl
mov
lods
push
lea
cli
push
push
mov
into
test
mov
pop
leave
test
stos
add
jns
addr16
sbb
insl
hlt
pop
imul
mov
call
pop
jns
jl
negb
fisttps
fsts
dec
fidivrs
and
mov
repz
in
int
lret
scas
pop
mov
lret
pop
ds
cs
inc
mov
insl
mov
pop
call
xchg
or
inc
roll
aad
daa
mov
adcl
pop
test
fwait
or
xor
hlt
mov
sub
into
scas
cmp
daa
mov
and
lds
stos
data16
jns
mov
sub
sub
push
repz
xchg
stc
data16
xchg
outsb
jmp
out
fistpl
test
enter
in
insb
loop
je
sub
rclb
lods
pop
mov
pop
enter
pop
fmuls
fdivs
xlat
arpl
xchg
gs
sub
xor
xchg
mov
inc
shlb
sub
sbb
cmp
xchg
sbb
mov
inc
mov
adcb
loope
cmpsb
icebp
lock
lret
lds
scas
pop
ljmp
pop
leave
pop
cmp
js
dec
ret
std
add
push
popa
nop
daa
push
rcll
data16
arpl
cmc
xor
ret
sbb
dec
roll
sarl
mov
ret
ljmpw
stc
subb
sbb
ds
sbb
push
shlb
test
mov
push
call
mov
push
call
xor
ret
call
or
pusha
notb
and
mov
call
call
orl
jl
ja
xorb
stos
cmp
dec
rcrl
test
mov
add
xchg
push
jp
fildl
call
gs
fmuls
fsubrs
outsb
cld
fwait
jbe
xlat
inc
aad
dec
cld
in
jl
jne
sub
call
inc
pop
push
xor
daa
sub
ss
movsl
int3
aas
mov
xor
enter
dec
mov
shll
push
les
mov
sbb
xchg
adc
inc
mov
mov
lcall
fidivrl
dec
sub
cmp
cmpsl
imul
pop
loop
js
fs
pop
or
adc
push
pushl
xorb
adc
in
sbb
mov
push
call
pop
inc
lret
lret
sbb
icebp
popa
add
adc
decl
repz
test
mov
gs
inc
lahf
adc
push
lahf
push
popa
icebp
popa
add
inc
mov
mov
sbb
adc
lret
call
mov
mov
aas
scas
lret
sbb
xchg
or
lret
push
cwtl
call
add
psubd
add
std
or
lea
sbb
push
leave
pop
cmp
or
dec
fistpll
clc
lahf
push
or
je
das
mov
ljmp
stc
adcb
xor
pop
fmuls
fdivs
mov
stos
int
flds
push
xor
xor
movsb
cmp
jnp
xor
test
add
sbb
lds
icebp
idivl
test
pop
xchg
repnz
outsl
out
adc
sbb
mov
lret
stos
es
cs
xor
cmp
add
es
inc
mov
lds
xor
leave
jle
dec
fistpll
xlat
mov
call
mov
inc
mov
movsl
inc
shll
pop
and
cmp
pop
lcall
repz
xorb
repz
cmc
sbb
sub
push
sbb
jmp
jecxz
jne
pop
jecxz
push
in
hlt
jo
xorl
add
dec
mov
sbb
adc
lock
fimuls
adc
push
clc
aaa
mov
inc
iret
pop
cmp
adc
mov
dec
mov
sub
je
sti
imul
dec
xchg
add
mov
lock
pushf
outsl
les
test
jge
cmp
inc
and
ja
sbb
inc
shll
add
jnp
xor
les
int3
dec
sbbb
jb
xchg
loopne
icebp
nop
arpl
add
lods
sub
lds
test
mov
lahf
punpckhdq
mov
inc
and
cmp
enter
sub
add
add
test
push
xor
jbe
cmp
mov
in
rcll
push
out
std
insb
loop
je
stos
cmp
mov
cmc
dec
fmuls
fdivs
inc
push
mov
push
push
mov
push
mov
push
mov
push
xor
mov
cmp
je
lea
push
push
pushl
lea
push
call
testl
je
xor
inc
jmp
jmp
and
sub
sarb
push
adc
add
lea
mov
add
mov
mov
mov
add
add
xor
xor
add
rorl
roll
mov
cmp
jb
mov
jmp
and
inc
mov
test
je
lea
push
pushl
add
pushl
push
call
xor
pop
pop
pop
leave
ret
call
xchg
jbe
cmpl
cmp
cmp
mov
jecxz
das
mov
lea
pop
into
test
push
cmp
jnp
xchg
mov
push
call
push
fldl
mov
dec
inc
and
pop
inc
lret
pop
ds
xchg
adc
stos
sub
test
pop
test
addr16
adc
adc
jecxz
fisttpl
imul
in
data16
xchg
outsb
popf
popl
std
or
push
xchg
mov
mov
gs
addr16
roll
shll
adc
in
sbb
add
jns
push
cld
pop
cmpsb
xor
int
mov
dec
fnstcw
lahf
cli
or
and
enter
jns
or
in
mov
jnp
test
jecxz
roll
aad
xor
push
dec
aam
sub
push
xor
sub
mov
dec
fisttpl
fstpl
dec
sub
adc
jns
mov
push
xchg
add
sahf
jbe
adcl
je
lea
adc
in
sbb
mov
jno
mov
add
pop
int
aam
dec
lods
call
test
xchg
add
bound
sahf
or
cmpsb
add
jmp
icebp
test
lahf
cli
or
leave
popa
nop
add
scas
aas
pop
test
dec
mov
imul
adc
inc
mov
out
sub
data16
xchg
outsb
mov
xchg
add
inc
xlat
mov
cmpsl
xor
or
scas
xor
cmp
mov
push
rolb
shlb
std
jns
mov
and
xor
jbe
repz
cmc
push
cmpsl
and
out
jl
testb
xchg
sub
pop
xchg
sbb
push
lds
test
enter
es
push
test
jge
cmp
jb
xchg
into
pop
int3
stos
data16
sahf
or
fmuls
mov
push
jns
and
mov
mov
and
mov
std
or
imulb
fwait
jbe
jl
jnp
in
add
cmpsl
ret
xchg
gs
adc
cmp
push
xor
daa
mov
cltd
clc
or
cs
pop
test
pop
fmuls
fmuls
inc
rcll
xor
sahf
or
cmpsb
dec
jnp
dec
ret
ret
fimull
fidivrl
mov
into
in
lock
lds
pop
jp
inc
cmp
xchg
sbb
ja
xorb
push
ret
cmpsb
push
cli
and
setle
cmpsb
cmovl
dec
das
fisubrl
xchg
or
xor
mov
mov
out
pop
xchg
adc
xor
sbb
mov
jp
jp
in
imul
adc
xchg
add
sahf
jbe
imul
inc
mov
movsl
fstps
xchg
addr16
xchg
xchg
repnz
ficompl
stos
xchg
arpl
je
out
push
int
aad
dec
mov
and
xor
inc
iret
pop
cmp
and
lds
iret
push
dec
fidivrs
pop
bound
push
mov
test
sbb
adc
xor
adcb
sbb
ret
scas
pop
bnd
js
ljmp
or
inc
and
mov
push
xor
and
pop
into
test
test
push
cltd
cld
popa
icebp
nop
arpl
mov
mov
inc
and
cmp
dec
fidivrs
mov
fimuls
sbb
xchg
loope
sti
sahf
insl
sahf
jbe
popa
add
sbb
jbe
cmpl
stc
imul
jge
notl
cmc
jl
jne
ja
mov
inc
mov
inc
lret
lret
pop
in
notl
push
dec
icebp
lock
lret
icebp
notl
or
lock
xchg
outsb
fistpll
orl
imul
movsb
ret
ds
fadds
mov
mov
test
mov
js
popa
rorb
push
rcrl
push
xor
dec
inc
lds
iret
add
mov
jg
bound
icebp
leave
dec
fidivrs
and
outsl
lcall
push
popa
nop
gs
pop
rorb
dec
mov
fwait
jnp
popf
or
sbb
aad
xlat
sub
push
jns
fs
sub
lcall
shll
shll
fnstcw
stos
int
lea
inc
and
jbe
jl
jne
xor
call
jp
and
outsl
lcall
mov
cltd
or
jnp
notl
jmp
cwtl
sub
and
xor
stos
sub
ficoml
ljmp
insb
or
out
fsubl
xchg
xchg
sar
js
mov
mov
mov
pushf
xor
dec
cmp
scas
and
loop
clc
lahf
push
dec
push
xor
cmp
jge
je
and
pop
int
addr16
dec
fnstcw
inc
and
push
popa
nop
sub
xor
push
push
xor
addr16
hlt
push
cld
dec
xchg
add
stos
cmp
sbb
push
imulb
mov
inc
mov
push
addr16
sbb
mov
inc
mov
sbbb
and
fldl
mov
fnstcw
inc
daa
sarb
or
pop
fstpt
and
mov
inc
mov
test
xchg
repnz
out
imul
rclb
xor
ljmp
test
shll
xchg
mov
test
mov
xor
pop
int
and
arpl
push
lds
aas
lret
mov
mov
push
lahf
punpckhdq
pop
loop
mull
icebp
pop
pop
lret
pop
ds
mov
data16
insb
or
in
fldl
dec
movsb
test
mov
sbb
jge
mov
pushf
sti
push
fbstp
push
mov
cmpsb
shll
les
mov
add
insl
adc
push
lcall
shlb
icebp
nop
arpl
and
ret
jb
imul
inc
and
jns
xor
add
dec
rclb
addr16
pop
xchg
repnz
dec
loop
adc
pop
int3
inc
and
notl
inc
and
jns
scas
cmp
mov
setp
outsl
lcall
sub
pop
push
xor
and
adcl
test
xchg
or
sbb
bound
push
xor
daa
inc
mov
push
aam
sub
inc
sub
cmp
push
mov
lds
cli
or
mov
ret
inc
int
and
es
fmuls
fdivrs
outsb
out
adc
or
movsl
xor
jnp
mov
cmp
and
gs
and
pop
inc
and
jns
push
mov
mov
das
test
outsb
or
dec
xchg
add
or
xchg
mov
sbb
push
jns
aas
adc
pop
jb
sub
call
andl
inc
daa
sarb
fildl
mov
stos
adc
sbb
or
fstpl
cmp
gs
xorb
or
lods
xor
daa
mov
and
sub
adc
ret
inc
aam
dec
cmpsb
scas
sub
sbb
sub
inc
aad
dec
mov
ds
popl
xchg
icebp
add
cli
jbe
cmpl
jg
mov
adc
or
in
jl
jne
xor
sub
dec
sti
pusha
cmc
gs
push
add
push
popa
nop
daa
sub
fs
popf
insb
scas
iret
push
lret
mov
jns
test
mov
and
xor
jp
outsb
or
xor
gs
pushf
outsl
test
push
lret
mov
pop
iret
stos
pop
xor
loopne
jb
aaa
mov
inc
mov
sbb
mov
stos
push
fdivl
in
rcrl
test
popf
in
icebp
gs
bound
and
mov
dec
fdivrs
outsb
or
cmp
jecxz
push
test
push
test
pushf
xor
or
pop
movsb
fwait
or
icebp
popa
add
inc
or
add
mov
nop
push
xchg
or
pop
pop
push
xor
sub
and
and
aaa
lea
and
scas
leave
cmp
dec
test
outsl
or
out
addl
lock
repz
xchg
dec
into
pop
cmp
sub
in
dec
ret
mov
add
popa
jmp
adc
popf
sbb
loope
adc
adc
jbe
loopne
mov
ljmp
and
dec
fdivl
in
repz
notb
shlb
hlt
xchg
outsb
hlt
push
cld
dec
xor
pop
xchg
adc
inc
in
pop
jp
push
xor
fs
xchg
cmc
add
inc
fimuls
push
inc
fimuls
popa
pop
adcb
addb
push
ret
cmpsb
push
lcall
push
fisttpl
fnsave
mov
movsl
int3
aas
fadds
mov
jle
jne
inc
mov
xchg
mov
mov
jns
mov
xchg
and
loopne
out
jg
jmp
inc
mov
xor
push
lds
movsl
sub
and
roll
rcll
loopne
jecxz
jne
mov
mov
cmp
mov
jle
cmp
jne
mov
dec
fmuls
fsubrs
pop
xchg
adc
aad
insb
or
mov
push
xchg
inc
fdivl
in
dec
rolb
sarb
loop
jmp
mov
inc
mov
int3
push
shll
cmp
add
out
jl
negb
sbb
xor
dec
test
std
or
push
adcb
cmpb
notl
out
jno
cmpsb
and
scas
aas
pop
test
lds
nop
sbb
xor
sahf
or
cmpsb
add
mov
je
outsb
or
cmp
pop
int
addr16
xchg
testb
sub
das
pushf
sub
or
adcl
test
pop
roll
aad
arpl
fs
pop
in
jne
mov
or
lahf
add
fildl
mov
stos
nop
push
pushf
sti
push
xchg
cmpsl
aaa
push
mov
imul
push
repz
out
lcall
sti
sahf
insl
xchg
ret
mov
arpl
cmc
push
or
pop
jp
jg
lods
cmp
push
lret
mov
outsl
mov
mov
js
jp
fstpt
mov
ficoml
mov
pop
bound
cmpl
loopne
adc
dec
add
sub
jns
jmp
lds
mov
bound
pop
cmp
jg
mov
js
cs
or
push
ret
cmpsb
push
mov
pop
int
addr16
add
sbb
cmpsb
xor
scas
sub
mov
ljmp
mov
mov
in
jae
xchg
cmp
or
in
ret
xchg
adc
and
dec
lds
iret
xor
xchg
push
mov
es
mov
test
arpl
xchg
gs
mov
inc
mov
jae
insb
or
mov
test
ret
push
mov
adc
xor
cli
push
sub
push
lds
cmp
adc
movsb
cmp
or
and
mov
push
stc
cwtl
imul
sahf
faddl
mov
lds
xor
adc
ljmp
setg
or
mov
les
push
and
cwtl
sbb
aad
rcll
dec
fnsave
mov
xchg
repnz
loope
clc
lahf
push
daa
lods
cmp
repz
cmc
add
test
pop
test
insb
loope
adc
xor
xor
inc
leave
pop
cmp
outsb
adcb
out
movsb
adcl
push
lds
iret
jl
std
insl
hlt
pop
lods
imul
testb
out
inc
or
or
dec
rolb
rclb
aas
movsb
cmp
dec
sahf
push
xchg
repz
in
mov
inc
fisttpll
out
seto
popa
nop
pop
lds
mov
mov
cmp
lds
iret
sub
fldl
test
jge
pop
sbb
pop
iret
stos
pop
pop
dec
fnstcw
out
mov
sub
cmp
dec
push
fimull
fisubrl
ret
movsl
push
repz
scas
leave
cmp
mov
shlb
pop
aas
lret
cltd
or
das
rcll
push
sti
lret
scas
pop
jmp
mov
pop
int3
inc
and
xor
or
jecxz
gs
push
stc
popa
icebp
nop
arpl
mov
add
adc
mov
nop
arpl
insb
icebp
popa
add
jbe
dec
fistpll
sahf
stc
or
push
xchg
add
sahf
jbe
adc
std
insl
hlt
pop
sti
test
xchg
lock
dec
leave
pop
cmp
cmp
gs
pushf
outsl
test
fs
popf
insb
lahf
pop
xlat
inc
and
cmp
push
jbe
jo
notl
mov
lods
mov
xchg
fists
mov
xor
add
ret
es
xchg
dec
sub
push
call
cs
mulb
dec
out
jg
mov
rolb
mov
stc
stos
lods
lret
inc
loope
setg
or
imul
insl
mov
ret
pop
cmp
and
ja
loope
cmp
xor
es
xorb
dec
fdivrs
punpckhdq
aam
rcl
lret
mov
jecxz
iret
dec
fnstcw
jns
jmp
cmp
dec
lds
iret
das
popa
out
jg
jmp
scas
pop
test
stos
cmp
or
jae
xchg
das
mov
rcrl
fs
int
int
sarl
fldcw
orl
mov
in
mov
mov
xlat
inc
and
jbe
dec
fidivrs
notl
pop
and
push
jns
jo
loop
jmp
pushf
outsl
xchg
mov
xchg
jle
and
cmp
xor
mov
cwtl
decl
ret
lods
cs
out
adc
pop
inc
les
int3
sub
mov
dec
mov
out
lds
dec
movsl
and
xchg
mov
inc
xlat
mov
lods
jne
and
inc
cwtl
push
test
push
mov
xor
fildll
call
shll
lret
pop
ds
xchg
push
xchg
repz
cmpsl
mov
dec
fdivl
in
mov
or
repnz
fs
mov
dec
jecxz
push
in
pop
push
xor
or
and
adc
xchg
add
jns
fisttpl
fstpl
cmp
sub
jge
cs
inc
mov
dec
iret
pop
cmp
aas
mov
fstpl
test
cmpsl
divb
xorb
adcb
xorb
mov
rolb
shlb
rcrb
stos
pop
test
stc
push
fimull
fisubrl
push
jp
in
dec
movsb
sub
leave
pop
cmp
or
pop
xchg
in
sbb
mov
pushf
lods
inc
shll
imul
push
cmpsb
xor
les
int3
gs
jg
jmp
cmp
jo
jae
xchg
mov
leave
pop
lret
pop
ds
in
adc
imul
cs
mov
scas
pop
fmul
dec
fnstcw
xchg
cld
pmulhw
dec
fistpll
out
mov
push
nop
push
popa
nop
outsb
roll
dec
cltd
cli
jle
mov
scas
pop
mov
ljmp
push
xor
dec
sub
add
in
ljmp
jb
xchg
icebp
adcl
test
lods
lret
inc
loope
lock
inc
push
push
or
lahf
push
pushf
sti
push
mov
jb
push
xchg
testb
dec
loopne
call
lods
xor
push
roll
aad
daa
mov
test
cmpsl
ret
and
push
lds
xlat
mov
enter
test
mov
shlb
cmpsl
aaa
push
mov
sbb
or
lret
pop
ds
or
les
int3
cmp
popa
icebp
nop
arpl
decl
cmc
jle
mov
daa
shlb
mov
fwait
decb
psubd
aad
sub
or
jb
in
pop
xlat
inc
and
js
cli
push
lock
pop
ljmp
jge
je
sub
fimull
fisubrl
mulb
push
push
rclb
ja
out
adc
dec
xchg
or
in
xlat
leave
push
shlb
or
mov
push
pop
add
fwait
pop
push
xor
sub
fdivl
cmp
inc
rorl
movsb
push
rcrb
xchg
mov
lea
push
xlat
inc
and
aaa
adc
pop
xchg
add
sahf
jnp
jl
jne
jp
out
adc
cmp
jnp
mov
pop
jecxz
push
in
repz
pop
inc
and
cmp
sbb
fimull
fisubrl
adc
lods
lret
inc
xchg
dec
push
xor
or
mov
clc
cld
jb
or
sbb
or
js
fldt
and
repnz
test
lea
lcall
push
cmp
jnp
adcl
ljmp
stc
mov
xor
int
xchg
sti
jae
xchg
cmpsb
aaa
cmpsl
ret
fwait
or
sub
push
lds
dec
sub
sbb
shlb
or
adc
int
cltd
or
push
cmp
and
lea
pop
jp
jg
outsl
call
inc
lahf
add
leave
push
mov
jg
jmp
and
push
cli
js
mov
cwtl
sbb
outsb
cld
fwait
jbe
xchg
push
test
push
sti
sub
cmp
push
jge
push
rolb
shlb
adc
rcrl
stos
pop
xchg
xchg
push
mov
les
jl
notb
stc
jo
xorl
imul
xchg
inc
gs
jg
jmp
inc
mov
scas
inc
shll
cmp
mov
sahf
push
pushf
sti
push
cmpsl
mov
mov
push
call
pusha
xchg
add
std
or
in
adcl
test
insl
stc
imul
sbb
and
inc
and
les
mov
adc
or
in
dec
push
shlb
mov
dec
adc
bound
mov
jno
pusha
pop
repnz
dec
repz
xchg
aad
shll
push
in
cmp
ljmp
cmp
call
cmp
inc
shll
test
push
fnsave
jg
jmp
mov
faddl
mov
lds
xchg
jbe
push
cld
xor
xor
imul
sbb
add
outsb
or
sbb
aad
mov
cli
push
xlat
inc
and
sub
lds
pop
ds
orl
stc
or
jge
imul
pop
hlt
adcl
test
test
pop
test
pop
xlat
inc
and
or
xchg
add
push
test
mov
stos
cmp
sbb
inc
in
ljmp
test
out
in
jg
fmull
mov
outsb
or
push
adc
add
xor
lock
bound
lea
dec
mov
daa
rclb
jns
mov
out
insb
loop
je
xor
sub
push
dec
int3
inc
and
jno
jecxz
lds
mov
mov
xchg
pop
cwtl
adc
lods
and
push
push
lea
lods
lret
inc
loope
ljmp
stc
rol
dec
fidivrs
jne
out
dec
jg
arpl
cmc
inc
mulb
push
cld
insb
loop
je
add
dec
fmuls
fsubrs
fwait
or
xor
xchg
add
es
shll
inc
daa
rclb
fwait
add
mov
inc
mov
popf
add
std
or
int3
push
shlb
mov
jno
popa
add
cmp
test
jge
fs
dec
ret
mov
or
add
mov
stos
int
jmp
xor
int
leave
sub
pop
rolb
shlb
jno
push
xor
inc
xlat
mov
mov
shlb
lock
and
popf
or
sub
es
dec
mov
push
jns
jmp
push
rcll
push
shlb
or
in
mov
mov
test
jecxz
mov
inc
mov
aaa
lods
and
push
mov
mov
add
mov
xchg
adc
jne
out
push
notl
jge
insb
or
out
addr16
sbb
add
inc
movsl
aam
shlb
xchg
popa
mov
insl
sahf
push
roll
sarl
sub
xor
scas
pop
and
fwait
adc
movsl
xor
repnz
pop
repnz
daa
test
pop
test
sbb
cmp
mov
mov
das
fwait
mov
adcl
pop
ljmp
out
jmp
adc
sub
scas
sbb
jo
xorl
mov
js
imul
stc
pusha
notb
gs
jp
call
insb
out
jl
idivb
cmc
jbe
cmpl
mov
divl
cmpl
fdivl
in
test
mov
add
pop
fdivl
in
test
mov
and
scas
sub
cmp
sub
add
add
dec
sbb
push
jae
bound
ljmp
outsl
lcall
pushf
push
adc
outsb
cld
fwait
jbe
test
mov
lea
cmp
rcll
xor
mov
inc
mov
cmp
sub
pop
push
fisttpll
out
aas
mov
inc
mov
idivb
mov
cmp
mov
popf
or
stos
aas
scas
lret
fisttps
movsb
push
in
hlt
push
cld
push
fmuls
mov
pop
jp
ds
in
je
xor
inc
fidivrl
xchg
testb
int
cwtl
add
dec
fistpll
in
jle
andb
and
aam
in
push
xlat
inc
and
aaa
adc
imul
adc
adc
jns
xchg
testb
inc
lods
mov
xchg
lock
popa
ljmp
add
jo
mov
int3
inc
shlb
cmpsl
ret
pop
inc
and
sbb
mov
inc
mov
mov
xor
sbb
pop
int3
stos
iretw
mov
cltd
xor
jae
xchg
push
mov
js
rorb
mov
sbb
and
cld
imul
insl
subl
add
jbe
pop
xchg
adc
lods
push
fwait
or
jae
or
or
std
insl
hlt
pop
sti
add
scas
sub
inc
aam
dec
cmpsb
dec
lds
iret
jp,pt
addr16
sbb
lret
loope
adc
adc
mov
push
fisttps
fnstenv
pop
aam
sub
cmp
or
fisttps
fsts
je
lea
jo
xorl
lret
fldt
lcall
addr16
dec
pop
int
and
jb
push
flds
mov
mov
fmull
inc
and
cmp
xchg
pop
bound
fwait
jbe
outsl
repz
cmc
cmp
add
sbb
push
mov
xor
rolb
shrb
mull
icebp
sub
test
or
mov
arpl
xchg
orl
mov
jmp
add
aam
sub
sub
pop
mov
and
in
xchg
xchg
repnz
out
movsb
add
xlat
stc
outsb
cld
fwait
jbe
mov
mov
and
add
push
xchg
dec
aad
sub
aas
hlt
insb
loop
je
pop
les
int3
and
inc
aam
dec
leave
icebp
outsb
cld
fwait
jbe
stc
jns
mov
bnd
xorb
or
pop
fstpt
push
mov
fmuls
les
arpl
cmc
push
rcrb
scas
pop
mov
jbe
cmpl
roll
shll
add
ja
or
in
sbb
dec
nop
sbb
sahf
adc
xchg
add
sahf
cmp
pop
repnz
shlb
in
adcl
test
jo
ja
loope
dec
fdivl
in
mov
pushf
stc
jae
xchg
fisttpl
mov
stos
into
cmp
push
movsl
inc
jp
jo
loop
inc
fdivl
in
mov
xchg
adc
mov
popf
insb
movsl
jno
pusha
pop
repnz
xlat
divl
cmpl
mov
jle
jne
std
insl
hlt
pop
sarb
xchg
cmc
add
stc
jl
jne
insb
in
data16
xchg
outsb
popf
cmp
mov
scas
leave
cmp
jno
outsb
or
or
sahf
or
cmpsb
add
inc
aam
dec
lcall
pusha
repz
cmc
push
std
insl
std
test
xchg
or
imul
pop
repnz
fs
mov
call
sub
dec
lea
lahf
cli
or
mov
mov
insb
loop
je
xchg
sbb
cmpsb
xor
scas
dec
ret
dec
fdivrs
push
xor
sbb
pushf
dec
mov
xchg
repz
int3
arpl
jl
notb
iret
pop
cmp
popa
dec
fisttpll
out
fimull
mov
ja
call
lahf
xchg
pop
mov
test
and
pop
int3
stos
data16
enter
or
inc
aam
dec
jmp
sti
dec
mov
mov
and
mov
add
pop
dec
jecxz
push
in
popf
or
jl
jne
xor
jge
je
and
pop
cmp
adc
mov
inc
mov
out
jne
mov
insb
sti
imul
adc
push
call
add
mov
int
add
addr16
jge
notl
in
jecxz
jne
push
fimuls
inc
arpl
bound
mov
sbb
nop
and
data16
xchg
outsb
fcoms
push
xor
sbb
mov
lods
inc
shll
xchg
lock
cmp
xorl
mov
js
cs
rolb
rclb
xchg
add
jnp
call
test
insl
mov
mov
inc
shll
mov
mov
gs
jbe
cmp
mov
mov
add
xchg
ret
mov
stos
sti
jp
jp
jg
outsl
or
stc
lcall
push
mov
rcrl
lcall
push
xor
cmp
dec
lret
mov
cmpsb
scas
es
cs
jno
xorb
xlat
inc
and
or
xchg
sbb
in
sub
push
xor
cmp
je
mov
mov
lea
jmp
movb
inc
mov
decl
test
jne
mov
lea
jmp
movb
inc
mov
decl
test
jne
mov
dec
cmp
ja
jmp
mov
push
push
add
jmp
mov
push
push
pushl
mov
call
pop
add
push
lea
push
call
add
mov
push
pushl
lea
push
push
call
pop
call
push
lea
push
call
lea
push
call
lea
push
mov
add
push
lea
push
call
add
push
pushl
lea
push
push
call
pop
pop
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
push
lea
push
call
lea
push
call
lea
push
mov
add
push
lea
push
call
inc
add
push
pushl
lea
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
push
push
call
fidivs
shr
xor
inc
pop
leave
ret
mov
push
push
adc
push
adc
repz
adc
repz
adc
repz
adc
repz
adc
repz
adc
repz
adc
repz
adc
xor
add
int3
or
aas
cmp
jo
jns
jmp
jl
jp
in
push
aas
cmpsb
xor
scas
inc
and
mov
mov
mov
add
out
mov
mov
and
and
nop
testl
stos
ror
arpl
xchg
gs
fiaddl
mov
sbb
xlat
mov
lods
jbe
call
movl
push
fimuls
add
lret
lret
cld
xchg
cmc
add
xchg
sbb
adcl
push
les
mov
jns
mov
mov
mov
sbb
dec
add
add
je
bound
mov
and
imulb
cltd
push
sub
outsb
or
xor
pop
cmp
aas
iret
dec
loopne
mov
push
xchg
add
push
rcrl
stos
rcr
ret
cmpsb
push
in
cmpsb
xor
scas
pop
push
mov
xchg
daa
pop
leave
pop
cmp
pusha
mov
aas
cmp
add
inc
iret
pop
cmp
xor
push
sub
adc
push
pushf
sti
push
mov
mov
ficoms
cmpsl
push
nop
stos
es
mov
adcb
xorb
xchg
dec
call
sbb
dec
fidivrs
lcall
popf
in
loopne
push
xor
daa
xor
sub
xor
inc
add
mov
mov
data16
cmc
adc
jg
aad
sub
sub
popl
xchg
icebp
add
mov
repnz
iret
pop
cmp
jo
mov
inc
mov
in
dec
mov
call
ljmp
mov
std
or
mov
xchg
repnz
outsb
loop
pop
loop
lock
test
call
xchg
pop
xchg
repnz
and
inc
in
repz
mov
add
sub
stos
ds
inc
push
xor
xor
jo
loop
popa
jmp
push
in
push
jbe
popa
add
sbb
adc
sbb
mov
sbb
sub
sbb
aad
sub
cli
popf
insb
mov
adc
and
pxor
jne
je
out
inc
popa
mull
icebp
dec
scas
lods
lret
inc
out
in
loopne
jb
int
enter
xchg
add
adc
cmp
jg
mov
jmp
pushf
outsl
xchg
push
xor
es
push
xor
dec
sbbb
std
insl
hlt
pop
int3
inc
les
int3
and
mov
xchg
sbb
mov
gs
push
fmuls
fmuls
aam
mov
adc
imul
push
std
sbb
push
xor
and
movsl
xor
pop
lret
scas
pop
popl
mov
xchg
dec
fisttpll
out
pop
int3
inc
and
call
loope
push
mov
lcall
dec
jecxz
call
aam
dec
ret
std
inc
mov
icebp
imul
cmc
add
mov
xorl
loope
cmp
and
xor
and
seta
bound
cmp
mov
mov
js
popa
add
movsl
and
aas
mov
jbe
addr16
sub
jmp
inc
mov
test
xor
fcoms
mov
inc
es
pop
xlat
inc
and
sub
adcb
andb
mov
inc
mov
cwtl
adc
in
sbb
jo
xchg
testb
cmp
mov
pop
into
test
push
xor
addr16
jae
xchg
mov
mov
xchg
add
and
cwtl
push
imul
xchg
add
jno
fisttpll
out
iret
push
les
push
cld
jnp
jae
xchg
sbb
leave
dec
fdivrs
jle
call
push
mov
and
mov
push
call
call
test
je
push
call
jmp
call
mov
les
out
adc
pop
iret
pop
into
test
mov
sub
cmp
sub
fiaddl
mov
test
or
mov
test
mov
pinsrw
movsl
sub
push
pushf
sti
push
repz
lock
bound
pop
xchg
adc
sbb
aad
int3
gs
jge
testl
fdivrl
pop
lea
lret
lret
out
adc
dec
fsts
mov
mov
rolb
shlb
cmp
mov
mov
pop
into
test
xor
or
xchg
add
push
xor
js
lods
cmp
pop
iret
stos
pop
movsb
flds
mov
mov
xor
mov
mov
mov
and
push
push
xor
call
dec
lret
xchg
add
popf
or
mov
inc
mov
outsb
out
jl
negb
mov
cwtl
decl
out
sub
js
cli
jle
mov
shll
push
fdivl
in
lods
and
aam
repnz
cmpb
daa
inc
mov
scas
and
aas
scas
lret
aas
mov
inc
mov
iret
inc
shlb
mov
cmp
loop
loopne
jb
pusha
mull
icebp
push
adc
xor
inc
fidivrl
push
imul
pushf
xor
addr16
push
mov
xchg
add
js
add
pushf
xor
and
test
pop
test
ds
lea
push
ret
jae
mov
call
and
dec
fnstcw
push
jns
pusha
push
cwtl
push
imul
fimull
ficoml
stc
jp
jp
mov
lods
das
scas
cmp
mov
xchg
adc
or
daa
mov
and
jns
mov
cli
jo
xorl
lret
ja
xorb
sbb
pushf
adc
xchg
add
inc
jb
xchg
aam
iret
stos
pop
shlb
add
inc
int
int3
stos
iretw
xchg
add
sbb
mov
ret
scas
pop
repnz
cwtl
imul
or
in
mov
adcl
test
cmp
pop
leave
test
mov
lds
iret
and
or
rclb
sub
ret
push
lds
fwait
sbb
in
sbb
notb
addr16
sub
sarb
or
idivl
test
adc
icebp
popa
add
add
imul
pop
sbb
adc
popf
adc
jbe
cmpl
mov
sbb
stc
push
icebp
gs
pushf
outsl
fsubrl
in
fmull
mov
or
ds
sub
movb
cmp
stc
in
std
fs
popf
insb
test
arpl
cmc
je
stos
cmp
sub
jne
mov
xlat
push
lret
mov
inc
xlat
mov
cmpsl
std
jl
jne
popa
xor
sti
jl
jne
push
int3
dec
fidivrs
push
fwait
add
sbb
inc
daa
shlb
mov
lods
out
in
mov
push
in
mov
mov
setg
or
or
jle
jb
xchg
cld
adcl
test
push
ret
cmpsb
push
lods
fistps
test
jmp
inc
fidivrl
sbb
and
loope
adc
add
and
jnp
imul
pop
nop
sbb
stc
jnp
mov
ja
push
stc
imul
dec
adc
dec
mov
cwtl
mov
and
movsl
sub
imulb
cmpsb
call
mov
xchg
add
push
leave
push
shlb
loop
cmc
arpl
push
xor
xchg
jb
or
pop
jp
pop
and
movb
dec
cmpsb
fdivrl
stos
call
push
cmp
fistps
stos
or
fdivrl
jbe
loopne
and
ss
mov
cmp
and
pusha
xchg
arpl
jle
call
sbb
or
sbb
mov
test
cmp
mov
add
xor
adcl
test
xor
sbb
jge
negl
and
mov
inc
out
cmp
repz
xchg
outsb
leave
xlat
push
ret
cmpsb
push
nop
push
enter
sub
push
les
sub
push
and
add
push
roll
rcrl
sbb
mov
lods
dec
enter
sub
jp
out
notl
add
add
int3
and
jbe
cmpl
fimuls
add
adcl
test
jb
xchg
ss
sti
je
lea
stos
cmp
push
push
not
inc
shlb
xor
and
es
cs
imul
mov
jle
and
cltd
or
cs
aaa
pop
push
xor
or
int
mov
rcr
shlb
imul
jl
rcll
inc
inc
push
xor
pop
mov
sahf
stc
or
je
push
cld
adc
in
sbb
mov
xchg
add
inc
jns
mov
in
notb
jg
jmp
add
adc
scas
cmp
mov
jbe
insl
hlt
pop
divb
mov
push
fimull
fimull
cmpsb
sub
inc
shll
test
push
test
mov
dec
mov
shll
xchg
dec
fimull
fidivl
hlt
push
cld
dec
fisttpl
push
std
je
jbe
loopne
test
shll
sahf
stc
or
out
je
lea
jnp
mov
add
outsl
mull
icebp
js
pop
sub
pop
fisttps
pop
fisttpll
out
add
imul
xor
rcll
lods
pop
test
fdivl
in
lods
es
dec
aam
repnz
andb
add
and
mov
add
and
ret
add
mov
scas
sub
sub
cmpsb
xor
scas
pop
js
jg
jmp
and
pusha
pop
repnz
enter
rcll
cmpsl
popa
stc
imul
int3
stos
data16
mov
jns
imulb
test
mov
mov
mov
ficompl
test
notl
les
frstor
xor
outsl
lcall
push
iret
dec
fdivrs
cli
popf
insb
lahf
xor
jmp
icebp
nop
arpl
add
outsb
and
sub
push
cld
adc
pop
int
loopw
repz
cmc
je
adc
in
sbb
clc
jns
mov
stc
jg
mov
pop
jecxz
push
in
and
jmp
push
in
cmp
adc
roll
sarl
test
pushf
sti
push
in
inc
mov
mov
movsb
inc
or
stos
sub
mov
dec
mov
leave
cmp
xchg
cltd
clc
or
mov
sub
and
mov
mov
mov
sub
or
in
mov
xchg
xor
jbe
out
adc
or
xor
push
seta
bound
or
jle
fmuls
fcoms
imul
sbb
add
inc
daa
sarb
rclb
mov
jno
jecxz
insl
ljmp
dec
sub
adc
push
lret
mov
xchg
or
outsl
xor
sub
push
xor
sub
mov
dec
mov
jb
sub
repnz
jp
out
popa
icebp
nop
arpl
lret
pop
iret
stos
pop
shrl
xchg
stc
outsl
lcall
dec
sub
dec
movsb
xor
xor
pop
int
shlb
mov
inc
mov
jge
jne
out
xor
jmp
xchg
fldl
dec
movsb
jnp
jnp
in
insb
xor
or
push
rolb
sarb
lcall
out
adc
or
pop
cmp
sub
stos
cmp
jl
push
pushf
sti
push
jecxz
loopne
adc
or
adcl
test
mov
bnd
jp
push
fmuls
fsubrs
test
mov
cs
imul
insl
mov
in
sub
jns
mov
push
ret
ret
imul
insl
ret
and
add
loope
in
jg
mov
mov
xchg
cltd
addr16
pop
repnz
into
push
lret
lahf
scas
xor
int
ficoms
std
sbbl
in
jmp
das
mov
push
mov
mov
sbb
movsb
push
mov
xchg
cmc
add
mov
cli
test
mov
in
mov
sbb
fcmovb
call
subl
test
stos
sub
loop
pop
loop
sub
cmp
jle
jo
xorl
fdivs
inc
enter
cmp
rcr
push
shll
fsubrs
fcmovu
push
les
lcall
ret
cmpsb
push
xchg
pop
leave
test
adc
adc
mov
dec
fmuls
fdivs
inc
fidivrl
bound
xor
adc
xchg
rorl
mov
push
xor
pusha
pop
repnz
inc
xlat
mov
lods
sbb
rorb
mov
push
cmp
dec
seto
popa
nop
pop
in
outsb
cld
fwait
jbe
sarb
call
cmpsl
jb
insl
hlt
pop
mov
int3
jp
fimuls
dec
imul
cli
imul
in
jge
testl
cmp
mov
dec
mov
out
sarb
lods
xor
int
popa
clc
outsb
or
adc
outsl
or
and
adc
add
or
sbb
adc
sub
xchg
add
insb
mov
cmp
add
add
lock
cmpsl
ret
or
jle
mov
shlb
call
stos
sub
lds
hlt
jno
xorb
dec
fstpt
mov
sbb
and
mov
arpl
cmc
pop
aaa
mov
push
jns
jo
and
push
jmp
jmp
call
jle
xor
ja
je
out
inc
rolb
mov
fisttps
mov
loope
jae
roll
mov
jmp
das
out
jl
jne
out
lgs
mov
adc
sbb
add
je
jl
divb
jb
lock
inc
fmuls
fdivs
cmp
cli
imul
insl
in
ljmp
call
add
movsl
xor
ljmp
cmp
jle
jl
jne
inc
and
ret
mov
mov
add
call
stos
pop
sahf
or
cmpsb
inc
ficomps
test
and
lds
pop
cmp
cmp
add
pop
int3
stos
xchg
cs
call
push
js
mov
mov
cld
push
inc
aad
sub
jp
mov
lahf
add
std
or
inc
jecxz
push
in
mov
mov
sbb
mov
notl
push
popa
nop
pop
popa
loop
pop
loop
push
xchg
add
sahf
jbe
adc
call
mov
pop
cmp
pop
cmp
cmp
std
insl
hlt
pop
in
fistps
scas
pop
test
pop
lret
scas
pop
mov
pop
mov
ret
hlt
push
cld
pop
mov
xchg
lock
orb
adc
inc
iret
pop
cmp
jo
xchg
pop
bound
xor
inc
mov
push
xchg
add
pop
leave
test
call
mov
sub
push
mov
mov
mov
push
xor
or
insb
loop
je
xchg
or
call
out
mov
fldcw
inc
mov
int
adcb
andb
fnstcw
add
insb
loop
pop
loop
xor
xchg
and
ret
ret
jno
xorb
aad
sub
je
mov
inc
mov
and
jb
jp
in
pop
dec
fisttpll
out
or
adcl
insl
std
test
pop
repnz
xchg
int
loopne
adc
or
xchg
mov
jo
jge
divl
cmp
jo
xorl
mov
xchg
cmc
add
loope
cmc
pushf
outsl
xchg
lea
cwtl
decl
fisttpll
mov
jg
jg
std
insl
hlt
pop
in
mov
int
jg
mov
inc
into
pop
cmp
xor
cwtl
push
imul
sub
fcoms
pop
sahf
jmp
hlt
xchg
outsb
leave
lahf
adc
lods
lret
inc
out
xchg
sbb
jge
mov
add
pusha
dec
fdivl
in
push
lods
and
and
ja
arpl
cmc
xor
cltd
or
jnp
mov
enter
push
mov
cmp
mov
jle
or
into
pop
cmp
pop
addr16
sbb
push
jns
pusha
xor
scas
sub
arpl
xchg
gs
mov
mov
movsb
ret
ds
and
stos
and
fisttpll
out
cmpsl
cs
in
bound
cltd
clc
or
int3
inc
mov
andb
push
cmc
push
sahf
or
in
mov
test
imul
pop
iret
stos
pop
dec
fdivl
in
pusha
hlt
push
cld
dec
cmp
cli
add
shlb
add
add
add
add
add
add
add
add
jno
add
add
lock
add
jno
add
jno
add
add
add
add
add
add
jb
gs
inc
popa
jae
cs
insb
add
dec
gs
gs
inc
popa
jae
cs
insb
add
movsb
jo
add
jo
add
jo
add
add
add
add
push
jno
add
jo
add
add
add
add
jb
add
or
add
jo
add
add
add
add
add
add
add
add
jno
add
add
lock
add
jno
add
jno
add
add
add
add
je
fs
jo
gs
dec
outsb
outsw
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
lar
outsb
inc
insb
imul
add
add
jo
jns
insb
imul
add
insl
add
je
insb
imul
inc
popa
je
add
inc
add
outsl
jae
inc
insb
imul
add
clc
add
jae
popa
addr16
outsl
js
add
add
jo
imul
push
inc
push
xor
cs
insb
add
mov
gs
outsl
insb
fs
popa
je
inc
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
pop
int
cmpsb
std
data16
xchg
outsb
mov
pop
inc
fmuls
fdivs
add
scas
aaa
cmpsl
ret
inc
push
xor
push
fcompl
xchg
lea
and
adc
add
test
jge
jb
adc
pop
lret
scas
pop
scas
add
insl
in
sbb
push
mov
scas
leave
cmp
lret
inc
shll
pop
cmp
cmp
dec
fstpt
sub
outsb
xchg
sbb
mov
jg
sub
jae
fmull
movsb
push
cld
hlt
fs
popf
insb
fstl
push
xor
data16
cmp
movsb
ret
mov
sub
inc
mov
xchg
adc
xchg
or
in
idivb
cmpsl
aaa
push
mov
std
or
imull
lcall
ret
movsl
xor
std
insl
hlt
pop
in
dec
roll
aad
js
outsl
or
loop
pop
xchg
repnz
jo
gs
sub
pusha
pop
repnz
ds
sub
pop
roll
shll
std
jnp
mov
cwtl
pop
xchg
adc
mov
xchg
repz
test
pushf
dec
sub
fcomps
scas
pop
cld
adcl
mov
mov
and
int
iret
pop
int3
stos
iretw
sbbl
out
sbb
loope
mov
xchg
and
mov
adc
adc
or
pop
int
lea
shrl
test
cmp
cmp
or
es
cs
in
jae
xchg
cmp
lds
mov
mov
scas
jp
push
xchg
repz
sti
jb
gs
adc
loopne
orb
cli
or
mov
aam
pop
jp
mov
xchg
icebp
add
inc
xchg
mov
std
or
imul
adc
dec
sub
sub
jo
or
adc
fisttpll
out
push
lret
pop
ds
fisttps
mov
cltd
push
xor
bound
ds
cmp
dec
insl
sti
imul
adc
push
inc
fimuls
popa
lret
push
lret
fldt
jns
jmp
pop
fisttpll
out
outsb
out
jl
negb
lods
sub
lds
add
xlat
inc
and
or
adc
adc
add
mov
les
cmp
das
cmpsb
xor
scas
dec
cmpsb
sub
sbb
ss
pop
rorb
xchg
loope
loop
je
fists
cmpsb
push
in
popf
or
aad
sub
insb
fs
imul
push
xor
xor
adc
cmpl
push
ret
ret
imul
insl
test
scas
cmp
mov
mov
lret
mov
and
in
jb
xchg
dec
fistpll
mov
xor
dec
jnp
imul
jno
jecxz
lds
mov
mov
or
divl
xorb
lods
and
pop
bnd
mov
xor
cmc
adcl
test
dec
ret
cmpsl
bnd
jne
and
dec
fdivrs
fidivrl
jnp
in
dec
mov
mov
and
inc
jmp
ljmp
cmp
add
roll
dec
in
dec
fdivrs
loop
je
icebp
imul
fs
popf
insb
mov
negl
ds
pusha
notb
cmp
sub
push
pushf
sbb
mov
shlb
je
out
or
pop
int3
stos
cbtw
test
loope
push
xchg
repz
sti
push
fisttpl
fnsave
xor
cmp
and
roll
shll
jge
test
cwtl
decl
lods
sti
je
lea
mov
or
dec
fmuls
fsubrs
pop
leave
test
lock
loopne
add
cs
leave
mov
ss
mov
bound
jae
cwtl
xchg
sub
mov
fwait
push
cmp
aam
push
addr16
outsl
sbb
dec
ficompl
cmc
mov
push
pop
aas
xchg
ret
or
pop
and
nop
xor
xor
notl
mov
movsl
mov
xlat
pop
xchg
sub
cmp
xchg
movsb
jge
jbe
imul
je
icebp
inc
popf
jo
fs
and
sub
and
negb
popa
imul
mov
cmp
pop
stc
into
mov
push
or
or
hlt
inc
orl
insb
shrl
or
mov
js
xchg
mov
arpl
insl
jmp
add
push
pop
shl
cmpsb
ja
clc
jmp
dec
or
inc
push
mov
in
pop
sbb
cltd
lea
lahf
adc
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
add
or
or
or
or
add
add
or
or
or
or
add
add
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
add
add
or
or
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
lldt
adc
adc
adc
adc
adc
adc
adc
adc
add
add
sbb
pop
adc
pop
adc
adc
adc
adc
adc
adc
sbb
pop
adc
pop
adc
sbb
pop
adc
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
ds
push
push
push
cmp
adc
sub
sbb
or
sbb
or
add
add
or
or
movups
adc
or
add
sbb
add
or
sbb
clts
sbb
or
sub
push
and
ss
das
sub
es
and
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
adc
and
adc
and
add
add
add
and
adc
and
add
add
add
add
adc
add
add
and
adc
and
adc
add
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
add
add
add
add
add
add
add
and
adc
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
addb
and
add
add
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
inc
add
add
add
or
add
inc
add
add
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
or
add
inc
add
or
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
and
add
add
add
inc
inc
and
add
adc
add
adc
and
add
add
and
inc
inc
add
add
adc
add
adc
inc
add
inc
add
add
add
adc
add
add
add
add
adc
and
inc
add
add
add
inc
add
adc
add
adc
inc
and
add
add
add
adc
add
inc
inc
and
inc
add
add
add
inc
inc
and
add
and
inc
add
adc
add
adc
inc
and
inc
inc
add
inc
inc
and
add
adc
add
add
and
add
add
and
add
and
inc
add
adc
add
adc
and
inc
inc
add
add
adc
add
inc
inc
and
add
add
add
adc
add
add
add
add
adc
add
inc
add
adc
inc
add
inc
add
add
add
add
and
add
and
add
adc
and
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
inc
adc
add
add
inc
adc
adc
add
add
add
inc
add
add
add
inc
adc
add
add
add
add
inc
adc
add
add
inc
add
add
add
inc
add
adc
adc
adc
add
add
add
inc
add
inc
add
add
add
inc
adc
add
add
inc
add
adc
adc
adc
add
add
add
inc
adc
add
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
adc
add
add
add
inc
add
inc
add
adc
add
add
add
inc
adc
adc
add
add
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
addb
add
and
or
or
xchg
testl
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
add
or
or
or
or
add
add
pop
adc
pop
adc
pop
adc
pop
adc
add
addb
mov
mov
sbb
addl
push
inc
and
ja
mov
popl
jmp
int
iret
stos
pop
shlb
fs
pop
rcrl
pop
lcall
jno
inc
and
add
xchg
add
add
pop
je
arpl
cmc
sbb
popa
add
jbe
pop
sub
add
pop
mov
addl
jmp
dec
stos
fs
push
adc
adc
sbb
cmpsl
push
rolb
rcrb
enter
dec
mov
jmp
movb
jmp
int
ret
cmpsb
push
mov
in
cmp
and
add
add
add
add
das
lea
ret
jmp
mov
movsl
int3
aas
ret
pop
fisttpl
jmp
and
jmp
pusha
jmp
enter
jmp
push
roll
shll
dec
frstor
icebp
add
pushf
adc
mov
push
fidivrl
fidivrl
popf
pushl
jmp
push
fstpt
inc
mov
push
jmp
xchg
sbb
push
xor
sbb
jg
mov
jmp
adc
mov
jmp
sub
jmp
imul
cltd
roll
add
push
sbb
pop
fwait
or
sub
mov
mov
pop
push
pushf
jmp
roll
mov
push
ret
ret
mov
loope
wrmsr
andb
jmp
sbb
jmp
mov
mov
and
mov
and
jmp
mov
sahf
mov
mov
icebp
popa
add
xor
jge
je
addr16
nop
icebp
popf
lea
pushl
lea
jmp
sbb
sbb
xchg
adc
into
pop
cmp
push
stc
cmp
jne
addl
mov
movzbl
jmp
imul
lock
xchg
gs
adc
push
inc
rcll
sub
inc
adc
adc
ret
clc
fiadds
ret
test
jmp
rolb
add
jmp
pop
jecxz
push
in
loop
call
decl
pop
cmp
add
add
lcall
and
xchg
pop
or
jmp
test
xchg
lock
enter
push
mov
sub
or
add
add
call
push
push
inc
push
xor
cs
insb
add
inc
sub
pop
data16
cmc
adc
add
add
mov
movsb
inc
out
data16
xchg
outsb
popf
jg
addr16
pop
sbb
mov
inc
adc
mov
in
outsb
jb
push
call
jmp
and
mov
add
add
jnp
mov
std
insl
std
test
stos
aas
scas
lret
lods
jp
cmp
sub
jmp
inc
lods
mov
jmp
aas
lods
cmp
insb
loop
je
lcall
sub
jmp
jmp
repnz
insl
ret
jge
movl
jmp
aas
test
mov
mov
das
mov
cmpsl
aaa
push
mov
xor
sub
lahf
jmp
aam
repnz
loop
movl
mov
add
jmp
inc
fisttpll
out
push
test
push
mulb
rcll
and
push
xor
pop
adc
jmp
addr16
jl
jne
dec
inc
mov
jmp
out
adc
pop
sub
movzbl
jmp
cmp
inc
psubsw
add
add
dec
mov
lret
adc
pushf
cld
lcall
dec
sub
sbb
pop
int
addr16
cli
cmp
pushf
jmp
in
notl
push
pop
sub
add
xchg
popf
pushl
jmp
jg
push
pop
xchg
repnz
das
movsb
cmp
dec
gs
jmp
pop
xchg
add
fmuls
fsubrs
bnd
jne
and
pusha
jmp
repz
jmp
cmp
xchg
pop
fsts
pop
sti
add
inc
sub
mov
jmp
mov
mov
es
mov
mov
and
or
sub
inc
or
mov
inc
call
mov
out
adc
je
jmp
repnz
xchg
outsb
sar
inc
adc
jo
cmp
ret
jmp
out
jp
jp
js
jo
loop
jle
shr
sti
imul
je
jmp
mov
mov
mov
fimull
fidivl
cmpsb
cmp
and
add
call
cltd
roll
add
mov
mov
cmpsb
mov
jne
imul
popa
jmp
sub
cmp
mov
and
xor
insb
loop
je
imul
pop
ljmp
insb
incl
add
cmpl
ljmp
scas
aas
pop
test
xchg
fs
incl
test
adc
push
push
xchg
add
cmpsl
and
or
movsb
call
push
push
inc
push
xor
cs
insb
add
push
aaa
ret
push
lds
xor
push
fstpt
mov
movsl
push
push
call
jmp
jle
gs
push
lods
and
stc
push
jmp
aaa
mov
xchg
cwtl
decl
enter
outsl
lcall
ret
adc
sub
add
add
pop
pop
shrl
pushf
addl
jmp
jo
jno
jecxz
fldcw
pushf
jmp
inc
xchg
xchg
push
adc
adc
mov
into
addr16
add
std
or
mov
cwtl
xor
adc
sub
out
inc
mov
mov
lock
lds
sbb
add
add
jae
popa
addr16
outsl
js
add
pop
inc
sbbl
sub
inc
daa
rclb
mov
movsl
push
rep
xor
rolb
add
jmp
push
lret
lret
ljmp
andl
mov
flds
mov
pop
cmp
dec
bound
inc
and
popf
ret
push
push
xchg
mov
add
cmp
je
jmp
push
pushf
xor
insl
or
sbb
or
aam
enter
add
add
push
xor
and
pusha
lds
xor
sub
inc
push
and
push
mov
xchg
repz
out
dec
out
popa
incl
popf
ret
pop
xlat
inc
and
sub
mov
xchg
inc
sub
sub
add
jmp
lret
mov
cmpsb
push
fimuls
adc
sarl
mov
loopne
add
mov
loopne
mulb
cmp
mov
gs
xor
lock
jmp
mulb
dec
in
jge
je
sub
push
mov
cld
fwait
jbe
adc
adc
ret
push
lds
xchg
lds
imul
cmp
adcl
test
mov
inc
mov
cmp
inc
int3
push
shlb
mov
mov
adc
jbe
mov
mov
mov
adc
mov
or
out
icebp
nop
arpl
aam
inc
enter
sub
fidivs
mov
add
xor
mov
scas
leave
cmp
cmp
daa
inc
mov
int3
pop
int3
stos
data16
mov
mov
dec
adc
pushl
mov
jmp
or
push
les
jg
jmp
xor
decb
loopne
adc
inc
or
pop
out
je
lea
cwtl
push
imul
scas
cmp
mov
mov
mov
leave
pop
cmp
add
xchg
add
jnp
mov
gs
jl
or
fdivl
in
repz
lea
movsb
cmp
pop
sbb
enter
cmp
imul
sbb
push
paddd
push
xor
imul
mov
jl
addr16
pop
stos
aas
scas
lret
dec
into
pop
cmp
addr16
fwait
adc
jmp
stos
cmp
lahf
or
add
add
ja
xorb
xor
imul
insl
in
imull
cltd
push
push
mov
inc
mov
cmpsb
es
cs
push
roll
shll
das
mov
sti
push
fisttpl
and
les
int3
aas
movsb
sub
fsts
mov
push
xor
cmp
add
setg
or
rcll
push
xchg
rorl
repz
das
mov
int
repz
shlb
jo
loop
cmc
popa
icebp
nop
arpl
xlat
inc
mov
jmp
and
in
dec
or
pop
xchg
adc
mov
rorl
mov
test
push
cltd
jns
je
out
imul
inc
enter
dec
mov
and
inc
mov
mov
jmp
add
mov
mov
and
movsl
daa
mov
and
movl
add
or
add
dec
gs
popa
addr16
outsl
js
add
cld
xchg
jmp
pop
rolb
shlb
les
movsb
push
mov
gs
pushf
outsl
mov
jne
mov
jmp
sti
sahf
insl
int3
adc
xchg
jb
dec
test
mov
jnp
mov
mov
lods
lret
inc
testl
imul
sbb
add
mov
mov
mov
sbb
test
mov
mov
fdivl
in
in
jno
xorb
fs
popf
insb
movsl
icebp
jb
xchg
inc
les
int3
and
aad
sub
cmp
shlb
mov
dec
mov
dec
mov
add
sbb
inc
mov
mov
jg
push
and
fcoms
mov
jecxz
jne
mov
xchg
repnz
xor
adc
pop
xchg
add
and
push
cmpsb
movsb
ret
popl
xchg
add
push
xor
jle
lods
lret
inc
out
arpl
gs
dec
pop
into
pop
cmp
jno
icebp
popa
add
xor
jne
mov
movsb
cmp
mov
scas
leave
push
mov
jmp
jge
inc
fimull
ficompl
jp
jp
inc
ret
ret
sbb
ficomps
xchg
addb
ds
std
jp
jp
rorl
dec
mov
and
push
jecxz
push
in
movsb
sub
cli
jb
xchg
cwtl
pop
xchg
adc
xchg
sbb
movsb
cmp
js
xlat
inc
and
sbb
ret
push
les
int3
jp
mov
stc
outsl
lcall
push
popa
nop
cmp
push
xor
jle
mov
inc
mov
mov
aad
xchg
mov
mov
cs
dec
ret
xchg
or
lods
xor
int
jno
jle
call
out
sbb
aad
mov
adc
xchg
sbb
cwtl
push
imul
sbb
mov
sub
sub
jge
gs
push
mov
push
lds
dec
mov
testl
xor
sbb
jb
in
inc
int
and
jb
ljmp
stc
mov
jbe
cmpl
das
mov
or
in
mov
add
dec
jecxz
dec
fidivrs
mov
and
mov
insb
lahf
jg
dec
fistpll
cmp
inc
push
into
pop
cmp
push
xor
cmp
rcll
mov
xchg
icebp
add
and
xor
push
or
pusha
notb
shll
dec
sub
movhps
je
insl
hlt
pop
out
xchg
pop
bound
dec
mov
cmp
push
cltd
or
dec
pop
fisttpl
fstpl
insb
out
adc
dec
or
rcll
push
sti
fisttps
movsb
push
in
jmp
push
in
inc
pop
xchg
pop
bound
arpl
ret
ds
pop
repnz
fs
push
add
xor
jno
xorb
cmc
gs
pop
int3
pop
lret
scas
pop
mov
fwait
or
sbb
adc
popf
or
clc
outsb
or
adc
icebp
add
sbb
outsb
or
ljmp
adc
inc
lds
iret
and
jns
jb
outsl
or
in
les
int3
sub
bound
push
jns
das
loope
cld
fwait
jbe
pop
aam
sub
inc
and
js
fisttps
fsts
mov
out
in
jle
sub
cmpsl
aaa
cmpsl
ret
je
jno
jecxz
xor
rcrb
pop
cld
push
xor
lds
jbe
loopne
mov
ret
mov
les
pop
fimull
ficoml
pop
fisttpll
out
or
jnp
and
adc
outsl
mov
cmpsl
ret
rolb
mov
sbb
xor
jns
jmp
cmp
in
imul
insl
cwtl
dec
fidivrs
sahf
stc
or
int3
inc
mov
adcb
mov
xchg
jno
xorb
hlt
push
cld
dec
sbb
add
push
pop
jp
adcb
jecxz
test
sub
adc
xchg
addl
cmp
and
inc
xlat
mov
enter
cmp
push
jg
xchg
testb
negb
xor
push
xchg
adc
mov
xchg
push
jae
arpl
jne
out
sbb
xchg
add
jns
das
mov
jno
xorb
mov
gs
jo
fisttpl
inc
int
and
jb
push
lahf
push
fcoml
mov
dec
sub
jle
daa
mov
and
lahf
xor
jl
jne
xor
js
fwait
adc
cmpsl
aaa
push
mov
fsubrl
lcall
rcrb
pop
cltd
adc
call
lcall
cmp
xor
lods
lret
inc
fs
sbb
add
cmpsb
dec
rcll
cmpsl
push
mov
fisttps
fstps
aaa
mov
inc
mov
std
jg
mov
scas
sub
cmp
and
sub
dec
int3
dec
fstpt
xor
or
add
push
push
inc
push
xor
cs
insb
add
nop
lcall
lcall
xchg
or
cmp
dec
ljmp
sti
imul
pop
popf
or
fmuls
mov
fistpll
or
xor
fs
popf
insb
fstl
pop
cmp
call
arpl
xchg
gs
fs
popf
insb
scas
mov
xchg
adc
insb
hlt
push
cld
push
gs
xchg
cmc
add
loop
adc
add
stos
insl
in
jge
idivl
iret
pop
cmp
aas
roll
inc
cmpsl
adc
aas
mov
stc
jle
mov
shlb
fcmovu
arpl
xchg
gs
inc
aad
dec
mov
xor
ficoml
cmpsl
push
mov
inc
xlat
mov
mov
xchg
xor
lods
cmp
add
icebp
popa
add
push
sbb
jle
arpl
cmc
pop
dec
fmuls
fsubrs
lds
iret
fs
xorb
jecxz
ds
cmp
sbb
test
cmp
or
imul
insl
mov
push
mov
shll
or
sbb
cmpsl
and
fdivl
xlat
push
xchg
add
sahf
jbe
data16
xchg
outsb
mov
inc
and
popa
add
or
popf
sbb
add
or
idivb
mov
pop
stos
pop
add
sbb
sub
mov
fwait
adc
dec
rclb
addr16
int
and
arpl
fs
popf
insb
lds
sahf
or
cmpsb
pop
stc
push
leave
pop
int
addr16
arpl
xchg
gs
outsb
or
dec
and
test
cld
xchg
cmc
add
mov
and
clc
dec
inc
and
rcll
cmpsb
push
aam
jle
mov
mov
fistpll
and
pop
roll
inc
movsl
std
jns
mov
push
xchg
jb
pop
test
xchg
repnz
adc
push
fisttps
fsts
mov
jg
push
mov
jp
idivl
mov
xchg
lahf
cli
or
lret
mov
mov
inc
and
push
lds
test
pop
test
icebp
notl
push
ret
ret
inc
shll
loope
jae
call
xor
pop
repnz
fs
dec
inc
and
sbb
mov
pushf
outsl
xchg
mov
js
popa
insl
icebp
popa
add
jbe
lods
and
xor
inc
aam
dec
xchg
cli
mov
stos
into
cmp
xchg
jbe
rolb
shrb
pushf
sbb
inc
xlat
mov
mov
xor
inc
enter
cmp
push
xor
sub
leave
xor
push
ret
cmpsb
push
mov
movsl
add
or
jmp
shlb
xchg
gs
cld
outsb
cld
fwait
jbe
jnp
jle
call
dec
mov
sbb
pop
mov
cwtl
push
les
int3
lea
popf
or
and
xchg
push
pushf
sti
push
hlt
jle
je
out
add
and
sub
and
xor
adc
sbb
jg
xchg
cmc
add
lcall
inc
aam
dec
stos
pop
xchg
jb
jno
icebp
popa
add
es
fimull
fisubrl
push
adcl
lahf
punpckhdq
mov
orl
dec
rclb
xor
test
hlt
push
cld
sub
jmp
pop
mov
jne
cmp
cmp
jmp
push
in
pop
fimull
mov
mov
and
adc
mov
aad
mov
out
fistpl
flds
mov
mov
cmp
xor
and
pop
iret
push
mov
inc
daa
rclb
roll
aad
jecxz
notb
mov
into
pop
cmp
xor
mov
dec
mov
xchg
bound
pop
scas
jle
imul
mov
inc
mov
mov
sub
aam
repz
gs
and
fisttps
fnstenv
mov
repnz
and
or
mov
mov
inc
mov
or
scas
or
cmpsb
aaa
cmpsl
ret
mov
lahf
or
call
arpl
outsb
or
sbb
enter
out
sbb
cmp
or
adc
dec
andl
stos
sub
inc
shll
pop
cmp
sub
repz
xchg
icebp
add
sub
push
fisttpll
out
mov
sarb
fldt
fstpl
xchg
add
sahf
cmp
jl
mulb
adc
fsts
pop
sti
push
outsb
or
dec
xchg
push
xchg
repz
cmpsl
and
mov
lahf
cmc
popa
icebp
nop
arpl
rcll
pop
imul
jg
mov
gs
push
outsb
hlt
push
cld
aas
xchg
mov
and
inc
mov
dec
mov
push
or
cmpsb
and
ja
sub
jmp
insb
out
jl
idivb
xor
cmpsb
es
cs
hlt
jnp
mov
cs
pop
test
jnp
xchg
cmc
add
popa
jmp
push
in
push
call
fwait
mov
scas
lret
xchg
sbb
rcrb
scas
pop
mov
cmc
add
test
sub
mov
hlt
jg
mov
xchg
push
xchg
repz
mov
xchg
sbb
imul
psubd
sbb
sub
cmc
notl
pop
int
and
jb
mov
inc
mov
sbbb
ljmp
push
mov
inc
test
out
jl
divb
xlat
inc
and
pop
sahf
sbb
aad
in
stos
das
mov
imul
insl
cmpl
psubd
scas
das
mov
iret
pop
cmp
add
insl
std
test
hlt
ja
xorb
dec
fdivrl
addr16
sbb
fwait
jge
dec
fnstcw
xchg
repnz
push
push
mov
jmp
andl
xchg
add
cmp
jns
mov
data16
gs
push
or
rorb
mov
add
xlat
inc
shlb
shll
lahf
cli
or
out
in
je
outsl
sbbl
out
sbb
mov
cmpsl
std
lock
in
ret
ret
lds
iret
and
stc
out
cmc
je
lea
loop
pop
loop
push
xchg
jb
pop
and
add
std
or
xor
sub
xor
outsl
xchg
sbb
jl
jne
ja
and
cmp
cwtl
push
imul
fwait
or
sub
aad
mov
xorl
adc
dec
adc
xor
gs
push
rcrl
pop
in
jbe
jno
jecxz
cld
data16
xchg
outsb
lods
jge
je
out
or
sti
imul
adc
gs
adc
lea
and
popf
push
pop
fimuls
push
aas
mov
clc
jg
mov
dec
int3
inc
and
mov
and
stc
adcl
test
fisttps
jae
outsl
or
hlt
jns
pusha
pop
repnz
mov
lods
mov
mov
xor
int
fwait
aam
leave
test
lea
imul
cmp
js
mov
pop
mov
jle
cmp
xchg
ss
dec
fnstcw
lds
inc
mov
mov
notl
stos
mov
loop
mov
gs
jbe
inc
shll
es
mov
call
stc
dec
xlat
inc
and
pop
jbe
push
cld
xor
cmp
xchg
adc
jge
je
pusha
or
jns
insb
or
roll
adcl
outsb
cld
fwait
jbe
out
loop
je
push
mov
jle
imul
jp
push
shll
imul
mov
jnp
push
inc
into
pop
cmp
jno
dec
fdivrs
add
cmp
addl
and
js
mov
push
xchg
pop
bound
mov
shlb
push
in
sub
mov
inc
mov
clc
pusha
notb
test
pop
cmc
push
enter
dec
sub
xor
cmpsb
outsl
insb
in
jge
negl
repz
jae
xchg
addb
repz
lock
or
push
aad
sub
sub
push
shlb
push
std
or
stos
cmp
dec
pop
rolb
shlb
adc
fisttpl
fnstsw
popa
add
and
test
mov
xchg
add
sbb
aad
lea
mov
movsb
imul
testb
loop
xchg
push
xchg
repz
mov
mov
cmc
add
addr16
xchg
cmc
add
or
or
jbe
jns
mov
push
adcb
addb
inc
shll
cmp
mov
imul
ficompl
scas
pop
mov
mov
jns
insl
and
pop
inc
lds
iret
sbb
pop
and
and
dec
fdivrl
shll
adc
arpl
rcll
pop
aam
sub
insb
or
shlb
notb
lcall
push
jns
ds
aaa
in
jl
jne
xor
fwait
xor
popa
add
inc
cmc
lock
lret
int3
pop
into
test
sbb
sub
fdivl
in
sub
pop
enter
push
mov
or
jmp
jmp
jge
ja
jle
call
sbb
and
inc
and
ss
add
jl
pusha
notb
add
outsl
jbe
addr16
sub
roll
cmp
dec
sub
lahf
cli
or
stc
ja
xorb
xchg
pop
bound
sub
jle
or
mov
pop
aad
sub
jp
add
or
stc
outsl
lcall
cmpsb
shll
js
jl
testb
pop
jb
es
adc
mov
scas
aas
pop
test
xchg
jno
aad
sub
aaa
pop
sahf
or
cmpsb
dec
mov
mov
mov
inc
mov
xor
or
jle
add
sahf
or
cmpsb
inc
xchg
sbb
and
stos
sub
divb
xorb
ret
push
lds
jae
outsb
or
sbb
mov
jg
outsb
test
in
out
sbb
xchg
add
inc
pushf
adc
ret
push
lds
enter
mov
mov
and
mov
call
pop
ds
or
cmpsl
xor
and
lds
xchg
cmpsb
jo
jns
jmp
ret
pop
leave
test
mov
rcll
sub
nop
push
popa
nop
pop
out
ja
xorb
adcl
test
inc
mov
test
jo
xorl
in
push
test
lret
fistpl
fs
repnz
pop
repnz
mov
rcrl
out
ret
dec
fidivrs
in
mov
pop
ljmp
lock
and
fimull
ficompl
or
pop
jb
sub
mov
inc
mov
adc
mov
mov
outsb
cld
fwait
jbe
and
adc
rorl
mov
dec
sub
inc
scas
cmp
lret
pop
ds
cli
lock
bound
sub
cmp
push
jle
ja
loope
cmp
or
inc
shll
mov
or
fisttps
fstps
add
adc
push
pop
fldt
out
adc
push
dec
ret
ret
movsb
cmp
dec
mov
aam
les
int3
aas
add
sbb
mov
jg
dec
mov
xchg
repz
test
pop
in
loope
loopne
jb
xor
or
mov
lods
cmp
imul
insl
faddl
mov
nop
push
popa
cli
push
out
adc
add
mov
inc
mov
push
into
pop
cmp
push
imulb
lcall
jbe
cmp
sub
cld
xchg
cmc
add
mov
and
notb
jecxz
inc
fidivrl
mov
sbb
adc
push
in
std
test
jge
fs
sbb
xor
jbe
cmpl
outsl
lcall
mov
sbb
popf
adc
movsl
xor
test
jge
and
inc
icebp
repz
lock
lret
push
push
xor
jg
push
mov
cmp
sbb
push
mov
aas
decb
xchg
or
jle
push
shll
or
out
mov
cmpsl
mov
mov
lret
lret
cmp
mov
lods
and
lcall
ljmp
stc
stc
popa
out
adc
cmp
ret
fstpt
frstor
outsl
lcall
mov
pop
lret
scas
pop
test
ljmp
cmp
mov
sub
inc
iret
pop
cmp
jo
push
shlb
xchg
gs
pushf
sti
push
cmpsl
insl
std
test
stos
cmp
mov
cmc
into
pop
iret
stos
pop
into
nop
add
std
or
jns
bound
aas
pop
test
jno
bound
sbb
push
int3
inc
and
mov
call
pop
fimull
ficoml
cli
jg
mov
jle
mov
push
xlat
inc
and
and
mov
fldenv
xchg
gs
dec
lret
lret
push
mov
shll
pop
lods
dec
test
mov
and
gs
pop
aad
sub
or
xchg
add
push
fsts
pop
sti
inc
rolb
shlb
je
out
inc
ret
cmpsl
push
jecxz
test
jge
and
and
subl
mull
icebp
dec
std
push
dec
ret
xchg
and
data16
xchg
outsb
test
std
pop
push
xor
dec
sbb
dec
leave
pop
cmp
add
inc
es
insb
in
bound
jge
notl
xchg
adc
lods
cmp
push
cmc
jo
xorl
shlb
dec
push
xor
sub
jg
and
inc
dec
fidivrs
and
das
mov
mov
lcall
jmp
rcrl
pop
and
fs
ret
ret
inc
aad
dec
cld
lcall
push
les
push
jns
das
xchg
or
xchg
add
sahf
jl
xchg
mov
imul
insb
or
andl
mov
adc
imul
xor
iret
dec
fistpll
pop
cmp
and
inc
fcompl
stos
pop
popl
inc
and
nop
testl
or
jb
in
cmc
jns
mov
sub
out
lock
bound
out
dec
jno
jno
jecxz
rolb
mov
call
push
out
push
mov
es
adc
stos
cmp
add
push
lret
jmp
xchg
jb
sub
iret
push
ret
cmpsb
push
mov
sub
loopne
adc
or
add
adc
std
jl
lahf
punpckhdq
outsb
popf
jae
sahf
or
cmpsb
dec
push
lea
repz
cmc
or
fwait
dec
pop
fldt
dec
ret
mov
xchg
mov
in
imul
insl
movsb
xor
jg
mov
lods
and
dec
fstpt
in
mov
loopne
cmpsl
mov
addl
sub
push
lds
mov
inc
mov
fmull
mov
ja
loope
je
ja
loope
xor
icebp
push
lahf
push
cmp
add
pusha
insb
or
add
pop
into
test
outsl
or
out
in
sti
sahf
insl
andl
pop
lods
dec
lea
cltd
clc
or
ljmp
lret
lret
mov
gs
jl
adcl
test
roll
aad
cmpsb
xor
scas
dec
ret
mov
xor
add
pop
ds
mov
xchg
repz
int3
sbb
aaa
push
lret
pop
ds
out
jl
jne
sub
mov
mulb
pushf
outsl
les
xchg
add
jp
jp
xor
lahf
or
into
pop
cmp
adc
mov
test
rorb
mov
sbb
xchg
adc
mov
sub
or
iret
pop
cmp
aas
into
dec
frstor
jp
imul
test
xchg
icebp
add
jbe
popa
add
sbb
adc
scas
and
add
add
pusha
rorb
push
icebp
adc
or
dec
push
fistpl
add
lods
lods
lret
inc
lock
cmp
loopne
adc
push
popa
add
pop
jbe
jbe
loopne
mov
mov
and
fsubrs
movsb
ret
ds
dec
inc
and
sbb
bound
sub
in
je
lea
push
xor
dec
ss
aas
pop
test
shlb
pop
fimuls
push
xlat
push
lds
add
pop
cmp
aaa
mov
movsb
ret
ds
aaa
rolb
gs
jge
testl
fstpt
rorl
dec
mov
ret
push
lds
aas
mov
inc
mov
pop
fisttpl
fisttpll
adc
gs
xchg
adc
rcll
push
sti
pop
lret
lret
and
jl
jne
xor
and
mov
js
ljmp
and
jp
jo
loop
ret
test
mov
loopne
adc
rcrb
loopw
fisttpl
fstl
cltd
sbb
sti
imul
adc
gs
pushf
outsl
mov
leave
pushf
sbb
cmp
jge
outsb
or
adc
je
lea
lock
bound
xor
jnp
pusha
pop
repnz
dec
fstpt
pushf
sti
push
ret
xchg
adc
pusha
repz
cmc
push
sub
sub
jo
xchg
add
add
rolb
sarb
push
mov
mov
adc
mov
push
repz
insl
hlt
pop
cmpsl
cmp
mov
cmpsb
fildl
mov
stos
dec
inc
and
ss
stc
ljmpw
stc
sbbb
push
in
cmp
dec
roll
aad
xchg
sbb
inc
fidivrl
push
popa
nop
inc
rclb
mov
add
jnp
adc
in
sbb
sysret
lea
xchg
add
bound
loop
cld
xchg
cmc
add
adc
test
jge
sub
pushf
mov
mov
and
sub
insb
ret
push
shlb
dec
mov
adc
dec
adc
cmp
inc
daa
shlb
fisttpll
out
pop
lret
pop
ds
nop
or
scas
cmp
mov
scas
aaa
cmpsl
ret
aad
fdivrs
test
cmp
into
push
ret
cmpsb
push
mov
or
dec
roll
aad
push
xlat
inc
and
and
add
cs
jne
mov
rcrl
scas
pop
mov
sub
mov
shlb
push
imul
jo
xorl
leave
jo
cli
push
xor
int
xchg
dec
fdivl
in
cmp
and
sbb
mov
call
call
test
add
movsb
cmp
dec
cmc
jae
xchg
dec
rolb
sarb
mov
daa
mov
add
adc
mov
jecxz
push
in
push
xlat
inc
and
aaa
fistps
stos
add
fidivrl
jns
jmp
mov
pushf
sti
push
jecxz
out
jl
negb
xchg
and
ljmp
stc
in
cmp
jge
je
jbe
jae
xchg
rorl
push
orb
ds
pop
xchg
add
xor
cmp
and
insb
cld
xchg
cmc
add
mov
mov
and
daa
xchg
jae
jp
in
inc
pop
xchg
add
es
jle
call
jge
dec
xor
cmp
ja
xorb
fimuls
push
movsb
ss
addl
pusha
jmp
mov
and
add
jnp
pop
pusha
mov
mov
jmp
in
add
add
jmp
jle
jne
out
add
push
xlat
das
fimull
add
mov
call
jmp
out
jae
xchg
mov
jo
adc
add
add
jmp
out
cli
popf
insb
test
popa
sbb
jmp
xlat
push
lds
std
popa
jmp
jo
jmp
call
jmp
push
jns
jmp
orl
decb
push
inc
add
mov
jmp
insl
ljmp
and
sar
inc
adc
add
push
jno
jne
xor
cmpsl
aaa
push
mov
sub
jmp
neg
int3
popf
inc
lret
lret
jle
jmp
mov
xchg
repnz
mov
in
adc
add
jmp
mov
stos
and
notl
rorl
popa
mov
jmp
jg
sbb
inc
aad
dec
cltd
sub
ss
mov
fwait
jbe
mov
pop
in
int3
popf
xor
iret
dec
fnstcw
jmp
and
adc
pop
test
mov
clc
outsb
imul
je
jmp
adc
lea
jmp
and
or
pusha
pop
repnz
hlt
push
cld
dec
jg
ret
popl
jmp
pop
mov
jns
and
jnp
scas
add
cmp
cwtl
in
sub
jmp
mov
cltd
add
pop
into
test
adc
mov
jmp
stos
xor
fidivrs
mov
mov
shr
push
mov
sar
pusha
notb
xchg
testb
fcoms
ljmp
and
cmp
jne
addl
jmp
inc
rcrb
mov
mov
inc
mov
cmp
push
xor
cmp
dec
hlt
fildl
mov
movb
movb
movb
movb
movb
jmp
int3
popf
sub
cmp
mov
lods
cs
jmp
or
sbb
je
clc
movb
jmp
sub
in
notl
aas
pop
test
lods
pop
scas
aas
imull
mov
jmp
mov
aad
inc
xlat
mov
stos
sbb
or
push
lea
jmp
movb
jmp
jno
insl
hlt
pop
mov
loopne
jmp
cmc
pushf
outsl
scas
mov
popa
movb
movb
movb
movb
movb
jmp
add
adc
cmp
inc
aam
movb
movb
movb
movb
jmp
push
inc
xchg
movb
jmp
nop
sub
jmp
xor
insl
jmp
jae
xchg
inc
rolb
shlb
xlat
inc
and
jbe
adc
cwtl
in
movb
jmp
add
cltd
rol
inc
movb
jmp
cmp
sbb
pusha
sti
imul
pop
inc
sub
push
inc
iret
pop
movb
movb
movb
movb
jmp
outsb
mov
movb
movb
jmp
pop
rclb
add
test
xlat
dec
frstor
mov
cmpsb
push
loop
jmp
or
sbbb
std
insl
hlt
pop
int3
sub
sbb
inc
dec
dec
fdivrs
pop
cmp
and
mov
xchg
jae
mov
movsl
movb
movb
movb
movb
movb
jmp
inc
push
xor
sbb
pop
int3
stos
xchg
and
movsl
sub
aad
push
push
inc
jmp
jmp
cmc
jle
mov
outsb
popf
jg
inc
aad
dec
mov
add
inc
call
js
inc
ljmp
dec
mov
shll
data16
movb
jmp
cmp
loope
cltd
movb
jmp
enter
dec
mov
push
mov
notb
xlat
call
movb
movb
movb
movb
jmp
cmp
int
pop
jmp
je
jmp
mov
mov
addl
aaa
jns
jge
testl
add
pusha
jmp
pop
repnz
rclb
push
add
add
jp
jl
testb
or
cmp
je
lea
mov
das
cmp
jmp
mov
xchg
adc
daa
mov
lcall
cmp
fmul
mov
jmp
cld
xchg
cmc
add
adc
hlt
jbe
cmpl
xchg
push
mov
movb
movb
movb
movb
jmp
dec
cmp
jmp
sub
outsb
mov
jmp
stc
xor
jmp
adc
int
ret
cmpsb
push
mov
jl
jg
sbb
push
xor
pop
mov
cmp
jne
push
pop
jmp
insl
enter
push
jmp
cltd
push
mov
es
sbb
add
push
movzbl
jmp
rcll
lods
pop
test
cld
xchg
cmc
add
cld
jbe
cmpl
jno
xorb
lock
jmp
fcoml
pop
mov
gs
test
cwtl
decl
lods
jg
add
and
jecxz
incl
jmp
xchg
push
mov
es
push
shll
or
lds
ret
mov
cmp
jl
push
push
jmp
lods
vmptrld
sub
daa
mov
dec
mov
jp
es
bound
pushf
sti
push
cmpsl
mov
push
popa
icebp
nop
arpl
cltd
adc
pop
xchg
repnz
cmpsl
lcall
out
xor
inc
out
xor
inc
lock
clc
std
pushl
lret
mov
es
xchg
mov
arpl
xchg
cmp
ljmp
aam
int
jnp
mov
arpl
xchg
cmc
add
pop
fistl
in
push
movb
movb
movb
movb
movb
jmp
mov
jmp
addb
lock
mov
stos
int
aam
cld
xchg
cmc
add
sbb
into
ret
mov
jne
push
jmp
mov
mov
jmp
mov
notl
shr
decb
add
loopne
jmp
mov
movsb
ret
ds
popf
sbb
cmp
sti
lret
push
add
or
cs
mov
xor
sub
xchg
cmc
add
mov
lods
lret
inc
loope
out
adc
cmp
cmpsl
sub
xchg
or
sub
enter
cmp
dec
fdivrs
jbe
loopne
and
and
add
stos
cmp
add
movsb
or
add
mov
mov
add
test
adc
jge
jno
jecxz
mov
stos
pop
fimuls
das
pop
fimuls
push
jecxz
icebp
nop
arpl
jno
dec
int3
inc
and
add
mov
or
or
gs
pushf
outsl
test
mov
xchg
repnz
ret
mov
mov
add
shll
pushf
xor
jo
idivb
in
jge
notl
test
jge
cmp
jbe
loopne
fmuls
mov
pop
and
lds
add
dec
fnstcw
mov
cs
pop
lds
add
mov
jecxz
outsl
lcall
and
clc
dec
rolb
inc
scas
add
jl
divb
sub
lods
and
jge
enter
jl
xor
stos
add
mov
movsl
int3
push
movb
into
test
adc
push
cmp
push
lds
mov
orl
cli
or
inc
int
and
aaa
jnp
popa
add
adc
cli
or
jg
scas
add
rcrl
stos
data16
call
out
lock
lds
mov
js
aas
push
mov
mov
mov
es
cltd
movb
pop
mov
add
fsts
stos
add
mov
fwait
or
fwait
push
pushf
sti
push
mov
lret
pop
ds
cmp
rcrl
pop
lea
in
jbe
cmpl
adc
std
insl
hlt
pop
int3
daa
movsb
cmp
inc
mov
scas
jbe
gs
sbb
pop
cmp
sub
imul
sub
push
lds
cmp
test
add
sbb
cmp
xor
or
es
in
and
jae
xchg
add
sub
scas
aas
pop
test
scas
add
aaa
cmpsb
xor
scas
pop
push
xchg
cmc
add
sti
add
add
popa
nop
daa
repz
xchg
outsb
leave
repnz
or
sti
popa
icebp
nop
arpl
pop
mov
rcll
inc
lds
scas
pop
fnsave
pusha
pop
repnz
inc
aam
dec
cmpsb
out
xor
int
addr16
and
add
test
xchg
lock
xor
push
pushf
sti
push
adc
stc
jb
xchg
push
fisttps
flds
or
jg
mov
inc
mov
push
fisttpll
out
dec
ret
ret
xchg
or
cmp
cmp
xchg
add
cmp
pop
iret
stos
pop
jnp
js
ljmp
add
xor
or
mov
jne
mov
roll
sub
js
or
in
les
add
mov
test
mov
xchg
setg
or
scas
lret
dec
fidivrs
pop
cmp
aas
add
cs
pop
test
cmp
insl
cmp
xor
pop
into
test
push
pop
into
test
loope
jae
das
cmpsb
xor
scas
pop
lcall
push
mov
inc
and
sbb
inc
and
jns
mov
adcl
jle
jl
testb
jne
out
inc
push
push
xor
jle
jge
je
sub
inc
xlat
mov
clc
inc
shll
push
xor
or
jp
or
push
inc
push
sbb
jnp
in
or
jns
mov
inc
ficompl
push
sbb
dec
fidivrs
lods
mov
xchg
loopne
repnz
ja
push
jle
mov
leave
cmp
aaa
adcl
pop
jb
bound
jecxz
jmp
mov
test
mov
add
jmp
into
pop
int
addr16
mov
adc
fstpt
push
cltd
and
stos
mov
add
mov
xor
pop
inc
pop
jmp
jmp
mov
mov
das
lcall
add
cs
add
add
jmp
ljmp
lahf
push
ja
arpl
cmc
xor
outsl
or
in
mov
adc
jmp
jmp
loope
jae
ss
jmp
mov
jmp
sub
mov
in
sbb
dec
xlat
inc
and
pop
jl
test
xchg
jno
xorb
mov
inc
mov
jmp
cmc
pusha
jmp
push
popa
jmp
mov
movsl
int3
aas
aad
iret
pop
cmp
xor
inc
shll
js
ljmp
shl
dec
jne
inc
mov
jmp
enter
inc
adc
cmpsl
and
je
lea
or
sbb
dec
adc
lock
jo
mov
jmp
test
cmp
jmp
inc
mov
add
jmp
je
jmp
stos
daa
mov
and
mov
test
cmp
aam
repz
gs
in
mov
jmp
pop
fisttpl
fnstsw
arpl
dec
jmp
inc
iret
pop
cmp
add
gs
pushf
outsl
scas
dec
rcll
data16
lcall
jl
push
pop
mov
shr
mov
jmp
lcall
rclb
imul
jmp
aas
popl
jmp
das
mov
jb
jp
in
pop
mov
xchg
rcrb
mov
jmp
pop
imul
pop
mov
roll
mov
stc
popf
sahf
pushf
jmp
inc
aam
sub
pop
inc
sub
shrl
fs
jmp
fcoms
cmpsb
push
hlt
leave
push
shll
pop
stos
dec
divl
jmp
insb
jmp
cmpl
or
adc
adc
idiv
inc
pop
int3
stos
data16
push
cmc
sbb
popa
add
jbe
call
rep
movzwl
jmp
jno
shr
iret
add
add
les
cli
dec
roll
aad
arpl
jo
loop
jo
mov
jmp
inc
jmp
push
rolb
shrb
lcall
cwtl
push
imul
and
sar
add
mov
mov
cmp
jne
shr
jmp
mov
scas
leave
cmp
out
loop
je
icebp
jg
mov
lret
movzwl
jmp
add
adc
je
imul
sbb
enter
cld
jmp
movzwl
jmp
outsb
loop
pop
loop
sub
cmp
aad
push
mov
cld
movzwl
jmp
testb
fucomi
and
pop
ds
push
rclb
jno
ljmp
stc
scas
xchg
add
mov
div
jmp
pushf
outsb
mov
jmp
pop
mov
jmp
xor
jmp
xor
pop
iret
stos
pop
rclb
push
jmp
sbb
int
shr
push
fstl
cmp
shr
cmp
jmp
dec
aad
sub
aaa
push
lea
ljmp
stc
sbbb
imul
jmp
int
shlb
and
loopne
jmp
clc
mov
clc
jmp
xchg
cli
jmp
movsl
and
xchg
pop
xchg
adc
popf
and
repnz
sub
push
mov
sub
push
mov
push
push
mov
mov
shr
jmp
or
leave
dec
frstor
sarb
jmp
fstps
stos
data16
and
dec
or
or
jmp
cmp
jo
xorl
mov
pushf
push
loopne
push
jge
sar
add
jmp
lcall
jmp
lock
mov
inc
into
pop
cmp
xor
push
cmc
add
push
addr16
jmp
je
pusha
dec
adc
clc
jmp
cmp
jmp
popl
xchg
icebp
add
fcoml
mov
sbb
xchg
xor
sbb
xchg
and
mov
adc
subl
sub
insb
jae
jo
loop
sub
cmp
dec
jbe
jbe
loopne
and
and
sbb
repnz
adc
dec
clc
sub
cmp
ja
jne
mov
shl
jmp
pop
shlb
decl
jmp
push
leave
pop
cmp
or
in
ud0
jmp
or
dec
cmp
jmp
mov
aam
ret
cmpsb
push
mov
dec
iret
stc
data16
xchg
outsb
jmp
decl
jmp
xchg
sbb
dec
fistpll
movsb
std
mov
jmp
movzwl
jmp
addl
lock
lret
mov
jle
call
jmp
jmp
and
movzwl
jmp
xchg
adc
dec
fdivrs
jne
out
add
cmp
in
cmc
decl
mov
or
inc
jmp
mov
jmp
push
xchg
or
outsl
lcall
pushf
xor
inc
push
or
or
sub
sub
cmp
jbe
decl
jmp
jl
imul
or
lahf
xor
jne
shr
jmp
into
inc
shlb
outsb
or
pop
push
call
jmp
addr16
imul
dec
inc
aam
sub
jne
out
pop
xor
cmp
add
scas
lock
or
sub
sub
cmp
jbe
decl
jmp
sub
dec
and
cld
jmp
loop
ljmp
mov
push
xor
jns
and
jne
jmp
mov
xchg
adc
jo
jb
jmp
sbb
enter
jne
jl
notb
mulb
adc
pusha
notb
test
cmp
imul
jmp
or
or
int3
cmp
inc
or
sub
insb
or
orl
mov
shlb
imul
jmp
pop
fisttpll
out
in
clc
jmp
push
jmp
arpl
add
jmp
inc
lret
pop
ds
or
sbb
jbe
popa
add
sbb
cmpsb
lahf
mov
shl
shr
add
xor
lea
div
movzwl
jmp
mov
jmp
inc
leave
pop
cmp
cmp
push
cld
push
xchg
and
push
push
pop
mov
shl
pop
jmp
xor
push
lds
xchg
sbb
andl
jmp
cmpsl
cmp
cld
lcall
lret
jl
divb
iret
pop
cmp
jo
sub
sti
fs
dec
jmp
sbb
mov
pop
leave
ret
jmp
inc
xlat
inc
and
jbe
hlt
push
cld
dec
sub
push
movsb
sahf
icebp
loop
pop
jmp
add
jmp
lds
pop
cmc
push
xchg
cmc
add
fisubrs
inc
jmp
jmp
inc
insl
lock
sub
jmp
xchg
add
roll
shll
and
sub
pushf
jmp
insl
cmc
gs
ds
int3
int
pushl
jmp
sbbb
ljmp
xor
cmp
sub
add
add
jmp
and
xchg
mov
sbb
das
in
inc
xchg
jmp
cmp
jmp
pusha
jmp
mov
movsb
ret
ds
sti
jns
mov
insl
in
bound
and
mov
cld
jmp
popf
sbb
xor
rcll
sub
scas
aas
pop
test
cmp
lea
jle
mov
xor
cmp
jmp
in
gs
pushf
outsl
scas
xor
rcrb
mov
test
add
jmp
jne
jmp
les
push
mov
sub
setg
or
ss
mov
movzbl
add
cmp
jmp
mov
les
or
add
add
or
add
fwait
adc
in
sbb
aas
mov
inc
mov
in
jge
notl
popl
jmp
push
jmp
shr
jmp
sbb
sbb
xchg
and
xchg
testb
xor
cltd
roll
add
jne
addl
jmp
outsb
std
insl
hlt
pop
lods
lcall
mov
or
mov
or
mov
push
mov
shr
jmp
aam
ja
cmp
jae
add
mov
jmp
lods
cmp
jae
incl
jmp
sbb
push
jmp
pop
jmp
daa
add
jmp
pop
mov
jns
and
insl
hlt
pop
mov
cmp
jo
js
ljmp
call
pop
ret
jmp
cmp
dec
jg
jne
out
pop
jmp
xchg
outsb
xchg
push
shll
mov
mov
jg
or
in
and
aam
std
adcl
test
fimuls
add
pop
mov
pop
cmp
jmp
mov
cmpsl
ret
movsl
and
pop
out
out
xchg
sub
jmp
aam
xchg
jmp
fistps
test
jno
jecxz
jp
int
jl
push
add
mov
jmp
dec
scas
popf
jmp
and
cmp
mov
pusha
jmp
andb
testl
dec
lods
pusha
out
jg
jmp
inc
mov
adc
or
dec
and
scas
rorl
scas
into
mov
imul
mov
imul
jmp
push
lods
pop
mov
jmp
or
in
jge
notl
or
in
mov
lret
pusha
xor
add
add
mov
jmp
icebp
notl
xchg
add
jns
jp
add
call
cltd
roll
add
pusha
cmp
jmp
xchg
add
std
or
in
jns
mov
lahf
or
lea
popf
popa
jmp
sbb
loope
clc
jmp
mov
mov
xor
xor
pop
into
test
xchg
jp
mov
mov
jmp
sbb
popf
pop
mov
ret
and
jmp
jne
jmp
or
adc
arpl
std
adc
dec
fstpt
fs
jmp
addl
mov
movzbl
add
jmp
inc
lret
pop
ds
gs
adc
pop
divl
xorl
xchg
data16
addr16
jmp
jmp
into
dec
fnstcw
or
imul
push
fimull
fidivrl
call
mov
ret
mov
mov
cmpsl
js
popl
lea
jmp
and
xchg
pop
in
clc
lahf
push
test
jmp
fists
mov
push
cld
pop
bt
push
movsl
adc
jmp
sbb
xchg
or
out
adc
inc
xchg
add
inc
int3
popf
ljmp
fwait
or
pop
cs
mov
ret
jmp
jp
arpl
cmc
pop
out
jp
jp
cmpsb
xor
mov
jo
je
popa
mov
jmp
push
dec
xchg
outsb
js
xorb
jmp
int3
push
lds
testl
fisubrl
fists
into
and
je
shrl
inc
cmp
jmp
seta
bound
mov
jmp
cld
sbb
push
jmp
dec
fstpt
dec
xor
jmp
add
mov
mov
push
xor
es
lret
adc
lock
jo
jmp
pop
fdivl
in
out
cmc
pushf
outsl
mov
mov
pop
xchg
pushl
mov
jmp
ficompl
fs
pop
adcl
insl
pop
dec
outsl
cltd
jmp
sbb
mov
dec
repz
adc
roll
add
and
mov
gs
addr16
jp
jp
or
or
pop
xchg
xchg
push
xchg
add
sahf
jp
adc
in
sbb
jge
inc
or
enter
xorb
dec
fidivrs
and
mov
fwait
decb
jmp
inc
and
cmp
jne
jmp
xor
xor
scas
sbb
sbb
inc
mov
orl
add
add
jmp
jbe
jne
out
inc
push
mov
jns
cmp
adcl
test
mov
ja
sar
inc
adc
inc
shlb
mov
adcl
outsb
popf
jns
inc
popa
jmp
jmp
loope
jae
push
xchg
add
gs
pushf
outsl
ljmp
int
mov
andb
sub
jo
mov
jmp
inc
ret
ret
adc
sub
add
jmp
das
xchg
popa
jmp
jmp
inc
rcll
sub
jno
jbe
cmpl
dec
mov
adc
loopne
dec
jne
decl
jne
jmp
jle
popl
jmp
jo
jmp
xlat
push
mov
fnstcw
sub
inc
fidivrl
mov
jmp
mov
lods
lret
inc
movsb
cmp
call
or
jmp
mov
sarl
push
xchg
jb
pop
mov
ljmp
fadd
dec
fdivrl
push
jmp
mov
mov
test
imul
dec
ret
in
jmp
jnp
lock
pop
xchg
pop
bound
dec
mov
add
inc
popa
hlt
push
cld
pop
inc
xchg
testl
les
cmpsb
push
mov
xor
jl
adc
jns
jmp
aas
movsb
cmp
dec
sti
popa
icebp
nop
arpl
lret
daa
or
shlb
insb
dec
pusha
jp
test
jmp
js
je
out
imul
frstor
mov
shr
loopne
adc
sub
insb
or
out
dec
enter
and
push
xor
and
jne,pt
jmp
pop
jmp
xor
xchg
xchg
lock
push
rolb
sarb
outsb
push
stos
andl
jmp
cmp
inc
lret
cmpsb
push
test
jns
mov
stos
cmp
movsl
jmp
jmp
mov
adc
or
cmpsb
push
pop
sub
jg
inc
cld
jmp
in
jae
xchg
aas
mov
cmp
popf
and
rolb
mov
shl
outsl
lcall
push
jno
jae
test
jbe
mov
sub
push
mov
sub
push
mov
jmp
fwait
sbb
add
jns
mov
jmp
mov
inc
xor
inc
into
inc
xlat
mov
fwait
dec
ret
ret
fstpt
push
shlb
dec
hlt
jmp
mov
jmp
push
rcll
push
pushl
lea
jmp
outsl
std
insl
hlt
pop
mov
mov
sbb
cmpsl
call
jmp
pop
iret
pop
cmp
push
lds
iret
fs
mov
mov
sbbl
add
add
jmp
mov
popf
jmp
mov
movsl
int3
aas
aad
enter
inc
cmp
mov
call
add
xchg
popf
pushl
jmp
pop
jmp
fwait
gs
add
movsl
add
add
imul
mov
jmp
push
in
int3
popf
mov
ja
jmp
push
rolb
shlb
lret
push
pushf
jmp
inc
cmp
mov
mov
andb
sub
jmp
call
jmp
cli
jl
jne
jp
mov
cmpsl
sub
jmp
add
add
jmp
int3
popf
jmp
rclb
pop
test
mov
ret
js
cltd
roll
add
aaa
sbb
insb
cmp
jmp
pop
ljmp
add
jl
add
add
jmp
push
fisttps
fsts
mov
js
imul
scas
adc
and
jmp
sbb
loope
add
add
jmp
orl
push
pop
inc
xchg
jmp
lock
movsb
sub
add
adc
add
push
in
sbb
cmp
add
add
jmp
inc
iret
pop
cmp
jo
xor
test
jmp
mov
add
jmp
xchg
call
jmp
adc
call
push
in
add
decl
mov
jne
pop
pop
jmp
pop
roll
rcll
fwait
mov
add
cmp
jmp
int3
popf
inc
lret
pop
ds
and
pop
sub
in
or
add
ja
xorb
les
test
jmp
sbb
int3
popf
jo
out
or
add
loop
out
jo
cmc
in
xchg
mov
lcall
push
sub
neg
cmp
jbe
jmp
mov
add
sub
add
xor
mov
add
add
add
lea
jmp
inc
mov
add
jmp
scas
lods
lret
inc
imull
sub
cld
andl
jmp
mov
add
add
ds
add
jle
jge
negl
insb
jmp
jmp
int3
popf
mov
fwait
decb
mov
jmp
inc
xlat
inc
and
outsb
mov
xlat
pop
jmp
ret
jmp
cmc
call
jmp
jnp
bound
and
jmp
add
ret
int3
popf
xlat
inc
aad
dec
cld
daa
dec
mov
leave
adc
pop
cmp
mov
jmp
mov
leave
jmp
inc
call
jmp
imul
or
mov
mov
xor
inc
or
mov
pop
jo
popf
dec
popf
hlt
xor
xor
out
xor
add
adc
pop
in
push
imul
test
jmp
clc
mov
jmp
call
jmp
loopne
out
mov
imulb
jg
dec
push
mov
sub
cmpl
push
mov
jne
xor
jmp
and
int3
popf
sbb
dec
xor
jmp
jge
jmp
xchg
popa
call
mov
sbb
add
neg
jmp
add
jmp
movsb
fcompl
add
jmp
dec
fidivrs
inc
daa
rcrb
iret
cmp
jmp
int3
popf
imul
daa
push
gs
jmp
dec
int3
inc
and
pop
mov
add
cmp
jmp
loop
lock
bound
pop
call
jmp
dec
iret
pop
cmp
xor
xchg
add
jmp
gs
int3
popf
dec
xchg
cmp
add
hlt
jb
xchg
mov
sbb
pushl
lea
pushl
call
mov
pop
jmp
out
adc
cmp
xchg
add
addr16
adc
sbb
xchg
dec
push
jns
mov
mov
lods
lret
inc
movsb
push
decl
jmp
imul
push
jmp
push
jmp
push
jo
loop
mov
ret
in
bound
adc
jmp
xchg
push
mov
es
jge
divl
jge
add
push
js
js
ljmp
cld
push
mov
mov
jmp
mov
jmp
push
xchg
add
cmp
cmpsb
jmp
int3
popf
pop
lds
iret
dec
mov
test
jmp
mov
test
add
add
jmp
pusha
jmp
gs
push
cld
push
dec
jecxz
push
in
pop
iret
pop
cmp
jle
mov
das
pop
sub
add
xchg
popf
pushl
jmp
xor
xor
aaa
push
mov
push
lods
lret
inc
movsb
jb
xchg
imul
inc
adc
jne
arpl
cmc
sbb
push
cmp
and
cs
cmp
jne
addl
mov
jmp
ljmp
inc
mov
movl
and
jmp
popa
jmp
mov
shr
push
lahf
push
ret
inc
shlb
movsl
int3
aas
ret
dec
push
mov
mov
andb
sub
jo
mov
jmp
push
xlat
inc
and
or
inc
aad
dec
mov
cmp
mov
jmp
jg
xchg
cli
jmp
pusha
notb
pop
ds
xchg
pop
xchg
clc
shrl
mov
cmp
je
jmp
test
and
mul
aam
popl
jmp
jmp
jmp
inc
jmp
add
mov
xchg
icebp
add
ss
sbb
aad
out
inc
mov
jmp
lea
jmp
push
fmuls
fdivrs
arpl
xchg
gs
pop
xchg
repnz
in
call
dec
jmp
das
mov
or
xor
ret
jmp
int
repnz
fs
mov
jle
cmp
fwait
in
js
mov
cmp
daa
mov
cmpl
jne
jmp
push
rclb
rorl
mov
xor
inc
adc
add
jle
cmp
jmp
cwtl
add
or
sbb
test
fisubl
clc
jne
pop
pop
jmp
inc
fnstcw
lcall
lcall
inc
and
sub
ja
fs
sbb
rolb
cwtl
push
mov
fcomps
and
fstpl
stos
pop
xchg
push
mov
js
popa
cmc
jge
je
jbe
movsb
jecxz
popa
mov
ret
mov
xchg
repnz
ds
inc
mov
ret
jmp
addl
jmp
mov
iret
leave
inc
aad
dec
ljmp
mov
fadds
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
movzbl
jmp
repz
je
inc
mov
in
cmp
jmp
and
cpuid
xor
inc
fidivrl
and
add
add
add
enter
jno
daa
jmp
popa
lds
test
jmp
lret
test
lock
xchg
sbb
add
xchg
popf
pushl
mov
jmp
int3
popf
add
push
int
push
out
jmp
je
jbe
loopne
sbb
das
mov
call
jmp
std
rcll
cmp
popl
jmp
push
jmp
push
jmp
stos
aaa
cmpsl
ret
loop
call
jae
xchg
clc
data16
xchg
outsb
jmp
add
add
jmp
push
mov
loope
push
push
jmp
jecxz
adc
add
jge
je
dec
call
sbbl
lea
jmp
pop
jecxz
push
in
addr16
adc
adc
in
pop
out
push
jmp
lahf
dec
pop
jmp
rolb
mov
add
fsts
mov
popf
in
test
stos
out
jl
push
jmp
cmpsl
inc
adc
or
jnp
push
mov
dec
sub
adc
jmp
mov
test
cmp
adc
pop
sub
jmp
fists
mov
mov
sbbl
cli
jmp
mov
mov
aad
sub
je
xchg
add
and
sub
adc
lcall
outsl
rorl
mov
imul
push
pop
xchg
add
es
pop
xor
loopne
mov
shr
jmp
stos
xor
adc
in
sbb
cmpsb
mov
mov
add
int
lret
scas
pop
mov
cmp
and
jecxz
sub
andl
push
jmp
es
mov
sbb
loop
pop
loop
mov
add
add
pop
aas
lret
sub
out
jg
jmp
pop
scas
push
jmp
jmp
jb
cmpsl
shr
add
xor
jmp
mov
jmp
leave
dec
fdivrl
xor
push
push
inc
and
ss
faddl
inc
or
shlb
test
mov
jmp
rcrb
scas
pop
test
outsl
mov
aad
dec
mov
cmp
js
jmp
mov
nop
testl
hlt
pop
mov
test
sub
mov
cmc
pushl
std
call
cmp
pop
ds
out
ljmp
push
add
and
ret
jmp
or
or
mov
imul
jmp
in
je
xor
cmc
jmp
cmpsl
pop
jmp
sbb
pop
jp
xor
data16
xchg
outsb
lods
popa
cli
push
push
shlb
rcrb
jae
ljmp
sub
jmp
in
mov
inc
std
incl
jmp
inc
jecxz
push
in
pop
lahf
punpckhdq
adc
xor
imul
rolb
mov
test
jge
pop
jmp
test
mov
mov
jmp
pop
jecxz
push
in
push
rolb
shlb
add
push
and
xchg
xchg
repnz
xor
push
roll
sarl
jg
push
add
xchg
popf
pushl
mov
jmp
jmp
call
add
sbb
addl
jmp
mov
xchg
lock
scas
and
mov
int
andb
jmp
popa
jmp
ljmp
push
xor
push
pop
mov
push
ret
cmpsb
push
xchg
repnz
dec
adc
addr16
mov
lcall
aas
lods
and
sbb
or
mov
mov
shr
or
mov
mov
mov
shl
neg
jmp
jecxz
shlb
inc
adc
inc
aam
sub
les
lcall
push
loop
mov
movzbl
jmp
mov
xor
sti
sahf
insl
int3
sbbl
ljmp
lcall
jbe
arpl
jnp
xor
lea
sahf
or
cmpsb
dec
fs
push
sub
decl
add
jne
jmp
cmp
test
jnp
test
jmp
rclb
cmpsb
push
aam
sbb
stos
cmp
inc
loop
insl
ret
jbe
add
push
xchg
add
sahf
jbe
sbb
les
int3
xor
insb
or
rcrl
adc
decl
std
mov
mov
sub
jmp
cmc
jo
xorl
outsb
popf
orl
stc
or
xlat
daa
ret
es
jmp
aam
repnz
adcb
in
orb
sti
push
mov
pop
shrb
push
push
push
push
push
pop
mov
cmp
jb
xor
jmp
jmp
cmp
and
gs
or
shr
add
add
mov
jmp
out
iret
jmp
sbb
push
shlb
xor
lret
scas
pop
repnz
cs
jmp
cmpsl
xor
icebp
mov
jmp
fmuls
mov
repz
shlb
andb
add
inc
pop
mov
add
lea
jmp
push
les
int3
imul
out
jno
inc
fisttpll
out
call
ljmp
imul
pop
aas
lret
imul
insl
in
jae
shl
or
mov
mov
jmp
pop
fmuls
fcoms
test
fsubr
outsl
jl
jne
insb
enter
dec
mov
add
cmp
push
cmp
sub
jno
xorb
inc
fidivrl
imull
sub
xchg
call
fisubrl
fimuls
xor
jmp
fadds
push
inc
pop
and
jmp
mov
jmp
adc
jmp
xchg
mov
fmull
inc
leave
int
mov
shr
or
ljmp
decl
jmp
int
fidivrl
in
jg
ret
cmpsb
push
xchg
xor
add
fiaddl
lcall
mov
data16
adcb
test
lcall
mov
mov
pop
cmp
jmp
movsl
xor
inc
inc
or
inc
call
lds
popf
add
add
add
and
imul
insl
ret
mov
rclb
addr16
pop
jmp
dec
rolb
rclb
mov
jmp
push
int
and
aaa
cmpsb
lods
lret
inc
lods
mov
mov
loope
adc
sub
mov
jmp
dec
fisttpl
fstpl
cs
mov
xorb
sbb
and
xor
add
add
sub
pusha
jmp
enter
dec
mov
pop
leave
test
cmpsl
fstpl
scas
pop
lea
inc
and
and
mov
dec
xor
jmp
xchg
fnsave
inc
or
jge
add
pop
fisttpll
out
fcoms
cmpsl
push
mov
int
sbb
call
add
xchg
popf
pushl
jmp
dec
lret
pop
ds
jns
out
out
xchg
fadd
sar
inc
adc
rcrb
test
stos
and
cmp
or
mov
inc
mov
sub
fistl
dec
sub
jle
or
pop
iret
stos
pop
into
mov
cltd
test
push
scas
mov
mov
andb
sub
jo
mov
jmp
mov
cmp
mov
jmp
xchg
add
mov
out
jg
mov
insb
mov
sub
pop
out
popf
or
lods
lret
inc
test
addb
and
ret
jne
addl
jmp
jne
jl
notb
or
dec
insb
inc
je
jmp
mov
mov
push
xchg
repz
out
jl
jne
add
add
push
pop
and
jmp
xchg
fwait
decb
bound
gs
push
mov
jmp
lea
and
sti
or
daa
cmpsl
aaa
push
mov
push
popa
mov
jmp
sbb
or
dec
test
in
outsl
lcall
jmp
mov
fistl
dec
sub
cmp
ja
into
pop
cmp
and
add
lea
jmp
mov
test
cmp
ret
adc
lea
enter
jmp
jmp
aaa
mov
repnz
notb
inc
and
js
xor
je
mov
push
xor
test
jbe
push
push
mov
push
mov
sub
jmp
mov
xor
loopne
in
jg
cli
xchg
add
add
xor
ret
inc
jne
jmp
jge
jg
jmp
xor
sbb
sub
xor
out
sub
jmp
push
int
and
aaa
in
jnp
mov
inc
fisttps
out
out
mov
out
mov
jmp
decl
jmp
pop
mov
jns
vmwrite
imul
iret
stos
pop
fstps
stos
pop
sub
mov
mov
or
sub
sub
cmp
jbe
or
jmp
mov
mov
push
mov
enter
jnp
push
jmp
outsb
out
jg
jmp
test
lods
pop
enter
dec
int
and
cmp
jmp
xchg
pop
mov
scas
leave
cmp
loope
lcall
or
cmpsb
push
icebp
sub
leave
inc
sub
add
xchg
popf
jmp
mov
add
add
xchg
add
add
dec
fstpt
cli
popf
insb
mov
xchg
push
pushl
jmp
mov
test
sub
inc
shll
nop
testl
lret
ljmp
enter
fstps
shl
jmp
adc
cmp
inc
or
jmp
fwait
or
adcb
xorb
hlt
push
cld
push
movsb
lock
popa
sbb
jmp
loope
jmp
jge
pop
lret
lret
pop
xchg
adc
jno
js
ljmp
add
pop
ss
jmp
mov
add
sub
add
jl
jp
in
push
lcall
cmc
add
clc
jmp
jmp
cmp
mov
jo
jmp
fldl
mov
lds
in
jp
outsl
or
out
xor
push
leave
popa
mov
ret
ds
push
lahf
aaa
test
stos
out
decl
mov
gs
push
mov
jns
pop
jnp
insl
hlt
pop
lock
fisttps
into
ds
add
cmp
je
popa
mov
jmp
push
mov
gs
addr16
lea
xor
lea
jmp
dec
ret
mov
mov
dec
mov
xchg
pusha
xchg
jmp
lret
push
dec
test
jmp
xchg
sbb
lods
cmp
cld
push
jne
jmp
push
fmuls
fdivrs
enter
jle
jbe
cmpl
fwait
mov
add
add
jmp
icebp
pop
ret
jmp
pop
mov
xor
add
add
jp
jp
pop
into
pop
cmp
jg
sub
scas
cmp
mov
shr
jecxz
cmp
jne
addl
mov
jmp
das
pop
jmp
jmp
fmull
mov
mov
mov
jb
jg
jmp
sub
push
mov
mov
add
dec
jmp
pop
les
int3
es
insb
or
out
nop
push
pushf
sti
push
xchg
clc
int3
ss
pushf
jmp
adc
add
cli
imul
insl
in
inc
rcll
or
addr16
pop
adc
push
push
insb
out
jmp
xchg
adc
push
popa
mov
ret
mov
mov
lods
and
jmp
xchg
or
inc
jmp
aad
shll
popa
nop
inc
mov
mov
cmpsl
aaa
push
mov
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
mov
xchg
repnz
fwait
adc
inc
xlat
mov
stos
inc
lock
ret
jne
addl
mov
movzbl
jmp
cmp
jne
imul
cmp
je
popa
jmp
jmp
int3
inc
shll
cmp
outsb
cmp
jge
je
xor
add
add
jmp
lds
mov
and
add
jge
negl
and
add
mov
jmp
cltd
test
mov
fs
jmp
loope
in
jle
fsts
cmpsb
push
in
test
push
int3
inc
and
popf
pop
int3
inc
and
and
mov
add
jmp
cmpsb
inc
shll
jo
loop
rorl
mov
into
test
sbb
add
add
lea
out
adc
daa
xchg
std
or
mov
inc
cmp
jb
jmp
push
adcl
xchg
ljmp
loop
xor
scas
sub
insl
std
test
int
jmp
and
jmp
adc
lods
and
pop
mov
fldt
mov
jno
jmp
jp
pusha
pop
repnz
fistl
cmpsl
push
mov
sbb
mov
xchg
das
dec
test
jge
jmp
inc
int
and
pop
loope
movsl
daa
loope
sub
add
xchg
popf
pushl
jmp
popf
mov
lea
jmp
xor
pop
das
ret
push
lds
xor
jl
inc
addl
mov
jmp
pusha
jmp
fimuls
mov
scas
leave
cmp
and
or
decb
mov
shr
add
mov
jmp
jns
xchg
sahf
sbb
jo
mov
jns
jmp
stos
dec
and
jmp
sti
outsb
cld
fwait
jbe
cli
pusha
notb
sub
call
push
stos
jl
mov
mov
xor
cmp
jae
jmp
adc
sar
inc
adc
cltd
add
pop
jp
adc
lods
fwait
pop
sbb
andb
sub
jo
mov
jmp
jl
jne
jmp
push
aad
sub
xor
aaa
fnstsw
mov
pop
xchg
mov
and
dec
enter
pop
jmp
std
test
mov
ret
jmp
in
notb
mov
sbb
jmp
adc
dec
scas
pop
flds
in
popl
jmp
iret
inc
aad
dec
test
fnstsw
lcall
rolb
inc
je
popa
mov
jmp
push
jmp
pop
rolb
rclb
cwtl
sbb
out
jl
testb
loope
jae
xchg
lcall
add
add
mov
fs
imul
push
mulb
xchg
pusha
rcr
and
je
xor
jmp
iret
push
mov
jmp
repnz
insl
ret
and
add
scas
aas
pop
test
add
ss
mov
jmp
cmp
jmp
icebp
xchg
test
jmp
mov
mov
and
in
bound
mov
addl
mov
movzbl
add
jmp
and
push
lds
fidivrl
jae
in
js
ljmp
add
jo,pt
jmp
out
sti
sahf
insl
or
fdivrl
lcall
or
fs
stos
xor
xor
cmp
jae
mov
movzbl
shl
jmp
mov
nop
mov
fadd
inc
shll
inc
and
and
or
dec
dec
jmp
lds
jmp
mov
test
cmp
jb
push
notl
pop
rolb
shlb
mov
jmp
jecxz
loop
je
ficoms
cmpsl
push
nop
ret
dec
fdivrl
xchg
xor
mov
jmp
jno
jmp
xor
xor
jmp
dec
fisttps
fsts
inc
aad
dec
in
rolb
shlb
hlt
pop
mov
mov
rorb
push
decl
or
dec
jns
jmp
or
adc
jb
jmp
dec
fimull
fidivl
push
lds
add
push
xchg
push
xchg
repz
mov
inc
jmp
es
inc
mov
pop
ret
ret
mov
inc
mov
lods
cmp
inc
jmp
inc
fimull
fidivl
jmp
cli
inc
jmp
fadds
mov
leave
sub
pop
fmuls
fcoms
stos
add
les
in
push
push
push
xor
dec
cmp
jbe
test
jmp
hlt
shlb
lcall
jb
in
loop
daa
cmpsl
push
jmp
outsb
out
jl
negb
rolb
inc
stos
jl
push
xchg
add
dec
ret
jmp
pop
arpl
call
push
lds
scas
pop
mov
cmp
mov
mov
out
jl
notb
mov
jmp
cmp
xor
push
lds
out
pusha
notb
dec
sub
xchg
sbbl
ljmp
pop
sub
lea
xor
rep
jmp
add
push
or
mov
jo
sub
jmp
lods
adc
jmp
or
add
or
pop
lret
scas
pop
repnz
ret
ret
dec
fdivrs
call
add
xchg
popf
pushl
jmp
rcll
pop
in
mov
add
ret
jne
jmp
std
push
lahf
push
mov
mov
sbb
and
addl
jmp
mov
mov
scas
aas
pop
test
je
outsl
insb
pop
repz
dec
mov
ret
fldcw
movzbl
jmp
das
repz
sbb
dec
movsb
inc
shll
sub
cmp
outsb
in
bound
cmpl
push
movsl
dec
les
dec
movsb
cmp
pop
lahf
punpckhdq
jmp
mov
add
jmp
adc
add
inc
fdivs
mov
add
xlat
push
shll
add
mov
push
pop
mov
mov
mov
andb
sub
jo
mov
jmp
jecxz
mov
jmp
and
out
test
add
add
jmp
push
fmuls
fdivrs
inc
shll
enter
fnstcw
jmp
cmpsl
aaa
push
mov
sti
push
aam
imul
insl
int3
roll
mov
stc
push
dec
les
test
decb
mov
add
mov
fwait
mov
cltd
out
jge
je
sub
jne
mov
sub
std
add
xchg
popf
pushl
mov
jmp
mov
add
cltd
push
sub
outsb
jmp
in
mov
pop
repnz
mov
jmp
cmpsb
inc
shll
push
cmp
daa
popf
add
std
or
aaa
clc
test
fwait
push
push
mov
mov
push
call
mov
pop
test
je
jmp
push
jmp
leave
push
lds
xor
inc
jb
add
cmp
push
out
lds
lret
xor
lea
rep
jmp
mov
pushf
sti
push
repz
hlt
mov
jmp
call
jmp
dec
into
pop
cmp
xor
cmp
data16
adc
push
fisubl
xchg
gs
jge
je
jo
adc
test
lcall
add
push
pop
sub
mov
jmp
repz
jmp
rorb
dec
mov
call
loopne
jmp
into
lea
jmp
rorb
dec
stos
cmpsl
sub
cmp
dec
lock
dec
pushf
mov
lea
jmp
imul
push
in
dec
inc
scas
arpl
mov
and
jmp
movsb
sub
mov
xchg
push
adc
aas
cmp
add
push
popf
push
mov
mov
sub
jmp
jbe
jp
in
pop
cld
insl
std
test
mov
mov
pop
jmp
cmp
sbb
lock
scas
aas
scas
lret
ret
mov
loopne
popa
mov
jmp
jo
loope
repz
cmp
jmp
in
out
jno
pop
ret
ret
cmp
mov
cmpsb
inc
mov
add
add
insl
std
test
pop
int
lea
pushf
xor
and
and
adcl
test
and
arpl
xchg
mov
shl
lea
sub
lea
mov
mov
jmp
add
test
jmp
mov
jmp
nop
pop
xchg
adc
push
or
enter
dec
mov
mov
mov
jmp
jmp
ss
lea
lea
push
call
pop
pop
jmp
call
sub
cmpl
pop
pop
jmp
mov
popa
dec
into
pop
cmp
ds
sbb
aad
xlat
or
adc
jmp
and
inc
clc
jmp
mov
int
jbe
cmpl
out
jl
mulb
shr
mov
sbb
jne
mov
mov
jmp
fwait
adc
pop
aad
sub
jp
inc
shll
jne
jmp
mov
jmp
or
mov
test
inc
daa
sarb
xor
subl
mov
js
mov
lea
jmp
push
cwtl
pop
push
enter
lcall
shr
scas
cli
or
push
jmp
mov
jmp
jns
jge
testl
out
loopne
jb
cwtl
adc
mov
jmp
loopne
dec
cld
jmp
and
imul
add
adc
jbe
loopne
lahf
push
xchg
repz
out
lea
jmp
loop
adc
add
cmpsb
add
jl
jmp
imull
cltd
push
adc
sbb
popa
popa
cld
ss
pushf
mov
test
jbe
mov
mov
xor
rep
jmp
cmpsb
xor
scas
inc
in
sti
sahf
insl
mov
mov
sub
sub
cmpl
jge
jmp
bound
sub
faddl
add
rep
jmp
push
mov
jmp
mov
aad
lods
lret
inc
xchg
test
xchg
repnz
inc
les
int3
and
mov
hlt
jmp
je
test
cld
jmp
or
test
jge
jg
mov
js
imul
psubd
jle
gs
push
xchg
test
jmp
sub
das
mov
lret
mov
mov
jl
jne
and
scas
rcll
lret
lea
call
jmp
jmp
in
sub
cltd
call
jmp
cmp
cmp
mov
cmp
cmp
push
lahf
push
mov
pushf
lock
push
jmp
mov
dec
movl
jmp
xchg
or
push
xor
dec
fimull
fisubrl
nop
movsb
decb
jmp
leave
pop
repnz
fs
jnp
ja
loope
lea
test
push
cld
xor
jmp
lea
jmp
ss
cmp
mov
mov
leave
pop
in
or
jno
sbb
pop
cld
or
sub
pop
cmp
mov
sbb
mov
jmp
aam
fdivrs
shlb
dec
cld
jmp
popf
sbb
push
xchg
add
jnp
lret
pop
ds
movsb
jno
sbb
jmp
movb
inc
jmp
xor
xchg
adc
in
sbb
outsb
out
jg
jmp
cli
or
inc
jmp
push
adcl
std
insl
hlt
pop
notb
outsb
xchg
sarb
ret
jmp
jae
imul
pop
cmp
and
xchg
jb
sub
xchg
testb
push
pushf
jmp
or
pop
sub
add
xchg
popf
pushl
jmp
jb
xchg
ficoml
lods
pop
cli
mov
mov
jp
jle
call
int3
aas
xchg
or
daa
mov
mov
sbb
cmp
stos
inc
shll
jns
jmp
dec
jl
jl
mov
jmp
lret
inc
or
fildl
add
jne
jmp
mov
mov
and
xchg
xor
dec
adc
es
negb
test
jmp
jl
jne
out
punpckhwd
lods
movzbl
jmp
stos
cmp
jmp
mov
shll
sub
push
pushf
sti
push
xchg
pop
fiaddl
and
cmp
jne
addl
mov
jmp
push
je
jmp
ret
pop
repnz
fs
jae
xchg
inc
ret
ret
cmc
gs
adc
add
jmp
push
aad
sub
cmp
popa
icebp
nop
arpl
insl
mov
or
jl
sar
inc
adc
popa
jmp
dec
dec
stos
jmp
pop
fimuls
push
pop
fwait
or
push
insl
mov
mov
pop
sbb
mov
mov
andb
sub
jo
mov
jmp
cmpsb
sub
xchg
sub
out
int3
popf
add
sub
push
sbb
dec
inc
jmp
callw
call
adc
add
jmp
sub
sbb
sarb
inc
out
jg
jmp
xchg
mov
dec
out
jge
jge
testl
add
lea
jmp
cwtl
or
add
or
in
mov
je
mov
sub
push
push
jmp
rorl
mov
movsl
int3
aas
xchg
lahf
or
ljmp
lock
lea
jmp
pushf
push
xchg
repz
int
adc
mov
sub
or
decl
jmp
rorb
mov
xor
scas
sub
dec
mov
pop
add
rcll
mov
imul
sbb
add
add
dec
cld
test
jne
movl
jmp
push
xchg
add
ret
push
lds
pop
pop
mov
test
jbe
lea
lea
jmp
inc
lds
iret
sbb
loop
ret
test
ss
mov
jne
jmp
ret
jmp
test
mov
repnz
pop
repnz
jo
xorl
adc
cli
fimuls
cmc
jl
jne
ja
inc
test
leave
jmp
add
dec
lds
iret
push
das
mov
mull
icebp
cmp
arpl
cmp
std
lcall
movb
inc
jmp
dec
fisttpll
out
and
pop
js
jmp
xlat
inc
aad
dec
cld
push
push
xor
addr16
add
jmp
xchg
pop
xchg
repnz
sub
insb
fistl
jmp
add
lea
mov
movups
jmp
adc
add
xor
add
pusha
jmp
inc
fistpl
inc
fisttps
flds
lcall
jmp
jo
mov
and
cmp
jne
addl
jmp
gs
mov
jmp
scas
xor
cmp
xor
and
imul
es
rorb
jmp
pop
fimuls
push
arpl
jno
jecxz
divb
mov
mov
sar
inc
adc
addr16
adc
adc
clc
xor
jmp
sub
jp
cmp
jmp
add
add
jmp
pop
nop
push
popa
nop
inc
das
test
mov
add
jmp
mov
ret
xor
ss
dec
push
xor
sub
inc
or
andb
sub
jmp
pop
sahf
or
cmpsb
push
fdivr
mov
test
jmp
or
pop
fwait
int3
jle
dec
mov
jmp
out
cltd
push
xorl
add
mov
add
add
mov
jmp
leave
pop
leave
test
out
xchg
pop
xchg
repnz
jnp
out
mov
call
jb
dec
fstpt
les
sti
sahf
insl
ret
jecxz
jne
inc
adcl
lods
pop
sti
fs
insb
or
fidivrs
xchg
adc
int3
push
inc
inc
lea
jmp
test
fmuls
add
adc
nop
pop
sub
jne
jmp
inc
ret
ret
push
lret
mov
cmp
sub
cmpsb
std
nop
sub
pushl
lea
pushl
jmp
push
jmp
mov
jmp
add
push
aam
sub
frstor
pushl
jmp
popa
jmp
push
in
push
sub
add
pop
pushf
xor
inc
insb
sub
add
pop
add
add
decl
pop
jne
jmp
xor
mov
call
add
movl
lea
jmp
shrb
jmp
jmp
cmp
imul
pop
loop
leave
inc
aad
dec
ljmp
decl
test
jne
leave
ret
jmp
repz
jne
push
mov
push
pushf
jmp
sub
jmp
loope
jecxz
jne
pop
mov
jg
sub
shrl
xor
jmp
add
jmp
jo
jno
jecxz
lcall
mov
inc
mov
or
cld
jmp
pop
int3
inc
and
xor
inc
and
jmp
xchg
add
ret
push
lds
xor
add
cmp
push
cld
pushl
mov
pushl
mov
mov
jmp
pop
sub
inc
or
andb
sub
jmp
flds
mov
sbbb
dec
rolb
sarb
xchg
in
je
and
push
lahf
push
mov
hlt
jmp
and
jmp
fisttpl
mov
leave
test
fidivs
clc
xor
pushl
mov
jmp
adc
add
mov
in
cli
popf
insb
mov
mov
ret
mov
cwtl
decl
hlt
jge
push
mov
jmp
cmp
test
idivb
test
inc
xchg
mov
mov
lea
call
pop
pop
movl
jmp
cmp
jmp
popa
jmp
mov
test
cmp
scas
es
cs
stos
into
cmp
pop
test
cmp
lea
aaa
jmp
je
jmp
xor
push
lds
jnp
gs
aas
lods
and
push
mov
sbb
rclb
push
clc
scas
cmp
mov
mov
and
cmp
jne
addl
mov
jmp
add
inc
rolb
add
jmp
ljmp
lcall
lods
add
in
sub
popf
sbb
and
push
xor
dec
mov
jmp
iret
pop
enter
pop
les
int3
setb
lahf
cli
or
cmp
and
in
shlb
add
add
jmp
addr16
insl
hlt
pop
out
jnp
jo
loop
sbbl
call
pushl
mov
mov
call
jmp
pop
push
jmp
sbb
add
add
popa
icebp
nop
arpl
cld
jle
mov
jno
push
das
sbb
jmp
or
jnp
jbe
cmpl
pushl
jmp
addr16
adc
adc
fdivrs
mov
jmp
push
in
add
push
test
mov
sub
pushl
lea
push
mov
jmp
in
cld
fwait
jbe
mov
fstpl
jge
test
std
jmp
pushl
jmp
or
xchg
push
mov
es
push
xor
push
sbb
push
jmp
push
and
fistl
fldcw
jmp
sbb
add
inc
adcl
je
outsl
or
mov
or
mov
add
jle
mov
cmp
jg
jmp
mov
test
jbe
xor
lea
rep
jmp
movb
inc
jmp
ljmp
lcall
insb
lds
xchg
add
sbb
or
aad
lcall
iret
leave
push
shlb
icebp
add
mov
mov
repnz
jnp
ljmp
lret
pop
ds
icebp
outsb
cld
fwait
jbe
rolb
inc
mov
test
mov
stc
inc
jmp
inc
push
xor
es
lret
pop
ds
aaa
mov
pop
sub
add
xchg
jmp
ficompl
fs
add
add
mov
add
rcll
pop
mov
jnp
jmp
adc
ds
ljmp
outsl
lcall
pop
mov
dec
cld
decl
test
jne
leave
ret
jmp
ja
push
pushf
dec
lods
mov
mov
mov
andb
sub
jmp
das
mov
jmp
ret
sub
addl
jmp
sub
imul
pop
loop
dec
push
xor
imul
add
pop
cwtl
push
imul
jo
jmp
xor
mov
pop
mov
gs
cmp
test
mov
jmp
mov
pushf
scas
aas
scas
lret
es
inc
mov
xchg
and
and
cmp
jne
jmp
fcoms
cmpsb
push
hlt
mov
in
outsb
data16
cmpl
iret
push
lret
mov
sub
std
or
jne
jns
jmp
out
rol
inc
adc
dec
rolb
rclb
xchg
jb
inc
jne
fs
push
je
push
cld
adc
out
popl
jmp
push
jmp
push
push
jmp
lret
lea
jmp
and
rclb
mov
fistpll
aam
int3
popf
rclb
cmpsl
push
mov
insl
mov
xchg
test
mov
jne
mov
inc
sub
fs
jmp
cmc
jo
xorl
pop
out
lea
xchg
repz
in
sub
jmp
xchg
sbb
jne
mov
sti
jnp
mov
mov
mov
mov
sub
push
mov
jmp
cmpsl
aaa
push
mov
mov
dec
fdivrs
jmp
jge
in
sti
mov
jmp
sbb
aad
lea
or
punpckhdq
and
outsl
and
rolb
add
jmp
mull
xchg
pusha
leave
in
push
jne
jmp
fisttps
mov
pushl
jmp
or
punpckhdq
jo
inc
aad
fdivrl
mov
jmp
dec
rolb
sarb
les
xchg
mov
pop
cmp
dec
mov
roll
rolb
aam
cmp
je
jmp
movsl
and
stos
sub
push
lods
xor
mov
pushl
lea
push
call
jmp
test
lret
sahf
pop
pop
jecxz
push
in
pop
les
pusha
notb
ss
mov
stc
or
pop
lea
test
adc
jg
add
ret
movl
jmp
pop
rolb
shlb
adc
or
cmp
sub
add
jmp
jbe
jmp
loopne
loop
je
rorl
repz
jbe
loopne
adc
dec
lea
pushl
lea
push
call
jmp
popa
mull
icebp
dec
xchg
sub
into
xor
lea
rep
jmp
dec
mov
jmp
cmp
or
push
ud0
jmp
mov
mov
es
mov
test
movsl
xor
stos
jb
add
movl
lea
jmp
jmp
mov
or
mov
sbbb
call
fwait
decb
outsl
lcall
mov
mov
test
jl
push
mov
mov
mov
jmp
adc
rcrl
cmpsb
lea
jmp
fs
imul
cmp
mov
addl
icebp
add
popa
mov
pop
push
jmp
aas
mov
mov
cld
jmp
pop
sahf
or
cmpsb
inc
or
ja
rolb
rolb
jmp
movb
inc
jmp
dec
mov
jmp
sub
aam
dec
jnp
add
jmp
mov
mov
out
jmp
lods
das
mov
dec
fstpt
xor
scas
dec
jmp
or
jne
lea
push
push
mov
call
jmp
cmp
pop
push
sbb
jle
mov
ds
shl
xor
mov
push
fmuls
fcomps
xchg
cwtl
decl
lods
dec
fldt
lds
iret
fs
shr
inc
pushl
lea
push
push
mov
call
jmp
les
pop
in
cmp
jne
jmp
lea
jmp
inc
aam
sub
aas
pop
test
inc
mov
inc
jmp
cld
outsl
lcall
imul
jmp
mov
loope
lock
bound
and
add
decl
jns
pop
jmp
stos
xor
stos
cmp
sub
into
dec
push
pop
mov
dec
lea
call
pop
movl
jmp
adc
add
sahf
push
push
rolb
sarb
dec
iret
pop
cmp
aas
cmc
je
lea
lea
jmp
push
aad
sub
and
inc
jle
push
out
adc
push
push
mov
jmp
in
pop
jmp
pop
leave
jno
and
movb
jmp
sub
popa
loope
mov
jmp
jle
push
cld
bswap
inc
shlb
bound
ds
jne
jmp
sbb
outsl
xchg
sbb
jmp
jmp
call
mov
iret
paddusw
jmp
mov
test
add
mov
add
stc
mov
dec
adc
leave
jne
movl
lea
jmp
jg
inc
jmp
mov
mov
and
test
jmp
pop
xchg
leave
jmp
sub
or
call
pop
arpl
push
cld
push
js
bound
push
xor
pushw
test
jge
dec
test
decl
jmp
jne
jmp
add
cmp
ret
jmp
cmpsb
lods
lret
inc
lods
push
iret
pop
cmp
aas
xchg
setg
or
xor
or
inc
add
jmp
dec
sbb
into
lcall
lcall
pop
jmp
mov
jmp
nop
adc
push
xchg
repz
out
scas
aas
pop
test
xlat
push
lea
push
mov
call
add
jmp
and
jmp
bnd
lea
xor
and
test
pop
test
jb
sub
add
xchg
popf
pushl
jmp
dec
rcll
xor
pop
into
inc
aam
dec
stos
or
inc
or
andb
sub
jmp
int
fidivrl
mov
es
mov
cmp
mov
ret
xor
push
lds
xlat
lock
sbb
add
jmp
sub
aaa
push
mov
fs
and
aas
lret
xchg
jo
jmp
call
leave
ljmp
fwait
jbe
push
nop
push
popa
nop
and
jb
in
xor
pop
shl
dec
dec
test
je
test
jbe
jmp
dec
fimull
fisubrl
jg
mov
add
rcrb
jmp
je
jmp
push
ret
cmpsb
push
mov
dec
fstpt
and
mov
and
repz
lea
jmp
and
sub
ds
fisttpll
out
jp
outsl
or
out
sub
fs
popf
insb
test
ljmp
fs
adc
ss
dec
jmp
movzbl
jmp
gs
adc
sbb
outsb
cld
fwait
jbe
lret
mov
mov
out
out
xchg
add
push
jmp
arpl
jle
call
fisubrs
mov
clc
movzbl
jmp
or
jmp
inc
into
pop
cmp
jno
and
fistpl
in
jae
mov
jmp
jge
add
push
nop
add
or
or
decb
mov
inc
out
or
movzbl
shl
jmp
gs
pop
jmp
mov
jmp
push
push
xor
adcl
adc
xchg
imul
jmp
imul
fisttpl
jo
xorl
jbe
push
adc
jmp
mov
inc
mov
std
gs
pushf
outsl
scas
sete
insl
pushf
jle
rclb
sub
call
add
xchg
popf
pushl
jmp
hlt
jae
xchg
fldl
mov
sub
lock
mov
mov
mov
jmp
ret
sub
jmp
and
cmp
lods
gs
mov
add
add
push
cli
jg
mov
fistpl
test
mov
mov
inc
mov
dec
int
and
sub
jmp
and
jmp
jne
pusha
pop
repnz
jp
xchg
xchg
lock
mov
iret
sbb
jmp
xchg
and
icebp
aas
cmp
jmp
pop
rolb
shlb
and
clc
outsb
or
pop
pushf
adc
outsb
adc
popa
mov
ret
pushl
xorb
add
test
or
or
xchg
jne
jmp
in
adcl
test
xchg
add
jns
mov
adc
aaa
nop
mov
add
add
dec
jne
pop
pop
ret
jmp
icebp
imul
insl
fdivrl
stos
cmp
or
cmpl
add
mov
inc
mov
and
repnz
jmp
xor
cmp
les
int3
es
push
pushf
sti
push
xor
mov
add
cmp
je
jmp
popl
jmp
movsl
cmp
mov
or
jmp
or
push
add
add
add
add
inc
ret
ret
ljmp
stc
out
mov
fildll
push
mov
inc
je
popa
mov
jmp
mov
movsb
ret
ds
inc
push
lea
shr
jmp
out
push
lahf
push
pop
xchg
add
jp
sahf
or
cmpsb
push
push
mov
xchg
hlt
cmovno
push
mov
rorl
adcl
xor
int
fwait
in
lock
bound
call
inc
shll
xor
add
or
xchg
or
sub
test
lock
and
sub
adc
add
cmp
enter
jmp
adc
xor
dec
frstor
mov
stos
pop
shrb
cmpl
jmp
push
jo
inc
jmp
clc
cmp
ret
inc
sub
jmp
faddl
mov
lea
pushf
xor
inc
aad
ret
cmpsb
push
mov
and
cmp
jne
addl
mov
jmp
jg
je
out
push
push
sahf
mov
ljmp
and
jmp
mov
jmp
popa
jmp
xor
movsb
cmp
sub
push
xor
push
inc
testb
jmp
aam
lds
push
movsb
dec
sbb
enter
push
test
xor
pop
sub
add
xchg
popf
pushl
jmp
mov
push
mov
mov
andb
sub
jmp
addl
jmp
push
fisttpl
fisttpll
jbe
cmpl
pop
int3
stos
data16
sar
inc
adc
aas
mov
xchg
sbb
adc
push
lods
inc
dec
sbb
jmp
fisttps
addb
decl
add
jne
jmp
sahf
adc
mov
mov
movzbl
add
cmp
jmp
popa
jmp
jp
push
cld
pop
fistl
pop
mov
jg
mov
pusha
repz
cmc
push
pop
call
jmp
jmp
dec
jecxz
push
in
jg
bound
shlb
sbb
and
adc
add
add
roll
test
jmp
mov
popl
jmp
mov
mov
lds
iret
fs
into
pop
cmp
popa
les
in
jmp
dec
fmuls
fdivrs
cld
xchg
cmc
add
aad
fdivrl
pop
jae
pusha
adc
jmp
adc
add
sub
mov
jg
or
or
test
add
addb
testl
xchg
lea
adcl
sbb
mov
jmp
movl
jmp
movb
inc
mov
push
mov
pop
enter
or
add
add
and
movl
movl
jmp
rcrb
test
mov
and
lahf
adc
pop
fisttpl
int3
xor
outsb
push
jmp
outsb
shrl
les
add
jmp
cmp
push
sbb
pushf
adc
inc
jmp
pop
mov
jg
sub
add
adc
incl
mov
daa
inc
mov
ds
cmp
mov
mov
mov
and
or
mov
or
call
cmpsl
and
jmp
cmp
mov
imul
mov
sbb
adc
inc
and
popf
pushl
mov
jmp
mov
les
inc
or
ret
add
add
sar
popa
jmp
ja
and
jmp
sbbl
jno
jecxz
notl
rol
jne
mov
test
jne
jmp
xchg
fwait
decb
add
sbb
pop
dec
iret
pop
cmp
sub
sbb
mov
fwait
jmp
inc
out
pop
mov
jmp
cltd
push
mov
es
xor
ljmp
stc
out
loopne
fnstsw
adc
mov
jmp
gs
jge
testl
and
mov
and
xchg
jb
imul
cmp
outsl
or
mov
cmp
incl
add
mov
jmp
lcall
popa
jmp
adc
mov
xchg
imul
mov
jmp
add
add
jmp
aad
aad
dec
sti
sub
lds
lods
cmp
jmp
in
adcl
test
arpl
pusha
pop
repnz
pop
int
and
rcll
pop
neg
xor
sar
inc
adc
in
xchg
xlat
rclb
sub
inc
roll
shll
fdivl
in
push
roll
aad
pop
notb
nop
push
mov
sub
jmp
xchg
cmp
sub
pop
or
add
add
cltd
addr16
jmp
push
adc
rolb
jnp
ret
push
lds
push
int
and
cmp
lds
pop
cmp
dec
clc
lea
jmp
fistpl
stos
pop
scas
sub
cmp
notl
jo
mov
jg
fisttpll
andb
sub
jo
mov
jmp
push
sbb
dec
or
shll
cli
or
add
mov
lea
jmp
arpl
and
rcl
add
mov
not
and
mov
and
or
add
mov
jmp
aas
ret
push
lds
or
in
cld
sub
xor
xchg
lea
rol
add
jmp
mov
addr16
jo
loop
cmp
mov
pushf
sti
push
shl
hlt
xchg
outsb
fwait
xor
cmp
or
lret
inc
mov
mov
mov
jle
lea
call
mov
jmp
xchg
mov
jmp
sbb
pop
pop
jp
xor
dec
sub
xor
xchg
and
jmp
adc
or
jmp
cmpsl
and
call
jmp
jns
mov
sti
mov
jmp
add
jmp
int3
popf
cmp
pop
mov
jmp
cltd
sbb
aad
int3
xor
inc
xor
rorl
cld
mov
jmp
call
jmp
adc
leave
push
and
jmp
mov
jmp
dec
test
repz
jmp
aaa
mov
pop
cwtl
mov
lea
ror
add
and
mov
not
jmp
orb
decl
out
mov
filds
jge
mov
lea
rol
add
jmp
idivl
mov
sbb
dec
push
mov
not
and
or
add
lea
rol
jmp
mov
jmp
inc
and
add
add
jmp
arpl
cmc
daa
inc
int3
inc
and
add
jmp
pusha
xor
xlat
not
jmp
xchg
sbb
imul
add
add
jmp
dec
fimull
fisubrl
sub
mov
and
jmp
and
jmp
sbb
scas
call
jmp
jns
jg
jmp
cli
jmp
push
popf
mov
mov
and
std
aad
clc
sbb
add
mov
inc
mov
and
shl
and
mov
and
or
add
mov
jmp
jb
or
or
jmp
mov
jmp
addb
test
call
jmp
mov
lods
mov
push
data16
xchg
outsb
mov
push
fsubr
int
lea
jmp
push
lds
iret
jp
imul
faddl
and
or
add
lea
rol
jmp
cmpsb
or
sub
add
or
add
movsb
cmp
outsl
jecxz
mov
pop
lea
ror
add
mov
and
mov
not
jmp
xchg
sbb
dec
cld
mov
notl
mov
mov
and
jmp
int3
popf
inc
fistpl
call
or
stos
and
add
pop
cmp
xor
jmp
add
jmp
xchg
or
cmpsl
aaa
push
mov
pop
bnd
addl
rorl
or
jmp
sbbl
and
data16
sbb
mov
test
xchg
mov
cmc
mov
and
not
and
or
add
lea
jmp
test
mov
jge
mov
ror
jmp
sub
in
sbb
cmp
push
mov
and
sti
icebp
mov
lea
jmp
or
ret
shr
or
notl
jmp
jnp
and
jmp
or
rcrl
scas
pop
mov
mov
into
inc
aad
dec
mov
or
add
mov
lea
rol
add
jmp
mov
jmp
add
fs
and
adc
mov
mov
lock
jmp
mov
jmp
ja
jnp
in
pop
dec
fstpt
jmp
push
mov
es
jnp
ror
add
and
mov
not
and
or
add
mov
jmp
ficoml
or
or
or
xor
mov
fimuls
mov
cmpsl
add
jmp
sbbl
ljmp
jmp
adc
hlt
jmp
push
ret
cmpsb
push
mov
sub
cli
push
jecxz
push
in
imul
and
or
add
mov
lea
mov
and
jmp
int3
inc
xchg
or
jmp
sbb
and
dec
enter
and
call
and
mov
jmp
sbb
push
rolb
shrb
push
aam
sub
jge
jmp
and
jmp
and
ss
mov
sub
xor
movsb
sub
inc
movl
pop
hlt
jmp
inc
lret
lret
daa
mov
and
sbb
mov
shr
jns
gs
pop
add
jmp
enter
dec
cltd
jns
imul
cmp
ret
push
lds
xchg
test
add
mov
lea
jmp
jns
jns
jmp
aas
shl
cli
jmp
imul
clc
mov
jmp
aaa
movsl
xor
lret
pop
ds
push
mov
xchg
sub
test
scas
cmc
rol
add
mov
and
jmp
cmpsb
aaa
cmpsl
ret
xor
push
mov
rolb
mov
not
and
mov
and
or
jmp
call
rol
jmp
ja
jo
loop
push
mov
gs
push
lods
movsb
ret
fcompl
sti
bound
popf
add
lea
jmp
loopne
out
mov
xchg
dec
cld
jmp
push
not
jmp
mov
push
movsb
inc
shll
shll
pop
jb
or
pop
leave
test
nop
and
and
ror
add
and
or
add
mov
lea
jmp
sbb
jne
std
mov
jmp
mov
leave
jge
hlt
and
jmp
sbb
shr
aas
int3
popf
jnp
outsb
or
adc
cmpsb
xor
scas
inc
add
pop
xor
sub
pop
in
not
lea
mov
jmp
lahf
pop
aaa
mov
inc
mov
mov
int3
xor
pop
or
jmp
push
mov
shr
add
add
stos
daa
mov
and
sbb
add
in
in
ds
jmp
popf
sbb
insb
loop
je
je
push
cwtl
push
imul
mov
and
not
and
or
add
jmp
test
or
jmp
mov
jmp
rcrb
cmpsb
sub
cmp
insl
insb
or
scas
mov
pop
cld
jmp
lret
jmp
jne
or
sbb
lea
jmp
or
add
jmp
push
ret
ret
sahf
or
cmpsb
psubusb
mov
sub
ret
lret
fcom
inc
fidivrl
inc
daa
shlb
push
shll
shll
jecxz
add
lea
mov
not
and
rol
jmp
and
jmp
mov
mov
sbb
xor
and
dec
fistpll
aas
mov
jbe
push
clc
not
and
lea
rol
add
mov
jmp
cwtl
push
xchg
repz
mov
jnp
mov
cmp
inc
les
int3
and
add
jmp
not
jmp
mov
cmpsb
shll
ret
inc
shlb
lret
mov
dec
fwait
nop
or
add
lea
rol
jmp
rcrl
scas
pop
scas
ret
inc
aam
dec
cmpsb
cmpsb
xor
lret
fs
jl
testb
pop
add
jmp
fists
pop
mov
push
repnz
cmp
mov
xadd
add
not
and
mov
and
or
add
jmp
pmuludq
ret
pop
cmp
outsb
pop
rolb
rolb
sahf
adc
xchg
jb
sub
fsubr
popf
out
jbe
pop
clc
jmp
add
jmp
outsl
add
mov
jg
and
mov
inc
mov
pop
iret
pop
cmp
jle
inc
and
mov
mov
not
and
or
add
mov
lea
jmp
add
add
and
daa
or
sbb
adc
inc
ror
jmp
inc
xlat
mov
out
lcall
mov
jmp
add
jmp
rol
jmp
sahf
mov
jmp
lea
mov
sbb
dec
mov
push
xor
sub
sbb
mov
xlat
and
mov
and
or
add
mov
lea
jmp
lea
jmp
xchg
setg
or
fadds
mov
cmpsl
pop
xchg
jb
or
add
jmp
mov
cmpsl
divb
jl
inc
rcll
sub
xchg
pop
xchg
test
and
mov
and
or
jmp
popa
out
adc
pop
in
test
mov
jmp
scas
stos
imul
cld
jmp
ret
mov
movsb
pop
fimuls
sbb
add
daa
ss
inc
mov
out
lret
lret
xlat
mov
and
mov
not
and
or
add
jmp
gs
adc
or
jl
jne
ja
add
sub
jg
shr
outsl
lret
add
xor
scas
aas
pop
test
stos
shlw
in
cltd
push
and
or
add
mov
lea
ror
jmp
pushf
add
jmp
mov
scas
lret
mov
mov
sbb
flds
add
mov
andl
sti
push
stc
insl
std
test
pop
inc
sbb
fnstenv
fdivs
fiaddl
pop
enter
inc
cmp
decl
jp
decl
pop
add
in
jmp
ret
push
lret
cmc
fimuls
mov
add
xor
add
and
and
insl
rol
add
xor
jmp
flds
mov
sub
jmp
jge
jnp
jno
jecxz
insl
hlt
push
cld
adc
dec
xor
jmp
sbb
cmp
std
jmp
fs
push
push
les
mov
xchg
sub
stos
mov
jmp
xor
and
imul
pop
hlt
jmp
xchg
xchg
repz
out
inc
and
cmp
pop
repnz
es
cs
pop
add
jmp
or
sbb
aam
lret
xor
jecxz
or
pop
jp
jg
int3
inc
and
and
mov
filds
pop
aam
mov
xor
or
iret
mov
xor
jmp
jp
shlb
fiaddl
pop
mov
ljmp
rol
jmp
jecxz
stc
cwtl
imul
out
lahf
pop
xchg
adc
jge
add
jmp
dec
ret
ret
cld
xchg
cmc
add
sarb
jmp
mov
xchg
repnz
inc
repz
cmc
imul
insl
fidivrl
mov
lea
rol
add
mov
and
mov
not
jmp
xor
xor
xor
adc
cmpb
xor
add
lea
rol
add
mov
xor
jmp
addl
or
mov
add
mov
mov
jmp
ljmp
lahf
push
or
add
sahf
pop
sbbl
jmp
dec
das
fidivl
fdivrp
xor
jmp
mov
jmp
mov
shlb
jmp
mov
mov
sbb
xchg
out
jae
xchg
lds
mov
cmpsb
idivb
rol
add
not
and
mov
and
or
add
jmp
rol
jmp
outsl
in
jge
negl
push
mov
jge
je
jnp
cmp
ret
call
call
jle
sub
out
jg
jmp
enter
add
das
test
add
lods
add
xor
jmp
cmp
mov
jmp
loopne
sti
sahf
insl
andl
pop
inc
and
cmp
jb
xchg
loopne
shll
add
lea
ror
add
jmp
das
movsl
xor
iret
pop
cmp
and
and
jmp
out
push
lea
lea
jmp
out
lcall
test
ret
ret
sbb
aad
stc
add
lea
rol
add
mov
xor
jmp
add
adc
sti
xor
jmp
xor
das
dec
mov
in
mov
mov
stc
or
push
hlt
jmp
cld
insb
loop
je
jo
ja
loope
jl
js
ljmp
not
and
mov
and
or
add
lea
jmp
cmp
xor
push
fmuls
aam
rol
add
mov
xor
jmp
jecxz
in
jg
nop
cmp
flds
push
in
ret
add
and
cwtl
adc
pop
lock
or
punpckhdq
cmp
or
push
les
xor
dec
in
and
add
shr
into
lret
mov
cmp
mov
mov
mov
and
rolb
xor
add
lea
mov
ror
add
jmp
push
mov
lds
cli
jmp
aam
lds
dec
mov
addr16
ja
clc
outsb
or
push
mov
lea
rol
jmp
repz
lea
rolb
shlb
mov
jmp
add
jmp
ror
jmp
addb
cwtl
push
imul
jmp
lea
rol
add
mov
xor
xor
jmp
mov
fdivs
fbstp
fldpi
mov
inc
mov
fs
lea
jmp
out
sbb
add
add
push
lret
sti
orl
adc
mov
repnz
adc
not
and
mov
and
or
add
mov
lea
jmp
mov
pushf
xor
xor
out
mov
enter
add
add
roll
inc
mov
add
mov
mov
and
mov
aaa
ret
add
mov
not
or
xor
add
lea
jmp
pop
int3
inc
and
mov
and
add
mov
not
or
jmp
cmp
punpckhwd
popa
add
xor
test
pop
test
addl
shr
pop
fmuls
mov
mov
mov
push
pop
ret
ret
pop
add
mov
not
or
xor
add
lea
jmp
not
jmp
mov
repz
pushf
sti
push
incb
cmp
mov
lea
jmp
lds
mov
mov
scas
jns
pop
into
test
gs
mov
jmp
imul
or
cmp
fldl2t
fwait
add
add
imul
insl
addl
xchg
sbb
sub
cld
rol
add
mov
not
or
xor
add
lea
jmp
cmpsb
adc
rorl
shll
flds
pop
fmull
out
inc
lsl
jmp
lret
mov
cmpsb
subl
mov
not
or
jmp
pop
aad
sub
rorl
push
repnz
out
mov
scas
lret
or
dec
idivl
jp
data16
push
cld
dec
sub
sub
adc
cld
mov
rorl
sti
xor
add
lea
ror
jmp
jbe
jne
out
inc
ljmp
lcall
stos
add
pusha
pop
repnz
dec
stos
icebp
add
jmp
add
jmp
sub
mov
mov
roll
shll
scas
xor
adc
enter
rorl
lret
xor
add
lea
jmp
or
filds
mov
enter
sbb
push
add
sub
jmp
addr16
outsb
or
jg
fwait
or
push
les
mov
push
mov
lea
mov
not
jmp
xor
jmp
xchg
xchg
repz
out
lret
pop
ds
ret
mov
notb
shr
scas
pop
adcl
dec
fdivrl
nop
testl
cmp
xor
mov
dec
jle
outsl
rol
add
mov
not
or
xor
jmp
in
loop
je
in
fs
popf
insb
lahf
sbb
lea
rol
add
jmp
pop
xlat
inc
and
js
xor
rolb
rclb
aaa
dec
aas
mov
pop
mov
jmp
cmp
ret
pop
rolb
shlb
inc
shll
lahf
cli
or
fsts
mov
not
or
xor
add
lea
rol
jmp
push
lret
pop
ds
mov
xchg
ret
add
jmp
xor
jmp
mov
mov
sbb
cmc
pop
xchg
and
movsl
push
ret
ret
out
not
or
xor
add
lea
rol
mov
jmp
flds
mov
or
lret
scas
pop
mov
xchg
adc
cmp
lcall
out
jno
add
or
lods
mov
movl
jmp
lods
cs
mov
push
aam
sub
xchg
ret
sub
xor
xchg
ja
inc
xlat
mov
mov
lock
bound
cmpsb
push
and
rorl
shr
decl
popf
add
jmp
adc
js
icebp
cmp
shr
sbb
add
scas
aas
pop
test
sbb
adc
xchg
jnp
push
lret
scas
mov
rorl
sti
xor
add
lea
ror
add
jmp
loop
loop
je
std
sti
mov
xchg
inc
mov
decl
test
jne
leave
ret
jmp
ror
lods
xchg
pop
icebp
push
jmp
pop
jmp
and
js
push
cld
les
mov
aam
dec
clc
sahf
mov
inc
jmp
lcall
lods
cmp
and
lods
cmp
mov
in
pop
leave
pop
cmp
js
sub
jmp
xlat
inc
mov
jmp
adc
and
jmp
les
mov
lcall
or
scas
leave
cmp
and
imul
pop
mov
lea
pop
jmp
movb
inc
jmp
xchg
lcall
es
and
daa
mov
jns
imul
rolb
sub
add
add
jmp
push
jg
jmp
mov
mov
loope
enter
add
mov
mov
add
mov
mov
jmp
cmp
push
lds
mov
fs
pusha
test
lea
sahf
stc
or
sbb
lods
mov
add
jbe
pop
lret
scas
pop
mov
inc
mov
mov
dec
fidivrs
xorl
jo
loop
xor
in
lcall
mov
ret
push
rclb
jbe
rolb
sarb
outsl
lcall
push
popf
mov
add
add
jmp
aam
fstpt
imul
mov
jecxz
push
in
lret
sbb
jmp
aam
xlat
mov
call
cltd
fs
ljmp
stc
in
or
in
insl
ja
rol
add
or
xor
add
mov
lea
jmp
repz
lahf
push
xchg
or
rclb
movzbl
add
cmp
je
jmp
pushf
cmpsl
mov
jmp
inc
fdivl
in
fbld
xchg
gs
fisubs
xchg
mov
popa
jmp
hlt
jmp
popl
jmp
and
dec
int3
inc
and
jb
in
pop
adc
add
ret
jne
addl
mov
jmp
out
testl
push
aam
sub
aaa
push
mov
fwait
jbe
xor
mov
xchg
test
cwtl
add
add
inc
add
add
sbb
xchg
gs
fisttpl
fnstsw
idivb
mov
xchg
es
loope
popa
mov
ret
push
outsb
js
mov
loopne
jmp
xchg
dec
mov
jmp
rorl
push
repnz
lods
pop
mov
fwait
or
pop
jl
addr16
pop
insl
add
mov
mov
mov
mov
shr
mov
lea
jmp
mov
test
mov
pop
ds
xchg
int
arpl
jmp
sbb
dec
fisttps
fsts
dec
frstor
fildll
popf
xor
cmp
jae
incl
jmp
lret
xchg
addr16
shr
jmp
sbbl
ljmp
aaa
pop
jmp
cmp
jmp
jge
je
out
or
push
les
lahf
cli
or
jge
ljmp
sub
cltd
roll
add
mov
lock
in
add
jmp
or
popf
sbb
push
sub
jmp
cmpsl
and
jge
je
insl
push
test
jp
jp
imul
or
xor
add
lea
mov
add
not
jmp
out
outsl
lcall
dec
sub
adc
jb
xchg
jno
lods
sub
dec
testb
add
pop
pop
add
jmp
clc
jb
xchg
dec
rclb
and
jle
call
es
jbe
jne
fs
je
mov
push
lea
call
pop
jmp
mov
or
gs
mov
or
decl
ja
outsb
or
sub
lds
iret
psrld
xchg
addr16
dec
das
fisubrl
arpl
sti
jmp
xchg
mov
sbb
scas
add
scas
xchg
jecxz
dec
andl
jmp
ds
pop
test
sbb
ja
xorb
inc
shll
or
add
lea
ror
add
mov
jmp
arpl
mov
ret
jmp
mov
xchg
aas
pushf
jmp
xor
pop
sub
add
jmp
dec
aam
sub
aam
pop
rcll
sub
xchg
jmp
adc
gs
imul
and
xchg
mov
shl
jmp
jmp
cltd
push
push
popf
pushl
mov
jmp
jge
je
pusha
ds
xchg
xchg
icebp
add
fistpl
xchg
addr16
movsl
jmp
jo
imul
adc
add
add
dec
sub
cmp
repz
fsubr
out
add
lcall
aas
jmp
push
adc
jmp
out
std
test
jle
add
push
mov
xchg
lock
movsb
sub
pop
lea
lock
jmp
ficompl
int
and
add
cs
sbb
aad
andl
pop
repnz
pop
into
pop
cmp
jg
lods
and
add
sar
inc
adc
lret
test
lock
mov
jmp
loope
in
jg
adc
jne
jmp
pop
nop
push
popa
nop
cmp
add
jmp
jne
ja
loope
pop
lret
lret
lods
lret
inc
test
or
lcall
test
jge
outsb
jo
cmp
jmp
addl
jmp
movzbl
jmp
push
into
pop
cmp
cmp
mov
js
popa
sub
jl
popa
mov
ljmp
or
jmp
imull
cltd
push
xchg
bound
arpl
fstps
test
decl
push
lea
jmp
test
mov
or
out
mov
popl
jmp
divb
cmpl
adcl
test
leave
pop
cmp
aaa
sbb
je
popa
mov
jmp
cld
jns
mov
xchg
pop
jmp
fucomi
pop
fdivp
lea
jmp
cmc
ja
xorb
and
and
ret
ss
insb
push
mov
push
push
push
lea
push
jmp
arpl
jle
call
mov
xchg
repz
std
stc
jne
mov
inc
mov
jmp
call
jmp
adc
and
ds
test
imul
adc
dec
push
xchg
or
sub
jmp
push
fwait
or
xor
lods
cltd
or
pop
scas
fidivs
daa
pop
adc
adc
xchg
and
mov
gs
cmp
ljmp
jmp
test
shll
jns
jmp
out
je
lea
aam
mov
mov
shr
push
pop
and
pop
cmp
jb
push
pop
jmp
stc
notl
inc
out
ret
jmp
in
je
lea
sbb
xor
xchg
or
push
shrl
call
dec
rclb
mov
or
cmpsb
dec
lret
pop
jmp
jge
xchg
cmc
add
leave
dec
frstor
mov
in
loope
pop
push
pop
mov
call
push
mov
call
add
jmp
jecxz
hlt
xchg
outsb
xchg
adc
dec
in
decl
pop
ds
pop
xlat
inc
and
cmp
jp
xchg
jmp
pop
lea
popf
jmp
daa
mov
jmp
arpl
js
ljmp
dec
mov
xchg
repnz
mov
mov
inc
clc
push
push
pop
mov
call
mov
jmp
adc
push
imul
pusha
notb
lcall
rclb
and
jmp
pushl
jmp
test
scas
leave
cmp
outsl
fsubr
mov
insb
loop
je
repnz
insl
ret
int3
stos
rclw
push
sbb
clc
adc
std
pushl
out
adc
addl
add
popf
or
lea
dec
fidivrs
enter
insl
add
add
shr
std
jmp
je
bound
push
mov
jmp
inc
fimull
fidivl
rorb
push
ror
pop
lret
scas
pop
fsubrl
mov
ret
lahf
and
adcl
lock
cmp
cmp
jmp
dec
leave
pop
cmp
and
lods
cmp
add
std
or
pop
push
loopne
rorb
pop
jmp
sub
jge
pushl
and
dec
mov
xchg
jnp
xchg
add
bound
jb
in
stos
movzbl
jmp
xchg
and
popa
jmp
lahf
push
test
push
in
cmp
mov
ljmp
idivb
jecxz
cmp
jne
addl
mov
jmp
in
popl
jmp
outsb
insl
push
jmp
ret
movsb
push
repnz
cmp
adcl
lahf
punpckhdq
jecxz
cld
jae
xchg
jp
jecxz
int3
movl
call
andl
pop
xor
ret
jmp
sub
push
pushf
jmp
aad
shll
popa
add
pop
push
mov
jg
cmp
pop
jmp
ret
lods
pop
cli
mov
pop
add
jmp
add
call
xchg
lret
push
shll
dec
add
xchg
les
sub
jmp
rorl
mov
int3
stos
data16
push
xchg
repz
mov
movsb
cmp
gs
lea
jmp
mov
jmp
mov
jmp
mov
sahf
stc
or
inc
les
int3
and
stos
cmp
dec
ljmp
push
pusha
jmp
dec
int
and
add
fisttpll
sbb
push
imul
fmuls
fsubrs
ret
dec
fidivrs
pushl
mov
jmp
fists
lods
pop
mov
hlt
pop
es
pop
test
rorl
push
adcb
sub
and
idivl
jp
mulb
dec
xor
xor
in
bound
popf
jmp
adc
jmp
call
loope
call
cld
xchg
cmc
add
dec
popf
or
xor
inc
and
jmp
jp
jge
notl
or
push
les
add
js
idiv
mov
jmp
outsl
mulb
push
mov
mov
mov
divb
jmp
push
push
jle
cmpl
shrb
xor
push
dec
fnstcw
xor
push
movsb
dec
mov
dec
cs
fs
mov
ret
insl
repz
cmc
sbb
dec
sub
cmp
insl
std
test
out
mov
roll
add
jne
addl
jmp
lock
mov
cwtl
sbb
aad
shll
xor
mov
jmp
cmp
inc
ret
jmp
add
fwait
pop
xchg
adc
in
cld
fwait
jbe
iret
inc
aad
dec
test
or
andb
sub
jo
jmp
stc
jo
xorl
pop
cli
cmpsb
jbe
popf
scas
cmp
mov
bnd
jnp
in
inc
int
push
push
fs
jmp
and
inc
shlb
pop
aas
lret
scas
insb
add
fs
jmp
jno
jno
jecxz
sbb
loop
loopne
jb
xchg
jmp
scas
push
jmp
mov
mov
aas
scas
lret
mov
xchg
adcb
sbb
cmp
popa
mov
jmp
dec
popf
adc
xor
mov
bound
or
cmp
or
bound
sbb
push
mov
jmp
jns
in
je
int
push
jmp
sbb
scas
xor
mov
jns
maskmovq
idivl
mov
mov
decl
cmp
call
addl
jmp
and
into
and
mov
dec
clc
decl
test
jne
pop
xor
pop
leave
ret
jmp
jl
xchg
cmc
add
inc
rclb
and
movsb
pop
sti
inc
xor
cmp
push
lds
jmp
popf
pop
fmull
jmp
inc
mov
add
jmp
adc
out
loop
je
lock
mov
inc
mov
mov
jmp
ss
xor
push
lds
mov
daa
mov
jmp
gs
cltd
push
test
push
lret
sbb
xchg
push
xor
rol
clc
adc
add
lea
jmp
movb
inc
jmp
mov
sahf
mov
jmp
outsl
loop
pop
loop
insb
loop
je
daa
mov
dec
mov
inc
mov
or
frstor
mov
jmp
insl
pop
sub
jmp
and
push
push
xor
jle
lcall
ljmp
roll
popa
jmp
cmp
push
rclb
rcrb
pop
cltd
out
adc
popa
addb
dec
xchg
popf
pushl
mov
jmp
fidivl
jmp
inc
fdivl
in
adc
or
push
rclb
cmpsb
push
aam
pop
mov
ret
popa
loope
adc
sub
dec
leave
roll
movsb
mov
jmp
xchg
push
test
push
negb
mov
jmp
jge
xchg
testb
and
fwait
and
movsb
cmp
jnp
dec
jmp
or
fisttpll
out
lods
and
inc
outsl
mov
mov
jne
mov
cmp
jae
and
jmp
jmp
pushf
adc
orl
clc
or
popl
jmp
mov
inc
mov
ret
outsb
or
pop
add
cmp
es
mov
push
mov
jmp
sub
jmp
and
mov
dec
mov
mov
add
cmp
push
lret
in
cmpsl
mov
jmp
add
enter
push
mov
jmp
test
xchg
rcll
pop
in
pop
lret
lret
push
test
push
test
and
jmp
scas
cmp
push
test
push
frstor
and
mov
jns
std
cld
popa
mov
jmp
mov
mov
nop
push
popa
nop
pop
xor
inc
push
xchg
mov
jmp
mov
cltd
clc
or
push
fwait
or
jae
inc
mov
test
xor
push
mov
mov
push
mov
jmp
shl
and
jmp
aas
mov
sbb
mov
mov
hlt
cmp
bound
jp
jp
mov
ret
cltd
clc
or
test
xchg
movzbl
add
cmp
je
jmp
pushf
adc
out
inc
sub
add
mov
lea
rol
jmp
push
jo
loop
icebp
repz
cmp
lahf
punpckhdq
lds
fistpll
mov
sub
add
mov
mov
and
mov
not
jmp
fcomps
scas
pop
cld
add
xchg
pcmpgtw
adc
in
out
mov
jmp
mov
jmp
mov
mov
and
es
mulb
pushf
outsl
les
sbb
ret
jne
addl
jmp
push
lret
pop
ds
iret
pop
leave
test
out
xor
stos
lea
pop
in
stos
jl
outsb
lea
jmp
lea
mov
mov
jne
mov
fistl
sbb
pop
clc
movzbl
add
mov
shr
dec
dec
dec
jmp
into
ja
add
jmp
add
iret
por
push
leave
pop
cmp
and
lea
mov
dec
mov
cmp
pop
xchg
mov
rol
add
mov
not
and
mov
and
or
jmp
xchg
adc
in
sbb
cmp
add
mov
mov
not
and
mov
and
or
add
jmp
mov
stos
into
cmp
or
dec
sub
popf
in
ret
jnp
fdivp
shll
pop
cld
or
mov
jmp
xor
test
cmp
mov
mov
icebp
popa
add
sbb
inc
sub
cs
and
fucomip
outsb
cld
fwait
jbe
rorl
dec
mov
mull
icebp
or
lock
jno
lea
ror
add
mov
and
jmp
int3
inc
shll
fs
cmp
mov
add
jmp
stos
and
sub
sbb
pop
jecxz
subl
cmc
jmp
cmp
add
jmp
push
mov
es
and
sub
push
lds
xchg
add
and
mov
jmp
sub
ljmp
sahf
insl
test
cmpsl
aaa
push
mov
mov
or
and
pop
or
mov
xchg
add
jns
xchg
add
jns
outsl
lcall
ljmp
and
jmp
rcrl
data16
mov
inc
mov
push
add
xchg
mov
mov
xor
mov
sub
mov
jmp
dec
int
and
sub
jbe
cmpl
setg
or
mov
and
sti
push
lea
call
andl
pop
pop
push
lea
jmp
decb
and
or
add
mov
lea
jmp
fcoms
cmpsl
push
mov
pop
test
addr16
sbb
mov
inc
mov
pop
ror
jmp
in
stc
cwtl
imul
add
sbb
aad
out
pop
scas
mov
mov
rol
add
mov
mov
not
and
jmp
mov
mov
add
arpl
jl
notb
nop
push
popa
nop
es
aas
cltd
setg
or
shlb
push
cld
mov
and
or
add
mov
lea
jmp
jle
jge
negl
add
and
test
sti
or
add
jmp
in
js
mov
jmp
and
jle
mov
out
pop
mov
jmp
int
lret
scas
pop
mov
jbe
cmpl
adcl
xchg
es
push
cmp
mov
and
mov
jmp
fldl
mov
lds
inc
and
lea
jmp
outsl
or
repz
or
jmp
inc
push
xor
es
jno
jecxz
jmp
clc
lahf
push
lods
sub
test
mov
add
or
testl
jmp
mov
pushf
sti
push
rcrl
or
repnz
mov
and
not
and
jmp
adc
push
xor
inc
mov
jmp
jg
imul
or
cmpb
mov
jmp
xor
xor
pop
rolb
shlb
or
mov
jge
mov
not
and
mov
and
or
mov
add
jmp
out
pusha
notb
loop
je
mov
xchg
sbb
pop
cld
mov
mov
mov
ror
add
and
jmp
into
or
cmp
outsl
cld
xchg
cmc
add
xchg
cli
imul
ds
mov
not
and
or
add
mov
lea
jmp
adc
arpl
testl
cld
and
or
mov
jmp
movsl
jp
xchg
sbb
adc
mov
xchg
daa
adcl
jecxz
in
jg
aam
mov
add
jmp
inc
mov
jmp
pop
enter
outsl
mov
in
icebp
push
lahf
push
adc
call
filds
jge
mov
mov
lea
jmp
or
fmull
add
add
dec
sub
movntq
mov
test
mov
add
mov
notl
mov
and
mov
and
or
jmp
lret
dec
fistpll
xor
dec
js
outsb
or
adc
aad
add
mov
mov
lea
mov
mov
jmp
and
jmp
push
popf
or
cmpsb
xor
scas
push
dec
enter
pop
ficomps
scas
pop
scas
pop
ror
add
jmp
test
mov
jmp
mov
jmp
or
jmp
mov
jmp
dec
ja
sub
inc
hlt
jmp
sbb
pop
inc
and
sub
pxor
mov
jmp
test
notl
jmp
and
jmp
cwtl
sub
fsubp
add
jmp
lea
jmp
orb
decl
out
cmp
inc
int
and
jb
clc
and
or
add
mov
lea
rol
jmp
and
jmp
std
jb
xchg
and
aas
mov
inc
mov
jne
jne
out
pop
lret
inc
clc
jmp
adc
sbb
ret
xor
imul
dec
sub
jo
pusha
notb
sub
adc
clc
ror
add
and
or
add
mov
lea
jmp
add
and
or
add
mov
lea
rol
jmp
rcl
xchg
lea
jmp
fimull
mov
mov
sbb
xchg
fidivrl
sahf
mov
ret
cld
mov
not
and
and
or
add
mov
jmp
das
mov
dec
mov
cli
or
jge
rol
add
not
and
mov
and
or
jmp
stos
lahf
mov
jmp
sub
cli
fs
popf
insb
jmp
sti
imul
jl
pop
lret
scas
pop
xchg
out
mov
xchg
add
jmp
imul
sbb
add
pusha
pop
repnz
ss
inc
mov
push
xchg
fisubrs
mov
mov
rol
add
mov
not
and
mov
jmp
and
dec
iret
pop
cmp
and
push
cld
adc
roll
shll
push
lea
mov
not
and
ror
add
and
jmp
jno
push
mov
inc
mov
rorb
dec
sarl
mov
jmp
insl
add
mov
mov
jmp
or
dec
lret
pop
ds
mov
shlb
mov
sub
not
and
or
add
mov
lea
jmp
popl
nop
testl
cmc
add
test
ret
lret
pop
into
test
and
jmp
not
jmp
add
sbb
pushf
or
dec
lcall
mov
lea
rol
add
and
jmp
test
xchg
push
pop
fmull
mov
inc
mov
add
aaa
mov
nop
or
lea
jmp
sub
xor
test
fdivs
mov
shr
sub
sbb
in
insb
adc
mov
rolb
and
jmp
repz
xorb
cmc
gs
sbb
and
loope
inc
cld
jmp
mov
cmpsl
ret
pop
fimuls
xor
push
add
push
cwtl
call
pushl
xor
inc
lea
call
lea
jmp
mov
inc
lds
iret
and
ss
push
lds
imul
test
inc
cld
jmp
stos
and
push
gs
add
and
xor
ret
adc
das
test
fsubr
xor
jmp
dec
lds
iret
sbb
mov
pop
inc
and
jns
pop
xchg
rol
jmp
ljmp
mov
dec
pop
add
jmp
xor
cmp
sbb
xchg
loop
pop
loop
daa
mov
inc
mov
mov
inc
cld
mov
not
and
and
or
add
mov
lea
jmp
pop
test
add
mov
lea
rol
jmp
and
jmp
daa
mov
inc
mov
adc
pop
jb
sub
mov
inc
mov
sub
dec
add
jmp
data16
insb
or
in
xchg
push
pushf
sti
push
pop
xchg
jb
or
dec
sub
pop
push
cli
mov
fsubr
scas
mov
pushf
sti
push
fistps
jb
in
popf
mov
jmp
cs
cmp
mov
dec
lret
lret
adc
aad
scas
lea
mov
not
and
ror
add
and
jmp
push
aam
sub
dec
scas
not
jmp
or
outsl
xor
or
jmp
mov
jmp
mov
pushf
sti
push
lods
and
cmp
pusha
call
iret
jbe
add
mov
and
mov
not
and
or
add
mov
jmp
add
jmp
lea
jmp
outsb
in
sbb
push
inc
leave
pop
cmp
outsb
push
xchg
jb
pop
aad
and
lea
rol
add
mov
and
jmp
cmp
jmp
inc
cld
xor
ror
add
xor
add
lea
jmp
pop
fisttpl
fnstsw
mov
jmp
insb
or
lret
xor
jne
jne
out
pop
pop
iret
pop
cmp
jle
je
lea
mov
gs
cmp
sarl
xchg
sbb
inc
push
les
int3
jnp
pop
leave
test
decb
add
mov
xor
xor
add
lea
rol
jmp
pusha
push
rol
jmp
lock
lahf
push
mov
mov
add
std
or
and
xor
xor
xor
add
lea
jmp
add
jmp
lcall
jno
pop
shr
ror
jmp
mov
mov
dec
fdivrs
in
jle
cmp
jbe
inc
xor
ret
jbe
decl
mov
js
insb
push
inc
and
and
jge
je
push
xchg
push
test
push
jmp
push
adc
shlb
lock
add
mov
lea
rol
jmp
mov
in
cld
aas
lea
jmp
bound
imul
and
lret
pop
ds
xlat
pop
repnz
xchg
fdivp
adcl
test
xor
mov
xor
jmp
xor
jmp
add
jmp
lods
and
repz
cmc
daa
push
xor
jmp
out
popa
icebp
nop
arpl
call
testb
or
add
mov
lea
rol
add
jmp
stos
cmp
iret
sahf
sbb
xor
add
lea
rol
add
mov
xor
jmp
or
test
jmp
xchg
ror
jmp
and
mov
cltd
inc
rolb
shlb
fcom
fdivrl
lea
rol
add
xor
mov
xor
jmp
xor
jmp
stos
cmp
mov
in
xor
inc
xlat
mov
call
out
je
add
jmp
movsb
cmp
push
sbb
jbe
loopne
lret
pop
lret
scas
pop
fcompl
test
jo
mov
jmp
cmp
icebp
popa
pop
outsb
add
jmp
push
fisttpl
fstl
mov
aas
inc
mov
ret
xor
add
pop
fisttpll
out
sbb
xor
dec
mov
pop
sbb
add
mov
jmp
dec
lea
jmp
outsb
call
pop
and
test
mov
test
sahf
insl
sahf
mov
cltd
clc
or
test
je
mov
inc
in
pop
cld
lea
mov
xor
rol
jmp
cmp
add
xor
mov
xor
add
mov
jmp
jne
insb
or
in
xor
dec
fstpt
enter
inc
lea
jmp
pop
nop
push
popa
nop
inc
xchg
push
mov
es
sbb
setg
or
lock
add
mov
lea
rol
jmp
popf
push
pushf
sti
push
mov
arpl
mov
fstpt
enter
add
add
sbb
and
mov
js
ds
aaa
push
mov
inc
mov
mov
jmp
push
adc
fildll
fdivr
data16
xchg
outsb
jmp
shlb
repnz
lea
rol
add
mov
jmp
xor
jmp
aad
mov
jmp
imul
jmp
sbb
adc
push
fstps
test
nop
ss
jo
loop
dec
mov
xor
add
xor
lea
rol
add
jmp
rcll
mov
lcall
jecxz
jne
out
imul
add
lea
jmp
lahf
jnp
xchg
or
lcall
add
add
sbb
int
add
test
xchg
icebp
add
fstl
lods
pop
scas
inc
iret
pop
cmp
xor
lea
rol
add
and
mov
not
and
jmp
insl
lods
lds
gs
lods
add
mov
not
or
xor
jmp
loope
lcall
dec
sub
sub
mov
out
hlt
add
sub
jmp
add
jmp
es
aas
pop
test
fsubrs
jmp
add
out
jl
testb
add
jmp
rol
jmp
fmuls
mov
shlb
ret
std
rolb
dec
std
cwtl
add
jmp
mov
jmp
cmc
lock
lret
movsl
aaa
cmpsl
ret
mov
mov
and
popf
pop
stos
cld
xor
jmp
adc
cld
jl
shr
pop
add
add
add
adc
addr16
insb
or
out
mov
mov
add
lea
rol
add
mov
jmp
icebp
push
sbb
icebp
not
jmp
xor
jmp
cmp
sub
test
cmp
cli
js
mov
das
lods
and
pop
imul
sbb
add
and
leave
mov
cmp
or
jmp
dec
into
pop
cmp
xor
push
shlb
out
les
jae
in
clc
andb
xchg
add
jmp
or
adc
or
cmpsb
push
popa
ljmp
pop
cmp
xor
fiaddl
pop
rorb
stos
rol
jmp
rorl
dec
mov
or
dec
or
movsl
add
add
inc
rol
jmp
add
jmp
fcoml
cmpsl
push
cmc
mov
std
or
pop
mov
js
dec
decl
scas
jmp
shll
fadds
pop
les
sub
or
repnz
jmp
adc
pop
add
mov
not
or
xor
add
lea
jmp
fucomip
pop
cli
add
mov
not
or
xor
jmp
xor
cld
insl
std
test
xor
jge
out
jmp
cmpsl
shrb
add
jmp
int3
pop
repnz
fs
outsl
lcall
fnstcw
add
cmp
jns
rorb
shll
fadds
pop
call
int3
or
jmp
mov
mov
es
fs
jmp
mov
mov
das
mov
ret
aad
dec
scas
jl
jp
in
push
push
sahf
rol
jmp
inc
fimull
fidivl
inc
fmuls
fcomps
mov
inc
mov
mov
push
add
ljmp
lret
pop
ds
jo
add
sbb
repnz
mov
not
and
ror
add
and
or
add
mov
jmp
jae
pusha
pop
repnz
or
repnz
not
or
xor
add
lea
jmp
add
jmp
lods
sub
sti
imul
sub
mov
in
notb
scas
rol
jmp
lret
not
jmp
jb
outsb
or
or
and
aaa
outsb
out
adc
or
pop
into
test
fldenv
push
or
jmp
loopne
cld
fwait
jbe
xor
add
add
mov
not
or
xor
add
lea
rol
jmp
cmp
cmp
mov
push
lret
cmc
mov
mov
das
pushf
inc
xor
jmp
jecxz
loopne
jb
inc
jne
mov
sbb
mov
mov
xchg
adc
je
ds
or
xor
add
lea
rol
add
jmp
movsw
ror
jmp
and
dec
rolb
rclb
sahf
or
in
bound
pop
aam
cmpsb
inc
rolb
jmp
pop
int3
stos
data16
mov
mov
mov
lcall
fiadds
pop
in
test
rcrl
test
enter
mov
jmp
ret
mov
mov
mov
jmp
repz
jmp
add
jmp
dec
lret
lret
fdivl
in
enter
dec
mov
sub
add
jmp
jl
push
lock
daa
push
roll
shll
cmp
or
ljmp
push
rorb
cmp
int
cltd
or
push
mov
not
jmp
add
shr
xchg
xchg
sbb
aad
lea
jmp
jge
imul
pop
cli
jno
xorb
inc
shll
add
mov
not
jmp
into
inc
xlat
mov
fwait
orl
sub
mov
jmp
out
pop
insl
ror
jmp
lahf
adc
xchg
add
daa
adc
pop
leave
pop
cmp
js
mov
not
or
xor
add
lea
rol
jmp
dec
mov
jmp
push
call
into
pop
cmp
jg
cmc
gs
dec
mov
sahf
push
lahf
push
sar
inc
add
mov
mov
add
mov
jmp
mov
aad
sbbl
les
inc
es
pop
rclb
and
and
inc
or
pop
leave
jmp
loop
call
mov
call
stc
sub
imul
add
not
rol
add
or
xor
add
mov
lea
jmp
ficompl
test
inc
and
ss
jns
mov
mov
mov
pop
jmp
xor
ret
jmp
in
jge
push
jmp
pop
jmp
popf
sbb
lds
iret
sbb
inc
es
xor
jmp
add
mov
and
or
add
mov
lea
jmp
jge
gs
push
cs
cmp
dec
push
mov
jmp
iret
inc
aad
dec
test
mov
cmp
jnp
arpl
xchg
roll
roll
pushl
jmp
inc
pusha
jmp
nop
sbb
shll
xchg
mov
pop
stc
cmpsl
cmp
fsub
jmp
cmpsb
cmp
shr
daa
mov
mov
mov
andb
sub
jmp
aaa
movsl
xor
in
bound
mov
add
jmp
push
lret
pop
ds
inc
rolb
sarb
lahf
punpckhdq
dec
mov
cmp
jmp
aas
test
jmp
mov
sti
and
mov
shl
imul
je
jmp
outsl
mull
icebp
js
movzbl
jmp
jl
enter
push
int
and
push
add
adc
cmp
into
add
add
jne
addl
mov
jmp
test
fwait
decb
repnz
lock
jmp
cmc
je
lea
insb
loop
je
cwtl
sbb
mov
jmp
add
push
jno
jne
xor
pop
lret
scas
pop
test
dec
push
movsl
pop
test
adc
adc
test
jmp
rolb
add
jmp
xchg
mov
jmp
addr16
jmp
ficoml
mov
cmp
dec
fists
mov
lcall
jmp
pop
test
push
jmp
sub
jmp
or
adc
push
jmp
test
repz
into
mov
sar
inc
adc
or
jnp
inc
pop
jmp
adc
push
push
xor
data16
movsb
ret
ds
mov
cltd
clc
shr
test
add
mov
test
je
push
mov
mov
jmp
mov
jmp
and
and
add
inc
sub
je
movsl
xor
xor
aas
jno
dec
jmp
mov
mov
and
sbb
jmp
xor
test
jmp
mov
cli
mov
ret
cmp
xchg
sbb
shr
lea
and
cmp
jae
incl
jmp
sbb
lcall
jle
mov
loop
jmp
scas
pop
adc
jmp
mov
enter
loopne
stc
dec
int
and
xor
and
cmp
jne
xor
lea
movzbl
movzbl
jmp
and
out
or
pop
decl
or
movzbl
shl
or
jmp
mov
fucompp
inc
add
add
mov
gs
inc
iret
dec
fnstcw
and
pop
loopne
sub
loop
jmp
outsl
jmp
push
in
sbb
jb
in
lods
sub
movsb
ret
ds
jmp
sbb
test
lcall
cmpsb
pushl
mov
sub
arpl
xchg
les
pop
cmp
jge
scas
aas
pop
test
cmp
jmp
fists
cmpsb
push
in
cmp
mov
out
cs
inc
xlat
inc
and
jbe
loopne
adc
push
cmp
mov
mov
sbb
shr
sar
pushl
shr
jmp
mov
dec
mov
imul
jmp
add
add
jmp
xchg
or
jecxz
out
mov
dec
xlat
inc
and
xor
mov
push
xor
inc
and
popf
pushl
jmp
xchg
cmp
lock
jmp
inc
or
pop
add
pop
ret
ret
mov
gs
adc
xor
sbb
add
add
scas
aas
pop
test
mov
xchg
adc
mov
rolb
add
stc
adc
addb
or
dec
pushl
inc
nop
cmp
jne
addl
jmp
mov
cmpsb
push
aam
sub
lret
mov
ljmp
add
jmp
jg
imul
pop
aas
lret
mov
mov
rcl
pusha
popa
mov
ret
fwait
adc
cld
xchg
cmc
add
pusha
out
jl
notb
adc
mov
jmp
rorb
push
orl
pusha
xchg
ss
test
jge
cmp
add
call
cltd
roll
add
cmp
cmp
cli
push
inc
popa
add
adc
cli
push
dec
stos
jmp
and
popl
jmp
mov
pusha
add
jmp
sub
jg
jg
jmp
std
or
xor
sbb
cmp
cmp
jmp
rolb
add
jmp
rcll
sti
mov
xchg
adc
mov
and
jmp
cmp
and
je
add
ret
add
movl
jmp
sbbl
jmp
add
jnp
mov
andl
jmp
js
pop
xchg
scas
sub
jmp
xchg
jmp
xchg
das
movsl
loope
popf
mov
ficompl
jmp
or
dec
or
add
pop
jmp
jb
xchg
add
jmp
jae
insb
or
mov
popf
jmp
cmc
inc
fcomip
call
jmp
mov
mov
das
fwait
mov
push
pushf
jmp
int
int3
stos
iretw
lods
aad
inc
adc
add
add
jmp
lock
mov
jmp
int3
popf
adc
jmp
sub
popf
jmp
inc
aad
sub
insb
xchg
cltd
js
jmp
int3
popf
jmp
push
imul
xor
add
add
sub
add
add
jmp
aam
shlb
enter
pushl
jmp
sbb
int3
popf
loopne
cmpl
push
add
mov
xchg
js
jmp
mov
mov
aas
call
jmp
mov
nop
jg
cmp
jmp
movzbl
jmp
imul
sub
call
jmp
ljmp
ret
mov
ret
aad
sbb
jne
addl
mov
jmp
popa
cli
push
in
add
jmp
divb
sub
xor
int3
popf
rcrl
or
add
shll
pop
mov
popa
sbb
sub
jo
mov
and
jmp
loop
mov
jmp
cmc
insb
loop
je
cmp
dec
inc
loope
sub
jmp
jmp
pop
fistpl
mov
jmp
mov
add
add
jmp
lock
cld
fwait
jbe
movsb
stos
cmp
xchg
popl
lea
jmp
mov
add
add
jmp
mov
test
in
mov
jmp
jo
mov
jmp
int3
popf
add
out
cltd
pop
lret
nop
pusha
jmp
jecxz
notl
jmp
bound
mov
jmp
int3
popf
imul
in
iret
adc
add
mov
or
inc
lock
in
pop
je
jmp
jge
xchg
testb
mov
jmp
sub
jmp
call
jmp
and
cmp
dec
mov
fidivs
call
jmp
popa
in
sbb
adc
inc
mov
pop
int3
popf
rorb
dec
movsb
mov
mov
add
ret
jge
shl
or
movzbl
shl
or
movzbl
shl
jmp
add
jp
mov
rolb
call
jmp
and
pop
inc
and
sub
jmp
ret
int3
popf
xchg
adc
in
sbb
enter
pop
add
pop
roll
shll
xchg
repnz
jmp
xchg
repz
add
add
jmp
ds
inc
mov
fldenv
push
call
pop
xor
lea
push
movzbl
jmp
loopne
test
mov
jmp
call
pushf
cmpsl
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
mov
test
mov
inc
mov
push
shr
call
arpl
sub
call
jmp
or
gs
or
dec
jne
pop
leave
ret
jmp
test
sub
jmp
je
outsl
or
mov
and
jmp
pushl
jmp
call
jmp
sbb
jg
adc
cld
decl
repz
sbb
inc
pop
insb
popf
jmp
mov
jmp
or
popf
or
andl
cmpl
xor
mov
jmp
call
jmp
dec
imul
pusha
jmp
mov
lea
inc
and
jns
cmpsb
xor
scas
sbb
scas
cmp
mov
inc
pop
jb
lea
lea
call
push
lea
jmp
sub
lock
jo
mov
and
jmp
notb
xchg
aad
out
adcl
pop
leave
test
mov
adcl
test
lret
cmp
jmp
enter
pop
and
push
mov
lahf
cli
or
addb
lock
movsl
popa
mov
ret
push
pop
mov
addl
mov
movzbl
jmp
and
cmp
inc
xchg
push
test
push
sti
dec
int3
inc
and
pop
jb
pop
outsb
add
jmp
je
jmp
cli
jle
mov
loope
clc
or
push
dec
int3
mov
jmp
cmp
jmp
push
fimull
fidivrl
mov
into
loop
stc
cwtl
imul
or
push
fimuls
inc
jg
add
and
repnz
pop
repnz
test
xchg
push
pop
jmp
call
int3
jnp
jle
call
popl
jmp
jle
jl
testb
mov
xchg
add
and
data16
call
jmp
mov
aad
lea
mov
cmp
cmpsl
or
ljmp
jle
pop
cmpw
push
mov
mov
jmp
ss
inc
mov
test
mov
and
js
popa
dec
add
mov
jmp
in
jmp
inc
shlb
inc
jmp
inc
jmp
jp
outsb
or
xor
pop
mov
cwtl
decl
loop
fcmovnb
jecxz
outsl
popa
mov
jmp
push
fisttpl
fnstsw
insb
ljmp
xlat
mov
cwtl
aas
mov
mov
je
jmp
roll
movsb
dec
je
jns
jo
mov
jmp
loopne
push
inc
jmp
das
stos
cmp
pop
jb
outsl
or
in
test
jge
push
lea
jns
add
cld
mov
push
pop
cmp
jl
jmp
xor
push
aam
leave
test
lea
popa
mov
ret
scas
lret
sub
add
add
push
mov
jmp
movsl
das
mov
mov
inc
mov
and
addr16
movsb
mov
and
cmp
jne
addl
jmp
push
loopne
jmp
xchg
in
sbb
fisttpl
mov
ret
std
adc
imull
mov
mov
add
cmp
je
popa
jmp
int
fs
jmp
xor
bound
add
setg
push
push
xchg
add
std
or
imul
rorl
dec
mov
popl
jmp
xchg
add
mov
mov
roll
shll
inc
xor
inc
or
andb
sub
jo
jmp
in
in
dec
jmp
sbb
sbb
cmp
pop
lods
inc
jo
jl
divb
pop
into
test
js
dec
jmp
cmp
jmp
xchg
std
or
stc
jp
jp
addb
icebp
add
jno
add
adc
inc
inc
test
jne
jmp
fstps
xchg
addr16
popa
out
adc
cmp
jb
in
xor
adc
cmp
add
add
xor
cmp
stc
in
data16
xchg
outsb
mov
mov
enter
mov
dec
mov
pushf
outsl
lret
jo
loop
or
jmp
outsl
loope
adc
and
inc
and
ja
mov
inc
mov
mov
mov
das
test
mov
add
add
jmp
push
push
xor
jg
enter
popa
out
cmpw
jne
jmp
push
xchg
jecxz
jmp
or
mov
inc
mov
inc
xlat
inc
and
push
xchg
xor
xlat
imul
jmp
and
dec
xor
fiadds
dec
hlt
insl
std
test
mov
sub
cmp
sub
jmp
out
in
je
insl
mov
mov
xlat
inc
and
pop
jl
jne
dec
out
jmp
mov
leave
test
lods
jmp
push
aad
sub
xor
jecxz
idivb
stc
xchg
jmp
pushl
jmp
or
enter
push
addb
shlb
pop
scas
ret
rolb
mov
popf
pushl
jmp
adc
jae
js
mov
jmp
pop
aad
jmp
imul
sbb
push
inc
roll
aad
xchg
sbb
xchg
add
ja
dec
xchg
mov
std
inc
dec
fidivrs
sub
mov
push
cmpl
call
outsl
mov
jmp
bnd
mov
adc
inc
rclb
push
in
and
lret
inc
or
sub
pop
sbb
add
popf
add
add
imul
dec
mov
fwait
adcb
jecxz
scas
lock
loopne
call
test
lcall
mov
mov
xchg
stos
popa
jmp
add
cmp
and
jmp
fimuls
jne
jmp
test
add
add
adc
add
hlt
outsb
cld
fwait
jbe
fiaddl
mov
lods
sbb
jl
mov
jmp
and
sahf
mov
mov
mov
jmp
cmp
jmp
cmpsb
cmp
jae
arpl
cmc
je
or
push
mov
popa
sbb
jmp
fcompl
fld
sar
inc
adc
popf
addl
jmp
or
mov
pushf
sti
push
fsubl
xchg
gs
cmp
addb
rorb
test
lcall
jmp
lods
sub
mov
ret
mov
clc
mov
outsb
je
popa
mov
jmp
sub
dec
roll
aad
sub
add
jmp
dec
into
pop
cmp
ja,pt
xchg
testb
arpl
test
jmp
lea
jmp
xor
sarl
push
jmp
mov
test
cmp
ds
inc
mov
or
adc
push
fwait
adc
leave
orl
call
es
mov
push
jmp
in
inc
dec
mov
jmp
sbb
loope
loope
jae
leave
pop
enter
or
xor
adc
inc
inc
cmpw
jne
jmp
cmp
out
jmp
pop
mov
xchg
aas
add
push
cmc
call
inc
fidivrl
sub
adc
push
addps
out
adc
std
dec
jae
je
out
dec
test
mov
inc
jp
out
pop
adc
in
sbb
pop
int3
stos
data16
idiv
js
jmp
sahf
popf
cmpsb
sub
popf
pushl
mov
jmp
or
jmp
fs
push
add
mov
mov
jmp
neg
test
inc
inc
shll
lods
mov
mov
fstps
mov
xchg
cmovo
cmp
lcall
push
imul
aas
pop
test
sub
sub
jecxz
popa
icebp
nop
arpl
or
andb
sub
jmp
or
add
cmp
mov
aas
scas
lret
jmp
mov
xor
jno
sar
inc
adc
pushl
xchg
adcl
adc
adc
pop
sub
jmp
and
jmp
in
adcl
test
push
mov
popl
stos
mov
mov
es
pusha
jle
xor
jmp
test
xchg
adc
xor
fldcw
jmp
lock
adc
cmp
jmp
inc
fdivl
in
imulb
test
out
out
mov
xchg
lods
sbb
mov
movzbl
sub
je
jmp
sbbb
test
dec
add
add
dec
sub
adc
add
loop
icebp
nop
arpl
add
jmp
push
sub
stos
mov
jmp
inc
jmp
cwtl
push
mov
fdivs
add
daa
fistpl
xchg
addr16
add
mov
mov
mov
jmp
mov
lods
lret
inc
mov
test
jmp
clc
sbb
sub
add
add
fwait
or
jns
loope
adc
add
xorb
inc
add
cmp
je
popa
mov
jmp
insl
push
sahf
daa
sbb
shr
add
add
insb
or
mov
cs
ret
jmp
in
clc
lahf
push
rorb
xchg
idivl
jp
dec
fldt
cmp
jne
jmp
scas
inc
shll
push
jae
xchg
sbb
incl
add
mov
movzbl
jmp
xchg
add
std
or
mov
iret
xchg
jne
jmp
mov
mov
es
popa
icebp
nop
arpl
lcall
test
pop
test
jp
jbe
loopne
mov
jmp
iret
push
lret
mov
repnz
decl
xchg
add
std
insl
hlt
pop
in
xor
push
push
in
je
xor
jmp
push
iret
pop
cmp
push
lea
push
xchg
sub
add
jmp
fisubs
xchg
mov
stc
stos
sub
pop
scas
mov
xchg
jmp
iret
dec
fistpll
pop
cmp
mov
and
xlat
dec
repz
je
jmp
imul
sbb
push
lods
ror
cli
popf
jmp
pusha
jmp
and
ficoml
mov
cmpsl
ret
imul
cmc
pop
pop
test
jge
or
ret
jmp
imul
mov
mov
andb
sub
jmp
dec
frstor
push
in
dec
push
fmuls
fmuls
in
xchg
shlb
jmp
dec
rclb
add
jae
in
insb
loop
je
ljmp
scas
popa
mov
ret
cwtl
mov
jmp
popa
jmp
jge
arpl
cmc
inc
loopne
test
jmp
add
add
jmp
mov
mov
and
out
mov
mov
and
cltd
roll
add
jne
addl
jmp
arpl
gs
dec
mov
xchg
sub
and
mov
movzbl
add
cmp
je
jmp
add
jne
repnz
jmp
repnz
lcall
inc
lea
jmp
inc
imul
lds
xchg
mov
jge
negl
in
out
adc
push
or
hlt
pushl
hlt
es
repnz
mov
jmp
addb
repnz
insb
in
bound
adc
mov
sub
sub
add
add
mov
jmp
addr16
adc
adc
push
ret
cmpsb
push
test
jno
jecxz
popf
inc
test
jmp
rorb
dec
mov
and
xor
sub
push
or
xchg
loop
sbb
sbb
inc
stos
clc
ja
xorb
fmuls
fdivrs
jo
xorl
ret
and
jmp
adc
push
imul
pop
xchg
repnz
lock
test
je
inc
inc
jmp
call
lds
jmp
dec
lcall
fnstcw
dec
sub
imul
pushl
xchg
lret
jle
call
add
xchg
popf
pushl
jmp
mov
aad
sub
push
jns
mov
xchg
or
rolb
shlb
lds
mov
jmp
jns
ja
loope
add
xor
dec
in
call
ja
xorb
inc
mov
mov
mov
jmp
xchg
std
or
pop
jecxz
push
in
mov
stos
into
cmp
xor
mov
dec
ja
popa
sbb
jmp
sub
push
xchg
pop
xchg
adc
inc
rclb
xor
xor
push
incl
and
dec
mov
scas
lret
sbb
add
enter
sub
dec
ret
jmp
or
lcall
inc
adc
xlat
pop
iret
stos
pop
shlb
add
add
fmuls
lea
ret
jmp
fists
mov
add
jmp
push
in
dec
dec
jge
dec
sub
jmp
insb
insb
or
mov
and
jmp
mov
or
repz
shrb
insl
iret
div
push
xchg
inc
or
stos
int
movl
movl
jmp
lds
mov
push
xor
mov
lds
sbb
outsl
push
mov
push
push
mov
movl
mov
mov
inc
test
jmp
sbb
stos
mov
jmp
pusha
cli
push
roll
shll
ljmp
inc
shll
loopne
push
mov
inc
inc
test
jmp
decl
jmp
insl
icebp
popa
add
jbe
sti
imul
jl
movsb
ret
idivl
hlt
pop
in
push
pop
jmp
sbb
xor
dec
hlt
pop
ret
jmp
sbb
call
mov
xchg
cmc
add
les
mov
mov
pop
sti
xorb
fs
test
jmp
pushf
sbb
popa
icebp
nop
arpl
cmp
ficomps
scas
pop
mov
dec
jmp
push
fimull
fidivrl
stos
sub
push
jmp
leave
jmp
cld
jnp
mov
imul
push
in
dec
xchg
sbb
imul
popl
lea
jmp
cltd
adc
in
sbb
hlt
data16
xchg
outsb
fdivs
call
jmp
inc
popl
lds
dec
dec
fstpt
pop
and
fimull
mov
mov
jmp
add
jmp
mov
mov
cs
adcl
sbb
fmuls
push
jecxz
insb
loop
je
imul
in
pushl
jmp
xchg
add
ret
popf
pushl
mov
jmp
pusha
mov
mov
mov
jmp
xor
out
jne
mov
lcall
roll
aad
add
andb
jmp
push
int
and
push
je
fs
aaa
ficompl
stos
pop
ds
mov
jmp
xchg
adc
sub
jmp
sbb
mov
jmp
popf
sbb
aad
rcrl
outsl
lcall
jo
push
stos
popa
jmp
fs
adc
adc
pop
cmc
test
shlb
xchg
cmc
add
sbb
sti
fs
ficoml
cmpsl
push
mov
xchg
mov
xor
jo
mov
and
cmp
jne
addl
jmp
push
fisttpll
out
jne
dec
call
add
cmp
je
popa
jmp
pusha
scas
inc
mov
sbb
ja
xorb
repnz
pop
repnz
cs
mov
lcall
add
add
jmp
adc
out
in
jle
add
fildl
mov
ret
lock
mov
jmp
pusha
cmc
gs
push
pop
mov
js
ds
cmp
sbb
test
xor
cmp
inc
fimuls
or
outsb
cld
fwait
jbe
mov
jg
adc
sti
imul
jl
cmc
gs
xor
pop
enter
leave
sbb
inc
jmp
xchg
lea
in
icebp
pop
fisttpll
out
and
jne
or
cmp
push
mov
jmp
ds
enter
push
mov
outsl
sahf
mov
xchg
icebp
add
mov
jmp
dec
fdivrl
int
addr16
mov
shlb
shll
popl
lea
jmp
orl
fisttpl
fnstsw
addr16
dec
and
jne
jmp
sbb
and
mov
xchg
out
dec
scas
xor
mov
xor
pop
cmp
sbb
jmp
in
je
xor
push
aaa
ret
lods
mov
jmp
repnz
push
iret
pop
cmp
xor
jmp
cmp
test
jmp
rcrl
pop
lea
xchg
add
clc
outsb
or
jg
test
dec
popa
mov
cmp
je
popa
mov
jmp
push
enter
dec
dec
jmp
mov
push
jmp
sub
xchg
fwait
decb
or
adc
pusha
pop
repnz
push
mov
out
sar
int3
loope
sti
sub
jmp
cwtl
push
mov
fadds
push
aaa
ret
mov
inc
mov
sbbl
jmp
popf
add
jmp
push
sbb
mov
inc
mov
and
test
add
add
xor
daa
inc
iret
pop
cmp
and
dec
ret
repz
inc
and
jmp
sahf
fiaddl
jmp
sbb
jmp
fcoml
mov
adc
mov
pop
cmp
std
pop
cli
incl
add
mov
movzbl
jmp
push
pushf
xor
adc
popa
icebp
nop
arpl
jecxz
mov
jmp
ret
push
shll
jecxz
mov
int
mov
inc
sbb
add
add
and
push
mov
outsl
or
mov
or
mov
and
cmp
jne
addl
jmp
out
jp
jp
jo
mov
add
jmp
call
mov
push
lahf
push
push
mov
xchg
jl
and
push
jmp
jb
jns
jmp
insl
icebp
popa
add
jbe
push
xchg
repz
mov
repnz
sar
inc
adc
mov
rcrb
dec
das
fidivl
outsb
in
jge
notl
js
inc
addl
add
add
imul
mov
adcl
adc
mov
icebp
jo
mov
jmp
pop
xlat
inc
and
sub
push
xor
sub
ja
sub
int3
popf
js
outsb
or
adc
jnp
mov
add
stos
sub
gs
xor
popa
jmp
int3
inc
mov
orb
and
jmp
push
jmp
jno
xchg
cmc
add
xor
adcl
jp
js
ljmp
andb
sub
jmp
pop
lret
lret
mov
jmp
sub
xor
ja
pushf
jmp
push
lds
iret
jl
sbb
adcl
test
pushf
xor
add
inc
or
sbb
adc
in
sbb
aas
movsb
cmp
dec
fwait
add
lret
add
xor
mov
jmp
mov
lret
cwtl
decl
lea
pusha
mov
mov
mov
andb
sub
jmp
int3
push
shll
xorb
add
das
fbld
xchg
gs
mov
stos
into
cmp
pop
stos
inc
adc
cwtl
pop
popa
mov
ret
cmp
cmp
jmp
pop
inc
mov
xchg
and
jmp
xor
das
sbb
add
jmp
add
popf
sbb
pushf
xor
push
shll
add
add
push
jmp
je
out
push
dec
rclb
xor
addl
mov
movzbl
jmp
sahf
sbb
add
leave
pop
cmp
cmp
decl
add
add
lea
jmp
push
jmp
ret
push
ret
cmpsb
push
hlt
int3
inc
shll
lcall
int3
stos
shrw
push
jmp
fmuls
mov
mov
jmp
decl
mov
in
rolb
add
jmp
mov
mov
es
roll
mov
out
push
shll
mov
cmp
je
popa
jmp
mov
stos
push
jl
in
push
jmp
pop
push
xor
or
fwait
or
jns
loop
rol
decl
jmp
stc
notl
inc
fisttpll
out
jle
jbe
loopne
xor
cmp
cs
sbbb
xchg
xchg
sbb
add
xchg
popf
pushl
jmp
push
mov
mov
jmp
sbb
fstl
jmp
lds
mov
frstor
cmpsb
push
mov
sub
out
inc
jmp
rol
jne
jne
jmp
rcrl
mov
cmpsl
ret
mov
in
test
mov
push
dec
stos
inc
jmp
push
test
jge
jg
sbb
dec
rclb
and
inc
shll
pop
bound
mov
movzbl
sub
leave
ret
jmp
test
cwtl
decl
lods
pushf
adc
arpl
inc
or
andb
sub
jmp
stos
and
adc
aas
insl
std
insl
hlt
pop
mov
inc
shlb
jmp
sub
and
adc
adc
add
and
jmp
aaa
jo
ret
jmp
lret
stos
rolw
popl
jmp
or
mulb
cmp
jo
jns
ja
loope
add
movzbl
add
cmp
je
popa
mov
jmp
imul
pop
repnz
and
xor
jmp
jge
jo
loop
rcll
mov
ds
test
addb
icebp
add
setle
fs
jmp
test
mov
hlt
push
cld
add
adcb
adcb
mov
add
add
jnp
imul
icebp
jmp
xchg
mov
jbe
mov
jmp
sub
or
adcl
test
mov
pop
addl
jmp
lea
fwait
decb
gs
adc
movsl
add
mov
jo
mov
and
cmp
jne
jmp
cltd
push
test
push
lret
punpckhdq
movsb
and
mov
jmp
int
shr
add
add
ja
xorb
inc
shll
pop
cmp
jle
imul
rorb
test
jmp
decl
jmp
lret
scas
pop
jmp
push
ret
cmpsb
push
cli
test
and
mov
or
cmp
fisttps
fsts
imul
insl
int3
fists
fisttpll
out
push
leave
pop
cmp
sub
aas
cmpsb
xor
scas
inc
push
xchg
movsl
mov
ret
jns
jne
out
push
fs
popf
insb
jmp
mov
repnz
jmp
das
lret
jmp
push
jmp
addb
testl
add
push
push
roll
sarl
mov
cmp
sub
add
xchg
popf
pushl
jmp
jb
popa
add
adc
lret
lret
push
test
push
leave
test
pop
ret
jmp
lods
sub
lods
cmp
add
add
je
pop
sub
add
xchg
popf
pushl
jmp
adc
cmp
lock
insl
jae
jmp
adc
scas
and
ljmp
stc
vsubpd
xchg
fs
pop
mov
jmp
test
test
push
test
aas
scas
lret
pop
aad
iret
fs
or
andb
sub
jmp
rcll
push
out
call
cs
imul
rorb
xor
jmp
loope
jmp
jge
sbb
mov
mov
pop
xchg
adc
dec
shrl
inc
adc
pop
lds
iret
daa
mov
mov
dec
fdivrl
ljmp
lret
out
mov
jmp
notl
fcomps
scas
pop
xchg
stos
sub
xor
jne
xor
leave
ret
mov
cmp
jne
jmp
inc
or
xor
push
jmp
repz
xorb
push
pushf
sti
push
repz
les
jmp
rclb
pop
or
dec
jmp
mov
mov
cmp
mov
mov
jmp
or
xchg
push
and
xor
popl
jmp
lret
mov
mov
aas
scas
lret
mov
jo
es
cmp
jne
addl
mov
jmp
fcoml
pop
mov
cmc
add
test
adc
mov
jmp
mov
test
push
les
call
and
xor
cmp
jmp
mov
sbb
ret
cmpsb
push
cli
add
test
scas
lret
pop
call
jle
inc
shlb
and
into
pop
cmp
popa
ret
lods
pop
cli
cmp
in
sbb
jne
mov
xor
add
mov
jmp
scas
dec
aad
cld
rolb
into
jmp
add
jmp
and
fildl
mov
mov
adc
iret
push
les
jmp
adc
dec
rolb
rclb
jo
xorl
jl
fwait
dec
push
pop
xor
jmp
jmp
xchg
mov
mov
add
push
mov
mov
push
mov
add
jmp
mov
ficomps
xchg
orb
add
push
mov
jmp
aad
shlb
push
std
push
adc
loop
cltd
push
or
mov
jmp
cltd
jmp
es
inc
mov
int3
inc
fidivrl
iret
stos
pop
xchg
mov
shlb
dec
push
mov
mov
je
mov
cmp
je
jmp
inc
iret
pop
cmp
add
mov
lcall
add
jmp
and
and
ret
add
add
mov
jmp
in
xchg
push
stos
cld
sar
jmp
or
std
outsb
cld
fwait
jbe
mov
aad
xchg
sbb
jbe
fucomi
aad
add
pushf
mov
mov
add
jmp
adcb
sbb
cmp
cmp
add
adcb
adc
jmp
out
adc
mov
jmp
or
add
or
cmpsb
gs
int
les
int3
cmpsl
fnstenv
jmp
lret
push
shlb
cmpsb
push
aam
add
jmp
pop
iret
stos
pop
loopne
cmp
xor
test
popa
and
mov
jmp
arpl
jno
jecxz
mov
fstp
cltd
cmp
jmp
xor
jmp
loope
cmc
pushf
outsl
xchg
mov
cmpsl
ret
mov
fldcw
cmpsb
aaa
lea
jmp
mov
movsl
int3
aas
aad
sbb
in
std
test
push
mov
scas
pop
stc
sbb
jmp
adc
inc
bnd
mov
cli
je
lea
test
pop
xchg
je
mov
cmp
jne
inc
inc
inc
inc
test
jmp
pop
test
jmp
jnp
push
cld
sub
push
imul
push
pushf
sti
push
mov
jmp
and
pop
jg
jmp
jmp
loope
loopne
jb
hlt
fs
popf
insb
fldl
dec
sub
scas
lret
pop
xor
rolb
add
jmp
sti
insb
loop
je
inc
shlb
cmp
sbb
jmp
mov
out
rcrl
pop
mov
out
add
add
sbb
pop
mov
jmp
and
lods
and
xor
lds
adc
add
movb
inc
jmp
xchg
push
test
push
imulb
adc
test
jmp
rclb
test
jmp
std
mov
jmp
test
fists
xchg
add
sahf
jnp
insb
loop
je
lret
call
cld
jmp
or
out
push
lahf
push
xchg
adc
fmuls
fsubrs
pop
pop
jmp
aaa
cmp
test
add
xchg
sbb
dec
fnstcw
out
jo
jns
shlb
jmp
jmp
dec
dec
fbstp
test
shr
repnz
jmp
mov
lods
lret
inc
xchg
lods
daa
mov
and
inc
into
pop
cmp
jno
arpl
mov
loopne
mov
std
jmp
mov
mov
lahf
punpckhdq
pop
lods
sbb
inc
cmp
jb
mov
add
cmp
jb
jmp
mov
popf
inc
xlat
inc
and
outsb
add
mulb
dec
pop
int3
jle
lea
jmp
jmp
jne
jmp
outsl
cli
push
lcall
sbb
cld
jmp
test
mov
es
loopne
out
mov
sub
fiadds
mov
fst
mov
jmp
mov
jmp
or
sbb
jmp
sahf
pop
xchg
repnz
mov
imul
outsl
sbb
in
jne
mov
movzwl
mov
mov
add
jmp
xor
inc
push
fninit
mov
jmp
xchg
adc
jmp
mov
mov
jmp
inc
les
int3
sbb
push
rclb
sub
jb
xchg
xor
test
dec
add
idivb
jmp
pop
inc
and
cmp
mov
dec
mov
add
or
mov
xor
jmp
rorl
push
repnz
inc
mov
sbb
sbb
jmp
mov
scas
leave
cmp
mov
ja
jp
in
inc
jns
mov
out
inc
inc
inc
test
jne
jmp
rolb
popf
jmp
jmp
sahf
mov
jmp
insb
cld
xchg
cmc
add
mov
subl
hlt
pop
mov
fidivrl
shr
cmp
xor
jmp
jmp
xlat
movzwl
jmp
mov
jmp
sti
insb
loop
je
adcl
enter
outsl
loope
xchg
stos
lds
jne
add
mov
cmp
jne
test
je
jmp
aad
mov
fisttps
mov
jmp
ljmp
test
pop
test
filds
mov
jo
loop
mov
dec
in
jmp
pop
lret
pop
ds
sahf
pop
xchg
repnz
mov
je
into
mov
decl
test
jne
ret
jmp
fistpl
test
loop
je
cmp
xor
pop
xchg
ret
jmp
sub
pop
adcl
ret
ret
inc
mov
jmp
and
out
fs
popf
insb
mov
dec
ret
mov
sbbl
pop
jmp
pop
fisttpl
adc
or
cmp
jmp
push
add
mov
jmp
cmp
adc
ret
dec
fdivrl
xchg
pushf
jmp
dec
insl
shlb
jnp
lcall
xchg
mov
inc
aad
dec
sti
nop
add
jmp
push
in
pop
inc
rolb
sarb
xchg
sub
add
xchg
popf
pushl
jmp
push
andb
jmp
push
rclb
jno
jbe
cmpl
mov
imul
or
mov
fstpl
ret
sub
dec
xlat
inc
and
xor
int
popf
jbe
mov
mov
jmp
cld
lock
in
push
lds
popl
add
add
add
jmp
xchg
sbb
lret
pop
ds
iret
lahf
addr16
in
add
jmp
adc
add
jmp
ja
loope
xor
add
add
dec
mov
jmp
fcompl
scas
pop
movsb
pushf
sbb
adc
jnp,pt
shlb
fs
je
popa
mov
jmp
out
push
lahf
push
scas
and
pop
or
pop
ret
mov
lcall
mov
cmp
jmp
mov
std
or
mov
shlb
lods
daa
mov
and
add
add
mov
jmp
adcl
outsb
mov
add
add
jmp
dec
fimull
fidivl
mov
rclb
push
notb
adcb
xorb
pop
push
dec
jo
mov
and
cmp
jne
jmp
jbe
ja
loope
push
imul
mov
add
and
jno
jecxz
push
ret
ret
rclb
add
pop
mov
jmp
and
popf
jmp
out
je
lea
inc
fidivrl
in
je
insl
mov
xchg
adc
call
add
jmp
js
jne
out
push
push
lahf
push
pop
lret
scas
pop
mov
jmp
shlb
pushl
jmp
cmpsb
xor
scas
inc
lods
xor
je,pn
or
add
ret
jmp
std
jns
mov
aam
mov
add
add
add
add
inc
aad
dec
movsl
push
mov
shrb
cmp
jmp
or
jle
lock
jmp
daa
jle
jmp
ficomps
scas
pop
mov
add
add
jmp
mov
filds
mov
jg
jns
sbb
aad
subl
mov
rolb
add
jmp
int3
popf
sbb
or
adc
push
inc
jne
mov
imul
adc
loop
and
cmp
jne
addl
mov
jmp
dec
push
xor
or
pop
cli
jg
arpl
cmc
inc
loope
jmp
rcll
push
sti
xor
xor
mov
mov
jmp
in
loopne
jb
push
lds
iret
fs
jg
jmp
jp
add
lea
jmp
mov
lahf
cli
or
or
add
jl
mov
inc
mov
jg
cwtl
push
imul
mov
ret
xchg
push
pushf
sti
push
hlt
xorb
inc
jmp
movsb
lea
jmp
pop
rcll
sub
test
pop
test
mov
movsl
popa
movsb
ja
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
add
lret
mov
sub
push
das
decl
add
test
in
add
testb
add
repnz
popf
or
rolb
shrb
cmp
sub
jmp
mov
pop
sub
jmp
pushf
jmp
cmp
dec
int
and
cmp
cli
or
icebp
jne
cmp
ja
mov
lea
jmp
mov
lods
mov
mov
pushf
push
mov
jmp
orb
cli
or
aad
leave
test
rcrl
stos
data16
jl
jne
inc
inc
and
jmp
jns
push
cld
pop
xchg
ret
fwait
push
jmp
push
and
jmp
cmpsl
cmp
stos
cmp
add
xchg
add
and
daa
faddp
outsl
and
cld
ljmp
bound
or
and
jmp
jbe
push
cwtl
push
imul
mov
not
not
or
jmp
add
out
adc
dec
adc
push
xor
add
call
fisttpll
out
js
jno
jecxz
cmp
xor
pop
adc
inc
add
aaa
jbe
in
sub
jmp
inc
cmc
mov
jmp
cmc
or
pop
pushl
scas
aas
pop
test
in
pop
lcall
sbb
iret
lret
pushf
jmp
fimuls
cmp
push
aad
sub
xor
sub
sub
add
fisubrl
jge
testl
loopne
movsl
cs
aas
pop
test
imul
inc
stos
pop
mov
adc
jmp
mov
test
cmp
mov
xchg
repz
ljmp
in
lock
pop
push
mov
lea
push
mov
jmp
ja
outsb
or
sub
outsl
test
movsb
jmp
loop
cld
fwait
jbe
outsl
mov
push
jmp
jns
push
cld
pop
inc
aad
sub
imul
push
lds
sbb
mov
jmp
addr16
add
jmp
push
push
add
lds
add
into
pop
int3
stos
data16
add
pop
enter
jns
test
jmp
adc
sub
add
xchg
xor
movl
dec
cld
pop
xchg
add
xor
dec
lea
inc
mov
add
jmp
add
push
inc
mov
jmp
movsb
test
mov
jmp
enter
push
mov
inc
mov
jmp
pop
int
addr16
or
je
cs
push
mov
mov
mov
jmp
ret
addr16
push
in
and
add
jmp
test
ret
mov
sub
xchg
movzbl
jmp
sub
jmp
pop
fimuls
sbb
outsl
or
rcl
pop
lret
scas
pop
scas
push
arpl
movb
add
cld
fstps
mov
sbb
add
push
cld
push
dec
rorl
mov
inc
mov
cbtw
jmp
jnp
popa
add
adc
mov
inc
add
jbe
jae
xchg
imul
jmp
mov
inc
mov
lahf
adc
out
adc
sub
in
bound
or
jmp
in
in
jle
mov
mov
add
adc
sub
jmp
lds
add
jmp
lahf
setg
or
mov
sbbl
lcall
mov
jmp
and
add
jmp
sub
das
dec
mov
mov
ja
bound
jl
push
cmp
icebp
xor
jmp
mov
pop
mov
jmp
std
fs
popf
insb
test
pop
int
loopw
pushf
jmp
fldl
mov
lds
lahf
punpckhdq
mov
jl
xchg
cmc
add
mov
add
xor
pushl
addr16
sbb
mov
cmp
add
in
add
push
cwtl
push
mov
es
inc
shll
or
insb
scas
sub
orl
jmp
clc
mov
jmp
mov
jmp
pop
mov
pop
push
fdivl
in
dec
ret
mov
test
std
insl
hlt
pop
divb
arpl
arpl
cmc
push
sahf
pop
xchg
adc
iret
inc
shll
dec
sub
pushf
sbb
add
jmp
jae
ja
loope
mov
test
inc
add
scas
cli
incl
lds
and
xor
clc
outsb
or
dec
pop
into
pop
cmp
jg
xchg
jb
ds
jns
add
jno
lcall
xor
jmp
or
jmp
xor
or
xchg
inc
shll
push
cmp
or
or
and
or
add
and
or
jmp
xor
add
add
outsl
add
add
outsl
add
add
outsl
add
add
add
outsl
add
add
sbb
adc
xor
jmp
mov
popa
xchg
jns
xchg
outsl
and
xor
add
or
or
or
add
add
push
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
or
add
sbb
add
outsl
add
sbb
add
add
lea
add
add
mov
adc
add
hlt
test
add
jmp
aaa
lods
and
push
xchg
or
popa
clc
outsb
or
adc
pop
cmp
inc
jmp
xchg
lea
jmp
loopne
in
je
add
mov
inc
mov
addr16
sbb
mov
test
xor
jmp
mov
jmp
add
cmpsb
and
lds
iret
sbb
shl
shr
jmp
push
xchg
add
addr16
notb
ds
test
inc
int3
inc
and
dec
sub
add
push
std
or
pop
and
jb
stc
imul
inc
je
xor
ret
jmp
pop
aam
sub
frstor
mov
in
jle
mov
mov
pop
cmp
popa
icebp
gs
pushf
outsl
fsubrl
mov
cmp
xor
clc
lock
bound
jno
dec
rolb
sarb
add
xor
dec
out
leave
outsl
adc
adc
add
or
outsl
or
add
add
add
add
sbb
or
or
add
add
add
push
or
jmp
int3
dec
ss
aas
pop
test
xorb
add
mov
cld
ljmp
bound
add
and
jmp
mov
mov
add
bound
or
xor
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
sbb
fildl
or
or
bound
or
jbe
fs
push
push
xlat
inc
and
cmp
jb
xchg
fcomps
xchg
addr16
cli
push
sti
imul
adc
mov
dec
mov
inc
mov
inc
lret
lret
push
lds
test
pop
lret
scas
pop
and
in
pusha
notb
aad
dec
sti
mov
mov
sbb
aam
xchg
or
xchg
add
and
pop
ds
rclb
jmp
add
sub
stos
cmp
dec
popa
ljmp
stc
in
or
and
or
jmp
and
adc
dec
fisttpl
fnsave
out
out
mov
cmc
push
lahf
push
mov
lahf
cli
or
nop
adc
mov
xor
pop
xchg
sbb
dec
fdivrs
mov
xlat
inc
and
aaa
pop
fisttpl
mov
nop
testl
scas
pop
mov
mov
lods
lret
inc
loope
jnp
mov
iret
inc
shll
mov
and
aas
lret
cmp
push
mov
es
add
addr16
jl
pop
adc
sbb
add
add
mov
xor
lret
bound
or
or
jmp
adc
pop
roll
aad
dec
out
add
add
add
insl
add
sub
adc
int3
pop
enter
jns
jl
negb
out
adc
pop
mov
pop
xchg
add
push
push
xchg
add
jno
fs
popf
insb
xchg
fs
cmp
sub
ja
or
lcall
sbb
aad
int3
das
scas
cmp
mov
stos
xor
push
shll
stos
xchg
pop
lcall
sub
hlt
push
cld
push
dec
lds
iret
sub
or
push
push
cmc
dec
lds
iret
sbb
imul
cmp
arpl
xchg
les
stos
cmp
push
shll
popf
insb
lds
mov
scas
add
mov
inc
mov
or
aas
cmp
out
adc
pushw
xchg
mov
mov
mov
jp
pushf
outsl
adc
xor
jmp
mov
aam
shll
mov
and
pusha
sti
imul
pop
or
arpl
outsb
or
sbb
xchg
testb
jno
cld
xchg
cmc
add
lret
push
lret
fcmovnbe
push
lret
xchg
ljmp
popa
icebp
nop
arpl
xchg
jno
int
and
sub
pusha
pop
repnz
pop
scas
out
icebp
nop
arpl
jne
data16
cmc
adc
jne
out
or
push
mov
popf
in
mov
or
add
adc
loope
adc
push
or
cmpps
push
jecxz
xor
int
xchg
out
out
jo
mov
andl
mov
cltd
das
mov
dec
rolb
shlb
pushf
add
std
or
push
lea
adcl
test
inc
mov
and
xchg
xor
das
ficompl
mov
outsl
adc
cld
ljmp
bound
add
and
jmp
mov
out
sti
sahf
insl
subl
inc
mov
mov
push
add
add
outsl
sbb
or
outsl
and
or
add
add
add
add
or
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
sub
adc
or
dec
iret
pop
cmp
xor
insl
std
test
and
jns
ficomps
mov
jecxz
sbb
add
add
adc
sbb
jmp
out
push
and
add
jmp
adc
adc
js
sub
lcall
clc
lahf
push
or
inc
int3
inc
and
pop
bound
add
aaa
pop
rolb
shlb
jne
mov
xchg
add
xor
dec
lods
lret
inc
div
popa
icebp
nop
arpl
sub
lods
cmp
inc
mov
addl
loopne
out
mov
or
es
ret
xchg
gs
int
and
sbb
popa
icebp
nop
arpl
inc
test
movsb
ret
ds
dec
ret
stos
movsb
and
jno
xorb
lahf
punpckhdq
mov
cmp
and
mov
inc
mov
movsl
sub
lds
xchg
pop
xchg
sahf
stc
or
les
mov
inc
and
jns
js
push
popa
mov
ret
xchg
add
imul
jbe
cmpl
add
or
in
movsl
ds
fimull
jmp
daa
or
jmp
xor
or
or
or
or
add
or
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
or
add
sbb
fildl
or
add
add
inc
sub
adc
or
sti
insb
loop
je
ja
jno
jecxz
push
rclb
addr16
loope
repnz
pop
repnz
fs
adc
std
insl
hlt
pop
in
lret
lods
pop
fildl
dec
sub
popa
dec
lret
lret
insb
or
out
movsb
and
into
dec
frstor
call
repz
gs
lods
lret
inc
mov
mov
js
popa
lods
and
mov
scas
lret
fs
bound
je
out
sbb
add
sbb
movsb
sub
loope
adc
inc
movsb
movsb
ret
ds
inc
xlat
mov
out
sbb
insl
outsl
xor
or
add
outsl
add
add
outsl
or
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
add
or
or
add
add
or
stc
sub
or
in
adcl
test
scas
lods
lret
inc
out
loop
ljmp
xchg
popa
insb
clc
outsb
or
dec
sbb
jg
mov
xor
jmp
pushf
outsl
xchg
pop
aas
lret
cwtl
push
imul
mov
inc
les
int3
and
rolb
sarb
mov
les
call
xor
xor
dec
roll
movsb
push
test
jge
jg
dec
frstor
loop
sti
aam
repz
gs
pop
rolb
shlb
orl
mov
or
jmp
sub
adc
popl
xchg
icebp
add
pop
cltd
or
pop
sbb
lds
iret
jnp
jb
xchg
sub
mov
popf
fisttpll
mov
aad
dec
in
pop
enter
test
jecxz
sahf
or
cmpsb
gs
add
cmp
out
jne
mov
pop
xchg
jb
or
js
ljmp
xor
fnstenv
mov
inc
mov
jmp
clc
lahf
push
or
ja
xchg
or
dec
adc
pop
fimuls
push
mov
rcll
adc
aam
dec
stos
pushl
cmpl
stos
cmp
or
cmc
daa
push
jecxz
push
in
cld
ja
xorb
adcl
test
xor
add
or
das
mov
xor
jmp
in
je
xor
jne
out
dec
inc
add
push
add
add
outsl
and
add
and
jmp
shlb
data16
xchg
outsb
leave
aas
mov
inc
mov
xchg
sbb
sbb
aad
sbbl
cmp
jle
dec
fistpll
mov
pop
jp
ds
fimull
fisubrl
lock
lret
sti
insl
std
test
adc
jnp
ja
loope
sbb
insb
jmp
loope
jae
repnz
mov
dec
mov
push
in
insb
jl
insb
or
iret
jb
addr16
pop
push
aam
sub
adc
mov
imul
insl
xchg
scas
sub
setg
or
sbb
punpckhdq
mov
cmc
pushf
outsl
xchg
pop
jmp
xchg
lret
mov
xor
fistpl
ja
push
pop
iret
stos
pop
shll
xchg
pop
repnz
fs
cwtl
push
imul
out
sbb
in
je
lea
jbe
cmpl
sbb
mov
dec
roll
aad
and
mov
mov
in
sbb
aam
dec
mov
cwtl
push
imul
fwait
or
jae
mov
inc
mov
test
mov
and
inc
int
and
xor
into
jmp
lret
sbb
pop
mov
scas
leave
cmp
leave
inc
fidivrl
stc
cwtl
imul
sbb
std
insl
hlt
pop
mov
in
jge
negl
jo
loop
cmp
test
inc
sub
inc
sub
adc
add
mov
or
jmp
andl
fdivl
in
xchg
or
in
testb
and
xor
mulb
push
jae
arpl
cmc
je
fisttps
fldenv
mov
inc
mov
push
aad
sub
xor
aaa
fldl
push
aaa
ret
popa
icebp
nop
arpl
in
jae
gs
or
push
dec
fstpt
push
xor
sub
mov
in
jecxz
jne
and
stc
jbe
cmpl
dec
frstor
fisubrs
push
cmpsl
adc
btsl
fildll
fwait
dec
fmuls
fdivs
cli
push
insb
loop
je
fimull
mov
jno
jecxz
pop
les
int3
xor
inc
mov
lret
les
pop
cmp
dec
and
cmp
mov
bnd
xorb
pop
leave
test
mov
test
jge
imul
bound
or
and
jmp
cli
add
imul
insl
mov
lods
pop
divl
xchg
js
pusha
pop
repnz
bnd
jp
xor
lahf
pop
xchg
adc
pop
lea
mov
jg
dec
test
mov
icebp
jae
jbe
loopne
mov
cwtl
pop
int
and
jl
call
mov
sahf
sbb
and
push
mov
gs
push
jecxz
out
mov
mov
mov
aad
sub
xor
add
enter
loop
je
inc
lret
pop
ds
fcomps
test
out
mov
jg
mov
cli
adcl
test
dec
sub
sub
dec
fnstcw
in
jg
and
push
enter
inc
movsb
lock
mov
pop
rolb
shlb
fstps
mov
movl
mov
daa
pop
jae
sub
add
jmp
lret
mov
push
call
inc
out
fbstp
hlt
mov
jmp
out
popf
jmpw
jmp
dec
dec
jl
or
add
lahf
punpckhdq
jmp
or
add
jmp
push
roll
sarl
jns
outsb
or
sbb
mov
jmp
ret
jmp
lds
sub
add
add
int3
push
add
lcall
scas
sbb
xlat
push
call
call
jmp
movsb
and
test
popa
ret
in
notb
subl
aaa
or
jmp
inc
lods
sti
xlat
xor
add
call
and
adc
pop
add
mov
pushl
jmp
rcrb
test
cmpsb
cwtl
jmp
and
add
int3
popf
sbb
add
int3
and
add
faddp
mov
jmp
insl
fisttps
fiadds
add
andb
add
dec
frstor
mov
jmp
mov
xchg
out
call
jmp
pop
into
test
ret
xchg
mov
scas
and
addl
clc
add
add
dec
mov
xchg
icebp
add
rorl
repz
aad
dec
sti
in
jge
je
sub
test
mov
jmp
adc
imul
psubd
mov
sbbb
out
sbb
in
jmp
nop
mov
mov
ret
into
pop
enter
jns
bound
cltd
roll
add
jne
addl
jmp
insb
mulb
cmp
add
cmp
jmp
mov
ret
ss
mov
into
cmp
lds
test
jmp
imull
lcall
mov
mov
movsb
ret
ds
jle
mov
jmp
imul
lods
pop
popa
jmp
psubsw
std
fstps
scas
pop
mov
int
and
cmp
mov
scas
sub
cmp
jmp
mov
cltd
clc
or
jle
mov
rolb
add
jmp
pop
adcl
jge
je
insl
push
fldt
or
daa
pop
mov
leave
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
test
daa
lods
cmp
shrb
sub
add
cld
ljmp
bound
add
and
jmp
lods
pop
in
clc
lahf
push
xchg
mov
jmp
int3
popf
je
jl
divb
bound
add
or
adc
push
dec
rorb
out
push
js
mov
lea
mov
pop
fldenv
mov
jmp
mov
jmp
dec
rclb
addr16
jne
out
pop
mov
mov
and
jbe
ds
lea
jmp
push
jmp
xor
add
or
test
xchg
pop
repnz
mov
jmp
inc
mov
jmp
lea
mov
sbb
scas
insl
call
xchg
mov
lds
jmp
repnz
lahf
push
ret
test
mov
pusha
push
mov
loope
add
adc
decl
xchg
xchg
or
xchg
add
pop
out
or
push
outsl
xor
ljmp
bound
or
and
jmp
dec
movsb
popa
out
adc
pop
dec
int3
inc
and
sub
inc
scas
sbb
or
mov
sahf
stc
or
dec
int3
inc
and
cmpsb
popf
and
push
mov
jmp
testl
nop
jb
test
sub
jmp
push
jo
loop
push
adc
mov
jmp
mov
test
leave
pop
cmp
outsb
or
incb
mov
adc
cld
ljmp
bound
or
and
jmp
ret
add
movzbl
inc
mov
jmp
adc
punpckhdq
jmp
nop
xor
repnz
lock
bound
mov
lock
xchg
outsb
fbstp
mov
dec
xor
add
fdivrs
or
jmp
add
mov
fdivl
in
adc
jmp
jmp
sbb
adc
mov
repnz
pop
repnz
dec
adc
imul
movsb
ret
ds
inc
cld
outsl
and
sub
jmp
or
inc
add
popl
jmp
scas
xor
mov
mov
not
not
jmp
sahf
push
xrelease
jmp
loopne
in
je
add
std
fstpl
stos
data16
jbe
sub
sub
or
jmp
out
outsb
cld
fwait
jbe
int3
push
ret
cmpsb
push
mov
movsb
cmp
push
push
pushf
jmp
mov
jmp
mov
movsl
int3
aas
ljmp
push
adcl
jl
jne
ja
mov
mov
mov
jmp
mov
shlb
jle
call
mov
mov
add
or
cltd
in
jmp
xchg
lods
imul
ljmp
or
in
insl
loopne
adc
inc
nop
add
enter
jmp
test
xchg
push
dec
dec
inc
sbb
dec
add
or
or
sbb
add
xor
jmp
pop
xor
adc
insl
outsl
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
mov
xor
sbb
aad
xchg
das
mov
iret
pop
leave
test
out
rcll
sti
rorl
enter
sub
ror
mov
jmp
lds
xchg
cmpsb
cmp
mov
shr
jo
xorl
add
lret
jecxz
mov
jmp
mov
rcrb
data16
data16
xchg
outsb
jmp
arpl
cltd
dec
mov
ficomps
stos
data16
cmp
mov
jmp
popl
jmp
jb
popa
add
adc
lock
bound
jmp
and
jmp
imul
rolb
jo
vmovdqa
add
rorl
dec
mov
sarl
mov
int
clc
outsb
or
sbb
hlt
int3
add
call
jae
imul
jmp
jle
mov
inc
add
adc
jmp
jge
mull
addr16
lock
test
jecxz
cwtl
int3
pushf
ret
jmp
inc
aad
sub
je
loop
pop
loop
cwtl
setg
or
shll
mov
or
jbe
test
clc
mov
add
xor
jl
negb
push
test
push
test
outsb
leave
push
int
and
push
clc
jbe
sbb
cld
ljmp
bound
or
and
jmp
imul
adc
test
and
add
add
add
outsl
and
or
and
jmp
jmp
repnz
loop
je
out
ja
xorb
sub
aam
jmp
movsl
es
cs
lods
xor
setg
or
mov
cmpsb
shll
cld
push
call
or
hlt
push
cld
or
xchg
add
sahf
jbe
popf
pushl
mov
jmp
rorl
dec
mov
mov
dec
mov
xlat
clc
jmp
xor
fldt
pop
xchg
pop
bound
dec
mov
jo
inc
je
cwtl
sbb
enter
sub
and
jmp
scas
dec
push
mov
or
inc
add
add
dec
sub
jle
mov
rorb
add
jnp
in
inc
sbb
mov
pushf
rcll
pop
in
xchg
loope
outsl
adc
sub
pop
xor
adc
jmp
add
xchg
repz
xchg
cltd
test
decl
dec
adc
inc
pop
mov
jle
dec
insl
sti
cmp
lock
xor
cli
lock
bound
icebp
pop
adc
lods
or
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
cwtl
push
xchg
repz
mov
xchg
mov
add
sti
jmp
jne
gs
xor
test
jge
ficompl
scas
pop
mov
cmp
mov
mov
call
scas
aas
pop
test
roll
add
xor
repz
push
xchg
repz
out
testb
js
sar
inc
adc
cmp
lods
and
xchg
pop
jmp
and
jmp
das
movsl
xor
xchg
mov
jmp
or
mov
nop
testl
push
mov
push
add
add
outsl
and
or
and
jmp
adc
add
add
outsl
and
add
and
jmp
sub
xchg
mov
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
or
jmp
inc
sub
xor
addr16
out
jg
jmp
dec
and
cli
ret
push
ret
cmpsb
push
hlt
and
jle
adc
mov
inc
mov
sub
aaa
movsb
cmp
add
mov
lods
cmp
mov
in
outsb
clc
outsb
or
dec
fimuls
mov
sub
fs
popf
insb
lret
inc
fisttpll
out
dec
rolb
shlb
dec
inc
and
xor
pop
int3
stos
data16
xchg
add
adc
inc
mov
mov
movsb
ret
ds
jo
xorl
call
imul
and
outsl
call
jo
push
cld
or
pop
leave
test
mov
lea
das
add
xor
das
dec
mov
jo
aaa
xchg
xchg
and
sbb
add
add
outsl
and
add
and
add
add
mov
imul
bound
or
or
jmp
mov
jle
ja
jecxz
mov
add
jmp
mov
test
test
test
and
cmp
jmp
cmp
rcrl
pop
in
adc
rorl
test
cmpl
push
xchg
std
je
jmp
cmp
add
jmp
lods
and
ja
cmp
mov
cmpsb
cs
inc
mov
fwait
sub
ljmp
bound
add
and
jmp
mov
lods
cmp
outsl
and
add
add
add
add
outsl
add
add
outsl
add
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
or
outsl
or
and
adc
inc
popl
jmp
movsb
push
jmp
add
in
adc
jne
xchg
jb
or
repz
stos
into
cmp
insb
lahf
jne
int3
popf
adc
adc
xchg
jmp
push
dec
les
or
push
add
add
aad
les
int3
xor
jae
in
mull
rolb
add
jmp
out
push
lahf
push
sub
inc
shll
shlb
mov
jmp
mov
rorb
push
xor
sub
pop
iret
stos
pop
xchg
rorb
push
icebp
movsb
sbb
add
push
aas
or
jmp
lea
jmp
mov
jmp
in
lock
bound
divl
mov
fwait
decb
add
adc
push
cld
ljmp
bound
add
and
jmp
mov
fisttps
push
std
lock
andl
jmp
pop
jg
xor
jmp
call
leave
sub
or
add
data16
call
mov
mov
test
je
add
jmp
mov
mov
and
jmp
lcall
adc
nop
push
popa
nop
push
xchg
push
jmp
imull
je
ja
jge
negl
fildl
mov
stos
sbb
imul
mov
jmp
pop
into
test
jne
out
and
mov
jmp
je
jmp
mov
and
sti
jb
pusha
pop
repnz
mov
inc
mov
add
incl
test
jge
jb
out
jmp
jmp
loopne
cmc
pushf
outsl
mov
cmp
out
sti
rcrl
lret
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
dec
or
add
add
lods
add
pop
dec
or
jmp
xchg
popa
lea
xchg
repz
in
pop
inc
and
cmp
push
shlb
adc
xchg
add
add
or
cmp
les
push
fisttps
fldenv
inc
or
add
add
push
fisttps
flds
xor
test
subl
mov
mov
shr
mov
push
ret
cmpsb
push
loop
mov
pusha
mulb
dec
aas
test
jmp
stos
cmp
mov
in
xor
inc
jmp
sbb
pop
std
call
cmp
out
jo
xchg
pop
xchg
repnz
into
or
push
test
jmp
add
or
or
scas
add
add
add
jno
jg
jmp
xchg
lea
fildll
lods
int
shlb
push
add
add
outsl
and
add
and
jmp
int
rcll
mov
jno
jecxz
push
sbb
clc
sub
cwtl
add
bound
add
dec
or
jmp
add
add
mov
dec
or
jmp
push
add
jmp
fstpl
subl
sub
xor
addr16
jmp
mov
cmpsb
shll
ficompl
xchg
addr16
in
cld
fwait
jbe
cli
dec
inc
and
test
incl
test
jmp
mov
jmp
xchg
sbb
loop
pop
loop
and
outsl
lock
jmp
add
jmp
mov
jmp
pop
rolb
shlb
cltd
or
dec
mov
lods
lret
inc
test
dec
sub
inc
xchg
mov
jmp
xor
mov
fwait
jne
imul
adc
movl
pop
cmp
js
add
notl
push
sbb
aad
xor
cwtl
cmp
add
add
dec
frstor
push
mov
loop
mov
rcl
outsl
adc
sub
add
or
outsl
or
add
outsl
add
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
add
add
mov
sub
add
add
sbb
add
outsl
add
sbb
add
add
lea
add
add
mov
add
jmp
mov
lcall
jmp
jl
mov
jmp
mov
jmp
mov
mov
mov
xchg
adc
pop
cmp
push
pop
fistl
sti
and
test
decl
cs
inc
mov
outsl
mov
aas
add
rolb
add
pop
cmp
aas
pop
push
jmp
mov
jmp
cmp
lahf
pop
stc
jle
mov
cmc
push
mov
add
mov
in
jl
pop
adc
and
or
adc
mov
push
cmp
add
add
and
add
push
or
jmp
scas
pop
push
aam
sub
lds
add
call
test
je
jmp
in
cld
fwait
jbe
orl
clc
or
lret
mov
mov
popf
or
mov
jmp
jo
scas
and
gs
pushf
outsl
lret
aaa
push
mov
je
cmpl
je
lea
push
mov
jmp
pusha
icebp
popa
add
pop
sarl
push
mov
out
push
jmp
imul
or
dec
sub
pop
lret
lret
pop
into
test
push
cmpsb
add
jmp
scas
mov
jmp
push
mov
jg
cmp
xchg
xor
push
mov
in
test
jmp
and
jmp
adc
sbb
push
test
push
hlt
mov
mov
fildl
outsl
sub
clc
sub
add
sbb
add
mov
fadds
mov
leave
fsubp
jmp
jmp
rclb
cmpsb
push
aam
stc
imul
add
call
jmp
jns
imul
mov
movb
mov
jne
jmp
jge
je
pusha
mov
mov
sub
xlat
push
shll
jne
mov
call
mov
lea
push
pushl
jmp
jne
mov
add
xor
mov
add
jmp
test
mov
add
jne
mov
adc
jecxz
xor
jmp
fisttps
mov
jmp
clc
jo
xorl
adc
lret
inc
loope
nop
push
popa
nop
inc
test
ljmp
bound
or
and
jmp
idiv
jmp
xor
and
movsb
cmp
sbb
mov
jmp
sahf
push
pushf
sti
push
cmpsl
add
xor
push
push
pop
jp
or
add
jne
jmp
lahf
or
pop
jmp
inc
rolb
shlb
sbb
pop
leave
ret
jmp
sbb
adc
call
dec
frstor
pop
jmp
sbbl
jmp
dec
fnsave
inc
jecxz
push
in
data16
outsb
or
jg
xchg
push
add
add
outsl
and
add
add
outsl
add
sbb
add
bound
or
add
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
or
bound
or
pop
cwtl
push
imul
sub
cwtl
or
or
bound
adc
and
or
adc
dec
enter
add
je
out
push
repz
xorb
call
xchg
xchg
cltd
mov
jmp
and
mov
mov
mov
andb
sub
jmp
lea
mov
jmp
dec
enter
ss
xchg
cltd
and
icebp
xor
popa
jmp
jo
jmp
jnp
insb
or
out
mov
fldt
ja
loope
rcrb
test
call
add
xchg
popf
pushl
jmp
mov
jmp
mov
fsts
jb
in
loop
jecxz
jne
inc
int
and
pop
jo
aas
mov
ret
fistpll
ret
jmp
jbe
imul
add
jmp
je
jmp
push
lds
iret
jnp
insb
or
scas
xchg
add
out
jg
jmp
dec
lock
add
sbb
add
mov
mov
inc
or
jmp
push
or
jmp
adc
in
loopne
jb
mulb
xchg
popa
movb
sub
add
mov
popa
push
into
pop
cmp
adc
outsl
shlb
clc
cwtl
inc
mov
mov
jmp
add
dec
or
inc
lods
in
roll
loope
incl
add
mov
movzbl
jmp
xor
lea
jmp
xor
push
add
insl
repnz
pop
bnd
xchg
add
sahf
push
dec
int
and
cmp
mov
popl
jmp
inc
push
xor
daa
and
sbb
frstor
aas
adcb
xchg
and
add
push
add
dec
jmp
jmp
mov
cmpsb
push
sub
into
addr16
outsl
sub
sub
or
add
add
add
add
outsl
or
add
outsl
or
or
add
outsl
add
add
sbb
adc
sub
fldl
adc
ficoml
mov
sub
pop
pop
mov
inc
or
jmp
inc
or
jmp
iret
push
push
jmp
push
xchg
push
sbb
add
add
popa
add
adc
orb
adc
loop
jecxz
jne
adcb
add
outsl
and
add
insl
outsl
sub
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
sbb
fildl
add
add
bound
add
stos
es
cs
loope
mov
jmp
mov
test
jmp
cmp
daa
mov
mull
icebp
push
lock
notb
push
lea
mov
call
mov
jmp
jo
ja
loope
test
hlt
mov
jmp
xor
jmp
push
xor
shr
add
add
lods
scas
cmp
xchg
jb
cmp
mul
mov
jmp
aad
mov
out
push
lahf
push
xor
sbb
cltd
xchg
fsubrs
dec
add
or
add
mov
jmp
cmpsb
dec
sbb
push
add
add
add
outsl
and
or
and
jmp
aaa
mov
sbb
xchg
test
jmp
addl
repnz
rcll
mov
cli
popf
insb
test
orl
jmp
sbb
mov
loopne
cmc
pushf
outsl
mov
jl
jmp
push
add
add
outsl
and
add
and
jmp
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
imul
jmp
je
pop
jp
jg
test
pop
test
orb
cli
or
xlat
pop
int
cmpl
xor
push
iret
inc
mov
xchg
inc
roll
aad
adc
cwtl
or
ret
ret
push
ret
cmpsb
push
loop
outsl
lcall
bound
mov
fwait
decb
ret
sahf
add
std
or
arpl
outsb
or
sbb
popa
or
push
adcb
addb
out
jl
divb
mov
popf
push
mov
es
inc
rclb
sub
dec
sub
add
out
mov
inc
mov
mov
fsincos
jle
mov
aad
xlat
mov
fisubs
add
sub
outsl
sub
add
or
or
or
add
add
push
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
or
add
sbb
fildl
or
add
add
stos
dec
or
bound
or
out
fimull
jmp
dec
or
jmp
add
outsl
adc
add
sub
or
or
or
sbb
jmp
adc
mov
or
jmp
jmp
pop
fdivl
in
jecxz
lcall
dec
adc
pop
ljmp
pop
jmp
sbb
inc
jmp
orb
clc
or
ds
inc
mov
stos
sub
xchg
cmp
push
mov
test
je
cmp
jb
jmp
rorb
xchg
xchg
sbb
adcl
test
jmp
inc
clc
jmp
addr16
gs
dec
out
in
jg
pop
rcrl
pop
into
pop
cmp
addr16
int3
aas
xchg
out
jns
mov
arpl
les
leave
jmp
inc
and
add
subb
jmp
shr
jmp
cmc
gs
pop
dec
ret
xchg
jg
jp
in
push
movsl
and
adc
mov
dec
or
jmp
push
or
jmp
jmp
mov
test
push
hlt
pop
or
ss
jmp
imull
fwait
jbe
dec
fidivrs
mov
and
add
lcall
or
inc
jmp
loop
lock
jmp
and
inc
xchg
sbb
mov
inc
cld
add
add
je
mov
jmp
sub
cmc
jno
xorb
or
sub
jae
mov
jmp
lret
movsb
push
mov
inc
mov
xchg
add
xchg
mov
jae
outsl
sbb
ljmp
bound
add
and
jmp
incl
jmp
or
jg
out
adc
dec
mov
decl
test
call
imull
jmp
test
cmp
jne
and
add
add
mov
add
jmp
in
pop
lds
jne
jmp
rcrb
xchg
addr16
jbe
loopne
daa
mov
dec
mov
sub
or
mov
jmp
inc
scas
push
add
jmp
roll
mov
fcoml
cmpsb
push
cli
inc
aad
sub
insb
out
or
leave
jmp
repnz
jmp
ret
push
lret
cmc
push
rclb
ja
hlt
push
cld
pop
mov
js
ret
add
add
jmp
inc
fdivl
in
xchg
aad
ss
aaa
pushf
jmp
dec
xlat
inc
and
xor
lea
push
xchg
repz
mov
scas
cmp
mov
or
xor
add
add
sbb
add
mov
dec
or
jmp
add
add
aas
xor
sbb
lea
and
sti
sbb
ja
pop
sub
add
xchg
popf
pushl
jmp
js
mov
mov
jge
push
je
lea
arpl
xchg
gs
scas
sub
test
icebp
clc
sub
jmp
adc
rorl
dec
test
ljmp
stc
jecxz
roll
aad
jns
add
or
add
add
mov
push
or
jmp
dec
xchg
jo
jmp
mov
jecxz
jmp
jne
jmp
mov
jmp
sub
xor
add
add
xchg
cltd
clc
or
arpl
inc
or
andb
jmp
xor
inc
mov
ret
mov
mov
jmp
repz
mov
ret
jmp
inc
inc
and
push
push
mov
iret
pop
cmp
data16
add
or
ljmp
bound
or
and
jmp
add
add
jmp
inc
rolb
shlb
mov
inc
mov
jb
cmp
adc
insl
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
or
jmp
shlb
adc
add
add
jmp
test
repnz
rorb
mov
clc
mov
fdivrp
ljmp
add
sbb
fs
jmp
rorb
mov
sbb
push
adc
or
popa
mov
jmp
pop
aad
leave
jmp
addl
dec
enter
and
push
roll
shrl
ja
mov
or
jmp
out
notb
mov
and
jp
insl
hlt
pop
in
lret
push
movzbl
add
cmp
je
jmp
rcrb
test
aas
pop
test
pop
test
dec
mov
mov
cmp
cld
test
mov
add
dec
les
int3
aas
outsl
out
adc
dec
mov
lods
lret
inc
xchg
fstl
mov
mov
pop
adc
sub
add
add
outsl
add
add
outsl
add
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
add
add
add
add
add
add
fwait
dec
or
bound
add
pop
inc
and
jns
jmp
call
rorb
outsl
xor
or
or
sbb
add
mov
or
jmp
mov
das
mov
fcomps
je
push
mov
xor
test
jbe
jmp
lea
jmp
repz
insl
ficompl
pop
aas
lret
test
pop
test
jecxz
inc
out
xchg
insl
push
jmp
push
jmp
inc
jmp
jl
jg
jmp
imul
std
sbb
mov
hlt
pop
jmp
push
js
cmp
lcall
test
aad
sub
inc
shlb
push
jmp
adc
or
fmull
fistpl
stos
pop
scas
sbb
sbb
xchg
push
test
push
sti
movsb
dec
clc
sub
or
sbb
add
push
adc
outsl
xor
or
add
mov
jmp
shl
jmp
popa
inc
scas
pop
jmp
xor
and
dec
jge
push
and
mov
scas
mov
cmp
push
cmp
jbe
jmp
gs
jge
testl
sub
int
adc
adc
xlat
jb
jmp
add
jmp
xchg
push
mov
es
jmp
ret
rorb
icebp
jmp
inc
int3
inc
and
mov
sub
lds
add
sub
jmp
pop
aam
sub
in
jg
mov
test
test
pop
test
outsb
jp
loope
pop
cli
incb
icebp
jmp
or
pop
leave
pop
cmp
pusha
ja
ja
loope
jg
iret
mov
orl
lcall
inc
and
jmp
test
lods
mov
in
cld
push
je
ja
loope
xor
mov
adc
cld
ljmp
bound
add
and
jmp
xchg
jno
push
lahf
push
pop
xchg
mov
popf
pushl
mov
jmp
jecxz
adc
add
sbb
es
cs
dec
sbb
mov
mov
mov
andb
sub
jmp
cs
inc
mov
jle
insb
or
out
xchg
sbb
jno
xorb
nop
mov
enter
pop
scas
mov
mov
lock
lods
sub
xor
int
aam
fimuls
adc
jp
test
sbb
add
add
outsl
add
sbb
adc
add
pop
dec
sbb
add
add
add
add
add
add
test
add
sbb
dec
adc
ret
mov
ret
ss
jmp
les
mov
cltd
roll
add
mov
add
add
cld
xchg
cmc
add
and
pop
movsl
jp
mov
pop
adc
sub
adc
adc
pusha
repnz
pop
repnz
rolb
mov
call
jno
push
mov
es
rorb
add
add
insl
add
pop
pop
or
jmp
push
loop
jnp
dec
add
add
add
enter
or
jmp
subb
cmpsl
aaa
push
mov
shlb
cmp
xor
scas
insl
movsl
add
and
cmp
jne
addl
mov
jmp
lods
movsb
ret
fdivl
popa
jmp
jmp
jp
jo
loop
lods
cmp
sbb
clc
stc
stc
push
scas
movzbl
add
cmp
je
jmp
mov
pop
popl
jmp
add
add
push
jmp
cmpb
add
je
jns
jmp
jno
popa
add
cmp
push
roll
sarl
scas
mov
jmp
movb
dec
test
loope
adc
pop
mov
cld
jbe
push
lea
jmp
push
rolb
shlb
push
aam
sub
je
out
sbb
outsl
xor
ljmp
bound
or
and
jmp
xor
dec
lds
iret
sub
or
add
push
test
je
jmp
test
in
out
mov
jg
add
and
rcll
add
mov
jmp
push
mov
jg
dec
inc
int3
inc
and
popf
in
mov
movsb
test
jmp
jo
jno
jecxz
mov
orl
loope
in
jg
sbbb
xor
call
mov
mov
jmp
inc
rolb
sarb
push
xor
jns
mov
fstl
jns
test
jmp
xlat
push
ret
cmpsb
push
nop
xchg
aad
xor
push
iret
pop
cmp
aas
mov
imul
jmp
push
or
jmp
sub
scas
les
test
ficomps
in
or
jle
cmp
jbe
jmp
xor
add
rolb
jmp
sarb
jmp
sbb
stc
js
mov
mov
aad
int3
loop
inc
decb
or
or
sub
add
push
or
jmp
stos
jge
sti
push
testb
push
dec
iret
pop
cmp
and
push
mov
enter
mov
jae
jmp
ss
and
jmp
or
push
fstpt
or
fcoml
cmpsl
push
cmc
sub
adc
rorb
xorb
decl
cmp
jmp
inc
roll
aad
mov
lock
nop
in
or
fldpi
dec
jbe
jmp
es
xor
movsb
xor
xor
rorb
nop
mov
add
jmp
jmp
loop
loopne
jb
nop
pop
xchg
repnz
icebp
dec
pop
pop
in
cmp
jmp
out
and
cmp
mov
or
repz
les
mov
inc
mov
aam
outsl
and
add
add
outsl
sbb
add
mov
sbb
push
outsb
data16
lds
or
mov
shlb
int
rorl
shr
outsb
incl
add
sbb
lea
dec
cld
jmp
sbb
popa
rorl
mov
cmp
sub
andb
and
fsubp
jge
je
add
mov
gs
pop
dec
into
pop
cmp
jo,pt
push
sbb
xor
pop
mov
pop
int3
stos
adcw
add
inc
shll
dec
add
or
add
enter
or
jmp
sahf
imul
mov
cmp
jmp
mov
scas
adc
mov
fbld
jge
notl
pushf
cmp
test
inc
cld
mov
cmp
jb
jmp
jmp
out
mov
inc
or
mov
or
dec
rcll
xor
jmp
movsl
jns
js
mov
jmp
rcrb
fs
pop
mov
jns
pop
mov
shlb
and
adc
outsl
sbb
add
add
outsl
or
sbb
adc
or
pop
dec
pop
outsl
adc
or
or
or
add
add
or
add
sbb
add
or
or
add
add
or
add
or
or
or
add
in
or
bound
or
jb
jbe
loopne
loope
fbstp
jmp
or
cmp
fucomi
aas
mov
jmp
sub
push
ret
ret
sbb
aad
xchg
mulb
xchg
popa
loop
jb
mov
add
cmp
jae
mov
jmp
je
jbe
loopne
mov
mov
je
jmp
aam
xlat
mov
call
inc
orl
push
popa
nop
jb
sub
jnp
fsubr
xchg
mov
out
ja
xorb
pop
notb
sub
jmp
call
jmp
pop
cwtl
push
imul
add
aad
jbe
sub
add
or
outsl
or
add
outsl
add
add
outsl
add
add
add
outsl
or
add
sbb
adc
sub
add
add
mov
or
add
add
rclb
adc
bound
aad
insb
ficoml
xlat
lea
jmp
adc
adc
jmp
jl
xchg
cmc
add
add
shr
rcll
mov
mov
inc
mov
lods
pop
mov
sahf
dec
sahf
sbb
sbb
or
jmp
pop
or
jmp
sub
cwtl
add
bound
add
mov
ds
or
lea
add
pop
fisttpll
out
add
push
pusha
xchg
dec
mov
popa
ljmp
insb
or
loop
inc
and
sub
int
out
lea
push
movb
call
jmp
mov
in
jmp
pop
jmp
mov
shll
xchg
mov
leave
jo
pop
jp
and
pop
inc
push
lea
push
mov
call
jmp
sub
push
call
jmp
xor
pop
js
jle
call
cs
push
call
jmp
push
imul
mov
data16
xchg
outsb
movmskps
jmp
jmp
mov
mov
mov
mov
dec
xlat
inc
and
cmp
hlt
sub
add
sbb
add
mov
or
jmp
dec
add
add
add
adc
add
sub
add
sub
adc
add
mov
xor
adc
xchg
bound
add
add
repnz
or
jmp
cmp
jno
mov
xor
ret
jmp
push
xchg
arpl
mov
sbb
push
filds
mov
adc
pop
add
ret
inc
mov
test
out
leave
jmp
inc
jmp
test
std
or
cmp
fwait
and
sbb
add
jmp
rcrl
scas
pop
scas
test
mov
iret
adc
jmp
push
adc
mov
pop
roll
shll
in
clc
pop
jmp
daa
scas
cmp
mov
mov
pushf
push
xchg
pop
bound
enter
cld
insb
js
outsl
jmp
cmpsl
fstps
sub
jmp
mov
xchg
sbb
das
mov
xchg
sahf
test
cld
ljmp
bound
add
and
mov
xor
adc
add
add
ja
loope
out
mov
jmp
cmp
jp
bound
in
jg
lret
dec
aad
pusha
jmp
mov
jmp
mov
mov
das
lcall
fadds
mov
orl
incl
mov
xchg
adc
pop
popf
or
scas
cmp
mov
cmp
enter
sbb
and
popf
pushl
mov
jmp
leave
mov
popa
sbb
jmp
cmp
xor
es
popa
add
cmp
test
jmp
jo
jmp
iret
dec
ret
mov
sub
divl
cmpl
scas
sbb
cwtl
or
sbb
add
sub
repnz
adc
aam
push
dec
clc
sub
or
sbb
add
or
jmp
jg
out
push
lcall
lret
lret
ss
ret
stos
daa
mov
and
mov
frstor
test
pop
test
lret
mov
mov
sub
jmp
test
cltd
clc
or
cmpsb
jb
dec
ret
xchg
test
mov
sub
dec
or
or
or
sbb
add
sub
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
add
sbb
adc
sub
inc
data16
jmp
add
add
jmp
int3
pop
int3
stos
data16
jo
loop
int
repz
shrb
add
test
jmp
mov
lahf
out
imul
mov
jmp
add
jmp
push
push
xor
jg
roll
aad
dec
fimull
fisubrl
xchg
lcall
jmp
push
insl
hlt
pop
mov
mov
mov
mov
jnp
mov
jmp
out
jbe
cmpl
out
jl
negb
aad
fnstcw
add
adc
add
add
mov
inc
lea
fwait
or
jae
dec
cmp
jmp
mov
lods
addr16
adc
or
outsl
sbb
aad
jb
inc
sub
ljmp
add
add
sbb
add
mov
pusha
or
jmp
rclb
mov
jmp
addl
setg
or
xor
mov
push
je
popa
jmp
jmp
cmpb
add
adc
push
movsl
test
jns
lea
jmp
rolb
mov
hlt
rolb
mov
out
cmp
or
inc
and
add
add
add
add
add
sub
add
adc
lods
and
aas
and
sarb
pop
fisttpl
fisttpll
lret
inc
aad
dec
push
fstpt
mov
inc
mov
dec
fimuls
dec
jge
arpl
cmc
inc
pusha
mull
icebp
push
leave
pop
int
addr16
scas
cmp
pushf
sti
push
pop
fisttpll
out
mov
add
jmp
cmpsl
aaa
push
mov
inc
mov
lahf
or
jg
mov
push
int
and
aaa
leave
scas
push
call
stc
notl
filds
mov
cmpsb
or
ljmp
inc
fidivrl
cmp
inc
or
jle
divl
xorb
sbb
xchg
jb
jp
out
adc
push
push
fldt
imul
push
mov
xchg
jb
mull
icebp
or
outsl
lcall
mov
push
dec
mov
dec
sub
cwtl
or
bound
or
sub
jne
or
jmp
inc
sub
add
add
outsl
sub
add
and
add
push
adc
add
mov
inc
or
mov
or
add
add
ss
jmp
sbb
mov
out
mov
ret
push
mov
adc
xor
sahf
sub
and
cmc
notl
adc
daa
jae
jg
jmp
and
xor
jb
xchg
or
pusha
notb
pop
cmp
push
xor
repnz
mov
repz
test
xchg
lock
lahf
sbb
xchg
add
data16
notl
xchg
repnz
xor
and
icebp
popa
add
adc
mov
mov
jle
call
xchg
mov
mov
int3
aas
mov
mov
test
jge
cmp
imul
in
sbb
pop
mulw
icebp
push
loop
in
jle
loope
subb
add
add
add
add
add
mov
push
jmp
mov
in
sbb
jmp
xchg
push
pop
xchg
add
sbb
jle
fcompl
xchg
lea
dec
sub
xor
push
pop
xchg
jb
jno
ja
xorb
add
std
or
xchg
adc
in
sbb
xor
ss
mov
dec
mov
inc
mov
add
inc
and
ja
fimuls
xor
dec
fdivrl
fidivrl
xor
scas
sbb
mov
lret
lret
test
adc
cwtl
push
imul
or
push
pushf
sti
push
aad
pop
into
test
and
nop
setg
or
outsl
mull
icebp
js
adc
in
sbb
and
int
and
cmp
es
or
xor
or
or
sbb
add
inc
sub
add
add
adc
or
add
enter
add
mov
inc
or
mov
dec
mov
bound
or
add
sbb
jmp
daa
sarb
push
lds
outsl
mov
xorl
add
sbb
mov
js
jp
jne
mov
leave
inc
xlat
mov
stos
lahf
push
test
push
in
scas
and
out
adc
cmp
xchg
add
push
sub
stos
aas
scas
lret
cli
outsl
lcall
pop
cmp
jno
jecxz
lods
cmp
test
pop
test
push
lcall
imul
pop
jp
push
mov
mov
pop
xchg
repnz
fldl
dec
movsb
cmpsb
cmp
fwait
or
sbb
xchg
jb
inc
and
xor
rcll
sub
push
lret
mov
mov
pop
cmpsb
and
cmp
and
mov
cmpsb
cs
orb
inc
sub
xor
or
or
or
or
inc
or
add
inc
or
or
add
sbb
adc
sub
sbb
add
mov
push
adc
mov
bound
or
jb
or
jmp
lods
pop
scas
and
cwtl
push
imul
into
pop
cmp
jno
inc
and
push
pop
repz
xchg
outsb
fistpll
addb
ja
jbe
loopne
aam
mov
test
ret
fistpll
fs
sbb
adc
and
or
pop
iret
stos
pop
loopne
cmp
xlat
inc
and
aaa
xchg
add
add
hlt
sub
cwtl
add
bound
add
hlt
sub
cwtl
or
bound
or
mov
or
jmp
mov
or
jecxz
push
test
push
loopne
pusha
notb
mov
jno
xorb
mov
inc
mov
imul
jl
push
cld
sbb
jb
xchg
xor
pop
fisttpl
fisttpll
jl
add
xor
mov
lahf
add
lahf
or
mov
orl
xor
xor
or
data16
xchg
outsb
sub
inc
mov
in
jmp
out
jo
loope
out
mov
stos
xor
mov
gs
adc
stos
inc
les
int3
add
mov
repz
popf
or
jae
xchg
cli
outsl
sub
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
pop
outsl
adc
add
outsl
add
add
fildl
add
add
bound
add
inc
push
xor
sbb
inc
and
sub
push
mov
call
or
in
idiv
jb
xchg
lds
push
cmpsl
fistpl
scas
pop
cld
iret
inc
mov
xchg
adc
push
imul
sahf
or
cmpsb
adc
sbbl
xor
add
out
adc
inc
stc
jae
xchg
add
std
gs
pushf
outsl
scas
sbbl
inc
fisttpll
out
sti
lock
bound
adc
iret
push
mov
pop
cmp
add
jecxz
adc
movsl
xor
or
loop
pop
loop
addb
repz
sti
adc
js
sub
adc
add
das
mov
add
out
adc
cmp
mov
outsl
sub
add
add
adc
sub
jmp
mov
pop
or
jmp
insl
or
jmp
add
add
bound
or
jmp
add
add
outsl
and
add
and
jmp
aas
imul
adc
dec
jae
ja
loope
loope
loopne
jb
iret
pop
int
addr16
dec
fstpt
mov
cs
ds
aas
pop
test
pop
repnz
xchg
push
xchg
repz
test
aad
rorl
mov
in
jle
push
xchg
add
add
dec
fstpt
cltd
clc
or
out
jae
xchg
insb
in
bound
shlb
dec
mov
mov
xchg
fwait
sbb
mov
fcoms
cmpsl
push
mov
jno
pop
aad
sub
cmp
inc
xlat
mov
mov
je
jno
insb
or
rcrb
and
adc
ret
push
lds
dec
sub
outsb
ret
push
mov
lods
mov
hlt
out
in
jle
lea
mov
sbb
mov
sub
push
loope
inc
inc
and
ljmp
add
add
sbb
add
sub
cwtl
or
or
push
add
sub
add
jmp
fdivrl
lcall
out
sbb
das
fidivl
sub
outsl
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
sbbl
jb
lods
sub
inc
lds
iret
and
shll
jmp
dec
iret
pop
cmp
sub
lret
add
sahf
imul
jmp
jge
aam
int3
stos
xchg
data16
cmc
adc
mov
cmp
sub
dec
adc
fs
popf
insb
mov
int
gs
lret
pop
iret
stos
pop
sar
outsb
cld
fwait
jbe
test
scas
leave
cmp
inc
in
setg
push
push
scas
aas
scas
lret
mull
nop
arpl
fcoms
cmpsb
push
hlt
sbbb
out
sbb
insl
mulb
sbb
in
sbb
jge
negl
lock
test
jge
or
fsubl
lret
xor
scas
inc
push
rolb
shlb
dec
mov
imul
cmp
or
jne
insl
hlt
pop
test
fistpll
cmp
cwtl
add
bound
add
push
or
jmp
jecxz
insb
jmp
push
in
sbb
data16
xchg
outsb
leave
ds
inc
mov
stos
and
das
mov
ja
jnp
in
pop
int
int3
stos
iretw
pop
into
pop
cmp
addr16
add
insb
or
mov
lods
cmp
jo
xorl
mov
movsl
cmp
pop
cmp
add
mov
add
call
es
push
lds
std
imul
insl
adc
mov
lret
aad
sub
pop
mov
cmpsl
ret
ja
push
cld
adc
leave
pop
cmp
and
jge
notl
pop
clc
jge
je
push
test
xchg
repnz
mov
lahf
cli
or
rcrb
scas
pop
test
mov
jae
push
pop
lret
scas
pop
test
dec
fnstcw
or
aam
sub
adc
and
mov
jbe
jnp
in
inc
jmp
jmp
push
lret
cmc
cmpsb
xor
mov
dec
mov
addr16
and
ret
xchg
mov
and
pop
lods
dec
inc
fisttps
shll
iret
push
mov
popf
in
xchg
gs
sbb
and
cmp
jecxz
push
in
add
sti
adcl
test
int3
inc
and
mov
in
dec
add
or
add
lods
add
push
adc
add
mov
push
movsb
mov
mov
add
mov
adc
sbb
jo
dec
fdivrl
push
pop
repnz
adcb
sub
adc
mov
jg
sub
mov
and
mov
mov
arpl
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
mov
jg
adc
fcomps
scas
pop
cld
mov
adc
shlb
push
stc
imul
cmp
sbb
add
pop
sub
push
mov
dec
sub
and
in
sbb
nopl
pop
int3
stos
data16
jnp
in
insb
sbb
sbb
insb
repz
xorl
leave
aas
movsl
xor
adc
in
sbb
xor
mov
movsl
int3
aas
enter
sti
push
mov
int3
es
inc
mov
adc
mov
rcll
mov
call
addl
shll
inc
and
data16
mov
mov
and
imul
push
lahf
push
jno
je
out
inc
mov
pop
enter
pop
daa
jb
ljmp
jmp
pushf
and
or
scas
push
cmp
jmp
mov
cwtl
decl
hlt
xor
xchg
mov
jecxz
cli
popf
insb
mov
mov
jmp
mov
jmp
int
push
call
jmp
pop
fisttps
fsts
shl
sub
incb
add
fwait
in
lcall
popf
pushl
mov
jmp
gs
adc
or
jmp
mov
mov
jmp
andb
jmp
ror
and
popf
mov
sbb
jmp
xor
sub
xor
jo
hlt
mov
hlt
mov
or
lret
addr16
bound
cmc
jnp
dec
mov
jmp
and
adc
mov
call
jmp
outsb
out
adc
or
add
add
add
pop
in
pushl
mov
sub
or
cmp
jmp
call
jmp
pop
xlat
inc
and
js
jp
jp
xchg
cltd
roll
add
int3
popf
push
jno
jmp
push
fdivl
in
add
cmp
jne
jmp
pop
pop
popf
mov
jmp
call
jmp
dec
rclb
addr16
sub
sti
insl
popa
mov
ret
es
int3
popf
push
lret
lret
ret
sldt
repz
mov
add
add
jmp
movzbl
jmp
dec
lock
inc
pop
leave
pop
cmp
pusha
push
lret
sbb
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
mov
add
imul
dec
popl
jmp
icebp
gs
pushf
outsl
fdivr
push
lahf
push
pop
int
and
bound
xchg
mov
popf
int3
popf
pop
les
int3
packssdw
add
adc
cmp
lret
pop
ds
fistpl
fidivrs
push
jl
mov
aad
add
dec
push
mov
jmp
inc
fisttpll
out
push
int
and
aas
pop
xchg
mov
mov
and
jmp
xor
push
out
xchg
jnp
jmp
mov
mov
stc
imul
cmp
inc
xor
mov
std
pop
cmp
je
popa
mov
jmp
cmp
mov
and
notb
outsl
ja
sub
subb
adc
sub
ret
adc
jmp
mov
xchg
and
inc
mov
mov
jmp
stos
sub
xchg
faddl
fmuls
cmpsl
ljmp
filds
cwtl
adc
or
push
call
repz
cmc
add
xor
sub
insl
mov
scas
leave
cmp
fisubrs
outsl
xor
add
or
or
or
add
add
add
sbb
add
or
or
add
add
or
xchg
adc
or
out
stc
ret
jmp
sbb
mov
dec
mov
nop
arpl
jge
arpl
cmc
inc
call
cmp
jne
mov
mov
pushf
jmp
or
imul
iret
pop
iret
stos
pop
mov
cmp
dec
add
call
jne
jo
loop
mov
mov
das
lcall
pushf
push
call
cld
data16
xchg
outsb
lods
push
roll
aad
idivl
std
xchg
or
icebp
push
add
mov
fnstenv
je
mov
and
pushl
addr16
ss
lods
cmp
pop
jmp
jns
outsl
or
out
mov
add
add
xor
xchg
add
hlt
push
cld
add
pop
lret
scas
pop
mov
pop
fisttps
jnp
mov
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
popf
push
pop
jmp
cli
jle
mov
daa
sarb
push
jecxz
push
in
bnd
mov
stc
clc
les
mov
jmp
popf
pushl
jmp
repz
mov
mov
lods
mov
mov
cmp
cs
or
pop
mov
test
push
lds
or
pop
adc
filds
out
or
jmp
pusha
repnz
pop
repnz
cmp
sub
add
xchg
xchg
outsl
xor
add
add
add
add
add
outsl
or
add
outsl
or
or
add
outsl
add
add
sbb
adc
xor
add
add
mov
dec
mov
bound
add
add
mov
or
jmp
or
cmp
or
mov
jmp
xor
and
jmp
xor
fdivl
in
push
int3
inc
and
shr
inc
mov
andb
sub
jo
mov
jmp
adc
rorb
mov
push
xor
sub
mov
jmp
outsl
sub
addl
jmp
lea
and
lcall
ret
cmpsb
push
lcall
inc
adc
mov
stos
pop
orl
jne
jmp
dec
mov
jmp
jle
mov
lret
inc
mov
sbb
cwtl
sbb
repz
add
or
or
sub
add
jae
adc
xor
je
jmp
mov
jmp
addb
or
add
jl
fs
or
clc
leave
ds
cmp
sarl
jle
imul
sbb
xchg
add
jne
mov
inc
mov
pop
test
rorl
mov
add
jmp
push
fdivl
in
shr
inc
stc
call
andb
add
add
ret
add
jo
xorl
jmp
lock
pop
add
bound
add
xor
jmp
test
sbb
fwait
jbe
aas
inc
js
imulb
dec
sbb
add
add
sub
add
outsl
or
or
add
or
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
xor
jmp
jmp
mov
xor
neg
mov
adcl
cmp
mov
das
dec
mov
dec
lea
jmp
mov
mov
push
jmp
cltd
pop
xchg
repnz
call
xchg
jmp
cli
ss
aas
pop
test
cwtl
adc
add
cmpsl
decl
fsubrl
jmp
pop
jecxz
push
in
jp
jb
adc
jmp
xchg
jp
imul
out
jno
repnz
jmp
gs
pop
loop
iret
dec
fnstcw
mov
and
dec
pop
mov
jb
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
mov
clc
jb
xchg
je
sar
jmp
jbe
insb
or
loop
mov
test
jns
jmp
pushl
xorb
and
xor
push
lds
mov
lods
mov
loop
movsl
xor
mulb
push
bound
sar
add
xchg
popf
pushl
jmp
pop
roll
aad
repz
fldl
add
add
pusha
notb
int
addr16
stc
imul
loope
lcall
pop
mov
rcll
add
add
pop
lret
scas
pop
in
cltd
or
in
mov
adc
jbe
sbb
or
or
cld
ljmp
bound
or
and
jmp
insl
mov
outsb
or
adc
jne
jmp
sub
mov
cmpl
dec
mov
inc
mov
lock
std
test
gs
push
hlt
sub
ret
jmp
addl
jmp
sub
cmp
mov
out
adc
pop
mov
cltd
clc
or
insl
stos
jo
mov
and
jmp
pop
fdivl
in
jne
popa
add
punpckhbw
popf
jbe
movzbl
jmp
ja
add
daa
and
xor
jae
jmp
push
in
push
dec
int
and
cmp
fsts
dec
popa
xchg
mov
ret
and
push
pushl
cmpl
int
and
jb
int
stos
lea
rclb
cmp
or
test
mov
insb
loop
je
xchg
add
mov
add
mov
or
jmp
ret
test
jmp
rolb
add
jmp
mov
mov
and
xlat
int3
popf
add
mov
mov
xchg
jmp
lea
jmp
sbb
and
cmp
or
lret
inc
fisttpl
fnsave
mov
gs
and
push
pushf
push
xchg
repz
int
push
mov
jmp
pop
mov
gs
jbe
xlat
inc
and
xor
xor
mov
add
jmp
in
call
cmp
xchg
mov
inc
outsl
sub
add
add
outsl
add
sbb
add
or
add
or
sbb
add
add
add
add
add
mov
or
jmp
jmp
mov
scas
aas
pop
test
enter
inc
mov
movsl
jg
outsl
or
stc
add
or
in
lock
bound
outsl
cwtl
cs
sbb
add
sahf
insl
and
adc
ret
jmp
push
jmp
aam
dec
sub
push
pop
jmp
addr16
bound
pop
and
xor
mov
jb
xchg
cmc
add
dec
out
mov
test
je
mov
imul
cmp
sbb
jmp
fcoms
lods
pop
mov
push
mov
sub
jmp
cmp
in
jge
je
xor
fwait
or
xor
aaa
notl
jmp
ret
push
shll
mov
or
and
dec
mov
add
push
lds
inc
mov
das
mov
jne
sub
add
add
outsl
and
add
and
jmp
dec
out
stc
popa
icebp
nop
arpl
or
andb
sub
jmp
dec
and
add
ja
daa
mov
and
jnp
jno
jecxz
setbe
sahf
jbe
ret
stc
popa
jmp
mov
jmp
loop
adc
add
lods
cmp
adc
dec
fdivrs
xchg
popf
pushl
mov
jmp
hlt
stc
cmp
jmp
addl
jmp
clc
js
mov
jp
imul
js
ljmp
jmp
jne
jmp
mov
jmp
fstpl
scas
pop
lea
dec
mov
mov
cwtl
dec
mov
inc
adc
jae
mov
jmp
adc
into
dec
fstpt
and
mull
outsl
xor
add
add
outsl
add
add
outsl
or
add
outsl
or
or
add
outsl
add
add
sbb
adc
xor
jmp
add
add
xor
imul
movsl
int3
aas
jmp
dec
mov
jmp
hlt
jg
mov
xchg
or
dec
fdivrs
add
or
mov
add
iret
notl
mov
add
and
or
insl
hlt
pop
lods
sbb
cmp
adcl
test
inc
cmp
je
popa
mov
jmp
cmp
ret
jmp
dec
fimuls
push
adc
xchg
mov
ds
add
call
leave
fwait
xchg
test
sub
add
stos
xlat
lcall
in
into
push
les
jecxz
jne
mov
mov
add
jmp
inc
fisttpll
out
fcomps
scas
pop
xchg
sahf
and
add
sub
xor
pushf
add
add
add
push
xor
adc
or
mov
js
stc
bound
or
add
lock
or
jmp
daa
int
sub
sub
notl
outsl
xor
add
add
adc
xor
jmp
add
call
pop
fisttpll
out
lret
cmpsb
push
test
and
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
xchg
sahf
and
and
jmp
cmp
push
jb
outsb
or
or
repnz
dec
mov
jmp
fbstp
fbstp
jg
jmp
add
push
adc
test
add
add
jmp
push
jecxz
push
in
jge
pusha
pop
repnz
roll
rcll
mov
in
pushf
jmp
push
jne
out
dec
add
sub
outsb
cld
fwait
jbe
or
adc
add
call
add
sbb
jmp
je
lea
insb
or
mov
cmp
push
mov
pushl
jmp
pusha
jmp
ljmp
lret
popa
jmp
mov
jmp
add
mov
fcomi
jae
xchg
hlt
jae
xchg
aaa
clc
outsl
xor
add
add
sub
add
mov
or
jmp
sub
or
or
or
or
add
or
add
or
sbb
add
or
add
add
add
push
sbb
add
mov
mov
add
add
xor
mov
ret
dec
mov
add
add
mov
jmp
fiaddl
dec
lret
int
shlb
jo
dec
jne
jnp
adc
lock
jo
jmp
in
outsb
cld
fwait
jbe
clc
in
cmpl
add
jmp
inc
lret
pop
ds
xchg
sbb
out
jl
testb
pop
movzbl
jmp
mov
in
aaa
mov
inc
mov
addl
ds
xchg
scas
leave
cmp
jmp
add
jmp
pop
jl
je
jmp
push
jbe
loopne
arpl
xchg
xorl
and
pusha
xorb
add
add
cld
ljmp
bound
add
and
jmp
pop
out
push
test
push
mov
roll
add
outsl
and
add
and
jmp
jno
enter
push
xchg
enter
daa
add
add
jmp
add
add
jmp
scas
and
movsb
cmp
outsb
subl
outsl
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
mov
add
add
sub
pop
iret
pop
cmp
data16
jge
negl
addr16
dec
fisttpl
mov
pusha
pop
repnz
aam
jo
xorl
pusha
mov
mov
in
imul
sub
jb
js
mov
add
and
dec
jo
fs
add
mov
gs
inc
movsl
daa
mov
and
loope
cli
popf
insb
test
cli
pop
mov
gs
jbe
cmpsb
xor
scas
dec
movsl
xor
lea
fisttpl
add
jmp
lea
jmp
mov
scas
lret
pop
aad
sub
pop
cmp
daa
inc
mov
ret
push
dec
sbb
add
add
xor
add
add
mov
orl
movsl
xor
fcoml
add
sbb
call
popf
or
fisttps
fsts
rolb
sarb
shrl
cmp
add
sti
sar
ds
cmp
mov
inc
aam
sub
xchg
adc
fdivs
shrb
cmp
add
xlat
sar
ljmp
dec
fistpll
jle
call
in
sbb
jge
jnp
in
add
fbstp
scas
js
outsl
sbb
ljmp
bound
or
and
add
add
mov
fwait
push
insb
bound
or
or
jmp
sub
mov
cltd
clc
or
cmpsb
sub
jmp
addb
repnz
add
cmp
push
lds
inc
mov
mov
aam
sub
and
inc
adc
arpl
jns
jmp
cld
jnp
mov
fcoml
cmpsl
push
cmc
out
cltd
push
push
cmpsl
addr16
xchg
inc
rolb
shlb
push
xchg
repz
cmpsl
cmp
push
ret
ret
pop
repnz
fs
add
push
mov
es
loope
ljmp
mov
mov
jl
jne
data16
pop
int
addr16
es
or
xlat
dec
fidivrs
jae
in
inc
rclb
sub
lret
mov
cs
mov
mov
cmc
fldcw
push
cld
ljmp
bound
add
and
jmp
cmp
fwait
insb
out
lock
bound
pushf
outsl
dec
push
xor
sub
jg
mov
or
sbb
js
cld
xchg
cmc
add
mov
lret
cli
outsl
adc
adc
add
add
outsl
or
sbb
adc
or
pop
dec
sbb
add
add
add
add
add
add
mov
or
bound
add
sub
scas
aas
pop
test
add
push
rclb
push
in
adc
out
jg
jmp
testb
cli
dec
dec
fdivl
in
sti
insl
std
test
jle
jns
jmp
mov
mov
mov
inc
mov
adc
or
jge
negl
inc
sar
sti
sahf
insl
in
rclb
mov
lods
lret
inc
scas
sub
leave
dec
fidivrs
leave
test
cmpsl
fistps
test
push
lods
and
pop
sbb
dec
lret
pop
ds
aas
mov
dec
mov
pop
stos
pop
dec
fidivrs
jae
in
push
jecxz
push
in
lcall
adcb
xorb
mov
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
ljmp
je
dec
fimuls
push
adcb
loopne
mov
jmp
mov
sahf
in
out
jno
mov
mov
and
push
xor
and
movsl
xor
out
jg
jmp
leave
cmp
sbb
nop
pop
pop
xchg
or
je
daa
mov
and
pop
fdivl
in
jae
imul
add
test
gs
pushf
outsl
cwtl
loopne
sti
sahf
insl
andl
and
inc
sub
rcrb
test
sub
dec
idivb
mov
fcoml
mov
lret
sahf
pop
jle
push
dec
or
add
add
lods
add
xchg
test
adc
push
adcl
iret
dec
outsl
xor
add
add
add
add
add
outsl
or
add
outsl
or
or
add
outsl
add
add
sbb
adc
xor
add
add
mov
push
add
add
subb
push
aaa
ret
daa
mov
and
int
repz
lock
lret
lods
cmp
cmp
dec
fdivrs
pop
and
jb
arpl
xchg
mov
mov
shll
lret
out
jo
xchg
mov
sbb
enter
loopne
jb
enter
dec
mov
mov
rolb
shlb
pop
xchg
pop
bound
jge
pop
lods
sub
movsb
ret
ds
push
jecxz
push
in
jnp
mov
xchg
sbb
push
lahf
push
pop
xchg
pop
bound
inc
mov
ds
inc
mov
stos
and
lahf
adc
notl
int3
pop
repnz
fs
sti
imul
push
shrl
xor
pushf
add
add
add
mov
adcb
jecxz
scas
xor
subb
adc
sbb
add
add
mov
dec
out
bound
or
or
jmp
stc
scas
mull
nop
arpl
stc
insb
loop
je
and
jle
jnp
in
or
adc
loope
jae
sbb
dec
fdivrl
or
push
dec
int3
inc
and
popf
in
std
fwait
sbb
push
ret
cmpsb
push
lods
adc
mov
int3
fsubs
xchg
gs
pop
iret
stos
pop
xchg
orb
cli
or
mov
lods
lret
inc
mov
pop
xchg
adc
loop
pop
loop
lods
daa
mov
and
ds
inc
mov
sub
adc
cmp
and
add
call
jmp
int3
inc
and
repz
gs
jno
xorb
sahf
or
cmpsb
gs
jnp
in
or
inc
and
cmp
enter
inc
mov
cli
imul
insl
in
lret
dec
fistpll
cmp
je
or
jmp
xchg
adc
adc
add
xchg
add
jp
mov
dec
into
pop
cmp
sub
filds
push
jno
jne
xor
fmuls
fsubrs
data16
cmc
adc
jae
in
mov
into
and
pop
xchg
repnz
mov
stc
cmp
pop
pusha
repnz
pop
repnz
pop
lret
scas
pop
repnz
mov
push
loopne
dec
and
add
ljmp
bound
add
and
jmp
pusha
leave
imul
testb
dec
in
out
jo
adc
pushf
xor
or
xchg
jo
js
mov
mov
lds
dec
sub
pop
push
enter
dec
mov
lea
pop
cmp
in
jg
inc
les
int3
sub
roll
push
xor
pop
sub
pop
fmuls
fdivs
jne
insl
hlt
pop
test
shlb
repz
gs
jp
jp
mov
shll
hlt
xchg
outsb
mov
jo
lea
xchg
icebp
add
lahf
sub
push
xor
loopew
out
jno
jae
jo
loop
or
sub
jmp
in
je
xor
inc
and
jbe
loop
pop
loop
fildl
mov
mov
mov
jl
jne
insb
mov
jno
lods
rorb
or
or
sbb
or
dec
add
add
add
add
or
outsl
or
add
outsl
add
push
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
sbb
add
outsl
add
sbb
add
add
lea
add
add
mov
or
bound
add
inc
fimull
ficompl
xchg
add
sahf
sbb
inc
and
sbb
jle
mov
mov
xor
scas
dec
cmp
sub
jge
lods
lret
inc
mov
test
ficoml
mov
test
cmp
push
dec
add
add
add
insl
add
mov
fstpl
scas
pop
mov
dec
mov
lods
or
bound
fwait
decb
stos
shlw
mov
sbbl
xorb
int3
inc
and
jle
call
mov
repnz
rclb
addr16
pop
loop
mov
add
add
bound
or
jmp
cmpsl
xchg
push
pushf
sti
push
hlt
pop
lds
iret
daa
loop
jmp
hlt
push
cld
jnp
and
rcll
mov
sbb
ret
push
lds
je
imul
push
adc
push
inc
and
or
insl
hlt
pop
lock
mov
test
jmp
push
in
sbb
xchg
add
jno
insb
or
loop
mull
icebp
or
or
int3
inc
and
xor
popa
mov
cwtl
adcb
loope
cmpsb
add
data16
dec
xor
and
and
add
sbbl
sbb
pop
jp
push
je
jge
notl
xchg
or
popa
icebp
nop
arpl
jp
add
jp
mov
lods
test
mov
cwtl
push
imul
arpl
mov
mov
adc
add
mov
mov
adc
sbb
pop
xchg
add
fs
push
push
xor
bound
or
add
push
adc
add
mov
or
mov
fwait
mov
bound
add
add
mov
adc
mov
stos
into
cmp
fildll
fnstcw
imul
sbb
xchg
add
into
pop
cmp
and
popa
enter
push
cmpsl
jno
pop
dec
add
or
or
sbb
or
add
mov
or
jmp
rolb
setg
or
xor
outsb
add
push
lds
push
scas
pop
and
and
add
and
js
xchg
sub
sub
cwtl
add
bound
add
mov
aas
or
mov
add
add
add
jmp
sbb
mov
jb
jle
call
adc
lods
lret
inc
lods
mov
enter
xchg
popa
call
lock
mov
and
cwtl
sbb
jg
mov
fistps
stos
pop
cltd
out
notl
xlat
mov
mov
negb
add
adc
sub
cmp
dec
jae
push
cld
xchg
cmc
add
and
dec
fdivrs
cmp
or
jo
xorl
or
dec
sti
cmp
xor
std
insl
hlt
pop
lods
xchg
or
out
jl
notb
movsl
xor
mull
icebp
sbb
mov
imul
insl
cmpsb
mov
add
mov
filds
mov
enter
icebp
add
or
add
insl
add
push
push
add
add
mov
jno
nop
bound
or
add
lcall
mov
xchg
adc
push
xlat
inc
and
aaa
mov
cmpsb
fs
pop
loop
stc
jle
mov
push
cmpsl
push
or
ficoml
mov
fwait
decb
push
mov
stos
pop
xchg
or
cmpsl
sub
inc
shll
xor
add
xchg
sub
test
pop
test
xchg
pop
xchg
repnz
lret
sti
imul
dec
mov
mov
xchg
ja
loope
adc
push
add
xor
sbb
mulps
push
xor
and
mov
lds
lahf
add
cmp
es
cs
and
and
dec
sbb
or
fs
jbe
cmpl
es
cmp
bound
add
add
mov
lea
adc
rcll
lods
pop
test
movsb
cmp
inc
rcrl
stos
pop
xchg
cmp
jo
outsb
or
sbb
das
mov
mov
inc
mov
leave
inc
aam
dec
lcall
cwtl
add
ljmp
bound
add
and
jmp
js
mov
xchg
lock
lock
aam
push
xor
data16
add
add
add
sub
cltd
xchg
or
jmp
xchg
fmull
movsb
push
cld
xchg
add
pusha
mull
icebp
push
mov
mov
sbb
inc
jmp
movsb
cmp
sbb
jb
in
mov
mov
int3
inc
and
jge
negl
jecxz
call
push
ret
cmpsb
push
aam
aam
sub
pop
cmp
push
roll
inc
stos
xchg
push
test
push
imul
jae
xchg
or
ja
stos
cmp
jl
cmp
cs
add
jno
xorb
adcb
andb
push
movsl
push
orb
adc
shlb
xchg
gs
mov
xchg
pop
rorl
add
into
pop
int3
stos
data16
xor
add
push
inc
add
outsl
add
adc
sub
jmp
mov
icebp
data16
xchg
outsb
push
push
xor
jns
pop
enter
ja
arpl
cmc
xor
ja
loope
dec
rolb
sarb
inc
fimuls
push
das
mov
inc
mov
je
jns
jmp
mov
sahf
stc
or
adc
xor
gs
sbb
lcall
or
aas
scas
lret
cmc
jo
xorl
cmpl
orb
stc
or
jl
imul
or
inc
mov
or
or
sbb
or
add
mov
pushf
or
jmp
mov
inc
pop
inc
scas
shrl
dec
sbb
add
add
mov
jmp
sbb
adc
and
xchg
std
insl
std
test
ss
cmp
add
inc
sub
insb
aaa
cmpsb
xor
scas
pop
lret
xchg
fs
das
mov
test
sub
pusha
notb
push
aaa
ret
and
repz
lahf
push
call
stc
flds
mov
leave
sub
jl
aad
sub
xor
popa
xchg
decl
mov
jns
jbe
jbe
cmpl
sub
es
cs
sbb
xchg
in
idiv
jnp
mov
xchg
push
mov
es
cmp
mov
jecxz
xchg
pop
bound
arpl
icebp
add
push
test
mov
cli
push
lahf
push
jle
jge
negl
notb
js
ljmp
mov
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
dec
fisttpll
out
stc
out
push
adc
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
mov
jle
adc
add
imul
loope
adc
and
push
cld
push
jno
jg
jmp
test
lret
scas
pop
fsubrl
imul
jl
add
sbb
aad
int3
rcll
mov
in
jle
add
pop
fisttpll
out
loope
sti
sahf
insl
sahf
jns
mov
insl
in
sbb
push
and
clc
jo
xorl
dec
mov
lock
out
pusha
notb
jne
out
das
fcoml
mov
dec
fisttpl
fnsave
popa
icebp
nop
arpl
add
fimuls
mov
mov
xchg
jb
cmp
add
pop
xchg
or
test
jge
outsb
fwait
add
sub
add
jne
dec
add
or
add
insl
add
mov
or
jmp
fcompl
sub
jp
jp
cmpsl
and
js
outsb
or
adc
outsl
xor
or
add
mov
jmp
xor
add
or
or
or
add
outsl
add
add
outsl
add
add
add
outsl
or
add
sbb
adc
xor
jmp
adc
les
mov
es
mov
mov
xchg
imul
add
add
sub
lss
scas
leave
cmp
lcall
pop
iret
stos
pop
xorl
or
hlt
push
fisttpll
out
out
notl
popl
xchg
lock
or
fwait
setg
or
stos
add
outsb
or
dec
out
in
jg
jg
jg
jmp
mov
out
mov
sub
test
pop
test
loopne
jmp
add
jp
jp
mov
test
push
cltd
daa
mov
mov
sahf
stc
or
mov
stos
jecxz
icebp
nop
arpl
sub
test
xchg
lock
pop
fmuls
fmuls
xlat
push
shll
lods
pop
mov
pushf
sti
outsl
xor
or
or
adc
add
push
adc
add
mov
and
adc
or
add
add
jmp
push
mov
stos
dec
lea
fwait
decb
adc
adc
dec
sub
inc
mov
xchg
repz
fidivl
clc
inc
leave
pop
cmp
outsb
outsl
add
dec
frstor
jbe
xor
add
add
add
outsl
and
add
and
jmp
add
add
add
outsl
and
or
and
add
add
mov
or
add
add
andb
cltd
push
mov
fdivrl
sub
push
mov
jo
js
ljmp
cmp
jb
xchg
xchg
mov
es
aaa
scas
aas
pop
test
lea
sbb
inc
lds
iret
and
call
cmpsb
push
mov
adc
movsl
xor
inc
xlat
mov
mov
popf
jae
adcb
xorb
sub
and
or
data16
xchg
outsb
popf
jo
insb
or
mov
call
sbb
sub
push
aaa
ret
aaa
cmpsl
ret
cmp
pop
int3
inc
and
insb
or
scas
xchg
add
hlt
push
cld
push
xchg
add
dec
fdivrs
adc
add
bound
add
xor
jmp
jg
fwait
add
dec
fidivrs
mov
sbb
xorb
adc
pop
repnz
lods
jecxz
notb
scas
leave
cmp
je
imul
push
mov
shll
jo
loop
pop
xchg
add
fs
push
xor
es
jle
test
xor
jne
xchg
cmc
add
jbe
outsb
or
pop
xchg
pop
mov
testl
sbb
pop
dec
fmuls
fdivs
mov
gs
and
jg
xor
adc
dec
jecxz
push
in
cwtl
adc
push
xchg
repz
int
setg
or
outsl
cmc
gs
pop
mov
ret
imul
push
int3
inc
and
mov
push
les
shll
xor
push
pop
add
bound
or
add
mov
xchg
or
jmp
notb
stos
xor
xlat
inc
and
or
push
add
add
outsl
and
or
and
jmp
add
jbe
popa
add
sbb
pop
cmp
cmp
inc
into
pop
cmp
xor
jmp
clc
outsb
or
pop
mov
out
adcb
addb
notl
mov
and
cltd
or
insb
loop
je
adc
cmc
popa
icebp
nop
arpl
or
enter
jg
push
mov
adc
inc
dec
rolb
shlb
push
enter
and
pop
cmp
jns,pt
jne
out
push
push
pop
fisttpll
out
mov
cmpsl
ret
xchg
push
test
push
divb
push
std
push
mov
mov
mov
gs
inc
ret
inc
aad
dec
mov
fdivl
ja
xorb
pop
int3
stos
data16
push
mov
add
popa
insl
loope
adc
inc
jo
pop
inc
and
sbb
cli
or
add
push
jle
adc
jmp
add
mov
js
movsl
xor
add
xchg
add
imul
stc
insl
std
test
add
add
cmp
pop
enter
int
into
test
add
or
add
insl
add
mov
or
jmp
lock
cltd
or
jnp
icebp
mov
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
add
add
lahf
and
mov
shll
movb
inc
mov
sbbl
mov
cmp
lods
and
inc
clc
jno
xorb
and
dec
rclb
xor
push
dec
lret
pop
ds
lds
mov
mov
sbb
mov
inc
xlat
inc
and
jbe
xchg
or
sub
sub
shlb
in
sbb
jnp
in
pop
dec
fimull
fidivrl
push
test
push
pusha
notb
je
out
add
into
pop
cmp
ds
push
lds
test
pop
lcall
iret
dec
ret
mov
pop
lea
rolb
sarb
mov
dec
push
push
add
bound
or
xor
jmp
jns
aam
sub
arpl
cmc
cmp
lahf
punpckhdq
aad
int3
sub
push
mov
lea
cwtl
decl
fldl
xchg
mov
mov
dec
mov
jmp
movsb
ret
fmull
xchg
mov
imul
insl
cwtl
mov
test
cmp
mov
lods
cmp
mov
cmp
adcl
push
lret
pop
ds
or
xor
or
scas
fs
popa
add
pop
test
xchg
adc
sub
insb
scas
arpl
xchg
orl
nop
setg
or
seta
bound
imul
pop
faddl
pop
ds
in
cli
popf
insb
test
push
lret
mov
xchg
imul
sbb
pop
sub
mov
cmpsl
ret
test
mov
je
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
mov
push
mov
gs
addr16
data16
xchg
outsb
mov
sub
pop
sbb
mov
ljmp
bound
add
and
jmp
cwtl
or
and
or
add
imul
mov
and
fists
mov
push
xor
imul
ljmp
push
push
stos
cmp
add
gs
pushf
outsl
fsubl
addr16
push
repz
pushf
outsl
insl
std
test
test
repnz
out
mov
fisttpll
mov
or
jae
adcl
push
lahf
push
mov
movsl
int3
aas
hlt
jb
addr16
pop
mov
rcll
cli
je
pusha
pop
repnz
int
and
add
pop
cmp
cmp
dec
fstpt
js
ljmp
mov
push
cmp
sub
push
mov
xchg
icebp
add
cltd
jae
roll
rcll
rcrl
fs
or
pusha
icebp
popa
add
pop
push
ret
ret
ljmp
stc
scas
push
push
xor
jle
mov
inc
mov
jge
push
mov
roll
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
out
loope
jae
mov
mov
outsl
adc
adc
add
add
outsl
add
sbb
adc
add
pop
dec
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
mov
or
sahf
pop
mov
add
mov
mov
xchg
pop
bound
daa
shlb
sti
popa
icebp
nop
arpl
lea
jp
jp
ss
aas
pop
test
lcall
sarb
daa
movsl
xor
dec
frstor
mov
aam
repnz
stos
int
leave
call
fwait
movsb
cmp
pop
xchg
and
icebp
adc
pop
aad
sub
jo,pn
insb
or
mov
mov
or
aas
stos
and
mov
subb
cmc
add
push
rclb
jno
stc
imul
scas
lret
loope
in
jle
sub
movsb
aaa
cmpsl
ret
leave
push
shll
fildll
enter
testl
pusha
xchg
jns
push
xchg
repz
mov
sbb
outsb
in
outsb
cld
fwait
jbe
add
pop
cmp
into
dec
fidivrs
adc
cld
ljmp
bound
add
and
add
add
mov
xor
add
jmp
xor
or
add
outsl
add
add
or
add
or
or
add
add
add
add
add
mov
or
jmp
mov
fldl
mov
lds
pop
and
sbb
cmp
stc
imul
mov
repz
cmc
or
xchg
dec
data16
pop
loop
aas
mov
sub
xor
scas
pop
std
jbe
cmpl
jns
mov
hlt
adcl
test
jecxz
push
in
fistl
pop
mov
pop
into
test
adc
adc
xor
mov
inc
mov
test
in
sbb
jae
jnp
in
pop
ret
scas
pop
repnz
lret
pop
ds
test
repnz
mov
push
xchg
mov
sub
push
mov
cmpsl
pop
push
xor
dec
hlt
jbe
cmpl
sbb
mov
xchg
gs
adcb
adcb
cmpsb
shll
jl
outsl
or
out
or
lea
xchg
repz
in
cmpsb
cs
lret
pop
ds
cmpsl
das
mov
xchg
mov
jle
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
mov
or
jmp
add
lahf
adc
ja
xorb
mov
mov
add
jmp
add
add
insl
add
mov
cmpsb
or
jmp
outsl
xor
sbb
or
or
or
or
add
add
add
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
cmpsb
or
bound
or
mov
add
add
push
cld
ljmp
bound
or
and
jmp
test
repnz
notb
int3
stos
iretw
outsb
cld
fwait
jbe
jecxz
loopne
jb
scas
aas
scas
lret
pushf
or
std
insl
hlt
pop
mov
xor
pop
rclb
add
rcll
lea
test
pop
test
lods
xor
mov
ds
jnp
outsb
or
adc
dec
sub
xor
fsubrs
call
mov
mov
fistps
scas
pop
mov
ljmp
stc
hlt
or
lcall
lods
and
inc
imul
mov
lods
lret
inc
xchg
cmp
es
mov
add
cmpsb
xor
int
mov
push
aaa
ret
add
dec
fnstcw
mov
icebp
mov
mov
and
lcall
or
add
std
or
jmp
out
jo
adcb
add
push
add
add
outsl
and
or
and
jmp
das
mov
mov
sbb
outsl
lcall
sbb
pop
add
adc
mull
icebp
pop
pop
fisttpll
out
imul
push
cmc
or
sub
push
jge
negl
loope
js
popa
add
adc
jne
out
or
dec
sub
adc
repz
sti
je
lea
mov
gs
push
lock
test
outsb
cld
fwait
jbe
xchg
in
sbb
es
inc
mov
sub
add
push
cld
ljmp
bound
or
and
mov
or
jmp
ljmp
stc
hlt
inc
iret
pop
cmp
xor
pushf
js
aaa
cmpsl
ret
fcoms
mov
stos
int
call
xor
lahf
adc
insb
or
mov
rcll
push
add
xchg
add
add
cmp
push
test
push
mov
xor
add
xchg
add
rclb
addr16
rolb
rclb
repz
movsb
cmp
mov
scas
nop
setg
or
test
movsb
ret
ds
mov
jmp
mov
lcall
jae
imul
push
xor
sbb
cltd
or
insb
in
notb
imul
adc
add
int
sub
pop
pop
jp
xor
fs
popf
insb
mov
outsb
lods
loop
std
test
stos
cmp
dec
fnstcw
mov
daa
lahf
por
jmp
mov
inc
xlat
mov
out
movsb
cmp
sbb
sub
push
loope
xlat
inc
and
js
mov
adc
or
mov
inc
fimuls
popa
lahf
add
int
and
sbb
movsb
cmp
inc
sbb
xor
mov
mov
and
xchg
adc
ret
ret
mulb
or
xchg
jbe
dec
fistpll
jbe
loopne
jmp
lret
fs
sub
lods
daa
mov
and
add
movsb
push
cld
insl
fs
sub
add
add
xor
add
sub
mov
test
adc
add
add
pushf
or
roll
mov
lock
lcall
rcll
pop
negl
pop
cmp
jle
sub
add
xorl
xor
scas
pop
ljmp
lcall
and
in
lahf
leave
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
mull
nop
arpl
daa
mov
inc
mov
pop
repnz
cmpsl
scas
xor
int
fisubrs
imul
adc
loope
inc
aad
dec
lret
js
ljmp
cmp
cwtl
add
sbb
add
add
mov
cmp
adc
add
add
bound
or
sub
ret
lods
or
jmp
xchg
dec
fistpll
mov
das
enter
or
push
inc
dec
add
add
add
sbb
add
add
mov
scas
or
jmp
inc
xchg
mov
int
mov
in
mov
push
add
bound
adc
sub
jmp
add
add
outsl
and
or
and
jmp
daa
iret
gs
xchg
cmc
add
faddl
mov
lds
les
mov
leave
dec
fdivrs
mov
sbb
dec
enter
sub
add
js
mov
outsb
ljmp
cld
fwait
jbe
mov
jmp
outsl
mov
pop
cmp
and
rclb
fsts
mov
lcall
mov
xchg
add
and
gs
pushf
outsl
les
mov
xor
xor
dec
mov
daa
shlb
out
jl
notb
push
xchg
repz
int
gs
pushf
outsl
in
je
lea
adc
in
sbb
out
jo
xorl
fwait
push
sbb
insb
pop
xchg
or
je
push
shlb
xlat
and
outsl
out
jg
jmp
push
cwtl
outsl
xor
add
add
adc
xor
jmp
cld
adc
mov
scas
and
js
add
adc
mov
aam
enter
fcoml
mov
pop
ds
idivl
jp
or
adc
xchg
scas
lods
lret
inc
divl
jbe
loopne
scas
cmp
or
pop
xchg
adc
lret
mov
gs
push
mov
fldt
call
xchg
adc
loope
in
mov
sbb
stos
into
cmp
clc
or
jae
pusha
pop
repnz
nop
push
test
push
loopne
dec
fidivrs
mov
xchg
or
je
adc
fisttpl
fnstsw
fstpl
scas
pop
mov
paddd
lock
frstor
or
repnz
fs
lock
inc
insb
std
insl
hlt
pop
lods
jae
mull
outsl
sub
add
add
add
bound
adc
sub
jmp
or
push
lds
iret
fs
mov
jb
lahf
leave
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
push
xor
jg
cmpsb
xor
scas
pop
push
mov
jg
cmp
mov
sahf
add
std
or
push
int
and
aaa
sbb
popa
pop
int
lea
leave
cmp
xor
xchg
pop
push
xlat
inc
and
aaa
jecxz
icebp
nop
arpl
popa
mov
dec
fdivrs
lahf
cli
or
pop
fimuls
adc
inc
and
cmp
scas
aas
pop
test
aad
mov
rorl
adcb
xorb
addr16
pop
loop
jecxz
jne
jne
outsl
or
lds
scas
sub
sub
jo
cmp
repnz
lock
dec
mov
mov
dec
inc
rolb
sarb
push
add
add
add
add
bound
or
mov
orb
mov
dec
adc
or
or
cld
ljmp
bound
or
and
jmp
xchg
and
dec
fisttpl
fstpl
add
inc
test
add
bound
or
sub
int3
orb
mov
mov
adc
add
add
test
rolb
shlb
mov
push
int
and
aaa
adc
jns
or
pop
enter
notl
cmp
mov
cwtl
decl
loop
pop
mov
sahf
stc
or
mov
call
mov
mov
dec
fistpll
aam
dec
mov
and
xchg
and
xchg
add
ljmp
sbb
fs
popf
insb
scas
or
pop
jb
sub
adcl
lods
lret
inc
out
jo
jbe
loopne
add
lcall
test
pop
test
adc
sahf
add
call
jmp
insb
add
jecxz
push
in
fmuls
mov
jmp
aad
popf
push
lret
pop
ds
stc
push
add
jns
add
xor
cmpsl
cmc
push
push
call
addr16
call
popa
push
jmp
xchg
call
jmp
sbb
lcall
jecxz
sbb
add
andl
mov
mov
and
add
inc
jecxz
push
in
push
out
and
ss
inc
mov
add
pop
jmp
dec
or
add
add
sbb
add
adc
xlat
popf
sub
ljmp
inc
mov
dec
int3
popf
push
pop
or
cmp
add
fadds
mov
cmpsl
xchg
inc
ret
leave
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
jmp
dec
fidivrs
add
add
jmp
add
sbb
pushf
mov
jmp
test
mov
insb
call
jmp
adc
pop
adc
call
add
xchg
popf
pushl
jmp
push
rolb
sarb
into
dec
fdivrl
movsl
mov
mov
mov
andb
sub
jmp
mov
add
addl
call
jmp
stos
sub
adcl
test
popa
jmp
sbb
adcl
test
jo
jmp
int3
popf
and
cmp
dec
mov
jmp
rcrb
scas
pop
mov
repnz
pop
repnz
pusha
jmp
hlt
mov
sar
inc
adc
fs
jge
notl
dec
rclb
and
jne
mov
xor
add
add
add
outsl
and
add
and
jmp
add
inc
add
add
movsb
cmp
or
movzbl
jmp
jmp
out
cltd
push
je
inc
nop
and
int3
inc
xor
leave
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
add
add
push
mov
cwtl
loopne
in
jle
inc
aad
sub
je
notl
sbbb
out
sbb
addr16
push
ret
pop
into
test
pop
jp
jge
rcll
sub
jne
mov
fimull
mov
stos
int
cmc
es
cmp
inc
lret
mov
call
out
adc
adc
notl
push
mov
or
movsl
cs
hlt
push
cld
sbb
into
pop
rolb
shlb
imul
insl
mov
mov
mov
and
cld
push
out
jle
mov
mov
test
incl
add
cmpl
lods
cmp
mov
in
mov
test
mov
dec
mov
jnp
and
add
cmp
je
popa
mov
jmp
in
lret
into
dec
push
jmp
jnp
jl
notb
sub
push
ret
cmpsb
push
mov
xor
pop
je
popl
lea
jmp
dec
rolb
sarb
cmp
jp
jnp
in
insb
push
mov
pop
incl
jmp
push
inc
and
pop
cmpsl
and
rolb
inc
test
cld
fistpll
add
add
bound
or
and
add
add
mov
mov
mov
add
shlb
mov
rolb
add
mov
mov
push
les
or
cmpsb
jno
fcoml
shr
add
add
inc
fidivrl
sbb
arpl
test
jge
jg
out
in
test
sbb
add
add
bound
or
and
jmp
ja
outsl
push
pop
popf
mov
mov
pop
jmp
nop
sbb
jmp
fistpl
scas
pop
cld
arpl
bound
addl
mov
jmp
and
jmp
push
in
dec
out
adcl
test
mov
test
call
call
cmp
je
or
xor
jmp
imul
or
push
lret
pop
leave
test
call
stos
add
push
jmp
call
jmp
in
jp
jp
cmc
lock
lret
fisttpl
movsb
push
loop
xchg
xor
push
call
mov
mov
push
call
jmp
ljmp
lahf
push
mov
mov
push
xor
sub
mov
mov
jmp
imul
fisttpll
out
popf
add
std
or
mov
mov
rolb
rclb
stos
or
outsl
xor
add
add
adc
xor
jmp
push
jmp
mov
call
mov
cmp
inc
jmp
pop
fimull
fidivl
xlat
push
les
mov
sbb
pop
fisttpl
mov
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
jmp
jmp
and
pop
inc
ret
ret
dec
frstor
jmp
ret
jmp
adc
jg
jmp
daa
lods
cmp
xor
ficoms
mov
sbb
gs
outsl
std
jle
pusha
pop
repnz
jns
mov
insb
loop
je
fisttpll
mov
push
js
push
call
inc
call
mov
cmp
setg
or
es
fstpt
xlat
fistpl
call
add
jmp
mov
mov
cs
stos
inc
shll
sub
fnstsw
xchg
jmp
out
loope
jae
sbbl
mov
sub
pushf
jmp
inc
jecxz
push
in
push
roll
aad
imul
fistpl
stos
pop
scas
adc
popf
pushl
mov
jmp
push
inc
and
ss
jp
jp
lock
xorb
fdiv
xchg
jmp
addb
repz
lock
imul
jae
xchg
jbe
popa
add
sbb
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
mov
add
mov
ret
test
mov
and
stos
loop
cltd
roll
add
jne
addl
jmp
ss
push
fdivl
in
fsts
mov
xchg
mov
jmp
add
scas
rcrb
adc
loop
pop
loop
mov
mov
das
fwait
sub
int3
shll
adc
inc
adc
push
popl
jmp
pop
lret
lret
imul
insl
ret
js
ljmp
mov
jmp
fwait
or
in
mov
or
inc
add
add
mov
add
pop
jmp
add
sub
xchg
testb
lock
out
sbbl
cmpsb
xor
scas
dec
adcb
subb
adc
xor
mov
cld
xchg
cmc
add
pop
into
test
inc
and
push
rorl
pop
adc
leave
jb
add
call
jmp
mov
mov
movb
jmp
add
data16
fs
push
ret
inc
shlb
push
mov
sub
push
push
push
xor
push
push
push
push
call
add
mov
loop
pop
loop
cli
movb
movb
movb
movb
movb
jmp
mov
fmull
ret
xor
jmp
mov
sub
dec
les
int3
aas
dec
les
int3
rolb
push
movb
jmp
adc
inc
leave
dec
jmp
ljmp
mov
das
fidivrs
popa
add
push
sti
je
lea
dec
dec
movb
jmp
aas
mov
inc
mov
jnp
fs
pop
leave
pop
leave
test
out
inc
rolb
sarb
imul
sub
sub
test
jmp
hlt
fs
popf
insb
fstl
cmp
inc
cmp
cltd
or
xor
jne
out
pop
insb
inc
jecxz
inc
movb
jmp
pop
adcb
subb
fwait
or
sub
fwait
or
cmp
dec
fistpll
inc
fisubl
sti
cwtl
or
inc
fsubl
rclb
icebp
jl
jp
in
push
aad
ret
mov
mov
pop
jmp
movb
jmp
and
inc
fisttpll
out
rclb
cmpsl
push
fwait
mov
repz
movb
movb
movb
movb
movb
jmp
stos
movb
jmp
push
out
movb
jmp
mov
mov
cmp
mov
lods
int
ret
mov
std
adc
movb
jmp
add
loope
jmp
imul
push
cmc
or
lret
push
jg
imul
mov
and
sub
movb
movb
movb
movb
movb
jmp
movb
jmp
or
inc
ljmp
adc
adc
imul
mov
jg
outsb
cmp
cmp
push
movb
movb
movb
movb
movb
jmp
iret
inc
aam
dec
mov
movb
jmp
add
adc
push
fimuls
and
mov
test
jmp
movb
jmp
sar
jle
inc
bnd
pop
bt
push
movsl
adc
ret
add
inc
fidivrl
test
movb
movb
movb
movb
jmp
adc
xor
je
inc
out
jne
inc
out
jbe
inc
lock
inc
icebp
js
test
mov
inc
mov
dec
sub
inc
repz
inc
hlt
xor
inc
cmc
xor
push
movb
jmp
jo
jp
in
pop
in
js
mov
inc
fimull
ficompl
sbb
inc
inc
divb
jmp
xor
cmp
int
and
aas
or
lret
je
pusha
mov
mov
mov
andb
sub
jo
jmp
mov
test
mov
stc
xor
gs
xor
lea
push
mov
es
sbb
inc
jl
movb
jmp
xchg
adc
push
pushf
sti
push
rorl
inc
cli
ss
push
rolb
shlb
mov
scas
and
jge
adc
adc
add
add
outsl
and
add
and
jmp
dec
or
imul
movsbl
push
jmp
or
jmp
fwait
adc
push
mov
es
xor
push
insl
loope
adc
inc
and
sub
pushl
repnz
or
adc
push
cmpsb
sub
icebp
popa
add
push
xchg
add
std
or
ljmp
pop
leave
ret
jmp
dec
fisttps
add
xchg
popf
pushl
mov
jmp
les
pop
in
push
push
xor
data16
jg
jmp
lods
pop
hlt
popa
jmp
pusha
jmp
add
push
popa
nop
daa
jecxz
in
jle
sbbl
cmp
cmc
cmp
jl
jmp
sub
pop
push
int
and
aas
pop
rcll
sub
dec
sub
pop
sub
shl
icebp
mov
lea
call
inc
cmp
jmp
mov
ret
mov
mov
push
ret
cmpsb
push
lcall
adc
popa
jmp
addr16
leave
jo
jmp
movsl
sub
xor
mov
and
jmp
fwait
sbb
rolb
shrb
push
pushf
sti
push
rcr
leave
test
lods
pusha
xor
mov
mov
mov
andb
sub
jmp
ret
inc
aam
dec
cmpsb
and
add
jmp
popf
adc
jl
cmp
jmp
mov
mov
add
add
add
pushf
xor
inc
mov
int3
ret
loopne
inc
cmp
jl
mov
mov
call
jmp
lock
mov
sub
jecxz
push
mov
mov
and
jo
inc
cmp
push
je
jmp
mov
xlat
mov
jmp
outsl
add
cmpsl
aaa
push
mov
xchg
and
cltd
les
add
mov
add
cmp
jmp
sbb
cmp
dec
popl
jmp
aaa
mov
ja
jno
jecxz
pop
roll
aad
scas
cmp
xchg
jmp
pusha
stc
imul
pop
cmp
in
ret
jmp
and
aad
jmp
mov
mov
sbb
ret
mov
out
cmp
sub
mov
fs
push
call
icebp
ja
xorb
fisttps
flds
stc
jge
je
jnp
push
fcmovb
jb
jmp
sbb
or
outsb
xchg
mov
add
push
call
mov
shll
ret
cmpsb
push
mov
ljmp
stc
hlt
adc
test
jmp
out
pop
jmp
imul
push
in
dec
imul
std
ja
xorb
fdivl
in
mov
mov
mov
ds
xor
div
mov
lea
call
jmp
lret
pop
iret
stos
pop
roll
and
jmp
popf
push
pushf
sti
push
mov
xorl
cmp
or
aad
jg
add
jmp
lods
popf
popf
jmp
jg
jg
jmp
cmpsl
push
sti
sub
jmp
cld
popa
jmp
out
jp
jp
mov
xchg
xchg
or
mov
inc
mov
loopne
dec
or
add
add
lods
add
mov
sub
or
andb
sub
jmp
or
icebp
push
push
lret
lret
imul
mov
nop
testl
or
xor
rclb
mov
sar
inc
adc
mov
jmp
movzbl
jmp
mov
cmpsb
push
fisttpl
frstor
mov
pop
xchg
push
xor
mov
jmp
jge
addl
ret
jne
addl
mov
jmp
mov
ss
inc
mov
mov
lods
lret
inc
mov
add
jmp
jae
outsb
or
sbb
cmpsl
pop
inc
and
sub
and
add
pop
bnd
jne
and
push
mov
fs
cmp
mov
movb
movb
movb
mov
mov
imul
jmp
push
fstl
add
add
bound
add
xor
jmp
imul
and
arpl
xchg
gs
cmp
sbb
jmp
rolb
add
jmp
mull
xchg
outsb
fmull
mov
loope
jae
mov
sahf
jle
jmp
mov
cltd
movsb
pop
lea
jmp
popa
stc
imul
out
jno
or
cmp
roll
sahf
insl
test
mov
jle
imul
popl
jmp
fwait
add
movsb
cmp
sub
add
lock
mov
cmpl
jmp
stc
data16
xchg
outsb
jmp
sub
adc
jl
cltd
or
push
sti
js
mov
jmp
stc
cwtl
imul
jmp
push
imul
incl
push
xor
and
adc
in
sbb
sti
jl
jne
push
mov
outsl
xor
add
or
outsl
or
add
add
add
add
add
add
or
add
add
add
mov
mov
das
out
push
je
jmp
lret
dec
fmull
call
jmp
mov
into
jg
sub
jmp
in
push
loopne
sti
sahf
insl
andl
add
adc
outsb
outsl
xor
sbb
or
or
or
or
add
add
add
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
or
neg
jmp
inc
iret
pop
cmp
xor
lahf
punpckhdq
xchg
popa
enter
jecxz
lret
or
mov
mov
movzwl
jmp
aam
xor
aam
leave
jmp
and
jne
sbb
cli
incl
xchg
out
xlat
mov
jmp
dec
rclb
sub
mov
mov
call
adc
add
add
and
add
add
inc
or
jmp
ret
pop
mov
ret
jmp
jmp
adc
xor
imul
test
arpl
pop
jmp
idivb
popf
jmp
adcl
add
lods
movsb
ret
faddl
xor
dec
sub
in
ljmp
gs
adc
adc
jo
xchg
xchg
mov
fstpl
fs
aaa
mov
pushl
jmp
and
xchg
std
decl
jle
pop
int3
stos
data16
lret
punpckhdq
pop
push
jmp
mov
jmp
add
pop
fisttpll
out
in
sbb
add
cltd
inc
dec
adc
or
add
lods
add
mov
adcl
xor
int
fisubrs
jno
jecxz
lods
pusha
jmp
dec
frstor
out
mov
rolb
rolb
stos
and
push
add
add
outsl
xor
add
sbb
or
or
or
or
add
outsl
or
add
outsl
or
sbb
add
sbb
add
add
push
add
add
outsl
xor
add
push
imul
and
adc
test
add
mov
in
pusha
notb
inc
and
addr16
jge
je
sub
adc
popa
jmp
inc
rolb
shlb
jo
jmp
mov
add
rolb
add
mov
jmp
push
lds
xchg
addr16
mov
mov
mov
andb
sub
jmp
adc
cmp
xchg
add
adc
pop
aas
xchg
pop
mov
inc
adc
push
lret
lret
cmpsl
lods
lret
inc
scas
lds
xchg
cld
mov
inc
or
mov
cltd
roll
add
xchg
mov
rorb
movsb
push
rol
inc
xlat
mov
xchg
mov
inc
mov
outsl
int
xor
push
cld
ljmp
bound
add
and
jmp
movzbl
jmp
lret
mov
cmp
jmp
scas
sub
sub
fcompl
scas
pop
movsb
push
addr16
push
les
ret
jne
addl
jmp
mov
pushf
sti
push
sarl
or
repnz
pop
dec
mov
add
and
mov
mov
or
mov
fistpll
or
add
add
bound
add
xor
jmp
addb
add
jnp
in
paddusw
pop
scas
mov
fs
jmp
in
bound
les
inc
daa
rclb
mov
xchg
repnz
je
popa
mov
jmp
and
or
sar
push
jmp
push
jmp
push
xchg
add
cmp
cmp
adc
popa
cmp
out
in
jg
mov
insl
cli
push
data16
popf
je
jl
divb
outsb
mov
cmpsl
xchg
cmpsl
pop
popl
jmp
add
cmp
jmp
xchg
and
movsl
add
inc
fmuls
fcomps
faddl
mov
adc
push
jmp
inc
fisttps
mov
adc
bound
mov
enter
sub
or
bound
adc
xor
jmp
loope
sti
js
mov
lock
add
rolb
add
jmp
inc
ret
ret
dec
fnstcw
mov
sbb
and
pop
push
push
push
lea
call
push
call
mov
pushf
orl
jmp
insl
cli
inc
mov
jmp
add
or
in
cld
je
insb
or
cmc
pop
aad
sub
aas
dec
jne
mov
mov
jmp
mov
jmp
lcall
mov
sbb
fs
push
in
pop
add
fdivrl
popa
add
xor
gs
pop
or
adc
jle
mov
mov
testl
jmp
push
aam
adc
jno
pop
or
stc
add
add
mov
decl
decl
jmp
fimull
mov
shll
xor
adc
add
mov
les
adc
pop
into
pop
cmp
jg
jne
xor
add
add
add
add
mov
or
jmp
sbb
outsl
sub
add
add
add
add
add
add
mov
or
jmp
aaa
orl
rolb
add
cpuid
and
jmp
fcoml
push
jmp
rcr
test
pop
adc
aaa
mov
addb
fnstsw
push
cmp
push
xchg
lea
out
fimull
or
mov
ret
jp
in
push
mov
cmp
call
jmp
cmpsb
cmp
out
ja
xorb
int3
inc
and
out
jno
aam
roll
jmp
les
lods
cmp
ret
push
lds
ret
dec
fstpt
mov
jmp
andb
aas
mov
jmp
lret
xor
jmp
mov
jmp
gs
pop
loop
out
push
lahf
push
stos
cs
xor
out
outsl
xor
add
or
outsl
or
add
add
add
add
add
add
or
add
add
add
mov
or
jmp
in
jbe
xchg
testb
arpl
mov
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
add
push
fldt
sbb
mov
add
jmp
lret
dec
fstpt
stos
into
cmp
ret
ds
and
lea
push
push
mov
call
cmp
jne
jmp
cltd
test
pushl
push
pushl
call
mov
lea
jmp
in
lcall
in
jle
mov
push
push
xor
jg
push
jmp
adc
icebp
sub
std
jmp
push
rcll
push
dec
sti
mov
popf
sub
push
push
pushl
call
jmp
in
js
mov
sbbb
jmp
and
push
hlt
push
jmp
inc
mov
jmp
cmc
jae
xchg
flds
mov
test
pop
lret
scas
pop
faddl
lahf
punpckhdq
or
jmp
int
adc
fucomip
xrelease
jmp
lret
dec
fistpll
sbb
arpl
jnp
mov
jae
pusha
pop
repnz
pushf
mov
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
mov
lret
or
jmp
test
cld
push
pushf
add
std
or
sbbl
pop
push
xor
dec
xchg
push
pushf
sti
push
xchg
pop
fwait
or
push
mov
movsb
ret
ds
push
les
insl
hlt
pop
loopne
adc
adc
in
sbb
imul
and
jo
push
adc
cmp
gs
pushf
outsl
sahf
mov
xchg
lret
inc
fidivrl
lret
sahf
sahf
adc
push
shll
inc
mov
arpl
popa
add
inc
lcall
dec
fnstcw
int
addr16
int3
pop
into
test
add
add
jg
adcl
sub
iret
push
loope
outsl
xor
sbb
add
add
outsl
add
add
add
dec
add
sbb
fildl
or
or
bound
or
divl
xchg
ret
dec
fistpll
fs
sbb
cmp
push
jl
mov
jmp
xchg
pop
leave
inc
mov
mov
aas
scas
lret
lock
add
add
jmp
push
fisttpl
dec
mov
and
js
imul
add
add
outsl
and
or
and
jmp
dec
inc
push
mov
pop
jmp
dec
push
pushf
jmp
popf
jmp
insb
cld
xchg
cmc
add
pop
lret
lret
xchg
pop
bound
fldcw
xorl
rolb
scas
xchg
jmp
jge
jg
jmp
dec
mov
pushl
jmp
ret
dec
sbb
ss
mov
loope
xor
and
push
enter
and
cmpsb
pop
jmp
add
in
mov
jmp
dec
roll
rcll
fimuls
das
test
pop
fisttps
push
mov
push
cmp
call
pop
pop
xor
pop
leave
ret
jmp
pop
xchg
mov
mov
jo
jmp
adc
outsl
dec
leave
pop
cmp
push
push
fisttpl
mov
inc
or
andb
sub
jmp
popf
sbb
sbb
cmp
repnz
pop
repnz
lods
iret
mov
ret
push
lea
push
les
mov
sbb
add
ret
movsb
push
repnz
dec
mov
add
ss
mov
add
add
outsl
sub
or
add
push
or
add
mov
push
push
sbb
add
pop
int
adc
popa
lock
pop
inc
rolb
shlb
gs
pushf
outsl
fimuls
mov
adc
cltd
roll
add
jne
addl
jmp
xchg
push
xchg
repz
test
pop
push
xchg
je
jmp
sbb
xor
pop
mov
loope
in
je
add
add
movzbl
add
cmp
jmp
rep
loop
je
ja
imul
xor
jp
jl
incl
out
adc
popl
jmp
jle
gs
jmp
push
fwait
or
jae
pop
xchg
repnz
movsl
and
aas
mov
repz
rolb
add
jmp
aad
lea
sub
push
push
push
mov
lea
push
jmp
push
jmp
mov
mov
and
xchg
or
je
popf
or
push
sub
fucomi
fidivs
adc
movb
jmp
nop
sbb
mov
jg
fs
or
stos
or
lea
jmp
pop
cwtl
push
imul
sbb
dec
mov
jecxz
mov
jmp
fcoms
lods
pop
mov
imul
insl
test
cs
loop
push
movb
jmp
lods
and
add
pop
cmp
pusha
inc
aam
dec
jmp
or
add
add
bound
or
outsl
sub
add
add
add
push
add
add
outsl
xor
or
mov
leave
or
jmp
jb
sub
add
add
cltd
or
sahf
setg
or
aaa
andb
cmpsl
push
jmp
add
mov
and
lock
bound
xchg
jns
dec
mov
mov
lea
push
push
movb
movb
movb
jmp
into
mov
cs
mov
call
mov
lea
push
movb
jmp
movb
jmp
xchg
or
les
int3
dec
jle
ja
loope
push
pop
dec
cmp
jmp
xchg
movb
jmp
roll
inc
mov
shrb
cmp
inc
lods
sub
lds
push
movb
movb
movb
movb
mov
call
jmp
jo
fs
add
push
movsb
das
mov
inc
push
outsl
jmp
mov
popa
jmp
mov
sti
and
orb
decb
gs
movb
movb
movb
movb
jmp
lret
inc
xlat
mov
mov
pop
mov
movb
jmp
xor
iret
jle
mov
or
xchg
sbb
fisttpll
out
lods
and
inc
sbb
mov
call
lea
mov
movb
movb
jmp
or
push
jno
inc
sbb
aaa
push
lret
ljmp
inc
xlat
movb
movb
jmp
stos
cmp
add
std
or
cltd
or
aam
and
inc
or
jmp
daa
mov
inc
mov
fimuls
mov
fdivrs
mov
pushf
insb
movb
movb
movb
movb
jmp
inc
sbb
or
jo
sbb
arpl
cmc
xor
dec
fdivrl
push
lahf
sub
mov
jmp
sub
sub
push
push
iret
pop
cmp
push
sub
xor
int
cmc
movb
movb
movb
movb
movb
jmp
or
pusha
sub
adc
shr
sbb
inc
mov
test
stos
cmp
inc
pop
fisttps
flds
orl
decb
addb
jmp
les
mov
xchg
adc
push
popa
nop
adc
pop
aad
sub
sub
call
push
push
pushl
jmp
pushf
push
jmp
call
jmp
push
fdivl
in
add
add
jo
setg
or
sbb
or
xor
mov
call
jmp
orb
adc
adc
or
xor
mov
jmp
and
cmp
jge
inc
sub
cmpsb
mov
jmp
test
movb
jmp
pop
mov
js
dec
stc
je
lea
mov
pop
lret
lret
pusha
movb
movb
movb
mov
call
jmp
sub
fs
movb
jmp
and
xor
xor
mov
inc
pusha
push
push
movb
movb
movb
movb
jmp
outsl
lcall
mov
jnp
push
push
mov
inc
insb
gs
push
ret
ret
pop
leave
test
lcall
sub
aaa
ret
outsl
movb
movb
movb
movb
movb
jmp
imull
fwait
jbe
mov
stos
faddp
inc
outsb
popa
jmp
sub
adc
xchg
add
jnp
cltd
dec
jb
movb
jmp
lahf
sbb
fstps
test
sub
inc
aam
mov
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
jmp
rolb
dec
lcall
cld
jg
mov
or
inc
outsl
insl
movb
movb
mov
call
jmp
aam
int3
stos
xchg
adc
aaa
mov
movb
jmp
sbb
inc
leave
imul
and
xor
scas
aas
pop
test
testl
in
pop
leave
pop
int3
sahf
js
inc
popa
jmp
jmp
xor
movb
jmp
inc
roll
aad
sbb
js
movb
jmp
push
fisttps
flds
sub
fs
popf
insb
lds
xor
mov
lea
push
push
movb
movb
jmp
outsl
std
insl
hlt
pop
mov
fimuls
dec
dec
fimuls
push
and
mov
jmp
popf
setg
or
cld
pop
sub
pusha
stc
imul
inc
ljmp
repz
jmp
lock
pop
push
xor
daa
and
ds
mov
inc
in
inc
jmp
mov
mov
dec
fstpt
mov
dec
movb
movb
movb
movb
movb
jmp
call
jmp
dec
iret
pop
cmp
xor
dec
ret
stos
popa
out
adc
cmp
xor
mov
jmp
sub
mov
and
sti
lret
inc
xlat
mov
mov
inc
mov
movb
movb
movb
movb
jmp
and
movsb
imul
add
mov
inc
mov
cmp
jnp
movb
jmp
xor
sbb
inc
ds
inc
mov
test
je
inc
out
inc
movb
movb
movb
jmp
aad
into
test
pop
cmp
popa
cmp
call
xor
push
movb
movb
movb
movb
jmp
mulb
xchg
outsb
fists
movsl
fistl
cmpsb
push
loop
pop
int
addr16
movsl
bound
jmp
nop
add
std
or
sub
cmp
cs
pop
enter
and
fadds
mov
mov
bound
movb
jmp
outsl
cmc
gs
pop
xlat
push
lds
add
add
and
outsl
jmp
ljmp
fisttpl
fstpl
mov
mov
movb
movb
movb
movb
movb
jmp
mov
cmpsb
shll
adc
add
movb
movb
movb
movb
movb
jmp
sub
fisubs
and
cmp
movsb
cmp
dec
sub
cmpsb
xor
scas
jns
inc
faddp
inc
dec
pop
jg
pop
fucomip
test
add
int3
dec
fidivrs
les
cmp
pop
dec
ret
ret
mov
pop
movb
jmp
movsl
xor
lods
cmp
push
xchg
repz
test
mov
decl
aam
push
movb
movb
jmp
imul
pop
xor
push
lds
mov
movb
jmp
push
cs
es
mov
pop
cmp
mov
decl
mov
push
movb
movb
jmp
adc
adc
pop
xchg
adc
push
scas
in
jns
mov
or
je
inc
mov
popa
movb
movb
jmp
jge
movb
jmp
and
loop
pop
loop
je
ja
loope
sbb
cmpsb
out
popa
push
movb
jmp
sti
xor
and
movb
jmp
mov
mov
sbb
js
arpl
je
out
push
imulb
cltd
push
movb
movb
mov
call
mov
lea
jmp
lods
xor
jns
mov
in
and
imul
push
inc
jmp
push
xchg
add
jnp
push
lea
jbe
movsb
xchg
movb
jmp
pop
fisttpll
out
jo
gs
sub
stos
cmp
pop
leave
dec
ret
mov
dec
movb
movb
movb
movb
jmp
ja
xchg
testb
repnz
mov
movb
jmp
out
data16
xchg
outsb
mov
outsl
or
hlt
or
mov
and
inc
push
outsb
jmp
fwait
adc
in
sbb
xor
add
inc
loop
ffree
inc
shlb
shll
call
mov
movb
jmp
lods
cmp
outsl
movb
movb
jmp
add
aaa
sti
imul
roll
aad
fldt
movb
jmp
mov
test
ljmp
xchg
pusha
aam
and
jmp
push
repz
mov
jge
inc
sbb
aas
scas
lret
inc
fmuls
fdivrs
cmpsb
xor
scas
inc
filds
mov
cmpsb
sbb
movb
movb
movb
movb
movb
jmp
iret
sub
jmp
ret
arpl
xchg
gs
pop
enter
outsb
in
bound
arpl
mov
jmp
mov
shl
gs
pushf
outsl
test
mov
jmp
cld
adcl
test
push
lret
mov
hlt
and
jle
mov
lea
push
push
movb
movb
movb
movb
jmp
movb
jmp
lods
das
mov
and
cmp
jnp
mov
dec
sub
inc
inc
inc
jmp
xor
push
fdivl
in
sahf
movb
jmp
les
mov
movsb
ret
ds
das
mov
push
lds
ficompl
and
inc
inc
push
push
movb
movb
movb
jmp
mov
mov
inc
mov
jmp
mov
jmp
mov
scas
leave
cmp
imul
lcall
jl
movb
jmp
mov
rcrb
pop
cld
dec
aam
sub
jl
js
inc
push
je
pop
pop
lea
push
push
call
mov
jmp
imull
je
aaa
lods
cmp
jg
mov
mov
cld
loopne
in
movb
jmp
mov
mov
add
jmp
jle
dec
jns
inc
dec
popa
movb
mov
call
mov
lea
jmp
pop
xchg
dec
movb
jmp
inc
ret
ret
mov
jg
bound
mov
mov
mov
rol
test
decl
test
jmp
test
pushl
mov
sub
push
sbb
push
ret
inc
aam
dec
cmpsb
sub
jnp
std
movb
jmp
or
inc
mov
inc
test
orb
decl
stc
pop
xchg
or
jle
stos
cmp
dec
sub
inc
subl
std
je
lea
xchg
inc
test
jmp
mov
stc
dec
movb
jmp
sbb
pop
mov
and
add
or
es
push
xor
sbb
push
lds
movb
jmp
in
cltd
push
xchg
cld
outsb
cld
fwait
jbe
test
xchg
jae
jno
jecxz
mov
lahf
cmpsb
adc
movb
movb
movb
movb
movb
jmp
fs
jmp
sub
push
push
xor
leavew
arpl
xchg
gs
jb
xchg
ds
mov
lea
push
pushl
jmp
pop
out
or
jmp
flds
mov
or
inc
or
jne
or
jmp
mov
ret
sub
push
pop
rclb
sub
adc
mov
lea
push
pushl
call
mov
jmp
pop
iret
stos
pop
loopne
pop
addr16
push
in
insb
xchg
mov
jmp
loopne
lock
bound
jmp
pop
fdivl
in
pop
fimull
fidivl
pop
xchg
add
sahf
jnp
inc
and
and
sbb
pushl
call
jmp
fstpl
scas
pop
lea
ret
ret
mov
mov
lock
xor
jmp
hlt
jle
mov
loopne
repz
inc
movsb
xchg
imul
inc
in
push
pushl
call
mov
jmp
add
sub
adc
and
loope
lret
pop
ds
arpl
cmc
daa
shlb
and
std
jmp
aaa
and
cmpsl
mov
rolb
add
jno
fsts
pop
sti
cmc
gs
pushf
outsl
cltd
dec
lea
push
pushl
call
mov
jmp
test
mov
lea
push
pushl
call
mov
jmp
mov
mov
mov
jbe
jbe
loopne
mulb
xchg
popa
in
sbb
jmp
repnz
pop
repnz
in
pushl
jmp
and
pop
mov
mov
nop
push
popa
nop
jb
sub
mov
jmp
dec
fdivrl
and
rcrb
inc
call
jmp
inc
xchg
or
in
xchg
jg
jbe
loopne
jl
insb
or
iret
cltd
lea
push
pushl
call
mov
jmp
movb
jmp
jne
fs
push
push
xchg
mov
arpl
xchg
gs
pop
int
addr16
mov
movb
movb
movb
jmp
mov
addr16
aas
movsb
and
adc
sti
imul
adc
or
sub
fcmovnb
inc
outsw
jmp
inc
int3
inc
and
lcall
fnstsw
in
fs
popf
insb
lahf
call
jmp
les
jmp
test
push
jmp
popf
adc
push
xor
sbb
insl
test
lahf
cli
or
inc
pop
dec
movb
movb
movb
jmp
inc
fisttpl
adcl
test
lods
aad
movb
jmp
test
scas
lret
cmpsb
pop
movb
jmp
in
jns
mov
mov
mov
sbb
or
inc
inc
push
push
call
mov
mov
lea
jmp
test
outsb
jmp
xchg
push
xchg
repz
test
repz
scas
aas
pop
test
stc
lods
adc
inc
insb
outsl
jmp
dec
aam
sub
dec
adc
or
mov
ljmp
mov
mov
jmp
movb
jmp
ret
mov
mov
add
arpl
cmp
pop
mov
inc
outsb
push
jmp
push
rolb
shlb
dec
enter
fstpl
scas
pop
lea
dec
arpl
add
lea
push
push
call
mov
jmp
mov
outsb
in
std
jmp
and
lret
movsb
push
mov
testb
inc
jo
movb
movb
movb
mov
push
jmp
sub
xor
inc
cmp
ret
lea
push
push
jmp
mov
lods
lret
inc
mov
jle
cmp
inc
int
and
add
movb
jmp
jno
jp
gs
pop
dec
fdivl
in
lcall
mov
adcl
sub
inc
pop
je
push
add
add
inc
arpl
out
add
add
inc
and
outsb
fimull
mov
lds
or
jmp
stos
cmp
mov
in
loope
jmp
jge
cmpsl
xor
xchg
add
push
aas
repz
mov
lea
push
pushl
call
jmp
or
popf
or
pop
movb
jmp
inc
xchg
movb
jmp
in
adc
imul
sbb
outsl
add
sbb
lock
inc
push
movb
movb
movb
jmp
cld
jge
je
insl
pop
movb
jmp
call
jmp
test
fwait
decb
add
fidivrl
pop
push
add
inc
outsl
gs
pop
xchg
aam
pop
jb
aam
jmp
push
in
cmp
pop
int
addr16
pop
fisttps
stc
jno
xorb
movb
movb
movb
movb
movb
jmp
clc
jno
xorb
out
jg
jmp
push
cmpsl
push
xchg
stos
data16
int3
mov
jmp
fldenv
jmp
pop
xchg
pop
bound
cmp
sbb
jg
jmp
dec
mov
pop
push
movb
movb
movb
movb
jmp
cmp
out
ljmp
xchg
cld
movb
jmp
pop
iret
pop
cmp
mov
fildll
cmp
cltd
push
xchg
fcomps
jmp
movb
jmp
sti
imul
push
mov
mov
es
xchg
and
sub
jg
movb
movb
movb
movb
movb
jmp
jg
jp
in
push
popa
and
inc
pop
je
pop
pop
call
mov
mov
jmp
scas
xor
enter
jae
xor
jmp
dec
roll
sarl
adc
sbb
or
mov
fstl
push
movb
jmp
cli
js
mov
adc
mov
jmp
cmp
movb
jmp
and
xor
lahf
punpckhdq
or
sbb
int
push
arpl
add
movb
movb
movb
jmp
rcrb
scas
pop
mov
push
mov
out
xor
pop
xchg
jmp
divl
xchg
outsb
in
sbb
adc
lcall
inc
ja
inc
xchg
movb
movb
movb
jmp
cld
jnp
mov
cmpsb
sub
sub
test
pop
sub
adc
sub
movb
jmp
push
cs
jl
jne
and
xchg
scas
mov
xor
stos
dec
rcr
rorb
jmp
rcll
push
out
and
mull
icebp
dec
movsl
xor
call
lea
push
push
mov
call
jmp
movb
movb
mov
jmp
add
and
pop
ds
subb
call
jmp
adc
enter
push
jmp
adc
push
jno
aaa
loopne
jmp
jge
mov
out
and
push
jmp
cmc
stc
lea
jmp
fiaddl
mov
lods
dec
inc
and
xor
pop
xchg
repnz
aas
popa
imul
movb
movb
jmp
pop
push
xor
dec
sub
ljmp
test
ljmp
aam
fnstcw
pop
aas
lret
fisttpl
fnsave
jns
test
pushl
xor
sarb
jbe
gs
sbb
into
sti
push
daa
movb
movb
jmp
ret
inc
fidivrl
xchg
cld
psubb
test
jmp
mov
adc
test
jmp
add
add
jbe
loopne
push
mov
gs
addr16
mov
daa
movb
movb
movb
jmp
les
movsb
push
mov
aad
mov
push
jmp
lods
sub
dec
movb
jmp
mov
xchg
repnz
arpl
arpl
cmc
push
or
adc
push
mov
jmp
call
pop
adc
aad
push
xor
or
mov
and
movl
pop
adc
aad
xor
pusha
notb
xchg
cld
shld
sub
test
ljmp
ja
ljmp
js
jmp
xchg
or
dec
movb
movb
movb
jmp
jns
jl
negb
into
pop
cmp
popa
inc
aad
sub
jp
insb
loop
je
rep
movb
jmp
fiaddl
mov
lods
lcall
jno
xorb
out
cld
mov
imul
inc
dec
je
inc
push
jne
inc
push
popa
jmp
sbbb
and
mov
cmpsl
out
jae
xchg
es
test
pushf
movb
movb
mov
call
mov
jmp
mov
jnp
add
outsl
in
bound
jb
in
and
dec
jb
push
cld
add
testl
push
adc
fiadds
add
outsl
call
xlat
push
shll
mov
cmpsl
and
movb
movb
movb
jmp
movsl
sub
cmp
les
add
testl
inc
pusha
push
jmp
rorl
dec
test
push
ret
cmpsb
push
mov
push
lahf
push
inc
mov
inc
dec
movb
mov
call
mov
jmp
jnp
imul
pop
out
jg
jmp
out
rcrb
inc
and
jbe
adc
jmp
push
jno
inc
arpl
add
add
movb
jmp
dec
fimuls
push
mov
mov
das
test
and
pushl
jmp
ljmp
fwait
jbe
ja
ja
loope
mov
movb
jmp
mov
lahf
and
es
mov
clc
jae
xchg
gs
insl
hlt
pop
jo
inc
pusha
jmp
in
jne
mov
mov
rolb
xor
dec
rcrl
jne
inc
inc
popa
movb
movb
movb
jmp
das
mov
inc
mov
adcb
movb
movb
movb
movb
movb
jmp
fildl
dec
lret
lods
sub
and
inc
jmp
stc
cwtl
imul
movb
movb
movb
jmp
jp
imul
or
gs
les
int3
sbb
out
movb
jmp
push
aad
sub
xor
js
jns
pusha
pop
repnz
ja
inc
dec
mov
jmp
cmp
adc
push
fimuls
xor
push
sub
adc
inc
inc
push
movb
movb
movb
jmp
loopne
loop
je
dec
popf
and
movb
movb
movb
movb
jmp
mov
xchg
xchg
add
fdivl
in
fstl
cmpsb
push
loop
jne
inc
je
jmp
out
jle
mov
mov
push
cld
push
cmpsl
add
stos
push
movb
movb
movb
jmp
sub
mov
xchg
push
into
pop
cmp
adc
daa
gs
sub
mov
mov
xchg
adc
sbbl
inc
and
jb
aad
movsb
ret
ds
std
xor
sarl
movb
jmp
pop
test
jge
fs
stos
int
aam
cltd
or
jl
or
push
inc
and
jmp
pop
jecxz
push
in
leave
push
ret
cmpsb
push
cmpsb
ret
inc
aam
dec
cmpsb
test
jno
addr16
pushl
movb
movb
movb
movb
jmp
data16
bound
push
xor
sub
xchg
sub
jmp
adc
xor
inc
aam
repz
gs
mov
nop
testl
inc
sub
sub
sub
inc
sub
movb
jmp
aad
enter
sub
inc
shll
shlb
xor
mov
std
jmp
lods
cmp
mov
cltd
push
ret
ret
mov
mov
jmp
sbb
js
mov
repnz
pop
repnz
popf
or
in
movb
jmp
pop
mov
jmp
fiadds
dec
jge
je
out
or
jp
jp
push
ja
add
fisttpl
jecxz
decl
adc
and
or
call
dec
frstor
aas
lret
xchg
movb
movb
movb
jmp
ret
xchg
gs
and
xor
lds
outsl
jmp
cmpsb
xor
scas
inc
push
xchg
add
in
sbb
movsl
int3
aas
ljmp
xor
movb
movb
movb
jmp
icebp
dec
fidivrl
pushl
jmp
pop
cltd
or
insb
loop
cmc
pushf
outsl
test
or
cmpsb
push
xchg
add
jns
rcll
inc
clc
push
jmp
xchg
mov
movb
jmp
rcrb
stos
pop
test
xchg
add
jne
mov
pop
rolb
shlb
inc
jle
mov
mov
lea
jmp
jae
xchg
cmc
add
cwtl
mov
insb
jmp
movb
jmp
ja
imul
lea
jmp
dec
lds
iret
push
fimuls
push
mull
icebp
push
dec
jecxz
mov
outsl
movb
movb
movb
movb
mov
call
jmp
push
mov
xchg
daa
dec
fimuls
dec
xor
movb
mov
call
mov
mov
jmp
pop
int3
inc
and
mov
mov
sbb
push
pushl
movb
movb
movb
movb
jmp
movsl
sub
movb
movb
jmp
aaa
mov
inc
mov
dec
fisttpl
fnstsw
ss
cmp
mov
test
fdivrs
mov
jmp
mov
mov
push
mov
push
jns
inc
xchg
leave
pop
and
je
inc
push
movb
movb
movb
jmp
or
mov
std
decl
adc
pop
inc
movb
jmp
mov
gs
jecxz
notb
loopne
jb
cmpsb
and
pop
pop
enter
movb
movb
movb
movb
movb
jmp
mov
mov
js
movb
jmp
mov
ror
dec
fnstcw
mov
sbb
aad
int3
scas
mov
rolb
xor
jmp
mov
int
fisttps
flds
in
pop
jb
movb
movb
movb
movb
movb
jmp
inc
into
pop
cmp
and
movb
jmp
stc
bnd
movb
jmp
jecxz
jecxz
jne
ss
call
jmp
pop
rolb
rolb
jno
xorb
fs
popf
insb
lret
aas
jns
push
movb
movb
movb
movb
jmp
inc
aad
sub
imul
scas
movb
jmp
inc
aad
sub
je
mov
jmp
mov
jmp
xchg
add
std
or
push
rclb
imul
clc
push
mov
data16
movb
movb
movb
jmp
cmp
nop
aaa
movb
jmp
out
jns
mov
cwtl
add
xor
daa
dec
dec
pop
fmuls
xor
jmp
in
jnp
mov
imul
xor
enter
dec
push
jmp
movb
jmp
fsubl
xchg
gs
arpl
xchg
gs
xchg
xchg
repnz
popf
stc
pusha
notb
inc
push
jmp
movb
jmp
sub
dec
roll
rcll
add
loope
mov
adc
inc
gs
jmp
inc
ret
ret
sbb
aad
int3
fdivp
xchg
push
movsl
movb
jmp
or
inc
insl
imul
inc
ss
movb
jmp
and
add
add
jmp
orb
adc
sti
mov
jmp
adc
popf
data16
pop
loop
int
clc
adc
les
movb
movb
movb
movb
movb
jmp
int3
popf
imul
dec
and
add
xchg
add
push
xorl
pop
adc
xor
pushl
movb
jmp
movb
jmp
jg
add
add
jmp
int3
popf
in
mov
add
test
push
jnp
inc
xor
imul
cmp
aas
add
xchg
daa
pushf
dec
movb
jmp
hlt
movb
jmp
int3
popf
dec
xchg
cmp
sub
add
call
sarb
scas
insl
outsl
mov
call
jmp
test
cmc
movb
jmp
cs
cmp
div
cli
call
jmp
ds
cmp
mov
add
or
xor
outsb
insb
movb
movb
movb
movb
jmp
xor
pop
aad
lods
xor
mov
jmp
mov
mov
and
or
jmp
hlt
lea
jmp
mov
add
add
jmp
mov
mov
divb
lcall
arpl
fs
movb
jmp
push
xchg
add
lds
xchg
cmpsb
xchg
call
jmp
add
lds
inc
pop
jmp
inc
fimull
fidivl
clc
push
jmp
lret
lods
call
jmp
mov
mov
xchg
das
mov
mov
lea
push
pushl
movb
movb
jmp
sub
lret
xchg
outsb
jmp
hlt
and
int3
popf
jle
imul
sbb
add
out
out
mov
ljmp
jmp
xchg
push
fadd
inc
imul
add
gs
pop
cmp
push
fcompl
stos
scas
jnp
inc
gs
inc
data16
rcr
addb
outsl
movb
jmp
push
cmp
movb
jmp
movb
jmp
add
push
xlat
inc
and
aaa
ss
dec
mov
push
movb
jmp
movb
jmp
or
dec
movb
jmp
pop
fisttpl
outsl
jmp
inc
lds
iret
and
cmp
xor
movb
movb
movb
movb
jmp
mov
inc
jo
movb
movb
movb
mov
jmp
mov
jmp
mov
test
jmp
push
in
or
hlt
fidivrs
jmp
mov
xchg
repnz
mov
nop
testl
dec
mov
mov
inc
xor
je
cmpsb
aaa
mov
addr16
imul
dec
out
mov
jmp
mov
lcall
roll
mov
jmp
jo
inc
push
insl
movb
mov
call
mov
jmp
mov
xor
sub
movb
jmp
fisttps
mov
int
rolb
xchg
add
xor
movb
jmp
aad
frstor
xor
stos
data16
loope
movb
movb
jmp
xor
movb
jmp
imulb
cltd
push
lcall
jmp
andb
and
adc
sub
pop
into
test
leave
lea
push
pushl
movb
movb
movb
jmp
into
xchg
add
add
fldenv
mov
cmp
leave
sti
addb
inc
dec
insb
movb
movb
mov
call
jmp
movb
jmp
in
icebp
nop
arpl
mov
mov
sbb
cmp
cmp
ret
mov
lea
push
pushl
movb
movb
jmp
mov
les
dec
xchg
imul
inc
push
popa
movb
jmp
xchg
pop
adc
inc
gs
bound
addb
dec
mov
jmp
push
nop
push
popa
nop
aaa
push
fisttpl
ss
out
pusha
pop
inc
cmp
movb
mov
call
mov
jmp
jecxz
cld
fwait
jbe
fmull
mov
and
mov
inc
push
outsb
movb
movb
movb
movb
jmp
push
les
movb
movb
movb
movb
movb
jmp
mov
mov
and
mov
push
xchg
add
sub
movb
jmp
daa
jecxz
push
test
inc
insb
jb
cmp
movb
jmp
mulb
nop
arpl
stos
xor
sub
inc
aam
xchg
inc
pusha
inc
movb
movb
movb
movb
jmp
dec
mov
add
movb
jmp
movb
jmp
movb
jmp
cli
lock
bound
pop
mov
and
mov
dec
pop
xchg
inc
imul
rclb
jo
jmp
sbb
or
cmpsb
outsl
jp
outsl
or
out
sub
fucomip
inc
call
mov
mov
lea
push
pushl
jmp
dec
into
pop
cmp
xor
jb
in
mov
stc
xchg
pop
xchg
adc
repz
push
push
jmp
mov
test
shlb
scas
aas
pop
test
adc
add
mov
call
mov
mov
lea
jmp
out
cld
fwait
jbe
push
cwtl
push
imul
pushl
jmp
adcl
jmpw
jmp
cmpsl
cmp
and
test
stos
cmp
add
cltd
or
sub
addl
inc
cmp
inc
cmp
cmp
cmp
adc
lcall
inc
es
adc
adc
jge
inc
and
inc
and
inc
and
and
inc
and
jmp
pop
xchg
push
fildll
je
inc
daa
inc
movb
movb
jmp
out
jp
jp
lods
xor
pop
push
xor
sub
mov
movb
jmp
pop
lret
pop
ds
clc
notl
inc
fmuls
fcomps
dec
fstpt
jge
lea
push
pushl
movb
movb
movb
jmp
addb
icebp
add
jl
insl
hlt
pop
in
cs
cmp
mov
in
xor
movb
mov
call
jmp
mov
mov
pop
into
test
xchg
adc
mov
mov
jmp
popf
pop
xchg
xchg
lock
pop
repnz
fs
mov
sbb
inc
sub
sub
movb
movb
movb
jmp
adc
addl
xor
movb
jmp
adc
push
sub
movb
jmp
jnp
inc
cmp
adc
add
adc
add
mov
inc
mov
mov
mov
pushf
xor
add
add
inc
xor
int
inc
aaa
outsb
jmp
xor
es
cmp
push
pusha
mov
mov
jecxz
inc
push
je
inc
push
movb
movb
movb
jmp
or
or
clc
outsl
lcall
lds
xchg
lea
push
pushl
movb
jmp
push
rclb
jno
lcall
clc
lahf
push
mov
xchg
sub
imul
loope
adc
and
pop
rcll
sub
mov
leave
sbb
inc
movb
jmp
call
jmp
daa
mov
push
jp
mov
jg
inc
jns
inc
push
movb
movb
movb
movb
jmp
fstps
scas
pop
mov
call
mov
jmp
push
rolb
sarb
dec
cmp
movb
jmp
cld
adcl
test
sahf
or
cmpsb
pop
lea
cwtl
decl
add
inc
push
push
hlt
xchg
outsb
xchg
outsb
cld
fwait
jbe
mov
fwait
decb
cli
or
xor
movb
jmp
loopne
lcall
push
popa
nop
aaa
cmp
xchg
fcmovnb
inc
push
gs
pushl
xorb
sbb
fdivl
in
adcl
push
and
sbb
inc
dec
push
movb
movb
movb
movb
jmp
add
or
sub
jge
pop
lea
push
pushl
movb
movb
movb
jmp
les
imul
xchg
and
std
outsl
lcall
jmp
jge
pop
inc
movb
jmp
movb
jmp
movb
jmp
xor
rorb
mov
insb
or
in
push
int3
inc
and
inc
push
mov
call
mov
mov
jmp
mov
cmp
inc
push
fs
sbb
and
pop
into
test
pop
ds
adc
or
or
inc
or
inc
or
movb
jmp
add
or
adc
inc
jge
lods
rcll
cs
sbb
push
mov
lock
bound
test
mov
lea
jmp
movsl
xor
pushl
jmp
dec
push
or
movb
jmp
mov
test
mov
dec
push
xor
sbb
je
lea
cmp
aam
decl
adc
mov
clc
outsb
or
pop
pop
xchg
add
and
inc
out
dec
mov
inc
pusha
inc
jmp
outsl
std
insl
hlt
pop
mov
movsb
ret
ds
loopne
in
jle
insl
cli
push
add
cmp
movb
jmp
push
pop
sub
movb
jmp
sti
pop
push
movb
jmp
sbb
and
sub
xchg
dec
pushf
int3
mov
mov
lea
push
pushl
jmp
xchg
movb
movb
mov
call
mov
jmp
add
sbb
movb
jmp
movsb
lret
mov
xor
jmp
dec
rolb
sarb
mov
mov
jge
je
add
mov
jmp
and
cmp
imul
xchg
sbb
inc
outsl
insl
jmp
mov
movb
jmp
jge
ja
add
jmp
and
jns
outsb
or
sbb
mov
pop
into
test
dec
scas
movb
jmp
push
and
pop
jmp
inc
inc
je
test
mov
stc
jl
jne
insb
push
jecxz
push
in
out
sbb
movb
movb
movb
movb
movb
jmp
mov
xchg
lock
cwtl
adc
movb
movb
movb
mov
call
jmp
dec
push
xor
cmp
mov
inc
mov
inc
push
add
pop
sub
add
je
imul
pushf
sti
push
aam
pusha
notb
cmc
pushf
outsl
fstpt
pop
adc
into
scas
cmp
mov
in
cltd
setg
or
loope
sbb
stos
outsl
clc
movb
movb
lea
push
pushl
movb
jmp
lret
cmp
inc
popa
jne
pop
mov
mov
and
test
cs
scas
cmp
movb
jmp
movb
jmp
adc
sti
popa
icebp
nop
arpl
push
notb
pop
cmp
dec
push
xor
jmp
xor
inc
arpl
xchg
push
pushf
sti
push
xchg
rcll
mov
fistpll
popa
add
sbb
test
cmp
enter
fs
mov
les
pop
and
add
inc
shlb
mov
inc
arpl
inc
outsl
movb
movb
movb
jmp
or
outsb
in
sbb
cltd
clc
or
push
cld
iret
cmp
outsl
movb
movb
jmp
rcrb
scas
pop
mov
push
lods
mov
xchg
daa
dec
cmp
movb
jmp
test
cltd
clc
or
jae
insl
hlt
pop
lret
mov
movsl
aaa
loope
inc
gs
movb
movb
movb
movb
jmp
lods
and
add
rcrl
fld
inc
sbb
dec
movb
jmp
loope
loopne
jb
and
push
push
xor
data16
in
movb
movb
movb
movb
jmp
xchg
or
push
ret
cmpsb
push
cli
aas
test
scas
cmp
mov
outsl
jmp
xor
cmp
mov
push
mov
push
xchg
add
sahf
je
cmp
out
pusha
push
pushl
movb
movb
movb
movb
jmp
in
or
jmp
je
js
ljmp
pop
push
mov
gs
pop
test
mov
imul
sbb
inc
sbb
movb
mov
call
jmp
jno
pusha
pop
repnz
ja
xorb
adc
movb
jmp
insb
push
movb
jmp
xchg
adc
mov
pop
fdivl
in
mov
and
out
mov
movb
jmp
or
movsb
cmp
pop
pop
mov
movb
jmp
mov
movb
jmp
inc
int
and
aaa
jp
pusha
pop
repnz
dec
rclb
xor
mov
jns
das
sub
mov
call
mov
mov
lea
jmp
xor
xchg
pop
movb
jmp
sbb
pop
mov
xchg
repnz
leave
popa
les
lods
pop
hlt
add
cmp
inc
popa
popa
movb
movb
movb
movb
jmp
xchg
add
std
or
mov
jmp
adcb
loopne
mov
sub
and
jne
dec
sub
ja
inc
addr16
faddl
inc
imul
inc
outsl
gs
cs
ja
jo
loop
mov
mov
mov
pusha
movb
movb
movb
movb
movb
jmp
and
push
xchg
add
sahf
je
add
std
or
xchg
lock
jmp
pop
rcll
inc
pop
lds
iret
dec
mov
mov
mov
imul
fs
jge
add
mov
inc
rcll
aas
push
movb
movb
movb
movb
movb
jmp
sahf
jb
movb
jmp
sbb
or
dec
cld
js
mov
jl
outsl
or
out
repz
mov
sbb
movb
jmp
leave
sub
inc
push
jmp
movb
jmp
popf
push
test
push
cld
mov
int3
orb
clc
or
clc
xor
xor
mov
lea
push
pushl
movb
jmp
popa
movb
jmp
movb
jmp
outsb
loopne
adc
inc
mov
call
and
sub
push
dec
pop
movb
movb
movb
movb
movb
jmp
or
sbb
pop
je
pop
inc
roll
aad
ljmp
mulb
push
xchg
push
xchg
repz
mov
outsl
jmp
call
jmp
mov
cwtl
movsl
xor
insl
std
test
cmpsl
xor
cmc
xor
inc
jae
movb
mov
call
mov
jmp
imull
test
add
jmp
sahf
or
aam
sub
push
lds
xchg
in
mov
jmp
dec
roll
sarl
or
or
jae
cltd
or
push
subl
je
inc
jb
lea
push
pushl
jmp
mov
aad
inc
addr16
inc
imul
inc
imul
movb
jmp
in
jb
xchg
ljmp
iret
pop
cmp
aas
test
movb
jmp
mov
cmpsb
shll
out
cmc
pushf
outsl
mov
or
mov
cltd
clc
or
int
movb
movb
movb
movb
movb
jmp
mov
movb
mov
jmp
cmc
ja
xorb
jmp
push
in
add
push
cmp
imul
int3
std
jmp
xchg
pop
xor
repz
jp
pop
in
inc
cmc
movb
movb
movb
movb
movb
jmp
cli
je
lea
pop
leave
test
in
and
popf
push
jmp
push
jmp
xor
addb
add
rcrl
mov
adc
jecxz
or
pop
pop
mov
pop
add
leave
ret
jmp
pushf
jmp
rcrb
fildl
dec
cmp
add
add
jmp
dec
fdivl
in
mov
mov
and
add
stos
lock
jmp
fimuls
mov
lcall
bound
shlb
pop
fistpll
jmp
fdivr
adc
inc
ljmp
add
xor
xchg
xor
pop
into
test
imul
push
pushl
movb
movb
jmp
inc
fmuls
fdivs
lahf
push
xchg
repz
out
jmp
mov
pusha
jmp
inc
mov
jmp
mov
mov
ja
xorb
mov
sbb
lea
jmp
stos
das
mov
mov
jmp
in
inc
mov
jmp
dec
leave
pop
cmp
and
pop
into
test
xor
pop
xchg
sbb
sbb
movb
movb
movb
movb
movb
jmp
push
lcall
int
lea
inc
es
scas
and
int3
inc
sub
jmp
rcrb
scas
pop
mov
movsl
push
push
dec
mov
andb
jmp
dec
popa
jmp
lods
and
lret
lret
sahf
or
cmpsb
add
lea
movb
movb
movb
movb
movb
jmp
rolb
mov
call
movsb
popa
jmp
jmp
and
sbb
add
cmp
xchg
add
and
dec
fdivrs
je
jmp
scas
cmp
pop
enter
or
pop
imul
add
adc
cmp
jmp
lahf
imul
mov
jmp
js
jbe
loopne
xchg
adc
adc
inc
mov
test
add
mov
movzbl
add
jmp
cmp
cmp
in
sub
push
push
test
je
mov
jmp
mov
cmpsb
and
imull
imul
jmp
and
call
sbbb
mov
shll
lea
call
pop
jmp
cmp
push
lds
aam
mov
add
add
jmp
mov
int
ja
xorb
cmp
dec
das
sub
jmp
imul
leave
inc
xlat
mov
stos
jmp
testl
add
xor
push
pushl
loopne
fmuls
fmuls
stc
imul
lret
scas
pop
cld
jle
jmp
arpl
addr16
dec
push
lret
pop
ds
bound
jne
push
jmp
cltd
setg
or
sti
push
test
hlt
es
inc
mov
mov
add
add
lea
jmp
xor
out
add
and
add
add
jg
jmp
scas
pop
std
mov
xchg
adc
or
jg
cmp
jb
lea
call
lea
jmp
imul
push
jmp
mov
cwtl
lea
jmp
filds
mov
cmpsb
and
sbbl
and
jmp
xor
and
mov
ret
jmp
out
insb
loop
je
push
xlat
inc
and
aaa
sub
or
imul
call
pop
pop
test
jne
mov
jmp
dec
neg
pop
leave
ret
jmp
xor
sub
jmp
enter
add
popa
mov
sti
outsb
ljmp
in
mov
nop
arpl
pushf
jmp
pop
add
jmp
jns
pusha
pop
repnz
pop
lret
scas
pop
mov
jp
add
inc
xor
pop
jmp
arpl
arpl
cmc
push
add
xor
pop
cltd
jno
out
pushl
mov
jmp
mov
jmp
aaa
mov
out
adcl
test
mov
popa
je
pusha
jmp
jecxz
sbb
add
add
popa
jmp
and
jmp
cmp
add
add
data16
xchg
outsb
fildll
insb
or
scas
xchg
add
adc
sbbl
call
mov
call
push
lea
jmp
cmp
jmp
add
adcb
sbb
mov
xchg
pop
rcll
add
pop
jge
mov
ret
pusha
stc
imul
fstpt
imul
push
xor
inc
cmp
popa
sbb
sub
jo
mov
jmp
stos
cmp
cltd
sti
mov
add
add
mov
movzbl
jmp
out
cmp
jmp
clc
jp
jp
jmp
cltd
push
out
cli
pusha
sbb
shrb
repnz
jmp
ja
fs
sbb
icebp
test
xchg
lock
mov
cmpsl
ret
mov
xorb
roll
add
jne
jmp
call
je
popa
mov
jmp
test
xchg
repnz
sub
pop
pop
rolb
shlb
rorl
dec
mov
cli
popl
lea
jmp
mov
ret
pop
and
jb
es
cs
into
mov
adcl
sub
jmp
jnp
gs
aas
and
xchg
add
pop
and
jle
dec
pop
mov
jmp
cmp
cmp
test
or
xor
or
lods
and
add
sar
inc
adc
or
sbb
jl
mov
aaa
cmpsl
ret
jge
jg
jmp
jmp
xorl
add
push
adc
jmp
movsb
cmp
outsl
pop
test
jge
outsb
daa
mov
xchg
or
push
test
je
push
mov
lea
call
pop
xor
jmp
sti
imul
insl
in
imull
cltd
push
mov
inc
cmp
jb
lea
call
jmp
lods
fs
jmp
pop
jmp
bnd
xorb
xchg
add
jp
or
or
in
fistps
fldt
jns
jmp
out
push
leave
push
ret
cmpsb
push
cmpsb
push
aam
cmp
sub
aam
xor
jmp
xor
sub
dec
rcll
and
cmpsl
aaa
push
mov
mov
or
mov
movb
jmp
scas
and
leave
mov
ljmp
jmp
pop
jmp
and
mov
lods
lret
inc
xchg
test
sahf
stc
or
mov
xchg
mov
lea
jmp
cmp
sub
outsl
and
pop
jmp
cmp
and
inc
and
outsb
leave
pop
into
test
nop
testl
xchg
cmp
xchg
add
add
mov
jmp
push
mov
pushf
xor
add
push
lret
lahf
push
cmpsl
cmp
sbb
call
mov
call
push
jmp
cld
leave
jmp
and
es
ja
jl
negb
idiv
aas
neg
repz
mov
call
pop
jmp
xchg
pushl
mov
push
test
push
cltd
or
out
pop
out
push
push
jmp
lods
mov
sbb
xor
mov
push
mov
mov
jg
outsl
or
stc
xchg
sub
push
push
pushl
call
push
lea
jmp
outsl
fildl
mov
jmp
or
sbb
pop
mov
sahf
stc
or
sub
inc
pop
rolb
shlb
insl
push
pushf
jmp
sub
add
xchg
jmp
sub
mov
int
sti
imul
or
pushl
jmp
push
fmuls
fdivrs
adc
adc
inc
cmp
inc
cmp
inc
cmp
inc
cmp
movb
jmp
repz
inc
in
incl
in
push
mov
sub
push
push
test
jmp
and
jne
lods
and
adc
adc
shrl
dec
add
add
out
nop
mov
inc
jmp
push
jmp
mov
xchg
mov
enter
loop
je
xchg
add
add
lea
jmp
pop
dec
inc
fstpl
pop
jmp
xchg
jmp
lcall
mov
inc
mov
mov
in
fsubl
je
jmp
xlat
dec
ret
mov
scas
rorb
and
stc
fiaddl
mov
test
movb
mov
mov
test
mov
jmp
mov
out
lea
xchg
std
or
jle
xchg
testb
std
adc
mov
push
jmp
xchg
adc
cs
insb
or
shll
mov
std
jmp
cmp
xlat
push
shlb
leave
cmp
jg
push
or
add
mov
add
cmp
jmp
inc
iret
pop
cmp
xor
xchg
ljmp
stc
hlt
jg
addr16
pop
movsb
jno
inc
jb
lea
call
lea
jmp
arpl
cmc
daa
xchg
and
jne
jmp
stos
es
cs
pop
call
push
jmp
adc
movsb
cmp
sbb
test
xor
into
xchg
pop
call
jmp
and
push
imul
in
mov
xor
push
jmp
call
jmp
xchg
push
xchg
repz
cmpsl
dec
fdivl
in
es
inc
mov
mov
xor
mov
sub
inc
cmp
jmp
mov
out
cmpb
jmp
xor
cmp
add
ljmp
xchg
repnz
pushl
call
push
lea
jmp
lods
aam
sub
lcall
test
jge
or
and
pop
imul
sbb
add
jmp
fcomps
test
cmp
dec
pop
fimull
fisubl
jae
xchg
push
mov
xlat
mov
ljmp
lods
cmp
and
popf
jmp
int3
dec
fistpll
jle
cltd
mov
jmp
lret
mov
mov
clc
outsb
or
sbb
jne
out
or
arpl
jno
std
jmp
outsl
xor
pushl
jmp
push
fisttpll
out
ljmp
jae
xchg
xlat
inc
negl
pop
adc
int
frndint
jns
jmp
lods
mov
jmp
sbb
mov
xchg
repz
test
mov
and
ja
lea
lea
call
pop
pop
test
jne
jmp
pushf
or
in
movsl
mov
fwait
dec
fdivl
in
xchg
or
stc
test
jbe
sub
jmp
movsl
aaa
cmpsl
ret
dec
fisttpll
out
call
mov
mov
inc
mov
jne
inc
or
add
jmp
jmp
insb
pop
mov
out
jbe
cmpl
inc
and
xor
sahf
or
cmpsb
and
add
add
jne
addl
jmp
push
fisttpl
fstl
jge
mov
jmp
adc
out
outsb
cld
fwait
jbe
ja
fs
sbb
inc
and
and
lea
mov
ret
xchg
xchg
icebp
add
or
dec
scas
adc
insb
sub
rolb
add
jmp
dec
lret
lret
pushf
xor
push
outsl
mov
xor
mov
lcall
inc
and
cmp
pop
mov
popl
jmp
test
lret
stos
and
roll
aad
jle
mov
add
cmp
je
jmp
adc
dec
jo
lahf
push
jmp
pop
inc
and
sbb
sub
jmp
in
pusha
notb
adc
inc
xlat
mov
out
test
jge
cmp
lea
jmp
push
jmp
and
call
aaa
mov
mov
and
and
mov
ret
push
lds
or
pop
scas
cmp
add
std
or
xchg
mov
and
cmp
jne
addl
mov
jmp
push
leave
pop
cmp
and
jmp
push
into
pop
cmp
push
jno
jl
divb
adcb
orb
lea
jmp
test
xchg
repz
out
sub
lds
iret
sub
jge
je
jnp
pop
jmp
aad
and
ljmp
call
and
push
leave
push
ret
cmpsb
push
cmpsb
inc
rcll
sub
jmp
pushl
adc
mov
lea
call
jmp
xor
movsl
xor
sbb
and
push
jmp
ja
push
pop
jp
inc
sub
jmp
cli
jbe
cmpl
xor
int
fwait
jecxz
out
jno
loope
mov
rorb
sub
inc
cmp
jb
lea
call
jmp
mov
mov
and
dec
loop
jg
mov
sbb
test
and
ret
jmp
sahf
setg
or
jmp
scas
cmp
in
bound
dec
fstpl
cs
dec
pushf
mull
sar
inc
adc
sub
dec
mov
and
stos
cmp
dec
push
sahf
or
cmpsb
dec
popf
add
std
or
xchg
into
mov
jmp
outsb
push
inc
js
rorb
jecxz
adc
add
push
sbb
sub
leave
ret
jmp
js
lods
in
pusha
mov
mov
jmp
or
cmpsl
es
cs
cmp
out
outsl
lcall
mov
jmp
sbb
cli
push
in
sbb
mov
xor
xchg
popf
pushl
mov
jmp
adc
lods
sub
add
cmpl
sub
dec
cmp
cld
xchg
cmc
add
jl
popa
add
jmp
sbb
loope
cmpl
repnz
aam
iret
stos
pop
rcrb
push
jns
ds
fcoml
sar
inc
adc
setl
push
movsb
or
cmp
aaa
cmpsb
xor
scas
pop
mov
cmpb
mov
jmp
adc
adc
sub
test
cmp
jmp
inc
rolb
shlb
fisttps
fldenv
insb
push
inc
js
scas
andb
sub
jo
mov
and
cmp
jmp
add
xor
dec
push
popa
add
sbb
inc
fidivrl
lods
add
jmp
iret
push
mov
test
jmp
pop
fistl
add
lret
dec
fnstcw
and
mov
mov
call
pop
jmp
ja
das
and
jmp
sbb
mov
xchg
push
jmp
scas
sub
fdivl
in
xor
pop
adc
lea
jmp
test
xchg
icebp
add
dec
ret
cmpsl
cmp
es
cmp
mov
jg
outsb
sub
icebp
jge
je
and
pusha
notb
imul
jmp
adc
sub
or
movsb
xor
add
incl
dec
ror
jmp
subb
call
sub
add
mov
mov
sbb
inc
out
add
mulw
icebp
push
push
test
sarb
jmp
in
jg
mov
out
loopne
jb
jmp
mov
fwait
test
fstl
dec
or
shr
jmp
shrb
test
je
lea
jmp
cli
notl
cmp
cmp
inc
pop
lret
pop
ds
lret
pop
lret
scas
pop
fdivrl
add
pop
push
jp
and
scas
aas
pop
test
xlat
popf
cmpl
jmp
test
fists
nop
push
popa
nop
jne
xchg
add
jae
test
add
test
je
add
mov
jmp
jmp
mov
adc
xchg
add
add
jno
test
pop
test
mov
mov
ljmp
pusha
pop
repnz
jmp
shlb
jmp
movsl
cs
ret
jmp
pop
roll
shll
pop
test
inc
xlat
mov
call
popa
mov
jmp
jae
pop
cmpl
jmp
add
pop
popa
xor
out
jmp
inc
jmp
push
lcall
xchg
adc
jecxz
std
outsb
cld
fwait
jbe
pop
adc
mov
mov
test
je
lea
jmp
jmp
add
jmp
jae
jno
jecxz
mov
popf
mov
test
jecxz
call
mov
call
mov
cmp
je
jmp
adc
icebp
push
jmp
iret
pop
into
test
adc
ss
jo
inc
jmp
mov
jmp
out
loopne
jb
and
xor
push
push
sahf
insb
sub
mov
jmp
cmc
jae
xchg
dec
fisttpl
fnsave
pop
iret
stos
pop
loopne
xchg
mov
call
pushl
call
jmp
lock
jmp
jl
jno
jecxz
jb
add
cmp
inc
xlat
mov
cmpsl
xor
cmc
jne
addl
jne
jmp
repnz
sub
add
jmp
rcll
cmpsl
push
mov
sub
outsb
cld
fwait
jbe
and
mov
inc
and
jmp
test
xchg
repnz
daa
mov
and
cwtl
adc
call
jmp
mov
pushl
jmp
mov
fst
pop
int3
stos
data16
notl
add
push
popf
jmp
hlt
jp
jp
fcoms
lods
pop
mov
xchg
add
push
sub
aaa
push
mov
adc
mov
jmp
jno
jno
jecxz
data16
imul
push
add
sub
inc
shll
lds
jmp
sbb
cmp
adcl
test
lcall
shr
cmpsb
cld
jmp
xchg
test
mov
es
movsl
xor
pop
int3
stos
data16
lea
push
pushl
mov
push
push
mov
call
jmp
jp
in
inc
or
add
xor
dec
rorb
push
rorl
pushf
out
dec
lret
loopne
add
sbb
out
idivb
mov
sub
jle
stos
loope
jmp
andb
jmp
ds
mov
stc
mov
iret
ja
imul
add
call
test
je
jmp
sub
jmp
dec
mov
jmp
movzbl
jmp
jmp
mov
cmpsl
ret
adc
inc
enter
sub
jbe
cmpl
lahf
movsl
ja
lcall
and
mov
lcall
test
jmp
push
test
jo
jmp
adc
or
cmp
jmp
orb
sti
push
aam
push
ret
cmpsb
push
hlt
xor
lret
sar
inc
adc
sbb
sbb
xchg
and
int3
popf
sub
fs
popf
insb
fcmovnb
xchg
jno
popl
jmp
sub
cmp
push
call
adc
adc
cmp
ret
mov
and
jmp
jp
xchg
cmc
add
movsb
and
imul
sbb
xchg
add
and
xor
rol
push
jb
clc
mov
jb
test
jmp
rolb
add
jmp
cs
xchg
adc
or
in
mulb
mov
xor
movsl
cmp
out
adc
push
orl
push
xor
sub
sbb
test
cmp
sub
jb
imul
sub
dec
fnstcw
aam
dec
cmpsb
mov
fisubrl
jnp
in
or
cltd
or
jge
xor
jno
insl
hlt
pop
mov
adc
notl
mov
xchg
rcl
and
cmp
jne
addl
mov
jmp
mov
mov
cs
sbb
or
xor
sbbl
out
sbb
cltd
push
cli
or
push
repnz
fdivrl
loop
je
int3
push
lret
mov
pushf
xor
dec
data16
outsb
or
jg
ret
push
lds
pop
bound
push
movsl
dec
xchg
adc
in
sbb
int3
push
ret
cmpsb
push
mov
jne
mov
sti
jl
jne
push
movsb
loop
mov
int3
pusha
mov
mov
mov
andb
sub
jo
jmp
xchg
push
test
push
jmp
notl
cmp
cmc
jle
mov
pop
lods
dec
jbe
lea
xchg
lock
mov
dec
mov
mov
call
dec
cli
cmp
pop
dec
fmuls
fsubrs
and
pop
xchg
repnz
movsl
or
xor
ja
fs
popf
insb
lret
sbb
sbb
insb
mov
mov
xor
mov
sbb
test
or
jmp
cld
ljmp
bound
add
and
jmp
xchg
push
xchg
or
add
out
adc
push
xchg
adc
jp
jp
stos
sub
lds
mov
xchg
sbb
cmp
cmc
gs
push
orb
cli
or
popf
sbb
adcl
test
push
shll
pop
mov
aam
into
test
in
je
and
icebp
adc
iret
pop
int
addr16
sub
gs
pushf
outsl
fcompl
cmp
pusha
in
jg
mov
lods
cmp
sub
mov
xchg
setg
or
out
in
je
insl
pop
lds
iret
dec
lahf
add
cmp
inc
fidivrl
push
xor
sub
inc
aam
dec
stos
mov
pushf
sti
push
call
inc
xchg
xor
dec
fwait
dec
ljmp
ljmp
bound
add
and
jmp
xchg
jge
notl
pop
roll
shll
sub
cmp
dec
ja
insb
or
cmc
push
jp
in
dec
fwait
adc
in
sbb
xor
adc
outsl
adc
cld
ljmp
bound
or
and
jmp
xchg
push
add
das
jp
jle
call
jo
sub
add
and
and
mov
and
addr16
and
lds
aam
out
icebp
popa
add
adc
cltd
or
jae
data16
xchg
outsb
xchg
mov
setg
or
or
jmp
push
in
add
lock
pop
mov
mov
mov
in
bound
xor
dec
jno
imul
inc
and
cmp
in
jge
notl
fcoms
mov
xchg
cmc
add
adc
or
dec
in
pusha
notb
arpl
cmc
push
out
adcl
test
pop
lock
adcl
jg
jg
jmp
and
jbe
movsb
ret
ds
js
mov
ficoml
testl
sbb
add
sbb
cs
inc
aam
dec
lods
pop
push
xor
and
pushf
xor
dec
insl
adc
sbb
add
add
outsl
add
sbb
adc
add
pop
dec
sbb
add
or
or
add
add
or
fwait
sub
adc
or
pop
rclb
inc
loope
in
mov
lret
daa
movsb
cmp
inc
mov
lret
std
test
or
ja
popf
or
fmuls
fsubrs
test
cmp
cmp
int
stos
cmp
dec
jmp
xchg
sbb
add
xor
pop
mov
leave
mov
sub
adc
adc
dec
and
adc
cmp
mov
or
or
sbb
add
cwtl
or
or
sbb
or
or
outsl
or
add
dec
clc
sub
add
sbb
add
mov
and
pop
xchg
adc
jae
cmp
inc
aad
dec
cld
inc
rolb
sarb
xchg
add
and
inc
sub
je
jne
mov
call
and
adc
add
xor
push
xor
daa
mov
and
push
lds
pop
cmp
add
push
xor
es
outsl
or
out
adc
xchg
xchg
icebp
add
mov
xchg
fistpl
xchg
addr16
mov
movsl
int3
aas
aad
add
fisttpl
fnstsw
stos
and
mov
jns
jnp
push
lahf
push
and
cmp
pop
rolb
shlb
les
int3
jp
xor
xchg
or
sub
and
xchg
xchg
lcall
push
cld
ljmp
bound
add
and
jmp
ret
lret
inc
fs
outsl
xor
add
add
outsl
add
sbb
or
or
add
or
sbb
or
add
add
add
add
mov
pop
pushf
xor
inc
bnd
jp
dec
frstor
mov
cmp
js
scas
cmp
mov
orl
sti
push
mov
inc
fidivrl
call
insl
std
test
leave
pop
into
test
jno
jecxz
rclb
pop
hlt
cltd
adc
adc
sub
adcl
test
inc
and
xor
cmp
xchg
add
push
js
jne
out
push
add
int3
inc
and
sub
push
addl
mov
les
push
xor
pop
aam
mov
xchg
repnz
mov
xchg
lock
iret
inc
fidivrl
sti
sahf
insl
mov
fldenv
test
pop
test
lret
inc
fidivrl
sarl
xchg
mov
and
cli
popf
insb
mov
dec
fistpll
aam
int
fwait
or
sbb
pop
xchg
repnz
and
push
outsl
and
add
add
add
or
or
or
add
add
push
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
add
outsl
add
and
adc
test
ret
mov
stos
lcall
xor
push
rolb
push
cld
ljmp
bound
or
and
add
add
mov
popa
xchg
jmp
add
mov
and
adc
jb
push
cld
add
inc
and
mov
sbb
sub
cltd
or
jnp
jmp
push
in
cmovno
pop
cmp
cmp
push
sub
rcrb
stos
data16
push
dec
mov
mov
das
fwait
insl
insb
or
scas
movsl
cmp
cmc
gs
push
leave
pop
int
addr16
push
jo
jp
in
pop
stos
lods
lret
inc
loope
int
and
push
push
xchg
add
jno
pop
into
test
call
mov
xchg
adc
mov
setg
or
push
rolb
sarb
divl
mov
pop
fimull
fidivrl
mov
mov
adc
jae
jnp
xchg
add
adcb
xorb
cwtl
decl
call
andb
shlb
faddl
mov
pop
or
jmp
and
adc
pop
into
test
or
or
or
cld
ljmp
bound
or
and
jmp
mov
pusha
sub
adc
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
mov
jo
insl
hlt
pop
shll
imul
int3
stos
shlw
and
adc
push
scas
inc
roll
shll
mov
mov
subb
or
mov
or
push
fwait
or
jns
aas
scas
lret
mov
mov
lds
iret
dec
insb
icebp
popa
add
jbe
fistl
push
mov
jle
arpl
lods
xor
movsl
xor
xlat
inc
and
or
jp
ljmp
stc
out
out
jecxz
jne
movsl
cs
lcall
or
push
lods
lret
inc
loope
or
fcoms
pop
sahf
clc
jnp
mov
add
out
adcl
test
data16
dec
xchg
add
std
or
jp
bound
sbb
mov
dec
sbb
sub
outsl
adc
adc
add
add
outsl
or
sbb
adc
or
pop
dec
sbb
fildl
add
add
bound
add
mov
nop
shrb
mov
sub
adc
jmp
pushf
pop
mov
and
lock
aam
sub
shll
or
cmpsb
and
gs
pushf
outsl
movsb
icebp
jb
xchg
enter
dec
mov
cmp
cs
pop
test
or
sbb
pop
add
mov
rcll
dec
adc
push
adc
sbb
add
inc
lret
lret
xchg
add
mov
dec
mov
shlb
dec
fimull
fisubrl
adc
sub
jbe
loopne
mov
mov
and
shll
lock
lret
mov
mov
sbb
cmp
pop
rcll
add
lock
bound
repnz
imul
aaa
cmpsl
ret
mov
mov
je
lea
insl
std
test
cmpsb
xor
scas
inc
pop
xchg
add
sahf
jnp
cmp
mov
adc
andb
jmp
cltd
jo
mull
icebp
or
mov
inc
mov
decb
mov
out
data16
xchg
outsb
mov
push
inc
int3
inc
and
push
add
add
outsl
adc
add
insl
dec
add
add
add
add
or
outsl
or
add
outsl
add
push
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
pop
outsl
adc
add
outsl
add
add
fildl
add
add
pop
dec
sbb
add
outsl
add
sbb
add
add
lea
add
add
sbb
add
add
outsl
add
add
mov
add
jmp
int3
sbb
mov
mov
xchg
pop
lret
scas
pop
in
mull
icebp
push
push
lret
pop
ds
adc
test
and
inc
and
jbe
aas
scas
lret
mov
mov
outsb
cld
fwait
jbe
scas
xor
int
fisubs
outsl
or
in
call
xchg
mov
cmpsl
out
out
mov
mov
stos
int
cmc
push
jg
jmp
jb
lds
mov
repnz
mov
adc
cld
ljmp
bound
add
and
jmp
out
adc
dec
fnstcw
and
inc
out
push
lahf
push
loopne
clc
lahf
push
xchg
sbb
pop
int
xorl
xchg
add
sahf
cmp
loope
mov
jno
or
jmp
sub
adc
dec
fidivrs
mov
pusha
notb
xor
pop
jae
jbe
loopne
adcb
out
mov
sbb
add
add
insl
add
add
or
or
add
or
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
or
add
sbb
fildl
add
add
add
xchg
add
push
popf
or
lea
adc
xor
aas
stos
cmp
or
divb
les
sbbl
jecxz
call
xor
insb
icebp
popa
add
jbe
xchg
add
pop
lods
cs
and
push
lret
mov
sub
test
mov
insb
or
repz
fimull
fidivl
and
jg
push
cld
push
jae
imul
cmp
mov
orb
sti
push
mov
jne
mov
inc
leave
pop
cmp
or
outsl
sbb
sub
test
or
mov
add
mov
mov
mov
outsb
cld
fwait
jbe
les
pop
in
adc
sbb
and
mov
cmc
pusha
mov
adc
add
mov
pop
or
jmp
jns
lcall
pusha
notb
and
jb
jge
je
addr16
jecxz
push
in
or
je
inc
fidivrl
lcall
shll
daa
sarb
mov
movsb
ret
ds
xchg
adc
dec
frstor
mov
out
mov
test
xchg
repnz
in
data16
xchg
outsb
popf
or
adc
push
xor
sub
dec
or
add
add
adc
add
and
push
or
jmp
mov
dec
clc
sub
or
sbb
add
add
adc
add
add
rclb
add
add
mov
imul
bound
or
or
jmp
in
mov
mov
mov
sbb
decl
xchg
adc
and
outsl
les
test
push
lret
sti
es
add
inc
sub
adc
mov
cmpsl
aaa
test
pop
test
xchg
adc
addl
scas
cs
lea
stos
cmp
push
push
roll
roll
fcomps
fs
xlat
push
shlb
push
movsl
push
cli
ja
xorb
es
cs
test
jo
xorl
xchg
inc
aad
iret
stos
pop
movsl
int3
inc
xlat
mov
call
cmpl
mov
shlb
cmp
pop
int3
stos
data16
dec
fdivrs
pop
cmp
jle
jecxz
push
in
adc
je
jnp
in
inc
js
pop
outsl
xor
add
add
or
or
add
or
add
or
sbb
add
or
add
add
add
mov
fmuls
mov
mov
and
aas
mov
popa
add
push
pop
rcll
add
jne
mov
ret
pop
leave
test
mov
pop
repnz
mov
mov
dec
ret
shrl
cmp
mov
xchg
adc
mov
stos
cmp
and
ret
push
lds
mull
cmp
push
jnp
mov
inc
int
and
aaa
int3
inc
fidivrl
or
cmpsb
push
inc
leave
pop
cmp
outsb
jmp
mov
sbb
sbb
pop
bound
xor
jns
sbb
push
mov
mov
and
pop
into
pop
cmp
roll
mov
scas
leave
cmp
imul
cs
mov
outsb
mulb
adc
adc
in
sbb
dec
jnp
xor
or
or
sbb
add
push
adc
add
mov
or
mov
dec
clc
insl
bound
or
add
and
or
jmp
outsb
jmp
xchg
adc
inc
aad
dec
test
fmulp
dec
frstor
push
inc
mov
in
ljmp
xor
mov
mov
adc
mov
lret
pop
xchg
add
mov
js
jp
js
mov
arpl
cmc
daa
sub
clc
jnp
mov
add
add
sahf
sub
addl
outsl
insb
or
scas
mov
mov
add
pop
out
loopne
jb
adcl
xor
notl
stos
xor
sbbb
jmp
mov
push
shll
and
mov
aaa
ret
push
shll
xor
aas
sub
adc
add
mov
or
jmp
cmp
xchg
gs
fisttpll
out
sub
dec
les
int3
aas
add
fwait
adc
cs
dec
fstpt
cmc
pushf
outsl
mov
mov
nop
and
pop
iret
stos
pop
rorl
cltd
or
xor
imul
das
dec
mov
mov
repz
pop
xchg
repnz
mov
and
jbe
push
shlb
and
lds
dec
inc
push
add
add
outsl
and
add
insl
outsl
xor
or
or
or
or
add
or
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
or
add
pop
outsl
adc
or
outsl
or
add
fildl
or
or
pop
dec
sbb
add
outsl
or
sbb
or
add
lea
or
add
sbb
or
or
outsl
or
add
mov
add
jmp
xchg
jp
nop
push
popa
nop
js
fisttps
flds
xchg
xchg
repnz
sub
mov
test
fdivl
outsl
or
hlt
mov
ficoml
mov
push
xor
imul
pop
loope
jecxz
jne
outsb
loope
adc
inc
inc
fisttpl
inc
mov
jmp
jnp
in
add
push
dec
aad
sub
pop
xchg
std
or
movsl
fs
mov
jmp
testl
push
lret
pop
ds
jno
jnp
in
pop
fisttps
mov
lret
lahf
int
adc
add
ljmp
bound
add
and
add
add
mov
rcll
bound
add
add
dec
das
or
mov
xor
adc
add
or
pop
sbb
sbb
data16
clc
out
push
call
push
add
add
pusha
and
pop
cmp
aas
fwait
or
cwtl
push
imul
outsl
sbb
add
lods
add
mov
or
jmp
lahf
push
out
sti
sahf
insl
cmp
adc
imul
add
call
jge
xchg
cmc
add
mov
and
in
inc
mov
leave
or
pop
sbb
packssdw
or
xor
sahf
imul
jmp
popf
sbb
and
mov
sarb
mov
inc
mov
pop
or
sbb
cld
push
cmc
push
call
sahf
push
test
push
cli
leave
inc
mov
mov
mov
jg
sub
ljmp
call
push
call
pop
mov
jns
add
call
sbb
cwtl
adc
in
sbb
pop
rolb
shlb
or
in
mov
outsl
xor
sbb
add
add
add
add
add
add
xor
add
mov
push
stos
lret
add
bound
or
pop
dec
sbb
add
or
or
add
add
or
fnstenv
or
mov
in
add
xchg
add
cmp
add
jl
negb
stc
imul
mov
cld
sub
add
sbb
add
add
adc
add
add
rclb
add
add
mov
fists
bound
or
or
jmp
sub
or
sbb
add
cwtl
add
add
add
add
dec
hlt
sub
or
sbb
add
mov
repz
mov
add
call
inc
mov
mov
pop
mov
add
jbe
jmp
imul
push
inc
shlb
cwtl
decl
lods
mov
push
call
rorb
imul
jmp
push
call
pop
push
xor
or
xchg
jae
insl
std
test
add
loopne
add
sub
ljmp
add
sbb
jge
je
add
push
call
dec
aam
sub
frstor
inc
mov
push
les
loop
je
dec
int3
inc
and
or
dec
sub
inc
push
xchg
add
jns
xor
inc
aam
dec
lods
pop
int3
stos
data16
or
cmpsb
push
jg
addr16
pop
sbb
jbe
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
dec
les
int3
sbb
dec
fdivrs
ljmp
dec
jo
movsl
xor
cs
test
jge
and
fwait
sub
sahf
adc
cmp
cmpsb
jl
je
out
sub
push
mov
xor
dec
roll
sarl
scas
xor
jg
flds
sub
add
add
outsl
and
or
and
jmp
adc
scas
inc
popf
je
dec
clc
sub
cwtl
or
bound
or
lahf
or
jmp
fdivrl
push
nop
push
popa
nop
outsb
sbb
dec
mov
sahf
stc
or
adc
jge
gs
push
xor
sub
icebp
popa
add
adc
and
pop
ljmp
pop
lea
xchg
repnz
jo
xchg
testb
dec
decl
mov
mov
test
xchg
or
inc
aad
sub
je
aas
scas
lret
fisttpl
mov
xchg
lock
sbbl
rcrl
pop
icebp
push
clc
data16
xchg
outsb
jmp
icebp
js
pop
xchg
repnz
lea
pushf
sti
push
jbe
fs
push
movsb
sub
clc
outsb
or
push
sub
cmp
jle
aam
sub
or
je
mov
inc
mov
dec
rcll
and
cld
aam
repz
gs
push
mov
add
lea
pushf
sti
push
incb
test
mov
out
outsl
lcall
sub
mov
or
jmp
xor
adc
icebp
jbe
cmpl
adcl
cs
call
push
fisttps
flds
aas
fstps
xchg
pop
bound
lahf
push
add
push
fisttpll
out
sub
pop
clc
push
lahf
push
rolb
mov
out
loop
pop
loop
insl
std
test
push
rclb
jno
inc
shll
insl
hlt
pop
mov
adc
movsb
ret
ds
mov
int
mulb
adc
nop
push
popa
nop
js
mov
inc
mov
inc
fistpl
xchg
jb
inc
xchg
adc
jno
xchg
testb
cwtl
add
sbb
add
xor
adc
xchg
push
test
push
divb
mov
dec
mov
mov
movsl
int3
aas
ljmp
dec
lret
lret
data16
xchg
outsb
popf
fcoml
lods
pop
mov
scas
dec
ja
insb
or
cmc
fwait
sbb
xchg
pop
bound
fildll
call
push
mov
mov
out
sbb
inc
mov
cmc
fs
popf
insb
lds
or
nop
push
popa
nop
cmp
xchg
testb
test
cmp
adc
lret
cmpsl
push
mov
cs
mov
cmpsb
insb
icebp
popa
add
jbe
lahf
punpckhdq
repnz
pop
test
ljmp
stc
loop
push
test
push
loopne
push
pushf
sti
push
rcl
shlb
shlb
jl
fs
or
and
stos
and
rclb
xor
xchg
push
lcall
or
or
sbb
add
bound
adc
sub
mov
push
fimull
fidivrl
insb
or
sarb
mov
dec
mov
jno
daa
je
je
out
pop
into
arpl
xchg
gs
stos
into
cmp
mov
xchg
repnz
push
scas
and
fwait
push
pushf
sti
push
mov
movsb
ret
ds
mov
ret
lds
ret
jnp
jnp
in
insb
dec
aad
sub
pop
sahf
sbb
aad
in
sti
js
mov
out
outsb
cld
fwait
jbe
repz
xchg
mov
cwtl
decl
hlt
inc
les
int3
sbb
scas
cmp
mov
or
ficoms
pop
scas
xchg
and
sbb
das
mov
and
jbe
outsl
or
rcll
dec
adc
daa
mov
fwait
decb
mov
push
lds
popa
icebp
nop
arpl
fmuls
mov
fidivrs
out
pop
xchg
outsl
xor
add
add
bound
or
add
or
outsl
or
add
outsl
add
push
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
pop
outsl
adc
add
add
add
add
add
add
or
or
bound
add
or
int
iret
stos
pop
rol
push
mov
shll
cmp
dec
push
int
and
aas
sbb
fs
push
shlb
lds
outsb
or
xor
jbe
loopne
dec
roll
aad
dec
into
pop
cmp
xor
jp
jp
aas
mov
adc
push
popa
nop
gs
adc
or
pop
iret
stos
pop
xchg
push
jecxz
push
in
jb
push
ja
xorb
mov
cld
jno
xorb
jae
xchg
dec
push
xor
imul
mulb
push
test
testb
or
rcll
jo
movsb
cmp
add
jle
rolb
mov
test
push
fisttpll
lock
ret
mov
mov
stos
xor
int
mov
out
push
pushf
xor
insl
insb
mov
sbb
push
pop
or
jmp
sub
adc
and
inc
adc
or
je
fdivl
in
out
notb
and
fs
dec
clc
sub
add
sbb
add
push
or
jmp
add
add
pop
sbb
push
add
add
outsl
adc
add
insl
add
add
add
add
add
or
push
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
pop
outsl
adc
or
or
or
add
add
or
push
inc
or
bound
or
jl
gs
pop
pushf
adc
in
sbb
pop
int
addr16
je
push
xchg
jb
pop
xor
cs
mov
xor
bound
test
mov
xchg
add
mov
jne
jno
jecxz
cmc
lock
lret
inc
fisttpl
pop
ds
repnz
inc
fisttps
flds
jbe
cmpsb
cmp
aaa
scas
aas
pop
test
xorl
out
adc
mov
pushf
sti
push
jge
je
pusha
jmp
jecxz
jne
jae
push
cld
sub
add
add
add
and
add
aaa
or
jmp
icebp
or
xchg
add
sahf
jbe
xor
dec
fistpll
dec
sub
add
xchg
jb
jl
scas
cmp
mov
int3
inc
shll
xchg
repz
int3
lods
and
les
int3
jp
push
shll
or
mov
das
test
insb
loop
je
push
xchg
jb
es
popf
in
js
mov
push
xor
mov
out
jbe
cmpl
out
adc
push
mov
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
add
add
mov
fcomps
xchg
addr16
std
insl
hlt
pop
lock
lret
lret
aad
sub
xchg
and
icebp
cmpsl
sub
das
cmpsb
xor
scas
pop
int3
inc
shlb
mov
sbb
jne
inc
ss
cmpsb
mov
adc
pop
lret
pop
ds
data16
sbb
mov
mov
and
sahf
sbb
data16
adc
push
and
sbb
sub
or
xchg
sbb
test
lock
bound
pop
cld
xchg
sahf
stc
or
adc
pop
mov
jg
sub
ret
outsb
cld
fwait
jbe
jb
jo
loop
pop
roll
aad
lcall
pop
int
addr16
sub
jo
insl
std
test
gs
pop
add
or
add
insl
add
popa
inc
or
jmp
lret
push
les
push
jns
bound
test
das
mov
sub
push
shll
push
movsl
dec
push
rolb
sarb
adc
or
jle
sbb
mov
in
aad
mov
lcall
dec
das
fisubrl
pop
pushf
xor
inc
adc
cld
jnp
mov
rcrl
xchg
addr16
les
je
out
sub
mov
jg
sub
pushf
sub
lods
and
sbb
adc
lcall
push
sets
imul
add
add
sbb
add
mov
das
mov
inc
arpl
adc
outsl
sub
add
add
outsl
add
sbb
adc
add
pop
dec
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
inc
or
bound
or
pop
roll
aad
mov
mov
mov
js
imul
xchg
or
in
cld
jbe
jle
call
ljmp
ss
mov
sarb
mov
in
sbb
or
push
shlb
pusha
xchg
inc
xor
mov
rorb
push
xor
xor
lret
out
gs
pushf
outsl
mov
cli
mov
std
or
or
or
adcb
out
mov
xor
int
mov
outsb
cld
fwait
jbe
cmpsl
xor
fmuls
mov
cmp
sbb
lock
lock
popf
insb
pop
pop
push
xor
or
fidivrl
mov
mov
and
ret
dec
jl
or
add
insl
add
scas
cmp
sbb
outsb
cld
fwait
jbe
and
clc
jns
mov
inc
lds
iret
and
lret
sub
mov
inc
mov
cld
pminub
push
adcl
cmp
mov
inc
mov
pusha
xchg
jne
outsb
cld
fwait
jbe
mov
scas
leave
cmp
lods
js
adc
cmp
aas
scas
lret
cmp
pop
mov
gs
push
cld
push
or
pusha
cmc
gs
push
test
shlb
dec
sub
jle
push
les
jle
call
mov
scas
lret
gs
imul
outsl
and
sbb
or
bound
adc
and
insl
or
jmp
addb
adcl
rcll
or
inc
shlb
cmpsb
shll
add
push
fisttpl
frstor
add
mov
movsb
ret
ds
js
xchg
testb
and
hlt
sub
cwtl
add
bound
add
mov
xchg
sbb
xchg
mov
lahf
cli
or
fistl
cmpsl
push
mov
inc
mov
adc
add
mov
inc
int
and
jb
enter
sbb
leave
pop
cmp
or
pop
leave
test
and
adc
daa
cmp
inc
roll
sarl
dec
fdivrl
js
ljmp
scas
jl
jg
jmp
add
cmp
dec
test
xor
add
cmp
int3
mov
adc
add
mov
or
jmp
lahf
jne
inc
and
pop
movsb
cmp
push
mov
mov
sbb
xor
or
add
jbe
mov
pop
fimull
fimull
iret
cmp
pop
or
jle
sub
mov
xchg
lock
sbb
std
jno
xorb
sbb
js
mov
dec
rclb
addr16
aam
dec
clc
or
mov
addb
mov
mov
imul
insl
ret
mov
cmp
mov
das
mov
dec
mov
and
arpl
cmc
sbb
insl
hlt
pop
sub
in
jle
fbld
xchg
gs
lahf
sbb
aad
int3
mov
in
cld
and
outsb
call
repz
lea
pop
int3
stos
xchg
jp
insl
hlt
pop
in
rorb
jmp
sub
adc
scas
and
insl
out
adc
or
fmuls
fdivrs
lcall
js
ljmp
rcr
lds
jg
sub
inc
repnz
fisttpll
out
cmp
loope
out
jo
outsl
ljmp
stc
mov
insl
std
test
jne
ja
loope
push
shll
std
or
add
cs
inc
mov
in
pop
cmc
pop
iret
stos
pop
loopne
cld
xchg
cmc
add
and
mov
rcl
push
mov
mov
and
lcall
movsl
je
es
jne
out
add
outsl
and
sbb
or
add
outsl
add
add
outsl
or
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
pop
outsl
adc
or
outsl
or
add
fildl
or
or
pop
dec
sbb
add
outsl
or
sbb
or
add
lea
or
add
sbb
or
or
outsl
or
add
mov
or
bound
or
adc
mov
imul
insl
std
test
or
jbe
outsl
or
roll
pop
cmp
adc
adcl
test
jecxz
push
in
pop
test
jge
and
mov
adc
xchg
add
push
push
xor
data16
mov
fisttpl
fnstsw
mov
xor
int
fsubrp
jbe
cmpl
cmp
push
adc
pop
int
lods
insl
out
jl
negb
mov
lods
stc
js
mov
mov
les
mov
xchg
xchg
pop
xchg
adc
cmp
lret
lret
cmp
xor
int
fmuls
jg
push
mov
es
lods
jp
fs
cmp
clc
outsb
or
pop
gs
gs
dec
adc
push
cld
ljmp
bound
or
and
add
add
mov
adc
inc
bound
add
add
jmp
xchg
mov
sub
adc
xor
jmp
mov
mov
mov
and
les
fimuls
push
dec
fimuls
dec
ret
add
mov
xor
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
mov
or
jmp
loop
mov
mov
and
std
cmp
push
lret
mov
lahf
ja
icebp
popa
add
sbb
mov
outsl
or
xor
in
jle
lods
cs
or
sbb
in
sbb
and
arpl
mov
jl
jne
insb
pop
aam
sub
push
xor
and
sahf
or
cmpsb
inc
insb
jmp
push
in
sbb
pop
iret
stos
pop
sarb
or
dec
ss
pop
fwait
or
sub
mov
pop
int3
inc
and
add
pop
dec
jecxz
push
in
aad
shlb
test
push
test
fs
sbbl
ljmp
inc
mov
sub
xchg
or
in
cld
in
jb
xchg
lret
scas
pop
fsubrl
popf
push
add
add
outsl
xor
or
sub
sti
inc
or
jmp
rcrb
mov
movsl
int3
aas
aad
xor
int
aam
cmpsl
aaa
push
mov
mov
mov
ds
xchg
dec
add
or
or
sub
add
xor
or
mov
dec
or
jmp
and
push
adcl
rolb
shlb
cmpsb
xor
and
push
shll
and
mov
fwait
xchg
sbb
popa
in
bound
dec
sbb
add
add
insl
add
mov
or
jmp
mov
mov
mov
shlb
add
mov
sbb
lock
ret
stc
imul
mov
and
pop
mov
sub
push
call
stc
dec
xlat
inc
and
pop
fcompl
stos
scas
add
inc
rcll
sub
lds
loop
movsl
xor
stos
cmp
pop
cmp
sbb
add
lret
mov
cmpsb
cli
jno
xorb
cmp
loopne
std
test
popf
pop
xchg
adc
cmp
adc
cmp
out
jge
je
xor
jl
jne
sub
push
loopne
pop
xchg
repnz
pop
ljmp
dec
rolb
rclb
or
push
roll
aad
cmp
pop
xor
adc
add
add
bound
or
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
mov
inc
or
jmp
jle
pop
xchg
jb
or
xor
es
push
mov
lods
jmp
stc
cwtl
imul
mov
sarl
nop
das
test
mov
stos
cwtl
adc
push
ret
cmpsb
push
mov
das
mov
ret
push
lds
cmp
mov
in
push
add
add
outsl
xor
add
sub
xchg
inc
or
jmp
or
cmp
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
mov
push
or
jmp
mov
lret
inc
lock
xchg
jle
jl
testb
les
and
bound
fstpt
jae
in
jp
jbe
loopne
lock
push
shlb
insb
lahf
jne
xchg
jb
or
jo
xorl
test
xchg
pusha
mov
pop
cmp
and
push
in
insl
jmp
fstps
stos
data16
clc
outsb
or
or
fisubrs
mov
sbb
or
out
gs
pushf
outsl
sahf
dec
push
xor
imul
pop
ljmp
jmp
sub
repz
cmc
pop
xchg
add
mov
in
loope
jae
rclb
pop
hlt
mull
nop
arpl
xchg
add
ss
or
pop
adc
xor
jmp
sbb
cmp
mov
mov
cmp
mov
lods
int3
push
shlb
cli
or
mov
xor
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
mov
aaa
mov
sbb
pop
jecxz
push
in
ja
fs
sbb
outsb
or
push
ret
mov
sub
dec
mov
cltd
clc
or
pushf
push
test
push
in
mov
lret
sub
pop
rcrb
test
stos
sbb
ss
inc
mov
rcrb
cmpsb
push
fisttps
flds
aam
sub
push
xor
push
out
xor
nop
push
xchg
repz
mov
add
push
mov
ret
xchg
mov
and
mov
or
or
je
jb
xchg
lret
scas
pop
fdivl
mov
inc
mov
test
ret
mov
and
rcll
aas
insb
jmp
ret
inc
aad
dec
mov
out
add
xchg
sub
cmp
das
dec
fisubrl
push
cld
ljmp
bound
add
and
jmp
jl
in
imul
insl
cwtl
cmp
adc
fisttpll
out
push
fisttpll
out
push
xchg
or
sub
outsl
lcall
icebp
nop
arpl
pop
int3
inc
and
pop
jp
es
jns
mov
cmp
inc
roll
shll
sbb
push
shlb
add
adc
fidivs
pop
les
int3
dec
ret
pop
repnz
fs
ret
ret
leave
pop
cmp
and
sti
les
mov
gs
add
popf
or
jl
jne
jno
jle
mov
in
out
push
cltd
pop
xchg
adc
test
and
loopne
movsb
cmp
or
jge
mull
imul
sbb
das
dec
les
int3
imul
cmp
or
insb
loop
je
mov
sub
add
and
add
dec
or
jmp
jae
mov
xorb
and
xor
enter
push
mov
insb
loop
je
inc
fmuls
fdivs
out
out
mov
notl
jge
insl
hlt
pop
int3
mov
lret
test
push
testb
pop
jp
jb
jecxz
push
in
cs
aas
pop
test
aad
shrl
mov
inc
mov
jp
add
add
lock
mov
jle
gs
push
fsts
lods
pop
cli
and
out
lock
bound
mov
and
mov
andl
add
xchg
add
cmp
dec
fistpll
imul
push
adc
xchg
add
ss
insb
or
lds
push
pop
sub
dec
or
or
ljmp
bound
or
and
jmp
xor
jo
jg
jmp
mov
lds
gs
jp
sub
push
shll
jg
bound
pusha
pop
repnz
jnp
xchg
testb
mov
jno
imul
push
lds
mov
test
outsl
lcall
sbb
imul
sbbl
add
sahf
insl
mov
lods
mov
loop
icebp
popa
add
and
movb
loope
loope
jae
sbb
aas
adc
cmp
jo
loop
push
das
mov
jp
jl
testb
mov
das
mov
lea
adc
insl
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
or
jmp
mov
or
in
cmp
nop
push
popa
nop
js
roll
aad
inc
fisttps
fldenv
pop
int
lods
lcall
test
or
daa
mov
and
mov
and
les
out
outsb
cld
fwait
jbe
mov
roll
fs
bound
mov
sbb
add
cs
xchg
pop
bound
adc
sub
pop
and
aaa
movsb
cmp
add
inc
repnz
enter
popa
sbbl
out
sbb
insb
lahf
xor
arpl
xchg
gs
loope
adc
inc
xor
or
add
je
lea
lcall
pop
cmp
push
seto
popa
nop
pop
push
mov
gs
pop
in
cmc
pushf
outsl
test
jno
xorb
dec
jmp
sub
adc
adc
sahf
push
or
jmp
notl
outsb
call
std
jp
jp
jmp
std
test
cwtl
and
pop
xchg
repnz
rcrb
test
mov
mov
repz
cmc
add
cwtl
push
imul
add
xchg
add
xchg
pop
bound
lods
pop
cmc
xchg
ret
in
outsl
sub
add
add
bound
adc
sub
xchg
push
or
jmp
stc
mov
dec
outsl
xor
add
add
bound
add
bound
add
jmp
movsb
or
imul
fisttpl
fnsave
or
lea
mov
sbb
pop
popf
lods
xor
dec
aad
sub
aaa
pop
int3
stos
data16
mov
jle
call
mov
jecxz
notb
leave
test
mov
pop
xchg
adc
jo
fs
add
push
les
or
cmpsb
push
mov
stos
into
cmp
hlt
pop
notb
clc
jl
push
cld
sbb
jge
je
jbe
ja
xorb
and
fistpl
xchg
push
mov
subl
push
mov
jle
and
pop
cmp
adcw
adc
decb
pop
int
addr16
cld
push
mov
mov
sbb
jnp
cmpsb
inc
shll
cmp
fisttpl
fnsave
imul
insl
push
cld
ljmp
bound
or
and
jmp
jbe
enter
pop
jge
je
dec
adc
mov
xor
movsl
and
scas
cmp
mov
jne
addr16
or
icebp
and
cmp
mov
popf
push
test
push
cld
arpl
jns
jmp
jnp
pusha
pop
repnz
cltd
add
or
dec
fstl
mov
sub
and
jb
xchg
inc
xchg
clc
sbb
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
mov
dec
or
jmp
adc
pop
mov
pop
int3
stos
iretw
lret
stos
shlw
mov
dec
mov
js
dec
pop
pushf
xor
inc
test
mov
and
loopne
stc
push
enter
dec
mov
cmpsl
test
leave
dec
fdivrs
ds
test
mov
movsb
ret
fstpt
outsb
or
push
mov
sti
nop
adc
in
sbb
fwait
push
mov
es
jg
imul
or
push
les
notl
add
add
es
roll
aad
fs
cmp
loop
out
jo
or
fs
push
cld
dec
add
xor
stc
mov
lods
and
sbb
jecxz
push
cltd
or
jb,pt
jle
call
enter
jns
mov
les
xchg
mov
add
add
bound
add
add
adc
add
mov
or
mov
fwait
jo
bound
add
add
jmp
add
add
insl
add
mov
push
or
jmp
lea
cmp
aad
lds
bound
dec
mov
mov
adc
pop
leave
test
mov
movsb
cmp
pop
xchg
adc
les
int3
aas
jae
outsb
or
sbb
dec
sub
cmp
jnp
inc
int
and
jb
data16
xchg
outsb
mov
pop
cltd
mov
xchg
repz
test
fs
lock
lret
push
sahf
or
cmpsb
pop
inc
rolb
sarb
outsb
cld
fwait
jbe
mov
mov
and
adc
pop
cmp
outsl
sbb
adc
in
sbb
or
mov
lret
icebp
nop
arpl
nop
or
mov
cmpsb
shll
jnp
outsb
or
adc
jg
jmp
xorl
inc
mov
outsl
mov
inc
mov
add
cmpsb
outsl
sub
or
or
sub
add
xor
or
mov
int3
dec
fistpll
add
cmp
lods
and
push
rcrb
stos
pop
xchg
and
push
out
lcall
test
push
fdiv
jge
je
and
adcb
xorb
pusha
notb
jnp
in
pop
test
in
sbb
push
ret
ret
roll
aad
jmp
outsl
sub
sub
or
or
or
or
add
outsl
or
add
outsl
or
sbb
add
sbb
add
add
add
cmpsl
push
or
jmp
popa
fcom
inc
xlat
mov
call
inc
test
mov
dec
mov
fs
jg
mov
or
dec
lock
cwtl
add
bound
add
mov
push
or
jmp
mov
dec
sbb
or
or
and
add
add
outsl
or
sbb
or
bound
or
add
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
pop
outsl
adc
or
or
or
add
add
or
add
sbb
add
or
or
add
add
or
add
or
or
or
add
adc
adc
or
push
lea
mov
fs
imul
inc
and
pop
inc
rcll
sub
arpl
cmc
sbb
fsubs
jno
jecxz
adc
mov
dec
mov
movsb
push
mov
cwtl
imul
cmp
dec
xchg
sbb
mov
inc
mov
jno
insl
hlt
pop
mov
psubusw
fsubrs
outsl
sbb
or
or
add
add
mov
adcl
popa
icebp
nop
arpl
mov
mov
and
insl
ret
es
sub
adc
xor
jmp
push
mov
and
inc
leave
pop
cmp
sub
mov
jns
insb
pop
sahf
or
cmpsb
push
cltd
adc
add
mov
rcrl
stos
rcrw
ficoms
cmpsb
push
cli
pop
lret
lret
mull
icebp
push
cmc
popa
icebp
nop
arpl
lods
cmp
jl
jne
xor
mov
dec
mov
pop
mov
jg
jp
in
push
popf
or
test
clc
data16
xchg
outsb
jmp
inc
ret
cmp
or
xchg
add
jnp
fimuls
push
sbb
and
movsb
and
jbe
cmpl
es
cs
fdivrl
push
imul
mov
jle
js
leave
pop
cmp
outsb
clc
jne
mov
dec
lret
pop
ds
dec
push
xor
imul
pop
push
outsl
sub
cld
sub
cwtl
add
bound
add
push
imul
and
adc
repz
or
add
cmpsb
push
or
jmp
jne
outsl
insb
or
scas
jmp
adc
add
mov
or
jmp
pop
ljmp
push
mov
jg
cmp
bound
mov
inc
mov
push
leave
pop
cmp
sub
lea
push
mov
shlb
jmp
jge
dec
int
and
sbb
cmc
gs
adc
jne
pop
fmuls
fdivrs
add
or
fcompl
test
fstpt
ljmp
iret
cmp
jbe
cmpl
jmp
jno
insl
hlt
pop
mov
cltd
jae
popf
or
mov
dec
mov
cld
btc
js
mov
iret
pop
int
addr16
mov
xchg
add
test
jge
and
ja
xchg
and
mov
adc
jnp
mov
jecxz
jmp
xchg
add
jns
loop
pop
loop
pop
iret
stos
pop
loopne
es
cs
enter
and
outsl
and
or
or
or
adc
and
pop
cmp
adc
iret
dec
frstor
inc
mov
mov
adc
and
je
or
jmp
test
adc
inc
jle
push
fs
popf
insb
test
lock
bound
adc
pop
roll
shll
adc
test
cwtl
decl
lods
stc
jbe
cmpl
xlat
inc
and
sbb
lds
mov
sbb
mov
fwait
mov
mov
test
mov
gs
and
or
scas
cmp
mov
sbbb
out
sbb
push
into
pop
cmp
xor
mulb
adc
mov
lret
pop
lret
scas
pop
fdiv
jae
xchg
lods
sub
push
rolb
sarb
cmc
jnp
mov
mov
fistps
addr16
jp
jp
addl
dec
ret
mov
push
mov
popf
jns
push
xchg
repz
ljmp
add
sbb
sub
lock
mov
lods
outsl
xor
add
add
sbb
add
mov
adc
pop
aam
sub
dec
sub
add
and
mov
mov
sub
add
lret
lret
lret
lret
aaa
cmpsl
ret
ret
test
push
imul
sub
mov
jle
or
xor
js
push
mov
addb
testl
jne
popa
ret
mov
punpckhdq
mov
mov
push
mov
fidivrs
shll
jmp
jge
cli
jno
xorb
loope
adc
inc
gs
push
jno
inc
sbb
jae
ja
loope
inc
aam
sub
jno
jbe
loopne
insb
cli
push
loopne
adc
dec
fisttpl
movsb
push
loop
xchg
jb
sub
mov
adc
or
add
lods
add
mov
push
leave
pop
cmp
or
push
lret
mov
shrb
cmp
fisttps
fldenv
pop
into
test
fdivrl
add
add
outsl
xor
add
add
fildl
add
add
pop
or
jmp
dec
mov
add
add
sbb
add
mov
es
cmp
inc
jo
loop
fstps
test
jp
in
adc
fcmovbe
push
mov
or
cmpsb
dec
sbb
insl
out
adc
or
inc
mov
movsb
out
data16
xchg
outsb
popf
xor
sub
sbb
inc
xchg
orb
sti
push
aam
scas
cmp
mov
movsl
xor
cltd
or
movsb
ret
ds
pusha
mull
icebp
push
lret
arpl
xchg
rolb
inc
daa
sarb
push
ret
cmpsb
push
in
xchg
add
xor
add
pop
lds
iret
das
mov
lret
fiadds
mov
xor
es
jne
out
push
pop
xchg
repnz
xchg
sbb
push
xchg
repz
out
jb
xchg
add
fcomps
xchg
addr16
mulb
or
cltd
or
jno
arpl
xchg
gs
xchg
sbb
inc
shlb
sub
sub
or
add
add
add
add
outsl
or
add
outsl
or
sbb
add
sbb
add
add
add
adc
add
mov
test
dec
sub
jmp
add
add
xchg
pop
or
jmp
jns
push
adcb
andb
add
jmp
test
jo
jp
jle
call
lahf
mov
mov
sbb
and
les
movsb
ret
ds
cmp
or
jb
jle
call
shlb
loop
call
aas
scas
lret
cld
lock
in
adc
mov
movsb
ret
notl
clc
js
add
add
add
bound
or
xor
jmp
or
or
and
add
arpl
adc
stc
jg
mov
jb
popa
add
adc
popf
or
pop
repnz
fs
clc
outsb
or
or
cld
adc
inc
aam
dec
mov
mov
gs
pushf
outsl
mov
inc
aam
dec
mov
std
pop
push
fisttpll
out
xlat
pop
leave
test
fwait
inc
int3
inc
and
stc
cwtl
imul
lcall
test
cmp
inc
in
movsl
xor
inc
shlb
adc
xor
repz
cmc
push
pop
push
xor
or
into
pop
cmp
xor
push
les
shlb
xor
and
setg
or
gs
mov
cltd
clc
or
dec
lret
lret
inc
xlat
mov
stos
pop
fisttps
fstps
loop
sti
sahf
insl
mov
jp
sahf
sbb
in
jge
testl
les
cwtl
adc
mov
inc
mov
mov
cltd
jge
xchg
and
add
add
sbb
add
pop
or
jmp
fnstenv
pop
mov
js
dec
lea
xchg
icebp
add
les
add
cli
push
inc
mov
jmp
dec
or
or
or
and
add
add
add
mov
push
mov
bound
add
jmp
sbb
add
bound
adc
sub
jmp
mov
add
push
or
adc
mov
js
ljmp
dec
inc
fisttpll
out
or
leave
push
lds
outsb
popf
sbb
mov
push
inc
and
ss
lods
fwait
sbb
mov
ja
add
daa
fs
adc
adc
imul
icebp
nop
arpl
xor
push
fimull
fisubrl
xchg
lahf
cli
or
lds
and
jne
std
insl
hlt
pop
mov
xor
ret
push
jge
cmc
fs
popf
insb
lds
dec
sub
push
ja
inc
fisttpl
int
addr16
jl
divb
mov
les
int3
es
pop
xchg
repnz
inc
fimuls
popa
into
push
mov
dec
adc
sub
mov
and
dec
or
add
add
and
add
pop
or
jmp
sub
ljmp
bound
or
and
jmp
aaa
fisttpll
repz
sub
cwtl
add
bound
add
mov
pop
fisttps
fstps
outsl
call
lret
dec
frstor
adc
or
cwtl
push
imul
xor
inc
leave
pop
cmp
cmp
inc
aam
dec
jmp
and
pop
xlat
inc
and
sbb
pop
cld
bt
push
movsl
adc
cmp
push
add
add
outsl
and
add
and
jmp
fisubrs
and
sbb
jmp
shlb
cwtl
out
jp
jp
sub
push
into
pop
cmp
xor
inc
and
xor
mov
and
lret
push
lret
fcomi
jno
xorb
pop
into
test
mov
cs
and
dec
mov
cmpsb
shll
ret
inc
fidivrl
xchg
adc
mov
lahf
cli
or
xor
pop
rolb
shlb
ret
dec
fnstcw
pushf
sti
push
in
add
popa
icebp
nop
arpl
mov
pop
mov
pop
xchg
add
and
lods
add
push
loopne
out
jl
negb
lock
inc
lds
cmpsl
push
sti
adcb
sbb
add
aaa
repnz
je
jge
notl
call
lcall
arpl
dec
nop
sub
cwtl
add
bound
add
mov
pop
or
jmp
or
jecxz
sub
test
or
add
rorb
jmp
sbb
push
fwait
adc
into
dec
fdivrl
outsl
sub
ljmp
bound
add
and
jmp
add
add
outsl
and
or
and
jmp
add
bound
or
add
mov
or
jmp
loop
addb
repz
lock
fisttps
fnstenv
pop
adcl
inc
shlb
repnz
fs
sub
push
add
cs
scas
aas
pop
test
cmp
sbb
xchg
push
xchg
pop
leave
pop
leave
test
out
add
xchg
add
sbb
sub
push
lds
test
mulb
dec
add
pop
repnz
cmpsl
sub
pop
pop
test
push
xor
daa
cli
fs
popf
insb
jmp
pop
adc
and
jle
mov
xchg
xchg
gs
add
cmpsl
aaa
push
mov
dec
mov
xor
pop
cmp
cmp
xchg
add
jno
sti
imul
pop
into
inc
aad
dec
mov
mov
mov
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
inc
leave
pop
cmp
sbb
pop
movl
sub
mov
insl
pushf
xor
mov
pop
test
int
lea
mov
cmp
add
push
jne
jge
divl
push
fwait
or
jns
lea
outsl
xor
or
add
rorb
mov
popa
or
jmp
add
add
push
inc
fimull
fidivl
cmpsb
cmp
xor
adc
add
dec
roll
aad
jl
xchg
testb
out
imul
add
jle
call
es
iret
dec
fstpt
jmp
mov
or
or
sbb
add
mov
pop
or
jmp
inc
cmpsb
jmp
icebp
nop
arpl
mov
testb
cwtl
or
sbb
add
sbb
mov
or
jmp
cmp
pop
ljmp
nop
cmp
pop
enter
outsl
pusha
cli
push
adc
push
lds
fs
jge
mov
dec
rolb
rclb
sbb
ja
xorb
mov
xchg
mov
aad
jle
mov
mov
mov
rolb
sarb
pusha
ljmp
xchg
repnz
add
ja
test
jge
jg
cmp
mov
jecxz
repnz
pop
repnz
test
jae
xchg
lcall
xor
roll
aad
pusha
mull
icebp
push
jb
add
dec
adc
xor
je
outsl
or
mov
scas
sbb
mov
jg
and
mov
inc
mov
into
pop
int
addr16
inc
rolb
shlb
push
les
xor
adc
add
push
lret
mov
fdivrl
in
je
outsl
cmpsb
cmp
outsb
lock
ja
sub
push
int
les
sub
clc
sub
add
sbb
add
mov
mov
or
jmp
jns
js
imul
push
xor
sub
dec
frstor
add
loopne
jb
scas
sub
mulb
push
adc
push
cmp
xor
push
test
pusha
notb
lods
mov
xchg
dec
push
xor
or
mov
push
mov
push
movl
sub
sub
outsl
or
sbb
sbb
outsl
adc
add
add
adc
sbb
jno
gs
add
int3
xlat
push
shll
iret
cmp
sti
ja
xorb
fisttpll
out
idivb
mov
jne
ja
mov
xchg
xor
leave
add
pop
lret
scas
pop
cld
adcb
out
movsb
or
movq
add
out
jmp
jge
mov
xchg
adcl
lahf
punpckhdq
pop
stos
add
pusha
notb
push
aaa
ret
jp
jp
adc
pop
popf
or
mov
sub
and
xor
xchg
adc
inc
and
sub
push
fcomps
test
xchg
testb
faddp
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
ja
xor
add
add
adc
xor
jmp
push
pop
fisttpl
cs
cmp
pop
pop
push
add
add
outsl
xor
or
adc
add
insb
or
jmp
cld
adc
mov
inc
mov
and
aaa
mov
fadds
pop
aas
lret
fimuls
inc
cmp
and
gs
inc
mov
movsb
das
mov
xchg
jb
cmp
xchg
or
xor
ja
sbb
rcll
jo
clc
outsb
or
push
clc
insb
loop
je
xor
jbe
cmpl
push
mov
les
xor
dec
add
dec
fidivrs
das
dec
mov
push
lock
bound
es
mov
les
jecxz
and
jl
jne
jno
lock
bound
imul
arpl
sub
adc
add
xchg
inc
test
jmp
or
push
mov
sbb
std
dec
mul
loope
sbb
xor
mov
or
jmp
add
push
mov
scas
push
xor
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
mov
mov
cwtl
inc
fisttpl
fnsave
outsb
cld
fwait
jbe
push
adcl
mov
inc
mov
xchg
or
mov
mov
rclb
mov
pop
ds
jmp
lcall
or
jae
mov
push
test
cmc
gs
add
js
ljmp
iret
js
xchg
testb
cld
rsqrtps
dec
sub
add
lds
add
enter
dec
jmp
xchg
adcl
pushf
xor
add
xchg
popa
icebp
nop
arpl
nop
add
rcll
push
adc
sub
shlb
sbb
sub
push
cld
aas
mov
ret
xchg
jl
jnp
in
add
mov
out
mov
sub
adc
add
mov
or
jmp
out
rclb
cmpsl
push
fwait
hlt
jne
mov
jge
je
insl
mov
mov
and
aam
sub
and
out
mov
gs
jl
add
pushf
xor
inc
imul
push
fimuls
adc
or
push
std
das
xor
push
lds
inc
leave
pop
cmp
outsb
addr16
imul
dec
mov
sub
clc
sub
cwtl
add
bound
add
bound
adc
sub
lret
insl
or
jmp
jb
ds
cmp
mov
in
adcl
test
je
jo
loop
dec
jecxz
push
in
std
outsl
lcall
iret
stos
pop
shlb
mov
mov
cltd
or
jae
pop
dec
fsubrs
or
add
add
mov
inc
mov
adc
add
add
je
jnp
in
inc
rcll
pop
in
fisttpll
mov
loop
je
gs
push
sub
lcall
pop
xchg
adc
and
repnz
loop
je
pop
rcll
inc
mov
movsl
int3
aas
hlt
std
jle
mov
add
sbb
lret
pop
jb
jno
jge
je
push
jmp
xchg
data16
xchg
outsb
xchg
inc
sub
or
cmp
sub
pop
popa
sub
int3
pop
add
add
outsl
lcall
cmpsl
ret
mov
ret
cltd
push
inc
mov
fcompl
mov
insb
or
jecxz
scas
cmp
mov
ss
inc
mov
enter
push
mov
dec
adc
or
or
cld
ljmp
bound
or
and
jmp
pop
in
push
jbe
loopne
pusha
jmp
sub
into
inc
aad
dec
mov
popa
enter
imul
out
jg
jmp
inc
mov
mov
mov
das
test
gs
pushf
outsl
faddl
mov
inc
repz
leave
pop
cmp
pusha
pop
roll
aad
cltd
or
in
mov
leave
pop
cmp
or
ja
loope
cmp
inc
iret
push
les
dec
sub
hlt
xchg
outsb
jmp
push
xorb
test
xchg
jb
push
lret
lret
insb
loop
je
or
sub
xor
ss
xor
in
mov
aas
lret
cld
xchg
cmc
add
mov
shll
xlat
mov
lea
mov
gs
xor
xchg
or
sub
add
pop
addr16
gs
dec
ficoml
dec
dec
hlt
sub
cwtl
or
bound
or
orb
jmp
jl
lea
mov
sbb
pop
lods
leave
arpl
xchg
gs
mov
xchg
push
pushf
sti
push
aad
sbb
aad
dec
fdivrl
aam
dec
cmpsb
pop
push
xor
dec
mov
rclb
mov
movsl
int3
aas
aad
and
cmp
mov
mov
in
sbb
cmp
jp
jp
push
fisttpl
fnsave
pusha
ljmp
dec
sub
add
test
push
mov
lahf
cli
or
cld
sub
je
out
sub
cmp
cmpsb
xor
int
mov
jg
jmp
sub
push
sahf
or
dec
fisttpll
out
pusha
cmc
gs
push
sahf
or
repz
cmc
push
fisttps
mov
pop
ds
add
rcrb
pop
pop
inc
push
xor
pushl
pop
roll
aad
xchg
push
add
xor
in
call
fstl
cmpsb
push
loop
lea
std
add
jmp
adc
loope
jg
call
jmp
loop
loope
jae
ss
fimuls
test
add
lret
add
add
popf
fs
gs
push
scas
popf
lock
xor
jnp
in
inc
push
add
add
add
outsl
and
or
and
jmp
push
jecxz
ljmp
add
jmp
pop
adcl
outsl
mov
jmp
adc
dec
int3
popf
mov
jg
pusha
sbb
aam
dec
jmp
mov
movzbl
inc
jmp
cmp
xor
scas
insl
imul
leave
pop
hlt
push
jmp
xor
add
call
pop
leave
test
mov
push
call
push
call
mov
call
jmp
sub
stc
shll
mov
jmp
dec
push
iret
add
add
jmp
out
popf
test
mov
and
and
jmp
jae
js
ljmp
add
call
pop
push
jmp
hlt
push
lahf
push
pop
ret
ret
mov
std
popa
out
and
or
add
insl
add
adc
add
mov
or
mov
or
add
bound
or
jmp
push
call
shrl
jmp
or
fcompl
mov
test
sbb
in
dec
or
add
add
lods
add
push
jne
adc
dec
leave
pop
cmp
push
sbb
push
xor
out
mov
add
add
outsl
sbb
add
add
fildl
add
add
sub
jmp
iret
add
and
iret
jecxz
incl
mov
jns
push
sbb
pop
lret
scas
pop
test
jae
push
call
xlat
mov
jmp
cltd
adc
jp
imul
das
scas
and
jmp
push
in
dec
cmp
imul
call
jae
push
call
ret
jmp
cld
outsb
cld
fwait
jbe
sbb
sbb
popf
or
xchg
jb
es
jmp
loope
in
jg
mov
sahf
pusha
hlt
push
cld
dec
inc
jnp
and
add
call
jae
je
out
dec
mov
mov
inc
inc
mov
add
add
push
xor
sub
movsl
xor
adc
xchg
add
adc
push
call
in
jno
xorb
xchg
add
pop
es
cmp
inc
mov
cmpsb
shll
sbb
cwtl
or
bound
or
sbb
jmp
out
or
data16
xchg
outsb
nop
xchg
je
pop
sub
add
xchg
popf
pushl
jmp
jmp
add
adc
push
pop
adcl
xchg
or
je
dec
mov
arpl
pusha
jmp
mov
jmp
cli
jo
xorl
xlat
aaa
or
outsl
push
mov
jmp
inc
leave
pop
cmp
cmp
je
lea
push
xchg
repz
fimull
pop
mov
lods
dec
pushf
jmp
mov
add
mov
icebp
popa
add
xor
notl
sub
sub
jo
roll
sarl
push
add
add
outsl
sub
add
sub
add
jns
adc
or
xor
adc
inc
in
je
sbb
sbb
add
add
outsl
or
sbb
or
bound
or
add
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
pop
outsl
adc
add
outsl
add
add
fildl
add
add
bound
add
inc
mov
sar
inc
adc
lret
xchg
fs
aas
scas
lret
fwait
or
dec
xor
cmp
jmp
push
repz
mov
shr
loope
jae
cmc
jno
add
call
cltd
roll
add
or
ret
arpl
xchg
gs
push
test
push
cltd
lcall
jne
addl
jmp
xchg
std
or
mov
movsb
ret
ds
cmp
mov
jmp
je
jmp
and
loope
cmc
pushf
outsl
xchg
insb
jmp
in
mov
add
add
outsl
sub
or
bound
or
push
add
add
add
add
outsl
add
sub
jmp
pop
xor
add
lods
and
ss
mov
mov
mov
test
xchg
loope
or
jmp
js
adc
leave
add
cmp
jmp
adc
jmp
rol
cmpsl
shr
mov
popl
jmp
push
fdivl
in
xor
push
xor
adc
mov
add
outsl
xor
add
outsl
or
adc
xor
jmp
jns
push
mov
mov
jbe
adc
add
mov
jnp
adc
mov
shlb
xor
or
or
sbb
add
mov
mulb
cmp
gs
xor
rorb
xor
add
rorl
repz
adcl
test
lock
test
scas
leave
cmp
rolb
add
jmp
inc
aad
sub
je
push
xchg
lea
jmp
dec
fmuls
fsubrs
loopne
adc
dec
and
or
jl
add
jmp
pop
iret
pop
cmp
pusha
xor
loop
out
mov
enter
xchg
mov
in
and
add
push
mov
push
mov
jmp
and
xor
and
pop
pop
dec
clc
mov
jmp
test
jmp
test
fcomp
dec
fstpt
bound
stos
int
cmc
pop
jo
fucomi
xchg
inc
jmp
pop
lret
scas
pop
mov
decl
jmp
jne
jmp
loopne
notb
cld
fwait
jbe
pop
fdivl
in
dec
stc
or
outsl
sbb
xor
mov
add
adc
jle
jmp
into
dec
fistpll
sbb
jg
rolb
sarb
push
pushf
xor
push
scas
xor
cmp
jne
jmp
pop
roll
shll
pop
int3
stos
data16
and
cmp
shr
xor
imul
xor
imull
sahf
insl
fst
dec
call
outsl
sbb
add
lods
add
test
clc
imul
push
pusha
cwtl
pop
pop
cmp
jmp
mov
jmp
mov
mov
xchg
cmc
popa
icebp
nop
arpl
and
aas
jmp
jmp
sti
jne
push
push
pushl
call
jmp
jmp
das
pop
iret
pop
cmp
pusha
cltd
jo
mov
jmp
cmp
cmpb
jmp
lods
xor
jmp
adc
mov
test
push
fstl
inc
fisttps
jmp
leave
jmp
adc
jl
sub
cmp
inc
and
test
push
xlat
inc
and
push
sub
push
jmp
push
jmp
jg
xchg
cmc
add
inc
push
xor
es
lea
inc
and
and
fsubr
outsl
sbb
add
outsl
add
adc
sbb
jmp
xchg
dec
rcll
lods
pop
test
mov
sbb
outsl
xor
add
add
outsl
add
add
outsl
add
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
pop
outsl
adc
add
lea
or
add
mov
jne
adc
or
ljmp
jb
jmp
sub
add
sbb
xchg
gs
lea
jmp
pushl
jmp
jb
outsl
or
in
jae
xchg
push
fldt
clc
cmc
sbb
xchg
incl
or
adc
test
cmpsb
out
lcall
mov
call
test
jmp
mov
jmp
popa
out
jl
mulb
int3
inc
mov
subb
je
jmp
xchg
sbb
lahf
punpckhdq
sti
push
mov
add
dec
lods
xor
jmp
and
pushl
jmp
movzwl
jmp
adcb
loop
mov
xchg
add
and
popf
push
in
push
add
add
outsl
sub
add
add
fildl
add
add
sub
add
add
mov
pop
mov
bound
add
add
jmp
int3
jnp
setg
or
mov
or
in
mov
enter
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
add
add
daa
lcall
clc
outsb
or
sbb
roll
shll
adc
cli
jnp
mov
adc
xor
push
lds
pop
bound
pusha
xchg
cmp
xchg
add
cmp
lea
mov
sbb
cmp
xor
pop
mov
ja
pop
push
xor
sub
xor
stos
xor
inc
aad
dec
lret
mov
and
mov
ret
inc
mov
test
mov
dec
mov
shll
lds
add
add
xor
mov
jp
adc
add
xchg
test
push
call
jmp
cmp
rorb
mov
aam
dec
leave
pushf
mov
incl
push
push
push
push
push
push
lea
jmp
pop
mov
jmp
fildl
dec
lret
fstpl
xchg
lods
cmpsb
sub
enter
and
mov
jmp
les
add
xor
add
add
inc
clc
jmp
loop
icebp
nop
arpl
mov
sub
dec
into
pop
cmp
and
loope
or
jmp
jg
adc
les
mov
cmpsl
xchg
lahf
jbe
jae
adc
sbb
add
or
outsl
or
add
outsl
add
push
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
adc
xchg
jg
adc
ljmp
int3
inc
and
and
aaa
push
mov
mov
pop
adc
jmp
push
in
dec
add
jb
xchg
rorb
sbb
jmp
push
jne
out
dec
pop
xchg
add
and
jecxz
mov
xchg
test
cld
decl
adc
call
push
push
pushl
jmp
pop
xchg
add
sahf
aaa
push
ret
ret
adc
imul
mov
arpl
cmc
push
es
push
lret
lret
icebp
pushl
jmp
xchg
mov
es
movsb
inc
shll
xor
aas
outsl
xor
sbb
add
add
outsl
add
add
add
dec
add
sbb
add
outsl
add
sbb
add
add
lea
add
add
mov
add
jmp
push
or
cmp
jmp
push
roll
rcrl
push
mov
jle
arpl
xchg
jb
loopnew
notl
pop
mov
push
push
mov
jmp
lea
cltd
clc
or
fwait
sbb
aad
repz
ja
mov
jmp
adc
cld
push
call
jmp
lds
mov
test
fmuls
fsubrs
and
pop
int3
stos
data16
mov
mov
mov
add
xlat
pop
int3
stos
xchg
adcl
out
mov
xchg
pop
bound
adc
sub
outsl
adc
cld
ljmp
bound
add
and
jmp
jle
inc
mov
mov
push
js
ljmp
bound
add
sub
lds
adc
jmp
xchg
adc
and
push
les
int3
gs
mov
mull
icebp
push
addr16
popa
add
inc
mov
pushf
rcrb
pop
cltd
sahf
or
mulb
adc
lods
cmp
mov
inc
mov
cltd
push
xchg
repz
mov
out
mov
enter
and
fcomps
stos
pop
andb
cmp
imul
insl
sahf
out
lock
bound
sbb
je
fsts
mov
aas
pop
test
mov
bound
cmpsb
shll
xor
inc
shll
cs
mov
repz
mov
jmp
popf
enter
scas
inc
shll
shlb
cmpl
ja
dec
cld
sub
or
sbb
add
jae
adc
push
call
mov
test
jne
jmp
setle
cmpsb
pextrw
push
shll
inc
mov
andb
pop
jmp
pop
jmp
std
outsl
lcall
jo
loop
jnp
ja
loope
lock
in
mov
jmp
push
roll
aad
out
jne
mov
std
popa
icebp
nop
arpl
das
add
inc
fimuls
popa
inc
les
int3
add
out
add
sub
insb
and
ljmp
bound
add
and
add
add
mov
inc
nop
adc
add
add
arpl
xchg
xchg
lods
cmp
mov
rclb
pop
test
fprem
incl
sti
add
add
inc
and
cmp
pop
lea
xchg
repz
in
and
cmpsl
gs
or
mov
pop
adc
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
push
adc
add
mov
push
int
inc
dec
bound
add
add
jmp
xchg
pop
mov
inc
stc
ja
xorb
in
sbb
scas
lret
push
jecxz
push
in
jl
inc
xor
inc
call
pop
adc
int
mov
and
insl
std
insl
hlt
pop
mov
inc
outsl
ret
mov
push
inc
inc
and
ja
scas
aas
pop
test
add
pop
out
xchg
cmpsl
in
lea
jmp
mov
jmp
or
sub
adc
add
add
mov
jmp
into
pop
into
test
pop
cmp
jg
in
sbb
test
pushl
jmp
mov
test
jp
push
jmp
out
adc
pop
rclb
sub
adcb
subb
lahf
cli
or
push
js
ljmp
bound
or
xor
jmp
adc
add
ljmp
bound
add
bound
add
mov
orl
cwtl
mov
movzwl
imul
add
jmp
push
xchg
or
push
dec
fstpt
lock
bound
mov
jb
push
in
cwtl
add
add
pop
into
test
mov
sbb
divl
xorb
pop
into
test
mov
call
mov
mov
shl
add
mov
jmp
lods
and
jns
pusha
pop
repnz
mov
add
std
mov
jmp
and
push
add
fcoms
pop
sahf
add
pop
jp
xor
cmp
aam
push
or
fidivrl
inc
clc
jmp
adc
cmp
outsl
or
scas
daa
mov
dec
mov
xchg
outsb
scas
jns
push
call
and
mov
ljmp
adc
cli
add
add
scas
cmp
mov
jecxz
in
jg
clc
jae
xchg
push
lahf
leave
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
jbe
bound
ljmp
lods
pop
mov
mov
test
xor
or
add
lods
add
add
outsl
add
add
outsl
or
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
fildl
or
or
bound
or
sahf
add
out
cmp
divl
mov
mov
andl
sub
jmp
pushf
mov
jg
push
clc
jmp
imull
cltd
push
pop
loop
leave
dec
fdivrs
je
out
push
xchg
sub
jmp
mov
jmp
cmp
js
mov
dec
lret
lret
or
insl
call
xor
jmp
dec
iret
pop
cmp
and
lret
pop
cmp
xor
jmp
cmp
xchg
sbb
aad
rclb
or
cmpsb
push
pop
rolb
shlb
push
inc
outsl
xor
sbb
add
add
add
add
add
add
add
sbb
fildl
add
add
add
adc
or
bound
add
push
xchg
pop
bound
xchg
push
popa
outsl
xor
ljmp
bound
add
and
jmp
aam
int
js
ljmp
bound
or
xor
jmp
es
mov
adc
xor
jmp
jle
jmp
sbb
das
mov
out
jge
je
xor
dec
subb
dec
cld
jmp
push
lds
lods
pop
in
aam
shll
jne
out
pop
mov
in
jmp
fucomi
mov
jmp
mov
xchg
cmp
outsb
jge
je
out
or
repnz
pop
repnz
dec
test
jae
add
mov
sub
mov
pushl
jmp
sub
push
movl
sub
inc
hlt
jb
jmp
stc
gs
pushf
outsl
ljmp
push
mov
mov
lea
push
jmp
and
jmp
int3
dec
fdivrl
aaa
push
mov
dec
mov
push
mov
push
jmp
and
pop
mov
in
ret
or
data16
adc
or
add
add
add
outsl
and
or
and
jmp
mov
push
mov
call
test
jmp
push
jmp
mov
nop
testl
add
pop
and
fstl
pop
scas
fcompl
jmp
idivb
mov
mov
call
das
out
loope
push
daa
jg
mov
add
jmp
mov
sbb
inc
sub
mov
mov
sub
jmp
ljmp
je
push
pop
xchg
add
jmp
sbb
jge
hlt
inc
pop
jmp
pushl
jmp
mulb
xchg
outsb
fildll
mov
push
mov
xchg
push
cld
ljmp
bound
add
and
add
add
mov
ljmp
add
mov
cltd
push
pushf
sti
push
mov
cld
ljmp
bound
add
and
jmp
jno
js
mov
mov
stc
push
ss
dec
mov
jno
adc
add
add
xor
add
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
mov
scas
outsl
je
jne
jmp
pop
test
jge
outsb
cmp
push
enter
and
cltd
aam
jmp
call
jmp
jno
jl
divb
or
xor
cmpsl
aaa
push
mov
sub
adc
aam
cld
mov
jmp
aaa
mov
inc
mov
jge
jb
xchg
add
inc
mov
lock
jmp
cmp
push
lock
lea
jnp
push
pushl
jmp
jp
insl
hlt
pop
in
or
idivl
test
xchg
hlt
mov
call
jmp
xchg
sbb
aad
shlb
leave
inc
mov
mov
dec
fistpll
test
pop
leave
ss
cmp
mov
int
and
jb
aas
ret
xchg
mov
mov
adc
add
mov
mov
adc
add
mov
inc
std
decl
adc
adc
data16
ljmp
test
or
imul
xchg
inc
lods
cmp
aam
sub
arpl
cmc
pop
xchg
cmp
jmp
sub
cmp
fdivrs
jl
testb
jmp
je
lea
adcl
lds
pop
adc
rolb
jmp
xlat
dec
frstor
insl
pushf
je
movsb
ret
ds
mov
push
sbb
adc
jne
mov
mov
call
jmp
sbb
fistps
mov
dec
ljmp
pushl
jmp
insl
or
sub
jmp
stos
sub
lds
add
pop
lret
scas
pop
scas
dec
in
sub
cwtl
or
bound
or
mov
adc
outsl
sub
cld
ljmp
bound
or
and
jmp
subb
mov
das
fisubs
jmp
es
inc
mov
in
loop
je
stos
inc
push
sub
sub
adc
push
jmp
jl
imul
or
inc
sub
jp
imul
adc
in
sbb
sbbb
add
jmp
out
popa
icebp
nop
arpl
int
int
addr16
dec
ret
std
jmp
imul
adc
xor
and
jmp
arpl
pusha
pop
repnz
fnop
dec
notl
add
popa
pop
jmp
loopne
rclb
call
aaa
xchg
xchg
adc
xchg
pop
iret
insb
mov
jl
jo
jmp
inc
rolb
shlb
repnz
jno
xchg
jmp
pusha
jbe
xchg
jmp
in
in
mov
sti
push
hlt
dec
inc
and
xor
mov
xchg
or
adc
ljmp
bound
or
and
jmp
xor
cmp
or
outsl
sub
add
add
bound
adc
sub
add
jmp
pop
lds
iret
dec
sub
in
mov
jmp
stc
data16
xchg
outsb
jmp
aas
hlt
jne
fs
push
push
xchg
add
sahf
jbe
inc
popf
pushl
mov
jmp
scas
cs
adcb
cmpb
out
mov
sbb
mov
imul
or
or
add
pop
int
aad
dec
mov
bound
add
call
add
les
push
mov
mov
fcomip
addl
jmp
mov
fwait
decb
out
mov
or
inc
adc
add
shlb
xchg
gs
out
jmp
jge
mov
inc
rorb
decl
pushf
xor
or
xchg
and
mov
imul
pop
adc
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
mov
mov
adc
les
cmpsl
push
jecxz
or
xor
dec
jge
jo
mov
and
cmp
jne
jmp
je
jmp
xchg
or
and
xor
sub
add
add
mov
add
cmp
jmp
into
pop
lret
scas
pop
mov
popa
mov
jmp
stc
notl
sub
test
mov
incl
or
je
add
fstps
sub
add
mov
fldl
mov
aaa
test
pop
test
add
and
add
add
jmp
push
call
in
mov
push
add
add
pushf
xor
insl
dec
fstpt
adc
imul
push
aas
lock
outsl
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
insl
jmp
mov
xchg
and
scas
sti
ret
jmp
imul
std
cmp
sahf
sbb
adcl
inc
mov
mov
add
call
xor
aad
int3
push
call
pushf
jmp
fcoms
mov
popf
in
out
sub
add
rclb
sbb
jmp
mov
into
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
xchg
bound
mov
cs
pop
leave
test
mov
xor
mov
jle
or
es
cs
roll
aad
jnp
imul
js
ljmp
repz
icebp
nop
arpl
out
sbb
mov
jg
iret
dec
fstpt
out
mov
mov
lods
lret
inc
mov
shll
cmp
or
adc
push
jmp
test
jecxz
adcl
loop
test
adc
mov
jnp
js
ljmp
outsl
adc
pop
int3
inc
and
inc
and
ja
dec
fistpll
push
xor
and
insb
loop
je
mov
ret
jae
arpl
cmc
je
shrl
add
js
lret
pop
sub
add
jmp
lahf
adc
dec
fnstcw
pusha
pop
repnz
les
xchg
xchg
jmp
pusha
jmp
addr16
imul
dec
sub
sub
ret
ret
int
sahf
insl
push
add
add
outsl
adc
add
insl
add
das
xchg
or
jmp
mov
push
stc
or
add
lods
dec
adc
add
add
adc
or
add
rorb
jmp
adc
lock
jmp
mov
mov
and
mov
enter
outsb
push
das
sub
cmp
jmp
adc
fiadds
dec
addr16
xchg
cmc
add
mov
xchg
adc
or
inc
or
mov
mov
in
jno
xorb
stos
cmp
sub
mov
ret
addb
icebp
add
dec
fstpt
fidivrs
outsb
or
sbb
xor
mov
jmp
fstpl
test
cmpsl
fcomps
xchg
addr16
sub
add
add
adc
add
dec
insb
loope
pop
sbb
ret
jmp
movsb
and
in
sbb
add
jl
out
mov
sub
add
add
sbb
add
xchg
or
jmp
or
add
add
lods
add
mov
xchg
or
jmp
inc
cmpsb
inc
jnp
cmp
jmp
dec
ret
ret
pop
into
test
mov
pop
xchg
repnz
test
add
adc
add
mov
add
jmp
idivl
mov
cs
jmp
dec
fdivrs
insl
hlt
pop
mov
lods
and
sbb
popa
jmp
add
xor
add
sub
pop
ljmp
jmp
xor
leave
popf
clc
mov
jmp
ret
push
les
cmp
push
jmp
push
cmpsl
dec
clc
ds
and
jmp
jmp
mov
add
add
jmp
sbb
jg
ja
loope
adc
sbb
push
cmp
loop
nop
mov
adc
and
mov
or
jmp
xchg
dec
fistpll
dec
das
fidivl
xor
in
mov
jmp
les
mov
lcall
outsb
popf
dec
outsl
jmp
push
adc
sub
jmp
addl
jno
xorb
fisttpll
out
test
fs
jmp
sub
pop
push
jmp
adc
inc
inc
into
pop
cmp
and
dec
in
cli
bound
push
bound
data16
xor
jmp
popl
xchg
icebp
add
and
jne
loop
pop
loop
mov
int3
popf
or
cmpsb
xor
dec
mov
jmp
mov
orl
jbe
je
out
pop
popa
add
pop
push
mov
add
add
adc
sub
xor
sub
pop
or
xchg
cmp
jne
push
push
jmp
sub
divl
inc
adc
lcall
and
jmp
test
jmp
push
ret
ret
fisttps
fsts
iret
pop
cmp
jo
in
sbb
test
add
add
cmp
out
adc
or
aam
sub
pop
bound
pushl
call
mov
jmp
les
scas
pop
fldl
dec
sub
pusha
cmp
loopne
xchg
jmp
sahf
xor
lahf
decl
jmp
fcompl
xchg
addr16
ret
inc
shll
jge
notl
aam
shlb
and
add
add
jmp
mov
dec
mov
jmp
gs
pop
loop
add
mov
scas
adc
xor
movsb
jno
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
mov
xchg
or
jmp
mov
pop
xchg
mov
pushf
and
add
add
lods
cmp
pushl
fistl
addb
add
das
cmp
mov
fwait
decb
je
call
jmp
nop
push
mov
orl
pop
or
cmc
js
mov
xor
push
push
push
lea
push
mov
jmp
pushf
push
pushf
sti
push
mov
mov
push
push
call
cmp
jmp
fmull
movsb
push
cld
jnp
jns
jmp
push
scas
push
push
xor
jle
arpl
inc
and
inc
add
add
mov
ret
ret
lcall
sub
sbb
xchg
add
sahf
pop
cmp
jne
jmp
stc
jne
jmp
fldl
mov
lods
pop
rcll
sub
sahf
or
cmpsb
dec
lds
iret
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
sti
in
add
jmp
sti
imul
insl
in
nop
mov
popa
call
jmp
sub
test
xchg
repz
push
inc
and
ss
adc
mov
sub
adc
adc
adc
add
mov
or
mov
fidivl
add
bound
add
jmp
jecxz,pn
lock
bound
sub
mov
jmp
adc
test
nop
testl
sub
adc
fisttpll
pushl
jmp
test
xchg
lock
add
add
pop
jb
addr16
lcall
add
bound
add
adc
add
cltd
or
jmp
xor
rcrl
daa
shlb
arpl
xchg
gs
subl
push
popl
stos
outsl
xor
or
add
outsl
sub
or
jmp
adc
shll
hlt
xchg
sti
add
dec
cld
sub
cwtl
or
bound
or
cltd
or
jmp
pop
pushf
decl
mov
add
mov
push
or
jmp
push
add
add
outsl
adc
add
add
adc
add
add
bound
add
push
adc
add
mov
mov
pop
dec
mov
bound
add
add
nop
test
lea
jmp
jge
add
push
leave
pop
leave
test
out
icebp
lock
lret
andl
sub
add
add
add
arpl
cmc
inc
scas
lods
lret
inc
out
mov
mov
sbb
mov
jmp
test
jmp
mov
mov
and
decb
adcb
andb
sub
jmp
jmp
daa
imul
xchg
adc
cmp
cs
inc
mov
pop
repnz
rcrb
fsubl
cmp
mov
sub
dec
and
jmp
stos
cmp
and
adc
jo
xorl
dec
cld
sub
cwtl
add
bound
add
add
adc
add
add
sbb
add
mov
or
jmp
or
or
sbb
add
cwtl
or
jmp
sub
add
xor
add
add
add
or
or
add
or
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
or
add
pop
outsl
adc
add
outsl
add
add
fildl
add
add
bound
add
pusha
popa
rorl
test
call
dec
and
push
push
lea
push
mov
jmp
xchg
mov
jmp
ret
adc
inc
roll
inc
cmpsl
push
popa
scas
inc
daa
sti
mov
jmp
fistpl
scas
pop
mov
lods
push
mov
out
notb
xor
push
or
ret
mov
leave
pop
cmp
and
pop
jp
fs
jmp
xor
jmp
sbb
jl
rolb
shlb
dec
lods
and
outsl
xor
ljmp
bound
add
and
mov
or
jmp
add
add
or
insl
fldt
dec
add
inc
cmp
jb
lea
call
jmp
addr16
sarb
dec
into
push
jmp
out
lcall
add
test
jge
sub
xchg
pop
bound
inc
and
push
push
pop
lea
call
jmp
ja
jp
in
inc
fmuls
mov
inc
daa
sarb
add
call
jmp
lea
jmp
pop
enter
jns
jne
mov
int
pop
xchg
rorl
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
or
jmp
jne
add
aaa
jo
js
ljmp
inc
jb
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
mov
or
jmp
add
add
outsl
and
add
and
jmp
pop
inc
arpl
xchg
mov
sub
pop
into
test
adc
adc
lea
jmp
and
push
lds
mov
cltd
or
jno
mov
inc
mov
inc
call
jmp
fucomi
sbb
fstps
test
or
addr16
xlat
inc
and
or
or
cmp
dec
sub
adc
int3
push
pushf
xor
push
std
jbe
cmpl
jg
lea
call
pop
pop
test
je
push
pop
jmp
jmp
jns
iret
pop
dec
aaa
pop
jmp
icebp
jg
mov
lock
mov
dec
les
int3
imul
loope
jae
cli
mov
jmp
inc
int3
inc
and
ficoml
in
aas
jmp
sbb
xor
cmpsl
xor
int
xchg
fwait
or
jle
cld
sub
cwtl
add
bound
add
pushf
or
jmp
dec
loope
jg
mov
jmp
js
jl
testb
xchg
adc
xlat
add
jmp
mov
mov
sbb
mov
push
leave
pop
cmp
or
fdivl
dec
adc
mov
mov
stos
cltd
dec
ja
sub
jmp
cld
fs
popf
insb
xchg
pop
enter
test
mov
jne
add
add
outsl
sub
add
outsl
adc
add
insl
add
xchg
adc
mov
loopne
adc
or
scas
popa
or
adc
or
add
outsl
xor
or
xor
jmp
adc
ss
sbb
mov
jmp
pop
pusha
mov
jmp
outsl
sti
mov
jmp
aas
mov
add
sbb
outsb
push
inc
and
and
jne
shlb
iret
mov
mov
mov
jmp
stos
aad
addr16
andb
jmp
xor
mull
icebp
or
repz
cmc
adc
xchg
popf
pushl
mov
jmp
stos
and
push
lods
and
scas
cmp
mov
daa
jo
jmp
inc
int
and
pop
lret
push
fsubl
xor
dec
fstpt
hlt
xchg
outsb
fdivs
mov
or
xor
adc
inc
adc
mov
jmp
cmp
sbb
push
xchg
pop
xchg
repnz
insb
stos
lods
lret
inc
icebp
jg
js
ljmp
add
add
add
add
mov
or
jmp
add
or
and
add
sahf
pop
cs
push
int
and
aas
mov
mov
jmp
xchg
mov
mov
add
popa
jmp
repnz
int3
inc
and
sub
cmp
and
fiaddl
sbb
add
add
bound
or
and
jmp
add
add
jmp
insb
jmp
lea
jmp
mov
jmp
push
xchg
popf
adc
xchg
popl
jmp
out
jae
xchg
sbb
dec
stos
sub
outsl
lcall
sbb
lea
mov
add
cmp
je
jmp
rcll
mov
sub
xchg
mov
fisttpl
push
fimull
fidivrl
popf
sbb
add
imul
mov
test
cmp
adc
push
imul
lods
cmp
jg
mov
lods
inc
shll
dec
fnsave
push
test
push
scas
inc
xlat
mov
out
xor
lds
mov
inc
sub
push
xor
cmp
xor
mull
icebp
pop
cmc
stc
adcl
push
lods
add
add
bound
or
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
mov
mov
out
out
mov
imulb
lcall
jae
rolb
inc
test
fidivl
jae
pusha
pop
repnz
les
mov
mov
repz
addb
xchg
add
popa
adc
cmpsb
cs
push
lds
lcall
jmp
push
fdivl
in
mov
or
adc
dec
fdivrl
cltd
clc
or
outsl
les
pop
cmp
and
mov
cltd
push
dec
mov
inc
mov
add
mov
shr
in
jg
dec
fisttpl
fstpl
shlb
sbb
add
add
mov
or
jmp
lcall
mov
cmp
in
sbb
or
jg
jmp
sbb
aas
lods
das
mov
pop
iret
stos
pop
adc
adc
movsb
pop
inc
and
cmp
push
xor
cmp
rclb
add
xchg
inc
lds
mov
cmc
pushf
outsl
lret
cwtl
decl
mov
jnp
sbb
jnp
js
ljmp
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
mov
mov
or
in
mov
cmpsb
shll
icebp
imul
pushf
xor
inc
jmp
pushf
outsl
xchg
cli
loopne
in
mov
push
mov
sbb
ds
adc
insb
or
out
push
or
into
dec
add
or
add
lods
push
cld
ljmp
bound
add
and
mov
add
add
dec
cli
and
pop
jnp
jns
jmp
push
rclb
imul
lock
pushf
outsl
les
lea
in
sbb
or
stos
cmp
dec
xor
lods
cmp
add
mov
dec
mov
loopne
fadds
adcl
fimull
fidivl
rcll
mov
jnp
add
add
fildl
push
xor
xor
mov
adc
push
lret
pop
ds
scas
sub
sub
mov
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
or
jmp
add
lock
mov
push
xchg
add
sahf
jp
cwtl
push
imul
inc
shlb
cmpsb
shll
cmpsb
sub
roll
shll
imul
insl
ret
cltd
push
aaa
ret
xchg
add
and
inc
sub
je
push
mov
ds
test
mov
mov
inc
aad
dec
scas
or
sbb
cltd
shll
add
add
bound
or
and
jmp
jmp
cmp
inc
es
pop
lret
scas
pop
mov
adcb
subb
aas
pop
test
nop
arpl
sbb
xchg
adc
mov
rorb
dec
mov
jge
mov
std
or
jl
imul
or
jns
mov
rcrl
fs
daa
mov
and
loop
std
test
arpl
addr16
dec
xor
pop
in
ljmp
mov
jmp
push
ret
cmpsb
push
loop
dec
fistpll
sbb
xchg
and
addl
or
pop
popf
push
xchg
repz
in
js
jbe
loopne
pop
outsl
xor
sbb
add
add
outsl
add
add
add
push
push
add
add
mov
mov
scas
bound
or
add
add
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
stos
or
bound
or
fidivs
fiadds
add
add
cld
ljmp
bound
add
and
jmp
adc
mov
stos
or
jmp
jnp
and
sub
cmp
outsb
jmp
popf
push
xchg
fwait
decb
popa
nop
js
mov
xchg
jae
cmp
pop
xchg
adc
push
roll
shll
in
sbb
add
xor
in
data16
xchg
outsb
mov
jbe
cmpl
adcl
test
and
test
xor
add
lods
or
bound
and
sbb
and
sub
adc
pop
leave
test
call
fnsave
sbb
aad
xchg
movsl
xor
lods
cmp
lret
lret
les
int3
mov
and
inc
daa
rclb
popa
icebp
nop
arpl
mov
movsb
ret
ds
pop
enter
add
jb
popa
add
adc
int
and
sub
bound
ja
loope
sub
aas
pop
test
mov
in
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
fcoml
mov
cmp
mov
inc
mov
outsl
out
adc
sbb
inc
in
dec
fistpll
xchg
lock
dec
push
xor
push
jns
aam
aad
dec
in
inc
fidivrl
or
xor
dec
fistpll
mov
das
test
fs
dec
dec
fimuls
inc
dec
aam
sub
push
xor
sub
fwait
or
jno
mov
mov
movsl
cmc
push
lahf
push
in
cmc
pushf
outsl
movsb
in
hlt
xchg
outsb
xchg
shll
xlat
xchg
adc
stc
jle
mov
dec
mov
inc
mov
jl
fs
or
lock
pop
iret
stos
pop
subl
adc
adc
lcall
mov
xchg
push
cld
ljmp
bound
or
and
jmp
cmc
xor
pop
cmp
jno
and
stos
aas
scas
lret
pop
int
and
fs
or
xor
and
inc
shlb
adc
and
mov
add
inc
sub
pop
push
xor
daa
fiaddl
dec
lret
sbb
sub
adc
add
mov
leave
dec
fnstcw
dec
or
add
add
lods
push
cld
ljmp
bound
add
and
add
add
mov
push
cld
bound
or
or
mov
lods
or
jmp
jns
pusha
dec
iret
pop
cmp
aas
mov
mov
mov
push
pushf
sti
push
roll
adcl
push
shlb
pop
test
ret
mov
nop
testl
sub
jle
inc
shll
mov
and
out
clc
lahf
push
rcll
push
out
or
in
mov
pop
jmp
sbb
sarb
lods
and
sbb
sarl
stos
cmp
or
sub
fimuls
mov
xchg
repnz
cmp
push
lret
lret
or
add
arpl
jbe
loopne
pop
das
jmp
add
add
or
or
add
outsl
or
add
outsl
or
sbb
add
sbb
add
add
add
mov
cmp
push
xor
sub
gs
pushf
outsl
xchg
mov
cli
sub
sbb
jnp
mov
out
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
movsb
cmp
pop
insb
in
sbb
rdmsr
mov
mov
lods
mov
mov
cmpsb
xor
scas
or
outsl
sbb
cld
ljmp
bound
or
and
jmp
lret
pusha
sahf
push
pushf
sti
push
cmpsl
mov
fwait
mov
xchg
jbe
cmpl
mov
jp
jge
notl
mov
sub
std
imul
insl
xor
sahf
pop
xchg
adc
imul
sub
sbb
or
jb
xchg
inc
push
xor
sub
lds
mov
xchg
and
pop
xchg
pop
xchg
adc
daa
mov
inc
mov
popl
std
or
and
mov
ficoml
cmpb
add
sub
mov
js
dec
push
fstpt
jb
xchg
cwtl
or
push
shlb
dec
mov
jbe
xor
mov
jle
mov
and
xor
or
sbb
add
nop
sbb
dec
lret
pop
ds
xchg
sbb
imul
insl
fnstsw
adcl
xor
xchg
add
cmp
push
les
or
cmpsb
movaps
sub
call
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
int3
pop
iret
stos
pop
rclb
cmp
or
outsl
lcall
shll
sub
rclb
inc
data16
sbb
inc
and
aaa
lods
sub
lds
lods
sub
lds
cs
pop
test
sub
notl
repz
cmpl
gs
pushf
outsl
sahf
sahf
sbb
pushf
xor
inc
sub
repz
test
daa
mov
and
and
xchg
sbb
aad
sbb
ret
cmpsb
push
in
cmp
push
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
push
adc
add
mov
pusha
or
mov
cmp
jmp
add
add
jmp
scas
es
fstpl
sti
sub
nop
in
push
call
call
jmp
or
es
popa
xor
sbb
inc
add
call
jmp
push
call
cmp
call
jmp
aam
leave
test
lea
dec
add
call
int3
popf
jmp
outsb
loop
pop
loop
cmp
or
ljmp
bound
or
and
pop
dec
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
add
jmp
or
or
add
add
add
mov
dec
leave
or
jmp
icebp
popa
add
pop
pop
enter
jns
or
in
mov
push
mov
push
hlt
add
mov
int3
out
jne
mov
mov
mov
int
and
push
push
xchg
pop
bound
scas
pop
xchg
mov
movsb
ret
ds
dec
iret
pop
cmp
aas
out
insl
std
test
add
aas
mov
aad
mov
inc
and
sub
dec
ficoml
mov
mov
das
leave
dec
ret
ret
call
jge
pusha
pop
bnd
xchg
testb
rorw
das
fisubrl
mov
add
call
jmp
sahf
or
in
mov
xchg
dec
or
or
or
sub
add
cwtl
add
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
or
add
mov
push
jns
bound
add
add
cld
scas
or
jmp
mov
sbb
add
and
add
add
ljmp
std
or
daa
push
ret
jmp
or
fwait
adc
push
call
int3
popf
pop
int
and
arpl
sub
lock
jmp
int
repnz
fs
mov
int3
dec
add
call
call
jmp
rolb
mov
decl
data16
mov
lcall
cmc
mov
cmpsb
mov
xor
add
jmp
int3
popf
push
roll
aad
cli
cmp
jg
add
mov
mov
and
inc
and
jmp
xchg
or
add
add
jmp
cwtl
add
daa
pop
jmp
sub
int3
popf
add
inc
xor
cmp
add
xor
sub
or
jmp
mov
adc
xchg
setg
or
inc
fcomip
gs
jmp
scas
movsb
ret
ds
fadds
mov
leave
rorl
mov
outsb
or
xor
rcrl
or
andb
sub
jmp
js
imul
push
jns
pusha
lea
in
icebp
xchg
jns
sar
inc
adc
jo
jmp
rcll
lods
pop
mov
fmuls
jmp
xchg
jbe
cmpl
popf
pushl
mov
jmp
or
jle
roll
shll
loop
clc
lahf
push
push
cmp
jecxz
jmp
jne
jmp
mov
fiaddl
lea
sbb
lods
ja
mov
jmp
les
mov
ret
jmp
add
push
shlb
xchg
les
jle
call
popf
insb
lds
or
or
or
sbb
add
ret
jmp
stc
mov
pushf
outsl
xor
add
add
outsl
add
sbb
add
or
add
or
sbb
add
add
add
add
add
mov
les
adc
lods
mov
cld
std
jmp
popa
add
pop
jns
jge
testl
sub
push
lds
test
add
cmp
je
popa
mov
jmp
add
pop
bound
fs
jmp
std
gs
pushf
outsl
scas
mov
mov
cmp
jae
lea
add
add
jmp
loope
out
mov
jp
jp
in
imul
or
sbb
mov
mov
movzbl
jmp
push
mov
and
jmp
xchg
std
or
inc
ret
ret
roll
sarl
clc
add
incb
add
nop
add
add
int
lods
and
dec
cld
scas
mov
mov
add
add
sub
add
ljmp
bound
add
and
jmp
mov
jmp
mov
movsb
ret
ds
cmpsl
push
and
mov
std
jmp
sbb
je
insb
or
cmc
push
mov
jle
imul
add
pop
jmp
xchg
jbe
insl
hlt
pop
divb
aam
adc
push
push
push
mov
xor
cmp
je
mov
cmp
jmp
push
fdivl
in
pop
roll
rcll
ljmp
cmp
push
add
inc
cmp
jl
lea
jmp
xor
cmp
sub
lea
push
jmp
in
jle
mov
pushf
outsl
les
xchg
add
or
xor
push
jmp
movsb
xor
xchg
add
fimull
fisubrl
or
cmp
dec
insb
sub
cwtl
add
add
or
or
or
add
add
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
add
add
add
and
adc
call
add
jmp
pop
jmp
mov
jmp
aad
mov
out
loopne
adc
and
push
lret
mov
push
jmp
lock
rorl
mov
inc
and
pop
insl
repnz
pop
bnd
pop
lea
call
mov
call
mov
jmp
jle
xchg
cmc
add
pop
fmuls
fdivs
sub
hlt
jnp
mov
mov
lock
call
neg
pop
sbb
pop
and
jmp
clc
jle
mov
mov
xchg
mov
stos
into
cmp
aaa
ret
rorb
push
jmp
push
inc
jmp
mov
test
jmp
push
in
or
dec
frstor
enter
mov
add
into
mov
adc
jb
or
pop
jmp
int
shll
inc
and
add
jl
mov
mov
movl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
add
mov
xchg
and
loope
fistpl
xor
lods
cmp
leave
pop
cmp
and
push
xor
dec
hlt
imul
stos
cmp
arpl
xchg
add
jnp
lock
bound
pop
lock
pop
adcb
adcb
xor
push
lret
movsb
push
mov
and
dec
ret
mov
dec
fidivrs
repnz
fs
js
fs
pop
pusha
in
jge
mull
enter
dec
mov
push
ret
ret
jp
jp
xchg
xor
push
push
xor
jle
cmp
pop
xor
add
popa
in
bound
inc
and
addr16
jbe
loopne
lods
outsl
sbb
xor
mov
or
jmp
add
pop
aas
lret
mov
sahf
or
ljmp
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
popa
mulb
push
pop
xchg
add
es
adc
out
push
ret
jmp
xchg
add
dec
fidivrs
mov
scas
cmp
mov
fsubrs
dec
or
add
add
sbb
add
mov
adcb
subb
lcall
cmpsl
ret
add
lcall
xor
sbb
xchg
pop
push
fwait
or
jae
mov
inc
mov
call
xchg
lahf
std
loop
push
pushf
jmp
mov
rcrb
scas
pop
mov
pop
sub
jmp
jne
xor
jmp
nop
adc
in
sbb
test
xchg
repnz
fcoml
mov
push
cmp
das
mov
dec
push
outsl
and
or
sub
mov
rorb
jmp
lret
scas
pop
bnd
ja
loope
sbb
and
push
lahf
push
fmull
mov
frstor
dec
mov
xor
and
mov
aad
fnstcw
xchg
testb
xchg
pop
cmp
sub
leave
pop
cmp
and
out
add
add
dec
adc
or
ljmp
bound
or
and
jmp
pusha
jmp
dec
lret
pop
ds
loop
call
sub
lds
jmp
sti
sahf
insl
int3
pop
nop
push
popa
nop
inc
std
and
add
xchg
popf
pushl
mov
jmp
orl
out
jmp
mov
mov
andb
jmp
push
jne
out
dec
rolb
mov
hlt
data16
jmp
and
inc
jo
jmp
xchg
add
icebp
popa
add
pop
movsb
push
in
es
xchg
push
mov
add
add
add
outsl
and
or
and
jmp
add
add
and
push
imul
xchg
add
push
rorb
and
mov
ret
xor
add
add
jmp
dec
roll
shll
scas
movsb
ret
ds
sbb
cmp
imul
add
outsl
and
or
and
jmp
outsl
sbb
or
or
or
and
adc
sbb
pusha
sub
je
popa
mov
jmp
add
or
sbb
add
add
jmp
adc
or
or
mov
scas
jo
movsb
jmp
xchg
adc
in
sbb
cltd
sbb
xor
jnp
mov
mov
pop
cli
add
jmp
lea
jmp
rorl
dec
mov
jnp
dec
lds
iret
cmpsl
loope
jo
ret
jne
addl
mov
jmp
cs
cmp
dec
scas
es
cs
stos
int
iret
xchg
stos
push
call
xchg
add
lret
xchg
std
decl
es
out
jl
divb
jmp
fstl
mov
cmc
pushf
outsl
fldt
push
dec
fnstcw
and
cwtl
add
and
add
sbb
mov
or
jmp
push
xchg
mov
jmp
push
ret
jmp
fcoml
cmpsb
push
cli
sbb
fimuls
mov
int3
stos
sarw
push
add
imul
xor
sarl
das
test
jns
sub
add
call
ret
jmp
jae
jg
jmp
arpl
in
jmp
loopne
jb
into
shl
xchg
push
call
dec
push
call
jl
push
jmp
push
leave
pop
cmp
dec
bnd
xchg
imul
sbb
ds
sbb
inc
cli
subl
hlt
xchg
std
sti
jns
mov
lcall
xchg
add
insl
pop
push
mov
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
inc
rolb
add
xor
jmp
jns
pop
fisttpll
out
nop
sbb
mov
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
add
add
xor
lods
and
adc
mov
inc
mov
test
xchg
mulb
xchg
outsb
dec
fdivrs
ret
in
pop
into
test
shll
cmp
outsl
scas
cmp
xchg
add
sahf
jl
add
in
sbb
ss
mov
scas
pop
fsubrl
sbb
aas
inc
rclb
sub
outsb
cld
fwait
jbe
cltd
sbb
adcl
scas
cmp
mov
jns
xchg
testb
mov
xchg
and
or
jns
mov
inc
enter
cmp
imul
insl
int3
add
test
lahf
cli
or
popa
in
bound
push
and
aam
int
xchg
int
insl
sub
add
xchg
popf
pushl
jmp
jmp
dec
lret
pop
ds
mov
ret
cmc
jns
mov
dec
rclb
adc
xor
mov
jmp
pop
pusha
jmp
in
dec
adc
adc
add
pushf
adc
xor
int
fwait
pusha
repnz
pop
repnz
mov
jmp
sub
push
ret
ret
lods
cmp
mov
jg
cmp
imul
or
mov
into
addr16
cs
mov
sbb
sub
fimuls
add
add
cld
ljmp
bound
add
and
mov
rorl
jmp
add
add
sbb
add
add
bound
add
and
jmp
push
and
addl
jmp
lcall
lods
and
push
setne
rorl
add
push
jae
js
ljmp
and
mov
gs
adc
icebp
xor
add
mov
cwtl
push
imul
je
lea
cmp
andb
sar
inc
adc
xor
and
dec
in
icebp
nop
arpl
add
aaa
mov
push
lea
jmp
addb
repz
sti
cld
jg
mov
in
cld
fwait
jbe
mov
ja
add
call
cltd
roll
add
xchg
add
sbb
lea
jmp
rcrl
scas
pop
mov
in
or
jo
xchg
jmp
mov
scas
lret
or
orb
outsl
lcall
pusha
outsl
xor
add
add
adc
xor
jmp
pop
and
jmp
jmp
push
adcl
cmp
roll
mov
jmp
icebp
dec
rcrl
add
add
add
outsl
and
or
and
jmp
pop
lods
xor
mov
jmp
xchg
add
std
or
adcb
fwait
test
lock
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
xor
jp
jp
mov
popf
ret
mov
mov
loopne
dec
ret
xchg
sbb
test
add
add
jmp
int3
push
lret
mov
cmp
mov
lods
cmp
es
mov
outsl
sbb
cld
ljmp
bound
add
and
jmp
dec
in
lea
jmp
ljmpw
stc
xor
ljmp
mov
cmpsb
mov
lods
shrl
pop
adc
xor
jmp
jge
fs
popf
insb
test
push
cld
sbb
xchg
cmc
add
sub
xchg
sti
cmp
pop
jmp
shr
add
add
icebp
inc
push
xor
cmp
pop
aas
lret
mov
lahf
mov
push
push
mov
call
jmp
mov
call
jmp
xor
jmp
gs
jl
notb
adcl
mov
jg
jns
pop
xchg
adc
push
call
pop
jmp
leave
ret
jmp
lret
mov
push
aaa
ret
or
pop
mov
push
cli
push
jmp
stos
mov
jbe
jp
in
pop
adc
xor
sbb
jl
jne
sub
jmp
movsl
mov
pushf
jmp
sub
jmp
pop
iret
pop
cmp
dec
jecxz
push
in
sbb
push
jns
aas
add
outsl
xor
or
or
outsl
or
add
outsl
or
add
outsl
or
or
add
outsl
or
add
sbb
adc
xor
jmp
adc
xor
pop
lds
xchg
cmpsb
aam
frstor
ds
out
or
mov
pusha
notb
mov
and
notb
add
xchg
popf
pushl
mov
jmp
xchg
adc
xchg
or
je
mov
dec
mov
mov
jmp
add
call
add
movsl
xor
into
pop
cmp
sub
inc
jg
pusha
jmp
outsl
in
mov
jmp
arpl
andb
jmp
popa
jmp
pop
fmuls
fsubrs
subl
cltd
push
into
movsl
pop
mov
mov
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
mov
or
jmp
add
out
fs
popf
insb
mov
lock
bound
mov
mov
inc
adc
pop
xchg
pop
bound
jo
jmp
das
mov
sub
jo
xorl
cwtl
dec
mov
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
arpl
addr16
dec
and
outsl
and
add
add
or
add
add
add
add
or
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
or
or
or
and
adc
lret
movzbl
jmp
push
cmp
jmp
and
mulb
xchg
outsb
insl
std
test
movsb
jne
xor
ret
jne
addl
mov
jmp
fmuls
mov
inc
and
jbe
sti
imul
dec
ret
lods
pop
cli
mov
add
jmp
iret
pop
lret
scas
pop
cwtl
repz
jns
ja
loope
nop
adc
roll
add
jnp
jo
loop
lret
mov
cmpsb
cld
jmp
jnp
and
pushl
mov
push
test
push
cltd
adc
add
sahf
push
test
mov
stc
outsl
and
sbb
add
or
jmp
dec
cmpsb
inc
rcll
and
mov
movsl
push
test
aam
outsl
xor
add
or
or
or
add
outsl
add
add
outsl
add
add
add
outsl
or
add
sbb
adc
xor
jmp
sub
mov
mov
sbb
add
mov
loop
adc
xchg
adc
popa
icebp
nop
arpl
mov
mov
add
jmp
push
ret
cmpsb
push
mov
bound
jmp
orl
in
jge
testl
mov
shll
add
add
idiv
pushl
dec
je
jmp
neg
jmp
test
cwtl
decl
ficomps
xchg
add
push
rclb
push
hlt
adc
rorl
sub
adc
sub
cmp
jmp
or
cmp
and
add
das
test
inc
adc
sbb
scas
mov
jmp
mov
jmp
xchg
add
mov
dec
mov
jo
ss
out
dec
lea
jmp
pop
int
and
jb
pop
enter
jmp
insb
mov
rorb
rorb
or
or
xor
or
dec
add
add
add
add
or
outsl
or
add
outsl
add
push
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
sbb
add
outsl
add
sbb
add
add
lea
add
add
mov
int
adc
add
pop
scas
test
aas
mov
jmp
jno
jg
jmp
or
out
inc
fmuls
fcomps
inc
shlb
pop
inc
cmp
jl
mov
push
mov
push
call
jmp
dec
adc
push
lea
push
mov
jmp
call
jmp
xor
fistpl
test
cmp
inc
fcompl
or
jp
stos
cmp
dec
or
xchg
adc
in
sbb
xchg
mov
add
mov
or
jmp
or
push
clc
ljmp
bound
or
xor
jmp
adc
out
lock
bound
imul
loopne
jmp
decl
jle
stos
cmp
dec
mov
fldcw
mov
fldcw
jg
xor
pop
jmp
jmp
push
adcb
andb
sub
cmp
jmp
mov
fwait
decb
or
cmp
pop
or
pop
lods
push
pushf
jmp
mov
in
ss
call
jmp
mov
mov
and
ret
jo
ret
ret
lahf
punpckhdq
jmp
push
xchg
pop
bound
sub
push
xlat
sti
jmp
test
hlt
push
xchg
add
ss
add
std
or
popf
ljmp
aas
decl
inc
and
jmp
pushl
jmp
cwtl
add
add
outsb
cmc
gs
adc
dec
clc
sub
or
or
or
add
or
or
or
add
add
outsl
or
add
mov
std
mov
adc
mov
mov
sbb
es
cs
rolb
sarb
inc
aaa
popf
jmp
filds
mov
jmp
mov
cwtl
decl
loop
cmp
gs
pushf
outsl
xchg
push
mov
cmp
dec
cld
sub
or
sbb
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
or
or
sbb
add
mov
jmp
mov
in
xor
lcall
ds
aaa
push
mov
cmpsl
push
mov
mov
loope
hlt
mov
jmp
push
call
pushf
cwtl
push
test
push
mov
sahf
dec
add
xor
fsubl
es
lret
lret
fisttpll
out
cs
push
lds
das
mov
xlat
mov
mov
jmp
insb
nop
and
inc
adc
sub
jmp
repnz
jmp
outsl
insb
or
scas
push
cwtl
push
imul
mov
int
push
outsl
xor
add
add
adc
xor
jmp
xor
mov
mov
pushl
outsl
sub
add
or
or
or
add
add
add
sbb
fildl
add
add
add
jmp
add
xor
dec
pop
cmp
jmp
xor
cmp
pop
xchg
repnz
dec
aad
sub
xor
push
cmp
add
pusha
incl
jb
in
or
sub
or
push
cld
ljmp
bound
add
and
jmp
mov
add
add
cld
ljmp
bound
add
and
add
add
mov
inc
sbb
bound
or
or
jmp
pinsrw
jmp
mov
cltd
clc
or
inc
push
xor
sub
push
lahf
push
stos
sub
lds
lods
jae
jecxz
test
cmpl
add
movzbl
jmp
scas
sub
insl
std
test
pop
aad
sub
cmpsl
xorl
pop
lds
je
popa
mov
jmp
dec
ret
mov
or
fs
popf
insb
lahf
sbb
es
pcmpgtb
add
push
sub
push
fcoms
lods
pop
mov
lock
std
jmp
stos
lea
jmp
jg
pusha
pop
repnz
mov
mov
and
cmp
outsb
ffreep
loope
sbb
add
add
bound
or
mov
or
jmp
sub
adc
sub
add
or
dec
fdivl
in
push
push
xor
data16
clc
ljmp
bound
add
and
push
mov
rorl
adc
add
add
sub
sbb
iret
pop
cmp
aas
cli
jo
xorl
and
sbb
cmc
jl
jne
ja
push
xchg
repz
test
mov
pushl
xorb
xchg
or
cmp
pop
cmp
jle
jnp
mov
insb
cld
xchg
cmc
add
jecxz
loopne
jb
arpl
imul
dec
outsl
clc
outsb
or
push
push
lcall
call
pushf
xor
addr16
or
pop
lea
push
lds
out
sbb
dec
mov
push
lock
bound
scas
inc
mov
mov
mov
fcmovnbe
or
add
cmp
jg
in
sbb
dec
test
xacquire
mov
and
xor
push
push
push
push
push
push
lea
call
jmp
sbb
popa
loope
out
mov
jl
inc
loop
push
jmp
adc
xchg
or
xlat
inc
and
push
lods
sub
sbb
loopne
rolb
sarb
pop
fimuls
add
je
or
outsl
add
add
ret
and
ret
push
shlb
test
mov
mov
or
jmp
rorl
adc
test
rcrb
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
add
rcll
or
loop
pop
jp
jg
sub
dec
fstpt
es
mov
cltd
and
cli
push
jge
je
jbe
insl
std
test
cltd
pop
xchg
adc
jg
fs
or
dec
jmp
xor
pop
roll
rcll
in
jge
notl
clc
outsb
or
dec
hlt
gs
pushf
outsl
lock
notb
dec
sub
dec
sbb
sbb
cmp
js
ljmp
and
jne
mov
cmp
mov
mov
inc
fidivrl
insb
or
out
dec
fidivrs
sub
inc
shll
into
test
or
je
in
sbb
or
add
push
jmp
ss
push
lds
jl
push
cld
sbb
adc
jb
stos
mov
jmp
inc
lret
lret
lock
bound
jb
movsb
mov
call
jmp
pushf
push
pushf
sti
push
mov
enter
popa
add
inc
fimull
mov
cld
sub
cwtl
add
bound
add
iret
or
jmp
in
pop
cmp
cmp
add
pushl
bound
inc
xchg
pop
xchg
repnz
mov
jne
out
cs
ret
add
call
pop
pop
ret
jmp
pop
jmp
mov
mov
add
push
into
pop
cmp
push
rorl
mov
pushf
jmp
movsb
cmp
gs
lds
and
pop
clc
jmp
mov
int
fsubr
sti
ljmp
test
pop
test
or
jno
add
test
loope
inc
push
addb
add
ljmp
bound
add
and
jmp
scas
pop
pop
jecxz
push
in
and
inc
lds
sub
cwtl
add
ljmp
bound
add
and
add
add
mov
inc
pusha
adc
or
add
movsl
xlat
or
jmp
int
sahf
push
test
push
cli
sbb
movsb
inc
adc
add
add
rorl
push
andb
add
jns
jmp
test
jg
add
xchg
popf
pushl
mov
jmp
lods
and
add
pop
cmp
pusha
clc
push
lea
aad
lea
dec
adc
lock
sub
pop
leave
pop
cmp
pusha
sbb
and
jle
dec
pop
sub
jmp
push
les
int3
imul
xlat
dec
ret
mov
adc
push
mov
jmp
pop
rcll
sub
nop
push
popa
nop
js
mov
test
add
ljmp
stc
or
mov
xchg
lock
mov
cltd
clc
or
cmpsb
arpl
outsl
push
add
add
dec
cld
sub
cwtl
add
bound
add
mov
int
adc
sbb
jns
add
or
or
cld
ljmp
bound
or
and
jmp
cmp
sbb
xor
inc
call
mov
sbb
hlt
dec
add
add
add
cld
ljmp
bound
add
and
jmp
sar
inc
adc
in
sub
jmp
inc
lds
iret
sbb
push
pop
leave
test
mov
loopne
cltd
roll
add
sub
mov
les
pop
jp
jae
insb
bound
add
mov
or
push
lods
cmpsl
mov
and
jmp
push
jecxz
push
in
jle
movzbl
jmp
adc
inc
loope
je
jmp
loop
jecxz
jne
jecxz
std
test
jno
xchg
cmc
add
pushf
orb
insl
add
mov
adc
std
insl
std
test
sub
inc
imul
xchg
add
std
or
scas
jmp
jns
jle
call
jg
cmp
js
ljmp
mov
shlb
mov
cmp
jmp
or
out
js
iret
jge
mov
jmp
popl
jmp
fwait
pop
xchg
repnz
xor
mov
xchg
adc
lods
sbb
ret
jne
addl
mov
jmp
xchg
push
pushf
sti
push
cmp
lea
jmp
out
push
cmp
push
lds
movl
pop
iret
stos
pop
loopne
mov
int3
dec
fdivrl
int3
popf
stc
jne
mov
das
mov
rorl
jne
pushl
add
sbb
mov
inc
mov
xchg
xchg
mov
and
sbb
jmp
or
jmp
mov
out
push
outsl
pop
in
mov
add
push
clc
imul
jmp
mov
fidivs
add
sbb
outsb
or
or
dec
fnstsw
pop
roll
shll
jne
add
jl,pt
decl
cmp
mov
out
push
mov
mov
sub
add
xor
add
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
dec
js
add
idivb
jmp
sbb
sub
mov
cli
dec
enter
add
call
xchg
pop
xchg
repnz
xchg
lods
dec
fimuls
push
add
add
cmp
mov
js
ljmp
in
push
sub
adc
xor
jmp
fistpll
lret
cmpsl
push
mov
mov
scas
or
push
inc
and
pop
inc
ret
ret
je
lea
not
or
xor
add
or
or
or
add
outsl
add
add
outsl
add
add
add
outsl
or
add
sbb
adc
xor
add
add
mov
push
test
bound
or
or
jmp
or
jecxz
sti
sahf
insl
xchg
jbe
addr16
sub
lret
insb
or
out
jnp
mov
mov
push
shll
fsubrl
fidivrs
mov
inc
mov
adc
xchg
pop
lcall
xor
icebp
lock
lret
mov
xchg
mov
add
adcl
sbb
mov
mov
sbb
outsb
leave
insb
mulb
cmp
cwtl
jp
lcall
insb
or
out
mov
lods
xlat
dec
fidivrs
jnp
in
and
xlat
fcomps
test
out
jno
out
outsl
lcall
jp
in
cmp
ret
push
lds
lea
sahf
stc
or
adc
inc
int
and
aaa
sbbl
and
or
and
jmp
adc
orb
cli
or
or
add
pop
lahf
adc
pop
xchg
repnz
cli
dec
std
outsb
cld
fwait
jbe
cwtl
or
insb
loop
je
outsb
clc
outsb
or
dec
dec
fisttpll
out
sbb
cmp
psubusb
mov
add
test
push
lahf
push
into
push
lds
xor
dec
sbb
xchg
push
test
push
xlat
lcall
push
ret
cmpsb
push
mov
lea
push
shll
cmp
add
inc
mov
mov
fimuls
push
test
pushf
sti
push
in
mov
inc
mov
sbb
mov
int3
push
adcb
andb
and
setg
or
and
cmp
sbb
push
ret
cmpsb
push
cli
jo
jbe
loopne
ret
outsl
xor
ljmp
bound
add
and
jmp
insl
ret
add
sahf
das
out
out
jo
dec
fimull
fisubrl
adc
pop
ret
ret
pop
jp
jne
mull
icebp
adc
sarl
cmp
pop
les
int3
dec
xor
je
jb
xchg
fcomps
test
lods
mov
mov
jecxz
js
mov
push
roll
shll
pop
lret
scas
pop
mov
push
mov
mov
adc
or
or
xor
or
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
mov
or
mov
fisttps
adc
add
add
pop
clc
loopne
hlt
xchg
outsb
nop
and
cmp
adc
das
stos
cmp
pop
dec
ret
ret
or
cs
push
xor
push
daa
icebp
mov
add
push
add
jg
jmp
addr16
popa
dec
lds
iret
push
push
lahf
push
es
cmp
push
mov
or
mov
iret
pop
cmp
jle
mov
inc
mov
shll
mov
pop
cmp
addr16
mov
add
sub
xchg
or
cmp
jg
mov
sub
rorl
mov
insl
hlt
pop
in
inc
fistpl
pop
inc
lds
iret
add
test
inc
push
xor
es
rolb
shlb
jge
enter
push
subb
add
mov
shlb
lret
scas
pop
mov
loop
add
add
pusha
pop
xchg
pop
bound
jbe
push
mov
shlb
and
mov
out
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
in
jge
notl
adc
lret
pop
ds
and
cld
jae
xchg
and
pop
mov
jns
and
jg
mov
adcl
in
bound
or
cmpsb
inc
data16
xchg
outsb
test
dec
fstpt
rcrl
push
add
add
push
cld
ljmp
bound
add
and
jmp
cmp
inc
lds
iret
add
xchg
add
jp
fs
popf
insb
test
and
push
mov
roll
push
xor
sbb
out
jnp
insb
or
out
aam
int3
stos
xchg
mov
xchg
lock
jg
gs
sbb
dec
sub
adc
xchg
ss
mov
das
stc
jno
adc
notl
xor
xor
arpl
xchg
rorb
popl
dec
mov
ja
outsl
sbb
add
add
mov
or
jmp
lahf
sub
pop
cmp
outsl
movsb
lods
lret
inc
test
into
iret
push
lds
add
push
pop
lret
pop
ds
ss
aas
pop
test
arpl
out
sti
test
mov
cmpsb
xor
scas
dec
jg
inc
push
xor
sbb
adcl
mov
js
popa
jmp
xchg
out
jg
jmp
mov
daa
inc
mov
sub
xor
add
inc
xchg
std
ja
xorb
push
mov
xorl
mov
mov
mov
hlt
imul
insl
ret
dec
adc
push
xchg
add
cmp
and
outsb
cld
fwait
jbe
arpl
xchg
xorl
mov
cmpsb
mov
mov
lret
pop
ds
cmpsl
sub
push
xchg
repz
out
add
mov
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
mov
sub
pop
fisttps
flds
gs
adc
pop
call
mov
scas
pop
fstps
fs
inc
shlb
dec
sub
cmp
out
popf
or
lret
lret
mov
inc
mov
out
lock
bound
add
dec
std
repz
notb
and
movsl
insb
add
loope
loope
xor
add
add
adc
xor
jmp
push
jecxz
or
jle
mov
dec
mov
adc
and
mov
icebp
outsl
lcall
aam
int
imul
insl
in
into
push
mov
notb
mov
mov
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
ljmp
std
adc
pop
lret
scas
pop
fdivl
jle
call
cmp
push
lret
mov
add
jns
jecxz
push
in
rolb
dec
mov
adc
push
inc
and
sub
jno
xorb
mov
arpl
xchg
sbbl
popa
nop
arpl
jge
notl
pop
lret
scas
pop
push
fimull
ficompl
or
or
fs
gs
push
aad
fstpt
pop
add
add
mov
enter
jl
push
pop
movsb
push
lahf
punpckhdq
addr16
addr16
stos
cmp
inc
imul
add
add
bound
or
and
jmp
add
lea
xchg
repz
in
iret
inc
aad
dec
test
pop
scas
adc
ds
xor
jne
adcb
addb
xor
add
xchg
cmc
add
pusha
icebp
popa
add
pop
rcll
push
out
mov
cltd
loop
ljmp
enter
mov
inc
mov
cmp
jo
xorl
aaa
xlat
int3
push
lret
mov
adcl
cld
xchg
cmc
add
pop
ret
ret
xor
pop
lret
scas
pop
mov
pop
int3
stos
data16
mov
dec
mov
fisttpl
push
jl
testb
mov
xchg
jle
mov
gs
addr16
add
push
shlb
adc
adc
push
mov
test
cmp
inc
into
pop
cmp
adc
je
lea
mov
inc
mov
xchg
pop
xchg
repnz
pop
adc
xor
jmp
test
test
lock
aaa
adc
adc
sub
outsl
xor
sbb
add
add
add
add
add
add
add
sbb
add
or
or
add
add
or
sub
or
bound
or
sbb
repz
xchg
outsb
leave
sbb
imul
insl
mov
insl
std
test
jno
jle
call
dec
movb
sahf
lret
sub
push
cld
ljmp
bound
or
and
mov
in
or
jmp
notl
ret
mov
mov
and
add
dec
fdivrl
cmpsl
ret
add
pop
jp
xor
mov
jmp
loop
loopne
jb
dec
push
shlb
cmp
sahf
stc
or
mov
adc
and
mov
inc
mov
cmp
lea
in
sbb
add
push
lock
std
test
mov
pop
mov
lret
scas
pop
fsubrl
stos
cmp
arpl
mov
js
popa
pop
mov
add
mov
shr
or
jmp
add
and
cs
mov
shll
movb
inc
cwtl
xchg
push
test
push
jmp
inc
xlat
mov
cmpsl
dec
lds
iret
ds
lods
mov
cmpsl
dec
frstor
popf
insb
lahf
mov
xchg
pop
aad
sub
or
dec
add
add
add
lods
add
mov
jmp
adc
movsb
sub
divl
repz
mov
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
mov
out
or
jmp
cmp
imul
mov
cwtl
mov
mov
and
mov
lds
fnsave
cmpsl
aaa
push
mov
out
sbb
movsb
addr16
and
pop
sub
dec
adc
add
add
mov
jmp
repnz
push
mov
and
cld
inc
jecxz
push
in
dec
fistpll
or
pop
int3
stos
data16
and
pop
jbe
gs
sbb
xchg
add
leave
pop
cmp
push
and
pop
mov
mov
test
cmp
mov
rorb
push
xor
and
xchg
popa
inc
roll
aad
or
xor
jbe
imul
push
xor
jns
pop
leave
test
lock
push
lods
cmp
mov
inc
mov
xor
jbe
cmpl
ljmp
stc
mov
rolb
leave
pop
cmp
sub
push
shll
and
cmp
mov
leave
push
cmc
jne
mov
movsb
and
mov
lods
gs
sbb
push
cmp
xor
xchg
pop
bound
sub
cwtl
or
bound
or
add
add
add
add
or
or
or
add
add
push
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
or
add
sbb
fildl
or
or
bound
or
ret
mov
mov
push
mov
dec
mov
dec
lods
orb
stc
or
mov
test
cmp
xchg
sbb
aad
add
fistpll
add
cmc
gs
pop
cwtl
or
data16
xchg
outsb
xchg
pop
xchg
repnz
les
mov
inc
mov
or
pusha
hlt
push
cld
dec
xlat
inc
shlb
lock
bound
xor
push
xchg
add
sahf
je
xchg
pop
bound
and
in
pop
lcall
ljmp
push
mov
es
dec
leave
pop
cmp
sub
mull
icebp
add
nop
push
popa
nop
inc
leave
push
ret
cmpsb
push
cmpsb
jns
mov
les
mov
or
jle
pop
int
addr16
mov
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
xor
push
lds
sub
fimull
ficompl
cmp
roll
mov
stc
mov
mov
sbb
inc
mov
ja
mov
add
mov
test
in
sbb
dec
fimuls
push
or
xor
outsl
lcall
fnstcw
enter
mov
rolb
aaa
scas
cmp
mov
mov
mov
cli
push
in
sbb
sbb
xchg
jle
std
insl
hlt
pop
in
bnd
xorb
out
jl
testb
imul
insl
mov
loop
sub
inc
push
jecxz
push
in
jg
push
cld
push
mov
mov
js
add
adc
ja
mov
add
adc
add
mov
push
push
or
lea
add
add
jmp
int3
aas
pushf
adc
xchg
add
inc
and
outsl
lcall
xchg
adc
repnz
sbb
lea
aad
push
jne
jo
loop
lea
push
adcl
lods
lret
inc
test
mov
je
bound
shlb
or
sbb
movsb
adc
push
je
gs
adc
les
sbb
sahf
or
cmpsb
pop
int3
dec
fnstcw
push
xor
cmp
stos
aaa
ret
push
lds
aad
int3
stos
data16
pop
leave
test
mov
push
mov
pop
in
clc
lahf
push
push
je
out
sub
ljmp
mov
and
or
dec
hlt
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
seto
scas
ja
int3
out
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
aaa
movsl
xor
jl
jne
sub
pop
jnp
adc
add
add
sub
add
call
xchg
aaa
inc
inc
outsl
xor
add
or
outsl
or
add
or
add
or
or
add
or
add
add
add
mov
pop
xchg
add
es
jmp
jge
test
mov
mov
scas
xor
jb
jns
jmp
sahf
add
or
xor
xchg
jb
addr16
jo
loop
sub
in
sbb
dec
sub
xor
push
imul
rolb
shlb
jmp
notb
loop
je
mov
xchg
repnz
lret
mov
jp
in
cmp
jl
jne
inc
iret
inc
shlb
sbb
pop
iret
stos
pop
into
adc
push
les
test
fmuls
fdivs
mov
pop
into
pop
cmp
jno
mov
jae
jle
call
shlb
lds
jg
popf
xchg
add
jmp
mov
dec
mov
inc
or
addb
add
cmc
lahf
xor
popa
jmp
sub
and
jmp
aaa
call
jmp
jl
imul
insl
aam
jmp
int3
popf
popa
insb
or
andl
mov
pushf
sti
push
jecxz
cmp
xor
mov
jmp
leave
dec
ret
mov
sar
inc
adc
call
jmp
xor
fs
in
mov
mov
andb
sub
jo
mov
jmp
call
jmp
push
fimuls
add
fcmovne
or
dec
incl
add
cmpl
jb
shlb
add
ss
mov
call
test
jmp
int3
and
popf
adc
add
bound
push
movzbl
jmp
mov
xchg
adc
fs
int3
inc
enter
sbb
mov
add
sub
add
pop
sub
add
xchg
jmp
sbb
jmp
inc
adc
add
call
imul
jmp
int3
popf
in
loop
je
out
jmp
mov
sbbb
fs
jmp
pop
xchg
or
xor
mov
fcoml
cmpsb
push
cli
push
xor
aaa
xlat
mov
fiadds
fs
incl
stos
addr16
pop
push
mov
popl
jmp
gs
push
push
leave
pop
cmp
or
jge
je
addr16
adc
decl
xchg
pop
bound
push
movsb
and
mov
test
pop
test
test
sub
adc
sub
hlt
or
jmp
push
mov
mov
add
ret
inc
jmp
movl
and
mull
icebp
add
outsl
xor
add
add
add
add
add
outsl
add
add
outsl
add
sbb
or
sbb
or
add
add
mov
push
or
jmp
add
rcll
pop
mov
sub
push
call
push
rolb
shlb
cmp
push
mov
into
dec
mov
or
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
mov
add
add
cmp
cmp
sbb
mov
jle
js
ljmp
inc
cld
data16
xchg
outsb
lods
pop
les
int3
cmpsb
lods
lret
inc
lods
and
adc
pop
iret
stos
pop
loopne
mov
gs
pop
dec
roll
aad
jmp
lahf
sub
push
mov
in
ljmp
ret
mov
mov
add
pop
rolb
shlb
jne
insb
or
in
jl
jne
pusha
scas
and
lcall
add
add
add
pop
cltd
pop
xchg
adc
jmp
xchg
pop
sahf
call
add
call
lcall
call
and
and
movsl
das
mov
test
popa
mov
jmp
pushf
jmp
sahf
adc
dec
fidivrs
loopne
jb
inc
je
jb
push
jmp
adc
pop
sub
jle
add
push
popf
or
arpl
xchg
shrb
insl
hlt
pop
lods
jb
je
out
pop
push
xchg
imul
lcall
mov
xchg
add
dec
ret
mov
jns
pop
add
xchg
jmp
outsl
cmc
gs
pop
xchg
or
add
sbb
popf
jmp
pop
mov
jmp
mov
mov
push
mov
lds
add
lock
pushl
jmp
push
rolb
sarb
push
js
ljmp
add
sub
cwtl
add
bound
add
add
add
add
add
or
or
or
add
add
push
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
or
add
sbb
add
add
add
add
add
add
add
add
roll
dec
mov
add
std
or
push
pop
jecxz
ja
jmp
mov
int3
adc
popa
mov
ret
xor
pusha
and
jmp
inc
rclb
sub
xchg
testb
aaa
leave
inc
shlb
insl
hlt
pop
loope
jns
mov
sbb
mov
push
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
rolb
add
jmp
out
lcall
dec
das
ficompl
test
lahf
cli
or
cmp
jmp
and
mov
jmp
add
add
sahf
sub
js
ljmp
push
lret
test
lock
adc
add
mov
add
adc
sub
dec
add
add
add
sub
add
stc
or
jmp
imul
test
rol
ret
outsb
cmp
je
popa
mov
jmp
push
lret
pop
ds
xchg
or
arpl
xchg
les
sbb
ljmp
inc
xor
add
insl
pop
std
call
xchg
xchg
sub
xchg
sub
popl
lea
jmp
nop
push
pushf
sti
push
xchg
mov
ret
aas
pop
test
pop
xchg
jmp
xchg
pop
xchg
adc
push
add
loope
ret
jmp
sub
cs
pop
test
jae
push
cld
sub
dec
sub
rorl
add
inc
lcall
add
call
cld
mov
mov
pop
std
incl
test
jge
sbb
xchg
sbb
push
call
pop
jmp
xor
into
inc
aad
dec
mov
rcr
lds
pushf
jmp
sbb
push
popa
nop
push
xchg
mov
loope
mov
call
add
xchg
jmp
movsl
pop
and
add
add
jmp
jae
insb
or
mov
mov
mull
insb
lds
push
push
xchg
add
mov
pop
roll
aad
or
push
push
call
and
mov
jmp
loopne
jmp
les
mov
insb
or
mov
mov
jne
push
and
xor
sbb
or
or
or
or
add
add
add
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
std
or
bound
or
out
cs
arpl
outsb
or
sbb
jno
xorb
test
pop
test
xchg
cmp
outsl
xor
ljmp
bound
add
and
mov
add
add
outsb
jmp
dec
test
mov
jns
pusha
repz
xorb
pop
leave
test
mov
ret
pop
int
addr16
jg
mov
imul
sbb
push
movsl
sub
push
jecxz
push
in
pop
xlat
inc
and
cmp
lea
xchg
add
xor
and
fwait
adc
jnp
fs
pop
test
test
push
test
scas
aas
pop
test
lea
adc
cmp
adc
ret
mov
cltd
les
xchg
filds
jmp
jg
ja
loope
mov
and
cmp
gs
mov
loope
subb
adc
sub
push
testb
jmp
outsl
test
imul
popa
sbb
jmp
das
scas
aas
pop
test
hlt
pop
rclb
dec
orb
decb
cmp
lcall
aam
int
xchg
out
sbb
sub
push
fs
bound
or
add
mov
mov
int
outsb
push
push
mov
or
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
push
pusha
add
add
mov
xlat
cwtl
outsb
bound
add
add
jmp
shll
or
in
rorb
pop
test
sar
inc
adc
cmp
jl
jl
testb
inc
movzbl
jmp
sbb
aas
and
lret
pop
enter
dec
sahf
jbe
orl
jmp
add
add
jmp
push
lret
pop
ds
pop
leave
pop
cmp
pusha
in
out
jno
xchg
leave
adc
jo
mov
and
cmp
jne
addl
jmp
inc
rolb
shlb
push
mov
es
sbb
xchg
dec
xchg
add
mov
das
iret
cmp
inc
sbb
xor
jmp
mov
movsl
outsb
mull
icebp
js
dec
fidivrs
mov
out
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
xor
xrelease
popl
jmp
scas
xor
sub
das
mov
lea
jmp
push
mov
jns
jbe
push
lret
mov
call
repz
call
push
call
imul
mov
shlb
push
jns
push
out
popa
mov
jmp
add
out
cld
fwait
jbe
popf
mov
scas
add
call
ret
jmp
xor
push
idivb
mov
xchg
cwtl
decl
enter
movsl
mov
jmp
in
notl
aam
shrl
std
mov
pushf
xor
xor
jb
xchg
cmp
movsb
push
and
jmp
icebp
or
mov
cli
or
jmp
add
cmpsl
mov
lea
pop
stc
or
jmp
clc
or
jmp
negb
xchg
or
sub
jge
je
and
push
jmp
inc
fisttpll
out
jb
xor
pop
jmp
sbb
fcompl
add
xchg
mov
and
aam
iret
ret
out
ds
call
mov
call
jmp
rorb
mov
jo
loop
fs
imul
shll
pushf
jmp
pushl
jmp
adc
add
xchg
mov
pop
leave
test
mov
jmp
cmp
add
add
jmp
lcall
pop
into
test
push
jns
jge
out
pop
xchg
jmp
inc
rcll
sub
inc
xlat
mov
mov
lods
dec
popa
out
jg
jmp
dec
hlt
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
mov
jmp
xor
mov
shll
jg
jmp
sub
and
pusha
jmp
dec
adc
and
xchg
add
xor
sbb
aad
xchg
test
xchg
fwait
or
mov
xor
pushl
or
or
and
inc
xlat
inc
and
jbe
cmpsl
aaa
push
mov
stc
or
jmp
inc
adc
lock
insl
int3
adc
sbb
xchg
push
outsl
hlt
push
cld
push
popf
sub
repz
popa
jmp
mov
jmp
data16
insb
or
in
adc
jl
adc
jno
sub
call
xlat
mov
test
pop
nop
testl
cmp
cmp
cmp
jmp
xchg
adc
xchg
add
jns
data16
xchg
outsb
mov
adc
add
add
insl
add
or
jmp
leave
push
outsl
or
and
ljmp
jne
addr16
or
add
test
incl
add
mov
jmp
xchg
sub
popa
jmp
jmp
or
pop
jp
jg
pop
enter
ficomps
scas
pop
mov
pop
mov
je
jmp
gs
bound
rolb
add
jmp
sti
jnp
mov
xor
dec
lret
pop
ds
inc
lret
lret
mov
outsl
xor
or
add
insl
add
add
outsl
add
add
outsl
or
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
xor
jmp
popl
lea
jmp
stos
inc
shll
cmp
add
mov
xor
adc
mov
dec
mov
jmp
insl
cld
xchg
cmc
add
cld
push
lahf
push
add
mov
mov
xchg
add
xor
mov
dec
mov
push
std
ljmp
add
cmp
shlb
dec
xlat
inc
and
xor
inc
scas
xchg
mov
sbb
out
push
xchg
push
call
rolb
inc
mov
mov
scas
sbb
cmp
out
cmpsb
lea
dec
cmp
or
ljmp
bound
or
and
jmp
xor
xchg
adc
jns
mov
jge
gs
push
xor
mov
int3
ret
mov
or
cmpsb
add
push
cmp
sbb
push
shlb
mov
adc
xor
roll
push
add
add
outsl
and
add
and
jmp
out
pop
into
pop
cmp
addr16
jnp
in
inc
movsb
push
in
test
arpl
xlat
mov
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
push
push
add
add
mov
mov
andl
bound
add
jmp
xchg
and
jb
xchg
cld
data16
xchg
outsb
lods
mov
rolb
das
fidivl
inc
fimull
fidivl
adc
push
lret
lret
mov
push
fisttpl
fnsave
dec
into
pop
cmp
adc
test
xchg
lock
loop
sti
sahf
insl
mov
dec
mov
in
add
imul
or
ja
loope
jb
push
popf
or
lods
and
adc
outsb
cld
fwait
jbe
pop
xchg
add
push
cmc
js
mov
stc
imul
mov
xchg
aas
adc
mulb
push
fistl
cmpsb
push
loop
sbb
pop
lret
scas
pop
in
lods
aas
scas
lret
cld
data16
xchg
outsb
lods
lds
stos
data16
stc
cmp
mov
add
add
insl
dec
add
add
add
add
or
outsl
or
add
outsl
add
push
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
sbb
fildl
add
add
bound
add
ret
scas
pop
mov
jecxz
push
in
push
jns
in
jge
divl
les
int3
add
mov
and
aaa
mov
les
gs
add
add
add
pop
enter
and
outsl
sub
add
add
outsl
add
sbb
add
or
add
or
sbb
add
add
add
add
add
mov
add
adc
rcrl
stos
pop
xchg
rcrb
test
mov
xor
sbb
or
push
outsl
xor
pushf
add
add
add
mov
add
adc
aad
leave
test
js
gs
sub
insb
or
dec
fdivrs
mov
hlt
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
int
int
shrl
xchg
testb
cli
dec
jb
jno
jecxz
into
pop
into
test
xlat
mov
out
mov
lods
cmp
ret
push
lds
fwait
add
mulb
adc
pop
int3
stos
data16
push
into
pop
cmp
push
mov
pushf
sti
push
fildll
arpl
cmc
sbb
clc
mov
stos
int
fnop
push
les
pop
cmp
add
push
sti
jle
mov
shll
shll
ret
push
lds
insb
in
sbb
cltd
push
push
pop
jp
inc
mov
scas
lret
repz
mov
or
dec
mov
lcall
xlat
inc
aam
dec
out
clc
outsb
or
dec
std
push
lahf
push
mov
mov
sbb
push
mov
testl
add
add
adc
xor
jmp
cs
repnz
lcall
xchg
testb
inc
lods
lahf
pop
xchg
repnz
jecxz
and
add
je
push
cld
adc
adc
cmp
cld
jns
mov
jne
addr16
or
movsb
cmp
inc
pushf
push
test
push
in
out
imul
insl
mov
or
or
xor
or
dec
add
or
add
add
add
add
or
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
sbb
fildl
add
add
add
dec
or
add
mov
shll
mov
sbb
adc
push
mov
outsl
xor
add
add
outsl
or
sbb
adc
or
pop
dec
sbb
add
add
add
add
add
add
dec
or
adc
add
aaa
mov
jns
imul
cmp
movsl
pop
fwait
or
sub
cmc
pop
xchg
add
mov
mov
sbb
enter
mov
and
lods
pop
jmp
mov
std
gs
pushf
outsl
scas
mov
xchg
adc
lock
popa
clc
outsb
or
adc
ja
xorb
mov
lods
cs
cmpsb
xor
scas
inc
popa
out
adc
pop
ficomps
xchg
cmpb
sub
cmp
sbb
lock
lea
push
xor
daa
stc
jno
xorb
push
mov
dec
sub
add
push
cmc
add
test
outsb
or
sub
sbb
loop
pop
loop
add
sub
outsb
or
push
mov
xchg
test
pop
test
push
mov
mov
xchg
popa
add
inc
pop
lret
lret
clc
outsb
or
cmp
sub
adc
xor
jmp
dec
test
mov
inc
mov
pop
test
xor
dec
in
jb
xchg
xor
je
jne
mov
mov
lods
cmp
jl
push
mov
xchg
sbb
push
lret
mov
out
adc
sbb
rolb
shlb
jno
outsl
or
jecxz
xchg
or
outsl
sub
inc
shlb
push
xor
or
cmp
loop
test
dec
jl
bound
and
and
add
fsts
cmpsb
push
in
insb
or
mov
or
adc
in
sbb
cltd
pop
xchg
repnz
jne
bound
fidivrs
ret
shll
movsb
cmp
gs
notl
and
cld
pop
fstpt
les
int3
xor
xlat
repnz
sbb
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
sti
jge
je
jo
insb
loop
je
movsb
cs
call
xor
in
fs
popf
insb
lahf
or
aam
leave
test
lea
icebp
je
outsl
or
mov
and
add
nop
and
dec
fdivl
in
xchg
add
mov
inc
mov
push
mov
js
cs
and
mov
and
xor
dec
data16
insl
hlt
pop
in
inc
fimuls
popa
xchg
or
adc
jb
xchg
loop
lock
bound
das
enter
stc
or
jbe
addr16
sub
jae
in
push
aad
sub
xor
mov
lea
mov
mov
out
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
add
add
int
add
hlt
jge
je
scas
and
inc
mov
or
jmp
or
adc
lret
mov
mov
push
mov
es
mov
cmp
cmp
std
insl
hlt
pop
mov
mov
dec
fmuls
fsubrs
icebp
popa
add
pop
dec
fisttps
fsts
cmp
xor
cmc
gs
pop
inc
fimuls
and
pop
mov
dec
mov
mov
pop
xchg
adc
inc
cwtl
sbb
mov
lret
dec
fnstcw
movsb
ret
fstpt
ret
push
lds
push
jnp
insl
hlt
pop
lock
mov
test
push
lret
scas
push
mov
and
push
lea
leave
pop
cmp
outsb
add
leave
dec
fstpt
sub
sbb
adcl
test
adc
jecxz
scas
or
test
hlt
push
push
cld
ljmp
bound
add
and
mov
add
add
fsts
dec
mov
or
jmp
testb
mov
or
adc
add
add
pop
outsl
stc
imul
xchg
repnz
jno
ds
cmp
dec
outsl
mov
add
mov
test
aad
into
lock
lcall
mov
adcl
js
mov
loope
lock
bound
push
adc
jle
outsb
or
push
jle
outsl
or
rolb
test
jge
jns
test
pop
test
sub
hlt
jge
je
addr16
roll
aad
and
fcoml
cmpsl
push
cmc
cmpsl
aaa
push
mov
out
sbb
sbb
cmp
sbb
jg
push
shll
mov
fistpll
int
addr16
mull
nop
arpl
lea
mov
sbb
push
pushf
cld
gs
pushf
outsl
mov
mov
pop
leave
test
mov
insb
or
and
add
pusha
pop
repnz
enter
imul
fmuls
fsubs
inc
push
xor
sbb
inc
sub
sub
insl
push
or
jmp
ds
sub
ret
mov
mov
xlat
inc
and
sub
and
push
fisttpl
jo
bnd
je
and
mov
push
xor
jle
rolb
sarb
jns
mov
ljmp
sbb
movsb
ret
ds
into
push
lret
lahf
mov
and
lock
movsb
ret
ds
mov
icebp
insl
std
test
je
jns
jmp
or
aam
lds
aam
int
push
xor
sub
xchg
mov
pop
xchg
adc
movsb
and
xor
call
fs
jge
notl
and
and
push
icebp
js
mov
pop
lahf
punpckhdq
outsb
popf
dec
xor
add
jg
adc
xor
and
push
push
call
mov
cmpb
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
mov
sbb
ret
cmpsb
push
loop
lahf
punpckhdq
xor
cld
pop
pop
mov
jbe
or
outsl
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
mov
or
jmp
add
push
int3
inc
and
enter
sbbb
out
sbb
ljmp
mov
jg
or
push
cltd
out
insb
loop
je
xchg
push
test
push
divb
pusha
pop
repnz
rolb
xor
xor
xchg
testb
mov
jo
imul
xor
and
xchg
jb
imul
fstpt
mov
mov
dec
mov
fwait
jbe
enter
dec
in
mov
xchg
test
push
mov
xchg
daa
lods
inc
shll
push
jno
xor
push
lret
cmc
insl
mov
cwtl
add
cld
ljmp
bound
add
and
jmp
or
mov
xor
sub
dec
fdivrl
xchg
icebp
add
rorl
movsb
push
ror
push
mov
xchg
cmc
add
stc
add
add
add
outsl
and
or
and
add
add
mov
mov
bound
add
add
fcoml
or
jmp
test
xor
sub
push
cld
sbb
testb
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
mov
or
jmp
pop
xchg
adc
mov
nop
testl
push
movsb
inc
dec
push
xor
cmp
les
int3
imul
mov
inc
leave
pop
cmp
outsb
fmuls
mov
mov
sbb
dec
mov
push
cmc
pop
out
out
jno
xchg
add
mull
icebp
dec
loopne
jmp
jge
xlat
push
ret
cmpsb
push
nop
xlat
dec
ret
mov
lods
and
pop
xor
inc
fimull
ficompl
lcall
repz
gs
mov
movl
outsl
lcall
add
jecxz
sti
sahf
insl
xchg
mov
sub
add
xor
add
add
mov
or
jmp
das
cli
lret
mov
add
jns
inc
shll
xor
dec
frstor
movsl
push
cmpsl
pushf
adc
push
and
ds
test
loop
std
test
fisttpl
mov
mov
pop
lret
scas
pop
ljmp
xor
adc
lahf
push
mov
jg
cmp
notl
je
cmp
mov
cmc
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
mov
jecxz
aas
scas
lret
or
int3
pop
lret
scas
pop
mov
lcall
leave
test
fidivrs
or
iret
or
in
cld
pop
fisttps
sbb
insl
add
mov
pop
or
jmp
adc
xor
add
add
mov
ret
aad
bound
add
add
lock
push
mov
pusha
pop
repnz
mov
and
ss
mov
jge
fs
lds
iret
ds
sbb
push
sbb
add
push
lahf
punpckhdq
fwait
jbe
loope
loop
je
and
or
jg
jmp
stos
pop
xlat
inc
aam
dec
out
xchg
add
and
xchg
mov
fisttpll
mov
in
je
and
iret
cwtl
add
adcl
test
es
cs
sbb
rcrl
data16
adc
das
lods
and
pop
roll
inc
cmpsl
push
lds
sub
sbb
adc
push
sbb
lahf
sbb
gs
pushf
outsl
sahf
cmp
pop
lcall
outsl
sub
xor
jmp
adc
add
mov
sbb
adc
add
add
dec
mov
jecxz
das
mov
fisttpl
fnsave
lods
cmp
push
pushf
sti
push
mov
pop
mov
in
jge
negl
cwtl
decl
mov
popa
enter
psubd
scas
cmp
mov
inc
mov
popf
add
std
or
sti
imul
insl
in
mov
mov
data16
xchg
outsb
cmpsl
and
push
rolb
sarb
clc
jg
mov
test
nop
testl
mov
jecxz
jne
push
rolb
sarb
cmp
out
imul
insl
mov
jbe
loopne
sbb
outsl
mov
shll
cltd
push
mov
xchg
add
add
sahf
sub
pop
iret
stos
pop
into
push
rclb
jno
and
add
es
adc
add
add
xor
add
dec
add
add
or
or
or
add
add
adc
add
or
or
or
add
adc
or
or
or
push
ljmp
add
or
or
add
adc
or
adc
or
add
sbb
fildl
or
or
bound
or
fsts
mov
out
jno
xchg
sahf
stc
or
adc
icebp
adcl
test
aad
sub
jp
je
lea
push
lret
cmc
enter
pop
jmp
xchg
adc
pop
adcb
subb
insb
or
mov
jl
jne
and
lahf
punpckhdq
clc
or
pop
int
addr16
sub
push
mov
cmpsb
lods
xor
add
ret
push
lds
fstps
stos
pop
cmp
push
lds
pop
push
loope
int3
out
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
jns
insl
hlt
pop
sti
call
mov
lea
push
push
fisttps
fsts
aam
jns
mov
int3
dec
fstpt
loopne
jb
cmpsb
das
mov
mov
js
dec
mov
xchg
xor
sbb
imul
push
mov
aad
xchg
push
push
xor
data16
xor
ret
push
lds
mov
fisttpll
mov
pop
cmp
or
mov
dec
roll
sarl
cmpsb
cmp
or
add
adc
rolb
dec
das
ficoml
mov
cwtl
decl
loop
aad
sub
xor
dec
test
popf
or
or
js
xchg
cmc
add
fstpl
ds
sbb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
sbb
or
bound
add
xchg
push
test
push
testb
push
xchg
add
jno
adc
xor
ljmp
bound
add
and
mov
or
jmp
xor
dec
frstor
or
ret
mov
test
and
push
add
jg
lret
pop
ds
addb
repz
sti
push
xchg
add
jns
int
and
xlat
pop
repnz
xchg
repnz
mov
stos
int
fcoml
mov
jl
divb
lret
lret
loop
pop
loop
adc
test
in
sbb
cmc
fs
popf
insb
lds
pop
repnz
pop
roll
aad
jp
jl
testb
dec
push
cmp
imul
adc
add
xchg
jne
mov
adc
add
jmp
jmp
mov
in
aam
sub
dec
sub
inc
aaa
stos
cmp
sbb
mov
inc
shll
sbb
cmp
es
pop
lret
scas
pop
in
lahf
mov
lds
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
add
add
rcrl
test
mov
fldl
mov
mov
out
clc
lahf
push
mov
shlb
mov
pop
int
addr16
leave
pop
iret
stos
pop
cmpsl
movsb
ret
ds
mov
mov
and
lahf
fwait
or
imul
ret
pop
iret
stos
pop
movsb
jb
jg
jmp
dec
mov
jb
addr16
fisttpl
fstpl
in
jle
lea
pushf
sti
push
fs
sbb
jmp
and
mov
dec
mov
cmpsl
push
mov
in
jge
negl
fmull
mov
enter
and
cmp
adc
test
xchg
repz
out
loope
adc
or
mov
mov
ljmp
mov
sarb
fistl
mov
and
icebp
pop
xlat
inc
and
cmp
xchg
add
popa
loope
std
test
mov
std
or
fsubl
adc
or
add
insl
add
mov
push
je
out
sub
mov
gs
xor
mov
sahf
aas
lods
cmp
popf
or
sbb
mov
dec
mov
adc
pop
xor
das
mov
cs
scas
aas
pop
test
jmp
daa
inc
mov
mov
mov
xor
scas
xor
pushf
xor
dec
scas
sub
lcall
loop
pop
loop
jns
xor
dec
adc
add
add
xor
add
mov
and
adc
jle
insl
sbb
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
or
jmp
jmp
popf
insb
lds
dec
adc
push
gs
push
cld
push
aaa
cmpsl
aaa
push
mov
xchg
pusha
leave
push
push
xor
jns
mull
icebp
pop
dec
inc
and
sbb
lahf
jg
push
test
push
hlt
sbb
jnp
jnp
in
insb
pop
into
test
and
jp
in
add
in
sbb
add
and
xor
mov
adcb
xorb
repnz
mov
xchg
cmc
add
es
inc
mov
rcrl
stos
pop
sbbl
daa
shlb
jbe
outsb
or
pop
pushf
adc
jle
mov
adc
inc
push
rclb
jbe
sub
and
mov
add
push
mov
adc
sub
jp
jp
rcrb
test
mov
cmp
into
inc
aad
dec
mov
xchg
lea
nop
testl
inc
mov
imul
adc
dec
jl
jl
testb
adc
lcall
imul
push
adc
sbb
and
insl
std
test
mov
mov
mov
sti
pusha
stc
imul
xor
scas
inc
sbbl
out
sbb
dec
rolb
rclb
sbb
aad
sub
adc
sbb
mov
lods
and
lahf
pop
push
arpl
cmc
and
sbb
movl
mov
inc
iret
pop
cmp
xor
mov
dec
fistpll
pushf
sti
push
mov
enter
sbb
add
mov
inc
mov
push
mov
gs
and
insl
std
test
dec
fldt
cmovl
add
add
lods
add
adc
add
mov
adc
mov
or
add
push
or
jmp
lds
enter
jns
sub
xor
add
add
outsl
add
add
outsl
add
add
outsl
add
add
add
outsl
add
add
sbb
adc
xor
jmp
dec
loop
roll
shll
lds
iret
push
in
sbb
cs
insb
inc
sub
lret
lods
pop
fisttpl
dec
fstpl
mov
sbb
inc
shlb
jno
jecxz
jno
gs
add
inc
shll
jmp
jae
xchg
push
jbe
loopne
jo
imul
and
xor
push
sub
mulb
sub
mov
js
dec
int3
inc
xlat
mov
call
fisubrl
shlb
shlb
sbb
and
test
and
mov
fimuls
inc
push
add
xor
push
xor
and
inc
and
xor
add
std
or
ficoml
outsl
sub
add
add
add
add
add
or
add
or
sbb
or
add
add
add
add
push
adc
add
mov
or
mov
or
add
add
jmp
xchg
adc
dec
int
and
sbb
xor
dec
fnstcw
mov
xor
clc
jge
je
push
mov
sahf
stc
or
mov
les
mov
dec
lds
iret
das
mov
xchg
icebp
add
lcall
mov
sub
jbe
jb
insl
mov
add
push
adc
add
mov
insl
or
mov
sbb
add
or
fisttpl
fstpl
mov
xchg
mov
mov
and
aam
inc
rolb
shlb
movsl
xor
lret
pop
ds
popa
mulb
push
hlt
pusha
notb
mov
fdivl
in
test
jp
jo
loop
sahf
add
out
out
mov
inc
fmuls
fcomps
es
cs
add
outsb
cld
fwait
jbe
adc
jns
xchg
jb
jno
dec
push
subl
add
outsl
add
sbb
or
add
add
add
add
add
add
add
add
add
mov
add
outsb
stc
imul
addr16
cmp
xchg
add
jae
inc
aad
dec
cmpsl
jno
jle
call
lahf
push
push
lahf
punpckhdq
shll
lret
mov
test
push
imul
insb
loop
je
ljmp
mov
aaa
mov
inc
mov
mov
cmpsb
shll
sbb
outsb
mov
enter
sbb
or
inc
shll
cmp
or
je
lea
mov
pop
roll
shll
pop
xchg
adc
sbb
push
out
inc
and
ja
adc
lods
cmp
leave
pop
cmp
jle
push
mov
es
addl
out
or
or
jbe
loop
adc
add
inc
dec
roll
aad
aas
mov
dec
ret
ret
dec
frstor
push
in
cmovb
pop
cmp
cmp
jg
jne
push
cmc
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
dec
rcll
data16
dec
fdivrs
dec
sub
push
jns
fmuls
mov
cmp
sbb
xor
push
loopne
xchg
pop
bound
fildll
popf
pop
enter
outsl
jmp
out
jno
pop
ret
ret
xor
dec
fdivrl
cmc
pushf
outsl
ljmp
test
sub
insb
or
movups
add
add
add
insl
dec
add
add
add
add
or
outsl
or
add
outsl
add
push
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
sbb
add
add
add
add
add
add
into
sub
adc
add
mov
scas
sub
lret
movsl
push
stos
cwtl
sbb
xlat
push
shll
mov
lods
add
data16
lods
pop
mov
or
adc
or
or
xor
or
dec
add
or
add
add
add
add
or
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
sbb
fildl
or
or
bound
or
inc
leave
pop
cmp
cmp
fwait
or
cmp
or
aaa
mov
lock
test
insb
or
mov
test
sahf
or
cmpsb
pop
mov
popf
mov
mov
das
pushf
cmp
add
xchg
or
sub
pop
iret
stos
pop
rorb
add
push
push
int3
inc
and
mov
rclb
sub
mov
aaa
mov
dec
fnstcw
imul
adc
icebp
and
push
or
dec
frstor
ja
adc
add
add
xor
add
add
mov
adc
adc
scas
sub
ret
ret
and
in
std
test
fidivl
dec
add
or
add
insl
add
clc
pusha
or
jmp
adc
push
repz
xlat
inc
and
sbb
lds
iret
das
inc
fdivl
in
in
je
lea
mulb
jns
fimull
ficompl
test
jge
inc
mov
leave
into
dec
fdivrl
xchg
lock
xor
dec
jmp
push
in
cmp
imul
insl
sahf
sub
outsl
jmp
push
in
sbb
ret
push
lds
and
dec
push
xor
cmp
pop
stc
aaa
mov
mov
jmpw
jmp
pop
leave
pop
cmp
jg
icebp
popa
add
pop
adcb
out
mov
xchg
mov
mov
jne
xor
scas
cmp
mov
test
repnz
int3
cs
inc
mov
or
out
sub
ss
lahf
punpckhdq
inc
mov
cmpsb
cltd
je
xchg
cmc
add
cltd
adc
sbb
aad
sbbl
add
or
pop
xchg
adc
std
dec
and
insl
add
nop
push
popa
nop
cmp
xchg
add
lret
lret
sub
push
xchg
repz
test
lods
push
cltd
inc
dec
aad
sub
aaa
dec
fisttpl
fnsave
insl
icebp
popa
add
jbe
mov
inc
mov
addl
fstps
scas
pop
mov
mov
rclb
mov
leave
test
cmpsl
push
aad
sub
or
dec
sub
sub
fimull
fidivl
loopne
clc
lahf
push
ja
xchg
cmc
add
sbb
jg
sub
or
xchg
add
inc
cmp
or
daa
mov
mov
and
and
adc
add
mov
sbb
cmp
test
xchg
mov
mov
and
push
cld
adcb
sbb
xchg
add
loop
pop
loop
sbbl
jmp
pop
cmp
and
inc
and
ss
fisttpll
out
push
jp
or
cmc
gs
adc
aaa
int3
mov
stos
int
ret
lods
mov
xchg
xchg
pop
xchg
adc
add
int
aad
dec
mov
lcall
incb
mov
out
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
add
add
je
out
push
pop
rolb
shlb
push
mov
jle
imul
inc
add
fsts
lods
pop
cli
dec
lds
iret
sbb
mov
in
jge
notl
dec
fdivrs
jbe
loopne
push
push
xor
jle
dec
add
add
add
inc
and
and
loope
outsl
xor
sbb
or
or
outsl
or
add
add
dec
add
sbb
add
or
or
add
add
or
sbb
or
imul
xor
ljmp
bound
or
and
mov
or
jmp
lods
cmp
add
addl
std
gs
pushf
outsl
scas
sbb
push
mov
xchg
jl
inc
shll
push
xor
dec
pop
push
xor
dec
pop
fdivl
in
mov
rcr
pop
int3
stos
data16
push
cmp
sub
sub
inc
rolb
dec
lcall
xchg
nop
testl
mov
mov
push
mov
dec
sub
add
pop
into
test
frstor
loop
lret
orb
adc
sub
stc
imul
xor
or
mov
add
push
xor
addr16
int3
inc
and
xchg
repz
int3
lea
xchg
icebp
add
pop
stos
jnp
jle
call
inc
mov
mov
lret
lret
mul
mov
or
jmp
add
adc
jmp
add
jge
je
sub
cli
push
loopne
adc
dec
xchg
or
sbb
sub
jle
pop
xchg
adc
loope
out
mov
insb
jno
mov
adc
add
mov
mov
mov
lahf
punpckhdq
insb
lahf
sbb
les
and
nop
hlt
orb
mov
sti
and
inc
rclb
sub
loopne
ljmp
and
idivl
sub
dec
pop
fisttpl
fnstsw
jno
jecxz
cli
jbe
cmpl
fimull
fidivrl
ret
ret
jns
mov
jns
jg
jmp
add
pop
scas
aas
scas
lret
pusha
cmc
gs
push
insl
ljmp
stc
mov
jg
mov
sub
cmp
cltd
pop
xchg
repnz
lock
lcall
lahf
cli
or
pop
fcompl
dec
sub
adc
dec
frstor
mov
cwtl
pop
ss
inc
mov
adc
out
imul
daa
mov
and
lret
mov
mov
movsb
ret
fsubrl
jno
jecxz
je
xchg
testb
cs
push
arpl
jge
divl
fwait
push
test
push
mov
fcomps
test
sub
pop
sahf
sbb
mov
add
push
sub
add
mov
mov
adc
out
bound
add
add
in
or
jmp
sub
mov
outsl
std
insl
hlt
pop
mov
xchg
add
out
adc
pop
jg
jle
call
lea
sahf
or
cmpsb
add
mov
inc
fstpt
loope
out
mov
enter
push
mov
xchg
jb
or
outsb
or
jg
cmc
gs
xor
xchg
add
jnp
or
pop
fdivl
in
jns
insl
hlt
pop
sti
adc
fimull
fisubrl
lcall
mov
pop
inc
and
cmp
repz
cmc
pop
movsl
xor
jecxz
push
in
pop
rolb
rolb
adcl
ficoms
mov
outsb
or
dec
iret
pop
repnz
fs
or
mov
jnp
arpl
cmc
inc
adcb
fidivrl
popf
in
insl
rolb
call
push
call
fucomp
add
add
jmp
dec
int
and
cmp
addr16
jmp
das
scas
cmp
mov
jo
cmp
jmp
jge
imul
mov
mov
mov
push
cmpsb
xchg
popf
pushl
jmp
mov
decl
leave
shl
cmp
popf
sub
lahf
add
add
xchg
add
inc
xchg
push
mov
aad
mov
jmp
xor
ss
inc
mov
xchg
mov
jmp
sub
jmp
dec
cmpsl
call
jmp
mov
xchg
lock
clc
jno
xorb
xlat
jecxz
mov
jmp
cmp
popa
sbb
jmp
mov
sbb
add
call
jmp
xor
push
xor
mov
loope
mov
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
adc
add
gs
sar
inc
adc
sbb
lea
adc
call
jmp
mov
shlb
mov
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
jmp
cmc
mov
add
add
jmp
mov
scas
leave
cmp
pop
stc
lea
add
jmp
cmpsb
sub
xchg
add
pushf
add
add
fs
jmp
addr16
imul
dec
pop
or
jo
mov
and
cmp
jne
jmp
or
jmp
call
jmp
add
mov
addr16
popa
jmp
int3
popf
cwtl
adc
in
sbb
dec
jl
andl
sbb
add
dec
fidivrs
cmp
jmp
push
mov
mov
jmp
into
pop
int
addr16
out
add
add
jmp
jnp
arpl
cmc
inc
aam
mov
rcrb
and
pop
std
ljmp
popl
jmp
jno
jg
popf
xlat
dec
sbb
test
add
xchg
cmc
add
push
and
push
add
add
bound
adc
xor
jmp
add
xor
std
call
jmp
jg
jns
jmp
rolb
ret
jmp
lea
dec
adc
add
add
int3
popf
lret
pop
int3
stos
sarw
jmp
ds
push
push
push
call
push
jmp
fisttps
mov
jae
in
jnp
jno
jecxz
repnz
lock
mov
mov
popl
jmp
xchg
or
jge
jmp
fimull
mov
jg
jmp
push
in
add
popa
add
sbb
faddp
add
call
adc
jg
add
add
jmp
cmp
and
insb
or
clc
add
adc
push
mov
lahf
lea
jmp
dec
into
pop
cmp
and
mov
dec
mov
in
pop
out
push
cli
push
jne
mov
add
mov
or
jmp
cmp
add
xor
add
add
lea
add
insb
in
sbb
jmp
outsb
cld
fwait
jbe
sti
dec
sub
jmp
popa
mov
into
ljmp
pop
jp
push
gs
or
or
cmpsb
adc
in
subb
adc
xor
jmp
sub
cwtl
add
bound
add
xor
jmp
das
or
jmp
jecxz
out
jo
enter
pop
jmp
outsl
mov
mov
add
call
int3
popf
cmp
or
jnp
mov
jp
std
or
gs
push
out
pushf
jmp
jno
jnp
in
pop
mov
fwait
js
jo
loop
lret
mov
rcrb
and
xchg
popf
pushl
mov
jmp
nop
or
push
shlb
mov
hlt
jmp
pop
lret
pop
ds
xchg
fwait
decb
and
pop
into
test
push
xor
sub
pop
leave
test
mov
pop
cltd
out
sub
jmp
mov
jmp
movb
inc
cwtl
mov
mov
es
cs
and
rorb
das
call
adc
pop
xchg
mov
jmp
or
jge
andb
jmp
imul
adc
add
xchg
fsts
lods
pop
cli
ret
lahf
ds
jmp
orb
call
out
adc
cmp
loopne
adc
je
sti
out
and
movl
addl
ret
xchg
add
push
push
popa
jmp
pop
repz
addr16
jmp
pop
and
jmp
es
loop
loopne
jb
cltd
or
das
dec
clc
filds
add
jmp
out
out
jo
push
ret
ret
pop
xchg
repnz
loope
cmp
push
call
in
in
je
inc
aad
fdivrl
inc
daa
sarb
jp
jno
jecxz
add
add
add
xor
add
dec
add
or
add
outsl
add
add
outsl
or
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
fildl
or
add
add
xchg
cmp
adc
or
add
jecxz
mov
jmp
outsb
lock
ja
scas
cmp
mov
mov
cwtl
decl
ret
lret
mov
ret
cmp
jmp
cmp
sub
into
pop
cmp
jle,pt
jge
imul
xor
sbb
or
or
outsl
or
add
add
dec
add
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
add
jmp
and
mov
cmpsb
shll
leave
dec
ret
mov
cli
jne
addl
mov
movzbl
jmp
mov
popf
and
sub
or
xchg
ss
daa
mov
xchg
repz
std
jo
cmp
loopne
iret
pop
cmp
xor
inc
movsl
inc
into
pop
cmp
and
fnstsw
popl
jmp
sub
jbe
mov
jmp
inc
int
and
pop
jl
addr16
pop
dec
fisttpll
out
rolb
mov
call
or
mov
test
std
jmp
rolb
add
jmp
xchg
cmpl
jmp
in
jmp
jge
push
push
xor
data16
jns
jmp
addb
fs
jmp
pushf
or
les
int3
jnp
loopne
adc
inc
sbb
test
mov
or
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
mov
adc
pop
repnz
xchg
lea
or
mov
dec
add
add
movsb
cmp
sub
cwtl
mov
mov
shl
xor
jmp
ret
jmp
jle
push
jmp
adc
jae
movsl
xor
or
cmpsb
xor
scas
jns
sbb
push
mov
xor
adc
add
mov
or
mov
add
add
mov
das
mov
lea
push
les
jle
call
mov
inc
es
and
cmp
jge
fistpl
mov
jmp
out
mov
or
bswap
arpl
xchg
rolb
xchg
add
cmp
mov
dec
mov
jns
and
jle
add
cmpl
jmp
xor
es
mov
dec
int
and
cmp
lods
pop
orl
stc
or
cmp
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
outsl
in
sbb
or
jne
jmp
inc
int3
inc
and
push
dec
frstor
lds
ret
mov
jmp
jmpw
jmp
dec
fmuls
fsubrs
fisttpl
fnsave
and
insl
jmp
jmp
shl
mov
jmp
mov
jmp
adc
and
push
scas
adcl
enter
outsl
xor
or
add
insl
add
add
add
add
add
or
push
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
xor
add
add
mov
out
jmp
bound
or
jmp
aaa
addb
fnstsw
adc
adc
add
mov
push
jmp
jnp
ja
loope
xor
icebp
outsl
lcall
push
imul
jmp
xchg
mov
jmp
jmp
xchg
popa
call
xor
mov
sahf
stc
or
in
test
jmp
push
xlat
inc
and
aaa
out
outsb
cld
fwait
jbe
mov
jmp
sbb
mov
cmpsl
ret
sbb
push
and
sub
jmp
or
add
insl
add
mov
xor
adc
adc
xor
inc
jmp
int
aam
dec
lods
ret
jmp
rcrl
stos
pop
addl
sbb
out
jg
jmp
pop
scas
jns
imul
cmp
sbb
and
ret
jmp
test
lahf
cli
or
rcrb
xchg
addr16
pop
aas
lret
repnz
jmp
xchg
in
sbb
sub
call
add
xchg
popf
pushl
jmp
insl
add
or
cli
jmp
dec
fldenv
das
cmp
mov
jmp
and
adc
add
negl
cltd
push
mov
jmp
mov
jmp
jno
jp
in
dec
inc
fimuls
and
fdivl
add
cmp
bound
add
add
mov
cmp
adc
mov
or
pop
andb
jmp
les
test
fisubrs
js
ljmp
lahf
inc
dec
cmc
fsubr
mov
jmp
sub
pop
imul
mov
jmp
sbb
inc
lret
pop
ds
ds
inc
mov
xor
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
mov
add
add
jbe
cmpl
es
cs
jmp
lea
sbb
je
mov
jle
pop
je
add
add
aaa
fnsave
outsl
or
hlt
iret
inc
fidivrl
and
mov
fsubrs
fimull
or
xor
cs
mov
hlt
pop
mov
xchg
and
xchg
testb
mov
adc
mov
lods
mov
rorb
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
rcrl
test
stos
push
ret
cmpsb
push
mov
mov
inc
mov
lock
mov
ret
jo
jmp
sbb
inc
int
and
add
es
mov
dec
push
and
popa
mov
ret
dec
lret
pop
ds
call
add
mov
cmp
rolb
sarb
fs
popf
insb
frstor
mov
inc
mov
out
and
cmp
jne
addl
mov
jmp
popf
or
mov
dec
mov
iret
cmp
popa
mov
jmp
pop
inc
in
dec
jmp
inc
inc
and
jns
mov
ds
test
add
lea
jmp
divb
xchg
jle
je
out
add
and
rorl
jmp
xlat
lret
jmp
inc
jmp
jle
jbe
loopne
mov
stos
inc
lds
iret
add
xchg
add
sahf
jbe
add
cmp
je
jmp
jg
insl
hlt
pop
in
jle
cmpl
jmp
repnz
jmp
roll
lods
pushf
and
popa
icebp
nop
arpl
fisttpl
test
mov
inc
mov
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
subb
and
jmp
xchg
pop
xchg
adc
outsl
jmp
push
in
sbb
cmpsl
aaa
push
mov
mov
call
add
xchg
popf
pushl
jmp
mov
mull
icebp
sbb
mov
jmp
andb
jmp
popa
jmp
mov
fistl
cwtl
push
imul
xor
int
decb
sar
jmp
bswap
pop
iret
stos
pop
shrl
dec
das
pop
push
cmp
inc
or
mov
jmp
cmc
into
jp
pop
sub
jmp
pop
leave
pop
cmp
pusha
push
rcll
jo
inc
mov
jmp
rolb
push
pushf
jmp
mov
push
das
test
sar
inc
adc
sub
outsb
leave
cltd
jo
mov
and
cmp
jmp
and
es
inc
mov
push
adcl
xor
sarl
jmp
sbbb
ljmp
mov
and
loope
adc
data16
pop
jmp
sbbb
inc
xlat
mov
xchg
xchg
pop
bound
or
popl
jmp
lds
mov
xor
push
jmp
lret
mov
cmpsb
shll
push
aad
sub
or
xor
xor
icebp
pushl
add
sbb
dec
fidivrs
das
dec
mov
test
jbe
rolb
add
jmp
out
cld
fwait
jbe
xchg
test
jmp
bound
idivb
push
jmp
ds
inc
mov
mov
out
mov
lods
mov
xchg
pushf
xor
add
mov
jmp
jne
jne
out
pop
lods
or
add
cmp
jmp
adc
mull
pushf
outsl
faddl
xchg
add
cmp
add
inc
push
xchg
pop
movzbl
add
cmp
je
jmp
int3
pop
leave
test
lock
ljmp
stc
mov
ret
ret
xor
jmp
js
jo
loop
mov
mov
sub
ret
push
lds
xor
xchg
add
push
jmp
or
out
out
mov
pop
fistl
mov
push
cmpsl
sbb
stos
cld
jmp
cmp
mov
sahf
stc
or
adc
je
mov
jmp
sub
push
test
mov
sub
pop
xchg
repnz
repnz
and
push
adc
ja
test
jge
fs
lods
lret
inc
mov
mov
rcrb
test
fdivrs
cmp
jmp
cmp
jae
mov
iret
pop
xchg
pop
bound
clc
call
jmp
add
mov
cld
jbe
imul
mov
ficomps
add
push
push
mov
xor
jmp
movsb
push
jmp
mov
test
jmp
sbb
mov
mov
sbb
add
add
inc
shll
ret
cmpsb
push
loop
add
fists
add
add
mov
jmp
ljmp
lcall
jmp
test
out
clc
mov
jmp
fisttpll
cwtl
or
in
mov
dec
lock
pop
lret
scas
pop
cwtl
inc
fisttps
flds
mov
cmp
sbb
and
ret
jmp
mov
call
add
mov
call
movl
jmp
flds
mov
dec
cld
jmp
pop
rcll
sub
js
mov
xor
jl
jno
jecxz
xchg
inc
cld
test
je
xor
decl
mov
mov
jmp
jmp
mov
mov
jo
loop
das
scas
cmp
mov
jo
dec
cld
inc
test
jne
jmp
cltd
jno
mov
sub
jmp
dec
into
pop
cmp
sub
outsl
or
shlb
into
fstpl
test
xor
jmp
pop
aad
sub
loope,pn
loope
in
push
add
jmp
push
fdivl
in
mov
fcmovnbe
pop
enter
in
clc
lahf
push
imul
call
lea
push
push
pop
lea
jmp
pusha
lret
cltd
mov
jmp
adc
test
jmp
xor
push
lds
jle
pusha
pop
repnz
test
les
inc
cmp
jb
movl
lea
jmp
lahf
or
in
mov
cld
jmp
jne
jmp
outsb
pop
aad
addb
add
and
arpl
xchg
sarb
lahf
and
lods
cmp
jmp
mov
inc
jmp
add
add
add
push
jmp
push
jmp
in
jg
mov
push
rclb
addr16
xchg
or
pop
or
pop
stos
mov
jmp
cli
push
loopne
adc
or
das
ficompl
lret
pop
ds
aaa
mov
call
push
jmp
push
sub
adc
push
das
sti
push
jmp
mov
jmp
mov
je
mov
loop
notl
cmp
inc
scas
cs
push
xchg
or
adc
add
in
sbb
mov
repz
jmp
push
jmp
test
xchg
lock
mov
movsl
int3
aas
enter
int3
aas
aad
int
and
outsb
inc
dec
sti
call
mov
push
lea
push
push
lea
push
mov
jmp
xor
jno
mov
shr
jmp
popa
ljmp
clc
lahf
push
xchg
enter
inc
jmp
sbbl
cld
paddd
xchg
add
xor
mov
mov
std
or
jno
mov
xchg
add
movsb
mov
jmp
jmp
lcall
repz
cmc
pop
fs
push
cld
dec
in
int
popf
xor
call
jl
cld
jmp
outsl
test
fbstp
popa
jmp
mov
mov
and
mov
test
cmp
cmp
mov
mov
mov
andb
sub
jmp
push
adcl
dec
fdivrl
sbb
roll
aad
lods
mov
ret
mov
mov
sbb
or
or
fsub
imul
insl
mov
jo
mov
jmp
sbb
inc
adc
push
cmp
xchg
add
add
dec
sub
xor
imul
mull
icebp
add
cmpsl
aaa
push
mov
mov
jmp
mov
mov
jne
addl
mov
jmp
add
pop
jb
fstl
lods
pop
scas
add
push
xchg
add
sahf
jp
mov
mov
lcall
jmp
addr16
jl
testb
pop
fists
mov
scas
leave
cmp
fcmovu
add
cmp
je
popa
mov
jmp
loop
cmp
int3
popf
das
stos
cmp
inc
rcrl
test
stos
fcomps
popl
jmp
push
call
push
push
call
push
mov
js
cs
jle
mov
je
sub
inc
jmp
filds
mov
les
push
call
cmp
call
jp
push
mov
jmp
mov
mov
mov
mov
or
add
fldl
add
cmp
ss
shr
push
setnp
outsb
popf
pop
lock
xchg
jmp
adc
or
out
jne
mov
mov
in
sbb
inc
pop
sub
add
xchg
popf
pushl
jmp
pop
ret
ret
mov
inc
mov
int
shrb
je
jmp
sbb
pop
popf
jmp
mov
jmp
sbb
dec
enter
dec
mov
jmp
inc
pushf
jmp
addb
or
andb
add
add
lret
mov
cmpsb
shll
jbe
pusha
pop
repnz
and
loope
adc
adc
dec
add
add
add
lods
dec
add
or
or
or
add
add
add
add
or
push
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
adc
add
mov
les
adc
jmp
or
add
nop
dec
or
jmp
adc
push
jg
arpl
mov
jmp
and
xor
jge
notl
cmp
sub
dec
dec
les
int3
imul
mov
mov
stos
cmp
push
pop
mov
adc
add
out
jmp
jge
ja
cltd
cmp
sub
jmp
nop
add
xor
fimuls
push
sahf
dec
mov
jmp
andb
jmp
jle
jg
jmp
cmp
add
es
insb
cli
ret
jmp
cmp
jge
je
out
or
xor
mov
dec
or
or
or
cld
ljmp
bound
or
and
pop
dec
sbb
add
outsl
add
sbb
add
add
lea
add
add
mov
or
bound
add
jge
jnp
in
add
sub
inc
adc
jge
mov
jmp
fwait
add
cmpsb
xor
scas
sub
add
push
insl
out
decb
shr
fdivl
jmp
enter
mov
jmp
pop
fimull
ficoml
inc
les
int3
and
and
mov
mov
or
jmp
adc
roll
dec
mov
out
testl
mov
pop
mov
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
cmp
jmp
jne
pusha
pop
repnz
sahf
imul
push
or
sbb
fld
dec
fdivrs
cmp
mov
xchg
sbb
mov
inc
mov
jne
addl
mov
jmp
xchg
sahf
stc
or
mov
mov
jmp
xor
popl
jmp
sbb
add
inc
mov
fwait
decb
aas
lret
pop
or
jmp
mov
imul
jmp
aas
push
jmp
pop
jmp
xchg
add
std
or
outsb
add
lcall
lcall
test
xchg
mov
pop
mov
jns
and
push
cld
dec
mov
mov
je
cmpl
jne
call
jmp
push
jmp
dec
dec
push
jmp
sbb
int3
push
les
shlb
enter
stos
dec
or
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
mov
or
jmp
add
sbb
sbb
inc
in
push
mov
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
mov
and
mov
sub
cmpl
push
push
jmp
cmp
cmp
inc
mov
mov
cmp
aam
js
add
inc
pusha
loop
pop
loop
mov
cmpsb
shll
or
jne
insb
and
jmp
mov
insl
jmp
push
mov
jmp
aas
sbb
je
jmp
loope
cli
popf
insb
test
add
add
adc
push
jmp
push
adc
lret
out
std
test
cld
jnp
mov
int3
and
add
xor
push
lds
aam
dec
lcall
nop
adc
inc
mov
pop
or
jmp
dec
or
mov
add
push
shll
jno
ss
mov
add
jmp
scas
inc
shll
aam
dec
incl
xor
dec
mov
popf
cld
incl
call
lods
mov
call
sub
jle
mov
xlat
and
stc
loopne
rcrb
cli
add
add
push
cld
aas
inc
imul
jmp
into
pop
lret
scas
pop
mov
lcall
into
stos
pop
xchg
xor
and
push
add
mov
inc
add
imul
movzwl
jmp
cli
fs
popf
insb
jmp
mov
jmp
push
lahf
punpckhdq
testb
fidivl
lock
xorl
mov
push
mov
outsb
add
or
into
jmp
cmp
decl
mov
mov
jbe
jmp
test
mov
pusha
notb
inc
and
and
jno
leave
cmpsl
imul
add
movzwl
movzwl
imul
add
jmp
xchg
adc
out
jl
testb
sbb
push
xor
rcrb
jmp
add
jmp
loopne
mov
jmp
nop
pop
ja
outsl
or
mov
outsb
mov
movzwl
add
movzwl
add
movzwl
jmp
or
push
jno
inc
scas
and
xor
insl
std
test
outsb
hlt
and
shll
ja
add
jmp
mov
or
int
and
jl
xor
pop
lret
scas
pop
repnz
rorl
fdiv
popa
icebp
nop
arpl
in
js
mov
faddl
mov
lea
xchg
xchg
inc
call
movzwl
movzwl
imul
mov
jmp
cwtl
movsl
movsl
movsl
mov
mov
jmp
push
xchg
add
jno
cltd
call
cmp
xor
jmp
jg
jne
out
pop
lods
cmp
cmp
test
popa
aas
call
dec
xlat
inc
and
pop
dec
into
pop
cmp
pop
popa
loop
pop
loop
sbb
aaa
mov
jmp
jb
jmp
jae
pusha
pop
repnz
int
cld
call
jmp
adc
mov
jb
fs
or
mov
js
popa
fisttps
mov
ret
add
call
shr
pop
add
add
les
push
mov
jg
mov
rorl
push
repnz
xor
pop
repnz
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
rorb
push
adcl
pop
jp
push
pop
jmp
rcrb
xchg
addr16
xor
adc
scas
pop
ja
jne
out
pop
cmpsb
push
out
leave
push
pop
jmp
jmp
js
jg
jmp
jmp
jmp
pop
jmp
add
and
pop
int
addr16
mov
mov
and
adc
adc
movsl
int
lds
bound
sbb
sbb
movsb
dec
add
mov
push
call
jmp
or
mov
inc
shr
adc
mov
std
lock
in
cmp
sbb
cmp
jmp
pop
fisttpll
out
adc
clc
jg
mov
sarl
pushf
jmp
lock
cmpl
xchg
add
icebp
popa
add
add
xlat
inc
and
aaa
cmp
idiv
call
jb
in
out
jp
mov
mov
mov
andb
sub
jmp
push
jecxz
push
in
sbb
mov
jmp
cmp
cmp
jmp
cmp
mov
enter
int3
aas
lcall
sub
jmp
mov
jecxz
jmp
repz
jne
push
icebp
adcl
test
fimuls
inc
push
scas
test
cld
pusha
jmp
lds
mov
ret
jb
jbe
loopne
lock
icebp
nop
arpl
pop
iret
pop
cmp
xchg
xchg
popf
pushl
mov
jmp
outsb
std
insl
hlt
pop
lods
stos
or
cmpl
daa
inc
mov
xchg
add
std
or
sub
jo
mov
jmp
xor
and
scas
cmp
mov
pop
mov
pop
ret
jmp
popl
jmp
cs
inc
mov
mov
fwait
decb
dec
jg
mov
or
jmp
xor
cmp
cs
adc
sbb
pop
dec
adc
rolb
add
jmp
lea
pop
mov
dec
cmp
push
jns
jmp
inc
fldl
roll
cmp
sub
inc
sbb
dec
mov
cmpsb
shll
mov
les
movzbl
add
cmp
je
jmp
dec
decl
mov
sub
cmpl
push
push
jmp
push
fdivl
in
gs
jl
notb
das
mov
gs
pushf
outsl
sahf
ret
shr
push
add
xchg
lahf
cli
or
adc
adc
dec
dec
out
jg
je
jmp
push
adcl
cmp
imul
xor
sbb
andl
adc
movsl
movsl
movsl
jmp
lock
xor
xor
adc
popf
or
push
cmpl
jne
call
test
je
push
call
jmp
mov
jmp
dec
fmuls
fsubrs
pop
pop
pop
mov
jmp
pop
mov
jg
sub
push
mov
mov
int3
call
jmp
daa
mov
cmpsb
cmp
js
je
out
imul
inc
and
jmp
mov
jmp
xchg
or
fmuls
fcoms
stc
jp
jp
movsb
std
or
mov
or
jmp
add
mov
xchg
jle
repnz
imul
add
mov
movzwl
jmp
rclb
mov
push
xor
ds
aad
sub
or
sub
sub
push
add
jmp
stos
sub
dec
rclb
xor
push
aaa
ret
les
cmc
add
jmp
or
outsl
das
imul
jmp
add
jmp
sbb
or
inc
enter
sbb
int
and
pop
inc
movzwl
movzwl
imul
movzwl
jmp
sbb
nop
movzwl
jmp
pop
lcall
stos
xchg
adc
and
rcrb
aas
add
add
jp
in
pop
push
lret
pop
ds
rcll
push
out
xchg
dec
scas
outsl
xor
ljmp
bound
add
and
mov
inc
or
jmp
add
add
jb
jmp
xor
jmp
in
jmp
jge
lahf
setg
or
dec
jecxz
dec
mov
xchg
add
cmp
jae
mov
add
lea
movsl
jmp
mov
mov
arpl
xchg
les
and
jp
jmp
jmp
movsl
jmp
xchg
push
pushf
sti
push
hlt
sbb
std
fs
popf
insb
test
dec
fstpl
cs
jmp
add
ficomps
lods
pop
pusha
leave
pusha
xchg
push
jmp
rolb
inc
test
pop
mov
lock
bound
mov
sub
cmp
jbe
cmp
jae
jmp
jg
mov
movsl
jmp
fs
pop
loop
and
adcl
mov
sub
and
jmp
sbb
movsl
jmp
test
jmp
xchg
sbb
cmp
inc
enter
sub
and
mov
shr
lcall
mov
sbb
jmp
inc
iret
pop
cmp
jo
leave
pop
cmp
sbb
add
movsl
jmp
jbe
imul
or
pop
jmp
pop
jmp
jmp
dec
fstpt
jno
jecxz
and
sub
adc
dec
cmpsl
or
sbb
clc
outsb
cld
fwait
jbe
lock
pushf
outsl
les
hlt
nop
pop
jmp
lock
jmp
cld
outsl
lcall
cltd
xchg
push
jmp
mov
mov
stos
cmp
dec
test
cmpsb
shll
xchg
daa
mov
jmp
dec
aad
sub
xor
ja
sbb
sbb
pushl
scas
aas
pop
test
daa
rcrb
addb
repnz
scas
shll
leave
push
add
movzwl
imul
add
movzwl
jmp
fistps
xchg
addr16
jle
mov
fdivrl
pop
pop
mov
pop
ret
jmp
adcl
jmp
adc
add
insb
mov
movsl
int3
aas
ljmp
hlt
ja
xorb
incb
ljmp
push
sub
jmp
xor
lds
mov
cs
mov
sti
inc
jmp
xor
mov
mov
andb
jmp
clc
ja
xorb
daa
mov
and
lret
jae
xchg
es
jmp
and
aas
pop
test
in
mov
dec
in
ja
xorb
sub
clc
incl
xchg
add
inc
fidivrl
cmpsl
ret
mulb
xchg
aad
mov
mov
ret
loop
in
jg
add
xor
pop
mov
mov
test
fucomp
cmp
cmp
popl
jmp
and
sub
sub
push
or
mov
add
movzbl
add
cmp
jmp
push
popa
mov
jmp
lcall
sbb
int3
popf
xor
aad
shll
xchg
jmp
or
in
cld
inc
rcll
sub
pop
cmp
addl
jmp
mov
lea
jmp
movsl
xor
out
adc
adc
xchg
data16
xorb
decl
add
jne
jmp
cmp
pop
adcb
adcb
or
mov
add
stc
adcl
test
or
arpl
incb
add
xor
cld
ljmp
jo
loop
push
jecxz
push
in
pusha
call
pop
mov
call
mov
add
pushl
mov
jmp
pop
mov
subb
adc
xor
jmp
leave
and
stc
imul
push
xor
adc
fimuls
and
fmuls
fdivrs
in
bound
sub
outsl
or
adc
push
aaa
ret
in
bound
jne
out
inc
js
bound
sub
push
push
xchg
or
pop
icebp
jl
pop
cld
add
call
das
mov
dec
mov
xchg
popa
test
insb
or
out
pop
lret
pop
ds
into
push
mov
inc
and
sbb
aam
lret
mov
or
lds
iret
xor
xchg
mov
mov
movsb
cmp
inc
mov
fisubl
push
out
std
test
jno
outsb
or
or
dec
sub
jg
jmp
xlat
and
pop
rolb
shlb
mov
dec
mov
mov
movsl
int3
aas
mov
subl
bound
or
sub
jmp
ret
jo
stos
cmp
add
pushf
xor
adc
test
ja
arpl
cmc
xor
pop
lret
scas
pop
mov
and
xor
sbb
xchg
or
mull
icebp
ss
lds
iret
and
xlat
cmp
mov
dec
int3
inc
and
test
pop
lret
adc
je
jmp
xlat
arpl
xchg
gs
imul
push
jecxz
push
in
inc
iret
pop
cmp
and
insb
or
mov
js
jno
xchg
testb
loopne
add
mull
insb
cmc
pushf
outsl
fsub
jo
xorl
jecxz
sub
push
lds
xlat
inc
and
push
add
out
cs
aam
sub
adc
add
bound
or
sbb
or
add
outsl
add
add
outsl
or
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
add
or
or
add
add
or
cmp
adc
or
xchg
push
int3
inc
and
fdivrl
inc
es
les
mov
xchg
icebp
repz
xorb
nop
push
popa
nop
jne
int3
mov
push
dec
adc
or
or
xor
or
outsl
sbb
add
add
outsl
add
add
outsl
add
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
fildl
add
add
bound
add
sbb
or
fs
aam
sub
test
lods
cmp
stos
cmp
pop
mov
enter
repz
ljmp
mov
xchg
push
fisttpll
out
ret
dec
frstor
mov
push
rclb
jbe
pop
xchg
repnz
jge
mulb
pushf
outsl
les
jl
testb
inc
and
jmp
jge
adc
daa
out
adc
inc
add
push
roll
aad
or
je
sub
and
inc
ret
ret
xor
dec
fnstcw
mov
mov
aad
shlb
testl
jecxz
negb
adc
xor
jmp
lret
mov
inc
mov
jecxz
jmp
inc
aam
dec
cmpsb
cmc
imul
sahf
or
cmpsb
and
add
sahf
push
daa
movsb
cmp
inc
lock
xorl
cmp
dec
into
pop
cmp
sub
fiaddl
push
jno
jne
ret
push
lds
rcrb
test
fidivrl
shll
fdivrl
cmp
or
mov
jnp
gs
aas
xchg
cltd
clc
or
adc
sbb
inc
adc
out
in
jle
jno
jne
out
pop
hlt
popa
icebp
nop
arpl
clc
insb
loop
je
outsb
stc
imul
sub
jns
or
pop
int
addr16
pop
rclb
sub
inc
sub
pop
sbb
sub
push
rolb
sarb
or
jne
push
cld
sbb
lret
mov
iret
add
jbe
insb
or
loop
or
adc
rolb
rolb
jo
xchg
cmc
add
pop
fisttpl
fnstsw
xor
sub
add
xor
add
dec
add
add
outsl
or
adc
add
add
mov
jmp
clc
dec
mov
lcall
shlb
lds
adc
add
mov
xchg
add
mov
mov
push
lds
lds
add
xor
and
das
fidivrl
mov
mov
cltd
or
jno
inc
shll
and
xchg
test
pop
jecxz
push
in
rclb
mov
cmc
pushf
outsl
mov
xchg
or
bound
mov
dec
mov
xorl
lea
jne
out
push
ljmp
fstpt
sbb
fwait
sbb
leave
pop
cmp
sbb
icebp
cmp
sub
mov
mov
inc
aad
dec
in
mov
ljmp
fwait
jbe
dec
fisttps
fsts
fisttpl
fnsave
cmp
mov
jle
sub
sti
imul
cmp
xchg
jb
insl
in
jnp
mov
movsl
cmp
mov
lods
sub
and
xor
std
jl
iret
jecxz
add
or
add
insl
add
sti
or
jmp
je
and
mov
add
mov
or
jmp
stos
pop
mov
cwtl
pushf
adc
lods
cmp
and
pop
xchg
adc
shrb
dec
sub
push
popf
or
in
mov
sub
sub
loope
sbb
xchg
mov
and
shlb
int
lods
and
pop
mov
rcl
dec
fistpll
loop
je
and
test
mov
pop
leave
test
mov
fisttps
flds
dec
int3
inc
and
out
mov
xchg
pop
xchg
adc
loopw
pop
loop
in
cld
fwait
jbe
push
jecxz
push
in
pushl
mov
fcoms
mov
adc
mov
or
adc
push
mov
fwait
decb
xorl
hlt
inc
mov
xchg
clc
push
mov
mov
jle
mov
popa
stos
rol
jbe
dec
hlt
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
lods
sub
cmp
push
xor
dec
sub
add
pop
cmp
cmpsl
ret
or
addl
repz
out
mov
fcoml
lods
pop
mov
mov
inc
mov
mov
rolb
shlb
xlat
inc
and
or
imul
clc
lahf
push
mov
mov
mov
inc
mov
pop
loop
leave
pop
into
test
or
scas
cmp
mov
mov
addb
push
lret
lret
inc
xlat
mov
lods
ret
pop
leave
test
mov
sti
imul
adc
mov
movsb
ret
ds
dec
test
flds
push
aaa
ret
pop
xchg
adc
rolb
dec
mov
mov
bnd
cmpl
aaa
cmpsl
ret
out
loop
je
dec
les
int3
fstpl
scas
pop
mov
int
mov
adc
add
mov
fwait
push
adc
add
mov
mov
inc
mov
leave
dec
fstpt
fdivrl
int
addr16
jge
je
sub
adc
in
sbb
add
cs
mov
mov
sbb
push
adc
outsl
sub
sub
outsl
or
outsl
sbb
outsl
adc
sbb
out
loopne
jb
fiaddl
mov
adc
fidivrs
jge
negl
fiaddl
mov
test
inc
fildl
dec
lret
loope
icebp
nop
arpl
hlt
sbb
pop
iret
stos
pop
popl
push
xor
sub
lods
cmp
std
insl
hlt
pop
rcrb
cltd
or
insb
mov
and
sti
jne
insl
hlt
pop
divb
mov
cmpsb
xor
scas
dec
jne
mov
hlt
jp
jp
hlt
jns
mov
mov
es
mov
mov
sbb
das
test
lcall
cli
popf
insb
lds
mov
sti
imul
push
xlat
inc
shll
lcall
outsl
xor
add
add
outsl
add
add
outsl
or
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
add
add
add
add
add
add
test
or
bound
add
mov
mov
and
call
xorb
sub
dec
fnstcw
pop
jb
or
and
ss
inc
mov
lret
out
mov
push
popf
or
lea
out
adc
cmp
je
out
sbb
xchg
mov
movsb
cmp
pop
in
cld
fwait
jbe
mov
xchg
repz
ljmp
xor
push
lds
fwait
decb
cmp
or
imul
xor
ljmp
bound
or
and
mov
test
adc
add
add
fwait
or
cmp
jle
mov
cmpsb
push
cli
adc
fmuls
mov
in
mov
mov
ljmp
out
jns
mov
test
repnz
dec
cmp
inc
insb
sti
imul
adc
cs
xor
es
and
mov
or
jmp
insl
or
jmp
mov
or
jmp
lds
rcll
cmpsl
push
mov
shrb
repz
cmc
push
xchg
adc
es
cs
mov
mov
sbb
push
lahf
push
push
fimuls
add
or
in
lock
orb
sti
push
mov
je
lea
in
sbb
adc
es
mov
and
push
idivb
cltd
int
repnz
fs
lds
iret
jl
hlt
push
cld
push
jne
ja
loope
push
xchg
add
ss
push
lret
lahf
nop
or
mov
cs
dec
mov
loope
xchg
cmp
and
mov
fsubrs
shrl
pop
ljmp
and
movsl
pop
cmp
insl
or
mov
les
pop
cmp
cmp
jns
mov
inc
lret
lret
divl
imul
push
cld
jmp
sub
add
and
cld
call
jnp
add
add
jmp
loop
notb
push
call
jg
add
add
jmp
cmp
loopne
dec
adc
add
add
xor
add
dec
add
add
outsl
or
adc
add
add
xor
add
mov
outsl
or
mov
je
adc
int3
popf
cmp
jmp
into
dec
fdivrl
jmp
iret
dec
fdivrl
int
jl
add
call
call
jmp
pushf
sbb
imul
cld
push
call
jmp
xchg
xchg
repnz
in
outsl
lcall
dec
adc
or
or
xor
or
add
mov
jo
adc
int3
popf
fstps
add
mov
enter
push
call
pushf
push
test
push
in
outsb
jmp
push
in
or
jne
out
or
mov
mov
arpl
adc
add
mov
lcall
sub
cld
push
pushw
add
call
mov
lods
mov
loop
movsl
xor
fistpl
data16
push
call
jl
addr16
pop
bt
push
movsl
adc
fnsave
stos
outsl
mov
arpl
adc
xlat
inc
aad
dec
cld
rolb
mov
call
mov
repz
add
call
out
jg
mov
xchg
add
mov
or
punpckhdq
sub
call
sbb
cmc
gs
pop
xchg
mov
es
mov
xchg
adc
arpl
add
call
mov
and
xchg
inc
fisttpll
out
jns
imul
add
jl
jmp
mov
lods
ss
jecxz
mov
mov
jns
jmp
bnd
lea
adcl
adc
ds
mov
rolb
sti
add
repz
pushf
jmp
out
std
test
mov
mov
sub
pusha
popf
jmp
sahf
adc
mov
scas
lret
jmp
cli
popf
insb
mov
fisubrs
push
cld
ljmp
bound
add
and
mov
jne
adc
add
add
jg
jmp
mov
xchg
jmp
loopne
loopne
jb
jge
jl
negb
roll
shll
popa
mov
xor
outsl
sub
outsl
add
outsl
sbb
outsl
adc
dec
dec
ds
jmp
shrb
jmp
les
scas
pop
repnz
test
and
mov
test
push
jmp
pushl
mov
jmp
in
out
jno
xor
enter
or
mov
xchg
adc
je
popa
sbb
jmp
cmp
fisubrl
add
jo
jmp
lods
movsb
ret
faddl
cwtl
push
imul
mov
dec
mov
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
filds
mov
enter
inc
adc
mov
lods
cmpsb
and
das
lds
jnp
in
add
mov
add
scas
jmp
mov
jmp
icebp
jo
xorl
in
sarb
cltd
jnp
sbb
or
add
insl
push
sub
add
add
add
outsl
add
add
outsl
or
push
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
pop
outsl
adc
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
push
js
adc
add
and
jne
test
dec
cmp
jmp
addl
jmp
mov
lods
and
nop
sbb
inc
stos
dec
and
jmp
cmc
adcl
test
and
jne
jmp
inc
roll
aad
aad
enter
fwait
adc
or
mov
sbb
adc
add
mov
jp
adc
loopne
rolb
add
jmp
adc
popl
jmp
jo
jo
loop
or
mov
mov
inc
popa
jmp
mov
mov
and
int3
popf
push
rcll
push
dec
sti
push
xchg
mov
ret
fwait
adc
or
mov
add
cmp
je
jmp
nop
add
sbb
sahf
lea
jmp
dec
fisttps
flds
mov
jg
dec
fildl
mov
mov
andl
jae
and
jmp
stc
imul
mov
and
and
push
push
add
jmp
cmp
daa
in
fimull
leave
inc
push
xor
daa
add
sbb
fs
fcompl
addr16
mov
add
mov
or
jmp
pop
lea
cmpl
jmp
lea
jmp
push
shlb
cmpl
push
xchg
repz
std
add
sbb
cmp
shr
adc
add
fnstcw
iret
les
mov
cmpsl
sahf
adc
add
push
mov
test
je
mov
jmp
add
icebp
adcl
test
scas
cmp
mov
mov
addb
mov
js
add
inc
and
call
push
mov
jmp
xor
adc
push
rcll
jo
xchg
call
pop
mov
call
jmp
adc
fs
pop
repnz
cmpsb
aaa
cmpsl
ret
sub
push
adc
adc
xor
add
lea
jmp
lcall
xor
int
fwait
out
je
lea
add
or
or
ljmp
bound
or
and
mov
jge
adc
add
add
rolb
lahf
punpckhdq
dec
mov
andb
add
sar
call
xchg
add
adc
push
ret
cmpsb
push
aam
mov
ljmp
outsl
sbb
add
or
outsl
or
add
outsl
add
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
sbb
add
add
add
add
add
add
scas
jno
adc
add
dec
into
pop
cmp
les
dec
movsb
movl
hlt
push
cld
add
and
add
add
inc
dec
int3
inc
and
xor
scas
pop
push
push
jmp
outsl
ljmp
das
dec
mov
fldcw
lret
or
jle
sbb
pop
dec
cld
lcall
shlb
pop
jmp
xchg
hlt
sbb
and
push
jne
jmp
or
repz
test
mov
inc
mov
push
je
out
sub
pop
jmp
scas
jmp
pop
fisttpl
fnstsw
popf
in
mov
dec
in
mov
pop
xchg
dec
add
add
add
insl
add
mov
orl
jne
xchg
out
subb
adc
xor
jmp
pop
xchg
push
sub
add
outsl
xor
add
outsl
sbb
or
add
outsl
add
add
outsl
or
adc
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
xchg
adc
or
lahf
std
pop
lea
call
push
lea
call
jmp
inc
mov
jmp
cwtl
setg
or
pop
sbb
imul
jge
std
xor
adc
fistpl
inc
fsts
cmpsb
push
in
jno
xorb
sbb
sub
ret
sub
add
fdivr
jmp
sub
push
rorl
mov
dec
sub
pop
pop
adcb
addb
jp
test
push
add
push
jmp
cmp
int3
dec
frstor
jae
dec
leave
pop
cmp
sub
adc
jmp
nop
push
test
push
loopne
es
cs
mov
mov
pop
sbb
dec
hlt
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
xchg
xchg
push
movsl
adc
add
cmp
jl
negb
jp
add
add
mov
mov
outsb
mov
add
jmp
cmp
push
sbb
push
inc
jmp
push
jmp
xchg
fists
xor
fisubrl
out
push
adcl
pop
int3
stos
data16
sub
add
jmp
int3
pop
int
addr16
push
lret
pop
ds
cmc
fimull
add
jmp
pop
enter
popa
lds
mov
cmp
add
mov
jns
adc
push
mov
xor
add
add
add
add
add
or
push
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
adc
or
cmpsl
xor
gs
pushf
outsl
scas
sbbb
call
daa
inc
mov
aaa
out
cli
test
incl
jne
mov
mov
jmp
adc
jmp
loope
out
mov
sbb
push
sub
sbb
fucomip
aaa
mov
mov
add
add
cmp
gs
pushf
outsl
ljmp
jecxz
notl
push
mov
lea
call
jmp
jg
inc
addr16
jmp
cmpsl
mov
jmp
rcll
cmpsb
sbb
and
add
xorb
and
add
sbb
dec
mov
pushf
sti
push
mov
mov
xor
lods
testl
and
adc
jmp
add
js
cmp
jmp
mov
jmp
movl
push
les
inc
and
and
sbb
add
bound
add
outsl
sbb
add
or
outsl
or
add
outsl
add
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
sbb
add
outsl
add
sbb
add
add
lea
add
add
mov
add
jmp
jmp
push
adcl
or
in
out
xchg
mov
add
add
push
push
fmuls
fdivrs
cmp
cmp
dec
js
fs
pop
sbb
jl
adc
add
mov
xchg
or
jmp
test
mov
cld
aas
xchg
arpl
or
sbb
aaa
insb
insb
or
mov
std
push
ret
push
dec
inc
jmp
push
xchg
add
cmp
dec
fstpt
aam
dec
out
push
aad
in
mov
mov
mov
fs
popf
insb
lds
movsl
xor
mov
js
dec
add
or
add
insl
add
mov
out
jns
mov
mov
sub
adc
xor
jmp
pop
sbbb
call
or
cmpsb
dec
push
push
jmp
pop
push
imul
icebp
nop
arpl
cmp
pop
into
test
cmp
gs
jb
lea
call
lea
jmp
gs
lea
call
pop
mov
call
mov
jmp
xor
roll
inc
cmpsl
divb
mov
fstps
xchg
addr16
sbb
add
xlat
inc
cld
lcall
shr
inc
and
add
cmpsl
add
add
pop
cmp
pop
add
push
jno
jne
hlt
push
cld
adc
iret
call
filds
inc
es
in
gs
pushf
outsl
vphadduwq
ljmp
cmpsb
push
jmp
movsl
sub
lods
and
pusha
outsl
loope
adc
and
mov
pop
aaa
mov
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
das
ret
push
lds
jo
xchg
nop
mov
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
pop
test
jge
and
add
xor
jmp
out
in
jg
add
xor
sarl
js,pn
adc
jmp
std
push
lahf
push
mov
mov
and
or
jmp
jmp
sar
xor
jmp
lea
jmp
rcrl
pop
lcall
je
bound
jne
mov
mov
push
push
jmp
adc
jo
jl
divb
sbb
jmp
std
cmp
pusha
sub
adc
inc
add
add
mov
jmp
lcall
sub
lret
pop
ds
cwtl
mov
orb
jmp
jno
adc
jmp
add
dec
hlt
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
jle
popf
sbb
sti
imul
sub
or
mov
orb
jmp
mov
adc
rcrb
lret
mov
mov
mov
push
lea
call
jmp
mov
jmp
fistps
test
lods
sub
aas
pop
test
add
add
lock
bound
fcomip
push
jmp
cmp
ficoml
mov
push
aaa
ret
inc
shll
roll
sti
orb
jmp
jge
add
add
add
insl
add
mov
or
jmp
mov
cmc
pop
pop
mov
pop
ret
jmp
jo
xchg
testb
sarb
jmp
mov
addb
add
pop
into
test
and
call
enter
jns
xchg
inc
jmp
pop
mov
jns
and
push
jno
aaa
xchg
push
xchg
repz
test
xor
cld
lcall
shr
repnz
jmp
enter
jmp
jo
js
ljmp
sub
add
jmp
adc
xchg
or
xchg
jecxz
mov
cmp
jle
insb
pop
xchg
jmp
pushl
jmp
jb
arpl
cmc
je
ret
push
lds
stos
sub
test
jge
fs
cmp
pushf
clc
push
adc
outsl
sub
sub
outsl
add
sbb
sbb
outsl
adc
insb
repz
cmc
push
push
ss
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
sahf
pushf
popf
jmp
les
add
add
jmp
push
rolb
shrb
inc
push
xor
sbb
outsl
xor
ljmp
bound
add
and
mov
or
jmp
add
add
push
scas
jo
jmp
icebp
jnp
mov
lods
sub
arpl
xchg
gs
mov
xor
mov
mov
andb
sub
jmp
repnz
repz
mov
jmp
mov
lods
lret
inc
mov
gs
ret
movsl
push
rep
mov
sar
inc
adc
mov
xor
loop
xchg
jmp
mov
jmp
adc
cltd
add
call
out
jl
mulb
lea
xchg
repnz
sbb
aas
jmp
xor
mulb
push
ret
cmpsl
push
jecxz
in
sbb
ds
jmp
jno
cmpl
add
jmp
std
imul
dec
fdivrl
jmp
jge
imul
jg
outsl
xor
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
sbb
add
outsl
or
sbb
or
add
lea
or
add
mov
mov
adc
or
sti
outsb
cld
fwait
jbe
aam
fdivrl
sarb
movzbl
jmp
lds
stos
data16
xchg
xchg
out
clc
lea
add
addb
add
dec
adc
push
aas
scas
lret
mov
xchg
js
cmp
adc
xor
jmp
add
jmp
cltd
push
jmp
pop
fimull
fidivl
aas
mov
out
notl
popl
jmp
cmpsl
aaa
push
mov
jmp
mov
cwtl
decl
mov
scas
pop
rolb
shlb
jge
fs
sbb
bswap
je
popa
mov
jmp
rorb
dec
lods
ficoms
lods
pop
scas
mov
xchg
out
jg
jmp
ja
fs
jmp
insb
loopne
adc
and
pop
enter
aam
aam
dec
clc
dec
dec
mov
push
push
push
xor
push
cmp
jmp
inc
inc
xchg
mov
jmp
pop
enter
popa
adc
aas
scas
cmp
mov
ljmp
or
add
sbb
cmp
popf
pop
int3
inc
and
or
add
mov
jno
adc
jmp
add
jns
jmp
popa
xor
mov
jmp
inc
fisttps
fldenv
mov
dec
mov
mov
movsl
lods
cmp
and
add
bound
add
sbb
or
add
add
add
add
or
adc
add
add
add
add
add
adc
add
add
add
push
ljmp
add
add
add
add
adc
add
adc
add
add
sbb
add
outsl
add
sbb
add
add
lea
add
add
mov
add
jmp
lock
jmp
mov
and
xchg
xor
sub
hlt
cmp
insl
dec
outsl
xor
add
add
outsl
or
sbb
or
bound
or
add
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
or
pop
dec
sbb
add
or
or
add
add
or
mov
or
bound
or
jg
push
push
push
push
push
push
pushl
call
jmp
cmp
add
jmp
lea
pushf
sti
push
xchg
pop
xchg
adc
cmpsl
and
and
mov
cmp
jne
push
pop
jmp
test
std
or
mov
sahf
stc
or
xchg
adc
in
bound
sbb
mov
fidivl
ret
dec
fistpll
xor
inc
fwait
adc
pop
jmp
pop
sahf
or
cmpsb
push
fists
mov
lods
lret
inc
xchg
mov
fwait
decb
testl
sub
sub
outsl
add
sbb
sbb
outsl
adc
mov
add
add
push
lret
sti
into
pop
repnz
rclb
xchg
jb
es
lret
lret
or
push
cld
ljmp
bound
add
and
mov
xchg
adc
add
add
addr16
push
jns
jge
testl
inc
cmp
mov
push
adc
outsl
sub
sub
outsl
add
outsl
sbb
outsl
adc
lret
stos
shl
orb
mov
add
push
cld
ljmp
bound
or
and
jmp
pop
std
or
scas
outsl
and
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
aas
movsb
cmp
dec
cmc
push
push
call
mov
push
push
pushl
call
jmp
xchg
push
pushf
sti
push
cld
adc
push
or
inc
sbbb
ljmp
mov
jne
jmp
pushl
jmp
js
je
out
imul
or
mov
dec
sub
or
push
mov
mov
push
mov
jmp
xlat
mov
push
call
cmp
jne
cmp
jmp
mov
mov
jae
xchg
test
sbb
push
jmp
call
jmp
ficompl
test
mov
fsubs
outsb
out
jg
jmp
inc
mov
jmp
jmp
rclb
lods
pop
mov
jmp
jmp
mov
jmp
dec
push
xor
cmp
mull
icebp
sbb
mov
xchg
cmp
ficoms
jmp
jbe
dec
rclb
cmpsl
aaa
push
mov
xlat
and
cld
pop
jmp
rcrl
fs
adc
ss
cmp
add
mov
inc
mov
push
add
mov
mov
idiv
mov
lcall
inc
or
andb
sub
jmp
icebp
gs
pushf
outsl
push
ret
cmpsb
push
cli
cmp
cs
and
jmp
sub
divl
jmp
adc
stos
xor
lds
iret
daa
setbe
sahf
jbe
jo
inc
and
popf
pushl
mov
jmp
out
out
mov
jp
jnp
in
insb
imul
ds
sar
inc
adc
mov
add
jmp
push
aad
sub
xor
out
nop
pop
xchg
adc
jg
outsl
or
stc
enter
cmp
xlat
add
jmp
ret
inc
fidivrl
inc
and
mov
jecxz
jmp
inc
int
and
or
out
std
test
les
scas
lret
leave
ret
jmp
mov
fisubrl
mov
jbe
loopne
ret
dec
frstor
mov
jmp
adc
in
in
jg
jae
xchg
and
flds
add
jmp
dec
jecxz
push
in
mov
mov
icebp
popa
add
inc
mov
mov
and
jne
jmp
jno
movzbl
jmp
es
and
lock
jns
lods
add
add
jne
mov
jno
jp
in
dec
std
gs
pushf
outsl
scas
mov
jnp
call
mov
sub
movsl
push
popl
jmp
test
add
mov
mov
rolb
sarb
jmp
xchg
outsb
xchg
pop
loope
mov
cld
fwait
jbe
roll
inc
stos
sbb
test
ret
aad
fnstcw
jmp
xor
mov
jmp
push
int
and
push
pop
fimull
ficoml
and
xor
andb
fs
jmp
in
sti
sahf
insl
addl
int
stc
jge
je
jnp
pop
cmp
jmp
mov
xchg
mov
movsl
int3
aas
enter
ss
call
sbb
xchg
sbb
xor
mov
sarb
jmp
xor
clc
push
call
dec
lret
pop
ds
jl
pusha
pop
repnz
test
mov
das
stc
sub
or
sub
adc
xor
call
mov
jmp
jmp
sti
jne
mov
mov
scas
lret
push
ret
jmp
cmpsb
test
push
call
cmp
cmp
mov
repnz
lds
scas
pop
ljmp
add
inc
mov
adc
jmp
push
test
lods
lret
inc
mull
cltd
mov
rcll
icebp
mov
or
dec
dec
sub
cwtl
add
bound
add
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
mov
or
jmp
add
lret
stos
sarw
outsl
xor
add
or
or
or
add
outsl
add
add
outsl
add
add
add
outsl
or
add
sbb
adc
xor
jmp
inc
in
mov
add
add
sbb
add
add
outsl
add
sbb
add
bound
or
add
add
add
outsl
add
sbb
add
adc
add
outsl
add
push
ljmp
add
outsl
add
sbb
add
bound
add
adc
add
pop
dec
sbb
add
outsl
add
sbb
add
add
lea
add
add
mov
mov
add
sbb
mov
shrb
test
mov
and
lods
lret
inc
lods
adc
inc
push
pushf
jmp
call
add
jmp
pop
ret
ret
dec
fidivrs
mov
les
int3
add
add
add
jmp
movl
std
test
adc
or
jle
in
movsl
sub
jmp
movsb
and
mov
add
push
jno
jne
fdivl
in
int3
icebp
les
add
rcrl
jle
gs
pusha
jmp
mov
xchg
icebp
add
jo
imul
test
cmp
inc
movl
and
jmp
xchg
sbb
jb
xchg
stos
sub
insl
hlt
pop
icebp
mov
mov
andb
sub
jmp
xchg
lods
xchg
pop
mov
jmp
xchg
sbb
or
repnz
pop
repnz
mov
mov
ret
pop
xchg
or
xor
les
int3
inc
and
stos
int
lea
lods
popa
jmp
lea
mov
sbb
bnd
stc
jae
xchg
dec
fdivl
in
adc
aam
frstor
or
jp
ljmp
xor
jmp
icebp
jne
jmp
jno
jg
jmp
mov
faddl
mov
lds
ret
iret
scas
dec
outsl
sbb
cld
ljmp
bound
add
and
jmp
pop
int
ret
jmp
sbb
push
cld
cld
addl
jmp
xor
push
push
rolb
sarb
pop
fimuls
add
mov
xor
or
add
outsl
add
add
or
add
or
sbb
or
add
add
add
add
mov
or
jmp
mov
test
jmp
mov
jmp
mov
cwtl
decl
hlt
xchg
adc
sub
leave
mov
movzbl
add
cmp
jmp
pop
jecxz
push
in
push
ret
cmpsb
push
mov
pop
mov
dec
jmp
popl
lea
jmp
das
mov
dec
mov
mov
hlt
push
lahf
push
sbb
push
mov
sub
push
xor
jmp
lea
fwait
decb
mov
inc
and
inc
sub
or
push
jmp
cmp
jmp
xor
mov
lods
mov
loop
pop
int
roll
mov
jmp
xlat
inc
fidivrl
push
cmp
jl
adcl
and
and
add
add
add
or
outsl
or
add
outsl
add
push
adc
add
add
outsl
or
sbb
or
adc
or
outsl
or
push
ljmp
add
outsl
or
sbb
or
bound
or
adc
add
outsl
add
and
adc
call
aaa
xor
push
or
popf
mov
add
test
jecxz
ret
push
lds
sub
out
pop
ret
mov
push
add
xor
pushl
clc
add
add
js
mov
sub
imul
insl
mov
add
add
push
cld
ljmp
bound
add
and
jmp
ljmp
bound
add
and
jmp
xor
out
jbe
cmpl
push
mov
ret
rorl
decl
xchg
call
jmp
ss
dec
mov
push
mov
js
popa
int3
ret
push
int
push
push
pushl
call
mov
jmp
sub
pop
jmp
mov
jmp
jmp
fcomps
stos
cbtw
in
imul
lret
pop
ds
or
push
mov
mov
jmp
dec
outsl
je
shr
mov
jmp
bound
enter
sbb
add
add
or
push
pushf
xor
push
out
jg
jmp
jle
outsl
cwtl
mov
jmp
jmp
xchg
jge
scas
mov
jmp
sub
jmp
pop
inc
and
jns
roll
roll
ret
xor
ror
push
sahf
or
jmp
mov
inc
aad
dec
sti
pusha
icebp
popa
add
pop
jmp
jmp
fs
jmp
inc
fisttpl
adc
in
sbb
push
rclb
jno
repnz
jb
lea
call
pushl
jmp
pop
jmp
fisubrl
aam
jge
add
pop
into
pop
cmp
jg
fimull
fisubrl
pop
iret
stos
pop
rolb
sbb
adc
mov
jmp
add
int3
push
lds
inc
mov
lahf
inc
inc
subb
std
ljmp
bound
or
sub
xor
dec
dec
sbb
sahf
mov
call
mov
push
add
jmp
imul
mov
ret
jmp
jge
cmpsl
sub
shr
daa
cld
jmp
cmp
aaa
mov
dec
mov
je
pusha
mov
sbb
dec
ljmp
or
ljmp
bound
or
and
jmp
xchg
outsl
sub
and
cmp
push
lds
xor
dec
cmp
xor
ljmp
bound
or
and
jmp
sub
adc
xor
jmp
xor
std
jbe
cmpl
dec
fistpll
and
inc
jae
pop
test
jne
mov
push
lea
jmp
inc
int3
inc
and
and
mov
push
pushl
push
push
call
push
lea
jmp
xchg
and
xchg
xor
call
jmp
call
jmp
mov
xchg
repz
test
icebp
dec
adcl
sub
mov
pop
adc
adc
into
into
pop
int3
stos
data16
cwtl
setg
or
je
jmp
cmp
jmp
mov
xchg
jne
mov
lcall
cmp
dec
push
jmp
jae
lea
jmp
inc
xlat
inc
and
js
mov
popf
push
xchg
repz
in
ret
scas
pop
mov
dec
jmp
xor
ljmp
bound
or
and
mov
xchg
or
jmp
add
add
rcrb
jmp
push
leave
pop
cmp
and
shl
lcall
outsb
or
xor
xlat
mov
add
mov
ja
lea
jmp
outsl
in
bound
sub
push
inc
les
int3
sub
mov
jmp
sub
je
jmp
or
push
jmp
test
xor
jmp
jmp
jecxz
jne
dec
enter
pop
mov
fidivrs
lea
leave
jmp
jp
call
jmp
call
jmp
jge
outsb
or
adc
mov
fdivrl
lds
clc
std
ljmp
bound
add
xor
jmp
stos
or
jmp
adc
xchg
outsl
xor
add
add
adc
xor
jmp
in
bsf
stos
into
cmp
pop
test
add
mov
dec
sub
mov
mov
neg
mov
inc
cmp
jmp
mov
fwait
decb
jg
dec
cwtl
fstpl
subb
adc
jg
add
cmp
jmp
xchg
pop
imul
or
mov
popa
icebp
nop
arpl
add
std
jl
lea
push
call
cmp
je
push
call
jmp
lods
mov
jmp
xchg
add
inc
aad
dec
cld
jae
jp
in
inc
cmp
loopne
sub
lcall
dec
lock
jo
jp
in
pop
pop
enter
outsl
lods
xor
out
lds
mov
jmp
mov
jmp
or
adc
gs
pushf
outsl
test
ja
loope
jbe
outsl
cltd
or
dec
insb
sub
or
xor
or
outsl
xor
outsl
sub
outsl
or
outsl
sbb
outsl
adc
mov
or
jmp
or
inc
add
xchg
add
jmp
cmp
xor
add
leave
dec
fnstcw
fnstcw
and
sti
fcomps
stos
pop
adcb
push
cld
ljmp
bound
add
and
mov
test
adc
add
add
insl
std
test
lods
sub
mov
inc
mov
aam
mov
notl
enter
cmpsb
xor
cmc
gs
sbb
ja
xorb
js
mov
cltd
push
test
push
lret
xor
adcb
andb
sub
lds
push
xchg
add
cmp
add
xchg
inc
rolb
shlb
pushf
xor
or
out
pop
and
pop
xlat
ljmp
add
push
outsl
xor
ljmp
bound
add
and
jmp
sub
sbb
sub
jne
mov
fstps
stos
data16
aad
sub
sub
pop
and
cmp
inc
add
pushf
stc
fimull
mov
jmp
inc
int
and
es
iret
pop
cmp
xor
loopne
aad
int3
pop
fisttpl
outsl
xor
outsl
sub
outsl
add
sbb
sbb
outsl
adc
add
add
hlt
and
lea
ljmp
stc
mov
cmpl
outsl
out
jle
mov
xchg
or
js
jge
negl
xor
repnz
pop
repnz
rep
lcall
dec
das
fidivrl
mov
insl
hlt
push
cld
adc
push
pushf
sti
push
xchg
xchg
cmpsl
sub
into
pop
cmp
ds
mov
sti
imul
push
jl
add
add
push
xor
cmp
push
or
add
lods
push
cld
ljmp
bound
add
and
jmp
xor
cmpsl
jno
mov
mov
jmp
jne
outsl
or
lds
mov
mov
and
mov
jns
or
outsl
xor
outsl
sub
outsl
or
sbb
sbb
outsl
adc
mov
stos
or
jmp
test
mov
xchg
mov
mov
push
mov
and
pop
aaa
scas
cmp
mov
lods
xor
push
test
push
cltd
lds
mov
add
jp
lret
pop
ds
push
rolb
shlb
pop
fisttpll
out
sub
or
jp
repz
mov
aaa
mov
les
push
mov
test
push
lret
sti
jg
add
and
mov
jne
outsb
or
pop
imul
add
add
lcall
sbb
add
mov
mov
add
mov
mov
add
jmp
adc
cmp
jmp
fimull
mov
notb
mov
add
popf
or
ljmp
stc
mov
sbb
pusha
stos
das
mov
jmp
test
mov
je
jmp
fwait
add
inc
aam
dec
movsb
and
rorl
lcall
add
mov
fldl
mov
jg
jbe
loopne
das
call
push
adc
outsl
sub
sub
outsl
or
sbb
sbb
outsl
adc
mov
inc
add
pop
inc
fidivrl
cwtl
xor
add
jmp
mov
jmp
in
bound
test
pop
cmc
cwtl
lcall
push
add
call
cmp
je
jmp
call
jmp
movsb
sub
cmp
mov
in
cmp
jne
cmp
jmp
in
notb
out
jno
adc
push
scas
cmp
jmp
mov
scas
lret
sbb
lods
and
les
mov
push
call
jmp
lcall
xchg
push
sbb
xchg
cmp
jne
cmp
jmp
sbb
pop
mov
jmp
mov
test
sbb
push
test
push
test
jnp
add
add
cwtl
sub
add
jmp
scas
cmp
stos
cmp
test
pop
test
pop
pop
push
adc
mov
jmp
push
je
jmp
adc
adc
sub
jg
jmp
cmpsb
push
hlt
lods
and
mov
xor
jmp
fxch
call
jmp
push
jmp
fs
js
push
adc
sub
js
mov
ret
stos
pop
test
sahf
or
cmpsb
dec
cli
popa
icebp
nop
arpl
lock
jmp
scas
aaa
cmpsl
ret
mov
jmp
push
pop
jp
adc
adcl
in
sbb
add
push
negb
mov
push
jmp
adc
jns
loope
adc
pop
aas
mov
mov
mov
sub
jecxz
adc
cmp
je
push
call
jmp
loopne
inc
loope
lea
call
push
call
mov
jmp
mov
ret
lcall
jmp
sub
pop
repnz
fs
jne
insb
or
in
or
add
jmp
xchg
add
add
add
outsb
or
sbb
out
jl
testb
xsave
mov
and
int3
mov
mov
incl
call
cmp
je
jmp
xchg
mov
fimull
jmp
imul
sbb
das
mov
xchg
aam
aam
dec
clc
adc
push
cmp
cwtl
sub
add
jne
cmp
je
jmp
test
xchg
nop
add
mull
icebp
push
aaa
cmpsl
aaa
push
mov
je
jmp
mulb
xchg
popa
and
es
mov
xor
aaa
push
mov
xchg
popa
lods
pop
push
xor
add
add
test
aad
icebp
popa
add
sbb
push
fs
sbb
push
jmp
pop
push
xor
dec
ret
mov
mov
dec
sub
jno
mov
jmp
mov
rolb
xchg
jb
pop
inc
cmp
add
jmp
stc
cwtl
imul
std
jmp
pop
fstpt
pop
lret
scas
pop
movsl
in
imul
add
je
push
call
jmp
sub
ds
test
xor
jp
call
xchg
add
jp
sbb
aad
xlat
pushf
adc
mov
mov
jmp
jnp
popa
add
adc
pop
scas
outsb
loopne
adc
inc
jae
xchg
cmc
add
adc
jne
je
jmp
mov
test
cmp
repz
mov
or
dec
das
mov
sub
adc
jl
clc
outsb
or
push
xor
sbb
adcl
stos
mov
add
sbb
sbb
cmp
jnp
mov
repnz
pop
repnz
je
ja
loope
in
int
cld
jmp
pop
mov
jle
dec
test
adc
cmp
je
push
call
jmp
push
pusha
pop
repnz
dec
fdivrl
xchg
repnz
hlt
jae
bound
and
add
inc
xlat
mov
xchg
movsb
cmp
inc
push
aad
sub
xor
dec
addl
test
jmp
call
jmp
int
into
test
loopne
xor
jmp
movsb
int3
popf
mov
add
and
sub
movb
lahf
call
jmp
dec
fisttpl
fnstsw
int
lret
scas
pop
mov
mov
jmp
call
jmp
sub
or
jae
mov
jmp
jae
test
jmp
mov
add
mov
dec
fdivrs
jbe
cmp
je
mov
pushl
pushl
push
pushl
pushl
jmp
call
jmp
pop
fwait
or
push
xchg
sbb
add
das
pop
pushl
jmp
icebp
pushl
jmp
aaa
push
int3
popf
add
lret
jmp
push
aad
sub
xor
cmp
jmp
into
dec
fdivrl
jbe
jmp
popf
shlb
jmp
pushl
jmp
jmp
add
add
jmp
push
xchg
add
mov
pop
adc
mov
cld
decl
adc
adc
dec
add
add
fs
or
jmp
xlat
inc
sub
pop
jmp
mov
mov
sarb
inc
cli
jmp
out
filds
push
call
jmp
add
adc
call
jmp
sub
push
add
sub
jmp
es
popf
jns
loop
add
mov
pushf
sti
push
incb
sub
pop
leave
ret
jmp
adc
mov
jmp
mov
jmp
call
jmp
int3
popf
jmp
pop
fisttpl
fnstsw
or
add
aad
pushl
jmp
fcoml
pop
mov
add
jmp
jmp
xchg
loopne
adc
and
jmp
lds
mov
mov
jmp
add
pusha
sbb
popf
and
nop
dec
jmp
and
cmpsb
cli
jmp
push
cmp
add
add
jmp
mov
std
or
cmp
mov
mov
jmp
int3
popf
int
fidivrs
frstor
sldt
inc
leave
pop
cmp
outsb
dec
sub
dec
push
jmp
inc
mov
jmp
insl
xchg
jbe
popf
addl
add
push
push
xor
jns
scas
mov
dec
cmp
je
mov
pushl
pushl
push
pushl
jmp
mov
call
jmp
xor
lcall
std
ljmp
rorl
mov
add
int3
popf
cli
jnp
mov
sbb
aaa
leave
gs
stos
cmp
pop
push
jmp
sub
popf
sub
jle
adc
xor
out
in
jle
mov
add
jmp
and
mov
jmp
push
lret
pop
ds
dec
push
push
jmp
cld
imul
psubsb
add
add
cmc
sub
mov
and
rolb
add
jmp
popa
or
xor
jge
push
pop
push
mov
lea
mov
jmp
push
and
lcall
mov
jmp
mov
int3
popf
cmp
add
into
push
lret
lahf
xor
psubsb
adc
xor
jmp
mov
add
add
add
cs
xchg
pop
sbb
add
jmp
pop
lea
mov
in
mov
sub
jmp
repnz
inc
jmp
jb
jmp
xchg
ficoml
ds
call
jmp
in
adc
imul
sbb
push
xor
dec
test
inc
popa
jmp
decl
cmc
cmp
jmp
int
frstor
and
jmp
push
jg
jmp
lds
lods
xor
add
dec
fmull
movzbl
add
cmp
je
jmp
push
test
jmp
mov
cmpsb
shll
pop
xchg
add
fs
adc
xchg
cmpsb
xor
pop
jmp
test
mov
and
cmp
and
push
lret
mov
int3
aas
scas
cmp
call
jmp
scas
pop
jmp
or
es
xchg
pop
bound
pop
lods
imul
adc
cld
ljmp
lea
lea
jmp
sub
pop
sub
pop
iret
pop
cmp
jle
jp
jp
test
hlt
imul
insl
ret
pop
cmp
jns
jbe
repnz
mov
jmp
and
add
flds
mov
addb
test
add
add
ret
lea
call
pop
jmp
mov
int3
cmp
dec
mov
jmp
mov
jmp
sbb
sbbl
xor
and
stos
cld
lea
jmp
movb
inc
jmp
icebp
outsb
cld
fwait
jbe
push
and
mov
push
push
call
mov
call
jmp
push
or
orb
jmp
pop
test
sbb
cmpsl
daa
mov
and
xchg
pusha
or
jge
jmp
adc
dec
enter
cmp
call
test
add
lea
call
jmp
or
lcall
icebp
mov
jmp
les
push
mov
inc
aad
dec
mov
and
xor
addr16
pop
imul
or
jbe
lahf
inc
cmp
test
jne
mov
call
jmp
stos
call
jmp
mov
jmp
cmp
dec
fimuls
push
xorl
movzwl
lea
mov
call
jmp
xchg
add
lds
iret
jl
inc
shlb
add
push
call
jmp
and
fimull
push
in
jnp
mov
jle
cmp
jmp
or
mov
xchg
mov
and
inc
mov
jo
sti
mov
jmp
call
jmp
xor
adc
add
add
repz
into
pop
cmp
ds
fisttpll
out
fbld
inc
sub
ss
ljmp
add
jbe
mov
je
gs
adc
call
xchg
add
add
add
add
jmp
addr16
mov
jmp
inc
lea
jmp
lds
mov
stos
into
cmp
hlt
pop
sti
xchg
jge
xor
mov
jmp
jl
add
jmp
mov
stos
into
cmp
adc
adc
pop
cmp
and
out
push
cmp
je
lea
call
jmp
rorb
dec
stos
push
and
pop
movsb
lea
call
pop
jmp
pushl
jmp
inc
push
jmp
xchg
sbb
scas
and
sbb
pushw
std
push
jmp
clc
pushl
jmp
add
pushl
xorb
rolb
shlb
shll
mov
dec
fidivrs
dec
sub
dec
das
fisubrl
push
ret
cmpsb
push
cli
movsb
push
mov
call
pop
mov
call
push
lea
jmp
jns
and
jmp
lea
push
mov
push
lea
jmp
mov
push
jmp
xchg
js
call
jmp
mov
jmp
lods
cmp
push
mov
sbb
cmp
add
shl
fs
popf
insb
lret
in
push
pop
cmp
sub
adc
ret
arpl
xchg
mov
push
in
notl
cmpsl
arpl
mov
ret
mov
jmp
pop
int3
stos
data16
clc
push
jmp
add
mov
and
fwait
decb
push
mov
inc
push
jmp
fs
sbb
mov
sbb
js
insb
or
clc
adc
inc
xchg
test
push
pushl
push
push
mov
call
jmp
mov
mov
jns
mov
movsl
xchg
jmp
out
imul
insl
cwtl
scas
and
std
jnp
mov
int
and
call
mov
mov
mov
cmp
jmp
pop
sahf
or
cmpsb
push
mov
xchg
es
jmp
pop
push
jmp
jbe
adc
jmp
movsl
sub
lock
xor
pop
push
mov
xchg
jmp
xchg
add
dec
push
jmp
mov
mov
mov
xor
jmp
push
rcll
push
push
in
repz
cmc
pop
in
fs
cmp
jb
jmp
inc
lock
mov
jmp
xchg
or
ljmp
stc
scas
bound
lea
jmp
lock
popf
insb
xchg
mov
mov
or
je
mov
lea
andl
jmp
pop
les
xor
call
mov
mov
jmp
outsl
hlt
push
cld
push
or
mov
call
xor
mov
mov
mov
jmp
push
enter
and
outsb
outsb
hlt
inc
jmp
jl
jmp
cltd
add
jmp
push
in
insb
sub
mov
mov
in
neg
mov
jmp
ja
push
cld
adc
cwtl
mov
xor
cmp
jmp
jmp
out
mov
jmp
sub
and
pop
mov
sahf
stc
or
pop
jecxz
push
in
nop
adc
orb
call
pop
jmp
jns
rorb
dec
mov
pushl
call
pop
jmp
sbb
cli
ja
xorb
cli
push
sbb
sbb
mov
stc
jae
cmc
adc
icebp
popa
add
push
orb
rclb
add
mov
dec
mov
arpl
rcrb
pop
ret
jmp
movsb
cmp
sbb
xchg
jg
jge
testl
lcall
call
add
xchg
jmp
into
pushl
jmp
int3
arpl
xchg
gs
in
je
xor
cmpsl
aaa
push
mov
jmp
cmp
ljmp
lahf
push
int
lds
cwtl
add
ret
je
mov
add
call
jmp
lods
fcomip
xor
mov
jmp
icebp
outsl
lcall
std
test
add
or
sbb
sbb
les
test
fdivrp
jle
mov
xchg
popa
xchg
mov
inc
fildll
add
cmp
pushf
and
movsl
xor
xchg
pop
bound
aas
jmp
xchg
push
test
push
jmp
cmp
and
pusha
notb
popa
sbb
jmp
mov
int
roll
shll
jg
addr16
pop
jecxz
loop
je
dec
mov
jmp
jbe
push
xchg
or
cmp
jns
mov
mov
ret
movsl
scas
andb
sub
jo
mov
and
jmp
xor
inc
push
dec
cmp
je
popa
mov
jmp
outsb
add
lcall
imul
orl
shlb
sahf
stc
or
imul
xlat
inc
push
popl
jmp
cwtl
or
mov
mov
mov
pop
lret
test
add
addl
mov
movzbl
jmp
mov
mov
pusha
xchg
ds
lea
mov
call
push
mov
lea
call
jmp
jmp
nop
cmp
mov
mov
sbb
cld
mov
pop
jmp
push
out
xor
imul
dec
nop
sub
jmp
xchg
setg
or
mov
loop
rcll
mov
push
mov
sub
push
mov
push
push
mov
jmp
and
pop
addb
dec
in
jmp
daa
movsl
xor
jle
mov
sub
movl
jmp
ss
inc
mov
in
push
lahf
push
into
dec
fdivrs
lea
jmp
push
adcl
int
and
ficoml
mov
mov
mov
jmp
stos
and
js
mov
jmp
scas
xor
jmp
push
fdivl
in
mov
xchg
repz
fisubrl
ja
loope
or
daa
fbld
sar
inc
adc
movzbl
jmp
cmp
jmp
add
jmp
fmull
mov
js
ljmp
lods
imul
psubd
lea
stos
jmp
mull
icebp
dec
fs
mov
adcb
xor
pop
xchg
adc
cmp
mov
inc
decl
jne
xor
xor
xor
jmp
push
ret
cmpsb
push
mov
aaa
xlat
push
add
add
adc
mov
push
lea
jmp
movzbl
jmp
sbb
jbe
jge
negl
outsb
jmp
or
dec
or
lcall
mov
jnp
ret
sub
pop
jmp
orb
mov
pop
adc
sbb
rcll
scas
xor
mov
inc
mov
dec
mov
adc
icebp
jmp
xor
imul
pop
jp
jb
dec
fdivrl
mov
das
mov
or
call
decl
add
jmp
dec
pop
jmp
mov
stos
repnz
dec
cmp
jmp
rcll
mov
add
lret
inc
xlat
mov
mov
push
mov
add
es
mov
inc
dec
jne
pop
movl
lea
jmp
iret
inc
xlat
mov
call
test
dec
push
xor
or
mov
sub
add
jmp
loope
loop
je
or
test
adc
push
xchg
jmp
setge
loopne
adc
dec
add
push
lahf
punpckhdq
in
out
mov
jle
mov
xchg
aam
fdivrl
push
xor
and
or
add
add
movb
inc
jmp
pop
pop
sub
jno
inc
or
daa
mov
jmp
call
lcall
sbb
seto
popa
nop
pop
stos
pusha
jmp
add
dec
adc
aam
inc
shlb
xchg
icebp
add
mov
stos
into
cmp
test
pushl
mov
jmp
jp
xchg
cmc
add
dec
int3
inc
and
imul
jne
addl
mov
movzbl
jmp
and
clc
aam
inc
add
and
jl
testb
push
pushf
sti
push
decb
jp
jmp
push
add
fcmovu
xor
add
add
jae
in
hlt
jl
jne
pusha
mov
shll
sbb
mov
ret
dec
stos
jecxz
aas
jmp
in
bound
xor
popl
jmp
movsl
sub
push
jmp
push
jmp
jns
imul
cmp
test
popa
add
inc
movaps
loop
rolb
add
jmp
xchg
mov
jmp
fimull
mov
out
jo
out
in
jg
mov
lea
fs
jmp
push
jmp
mov
and
mov
mov
and
mov
jmp
popa
cli
push
pop
lret
scas
pop
mov
notl
call
stc
adc
into
andb
sub
jo
mov
and
jmp
es
addr16
push
in
and
cmp
add
xchg
sbb
sahf
or
cmpsb
dec
dec
roll
aad
movsl
and
mov
jmp
rcll
pop
mov
dec
sub
adc
pop
jb
fistps
scas
pop
test
add
dec
cld
test
jne
leave
ret
jmp
mov
or
push
inc
int3
inc
and
cmp
dec
mov
fcmovnu
inc
imul
or
add
aas
mov
inc
mov
dec
lret
pop
ds
add
cmp
dec
jecxz
push
in
mov
mov
sbb
loopne
lea
push
jmp
cmpsb
xor
cmpsl
aaa
push
mov
arpl
push
mov
push
aas
cld
jmp
mov
and
rorl
inc
and
xor
nop
push
popa
nop
jp
push
lea
lea
push
call
mov
add
jmp
jmp
jnp
or
sub
jmp
push
leave
jmp
push
xchg
add
rclb
inc
ret
xchg
gs
enter
add
mov
jmp
pop
jmp
das
lods
and
pop
xchg
adc
cld
adcl
test
push
ret
cmpsb
push
lods
data16
cmp
jb
mov
xor
pop
jmp
jmp
shll
jmp
gs
pop
loop
mov
shr
sub
ret
jmp
add
lods
sub
push
mov
es
and
jbe
jmp
mov
jmp
test
iret
inc
pop
jmp
jmp
notb
mov
sub
xlat
inc
and
js
add
jmp
sub
jmp
push
lahf
punpckhdq
jmp
pop
jb
sub
mov
js
aas
gs
jmp
jne
pop
fisttpll
add
out
jmp
xchg
push
xchg
repz
cmpsl
add
or
sub
push
scas
mov
xchg
clc
fcomps
rorl
add
add
and
xchg
pop
bound
xor
jbe
daa
mov
and
xor
jmp
and
ss
lcall
pop
cmp
punpckhdq
mov
scas
lret
int
jmp
inc
fimuls
popa
rol
repz
jmp
call
cli
idivl
mov
lcall
loop
add
xchg
jmp
pop
fimull
fidivl
dec
int
and
xor
fidivs
inc
test
cmc
jmp
inc
lret
pop
ds
shll
andb
jmp
push
inc
and
sub
imul
mov
jns
jnp
push
daa
into
clc
int
add
fimuls
push
xor
sub
call
pop
into
test
imul
or
mov
jmp
mov
dec
adc
into
popa
jmp
loopne
mov
add
add
fdivrl
cltd
dec
fdivl
in
outsl
xorl
jmp
mov
ret
push
lret
pop
ds
mov
mov
das
pushf
jmp
rcrl
jmp
loopne
negb
xchg
cs
or
add
dec
arpl
imul
dec
xchg
pop
xchg
repnz
sahf
sub
jle
xrelease
cmp
jmp
addl
jmp
sub
push
lds
or
pop
adc
testl
add
add
sbb
jmp
out
mov
jmp
add
add
jmp
dec
rolb
sarb
iret
push
les
shlb
aam
dec
leave
rorl
inc
cld
adc
std
ljmp
test
pop
test
mov
and
sti
xchg
adc
sub
mov
test
je
mov
push
lea
call
jmp
addb
or
out
notl
pusha
pop
repnz
dec
in
gs
dec
andl
push
mov
call
push
lea
call
jmp
pop
jmp
xchg
push
jmp
lahf
sti
out
pop
jmp
in
notl
dec
adc
push
ja
xchg
cmc
add
adc
inc
cld
mov
or
in
out
sbb
adc
xchg
add
push
push
addl
fimuls
inc
bound
and
inc
rolb
shlb
dec
test
test
pop
xchg
in
sbb
dec
fisttps
fsts
inc
mov
jmp
arpl
add
mov
jmp
mov
subb
psubd
shll
pop
cmp
call
sar
inc
adc
lahf
or
ret
push
lds
lahf
cli
or
push
sub
jmp
xchg
or
push
fwait
addl
jne
jmp
rorl
mov
jg
jmp
cmp
dec
sub
loope
test
or
andb
sub
jo
mov
jmp
mov
mov
lahf
punpckhdq
mov
addl
jmp
test
mov
jmp
cmp
jmp
jecxz
icebp
nop
arpl
lcall
cmp
addr16
idiv
pushl
in
sub
popf
sbb
push
mov
add
jmp
js
je
jmp
int3
inc
aad
dec
scas
add
ja
xlat
inc
and
sub
insl
or
mov
add
jmp
mov
mov
popa
jmp
jmp
out
cltd
push
into
cmp
xorl
dec
push
arpl
add
add
jmp
pop
orb
add
add
jmp
mov
mov
xchg
add
repz
gs
stc
add
cmp
je
popa
mov
jmp
xchg
call
lea
jmp
aad
shll
jmp
imul
jmp
rorb
adc
xor
sbb
cld
jmp
fcoms
cmpsb
push
hlt
xlat
push
ret
cmpsb
push
nop
cli
notl
popf
clc
cld
mov
pop
sub
push
pushl
jmp
movb
daa
fisttps
xor
and
pop
mov
jmp
jmp
xchg
outsb
xchg
scas
and
sub
ds
aam
sub
clc
in
jmp
mov
ss
adc
rcll
std
sti
jmp
imul
cmp
fcompl
scas
pop
movsb
push
nop
mov
fs
jmp
xchg
leave
repnz
mov
add
call
mov
add
fstpl
test
sub
ror
scas
aas
scas
lret
out
jp
jp
xchg
dec
push
sahf
mov
popl
jmp
pop
rolb
shlb
cwtl
inc
pop
scas
and
push
mov
call
add
pop
ret
jmp
jo
imul
lods
mov
mov
mov
xlat
inc
and
js
aas
pop
sub
add
jmp
sbb
inc
fcoml
mov
mov
and
and
jmp
or
push
push
xor
data16
push
lds
push
mov
rcrb
mov
jmp
mov
mov
and
cmp
mov
pushl
jmp
mov
mov
and
std
ljmp
xor
and
jmp
mov
jmp
pop
lret
pop
ds
rorb
mov
stc
cwtl
imul
sbb
mov
jmp
inc
stos
sti
mov
jmp
adc
xchg
or
ja
xorb
lods
and
jge
jmp
or
sub
jmp
push
xchg
add
jnp
lock
jmp
hlt
je
lea
mov
jg
outsl
push
mov
popa
sbb
jmp
sub
pop
fisttps
fsts
cmp
je
lea
outsb
and
jmp
xor
sub
in
sbb
or
pop
int
addr16
pop
jmp
cmp
push
sti
je
lea
stos
cmp
imul
add
lea
jmp
lret
mov
stos
int
mov
dec
das
fidivl
xchg
mov
jmp
cmp
add
xor
fmull
mov
push
jmp
jg
jns
jmp
push
movsb
stos
mov
jmp
rorl
mov
lods
lret
inc
movsb
imul
add
sbb
fnsave
andl
add
add
jmp
cwtl
add
jl
or
push
setne
dec
and
add
lea
jmp
int
jne
lcall
fisttpl
mov
inc
and
pop
cmpsb
and
ds
lods
lret
push
push
pop
adc
pop
jp
jg
in
sbb
or
mov
inc
mov
outsl
jl
call
jmp
mov
mov
add
cmp
cmpsl
xor
icebp
xchg
out
je
jmp
add
dec
call
jmp
cmp
cmp
sbb
loope
cld
fwait
jbe
arpl
add
mov
add
cmp
jmp
mov
test
cmp
jno
xchg
cmc
add
sbb
aas
ror
cmp
inc
add
jmp
mov
mov
jmp
dec
fmuls
fdivs
stc
imul
sbb
and
inc
mov
icebp
shlb
and
fmuls
movsb
push
cld
stos
data16
mov
mov
mov
fnsave
xchg
jmp
std
mov
jb
test
add
add
jmp
adc
clc
outsb
or
cmp
add
pop
movd
push
pushl
jecxz
out
std
jmp
jle
add
xchg
push
pushf
sti
push
cld
xchg
or
pop
int3
stos
data16
cli
push
mov
orl
lea
call
add
ret
jmp
fstpl
xchg
lods
jnp
mov
adc
lock
rclb
mov
stc
cwtl
imul
xchg
call
imul
pop
jp
imul
jae
gs
or
or
mov
add
data16
adc
or
push
mov
lds
add
mov
and
cmp
jne
jmp
in
loop
je
repnz
jmp
sahf
jmp
and
popl
jmp
mov
fimull
test
adc
jge
addl
mov
movzbl
add
jmp
mov
shll
inc
sub
jp
xchg
add
and
inc
sbb
lea
jmp
mov
adc
jmp
mov
shl
leave
mov
pop
add
add
imul
xor
push
jmp
add
add
and
dec
frstor
sbb
pop
push
les
int3
imul
cli
je
popa
mov
jmp
push
pushf
xor
sub
xchg
pop
cwtl
add
push
lret
mov
js
mov
dec
xlat
inc
and
pop
test
add
push
push
pushl
lea
call
jmp
stos
cmp
xchg
xor
jmp
stos
das
mov
loope
adc
or
jnp
pop
xchg
repnz
pop
pop
jmp
jmp
std
jns
mov
dec
int3
inc
and
ss
mov
shlb
fincstp
mov
js
add
call
pop
jmp
or
ja
sub
jmp
pusha
jmp
push
fdivl
in
aas
sbb
iret
loope
jmp
js
ljmp
popa
jmp
cli
popf
insb
mov
inc
pushl
jmp
sub
sub
push
lret
pop
ds
fadds
fidivrl
jo
mov
and
cmp
jne
jmp
xchg
jmp
pop
into
pop
cmp
jg
aaa
cmpsl
ret
pushf
adc
sub
sub
jmp
push
push
lds
iret
rolb
mov
stc
xchg
add
std
or
mov
call
push
popf
jmp
jg
jnp
in
sub
pushf
xor
inc
test
aad
jbe
cmpl
out
mov
ret
jmp
pusha
jmp
leave
call
jmp
lods
xor
insb
loop
je
movsb
es
cs
gs
pushf
outsl
test
aam
mov
jmp
mov
mov
mov
sbb
mov
and
mov
in
xchg
pop
xchg
adc
in
pop
mov
jmp
and
cmp
insb
or
in
xor
sahf
pushl
jmp
cwtl
pop
xchg
adc
push
fimull
fidivrl
cld
andb
jmp
pop
rolb
rolb
push
mov
jg
dec
mov
cwtl
mov
sahf
insl
popa
push
popa
mov
ret
fisttps
push
std
jno
ja
loope
cmpsl
dec
popa
jmp
enter
out
pop
mov
jmp
cs
jmp
fcoml
cmpsb
push
cli
dec
fisttps
fsts
fmuls
fdivs
popa
or
call
cltd
roll
add
jne
addl
jmp
adc
out
push
cmp
jmp
mov
jmp
jne
ja
loope
sub
pop
clc
lock
bound
movzbl
jmp
add
xchg
mov
es
push
pop
sbb
ja
mov
ret
sub
and
ss
outsb
or
xor
dec
sub
xor
xchg
lcall
dec
loope
in
popl
jmp
xor
mov
cwtl
decl
hlt
dec
lret
lret
movsb
je
popa
jmp
mov
mov
lea
or
pop
dec
xor
cwtl
xchg
push
jmp
pop
jmp
or
lcall
or
fcompl
pop
lea
and
sub
mov
cmp
jb
jmp
js
add
adc
rclb
add
add
mov
pop
hlt
sub
jmp
pop
call
jo
xorl
fisttpll
mov
scas
leave
cmp
push
mov
js
cs
and
and
jmp
enter
es
cs
rcll
push
stc
orb
je
jmp
mov
mov
jne
out
pop
sbb
lods
cmp
adc
push
push
push
push
push
lea
call
push
call
mov
jmp
test
jecxz
insb
or
lds
push
xor
sub
pop
lea
and
jmp
pusha
jmp
xlat
dec
fdivrl
cld
fwait
jbe
push
int
and
push
sbb
pop
dec
sub
add
xchg
popf
pushl
jmp
dec
leave
pop
cmp
and
mov
dec
mov
outsl
lcall
jmp
mov
pushf
sti
push
call
sbb
push
insb
test
add
xor
gs
or
pop
enter
add
xlat
pop
repnz
fs
popa
nop
jmp
sbb
jg
in
orb
jae
popa
sbb
jmp
pop
int
addr16
mov
shlb
and
inc
roll
aad
jg
jo
call
pop
jmp
jae
call
std
insl
hlt
pop
mov
loop
mov
mov
mov
xchg
push
mov
ret
in
jmp
jge
adc
xor
fwait
or
xor
jg
jmp
fucomi
cld
cs
jmp
clc
rorl
add
es
jmp
hlt
notl
out
adc
inc
and
xchg
xor
ret
jmp
movzbl
jmp
pop
push
xor
and
xchg
ja
adc
imulb
lcall
cltd
roll
add
jne
addl
jmp
test
sbb
mov
cmp
jmp
repnz
jmp
adc
add
dec
fidivrs
outsb
or
sbb
jmp
popl
lea
jmp
push
aad
sub
or
pop
int
addr16
pop
lcall
jmp
push
adc
dec
sub
xor
pop
into
test
movl
jne
pushl
add
call
jmp
pushl
jmp
push
movsl
test
push
jo
sti
jmp
push
cmc
mov
imul
loop
pop
loop
je
outsb
or
cmp
jb
in
or
jmp
jmp
xchg
jp
lea
jmp
lret
test
pop
bound
mov
jne
mov
shr
lret
test
lock
push
lahf
push
insb
stc
imul
lods
mov
bnd
pop
jmp
dec
fisttps
flds
push
mov
es
or
in
bound
jmp
inc
fdivl
in
lcall
decl
pop
jmp
or
push
sbbb
pop
repnz
lods
sbb
push
cs
call
lcall
jmp
cmp
jmp
mov
sahf
stc
or
aam
lret
scas
pop
mov
pusha
jmp
dec
roll
aad
gs
pop
loop
lret
mov
and
out
call
jmp
jnp
insb
or
out
xchg
sbb
fstpt
leave
inc
xlat
mov
stos
ret
cmp
je
popa
mov
jmp
jle
cltd
roll
add
stos
add
add
dec
fidivrs
dec
sub
jle
or
popa
icebp
nop
arpl
sar
inc
adc
and
movd
scas
repnz
jmp
je
jmp
mov
jmp
xchg
push
xchg
repz
mov
ss
fmuls
mov
jnp
jne
addl
mov
movzbl
jmp
xchg
add
push
shlb
clc
lahf
push
jne
jmp
loop
shll
mov
mov
pop
dec
jmp
push
mov
stc
cwtl
imul
sub
mov
and
cmp
jmp
aas
stos
cmp
push
jecxz
xchg
ficompl
popl
jmp
push
jmp
pop
int3
stos
data16
mov
inc
mov
jmp
cli
or
inc
or
andb
sub
jo
jmp
hlt
insb
dec
xchg
sub
test
add
lods
lret
je
adc
push
jmp
pop
jmp
flds
mov
leave
test
xchg
repz
daa
movsb
cmp
inc
push
rolb
sarb
cwtl
xchg
popf
pushl
mov
jmp
popf
bound
add
jmp
inc
ret
ret
xchg
stos
inc
scas
mov
jmp
cld
jp
jp
cli
adcl
test
mov
xor
add
add
movl
in
xchg
add
add
inc
or
add
add
addb
add
adcl
data16
xchg
outsb
popf
fcoms
in
jmp
jbe
jmp
rorb
dec
stos
cmc
adcl
test
stc
imul
clc
lahf
push
js
bound
test
rolb
add
ret
jmp
in
clc
lahf
push
test
sahf
stc
or
mov
jmp
in
cltd
push
sub
imul
jmp
int
int3
stos
iretw
adcb
loope
mov
pop
mov
gs
mov
call
pop
mov
test
jne
jmp
cwtl
push
pushf
sti
push
cmpsl
mov
lahf
lea
push
pushl
lea
call
pushl
lea
jmp
jnp
jge
testl
sbb
jmp
das
mov
ljmp
stc
in
dec
fstpt
pushf
sti
push
jo
jmp
mov
add
add
scas
cmp
mov
outsb
mull
icebp
js
mov
inc
mov
lock
xorb
leave
ret
jmp
mov
cltd
clc
or
sbb
xor
inc
iret
push
xor
push
mov
jne
push
jmp
lea
jmp
push
bound
repnz
fs
aas
gs
sub
cs
cmp
pop
inc
rclb
sub
jle
call
cmc
add
int
inc
cld
or
add
jbe
pushl
inc
in
outsb
scas
and
sub
xor
imul
sbb
inc
cld
or
add
dec
jmp
push
fistpl
cmp
rcl
add
jmp
adcb
out
movsb
stos
ja
xchg
test
jmp
mov
jmp
pop
iret
pop
cmp
jle
push
shlb
or
scas
aaa
jbe
jmp
jmp
sbb
pop
leave
inc
jmp
decl
jmp
out
out
jno
int
enter
clc
insb
loop
je
popf
or
cmpsb
fucomip
into
std
jmp
ljmp
dec
aam
sub
cs
mov
scas
pop
mov
adc
out
cmpsl
out
sti
lcall
rorb
sbb
decl
mov
mov
jmp
mov
push
jmp
mov
mov
aam
sub
xchg
icebp
add
movsb
and
mov
xchg
aaa
mov
jmp
out
outsb
cld
fwait
jbe
cmpsb
and
out
notl
or
pusha
and
add
inc
jmp
iret
dec
fnstcw
decl
jmp
insb
data16
ret
jmp
pop
pushf
jmp
and
outsl
jmp
push
in
sbb
inc
daa
shlb
xchg
rcrb
xchg
test
jne
movl
lea
jmp
test
jne
mov
leave
jmp
jmp
xchg
and
test
inc
inc
sub
jmp
aam
jnp
xchg
jmp
xchg
and
pop
iret
stos
pop
sar
in
jle
lock
dec
or
sahf
xchg
mov
cli
jno
jmp
sbb
push
popa
nop
push
cmp
daa
inc
mov
adc
icebp
inc
push
jne
movl
lea
jmp
jmp
mov
lcall
mov
jmp
loopne
out
jo
sub
movsl
xor
push
test
cmp
xor
jmp
push
lods
pop
roll
aad
out
jns
mov
push
outsb
jl
popf
jmp
dec
xlat
inc
and
sbb
shll
jmp
cmpsl
pusha
jmp
jmp
out
jo
jae
jns
jmp
ja
jl
negb
fistpl
ljmp
call
add
pop
test
je
jmp
inc
fimuls
popa
xor
inc
ret
ret
out
adc
push
and
and
cmp
jne
addl
mov
jmp
test
std
or
jmp
clc
lahf
push
rclb
mov
movzbl
jmp
je
jmp
mov
add
jmp
jmp
daa
mov
cmp
lds
mov
test
fistl
pop
test
mov
ret
lds
movsb
push
cmpsb
je
insl
hlt
pop
out
shlb
icebp
popl
jmp
jbe
push
jmp
popf
mov
add
jmp
lahf
adc
rcrb
stos
pop
xchg
cmp
icebp
popa
jmp
es
aas
pop
test
fs
jmp
fwait
adc
push
fstpt
xor
pushf
aam
xor
push
push
cmp
jmp
test
test
push
mov
xchg
add
and
stos
imul
mov
jmp
push
jmp
sub
and
and
add
and
gs
orb
sub
jo
mov
jmp
test
mov
jmp
mov
sti
jmp
pop
iret
pop
cmp
pusha
jmp
in
mov
xchg
cmpsl
adc
sbb
das
xor
call
lret
pushf
sti
push
cld
pop
lret
pop
ds
pop
iret
stos
pop
loopne
push
cmp
pop
mov
jmp
sub
sahf
sbb
aad
in
jecxz
notb
push
xor
pop
push
jmp
xorb
xchg
add
jmp
xchg
dec
pop
jmp
ret
mov
movsb
fcompl
scas
pop
movsb
add
adc
push
sub
test
push
pushl
lea
push
mov
call
lea
jmp
inc
rclb
sub
fucomip
cmp
push
lea
jmp
or
jle
aas
scas
lret
add
leave
mov
lea
push
mov
call
add
push
jmp
cmpl
jne
jmp
jge
push
cld
paddsw
nop
arpl
mov
loopne
mov
jns
dec
fsubrl
dec
jmp
cmpl
jmp
mov
xchg
lds
lods
pop
jmp
in
bound
jle
inc
or
call
mov
addr16
jne,pt
or
test
jmp
push
push
xor
jle
xchg
pop
bound
out
mov
mov
add
call
jmp
jmp
loopne
push
jmp
shr
jmp
in
push
jmp
scas
hlt
xor
jmp
jnp
bound
push
aaa
ret
js
mov
xor
cmp
mov
mov
add
add
call
lds
jno
leave
jmp
pop
lret
pop
ds
faddl
mov
in
jg
in
hlt
xchg
outsb
cmpsl
pop
dec
jae
rolb
add
jmp
jmp
jno
push
jne
call
aas
mov
pop
inc
lea
jmp
ss
inc
mov
dec
and
mov
push
xchg
test
sti
call
ret
call
mov
mov
add
jmp
loope
sti
sahf
insl
sahf
cmpsb
lea
jmp
mov
les
aam
dec
frstor
dec
mov
or
scas
sar
inc
roll
add
cld
jmp
inc
pop
jmp
jmp
inc
jmp
ss
jae
xchg
testb
cmp
icebp
adcl
test
mov
jmp
sub
lcall
sbb
and
movb
jmp
lret
scas
pop
jmp
pop
jp
sbb
data16
xchg
outsb
mov
test
std
call
push
lea
push
lea
jmp
sbbl
int3
pop
into
test
es
mov
jmp
out
jno
cwtl
add
sahf
jmp
movb
inc
jmp
lock
sub
jmp
push
jmp
jne
push
fstpl
inc
inc
fisttps
xchg
std
lock
in
mulb
aaa
ds
inc
mov
jmp
mov
cwtl
decl
loop
adcl
ljmp
pushf
jmp
movswl
je
sub
jmp
mov
and
in
stos
sub
lds
mov
pop
mov
decl
test
jne
xor
jmp
pusha
jmp
cmpsl
xorb
jl
dec
adc
inc
cmp
add
popa
jmp
mov
mov
push
shlb
pop
loop
rcrl
scas
pop
mov
adc
and
mov
dec
push
xor
push
cmp
sub
andb
sub
jmp
icebp
leave
scas
cmp
jmp
addl
jmp
lods
and
test
jge
sub
cmpsl
jl
mov
inc
adc
push
jns
jo
mov
and
jmp
mov
jmp
push
lret
cmc
mov
dec
stos
and
jne
jmp
adc
int3
pop
enter
jecxz
ljmp
mov
jmp
mulb
xchg
aad
cmp
mov
jecxz
cmpsl
aaa
push
mov
dec
add
xchg
popf
pushl
mov
jmp
sub
out
in
je
outsl
sub
pop
popa
mov
jmp
sbb
stos
sbb
sar
jmp
add
add
jmp
enter
pop
fstps
mov
inc
and
push
icebp
movzbl
add
cmp
je
jmp
stc
addr16
push
lock
jmp
pushl
jmp
push
roll
sarl
adc
rcll
mov
enter
cmp
jbe
mov
jmp
jmp
sbb
and
cltd
dec
in
mov
xor
mov
add
call
jmp
jmp
std
test
das
stos
cmp
inc
push
ret
cmpsb
push
mov
pop
jmp
push
pusha
lcall
lcall
jp
jp
movsl
xor
adc
lea
jge
jmp
or
xchg
sarb
cld
jmp
test
cli
in
pusha
notb
leave
test
xchg
sbbb
jne
jmp
push
test
jge
cmp
test
jmp
dec
adc
rolb
add
jmp
inc
rolb
sarb
pop
leave
test
call
loopne
cltd
or
sub
cld
call
inc
jmp
and
sbb
repnz
mov
and
xchg
add
add
dec
fstpl
pop
repnz
fs
inc
aad
dec
cmpsl
lret
push
shlb
xchg
in
sub
push
push
mov
mov
add
shr
jmp
cmp
xor
and
jb
ljmp
pop
lea
cmp
jmp
fiaddl
jmp
fwait
add
std
or
or
fcompl
xchg
lea
push
cld
adc
popa
mov
jmp
push
jns
jmp
movb
inc
mov
lcall
incl
jmp
mov
jbe
jmp
and
jne
jmp
lds
mov
mov
arpl
pop
test
mov
jmp
js
push
jmp
pop
jmp
xor
jno
outsl
or
jecxz
and
mov
enter
rorb
mov
push
or
sub
mov
lea
jmp
ja
jmp
jo
insb
or
mov
push
xchg
popa
icebp
nop
arpl
xlat
jmp
out
stc
cwtl
imul
jnp
mov
outsl
cld
xchg
cmc
add
inc
xchg
test
jmp
roll
mov
sbb
sbb
and
push
inc
cmp
jb
jmp
jg
jns
jmp
in
test
inc
adc
add
add
lds
add
xchg
add
ss
outsb
push
addr16
sbb
cmp
insl
std
test
iret
push
les
les
jnp
in
insb
ljmp
test
cli
decl
clc
jmp
loop
notb
and
cld
decl
jl
sti
lcall
mov
dec
sub
sysenter
fcoms
and
jmp
cmp
or
call
mov
js
mov
cltd
and
in
bound
das
dec
mov
scas
pop
mov
push
sub
add
xchg
popf
pushl
jmp
fs
bound
and
loopne
loop
pop
loop
xor
push
lds
shll
xchg
mov
xor
push
jecxz
sub
push
shll
aad
lea
mov
gs
and
stos
add
dec
fstpt
xchg
adc
int3
dec
push
mov
mov
sbb
les
fs
jg
mov
pop
into
test
fnstcw
frstor
mov
ficoms
xchg
add
ja
jle
mov
shll
mull
jno
jecxz
cmp
fstl
lods
pop
scas
xor
sub
fstpt
jmp
push
fimull
fisubrl
outsl
out
adc
dec
sub
jbe
std
insl
hlt
pop
pop
lcall
hlt
xchg
outsb
fadds
pusha
pop
repnz
xchg
add
std
or
adc
xor
pop
cmp
jg
in
jge
testl
push
rcrb
pop
cltd
sub
cmpsb
lods
lret
inc
lods
aam
ret
cmpsb
push
mov
mov
add
jb
jb
xchg
mov
stos
into
cmp
push
mov
in
lock
push
cld
add
in
push
lret
test
bound
cmc
add
scas
aas
pop
test
pop
repnz
sub
mov
scas
lret
pop
aad
sub
or
mov
js
dec
push
fimull
fidivrl
aam
sub
push
jns
and
scas
call
cs
push
lahf
push
xor
push
xchg
add
and
fidivrl
sbb
adcl
adcb
subb
sub
push
cmp
xor
and
mov
push
mov
lret
and
cmp
inc
mov
cmpsb
shll
push
inc
and
and
int3
dec
fidivrs
int3
stos
mov
pop
iret
stos
pop
xchg
and
push
jno
outsl
or
jecxz
mov
inc
mov
mov
mov
decl
test
jne
xor
jmp
jmp
add
cmp
sub
lds
add
adcb
loopne
mov
inc
icebp
xor
je
jo
loop
push
xchg
jb
es
mov
cs
add
jae
xchg
pop
lret
pop
ds
pop
lds
iret
daa
sub
repz
xchg
mov
test
loop
pop
loop
lea
pushf
sti
push
push
xchg
add
sahf
jbe
dec
fstpt
outsb
or
push
in
imul
mov
inc
mov
or
pop
jp
jg
cltd
or
push
lea
mov
js
insl
bnd
mov
cmp
push
push
cmp
ja
loope
add
pop
jp
xor
arpl
xchg
gs
outsb
cld
fwait
jbe
dec
fimuls
push
cmpsb
xor
dec
fldt
int
and
jl
adcl
and
movsb
cmp
outsl
push
into
pop
cmp
xor
popf
or
into
pop
cmp
ds
or
loopne
adc
addr16
rolb
rcrb
xchg
adc
in
sbb
inc
lds
iret
and
sub
adc
pop
clc
jge
je
push
jnp
insl
hlt
pop
lock
je
lea
push
lds
mov
call
iret
pop
cmp
and
inc
shll
nop
testl
in
pusha
repz
cmc
push
int3
pop
int3
stos
data16
push
lds
xchg
fs
pop
enter
int3
pop
enter
push
xchg
testb
jmp
movb
inc
jmp
fmull
mov
out
jno
sbbb
out
sbb
in
in
mov
mov
movsl
rorb
mov
or
sbb
cmp
pushf
push
insl
out
jl
negb
fwait
sbb
mov
rclb
pop
mov
cmp
pop
fisttpll
out
inc
push
xor
daa
std
jne
mov
xlat
pop
repnz
xchg
cmc
jmp
lock
bound
lea
call
pop
test
jl
jmp
inc
enter
outsl
ficoms
mov
fidivrs
xor
add
es
cs
loop
out
jno
xor
sub
and
and
add
je
lea
loop
pop
loop
enter
les
dec
adc
es
jno
jecxz
mov
and
clc
pop
push
xor
daa
xchg
mov
sbb
ds
cmp
push
imulb
jle
call
inc
mov
shrl
rcr
arpl
xchg
gs
aas
scas
lret
ljmp
xor
cmp
jle
fs
sbb
jp
jp
xor
push
lock
je
push
inc
int
and
pop
cmc
js
mov
fisttpl
mov
lods
mov
in
icebp
notl
insl
std
test
sbb
pop
int3
stos
iretw
sbb
xor
aaa
push
mov
and
mov
jnp
in
add
push
lret
lret
push
test
push
cltd
cmp
es
cmp
inc
jne
imul
adc
cmpsb
xor
scas
dec
ja
addr16
add
jae
xchg
call
orl
popf
push
cmp
lret
cli
jno
xorb
cmp
mov
xchg
lock
gs
jg
jmp
jo
es
icebp
popa
add
inc
ljmp
ljmp
stc
mov
adc
inc
shlb
pop
cmp
jg
xchg
add
and
add
or
adc
je
fs
popf
insb
xchg
jb
xchg
daa
mov
mov
test
push
cltd
mov
in
fnstsw
hlt
pop
in
dec
into
pop
cmp
jp,pt
imul
les
add
inc
test
push
xlat
inc
and
aaa
ja
xchg
testb
and
jns
addr16
sbb
inc
xlat
mov
mov
les
insb
or
shr
data16
xchg
outsb
lods
mov
cltd
into
pop
repnz
rclb
test
in
repz
lock
lret
aam
shlb
notl
je
out
pop
adcl
setg
or
in
in
mov
test
mov
scas
add
std
insl
hlt
pop
cmp
adc
dec
adc
lret
dec
fnstcw
fstpt
xchg
cmc
add
mov
cmpsb
shll
mov
mov
sbb
lds
iret
ds
imul
insl
mov
cmpsl
out
cld
fwait
jbe
jp
push
cld
pop
sbb
sub
adc
punpckhdq
xchg
and
fwait
xor
js
mov
push
lret
pop
ds
stos
cmp
mov
cmc
movsb
xor
push
xchg
repz
mov
js
out
jnp
mov
dec
aam
sub
cltd
push
jns
pusha
pop
push
xor
dec
and
cmp
mov
rolb
inc
test
pop
popl
in
loop
pop
loop
aas
mov
jae
gs
or
pop
iret
stos
pop
push
xchg
or
outsl
pop
mov
gs
jbe
fdivl
in
cmp
sbb
cmp
and
gs
dec
fnstcw
lods
mov
loop
fisttpl
xchg
or
xor
in
pop
sub
cmp
cmp
sbb
cwtl
push
imul
mulb
pop
mov
mov
mov
mov
enter
pusha
xchg
jns
pop
xchg
adc
std
jl
cmp
mov
cltd
clc
or
std
add
out
jmp
icebp
outsb
cld
fwait
jbe
push
and
push
les
jmp
mov
cwtl
sbb
jne
addr16
or
leave
hlt
jle
mov
pop
ljmp
jl
push
mov
daa
inc
mov
scas
daa
mov
and
add
push
jns
dec
push
fdivl
in
stos
aas
scas
lret
mov
mov
das
pushf
mov
lahf
mov
test
popa
sti
imul
dec
mov
xchg
lahf
or
je
xchg
add
add
pop
lret
scas
pop
mov
outsl
sahf
adc
mov
fwait
decb
icebp
add
mov
fwait
decb
or
ds
test
push
rcll
push
sub
inc
mov
jbe
jo
loop
mov
aad
add
leave
test
lcall
xor
xor
test
movsb
ret
ds
cltd
and
push
mov
cmp
push
rcll
push
sub
cmp
loop
pop
loop
mov
aad
add
leave
test
lcall
xor
xor
test
movsb
ret
ds
cltd
and
push
mov
lock
adc
out
cmp
adc
xor
ss
mov
mov
inc
shll
jp
in
pop
int
int
dec
int3
inc
and
sub
pop
jns
insl
hlt
pop
sti
aam
shll
test
dec
sub
push
cld
jbe
cmpl
mov
jg
push
sub
jmp
xchg
fists
mov
inc
daa
rolb
push
fimull
ficompl
jns
push
cld
pop
jnp
jg
jmp
cmpsb
push
cli
pop
roll
aad
push
imul
cli
popf
insb
fstpl
xchg
add
cmp
loopne
jmp
jge
push
add
xor
sti
aad
ret
cmpsb
push
mov
pop
mov
and
inc
fidivrl
dec
sub
dec
adc
or
xchg
jp
push
mov
jns
jmp
movb
inc
cwtl
dec
lret
lret
mov
inc
mov
jo
push
lret
lret
popa
icebp
nop
arpl
lods
pop
pushf
adc
fimull
fimull
jecxz
std
test
fwait
push
test
push
mov
data16
adcl
test
xchg
test
push
scas
push
lea
out
jl
testb
mov
and
jns
daa
mov
inc
mov
sub
jle
outsl
lcall
jg
jmp
dec
mov
sub
pop
adc
sbb
push
scas
xor
push
ret
cmpsb
push
mov
sub
sbb
mov
mov
scas
jns
ljmp
lock
bound
sbb
aaa
mov
pop
rolb
shlb
lods
lret
inc
mov
sti
imul
pop
popf
adc
pop
int
cmpsl
aad
into
test
xor
adc
dec
frstor
mov
repnz
addb
call
sub
xor
adc
jg
mov
enter
push
mov
icebp
popa
add
sbb
pop
into
test
mov
or
gs
push
cld
push
add
xor
out
jg
jmp
mov
sub
jns
imul
insl
mov
scas
aas
pop
test
out
sbb
imul
mov
inc
mov
inc
push
xor
or
jg
insb
or
jecxz
push
ret
cmpsb
push
lods
clc
jge
je
push
jbe
pusha
pop
repnz
aad
mov
jg
jmp
in
sbb
xchg
and
adc
in
sbb
pusha
out
jl
notb
insb
loop
je
ret
mov
stos
int
fwait
dec
fldt
cld
xchg
cmc
add
inc
fisttpl
sbb
aad
lea
mov
and
and
sbb
inc
and
push
aaa
xchg
dec
rolb
rclb
outsl
hlt
push
cld
push
pop
rcll
sub
fs
popf
insb
test
pop
lret
scas
pop
fmull
cltd
push
pushf
xor
insl
call
addl
cmp
push
lds
movsl
and
mov
lcall
ljmp
shlb
push
xor
cmp
dec
push
fldt
in
bound
cli
popf
insb
mov
int3
push
push
adcl
xor
sub
sbb
setg
or
pop
in
and
and
sbb
adc
push
and
ret
mov
rclb
sub
jbe
loopne
mov
mov
testb
into
pop
cmp
add
and
and
subl
mov
and
xorb
push
call
pushf
aaa
mov
xchg
sbb
inc
aam
dec
mov
cmpsb
xor
scas
or
pop
and
arpl
test
call
leave
push
test
fimuls
push
xor
or
imul
adcl
int
and
push
stc
lock
bound
mov
lret
cwtl
push
xchg
repz
mov
cmp
dec
push
mov
gs
pop
aaa
mov
dec
mov
cmp
ds
push
pushf
sti
push
repz
mov
push
xor
sbb
imul
push
xor
and
inc
dec
rcll
and
pop
cmp
xor
lds
imul
pop
or
adc
push
cwtl
adc
in
sbb
pusha
repz
cmc
push
xchg
or
test
jge
and
mov
aaa
ret
test
jge
cmp
jl
pop
iret
pop
cmp
pusha
sbb
loope
jmp
int
and
aaa
out
jbe
cmpl
into
pop
cmp
ds
push
shlb
es
lcall
adc
daa
mov
and
inc
rclb
and
inc
mov
fimull
fimull
cmp
pop
mov
pop
es
inc
mov
pop
inc
and
cmp
ja
xorb
arpl
xchg
gs
ja
xorb
and
add
std
or
jmp
iret
jg
bound
add
and
push
lds
add
inc
ds
aas
pop
test
mov
cltd
push
add
cmp
push
pushf
sti
push
hlt
xchg
inc
in
mov
inc
rclb
sub
jbe
loopne
mov
mov
testb
into
pop
cmp
add
and
and
subl
mov
and
xorb
push
call
pushf
aaa
mov
xchg
sbb
inc
aam
dec
mov
cmpsb
xor
scas
or
pop
and
arpl
test
call
leave
push
test
fimuls
push
xor
or
imul
adcl
int
and
push
stc
lock
bound
mov
lret
cwtl
push
xchg
repz
mov
cmp
dec
push
mov
gs
pop
aaa
mov
dec
mov
cmp
ds
push
pushf
sti
push
repz
mov
push
xor
sbb
imul
push
xor
and
inc
dec
rcll
and
pop
cmp
xor
lds
imul
pop
or
adc
push
cwtl
adc
in
sbb
pusha
repz
cmc
push
xchg
or
test
jge
and
mov
aaa
ret
test
jge
cmp
jl
pop
iret
pop
cmp
pusha
sbb
loope
jmp
int
and
aaa
out
jbe
cmpl
into
pop
cmp
ds
push
shlb
es
lcall
adc
daa
mov
and
inc
rclb
and
inc
mov
fimull
fimull
cmp
pop
mov
pop
es
inc
mov
pop
inc
and
cmp
ja
xorb
arpl
xchg
gs
ja
xorb
and
add
std
or
jmp
iret
jg
bound
add
and
push
lds
add
inc
ds
aas
pop
test
mov
cltd
push
add
cmp
push
pushf
sti
push
hlt
xchg
inc
in
mov
sarl
and
pop
mov
stc
popa
icebp
nop
arpl
push
mov
fs
popf
insb
xchg
js
ljmp
push
pop
rcll
inc
test
loopne
stos
cmp
inc
cmp
dec
leave
pop
cmp
sub
icebp
popa
add
emms
lock
daa
mov
movsl
int3
aas
enter
jge
fs
je
lea
insl
std
test
outsl
in
sbb
or
push
mov
das
dec
mov
adc
xor
std
insl
hlt
pop
jmpw
jmp
or
adc
test
jge
and
jbe
pop
iret
pop
cmp
jle
scas
cmp
mov
jmp
adc
sub
pop
ljmp
mov
test
mov
and
sub
pusha
notb
daa
inc
mov
sbb
adc
push
push
mov
gs
pop
jns
push
sub
and
ss
inc
mov
lcall
inc
shll
mov
sbb
push
pushf
xor
push
inc
int3
inc
and
test
pop
stc
scas
and
ja
outsl
or
mov
pop
mov
push
xor
or
notl
push
pushf
xor
adc
fwait
or
xor
dec
sub
push
popa
add
pop
sub
sub
or
inc
shlb
lods
lret
inc
icebp
imul
or
mov
push
xchg
add
mov
mov
mov
jg
bound
pop
ljmp
xlat
and
xor
scas
addr16
outsb
cld
fwait
jbe
push
mov
xchg
jle
mov
inc
mov
je
pusha
pop
repnz
pushf
xor
jae
in
jge
testl
in
add
jg
mov
cmp
push
jo
loop
inc
leave
pop
cmp
cmp
pop
loop
adc
lahf
adc
cmpsb
xor
scas
or
inc
fidivrl
sub
mulb
dec
cli
imul
repz
cmc
inc
mov
aad
lea
xchg
cmc
add
popf
or
or
in
xlat
outsl
hlt
push
cld
push
mov
test
push
hlt
mov
ret
inc
fistpl
ja
xorb
inc
aam
dec
xchg
jns
jmp
jo
loop
xor
pop
aaa
mov
inc
mov
stos
sub
lds
sbb
cmpsl
and
aam
sub
jp
in
push
dec
fdivrl
pop
cmp
and
out
dec
xor
jae
insl
hlt
pop
rcrl
stos
rcrw
imul
or
push
jne
jnp
in
pop
push
imul
jp
in
pop
xor
add
xchg
add
cmpsb
xor
scas
insl
push
adc
pop
cmp
and
ja
xorb
xchg
add
push
dec
xlat
inc
and
pop
out
insb
loop
je
imul
sbb
add
scas
insb
repz
cmc
push
xchg
adc
fs
popf
insb
mov
jmp
cmp
rcrb
test
and
push
pop
inc
and
cmp
jp
in
pop
xlat
pop
iret
stos
pop
shl
loop
je
sbb
jge
add
push
add
add
sahf
sub
add
pop
dec
fldt
and
sahf
inc
fimull
fidivl
filds
mov
cmpsb
sub
push
jp
jno
xorb
jp
jp
loop
lock
bound
cmpb
cmp
fistps
test
fdivrl
mov
jae
xchg
leave
inc
shlb
aam
dec
stos
push
test
leave
pop
cmp
outsb
fwait
adc
in
sbb
fstl
mov
jo
loop
lret
pop
iret
stos
pop
shll
mov
inc
mov
pop
int3
inc
and
pop
and
jl
mov
cmc
lock
lret
add
stos
cmp
sti
notl
pop
push
xor
sub
xchg
add
mull
icebp
pop
lret
lods
pop
fstpt
jbe
loopne
adc
mov
scas
test
fwait
decb
mov
cmpsb
and
fmuls
fmuls
lock
lea
pop
jp
jg
std
insl
hlt
pop
test
shll
or
cmpsb
inc
ret
mov
in
jg
mov
std
or
xchg
cltd
clc
or
orl
inc
shll
add
sahf
aaa
pop
into
pop
cmp
addr16
ret
ret
jl
jne
xor
and
xchg
sub
popa
icebp
nop
arpl
pusha
cli
push
loop
pop
loop
mov
xchg
adc
jg
je
out
push
cmp
in
call
test
pop
test
mov
stos
lock
xorl
mov
mov
mov
rcll
push
les
mov
mov
jl
jne
insb
repz
mov
das
movsb
cmp
dec
mov
fiaddl
stc
mov
xchg
icebp
add
jmp
stos
and
dec
fnstcw
xlat
mov
stc
enter
pop
lock
jmp
jge
cmp
sbb
dec
cli
jp
arpl
cmc
pop
xchg
and
movsl
xchg
and
mov
aam
sub
repz
cmpl
inc
jle
jne
out
add
loop
jo
jge
divl
cmp
mov
inc
mov
sahf
push
mov
es
add
pop
jecxz
push
in
dec
iret
pop
cmp
add
arpl
cmc
push
js
xchg
testb
lret
aaa
cmpsl
ret
add
ja
roll
shll
idivb
mov
imul
out
clc
lahf
push
dec
les
int3
imul
int
shll
int3
aas
xchg
sub
jb
sbb
aad
jmp
xor
lcall
add
in
sbb
pop
jp
push
sbb
insb
push
int3
inc
and
adc
imul
inc
mov
adc
or
aam
lret
mov
mov
xchg
jae
mulb
add
inc
and
or
popa
icebp
nop
arpl
pop
pop
roll
shll
push
fimull
fidivrl
xor
imul
pop
loop
ja
outsl
or
mov
ds
mov
lods
mov
loop
fwait
or
sub
mov
mov
mov
cs
daa
mov
inc
mov
xor
jg
test
jge
and
out
das
mov
out
adc
inc
aad
fdivrl
imul
adc
data16
xchg
outsb
xchg
push
xor
inc
insl
repnz
pop
bnd
cld
xchg
cmc
add
xor
jae
popa
add
sbb
pop
int3
stos
orw
out
jg
jmp
mov
fistpl
stos
mov
adcl
test
fs
popf
insb
mov
mov
inc
mov
jle
gs
push
scas
and
insl
std
test
xchg
cwtl
decl
enter
or
pop
rclb
push
in
jg
mov
lret
scas
pop
jmp
fimull
fidivl
xchg
jb
cmp
lahf
punpckhdq
dec
mov
ljmp
jp
push
leave
pop
cmp
and
pop
cmp
and
pop
int
loopw
lcall
push
xlat
inc
and
aaa
cmp
lret
dec
fdivrs
push
xor
xor
rcll
lods
pop
test
mov
jl
fs
or
inc
lods
dec
rcll
and
xor
pop
shlb
hlt
pop
rorl
leave
dec
rcll
imul
or
mov
inc
aad
dec
in
repnz
pop
repnz
xchg
add
std
or
in
loope
jae
lret
pop
repnz
fs
adcl
or
lea
fdivl
in
pop
rclb
sub
faddl
mov
lds
mov
xor
pop
xchg
fwait
decb
dec
mov
mov
jno
jecxz
fs
adc
ss
aad
sub
sub
push
shll
mov
dec
sub
add
mov
cmp
and
rorb
push
sbbl
push
push
cltd
or
loop,pt
out
jo
push
les
int3
gs
ret
or
or
sub
xchg
dec
jecxz
push
in
adcl
jecxz
mov
movl
sbb
out
in
mov
pop
mov
js
je
out
imul
mov
mov
movsl
int3
aas
aad
das
mov
fisttps
flds
push
adcb
cmpb
mov
sbb
and
ss
mov
cmpsb
push
mov
fildll
push
ret
cmpsb
push
mov
mov
inc
mov
les
cmpsb
push
mov
movsl
add
aad
sub
or
es
mov
inc
int3
inc
and
inc
sub
imul
iret
stos
pop
into
jbe
je
out
pop
mov
mov
movsb
ret
ds
mov
in
adc
and
sbb
sub
pop
lods
xor
int
pop
sahf
or
cmpsb
dec
test
mov
sbb
push
shlb
xor
scas
insl
out
jl
negb
pop
popf
or
cwtl
push
imul
call
xchg
push
test
push
jmp
sub
sub
movsb
cmp
dec
xchg
sbb
mov
inc
mov
xchg
sahf
stc
or
roll
insl
test
xchg
xor
inc
stc
inc
rolb
sarb
pushf
xor
adc
xchg
or
sbb
inc
aam
dec
stc
in
out
jno
cs
dec
mov
pop
stos
dec
xchg
or
in
bound
mov
cs
push
mov
push
ret
cmpsb
push
lcall
fistpl
test
mov
and
insl
jmp
push
rolb
rolb
out
push
lahf
push
arpl
je
out
push
stos
daa
mov
and
ja
xchg
cmc
add
sbb
or
js
xchg
mov
pop
xchg
repnz
addr16
mov
push
mov
js
cs
roll
aad
cmp
cmp
in
bound
pop
cmp
pusha
pop
roll
aad
xor
pop
into
test
pop
cmp
les
jne
out
psubsw
xorb
aas
scas
lret
data16
outsb
or
jg
sub
dec
ret
popf
je
gs
adc
sub
inc
rcll
and
dec
fdivrl
je
out
cmp
adc
adc
dec
movsl
jno
imul
out
jo
xor
push
test
movsb
ret
ds
sahf
pop
xchg
adc
xchg
push
mov
es
ret
push
lds
add
daa
sbb
aad
lea
adc
test
pop
mov
ljmp
stc
mov
fisttps
icebp
popa
add
inc
stos
cmp
push
pushf
xor
addr16
fisttpll
out
cmc
jae
xchg
loopne
out
mov
cwtl
push
xchg
repz
mov
nop
push
popa
nop
pop
pop
fimuls
das
dec
into
pop
cmp
ds
jge
je
insl
fwait
sbb
mov
inc
mov
loope
hlt
xchg
outsb
mov
iret
cmp
push
mov
and
out
pop
iret
stos
pop
test
jno
jecxz
mov
lods
lret
inc
mov
fmuls
fdivrs
cmpsb
xor
scas
jp
dec
fidivrs
out
mov
jnp
jg
jmp
mov
in
fisttps
movsb
push
in
cmp
popf
or
lods
and
sbb
mov
mov
xchg
adc
xor
push
push
sahf
or
cmpsb
dec
cwtl
pop
xchg
repnz
push
cwtl
push
imul
mov
inc
mov
push
aad
sub
xor
cmp
ret
mov
movsb
std
jns
mov
nop
adc
outsb
ljmp
mov
setg
or
push
fwait
or
jns
sti
imul
pop
idivb
je
jbe
jmp
push
in
dec
fs
pop
xchg
add
push
int3
inc
xlat
mov
call
and
adc
inc
imul
or
dec
rolb
mov
out
mov
adc
adc
sub
mulb
nop
arpl
ret
test
bound
mov
das
mov
mov
sbb
jl
jno
jecxz
pop
jecxz
push
in
xor
inc
ret
ret
sub
sbb
addr16
arpl
cmc
and
or
xchg
pop
bound
adc
push
mov
loop
clc
lahf
push
push
fmuls
fsubrs
test
mov
pop
aad
sub
pop
scas
and
in
sbb
pop
fisttpl
mov
insb
or
mov
jne
mov
pop
into
pop
cmp
addr16
ret
ds
aaa
mov
or
fisttps
mov
mov
sbb
mov
scas
movsb
inc
shll
fdivrs
and
xor
ljmp
mov
and
mov
mov
das
enter
mov
xor
push
add
mov
adc
cmc
fistl
xlat
adc
pushf
push
int3
inc
and
cltd
clc
or
fs
sbb
add
cmpsb
dec
inc
lret
pop
ds
inc
push
xor
xor
daa
mov
push
jge
negl
repz
dec
sub
add
shlb
mov
imul
js
mov
hlt
js
mov
lcall
out
adc
pop
dec
fstpt
xor
adc
dec
in
mov
push
rclb
imul
push
push
add
xor
jbe
cmpl
nop
push
popa
nop
jp
jp
jp
jmp
cli
mov
test
adc
insb
lahf
jne
mov
int
ret
mov
rclb
ds
mov
or
roll
sarl
rcrb
test
inc
cmpsb
pop
push
int
movsl
flds
aad
ljmp
icebp
loopne
cli
ja
pusha
cmp
out
sbb
stos
pop
rcrb
xor
pop
xlat
inc
aad
dec
cld
fs
imul
push
xchg
xchg
adc
pusha
leave
push
insb
or
mov
aas
scas
lret
rorl
mov
jge
notl
xchg
or
push
les
adc
mov
jbe
jg
jmp
mov
mov
dec
fdivrl
fs
push
push
aam
sub
and
ljmp
push
aam
sub
sahf
stc
or
mov
fld
dec
frstor
mov
mov
es
mov
cwtl
adc
sub
ss
mov
test
es
cs
repz
notb
ljmp
testl
jne
xor
lret
ds
jnp
or
cli
pushf
in
xor
daa
ret
mov
mov
enter
lds
shrb
addb
repz
cmp
jo
insb
insl
movsl
testl
xor
dec
fdivrl
add
push
cmp
push
lret
test
pop
xchg
and
test
lods
cmp
fisttps
fsts
push
shlb
shlb
cmc
push
xchg
add
push
les
mov
fs
dec
push
mov
test
mov
sbb
or
ljmp
and
jns
xchg
or
sub
outsb
cld
fwait
jbe
out
jnp
mov
jp
ja
loope
std
imul
insl
subl
dec
mov
push
mov
sbb
and
mov
mov
scas
xchg
sbb
xor
stos
jmp
jno
adc
cmpsl
inc
or
addr16
jmp
out
xor
repnz
dec
mov
cmp
in
cmovl
pop
ds
xchg
sbb
aad
subl
sbb
cmp
out
clc
outsb
or
pop
aad
aad
dec
sti
loope
loopne
jb
and
sub
or
ret
push
jp
jmp
adc
sub
fsubrl
rclb
addr16
xchg
or
pop
fwait
add
cli
push
fwait
or
jae
mov
sbb
adc
push
pop
fimull
ficoml
mov
enter
xor
mov
adc
add
insb
movsl
and
xchg
add
jnp
mov
mov
xchg
lock
mov
xchg
lock
sbb
jg
rcll
xor
jbe
cmpl
cli
push
pop
xchg
repnz
pop
rolb
shlb
adcl
mov
mov
loope
fldenv
fisttpl
movsb
shrl
hlt
mov
pop
push
inc
test
repnz
arpl
pusha
cld
shrl
cmp
bound
mov
jge
pop
test
or
data16
xchg
outsb
jmp
aam
adc
add
sahf
push
addr16
sbb
addr16
pop
jo
addr16
sbb
pop
repnz
lods
and
arpl
inc
shll
lret
mov
pop
cli
ja
xorb
imul
mov
sub
push
xchg
sbb
adc
cmp
mov
jecxz
in
sbb
pop
fwait
or
inc
aam
dec
call
push
cmp
mov
mov
and
fisubrl
sahf
cmp
ds
test
loope
ljmp
pop
lods
outsl
xchg
adc
add
imull
lcall
shlb
insl
cli
push
push
lods
push
test
inc
stos
sub
ret
xor
mov
dec
stos
fnstenv
push
repnz
out
jae
ss
lret
xchg
js
lret
and
xlat
pop
xchg
pop
inc
jge
fcoml
jne
sarb
xor
movsl
xor
mov
xchg
add
push
xor
fmuls
mov
gs
push
mov
test
mov
pop
jmp
xchg
ss
outsb
cld
fwait
jbe
rcrb
pop
mov
subb
jnp
in
add
xchg
dec
rolb
rclb
push
shll
out
sti
lcall
notl
inc
rcll
aas
adc
cmp
daa
mov
and
aam
int3
stos
xchg
cli
ja
xorb
aam
sub
jnp
in
sbb
dec
in
sbb
jl
adc
cmpsl
std
nop
cli
add
movsb
and
and
orb
mov
xorb
adc
xchg
frstor
xlat
jae
into
std
je
arpl
icebp
push
lds
jecxz
jne
pop
test
jge
outsb
and
push
xor
pop
and
cmp
divb
push
les
push
lds
dec
lret
lret
cmp
mov
lods
pop
fisttpll
out
je
pusha
pop
repnz
adc
or
aaa
mov
inc
mov
jnp
addr16
or
rolb
shlb
es
cmp
mov
jecxz
clc
lahf
push
dec
fistpll
push
popa
nop
inc
aam
into
test
dec
sub
inc
push
ret
ret
or
rcll
jo
xchg
add
sahf
aaa
nop
push
xchg
repz
mov
sub
sarl
adc
mov
push
xchg
or
jo
imul
lods
jmp
push
out
xchg
sbb
outsb
pop
repz
fdivl
cwtl
cmpsl
and
es
cs
mov
cmp
push
xlat
inc
and
sub
jbe
loopne
mov
rorl
push
jno
bound
pop
cmp
sub
jo
loop
loop
je
lds
mov
scas
lret
test
sahf
stc
or
sbb
sub
xchg
mov
inc
mov
pop
ljmp
aaa
xor
pop
int3
stos
sarw
sbb
push
cmpsb
xor
scas
inc
mov
ret
out
ja
xorb
rclb
inc
mov
mov
or
mov
xchg
jle
lea
leave
pop
cmp
aaa
or
lret
dec
frstor
push
out
ja
popa
jb
ljmp
sbb
adc
jo
push
adcb
andb
stos
cmp
jle
stos
cmp
push
pop
mov
cmc
inc
out
ljmp
leave
cmp
xchg
sbb
push
push
xor
mov
fldcw
lahf
adc
daa
daa
ret
push
lds
cmc
outsb
cld
fwait
jbe
aaa
lods
cmp
ret
push
lds
gs
imul
mov
insl
std
test
pop
fimull
fidivl
arpl
jno
jecxz
sahf
sbb
push
rolb
shrb
lods
sub
mov
inc
mov
sub
aas
pop
test
jo
jb
push
mov
inc
sub
cmp
mov
xchg
lods
and
call
imul
sbb
das
xchg
sbb
aad
xor
hlt
xchg
outsb
fdivr
insb
loop
je
cmp
add
testb
outsl
push
cli
xchg
pop
or
mov
mov
or
push
mov
das
mov
js
jae
lahf
ja
adcb
subb
xor
and
inc
fstpl
xchg
lods
mov
lods
out
insl
std
test
popf
sbb
aad
rol
mov
mov
popa
mov
int3
cmp
or
out
mov
into
scas
sub
fmuls
fdivrs
fldt
or
cmp
jae
insl
hlt
pop
ficoms
mov
das
dec
mov
mov
pop
stos
sbb
xchg
jb
es
push
xor
jle
int
and
jl
push
xor
js
push
shlb
mov
xor
and
leave
pop
cmp
and
jb
xchg
pop
lret
pop
ds
enter
dec
andl
sbb
or
jle
add
pop
test
or
out
mov
mov
gs
ja
push
lret
iret
pushf
push
push
xchg
jmp
lret
pop
lret
aam
lret
loopne
vpacksswb
xchg
mov
mov
and
data16
adc
into
pop
cmp
addr16
imul
adcl
es
cs
jo
xorl
or
lret
inc
test
ja
xorb
aas
scas
lret
push
lret
lret
out
adc
imul
cwtl
push
imul
cs
sbb
jno
xorb
inc
mov
xchg
sbb
pop
fmuls
fdivs
mov
int3
test
mov
and
push
fimull
fidivrl
push
fimuls
adc
dec
jmp
fimull
fimull
stos
es
cs
imul
jnp
mov
leave
outsl
push
xchg
push
sti
icebp
cmp
xchg
daa
dec
sti
mov
xchg
push
fbstp
push
movb
fisubl
jb
cmpsl
shrd
aaa
test
fs
inc
mov
mov
cltd
sbb
add
push
shlb
mov
les
jge
divl
out
adc
daa
es
cmp
inc
fcomps
test
in
je
pusha
push
aad
sub
and
out
xor
es
mov
add
push
fsts
and
push
mov
jns
jmp
mov
fwait
decb
xor
adc
arpl
xchg
mov
addr16
mov
cs
test
xchg
and
int
repnz
fs
test
xor
ret
push
lds
pop
bound
lock
xor
pop
push
xor
and
popa
icebp
nop
arpl
pop
sub
scas
daa
adc
cmp
dec
mov
adc
push
inc
and
cmp
imul
add
inc
xchg
dec
leave
pop
cmp
cmp
mov
test
sar
jne
mov
lret
mov
cmpsb
mov
iret
iret
inc
xlat
mov
call
adcb
repz
int3
std
jo
xorl
cmp
in
outsb
cld
fwait
jbe
fs
imul
push
and
adc
adc
sub
ja
xorb
pusha
notb
mov
and
mov
les
xchg
mov
imul
jl
roll
rcll
rolb
rcrb
push
aad
sub
xor
scas
inc
pop
fimuls
add
mov
dec
mov
xchg
fs
mov
dec
into
pop
cmp
sbb
jae
outsb
or
sbb
inc
push
test
inc
xlat
mov
movsl
cmc
insb
loop
je
mov
mov
sbb
and
cltd
clc
or
fs
sbb
add
cmpsb
dec
inc
lret
pop
ds
inc
push
xor
xor
daa
mov
push
jge
negl
repz
dec
sub
add
shlb
mov
imul
js
mov
hlt
js
mov
lcall
out
adc
pop
dec
fstpt
xor
adc
dec
in
mov
push
rclb
imul
push
push
add
xor
jbe
cmpl
nop
push
popa
nop
jp
jp
jp
jmp
cli
mov
test
adc
insb
lahf
jne
mov
int
ret
mov
rclb
ds
mov
or
roll
sarl
rcrb
test
xlat
mov
lods
in
loop
je
arpl
js
ljmp
fmull
fstps
pop
iret
stos
pop
rcrb
xor
pop
xlat
inc
aad
dec
cld
fs
imul
push
xchg
xchg
adc
pusha
leave
push
insb
or
mov
aas
scas
lret
rorl
mov
jge
notl
xchg
or
push
les
adc
mov
jbe
jg
jmp
mov
mov
dec
fdivrl
fs
push
push
aam
sub
and
ljmp
push
aam
sub
sahf
stc
or
mov
fld
dec
frstor
mov
mov
es
mov
cwtl
adc
sub
ss
mov
test
es
cs
repz
notb
ljmp
testl
jne
xor
lret
add
push
mov
js
lds
xchg
cmpsb
or
push
iret
pop
cmp
cmp
int
les
scas
pop
fstl
pop
aas
lret
clc
outsb
or
xor
divl
fcmove
dec
fdivrl
add
push
cmp
push
lret
test
pop
xchg
and
test
lods
cmp
fisttps
fsts
push
shlb
shlb
cmc
push
xchg
add
push
les
mov
fs
dec
push
mov
test
mov
sbb
or
ljmp
and
jns
xchg
or
sub
outsb
cld
fwait
jbe
out
jnp
mov
jp
ja
loope
std
imul
insl
subl
dec
mov
push
mov
sbb
and
mov
mov
scas
xchg
sbb
leave
pop
cmp
aaa
or
and
jecxz
hlt
xchg
outsb
xchg
adcl
roll
aad
insl
jmp
push
in
cmovl
pop
ds
xchg
sbb
aad
subl
sbb
cmp
out
clc
outsb
or
pop
aad
aad
dec
sti
loope
loopne
jb
and
sub
or
ret
push
jp
jmp
adc
sub
fsubrl
rclb
addr16
xchg
or
pop
fwait
add
cli
push
fwait
or
jae
mov
sbb
adc
push
pop
fimull
ficoml
mov
enter
xor
mov
adc
add
insb
movsl
and
xchg
add
jnp
mov
mov
xchg
lock
mov
xchg
lock
sbb
jg
rcll
xor
jbe
cmpl
cli
push
pop
xchg
repnz
pop
rolb
shlb
adcl
dec
ret
std
pop
lret
lret
insl
std
test
movsl
xor
ljmp
stc
scas
inc
rolb
shlb
data16
xchg
outsb
leave
arpl
xchg
mov
jge
pop
test
or
data16
xchg
outsb
jmp
aam
adc
add
sahf
push
addr16
sbb
addr16
pop
jo
addr16
sbb
pop
repnz
lods
and
arpl
inc
shll
lret
mov
pop
cli
ja
xorb
imul
mov
sub
push
xchg
sbb
adc
cmp
mov
jecxz
in
sbb
pop
fwait
or
inc
aam
dec
call
push
cmp
mov
mov
and
fisubrl
sahf
cmp
ds
test
loope
ljmp
pop
lods
outsl
xchg
adc
add
imull
lcall
imul
add
cs
inc
mov
inc
les
int3
and
enter
sub
shrb
mov
lock
lea
adcb
subb
or
outsl
imul
imul
insb
jmp
push
in
sbb
stos
cmp
or
xor
movsl
xor
mov
xchg
add
push
xor
fmuls
mov
gs
push
mov
test
mov
pop
jmp
xchg
ss
outsb
cld
fwait
jbe
rcrb
pop
mov
subb
jnp
in
add
xchg
dec
rolb
rclb
push
shll
out
sti
lcall
notl
inc
rcll
aas
adc
cmp
daa
mov
and
aam
int3
stos
xchg
cli
ja
xorb
aam
sub
jnp
in
sbb
jne
mov
mov
lods
lret
inc
xchg
jno
pushf
pop
xchg
adc
mov
or
sbb
and
mov
inc
mov
sub
outsb
ljmp
stc
scas
xchg
or
ret
push
lds
jecxz
jne
pop
test
jge
outsb
and
push
xor
pop
and
cmp
divb
push
les
push
lds
dec
lret
lret
cmp
mov
lods
pop
fisttpll
out
je
pusha
pop
repnz
adc
or
aaa
mov
inc
mov
jnp
addr16
or
rolb
shlb
es
cmp
mov
jecxz
clc
lahf
push
dec
fistpll
push
popa
nop
inc
aam
into
test
dec
sub
inc
push
ret
ret
or
rcll
jo
xchg
add
sahf
aaa
nop
push
xchg
repz
mov
sub
sarl
adc
mov
push
xchg
or
pop
or
in
je
lea
mulb
push
jnp
jnp
in
insb
addr16
outsb
or
jg
insl
std
test
aas
mov
ds
cmpsl
es
cs
mov
cmp
push
xlat
inc
and
sub
jbe
loopne
mov
rorl
push
jno
bound
pop
cmp
sub
jo
loop
loop
je
lds
mov
scas
lret
test
sahf
stc
or
sbb
sub
xchg
mov
inc
mov
pop
ljmp
aaa
xor
pop
int3
stos
sarw
sbb
push
cmpsb
xor
scas
inc
mov
ret
out
ja
xorb
rclb
inc
mov
mov
or
mov
xchg
jle
lea
leave
pop
cmp
aaa
or
lret
dec
frstor
outsb
popf
jae
or
cld
xchg
cmc
add
ds
inc
mov
xorl
andb
stos
cmp
jle
stos
cmp
push
pop
mov
cmc
inc
out
ljmp
leave
cmp
xchg
sbb
push
push
xor
mov
fldcw
lahf
adc
daa
daa
ret
push
lds
cmc
outsb
cld
fwait
jbe
aaa
lods
cmp
ret
push
lds
gs
imul
mov
insl
std
test
pop
fimull
fidivl
arpl
jno
jecxz
sahf
sbb
push
rolb
shrb
lods
sub
mov
inc
mov
sub
aas
pop
test
jo
jb
push
mov
inc
sub
cmp
mov
xchg
lods
and
call
imul
sbb
das
xchg
sbb
aad
xor
hlt
xchg
outsb
fdivr
insb
loop
je
cmp
add
testb
dec
cld
call
sub
test
dec
fisttps
flds
xchg
add
push
filds
dec
scas
setne
adcb
subb
xor
and
inc
fstpl
xchg
lods
mov
lods
out
insl
std
test
popf
sbb
aad
rol
mov
mov
popa
mov
int3
cmp
or
out
mov
into
scas
sub
fmuls
fdivrs
fldt
or
cmp
jae
insl
hlt
pop
ficoms
mov
das
dec
mov
mov
pop
stos
sbb
xchg
jb
es
push
xor
jle
int
and
jl
push
xor
js
push
shlb
mov
xor
and
leave
pop
cmp
and
jb
xchg
pop
lret
pop
ds
enter
dec
andl
sbb
or
jb
or
in
icebp
js
mov
stc
jle
mov
imul
repnz
pop
repnz
imul
and
and
out
notl
pushf
adc
arpl
xchg
mov
mov
and
data16
adc
into
pop
cmp
addr16
imul
adcl
es
cs
jo
xorl
or
lret
inc
test
ja
xorb
aas
scas
lret
push
lret
lret
out
adc
imul
cwtl
push
imul
cs
sbb
jno
xorb
inc
mov
xchg
sbb
pop
fmuls
fdivs
mov
int3
test
mov
and
push
fimull
fidivrl
push
fimuls
adc
dec
jmp
fimull
fimull
stos
es
cs
imul
adc
dec
cmp
in
in
jg
mov
mov
mov
xchg
aas
je
jo
loop
sbb
repz
cmc
inc
scas
cmp
add
dec
aam
sub
stos
int
lret
push
shlb
mov
les
jge
divl
out
adc
daa
es
cmp
inc
fcomps
test
in
je
pusha
push
aad
sub
and
out
xor
es
mov
add
push
fsts
and
push
mov
jns
jmp
mov
fwait
decb
xor
adc
arpl
xchg
mov
addr16
mov
cs
test
xchg
and
int
repnz
fs
test
xor
ret
push
lds
pop
bound
lock
xor
pop
push
xor
and
popa
icebp
nop
arpl
cmp
rorl
push
rcrl
ljmp
movsl
sub
inc
and
cmp
imul
add
inc
xchg
dec
leave
pop
cmp
cmp
mov
test
sar
jne
mov
lret
mov
cmpsb
mov
iret
iret
inc
xlat
mov
call
adcb
repz
int3
std
jo
xorl
cmp
in
outsb
cld
fwait
jbe
fs
imul
push
and
adc
adc
sub
ja
xorb
pusha
notb
mov
and
mov
les
xchg
mov
imul
jl
roll
rcll
rolb
rcrb
push
aad
sub
xor
scas
inc
pop
fimuls
add
mov
dec
mov
xchg
fs
mov
dec
into
pop
cmp
sbb
jae
outsb
or
sbb
inc
push
test
out
cmp
mov
add
jo
loop
popa
in
jge
notl
cmp
mov
inc
mov
xchg
push
mov
adcl
ss
jecxz
push
in
pop
iret
pop
cmp
data16
arpl
cmc
pop
imul
testb
lret
aaa
cmpsl
ret
sbb
dec
roll
rcll
jecxz
out
mov
jle
je
out
add
push
lahf
push
inc
fnsave
lds
mov
and
std
jge
je
dec
sbb
pop
xchg
add
in
sbb
pop
jp
imul
pop
dec
add
add
pop
and
adc
adc
rclb
pop
test
xchg
jle
mulb
or
fidivrs
popa
icebp
nop
arpl
loope
pop
roll
shll
fimull
fimull
xor
cs
mov
pop
loop
imul
or
mov
movsb
ret
ds
les
pop
in
scas
cmp
add
sbb
and
cltd
and
pop
push
xor
or
mov
fimuls
or
mov
loop
adc
add
dec
fdivrl
imul
xor
data16
xchg
outsb
xchg
push
xor
sub
pusha
pop
repnz
jp
xchg
cmc
add
xor
and
data16
popa
add
add
pop
int3
stos
data16
stc
out
jg
jmp
mov
xlat
pop
int3
stos
xchg
repz
test
fs
popf
insb
mov
mov
jp
gs
pop
mov
mov
and
ja
lcall
stc
imul
shlb
mov
into
pop
enter
dec
fimull
fidivrl
xchg
jb
dec
aaa
lods
and
push
add
and
xchg
in
call
leave
pop
cmp
add
pop
cmp
and
pop
int
lea
lcall
push
xlat
inc
and
or
xor
dec
fdivrs
push
xor
cmp
adc
fists
lods
pop
mov
cmp
add
movzbl
inc
add
jmp
jbe
insl
hlt
pop
testb
dec
rcll
adc
stc
aad
dec
ljmp
xchg
add
std
or
jecxz
loope
jae
int
repnz
fs
adcl
or
pop
sti
jnp
mov
jg
add
and
sbb
push
ret
cmpsb
push
hlt
lret
test
mov
and
dec
std
inc
aam
sub
dec
adc
push
add
cmp
push
mov
jns
jmp
fildl
mov
mov
pop
aas
lret
mov
inc
mov
arpl
push
lret
lret
popa
icebp
nop
arpl
daa
stos
cmp
bound
cli
pop
fimull
fidivl
out
insl
std
test
nop
push
test
push
loopne
pop
int3
stos
data16
adcl
test
push
test
push
testb
gs
jl
notb
and
jg
mov
cmp
and
adc
mov
lcall
jmp
dec
mov
sub
jo
mov
js
cmp
fistl
cmpsb
push
loop
sub
cltd
or
cs
cmp
cmp
xor
scas
insl
jno
js
ljmp
mov
icebp
and
rolb
rclb
lods
lret
inc
jbe
imul
adc
cli
ficomps
xchg
addr16
into
test
xor
jne
dec
frstor
mov
stos
mov
ficompl
idivl
je
popa
mov
roll
idivb
mov
fists
mov
popa
add
push
lret
test
mov
mov
inc
mov
push
lea
jns
mov
lods
cmp
mov
dec
jecxz
push
in
hlt
outsb
cld
fwait
jbe
jno
js
ljmp
scas
iret
push
les
jmp
mov
popf
sbb
jb
addr16
pop
mov
leave
jle
mov
pop
ljmp
dec
aam
mov
daa
inc
mov
stos
daa
mov
and
add
push
fdivl
in
mov
scas
lret
les
mov
mov
das
stc
mov
hlt
mov
xchg
mov
mov
sbb
std
push
mov
test
cmpsl
aaa
cmpsl
ret
popa
mulb
push
add
push
popa
nop
daa
nop
or
in
sbb
nop
testl
mov
scas
inc
fimull
fidivl
fadds
mov
leave
sub
jne
gs
xor
jno
xorb
jp
jp
jecxz
lock
bound
addr16
mov
out
fcompl
test
fdivrl
mov
jae
xchg
lret
mov
cmpsb
iret
inc
aam
dec
mov
pop
cmp
sbb
sbb
fcoml
mov
jo
loop
lret
stos
pop
into
and
pop
int3
inc
and
pop
and
fs
mulb
xchg
aad
xchg
add
sahf
cmp
xchg
notl
pop
push
xor
and
xchg
add
mull
icebp
js
push
lret
jbe
loopne
adc
mov
scas
test
fwait
decb
mov
cmpsl
and
fmuls
fsubrs
jl
add
je
insl
hlt
pop
out
inc
shll
or
cmpsb
push
lds
mov
in
jg
mov
std
or
xchg
cltd
clc
or
adc
rolb
mov
call
sahf
das
pop
into
pop
cmp
jg
ret
ret
jl
jne
sub
and
xchg
cmp
popa
icebp
nop
arpl
cli
sbb
jo
loop
mov
xchg
adc
js
je
out
imul
sub
jp
jp
sub
mov
rclb
ja
inc
shll
shlb
fwait
decb
xor
and
or
mov
into
push
mov
jno
jecxz
pusha
loope
adc
or
inc
sub
xor
push
mov
inc
fidivrl
dec
sub
xor
lods
cmp
mov
inc
mov
daa
mov
inc
mov
les
movsb
push
mov
xchg
add
jne
cltd
or
push
jo
xorl
int3
sbb
loope
inc
xlat
mov
call
lds
inc
fidivrl
ds
test
push
rcll
push
sub
cmp
loop
pop
loop
mov
aad
add
leave
test
lcall
xor
xor
test
movsb
ret
ds
cltd
and
push
mov
or
jb
clc
outsb
or
adc
ja
loope
push
insb
and
sub
mov
mov
jmp
inc
rclb
loopnew,pt
adc
aaa
mov
mov
out
jl
negb
inc
into
pop
cmp
and
shlb
or
xchg
and
jno
xorb
push
in
notl
xor
das
dec
mov
out
sbb
out
cmpsb
xor
scas
pop
pop
int
and
jl
test
out
js
mov
adc
dec
fimuls
inc
cmp
lock
adcl
int
and
cmp
in
mov
dec
mov
lret
test
xchg
repz
out
leave
pop
cmp
and
jno
mov
dec
mov
cmp
add
jecxz
xor
push
xor
cmp
sti
sbb
push
xor
and
inc
dec
rcll
inc
into
pop
cmp
add
hlt
js
imul
pop
adc
xchg
in
sbb
jge
arpl
cmc
inc
xchg
or
test
jge
cmp
mov
aaa
ret
test
jge
sub
je
lea
iret
pop
cmp
xor
xchg
jg
jns
mov
push
int
and
push
jmp
stc
dec
into
pop
cmp
pop
rcll
cmpsl
push
mov
aad
cltd
sbb
adc
daa
mov
and
inc
rclb
xor
inc
cmpsl
push
fimull
fisubrl
mov
scas
lret
rcrl
test
mov
sbb
and
pop
inc
and
or
ja
xorb
arpl
xchg
gs
xorb
and
add
std
or
ljmp
in
bound
add
cmp
push
lds
add
push
xor
enter
push
mov
push
push
pop
nop
push
pushf
sti
push
xchg
adc
ret
ret
gs
pushf
outsl
test
jae
push
pushf
sti
push
repz
mov
mov
out
pop
xchg
add
les
mov
cmpsl
out
loop
je
sahf
sbb
int3
inc
and
cltd
clc
or
imul
adc
dec
lret
pop
ds
dec
push
xor
imul
push
mov
add
inc
popa
add
pop
dec
fisttps
fsts
cs
cmp
imul
js
mov
jecxz
out
mov
adc
js
ja
loope
fisttpl
mov
xor
and
inc
fidivrl
das
dec
mov
xor
sub
push
out
push
ja
add
daa
bnd
cmpl
nop
push
popa
nop
js
jp
jp
cld
jne
mov
scas
es
cs
and
loopne
xchg
add
mov
rorb
xchg
dec
rclb
addr16
sbbl
inc
roll
shll
pop
into
test
xlat
mov
sti
insb
loop
je
jle
js
ljmp
fcompl
into
mov
mov
sbb
stos
pop
lea
cmp
fadds
mov
imul
xor
clc
loopne
notb
insb
or
jecxz
aas
scas
lret
int3
dec
fnstcw
jge
testl
or
fcoml
mov
adc
mov
jg
jmp
mov
mov
dec
fdivrl
fs
sub
dec
sub
and
mov
jl
jne
xor
dec
sub
sahf
stc
or
sub
push
in
push
shll
jmp
xchg
mov
lea
cmp
hlt
insb
loop
je
mov
pusha
notb
ljmp
testl
jne
insb
loop
lock
bound
popf
jle
mov
js
ja
pop
int
addr16
xchg
pop
bound
cmp
aas
dec
lret
pop
ds
rcrl
scas
pop
mov
lret
clc
outsb
or
or
mov
xor
ret
mov
add
xor
mov
push
lret
cmc
leave
pop
iret
stos
pop
mov
mov
and
jl
cmp
lods
cmp
fisttps
fsts
push
shlb
shlb
loop
xchg
add
jo
dec
fistpll
fs
push
add
mov
mov
sbb
or
ljmp
and
cmp
jns
outsb
cld
fwait
jbe
bnd
mov
gs
adc
sbb
imul
insl
cmpl
xor
sub
popa
call
xor
push
mov
scas
lret
cltd
sbb
leave
pop
cmp
outsb
sbb
and
mulb
xchg
outsb
fists
adcl
roll
aad
jb
jnp
in
inc
push
lret
pop
ds
mov
aad
cmpl
sbb
test
pusha
clc
outsb
or
adc
inc
aad
dec
movsl
in
jb
xchg
sub
rcll
or
jp
jp
cld
jl
jne
insb
push
aam
sub
push
xor
adc
add
cli
push
fwait
or
push
mov
jo
gs
fimull
fisubrl
scas
and
push
xor
sbb
xlat
pop
xchg
add
xor
and
xor
jnp
mov
xchg
add
add
fwait
or
xor
push
xor
jbe
jbe
cmpl
cli
push
pop
xchg
repnz
dec
rolb
sarb
sbb
rorb
push
rcll
pop
aas
lret
insl
std
test
mov
mov
ljmp
stc
out
push
rolb
shlb
loopne
hlt
xchg
outsb
nop
fisubl
xchg
gs
jnp
mov
add
orl
in
data16
xchg
outsb
mov
and
add
sahf
insl
push
jp
in
dec
jle
addr16
sub
addr16
cmp
repnz
lods
and
add
inc
shll
lret
in
mov
out
out
jno
cld
imul
mov
mov
sbbb
out
sbb
mov
and
lock
cmp
mov
scas
gs
inc
pusha
pushf
lea
jmp
repnz
jmp
call
jmp
cmp
sub
rcll
push
jmp
mov
mov
and
call
sbb
je
into
in
sub
cmpl
je
lea
jmp
cmc
insb
loop
je
das
addl
jmp
arpl
xchg
testb
dec
lret
in
je
dec
sub
pop
adc
adc
hlt
jmp
add
rcr
ljmp
add
mov
jmp
jmp
cwtl
lahf
pop
xchg
repnz
ficoms
in
sahf
ret
jnp
add
into
addl
push
addl
jmp
mov
movsl
int3
aas
aad
sub
fmuls
fsubs
pop
fisttpl
add
xor
jne
insl
hlt
pop
neg
push
shll
dec
mov
mov
pop
stos
push
push
xchg
jb
pop
inc
dec
addl
push
addl
jmp
dec
push
xor
or
push
cmc
fmull
mov
xor
and
leave
pop
cmp
pusha
in
loopne
jb
push
lret
pop
ds
enter
cli
cld
push
addl
jmp
or
push
imul
repnz
pop
repnz
imul
and
xor
jmp
xchg
popa
call
adc
dec
jmp
or
jne
call
jmp
add
movsl
es
cs
lock
xorl
or
lret
inc
mov
jno
mov
mov
lret
lret
out
adc
sbb
repz
cwtl
push
imul
cs
sbb
jno
xorb
inc
mov
out
sahf
or
cmpsb
adc
dec
sub
jno
aaa
cmpsl
ret
mov
mov
and
fisubrl
fimuls
dec
rolb
dec
sti
dec
fimull
fidivrl
es
cs
jge
je
out
or
scas
aas
pop
test
mov
mov
lods
adc
pusha
loop
pop
loop
jl
insl
repz
cmc
sbb
faddl
repz
aam
sub
stos
int
leave
xlat
push
shlb
mov
mov
in
jge
notl
fs
addl
push
push
addl
jmp
sub
dec
rcrl
test
in
je
and
inc
sub
or
cmp
pop
adc
dec
fisttps
and
push
mov
jns
jmp
xchg
or
mov
enter
gs
lds
xchg
cmpsb
mov
int3
mov
shrb
mov
inc
mov
ret
xchg
fs
test
xor
ret
push
lds
adc
addb
lock
cs
pop
test
inc
push
xor
sbb
popa
icebp
nop
arpl
scas
dec
ret
cmpsl
xchg
and
mov
lods
sub
inc
and
jns
sti
imul
das
mov
lods
mov
xchg
pop
cmp
outsb
sub
mov
mov
and
jg
roll
mov
jmp
xor
int
inc
xlat
mov
out
adcb
xorb
push
xchg
repz
test
jo
mov
fildl
jae
in
imull
fwait
jbe
imul
push
std
jl
mov
add
bnd
xorb
pusha
notb
mov
and
mov
fldenv
xchg
gs
jo
imul
adc
inc
and
and
inc
and
xor
inc
sub
cmp
movsl
xor
fimuls
inc
cmp
rcrb
cmpsb
xor
pop
pop
into
pop
cmp
pusha
add
push
dec
adc
sbb
and
push
xor
jg
rolb
sarb
push
xchg
repz
mov
dec
lock
xchg
adc
into
pop
lret
scas
pop
mov
outsl
xchg
sahf
or
cmpsb
dec
fwait
or
add
or
or
add
std
or
cli
jns
mov
or
js
insl
hlt
pop
rcrb
sub
sub
sub
mov
mov
in
sbb
frstor
jae
jge
dec
frstor
outsb
popf
dec
js
push
cld
sbb
xor
out
jg
jmp
mov
sub
adc
imul
insl
fidivrl
scas
aas
pop
test
out
sbb
imul
mov
inc
mov
pop
push
xor
and
mov
js
popa
pusha
insb
or
adc
aam
jge
je
dec
jno
pusha
pop
repnz
push
mov
jg
jmp
in
sbb
lcall
adc
in
sbb
imul
sbb
push
out
loop
je
lds
mov
stos
int
fcoms
dec
sub
sub
xchg
cmc
add
pop
fisttpl
fisttpll
nop
sbb
aad
out
mov
and
inc
xlat
inc
and
jbe
sub
inc
rolb
sarb
hlt
push
cld
dec
push
rcll
push
insb
fcmovnb
pop
lret
scas
pop
cld
mov
test
push
fldl
pushf
xor
inc
repz
rclb
sub
ret
push
lds
mov
and
mov
jmp
into
push
js
ljmp
mov
les
sub
jge
fldt
in
bound
cli
popf
insb
lahf
dec
les
int3
or
mov
ret
stos
sub
sbb
setg
or
ficoml
lods
pop
cli
and
jae
jbe
loopne
and
sub
or
jo
inc
mov
icebp
and
loope
adc
push
mov
pushf
stc
popa
icebp
nop
arpl
push
mov
fs
popf
insb
xchg
js
ljmp
push
pop
rcll
inc
test
loopne
stos
cmp
inc
cmp
dec
leave
pop
cmp
sub
icebp
popa
add
emms
lock
daa
mov
movsl
int3
aas
enter
jge
fs
je
lea
insl
std
test
outsl
in
sbb
or
push
mov
das
dec
mov
adc
xor
std
insl
hlt
pop
jmpw
jmp
or
adc
test
jge
and
jbe
pop
iret
pop
cmp
jle
scas
cmp
mov
jmp
adc
sub
pop
ljmp
mov
test
mov
and
sub
pusha
notb
daa
inc
mov
sbb
adc
push
push
mov
gs
pop
jns
push
sub
and
ss
inc
mov
lcall
inc
shll
mov
sbb
push
pushf
xor
push
inc
int3
inc
and
test
pop
stc
scas
and
ja
outsl
or
mov
pop
mov
push
xor
or
notl
push
pushf
xor
adc
fwait
or
xor
dec
sub
push
popa
add
pop
sub
sub
or
inc
shlb
lods
lret
inc
icebp
imul
or
mov
push
xchg
add
mov
mov
mov
jg
bound
pop
ljmp
xlat
and
xor
scas
addr16
outsb
cld
fwait
jbe
push
mov
xchg
jle
mov
inc
mov
je
pusha
pop
repnz
pushf
xor
jae
in
jge
testl
in
add
jg
mov
cmp
push
jo
loop
inc
leave
pop
cmp
cmp
pop
loop
adc
lahf
adc
cmpsb
xor
scas
or
inc
fidivrl
sub
mulb
dec
cli
imul
repz
cmc
inc
mov
aad
lea
xchg
cmc
add
popf
or
or
in
xlat
outsl
hlt
push
cld
push
mov
test
push
hlt
mov
ret
inc
fistpl
ja
xorb
inc
aam
dec
xchg
jns
jmp
jo
loop
xor
pop
aaa
mov
inc
mov
stos
sub
lds
sbb
cmpsl
and
aam
sub
jp
in
push
dec
fdivrl
pop
cmp
and
out
dec
xor
jae
insl
hlt
pop
rcrl
stos
rcrw
imul
or
push
jne
jnp
in
pop
push
imul
jp
in
pop
xor
add
xchg
add
cmpsb
xor
scas
insl
push
adc
pop
cmp
and
ja
xorb
xchg
add
push
dec
xlat
inc
and
pop
out
insb
loop
je
push
outsl
nop
push
jmp
out
cli
popf
insb
test
jns
jmp
aas
mov
ficomps
test
and
fs
inc
and
sub
jp
in
add
pop
iret
stos
pop
xchg
out
loop
je
push
xchg
add
sahf
jp
lock
add
xchg
add
sahf
cmp
jge
mull
push
fistpl
lods
and
push
ret
cmpsb
push
in
sbb
aad
leave
pop
iret
stos
pop
or
cmpsl
aaa
cmpsl
ret
dec
jecxz
push
in
adcb
jecxz
test
bound
jle
mov
pop
mov
jg
je
out
push
mov
xchg
adc
jg
mov
movsl
int3
aas
hlt
stos
das
mov
fisttps
add
pushf
sbb
mov
leave
push
ret
cmpsb
push
cmpsb
push
aad
sub
xor
push
mov
mov
lds
cmpsb
push
mov
mov
pop
aad
sub
jp
mov
inc
mov
inc
int3
inc
and
inc
sub
jp
pop
iret
stos
pop
shll
je
out
inc
mov
mov
movsb
ret
ds
test
hlt
adc
and
adc
pop
jb
sub
and
mov
int
fiadds
sahf
or
cmpsb
dec
sbbl
out
sbb
rorl
movsb
push
sarb
cmpsb
xor
scas
sub
sbb
aas
sbb
or
cwtl
push
imul
call
xchg
push
test
push
leave
mov
fisubrs
shrl
cmp
pop
nop
sbb
mov
inc
mov
orl
pop
roll
shll
imul
insl
mov
xchg
push
int3
inc
xlat
mov
call
shlb
pushf
xor
or
xchg
or
sbb
inc
aam
dec
out
ja
xorb
mov
dec
mov
pop
stos
push
or
in
bound
mov
cs
cwtl
push
xchg
repz
mov
push
ret
cmpsb
push
aam
pop
int3
stos
scas
fcomps
test
mov
and
push
jns
jmp
push
rolb
shrb
in
push
lahf
push
out
adc
sbb
jbe
xchg
cmc
add
pop
xchg
or
jle
xchg
mov
pop
xchg
repnz
rcrl
xchg
addr16
sub
mov
js
dec
inc
roll
aad
cmp
add
bound
pop
cmp
js
roll
aad
xor
pop
into
test
pop
cmp
les
jne
out
cs
aas
scas
lret
popa
clc
outsb
or
adc
scas
rorl
push
shll
gs
xor
sub
rcll
sub
dec
fdivrl
je
out
adc
jbe
loopne
ret
inc
aad
dec
mov
sti
adc
jo
xorl
mov
jl
imul
loop
mov
es
push
lds
push
xchg
add
mov
aad
xchg
dec
fdivl
in
xchg
push
scas
dec
fisttps
fsts
icebp
popa
add
pop
stos
cmp
or
fisttpll
out
divb
xchg
loope
out
mov
lahf
push
xchg
repz
out
nop
push
popa
nop
pop
inc
fimuls
popa
dec
into
pop
cmp
pop
cld
jge
je
insl
lcall
mov
inc
mov
loopne
hlt
xchg
outsb
nop
inc
lds
iret
sbb
push
mov
and
cld
rcrl
stos
pop
xchg
push
add
mov
fsubrs
sub
dec
fidivrs
out
mov
fs
jg
jmp
mov
repnz
movsb
push
cld
stos
cmp
popf
or
lods
and
add
mov
mov
test
pop
jp
xor
cmp
mov
add
inc
cltd
pop
xchg
repnz
add
sbbl
mov
push
aad
sub
adc
cmp
inc
shll
jmp
adc
insl
ljmp
mov
setg
or
pop
fwait
or
push
std
sbb
jge
je
popa
insb
jmp
push
in
sbb
jns
jmp
sbb
add
inc
int
xlat
mov
lea
test
adc
pop
push
push
roll
mov
sub
adc
xor
mov
arpl
int
into
test
bound
mov
das
iret
rcrb
pop
mov
sbb
jge
jno
jecxz
inc
jecxz
push
in
xor
inc
ret
ret
sub
sbb
imul
push
cmc
or
or
adc
push
fisttpll
out
lea
loope
clc
lahf
push
push
fmuls
fdivrs
and
popf
adc
aad
sub
or
jecxz
in
sbb
dec
fimull
mov
insb
or
scas
out
in
jg
pop
into
pop
cmp
jg
movsb
ret
ds
xor
xor
or
mov
rorb
mov
mov
sbb
mov
cmpsl
movsl
inc
shll
fdivrs
and
xor
ljmp
mov
and
mov
mov
das
in
mov
xor
aas
push
xchg
jb
pop
mov
mov
cli
push
cmp
xchg
add
sahf
jl
xlat
inc
and
cmp
ror
inc
xlat
mov
call
and
jo
inc
jno
xorb
mov
gs
and
jae
in
xor
mov
add
lret
in
jnp
bound
out
mov
pop
lret
lret
cmp
inc
aam
dec
lods
sub
sub
push
cmp
xlat
dec
fistpll
out
mov
xchg
pop
xchg
adc
inc
lret
pop
ds
out
hlt
xchg
outsb
xchg
inc
and
cmp
pop
iret
stos
pop
cltd
test
loope
mov
clc
adcl
test
xchg
or
outsl
orl
stc
or
cmp
pushf
sbb
jl
jne
and
adcb
adcb
or
test
mov
mov
daa
inc
aam
sub
sbb
and
xor
hlt
pop
es
inc
mov
jo
jnp
in
dec
out
adc
inc
popa
cli
push
ljmp
stc
in
xchg
adc
sub
roll
aad
mov
icebp
movl
bound
adc
fcompl
scas
pop
movsb
adc
mov
mov
sbb
inc
shll
mov
sbb
aad
repz
xchg
cli
sub
insb
loop
je
popa
repz
cmc
xor
inc
daa
shlb
sub
fwait
or
xor
xchg
add
and
inc
sub
je
mov
jbe
ja
loope
jbe
jo
loop
add
pop
bound
pop
test
mov
cmpsl
cmp
inc
arpl
push
mov
js
push
das
mov
inc
mov
rcll
mov
and
sti
mov
cmpsl
ret
mov
mov
stos
cmp
push
pop
fimuls
xor
cmpsb
xor
scas
pop
or
cmp
and
mov
jg
push
jnp
inc
int3
inc
and
xchg
lock
les
xor
cs
mov
push
movsl
add
adc
push
les
push
and
xchg
add
sub
lds
lcall
mov
popf
pop
arpl
xchg
gs
sahf
loope
out
mov
rcrb
data16
nop
push
popa
nop
pop
push
mov
gs
pop
mov
movsl
int3
aas
aad
and
test
ficompl
fs
das
test
and
aaa
push
mov
pop
repnz
pop
cmp
xor
lods
dec
dec
push
xor
cmp
xchg
add
xor
xor
out
adc
sub
in
bound
or
sub
mov
inc
mov
cmp
jl
push
lret
cmc
sbb
xor
or
jge
testl
cli
cli
pusha
notb
dec
sub
add
inc
scas
add
mov
cmpsl
mov
stos
xchg
fwait
decb
jnp
jle
mov
inc
mov
sbb
inc
cld
jp
jp
popa
out
adc
cmp
je
out
sbb
mov
js
popa
rcrb
test
or
out
adc
or
push
ret
cmpsb
push
mov
pop
mov
adc
and
ds
test
dec
lret
pop
ds
loope
loope
jae
cmc
data16
xchg
outsb
jp
js
ljmp
pop
insb
cli
push
sbb
cwtl
or
in
mov
xchg
xor
movb
std
xor
adc
and
xchg
add
adc
hlt
cmp
int
lea
and
sti
sub
and
push
adc
sti
imul
sub
inc
mov
mov
or
in
jge
testl
pxor
lds
xchg
add
bound
mov
stc
adc
xor
lock
inc
xchg
mov
sbb
in
movsl
je
jnp
in
inc
lds
mov
cmp
add
push
popa
nop
daa
gs
push
aas
stos
cmp
push
jns
dec
aam
sub
mov
adc
or
std
insl
hlt
pop
int3
add
jns
outsl
or
out
fs
push
in
push
pop
fimuls
sbb
push
xor
sbb
jg
jmp
mov
cli
popf
insb
lahf
jmp
subb
xor
inc
dec
rclb
xor
imul
insl
int3
les
mov
icebp
nop
arpl
pop
cli
out
ljmp
sti
push
mov
xchg
and
stos
add
lahf
stos
cmp
mov
in
in
jg
mov
add
loop
out
mov
test
in
adc
outsb
jo
jg
jmp
push
mov
cmpl
dec
fstpt
clc
lahf
push
addr16
sbb
add
lds
hlt
jb
xchg
mov
push
aam
sub
add
jp
push
lds
outsb
popf
jns
into
pop
cmp
xor
ret
mov
dec
fstpt
add
pop
jp
xor
icebp
je
jne
out
inc
cli
push
lahf
push
aad
fidivrl
cmp
sbb
movsb
mov
mov
es
movsl
xor
adc
mov
js
imul
or
jo
in
sbb
sub
imul
insl
in
or
es
cmp
inc
jb
pusha
pop
repnz
lods
cmp
pop
int
addr16
push
pop
jp
inc
lock
lea
rclb
sub
gs
pushf
outsl
sahf
push
fisttpll
out
idivl
je
popa
gs
bound
int3
stos
rorw
xor
sbb
stos
cmp
imul
loopne
cmpsl
mov
mov
and
data16
dec
jecxz
push
in
lret
arpl
xchg
shlb
mov
dec
mov
xchg
outsb
fldenv
mov
inc
mov
stos
movsw
adc
das
mov
dec
mov
jle
arpl
inc
and
pop
or
or
stc
jp
jp
je
push
cld
adc
xchg
add
ja
mov
inc
mov
adc
fdivrl
mov
xor
add
je
icebp
popa
add
adc
jle
xchg
lahf
cli
or
pop
mov
xchg
cmc
add
out
lock
fidivrs
pop
cmp
popa
xlat
inc
aad
dec
cld
inc
rolb
sarb
insl
std
test
fisttps
mov
mov
testl
add
in
bound
lods
mov
cmpsl
aam
ret
mov
adc
mov
test
push
cltd
or
xchg
adc
in
sbb
lock
xorb
or
daa
cmpsb
xor
scas
dec
enter
push
test
cli
push
lods
lret
inc
mov
add
adc
or
cmpsb
push
js
popa
add
adc
inc
and
cmp
push
cld
movd
jbe
loopne
xchg
pop
sub
rolb
shlb
cwtl
push
imul
cmp
fimull
fidivl
fwait
or
sub
pusha
notb
mov
sbb
mov
xchg
popa
stc
imul
frstor
fwait
jbe
mov
mov
pop
leave
test
ficoms
pop
jp
adc
inc
sub
adc
push
xor
les
dec
movsb
inc
push
xor
sub
insb
loop
je
repz
lea
cmc
gs
or
stos
cmp
inc
mov
shll
mov
ficoml
aad
jle
mov
jl
pop
mov
adc
punpckhdq
or
loop
je
mov
mov
sbb
fnsave
fwait
or
sub
inc
and
loope
jae
aaa
mov
data16
xchg
cmc
add
or
add
outsl
lcall
fwait
decb
decb
cmc
add
fs
adc
daa
inc
push
xor
daa
sbb
dec
nop
pop
xchg
adc
enter
push
test
xlat
inc
and
or
dec
hlt
ja
xorb
pop
leave
test
stos
in
gs
pushf
outsl
mov
push
mov
insb
or
mov
std
das
ficoml
mov
push
xor
push
xchg
sub
outsl
cmpsb
xor
scas
pop
mov
cltd
hlt
lock
mov
call
nop
daa
mov
lcall
leave
push
shlb
and
adc
mov
adcb
addb
adc
addr16
push
in
and
inc
aad
dec
movsl
fistpl
test
mov
adcl
test
pop
or
adc
jmp
out
loop
je
lods
and
push
jo
loop
jno
outsb
or
or
imul
push
jns
pop
push
fimuls
and
leave
pop
cmp
outsb
adc
cmp
xchg
mov
mov
and
dec
in
pop
enter
mov
mov
pop
into
test
inc
sub
jp
push
ret
cmpsb
push
nop
or
jl
pop
into
test
test
jmp
sub
aaa
cmpsl
ret
adc
or
and
jg
bound
popa
add
sbb
mov
jns
enter
push
sbb
iret
stos
pop
xchg
xchg
pop
xchg
adc
jnp
addr16
or
sub
xchg
and
aam
sub
sub
popa
push
fimuls
xor
out
stc
cwtl
imul
mov
xchg
add
mov
ret
mov
arpl
cmc
inc
dec
fmuls
fdivs
sti
imul
dec
in
out
jno
mov
cli
mov
mov
push
xor
and
sbb
aad
int3
mov
rcl
fistpll
test
push
xlat
int
fdivrl
xor
dec
and
dec
dec
lret
lret
and
cmc
ja
xorb
inc
fidivrl
pop
ds
dec
lds
iret
das
jb
push
lret
pop
ds
fstl
mov
shll
adc
mov
ljmp
addr16
and
loopne
adc
dec
sub
and
in
loopne
jb
cs
xchg
add
or
aas
sub
ret
pop
into
test
shll
jbe
loopne
cmpsl
aas
scas
lret
inc
fistpl
mov
inc
mov
test
xchg
repz
out
mov
inc
mov
cwtl
pop
mov
mov
mov
mov
mov
jno
jecxz
xchg
sbb
push
fmuls
fdivrs
push
xor
cmp
pop
sbb
add
inc
mov
incb
inc
and
mov
es
jno
jo
loop
sub
mov
addb
pop
bound
fisubrs
fsubrl
lcall
sbb
dec
ret
stos
pop
test
cmp
inc
dec
rolb
sarb
dec
inc
and
pop
mov
mov
cmp
cmp
mov
lods
in
sti
sahf
insl
xorl
mov
cmpsl
ret
stc
jle
mov
sahf
insl
sahf
movl
sbb
enter
sub
and
push
nop
pop
aaa
mov
sbb
bnd
mov
cmpsl
push
cmc
out
jmp
jge
sbb
outsb
cld
fwait
jbe
icebp
pusha
notb
jb
in
push
les
int3
xor
mov
mov
cs
adcl
test
insl
std
test
ret
scas
pop
mov
fs
popf
insb
test
insl
hlt
pop
cmp
notb
lock
bound
shll
in
cli
popf
insb
test
push
les
fidivrs
mov
sbb
inc
rcll
xor
cli
push
adcl
dec
fdivrl
jp
in
or
xchg
add
ret
ret
test
xchg
pop
bound
cmp
pop
cmp
popa
pop
roll
aad
sub
out
jle
mov
xchg
addr16
inc
xlat
mov
out
and
inc
mov
out
popa
icebp
nop
arpl
jo
mov
pop
lds
iret
and
outsb
jmp
add
in
adc
leave
dec
fistpll
or
outsl
lcall
mov
and
movl
or
xchg
mov
adc
in
sbb
jle
fs
sbb
lea
push
mov
sub
adc
ret
sub
mov
js
aas
dec
fmuls
fdivs
scas
cmp
mov
inc
aad
sub
je
scas
aas
pop
test
pop
test
inc
aad
sub
push
int
and
jb
lods
cmp
es
cs
mov
mov
fimull
fidivl
pop
push
xor
dec
loope
in
mov
bound
mov
divb
cmpl
out
jl
notb
jns
insl
hlt
pop
sti
aad
shlb
pop
repnz
xor
daa
inc
mov
mov
into
mov
shll
aaa
push
mov
xchg
fs
movsb
sub
iret
pop
cmp
add
leave
inc
fidivrl
enter
push
lds
iret
fs
les
int3
jge
pop
into
test
sbb
cmp
jns
arpl
cmc
inc
mov
aad
andl
filds
dec
scas
xor
outsl
mulb
push
jmp
xchg
popa
call
and
cmc
add
sbb
dec
into
pop
cmp
ds
adc
out
adc
adc
gs
sub
jb
in
xor
adc
or
cmpsb
push
test
xchg
pushf
sti
push
repnz
cli
or
lret
dec
fstpt
enter
or
int3
inc
and
daa
inc
mov
stos
aas
scas
lret
ds
cmp
mov
mov
and
loope
jae
pop
int3
inc
and
pop
cmp
jle
xchg
add
sahf
cmp
idivl
jo
loop
fs
xchg
cmc
add
insb
sti
imul
adc
inc
shlb
scas
lret
cld
jle
mov
out
sti
cld
jl
jne
insb
stos
sub
hlt
push
cld
add
leave
rcll
lods
pop
test
xor
int
aam
pop
lret
scas
pop
test
cltd
or
jnp
sbb
cmp
mov
inc
mov
ds
inc
mov
push
lcall
sbb
jbe
cmpl
pop
int
addr16
addr16
gs
dec
aaa
cmpsb
xor
scas
pop
jae
jnp
in
pop
mov
and
or
mov
dec
inc
and
sbb
in
mov
and
clc
insl
hlt
push
cld
adc
jl
jne
add
lods
adc
push
incb
pop
fmuls
fdivs
repz
xchg
push
or
jecxz
ljmp
stc
repnz
lret
lret
icebp
popa
add
add
fadds
and
sub
setg
or
inc
xchg
mov
fwait
decb
jbe
and
mov
adc
daa
leave
pop
iret
stos
pop
roll
mov
jmp
jp
sbb
and
pusha
pop
repnz
je
ja
loope
sub
and
mov
inc
mov
mov
xchg
adc
push
roll
aad
mov
imull
cltd
push
fisubrs
shlb
leave
push
inc
and
ss
dec
mov
in
sbb
adc
fildll
arpl
cmc
push
xor
pop
dec
rclb
xor
je
lea
loop
pop
loop
or
and
popa
out
jl
mulb
nop
sbb
aad
out
and
ljmp
stc
mov
mov
dec
mov
push
in
push
lds
iret
xor
inc
xlat
mov
out
in
sbb
pop
js
arpl
cmc
push
aaa
mov
inc
mov
push
leave
pop
cmp
sub
lahf
punpckhdq
int3
aas
aad
out
jg
jmp
lds
loopne
lock
bound
dec
cmpsb
jo
loop
stos
sub
daa
mov
and
mov
stc
addl
movsl
xor
xor
mov
adc
int
mov
inc
mov
nop
add
push
xor
jg
jne
mov
jno
fstpl
or
push
sarb
stos
push
sahf
or
cmpsb
inc
rcrl
test
bound
imul
popa
add
xor
ja
xorb
mov
mov
mov
das
test
dec
sub
push
mov
fsubrs
cwtl
jno
je
out
inc
ja
jno
jecxz
fwait
push
pushf
sti
push
mov
adc
or
push
enter
and
ds
pop
lds
iret
dec
sbbl
and
or
adc
or
sub
adc
daa
mov
mov
cwtl
decl
call
push
lret
mov
pop
leave
test
stos
mov
ficoms
jae
in
ficoms
lods
pop
scas
adcl
out
mov
cmp
mov
nop
add
push
int3
inc
xlat
mov
call
mov
push
lret
cmc
sbb
sub
rorl
mov
push
mov
mov
mov
es
test
repz
cmc
adc
es
pusha
insb
or
adcl
test
mov
and
les
dec
movsb
mov
les
mov
jns
jbe
xchg
pop
bound
shll
aad
es
cs
je
insb
or
cmc
orl
stc
or
push
mov
xchg
jb
mov
inc
mov
cmpsl
das
mov
cs
pusha
notb
push
xor
sbb
mov
xor
xor
push
sbb
cmp
mov
lds
fwait
or
sub
xlat
inc
and
js
push
xor
or
xor
int
ficoms
mov
jg
pusha
sarb
test
jbe
cs
push
lds
mov
test
cmc
gs
inc
pop
lods
inc
lea
std
jp
iret
mov
repnz
mov
jp
bound
out
outsl
lcall
lcall
xchg
lock
daa
mov
push
mov
dec
add
cmp
pop
cmp
sub
rolb
shlb
aaa
mov
sti
je
lea
or
test
xchg
or
cmp
jo
loop
arpl
mov
and
das
mov
test
pop
test
divb
jl
daa
movsb
cmp
inc
lea
and
sti
pop
fstpt
cwtl
push
imul
outsl
lcall
xchg
lock
daa
mov
inc
mov
dec
les
int3
cs
enter
sub
rolb
shlb
aaa
mov
sti
je
lea
adcb
addb
or
cmp
jo
loop
arpl
mov
outsl
in
cmpsb
cwtl
push
sbb
rolb
mov
add
add
inc
add
lcall
mov
add
or
or
sub
pusha
jmp
pop
roll
aad
ja
jno
jecxz
pusha
sti
imul
pop
pushf
push
xchg
repz
int
out
fs
jmp
jne
jl
notb
stos
mov
jmp
sub
les
xchg
mov
mov
dec
mov
in
xchg
and
add
dec
outsl
outsl
bound
jb
je
arpl
inc
and
cs
inc
gs
outsl
add
scas
lds
mov
test
pop
cmc
sbb
out
pop
jmp
imul
inc
push
xor
xor
std
adc
cmp
mov
push
jmp
shll
jmp
add
les
int3
aas
xchg
push
mov
es
lds
inc
xchg
shlb
dec
pop
jmp
push
jecxz
push
in
fstl
pop
scas
xchg
and
ja
std
test
inc
jmp
mov
xchg
repnz
inc
lret
lret
test
pop
test
dec
fdivl
in
call
add
jmp
fwait
or
popf
subl
je
jmp
je
jmp
xchg
mov
mov
sbb
sbb
add
call
popa
jmp
jns
jl
negb
xlat
inc
and
push
mov
fisttps
mov
dec
sub
cmp
jle
mov
jnp
adc
add
dec
clc
notl
test
mov
xlat
push
mov
lahf
cli
or
xor
iret
dec
frstor
xor
and
push
xor
xor
enter
daa
shlb
add
push
out
outsb
jmp
push
in
or
add
add
pop
sub
add
push
jmp
stc
ja
xorb
mov
imul
xchg
sbb
cs
inc
and
jns
jbe
cmpl
cmp
test
pop
test
xchg
or
or
in
movsl
xchg
xchg
adc
jb
xchg
add
cld
data16
xchg
outsb
lods
lds
stos
data16
sbb
jne
out
add
inc
enter
jg
or
push
popf
scas
xor
and
cld
xchg
cmc
add
jge
imul
shlb
push
cld
or
inc
xor
data16
cmc
adc
dec
frstor
dec
mov
imul
jb
adc
push
imul
rolb
shlb
jmp
int3
inc
and
mov
jle
call
push
scas
pop
mov
sahf
js
arpl
cmc
push
aam
fdivrl
test
pop
call
push
ret
cmpsb
push
mov
push
mov
loopne
rcrl
data16
mov
mov
cmpsl
ret
xchg
adc
sahf
or
cmpsb
inc
inc
ret
ret
push
lahf
push
outsb
ljmp
jge
negl
xchg
data16
xchg
outsb
mov
mov
mov
nop
testl
and
ja
cld
xchg
cmc
add
lret
mov
mov
cmpsl
inc
fidivrl
in
jle
cmp
push
rclb
imul
aaa
cmp
xor
ss
mov
in
pop
mov
bswap
push
lret
lret
je
lea
js
mov
in
jmp
into
pop
cmp
push
adc
jnp
outsb
or
adc
cmp
sub
and
jns
mov
xlat
push
mov
pop
ds
pop
fimull
fidivl
mov
xchg
repz
std
fstl
mov
mov
sbb
xchg
sbb
inc
leave
pop
cmp
outsb
push
pop
jp
inc
movsb
sub
or
inc
inc
and
push
and
add
cmp
sbb
movsb
adc
cld
push
xor
inc
aad
sub
jp
lods
lret
inc
test
int
dec
fistpll
xor
scas
inc
dec
aam
sub
in
mov
clc
or
rcll
mov
iret
stos
pop
popl
imul
lahf
scas
sub
ja
xorb
lcall
repz
gs
pop
fisttpl
fnstsw
aas
mov
dec
mov
lret
inc
mov
ja
xorb
fdivl
in
xchg
pop
pop
fisttpl
fnstsw
in
mov
fwait
jbe
and
push
lea
and
push
stc
add
arpl
xchg
gs
out
je
lea
dec
ret
mov
sbb
aad
into
or
je
cmpsl
aaa
push
mov
jnp
adc
push
les
cmc
pushf
outsl
test
ret
cld
fwait
jbe
sub
cmp
push
dec
enter
pop
xchg
sbb
test
jge
fs
in
sbb
push
xor
push
push
jmp
mov
shlb
and
push
hlt
adcl
test
sub
lds
jl
popa
add
and
scas
insb
dec
fdivrs
mov
sbb
cmp
cmc
imul
insl
jg
mov
xlat
inc
xlat
mov
incb
mov
mov
inc
mov
scas
xor
int
ljmp
pop
sbb
popa
inc
fimull
fidivl
out
out
mov
pusha
std
insl
hlt
pop
andb
aaa
push
mov
pop
loop
push
mov
xchg
jle
xchg
add
je
fisttpl
frstor
mov
add
add
jecxz
pop
mov
pushl
jl
daa
lods
cmp
add
xchg
or
cmp
dec
adc
xor
dec
sub
and
push
lods
lods
lret
inc
lock
std
insl
hlt
pop
lods
adc
push
push
xor
addr16
hlt
push
cld
dec
mov
xchg
jge
jg
jmp
push
mov
lods
pop
lahf
pop
repnz
xchg
pop
cmp
cmp
sub
push
cmpsl
and
dec
fidivrs
cwtl
decl
ret
xor
cld
jl
jne
insb
call
xchg
adc
repz
lea
and
push
rolb
sarb
pop
fwait
or
push
sbb
bnd
jp
fstl
pop
scas
dec
lret
pop
ds
jo
adc
xchg
sbb
mov
mov
sbb
inc
cs
stos
cmp
lahf
punpckhdq
aad
lea
mov
stos
push
pop
mov
push
ret
cmpsb
push
mov
hlt
push
cld
push
or
add
add
subl
addl
call
jmp
xchg
mov
es
aas
cmpsl
aaa
push
mov
sub
push
popa
nop
pop
rcll
mov
lcall
sbb
imul
inc
mov
jmp
xchg
jns
mov
xchg
sbb
out
jl
notb
test
add
outsb
cld
fwait
jbe
jo
in
pusha
notb
pop
cmp
jo
sub
lods
lret
inc
out
cmp
add
scas
cmp
mov
mull
xchg
popa
fidivs
test
lock
aad
mov
pop
rclb
add
stos
cmp
dec
fildl
mov
stos
xchg
or
cmpsl
aaa
push
mov
add
ja
roll
rcrl
mov
scas
sbb
and
rclb
mov
shll
sbb
punpckhdq
shrl
fstl
dec
sub
cmp
jle
mov
iret
cmp
les
mov
es
test
jmp
jmp
icebp
pop
push
push
jmp
outsb
out
adc
cmp
push
jns
dec
mov
shlb
add
in
sbb
inc
js
jle
call
shlb
pop
leave
pop
cmp
js
imul
insl
ret
fidivrs
xor
add
push
test
push
fstl
cmc
adc
ret
test
mov
xlat
inc
and
pop
fadds
mov
shll
add
sahf
jbe
cmp
adc
sub
lods
lret
inc
xchg
push
shlb
adc
push
cmp
add
mov
scas
leave
cmp
pop
aad
sub
jbe,pn
outsb
or
pop
push
fisttps
fnstenv
xor
mov
test
dec
fidivrs
sub
adc
xchg
testb
sub
es
inc
mov
scas
cmp
lea
adcl
roll
rcll
or
cmp
mov
mov
dec
frstor
adc
addr16
stos
cmp
incb
icebp
ja
xorb
push
mov
push
cld
add
push
cld
sub
shl
lock
bound
loope
mov
enter
sub
cmp
jge
jno
insl
hlt
pop
mov
clc
sub
dec
fstpt
push
xor
push
xchg
daa
adcl
loope
mov
sarl
aad
dec
in
jb
xchg
sbb
inc
aam
dec
stc
mov
mov
and
lock
or
pop
push
xchg
mov
shll
scas
lret
lock
std
test
loop
notb
test
push
idivb
mov
lods
xor
xchg
mov
mov
dec
mov
cmc
add
mov
ror
inc
shlb
stos
into
cmp
imul
inc
mov
mov
mov
ljmp
jl
addr16
pop
lds
lods
pop
jmp
test
pop
test
ds
cmp
mov
push
les
shlb
lahf
cli
or
jo
adc
repnz
or
fwait
add
lods
and
pop
aaa
scas
aas
pop
test
and
pop
out
cli
popf
insb
movsl
mov
rcrb
iret
sbb
fwait
and
cmp
mov
xchg
cmp
xor
jns
jmp
push
fisttps
fsts
cmp
mov
cmpsb
rcrb
test
cltd
push
jno
daa
cwtl
adc
aaa
mov
jmpw
jmp
in
in
jg
mov
cmpl
movsl
xor
int
xchg
sbbl
out
sbb
sbb
inc
xchg
pop
xchg
repnz
aas
lcall
ljmp
call
test
fcomps
push
xor
inc
push
xchg
pop
bound
gs
pop
hlt
jne
mov
cs
cmp
mov
jbe
gs
sbb
inc
shll
mov
sbb
push
aad
sub
sub
js
lock
bound
adc
lahf
adc
in
jecxz
jne
mov
cwtl
sub
jbe
popf
or
mov
jle
sub
push
test
push
test
mov
test
notb
movsb
inc
inc
and
outsl
lcall
fldt
mov
ret
test
jns
jmp
fisttpll
mov
push
aaa
ret
lea
test
mov
icebp
or
sbb
jne
mov
leave
dec
fidivrs
add
sahf
pusha
or
sbb
mov
stos
int
aam
in
sbb
push
pushf
adc
xor
rcrb
stos
pop
xchg
mov
xchg
mov
jmp
nop
push
popa
nop
push
or
daa
data16
push
cld
dec
adc
mov
mov
sbb
out
repz
insl
fidivrl
bound
inc
and
imul
clc
outsb
or
cmp
stos
cmp
dec
adc
aam
ret
cmpsb
push
mov
sub
ficomps
pop
and
divb
cmpl
adcb
andb
cmp
push
jg
mov
and
loop
pop
loop
jl
fs
or
movsb
inc
rcrl
test
mov
mov
lahf
pop
xchg
adc
call
dec
movb
popa
add
push
roll
mov
mull
mov
push
xchg
add
sahf
das
jg
jl
negb
setg
or
imul
xorl
dec
fdivrl
sub
jg
dec
fistpll
pop
jb
cmp
inc
fisttpll
out
or
add
push
cmp
sub
setbe
mov
sbb
stos
data16
and
jp
jp
fstps
stos
data16
insl
std
test
mov
mov
push
push
jecxz
push
in
fwait
adc
stc
imul
test
cmp
dec
lcall
addr16
scas
lret
adcb
loop
mov
add
std
or
jnp
js
ljmp
xor
lods
and
sbb
cmp
add
aaa
mov
xchg
adc
push
mov
jle
imul
test
std
insl
hlt
pop
in
out
out
mov
adc
sbb
push
inc
and
or
jno
add
adc
sbb
sub
lret
dec
frstor
lock
xchg
and
loopne
xchg
add
sahf
jl
imul
jae
xchg
aaa
mov
pusha
in
jge
mull
add
push
dec
rcll
dec
fdivl
in
in
jle
mov
int3
aas
mov
stos
ds
pop
test
sub
push
ret
ret
mov
inc
mov
jns
jno
jecxz
jecxz
out
mov
cmp
pushf
or
aas
scas
lret
add
push
jle
call
lods
pop
mov
or
inc
xlat
mov
stos
nop
push
test
push
loopne
iret
pop
cmp
add
jmp
adc
jae
outsl
or
hlt
rcrb
stos
pop
test
inc
sub
cmp
pop
cmp
and
sub
stc
imul
sub
jnp
and
pop
leave
test
out
popf
push
pushf
sti
push
mov
loop
pop
int3
inc
and
movsb
ret
ds
mov
mov
and
decl
fisttpll
out
pop
repnz
cmpsl
inc
fisttps
flds
pop
mov
dec
fistpll
sub
cmp
mov
je
push
rolb
sarb
pop
pop
jecxz
push
in
jmp
jecxz
jne
xchg
xchg
repnz
outsb
ljmp
lahf
cli
or
xchg
and
xchg
or
jle
pop
jp
jae
push
shlb
std
or
jb
xchg
testb
aas
ljmp
adc
dec
inc
inc
and
push
inc
jmp
test
sahf
or
xchg
add
or
ret
push
lds
dec
sub
inc
lods
and
ja
icebp
popa
add
adc
popa
icebp
nop
arpl
sbb
dec
aam
sub
mov
fistl
hlt
jne
mov
and
movb
dec
test
dec
ret
stos
xchg
adc
sbb
inc
shll
sbb
xchg
gs
pop
jno
outsl
or
jecxz
out
adc
sbb
push
xchg
repz
test
enter
jl
divb
pop
lret
scas
pop
cld
adcl
loop
test
popf
xor
inc
and
outsl
popa
lock
pop
adc
cmp
adc
fcoms
cmpsb
push
hlt
arpl
xchg
mov
fwait
jnp
mov
cmp
dec
rolb
rclb
dec
fnstcw
and
jnp
inc
aad
dec
movsl
adc
mov
movsb
ret
xor
pop
sbb
push
les
dec
fnsave
lds
movsb
push
cmpsb
xchg
sbb
add
ljmp
jo
xorl
movsl
ja
insb
loop
je
aas
mov
inc
mov
pop
int
and
arpl
insb
or
scas
mov
out
mov
adc
xor
dec
sub
dec
pusha
hlt
push
cld
dec
inc
roll
shll
mov
push
int
and
aaa
add
pop
rclb
sub
mov
gs
adc
xchg
pop
bound
dec
mov
stos
data16
fistpll
push
lds
out
outsl
lcall
dec
sub
push
test
mov
xchg
mov
repnz
pop
repnz
fcoms
mov
push
cmp
ds
lret
fstpt
fistpll
out
jo
inc
roll
shll
call
pusha
lock
inc
xchg
icebp
gs
pushf
outsl
fsubrl
or
push
xor
ss
mov
pop
stos
or
add
std
data16
xchg
outsb
mov
jbe
loopne
xor
ljmp
stc
andb
push
xor
aam
dec
xchg
jo
xorl
sbb
mov
stos
int
lea
rclb
pop
insb
call
dec
enter
and
out
push
mov
cmpsb
cs
mov
std
jno
xorb
lock
bound
test
ret
ds
rclb
push
in
add
std
or
movsb
xor
int
int3
arpl
xchg
gs
aaa
push
mov
cmp
jle
call
out
jp
jp
cltd
add
cld
xchg
cmc
add
sub
dec
frstor
mov
popf
in
xchg
xchg
fwait
decb
or
adc
mov
out
adc
or
lock
rcll
push
cwtl
sbb
aad
shl
jne
mov
push
xchg
or
outsl
stc
jb
xchg
xchg
sbb
adc
adcl
out
mov
mov
jl
add
xor
mov
loop
add
aad
fstpt
nop
testl
push
scas
pop
insb
stc
imul
mov
inc
fidivrl
icebp
nop
arpl
bound
outsb
test
xchg
mov
or
jbe
cmpl
xor
int
cmc
sahf
and
dec
fdivrs
inc
daa
shlb
mov
rclb
add
inc
jns
mov
arpl
je
out
push
mov
jecxz
clc
outsb
or
sbb
aaa
cmpsl
ret
orb
adc
lcall
mov
dec
ret
ret
sbb
lahf
or
in
mov
xchg
and
shrb
imul
lahf
cli
or
cs
or
push
lret
lret
lods
cmp
push
mov
mov
sbb
or
js
jne
out
push
sbb
rcll
sub
pusha
pop
repnz
out
roll
dec
mov
mov
dec
mov
push
in
movsl
and
test
mov
jle
imul
add
addr16
lahf
punpckhdq
mov
inc
mov
dec
push
xor
push
jmp
push
std
push
stos
cmp
jno
xorb
lods
lret
inc
mull
xchg
mov
sbbl
and
jb
mov
mov
fistl
pop
cmp
cmp
sub
inc
aad
dec
lret
sahf
stc
or
pop
nop
inc
lret
pop
ds
pop
jecxz
push
in
sahf
sbb
inc
rcll
aas
push
arpl
cmc
and
test
jge
jns
or
or
mov
shll
mov
nop
push
popa
nop
arpl
push
xor
addr16
inc
xlat
mov
fwait
lea
xchg
repnz
ds
inc
mov
pop
leave
pop
cmp
jg
inc
aad
dec
in
mulb
dec
mov
fwait
add
add
and
fs
popf
insb
out
jno
fimull
movsb
push
repnz
and
ja
in
bound
jmp
jge
sub
loopne
in
mov
adc
inc
push
xor
push
sbb
or
js
mov
push
xlat
inc
and
cmp
outsl
lcall
loop
je
imul
jnp
insb
or
out
sbb
add
sahf
insl
enter
inc
mov
shlb
add
add
pusha
idivl
mov
arpl
bound
ja
loope
dec
fdivrs
sub
shrd
lods
lret
inc
out
mov
mov
cs
xlat
inc
aam
dec
out
lds
iret
jl
push
les
clc
lahf
push
adcl
mov
in
jne
mov
fiaddl
mov
test
sbb
pop
into
test
jle
call
xlat
and
jl
insl
hlt
pop
in
rcll
mov
test
rcll
aas
xor
gs
rclb
xor
movsb
dec
dec
push
xor
cmp
pop
leave
test
mov
cld
sbb
sub
dec
sbb
ss
clc
je
lea
adcl
sahf
or
cmpsb
adc
pop
cmp
aad
dec
cld
adc
sbb
sbb
cmp
imul
data16
xchg
outsb
dec
fnstcw
sahf
stc
or
xor
add
push
test
push
divb
lods
and
xor
pusha
pop
bnd
jae
xchg
push
rolb
sarb
addb
testl
pop
lods
dec
cli
jl
jne
jp
inc
fidivrl
fs
or
in
out
jl
testb
jge
test
das
mov
movsb
ret
ds
push
fisttpl
cmpsl
addr16
cltd
push
movsl
movsb
ret
ds
cmpsl
xor
jbe
jne
out
inc
movsb
xor
repnz
pop
repnz
sub
lret
pop
int3
stos
rolw
sub
and
stc
imul
push
xor
fidivrl
or
sbb
nop
pop
ds
mov
lret
sub
dec
fidivrs
hlt
xchg
outsb
nop
addb
iret
pop
cmp
and
ficoms
sub
adc
test
lock
adc
cmp
jge
je
and
popf
or
fisttpl
fstpl
orl
test
aam
aad
dec
in
xchg
add
sahf
das
arpl
pusha
pop
repnz
popa
cmc
gs
dec
pop
into
pop
cmp
jg
add
jmp
adc
pop
push
xor
sub
xor
dec
fidivrs
pop
cmp
push
mov
rolb
inc
mov
pop
enter
mov
rcl
push
shlb
mov
shll
pop
bound
mov
stos
dec
rclb
xor
push
les
shll
push
xor
xor
dec
sub
inc
std
jb
xchg
jge
addr16
cmp
fidivrs
fs
popf
insb
fisubrl
pop
test
mulb
push
push
lret
pop
ds
push
lahf
punpckhdq
xor
fadds
mov
addl
and
rorl
mov
jecxz
jne
mov
stos
sti
jg
mov
mov
stos
lcall
into
pop
cmp
xor
jp
in
adc
cld
mov
fcomps
punpckhdq
sub
adc
popaw
out
jg
jmp
shrl
frstor
jg
jmp
cmpl
mov
inc
mov
cmpsl
sub
sub
lds
push
outsl
or
scas
sti
imul
push
shlb
push
std
dec
mov
aad
lea
pop
ds
mov
aad
adcl
or
jl
jne
mov
mov
mov
and
xchg
or
sbb
or
cmpsb
outsl
cmc
jbe
cmpl
push
test
push
imulb
jl
notb
sub
push
rcrb
scas
pop
mov
xchg
add
leavew
dec
ret
mov
push
mov
inc
mov
jg
popa
call
inc
roll
aad
mov
das
mov
into
inc
shll
jmp
jge
xlat
inc
fidivrl
jmp
jge
stos
cmp
push
lahf
push
mov
popf
pop
lret
lret
outsl
lcall
or
pusha
notb
gs
pop
pop
lds
iret
and
sub
aas
mov
pop
xchg
iret
dec
ret
mov
ret
push
mov
es
pop
jecxz
push
in
movb
inc
cwtl
jns
mov
in
notb
outsb
or
or
outsb
cld
fwait
jbe
pop
rolb
shlb
push
mov
es
mov
daa
test
pop
test
jnp
gs
aas
out
lock
lds
addl
daa
sarb
cmp
mov
inc
mov
adcb
sbb
es
inc
mov
jp
jl
testb
push
lds
push
aaa
ret
test
push
shlb
movsl
push
mov
das
stos
ret
pop
repnz
fs
out
adc
es
xorb
pop
enter
lahf
push
mov
es
pusha
out
adc
adc
fisubl
fucomi
insl
std
test
lcall
push
mov
pusha
pop
repnz
mov
fstpt
mov
sahf
pop
xchg
adc
push
cs
dec
jne
jne
out
pop
or
push
lds
aas
lret
add
push
les
mov
or
cmp
jle
mov
lcall
lods
inc
mov
and
js
ljmp
dec
gs
sbb
and
mov
jg
bound
faddp
inc
fidivrl
dec
sub
es
jge
adc
sbb
das
mov
nop
push
popa
nop
jb
insb
or
loop
xchg
pop
bound
enter
xor
add
orl
dec
fnstcw
pop
aas
lret
sub
and
loopne
adc
push
inc
roll
sarl
roll
shll
push
test
push
mov
jg
lahf
add
std
or
cmp
add
fadds
mov
leave
daa
mov
out
insb
loop
je
cmp
sub
jle
mov
lcall
mov
adc
in
sbb
and
push
cltd
or
jno
dec
fnstcw
shll
scas
lret
push
fimull
fisubrl
xor
push
pop
jp
inc
adc
stos
and
push
push
xor
js
mulb
push
mov
mov
je
lea
inc
aad
dec
cld
rclb
pop
hlt
or
adc
xchg
add
mov
dec
mov
sub
cmp
cmp
mov
loopne
adc
sub
mov
xchg
bound
das
lds
jns
jmp
xchg
adc
aaa
cmpsl
ret
stos
sub
lds
push
mov
jg
jg
dec
fistpll
adc
jb
lcall
push
imul
pushf
xor
add
push
push
jecxz
push
in
sub
pop
je
je
out
pop
and
outsl
std
insl
hlt
pop
mov
mov
inc
mov
pop
leave
pop
cmp
js
sbb
push
xor
jns
cmpsb
xor
scas
or
dec
fidivrs
sub
pop
sub
sub
push
adc
jl
mov
xchg
adc
mov
int
mov
leave
inc
push
xor
daa
jle
insl
hlt
pop
loopne
popa
icebp
nop
arpl
mov
aam
mov
outsb
or
adc
scas
aas
pop
test
movsb
push
mov
movsb
ret
ds
dec
frstor
cli
or
pusha
mov
cwtl
push
imul
call
scas
inc
shll
inc
sub
insb
out
jge
je
sub
mov
mov
mov
jnp
mov
inc
fisttpl
fnstsw
mov
jbe
cmpl
mov
dec
mov
pop
ljmp
pop
test
mov
sbb
adc
roll
inc
stos
pop
fimull
fidivl
lret
mov
movsl
int3
aas
ret
insl
ljmp
jae
in
jns
mov
test
sarb
push
cld
push
idivl
je
popa
jbe
add
sbb
sub
gs
cmpsl
aaa
push
mov
lds
call
int3
pushf
or
mulb
xchg
outsb
fistps
pop
cmp
jg
cmp
xor
clc
outsb
or
dec
inc
shll
jmp
fisttps
flds
or
mov
mov
movsl
xor
lret
lret
sub
lock
bound
cwtl
jo
js
mov
sbb
xchg
add
jge
je
jo
mov
gs
jl
imul
pop
int
xchg
jnp
in
xadd
mov
adc
pop
leave
test
enter
dec
mov
jnp
mov
sti
outsl
lcall
cmp
mov
adc
std
insb
loop
je
inc
fisttpl
mov
inc
mov
dec
fldt
jne
mov
push
int3
inc
and
js
ljmp
not
dec
fistpll
jo
loop
stos
xor
int
mov
loopne
addb
lock
sub
int
ret
mov
jo
xorl
push
shll
xor
push
in
outsl
lcall
cmc
pushf
outsl
sahf
adc
orb
stc
or
lret
mov
mov
in
bound
mov
and
lds
mov
cmpsb
shll
movsb
movsb
ret
mov
out
sti
imul
push
xor
insl
stc
imul
cs
mov
cmp
jg
push
mov
out
mov
jbe
arpl
cmc
adc
lods
cwtl
pop
xchg
repnz
or
rclb
cmpsb
push
aam
cmp
stc
imul
movsb
ret
ds
mov
mov
push
dec
iret
pop
cmp
add
jae
in
fwait
push
mov
es
out
fs
popf
insb
lahf
mov
fdivrl
mov
inc
mov
and
inc
dec
lret
pop
ds
orb
jle
mov
push
movsb
add
pop
enter
jmp
rorl
xchg
les
scas
pop
repnz
lret
xchg
gs
mov
sbb
les
int3
je
jge
jnp
in
add
dec
fidivrs
fistpll
out
mov
les
mov
xchg
stc
sbb
pop
fisttpll
out
out
notl
mov
and
out
imul
mov
mov
fistpl
inc
and
cmp
jnp
rcrb
test
stos
mov
xchg
cli
jnp
mov
and
ds
test
es
dec
fmuls
fsubrs
out
jl
negb
aaa
cmpsl
ret
pop
xchg
add
sahf
aaa
push
push
xor
jg
jae
xchg
mov
xor
notl
notb
and
push
enter
push
mov
jl
jnp
jnp
in
insb
mov
mov
push
xchg
repz
mov
movsl
int3
aas
aad
gs
pushf
outsl
test
pop
adc
outsl
iret
dec
fidivrs
stos
int
leave
rcrb
scas
pop
mov
mov
dec
mov
in
notb
sahf
or
cmpsb
inc
rcrl
scas
pop
test
kandnb
mov
xchg
sub
adc
sub
insb
std
insl
hlt
pop
lods
ret
cmpsl
push
jecxz
movsb
ret
ds
lock
xchg
outsb
fistpll
jl
negb
mulb
dec
mov
xchg
cltd
add
mov
jnp
jno
jecxz
aaa
scas
cmp
mov
push
push
cld
jnp
les
int3
dec
roll
inc
mov
lods
out
insl
std
test
sahf
sbb
movb
inc
mov
imul
push
das
stos
cmp
inc
jnp
mov
push
mov
jle
imul
mov
scas
pop
idivl
mov
pop
inc
and
or
insl
fcoml
mov
dec
lds
iret
fs
add
icebp
popa
add
pop
mov
mov
das
pushf
push
lahf
punpckhdq
cmpl
call
out
je
lea
cmp
sub
rorl
mov
add
ja
xor
cmp
jne
mov
cmp
push
xor
mov
xchg
add
outsl
popf
sbb
daa
mov
and
xlat
push
shlb
mov
repz
andl
rcrl
scas
pop
test
push
hlt
in
stc
cwtl
imul
shl
insb
loop
je
pop
iret
pop
cmp
popa
push
push
add
or
push
adcb
xorb
insb
loop
je
xor
sbb
dec
fistpll
jle
call
or
pop
mov
and
scas
leave
cmp
and
ds
std
insl
hlt
pop
sbbb
out
ljmp
stos
cmp
inc
push
adc
rorb
xchg
add
inc
repz
mov
mov
and
sti
push
ret
cmpsb
push
mov
xchg
jge
sub
lds
pop
fisttpl
rcrb
fs
ja
xorb
lods
cmp
inc
xlat
mov
call
mov
cmpsb
push
cli
int
repz
rorb
cltd
or
xor
sub
push
aaa
ret
dec
fidivrs
into
test
and
shl
outsb
cld
fwait
jbe
aam
ret
mov
jle
adc
inc
fimull
ficompl
scas
aas
pop
test
dec
mov
sbb
add
jl
jne
popa
inc
push
xor
xor
inc
movl
and
daa
mov
and
imul
adc
add
adc
add
add
popa
adc
add
add
adcl
add
add
and
add
cmp
add
dec
adc
add
add
jae
add
mov
adc
add
add
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
lods
adc
add
arpl
add
mov
add
aam
add
or
add
push
pop
add
imul
add
add
xchg
pop
add
mov
add
in
pop
add
xor
add
dec
sbb
add
add
jae
add
xchg
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
sbb
add
add
cmp
add
sbbb
add
sbb
add
add
mov
sbb
add
sbb
add
ret
sbb
add
js
add
mov
push
add
icebp
push
add
push
pop
add
and
add
cmpsb
pop
add
ret
add
pop
add
or
add
and
add
sub
add
xor
add
outsl
and
add
add
andb
add
and
add
and
add
add
xchg
and
add
and
add
and
add
and
add
add
arpl
add
test
add
mov
and
add
and
add
and
add
and
add
and
add
add
imul
add
daa
add
das
add
xchg
add
in
add
repz
cli
add
pop
daa
add
mov
add
mov
add
mov
daa
add
daa
add
shll
add
loop
add
repz
add
clc
daa
add
std
daa
add
sub
add
sub
add
sub
add
add
push
sub
add
add
push
sub
add
sub
add
add
jo
add
movsl
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sbb
add
and
sub
add
add
insl
sub
add
add
subl
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
sub
add
add
mov
add
lcall
add
sub
add
insl
add
jae
add
popf
add
cmpsl
add
mov
add
push
das
add
popa
das
add
imul
add
add
lea
add
scas
das
add
aaa
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
add
in
add
and
add
sub
add
xor
add
add
pop
xor
add
add
lds
add
iret
xor
add
xor
add
xor
add
xor
add
add
add
xchg
add
xchg
add
mov
add
ret
add
enter
int
add
divb
add
std
add
add
add
pop
aaa
add
adc
add
and
add
xor
add
cmp
add
cmp
aaa
add
arpl
add
into
aaa
add
fdivs
add
cld
aaa
add
cmp
add
add
insb
cmp
add
add
inc
cmp
add
add
add
cmp
add
sarb
add
fdivrl
add
sarl
add
in
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
inc
cmp
add
add
pusha
cmp
add
add
jge
add
cmpb
cmp
add
add
mov
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
and
add
xlat
inc
add
jmp
inc
add
sti
inc
add
add
add
inc
add
addl
add
add
mov
inc
add
add
add
inc
add
pusha
inc
add
xchg
inc
add
ret
add
inc
add
and
add
add
addb
mov
add
loop
add
push
inc
add
inc
inc
add
jae
add
cmpsb
inc
add
mov
inc
add
call
inc
add
adc
add
sub
dec
add
pop
dec
add
jb
add
xchg
dec
add
movsb
dec
add
stos
dec
add
mov
add
mov
dec
add
iret
dec
add
sbb
add
dec
add
dec
add
fisttpll
add
dec
add
lock
add
dec
add
or
add
dec
add
pop
push
add
aad
add
mov
add
iret
push
add
fistl
add
push
add
sbb
add
and
add
push
add
dec
push
add
push
push
add
jno
add
jge
add
rcll
jecxz
add
clc
push
add
pop
push
add
and
sub
cs
add
aas
push
add
inc
push
add
pop
push
add
jae
add
jle
add
push
add
fwait
push
add
leave
push
add
jecxz
add
in
push
add
cmc
push
add
push
add
sbb
add
push
add
ss
add
cmp
add
add
push
add
popa
push
add
mov
add
jecxz
add
inc
push
add
inc
push
add
dec
push
add
pop
push
add
arpl
add
push
add
mov
pop
add
xor
add
inc
pop
add
dec
pop
add
pop
pop
add
pop
pop
add
gs
add
jo
add
sbbb
mov
add
pop
add
mov
add
iret
pop
add
fstps
add
pop
add
pop
add
push
pop
add
pop
pop
add
das
pop
add
cmp
add
add
jbe
add
sbbb
mov
add
pop
add
stos
pop
add
scas
pop
add
rcrb
rcrb
add
pop
add
jecxz
add
in
pop
add
adc
add
sbb
add
pop
add
sub
add
pop
add
cmp
add
inc
pop
add
pop
pop
add
outsb
pop
add
ja
add
sbbl
mov
add
pop
add
mov
pop
add
add
add
pop
add
jns
add
xchg
pop
add
lods
pop
add
xlat
pop
add
fcompl
add
pop
add
push
pop
add
inc
pop
add
fs
add
sbbb
pop
add
mov
pop
add
push
pop
add
push
pop
add
sbb
add
pop
add
ss
add
sbbb
xchg
pop
add
mov
add
mov
pop
add
and
add
pop
add
das
pop
add
ds
add
push
pop
add
jo
add
jns
add
jg
add
mov
add
add
mov
pop
add
cli
pop
add
or
add
dec
pusha
add
jge
add
cltd
pusha
add
scas
pusha
add
std
pusha
add
sbb
add
popa
add
daa
popa
add
cs
add
dec
popa
add
pop
popa
add
pusha
popa
add
popaw
add
andb
mov
add
popa
add
mov
popa
add
lds
add
popa
add
je
add
js
add
jl
add
andb
test
add
bound
add
arpl
add
data16
fldenv
add
add
xchg
add
lods
add
mov
push
add
jp
add
subl
adc
add
imul
add
add
cwtl
insl
add
cld
insl
add
xor
add
jno
add
add
mov
jb
add
jb
add
jb
add
jae
add
jae
add
jbe
add
add
mov
add
sti
jbe
add
add
cwtl
ja
add
ja
add
js
add
add
fdivrs
add
jns
add
jns
add
add
jbe
add
mov
add
cli
jns
add
add
xchg
jp
add
jp
add
jnp
add
jnp
add
add
cmp
jns
add
adc
add
mov
add
loope
add
jmp
add
or
add
add
test
add
addb
inc
addb
addb
add
addb
or
add
and
add
mov
addl
add
add
call
addb
sti
mov
add
mov
add
add
jle
add
mov
add
sub
mov
add
popl
add
add
rorb
add
push
nop
add
adcl
add
nop
add
sti
nop
add
adc
add
mov
add
dec
xchg
add
xchg
xchg
add
fcoms
add
jno
add
mov
add
out
add
repz
add
cmp
add
xchg
add
push
xchg
add
cmp
add
jae
add
das
xchg
add
jb
add
xlat
xchg
add
ficoms
add
or
add
jg
add
push
cwtl
add
sbb
cwtl
add
add
add
pop
cltd
add
sub
add
cmp
cltd
add
sahf
cltd
add
lods
cltd
add
lret
cltd
add
or
add
aas
lcall
fstpl
add
rcrl
add
fwait
add
in
fwait
add
std
fwait
add
dec
pushf
add
push
pushf
add
pop
pushf
add
js
add
sbbl
fcompl
add
popf
add
aaa
sahf
add
xchg
sahf
add
mov
sahf
add
mov
sahf
add
repnz
add
adc
add
xor
add
push
mov
add
jno
add
jbe
add
andb
add
mov
add
fisubl
add
lret
add
mov
add
fsubl
add
movsl
add
test
movsl
add
cmc
movsl
add
xor
add
nop
cmpsb
add
pushf
cmpsb
add
and
add
mov
add
cmpsl
cmpsl
add
scas
cmpsl
add
mov
add
mov
cmpsl
add
in
add
or
add
sub
add
xor
add
cmp
add
inc
test
add
add
add
xchg
test
add
test
add
test
add
test
add
xor
add
cmp
add
inc
test
add
popa
test
add
mov
test
add
int3
test
add
aam
add
fsubrs
add
loopne
add
sub
add
xor
add
cmp
add
mov
add
mov
add
push
stos
add
pop
stos
add
jo
add
mov
add
mov
add
shrb
add
cmp
add
lods
add
or
add
les
add
fdivl
add
divb
add
or
add
inc
mov
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
push
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
and
add
cmp
mov
add
mov
mov
add
aaa
mov
add
dec
mov
add
pop
mov
add
outsl
mov
add
mov
add
mov
add
mov
mov
add
bsf
add
mov
add
cwtl
mov
add
ret
mov
add
mov
add
in
add
ljmp
add
mov
add
inc
mov
add
push
mov
add
jne
add
jge
add
cmpb
add
mov
add
out
mov
add
ss
add
fdivrl
add
xor
add
dec
mov
add
inc
rolb
dec
rolb
test
add
mov
add
movsb
rolb
in
add
jmp
add
cmc
rolb
sbb
roll
cmp
add
fadd
add
loop
add
pusha
lds
add
add
pop
add
xchg
movb
aam
add
fld
add
cwtl
leave
add
popf
leave
add
je
add
jl
add
xchg
lret
pushf
lret
lods
lret
lret
ror
add
fmul
add
in
add
cmc
lret
sti
lret
add
add
and
add
daa
lret
add
cmp
add
dec
lret
add
pop
lret
add
jb
add
aam
add
in
lret
add
repnz
add
dec
add
add
add
pop
int3
add
fs
add
or
add
into
add
and
add
sub
add
xor
add
cmp
add
dec
into
add
dec
into
add
pop
into
add
popa
into
add
imul
add
xchg
add
into
add
xchg
into
add
lahf
into
add
cmpsl
into
add
mov
into
add
out
into
add
or
add
sbb
add
and
add
fmul
add
out
iret
add
sti
iret
add
add
add
push
rolb
add
rolb
add
add
data16
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
rolb
add
rolb
add
add
dec
rolb
add
add
add
jns
add
test
add
mov
add
fwait
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
aad
add
add
inc
aad
add
add
data16
add
add
jnp
add
mov
add
xchg
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
pop
add
adc
add
pop
add
and
add
and
add
cmp
add
jg
add
and
flds
add
flds
add
flds
add
flds
add
add
add
popa
flds
add
add
jno
add
jbe
add
jl
add
mov
add
xchg
flds
add
flds
add
flds
add
flds
add
fiaddl
add
fldl
add
fldl
add
fldl
add
fldl
add
add
inc
fiadds
add
add
push
fiadds
add
add
arpl
add
insb
fiadds
add
add
sti
fiadds
add
filds
add
add
adc
add
filds
add
add
filds
add
add
add
filds
add
add
add
mov
add
rcr
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loop
add
add
mov
add
cmpsl
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
popa
in
add
add
and
add
in
add
in
add
in
add
in
add
in
add
add
cltd
out
add
out
add
out
add
out
add
out
add
out
add
call
add
nop
jmp
add
lahf
jmp
add
test
add
lods
jmp
add
sti
jmp
add
sbb
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
sub
add
ljmp
xchg
ljmp
add
jmp
add
jmp
add
add
xor
add
xor
add
push
jmp
add
add
lods
jmp
add
add
mov
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
add
and
add
and
add
sub
add
sub
add
jl
add
in
add
push
in
add
sbb
add
xor
add
in
add
pushf
in
add
shr
add
out
add
das
out
add
push
out
add
gs
add
xchg
out
add
sahf
out
add
mov
add
in
add
out
out
add
adc
add
and
out
add
jae
add
sub
add
mov
out
add
out
add
or
add
sbb
add
das
lock
cmpsb
lock
mov
add
fdiv
add
div
add
inc
repnz
outsl
repnz
jnp
add
xchg
repnz
mov
add
lret
add
repnz
jecxz
add
call
repnz
cli
repnz
push
repz
popf
repz
mov
repz
add
add
or
add
and
hlt
add
ds
add
inc
hlt
add
dec
hlt
add
ja
add
xchg
hlt
add
mov
hlt
add
adc
add
or
add
pop
testb
cmp
add
fdivr
add
loopne
add
cmp
add
inc
stc
add
clc
stc
add
pop
cli
add
sbb
sti
add
push
cld
add
sbb
add
nop
std
add
stos
std
add
mov
incb
add
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
rolb
add
add
scas
push
add
lret
add
push
add
fadds
add
fiadds
add
pop
pop
add
push
pop
add
gs
add
jns
add
mov
pop
add
or
add
outsb
or
add
add
test
add
xchg
or
add
or
add
or
add
add
aam
add
in
add
push
or
add
or
add
add
orl
mov
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
mov
or
add
out
add
cld
or
add
or
push
add
and
add
aaa
push
add
aas
push
add
push
push
add
pusha
push
add
jo
add
cltd
push
add
int3
push
add
pop
sgdtl
sbb
add
and
add
ja
add
xchg
add
cmpsl
sgdtl
mov
sgdtl
aad
add
repnz
std
sgdtl
pop
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
add
jb
add
adcb
add
adc
add
adc
add
add
adc
add
add
dec
adc
add
add
jne
add
popa
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
lahf
adc
add
mov
adc
add
test
add
mov
push
add
clc
push
add
and
add
das
pop
add
push
pop
add
jno
add
cwtl
pop
add
test
add
mov
pop
add
ficoms
add
out
add
out
pop
add
adc
add
sbb
add
daa
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
add
jae
add
cltd
sbb
add
sbb
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
negb
add
adc
add
jne
add
int
add
out
pop
add
std
pop
add
pop
and
add
and
add
and
add
and
add
add
mov
and
add
add
jmp
add
inc
and
add
and
add
and
add
shlb
add
jle
add
mov
add
leave
add
hlt
add
mov
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
insb
sub
add
sub
add
sub
add
add
inc
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
lods
sub
add
sub
add
sub
add
jae
add
lahf
sub
add
imulb
add
aaa
add
aas
add
push
add
fs
imul
add
jbe
add
movsl
add
shrb
add
jmp
add
lock
adc
add
pop
das
add
data16
add
jbe
add
popf
das
add
leave
das
add
in
das
add
add
add
sbb
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
in
add
std
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
push
xor
add
add
lahf
xor
add
xor
add
add
push
xor
add
add
test
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
jb
add
mov
add
mov
add
mov
add
mov
xor
add
xor
add
xor
add
add
dec
xor
add
add
pop
xor
add
add
add
jp
add
fwait
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
stos
xor
add
sub
add
inc
add
inc
add
outsb
add
add
add
xorb
add
aaa
add
cld
aaa
add
cmp
add
cmp
add
cmp
add
add
in
add
add
add
dec
cmp
add
add
jle
add
mov
add
idivl
add
and
add
fwait
cmp
add
lds
add
out
cmp
add
xor
add
fnstsw
add
hlt
aas
add
stc
aas
add
xor
inc
add
xchg
inc
add
stos
inc
add
lock
add
sti
inc
add
or
add
push
inc
add
sub
add
dec
inc
add
push
inc
add
inc
add
cmp
add
add
nop
inc
add
pusha
inc
add
sub
incl
pop
inc
add
call
dec
add
or
add
pop
dec
add
cmc
dec
add
adc
add
dec
add
ljmp
add
dec
add
pop
dec
add
rorb
add
dec
add
and
add
add
jp
add
lods
dec
add
mov
dec
add
or
add
dec
add
aaa
dec
add
inc
dec
add
dec
dec
add
dec
dec
add
stos
dec
add
mov
add
stc
dec
add
ds
add
and
add
push
add
outsl
push
add
ja
add
xchg
push
add
popf
push
add
lods
push
add
in
push
add
cmp
add
dec
push
add
lea
add
push
add
rclb
out
add
repz
add
add
add
add
pop
push
add
inc
push
add
push
push
add
xchg
push
add
stos
push
add
leave
push
add
aad
add
icebp
push
add
push
push
add
sbb
add
and
cmp
push
push
add
insb
push
add
leave
push
add
rcll
add
push
add
pop
push
add
or
add
sbb
add
push
add
mov
add
push
add
in
push
add
addps
add
pop
add
arpl
add
add
mov
add
pop
add
out
pop
add
push
pop
add
xor
add
add
jno
add
stos
pop
add
mov
add
fcomps
add
pop
add
or
add
pop
add
push
pop
add
iret
pop
add
fistpl
add
pop
add
sti
pop
add
sub
jmp
add
sti
pop
add
or
add
pop
add
ss
add
cmp
pop
add
popa
pop
add
addr16
add
jne
add
jnp
add
test
add
pop
add
mov
pop
add
scas
pop
add
mov
pop
add
lret
pop
add
rcrl
add
pop
add
jmp
pop
add
negl
add
pop
add
adc
add
pop
add
sub
add
pop
add
dec
pop
add
pop
pop
add
jp
add
xchg
pop
add
mov
add
mov
pop
add
adc
add
pop
add
cmp
add
add
pop
pop
add
pop
add
jno
add
jnp
add
mov
add
pop
add
fistps
add
pop
add
repz
add
add
add
pusha
add
punpcklbw
add
pusha
add
pop
pusha
add
sub
add
pusha
add
cmp
add
add
dec
pusha
add
pusha
pusha
add
push
add
jb
add
jp
add
andb
mov
add
pusha
add
mov
add
mov
pusha
add
cli
pusha
add
push
popa
add
bound
add
popa
add
icebp
popa
add
stc
popa
add
adc
add
bound
add
add
cmp
add
add
add
bound
add
add
test
add
bound
add
add
xor
cmp
aas
add
inc
add
xchg
mov
add
jecxz
add
pop
add
mov
add
enter
iret
push
add
push
add
push
add
imul
push
imul
push
imul
pop
imul
jle
add
nop
imul
xchg
imul
stos
insb
add
mov
add
iret
insb
add
fsubrl
jmp
insb
add
std
insb
add
add
insl
add
xor
add
add
insw
add
xchg
add
insl
add
hlt
insl
add
daa
outsb
add
outsb
add
mov
add
iret
outsb
add
aam
add
lock
add
add
add
outsl
add
sbb
add
and
add
xor
add
inc
outsl
add
pop
outsl
add
jo
add
nop
outsl
add
out
add
clc
outsl
add
sbb
add
add
shll
into
jo
add
jo
add
jno
add
jno
add
add
mov
add
int3
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
add
push
jb
add
add
xorb
mov
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jae
add
jae
add
add
push
jae
add
add
add
jno
add
jnp
add
xorl
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
jno
add
je
add
je
add
je
add
je
add
je
add
jne
add
jne
add
jne
add
jne
add
add
pop
jne
add
add
jle
add
mov
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
add
inc
ja
add
add
add
add
popa
ja
add
add
mov
add
js
add
add
xor
add
js
add
jns
add
jns
add
jns
add
jns
add
jp
add
jp
add
add
lea
fdivrs
xor
add
add
push
jge
add
jge
add
jge
add
jle
add
jle
add
jg
add
jg
add
add
insl
jg
add
addb
mov
addb
roll
add
addb
int
add
roll
add
flds
add
popl
add
mov
addl
add
add
fiaddl
add
add
jle
add
out
xchg
add
mov
add
add
dec
mov
add
mov
add
add
sub
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
mov
add
add
xchg
mov
add
mov
add
add
orl
lahf
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
mov
add
mov
add
add
jge
add
mov
add
stos
popl
add
popl
add
popl
add
popl
add
popl
add
nop
add
sub
add
dec
nop
add
pop
nop
add
push
add
jbe
add
mov
add
movsl
nop
add
mov
nop
add
aam
add
ficoms
add
add
xchg
add
sub
add
dec
xchg
add
pop
xchg
add
imul
add
mov
add
rclb
add
call
add
adc
xchg
add
inc
xchg
add
insb
xchg
add
adcl
add
mov
xchg
add
enter
ficoms
add
addr16
add
jno
add
nop
xchg
add
mov
add
iret
xchg
add
fsts
add
adc
add
sbb
add
ret
xchg
add
int3
xchg
add
fcoms
add
xchg
add
clc
xchg
add
push
xchg
add
sbb
add
cmp
add
dec
xchg
add
fs
add
outsl
xchg
add
jnp
add
xchg
xchg
add
pushf
xchg
add
test
add
mov
xchg
add
aad
add
in
xchg
add
clc
xchg
add
add
add
sbb
add
cmp
add
dec
xchg
add
pop
xchg
add
jne
add
adcb
add
add
mov
xchg
add
in
add
in
xchg
add
notb
add
and
add
inc
xchg
add
dec
xchg
add
arpl
add
nop
xchg
add
stos
xchg
add
mov
add
lds
add
in
xchg
add
xchg
add
es
add
das
cwtl
add
push
cwtl
add
imul
add
mov
add
mov
add
leave
cwtl
add
repz
add
adc
add
xor
add
pop
cltd
add
jp
add
test
add
lds
add
in
cltd
add
add
add
inc
lcall
test
add
sub
add
aas
pushf
add
jns
add
add
add
sub
add
add
mov
add
dec
mov
add
pop
mov
add
ja
add
xchg
mov
add
mov
add
jmp
add
or
movsb
add
cmp
add
push
movsb
add
pop
movsb
add
jno
add
mov
movsb
add
add
add
daa
movsl
add
movsl
add
cwtl
movsl
add
mov
movsl
add
ljmp
add
movsl
add
montmul
cmpsb
add
dec
cmpsb
add
andb
add
cmpsb
add
stos
cmpsb
add
mov
add
shll
add
cmpsb
add
or
add
inc
cmpsl
add
dec
cmpsl
add
imul
add
mov
cmpsl
add
ljmp
add
add
js
add
mov
add
mov
add
out
test
add
test
add
inc
test
add
pop
test
add
fsubrs
add
push
stos
add
subb
add
stos
add
mov
stos
add
mov
stos
add
lret
add
stos
add
fldt
add
out
stos
add
clc
stos
add
stos
add
add
stos
add
adc
add
xor
add
push
stos
add
test
add
xchg
stos
add
cltd
stos
add
cmpsb
stos
add
mov
stos
add
iret
stos
add
fldcw
add
in
add
add
add
sbb
add
add
xchg
lods
add
stos
lods
add
shrl
add
add
js
add
mov
add
sahf
lods
add
cmpsl
lods
add
mov
add
mov
lods
add
xlat
lods
add
add
pusha
scas
add
gs
add
xchg
scas
add
scas
scas
add
mov
scas
add
jecxz
add
or
add
std
scas
add
add
add
sbb
add
daa
mov
add
mov
add
mov
add
mov
add
add
mov
mov
add
mov
add
mov
add
add
fs
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jge
add
xchg
mov
add
add
pop
mov
add
mov
add
add
and
add
popa
mov
add
mov
add
add
add
mov
mov
add
repz
add
test
add
mov
add
adc
add
pop
mov
add
mov
add
mov
add
fidivrl
add
or
mov
add
jne
add
xchg
add
cmpsb
mov
add
sti
mov
add
mov
add
sbb
add
sub
add
arpl
add
scas
rolb
mov
roll
inc
roll
fadd
add
arpl
add
fcmovb
add
jmp
add
test
add
ret
add
pop
ret
add
and
add
lods
ret
add
mov
add
into
ret
add
in
ret
add
test
add
les
add
add
arpl
add
jg
add
test
add
test
les
add
les
add
lds
add
lds
add
add
add
add
lds
add
movb
movb
mov
movb
lock
xchg
add
mov
add
mov
add
ffreep
add
in
add
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
add
mov
add
iret
leave
add
aad
add
stc
leave
add
adc
add
push
lret
push
lret
xchg
lret
lret
jecxz
add
inc
lret
add
cltd
int3
add
in
add
call
int3
add
lock
add
ja
add
jle
add
cli
int
add
into
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
pop
rolb
add
rolb
add
add
xchg
add
mov
rolb
add
add
mov
add
aad
add
add
xlat
add
mov
add
sbb
add
arpl
add
add
sub
add
inc
flds
add
add
flds
add
fiaddl
add
fildl
add
add
jne
add
neg
add
xor
faddl
add
add
and
add
popf
fiadds
add
fiadds
add
filds
add
loopne
add
loopne
add
loope
add
add
add
add
inc
loop
add
add
inc
jecxz
add
jecxz
add
add
dec
in
add
add
outsb
in
add
in
add
in
add
in
add
add
mov
add
mov
in
add
add
xchg
out
add
out
add
out
add
out
add
jmp
add
stc
in
add
add
add
or
add
inc
in
add
dec
in
add
push
in
add
pop
in
add
xchg
in
add
pushf
in
add
mov
in
add
xlat
in
add
fsubr
add
loop
add
jmp
out
add
sbb
add
ds
add
inc
out
add
dec
out
add
push
out
add
shr
add
in
add
sbb
out
add
inc
out
add
pusha
out
add
fs
add
out
add
fucomi
add
and
add
xchg
icebp
add
cmp
add
xchg
repnz
sub
add
xor
add
aaa
repz
inc
repz
mov
repz
fpatan
add
out
add
in
repz
sub
add
cmpsl
hlt
add
scas
hlt
add
sub
cmc
add
pop
cmc
add
pop
cmc
add
data16
add
and
add
test
add
in
cli
add
or
sti
add
adc
add
ljmp
add
add
add
add
jp
add
mov
add
in
add
and
add
add
add
add
add
add
add
enter
sbb
add
add
xor
add
popa
or
add
add
int
add
adc
add
mov
add
dec
adc
add
adc
add
add
jno
add
scas
sbb
add
sbb
add
fcomps
add
es
add
pop
push
add
inc
and
add
and
add
and
add
and
add
aad
add
subl
add
loope
add
add
add
stos
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
push
add
popa
add
xchg
add
popf
add
mov
add
mov
add
ret
add
add
add
cld
add
push
das
add
adc
add
xor
add
inc
das
add
push
das
add
fs
add
jb
add
jg
add
xchg
add
xchg
das
add
sahf
das
add
mov
add
int
add
shrl
add
fisubrl
add
repz
add
pop
xor
add
add
insl
xor
add
add
in
add
push
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
enter
jecxz
add
push
add
cmp
add
pop
aaa
add
inc
aaa
add
mov
add
mov
aaa
add
ret
aaa
add
jns
add
fidivrl
add
in
cmp
add
cmp
add
add
pop
cmp
add
add
push
cmp
add
cmp
add
cmp
add
add
xchg
add
lods
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sarb
add
add
xor
add
jno
add
scas
add
imul
add
jecxz
add
hlt
aas
add
jns
add
jmp
add
repz
add
cld
inc
add
jg
add
repz
add
mov
inc
add
mov
add
inc
add
sub
add
add
jbe
add
popf
inc
add
mov
add
sti
inc
add
insl
dec
add
cwtl
dec
add
mov
add
out
add
or
dec
add
inc
dec
add
orb
dec
add
fisttps
add
add
cmp
dec
add
fmuls
add
dec
add
push
dec
add
jecxz
add
and
pop
dec
add
test
cmc
dec
add
ds
add
arpl
add
dec
add
xor
add
dec
add
mov
add
adcb
nop
push
add
mov
push
add
rclb
rcll
add
push
add
lock
add
add
add
push
add
and
add
push
add
inc
push
add
push
push
add
popa
push
add
inc
add
push
add
popa
add
jb
add
andb
xchg
add
test
add
adc
add
add
je
add
subl
add
add
jb
add
test
push
add
imul
pop
imul
imul
mov
insb
add
push
insb
add
lcall
add
add
bound
add
jo
add
jno
add
add
pop
jno
add
add
push
add
stos
jno
add
jb
add
jb
add
add
push
jb
add
add
xorl
add
jb
add
jae
add
add
mov
add
sbb
add
add
inc
js
add
js
add
js
add
jns
add
add
xchg
jns
add
jns
add
jns
add
jp
add
jp
add
jp
add
jp
add
jnp
add
add
stos
jnp
add
jnp
add
jnp
add
jl
add
add
xchg
movsl
jl
add
jl
add
jl
add
add
mov
jg
add
add
jl
add
xchg
addb
lret
add
addb
mov
add
add
add
xor
add
inc
addb
sbb
add
ja
add
xchg
test
add
add
cwtl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
test
add
mov
add
lea
add
lea
add
lea
add
add
mov
add
mov
add
add
xchg
popl
add
popl
add
popl
add
nop
add
mov
add
rclb
add
fcoms
add
jae
add
mov
add
ret
add
xchg
add
and
add
mov
xchg
add
scas
xchg
add
rcll
add
xchg
add
jp
add
xchg
xchg
add
mov
xchg
add
sub
add
ret
xchg
add
ficoms
add
ss
add
ja
add
jle
add
mov
add
in
xchg
add
pop
cwtl
add
scas
cwtl
add
mov
cltd
add
mov
cltd
add
mov
add
int3
cltd
add
fstpl
add
push
lcall
jno
add
jle
add
sbbl
add
lcall
rcrl
add
lcall
sub
add
dec
fwait
add
gs
add
jge
add
mov
add
enter
int
add
repnz
add
add
add
pushf
add
inc
pushf
add
jle
add
and
add
fwait
popf
add
lods
popf
add
mov
lahf
add
ret
add
mov
add
add
add
and
add
push
mov
add
jno
add
jg
add
mov
add
mov
mov
add
repz
add
ljmp
add
movsl
add
in
add
mull
add
sbb
add
and
add
imul
add
subl
add
add
add
pop
stos
add
inc
stos
add
mov
add
shrb
add
cmp
add
lods
add
rep
add
lods
add
dec
lods
add
arpl
add
sbb
add
pop
scas
add
xchg
scas
add
mov
add
ret
scas
add
and
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
mov
add
mov
add
mov
add
mov
add
add
stos
mov
add
mov
add
mov
add
mov
add
add
int
add
clc
mov
add
mov
add
insl
mov
add
ret
mov
add
ret
mov
add
sbb
add
cmp
add
push
mov
add
cmpb
add
mov
add
ret
mov
add
and
add
mov
add
mov
add
ret
mov
add
inc
mov
add
loop
add
cli
mov
add
xor
rolb
inc
rolb
dec
rolb
ret
rolb
loop
add
ja
add
xchg
roll
fwait
roll
mov
roll
loope
add
adc
add
xor
add
dec
ret
push
ret
adc
add
cmp
add
inc
ret
add
dec
ret
add
arpl
add
imul
add
mov
add
movsb
ret
add
aam
add
fcmovnb
add
loope
add
call
les
add
les
add
les
add
les
add
lds
add
lds
add
add
lret
lds
add
movb
movb
xchg
movb
lcall
add
movb
lret
add
enter
enter
enter
leave
add
adc
add
and
add
xchg
leave
add
fcmovne
add
dec
lret
js
add
xchg
lret
lret
in
lret
add
add
daa
lret
add
lret
add
stos
lret
add
ret
lret
add
lock
add
adc
add
and
add
xor
add
push
int3
add
popa
int3
add
jno
add
xchg
int3
add
mov
int3
add
int
add
add
int
add
add
insb
int
add
add
jo
add
iret
add
repnz
add
xor
add
dec
rolb
add
add
ret
rolb
add
rolb
add
aam
add
add
pop
aam
add
aam
add
aad
add
add
mov
xlat
add
pop
fadds
add
flds
add
fiaddl
add
add
test
add
mov
add
mov
fldl
add
add
pusha
loopne
add
add
and
add
loopne
add
loop
add
add
loop
add
loop
add
loop
add
jecxz
add
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
push
add
mov
in
add
in
add
in
add
out
add
add
pop
out
add
add
std
out
add
out
add
out
add
out
add
add
push
out
add
add
jno
add
xchg
out
add
out
add
call
add
mov
add
fucomi
add
icebp
call
add
sub
add
jmp
add
ds
shr
add
imul
add
mov
add
mov
in
add
push
out
add
xchg
out
add
lcall
add
out
add
ljmp
add
lock
arpl
add
mov
add
mov
lock
adc
add
adc
add
push
repnz
pop
repnz
imul
add
repnz
ljmp
add
repz
jb
add
jp
add
xor
add
repz
adc
add
sbb
add
and
add
xor
add
cmc
add
iret
cmc
add
xor
add
inc
testb
push
testb
testb
jo
add
xor
add
mov
testb
xlat
testb
add
add
and
add
push
testl
add
clc
add
mov
add
mov
clc
add
in
add
idiv
add
clc
add
and
add
sub
add
cmp
add
inc
stc
add
pusha
stc
add
push
add
jl
add
cmp
add
add
add
cmp
add
cli
add
scas
cli
add
sar
add
cli
add
jmp
cli
add
add
sti
add
sub
add
xor
add
inc
sti
add
dec
sti
add
xor
add
inc
incb
add
add
arpl
add
mov
add
cwtl
incb
add
incl
add
add
jecxz
add
lea
add
ret
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
jno
add
lahf
and
add
and
add
and
add
and
add
and
add
and
add
add
xchg
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
add
imul
add
add
xchg
add
lcall
add
add
repnz
clc
add
add
add
or
add
pop
daa
add
and
add
sub
add
aaa
daa
add
inc
daa
add
dec
daa
add
pop
daa
add
bound
add
insl
daa
add
jns
add
xchg
add
daa
add
lcall
add
daa
add
enter
into
daa
add
icebp
daa
add
or
add
sub
add
push
sub
add
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
add
imul
add
mov
sub
add
sub
add
sub
add
add
jl
add
xchg
sub
add
sub
add
sub
add
add
push
sub
add
add
mov
add
test
sub
add
sub
add
sub
add
add
pop
sub
add
add
mov
sub
add
sub
add
dec
sub
add
gs
add
test
add
movsl
sub
add
lds
add
ucomiss
add
add
cmp
add
pop
add
insl
add
jge
add
lea
add
popf
add
lods
add
shrl
add
imull
add
sbb
add
aas
das
add
addr16
add
test
add
cltd
das
add
lods
das
add
shrl
add
das
add
jmp
das
add
adc
add
and
xor
add
add
popa
xor
add
add
mov
add
stos
xor
add
xor
add
xor
add
xor
add
add
add
add
in
add
cld
xor
add
add
inc
xor
add
add
xor
add
xor
add
xor
add
add
sub
add
js
add
cltd
xor
add
xor
add
add
test
add
xor
add
xor
add
add
pop
xor
add
cltd
xor
add
stc
xor
add
cmp
add
pop
add
jns
add
cltd
add
shll
add
add
stc
add
and
add
inc
aaa
add
imul
add
lods
aaa
add
leave
aaa
add
add
add
and
add
inc
cmp
add
add
mov
add
mov
cmp
add
cmp
add
add
mov
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
mov
add
add
sub
add
imul
add
push
add
jno
add
xchg
add
mov
add
in
add
and
aas
add
popa
aas
add
jns
add
cltd
aas
add
mov
aas
add
stc
aas
add
sbb
add
add
popa
inc
add
jns
add
mov
inc
add
jmp
inc
add
sub
add
add
add
mov
add
add
jmp
inc
add
xor
add
add
add
mov
add
inc
add
jmp
inc
add
dec
inc
add
rclb
les
add
push
add
aam
add
fcoms
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
adcb
test
add
push
add
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
les
add
push
add
int3
push
add
rclb
add
push
add
fcoms
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
adcb
test
add
push
add
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
les
add
push
add
int3
push
add
rclb
add
push
add
fcoms
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
or
add
adc
adc
add
sbb
sbb
add
and
and
add
sub
sub
add
xor
xor
add
cmp
cmp
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
adcb
push
add
mov
mov
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
push
add
enter
int3
push
add
rclb
aam
add
fcoms
fcoml
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
add
adc
add
add
sbb
add
and
add
add
sub
add
xor
add
add
cmp
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
adcb
test
add
push
add
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
les
add
push
add
int3
push
add
rclb
add
push
add
fcoms
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
insb
push
add
jo
add
je
add
js
add
jl
add
adcb
test
add
push
add
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
les
add
push
add
int3
push
add
rclb
add
push
add
fcoms
add
push
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
add
add
add
or
add
add
adc
add
add
sub
add
xor
add
add
insb
push
add
js
add
test
add
add
mov
push
add
mov
push
add
int3
push
add
rclb
add
push
add
call
push
add
hlt
push
add
clc
push
add
add
add
or
add
pop
add
and
add
add
xor
add
pop
add
cmp
add
inc
pop
add
dec
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
pop
add
pusha
pop
add
fs
add
push
pop
add
jo
add
je
add
js
add
jl
add
sbbb
test
add
pop
add
nop
pop
add
xchg
pop
add
cwtl
pop
add
pushf
pop
add
mov
pop
add
test
add
lods
pop
add
mov
add
mov
add
mov
pop
add
rcrb
les
add
pop
add
int3
pop
add
rcrb
add
pop
add
fcomps
add
pop
add
loopne
add
in
add
call
pop
add
lock
add
hlt
pop
add
clc
pop
add
cld
pop
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
pop
add
inc
pop
add
dec
pop
add
dec
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
pop
add
pusha
pop
add
fs
add
push
pop
add
jo
add
je
add
js
add
jl
add
sbbb
test
add
pop
add
nop
pop
add
xchg
pop
add
cwtl
pop
add
pushf
pop
add
mov
popa
add
xor
add
add
cmp
add
add
inc
popa
add
inc
popa
add
dec
popa
add
dec
popa
add
push
popa
add
push
popa
add
pop
popa
add
pop
popa
add
pusha
popa
add
fs
add
lods
add
mov
add
mov
add
les
enter
push
add
pop
add
pusha
add
add
push
add
jo
add
je
add
js
add
jl
add
mov
add
add
xchg
add
cwtl
add
pushf
add
mov
add
test
add
lods
add
mov
add
mov
add
mov
add
shlb
les
add
add
int3
add
shlb
add
add
fsubs
add
add
loopne
add
in
add
call
add
lock
hlt
add
clc
add
cld
add
add
add
add
or
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
pusha
add
add
push
add
jo
add
je
add
js
add
jl
add
andb
test
add
add
nop
add
xchg
add
cwtl
add
pushf
add
mov
add
mov
add
mov
add
shlb
les
add
add
int3
add
lock
hlt
add
clc
add
cld
add
xor
add
cmp
add
add
inc
push
add
dec
push
add
pop
push
add
pusha
push
add
jo
add
jl
add
subb
test
add
push
add
xchg
push
add
pushf
push
add
movsb
push
add
lods
push
add
mov
add
mov
push
add
les
add
push
add
shrb
add
push
add
fsubrl
add
push
add
call
push
add
hlt
push
add
cld
push
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
dec
insl
add
push
insl
add
pop
outsb
add
outsb
add
insb
outsb
add
je
add
jl
add
test
add
add
pushf
outsb
add
movsb
outsb
add
lods
outsb
add
mov
add
mov
outsb
add
int3
outsb
add
aam
add
fsubrl
add
outsb
add
in
outsb
add
hlt
outsb
add
cld
outsb
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
outsl
add
dec
outsl
add
push
outsl
add
pop
outsl
add
outsl
add
insb
outsl
add
je
add
jl
add
test
add
add
pushf
outsl
add
movsb
outsl
add
lods
outsl
add
mov
add
mov
outsl
add
int3
outsl
add
aam
add
fsubrl
add
outsl
add
in
outsl
add
hlt
outsl
add
cld
outsl
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jo
add
add
add
add
add
add
add
add
add
xchg
jo
add
add
lods
jo
add
add
les
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jno
add
add
add
add
add
add
add
add
add
xchg
jno
add
add
lods
jno
add
add
les
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jb
add
add
add
add
add
add
add
add
add
xchg
jb
add
add
lods
jb
add
add
les
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jae
add
add
add
add
add
add
add
add
add
xchg
jae
add
add
lods
jae
add
add
les
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
je
add
add
add
add
add
add
add
add
add
xchg
je
add
add
lods
je
add
add
les
int3
je
add
je
add
je
add
je
add
je
add
je
add
je
add
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jne
add
add
add
add
add
add
add
add
add
xchg
jne
add
add
lods
jne
add
add
les
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jbe
add
add
add
add
add
add
add
add
xchg
jbe
add
add
lods
jbe
add
add
les
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
ja
add
add
add
add
add
add
add
add
add
xchg
ja
add
add
lods
ja
add
add
les
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
js
add
add
add
add
add
add
add
add
add
xchg
js
add
add
lods
js
add
add
les
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jns
add
add
add
add
add
add
add
add
add
xchg
jns
add
add
lods
jns
add
add
les
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jp
add
add
add
add
add
add
add
add
add
xchg
jp
add
add
lods
jp
add
add
les
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jnp
add
add
add
add
add
add
add
add
add
xchg
jnp
add
add
lods
jnp
add
add
les
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jl
add
add
add
add
add
add
add
add
add
xchg
jl
add
add
lods
jl
add
add
les
int3
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jge
add
add
add
add
add
add
add
add
add
xchg
jge
add
add
lods
jge
add
add
les
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jle
add
add
add
add
add
insb
jle
add
add
je
add
js
add
jl
add
cmpb
test
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jg
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
jg
add
add
add
dec
jg
add
add
push
jg
add
add
pop
jg
add
add
fs
add
add
insb
jg
add
add
je
add
js
add
jl
add
cmpb
test
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
addb
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
addb
inc
addb
dec
addb
dec
addb
push
addb
push
addb
pop
addb
pop
addb
pusha
addb
addb
push
addb
jo
add
je
add
js
add
jl
add
addb
add
addb
nop
addb
xchg
addb
cwtl
addb
pushf
addb
mov
addb
test
add
lods
addb
mov
add
mov
add
mov
addb
rolb
add
addb
int3
addb
rolb
add
fadds
add
loopne
add
in
add
call
addb
lock
hlt
addb
clc
addb
cld
addb
add
add
or
add
adc
add
cwtl
mov
add
add
movsb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
mov
add
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
mov
add
add
insb
mov
add
add
je
add
js
add
jl
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
or
add
mov
add
add
sbb
add
mov
add
add
sub
add
mov
add
add
cmp
add
add
inc
mov
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
mov
add
add
insb
mov
add
add
je
add
js
add
jl
add
orb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
lea
add
add
add
dec
lea
add
add
push
lea
add
add
pop
lea
add
add
lea
add
add
insb
lea
add
add
je
add
js
add
jl
add
orb
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
mov
add
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
mov
add
add
insb
mov
add
add
je
add
js
add
jl
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
popl
add
add
add
dec
popl
add
add
push
popl
add
add
pop
popl
add
add
popl
add
add
insb
popl
add
add
je
add
js
add
jl
add
orb
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
nop
add
add
add
or
add
cmp
add
inc
nop
add
inc
nop
add
dec
nop
add
dec
nop
add
push
nop
add
push
nop
add
pop
nop
add
pop
nop
add
pusha
nop
add
fs
add
push
nop
add
jo
add
je
add
js
add
jl
add
adcb
add
nop
add
nop
nop
add
xchg
nop
add
cwtl
nop
add
pushf
nop
add
mov
nop
add
test
add
lods
nop
add
mov
add
mov
add
mov
nop
add
rclb
add
nop
add
int3
nop
add
rclb
add
fcoms
add
loopne
add
in
add
call
nop
add
lock
add
hlt
nop
add
clc
nop
add
cld
nop
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
xchg
add
or
add
adc
add
xchg
add
sbb
add
and
add
xchg
add
sub
add
xor
add
xchg
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
mov
add
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
enter
int3
xchg
add
rclb
add
xchg
add
fcoml
add
xchg
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
pop
xchg
add
pusha
xchg
add
fs
add
push
xchg
add
jo
add
je
add
js
add
jl
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
dec
xchg
add
push
xchg
add
push
xchg
add
pop
xchg
add
adcb
add
xchg
add
nop
xchg
add
xchg
xchg
add
cwtl
xchg
add
pushf
xchg
add
mov
xchg
add
test
add
lods
xchg
add
mov
add
mov
add
mov
xchg
add
rclb
add
xchg
add
int3
xchg
add
rclb
add
fcoms
add
loopne
add
in
add
call
xchg
add
lock
add
hlt
xchg
add
clc
xchg
add
cld
xchg
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
cwtl
add
inc
cwtl
add
dec
cwtl
add
dec
cwtl
add
push
cwtl
add
push
cwtl
add
pop
cwtl
add
pop
cwtl
add
pusha
cwtl
add
fs
add
push
cwtl
add
jo
add
je
add
js
add
jl
add
sbbb
add
cwtl
add
nop
cwtl
add
xchg
cwtl
add
cwtl
cwtl
add
pushf
cwtl
add
mov
cwtl
add
test
add
lods
cwtl
add
mov
add
mov
add
mov
cwtl
add
rcrb
add
cwtl
add
int3
cwtl
add
rcrb
add
fcomps
add
loopne
add
in
add
call
cwtl
add
lock
add
hlt
cwtl
add
clc
cwtl
add
cld
cwtl
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
cltd
add
inc
cltd
add
dec
cltd
add
dec
cltd
add
push
cltd
add
push
cltd
add
pop
cltd
add
pop
cltd
add
pusha
cltd
add
fs
add
push
cltd
add
jo
add
je
add
js
add
jl
add
sbbb
add
cltd
add
nop
cltd
add
xchg
cltd
add
cwtl
cltd
add
pushf
cltd
add
mov
cltd
add
test
add
lods
cltd
add
mov
add
mov
add
mov
cltd
add
rcrb
add
cltd
add
int3
cltd
add
rcrb
add
fcomps
add
loopne
add
in
add
call
cltd
add
lock
add
hlt
cltd
add
clc
cltd
add
cld
cltd
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
lcall
dec
lcall
push
lcall
pop
lcall
pusha
lcall
push
lcall
je
add
js
add
jl
add
sbbb
add
add
add
push
jecxz
add
add
pop
jecxz
add
add
fs
add
add
insb
jecxz
add
add
je
add
js
add
jl
add
and
add
add
mov
add
nop
jecxz
add
add
pushf
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
add
or
add
or
add
adc
add
adc
add
sbb
add
sbb
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
in
add
add
add
dec
in
add
add
push
in
add
add
pop
in
add
add
fs
add
add
insb
in
add
add
je
add
js
add
jl
add
and
add
add
mov
add
nop
in
add
add
pushf
in
add
in
add
in
add
in
add
in
add
in
add
clc
in
add
or
add
sbb
add
and
add
sub
add
inc
out
add
push
out
add
fs
add
push
out
add
mov
add
mov
out
add
mov
out
add
aam
add
in
add
call
out
add
or
add
or
add
adc
add
and
add
xor
add
cmp
add
inc
out
add
pop
out
add
jo
add
je
add
mov
add
pushf
out
add
mov
out
add
mov
out
add
shr
add
fsubr
add
lock
add
or
add
or
add
and
add
xor
add
cmp
add
inc
lock
pop
lock
jo
add
je
add
js
add
mov
add
pushf
lock
mov
lock
shl
add
lock
enter
fdiv
add
in
lock
lock
clc
lock
adc
add
adc
add
sub
add
cmp
add
inc
icebp
add
dec
icebp
add
pusha
icebp
add
fs
add
jl
add
mov
add
nop
icebp
add
cwtl
icebp
add
mov
add
icebp
add
aam
add
fdiv
add
loopne
add
clc
icebp
add
adc
add
adc
add
sbb
add
sub
add
cmp
add
inc
repnz
dec
repnz
dec
repnz
repnz
je
add
js
add
xor
add
repnz
mov
repnz
repnz
enter
shl
add
call
repz
add
add
or
add
sbb
add
sub
add
xor
add
cmp
add
cmp
add
push
repz
repz
push
repz
test
add
xchg
repz
cwtl
repz
pushf
repz
mov
add
repz
enter
shl
add
call
hlt
add
add
add
sbb
add
sub
add
xor
add
cmp
add
push
hlt
add
pop
hlt
add
jo
add
jl
add
nop
hlt
add
pushf
hlt
add
mov
hlt
add
lods
hlt
add
mov
add
shl
add
hlt
add
in
add
lock
add
or
add
sbb
add
xor
add
inc
cmc
add
pop
cmc
add
fs
add
jo
add
mov
add
xchg
cmc
add
mov
cmc
add
cmc
add
shl
add
in
cmc
add
hlt
cmc
add
add
add
sbb
add
and
add
xor
add
dec
testb
pop
testb
je
add
jl
add
nop
testb
pushf
testb
mov
testb
lods
testb
mov
add
shl
add
testb
call
testl
add
add
cmp
add
push
testl
add
add
add
add
xchg
testl
add
add
in
add
in
testl
add
add
sbb
add
sub
add
inc
clc
add
dec
clc
add
push
clc
add
pop
clc
add
fs
add
insb
clc
add
js
add
xchg
clc
add
mov
clc
add
fdivr
add
in
clc
add
clc
clc
add
adc
add
sbb
add
sub
add
xor
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
insb
stc
add
mov
add
pushf
stc
add
movsb
stc
add
mov
stc
add
enter
int3
stc
add
sar
add
fdivr
add
in
add
in
stc
add
add
add
or
add
adc
add
adc
add
sbb
add
and
add
xor
add
dec
cli
add
push
cli
add
pusha
cli
add
jl
add
test
add
nop
cli
add
lods
cli
add
mov
add
sar
add
cli
add
call
sti
add
or
add
and
add
xor
add
dec
sti
add
pop
sti
add
je
add
cmp
add
add
mov
add
int3
sti
add
aam
add
fdivr
add
call
sti
add
and
add
xor
add
inc
cld
add
pop
cld
add
push
cld
add
mov
add
mov
cld
add
mov
add
mov
add
mov
cld
add
int3
cld
add
fdivr
add
hlt
cld
add
cld
cld
add
or
add
and
add
sub
add
xor
add
cmp
add
inc
std
add
dec
std
add
push
std
add
pusha
std
add
jl
add
mov
add
movsb
std
add
mov
add
int3
std
add
fdivr
add
hlt
std
add
cld
std
add
add
add
or
add
adc
add
sbb
add
and
add
xor
add
dec
incb
add
add
je
add
cmp
add
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incl
add
add
sub
add
inc
incl
add
add
insb
incl
add
add
xchg
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
sbb
add
and
add
cmp
add
inc
add
dec
add
dec
add
push
add
pop
add
push
add
nop
add
lods
add
mov
add
mov
add
int3
add
fadds
add
hlt
add
add
add
sbb
add
sub
add
inc
add
dec
add
pusha
add
insb
add
jo
add
je
add
jl
add
test
add
nop
add
lods
add
mov
add
faddl
add
lock
cld
add
adc
add
sbb
add
and
add
and
add
sub
add
xor
add
inc
add
pop
add
push
add
mov
add
nop
add
pushf
add
movsb
add
mov
add
int3
add
fadds
add
hlt
add
add
add
sbb
add
sub
add
inc
add
push
add
insb
add
je
add
addb
add
add
les
add
rolb
add
in
add
hlt
add
cld
add
or
add
add
xor
add
add
add
add
jl
add
test
add
add
add
add
faddl
add
add
add
add
add
add
add
add
add
and
add
xor
add
pop
add
add
jl
add
mov
add
lods
add
add
aam
add
loopne
add
cld
add
add
adc
add
sub
add
cmp
add
push
push
add
pop
push
add
push
push
add
mov
add
xchg
push
add
mov
push
add
les
add
rolb
add
in
push
add
clc
push
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
pop
add
pop
pop
add
push
pop
add
mov
add
cwtl
pop
add
mov
add
mov
pop
add
int3
pop
add
aam
add
faddl
add
in
add
in
pop
add
hlt
pop
add
cld
pop
add
add
add
or
add
adc
add
sbb
add
and
add
xor
add
dec
or
push
or
pop
or
jo
add
jl
add
orb
add
add
xchg
or
mov
or
les
add
int3
or
aam
add
fmull
add
call
or
adc
add
sub
add
xor
add
dec
or
push
or
pop
or
pop
or
pusha
or
insb
or
je
add
orb
add
add
lods
or
mov
add
mov
or
int3
or
aam
add
fmull
add
in
add
lock
or
add
sbb
add
xor
add
cmp
add
dec
or
or
jo
add
mov
add
xchg
or
pushf
or
movsb
or
lods
or
mov
add
mov
or
fmull
add
loopne
add
in
add
call
or
cld
or
or
add
and
add
xor
add
dec
or
pop
or
je
add
orb
add
add
mov
or
enter
int3
or
rorb
add
fmull
add
in
add
lock
or
add
adc
add
sub
add
add
cmp
add
add
inc
or
add
add
add
add
jl
add
mov
add
add
mov
or
add
or
add
or
add
add
xor
add
cmp
add
dec
or
add
insb
or
add
xchg
or
add
movsb
or
add
int3
or
add
hlt
or
add
sbb
add
sub
add
inc
push
add
dec
push
add
push
push
add
pop
push
add
push
push
add
mov
add
cwtl
push
add
mov
add
mov
push
add
in
add
in
push
add
hlt
push
add
cld
push
add
add
add
adc
add
sub
add
cmp
add
push
add
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
sbb
add
and
add
sub
add
cmp
add
push
adc
pop
adc
adc
insb
adc
je
add
adcb
add
add
lods
adc
mov
adc
fcoml
add
lock
cld
adc
add
add
add
add
or
add
adc
add
and
add
cmp
add
inc
adc
push
adc
insb
adc
js
add
xchg
adc
pushf
adc
movsb
adc
lods
adc
mov
add
mov
adc
int3
adc
aam
add
fcoml
add
call
adc
or
add
sbb
add
xor
add
cmp
add
inc
adc
dec
adc
pop
adc
je
add
jl
add
test
add
mov
add
xchg
adc
mov
adc
les
add
int3
adc
aam
add
fcoml
add
in
add
in
adc
clc
adc
adc
add
sbb
add
and
add
cmp
add
inc
adc
pop
adc
adc
push
adc
jo
add
jl
add
test
add
nop
adc
lods
adc
mov
add
rclb
add
adc
call
adc
add
adc
add
add
xor
add
cmp
add
inc
adc
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
and
add
inc
adc
add
push
adc
add
je
add
js
add
jl
add
adcb
add
add
mov
adc
add
in
adc
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
push
add
pop
push
add
fs
add
insb
push
add
je
add
jl
add
mov
add
movsb
push
add
lods
push
add
mov
add
mov
push
add
int3
push
add
fcoms
add
hlt
push
add
cld
push
add
or
add
and
add
sub
add
cmp
add
push
pop
add
pop
pop
add
push
pop
add
mov
add
xchg
pop
add
pushf
pop
add
test
add
les
add
int3
pop
add
aam
add
fcoml
add
in
add
in
pop
add
add
add
or
add
adc
add
adc
add
sbb
add
and
add
sub
add
cmp
add
push
sbb
pusha
sbb
jl
add
test
add
nop
sbb
lods
sbb
mov
sbb
loopne
add
cld
sbb
or
add
and
add
xor
add
dec
sbb
pop
sbb
je
add
sbbb
add
add
mov
add
int3
sbb
aam
add
fcompl
add
call
sbb
adc
add
sub
add
xor
add
inc
sbb
pop
sbb
push
sbb
mov
add
xchg
sbb
mov
sbb
mov
sbb
hlt
sbb
add
add
or
add
sbb
add
inc
sbb
push
sbb
pusha
sbb
jl
add
test
add
nop
sbb
lods
sbb
mov
sbb
loopne
add
cld
sbb
or
add
add
xor
add
add
add
je
add
jl
add
mov
add
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
xor
add
pop
sbb
add
sbbb
add
sbb
add
aam
add
loopne
add
cld
sbb
add
or
add
add
add
or
add
or
add
adc
add
adc
add
sbb
add
sbb
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
xor
inc
xor
dec
xor
dec
xor
push
xor
push
xor
pop
xor
pop
xor
pusha
xor
xor
push
xor
jo
add
je
add
js
add
jl
add
xorb
add
add
mov
add
nop
xor
xchg
xor
cwtl
xor
pushf
xor
mov
xor
test
add
lods
xor
mov
add
mov
add
mov
xor
shlb
add
xor
enter
int3
xor
shlb
add
aam
add
fdivs
add
fdivl
add
loopne
add
in
add
call
xor
lock
hlt
xor
clc
xor
cld
xor
add
add
add
add
or
add
or
add
adc
add
adc
add
sbb
add
and
add
sub
add
sub
add
xor
add
cmp
add
dec
xor
fdivs
add
lock
sbb
add
js
add
pop
inc
add
mov
inc
add
cmp
add
inc
add
push
inc
add
test
add
xor
push
inc
add
push
inc
add
jl
add
addb
inc
add
mov
xchg
inc
add
movsb
inc
add
les
aam
add
in
add
push
inc
add
jo
add
je
add
mov
add
gs
pushf
imul
movsb
imul
lods
imul
mov
add
mov
push
add
add
add
add
add
add
add
xchg
insb
add
pushf
insb
add
movsb
insb
add
lods
insb
add
mov
add
mov
insb
add
int3
insb
add
aam
add
fsubrl
in
add
in
insb
add
jl
add
subb
push
jo
add
add
pop
jo
add
add
fs
add
add
insb
jo
add
add
je
add
js
add
jl
add
xorb
test
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jno
add
jno
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
inc
jno
add
je
add
je
add
add
test
add
call
jne
add
add
mov
jne
add
jbe
add
add
mov
jbe
add
jbe
add
ja
add
ja
add
add
jo
add
enter
aam
add
loopne
add
in
js
add
js
add
add
insb
jns
add
add
je
add
js
add
jl
add
cmpb
test
add
jns
add
jns
add
jns
add
jl
add
jge
add
jge
add
jle
add
addb
addb
addb
addl
addl
addl
test
mov
add
mov
add
int3
mov
add
aam
add
fdivrs
add
loopne
add
in
add
call
mov
add
hlt
mov
add
add
add
add
add
or
add
or
add
or
add
add
adc
add
add
add
pop
add
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
add
push
add
add
pop
add
add
and
add
and
add
add
add
add
add
and
add
rcrb
stos
pop
test
mov
bnd
mov
sbb
repnz
test
je
lea
push
mov
es
into
setl
push
movsb
or
in
pop
push
popf
or
mov
jbe
ja
loope
leave
arpl
xchg
gs
mov
sub
jle
and
mov
mov
roll
sarl
sub
and
xor
movb
popf
in
fsubr
push
lahf
push
frstor
xchg
mov
xchg
add
sahf
jnp
sbb
int
and
add
dec
sub
adc
imul
push
sbb
and
pop
rolb
shlb
or
es
aas
pop
test
scas
pop
cwtl
stos
and
and
dec
fisttps
loop
pop
loop
pop
xchg
mov
js
jl
testb
cld
fwait
jbe
and
test
pop
test
push
enter
or
int
fmuls
fdivs
add
xor
dec
sahf
add
ja
xorb
inc
aad
dec
test
mov
gs
jl
in
sbb
popa
add
adc
mov
jle
jne
inc
and
or
or
daa
mov
inc
mov
ficomps
scas
pop
mov
clc
sbb
in
bound
lcall
mov
sbb
sahf
adc
aam
sub
loopne
jb
pushf
or
clc
push
sti
push
lahf
push
mov
mov
es
mov
andb
or
dec
stc
insb
loop
je
ret
test
sub
and
nop
push
popa
nop
jp
rolb
sarb
pop
lret
pop
ds
lahf
add
popa
icebp
nop
arpl
shrb
pop
xchg
adc
jbe
gs
sbb
mov
inc
xchg
das
test
loopne
sti
sahf
insl
addl
and
sbb
lds
push
cmpsl
mov
cltd
imul
sbb
or
pop
shlb
xchg
les
jne
out
pop
repnz
aaa
movsl
xor
fdivl
in
xor
scas
aas
pop
test
lea
mov
inc
mov
jns
dec
xchg
setg
or
hlt
insb
loop
je
pop
rclb
sub
ret
push
lds
sbb
xchg
adc
push
xor
push
hlt
jne
mov
dec
int3
inc
and
mov
loope
adc
pop
pop
cwtl
push
imul
xor
or
std
jbe
cmpl
mov
xchg
push
mov
es
dec
fdivrs
pushf
sti
push
ret
lret
sahf
out
popa
icebp
nop
arpl
out
ljmp
cmp
pusha
pop
lea
mov
sub
push
lds
inc
shlb
cld
fwait
jbe
sbb
scas
xor
int
call
dec
frstor
ret
xor
and
sub
cmp
popa
call
pop
xchg
rolb
inc
test
sbb
xlat
and
push
rolb
shrb
orb
decb
jp
mov
lds
mov
gs
xor
mov
or
sbb
es
cs
inc
mov
out
lds
iret
sbb
cltd
or
pop
mov
scas
leave
cmp
imul
dec
loopne
push
shll
jo
sub
xchg
add
and
ljmp
dec
fisttpll
out
pop
les
int3
punpckhdq
addr16
sbb
mov
aad
int3
in
jmp
mov
dec
mov
icebp
add
leave
dec
fdivrs
cltd
push
sub
pushf
sti
push
call
mov
or
add
add
add
and
add
add
push
add
add
add
cmp
cmp
add
add
push
add
add
add
xor
xor
xor
lock
add
add
adc
xor
xor
xor
xor
xor
xor
jae
xorl
mov
les
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
adc
add
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
pop
add
add
add
xor
add
rolb
or
add
mov
add
add
pop
add
add
cmp
add
add
or
or
add
mov
add
add
add
add
add
xor
sahf
xor
or
adc
add
jns
push
cmp
cmpsl
cmp
or
or
add
add
add
add
add
lret
xor
aaa
xor
cmp
out
cmp
cmp
jge
add
add
or
and
add
pop
xor
xor
cmp
cmp
cmp
jne
lret
cmp
or
dec
add
add
xchg
xor
xor
xor
xor
xor
xor
sbb
xor
xor
xor
loop
pop
adc
pop
test
test
mov
ret
aas
sbb
xor
ds
outsl
aas
lret
aas
add
add
or
dec
add
add
xor
xor
test
inc
xor
je
dec
xor
xor
in
or
aaa
jl
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
add
gs
add
add
or
dec
add
add
push
xor
xor
xor
xor
xor
dec
and
jne
mov
pop
cmp
cmp
cmp
jo
mov
mov
loop
aaa
cmp
imul
and
add
out
xchg
mov
jecxz
jmp
test
bound
inc
cmp
ds
ds
aas
add
add
or
adc
add
push
aaa
inc
aaa
cmpb
add
jo
add
add
add
aaa
insl
cmp
aas
cmp
or
push
ds
sbb
ss
add
add
xor
xor
xor
cmp
test
push
cmp
xchg
cmp
add
add
add
xor
xor
xor
xor
lods
aaa
shll
cmp
fdivrs
mov
add
add
dec
xor
or
or
add
push
push
cmp
rorb
add
add
add
xor
and
or
adc
add
xchg
aaa
adc
mov
inc
or
sbb
add
int
pop
xor
fnstenv
add
dec
aaa
mov
push
or
adc
add
imul
xor
les
imul
cmp
jo
add
add
mov
inc
cmp
sbb
add
pop
ss
ss
ss
cmp
aas
add
add
add
js
test
mov
fdivs
in
push
cmp
add
add
add
mov
xchg
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
stc
ds
aas
aas
add
add
xor
mov
in
add
or
xor
mov
mov
cmpsb
ss
add
xorl
aaa
adc
js
xchg
cmp
cmp
cmpb
cmp
cmp
jae
jns
jg
mov
imul
or
adc
add
dec
cmp
add
rorb
add
add
inc
xor
and
add
add
add
jno
or
mov
add
or
sbb
add
push
xor
xor
xorl
and
add
inc
les
int3
xor
push
shll
jmp
shrl
js
ljmp
inc
inc
int
and
aaa
lds
cmpsb
push
mov
lcall
xchg
icebp
add
out
cmp
roll
das
inc
inc
and
push
mov
mov
mov
sbb
pop
into
je
jo
loop
push
mov
mov
and
mov
pop
ret
ret
dec
fistpll
and
push
xor
es
arpl
xchg
gs
and
mov
mov
int3
xor
fcomps
stos
pop
and
hlt
xchg
outsb
nop
sbb
mov
icebp
je
lea
xchg
add
push
xor
sub
dec
lods
std
je
lea
out
adc
dec
movsl
sub
push
lahf
push
sti
jbe
cmpl
adc
in
sbb
fisttpl
mov
and
sbb
and
clc
dec
add
add
cmp
mov
je
ja
loope
clc
outsb
or
cmp
xchg
add
jno
cmc
gs
pop
rorl
mov
pusha
pop
bnd
adcb
addb
fistl
sbb
mov
scas
mov
les
push
xor
xor
pop
cmp
add
in
xchg
add
rclb
xor
in
pushf
adc
in
sbb
dec
lds
iret
ds
push
jne
push
sub
lds
pop
aam
sub
and
add
pushf
xor
or
xchg
and
add
pop
inc
aad
sub
insb
xchg
add
std
or
mov
fimuls
mov
mov
and
out
adc
popa
jne
arpl
cmc
sbb
push
lret
mov
test
pop
test
pushf
add
movsb
ret
ds
data16
xchg
outsb
xchg
rorl
cmp
xor
mov
push
test
push
popa
nop
gs
dec
fdivrl
inc
and
and
xchg
add
jo
push
test
push
cli
lret
inc
shlb
pop
cmp
outsb
stc
jbe
cmpl
dec
ret
xchg
xchg
pop
inc
fisttpl
scas
cmp
mov
push
rclb
jno
test
pop
test
xor
sahf
setg
or
lea
cli
push
and
adc
movsl
inc
shll
jecxz
jne
mov
mov
xchg
add
adc
dec
cmpb
test
mov
jno
xorb
cmp
push
xchg
repz
fld1
insb
loop
je
mov
movsb
ret
ds
or
sub
lds
cmpsb
push
mov
cltd
or
push
jge
je
and
jbe
cmpl
inc
and
sbb
pop
iret
stos
pop
rcrb
sbb
cmp
stos
cmp
add
xchg
mov
and
adc
loop
pop
loop
ljmp
push
mov
orl
push
mov
iret
pop
ret
ret
pop
int
lea
jl
divb
clc
outsb
or
jg
roll
aad
inc
push
xor
es
rorl
pop
cmp
sub
js
xor
and
pushw
jl
testb
mov
js
popa
jge
gs
push
fstl
mov
xchg
testb
lcall
xchg
cmp
ljmpw
jmpw
jmp
iret
arpl
xchg
gs
add
lret
lret
notl
dec
jecxz
push
in
jp
arpl
cmc
pop
jae
jne
out
pop
pop
mov
jg
sub
inc
xchg
rcrb
pop
mov
push
lds
pusha
xchg
push
push
leave
pop
cmp
dec
lea
call
orl
mov
data16
adc
push
out
push
dec
iret
pop
cmp
and
fisubs
sub
xor
ljmp
stc
jecxz
cmp
jae
xchg
jns
fs
sub
jl
addr16
pop
stos
cmp
in
sbb
inc
add
jns
jle
call
cmpl
sbb
xchg
add
and
imul
iret
push
jo
jns
jmp
mov
xchg
adc
fmull
mov
fidivrs
ret
cmpsb
push
aam
inc
shll
dec
sub
push
jns
pusha
xchg
xchg
repz
jmp
add
lods
lret
inc
xchg
sub
pusha
jmp
push
in
add
push
cmp
ds
out
jg
jmp
push
in
unpckhps
stos
cmp
or
imul
sti
lock
test
mov
lds
mov
int3
stos
data16
and
add
cmpsl
aaa
push
mov
or
add
xor
xorb
mov
and
clc
xlat
dec
fdivrl
mov
and
jae
dec
leave
pop
cmp
add
adc
or
jnp
jle
iret
dec
fistpll
xchg
adc
pop
fimuls
adc
xchg
add
jnp
add
or
adc
cmc
gs
push
jno
insl
hlt
pop
mov
adc
in
loope
loop
je
push
lret
pop
ds
nop
add
mov
inc
mov
adc
dec
mov
lea
xchg
add
xchg
add
sahf
sub
pop
sub
and
mov
fs
ja
xchg
pop
bound
mov
test
mov
fs
imul
pop
bound
inc
mov
mov
stos
inc
lds
iret
sub
jno
jecxz
jno
fs
sub
int3
pop
fdivl
in
dec
lds
iret
jne,pt
insb
or
in
inc
xlat
mov
stos
sbb
outsl
fistpl
scas
pop
cld
fists
mov
into
test
fidivrs
add
roll
aad
in
adcl
test
roll
mov
jmp
mov
xor
es
inc
mov
dec
fimull
fidivrl
mov
inc
mov
cmp
sbbb
out
sbb
inc
fisttpll
out
test
movsb
ret
ds
test
jb
inc
mov
rorb
jnp
xchg
add
push
test
push
loopne
rolb
rolb
and
xchg
adc
mov
scas
leave
cmp
and
cmp
loopne
adc
add
push
pushf
sti
push
in
loop
pop
loop
xlat
pop
into
test
shlb
lahf
cli
or
out
pop
sbb
sbb
and
xchg
pop
iret
pop
cmp
pushfw
or
pop
int
shlb
movsb
cmp
or
mov
inc
mov
pop
push
xor
sub
sbb
mull
icebp
pop
adc
sbb
or
dec
lret
pop
cmp
push
cmc
jbe
cmpl
jg
mov
rclb
mov
lods
mov
mov
mov
inc
mov
inc
les
int3
and
jecxz
push
in
jno
push
cmp
lret
pop
ds
xlat
pop
iret
stos
pop
ror
fidivrl
shlb
mov
sbb
jne
mov
mov
test
int
and
jl
insb
or
mov
lret
pop
ds
test
xchg
adc
and
pop
fwait
jne
jl
notb
and
add
xor
dec
jae
arpl
cmc
je
xor
int
mov
je
push
xchg
add
jnp
add
movsl
xor
jl
jne
jp
pop
jp
inc
inc
les
int3
cmp
pop
iret
stos
pop
hlt
jle
mov
xchg
dec
lds
iret
sub
cmpsl
aaa
push
mov
call
in
jg
xlat
pop
leave
test
fwait
mov
cwtl
push
lds
iret
jnp
pushf
xor
or
nop
and
sbb
cs
rcll
pop
not
inc
shll
std
test
and
aam
frstor
mov
adc
imul
bnd
mov
inc
mov
ficomps
lods
outsl
in
bound
mov
adcl
js
mov
roll
dec
cltd
cmc
ja
xorb
xor
push
mov
ret
mov
fdivl
in
sbb
idivl
mov
lods
and
les
int3
push
jo
xchg
testb
push
mov
pop
lock
fdivl
in
and
fimull
push
in
test
ds
cmp
sbb
push
test
or
stos
xor
pop
leave
test
mov
repnz
pop
bnd
push
lahf
push
jp
outsb
or
xor
inc
aad
dec
movsl
or
add
jl
movsl
xor
cmp
out
adc
cmp
adc
adc
mov
inc
shll
sbb
outsb
orb
decl
out
mov
xchg
icebp
add
mov
shll
imul
cmp
push
jge
mov
pushf
cmp
cmp
xchg
jb
roll
mov
jmp
cmc
inc
adcl
sbb
fisttpll
mov
mov
and
or
lret
push
mov
sub
push
sub
sub
push
inc
fimull
ficompl
push
pushf
sti
push
xchg
pop
fimull
ficoml
das
lods
and
pop
scas
sub
and
and
loopnew
adc
aaa
push
add
adcl
test
jecxz
push
in
jnp
add
adc
inc
and
xor
aam
sub
and
xchg
cmc
add
xchg
cwtl
decl
enter
cltd
push
or
dec
aas
lods
and
sbb
sub
push
les
int3
imul
testb
jl
hlt
pusha
notb
or
ds
xor
sbb
push
xchg
repz
in
pop
into
test
test
push
fwait
pop
lods
sub
ss
inc
mov
test
mov
jne
or
push
rolb
shlb
test
fdivl
mov
xchg
push
mov
les
cld
fwait
adc
or
ljmp
xchg
add
enter
outsl
bt
push
movsl
adc
mov
fwait
or
roll
aad
xor
add
or
in
jg
mov
add
cbtw
add
scas
aas
pop
test
imul
test
ds
dec
leave
pop
cmp
add
popa
icebp
nop
arpl
mov
das
mov
jo
xorl
test
dec
int
and
cmp
xor
cltd
adc
add
adcl
cmp
mov
push
fmuls
fcomps
or
pop
jb
sub
mov
jle
arpl
cmc
pop
cld
insb
loop
je
push
lea
mov
gs
and
jecxz
add
lret
xchg
addr16
sbb
xchg
push
inc
fisttps
flds
or
lea
in
sbb
rcrl
loopw
mov
inc
mov
das
ficoml
out
adc
pop
or
jnp
xchg
add
adc
fisttpll
out
pusha
in
sbb
xchg
testb
iret
cmpsb
xor
mull
icebp
sbb
loope
das
mov
jnp
mov
ljmpw
lea
xchg
icebp
add
and
jb
cmp
mulb
push
dec
fisttps
fsts
roll
aad
mov
sahf
jp
jge
notl
fisttpl
fstpl
repz
ja
jge
negl
test
aad
int3
xchg
adc
mov
jno
popa
add
cmp
imul
insl
xor
out
jno
ja
fs
sbb
mov
inc
mov
aam
repnz
ljmp
stc
out
add
sbb
xchg
orb
cli
or
and
bnd
mov
mov
shlb
sub
push
scas
insb
dec
les
int3
imul
pusha
ja
jp
in
inc
pop
enter
jns
jnp
mov
sbb
popa
icebp
nop
arpl
push
shlb
lret
sbb
adc
mov
clc
outsb
or
sbb
push
lds
repnz
ja
jg
jmp
cmp
dec
xchg
adc
in
sbb
out
cli
popf
insb
test
cmp
and
data16
xchg
outsb
nop
movb
inc
cwtl
fldenv
xchg
gs
aad
mov
lret
scas
and
dec
les
int3
sub
lahf
punpckhdq
lret
jg
add
and
cmp
pop
jp
xor
inc
and
cmpsw
xor
int
xchg
pop
lea
jno
xorb
mov
jne
jo
loop
sbb
sub
push
lds
movsb
ret
ds
add
fisttpll
mov
and
cli
imul
push
std
jl
jb
xchg
lods
and
jge
imul
test
jge
fs
mov
pop
int
addr16
cmp
push
lds
push
sbb
mov
xor
xor
and
mov
lods
lret
inc
loope
mov
call
scas
imul
adc
dec
popf
or
xchg
in
sbb
mov
aad
xchg
sbb
add
cmp
inc
and
outsl
ds
aas
pop
test
adc
pop
mull
icebp
pop
push
into
pop
cmp
adc
lahf
jg
repz
cmc
sbb
mov
inc
mov
jmp
stos
into
cmp
pop
scas
fs
push
pop
int
lea
adcb
andb
pop
ds
dec
leave
pop
cmp
push
add
jbe
cmpl
jmp
xor
pusha
call
push
jecxz
push
in
test
mov
inc
and
add
outsb
cld
fwait
jbe
adcl
add
add
loope
adc
push
dec
jecxz
push
in
jp
bound
or
xor
dec
fdivrs
or
and
cli
push
add
add
pushf
movl
pusha
pushf
popl
jmp
jmp
call
mov
pushl
pusha
lea
jmp
sbb
call
mov
jmp
clc
bt
ror
cmc
cmc
pushf
movb
xor
movl
bt
clc
sub
mov
mov
call
movb
movl
pushf
add
bt
sub
cmc
cbtw
cmp
cwtl
call
pushl
pusha
pushf
mov
movb
mov
call
mov
movb
pushf
pushl
lea
jmp
clc
sub
call
mov
push
push
mov
movb
lea
jmp
mov
call
pushl
popl
pusha
pushl
lea
jmp
clc
test
sub
cmp
pusha
push
and
pusha
mov
jmp
push
mov
movb
mov
push
lea
jmp
mov
mov
pushf
push
pushl
lea
jmp
jmp
pushf
popl
call
pushl
popl
pushl
lea
jmp
aam
mov
and
add
add
add
mov
call
mov
pushl
push
call
pusha
movw
pushf
push
mov
pusha
pushl
call
pushf
push
push
pushf
popl
pushl
call
stc
add
push
push
pusha
push
mov
mov
movb
push
pushf
lea
jmp
pushf
jmp
lea
jne
pusha
mov
push
mov
pushf
mov
pushf
lea
jmp
call
mov
pushf
movb
movw
lea
jmp
shl
pusha
jmp
pusha
pushf
pushf
popl
jmp
pushl
popl
pusha
pushf
pushl
pushf
lea
jmp
call
mov
movl
lea
jmp
mov
pushf
push
pushf
lea
jmp
stc
clc
pushf
xor
test
test
mov
stc
xor
pusha
clc
neg
jmp
push
jmp
mov
pushf
mov
call
cmp
mov
jmp
mov
pushf
pushl
mov
pushf
mov
push
pushf
popl
call
call
call
mov
pushl
mov
call
mov
pushl
mov
pushf
lea
jmp
pushl
pushl
popl
movb
lea
jmp
push
mov
movw
pushl
pushf
mov
lea
jo
pushf
pushf
mov
pushl
jmp
mov
mov
call
call
mov
push
lea
jmp
pushf
mov
jmp
pushf
movb
pushl
push
mov
jmp
jbe
pusha
mov
mov
call
mov
pushf
pushf
jmp
mov
mov
jmp
pusha
pushf
call
shr
neg
push
movzbw
bsr
bsr
dec
pop
movzbl
bsf
inc
rcr
ror
movsbw
cmp
shr
add
jmp
pushl
movl
mov
pushf
pushf
mov
pushf
push
lea
jmp
jmp
pushl
mov
mov
pusha
call
mov
push
lea
jmp
jmp
cmc
bt
add
bts
lea
test
cmp
push
pushf
pusha
lea
ja
mov
call
jmp
inc
pushf
test
movzww
cmp
pushf
xchg
jmp
mov
push
jmp
push
pushl
mov
call
jmp
pushl
mov
call
mov
pushf
lea
jmp
not
cmp
add
jp
sub
stc
and
pushf
pushf
lea
jp
mov
ja
pusha
push
pushf
popl
pushl
call
mov
call
mov
mov
pushf
push
pushf
pushl
mov
push
push
mov
mov
movw
movl
mov
mov
pushf
movb
lea
jmp
call
mov
mov
pushf
movb
jmp
xchg
bswap
bswap
std
pop
mov
std
cld
mov
call
pushf
mov
jmp
mov
jmp
mov
movb
mov
jmp
add
jns
shl
jmp
pushf
popl
call
pushf
push
pushf
popl
lea
jp
popl
pushf
pushl
lea
jmp
pushf
popl
push
pusha
pushf
mov
push
call
mov
cmp
clc
sub
pushf
call
mov
pusha
pushf
call
mov
push
pushf
popl
mov
call
mov
movw
mov
pushf
mov
pusha
push
pushf
popl
lea
js
pusha
pushf
pushl
mov
mov
pushf
jmp
movw
mov
mov
push
pushf
popl
push
pushf
call
push
pushf
push
pusha
mov
jmp
pusha
mov
not
movzbw
btc
mov
pusha
bt
bt
cmc
not
call
sub
pushf
dec
push
clc
stc
pushf
rol
call
add
pushl
pushf
sub
pushl
movb
mov
cbtw
push
cwtl
cmp
stc
bt
pushf
sub
pushl
mov
movw
pushf
mov
movb
lea
jmp
pusha
pushf
mov
jmp
xchg
pusha
bt
call
mov
cmc
pushf
cmc
cmp
add
pusha
pushl
mov
lea
jmp
call
mov
pushf
mov
mov
call
mov
pusha
mov
movb
mov
pushf
mov
movb
push
push
pushf
lea
jmp
call
mov
jmp
bsf
mov
shr
cmc
test
add
not
mov
call
pushf
call
pushf
pushf
call
mov
jmp
call
mov
pushf
lea
jmp
pushf
mov
pusha
call
mov
pushf
popl
push
mov
movw
pushl
popl
pusha
pushf
mov
pushl
lea
jmp
pushf
mov
mov
push
mov
push
push
pushl
jmp
push
mov
lea
jo
push
pushf
popl
pusha
mov
jmp
pushf
jmp
push
dec
movb
bt
pusha
lea
call
movw
add
jns
stc
neg
bt
cmc
cmp
add
cmc
ror
clc
xor
cmc
clc
pusha
cwtl
clc
sub
pusha
mov
mov
pushf
lea
jmp
pushf
mov
jmp
call
movsbl
movzbl
movzbl
mov
cmc
add
stc
pushf
add
pushf
push
jmp
pushl
pushf
xchg
lea
pop
movsbw
lea
xchg
movsbl
push
jmp
add
mov
pusha
call
mov
pushl
pusha
movb
mov
push
pushl
call
mov
pushl
push
jmp
shl
jmp
pushf
popl
jmp
mov
jmp
pushl
pushf
mov
mov
call
pushf
popl
pushf
push
call
pushf
mov
call
mov
stc
cmp
shl
mov
stc
xor
bt
test
add
shl
dec
pushf
mov
shrd
neg
shr
add
pop
mov
jmp
lea
jno
pushf
mov
pushf
mov
call
pushf
mov
jmp
pushf
popl
call
mov
pushf
push
push
mov
lea
jbe
push
pusha
lea
jmp
pushf
mov
jmp
stc
cwtl
mov
bswap
pusha
bswap
sub
mov
neg
clc
jmp
pushl
jmp
inc
bt
cmp
cmc
xor
clc
pusha
sub
sub
jnp
push
xor
test
call
pushf
sub
call
jmp
setae
bswap
push
mov
pushf
call
jmp
mov
pushf
push
jmp
mov
pushf
movb
pushf
pusha
lea
jmp
mov
pushf
push
movw
push
pushf
popl
movb
pushf
pushl
popl
push
movb
pushf
movl
lea
jmp
push
mov
jmp
aad
mov
stc
bt
clc
sub
call
sub
mov
jmp
pushl
add
lea
jge
mov
pusha
lea
jmp
pushf
popl
pushf
pushf
pushf
mov
mov
call
call
call
pushf
popl
call
jmp
push
pushf
cmp
sub
cmc
sub
push
pushf
call
cmp
bsf
cmp
sar
mov
pusha
pusha
cmc
neg
mov
bt
sub
clc
pushf
call
mov
pushf
pushf
popl
movb
call
test
call
cmc
add
mov
pushf
popl
movb
pushl
popl
pushf
pushf
lea
jmp
jmp
push
pushl
popl
pushf
movw
movb
mov
lea
jmp
mov
pushf
push
movw
pushf
lea
jmp
call
call
cmp
clc
add
cmp
jmp
pushf
shr
push
jmp
shl
xor
ror
not
movzbl
cmc
seto
sub
add
cmc
add
cmp
rol
not
bsr
adc
xor
ror
bsr
cmc
shld
add
stc
mov
pushf
pusha
pusha
add
call
mov
pushf
pushf
movb
jmp
pushf
call
jl
push
pusha
pushf
mov
mov
pusha
pushf
mov
mov
jmp
adc
cmpxchg8b
imul
mov
shll
cmpxchg8b
cmpxchg8b
int3
jno
sbb
or
cmpxchg8b
sub
add
imul
popf
and
add
pop
imul
or
or
sbb
sub
imul
mov
jae
xchg
vmptrst
sbb
sub
jb
sub
or
arpl
vmptrld
sub
shll
adc
adc
jmp
imul
imul
or
inc
sbb
xor
or
sbb
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
rdseed
das
cmpxchg8b
and
xrstors
xsavec
imul
adc
push
xor
mov
jno
imul
pop
sbb
xrstors
xor
sub
mov
xsaves
and
add
loopne
cmpxchg8b
jb
xchg
es
fsts
sub
mov
pop
adc
vmptrst
insl
add
inc
sbb
and
add
pop
imul
das
sbb
popf
and
adc
inc
insl
add
or
shll
cmpxchg8b
cs
adc
fsts
fsts
adc
xrstors
xor
pop
imul
movl
xrstors
cmpxchg8b
sub
sub
mov
jno
lock
xsaves
and
sbb
vmptrld
mov
xsaves
sbb
je
cmpxchg8b
and
imul
test
and
adc
xsavec
add
inc
sbb
push
xor
or
cmpxchg8b
int3
jno
cmp
xsaves
sbb
loopne
push
xor
push
xsaves
xor
adc
vmptrld
shll
xsavec
shll
xrstors
add
loopne
cmpxchg8b
push
xchg
vmptrst
sbb
or
jmp
xor
pop
imul
dec
daa
vmptrst
sbb
xchg
es
sub
xbegin
sub
xbegin
sub
xbegin
sub
xbegin
sub
xbegin
sub
xbegin
sub
xbegin
sub
xbegin
jb
push
xor
xchg
xor
or
jmp
adc
shll
loopne
shll
vmptrld
or
add
or
cmpxchg8b
and
add
das
sbb
shll
push
cmpxchg8b
xsaves
imul
sbb
cmpxchg8b
jno
popf
and
cmpxchg8b
int3
jno
movl
xsavec
imul
adc
xsaves
jae
movl
cmpxchg8b
sub
xsaves
imul
adc
adc
xchg
vmptrst
sbb
dec
daa
jmp
push
add
sbb
mov
cmpxchg8b
and
je
cmpxchg8b
jb
adc
xsavec
add
stos
sub
sbb
stc
das
xrstors
add
jmp
mov
pushf
pushf
mov
lea
jmp
test
shr
movb
call
pushf
mov
pushf
jmp
call
jmp
pusha
call
jmp
test
movzbl
cmc
stc
call
jmp
call
stc
shl
push
push
mov
jmp
mov
jmp
movb
mov
call
movl
mov
pushf
mov
call
pushf
mov
pushf
call
pusha
pusha
mov
jmp
call
mov
movb
movb
call
movsbw
movzbw
rol
clc
movzbw
bsr
add
adc
or
bsr
neg
mov
movb
add
call
call
movsbl
mov
pushf
movb
pushf
mov
pusha
lea
jl
mov
push
lea
jmp
push
jmp
movw
bt
call
rcl
cwtl
test
aas
mov
bswap
adc
dec
bsr
mov
cmc
cmc
cmp
bt
add
pusha
mov
mov
mov
mov
movw
pusha
movw
lea
jmp
mov
pushl
push
push
lea
jmp
neg
pusha
pushf
dec
bsr
sub
jmp
call
pushf
pushf
mov
jmp
pusha
jmp
call
pushf
mov
push
pushf
popl
call
pushl
popl
pushf
lea
jmp
aam
mov
cmc
bsf
clc
or
mov
bt
cmp
pushf
not
bt
movb
pusha
not
bt
and
pusha
mov
jmp
mov
jmp
call
or
shl
add
call
push
mov
push
call
movb
pushf
pushf
popl
movb
pushl
popl
push
pushf
lea
jmp
pushf
pushf
mov
mov
mov
jmp
aas
btr
notl
daa
dec
inc
das
mov
test
bt
push
test
sub
bt
stc
jmp
pushf
call
pushf
mov
call
pushf
call
mov
mov
push
call
push
push
movb
pushl
mov
push
mov
pushf
pushf
mov
jmp
mov
mov
pushl
mov
pushf
pushf
push
lea
jmp
lea
mov
pushf
clc
stc
add
push
pushf
popl
call
pusha
setns
mov
push
bt
cmc
add
cmp
call
pushl
sub
bt
cmp
pusha
sub
test
pushl
sub
mov
call
jg
pushf
push
mov
pushf
mov
pusha
pushf
lea
jmp
test
call
call
push
mov
pushf
movl
pushl
mov
pushf
movl
mov
jmp
push
jmp
pusha
movb
mov
jmp
push
mov
pusha
pushf
mov
push
mov
pusha
call
ror
mov
bt
pushf
cmc
cmc
add
push
cmc
cmp
shrd
pushl
pushl
pushl
mov
push
pushf
pushf
jmp
stc
rol
stc
pushf
stc
stc
add
clc
test
stc
mov
cmc
jmp
mov
jmp
lea
pushf
popl
not
std
movzbw
push
pusha
pusha
mov
movzbl
movsbw
not
lea
call
mov
call
add
mov
call
mov
pushf
mov
movw
pushf
mov
push
jmp
pushf
mov
pusha
cmc
cmc
shl
mov
push
stc
sub
push
call
jmp
jmp
bt
bt
sub
lea
jge
push
mov
pushf
lea
jmp
pushf
popl
jmp
call
jmp
cmc
jmp
pushl
popl
push
movl
lea
jmp
pushf
push
mov
pushf
pushf
lea
jmp
pushf
pushf
mov
pusha
pushf
jmp
pushf
pushf
mov
movb
pushl
lea
jmp
xor
clc
sub
pushf
mov
pusha
pushl
lea
jmp
pushf
popl
pusha
movb
movw
mov
pushf
mov
movb
pushf
call
movb
mov
jmp
pushf
pushf
mov
call
movl
mov
pusha
mov
mov
lea
jmp
cmc
lea
rcl
lea
setno
clc
and
aam
sub
sbb
xchg
lea
dec
and
sbb
sar
btc
sub
jmp
mov
jmp
pushf
call
pushl
mov
jmp
movw
mov
mov
jmp
lea
jl
sub
pushf
pushf
mov
dec
call
movb
mov
jmp
rcr
clc
or
cmc
movzbl
cmc
clc
clc
add
stc
stc
pusha
neg
test
sub
call
shld
movb
call
mov
pushf
mov
push
pushf
jmp
movb
call
jmp
pusha
movsbw
call
mov
push
pushf
mov
movl
pushf
jmp
mov
cmc
push
stc
test
add
push
mov
pusha
pushf
lea
jmp
cwtl
clc
mov
and
call
pushf
popl
mov
jmp
pushf
mov
call
pushf
mov
mov
pushl
jmp
mov
jmp
pushf
push
mov
pusha
mov
pushf
mov
lea
jmp
movb
jmp
dec
jmp
jmp
test
mov
clc
add
jmp
pushf
popl
pushf
pushf
mov
pushl
popl
pushf
movb
movb
lea
jmp
cmp
neg
push
cmp
mov
cmc
bswap
cmc
sub
push
stc
bt
pushf
xor
jmp
pusha
push
jmp
pushf
neg
test
rcr
mov
push
call
call
mov
movl
mov
mov
mov
jmp
mov
mov
mov
dec
movb
lea
jmp
lea
jb
pushf
pushl
mov
pusha
mov
pushl
pushf
popl
movb
movb
call
rol
bts
xor
bts
movsbw
add
sub
sete
sar
mov
lea
adc
sar
shl
sub
jmp
call
mov
mov
mov
lea
jmp
jmp
jmp
stc
sub
pusha
pushf
mov
pushf
pushf
mov
pushf
lea
jmp
pop
mov
not
call
add
add
jmp
jmp
push
push
lea
jmp
call
mov
push
pusha
movb
call
bt
pushf
cmp
neg
test
pusha
pusha
add
push
cmc
clc
ror
movb
test
xor
movb
pushl
movb
stc
cwtl
push
clc
test
sub
movl
movb
mov
mov
mov
mov
lea
jmp
sbb
cmp
mov
cmp
bt
pusha
add
jmp
bt
and
pushf
jmp
call
movb
pushl
popl
push
push
pushf
lea
jmp
pushf
popl
push
call
push
mov
push
push
pushf
lea
jmp
mov
pushf
lea
jmp
btc
mov
xor
cmp
stc
pusha
mov
jmp
pushl
mov
push
mov
jmp
shr
add
add
setg
mov
jmp
pushf
stc
jmp
shl
shr
mov
adc
stc
adc
mov
bt
add
pushf
pushf
pusha
mov
movb
push
pushf
pushf
lea
jmp
call
pushl
jmp
jmp
mov
pushf
mov
movb
movb
mov
push
mov
movl
mov
push
pushf
lea
jmp
jmp
push
pusha
movb
mov
movl
lea
jmp
pushf
call
popl
pushf
pusha
pusha
pushf
lea
jmp
movw
pusha
mov
pushl
call
pushf
pushl
call
rol
add
clc
mov
clc
sub
stc
test
add
call
rcl
mov
bsr
xchg
sbb
pop
aas
pop
cwtl
dec
sub
mov
pop
cld
rcl
pop
xchg
lea
and
pop
inc
pushf
mov
bsr
shl
mov
bsf
pushl
popf
movsbw
pop
movsbw
mov
mov
not
pusha
mov
pop
mov
mov
movb
pushl
ret
pushf
pushf
popl
pushl
call
pushl
mov
pushf
mov
push
pushl
pushf
popl
movb
pushf
mov
mov
mov
mov
jmp
mov
pushl
push
pushf
lea
jmp
call
push
dec
test
test
movb
mov
not
stc
stc
xor
call
mov
push
mov
pushf
push
call
push
mov
push
mov
jmp
aad
dec
mov
test
pushf
jmp
pushf
mov
inc
stc
rcr
stc
ror
stc
not
and
neg
ror
bsr
rcl
and
dec
shr
xor
sub
mov
clc
bt
add
jmp
mov
pushf
jmp
xor
sub
movzbw
mov
adc
rcl
add
inc
mov
call
rcl
and
shrd
mov
or
and
mov
cmc
pushf
clc
call
movb
mov
mov
lea
jmp
lea
jmp
jmp
mov
pusha
jmp
pushf
push
pushf
mov
movl
pushf
push
mov
pushf
mov
pusha
movb
pushf
popl
call
jmp
mov
pusha
pushf
lea
jmp
pushf
mov
pusha
jmp
call
mov
mov
movb
movb
lea
jmp
pushf
pushf
popl
push
jmp
call
rcl
clc
mov
pusha
cmc
stc
sub
pushl
mov
pushf
mov
pushf
mov
pushf
lea
jmp
mov
pusha
pushf
movb
pushf
pushf
popl
pushl
pushl
popl
pushl
pushf
lea
jmp
push
call
pop
cmpsl
pusha
pop
cmp
movsb
push
mov
clc
sub
xchg
dec
pop
inc
jne
sub
fyl2x
add
cld
rcll
pop
ficoms
dec
je
fsincos
lret
mov
xor
sub
jmp
fnstcw
stos
inc
jnp
jb
mov
aam
mov
lldt
loope
mov
push
sbb
mov
jge
push
pop
xor
cs
or
xor
std
test
inc
ret
jo
negb
imul
adc
pop
ss
insl
das
lods
std
jge
cmp
loope
dec
dec
cmp
aam
push
roll
fisubrl
adc
test
add
adc
data16
in
xchg
push
mov
clc
pop
ret
push
lret
jmp
adc
dec
adc
nop
dec
or
jb
fmuls
imull
sbb
xchg
cmc
xchg
inc
sub
dec
adc
fcompl
scas
xor
push
jle
shl
fcmovbe
sub
cmpsb
add
or
mov
out
test
adc
xorb
add
cs
dec
jl
mov
and
pextrw
pusha
adc
loope
pushf
shll
mov
loope
lea
stos
fadds
sahf
cmp
mov
inc
cltd
xchg
scas
mov
dec
out
into
ljmp
xchg
int3
fs
add
adc
mov
mov
and
das
jecxz
xchg
sub
aad
lret
hlt
adc
sub
push
test
outsl
movsb
pop
sbb
xor
cs
maxps
push
call
dec
fcomps
lret
inc
sub
aas
in
rcl
pop
mov
mov
in
outsb
divl
fwait
or
add
call
xor
fistps
bound
out
loope
jbe
cmp
xlat
lock
cli
fcmovnb
push
sbb
xor
adc
adc
push
pop
cmpsl
pop
inc
add
sbb
xorb
repz
pushf
jb
sub
jmp
or
sub
mov
or
movsb
fisubs
call
clc
jle
inc
imul
mov
pop
call
sub
and
mov
loope
lret
jns
aad
out
loope
into
insl
aas
shl
sub
loope
scas
data16
rorl
ja
adc
dec
cmpsb
mov
lods
in
lret
test
mov
fstpt
jo
push
call
test
jle
jmp
cli
xor
sahf
or
adc
out
mov
dec
xchg
negl
sbb
jl
pop
pop
das
int3
xchg
inc
jp
insb
push
push
mov
imull
add
add
dec
popa
cmp
xlat
ss
cmpsl
loopne
inc
std
outsb
mov
pop
call
add
lret
inc
sub
call
outsb
lods
jns
jns
in
outsb
cmc
mov
push
cmp
mov
sub
rcr
and
mov
aas
push
test
imul
sbb
xor
push
std
sbb
shll
inc
pop
stos
add
xchg
cmp
xchg
dec
jbe
pop
lock
dec
add
or
imul
call
jne
inc
data16
in
ljmp
lock
loopne
enter
or
loope
jmp
sub
shrl
loope
rolb
adc
cli
xor
loopne
inc
add
adc
fidivrs
aaa
push
iret
test
aad
lds
sbb
movsl
ficoml
cmpsl
ficomps
push
aad
jnp
hlt
adc
ljmp
pusha
xchg
enter
inc
mov
in
push
iret
xchg
push
xchg
sbb
push
test
pop
cmp
inc
sub
ljmp
mov
mov
test
adc
add
inc
ja
adc
cs
cmp
mov
call
push
call
jp
jge
xchg
leave
xchg
dec
pushl
loop
int
ret
fwait
dec
and
dec
imul
xchg
inc
xor
push
mov
dec
mov
in
lods
jne
lret
add
icebp
fstl
mov
fsubrs
pop
call
or
sub
push
adc
in
std
test
cltd
ret
jno
push
mov
xor
pop
mov
xor
loope
cld
pop
jge
test
inc
pop
and
aam
pop
lret
add
ljmp
testl
out
inc
inc
mov
add
xchg
push
data16
xchg
add
pop
call
enter
rolb
imul
in
cmp
sbb
mov
lcall
push
adc
movsl
lret
push
dec
incb
push
or
fs
call
loope
sub
or
mov
xchg
enter
daa
loopne
inc
adc
dec
push
call
add
pop
call
jle
jecxz
out
sub
pushl
std
pop
xchg
lock
lret
push
mov
out
sub
mov
adc
lds
xchg
mov
insb
cmpsb
pusha
adc
or
daa
fists
inc
mov
jno
pop
call
ret
hlt
or
nop
lds
fs
iret
test
mov
lcall
icebp
and
sbb
mov
push
pop
push
mov
or
adc
push
in
or
rolb
sbb
inc
jne
mov
test
loopne
inc
fimuls
lds
movb
cmc
mov
and
cmpl
aam
and
cmp
cmp
jae
popf
xor
and
sbb
or
inc
xor
imul
or
sub
xchg
leave
mov
shrl
dec
jecxz
xchg
push
pop
aas
arpl
mov
mov
movsl
bound
push
sbb
add
xor
stos
add
or
cmp
mov
imul
hlt
sub
sbb
mov
lock
nop
cmp
push
fs
es
pop
xor
xchg
ret
rclb
or
and
bound
je
insl
in
and
pop
push
pop
sbb
and
pop
fsin
fstpl
push
fsts
mov
insl
mov
jmp
fs
xor
adc
sub
pop
or
adc
mov
push
mov
fbstp
jo
push
or
shrl
lret
add
push
cs
test
xorb
insl
jl
mov
out
pop
or
add
add
test
fld
sub
insl
inc
lret
lods
pushf
adc
loope
dec
repnz
loope
stos
inc
or
pushfw
rolb
mov
loopne
inc
cmp
add
outsb
and
mov
cmpsl
xor
add
adc
mov
orl
xchg
inc
jnp
dec
inc
shlb
ds
sarl
les
sub
mov
or
mov
mov
in
loopne
inc
addr16
jecxz
imul
ljmp
outsl
out
jbe
pusha
sbb
les
sbb
call
mov
inc
mov
xor
lea
insl
and
cmc
jne
les
ljmp
das
mov
dec
popf
lea
and
xor
add
mov
cmpsb
inc
dec
pop
aaa
dec
push
gs
scas
imul
jb
mov
jae
push
rcrl
mov
inc
lret
insl
push
pop
loopne
out
xchg
dec
je
pusha
aaa
pop
jl
cmpl
jmp
and
adc
loopne,pn
inc
pop
pop
dec
push
call
add
ljmp
and
aas
jnp
jmp
cwtl
loope
testl
adc
ja
mov
cmc
out
int
and
das
loope
mov
dec
stos
std
inc
xorb
push
mov
js
insb
lret
loopne
inc
insb
inc
in
imul
sarb
xlat
or
jbe
insl
and
or
mov
jb
stos
sbb
aad
pop
mov
xchg
sahf
fldl
fsubs
popf
mov
repnz
fsts
cs
in
pop
sub
negl
call
shl
pop
push
call
loope
mov
ret
in
and
jnp
mov
mov
in
push
adc
call
push
or
inc
xor
push
jg
out
leave
add
lods
loope
jp
push
ds
loope
or
inc
cli
xor
push
fmuls
loopne,pt
inc
adc
mov
pop
call
xchg
sbb
or
mov
jecxz
into
insl
jl
mov
rolb
xor
push
fcoml
xchg
lret
imul
scas
shrb
inc
cmpsl
push
jg
popf
jbe
pop
or
pop
push
rorb
shll
and
fnstsw
cmp
loope
insl
pusha
jg
ret
aas
push
test
outsb
cmpsb
test
inc
mov
mov
mov
dec
and
jecxz
xor
gs
in
sbb
out
sub
add
jge
ljmp
in
loopne
dec
loop
nop
push
pop
nop
inc
cld
cs
lds
jmp
sbb
mov
cld
dec
add
movl
pop
mov
or
in
xor
xchg
loopne
dec
push
or
dec
les
insl
jl
pop
mov
add
push
sbb
dec
cmc
lods
addr16
iret
add
adc
mov
jge
pop
movsl
adcl
insb
arpl
xchg
dec
std
mov
sub
loopne
dec
pop
leave
push
dec
sbb
adc
push
cmp
and
or
sbb
or
or
inc
sub
cwtl
push
pop
cli
dec
inc
in
arpl
or
add
xchg
cmp
pop
movsl
adcb
mov
and
jp
push
push
dec
jle
insb
vucomiss
test
jmp
pop
jmp
cmp
push
call
mov
inc
push
call
cmp
clc
mov
jmp
adc
nop
sub
push
int
xor
movsb
mov
ljmp
mov
scas
hlt
outsb
dec
scas
arpl
insl
lea
mov
sbb
or
frstor
ficoml
xlat
les
addr16
jne
xchg
sub
int3
dec
stc
adc
addr16
push
add
and
loopne
dec
aas
ss
call
out
cld
xor
aaa
test
adc
cwtd
iret
or
jle
jmp
xor
mov
mov
lea
lds
xor
psubsb
pop
mov
shrb
push
pusha
movsl
and
rcrl
int
arpl
lcall
ss
iret
add
mov
repnz
xchg
dec
inc
add
push
cltd
pusha
sti
xchg
clc
mov
xchg
mov
out
xchg
repnz
sub
pop
mov
and
xchg
cmp
mov
jle
das
iret
jo
gs
push
mov
push
in
aas
cltd
xor
mov
push
dec
push
mov
cltd
push
lods
loopne
dec
adc
sub
sub
xchg
inc
je
popa
xchg
dec
pop
negl
push
mov
push
or
mov
pop
stc
ret
mov
sub
mov
adc
movsl
pop
mov
push
cwtl
xchg
jmp
std
repnz
loopne
dec
in
inc
add
mov
jo
jecxz
iret
push
mov
fidivs
int3
loope
mov
test
pop
loope
cmp
outsl
sub
lcall
adc
les
lods
dec
mov
jae
leave
loopne
dec
fs
pop
mov
mov
lods
ret
lock
or
cmc
daa
pop
or
sbb
push
dec
mov
loope
and
cmp
push
dec
push
fs
adc
mov
lds
imul
and
xchg
dec
std
xor
fistl
rcr
loope
andl
adc
in
andl
adc
aas
neg
in
mov
lea
ljmp
shlb
sbb
sub
jns
cs
fisubrs
test
dec
test
sbb
jnp
xchg
push
loope,pn
or
mov
fsqrt
fs
into
xorl
sti
shl
cs
insl
fstps
pop
call
in
enter
dec
pop
call
add
mov
and
pop
cmp
mov
add
loope
loope
xor
and
push
dec
in
aam
mov
js
cs
pop
das
pop
push
call
mov
add
cwtl
dec
add
jmp
ljmp
loope
imul
jl
divb
es
repnz
call
cld
mov
and
cs
fmull
push
call
add
inc
pop
call
adc
mov
pop
pop
call
scas
add
push
xchg
dec
test
test
in
push
loope
add
dec
jge
in
fmuls
leave
add
dec
cmp
lret
inc
sub
repnz
aad
icebp
into
pop
jns
mov
mov
cmp
std
or
repz
and
dec
aam
inc
pop
push
dec
pmaxsw
xlat
sti
scas
cmp
data16
sbb
xor
xchg
lods
push
sbb
icebp
and
adc
xchg
mov
dec
outsb
iret
xchg
push
sbb
pop
fnstsw
test
add
popf
or
inc
sahf
aam
out
mov
add
cmp
js
inc
outsl
mov
jmp
push
call
in
sbb
mov
sbb
xor
lcall
mov
dec
adc
sub
jl
push
or
cmpsb
pop
gs
fidivrl
int
mov
popf
cmpl
adc
aad
sbb
dec
adc
orb
lahf
sbb
xchg
add
jo
cmp
xchg
dec
mov
push
dec
dec
lods
sub
sbb
cld
pop
adc
jge
je
fstl
jle
mov
jb
fst
je
lock
xchg
mov
shll
push
loopne,pn
dec
add
lock
cmpsl
insl
jl
fnstenv
add
mov
fcmovb
cmp
lock
mov
xchg
fsub
push
dec
cmpl
dec
loope
dec
rolb
loope
mov
fs
jbe
out
and
pop
loopne
dec
imul
fwait
lock
push
addr16
out
add
or
leave
push
pop
sti
jle
lea
stc
scas
mov
mov
fbld
or
subb
cli
adc
pop
mov
pop
pop
push
call
push
add
pop
call
xchg
pop
les
adc
mov
notb
sub
divb
stc
das
jmp
sbb
sahf
scas
pushl
push
xchg
mov
cmc
cltd
subl
mov
sahf
mov
mov
sbb
fcomps
loope
adc
andnps
ret
inc
pop
sti
xor
fistl
jae
loopne
dec
pusha
xor
mov
cmpsl
pop
adc
mov
arpl
out
fwait
xchg
mov
daa
jmp
push
or
cld
xor
sbb
loopne
dec
subb
lods
dec
pop
call
push
data16
dec
rcll
mov
pop
mov
out
and
ds
cmpsl
pop
nop
xchg
fwait
hlt
xchg
push
aad
jo
lods
mov
cltd
inc
mov
xor
outsl
mov
cmpsb
pop
or
and
fs
lcall
xor
xchg
xchg
add
dec
lea
jp
mov
dec
mov
mov
xchg
ret
push
pop
lods
pop
rorl
cmp
out
fsts
inc
cld
mov
mov
and
loopne
dec
or
and
call
imul
mov
sbb
stos
loope
push
movsb
xor
ss
pop
push
dec
loope
dec
push
add
pop
insb
inc
popa
push
rorl
add
add
dec
cmp
lret
cmp
and
cs
xlat
xor
and
or
loope
std
xor
push
push
sahf
push
fs
or
scas
mov
in
pushf
mov
ds
je
xlat
mov
notl
pop
pcmpgtw
xchg
int3
or
sbb
fs
sbb
pextrw
jl
push
loopne
mov
shr
jmp
mov
lods
push
call
inc
clc
pop
imulb
pop
dec
pop
call
push
sahf
jmp
pop
cltd
iret
add
cwtl
jmp
imul
pop
lock
or
outsl
enter
pop
jne
jmp
movl
push
add
push
mov
dec
jle
ljmp
fsubrs
mov
add
and
jp
cmpsl
xchg
lods
enter
daa
ficoms
es
jmp
cs
cs
jl
xchg
test
mov
loope
repnz
mov
loop
push
mov
pop
movsb
loope
pusha
fisubs
push
mov
pop
xlat
adc
jle
loopne
mov
pop
and
cmp
mov
and
je
push
inc
mov
push
or
push
pop
add
adc
out
mov
adc
incl
add
add
jle
xchg
ret
cmpsl
hlt
les
mov
sub
cs
movsb
dec
fisubrs
gs
push
or
sahf
push
pop
push
push
fwait
sub
push
or
push
pop
or
jbe
adc
push
repnz
pop
loopne
cs
out
call
inc
fsts
xor
shlb
loopne
mov
push
subb
inc
pop
call
mov
mov
sti
mov
mov
pop
xchg
dec
addr16
lods
into
sub
mov
popf
xor
push
sub
mov
sti
das
test
mov
adc
adc
popa
call
popa
movsb
fisttpl
loope
adc
mov
and
ss
cmpsb
loope
iret
or
fildl
push
xor
xchg
imul
add
out
lret
lea
insl
loope
mov
pop
or
xor
and
or
push
fmuls
mov
adc
push
pop
leave
add
call
popf
push
test
std
popf
mov
pop
dec
hlt
inc
push
insl
xchg
in
xchg
push
mov
jo
mov
clc
mov
fcoml
aam
push
call
loope
mov
pop
xchg
push
or
js
aas
loope
inc
int
push
loope
xchg
push
push
negb
or
test
out
mov
fimull
cs
sbb
jo
popa
lcall
push
push
nop
jle
insb
rcr
or
and
add
andb
dec
cmp
mov
rorl
pop
dec
mov
daa
lock
xchg
add
mov
jg
push
or
pop
loopne
mov
int3
cli
push
call
push
sbb
std
mov
imul
mov
les
sbb
mov
pop
pushl
xor
leave
int3
mov
push
clc
dec
inc
scas
and
aam
pop
ret
jmp
sub
test
pop
fstpl
add
xor
xchg
adc
push
test
in
fmull
inc
xchg
out
mov
jmp
sbb
dec
push
call
jle
js
jmp
ficompl
dec
test
cmp
xchg
ljmp
ret
test
inc
jnp
ljmp
mov
cs
mov
cmp
mov
ret
sti
xor
fwait
mov
gs
test
mov
std
test
fsubl
fwait
push
add
fstpt
or
imul
insl
stos
test
cs
inc
test
add
das
adc
mov
shr
mov
cmp
shll
adc
call
adc
jmp
inc
cmp
movl
mov
and
and
loopne
adc
movsl
jnp
iret
inc
fucomi
pop
nop
dec
dec
and
ficoms
andb
fyl2xp1
dec
inc
mov
rcrl
mov
pop
sbb
fdivs
ja
and
push
jne
jb
sbb
sub
push
insl
and
stc
adc
mov
std
mov
loopne
mov
xchg
xlat
fldt
pusha
sbb
xchg
sub
nop
dec
mov
sarb
jae
mov
push
int
mov
test
lods
inc
jle
out
dec
loopne
mov
pop
push
push
call
gs
aam
push
call
shl
push
call
xor
dec
pop
call
outsl
lret
pushf
xlat
xchg
std
aaa
icebp
daa
pop
mov
idiv
mov
cmc
xchg
imul
pushf
lock
and
cmp
gs
sbb
cs
xchg
cmp
outsl
movsb
xlat
mov
js
push
fsub
loope
cmc
call
xor
pop
push
xchg
cmpsl
loope
in
daa
iret
add
repz
movsb
pop
xchg
enter
ss
mov
pop
xchg
repnz
insl
jl
and
pop
adc
inc
cli
sub
mull
xlat
cmc
adc
add
std
adc
cltd
mov
inc
mov
jbe
or
test
mov
cs
jns
push
call
cmpsl
lret
cmpb
cs
repz
or
add
adc
pop
lcall
ficoml
rorl
loopne
mov
dec
or
inc
inc
pop
call
jmp
mov
stc
push
xor
loop
insl
cmp
push
in
mov
and
mov
test
xchg
inc
push
movsl
imul
mov
ljmp
push
xchg
enter
xorl
shrb
out
jno
push
inc
popa
sbb
cmp
and
or
xlat
jne
xor
aaa
pusha
add
std
adc
test
mov
cmpsb
pop
jns
or
scas
out
sahf
aam
cmp
mov
cs
and
aad
inc
add
into
xchg
and
mov
push
mov
and
fcmovbe
lea
out
cmp
lcall
push
dec
add
clc
mov
and
stos
fidivs
mov
jmp
arpl
push
popa
pop
pop
jne
stos
add
push
sbb
xorl
inc
clc
sub
jno
mov
add
jge
add
pop
adc
in
jl
mov
js
outsb
lock
es
xchg
mov
lcall
lds
cmp
cmpsl
out
insl
push
lret
xchg
lahf
mov
dec
xchg
mov
mov
mov
clc
mov
jl
sbb
xchg
mov
movsb
push
jbe
stos
arpl
rorl
cmp
sub
loopne
mov
rorb
xlat
nop
leave
cmpl
testl
out
jno
sub
out
jae
int3
cld
cs
xchg
dec
jmp
out
sub
loopne
mov
ja
pop
mov
xor
add
loope
shld
mov
push
or
pop
out
loope
adc
aad
movsl
pop
mov
cmp
popa
xor
mov
lahf
ja
int3
in
dec
cld
xor
sub
and
mov
out
add
pop
mov
jne
bound
and
or
sbb
xchg
fwait
xrelease
addr16
pop
xchg
add
lods
call
sub
test
push
rorb
ljmp
xor
lret
inc
and
in
ljmp
jns
jns
in
outsb
clc
mov
imul
gs
out
repz
imul
mov
aas
in
push
mov
aad
xlat
push
fs
addl
push
sbb
and
insb
negl
jmp
test
nop
adc
hlt
mov
cwtl
aam
sub
in
popf
or
aam
insl
inc
test
mov
jmp
sbb
inc
insl
mov
push
push
test
jl
mov
lahf
push
mov
mov
lahf
xchg
jae
inc
rorl
ja
pop
mov
insl
add
mov
addl
hlt
push
lret
sub
inc
movsl
jo
and
dec
pushf
xor
cld
sbb
or
jne
mov
in
dec
pop
jge
iret
test
jmp
daa
xchg
pop
in
cwtl
mov
sub
nop
stos
sbb
cmpl
imull
repz
mov
cmpsb
mov
jecxz
sub
sub
mov
out
mov
inc
cmpb
mov
adc
mov
stc
ror
cmp
cli
loope
incb
rclb
notb
push
fcompl
pop
ja
fstl
push
mov
lret
in
and
adc
lods
cwtl
daa
inc
insl
jl
mov
leave
add
jno
data16
add
mov
xchg
stc
das
call
dec
add
add
je
pop
cmc
push
mov
lcall
sub
dec
and
mov
inc
pop
call
outsl
jne
inc
mov
push
or
icebp
mov
jp
in
loope
lret
and
pusha
sbb
call
push
mov
jl
xchg
cs
scas
cmp
dec
es
add
inc
aad
subl
jns
leave
dec
in
outsb
sti
mov
outsb
aad
outsl
push
or
ljmp
inc
pop
xchg
mov
in
insl
movsb
cli
xor
cmp
push
mov
or
lea
dec
or
pop
jle
inc
test
adc
cwtl
sub
mov
das
xchg
cltd
jmp
sub
call
dec
movsb
in
outsl
mov
loope
and
je
inc
insl
mov
in
cmc
ret
jp
pusha
sbb
xchg
ja
loope
adc
mov
mov
popa
push
test
pop
or
jl
outsb
or
vsqrtsd
cs
inc
pushl
xorb
iret
sti
gs
or
push
pop
pop
and
bound
iret
test
cmpsb
jns
push
aad
jecxz
push
xchg
ljmp
sub
mov
and
lods
aad
jmp
movsl
and
incl
push
mov
test
out
movsl
pop
mov
addr16
mov
aas
or
loope
push
add
mov
mov
xor
and
loopne
mov
jmp
iret
lret
call
pop
sbb
pop
xchg
dec
add
out
and
sti
stos
mov
sub
jl
loope
ljmp
arpl
lret
add
add
lock
mov
and
dec
xchg
xor
roll
cmc
fbld
enter
xor
sub
nop
or
sar
mov
int3
call
in
loopne
mov
jmp
paddusw
call
dec
pop
call
xor
sub
jae
out
pop
adc
xor
loope
jp
and
cmp
mov
pop
inc
das
jmp
cwtl
and
loop
sub
leave
call
gs
test
test
push
sub
cs
movsl
cld
insl
jl
adc
imul
sub
xchg
leave
jge
sbb
inc
jns
pop
sar
mov
jae
pop
xchg
adc
mov
jnp
push
xchg
int
loopne
mov
and
mov
js
imul
stos
test
shll
scas
push
push
dec
adc
sbb
jge
push
vandps
cs
add
loope
pop
mov
or
fstps
out
sbb
xorb
mov
ljmp
imul
and
mov
cmp
mov
jge
in
and
xchg
scas
dec
add
pop
push
mov
sbb
cs
xchg
inc
js
fstl
inc
jge
icebp
and
mov
mov
sbb
fs
pop
sbb
inc
pop
adc
add
lock
mov
imul
repz
mov
mov
jno
loop
push
and
in
nop
shrl
loope
std
xchg
mov
popf
rolb
lods
gs
and
push
stc
and
cmp
dec
sub
aad
mov
outsb
sti
mov
arpl
dec
pushf
push
inc
xchg
out
repz
bound
pop
ret
loopne
add
enter
aam
sbb
or
sub
and
fs
pop
loop
jecxz
repnz
je
pop
sti
js
cmp
xchg
sub
in
popf
or
andb
loop
xchg
movsb
std
sub
shr
jno
push
mov
fsubrl
pop
adc
xorl
xchg
lock
test
call
in
dec
outsb
xor
dec
insb
test
lcall
jl
dec
out
dec
xchg
loopne
mov
sahf
cmc
or
pop
call
mov
fstps
sbb
pop
xchg
iret
lds
addr16
push
jne
int
flds
xchg
testl
mov
pop
cmova
cmpsl
insb
mov
fcoms
xchg
and
jmp
pop
xor
dec
xchg
loope
jecxz
inc
int3
jl
addr16
stos
fistps
mov
and
insl
jl
dec
leave
xor
dec
pushl
push
sbb
in
dec
fs
pop
loopne
xor
xchg
rcll
mov
dec
sbb
ss
movsl
pop
xchg
dec
or
cs
fmuls
cmp
mov
mov
cmp
gs
ljmp
mov
mov
stos
rcr
mov
cltd
mov
and
xchg
dec
add
loopne
mov
jmp
rcrl
repz
ret
out
and
inc
cmpl
loope
divb
into
test
xchg
loope
push
push
les
cmc
int
sub
imul
loopne
mov
ret
gs
ret
jl
jmp
ljmp
loope
in
fisttps
sbb
test
loopne
mov
hlt
lods
and
jl
inc
stc
nop
jle
insb
mov
cmp
pop
loopne
call
xchg
call
and
cmc
fisttps
mov
daa
sub
xchg
out
enter
and
adc
sbb
inc
popa
rolb
xor
mov
inc
sub
je
dec
adc
fmull
push
jbe
mov
enter
out
jp
push
mov
aaa
sbb
xor
nop
cmp
mov
loop
lea
mov
mov
push
loopne
jo
leave
cmpb
jecxz,pn
mov
add
mov
jno
pop
xchg
dec
test
jge
lret
movsl
addb
add
ss
jnp
arpl
push
xorl
test
sbb
cmpb
mov
jmp
pop
fdivr
incl
pop
call
sub
ret
aam
pop
xchg
inc
jns
insl
es
pushf
aam
loope
loopne
lods
jne
jecxz
mov
lahf
lea
mov
cmpsl
jp
add
gs
out
xchg
inc
and
jg
sub
dec
pop
test
fcoml
ret
jp
outsl
test
arpl
into
add
dec
cli
push
call
mov
mov
fwait
rorb
ret
decl
stc
rcrb
dec
cmpsl
imul
sub
pop
mov
cmp
pop
leave
jge
xor
popa
sbb
insb
add
pop
int
mov
rcrl
jnp
mov
xor
mov
jmp
mov
addr16
sub
lock
les
movsl
xchg
inc
clc
scas
in
push
add
dec
in
inc
lea
cltd
mov
lcall
scas
cwtl
fidivrl
push
clc
pop
out
leave
xchg
and
test
add
mov
and
add
pop
jmp
cmpsb
dec
ljmp
scas
arpl
mov
loopne
mov
in
and
je
int
jo
pusha
cltd
roll
sbb
jge
add
in
ret
pop
jbe
xor
xor
test
iret
mov
mov
mov
xchg
mov
aas
xchg
cs
push
cmp
jmp
pop
jo
lcall
mulb
jo
lods
scas
into
popf
or
loope
insl
in
lock
out
mov
test
jne
pusha
xchg
enter
and
cld
sbb
loopne
mov
imul
in
inc
sbb
aaa
inc
pop
call
or
add
fsubs
pop
adc
mov
stos
or
adc
mov
or
adc
pushl
out
fisttpl
les
loopne
mov
jmp
dec
sar
pushl
clc
or
jmp
xchg
sbb
jmp
mov
push
call
cld
fbld
or
gs
dec
std
mov
pushf
rorl
loope
push
mov
fisttpll
fsubrs
sub
sub
dec
xor
imul
loope
sbb
mov
movsb
jp
mov
sahf
aad
sti
mov
and
loope
add
int
loope
sarl
fisubrl
repnz
dec
add
icebp
stos
out
pop
push
inc
jne
push
loopne
mov
mov
xchg
jnp
mov
cli
xor
dec
cmp
mov
bound
ss
leave
inc
addr16
lret
call
jne
imul
add
xor
xchg
pop
push
and
iret
test
or
gs
mov
lea
cmp
ja
shrl
cmp
out
inc
add
sbb
sahf
cmp
lret
iret
icebp
rorb
cwtl
or
jae
inc
pop
mov
jle
or
outsl
stos
movsb
nop
jp
jnp
test
std
mov
sbb
inc
add
add
movsb
cld
sarb
jmp
sub
pushl
aaa
in
pop
rolb
xor
push
inc
mov
or
outsl
sub
dec
xorl
movsb
lret
xor
adc
gs
jl
out
or
inc
cli
xor
sbb
push
push
cmp
std
rcll
adc
daa
jb
loope
popl
jmp
loopne
movsb
dec
mov
sbb
xchg
dec
inc
push
loope
xchg
jno
pushl
loope
ror
mov
inc
cli
xor
dec
test
notb
movsl
div
dec
pusha
jmp
sbb
test
sti
loope,pn
int
mov
sbb
orb
out
subb
mov
insb
stos
fs
out
pop
ret
and
das
xchg
ds
hlt
xor
in
push
test
scas
sar
push
scas
and
mov
and
pusha
mov
mov
stc
sbb
add
test
rcrb
or
sub
inc
xchg
dec
jb
pop
adc
mov
loopne
movsl
cmp
inc
pop
call
push
push
add
std
popl
arpl
dec
sbb
ret
dec
sub
mov
pop
repz
lods
iret
pushf
lea
sbb
inc
enter
and
aam
pop
ret
add
in
daa
adc
test
sbb
daa
add
jmp
cmpsb
mov
xchg
or
scas
pusha
enter
fisttpl
cmp
inc
sub
out
lock
jecxz
jae
sbb
outsb
divl
mov
push
cmp
sub
cmc
aam
dec
pop
adc
mov
or
ror
roll
or
mov
and
jg
pop
in
or
mov
cwtl
xor
sahf
iret
jnp
mov
cwtl
cmp
stos
lds
add
popf
or
dec
sub
mov
pop
incl
je
inc
addr16
jmp
adc
and
bound
call
test
hlt
xor
dec
cmp
inc
es
push
jge
sarl
or
outsb
cmc
mov
insb
fmul
sub
add
in
subl
inc
inc
pop
and
fimull
out
push
mov
rorl
push
add
jmp
push
pop
fs
mov
pop
jno
pop
repnz
add
popf
or
mov
push
mov
add
arpl
and
jo
inc
bound
mov
rolb
loope
mov
test
stos
sbbb
mov
adc
inc
xchg
movsl
add
hlt
mov
cmpsb
adc
mov
cli
cld
pop
jne
cmpsl
dec
add
dec
cmpl
cmpsl
shlb
jl
inc
sti
adc
cld
mov
sbb
inc
jne
push
sbb
mov
movsb
xlat
or
cmp
xchg
xor
pop
dec
shl
dec
les
daa
shl
ret
in
push
xor
cmpsl
push
xchg
push
call
insl
sbbb
fisubrl
push
inc
pop
call
jbe
push
call
add
ja
pop
call
xor
sti
mov
sbb
pop
sbb
loope
add
pop
sub
adc
rcl
repz
push
push
or
adc
and
insb
mov
mov
and
aam
aas
outsl
and
ljmp
enter
inc
and
loope
push
push
into
mov
or
sbb
arpl
cs
lret
imul
mov
pop
sub
xchg
clc
lcall
pusha
xchg
dec
xorb
sbb
scas
movsl
pop
jle
mov
adc
mov
lret
fdivrp
ror
mov
lds
push
sarb
aas
adc
mov
pop
adc
mov
cmpsl
in
sub
mov
or
repnz
mov
daa
mov
fsts
bound
xor
mov
aaa
aas
jo
es
lret
in
movsb
pusha
sbb
add
cs
imul
out
push
call
shll
imul
jmp
add
pop
sub
cltd
push
or
std
mov
sbb
inc
loope
in
inc
imul
xchg
dec
and
jne
xchg
mov
sbb
mov
out
jae
imul
adc
std
xor
mov
test
jmp
jmp
dec
sti
fisubrs
dec
jl
loope
lret
cli
push
jbe
test
loope
adc
xchg
jae
loope
out
xor
test
sbb
pushl
jecxz
aad
cmova
ljmp
dec
or
and
adc
scas
fs
push
add
sbb
cmpsb
pop
xchg
dec
cmpb
cmp
mov
sbb
sbb
in
pop
popa
pop
xchg
dec
sbb
loope
push
pusha
sbb
xchg
pusha
gs
ret
jns
xchg
dec
lret
pop
insl
and
push
cltd
adc
lret
nop
outsl
insb
mov
loope
dec
dec
dec
and
aam
pop
iret
add
jmp
pushf
test
mov
lahf
loope
push
in
divb
inc
in
xchg
push
mov
push
or
mov
or
adc
dec
push
call
cmpb
sub
out
push
insl
jl
out
cmpsl
fisttpl
and
cwtl
mov
lcall
bound
insl
adc
stc
mov
mov
adc
inc
outsl
and
or
xchg
cmpsb
adc
in
or
fs
js
imul
das
fimuls
push
pop
das
out
or
icebp
mov
push
lcall
inc
or
call
xchg
scas
push
inc
divl
cld
jg
jmp
add
push
outsb
and
aas
xchg
loopne
stos
stos
xchg
aad
cmp
mov
sub
cltd
shrl
push
push
pop
mov
or
jae
pop
sbb
pop
jl
mov
pushf
rorl
jb
fsts
scas
xor
jge
notl
push
inc
add
loopne
stos
mov
xchg
push
icebp
mov
jmp
leave
out
cmp
loope
add
movsb
sbb
ret
loope
rolb
loopne
stos
and
push
add
pop
fisubrl
mov
jns
stos
loopne
dec
mov
dec
cld
out
loope
mov
jle
or
test
mov
jb
and
sub
scas
pushf
sbb
xor
std
and
bound
lods
xlat
cmp
mov
pop
push
push
jmp
xchg
jp
xor
mov
addr16
add
lods
outsl
aas
addr16
call
pop
aaa
jmp
xor
mov
sar
bound
mov
loope
fldlg2
pop
inc
jns
and
push
inc
jnp
inc
pusha
xchg
lret
cld
das
movsb
test
lods
mov
cmpl
mov
out
out
inc
inc
loope
jmp
jns
inc
jp
jmp
jge
loopne
lods
lock
pusha
xor
insl
jl
setg
cwtl
dec
std
das
arpl
xchg
aas
push
mov
xchg
inc
pusha
cli
sub
fbld
dec
jp
rol
stos
lret
push
sub
mov
cmp
loopne
lods
jle,pn
add
in
push
aad
idivl
inc
in
outsb
hlt
mov
addr16
cmp
nop
sbb
repz
xchg
push
shll
pop
xor
mov
imul
sbb
xor
je
adc
xlat
out
and
ret
mov
fiaddl
jae
xor
sbb
xchg
sarb
enter
cmp
push
sub
loopne
or
mov
mov
repnz
les
jno
gs
inc
sbb
xchg
push
mov
ret
jbe
cld
xchg
imul
pop
pop
and
xor
push
scas
mov
jl
in
cmp
cmp
add
call
xchg
jbe
test
mov
pop
add
and
mov
jno
int3
sbb
jmp
adc
dec
push
call
xor
sbb
sahf
push
call
push
xlat
push
call
jp
cli
ret
adc
mov
sub
push
xchg
loope
add
fwait
inc
and
mov
aas
xlat
dec
out
adc
ds
cs
cmp
xadd
lret
scas
gs
adc
ret
push
push
scas
lea
out
cmp
mov
ret
je
dec
mov
scas
out
pop
or
scas
mov
addl
call
int3
sbb
pop
call
inc
aad
push
in
push
mov
daa
xchg
or
adc
jnp
xor
into
int
insl
add
pop
dec
ss
test
fdivrl
add
dec
inc
adc
aam
pop
rolb
shrl
testl
mov
arpl
xchg
push
inc
stos
adc
mov
int
pop
inc
pop
pusha
enter
faddl
imul
or
jns
test
pop
pop
call
push
mov
inc
pop
call
insb
mov
jmp
mov
ljmp
test
jno
jl
mov
sti
scas
pop
mov
stos
test
scas
sub
lock
clc
je
lret
sbb
mov
ja
and
das
add
mov
pop
push
jae
xchg
cmova
push
dec
cmpsb
cmp
in
pop
inc
push
pop
add
jb
cmp
push
sub
fcoml
cmp
lcall
pop
cwtl
push
cmc
and
mov
mov
mov
clc
sahf
lock
loopne
rcrl
stos
fs
dec
add
scas
gs
fsubr
insl
jl
in
aad
mov
ret
jg
call
cli
push
rcrl
pushf
les
or
cmp
lock
jbe
adc
das
jmp
push
and
mov
es
in
aam
jae
push
cmc
adc
mov
aas
cmp
dec
add
mov
sbb
inc
mov
test
dec
mov
mov
xchg
mov
mov
inc
stc
xchg
mov
and
lds
btsl
mov
call
jg
pop
cmpsb
fisttpl
sarb
sahf
push
xorl
enter
loope
lret
dec
and
xlat
dec
xlat
cmpsb
sbb
stos
arpl
mov
loopne
nop
and
out
and
adc
jne
fimuls
mov
xchg
push
popa
push
dec
stos
lret
int
insl
push
pop
mov
out
inc
in
dec
add
jecxz
dec
out
jmp
addr16
xchg
xchg
mov
sbb
imul
jns
push
repnz
nop
dec
dec
sub
cwtl
push
or
mov
dec
sbb
push
mov
push
or
mov
pop
xor
fimuls
mov
and
sbb
push
mov
add
outsl
dec
dec
and
mov
xchg
dec
fimuls
add
cs
pop
das
fcoml
cmp
inc
es
push
out
aad
sbb
dec
in
outsb
divl
add
add
add
repz
imul
dec
dec
pop
and
lahf
out
mov
xor
or
or
xor
in
pop
mov
test
dec
or
pop
add
mov
enter
es
mov
jp
sub
ljmp
cli
je
loope
add
jb
inc
imul
jp
insl
and
push
inc
cld
scas
loopne
loope
xlat
jl
scas
push
loope
xor
sbbl
jg
jae
loopne
xchg
je
sub
imul
repz
fstl
imul
decl
mov
and
cmp
test
pushf
push
inc
and
sti
mov
fidivrs
in
inc
sub
xchg
dec
sbb
jge
call
cmp
bound
jne
cs
push
and
mov
je
dec
rorb
mov
and
rcrb
lods
cmp
mov
lcall
push
inc
bound
jp
stc
outsb
sub
jns
cmp
mov
loopne
xchg
loop
lea
dec
add
js
pop
xchg
out
adc
add
movsl
sub
sbb
and
push
pop
mov
dec
hlt
sub
xchg
in
cmpsb
adc
insl
movsb
subl
xchg
sahf
or
gs
movsl
fcoml
test
adc
loopne
xchg
push
idivb
jmp
cmpb
divl
fsub
mov
adc
out
xchg
pop
sub
mov
dec
movb
pop
xchg
inc
loopne
xchg
pop
movl
pop
call
lods
push
push
rorb
in
mov
int
into
cltd
repnz
out
test
push
adc
pushl
adc
add
loopne
xchg
push
and
or
mov
std
mov
sahf
push
test
push
stc
and
je
and
pop
stc
and
rcll
test
adcb
orb
sbb
leave
arpl
leave
inc
pop
stos
rcrb
fldl
fidivrl
cmp
popa
call
xor
adc
cli
jno
movsb
enter
loopne
loope
movl
rolb
and
xchg
fisubrl
or
clc
xor
sbb
adc
loope
les
mov
cld
mov
cmp
bound
sub
loopne
xchg
das
jg
push
call
add
ret
rclb
std
test
xchg
insl
xchg
mov
ret
jp
ljmp
and
pop
xlat
ss
cmp
mov
push
cmp
dec
and
aam
push
ret
add
ljmp
pop
test
or
cmp
jnp
in
es
ret
in
xchg
push
push
mov
sbb
lahf
xchg
or
jmp
push
rolb
imul
call
mov
xchg
pop
pop
call
add
push
test
out
inc
fildl
add
push
add
or
jns
cmp
lret
fistl
mov
les
and
ret
jmp
dec
xorl
adcb
mov
xchg
call
fcomip
movsb
xchg
dec
test
jl
out
mov
cs
jl
xor
mov
pop
dec
mov
fwait
xchg
imul
roll
mov
inc
cld
mov
stos
add
cs
pop
ret
push
int3
mov
jl
aad
xchg
fsts
gs
movsb
adcl
jl
xchg
call
mov
cmp
mov
fdivrl
push
inc
ja
pop
cmp
lret
ret
loope
sbb
xchg
push
int
xchg
push
mov
xchg
scas
fwait
test
lea
sbb
roll
push
jne
fwait
lds
pusha
mov
xchg
push
push
call
cmp
lret
xchg
push
add
stc
cs
fnstenv
dec
add
outsb
inc
loopne
xchg
sbb
cwtl
int3
std
sub
dec
add
ljmp
mov
stos
ds
fdivrp
pop
sbb
fsubr
sbb
inc
sub
adcl
mov
or
jne
lods
out
pop
or
mov
loopne
xchg
and
and
rcrb
std
mov
addr16
mov
ret
jno
clc
rol
ret
iret
or
mov
pop
gs
jecxz
lods
pop
jge
cltd
in
mov
rcl
push
push
enter
frstor
adc
test
aas
dec
pushf
and
ds
cld
and
push
in
xchg
push
xchg
mov
dec
movsl
mov
xor
jmp
sbb
dec
push
call
mov
rclb
jge
and
mov
mov
popf
jle
loope
rcrl
add
xchg
sub
insb
and
cmovb
xor
out
sub
loopne
xchg
hlt
enter
sbb
or
cmpsb
pop
pop
rorl
mov
ds
jmp
cmpsl
adc
xor
sbb
xor
mov
cs
xchg
inc
push
call
and
jmp
dec
mov
jmp
pop
call
movl
add
cwtl
push
imul
insb
or
adcl
lea
add
add
add
add
push
inc
push
dec
xor
inc
dec
dec
ds
cmp
cmpsl
cmp
mov
cmpsb
sahf
push
xchg
repz
in
popa
icebp
nop
arpl
divb
push
lret
fldt
std
push
rolb
sarb
xchg
adc
leave
pop
cmp
sub
jno
xorb
jno
xorb
aas
scas
lret
out
imul
outsl
lcall
cmpsl
ret
lods
and
rcrb
stos
pop
xchg
xor
mov
fwait
decb
jnp
push
xor
sbb
cmpsb
xor
scas
pop
dec
fdivl
in
push
lea
sahf
or
cmpsb
pop
adc
cmp
lret
pop
ds
pop
repnz
cmpsl
stos
aaa
cmpsl
ret
or
push
int
and
cmp
dec
int
push
xor
dec
mov
mov
jmp
sbb
xor
inc
pop
xchg
jb
jno
fmuls
fmuls
jnp
insl
hlt
pop
lock
mov
js
popa
xor
sub
xor
mov
push
fisttpll
out
fcoms
mov
fistpll
in
mov
in
sbb
in
in
jg
push
lds
iret
sub
add
sbb
pushf
or
mov
jns
aas
or
ret
pop
iret
stos
pop
movsb
mov
mov
mov
inc
mov
cmp
xchg
mov
sbb
rclb
insb
loop
je
inc
ret
ret
cli
push
mov
dec
mov
je
jnp
nop
push
popa
nop
inc
dec
leave
pop
cmp
cmp
mov
inc
mov
je
lea
sbb
aad
ja
insl
hlt
pop
loope
leave
pop
cmp
cmp
pop
int3
stos
shlw
inc
roll
aad
sbb
loop
out
jo
push
push
xor
addr16
ret
ret
in
sbb
shlb
sbb
pop
rolb
mov
stc
daa
mov
inc
mov
scas
cmp
mov
inc
mov
and
mov
leave
mov
jmp
ljmp
push
mov
loopne
stc
lahf
sbb
loop
icebp
nop
arpl
jmp
movsl
je
pop
into
test
mov
dec
fidivrs
mov
sbb
or
mov
test
lock
push
nop
sbb
inc
leave
pop
cmp
or
scas
cmp
mov
nop
add
cld
xchg
cmc
add
xlat
inc
aad
dec
cld
mov
mov
sbb
pop
in
cld
imul
add
xor
push
rorb
mov
fdivrl
inc
and
aaa
mov
les
jnp
in
insb
push
lret
xchg
mov
stos
push
xchg
add
sahf
jbe
push
lret
mov
add
sub
ficompl
stos
xchg
mov
in
cld
outsb
in
sbb
xchg
repnz
in
jecxz
jne
pop
fisttpl
inc
leave
pop
cmp
outsb
insb
loope
adc
xor
test
jmp
lahf
adc
loope
adc
dec
fisttps
movsb
push
in
push
shll
push
movsb
adc
daa
mov
xchg
add
lock
xor
add
adc
fs
popf
insb
xchg
popf
or
jb
xchg
cltd
push
xchg
repz
mov
inc
es
dec
enter
and
imul
adc
adcb
andb
lret
scas
pop
movsl
in
push
lahf
push
aas
mov
sub
pop
xlat
inc
and
sub
dec
fistpll
fnstcw
push
popa
nop
arpl
pushf
xor
add
mov
inc
mov
jp
fs
cmp
sbb
aad
sbbl
jnp
and
jbe
cmpl
push
lds
mov
mov
and
mov
mov
cs
dec
fstpt
cld
xchg
cmc
add
sub
and
push
ret
cmpsb
push
mov
mov
mov
jmp
stc
int3
dec
fdivrl
ret
cmpsb
push
mov
push
mov
adc
lods
cmp
lret
lret
push
mov
and
sti
jge
gs
push
out
fs
popf
insb
mov
pop
leave
test
mov
cmpsl
push
es
pop
test
call
mov
inc
cmp
jmp
jge
cmp
imul
xchg
add
or
push
xor
jg
mov
gs
cmp
in
inc
rolb
shlb
adcl
push
les
jno
jecxz
xchg
or
mov
ret
ljmpw
stc
addb
adc
add
mov
jle
arpl
mov
aaa
mov
inc
mov
xchg
xchg
icebp
add
sbb
pop
lcall
pusha
pop
repnz
repnz
test
je
out
sbb
fidivrs
dec
ret
cmpb
mov
cs
js
jns
jmp
pop
xchg
add
jp
jp
push
les
int3
jge
call
adc
adcl
mull
icebp
cmp
mov
gs
jbe
pop
leave
test
mov
xchg
or
je
mov
inc
mov
jp
jnp
in
insb
push
and
push
les
jmp
jge
dec
enter
sub
enter
shlb
outsl
ljmp
push
cld
psllq
mov
sbb
or
js
aas
scas
lret
sbb
mov
loope
sub
lds
sub
cwtl
or
stc
imul
adc
xor
sarb
pop
iret
stos
pop
xor
push
push
xor
js
gs
pushf
outsl
lret
sub
movb
pushf
pop
lds
iret
daa
enter
push
mov
pop
enter
xor
sub
push
popf
or
divl
mov
movb
dec
test
loop
pop
loop
pop
fisttpl
cmp
nop
sbb
stos
cmp
pop
orl
stc
or
push
fstpt
cld
mov
cmp
push
shlb
mov
add
fnstcw
frstor
pop
ljmp
out
pop
leave
pop
cmp
pusha
jle
jle
call
or
push
xor
pop
mov
jg
sub
jecxz
pop
ret
ret
xchg
add
sahf
je
xor
mov
ja
jle
call
fsubrl
in
xchg
add
jns
stos
cmp
inc
ret
mov
movsb
mov
pushf
sti
push
call
pop
mov
fmull
pop
jp
jg
or
sbb
push
pushf
sti
push
repnz
and
inc
std
jno
xorb
xchg
add
popf
or
sbb
adc
rolb
mov
call
sbb
arpl
aam
shlb
xchg
cmc
add
ljmp
cwtl
imul
sub
sbb
sub
add
std
or
flds
mov
test
xor
dec
inc
and
pop
mov
mov
lock
sti
sahf
insl
sbb
leave
test
mov
mov
mov
inc
sub
sub
cli
xor
and
fistl
mov
leave
test
stos
pusha
out
jl
notb
and
in
sbb
jb
in
pop
int3
inc
and
icebp
nop
arpl
and
push
mov
es
jne
xor
pop
lock
popa
add
inc
mov
mov
and
xchg
pusha
mov
das
iret
clc
pusha
notb
sbb
xchg
jle
pop
test
mov
int
fs
sbb
add
mov
pop
test
inc
les
int3
xor
scas
sub
add
stc
imul
outsb
or
sbb
or
push
inc
mov
out
out
adc
cmp
repz
arpl
xchg
gs
pop
into
test
cmp
sbb
jge
negl
push
xor
jbe
loopne
mulb
xchg
aad
adc
in
sbb
or
sub
pop
movsl
inc
shll
sub
push
mov
stos
and
push
lds
cltd
clc
or
pop
fdivl
in
repz
xorb
in
jge
notl
or
notl
push
jl
testb
stos
cmp
inc
test
rclb
pushf
xor
inc
sub
push
popf
or
dec
fistpll
mov
xchg
or
dec
xor
push
lds
push
xor
ja
mov
jle
and
mov
xchg
cmp
xchg
add
sahf
das
adc
jae
jne
out
pop
or
punpckhdq
pop
stos
imul
rorl
mov
aad
dec
movsl
sti
imul
insl
in
xor
mov
in
fldl
pop
cmp
sub
push
or
fcomps
stos
cbtw
divb
xorb
sub
or
idivb
test
cmp
mov
cmpsb
clc
jo
xorl
imul
jbe
push
scas
and
push
shlb
dec
mov
or
push
adc
sbb
cmp
push
mov
add
xchg
or
cli
push
mull
icebp
pop
push
int
and
push
leave
push
shlb
mov
scas
cltd
add
cmp
mov
ret
pop
iret
stos
pop
loopne
inc
mov
mov
pop
cmp
push
xor
sub
scas
aas
pop
test
sti
push
call
js
ss
inc
mov
js
xchg
testb
repnz
jb
xchg
lods
sub
inc
and
sub
or
aas
mov
inc
mov
fwait
adc
movsl
sub
fisttps
fsts
ljmp
pop
bound
jp
ds
popf
insb
fucomp
jle
mov
mov
fisttpll
mov
shlb
insl
hlt
pop
out
and
or
or
rcll
inc
sbb
cld
jge
je
insl
mov
rorb
es
insb
ljmp
ljmp
add
add
stc
out
sbb
add
sahf
insl
nop
sbb
dec
frstor
mov
sbb
jb
xchg
dec
push
xor
or
mov
movsb
movsb
ret
mov
test
sbb
inc
and
jbe
mov
inc
mov
push
pop
jp
fisttpll
mov
mov
and
xchg
push
inc
fdivl
in
push
into
pop
cmp
cmp
outsb
cld
fwait
jbe
pop
xchg
jb
or
pop
cmp
push
jae
addr16
ss
cli
popf
insb
test
test
movsb
ret
dec
or
sub
sub
push
ret
cmpsb
push
mov
pop
mov
xor
rorl
dec
mov
lods
or
adcl
test
pop
enter
xchg
sbb
add
add
sahf
sub
and
jl
jbe
cmpl
stc
imul
cmp
sbb
sub
jo
rclb
ja
insb
or
mov
es
inc
shll
call
dec
frstor
sti
push
xchg
lcall
mov
and
data16
adc
push
mov
fbld
rolb
fcoml
call
ds
rcll
sub
cmp
icebp
inc
int3
inc
and
cmp
sbb
imul
insl
test
bound
xchg
jo
loop
int3
pop
repnz
fs
xor
add
sub
push
mov
jg
cmp
ret
data16
imul
jmp
push
in
or
push
xor
sub
vandnpd
lods
pop
fiaddl
movsb
in
hlt
xchg
outsb
cmpsl
sbb
popf
and
xchg
add
rclb
ds
adc
push
and
jl
jne
insb
inc
into
pop
cmp
and
push
mov
mov
jbe
lahf
pop
xchg
adc
mov
mov
std
adcb
out
mov
mull
icebp
dec
inc
xlat
inc
and
jbe
ret
ret
push
xor
data16
or
xor
cld
xchg
cmc
add
fisttpll
mov
arpl
cmc
xor
push
lds
cmpsb
push
mov
push
mov
and
adc
into
dec
ret
popf
pop
fmuls
fdivs
mov
lods
in
sbb
or
stos
cmp
push
das
test
pop
test
lock
lea
mov
jle
arpl
test
mov
and
mov
shlb
jne
out
push
stos
and
mov
ljmp
iret
inc
shlb
jns
jmp
and
es
inc
mov
js
and
scas
cmp
mov
pop
int
and
jl
adcl
adc
fwait
or
pop
dec
aam
sub
fidivrl
iret
stos
pop
popl
mov
dec
int
and
pop
mov
pop
jp
jg
or
add
mov
loopew
adc
adc
out
jg
jmp
pop
ljmp
jb
loopne
adc
add
jns
mov
pop
inc
and
jns
push
shlb
sahf
insl
test
repz
pop
fwait
or
sub
lret
cli
push
lea
adc
test
or
xchg
add
std
or
xor
sbbb
call
add
sbb
pop
iret
stos
pop
add
jns
sahf
or
cmpsb
and
js
mov
dec
roll
aad
xor
push
mov
fbstp
ret
mov
mov
adc
push
fisttpl
fnsave
std
jne
mov
arpl
xchg
orl
sbb
add
notl
or
jp
fs
cmp
pop
leave
test
fwait
setg
or
shll
jne
out
pop
add
sbb
sbb
cmp
test
je
lea
stc
imul
lods
mov
xchg
jnp
mov
icebp
outsl
lcall
add
cmp
lock
in
popa
icebp
nop
arpl
loop
lea
and
sti
insl
in
bound
sub
cmp
outsl
or
shl
jbe
cmpl
fisttps
push
jbe
loopne
orl
stc
or
orb
stc
or
test
and
loopne
stos
cmp
or
fimuls
xor
jnp
mov
ljmp
or
enter
popa
sub
and
pop
je
jno
jecxz
push
ret
ret
push
xchg
repz
test
dec
fiaddl
mov
lods
stos
xor
sub
mov
inc
mov
push
enter
dec
adc
out
insb
loop
je
ja
gs
adc
cmc
push
pop
xchg
jb
jno
mov
inc
mov
cwtl
sbb
aad
shrl
jle
call
xchg
sbb
pop
rolb
shlb
nop
pop
les
mov
xchg
lock
dec
push
xor
or
stos
push
cmp
fwait
or
je
lea
imul
sbb
aad
xchg
push
lret
pop
ds
mov
mov
and
add
lret
mov
inc
mov
jbe
jl
negb
dec
frstor
shrl
test
and
ficomps
lods
addb
lock
mov
push
pushf
sti
push
repz
sbb
xchg
add
inc
stc
adcl
test
sbb
push
xor
cmp
dec
frstor
cmpsb
push
mov
fisttpl
lret
dec
fstpt
inc
daa
rolb
push
fistpl
mov
shll
lods
mov
repz
sysexit
stos
cmp
sbb
xchg
jb
es
cmp
sbb
xchg
testb
out
sahf
or
jecxz
push
in
mov
fistl
pop
cmp
and
mov
inc
mov
and
jo
loop
cmp
sub
pmulhuw
pushf
outsl
test
pop
repnz
mov
adcb
andb
mov
sbb
inc
rclb
pop
mov
cmpsb
shll
or
and
mov
ficomps
xchg
add
sahf
jp
outsb
cld
fwait
jbe
mov
scas
lret
mov
test
cmp
and
jl
addr16
pop
repnz
notb
inc
and
js
cld
xchg
cmc
add
outsb
std
insl
hlt
pop
lods
or
int
enter
xchg
push
xchg
repz
mov
push
clc
pop
mov
sbb
movsb
cmp
mov
scas
dec
rolb
sarb
ja
jg
jmp
insl
pushf
sbb
push
lret
xchg
inc
push
xor
daa
and
addb
repnz
sbb
adc
lahf
dec
push
lcall
mov
sbb
and
and
push
and
and
push
orb
cli
or
cmc
jns
mov
add
pop
int3
stos
data16
mov
lods
lret
inc
loope
jb
xchg
fisttpl
mov
add
and
insb
jns
jge
testl
daa
mov
inc
mov
test
xchg
adc
cmp
xor
in
ljmp
aad
es
cs
adc
pop
xchg
pop
fdivl
in
push
add
push
aaa
ret
jle
mov
testl
or
push
jno
push
leave
and
fwait
or
jns
out
jg
jmp
dec
mov
shlb
sub
xor
jne
pop
iret
stos
pop
movsl
jb
insl
hlt
pop
mov
fsubrs
push
pusha
lock
inc
or
or
add
pop
mov
repz
mov
lea
mov
fadds
adc
leave
test
mov
int3
inc
and
mov
js
mov
mov
stos
mov
mov
push
test
push
sti
jo
fs
add
popf
or
cmc
gs
or
gs
pushf
outsl
test
pop
int3
stos
xchg
sbb
push
fimull
fidivrl
dec
les
int3
aas
pop
into
test
out
jo
push
fisttps
fldenv
add
and
stos
dec
fimuls
push
fmuls
mov
or
mov
dec
mov
cwtl
imul
leave
pop
cmp
outsb
insb
mulb
cmp
andb
inc
sub
aaa
leave
push
mov
mov
cwtl
push
imul
jnp
mov
stos
sub
movsb
cmp
dec
daa
cmpsl
aaa
push
mov
aaa
ret
fisttps
fsts
movsb
daa
mov
and
cmp
mov
test
mov
dec
mov
decl
stc
fs
mov
popa
icebp
nop
arpl
test
lds
lods
pop
jmp
xor
mov
inc
mov
dec
fisttpll
out
push
mov
jns
cmp
gs
pushf
outsl
les
sub
outsl
lret
pop
int3
stos
shl
stc
cwtl
imul
sbb
dec
adc
outsl
lcall
movsl
int3
aas
mov
jmp
lds
mov
cs
mov
sbb
push
nop
pop
xchg
adc
pushf
sbb
lea
fisttpl
in
outsl
lcall
fwait
decb
jmp
repz
xchg
xchg
mov
ljmp
cmpsb
shll
lods
and
push
lds
popf
insb
fidivl
xchg
inc
fidivrl
lods
lret
inc
out
arpl
imul
dec
dec
jecxz
push
in
fwait
or
aam
xlat
mov
call
adc
lods
pop
mov
test
cmp
or
mov
mov
push
les
adc
mov
xchg
add
jns
adcl
lcall
popf
in
ret
mov
aas
scas
lret
jnp
addr16
or
sahf
or
cmpsb
inc
push
jo
loop
rorl
dec
mov
mov
cmpsb
push
xchg
dec
adc
daa
fsts
pop
sti
aas
mov
inc
mov
push
lds
iret
fs
xlat
inc
and
outsb
cmp
ret
pop
lret
scas
pop
ljmp
dec
fldt
dec
fdivrl
sbb
push
cmp
cmp
inc
imulb
test
dec
aad
sub
pop
push
int3
inc
and
nop
testl
repz
out
pop
leave
test
mov
scas
aas
pop
test
jp
xor
mov
iret
ljmp
push
lds
or
sbb
push
fimuls
adc
aam
idivl
mov
xchg
and
mov
in
jle
mov
dec
outsl
and
sub
or
shld
xchg
add
xor
std
insl
hlt
pop
mov
inc
xor
loop
je
stos
xor
data16
xchg
outsb
xchg
mov
imul
nop
push
popa
nop
pop
push
mov
jle
arpl
inc
inc
fidivrl
cld
fwait
jbe
arpl
jp
in
cmp
pusha
notb
mov
and
sti
ja
xorb
cmp
jbe
cmpl
adc
test
jge
sub
mov
inc
mov
mov
test
jbe
cmpl
xchg
mov
adc
aas
lods
cmp
scas
cmp
mov
hlt
lock
or
adcl
mulb
pop
loopne
call
push
xor
sub
adc
adc
mov
cmpsl
sub
push
xchg
or
push
xchg
adc
mov
jg
bound
inc
and
cmp
sahf
or
cmpsb
pop
mov
movsl
int3
aas
ljmp
cmp
mov
pop
mov
gs
jbe
lock
adc
jg
mov
jo
xorl
int3
sbb
dec
fdivrl
cmp
or
mov
js
aas
outsl
cld
xchg
cmc
add
in
ljmp
or
push
int3
pop
enter
clc
insl
std
test
inc
aad
sub
push
sbb
nop
push
popa
nop
push
rorl
mov
dec
fnsave
sbb
stos
xor
int
mov
divb
mov
jg
inc
outsl
in
bound
push
lds
mov
mov
lock
bound
outsl
sbb
pushf
pop
xlat
arpl
xchg
gs
xor
push
jecxz
push
in
dec
ret
ret
pop
int
addr16
scas
leave
cmp
mov
test
data16
xchg
outsb
leave
or
roll
mov
jmp
and
jecxz
or
xchg
xchg
adc
outsl
fcmovu
dec
fdivrs
lods
lret
inc
test
push
scas
aas
pop
test
cmp
and
imul
jl
inc
xlat
mov
enter
outsl
lcall
xor
mov
jns
pusha
or
jno
call
js
inc
rclb
xor
dec
cmpsb
jns
popa
add
add
cmpsb
add
ja
notl
iret
inc
xlat
mov
call
adcl
iret
stos
pop
movsl
lock
test
mov
inc
mov
mov
cltd
or
lcall
jp
jp
jo
jne
out
inc
xor
ss
mov
and
jbe
mov
sbb
adc
mov
push
enter
and
mov
inc
ret
std
jge
je
dec
mov
pushf
sbb
aad
int3
sbb
aam
shlb
shlb
idiv
jl
jne
jno
jmp
fcoml
mov
out
mov
push
xchg
mov
jmp
push
in
sbb
insl
std
test
mov
shll
fnstcw
or
ds
add
sahf
sub
push
shll
lds
jp
jp
out
out
jo
sbb
and
js
ljmp
jbe
sub
flds
mov
mov
dec
cmpsl
imull
fwait
jbe
push
adcb
addb
push
test
push
cltd
adc
in
outsb
cld
fwait
jbe
xchg
push
test
push
imulb
jns
jmp
xor
and
dec
repz
lea
pop
xchg
repnz
test
mov
out
adc
sbb
adc
dec
rcll
and
popa
pushf
mov
lods
mov
loop
pop
int
addr16
and
fimull
fidivrl
pop
into
test
inc
es
and
sub
fimull
push
in
jge
je
sub
dec
fidivrs
aad
dec
ljmp
divb
xchg
jg
jne
out
pop
gs
pushf
outsl
test
jns
jmp
flds
mov
leave
xor
fistps
mov
fistpl
ret
out
notb
jb
in
mov
stos
int
leave
xor
iret
pop
cmp
and
cmp
mov
cmpsb
or
pop
aam
sub
and
adc
or
push
xchg
repz
int3
gs
inc
inc
and
push
mov
push
in
jg
jl
negb
pop
into
test
sub
outsl
roll
mov
push
jns
das
rorl
mov
pop
cmp
sub
mov
push
test
ja
xorb
dec
fidivrs
add
pop
pop
lret
scas
pop
mov
jo
xorl
xor
lock
cmpl
sbb
adc
mulb
push
adc
sub
inc
roll
aad
push
fimull
fisubrl
xor
push
lds
fs
sub
pop
ds
loopne
jecxz
jne
push
rclb
jbe
inc
and
ja
lods
and
add
gs
shlb
sub
adc
mov
fs
popf
insb
lret
adc
sbb
xchg
push
jle
jnp
in
or
sahf
or
cmpsb
dec
add
push
jns
fimuls
popa
jl
jne
dec
jbe
imul
adc
int
out
jg
jmp
add
xchg
adc
dec
lret
lret
sub
push
xor
cmp
xor
xor
push
xor
push
jno
jae
cmp
xchg
mov
or
xor
int
fwait
and
xor
iret
pop
int
addr16
data16
xchg
outsb
movl
enter
addr16
ja
jno
jecxz
insb
ljmp
stc
mov
hlt
aaa
and
sub
push
pushf
sti
push
cld
inc
fimuls
push
sti
imul
insl
in
flds
mov
leave
addr16
push
in
and
scas
sub
pop
icebp
jo
xorl
test
dec
fnstcw
fdivrl
add
jnp
xchg
pop
bound
out
lock
int
cmpsb
xor
scas
pop
sbb
adc
sub
inc
iret
pop
cmp
jo
rcll
ja
gs
pushf
outsl
les
mov
stos
add
ret
push
lds
loopne
adc
dec
jecxz
in
jg
scas
cmp
sub
lds
in
in
je
addr16
mov
leave
pop
cmp
and
scas
aas
pop
test
inc
mov
push
roll
rcrl
lret
dec
fidivrs
nop
testl
fwait
jbe
sub
lds
iret
sbb
push
imul
mov
dec
mov
fldcw
lret
shlb
or
cmpsb
push
imul
ret
dec
ret
cmpb
push
std
cmp
loop
fisttpl
aaa
cmpsl
ret
rcll
push
out
fimull
mov
or
sub
mov
jns
and
inc
and
or
cmp
mov
inc
mov
out
je
lea
xchg
add
jns
add
std
or
or
add
adc
xchg
sbb
push
mov
cmp
push
xchg
repz
out
cmp
movsb
cmp
push
mov
stos
int
jmp
and
cli
push
pop
enter
or
fistl
mov
loop
je
mov
xchg
push
xchg
pop
bound
push
mov
leave
cmp
fldt
test
int3
pop
repnz
fs
inc
fidivrl
mov
test
pop
test
jae
jne
out
pop
fcoms
cmpsb
push
hlt
in
jbe
cmpl
lret
pop
ds
sub
sub
push
cmp
imull
lcall
loopw
iret
pop
cmp
push
mov
enter
sbb
add
cld
lods
sub
nop
push
popa
nop
inc
movb
inc
mov
lock
bound
mov
loopne
repz
gs
bound
fstpt
jbe
loopne
inc
roll
aad
xor
xchg
push
xchg
repz
mov
je
mov
mov
and
sub
jmp
sbb
xor
ss
mov
cmpsl
push
cmc
cmp
xor
scas
insl
add
lcall
push
lds
xor
cmp
sub
inc
lds
loopne
dec
fistpll
adc
imul
data16
test
cmpsl
mov
xchg
loop
hlt
xchg
outsb
fwait
arpl
je
out
push
mov
test
cmp
cmp
orl
xchg
sbb
pop
leave
test
dec
inc
xlat
mov
fwait
dec
ret
ret
or
in
mov
test
jge
cmp
jno
jecxz
and
or
fs
push
es
inc
mov
xchg
pop
xchg
repnz
mov
jnp
xor
lock
jge
je
outsl
cmp
mov
cmpsl
pop
push
xor
dec
xor
pop
fimuls
push
mov
cmpsl
ret
sbb
ficomps
test
and
gs
out
icebp
nop
arpl
jecxz
cmp
pop
jg
gs
sbb
push
std
or
daa
shlb
sbb
insl
std
test
inc
enter
outsl
jae
ja
loope
ljmp
mov
pop
leave
pop
cmp
pusha
cmc
popa
icebp
nop
arpl
inc
inc
and
ja
jns
mov
adc
daa
xor
cmp
mov
push
int3
inc
and
stos
int
adc
mov
mov
sbb
mov
jns
imul
mov
and
or
adc
insb
or
jecxz
repnz
pop
repnz
push
pushf
sti
push
roll
cmp
push
lds
call
xchg
inc
int
and
aaa
dec
lret
pop
ds
add
push
jecxz
push
in
jns
fs
sub
ds
test
xchg
sbb
push
xor
jns
iret
pop
cmp
jle
fldt
mov
inc
mov
dec
fmuls
fsubrs
aas
scas
lret
cmp
add
mov
movsw
jne
jl
notb
xor
inc
fmuls
fdivs
sbbl
mov
pushf
push
mov
es
gs
adc
push
test
fwait
decb
out
sbb
and
lods
sub
lret
lret
insb
loop
je
nop
sbb
mov
inc
mov
inc
lret
lret
lret
lret
cmp
arpl
bound
repnz
cmpsb
jno
xorb
inc
mov
divb
mov
inc
xlat
mov
sbb
cmp
lret
js
xor
rorl
mov
nop
testl
lret
inc
test
mov
fadds
mov
stos
adc
pusha
notb
test
dec
ret
popf
mov
stos
into
cmp
shlb
adc
mov
cmpsl
ret
jae
push
cld
sub
je
out
sbb
jns
jmp
stos
daa
mov
and
add
dec
frstor
insb
lahf
outsb
and
cmp
or
cmpsb
jb
outsl
lcall
stc
cwtl
imul
fmuls
fsubrs
cmp
inc
shll
stos
into
cmp
sub
insb
iret
pop
into
test
dec
sub
push
add
pop
bound
cltd
push
pop
loop
and
push
xor
dec
sub
xor
lcall
fcompl
stos
scas
repz
xorl
xor
add
adc
xlat
push
mov
cmc
pushf
outsl
cwtl
test
xchg
repnz
pop
fisttpl
dec
lds
iret
das
jecxz
stc
cwtl
imul
ror
inc
aam
dec
jmp
jbe
imul
add
ljmp
adcb
subb
mov
pushf
adc
dec
fidivrs
hlt
xchg
outsb
mull
nop
arpl
out
jns
mov
mov
cli
enter
push
mov
lods
cmp
mov
dec
aam
sub
loop
je
cmp
sub
lar
leave
dec
fistpll
popf
in
lock
sub
fwait
or
dec
mov
mov
sub
lds
or
jle
test
test
int
fidivrl
xchg
icebp
add
add
pop
stos
push
inc
in
jae
xchg
jnp
jle
call
popa
nop
and
push
xor
imul
fsubrs
ret
push
lds
setg
or
mov
push
roll
aad
test
mov
or
sti
imul
adc
jnp
mov
lea
and
xchg
scas
sub
lds
mov
and
insl
std
test
rclb
pop
mov
nop
inc
and
add
outsb
cld
fwait
jbe
cmpsl
sub
lds
idivb
mov
cmp
ds
es
fs
sub
pop
lret
scas
pop
cltd
in
jge
notl
and
sbb
sub
cmc
gs
push
dec
fmuls
fsubrs
mov
inc
mov
fisttpl
movsb
push
loop
adc
sub
and
popf
or
iret
pop
cmp
aas
call
stc
xchg
or
in
xchg
scas
xor
repnz
pop
repnz
insb
loop
je
mov
lret
mov
test
pop
test
and
or
pusha
orl
cli
or
out
jg
jmp
scas
pop
mov
pop
stos
mov
xchg
xchg
lahf
cli
or
push
mov
jg
dec
fsts
pop
sti
pop
int3
inc
and
es
mov
ret
push
shll
lock
std
dec
sti
imul
push
in
jg
mov
inc
inc
and
jns
int
and
push
push
leave
pop
cmp
sub
dec
frstor
cmp
and
add
ja
mov
gs
adc
mov
pushf
sbb
mov
stos
mov
lahf
cli
or
mov
mov
push
mov
mov
add
jmp
xchg
hlt
jge
je
addr16
ret
ret
es
fstl
popf
or
mov
add
push
jns
dec
adc
jne
jne
out
pop
mulb
push
inc
rolb
shlb
adc
jl
js
ljmp
lods
push
lret
pop
ds
lods
cmp
popf
or
mov
dec
mov
mov
and
mov
aad
mov
mov
lea
push
xor
cmp
das
scas
cmp
mov
mov
in
ljmp
ret
mov
mov
daa
int
ret
ret
inc
shll
es
mov
jp
popa
add
add
xchg
pushl
xorl
out
sub
push
shlb
xorl
lret
rcll
jo
push
lret
cmc
push
les
int3
jge
jecxz
push
in
pop
mov
js
adcl
adcl
test
push
xchg
repz
in
cld
fs
popf
insb
xchg
push
in
flds
mov
or
sbb
inc
aad
dec
test
mov
jle
mov
inc
mov
addr16
adc
adc
inc
xlat
mov
cwtl
addb
repz
sti
xchg
adc
das
mov
mov
jg
push
and
mov
ret
push
lds
loopne
jb
xor
push
lds
adc
inc
aad
sub
imul
roll
shll
roll
aad
rolb
mov
call
movsb
adcb
sbb
dec
fimull
fidivrl
fdivl
in
int3
push
lds
decl
loopne
pushf
xor
dec
popf
add
aam
sub
pushf
sti
push
fistpll
scas
jmp
stc
cwtl
imul
imul
and
into
dec
fdivrs
lcall
sbb
jp
lea
cltd
or
jge
popf
or
enter
outsl
or
aas
mov
inc
mov
push
adcl
fimull
fisubrl
cld
fwait
jbe
test
mov
sbb
lods
pop
hlt
sbb
imul
add
pop
mov
jg
sub
sub
push
lret
lret
xchg
add
jns
rcll
sub
dec
fdivrs
shlb
arpl
shlb
xchg
adc
push
lahf
push
mov
cmpsl
ret
push
rolb
rolb
mov
loopw
pop
loop
cwtl
adc
scas
aas
pop
test
cld
psubsw
notl
mov
pushf
out
notl
adc
das
mov
aas
mov
inc
mov
cmp
cmp
loopne
adc
push
cmp
push
mov
inc
daa
sarb
xchg
add
and
popf
cmp
fisttpll
out
imul
insl
mov
push
lahf
push
in
jnp
mov
fadds
mov
leave
jmp
xchg
pusha
out
sub
popa
icebp
nop
arpl
dec
mov
push
mov
mov
pusha
in
sbb
cmp
dec
fidivrs
dec
das
fidivl
and
cmp
mov
and
cmp
pusha
notb
sbb
xchg
gs
loop
pop
loop
rcrl
stos
data16
scas
cmp
mov
insl
loopne
adc
inc
adc
cmp
outsl
jo
jbe
loopne
jmp
rcl
inc
aad
dec
cld
mov
mov
sbb
xor
lods
or
ret
ret
ljmp
xlat
mov
movsl
mov
mov
cmp
lods
cmp
cmpsb
xor
scas
rolb
inc
test
xchg
jp
pop
rolb
dec
mov
loope
adc
divl
xorb
jle
mov
scas
pop
test
inc
mov
enter
mov
cli
popf
insb
lret
sbb
or
push
jno
inc
iret
inc
shlb
xor
adc
and
push
lahf
push
mov
mov
das
test
jo
xorl
jo
cld
push
adc
iret
pop
lret
scas
pop
cwtl
js
jno
jecxz
popf
or
cmp
repnz
pop
bnd
pop
iret
stos
pop
loopne
or
xor
pop
lret
scas
pop
mov
gs
pushf
outsl
mov
imul
push
xor
sbb
mov
inc
mov
out
icebp
nop
arpl
cmpsl
push
jp
addr16
sbb
add
xchg
jg
addr16
pop
xchg
push
mov
es
dec
mov
dec
ret
repz
mov
dec
fnsave
mov
mov
lahf
movsb
xor
and
test
jge
cmp
subb
sub
js
mov
cmc
jae
xchg
sbb
rorb
mov
pop
cmp
push
mov
pushf
sti
push
adcl
test
xor
int
aam
into
pop
cmp
xor
repnz
fisttpl
fisttpll
cltd
or
insb
and
ds
dec
mov
scas
pop
mov
scas
dec
cwtl
pop
xchg
adc
jle
add
push
dec
fistpll
and
into
cmpsl
mov
popa
jmp
cltd
xor
cmp
add
add
jmp
int3
popf
jmp
push
mov
xchg
jle
in
js
test
push
add
jmp
adc
add
add
jmp
repz
int3
jne
int3
popf
por
int3
popf
jmp
in
sbb
or
ja
cmpl
jmp
clc
mov
sbb
mov
mov
pusha
jmp
call
jmp
cmpsb
daa
mov
and
add
mov
rcll
add
rolb
add
movl
cmp
dec
popl
lea
push
pushf
addl
jmp
sub
adc
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
dec
mov
shrb
ja
loope
xor
or
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
nop
add
movsl
jmp
call
jmp
call
jmp
push
ja
loope
dec
dec
bound
filds
and
pop
jmp
jp
mov
dec
call
jmp
mov
fistl
fwait
movsl
jmp
test
cltd
clc
or
movsl
ja
int3
movsl
push
jmp
leave
inc
pop
ljmp
sub
sbb
call
jmp
cltd
sbb
lock
sbb
jae
sti
or
cld
jae
pop
jmp
xor
pop
into
pop
cmp
pusha
xchg
repz
jmp
call
jmp
jae
jbe
loopne
adc
lret
mov
add
xchg
jmp
pushl
jmp
call
jmp
dec
fdivl
in
sbb
jmp
lcall
add
and
add
jmp
out
jle
mov
scas
popa
popf
lea
ret
sbb
out
jmp
mov
mov
and
in
jecxz
jmp
xchg
jnp
cmpsl
cld
push
int3
popf
push
test
push
mulb
add
mov
out
mov
jmp
mov
inc
or
shlb
inc
call
jmp
hlt
notl
pop
test
fdivrl
movl
movl
jmp
test
popa
jmp
into
push
lret
lahf
pushf
call
jmp
add
inc
push
hlt
out
pop
sub
sbb
sub
jmp
out
lahf
call
jmp
test
cmpsb
shll
mov
mov
ret
int3
popf
cmp
enter
hlt
or
add
mov
loope
leave
xchg
jo
jmp
cmc
mov
add
add
jmp
pop
push
xor
dec
pop
into
test
out
sub
mov
jmp
mov
mov
jmp
mov
add
sbb
add
scas
mov
xchg
loope
add
add
jmp
xchg
adc
in
sbb
cld
jmp
push
mov
and
cmp
jne
addl
jmp
jp
outsl
or
out
repnz
pop
popl
lea
push
pushf
addl
jmp
outsl
loopne
pop
jmp
cwtl
cmp
or
add
push
push
inc
push
xor
cs
insb
add
daa
sbb
push
popf
or
shll
cmp
lcall
sub
xor
lds
fbld
sbb
nop
sbb
lds
add
das
fisubl
loop
in
cmp
add
xor
jg
outsb
or
das
xchg
call
jmp
dec
into
pop
cmp
and
xchg
int3
popf
sub
aas
pop
test
pop
lods
pop
push
fnstsw
call
jmp
cmp
ret
adc
jmp
loope
jae
sbb
out
cwtl
or
add
jle
call
shlb
outsl
xor
jmp
rolb
add
jmp
dec
dec
pop
inc
mov
and
xchg
add
add
add
add
fmuls
add
cmp
pop
cmp
pop
movw
jmp
dec
jp
add
jmp
jns
in
xchg
add
add
jmp
pushl
mov
cltd
sar
inc
and
popf
ret
in
mov
pusha
pop
add
and
popa
call
jmp
dec
push
xor
cmp
sbb
mov
jmp
pop
inc
push
xor
jns
call
call
jmp
shlb
xchg
gs
in
sbb
jmp
adc
mov
add
add
stc
sldt
mov
cmpb
sub
mov
movl
jmp
cs
push
lds
out
adc
pop
inc
jmp
mull
xchg
outsb
mov
mov
mov
andb
sub
jmp
sub
in
push
mov
jmp
cmp
jmp
dec
aaa
imul
add
into
pop
iret
stos
pop
into
into
sub
add
fidivl
jmp
sub
mov
add
clc
adc
add
inc
aad
dec
cli
fstpl
inc
in
mov
jmp
push
mov
add
add
pop
adc
add
mov
mov
xor
sub
add
xchg
popf
pushl
jmp
add
and
jmp
push
fsubr
add
add
jmp
or
dec
xlat
inc
and
cmp
inc
adc
mov
xchg
adc
hlt
frstor
clc
mov
dec
mov
mov
mov
add
call
jmp
imulb
cltd
push
mov
cmpl
add
movzbl
add
jmp
loop
notb
xor
test
jmp
mov
out
adc
pop
mov
push
stc
incl
xor
popl
jmp
push
jmp
call
jmp
and
in
mov
jmp
and
fs
jmp
std
call
jmp
dec
lret
lret
sub
jmp
aad
shll
call
push
push
inc
push
xor
cs
insb
add
imul
add
xor
add
gs
pop
loop
scas
fcomps
call
jmp
dec
iret
pop
cmp
and
pop
jmp
or
addb
lock
test
adc
add
imul
adc
sub
sldt
add
jo
jns
insb
imul
add
lret
adc
ja
repnz
pop
repnz
xor
nop
hlt
add
addr16
sbb
fisttpl
cmp
add
sub
cli
jno
xorb
out
in
xor
cmp
add
inc
adc
sub
add
test
movsb
ret
ds
sarl
pushf
addl
pusha
jmp
mov
jmp
adc
std
imul
add
add
add
jnp
in
aas
mov
inc
dec
add
xorl
and
movw
jmp
call
jmp
ss
pop
sub
mov
jmp
xchg
cmp
jmp
int3
popf
popa
mull
icebp
dec
xchg
jmp
mov
xchg
lock
popa
incl
popf
ret
call
jmp
inc
aad
sub
imul
test
cmpsl
xor
data16
call
out
or
stc
call
jmp
dec
fldt
mov
gs
cmp
sbb
sub
mov
pushf
jmp
pop
jmp
mull
xchg
popa
fimuls
add
ficomps
fwait
decb
call
dec
jo
outsb
inc
insb
imul
add
pop
sti
ljmp
ss
add
add
jmp
in
jg
mov
loope
ljmp
cmp
or
aaa
sub
sub
popf
pushl
jmp
fwait
daa
jnp
jmp
push
or
jmp
in
test
add
lret
mov
jmp
jle
jnp
in
or
shrl
add
sbb
lds
rolb
jne
addl
mov
jmp
mov
stos
loop
adc
add
and
mov
ret
and
add
add
icebp
add
add
mov
jmp
jmp
jge
insb
or
out
fwait
sbb
iret
pop
cmp
xor
rorl
mov
andb
sub
jo
jmp
jp
pop
jmp
pusha
jmp
addr16
adc
adc
lret
sbb
push
mov
subl
popl
lea
push
pushf
addl
jmp
jae
outsl
or
hlt
and
mov
jl
sub
jmp
data16
jl
notb
sbb
or
push
sahf
cmp
jns
or
add
push
push
inc
push
xor
cs
insb
add
nop
jl
xchg
clc
jmp
push
lahf
punpckhdq
mov
xlat
mov
call
aaa
or
add
cmp
inc
dec
add
add
xchg
add
or
jnp
incb
push
call
jmp
in
push
pop
out
jmp
jmp
add
aam
xorl
mov
cmp
es
cs
xchg
push
xchg
repz
cmpsl
scas
cmp
add
add
je
insb
imul
inc
popa
je
add
mov
and
ret
int3
popf
add
or
cltd
jmp
adc
dec
mov
jmp
incl
jmp
insb
movzbl
jmp
cmpsb
cmp
mov
xchg
jge
je
addr16
jns
and
add
cmp
je
popa
mov
jmp
cmp
inc
rorb
mov
push
pushf
jmp
xchg
or
pop
sub
add
xchg
popf
pushl
jmp
pop
mov
sub
cmp
insb
loop
je
fnsave
add
add
jmp
xchg
add
mov
push
xor
sub
mov
int3
dec
fnstcw
mov
and
sarb
movsb
push
adc
adc
sub
or
sbb
fs
mov
adc
lock
jmp
fs
jl
testb
add
add
add
add
dec
push
xor
sub
fdivl
in
cmc
jl
jne
ja
rclb
addr16
pop
jbe
jmp
les
and
jo
repz
test
cwtl
decl
fiadds
aam
enter
outsl
lea
sub
mov
jmp
jmp
shll
xchg
and
sub
adc
scas
cmp
mov
loopne
push
cmp
jne
addl
mov
jmp
xchg
xchg
in
movzbl
add
cmp
je
popa
mov
jmp
cmpsl
mov
popl
jmp
pop
int
and
jl
sub
lahf
punpckhdq
fcoml
xlat
cmc
ljmp
gs
ds
mov
fs
jmp
mov
mov
pop
jmp
rcrl
pop
lea
jb
in
repz
xchg
rcrl
data16
cmp
ret
jne
addl
mov
jmp
pop
mov
jle
inc
mov
rcrl
iret
jg
arpl
inc
push
pushf
addl
pusha
jmp
rolb
inc
stos
xchg
or
add
push
push
inc
push
xor
cs
insb
add
sub
add
outsl
jae
inc
insb
imul
add
sub
into
or
sbb
out
int
nop
adcb
jmp
push
rolb
rolb
push
ret
push
jmp
adc
bound
jmp
inc
les
int3
cmp
dec
fstpt
xor
sbb
daa
mov
ret
xchg
int3
xor
add
sub
mov
inc
mov
dec
lds
iret
mov
pop
or
inc
dec
add
mov
inc
and
jmp
loop
loop
je
leave
inc
aam
dec
lcall
daa
cmp
dec
mov
inc
adc
lea
xchg
icebp
add
in
pop
lock
icebp
nop
arpl
jmp
mov
jmp
inc
fisttpl
out
adc
inc
push
ret
ret
xor
sbb
sub
jmp
cmp
daa
adc
add
xor
fisttpll
out
adc
dec
jecxz
push
in
mov
addb
popa
mov
ret
pop
xchg
add
push
rcrl
pop
mov
lds
and
jmp
or
jne
jmp
iret
push
lds
cmp
mov
test
push
cltd
mov
stos
call
or
aad
lds
adc
or
mov
testb
psubsw
add
das
lods
cmp
adcl
push
lret
pop
sub
add
xchg
popf
pushl
jmp
loopne
jle
popa
jmp
inc
inc
jmp
xchg
adc
xchg
or
dec
in
outsl
lcall
sub
rorl
test
jmp
mov
add
jmp
orb
stc
or
or
orb
stc
or
roll
cmpl
arpl
pop
cmp
jmp
xor
in
pop
stc
lea
jmp
cmp
outsb
loopne
adc
inc
lods
and
sahf
mov
add
jmp
adc
sbb
or
jmp
or
popa
in
bound
loop
je
ficoms
jmp
mov
cwtl
sbbl
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
sub
inc
shll
pop
jb
es
ljmp
call
jmp
inc
aam
sub
mov
jmp
mov
pop
movsl
pop
jmp
xor
dec
dec
add
push
movw
jmp
popa
hlt
push
cld
pop
xchg
or
test
call
push
dec
inc
dec
dec
xor
cs
insb
add
mov
add
jmp
hlt
insl
std
test
push
xchg
mov
das
dec
mov
call
jmp
movl
jmp
je
js
ljmp
fdivl
mov
dec
mov
in
jmp
jmp
ja
push
cld
adc
jnp
mov
or
jg
pushf
addl
pusha
jmp
iret
dec
fistpll
add
stos
pop
sub
add
jmp
in
lock
bound
out
jle
imul
push
ja
inc
and
jmp
pusha
ljmp
ret
cmpsb
push
mov
sbb
movsb
cmp
pop
call
repz
fcomip
mov
jae
jmp
mov
andb
add
adc
mov
jmp
andb
jmp
xchg
pop
idivb
jp
cld
ja
xorb
pusha
movzbl
add
cmp
je
jmp
cli
push
pushf
add
add
add
mov
jmp
or
clc
push
pop
enter
popa
cmp
sub
inc
or
xchg
mov
jmp
gs
pop
repnz
sub
stos
cmp
popa
stc
imul
inc
and
popa
incl
popf
ret
sti
pusha
notb
push
aaa
ret
push
mov
sbb
inc
fimuls
popa
mov
mov
pop
int
lods
cwtl
je
std
sub
jmp
and
in
cli
popf
insb
test
nop
push
popa
nop
jne
push
mov
popa
mov
ret
mov
pushf
sti
push
rcl
mov
outsb
scas
shr
mov
jmp
cltd
mov
jmp
push
inc
and
movsb
cs
mov
inc
int
and
xor
add
cmp
je
jmp
in
das
adc
inc
cmp
jmp
or
add
popa
out
jl
mulb
add
in
jecxz
cmp
jne
addl
jmp
push
xchg
add
push
les
mov
inc
and
push
shlb
inc
insl
jmp
je
jmp
sbb
aas
std
jae
xchg
xchg
add
popa
incl
popf
ret
out
jg
mov
cltd
push
pushf
sti
push
mov
xor
cli
insb
leave
jmp
lahf
or
daa
fisttpl
sub
fiadds
dec
popl
pushf
xor
inc
and
xor
jl
popl
jmp
push
jmp
push
int
and
push
in
jmp
iret
pop
cmp
push
inc
rolb
mov
jmp
mov
adc
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
dec
leave
pop
cmp
and
lcall
add
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
nop
jne
in
jmp
cmp
ficomps
ds
sub
pop
jp
jb
dec
fdivrl
sub
adc
sub
add
shl
jle
push
jle
mov
pop
lods
pop
mov
jle
jmp
or
dec
add
xor
jle
mov
mov
push
lds
xor
sub
sbb
addr16
in
jmp
lret
mov
or
mov
push
dec
add
andl
add
jmp
pop
mov
js
dec
pushl
xchg
xchg
int
in
xor
mov
jmp
test
test
push
test
push
dec
fisttps
fsts
pop
int
addr16
dec
mov
jmp
lret
arpl
xchg
rclb
stos
mov
call
ja
jo
imul
pop
add
add
popf
lret
jnp
inc
and
xor
jmp
into
push
pushf
jmp
mov
mov
orl
jmp
sub
add
xchg
jmp
cltd
imul
jmp
mov
out
jns
jo
loop
mov
mov
inc
fs
stc
popfw
jmp
cli
popa
icebp
nop
arpl
fcomps
and
out
jl
idivb
sbb
cmp
je
jmp
lds
mov
cmpsb
rolb
inc
test
xchg
or
jns
loopne
adc
push
push
loop
mov
jmp
shll
pusha
jmp
mov
jmp
push
lahf
punpckhdq
fwait
jbe
sub
inc
adc
cmp
mov
movl
movw
jmp
and
mov
mov
jmp
stc
jno
xorb
cmc
pop
sub
jmp
cmp
mov
lods
lret
inc
mov
or
xchg
lahf
cli
or
std
incl
popa
sbb
jmp
sbbb
popa
jmp
scas
and
loopne
adc
and
inc
fidivrl
and
inc
or
andb
sub
jo
jmp
add
pop
test
jge
and
add
add
mov
movzbl
add
jmp
fs
push
cld
dec
xchg
add
out
adc
pop
hlt
popa
icebp
nop
arpl
pop
cmp
jmp
lods
aas
scas
lret
sbb
ljmp
sahf
pop
xchg
add
push
and
sub
xchg
add
jnp
push
jo
mov
and
cmp
jne
jmp
aas
cmpsb
xor
scas
inc
cmp
or
add
push
push
inc
push
xor
cs
insb
add
push
std
popa
icebp
nop
arpl
mov
cmpsl
loop
call
jmp
xchg
std
or
sub
xor
sub
push
push
popf
or
pop
sub
jmp
push
mov
jns
jbe
fisttps
fnstenv
mov
jp
add
push
jmp
mov
jmp
cmp
xor
pop
enter
jle
push
cld
scas
cmp
mov
mov
sldt
add
add
add
push
lea
ret
jmp
mov
cmp
cmpsb
shrb
pop
xchg
push
pushf
addl
pusha
jmp
push
inc
dec
add
sbb
add
push
cmp
jmp
inc
enter
outsl
fists
mov
dec
cmpsb
imul
lcall
pop
call
ja
jo
imul
ja
xor
arpl
mov
jmp
inc
add
and
add
cmp
mov
sti
dec
push
rclb
imul
popl
lea
jmp
ljmp
test
push
je
mov
dec
add
popa
dec
popf
jmp
mov
mov
cs
push
lds
cwtl
imul
out
adc
pop
mov
std
jmp
rolb
add
jmp
mov
pop
mov
mov
mov
lea
jmp
and
sub
outsb
or
adc
mov
orl
orl
add
popa
jmp
out
ja
xorb
and
call
add
xchg
popf
pushl
jmp
pusha
jmp
fcomps
test
mov
xchg
mov
test
js
insb
or
clc
xor
incl
inc
or
cmp
inc
mov
jmp
jecxz
cli
popf
insb
mov
in
pop
fdivl
in
fcmovnu
test
mov
jmp
ret
dec
fistpll
loop
je
idivb
mov
dec
adc
roll
xor
push
xor
cmpsb
sub
push
pushf
jmp
sahf
adc
es
cs
push
xchg
sub
sar
inc
adc
dec
fisttps
jge
je
xor
sbb
dec
stos
das
popa
jmp
push
lret
pop
ds
enter
pop
iret
pop
into
test
add
sahf
sub
scas
jne
jge
divl
call
sub
jo
mov
and
cmp
jmp
sub
and
mov
or
cmp
or
ds
insb
loop
je
fildl
mov
stos
add
repnz
mov
addl
mov
jmp
rorl
push
shll
jmp
add
jmp
sub
mov
test
jmp
jle
xchg
testb
xchg
das
into
lock
xor
lea
jmp
mov
jo
fs
add
xor
in
cmp
sub
outsb
dec
enter
cmp
add
add
inc
push
xor
cs
insb
add
sub
imul
adc
jl
jne
ja
inc
pop
sub
jmp
cmp
stos
and
add
mov
cs
addl
fistpll
stc
cwtl
imul
in
pusha
jmp
out
stc
cwtl
imul
daa
lods
cmp
stc
push
lahf
push
cld
repz
add
add
lea
push
pushf
addl
jmp
outsl
std
insl
hlt
pop
mov
jg
mov
cs
jmp
jmp
repnz
popf
insb
insl
hlt
pop
lods
les
mov
push
test
cwtl
call
dec
gs
popa
addr16
outsl
js
add
lret
loope
jmp
cmc
gs
pop
into
push
les
fisttps
mov
jmp
lock
lcall
and
xchg
mov
add
add
add
mov
lea
ret
jmp
pop
jmp
cmp
mov
stos
into
cmp
cmc
add
stos
sub
test
std
and
add
ret
frstor
add
or
or
jno
popf
popl
jmp
ficomps
test
adc
push
mov
pop
add
sub
add
jmp
fistpl
stos
data16
jecxz,pn
mov
jmp
das
aad
xor
mov
outsl
sahf
hlt
jge
je
xchg
popf
in
icebp
mov
xchg
repnz
and
add
push
jmp
addr16
addl
jmp
scas
daa
mov
and
add
push
fdivl
in
push
fimull
fidivrl
imul
inc
adc
xor
int
les
lret
mov
sbb
and
popf
jmp
in
ljmp
das
fidivl
roll
aad
push
lret
pop
ds
cmp
inc
dec
add
cmpl
dec
add
add
jmp
and
mov
nop
push
cmp
jmp
int
lds
mov
lcall
lret
lret
aas
mov
xchg
xchg
sbb
test
mov
mov
ret
ds
pop
push
aas
popf
jmp
or
jnp
movsb
cmp
dec
lds
mov
mov
test
sarl
mov
add
push
ret
cmpsb
push
mov
xor
jmp
mov
test
cmp
fists
pop
mov
test
sub
push
shr
lea
pushl
lea
jmp
jne
mov
std
jno
xorb
cmpsb
xor
scas
jp
dec
fnstcw
ljmp
dec
fstpt
jbe
loopne
and
pop
int3
pusha
jmp
xchg
sbb
cmpsb
popa
jmp
mov
cld
jae
xchg
adc
sub
popa
mov
jmp
outsb
ljmp
stc
scas
es
inc
mov
add
xchg
adc
add
add
dec
mov
add
mov
inc
mov
push
leave
pop
cmp
sub
mov
js
arpl
inc
je
js
ljmp
lret
pusha
pop
repnz
repz
fdivl
in
inc
push
xor
sub
add
insb
mov
cld
cwtl
sbb
aad
sarl
imul
enter
pop
fisttpl
fnstsw
mov
aad
xchg
pop
bound
movsb
push
repnz
in
jge
mull
xlat
pop
leave
test
fwait
scas
and
fldt
mulb
push
adc
mov
sahf
icebp
gs
pushf
outsl
fcoml
xchg
mov
jecxz
in
jg
aas
stos
cmp
or
sub
pop
push
xor
sub
push
mov
xchg
ja
inc
xlat
mov
enter
mov
xor
xlat
inc
and
aaa
test
fwait
decb
xchg
jbe
cmp
data16
xchg
outsb
mov
popf
outsb
ficomps
test
mov
mov
inc
mov
cmp
and
mov
inc
mov
popf
adc
in
sbb
add
sbb
sub
push
xchg
and
adc
cltd
outsl
add
mov
jecxz
loope
jae
cltd
or
cmpsb
xor
scas
pop
add
cmp
add
mov
orl
nop
or
xchg
add
jns
cwtl
push
imul
popf
or
sbb
mov
gs
jl
push
lahf
push
into
dec
fidivrs
push
cmp
sbb
popf
or
sub
out
fs
popf
insb
lahf
sti
jo
xorl
call
in
sti
lcall
mov
mov
cmc
push
push
jnp
in
aas
jne
outsl
or
lds
or
mov
mov
testl
push
mov
xchg
cmc
popa
icebp
nop
arpl
mov
mov
and
adc
out
dec
outsb
hlt
push
cld
aas
push
into
pop
cmp
xor
sbb
push
xchg
repz
out
inc
shll
mov
adcl
test
jns
mov
lcall
dec
fdivrs
adc
jp
mov
gs
adc
sbb
adcl
dec
frstor
shrl
int3
rcrl
stos
pop
cmpl
fwait
sbb
dec
fdivrl
add
push
dec
push
xor
imul
arpl
shll
and
sub
adc
psubd
insb
or
scas
pushf
or
aas
scas
lret
pop
mov
jle
dec
mov
movsl
push
lret
lret
inc
and
or
add
push
xlat
inc
and
cmp
fnsave
out
or
mov
jg
sti
ja
xorb
sbb
inc
enter
sub
lock
add
arpl
xchg
les
into
outsl
loope
adc
and
sub
inc
lret
test
fidivrs
push
lahf
add
arpl
lahf
punpckhdq
jge
cmp
mov
int
and
push
outsl
hlt
push
cld
push
mov
mov
and
pusha
notb
in
jg
mov
movsb
ret
testl
cs
cmp
mov
loopne
notl
fstpt
mov
scas
aas
pop
test
and
cmp
stos
and
mov
jns
insb
int
fidivrl
aaa
push
mov
jp
inc
dec
fidivl
movsb
add
scas
enter
pop
into
push
adcb
xorb
or
rcll
jbe
sub
ljmp
sub
pop
movsl
inc
shll
stos
into
cmp
lods
pop
fimull
dec
fstpl
arpl
cmc
cmp
scas
enter
dec
mov
xor
add
jg
mulb
sub
xchg
mov
enter
test
add
push
leave
pop
cmp
and
test
stos
dec
push
push
js
mov
lea
sub
mov
mov
cmp
ja
jb
dec
sub
test
jge
xor
pop
pop
ret
xor
inc
jmp
or
jmp
call
mov
scas
sbb
adcb
subb
mov
sbb
push
int3
inc
and
notl
fstpt
ss
mov
inc
mov
xor
addb
testl
hlt
pop
in
movl
and
xchg
rcll
pop
scas
add
mov
mov
xchg
adc
loope
adc
xor
jb
add
cmp
jae
in
dec
int
and
cmp
adc
pop
xchg
jb
jno
and
gs
pushf
outsl
cwtl
divl
xchg
mov
iret
fs
call
inc
lods
and
inc
fidivrl
lcall
les
xchg
and
and
mov
outsb
popf
xor
mov
pop
into
test
and
movsl
mov
xorl
loopne
bts
call
or
rorb
call
lds
nop
push
popa
nop
pop
or
pusha
bnd
icebp
xchg
sbb
loopne
adc
add
rcll
sub
sub
daa
shlb
sbb
mov
pushf
pop
xchg
adc
adc
es
clc
push
mov
add
sbbb
cmp
movsb
sub
mov
idivl
jp
repnz
notb
inc
sub
je
fisttpl
repnz
pop
repnz
sub
push
rcll
push
jo
add
xchg
popf
add
sub
es
lds
fs
imul
insl
in
insb
icebp
popa
add
jbe
or
in
jp
jp
stos
sub
mov
dec
iret
pop
cmp
sub
inc
xlat
mov
cwtl
orl
cs
sub
pop
jg
push
cld
push
in
fs
popf
insb
mov
pop
int3
stos
xchg
rcrl
xchg
addr16
xor
jbe
xor
call
cmpsl
cmp
lret
lret
fisttpll
out
and
aas
scas
aas
pop
test
cmpsl
push
sti
inc
aad
sub
push
push
lds
xchg
cmpsb
cmp
insb
hlt
push
cld
push
sahf
add
rcll
cmpsb
push
aam
add
jo
xorl
add
xlat
push
lds
mov
stos
pop
fimuls
sbb
pop
enter
dec
enter
cmp
mov
or
jg
push
cld
push
or
cltd
adc
insb
or
mov
in
jno
xchg
testb
ds
xchg
add
daa
mov
dec
mov
pop
ljmp
aad
mov
jns
cmp
adc
sub
mov
dec
mov
dec
mov
lock
sub
sub
in
je
lea
insb
or
sbb
les
add
jne
xchg
cmc
add
jbe
outsb
or
pop
inc
into
pop
cmp
add
fs
cmp
inc
and
jns
lahf
punpckhdq
xor
push
shrl
cmp
mov
in
push
mov
jns
cmp
mov
inc
mov
mov
mov
sbb
andb
push
xor
or
xor
faddl
dec
cmpsb
mov
mov
js
mov
flds
mov
leave
sub
fistpl
test
xchg
adc
lds
dec
test
mov
lock
bound
jne
cltd
sbb
aad
int3
out
call
sarb
sub
dec
lds
mov
test
data16
xchg
outsb
popf
in
std
test
jle
fs
sbb
cmpsb
xor
scas
pop
mov
pushf
lds
mov
cmp
push
pop
mov
call
movsb
mov
mov
and
mov
or
push
push
mov
je
lea
test
pusha
notb
repnz
mov
xor
dec
call
stc
push
lahf
punpckhdq
adc
es
mov
bnd
or
jne
push
jp
in
dec
pop
aam
sub
sub
js
in
bound
bound
ljmp
pop
repnz
rolb
mov
call
dec
call
push
cmp
fmuls
push
jecxz
adcb
andb
lods
and
ja
inc
xlat
mov
lods
jl
jp
in
push
pop
lret
pop
ds
gs
imul
lds
in
pop
aam
dec
fstpt
add
jp
mov
gs
jno
mov
cmp
dec
frstor
ficoms
lahf
punpckhdq
loop
std
add
add
jo
in
sbb
movsl
int3
aas
lcall
add
push
jne
out
dec
add
ret
mov
js
ljmp
mov
xchg
and
mov
mov
jle
cmp
mov
xchg
xor
dec
ret
xchg
sbb
insb
cmp
sbb
jle
jbe
loopne
add
pop
xchg
adc
movsb
and
enter
dec
mov
mov
hlt
pop
sti
push
and
movsl
xor
rolb
sarb
add
cmpsb
call
dec
int
fdivrs
js
ljmp
lea
jg
jmp
pop
mov
adc
jmp
sbb
sbb
add
jmp
shrl
cmc
inc
fisttpl
fnsave
dec
frstor
stos
pop
ror
les
and
push
xor
lret
add
adc
cmpsl
and
insb
loop
je
xchg
in
out
ret
pop
pop
sarb
jl
add
je
jmp
ret
jmp
call
lret
xor
xor
pop
jp
cmp
lds
mov
cwtl
decl
mov
ret
xor
adcb
addb
shlb
insb
lahf
ja
in
sbb
add
push
xchg
popf
add
aad
sub
adc
je
lea
test
add
adc
sub
les
int3
cmp
clc
ljmp
add
std
or
inc
roll
aad
mov
fwait
decb
insb
lahf
cmp
jne
mov
and
mov
cwtl
xchg
add
std
or
pop
test
jge
and
xchg
daa
or
or
call
inc
mov
ja
jno
jecxz
jmp
in
mov
or
ds
fisttps
flds
test
xchg
bound
rolb
shlb
or
xor
pop
divb
cmpl
mov
inc
mov
sub
dec
fdivrl
xor
push
fstpl
test
push
jno
jae
cmpsb
xor
scas
dec
ljmp
cmc
gs
push
lds
mov
pop
cmp
inc
and
sbb
dec
lock
jmp
jge
js
jns
jmp
xor
sbb
pop
iret
stos
pop
into
jbe
jbe
loopne
sbbb
out
sbb
cli
or
stos
push
push
enter
or
push
int
and
aas
inc
mov
mov
sbb
pop
ljmp
push
std
jle
mov
adc
pop
and
dec
in
imul
sub
cmp
iret
pop
cmp
aas
inc
iret
pop
cmp
and
roll
shll
xchg
pop
push
fisttpll
out
sub
dec
fdivrl
pop
cmp
or
pop
pop
enter
jle
cmp
inc
shlb
jno
jecxz
push
rclb
jno
pop
xchg
repnz
add
jl
das
mov
faddl
mov
test
pop
divl
jle
call
popa
nop
pop
leave
push
les
ret
popf
rcll
mov
icebp
nop
arpl
adc
dec
roll
aad
push
aam
sub
insb
or
repz
sahf
stc
or
inc
int3
inc
and
cmc
pushf
outsl
ljmp
sub
xor
fwait
sub
cmc
jg
mov
mov
cltd
inc
fisttpl
aaa
cmpsl
ret
roll
mov
lock
jbe
loopne
test
and
xchg
repnz
movsl
adc
movsl
xor
jno
xorb
es
cs
sub
sub
push
mov
mov
leave
pop
cmp
dec
das
mov
inc
mov
or
bnd
xorb
aam
sub
xchg
repz
jmp
data16
xchg
outsb
nop
aas
mov
inc
lret
pop
ds
mov
std
jne
mov
lock
mov
jae
imul
push
jno
jae
mov
dec
rclb
adc
add
jmpw
jmp
mov
lahf
inc
aad
sub
je
insb
or
mov
mov
inc
mov
xchg
add
icebp
popa
add
pop
addr16
popa
add
inc
mov
pushf
push
test
jge
dec
repz
and
adc
dec
rolb
rclb
insb
or
subl
out
sti
sahf
insl
cmpl
testb
xchg
in
push
lahf
push
adc
pushf
pop
pop
roll
shll
icebp
jp
jp
xchg
pop
adc
push
int3
inc
shlb
push
jns
pop
orb
adc
add
mulb
insb
ficompl
pop
jp
ds
push
cld
dec
lds
pop
cmc
sub
push
lds
xchg
add
sahf
aaa
inc
xlat
inc
and
push
adc
jno
jns
jmp
cld
gs
pushf
outsl
and
push
xor
out
mov
cld
lock
in
adc
int
and
sbb
imul
insl
orl
sbb
repnz
pop
repnz
mov
stos
into
cmp
mov
xchg
jns
xchg
testb
out
push
xor
push
fdivl
in
jb
push
mov
mov
pushf
das
mov
movsl
das
mov
in
sbb
dec
aaa
stos
cmp
sbb
ret
push
into
jg
jbe
cmpl
das
mov
loop
pop
loop
aas
test
rolb
mov
in
je
inc
js
jno
jecxz
add
jne
mov
or
add
adc
push
xorl
fwait
sbb
jbe
cmpl
adc
scas
cmp
mov
mov
movsl
int3
aas
ljmp
mov
scas
lods
and
inc
imul
adc
add
cwtl
push
imul
inc
shll
inc
and
add
adc
scas
cmp
mov
rolb
mov
imulb
outsl
or
scas
fmull
push
in
or
sub
mov
gs
cmp
adc
imul
sub
lret
lret
adc
cmp
rclb
cmpsb
push
aam
inc
aam
dec
xchg
bnd
popa
add
sbb
clc
or
cmpsl
aaa
push
mov
lods
pop
test
and
lcall
jl
jne
pop
rolb
shlb
inc
leave
pop
cmp
cmp
movsl
sub
mov
dec
mov
pop
stos
or
repz
je
jne
out
inc
pushf
or
in
movsl
cmpsb
xor
pop
int
and
fs
lcall
push
aaa
ret
out
jl
divb
mov
xchg
adc
scas
cmp
mov
out
out
mov
fimull
mov
aas
pop
test
sub
push
and
cli
push
call
loop
sti
sahf
insl
mov
loope
inc
push
xor
sbb
sbb
lods
call
or
fdivrs
rolb
rclb
pop
mov
gs
jbe
notl
jo
jg
jmp
inc
mov
pushf
add
and
xchg
jnp
cmp
cmpsl
es
cs
add
movb
inc
cwtl
push
inc
and
sub
test
jge
cmpsl
xor
and
mull
icebp
sbb
int3
dec
fidivrs
sub
push
xlat
pop
test
mov
mov
test
add
add
xchg
add
and
pop
mov
mov
push
mov
les
pop
aas
lret
add
push
mov
leave
test
fdivrp
jg
mov
pop
jecxz
push
in
test
fwait
decb
jg
outsl
into
dec
fidivrs
cmp
jl
outsb
in
cli
in
mov
mov
xor
ret
call
sub
fs
popf
insb
mov
aas
enter
mov
cmc
add
lcall
sbb
xchg
push
arpl
xchg
subl
xchg
push
pushf
sti
push
out
ja
xorb
mov
jg
or
and
dec
int3
inc
and
add
sub
outsb
cld
fwait
jbe
sbb
lods
lret
inc
mov
aaa
cmpsl
ret
add
xor
ss
lock
mov
pop
lahf
punpckhdq
push
add
fcompl
dec
fnstsw
or
aad
repnz
fs
mov
mov
xchg
lock
rorb
xchg
aam
iret
stos
pop
rcrb
pusha
icebp
lock
lret
dec
fimuls
push
jg
jl
negb
cmpsl
aaa
push
mov
mov
jle
js
ljmp
push
lret
mov
hlt
xchg
outsb
mov
mov
xchg
jl
sub
repz
xchg
ja
jle
call
pop
stos
pusha
mov
sahf
stc
or
jge
je
insl
mov
and
testb
jg
je
mov
xor
cmp
dec
rcll
xor
mov
gs
jbe
add
std
or
aas
mov
inc
mov
stos
shl
call
pop
into
test
pop
ds
cmpsl
cmp
repnz
pop
repnz
mov
fisttpl
mov
cmp
sbb
test
decl
rcll
data16
pusha
notb
aaa
push
mov
adc
je
out
push
add
fiadds
mov
enter
mov
push
cmp
and
jae
and
in
sbb
fstpt
pop
jb
jp
out
adc
pop
jle
push
cld
minps
inc
and
cmp
out
adc
or
jp
in
pop
xor
fists
mov
stos
int
pop
xlat
inc
and
js
xchg
add
and
push
mov
and
addr16
push
cmc
popa
icebp
nop
arpl
pop
mov
jns
and
movsl
xor
push
xor
imul
dec
sbb
adc
mov
xlat
dec
fdivrl
push
xor
dec
add
or
push
rclb
mov
cmp
jle
mov
jmp
and
ljmp
int
fistpll
pop
and
cmp
fisubrs
dec
stos
ss
adc
xor
push
mov
xchg
test
cltd
clc
or
fcoml
mov
or
cmp
pop
enter
pop
xchg
or
xor
addr16
or
cmpsl
aaa
push
mov
cli
or
lods
sbb
mov
pop
rcrl
pop
mov
loope
stos
xor
push
lahf
push
or
mov
sahf
stc
or
jmp
cltd
push
add
sbb
xchg
add
sahf
jnp
jae
xchg
lret
cmpsb
push
test
dec
fnstcw
sub
cmp
add
dec
push
xor
sub
out
add
test
imul
insl
test
mov
cmp
pusha
cld
insl
std
test
fwait
or
call
add
pop
lret
scas
pop
repnz
jbe
jno
jecxz
imul
add
cmp
mov
into
push
les
jp
in
add
xchg
add
adc
das
mov
xchg
jb
inc
mov
cmp
mov
mov
int
lcall
mov
inc
mov
dec
int3
inc
and
js
ljmp
jno
sub
notl
adc
or
cmp
jb
jnp
gs
aas
popa
in
bound
lret
ljmp
cmpsb
movsb
ret
ds
dec
mov
bound
push
std
push
loope
jmp
jge
mov
mov
xchg
adc
test
mov
es
aad
ret
cmpsb
push
mov
xchg
fwait
or
sbb
fwait
or
sbb
adc
fisttpll
out
cmp
and
pop
fisttps
fstps
jp
xchg
testb
sbb
mov
pop
rolb
shlb
je
insl
hlt
pop
out
mov
inc
mov
xchg
sbb
and
inc
xlat
mov
fwait
adc
push
imul
jp
jp
roll
mov
jmp
into
jg
lret
lret
xchg
add
and
imul
lods
lret
inc
icebp
jae
je
out
dec
outsb
hlt
push
cld
aas
leave
push
shlb
jo
imul
cmc
pushf
outsl
test
push
xor
dec
stos
xor
int
mov
sub
adc
je
push
cld
adc
lods
cmp
roll
shrl
cmp
sub
outsb
lock
lea
xchg
add
sahf
jbe
das
mov
push
xor
sub
pop
mov
dec
mov
jle
xchg
lahf
cli
or
ficoms
cmpsl
push
nop
sahf
adc
adc
jno
xorb
mov
jns
jle
call
mov
aas
test
pop
test
jge
jg
jmp
xchg
fs
aad
frstor
sub
cmp
sahf
or
cmpsb
dec
push
into
pop
cmp
ds
les
int3
dec
stc
data16
xchg
outsb
jmp
pop
xchg
push
rolb
sarb
fistpl
test
mov
add
rclb
addb
xchg
add
adc
nop
push
popa
nop
arpl
sbb
xadd
mov
mov
ret
push
lds
and
jg
popa
add
xor
test
pop
stos
and
and
dec
fdivrs
sti
sahf
insl
ret
add
inc
mov
lods
mov
repnz
rorl
mov
adc
mov
popf
in
lcall
ljmp
loopne
in
je
add
jl
ret
ret
adc
cmp
imul
or
add
dec
fdivrl
pop
cmp
and
dec
frstor
into
cmp
sub
sub
mov
push
fmuls
fmuls
popf
or
rclb
addr16
addr16
dec
aas
lods
and
sbb
or
test
mov
sbb
jae
aas
sbb
insb
clc
outsb
or
dec
inc
roll
shll
fimull
ficompl
push
ret
cmpsb
push
mov
mov
pop
rclb
sub
pop
cmp
adc
add
jns
mov
dec
into
pop
cmp
jg,pt
insl
hlt
pop
in
mov
lds
imul
shlb
push
mov
and
ss
int
jmp
mov
je
sbb
add
mov
mov
jo
xorl
pop
into
push
adcb
xorb
push
test
push
mov
lods
lret
inc
icebp
enter
les
fwait
or
pop
and
and
inc
and
xor
and
out
adc
push
push
push
and
mov
inc
mov
xchg
adc
in
sbb
aam
lret
scas
pop
mov
cmp
push
fisttpl
fisttpll
popf
or
shll
add
or
dec
or
dec
and
mov
mov
mov
ret
call
jle
cmpsb
xor
scas
inc
mov
shlb
out
out
mov
push
or
sub
push
add
jae
test
lock
bound
push
mov
jne
jg
gs
sbb
cmpsl
aaa
push
mov
stc
or
repz
fwait
pop
hlt
jg
mov
in
in
jle
mov
mov
and
in
movsb
mulb
pushf
outsl
les
pushf
xchg
add
iret
pop
cmp
pusha
aam
xlat
mov
call
dec
mov
mov
pushf
xor
dec
cltd
add
loope
adc
adc
cli
aas
in
call
pushf
mov
shll
outsb
or
sbb
aam
adcl
mull
or
add
adcl
or
mov
mov
popa
icebp
nop
arpl
inc
stos
ret
call
fistpll
mov
pop
fisttpl
fnstsw
jne
mov
rorb
push
icebp
adc
shlb
cmpsl
cmpsb
call
jecxz
lcall
aas
pop
test
jnp
push
loope
add
mov
and
cmp
add
out
addr16
imul
dec
push
rcll
push
fildll
out
jo
call
aaa
sti
insb
loop
je
int3
pop
into
test
xor
mov
jb
jo
loop
xchg
add
push
lret
in
and
loopne
call
and
arpl
xchg
gs
inc
and
popa
dec
mov
add
inc
jge
je
out
or
pop
lret
scas
pop
mov
sahf
or
cmpsb
dec
add
sbbb
mov
add
add
ret
out
out
jno
push
lds
iret
fs
sbb
add
dec
popf
in
notb
dec
sub
jo
loop
idivl
test
mov
aaa
mov
sbb
clc
jne
mov
dec
lret
pop
ds
rcrl
stos
sarw
jmp
out
mov
xchg
push
xchg
repz
mov
shld
and
outsb
js
jge
negl
xlat
mov
clc
push
push
xor
imul
stos
jo
jns
jmp
fildl
mov
stos
mov
mov
push
mov
mov
jmp
iret
dec
ret
mov
sarl
mov
pop
fisttpll
out
xchg
adc
in
sbb
dec
int
and
and
jo
xorl
push
lods
cmp
mov
shll
adc
and
outsl
lcall
je
out
sub
insb
loop
je
mov
mov
es
or
movsb
xor
int
lea
mov
mov
imul
or
push
imul
imul
insl
test
and
pop
pop
rorl
movzwl
lea
ret
call
xchg
sbb
pop
int3
inc
mov
cmpb
dec
and
xor
cmp
je
mov
jmp
cmp
je
add
cmp
jne
xor
inc
ret
push
push
pushl
mov
mov
call
xor
jmp
call
and
and
dec
cmpl
pop
jecxz
push
in
jo
addr16
sbb
dec
fstpt
sbb
xchg
inc
test
mov
push
lahf
push
orb
stc
or
scas
and
jl
push
cld
sbb
mov
jns
jnp
jnp
mov
cmpsl
aaa
push
mov
lea
insb
mov
add
pop
out
jo
xorl
xchg
sbb
xchg
jb
inc
stos
sub
adcl
xchg
add
je
push
les
or
dec
out
adc
sbb
scas
cmp
mov
in
cld
fwait
jbe
fstl
mov
inc
sub
cmp
xchg
add
bound
inc
and
jns
pop
dec
lds
iret
lss
xor
call
rolb
xchg
add
and
data16
xchg
outsb
pop
iret
pop
cmp
lretw
xchg
gs
outsb
or
dec
adcl
jecxz
mov
cmp
jns
jo
loop
ret
scas
pop
mov
xchg
or
je
mov
adc
call
lock
rorl
mov
ss
mov
pop
lods
sub
outsl
lcall
dec
das
ficoml
pop
sub
sub
add
jg
jmp
push
in
cmp
lods
cmp
pop
enter
add
dec
ret
ret
notl
cmp
fists
mov
stos
int
call
jmp
and
aas
pop
test
decl
mov
jp
roll
mov
lock
add
cmp
dec
sub
dec
das
fidivl
add
call
mov
mov
roll
shll
dec
fdivrl
cmp
inc
std
popa
icebp
nop
arpl
aad
fdivrs
xchg
icebp
add
hlt
jne
mov
call
adcb
mov
movsb
ret
ds
jecxz
jne
mov
aaa
pop
jnp
cmc
push
mov
push
push
lea
call
sub
mov
jne
xor
jmp
mov
mov
mov
test
je
test
jle
add
jmp
xor
jmp
mov
addb
test
je
push
push
mov
test
je
cmp
jb
cmp
jb
lea
shr
push
pop
je
mov
mov
and
mov
cmp
jne
movzwl
and
add
lea
mov
add
inc
cmp
jb
add
jne
pop
pop
jmp
and
sbb
xor
inc
pop
leave
ret
call
fadds
test
jge
inc
cmp
fs
sbb
adc
lea
cltd
clc
or
fcomps
xchg
addr16
mov
xchg
xchg
lock
xor
ss
iret
pop
cmp
xor
pop
icebp
jne
mov
out
notl
fwait
adc
in
sbb
cmp
xchg
push
mov
adcl
xor
in
jge
testl
jl
js
ljmp
testb
mov
mov
and
add
imul
mov
pushf
mov
loop
lock
bound
movsl
dec
xchg
mov
es
sti
imul
insl
in
jae
bound
add
call
jae
inc
fidivrl
stos
into
cmp
pop
ljmp
sbb
inc
mov
sub
inc
mov
or
out
fcoms
cmpsl
push
mov
or
movsl
xor
test
jge
jg
add
inc
shll
jp
in
cs
adcl
mulb
dec
insl
insb
or
scas
mov
mov
xchg
add
cmp
test
cmp
mov
in
push
push
xor
js
aam
sub
aas
pop
test
les
xlat
mov
xchg
adc
dec
aam
sub
mov
and
mov
mov
repz
inc
push
xor
daa
mov
mov
stos
cmp
push
ss
inc
mov
mov
int
inc
and
ss
in
sbb
push
dec
lds
iret
das
push
fisttps
flds
sub
pop
sbb
add
xor
stos
jle
int
and
pop
int3
inc
xlat
mov
call
movsl
adc
add
push
pop
test
fcom
dec
add
jne
add
push
dec
mov
push
call
xor
ret
call
aaa
jecxz
loop
je
lcall
jge
call
shrl
pop
rclb
sub
push
cmp
and
cmp
sbb
add
inc
hlt
imul
insl
ret
popa
cmpsl
call
mov
pop
cmp
push
or
test
mov
in
sbb
shl
call
in
inc
fidivrl
notl
jecxz
jne
add
insl
cld
xchg
cmc
add
mov
mov
mov
pop
int
and
bound
mov
out
xchg
or
in
negb
xchg
jb
fldl
dec
movsb
adc
push
xlat
dec
fidivrs
dec
sub
fstps
scas
pop
mov
inc
mov
test
nop
push
popa
nop
jne
cmp
call
and
inc
aad
dec
mov
adc
lods
and
inc
ret
inc
aam
dec
cmpsb
push
fisttpll
out
jp
addr16
sbb
inc
mov
sub
and
mov
in
mov
les
mov
sub
setge
pushf
sti
push
mov
ja
aas
scas
cmp
mov
jecxz
jmp
jge
repz
add
inc
movsl
add
es
pop
loop
cmpsl
das
mov
sti
imul
das
bnd
mov
xchg
popa
enter
xor
mov
push
lahf
push
lock
and
xor
xchg
and
aad
dec
ljmp
mov
mov
xchg
add
sahf
je
mov
mov
insb
or
les
jnp
in
dec
cmc
gs
pushf
outsl
jo
loop
out
jge
je
xor
test
sbb
fisttps
mov
push
cmp
jp
adcb
andb
xor
and
inc
mov
stos
mov
rcrb
push
xor
inc
push
xchg
pop
bound
ds
in
cmc
pushf
outsl
test
dec
fdivrs
mov
sbb
stos
xor
test
sbb
aad
shll
int3
inc
aam
dec
mov
push
mov
mulb
sbb
data16
xchg
outsb
popf
push
jecxz
push
in
int
shlb
mov
sbb
mov
shlb
mov
add
dec
fmuls
mov
xchg
testb
aam
sub
addr16
pop
int3
push
les
movsl
int3
aas
fildll
or
stos
into
cmp
sub
pop
xchg
or
mov
dec
mov
jae
data16
add
jl
inc
shlb
mov
das
shll
jmp
mov
dec
mov
mov
pop
ds
fstl
mov
add
ja
outsb
cld
fwait
jbe
adc
idivl
mov
add
pop
into
test
ret
cmpsb
push
in
call
and
shlb
cmp
sub
orl
and
and
mov
scas
pop
xor
in
push
push
mov
push
mov
push
mov
push
xor
mov
cmp
je
lea
push
push
pushl
lea
push
call
testl
je
xor
inc
jmp
jmp
inc
fs
jae
xor
sarb
push
adc
add
lea
mov
add
mov
mov
mov
add
add
xor
xor
add
rorl
roll
mov
cmp
jb
mov
jmp
rsqrtps
jnp
cmp
add
dec
cld
push
pushl
add
pushl
push
call
xor
pop
pop
pop
leave
ret
call
shll
enter
push
inc
rolb
dec
mov
add
xlat
inc
and
sub
mov
inc
mov
dec
les
int3
aas
out
outsl
icebp
movzbl
adc
add
cltd
or
ds
adcl
sub
sbb
roll
mov
xchg
repnz
lcall
rcrb
aaa
ret
sti
imul
sbb
pop
and
aas
push
iret
pop
cmp
aas
jecxz
adc
add
lret
pop
ds
icebp
jno
xorb
loop
pop
loop
cld
jl
jne
insb
xlat
push
les
ljmp
loope
in
notb
ljmp
adc
and
push
fists
lods
pop
mov
mov
sub
jle
mov
out
shlb
lea
stos
push
mov
stos
cmp
cmp
xchg
jb
sub
repnz
pop
repnz
test
fbld
add
outsb
out
adc
cmp
icebp
outsl
loop
pop
loop
adc
mov
popf
icebp
notl
fmuls
mov
stc
cwtl
imul
cmp
mov
in
mov
mov
das
lcall
mov
loop
sbb
aad
xor
xor
pop
andl
and
icebp
add
scas
mov
cltd
clc
or
loope
notl
out
mov
aaa
mov
inc
mov
aas
mov
jl
outsb
or
or
jmp
push
std
or
push
lahf
push
inc
lret
lret
inc
shlb
xchg
lock
je
or
push
fisttpll
out
gs
gs
dec
out
jmp
jge
xchg
push
xchg
repz
mov
fidivs
jmp
fisttps
mov
das
dec
mov
stos
rclw
add
push
jle
jnp
in
or
adcl
adcl
test
pop
xchg
adc
rclb
xchg
add
pop
xchg
adc
inc
fidivrl
and
push
push
fisttpl
frstor
call
hlt
pop
lock
and
sti
jecxz
lcall
frstor
inc
mov
jns
jnp
pop
into
test
cmp
jg
jnp
mov
orl
movsl
xor
jl
jne
sub
add
jl
sbb
cmp
add
popf
leave
pop
repnz
fs
xchg
push
pushf
sti
push
aad
mov
jmp
loope
jae
lods
xor
int
aam
stos
cmp
sub
les
int3
dec
xchg
fwait
decb
insl
pushf
je
notl
mov
cmpsb
push
xlat
inc
and
and
and
push
xchg
adc
mov
scas
imul
adc
sbb
int
and
aaa
push
jecxz
push
in
outsb
in
sbb
push
adcl
out
mov
adc
cli
push
sub
fimuls
push
mov
mov
and
test
inc
mov
xor
xor
adc
movsl
xor
sbb
mov
jmp
push
in
sub
sar
gs
pushf
outsl
xchg
inc
fidivrl
mov
sbb
sbb
adc
push
sahf
sbb
aad
in
fcompl
xchg
addr16
int3
dec
ret
mov
mov
push
movsl
pop
ljmp
xchg
pop
bound
push
cmp
pop
pop
aam
sub
mov
popf
or
arpl
xchg
les
lahf
punpckhdq
cmpsb
push
xchg
cmpsl
sub
sub
sub
lds
std
dec
fcoml
cmpsb
push
cli
or
iret
pop
into
test
test
pop
stos
fcoms
cmpsb
push
hlt
push
roll
aad
out
jnp
mov
push
pusha
pop
repnz
push
lahf
push
push
int
and
push
jg
jbe
loopne
inc
push
xor
pop
outsl
in
bound
loop
je
sub
xor
and
dec
sbb
lret
mov
sbb
xchg
jle
roll
aad
movsb
sub
fwait
adc
and
movsb
cmp
or
clc
jl
add
xor
pop
lret
scas
pop
cld
cs
addr16
push
cld
push
jmp
jmp
sbb
aad
lea
and
inc
shlb
sbb
cmp
outsb
leave
xor
loope
call
lahf
punpckhdq
mov
test
or
lods
cmp
dec
frstor
jp
inc
lds
iret
and
scas
dec
lcall
sbb
cmc
gs
or
ja
xorb
jge
je
addr16
rolb
shlb
ds
dec
mov
adc
sbb
pop
pushf
adc
adc
mov
nop
add
mov
xor
clc
outsb
cld
fwait
jbe
hlt
popa
icebp
nop
arpl
in
out
jo
or
insb
loop
je
sub
and
stos
cmp
inc
xor
adc
inc
fisttps
fldenv
ljmp
stc
into
es
cmp
inc
outsb
out
jl
negb
jae
pusha
pop
repnz
xchg
gs
dec
roll
aad
xor
or
out
adc
sbb
add
xchg
pop
mov
fistl
dec
sub
inc
xlat
pop
into
test
or
pop
jecxz
cld
fwait
jbe
stos
aas
scas
lret
xchg
add
jecxz
loope
jae
adc
rolb
mov
inc
push
les
sbb
xchg
and
arpl
xchg
gs
cli
pusha
notb
and
icebp
rcrb
pop
mov
cmp
push
les
pushf
sti
push
xchg
lods
cs
stos
cmp
inc
jge
jl
xchg
testb
mov
mov
cmpsb
shll
pop
fisttps
fsts
adc
ss
fs
jge
notl
int3
inc
fidivrl
das
dec
mov
mov
out
mov
mov
scas
lret
int3
inc
xlat
mov
call
ret
aas
scas
lret
js
jle
call
pop
test
test
ret
push
lds
out
jl
testb
movsl
int3
aas
lcall
sbb
mov
mov
aas
scas
lret
into
push
mov
inc
and
push
jns
imul
pop
cmp
xchg
icebp
add
xchg
adc
mov
js
ja
pop
int
addr16
stos
cmp
pop
mov
les
adcl
pop
xor
daa
lods
sub
out
adc
dec
mov
orb
adc
xlat
pop
enter
cmpsb
xor
int
mov
cwtl
push
imul
pop
iret
stos
pop
into
jno
jne
out
pop
ds
aas
pop
test
push
movsb
adc
cmpsb
xor
scas
or
jbe
loopne
cmc
outsb
cld
fwait
jbe
cmc
jae
xchg
mov
mov
mov
gs
adc
pop
cmp
push
loope
icebp
nop
arpl
imul
xchg
icebp
add
adc
adcb
adcb
and
push
lahf
push
pop
inc
and
sub
mov
outsl
lcall
data16
shll
mov
and
or
dec
or
cli
push
cmp
test
in
sbb
pop
xchg
mov
push
mov
jns
cmp
xchg
mulb
dec
cmp
xchg
or
adc
in
sbb
imull
test
mov
enter
mov
leave
push
into
pop
cmp
push
fistpl
stos
pop
scas
out
sti
sahf
insl
orl
sbb
xchg
jle
in
bound
fnstcw
jp
in
cmp
jno
xorb
pop
repnz
mov
dec
sub
adc
leave
pop
cmp
sub
inc
shlb
push
cmp
ds
cltd
push
loopne
lds
cmp
or
inc
shlb
bound
jp
in
inc
cmc
imul
insl
fcmovb
push
lret
cmc
mov
mov
and
sub
cmp
mov
xchg
jns
jno
jecxz
iret
push
lret
mov
mov
cmc
add
dec
aam
sub
adc
add
data16
xchg
outsb
cmpsl
inc
lret
pop
ds
aam
lret
mov
mov
dec
mov
adc
sbb
inc
shlb
adc
cwtl
push
imul
adc
rcll
and
sub
jg
addr16
pop
mov
shll
lods
mov
xchg
inc
daa
shlb
out
adc
pop
jle
arpl
cmc
pop
jns
jg
jmp
and
and
movsl
rorb
mov
xor
adc
mov
jne
inc
sub
jmp
xchg
leave
push
mov
es
mov
fadds
mov
cli
popf
insb
movsl
sub
fistpl
test
mov
xchg
mov
dec
fdivrs
icebp
nop
arpl
pop
xchg
int
fidivrs
dec
sub
sub
dec
fstpt
mov
sbb
jne
xchg
cmc
add
mov
xchg
cmpsb
das
mov
hlt
push
cld
orl
sti
push
mov
pop
into
test
add
pop
test
in
sbb
push
xchg
add
inc
aam
dec
pushl
jp
in
inc
lock
popf
insb
fcomi
gs
pushf
outsl
lret
dec
sub
sbb
push
shlb
sub
or
and
in
jno
xorb
dec
fdivrs
nop
testl
and
cmp
pusha
notb
pop
cmp
xor
scas
aas
pop
test
test
jle
push
adc
or
in
out
mulb
sbb
lea
adc
jnp
imul
pop
pop
nop
push
popa
nop
inc
popa
repz
cmc
xor
jge
je
and
push
shlb
loope
mov
or
movsb
or
ljmp
xor
ret
push
lds
inc
sub
jp
jnp
mov
sete
insl
pushf
jle
sbb
push
mov
es
inc
fimuls
popa
outsl
lock
ja
cmpsb
xor
scas
addr16
jecxz
push
in
sub
jle
xchg
adc
mov
pushf
sti
push
shll
pop
loop
outsb
jmp
mov
shl
cltd
push
testb
sub
pop
ljmp
jecxz
aas
scas
lret
mov
xchg
pop
lret
lret
push
xor
addr16
or
aas
scas
lret
add
and
insb
or
scas
jne
ja
loope
icebp
fs
popf
insb
lret
mov
out
fiaddl
mov
lods
rorl
mov
push
xor
daa
aas
cmpsl
aaa
push
mov
mov
lcall
jo
imul
inc
ret
ret
mov
inc
mov
xchg
addr16
les
int3
cmp
pop
bound
jno
jae
arpl
xchg
cmpl
pushf
sbb
xor
inc
leave
pop
cmp
sbb
xor
cmp
pop
std
insl
std
test
mov
adc
xor
test
mov
cltd
sti
insb
loop
je
stos
lods
lret
inc
icebp
mov
lcall
clc
popa
icebp
nop
arpl
inc
scas
inc
fmuls
fdivs
jns
jne
out
push
aad
sub
pop
inc
rclb
or
fs
push
pusha
loopne
adc
or
dec
lret
lret
xchg
pop
bound
fisubrl
ret
mov
mov
add
xchg
sbb
cmp
push
mov
push
aaa
ret
mov
dec
push
xor
push
mov
and
js
adc
in
sbb
test
scas
lret
ja
ja
loope
inc
xlat
inc
and
jbe
mov
add
pop
bound
cmpsl
push
xchg
call
xchg
call
lcall
dec
roll
rcll
inc
shll
mov
es
mov
cmp
int3
push
ret
cmpsb
push
mov
stc
imul
adc
push
int3
dec
fidivrs
xchg
testb
sbb
imul
lret
mov
cmpsb
lahf
push
test
push
in
cmpsl
das
mov
fdivl
in
inc
roll
aad
orb
xchg
add
daa
outsl
cld
xchg
cmc
add
sub
and
sub
out
out
jno
and
out
jg
jmp
xor
add
xchg
add
jae
adc
in
sbb
dec
fisttpl
fnsave
mov
sbb
daa
stos
cmp
bound
sbb
movl
sti
jl
jne
push
push
rolb
shlb
ret
sub
shll
push
idivb
mov
xchg
popa
pushf
push
cwtl
push
imul
inc
mov
cmpb
sub
sbb
add
inc
xor
xor
lret
pop
ds
repnz
icebp
nop
arpl
adc
in
jns
mov
jl
jle
call
scas
pop
std
pop
rclb
add
lcall
fdivrs
mov
dec
sub
add
adc
add
jl
jne
insb
or
cltd
sbb
ret
ret
jno
xorb
notl
cs
jge
gs
push
ljmp
pop
xchg
adc
enter
inc
mov
outsl
lret
or
cmpsb
jb
adc
xchg
add
xor
out
pop
mov
adcb
adc
mov
mov
cwtl
mulb
xchg
pusha
roll
inc
and
jbe
arpl
xchg
gs
push
mov
mov
das
out
lret
push
mov
inc
and
pop
jb
addr16
push
lds
xor
inc
pop
fimull
ficoml
inc
push
xor
daa
cmp
push
xor
aad
dec
test
cmp
pop
fdivl
in
push
rolb
shlb
movsb
daa
mov
and
sub
jae
outsb
or
sbb
jg
jmp
es
addr16
jg
jmp
fwait
jbe
push
fmuls
fcomps
cld
ja
xorb
repnz
pop
repnz
inc
rolb
sarb
popf
or
mov
fmuls
mov
enter
std
outsl
lcall
shlb
add
push
std
data16
xchg
outsb
mov
imul
adc
pop
cmp
and
cmpsb
xor
scas
sub
push
mov
addr16
cmp
loope
notl
or
jl
rolb
shrb
roll
dec
cltd
or
bound
clc
pop
xlat
inc
and
sub
inc
shll
dec
sub
cmp
popf
push
cmp
loope
cld
fwait
jbe
jb
xchg
inc
int3
inc
and
jno
jecxz
inc
rolb
sarb
jg
mov
aad
fidivrl
pusha
pop
repnz
adc
adc
sub
test
push
xor
push
jmp
adc
stc
notl
dec
aam
sub
jnp
in
insb
mov
stos
mov
sahf
stc
or
xor
movsl
sub
xor
ret
ret
cmp
lret
pop
ds
data16
adc
or
mov
pop
repnz
xchg
and
daa
inc
mov
fistpl
scas
pop
cld
and
jle
insl
std
test
mov
cli
push
adcl
loope
mov
cmp
lahf
punpckhdq
or
mov
pop
push
lahf
push
mov
cltd
cmp
sbbb
call
je
out
add
sahf
or
cmpsb
dec
sbbl
rcll
jl
jne
dec
dec
int3
inc
and
pop
cmp
and
inc
aad
dec
test
ljmp
stc
stc
or
mov
iret
dec
int
and
cmp
das
fimuls
test
jge
outsb
xchg
sbb
imul
iret
pop
cmp
jo
popa
icebp
nop
arpl
mov
pop
sti
lcall
fimull
fidivl
mov
dec
jecxz
push
in
pop
iret
pop
cmp
sub
sub
jo
je
lea
lea
daa
mov
and
and
push
xor
xchg
repnz
stc
gs
pushf
outsl
ljmp
xchg
ret
ss
outsb
dec
ret
ret
xchg
or
cmp
sbb
pop
repz
je
inc
es
push
ret
ret
xchg
add
sahf
aaa
outsl
std
insl
hlt
pop
mov
mov
jns
and
mov
mov
icebp
popa
add
inc
loope
ljmp
lods
pop
lahf
ret
stos
pop
test
lea
stos
cmp
inc
data16
outsb
or
jg
or
pop
fisttpll
out
inc
inc
sbb
adc
and
jne
dec
fdivrs
mov
gs
pushf
outsl
sahf
dec
rclb
and
ja
xorb
xor
push
fmuls
fdivrs
fimuls
xor
push
cld
idivl
jp
lock
inc
movsl
movsb
ret
ds
ret
push
shll
jne
sub
fsubrs
rolb
sarb
ret
ret
movsb
cmp
or
inc
xlat
mov
mov
sbbb
jmp
call
xchg
in
sti
sahf
insl
sbbl
punpckhdq
xor
xor
in
lods
cmp
mov
cmc
jge
je
jbe
cli
push
mov
dec
mov
push
movsb
push
pushl
xorb
jne
mov
xlat
pop
leave
test
fwait
mov
jno
jno
jecxz
lcall
aas
scas
lret
fimuls
movsb
push
cld
mov
mov
cs
cmp
fsts
cmpsb
push
in
pop
into
test
notl
push
call
dec
dec
ret
ret
aad
sub
jp
push
ret
cmpsb
push
xchg
jp
in
cs
adcl
inc
aam
dec
clc
mov
lcall
out
jge
je
sub
add
sbb
sbb
ret
push
lds
sbb
dec
jb
jg
jmp
dec
mov
ds
inc
fimuls
popa
inc
fimuls
popa
int
mov
stos
or
jnp
adc
cmc
gs
add
outsl
or
shlb
imul
push
lret
dec
fdivrl
mov
es
xor
mov
xor
push
lds
xor
sub
sbb
int3
sbb
dec
adc
daa
int3
inc
xlat
mov
call
sarl
mov
and
cmpsl
adc
inc
and
ja
fmuls
fsubrs
mov
adc
push
mov
popa
add
xor
xchg
testb
dec
mov
andl
lret
add
push
stos
sub
adc
sub
add
cmp
mov
nop
ficoms
cmpsl
push
nop
mov
lods
lret
inc
loope
inc
shll
ret
cmpsb
push
cli
sbb
sbb
aas
scas
aas
pop
test
mov
aam
xchg
push
mov
js
cs
rclb
add
hlt
pusha
clc
outsb
or
adc
mov
xchg
or
fistpl
lock
cmp
xchg
testb
clc
adc
imul
outsb
cld
fwait
jbe
jmp
loop
je
rcrl
scas
pop
scas
mov
lods
rcrl
test
stos
or
insb
aaa
mov
fstl
pop
scas
out
cltd
push
jo
push
bnd
mov
mov
in
adcl
or
xor
cmp
sbb
xchg
cmp
gs
pushf
outsl
fdivl
lock
popf
insb
fildl
fwait
or
cmp
mov
mov
into
or
add
xor
dec
mov
mov
pop
enter
add
inc
repz
xorl
sti
adc
insb
loop
je
lods
sub
sbb
aad
repz
adcl
jle
mov
movsl
push
cmpsl
jl
gs
pop
rcrl
test
mov
sbb
dec
fidivrs
dec
fisttpll
cli
jbe
cmpl
mov
sub
and
pop
add
sub
outsl
lcall
xor
scas
pop
mov
lahf
cli
or
popf
cmp
lds
iret
push
mov
fisttpl
or
jbe
inc
xlat
mov
cmpsl
mov
stos
lods
xor
test
in
cmc
pushf
outsl
test
arpl
cmc
sbb
xchg
mov
or
adcl
out
jg
jmp
bound
cmp
xor
mov
push
test
push
pushf
sti
push
mov
rolb
rolb
and
jne
sbb
jp
jp
fisttpll
mov
scas
leave
cmp
scas
pop
call
aaa
or
mull
nop
arpl
lcall
in
sbb
cs
pop
cmc
jae
xchg
mov
rcrl
cmpsl
and
dec
call
das
ds
fistpl
xchg
addr16
rorb
dec
mov
dec
mov
js
jp
pusha
pop
repnz
aad
repnz
fs
pop
xlat
inc
and
js
test
mov
test
inc
aad
dec
ljmp
xchg
in
sbb
enter
pop
jmp
out
inc
in
jns
mov
sbb
adc
outsl
cli
push
push
xor
or
pop
mov
push
dec
mov
sahf
insl
in
pushf
add
hlt
push
cld
xor
mov
dec
mov
xchg
xchg
mov
adc
add
push
jno
jne
roll
aad
and
cmp
mov
aas
mov
dec
mov
sbb
or
rclb
xor
pop
jp
xor
out
jne
mov
idivb
mov
xor
xor
scas
sbb
jae
xchg
int3
pop
repnz
fs
or
scas
cmp
cmc
gs
push
mov
test
pop
fiaddl
mov
andl
or
cmpsl
lods
lret
inc
scas
push
roll
aad
rorb
movsb
push
shl
notl
out
adc
pop
dec
int3
inc
and
push
xor
cltd
clc
or
movb
inc
cwtl
jne
addr16
or
mov
or
stos
cmp
dec
jns
addr16
sbb
js
mov
inc
int3
inc
and
sbb
pop
jp
fs
cmp
fimull
fidivrl
aad
sub
imul
ret
std
roll
mov
lock
mov
jmp
out
jl
testb
icebp
nop
arpl
aad
xlat
mov
clc
pop
int
and
jb
int3
inc
and
int
xchg
lods
cmp
mov
inc
mov
imul
cmp
xor
es
push
cld
xor
xor
mov
mov
pushf
sti
push
call
xlat
add
jle
mov
decl
loop
dec
fstpt
inc
and
cmp
mov
lret
lret
lahf
punpckhdq
stos
pop
mov
lahf
punpckhdq
and
xchg
adc
movsb
or
daa
xchg
das
call
loopne
pop
repnz
fs
hlt
push
cld
dec
mov
mov
das
test
lcall
push
test
mov
fimull
fisubl
popf
stc
adcl
test
ja
xorb
cmp
mov
mov
xchg
add
pop
int3
stos
data16
and
sub
js
mov
cwtl
adc
icebp
adcl
test
ret
ret
mulb
dec
mov
mov
and
int
enter
pop
into
mov
addr16
pop
adcb
jecxz
test
add
mov
jb
jg
jmp
movsl
push
mov
daa
int
cmp
insb
or
and
movsb
rolb
inc
test
shll
ficompl
test
mov
psllq
je
lea
xor
repz
cmpl
sub
lds
pop
rolb
shlb
jp
pusha
pop
repnz
cmpsl
cs
xchg
add
ss
dec
cltd
jl
add
xor
inc
shll
lods
mov
repz
mov
fstl
cmpsb
push
loop
push
pushf
sti
push
mov
js
cli
jae
xchg
xlat
inc
shll
std
test
insl
cmc
gs
ds
data16
xchg
outsb
mov
insl
std
test
lahf
push
xchg
repz
out
sbb
aad
mov
loopw
imul
insl
mov
scas
inc
dec
pop
stc
test
add
cmp
jp
into
pop
cmp
ds
jg
mov
cwtl
adc
push
lret
scas
in
popa
icebp
nop
arpl
arpl
bound
cmp
mov
jns
push
cld
pop
in
jle
mov
sbb
inc
test
in
sbb
jnp
js
ljmp
call
mov
in
leave
pop
iret
stos
pop
cmp
scas
cmp
mov
adc
std
push
in
in
je
inc
sub
das
mov
dec
mov
psubd
daa
mov
out
out
mov
lcall
roll
sarl
aam
lret
mov
jl
jne
popa
dec
enter
ss
lret
lret
call
add
add
xchg
adc
pop
int
addr16
sbb
int3
dec
fidivrs
mov
and
sbb
sahf
sbb
fstpt
fsubrl
or
stos
and
scas
and
fmuls
fdivrs
and
mov
inc
mov
push
push
xor
jle
or
cmpsb
mov
add
dec
add
std
insl
hlt
pop
lods
and
es
mov
pop
mov
jg
sub
pop
fdivp
insb
loop
je
push
call
pop
and
lea
sahf
stc
or
daa
mov
inc
mov
cmp
pop
lock
mov
adc
nop
push
mov
es
mov
mov
jne
and
mov
gs
and
jnp
in
inc
jle
jl
testb
pop
push
mov
sub
push
xor
cmp
je
mov
mov
lea
jmp
movb
inc
mov
decl
test
jne
mov
lea
jmp
movb
inc
mov
decl
test
jne
mov
dec
cmp
ja
jmp
mov
push
push
add
jmp
mov
push
push
pushl
mov
call
and
add
add
push
lea
push
call
add
mov
push
pushl
lea
push
push
call
lahf
call
push
lea
push
call
lea
push
call
lea
push
mov
add
push
lea
push
call
add
push
pushl
lea
push
push
call
pop
pop
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
push
lea
push
call
lea
push
call
lea
push
mov
add
push
lea
push
call
in
add
push
pushl
lea
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
push
push
call
clc
xor
jmp
xor
inc
pop
leave
ret
mov
fisubs
dec
add
mov
dec
add
mov
dec
add
mov
dec
add
dec
add
dec
add
add
and
add
adc
fildl
mov
stos
pop
lahf
punpckhdq
inc
mov
pop
fisttpll
out
mov
lods
jns
inc
call
pop
data16
adc
push
cltd
push
mov
es
mov
cmpsb
shll
push
rolb
sarb
dec
push
xor
cmp
xor
orl
clc
or
ficomps
add
leave
pop
cmp
sub
push
cmpsl
inc
int
and
jb
cltd
or
dec
test
sahf
stc
or
test
mov
mov
das
mov
mov
mov
and
mov
dec
sbbb
add
push
mov
and
mov
pop
loop
push
rolb
rolb
rolb
mov
pop
in
push
popa
inc
call
enter
jns
mov
mov
mov
stos
pop
into
pop
cmp
popa
repnz
pushf
outsl
lret
jg
call
ret
fs
or
or
pusha
mov
cmp
mov
xchg
js
ljmp
aad
or
xchg
or
sub
jp
add
scas
data16
sbb
dec
sub
xor
xchg
testb
cmp
ja
aad
call
pop
and
push
lds
jbe
jle
call
movsl
push
shll
stos
cmp
bound
xchg
jb
addr16
add
mov
inc
mov
push
cwtl
push
imul
sahf
cmp
mov
add
imul
or
jecxz
adc
add
or
in
xchg
mov
aam
lds
pusha
xchg
jns
hlt
push
cld
sbb
jb
xchg
mov
call
sbb
ret
jb
in
adc
or
dec
rorb
xchg
popa
in
bound
adc
dec
fidivrs
pop
jp
es
mov
xchg
aas
jns
jge
testl
cmp
ds
test
dec
fisttps
flds
aas
scas
lret
mov
fisttpl
cli
loopne
out
mov
mov
mov
sbb
pop
mov
pop
fdivl
in
addr16
sbb
cmp
inc
inc
push
xor
sub
jp
jp
xor
gs
push
lds
ficomps
test
mov
imul
or
in
neg
push
mov
dec
sub
adc
jae
xchg
sbb
sub
mov
test
rolb
shlb
aad
dec
in
out
adc
pop
xchg
add
repz
cmc
inc
push
les
int3
gs
lret
lret
sbb
push
adc
test
pop
test
dec
xor
or
add
cmc
cs
in
loope
jae
adc
mov
inc
add
dec
adcb
jecxz
scas
xor
xor
or
adcl
mov
mov
cli
stos
xor
push
xchg
repz
in
leave
pop
cmp
and
jle
mov
movsl
push
rol
inc
fidivrl
adc
add
xlat
inc
and
cmp
sub
inc
call
mov
fisubrl
arpl
je
out
push
mov
xchg
repz
std
ret
mov
mov
inc
fidivrl
js
ljmp
adc
pop
cmp
sahf
stc
or
dec
sti
jge
jl
negb
cmpsl
aaa
push
mov
test
out
out
jno
xor
xor
or
mov
push
mov
ficompl
loop
out
mov
add
dec
addr16
insb
or
out
and
ds
out
mov
jg
xchg
testb
or
int
ret
cmpsb
push
mov
ret
jl
sbb
in
and
mov
push
call
call
test
je
push
call
jmp
call
loopne
push
shlb
and
js
mov
dec
mov
mov
lods
aaa
lods
cmp
and
fimuls
popa
dec
fisttpl
fstpl
and
frstor
ja
loope
cmpsb
es
cs
adc
jns
push
lds
cmp
sbb
push
lcall
cmp
stc
imul
sub
pop
imul
pop
loop
pusha
out
jl
notb
and
cmpsb
xor
scas
insb
test
mov
cmp
fimull
dec
adc
push
push
lds
lods
pop
in
lahf
or
clc
outsb
or
dec
out
loopne
jb
imul
sub
pop
push
lret
lret
fdivl
in
les
scas
pop
fnsave
scas
aas
pop
test
push
mov
and
push
push
xor
call
popf
ljmp
mov
rclb
stc
pop
fmuls
fsubs
loop
sti
sahf
insl
mov
bound
push
out
push
mov
es
mov
ljmp
notl
lods
and
mov
jg
pop
sub
xor
dec
fimuls
push
roll
mov
jmp
std
insl
hlt
pop
mov
jnp
mov
cmp
cmp
sbb
test
test
or
hlt
push
cld
aas
mov
movsl
sub
js
ja
loope
mov
ret
notl
push
jno
dec
out
adc
pop
mov
stos
int
aam
sub
push
scas
fs
scas
mov
call
cs
sbb
outsl
or
out
mov
test
or
lods
gs
jbe
jns
mov
jno
add
adc
jns
xor
gs
push
popa
nop
gs
punpckhdq
sbb
push
or
mov
into
jmp
xchg
lahf
cli
or
das
stc
int
xlat
mov
lea
inc
sub
jp
int
and
arpl
mov
js
and
pop
iret
stos
pop
fwait
or
add
std
or
cmp
mov
aas
stos
cmp
or
adc
sbbb
call
mov
jo
xorl
mov
pop
adcb
addb
fmuls
fcoms
mov
cltd
clc
or
enter
dec
mov
aam
fstps
xchg
addr16
or
push
rolb
shlb
mov
lods
into
inc
fidivrl
loopne
jb
sbb
or
js
in
sbb
push
sub
or
out
jl
divb
arpl
xchg
les
mov
pop
into
test
insl
hlt
pop
mov
ret
ret
push
lahf
push
pop
lret
lret
setg
or
enter
ja
loope
push
lret
lret
insb
or
in
jmp
xchg
outsb
xchg
xchg
adc
or
sbb
leave
dec
fdivrs
xchg
adc
cmp
push
lds
orl
decb
or
shll
movsl
xor
call
aam
ret
ret
sub
push
fmuls
fdivrs
mov
pop
xlat
inc
and
sbb
fnstsw
jecxz
jne
std
outsb
cld
fwait
jbe
test
mov
sbb
xchg
fs
sub
mov
mov
pop
xchg
add
xor
popa
lods
sub
repz
xchg
add
jp
xchg
add
push
inc
fdivl
in
jbe
push
cld
xor
loopne
jno
addr16
pop
jne
push
cld
sbb
inc
rclb
pop
and
ss
mov
push
and
mov
add
enter
out
lock
inc
and
cmp
push
shlb
mov
call
mov
jmp
fwait
push
test
push
mov
aam
inc
shlb
or
call
cmp
loope
jae
jne
mov
mov
xchg
ficompl
scas
pop
dec
rclb
add
mov
leave
popa
fimull
mov
jno
jecxz
lahf
push
pushf
sti
push
mov
xor
jnp
hlt
pusha
notb
ds
test
mov
sti
lcall
xor
aas
scas
lret
dec
rolb
rclb
mov
idivl
mov
rclb
mov
xchg
adc
adc
inc
rcll
aas
fistps
test
adc
mov
fisttpl
fnsave
xlat
arpl
xchg
gs
std
jbe
cmpl
cwtl
push
imul
or
xchg
jb
pop
lock
jne
inc
orl
enter
jle
adcl
or
cltd
or
sbb
push
test
push
mov
and
lcall
shlb
cmc
pushf
outsl
popl
lock
lods
lret
inc
scas
fwait
or
xor
mov
jns
inc
das
lods
and
pop
pop
xchg
add
sbb
pop
int
addr16
push
xlat
inc
and
or
lea
cmp
mov
xchg
lock
out
jg
jmp
mov
lcall
mull
icebp
pop
orl
pushl
xorb
imul
insl
int3
pop
mov
jle
cmp
aad
arpl
popa
add
inc
pop
int
and
jl
out
adc
pop
fmull
mov
pushf
sti
push
mov
es
xchg
movsb
cmp
push
into
pop
cmp
cmp
dec
frstor
inc
mov
adc
push
rolb
rcrb
jl
movb
dec
cmpsb
jg
insb
or
jecxz
xor
int
ret
add
rclb
xor
or
ss
mov
fisttps
adcl
cmp
das
mov
xor
or
xchg
jb
sub
jge
testl
loope
inc
and
outsl
nop
pop
xchg
repnz
add
xor
pop
leave
test
out
addr16
pop
repnz
xchg
or
dec
frstor
mov
movsb
push
int3
inc
and
inc
and
push
xchg
setg
or
add
fs
sbb
add
sarb
add
add
je
popa
add
cmpsl
and
ja
xorb
dec
fdivrs
adc
loop
stc
cwtl
imul
das
movsl
sub
cmp
je
lea
jecxz
push
in
pusha
icebp
popa
add
pop
push
lret
pop
ds
aam
adc
cmp
inc
and
sub
cmp
dec
shlb
mov
inc
mov
dec
into
pop
cmp
ds
jl
jne
insb
sbb
movsb
and
mov
inc
mov
add
and
push
fisttpll
out
test
jb
push
hlt
push
cld
push
cs
stos
cmp
jg
rolb
rclb
aas
mov
inc
mov
hlt
data16
xchg
outsb
fcomps
and
or
push
std
push
fs
pop
repnz
sbb
sbb
and
xchg
loope
ljmp
push
fs
push
mov
mov
inc
mov
cmpsl
lods
lret
inc
scas
xchg
setg
or
add
jne
gs
xor
enter
and
mov
jns
pusha
mov
cmpsb
stos
sub
lds
out
push
mov
dec
roll
aad
cmc
jge
je
jbe
push
xor
sub
je
das
cmpsb
xor
scas
pop
rorb
push
icebp
es
aas
pop
test
hlt
pop
in
cltd
push
sbb
inc
lods
lods
lret
inc
out
movsl
cmp
xor
jg
mov
mov
addl
mull
xchg
lds
lret
mov
cltd
clc
or
outsl
mulb
push
sahf
add
lcall
xchg
repz
data16
push
in
add
mov
outsl
out
jl
notb
aas
mov
outsl
call
jns
mov
sub
inc
arpl
jg
jmp
test
mov
jo
cmpsl
cs
pop
into
test
std
test
ret
mov
or
ds
popa
icebp
nop
arpl
and
and
insl
cld
xchg
cmc
add
xor
sub
test
hlt
mov
mov
mov
adc
in
sbb
add
or
or
loope
in
mov
adc
daa
add
push
xchg
add
sahf
jbe
dec
fidivrs
lret
mov
fimull
and
cmpsb
addb
sbb
fcmovb
call
hlt
dec
rolb
rclb
pop
iret
stos
pop
scas
loopne
icebp
nop
arpl
dec
mov
leave
xor
jge
push
cmp
mov
mov
or
in
cld
lods
and
mov
nop
testl
or
loop
lea
mov
mov
jmp
scas
outsl
jns
push
cld
pop
add
pop
iret
pop
cmp
jle
in
jge
testl
adc
xor
in
js
mov
sbb
pop
jp
xor
out
lret
lret
mov
gs
jle
sbb
fldl
mov
gs
cs
dec
jmp
sahf
dec
icebp
adcl
test
sbb
pusha
notb
daa
inc
mov
data16
dec
sbb
jns
jge
testl
jne
ja
loope
sbb
pop
jp
xor
ret
push
lds
xchg
push
pushf
sti
push
hlt
lea
mov
sbb
cli
or
mov
cmpsl
in
jmp
push
shlb
xlat
and
fs
cs
call
aaa
mov
mov
es
sbbb
out
sbb
adc
call
test
lds
inc
and
sub
lods
cmp
adcl
test
pop
into
test
sbb
sub
mov
fimull
mov
jmp
mov
jmp
jmp
call
test
cmp
pop
aad
sub
jp
jge
je
xor
jl
jne
sub
cmp
es
dec
mov
nop
arpl
adc
adc
sub
data16
xchg
outsb
fldenv
imul
add
call
in
dec
hlt
outsb
cld
fwait
jbe
adc
dec
aad
sub
aaa
gs
xchg
cmc
add
pop
pop
jp
adc
mov
add
ret
movb
dec
test
aad
sub
and
pop
iret
stos
pop
mov
pop
leave
test
lods
lcall
into
push
insl
jmp
push
pop
jmp
call
leave
iret
inc
aad
dec
test
or
adc
or
cmp
iret
sbb
popa
icebp
nop
arpl
sbb
lds
add
push
shll
push
movsb
or
pop
out
arpl
fs
pop
xor
cmp
mov
sbbb
ljmp
jp
mov
xchg
adc
mov
cmpsl
sbb
popf
sbb
inc
push
xor
daa
divb
cmpl
movsl
xor
mov
dec
mov
mov
mov
and
pushf
pop
mov
int
push
mov
test
cmp
cmp
adcl
out
mov
inc
fidivrl
push
imul
pop
jp
and
roll
mov
decb
dec
das
fidivl
aas
scas
lret
lret
xchg
gs
insb
or
mov
cmp
push
xor
or
push
test
push
cld
mov
shlb
mov
popa
call
jne
dec
ret
orl
mov
in
cld
mov
xchg
repnz
pushf
adc
ss
test
roll
mov
pop
leave
test
lea
xchg
cmc
add
stc
je
lea
or
les
int3
gs
fldt
ret
push
lds
out
adc
pop
lock
pushf
outsl
les
push
xor
jns
ljmp
jp
in
das
test
mov
les
lcall
sub
push
dec
aad
sub
pop
in
jmp
inc
aad
dec
test
lods
and
pop
mov
scas
sub
inc
push
xor
xor
in
std
insl
hlt
pop
lock
roll
sarl
les
mov
je
out
or
xor
jp
jp
inc
leave
pop
cmp
outsb
rcrl
fs
movsb
ret
ds
rcrl
fs
sbb
insl
insb
or
scas
ja
mov
mov
test
mov
cltd
dec
cmc
gs
dec
int3
pop
leave
test
lock
ljmp
add
push
data16
xchg
cmc
add
push
mov
jle
imul
mov
mov
pop
push
leave
pop
cmp
dec
jg
xchg
testb
dec
mov
scas
inc
mov
fcomps
stos
cbtw
int3
dec
fnstcw
add
sahf
imul
and
mov
xor
ss
adc
in
sbb
sub
loop
stc
cwtl
imul
jmp
fimuls
and
cmp
pop
hlt
data16
xchg
outsb
fsubrs
outsl
iret
pop
int
addr16
test
pop
test
and
add
jo
add
add
add
add
add
add
add
add
jno
add
add
lock
add
jno
add
jno
add
add
add
add
add
add
jb
gs
inc
popa
jae
cs
insb
add
dec
gs
gs
inc
popa
jae
cs
insb
add
movsb
jo
add
jo
add
jo
add
add
add
add
push
jno
add
jo
add
add
add
add
jb
add
or
add
jo
add
add
add
add
add
add
add
add
jno
add
add
lock
add
jno
add
jno
add
add
add
add
je
fs
jo
gs
dec
outsb
outsw
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
lar
outsb
inc
insb
imul
add
add
jo
jns
insb
imul
add
insl
add
je
insb
imul
inc
popa
je
add
inc
add
outsl
jae
inc
insb
imul
add
clc
add
jae
popa
addr16
outsl
js
add
add
jo
imul
push
inc
push
xor
cs
insb
add
mov
gs
outsl
insb
fs
popa
je
inc
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
xchg
or
cmp
xchg
add
daa
jmp
sarl
add
xchg
lock
lcall
js
fimuls
push
adc
pop
jb
sub
gs
pushf
outsl
scas
ss
inc
mov
sub
jne
bound
add
sahf
sbb
addb
icebp
add
arpl
jbe
loopne
aad
lret
scas
pop
mov
sub
lds
xor
imul
add
and
loope
mov
lret
mov
mov
sti
imul
sbb
out
data16
xchg
outsb
popf
stos
sub
fdivl
in
addr16
sub
aaa
push
mov
bound
xchg
addr16
iret
pop
int
addr16
mov
inc
mov
mull
xchg
popa
fisubs
cltd
fimull
mov
dec
sub
jle
push
shll
jo
arpl
arpl
xchg
mov
push
cmc
sbb
push
lahf
push
out
jo
xorl
and
pushf
sbb
ds
mov
ficomps
test
je
out
cmp
pop
lret
scas
pop
scas
aas
mov
adc
call
cmp
ljmp
sub
and
mov
rolb
rolb
js
push
cld
ds
cwtl
xor
rcll
push
sti
fwait
or
mov
jle
and
inc
shll
jne
out
inc
mov
xorb
cmp
or
je
lea
push
xor
sub
mov
popa
add
sbb
rclb
cmp
dec
or
push
jg
jmp
out
sti
into
dec
frstor
mov
mov
dec
fdivrs
mov
sbb
xor
xor
push
and
cmp
jnp
imul
pop
orl
mov
scas
leave
cmp
push
fimuls
inc
mov
mov
mov
fisttps
movsb
push
in
gs
pushf
outsl
les
test
fisttps
out
adc
pop
lea
mov
sbb
xor
xor
cmpsb
lods
lret
inc
lods
sbbl
out
sbb
icebp
insl
std
test
cmp
and
mov
mov
xchg
cld
pmulhw
mov
push
adcb
cmpb
mov
adc
mov
inc
enter
cmp
inc
daa
shlb
push
fisttpll
out
rorb
dec
movsb
loop
loop
je
mov
loope
sub
lds
jmp
hlt
xchg
outsb
leave
roll
mov
stc
push
xchg
add
cmp
mov
loopne
out
jno
xchg
xchg
adc
push
xorb
and
repz
cmc
xor
pop
leave
test
mov
addr16
out
in
je
insl
pop
les
int3
dec
ret
xchg
gs
in
sbb
and
push
mov
stos
into
cmp
xorl
cmp
jae
in
and
mov
shl
jns
mov
cs
cmp
dec
add
popf
adc
in
sbb
sbb
add
xor
scas
jns
or
lock
lds
adcl
movsl
xor
rolb
shlb
lock
pop
fistl
cmpsb
push
loop
in
bound
jg
js
ljmp
std
mov
int3
xchg
or
stos
cmp
inc
seta
bound
test
mov
mov
lret
mov
xlat
inc
and
cmp
cmp
push
lret
cmpsb
push
test
cltd
or
insb
insl
call
adc
or
cmpsb
push
xchg
add
cs
leave
mov
ss
mov
bound
jae
cwtl
xchg
sub
mov
fwait
push
cmp
aam
push
addr16
outsl
sbb
dec
ficompl
cmc
mov
push
pop
aas
xchg
ret
or
pop
and
nop
xor
xor
notl
mov
movsl
mov
xlat
pop
xchg
sub
cmp
xchg
movsb
jge
jbe
imul
je
icebp
inc
popf
jo
fs
and
sub
and
negb
popa
imul
mov
cmp
pop
stc
into
mov
push
or
or
hlt
inc
orl
insb
shrl
or
mov
js
xchg
mov
arpl
insl
jmp
add
push
pop
shl
cmpsb
ja
clc
jmp
dec
or
inc
push
mov
in
pop
sbb
cltd
lea
lahf
adc
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
add
or
or
or
or
add
add
or
or
or
or
add
add
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
add
add
or
or
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
lldt
adc
adc
adc
adc
adc
adc
adc
adc
add
add
xlat
dec
add
int3
dec
add
int3
dec
add
int3
dec
add
int3
dec
add
int3
dec
add
int3
dec
add
int3
dec
add
int3
dec
add
int3
dec
add
int
add
dec
add
int
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
ds
push
push
push
cmp
adc
sub
sbb
or
sbb
or
add
add
or
or
movups
adc
or
add
sbb
add
or
sbb
clts
sbb
or
sub
push
and
ss
das
sub
es
and
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
adc
and
adc
and
add
add
add
and
adc
and
add
add
add
add
adc
add
add
and
adc
and
adc
add
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
add
add
add
add
add
add
add
and
adc
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
addb
and
add
add
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
inc
add
add
add
or
add
inc
add
add
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
or
add
inc
add
or
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
and
add
add
add
inc
inc
and
add
adc
add
adc
and
add
add
and
inc
inc
add
add
adc
add
adc
inc
add
inc
add
add
add
adc
add
add
add
add
adc
and
inc
add
add
add
inc
add
adc
add
adc
inc
and
add
add
add
adc
add
inc
inc
and
inc
add
add
add
inc
inc
and
add
and
inc
add
adc
add
adc
inc
and
inc
inc
add
inc
inc
and
add
adc
add
add
and
add
add
and
add
and
inc
add
adc
add
adc
and
inc
inc
add
add
adc
add
inc
inc
and
add
add
add
adc
add
add
add
add
adc
add
inc
add
adc
inc
add
inc
add
add
add
add
and
add
and
add
adc
and
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
inc
adc
add
add
inc
adc
adc
add
add
add
inc
add
add
add
inc
adc
add
add
add
add
inc
adc
add
add
inc
add
add
add
inc
add
adc
adc
adc
add
add
add
inc
add
inc
add
add
add
inc
adc
add
add
inc
add
adc
adc
adc
add
add
add
inc
adc
add
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
adc
add
add
add
inc
add
inc
add
adc
add
add
add
inc
adc
adc
add
add
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
addb
add
and
or
or
xchg
testl
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
add
or
or
or
or
add
add
xlat
dec
add
dec
add
dec
add
dec
add
xlat
dec
add
xlat
dec
add
xlat
dec
add
xlat
dec
add
xlat
dec
add
add
add
xor
push
mov
pop
rorb
mov
jne
out
add
adc
movl
push
jmp
mov
mov
adc
jae
movsb
jbe
pushf
jmp
pop
jmp
inc
ret
ret
xor
int
ret
cmc
pushf
outsl
mov
shll
out
int3
popf
test
sahf
stc
or
inc
cmc
and
cmp
add
add
jmp
imul
imul
push
push
sub
jmp
dec
ret
mov
xor
sbb
test
add
cmp
push
mov
call
jmp
cld
jb
xchg
push
pop
jmp
xor
sub
insl
or
and
mov
loop
push
jmp
outsb
add
xchg
add
incl
add
test
add
xor
cs
hlt
popa
icebp
nop
arpl
fisttps
mov
je
call
jmp
inc
aad
sub
jp
das
mov
mov
popa
incl
popf
ret
and
ret
sbb
xchg
gs
out
adc
popa
rorb
mov
and
pop
pushf
xchg
outsl
cmp
jmp
imulb
cltd
push
scas
pop
fsubl
jno
jecxz
addl
mov
movl
movw
jmp
jbe
fs
push
aad
imul
je
jmp
dec
insb
pushf
jmp
cmp
dec
pop
jmp
cli
jns
mov
push
inc
and
and
pop
into
test
fs
or
xor
shl
sub
jmp
outsb
jmp
movsl
sub
inc
leave
pop
cmp
sub
sbb
lcall
push
inc
push
xor
cs
insb
add
pop
incl
fldpi
outsb
hlt
jl
jne
pusha
sub
cmp
pop
rcrb
fs
xchg
mov
jge
jmp
rolb
add
jmp
pop
cwtl
push
imul
push
pop
popf
xchg
mov
jmp
push
pusha
jmp
push
dec
push
sbb
add
add
pop
ds
push
ret
ret
js
mov
pop
lret
lret
aad
xchg
popf
pushl
jmp
enter
pop
into
mov
push
jmp
adc
adc
mov
jmp
pop
into
pop
cmp
addr16
roll
aad
xchg
add
loope
adc
inc
rorb
add
movzbl
add
cmp
jmp
mov
in
aas
movsb
cmp
dec
cmp
inc
fs
jmp
jae
adc
clc
jmp
sbb
popa
xchg
or
and
dec
aad
sub
pop
mov
andb
sub
jmp
cmp
or
insb
les
add
movb
add
imul
fistpll
movsl
int3
aas
fmul
push
jge
mov
sar
inc
adc
mov
cwtl
decl
hlt
sbb
and
pop
imul
and
cmp
jne
addl
jmp
repz
cmpl
jnp
rcrb
inc
roll
aad
lods
hlt
xor
jmp
lcall
mov
enter
inc
mov
aaa
xchg
bound
fcomps
les
inc
es
push
lods
xchg
arpl
push
jmp
lret
inc
aad
dec
bnd
je
and
mov
inc
mov
sub
outsl
popf
arpl
jne
addl
mov
jmp
sbb
rolb
add
jmp
popl
jmp
scas
cmp
imul
psubd
movsb
ret
ds
popa
sub
mov
je
pop
lcall
arpl
add
inc
push
xor
cs
insb
add
sub
arpl
test
mov
push
pushf
addl
pusha
jmp
sbb
or
pop
call
jmp
push
lret
pop
ds
jo
js
ljmp
add
sub
pop
out
sub
jmp
sub
jmp
sbb
fs
mov
and
jnp
mov
ja
pop
jmp
addr16
sbb
je
out
push
dec
int
and
xor
das
fisubl
cmpsl
cmp
or
add
dec
gs
popa
addr16
outsl
js
add
lea
gs
jmp
loopne
add
inc
and
jmp
cmpsb
daa
mov
and
test
push
test
mov
jmp
data16
adc
or
fwait
or
push
movsb
inc
jg
daa
fcmove
mov
ret
push
das
jbe
pop
jmp
rorl
dec
mov
mov
pop
fisttpl
fnstsw
mov
add
repz
incl
enter
popa
nop
aaa
ja
xchg
insb
je
call
jmp
xchg
jmp
adc
lahf
or
in
mov
cmp
in
mov
add
add
push
popf
jmp
leave
mov
jmp
jb
jp
in
pop
mov
mov
and
iret
cmp
jecxz
add
add
jmp
into
jmp
cli
insl
std
test
mov
out
mov
mov
and
push
and
incl
popf
ret
or
xor
popf
add
or
add
pop
into
test
scas
leave
cmp
inc
push
xor
sub
dec
sub
nop
testl
loop
ljmp
sub
xor
dec
push
xor
sub
lcall
push
jno
daa
mov
xchg
repnz
cli
jbe
cmpl
xor
mulb
dec
mov
lcall
push
xchg
add
jmp
scas
cmp
or
movsl
xor
inc
mov
push
loopne
add
add
cmp
jmp
cmp
clc
popa
icebp
nop
arpl
sub
xor
pop
pop
ret
ret
or
data16
xchg
outsb
cmpsl
es
cmp
inc
xchg
push
jns
jmp
jo
fs
add
dec
push
xchg
add
addr16
xor
ret
ret
mov
inc
mov
std
je
lea
or
mov
dec
mov
dec
movb
jp
in
dec
int
int
rcll
std
or
pushf
or
in
movsl
repz
lock
lret
inc
fisttpl
sbb
aad
loope
jmp
jge
lds
mov
push
lds
repnz
lcall
sub
aaa
cmpsl
ret
faddl
mov
lds
push
aaa
ret
js
mov
mov
cltd
clc
or
push
aad
sub
xor
cli
pop
scas
sub
xor
add
fisttpll
out
or
fcoml
lods
pop
mov
inc
movsl
ret
dec
fdivrs
xchg
cld
rsm
inc
lret
lret
inc
shll
sbb
cs
roll
shll
mulb
push
fimull
mov
cwtl
decl
mov
les
sub
add
sub
xor
push
fwait
or
jns
push
les
adc
insb
xchg
or
in
xchg
cmp
xor
xchg
fwait
decb
sub
xor
insb
mov
ja
xorb
add
jae
xchg
fistps
scas
pop
mov
mov
and
stos
and
js
mov
pop
fisttpl
fnstsw
jmp
jge
adc
push
adcl
xchg
jb
cmp
jne
mov
dec
fimuls
push
repnz
icebp
nop
arpl
rclb
pop
out
jo
jne
out
inc
mov
mov
and
pop
mov
repnz
leave
pop
int
popl
push
cmpsl
dec
jp
jp
in
imul
sub
popa
cmp
sub
pinsrw
dec
movsl
popa
out
adc
pop
enter
dec
mov
cmpsb
test
jp
mov
mov
mov
andb
sub
jo
jmp
fisttps
int3
popf
push
test
jge
dec
inc
jmp
mov
lods
mov
loop
mov
inc
popa
jmp
pusha
icebp
dec
testl
add
add
pop
or
add
int3
popf
jmp
xchg
sbb
aad
lock
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
lahf
adc
fstpt
cmp
jne
addl
mov
movzbl
jmp
int3
popf
jmp
or
in
outsl
jmp
mov
sbb
mov
jmp
popa
icebp
popa
add
inc
lret
ret
lods
sbb
pop
cmp
je
popa
mov
jmp
sub
jo
cmp
mov
jmp
push
jmp
cmp
test
add
add
jmp
mov
mov
sbb
stos
popl
jmp
adc
inc
int3
popf
push
enter
and
cmpsb
adc
add
movsl
xor
mov
daa
jnp
mov
ret
aam
inc
mov
std
call
jmp
jle
jle
call
xor
push
in
dec
xor
push
mov
movb
jmp
imul
hlt
pop
mov
out
loop
inc
mov
add
or
aas
xchg
movb
jmp
jnp
ja
loope
sub
add
add
jmp
xchg
setg
or
mov
ret
push
sub
inc
ret
inc
ret
dec
jmp
call
jmp
loope
out
mov
call
xchg
movb
jmp
inc
aad
popf
sub
outsl
sbb
pop
bound
movb
jmp
data16
fbld
dec
jmp
into
call
jmp
les
test
fisubs
mov
inc
movb
movb
movb
jmp
jl
insb
or
iret
jo
push
movb
movb
movb
movb
movb
jmp
movb
jmp
sub
int3
popf
dec
push
dec
bnd
leave
dec
fdivrs
in
inc
rcrb
ffree
inc
shlb
cmp
jp
jp
out
call
jmp
scas
sub
clc
xor
inc
dec
movb
movb
movb
movb
jmp
cs
pop
test
test
push
lret
shll
inc
aam
jmp
lret
dec
ret
cmp
add
add
jmp
addb
or
stos
add
inc
aad
jmp
int3
popf
sub
pop
cli
jno
pop
cmp
ret
and
add
fwait
or
jae
stc
mov
add
mov
push
jmp
stos
movb
movb
movb
movb
jmp
cmpsb
sub
lds
add
sbb
sbb
pop
loope
rol
inc
fildll
dec
jecxz
inc
in
jmp
out
std
test
or
inc
roll
aad
add
movb
movb
movb
movb
movb
jmp
adc
popf
adc
xor
push
inc
loopne
movb
movb
movb
movb
jmp
and
jmp
imul
in
xor
push
leave
or
inc
out
xor
jecxz
add
dec
fdivl
in
lcall
fisttpll
out
ror
push
or
movb
movb
movb
movb
movb
jmp
mov
mov
and
jp
fists
in
xor
scas
mov
and
pushf
cmpsb
movb
jmp
rorb
mov
dec
sub
sbb
shlb
shl
inc
imul
adc
cmpsl
add
stos
into
cmp
movsb
push
repnz
jnp
mov
icebp
movsl
add
sub
mov
cwtl
aaa
stos
cmp
sbb
iret
fs
push
lahf
push
movsl
xor
int
xchg
or
sub
xchg
sti
insl
std
test
stos
lods
lret
inc
loope
test
mov
fbld
add
in
mov
in
mull
gs
mov
inc
mov
pop
jecxz
push
in
pop
fmuls
fdivs
add
mov
xor
mov
cmpsl
ret
xchg
pop
mov
out
jg
jmp
inc
mov
sti
jno
xorb
movsb
ret
ds
lds
add
jno
insb
or
shlb
clc
mov
sbb
sbb
xchg
and
jb
in
mov
fwait
sub
mov
mov
and
add
sub
add
jl
notb
hlt
push
cld
aas
push
lret
lret
jbe
cmpl
xor
int
aam
or
jnp
jbe
add
mov
mov
add
movb
add
jmp
lea
dec
sub
sbb
xchg
add
cmpsb
add
cmp
sub
fcoms
cmpsl
push
mov
jns
in
jecxz
cmp
push
in
sbb
jns
mov
mov
orb
sti
aaa
movb
cmp
or
mov
inc
mov
shlb
mov
cmp
cmpsb
call
aaa
in
jp
jp
sub
add
cmc
push
fldl
mov
sub
pop
in
jnp
mov
xor
cmp
mov
add
fs
sbb
add
sub
adcl
jmp
push
in
adc
outsb
mov
test
add
cwtl
decl
loop
push
mov
stc
cwtl
imul
ficompl
inc
daa
shlb
mov
add
jb
gs
add
imul
ret
sbb
cmp
pushf
xor
or
mov
loopne
out
jno
mov
mov
and
mov
jg
jns
or
add
rcll
cmpsb
add
sub
sti
imul
mov
inc
stos
data16
outsb
or
jg
push
xor
dec
out
cli
popf
insb
movsl
xor
and
inc
insb
repz
cmc
push
or
or
sbb
xor
daa
inc
mov
orb
decl
stc
mov
xchg
lock
push
sahf
or
cmpsb
inc
insl
in
sbb
cmp
or
mov
jns
imul
cmp
cltd
or
sbb
imulb
sahf
insl
ret
cmpsl
ret
mov
add
test
aaa
mov
mull
nop
arpl
int3
pop
sub
sub
jns
cmc
gs
pop
cs
inc
mov
xor
daa
add
add
mov
test
jge
inc
test
xchg
repz
out
stc
imul
xchg
icebp
add
sbb
fcomps
xchg
addr16
pop
int
addr16
dec
leave
pop
cmp
and
scas
aas
pop
mov
inc
mov
shrl
test
xchg
pop
mov
std
or
dec
cmpsb
add
jae
push
fisttps
flds
or
loopne
adc
dec
mov
mov
and
dec
jecxz
xchg
add
sahf
das
xchg
xchg
adc
fs
pop
lret
scas
pop
cld
lret
mov
repnz
xchg
cwtl
pop
xchg
repnz
mov
movsl
and
jge
movsb
rclb
decl
xor
adc
pop
iret
stos
pop
scas
push
int
int
test
add
add
scas
aas
pop
test
psubd
leave
dec
fidivrs
lea
xor
jmp
sysexit
and
jmp
out
notb
fwait
clc
push
jbe
cmpl
aas
scas
lret
in
notl
notl
dec
out
jmp
push
jmp
sub
mov
shlb
mov
das
fidivs
loop
iret
cwtl
cmpl
jmp
push
jmp
mov
jmp
scas
insb
pushl
xchg
cld
outsb
cld
fwait
jbe
leave
hlt
mov
cmp
je
jmp
mov
jmp
cltd
or
pop
jmp
ret
cmpsl
push
jecxz
push
xor
addr16
adc
lods
cmp
fsubp
shufps
movb
movb
cmp
je
jmp
pushf
or
adc
ss
das
mov
out
adc
inc
dec
xor
jmp
mov
jmp
in
jbe
cmpl
je
lea
push
dec
iret
hlt
incl
jmp
xchg
setg
or
or
loopne
add
add
sbb
cli
xor
inc
and
jnp
mov
shlb
push
pop
jmp
or
jmp
xchg
push
test
push
idivb
shl
jmp
jecxz
xchg
jmp
test
std
or
jo
fs
add
fwait
or
dec
adc
int
push
movzbl
jmp
and
insb
incl
jmp
jae
outsl
or
hlt
mov
cmp
sub
pop
insl
in
sbb
jmp
cld
jb
xchg
outsb
out
adc
cmp
push
mov
out
mov
clc
push
jmp
es
stos
aas
scas
lret
daa
mov
dec
mov
jmp
js
jle
call
dec
mov
sub
imul
dec
push
jmp
aaa
mov
adc
or
punpckhdq
and
adc
inc
lock
inc
icebp
xor
movb
movb
jmp
and
sub
adc
and
shr
mov
mov
jmp
shl
jmp
ret
pop
leave
test
mov
inc
shlb
mov
inc
and
pop
xchg
mov
adcl
push
test
push
mulb
inc
cmp
lea
add
movzbl
inc
add
jmp
out
notl
mov
and
jns
mov
movsl
ss
jne
decl
jne
jmp
rcll
pop
mov
pop
jp
fs
roll
shll
leave
inc
xlat
mov
stos
int
inc
pushf
jmp
pushl
cmpl
imul
out
rorl
dec
sub
rorb
call
mov
das
stc
ja
imul
sbb
sub
jmp
les
addl
jmp
in
in
jg
ficoms
cmpsb
push
cli
dec
fisttpll
out
push
pop
jmp
xchg
jmp
or
xor
or
scas
cmp
mov
fwait
or
in
mov
stc
mov
mov
sti
stos
mov
add
mov
xor
pop
inc
pop
jmp
jmp
int
into
test
pushl
mov
jmp
lahf
or
mulb
sbb
insb
or
in
imul
mov
cs
lret
pop
ds
pop
scas
insl
xlat
mov
jmp
lds
test
ficomps
xchg
stos
cmp
arpl
cmp
dec
mov
jmp
jb
addr16
pop
jecxz
icebp
nop
arpl
scas
dec
and
mov
inc
shl
dec
jne
inc
mov
jmp
das
scas
aas
pop
test
sar
inc
adc
out
notl
lods
mov
mov
sbb
inc
xchg
cmp
jmp
aaa
ret
push
lds
mov
rclb
fistps
or
insl
in
sbb
pop
cmp
jno
jg
cltd
mov
andb
sub
jo
mov
and
jmp
jne
addl
mov
movzbl
add
jmp
jbe
jmp
ja
xorb
scas
cmp
mov
stos
and
das
ret
push
lds
test
jmp
mull
insb
lds
mov
jmp
mov
xorb
xor
or
test
jge
cmp
mov
cmp
jl
push
pop
mov
shr
mov
jmp
dec
jecxz
push
in
mov
sahf
sub
push
push
mov
sub
push
mov
push
push
mov
mov
shr
jmp
clc
mull
pop
hlt
jmp
sub
push
lds
jp
in
das
ja
bound
ds
jmp
sbb
popa
cmp
inc
aad
fnstcw
into
out
popl
lea
jmp
andb
and
ret
notl
repz
mov
dec
inc
movzwl
jmp
addr16
adc
or
xlat
leave
dec
fdivrl
scas
leave
cmp
pusha
into
push
andb
jne
shr
mov
jmp
and
jns
popa
add
add
lock
bound
inc
cmpsl
adc
sbb
out
mov
orb
sti
push
mov
movsl
xor
pop
int
cmpsl
loopne
or
mov
or
jg
into
pop
cmp
jno
loopne
adc
push
test
aad
fstpt
mov
jmp
insl
std
test
es
inc
mov
mull
xchg
pusha
leave
or
mov
inc
jmp
out
loope
jae
xchg
pop
xchg
repnz
out
into
pop
lret
scas
pop
mov
icebp
decl
xchg
ja
xor
div
movzwl
mov
jmp
dec
rolb
sarb
nop
setg
or
test
mov
sbb
mov
jmp
mov
test
jns
mov
clc
jns
mov
sbb
jl
test
pop
add
add
out
xchg
add
je
test
jge
jb
sahf
fs
movzbl
or
inc
jmp
gs
pop
loop
test
mov
xlat
mov
mov
shl
jmp
and
mulb
or
inc
cmpsl
ja
and
jmp
mov
into
sub
cmp
pop
jle
add
push
insl
push
mov
incl
add
or
add
js
gs
sub
pusha
pop
repnz
mov
or
inc
mov
jmp
adc
lods
inc
shll
imul
push
mov
cmp
mov
add
decl
jmp
xor
and
jg
mov
out
mov
and
mov
xchg
or
in
notb
add
mov
xorb
jmp
in
or
sub
sub
cmp
jmp
seta
bound
jmp
mov
jge
cmp
adc
js
sub
jmp
dec
int
and
cmp
or
and
in
push
lahf
push
jp
shr
add
sub
cmp
ja
jne
jmp
loopne
cmc
pushf
outsl
mov
mov
add
dec
lock
orb
decb
cld
jmp
cmp
jmp
into
inc
fidivrl
mov
adcl
mov
jbe
jmp
jmp
jmp
cmp
sub
dec
in
popa
icebp
nop
arpl
sub
dec
icebp
bound
jmp
sbb
jecxz
mov
jmp
in
jge
notl
movsb
ret
mov
mov
mulb
dec
cmp
mov
scas
ret
mov
mov
shl
or
sub
sub
jmp
pop
movzwl
jmp
pop
lret
lret
scas
aas
pop
test
and
jns
stc
arpl
outsb
jae
movsb
jmp
or
push
imul
add
add
dec
fdivrs
cltd
push
insl
pushf
jle
and
fnstsw
into
jmp
jmp
jmp
inc
fisttps
lea
xor
int
mov
add
cmp
lea
jle
mov
xor
cmp
jmp
rcll
mov
mov
and
push
push
sahf
in
sbb
or
jmp
stos
sub
fs
popf
insb
mov
ficompl
sub
jmp
sbb
sbb
pop
repnz
mov
jb
in
xchg
decl
jmp
mov
jmp
sbb
xchg
push
test
rolb
shlb
mov
jmp
or
dec
fidivrs
cmpsl
ret
sbb
sbb
xchg
and
jmp
lret
pop
into
test
cltd
clc
or
ss
mov
pop
xchg
shr
sub
test
jmp
xlat
inc
xlat
mov
aas
test
pop
test
jbe
jo
loop
clc
jae
xchg
pop
les
jmp
pop
lret
pop
ds
dec
rolb
shlb
inc
fimuls
or
mov
inc
mov
outsl
push
icebp
cmp
jmp
test
mov
sbb
movsl
and
les
pop
ja
jmp
enter
dec
orl
stos
sub
pop
iret
stos
pop
cmpb
lock
or
sub
sub
cmp
jbe
jmp
add
pop
mov
jmp
jmp
mov
ficompl
stos
xchg
push
adcl
leave
jmp
lcall
add
data16
bound
int3
stos
data16
enter
or
clc
jbe
dec
jmp
cmp
push
pushf
jmp
adc
popl
xchg
repnz
mov
movb
jmp
and
ljmp
cmpl
mov
cwtl
or
add
repz
jmp
add
ljmp
fidivrs
add
pop
add
add
pusha
jmp
mulb
xchg
outsb
fistps
mov
loope
iret
pop
into
test
jne
cmp
jb
jmp
add
icebp
popa
add
push
mov
mov
mov
jns
push
stos
jecxz
inc
or
andb
sub
jo
mov
jmp
cli
cmpsb
jne
jmp
daa
mov
dec
aad
sub
xor
in
imul
and
push
mov
jecxz
cmp
jmp
gs
rcrb
add
or
cmp
lahf
punpckhdq
rorb
adc
cmp
lret
lds
mov
push
test
add
popa
mov
ret
mov
cmp
xchg
mov
movzbl
jmp
test
cmp
jmp
jmp
enter
add
jmp
push
jmp
or
pop
fisttps
fsts
outsb
jmp
mov
scas
leave
cmp
or
outsb
popf
pushl
mov
jmp
pushl
mov
jmp
jp
in
jmp
addr16
bound
sub
jmp
jb
push
fisttpl
sahf
adc
pop
cmp
xchg
mov
fs
jmp
cmp
test
jmp
lock
out
push
dec
fadd
out
adc
pusha
in
jge
je
xor
imul
movsb
add
add
scas
into
jmp
jo
jno
jecxz
push
push
pop
int3
stos
iretw
mov
mov
and
or
mov
or
mov
push
jmp
sbb
and
dec
sub
adc
and
insb
or
lds
push
or
jmp
jmp
ret
pop
into
test
inc
es
pop
lret
pop
ds
nop
push
pushf
sti
push
xchg
mov
cld
movzwl
shl
pop
add
mov
pop
mov
pop
jmp
mov
jmp
cmp
adc
cmc
jbe
cmpl
popf
movsl
cmpb
fisttpl
scas
shr
dec
lcall
lock
imul
jmp
mov
jmp
adc
or
mov
xchg
imul
push
adc
arpl
shr
add
xor
lea
div
movzwl
jmp
cmp
das
dec
mov
stos
xchg
jecxz
cltd
push
shrl
lret
loope
add
pop
mov
pop
cmp
jmp
fidivrl
ja
xorb
and
jo
xorl
loop
xchg
jb
shr
add
jmp
sub
adc
sub
call
pop
enter
out
push
jmp
push
and
jmp
inc
roll
shll
cmpsl
aaa
push
mov
lds
js
jp
fiaddl
mov
mov
adc
out
mov
jmp
sub
jmp
sbb
fmull
mov
adc
inc
popf
push
xchg
repz
in
cmp
ljmp
mov
mov
xchg
icebp
add
sahf
sbb
add
add
mov
jmp
fiadds
rcrb
dec
mov
add
push
cmp
add
cmc
jecxz
popf
jmp
lds
mov
cmpsb
sub
into
dec
frstor
lahf
cmp
repz
add
mov
mov
cmp
jae
jmp
adc
push
arpl
cmc
and
addr16
or
jmp
cli
jle
mov
jb
movsl
sub
push
fdivl
in
outsb
dec
dec
js
popa
sbb
jmp
jne
xchg
testb
mov
cmp
outsl
inc
add
aas
dec
jae
pushl
mov
jmp
mov
xchg
lock
test
sahf
stc
or
lret
mov
inc
mov
lods
sub
jmp
jno
addl
jmp
push
les
int3
jp
xchg
add
cmp
insl
hlt
pop
mov
lods
inc
out
xchg
jmp
sub
push
les
int3
jge
mov
push
fisttpll
in
adc
jmp
adc
das
mov
lea
fildl
mov
mov
rolb
add
jmp
push
iret
pop
cmp
cmp
sarl
pop
xchg
mov
add
add
jmp
push
int3
inc
and
sbb
or
pop
xchg
cmpsl
repnz
jmp
mov
pop
inc
sbb
or
lds
add
repz
xorl
xor
ja
fs
sbb
push
shlb
movzbl
add
cmp
je
jmp
xchg
sbb
sti
pusha
dec
aaa
cmpsb
xor
jmp
adc
inc
es
jmp
push
jmp
pop
jecxz
push
in
xchg
sbb
insl
std
test
rcrl
test
mov
mov
mov
dec
mov
and
add
arpl
pop
int3
stos
rorw
sbb
pop
imul
sbb
das
out
popa
icebp
nop
arpl
push
sub
jo
mov
and
cmp
jne
jmp
xchg
add
fsubr
ja
lcall
in
jge
je
sub
popf
or
jmp
sti
jae
xchg
iret
lds
test
inc
insb
and
add
clc
and
jmp
inc
aad
sub
je
inc
shlb
jmp
dec
fstpt
xor
mov
jmp
ret
pop
iret
stos
pop
movsb
sbb
insb
sub
and
sar
inc
adc
pop
mov
xchg
jle
dec
fidivrs
or
cmpsb
and
popa
mov
ret
xchg
jmp
jne
jmp
mov
jmp
in
shl
pop
push
jmp
and
dec
lret
lret
jns
or
push
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
cmp
dec
int3
inc
and
mov
and
sub
insl
mov
add
add
jmp
int3
dec
fidivrs
punpckhdq
sub
add
jo
and
cmp
jmp
jbe
mov
jmp
aad
repz
xchg
sti
mov
std
or
mov
js
jmp
outsb
out
adc
cmp
jp
in
test
popl
lea
jmp
add
mov
inc
mov
mov
xchg
pop
sti
mov
popa
mull
icebp
dec
dec
fdivl
in
insb
cli
push
mov
jg
and
jge
jne
jmp
jae
pop
jmp
xchg
add
scas
aas
pop
test
scas
pop
cwtl
mov
fisttpl
add
inc
cmp
loopne
out
mov
test
mov
sbb
mov
sbbl
and
test
mov
cmp
push
xlat
inc
and
aaa
ret
sarl
sub
cmpl
push
mov
jmp
jecxz
leave
jmp
jp
imul
clc
lahf
push
jb
imul
sub
inc
jo
inc
cld
jmp
jg
imul
dec
sub
xlat
mov
mov
sbb
sub
imul
loope
jae
cs
mov
jmp
aas
pushl
jmp
cmp
push
fmuls
fdivrs
fmuls
fmuls
adc
in
sbb
sbb
mov
sub
push
mov
sub
push
mov
mov
jmp
jmp
lea
jmp
or
daa
pop
enter
jle
mov
outsl
and
lock
adc
sbb
cmp
cmp
and
add
or
jmp
decl
or
sub
jmp
faddl
fisttps
mov
std
test
jo
jp
in
pop
pop
int3
inc
and
cmp
mov
sbb
mov
sub
jmp
pop
mov
sub
jmp
aas
stos
cmp
push
xlat
aaa
pop
popf
or
jb
icebp
mov
es
push
lds
cs
inc
mov
mov
sub
cmp
mov
fsubrs
jbe
jmp
cmp
jmp
xchg
adc
movsb
ret
ds
add
sbb
cmp
push
je
popa
mov
jmp
inc
push
xor
sbb
outsl
lcall
scas
inc
jmp
add
leave
jmp
mov
shll
scas
aas
pop
test
mov
ret
mov
push
xchg
jbe
jmp
jbe
popa
ret
jmp
rclb
loopne
cld
fwait
jbe
jae
xchg
cmc
add
mov
test
cmp
cmpsb
sub
push
repz
movb
hlt
mov
jne
pop
pop
jmp
dec
pushf
jmp
pop
xchg
add
and
pop
repz
test
push
mov
aam
into
std
incl
pop
or
jne
cltd
add
xchg
popf
pushl
jmp
mov
test
mov
xchg
aas
push
ret
ret
mov
mov
jmp
pusha
jmp
out
jp
jp
sbbb
jmp
xchg
cld
pxor
pushl
lret
pop
int3
rcr
rolb
and
popf
pushl
jmp
sbbl
call
out
mov
push
enter
jmp
movzbl
jmp
movsb
cmp
pop
xchg
adc
xor
cmp
sub
loope
mov
ret
mov
stos
mov
movsb
ret
ds
adc
ret
jne
addl
mov
jmp
outsb
in
jge
notl
outsl
out
jg
jmp
test
ds
jmp
nop
adc
adc
sub
rorb
dec
mov
mov
mov
mov
andb
sub
jo
mov
jmp
push
jmp
rorb
jmp
fists
pop
mov
add
xchg
and
les
add
add
lea
jmp
mov
push
jmp
das
cmpsl
aaa
push
mov
xor
adc
stos
cmp
push
push
test
cmpl
push
mov
jne
xor
jmp
mov
fwait
popa
icebp
popa
add
inc
sub
or
xor
jmp
out
jge
je
sub
adc
rcrb
lea
jmp
in
jp
jp
cmpsb
xor
push
mov
into
jge
mov
ljmp
mov
inc
mov
dec
aad
sub
aas
es
jmp
sub
leave
jmp
flds
mov
movsl
cmpsl
lods
lret
inc
scas
mov
stos
or
jmp
leave
jbe
mov
sub
push
mov
sub
push
mov
jmp
sbb
insb
out
lea
jmp
shll
repnz
jmp
jae
add
sbb
outsb
or
adc
outsl
or
loop
cwtl
push
imul
xor
jmp
pushl
jmp
mov
xchg
dec
lret
lret
mov
inc
mov
mov
jmp
mov
jmp
adc
inc
jmp
movb
cmp
leave
mov
jmp
push
mov
sbb
pop
mov
xchg
gs
adc
rorb
dec
inc
jmp
dec
ret
ret
pop
int
cmpsl
mov
sbbl
dec
hlt
jmp
lea
jmp
push
pop
sbb
cmp
add
jmp
mov
test
jp
in
inc
aaa
movsl
xor
movsb
ret
ds
push
add
jmp
pop
jmp
sahf
or
pop
iret
stos
pop
into
jge
jg
jmp
xchg
popa
enter
push
neg
cmp
jmp
mov
jecxz
test
pop
test
sbbb
out
sbb
insl
pushf
jmp
add
pop
jmp
sbb
icebp
insl
std
test
mov
xchg
adc
xchg
pop
dec
lret
sbb
jmp
adc
sahf
cmp
add
stos
outsb
leave
mov
dec
pushl
mov
inc
mov
jp
imul
pop
jp
imul
sbb
fstl
decl
dec
clc
add
cmp
mov
mov
jmp
aaa
mov
inc
mov
cld
popa
push
and
jmp
mov
cmp
push
cld
or
dec
frstor
lea
sbb
aaa
ljmp
ret
mov
lods
mov
mov
mov
ret
jmp
mov
into
addl
jmp
jge
popa
add
push
lds
mov
mov
imul
inc
mov
out
dec
mov
jmp
mov
dec
sub
cmp
dec
fstpt
stc
cwtl
imul
pop
xchg
adc
adc
inc
or
andb
sub
jo
mov
jmp
push
push
add
add
jmp
adc
xor
bound
jmp
loope
movzbl
add
cmp
je
jmp
stos
popl
jmp
lahf
or
in
bound
loopne
jb
ret
jo
cmp
call
icebp
sub
movsb
sub
adc
fs
jmp
push
int3
inc
and
mov
dec
fdivrs
push
cmp
add
lods
add
add
jp
in
and
cwtl
jo
call
and
mov
and
popf
pushl
mov
jmp
adc
mov
jmp
inc
jmp
divb
mov
lahf
pop
insl
ljmp
imul
and
jmp
out
lock
bound
xorl
leave
test
mov
nop
je
push
jl
pop
cld
jmp
jecxz
push
into
jns
jmp
js
out
ret
jmp
push
fimull
fisubrl
daa
scas
aas
pop
test
sbb
and
jmp
sbb
mov
mulb
dec
dec
push
jmp
lods
lods
lret
inc
out
cmp
add
mov
or
decl
xor
cmp
push
ret
cmpsb
push
hlt
lods
and
ja
cmp
je
popa
mov
jmp
dec
roll
shll
rcrb
call
add
xchg
popf
pushl
jmp
mov
mov
inc
shlb
xchg
cmc
add
xorl
or
andb
sub
jmp
xor
sub
inc
mov
xlat
sahf
mov
xchg
xchg
mov
ret
pop
sub
jo
jmp
bnd
xchg
dec
iret
pop
cmp
xor
fs
add
jle
mov
aam
cltd
roll
add
xor
ja
rcll
mov
pop
cmp
cmp
nop
xchg
mov
jmp
and
mov
fcmovnb
dec
fidivrs
jecxz
jmp
addl
jmp
mov
jmp
xor
fistl
pop
mov
sbb
sub
dec
jmp
cmp
addl
jmp
cli
jne
mov
iret
arpl
xchg
gs
mov
inc
mov
cmp
mov
mov
mov
jmp
dec
fdivl
in
push
ret
ret
mov
gs
and
xor
jmp
sub
in
movsb
push
and
or
jl
pusha
notb
lcall
mov
ljmp
stc
in
popl
jmp
add
jecxz
call
out
adc
push
test
shr
ljmp
lods
and
jge
cli
push
pop
into
test
inc
pop
sub
jmp
inc
les
int3
sub
push
xor
xor
inc
aam
dec
cltd
rolb
mov
jmp
jmp
push
sti
out
out
jmp
jno
push
cld
adc
sbb
mov
dec
mov
jge
push
gs
add
cmp
add
add
stc
pusha
out
jl
notb
and
mov
push
mov
push
push
push
push
pop
cmp
jb
xor
jmp
jmp
testb
mov
dec
js
mov
sub
push
lea
mov
jmp
jmp
pop
enter
ficoml
lods
pop
cli
idivb
mov
pop
lahf
adc
mov
jns
and
push
lds
fildll
add
movsb
inc
mov
jmp
cmp
cwtl
or
lods
cmp
mov
inc
mov
std
jne
adc
mov
mov
jmp
sub
fwait
add
scas
cmp
mov
int3
or
jmp
mov
jmp
into
push
lds
pop
test
mov
leave
pop
fmuls
fcoms
out
push
add
cmp
je
popa
mov
jmp
mov
enter
add
xchg
adc
addb
repz
lock
mov
inc
mov
or
bound
adcl
dec
fistpll
mov
jmp
push
cmp
ds
shl
jmp
mov
rclb
jae
in
inc
iret
pop
cmp
and
pop
leave
test
scas
test
lea
jmp
popl
xchg
icebp
add
clc
je
lea
scas
jbe
pushf
jmp
cmp
push
lahf
push
ja
jp
in
inc
mov
mov
mov
inc
mov
jecxz
loopne
jb
stos
inc
shll
and
jmp
sti
insb
loop
je
and
int
loopne
mov
jmp
stc
adc
inc
or
andb
sub
jmp
mov
jmp
shr
cmp
jmp
sub
push
lds
inc
sub
push
sbb
mov
mov
inc
popa
jmp
enter
clc
jmp
and
jmp
jne
jmp
pusha
ljmp
stc
out
jo
jl
divb
into
pop
cmp
push
aas
ret
push
lds
mov
jmp
add
hlt
xchg
popf
pushl
jmp
incb
into
dec
fdivrl
dec
fnstsw
aam
add
sar
inc
adc
xchg
push
addl
jmp
dec
enter
adc
mov
jg
jg
sbb
or
std
jmp
jo
loop
icebp
jns
mov
push
sarb
inc
je
jmp
fcoml
lods
pop
mov
in
js
addr16
or
dec
ret
repz
mov
movzbl
add
cmp
jmp
popa
mov
jmp
dec
cmp
popf
lahf
adc
in
sbb
je
xchg
cmc
add
mov
arpl
xchg
gs
popa
icebp
nop
arpl
fst
pop
leave
test
jo
jo
loop
mov
xchg
loope
out
jno
mov
add
add
jmp
add
mov
test
cmp
pusha
xchg
and
movsl
and
pop
jmp
dec
jmp
popf
mov
push
jmp
stc
insb
loop
je
cmpsb
cmp
mov
xchg
gs
pushf
outsl
cmp
or
jmp
dec
rolb
rclb
fildl
mov
mov
aaa
fildll
pop
pop
call
or
push
push
push
push
pop
mov
cmp
jmp
lods
imul
add
add
cwtl
push
imul
or
in
xchg
int3
dec
fdivrl
sub
jmp
push
fwait
or
jae
lcall
pop
jp
jb
adcl
gs
jmp
mov
jb
jmp
std
cmpsb
pop
in
jmp
test
and
lock
aad
roll
shll
or
rorl
sbb
sub
and
dec
mov
test
jge
jmp
cmp
addl
mov
xchg
inc
lret
pop
ds
sub
dec
sub
ljmp
mov
jmp
add
pop
xlat
inc
and
cmp
push
ljmp
call
jmp
pop
roll
aad
repnz
lea
ret
jmp
int3
popf
jmp
jbe
sub
add
add
repz
inc
push
jmp
jae
pop
jmp
rclb
add
add
jmp
fwait
or
js
mov
stos
adc
jge
call
jmp
mov
pushf
jmp
adc
movl
xor
jmp
ret
dec
inc
lcall
push
push
cld
jnp
movsl
shr
or
jae
in
insb
and
decl
mov
jne
pop
jmp
xor
pusha
call
jmp
es
inc
mov
sbb
dec
loope
jmp
mov
push
popa
jmp
jo
jmp
mov
int3
add
or
add
int3
inc
call
pushl
mov
jmp
int3
popf
jmp
pop
push
xor
and
sti
rorl
mov
andb
sub
jmp
sub
jmp
jecxz
call
sti
movsl
mov
jmp
push
jne
jmp
mov
jmp
jge
call
jmp
aad
fnstcw
dec
lret
mov
ret
and
inc
addl
jmp
int3
popf
sbb
aad
lea
add
push
xor
inc
mov
ret
jmp
and
mov
stos
into
cmp
mov
jmp
adc
sbb
sbb
xor
dec
and
add
add
jmp
add
push
lcall
xchg
xchg
jmp
data16
adc
push
orl
mov
jmp
test
jmp
cmpsb
xor
add
jmp
adc
inc
mov
ret
or
mov
mov
mov
shr
neg
sbb
add
jmp
mov
rolb
add
jmp
sbb
jmp
jne
popl
jmp
int3
popf
loope
push
or
sbb
add
lret
in
popa
jmp
call
jmp
cmp
fistps
scas
pop
test
sub
add
add
fisubrl
fimuls
xor
call
pop
enter
push
repnz
push
jmp
int3
popf
dec
fdivl
in
mov
call
add
imul
insl
pop
pop
cli
lea
jmp
inc
push
jmp
sub
add
add
cld
and
add
dec
ret
cmpsl
insb
adc
xor
test
jbe
push
push
mov
push
mov
jmp
sub
mov
leave
jmp
push
int3
popf
pusha
nop
pop
ret
xor
add
loop
ret
push
mov
jmp
mov
jmp
in
bound
enter
call
jmp
out
stc
cwtl
imul
es
cs
pop
daa
or
push
jmp
mov
sahf
fisubs
push
sub
jmp
sub
popf
mov
enter
jns
mov
add
dec
fnstcw
or
jmp
pop
push
cmp
jmp
jb
add
add
jmp
xchg
add
std
or
push
rcll
jo
mov
mov
add
decl
jne
jmp
call
jmp
imul
sbb
out
pop
jmp
pop
jmp
int3
popf
mov
xchg
ds
mov
mov
neg
jmp
ret
lods
pop
cli
push
add
xor
jbe
cmpl
ret
inc
jmp
jecxz
aas
xchg
pushf
jmp
pop
jmp
lds
xchg
mov
add
jnp
pop
xchg
repnz
or
cltd
aam
popf
inc
rolb
shlb
imul
or
add
mov
jmp
sub
sub
mov
mov
or
sub
sub
cmp
jbe
jmp
push
fisttpl
fnsave
mov
sar
jle
mov
repz
add
xchg
popf
pushl
jmp
and
xlat
inc
js
mov
mov
mov
andb
sub
jmp
and
dec
iret
pop
cmp
and
rolb
mov
jns
jnp
popa
mov
ret
arpl
jle
call
jg
outsb
dec
xchg
and
jmp
xor
fcoms
cmpl
xor
cmp
dec
fstpt
shll
pusha
jmp
push
fisttpll
out
pop
inc
and
jns
jp
jp
repnz
push
jo
lds
add
add
jmp
mov
fimuls
add
and
cmp
jne
addl
jmp
movsl
cmp
test
out
jg
jmp
movzbl
jmp
cli
jae
xchg
fadd
jmp
popl
jmp
cld
push
sbb
dec
inc
and
sbb
cmpsb
inc
out
daa
leave
ret
jmp
rcrb
pop
mov
fmuls
fdivs
cld
loope
lea
jmp
mov
test
push
cltd
aaa
test
pop
test
pop
mov
jle
inc
add
pop
leave
test
decb
dec
sub
outsb
pop
adc
ss
sub
xchg
adc
divl
cmpl
sub
test
jmp
dec
roll
aad
pop
fimull
fimull
jg
mov
push
push
add
cmp
je
popa
mov
jmp
adc
push
mov
inc
mov
addr16
push
mov
mov
add
dec
jne
pop
jmp
adc
mov
jmp
clc
jno
xorb
push
mov
es
call
cmp
daa
in
jmp
pop
pushf
jmp
cmc
jmp
insb
out
call
jmp
cld
jno
xorb
xchg
add
sahf
pop
fstl
mov
rcrl
pushl
mov
jae
jbe
loopne
int
repz
shlb
adcl
out
pushf
sbb
add
movsl
xor
jmp
in
jns
mov
mov
mov
and
mov
jmp
out
loope
jae
enter
popa
mov
ret
dec
roll
rcll
push
roll
aad
sub
mov
addl
jmp
movzbl
jmp
sbb
push
adcb
addb
jge
je
add
loop
outsb
aaa
mov
and
jmp
add
jne
jmp
mov
jmp
mov
rorb
add
push
les
sub
push
addr16
sbb
add
out
mov
mov
mov
andb
sub
jo
jmp
and
push
inc
and
and
fnsave
push
int3
pop
jmp
push
pop
jmp
js
xchg
cmc
add
mov
movsl
int3
aas
aad
lea
clc
outsb
or
sbb
dec
iret
inc
jmp
mov
int
pop
leave
test
stos
repz
test
adc
icebp
faddl
shr
aaa
mov
mov
jmp
pop
jmp
cld
jo
xorl
mov
push
adc
test
dec
or
xor
xor
cmp
jae
mov
mov
shr
jmp
test
test
push
mov
push
mov
outsb
or
push
pop
enter
jns
jno
mov
decl
or
dec
jns
jmp
jge
js
ljmp
pop
xchg
xchg
stos
and
and
jmp
or
add
add
and
jb
xchg
mov
mov
push
les
fcoml
jmp
push
mov
jmp
mov
jmp
pop
les
int3
js,pn
jbe
loopne
xchg
or
cmp
mov
icebp
xor
clc
xor
sbb
sub
add
sbb
pusha
jmp
xor
dec
adc
push
sbb
mov
sub
xchg
adc
ret
jmp
mov
jmp
cmp
aad
lret
mov
sub
scas
sbb
xor
cmp
jb
jmp
andb
jmp
cmpsb
daa
mov
and
adc
push
icebp
popa
add
sbb
pop
ljmp
fmulp
mov
xchg
add
add
mov
inc
mov
push
mov
jmp
or
orl
clc
or
add
add
pusha
dec
fwait
dec
inc
fs
mov
dec
test
jge
jmp
push
fstpt
ret
push
lds
xor
popa
mov
ret
scas
and
cmp
into
pop
cmp
pusha
cmp
jecxz
sub
jmp
pop
xchg
or
xor
push
mov
lods
lret
inc
out
inc
rolb
shlb
jo
jmp
dec
jecxz
push
in
pop
adcl
cmp
jmp
addl
jmp
inc
aad
sub
jp
pop
xchg
adc
jl
sti
add
imul
xor
dec
cmp
jbe
test
jmp
jge
je
out
or
outsb
cld
fwait
jbe
dec
aam
sub
movsl
sahf
mov
popl
jmp
mov
shrl
and
inc
aam
dec
xchg
inc
test
jmp
inc
ja
mov
popa
xor
jmp
cmp
add
xor
pop
and
jmp
sbb
dec
mov
mov
mov
inc
mov
jnp
dec
jmp
loopne
test
jmp
mov
jmp
lods
and
inc
in
cld
fwait
jbe
sbb
or
js
ja
jl
or
cltd
ficoms
lods
pop
scas
push
mov
jmp
pop
jmp
fists
mov
stos
into
cmp
or
aas
lods
mov
test
mov
jmp
sbb
mov
xor
cmp
jae
mov
jmp
ja
push
push
aam
aad
dec
in
xchg
add
and
rcpps
mov
cmp
xchg
add
add
dec
adc
dec
mov
xchg
test
or
dec
outsl
and
add
mov
add
cmp
jmp
pop
cmp
pop
outsl
cli
push
xor
mov
mov
mov
sub
jle
inc
fidivrl
aaa
jmp
cwtl
push
xchg
repz
mov
inc
es
leave
dec
fnstcw
adc
imul
shr
scas
xchg
adc
and
lret
pop
jmp
lea
jmp
push
rolb
shrb
loopne
adc
aaa
dec
leave
pop
cmp
cmp
insb
loop
je
loope
xor
cli
inc
jb
jmp
pop
repnz
fs
gs
jp
jmp
push
jmp
loopne
stc
cwtl
imul
push
lret
mov
sahf
insl
pop
into
test
out
mov
jb
xor
rep
jmp
pop
dec
cmp
ljmp
imul
testl
popf
jmp
stos
and
cwtl
or
cmpsb
xor
scas
pop
and
push
inc
testl
xchg
add
cmp
jb
xchg
out
js
mov
pop
je
or
lret
lcall
and
jmp
ret
push
lds
mov
sbbl
ljmp
or
dec
shl
add
or
dec
test
jge
jmp
mov
sbb
gs
incl
adc
dec
adc
inc
add
add
add
add
sub
popf
add
add
jo
xorl
outsl
test
jbe
cmpl
or
add
add
mov
jmp
pop
rclb
inc
sbb
push
jecxz
cmp
mov
jmp
out
sti
sahf
insl
sbb
into
test
pop
cmp
sub
fisubs
xchg
pop
bound
add
add
xchg
cld
mov
xchg
fmuls
mov
push
lds
sbb
popl
jmp
add
pop
jb
addr16
shl
lcall
cld
or
add
add
push
add
add
and
xchg
add
push
cmp
sub
push
les
jecxz
jne
aaa
push
mov
mov
sub
push
push
mov
mov
push
jmp
les
fsubr
sub
jne
out
cmp
std
cmc
js
mov
adc
cli
call
jmp
rclb
push
clc
inc
push
pop
jmp
adcb
loope
mov
cmp
xor
gs
push
pop
pop
aad
mov
add
cmp
je
jmp
test
imul
add
cmpsl
xor
in
bound
cmp
mov
lahf
add
std
or
push
xorb
adc
xchg
popa
xchg
jo
push
inc
jmp
pop
ret
ret
ljmp
punpckhdq
shlb
push
cmp
jne
addl
mov
jmp
idivl
mov
out
adc
pop
xor
sti
jp
jp
mov
jmp
pushl
jmp
mov
mov
cmp
leave
cmp
mov
sbb
sar
inc
adc
cli
jge
je
insl
xor
cmpsl
add
jmp
add
xor
add
std
or
orb
stc
or
mov
fidivl
loope
push
mov
andb
sub
jo
mov
jmp
test
cltd
clc
or
xchg
cwtl
decl
enter
push
adc
cld
call
jmp
dec
fnstcw
cltd
clc
or
jae
cmp
and
add
jmp
into
pop
int
addr16
add
mov
aad
lea
das
outsb
in
outsb
lea
rep
jmp
sub
jmp
int
iret
stos
pop
shl
mov
jmp
in
js
mov
mov
call
sarl
dec
pop
pop
test
jbe
mov
mov
xor
rep
jmp
pop
les
int3
sub
repnz
loop
je
push
inc
bound
shr
in
sti
int
jmp
cwtl
lea
jmp
cli
imul
insl
in
xchg
adc
in
sbb
movsb
and
push
adc
mov
mov
cld
incl
repz
jmp
adc
pop
jno
lea
mov
mov
cmp
jmp
fldl
and
xor
push
in
inc
ret
ret
add
jne
jmp
xchg
adc
mov
cmc
jo
xorl
lds
es
inc
mov
orl
clc
or
out
mov
mov
mov
lea
call
jmp
xchg
pushf
sti
push
in
aaa
cmpsl
ret
div
shrb
dec
jmp
icebp
jle
mov
mov
sub
inc
xor
sbb
ljmp
cld
jmp
mov
cmpsl
push
jmp
cmp
inc
lods
or
mov
jmp
ja
push
cmp
fwait
or
xor
mov
lea
jmp
sub
push
mov
aaa
push
mov
ljmp
pop
pop
jmp
mov
cmpl
cmp
pushl
jmp
test
mov
es
mov
jmp
mov
mov
add
jmp
push
in
add
scas
mov
pushf
push
pop
sub
mov
test
jbe
mov
xor
jmp
sub
jne
jmp
mov
jmp
pusha
insb
or
sbbl
xchg
adc
arpl
xchg
gs
cmp
jge
xor
rep
jmp
inc
les
int3
and
fisttps
flds
aad
mov
lea
push
jmp
adc
ds
jmp
jnp
xchg
testb
xchg
inc
add
loopne
and
dec
dec
enter
and
imul
movsb
ret
faddl
repz
pop
lcall
cmpl
jge
jmp
pop
roll
shll
pop
aad
sub
jp
insb
or
shrb
ja
loope
int3
pop
jmp
lea
jmp
cmpsb
sub
clc
outsb
or
dec
scas
cmp
mov
in
cli
cltd
jbe
sbb
lock
mov
jmp
push
rclb
jno
movl
jmp
cltd
je
negb
dec
add
add
ljmp
jecxz
push
in
sahf
setg
or
cmpsb
adc
mov
lea
call
pop
test
jl
jmp
je
ja
loope
push
into
pop
cmp
adc
dec
stos
rorl
cld
test
jne
movl
jmp
mov
decl
test
jne
jmp
xchg
push
pushf
sti
push
cld
mov
sbb
leave
ret
jmp
ret
pop
enter
xlat
dec
fistpll
mov
jl
call
addr16
roll
aad
in
cmc
pushf
outsl
test
cmpsl
aaa
push
mov
out
sbb
test
jmp
movb
inc
jmp
dec
sub
jmp
push
roll
shrl
jl
imul
cmp
pop
lahf
fldt
pop
leave
test
mov
pop
sbb
jl
fdivl
in
mov
pushf
jmp
xorps
add
jmp
add
jbe
outsb
or
pop
loopne
imul
add
add
jmp
leave
inc
aam
dec
lcall
xchg
stc
inc
add
jmp
fs
jg
jmp
outsl
aaa
xchg
jmp
out
pushl
jmp
mov
sbbb
add
cmp
addr16
xchg
add
sahf
aaa
and
inc
clc
push
push
mov
lea
call
jmp
jmp
hlt
repnz
adc
jmp
pop
test
mov
jmp
lcall
aam
sub
push
imul
hlt
pusha
jmp
push
pushf
xor
addr16
jbe
dec
sti
mov
jmp
push
xchg
add
jno
jle
mov
sbb
add
or
jmp
or
mov
mov
and
adc
call
add
add
add
mov
add
mov
jmp
jp
jmp
jmp
in
cli
popf
insb
test
lcall
inc
and
scas
lret
cmc
cmp
jne
addl
mov
jmp
mov
call
add
jmp
xor
rclb
lods
pop
mov
push
pushf
sti
push
in
movsb
cmp
dec
lret
jae
add
cmp
je
jmp
mov
push
cmp
add
add
jmp
das
movsl
xor
mov
jge
popa
add
push
lahf
lea
jmp
sti
je
lea
adcl
and
inc
popa
mov
ret
xor
ja
mov
sub
push
push
mov
mov
lea
push
jmp
mov
leave
jmp
aam
aad
dec
in
imul
out
adc
inc
jae
fldenv
mov
jmp
into
push
jmp
cmpsl
mov
jmp
cmp
roll
sarl
jb
xchg
addr16
pop
repnz
mov
mov
call
sub
cmpl
pop
pop
jne
jmp
adc
mov
call
pushl
mov
jmp
fisttps
mov
std
mov
cmp
jmp
mov
jmp
pop
or
mov
add
adc
je
xchg
add
sahf
je
rclb
sub
pushf
in
and
xchg
pushl
rorb
rep
jmp
inc
jge,pn
cmp
pop
pop
mov
test
jbe
lea
jmp
cmpsb
aas
scas
lret
lret
dec
fistpll
mov
sbb
icebp
ja
xorb
lea
jmp
rclb
mov
cmp
jecxz
push
in
bnd
cmpl
jmp
insb
jl
jmp
pop
fmuls
fdivs
into
inc
fidivrl
int3
stos
data16
sub
pop
inc
jmp
or
call
jmp
inc
int3
clc
fincstp
movl
jmp
mov
jmp
test
jmp
orl
ja
outsl
or
mov
out
orl
cmpsl
pop
jne
jmp
push
fisttps
flds
and
lcall
rol
add
mov
jg
arpl
cmc
inc
aad
aam
dec
out
mov
dec
mov
jb
es
dec
cld
jmp
pop
aad
jmp
jmp
xor
test
lods
mov
in
pop
roll
aad
mov
dec
std
sarl
aaa
incl
push
pop
add
add
decl
pop
jmp
fucom
ret
jmp
pushf
jmp
xchg
push
xchg
repz
test
jb
sbbl
into
int3
pop
lret
sbb
loopne
sti
imul
adc
jp
jp
inc
fistpl
cli
push
cwtl
addr16
sub
mov
pushl
mov
pushl
mov
mov
jmp
dec
fstpt
jl
negb
pushf
sbb
aad
int3
push
xor
and
jmp
divl
cmpl
les
mov
jmp
push
aad
sub
and
ja
xorb
mov
popf
sbb
jecxz
inc
or
andb
jmp
cmp
mov
jmp
jmp
jo
jmp
mov
sarb
mov
inc
mov
test
stos
push
fisttps
flds
andl
dec
rclb
adc
sub
jmp
push
pop
mov
jmp
scas
and
inc
aad
dec
ljmp
imul
xchg
nop
add
xchg
popf
pushl
jmp
or
jmp
cmpsb
cmp
in
jge
testl
xchg
xchg
adc
inc
adc
sub
mov
jmp
xchg
or
mov
sbb
lret
mov
test
incl
add
jmp
out
jnp
mov
imul
movzbl
jmp
inc
jmp
mov
mov
aad
sub
aaa
std
fs
popf
insb
test
test
xchg
je
popa
mov
jmp
lds
scas
pop
frstor
jno
jecxz
js
pop
outsl
mov
inc
and
cmp
jne
jmp
lods
lret
pushl
jmp
jmp
lahf
dec
roll
aad
inc
lds
iret
xor
in
push
push
mov
sub
jmp
mov
and
out
xchg
lea
jmp
jl
outsl
or
out
inc
pushl
jmp
jb
outsb
or
or
push
jecxz
push
in
pusha
sub
lea
jmp
cs
sub
cmp
push
jmp
stc
aas
pop
jmp
jne
xchg
cmc
add
idivb
mov
xchg
sahf
stc
or
int3
inc
mov
adcb
sahf
mov
jmp
mov
jmp
ja
push
in
sbb
pop
pop
roll
aad
xor
add
jmp
dec
jecxz
push
in
movsb
xchg
mov
ret
enter
xchg
add
jmp
push
in
inc
push
rclb
ja
add
cmp
je
popa
mov
jmp
push
pushf
jmp
movsl
gs
jmp
aad
mov
out
mov
xchg
jmp
test
mov
into
pop
cmp
xor
dec
fdivrl
insl
hlt
pop
in
dec
jmp
jecxz
adc
add
add
mul
inc
fstpl
shrb
cs
int3
inc
and
into
test
pop
and
xor
movsb
ret
jmp
sbb
lahf
sbb
fldt
and
pop
mov
popf
pushl
mov
jmp
movb
inc
test
pusha
mov
jmp
pop
xlat
inc
and
sub
mov
inc
mov
inc
int
and
xor
jnp
jb
dec
adc
sub
mov
add
mov
xchg
repz
fiaddl
mov
gs
push
xchg
into
test
jne
leave
jmp
aas
mov
inc
mov
jl
add
cmp
outsl
add
call
pop
addl
jmp
push
push
xor
jns
pop
iret
stos
pop
into
into
pop
int3
stos
data16
addr16
jne
stos
decl
jmp
lea
aad
lea
popa
sbb
jmp
push
xchg
cmc
add
mov
enter
shll
cltd
adc
sub
add
inc
jmp
mov
mov
stos
jo
mov
and
cmp
jne
jmp
add
dec
roll
sarl
ret
sbb
decl
xchg
add
jp
arpl
xchg
gs
js
mov
inc
pcmpgtb
add
xchg
add
add
jno
jecxz
cmp
jge
xchg
testb
add
add
leave
jg
pop
fisttpl
push
je
popa
mov
jmp
mov
mov
movsb
push
jmp
add
scas
aas
pop
test
push
jmp
dec
rcll
and
push
lret
mov
mov
inc
enter
outsl
xor
add
add
jne
lea
push
mov
call
jmp
sti
je
lea
mull
icebp
cmp
repnz
inc
leave
loopne
pushl
lea
push
lea
jmp
sbb
jne
jmp
movsb
movsb
ret
mov
mov
xchg
add
jmp
lea
jmp
adc
mov
into
test
in
jmp
call
jmp
movl
jmp
inc
mov
jmp
mov
mov
and
es
cmpsl
xor
sub
inc
out
push
mov
movzbl
add
cmp
jmp
adc
jb
dec
cld
jmp
loope
call
inc
fidivrl
cmp
inc
rcll
cmpsb
push
aam
pop
jmp
movb
inc
jmp
ret
xchg
gs
mov
jne
leave
ret
jmp
mov
lock
hlt
xchg
outsb
xchg
jmp
jmp
pop
stc
adcl
xchg
jbe
pusha
notb
cmp
jge
or
dec
pop
popa
mov
ret
fistps
scas
pop
mov
mov
jle
js
or
loop
jmp
out
gs
pushf
outsl
mov
sub
dec
popa
icebp
lret
lea
add
add
jmp
lea
xchg
lock
ljmp
and
repz
enter
jle
loope
adc
dec
arpl
fistpll
mov
jmp
inc
fisttpl
jo
xorl
mov
and
leave
mov
pop
sub
add
xchg
popf
pushl
jmp
fmull
mov
popf
and
sbb
jmp
loope
ljmp
popa
jmp
pop
ret
pop
pop
lods
shlb
push
mov
mov
jb
xchg
flds
mov
movsl
and
sub
add
movl
lea
jmp
jmp
clc
data16
xchg
outsb
jmp
orl
cld
xor
sar
inc
adc
addl
jmp
popa
loop
pop
loop
cld
jl
jne
insb
adc
mov
aaa
data16
jo
mov
and
cmp
jmp
add
adc
pusha
notb
push
push
popa
jmp
les
cmp
dec
lea
jmp
into
dec
fnstcw
jb
in
push
mov
sbb
nop
push
mov
mov
sub
jmp
dec
ficoms
ret
iret
inc
aam
dec
mov
fidivrl
popf
mov
jmp
inc
lret
lret
jae
xchg
mov
cltd
cmp
lods
popl
lea
jmp
push
jmp
loopne
loope
jae
js
jle
call
outsb
popf
xor
sbb
test
jmp
dec
fmuls
fsubrs
adc
jae
xchg
std
fchs
add
cmp
je
popa
mov
jmp
lock
insl
int3
mov
mov
mov
mov
push
jmp
sbb
sbb
inc
data16
xchg
outsb
test
mov
cmp
xor
and
callw
sbb
pushl
lea
jmp
or
adc
xor
jmp
and
jge
repz
dec
test
jmp
lods
sub
test
std
or
lahf
push
mov
es
popa
in
sbb
adc
idiv
jne
lea
pushl
lea
push
call
jmp
xchg
and
mov
jle
pop
std
jg
mov
push
aam
sub
add
popa
xor
mov
xor
lea
rep
jmp
pop
xlat
inc
and
cmp
xor
ss
orb
pop
mov
mov
test
jmp
or
jg
or
pop
jmp
xchg
pushl
jmp
cltd
adc
xlat
pop
into
test
aas
pop
test
mov
mov
jmp
mov
clc
jmp
pop
aad
sub
jp
cs
and
mov
jmp
test
in
sbb
jbe
jne
out
inc
in
loope
jae
inc
aad
sub
je
cwtl
out
jne
mov
movl
call
jmp
or
test
jmp
mov
sahf
pop
enter
outsl
mov
mov
jle
ret
pop
jl
push
mov
mov
mov
push
pop
cmp
jmp
mov
fdivrs
lret
xchg
mov
mov
test
jne
jmp
enter
push
mov
jle
mov
jge
or
push
xor
or
jmp
fistps
mov
repz
fimuls
add
lret
cmpl
std
pushl
addr16
sub
popa
add
add
lods
lret
inc
scas
mov
dec
jmp
test
jmp
and
fcoml
lods
pop
mov
add
add
add
pusha
mov
jbe
or
lcall
mov
jmp
mov
je
jmp
xor
push
lds
fidivrl
insl
hlt
pop
outsb
loope
adc
inc
iret
test
inc
and
popf
pushl
mov
jmp
bound
xchg
stc
mov
out
jmp
in
insl
xor
imul
or
add
jmp
xor
lds
mov
sub
or
test
je
pushl
imul
lea
jmp
outsb
dec
jmp
xor
add
dec
sti
cmpsl
xor
jno
xorb
mov
call
enter
incl
call
jmp
movl
jmp
push
rcll
inc
fdivl
in
lahf
add
jmp
push
fwait
or
jns
pop
jmp
cld
fs
popf
insb
xchg
inc
sub
xor
and
fistps
push
lea
push
push
mov
call
mov
shr
jmp
loopne
jmp
jmp
inc
rcll
or
pop
iret
stos
pop
cmp
sub
sbb
jo
dec
adc
dec
adc
leave
jne
movl
jmp
xchg
adc
dec
into
pop
cmp
sub
arpl
movsl
mov
jmp
xor
jnp
mov
or
rorb
dec
mov
test
jmp
loop
lcall
shlb
pop
loop
and
fsubr
mov
out
jo
orl
xchg
sbb
je
outsl
or
mov
je
push
notl
and
push
sahf
or
cmpsb
pop
adc
fadd
add
jmp
push
rcr
mov
movb
jmp
repz
jmp
xor
jg
mov
hlt
pusha
notb
loop
je
mov
test
sti
lcall
add
decl
xchg
add
push
xchg
aad
movb
jmp
enter
leave
jmp
jmp
and
push
xor
jns
jmp
popf
add
mov
jns
jmp
inc
pushl
lea
push
push
mov
call
jmp
jl
jne
dec
sub
fcompl
addb
repnz
movsl
insl
pop
jmp
mov
jmp
aas
mov
inc
push
xor
sub
xchg
jb
jno
fs
leave
ret
jmp
jmp
out
mov
jmp
fistps
test
cli
popf
insb
cltd
or
pop
jp
jg
sub
out
pushf
mov
jmp
xorb
pop
mov
jmp
incb
mov
jmp
fsts
cmpsl
push
mov
jge
je
popa
mov
lods
mov
mov
out
pusha
jmp
inc
rorl
cltd
jge
andb
jmp
pushf
adc
movsb
ret
ds
ds
inc
mov
rorl
mov
idivl
and
popf
pushl
jmp
sbb
mov
ret
addr16
jmp
push
mov
add
jmp
xchg
in
jne
jmp
arpl
addr16
dec
lds
mov
aam
dec
push
jecxz
xor
lds
pop
cmp
pusha
xor
ret
jmp
mov
stc
outsb
cld
fwait
jbe
fisttps
mov
cmp
or
jp
jns
pop
jmp
je
adc
mov
cmp
pusha
jnp
ja
loope
clc
popa
icebp
nop
arpl
push
in
sti
imul
adc
popl
lea
jmp
mov
cmpsb
test
mov
sbb
clc
xor
adc
rorb
ja
add
jmp
sbb
mov
stos
into
cmp
mov
enter
xor
decb
mov
inc
out
or
mov
add
add
dec
jmp
cltd
push
mov
es
in
push
jmp
ja
popa
add
add
outsb
cld
fwait
jbe
pop
fwait
or
push
xor
mov
mov
dec
inc
xlat
mov
stos
rcrl
scas
pop
test
add
sub
add
jmp
adc
or
dec
pop
aam
sub
jnp
in
dec
pop
push
cmpsb
xchg
jmp
adcb
loope
cmpsb
jg
bound
jle
call
inc
mov
jmp
cltd
fmul
mov
mov
jmp
into
pop
int
addr16
or
lahf
punpckhdq
daa
out
std
mov
jmp
add
movsl
xor
cmpsl
aaa
push
mov
pop
stos
dec
jge
popf
pushl
mov
jmp
hlt
fldenv
outsb
addl
add
inc
imul
out
in
mov
sahf
insl
in
adc
sub
xor
call
cltd
roll
add
shlb
mov
and
xor
scas
addr16
and
ret
jmp
add
jmp
inc
les
int3
and
xchg
add
pop
into
test
xchg
inc
adc
pushf
sbb
cmp
mov
mov
mull
icebp
pop
push
xchg
or
outsl
pop
pop
pop
ret
jmp
xchg
and
std
insl
hlt
pop
loope
mov
inc
mov
cmpsl
dec
es
jmp
pusha
out
jl
notb
push
pushf
sti
push
ret
sbb
dec
icebp
dec
push
mov
popa
jne
addl
mov
movzbl
jmp
dec
rcll
mov
les
andl
and
sbb
push
jae
jmp
nop
add
jmp
lret
je
lea
jmp
cmp
icebp
gs
pushf
outsl
fcoml
mov
jle
and
dec
jae
test
jmp
lcall
cli
push
mov
movsl
lods
lret
inc
movsb
test
push
add
push
movzbl
movzbl
shl
or
movzbl
jmp
sub
gs
pushf
outsl
test
lahf
punpckhdq
jmp
or
loope
add
pop
adcb
addb
lret
lret
loop
pop
loop
or
jnp
adc
shlb
push
lea
shr
inc
add
inc
mov
mov
jmp
clc
jg
mov
jmp
push
das
outsl
mov
jmp
jmp
mov
cmpsb
xor
xchg
push
test
push
leave
imul
add
add
mov
shll
adc
aam
jl
jne
insb
add
aam
int
xchg
rcr
int3
popf
sbb
je
jnp
in
inc
pop
pop
js
popl
jmp
push
rorl
add
add
jne
pop
jmp
pop
jmp
jle
add
jmp
mov
les
pop
cmp
jo
insb
loop
je
in
in
jmp
sub
incl
mov
mov
das
out
insb
out
adc
dec
cwtl
or
imul
add
jmp
adc
insl
hlt
pop
lods
adc
push
ret
ret
adc
inc
xchg
jmp
cmp
pushl
jmp
pop
adcb
subb
rolb
shlb
mov
pop
push
jne
jmp
lds
mov
roll
pop
movzbl
jmp
aaa
mov
inc
mov
lock
and
clc
notl
inc
andb
or
andb
sub
jo
mov
jmp
sbbb
jmp
mov
xchg
adc
cmp
jne
addl
mov
jmp
call
mov
add
jmp
adc
int
add
out
test
xor
jmp
add
add
jmp
mov
mov
pop
leave
test
mov
push
mov
mov
ret
mov
dec
jbe
clc
out
pop
insb
sub
dec
sub
daa
push
aad
sub
or
adc
adc
negb
das
out
mov
add
add
jmp
fs
in
xor
andl
jmp
int3
inc
aam
dec
mov
jne
idivb
mov
xchg
nop
lea
jmp
push
jmp
dec
lds
iret
sbb
or
mov
xchg
icebp
add
jecxz
imul
add
add
outsl
lcall
add
and
sub
jg
cmp
das
mov
add
add
jmp
hlt
in
mov
sub
sahf
or
cmpsb
pop
fs
popa
add
pop
or
add
out
jmp
and
or
push
xor
addr16
jne
out
cs
ljmp
stc
in
movl
ret
jmp
out
in
mov
adc
or
out
popf
mulps
rcrl
call
add
xchg
jmp
flds
mov
leave
mov
cltd
clc
or
rcll
cmpsl
push
mov
jbe
mov
xchg
push
xor
loopne
hlt
xchg
outsb
nop
gs
pop
loop
daa
mov
repnz
add
inc
movl
movl
jmp
push
adcl
xchg
push
add
add
mov
jmp
mov
std
or
mov
fnop
pop
into
test
repz
mov
mov
andb
sub
jmp
mov
jmp
jmp
or
push
jecxz
push
in
sub
rolb
add
stc
jo
jmp
loope
jecxz
jne
das
mov
roll
mov
mul
jbe
cmpl
add
aas
cmp
je
popa
mov
jmp
cld
insb
loop
je
cmp
adc
in
jge
negl
xor
mov
jmp
ds
cmp
sbb
cmp
test
dec
jle
and
cmp
jne
addl
mov
jmp
movsb
cmp
rorl
mov
clc
test
pop
adc
test
jmp
rolb
add
jmp
iret
push
les
jmp
sub
jmp
mov
jmp
pop
ret
ret
in
bound
pusha
pop
repnz
aaa
scas
andb
add
add
push
sbb
add
sbb
xchg
dec
fisttpl
fstpl
jmp
push
divb
jne
in
jmp
inc
ret
ret
jecxz
push
in
divl
xorb
xchg
add
jno
cmpsl
jmp
leave
push
ret
cmpsb
push
cmpsb
mov
scas
ds
dec
mov
inc
aas
repnz
mov
push
mov
lea
call
jmp
sbb
jl
in
bound
mov
iret
jmp
pop
pop
and
jmp
push
cwtl
push
imul
mov
inc
mov
mov
test
call
pop
adc
stc
lcall
shrb
mov
and
mov
jmp
jl
jge
negl
inc
and
popa
push
lds
iret
fs
inc
cmp
inc
adc
mov
mov
push
or
jmp
mov
mov
and
mov
loope
ljmp
xchg
push
bound
aam
rcll
and
sarl
mov
hlt
xchg
outsb
test
mul
jle
mov
cmpsl
push
aad
add
mov
lea
rol
add
mov
not
jmp
or
mov
lods
ja
gs
adc
cli
pop
fistpl
push
decb
jmp
clc
jle
mov
psubsw
add
add
push
xor
sbb
jp
lds
iret
and
shr
xchg
fistps
scas
pop
test
mov
inc
mov
imul
adc
add
mov
mov
and
jmp
lea
jmp
lret
mov
insl
hlt
pop
rorl
push
jno
inc
and
add
pop
mov
movzbl
add
jmp
lods
daa
mov
and
add
pushf
xor
ds
cld
sub
out
into
mov
add
mov
and
mov
not
jmp
outsb
sbb
add
jmp
mov
mov
and
push
cmc
inc
push
lret
pop
ds
dec
fldt
rol
jmp
dec
lret
mov
jmp
test
xchg
adc
loopne
sbbb
call
out
mov
cli
add
hlt
or
add
lea
jmp
pop
int
addr16
fidivrl
mov
mov
cmc
bound
clc
jmp
sahf
add
sbb
data16
xchg
outsb
cmpsl
mov
sahf
stc
or
arpl
and
not
jmp
and
jmp
iret
dec
frstor
pop
scas
dec
rcll
lods
pop
mov
cld
jmp
xchg
adc
setg
or
jge
outsb
or
adc
insb
jle
cmpsl
bound
jb
outsb
or
or
aam
fisttpll
jg
inc
int3
jmp
pop
pushf
adc
gs
pushf
outsl
bnd
jp
lea
std
or
xor
push
sti
push
and
or
add
mov
lea
rol
add
jmp
rorb
push
addl
add
add
out
xor
push
lds
lock
aam
jecxz
push
in
scas
mov
lea
ror
add
mov
not
and
jmp
cwtl
or
mov
xchg
aas
loop
ljmp
rorb
add
or
shlb
rorl
insb
or
scas
sbb
fadds
cli
jmp
adcl
add
enter
or
imul
xlat
and
or
add
mov
lea
rol
jmp
pop
ret
ret
dec
ret
mov
sub
push
clc
jmp
xchg
or
rol
jmp
lea
jmp
les
test
fisubs
loop
inc
jge
shr
or
jmp
adc
jbe
push
test
push
imul
push
pop
fimull
fisubl
out
push
add
mov
not
and
mov
and
or
add
mov
jmp
ror
jmp
js
mov
ret
mov
mov
or
xorl
mov
fldenv
bound
ljmp
sub
sub
enter
and
mov
not
and
or
add
mov
jmp
lods
sub
mov
sub
inc
hlt
jmp
pop
rolb
rolb
or
mov
jmp
in
cltd
push
xorb
les
int3
jp
xor
adc
shr
into
and
mov
mov
and
xlat
and
jmp
pop
leave
pop
cmp
js
lods
and
sbb
ret
jbe
mulb
pop
addl
mov
not
and
mov
and
or
add
mov
jmp
lea
cmp
xlat
jmp
test
jmp
int3
push
les
insb
or
in
lret
pop
ds
dec
rolb
sarb
call
iret
and
jmp
jns
jge
jmp
into
push
mov
dec
das
ficompl
les
int3
add
in
add
not
and
or
add
mov
lea
rol
jmp
jo
loop
or
jno
movsb
ret
shlb
adc
cmp
push
aam
jge
lea
rol
add
mov
notl
jmp
mov
jmp
ja
and
jmp
inc
les
int3
cmp
inc
xlat
mov
cmpsl
mov
xchg
icebp
add
shrl
inc
clc
jmp
add
ds
and
jmp
xchg
sbb
aad
aad
repz
xchg
testb
sub
mov
not
and
or
add
lea
jmp
pop
mov
jmp
and
jl
into
ror
jmp
push
fisttps
fnstenv
mov
scas
lret
jge
add
push
repz
cs
lea
jmp
les
mov
push
repz
cmc
inc
inc
roll
sarl
mov
hlt
mov
and
mov
and
or
add
mov
jmp
cmpsl
aaa
cmpsl
ret
and
and
sbb
dec
fstpt
pusha
jg
iret
or
jmp
mov
fwait
lods
sub
cld
jmp
add
or
cmpsb
sbb
out
jbe
cmpl
fisttpll
out
loopne
add
and
jmp
xchg
setg
or
jmp
dec
inc
and
pop
adc
cmp
push
imul
dec
inc
les
int3
add
cmp
cmp
test
jmp
inc
push
xor
sub
pop
into
test
mov
repz
gs
inc
sub
aas
call
xchg
add
jns
repnz
mov
jmp
mov
nop
testl
fsubrl
iret
cmpsb
cs
ljmp
add
clc
add
mov
lea
ror
add
jmp
call
sti
jmp
insb
loop
pop
loop
xor
add
pop
aad
sub
jp
rol
add
and
mov
mov
mov
jmp
push
or
jmp
lahf
adc
push
shll
ds
mov
mov
and
jge
jmp
add
jmp
aaa
cmpsl
aaa
push
mov
aas
lret
and
fnstenv
shlb
cli
mov
and
or
add
lea
jmp
repz
push
add
jmp
and
jmp
adc
inc
jecxz
push
in
movsb
cmp
pop
int
popl
push
jmp
insl
hlt
push
cld
adc
mov
hlt
mov
jmp
not
jmp
mov
mov
ja
xorb
adcl
sbb
mov
and
or
add
mov
lea
mov
jmp
in
jmp
cmp
and
push
lahf
push
jl
imul
gs
mov
and
jmp
mov
cmpsb
shll
nop
sbb
lods
lret
inc
mov
jl
jne
cwtd
pop
push
fimull
inc
rol
or
dec
cld
mov
not
and
jmp
inc
roll
aad
cltd
adc
pop
enter
add
inc
cld
jmp
cmc
jp
jp
gs
not
jmp
pusha
in
bound
leave
test
incb
sbb
aad
lea
rolb
ret
lods
xchg
hlt
inc
mov
jmp
cmc
and
jmp
sub
push
xor
mov
sbb
sbb
jae
jp
in
inc
iret
jns
xlat
and
or
add
mov
lea
rol
jmp
push
mov
inc
and
jns
fimull
ficompl
xor
lret
leave
and
jmp
scas
fsubp
add
jmp
popf
or
lods
cmp
cli
push
mov
xchg
adc
dec
cld
mov
not
and
mov
jmp
adc
add
sahf
push
fistpll
mov
bnd
xorb
and
decl
test
and
dec
into
pop
cmp
xor
dec
fidivrs
push
xor
sbb
fdiv
jmp
cld
or
add
lea
rol
jmp
push
adcl
sub
inc
les
mov
cmp
add
jmp
cwtl
adc
inc
aam
dec
stos
popf
adc
in
sbb
or
cmp
mov
not
and
rol
add
mov
and
or
add
jmp
xchg
add
shl
ror
add
and
mov
mov
not
jmp
mov
cltd
add
add
cli
jmp
add
jmp
pushf
adc
xchg
mov
pop
iret
stos
pop
movsl
jmp
jge
push
rorl
fucomip
test
xchg
add
or
int
repz
shlb
mov
shl
lea
mov
and
ror
jmp
popf
or
in
mov
mov
xor
rorb
shr
lock
push
clc
jmp
or
jmp
roll
mov
shlb
lcall
lea
rol
add
mov
not
and
mov
jmp
sub
enter
push
mov
negb
push
enter
dec
and
not
and
lea
rol
add
mov
and
jmp
cmp
push
clc
mov
not
jmp
dec
fistpll
fistpll
mov
add
sahf
jbe
inc
and
jmp
mov
mov
imul
insl
xchg
jg
outsb
or
das
or
bound
and
or
add
mov
lea
ror
jmp
jae
fs
push
jmp
notl
xchg
icebp
add
popf
push
and
or
add
lea
rol
add
jmp
mov
xchg
lock
xchg
push
mov
es
mov
jmp
stc
jne
mov
push
cmp
popf
or
inc
aad
dec
ljmp
loopne
adc
push
sbb
sbb
or
dec
fstpt
push
mov
jmp
cli
cmp
aad
shll
xchg
lock
sbb
push
rorb
hlt
rol
add
mov
not
and
jmp
mov
jmp
rol
jmp
fwait
pop
xchg
repnz
sti
pusha
notb
jge
negl
ret
or
and
mov
and
or
add
lea
jmp
cmp
jnp
fwait
add
jmp
cmpsb
cmp
int3
inc
and
mov
loop
pop
loop
cmp
not
jmp
lcall
sbb
aam
add
jmp
pop
fmuls
fdivrs
xor
icebp
add
rolb
mov
leave
jbe
jmp
cmp
das
dec
mov
fsubs
sti
mov
not
and
or
jmp
add
lahf
adc
in
sbb
sbb
or
js
dec
fdivrl
inc
and
push
in
aas
add
add
pop
dec
fnstcw
movsb
ret
ds
les
mov
and
mov
and
or
add
lea
rol
jmp
mov
out
test
xor
add
lea
rol
add
mov
xor
jmp
lea
jmp
movsb
movsb
ret
mov
mov
imul
icebp
iret
xor
add
mov
jmp
mov
andl
es
mov
decl
add
mov
cmp
pushf
xor
or
xchg
and
lahf
punpckhdq
in
out
fsubrs
les
xchg
addr16
jge
je
outsl
push
dec
roll
shr
mov
mov
jmp
pushf
or
and
and
push
out
dec
and
enter
inc
cmp
decl
movl
xchg
stos
sub
jne
mov
xchg
arpl
xor
jmp
xchg
cmpsl
sbb
pop
mov
add
js
ljmp
sti
gs
pop
loop
mov
mov
mov
lea
ror
add
mov
xor
xor
jmp
movsb
daa
mov
and
mov
test
cmp
lahf
es
add
jmp
push
sub
loop
movsb
sub
lds
push
xchg
add
loope
sub
xchg
lea
rol
add
mov
xor
xor
jmp
mov
ret
jmp
fwait
sbb
mov
std
ja
xorb
imul
lea
jmp
call
int3
cmp
mov
mov
cs
arpl
xchg
gs
jecxz
mov
fcmovb
movl
pop
jmp
xor
mov
jmp
and
enter
add
push
mov
jns
cmp
scas
cmp
mov
xor
push
xor
imul
mov
xor
add
lea
ror
jmp
aaa
mov
inc
mov
aad
fdivrl
sahf
stc
or
sbb
xor
hlt
xor
add
lea
mov
xor
rol
jmp
divl
jge
lea
rol
add
mov
xor
xor
jmp
push
iret
pop
cmp
push
mov
stos
sub
jl
push
xor
es
push
cli
mov
ss
mov
xor
aam
das
push
sti
jmp
sub
pop
ja
fs
sbb
or
fs
adc
jno
stc
jmp
sbb
push
xor
jmp
rol
jmp
mov
xchg
aad
mov
mov
and
inc
fwait
mov
jmp
jmp
fstl
lods
pop
scas
add
sbb
scas
aas
pop
test
test
xchg
sbb
in
mov
ror
add
xor
jmp
jge
push
cld
setle
cmp
add
jb
xchg
push
jnp
in
aas
inc
iret
pop
cmp
adc
xor
jmp
call
jmp
ljmp
les
shr
sahf
add
add
dec
xor
jmp
dec
fmuls
fsubrs
scas
lret
xchg
sbb
sub
popf
mov
add
pop
cmp
outsb
lcall
rorl
xor
add
lea
rol
add
mov
jmp
aam
rol
jmp
aas
stos
cmp
push
add
add
jmp
and
scas
mov
jmp
and
or
add
pop
aas
lret
push
add
jmp
or
add
add
jmp
pusha
ljmp
stc
out
inc
fisttpll
out
cmp
mov
test
mov
jmp
mov
jmp
push
call
jmp
sub
jl
mov
add
flds
pop
mov
push
lods
add
mov
not
jmp
rol
jmp
decb
popf
jecxz
adc
add
xor
jle
add
mov
lahf
cli
or
and
not
rol
add
or
xor
add
lea
jmp
jecxz
lock
bound
and
and
xchg
xor
call
jmp
add
sbb
jmp
pop
or
jmp
push
add
jmp
ror
jmp
cmpsl
popl
int3
popf
sbbl
sbb
ds
add
pop
cmp
add
and
lret
xor
add
lea
mov
jmp
jns
call
jmp
cs
cmp
pop
mov
sbb
pop
test
pop
ds
push
jecxz
push
in
pushf
inc
add
jmp
dec
add
jmp
mov
int3
popf
loope
test
add
sti
jo
xorl
dec
lods
not
or
xor
add
lea
rol
add
jmp
lea
jmp
fs
jmp
xor
addl
or
xor
jmp
xor
aaa
sahf
adc
xadd
push
jmp
mov
jmp
or
jmp
test
int3
popf
mov
rol
jmp
in
stc
cwtl
imul
mov
jmp
nop
sbb
aad
out
xchg
pop
bound
enter
not
jmp
jle
call
jmp
mov
lahf
sub
sub
loop
rorl
sti
xor
add
lea
ror
add
jmp
sbb
add
jmp
test
pop
mov
jmp
adcl
loopne
mov
aam
pop
mov
fsubr
fimuls
sub
jmp
push
rol
jmp
pop
fucomp
add
add
jmp
scas
cmp
jmp
and
not
or
xor
add
lea
rol
add
jmp
push
push
mov
not
jmp
jo
mov
add
jmp
pop
iret
pop
cmp
jle
pop
xor
jmp
fmulp
popf
jne
jle
mov
fistpll
add
dec
fimull
fisubrl
push
or
add
jmp
bnd
jmp
popa
hlt
push
cld
pop
js
jo
loop
cmc
or
jmp
xor
int
lret
scas
pop
mov
aad
sub
xor
mov
mov
not
rol
add
or
xor
add
lea
jmp
and
icebp
adc
ror
jmp
pop
push
xor
dec
lods
cs
and
jg
xor
lea
jmp
dec
iret
pop
cmp
aas
je
fsubl
or
fucomip
and
add
push
lret
mov
or
lea
lahf
cli
or
scas
pop
repz
jmp
js
es
mov
jmp
orb
decb
iret
cmp
into
dec
fstpt
scas
jbe
push
flds
pop
lock
rol
add
mov
xor
jmp
xor
in
adc
jmp
out
mov
jmp
pop
rolb
shlb
ret
push
lds
jno
insl
hlt
pop
mov
and
leave
add
clc
xor
add
mov
lea
ror
add
jmp
idivb
jp
adc
punpckhdq
xchg
rolb
or
in
jge
je
sub
push
test
push
scas
popf
or
in
mov
pushf
sub
jmp
test
and
xor
push
ljmp
lahf
push
jl
je
out
sub
jmp
or
jmp
insb
pop
jmp
jecxz
out
mov
sbbl
call
add
sahf
jbe
xchg
add
adc
mov
rcl
sub
rol
lsl
jmp
loope
nop
fmull
ret
js
jmp
or
adc
rolb
sarb
call
cmpb
or
inc
mov
xchg
loop
pop
jmp
jmp
out
decl
jmp
jmp
test
add
add
cmp
inc
aad
dec
test
mov
cli
adcl
test
cmp
mov
jb
xchg
adc
ret
rorb
shll
enter
ljmp
leave
ret
jmp
mov
stos
int
aam
pop
jmp
pop
aad
sub
adc
data16
add
add
jmp
in
fs
popf
insb
mov
mov
dec
mov
lea
pop
into
test
jmp
or
push
jno
inc
adc
punpckhdq
scas
pusha
jmp
repnz
notb
popa
jmp
or
jae
jo
jmp
ds
inc
mov
jle
jl
testb
jns
jmp
push
push
xor
jg
sbb
add
ljmp
mov
outsb
cli
push
adcl
test
in
lods
fadds
inc
adc
scas
xor
int
ljmp
or
pop
push
mov
jmp
dec
fdivrl
ret
cmpsb
push
mov
add
cld
jnp
mov
mov
mov
andb
sub
jmp
push
aam
sub
shll
push
and
jmp
mov
cmpsb
mov
test
jmp
aas
mov
jns
insl
hlt
pop
sti
ja
add
daa
flds
loopne
scas
add
xchg
popf
pushl
jmp
ret
mov
mov
jecxz
mov
fldcw
cmp
jmp
inc
jae
addl
jmp
mov
ror
inc
aad
dec
test
add
pop
aam
sub
jmp
mov
jmp
outsl
loopne
adc
xor
mov
jns
dec
fcomps
scas
pop
cld
push
mov
mov
inc
push
mov
movzbl
add
cmp
je
jmp
popf
push
pushf
sti
push
mov
xchg
and
inc
lret
popl
jmp
int3
popf
mov
shll
rcr
jle
add
sub
in
jmp
aaa
stos
aam
add
inc
add
add
xchg
or
sub
in
inc
push
xchg
add
and
mov
jmp
ret
lea
jmp
jo
and
jmp
imul
mov
mov
xchg
adc
dec
aam
sub
mov
push
push
push
mov
mov
mov
mov
shr
mov
jmp
sbb
sbb
dec
adc
sub
fnsave
push
jmp
sub
mov
jmp
sbb
jecxz
adc
add
inc
xlat
mov
enter
shll
jmp
add
xchg
cmp
jmp
push
inc
jmp
shr
jmp
add
adc
mov
fs
push
in
push
pushf
popa
xchg
movb
inc
jmp
pop
fisttpll
out
add
cld
xchg
cmc
add
push
sbb
lea
call
pop
jmp
orb
stc
or
fsts
cmpsl
push
mov
mov
jg
outsb
jne
mov
jmp
mov
jg
add
adc
shr
add
add
push
mov
or
adc
push
shrb
or
ret
mov
inc
and
jns
popa
icebp
nop
arpl
out
jl
jne
sub
push
jmp
pop
xchg
add
ljmp
jb
in
lret
xchg
gs
sbb
or
icebp
add
jmp
frstor
cmp
add
loope
cmc
jmp
lock
popf
insb
fistpl
pop
cmp
jno
xor
jb
xchg
pop
push
andl
jmp
scas
in
jmp
clc
pusha
notb
shlb
mov
mov
loopw
mov
imul
jmp
mov
jno
pusha
pop
repnz
inc
daa
sarb
call
sub
sub
cmp
jb
test
je
mov
jmp
lods
imul
out
outsb
cld
fwait
jbe
rcrl
scas
pop
movsl
sbb
scas
sub
call
pop
jmp
jmp
rcrb
scas
pop
mov
jle
mov
ret
ds
enter
pusha
leave
jmp
push
jmp
call
test
js
mov
test
cwtl
decl
lods
inc
int3
inc
and
jmp
jmp
pop
jmp
loope
jecxz
jne
adc
mov
mov
and
dec
pop
pop
xchg
mov
decl
test
jle
mov
xchg
xor
stc
rolb
dec
cld
sub
pop
je
mov
add
push
lea
jmp
mov
jmp
mov
mov
xchg
mov
pushf
setg
or
dec
lea
sub
add
xchg
popf
pushl
jmp
pop
rcll
and
xor
cmc
mov
pop
bound
jmp
inc
fmuls
fdivs
push
int
and
cmp
pop
xchg
lods
xor
popa
pusha
jmp
pop
mov
rclb
mov
je
out
push
pop
jecxz
push
in
inc
inc
jmp
cwtl
mov
mov
andb
sub
jmp
inc
push
and
cltd
roll
add
jg
add
mov
les
inc
les
int3
cmp
inc
adc
jo
jmp
out
icebp
nop
arpl
mov
enter
sub
mov
xchg
jb
lea
call
addl
add
jmp
idivb
je
jbe
or
iret
or
cmp
jmp
gs
shlb
out
mov
aaa
scas
in
mov
add
fdivrl
jns
jmp
lock
icebp
nop
arpl
dec
jecxz
push
in
xor
add
cmp
incl
jmp
jmp
pop
lret
lret
aam
xorb
popl
jmp
cld
imul
pop
iret
stos
pop
shlb
xchg
jp
jbe
loopne
and
call
sub
and
test
mov
jmp
sbb
adc
arpl
xchg
mov
xchg
add
sahf
jbe
inc
jbe
xor
fs
jmp
dec
rolb
rclb
pop
jp
adc
push
cmp
add
fwait
or
jae
std
mov
jmp
pop
xchg
add
jnp
mov
movb
inc
mov
ret
mov
push
push
lea
push
pop
mov
lea
call
jmp
fldenv
xchg
gs
test
push
jmp
mov
rcrl
loop
add
mov
jle
outsl
push
fimuls
jmp
mov
ret
ds
inc
mov
aad
enter
mov
push
jmp
mov
lods
mov
xchg
push
push
mov
xlat
pop
enter
cmp
mov
subl
je
jne
addl
mov
movzbl
jmp
js
jg
jmp
adc
push
cli
jns
or
or
jmp
adc
adc
sub
xchg
mov
jmp
out
jp
jp
pop
xchg
add
push
aas
movsb
cmp
dec
sub
sub
push
mov
dec
adc
decl
sbb
les
scas
pop
fnstsw
mov
jmp
hlt
testl
or
jmp
add
sbb
in
inc
ret
ret
call
mov
push
mov
call
lea
push
push
jmp
aas
add
push
mov
call
add
leave
ret
jmp
scas
sub
adc
jne
pusha
pop
repnz
loop
out
pushl
sbb
cmp
mov
xchg
cmp
jmp
popf
jmp
sub
push
mov
es
clc
jb
xchg
popl
std
or
ret
enter
ljmp
pop
jmp
sub
jmp
jo
outsb
or
sbb
dec
ret
cmpsl
jp
push
cld
pop
xchg
pushf
jmp
cmp
mov
xor
and
inc
and
jmp
dec
rcll
push
push
xor
js
std
mov
add
add
jmp
pop
leave
pop
cmp
pusha
adc
adcb
loop
mov
out
adc
pop
inc
movl
jmp
aad
mov
jmp
pop
adcb
subb
adc
or
mov
add
not
or
xor
add
jmp
xchg
or
dec
fistpll
inc
and
xor
cld
cli
lods
add
call
add
add
imul
insb
or
orl
pop
fistpll
or
fdivs
movl
or
rolb
iret
jmp
data16
sbb
sbb
push
lds
shll
sub
add
xor
icebp
out
adc
cmp
xchg
testb
or
cmp
jne
addl
jmp
aad
mov
incl
mov
jmp
or
mov
or
push
jmp
jnp
add
adc
mov
enter
and
jmp
inc
add
jmp
jg
pop
mov
test
add
jmp
dec
rclb
addr16
iret
pop
cmp
add
inc
fidivrl
sar
inc
adc
ljmp
fdivl
in
xlat
mov
pop
pushf
pusha
popl
lea
jmp
mov
jmp
out
jl
jne
sub
in
mov
xchg
sub
cmc
jo
adc
addb
add
dec
fistpll
lcall
adc
inc
pusha
sahf
arpl
fucompp
push
idiv
incl
jmp
imulb
je
fs
pop
xchg
adc
test
jmp
xor
popf
add
std
or
popa
std
insl
hlt
pop
adcb
movl
jmp
aam
leave
cmp
insl
andl
jmp
push
xchg
pop
bound
pop
lods
bound
jecxz
js
or
loope
dec
add
iret
out
leave
xor
jmp
orb
data16
lcall
lcall
in
jle
arpl
jnp
in
adc
mov
popa
mov
jmp
cs
jmp
dec
daa
and
sub
cmpsl
jmp
ds
cwtl
sbb
aad
shrl
arpl
cmc
sbb
mov
cmpsl
aaa
push
mov
pop
inc
inc
cmpsl
jmp
or
movsl
xchg
jmp
xor
and
and
jo
xorl
or
andb
sub
jo
mov
jmp
add
cs
jo
popa
jmp
push
cmp
mov
inc
mov
xor
and
jmp
idivb
mov
in
jge
je
xor
out
in
jg
in
adc
mov
mov
andb
sub
jo
mov
jmp
fistpll
ret
jne
addl
mov
movzbl
jmp
jo
ja
loope
or
dec
or
clc
stc
pop
sbb
inc
fwait
or
in
mov
dec
call
adcl
lcall
pop
sbb
fnstenv
add
inc
lahf
add
xchg
or
in
cld
pop
xor
sar
inc
adc
je
popa
mov
jmp
cmp
es
fimull
ficompl
xor
inc
jmp
xchg
call
add
jmp
sbb
xor
or
jnp
fstpl
add
add
add
add
jmp
mov
mov
or
push
lea
jmp
hlt
jno
xorb
lock
bound
sub
jmp
inc
leave
pop
cmp
cmp
insb
loop
je
es
cmp
mov
aad
repnz
fs
mov
xor
add
lea
rol
add
mov
xor
jmp
push
dec
sbb
inc
pop
enter
mov
cmpsb
add
jmp
xchg
cltd
clc
or
jmp
pop
dec
jmp
sub
sbb
jno
ja
loope
ret
push
jo
mov
jmp
testb
in
je
sub
adc
push
pushf
sti
push
mov
jecxz
ret
andl
pop
pop
push
lea
lea
pop
movzbl
add
jmp
jge
jle
call
lcall
test
jne
jmp
inc
fimuls
and
xor
push
cmpsl
dec
adc
in
jmp
pop
jmp
ret
jmp
pop
push
xor
ljmp
stc
subb
out
dec
int3
cmpsb
xchg
mov
jmp
clc
jp
jp
and
out
leave
jmp
jmp
pop
fisttps
push
xlat
inc
and
aaa
popf
sbb
aad
rcll
sub
jle
xor
jmp
lahf
sbb
push
mov
loop
je
jo
push
push
movl
lea
jmp
movb
inc
jmp
jg
push
cld
push
out
gs
pushf
outsl
mov
pop
sub
add
xchg
jmp
sub
xor
jmp
sub
gs
xchg
inc
cld
xor
rcrl
fs
mov
inc
mov
rcrl
fs
or
or
cmpsb
adc
xchg
push
and
jmp
in
in
jle
ja
pusha
mov
mov
mov
andb
sub
jmp
repz
mov
jmp
data16
dec
pushf
adc
or
mov
inc
mov
push
popa
jmp
jo
jmp
in
jg
mov
mull
xchg
lds
jo
loop
rorb
mov
mov
jmp
dec
aam
sub
mov
ret
push
imul
jmp
sub
and
add
add
jmp
test
fsubrs
mov
inc
mov
mov
and
and
jmp
mov
cmpsb
test
pop
mov
ja
mov
into
test
xchg
repz
lock
xorb
loope
adc
or
decl
and
jmp
jmp
inc
popl
jmp
jg
aad
shlb
pop
repnz
xor
jmp
mov
lahf
cli
or
call
sub
jmp
arpl
jg
jmp
lret
inc
movsb
add
fsubr
push
jecxz
or
mov
sti
imul
or
mov
popf
or
in
sbb
das
popa
and
pop
je
popa
mov
jmp
xor
in
jmp
sub
aaa
push
mov
cmp
jg
daa
mov
dec
push
jmp
mov
jmp
xchg
or
mov
sub
push
lds
cld
xchg
cmc
add
loopne
movzbl
add
jmp
insl
cli
push
mov
jmp
aam
jmp
test
adc
cmp
add
add
pop
cmp
pusha
ljmp
lahf
push
rorb
mov
insb
mov
jmp
in
in
je
addr16
nop
stos
mov
jmp
imul
jb
js
ljmp
mov
jp
sub
dec
dec
mov
jne
mov
cmp
jae
jmp
mov
cltd
clc
or
pop
fimull
fidivl
push
add
jmp
mov
jmp
xchg
adc
je
lea
repnz
pop
repnz
lods
cmp
cltd
fcmovb
ret
xlat
mov
mov
and
mov
not
and
or
jmp
cmp
pop
xchg
add
jp
xor
lea
jmp
insl
in
sbb
push
and
scas
adc
cwtl
add
add
mov
mov
rcrb
stos
shlw
and
lds
mov
not
and
mov
and
or
add
mov
lea
jmp
add
jmp
outsl
loope
adc
and
dec
sub
inc
and
lcall
test
pop
jmp
ljmp
test
push
sub
sub
es
dec
and
and
ja
xorb
adc
xchg
add
cmp
test
mov
jmp
not
jmp
mov
jmp
lock
mov
jmp
fucom
mov
dec
fs
inc
rcll
sti
jg
jnp
in
sub
scas
aas
pop
test
or
mov
add
mov
mov
lea
jmp
fimull
in
and
jmp
loop
call
cwtl
mov
add
jmp
pop
push
mov
jmp
test
aad
int3
cmp
ljmp
mov
pop
and
jmp
movsb
lahf
lea
jmp
or
pop
orb
sub
outsl
in
jge
negl
dec
lods
xchg
adc
or
testl
jmp
or
or
sbb
mov
outsb
popf
outsb
lds
mov
test
andl
add
jmp
lahf
sbb
or
pop
repnz
sbbb
add
popa
fmuls
rorl
or
add
mov
lea
jmp
xchg
ror
add
jmp
xchg
sahf
stc
or
into
or
inc
out
jg
jmp
jmp
adc
push
xchg
add
ss
inc
fidivrl
mov
es
sub
jge
mov
not
and
and
or
add
mov
lea
jmp
add
jmp
mov
jmp
push
push
lea
adc
and
mov
not
and
mov
and
or
mov
add
lea
jmp
iret
pop
into
test
shll
pop
mov
cwtl
subb
and
pop
enter
jmp
add
jmp
push
xchg
add
add
in
jne
mov
and
sar
rol
jmp
pop
add
fadds
mov
cmpsl
mov
and
xchg
push
lahf
punpckhdq
in
sbb
add
not
and
mov
and
or
add
jmp
fwait
sbb
je
lea
fmuls
fdivrs
and
add
xchg
add
pop
loop
sti
jmp
fistps
stos
pop
cltd
jmp
push
in
cmp
dec
fistpll
sub
push
adc
mov
lea
mov
ror
add
mov
jmp
aaa
ret
push
lds
sub
pop
stos
or
add
jmp
mov
scas
lret
lds
push
cmpsl
xor
test
push
jne
jmp
dec
push
xor
sbb
mull
arpl
cmc
push
adc
and
shr
jne
decl
inc
mov
pop
in
jge
je
xor
scas
aas
pop
test
adc
push
mov
xorl
repnz
not
and
mov
and
or
add
jmp
jb
jp
in
pop
frstor
jmp
mov
sahf
xor
sbb
mov
jb
jle
call
or
repnz
mov
jmp
inc
jecxz
push
in
sbbb
jmp
jnp
in
add
push
not
jmp
or
mov
jmp
sub
ljmp
xchg
add
pop
out
aaa
inc
lea
call
lea
push
lea
call
jmp
mov
cltd
clc
or
push
push
lcall
vhaddpd
and
jmp
inc
cld
mov
pop
not
jmp
mov
stos
int
aam
aas
scas
lret
inc
rcll
aas
sbb
mov
jmp
out
push
mov
cld
jmp
fistps
test
lods
jae
fs
push
data16
bound
inc
and
cmp
mov
jmp
mov
jmp
insb
in
sbb
or
push
mov
xchg
fs
xchg
and
or
mov
add
lea
mov
jmp
cmp
lods
and
adc
mov
inc
mov
setl
push
movsb
or
or
add
mov
lea
ror
jmp
mov
jmp
aad
fstpt
out
jo
inc
aad
sub
insb
mov
sbb
lea
jmp
fisttpl
push
std
sbb
push
jns
aas
add
mov
mov
mov
not
and
and
or
mov
add
jmp
aam
fdivrl
push
jge
je
outsl
es
shlb
add
jmp
mov
push
add
fsubrp
inc
inc
or
jmp
dec
roll
rcll
mov
jle
or
pop
iret
stos
pop
scas
insb
mov
xor
jge
rol
jmp
stos
sub
sbb
jnp
jge
jmp
xor
cmp
outsb
in
jge
notl
cmpsb
and
setg
or
out
push
lahf
push
jbe
in
sub
push
push
lea
call
pushl
xor
jmp
or
jnp
mov
fisubs
add
jmp
fstp
pop
lods
add
jmp
lds
mov
aam
dec
stos
lret
mov
mov
int3
inc
and
push
push
hlt
mov
and
mov
and
or
mov
mov
jmp
scas
pop
enter
mov
lea
mov
mov
ror
jmp
mov
jmp
add
pop
idivl
mov
mov
xchg
repz
test
sti
dec
lret
jne
sti
jmp
adc
daa
notl
jmp
and
jmp
push
xchg
add
sahf
das
fisttps
mov
mov
xor
add
mov
lea
rol
add
mov
jmp
test
insl
or
jmp
push
shll
testb
rcll
hlt
mov
je
addb
fsubr
sub
push
shlb
mov
cmc
pushf
outsl
test
repnz
aaa
decb
flds
mov
out
and
add
add
jb
in
dec
int3
inc
and
push
jno
push
rolb
push
fmuls
aam
rol
add
mov
xor
jmp
ret
and
jmp
add
jmp
xlat
push
lds
inc
mov
mov
sahf
stc
or
mov
sahf
add
jmp
inc
jge
add
fsubr
xlat
or
sahf
sbb
in
jge
negl
mov
js
inc
in
fisttps
push
testb
ret
out
rorl
shr
dec
lds
iret
das
mov
nop
testl
pop
stos
pop
adc
fwait
mov
jmp
in
and
rorb
jns
add
in
mov
es
jb
xchg
cmc
add
pop
nop
push
popa
nop
inc
push
fdivl
in
aam
mov
and
mov
mov
and
ror
add
and
or
jmp
sbb
push
mov
add
add
outsb
or
dec
add
into
pop
int3
stos
data16
out
jge
je
sub
adc
mull
repz
add
mov
lea
rol
jmp
add
popa
icebp
nop
arpl
inc
fisttpl
aaa
push
mov
cld
and
mov
jmp
or
hlt
insl
std
test
es
xchg
or
inc
not
jmp
cld
lock
in
jg
mov
stc
jns
mov
jg
xchg
cmc
add
and
fadds
inc
mov
test
push
adc
add
rorb
ret
xchg
push
aaa
shlb
mov
repnz
mov
jmp
sub
adc
jns
imul
insl
xchg
pusha
in
sbb
cmp
stc
and
jmp
add
add
jmp
ja
popa
add
add
cli
push
in
jge
testl
mov
not
and
jmp
aam
int
xchg
add
adc
stos
lea
out
fsubr
jmp
pop
cld
jmp
dec
lds
iret
cmp
imul
sbb
push
jno
inc
add
pop
cld
lea
mov
not
and
ror
jmp
and
lea
add
inc
roll
shll
xchg
sbb
mov
enter
mov
not
and
ror
add
and
jmp
mov
mov
mov
sbb
cmp
rol
rorb
cmp
gs
push
xor
sbb
scas
outsl
sti
imul
cmp
and
mov
not
and
or
add
jmp
data16
aaa
ret
jmp
gs
adc
ret
add
add
mov
jmp
movsl
lods
lret
inc
movsb
pop
les
int3
sub
and
push
lds
or
add
mov
lea
rol
add
and
jmp
sbb
mov
sub
imul
es
cs
lock
xorl
jp
les
fcmovnb
inc
shlb
gs
not
jmp
sub
mov
cmpsl
ret
cmc
jo
xorl
mov
aas
mov
scas
not
and
and
or
add
mov
lea
jmp
and
jmp
int
lods
and
imul
xor
loopne
popf
or
lret
pop
ds
xor
push
out
not
jmp
leave
inc
aam
dec
lcall
rorb
repz
mov
mov
lcall
mov
mov
and
cld
jmp
mov
andb
pop
enter
jns
add
std
or
sbb
and
mov
and
or
add
mov
lea
jmp
sbb
adc
shr
inc
int3
pop
into
test
stc
cwtl
imul
dec
fstpt
stos
into
cmp
sbb
inc
aam
fisttps
jecxz
rol
add
and
mov
jmp
mov
mov
notl
hlt
imul
and
or
add
mov
lea
jmp
movsl
cmp
add
dec
frstor
aam
rorb
sub
add
add
stc
dec
roll
aad
out
hlt
xchg
outsb
mov
aad
arpl
fsubr
test
cwtl
sbb
insl
out
jg
jmp
cmp
and
inc
aam
dec
mov
inc
cld
jmp
sbb
adc
rcrl
scas
pop
test
push
testl
and
rol
add
mov
and
or
add
jmp
lret
lock
not
jmp
fsts
mov
push
xor
add
pop
cmp
outsb
js
inc
push
jo
and
jmp
xchg
add
daa
mov
and
sbb
mov
push
add
not
and
mov
and
or
add
jmp
and
rol
rol
add
mov
jmp
xlat
inc
aam
dec
out
pop
iret
stos
pop
lds
cmpsl
push
sti
cmp
cmpsb
js
jmp
xor
jmp
xchg
and
add
xor
gs
pushf
outsl
scas
pop
jns,pn
add
add
mov
xor
xor
add
lea
jmp
xchg
or
in
testb
sub
aaa
fisubrl
rorb
popf
insl
mov
rol
add
jmp
dec
mov
jmp
dec
aam
sub
add
cmpsl
aaa
push
mov
mov
jmp
mov
sarl
mov
jmp
cld
jl
jne
insb
loope
notb
aam
dec
mov
data16
xchg
outsb
mov
fdivs
fiaddl
pop
rorb
std
ror
add
jmp
jno
lea
mov
jmp
push
fisttpl
js
xchg
testb
fs
lock
xchg
mov
jmp
dec
rcll
and
loop
stc
cwtl
imul
out
mov
xor
ror
add
xor
add
lea
jmp
mov
lods
lret
inc
xchg
cmp
imul
es
add
xor
mov
jmp
test
dec
jecxz
push
in
call
leave
in
jmp
jge
inc
xor
jmp
xchg
add
or
adc
in
sbb
mov
fwait
jle
adc
mov
cmp
mov
subl
adc
stc
imul
fimull
ret
les
cmp
mov
mov
or
lea
jmp
sub
jmp
add
jmp
movsb
es
cs
and
jbe
fs
push
jnp
push
rol
add
xor
add
lea
rol
jmp
mov
cwtl
decl
hlt
inc
mov
jmp
fsubr
xor
jmp
fstpl
scas
pop
lea
and
and
subl
lret
scas
and
add
shlb
repnz
lea
rol
jmp
mov
jmp
imul
adc
add
push
mov
sbb
jg
adc
mov
add
jmp
and
mov
xchg
push
nop
sbb
out
aam
outsb
add
add
jg
mov
ret
push
mov
ljmp
lcall
ljmp
mov
push
xor
or
lcall
fisttps
or
xor
add
lea
jmp
cmp
add
mov
js
fisttpll
mov
lock
rol
jmp
fiaddl
mov
andl
pop
into
test
pop
aas
lret
aam
shr
sub
jne
jmp
jbe
jle
call
sub
pop
mov
jmp
pop
jp
adc
mov
lock
bound
bnd
in
lea
jmp
xchg
adc
in
sbb
fstps
test
out
mov
lds
les
or
xor
jmp
inc
ret
ret
fldt
push
lds
int
iret
add
clc
jmp
jecxz
cltd
push
fs
jno
cmpsl
aaa
push
mov
jae
add
xor
mov
xor
add
mov
lea
jmp
mov
cwtl
fistl
pop
mov
push
pop
add
jmp
jmp
cmc
pushf
outsl
scas
fistl
mov
add
and
mov
pop
rol
jmp
mov
jmp
pusha
pop
repnz
jg
jl
negb
push
shlb
insl
rol
add
mov
xor
xor
add
lea
jmp
inc
rolb
sarb
or
jmp
insb
add
jmp
inc
rolb
shlb
mov
add
dec
rolb
shlb
adc
not
jmp
ret
cltd
add
fucomip
rcrl
pop
ds
and
push
lret
lret
popf
or
xor
xor
add
lea
ror
add
mov
jmp
lea
rol
add
mov
not
or
xor
jmp
mov
cltd
clc
or
jl
out
hlt
lea
jmp
and
pop
fstpt
movsl
xor
jns
pop
jmp
addl
inc
rclb
xor
fdivs
inc
enter
cmp
ret
rol
jmp
ficomps
scas
pop
mov
jmp
lcall
js
mov
mov
test
cmp
adc
xor
fbld
rorl
fadds
inc
mov
mov
mov
jmp
icebp
adcl
test
cmc
gs
pop
gs
gs
dec
cli
rol
jmp
int3
bound
or
jmp
sti
push
cmp
lock
sbbl
add
mov
not
or
xor
add
lea
jmp
push
lds
iret
jl
xchg
add
sub
add
mov
not
or
xor
add
jmp
rol
add
jmp
out
loopne
jb
push
into
pop
cmp
adc
and
inc
fmuls
fdivs
aaa
mov
jmp
in
jnp
mov
inc
fdivl
in
cmp
push
or
lsl
mov
not
or
xor
add
lea
jmp
mov
jge
out
jmp
fstpl
xchg
lods
mov
leave
xor
addr16
adc
or
push
cwtl
or
xor
add
jmp
hlt
jb
xchg
daa
mov
iret
xor
rol
jmp
movsb
pop
mov
jmp
adc
push
mov
xchg
jle
adc
push
sahf
out
not
jmp
stos
and
add
shl
shr
add
sbb
cmp
mov
jecxz
dec
fnstcw
orb
fdiv
rorl
repz
add
lea
jmp
adc
xchg
xor
jmp
insl
push
test
mov
mov
push
cmp
pshufw
testb
push
loop
add
repnz
not
or
jmp
pop
xchg
or
xor
pop
call
cmp
ret
xchg
mov
jmp
xor
loope
in
jg
lahf
or
ret
push
lds
cmc
inc
mov
not
or
xor
add
lea
rol
jmp
aas
stos
cmp
or
lret
inc
lea
ror
add
mov
jmp
sbb
fsubr
dec
jp
ja
loope
mov
rolb
iret
in
jmp
push
not
jmp
std
lock
in
notl
push
fwait
or
jae
jno
xorb
arpl
rol
add
not
or
xor
add
jmp
xor
add
jmp
je
imul
push
ss
inc
mov
jns
insb
or
rcrl
mov
loope
lea
jmp
in
notb
pop
ds
xchg
sbb
imul
or
xor
add
lea
rol
add
jmp
pusha
call
xor
rorl
push
repnz
shlb
rolb
ret
mov
not
or
xor
add
lea
jmp
jecxz
std
test
pop
pop
jge
lock
not
jmp
sti
jbe
cmpl
rolb
shlb
mov
roll
aad
add
or
xchg
in
enter
out
sbbb
bnd
cwtl
setg
or
outsl
fsubl
xchg
push
xor
adc
sti
xor
add
lea
ror
add
mov
jmp
lods
aas
scas
lret
push
cmpsb
mov
jmp
jg
not
jmp
movsb
hlt
ss
xor
add
jmp
cmp
aas
pop
test
es
lods
xor
in
adc
outsb
jecxz
add
lea
jmp
in
jnp
mov
cld
lock
in
add
out
dec
add
jmp
xor
por
mov
fsubrs
sarl
lcall
shr
mov
pop
in
clc
jmp
inc
add
jmp
je
imul
push
mov
and
in
cmp
mov
lea
pop
les
inc
cld
lea
rol
jmp
jno
imul
push
cli
jmp
cmp
jmp
std
js
mov
loopne
clc
lahf
push
pop
rolb
shlb
lods
and
pusha
pop
leave
ret
jmp
lret
inc
shlb
cltd
push
jmp
pusha
jmp
fs
imul
sbb
das
xchg
sbb
aad
addl
or
sub
and
jmp
mov
jmp
sbb
aad
lea
jmp
outsl
jo
jmp
aad
fstpt
test
pop
mov
fldt
xor
rcrl
call
add
xchg
popf
pushl
jmp
push
sbb
inc
adc
mov
andb
inc
aad
sub
jp
fisttpll
out
stc
mov
dec
adc
lock
jmp
mov
fsubrs
sub
push
mov
ret
pop
push
xor
dec
mov
add
add
inc
cmpsl
cmp
test
dec
frstor
test
pop
pushf
jmp
movzbl
jmp
pop
popa
jmp
scas
sub
jae
imul
add
push
and
and
cmp
jne
addl
mov
jmp
mov
jmp
mov
cltd
clc
or
sbb
outsb
push
fmuls
fdivrs
jo
outsb
or
sbb
mov
rcrb
and
and
jmp
jne
xchg
cmc
add
pop
aad
sub
jp
mov
add
jbe
cmp
jmp
add
add
jmp
push
fmuls
fcomps
or
faddp
clc
in
mov
mov
add
mov
mov
pop
add
pop
mov
jmp
mov
pushf
dec
fisttpll
out
jne
shr
pop
jmp
sbb
push
les
into
test
outsl
or
scas
scas
cmp
push
mov
mov
dec
mov
inc
incl
cmp
jmp
rorl
mov
decb
xor
mov
jmp
or
jmp
and
sub
cld
gs
pushf
outsl
dec
inc
and
xor
test
jmp
mov
sarb
cmpsb
xor
scas
sub
sub
testb
mov
shr
add
mov
jmp
es
pop
jne
xor
jmp
xorb
movzbl
jmp
xchg
in
shl
jmp
movzbl
jmp
jnp
outsb
or
adc
dec
fidivrs
inc
and
cmp
xor
jae
incl
jmp
mov
aad
in
mov
inc
add
cmp
jb
jmp
mov
inc
shr
addl
adc
push
popa
nop
gs
pop
jp
jg
movsb
cmp
pop
out
lea
jmp
mov
lods
lret
inc
movsb
lcall
into
pop
cmp
and
inc
sbb
mov
mov
jmp
std
jno
xorb
cmpsb
xor
scas
jp
inc
mov
xorb
or
loop
or
movzbl
shl
jmp
leave
popf
and
xor
jmp
stc
je
lea
xchg
jae
jne
jmp
add
add
sahf
sub
subb
psubd
fisttps
cmp
in
mov
sub
push
mov
mov
shr
lea
and
jmp
aas
scas
aas
pop
test
jns
lcall
adcl
leave
pop
cmp
outsb
adc
push
jmp
or
popl
jmp
fildl
mov
mov
bound
sbb
pusha
ret
test
mov
stos
ret
jmp
out
ja
xorb
loopne
adc
addr16
jbe
cmpl
add
or
add
add
jmp
movsl
es
cs
ja
addr16
jmp
mov
jmp
add
popa
sbb
jmp
add
sbb
and
stos
sub
lds
rcll
pop
mov
aad
stos
add
xchg
popf
pushl
jmp
sub
jge
mov
jmp
inc
xchg
enter
jmp
jle
imul
pusha
pop
repnz
cli
pop
or
icebp
mov
jmp
popa
jmp
jbe
cmpl
and
jmp
ficompl
scas
pop
lods
jg
call
pushl
outsl
or
lds
ss
rol
sar
inc
adc
lds
mov
jg
bound
ret
cmpsb
push
loop
lea
jmp
dec
add
mov
addl
jmp
pop
mov
xchg
aas
or
or
sub
outsb
or
push
xor
ljmp
decl
add
jne
jmp
sbb
andl
jmp
sub
and
jmp
std
outsl
lcall
loope
jae
push
dec
stos
mov
popl
lea
jmp
adc
add
add
mov
cs
sbbl
call
and
jmp
dec
rolb
sarb
lods
xor
in
sbb
jecxz
add
jmp
or
mov
mov
movl
movl
jmp
jns
outsl
or
out
jle
js
insb
or
clc
mov
ret
jmp
push
and
inc
shll
sub
push
repz
sub
inc
or
stos
int
jmp
cmp
jmp
pushf
jmp
sti
pop
pop
jmp
push
add
in
imul
add
jmp
je
popa
mov
jmp
ja
outsb
or
sub
inc
fidivrl
out
mov
les
cld
inc
or
or
popf
pushl
jmp
pop
roll
aad
data16
imul
push
jne
jnp
in
pop
shr
sbb
lcall
lahf
punpckhdq
inc
mov
xchg
push
xchg
repz
cmpsl
mull
icebp
dec
repnz
mov
jmp
mov
jmp
aaa
mov
jl
jg
popa
jmp
jo
jmp
push
into
pop
cmp
adc
pop
mov
cmp
cmpl
inc
dec
mov
cmp
jmp
add
or
adc
andb
sub
jmp
ret
pop
repnz
fs
jg
mov
inc
rclb
sub
test
inc
adc
mov
cmpsb
shll
jne
push
cld
sbb
mov
add
jmp
les
mov
mov
cmp
mov
add
jns
fbstp
movb
enter
test
xchg
roll
add
jmp
popa
jmp
ret
dec
fidivrs
mov
sbb
orb
clc
or
adc
add
cmp
or
push
mov
cmp
mulb
pop
dec
lcall
test
jmp
inc
inc
and
push
dec
in
les
int3
jge
mov
aaa
sub
add
add
jl
add
fmull
mov
pushf
sti
push
mov
cs
cld
mov
not
and
and
or
add
mov
jmp
push
insb
or
mov
and
ljmp
sahf
insl
test
pop
or
ja
add
dec
inc
push
jmp
pop
jmp
aad
ret
cmpsb
push
mov
popa
xchg
lahf
push
pop
jp
adc
popl
jmp
rcll
mov
xchg
testb
in
add
roll
aad
insl
jae
aad
cmp
call
inc
and
das
mov
stc
or
scas
jo
jnp
loopne
mov
mov
push
pop
cmp
jl
push
jmp
jne
add
sbb
out
cmc
jle
mov
decl
out
push
pop
mov
push
fisttps
fsts
add
js
pop
xor
lea
push
movzbl
movzbl
shl
or
movzbl
jmp
loope
std
test
shlb
xchg
gs
test
jge
dec
test
lahf
cli
or
jmp
cmpsb
xor
int
mov
in
jmp
jge
or
cmp
and
inc
cmc
mov
aas
test
jg
shrl
dec
add
inc
out
jmp
cmp
push
test
jge
dec
or
movzbl
jmp
lods
mov
pop
in
in
mov
cmc
add
outsl
mulb
push
dec
xlat
inc
and
pop
in
push
mov
sub
push
mov
mov
mov
mov
shr
jmp
cwtl
add
xchg
pop
xchg
adc
add
popf
shl
jmp
or
xor
sub
pop
shrb
jmp
outsl
out
jg
jmp
sbb
cmp
mov
dec
mov
adc
add
cmp
je
popa
mov
jmp
mov
rcrl
xchg
pop
bound
test
mov
into
add
add
sub
leave
jmp
ljmp
je
lea
adcb
andb
and
dec
jl
jmp
daa
test
aaa
add
je
jmp
negb
xchg
out
jmp
xchg
mov
mov
and
test
pushf
adc
add
add
roll
pushf
jmp
leave
pop
iret
stos
pop
sahf
or
cmp
fimuls
ljmp
cmp
jl
jne
xor
punpckhdq
mov
mov
jmp
xor
sub
jmp
jle
jnp
in
or
mov
inc
mov
jno
jle
call
add
push
lea
lea
pop
pop
mov
mov
mov
mov
jmp
add
jecxz
inc
xchg
mov
rcrb
mov
inc
and
popf
pushl
mov
jmp
mov
mov
jmp
push
in
and
fistps
xchg
lea
jmp
jge
pusha
mov
jmp
xchg
adc
js
mov
daa
mov
jo
dec
in
jge
dec
adc
jne
add
mov
sahf
stc
or
jp
jp
pop
repnz
fs
lret
xchg
sub
add
cmp
jb
lea
lea
call
jmp
jge
fs
sbb
movsb
ret
ficoml
lahf
punpckhdq
stos
popa
and
jmp
ss
sub
cmpsb
sub
outsb
xchg
add
sar
inc
adc
pop
adc
jg
pusha
pop
repnz
fld
rolb
add
jmp
cmpsb
rolb
add
and
xchg
add
cmp
inc
aam
dec
pushl
je
out
inc
jp
clc
int
or
jmp
fmull
mov
mov
popa
jmp
insl
cli
push
int
and
bound
pop
rorb
mov
pop
jne
addl
mov
movzbl
add
jmp
adc
popl
jmp
fs
insl
hlt
pop
out
push
lret
mov
fimull
fidivl
inc
fisttps
fldenv
int3
popf
mov
cmpsl
ret
int3
dec
ret
mov
cmc
jmp
lea
jmp
out
jo
xorl
jle
cld
jge
je
insl
sub
int3
dec
cmp
jmp
cmpw
jmp
mov
movsb
ret
ds
ret
mov
movsb
loope
cmc
pushf
outsl
xchg
add
movsb
mov
fisttpll
lock
jo
mov
jmp
jo
mov
mov
call
addl
hlt
jle
mov
mov
jmp
in
std
test
or
sbb
push
jecxz
dec
iret
repnz
jmp
and
jp
rorl
or
pusha
notb
shll
and
adc
add
mov
decl
mov
sub
add
imull
sahf
insl
fisttpll
mov
in
bound
clc
cmp
xor
add
lea
mov
ror
add
jmp
jo
ja
loope
mov
fwait
sbb
sub
mov
inc
inc
inc
inc
test
jne
pop
ret
jmp
pop
fdivrs
pop
stos
stc
pushf
jmp
les
mov
mov
dec
fdivrl
push
cld
aas
stc
fwait
push
jmp
pop
jmp
pop
pushf
xor
inc
xchg
push
pushf
sti
push
cld
dec
frstor
imul
lcall
mov
sbb
pop
xchg
popf
push
mov
es
hlt
je
lea
aaa
xchg
jmp
inc
hlt
rcll
pushf
dec
pushl
jmp
call
xchg
mov
mov
mov
call
add
jmp
pcmpgtb
add
add
add
add
add
add
mov
jmp
mov
mov
add
out
adc
sbb
inc
cmpw
jne
jmp
pushf
mov
add
jmp
mov
scas
lret
insl
jmp
push
in
movlps
fcoms
lahf
mov
ret
inc
int
and
jb
xchg
add
inc
fstl
mov
pop
bound
fneni(8087
jb
xchg
push
pop
xchg
inc
jg
jecxz
jmp
mov
mov
and
pop
in
push
mov
es
xchg
add
mov
popa
sbb
sub
jo
jmp
out
aaa
add
cmp
jmp
rcll
pop
imull
lea
add
jmp
mov
inc
inc
and
jns
scas
cmp
mov
inc
fmuls
fdivrs
mov
jmp
sbb
popa
add
dec
fiaddl
dec
lret
push
jp
std
orb
jmp
test
jmp
pop
fistl
mov
stos
int
aam
notl
mov
fcoml
decl
test
jmp
mov
sarb
xchg
cmc
add
out
and
cmpl
sub
testl
cmp
mov
cmpsb
shll
movsb
mov
mov
mov
inc
jmp
xchg
sbb
daa
mov
and
push
fmuls
fdivrs
xor
dec
inc
jmp
or
idivl
mov
out
clc
lahf
push
daa
stos
cmp
or
popl
lea
jmp
xchg
or
arpl
xchg
gs
pop
cmp
xlat
cs
jmp
pop
iret
pop
cmp
jle
or
fimull
fidivl
gs
in
jmp
ljmp
cwtl
imul
iret
pop
cmp
jo
inc
cmpw
jmp
xor
jmp
dec
fisttpl
fstpl
popf
push
xchg
repz
in
outsb
mulb
adc
scas
aas
pop
test
jmp
std
popa
icebp
nop
arpl
ljmpw
stc
xorb
and
jnp
jp
jp
cltd
mov
decl
cmp
je
cmpw
jne
jmp
sbb
sbb
inc
mov
cmpsl
ret
cmp
xor
jb
je
jmp
fistpl
fs
movsb
cmp
pop
dec
push
mov
loop
call
jl
jb
xchg
ret
dec
fistpll
add
adc
and
adc
add
add
xchg
std
pushl
mov
fmuls
fdivrs
jbe
cmpl
mov
xor
inc
ficoml
in
mov
or
pop
dec
jecxz
push
in
adc
inc
and
jmp
pop
xchg
or
xor
fsubrs
jecxz
push
in
adc
fcompl
ret
lcall
pushl
mov
jmp
xor
adc
sbb
and
popf
hlt
or
inc
or
andb
jmp
leave
pop
repnz
fs
xchg
aad
out
xchg
mov
or
jo
sub
je
call
add
jb
arpl
cmc
je
sbb
add
std
or
out
iret
popa
call
jmp
hlt
jns
mov
dec
and
movsl
and
pusha
arpl
ret
jmp
movsl
das
mov
jo
jmp
mov
test
cmp
and
jmp
int3
popf
ja
bound
mov
add
push
mov
gs
and
xor
mov
jmp
call
jmp
int3
popf
or
scas
or
add
cmpsl
push
push
push
jmp
mov
jmp
pop
outsb
jle
jmp
dec
jns
inc
jmp
push
add
add
push
pop
add
int3
pop
repnz
fs
fisttps
je
popl
jmp
out
fwait
jmp
jmp
call
jmp
sub
or
cmp
je
popa
mov
jmp
int3
popf
dec
jmp
aaa
mov
mov
xor
jmp
out
mov
call
push
jno
aaa
jo
call
jmp
into
pop
leave
test
xchg
repz
jmp
pop
sub
add
xchg
popf
pushl
jmp
psubsw
call
jmp
push
iret
pop
cmp
adc
or
pop
mov
jmp
mov
add
jmp
rorl
mov
aas
mov
xchg
pop
bound
add
add
jmp
mov
mov
sbb
pushf
jmp
and
das
sub
sbb
add
xchg
or
in
xchg
sahf
inc
inc
pop
mov
ret
add
pop
fimuls
push
jb
cmp
jmp
xchg
xor
add
add
jmp
or
jno
in
jmp
int3
popf
sti
jb
xchg
and
test
add
mov
rorb
inc
and
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
addl
jmp
jle
mov
jmp
mov
add
push
and
add
imul
insl
sahf
clc
dec
xor
imul
jle
call
cmpl
popa
icebp
nop
arpl
jmp
mov
iret
fs
push
jmp
aaa
mov
ss
in
jge
testl
or
movzbl
movzbl
sub
je
jmp
fcoms
lods
pop
mov
aam
push
jbe
push
popl
lea
jmp
push
jmp
pop
jmp
mov
inc
roll
shll
push
xchg
repz
cmpsl
sbb
mov
jmp
dec
fimuls
push
sub
push
mov
jns
cmp
inc
and
jbe
mov
fstl
pop
cmp
push
inc
jmp
mov
cmpb
jmp
ret
lods
pop
cli
pop
xchg
add
push
std
data16
xchg
outsb
mov
mov
fdivrp
lcall
test
pop
lret
scas
pop
mov
pop
int
loopw
enter
dec
mov
add
cmp
je
popa
mov
jmp
incl
mov
xor
jmp
push
sti
lret
jmp
cli
jg
mov
push
rolb
sarb
inc
lret
pop
ds
jmp
mov
je
jmp
jnp
jmp
add
adc
push
dec
int
and
and
call
sahf
ret
jmp
std
jne
mov
fcoml
lods
pop
mov
xor
jmp
cli
es
call
dec
sub
add
pop
cmp
cmp
pop
ds
fs
popa
push
jnp
add
jmp
lds
mov
hlt
xchg
outsb
leave
sub
sub
jo
cmp
frstor
pusha
jmp
mov
dec
adc
push
xchg
add
sub
pop
stc
outsb
cld
fwait
jbe
pop
jmp
mov
inc
and
popf
pushl
mov
jmp
fsts
cmpsb
push
in
mov
dec
mov
fs
mov
jmp
lahf
or
loope
fldenv
dec
jl
jne
out
xorps
pop
and
aas
cmp
jno
jge
divl
imul
decl
rorl
pop
incl
mov
cmpsl
dec
roll
aad
ss
in
cmp
mov
ret
movb
dec
cmpsb
lret
mov
icebp
nop
arpl
sbb
sub
jo
mov
and
cmp
jmp
lahf
sbb
push
xor
cmp
inc
mov
xchg
repnz
ds
add
adc
add
mov
add
jmp
leave
inc
shlb
js
ljmp
stos
jns
repnz
jg
clc
xor
movsb
sub
mov
or
aad
je
jmp
stos
es
mov
mov
aad
test
jmp
add
jl
bound
fidivrs
pop
cmp
addr16
iret
add
rcrb
test
jge
or
ret
jmp
into
pop
iret
stos
pop
into
stc
jae
xchg
roll
dec
jmp
data16
push
leave
jmp
sub
jmp
fs
insb
or
lds
pop
cmp
sub
aam
pop
xor
xchg
mov
mov
inc
jmp
cmp
inc
adc
aas
std
and
jmp
leave
push
gs
dec
jmp
jle
jmp
cs
jmp
jle
jbe
loopne
adc
sbb
call
orl
jmp
mov
stos
int
aam
into
pop
cmp
xor
mov
adc
popl
jmp
ss
jmp
add
adc
push
fcompl
test
les
es
int3
popf
mov
xchg
repnz
mov
hlt
shr
xchg
movsl
jmp
pushf
jmp
xchg
pop
and
or
sbb
push
into
cmp
mull
icebp
pop
idivl
mov
dec
rcll
add
stos
push
mov
jmp
ss
pop
lret
scas
pop
in
and
repz
jmp
pop
int3
inc
and
xchg
lock
jne
pushl
jmp
push
daa
mov
inc
mov
test
xchg
adc
cld
outsl
add
jmp
shrl
and
mov
les
int3
paddw
xchg
outsb
mov
push
lahf
push
mov
cmpsb
sub
jmp
pusha
jmp
mov
jmp
int
lret
mov
push
test
push
cltd
add
mov
pop
cmp
shrl
fdivrl
mov
jmp
mov
jmp
in
sti
sahf
insl
orl
cmp
sub
cmp
cltd
push
mov
es
cwtl
mov
jmp
sbb
jmp
popa
jmp
mov
jmp
mov
mov
je
lea
loope
mov
je
inc
inc
jmp
push
fdivl
in
aam
int
xchg
jl
notb
inc
or
sar
inc
adc
clc
ja
xorb
xchg
pop
bound
xchg
gs
mov
call
cltd
roll
add
jne
addl
jmp
std
ja
xorb
push
pushf
sti
push
mov
cmp
movzbl
add
cmp
je
jmp
add
int
add
popl
jmp
sbb
jle
arpl
cmc
pop
and
sub
or
rolb
add
jmp
lea
jmp
xchg
push
xchg
repz
cmpsl
mov
fwait
addr16
pop
mov
mov
and
push
mov
push
push
mov
movl
mov
mov
inc
test
jmp
roll
dec
jmp
jmp
push
in
sub
mov
inc
mov
stos
xor
push
jmp
dec
jg
push
jmp
inc
jmp
jmp
xchg
outsb
xchg
pop
ds
inc
fimuls
popa
xchg
clc
pop
test
push
cld
jmp
push
jle
call
sub
pandn
xchg
addr16
lret
mov
dec
jge
popf
sbbl
jmp
shlb
jmp
mov
cmpl
dec
mov
jae
adc
xchg
lcall
js
mov
mov
int
xor
dec
addl
mov
movzbl
add
jmp
or
pop
orb
jmp
orl
stc
or
in
fs
popf
insb
mov
sub
jmp
xchg
pushf
sti
push
in
pop
int3
stos
ror
aad
dec
cltd
imul
and
jmp
ds
mov
mov
mov
andb
jmp
cmp
push
fimuls
inc
shrb
popa
jmp
inc
adc
jo
jmp
mov
movsb
and
jmp
call
int3
sbb
aad
lea
mov
dec
mov
fwait
cmp
call
add
xchg
popf
pushl
jmp
les
jp
xchg
adc
add
mov
cmp
dec
mov
sub
dec
cs
daa
jne
pop
mov
ret
push
je
jmp
popf
or
in
jge
divl
dec
rolb
shlb
insb
hlt
push
cld
push
inc
cli
mov
sarl
clc
insb
add
jge
rcl
push
ret
cmpsb
push
mov
or
add
sub
jmp
fs
dec
lret
lret
insl
inc
test
pop
mov
movzbl
jmp
add
mov
jmp
shl
popl
jmp
xchg
inc
cmpb
jmp
xchg
adc
in
sbb
push
or
loop
mov
gs
popa
xor
mov
test
incl
add
jmp
fwait
push
mov
es
mov
les
jbe
fs
jmp
cmp
jmp
pushf
pop
jmp
jl
gs
pop
imul
adc
test
mov
mov
or
cmc
call
pop
into
test
cmp
outsb
jge
lcall
incl
mov
dec
ret
loop
cmp
mov
jecxz
pushf
jmp
test
in
sbb
fisttpll
push
std
push
jl
shll
and
add
add
xchg
testb
adc
push
mov
inc
inc
test
jne
pop
ret
jmp
stc
popa
icebp
nop
arpl
bound
popf
pushl
mov
jmp
pusha
mov
mov
mov
jmp
in
jnp
mov
cs
dec
mov
pop
ljmp
negl
andb
jmp
mov
lea
jae
in
inc
lds
iret
and
imul
add
lahf
sub
jmp
clc
jle
mov
sub
xor
mov
es
pop
jo
add
jmp
sahf
sbb
es
cs
outsl
lcall
cmc
es
push
mov
mov
je
inc
cmpb
jne
jmp
push
xchg
add
sahf
jp
sbb
sar
inc
adc
loopne
lcall
les
push
lds
cld
jle
in
jo
mov
and
cmp
jne
addl
jmp
mov
icebp
add
pop
jp
xor
test
mov
jmp
add
add
adc
push
dec
int3
add
jmp
in
jl
jne
sub
sbb
xor
scas
mov
decl
mov
jmp
mov
inc
dec
xor
cmp
add
movsl
aaa
cmpsl
ret
or
jl
bound
dec
jmp
adc
mov
mov
cs
movsl
xor
dec
cmpsb
hlt
sub
popl
jmp
pop
push
xor
or
flds
int
shr
add
add
out
out
adc
pop
xor
dec
aad
sub
pop
cmp
fcmovnbe
mov
jmp
pop
fisttpll
out
xchg
push
test
push
imul
imul
sbb
fcmovnu
mov
jmp
movsl
and
stos
add
add
stos
xor
xchg
add
inc
xchg
pop
xchg
adc
pop
out
aaa
xchg
jmp
jae
imull
decl
jmp
cmp
pop
xchg
adc
pop
fisttpl
fnstsw
cmp
faddp
add
jmp
sbb
push
shll
nop
arpl
mov
out
push
lcall
pop
jmp
sub
shr
inc
dec
das
dec
jmp
insl
loopne
adc
inc
mov
shll
add
je
popa
mov
jmp
cmp
sbb
cmpsb
hlt
ret
jmp
in
lret
lea
and
jb
pop
jmp
mov
jmp
push
lods
mov
mov
and
mov
popa
nop
push
cltd
decl
test
jne
mov
jmp
sbb
pop
push
xor
and
pop
lea
sub
cmp
popa
jmp
add
xchg
or
pop
push
xor
dec
xchg
pop
xchg
adc
cmp
decl
mov
mov
mov
andb
sub
jmp
sbb
mov
scas
popa
loopne
adc
add
leave
sub
inc
adc
jo
jmp
jns
insb
or
rcl
push
lret
test
sub
mov
call
add
xchg
popf
pushl
jmp
mov
shlb
scas
aas
pop
test
mov
push
add
add
test
iret
inc
xlat
mov
call
add
out
cltd
roll
add
jne
addl
jmp
or
inc
cltd
and
dec
rcll
add
jp
in
dec
stos
test
sbb
arpl
add
out
jl
jne
xor
ja
xorb
lods
cmp
andl
add
cmp
call
rcll
jl
in
decl
jmp
test
mov
sbb
lds
sarl
sub
int3
popf
xchg
lahf
cli
or
scas
and
mov
popl
jmp
daa
mov
inc
mov
cmp
aas
pop
test
fwait
inc
mov
jmp
test
mov
xchg
movzbl
jmp
sub
jmp
lds
stos
data16
ljmp
shlb
in
push
mov
test
jne
xor
leave
ret
jmp
cli
fs
popf
insb
jmp
adc
jmp
cmp
jmp
sub
mov
jmp
push
lret
xchg
push
leave
movzbl
jmp
jae
add
sbb
push
lahf
push
out
cmc
pushf
outsl
mov
inc
shlb
pusha
movzbl
add
cmp
je
jmp
dec
enter
pop
xchg
push
test
push
jmp
mov
gs
jl
mov
repnz
jne
inc
inc
jmp
in
cld
fwait
jbe
dec
mov
test
jmp
xchg
and
cli
push
mov
ljmp
mov
pushf
adc
push
les
sahf
jno
cwtl
ret
jmp
rcrb
stos
data16
imul
push
jmp
jae
insb
or
mov
scas
sbb
mov
shlb
mov
pop
leave
jmp
pushf
jmp
test
in
sbb
xchg
xchg
adc
sbb
lahf
push
repz
ret
jmp
mov
decl
xchg
out
loopne
jb
jmp
mov
mov
mov
andb
sub
jmp
rorl
add
pop
pop
rcll
add
sti
push
mov
xchg
jl
arpl
jo
jmp
jmp
xchg
outsb
xchg
inc
and
push
pop
into
test
adc
dec
int3
andl
inc
adc
cmpsl
cmp
jmp
and
xor
sbb
out
adc
or
dec
fstpt
lea
jmp
cmc
jb
xchg
pop
inc
mov
jmp
xor
mov
cmpsl
ret
push
mov
gs
addr16
dec
xchg
popf
pushl
mov
jmp
adc
add
add
jmp
dec
mov
mov
add
inc
xchg
push
inc
rolb
pop
jmp
push
fimull
fidivrl
cld
je
lea
in
bound
icebp
mov
faddl
faddl
fsubr
mov
pop
cld
icebp
jle
mov
or
les
adc
pop
jmp
sbb
test
push
lds
iret
sub
push
movsl
pop
jmp
xor
sbb
je
jmp
lods
inc
shll
pop
cmp
js
fisttpl
fnsave
inc
test
je
jmp
push
xor
popl
jmp
and
adc
adcl
test
cwtl
jg
jmp
in
in
je
addr16
aam
sub
loop
je
sub
jmp
loopne
push
add
push
or
add
popf
or
add
push
pushf
sti
push
fistpll
inc
and
jmp
jmp
push
jmp
sbb
dec
push
roll
sarl
xchg
sbb
mov
fs
jmp
pop
fisttpll
out
loopew
adc
adc
sbb
loop
jmp
jmp
lea
push
fwait
or
jns
lods
lret
inc
mov
mov
pop
popa
mov
jmp
and
popf
cmpb
inc
adc
cltd
push
test
push
lret
aad
jecxz
jmp
js
push
cld
shlb
xchg
les
popa
add
inc
inc
popa
movzbl
jmp
lods
cmp
push
lds
iret
jl
dec
fnstcw
or
sub
inc
or
andb
sub
jo
mov
jmp
rcrb
cli
cs
jmp
dec
fdivl
in
xor
dec
fstpt
adc
jne
addl
mov
jmp
fadd
rolb
add
jmp
fiadds
dec
lods
jmp
daa
mov
xor
xor
and
pop
mov
in
jg
in
cmp
je
popa
jmp
popf
fcompl
lods
jle
popl
jmp
push
roll
aad
call
cli
and
out
fs
jmp
movsl
es
cs
jl
xchg
cmc
add
xor
or
mull
and
jmp
rclb
mov
in
jmp
fwait
sbb
aad
repz
pop
test
push
out
out
jg
jmp
jmp
das
popa
clc
pop
mov
in
sbb
inc
pusha
jmp
popl
add
in
lock
lds
fdivr
pop
sub
add
xchg
popf
pushl
jmp
stos
sub
mov
push
mov
mov
xor
add
mov
mov
jmp
pop
aam
sub
ja
pop
mov
jmp
cs
jmp
test
mov
adcl
mov
inc
mov
or
cmp
je
jmp
mov
mov
popf
adc
xor
mov
xor
jmp
repnz
xchg
outsb
fpatan
data16
xchg
outsb
leave
sbbl
ljmp
pushf
jmp
mov
mov
adc
dec
mov
mov
jmp
push
mov
xchg
jl
mov
data16
outsb
or
jg
add
arpl
xor
jmp
mov
add
jmp
dec
fistpll
shll
mov
hlt
mov
add
push
mov
mov
push
mov
add
jmp
hlt
jne
mov
sbb
lock
imul
add
cltd
sub
mov
jmp
push
rolb
shlb
mov
xchg
addr16
pushf
xor
push
ss
mov
jmp
sbb
jmp
pop
fmuls
fdivs
mov
shll
in
jg
adc
into
mov
mov
je
mov
cmp
je
jmp
aam
repnz
fs
cltd
push
ja
mov
sar
mov
add
mov
cmp
jne
test
jmp
jb
xchg
cmc
add
xchg
push
mov
es
popf
cmpl
mov
shll
dec
sub
inc
popf
or
adcl
loope
mov
das
add
add
mov
inc
mov
mov
mov
and
fdivr
jmp
push
nop
push
popa
nop
and
sub
jo
push
mov
push
and
jmp
jmp
out
loope
jae
xchg
adc
in
sbb
cmp
jmp
enter
push
mov
pop
and
mov
mov
movsb
cmp
sub
lods
and
xor
js
mov
xchg
mov
sti
in
test
jmp
pop
loopne
mov
jmp
sub
movb
dec
cmpsb
lret
dec
fdivrs
and
dec
into
out
dec
pop
jmp
xchg
sub
fwait
jmp
mov
es
jmp
in
imul
lods
and
inc
and
dec
movsb
cs
pop
test
jmp
dec
les
int3
jge,pn
imul
pop
jbe
cmp
push
popf
xor
inc
inc
inc
test
jne
jmp
dec
fistpll
mov
and
add
jmp
cmp
shr
inc
mov
jmp
sbb
aaa
adcb
loope
cmpsb
push
lret
pop
ds
insb
cld
xchg
cmc
add
pop
mov
jmp
pop
roll
aad
imul
testb
inc
jmp
cmp
adc
jmp
orb
cmp
cmpsb
cmp
mov
xchg
dec
fisttpl
fnsave
inc
roll
add
data16
xchg
outsb
xchg
push
cld
jnp
cmp
push
loopne
shr
jg
adc
inc
shll
int
lea
stos
cmp
dec
pop
mov
inc
lock
mov
mov
add
mov
jmp
cmp
inc
movsb
addr16
lods
test
jmp
and
pushf
enter
jmp
fisttps
add
add
push
xlat
inc
and
aaa
enter
inc
mov
dec
mov
jmp
jmp
insl
sub
pushl
mov
test
icebp
dec
cmp
jmp
jns
addr16
sbb
jmp
jmp
and
inc
dec
ret
ret
xchg
add
sub
jge
daa
jmp
pop
cmp
jmp
pop
cltd
or
pop
dec
fnstcw
xor
pop
inc
rolb
sarb
sub
inc
pop
jmp
jo
jbe
loopne
sub
jl
js
ljmp
sbb
out
decl
test
jne
mov
pop
ret
jmp
sub
jo
mov
mov
test
xchg
add
ljmp
stc
in
sub
sub
push
cs
je
test
jle
lea
jmp
jmp
adc
das
mov
inc
mov
outsl
repz
cmc
cmp
cmpsl
mov
jmp
fcomp
lds
jne
jmp
mov
jmp
imul
sbb
add
xchg
pop
bound
fildll
iret
sub
test
pop
decl
mov
sti
jmp
mov
jmp
xchg
adc
in
sbb
ficomps
stos
pop
mov
notl
ja
xchg
jmp
js
xchg
testb
mov
into
pop
cmp
xor
fwait
scas
lods
jl
add
mov
cmp
jne
test
je
jmp
dec
frstor
hlt
pop
test
aad
dec
ljmp
mov
jmp
inc
imul
jmp
addr16
idivb
jp
adc
aas
adc
dec
xor
jmp
nop
sbb
jmp
ficoms
cmpsb
push
cli
mov
cwtl
pop
into
pop
cmp
jg
jbe
dec
lods
sbb
jmp
mov
pop
push
mov
fidivrl
sub
sbb
dec
add
xchg
leave
push
shll
add
pop
adc
xchg
loope
imul
jmp
fadds
mov
cmpsl
pop
xchg
adc
and
and
mov
cli
js
mov
rolb
inc
test
subl
inc
jmp
movsb
inc
jmp
test
jmp
xchg
cmpsb
and
ret
ret
iret
aas
cmp
jo
mov
and
cmp
jne
jmp
cmp
pushf
jmp
jmp
xchg
pop
aas
lret
push
mov
jae
jmp
pop
aad
sub
aas
fistl
mov
clc
lahf
push
sub
aas
mov
add
pop
int
mov
dec
jo
jmp
and
jmp
and
push
xchg
repz
fcmovb
push
ret
cmpsb
push
xchg
cmp
mov
mov
mov
andb
sub
jmp
dec
lds
iret
push
and
mov
jle
and
pop
enter
add
inc
adc
mov
jmp
scas
cmp
sbb
cmp
fmull
sub
jmp
inc
xlat
inc
and
push
cmp
jmp
addl
jmp
or
pop
mov
mov
iret
hlt
push
mov
jmp
sbbb
jmp
mov
sbb
ss
pop
test
jg
test
mov
ficomps
or
in
frstor
mov
push
mov
jmp
icebp
ja
xorb
and
fisttps
fstps
mov
call
add
xchg
popf
pushl
jmp
fld
rolb
add
jmp
lcall
ljmp
stc
repnz
roll
aad
enter
clc
jb
xchg
jge
fs
sbb
jmp
rorl
dec
mov
pop
int3
stos
xchg
sbb
add
xor
mov
leave
jg
movzbl
add
cmp
je
jmp
int3
add
aas
lea
jmp
or
and
icebp
popa
add
inc
int
popl
jmp
mov
jmp
mov
jmp
or
or
sbb
aad
xchg
adcl
out
mov
adc
ret
mov
aaa
cmpsl
ret
sahf
or
xor
fs
popf
insb
scas
and
add
rol
mov
popf
or
sbb
push
pushf
sti
push
imul
push
std
jl
add
jmp
pusha
jmp
imul
or
xor
push
push
test
push
notb
inc
sub
xor
inc
lock
mov
mov
add
jmp
rcll
mov
ret
cmpsb
push
lods
lea
cwtl
decl
fldl
sar
inc
adc
dec
enter
cmp
push
out
movsb
cmp
pop
push
cmp
jmp
addl
jmp
pusha
jmp
ss
rcrb
jecxz
jmp
jne
jmp
sahf
adc
imul
pop
fisttpl
fisttpll
ficoms
cmpsl
push
nop
sub
mov
mov
mov
andb
sub
jo
mov
jmp
xor
das
dec
mov
dec
mov
mov
jmp
xchg
add
mov
mov
sbb
insl
ret
or
sub
pop
je
popa
jmp
push
test
lcall
mov
gs
cmp
add
cmp
add
add
jmp
mov
mov
and
mov
aaa
push
mov
stos
data16
cmpl
mov
clc
test
es
add
mov
add
jge
jp
in
add
sbb
cmpsl
aaa
push
mov
push
inc
lea
jmp
push
sbb
jno
xorb
pop
xchg
repnz
into
cmp
mov
lods
or
pushf
adc
jmp
add
add
jmp
sbb
pop
pop
fcmovnb
in
das
in
jmp
mov
jmp
inc
rcll
push
loopne
cli
popf
insb
cltd
inc
ret
ret
adcb
xorb
mov
jmp
pusha
mov
jmp
lea
jmp
or
push
jo
loop
popa
call
adc
or
cmp
and
cld
call
and
mov
mov
dec
add
sbb
call
and
mov
adc
add
stc
inc
mov
add
cmp
mov
stc
daa
mov
rcrb
add
mov
add
std
jb
xchg
gs
jg
jmp
xorb
cmp
jo
mov
jmp
sahf
adc
ret
ret
inc
add
data16
lcall
sbb
xchg
and
push
ret
cmpsb
push
cli
and
jno
sbbl
add
loopne
lret
cld
fwait
jbe
pop
iret
pop
cmp
data16
aas
scas
lret
out
cmp
sub
jmp
and
add
cmp
lods
sbb
loop
pop
loop
push
iret
pop
cmp
adc
es
dec
add
push
shr
jmp
mov
movsl
xlat
dec
frstor
shll
enter
dec
mov
pushf
jmp
and
addb
testl
sub
xor
addb
cmp
ja
mov
lea
jmp
sbb
popf
and
iret
pop
cmp
xor
pop
jp
imul
pusha
popf
sub
jmp
add
adcb
subb
or
push
daa
mov
and
ret
xchg
sub
push
xor
add
xchg
popf
pushl
jmp
and
and
and
inc
nop
push
mov
orl
push
sub
fwait
mov
jmp
push
jmp
pop
lcall
pop
popa
out
jl
mulb
js
push
cld
ds
js
mov
mov
mov
push
push
pushf
jmp
sbb
bnd
nop
add
inc
mov
jmp
addr16
pushf
mov
jmp
pop
pop
jp
es
enter
popa
sbb
and
pusha
scas
divl
jmp
xor
aaa
push
mov
loop
fsub
jp
jp
pop
data16
inc
data16
jmp
sti
popa
icebp
nop
arpl
rolb
ds
icebp
inc
mov
jmp
cmp
add
add
jl
jne
insb
push
int
and
push
nop
or
jbe
push
cld
xor
jmp
fs
sbb
add
push
divb
jmp
mov
lds
popa
add
pop
es
cs
lcall
push
jmp
add
pushf
popl
jmp
into
aad
sub
sub
jmp
addr16
sub
mov
jmp
hlt
jo
xorl
adc
add
add
mov
add
jmp
or
insb
orl
push
xchg
add
mov
jmp
mov
fwait
xchg
lahf
cli
or
or
mov
jmp
pop
rolb
rclb
sahf
adc
das
mov
dec
mov
mov
jmp
sub
xchg
push
xchg
repz
mov
mov
xlat
and
jmp
add
sub
popa
jmp
xchg
or
mov
jmp
mov
jmp
sti
outsb
cld
fwait
jbe
and
inc
fimull
fidivrl
pop
or
ret
sub
jmp
repz
adcl
test
sub
jg
mov
adc
sbb
push
jmp
movzbl
inc
mov
add
jmp
fs
adc
daa
addb
repnz
cmpsb
sub
jmp
jg
arpl
movsb
ds
sar
mov
jmp
xchg
adc
push
inc
and
cmp
mov
inc
mov
testb
jecxz
cli
popf
insb
mov
mov
jo
imul
clc
cld
rep
pop
jmp
out
imul
insl
mov
mov
mov
scas
leave
cmp
mov
xchg
repz
test
inc
add
xchg
sti
lcall
mov
jmp
setb
add
add
call
jle
daa
stos
cmp
or
sbb
ja
sbb
and
mov
stc
push
mov
add
dec
sub
outsb
or
not
jmp
adc
sti
decl
dec
sub
jno
leave
pop
cmp
js
mov
fstps
mov
mov
not
jmp
adc
ljmp
cltd
push
pop
test
dec
or
mov
pushf
popl
jmp
ret
lods
pop
cli
and
add
jmp
in
jbe
cmpl
aaa
cmpsl
ret
cli
lock
bound
in
xor
popa
ret
mov
les
mov
movsb
and
pop
leave
test
nop
cmpsb
sub
in
sahf
mov
mov
dec
push
lcall
outsl
or
out
pop
sahf
or
cmpsb
inc
dec
into
pop
cmp
sub
call
pop
fdivl
in
adc
push
jbe
loopne
fists
pop
mov
shll
pop
out
mov
push
add
xor
xor
xor
outsb
cld
fwait
jbe
mov
mov
add
jmp
mov
orb
sub
dec
je
imul
pop
jmp
pop
enter
jns
adc
lock
inc
pop
loopne
inc
stc
pop
shr
or
xor
inc
jmp
ds
aas
pop
test
insb
lahf
sub
mov
stc
jne
jmp
es
sub
mov
shl
push
lahf
push
aaa
xor
decl
lea
jmp
adc
lock
std
test
loop
notb
inc
mov
jmp
add
adc
mov
jg
bound
shlb
test
cld
addl
jmp
mov
mov
stc
imul
lock
bound
lahf
jne
mov
inc
mov
arpl
xchg
xorl
decl
stc
insb
loop
pop
loop
cld
jno
xorb
loope
adc
and
dec
sub
jle
or
imul
jmp
mov
pushf
pushf
or
mov
dec
mov
xchg
shrl
xchg
testb
mov
add
add
mov
jmp
xor
cmpsb
inc
shll
addr16
adc
xor
int3
push
shlb
addr16
adc
jle
jl
pop
fdivl
in
les
mov
jecxz
jne
push
xchg
jb
pop
or
inc
rcll
sub
xchg
or
outsl
add
lds
cmpsb
push
mov
dec
fdivrl
dec
fnstsw
hlt
xchg
outsb
mov
and
jle
popa
add
push
jo
jo
loop
or
ucomiss
add
ja
ja
loope
mov
popf
ljmp
movsb
ret
ds
push
xchg
or
pop
sbb
loop
call
popf
or
adcl
test
lahf
punpckhdq
pop
repnz
enter
test
imul
shlb
mov
add
add
mov
mov
add
mov
mov
mov
dec
add
cs
mov
mov
fdivrl
aam
rcr
pop
enter
cltd
adc
pop
into
test
and
lock
jnp
mov
xchg
pop
enter
dec
cltd
idivl
mov
jns
push
cld
pop
bt
push
movsl
adc
call
add
inc
mov
mov
jp
jp
stc
outsb
cld
fwait
jbe
pop
into
pop
cmp
popa
mov
mov
and
sub
sub
mov
sar
lock
bound
daa
mov
pop
xchg
xor
and
mov
jl
gs
cmpsl
ret
stc
js
mov
sbb
stc
jle
mov
mov
ficomps
test
mov
and
leave
pop
cmp
sub
mov
rclb
adc
add
or
mov
mov
add
mov
mov
mov
dec
add
jbe
loopne
push
fisttps
flds
and
cs
and
lock
inc
push
mov
aaa
movsl
xor
and
cli
push
rcll
push
jmp
fs
xor
stc
ss
inc
mov
iret
push
lds
pop
repnz
fs
popf
insb
jmp
popa
icebp
nop
arpl
dec
iret
pop
cmp
push
cmpsl
and
mov
lods
ss
dec
mov
jle
jne
adc
fs
popf
insb
cltd
cmp
push
lds
xchg
sbb
lea
sahf
or
cmpsb
inc
jmp
lock
bound
mov
sub
orb
adc
xchg
sbb
xchg
add
daa
xchg
or
mov
add
lock
jmp
add
inc
es
dec
mov
cmp
sub
adc
jnp
in
pop
imul
and
sub
sub
lods
cmp
into
pop
cmp
push
std
lock
in
inc
shll
adc
imul
jnp
jae
pop
rclb
xor
adc
dec
add
test
cmp
jecxz
and
movsb
cmp
add
pop
jmp
and
or
jno
xchg
add
scas
aas
pop
test
clc
or
flds
mov
test
or
or
cmc
gs
xor
movsl
xor
mov
inc
mov
in
sbb
or
lret
pop
fisttpll
out
daa
mov
or
setg
or
jl
gs
pop
add
idivl
mov
je
and
or
jbe
imul
addr16
dec
rolb
mov
call
adc
sbb
xchg
mov
aad
into
pop
enter
cmc
gs
pop
mov
mov
xchg
pop
bound
mul
xchg
xor
and
dec
pusha
xor
sbb
call
and
mov
xor
lea
add
add
rcrb
fbld
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
add
sbb
rclb
push
mov
push
mov
dec
add
mov
gs
sub
dec
sub
sub
mov
jg
bound
dec
sub
add
jbe
jb
xchg
push
fimull
fisubrl
fs
add
inc
jno
xchg
testb
mov
mov
mov
cs
jnp
jle
call
decb
bound
dec
mov
pop
test
cmp
mov
lea
xchg
or
pop
divb
xchg
cld
fs
popf
insb
xchg
ror
les
mov
and
enter
inc
and
ss
pop
stc
mov
dec
add
stc
mov
dec
lret
lret
outsl
lcall
dec
sub
es
out
addl
push
test
push
testb
sub
idivl
je
popa
arpl
js
ljmp
mov
jmp
stc
lock
dec
add
mov
dec
add
mov
scas
aas
pop
test
lret
out
clc
lahf
push
call
int3
jl
jge
negl
shlb
sub
icebp
nop
arpl
dec
fimull
fidivl
fisttpll
out
call
and
mov
mov
into
rorb
mov
out
mov
fadds
mov
leave
flds
mov
leave
pop
fistl
into
push
ret
cmpsb
push
mov
subl
xor
inc
pop
fisttps
fstps
fistps
test
cmc
pushf
outsl
cwtl
fwait
push
mov
es
lods
es
cs
jne
mov
icebp
jg
mov
addr16
jl
testb
popa
pop
roll
roll
cmp
jb
sub
dec
and
sbb
dec
fdivl
in
xchg
or
setg
or
mov
in
mov
fidivl
or
and
xor
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
sbb
rclb
mov
or
mov
mull
stc
fidivrs
or
dec
das
ficompl
rorl
mov
push
popa
nop
jp
inc
and
ss
fimull
ficompl
jecxz
push
in
ret
mov
mov
mov
cmpsb
es
cs
scas
sbbl
add
add
sbb
mov
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
mov
or
mov
mull
stc
mov
dec
add
mov
dec
sub
add
outsb
or
push
cltd
push
mov
es
xor
das
stos
cmp
inc
push
rcrb
sbb
ja
sbb
add
add
mov
sarl
pusha
pop
repnz
repnz
test
cmp
lahf
push
test
push
in
inc
lret
lret
inc
shll
inc
and
sbb
and
cmp
aam
aad
dec
in
out
adc
pop
sub
push
lds
cmp
sub
mulb
dec
xor
pop
setnp
outsb
popf
pop
mov
mov
aam
sub
xor
dec
fs
push
inc
shlb
mov
and
rolb
inc
test
lret
lock
adc
out
adc
mov
inc
mov
sbb
rorb
dec
mov
sahf
insl
pop
rolb
shlb
pop
xlat
inc
and
cmp
loop
dec
fnstcw
cs
mov
mov
out
jno
mov
sahf
scas
cmp
mov
in
adc
and
gs
dec
add
stc
jbe
dec
add
jp
in
inc
xchg
add
jmp
push
in
inc
push
mov
add
and
mov
jns
push
pop
leave
test
mov
outsl
lcall
xor
rolb
rclb
sub
cmp
mov
dec
mov
lcall
inc
mov
test
push
mov
into
test
icebp
nop
arpl
scas
dec
dec
lds
iret
sub
dec
sub
es
mov
sub
jbe
inc
shll
into
test
or
sub
js
iret
mov
aas
mov
add
ret
add
ret
dec
add
movsl
rclb
xor
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
push
mov
push
mov
dec
add
mov
jnp
in
inc
adc
adc
push
lret
pop
ds
adcl
imul
scas
cmp
dec
fdivrs
dec
fnstsw
mov
sub
pusha
notb
ret
cmpsb
push
aam
lods
and
jge
mov
xchg
jle
mov
inc
mov
jle
insl
hlt
pop
loopne
and
add
lcall
insl
std
test
outsl
jmp
push
in
sbb
push
sahf
or
cmpsb
inc
xchg
sbb
test
pop
test
dec
fistpll
mov
sbb
or
add
add
add
sbb
mov
stc
pop
ret
push
divb
inc
mov
add
shlb
fbld
mov
dec
add
sub
cs
sub
lds
cmpsl
sub
dec
fdivrl
fwait
decb
mov
xchg
mov
lods
lret
inc
test
adcl
mov
jns
ds
fwait
or
xor
jns
jmp
and
adc
jl
out
out
jno
cmp
sbb
cs
dec
mov
pop
test
lock
sbb
add
push
enter
dec
cmp
inc
lret
pop
ds
hlt
je
lea
xchg
add
stos
cmp
push
enter
push
xorb
mov
inc
mov
jnp
gs
and
xchg
mov
test
mov
xchg
jns
fs
sub
fisttps
stos
stos
test
test
jge
sub
push
aaa
ret
sbb
inc
inc
and
outsl
in
jmp
jge
cmp
sbb
pop
stc
test
je
inc
cmp
jle
jmp
jmp
push
xchg
jbe
mov
dec
add
shlb
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
mov
add
mov
mull
stc
lret
add
mov
mov
sbb
fisubrs
sub
enter
or
ja
xorb
mov
jle
popa
mov
xchg
adc
iret
push
mov
enter
pop
mov
cmp
inc
lret
pop
ds
jno
add
adc
sub
ret
mov
pop
cmp
and
ret
rcrl
cld
call
and
mov
and
dec
add
icebp
nop
arpl
add
test
mov
add
shlb
fbld
inc
leave
dec
add
xchg
cmc
add
hlt
adcl
test
fisttps
flds
pop
iret
stos
pop
mov
xchg
add
push
cmc
js
mov
adcl
loop
test
test
xchg
add
push
lret
pop
ds
loopne
in
jle
push
lds
iret
mov
mov
pop
int
addr16
cltd
push
psubd
pop
popf
or
insl
std
test
sub
jo
jge
divl
mov
jle
inc
adc
add
lds
iret
and
pop
mov
scas
push
fstpl
scas
pop
in
push
in
sbb
add
enter
pop
cmp
xor
mov
push
test
repz
cmc
push
sbb
inc
jne
outsl
or
lds
stos
jmp
out
mov
cltd
or
adcl
inc
inc
jne
jmp
stc
jl
dec
add
stc
fwait
lds
push
dec
fisttps
fs
popf
insb
fstpl
pop
cmp
jle
cmp
mov
repz
pop
repnz
jge
jne
out
cs
push
lret
mov
int
sbbl
out
sbb
hlt
push
lahf
push
sbbb
ret
ret
adcl
jnp
mov
fcomps
stos
pop
orb
push
rolb
rolb
aaa
rorb
jp
jg
lds
iret
orb
cli
or
add
add
jo
jo
xorl
aaa
xchg
cmp
pop
shlb
xchg
les
js
ljmp
out
cmpsb
xor
scas
pop
and
std
imul
xchg
add
cmp
pop
repnz
rorl
punpckhdq
pop
test
in
sbb
scas
xor
mov
mov
cmpsb
cmp
ret
dec
add
stc
ret
add
arpl
cmc
je
insl
std
test
ret
inc
mov
test
dec
fstpt
into
test
cmp
push
fistpl
fs
into
pop
cmp
and
jge
je
insl
jecxz
lcall
inc
es
add
add
jo
cmp
mov
mov
push
lds
cmp
pop
cmp
adc
es
push
pushf
sti
push
mov
or
or
sbb
mov
cmc
leave
dec
add
dec
adc
dec
push
sahf
or
cmpsb
pop
dec
fisttpll
out
inc
inc
and
outsl
mov
lcall
xor
pop
or
mov
and
lock
notl
jb
jns
jmp
fwait
or
push
pushf
sti
push
xchg
or
rcll
mov
notl
out
jno
scas
sub
cmp
cmpsl
aaa
push
mov
in
sbb
aad
int
addr16
sbb
add
repz
cmc
pop
rorb
dec
movsb
and
lods
and
sub
mov
pushf
stos
aas
scas
lret
sub
inc
rolb
shlb
dec
fdivrl
aam
dec
call
movsl
repnz
pop
repnz
xchg
and
mov
push
xor
or
xchg
mov
mov
dec
add
in
mov
mov
popa
std
insl
hlt
pop
andb
psubd
adcl
jmp
push
in
add
gs
pushf
outsl
test
pop
cmp
xor
fisubrs
arpl
cmc
and
into
pop
cmp
and
push
mov
or
push
mov
xlat
pop
int
addr16
nop
cmc
jns
mov
mov
scas
leave
cmp
lock
jne
inc
test
sahf
stc
or
xchg
and
movsl
fmuls
mov
lds
sub
push
push
lds
iret
fs
mov
testl
shlb
fbld
mov
dec
add
repnz
fs
cmpsl
inc
shll
imul
jns
jmp
scas
xor
xor
mov
lods
lds
mov
ds
test
jae
popa
add
sbb
andl
xlat
dec
add
sbb
call
and
mov
cmp
pop
fisttps
fsts
imul
sbb
push
in
std
test
icebp
jp
jp
adc
inc
or
mov
lods
mov
loop
xchg
add
inc
jbe
push
leave
pop
cmp
outsb
and
or
mov
jg
and
testb
daa
sarb
jbe
cmpl
or
aaa
mov
outsl
cli
push
sub
movsb
cmp
dec
push
pusha
pop
repnz
in
pop
lret
scas
pop
fadd
pop
int3
stos
data16
pop
lret
scas
pop
xchg
divl
jl
xlat
push
lds
inc
mov
sbb
addr16
pop
xchg
adc
push
lcall
jo
loop
out
loop
je
dec
push
xor
sub
xor
mov
enter
and
cmp
jge
arpl
out
stc
jne
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
call
xchg
jmp
jecxz
jne
dec
leave
pop
cmp
push
mov
int
pop
into
test
inc
and
and
pop
lret
scas
pop
mov
mov
inc
lret
lret
inc
mov
out
pop
xchg
adc
sbb
popf
adc
mov
inc
aam
sub
jg
jmp
jo
sub
jns
mov
inc
rolb
sarb
test
pop
test
sti
outsb
cld
fwait
jbe
out
je
lea
rolb
shlb
add
stos
cmp
inc
lret
lods
pop
fistpl
push
xor
dec
cmp
cltd
sbb
jae
xchg
divl
cmpl
cli
push
movsb
cmp
jnp
sbb
aad
rcrl
jo
das
mov
shlb
cld
call
and
mov
popf
mov
add
dec
lret
dec
add
add
pop
repnz
xchg
pushl
aaa
mov
adc
or
dec
bnd
mov
loope
mov
test
mov
pop
into
pop
cmp
addr16
mov
jnp
mov
push
xchg
pop
bound
jb
cmp
sahf
or
cmpsb
add
mov
jg
dec
int
loopne
fidivrs
sbb
cld
call
and
mov
dec
lret
push
cmp
sti
popa
icebp
nop
arpl
xchg
jl
xor
xchg
mov
dec
into
pop
cmp
pop
int3
dec
frstor
ficomps
cld
daa
cmpsl
aaa
push
mov
mov
xchg
lock
or
scas
aas
pop
test
leave
cmp
ret
mov
ss
mov
or
pop
mov
xchg
repz
fisubl
not
pop
int
addr16
push
xor
xchg
lock
jnp
insl
cld
xchg
cmc
add
pop
xchg
pop
bound
bound
cmp
jle
xor
int
fwait
and
fwait
add
sbb
or
push
iret
pop
cmp
push
sbb
sbb
mov
stos
daa
movsl
xor
cmpsl
aaa
push
mov
xor
inc
adc
push
call
mov
jmp
mov
cmp
lds
pop
lods
inc
push
aad
enter
pop
jp
jg
add
add
add
jmp
bnd
xorb
addr16
repz
push
add
lds
mov
jmp
sbb
mov
cmp
lcall
add
add
jmp
mov
in
ljmp
push
jmp
xchg
xchg
icebp
add
cs
cmp
pop
mov
mov
push
jmp
add
aaa
add
jmp
pop
outsl
ret
add
add
push
push
add
inc
push
xor
daa
ret
out
shlb
mov
dec
add
scas
lret
pop
aad
sub
aas
mov
dec
sub
jmp
cmp
test
add
add
jmp
popl
aad
or
sub
das
xchg
notl
add
add
jmp
dec
les
int3
aas
ret
mov
and
sub
inc
rorb
push
mov
xchg
repz
test
xchg
stos
popf
jmp
popf
jecxz
out
imul
int3
popf
inc
push
xor
sub
pop
mov
jl
add
in
lcall
sbb
add
shlb
fbld
sub
ficoms
outsb
sbb
add
ja
sbb
rcrb
fbld
rorl
push
sbb
lods
cmp
int3
popf
js
xchg
testb
pop
div
jmp
mov
cltd
xchg
or
add
add
mov
jmp
and
enter
popa
ret
mov
jmp
call
jmp
jne
jnp
in
pop
imul
psubd
data16
push
mov
mov
andb
sub
jmp
mov
jmp
iret
pop
int3
popf
arpl
jmp
add
jae
in
inc
sbb
and
jns
mov
fmull
call
jmp
hlt
popa
icebp
nop
arpl
movsl
aaa
cmpsl
ret
pusha
pop
mov
ret
add
xchg
or
add
push
jne
jmp
mov
add
jge
cmpl
adc
aas
stos
cmp
push
int
cmp
sbb
cld
call
and
mov
movsl
rorb
push
mov
les
je
roll
rcll
mov
test
ss
dec
frstor
push
cmpsl
dec
addl
lock
or
adc
sub
mov
shl
dec
add
add
cmp
mov
mov
shlb
xlat
mov
lea
popf
push
push
xor
jns
nop
push
popa
nop
cmp
push
xor
jo
pop
jp
setg
push
push
inc
fisttpl
fnsave
rolb
shlb
setg
or
push
pushf
cmpsb
inc
shll
mov
les
stos
cmp
inc
outsb
lock
ja
dec
fdivrs
or
push
push
add
test
insb
repz
cmc
push
add
jg
iret
pop
cmp
add
pop
enter
cmpsl
and
outsb
cld
fwait
jbe
dec
aam
add
addl
jmp
movzbl
jmp
adc
xchg
sbb
xchg
add
inc
mov
xor
repnz
call
and
xor
insb
repnz
test
jns
sub
clc
pop
jp
sub
pop
add
sbb
xchg
gs
mov
gs
jbe
add
std
or
rolb
inc
dec
je
jmp
and
inc
xor
sub
sbb
pop
mov
arpl
xchg
mov
sbb
add
shlb
fbld
jl
dec
add
xchg
popa
jmp
sub
inc
sbb
addb
add
lods
jle
bound
dec
sub
jno
xchg
std
movsl
pop
mov
add
shlb
fbld
lret
fimull
push
sub
insb
stc
or
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
cltd
dec
add
add
dec
sub
xor
bnd
push
notl
pop
adcl
cmp
push
ret
cmpsb
push
mov
or
dec
rclb
and
pop
xchg
adc
lods
and
test
out
jl
divb
push
xor
push
aam
cmp
xchg
adcl
out
mov
aam
mov
xchg
xchg
pop
xchg
repnz
mov
inc
mov
movsl
lods
lret
inc
movsb
xlat
dec
frstor
out
cli
iret
push
mov
add
adc
mov
ds
push
lds
or
jmp
lea
imul
add
add
dec
shlb
add
add
rcrb
fbld
rorb
push
and
rolb
add
jmp
sahf
in
scas
mov
lea
jmp
push
jmp
sbb
xchg
add
insb
loop
je
xchg
jnp
and
daa
mov
and
pop
jecxz
push
in
jo
arpl
add
add
jmp
mov
sbb
cld
call
and
mov
cmpsb
push
repnz
mov
mov
and
testl
jmp
dec
out
in
xchg
xor
add
fisttpl
dec
fstpl
leave
lock
push
add
stos
xor
pop
xchg
adc
pop
lds
iret
and
sbb
mov
jmp
int3
popf
xchg
sub
out
shr
out
add
imul
push
std
jl
divb
mov
jmp
mov
mov
pop
lret
scas
pop
xchg
sahf
and
or
jmp
jb
dec
in
xlat
mov
jmp
xchg
push
call
jno
addr16
pop
add
pop
mov
mov
jmp
rolb
add
add
add
add
mov
iret
dec
fistpll
dec
adc
xor
leave
scas
xor
stc
xor
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
dec
into
pop
cmp
ds
bound
nop
xchg
lcall
sbb
add
or
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
or
or
and
data16
push
mov
jmp
repz
mov
ja
insl
hlt
pop
loope
mov
pushf
pop
ja
mov
cs
decl
pop
cmp
stc
cwtl
imul
aad
adc
or
or
sbb
mov
stc
popf
fmuls
push
in
jge
notl
pop
jp
and
lahf
sahf
push
pushf
sti
push
cmpsl
adc
add
inc
jmp
sub
jmp
popf
or
in
mov
pusha
roll
cmp
jbe
cmpl
xor
mov
inc
mov
mov
jmp
lods
stos
add
jmp
mov
mov
and
rclb
daa
mov
sahf
push
xchg
repz
in
test
mov
jmp
add
xchg
adc
and
add
psubd
and
sahf
and
daa
mov
and
jo
imul
mov
jmp
push
test
lret
pop
ds
sub
mov
popl
jmp
sub
inc
andl
add
sub
jo
xorl
repnz
mov
jle
imul
call
and
mov
push
xlat
dec
add
push
add
fiadds
add
icebp
jg
mov
push
jecxz
push
in
xchg
sbb
pop
aam
sub
shrb
sub
or
add
mov
mov
or
mov
mov
mov
dec
add
push
aaa
ret
cwtl
push
imul
dec
fistpll
arpl
inc
add
popl
jmp
mov
jmp
in
ljmp
push
scas
pop
sbbl
out
sbb
dec
mov
mov
jmp
mov
jmp
into
pop
enter
mov
lcall
leave
sub
jmp
bound
xchg
jmp
pop
mov
add
add
dec
fstpt
fdivrl
mov
pop
or
shl
rolb
jmp
das
mov
inc
mov
mov
stos
xor
iret
pop
stc
add
dec
add
mov
test
xchg
jnp
dec
fnstcw
or
movsb
jb
shlb
mov
dec
add
xor
je
cwtl
shrb
clc
ja
sbb
sbb
mov
fmull
push
adc
push
popa
nop
gs
adcl
ror
mov
pushf
popl
jmp
arpl
jg
jmp
aad
xchg
cmp
add
in
add
shr
and
push
jecxz
push
in
movsl
sub
loop
jmp
mov
loope
add
std
or
jno
xchg
cmc
add
sbbb
jmp
ljmp
inc
mov
jmp
xchg
and
jnp
mov
iret
mov
inc
add
and
decl
sub
roll
in
in
add
sub
cmpsb
mov
mov
fs
popf
insb
lret
xor
push
jmp
mov
fcmovb
pop
leave
test
mov
mov
jmp
cltd
add
pushf
scas
ret
jmp
push
push
call
insb
repnz
pop
bnd
imul
inc
and
pop
std
hlt
sub
add
add
and
mov
daa
aam
add
repz
call
push
roll
sarl
in
cli
popf
insb
test
push
lret
mov
imul
or
sbb
mov
stc
fildl
push
add
mov
jmp
mov
and
les
jns
xchg
jmp
movb
inc
mov
sti
imul
adc
insl
hlt
pop
notb
inc
mov
lcall
mov
jmp
pop
fisttpl
fnstsw
sahf
adc
add
sti
pop
sub
add
jmp
adc
fnstenv
add
add
jmp
push
jmp
add
push
jns
dec
inc
lret
lret
test
pop
test
and
sbb
popa
mov
stc
sbb
push
add
cmp
mov
mov
mov
cs
inc
aad
dec
in
clc
outsb
or
dec
mov
cmp
inc
adc
inc
jae
sbb
dec
mov
jmp
cmp
cmp
add
insb
loop
je
xchg
push
xchg
repz
test
into
or
jo
jmp
and
jmp
adc
sbb
jle
mov
lds
push
leave
pop
cmp
dec
aam
jmp
cmp
jmp
aam
fnstcw
cmpl
fidivrs
push
cmp
and
bound
pop
xorb
or
andb
sub
jmp
les
mov
mov
mov
in
je
cmpl
cli
inc
inc
popa
jmp
pop
fimull
fisubrl
roll
movsb
mov
scas
leave
cmp
cltd
jns
scas
insb
xor
adc
sub
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
adc
add
stc
adc
dec
add
push
fbld
sbb
sbb
sbb
rclb
mov
add
mov
mull
stc
mov
mov
imul
dec
add
mov
dec
add
fimuls
push
ss
jmp
dec
push
xor
sub
add
jmp
testl
mov
add
out
push
outsb
lea
jmp
xchg
sbb
popl
xchg
repz
std
push
dec
cmp
mov
jmp
inc
loopne
fs
jmp
lret
inc
aad
dec
popa
in
bound
or
sub
inc
lods
movzbl
add
cmp
je
jmp
jns
push
jmp
inc
call
jmp
mov
lahf
movsb
xor
int
lea
xchg
cwtl
lds
push
mov
sub
mov
jmp
jecxz
jmp
jge
ljmp
cltd
push
clc
jmp
lods
out
mov
jmp
add
adc
pop
jb
sub
enter
lods
pop
mov
and
cld
call
and
mov
xor
dec
add
xchg
das
xor
xchg
add
add
fnsave
add
into
add
add
outsl
or
out
call
stc
inc
fisttpll
out
dec
in
add
add
shlb
mov
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
mov
or
mov
mull
stc
iret
loopne
add
mov
je
add
mov
jmp
jmp
sbb
adc
add
jno
ficoml
shr
pop
add
fcomps
test
fcompl
scas
pop
movsb
push
inc
and
or
mov
jmp
ja
aad
and
mov
mov
lods
ret
dec
fistpll
les
test
jmp
cs
push
jmp
mov
jmp
pop
jmp
mov
xchg
repnz
mov
lods
lret
inc
mov
inc
aad
dec
ljmp
shlb
lock
sbb
sbb
mov
loopne
add
or
cmpsb
jb
cs
stc
inc
fisttpll
push
add
stc
ljmp
loop
add
or
dec
fistpll
aad
dec
in
push
add
push
mov
test
je
cmp
jb
cmp
jb
jmp
jo
jbe
loopne
js
mov
sbb
je
jmp
push
ret
ret
xchg
add
jmp
jbe
jmp
imul
testb
sbb
pop
test
sub
test
jmp
xchg
mov
or
jmp
push
jmp
add
jmp
mov
mov
and
inc
subb
add
adc
inc
sub
aaa
sub
mov
jmp
add
jmp
stc
pusha
notb
insb
or
orl
pop
loop
mov
fldcw
add
sbb
imul
jmp
jb
popa
add
adc
mov
outsl
call
mov
mov
mov
add
stc
cmp
dec
add
call
loop
add
stc
shl
add
shlb
push
xor
xor
sub
sbb
add
add
and
mov
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
push
mov
push
mov
dec
add
mov
mov
sbb
mov
int3
inc
int
and
es
ljmp
push
adc
inc
hlt
test
jmp
leave
inc
aad
dec
ljmp
out
popa
icebp
nop
arpl
push
xchg
add
add
popa
icebp
nop
arpl
mov
xchg
cwtl
push
imul
call
inc
mov
icebp
push
rcll
push
nop
and
pop
push
push
mov
jmp
je
jmp
call
sub
mov
test
cmpl
jmp
fwait
push
pushf
sti
push
mov
adcl
test
insb
loop
je
sub
push
dec
cmpsl
sbb
ja
sbb
and
mov
sbb
add
stc
sarl
xchg
data16
mov
stc
shl
dec
add
mov
jmp
jg
je
out
push
xor
cmp
sub
gs
es
cs
and
clc
jmp
inc
ret
ret
jno
mov
add
add
loop
fisubrl
jmp
dec
leave
pop
cmp
and
pop
cmp
sub
xchg
add
insl
pop
lret
fstpt
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
push
mov
push
mov
dec
add
mov
add
inc
fcomip
push
mov
mov
cmp
je
lea
push
mov
push
jmp
movsb
and
and
jae
xchg
push
mov
movsb
pop
push
call
test
jmp
xor
mov
shlb
jo
loop
fcoms
mov
mov
jmp
inc
lods
cli
mov
jmp
push
jecxz
push
in
jnp
gs
aas
ret
movsb
push
repnz
sbbb
test
jmp
jnp
daa
pushl
jmp
pop
into
pop
cmp
pusha
repz
notb
push
aaa
ret
mov
inc
mov
in
ljmp
out
add
jmp
outsl
ljmp
stc
mov
push
xor
fmull
mov
push
inc
out
stc
adc
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
jp
jge
notl
jno
xorb
xchg
mov
mov
incl
add
cltd
jmp
ss
inc
mov
lea
mov
sbb
mov
jmp
adc
ja
jg
jmp
repnz
iret
add
push
jmp
call
and
add
shll
mov
das
rcl
xor
stc
int
dec
add
stc
ljmp
pop
faddl
pop
lea
push
pushl
mov
push
jmp
call
jmp
adc
sub
inc
dec
iret
pop
cmp
aas
std
fstps
jmp
dec
add
jmp
mov
iret
lods
and
aaa
mov
jbe
dec
stc
int
dec
add
stc
call
out
enter
add
rclb
mov
sbb
mov
sbb
mov
push
sub
mov
jmp
pop
xlat
inc
and
sub
roll
shll
sub
ret
addb
test
jne
jmp
ficoms
cmpsl
push
nop
mov
pop
jmp
scas
pop
jmp
inc
movsl
leave
add
add
enter
add
mov
mov
xchg
fildl
fldenv
addr16
dec
push
repz
jmp
sti
jmp
jge
bound
xchg
adc
fwait
xor
dec
sub
push
add
jne
jmp
fmull
pushf
jmp
adc
pop
jb
sub
pop
sub
jmp
aas
stos
cmp
push
dec
je
pushf
idiv
dec
ret
pusha
jmp
lahf
add
std
or
pop
push
xor
and
mov
pushf
add
add
add
shlb
fbld
add
dec
add
mov
add
xchg
popf
pushl
mov
jmp
and
rclb
mov
loope
jae
pusha
out
adc
or
mov
mov
mov
andb
sub
jmp
scas
das
mov
scas
aas
pop
test
and
and
pop
mov
push
mov
ret
aas
mov
xor
and
out
adc
or
push
jo
mov
jmp
or
inc
int
and
add
dec
sub
and
pop
jecxz
jmp
jecxz
jmp
pop
lcall
mov
das
fwait
aas
lods
and
sbb
ds
mov
popa
jmp
xchg
push
xchg
repz
cmpsl
mov
add
add
jno
jecxz
sbb
scas
cmp
test
mov
sbb
ja
sbb
rcrb
mov
loop
add
sbb
cld
call
and
mov
ret
in
add
mov
sbb
dec
mov
imul
cmp
je
popa
mov
jmp
sub
pop
fisttpll
mov
gs
adc
sbb
jne
mov
mov
mov
cmp
jae
xchg
pop
insb
int3
popf
xchg
adc
pop
lret
scas
pop
movsl
sub
dec
cmc
jnp
mov
icebp
jo
xorl
sub
incl
add
mov
movzbl
jmp
in
sbb
fs
jmp
or
cltd
and
insb
loop
je
fstpt
add
add
ficompl
add
mov
jmp
rcrb
test
cld
fwait
jbe
mov
fistl
mov
dec
adc
mov
dec
add
shrb
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
add
sbb
rclb
mov
add
mov
mull
stc
mov
dec
add
mov
dec
mov
jmp
add
leave
jmp
rcrl
test
shr
add
add
bound
mov
xchg
aas
mov
inc
mov
movsb
dec
push
and
mov
sub
lea
mov
call
mov
jmp
scas
and
popf
fs
test
je
test
jle
lea
jmp
lret
pop
iret
stos
pop
rcll
adcb
subb
test
adcb
loop
mov
test
jmp
test
jmp
jno
jne
out
pop
test
and
lret
jmp
pop
enter
into
jmp
jmp
mov
mov
cmp
test
aad
push
ret
cmpsb
push
mov
sbb
call
and
mov
push
out
dec
add
add
adc
mov
dec
orl
inc
pop
fisttpll
out
out
cmc
pushf
outsl
test
dec
sub
cmp
lds
iret
xor
test
call
mov
test
je
cmp
jmp
xchg
push
test
push
leave
test
pop
sbb
inc
clc
jmp
and
mov
xchg
add
add
pushl
add
gs
adc
or
dec
sub
sub
insl
mov
pusha
xlat
stc
dec
dec
add
aam
dec
add
shlb
shrb
sub
and
add
sbb
sbb
adc
adc
stc
mov
dec
add
push
pop
repz
jmp
std
jnp
mov
sbb
cmc
jns
mov
test
cwtl
decl
fiadds
or
decl
add
inc
cld
add
add
je
jmp
incl
jmp
xor
dec
les
int3
imul
dec
scas
jmp
mov
inc
or
lock
mov
cmp
jmp
sbb
add
jmp
dec
fisttpll
out
sahf
push
pushf
sti
push
cmpsl
cwtl
setg
or
pop
ljmp
loopne
sldt
add
jmp
mov
jmp
jmp
adc
sub
pop
mov
sub
mov
xchg
add
jmp
add
mov
xchg
adc
filds
mov
movsl
pop
stc
enter
enter
call
and
mov
enter
push
pop
rcll
sub
lahf
pop
adcb
addb
sahf
or
cmpsb
outsl
int3
cmc
cmp
jb
jmp
cmp
mov
fsts
and
jmp
mov
mov
fwait
or
jae
cmp
stos
sub
lds
loopne
into
jne
jmp
cmc
ret
jmp
push
xchg
pop
bound
lahf
push
dec
int3
inc
and
xor
push
xchg
jae
push
or
test
adc
mov
ljmp
push
jmp
sbb
push
mov
pop
jmp
jmp
inc
and
pushl
jmp
popf
push
test
push
cld
cli
jb
xchg
fistl
cmpsl
push
mov
subl
xor
ja
sbb
rcrb
mov
out
dec
add
adc
fbstp
pushf
jmp
mov
decl
in
ljmp
addl
mov
sti
call
dec
sub
jle
mulb
dec
roll
mov
jmp
ja
xorb
adc
bound
add
add
jmp
xchg
add
jne
mov
ret
scas
pop
repnz
sbb
ja
sbb
rcrb
mov
stc
sar
dec
add
das
dec
mov
sbb
ja
sbb
and
mov
add
and
les
jmp
cld
pop
ret
jo
jmp
sub
mov
xchg
adc
xor
cmp
pop
enter
mov
mov
sbb
call
mov
jmp
cld
xchg
cmc
add
cmp
ret
jmp
fimull
mov
fnstcw
adc
imul
jns
mov
ret
ret
inc
shlb
frstor
mov
lock
dec
adc
lock
rcrl
scas
pop
scas
lods
sub
jne
jmp
in
mov
jmp
insb
out
adc
sbb
mov
icebp
popa
add
adc
pusha
xchg
test
sub
jmp
addl
jmp
mov
xchg
jns
fs
sub
addr16
cmp
ja
sbb
cld
call
and
mov
lret
add
push
rorl
mov
add
cmp
jmp
ficoml
lods
pop
cli
dec
fimuls
push
insb
std
insl
hlt
pop
lods
mov
mov
push
je
jmp
pop
enter
popa
fs
pop
repnz
fisttpl
push
std
jne
sub
mov
rcrb
rcrb
push
mov
add
add
mov
add
sbb
rclb
mov
or
mov
mull
stc
loopne
dec
add
mov
nop
testl
lea
icebp
popa
add
xor
aam
add
pop
popl
jmp
mov
dec
add
push
sub
push
xchg
add
sahf
je
sahf
or
cmpsb
dec
mov
sti
pop
jmp
int
fs
jmp
cmp
loopne
push
jmp
fwait
or
inc
fidivrl
out
jno
fwait
dec
mov
in
popa
mov
jmp
lock
xorb
mov
sbb
inc
test
jmp
bnd
lea
sub
clc
outsb
or
or
add
push
stc
mov
dec
add
mov
dec
add
sub
sbb
sub
mov
stc
fcomip
dec
add
cmpsb
shll
popl
std
or
mov
shlb
test
jmp
pushf
jmp
adc
xchg
sbb
jbe
outsl
or
rol
dec
ret
xchg
jle
fsts
cmp
rolb
call
jno
push
jmp
das
mov
push
xchg
or
sub
cmp
shl
jmp
sbb
sbb
mov
inc
mov
mov
mov
sbb
sbb
inc
jmp
popa
mulb
push
adc
cmp
movsl
and
sub
movb
fisttps
cmp
jbe
jmp
push
addr16
sbb
nop
jp
xchg
pop
bound
shrl
test
adc
adc
add
js
pop
jmp
pushf
add
xchg
add
pop
push
mov
hlt
fstl
ja
sbb
sbb
mov
and
dec
add
mov
adc
xlat
add
shrb
shrb
mov
or
or
mov
mov
add
mov
mov
mov
dec
add
jae
push
out
sbb
sbb
ja
sbb
rcrb
mov
add
add
jl
dec
add
clc
fbld
stc
push
repnz
add
inc
adc
jmp
ss
inc
mov
lock
std
adc
pushl
add
daa
pop
fdivl
in
mov
and
sub
xchg
sbb
aad
xlat
in
cld
fwait
jbe
dec
rcll
and
jmp
adc
lea
call
jmp
clc
ja
xorb
cs
loope
adc
xor
popf
pop
sub
cmp
jb
jmp
jmp
dec
rclb
addr16
arpl
xchg
gs
mov
add
xchg
jmp
sub
push
sahf
or
cmpsb
pop
xor
pop
xchg
jb
ds
mov
popf
jmp
arpl
push
cld
push
movsb
xor
xchg
mov
jmp
out
jno
cmpsb
jle
sub
hlt
ja
sbb
rcrb
mov
repz
add
sti
adc
dec
add
stc
js
dec
add
pusha
jmp
popa
jmp
and
jmp
icebp
push
lahf
push
mov
enter
daa
sarb
and
call
add
add
add
add
jmp
pop
into
test
mov
mov
gs
pop
pop
add
mov
ret
cmp
mov
mov
pop
enter
and
or
andb
sub
jo
mov
jmp
aaa
leave
movsl
xchg
add
xor
jno
xorb
mov
inc
mov
test
fdivrs
ret
jne
addl
jmp
adc
or
cmpsb
push
sbb
movzbl
jmp
push
fdivl
in
mov
je
jmp
xchg
jns
add
add
push
mov
lret
lcall
sbb
ja
sbb
sbb
mov
icebp
dec
add
rcrb
push
mov
add
add
mov
add
sbb
rclb
mov
or
mov
mull
sbb
sbb
sbb
rclb
mov
or
mov
mull
push
mov
or
or
mov
dec
add
mov
push
jns
pop
scas
and
sub
pop
enter
jle
or
add
add
jmp
xchg
pop
xchg
repnz
sti
dec
lret
test
lock
aas
je
mov
add
add
jmp
jbe
jbe
loopne
lea
mov
sbb
jg
dec
add
cmp
jmp
mov
xchg
inc
xchg
decb
popf
cmp
ds
push
lds
push
mov
mov
and
add
xchg
or
in
decb
inc
daa
sarb
scas
xlat
add
sbb
ja
sbb
shrb
mov
stc
mov
dec
add
push
xor
inc
sub
fcompl
stos
scas
pop
xchg
mov
ja
sbb
rclb
mov
mov
stc
cwtl
testb
pop
lret
scas
pop
mov
and
xchg
adc
mov
jmp
push
inc
and
cmp
inc
and
and
pop
jp
inc
xor
dec
mov
adc
and
pushl
sbb
sbb
mov
sbb
mov
mov
in
std
dec
add
mov
das
fidivrs
shlb
mov
pop
add
iret
xor
jmp
add
movsb
sub
lds
cmc
jl
jne
ja
cmp
cmp
mov
nop
addb
push
push
push
test
je
jmp
call
jmp
pop
fisttpl
fstpl
push
dec
scas
inc
shll
xchg
adc
fdiv
imul
insl
fidivrl
test
pop
test
fimuls
mov
dec
adc
dec
mov
jmp
call
xor
daa
ret
test
cmp
push
jl
and
mov
test
push
hlt
mov
shlb
cli
adc
out
push
mov
jmp
in
call
cmp
lds
jnp
mov
jmp
sbb
insb
rcll
cmpsl
push
mov
shll
addr16
adc
or
stc
xor
dec
add
stc
movsb
out
dec
add
inc
and
das
out
outsb
aad
cli
add
add
jmp
fimull
je
pop
int
addr16
and
ljmp
stc
out
out
jecxz
jne
sub
push
clc
test
je
cmp
jbe
jmp
das
movsb
cmp
dec
orl
mov
shll
mov
out
adc
pop
and
or
add
add
jmp
dec
les
int3
imul
hlt
pop
shrl
jo
loop
push
or
lcall
cmp
jmp
je
outsl
or
mov
out
in
jle
mov
mov
icebp
cs
and
ja
sbb
rcrb
mov
add
add
mov
dec
add
popa
fbld
stc
hlt
dec
add
mov
and
mov
aaa
xor
push
les
fnstcw
into
test
sbbb
adc
fdivrs
rorl
adcl
jmp
les
stos
movsw
add
or
stc
jmp
jmp
fs
insl
hlt
pop
out
in
bound
loope
jae
add
push
jge
jle
jmp
imull
cltd
push
mov
mov
jmp
out
jae
xchg
mov
jle
insb
or
out
lds
dec
test
jge
jmp
mov
xor
bnd
lea
mov
clc
jl
jne
jno
mulb
push
ja
jmp
and
inc
pop
lods
and
add
add
stc
es
cmp
mov
dec
rclb
xor
jle
call
and
or
sbb
add
add
mov
fisttps
push
push
fimuls
xor
push
lahf
push
inc
roll
aad
jl
jl
testb
jmp
mov
mov
jmp
popa
addr16
call
jmp
cwtl
or
cli
push
pop
enter
fwait
pop
jmp
test
jmp
sbb
sbb
cmp
pop
int3
stos
iretw
dec
fimull
fisubrl
push
popf
push
mov
jmp
mov
mov
das
mov
data16
in
pop
jle
mov
jmp
fiaddl
mov
lods
dec
inc
and
xor
ja
xorb
inc
and
pop
loop
dec
sub
and
or
or
mov
insl
add
add
ret
add
cmp
mov
stc
push
cli
dec
add
push
je
jmp
jecxz
adc
add
cltd
or
push
out
insb
loop
je
jb
pusha
pop
repnz
dec
xor
sbb
mov
or
or
mov
mov
add
or
insl
mov
ja
stc
xchg
cld
dec
add
arpl
or
lea
mov
jmp
rcll
mov
push
jno
jle
and
sbb
mov
jmp
lret
mov
test
cmp
pop
fwait
or
push
add
loop
fisttpl
push
sbb
or
jmp
ljmp
jmp
xchg
sbb
aad
shlb
or
cmc
xchg
jmp
jmp
sub
loopne
adc
xor
xchg
or
pop
xor
inc
cld
mov
cmp
jb
jmp
jmp
out
lock
scas
and
mov
adc
out
in
jg
inc
jb
jmp
add
cli
insb
loop
je
or
xor
ss
ja
sbb
rcrb
mov
stc
jns
dec
add
add
cmp
jmp
adc
push
jno
aaa
push
xchg
add
mov
xchg
adc
xor
jmp
ja
sbb
rcrb
mov
stc
lret
clc
dec
add
mov
fmuls
adc
jmp
inc
fisttps
flds
mov
test
jmp
jge
xchg
add
add
decl
test
repz
push
jmp
lea
call
pop
lea
push
movb
jmp
push
roll
aad
jno
cmp
shr
push
jmp
xchg
adc
in
sbb
stc
jp
jp
jo
add
sbb
cmp
jmp
mov
mov
add
add
ja
fisttps
fnstenv
aaa
mov
inc
mov
cld
cmpsl
scas
icebp
int3
mov
jmp
inc
push
xor
es
jecxz
jne
sub
xchg
and
dec
adc
jmp
loop
cmpsb
jmp
pop
xlat
inc
and
sub
dec
fistpll
mov
xchg
jb
dec
cs
sub
pushl
sbb
rcrb
mov
stc
dec
add
stos
into
cmp
shll
icebp
push
jmp
rclb
push
clc
les
imul
notl
and
mov
and
jmp
or
sbb
sbb
mov
ja
sbb
or
or
mov
add
add
sbb
mov
cld
dec
add
dec
sub
outsb
sub
add
data16
lahf
lea
push
mov
call
jmp
aaa
mov
push
aad
jmp
jmp
jp
ja
loope
imul
and
lods
call
jmp
pop
jmp
ret
jmp
cmc
imul
sub
push
jle
call
pop
jmp
leave
jmp
add
jg
cmp
call
inc
imul
cmp
push
xor
scas
leave
cmp
aas
mov
or
jne
push
call
jmp
loope
hlt
xchg
outsb
mov
enter
jecxz
pushf
jmp
sub
pop
jmp
mov
jmp
mov
and
sti
ficoml
mov
fstpt
inc
dec
sub
or
sbb
sbb
mov
sbb
or
or
dec
or
add
or
mov
or
mov
mov
ja
stc
jno
dec
add
notb
mov
es
mov
jne
dec
sub
add
add
shrb
fbld
mov
decb
push
jmp
xor
pusha
jmp
mov
lods
mov
xchg
ljmp
aas
scas
lret
aad
aad
dec
sti
stos
fldl
fildl
fildl
pushl
jmp
mov
mov
addr16
gs
dec
insl
std
test
mov
ja
mov
cwtl
or
mov
mov
push
lahf
push
in
in
mov
mov
mov
mov
andb
sub
jmp
or
cltd
roll
add
sub
pushf
xor
inc
sub
push
xchg
add
lret
inc
ffreep
sar
inc
adc
sti
imul
insl
in
jno
fwait
rorb
jecxz
jmp
outsb
jne
jmp
xor
cmp
cs
and
jge
xor
sbb
ja
sbb
rcrb
mov
stc
daa
sti
dec
add
and
add
adc
xor
int3
sbb
add
add
xor
adc
dec
add
mov
shrb
sbb
add
add
mov
clc
add
push
ficoms
pop
je
popa
mov
jmp
sub
jns
cmp
jmp
imul
sbb
push
push
popl
jmp
into
inc
fidivrl
fstpt
pop
cmp
in
jg
push
xor
add
mov
add
cmp
jmp
sbb
sarb
es
pop
test
stc
jbe
cmpl
mov
xor
mov
stos
mov
jmp
adc
call
rclb
xchg
mov
rolb
mov
out
in
cmpsb
addl
jmp
mov
testl
call
pop
cmp
sbb
and
stos
jmp
lods
jns
bound
jns
jmp
mov
jg
jne
out
pop
jmp
add
dec
or
ja
sbb
rcrb
mov
adc
ja
sbb
sbb
mov
decb
push
test
push
call
add
js
je
out
imul
cmp
add
jmp
stos
das
mov
lret
lret
jle
add
add
call
leave
dec
fistpll
js
ljmp
lea
cmp
dec
add
stc
sub
push
add
add
inc
imul
add
add
adc
add
add
shlb
mov
add
add
mov
sbb
mov
stc
dec
in
dec
add
push
cld
adc
jp
jp
mov
shll
imul
push
pushf
jmp
mov
test
cmp
xchg
sbb
jns
jmp
jnp
popa
mov
mov
jmp
iret
inc
mov
xchg
sub
repz
mov
pop
test
mov
jmp
add
mov
jmp
xor
sti
imul
push
jae
jno
jecxz
inc
aam
sub
popf
in
movsb
adc
lahf
neg
add
xchg
popf
pushl
jmp
stos
push
sub
jmp
push
int3
and
jmp
mov
pusha
hlt
push
cld
dec
push
rclb
addr16
test
lock
pop
lret
pop
ds
jnp
xor
xor
lock
bound
out
mov
movb
sub
shrb
rcrb
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
mov
add
mov
mull
stc
mov
dec
add
mov
movzbl
jmp
mov
in
sbb
jne
js
ljmp
push
fisubs
xchg
mov
push
incl
add
mov
jmp
das
lods
cmp
out
adc
or
inc
and
das
inc
in
leavew
add
jmp
sahf
pop
out
imul
and
dec
frstor
jo
mov
jmp
push
cmp
jmp
popa
jmp
mov
jmp
add
add
jmp
pop
xchg
or
jle
or
das
mov
and
mov
ret
aad
test
ret
into
inc
mov
out
pop
xchg
repnz
aam
into
test
sbb
jo
dec
add
aam
dec
add
shlb
shrb
sub
and
or
sbb
sbb
adc
adc
stc
dec
rorb
push
adcb
out
mov
lahf
punpckhdq
add
pop
jno
sbb
and
jmp
test
jecxz
fwait
or
pop
xchg
or
fildl
lods
js
jg
jmp
mov
or
rolb
add
jmp
lret
xchg
fs
xor
push
sbb
imul
jmp
lahf
or
jg
mov
cmp
aaa
cmpsl
ret
mov
add
add
and
mov
scas
fisttpl
push
push
and
std
add
call
dec
xlat
inc
and
cmp
cmp
mov
cmpsl
jns
jne
out
push
pop
repnz
fs
sar
cmpsb
fimull
shlb
shrb
sub
and
or
sbb
sbb
adc
adc
stc
inc
add
add
add
dec
mov
loope
adc
ss
pop
loop
test
xchg
repnz
outsl
jmp
push
in
sbb
inc
mov
mov
push
mov
lods
lret
inc
mov
out
adc
dec
sbb
cmp
das
mov
lock
inc
xchg
mov
sbb
lcall
sahf
aaa
int3
pop
enter
xlat
inc
mov
jmp
adc
arpl
jg
jnp
in
sub
add
adc
ret
jnp
in
add
pop
lret
pop
ds
pusha
jmp
add
add
jbe
loopne
mov
stos
into
cmp
clc
or
rclb
mov
and
dec
and
jl
jne
jno
stc
out
jnp
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
pushf
pop
inc
int
and
orb
cli
or
or
jnp
pusha
pop
repnz
dec
adc
inc
jecxz
loop
je
push
je
out
sub
jp
jp
sbb
dec
fimuls
dec
out
jle
mov
mov
ljmp
jle
jg
jmp
push
mov
ljmp
mov
mov
inc
mov
mov
icebp
push
rcrl
loopw
daa
mov
and
and
sbb
add
dec
iret
pop
cmp
xor
shll
pusha
pop
repnz
ret
lcall
notb
adc
arpl
pop
int
addl
imul
test
dec
fistpll
xor
add
jno
jecxz
pop
int
and
jl
pushf
xor
adc
sbb
add
add
shlb
fbld
int
dec
add
xlat
mov
out
jecxz
push
in
mov
mov
das
test
jae
xchg
jns
bound
fistpll
dec
sub
cmp
mov
inc
mov
iret
push
les
dec
das
ficompl
xor
int
mov
aad
sbb
loope
notl
daa
inc
mov
mov
hlt
xlat
dec
add
mov
push
add
mov
ja
sbb
shrb
mov
or
push
roll
dec
mov
push
mov
in
cmp
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
sbb
add
add
fcomip
dec
add
fcmovu
mov
stc
jnp
push
add
add
test
jge
outsb
adc
xchg
sbb
pop
idivb
mov
rcrl
xchg
cmpsl
lods
daa
mov
and
inc
cmc
add
jb
jo
loop
or
mov
mov
and
pop
repnz
jp
jp
rorb
mov
fs
cmp
lahf
jg
call
sub
sub
and
xor
mov
iret
cmp
and
adc
or
je
pop
xchg
adc
ds
pop
fisttpll
out
pop
fimuls
adc
lock
add
and
ja
sbb
shlb
fbld
stc
int3
add
jne
mov
pop
fdivl
in
mov
fldenv
aad
xor
fdivl
in
inc
lret
lret
movsl
xor
lock
xor
push
mov
push
jns
roll
mov
jmp
mov
cmp
cmpsl
aaa
cmpsl
ret
adc
push
mov
mov
sbb
sub
lahf
add
std
or
insl
sti
imul
adc
mov
js
popa
dec
rolb
rclb
jae
xchg
pop
fdivl
in
sub
cmp
dec
adc
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
sbb
add
add
movsb
out
dec
add
cmp
mov
stc
fldl
inc
fidivrl
insl
hlt
pop
loopne
hlt
push
cld
add
pushf
xor
jae
and
xchg
add
xor
mov
add
add
mov
mov
or
mov
mov
mov
push
add
push
xor
cmp
jnp
test
in
lock
movsb
cmp
or
inc
and
repz
mov
shlb
pop
aas
lret
aam
sub
movsl
int3
aas
mov
mov
inc
mov
jg
jg
jmp
adc
inc
jns
arpl
cmc
inc
mov
mov
and
cld
bswap
push
mov
inc
fdivl
in
mov
mov
mov
js
push
fiadds
mov
enter
pop
lods
gs
insb
or
out
push
js
ljmp
in
arpl
jnp
in
adc
adc
pop
enter
fs
adc
pop
xchg
sbb
test
pop
inc
and
cmp
insl
std
test
dec
lds
iret
push
xchg
jb
pop
ljmp
and
rclb
jbe
push
dec
sbb
ja
sbb
rcrb
mov
sbb
add
stc
rorb
popf
sbb
mov
stc
xor
dec
add
xchg
cmc
add
outsb
cld
fwait
jbe
insl
std
test
mov
xlat
dec
add
mov
push
add
xor
xor
mov
add
add
mov
add
sbb
rclb
mov
or
mov
mull
stc
rorb
fbld
shlb
and
sbb
lods
sbb
imul
insl
int3
dec
aad
sub
push
repz
fiaddl
mov
test
outsl
lcall
or
sbb
mov
out
ljmp
stc
out
cmc
jnp
mov
outsb
in
jge
notl
jp
xchg
cmc
add
pop
fdivl
in
xor
inc
ret
ret
pop
lea
xchg
repz
in
xchg
pushf
sti
push
repnz
mov
cltd
adcb
out
movsl
das
mov
mov
pop
mov
jle
cmp
adc
outsl
fcoml
adcl
cs
cwtl
push
imul
fs
popf
insb
lret
daa
stc
fstpt
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
je
jl
divb
mov
jle
popa
and
adc
sbb
mov
repz
jge
je
insl
test
std
or
xchg
adc
jmp
push
in
adc
mov
outsb
ljmp
test
dec
fstpt
ret
cmpsb
push
mov
adc
stc
imul
and
adc
imul
insl
mov
cs
insl
loopne
adc
inc
sub
test
ja
sbb
shrb
mov
stc
jns
push
add
scas
lret
scas
lods
lret
inc
idivl
test
push
rclb
jno
dec
frstor
scas
pop
in
or
dec
fdivrs
push
cmp
das
mov
and
lret
mov
mov
push
roll
aad
jo
pusha
pop
repnz
xor
xor
or
or
mov
mov
or
mov
mov
mov
push
add
scas
xor
out
jne
mov
and
push
lds
and
xor
stos
cmp
arpl
sub
xor
mov
in
sbb
or
fucomi
imul
pop
into
test
imul
adc
xchg
cmc
add
dec
push
xor
sub
popf
jg
mov
test
mov
cli
mov
cld
inc
lret
lret
repnz
pop
repnz
scas
inc
shll
cmp
sbb
arpl
xchg
gs
or
sub
inc
shlb
xchg
testb
mov
es
xchg
or
lea
mov
sbb
cld
pmulhw
dec
fstpt
pop
cmp
push
popl
jl
insl
hlt
pop
in
arpl
jno
jecxz
and
ret
dec
fstpt
pushf
sti
push
ror
ret
cmpsb
push
cmpsb
inc
lret
pop
ds
inc
into
pop
cmp
and
stc
mov
push
add
stc
testb
jl
notb
rolb
shlb
dec
frstor
jg
sub
mov
mov
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
aaa
push
push
add
jl
mulb
arpl
jge
divl
inc
int3
inc
and
mov
adc
movsb
cmp
sbb
jl
push
mov
jge
je
sub
icebp
popa
add
inc
mov
mov
and
lahf
pop
sbbl
mov
mov
xchg
jb
addr16
cli
xor
mov
sahf
stc
or
pop
lret
scas
pop
mov
lock
sbb
jno
mov
stos
xor
in
sbb
sbb
jge
je
insl
aas
mov
pushl
jl
cmpsb
xor
scas
dec
inc
into
pop
cmp
and
jbe
and
mov
lock
push
xor
push
cli
dec
outsl
cld
xchg
cmc
add
cmp
add
inc
mov
jmp
int
jg
jle
call
pop
add
fbld
sbb
add
add
cmp
or
mov
mov
stc
in
or
add
inc
and
data16
nop
arpl
movsl
cmp
jb
jl
test
shlb
sbb
ja
sbb
sub
mov
mov
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
xor
aaa
dec
push
add
add
sahf
jl
jo
xorl
dec
cmpsb
mov
ret
fs
jns
and
sbb
rcll
mov
xchg
adc
push
fisttpl
frstor
mull
mov
stos
int
leave
sub
js
mov
outsl
in
sbb
ja
loope
xchg
sbb
pushf
adc
rcll
adc
ret
add
jns
mov
int3
pop
int3
stos
data16
stos
inc
aam
sub
xchg
testb
mov
mov
lods
aas
scas
lret
cmp
add
aas
mov
inc
mov
cmp
shll
mov
jmp
and
mov
jg
pusha
pop
repnz
aas
and
jmp
mov
add
jmp
lahf
adc
lahf
mov
divl
jmp
icebp
inc
and
cmp
cmp
and
popl
jmp
sub
pop
aas
lret
pop
jmp
or
adc
add
add
shlb
fbld
mov
push
add
sti
sahf
insl
ret
ds
imul
add
call
push
fmuls
shrb
stc
add
call
push
call
jmp
jge
jns
jmp
shlb
ret
jmp
and
push
jmp
pop
jmp
int3
popf
mov
jmp
call
jmp
rcll
pop
notl
shlb
sbb
add
add
mov
lea
push
add
iret
pop
addr16
popf
xor
or
add
pop
iret
stos
pop
rol
fs
add
shrb
sub
and
or
sbb
sbb
adc
adc
sub
rolb
jmp
popf
jmp
mov
jmp
pop
jnp
add
add
jmp
ljmp
addr16
jmp
shrl
call
jmp
jg
jp
in
push
aad
fsts
sub
call
sub
adc
add
pop
lret
scas
pop
mov
jae
pusha
jmp
call
jmp
add
incl
jmp
call
jmp
iret
push
mov
mov
and
xor
jmp
stos
das
mov
es
cs
cld
jl
jne
insb
or
js
shlb
mul
xchg
jmp
xchg
inc
or
test
mov
jmp
sub
jmp
addl
testl
push
mov
lcall
cwtl
mov
add
push
sti
incl
notl
xchg
add
popa
jmp
repz
mov
aaa
jo
jmp
test
int3
popf
or
outsl
mov
mov
add
mov
enter
popa
sbb
jmp
mov
inc
adc
jge
imul
pop
pop
inc
and
sub
pop
jmp
das
push
dec
sub
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
mov
push
add
aas
pop
test
jne
inc
or
jae
incl
add
mov
jmp
add
jmp
jbe
imul
lock
aam
fisttps
adc
test
ficoml
push
xor
jo
cmp
mov
in
push
and
sbb
and
add
add
sub
jmp
jb
xchg
adc
adc
les
int3
cs
add
stc
add
push
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
pop
adc
push
add
add
test
loope
out
jno
sbb
push
nop
push
popa
nop
and
adcl
test
dec
fisttpll
out
sub
fmuls
fcomps
mov
add
jb
js
ljmp
popl
jmp
mov
mov
jmp
push
test
stc
imul
mov
mov
incl
dec
lea
jmp
jno
push
jmp
outsb
repz
cmc
sbb
jg
jmp
mov
cmpsb
pushf
imul
jmp
rolb
add
jmp
xchg
xchg
repnz
lods
sub
dec
fstpt
mov
cld
stc
hlt
xlat
dec
add
mov
push
add
subl
xchg
clc
cli
mov
fcomps
pop
add
add
cmp
out
jo
mov
xchg
lock
lret
mov
lods
push
fisttpll
out
fsubrl
sbb
ja
sbb
cld
call
and
mov
dec
pop
push
add
sbb
add
shlb
fbld
jne
push
add
pop
jmp
mov
jmp
adc
xor
push
xchg
and
jbe
cmpl
aam
jmp
sub
mov
ljmp
test
dec
sub
outsl
test
test
push
mov
jge
jmp
int3
pop
repnz
fs
pop
mov
insl
mov
mov
into
pop
cmp
addr16
outsl
stc
imul
sub
add
xchg
popf
pushl
jmp
fisttpl
mov
mov
mov
mov
andb
sub
jmp
mov
jmp
jg
jnp
in
sub
fiadds
mov
movsb
in
mov
inc
adc
jo
jmp
add
sub
and
imul
insl
adcl
add
adc
dec
fidivrs
popa
add
cmp
out
jmp
cmp
jmp
mov
ror
dec
fistpll
mov
repz
cmc
or
xor
sub
mov
xor
loop
push
add
arpl
cmc
and
sub
adc
jmp
push
rolb
shlb
xor
and
inc
pop
fisttpl
fnstsw
mov
mov
mov
add
cmp
jmp
fwait
daa
mov
jmp
and
pop
fisttpl
cltd
adc
inc
fistpll
popa
jmp
jmp
xor
popl
jmp
shlb
xchg
gs
dec
fstpt
cmp
or
bound
test
cmpl
xchg
testb
dec
cli
imul
lods
lea
jmp
dec
fmuls
fsubrs
je
lea
jb
xchg
mov
sbb
add
add
xor
mov
stc
fs
add
fs
pop
sbb
outsb
popa
xor
jo
js
ljmp
popa
in
jnp
mov
fiadds
mov
mov
mov
test
je
mov
imul
jmp
and
jmp
mov
dec
ret
shrl
push
cld
jnp
in
sbb
and
adc
in
sbb
hlt
aaa
cmp
sbb
jmp
lds
mov
and
jmp
imul
inc
inc
push
jmp
mov
and
negb
sahf
or
cmpsb
pop
dec
leave
pop
cmp
push
mov
movsl
int3
aas
enter
shrb
shrb
mov
add
add
mov
mov
or
mov
mov
mov
push
add
shlb
shrb
ret
mov
xor
jo
push
add
dec
sub
xor
jge
pushf
jmp
adc
or
cmpsb
push
xlat
pop
repnz
xchg
dec
sub
cmp
dec
frstor
fucomp
sbb
lcall
inc
sub
jp
pop
rcrb
xor
jmp
jbe
outsl
or
sarl
mov
dec
mov
test
enter
add
add
jmp
pop
leave
pop
cmp
jg
out
adc
inc
std
jae
xchg
mov
popf
jmp
jne
daa
jmp
mov
inc
mov
xlat
inc
xlat
mov
ljmp
cltd
push
cmp
jg
xchg
jmp
pusha
jmp
cmc
gs
pop
jl
je
out
sub
cli
sbb
push
cmp
daa
mov
pop
sub
add
jmp
in
adc
imul
push
std
jl
cltd
xchg
add
add
push
mov
gs
pop
or
jmp
stc
cwtl
imul
sub
sub
add
add
mov
mov
or
mov
mov
mov
push
add
and
imull
enter
mov
adc
shrb
sub
and
or
sbb
sbb
adc
adc
or
dec
movzbl
add
cmp
je
jmp
xor
gs
gs
or
mov
in
gs
pushf
outsl
sahf
in
jmp
or
jmp
orb
clc
or
jmp
mov
push
mov
xchg
repnz
jecxz
cmp
jne
addl
mov
jmp
jbe
outsl
or
ror
inc
shll
mov
jmp
add
mov
mov
sbb
stos
jne
jnp
in
pop
inc
mov
add
add
jmp
in
jmp
jge
es
inc
mov
test
and
mov
lea
jmp
adcl
lcall
mov
das
enter
inc
adc
jp
ja
loope
rorl
mov
scas
rolb
push
call
sbbb
ljmp
push
mov
or
push
sbb
or
andb
sub
jo
mov
jmp
dec
push
call
ret
jmp
sbb
cmc
sbb
add
pushf
repnz
jmp
add
push
inc
and
pop
imul
sbb
add
sub
push
push
fisttpl
fnstsw
push
insl
jmp
push
call
fs
pop
loop
xchg
xchg
icebp
add
push
lcall
stc
movsb
adc
shlb
shrb
sub
and
or
sbb
sbb
adc
adc
stc
mov
add
movsb
daa
mov
and
jae
outsl
or
hlt
push
fstpt
sti
adc
call
add
jmp
popf
jmp
lret
inc
shll
pop
jb
jl
dec
fidivrs
xchg
testb
inc
and
jmp
xchg
sbb
xchg
add
xor
jno
fisttps
jmp
cmpsb
cmp
pop
movsl
xor
adc
jp
pushl
mov
jmp
loope
in
jg
pop
iret
pop
cmp
jle
fisttpll
out
dec
fstpt
leave
clc
xchg
inc
or
es
lds
stos
data16
data16
xchg
outsb
test
mov
jmp
jns
jbe
loopne
inc
jecxz
push
in
sbb
movsb
es
cs
sbb
ja
sbb
shlb
fbld
stc
in
and
push
imul
xchg
sbb
mov
inc
mov
xchg
mov
shlb
shlb
mov
or
or
mov
mov
or
mov
mov
mov
push
add
out
sub
popa
sbb
jmp
pop
jecxz
push
in
or
and
pop
mov
ljmp
add
add
and
mov
xor
push
add
xchg
cld
pmulhw
jne
mov
ficomps
scas
pop
mov
orb
xor
sub
sub
and
or
sbb
sbb
adc
adc
out
call
add
add
add
jmp
mov
add
jmp
and
and
push
in
jge
testl
aaa
xchg
jecxz
movzbl
jmp
sbb
add
inc
cmpsb
sub
insb
or
mov
out
pop
cmc
sbb
mov
jmp
add
add
xlat
add
jmp
js
jmp
cld
insb
loop
je
push
push
xor
lds
mov
cmpsb
shll
in
punpckhdq
sar
inc
adc
popl
jmp
mov
mov
and
pop
call
sub
scas
aas
pop
test
shlb
xor
adc
jmp
lea
jmp
jmp
out
jo
or
pop
push
xor
lods
push
cmp
je
popa
mov
jmp
loopne
xor
movsl
xor
fistpl
and
mov
push
call
lock
xorl
sub
pop
push
call
pop
xchg
jb
jno
push
les
add
popw
sbb
stc
hlt
xlat
dec
add
mov
push
add
mov
or
or
cld
call
and
mov
dec
das
push
add
xchg
mov
mov
add
call
movl
inc
aad
dec
mov
fdivrl
xor
loope
sub
or
add
push
call
mov
ret
jmp
jge
add
mov
add
call
loopne
loop
je
mov
pop
jmp
sbb
adc
setg
or
dec
clc
ds
push
call
pushf
jmp
pop
sub
add
jmp
gs
push
cld
push
inc
fisttpl
sti
imul
push
jl
sbb
mov
fcmovnu
dec
fistpll
cmc
pushf
outsl
lret
inc
and
jmp
test
pushl
jmp
and
mov
pop
rclb
sub
adc
sbbl
push
add
stc
pop
push
push
add
and
jmp
pusha
jmp
sub
dec
xlat
inc
and
pop
lea
and
xchg
pop
fisttpll
out
push
dec
popf
jmp
xchg
mov
ljmp
and
inc
or
clc
add
add
push
shll
shlb
leave
fistps
stos
sbbw
ja
sbb
rcrb
fbld
ja
sbb
or
or
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
mov
add
mov
mull
stc
shlb
push
add
mov
push
xor
xor
mov
andb
sub
jmp
mov
jmp
arpl
jp
in
cmp
jns
jmp
stos
sub
push
jmp
jnp
mov
sub
lock
insl
out
adc
or
and
jmp
mov
shll
mov
sub
icebp
aad
sub
movsl
sub
in
bound
xchg
cmc
add
mov
or
ljmp
add
stc
js
push
add
sbb
add
fbld
stc
inc
and
push
cs
push
lds
fisttpll
mov
add
jmp
mov
cwtl
fimull
mov
add
and
cmp
jmp
and
dec
fisttpll
out
adc
fimuls
pop
and
ret
jne
addl
mov
jmp
loope
jmp
sbb
fisubrs
sub
popa
out
ljmp
ficomps
cmp
in
mov
dec
inc
lods
je
jmp
add
or
sbb
insl
in
jae
addr16
ss
into
lock
inc
adc
push
rolb
sarb
xor
sub
push
icebp
jo
xorl
add
add
jmp
ficompl
fs
popl
jmp
mov
cmpsl
ret
dec
int
and
and
inc
xlat
mov
cmpsl
orl
rclb
adc
mov
or
or
mov
add
sbb
rclb
mov
or
mov
mull
stc
jo
push
add
mov
leave
test
stos
aam
int
xchg
ja
loope
mov
lea
jmp
xchg
mov
xchg
icebp
add
scas
jns
sbb
jmp
dec
fnstcw
mov
or
jp
jp
bound
sbb
sbb
mov
stc
loop
push
add
cmp
mov
scas
xlat
ret
jmp
fcos
je
or
pop
mov
jmp
inc
fisttpl
fnsave
std
insl
hlt
pop
mov
push
lret
cmc
pop
dec
pop
cs
add
add
cs
mov
iret
cmp
addl
fnstcw
push
test
je
push
jmp
fwait
add
fs
popf
insb
test
outsl
call
enter
in
jno
jmp
pop
rclb
inc
fs
imul
lock
bound
imul
and
inc
jmp
mov
jmp
jp
outsl
or
out
frstor
xchg
mov
int
adc
shlb
sbb
add
add
adc
mov
sub
push
test
mov
fdivl
in
pop
adcb
adcb
pop
and
and
test
cmp
fbld
stc
loopne
push
add
test
push
idivb
push
cld
jne
hlt
inc
lcall
or
or
sbb
mov
stc
and
sub
inc
add
rolb
mov
and
add
cmp
dec
mov
ret
mov
mov
push
push
call
mov
mov
push
call
jmp
hlt
jp
jp
dec
adc
add
imul
call
mov
das
dec
fistpll
test
or
in
mov
out
adc
pop
push
push
mov
call
mov
pop
push
call
push
jmp
pop
jmp
rcll
push
sti
pusha
out
pop
jmp
mov
mov
and
cld
push
pop
lret
lret
roll
sarl
push
call
cmp
jmp
adc
add
jmp
sbb
mov
inc
mov
imul
jmp
cmc
mov
jmp
lds
stos
data16
aam
insb
loop
je
mov
mov
shl
or
adc
cld
call
and
mov
push
sbb
add
sbb
ja
sbb
adc
mov
aad
push
add
fsubrs
push
add
add
repz
notb
add
sahf
das
lea
aad
push
mov
ds
test
jecxz
in
jg
pop
xchg
add
xor
cmp
daa
mov
mov
jb
xchg
ljmp
stc
or
lds
icebp
add
aas
mov
icebp
ja
xorb
or
out
adc
adc
ja
xorb
xchg
mov
test
jge
fs
add
sahf
insl
xchg
and
mov
xchg
jb
mov
jg
jns
jge
je
and
and
add
jae
mov
xchg
inc
aad
sub
imul
cmpsl
xor
scas
cmp
pop
roll
aad
xchg
add
jbe
loopne
roll
inc
mov
jmp
jmp
pop
inc
jmp
leave
dec
fdivrs
sbb
arpl
pop
xchg
fs
sbb
ja
sbb
cld
call
and
mov
scas
and
push
outsl
jns
stos
push
push
jmp
fistps
stos
pop
cltd
das
test
pop
test
lds
mov
mov
pop
mov
cmc
pop
jmp
mov
jmp
pusha
jmp
push
test
jge
jg
out
jl
notb
sahf
or
cmpsb
inc
pop
xlat
inc
and
sub
inc
sub
jmp
mov
cwtl
cwtl
adc
loope
dec
push
fildl
mov
xchg
pushl
jmp
clc
pop
fmuls
rcrb
cmpsb
push
xchg
add
test
iret
pop
repnz
fs
lcall
incl
mov
jmp
jle
jl
testb
scas
leave
cmp
xlat
xchg
xchg
adc
add
add
sbb
mov
stc
hlt
sub
push
xchg
add
popa
jmp
mov
jo
pop
cmp
jmp
and
jmp
movsl
aaa
cmpsl
ret
arpl
fs
pop
dec
aad
sub
push
cmp
hlt
mov
andb
sub
jmp
and
sub
cltd
roll
add
lds
sbb
dec
fisttpl
fstpl
cmp
rol
sar
inc
adc
fs
imul
mov
das
in
insb
or
out
rcll
mov
addl
jmp
mov
mov
jmp
mov
mov
testb
pop
jp
inc
lahf
sbb
sarb
ret
jne
jmp
jo
pop
jb
cmpl
ss
jmp
mov
in
cld
cmp
lock
mov
jl
push
sub
shlb
sbb
ja
sbb
rclb
mov
and
push
outsl
cwtl
pop
jae
xchg
jmp
wrmsr
dec
popl
lea
jmp
cmc
mov
inc
or
add
bound
or
add
lahf
punpckhdq
scas
pop
test
pop
mov
hlt
and
stc
mov
jmp
or
pushf
xor
data16
clc
push
lahf
push
js
jns
jmp
xchg
adcb
sub
jmp
ds
cmp
mov
xlat
inc
aam
dec
out
fimull
fisubrl
ja
xorb
cmp
je
popa
mov
jmp
cmp
push
jmp
xchg
or
mov
gs
xor
clc
call
jmp
adc
cmpsb
inc
shll
and
clc
xor
and
pop
dec
stc
adc
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
jnp
sbb
ja
sbb
sbb
mov
stc
jno
push
add
pop
xor
pusha
sbb
add
xor
mov
stc
cmp
adc
sbb
or
pop
xchg
ja
xor
movb
movb
movb
movb
jmp
jp
outsb
or
xor
icebp
ja
gs
adc
test
movb
jmp
sti
movb
jmp
movb
jmp
push
inc
and
and
dec
sub
xor
nop
sbb
xor
push
push
push
push
call
dec
mov
mov
jmp
sbb
std
movb
movb
movb
movb
movb
jmp
push
ret
cmpsb
push
mov
sbb
subb
fistpl
inc
lret
dec
movb
jmp
movb
jmp
dec
push
xor
sub
movb
jmp
movb
jmp
scas
and
jbe
outsb
or
pop
int3
inc
shll
inc
and
sbb
cld
call
and
mov
mov
push
add
aad
jmp
call
int3
jno
jno
jecxz
loope
loopne
jb
cmp
add
jae
inc
iret
push
movb
movb
movb
movb
jmp
movb
jmp
pushf
or
in
movsl
fimull
mov
xor
adc
or
push
xchg
int3
movb
jmp
xchg
shll
push
popa
repnz
xchg
outsb
fsts
pop
cmp
lds
xchg
xchg
sbb
add
xor
mov
stc
inc
sub
cmp
push
test
push
cld
setne
add
test
ja
sbb
rcrb
fbld
stc
call
and
xlat
inc
and
pop
movl
movb
movb
movb
jmp
jl
jne
dec
pop
fimull
fidivl
aad
lret
scas
pop
mov
xchg
cs
fisubs
int3
add
add
inc
in
jmp
loope
notb
or
cmpsb
pop
adc
inc
cli
fnop
xor
ja
sbb
adc
mov
xor
push
cwtl
mov
xor
xor
add
add
mov
mov
add
mov
mov
mov
add
stc
jno
push
add
lods
fbld
stc
outsb
xor
push
stc
outsl
push
push
add
mov
jbe
inc
out
jmp
into
dec
fdivrs
and
jno
xorb
sbb
inc
in
jmp
rcrb
stos
pop
test
inc
out
jmp
repz
mov
push
fimuls
adc
add
sub
inc
fbld
inc
loopne
movb
movb
movb
jmp
pusha
in
jge
mull
jge
addr16
cmp
in
dec
pop
movb
movb
movb
jmp
mulb
insb
fidivl
or
leave
test
call
push
imulb
movb
jmp
inc
rolb
shlb
adc
in
sbb
enter
shll
sahf
cmp
sbb
add
add
adc
mov
sub
push
sbb
mov
out
sti
pusha
notb
xchg
inc
out
jne
inc
out
jbe
pop
repnz
lahf
push
imulb
test
dec
aam
sub
aaa
cmpsl
popf
movb
jmp
dec
fisttpl
fstpl
push
jno
dec
addr16
sbb
or
jae
inc
in
je
mov
out
push
xchg
add
inc
icebp
js
jno
jno
xorb
repnz
xor
cs
in
sbb
xor
jae
ret
push
lds
sub
enter
sbb
add
xor
mov
stc
pop
sub
add
movsl
movb
jmp
cmp
push
lds
add
iret
ds
mov
jmp
mov
rcll
popf
or
ret
push
lds
pop
jo
movsl
add
movb
movb
movb
movb
movb
jmp
ficoms
mov
mov
jmp
pop
pop
jnp
lea
jmp
adc
jmp
fists
mov
mov
pop
jp
xor
pop
int3
stos
data16
sti
mov
inc
stc
xor
movb
movb
movb
jmp
cmp
cmp
fs
movsbl
push
pop
xor
div
mov
jmp
push
lds
call
jmp
cmpsl
movsb
ret
ds
push
cwtl
int3
cmp
jmp
clc
mov
jmp
sbb
stos
cmp
add
mov
dec
mov
xor
sbb
ja
sbb
sbb
mov
stc
subl
push
out
jne
jl
jmp
repnz
add
subl
jmp
mov
jmp
adc
lcall
or
and
mov
push
add
loope
push
add
add
aad
mov
jle
arpl
mov
mov
and
push
xor
or
push
popf
or
jno
xorb
cmp
sub
push
roll
sarl
mov
test
cmp
jbe
xchg
testb
insl
outsl
out
adc
sbb
andl
in
sbb
cmp
add
sbb
xchg
daa
js
jns
jmp
fisttpl
mov
jbe
loopne
mov
aad
xchg
push
rclb
imul
add
jl
jne
insb
lods
call
jmp
loop
adc
add
adc
in
cmc
pushf
outsl
movsb
inc
mov
add
shlb
fbld
rcrb
add
mov
es
stos
sub
push
lahf
push
loopne
hlt
xchg
outsb
nop
cmc
movsbl
jmp
and
adc
insb
pop
jmp
test
div
jmp
xchg
adc
ret
ret
pop
lret
scas
pop
test
cwtl
pop
and
scas
jmp
xor
mov
int3
jae
push
xchg
fstpl
push
jmp
adc
mov
scas
lret
jb
insb
or
fwait
jbe
das
mov
sbb
pushl
shr
popf
lds
lods
pop
jmp
mov
xchg
aas
xchg
test
push
scas
jo
ja
loope
lock
sbb
push
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
clc
sbb
add
add
adc
stc
push
mov
jle
imul
xchg
sbbb
call
add
pop
cmp
rcll
jo
es
xchg
ret
lods
pop
cli
mov
add
add
and
mov
cmp
add
cmp
jmp
int3
push
les
mov
sbb
mov
lret
and
inc
jmp
jl
jmp
lahf
pop
xchg
repnz
cmp
xor
lea
call
jmp
add
lret
dec
fnstcw
jmp
test
mov
add
ds
ljmp
insb
or
shll
jp
in
sbb
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
or
dec
mov
mov
mov
add
loop
hlt
push
cld
adc
lock
add
mov
loop
clc
lahf
push
xor
push
lds
mov
cwtl
in
popa
icebp
nop
arpl
imul
scas
ss
add
xchg
add
sahf
jbe
adc
mov
shlb
sbb
add
add
mov
pop
add
add
shl
add
stos
fbld
stc
outsb
xor
push
arpl
jle
call
mov
incl
icebp
pop
in
sub
jmp
adc
jg
inc
and
jmp
push
fdivl
in
rorl
push
sbb
mov
xchg
cmc
add
xor
jmp
mov
mov
movsb
adc
loope
push
jns
jmp
loopne
in
jle
cmp
shr
stos
shl
or
les
mov
cmp
sbb
outsb
or
pop
loopne
call
xchg
xor
pop
jmp
lret
push
mov
xchg
sti
pushl
jmp
jmp
lea
mov
sbb
jbe
imul
popa
insb
or
cmp
sub
add
add
shlb
fbld
sbbl
push
lds
sbb
call
and
mov
scas
cmp
push
dec
enter
add
push
sub
mov
jmp
jle
xchg
testb
loopne
rcll
cmpsl
push
mov
sub
adc
mov
or
or
mov
add
sbb
rclb
mov
add
mov
mull
stc
xorb
add
mov
enter
sahf
pop
shrl
inc
adc
mov
fidivs
add
sbb
pushf
xor
push
popf
mov
jmp
scas
shlb
mov
jecxz
jmp
adc
inc
into
pop
cmp
xor
loop
adc
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
jne
jmp
and
add
sbb
sahf
dec
xor
cs
mov
cld
rsm
pop
shl
fcompl
jge
ret
jmp
dec
jecxz
push
in
data16
imul
push
out
addl
jmp
stos
cmp
rcll
push
ret
xor
sub
cld
call
and
mov
or
mov
sahf
fmull
mov
jmp
mov
sbbb
cmp
jno
lods
and
ja
sbb
stc
mov
push
add
stc
cmp
push
add
pop
sbb
ja
sbb
rcrb
fbld
stc
fnstcw
push
add
jg
jmp
addr16
xor
xor
mov
add
add
mov
and
add
stc
enter
popf
sbb
push
fbld
sbb
sbb
sbb
rclb
mov
add
mov
mull
stc
jmp
mov
jne
outsb
or
pop
movsb
movsb
ret
ds
frstor
pop
push
xor
and
lahf
punpckhdq
dec
mov
shll
add
add
jmp
jno
jl
divb
push
xchg
repz
movl
scas
pop
mov
add
cmp
je
popa
mov
jmp
dec
int
and
xor
frstor
jbe
loopne
jecxz
es
lea
jmp
mulb
nop
arpl
dec
aad
sub
push
inc
fisttpll
out
dec
loope
sti
sahf
insl
sahf
mov
mov
shll
stos
int
fimuls
xchg
mov
shlb
shlb
mov
add
add
mov
mov
or
mov
mov
mov
push
add
dec
mov
add
add
shlb
fbld
loope
push
add
in
jle
lcall
mov
xchg
xor
push
mov
push
pop
lods
ds
sbb
xor
sub
sub
and
add
sbb
sbb
adc
adc
or
imul
adcl
loop
test
dec
dec
pop
enter
roll
mov
jmp
addl
ja
sbb
and
mov
stc
loope
push
add
add
and
mov
inc
mov
xor
sbb
adcl
int
and
push
imul
insl
mov
mov
js
arpl
out
or
enter
shlb
push
mov
or
or
mov
adc
add
stc
in
dec
add
xor
mov
pop
sbb
rclb
mov
add
mov
mull
stc
mov
push
add
mov
and
mov
fdivl
in
aad
aam
dec
out
inc
and
outsl
fimull
mov
mov
mov
dec
mov
dec
mov
fisubrl
nop
lcall
sti
imul
sbb
dec
sub
xor
arpl
xchg
mov
imul
or
mov
js
inc
sub
rcll
mov
mov
inc
xlat
mov
mov
insl
std
test
divb
xchg
dec
int3
inc
and
and
mov
xorb
xchg
add
jne
adc
in
sbb
cwtl
push
test
push
mov
in
aas
xor
add
push
mov
or
or
add
add
and
mov
stc
dec
xor
dec
fdivrs
test
push
xlat
cmp
xchg
push
test
push
testb
and
xor
inc
aad
dec
mov
daa
mov
and
stos
cs
xlat
inc
and
aaa
push
test
jge
jg
stos
cmp
dec
orl
mov
lods
lret
inc
mov
jl
jne
and
pusha
notb
mov
and
xor
pop
enter
aam
cmpsb
mov
hlt
xlat
dec
add
mov
add
stc
adc
dec
add
mov
mov
push
add
inc
and
popa
inc
rolb
sarb
lds
iret
jl
dec
fdivrs
xchg
cld
btcl
and
adc
int3
fimuls
mov
mov
and
pop
int3
stos
mov
inc
shll
addr16
js
sub
push
ret
cmpsb
push
mov
jae
add
imul
mov
scas
aas
pop
test
mov
fstpl
test
pop
jnp
rclb
sub
mov
push
add
pop
jb
jl
cwtl
push
imul
mov
lea
xchg
lock
push
adcb
adcl
add
cld
call
and
mov
test
test
add
add
mov
and
mov
jmp
aas
scas
lret
mov
mov
and
es
xchg
pop
bound
pop
test
inc
fdivl
in
lcall
mov
pop
fistl
cmp
sub
fs
popf
insb
test
jo
loop
cmp
push
lds
sub
mov
and
out
push
lahf
push
push
fdivl
in
arpl
jle
call
inc
mov
lahf
push
test
push
in
stc
jne
mov
sbb
sub
push
cltd
or
ds
push
cld
dec
lahf
xchg
fistpll
push
mov
add
dec
fnstsw
mov
das
fwait
in
jle
mov
xchg
outsb
filds
inc
sub
je
cmp
cmp
xor
ja
sbb
adc
mov
cs
add
clc
lahf
push
cmc
notl
xor
ja
sbb
ja
sbb
rcrb
fbld
stc
das
inc
push
add
lahf
cli
or
xlat
push
adc
daa
mov
or
je
mov
jno
jl
divb
cmp
ja
xorb
push
mov
aam
dec
stos
mov
mov
fisttpl
push
mov
jg
jg
test
lods
and
dec
les
int3
adc
movsl
sub
lds
cmp
mulb
sub
sbb
add
add
adc
mov
push
inc
push
add
mov
add
add
sbb
mov
stc
jbe
push
add
jecxz
jne
orb
pop
xchg
adc
xchg
cmp
js
ljmp
mov
nop
push
popa
nop
and
mov
outsl
lcall
jecxz
jne
lock
lahf
push
cmp
lahf
add
lds
mov
scas
aas
pop
test
pop
ljmp
stc
xchg
fwait
decb
xchg
mov
insl
hlt
pop
loopne
mov
imul
aam
mov
adc
imul
in
push
iret
inc
aad
dec
test
dec
mov
outsb
leave
shlb
xchg
gs
dec
fdivrl
test
pop
mov
jnp
push
rclb
imul
lret
dec
fimull
fidivl
mov
movsl
xor
mov
inc
mov
dec
fstpt
iret
pop
cmp
adc
jne
mov
push
sub
or
or
xor
mov
daa
push
push
add
pop
inc
push
add
add
cli
lock
bound
call
leave
cmp
jo
push
test
jge
inc
push
mov
jle
arpl
jg
mov
daa
cmpsb
xor
scas
dec
ret
mov
out
mov
mov
mov
iret
pop
cmp
aas
pop
fisttpl
jno
push
jp
jp
lret
mov
mov
cmp
leave
pop
cmp
sbb
pop
movsl
pop
inc
and
jns
adc
fisttps
mov
inc
mov
std
insb
loop
je
cmp
push
lods
or
popa
hlt
push
cld
pop
call
mov
out
adc
or
mov
gs
jle
jno
xorb
push
lds
xorl
jne
in
insl
std
test
inc
lds
iret
and
cmp
sahf
pop
das
mov
jns
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
pop
jne
pusha
pop
repnz
xchg
push
out
adc
push
lock
jp
sbb
add
cmc
jle
shrb
sbb
add
mov
mov
cmc
cmp
add
push
xor
and
inc
mov
add
sbb
add
add
add
add
shlb
fbld
push
push
add
les
add
add
rep
lcall
pop
cmp
xor
int
and
aas
aad
ret
mov
jae
loop
adc
add
mov
movl
repz
gs
jbe
cmpl
lds
iret
xor
cld
js
mov
sub
dec
push
xor
cmp
push
insl
jmp
push
in
mov
jle
js
or
mov
call
lds
pop
mov
jg
sub
mov
es
hlt
fs
popf
insb
pop
leave
test
lock
xor
mov
jg
and
lods
cwtl
adc
mov
mov
add
mov
jle
sub
mov
sub
insl
int3
inc
xlat
mov
call
lods
sbb
xchg
gs
pushf
outsl
fdiv
gs
pushf
outsl
fimull
push
in
dec
fistpll
dec
or
cmp
cmpsb
jecxz
sbb
add
add
cld
call
and
mov
sbb
sbbb
call
stc
adc
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
cmp
push
lds
pop
jecxz
push
in
addl
or
jmp
std
test
leave
dec
ret
mov
addr16
ret
dec
fidivrs
xor
out
adc
sbb
das
mov
jl
jne
push
cld
jo
xorl
xchg
or
das
mov
les
pop
in
mov
mov
fisttps
fsts
adcl
test
sub
push
lds
mov
imul
push
lahf
push
adc
jecxz
call
movsl
xor
data16
xchg
outsb
jmp
iret
add
js
mov
cmp
push
xor
gs
sbb
inc
push
add
add
iret
in
jnp
mov
mov
stos
rclb
cmpsb
push
aam
loope
adc
sub
push
cld
adc
stc
adc
push
add
stc
movsl
inc
push
add
push
cmp
and
out
mov
mov
xchg
add
sahf
dec
xor
dec
mov
movsl
int3
aas
aad
push
xchg
repz
std
dec
lds
iret
das
call
test
popf
or
test
icebp
jle
mov
jg
dec
or
mov
mov
and
lret
iret
pop
cmp
pushw
lea
sti
add
sbb
add
fbld
pop
pop
push
add
sub
add
add
adcl
mov
add
rorb
push
sub
lods
stos
es
cs
dec
fstpt
stc
cwtl
imul
push
lds
aas
lret
cmp
mov
mov
and
pop
stos
sbb
mov
mov
out
dec
aam
sub
jmp
add
add
jl
jne
xor
subl
mov
add
sub
push
or
or
mov
addr16
push
add
loop
je
sbb
movsl
lods
lret
inc
movsb
mov
enter
stos
mov
pop
int
loopw
push
mov
add
shlb
fbld
adc
add
push
sbb
aad
in
scas
xor
lock
bound
sarl
push
fisttpl
frstor
pusha
mov
out
jg
jmp
testb
sub
int3
aas
outsl
lcall
dec
sub
adc
bound
cld
sub
ss
mov
xor
ljmp
push
cld
push
rclb
jno
jbe
cmpl
cwtl
push
imul
lea
je
lea
mov
inc
mov
pop
shlb
shlb
mov
add
add
mov
mov
add
mov
mov
mov
push
add
cmp
push
and
xchg
mov
es
imull
fwait
jbe
push
roll
aad
add
push
test
jge
inc
lret
dec
fidivrs
mov
cld
xchg
cmc
add
fcompl
scas
pop
movsb
mov
cli
pop
fimuls
adc
push
shll
lods
pop
scas
add
push
fdivl
in
orb
clc
or
mov
xchg
cmpsb
das
mov
xchg
add
inc
aam
dec
jmp
mov
dec
mov
fs
and
lods
cmp
mov
inc
mov
das
fidivl
insl
std
test
aaa
mov
fs
popf
insb
scas
std
data16
xchg
outsb
mov
ret
adc
add
jnp
jo
xorl
stc
cmp
call
out
or
sbb
ja
sbb
sbb
call
and
mov
jnp
push
add
insl
hlt
pop
in
xlat
push
lds
add
adc
daa
mov
and
das
test
pop
test
mov
movsb
ret
ds
outsb
jmp
dec
push
xor
cmp
jae
xchg
push
mov
es
sub
dec
mov
xchg
repz
test
stc
shrl
jne
out
das
out
clc
lahf
push
xchg
add
std
or
jns
js
ljmp
aaa
push
lret
pop
ds
push
rclb
jno
imul
insl
ret
mov
pop
jp
xor
notl
popf
push
xchg
repz
in
xchg
dec
insl
inc
stc
adc
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
dec
adc
push
push
lds
or
dec
ljmp
cltd
push
xor
push
imul
or
fs
xchg
add
ljmp
mov
ja
sbb
cld
call
and
mov
test
push
add
pop
jp
adc
sub
and
xor
ds
out
hlt
xchg
outsb
mov
inc
shll
or
dec
repz
mov
scas
sub
pusha
notb
mov
das
iret
int3
inc
fidivrl
or
adc
add
add
shlb
fbld
out
push
add
mov
sbb
mov
lods
mov
loop
mov
jno
in
cltd
push
testl
je
sub
xor
mov
push
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
sbb
push
add
add
inc
sub
cmp
outsl
ss
add
sbb
pop
xchg
pop
fistl
mov
sahf
stc
or
cmp
test
jl
jne
sub
outsl
fdivl
adc
dec
adc
test
jecxz
pop
leave
test
lcall
push
mov
xchg
jl
pop
int3
stos
data16
mov
lods
xor
push
mov
es
loop
notl
ds
test
jo
addr16
sbb
push
jp
xchg
testb
add
add
push
aaa
ret
mov
mov
mov
and
leave
cmp
dec
sti
out
jp
jp
or
mov
mov
or
add
shlb
fbld
push
pop
rcll
sub
mov
inc
mov
rorb
mov
cmp
cmp
jl
insl
hlt
pop
in
addb
testl
lock
or
mov
sti
dec
enter
cmp
adc
lds
movsb
push
cmpsb
ficomps
scas
pop
mov
cmp
clc
or
xchg
mov
out
xchg
jb
dec
jge
add
push
lahf
adc
fs
popf
insb
lds
mov
js
cmp
sub
add
add
shlb
fbld
mov
push
add
jg
jmp
add
mov
and
inc
clc
leave
pop
repnz
fs
jmp
out
jno
scas
cmp
push
les
std
test
pop
les
int3
dec
pusha
std
insl
hlt
pop
addb
sub
jle
mov
cmp
sub
adc
int
fdivrs
leave
test
lods
ficompl
xchg
lea
out
sbb
mov
shll
sub
pop
xor
aaa
inc
int3
inc
and
inc
daa
rolb
stos
and
lret
inc
aam
dec
jmp
add
xor
pop
jmp
in
jge
negl
adc
xor
adc
sub
hlt
popa
hlt
push
cld
pop
call
add
add
fbld
mov
jmp
mov
lods
cmp
mov
in
je
lea
int
and
push
sbb
adc
push
sub
jl
pop
xchg
repnz
jecxz
icebp
nop
arpl
pop
sbbb
xor
pop
jbe
addr16
sub
bound
fldln2
gs
pushf
outsl
sahf
mov
xlat
pop
int
adcl
fstl
mov
dec
sub
xor
inc
fidivrl
mov
sbb
lods
cmp
repz
cmc
inc
fwait
or
xchg
add
and
out
repnz
xchg
outsb
flds
xchg
add
ss
adc
inc
pushf
add
out
jbe
cmpl
push
les
or
cmpsb
and
mov
ficompl
test
daa
inc
mov
or
add
jl
std
insl
hlt
pop
loopne
popf
or
xor
stc
aad
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
mov
movsb
ret
ds
out
out
push
lahf
push
popa
jmp
addr16
bound
ljmp
jae
jge
sbb
adc
movsb
sbb
add
add
sub
mov
stc
mov
mov
nop
testl
adc
add
or
or
or
mov
mov
add
mov
mov
mov
push
add
fistpll
cmp
pop
push
fisttps
flds
sbb
aad
lock
rorl
repz
or
gs
pushf
outsl
les
xor
adc
xor
aaa
test
pop
cmp
popa
cmpsb
xor
js
mov
add
imul
pop
rcll
sub
jmp
popf
sbb
test
jge
or
xchg
add
pop
popf
push
mov
es
jb
pusha
pop
repnz
push
xor
and
push
mov
sub
insb
ss
inc
mov
lea
sahf
stc
or
xchg
and
stos
cmp
dec
cmpsb
cs
mulb
or
lea
aas
scas
lret
int
xlat
mov
lock
nop
sbbb
and
add
mov
ljmp
call
insl
cmc
gs
ds
jl
mov
test
jmp
push
int3
inc
and
mov
loop
call
jmp
pop
lret
pop
ds
roll
clc
imul
enter
inc
ljmp
mov
and
add
adcl
push
aad
jmp
popf
jmp
mov
jmp
insb
cwtl
sub
add
add
jmp
dec
aad
sub
pop
sahf
es
rolb
add
xchg
jmp
sbb
mov
jmp
mov
movsl
maxps
xor
jmp
stos
call
jmp
push
rolb
rcrb
shrb
lcall
shlb
fbld
stc
nop
pop
push
add
adc
out
decl
sub
jmp
mov
popf
adc
stc
aaa
fwait
jmp
push
inc
and
ss
pusha
mov
mov
jmp
pop
xor
dec
andb
jmp
in
jae
xchg
test
int
push
jnp
jmp
xchg
adc
push
lahf
push
into
dec
fdivrs
jg
jmp
add
add
shlb
fbld
mov
add
add
mov
mov
or
mov
mov
sbb
add
add
xor
mov
push
push
add
xor
mov
sub
add
jmp
jp
add
add
or
pop
pushf
adc
in
sbb
stos
cs
xor
xorb
decl
add
ds
dec
mov
lret
inc
loope
imul
insl
mov
dec
jmp
cltd
mov
jmp
adc
sbb
adc
cmc
lods
mov
sar
inc
adc
pop
xchg
or
xor
inc
icebp
xchg
dec
jge
xorl
push
add
jmp
adcl
xchg
or
scas
repnz
xchg
adc
mov
jmp
mov
xchg
popf
setg
or
jno
dec
xchg
add
cld
call
and
mov
jecxz
push
add
daa
mov
out
pop
shrl
movsb
out
adc
inc
push
ret
cmpsb
push
mov
xor
push
xchg
repz
out
mov
add
xor
mov
mov
mov
add
shlb
fbld
push
push
add
sbb
or
rcrl
add
add
sub
mov
stc
bound
push
out
stos
cmpsb
jmp
xchg
add
stc
xchg
push
push
add
push
push
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
sbb
add
add
sub
push
add
into
fbld
stc
and
push
add
add
cmpl
int3
inc
and
dec
sub
push
adc
into
push
mov
mov
and
aam
lds
sti
push
out
hlt
xchg
outsb
mov
xchg
pop
bound
lods
pop
mov
push
shlb
sti
push
decb
xchg
jb
jl
or
in
sbb
or
jp
jp
jb
xchg
cmc
add
adc
push
les
jb
in
jge
jge
testl
add
or
lcall
fs
and
ret
push
lds
or
or
and
jae
xchg
jl
add
in
jb
xchg
xchg
or
shrb
add
add
mov
mov
push
add
mov
sbb
ja
sbb
mov
mov
adc
add
stc
daa
sti
dec
add
neg
mov
stc
in
push
add
adc
mov
mov
xor
xor
mov
add
add
mov
add
sbb
rclb
push
mov
push
mov
push
add
mov
mov
fwait
or
jae
sbb
sbb
add
add
jb
jmp
movsb
cmp
push
aam
shll
cwtl
imul
and
jmp
pop
fisttpll
out
sbb
jmp
mov
test
test
and
addr16
jl
testb
add
add
jmp
adcl
out
mov
push
ret
cmpsb
push
xchg
pop
aas
lret
add
jmp
cmpl
jmp
ljmp
popf
or
roll
aad
pop
int
add
jmp
jns
jg
jmp
xor
jmp
ljmp
insb
or
mov
mov
gs
cmp
lock
lods
mov
add
shrb
fbld
stc
adc
mov
add
sbb
mov
and
les
pop
cmp
and
inc
outsl
mov
fcom
dec
add
push
push
mov
mov
jmp
push
lret
lret
push
xchg
repz
mov
mov
aad
pop
rorl
shrb
neg
sbb
and
mov
ret
jmp
inc
ret
jmp
adc
mov
and
sti
pop
fisttps
sbb
inc
lea
pop
fimull
fisubl
or
in
sbb
sti
sahf
insl
adc
xor
shrb
sub
and
or
sbb
sbb
adc
adc
enter
inc
mov
pushf
xor
inc
repnz
inc
pop
sub
add
xchg
popf
pushl
jmp
cmp
cmc
jl
jne
ja
and
pusha
jmp
sub
jmp
cmp
das
mov
out
popa
icebp
nop
arpl
sbb
and
add
add
add
jmp
popa
jmp
xor
xor
scas
sbb
mov
fs
push
cld
dec
xchg
add
fs
mov
mov
mov
andb
jmp
lret
xchg
fs
out
adc
inc
stos
cmp
mov
sar
inc
adc
inc
aad
sub
jp
imul
insl
test
adc
arpl
xchg
gs
xchg
loope
jmp
pop
ret
ret
outsb
jns
jecxz
jmp
das
mov
inc
mov
sub
jne
jmp
jnp
jp
in
imul
adc
pop
jp
jg
push
xchg
mov
jmp
mov
stos
int
aam
push
test
push
sti
pop
fmuls
fsubs
push
ss
jmp
pop
cwtl
push
imul
imul
mov
jns
pusha
mov
scas
leave
cmp
sub
jbe
mov
add
shlb
fbld
decb
add
rolb
add
jmp
jmp
std
jnp
mov
mov
iret
dec
les
int3
imul
cmp
je
popa
jmp
aam
into
test
cmp
cmc
xor
or
add
add
xchg
add
push
jmp
inc
xlat
inc
and
imul
jmp
ja
cmpsb
xor
jo
addl
mov
movzbl
add
jmp
jae
jnp
in
pop
lock
xchg
xchg
push
jmp
mov
jmp
fimuls
mov
mov
das
lcall
mov
jmp
jnp
sub
pushf
xor
add
stos
cmp
imul
sbbb
out
sbb
mov
inc
cmp
xchg
add
std
push
jmp
fiadds
mov
push
cld
jnp
cmp
sbb
aad
in
rcrb
clc
testl
jmp
enter
or
sbb
add
imul
add
ret
mov
movsb
dec
adc
add
arpl
jg
mov
cmpsb
daa
mov
and
ss
inc
mov
jmp
cld
fwait
jbe
mov
add
cmp
call
mov
pushf
orl
jmp
movsb
cs
loopne
adc
add
mov
mov
and
xchg
idivb
mov
lret
inc
fidivrl
add
cpuid
mov
mov
mov
mov
jmp
fcoml
mov
mov
sbb
outsl
add
pop
enter
jge
sbb
add
cmp
pop
enter
popa
pop
xchg
jb
cmp
add
jmp
es
inc
mov
push
push
xor
jns
loopne
adc
inc
pop
push
xor
or
insb
pop
inc
and
jmp
iret
push
jmp
call
jmp
or
jl
or
or
cltd
sub
or
stos
jmp
mov
jmp
pop
push
jmp
add
flds
mov
leave
dec
enter
add
dec
fdivrs
popf
push
pushl
jmp
movl
mov
inc
mov
sub
repnz
popf
sbb
ljmp
stc
shl
lock
bound
ret
sub
pusha
mov
mov
mov
jmp
loop
adc
jne
call
cmp
jne
mov
jmp
std
fdivrp
jne
jmp
and
inc
sahf
sbb
dec
fnstcw
xchg
adc
push
outsl
pop
push
push
pushl
call
jmp
in
popa
icebp
nop
arpl
mov
lods
lret
inc
xchg
adc
gs
xor
jmp
call
jmp
es
in
in
jg
jbe
jnp
in
inc
xchg
mov
shr
add
add
lea
lods
and
sbb
cmc
inc
sub
jbe
pushl
jmp
addr16
pop
adc
loopne
sbb
fsubr
dec
jne
push
jmp
call
jmp
adc
cmpsb
xor
lock
xor
add
jne
mov
mov
mov
mov
jmp
jmp
out
jo
iret
push
lds
lea
jmp
gs
xchg
cmc
add
push
mov
adc
jmp
data16
jmp
push
into
pop
cmp
push
stos
xor
int
mov
popf
push
inc
shlb
shrb
add
add
mov
addr16
push
add
inc
ss
cltd
rorl
cmp
jmp
sahf
push
mov
es
cmp
push
lds
movb
inc
mov
in
leave
mov
cmc
hlt
decl
push
jns
jge
push
shll
pop
fdivrl
jmp
mov
xchg
lock
pushf
adc
jmp
testb
inc
shll
sbb
jmp
mov
lcall
jle
in
mov
mov
mov
andb
sub
jo
jmp
or
jno
pop
xlat
inc
and
js
fmuls
fsubrs
rclb
imul
cltd
roll
add
xlat
pop
cmp
jmp
pusha
lock
inc
out
in
jle
sbb
push
pop
jp
mov
sar
inc
adc
jp
jl
testb
aad
xchg
jne
jmp
aaa
cmp
jmp
xor
inc
fisttps
fldenv
inc
fidivs
les
rcl
dec
ret
mov
sub
daa
mov
pushl
mov
jmp
add
popl
jmp
imul
inc
les
int3
add
cltd
dec
stos
jmp
outsl
in
jge
negl
lea
jmp
sub
push
lods
xor
dec
fdivrs
pop
push
cwtl
push
imul
push
lea
sub
push
push
push
mov
lea
push
jmp
movb
jmp
popa
jmp
push
in
push
test
mov
jge
je
jbe
xchg
pop
bound
inc
and
inc
and
inc
and
and
inc
and
jmp
and
push
movb
jmp
les
push
mov
jl
jne
ja
adcl
sub
insl
ja
inc
daa
insb
movb
movb
movb
movb
jmp
sti
je
lea
mov
add
jmp
push
jmp
movb
jmp
ljmp
stos
cmp
or
pop
iret
stos
pop
shll
imul
mov
call
jmp
mull
icebp
push
mov
mov
cs
jo
ja
loope
adc
movsb
jmp
or
sub
jo
xorl
mov
outsl
lcall
sub
movb
jmp
lea
add
pushl
mov
xchg
les
out
inc
movsl
gs
fwait
movb
jmp
mov
int3
xlat
dec
frstor
add
sbb
xchg
cmp
movb
jmp
pop
lcall
je
iret
mov
lods
rorl
push
roll
push
xor
or
icebp
sub
call
movb
jmp
into
dec
fdivrl
shll
mov
sbb
mov
jmp
lret
dec
ret
sbb
fwait
mov
mov
call
jmp
xchg
push
test
push
jmp
mov
and
bnd
mov
in
dec
push
mov
jmp
out
gs
pushf
outsl
mov
inc
daa
shlb
or
es
rorl
test
movb
movb
movb
movb
mov
call
jmp
pop
aad
sub
or
lods
aad
adc
inc
cwtl
dec
movb
jmp
cmp
movb
jmp
push
adc
cs
cld
ja
xorb
inc
aad
dec
sti
mov
cwtl
mov
in
inc
cwtl
push
jmp
mull
pushf
outsl
fdivl
mov
arpl
cmc
inc
jae
scas
movb
jmp
sahf
setg
or
mov
mov
sbb
into
or
movb
movb
movb
movb
movb
jmp
popa
cli
push
les
int3
es
ret
ret
and
movb
jmp
loope
in
je
add
cmpsl
aaa
push
mov
inc
mov
inc
rclb
sub
fcomps
test
cmpsl
incl
adcb
subb
mov
cs
js
insb
or
clc
push
subl
add
add
mov
movzbl
add
jmp
movb
jmp
fistpl
fs
push
les
xor
dec
imul
inc
lahf
insb
jmp
push
fimuls
adc
mov
jmp
lea
jmp
mov
shlb
push
xor
sub
lcall
cmpsb
sbb
aas
movb
jmp
fdivl
or
adc
jmp
in
bound
xor
jne
loop
pop
loop
int
push
lea
call
push
call
pop
pop
xor
pop
leave
ret
jmp
mov
push
push
call
push
push
pushl
jmp
mov
lods
lret
inc
loope
mov
jmp
mov
jmp
inc
inc
and
push
xchg
mov
test
sbb
call
push
push
pushl
jmp
pop
into
pop
cmp
addr16
mov
adc
jmp
xchg
add
std
or
cmp
push
jmp
dec
mov
inc
popa
gs
mov
sub
in
mov
loope
sarl
xor
add
jmp
jmp
insb
mov
jmp
movb
jmp
push
pusha
pop
repnz
mov
xchg
jle
jg
mov
pop
outsl
xor
dec
add
shrb
addb
push
pushl
jmp
movb
movb
movb
jmp
scas
xor
mov
and
xor
rolb
sarb
cmpsl
or
add
inc
gs
mov
sahf
stc
or
mov
rolb
fcom
fadd
inc
or
inc
or
inc
or
movb
movb
jmp
aad
mov
fistpll
inc
insb
movb
movb
movb
movb
jmp
adc
inc
insl
dec
jmp
orl
jecxz
cltd
push
scas
pop
mov
shl
inc
insb
gs
movb
jmp
mov
int3
in
popa
icebp
nop
arpl
dec
fistpll
mov
inc
movb
jmp
aaa
mov
pop
xlat
inc
and
js
data16
xchg
outsb
fmuls
inc
outsl
insl
jmp
cmpsl
xor
int
xchg
dec
fdivl
in
push
lea
cmp
movb
movb
movb
movb
movb
jmp
pop
adcb
subb
out
jg
jmp
jne
and
movb
jmp
pop
mov
jle
dec
clc
popa
icebp
nop
arpl
fbstp
std
fs
popf
insb
test
gs
ljmp
stc
cmp
icebp
nop
arpl
pushf
push
mov
es
adc
call
inc
add
inc
add
add
add
inc
add
jmp
lods
mov
mov
movb
movb
movb
jmp
jp
outsl
or
out
xchg
sbb
or
mov
stc
enter
jmp
movb
jmp
xlat
push
mov
insl
hlt
pop
rclb
ljmp
xor
mov
lea
push
push
movb
movb
jmp
divl
xchg
int3
inc
aam
dec
mov
out
push
pushf
movb
movb
movb
jmp
push
fdivl
in
idivl
mov
push
mov
ljmp
inc
jmp
jmp
test
les
mov
inc
mov
lods
lods
lret
inc
out
or
call
jmp
cmp
add
jne
out
inc
ja
ja
loope
daa
mov
inc
mov
pop
mov
jmp
dec
popf
repnz
movb
jmp
movb
jmp
movb
jmp
rorl
mov
push
cmp
push
fwait
or
pop
sub
lret
or
cmp
jl
mov
jmp
movb
jmp
repz
mov
inc
add
xchg
add
add
call
mov
cmp
dec
pushf
jp
lret
ljmp
inc
loop
movb
movb
movb
jmp
sbb
mov
icebp
addl
mov
mov
sbb
call
movb
mov
call
jmp
outsl
out
jl
notb
jb
lea
jmp
movb
jmp
pop
add
addl
mov
and
jl
imul
insb
or
repz
das
movb
jmp
xchg
adc
in
sbb
sbb
or
insb
mov
nop
sub
inc
mov
call
mov
lea
push
push
jmp
addr16
jge
notl
cmp
fcoms
movb
movb
movb
jmp
stc
jne
mov
movsb
cmc
xchg
in
movb
jmp
sub
pushf
or
jmp
and
in
lcall
mov
adcl
test
sbb
ja
sbb
shlb
fbld
stc
jns
push
add
aam
mov
xor
aaa
movb
movb
movb
movb
jmp
cld
insb
loop
je
xchg
call
jmp
push
lret
pop
ds
das
mov
push
lret
pop
ds
sbb
cmp
fsubrl
lock
mov
inc
mov
dec
xlat
inc
and
sbb
sbb
mov
lea
push
push
movb
movb
movb
jmp
add
jae
js
ljmp
and
add
std
or
pop
mov
push
movb
movb
movb
movb
jmp
mov
jmp
sub
daa
movsl
xor
jno
and
movb
movb
movb
movb
movb
jmp
cmp
movb
jmp
rolb
inc
stos
mov
mov
leave
add
mov
sbbb
xor
decl
mov
rol
inc
aad
dec
mov
push
jmp
bnd
mov
mov
scas
lret
inc
movb
jmp
aaa
mov
cmc
adcl
test
in
jge
testl
xchg
repnz
rorb
sahf
out
xor
inc
mov
jmp
fwait
adc
in
sbb
in
pusha
notb
or
ds
mov
movb
movb
jmp
dec
fisttps
adc
insl
std
test
or
je
and
jmp
roll
mov
loop
je
std
outsl
lcall
mov
or
inc
inc
mov
std
insl
hlt
pop
mov
adc
cmp
filds
mov
movb
movb
movb
mov
call
jmp
movsb
inc
shll
out
mov
sub
loop
movb
movb
movb
movb
movb
jmp
sub
jl
movb
jmp
xchg
movb
jmp
jg
xchg
cmc
add
fwait
sbb
repnz
pop
repnz
loopne
hlt
xchg
outsb
nop
push
xchg
movb
jmp
pop
out
filds
movb
jmp
jle
outsl
or
shlb
aam
mov
cmp
movb
movb
jmp
ret
dec
fistpll
xor
push
je
mov
add
or
xor
push
ret
cmpsb
push
mov
cmp
pop
mov
mov
movb
movb
movb
movb
movb
jmp
iret
and
adc
decl
adc
sbb
adcl
pop
xchg
repnz
mov
repz
pop
aam
add
jmp
les
push
inc
adc
pop
outsb
cld
xchg
cmc
add
stc
push
lahf
push
mov
xchg
mov
jmp
movb
jmp
mov
adcl
mov
fmull
mov
inc
mov
arpl
inc
shll
call
jmp
das
mov
jb
inc
adc
adc
inc
adc
movb
jmp
iret
pop
lret
scas
pop
cwtl
ret
pop
into
test
clc
lahf
push
push
lock
lods
movb
jmp
flds
mov
test
ljmp
stc
orb
and
pop
call
mov
stc
decb
add
stc
in
push
add
fdivrs
xchg
repz
out
loope
adc
add
adc
inc
test
movb
movb
movb
mov
call
jmp
sahf
sbb
mov
xlat
dec
add
jo
decl
add
jmp
mov
nop
into
dec
fdivrs
add
aas
scas
lret
push
pop
lea
jmp
orb
cli
or
es
cmp
mov
fistl
cmpsl
push
mov
mov
push
pushl
call
mov
mov
jmp
pushl
jmp
push
jecxz
push
in
xchg
sbb
inc
shlb
out
fistl
fucomip
out
adc
jmp
pop
mov
jg
sub
and
sub
loopne
mov
add
call
mov
lea
push
jmp
adcl
xor
sub
hlt
aad
shlb
add
sub
or
mov
jmp
lret
pop
int3
stos
sar
jmp
jo
inc
hlt
cmp
sub
repnz
lcall
sbb
pop
push
xor
mov
movsb
push
pushl
call
mov
jmp
pop
into
test
and
dec
ret
popf
jns
call
xor
call
mov
mov
jmp
xor
and
mov
inc
mov
adc
rcrl
scas
pop
movsl
adcb
inc
aam
pushl
call
mov
jmp
outsb
lods
lea
jmp
add
adc
push
mov
sahf
stc
or
inc
push
xor
es
psubsw
sbb
mov
jmp
push
mov
jmp
loope
stc
cwtl
imul
add
outsb
or
sbb
loop
rcr
inc
pushl
call
mov
mov
jmp
scas
and
or
sbb
dec
push
pushl
call
jmp
gs
fcoms
lods
pop
mov
mov
mov
push
mov
jmp
stos
es
cs
jae
xchg
jns
js
ljmp
adc
xlat
dec
add
and
decl
add
movsb
mov
inc
adc
and
xor
jmp
popa
lock
pop
add
lea
xchg
movsl
mov
jmp
push
jmp
rolb
dec
sti
inc
xlat
inc
and
js
mov
js
dec
pop
rclb
and
push
lea
push
push
mov
call
mov
jmp
ss
cmp
mov
mov
mov
cmp
call
mov
mov
lea
push
push
call
jmp
rcrb
loopw
movb
movb
movb
movb
movb
jmp
xor
je
shlb
cmp
imul
sbb
and
pop
popa
loopne
adc
add
clc
movb
jmp
lahf
pop
cmp
scas
cmp
imul
push
jmp
mov
sahf
stc
or
in
sbb
add
addr16
inc
leave
pop
cmp
sub
movb
movb
movb
movb
jmp
stos
mov
or
jmp
or
outsl
loopne
lcall
cmp
or
pop
into
call
jmp
mov
mov
jmp
rcll
dec
lds
iret
sbb
push
xor
add
je
out
dec
mov
mov
cs
sbb
jo
movb
movb
movb
mov
push
jmp
dec
fimull
fidivl
mov
push
movb
movb
movb
movb
movb
jmp
roll
mov
in
adcl
test
push
mov
sub
int
movb
movb
movb
movb
movb
jmp
cmpsb
jae
inc
addr16
jmp
movb
jmp
inc
roll
sarl
pop
iret
stos
pop
rclb
adcl
ffree
inc
insw
jmp
xchg
or
ret
push
lds
js
jbe
loopne
aad
cld
jl
inc
lea
jmp
cmpsb
cmp
inc
xchg
fiadds
je
lods
pop
push
xor
dec
xchg
or
sbb
sarb
imul
insb
outsl
movb
movb
movb
jmp
mov
push
movb
movb
jmp
sub
cmp
imul
insl
or
fistpll
or
push
jmp
mov
mov
gs
stc
imul
fidivrs
mov
mov
lea
push
movb
movb
jmp
cmp
pop
dec
loop
dec
sahf
mov
jmp
fsubs
mov
add
jmp
fstl
mov
frstor
shll
rcll
insl
push
movb
movb
movb
jmp
or
gs
fcoms
xor
jg
mov
scas
and
lock
push
repz
push
imul
pop
lret
scas
pop
repnz
cltd
pop
call
inc
cwtl
setg
or
arpl
fimuls
mov
scas
lret
mov
jle
xchg
push
decl
add
arpl
pushl
xchg
cmpsl
aaa
push
mov
mov
lcall
dec
dec
jmp
fmull
mov
stos
int
mov
jp
mov
test
ljmp
inc
andb
subl
xorl
xchg
stc
decl
ffree
inc
push
jb
inc
push
jns
inc
push
dec
movb
movb
jmp
mov
mov
lea
push
movb
jmp
xor
arpl
jbe
loopne
xor
sub
push
movb
dec
test
dec
movb
movb
movb
jmp
ss
inc
mov
ficomps
stos
pop
mov
lret
lret
stc
imul
inc
nop
xor
xor
mov
inc
mov
arpl
jle
call
movsb
push
mov
push
in
movb
movb
movb
mov
call
jmp
or
inc
xchg
xor
inc
xchg
movb
jmp
aaa
mov
daa
scas
aas
pop
test
enter
outsl
lcall
mov
insb
jmp
jb
insl
hlt
pop
mov
jecxz
mov
sbb
movb
movb
movb
movb
jmp
sbb
add
and
movb
jmp
xor
inc
test
movb
jmp
std
insb
loop
je
jns
jge
testl
fisttpl
movsb
push
loop
icebp
push
push
movb
movb
movb
jmp
pushf
setg
or
loop
stos
fwait
pop
pushl
jg
add
adc
icebp
outsl
lcall
jg
jmp
sahf
insl
in
sub
adc
lea
movb
jmp
pop
cwtl
push
imul
rcll
sub
sbb
test
pushl
repnz
add
mov
js
popa
mov
fs
ljmp
jmp
pushf
and
or
lds
iret
sbb
adc
jmp
shrl
and
out
jecxz
jne
popf
je
inc
dec
popa
movb
mov
call
mov
lea
jmp
jne
insb
or
in
stos
cmp
dec
mov
jmp
sbb
orl
ljmp
imul
sbb
das
dec
movb
movb
movb
jmp
ret
movsb
push
repnz
push
call
jmp
adc
cmp
stos
cmp
add
push
roll
aad
movsb
lea
jmp
xchg
or
imul
push
xor
test
ljmp
test
pushl
movb
jmp
pop
int
and
bound
popa
add
push
jmp
movb
movb
movb
jmp
pop
les
int3
movups
ss
cmp
mov
imul
movb
jmp
call
jmp
add
pushf
add
in
sbb
push
mov
movb
movb
movb
jmp
divb
jl
mov
lods
loopne
inc
dec
jmp
jl
xchg
cmc
add
inc
push
xor
sub
adcb
cmpb
mov
ljmp
ja
ljmp
js
jmp
pop
fisttps
fnstenv
jmp
inc
push
inc
jmp
ss
inc
mov
or
pop
jp
jg
mov
and
jmp
out
movb
movb
movb
jmp
popf
push
test
push
cld
fists
lods
pop
mov
mov
jl
sub
mov
inc
push
insb
jmp
jae
xchg
cmc
add
popf
pop
xchg
adc
xlat
pop
enter
call
push
pushl
movb
movb
movb
movb
jmp
dec
movb
jmp
pop
roll
aad
fisttps
push
std
adc
cmp
jnp
incb
movb
jmp
jae
pop
pop
cmpsl
movb
jmp
cmp
roll
add
inc
inc
jne
fwait
add
add
pop
into
test
notb
pop
aas
lret
pushf
push
movb
movb
movb
jmp
push
hlt
push
dec
mov
movb
jmp
int3
pop
into
test
dec
adc
inc
cmc
insl
std
test
cmp
inc
movb
jmp
pop
les
int3
es
cwtl
add
or
sbb
add
inc
inc
insb
jmp
movb
jmp
xor
sub
and
iret
cmp
fcompl
mov
inc
popa
jmp
rclb
mov
outsb
or
push
mov
out
xchg
mov
xor
movb
movb
movb
movb
jmp
lock
lea
push
jmp
movb
jmp
in
notl
cltd
push
lds
xchg
inc
pusha
jmp
mov
scas
mov
xlat
dec
add
sarl
imul
pop
fwait
adc
mov
js
cs
iret
out
inc
dec
mov
call
mov
mov
jmp
daa
lds
jnp
movb
jmp
lahf
adc
lcall
in
jg
mov
jecxz
inc
popa
movb
jmp
lret
movb
jmp
imul
aaa
movb
jmp
int3
push
cmovg
movb
jmp
fists
cmpsb
push
in
xchg
pop
bound
inc
mov
test
scas
lret
pop
adc
xor
decl
add
inc
jmp
lea
out
mov
jmp
jo
je
out
pop
xor
jmp
stos
cmp
mov
in
cs
pop
lret
lret
dec
fistpll
jle
movb
jmp
add
dec
adc
xrelease
jmp
and
push
movb
jmp
cltd
pop
xchg
repnz
xlat
dec
fdivrl
cli
popf
insb
jmp
jae
insb
cltd
inc
jb
inc
inc
movb
movb
movb
jmp
aam
movb
movb
movb
movb
mov
call
jmp
and
adc
sub
inc
inc
lea
push
pushl
jmp
xor
dec
fstpt
nop
testl
out
sbb
inc
and
lds
mov
mov
inc
xchg
pushf
sbb
xchg
push
imul
or
jmp
push
rolb
sarb
sbb
repz
xlat
movb
jmp
rorl
dec
test
les
int3
sub
mov
xchg
gs
jecxz
inc
imul
insb
imul
inc
outsb
imul
push
ljmp
mov
xchg
pop
bound
outsb
popf
pop
out
popa
icebp
nop
arpl
lock
push
add
inc
sub
sub
inc
sub
movb
jmp
and
or
xchg
fisttpl
mov
stos
imul
inc
das
mov
call
mov
jmp
lea
jmp
pushl
jmp
jne
jp
in
inc
mov
addb
outsb
push
les
push
jmp
movsl
xor
mov
fimull
movsb
push
repnz
lahf
push
repz
adc
inc
and
movb
movb
movb
movb
jmp
sbbb
call
lcall
inc
imul
inc
inc
push
movb
jmp
dec
sti
movb
jmp
xchg
mov
es
cmpsl
lods
lret
inc
scas
flds
mov
rolb
mov
jmp
movb
jmp
and
sub
ds
or
cmpsb
outsl
xor
push
cwtl
xchg
xchg
gs
movb
jmp
loop
inc
dec
jae
mov
pushf
sti
push
decb
add
jbe
mov
inc
mov
sub
outsb
push
push
stc
movb
movb
jmp
js
cli
das
xor
inc
dec
jae
jge
dec
mov
jmp
sbb
divb
xorb
sub
mov
xchg
je
lea
push
push
movb
movb
movb
movb
jmp
in
loop
je
xchg
xlat
fisttps
lea
jmp
xchg
push
mov
es
push
shlb
jns
pop
xchg
dec
data16
push
jmp
mov
idivb
pusha
pop
repnz
cmp
add
mov
mov
call
mov
jmp
mov
mov
and
push
sti
cmp
xor
jmp
inc
aad
sub
insb
cli
jae
xchg
pusha
hlt
push
cld
dec
movaps
test
jae
inc
sbb
call
mov
mov
jmp
jo
jnp
in
dec
dec
inc
and
sbb
xlat
dec
add
inc
dec
inc
movb
movb
movb
jmp
xor
cmp
lods
lret
inc
lods
fmull
add
decl
add
add
inc
pop
gs
test
fadds
dec
sub
popa
and
push
lds
mov
es
movb
jmp
stos
das
mov
mull
icebp
pop
in
sti
sahf
insl
mov
sub
inc
push
movb
movb
jmp
movb
jmp
inc
ret
ret
sbb
mov
inc
mov
pusha
jns
xor
je
lea
dec
fidivrs
notl
popa
xchg
loop
inc
push
je
inc
push
movb
movb
movb
jmp
mov
inc
popa
jae
and
add
cmc
jl
jne
ja
sti
imul
pop
jno
insb
or
rorb
push
jmp
jne
test
xchg
inc
bound
add
add
inc
gs
add
add
das
mov
mov
aad
xchg
repnz
call
mov
mov
lea
jmp
xchg
mov
sbb
insl
popa
jmp
mov
jmp
mov
mov
mov
and
and
addr16
and
outsb
cld
fwait
jbe
jge
lahf
movb
jmp
movb
jmp
mull
nop
arpl
jecxz
in
jle
cmp
pushf
xchg
push
bound
inc
data16
movb
movb
movb
jmp
mov
mov
add
sub
pushl
jmp
cmpsl
lods
lret
inc
scas
imulb
cltd
push
or
jle
icebp
popa
add
cmp
movb
jmp
pop
jecxz
push
in
addr16
sbb
add
xchg
jbe
mov
movb
movb
mov
call
mov
jmp
cmc
jno
xorb
insb
loop
je
dec
iret
pop
cmp
and
movb
movb
jmp
or
xor
push
xchg
add
jno
sbb
cmp
movb
jmp
xchg
sbb
mov
inc
mov
fists
mov
fwait
adc
inc
dec
gs
movb
jmp
pop
inc
and
or
pop
and
pop
add
pop
jp
xor
stc
xor
movb
lea
push
pushl
movb
movb
jmp
cmp
mov
popf
mov
movb
mov
call
mov
jmp
push
jmp
cmc
imul
insl
fcmovb
push
mov
xchg
icebp
add
xchg
cmp
mov
lea
jmp
pop
into
pop
cmp
popa
push
jmp
dec
add
imul
bound
jns
cmp
lret
push
mov
test
cmp
rorl
mov
movb
movb
movb
movb
movb
jmp
daa
mov
xor
inc
bound
movb
jmp
mov
ret
inc
and
mov
and
test
mov
movb
jmp
movb
jmp
or
jge
xchg
testb
and
movb
movb
movb
movb
movb
jmp
pop
fmuls
fsubs
xchg
adc
add
into
mov
movb
jmp
or
jl
fs
or
mov
pop
lret
ret
inc
outsl
gs
adc
iret
inc
aam
dec
mov
ljmp
movb
movb
jmp
inc
inc
mov
movb
jmp
jae
xchg
cmc
add
icebp
adcl
test
jbe
insl
movb
jmp
xor
push
lds
fnstcw
or
cmpsb
jno
outsb
movb
jmp
loop
add
adc
inc
jno
jmp
aas
lods
cmp
movb
jmp
rolb
mov
out
xlat
inc
and
outsb
jns
jl
negb
inc
movb
movb
movb
movb
movb
jmp
rol
cmp
pushf
or
jae
xchg
cmp
push
iret
pop
cmp
xor
movb
jmp
movb
jmp
mov
mov
sub
pushf
xor
and
xor
inc
jmp
pop
ret
ret
mov
pop
cmp
xlat
dec
add
das
push
aam
sub
jbe
loopne
fcomps
test
xor
dec
aas
movb
movb
movb
movb
movb
jmp
cmp
inc
pusha
inc
jmp
sbb
inc
mov
inc
bound
mov
fistps
test
jl
testb
jo
xorl
std
decl
add
pusha
push
jmp
dec
rcll
xor
inc
and
xor
insl
std
test
scas
and
add
inc
popa
gs
psubw
inc
arpl
xor
mov
jl
popa
add
and
xchg
push
ficoms
mov
push
pushl
jmp
and
rcll
push
fs
xor
lahf
punpckhdq
jge
and
lds
sbb
popa
pop
hlt
mov
call
mov
mov
lea
jmp
mov
jb
inc
data16
inc
movb
jmp
lahf
or
daa
mov
and
rcll
lds
inc
imul
jp
jp
pop
lds
iret
daa
xchg
or
lds
test
fidivrs
inc
pop
inc
movb
movb
movb
movb
jmp
scas
sbb
popf
push
movb
jmp
pop
rcll
inc
or
mov
scas
divl
mov
pop
movb
jmp
addl
das
scas
aas
pop
test
and
pop
lods
mov
jmp
outsl
jmp
add
test
pushf
sti
push
in
mov
movb
movb
movb
jmp
or
insb
jmp
xor
sub
out
jl
notb
jl
imul
or
push
lock
jmp
mov
jp
imul
das
into
inc
shlb
ja
adc
pushl
movb
movb
jmp
sub
stc
imul
popa
icebp
nop
arpl
mov
adc
movb
jmp
lcall
lods
cmp
mov
pop
adcl
adcb
and
or
mov
lea
jmp
xchg
add
loop
out
mov
adc
fs
xchg
cmc
add
insb
movb
mov
call
mov
mov
jmp
push
jmp
leave
sub
inc
push
popa
jmp
lock
lcall
popa
add
jbe
lods
and
xor
rorl
lea
jmp
mov
movsl
int3
aas
hlt
mov
lods
scas
cs
mov
xor
movb
movb
movb
movb
movb
jmp
movb
inc
mov
xlat
dec
add
inc
dec
inc
movb
movb
movb
jmp
xor
gs
adcl
xlat
inc
and
aaa
aas
inc
jge
inc
push
insb
movb
jmp
pop
repnz
fs
arpl
xchg
gs
mov
jg
jmp
push
outsb
jmp
fistpl
scas
pop
cld
pushl
xorl
sbb
lods
mov
xor
movb
movb
movb
movb
jmp
push
cltd
or
ds
mov
cs
pop
int3
inc
and
mov
es
cmp
popf
add
inc
pusha
inc
jmp
pop
lret
lret
inc
xlat
mov
jl
jns
jmp
bound
insl
ret
xchg
mov
mov
lea
jmp
push
inc
pushl
jmp
xchg
add
movb
jmp
mov
inc
arpl
pusha
nop
or
sbb
aam
sub
fistps
dec
movb
movb
movb
mov
call
jmp
pop
lret
pop
ds
flds
mov
test
sbb
pop
movb
jmp
jmp
ljmp
mov
push
xor
es
stos
mov
sub
inc
fs
fdivrl
insl
hlt
pop
in
jno
inc
data16
and
je
lea
cmc
gs
add
xor
push
mov
pop
movb
jmp
xchg
movb
jmp
test
xchg
repnz
mov
mov
mov
jns
jnp
sti
cwtl
test
insb
jmp
sub
xor
dec
lods
ds
movb
jmp
mov
xchg
lock
rorl
dec
mov
sbb
mov
call
mov
mov
lea
jmp
loop
jecxz
jne
xlat
mov
mov
lea
push
pushl
movb
jmp
ret
outsl
movb
jmp
mov
inc
and
jmp
dec
fnstcw
and
pop
bound
movb
jmp
mulb
push
sub
and
int
mov
aam
fstpt
clc
lahf
push
ljmp
inc
outsb
popa
movb
movb
movb
mov
call
jmp
test
and
mov
mov
inc
sub
es
or
push
jmp
push
lcall
xchg
adc
aam
test
push
and
je
inc
daa
inc
movb
jmp
add
push
lret
mov
and
inc
fidivrl
inc
sub
mov
inc
sub
jmp
imull
cltd
push
dec
mov
mov
stos
xor
inc
imul
imul
insb
jb
inc
insl
gs
jno
jle
xchg
movb
movb
movb
mov
call
jmp
and
fwait
jle
mov
jmp
or
into
dec
frstor
inc
mov
lock
or
jmp
mov
and
les
in
das
stos
cmp
inc
test
shlb
inc
sub
mov
inc
mov
icebp
lea
jmp
rcrl
test
mov
imul
mov
nop
das
movb
movb
movb
movb
movb
jmp
cli
jbe
cmpl
dec
fistpll
nop
testl
pop
movb
jmp
pop
push
fnsave
ds
xchg
inc
movb
jmp
scas
cmp
mov
in
std
jae
xchg
lock
and
mov
xlat
dec
add
inc
xor
movb
movb
movb
jmp
movb
movb
movb
movb
movb
jmp
out
jg
mov
repnz
insl
ret
in
jle
int3
sti
call
mov
mov
movb
jmp
sub
and
jne
jl
notb
movb
jmp
lods
movb
jmp
lcall
add
add
imul
cli
fs
popf
insb
jmp
test
cld
cwtl
inc
movb
movb
movb
movb
movb
jmp
orb
fmull
xor
movb
movb
movb
jmp
push
leave
pop
cmp
dec
adc
push
stos
insb
dec
cmp
inc
push
gs
stc
jp
jp
jl
xchg
cmc
add
outsb
in
jge
notl
or
adc
inc
push
jb
fstpt
xchg
inc
xor
push
popa
jmp
adc
out
lock
bound
dec
movsb
and
ffree
inc
dec
jne
inc
push
insl
movb
movb
movb
jmp
push
fimuls
add
xlat
dec
add
inc
add
add
inc
add
inc
add
sbb
jmp
hlt
adcl
test
jp
jp
mov
xchg
lock
mov
movb
jmp
xor
sbb
jmp
movb
jmp
jl
in
movb
jmp
inc
iret
pop
cmp
adc
stos
push
sbb
cmpsb
add
mov
movsb
cmp
add
xchg
and
pop
into
test
add
sahf
das
or
mov
mov
call
mov
mov
jmp
sti
insb
loop
je
ds
movb
jmp
cmp
add
xchg
cmp
sahf
or
out
movb
jmp
mov
enter
aas
sbb
movb
jmp
push
popa
add
sbb
pop
loop
ret
xchg
gs
out
jg
jmp
pop
pop
call
mov
mov
jmp
push
fwait
or
jae
or
movb
movb
movb
mov
call
jmp
mov
jmp
sbb
cmp
js
mov
add
fcom
dec
add
fistl
add
pusha
jmp
movb
jmp
adc
mov
movsb
ret
ds
xchg
adc
outsl
bound
jb
inc
push
movb
lea
push
pushl
jmp
xchg
clc
inc
inc
data16
and
mov
xor
mov
inc
mov
fists
mov
movb
jmp
dec
movb
jmp
jle
add
push
lods
and
pop
leave
test
fwait
shrb
xlat
dec
add
inc
pusha
inc
movb
movb
movb
jmp
shlb
xchg
gs
rcrl
popa
jmp
jge
jge
testl
movsl
mov
addb
movb
jmp
loopne
dec
orb
insl
jmp
or
rolb
dec
std
jns
jl
negb
cmp
movb
movb
movb
movb
movb
jmp
mov
fwait
dec
fisttpl
fstpl
push
mov
jo
movb
jmp
xchg
movb
jmp
pop
jo
lock
mov
imul
dec
cwtl
add
scas
aas
pop
test
mov
movb
movb
movb
movb
movb
jmp
pop
rcll
inc
sub
dec
into
pop
cmp
test
std
or
push
movb
jmp
das
scas
cmp
mov
aad
shll
repnz
decl
pushl
movb
movb
movb
jmp
mov
movsl
int3
aas
enter
sub
push
in
std
test
sbb
mov
jmp
lea
jmp
movb
jmp
sub
fstpl
scas
pop
mov
es
or
inc
inc
movb
movb
movb
movb
jmp
sub
gs
movb
jmp
pop
into
test
test
push
xchg
repz
int3
and
sbb
je
imul
out
loopne
loopne
jb
jo
jno
jecxz
push
out
inc
pop
movsb
dec
push
pushl
movb
movb
movb
movb
jmp
pop
int3
inc
and
jne
movb
jmp
dec
dec
movb
jmp
and
jns
jge
testl
enter
shll
push
movb
jmp
pop
int
and
jb
jo
xorl
fistpll
mov
lds
ljmp
mov
mov
jmp
arpl
push
mov
imul
jbe
movb
jmp
lds
test
fidivrs
and
fs
xchg
push
jb
repnz
decl
add
inc
inc
jmp
mov
stos
into
cmp
pop
ljmp
adc
in
bound
rorb
movb
jmp
repz
mov
lret
dec
ret
addl
shlb
inc
push
movb
jmp
movb
jmp
clc
jb
xchg
push
fimull
fidivrl
mov
test
cmp
inc
dec
sbb
inc
push
pushl
movb
movb
movb
movb
jmp
xlat
pop
int3
stos
xchg
cld
adc
movb
jmp
fistpl
scas
pop
cld
xchg
sbb
push
mov
xor
add
or
mov
inc
sbb
fdiv
cwtl
cmp
inc
sbb
adc
add
push
ret
ret
pushf
xor
or
push
scas
xor
pop
orb
std
decl
add
adc
jnp
incl
mov
lods
movb
jmp
jno
jne
out
pop
ret
push
lret
cmc
hlt
pusha
notb
ljmp
dec
movb
movb
movb
movb
jmp
xchg
pop
xchg
repnz
bound
arpl
inc
fs
inc
gs
jmp
repnz
jmp
mov
and
sarl
stos
cmp
dec
and
call
sub
inc
addr16
fcoml
pop
movb
jmp
mov
lret
out
jo
mov
mov
mov
pop
mov
xlat
dec
add
add
jne
push
jne
mov
mov
inc
push
jmp
stos
xchg
movb
jmp
push
xlat
inc
and
aaa
mov
sahf
stc
or
int
ret
mov
mov
out
hlt
movb
movb
movb
mov
call
jmp
sub
cmp
push
cld
jns
mov
test
imul
insb
popa
movb
movb
movb
jmp
pop
add
inc
jno
movb
lea
push
pushl
movb
jmp
fwait
sbb
adc
lea
jno
xorb
movb
jmp
je
xchg
cmc
add
push
fmuls
fsubrs
mov
sbb
popf
add
add
mov
xchg
or
das
mov
pop
movb
movb
movb
movb
movb
jmp
ss
stos
aaa
add
inc
arpl
xor
inc
gs
jmp
xchg
cwtl
decl
lods
movsb
movsb
ret
mov
mov
jne
rolb
movb
movb
jmp
popl
inc
fs
lret
js
movb
jmp
push
and
inc
insb
insb
jmp
lds
scas
pop
ljmp
lahf
setg
or
mov
mov
lea
push
pushl
jmp
movb
jmp
lods
cmp
aam
sub
xor
push
nop
or
movb
movb
movb
movb
movb
jmp
or
add
xchg
jb
vshufps
mov
jmp
add
mov
xchg
adc
adc
mov
stos
mov
jmp
mov
stos
into
cmp
pop
stos
inc
fistpl
scas
pop
mov
pop
nop
movb
movb
movb
movb
movb
jmp
push
inc
and
and
pushl
mov
mov
jmp
lods
das
mov
jns
mov
adc
add
cwtl
lea
jmp
fsts
cmpsl
push
mov
mov
ret
mov
adc
js
outsl
or
loop
les
add
xor
call
jmp
cmp
push
lds
pusha
mov
mov
mov
andb
jmp
int3
popf
jmp
pop
cwtl
push
imul
pushl
jmp
lock
and
jmp
call
jmp
adc
push
cs
push
popf
pushl
mov
jmp
xchg
sbb
lret
pop
ds
jge
sar
inc
adc
sbb
mov
mov
add
adc
add
mov
jmp
push
mov
sub
rolb
add
jmp
int3
popf
movsb
fs
jmp
lods
sub
mov
clc
cli
inc
jle
jmp
push
enter
popa
jmp
jno
push
jle
daa
ss
jmp
call
jmp
popl
xchg
repz
std
cmpsl
leave
add
jmp
int3
popf
dec
lds
iret
ds
fimull
fidivrl
nop
ret
mov
xchg
xor
xor
roll
add
push
call
jmp
rcrb
stos
data16
scas
and
call
pop
sub
add
xchg
jmp
mov
mov
arpl
and
add
pop
int3
inc
and
push
mov
sub
push
push
test
je
mov
jmp
leave
pop
enter
std
lock
call
jmp
hlt
fs
popf
insb
ffree
push
push
jmp
adc
jno
cmpsl
aaa
push
mov
jbe
xor
pusha
notb
aam
dec
stc
stos
ret
jmp
mov
lea
test
add
add
dec
sub
sbb
scas
aas
pop
test
mov
cmp
inc
sbb
std
call
jmp
seta
bound
xchg
fs
inc
fidivrl
mov
add
add
mov
mov
jmp
xor
rcll
mov
aaa
push
mov
lea
jmp
icebp
pop
jnp
das
add
jmp
lahf
pop
test
nop
testl
jl
js
into
pop
cmp
movsb
add
jb
lea
call
lea
push
jmp
in
mov
jne
jmp
mov
jmp
outsl
jmp
push
in
sbb
mov
push
mov
xchg
jb
movsb
ret
ds
mov
jmp
mov
scas
call
jmp
push
fisttps
flds
popf
mov
bnd
jmp
pop
xlat
inc
and
or
inc
and
sbb
lcall
add
add
xor
xor
setg
or
cmp
mov
jmp
cmp
test
lods
lret
inc
neg
insb
mov
jmp
hlt
popa
icebp
nop
arpl
sti
insl
std
test
mov
mov
and
push
jg
das
decl
fwait
or
pop
adc
in
sbb
das
mov
dec
mov
dec
mov
jmp
seta
bound
mov
lds
or
push
lock
ss
jmp
hlt
jne
mov
aam
lret
mov
les
int3
sub
bound
test
decl
xchg
mov
call
jmp
or
pop
std
cli
cmp
jmp
int3
popf
dec
roll
aad
fistps
test
test
add
inc
lds
iret
cmp
cld
call
sbb
subl
subl
add
jmp
mov
and
mov
xchg
lock
pop
popf
or
and
add
add
aam
add
pop
pusha
jmp
add
add
pusha
fcoms
mov
test
pop
leave
sbb
jl
push
lea
lea
call
pop
pop
test
jmp
shlb
mov
ret
dec
les
int3
imul
jnp
and
pop
into
test
mov
loope
mov
add
add
cmp
test
int3
arpl
xchg
gs
in
je
xor
adc
push
inc
or
andb
sub
jo
jmp
xchg
push
xchg
repz
mov
dec
in
xor
jo
jecxz
jmp
jne
jmp
out
clc
test
das
xor
adc
add
imul
add
cmp
mov
inc
mov
and
or
xchg
mov
jmp
sbb
sub
pop
enter
push
rolb
sarb
icebp
aad
ret
jmp
sbb
stos
sub
jecxz
push
in
mov
cmpsl
ret
cmp
mov
call
dec
sub
sbb
bound
rolb
add
jmp
fs
jmp
jmp
add
xor
fistl
mov
push
xor
xor
ljmp
scas
daa
mov
and
jmp
rorb
push
andl
add
add
add
lds
mov
adc
and
push
shlb
mov
lea
jmp
inc
xlat
inc
and
jbe
push
jmp
push
lds
jmp
loopne
jb
cmp
cmp
add
je
popa
jmp
push
rclb
ja
or
in
mov
push
xor
or
cvttps2pi
add
jmp
stos
xor
mov
inc
mov
cwtl
pop
xchg
repnz
xchg
or
in
xchg
sub
add
jnp
add
mov
add
jmp
loopne
in
je
add
mov
xchg
call
jmp
fistps
mov
lcall
shr
add
sbb
outsb
les
mov
mov
cwtl
dec
imul
add
add
lret
and
cli
cmp
mov
shll
std
test
popa
ret
push
mov
ljmp
mov
jmp
mov
int
bound
xchg
pop
jmp
push
dec
cmp
or
mov
jmp
jne
push
cmp
popa
icebp
nop
arpl
add
sub
movsl
test
jmp
and
sub
ret
mov
or
sub
std
push
lcall
mov
pop
add
leave
ret
jmp
stc
jmp
clc
jl
xchg
lea
call
lea
push
jmp
xchg
xchg
adc
adc
lahf
cli
or
mov
xchg
add
add
call
pop
jmp
mov
xchg
adc
loop
call
insb
or
out
pusha
insb
or
add
pop
aaa
roll
jl
inc
cld
js
enter
add
fcmove
jmp
jns
je
out
imul
gs
popa
add
sbb
xor
adc
push
pop
lea
call
mov
call
jmp
ficomps
stos
data16
lea
jmp
or
add
jbe
out
adc
adc
jmp
cmp
mov
mov
cmp
xchg
std
ljmp
push
pushl
call
jmp
icebp
jmp
test
xchg
repnz
jmp
xchg
xor
iret
inc
aad
dec
test
std
jmp
js
ljmp
pushl
pop
jmp
cs
inc
and
jmp
pop
aam
sub
sahf
stc
or
js
push
cld
ds
pop
movsb
mul
and
dec
add
jb
std
lcall
sbb
pushl
pop
nop
inc
mov
xchg
add
add
jmp
mov
mov
adcb
in
iret
iret
sub
add
jmp
push
push
xor
jle
mov
xor
jmp
pushl
jmp
inc
xlat
inc
and
outsb
xchg
add
jg
mov
xor
call
clc
movb
mov
call
mov
pop
pop
jmp
mov
mov
and
lods
popa
jmp
jo
jmp
jo
jns
jmp
cmpsb
xor
scas
inc
rorl
mov
push
cmp
dec
mov
mov
mov
andb
sub
jmp
push
lret
cltd
roll
add
and
popf
or
mov
pop
fisttps
jbe
sub
inc
adc
out
fldt
jmp
mov
movzbl
jmp
jnp
imul
mov
jne
mov
xor
sub
cmp
aad
jmp
add
add
jmp
sub
or
mov
and
sti
sbb
lea
jmp
in
gs
pushf
outsl
sahf
orb
clc
or
dec
rclb
and
fldcw
idiv
mov
into
mov
xchg
repz
test
inc
push
jmp
adc
orb
sti
push
aam
sbb
pop
jmp
loopne
jecxz
jne
or
or
cmpsb
adc
gs
pushf
outsl
les
fsubrs
rolb
jg
clc
push
xor
jmp
rolb
add
jmp
inc
xlat
inc
and
outsb
adc
and
dec
daa
mov
jmp
cmp
cmp
sbb
pop
into
test
inc
daa
shlb
push
mov
lea
call
jmp
movsl
xor
jp
jp
in
jne
mov
movsb
cmp
mov
scas
xchg
xor
jmp
and
push
lds
test
movsb
ret
ds
mov
insb
out
jl
idivb
mov
sub
push
push
test
je
mov
jmp
mov
movsb
ret
ds
stc
add
xor
sub
inc
cmp
jb
lea
call
jmp
adc
rclb
lea
jmp
or
jnp
jl
jne
popa
fistps
stos
pop
cltd
cmp
jns
aas
lea
jmp
push
mov
jmp
cmpsl
jmp
jmp
and
jne
jnp
mov
dec
leave
pop
cmp
and
outsb
xchg
popf
cmp
jne
addl
mov
jmp
rolb
mov
std
ljmp
lea
lea
call
jmp
pop
jmp
xchg
mov
js
jmp
add
jmp
call
jmp
insl
in
sbb
push
jbe
xchg
testb
cmpsl
inc
xor
sub
lret
shr
jns
jmp
pushl
jmp
mov
int
rcll
inc
iret
pop
cmp
add
jg
movb
movb
movb
movb
movb
jmp
mov
push
or
icebp
std
lcall
shrl
mov
push
xor
ja
nop
push
popa
nop
cmp
mov
ret
jmp
push
dec
mov
xor
outsl
xchg
call
add
xchg
popf
pushl
jmp
dec
fisttps
fsts
lds
iret
fs
js
mov
jmp
enter
les
jno
mov
xlat
mov
jmp
rorb
mov
popa
sbb
jmp
pop
lds
iret
das
cmp
sub
faddl
mov
mov
jmp
mov
stos
mov
cwtl
decl
ret
push
jbe
rclb
add
gs
jmp
movl
out
jno
sub
push
sub
cmp
push
fs
pushf
jmp
movsl
mov
mov
ret
mov
and
jmp
dec
int
and
add
dec
fidivrs
mov
xchg
popa
jmp
je
insb
or
cmc
mov
lret
fcoms
mov
out
mov
adcb
jmp
fs
enter
add
add
scas
and
ss
pop
inc
and
jns
ret
cmc
push
pop
jmp
or
std
das
popa
jmp
jp
jg
jmp
test
aaa
cmpsl
ret
mov
fwait
outsb
faddl
movzbl
add
cmp
je
jmp
arpl
rolb
add
jmp
imul
cmp
add
jb
in
jno
sub
sbb
pop
repnz
fs
push
mov
pop
aas
lret
mov
and
loop
je
test
xchg
repnz
cmp
shlb
add
add
jmp
rorb
push
rcr
inc
aam
dec
leave
mov
mov
xor
lea
jmp
xor
and
xchg
add
jnp
mov
inc
mov
fs
cs
jne
addl
mov
jmp
dec
sti
clc
fcomps
lar
add
inc
shlb
mov
and
les
shlb
test
sbb
jmp
ficoms
pop
scas
aaa
mov
mov
int3
xor
in
sub
push
push
test
je
push
pop
push
mov
lea
jmp
das
test
ficoml
mov
sub
mov
mov
xchg
lock
mov
repz
and
aas
pop
test
repz
mov
stc
scas
xchg
add
ljmp
sub
inc
cmp
jb
lea
call
jmp
add
mov
cwtl
lock
lea
jmp
mulps
cmp
add
push
xchg
pop
bound
out
movsb
push
shll
fwait
movsl
lea
jmp
loope
sbb
std
jmp
push
test
jge
dec
cs
stc
pop
jmp
ss
inc
mov
jmp
loope
jae
mov
mov
push
lahf
push
fwait
cmp
ret
lea
call
mov
call
push
jmp
pop
push
push
jmp
sbb
xor
xor
adc
mov
jmp
sbb
inc
lods
sub
dec
fstpt
jp
in
sbb
jge
jmp
lods
sub
rcll
mov
push
jmp
test
jmp
cwtl
adc
call
stos
and
fldt
add
repnz
decl
xlat
dec
add
aam
std
jmp
mov
test
sub
pop
pop
jmp
cltd
push
test
push
lret
lods
mov
xchg
jmp
cmp
lahf
xchg
jmp
inc
mov
testb
fnsave
movsb
cmp
sbb
ret
push
leave
ret
jmp
xor
fmuls
add
fs
pop
repnz
sub
and
jmp
mov
mov
es
insl
ljmp
stc
mov
mov
jg
sub
lock
jmp
ret
push
lds
outsl
hlt
push
cld
push
mov
mov
movsl
xor
cmp
pushl
call
push
lea
mov
mov
jmp
hlt
push
lahf
push
movsb
cmp
mov
dec
mov
adc
push
lahf
mov
and
cmp
jne
addl
jmp
mov
mov
add
cmp
je
jmp
gs
push
in
add
push
lds
push
in
adc
xlat
add
pop
cmp
xor
imul
insl
sahf
insb
jmp
repz
cmpl
xchg
jb
jl
xchg
add
jae
sub
decl
add
mov
add
add
jmp
inc
sbb
and
add
add
jmp
ja
insb
or
cmc
push
fimull
fidivrl
pushf
mov
sub
sar
inc
adc
mov
jo
inc
xor
jmp
push
jmp
test
jmp
jbe
outsl
or
roll
pop
aas
lret
mov
jns
das
ja
cli
lahf
leave
jmp
in
in
jg
mov
mov
sbb
testb
adc
ja
inc
or
mov
inc
in
les
cmpsl
push
jecxz
adc
in
sbb
ss
sahf
imul
in
push
push
mov
test
jmp
shll
jmp
jmp
out
mov
jmp
inc
aam
sub
or
test
call
jmp
ret
lods
pop
cli
jle
jp
in
das
rorb
mov
sbb
xchg
jl
lea
jmp
sahf
add
pusha
insb
or
and
add
lea
jmp
rcll
mov
iret
stos
pop
cmp
and
repz
pusha
and
popf
jmp
push
bound
nop
testl
sbb
sbb
pop
xchg
repnz
es
inc
or
andb
sub
jo
jmp
and
frstor
or
gs
add
pop
movsl
cs
adc
inc
mov
mov
adcb
andb
imul
xor
jmp
pop
mov
jns
pop
scas
and
sbb
stc
shlb
fldenv
jmp
inc
aam
sub
push
cmp
mov
cmpl
cld
add
push
jmp
pop
xchg
mov
fs
pop
repnz
sbb
sahf
or
lcall
test
je
add
mov
jmp
jmp
jns
bound
sbb
dec
sub
and
mov
es
jmp
iret
lea
jmp
xchg
or
in
cld
sbb
push
xchg
or
insb
or
iret
popa
xor
mov
jmp
push
roll
sarl
inc
cltd
cld
repz
pop
jmp
push
lods
test
add
add
dec
sub
xor
outsb
or
sbb
aas
ret
popf
int3
jnp
mov
mov
jmp
sti
gs
into
jmp
sti
jl
jne
push
sbb
pop
lret
scas
pop
mov
dec
fistpll
movsl
inc
jmp
jae
add
jmp
lahf
adc
in
sbb
push
fisttpll
out
stos
and
mov
push
mov
push
push
push
call
test
jmp
lcall
inc
clc
jmp
pushl
jmp
mov
xchg
icebp
add
cmp
or
inc
sub
je
jmp
push
cltd
or
sub
jmp
out
mov
aam
fidivrl
add
add
add
popa
icebp
nop
arpl
push
ret
ret
mov
test
hlt
xchg
sahf
push
jmp
fisttpl
mov
mov
int3
inc
and
dec
sub
or
je
jmp
pushf
or
mov
jmp
in
jb
xchg
mov
mov
sahf
or
cmpsb
outsl
adc
pushf
cmp
jmp
xor
shrl
jmp
mov
cltd
clc
or
lahf
sbb
das
scas
cmp
mov
enter
push
test
ja
jmp
mov
call
mov
call
mov
jmp
pop
pop
outsl
arpl
pushf
mov
jmp
stos
xor
and
lods
cmp
int
and
rolb
jmp
adc
iret
xchg
push
mov
les
adcb
andb
pop
std
jmp
test
adc
jle
addr16
sub
lea
jl
mov
call
jmp
test
add
ss
pushl
pop
push
jmp
mov
lcall
cs
push
lds
jecxz
push
in
mov
adc
sbb
filds
ljmp
dec
ljmp
dec
mov
jmp
lret
test
lock
mulb
xchg
popa
mov
push
pusha
notb
dec
das
fidivrl
xchg
add
sahf
pop
pusha
stc
imul
call
add
xchg
popf
pushl
jmp
pop
and
loop
lea
and
lock
sub
push
xchg
or
xor
int
mov
cli
mov
outsl
add
add
add
movsb
cmp
lods
cs
je
lea
add
add
test
inc
cld
adc
test
std
jmp
in
cli
popf
insb
mov
adcb
cmpb
movsb
ret
ds
movzbl
add
cmp
jmp
lods
das
mov
ljmp
sub
dec
mull
je
jmp
mov
jmp
inc
iret
pop
cmp
xor
lcall
and
sahf
icebp
mov
ret
jne
addl
mov
jmp
mov
call
push
xor
or
mov
rclb
add
icebp
popa
jmp
sbb
es
dec
mov
stos
iretw
scas
lods
lret
inc
not
into
lret
sar
inc
adc
ret
mov
pop
cmp
inc
and
movsl
add
call
sbb
ds
shll
sub
jo
xorl
addl
gs
lea
jmp
jne
outsl
or
lds
jle
call
dec
jo
push
call
mov
xchg
adc
sbb
popa
clc
notl
adc
mov
mov
andb
sub
jo
mov
jmp
and
add
jl
pushl
jg
jmp
outsl
lcall
or
rcrb
cld
call
and
mov
xchg
test
and
mov
add
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
add
and
fisubrs
int3
inc
and
fwait
decb
fwait
jbe
jp
xchg
cmc
add
mov
stos
int
jmp
xor
push
test
push
mulb
jns
jmp
cltd
adc
sbb
xchg
and
mov
xchg
xor
in
pusha
notb
stc
cwtl
imul
mov
lods
lods
lret
inc
out
test
in
sbb
test
scas
lret
xor
adc
mov
xchg
in
jg
mov
mov
mov
out
jl
notb
stos
cmp
inc
test
mov
and
push
scas
sub
jg
movsb
cmp
xchg
add
xchg
popf
pushl
jmp
shlb
mov
push
add
fdivrl
add
pop
push
add
adc
and
mov
cld
psllq
pop
cmp
add
mov
dec
mov
push
in
add
jne
mov
pop
xchg
or
jle
inc
shll
pop
cmp
add
inc
mov
xchg
in
pusha
notb
scas
lret
data16
push
cld
dec
mov
mov
das
test
jne
out
pop
ljmp
fwait
jbe
in
loope
jae
push
les
int3
gs
or
movsb
ret
ds
push
leave
pop
cmp
or
arpl
cmc
adc
rorb
inc
and
aaa
adc
cltd
push
xchg
repz
mov
jmp
out
push
mov
rclb
xchg
add
sahf
jnp
out
adc
adc
inc
das
test
test
fcoml
mov
mov
xchg
icebp
add
sub
movb
movb
movb
movb
movb
jmp
mov
scas
leave
cmp
xchg
sbb
out
adc
dec
cli
jnp
mov
out
lock
bound
insb
lret
xchg
or
dec
shlb
cld
call
and
mov
test
fisttps
push
std
mov
mov
cltd
or
xor
mov
sbb
pop
int3
stos
rcr
push
ret
cmpsb
push
hlt
dec
roll
rcll
jae
jle
call
inc
mov
lret
mov
insb
or
addl
mov
xchg
lock
bound
int
xchg
adc
mov
pop
fisttpll
out
pop
jecxz
push
in
rcll
pop
mov
insl
std
test
imul
pop
rolb
shlb
daa
fcoms
mov
adc
sbb
movsl
xor
pop
pop
test
jge
and
push
loop
mov
js
and
mov
adc
cmp
jg
sbb
movsl
xor
int
and
aaa
xlat
dec
frstor
xchg
movb
movb
movb
movb
movb
jmp
inc
fisttpll
out
imul
jmp
stc
xchg
adc
mov
sub
and
pop
add
cli
jl
jne
jp
int
and
add
rclb
cld
call
and
mov
sbb
add
stc
ret
in
add
sbb
or
mov
push
add
add
data16
adc
or
jg
mov
cmpsl
sub
lds
jne
xchg
testb
jle
dec
shlb
shlb
mov
add
add
mov
mov
add
mov
mov
mov
push
add
popf
in
mov
repz
aad
shlb
ret
jecxz
gs
pushf
outsl
lret
pop
and
push
mov
fisubl
push
fimuls
push
aam
fdivrs
cld
fwait
jbe
cmp
or
mov
enter
dec
mov
test
cltd
push
dec
mov
imul
xor
sub
fs
jge
notl
and
les
cmpsb
push
mov
int
lret
inc
fidivrl
adc
inc
rcrl
stos
rorw
fwait
or
and
icebp
popa
add
pop
mov
test
lods
and
sbb
stc
mov
pop
enter
call
lods
lret
inc
loope
mov
dec
mov
sbb
xor
nop
aaa
movsl
xor
test
xchg
iret
pop
int
addr16
xchg
add
sahf
aaa
cli
insb
loop
je
cwtl
or
add
outsb
stc
imul
fnstcw
xor
scas
dec
sbb
rcrb
rcrb
push
mov
or
or
mov
add
sbb
rclb
mov
or
mov
mull
stc
out
push
add
mov
addr16
adc
push
out
icebp
popa
add
jbe
ret
push
lds
pop
cmp
inc
and
cmp
ljmp
ficomps
test
icebp
nop
arpl
test
sbb
idivb
test
sbb
push
mov
call
les
int3
imul
inc
shlb
loopne
jb
dec
fisttps
fsts
sbb
xchg
or
sub
jb
adcb
sbb
insl
cli
push
test
xor
aad
frstor
or
in
ret
ret
sti
imul
adc
jge
divl
lods
cmp
stc
mov
stc
jo
push
add
rclb
mov
add
add
mov
add
sbb
rclb
push
mov
push
mov
push
add
mov
fdivrs
fnstcw
je
out
push
outsl
out
jl
notb
les
mov
mov
xor
js
xchg
cmc
add
out
icebp
nop
arpl
inc
lret
lret
push
pop
aad
sub
cs
nop
push
popa
nop
aaa
add
in
cltd
push
loop
mov
pusha
push
les
int3
test
in
sbb
int
repnz
fs
leave
pop
cmp
js
mulb
push
xor
cmp
aas
pop
test
mov
xchg
push
xor
sub
ljmp
std
dec
xlat
inc
and
pop
mov
and
mov
sbb
xorb
adc
movb
dec
test
rolb
shrb
pop
jp
inc
mov
cmpsl
ret
pop
jecxz
push
in
fstpl
ja
sbb
rcrb
mov
stc
cmp
and
loope
notl
ficoms
mov
stos
int
iret
stos
and
jo
xchg
sbb
les
int3
imul
imul
or
push
outsb
insb
or
mov
jo
xorl
push
loop
jmp
sub
cs
mov
das
fidivrl
jl
jne
inc
sbb
push
int3
inc
and
les
mov
mov
stos
or
insb
loopne
clc
ja
sbb
rcrb
mov
ja
sbb
or
or
mov
or
or
mov
or
or
sbb
mov
mov
add
xor
insl
inc
lret
pop
ds
adc
or
addb
or
movsb
and
push
pushf
sti
push
jecxz
leave
pop
cmp
and
jle
sub
sbb
or
sbb
js
mov
inc
mov
aaa
mov
mov
xchg
icebp
add
cmpsb
rcrb
mov
push
add
imul
add
add
pop
mov
je
lea
ret
ret
adc
popa
call
sub
xor
add
aad
jno
test
mov
mov
imulb
sahf
insl
ret
iret
stos
pop
jns
jle
call
pop
test
fwait
or
in
mov
mov
add
add
cltd
rclb
push
in
sbb
xchg
add
and
mov
fs
popf
insb
fstl
push
xor
imul
mov
inc
sub
push
inc
cli
lret
stc
xchg
xlat
dec
add
mov
push
add
sbb
xchg
or
jbe
aad
xlat
stc
mov
add
stc
xchg
mov
add
push
jno
push
sbb
ja
sbb
cld
call
and
mov
adc
rolb
rclb
pop
xchg
repnz
pinsrw
pop
repnz
fs
inc
shlb
jg
jmp
xchg
pusha
mov
dec
fdivrs
ss
mov
push
mov
add
adc
pop
cmp
xor
inc
and
fidivrl
pop
cmp
add
loopne
pusha
notb
and
mov
sub
stos
cmp
fisttps
xchg
add
sahf
das
push
lods
and
es
mov
and
jo
xorl
pop
mov
movntq
inc
sub
xor
adc
xlat
push
jge
insl
hlt
pop
int3
movsb
and
cmp
les
mov
std
test
sti
jl
jne
push
je
mov
sbb
cld
call
and
mov
add
xchg
adc
in
push
mov
xchg
icebp
add
outsl
in
sbb
jne
out
or
inc
sub
loopne,pn
cld
fwait
jbe
insb
loope
adc
xor
dec
or
daa
outsb
cld
xchg
cmc
add
push
mov
mov
sbbl
icebp
add
adc
stos
sbb
mov
aam
sub
or
jbe
lods
lret
inc
scas
push
into
pop
cmp
push
cwtl
add
iret
push
ret
cmpsb
push
lcall
push
js
ljmp
into
inc
rclb
ds
fmuls
fmuls
mov
sahf
stc
or
add
and
cmp
mov
arpl
xchg
cmpl
and
add
cld
call
and
mov
cmpsl
mov
add
sub
push
xchg
repz
test
fimull
fistl
lods
pop
lahf
test
mov
inc
shll
bound
jnp
in
pop
mov
popf
cmpsl
aaa
cmpsl
ret
fmuls
movsb
push
cld
out
loope
jae
dec
fisttpll
out
sbb
sbb
adc
xchg
add
jnp
gs
pushf
outsl
test
jae
xchg
icebp
outsb
cld
fwait
jbe
xchg
lock
mov
aam
dec
add
shlb
shrb
sub
and
add
sbb
sbb
adc
adc
stc
movsb
mov
add
inc
and
xchg
adc
cwtl
sbb
mov
inc
mov
lret
movsl
push
stos
jge
push
jbe
cmpl
rclb
sub
repnz
jge
je
fistl
mov
mov
sbb
cltd
or
dec
lcall
stc
xchg
xlat
dec
add
stc
mov
nop
sbb
aad
out
dec
fdivrs
iret
stos
pop
shl
pusha
notb
cs
mov
sub
dec
es
inc
mov
stc
outsb
cld
fwait
jbe
cmp
cltd
or
in
mov
cs
cld
xchg
cmc
add
scas
movsb
ret
ds
add
insb
or
orl
xor
dec
roll
aad
loopne
notb
out
jno
xchg
sbb
adc
and
call
pop
fisttpl
sub
dec
mov
aam
cwtl
push
imul
scas
aas
pop
test
dec
mov
cwtl
imul
ljmp
stc
mov
fisttpl
fnsave
cmp
and
jb
xchg
jae
jp
in
inc
xchg
add
adcl
jecxz
mov
adc
dec
in
xor
push
add
fnstcw
shlb
add
add
adc
mov
ja
sbb
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
sbb
rclb
mov
add
mov
mull
sbb
sbb
sbb
rclb
mov
add
mov
mull
push
mov
add
add
mov
push
add
mov
jb
in
out
jne
mov
insb
repnz
pop
bnd
xor
or
popf
or
mov
inc
mov
add
push
cwtl
push
imul
in
jge
testl
push
fsts
mov
out
jno
and
daa
scas
cmp
mov
jmp
sti
sahf
insl
int3
pop
xlat
inc
and
or
jns
jmp
xchg
cltd
clc
or
cmp
addr16
push
cld
push
pushf
or
in
movsl
mov
cwtl
mov
lea
pop
aas
lret
pusha
notb
test
pop
mov
sub
rorb
mov
sbb
enter
enter
call
and
mov
push
add
add
scas
fisttpl
popf
sbb
pop
push
fbld
stc
sbb
or
sbb
ja
sbb
shlb
mov
mov
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
adc
add
stc
dec
add
dec
fbld
sbb
sbb
sbb
rclb
push
mov
push
mov
push
add
mov
clc
lahf
push
loope
out
mov
lret
lods
pop
fnsetpm(287
jns
mov
fwait
pop
add
data16
sahf
stc
or
mov
lret
sahf
stc
or
mov
stos
int
jmp
mov
push
sbb
std
jbe
cmpl
push
shlb
arpl
cmpl
cmp
fstps
scas
pop
cltd
sbb
int
int
sarl
jns
jmp
into
pop
int3
stos
data16
daa
mov
inc
mov
ds
cmp
dec
fstpt
adc
and
add
imul
sbb
dec
fistpll
or
sbb
rclb
mov
inc
mov
lahf
punpckhdq
sub
fistpll
and
pop
xor
dec
into
pop
cmp
xor
imul
add
inc
xchg
or
bound
fs
push
cmp
aaa
mov
mov
fisubrl
sti
mov
add
sarb
test
ss
xor
ja
sbb
sbb
mov
mov
mov
inc
mov
jae
xchg
cmc
add
pop
roll
rcll
sbb
pop
bound
mov
mov
rclb
jno
into
pop
cmp
jg
rclb
jno
xchg
add
cmp
dec
fnstcw
mov
push
mov
es
test
jge
outsb
setne
in
bound
xchg
repnz
pop
fimuls
pop
and
sbb
jg
mov
addb
testl
dec
mov
sbb
push
ss
inc
mov
imul
out
icebp
nop
arpl
int
pop
roll
shll
ds
inc
mov
hlt
pop
div
jg
mov
call
mov
sub
lret
inc
aam
dec
jmp
in
pop
or
into
pop
int3
stos
data16
sti
push
lahf
push
push
mov
jns
cmp
xor
clc
ja
sbb
rcrb
mov
add
add
mov
or
or
sbb
mov
enter
xchg
push
xchg
repz
cmpsl
xchg
add
data16
xchg
outsb
leave
ret
pop
iret
stos
pop
movsb
jecxz
out
mov
pop
push
xor
and
call
push
mov
popf
insb
jmp
push
pushf
sti
push
fildll
fdivrl
mov
xor
sub
pop
sbb
addr16
out
push
dec
shlb
or
or
or
or
or
mov
test
push
add
lret
scas
pop
mov
outsb
cld
fwait
jbe
adc
mov
add
xor
jl
or
or
xor
mov
stc
jge
push
add
aas
pop
test
inc
mov
dec
push
xor
sub
mov
insb
or
cmc
enter
dec
jmp
lret
xchg
add
roll
aad
mov
xorl
sbb
mov
sahf
cmp
mov
mov
and
dec
std
push
movsb
fisttps
mov
mov
outsl
or
in
ret
test
mov
and
push
shlb
push
movsb
insl
pop
fimull
fidivl
sub
pop
fimuls
add
mov
loope
hlt
xchg
outsb
mov
xorl
xor
or
xchg
push
mov
les
xchg
add
jne
xchg
add
bound
pop
ljmp
inc
jno
stos
es
cs
push
shll
mov
add
stc
cmpl
shlb
mov
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
adc
add
stc
inc
ret
popf
sbb
frstors
mov
sbb
sbb
sbb
rclb
mov
or
mov
mull
sbb
sbb
sbb
rclb
mov
or
mov
mull
push
mov
or
or
mov
push
add
mov
fidivrs
xchg
icebp
add
inc
jmp
add
std
or
mov
sbbb
add
and
pop
repnz
fs
cmp
and
popf
or
rclb
sub
push
ret
cmpsb
push
aam
pop
leave
test
fcompp
pop
leave
test
nop
icebp
jb
xchg
adc
or
je
mov
shlb
shlb
mov
add
add
mov
mov
add
mov
mov
mov
push
add
shlb
cli
popf
insb
xchg
mov
cld
icebp
jnp
mov
mov
scas
add
jl
sar
sti
mov
add
inc
lds
push
in
gs
pushf
outsl
sahf
daa
lods
and
push
jge
imul
pop
sub
dec
fistpll
pop
cmp
sbb
xchg
push
or
ljmp
aam
dec
out
push
lret
in
push
popf
or
jle
mov
int3
aas
xchg
sub
cs
mov
cli
or
mov
in
in
je
cmp
mov
xchg
bound
push
lea
ja
sbb
shlb
mov
stc
pop
rcll
movsl
cmp
aas
scas
lret
push
inc
and
pop
pop
pushf
xor
dec
mov
cmpsl
ret
or
fstpl
ja
sbb
sbb
mov
sbb
add
stc
xor
dec
add
pop
fbld
stc
push
rclb
in
sti
sahf
insl
mov
dec
sub
daa
test
nop
testl
jg
jg
lods
cmp
hlt
push
cld
seta
aad
movb
pop
fisttpl
cmp
in
popa
icebp
nop
arpl
cld
mov
xchg
or
int3
pop
int
addr16
int
repz
rorb
mov
movsl
xor
pop
xchg
repnz
dec
stc
mov
mov
and
cltd
fs
mov
in
sbb
pop
xchg
dec
fidivrs
call
inc
shlb
ss
mov
mov
lods
rcll
mov
inc
and
and
ret
push
lds
popf
or
push
les
ds
test
imul
xlat
dec
add
inc
pusha
dec
movb
movb
movb
jmp
push
push
mov
add
add
cld
call
and
mov
adc
add
stc
jl
push
add
lods
fbld
stc
leave
cmpsl
push
add
inc
ret
push
add
shrb
hlt
ja
sbb
sbb
mov
rorb
fbld
adc
add
stc
adc
add
ja
mov
stc
loop
push
add
inc
cmc
int
xor
xor
mov
or
or
mov
add
sbb
rclb
mov
or
mov
mull
stc
das
int
add
mov
ds
test
push
fmuls
fdivrs
pop
pop
lahf
punpckhdq
xchg
popa
mov
or
rorl
repz
mov
or
xor
fldt
fmuls
fdivs
ljmp
lods
lret
inc
out
and
es
mov
mov
xchg
add
cld
gs
pushf
outsl
cs
inc
mov
push
cmc
sbb
mov
sub
loope
test
ret
jmp
jge
pusha
out
adc
or
sbb
je
or
in
ret
or
push
jns
jge
cwtl
push
imul
push
mov
les
inc
es
xor
push
lds
dec
lds
iret
push
pop
pushf
stc
ljmp
sub
sub
and
add
sbb
sbb
adc
adc
ret
dec
ret
subb
inc
leave
pop
cmp
outsb
pushf
push
pushf
sti
push
mov
mov
xor
xor
jl
js
ljmp
cwtl
mov
sahf
lods
aas
scas
lret
pop
push
xor
or
in
sbb
out
mov
test
cmpsl
ret
xlat
jo
sub
add
add
shlb
fbld
aas
rcll
rorb
mov
cmpsb
shll
mov
lea
inc
daa
sarb
stos
sub
insl
std
test
loop
cli
popf
insb
xchg
xchg
adc
jns
mov
out
aas
mov
clc
ja
sbb
sbb
mov
stc
sub
add
shll
test
xor
loopne
adc
or
jp
jp
fcomps
stos
pop
xorb
daa
inc
mov
push
aam
sub
int3
stos
xchg
sub
inc
cwtl
adc
pop
xor
fstl
pop
scas
test
cltd
clc
or
js
jno
xchg
testb
lcall
testl
fs
and
ljmp
xor
adc
push
ret
cmpsb
push
cli
cmpsb
xor
jb
xchg
pusha
cli
push
mov
jge
jnp
in
add
push
aaa
ret
ljmp
pop
jb
or
jns
jmp
inc
push
xor
daa
addl
lock
nop
pop
xchg
adc
insl
jmp
ja
add
daa
scas
sub
sbb
jp
in
add
sbb
xor
int
fidivrs
mov
inc
mov
push
jecxz
push
in
push
dec
push
jnp
in
aas
adc
gs
je
lea
jb
xchg
pop
mov
gs
cmp
add
jae
mov
fcom
xor
ja
sbb
sbb
mov
mov
ret
ret
gs
pushf
outsl
fsts
cmpsb
push
in
mov
inc
mov
xchg
push
pushf
sti
push
aad
mov
icebp
outsl
lcall
mov
and
pop
les
int3
dec
sub
xor
xchg
adc
loope
adc
or
inc
and
cmp
dec
frstor
outsl
lcall
je
mov
lods
and
push
xchg
add
jno
pop
int
orl
arpl
xchg
les
iret
jmp
mov
ja
sbb
rcrb
mov
stc
lcall
xchg
testb
mov
in
pop
stos
or
or
les
scas
pop
repnz
sbb
add
add
and
mov
mov
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
add
sbb
rclb
mov
or
mov
mull
stc
xchg
leave
push
add
mov
mov
mov
xchg
and
mov
inc
mov
mov
stc
outsb
sti
imul
sbb
lret
mov
lret
xor
and
fistps
mov
js
inc
stos
sub
insb
or
out
adc
xchg
adc
call
mov
ret
jmp
std
jne
mov
loopne
stc
cwtl
imul
pop
or
lock
mov
int
call
divb
dec
fnstcw
mov
and
or
ja
sbb
sbb
mov
add
add
mov
or
or
sbb
mov
lds
push
adc
daa
iret
pop
int
addr16
cld
xchg
cmc
add
and
sbb
push
lahf
push
roll
mov
jmp
push
xchg
scas
cmp
xchg
add
jnp
rolb
sarb
dec
inc
and
pop
in
jno
xorb
fdivl
in
mov
scas
gs
push
in
add
pop
jp
jb
fisttpl
frstor
mov
test
stos
sub
pop
fwait
or
push
xor
adcl
pop
leave
test
stos
scas
and
xor
int
call
popa
lods
sbb
imul
aam
aad
dec
in
mov
fcoml
cmpsb
push
cli
js
jl
testb
leave
test
lock
inc
loope
ljmp
xor
cmp
xor
or
in
imull
fwait
jbe
xor
or
or
sbb
mov
stc
jns
push
add
mov
das
stos
xor
cmp
cs
and
or
mov
shlb
sbb
add
add
adc
mov
mov
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
mov
add
mov
mull
stc
popf
mov
add
test
push
negb
cltd
or
jno
pushf
xor
inc
or
ja
leave
pop
cmp
push
mov
cmpsl
ret
data16
adc
or
xor
cmp
dec
scas
jbe
cmpl
aas
scas
lret
sub
xor
add
xor
je
inc
lcall
jne
mov
inc
roll
sarl
je
lea
leave
pop
cmp
pusha
sub
pushf
or
fisttpll
out
cmp
aas
pop
test
out
sar
popa
icebp
nop
arpl
jecxz
dec
lds
push
add
stc
sti
mov
mull
icebp
adc
fisubrs
mov
dec
mov
inc
mov
idivl
mov
cmp
xchg
xchg
repz
out
es
cs
stos
sub
lds
add
adc
push
cmpsl
and
scas
aas
pop
test
lret
inc
mov
test
pop
test
popa
out
jg
jmp
dec
mov
loop
mov
ja
test
lahf
cli
or
in
pusha
notb
scas
leave
cmp
lret
inc
and
outsl
das
mov
fmuls
mov
out
jo
sti
insl
std
test
cmc
pusha
notb
xlat
mov
mov
cld
test
aad
push
shll
or
sub
cmp
pop
leave
test
nop
jge
insb
or
out
arpl
jno
jecxz
hlt
jnp
mov
push
roll
shrl
sbb
mov
fadds
lock
dec
sbb
ja
sbb
rcrb
mov
ja
sbb
mov
mov
add
add
sbb
mov
push
add
lods
mov
lods
lds
movsb
push
cmpsb
int
aam
dec
lods
xlat
pop
int
orl
out
cltd
push
aad
lock
adcl
test
xchg
add
xchg
or
sub
imul
push
mov
mov
sbb
xchg
cmp
xchg
add
and
mov
add
push
popa
nop
daa
test
xchg
adc
jo
jl
jne
out
psrlq
mov
pop
bound
mov
cmp
notl
scas
sub
lds
js
outsb
or
adc
inc
xlat
mov
stos
dec
das
sti
outsl
stc
js
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
cs
cld
jae
xchg
dec
add
add
add
jge
je
jnp
rcll
push
popf
pop
dec
enter
and
outsl
or
hlt
jmp
cmpb
inc
roll
aad
lods
and
mov
gs
inc
cwtl
adc
in
sbb
mov
lcall
dec
fstpt
test
pop
lods
outsb
std
insl
hlt
pop
lods
push
ret
ret
mov
dec
mov
lock
int
imul
add
cmp
test
pop
lds
iret
daa
jb
jns
jmp
sbb
inc
xlat
mov
enter
mov
push
xor
sub
jae
pusha
pop
repnz
or
ja
dec
fdivrl
sahf
jno
in
ret
push
add
stc
cmp
push
add
addr16
or
sahf
shlb
sbb
mov
into
push
add
or
and
and
hlt
ja
sbb
sbb
mov
add
add
subl
lock
fbld
push
add
les
sti
sahf
insl
cwtl
and
adc
xor
inc
ja
insb
or
cmc
outsb
loopne
adc
inc
nop
sbb
push
fimull
ficompl
pop
rolb
shlb
and
jg
mov
push
rcll
jo
push
shlb
lds
loope
nop
add
std
or
rorb
mov
lods
mov
xchg
xabort
notb
ret
cmpsb
push
mov
or
cmp
mov
outsb
popf
jae
mov
divl
cmpl
pop
int
addr16
popa
out
adc
cmp
mov
pop
int3
stos
data16
mov
pop
aam
sub
sbb
aaa
cmpsl
ret
sahf
adc
insl
std
test
stos
es
cs
pop
lcall
xor
pop
dec
stos
sbb
ja
sbb
xor
mov
stc
dec
int
add
hlt
xchg
outsb
jne
jnp
in
pop
scas
lods
lret
inc
out
fistl
cmpsb
push
loop
rolb
sarb
inc
aam
dec
stc
in
out
jno
pushf
push
xchg
repz
int
inc
xchg
shrb
call
rcrb
mov
int
add
jle
call
testl
lret
inc
scas
loop
adc
add
mov
jns
punpcklwd
jno
jecxz
push
shrb
sub
mov
add
add
mov
add
sbb
rclb
mov
or
mov
mull
stc
lret
pop
push
add
mov
and
pop
jmp
stc
cwtl
imul
or
loopne
cmc
pushf
outsl
mov
xlat
and
dec
frstor
test
stos
cmc
jle
mov
test
je
xchg
testb
jno
lret
pop
ds
push
fisttpll
out
jbe
imul
lods
mov
repz
bsf
lds
fdivs
pop
int3
stos
data16
mov
xchg
push
ret
ret
push
shll
inc
mov
int
les
enter
jnp
jo
loop
mov
les
mov
jo
xorl
loop
adc
add
pop
inc
push
mov
scas
rcrl
cmp
incl
pop
jp
inc
pusha
icebp
cmpb
inc
jmp
loope
jecxz
jne
std
jo
xorl
imul
jmp
int3
pop
int3
stos
data16
fwait
imul
leave
or
insb
push
inc
add
jmp
cs
push
lds
xor
fwait
or
xor
xor
rolb
call
mov
push
call
daa
mov
inc
mov
gs
pop
repnz
ja
jno
jecxz
roll
mov
jmp
dec
add
mov
push
add
int
cmpsb
pop
dec
test
push
call
lret
pop
pop
push
call
jg
jp
in
push
mov
in
sbb
fiaddl
mov
test
push
add
test
add
shlb
fbld
shrb
sub
and
add
sbb
sbb
adc
adc
stc
push
rclb
push
sub
sub
dec
imul
jmp
adc
subb
std
fldl
add
mov
jmp
lcall
std
test
movb
dec
cmpsb
cwtl
pop
sub
push
call
dec
enter
ss
xchg
jb
pop
dec
lret
lret
shll
ljmp
movl
lcall
sub
andps
dec
sub
adc
adc
pop
bound
in
add
dec
cmp
cmp
lahf
push
test
push
in
cmpsb
sub
sub
aas
mov
inc
mov
gs
jg
jmp
mov
out
pop
stc
es
inc
in
add
call
lods
cmp
out
inc
test
jmp
lods
cmp
push
sahf
or
cmpsb
pop
mov
mov
and
adc
lods
push
add
stc
rclb
push
jbe
ja
loope
sub
jp
jge
notl
adc
in
sbb
and
mov
mov
add
call
or
mov
rcrb
cmp
daa
lods
cmp
movsb
ret
ds
add
call
pop
adcb
addb
cltd
or
push
cli
jg
mov
xchg
sbb
xchg
xchg
xlat
dec
add
mov
push
add
pop
cmp
sub
mov
mov
jmp
mov
movzbl
jmp
dec
into
pop
cmp
sub
lock
lea
adcl
inc
jmp
ja
xchg
testb
lods
dec
aad
repz
xchg
or
push
lds
jmp
or
mov
jmp
push
call
xchg
sbb
rorl
push
addb
pop
add
mov
push
add
lret
lret
scas
pop
cld
fisttpl
mov
inc
and
jbe
rclb
jno
cmp
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
pop
aad
add
or
cmpsb
psubusb
mov
xlat
mov
out
test
sbb
add
add
xor
mov
stc
js
push
add
cld
add
jmp
xchg
add
stos
lods
lret
inc
loope
xchg
mov
xor
sbb
ljmp
shlb
insl
hlt
pop
out
xor
add
int3
push
shll
ret
ds
jp
jp
mov
in
cld
adc
jns
roll
shrl
sbb
or
dec
lea
lahf
cli
or
inc
lds
iret
and
sbb
add
lods
sub
repz
cmc
add
notl
sbb
inc
adc
gs
test
rolb
shlb
aaa
push
mov
outsb
popf
sub
ja
loope
mov
mov
and
sub
outsl
adc
daa
arpl
xchg
mov
cmp
subl
add
jp
jno
xorb
pushf
cmpsl
sub
cwtl
xlat
dec
add
cld
call
and
mov
rcl
push
add
xchg
fwait
decb
stc
or
fstps
stos
pop
into
dec
frstor
psubd
in
sbb
cmp
sti
pop
jecxz
push
in
pop
inc
and
sub
fdivrl
imul
pushl
cmpl
lret
pop
ds
cmpsb
das
mov
xchg
or
pop
cmc
js
mov
add
ljmp
je
mov
mov
sbb
push
clc
mov
fwait
or
pusha
hlt
push
cld
dec
cmp
out
je
lea
ret
ret
mov
dec
mov
mov
cmpsl
jecxz
adc
add
sbb
xor
add
add
shlb
fbld
stc
or
push
add
and
xor
xchg
add
pop
mov
lods
repz
xorb
mov
in
icebp
nop
arpl
and
jge
outsl
or
repnz
sbb
ja
sbb
sub
mov
mov
rcll
push
mov
ja
sbb
and
mov
stc
xchg
lock
add
add
jnp
shrb
sbb
ja
sbb
shrb
mov
mov
add
add
push
push
add
lock
stc
add
aam
jo
imul
mov
sbb
call
daa
inc
mov
jns
fs
sub
clc
dec
lret
pop
ds
es
dec
mov
decb
sbb
inc
mov
mov
imul
mov
es
inc
mov
sbb
ret
pop
iret
stos
pop
movsb
sub
add
dec
out
in
mov
outsl
lcall
mov
inc
xchg
les
into
int
ret
mov
scas
aas
pop
test
loope
lea
scas
cmp
mov
xor
ss
push
mov
int
enter
cmp
inc
and
shlb
sbb
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
sbb
rclb
mov
or
mov
mull
sbb
sbb
sbb
rclb
mov
or
mov
mull
push
mov
or
or
mov
push
add
mov
inc
and
add
jb
and
pop
lret
scas
pop
in
mov
mov
xchg
pop
jp
es
repnz
fs
adcl
test
inc
xlat
mov
out
mov
inc
mov
cmp
cmp
imul
xor
cwtl
pop
xchg
repnz
xchg
adc
aad
es
xor
ja
sbb
sbb
call
and
mov
add
dec
fistpll
sbb
xchg
pop
push
fwait
or
jae
stc
push
rcll
stc
aam
dec
add
shlb
shrb
sub
and
or
sbb
sbb
adc
adc
stc
fsts
push
in
jae
xchg
cmpsl
es
cs
mov
sahf
stc
or
repz
lea
dec
fnstcw
scas
lret
xchg
and
loopne
les
int3
cs
jg
mov
or
push
dec
or
dec
les
int3
push
int3
inc
xlat
mov
call
add
pop
xacquire
int3
ret
cmp
add
adc
mov
stc
int
push
add
mov
dec
fnstcw
sub
push
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
add
push
add
cmp
add
jae
in
clc
jae
xchg
sbbl
scas
xor
int
fisubs
xchg
testb
cli
adc
xchg
mov
adc
fnsave
hlt
je
lea
loope
adc
add
cmp
and
lea
add
in
sbb
mov
and
xor
lds
push
cmpsl
inc
roll
aad
into
inc
xlat
mov
fwait
jl
add
xor
fs
pop
mov
xchg
lock
lret
adcb
out
mov
jg
into
pop
into
test
out
jp
jp
and
insb
loop
je
add
or
clc
outsb
or
adc
push
les
cmc
pushf
outsl
ljmp
call
and
mov
mov
push
add
stos
into
cmp
mov
test
cmp
dec
int3
inc
and
cltd
stc
xchg
xlat
dec
add
mov
add
stc
xchg
ss
add
sbb
mov
stc
inc
fcoms
push
jmp
clc
lahf
push
lods
sub
stc
shrb
add
add
fbld
push
mov
movsl
int3
aas
ljmp
gs
adc
or
insl
std
test
int
aam
dec
lods
add
mov
push
shlb
sbb
add
add
sub
mov
mov
fistl
push
daa
lods
cmp
fisttpl
stos
sub
add
adcb
addb
adc
and
mov
cmp
cmp
push
lret
pop
ds
scas
cmp
mov
or
push
les
int3
imul
push
in
xchg
or
mov
enter
push
mov
mov
mov
test
jb
xchg
cmp
mov
scas
dec
enter
sub
pop
movsl
xor
add
jp
xchg
add
jns
imul
insl
cwtl
pop
xchg
or
jle
out
adc
or
sahf
or
cmpsb
push
popl
xchg
repnz
lret
sbb
jno
cmp
xor
jmp
out
mov
imul
or
dec
sbb
enter
enter
call
and
mov
mov
push
add
inc
daa
sarb
nop
push
popa
nop
and
or
push
imul
jmp
call
xchg
data16
xchg
outsb
test
ss
ja
sbb
and
mov
stc
add
push
add
inc
and
test
mov
sbb
jmp
lret
dec
fistpll
add
sahf
jbe
mov
mov
movsl
int3
aas
fdivrs
xchg
testb
ljmp
les
mov
mov
cmp
outsl
lcall
adc
arpl
jne
mov
out
gs
pushf
outsl
sahf
push
fstpt
movsb
cmp
js
mulb
cmp
pop
lret
scas
pop
cld
imul
aaa
movsb
cmp
add
adc
in
inc
inc
aam
sub
in
lret
shlb
rcrb
mov
mov
lods
ficoms
push
mov
mov
das
test
cltd
mov
xchg
insb
mulb
cmp
xor
lret
or
xchg
or
gs
pushf
outsl
ljmp
mov
movsl
int3
aas
aad
out
adc
push
inc
ret
ret
jmp
push
in
adc
repnz
dec
mov
or
push
fmuls
fsubrs
data16
cmc
adc
out
addr16
jl
testb
mov
notl
pop
rolb
rclb
rorl
repz
repnz
pop
repnz
jmp
out
mov
ljmp
loop
pop
loop
gs
popa
add
inc
sbb
xor
int
mov
fs
pop
sahf
add
std
or
add
or
fs
popf
insb
xchg
xchg
add
jp
in
jge
divl
stc
imul
repz
gs
inc
int3
rclb
rclb
shlb
shrb
sub
and
or
sbb
sbb
adc
adc
stc
insb
fsts
push
mov
cmpsb
shll
je
push
cld
adc
xchg
add
jbe
or
std
insl
hlt
pop
shr
push
je
addr16
pop
push
fisttpll
out
dec
rcll
and
popf
or
and
inc
aad
dec
ljmp
ja
imul
cli
popf
insb
lret
aaa
stos
cmp
sbb
xchg
aaa
movsl
xor
loop
pop
loop
outsb
clc
outsb
or
dec
in
jns
mov
xchg
or
repz
cmc
push
jmp
out
jno
std
data16
xchg
outsb
mov
popa
jge
jp
in
add
lock
in
pop
repnz
fs
xchg
or
push
xchg
fwait
decb
mov
push
xor
and
repz
cmc
or
mov
add
jnp
insb
or
out
xchg
sbb
dec
icebp
shrb
sub
add
add
add
add
mov
mov
add
mov
mov
mov
push
add
xor
inc
mov
shlb
or
imul
cmp
data16
std
or
or
daa
adc
cmp
dec
fdivrs
fwait
decb
sahf
insl
ret
repz
gs
pop
iret
stos
pop
into
mov
test
stc
popa
icebp
nop
arpl
sarl
nop
jp
push
xor
daa
dec
inc
and
pop
popa
jmp
shlb
sbb
ja
sbb
sbb
mov
add
add
dec
rorb
popf
sbb
mov
stc
pop
in
push
add
sub
cmp
xchg
mov
scas
cmp
mov
jle
insb
or
out
out
cmc
pushf
outsl
mov
jmp
stos
jle
xchg
add
sahf
imul
test
mov
and
scas
sub
and
mov
dec
mov
stos
shl
std
test
adc
add
mov
adc
xlat
mov
out
test
jge
cmp
jp
jp
xchg
push
xchg
repz
cmpsl
add
pusha
sti
imul
pop
sbb
insb
cmc
gs
pop
push
int3
inc
and
stc
cwtl
imul
cwtl
dec
aad
sub
pop
inc
rclb
or
stc
push
roll
sarl
ss
dec
mov
in
ljmp
je
add
add
or
cmpsb
ficoml
ja
sbb
shlb
mov
sbb
add
stc
pop
cmp
popf
sbb
mov
add
mov
push
add
jle
call
xorl
adc
jle
gs
push
cmp
stos
pop
xchg
roll
push
add
stc
mov
mov
shrb
clc
ja
sbb
rcrb
mov
loop
add
in
add
pop
cmp
add
inc
and
sbb
cmpsb
xor
scas
or
test
pop
test
cmp
mov
mov
cs
mov
xchg
push
ret
ret
pop
int3
stos
iretw
out
loopne
jb
out
loopne
jb
jb
jle
call
mov
xorb
je
lea
in
sbb
xor
and
add
std
or
nop
adc
lock
bound
nop
jne
dec
fdivrl
mov
and
inc
push
xor
cmp
adc
pop
movsb
cs
inc
aad
dec
scas
les
push
mov
cmpsl
aaa
push
mov
repz
test
mov
in
cltd
push
lcall
cltd
adc
popa
icebp
nop
arpl
test
testb
or
pop
enter
repnz
insb
stc
fcom
dec
add
mov
push
add
lahf
cli
or
rcrl
xchg
add
lods
and
pop
mov
movsl
int3
aas
aad
pop
iret
stos
pop
subb
sbb
or
dec
sbb
arpl
je
out
push
add
push
fisttps
flds
push
cli
fwait
adc
xchg
or
cmp
inc
shlb
adc
inc
mov
lcall
jp
jg
jmp
cmp
and
jno
jne
out
pop
fimuls
mov
imul
in
mov
xor
fistpll
or
jo
pop
xchg
repnz
mov
ret
push
leave
pop
cmp
dec
fstpl
xchg
lods
mov
cmpsl
ret
jmp
lahf
leave
dec
fidivrs
pushf
sti
push
call
fisttps
cmp
imul
sbb
push
sbb
mov
pop
iret
pop
cmp
pusha
out
loope
jae
xchg
mov
and
pop
ljmp
in
adcl
adc
lock
ja
adcl
test
adcl
test
std
insl
hlt
pop
in
xor
sub
pop
pop
fmuls
fsubs
sub
sbb
ja
sbb
sbb
mov
stc
mov
push
add
push
jns
pop
xor
cmp
push
lds
and
inc
dec
rcll
and
ret
sbb
add
add
and
mov
stc
xor
push
add
push
popa
nop
arpl
push
scas
and
adc
ficoml
lods
pop
cli
jmp
out
mov
pop
lret
lret
push
mov
fdivrl
pop
cmp
or
xor
and
jle
sub
jbe
cmpl
mov
inc
mov
or
or
jbe
push
xchg
repz
out
xchg
or
sbb
mov
loopne
lock
bound
sbb
mov
rcr
pop
int
andb
sub
call
push
jno
jne
mull
icebp
pop
lds
movsb
push
cmpsb
movsl
cs
cld
xchg
cmc
add
lods
cmp
fdivl
in
repnz
test
aaa
cmpsl
ret
dec
rclb
addr16
push
xor
jns
movsl
xor
jg
mov
imul
psubd
mov
xlat
dec
add
mov
push
add
push
jno
xor
cmp
pusha
sti
insl
std
test
adc
inc
fmuls
fcomps
jae
jle
call
and
aas
lds
mov
lods
cmp
lods
cmp
adc
cwtl
sbb
or
cmp
fimull
fisubl
sbb
push
mov
mov
dec
mov
xchg
bound
sub
in
jecxz
jne
callw
call
repnz
inc
enter
or
mov
mov
es
adc
fmull
push
in
loop
pop
loop
call
aaa
mov
add
add
sbb
mov
sbb
add
stc
dec
ss
add
mov
mov
push
add
pop
bound
negl
add
add
shlb
fbld
sub
or
mov
stc
mov
push
add
frstor
xchg
outsb
leave
nop
or
pop
lret
scas
pop
mov
in
push
scas
movsb
ret
ds
xchg
or
xor
popa
loope
adc
sub
cmp
and
adc
mov
mov
repnz
pop
repnz
aad
sub
or
jno
xorb
scas
cmp
mov
jne
insl
hlt
pop
idiv
jb
xchg
sbb
daa
scas
cmp
mov
mov
fwait
decb
xchg
idivb
jp
or
daa
mov
adc
aad
dec
in
push
lahf
push
cmp
pushf
or
lock
pop
jne
ja
loope
cmc
gs
pop
cmpsb
cmp
mov
xchg
pop
enter
inc
fimull
fidivl
jns
jbe
loopne
enter
pop
fldcw
mov
xchg
sbb
push
shll
xor
es
jo
xorl
sub
sub
or
or
or
or
mov
mov
or
mov
mov
mov
push
add
xchg
adc
sbb
cli
jle
mov
insb
lahf
jne
mov
gs
addr16
insb
jns
addr16
sbb
ja
loope
dec
and
int3
shlb
sbb
ja
sbb
rcrb
mov
jmp
pop
int
addr16
sub
adc
sub
sbb
or
mov
popf
sub
jp
cmp
pop
lret
lret
push
xor
jle
xchg
mov
sbbl
sahf
or
test
mov
inc
fimull
fidivl
xor
lret
pop
lret
scas
pop
fmull
xchg
add
sahf
sbb
enter
shlb
sbb
ja
sbb
rcrb
mov
call
pop
shlb
sbb
ja
sbb
rcrb
mov
ljmp
std
or
inc
les
int3
and
pop
leave
test
mov
pushf
bound
gs
adc
adc
add
icebp
popa
add
add
dec
sub
add
ljmp
arpl
nop
push
popa
nop
aaa
rorl
push
adcb
push
in
sahf
adc
das
mov
je
lea
mov
cmp
xchg
xchg
adc
hlt
pop
xchg
and
movsl
sub
pop
gs
insl
hlt
pop
movb
jae
jns
jmp
mov
ret
xchg
or
inc
shll
imul
xor
addr16
pop
addb
icebp
add
add
imul
push
cmc
or
adc
pop
fdivl
in
or
movsl
sub
jnp
mov
add
lods
sbb
or
or
and
mov
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
mov
add
mov
mull
sbb
sbb
sbb
rclb
mov
add
mov
mull
push
mov
add
add
mov
push
add
mov
pop
les
ja
sbb
shlb
mov
stc
shl
push
add
cltd
adc
adc
or
dec
insb
loopne
adc
and
or
mov
mov
roll
mov
jmp
daa
xchg
js
jg
jmp
loope
mov
out
js
bound
inc
and
js
mov
jle
dec
stos
aaa
cmpsl
ret
xchg
or
imul
insl
add
repnz
fs
movsb
ret
ds
mov
sub
mov
lret
or
jle
rolb
shrb
sub
pushf
sbb
rcll
sub
dec
fidivrs
cmp
dec
fcoml
pop
mov
ljmp
sub
sbb
leave
pop
cmp
or
jp
jp
push
lret
ljmp
pop
int3
inc
and
and
clc
outsb
or
dec
sub
std
sbb
ja
sbb
shlb
mov
stc
mov
adc
push
mov
mov
and
inc
mov
mov
sahf
push
xchg
repz
in
pop
repnz
mov
jne
out
push
add
push
shll
popf
insb
test
scas
push
jns
jmp
mov
sahf
stc
or
sahf
pop
cmp
xor
inc
and
cmp
pop
into
test
fdivrl
xchg
icebp
add
daa
scas
cmp
mov
jp
sbb
ja
sbb
and
mov
stc
imul
add
and
push
out
cltd
push
pop
scas
outsl
cmp
daa
inc
mov
ljmp
ret
ret
into
pop
cmp
addr16
pop
xchg
repnz
jns
mov
orl
shrb
sbb
call
and
mov
push
in
push
add
movsl
int3
aas
mov
push
shll
sbb
sub
call
out
add
fimuls
push
and
push
lds
cmc
pushf
outsl
ljmp
icebp
jb
xchg
repz
xorb
inc
shll
shlb
push
in
fcomps
fs
xchg
adc
pop
lret
scas
pop
test
cltd
or
jnp
add
hlt
push
cld
femms
adcb
andb
lds
iret
sbb
mov
in
notl
push
lret
pop
ds
add
pop
lret
lret
adc
in
sbb
test
hlt
push
lds
iret
xor
fisttpll
mov
adc
inc
push
mov
cmc
jae
xchg
mov
mov
pop
lret
scas
pop
faddl
dec
sub
pusha
cmp
adc
adc
sub
sbb
mov
ljmpw
adc
xchg
add
jbe
out
jl
testb
lods
lret
inc
xchg
lds
mov
mov
mov
xorb
ljmp
sub
pop
mov
iret
and
push
out
lcall
xchg
icebp
add
cltd
adc
in
sbb
xchg
add
mov
dec
mov
pushf
outsl
fdiv
imul
insl
ret
jb
in
insl
cli
push
pop
int
rclb
xchg
mov
and
nop
or
je
lea
fwait
or
jae
stos
cmp
sub
or
bound
mov
insb
or
out
rolb
inc
stos
rolb
dec
mov
xor
fcomp
mov
sbb
ja
sbb
rcrb
mov
in
push
add
es
mov
xchg
pop
xchg
adc
movsb
cmp
pop
aas
mov
dec
mov
test
cli
popf
insb
lahf
pushf
adc
fwait
or
dec
sub
ss
mov
out
mov
enter
jle
test
jge
and
mov
mov
add
sahf
das
add
adcl
test
outsl
lcall
icebp
nop
arpl
inc
mov
sahf
je
cmp
or
dec
fnstcw
and
mov
nop
arpl
inc
lods
push
adc
inc
fidivrl
out
mov
inc
rcll
xor
xor
mov
ret
push
mov
pop
aad
sub
cmp
scas
aas
pop
test
add
pop
mov
loope
cmc
gs
aas
mov
cwtl
outsl
dec
inc
mov
sub
cld
ja
sbb
sbb
mov
out
add
xchg
repnz
mov
mov
repnz
pusha
pop
repnz
cmc
popa
icebp
nop
arpl
addr16
pop
inc
shlb
aam
dec
jmp
movsb
addr16
roll
shll
mov
enter
test
fwait
or
and
xor
mov
stos
mov
movsl
int3
aas
aad
hlt
push
cld
sbb
jg
mov
add
sub
xorb
add
sbb
mov
out
push
add
jno
jecxz
arpl
sbb
add
shlb
fbld
iret
icebp
push
add
push
cld
or
repnz
mov
add
adc
lahf
punpckhdq
inc
mov
mov
shll
icebp
nop
arpl
divl
lods
daa
mov
and
in
push
lds
iret
cmpsb
movsb
ret
ds
mov
popf
lret
xchg
fs
stos
cmp
add
scas
cmp
mov
cmp
aas
pop
test
jp
jg
jp
in
push
adc
or
push
cwtl
push
imul
cmp
daa
mov
and
movb
dec
cmpsb
out
hlt
xchg
outsb
mov
jp
in
adc
push
xor
es
mov
pop
xchg
add
jp
inc
fidivrl
ja
loope
xor
fstl
pop
scas
add
sti
je
lea
stc
imul
outsl
or
mov
iret
jnp
shlb
sbb
ja
sbb
sbb
mov
rcll
stc
dec
std
push
add
add
add
out
test
xchg
test
and
dec
sub
dec
les
and
shrl
frstor
push
xchg
add
jp
mov
fadds
mov
daa
inc
mov
inc
lret
pop
ds
popf
and
dec
fnstcw
cli
popf
insb
xchg
xor
and
data16
rcll
mov
jbe
loopne
cs
cmp
dec
cmp
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
xchg
aad
add
test
cmp
inc
sub
xorb
or
sbb
mov
xchg
rcll
stc
adc
push
add
add
pop
and
sub
sti
insl
std
test
xchg
and
mov
jbe
cmpl
adc
lret
lret
sub
fdivl
in
jns
je
out
imul
scas
or
xor
push
xlat
inc
and
cmp
pushf
xor
pop
pop
fisttps
fnstenv
cmp
jle
imul
pop
jp
fs
fisttps
xchg
mov
data16
xchg
outsb
popf
dec
fistpll
test
cmp
je
outsb
or
cmp
pop
aas
lret
or
in
mov
pop
icebp
sbb
out
in
jle
mov
and
and
inc
mov
fwait
push
lahf
punpckhdq
sbb
call
and
mov
mov
test
lahf
cli
or
pop
xlat
inc
and
js
mulb
dec
les
lods
pop
hlt
ret
cmpsl
push
jecxz
mov
mull
xchg
popa
fidivs
jp
in
inc
roll
mov
mov
and
mov
xchg
pop
bound
lds
inc
lret
pop
lret
scas
pop
fcoml
lea
dec
fidivrs
cmp
inc
inc
ret
ret
adc
in
sbb
and
xor
pop
mov
in
ret
or
pop
fimuls
push
je
insb
or
cmc
mov
scas
leave
cmp
sbb
push
test
movsb
ret
ds
mov
jmp
cli
cmp
pop
jp
xor
mov
inc
mov
lret
pop
into
test
nop
testl
mov
mov
push
pushf
sti
push
mov
shrl
xor
sub
stc
lods
rcll
stc
add
push
add
add
add
mov
scas
xor
int
lcall
adcl
mov
repnz
cmp
mov
ret
enter
pop
fidivrl
mov
mov
stos
or
into
add
mov
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
test
fwait
decb
cmc
add
inc
lds
iret
sbb
sub
sub
adc
add
shlb
fbld
shl
push
add
mov
test
fisttpll
out
in
gs
pushf
outsl
stc
ja
xorb
dec
fidivrs
fs
pop
push
fimull
fimull
mov
jp
gs
pop
int
int
rorl
popf
or
daa
mov
and
mov
jg
jg
jmp
sti
push
mov
popa
adcl
lret
pop
ds
loop
out
mov
sub
sub
push
jne
bound
push
lds
frstor
cmpsb
push
lcall
arpl
jno
jecxz
scas
cs
and
sbb
or
dec
iret
dec
fnstcw
push
popa
nop
js
xorb
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
mov
mov
sbb
xor
inc
arpl
add
fstl
lods
pop
scas
push
xchg
add
jno
gs
pushf
outsl
mov
push
cmp
xor
pop
sbb
add
add
xor
mov
mov
stc
dec
stc
push
add
sub
sbb
xchg
mov
repz
cmp
ja
sbb
cld
call
and
mov
imul
add
add
push
sbb
pop
bound
test
dec
fimuls
dec
adc
sbb
cmp
lock
imul
adc
xchg
add
mov
inc
mov
jo
jns
jmp
imull
test
in
adc
insb
jl
jo
loop
cmp
pop
mov
jle
inc
incb
test
fistps
cld
out
outsl
lcall
shll
jbe
jbe
or
and
jmp
dec
les
int3
sub
inc
mov
mov
mov
jle
sub
ret
ret
push
xchg
sbb
lock
inc
jae
jbe
loopne
mov
mov
sbb
sbb
sbb
inc
call
into
jns
scas
stc
rcl
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
sbb
push
add
shlb
add
ss
and
dec
frstor
and
cmp
and
pop
ficompl
rcrl
jb
in
inc
lds
iret
and
sub
and
lock
bound
adc
aam
int
xchg
pop
bound
mov
mov
push
cmp
ds
jns
mov
idivb
mov
push
mov
jg
dec
pop
xlat
inc
and
js
mov
jle
cmp
pop
xchg
repnz
fdivl
insb
loop
je
aaa
mov
pop
adcl
and
js
mov
imul
add
adc
insl
std
test
xchg
or
add
fdivl
in
cmp
shrb
clc
ja
sbb
rcrb
mov
rorb
fbld
inc
notl
push
insb
mov
fdivs
sbb
sbb
mov
or
push
add
sbb
push
add
add
adc
pop
iret
stos
pop
shrl
imul
inc
and
pusha
mov
mov
and
fsts
sbb
das
mov
cmp
add
or
cmpsb
gs
aam
sub
dec
fnsave
and
sub
jp
jp
hlt
imul
ljmp
notl
shlb
stos
int
fabs
gs
pushf
outsl
xchg
add
lret
dec
frstor
add
pop
ds
dec
mov
mov
cmpsb
jmp
icebp
nop
arpl
cmp
das
cmpsl
aaa
push
mov
jb
pop
and
iret
inc
shlb
lahf
cli
or
fiadds
add
idivl
mov
push
add
add
fbld
inc
clc
push
add
mov
and
leave
dec
fistpll
cmp
dec
dec
roll
aad
adc
stos
cmp
pop
xor
jns
mov
into
sbb
ja
sbb
rcrb
mov
sbb
add
stc
mov
push
add
add
mov
stc
icebp
add
push
and
jmp
sbb
shlb
fbld
stc
push
add
daa
inc
mov
fwait
adc
mov
mov
fwait
aad
pop
pop
or
ja
sbb
shlb
fbld
stc
lock
push
add
adc
push
lea
sbb
ja
sbb
rcrb
mov
stc
pop
call
push
sbb
add
add
sbb
mov
sub
or
mov
mov
push
add
push
jns
dec
inc
int3
inc
and
mov
xchg
or
xor
add
or
mov
cmpsb
push
cli
dec
fldt
iret
pop
cmp
jo
cmc
gs
ds
imul
insl
mov
insl
std
test
and
lock
cld
fwait
jbe
sbb
adc
push
imul
test
ret
sub
push
pushf
and
inc
and
and
push
les
cmp
mov
mov
lahf
cli
or
insb
out
adc
sbb
call
sub
cmp
std
or
mov
leave
add
cmc
out
lock
lds
add
dec
pushf
or
jl
bound
sub
adc
dec
fdivrs
xlat
mov
out
sbb
add
add
adc
mov
stc
jae
push
add
push
xor
js
int
and
jb
add
sub
fadds
mov
stos
int
lret
mov
xchg
add
adc
dec
roll
aad
mov
lret
mov
and
insb
repz
cmc
push
mov
cwtl
decl
hlt
loope
hlt
xchg
outsb
mov
leave
and
inc
and
repz
mov
lret
ret
dec
fnstcw
mov
xchg
add
rcrl
stos
data16
movsb
cmp
outsb
clc
jnp
mov
jbe
jp
in
pop
mov
mov
and
inc
icebp
xchg
test
push
mov
stc
imul
std
test
lea
xor
aaa
push
mov
mov
inc
and
fidivrs
repz
gs
insb
loop
je
pop
mov
jns
sqrtps
inc
and
sbb
jb
in
jg
adc
jne
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
jle
insb
or
out
aaa
mov
inc
mov
pop
ljmp
jns
adc
dec
lret
lret
rolb
shlb
dec
push
xor
sub
jge
sub
or
test
mov
das
stc
cwtl
adc
in
sbb
cmp
daa
inc
mov
sub
sub
jo
jne
mov
adc
xor
setg
push
push
lea
mov
sbb
sbb
pop
lods
or
adc
mov
repz
jne
sub
add
add
shlb
fbld
adc
push
add
add
add
shrb
mov
sub
or
mov
xor
push
add
dec
sub
add
pop
out
sbb
sbb
arpl
push
cmp
dec
icebp
outsb
cld
fwait
jbe
or
jmp
adcb
fdivl
pop
int
addb
adc
jg
popa
icebp
nop
arpl
xchg
push
jae
xchg
xor
psubsw
add
add
shrb
fbld
mov
add
add
or
sub
inc
sti
push
add
cmp
mov
test
shlb
or
sbb
stc
imul
push
xor
imul
sub
sbb
rcrb
add
add
shrb
fbld
mov
stc
adc
push
add
sbb
cs
outsb
cld
fwait
jbe
mov
xorb
imul
push
rcrb
shlb
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
mov
add
mov
mull
stc
test
push
add
mov
adc
xor
jnp
mov
jbe
jbe
loopne
mov
cmp
ret
xlat
mov
call
adc
xor
je
bound
mov
test
roll
rcll
icebp
popa
add
jbe
aam
sub
fistpll
and
pop
and
dec
addb
or
mov
xor
es
mov
mov
cltd
clc
or
push
jbe
loopne
daa
lods
and
push
stc
ja
xorb
adc
in
sbb
mov
xchg
icebp
add
mov
idivb
jp
xchg
stos
lahf
inc
dec
sbb
ja
sbb
rcrb
mov
stc
jecxz
push
add
in
je
and
cmpsb
insl
in
rcrb
shrb
add
add
mov
loope
push
add
pop
cmp
pusha
addr16
push
cld
push
add
push
popf
or
dec
fistpll
sbb
xchg
aas
dec
fisttps
fsts
jmp
push
in
dec
fiadds
dec
lret
push
mov
xor
jns
mov
popf
add
push
pushf
sti
push
xchg
jno
popa
add
cmp
popa
icebp
nop
arpl
cs
aam
lret
scas
pop
mov
inc
mov
aas
ljmp
pop
lcall
ds
test
and
or
mov
ret
pop
into
test
into
test
int
cmpsl
jae
insb
or
mov
es
fs
gs
push
mov
test
add
pop
fisttps
mov
in
jg
push
push
xor
js
sub
mulb
cmp
int
lods
mov
jns
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
and
je
arpl
cmc
sbb
pusha
notb
test
xlat
inc
and
push
adc
add
rolb
sarb
xchg
xchg
repz
jmp
popa
icebp
nop
arpl
arpl
dec
mov
inc
lods
orb
decl
stc
cmp
dec
rcll
and
fisubrl
or
xor
enter
repnz
add
nop
add
add
repz
gs
lcall
dec
sub
inc
call
int3
jae
jbe
loopne
or
sbb
and
and
add
sub
adc
inc
es
jns
bound
or
cmpsb
gs
jecxz
push
in
inc
fdivl
in
in
adc
insb
push
push
cld
jnp
hlt
push
cld
jnp
insb
loop
je
or
jle
xlat
inc
and
aaa
jle
jecxz
sti
sahf
insl
xchg
xor
gs
jns
mov
sbb
pusha
notb
std
test
jbe
cmpl
pop
into
test
notb
and
imul
cmpsb
sub
mov
dec
fisttps
and
in
jge
negl
notb
notl
loopne
jb
adc
mov
stc
mov
call
rcrb
mov
stc
add
push
add
scas
leave
cmp
pop
popf
or
loop
pop
loop
inc
rcrb
shlb
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
add
sbb
rclb
push
mov
push
mov
push
add
mov
fnstcw
push
imul
ja
xorb
imul
insl
xorl
or
sub
inc
sahf
pop
lods
das
mov
mov
add
pop
xchg
or
jle
adc
cmp
movsb
cmp
or
lods
cmp
roll
rcll
cmpsb
sub
test
aas
scas
lret
js
jle
call
fnsave
rolb
shlb
xchg
add
cmp
jl
jne
xor
lods
cmp
fmuls
fcomps
mov
xchg
adc
clc
pusha
notb
outsl
or
out
fldl
mov
mov
mov
jne
mov
jbe
imul
adc
fs
push
ficomps
xchg
xorb
sbb
push
add
xchg
and
push
add
mov
sti
jl
jne
push
stos
cs
loopne
adc
or
jbe
cmpl
int3
inc
and
imul
adc
ja
roll
shll
imul
insl
mov
insb
scas
pop
xlat
inc
and
js
inc
mov
imulb
insb
or
scas
mov
mov
dec
ret
std
inc
xlat
inc
and
outsb
adc
adc
sub
mov
mov
pop
les
int3
shld
adcb
subb
stc
cwtl
imul
add
movsb
xchg
adc
mov
lods
push
xchg
add
sahf
jbe
push
lds
iret
cmp
dec
enter
pop
rclb
pop
test
sbb
mov
xchg
repz
std
dec
ret
mov
stc
mov
stc
xchg
push
add
inc
and
xor
sub
mov
xlat
mov
fists
mov
js
ljmp
shrb
add
add
mov
mov
push
add
cmc
pushf
outsl
fcmovnbe
inc
shlb
imul
mov
and
and
test
or
gs
push
and
pop
rcll
and
adcl
icebp
popa
add
sbb
insl
hlt
pop
xor
lcall
repnz
lods
jle
xchg
testb
and
ficomps
xchg
xorb
repz
repnz
add
in
push
add
xlat
mov
mov
dec
fnstcw
sbb
jns
into
pop
cmp
ds
iret
ds
and
loop
stc
cwtl
imul
aas
xchg
sbb
inc
mov
pop
js
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
mov
xchg
xor
fldl
mov
lods
mov
and
clc
sbb
dec
aad
sub
pop
into
push
mov
mov
xchg
add
sahf
jbe
mov
inc
mov
dec
leave
pop
cmp
sub
ljmp
fstpt
mov
cmc
gs
adc
in
pop
lea
xchg
repz
in
xchg
mov
enter
imul
nop
push
popa
nop
push
xor
push
lds
xchg
cmc
add
dec
fimuls
dec
and
add
jg
mov
mov
xchg
dec
fisttpll
out
cmp
mov
cwtl
cmp
and
sbb
push
xchg
pop
bound
dec
mov
ret
shlb
sbb
ja
sbb
sbb
mov
or
push
adc
daa
and
jge
stc
repnz
add
xchg
or
add
rclb
sbb
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
adc
xchg
or
push
jo
js
ljmp
imul
lds
inc
fimuls
popa
bound
xchg
testb
sbb
divl
jl
dec
int
and
cmp
and
addb
or
pop
fisttps
fnstenv
leave
push
ret
cmpsb
push
cmpsb
dec
leave
pop
cmp
and
inc
es
add
je
pop
enter
pop
sahf
or
cmpsb
push
dec
rclb
and
mov
dec
fdivrs
xchg
adc
xlat
arpl
adcl
sub
mov
jb
jp
in
pop
scas
aas
scas
lret
mov
test
mov
xchg
shlb
shlb
push
mov
add
add
mov
add
sbb
rclb
mov
add
mov
mull
stc
sub
push
add
mov
pop
jp
push
and
flds
mov
movsl
or
ret
xchg
fs
push
mov
call
and
mov
rorl
add
lcall
adc
daa
cld
jge
je
insl
movl
mov
mov
sarb
mov
inc
ret
ret
rolb
sarb
jns
popa
add
add
xchg
add
jno
in
sbb
sub
xor
rorw
daa
test
fcomps
scas
pop
cld
mov
aad
xchg
aam
aad
dec
in
mov
gs
and
out
inc
imul
fmuls
movsb
push
cld
sub
mov
adc
pop
ret
ret
pop
iret
stos
pop
fiadds
mov
pushf
sti
push
xchg
mov
nop
adc
dec
frstor
dec
mov
or
jl
testb
jg
mov
stos
sub
outsb
jmp
lock
xchg
scas
shlb
mov
push
add
jp
in
pop
nop
sbb
sub
out
jl
testb
pop
aam
leave
test
jmp
cmc
pushf
outsl
scas
push
mov
js
rep
lock
rcrb
mov
push
add
fdiv
mov
add
shlb
fbld
adcl
xchg
add
cmp
imul
stc
cwtl
imul
or
in
mov
jbe
inc
fisttpll
out
add
mov
mov
gs
pushf
outsl
test
notl
fs
imul
loope
jae
or
movsl
sub
inc
aad
dec
test
or
nop
push
popa
nop
inc
arpl
jne
out
sbb
dec
sub
xor
fistl
jb
in
mov
scas
leave
cmp
jecxz
clc
lahf
push
test
cwtl
decl
lods
push
fdivl
in
and
jle
popa
add
push
imul
or
mov
lahf
punpckhdq
add
dec
jl
arpl
cmc
pop
dec
jecxz
push
in
add
add
cmp
push
lahf
push
inc
roll
shll
mov
and
sub
loope
adc
or
test
and
sbb
jae
stos
rcrb
mov
push
add
rorl
push
add
add
add
mov
cmp
jp
fs
and
js
call
sbb
mov
push
rcll
stc
loope
push
add
add
add
int3
cld
std
call
inc
fidivrl
popf
scas
sub
sbb
sbb
call
sbb
mov
mov
adc
push
insl
daa
lds
or
mov
lds
add
call
movsl
push
call
inc
rolb
shlb
mov
mov
ja
std
call
jmp
ds
pop
test
jl
jns
jmp
push
push
call
into
sbb
push
jmp
addr16
popa
add
inc
std
aas
jp
sbbb
add
ss
std
pushl
add
jmp
sub
das
dec
mov
sub
and
or
ds
pop
repnz
xchg
rclb
add
add
int3
popf
mov
cmp
add
int
lret
scas
pop
mov
add
jmp
mov
scas
cmpsl
aas
scas
lret
loope
push
call
je
cmp
add
add
jmp
or
cli
scas
data16
stos
push
call
and
add
add
jmp
mov
repz
cld
call
and
mov
or
push
add
popf
jb
or
ret
or
add
push
aad
sub
xor
adc
int3
xlat
dec
add
shlb
shrb
sub
and
or
sbb
sbb
adc
adc
stc
outsb
adc
push
push
jmp
pop
jmp
int3
popf
jge
popa
add
push
jp
or
add
inc
lds
iret
and
sbb
add
pop
sti
std
call
jmp
and
and
out
les
mov
popa
loop
jmp
ds
std
jp
jp
and
arpl
mov
ret
shr
xchg
jmp
stos
sub
lea
sahf
stc
or
je
lea
and
add
add
jmp
adc
rol
jmp
les
movsb
push
mov
test
pop
test
pushl
cmpl
and
push
push
mov
xchg
add
add
pop
push
and
jmp
icebp
imul
cmpl
adc
sub
and
data16
notb
push
mov
or
or
mov
add
sbb
rclb
push
mov
push
mov
push
add
mov
mov
pop
movl
jmp
xor
or
jmp
dec
in
mov
push
call
cli
push
push
push
mov
mov
jl
jne
sub
add
add
arpl
decl
test
adcl
adcl
test
mov
jge
lahf
mov
jmp
pop
and
add
mov
std
jmp
add
push
xchg
or
in
xlat
inc
jecxz
push
in
icebp
outsl
lcall
pushl
jmp
stos
xor
int3
inc
and
or
push
mov
stos
into
cmp
scas
popf
jmp
mov
or
xor
sub
ficompl
stos
pop
cmpsb
xor
scas
inc
ficomps
xchg
subb
js
call
sbb
mov
xor
push
add
cltd
lret
jmp
out
outsl
lcall
ds
test
add
pusha
xchg
jmp
mov
movsb
ret
ds
dec
roll
aad
lock
jp
xor
stos
pushf
jmp
call
test
push
jne
popf
pushl
mov
jmp
mov
xchg
addr16
mov
repz
dec
addr16
int
shll
int
xchg
mov
sbbb
mov
mov
andb
sub
jmp
addl
jmp
mov
lcall
imul
sar
inc
adc
mull
xchg
pusha
leave
push
rclb
ja
out
adc
dec
repnz
sbb
ja
sbb
sbb
mov
mov
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
push
mov
push
mov
push
add
mov
repz
mov
in
or
hlt
mov
adcb
decl
add
jne
jmp
mov
and
cli
mov
jmp
jmp
cmpsb
cmp
cmc
mov
jmp
mov
ret
fs
adc
daa
jecxz
notb
cmpl
mov
xchg
push
or
pop
lret
scas
pop
mov
adc
pop
jle
popa
jmp
xor
mov
xchg
roll
inc
sti
dec
dec
ret
mov
negb
mov
xchg
repnz
cltd
mov
addr16
shlb
sbb
call
and
mov
ljmp
jmp
clc
jno
xorb
jb
xchg
out
data16
xchg
outsb
popf
test
mov
out
jmp
aad
in
and
add
jmp
fwait
adc
in
sbb
pop
fisttpl
fstpl
hlt
jg
mov
xchg
cmp
mov
popl
lea
jmp
push
jmp
and
popa
repnz
pop
repnz
mov
mov
and
push
mov
dec
cld
jmp
cs
scas
test
leave
jmp
fwait
or
mov
mov
adcl
adc
mov
insb
jno
mov
push
mov
lea
jmp
jmp
cltd
stos
inc
mov
ja
jo
loop
add
sbbl
push
xchg
mov
movb
jmp
lcall
aad
sub
pop
stc
data16
xchg
outsb
jmp
dec
sbbb
js
call
sbb
mov
cwtl
adc
insl
std
test
hlt
je
lea
test
pop
test
rcll
lods
pop
mov
jmp
addl
or
addl
pop
int
lea
and
fcom
dec
add
mov
push
add
or
imul
dec
enter
inc
mov
shr
add
add
xchg
add
lds
iret
sbb
ljmp
xlat
dec
add
test
add
push
jmp
fsts
mov
cmc
pushf
outsl
scas
cmc
js
mov
adc
dec
mov
jne
jmp
or
roll
mov
jmp
pop
jp
es
pusha
notb
jnp
sbb
ja
sbb
rcrb
mov
stc
sbb
push
cmp
mov
lahf
pop
leave
pop
cmp
jle
xchg
cmpsl
and
pop
jmp
push
rcll
data16
notl
iret
push
lret
mov
cmp
jmp
inc
fisttps
adc
aas
cmpsl
aaa
push
mov
push
add
jmp
adc
or
mov
stos
mov
xor
xor
incl
adcl
lods
xchg
xor
jmp
mov
mov
mov
dec
int3
inc
and
adc
sub
ret
call
jmp
xchg
rorb
add
mov
fdivp
jb
xchg
push
fldt
dec
push
xor
sub
add
jmp
push
jecxz
push
in
push
fisttps
fsts
adc
cs
test
sbb
call
and
mov
mov
lods
daa
mov
and
fldt
pop
push
add
stc
sahf
sbb
push
mov
lcall
jmp
scas
mov
jmp
dec
fldt
dec
fnstcw
mov
leave
cmp
jbe
add
mov
cmp
je
inc
add
jmp
inc
fisttpl
jno
xorb
xchg
jb
ds
cmovg
jmp
mov
xchg
loope
jmp
jge
adc
pop
jb
sub
jecxz
cmp
jmp
cmc
insl
std
test
sbb
pop
ret
ret
xchg
mov
mov
xor
jmp
pop
pop
mov
adc
pop
jmp
hlt
push
lahf
push
pop
into
test
adc
dec
leave
dec
fdivrs
add
jmp
pusha
loopne
adc
or
pushl
jmp
popa
loopne
adc
add
push
stos
mov
pushf
sti
push
sarl
stc
ficoml
push
add
ja
sbb
shlb
fbld
shrb
sub
and
add
sbb
sbb
adc
adc
stc
jae
push
add
insl
push
jmp
cltd
and
aas
scas
lret
jne
insl
hlt
pop
mulb
sub
jmp
call
addl
cmp
sub
cmp
mov
mov
xchg
mov
cmp
add
add
sti
mov
std
pusha
repz
cmc
push
jbe
jp
in
pop
xor
leave
push
jmp
and
xchg
add
std
or
pop
int3
inc
and
pop
cmp
inc
mov
test
je
mov
incl
push
jmp
outsb
ljmp
stc
scas
dec
fmuls
fsubrs
push
jmp
mov
lea
jmp
mov
jmp
lock
insl
int3
cld
data16
xchg
outsb
lods
pop
push
xor
sub
or
call
and
mov
push
add
add
loopne
dec
add
cmp
mov
push
add
jbe
loopne
inc
fisttpll
out
jae
jmp
popa
push
jmp
in
jno
xorb
ljmp
adc
dec
repz
xorl
sub
add
add
fbld
hlt
sbb
add
clc
shlb
sbb
call
and
mov
sub
push
add
mov
add
add
scas
leave
cmp
or
mov
shlb
jnp
in
dec
sbb
out
ljmp
xlat
and
adc
in
test
lods
mov
in
push
rcll
jbe
mov
jns
das
cmp
outsb
cmp
dec
cmp
cmp
inc
dec
xlat
inc
and
aaa
andl
and
xorb
ret
ret
das
mov
gs
pushf
outsl
test
popa
add
adc
xchg
add
outsl
sahf
pop
sub
adc
xchg
add
popa
les
movsb
push
mov
iret
pop
cmp
xor
je
out
sbb
aad
adc
jp
fs
cmp
pop
leave
test
pop
repnz
cmpsb
add
fs
popf
insb
test
jnp
mov
and
scas
sub
shlb
sbb
call
and
mov
jl
push
add
push
xor
mov
and
jle
push
cld
punpckhdq
push
add
xor
jmp
mov
jmp
icebp
jp
jp
sub
dec
mov
xchg
lock
jb
push
jmp
mov
std
or
pop
roll
mov
jmp
je
jmp
aas
mov
inc
mov
xchg
sbb
push
xchg
in
sbb
sub
adc
stc
int3
xlat
dec
add
shlb
shrb
sub
and
add
sbb
sbb
adc
adc
stc
ja
push
add
imul
push
stos
cmp
fisttpl
fnsave
push
xor
jle
and
shrb
cld
call
and
mov
adc
push
add
pop
ds
push
shll
xorb
int3
inc
and
push
push
jmp
sti
pusha
notb
push
or
dec
push
jmp
iret
push
jmp
push
int
and
aas
les
xchg
mov
addr16
js
or
mov
idiv
xchg
xlat
dec
add
mov
push
add
adc
dec
cwtl
sbb
pusha
notb
aas
popf
inc
push
jmp
mov
push
jmp
divl
cmpl
inc
shlb
pop
jb
pop
xor
cmpsb
shlb
mov
push
add
clc
jmp
out
mov
sbb
lcall
stos
cmp
pop
pop
inc
and
cmp
adc
stc
pushl
mov
call
mov
push
lea
jmp
pop
and
adc
mov
sub
jmp
pop
pop
test
pop
dec
mov
jmp
push
test
scas
aas
pop
test
jp
inc
in
pusha
notb
add
push
push
mov
call
mov
jmp
jbe
imul
int
shll
es
mov
test
jne
jmp
ljmp
je
fstl
cmpsb
push
loop
stos
push
pop
mov
pop
jmp
aaa
leave
jmp
jbe
push
fimull
and
adc
sub
arpl
movsb
xor
in
jae
push
add
stc
sub
push
add
loopne
dec
add
mov
add
stc
push
sbb
add
cmp
mov
push
add
xchg
lock
adc
insb
cmc
gs
pop
mov
sub
pushl
movsb
mov
jmp
les
mov
adc
jne
jbe
jmp
inc
fimull
fidivl
movsb
cmp
mov
gs
adc
adc
call
jmp
pusha
loop
pop
loop
pop
pushf
xor
dec
push
aam
sub
in
jbe
add
movzwl
push
pushl
lea
jmp
mov
mov
jmp
dec
iret
pop
cmp
xor
in
xor
int
jmp
or
sub
jmp
jno
or
or
add
cmp
add
jmp
divl
xorb
mov
jg
bound
insl
hlt
pop
imulb
shlb
jle
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
and
push
mov
add
add
pop
mov
jmp
imul
jmp
je
xchg
cmc
add
jmp
test
mov
addl
fcom
dec
add
push
sbb
add
mov
shl
jmp
xchg
sbb
roll
aad
pushl
xchg
inc
add
jmp
jl
jl
testb
mov
push
call
add
ret
push
lds
loop
pop
loop
cmpsl
movsb
ret
ds
sub
movzwl
jmp
ret
scas
pop
repnz
hlt
push
cld
dec
test
jecxz
ljmp
dec
cld
jmp
jle
add
jmp
sete
insl
pushf
jle
sbb
push
xchg
add
movsb
ret
ds
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
jns
je
out
imul
jl
gs
mov
jmp
lock
xorl
loope
pusha
out
adc
adc
out
pop
out
and
add
add
rclb
mov
stc
add
insl
ret
push
sbb
ja
sbb
rcrb
mov
ja
sbb
mov
mov
add
add
sbb
mov
inc
push
add
stos
jne
and
dec
add
ret
or
jg
outsb
or
das
xor
es
mov
xor
inc
into
pop
cmp
and
mov
jmp
and
jmp
cmpsl
sub
lds
js
add
adc
lods
cmp
jp
adc
mov
mov
mov
call
xor
divl
jmp
mov
jmp
hlt
jp
jp
out
pusha
notb
pusha
pop
repnz
jae
jmp
mov
jmp
dec
les
int3
imul
arpl
add
pop
pop
into
pop
cmp
addr16
xor
jmp
add
jmp
jae
sub
jmp
jp
jns
jmp
or
leave
pop
int3
stos
iretw
mov
stc
adc
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
cmp
ds
test
rcrb
pop
cld
or
xchg
or
in
test
sbb
ja
sbb
sbb
mov
stc
jmp
push
add
lret
mov
jmp
data16
xchg
outsb
test
into
inc
fmuls
fcomps
mov
pusha
push
cmpsl
shrb
sbb
sbb
xor
mov
mov
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
add
sbb
rclb
mov
or
mov
mull
stc
pop
daa
push
add
mov
into
test
add
jmp
or
jmp
cli
jecxz
pop
mov
jmp
mov
mov
imul
adc
jne
mov
pop
leave
adc
mov
push
in
add
call
movzwl
incl
jmp
cld
adcl
test
movsb
cmp
push
cmc
jb
xchg
add
std
jmp
mov
mov
dec
fdivrl
lods
lret
inc
mov
cmp
jmp
sbb
test
jmp
mov
hlt
jmp
pusha
jmp
imul
sub
pop
jbe
outsb
or
pop
xchg
xor
dec
shlb
sbb
ja
sbb
sub
mov
mov
and
add
es
mov
js
les
inc
add
push
mov
push
mov
call
jmp
je,pn
jmp
cmpl
jmp
scas
and
xor
pusha
notb
mov
and
jmp
pop
lret
lret
xchg
jb
fmull
mov
pop
and
sub
jmp
into
fdivl
cltd
push
add
jmp
pop
jmp
lds
cmpsl
push
sti
pop
adcl
mull
icebp
pop
pop
rcll
add
mov
cld
ja
sbb
rcrb
mov
stc
xor
mov
call
jmp
lds
stos
data16
jp
jp
jecxz
call
mov
inc
mov
push
cs
sub
xchg
add
add
lods
xchg
fwait
decb
pop
test
mov
push
add
stc
es
add
jmp
out
ud0
jmp
mov
jmp
or
adc
push
roll
shrl
lock
in
sub
pushl
mov
jmp
sbb
loopne
cli
popf
insb
cltd
jns
xchg
cmc
add
mov
jne
jmp
enter
inc
mov
mov
dec
mov
push
mov
pop
mov
xchg
out
push
jmp
xor
jmp
cwtl
push
test
push
mov
xlat
dec
add
dec
insl
loop
pop
loop
fists
mov
jno
jecxz
mov
sbb
add
add
adc
mov
add
add
mov
add
rclb
mov
cs
add
or
cmpsb
adc
mov
mov
call
jmp
addr16
push
cld
push
or
popa
add
pop
add
add
and
enter
mov
push
add
lods
add
add
xor
mov
shrb
sub
and
add
sbb
sbb
adc
adc
stc
out
scas
push
add
ret
push
add
fwait
clts
sbb
je
adc
push
std
decl
add
sbb
test
pop
test
nop
add
std
or
arpl
fs
pop
xchg
mov
xor
jmp
add
add
jbe
jmp
jne
jge
divl
das
mov
dec
mov
fldcw
ret
movsb
mov
call
mov
jmp
xchg
or
mov
dec
mov
jecxz
cltd
add
inc
hlt
xchg
cmp
jmp
in
hlt
xchg
outsb
xchg
jae
jg
mov
or
sbb
je
mov
jmp
mov
stc
xchg
adc
dec
fistpll
sahf
stc
or
mov
add
pushl
jmp
stc
jb
xchg
inc
lods
add
jmp
cmp
pop
stos
pop
mov
jo
jmp
xchg
sbb
lods
cmp
mov
sbb
nop
add
ja
sbb
rcrb
mov
add
add
mov
add
add
sbb
mov
es
add
fucomip
pushl
jmp
sub
call
jmp
loopne
loop
je
dec
lds
iret
push
jp
jp
sub
pop
stc
scas
adc
shlb
shrb
sub
and
add
sbb
sbb
adc
adc
stc
mov
push
add
mov
jmp
pop
roll
aad
cld
insb
loop
je
lahf
push
pushf
sti
push
mov
stc
mov
xor
sub
sub
and
or
sbb
sbb
adc
adc
sbb
add
stc
sti
and
add
push
fbld
stc
in
push
add
mov
add
add
shlb
fbld
push
cs
add
mov
and
enter
les
repnz
jmp
fisttpll
mov
mov
insb
or
in
cltd
repnz
add
cmp
jb
jmp
rcrb
pop
mov
push
repz
xchg
cs
inc
mov
cltd
inc
ret
jmp
loopne
adc
sub
es
leave
pop
cmp
and
mov
daa
cmpsl
aaa
push
mov
lcall
ds
sbb
xor
jmp
test
sahf
inc
gs
xchg
jmp
pushl
jmp
or
mov
movsl
int3
aas
enter
pop
lods
inc
sbbb
pushl
mov
cs
and
add
jmp
mov
nop
testl
adc
dec
xchg
and
sbb
cld
ja
sbb
rcrb
mov
stc
fsubrl
push
add
addr16
cmp
jo
xchg
testb
add
add
jmp
rcll
push
out
in
bound
pop
cmp
jns
xchg
add
cmp
sbb
add
add
sub
mov
mov
stc
sbb
int3
adc
test
add
ljmp
jno
xorb
stos
cmp
sbb
bnd
cmp
push
mov
ret
push
xchg
or
pop
jo
jns
jmp
sbb
and
cmp
jne
addl
jmp
rorb
mov
aam
int
push
les
cmpl
ds
das
jmp
sbb
adc
push
mov
lea
dec
sub
psubb
test
inc
or
andb
sub
jo
mov
jmp
fistpl
test
mov
fstpt
jb
xchg
pushf
sbb
movzbl
add
jmp
jnp
insl
hlt
pop
lock
sbb
sub
sub
jmp
sub
cli
jb
xchg
add
dec
dec
mov
sbb
ja
sbb
xor
mov
imul
sub
sbb
ja
sbb
shrb
mov
mov
stc
push
sub
push
stc
mov
and
fcoms
pop
sahf
jg
pusha
pop
repnz
xchg
enter
push
jmp
data16
push
cld
dec
and
and
push
lret
in
fisttpl
mov
mov
jmp
arpl
pop
fldt
in
jg
xlat
das
and
add
jno
cli
pop
insl
push
call
xchg
push
xchg
repz
cmpsl
pushf
or
mov
jg
sub
push
call
push
call
dec
rolb
rclb
mov
fcomp
inc
fidivrl
popl
lea
jmp
inc
fimull
fidivl
push
enter
dec
jne
js
ljmp
ljmp
call
std
jle
mov
inc
pop
jmp
ljmp
jno
xorb
cmp
jnp
mov
lock
stc
cwtl
xlat
dec
add
cld
call
and
mov
pop
sub
push
push
rolb
shlb
dec
lret
lret
adc
mov
sub
jmp
repz
repnz
pop
repnz
push
fisttps
flds
jge
push
cld
xadd
dec
mov
add
shlb
fbld
mov
je
iret
filds
testb
mov
test
cmp
add
in
lcall
push
xchg
inc
pushl
jmp
jge
add
push
clc
push
lahf
push
pop
mov
mov
popa
mov
stc
push
xor
push
pop
popa
jmp
xchg
jo
jmp
lcall
gs
pushf
outsl
fdivl
test
test
or
andb
sub
jmp
mov
jmp
and
lahf
or
cmp
faddl
insl
insb
mov
ret
in
jne
mov
mov
movsl
arpl
imul
mov
jmp
xor
nop
xchg
jg
jecxz
cmp
jne
addl
mov
jmp
adc
call
stc
pop
rcll
inc
xor
fimull
mov
jmp
in
pop
pop
jecxz
cmp
jmp
inc
rclb
or
mov
dec
int
and
cmp
cmpsb
inc
lods
mov
jmp
xor
and
dec
ja
add
daa
jns
mov
jb
mov
add
shlb
fbld
mov
push
add
mov
jmp
popa
in
sbb
pop
cmp
cmp
push
shll
int
jmp
in
mov
gs
popl
xchg
repnz
or
xor
jmp
call
pop
pop
enter
jle
cwtl
push
imul
fistpll
jmp
push
push
adc
rcll
jo
jno
ret
adc
shlb
shrb
sub
and
add
sbb
sbb
adc
adc
stc
adc
push
add
add
jecxz
cmp
pop
adc
jne
imul
scas
lret
js
push
cld
mov
xchg
adc
adcl
out
jle
mov
and
mov
icebp
fwait
and
add
add
gs
push
mov
sahf
xchg
ffreep
pop
nop
popl
lea
jmp
push
jmp
jp
jge
notl
outsb
cld
fwait
jbe
inc
fisttps
flds
popa
cli
push
jmp
fildl
mov
stos
std
fs
popf
insb
test
xchg
testb
int
and
sbb
add
add
sub
mov
mov
stc
mov
push
add
test
cmp
leave
push
cmpsl
inc
mov
jmp
jo
popa
add
sbb
repnz
add
pop
add
add
int
pop
repnz
cmpl
jecxz
sbb
ja
sbb
shlb
fbld
call
and
mov
subl
add
add
mov
lods
dec
int
and
cmp
out
or
sarb
into
dec
fdivrs
arpl
cmc
sbb
jbe
loopne
or
aas
mov
dec
mov
outsl
lcall
std
popf
adc
jne
mov
rclb
push
hlt
add
jmp
out
mov
sbb
dec
jecxz
push
in
adc
cld
xchg
cmc
add
push
rclb
ja
hlt
pop
hlt
add
jbe
cmpl
cmp
jl
jne
insb
push
in
stc
stos
fwait
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
ds
dec
mov
fisubrl
aad
pop
leave
test
mov
mov
add
fistl
pop
or
push
cmp
jmp
mov
xchg
icebp
add
jg
addr16
pop
or
adc
push
addr16
jb
xor
or
add
mov
inc
or
add
mov
sub
lcall
and
jmp
es
jmp
pop
movl
jmp
enter
pop
jmp
lds
dec
int3
sti
add
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
fs
push
push
pushf
xor
push
fwait
adc
dec
ret
mov
add
sub
stos
cmp
jle
aas
xchg
aaa
add
add
xchg
or
sub
mov
jmp
ljmp
ljmp
daa
inc
mov
lods
loopne
add
jne
push
push
pushl
call
jmp
loope
mov
test
add
add
push
cld
data16
xchg
outsb
lods
or
hlt
insb
loop
je
sbb
inc
adc
jbe
call
pop
and
cmp
sbb
enter
and
jmp
test
jmp
popa
insb
or
addl
pop
test
movsb
and
in
adc
and
fmuls
cmp
jne
jmp
xor
stos
xor
movsb
cmp
jnp
loope
adc
adc
decl
jmp
lods
ret
add
pushf
and
add
add
adc
add
push
shll
dec
xor
pop
test
pop
and
xor
shlb
shlb
push
mov
or
or
mov
add
sbb
rclb
mov
add
mov
mull
stc
lea
push
add
mov
xor
scas
pop
sbb
ss
xor
jne
sahf
sbb
ja
sbb
cld
call
and
mov
dec
aaa
push
add
das
fimuls
insb
or
les
add
dec
frstor
pop
stos
pop
js
jns
jmp
mov
mov
and
add
shlb
mov
inc
mov
cmc
popa
icebp
nop
arpl
in
jp
jp
cmpsb
xor
imul
push
mov
jmp
inc
inc
and
jns
lods
and
ja
in
bound
lods
lret
inc
lods
pop
loope
adc
add
mov
mov
inc
mov
or
inc
aam
dec
leave
or
std
pushl
fistl
addb
add
push
push
push
jmp
sub
fistps
mov
test
jmp
scas
and
movl
jmp
sub
rolb
inc
stos
push
aam
sub
sub
outsb
scas
stc
js
push
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
sbb
add
add
add
leave
fbld
stc
lods
xor
push
and
sbb
ja
sbb
shlb
fbld
call
and
mov
dec
sub
inc
push
add
add
and
adc
xor
mov
xchg
cmpsb
xor
data16
xchg
outsb
lods
adc
dec
xlat
inc
and
xor
sti
adc
ja
loope
pop
push
xor
dec
mov
cmpsl
ret
fs
sbb
add
inc
lods
adc
call
mov
nop
push
popa
nop
inc
cmc
ja
xorb
mov
js
popa
orl
out
loop
je
mov
xchg
lock
cmp
sub
dec
mov
cwtl
pushf
adc
icebp
popa
add
xor
push
xchg
mov
add
popl
call
cmp
jmp
imul
add
add
inc
and
les
mov
ret
cmpsb
push
mov
jne
jmp
movsb
sub
lds
jo
outsl
or
hlt
cli
mov
cli
sbb
add
stc
or
xor
test
stc
jg
push
add
cmp
push
aaa
mov
cmpsb
das
mov
repz
cmc
xor
inc
stc
inc
sahf
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
fistl
mov
mov
pop
leave
test
lock
movsl
mov
jmp
push
xchg
mov
jbe
jne
out
inc
jecxz
jmp
jge
mov
aas
std
jmp
add
pop
into
test
outsl
or
mov
in
sbb
dec
test
repnz
dec
add
push
adc
add
jmp
stos
xor
aam
je
jne
shr
add
add
lods
das
mov
inc
mov
and
push
and
jecxz
pushl
call
jmp
jmp
lea
jmp
mov
add
out
jo
xorl
cmp
in
hlt
xchg
outsb
xchg
push
and
jmp
cmp
fistps
stos
orw
sbb
jmp
jmp
jnp
xchg
cmc
add
jns
xchg
adc
jo
xorl
xor
or
or
mov
mov
add
mov
mov
mov
push
add
inc
and
cmp
fstpt
gs
cmp
dec
and
jmp
xchg
and
int
and
add
addr16
cmp
sbbl
test
lahf
cli
or
mov
jl
and
iret
pop
cmp
data16
inc
call
adcb
subb
setg
or
jecxz
jmp
xor
adc
bound
mov
jmp
les
gs
jb
jmp
js
arpl
cmc
push
push
roll
aad
cltd
add
pop
popa
or
test
call
dec
and
push
push
lea
push
mov
jmp
sbb
sbb
lea
in
sbb
pop
lahf
punpckhdq
xchg
in
ljmp
xlat
dec
add
push
adc
shr
scas
mov
xchg
roll
inc
mov
leave
int3
dec
ret
mov
push
mov
inc
sub
jmp
addr16
adc
adc
ljmp
mov
shrb
add
add
fbld
sbb
push
add
nop
testl
add
add
push
aaa
ret
sub
pusha
mov
jmp
clc
jo
xorl
mov
sahf
adc
or
cmp
or
xlat
pop
leave
test
fwait
ret
aaa
hlt
bound
lea
call
pop
pop
test
je
push
pop
jmp
jmp
xor
pop
pop
iret
pop
cmp
popa
mov
addb
and
pusha
ret
jmp
and
ds
adc
in
and
std
ljmp
push
lds
ret
push
lds
jmp
push
ja
arpl
inc
jmp
aas
push
jp
addr16
jmp
jmp
daa
mov
inc
mov
add
sbbl
mov
mov
out
dec
adc
lea
call
pop
jmp
sub
jmp
inc
cmpb
roll
and
jmp
pushl
jmp
mov
lds
loop
sbb
lods
pop
jmp
sbbl
adc
mov
jecxz
leave
lcall
and
mov
xchg
jle
mov
jmp
popf
jmp
mov
jmp
int
ret
mov
pop
into
test
mov
xor
decl
std
ljmp
lea
jmp
outsl
call
mov
into
popa
jmp
inc
rclb
xor
loop
jo
jmp
add
pop
jb
addr16
insb
or
cmc
into
dec
fstpt
jmp
jge
movsb
pusha
mov
mov
mov
andb
sub
jmp
xchg
mov
jmp
lds
push
cmpsl
aas
mov
inc
mov
cmp
mov
sar
inc
adc
icebp
adcl
test
fisttpll
out
xchg
in
sbb
pusha
dec
xchg
jmp
shlb
mov
jmp
rolb
push
jmp
je
jmp
sub
loopne
out
jo
lods
mov
and
cmp
jne
addl
jmp
rolb
push
jmp
pop
iret
pop
cmp
jle
dec
fstpt
push
cld
push
xor
mov
jmp
test
xchg
adc
shrl
mov
sbb
push
int
and
aaa
inc
lea
call
lea
push
push
pop
lea
jmp
stos
xor
lods
and
pop
cmp
mov
test
int3
dec
pop
fmuls
fcoms
popa
loop
pop
loop
stc
fimuls
popa
mov
jmp
adc
addb
add
out
pop
push
aam
sub
add
inc
pop
fldt
or
outsl
jmp
push
in
sbb
jns
jmp
loope
add
add
call
js
add
adc
add
jns
mov
aad
popl
lea
jmp
rorl
dec
mov
notb
pop
rcrb
inc
and
or
xchg
mov
push
call
aas
mov
inc
mov
into
pop
repnz
fs
push
mov
jp
in
pop
adc
sbb
and
mov
jns
cmp
or
push
and
adc
mov
in
ds
cmp
dec
sbb
sbb
retw
test
mov
js
mov
jmp
stc
pop
fdivl
in
enter
dec
mov
add
mov
vrsqrtps
cmpsl
push
lods
inc
push
xor
sbb
push
lahf
push
sub
cmp
dec
dec
les
int3
popl
stos
and
mov
outsl
loopne
adc
xor
jns
mov
and
or
jl
jge
negl
lods
js
pop
sub
shrb
sub
and
add
sbb
sbb
adc
adc
sbb
add
stc
pop
adc
popf
sbb
sti
xchg
scas
fbld
stc
sarb
add
add
clc
push
push
rclb
imul
jo
sub
dec
sub
outsb
add
mov
jle
dec
jb
jg
jmp
clc
or
adcb
out
sbb
sbb
cld
call
and
mov
or
add
sbb
ja
sbb
mov
mov
or
or
mov
or
or
and
adc
pop
push
xor
daa
es
and
ljmp
mulb
push
adc
or
je
sbb
xor
dec
stos
xor
mulb
or
notb
dec
das
fisubrl
inc
int3
inc
and
mov
sbb
push
jecxz
push
in
mov
nop
testl
lock
dec
rclb
add
data16
xchg
outsb
leave
rolb
mov
negb
mov
jge
cltd
or
cmp
lods
and
sbb
inc
negl
inc
and
push
xor
ja
loope
sbb
sbb
data16
sahf
jbe
stc
imul
inc
es
test
loopne
mov
sbb
jae
stc
jae
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
jo
addr16
sbb
pop
int3
stos
cbtw
cmpsl
aaa
push
mov
mov
mov
push
mov
inc
and
sub
mov
dec
push
xor
sub
pop
jmp
shlb
mov
push
add
mov
sbb
int
and
adc
sbb
cld
insl
std
test
xchg
or
call
dec
fisttps
fsts
sub
setg
or
jb
push
roll
aad
ljmp
stc
in
into
pop
cmp
cmp
iret
pop
cmp
aas
mov
mov
sbb
ja
sbb
shrb
mov
ja
sbb
add
or
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
adc
push
add
fistpll
push
xor
or
sbb
adc
xchg
pop
xchg
adc
xchg
sbb
push
mov
imul
loopne
jb
bnd
mov
jb
push
roll
shll
dec
lret
pop
ds
cwtl
adc
add
stos
es
mov
pop
cmp
cltd
push
and
pusha
inc
rolb
sarb
mov
out
js
mov
sbbl
je
ja
loope
nop
or
scas
aas
pop
test
mov
sbbl
sbb
push
xchg
repz
mov
repnz
int
and
cmp
negb
sbb
fcompl
scas
pop
movsb
je
shlb
sbb
ja
sbb
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
or
or
or
and
jl
push
add
shll
addr16
addr16
sbb
cld
call
and
mov
add
sbb
rclb
mov
add
mov
mull
stc
out
inc
push
add
mov
xor
sub
xor
insl
mov
jge
notl
mov
scas
lret
jmp
lret
or
dec
xchg
sbb
mov
dec
mov
ret
mov
mov
lret
scas
pop
jmp
notl
mov
fwait
sbbb
out
sbb
xor
ja
enter
outsl
rorl
mov
jg
jmp
and
aas
into
push
lds
sbb
aas
pop
test
xlat
and
pusha
loope
adc
or
popa
add
sbb
mov
and
jl
jne
push
dec
int
and
and
inc
aad
dec
movsl
imul
std
jbe
cmpl
xor
int
fsubr
add
dec
add
mov
push
add
ds
test
mov
lcall
inc
roll
aad
call
int3
inc
inc
int
sbb
ja
sbb
sbb
mov
stc
inc
push
push
add
imul
cmpsb
shll
scas
xor
cs
test
std
insl
hlt
pop
loopne
mov
mov
ss
inc
mov
fistps
scas
pop
mov
pop
into
test
lret
mov
xchg
jo
rolb
shlb
jne
imul
cmp
js
push
mov
xor
add
js
mov
xor
mov
mov
and
sub
xor
fwait
xor
xchg
inc
xlat
inc
and
js
pushf
xor
addr16
gs
pushf
outsl
push
lret
lret
jmp
leave
push
lds
popa
nop
pop
or
pop
jge
insb
or
out
mov
scas
inc
rcll
and
xchg
or
fcompl
test
mov
imul
rcll
push
out
mov
or
or
cwtl
push
pushf
sti
push
cmpsl
sub
scas
cmp
or
jne
jge
divl
xor
xchg
push
pushf
sti
push
cld
xchg
or
int3
inc
and
das
dec
mov
or
xor
cmp
les
int3
and
xchg
jb
push
roll
aad
rclb
lods
pop
mov
mov
dec
mov
lds
sub
pop
or
ja
sbb
rcrb
mov
stc
sub
push
add
mov
das
iret
test
push
add
stc
scas
dec
push
add
shlb
sbb
ja
sbb
shrb
mov
call
and
mov
ss
push
add
stos
into
cmp
pop
ljmp
scas
inc
enter
or
movsl
fmuls
mov
cmc
pushf
outsl
les
sahf
dec
fisttps
dec
frstor
sub
add
and
xchg
or
cmp
pop
iret
stos
pop
movsb
test
shrb
aad
fisttpl
fnsave
rcll
cmpsb
push
aam
jb
xchg
jecxz
notl
es
mov
aas
mov
out
cmc
pushf
outsl
mov
jg
mov
std
jg
mov
lcall
inc
aad
dec
mov
fstpt
out
data16
xchg
outsb
mov
popf
or
pop
into
test
mov
repnz
pop
sahf
pop
inc
and
jns
lret
lret
roll
sarl
push
adc
ja
sbb
sbb
mov
stc
push
add
stos
int
lea
xchg
pop
bound
shrl
lahf
jge
js
ljmp
pop
push
insl
hlt
pop
mov
movb
add
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
mov
cwtl
pusha
mulb
dec
es
inc
mov
xchg
and
and
push
popf
push
xchg
repz
in
ret
pop
leave
test
mov
roll
sarl
mov
mov
xor
int
mov
jo
aaa
mov
dec
mov
shll
ficompl
test
mov
cmp
imul
sub
dec
fistpll
and
mull
icebp
or
mov
dec
mov
fsubrs
int
push
pushf
sti
push
in
pop
repnz
fs
in
clc
lahf
push
cmc
jg
mov
lahf
leave
add
cmp
cmp
or
add
add
and
mov
adc
add
stc
js
push
add
test
mov
stc
es
add
xchg
dec
push
add
add
dec
sahf
add
fistpl
mov
push
fwait
or
jae
jne
mov
sub
mov
adc
pop
fldt
movsb
cmp
inc
insb
out
adc
sbb
ljmp
jno
mov
lret
mov
xchg
adc
rcrb
stos
data16
das
mov
jp
jle
call
jne
sub
addr16
push
mov
es
mov
cmc
outsl
lcall
mov
sbb
pop
lods
or
lods
cmp
das
mov
jmp
mov
sarb
cmpsl
seto
popa
nop
pop
sub
fstpl
stos
data16
pop
aas
lret
stos
cmp
dec
or
sbb
add
mov
push
add
test
pop
jecxz
mov
rolb
mov
lods
inc
mov
std
or
nop
bnd
xlat
mov
sbb
push
add
movsb
push
push
add
add
xchg
cmc
add
adc
ds
roll
roll
add
movsb
das
mov
mull
icebp
dec
int
int3
stos
iretw
inc
roll
shll
xchg
add
sahf
aaa
ret
lods
pop
in
xor
xor
or
imul
out
mov
pop
les
int3
bsf
scas
movsb
ret
ds
mov
dec
mov
insb
lahf
sbb
adc
push
mov
sahf
stc
or
cmp
stos
sub
adc
mov
inc
mov
jnp
xchg
cmc
add
xchg
nop
testl
pop
repnz
bnd
mov
jp
pusha
pop
repnz
scas
es
fnstsw
sysenter
add
jnp
in
psubsw
xchg
pusha
xchg
nop
push
mov
adcl
ja
jo
xorl
lahf
cmp
insl
lahf
sbbb
jbe
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
ja
jnp
in
pop
cmc
data16
xchg
outsb
jb
jo
loop
adc
or
ja
sbb
and
mov
pop
ds
add
dec
dec
push
add
add
xchg
adc
jle
add
add
jmp
sbb
adc
xchg
push
call
cmc
jae
xchg
mov
push
call
cmp
arpl
add
sub
movsb
cmp
sub
imull
xor
add
lds
mov
mov
mov
add
push
enter
dec
inc
add
call
inc
jnp
add
add
jmp
test
xchg
repz
sub
ret
pop
jmp
divl
jl
insl
ljmp
incl
mov
inc
add
add
inc
xchg
jmp
int3
popf
sub
out
mov
js
add
loopne
notl
enter
jmp
stos
xchg
push
jno
call
jmp
out
notb
gs
ja
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
jmp
cmpsb
call
jmp
mov
nop
popa
test
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
push
inc
pop
popf
pushl
jmp
call
jmp
dec
roll
aad
add
lds
add
add
jmp
mov
jl
fs
or
xor
xor
xor
or
or
mov
mov
add
mov
mov
mov
push
add
inc
push
add
mov
repz
add
jle
call
arpl
ja
sbb
cld
call
and
mov
fisttpl
add
stc
push
push
add
add
jo
addr16
sbb
push
mov
lods
lret
inc
xchg
push
rolb
shlb
pop
jmp
xchg
test
daa
lods
cmp
xchg
add
popa
add
inc
enter
sbb
loope
adc
and
outsb
or
pop
adc
cmp
mov
gs
cmp
in
pop
mov
cwtl
rolb
dec
std
enter
addr16
adc
out
jp
jp
iret
pop
lret
scas
pop
cwtl
and
popf
or
jno
xorb
out
push
add
pop
call
jmp
lret
mov
cmpsb
iret
jl
jmp
ljmp
int3
popf
jae
jle
call
mov
push
ret
cmpsb
push
mov
sbb
add
shlb
fbld
inc
pop
push
add
inc
push
call
jmp
inc
enter
outsl
cmp
rcrb
or
or
or
pop
push
add
int
lret
dec
push
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
sbbl
push
add
add
or
js
mov
cmp
add
ljmp
xor
add
xchg
push
test
push
mov
call
pop
int
and
jb
gs
pushf
outsl
scas
push
mov
jle
imul
mov
mov
aam
mov
add
mov
dec
sub
xor
push
shll
decl
out
clc
jle
mov
jge
pop
and
iret
dec
fdivrs
fdivrl
xor
inc
jg
gs
sbb
dec
movsb
sub
in
sbb
cmp
jno
jecxz
mov
std
or
mov
add
dec
lret
pop
ds
and
mov
add
shlb
fbld
call
add
sbb
add
push
int3
popf
fiaddl
mov
test
push
imul
jmp
nop
sbb
aad
out
jns
stc
aad
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
mov
sbb
inc
mov
enter
imul
push
xor
push
mov
mov
lret
shll
fistpll
xor
jbe
sbb
out
lock
bound
in
sbb
icebp
dec
frstor
push
mov
push
in
dec
jnp
push
cld
sub
in
xor
imul
or
mov
aam
sub
jecxz
jne
les
scas
pop
repnz
hlt
push
cld
dec
push
lret
pop
ds
scas
cmp
data16
xchg
outsb
leave
push
jmp
add
add
add
pop
ds
xor
scas
cmp
mov
in
xchg
jo
shlb
sbb
add
add
mov
push
add
add
pop
sbb
lock
movsb
fbld
stc
jns
push
add
jle
scas
andl
out
jo
jmp
mov
jmp
rolb
mov
icebp
mov
mov
sbb
sub
xor
cmp
or
jmp
scas
cmp
mov
push
roll
aad
popf
push
xchg
repz
in
fadd
sar
inc
adc
inc
fisttps
jge
fisttpl
mov
mov
sbb
andb
jmp
iret
adc
cltd
roll
add
mov
ret
jmp
mov
mov
jmp
addb
testl
loopne
stc
inc
push
xor
sub
js
mov
jmp
movsb
and
pop
jne
jmp
test
nop
testl
add
add
mov
inc
mov
shlb
shlb
mov
add
add
mov
mov
or
mov
mov
mov
push
add
shlb
outsl
or
in
dec
mov
movzbl
add
cmp
jmp
pop
rolb
shlb
pop
roll
shll
dec
push
xor
imul
test
mov
jmp
sub
sub
jmp
popl
jmp
xchg
push
jmp
and
jmp
int
and
shr
inc
int3
inc
and
frstor
dec
mov
adc
inc
add
add
add
and
mov
mov
orl
enter
pop
jmp
push
mov
add
xchg
or
xor
add
add
mov
jmp
cmp
jmp
jp
jl
testb
fs
pop
adc
fucompp
jmp
add
or
pop
mov
mov
lock
sbb
mov
pop
movsb
cmp
cli
fs
popf
insb
jmp
cld
xchg
cmc
add
sub
shr
add
add
push
cmp
add
int
and
cmp
mov
outsl
push
cmpsb
stc
or
xor
sub
sub
and
or
sbb
sbb
adc
adc
pop
jmp
pop
jmp
fsubl
xchg
xchg
xchg
or
bound
outsb
or
das
and
int3
push
neg
jmp
or
cli
jo
xorl
movsl
inc
js
add
adc
scas
mov
push
add
lea
call
jmp
cmpsl
and
jmp
adc
aaa
mov
pop
iret
stos
pop
mov
cmp
and
jl
or
cmp
mov
jmp
cmp
jo
ret
jmp
push
lcall
xchg
testb
lods
sbb
mov
js
and
push
call
inc
fidivrl
pop
cmp
pusha
mov
mov
dec
fstpt
inc
and
push
push
pop
lea
call
mov
call
jmp
push
inc
rolb
shlb
mov
and
xchg
and
jmp
and
and
adc
jmp
push
in
add
pop
jmp
jmp
jl
lea
pop
jmp
mov
shlb
jg
jmp
jp
adc
mov
inc
mov
adc
lret
jmp
pop
pushf
jmp
mov
sub
jmp
test
xchg
jmp
mov
cltd
clc
or
insb
in
bound
and
imulb
mov
inc
mov
cmc
mov
inc
cmp
jl
lea
call
jmp
movsb
and
push
shll
inc
or
jne
add
sbb
inc
mov
mov
fs
popf
insb
mov
mov
jmp
leave
inc
xlat
mov
stos
test
mov
and
inc
iret
pop
cmp
jo
fs
popf
insb
mov
dec
mov
add
pushl
mov
jmp
xchg
sbb
push
iret
sub
jmp
push
adcl
adcl
lock
pop
das
mov
daa
jp
andb
jmp
cld
jae
xchg
popa
jmp
pop
push
dec
bound
jmp
jecxz
jmp
jge
adc
adc
sub
jne
mov
xchg
and
mov
mov
std
decl
je
mov
jmp
push
int
and
push
std
data16
xchg
outsb
mov
shll
cs
mov
inc
adc
loope
in
je
add
jnp
in
insb
sbb
fsubrp
decb
push
pop
nop
ljmp
jmp
sti
js
mov
lahf
sbb
lods
sub
lds
cmp
push
lds
mov
mov
add
cmp
jmp
cmp
sub
outsb
test
out
imul
pop
aad
jmp
in
jmp
into
dec
fstpt
sub
pop
inc
iret
pop
cmp
and
push
lds
out
cltd
roll
add
jne
addl
jmp
adc
inc
popl
lea
jmp
push
jmp
mov
jmp
cs
roll
shll
out
adc
pop
pop
inc
xor
push
call
fmull
movsb
push
cld
pop
test
push
lret
cmc
stos
mov
add
shlb
fbld
movsb
push
push
add
js
add
mull
icebp
dec
arpl
push
cld
push
push
les
int3
jnp
inc
rcll
shlb
sbb
add
add
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
or
or
pop
push
add
test
pop
mov
shlb
mov
add
add
mov
mov
or
mov
mov
mov
push
add
mov
and
adc
je
jbe
cmpl
ja
movsl
enter
add
call
shlb
jmp
movb
jmp
mov
scas
inc
fimuls
popa
jb
arpl
cmc
je
enter
ret
pushf
jmp
lods
sub
jmp
mov
mov
dec
ret
mov
cmp
jecxz
cmp
push
call
mov
loop
je
loope
inc
and
popf
pushl
mov
jmp
cmp
sub
outsb
or
mov
scas
and
inc
insb
in
loope
jmp
add
sbb
in
sbb
mov
and
xchg
lahf
cli
or
popa
add
call
dec
xorb
enter
pop
add
call
jecxz
loop
je
xor
jl
addr16
pop
fidivl
hlt
xlat
dec
add
mov
push
add
jle
call
nopl
or
or
xor
mov
ja
sbb
add
or
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
mov
or
mov
mull
stc
inc
bound
fbld
mov
push
call
aad
fstpt
mov
push
jns
cmp
add
mov
inc
jmp
mov
pop
pop
jns
jmp
adc
jmp
jl
jle
call
cmpsb
push
hlt
imul
pop
push
xor
sub
add
add
ja
sbb
rcrb
mov
popa
push
add
cld
ja
sbb
rcrb
mov
stc
jmp
add
imul
mov
popa
jmp
rorb
mov
hlt
jmp
push
leave
and
jmp
xchg
or
outsl
lcall
inc
and
enter
mov
mov
mov
andb
sub
jmp
mov
jmp
mov
ret
jmp
xor
add
mov
fwait
or
jae
or
in
icebp
inc
lcall
ret
sub
subb
cmpl
lea
ljmp
stc
rorb
xchg
add
data16
outsl
pop
jne
jmp
mov
scas
push
jecxz
push
in
xchg
sbb
mov
inc
mov
xchg
push
call
movzbl
jmp
movsl
xor
xor
jae
xchg
mov
std
or
jmp
sbb
call
sbb
mov
or
add
bound
push
cmp
daa
inc
mov
push
pushf
xor
adc
pop
loope
pop
shlb
sbb
add
add
mov
or
add
jmp
movsb
xor
int
lea
mov
add
jmp
push
jmp
push
lea
dec
fidivrs
stos
into
cmp
dec
mov
xor
das
cmp
je
popa
mov
jmp
in
mov
fwait
mov
push
push
mov
call
jmp
leave
or
add
jmp
pop
lret
lret
mov
jae
jle
call
add
cltd
add
add
adc
mov
enter
dec
or
add
push
sub
fs
jmp
mov
sahf
stc
or
pop
arpl
jns
setg
or
dec
int3
inc
and
xchg
cmc
add
divl
xorb
gs
jmp
jmp
push
xlat
inc
and
or
stos
cmp
pop
out
lock
bound
add
out
movsb
stc
rcrb
add
stc
icebp
pop
push
add
jae
call
mov
lea
push
call
pop
jmp
inc
leave
pop
cmp
sub
push
pop
sbb
test
lcall
ret
jmp
pushf
jmp
pop
jmp
adc
les
shll
dec
rcll
and
push
cmpsb
push
nop
push
popa
nop
aaa
ss
mov
incl
movsb
jmp
dec
fidivrs
shll
xchg
lock
int
add
sbb
sbb
add
add
xor
mov
add
add
adc
push
add
stos
fbld
stc
cmp
add
cld
ja
sbb
sbb
mov
add
add
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
cld
ja
sbb
sbb
mov
add
add
shl
dec
add
push
fbld
stc
and
push
mov
mov
sbb
sahf
das
add
scas
mov
aas
scas
cmp
mov
xchg
xor
adc
insl
std
test
xchg
push
xchg
repz
mov
lds
je
xchg
popf
pushl
mov
jmp
outsl
mov
jmp
rorb
mov
add
jae
es
les
jb
add
mov
jmp
pop
int3
stos
data16
fs
jns
lock
in
fsubl
stc
add
add
pop
jb
inc
sub
cmp
adc
shrb
sub
mov
add
add
mov
sbb
add
stc
or
sbb
mov
out
mov
sbb
sbb
sbb
rclb
push
mov
push
mov
push
add
mov
cmp
jmp
push
rolb
shlb
fs
pop
loop
push
pop
jp
inc
outsb
ljmp
lds
inc
adc
ss
inc
mov
mov
scas
test
mov
xor
dec
jmp
movsb
cmp
pop
mov
test
cmp
jp
pusha
pop
repnz
out
scas
sub
popa
sbb
sub
jo
mov
and
jmp
addl
mov
movzbl
add
jmp
mov
shlb
mov
sbb
and
imul
imul
jmp
lret
mov
jmp
xor
pop
stc
imul
xor
sbb
cld
call
and
mov
push
fs
add
popa
push
add
stc
fldt
push
push
push
movsb
xor
int
lea
nop
push
popa
nop
cmp
shl
sbb
call
sbb
mov
and
mov
push
add
add
dec
roll
sarl
je
arpl
cmc
sbb
gs
jp
jns
mov
lcall
fdivl
in
mov
sahf
stc
or
dec
int3
inc
and
or
fs
das
mov
or
mov
stos
fwait
pop
xchg
adc
pop
mov
gs
jbe
scas
aas
pop
test
lods
pop
scas
mov
lods
mov
loop
add
push
xor
or
push
test
lahf
sub
outsb
cld
fwait
jbe
add
sbb
push
pop
jp
ds
cmp
fmuls
fdivrs
in
sbb
mov
and
es
aaa
in
add
add
test
pop
test
stos
cmp
pcmpgtb
and
jmp
mov
mov
and
xor
push
outsl
hlt
push
cld
push
add
sub
push
shlb
fbld
inc
push
push
add
ret
add
add
imul
ja
jl
negb
lds
test
fidivrs
sbb
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
jno
jl
divb
jecxz
push
in
jne
fs
push
fcompl
popf
push
lret
lret
push
mov
push
nop
popl
jmp
test
movsb
xchg
xchg
push
push
jmp
cmp
rolb
inc
stos
outsb
call
fistpl
fs
sub
lea
jmp
push
jmp
lahf
sbb
push
shll
and
and
ret
push
lds
pop
testl
add
jo
cmp
leave
pop
cmp
outsb
fisttpll
es
jmp
push
fisttps
fnstenv
fistl
lods
pop
lahf
inc
leave
pop
cmp
outsb
movsb
movsb
ret
ds
dec
sbb
ja
sbb
sbb
call
and
mov
inc
imul
pushf
or
sub
decb
add
or
adc
ja
lea
inc
mov
xor
jmp
ret
jmp
cmp
adcb
jecxz
scas
mov
subl
sbb
ja
sbb
cld
call
and
mov
stos
imul
sub
mov
mov
sbb
jmp
pop
enter
jg
mov
xchg
xor
mov
dec
jnp
cmp
cmp
flds
mov
movsl
sti
lock
bound
divb
sbb
ja
sbb
cld
call
and
mov
iret
imul
cltd
push
xchg
repz
mov
inc
xchg
test
push
jl
mov
push
mov
push
call
lea
jmp
aad
jmp
hlt
jbe
cmpl
stos
cmp
inc
into
dec
fdivrl
inc
and
xor
inc
jmp
enter
pushl
pop
repnz
mov
jns
pop
cld
js
mov
movsb
sub
insb
sub
inc
or
icebp
cld
incl
jmp
push
sbb
jmp
sub
xchg
in
into
mov
inc
dec
fdivrs
mov
or
sub
fiaddl
ret
popf
jmp
push
fdivl
in
lret
mov
jp
in
cmp
cmp
mov
ret
lock
jne
inc
adc
push
rclb
jbe
sub
sbb
cld
call
and
mov
into
imul
and
jl
rclb
jno
jp
jp
xchg
or
xchg
jmp
push
mov
push
das
mov
pushl
jmp
and
clc
popa
icebp
nop
arpl
dec
mov
add
add
cld
call
and
mov
xor
add
xchg
repnz
xor
cmp
sub
add
sbb
call
and
mov
or
add
mov
sbb
test
nop
rclb
mov
punpckhdq
pusha
mov
mov
mov
andb
sub
jmp
out
hlt
xchg
outsb
mov
cmp
roll
add
pop
icebp
cmp
jmp
popa
in
sbb
adc
mov
sbb
inc
push
xor
daa
pop
mov
jo,pn
jmp
test
rorb
pop
ds
cltd
pop
xchg
adc
scas
and
jnp
enter
or
es
pop
or
sar
inc
adc
mov
mov
fistl
pop
mov
jg
mov
loope
loop
je
iret
arpl
xchg
gs
enter
add
add
jmp
in
jge
je
sub
adc
cwtl
cwtl
jecxz
cmpl
add
pop
and
jl
sbb
mov
imul
stc
shlb
cld
call
and
mov
outsl
gs
add
test
push
les
shlb
sbb
call
and
mov
pop
outsb
push
add
xchg
adc
popa
stc
imul
xchg
adc
dec
jmp
ja
popl
jmp
lea
mov
sbb
and
add
sahf
sbb
arpl
cmc
je
movzbl
add
cmp
je
jmp
aaa
mov
repz
mov
jmp
pop
fmuls
fdivs
out
hlt
xchg
outsb
xchg
mov
inc
mov
push
adcb
cmpb
fisttpl
ret
add
sub
outsb
push
push
jmp
pop
jmp
test
mov
and
mov
les
mov
jmp
popf
push
test
push
cld
xor
xchg
sbb
daa
pop
jnp
mov
jmp
lds
mov
inc
and
or
mov
inc
mov
cmc
add
mov
std
insb
push
add
je
out
pop
std
outsb
cld
fwait
jbe
cltd
setg
or
add
add
pusha
notb
stc
cwtl
imul
pop
icebp
jl
jns
push
jmp
add
std
outsl
lcall
punpckhdq
pop
cld
mov
add
mov
add
stc
xor
dec
pusha
pop
popf
fbld
stc
in
push
add
lcall
addr16
jo
xor
sahf
sti
xchg
fst
xor
cld
call
and
mov
adc
add
stc
loopne
push
add
lods
fbld
stc
test
add
psubw
pop
push
add
ja
sbb
shlb
fbld
shrb
sub
and
or
sbb
sbb
adc
adc
stc
mov
or
add
add
mov
jns
insb
stc
jo
xorl
sbb
test
cwtl
decl
fimuls
pop
cmp
shlb
out
jno
js
jns
jmp
out
in
jg
jmp
call
das
mov
into
pop
cmp
jg
in
jge
testl
push
arpl
xchg
mov
cmpsb
inc
loop
call
cltd
or
jno
les
int3
dec
sbb
sub
or
jle
mov
xchg
adc
out
jg
jmp
cmpsl
push
test
add
cmpsl
sub
adc
sbb
sbb
call
and
mov
lahf
push
add
jl
negb
and
movsb
cmp
push
gs
cli
push
xor
push
push
push
push
push
push
lea
call
push
jmp
or
outsl
in
bound
jmp
jge
jmp
lea
inc
xor
decl
add
push
inc
pop
pop
ret
jmp
imul
push
cmc
or
cli
sub
movsb
push
fcom
fsts
std
incl
mov
and
jmp
popl
add
add
jmp
add
push
inc
mov
xchg
mov
pushf
jmp
add
jmp
inc
roll
aad
or
out
lcall
dec
das
fimull
adc
je
or
insb
lcall
and
jmp
mov
ss
and
or
push
pop
push
add
ja
sbb
xor
mov
shrb
sub
and
add
sbb
sbb
adc
adc
stc
lcall
sbb
xchg
aas
pop
cli
jmp
inc
pop
int3
inc
and
insb
or
scas
sub
sub
or
popf
or
mov
inc
or
andb
sub
jmp
adc
out
loope
jae
jne
jge
divl
mov
rol
jle
sar
inc
adc
sbb
push
popf
or
inc
aad
dec
lret
add
adc
sbb
jmp
jns
cmpl
xchg
lock
mov
stos
aaa
mov
dec
mov
icebp
jo
mov
and
cmp
jne
jmp
fistps
stos
xor
jmp
jge
push
jecxz
inc
mov
jmp
rolb
dec
lcall
add
lods
sub
sbb
daa
mov
and
gs
jl
notb
repz
inc
sahf
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
xchg
sarb
fs
je
jmp
lret
popl
jmp
nop
sbb
dec
frstor
mov
out
lea
jmp
out
jg
jmp
mov
xchg
pop
jp
xor
fs
add
add
sahf
sub
inc
jmp
push
call
sti
push
lret
pop
leave
test
call
pop
cmc
xor
stos
mov
jmp
imul
jmp
xchg
or
jno
xorb
and
adcb
andb
pop
push
call
pop
lds
iret
push
sbbb
ljmp
jo
add
ljmp
jmp
jae
jns
jmp
mov
xchg
adc
pop
iret
stos
pop
loopne
mov
test
add
add
and
mov
and
push
add
stc
pop
push
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
rcrb
add
mov
sbb
or
out
adc
jo
add
sbbl
loop
icebp
nop
arpl
fsub
push
call
push
pushf
jmp
ds
sub
jmp
fisubl
xchg
gs
loope
adc
adc
pop
iret
stos
pop
faddl
xor
addb
jmp
xor
orb
cli
or
jne
xchg
testb
shlb
sbb
add
add
mov
mov
push
add
pusha
pop
repnz
jae
xchg
insl
outsl
movsl
inc
xlat
pusha
jmp
cmp
jmp
mov
jmp
cmp
jmp
call
mov
mov
addr16
pop
mov
xchg
popf
pushl
mov
jmp
pop
lret
scas
pop
repnz
in
sar
inc
adc
cwtl
lret
add
stos
adc
cmc
popa
icebp
nop
arpl
lret
pop
repnz
fs
add
imul
dec
adc
lock
jo
jmp
in
out
jo
add
adc
test
incl
add
jmp
mov
call
adc
lea
mov
sbb
mov
push
mov
lret
xor
and
inc
aad
dec
lret
dec
sub
das
push
shlb
shlb
mov
add
add
mov
mov
or
mov
mov
mov
push
add
stos
int
aam
scas
push
dec
and
add
cmp
je
jmp
test
fwait
decb
fsubrs
int3
daa
jmp
in
lea
jmp
dec
fdivl
in
mov
cltd
out
jg
mov
les
mov
jns
jbe
pushf
scas
stos
popa
mov
jmp
push
call
add
adc
push
cmp
push
lds
lock
mov
call
mov
xchg
pop
bound
int
popl
jmp
jb
outsb
or
or
in
pop
aam
sub
xchg
icebp
add
lret
dec
fstpt
and
xchg
pop
mov
cwtl
jae
rcrb
mov
stc
adc
add
into
test
stc
mov
shrb
sub
and
or
sbb
sbb
adc
adc
push
push
and
or
or
cmp
or
lods
lret
inc
icebp
xchg
stc
hlt
xlat
dec
add
mov
push
add
shlb
dec
das
ficompl
adc
in
sbb
insl
sti
imul
adc
je
lea
ret
ret
insb
or
subl
jge
pop
enter
roll
inc
cmpsl
mov
mov
in
movb
inc
cwtl
fistps
test
lods
ds
out
fs
popf
insb
lahf
insl
out
adc
or
or
xor
int
iret
sbb
mov
mov
std
pop
rolb
shlb
pushf
xor
adc
xchg
sub
pop
roll
aad
rolb
dec
std
add
and
cltd
or
js,pt
jo
loop
mov
leave
mov
mov
pop
xchg
repnz
out
out
mov
cltd
push
xchg
repz
mov
pop
aas
lret
inc
and
fcomps
test
sub
pop
jge
and
pop
push
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
int
push
add
mov
mov
addr16
mov
popa
mov
stc
adc
push
xlat
inc
and
sub
push
adc
pusha
pop
repnz
push
cmpsb
xor
scas
pop
mov
std
or
cmpsl
aaa
push
mov
inc
mov
enter
dec
in
imul
or
mov
push
cmp
cmp
test
and
pop
in
movsl
dec
sbb
ja
sbb
xor
mov
ja
sbb
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
sbb
rclb
push
mov
push
mov
push
add
mov
pop
cmp
sub
or
dec
ret
repz
call
fwait
or
jns
adc
addr16
insb
or
out
int3
push
shlb
shlb
shlb
push
mov
or
or
mov
add
sbb
rclb
mov
or
mov
mull
stc
int3
jge
add
mov
jae
in
stos
das
mov
jle
mov
xor
cld
call
and
mov
jae
push
add
icebp
jge
add
add
pop
int
addr16
mov
mov
and
cmp
hlt
aaa
fldl
mov
lods
pop
popf
or
jne
mov
in
call
aas
scas
lret
rolb
inc
mov
shl
pusha
notb
mov
sbb
mov
and
in
dec
into
pop
cmp
add
bound
jns
jmp
testl
sbb
out
data16
xchg
outsb
mov
pop
mov
xchg
adc
in
pusha
notb
xlat
mov
call
in
add
mov
repz
fcom
dec
add
mov
push
add
ret
mov
dec
fnstcw
shll
jbe
jbe
lahf
mov
ja
sbb
shlb
fbld
stc
lds
push
dec
iret
pop
cmp
aas
out
fs
popf
insb
lahf
inc
into
pop
cmp
xor
ljmp
jb
in
add
idivb
mov
and
ds
test
ljmp
int3
inc
and
in
jg
inc
rolb
shlb
cld
xchg
cmc
add
mov
mov
dec
fdivrl
jl
testb
xchg
icebp
add
push
xchg
rcrb
pop
mov
dec
mov
mov
insl
pushf
sbb
imul
int
and
sbb
xor
xor
push
aaa
mov
inc
mov
shlb
rcll
inc
daa
rolb
dec
mov
adc
jmp
mov
sbb
shlb
jmp
xchg
lds
mov
les
notb
iret
stos
pop
shlb
or
dec
push
les
int3
gs
mov
scas
jnp
add
push
sar
hlt
xlat
dec
add
mov
push
add
jbe
loopne
adc
cmc
popa
icebp
nop
arpl
out
out
jno
int3
pop
into
test
push
xor
push
in
jecxz
out
mov
xchg
or
in
adc
mov
test
sub
lds
iret
add
push
shlb
mov
pop
jp
jb
jne
mov
addl
or
nop
adc
in
sbb
or
rcrb
scas
pop
test
enter
push
xor
push
cld
bswap
inc
mov
out
mulb
sub
pop
cmp
adc
jae
xchg
mov
xchg
push
lds
scas
pop
ljmp
mov
mov
ret
ret
jg
mov
xor
lods
xor
push
lret
lret
or
inc
mov
test
fisttpl
fstpl
sub
scas
jnp
add
stc
jl
push
add
sbb
or
xor
xor
or
push
test
ret
mov
shrb
sub
and
add
sbb
sbb
adc
adc
add
add
int
mov
xchg
adc
pop
popf
or
call
cmp
faddl
mov
js
push
pusha
notb
je
out
push
push
roll
shll
mov
cmpsl
aaa
push
mov
xor
xor
sahf
or
cmpsb
dec
rcrb
scas
pop
test
imul
cmp
push
lahf
push
xchg
and
inc
and
or
xchg
or
pop
rcrl
fs
pop
leave
pop
cmp
jg
jbe
cmpl
and
mov
jae
jnp
in
pop
aaa
mov
scas
cmp
rolb
shlb
in
jge
divl
mov
mov
sbb
xchg
push
test
push
test
ret
cmpsb
push
mov
testb
adc
inc
sahf
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
dec
mov
jae
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
add
js
mov
nop
adc
or
test
pop
into
test
mov
push
les
jl
testb
popf
or
mov
ja
sbb
shrb
mov
test
push
stc
jbe
cmpl
stc
loope
push
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
add
add
push
and
sti
andl
and
jg
or
mov
add
push
fisttpl
fnsave
fstps
test
sbb
je
dec
fdivrl
pop
cmp
cmp
in
scas
sub
sub
dec
fidivrs
lcall
or
mov
js
push
cld
ds
je
lea
nop
push
popa
nop
es
fimull
fidivl
ljmp
insl
hlt
pop
lods
mov
mov
and
add
xor
das
mov
jns
jmp
mov
leave
sbb
mov
enter
add
xor
add
rsm
arpl
addr16
dec
jmp
sarl
add
cmp
cs
jnp
add
stc
jno
push
add
add
add
add
add
cmpsb
xor
scas
pop
sbb
jg
jns
jmp
push
insl
hlt
pop
mov
std
cmp
pop
lret
scas
pop
mov
andl
pusha
sbb
dec
ret
shll
add
cmp
jge
je
insl
movsb
and
roll
inc
movsl
pop
fimull
fisubl
les
int3
sbb
les
add
call
xor
mov
lahf
cli
or
jnp
xchg
sbb
hlt
push
cld
sbb
outsl
ret
movsl
push
repz
int
and
add
pushf
pop
xchg
adc
testl
pop
jbe
je
out
pop
xchg
add
stc
imul
pop
bound
adc
push
pop
xchg
add
xor
jmp
mov
into
faddl
dec
cmpsb
lret
push
shlb
fsubrl
stos
cmpsb
aas
scas
lret
addr16
push
in
and
loopne
lock
bound
xchg
jno
and
insb
jmp
scas
sub
inc
mov
test
es
fstl
jae
in
xor
out
std
test
mov
xchg
leave
inc
aam
dec
lcall
pop
fisttpl
fnstsw
sub
sub
sub
and
or
sbb
sbb
adc
adc
push
ret
ret
imul
insl
ret
xchg
testb
inc
out
push
mull
xchg
pusha
leave
leave
arpl
xchg
gs
push
mov
jno
cld
lcall
mov
add
stc
lret
dec
add
pop
fbld
stc
filds
lock
xor
mull
shlb
shlb
mov
add
add
mov
mov
or
mov
mov
mov
push
add
xor
lahf
punpckhdq
xchg
outsb
fldenv
push
cld
pop
xor
jbe
mov
inc
mov
cmp
and
push
dec
ret
roll
lahf
jl
insb
or
iret
hlt
jne
mov
pop
fimuls
push
and
mov
or
pop
xchg
pop
xchg
adc
outsb
jmp
aas
mov
fsts
cmpsl
push
mov
scas
aas
pop
test
insb
lahf
outsb
sbb
ret
dec
ret
andb
push
fdivl
in
add
lahf
or
in
mov
push
mov
push
std
xor
adc
mov
push
xor
imul
ja
xchg
aas
mov
mov
scas
cmp
mov
inc
fimuls
push
bound
shlb
shlb
mov
or
or
mov
mov
add
mov
mov
mov
push
add
mov
movl
bound
cli
or
lds
add
add
add
sub
mov
ja
sbb
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
push
add
add
popf
mov
push
mov
sbb
sbb
sbb
rclb
mov
or
mov
mull
stc
mov
push
add
mov
jle
call
push
std
push
addb
repz
lock
loop
je
jb
fs
or
push
xor
es
jp
push
xchg
sbb
ja
sbb
shrb
mov
ja
sbb
or
add
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
push
mov
push
mov
push
add
mov
pop
cmp
dec
das
fidivrl
pop
rolb
shlb
fistl
cmpsl
push
mov
iret
push
stc
imul
leave
test
fwait
mov
fwait
dec
fimull
fisubrl
and
test
roll
sarl
in
sbb
mov
xchg
add
sub
mov
mov
gs
pushf
outsl
dec
inc
and
xor
dec
fstpt
dec
adc
bound
mov
jb
add
cmp
inc
es
pop
fimuls
push
mov
stos
int
push
mov
loope
jae
push
jl
testb
push
fs
jg
push
add
stc
xchg
xchg
push
jb
gs
adc
imul
push
mov
imul
ja
sbb
sub
mov
stc
cpuid
push
add
push
aaa
ret
lea
xchg
jb
jl
jge
je
cmpsl
sub
cmp
sahf
adc
adc
in
sbb
pop
roll
rcll
xor
das
dec
mov
stos
pop
rol
push
mov
test
push
scas
lods
inc
shll
mov
and
inc
aam
dec
stc
mov
mov
push
ret
cmpsb
push
nop
rcrl
pop
mov
out
pop
sub
add
push
jle
ja
loope
enter
dec
addl
xor
daa
addl
mov
xchg
gs
lret
cmpsb
push
test
fmull
mov
js
popa
inc
roll
aad
mov
test
cmp
jne
xchg
testb
lahf
outsb
lret
dec
fstpt
aam
dec
lcall
pop
nop
out
lcall
shlb
mov
jl
jne
and
dec
dec
fs
ja
sbb
shrb
mov
stc
pop
adcb
leave
rcl
shlb
push
mov
add
add
mov
add
sbb
rclb
mov
add
mov
mull
stc
les
add
leave
pop
leave
test
out
push
rcll
push
pop
fimull
mov
push
lds
dec
fistpll
pop
cmp
jg
sbb
cmp
lock
bound
dec
mov
test
pop
lods
sub
call
out
cli
popf
insb
movsl
aad
les
dec
sub
xor
cmc
test
nop
testl
push
jo
or
mov
inc
mov
pop
aam
sub
fidivrs
cmp
dec
mov
cli
je
lea
lds
iret
sbb
lock
bound
mov
repz
or
fstl
cmpsb
push
loop
int3
inc
and
loopne
jb
into
pop
iret
stos
pop
into
push
lcall
sub
in
push
add
stc
dec
jbe
add
and
add
xchg
adc
sub
pxor
xchg
add
js
xchg
add
inc
fidivrl
jnp
in
insb
lcall
scas
cmp
mov
cmpsb
es
cs
movsb
sahf
sbb
ja
sbb
rcrb
mov
stc
int
push
add
cmp
cmp
fimull
fimull
pop
lods
mov
mov
dec
fistpll
popf
in
testl
mov
ficompl
mov
out
cwtl
adc
in
sbb
lods
and
adcl
aad
sub
je
mov
pop
lret
lret
sbb
mov
push
push
xor
js
test
pop
lret
pop
ds
jg
jp
in
push
xlat
dec
frstor
lret
inc
scas
sub
imulb
lcall
inc
sahf
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
mov
mov
mov
repz
cmc
sbb
shlb
sbb
outsl
sbb
adc
push
testb
std
jge
je
dec
lds
mov
cmpsb
sub
jo
addr16
sbb
outsl
or
pop
sbb
mov
lds
loopne
stc
cwtl
imul
mov
jb
xchg
cmc
add
push
fisttps
fnstenv
rcrb
stos
data16
mov
shlb
les
and
mov
pop
ljmp
and
and
add
xchg
add
cmp
pop
into
test
out
jo
sub
adc
and
mov
push
add
stc
dec
mov
add
in
mov
pushf
outsl
test
sti
mov
and
testb
adc
mov
jo
xorl
mov
test
xchg
icebp
add
dec
ret
cmpsl
clc
jno
xorb
loope
adc
add
cmp
aaa
mov
dec
fistpll
mov
in
bound
dec
sub
loopne
jb
xor
fisttpl
mov
test
push
scas
test
and
mov
hlt
inc
test
xchg
adc
fldenv
mov
gs
jbe
inc
aam
dec
movsb
jnp
jo
loop
faddl
mov
lds
mov
sbb
pop
int3
stos
data16
cmc
popf
sbb
aad
rcr
enter
pop
fisttpll
out
movsl
daa
mov
and
add
pop
jb
xor
mov
leave
cmp
xor
imulb
fwait
jbe
pop
rclb
sub
mov
dec
xlat
inc
and
pop
xor
dec
add
mov
push
add
std
test
lea
in
sbb
gs
imul
cmp
mov
xor
cs
inc
mov
mov
scas
jg
insb
or
jecxz
mov
dec
mov
lock
loope
sti
sahf
insl
sahf
aad
mov
clc
lahf
push
pushf
adc
jle
fs
sbb
cltd
or
push
push
test
push
mov
rolb
mov
sbb
in
jge
je
xor
push
xor
xor
pop
lods
sbb
pop
aas
lret
das
mov
sbb
mov
dec
mov
outsb
popf
cmp
add
std
or
insb
cmc
gs
pop
mov
enter
pop
stos
inc
mov
test
jecxz
dec
int3
inc
and
add
jp
loop
pop
loop
pop
sahf
or
cmpsb
inc
mov
and
in
cs
aas
pop
test
popa
icebp
nop
arpl
ds
stc
ret
mov
shrb
sub
and
add
sbb
sbb
adc
adc
xor
fildll
xchg
add
call
das
shrl
call
jmp
cld
jb
xchg
scas
sbb
sbb
dec
fstpt
add
add
add
push
call
pop
ret
jmp
iret
call
jmp
loop
cld
fwait
jbe
pushf
and
push
je
add
outsl
jnp
pushl
add
jmp
cmp
daa
inc
mov
adc
sarb
xchg
add
dec
jnp
call
push
xor
jbe
mov
sbb
or
call
lds
scas
pop
ljmp
mov
bound
jmp
sub
jmp
and
mov
popf
sahf
or
aas
jmp
xor
jae
pop
jmp
add
jge
jmp
call
jmp
cwtl
or
jle
movsb
hlt
sub
sti
ljmp
icebp
inc
inc
and
jns
pusha
notb
jmp
xchg
fildll
pop
int3
popf
xor
sbb
ret
bnd
and
adc
inc
and
popf
pushl
mov
jmp
add
jle
jmp
mov
jmp
cmp
inc
dec
roll
sarl
adc
sbb
push
xor
adc
lock
jo
jmp
inc
jecxz
push
in
aas
ret
push
lds
add
adc
pop
pop
dec
and
jmp
js
outsb
or
adc
movzbl
jmp
xlat
push
les
mov
sbb
inc
push
xor
sbb
inc
adc
xor
inc
ret
ret
movsb
ret
ds
cmp
xor
ja
sbb
sub
mov
mov
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
xor
or
inc
enter
sub
test
incl
add
mov
jmp
add
cmp
jmp
push
xchg
add
sahf
jp
aam
sub
in
jg
cltd
sbb
test
jmp
jne
push
cmpsl
aaa
push
mov
stc
or
sub
sub
add
add
mov
mov
add
mov
mov
mov
add
stc
out
inc
push
add
sahf
fbld
stc
cmp
and
push
lds
iret
fs
add
jae
xchg
lock
lock
add
mulb
mov
inc
mov
in
mov
adc
shrb
xor
sub
mov
xor
push
xchg
push
add
ret
xor
idiv
incl
inc
and
jns
ds
call
push
push
jmp
sub
sub
xchg
or
rcrb
pop
popl
popl
lea
jmp
scas
sbb
mov
addl
add
mov
adcb
addb
setg
or
push
xlat
inc
and
aaa
test
jmp
ds
and
stos
xor
mov
aas
mov
push
call
jns
mov
pop
mov
add
call
push
call
fsubs
xchg
mov
gs
push
enter
inc
mov
add
add
std
dec
pop
push
dec
pop
pushf
jmp
dec
rclb
and
mov
jg
jns
push
xor
push
fcomps
ja
sbb
cld
call
and
mov
xchg
push
add
sub
insl
push
cs
pusha
notb
cmc
jno
sub
add
add
shlb
fbld
or
push
cld
dec
insb
and
in
cmp
call
add
xchg
popf
pushl
jmp
mull
icebp
push
cltd
setg
or
loopne
cmp
rclb
mov
jmp
jae
jp
in
inc
sub
cs
mov
mov
out
pop
xchg
adc
lcall
adcb
andb
xchg
repz
in
mov
adc
mov
jmp
pop
into
test
and
mov
add
xlat
add
add
dec
adc
sub
mov
add
add
cmpsb
xor
scas
inc
jle
scas
and
push
ljmp
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
jg
push
add
lcall
add
add
fbld
push
sahf
push
add
pop
stc
insl
movsb
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
mov
push
add
pushf
sti
push
call
and
or
inc
xlat
mov
mov
scas
inc
and
dec
cmp
sar
inc
adc
fwait
jne
jmp
jb
outsl
or
in
add
mull
icebp
or
mov
pop
idivb
sub
jo
mov
and
jmp
dec
push
xor
imul
pop
std
ja
xorb
xchg
jb
sub
add
jmp
je
jmp
mov
mov
sbb
ljmp
push
add
addw
mov
movzbl
jmp
jno
jbe
loopne
xor
jmp
dec
fisttps
fsts
rclb
imul
fldl
mov
or
imul
mov
and
push
inc
fisttps
stc
jae
push
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
fcoms
jg
pushl
popl
jmp
imulb
test
cmp
sbb
cmp
mov
jmp
inc
les
int3
add
sbb
movsb
out
sahf
push
call
cs
cmp
mov
fistpl
scas
pop
mov
add
outsl
adc
lea
jmp
push
jmp
xchg
adc
in
sbb
les
jmp
divl
xorb
popf
or
mov
fwait
xor
cmpsl
mov
sbb
rclb
and
rorl
bnd
imul
pop
xor
push
call
orl
add
push
jns
dec
dec
push
xor
push
cltd
push
add
stc
sub
push
add
sbbb
add
add
test
xchg
testb
ja
stc
hlt
xlat
dec
add
mov
add
stc
pop
sub
add
out
fbld
stc
movsb
lahf
push
add
mov
jae
ljmp
xchg
add
call
lds
pop
cmc
or
js
jge
negl
icebp
push
ret
jmp
negl
into
pop
enter
dec
fisttps
flds
roll
rcll
and
adc
add
add
xor
mov
stc
stos
mov
call
add
xchg
popf
pushl
jmp
ljmp
test
and
push
add
add
push
std
ljmp
popa
add
jbe
popa
jmp
xor
cmp
cs
jl
sbb
pop
into
test
mov
dec
adc
lock
jmp
std
fninit
xchg
mov
jmp
or
add
jbe
mov
in
imul
fbld
inc
adc
inc
jle
mov
jo
jmp
les
mov
mov
jno
xorb
mov
dec
lret
pop
ds
fbld
sahf
jnp
popa
add
adc
add
mov
add
jne
jmp
mov
rcll
or
mov
dec
mov
ja
sbb
shlb
fbld
ja
sbb
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
sbb
rclb
push
mov
push
mov
push
add
mov
jmp
addl
jmp
fcoml
mov
out
jo
pop
enter
jle
mov
stc
inc
sahf
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
test
out
add
jbe
cmpl
or
mull
icebp
sbb
stos
inc
inc
fisttpll
out
mov
mov
lods
cmp
push
lret
xchg
stc
jp
jp
sub
sti
les
add
mov
xchg
movzbl
jmp
mov
clc
mov
inc
add
add
mov
add
dec
fmuls
fdivs
sub
lds
cmpsl
push
sti
push
push
xor
jns
xchg
cmp
add
ret
lds
mov
push
add
jmp
loop
out
mov
inc
jecxz
push
in
into
push
les
gs
adc
shlb
push
mov
add
add
mov
add
sbb
rclb
mov
or
mov
mull
stc
jae
push
add
mov
lods
xor
rolb
add
jmp
enter
pop
fstps
mov
inc
and
sbb
lcall
add
dec
ljmp
lods
add
call
dec
fstpt
sub
push
jg
insb
or
jecxz
push
psubsw
inc
sbb
xchg
mov
cmp
jmp
adc
xor
gs
xor
adc
and
jmp
ficomps
test
mov
outsl
lcall
xchg
repnz
add
lods
lods
add
call
test
lret
or
push
fimuls
inc
xchg
push
mov
es
test
jmp
xor
add
lods
or
cmpsl
aaa
push
mov
xchg
popa
lods
pushf
cltd
stc
cmp
push
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
dec
xchg
push
add
sub
dec
icebp
pop
push
call
cmp
sbb
add
fsts
cmpsb
push
in
fs
sbb
ja
sbb
sub
mov
stc
outsl
xchg
push
add
mov
add
lea
mov
sbb
mov
lcall
fs
mov
cltd
push
add
stc
cmpsb
mov
adc
sbb
jbe
jg
jmp
pop
dec
stc
ja
push
add
xor
ja
sbb
xor
mov
stc
ljmp
mov
and
cld
push
call
jecxz
notb
and
sti
fstps
test
push
jmp
add
mov
xchg
xchg
jmp
cmp
xor
add
sbb
xlat
pushf
adc
insb
and
cmpsl
add
call
add
sub
sti
jmp
jl
imul
or
jg
mov
dec
fidivrs
jnp
sub
jmp
dec
fnstcw
mov
es
rcll
pushf
jmp
sub
jp
popf
jmp
scas
pusha
jmp
push
outsl
or
scas
fisttpl
mov
loop
je
lds
xchg
jmp
sub
or
xchg
xchg
and
movsb
ret
ds
xor
shlb
sbb
call
and
mov
adc
add
stc
scas
cmp
popf
sbb
push
nop
outsl
fbld
stc
cmp
push
add
add
add
add
sahf
pop
jp
ja
loope
fiadds
mov
movsb
ljmp
xor
mov
jmp
rcr
mov
jmp
les
xchg
mov
mov
in
imul
inc
or
fidivs
mov
inc
mov
add
dec
roll
aad
adc
add
sbb
add
xor
mov
stc
cmp
add
cli
mov
mov
add
add
add
loop
sti
sahf
insl
mov
dec
mov
sbb
jl
push
call
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
testl
or
jle
adcl
mov
jle
arpl
inc
daa
sarb
iret
dec
fdivrl
adc
jg
fisttpl
fisttpll
and
fisttpl
fnsave
lods
and
inc
mov
enter
sbb
adc
je
lea
pop
xchg
repnz
aad
int3
inc
mov
sbbb
and
jns
adc
insl
std
test
ret
cmpsl
push
jecxz
xor
lods
and
add
aad
push
rcll
jbe
pop
iret
stos
pop
shrb
hlt
jle
mov
adc
pop
fisubs
testb
add
and
push
lds
cld
paddd
ret
push
lds
mov
and
hlt
mov
ret
decl
andb
add
add
into
call
int3
adc
cmp
in
cmp
or
or
cld
call
and
mov
int
push
add
adc
and
mov
add
shlb
fbld
push
movsl
push
add
mov
mov
add
cmp
jmp
sub
mov
mov
sahf
or
cmpsb
pop
imul
pop
cmp
test
jmp
jmp
aam
shlb
mov
pop
or
punpckhdq
mov
and
cmp
jne
addl
jmp
cwtl
or
pusha
inc
popa
mov
jmp
xor
lods
movsb
ret
fsubl
insb
or
in
xchg
int3
popf
jg
jle
call
inc
mov
rorb
popl
jmp
push
call
pop
ret
ret
dec
ret
ror
push
lds
fs
jmp
pop
rolb
rolb
adcb
addb
adc
mov
cmp
push
and
sub
sub
or
or
mov
mov
or
mov
mov
mov
push
add
shlb
repnz
mov
or
shrb
ret
mov
xor
scas
scas
push
add
mov
jg
lcall
sub
sub
and
or
sbb
sbb
adc
adc
mov
xlat
dec
add
mov
push
add
push
call
mov
lret
mov
sbb
cwtl
sbb
push
xlat
inc
and
sub
movb
jmp
or
pop
aad
sub
aas
xor
pop
xchg
add
sahf
insl
push
ja
push
call
jp
push
cld
pop
inc
roll
aad
dec
fdivrs
insl
hlt
pop
mov
jmp
pop
stos
add
pop
aas
lret
nop
push
popa
nop
cmp
jg
jmp
daa
mov
inc
mov
pop
adcl
push
ret
cmpsb
push
hlt
mov
call
add
sub
push
in
je
lea
xchg
or
sbb
push
mov
scas
leave
cmp
pop
fisttps
pop
in
jae
xchg
call
mov
jle
call
testl
mov
lods
icebp
inc
ja
fisttps
setg
or
mov
fidivrs
fisubl
scas
aas
pop
test
aad
cmpl
inc
mov
push
loope,pn
loop
je
pop
xchg
add
and
push
and
outsb
push
popf
or
pop
int3
stos
data16
scas
cmp
add
hlt
xlat
dec
add
mov
push
add
sub
push
lds
mov
clc
lahf
push
call
xchg
cmp
inc
sbb
stos
xor
int
mov
inc
dec
lret
lret
lods
and
pop
mov
ja
sbb
shlb
fbld
stc
cmp
scas
cmp
mov
adc
sahf
sbb
add
xor
lods
and
pop
lcall
cltd
sti
leave
shlb
shlb
mov
or
or
mov
mov
add
mov
mov
mov
push
add
stc
enter
shlb
shrb
sub
and
or
sbb
sbb
adc
adc
pop
aam
sub
call
es
fstpl
dec
fnstsw
aam
dec
lcall
xchg
pop
mov
xorl
addr16
gs
dec
inc
aad
dec
in
cs
mov
push
rcll
jbe
sbb
push
ret
cmpsb
push
nop
xor
adc
ret
pop
enter
xchg
or
in
xchg
mov
stos
test
mov
jns
mov
imul
sbb
add
lret
push
xor
xor
stc
sub
inc
push
roll
sarl
test
rcrb
stc
fs
bound
bound
shlb
ret
outsl
loope
adc
and
daa
push
mov
gs
and
inc
daa
sarb
dec
fnstcw
pop
and
jl
push
lahf
push
aam
std
shlb
shlb
push
mov
add
add
mov
add
sbb
rclb
mov
or
mov
mull
stc
pop
lods
push
add
mov
mov
and
push
mov
pop
std
mov
in
ret
pop
into
test
mov
sbb
mov
leave
je
js
ljmp
outsb
xchg
sbb
insl
std
test
jge
je
insl
mov
sahf
stc
or
fisubrl
shlb
sbb
call
and
mov
sub
scas
push
add
add
push
xor
xchg
and
dec
das
fidivrl
pop
int3
stos
movsw
loopne
jmp
cltd
or
jae
test
jge
fs
les
int3
dec
andb
and
iret
cmp
mov
mov
push
lahf
push
or
movl
pop
mov
scas
add
add
add
push
enter
push
addb
push
add
stc
iret
xchg
push
add
adc
add
jo
loop
mov
push
stc
inc
sahf
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
stc
stc
test
add
stc
lahf
cmpsb
push
add
outsl
or
hlt
pop
fisttpl
fnstsw
mov
test
cmp
cmpsb
sub
mov
fwait
pop
rolb
rolb
push
xchg
add
push
sbb
dec
fisttpll
out
cld
insl
std
test
roll
mov
mov
mov
das
test
test
rclb
imul
mov
xchg
movsl
cmp
imull
je
cli
lock
bound
ljmp
jmp
and
add
pop
inc
lds
iret
and
pop
mov
xchg
outsl
jb
imul
sub
aam
sub
in
jg
sbb
mov
shlb
notl
jp
in
pop
mov
test
cmp
stos
jle
push
lret
sahf
xor
push
lds
dec
test
into
pop
cmp
addr16
and
jo
adc
sbb
xor
mov
ja
sbb
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
push
mov
push
mov
push
add
mov
in
mov
xorl
decb
mov
inc
mov
repnz
jmp
insb
mov
int
insb
loop
je
push
int
and
push
add
pop
fwait
or
push
pop
mov
mov
rclb
and
jl
push
xchg
pop
bound
lret
inc
mov
xor
mov
inc
mov
ret
mov
shrb
sub
and
or
sbb
sbb
adc
adc
add
add
out
add
rcrb
stos
pop
test
rep
sub
lds
insb
loop
pop
loop
loope
cld
fwait
jbe
orb
sti
push
aam
int
and
jb
pop
int3
stos
data16
lahf
std
jae
xchg
xchg
add
icebp
popa
add
inc
mov
mov
and
stos
sbb
cmp
ficomps
add
and
movsb
inc
shll
ret
shll
ret
shlb
adc
push
out
outsb
cld
fwait
jbe
js
outsl
or
loop
or
ja
xchg
stc
xchg
sub
sub
and
add
sbb
sbb
adc
adc
stc
and
add
repz
adc
cld
xchg
cmc
add
stos
daa
mov
and
sbb
sbb
outsl
inc
lret
lret
icebp
popa
add
and
divb
mov
jg
sub
inc
lock
push
jns
jg
jmp
js
and
xor
xor
add
add
xor
mov
stc
in
cmpsb
push
add
jg
jmp
imul
shrb
adc
sbb
shlb
fbld
cmpsl
push
add
ds
test
cmc
outsb
cld
fwait
jbe
mov
rcrl
ss
pop
test
adc
lods
and
jge
pop
enter
addr16
sbb
add
xchg
jo
fisttpl
frstor
stos
jle
fimull
fisubrl
int
fidivrs
mov
insb
loop
je
cmp
hlt
adcl
test
jp
jp
outsb
out
adc
cmp
push
shll
sbb
dec
xor
sbb
push
shlb
fwait
jbe
cmp
sbb
pop
in
push
pop
jp
test
xchg
adc
cld
pop
mov
in
sbb
es
push
lds
leave
push
mov
dec
sub
wrmsr
scas
cmp
mov
lock
std
test
mov
mov
mov
jg
bound
stos
cmp
inc
xor
mov
sahf
stc
or
sbb
sbb
call
and
mov
repnz
push
add
in
push
add
add
inc
es
enter
push
mov
inc
sbb
ja
sbb
shlb
fbld
ja
sbb
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
sbb
rclb
push
mov
push
mov
push
add
mov
lahf
cli
or
pop
xchg
add
pusha
mov
shlb
jle
call
cltd
push
cmpsb
push
hlt
sub
xor
jne
sbb
and
bt
push
movsl
adc
jno
xor
pop
roll
aad
test
and
lahf
cli
or
push
in
fwait
or
cmp
push
mov
mov
mov
inc
mov
loopne
out
mov
sahf
add
fimull
ficompl
adcl
mov
in
insb
loop
je
ljmp
xchg
add
insb
add
fistpl
xchg
addr16
pop
jecxz
push
in
and
mov
nop
testl
jmp
or
or
xor
mov
stc
push
mov
jnp
mov
into
inc
aad
dec
mov
xchg
xor
test
jge
pop
fcoms
pop
sahf
mov
xchg
push
sbb
add
fbld
stc
insl
mov
aam
sub
insl
hlt
pop
lods
sub
xor
out
jg
mov
lret
pop
repnz
fs
fisttps
fsts
mov
adc
enter
push
mov
out
adc
add
daa
mov
and
repz
xchg
add
lds
mov
icebp
nop
arpl
fidivs
ficompl
test
mov
fwait
addr16
sbb
lds
iret
cmp
jae
xchg
outsb
in
sbb
inc
and
xor
cmc
idivb
je
jbe
and
xor
jge
addr16
cmp
ljmp
inc
jo
jno
jecxz
arpl
popa
add
inc
mov
cmpl
add
dec
in
add
std
push
daa
ret
push
lds
jge
je
out
or
ljmp
stc
in
shlb
lcall
add
stc
pop
mov
add
mov
sbb
xorb
pop
xchg
adc
or
gs
adc
push
sbb
ret
inc
shlb
jne
out
adc
xlat
mov
xchg
mov
add
stc
pop
popf
push
add
adc
add
add
jbe
imul
xchg
adc
adcl
xor
push
mov
pop
cmp
ds
loop
je
lds
mov
or
js
jns
mov
mov
test
lods
cmp
imul
insl
test
push
jo
aaa
pop
into
pop
cmp
jg
outsb
cld
fwait
jbe
in
ljmp
mov
jno
jecxz
pushf
or
inc
shlb
shll
fdivrl
movsl
int3
aas
xlat
daa
mov
mov
mov
add
fistpl
fs
scas
cmp
mov
test
xchg
icebp
add
movsl
sub
fcoms
mov
xor
xor
or
or
mov
mov
add
mov
mov
mov
push
add
fidivrl
mov
aas
scas
lret
mov
scas
leave
cmp
out
clc
lahf
push
rorl
repz
jmp
jge
jno
jo
loop
aas
lods
cmp
push
mov
es
mov
aaa
ret
jp
jp
and
clc
outsb
or
cmp
mov
lahf
add
cmp
push
lahf
push
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
mov
push
add
add
inc
aam
dec
mov
push
mov
jne
xor
sbb
inc
iret
pop
cmp
and
sbb
scas
cmp
mov
mov
icebp
push
jne
out
dec
movsb
movsb
ret
ds
test
add
lret
mov
pop
cmp
dec
out
out
mov
xchg
std
or
inc
ret
ret
mulb
push
pop
fdivl
in
cli
jl
jne
jp
mov
lods
das
mov
sbb
aad
int3
int
loop
inc
sahf
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
jnp
addr16
or
mov
sub
loop
dec
stc
das
mov
add
jo
push
add
mov
lea
jae
xchg
aad
enter
adc
mov
push
lret
pop
ds
jge
jl
negb
push
shll
push
push
jns
cmp
pop
aas
lret
mov
gs
and
stos
cmp
or
dec
fdivrl
nop
testl
inc
mov
mov
mov
inc
aad
dec
lret
sub
ds
rolb
rcrb
pushf
sbb
sub
mov
mov
roll
aad
lds
mov
xchg
mov
mov
cld
xchg
cmc
add
in
std
test
sbb
ja
insl
hlt
pop
loope
cwtl
push
imul
in
sbb
cmp
mov
nop
and
inc
fidivrl
pop
and
jl
jb
xchg
fcoml
cmpsb
push
cli
lahf
setg
or
stc
hlt
xlat
dec
add
mov
push
add
loop
je
aas
test
inc
fisttpl
fnstsw
mov
adc
sbb
shlb
fbld
stc
int3
mov
add
stc
shlb
sbb
ja
sbb
shrb
fbld
mov
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
xor
mov
push
add
mov
or
movsb
ret
ds
jne
mov
mov
and
sub
ds
mov
fwait
decb
inc
mov
std
jl
jne
popa
loope
cmc
pushf
outsl
xchg
ds
dec
leave
pop
cmp
cmp
out
adc
push
stc
jno
xorb
sbb
ficoml
cmpsl
push
mov
xchg
jb
jl
cmp
and
adcl
test
adcl
inc
and
push
shrb
in
jle
lret
test
lock
push
jg
jle
call
adc
xor
cld
call
and
mov
sbbl
push
add
add
shlb
shlb
push
mov
add
add
mov
add
sbb
rclb
mov
add
mov
mull
stc
daa
mov
add
mov
mov
add
jecxz
stc
mov
shrb
sub
and
add
sbb
sbb
adc
adc
stc
cmp
jns
mov
and
pop
rep
lcall
xchg
lock
mov
mov
push
shlb
push
cmpsl
and
sbb
push
clc
jp
jp
xchg
fwait
decb
psubd
mov
fucom
fs
popf
insb
xchg
stc
jle
mov
and
lea
fdivl
in
inc
leave
pop
cmp
sub
push
shll
and
and
lcall
adc
push
imul
std
insl
hlt
pop
mov
mov
jle
and
dec
fistpll
pop
cmp
pusha
mov
aad
xchg
mov
mov
das
test
test
roll
dec
jmp
sub
rcll
and
jbe
loopne
sub
je
js
ljmp
dec
lock
sbb
shlb
fbld
ja
sbb
or
add
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
sbb
rclb
mov
or
mov
mull
stc
fnstenv
or
popf
sbb
or
int3
dec
ret
mov
shlb
pop
jmp
jle
mov
mov
jb
addr16
data16
adc
or
and
popl
xchg
repnz
dec
lcall
ja
push
lret
lret
jge
je
sub
popf
or
ja
xorb
adcl
sbb
mov
in
out
jno
aas
stos
cmp
push
jb
setne
lcall
std
test
pop
push
xor
dec
imul
push
jg
jmp
xor
lea
in
icebp
in
icebp
nop
arpl
add
add
xor
mov
ja
sbb
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
push
mov
push
mov
push
add
mov
sub
insb
jp
insb
or
repz
adcl
test
out
jg
jmp
hlt
pop
out
cmp
aad
sub
jno,pn
insl
hlt
pop
mov
aam
jg
popa
add
xor
jne
mov
adcl
fs
gs
push
sbb
add
and
stos
add
sahf
or
cmpsb
pop
mov
mov
push
xor
jns
out
adc
dec
or
or
dec
inc
and
xor
hlt
push
cld
adc
int3
inc
and
cs
mov
sti
push
filds
mov
jle
arpl
mov
inc
mov
jo
or
cmp
push
lds
adc
add
ficoml
mov
xlat
mov
lods
fcoms
mov
and
inc
loop
loop
je
jmp
cli
popf
insb
mov
iret
js
lods
adc
xlat
dec
add
mov
push
add
mov
stc
hlt
xlat
dec
add
mov
push
add
push
cmp
jnp
lret
pop
ds
scas
cmp
push
lds
and
outsb
out
js
mov
inc
roll
shll
fmuls
fdivrs
leave
pop
cmp
or
push
ret
cmpsb
push
mov
ja
xorb
xlat
inc
and
aaa
loopne
in
mov
pusha
xchg
push
push
rolb
rcrb
or
sbb
sbb
aad
int3
push
test
mov
inc
mov
xchg
xchg
icebp
add
inc
lret
pop
ds
das
stos
cmp
inc
lods
es
cs
inc
aad
dec
scas
fists
lods
pop
mov
cmp
mov
std
or
lods
and
je
lea
sti
imul
pop
xor
xor
scas
sbb
hlt
pop
lods
xchg
pop
xchg
repnz
ss
and
xchg
pop
xchg
repnz
xchg
and
call
jnp
push
sbb
fildl
mov
stos
adc
movsl
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
inc
jecxz
push
in
cmp
es
insb
or
xorl
stos
sub
popf
or
test
pop
test
movb
inc
mov
jae
divl
xorb
jnp
mov
iret
dec
fstpt
icebp
nop
arpl
out
or
cwtl
push
imul
pop
out
popa
icebp
nop
arpl
outsb
leave
push
les
int3
jp
mov
js
and
outsb
or
dec
mov
lcall
jno
adc
dec
data16
add
add
mov
push
add
add
das
mov
inc
mov
push
xlat
inc
and
aaa
into
dec
fdivrl
jbe
loopne
xchg
adc
loope
adc
ss
leave
pop
cmp
cmp
mov
push
fmuls
fsubrs
push
mov
pusha
add
inc
aad
sub
je
xor
roll
aad
fiadds
dec
xor
xchg
shll
sahf
fnop
xor
add
add
fbld
shlb
inc
and
xor
push
shlb
push
shlb
shlb
push
mov
add
add
mov
add
sbb
rclb
mov
or
mov
mull
stc
and
push
add
mov
sbb
call
and
mov
fsubs
into
push
add
add
lea
std
or
push
fimull
fidivrl
xor
cmp
movsl
xor
mov
add
mov
mov
mov
jg
and
inc
and
int3
stos
iretw
xchg
add
fimull
fidivrl
in
jge
divl
mov
xchg
adc
inc
jecxz
push
in
hlt
jae
xchg
inc
fimull
ficompl
xchg
mov
mov
or
sbb
sbb
xchg
adc
ret
push
lds
xlat
add
mov
dec
fstpt
pop
jp
fcoms
sarb
sahf
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
ss
pop
test
arpl
xchg
cmc
add
mov
lock
add
inc
aam
dec
cmpsb
pushf
and
dec
fidivrs
fidivrl
pop
aas
lret
or
in
cld
lret
fwait
cmp
mov
shrb
sub
and
add
sbb
sbb
adc
adc
je
lea
or
inc
aad
dec
test
mov
mov
shlb
xor
jo
lock
xor
xchg
add
xor
sbb
and
jl
jle
mov
add
pop
lds
mov
jecxz
jne
jbe
jo
loop
mov
imul
add
cmp
inc
aam
dec
lods
jmp
xchg
ljmp
or
lock
ja
rolb
rcrb
out
cli
popf
insb
test
inc
shll
fnstcw
test
pop
jecxz
sti
imul
sub
mov
inc
mov
dec
iret
pop
cmp
aas
push
ret
cmpsb
push
mov
dec
stos
jbe
insb
or
loop
mov
push
push
stc
hlt
xlat
dec
add
mov
push
add
and
out
xor
notl
jb
xchg
jno
xchg
cmc
add
mov
mov
and
mov
lock
add
loop
jmp
jge
pop
roll
aad
pop
xchg
add
xor
adc
stc
add
add
mov
push
add
cmpsl
ret
cld
gs
pushf
outsl
js
jbe
loopne
cli
popa
icebp
nop
arpl
jne
les
test
fmulp
dec
frstor
js
popa
jg
insl
hlt
pop
in
pop
fmuls
fdivrs
cmpb
xchg
lock
adc
fstpl
test
adc
ja
jecxz
push
in
dec
rclb
and
mov
dec
mov
or
pop
xchg
sbb
jp
jp
and
gs
gs
dec
push
dec
sbb
add
pusha
notb
mov
sbb
xchg
push
xchg
repz
cmpsl
sbb
or
les
mov
push
xor
data16
cmp
mov
xchg
ret
xlat
ret
ret
es
adc
sbb
shlb
fbld
stc
jle
push
add
xor
dec
and
sub
push
xor
dec
sub
lret
mov
sahf
stc
or
mov
cmpsl
ret
xor
inc
sub
stc
ja
push
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
scas
call
push
add
add
roll
ja
xorb
jmp
in
sti
sahf
insl
mov
insl
hlt
pop
sti
jl
imul
imul
push
adc
adc
or
cmpsb
push
pop
xlat
inc
and
cmp
mov
enter
cmp
xchg
add
jb
xchg
rcrb
cmpsb
or
pusha
repnz
pop
repnz
xchg
add
std
or
jbe
je
out
pop
leave
pop
into
test
in
mov
mov
out
jns
mov
outsb
stc
imul
push
xor
add
mov
add
jp
in
adc
dec
ret
add
xlat
mov
mov
mov
aaa
cmpsl
ret
jge
fs
sbb
in
sbb
or
adcl
out
mov
js
mov
into
inc
shlb
add
xor
aad
cltd
push
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
stc
pop
cmpsl
push
add
push
lds
iret
jnp
insb
or
scas
and
and
sub
push
lds
and
dec
fistpll
cltd
clc
or
xchg
push
cli
notl
cmp
outsb
cmc
gs
adc
inc
ret
fadds
mov
ljmp
mov
cmpsl
lods
xor
es
cs
orl
decb
mov
mov
es
cs
mov
int
jp
jp
xor
push
xor
cltd
push
adc
inc
mov
jmp
xchg
mov
xchg
xor
or
cmpsb
adc
sbb
inc
cltd
setg
or
dec
in
adcl
dec
fstpt
insb
or
mov
insb
loop
je
flds
adc
sbb
shlb
fbld
stc
dec
lret
push
or
gs
insb
or
in
lock
bound
sub
mov
cmpsb
ss
aas
pop
test
test
mulb
push
mov
movl
lahf
pop
in
icebp
nop
arpl
mov
push
mov
and
add
jo
cwtl
push
imul
cld
xchg
cmc
add
ljmp
push
mov
es
pushf
xor
add
jle
call
je
sub
xchg
add
and
arpl
xchg
gs
push
jns
cmp
xchg
inc
aad
sub
push
jp
jp
pop
lds
iret
push
test
mov
sub
add
out
adc
imul
mov
icebp
ss
lds
mov
in
jle
add
jns
cmp
mov
shrb
sub
and
add
sbb
sbb
adc
adc
call
jmp
inc
roll
shll
mov
jmp
pusha
jmp
out
icebp
mov
inc
int3
popf
rcrb
jmp
aad
frstor
call
pop
sub
add
xchg
jmp
aad
mov
ret
push
add
add
mov
insl
std
test
fucomip
incl
scas
sbb
xchg
sbb
jecxz
jmp
sub
mov
jmp
int3
popf
mov
out
jmp
or
push
push
bound
mov
mov
mov
andb
sub
jo
mov
jmp
xor
mov
cmpsb
cmp
adc
xor
dec
jmp
lods
mov
or
fiadds
add
push
icebp
call
jmp
arpl
xchg
cmc
add
in
cmp
jne
addl
mov
jmp
lcall
movsl
fnstsw
movhps
jmp
rolb
add
jmp
adc
push
push
mov
jmp
xlat
testl
or
add
mov
loop
jge
int3
popf
enter
pop
fiaddl
pop
ds
mov
jmp
repz
jmp
repz
xorb
cmpl
jmp
push
call
jmp
addb
lock
insb
add
shr
add
add
add
jmp
in
imul
ret
pushl
mov
jmp
call
jmp
int3
popf
jmp
dec
enter
pop
ja
mov
jmp
sub
or
add
add
inc
and
sub
pop
iret
stos
pop
stc
jno
xorb
pop
leave
test
mov
xlat
dec
add
lret
ds
inc
mov
aas
lret
je
lea
inc
fs
jmp
call
jmp
jecxz
loop
je
add
push
jns
dec
cmp
cmpsl
aaa
push
mov
shr
jl
push
aam
push
push
jmp
mov
mov
and
je
inc
fisttpl
fnsave
popf
or
xor
sbb
incl
test
call
jmp
inc
jmp
xor
lea
add
aaa
xor
movsb
fs
imul
cmp
sbb
and
ret
jmp
inc
jmp
fwait
in
mov
add
aaa
lods
and
push
nop
or
jge
je
insl
add
sbb
icebp
sar
cmp
call
jmp
xchg
jmp
push
leave
pop
cmp
dec
push
roll
aad
xor
xchg
adc
jbe
mov
pop
jmp
outsb
out
jl
negb
mov
movsl
int3
aas
fcoms
inc
add
jmp
popf
jmp
cmp
jmp
mov
das
fmuls
inc
es
aas
push
inc
pushf
jmp
add
jbe
cmp
mov
jmp
sbb
pop
xchg
add
arpl
xchg
gs
inc
inc
pop
fwait
xchg
pop
pushl
jmp
inc
cmpsl
pop
jmp
sbb
add
xor
xor
sub
dec
adc
xor
lea
sbb
sub
popf
or
mov
jmp
sub
aaa
dec
mov
jmp
mov
jmp
ret
push
shll
pop
stos
add
pop
enter
pop
push
jbe
push
pushf
jmp
add
call
fbld
add
add
jmp
mov
subl
or
mov
mov
mov
jmp
lock
jmp
stc
insb
loop
je
fildl
mov
mov
adcb
andb
xchg
testb
movsl
add
add
scas
push
jmp
cmpsl
lods
lret
inc
scas
cmpsb
cmp
add
xlat
inc
and
push
adc
jne
call
test
je
push
call
jmp
xor
mov
stos
into
cmp
mov
movsb
int3
gs
inc
add
dec
adc
mov
add
inc
rclb
mov
pushf
sti
push
rcrl
pop
push
ja
sbb
jmp
ret
jmp
movsl
and
xor
cmp
mov
cmpsb
pop
popf
or
lock
jmp
fistl
cmpsl
push
mov
inc
ret
jmp
pushf
jmp
adc
std
pop
jmp
push
sbb
add
sbb
rcrb
xor
add
aam
enter
mov
test
xchg
mov
and
jmp
mov
testb
call
jmp
pushf
pop
xchg
adc
pop
in
inc
roll
sarl
mov
hlt
xlat
dec
add
test
incl
add
lcall
mov
jns
cmp
ja
xorb
mov
jmp
inc
inc
pusha
mov
mov
mov
andb
jmp
mov
xor
hlt
xchg
outsb
rolb
dec
sti
fcoms
cmpsb
push
hlt
sbb
add
cmp
mov
gs
push
sahf
or
mov
jl
inc
mov
and
popf
pushl
jmp
popa
mov
ret
insl
hlt
push
cld
adc
xor
lahf
jp
call
add
mov
lret
sub
pop
fdivl
in
and
nop
dec
lea
jmp
mov
sarb
mov
pop
fisttpll
out
and
outsb
xchg
mov
add
movzbl
add
cmp
jmp
popa
jmp
nop
adc
mov
stos
int
leave
inc
push
xor
es
jbe
cmpl
fdivrs
test
jmp
lret
mov
lods
rorl
dec
mov
cmp
add
jo
mov
and
cmp
jne
addl
jmp
dec
fistpll
bound
dec
dec
mov
jmp
jg
popa
add
xor
pop
int
addr16
or
jmp
adcl
loop
test
jno
popl
jmp
sti
push
dec
fmuls
fsubrs
xor
movzbl
add
cmp
je
jmp
sar
push
fs
stc
mov
jmp
mov
push
jmp
sbb
cmp
scas
cmp
mov
mov
test
mov
jmp
call
mov
sbb
sub
jmp
cmpsb
lods
lret
inc
lods
aaa
scas
cmp
mov
lahf
pop
xchg
repnz
mov
xor
das
push
jmp
daa
stos
cmp
bound
sahf
push
mov
es
sub
push
mov
pop
xor
jmp
in
pop
jmp
jmp
mov
stc
jmp
jno
jecxz
xor
pop
cltd
or
insb
jne
add
sbb
cmp
jne
addl
mov
jmp
adc
push
push
mov
xor
cmp
je
cmp
jne
jmp
lret
inc
xlat
mov
mov
cmp
mov
push
lds
cld
cmp
jmp
mov
xchg
repz
test
js
pop
inc
and
sbb
xchg
jb
sub
je
jmp
mov
mov
das
fwait
aad
aam
dec
out
sub
in
bound
xor
jmp
cmp
sub
adc
xchg
cmc
add
clc
pop
call
jmp
aam
xlat
mov
call
xchg
push
call
xchg
mov
mov
or
jmp
push
jmp
insl
popa
and
into
mov
add
add
push
lds
jge
jno
jecxz
ljmp
ret
daa
xchg
mov
jmp
lea
jmp
clc
jp
jp
cli
jg
mov
leave
dec
fistpll
or
jmp
popa
mov
ret
test
fwait
decb
mov
lea
call
add
jmp
cmpsb
and
imul
sahf
cld
jmp
mov
nop
test
adc
pop
roll
shll
lds
and
in
sbb
or
push
cmp
jae,pt
xchg
testb
push
or
sbb
mov
push
call
jmp
sbb
inc
ret
imul
jmp
adc
jmp
aam
into
test
add
sahf
cmp
push
ret
cmpsb
push
in
pop
enter
ret
std
decl
mov
mov
mov
inc
test
jne
jmp
pop
lret
lret
xor
pop
xor
rorl
mov
fstpt
es
mov
mov
mov
and
push
push
push
push
push
jmp
xor
add
jmp
sub
and
mov
decb
loopne
mov
or
mov
leave
mov
xchg
adc
ficomps
sub
pop
mov
inc
jmp
push
push
jmp
ss
dec
mov
inc
mov
aas
mov
pop
fstpt
call
jmp
lea
jmp
jae
lret
pop
sbb
aas
pop
jmp
cmpsl
daa
mov
and
pop
fisttpll
out
sub
das
mov
mov
decl
test
jne
lea
call
jmp
xor
roll
pop
jp
adc
xchg
sbb
aad
shl
loop
je
xchg
cmp
call
xor
jmp
jmp
jmp
lret
xchg
sahf
dec
pop
pop
sub
jmp
xchg
sahf
stc
or
mov
bnd
add
push
test
aaa
mov
add
popf
or
inc
shll
sti
jge
leave
ret
jmp
insl
cld
xchg
cmc
add
or
and
mov
popf
jmp
inc
pop
adc
add
add
jmp
cltd
or
in
loope
jae
aas
test
fwait
push
pushf
sti
push
mov
icebp
add
jmp
andb
add
add
lret
es
inc
fstpt
das
mov
dec
mov
repz
out
sbb
rcll
lea
push
mov
push
call
mov
jmp
lods
xor
pop
leave
test
fisubs
loop
arpl
xchg
mov
and
pushl
test
add
popa
jmp
mov
jmp
cltd
pop
push
xchg
add
es
cs
jae
xchg
push
mov
xor
mov
add
inc
cmp
jb
movl
jmp
mov
movsb
ret
ds
adc
inc
adc
sbb
sub
jecxz
jmp
movzbl
jmp
rcrl
test
stos
push
fdivl
in
movsb
sub
lds
push
and
iret
or
adc
lock
jo
jmp
mov
jns
push
add
jmp
jmp
dec
jmp
jns
add
add
xchg
add
xor
push
shll
pop
repnz
cmp
jne
addl
mov
jmp
daa
xor
outsl
loop
pop
loop
inc
fidivrl
inc
and
jbe
fisttpll
out
pop
jg
cmp
jmp
mov
jmp
adcb
loop
mov
pop
xchg
repnz
imul
adc
add
mov
test
je
xor
jmp
xor
ss
mov
adc
aas
mov
mov
and
jmp
dec
aam
sub
fidivrl
push
xor
sub
stos
jecxz
lock
jmp
in
je
lea
mov
ret
jmp
loope
in
je
add
test
push
iret
add
call
adc
jle
mov
inc
mov
xchg
movsb
daa
push
call
sub
add
mov
std
lcall
dec
sub
push
xor
sub
pop
out
notl
push
call
or
cs
cmp
pop
loope
cli
popf
insb
test
popl
jmp
jae
outsl
or
hlt
leave
rcrb
fists
pop
mov
das
leave
jbe
aaa
lcall
repz
incl
mov
xchg
xor
adc
call
jmp
pop
xchg
jmp
pusha
jmp
pop
iret
stos
pop
mov
mulb
cmp
fmuls
fdivrs
inc
aad
dec
sti
sahf
jbe
pop
jmp
loopne
cmpsb
add
jmp
xor
pop
mov
lock
lret
and
bound
call
cli
decl
add
stc
ljmp
xchg
cmc
add
mov
or
dec
fimuls
push
je
ja
loope
sahf
add
std
or
push
mov
pusha
mov
jmp
popa
jmp
gs
insb
or
in
and
ljmp
stc
out
pop
xchg
jb
or
popf
pushl
mov
jmp
push
imul
jl
out
adc
daa
jo
xchg
cmp
inc
adc
inc
push
xor
daa
ds
xchg
xchg
repz
jmp
lods
sub
mov
popa
sbb
sub
jo
mov
and
cmp
jmp
dec
jl
jno
fildl
add
jmp
ret
dec
fstpt
pop
cmp
add
out
sbb
jne
jmp
xlat
push
shlb
push
movsb
push
lret
inc
mov
mov
in
pop
xchg
inc
sbb
ja
sbb
shlb
fbld
ja
sbb
add
or
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
jmp
push
add
jmp
inc
mov
rolb
add
jmp
fwait
adc
push
ljmp
cmpl
daa
inc
mov
cmp
jmp
mov
shll
mov
mov
int3
popf
and
aaa
lods
cmp
ficomps
jmp
add
push
push
cmpl
popl
jmp
stos
es
mov
mov
inc
roll
sarl
aas
scas
lret
mov
mov
jmp
cmp
sbb
lahf
or
push
jmp
push
lahf
push
in
cmpl
jmp
repz
xchg
outsb
leave
rcrb
pop
cltd
xchg
aad
fidivl
add
sub
lret
pop
ds
lods
cmp
int3
inc
and
shll
inc
stc
jg
push
add
stc
push
fstl
stc
push
jecxz
add
add
add
inc
and
push
or
mov
movsl
int3
aas
aad
jl
lock
stc
jns
push
add
add
add
pop
cmp
xor
mov
jns
jbe
cwtl
push
jmp
lods
push
jmp
pop
adcb
adcb
in
mov
fs
jge
nop
push
popa
nop
arpl
adc
mov
sub
jmp
out
imul
insl
mov
ret
push
jmp
fists
mov
shr
add
add
mov
loope
jmp
leave
inc
xlat
mov
stos
dec
push
xor
cmp
insl
std
test
outsb
out
adc
cmp
insl
sbb
ja
sbb
cld
call
and
mov
add
sbb
rclb
mov
add
mov
mull
stc
imul
add
mov
rcll
roll
add
lods
and
fstpt
and
pop
mov
mov
shrb
sub
and
or
sbb
sbb
adc
adc
add
add
or
fisttps
mov
pop
jp
es
push
pushf
sti
push
mov
inc
repnz
jecxz
push
adc
xor
and
pop
clc
notl
dec
inc
and
pop
fwait
add
std
or
rclb
mov
in
jle
imul
sbb
add
shlb
add
push
and
pop
int
addr16
je
addr16
pop
sti
ja
xorb
fimuls
add
not
fwait
adc
push
xchg
add
cmp
sub
insl
jle
jle
call
mov
fsubp
push
add
loope
add
mov
das
test
outsl
lcall
or
cmp
xchg
fsubp
push
add
iret
stos
pop
movsb
lods
movsb
ret
fdivl
fbld
inc
push
jmp
fisubl
shrb
sub
and
add
sbb
sbb
adc
adc
leave
push
mov
inc
and
push
jmp
pop
lret
pop
ds
cwtl
add
or
outsl
in
bound
loope
add
jmp
sbb
xor
dec
out
outsb
cld
fwait
jbe
es
nop
ja
test
mov
incl
call
jmp
jmp
mov
push
mov
movzwl
movzwl
imul
mov
mov
jmp
pusha
add
jmp
leave
push
ret
cmpsb
push
cmpsb
inc
rclb
sub
outsb
rorb
dec
stos
pop
sbb
add
mov
imul
jmp
push
mov
imul
jmp
mov
push
add
add
leave
sbb
sbb
push
jecxz
push
in
loopne
push
push
jmp
cld
mov
dec
and
jmp
push
xchg
add
push
test
mov
push
add
jmp
jge
add
push
rclb
push
in
mov
dec
mov
sti
fcoml
shlb
shrb
sub
and
or
sbb
sbb
adc
adc
stc
mov
push
add
scas
cmp
cld
movzwl
jmp
scas
lods
lret
inc
out
and
add
inc
add
jmp
es
inc
mov
and
pop
push
roll
aad
cmp
outsl
mov
add
mov
adc
mov
inc
mov
jmp
xchg
mov
es
loope
cmp
jmp
les
shr
sahf
add
add
bound
add
adc
clc
xor
ja
add
lea
movsl
movsl
movsl
movsl
mov
jmp
xorb
lds
and
inc
push
aam
sub
push
xor
xor
add
add
mov
add
push
jmp
orb
decb
inc
mov
mov
sbb
and
enter
xchg
decl
lcall
dec
sub
mov
mov
das
leave
divb
jmp
lea
jmp
movsl
jmp
std
je
lea
xor
xchg
add
sahf
dec
mov
add
add
pop
cmp
adc
cltd
add
mov
pop
mov
adc
mov
pop
xchg
repnz
jmp
das
fidivl
fwait
or
sub
ljmp
mov
imul
movzwl
add
cmp
jae
jmp
int3
pop
leave
test
lock
inc
out
push
jmp
push
push
xor
js
xchg
add
fisttpll
out
mov
stos
je
jmp
jbe
arpl
cmc
adc
sahf
or
cmpsb
dec
push
test
push
idivb
jbe
loopne
dec
test
jmp
fldl
mov
lds
add
dec
incl
xor
xchg
adc
mov
mov
movsl
jmp
sbb
or
aam
jmp
pop
fisttps
fsts
aaa
mov
inc
mov
test
sar
ja
xorb
hlt
call
jmp
scas
hlt
ja
shr
jmp
adc
dec
lds
iret
or
jp
int
pop
jmp
sub
int3
inc
and
loopne
jb
mov
xchg
scas
pop
pop
pop
mov
pop
ret
jmp
ret
push
mov
shll
lcall
mov
or
call
add
jmp
test
and
mov
nop
cmp
popf
inc
dec
xchg
jmp
rcll
sti
mov
sti
and
sub
adc
pushf
jmp
pop
int
addr16
adc
mov
xor
mov
jmp
or
je
mulb
jns
imul
jmp
cltd
sbb
inc
mov
test
cmp
mov
imul
add
mov
imul
add
movzwl
movzwl
jmp
ss
dec
mov
pop
lret
mov
andb
sub
jmp
adc
outsl
jg
outsb
or
das
movb
inc
mov
arpl
xchg
mov
popa
jmp
daa
mov
inc
mov
jl
jo
jmp
jbe
xchg
testb
ljmp
mov
bound
cmp
dec
adc
cmpsb
push
xchg
pop
bound
inc
adc
and
jne
mov
jmp
icebp
jl
jne
and
jl
jne
xor
xchg
popa
and
mov
inc
add
push
add
movzwl
movzwl
jmp
out
jge
je
xor
dec
ret
std
sbb
pop
scas
mov
popl
jmp
ficoml
cmpsb
push
cli
mov
mov
and
leave
jo
push
lret
lahf
int
int3
popf
push
int3
inc
and
mov
and
call
jmp
loopne
jmp
push
into
pop
cmp
xor
cld
xchg
cmc
add
das
mov
inc
mov
push
movsl
and
shr
shrl
add
pop
cwtl
push
imul
stos
cmp
inc
dec
int3
inc
and
inc
inc
popa
mov
jmp
mov
and
mov
jmp
add
jmp
mov
ficoml
jmp
icebp
jnp
mov
mov
lods
pop
mov
or
add
and
clc
or
je
jmp
push
fisttpll
out
or
arpl
jbe
add
jmp
xor
add
xchg
add
add
outsb
or
sbb
ljmp
stc
hlt
add
add
add
shr
add
add
jmp
jmp
pop
or
sbb
add
add
pushl
xorb
push
inc
call
push
je
cmpl
jne
call
test
je
push
jmp
push
jmp
lods
lods
lret
inc
lock
jle
call
add
inc
dec
ds
jmp
cmpsl
call
jmp
lock
xchg
outsb
fbstp
xor
mov
add
xor
pop
leave
test
lock
lcall
sbb
sub
and
cmp
fiaddl
jmp
divb
xchg
push
sbb
lret
leave
or
pop
push
add
jmp
add
jmp
rorb
mov
fdivrl
mov
sbb
in
jg
and
cmp
jne
addl
mov
jmp
jge
insl
hlt
pop
int3
pop
lret
scas
pop
mov
pop
int3
stos
mov
inc
fidivrl
movzwl
jmp
test
mov
mov
push
jmp
adc
jmp
call
mov
pop
test
fs
jae
xchg
repz
jnp
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
cmp
dec
frstor
jb
mov
sub
cmp
jmp
xchg
jmp
test
mov
and
dec
push
xor
imul
dec
xor
fnstcw
pop
add
add
pop
repnz
cmpsb
lcall
adc
pop
lret
scas
pop
repnz
fucomp
mov
shll
add
or
adc
inc
and
js
pushf
xor
adc
pop
lods
cmp
mov
jmp
enter
fs
jb
xchg
sbb
pop
inc
scas
jae
mov
lea
jmp
inc
fdivl
in
rcrl
pop
lea
jle
call
fidivrl
movsl
jmp
movsl
jmp
lods
xor
imul
insl
in
scas
xor
mov
pop
push
mov
add
lea
movsl
movsl
movsl
movsl
jmp
movsl
jmp
outsl
test
jmp
mov
rorl
lock
push
js
aam
xchg
in
jmp
cmpsb
daa
mov
and
mov
fistl
and
aaa
jmp
xchg
pop
mov
mov
and
imul
add
cmp
jae
jmp
fwait
adc
and
sbb
inc
cld
call
adc
and
mov
sbb
loope
jno
lahf
pop
jmp
mov
lods
mov
xchg
fcoml
mov
jmp
push
fimuls
inc
jbe
jp
in
pop
imul
mov
mov
cs
and
jmp
inc
jmp
les
scas
pop
repnz
cmpsb
push
loop
stos
cmp
add
jp
sbb
call
loopne
lcall
sub
pop
leave
test
out
sahf
or
mov
leave
push
shlb
jmp
sub
fisubrl
mov
inc
xlat
dec
fdivrl
sbb
xor
sub
mov
icebp
popa
add
cmp
add
aas
mov
fdivr
lds
test
add
push
call
jmp
jle
shr
fwait
addb
pushl
mov
jmp
push
fisttpl
frstor
into
sbb
sti
pop
fdivl
in
repz
pusha
mov
mov
jmp
cld
jbe
cmpl
mov
iret
inc
aad
dec
test
xlat
es
add
mov
add
add
mov
loope
inc
aam
dec
mov
dec
fstpt
push
pop
jmp
jmp
ja
sbb
sub
or
jb
rolb
shlb
pop
int3
stos
iretw
mov
inc
adc
enter
data16
mov
iret
add
add
add
test
add
inc
mov
fldpi
push
pop
iret
pop
cmp
jle
mov
lods
aas
scas
lret
cmpsb
cmp
mov
xchg
sub
lock
jo
mov
and
cmp
jmp
jmp
flds
mov
mov
cmp
sub
add
icebp
pushf
popa
mov
jmp
dec
fisttpl
fstpl
jo
loop
inc
les
int3
and
and
popl
jmp
stos
sub
sub
jmp
sbb
jnp
push
movsl
xor
adcl
mov
movzbl
add
cmp
jmp
aad
sbb
push
call
jmp
rorl
dec
mov
jge
enter
inc
mov
or
push
call
rcrl
stos
pop
sub
notl
jmp
jge
scas
daa
mov
and
xchg
aam
lea
push
call
xchg
and
jne
or
cs
cmp
dec
push
mov
notl
mov
sahf
xchg
or
dec
fdivrs
cmp
add
xor
add
call
stos
inc
shll
repnz
fs
ljmp
stc
mov
ljmp
sub
fstpt
repz
call
lods
xor
lock
stos
xor
aam
sub
clc
lahf
push
pop
jecxz
push
in
imul
xor
mov
stos
add
movzwl
imul
add
movzwl
imul
jmp
imul
push
cmc
or
sub
scas
pop
scas
insl
call
cmp
dec
je
insl
hlt
pop
out
popf
or
or
fimull
fidivrl
push
xchg
and
ja
sbb
xor
mov
stc
and
push
add
fidivrl
daa
inc
mov
push
rcll
ja
inc
aad
dec
in
mov
insb
add
add
imul
add
fbld
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
pop
add
add
jl
push
add
hlt
fbld
sbb
sbb
sbb
rclb
mov
or
mov
mull
stc
push
mov
lds
mov
cli
popf
insb
lret
pop
lret
pop
ds
sbb
ja
jge
negl
aam
ret
cmpsb
push
mov
ljmp
push
mov
repz
adc
repnz
pop
repnz
gs
adc
pop
jecxz
cli
popf
insb
mov
dec
mov
inc
stos
cmp
xor
and
xor
push
xchg
repz
std
scas
and
jle
mov
testb
mov
mov
pushf
add
add
ja
sbb
xor
mov
ja
sbb
mov
mov
add
add
xor
mov
repz
add
mov
sbb
push
clc
mov
cwtl
push
les
int3
gs
out
jno
xchg
and
sub
jg
insb
or
in
je
lea
push
lret
mov
cmp
mov
cmp
loop
notl
push
aaa
ret
pop
int3
stos
and
cli
popf
insb
xchg
pop
fimuls
xor
ret
push
xlat
inc
and
aaa
or
sbb
mov
fisttps
xchg
jb
jl
rclb
addr16
rolb
rolb
cmp
jl
jne
and
dec
add
mov
push
add
mov
es
imul
jmp
jmp
in
sbb
shlb
dec
loopne
stc
hlt
xlat
dec
add
mov
push
add
and
mov
pop
stos
repnz
pushf
outsl
lret
nop
testl
xchg
sbb
add
shlb
fbld
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
sbb
rclb
mov
or
mov
mull
stc
insl
or
or
mov
in
sbb
in
je
lea
adc
cmc
gs
jp
push
lds
addr16
jp
jge
je
insl
inc
lret
pop
ds
insb
ljmp
push
cld
sub
in
notl
lcall
cmp
dec
cmp
fists
mov
ret
repz
and
sbb
dec
rcll
mov
fsubrs
lahf
sti
push
imul
xlat
dec
add
mov
push
add
dec
sub
imul
add
stc
push
push
add
test
pop
mov
add
clc
insl
std
test
and
into
pop
cmp
jno
outsb
cld
fwait
jbe
dec
roll
shll
add
roll
aad
fwait
or
pop
int
loopw
xchg
add
pop
inc
lds
iret
and
imul
inc
sub
and
jmp
nop
push
popa
nop
gs
popa
add
sbb
mov
inc
mov
dec
ret
mov
mov
xchg
jb
adcl
into
pop
cmp
jno
fdivl
in
cld
jo
xorl
push
icebp
mov
test
pop
push
sahf
or
cmpsb
pop
push
popf
or
or
in
movsl
pop
into
pop
cmp
jg
pop
xchg
adc
lods
or
adc
sub
mov
mov
cmc
pushf
outsl
test
pop
cmp
dec
jo
mov
push
mov
push
add
imul
movzwl
jmp
aaa
test
pop
test
sub
lcall
push
stc
hlt
xlat
dec
add
mov
push
add
sbb
fs
or
jle
xor
int
ret
lret
mov
es
mov
fstpl
test
lock
bound
shrl
adcl
fmuls
fdivrs
lret
pop
ds
xor
push
lds
add
mov
test
fwait
or
xor
lcall
pop
enter
jns
mov
xchg
and
jmp
jge
xlat
push
ret
cmpsb
push
nop
sbbb
ljmp
push
scas
pop
mov
xor
sub
int3
dec
fdivrl
cmp
mov
add
or
jno
jbe
cmpl
xchg
add
inc
addl
mov
jle
push
cld
setg
in
sbb
add
test
shrl
repnz
rcrb
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
mov
add
mov
mull
stc
aam
push
add
mov
es
mov
lock
je
push
cmpsl
sub
jmp
sbb
and
push
lahf
push
mov
test
inc
daa
sarb
inc
aad
dec
cld
lods
cmp
push
test
push
test
push
icebp
jecxz
out
mov
dec
aam
sub
sub
sub
adc
in
sbb
mov
test
push
cltd
clc
gs
pushf
outsl
ljmp
mov
enter
mov
and
icebp
inc
rclb
ds
jl
jne
push
jb
fs
or
call
ds
jle
mov
iret
cmp
cmp
stc
fwait
clc
push
add
stc
and
push
add
push
cld
push
add
add
add
in
mov
shlb
sbb
pop
mov
xchg
icebp
add
or
pop
jb
sub
pop
enter
roll
mov
jmp
pop
xchg
repnz
cmp
push
in
pop
int
addr16
js
bound
popa
add
push
outsb
hlt
push
cld
aas
scas
loope
inc
sahf
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
mov
ret
sahf
push
xchg
repz
in
notl
inc
fdivl
in
or
movsb
es
cs
roll
aad
jge
je
insl
fistpl
scas
pop
mov
dec
mov
outsl
lcall
dec
adc
adc
inc
and
ss
test
pushf
xor
inc
loopne
sbb
ja
sbb
shlb
fbld
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
add
sbb
rclb
push
mov
push
mov
push
add
mov
clc
push
add
stc
into
push
push
add
in
mov
dec
mov
outsl
lcall
sti
fists
mov
pop
cmp
jno
insb
or
mov
stc
fwait
clc
push
add
xchg
adc
xchg
and
loop
sbb
pop
lret
lret
mov
xor
or
pop
jp
sbb
ja
sbb
xor
mov
stc
xor
push
add
mov
aaa
cmpsl
ret
pop
push
xor
daa
adc
sbb
or
xchg
adc
cmpsl
out
inc
shlb
rcrb
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
sbb
sbb
rclb
mov
add
mov
mull
stc
cmp
push
add
mov
cmp
sti
js
mov
ficompl
scas
pop
mov
scas
cmp
mov
xchg
pop
xchg
adc
cmpsb
daa
mov
and
push
inc
and
sub
cli
sub
sbb
jl
adcl
push
les
scas
lret
pop
inc
and
or
and
adc
push
mov
mov
es
cltd
or
out
jg
jmp
enter
popf
or
cmc
gs
push
xchg
and
xlat
mov
call
push
xchg
pop
rcll
and
arpl
xchg
mov
test
inc
shlb
imul
das
dec
mov
push
movsb
dec
sub
pop
mov
shlb
shrb
sub
and
add
sbb
sbb
adc
adc
das
scas
cmp
mov
inc
lret
pop
ds
sbb
xchg
add
sahf
imul
loop
je
test
mov
and
jno
push
lcall
loop
je
mov
pushf
and
inc
int3
inc
and
mov
sbb
cltd
adc
mov
inc
aam
sub
or
xor
adc
adc
or
or
xor
mov
ja
sbb
add
add
mov
or
or
xor
mov
repnz
add
jo
push
add
add
sbb
adc
or
and
arpl
xchg
gs
xchg
adc
movsl
xor
cltd
or
jno
cmpsb
xor
scas
pop
mov
nop
testl
sbb
or
out
push
xor
sub
sbb
cld
push
lahf
push
lods
cmp
xor
rcll
data16
jmp
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
inc
fisttps
flds
fwait
jae
repz
cmc
sbb
lods
cmp
jecxz
push
in
jne
gs
xor
out
adc
pop
jnp
imul
pop
cmp
sub
or
rclb
lods
pop
mov
push
aaa
ret
push
lret
mov
add
out
adc
or
insb
or
loop
sub
movsb
ret
ds
add
or
ret
dec
fdivrl
dec
ret
ret
inc
and
outsl
dec
fdivl
in
dec
fisttpll
out
sub
sub
adc
mov
or
sbb
xchg
or
cmpsl
cmp
lods
xor
int
aam
mov
push
xchg
jb
or
jae
in
cld
jge
je
insl
jle
mov
cmc
stc
div
push
add
stc
fadds
add
or
jg
je
lea
into
sub
outsl
stc
div
push
add
scas
sub
lock
ja
sbb
shlb
fbld
add
add
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
mov
or
mov
mull
sbb
sbb
sbb
rclb
mov
or
mov
mull
push
mov
or
or
mov
push
add
mov
jl
negb
jb
outsb
or
or
mov
pop
int3
stos
data16
cmp
push
lahf
push
adc
icebp
adcl
test
dec
fistpll
sub
push
mov
push
jno
xor
mov
adc
gs
pushf
outsl
hlt
pusha
notb
loope
jae
clc
lock
bound
mov
mov
lret
add
dec
inc
jecxz
push
in
jmp
xchg
pusha
out
mov
js
imul
add
jnp
dec
fnstcw
iret
stos
pop
cltd
push
mov
xchg
adc
push
shll
es
sbb
xor
push
xor
and
xor
cld
call
and
mov
push
push
push
push
add
add
pusha
pop
repnz
jp
in
dec
test
cwtl
decl
fimuls
push
jno
inc
sub
pop
lcall
sub
push
xor
jg
inc
shlb
aad
dec
cld
loope
in
jle
mov
mov
es
das
mov
add
in
jbe
cmpl
dec
ret
mov
sarl
push
mov
jns
psubusb
mov
frstor
xor
sub
dec
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
push
inc
and
and
jne
popa
add
inc
mov
xchg
sar
daa
movsl
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
xchg
push
test
push
jmp
movsb
ret
ds
jae
outsl
or
hlt
push
fdivl
in
hlt
jl
jne
pusha
jge
push
cld
repnz
pop
repnz
add
push
xchg
repz
int3
imul
adc
dec
insb
or
ret
mov
shrb
sub
and
or
sbb
sbb
adc
adc
or
adc
push
xor
lds
scas
pop
ljmp
push
push
xor
jle
dec
fdivrl
mov
sbb
outsl
cli
push
inc
shll
add
jo
pop
int3
stos
data16
pop
rcll
inc
dec
aad
sub
pop
out
insb
loop
je
sbb
pop
fmuls
fdivs
xor
pop
add
fisubl
xchg
gs
mov
inc
mov
movsl
inc
ja
stc
sub
push
add
ds
test
or
popf
pop
movsb
sbb
ja
sbb
xor
mov
stc
push
notb
push
mov
test
push
xor
sub
mov
inc
mov
call
leave
enter
dec
cltd
sti
jne
mov
out
popa
icebp
nop
arpl
pop
lret
scas
pop
in
and
pop
add
cwtl
setg
or
xchg
cs
cmp
mov
xchg
and
mov
inc
mov
test
mov
notl
int
lret
scas
pop
mov
push
xor
daa
inc
fistpl
clc
outsb
or
jg
pop
lcall
and
imul
sub
mov
pushf
sti
push
rcrl
enter
push
mov
inc
mov
rolb
shlb
mov
into
rcrb
stos
pop
xchg
pop
roll
shll
xor
or
adc
lock
inc
les
lods
pop
hlt
mov
sbb
ja
sbb
cld
call
and
mov
out
repnz
add
mov
push
add
add
jp
stc
hlt
xlat
dec
add
mov
push
add
xchg
testb
addl
sub
lds
dec
mov
xchg
adcb
andb
push
mov
jnp
insl
hlt
pop
lock
enter
and
sti
mov
fwait
decb
cmp
pop
bound
jo
es
cld
fwait
jbe
bnd
mov
lock
ret
dec
fistpll
aad
dec
cld
es
dec
mov
dec
mov
popf
insb
lds
xorb
xor
add
insl
test
push
shll
xor
sub
testb
xor
and
sub
or
and
or
jg
mov
adc
sbb
aad
repz
imul
xchg
add
jns
push
and
add
stc
sub
push
add
stc
dec
or
push
les
pop
in
add
stc
push
or
add
stc
scas
and
adc
push
add
add
bound
notl
in
jg
add
xor
dec
insb
repnz
pop
bnd
lds
iret
dec
fstps
test
nop
mov
adc
rcll
cmpsl
push
mov
mov
dec
lret
lret
lock
add
into
es
rolb
shlb
inc
lret
lret
ja
xorb
std
insl
hlt
pop
mulb
xchg
push
jecxz
push
in
popa
repz
cmc
xor
daa
jle
bound
bound
test
push
scas
iret
pop
int3
stos
iretw
pop
into
pop
cmp
addr16
pop
leave
test
lock
or
es
mov
xor
or
mov
cmpsb
push
mov
bound
add
add
mov
data16
xchg
outsb
fbstp
jo
loop
rclb
jmp
and
insl
std
test
pusha
stc
imul
aas
pop
test
jo
imul
lock
fdivl
in
and
jno
pusha
pop
repnz
outsb
cld
fwait
jbe
mov
cmpsb
shll
pop
jecxz
push
in
dec
shlb
sbb
call
and
mov
pop
repnz
add
push
add
push
add
add
jae
push
call
mov
add
add
out
add
dec
rcll
data16
mov
push
or
add
stc
cld
adc
push
mov
add
sar
fisubrl
sbb
call
scas
daa
mov
and
and
jne
push
nop
or
xor
push
jmp
adc
outsb
adc
lret
call
jmp
jp
gs
pop
daa
sub
push
sbb
adc
call
loope
loope
jae
pop
push
call
push
cmp
dec
ret
xchg
and
add
mov
xchg
mov
jno
daa
outsb
mov
ljmp
call
jmp
sub
addb
aad
add
call
jb
add
add
jmp
daa
mov
inc
mov
sub
stos
cmp
mov
in
xchg
daa
pop
jmp
and
add
jmp
jecxz
sbb
add
add
jmp
xor
sbb
pusha
shlb
sbb
call
and
mov
pop
add
add
movsl
inc
push
add
mov
mov
stc
rorl
push
add
iret
adc
add
add
add
xchg
add
xorb
adc
shrb
sub
and
or
sbb
sbb
adc
adc
aad
mov
mov
popf
nop
pop
xchg
adc
jl
push
jmp
test
mov
out
xchg
popf
pushl
mov
jmp
and
jmp
mov
mov
add
add
jbe
xor
add
dec
xlat
inc
and
xor
lods
inc
mov
test
push
cltd
pop
rcll
inc
dec
sub
jmp
sbb
push
inc
and
addl
lock
dec
sbb
add
or
or
xor
mov
stc
cmc
sbb
push
sbb
int
fnstcw
or
dec
push
stc
hlt
xlat
dec
add
mov
push
add
test
pop
call
daa
int
cmp
jmp
int3
popf
jnp
outsb
or
adc
imul
insl
sbbl
std
jne
mov
into
in
sar
inc
adc
cmpsb
xor
fmuls
fdivrs
and
pop
aam
lret
popa
sbb
sub
jo
mov
and
jmp
jecxz
jecxz
jne
in
popa
icebp
nop
arpl
in
cs
incl
add
jmp
jl
addr16
pop
or
mov
andb
add
jmp
aad
fstpt
or
xor
mov
inc
xchg
out
cmp
dec
adc
mov
lcall
mov
jns
and
jmp
mov
jmp
jmp
inc
rolb
shlb
xchg
add
xor
fistps
sti
fnstcw
ret
mov
shrb
sub
and
or
sbb
sbb
adc
adc
pusha
stc
adc
shrb
sub
and
or
sbb
sbb
adc
adc
xor
shlb
rcrb
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
add
sbb
rclb
mov
or
mov
mull
stc
mov
push
add
mov
dec
sbb
popl
lea
jmp
push
mov
jle
imul
sub
mov
or
cmpl
outsl
lods
xor
and
and
lret
dec
fnstcw
ss
cmp
je
popa
mov
jmp
sbb
inc
in
imul
fldl
mov
push
jmp
adc
jge
jmp
and
mov
fdivrs
or
out
mov
mov
in
sub
push
jmp
mov
fsub
add
xchg
push
jmp
add
jae
push
test
jmp
mov
jmp
outsb
loopne
adc
inc
jb
xchg
testb
repnz
stc
lret
add
stc
lds
push
add
rclb
imul
xchg
pop
imul
or
mov
xor
jmp
jg
add
pop
jmp
jge
jl
negb
xor
int
lea
mov
je
jg
sti
cmpl
jmp
pop
xchg
jb
ds
mov
and
dec
mov
xchg
lahf
fbld
je
jmp
iret
push
je
jmp
add
jae
fistpl
push
fwait
or
jns
and
push
int3
stc
lret
add
stc
jbe
push
add
xor
cmpl
jmp
mov
test
push
cltd
rclb
cmpsb
push
aam
fimuls
das
cmpsl
and
in
lret
add
je
sbb
ja
sbb
shlb
fbld
stc
add
push
add
mov
sbb
mov
inc
and
call
push
mov
lea
jmp
cmp
and
inc
inc
lds
iret
sbb
dec
das
fisubrl
out
outsl
or
jmp
clc
adcl
test
mov
add
or
xchg
or
add
xlat
pop
test
jmp
insb
in
sbb
mov
sbb
stc
jne
mov
lods
sbb
cmc
sub
test
add
add
sbb
adcl
test
sti
imul
cmp
call
pop
mov
call
push
jmp
mov
mov
push
jmp
inc
lret
lret
cmpsl
aaa
push
mov
mov
in
pop
pop
sub
repnz
add
sahf
pop
enter
popa
add
add
and
in
sub
sub
add
shlb
fbld
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
mov
add
mov
mull
stc
sub
push
add
mov
and
push
aaa
mov
jp
pop
shlb
sbb
call
and
mov
add
push
add
or
push
add
add
xchg
lock
push
iret
pop
cmp
xor
es
push
roll
aad
das
mov
inc
mov
mov
ret
out
cli
popf
insb
movsl
les
mov
sbb
xor
int
fldcw
mov
stos
into
cmp
mov
push
imul
fisttpll
out
add
inc
pop
add
mov
test
mov
adc
xor
int
aam
int
pop
jmp
cs
inc
mov
mov
jne
gs
xor
mov
inc
test
jmp
jo
popa
add
sbb
stos
enter
dec
mov
mov
inc
mov
or
shr
std
decl
lahf
pushf
js
add
add
pop
leave
test
mov
out
push
lahf
push
mov
les
add
ret
sbb
fbld
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
sbb
rclb
mov
add
mov
mull
stc
dec
pop
push
add
mov
inc
and
jmp
enter
xlat
dec
add
test
sub
lods
cmp
mov
jmp
movsb
repz
icebp
clc
out
call
jmp
push
fimull
fidivrl
outsl
lcall
mov
sti
jp
jb
pop
lea
call
jmp
nop
and
lods
lret
inc
lock
jmp
jge
out
jge
je
xor
pop
mov
jmp
repz
lock
lret
mov
movsl
xor
jnp
inc
notb
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
sbb
ja
jo
loop
sbb
xchg
cmpsb
pop
jmp
lret
push
mov
jmp
cmpsb
push
jmp
mov
call
lcall
or
jle
ret
fsubl
push
add
stc
jl
push
add
mov
add
data16
xchg
outsb
jmp
lea
push
call
lea
jmp
scas
cmpsb
push
lea
jmp
jp
jnp
in
insb
add
adc
mov
mov
inc
mov
dec
add
pushl
add
jmp
jo
loop
jne
pop
hlt
and
call
jmp
pop
mov
fs
push
in
push
addr16
adc
adc
inc
aad
dec
lcall
popf
cmpsl
xchg
fcom
dec
add
mov
push
add
dec
sub
mov
dec
mov
mov
lea
call
xor
pop
add
mov
jmp
cmp
jmp
inc
leave
pop
cmp
sub
popa
icebp
nop
arpl
xor
lods
and
sub
inc
jmp
imul
cmp
es
mov
inc
adc
jb
jmp
daa
fadds
push
dec
jmp
out
clc
lahf
push
das
ret
push
lds
pop
enter
mov
aad
xchg
dec
dec
outsb
icebp
add
test
jne
mov
mov
jmp
inc
aam
sub
inc
es
sbb
mov
xor
mov
sub
jmp
jecxz
ljmp
test
push
jge
inc
and
imul
adc
fwait
add
add
push
lret
sti
push
roll
aad
jg
jp
in
push
iret
hlt
adc
mov
shlb
rcrb
mov
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
mov
or
mov
mull
stc
push
ss
add
mov
jo
loop
ret
pop
enter
sbb
xor
push
call
lea
push
mov
lea
call
jmp
testb
shl
add
jmp
jbe
push
cld
xor
jmp
push
mov
pop
mov
call
jmp
and
rorl
into
lea
jmp
test
push
leave
sub
mov
jns
pop
fstpl
stos
pop
xchg
test
mov
push
movsl
push
call
push
jmp
cmpsb
sub
lds
cs
cmp
dec
cmp
sub
pop
add
inc
je
jmp
insb
pushl
jmp
pop
roll
shll
imul
insl
mov
rorl
push
test
je
push
jmp
jmp
inc
cld
cmc
or
hlt
xlat
dec
add
inc
push
adcl
cwtl
push
imul
inc
scas
mov
xchg
adc
jmp
xchg
add
sub
nop
push
xchg
repz
mov
call
jmp
pop
xor
add
mov
inc
test
push
jmp
jle
jg
jmp
xchg
shlb
addr16
pop
lahf
inc
adc
stc
fisubl
shrb
sub
and
add
sbb
sbb
adc
adc
push
xor
jecxz
sarl
hlt
xlat
dec
add
ja
shr
ds
push
xchg
repz
in
jmp
loope
jae
xchg
or
push
adcb
addb
xchg
add
pushl
mov
lea
call
jmp
clc
gs
pushf
outsl
ljmp
push
cld
jmp
mov
cmpsl
pop
sbb
jecxz
push
jnp
mov
call
push
mov
add
jns
pop
xchg
adc
inc
int3
loop
mov
push
lea
call
pop
mov
push
jmp
push
jns
jmp
sub
and
into
repz
incl
test
jge
jb
iret
pop
cmp
add
leave
jbe
nop
imul
push
push
hlt
ja
fdiv
jg
push
inc
aam
dec
mov
mov
les
ror
jmp
cmp
dec
cli
pop
jmp
orb
sti
push
mov
push
xchg
repz
fiaddl
rcrl
stos
shlw
cmp
mov
pop
ret
jmp
sbb
call
mov
jle
cmp
fnsave
fdivl
in
adc
mov
jmp
mov
cltd
pop
out
out
jo
stos
jns
imul
std
fwait
add
xchg
popf
pushl
jmp
mov
mov
cs
adc
daa
ja
pop
out
lcall
jmp
mov
mov
mov
inc
mov
xchg
orl
add
mov
mov
dec
fnstcw
jno
jecxz
mov
jbe
xor
cld
call
and
mov
or
push
add
xor
push
add
add
mov
inc
adc
push
pop
je
ret
jmp
xchg
adc
ret
ret
adc
mov
insb
and
jmp
js
insb
or
clc
mov
mov
sbb
mov
imul
andb
sub
jo
mov
jmp
les
mov
push
xor
sub
push
mov
daa
inc
mov
and
sub
cmpl
and
daa
inc
mov
jbe
push
int3
jmp
cmp
decl
test
addl
jmp
in
jge
je
xor
ja
loope
mov
mov
insl
std
test
scas
inc
pop
xor
fsubl
push
add
inc
and
popa
push
xchg
ret
pop
aas
movzbl
jmp
add
in
clc
or
push
jo
adc
add
stos
cmp
mov
in
jne
ja
loope
xchg
sahf
loope
add
stc
adc
sbb
ja
sbb
shlb
fbld
shrb
sub
and
or
sbb
sbb
adc
adc
stc
mov
add
add
xchg
add
xor
jae
scas
inc
shll
push
cld
dec
lea
aad
lea
scas
aas
pop
test
fsubrs
andb
and
add
int3
imul
ljmp
xor
daa
ret
scas
pop
mov
in
sbb
sahf
stc
or
arpl
pop
mov
jle
inc
movl
notb
test
mov
into
dec
fistpll
push
imul
pop
leave
test
stos
in
std
test
sbb
repz
mov
adc
shrl
shrb
sub
and
or
sbb
sbb
adc
adc
cmp
popf
add
fldl
mov
lods
mov
ror
popl
jmp
ret
pop
enter
jbe
jle
call
gs
adc
movsb
daa
jmp
mov
mov
inc
and
jne
and
push
in
ja
jne
add
xchg
add
add
jmp
ficomps
stos
data16
ljmp
icebp
xor
add
add
leave
dec
lahf
push
jmp
outsb
out
jg
jmp
hlt
pop
lock
mov
loopne
xor
jmp
pop
mov
mov
scas
leave
cmp
mov
add
add
and
add
add
push
lret
dec
mov
push
mov
push
push
push
xor
push
cmp
je
jmp
or
scas
jle
jmp
fisubrs
add
sub
add
add
push
push
add
dec
fidivrs
and
mov
adc
dec
fidivrs
mov
or
pop
add
add
mov
out
inc
jg
jg
jmp
fcom
dec
add
hlt
add
add
and
sbb
jp
in
pop
mov
adc
es
scas
push
jmp
push
popf
pop
jmp
pop
jmp
xor
or
jl
sbb
or
clc
ret
mov
jmp
enter
push
mov
ret
ret
rolb
rclb
setg
or
inc
pushl
jmp
test
jne
jmp
fs
sbb
add
lods
inc
mov
movsl
int3
aas
fadds
aaa
ret
sbb
sti
jmp
rolb
add
jmp
inc
les
jmp
jmp
out
notb
stos
mov
jmp
imul
add
add
je
lea
fstpl
xchg
sbb
loope
adc
add
je
out
or
ds
or
test
push
jmp
mov
jmp
push
jmp
jp
push
cld
pop
test
cltd
clc
or
push
fmuls
fcomps
ss
push
rolb
jmp
jae
bound
push
jmp
jmp
out
mov
jp
jg
jmp
test
mov
or
mov
add
sbb
call
and
mov
sub
add
stc
bound
popf
sbb
hlt
jp
mov
stc
pushf
sub
push
xchg
or
push
mov
mov
push
mov
call
mov
jmp
dec
out
cs
pushl
jmp
jge
bound
mov
das
pushf
ljmp
cltd
push
pusha
xchg
cmpsl
testb
add
in
jmp
mov
mov
and
jg
enter
call
pushl
mov
mov
push
pushl
jmp
mov
xor
std
push
push
filds
mov
jno
jecxz
jne
mov
jmp
sti
shlb
inc
jmp
push
adcb
addb
or
in
xchg
push
aad
sub
adc
lods
cmp
jne
push
sbb
aam
mov
jmp
push
jg
dec
std
inc
inc
xlat
mov
cmpsl
sahf
sbb
lret
movsl
push
stos
divl
xorl
adc
jge
jne
cmp
jae
jmp
or
inc
lds
iret
and
and
jmp
cltd
inc
adc
jmp
imul
stos
and
mov
fstl
pop
scas
pop
push
xchg
ljmp
pushf
jmp
push
fimull
fidivrl
mov
gs
inc
push
fdivl
in
inc
jb
inc
adc
pushl
call
push
jmp
stos
and
aas
mov
inc
mov
xchg
fcoml
sub
jmp
add
adc
lods
jmp
lds
mov
out
mov
lock
mov
fbstp
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
cmp
sbb
push
xor
data16
mov
jnp
cmpl
inc
cmp
je
jmp
cmp
data16
xchg
cmc
add
movsl
daa
xor
addr16
adc
adc
js
mov
cmp
cmp
inc
add
or
mov
and
cmp
jne
addl
jmp
and
ss
rolb
add
jmp
or
int3
popf
aam
fdivrs
mov
movsl
pop
mov
notl
push
xlat
inc
and
aaa
fwait
sbb
jmp
popl
jmp
lea
in
icebp
mov
movsb
ret
rclb
shl
popa
jmp
lock
lea
lea
jmp
daa
mov
dec
rclb
xor
jbe
xlat
popa
mov
ret
adc
orb
cli
or
incb
faddp
sti
inc
rcrb
cld
call
and
mov
ret
xor
push
mov
xor
call
rcrb
stos
rolw
js
pop
xchg
cltd
clc
or
gs
call
xor
xor
or
or
mov
mov
add
mov
mov
mov
push
add
mov
imul
pop
push
call
insb
insb
or
mov
pop
int
addr16
push
dec
xchg
push
call
loopne
pop
test
pop
jmp
add
xor
sub
jae
daa
and
es
mov
xchg
punpckhbw
xor
call
push
lds
iret
push
jno
xorb
jne
mov
sbb
clc
jno
jmp
cld
ret
sub
jmp
xor
mov
stos
push
roll
aad
jp
outsb
or
xor
and
incl
sbb
jbe
jmp
es
cmp
inc
xor
in
cli
popf
insb
mov
xor
or
andb
sub
jo
jmp
rcll
mov
mov
and
cmpsb
and
or
mov
push
add
in
je
jbe
lahf
punpckhdq
push
cmpsl
inc
mov
or
popf
pushl
mov
jmp
xchg
sar
inc
adc
or
fists
mov
cltd
roll
add
jne
addl
jmp
pop
xchg
movzbl
jmp
add
pop
pop
jbe
imul
jecxz
std
test
push
cltd
or
ds
push
jg
cmpl
jmp
add
pop
mov
mov
cs
push
aaa
mov
inc
or
andb
sub
jo
jmp
hlt
imul
insl
ret
fnstcw
std
es
cwtl
add
jmp
lock
pushf
outsl
les
jmp
mov
jmp
fmuls
push
jecxz
lcall
push
sbb
adc
in
inc
and
popf
pushl
mov
jmp
adc
push
dec
xchg
xor
ja
jmp
scas
jmp
pop
ret
ret
lahf
punpckhdq
aas
lret
adc
adc
or
or
sbb
mov
mov
or
or
mov
sbb
mov
or
or
mov
or
or
or
sbb
idiv
incl
mov
or
or
mov
mov
or
add
sbb
rclb
mov
or
mov
mull
stc
ds
push
add
mov
inc
daa
rclb
cwtl
push
imul
jo
in
cwtl
add
add
insb
pusha
loop
pop
loop
jecxz
notb
outsl
or
out
add
lea
jmp
addb
lock
inc
rcll
aas
xchg
sbb
add
insb
sub
int3
popf
dec
mov
inc
mov
xor
popl
jmp
jp
ljmp
js
rorb
jmp
pop
xchg
or
jle
mov
inc
mov
sub
mov
lods
mov
loop
shlb
sbb
add
add
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
add
add
xor
push
test
cli
push
fimuls
and
js
push
shlb
fistl
cmp
jmp
mov
jmp
jo
jmp
out
clc
lahf
push
jae
ja
loope
insb
std
insl
hlt
pop
lods
adc
scas
jmp
adc
add
pop
int3
stos
iretw
fimuls
mov
lds
adc
pop
sbb
repz
jmp
mov
jmp
and
sub
inc
fimuls
add
je
jmp
aam
ret
mov
xlat
dec
add
iret
gs
pushf
outsl
test
push
lahf
punpckhdq
shlb
shlb
mov
add
add
mov
mov
or
mov
mov
mov
add
stc
aam
push
add
push
fbld
stc
leave
aas
push
add
jns
jmp
mov
cltd
clc
or
inc
push
xor
daa
je
mov
xchg
adc
add
add
adc
pop
iret
stos
pop
orb
js
or
enter
mov
push
inc
and
xor
and
cmp
adc
push
mov
mov
call
pop
xor
mov
mov
jmp
hlt
jl
jne
pusha
xor
mov
jb
lea
call
pushl
jmp
insl
add
jl
jmp
dec
fistpll
out
jo
jbe
push
movsb
cmp
or
mov
jmp
call
jmp
insl
std
insl
hlt
pop
mov
repz
cmc
pop
movsb
xor
int
cld
stc
fsubl
push
add
stc
mov
push
add
and
mov
rorb
pop
jmp
push
push
xor
jle
adcl
das
mov
push
movb
add
daa
pop
mov
jg
sub
loop
jmp
out
jo
fcomi
adc
jmp
cmpsb
xor
scas
inc
push
nop
iret
push
jmp
xor
ret
cs
dec
add
dec
dec
rolb
rclb
aas
scas
lret
ss
dec
mov
pop
mov
call
mov
push
add
lea
jmp
mov
test
call
mov
inc
test
repnz
pop
repnz
push
jmp
fnstcw
xlat
dec
add
jno
sbb
mov
orb
decb
or
popf
stc
cmp
add
stc
pushf
cmp
push
call
jmp
xchg
adc
inc
shll
test
cmp
and
decb
jmp
jno
imul
ss
sbb
or
push
mov
sbb
xchg
call
jmp
push
je
out
sub
mov
dec
mov
in
mov
std
pushw
push
push
call
push
lea
push
pushl
jmp
icebp
lock
lret
add
jmp
mov
xchg
insb
loop
je
jg
jg
jmp
adc
cmp
neg
jmp
stc
outsb
cld
fwait
jbe
xchg
add
push
les
inc
and
sbb
rcrb
clc
std
call
sbb
mov
cmp
push
cmp
out
call
xor
mov
mov
mov
jmp
gs
jmp
faddl
dec
cmpsb
sub
xor
mov
mov
orb
clc
push
jmp
rclb
mov
scas
leave
cmp
push
sahf
or
cmpsb
dec
xchg
jg
xor
mov
lea
lea
call
jmp
pop
fdivl
in
repz
mov
and
and
ss
test
call
ret
jb
jmp
push
rolb
sarb
mov
pop
int3
stos
data16
cmc
add
or
mov
add
add
inc
and
bound
add
sahf
dec
mov
jl
jmp
and
loop
std
test
roll
mov
stc
scas
xchg
and
sbb
call
and
mov
adc
push
add
xor
hlt
xlat
dec
add
outsl
test
test
push
mov
pushf
xor
adc
in
sub
sbb
ja
sbb
sbb
mov
call
and
mov
adc
add
stc
clc
fistl
popf
sbb
mov
fbld
push
add
arpl
xor
cld
call
and
mov
jb
push
add
daa
inc
mov
mov
mov
inc
add
sbb
sbb
insb
loop
je
inc
aam
sub
es
mov
push
or
push
jae
je
jmp
aas
stos
cmp
push
loop
jle
je
out
add
lods
push
pop
mov
jmp
mov
mov
out
std
mov
jmp
rcrl
loopw
dec
fstpt
dec
sub
fstps
scas
pop
mov
lods
je
push
call
jmp
mov
cwtl
decl
loop
jae
fisubrl
dec
adc
mov
jmp
jbe
gs
sbb
xchg
add
sahf
pusha
and
inc
add
jle
add
lcall
pop
leave
test
lods
adc
fsubs
repz
pop
mov
jmp
sbb
rorb
dec
stos
out
data16
xchg
outsb
mov
cmpsl
pop
mov
sbb
add
sbb
call
and
mov
sbb
push
add
daa
inc
mov
add
cs
je
lea
xchg
add
mov
mov
add
jmp
ret
dec
frstor
inc
fadds
dec
fbld
icebp
add
add
iret
lock
jmp
in
pusha
notb
sub
rdmsr
cmpsl
aaa
push
mov
xor
push
sbb
ja
sbb
cld
call
and
mov
pusha
cmp
push
jno
ja
loope
enter
mov
scas
jl
arpl
cmc
pop
xchg
or
gs
pushf
outsl
les
cmp
jg
xchg
shlb
sbb
call
and
mov
cwtl
cmp
push
in
jg
mov
mov
adc
fcom
dec
add
mov
push
add
rcrb
std
call
sbb
mov
add
add
jmp
mov
call
xor
cmpsl
aaa
push
mov
testb
cmp
jmp
sbb
add
jmp
mov
cwtl
push
add
mov
movsl
push
into
pop
cmp
push
loope
icebp
nop
arpl
dec
out
dec
and
inc
add
dec
in
dec
sub
sbb
jmp
je
jmp
mov
jecxz
icebp
nop
arpl
ja
arpl
xlat
dec
add
sar
lcall
fadds
ret
jmp
out
cmp
jmp
js
insl
hlt
pop
rorb
pop
aas
lret
lods
cmc
enter
addb
jmp
ss
inc
mov
rcrl
shll
mov
jmp
jo
push
pop
xchg
repnz
push
jecxz
push
in
and
xor
sbb
add
add
mov
sbb
mov
add
add
mov
add
add
add
sbb
idiv
incl
mov
add
add
mov
mov
add
sbb
sbb
rclb
mov
add
mov
mull
stc
add
mov
mov
clc
cmp
jmp
pop
xchg
pop
bound
mov
fistpll
add
call
mov
cmp
js
rcrl
jne
cmp
jmp
xlat
cmp
jmp
fstpt
cwtl
cmp
add
jmp
jnp
fs
pop
jle
bound
cmp
pusha
cld
jmp
imul
or
push
cmc
imul
insl
fiaddl
mov
jp
jne
jmp
mov
jne
jmp
xor
je
jno
jecxz
cltd
adc
rclb
cmpsb
stc
stos
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
je
mov
jmp
push
add
xor
aad
fs
popf
insb
xchg
lcall
js
insb
cmp
cmp
pushl
cmp
jmp
jns
jbe
loopne
pop
lret
pop
ds
inc
jecxz
push
in
lods
and
jge
loop
mov
jmp
fcompl
xchg
lea
xlat
and
ds
in
scas
fucom
xchg
add
and
stos
push
fwait
sbb
aad
repz
fdivl
in
and
adc
gs
push
add
xor
orl
call
jmp
jecxz
hlt
xchg
outsb
xchg
xchg
jb
jl
je
lea
fisttps
flds
loope
aas
je
push
call
jmp
dec
iret
and
add
add
test
outsl
add
add
adcb
xorb
push
xor
lock
bound
jbe
incl
jmp
sbb
xchg
sbb
roll
aad
push
adc
leave
or
add
add
mov
gs
push
add
fdivrl
lds
test
lock
mov
and
stc
shlb
add
xor
sub
sub
and
or
sbb
sbb
adc
adc
stc
mov
add
add
imul
mov
faddl
mov
lea
imul
fdivrl
mov
notl
jns
je
out
imul
lcall
stc
imul
frstor
je
jnp
xchg
or
dec
cmp
push
lds
sbb
punpckhdq
add
or
push
lds
nop
arpl
pop
stos
mov
fwait
decb
sahf
insl
mov
addb
mov
adc
push
lret
pop
ds
xchg
add
pop
xchg
adc
add
out
jg
mov
ds
push
popf
test
cld
call
and
mov
cmp
push
add
cmpsb
cmp
add
call
jmp
dec
fimull
fisubrl
pop
leave
test
cmc
insl
std
test
fiaddl
lahf
je
jmp
jl
jmp
in
jbe
cmpl
dec
ret
mov
test
push
lret
lret
pop
call
cmp
je
push
call
jmp
mov
push
push
push
push
jmp
or
in
sbb
ss
mov
push
add
push
jmp
xchg
bnd
lea
inc
and
or
fadd
loop
stc
insl
xor
sbb
ja
sbb
shlb
fbld
shrb
sub
and
or
sbb
sbb
adc
adc
stc
cmpl
add
daa
dec
insl
dec
cmp
jmp
cmp
jmp
and
ss
mov
into
cmp
sub
adc
cwtl
sub
add
jmp
les
movsb
push
mov
jmp
push
in
setp
fwait
inc
fnstenv
jmp
push
popf
or
mov
imul
sbb
mov
insl
out
shr
out
lock
lds
xchg
stos
cmp
add
inc
cmp
jmp
push
lds
ljmp
add
and
dec
push
call
mov
jmp
xchg
add
mov
jmp
outsb
cli
push
mov
inc
mov
xchg
xor
mov
hlt
xlat
dec
add
pusha
rorb
mov
outsl
or
in
cld
xchg
cmc
add
mov
jmp
mov
ret
xchg
or
cmpsl
in
or
add
jmp
ja
jle
call
dec
push
jmp
and
std
test
add
pop
inc
rcll
or
dec
fstpt
xchg
adc
dec
ljmp
mov
cmp
je
call
cmp
je
jmp
push
jmp
jmp
clc
lahf
push
push
aam
sub
stc
cwtl
imul
push
call
jmp
rcll
movsb
or
or
or
jmp
mov
dec
add
and
decl
fistpl
stos
mov
jns
mov
insb
in
sbb
cmovl
mov
xor
jne
cmp
je
jmp
and
push
xor
push
lds
les
mov
xor
fldt
dec
push
jmp
mov
jmp
test
mov
test
out
jmp
in
notl
clc
jnp
mov
mulb
insb
fiaddl
lret
je
mov
pushl
pushl
jmp
popf
push
pushf
sti
push
mov
inc
hlt
adcl
xchg
add
std
or
cmp
xor
xor
jmp
loopne
in
jg
sbb
mov
inc
mov
imul
push
lea
call
push
call
jmp
sub
pushl
jmp
ret
test
call
jmp
and
add
rorb
mov
jle
call
adc
lea
cmp
je
push
call
jmp
mov
jmp
push
int
and
push
adc
enter
dec
mov
xchg
je
jmp
jge
xchg
testb
and
sub
pusha
out
adc
or
mov
xchg
xchg
repnz
jb
fs
or
enter
sub
xor
jmp
lret
inc
xlat
mov
mov
mov
fstpl
scas
pop
mov
lret
mov
mov
jmp
xchg
sbb
sbb
add
xchg
lcall
mov
pushf
dec
xor
pavgb
pushl
pushl
call
mov
jmp
mov
jmp
les
push
jmp
adc
jo
jmp
jno
xchg
testb
cmp
decl
mov
cmp
jmp
adc
or
pushl
jmp
xchg
push
jmp
jae
jno
jecxz
push
test
or
in
movsl
xchg
add
sbb
jl
dec
add
xor
sub
sub
and
add
sbb
sbb
adc
adc
mov
popf
lock
pop
sub
add
xchg
popf
jmp
add
nop
daa
mov
jmp
in
jg
mov
cmp
imul
add
adc
xchg
push
push
jle
pushl
jmp
test
aad
lret
pop
ds
mov
test
mov
pushf
jmp
jecxz
pusha
jmp
pushf
add
fisttpll
out
in
outsb
cld
fwait
jbe
test
fwait
decb
jmp
fstpl
sbbl
mov
cmpsb
shll
movsb
mov
add
add
enter
xchg
pusha
xchg
bnd
mov
push
in
jmp
add
ljmp
xlat
adc
and
mov
shll
repz
jp
pop
pop
leave
ret
jmp
dec
cmp
jmp
pushf
sbb
pop
int
addr16
scas
lret
mov
xchg
icebp
add
mov
inc
adc
pop
leave
incb
add
jmp
pushf
pop
xchg
adc
stos
pop
test
test
push
mov
cmp
adc
movsb
xor
int
lea
inc
jno
cmpl
adc
dec
sub
or
or
xor
imul
inc
mov
sub
jo
mov
and
jmp
cmpsl
cmp
lds
mov
jmp
cmc
gs
pop
inc
fisttpll
out
ljmp
jmp
aad
fdivrl
cltd
clc
or
or
or
jae
mov
xor
call
jmp
push
andl
jmp
repz
xchg
mov
movsl
leave
dec
fnstcw
and
sub
ljmp
push
add
dec
fdivrs
mov
rolb
add
jmp
jnp
xchg
testb
mov
xor
fld
lret
xchg
popa
jmp
pop
mov
jmp
sbb
cmp
cmp
mov
fcomp
repnz
ljmp
cmp
jmp
xchg
pop
xchg
adc
jl
push
jmp
fistl
mov
push
jmp
imul
in
jecxz
jne
sbb
jno
fisubrl
rcrb
mov
stc
idivl
push
add
pop
cmp
jo
test
xchg
dec
call
jmp
mov
out
mov
inc
mov
pop
xchg
add
xor
mov
call
push
lea
lea
jmp
daa
sub
aas
mov
adc
iret
add
add
pusha
pop
repnz
adc
and
mov
mov
and
pop
add
or
mov
fcmovne
push
mov
std
stc
daa
mov
inc
mov
mov
stos
pop
test
jne
mov
lea
jmp
jmp
mov
mov
sbb
sub
leave
adc
or
push
xchg
popf
rol
add
jmp
pop
popf
or
aaa
cmpsl
ret
in
jno
xorb
data16
xchg
outsb
jmp
call
lea
push
mov
lea
call
jmp
mov
jno
xorb
cwtl
push
imul
inc
fidivrl
decl
jmp
sbb
inc
mov
xchg
jmp
je
pusha
pop
repnz
jp
jp
cmp
inc
pop
addb
jmp
call
jmp
adc
pop
bound
mov
int3
stos
data16
add
lea
call
push
call
mov
jmp
xchg
sbb
xchg
loope
adc
add
jmp
arpl
js
ljmp
push
sti
je
lea
ficomps
inc
cmp
sbb
das
out
and
mov
xchg
jge
je
sub
push
jmp
add
jmp
pop
xchg
add
clc
outsb
or
push
dec
jecxz
push
in
icebp
data16
xchg
outsb
imul
mov
jmp
mov
fisttpll
mov
dec
pop
aam
movzwl
jmp
xchg
add
xor
pop
mov
gs
jbe
lods
and
pop
rorb
rorb
add
add
add
ret
jb
lea
jmp
rorb
mov
repnz
fs
mov
or
jmp
into
mov
jmp
xchg
push
pushf
sti
push
xchg
std
jge
je
dec
fstpl
stos
data16
jnp
call
mov
call
mov
jmp
rolb
inc
test
cmp
stos
mov
jmp
js
hlt
push
jmp
mov
jmp
push
xchg
add
push
les
icebp
nop
arpl
push
mov
inc
or
jmp
insb
out
jg
jmp
xlat
and
jmp
notb
notb
lea
mov
call
jmp
es
cmp
mov
repz
jp
adc
lahf
outsl
mov
jmp
mov
mov
lea
jmp
lea
add
add
movsb
cmp
js
mov
inc
int3
inc
and
rclb
mov
test
decl
push
sub
decl
add
mov
fwait
or
sub
pop
imull
test
cmc
cmpl
add
jmp
fwait
adc
cmp
mov
mov
das
lcall
inc
call
mov
call
xor
cmp
jmp
data16
pop
jmp
ljmp
mov
dec
mov
movsb
push
mov
pop
jmp
jmp
fdivs
shr
lret
mov
sahf
stc
or
sub
pop
xchg
inc
hlt
inc
stos
call
pop
mov
call
push
lea
lea
jmp
xor
cmp
jae
xor
lea
push
mov
jmp
push
fwait
or
jae
adcl
test
insl
std
test
lahf
pop
and
lea
push
push
mov
call
test
jmp
in
imul
out
jg
jmp
and
push
or
je
jmp
jle
loope
cmp
jmp
pop
rolb
shlb
idivl
test
and
push
insl
lahf
into
fimuls
add
popf
add
add
adcl
xchg
or
cmp
inc
pop
cmc
and
sub
add
add
jecxz
mov
cli
mov
jmp
mov
popa
in
bound
loopne
jb
or
jge
mov
and
mov
sub
push
push
push
mov
jmp
mov
push
push
mov
call
jmp
mov
inc
jmp
jp,pt
sbb
clc
jmp
push
xchg
mov
icebp
pusha
notb
cmp
sbb
mov
push
jmp
in
pop
je
sub
aam
test
pop
test
ds
cmp
sbb
mov
out
rcl
mov
lea
andl
lea
jmp
decw
add
sbb
push
adc
inc
fmuls
fdivs
push
lret
lret
rolb
rclb
pop
icebp
xchg
push
jmp
inc
int
and
add
je
lea
dec
fnstcw
flds
pushf
xor
and
push
pushl
call
jmp
les
jmp
mov
jp
jmp
xchg
adc
in
sbb
leave
mov
fisubrl
add
dec
inc
lret
pop
ds
scas
sub
xchg
shrb
std
jmp
clc
jle
mov
ret
ds
out
sbb
mov
lds
mov
jmp
pop
ret
pop
rcll
push
jmp
and
adc
jmp
in
notl
mov
mov
popa
icebp
nop
arpl
push
cmp
into
lea
jmp
mov
mov
jmp
pusha
call
jmp
push
pop
jp
ds
push
pushl
call
mov
mov
jmp
cmp
jmp
sub
popf
mov
leave
fistps
jmp
ret
mov
pushl
jmp
cmp
add
jmp
rcrb
pop
cld
ljmp
sahf
insl
test
sti
mov
jmp
add
jo
aad
jbe
popf
loop
outsl
push
add
add
popf
mov
xor
add
mov
xchg
adc
inc
je
adc
mov
neg
mov
inc
cmp
jl
jmp
movsb
cmp
mov
scas
and
sub
es
jmp
cltd
and
pushf
pop
cld
jmp
sbb
pop
jmp
incb
fcomps
jnp
lcall
add
rorl
add
mov
test
push
cltd
push
pop
jp
adc
mov
add
jmp
cmp
in
insl
std
test
xchg
fistpl
mov
pushl
shr
cltd
out
loop
stos
call
jmp
add
loopne
ficomps
notl
mov
shr
jmp
add
hlt
or
or
jle
mov
add
int3
popf
sti
popa
icebp
nop
arpl
pop
or
add
push
lds
pop
jmp
dec
iret
pop
cmp
add
loop,pt
jmp
subb
jmp
cmp
pop
xor
pop
call
jmp
mov
ficoms
mov
mov
mov
andb
sub
jmp
mov
jmp
leave
mov
popf
pop
adc
imul
add
insl
hlt
pop
in
sub
mov
inc
adc
and
add
add
jmp
mov
ficompl
mov
jmp
push
ret
cmpsb
push
mov
das
mov
push
jmp
int3
popf
jno
push
roll
adc
add
xchg
cmc
add
jecxz
popl
lea
jmp
push
jmp
jecxz
pop
jmp
xchg
add
push
adc
insb
or
mov
mov
leave
inc
aam
dec
lcall
add
add
xor
call
jmp
mov
xchg
icebp
add
lret
mov
xor
mov
push
push
mov
lea
mov
call
jmp
shll
xor
scas
add
add
fcmovnb
repnz
int3
popf
jmp
mov
scas
leave
cmp
xlat
lea
call
pop
pop
lea
sub
mov
sub
jmp
mov
pop
pop
pop
mov
or
xor
call
jmp
imul
or
mov
xorb
inc
decl
jne
xor
xor
xor
mov
jmp
inc
jmp
or
call
jmp
test
test
push
mov
xchg
aaa
ret
or
test
sub
add
pop
sub
add
dec
sub
push
adcb
loopne
mov
adc
cmpsb
inc
roll
shll
insb
loop
je
xlat
adc
xor
jmp
push
jmp
xchg
and
fwait
decb
xchg
popa
lods
rorl
mov
cwtl
cld
incl
dec
sub
xor
jmp
outsl
ljmp
jae
push
int3
call
pop
jmp
int3
popf
jecxz
std
test
cld
ja
xorb
jmp
call
mov
dec
psubsw
insb
loop
je
xchg
adc
push
lret
mov
add
add
and
inc
cmp
jb
mov
jmp
ret
or
mov
inc
dec
jne
pop
movl
jmp
int3
popf
push
shll
in
jmp
adc
nop
inc
int3
jmp
xchg
adc
ljmp
pop
jb
les
mov
xlat
push
mov
sub
pop
movzbl
xor
mov
jmp
icebp
movsb
jns
dec
cld
jmp
push
fisttps
flds
mov
inc
mov
mov
rclb
fadds
push
mov
jmp
filds
push
les
fidivrl
bound
cmp
sbb
jno
jmp
movb
inc
jmp
xor
pop
xor
sbb
dec
pop
fists
out
jmp
mov
mov
sbb
pop
call
jns
jb
je
out
pop
outsb
ret
jmp
popa
hlt
push
cld
pop
add
jge
je
out
or
in
insb
lcall
add
jmp
data16
rolb
popf
jmp
aaa
lods
cmp
jnp
mov
imull
lcall
leave
push
call
sub
xchg
jmp
cmp
movsb
and
cmp
push
xor
scas
mov
decl
rcrb
add
add
scas
add
add
es
ja
addr16
add
push
cli
inc
jmp
jb
mov
call
inc
aam
dec
cltd
and
pop
push
mov
jmp
add
pop
jb
stos
and
out
jl
notb
andb
jmp
push
fstpt
fildll
jo
insb
or
mov
lret
mov
mov
mov
jmp
ds
inc
mov
dec
rclb
add
mov
shlb
add
inc
and
jmp
push
mov
cmpsl
xor
es
dec
mov
push
cmpsl
adc
mov
jmp
and
mov
pop
or
sar
inc
adc
pusha
sti
imul
pop
rcrb
scas
pop
add
ret
jmp
addl
jmp
sub
mov
ret
xchg
in
sbb
fisttps
test
jmp
xlat
dec
frstor
mov
lods
insb
repnz
pop
bnd
clc
add
mov
add
cmp
je
jmp
mov
out
je
popa
mov
jmp
jl
jno
jecxz
fistpl
stos
pop
scas
sub
jb
cli
jmp
sbb
add
jmp
lods
cs
xchg
pop
bound
mov
push
rorl
movzbl
add
cmp
jmp
inc
ret
ret
mov
lahf
push
jmp
or
push
lcall
or
dec
push
jmp
les
mov
xchg
insl
out
jg
jmp
aas
lret
xchg
add
popa
int
lea
jmp
cli
hlt
push
jmp
jl
gs
pop
sbb
jg
repz
cmc
add
xchg
jmp
push
jmp
pop
jmp
dec
lret
pop
ds
lea
xchg
repnz
in
pusha
notb
in
je
xor
test
xchg
add
and
or
pop
cltd
ss
adc
jne
addl
mov
jmp
hlt
lock
add
pop
mov
andl
jmp
sub
jmp
mov
cmpb
aad
frstor
loop
cmp
clc
mov
cmp
jb
test
je
mov
jmp
lea
jmp
pop
jmp
test
rorb
xchg
add
sahf
je
sbb
aad
int3
push
mov
jns
bndstx
call
jmp
mov
ret
and
fucom
lock
bound
push
jmp
pop
jmp
jb
jmp
jge
xchg
testb
and
pop
fisttpll
out
imul
add
pop
sub
add
xchg
popf
pushl
jmp
mov
insb
mov
jmp
and
daa
mov
scas
sub
insl
std
test
sti
fistl
sbb
pop
jmp
jmp
push
jmp
idivb
mov
fisubrl
les
xorb
dec
mov
je
jmp
scas
mov
jmp
xchg
sub
ret
jmp
pop
inc
xor
pushf
jmp
cwtl
adc
in
sbb
jne
outsb
or
pop
cmp
xor
jo
mov
sub
ljmp
ret
push
lds
pop
iret
stos
pop
jnp
js
ljmp
lods
or
fimuls
mov
notl
cmc
pushf
outsl
lret
mov
lea
push
call
addl
add
jmp
fisttps
lcall
xor
inc
sbb
fadds
mov
mov
sarb
sbb
rorl
sbb
cld
lcall
push
push
xchg
sub
add
jmp
pusha
ljmp
stc
out
push
leave
pop
cmp
dec
jo
push
popf
jmp
sbb
cmp
mov
jmp
loopne
in
je
add
imul
insl
mov
sti
adc
stc
cli
push
adc
lods
push
cld
decl
psubsw
jmp
mov
jmp
mov
enter
in
sbb
fs
pop
loop
add
cmp
add
stos
sub
lds
rcll
lods
pop
test
into
pop
cmp
sarb
pushl
mov
jmp
push
fisttps
fsts
lea
jle
mov
stc
or
jp
xchg
push
inc
adc
es
pop
test
das
mov
mov
cmc
repnz
jmp
mov
pop
cmp
daa
inc
mov
dec
fdivl
in
pop
iret
pop
cmp
jle
out
adc
pop
in
andb
sub
jo
mov
and
cmp
jmp
pop
bound
clc
sbb
xor
jmp
out
jmp
sahf
or
mov
mov
and
repz
cmpsl
in
out
jno
add
add
adc
add
mov
add
jmp
call
and
mov
push
into
pop
cmp
xor
je
lea
test
jmp
stos
mov
jmp
pop
test
rolb
sarb
adc
loopne
push
pushf
jmp
pop
cwtl
push
imul
jae
xchg
xor
popl
lea
jmp
fistps
xchg
lea
dec
adc
add
inc
mov
mov
and
push
mov
call
push
lea
jmp
rcrl
and
mov
movsl
daa
mov
and
and
aaa
push
mov
push
std
or
sbb
jmp
pop
jmp
scas
and
stos
and
iret
pop
cmp
and
sarl
int3
popf
idivb
je
jbe
mov
cmp
jno
outsb
call
dec
sub
inc
sbb
mov
loopne
in
xor
add
add
jmp
pusha
in
jge
mull
pop
rolb
rclb
dec
fdivrs
pop
sub
add
xchg
popf
pushl
jmp
mov
mov
and
jb
cmpsl
or
pusha
jmp
int3
popa
jmp
mov
aad
xchg
rolb
mov
call
je
mov
xchg
aas
or
mov
mov
mov
ret
inc
inc
and
imul
cmpsb
xor
scas
insl
inc
push
mov
mov
mov
andb
sub
jo
mov
jmp
movsl
lods
lret
inc
movsb
movsl
inc
shll
and
cld
push
iret
pop
cmp
push
mov
ret
jmp
addl
jmp
xchg
setg
or
aas
hlt
jbe
imul
adc
sbb
jecxz
jmp
mov
jmp
and
adc
es
cs
jnp
addb
aaa
push
pushf
jmp
pop
mov
add
movzbl
add
cmp
jmp
aad
mov
loop
je
mov
test
cmp
jae
outsb
or
sbb
jmp
pop
xlat
inc
and
cmp
push
xor
cmp
insb
lret
push
add
jmp
daa
test
pop
test
inc
leave
pop
cmp
or
xchg
or
cmp
mov
popl
jmp
nop
add
mov
add
add
mov
and
rcrb
mov
xchg
daa
sbb
jg
pop
repz
cmp
fs
jmp
cmp
jbe
jno
jecxz
mov
mov
mov
dec
mov
mov
jmp
xor
mov
lds
mov
jns
wbinvd
xchg
add
sahf
sbb
and
and
out
call
jmp
divl
jl
outsb
out
jl
negb
pop
fmuls
fdivrs
mov
pop
sub
jmp
mov
adc
mov
je
dec
add
rorb
jmp
daa
mov
movsl
and
sbb
loop
ret
jmp
inc
iret
pop
cmp
xor
hlt
adc
mov
inc
mov
jno
daa
sub
push
push
mov
call
add
jmp
aaa
mov
or
leave
pop
cmp
outsb
decl
inc
mov
xor
pmaxsw
jmp
mov
mov
and
inc
mov
mov
lock
lret
sub
adc
je
cld
decl
adc
cld
jmp
push
jmp
pop
jmp
popf
or
mov
call
xor
jge
notl
jmp
ret
jmp
xchg
jmp
loop
out
mov
rorl
mov
cld
fwait
jbe
test
call
add
jmp
popf
jmp
out
in
mov
aam
mov
mov
jmp
in
jno
xorb
ret
push
lds
ficoms
mov
jge
jmp
add
add
jmp
sahf
and
push
lahf
push
push
rolb
shlb
aas
sub
ds
movsl
int3
aas
ret
fcomps
xchg
addr16
adc
mov
and
cmp
jmp
loopne
cli
popf
insb
cltd
xchg
xchg
lock
rcrl
stos
pop
xchg
mov
aam
and
mov
add
hlt
jge
je
addr16
xchg
add
sahf
jp
or
and
int
outsl
jne
mov
ret
sub
lock
jne
inc
and
or
or
cmpsb
adc
xchg
cmp
add
movzbl
add
cmp
jmp
xlat
inc
fidivrl
popa
jmp
je
jp
in
pop
cmpsl
jmp
adc
sbb
and
sbb
fistpll
cltd
push
xchg
jmp
aas
stos
cmp
or
add
add
xchg
cmpsl
aaa
push
mov
inc
mov
inc
movsb
dec
sbb
addl
jmp
sbb
iret
push
mov
or
sbb
mov
pusha
mov
mov
mov
andb
sub
jo
jmp
sbb
insb
sbb
addr16
sbb
add
insl
mov
jmp
mov
stos
into
cmp
lret
ret
mov
mov
fdivs
mov
push
mov
mov
call
cmpl
jmp
xor
aaa
leave
mov
add
ret
dec
add
jnp
mov
pop
aam
sub
das
dec
mov
in
xchg
shr
les
cmpsb
push
mov
ret
popw
and
jmp
push
mov
jmp
xchg
sbb
inc
shll
pop
cmp
push
aaa
ret
popl
lea
jmp
push
jmp
mov
and
into
cs
mov
mov
es
mov
jmp
mov
cld
pushl
jmp
je
lea
je
lea
jge
je
and
int3
or
jmp
pop
rclb
and
push
mov
sub
add
jmp
ret
test
mov
add
jnp
mov
cmp
inc
and
jmp
repz
xorb
rclb
sub
xchg
jb
addr16
pop
and
int
lcall
jb
in
jb
cmc
test
popf
pushl
mov
jmp
inc
lds
iret
xor
loop
ljmp
stc
bnd
fdivrp
incl
mov
push
mov
es
jno
imul
adc
arpl
adcl
arpl
decl
adc
push
cld
incl
inc
dec
fdivrs
cmp
or
popa
jmp
and
cmp
jge
push
mov
xchg
adc
or
mov
mov
andb
sub
jmp
scas
inc
shll
jmp
addl
jmp
mulb
xchg
outsb
fisttps
or
mov
inc
adc
xchg
add
cs
adc
sbb
call
sub
jmp
fs
popf
insb
scas
fimuls
mov
pop
jmp
lret
push
shll
jmp
out
jbe
cmpl
lds
iret
dec
fimull
mov
adc
pushl
jmp
push
sub
sarb
add
inc
pop
jmp
pusha
loop
pop
loop
sbb
xchg
sbb
mov
jns
insl
sub
cmpl
jne
push
push
pushl
lea
call
jmp
push
and
sub
jmp
jmp
call
jmp
orl
decb
push
cmc
and
pop
int
addr16
xchg
adc
dec
add
xchg
mov
stos
into
cmp
sub
adc
sbb
adc
loop
and
popl
lea
jmp
push
jmp
pop
jmp
add
jmp
and
inc
xor
push
lds
and
mov
mov
cld
call
cmpl
testb
imul
push
xor
sub
jmp
jl
arpl
cmc
pop
mov
xchg
fs
push
push
sub
jmp
pop
xchg
jmp
xor
pushf
setg
or
dec
mov
add
js
jno
jecxz
cmpsb
outsb
mov
repz
adc
and
das
push
iret
pop
cmp
aas
dec
fidivrs
cmc
pushf
outsl
ljmp
add
jmp
cmc
add
mov
jmp
jbe
push
cld
xor
fisubs
push
lds
mov
jmp
sub
inc
pop
xchg
pop
bound
cmpsl
push
test
dec
ret
mov
lock
jmp
test
mov
sbb
pushf
xor
inc
mov
shll
out
popf
jmp
and
sub
jmp
adc
jmp
cmc
jl
jne
ja
push
ret
cmpsb
push
hlt
outsl
loopne
adc
xor
enter
or
lcall
mov
mov
cltd
popa
mov
ret
pop
int3
inc
and
addl
jmp
xor
or
or
jge
rcrb
leave
jo
mov
and
cmp
jmp
nop
mov
push
xchg
mov
jmp
rolb
mov
jb
popa
jmp
sbb
in
jmp
mov
popf
lds
mov
inc
and
sbb
les
test
mov
jmp
add
jmp
push
in
add
popl
jmp
pushf
or
push
mov
cli
popf
insb
jmp
popa
jg
lea
jmp
lods
cs
jg
mov
je
push
cld
adc
jmp
add
add
and
call
cli
adc
jo
jmp
inc
push
xor
xor
jl
mulb
cmpsb
and
mov
gs
dec
movzbl
add
cmp
je
jmp
hlt
ja
xorb
adc
add
jmp
ret
dec
fidivrs
xor
jmp
rorb
dec
lods
imul
pop
loop
aaa
mov
int
shlb
sub
je
dec
dec
je
mov
ret
jmp
bnd
mov
shr
fs
sti
jmp
jmp
ret
jmp
adc
dec
orb
pop
jmp
mov
mov
sbb
push
cmpsl
adc
das
mov
and
mov
jmp
imul
pop
nop
push
popa
nop
cmp
mov
jle
cmp
aad
jmp
add
mov
sub
jmp
pop
xchg
add
xor
lods
outsl
xor
inc
mov
cmpl
mov
clc
mov
ja
jmp
xchg
push
pushf
sti
push
cld
push
call
popa
jmp
arpl
jecxz
jmp
or
add
arpl
pop
into
test
or
sbb
xor
cmp
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
jg
xchg
testb
push
rolb
sarb
sub
pusha
fs
jmp
out
cmc
pushf
outsl
test
push
cld
sbb
psubd
lods
movzbl
add
cmp
je
jmp
push
xchg
pop
bound
gs
popa
mov
rcrl
and
sub
mov
jmp
int3
jp
int3
popf
insb
in
bound
test
pop
dec
call
push
lea
jmp
in
std
test
and
pop
roll
shll
ds
inc
mov
mov
ret
jne
addl
jmp
sub
cltd
in
adc
jmp
out
lods
jno
inc
push
jmp
lea
jmp
je
outsb
or
cmp
jne
out
dec
icebp
popa
icebp
nop
arpl
loopne
push
mov
out
mov
ret
lret
adc
add
jmp
loopne
loope
jae
outsb
insb
or
mov
into
pop
cmp
jg
dec
test
mov
jmp
cs
pushl
jmp
xor
cld
jmp
ret
jmp
inc
mov
icebp
adc
iret
pop
leave
test
out
mov
movsl
shlb
shr
jmp
push
jmp
ljmp
xchg
or
pop
pop
repnz
xchg
call
push
pushl
add
call
pop
jmp
jmp
xchg
xchg
xor
pop
jmp
cmp
sbb
rclb
cmpsb
push
aam
jg
mov
push
or
jmp
incb
jae
popa
add
sbb
pop
aas
lret
insb
loop
je
jo
call
jmp
mov
and
jmp
sbb
xchg
adc
xchg
jb
addr16
je
lea
mov
xchg
xchg
popf
pushl
jmp
aad
int3
stos
data16
pop
and
xor
mov
loop
pop
loop
jno
out
jmp
shlb
xchg
gs
dec
fdivrs
cmp
mov
add
sub
dec
jo
mov
and
cmp
jne
jmp
sbb
ja
jmp
push
mov
jecxz
jmp
enter
pop
jmp
jg
arpl
xchg
rorb
dec
adc
dec
jb
test
mov
mov
andb
sub
jo
mov
jmp
les
mov
ret
jne
addl
jmp
mov
xchg
sbb
aad
fdivrl
inc
mov
jmp
leave
push
mov
inc
and
aaa
loop
adc
add
in
mov
ret
jno
jl
divb
xchg
add
jmp
mov
stos
int
cmc
pop
fisttpll
out
popa
out
adc
pop
iret
dec
fdivrl
mov
jmp
fisttpll
cmp
jmp
fsubs
inc
add
add
mov
lods
sub
push
mov
int
int
pusha
jmp
je
jmp
mov
movsl
int3
aas
aad
rolb
shlb
pusha
jmp
sbb
xor
popf
pushl
mov
jmp
movsl
xor
push
lret
sti
aaa
mov
fstps
scas
pop
cltd
adc
jge
add
add
jmp
rcrl
fs
call
int3
dec
fisttps
cmpsb
push
jmp
sub
jmp
push
lds
iret
jl
inc
shlb
scas
leave
cmp
popl
lea
jmp
dec
fdivl
in
pop
adcl
mov
jle
jp
in
das
int3
jns
inc
in
aas
leave
lea
jmp
call
jmp
pop
test
jge
outsb
cs
inc
mov
fisubrs
and
cmp
in
bound
ret
jmp
pop
push
push
jmp
inc
sti
je
jmp
lcall
test
pop
test
gs
push
in
add
lcall
mov
mov
jmp
outsb
pop
pop
call
jmp
dec
enter
ss
or
dec
insl
sbb
mov
dec
mov
stos
mov
dec
ret
cmpsl
xor
and
push
cmp
enter
les
jmp
xchg
std
xor
shr
add
add
dec
sub
cmp
jle
mov
decl
lods
jp
imul
das
and
xor
jmp
shll
cmpl
jmp
gs
jg
jmp
lods
pop
cli
mov
mov
sbb
call
pushl
lea
pushl
push
lea
jmp
jmp
lods
jmp
jmp
push
movl
jmp
cld
insl
std
test
mov
mov
sbb
cmp
cmpsl
cli
mov
aas
or
dec
shr
call
jmp
hlt
push
cld
dec
xchg
push
xchg
repz
cmpsl
lock
popf
insb
fcmovne
je
movl
jmp
mull
xchg
lds
xchg
cmc
add
xchg
push
jmp
das
mov
sar
jmp
cld
gs
pushf
outsl
sub
push
push
popf
or
iret
pop
cmp
push
into
or
adc
add
jmp
fiadds
mov
enter
xchg
bound
xchg
jle
shr
cltd
mov
jmp
push
rolb
sarb
stc
jg
mov
mov
stos
int
push
lds
mov
je
lea
clc
outsb
or
or
sbb
jmp
cs
xchg
and
loopne
sub
fsts
mov
lcall
jne
push
lea
push
pushl
lea
jmp
stos
insl
ss
inc
in
ss
aaa
mov
scas
lret
jnp
push
cld
sub
lock
bound
call
jmp
jmp
push
dec
push
jno
adc
es
mov
jmp
jne
jmp
sbb
pop
lret
scas
pop
repnz
or
sub
subb
mov
jmp
enter
data16
mov
mov
pushf
mov
inc
or
add
add
xor
sub
jo
mov
xchg
push
xchg
repz
test
add
les
jp
in
das
movsb
cmp
push
roll
aad
leave
cld
out
and
inc
shr
add
add
fs
popf
insb
test
outsb
or
jg
push
shll
mov
xchg
mov
jmp
mov
jmp
je
gs
adc
lahf
jne
nop
push
popa
nop
jne
jns
addr16
or
rolb
add
leave
ret
jmp
mov
sub
dec
or
leave
jne
movl
lea
jmp
pop
xchg
pop
bound
push
mov
lret
or
daa
fwait
call
mov
dec
or
outsb
lods
and
inc
push
jecxz
push
in
inc
int3
inc
and
mov
jmp
movb
inc
jmp
outsl
out
adc
dec
or
adc
push
xchg
sbb
jmp
push
in
dec
outsl
movb
inc
jmp
jb
fwait
shll
jmp
leave
jmp
xchg
push
xchg
repz
mov
popf
xor
adc
stos
int
xchg
xchg
add
xchg
jmp
fistpll
jmp
xchg
add
sub
mov
inc
mov
xchg
fs
insl
mov
mov
mov
push
mov
call
jmp
xchg
or
or
xor
dec
jmp
cmp
add
add
jmp
lds
xchg
mov
mov
inc
mov
push
nop
push
popa
nop
pop
xchg
mov
popa
mov
jmp
daa
mov
lea
push
jmp
loop
notb
xor
dec
inc
push
xor
es
sub
mov
or
ret
add
jge
testl
fmull
test
xchg
icebp
add
aas
mov
cltd
pop
adc
push
jmp
mov
fninit
push
push
fisttps
flds
outsb
in
sbb
push
pusha
xchg
xor
mov
add
cmp
je
jmp
sub
jmp
mov
jecxz
mov
push
mov
jns
das
jge
sar
cwtl
push
jmp
jg
add
and
jnp
mov
xchg
sbb
lods
cmp
adc
cmp
jne
addl
mov
jmp
dec
fisttpll
out
inc
jnp
out
jne
lea
jmp
mov
test
dec
adc
dec
jae
mov
inc
adc
and
insb
loop
je
sbb
aaa
cmpsl
ret
jg
js
ljmp
jecxz
jmp
adc
sub
out
sti
jmp
in
lea
jmp
inc
fisttps
fldenv
rclb
and
jns
jmp
push
lea
ljmp
ret
pop
pop
jp
adc
push
lea
push
mov
mov
call
jmp
sub
pop
pop
pop
jmp
inc
jmp
lock
xchg
mov
leave
mov
mov
dec
fnstcw
push
lea
push
mov
call
add
push
jmp
enter
push
test
ret
ret
lahf
punpckhdq
addr16
jp
adc
filds
incl
jne
dec
jns
jmp
xlat
arpl
xchg
gs
inc
lret
lret
mov
or
incl
jmp
fdiv
push
jmp
mov
xchg
lock
sbb
add
xor
daa
icebp
jae
insl
hlt
pop
mov
popa
jmp
pop
inc
jg
lea
jmp
jg
pusha
pop
repnz
jne
jne
out
pop
dec
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
push
push
xor
jg
dec
frstor
and
outsb
xchg
lret
jne
dec
jns
jmp
call
jmp
sub
and
xchg
add
and
inc
push
mov
lea
jmp
xchg
setg
or
push
int3
inc
and
jmp
add
fadds
hlt
std
jmp
dec
aad
sub
aaa
addr16
insb
or
out
dec
xlat
inc
and
pop
pop
cmp
add
add
jmp
repz
jmp
sub
cmp
xchg
lea
jmp
popf
add
xor
aas
scas
lret
jp
push
push
inc
push
lea
push
jmp
push
lea
in
jge
testl
mov
and
les
pop
cmp
cmp
lgs
jno
je
lea
mov
jg
jns
jl
jne
data16
decl
out
lcall
add
cmpsb
jb
dec
leave
jmp
aaa
mov
out
notl
and
cmp
jge
rorb
dec
test
jl
mov
jmp
jmp
lods
and
xchg
add
adc
jge
jl
negb
mov
jmp
lods
or
lcall
jns
cmp
jo
xorl
outsl
fdivrl
test
in
pop
fiaddl
fiaddl
pushl
jmp
pop
push
mov
jmp
xor
mov
add
xor
jmp
mov
jno
jnp
in
pop
inc
fisttpl
fnstsw
push
movsb
add
cld
test
jne
mov
lea
jmp
inc
fdivl
in
sbbb
ljmp
pop
mov
add
std
or
lret
mov
add
xchg
cmp
movsb
cmp
test
jge
inc
scas
sub
lds
cli
jp
dec
cld
jmp
inc
push
xor
es
jge
push
xor
jmp
in
push
lahf
push
sub
aad
mov
addr16
pop
push
call
in
sti
jmp
movb
inc
jmp
fstl
lods
pop
scas
or
insb
or
pop
outsl
xor
adc
dec
inc
aam
dec
mov
notb
or
in
bound
jmp
xchg
sbb
dec
fidivrs
push
jmp
pop
jmp
mov
sbbl
sbb
cmp
push
ret
cmpsb
push
cli
je
mov
imul
jmp
ljmp
test
int3
stos
iretw
inc
rolb
shlb
adc
sbb
pop
jmp
inc
roll
add
cld
jmp
jbe
mov
add
add
push
pusha
jmp
xchg
or
in
xlat
faddl
mov
and
stc
mov
and
test
rolb
xchg
popf
pushl
jmp
rorl
movsb
push
rorb
cltd
mov
pushf
sti
push
fildll
jmp
push
push
mov
jmp
popa
jmp
insl
out
jl
negb
fs
sbb
mov
es
mov
mov
in
sti
decl
add
shr
mov
push
lea
jmp
lahf
sbb
mov
xchg
arpl
jg
mov
or
flds
in
gs
pushf
outsl
sahf
lahf
adc
in
sbb
std
jnp
mov
mov
fstpt
sar
inc
adc
out
cltd
push
xchg
gs
xchg
sub
cmpsl
cmp
jne
addl
mov
jmp
cmp
jmp
or
fmuls
inc
lret
lret
cmpsb
jl
jmp
pop
aad
sub
jp
jge
je
xor
adc
aam
pop
daa
movzbl
add
jmp
rclb
push
loope
arpl
test
jmp
mov
add
jbe
call
test
cmp
iret
pop
cmp
jle
daa
mov
mov
andb
sub
jo
mov
jmp
cmp
cwtl
add
add
pushl
jmp
lea
jmp
mov
movsb
aaa
cmpsl
ret
in
jne
mov
push
adc
leave
mov
jmp
stc
lock
bound
cmp
je
insl
jp
xchg
les
jmp
or
jnp
add
lods
xor
outsb
cld
fwait
jbe
mov
jmp
xchg
daa
cltd
les
in
sub
push
push
mov
mov
add
shr
jmp
cs
inc
mov
loopne
enter
inc
cld
jmp
jb
pusha
pop
repnz
bnd
outsb
or
push
popf
sbb
mov
call
inc
lcall
dec
das
fisubrl
lret
dec
fdivrl
mov
jp
int3
movsl
pop
popl
lea
jmp
xor
add
add
and
inc
into
pop
cmp
and
xchg
arpl
or
incl
jne
cmp
jmp
cmp
jmp
inc
lret
lret
adcl
int3
inc
and
repz
jmp
xor
rolb
add
jmp
inc
int
and
jb
pop
jmp
xor
lret
pop
into
test
adc
sub
inc
push
pushf
jmp
jno
jne
out
pop
jmp
and
lods
scas
inc
pop
movl
jmp
gs
pop
repnz
pop
enter
jg
js
mov
filds
in
hlt
xchg
rorl
xlat
jmp
jecxz
out
mov
pushf
add
std
imul
insl
xorl
mov
dec
or
xor
cwtl
push
imul
mov
gs
adc
jecxz
ljmp
add
add
lea
add
xor
add
in
push
call
pop
jmp
ficompl
scas
pop
mov
sub
lea
jmp
decl
jmp
jne
jmp
clc
jg
mov
lods
sub
mov
xchg
xchg
je
lea
jmp
jnp
xchg
cmc
add
into
sub
push
push
mov
push
add
cltd
or
jno
dec
frstor
mov
lods
sbb
incl
rorb
mov
push
or
jmp
sub
out
gs
pushf
outsl
sahf
sub
mov
mov
add
inc
jmp
push
mov
jns
das
mov
cmp
ljmp
jp
in
cmp
test
jge
dec
adcb
out
mov
pusha
notb
shr
std
jmp
cmp
imul
push
xor
test
push
scas
inc
xlat
inc
and
jbe
mov
gs
jmp
repnz
popf
insb
fstpl
mov
lods
sbb
push
cmp
cmp
jbe
cmpb
jne
jmp
inc
shll
mov
jmp
inc
fimuls
and
out
mov
sbb
xor
push
shrb
and
popf
pushl
jmp
in
jnp
mov
mov
mov
jbe
cmpl
gs
pushf
outsl
movsb
ret
mov
cmpsl
mov
cwtl
decl
loop
dec
fistpll
push
xor
dec
adc
xor
mov
jle
jle
sub
push
mov
inc
and
cmp
enter
mov
push
pushf
sti
push
mov
sub
jmp
lods
and
cmp
mov
inc
mov
sub
test
test
sub
jb
xchg
lahf
setg
or
fidivs
loope
adc
push
outsb
push
pop
lea
jmp
jno
jp
in
dec
pop
xchg
add
push
out
jnp
mov
pop
push
xor
and
into
flds
mov
xor
es
les
test
cld
incl
incl
jne
push
jmp
adc
jbe
mov
jns
pusha
lods
cmp
and
pop
iret
stos
pop
mov
lock
bound
loopne
adc
or
cmpsb
push
imul
lods
sub
iret
pop
cmp
and
imul
and
mov
dec
mov
test
lret
lret
data16
xchg
outsb
xchg
pop
xchg
repnz
test
mull
icebp
dec
adcb
mov
inc
roll
shll
mov
dec
roll
shll
sbb
popa
mov
and
cli
sti
imul
insl
in
and
pop
xchg
adc
xor
insb
in
bound
mov
and
cmpsb
push
lods
scas
das
mov
inc
xlat
mov
mov
das
vpshufhw
jo
jmp
orb
mov
fwait
decb
pop
test
shlb
xchg
gs
pop
enter
ficoml
lods
pop
cli
mov
mov
sbb
cld
lea
mov
and
js
and
xchg
or
fmull
mov
jae
in
dec
inc
and
sbb
xchg
jbe
xchg
mov
cli
popf
insb
test
jae
in
pop
push
xor
dec
xchg
push
test
push
xlat
pop
lret
scas
pop
mov
imul
insl
sbb
int3
stos
addw
and
pop
repnz
fs
mov
cltd
clc
or
or
push
fimull
fidivrl
lea
fwait
decb
insb
lahf
outsb
or
push
test
push
lret
sub
jnp
mov
gs
xor
or
jle
mov
pop
loop
scas
lods
lret
inc
out
adc
mov
rolb
mov
stc
inc
aad
sub
jp
cmpsl
aaa
push
mov
sbb
unpcklps
mulb
push
push
nop
push
popa
nop
pop
jmp
ljmp
decl
ret
leave
dec
fdivrs
add
sahf
jbe
mov
and
or
sbb
pop
dec
int
and
and
push
mov
shlb
and
push
sub
cmp
dec
xchg
push
mov
es
sub
push
lahf
push
jb
xchg
mov
xchg
dec
fimuls
push
push
ret
ret
dec
fidivrs
shlb
test
push
scas
mov
mov
and
dec
stc
mov
nop
lcall
mov
js
imul
xor
and
rolb
sarb
dec
fisttpl
fstpl
jge
divl
sub
sub
mov
jg
bound
ljmp
or
pop
push
rolb
shlb
and
sbb
lds
mov
in
mov
js
jp
jnp
mov
push
lahf
punpckhdq
sub
and
rcll
xchg
or
adcb
subb
sahf
or
cmpsb
pop
into
pop
int
addr16
dec
fisttpll
out
roll
dec
in
mov
jle
jns
jmp
cmp
pusha
stc
imul
jb
in
mov
leave
ljmp
dec
fdivrl
sub
jb
popa
icebp
nop
arpl
nop
js
cmpsb
xor
scas
dec
insl
jmp
fstps
stos
data16
cs
jb
xchg
jb
outsb
or
or
repz
xor
push
cwtl
push
imul
mov
jne
outsb
or
pop
mov
sbbl
and
xchg
add
sahf
das
mov
xchg
adc
xor
pop
and
jl
cmp
cmp
in
sbb
loope,pn
call
ljmp
shlb
xchg
in
add
std
or
add
jp
outsl
or
out
mov
stos
into
cmp
int
fsts
loop
pop
xchg
adc
xor
es
mov
cmp
pop
aad
sub
cs
sbb
and
aas
scas
lret
mov
xchg
dec
push
xor
sbb
loope
loop
je
scas
inc
shll
and
pushl
mov
add
pop
lret
scas
pop
mov
pop
leave
test
mov
lock
adc
inc
mov
cmp
xchg
sbb
xlat
inc
and
aaa
jnp
push
fdivl
in
jp
pusha
pop
repnz
stos
mov
and
adcl
loopne
mov
or
mov
test
pop
enter
jne
ja
loope
fimull
movsb
push
repnz
xchg
cmpsb
imul
add
adc
dec
das
fidivl
repnz
pop
leave
test
dec
fdivrl
aam
in
pusha
loope
adc
or
pop
int3
stos
mov
dec
fnstcw
into
test
inc
daa
rolb
jecxz
test
xchg
icebp
add
sbb
mov
scas
leave
cmp
daa
lods
cmp
mov
dec
fidivrs
xor
jbe
adc
sbb
in
jge
testl
jns
imul
insl
ficompl
mov
jns
and
jae
xchg
nop
add
jae
jne
out
pop
fwait
push
pushf
sti
push
mov
xor
and
or
push
test
push
idivb
test
ja
push
xchg
or
push
inc
push
xor
daa
mov
cmpsb
shll
mov
movsb
ret
dec
fisubl
xchg
gs
fldt
loopne
or
pop
xchg
repnz
xchg
sbb
pop
xchg
repnz
mov
xchg
sbb
pop
xchg
add
push
fcoml
mov
repnz
shrb
imul
jne
out
pop
mov
outsb
clc
outsb
or
dec
adc
hlt
pusha
notb
pop
jb
sub
popa
icebp
nop
arpl
mov
sbb
pop
xchg
or
jmp
push
in
insb
sbbl
and
js
push
sbb
sbb
stos
cmp
dec
mov
mov
out
ret
inc
aad
dec
mov
std
adc
in
fists
pop
mov
inc
mov
sub
loopne
cld
fwait
jbe
and
dec
test
jnp
jg
mov
xchg
sbb
pop
fisttpl
fisttpll
cmp
jno
jecxz
out
fs
popf
insb
lahf
gs
jl
notb
mov
lds
iret
ds
push
lds
test
pop
leave
cmp
jge
test
xlat
dec
fstpt
mov
and
hlt
inc
mov
mov
add
jno
jecxz
out
fs
popf
insb
lahf
gs
jl
notb
mov
xchg
jb
lds
iret
ds
push
lds
test
pop
leave
cmp
jge
test
xlat
dec
fstpt
mov
and
hlt
inc
mov
mov
add
pop
pop
cmp
xor
movsb
cld
inc
xchg
push
mov
es
inc
aad
dec
ljmp
sub
sub
adcl
insb
or
scas
jb
jp
in
pop
lahf
or
cs
mov
jns
das
push
inc
cmp
add
add
jge
divl
dec
rolb
shlb
sbb
popa
imull
fwait
jbe
mov
cmpsb
sbb
mov
xchg
adc
pushf
xor
dec
xchg
adc
push
ret
cmpsb
push
lods
jp
xchg
testb
and
dec
int
and
cmp
xorl
adc
data16
mov
shlb
mov
sbb
rorl
push
adcb
sub
and
dec
jmp
mov
mov
lods
cmp
mov
cmc
pop
xchg
add
sahf
aaa
xor
adc
jge
je
sub
dec
fdivrl
clc
lahf
push
hlt
outsb
cld
fwait
jbe
sbb
xlat
dec
frstor
lea
dec
frstor
icebp
add
lods
bound
lret
out
outsb
cld
fwait
jbe
push
xchg
add
pop
int
addr16
outsl
call
jns
mov
lahf
cli
or
pop
aam
sub
mov
loopne
adc
add
mov
insb
loop
pop
loop
xchg
sbb
pop
lret
scas
pop
cltd
xchg
je
pop
roll
rcll
jp
gs
pop
mov
mov
stos
cmp
add
cltd
and
adc
lret
mov
leave
arpl
xchg
gs
cli
push
sahf
or
cmpsb
gs
add
push
cli
popa
icebp
nop
arpl
pop
xchg
push
xchg
jb
or
jmp
clc
outsb
or
adc
dec
ret
mov
out
jns
insl
hlt
pop
sti
loopnew
adc
aaa
xlat
push
shll
sub
push
lods
es
cs
inc
aam
dec
lods
popa
out
jg
jmp
in
sbb
mov
or
aaa
cmpsl
ret
fstl
mov
addr16
dec
push
push
xor
mov
fisubrl
xchg
lahf
punpckhdq
ds
jmp
das
xor
ss
mov
bound
std
or
adc
ret
scas
pop
mov
or
adc
pop
lret
scas
pop
fsub
data16
xchg
outsb
cmpsl
dec
roll
aad
leave
dec
fistpll
ret
mov
xlat
inc
and
and
pop
cmp
dec
das
fisubrl
pop
xchg
add
jp
nop
push
popa
nop
arpl
movsl
cmpsb
xor
scas
dec
jmp
add
je
lea
stos
cmp
imul
call
add
cmp
push
lahf
push
dec
fimull
fidivl
xchg
add
and
test
ret
ret
outsb
cld
fwait
jbe
mov
sti
adc
jnp
jno
jecxz
es
call
stc
cmp
and
pushf
push
jb
addr16
pop
mov
lahf
cli
or
ljmp
int
and
sub
dec
adc
xor
sbb
sbb
cmp
ficoml
mov
or
cmc
gs
sbb
jo
xorl
out
das
mov
mov
cld
test
lahf
cli
or
push
in
fisttpl
fnsave
movsb
ret
ds
cld
jae
xchg
lods
cmp
sbb
test
pop
test
sbb
push
pushf
xor
addr16
rcrb
pop
mov
das
mov
clc
outsb
or
jg
jnp
mov
mov
stos
into
cmp
jne
insb
add
pop
sahf
or
cmpsb
inc
dec
into
pop
cmp
sub
push
lods
and
inc
or
push
fmuls
fsubrs
call
cmpl
or
sbb
jo
xorl
inc
call
sub
pop
fisttpl
fstpl
xlat
pop
enter
mov
mov
std
insl
hlt
pop
lods
mov
mov
and
ja
fmuls
mov
or
xor
insl
std
test
in
out
jno
pop
push
xor
or
fimuls
add
ljmp
jecxz
jne
push
lret
lret
and
pop
enter
and
imul
dec
int
and
xor
pop
int
addr16
cmp
sub
outsb
jmp
std
test
mov
jle
push
cld
xadd
mov
jge
notl
jmp
xchg
les
mov
in
jg
int
xlat
mov
lea
lods
or
pusha
icebp
popa
add
pop
aas
lods
cmp
ja
xorb
movsb
cmp
sbb
aaa
pushf
mov
sahf
and
pop
xchg
push
pushf
sti
push
aad
enter
sub
lret
add
mov
stos
int3
push
shll
movsb
push
pushf
xchg
adc
pop
xchg
repnz
cmpsl
es
cs
push
aam
sub
and
mov
inc
mov
xor
aas
mov
push
fwait
or
jns
lods
and
push
jle
gs
push
in
stc
cwtl
imul
fs
popf
insb
mov
rcrl
adc
lds
mov
dec
mov
xor
pop
repnz
adc
xchg
add
data16
xchg
outsb
fldl2e
jge
je
and
nop
push
popa
nop
push
jmp
insb
mov
leave
popf
add
std
or
xchg
or
jo
jge
divl
loope
adc
sub
hlt
pop
in
xor
and
cmp
dec
addb
repz
lock
jp
in
cmp
inc
shlb
int3
stos
data16
or
cmc
jge
fs
sbb
jo
xorl
cld
rsqrtps
jb
in
icebp
jle
mov
outsb
popf
pop
sbb
and
stos
cmp
add
jge
je
xor
fisttps
pushf
xor
adc
jb
add
sbb
jge
jne
out
cs
les
int3
cs
cmpsl
push
mov
data16
scas
cmp
mov
mov
and
inc
es
addl
sbb
dec
pop
fisttpll
out
cmp
add
in
notb
inc
into
pop
cmp
jno
je
lea
mov
inc
rolb
shlb
roll
aad
into
push
jb
mov
xchg
out
sub
rolb
shlb
mov
inc
mov
pusha
stc
imul
jg
jmp
scas
pop
mov
xor
int
mov
pop
fbld
in
into
pop
cmp
ds
sub
push
push
lea
mov
dec
mov
adc
cmp
pop
into
test
mov
and
xor
xor
mov
mov
int
adc
sbb
jp
jp
insl
out
adc
sub
ss
mov
mov
arpl
xchg
gs
mov
lcall
ret
in
out
adc
inc
jge
jg
jmp
pop
mov
ret
test
mov
cmc
gs
pop
fwait
add
dec
fidivrs
dec
sub
jp
in
and
enter
lret
mov
mov
aam
shlb
sahf
insl
mov
xor
xchg
pusha
mov
jmp
cmp
jle
outsl
mov
lods
lret
inc
mov
push
mov
andl
pusha
pop
inc
and
sbb
adcl
test
sbb
stos
cmp
add
push
shll
cld
shld
and
fs
lods
rolb
dec
sti
push
mov
js
rcrb
pop
cltd
iret
push
lret
mov
mov
adc
in
sbb
je
js
ljmp
movb
test
ret
push
lds
pop
xchg
add
jge
je
pusha
jg
outsl
or
stc
adc
add
inc
or
push
jns
jge
mov
dec
lret
pop
ds
dec
les
int3
cs
fs
popf
insb
mov
dec
adc
push
push
dec
mov
scas
lret
insb
loopne
adc
and
cmc
mov
xchg
out
sub
rolb
shlb
mov
inc
mov
pusha
stc
imul
jg
jmp
scas
pop
mov
xor
int
mov
pop
fbld
in
into
pop
cmp
ds
sub
push
push
lea
mov
dec
mov
adc
cmp
pop
into
test
mov
and
xor
xor
mov
mov
int
adc
sbb
jp
jp
insl
out
adc
sub
ss
mov
mov
arpl
xchg
gs
mov
lcall
ret
in
out
adc
inc
jge
jg
jmp
pop
mov
ret
test
mov
cmc
gs
pop
fwait
add
dec
fidivrs
dec
sub
jp
in
and
enter
lret
mov
mov
aam
shlb
sahf
insl
mov
xor
xchg
pusha
mov
jmp
cmp
jle
outsl
mov
lods
lret
inc
mov
push
mov
andl
pusha
pop
inc
and
sbb
adcl
test
sbb
stos
cmp
add
push
shll
cld
shld
and
fs
lods
rolb
dec
sti
push
mov
js
rcrb
pop
cltd
iret
push
lret
mov
mov
adc
in
sbb
je
js
ljmp
movb
test
ret
push
lds
pop
xchg
add
jge
je
pusha
jg
outsl
or
stc
adc
add
inc
or
push
jns
jge
mov
dec
lret
pop
ds
dec
les
int3
cs
fs
popf
insb
mov
dec
adc
push
push
dec
mov
scas
lret
insb
loopne
adc
and
cmc
sarl
and
pop
mov
xchg
add
lahf
punpckhdq
mov
hlt
jecxz
in
jle
mov
out
mov
xchg
adc
ljmp
pop
iret
stos
pop
fadds
mov
leave
loope
in
mov
fsubrs
loopne
xchg
add
jns
mov
mov
and
notb
inc
and
and
mov
inc
mov
push
shlb
xor
sbb
sahf
sbb
push
xor
xchg
sbb
jle
mov
jb
dec
push
fmuls
fdivrs
push
xor
js
movsl
xor
aam
sub
sub
adc
jno
jecxz
clc
insl
std
test
enter
shrl
mov
dec
ret
xchg
xchg
adc
add
jg
mov
aad
fnstcw
xor
and
or
lock
xorb
adcb
subb
dec
adc
add
inc
and
and
inc
and
in
jg
mov
ret
inc
iret
pop
cmp
and
movsl
xor
cli
push
into
pop
cmp
and
lcall
sbbb
pop
mov
jg
sub
xchg
sub
mov
or
push
ljmp
out
jg
jmp
cmp
lods
mov
loop
ja
xorb
repz
cmc
adc
push
lds
testl
jmp
cld
fwait
jbe
inc
les
int3
add
aas
aad
and
mov
inc
mov
mov
mov
inc
xchg
gs
adc
sbb
js
ljmp
mov
push
mov
jo
xorl
inc
mov
push
adc
cmp
dec
ret
pause
add
ljmp
jle
call
pop
test
roll
mov
ret
cmpsb
push
cli
push
shlb
adc
and
ja
inc
xlat
mov
lods
mov
rcrl
adc
jge
je
add
inc
daa
rclb
fimull
ficoml
das
lods
and
pop
adc
mov
hlt
jb
xchg
add
adc
push
add
roll
movsb
ficoml
mov
mov
repnz
pop
repnz
mov
int
sub
lds
outsl
loopne
adc
xor
adc
or
mov
adcl
pop
jb
add
xor
cli
insb
loop
je
push
xchg
testb
movsl
adc
cmp
mov
dec
mov
scas
pop
mov
inc
stos
sbb
jmp
xchg
popa
call
rolb
jge
idivl
add
std
or
and
mov
cwtl
decl
out
xlat
push
mov
cld
fwait
jbe
fs
adc
adc
ss
jle
mov
xorl
mov
dec
ret
cmpsl
xchg
sbb
fimull
fimull
imul
sbb
das
inc
int3
inc
and
test
pop
stos
cmp
mull
pushf
outsl
fsubl
mov
dec
mov
fwait
jbe
push
ret
ret
or
push
shll
mov
adcl
push
sbb
and
sub
or
in
xchg
nop
adc
repnz
pop
repnz
and
mov
loopne
adc
push
movb
inc
cwtl
xor
es
mov
cwtl
and
arpl
xchg
gs
jno
push
push
shlb
cmpsl
push
mov
hlt
push
movsl
sub
imul
inc
fidivrl
adc
aaa
ficoms
cmpsb
push
cli
setge
cli
push
les
int3
jge
scas
cmp
mov
scas
cmp
dec
fnstcw
ss
mov
sbb
or
push
shlb
and
aaa
inc
fisttps
fldenv
add
or
out
adc
pop
xchg
push
test
push
not
push
lds
mov
push
xor
sbb
xchg
testb
sub
lods
pop
scas
enter
inc
mov
aam
movsb
xor
and
call
mov
call
jne
and
mov
js
aas
adc
adc
ljmp
aas
pop
test
and
pusha
adc
adc
sub
mov
mov
xchg
pop
mov
filds
dec
scas
mov
enter
out
cli
push
push
cld
jnp
fwait
or
sbb
imul
mov
adc
lea
in
icebp
fstpl
test
cmpsl
mov
out
pop
adcl
pop
int
addr16
jmp
xchg
cmc
jle
mov
pop
ljmp
sub
mov
sbb
mov
scas
lret
jbe
jp
in
pop
xchg
in
sbb
mov
mov
and
cmpsl
or
pop
xchg
repnz
sub
fsubrs
into
pop
cmp
jno
cmpsb
xor
scas
insl
xchg
or
inc
fidivrl
push
xor
std
test
xchg
push
pushf
sti
push
xchg
ficompl
test
lock
bound
sub
mov
vpcmpgtw
pushf
outsl
xchg
adc
lds
iret
cmp
jp
in
add
cmpsl
aaa
push
mov
mov
xchg
orl
adcl
out
mov
mull
icebp
sub
jecxz
cli
push
jp
jp
enter
pop
lock
mov
sub
adc
dec
fwait
or
xor
jo
adc
in
sbb
js
jo
loop
clc
popa
icebp
nop
arpl
repnz
insl
hlt
pop
in
dec
fisttpl
fstpl
sub
lock
xchg
cmpsl
and
daa
movsl
xor
mov
dec
mov
jg
je
cmc
gs
sub
ret
pop
jb
addr16
mov
mov
cmpsl
aaa
push
mov
sub
ds
test
sbb
adc
or
dec
cli
jbe
cmpl
nop
push
popa
nop
aaa
inc
aam
sub
mov
es
aam
fidivrl
fstpt
jmp
xor
push
lret
jmp
js
mov
outsl
sti
imul
cmp
nop
or
leave
pop
cmp
and
mov
dec
fstpl
outsb
or
xor
inc
shlb
and
xor
add
and
ljmp
nop
testl
jnp
gs
fisttpll
out
cmp
pop
cmp
sub
dec
into
inc
mov
out
insb
loop
je
mov
jg
pusha
pop
repnz
cs
push
rclb
imul
cmp
popa
and
mov
gs
cmp
loopne
xlat
inc
shlb
aam
dec
xlat
dec
ret
mov
mov
lret
mov
adc
push
push
pop
jp
adc
dec
fdivrl
int
addr16
aam
lret
mov
pop
leave
test
mov
cmp
push
xlat
inc
and
or
xchg
add
data16
lds
mov
inc
mov
orb
clc
or
mov
aad
lods
cmp
setg
or
imul
shlb
dec
mov
das
fidivl
xchg
or
sub
mov
dec
fdivl
in
fmull
mov
pusha
pop
repnz
and
jb
jle
call
inc
mov
mov
mov
es
push
cwtl
push
imul
insl
std
test
scas
xor
cs
pop
leave
test
mov
sahf
pusha
mov
and
les
pop
and
and
push
cld
adc
jl
jne
ja
push
ret
cmpsb
push
mov
push
mov
dec
sub
sub
push
xor
addr16
outsl
or
shll
call
or
xchg
popa
dec
das
fidivl
mov
gs
and
sbb
scas
pop
jnp
bound
xchg
lock
loopne
test
fldl
mov
lods
cli
push
push
mov
and
xchg
jbe
jg
jmp
and
sbb
cwtl
push
imul
cmp
mov
adc
add
inc
fstpl
stos
pop
xchg
loopne
sti
sahf
insl
xorl
sub
dec
ficomps
scas
pop
mov
icebp
sbb
fisubs
nop
mov
test
cmp
push
cs
int
and
jb
cmc
gs
dec
inc
xlat
inc
and
jbe
push
lahf
push
sbb
add
cmp
lods
out
jg
mov
sbb
insb
ljmp
stc
mov
jne
inc
fisttpll
out
jmp
pushf
outsl
xchg
push
xor
daa
ljmp
out
adc
push
inc
popl
push
xor
daa
lods
sub
lds
pop
fstpt
mov
inc
xchg
rcrl
scas
pop
scas
dec
roll
aad
fcoml
mov
lcall
jno
jecxz
mov
shlb
mov
sbb
xor
sub
popa
in
bound
aad
dec
sti
mov
pushf
enter
pop
jmp
sbb
rolb
dec
std
imul
sub
jo
les
int3
imul
cs
xchg
or
in
sbb
jae
arpl
cmc
je
mov
dec
iret
pop
cmp
push
scas
xor
jp
jp
das
scas
cmp
mov
adc
movsb
ret
ds
js
cmp
push
stc
jno
xorb
fstpt
lods
sub
and
xor
lock
and
adc
sti
imul
pop
mov
adcb
xor
imul
cmp
mov
repnz
sbb
es
cs
aas
stos
cmp
or
in
das
pop
rcll
and
xor
dec
mov
mov
lret
pop
ds
test
mov
sbb
out
daa
xor
push
frstor
xchg
mov
xchg
cmc
add
call
mov
mov
inc
mov
je
add
add
lock
pop
aas
lret
cmp
lds
iret
sub
jnp
mov
idivl
mov
sbb
add
mov
fwait
setg
or
add
sub
xchg
pop
lret
scas
pop
ljmp
sbb
mov
mov
das
mov
hlt
sbbb
call
insl
hlt
pop
out
scas
xor
mov
xchg
adc
fs
xchg
jb
inc
push
add
outsl
lcall
movsb
ret
fistpl
cwtl
push
imul
ret
push
lds
push
xlat
inc
and
aaa
mov
fcmovnbe
pop
int3
stos
data16
push
mov
shll
cs
mov
xorb
cli
push
enter
outsl
jno
jno
jecxz
je
jne
out
inc
mov
cltd
dec
fmuls
fdivs
cld
xchg
cmc
add
jb
jnp
in
inc
iret
pop
leave
test
out
jnp
jl
notb
sub
adcl
adcb
subb
dec
sub
xor
push
ja
jle
call
repnz
fstps
scas
pop
mov
sub
aas
scas
lret
sub
inc
lds
iret
sbb
je
out
sbb
inc
aad
dec
movsl
xchg
sbb
and
sub
mov
int
shll
leave
test
lea
mov
sbb
xlat
dec
fstpt
pop
cmp
jle
pop
xchg
adc
mov
or
sub
movsl
sbbl
pop
lret
lret
cmp
roll
shll
add
ja
xorb
push
mov
loopne
jb
adc
sub
cwtl
sbb
and
mov
rcrb
scas
pop
mov
and
and
hlt
sbb
movsl
xor
dec
fdivrl
mov
das
leave
adc
xor
push
inc
roll
aad
fsts
mov
sub
movb
and
mov
sub
mov
adcb
out
mov
movsl
or
mov
jne
jmp
in
je
xor
mov
fmuls
fcomps
jno
js
ljmp
jae
outsb
cld
fwait
jbe
push
jns
inc
aad
dec
lret
push
xor
push
in
hlt
xchg
outsb
xchg
jbe
loopne
mov
stos
into
cmp
testb
rcrl
roll
shll
test
add
cmp
inc
aad
dec
test
cld
ud2
mov
jle
sub
pop
lret
scas
pop
popl
aad
jno
xorb
out
jl
testb
je
out
inc
loop
loopne
jb
lock
outsb
clc
outsb
or
dec
ficoml
cmpsb
push
cli
es
inc
mov
mulb
nop
arpl
cltd
add
jg
mov
sub
xchg
adc
and
pop
push
xor
dec
jno
popa
add
cmp
inc
shlb
insb
or
out
mov
cmpsb
cmp
fistpl
fs
pop
leave
test
lods
les
mov
cmpsl
sub
pop
test
call
test
fisubl
xchg
xchg
lahf
cli
or
addr16
ficoms
mov
push
xor
js
pop
into
test
imul
cmc
pushf
outsl
les
imul
ss
mov
inc
mov
jne
jbe
loopne
je
jl
divb
shll
rorb
mov
inc
and
ss
pop
xchg
repnz
push
mov
test
jge
inc
pusha
loope
adc
or
jae
in
sub
mov
rorb
pop
or
in
sbb
inc
daa
shlb
and
mov
xchg
icebp
add
mov
iret
xchg
sbb
aad
add
fistpll
push
xor
add
push
mov
add
inc
add
aaa
jb
jo
loop
lret
pop
enter
sahf
or
sbb
das
mov
and
dec
inc
and
sbb
bound
scas
inc
popf
add
std
or
pop
xchg
jb
or
xor
es
repz
loopne
notb
pop
cmp
xor
cmpsb
xor
scas
push
dec
into
pop
cmp
add
push
lahf
push
dec
lret
lret
mov
adc
xchg
mov
xchg
icebp
add
pop
rolb
shlb
dec
fnstcw
int
cmpsl
test
mov
jb
xchg
add
add
dec
fistpll
mov
dec
fnstcw
and
sbb
dec
fstpt
sbb
sub
insb
loop
je
das
mov
dec
mov
loop
cmc
dec
rolb
sarb
pop
lds
iret
dec
aam
fnstcw
inc
and
sbb
outsl
lcall
sub
push
clc
jg
mov
out
notb
pop
jp
inc
lods
sub
in
bound
jg
jmp
jge
outsb
and
push
mov
scas
leave
cmp
xor
sub
sbb
push
xchg
insb
or
les
mov
gs
xor
inc
fidivrl
shlb
or
cmpsb
pop
or
setg
push
push
adcb
in
sbb
pop
cmp
inc
fistpl
scas
cmp
das
mov
pop
pop
xchg
adc
inc
les
mulb
jbe
loopne
frstor
xchg
mov
mov
outsb
call
or
stos
sub
mov
ret
fistps
scas
pop
test
pop
enter
pop
fisttpl
fnstsw
rorl
dec
mov
aad
sbb
idivl
mov
adc
push
lahf
push
fmull
movsb
push
cld
nop
add
daa
mov
and
mov
mov
sahf
sbb
and
notl
push
pushf
xor
sete
insl
pushf
jle
ljmp
and
pop
push
lret
lret
sbb
std
jge
je
dec
cs
inc
mov
push
fisttpl
fnsave
lcall
push
mov
xchg
adc
mov
iret
or
in
cld
fwait
jbe
and
lahf
adc
ficoml
mov
mov
or
xchg
mov
loopne
jb
data16
push
cld
dec
mull
icebp
push
insb
cld
xchg
cmc
add
pop
int3
inc
and
sub
or
pop
lret
scas
pop
repnz
xchg
adc
adc
pop
push
xor
or
pop
rcrb
pop
mov
mov
inc
mov
pop
lahf
punpckhdq
jne
add
mov
inc
mov
add
data16
imul
mov
cltd
or
addr16
movsl
int3
aas
ljmp
xchg
xchg
lock
orl
int3
inc
aad
dec
scas
dec
les
int3
sub
ljmp
scas
and
mov
jle
dec
mov
cmpsb
xor
int
mov
aaa
dec
fmuls
fsubrs
pop
lret
scas
pop
repnz
pop
enter
pop
xchg
add
es
pusha
notb
mov
push
pushf
sti
push
hlt
jo
jle
call
mov
xchg
repnz
dec
rcrb
out
movsb
and
les
dec
movsb
fwait
sbb
sub
lds
cmp
sub
outsb
out
icebp
nop
arpl
imul
sti
push
hlt
dec
les
int3
sub
jg
mov
push
dec
repz
jne
push
outsl
loope
adc
and
mov
cmpsb
adc
mov
push
in
leave
pop
cmp
pusha
pop
iret
pop
cmp
inc
rolb
sarb
dec
fdivrs
movsl
int3
aas
lcall
push
int3
inc
and
hlt
xchg
outsb
test
jl
negb
xor
cmp
sub
in
insb
add
es
cmp
inc
adc
lods
sub
lds
jae
imul
add
mov
cmp
cmp
notl
lahf
sbb
inc
shlb
mov
mov
pop
aad
sub
jp
cli
push
insl
std
test
outsl
loop
pop
loop
cs
cld
insl
std
test
sub
test
xchg
movsl
xor
fisttpl
fnsave
jno
xorb
insl
std
test
push
into
pop
cmp
adc
test
mov
mov
and
mov
test
jp
daa
stos
cmp
bound
cmp
lea
in
icebp
movsl
and
and
sub
in
sbb
cmc
pushf
outsl
sahf
mov
shrl
cmpsl
aaa
push
mov
xor
fidivrl
or
dec
adc
or
lcall
dec
fdivrs
pop
cmp
addr16
in
jg
pushf
or
adc
in
sbb
fmull
mov
sbb
sub
je
lea
xor
sbb
pop
xchg
repnz
loopne
in
mov
push
in
insb
push
xlat
inc
and
push
divl
jl
push
mov
xchg
jle
mov
adc
enter
pop
jo
push
cld
or
mov
jle
arpl
inc
xlat
mov
mov
mov
cmp
pop
mov
fisubl
jge
notl
inc
mov
xchg
sbb
push
popa
nop
push
test
mov
sbb
xchg
and
jp
in
inc
icebp
notl
cs
data16
inc
jecxz
ljmp
inc
mov
mov
lea
ret
xor
inc
in
adc
imul
jmp
adc
jae
xchg
and
inc
pop
fimull
fidivl
sub
and
push
xchg
xchg
icebp
add
jb
imul
sub
add
and
cmp
ljmp
and
push
dec
lret
pop
ds
out
notl
fistl
pop
mov
jb
in
fwait
push
test
push
mov
cmp
arpl
add
pop
xchg
add
jnp
js
ljmp
xchg
rorb
mov
mov
sbb
mov
fstpl
popa
cli
push
mov
jge
jp
in
add
cmp
dec
fnstcw
and
jp
jp
iret
dec
frstor
adc
add
popf
or
out
jg
jmp
inc
mov
dec
roll
aad
push
fimuls
adc
xchg
out
testl
pop
inc
and
jns
mull
icebp
sub
shlb
mov
int3
pop
int3
stos
data16
jg
mov
lret
scas
pop
jmp
xchg
jb
es
loopne
jb
lds
cmpsl
push
sti
jo
jp
in
pop
jns
bound
mov
jl
jne
data16
cmp
inc
xchg
adc
out
adc
imul
mov
xchg
mov
inc
mov
push
roll
sarl
movsl
and
mov
mov
sub
js
jl
icebp
popa
add
sbb
mov
dec
fdivrs
test
pop
stc
dec
push
xor
cmp
mov
dec
mov
jmp
insb
or
mov
insb
push
lahf
push
ret
cmpsl
push
jecxz
rcll
push
and
gs
stos
int
mov
jnp
in
dec
cli
pusha
notb
das
dec
mov
cld
movntq
hlt
fisttpl
mov
fs
jns
loopne
adc
sub
ror
ret
mov
arpl
movsl
push
aad
sub
or
push
lahf
push
jp
insl
hlt
pop
in
mov
xchg
repz
std
add
lds
cmpsb
push
mov
push
push
nop
push
popa
nop
aaa
adc
xchg
sbb
xor
int
fwait
jns
jns
jmp
cmp
popf
adc
and
int3
and
jbe
shrb
leave
cmp
loopne
rcll
pop
in
cld
imul
roll
shll
fisttps
flds
fs
popf
insb
scas
in
in
mov
cli
or
sbbb
ljmp
and
mov
scas
cmp
mov
in
hlt
xchg
outsb
xchg
in
jnp
mov
mov
cmp
sub
outsb
pop
jecxz
push
in
sbb
dec
rcll
xor
jo
xorl
jl
pop
roll
shll
sti
jnp
mov
add
adc
push
imul
and
dec
frstor
pushf
outsl
fcoml
movsb
int3
pop
enter
sti
imul
push
push
push
xor
jns
adc
cli
push
add
xor
ja
xorb
ja
ds
dec
les
xor
icebp
loopne
out
outsb
negl
in
push
fisttpl
fnstsw
divb
xorl
in
push
aad
sub
sub
jo
xorl
cmpl
mov
xchg
icebp
add
insb
jmp
push
in
sbb
outsb
cld
fwait
jbe
pusha
in
jge
mull
mov
icebp
lds
mov
pop
aas
lret
xchg
add
cmp
imul
insl
ficoml
sbb
and
sahf
or
cmpsb
pop
cmp
in
jg
mov
test
jecxz
fisttpll
out
arpl
outsb
or
sbb
movsl
xor
roll
sarl
scas
aaa
cmpsl
ret
nop
or
in
outsb
cld
fwait
jbe
cmp
jg
insl
hlt
pop
in
fstps
test
pop
ds
cmpsb
daa
mov
and
adc
out
icebp
nop
arpl
jle
mov
inc
mov
pop
aad
xchg
dec
lods
into
xchg
dec
lock
dec
adc
enter
cmp
rorb
jnp
mov
add
mov
jmp
xor
jb
fcmove
insl
lret
enter
aas
lret
lods
and
sbb
push
loop
and
rep
lcall
repnz
xchg
test
pop
test
pushf
or
and
jns
mov
jo
pusha
pop
repnz
mov
inc
mov
fs
sbb
pushf
sti
push
repz
lret
lret
mov
xlat
push
shll
xchg
jle
push
cld
pavgb
cwtl
imul
setbe
push
jecxz
push
in
xchg
push
mov
es
leave
pop
cmp
or
push
xor
fmuls
mov
xchg
adc
pushf
sub
pushf
xor
ficoml
cmpsb
push
cli
sbb
rcll
mov
mov
jbe
popa
inc
mov
aas
pop
rclb
daa
push
jge
jo
pop
jno
and
and
mov
inc
mov
mov
lret
add
sbb
pop
cmp
xor
dec
fdivrs
js
ljmp
les
mov
jg
bound
jbe
loopne
insl
out
adc
or
sbb
aad
rcl
repz
gs
dec
rcll
data16
xchg
gs
stos
cmp
push
sbb
dec
jecxz
push
in
jmp
shrl
js
jg
jmp
sub
insb
in
jp
jp
dec
fmuls
fsubrs
test
insb
or
notb
shll
mov
rolb
rclb
into
pop
cmp
push
incl
mov
movsb
ret
ds
sbb
dec
insl
in
bound
push
lds
sbb
int
sbb
adc
fsubrl
ja
test
aad
es
sbb
adc
imul
sbb
mov
jo
add
fnstcw
fimuls
and
sbb
aad
subl
push
push
ljmp
ljmp
aad
dec
cld
inc
xlat
inc
and
jbe
sub
popa
icebp
nop
arpl
out
adc
inc
out
adc
popa
cli
lock
bound
inc
stos
adc
sbb
pop
fimull
ficoml
call
adcl
mov
lret
cmpsl
ret
or
loopew
adc
adc
cmc
gs
adc
in
insl
out
adc
or
stc
imul
push
cld
cmpxchg
lods
lret
inc
loope
ljmp
jo
loop
ds
inc
mov
nop
add
pop
xchg
repnz
add
sbb
inc
aad
pop
push
sub
orl
es
mov
in
jg
leave
pop
iret
insl
insl
xorb
out
mov
and
into
mov
ljmp
pop
lock
cli
loopne
push
lcall
pop
cmp
add
add
jg
fisttpl
xor
sbb
push
adc
dec
sub
xor
scas
dec
fists
mov
cltd
push
cltd
push
arpl
cmp
pop
jp
and
adc
dec
data16
dec
es
dec
mov
es
mov
aad
fisttpl
movsb
push
loop
fwait
or
cmp
cmpsb
xor
scas
insl
jmp
nop
mov
jb
jns
jmp
std
popa
icebp
nop
arpl
std
lock
in
daa
mov
and
fwait
sub
scas
xor
cmp
sti
test
loopnew
sbb
ljmp
lea
mov
and
cmp
pandn
mov
mov
mov
sbb
lahf
aaa
xchg
bound
arpl
cmc
daa
push
lcall
jne
out
dec
test
cld
insl
std
test
mov
mov
es
add
or
xor
adcb
xorb
fisttpll
out
jae
jne
out
pop
cmpsl
xor
pop
mov
leave
xchg
push
pushf
sti
push
cld
outsb
cmc
gs
adc
in
fistpl
mov
inc
mov
xchg
adc
in
sbb
nop
adc
rcll
and
cmp
fs
adc
ss
lcall
cs
mov
add
stos
int
fisubrs
mov
dec
les
int3
aas
sbb
ss
scas
lret
out
add
jg
repnz
cmp
aam
hlt
aas
filds
xchg
xor
shrl
add
xor
les
xchg
pop
cmp
cmp
aas
sub
xchg
mov
mov
and
loope
push
iret
pop
cmp
xor
mov
adc
cmpsb
xor
scas
sub
dec
int3
inc
and
loopne
jb
lret
dec
fnstcw
mov
adc
in
sbb
inc
ret
ret
sub
jno
xorb
add
sub
lds
or
and
inc
adc
and
ficoml
mov
add
xor
repnz
dec
fstpt
fistpll
add
sahf
aaa
cmp
and
xchg
and
shll
jle
dec
mov
mov
rclb
mov
inc
lahf
jmp
xchg
jnp
faddl
loope
in
jne
pop
xchg
add
aaa
hlt
jne
mov
mov
stos
int
aam
pop
lret
scas
pop
mov
xor
adc
repz
mov
insb
out
jg
jmp
cmp
cmp
std
repz
mov
xor
xchg
sahf
stc
or
mov
stos
cmp
imul
push
test
test
push
test
das
mov
roll
aad
push
lds
adc
push
add
ret
push
lds
pop
lods
or
dec
mov
ret
add
jns
stos
cmp
inc
sub
faddl
mov
out
jae
xchg
adc
add
test
inc
shll
notb
stos
int
jmp
je
lea
xor
jnp
mov
xlat
push
adc
xchg
sub
stos
out
xor
clc
insb
add
test
cmp
sub
add
std
or
je
jne
out
inc
lret
scas
pop
jmp
jle
mov
jle
cmp
popf
ret
mov
xlat
mov
call
dec
mov
loopne
add
and
push
shlb
int3
aas
mov
popf
push
push
jg
jmp
cmpl
adcl
test
fdivl
in
jne
pusha
pop
repnz
sbb
xor
xchg
pop
popa
ljmp
cli
popf
insb
mov
push
lahf
push
in
popa
icebp
nop
arpl
movsb
sub
scas
cmp
mov
dec
rcll
adcw
loop
test
sbb
add
lea
cmp
cmp
sbb
js
ds
sbb
testb
adc
loop
mov
shrl
je
mov
imul
cli
dec
cs
mov
pop
xchg
outsl
aam
lds
jbe
test
adcb
subb
push
lds
mov
out
notl
sbb
jle
icebp
popa
add
sbb
shl
jns
mov
mov
into
sub
add
sbb
sub
or
ljmp
insl
std
test
imul
sbb
aaa
movsl
xor
cltd
or
xor
jne
out
pop
sub
adc
mov
xchg
and
dec
fnstsw
pop
jp
push
jp
ja
loope
imul
add
sbb
fadds
mov
xchg
adc
in
inc
xlat
mov
cmpsl
sahf
push
mov
es
mov
cmpsl
ret
clc
jle
repz
test
sahf
iret
iret
call
jnp
or
loope
sub
sbb
xor
dec
and
leave
push
pushf
adc
popf
sub
sub
push
cltd
push
pop
loopne
add
or
inc
shlb
notl
out
jno
popf
or
in
mov
dec
stc
mov
mov
and
or
dec
or
adc
push
sub
std
imul
insl
adcl
ss
inc
fidivrl
pop
bound
out
sti
popa
out
adc
pop
mov
fbstp
mov
ja
add
daa
or
test
sub
xor
popa
out
jg
jmp
jbe
jo
dec
fistpll
out
mov
mov
dec
lds
iret
push
mov
js
aas
lahf
inc
mov
clc
fnstsw
fdivp
xchg
add
inc
repz
cmp
inc
fbstp
inc
mov
gs
popw
push
pushf
or
xchg
pop
bound
mov
pushf
outsl
vpmadcsswd
fiaddl
push
in
push
mov
jns
movsb
cmp
sub
gs
pushf
outsl
movsb
and
lock
xorl
cltd
inc
inc
lret
pop
ds
jle
outsl
or
shrb
ret
cli
popf
insb
test
ret
push
lds
into
dec
fstpt
jns
jmp
or
cmp
push
fisttpll
out
jae
insl
hlt
pop
mov
fwait
decb
jmp
insb
or
scas
fs
push
cld
dec
lret
test
lock
sbb
fwait
or
jbe
jno
jecxz
jne
jge
divl
inc
fisttpll
out
pop
ret
ret
xor
push
xchg
repz
mov
shll
pop
fisttpl
fnstsw
mov
and
int
test
scas
leave
cmp
loopne
rcll
pop
in
cld
imul
roll
shll
fisttps
flds
fs
popf
insb
scas
in
in
mov
cli
or
sbbb
ljmp
and
mov
scas
cmp
mov
in
hlt
xchg
outsb
xchg
in
jnp
mov
mov
cmp
sub
outsb
pop
jecxz
push
in
sbb
dec
rcll
xor
jo
xorl
jl
pop
roll
shll
sti
jnp
mov
add
adc
push
imul
and
dec
frstor
pushf
outsl
fcoml
movsb
int3
pop
enter
sti
imul
push
push
push
xor
jns
adc
cli
push
add
xor
ja
xorb
adc
dec
frstor
ds
idivb
mov
jl
xchg
cmc
add
push
fisttpl
fnstsw
divb
xorl
in
push
aad
sub
sub
jo
xorl
cmpl
mov
xchg
icebp
add
insb
jmp
push
in
sbb
outsb
cld
fwait
jbe
pusha
in
jge
mull
mov
icebp
lds
mov
pop
aas
lret
xchg
add
cmp
imul
insl
ficoml
sbb
and
sahf
or
cmpsb
pop
cmp
in
jg
mov
test
jecxz
fisttpll
out
arpl
outsb
or
sbb
movsl
xor
roll
sarl
scas
aaa
cmpsl
ret
nop
or
in
outsb
cld
fwait
jbe
cmp
jg
insl
hlt
pop
in
fstps
test
pop
ds
cmpsb
daa
mov
and
adc
out
icebp
nop
arpl
jle
mov
inc
mov
pop
aad
sub
cmp
fisubs
jl
notb
mov
push
fmuls
fcomps
outsl
loop
pop
loop
xor
test
test
push
mov
or
cmc
gs
push
pop
lret
lret
lods
and
sbb
push
loop
and
rep
lcall
repnz
xchg
test
pop
test
pushf
or
and
jns
mov
jo
pusha
pop
repnz
mov
inc
mov
fs
sbb
pushf
sti
push
repz
lret
lret
mov
xlat
push
shll
xchg
jle
push
cld
pavgb
cwtl
imul
setbe
push
jecxz
push
in
xchg
push
mov
es
leave
pop
cmp
or
push
xor
fmuls
mov
xchg
adc
pushf
sub
pushf
xor
ficoml
cmpsb
push
cli
sbb
jge
jle
call
lock
inc
fimull
fidivrl
push
pusha
pop
repnz
ljmp
mov
cmpsl
xor
mov
lret
add
sbb
pop
cmp
xor
dec
fdivrs
js
ljmp
les
mov
jg
bound
jbe
loopne
insl
out
adc
or
sbb
aad
rcl
repz
gs
dec
rcll
data16
xchg
gs
stos
cmp
push
sbb
dec
jecxz
push
in
jmp
shrl
js
jg
jmp
sub
insb
in
jp
jp
dec
fmuls
fsubrs
test
insb
or
notb
shll
mov
rolb
rclb
into
pop
cmp
push
incl
mov
movsb
ret
ds
sbb
dec
insl
in
bound
push
lds
les
ficomps
scas
pop
scas
jle
imul
shlb
aaa
push
mov
xor
sub
test
pop
test
sbb
and
cmp
jge
fimuls
and
sbb
aad
subl
push
push
ljmp
ljmp
aad
dec
cld
inc
xlat
inc
and
jbe
sub
popa
icebp
nop
arpl
out
adc
inc
out
adc
popa
cli
lock
bound
inc
stos
adc
sbb
pop
fimull
ficoml
call
adcl
mov
lret
cmpsl
ret
or
loopew
adc
adc
cmc
gs
adc
in
insl
out
adc
or
stc
imul
push
cld
cmpxchg
lods
lret
inc
loope
ljmp
jo
loop
ds
inc
mov
nop
add
pop
xchg
repnz
lcall
sbb
dec
sub
imul
adc
pop
movsl
xor
push
lds
or
sbb
push
mov
mov
add
stos
cmp
sub
jnp
aad
les
pop
cmp
add
add
jg
fisttpl
xor
sbb
push
adc
dec
sub
xor
scas
dec
fists
mov
cltd
push
cltd
push
arpl
cmp
pop
jp
and
adc
dec
data16
dec
es
dec
mov
es
mov
aad
fisttpl
movsb
push
loop
fwait
or
cmp
cmpsb
xor
scas
insl
jmp
nop
mov
jb
jns
jmp
std
popa
icebp
nop
arpl
std
lock
in
daa
mov
and
inc
les
int3
and
test
jge
fs
outsb
or
sbb
jle
cmp
insl
ret
inc
aad
dec
mov
inc
scas
in
cld
fwait
jbe
inc
int3
inc
and
mov
movsb
inc
iret
pop
cmp
and
jno
xorb
repz
cmc
daa
push
lcall
jne
out
dec
test
cld
insl
std
test
mov
mov
es
add
or
xor
adcb
xorb
fisttpll
out
jae
jne
out
pop
cmpsl
xor
pop
mov
leave
xchg
push
pushf
sti
push
cld
outsb
cmc
gs
adc
in
fistpl
mov
inc
mov
xchg
adc
in
sbb
nop
adc
rcll
and
cmp
fs
adc
ss
lcall
cs
mov
add
stos
int
fisubrs
mov
dec
les
int3
aas
sbb
ss
scas
lret
orb
sti
push
aam
pop
int
addr16
pop
jp
and
push
shlb
cld
bsf
movsb
pop
roll
dec
in
jb
xchg
mov
mov
and
loope
push
iret
pop
cmp
xor
mov
adc
cmpsb
xor
scas
sub
dec
int3
inc
and
loopne
jb
lret
dec
fnstcw
mov
adc
in
sbb
inc
ret
ret
sub
jno
xorb
add
sub
lds
or
and
inc
adc
and
ficoml
mov
add
xor
repnz
dec
fstpt
fistpll
add
sahf
aaa
cmp
and
xchg
and
shll
jle
dec
mov
mov
rolb
sarb
inc
js
je
out
imul
add
add
aaa
hlt
jne
mov
mov
stos
int
aam
pop
lret
scas
pop
mov
xor
adc
repz
mov
insb
out
jg
jmp
cmp
cmp
std
repz
mov
xor
xchg
sahf
stc
or
mov
stos
cmp
imul
push
test
test
push
test
das
mov
roll
aad
push
lds
adc
push
add
ret
push
lds
pop
lods
or
dec
mov
ret
add
jns
stos
cmp
inc
sub
faddl
mov
out
jae
xchg
adc
add
test
inc
shll
notb
stos
int
jmp
je
lea
xor
jnp
mov
loop
lcall
and
push
cmpsb
sub
dec
push
xor
imul
xchg
push
cmp
xchg
add
std
or
je
jne
out
inc
lret
scas
pop
jmp
jle
mov
jle
cmp
popf
ret
mov
xlat
mov
call
dec
mov
loopne
add
and
push
shlb
int3
aas
mov
popf
push
push
jg
jmp
cmpl
adcl
test
fdivl
in
jne
pusha
pop
repnz
sbb
xor
xchg
pop
popa
ljmp
cli
popf
insb
mov
push
lahf
push
in
popa
icebp
nop
arpl
movsb
sub
scas
cmp
mov
dec
rcll
adcw
loop
test
sbb
add
lea
cmp
cmp
sbb
js
ljmp
sub
out
mov
xor
cmp
mov
out
adc
popa
pop
push
xor
and
call
fwait
or
mov
inc
mov
adc
add
add
cmp
push
lds
mov
out
notl
sbb
jle
icebp
popa
add
sbb
shl
jns
mov
mov
into
sub
add
sbb
sub
or
ljmp
insl
std
test
imul
sbb
aaa
movsl
xor
cltd
or
xor
jne
out
pop
sub
adc
mov
xchg
and
dec
fnstsw
pop
jp
push
jp
ja
loope
imul
add
sbb
fadds
mov
xchg
adc
in
inc
xlat
mov
cmpsl
sahf
push
mov
es
mov
cmpsl
ret
clc
jle
mov
pop
scas
jp
setg
or
in
push
orl
and
iret
inc
aad
dec
test
xor
and
cmp
or
dec
pushf
test
jmp
jge
rolb
mov
hlt
repnz
loope
out
jno
popf
or
in
mov
dec
stc
mov
mov
and
or
dec
or
adc
push
sub
std
imul
insl
adcl
ss
inc
fidivrl
pop
bound
out
sti
popa
out
adc
pop
mov
fbstp
mov
ja
add
daa
or
test
sub
xor
popa
out
jg
jmp
jbe
jo
dec
fistpll
out
mov
mov
dec
lds
iret
push
mov
js
aas
dec
fmuls
fdivs
adcl
jno
xorb
loope
adc
push
mulw
icebp
push
pushf
or
xchg
pop
bound
mov
pushf
outsl
vpmadcsswd
fiaddl
push
in
push
mov
jns
movsb
cmp
sub
gs
pushf
outsl
movsb
and
lock
xorl
cltd
inc
inc
lret
pop
ds
jle
outsl
or
shrb
ret
cli
popf
insb
test
ret
push
lds
into
dec
fstpt
jns
jmp
or
cmp
push
fisttpll
out
jae
insl
hlt
pop
mov
fwait
decb
jmp
insb
or
scas
fs
push
cld
dec
lret
test
lock
sbb
fwait
or
jbe
jno
jecxz
jne
jge
divl
inc
fisttpll
out
pop
ret
ret
xor
push
xchg
repz
mov
shll
ret
out
cmp
mov
add
insl
hlt
pop
mov
ret
in
int3
ret
add
imulb
test
out
ja
xorb
push
xor
dec
pop
fimuls
das
imul
in
jae
xchg
dec
mov
test
push
add
add
push
adc
pop
and
sub
pop
int
addr16
mov
ljmp
es
fnstsw
push
cld
push
ret
mov
jge
testl
pusha
mov
sahf
sti
jne
mov
int3
inc
xlat
mov
call
or
push
push
arpl
popa
add
inc
lods
cmp
ja
xorb
movsb
cmp
add
aaa
cmpb
sub
xchg
push
pushf
sti
push
hlt
push
enter
and
leave
add
push
mov
stos
rcll
mov
frstor
loope
clc
addb
repnz
mov
rclb
dec
sub
and
mov
inc
mov
cmp
and
mov
dec
mov
outsb
popf
jg
lods
and
inc
jns
gs
pop
in
stc
cwtl
imul
scas
pop
xlat
inc
and
js
adc
xor
dec
add
mov
inc
add
jmp
mov
fwait
lds
scas
pop
ljmp
add
icebp
data16
xchg
outsb
jmp
in
je
xor
aaa
fs
popf
insb
scas
xchg
mov
and
std
or
xchg
or
jno
jge
divl
loope
adc
data16
insl
hlt
pop
int3
xor
and
inc
xchg
xchg
repz
jmp
in
sbb
shlb
int3
stos
xchg
jnp
insb
or
out
jl
fs
or
jo
jl
push
cld
sbb
jb
in
lock
mov
outsb
popf
dec
sbb
nop
and
stos
cmp
sbb
jge
je
sub
fisttps
fsts
pushf
xor
or
jb
add
sbb
jb
jne
out
dec
pop
les
int3
bswap
push
shlb
stos
data16
scas
cmp
mov
lea
and
inc
es
addb
testl
push
movsl
dec
pop
fisttpll
out
aas
mov
add
out
notb
inc
and
and
insb
push
popa
out
insb
and
sub
mov
mov
jmp
imul
sbb
push
add
sbb
xchg
gs
lds
iret
das
xor
daa
sahf
adc
aas
mov
inc
mov
and
cmp
jge
dec
fstpt
mov
and
hlt
inc
mov
mov
test
jge
cmp
subl
mov
inc
mov
in
loope
jae
mov
subl
les
dec
rolb
shlb
xor
pop
stc
imul
jg
jmp
scas
pop
fnsave
cmc
fistpl
test
mov
das
lds
pop
cmp
xor
mov
dec
mov
fs
inc
xor
fs
adc
pop
rcrb
test
mov
and
xor
and
mov
movsl
sub
adc
sbb
jp
jp
jae
ja
loope
mov
lahf
mov
mov
arpl
xchg
gs
mov
lcall
ret
jecxz
out
adc
dec
jae
jg
jmp
pop
mov
rcrb
pop
mov
xor
cmc
gs
jp
add
dec
fidivrs
dec
sub
jp
in
add
enter
sub
pop
mov
les
push
shlb
sahf
insl
andl
jmp
notb
mov
sbb
mov
enter
jle
sub
lods
lret
inc
xchg
xchg
push
mov
es
lods
and
adc
and
push
test
mov
mov
sbb
stos
add
push
shll
cld
shld
and
bound
insl
hlt
pop
mov
dec
adc
ret
scas
pop
mov
push
lret
mov
mov
jns
jnp
fwait
push
insb
and
jmp
movb
test
ret
push
lds
pop
xchg
add
jge
je
pusha
jg
outsl
or
stc
adc
add
inc
or
push
jns
jge
mov
dec
lret
pop
ds
dec
les
int3
cs
fs
popf
insb
mov
dec
adc
push
push
dec
mov
scas
lret
insb
loopne
adc
and
mov
jae
mov
mov
das
test
mov
inc
mov
scas
lods
lret
inc
out
loope
in
jg
push
xchg
testb
mov
inc
fisttpl
fnstsw
mov
and
pop
lret
pop
ds
mov
sarb
jbe
loopne
leave
push
lds
cwtl
imul
roll
rcrl
pop
fisttps
in
cli
popf
insb
test
jle
mov
cli
or
sahf
pop
cltd
and
cs
scas
cmp
mov
in
data16
xchg
outsb
mov
jmp
jge
orl
mov
push
in
adc
push
rcll
ja
jo
xorl
jl
inc
roll
sarl
jnp
mov
sbb
or
push
imul
and
dec
frstor
pushf
outsl
xchg
in
pop
enter
push
imul
jl
push
xor
pop
xchg
adc
cli
push
add
xor
ja
xorb
adc
dec
frstor
ds
jnp
mov
je
xchg
cmc
add
pop
fisttpl
jo
xorl
in
pop
aad
sub
pop
std
jo
xorl
cmpl
dec
jecxz
add
jmp
push
in
inc
clc
outsb
cld
fwait
jbe
js
jge
negl
mov
dec
fidivrs
pop
aas
lret
xchg
add
jno
imul
insl
sbbl
add
xor
sti
jg
mov
mov
lods
pop
fisttpll
out
jns
outsb
or
sbb
scas
push
push
roll
roll
mov
cmpsl
ret
mov
in
cld
fwait
jbe
xor
ja
insl
hlt
pop
loope
pop
into
test
pop
ds
scas
daa
mov
and
sbb
out
popa
icebp
nop
arpl
adc
cmp
mov
inc
mov
inc
aad
sub
insb
mov
mov
das
test
jl
testb
xor
or
sub
outsl
ja
jo
loop
and
xchg
add
jae
cmp
lods
cmp
mov
xlat
dec
fidivrs
xor
imul
lcall
in
jge
notl
push
rolb
shrb
loop
sti
sahf
insl
mov
mov
jae
xchg
lea
insb
in
sbb
jbe
repnz
shrl
push
xchg
pop
bound
jecxz
fsubrl
mov
insl
std
test
pop
xchg
or
xor
sarl
cmpsb
shll
mov
and
and
sbb
arpl
xchg
gs
fstpt
or
or
pop
xchg
repnz
sbbb
call
xchg
repnz
xor
lahf
push
adc
rcll
mov
repnz
cmpl
pusha
in
sbb
cmp
sarb
outsb
or
adc
adc
mov
pusha
notb
pop
jb
imul
icebp
nop
arpl
mov
sbb
cmp
lret
push
dec
mov
aad
xchg
imul
mov
mov
sbb
sbb
lods
sbb
ljmp
rolb
mov
imul
cmp
std
int3
push
lret
mov
lods
lret
inc
scas
mov
mov
outsb
cld
fwait
jbe
sub
cmp
mov
xlat
push
lret
mov
enter
and
jmp
rclb
xor
jge
outsl
or
repnz
xchg
in
out
roll
shll
jg
gs
sbb
int3
and
cmp
or
sub
cmp
lret
lret
mov
into
arpl
xchg
gs
push
sahf
or
cmpsb
lgdtl
ljmp
cltd
push
nop
arpl
lcall
xchg
jb
dec
mov
shlb
or
adc
dec
ret
mov
out
pusha
std
insl
hlt
pop
andb
adc
sub
push
shll
sub
push
cmpsl
es
cs
rolb
dec
mov
out
jg
jmp
in
sbb
and
dec
push
test
jge
jg
aaa
cmpsl
ret
fcoms
mov
addr16
or
push
xor
push
sub
adc
gs
lret
pop
ds
in
jle
mov
push
mov
bound
std
or
push
mov
jns
cmp
pop
enter
pushf
or
adc
pop
lret
scas
pop
cwtl
std
data16
xchg
outsb
mov
inc
es
rorb
mov
ret
rorl
inc
and
pop
inc
les
int3
add
fidivl
adc
adc
mov
mov
scas
jns
jmp
or
je
lea
stos
cmp
dec
mov
xchg
icebp
add
xchg
sbb
xchg
add
xor
push
push
fimull
ficompl
pop
xchg
add
xor
cmp
push
aaa
ret
outsb
cld
fwait
jbe
test
xchg
sbb
cmp
adc
dec
sub
jecxz
in
jle
cmp
sete
insl
pushf
jle
mull
icebp
adc
or
cmc
imul
int
and
push
pop
fisttpll
out
imul
sbb
add
rcl
push
mov
or
cmc
gs
sub
jo
xorl
out
sub
mov
faddl
repz
cmpsb
push
mov
fnstsw
movsb
ret
ds
mov
add
dec
adc
jmp
xchg
xor
and
mov
lock
jne
arpl
ret
icebp
mov
push
pop
stos
das
lcall
dec
pop
push
mov
rol
jb
pusha
pop
repnz
mov
inc
mov
in
sbb
pushf
sti
push
rorl
aas
lret
mov
fsts
mov
jecxz
jne
jl
push
icebp
xor
fdiv
mov
mov
jmp
push
in
dec
nop
sbb
pop
pushf
dec
inc
aad
frstor
icebp
outsl
lcall
repnz
mov
test
pop
test
lcall
and
jns
mov
jb
pusha
pop
repnz
mov
inc
mov
in
sbb
pushf
sti
push
rorl
aas
lret
mov
fsts
mov
jecxz
jne
jl
push
cld
sbb
imul
jmp
push
in
dec
nop
sbb
pop
pushf
dec
inc
dec
push
and
mov
fisttpll
jae
push
or
mov
js
ljmp
nopl
add
jp
jp
stos
cmp
mov
cmc
jle
jg
jmp
add
aad
xchg
filds
sub
leave
std
stos
xor
outsl
shl
rcrb
xchg
or
pop
sbb
iret
or
dec
dec
ror
jne
mov
inc
sub
outsl
pop
rcrl
sub
lds
push
loop
jg
add
ret
lds
add
inc
add
add
xchg
testb
and
popa
jmp
cmpsb
xor
add
imul
pop
jo
mov
and
mov
mov
inc
mov
ljmp
test
or
inc
adc
fadds
add
push
or
ja
aas
addl
jmp
mov
xchg
adc
sbbb
call
sub
addl
push
jmp
loope
out
mov
aaa
scas
cmp
mov
jecxz
adc
add
push
dec
jns
mov
fwait
decb
inc
mov
adc
add
aas
mov
add
call
cmpl
je
jmp
jecxz
jmp
add
arpl
popa
add
adc
and
test
or
pop
popa
push
push
addl
call
jmp
in
jns
and
add
dec
outsl
outsl
bound
jb
je
arpl
inc
and
cs
inc
gs
outsl
add
adc
jne
out
cmp
mov
or
or
lea
jmp
mov
cmpsb
shll
xchg
pop
add
je
and
ret
pushf
mov
mov
icebp
test
in
mov
pop
add
add
mov
push
xchg
cltd
clc
or
es
lds
xchg
test
gs
ss
mov
aad
mov
jmp
fimull
mov
mov
jnp
mov
roll
mov
jmp
notl
out
out
jno
cwtl
or
in
mov
dec
out
xchg
mov
and
or
pop
add
dec
push
lea
mov
inc
mov
cli
imul
insl
in
adc
cs
inc
fidivrl
pop
bound
out
in
out
adc
cmp
iret
xor
jp
add
add
mov
gs
jbe
test
sub
aaa
mov
out
jg
jmp
jbe
inc
les
mov
out
mov
xor
push
lds
iret
jl
mov
js
and
test
add
jmp
adc
xor
jno
xorb
loope
adc
push
mull
icebp
pop
xchg
or
xchg
pop
bound
mov
pushf
outsl
test
mov
jecxz
push
in
or
daa
movsb
cmp
inc
out
cmc
pushf
outsl
test
mov
divb
xorl
cltd
jo
lret
pop
ds
jl
outsl
or
out
stos
out
imul
add
cmpw
jmp
cmp
dec
push
fisttpll
out
ja
insl
hlt
pop
loope
or
sbb
insb
or
sarb
push
cld
ds
pop
leave
test
sub
xor
cmpw
je
sub
jmp
dec
fisttpll
out
push
ret
ret
xor
push
xchg
repz
cmpsl
push
lret
pop
ds
sub
push
shll
push
mov
lds
cltd
add
pop
lret
scas
pop
mov
pop
leave
test
mov
lock
ja
inc
shlb
test
cmp
xchg
sbb
xlat
inc
and
aaa
add
sbb
outsb
pop
fdivl
in
jne
pusha
pop
repnz
push
cmp
xor
add
mov
mov
mov
mov
push
jmp
lcall
inc
aad
dec
movsl
bnd
mov
xor
sub
adcl
insb
or
cmc
push
jp
in
dec
xchg
sahf
stc
or
mov
hlt
add
das
inc
rolb
shlb
lds
iret
sub
jle
jge
negl
inc
and
popa
adc
cli
outsb
cld
fwait
jbe
mov
mov
and
mov
mov
mov
and
clc
add
dec
lea
and
ret
cmpsb
push
aam
add
daa
mov
and
dec
int
and
cmp
andl
jne
jp
mov
inc
mov
mov
mov
adc
in
sbb
les
mov
dec
sub
add
dec
stos
xor
idivl
mov
mov
shlb
add
sahf
pop
mov
in
jge
je
xor
dec
fdivrl
clc
lahf
push
ljmp
fwait
jbe
push
adcb
xorb
dec
frstor
lea
dec
frstor
icebp
add
ds
cmp
dec
test
mov
and
fwait
jbe
or
rcrb
loopw
call
or
mov
lahf
cli
or
push
aam
sub
mov
loopne
adc
aaa
aas
mov
loopw
pop
loop
xchg
sbb
pop
lret
scas
pop
mov
adc
jg
fs
or
int
inc
into
pop
cmp
add
je
lea
mov
inc
rolb
shlb
inc
es
fmull
push
in
rolb
sarb
lock
inc
out
js
mov
into
pop
enter
pop
iret
pop
cmp
jo
add
lahf
punpckhdq
mov
test
jle
mov
stos
mov
xchg
adc
jb
ficompl
stos
pop
pop
inc
aam
dec
cmpsb
jle
mov
fsubrs
xlat
adc
add
inc
cmp
cs
mov
out
sti
pop
xlat
inc
and
sub
mov
inc
mov
ficoml
cmpsl
push
mov
push
xor
cmp
nop
aaa
lcall
push
xor
pop
mov
mov
sbb
xchg
adc
dec
fmuls
fdivs
push
xor
jg
movsl
xor
aam
sub
sub
sbb
jecxz
hlt
insl
std
test
les
mov
mov
rorb
push
rcll
xchg
addl
cli
jg
mov
lret
dec
fnstcw
xor
inc
lea
cltd
clc
or
hlt
jno
xorb
adcb
xorb
dec
cmc
cmpsl
dec
incl
jmp
and
jo
push
into
pop
cmp
xor
lcall
jmp
fwait
adc
mov
jg
sub
xchg
dec
test
lahf
cli
or
xchg
cltd
clc
or
push
loopne
jl
jne
sub
jmp
cmp
lods
mov
hlt
out
out
jno
jns
arpl
cmc
inc
ret
lods
pop
cli
cwtl
add
sbb
outsb
cld
fwait
jbe
pop
les
int3
and
xor
andb
and
inc
mov
mov
lods
ret
inc
shll
ja
loope
insb
ljmp
fstpt
shll
xorl
inc
mov
push
push
sahf
or
cmpsb
inc
cmp
dec
ret
movsl
push
repz
nop
testl
pop
ljmp
dec
cmp
aam
aad
dec
in
push
ret
cmpsb
push
loop
push
shlb
adc
and
sbb
inc
clc
mov
mov
test
jge
je
addr16
rolb
sarb
inc
fimull
fidivl
xor
nop
push
popa
nop
pop
mov
call
jb
add
pop
xchg
mov
inc
fidivrl
mov
mov
repnz
pop
repnz
cmpsl
sub
lds
push
add
adc
or
mov
loope
xchg
jb
dec
push
xchg
add
xor
ljmp
je
insl
add
mov
mov
mov
mov
dec
mov
scas
pop
in
aad
mov
out
test
jge
dec
cli
notl
pop
rclb
sub
jge
negl
or
aas
mov
mov
cwtl
decl
ret
rclb
mov
cld
fwait
jbe
popa
loopne
adc
add
ss
mov
xorl
mov
dec
ret
cmpsl
nop
sbb
fimull
fidivrl
outsb
in
sbb
push
inc
int3
inc
and
test
pop
leave
daa
test
ljmp
mov
dec
mov
fwait
jbe
push
ret
ret
or
push
shll
mov
jmp
mov
jns
aas
sbbb
out
sbb
xlat
and
mov
mov
or
in
decb
cli
insb
repnz
pop
bnd
int3
inc
and
mov
loopne
adc
or
inc
xlat
mov
cmpsl
xor
fwait
and
arpl
xchg
gs
cli
push
push
shlb
cmpsl
push
mov
hlt
push
mov
into
loop
stc
cwtl
imul
jmp
adcl
push
ret
cmpsb
push
xchg
adc
push
dec
push
les
int3
gs
cmp
mov
stos
cmp
dec
fnstcw
ss
mov
sbb
pop
push
shlb
and
sbb
fisttps
flds
add
in
std
jg
ja
loope
mov
test
push
cltd
aad
lds
mov
push
xor
es
xchg
testb
sub
lods
pop
mov
inc
shll
inc
and
mov
and
out
gs
pushf
outsl
mov
jle
call
jne
and
sbb
pop
or
addr16
aas
pop
test
and
js
adcl
mov
mov
orb
xor
or
inc
fidivrl
mov
and
adc
outsl
hlt
push
cld
push
or
jno
imul
mov
push
xchg
pop
bound
in
fstp
pop
leave
test
mov
cmp
adcl
pop
int
addr16
in
icebp
nop
arpl
xchg
ljmp
dec
sub
sub
popf
sbb
and
mov
scas
lret
imul
sbb
mov
sbb
scas
and
popf
or
pop
xchg
repnz
sub
fdivs
into
pop
cmp
xor
scas
pop
sahf
or
inc
fidivrl
push
xor
std
test
xchg
push
pushf
sti
push
cld
rcrl
pop
mov
lock
in
das
mov
and
gs
pushf
outsl
test
or
je
lds
iret
sub
jp
in
adc
cmpsl
aaa
push
mov
mov
xchg
orb
stc
or
xchg
and
icebp
jns
addr16
sbb
shlb
psubd
jp
jp
xlat
pop
leave
test
fwait
dec
fdivrs
sub
cmovbe
dec
fnsave
fwait
or
sub
mov
adcb
sbb
jne
jo
loop
mull
nop
arpl
addr16
pop
repnz
gs
insl
hlt
pop
dec
fisttpl
fnstsw
and
jmp
loopne
jb
mov
stos
cmp
xor
je
mov
jg
bound
gs
adc
sub
pop
xchg
jb
jno
inc
mov
xchg
and
pop
push
aam
sub
ds
test
sbb
jl
cltd
or
jge
jbe
cmpl
nop
push
popa
nop
aaa
pop
aam
sub
mov
es
inc
fidivrl
fstpt
jmp
xor
push
lret
cmc
out
js
mov
sti
imul
push
and
popf
or
leave
pop
cmp
or
out
dec
fisttpl
fnsave
popa
clc
outsb
or
adc
inc
shlb
and
xor
add
and
ljmp
nop
testl
jnp
inc
pop
fisttpll
out
xor
aas
mov
lret
inc
mov
mov
je
mov
into
jl
pusha
pop
repnz
xor
rclb
add
sbbb
cmp
jle
mov
dec
mov
gs
and
loopne
aam
shlb
aam
dec
out
dec
ret
jecxz
mov
leave
push
shll
jo
arpl
pop
jp
jge
dec
fdivrl
int
loopw
push
lret
fcmovnu
pop
leave
test
nop
mov
rclb
inc
and
aaa
or
add
jbe
and
ss
inc
mov
or
mov
mov
lods
cmp
setg
or
loope
lcall
and
out
push
shlb
dec
mov
das
ficompl
sbb
mov
jg
cmp
fdivl
in
fisttpl
mov
pusha
pop
repnz
and
jg
jle
call
inc
mov
mov
mov
es
cwtl
push
imul
insl
std
test
mov
mov
cs
pop
leave
test
nop
adc
jbe
adc
int
and
xor
push
cld
add
jl
jne
push
leave
push
ret
cmpsb
push
cmpsb
aad
mov
dec
sub
sub
push
xor
and
outsl
or
jecxz
sub
or
notl
push
fimull
ficompl
add
sbb
cmpsb
xor
scas
pop
jl
bound
xchg
lock
loopne
mov
rolb
mov
stc
outsl
cli
push
push
mov
and
icebp
jno
jg
jmp
and
cmp
cwtl
push
imul
cmp
mov
adc
fcomps
stos
pop
and
sti
sahf
insl
xchg
cmp
insl
rcrl
scas
pop
scas
je
addr16
pop
lods
and
mov
aad
cmp
in
sbb
pop
and
jb
cmc
gs
sub
inc
and
sbb
push
pop
xchg
add
and
sbb
jmp
ss
add
cmp
outsl
or
mov
jae
xchg
dec
fisttpll
out
repnz
pushf
outsl
lret
push
xor
or
je
lea
out
adc
add
inc
scas
pop
push
xor
dec
mov
mov
fistl
rolb
inc
test
inc
lods
aam
lret
scas
pop
mov
aad
rcll
mov
lcall
jno
jecxz
mov
shlb
mov
sbb
xor
sub
cmp
pop
in
bound
aad
dec
cltd
mov
not
pop
into
test
mov
sbb
xlat
inc
fidivrl
insb
or
mov
mov
push
les
int3
jge
add
mov
cltd
or
in
mov
adcb
addb
arpl
cmc
adc
mov
push
iret
pop
cmp
aas
mov
mov
jp
jp
sub
cmp
mov
pop
xchg
or
je
movsb
ret
ds
stc
js
mov
ds
hlt
jno
xorb
fldt
sub
and
xor
lock
adc
adc
sti
imul
pop
mov
loopne
rclb
add
mov
jg
sub
and
inc
ljmp
mov
mov
xchg
cmp
sbb
jp
in
inc
push
rcll
jbe
pushf
xor
add
hlt
pop
lret
pop
ds
sbbb
out
sbb
jg
je
out
push
sub
ret
xchg
gs
cld
xchg
cmc
add
in
outsb
cld
fwait
jbe
sub
pop
jno
add
adc
lock
dec
lret
lret
cmp
lds
iret
and
jge
bnd
mov
push
xchg
add
sahf
jp
mov
gs
xor
bound
ret
mov
xchg
icebp
add
cmpsb
sub
jge
je
xor
pop
lret
scas
pop
repnz
inc
mov
jnp
aas
mov
mov
das
pushf
mov
sahf
sbb
std
insl
hlt
pop
mov
aas
decb
repnz
mov
xchg
jb
addr16
jns
jmp
imulb
lcall
negl
cwtl
push
imul
ret
push
lds
push
xlat
inc
and
and
ficompl
stos
xchg
aad
mov
shll
cs
mov
xorb
cli
push
enter
outsl
insb
loope
adc
xor
out
das
movsl
sub
fmuls
fsubrs
cld
xchg
cmc
add
jne
jnp
in
pop
lret
test
lock
jl
testb
mov
adcl
adcb
andb
fistpl
repz
jo
jle
call
repnz
les
scas
pop
fnsave
lods
mov
mov
inc
lds
iret
and
out
or
inc
aad
dec
mov
sbb
and
sub
mov
enter
inc
mov
pop
mov
mov
arpl
mov
pop
cmp
adc
adc
mov
or
xchg
add
std
or
test
mov
sbb
aas
lret
cmp
roll
shll
add
ja
xorb
push
mov
loopne
jb
or
xor
cmp
sub
sbb
and
push
mov
aad
lret
scas
pop
mov
rolb
shlb
hlt
or
movsl
xor
dec
fdivrl
mov
das
lds
mov
inc
roll
aad
ficoms
mov
sub
xor
adc
stos
sub
mov
lahf
adc
mov
fwait
or
jae
xchg
out
jge
je
sub
or
in
movsl
dec
fmuls
fdivs
ljmp
or
ds
outsb
cld
fwait
jbe
insl
mulb
sbb
inc
aad
dec
cmpsl
pop
push
xor
daa
clc
data16
xchg
outsb
jmp
loopne
mov
stos
into
cmp
testb
shll
roll
shll
test
add
cmp
inc
aad
dec
movsl
jle
push
cld
femms
mov
jle
imul
mov
or
std
jno
xorb
out
jl
mulb
push
je
out
sub
jb
xchg
repz
imul
or
push
fstl
cmpsb
push
loop
mov
inc
mov
cmc
popa
icebp
nop
arpl
xchg
add
jg
mov
es
inc
mov
xchg
adc
and
pop
push
xor
and
repz
inc
shlb
insb
or
cmpl
xor
sub
fs
pop
leave
test
mov
inc
mov
movsl
xor
or
in
notb
mov
cs
setg
or
jmp
fstl
mov
push
xor
sbb
pop
into
test
imul
cmc
pushf
outsl
fldt
imul
ss
mov
inc
mov
jbe
jbe
loopne
jns
jl
negb
roll
shll
dec
fidivrs
inc
and
sbb
add
sahf
push
xchg
repz
in
test
jge
fs
jno
jecxz
inc
jecxz
push
in
sub
cmpsl
and
or
or
jno
in
sbb
inc
daa
rolb
test
icebp
add
mov
iret
xchg
sbb
aad
mov
fistpll
push
xor
xor
push
mov
add
and
xchg
add
sahf
pop
outsl
loop
pop
loop
enter
pop
in
fwait
or
sbb
das
mov
and
inc
inc
and
ja
lock
aad
movsl
xor
add
std
or
sbb
cmp
mov
rorb
add
adc
pusha
out
iret
pop
cmp
push
and
inc
dec
into
pop
cmp
ds
clc
lahf
push
dec
lret
lret
mov
push
lcall
popf
in
std
mov
xchg
icebp
add
pop
rolb
shlb
ret
dec
fnstcw
int
addr16
stos
and
std
jb
xchg
sbb
les
mov
mov
dec
fnstcw
and
add
dec
fstpt
sbb
cmp
insb
loop
je
and
pop
xchg
adc
rclb
pop
lds
iret
das
rorl
mov
inc
and
cmp
outsl
lcall
sub
cmp
jns
jecxz
notb
pop
jp
jg
sub
in
bound
jg
jmp
jge
jns
mov
inc
mov
mov
scas
leave
cmp
xor
ficoml
cmpsl
push
mov
insb
or
cmc
add
inc
fidivrl
shlb
or
cmpsb
add
lahf
punpckhdq
push
push
xchg
jbe
jne
out
inc
cmp
dec
cmp
das
mov
pop
mov
xchg
adc
movsl
inc
shll
cmpsl
ret
jle
jbe
loopne
ret
xchg
gs
mov
imul
sbb
add
lea
sub
mov
aad
pop
lret
scas
pop
mov
pop
enter
push
fisttpl
fnsave
ret
mov
inc
es
push
xchg
add
sahf
jp
jns
mov
adc
push
lahf
push
ret
dec
frstor
icebp
add
and
mov
mov
xchg
pop
jp
mull
xchg
popa
fimuls
pushf
xor
or
pushf
sub
js
ljmp
jb
lret
lret
sbb
out
in
je
insl
xor
dec
fisttpl
fstpl
mov
sbb
rclb
mov
xchg
adc
mov
fisttps
lea
outsb
cld
fwait
jbe
sub
ds
test
xchg
adc
fsts
mov
mov
or
xchg
mov
jb
xchg
jnp
push
cld
sub
addr16
cmp
add
pop
int3
inc
and
sub
adc
pop
lret
scas
pop
ljmp
lcall
push
xor
lea
int
into
test
es
mov
add
in
adc
outsb
xor
and
pop
sbb
fs
imul
mov
cltd
or
jno
xor
push
aam
sub
xchg
lock
mov
cltd
clc
or
ret
inc
aad
dec
mov
int3
and
sbb
dec
fistpll
mov
and
or
sbb
js
add
mov
call
sahf
pop
push
fmuls
fdivrs
pop
lret
scas
pop
in
aaa
movsb
cmp
add
pop
jmp
xchg
add
cmp
pusha
notb
mov
push
pushf
sti
push
mov
call
mov
xchg
repnz
rorl
mov
mov
stos
fildl
dec
lret
cwtl
sbb
sub
lds
cmp
loop
icebp
nop
arpl
jg
adc
push
pushf
sti
push
jecxz
les
int3
and
jg
mov
insl
out
adc
or
jl
jne
pusha
push
jno
jecxz
cwtl
push
test
push
mov
cmpsb
jb
push
pushf
sti
push
aam
dec
frstor
cmp
jg
iret
pop
cmp
jle
rolb
shlb
dec
fdivrs
movsl
int3
aas
mov
mov
dec
mov
and
hlt
xchg
outsb
leave
je
jl
divb
stos
dec
jge
jnp
in
add
adcl
stos
cmp
sub
xchg
add
adc
xor
jbe
imul
adc
mov
inc
lds
iret
sub
notl
xchg
sbb
inc
shlb
mov
mov
pop
aad
sub
aas
jb
push
insl
std
test
insb
loop
pop
loop
xor
insl
std
test
xor
pop
stos
cmp
xor
fisttpl
jno
xorb
insl
std
test
pop
into
pop
cmp
jg
scas
aas
pop
test
mov
mov
and
mov
int3
loop
call
stos
cmp
inc
xchg
setg
or
mov
in
frstor
leave
mov
enter
fsubrs
int3
in
sbb
cmc
pushf
outsl
mov
xor
and
aaa
push
mov
xor
fidivrl
or
js
mov
or
xchg
sahf
stc
or
dec
fdivrs
pop
cmp
jno
jne
mov
cltd
or
adc
in
sbb
mov
sbb
cmp
jl
mov
test
mov
add
in
in
mov
push
in
add
inc
and
aaa
ljmp
mov
xchg
adc
mov
pop
xchg
or
je
enter
and
push
cld
sbb
mov
jle
jne
inc
xlat
mov
cwtl
ss
inc
mov
xor
mov
fisubl
add
pop
enter
inc
movsb
sbb
stos
and
add
push
cs
notl
sub
jae
lock
pop
in
ljmp
inc
mov
mov
fwait
xchg
add
pushf
xor
adc
adcl
test
and
sbb
test
jae
xchg
cmp
inc
fimull
ficompl
mov
inc
mov
addl
icebp
add
jne
imul
adc
testb
and
mov
in
outsb
ljmp
and
pop
dec
lret
pop
ds
ljmp
push
lret
mov
in
cwtl
push
test
push
mov
cmp
jl
add
xor
stos
js
js
ljmp
mov
dec
fstpt
mov
sbb
mov
fnsave
cli
push
mov
jle
jp
in
das
scas
cmp
dec
fnstcw
and
jp
jp
rorb
movsb
push
shlb
jno
jecxz
sbb
or
out
jg
jmp
inc
mov
dec
roll
aad
pop
fimuls
xor
pop
int
addr16
mov
and
sti
inc
enter
cmp
inc
and
cmp
mull
icebp
sbb
loope
mov
rcrl
stos
data16
jg
mov
xlat
pop
enter
adc
loope
loopne
jb
ret
cmpsl
push
jecxz
push
jmp
jge
bound
mov
jl
jne
sub
lods
sbb
mov
out
adc
sub
sub
mov
movsl
sub
dec
roll
rcll
and
mov
mov
ret
or
jb
popa
add
adc
aas
scas
lret
int
fdivrs
test
pop
call
into
sub
ds
nop
sbb
insb
or
cmc
ljmp
push
lahf
push
ficoms
cmpsl
push
nop
dec
rcll
data16
mov
and
gs
stos
int
lea
push
in
inc
mulb
xchg
pusha
shrl
mov
xchg
add
adcl
dec
fstpt
fs
sbb
loopne
adc
or
rcl
ret
sar
popa
icebp
nop
arpl
xlat
pop
lret
scas
pop
xchg
push
aad
sub
xor
push
jle
insl
hlt
pop
loopne
push
xchg
repz
lock
pop
jp
inc
leave
push
ret
cmpsb
push
cmpsb
in
push
sbb
push
mov
nop
sbb
xor
int
iret
gs
and
cmp
jge
adc
pop
repnz
fs
xor
mov
lahf
sub
adcl
out
mov
ret
jne
mov
scas
cmp
mov
dec
mov
push
fs
les
int3
jp,pn
jo
loop
mov
mov
push
mov
mov
mov
cmc
add
fisubs
xchg
mov
fimull
inc
and
gs
add
jg
jmp
lea
adcl
test
xchg
pop
bound
mov
cmpsb
mov
lods
lret
inc
mov
cmp
adc
rolb
rolb
daa
test
dec
push
xor
push
mov
ss
cmp
add
notb
movsb
roll
mov
mov
and
jecxz
in
jg
push
rclb
mov
xchg
adc
jl
jne
out
.byte
push
push
