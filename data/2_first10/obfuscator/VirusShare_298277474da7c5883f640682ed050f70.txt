lea
lods
popl
call
dec
mov
jbe
into
or
adc
xchg
stos
repz
adc
in
lahf
inc
or
fimuls
xchg
sbb
nop
xor
lods
cmpsl
or
das
pusha
enter
scas
sub
into
gs
mov
and
test
iret
arpl
cmp
adc
shl
mov
outsl
mov
cmpsl
xchg
sub
outsb
mul
icebp
jo
fnstcw
xor
mov
push
hlt
mov
lahf
xor
mov
xchg
lea
sbb
imul
lret
loopne
lret
and
in
testl
adc
push
xchg
jl
xor
push
dec
out
or
mov
xchg
clc
cs
jnp
and
daa
cli
ss
aad
scas
in
jns
mov
xchg
loope
ljmp
mov
int3
jle
mov
ret
xchg
popf
sbb
int
cmpsl
inc
pop
sub
dec
mov
push
push
push
mov
clc
pop
add
rol
int3
xchg
iret
in
mov
lret
mov
imul
scas
insl
jge
push
lea
pop
pushf
das
mov
or
into
testl
pop
jge
test
lods
inc
test
xor
popf
mov
lods
lock
mov
jne
imul
push
xchg
imul
adc
addb
icebp
aaa
lock
cmp
lods
iret
js
fsubrl
repnz
mov
iret
lea
mov
addb
cmpsb
mov
mov
lret
mov
hlt
out
repz
or
xor
fidivrl
and
sub
movsb
or
scas
mov
jge
push
sub
pop
popf
jecxz
daa
shrb
clc
pop
pop
fwait
nop
add
sbb
jge
mov
jae
mov
dec
insl
xchg
cmp
mov
push
add
xor
cmp
mov
inc
mov
outsb
xchg
xchg
in
scas
inc
test
adc
sahf
lods
cs
or
pop
jns
mov
cmp
cld
sbb
jbe
into
cmp
mov
insb
sbb
out
fimuls
or
push
or
sbb
mov
cwtl
lds
add
adcb
clc
js
idiv
adc
data16
frstor
imul
sti
xchg
test
or
fcomi
mov
fisttpll
push
xchg
inc
bound
in
push
int
mov
add
nop
or
ljmp
stc
das
jb
add
pop
pop
mov
int3
xlat
mov
dec
dec
cwtl
push
pop
add
aad
out
iret
inc
imul
inc
cmc
add
inc
cmpsl
inc
das
adc
aas
adc
sti
fmuls
movsb
lods
mov
add
das
mov
dec
push
or
loope
cmp
incb
pop
ss
pop
sbb
shrb
lds
mov
insl
sbb
stos
daa
imull
sbb
mov
ss
adcb
out
sbb
jge
mov
ficomps
adc
sub
sub
push
sbb
mov
add
mov
outsl
dec
lods
test
or
xchg
mov
xlat
scas
mov
fsubl
xorb
push
xchg
imul
xchg
xchg
cmp
mov
mov
push
insb
js
repnz
mov
push
jg
sbb
pop
fwait
jb
cltd
outsb
sub
sub
test
pop
fisubrs
sahf
cmp
ficomps
sahf
add
xchg
jb
or
stos
fidivrl
cmp
cli
insb
push
mov
aam
mov
jnp
and
orl
xchg
sub
mov
or
std
cmpsb
sub
jns
pop
pop
jo
js
sub
fists
int
fidivl
addl
jl
inc
add
fs
jg
mov
fdivs
lcall
arpl
arpl
fnstcw
outsb
xor
sbb
pop
xor
mov
dec
add
dec
mov
dec
lret
xchg
out
xor
in
add
xchg
add
add
push
pop
insl
push
inc
fists
mov
cmpsb
les
jmp
and
dec
scas
loop
jb
pusha
pushf
data16
pop
mov
arpl
rorb
mov
xchg
pusha
ds
sti
mov
ljmp
adc
xor
imul
jb
sti
and
dec
outsl
sub
xlat
jmp
adc
cmp
es
fimull
clc
cmp
ja
or
or
jge
bnd
stc
stos
pop
adc
mov
int
pop
cltd
push
push
dec
inc
mov
mov
xlat
push
sbb
add
mov
mov
push
in
in
mov
gs
icebp
push
mov
jp
push
jmp
inc
aam
inc
pop
lret
push
jae
insl
popf
fisttps
jecxz
rcrb
xor
out
cld
mov
adc
or
lea
push
add
sbb
inc
pop
jbe
popf
repz
sbb
mov
lret
pop
xchg
fsubl
scas
xchg
dec
ja
mov
xchg
lea
fsubr
cmp
rcll
incb
cmp
stc
pop
jge
clc
fsubrs
push
out
mov
enter
or
cmc
cmp
fsubrp
fmul
insl
and
pop
pop
push
or
in
cmp
jnp
mov
lcall
pusha
pop
pop
or
jne
or
and
nop
shl
inc
dec
push
push
push
push
lea
push
push
push
push
cmc
push
cmp
pop
cmp
stc
test
mov
and
stc
push
pop
push
push
jge
or
pop
pop
jg
push
push
sub
pop
pop
cmc
jmp
jmp
call
loop
jecxz
mov
push
jle
test
push
call
mov
pop
aas
dec
xchg
dec
xor
inc
dec
lds
sahf
jb
mov
xchg
or
ret
adc
in
les
add
mov
push
add
pop
or
js
jge
or
jl
jg
cmp
inc
dec
push
add
push
pop
pop
test
or
push
pop
push
push
shl
pop
pop
push
shl
pop
push
add
jne
xor
xor
nop
jge
mov
jnp
cld
or
cld
push
add
mov
pop
jp
push
sar
pop
test
cmc
push
push
push
add
pop
pop
push
jnp
push
or
pop
pop
ja
jns
push
cmp
pop
or
nop
mov
jno
sub
jo
jo
xor
loop
jecxz
add
sub
dec
data16
jbe
adc
cmpsl
push
mov
pop
add
or
sahf
ds
or
testl
lcall
idiv
xor
jmp
add
add
pushl
jmp
jmp
pop
or
fsts
sahf
subl
xchg
push
mov
dec
cwtl
xchg
insb
mov
push
push
sahf
aas
cltd
xchg
pusha
jns
movsl
pop
add
les
xchg
cmpsl
subb
insb
ficoms
rcr
dec
xchg
in
or
inc
mov
push
sub
pop
insl
dec
mov
jmp
dec
sub
push
sar
dec
xlat
push
add
pop
jmp
sub
push
std
mov
out
xor
pop
jno
shll
inc
sub
xchg
lock
fcmovne
mov
pushl
xor
pop
pop
push
jg
sub
pop
je
test
loop
jecxz
jg
mov
adc
or
pop
xchg
xchg
insb
scas
pcmpeqd
xchg
rcpps
sahf
fs
inc
mov
rol
push
popa
dec
cmp
pop
inc
jge
jnp
push
jns
inc
dec
pop
clc
cmc
mov
inc
inc
inc
inc
jle
push
push
cmp
pop
pop
push
pop
xchg
xchg
sub
loop
jecxz
mov
fmul
cmpsl
xlat
cli
and
dec
stos
rep
arpl
dec
sub
push
stc
pop
xchg
push
call
repz
inc
push
enter
and
mov
push
lds
sti
jno
insl
in
arpl
inc
dec
dec
fists
mov
mov
inc
fistps
es
imul
mov
rclb
stos
sbb
xor
insb
sahf
and
adc
jnp
test
mov
sbb
lcall
call
lcall
push
mov
pop
jmp
and
test
std
sbb
les
jl
push
dec
adc
xchg
mov
adc
inc
out
divl
test
into
insl
push
imulb
push
aad
cmp
sbb
lods
std
mov
lea
sahf
push
or
and
repz
or
es
in
sub
sub
mov
inc
dec
jne
aad
orl
dec
jg
jne
setae
xchg
daa
adc
fwait
cli
fwait
and
xchg
dec
cmpsl
mov
mov
push
mov
cltd
inc
subb
jbe
xchg
inc
lods
cwtl
out
jnp
adc
loopw
xchg
ja
push
sbb
push
jo
repz
add
jno
loopne
push
pop
imul
je
jae
ficoms
inc
push
mov
lcall
push
cmc
aad
mov
lods
sbb
xor
mov
pop
and
clc
mov
push
int3
pop
into
jl
idivb
push
cmp
lret
or
test
and
and
or
rcll
lret
les
push
mov
add
jl
movsb
cltd
es
xlat
mov
jmp
jge
stc
xchg
jmp
and
push
mov
push
and
push
sbb
movsb
cmpsb
sbb
mov
cld
sub
or
sahf
push
mov
out
les
pop
imull
or
push
cld
decb
or
ret
or
aaa
and
adc
push
lods
xchg
sub
sub
mov
mov
and
incl
aad
add
fwait
jnp
int3
cs
fsts
addr16
lock
add
imul
out
mov
add
or
xor
xchg
popl
mov
inc
add
sub
leave
stos
repnz
jbe
pop
mov
fwait
mov
dec
and
mov
jmp
dec
add
ja
mov
or
lock
lahf
sub
sbb
int
shll
mov
pop
cmp
fdivp
and
sbb
mov
dec
add
add
mov
int3
call
insl
inc
xorb
xor
adc
push
test
aam
sbb
mov
mov
dec
aam
rcrb
mov
jne
lock
sbb
je
sbb
add
mov
mov
jnp
hlt
pop
outsb
fnstenv
cs
push
repnz
pushf
and
hlt
pop
mov
loope
cmc
sbb
mov
xchg
mov
add
das
test
mov
fldenv
cltd
inc
dec
inc
mov
xchg
or
outsl
fldl
mov
shll
mov
and
sarl
test
jns
jl
pushf
sti
jmp
ja
aam
leave
sar
gs
or
mov
or
mov
mov
mov
mov
cmpsb
xchg
pop
cli
push
fidivl
lret
mov
dec
iret
jle
and
adc
jmp
add
enter
fsub
int
inc
pop
mov
dec
shlb
mov
aad
iret
fnstcw
dec
jns
mov
test
dec
cmp
and
scas
pop
sub
lds
loop
mov
add
xchg
cmp
jge
scas
jp
test
orb
pop
and
push
ljmp
pop
and
ss
push
mov
mov
lea
shll
hlt
in
cmp
push
add
mov
fcoml
inc
leave
inc
les
mov
adc
push
ljmp
ret
push
sub
adcb
xchg
fisubs
xchg
fsts
dec
test
mov
or
xchg
xchg
pop
and
insb
mov
rclb
testb
push
add
inc
in
xchg
jnp,pt
pop
fwait
inc
bound
push
mov
insb
dec
lret
decb
push
jbe
xlat
lea
add
jno
cmp
mov
push
mov
push
imul
dec
jae
lods
sub
clc
scas
inc
shrb
push
pop
lcall
negb
popf
dec
xor
fmulp
xchg
aas
ret
dec
sahf
pop
mov
ret
rcr
adc
mov
mov
icebp
and
das
adc
jp
add
inc
scas
cltd
jp
add
pop
xchg
push
dec
fnstsw
push
or
cmp
push
dec
fcmovbe
push
test
loop
insl
sti
xor
sbb
fildll
dec
das
pop
cld
mov
test
inc
push
push
push
ss
mov
fwait
cmp
sbb
aaa
xchg
inc
mov
pop
ss
push
inc
adc
psllq
push
cli
and
add
push
xor
mov
dec
lods
pop
in
into
xchg
jne
pushl
sub
shll
les
add
adc
je
and
xor
mov
out
in
in
insl
dec
iret
test
xchg
xchg
lret
sub
aam
insb
xchg
sbbl
test
inc
push
in
cld
jo
add
cld
adc
pop
fidivs
nop
ss
stc
push
or
lods
mov
push
mov
pop
jns
xchg
or
cmpsl
sarl
test
and
sbb
outsl
pop
xchg
inc
jns
mov
repz
adc
inc
xorl
test
imull
test
pop
and
fisubrs
push
aad
or
dec
out
sub
frstor
out
adc
pop
notb
in
js
mov
cs
adc
or
clc
sub
mov
mov
pop
negl
sbb
mov
int
scas
js
sbb
nop
outsl
mov
outsl
jge
inc
shrl
or
outsb
mov
xchg
and
clc
je
adc
leave
movsl
xor
xchg
push
push
loopne
inc
adc
fidivl
arpl
cmpb
xor
push
daa
dec
lods
mov
mov
imul
loope
mov
push
push
cmp
and
imul
xor
dec
scas
in
test
pop
adc
cli
pusha
cmpsb
je
or
shll
fistpll
jle
jo
dec
fsubl
repnz
hlt
clc
xor
inc
mov
mov
cmp
mov
mov
push
xchg
mov
fs
test
mov
negb
xchg
jg
out
xchg
scas
or
ja
decl
adc
lret
rolb
pop
or
mov
adc
push
lea
cld
inc
repnz
fists
pop
mov
movsb
xor
push
cs
adcl
outsl
insl
adc
fisubrs
inc
pop
mov
xor
int3
enter
iret
ljmp
inc
jns
add
xchg
sbb
pop
rcrb
pusha
xchg
adc
xor
std
stc
push
cmpl
xlat
sub
cmc
daa
ja
pop
fldl
pushf
in
or
xchg
sbb
mov
mov
jae
xchg
push
xlat
add
xorl
inc
mov
mov
scas
adc
sar
js
cmpsl
rcrl
and
jbe
pop
insl
sarb
out
xlat
pop
fnsave
popa
xor
cmp
jns
push
lcall
push
pop
insl
arpl
adc
test
push
cmp
push
xor
mul
ds
arpl
and
scas
and
andl
sbb
xchg
pop
adc
dec
loopne
pop
lods
pop
int3
jge
xchg
jae
or
fsubrs
shl
and
mov
pop
imul
inc
lret
or
mov
ljmp
and
andb
xor
mov
call
cmp
jle
loope
aad
ss
aas
sahf
sbbb
in
daa
hlt
sub
fsts
pop
test
cmp
test
fdivp
idivb
or
dec
push
test
cmp
mov
fistpl
adc
cmp
push
mov
mov
test
xor
into
xchg
das
in
mov
fsubs
loopne
orl
nop
mov
adc
pop
mov
out
adc
mov
out
pop
cs
shll
mov
lea
mov
pop
fistps
xlat
jo
xchg
push
cs
movsb
xchg
mov
mov
add
insl
pop
pop
xor
push
imul
mov
adc
cmpsb
into
mov
dec
leave
xchg
stos
fstl
xchg
jo
sti
jno
mov
dec
leave
add
xor
push
push
gs
xchg
inc
insb
dec
aam
popl
xor
test
dec
mov
jae
pop
sbb
push
inc
jp
cli
leave
pop
push
and
jp
sbb
les
mov
mov
and
inc
or
cmpsb
adc
and
in
outsl
sub
mov
add
push
adc
fnstcw
cmp
sbb
pop
pushl
push
push
xchg
pop
fisubs
repnz
dec
bnd
mov
test
outsl
mov
xchg
filds
inc
sbb
out
xchg
mov
and
inc
out
fbstp
ja
sub
insb
popf
enter
xor
pop
mov
pop
hlt
and
mov
test
cld
dec
cmc
std
daa
jae
call
in
mov
jne
pop
int3
and
cmp
pop
clc
mov
lea
and
iret
cmp
pop
cmp
shlb
jbe
incl
ja
in
daa
and
lods
jae
xlat
mov
insb
jl
call
inc
add
sarb
in
in
aaa
fildl
jbe
add
mov
enter
xorb
mov
xchg
jns
or
cld
lret
jo
addb
das
js
lret
jge
mov
lds
push
lds
loope
mov
popf
ss
subl
dec
push
repz
jg
pop
inc
mov
stc
mov
and
fisttpll
jl
aaa
aad
scas
popf
loop
lret
xchg
mov
repz
cmp
pop
add
in
dec
push
mov
pop
mov
dec
ss
xchg
lods
mov
in
adcb
xchg
push
iret
and
sub
adc
rcrl
pop
cmp
jle
pop
lds
push
aas
push
sbb
and
jmp
lret
fmull
fnstcw
outsb
pop
adc
rclb
arpl
loop
insb
and
js
lods
aam
bound
lods
add
xchg
xchg
xor
sub
mov
out
mov
in
addr16
jmp
iret
or
push
out
and
dec
jo
inc
mov
push
jmp
adc
mov
adc
fwait
aaa
lods
outsb
dec
adc
int3
or
popa
in
sbb
sbb
xchg
ret
inc
mov
or
push
testl
icebp
imul
push
sbb
loope
leave
sbb
mov
xlat
lret
push
adc
call
xor
adc
pop
and
js
xchg
add
or
xchg
pop
mov
pop
movsb
inc
xchg
dec
iret
imul
aaa
jne
int3
xchg
stos
jb
dec
or
xchg
pop
mov
pop
xchg
pusha
js
aas
repz
ljmp
cmp
xor
stos
cmp
xchg
int3
popf
lahf
popf
rcl
xchg
add
or
mov
ficoms
push
orb
cmp
adc
pop
mov
aad
arpl
add
xor
add
add
push
cmpsl
inc
cwtl
mov
pusha
clc
cmp
gs
mov
pop
xor
dec
cld
inc
sub
sbb
cmp
push
std
loopne
mov
aaa
mov
icebp
mov
repz
mov
pusha
cmp
sub
fisubrl
mov
int
or
jb
in
push
out
jecxz
in
rcll
cmpsb
outsl
inc
out
negb
push
fmulp
popf
fisubl
xchg
int
popa
mov
mov
and
cld
loop
and
pop
xlat
jne
fimuls
mov
jbe
push
rcl
andb
scas
mov
adc
inc
jl
mov
or
popf
jo
addb
in
pop
fwait
mov
mov
dec
loope
dec
sub
fisubrl
inc
xchg
jmp
and
bound
mov
int3
cmp
sar
pop
mov
inc
adc
xchg
add
lahf
ja
mov
sbb
sahf
pop
or
arpl
cld
jg
inc
movl
shlb
add
jp
mov
rolb
sbb
mov
cmpsl
mov
ss
arpl
outsl
pop
and
pop
inc
jmp
lods
dec
push
cmp
mov
push
subl
out
jmp
out
pop
mov
jge
in
daa
nop
scas
movsl
pop
pop
mov
fimuls
aam
mov
jl
es
adc
sub
cmp
lcall
mov
adc
int
adc
mov
pushf
or
daa
stc
and
sub
sub
outsl
lret
lahf
mov
or
push
loop
repz
lods
std
std
outsb
imul
mov
lds
adc
inc
popf
xchg
xchg
movsl
xchg
hlt
xor
pop
cwtl
outsl
in
mov
in
push
push
mov
mov
mov
aas
rcll
mov
pop
jp
sti
andl
in
and
sbb
xlat
dec
jb
mov
xor
fdivs
inc
xorl
imull
xor
ret
cmp
aaa
test
sub
mov
icebp
out
add
aaa
xchg
push
fildl
std
jno
imul
or
jp
icebp
std
or
cmove
pop
push
ss
mov
and
fiaddl
hlt
addr16
sbb
mov
test
je
pop
hlt
or
sbb
es
notl
sub
jge
dec
adcl
mov
mov
roll
xchg
int
mov
iret
jno
or
xchg
mov
int3
push
adc
jb
ds
lea
ja
sbb
xchg
fs
js
fwait
or
call
mov
push
xchg
in
out
inc
jge
cmp
out
xor
mov
arpl
std
mov
adc
sti
push
jnp
dec
xor
mov
loopne
mov
xchg
sar
sub
dec
mov
mov
add
or
push
xchg
add
xchg
mov
lods
in
cmpsl
lcall
xchg
mov
shl
push
mov
test
idiv
sub
hlt
inc
inc
sti
popa
loopne
cmp
int3
scas
rcl
ja
mov
fistpll
or
push
pop
repnz
aas
xor
add
mov
push
loope
push
out
pop
push
inc
or
mov
pop
pusha
or
jge
fwait
sbb
add
mov
movnti
or
push
and
pop
or
stc
cmp
fcomps
sbb
sub
sbb
jnp
iret
mov
jns
sbb
ret
jmp
adc
push
cmovae
dec
push
iret
in
test
leave
imul
push
push
xchg
push
fstps
hlt
scas
lret
cmp
jmp
cmp
sarl
inc
add
cmc
xchg
sbb
xor
popf
gs
push
stos
and
nop
dec
pushf
sbb
inc
xor
int
adc
lds
filds
mov
adc
sbb
pop
les
cmp
or
mov
jp
mov
psadbw
lods
cmp
scas
and
leave
in
xchg
jmp
or
sub
or
cmp
jne
and
test
xchg
leave
xor
rorb
mov
fildl
xchg
jmp
sbb
bound
and
cmp
or
scas
repnz
jb
movsb
sbb
les
lret
adc
lret
mov
adc
mov
in
and
or
pop
or
and
movsl
sbbb
pop
mov
xchg
sbb
fadd
pop
push
das
inc
push
sbb
jmp
lods
sarl
mov
fs
push
xchg
mov
xchg
mov
cwtl
sti
repnz
inc
push
dec
push
adc
mov
xchg
je
enter
shrb
and
jns
sti
cmp
sub
xchg
jae
jbe
fstl
inc
lock
in
iret
jle
xchg
xor
test
mov
loop
ja
or
cld
mov
lahf
push
cmp
cmp
inc
add
fidivs
mov
xchg
rcrb
pop
divb
xchg
divb
push
iret
mov
hlt
adc
push
mov
mov
xchg
sbb
push
out
ret
jmp
dec
dec
mov
jne
imul
pusha
mov
and
call
call
sub
cwtl
jbe
adc
push
ror
push
jae
loope
scas
jle
mov
add
add
pop
add
and
xchg
loope
adc
aaa
pop
xor
dec
cltd
je
mov
nop
fdivl
and
popa
repz
dec
sub
lds
dec
test
pop
jmp
push
nop
xchg
bnd
xchg
push
je
add
cwtl
jmp
insb
adc
cld
add
je
leave
jl
add
pop
test
test
in
std
mov
xchg
pushl
mov
outsl
fmuls
movsb
popf
pop
inc
pop
rorb
jecxz
push
pop
jge
into
and
pusha
mov
mov
ljmp
subb
mov
fwait
sub
jecxz
jge
pop
rorl
push
out
sub
xchg
mov
in
faddp
xchg
jne
in
sbb
fs
and
xchg
iret
fcmovbe
outsl
cmp
sbb
push
mov
sub
int
cmpsl
testb
mov
mov
mov
mov
sub
mov
jle
scas
cmc
test
nop
xchg
ss
push
aas
sub
mov
gs
pusha
out
arpl
push
ret
cwtl
mov
xchg
dec
repz
cld
call
add
xchg
outsl
add
jb
aaa
addr16
or
dec
enter
inc
dec
lret
lods
out
enter
shlb
mov
loopne
and
outsb
xor
fisubrl
dec
sub
xchg
xor
pop
cmpsl
mull
jmp
in
mov
popf
jo
jo
jp
fists
and
sti
mov
sub
cwtl
mov
inc
daa
mov
pop
xchg
add
jno
sbb
loopne
jbe
iret
insl
cmp
mov
call
or
out
xor
sahf
add
sub
mov
push
inc
sarb
jp
lret
popf
sbb
cld
lret
jmp
xchg
jecxz
jns
icebp
add
sub
dec
jge
add
outsb
ljmp
mov
lret
fcmove
pop
movsl
and
imul
or
pop
jae
adc
ds
adc
jne
rcrl
push
and
pop
jl
push
xchg
fwait
or
dec
lcall
popf
adc
mov
mov
mov
stos
aad
add
push
pop
repnz
dec
insl
pop
insl
fistpl
idivb
frstor
pop
fstpl
push
mov
cs
xchg
ffree
rorb
adc
test
js
das
fstps
call
pop
mov
mov
dec
stos
or
fsubr
add
cmp
lea
frstor
lods
push
call
andb
out
pop
stc
mov
movsb
adc
popa
movsl
sub
inc
inc
ljmp
icebp
add
and
scas
push
mov
cmc
cld
xor
xchg
std
enter
pusha
mov
xor
adc
push
aad
je
pop
dec
dec
ljmp
pop
out
cmp
outsl
cld
adc
xor
adc
in
sub
mov
inc
dec
rcl
insl
mov
sub
dec
stos
sub
nopl
stos
fs
leave
mov
subl
and
dec
adc
mov
mov
mov
or
fists
stos
lret
mov
in
jns
jb
test
aaa
decl
inc
mov
dec
sbb
rcl
xor
fisubs
fstpl
daa
jle
hlt
gs
adc
fisttpll
pop
adc
push
fsubrl
jbe
fistpl
inc
dec
pop
out
das
pushf
push
es
add
mov
pop
cmp
jge
gs
adcl
add
loope
add
gs
and
ret
lods
jg
sbb
xor
outsb
hlt
xor
jmp
movsb
popa
cmc
decb
pop
flds
cmp
dec
add
pop
sub
nop
inc
cli
mov
mov
push
adc
loopne
fmulp
xchg
or
loope
fs
out
push
icebp
outsb
mov
jo
jnp
add
or
push
xchg
nop
pop
cmpb
mov
les
popf
insb
mov
cli
pop
into
cmp
adc
jns
jecxz
daa
jmp
ljmp
add
pop
aaa
jge
repnz
xor
adc
xor
xchg
aaa
psraw
mov
pop
inc
loope
mov
pop
xchg
in
adc
dec
push
dec
in
pusha
cmpsb
xor
mov
push
add
adc
push
sub
dec
jbe
icebp
lea
cs
and
aaa
dec
lods
iret
out
mov
fists
shll
fsts
cmp
shr
das
pop
add
les
je
adc
xchg
arpl
or
int3
xlat
mov
adc
sub
outsb
cli
daa
subb
sbb
jnp
cmp
dec
scas
test
fsubr
mov
in
fstpl
lods
xchg
out
sbb
jle
inc
cli
sbb
cmp
mov
imul
sti
push
mov
cmpsb
and
rol
mov
mov
push
negl
dec
stc
fisttps
xor
in
jmp
mov
and
stc
dec
scas
sub
cmpb
mov
add
mov
pop
cmp
dec
add
imul
nop
sbb
jg
adc
inc
das
mov
lret
testb
mov
aaa
adc
out
je
sub
scas
insl
je
jne
sbb
aaa
shll
out
rcrb
dec
decb
mov
cwtl
int
aam
push
pop
xor
inc
dec
lret
mov
js
add
aas
nop
pop
stos
test
je
mov
out
mov
jg
jecxz
cmp
xor
dec
push
inc
pop
loop
mov
cmpsl
pushf
mov
enter
lods
movsb
test
in
or
int3
dec
aas
lcall
fistpll
cmp
clc
mov
hlt
jne
jg
mov
mov
dec
out
in
xor
inc
sbb
push
lds
fbstp
pop
push
mov
test
ret
push
and
adc
cmp
inc
mull
xchg
es
cmp
and
idivl
xor
loopne
pop
jbe
xor
je
add
and
mov
cmp
xor
js
insl
in
ja
pop
hlt
mov
imul
xchg
cmp
sbb
push
sub
sub
fucomp
lret
lahf
dec
ljmp
repz
jecxz
jb
mov
sbb
sub
mov
mov
mov
mov
mov
js
inc
mov
dec
jno
mov
add
inc
in
pop
jecxz
xor
fs
xor
xchg
cli
inc
push
sub
test
iret
and
sub
jl
popf
and
mov
cmp
addr16
shr
stos
das
push
shll
sti
scas
xchg
push
or
sub
sub
push
les
adc
push
cmpsl
or
inc
xchg
or
dec
jne
inc
fdivl
xchg
mov
jge
and
pop
test
sub
add
mov
adcl
aaa
stos
out
jl
dec
fdivrl
jmp
je
out
push
aas
bound
inc
mov
mov
out
xor
scas
xchg
push
aam
push
setge
scas
mov
jge
xchg
xchg
add
jb
and
lret
sbb
cwtl
push
jle
push
or
nop
mov
inc
adc
ja
and
loope
xchg
mul
xlat
pop
outsb
pop
add
or
dec
stc
lods
ja
and
adc
cmp
leave
cmc
dec
fildll
dec
insl
int3
mov
out
mov
out
jmp
enter
push
inc
mov
and
dec
jg
mov
dec
add
pushf
pop
test
xor
test
push
sahf
pop
pusha
in
cmpsb
leave
psllw
xor
imul
mov
pop
sub
insb
insb
aam
fwait
push
idivb
rclb
aam
mov
shrl
adc
adc
test
and
inc
aaa
push
jae
mov
rorb
jbe
cmp
sahf
push
call
shl
leave
jbe
xchg
xchg
dec
jp
rcr
xchg
movsb
sub
shl
push
clc
xor
and
ret
push
push
fildll
mov
jno
xchg
sub
or
insb
je
mulb
xchg
insb
scas
pop
sub
shlb
ffreep
sahf
gs
jge
sahf
push
ret
xor
test
mov
push
pop
xor
mov
jle
mov
fwait
out
mov
fldt
xchg
push
xor
movsl
pop
ljmp
movsl
push
out
dec
stos
xor
pop
add
jne
push
pop
sahf
xor
xchg
lahf
add
les
jmp
xchg
icebp
dec
push
aaa
mov
dec
lods
jp
sub
sbb
sub
clc
mov
sbb
clc
sbb
push
xor
push
cmp
sbb
jns
pop
cli
jecxz
gs
mov
xchg
pusha
test
test
outsl
fmull
imul
popf
out
pop
dec
inc
test
mov
les
mov
add
cmp
pop
imul
cmp
orb
fdivrs
aam
divl
out
stos
add
insl
sbb
imul
adc
ja
shrl
pop
repnz
sbb
movsb
inc
pop
cmpsl
xchg
in
call
repz
xchg
sbb
fisttps
mov
loop
fucomp
xchg
rorb
aam
shll
push
movl
jb
push
lcall
cltd
popf
in
loop
aas
mov
pusha
jmp
cltd
repz
aad
punpckhwd
arpl
mov
pop
loope
push
sbb
mov
ss
out
mov
xchg
pop
ja
xchg
jb
jge
push
je
push
sub
pop
popa
movl
mov
mov
sar
cmpsl
mov
movsb
insl
subb
enter
jmp
fidivrs
push
jno
pop
lret
mov
jo
cmp
add
in
xor
orl
mov
popf
test
push
ljmp
xchg
inc
or
add
dec
lds
xor
mov
lods
gs
lret
xchg
mov
jno
sbb
imul
ror
pop
cmp
flds
mov
pop
mov
xchg
pop
dec
dec
sti
xchg
mov
mov
mov
mov
xor
orb
push
stos
and
lods
pusha
mov
jmp
das
and
lods
into
and
pop
repnz
mov
fs
ficoml
test
mov
mov
mov
xchg
mov
mov
xor
scas
jne
cmp
fmulp
in
mov
and
add
ret
sti
pop
mov
ficoml
xchg
and
stos
clc
in
movsl
lds
add
sbb
cli
push
adc
fldln2
filds
punpcklbw
outsb
pop
aad
cs
int
lahf
push
shr
cmp
aas
roll
dec
jbe
xor
or
jns
push
mov
xchg
rorb
inc
or
mov
push
idivl
insb
mov
loope
mov
add
push
sub
aas
nop
fs
push
push
cli
testw
lahf
out
xor
sub
leave
pusha
jae
push
cs
xchg
popf
mov
mov
pop
or
cmp
mov
cltd
adc
xor
insb
call
mov
js
fld
dec
or
mov
jb
xor
rcrl
xchg
std
mov
mov
stc
inc
lahf
xor
rcrb
js
shrb
push
pusha
enter
movsb
adc
mov
f2xm1
sbb
jo
or
mov
int3
pop
out
and
gs
movsl
jle
mov
add
scas
pop
aad
jno
add
pop
mov
scas
jne
fists
in
dec
cs
inc
sti
or
sub
xchg
stos
out
fnstcw
dec
cmp
push
xchg
bound
xchg
loop
cmp
pop
insl
scas
inc
sbb
xchg
dec
push
icebp
shll
add
ret
sbb
ds
jg
negl
add
jg
inc
and
inc
lods
jae
inc
into
ret
push
call
retw
inc
pop
lods
mov
jo
dec
pop
inc
mov
push
xor
or
add
cmp
xor
movsb
data16
adcl
add
add
xchg
mov
int3
aam
lods
shl
or
insl
pop
lods
mov
pop
lock
rolb
aaa
pop
repnz
lret
jge
or
loope
int
popf
cltd
xchg
and
das
mov
add
push
jb
jge
rcrl
std
jle
xchg
jge
movsl
ds
sbb
xchg
fisubrl
pop
inc
or
mov
shrb
mov
jecxz
cmp
pop
add
pop
into
and
fidivs
dec
cmpsl
add
in
jg
imul
popa
daa
or
dec
mov
jbe
scas
in
fs
mov
lahf
ja
enter
pop
jmp
popf
mov
or
incb
add
dec
sub
push
movsb
dec
add
inc
mov
shlb
xor
in
rcll
js
push
mov
fnstsw
sbb
shl
push
inc
and
es
sbb
stos
push
mov
lea
jmp
movsl
sub
xchg
inc
xchg
outsl
mov
lock
xor
adc
push
movsl
ja
mov
inc
push
cmc
int3
inc
divb
cltd
call
pop
mov
xor
mov
mov
bound
loop
xchg
adc
xchg
subb
pop
inc
dec
es
clc
push
push
xchg
sahf
push
mov
sub
xchg
mov
mov
mov
clc
leave
fcoms
push
jb
and
roll
sub
push
out
out
inc
shlb
movsb
mov
in
mov
push
rcll
pop
div
das
mov
mov
adc
mov
std
lea
sub
add
pop
sbb
and
pushf
pusha
jp
icebp
add
lret
cmpsb
sub
add
jle
or
cmp
pop
rolb
mov
lret
inc
es
aas
dec
dec
dec
mov
mov
pusha
push
mov
sahf
cmpsb
push
mov
push
mov
jbe
push
fcmovnbe
in
int3
vaddsd
jno
pushf
ret
scas
push
leave
fimull
and
sarl
xor
lcall
stc
sbb
aad
mulb
mov
shlb
push
mov
shrb
sbb
or
cmc
adc
aam
xchg
mov
push
fdivl
leave
sub
sbb
cld
lods
push
test
sbb
pop
clc
sub
jne
mov
sub
dec
fwait
inc
dec
jns
repz
mov
inc
cmp
xlat
push
or
popa
mov
leave
cmc
lods
mov
out
adc
mov
sbb
ret
inc
scas
test
mov
mov
cmp
inc
ja
jge
pop
les
add
arpl
or
mov
adc
cwtl
fdivrs
pop
inc
mov
movsl
push
lock
sarl
sbb
ljmp
xchg
push
sub
test
xor
push
adcb
call
js
pushf
aaa
jp
arpl
mov
pop
fldt
or
cmpsb
and
lret
xor
rcll
cmp
jg
jp
popa
or
add
int3
in
jge
or
dec
pushf
cmp
cld
sbb
out
sub
iret
stos
pop
mov
filds
jb
movsl
jl
adc
pop
jnp
ljmp
xor
rclb
xor
jge
sbb
push
imul
in
cmp
insb
mov
inc
push
ffreep
push
mov
ss
fsubrs
xchg
fisttpll
arpl
ret
int
mov
sbb
xor
lods
ret
xor
xchg
fcmovnu
jne
push
cs
push
add
aaa
lcall
dec
aam
je
out
dec
lock
cmpsb
xor
jo
xor
mov
mov
xchg
loope
or
sbbl
cmpsl
rcr
push
mov
inc
roll
xchg
sbb
in
out
cmp
out
push
lret
stos
imul
sbb
adcb
inc
cs
rcrl
inc
lcall
repz
xlat
pop
jp
jle
ds
push
mov
sbb
int3
or
pop
fidivl
sarb
movsl
iret
add
fsubl
loope
inc
pop
loope
jmp
pusha
lods
push
pop
push
pop
stos
popl
fadd
data16
mov
add
inc
jl
lods
dec
cmp
push
push
lahf
ret
faddl
and
cmp
popf
mov
xchg
xchg
ficoms
loope
jne
adc
inc
jbe
sub
push
fsubrl
inc
add
and
mov
aad
sahf
cs
jno,pn
sti
or
mov
push
jnp
sbb
cld
mov
push
xchg
push
dec
ds
cmc
insb
cltd
mov
shlb
jle
adc
insb
loope
dec
lahf
mov
call
dec
cmp
lock
out
aaa
lods
adc
jo
push
sbbl
push
cmp
leave
mov
xchg
inc
push
mov
mov
jmp
dec
scas
xor
dec
rcr
pushl
jbe
inc
jne
push
sbb
jl
in
insb
mov
lret
in
inc
push
cwtl
or
gs
int
rorl
scas
dec
and
mov
inc
lar
mov
pop
shr
imulb
mov
mov
pop
pusha
push
push
xor
in
mov
mov
jns
push
mov
shrl
fsubl
sbb
xchg
loope
jne
nop
popf
jp
inc
add
mov
int3
jmp
jmp
push
leave
fwait
mov
mov
arpl
add
fisttpll
aas
jne
mov
jg
data16
sub
jmp
lods
fiadds
aaa
rorl
push
jbe
jnp
sti
jmp
mov
and
popf
cltd
paddq
imul
mov
add
fcmovb
xor
fcmovnbe
bound
cmpsl
pushf
xor
mov
addr16
pop
daa
mov
adc
idiv
add
add
dec
popf
test
sub
sub
fldenv
xor
mov
jge
das
adc
dec
and
fists
and
out
push
mov
ljmp
call
push
push
repnz
mov
and
sbb
hlt
xor
mov
cld
movsl
xchg
pop
mov
push
enter
cmp
and
mov
pushf
js
data16
js
stc
mov
mov
push
sbb
jae
and
js
jns
rol
jmp
adc
jns
mov
jne
adc
xchg
mov
sahf
jge
loop
mov
das
adc
addb
ss
mov
test
mov
adcl
jg
test
movsl
aaa
ret
sahf
jl
call
push
xor
aam
stc
div
aaa
sub
loop
js
sbb
xlat
mov
sub
push
push
push
mov
jno
bswap
or
test
iret
dec
mov
xorl
fnstenv
pushf
pop
or
inc
rcrl
subl
scas
jp
push
pop
pop
adc
out
sbb
fstps
notb
cmp
dec
dec
sub
add
js
decl
shlb
mov
pop
test
lods
sti
mov
ret
jno
and
ljmp
les
and
adc
jne
jbe
mov
inc
or
and
xor
notb
inc
mov
outsl
push
data16
sbb
pusha
xor
jle
int
mov
dec
inc
shrb
mov
imul
jg
sub
pushf
pop
pop
add
mov
dec
arpl
xchg
sti
hlt
out
jbe
popa
mov
insl
xchg
stos
xchg
dec
popf
xorb
dec
fstpl
sub
mov
adc
out
mov
gs
mov
ret
and
xchg
xchg
cmp
xchg
es
pop
sub
fsubl
mov
cmp
ss
sub
lods
pop
cwtl
or
rorb
xchg
dec
xor
cmp
mov
into
mov
push
xchg
cmpsl
sub
sbb
out
push
shrb
lods
dec
pop
ficompl
insl
add
cmp
ja
xor
adc
inc
lcall
iret
xor
scas
popa
pop
adc
inc
adc
repnz
mov
pop
out
mov
sahf
inc
inc
int
mov
push
test
cmp
fwait
xor
sub
dec
sbb
xchg
pop
aas
cmpsl
enter
sahf
aam
outsb
in
pop
in
mov
cs
flds
out
push
cltd
es
sbb
or
jnp
hlt
push
jbe
mov
test
xchg
pop
jecxz
into
mov
stos
roll
dec
stos
sub
shl
jle
stos
xchg
or
xorl
add
das
sahf
or
mov
loop
scas
sbb
pop
stc
inc
pushf
cmp
in
add
clc
cmp
adc
adc
mov
xchg
lret
lods
jne
pop
aaa
ret
int
mov
addr16
shlb
jg
js
cmp
mov
cltd
jp
imul
call
sti
dec
adc
jno
andb
cmpsb
mov
dec
sub
pop
inc
ret
roll
inc
stos
mov
int3
fistpll
mov
or
out
add
jnp
dec
pusha
ja
cld
cmp
push
push
aas
fwait
dec
inc
sub
shll
in
xchg
adc
inc
sub
test
pop
xor
adc
pop
insl
xor
pop
xchg
in
push
mov
push
pop
mov
add
sub
xchg
add
mov
cmp
dec
lret
fwait
pop
test
inc
xor
outsb
les
enter
xor
mov
ljmp
dec
adc
jo
cmp
je
int
daa
xor
cmpsl
and
sub
fcmovnbe
fdivrl
out
mov
jl
jnp
sbb
in
leave
xchg
inc
xchg
mov
or
enter
bound
fnstcw
jns
fsubrl
outsl
scas
rcll
addr16
mov
ljmp
pop
subl
loop
or
in
aaa
dec
xchg
enter
xor
dec
mov
aas
push
jno
das
popa
shll
mov
dec
movsb
pop
in
sub
les
sub
js
push
pop
push
testb
enter
das
push
mov
pop
es
push
lods
sbb
jbe
insl
mov
inc
fcompl
mov
mov
iret
inc
or
xor
xchg
sbb
adc
mov
movsl
pop
pushf
inc
movsb
xchg
mov
cmp
or
mov
sbb
aad
cmp
mov
in
cmp
out
ljmp
pop
mov
cwtl
xor
in
mov
push
leave
jb
cmp
push
mov
lds
sahf
fidivrs
add
inc
jle
push
sub
iret
mov
push
inc
cli
pop
lcall
pushf
sbb
in
cwtl
adc
loopne
ret
cmp
sub
test
mov
and
rcl
lods
or
aad
popf
sub
nop
pop
jae
roll
sahf
add
pop
and
in
mov
push
inc
in
adc
shlb
nop
loope
sarl
pop
mov
roll
movsb
jmp
add
mov
push
inc
movntps
jb
aam
shl
sbb
sub
daa
cmpsl
fimull
ss
cmp
cmp
mov
fsubrl
iret
popa
mov
xor
inc
adc
ljmp
mov
dec
mov
jbe
add
je
cmp
les
ljmp
cld
dec
xchg
sbb
aam
xor
and
icebp
cmc
jp
dec
jp
jl
jg
sbb
push
jmp
in
pop
xchg
push
cmpsl
push
cld
les
fdiv
inc
mov
decl
lods
rol
ljmp
xor
loopne
fisubrl
mov
out
add
cmp
nop
lds
lcall
fstp
xchg
test
in
popf
mov
repz
aam
rorb
test
xchg
lea
xor
xchg
adc
sbbb
mov
insl
lods
movsb
inc
scas
jge
insb
clc
adc
movsb
mov
idivb
jns
cmp
push
js
mov
mov
fs
add
js
lods
scas
jg
and
xchg
and
in
pop
aam
adc
dec
rorl
sub
xchg
and
adc
jle
push
scas
fidivs
pushf
mull
hlt
mov
repz
sbb
clc
cltd
adc
lods
push
xor
imul
mov
imul
sub
mov
pop
stos
push
orb
fstl
rcr
inc
jbe
lret
sarl
pop
stos
xchg
adc
arpl
out
xor
add
pop
fwait
inc
stc
adc
add
loopne
test
xor
jmp
popa
xchg
push
xor
imul
ficoms
and
mov
jb
enter
push
movsl
pop
xor
imul
jb
mov
fcmovbe
pop
mov
repz
sub
mov
fsubp
subb
pushf
fcmovnu
inc
shlb
and
test
leave
mov
sub
sub
in
jg
or
in
std
push
scas
scas
push
adc
push
jnp
jg
sbb
pop
ljmp
aad
adc
mov
shrl
mov
test
xchg
ss
lahf
cs
add
lods
xchg
inc
adc
push
sub
pop
rcrl
andnps
mov
add
bnd
ss
mov
cmp
pushf
ja
sub
mov
jmp
iret
cmp
mov
pop
imul
repz
xor
mov
test
sub
dec
orl
or
test
cli
mov
sbb
in
dec
push
aam
ret
out
dec
adc
adc
fwait
das
add
xor
push
xor
and
sub
mov
inc
mov
cltd
cld
push
fidivrl
sbb
jg
jge
es
arpl
imul
popf
es
inc
jge
add
sub
fdivs
data16
enter
loop
pop
inc
andb
orl
lret
dec
xlat
lods
ror
pop
or
les
xchg
dec
xchg
push
mov
mov
dec
mov
idiv
loop
cmp
fildl
dec
repz
inc
addr16
dec
mov
lock
sbb
out
es
loope
dec
push
push
mov
dec
dec
insb
cld
leave
std
jbe
pushf
mov
leave
daa
pop
cmpsl
and
hlt
aas
roll
and
adc
mov
cs
shlb
dec
push
sarl
sub
mov
insb
bswap
or
pop
movsb
add
or
sbb
rorb
pop
std
in
out
ret
orl
adc
and
inc
scas
in
and
dec
sub
addr16
test
out
sbb
test
mov
arpl
jp
or
xor
subl
mov
pusha
pop
adc
push
inc
push
cli
ret
xor
mov
cli
adc
add
cmp
jp
mov
mov
push
cmpsl
add
xor
ret
pop
mov
jl
gs
outsl
inc
in
mov
lods
push
movsb
cmp
xor
mov
mov
sarl
cli
cltd
subl
add
sub
mov
rcr
and
scas
fmul
xchg
pop
add
cwtl
sub
sub
ret
pop
mov
faddl
cmp
cmp
push
outsb
or
mov
arpl
xchg
mov
aad
add
aas
test
jno
mov
lds
xchg
jo
or
inc
push
adc
adc
loope
xchg
jae
js
popf
jle
pop
add
jge
sub
inc
outsb
dec
shlb
xor
and
incb
jl
push
roll
mov
jmp
out
or
adcb
add
jo
ret
fisttpl
mov
fwait
cmpsl
in
cmpsl
add
js
push
inc
xor
cmp
add
sbb
sbb
int
fsubl
sbb
push
call
insb
sbb
inc
or
imul
push
xchg
inc
jns
js
fisubrl
mov
xlat
and
stc
in
mov
jns
loopne
sbb
mov
imull
dec
sar
sub
stos
sbb
or
daa
xchg
pop
dec
mov
iret
cltd
rolb
imul
outsl
dec
xchg
sub
mov
jnp
and
cmpsb
loop
xchg
lret
fistl
add
mov
xor
jle
xchg
push
bound
repnz
pop
mov
or
sub
ss
mov
popf
sub
sub
fidivrs
adc
pushf
mov
pop
add
lret
shlb
mov
add
shlb
dec
mov
test
lock
pop
lcall
add
sbb
nop
fwait
push
sbb
repz
push
or
xchg
daa
into
sahf
jne
or
inc
or
pop
inc
sub
jns
scas
ffreep
inc
inc
jae
lcall
add
enter
and
mov
or
lea
xor
out
daa
insl
xor
xchg
cmpsl
xor
cmp
aaa
stos
lret
mov
lret
mov
sbb
and
push
jno
loopne
inc
sbb
movl
subb
push
out
xor
fsubr
cmp
cli
or
fisttpll
jl
ljmp
dec
in
clc
fisubrl
mov
dec
dec
decl
bound
dec
in
adc
in
add
jae
push
in
outsl
and
cwtl
cmpsl
jg
xchg
push
cmc
sub
xchg
das
cwtl
push
popa
ds
mov
jns
cmp
jl
dec
shrb
xor
mov
mov
push
test
and
jg
mov
push
adc
jecxz
sub
sarl
cmpsb
stos
daa
es
out
sahf
xlat
jecxz
adcl
jge
and
fcoml
enter
inc
std
in
lods
mov
jecxz
je
js
fyl2xp1
sub
shlb
test
je
sub
jae
pushf
mov
das
aam
sbb
cmp
cmp
jp
or
xchg
lods
inc
sbb
mov
mov
in
lahf
xor
pop
lret
loopne
in
test
daa
ds
aad
test
pop
adcl
jge
cmp
mov
adcl
popa
push
cmp
sub
and
adc
or
xchg
stc
push
mov
cmp
out
pop
cmpsb
sub
push
lcall
pop
cmpl
jg
jbe
fstl
mov
ja
pop
and
aad
xchg
mov
jl
inc
rolb
jnp
xor
xor
cmp
cwtl
cmp
dec
push
jmp
mov
push
loopne
jae
int
mov
jno
in
xlat
cmpsb
mov
add
dec
orb
sbb
xchg
inc
inc
sbb
shlb
add
neg
adc
mov
cwtl
pusha
pop
loope
add
aas
fdivrl
std
cmp
xchg
or
fs
sbb
mov
pop
clc
mov
inc
into
stc
dec
es
xor
pop
mov
je
inc
stc
lcall
push
jp
outsb
fcomps
fidivrl
push
adc
mov
fldcw
mov
lret
or
mov
nop
mov
dec
out
fisttpl
out
std
mov
jg
jmp
add
in
or
lock
push
dec
dec
mov
cmp
mov
cmpsl
push
pusha
repnz
and
mov
test
jno
jg
adc
push
pushf
fnsave
or
jle
dec
divl
mov
pusha
add
cmc
outsb
adc
out
push
xor
pop
inc
inc
cmp
aaa
dec
push
aaa
add
xchg
xchg
insl
inc
out
incl
mov
dec
push
mov
pop
push
push
and
adc
add
shl
jnp
push
ret
nop
and
cld
sub
mov
fimull
sub
notb
cld
mov
ficompl
push
mov
jl
mov
push
mov
push
mov
jge
dec
fucomip
push
ss
xchg
fcompl
sarb
outsl
jge
mov
mov
hlt
lds
loop
outsb
inc
cltd
inc
loope
or
jge
or
inc
fbstp
push
and
sbb
daa
cmp
clc
shrl
lds
jg
and
adc
push
jo
dec
sub
aam
dec
mov
outsb
lods
stos
rcll
lock
cld
fs
pop
test
repnz
and
inc
push
sbb
pop
js
pop
pop
sahf
repz
test
mov
popa
repz
mov
lods
enter
mov
phaddd
lock
movsb
adc
mov
in
add
test
int3
mov
jge
ret
mov
sbb
mov
sbb
in
add
jl
mov
sbb
add
pop
ficoml
fcomip
sbb
das
test
lock
mov
outsb
xchg
fldt
lcall
bound
pop
mov
push
mov
dec
mov
or
or
adc
and
jae
stos
ja
repnz
sti
int3
ss
data16
mov
and
mov
loope
ficoml
repnz
inc
jno
xor
sub
decb
cmp
cmp
mov
xchg
push
imul
icebp
leave
inc
sarb
ret
cmpsl
add
sbb
inc
jecxz
mov
jmp
andb
mov
mov
ret
mov
inc
nop
lcall
leave
jecxz
jg
test
decb
adc
in
or
sbb
jp
mov
data16
aam
push
push
dec
shlb
xor
loop
mov
xor
frstor
clc
das
cld
push
loopne
or
xchg
inc
pusha
mov
stos
in
push
pushf
cmpb
xchg
jp
addr16
movsl
xor
adc
xor
cmp
stos
push
pop
add
inc
fwait
loop
mov
jb
xor
or
cmc
push
ror
aas
sub
dec
cmp
dec
call
gs
inc
cmp
lahf
hlt
ret
scas
and
jo
cmpsb
mov
cltd
inc
cmp
mull
es
inc
flds
and
notb
es
decl
repnz
out
imul
push
mov
test
pop
loop
stos
dec
sahf
xchg
and
test
push
adc
cmp
mov
movsb
xbegin
incl
xchg
adc
fimuls
cmp
jp
testb
xor
push
pushf
cmovbe
dec
mov
add
icebp
cs
fdivs
pusha
mov
cmp
pop
add
sbb
mov
xchg
cmp
mov
dec
jmp
jmp
pop
pop
xchg
mov
jl
mov
xor
test
xlat
out
jno
loope
mov
sub
testl
es
test
ja
imul
adc
cmp
lcall
es
and
dec
loope
xchg
pop
data16
daa
popa
in
shr
lret
or
test
jnp
pop
js
out
rcll
sub
add
or
or
push
shrl
fisubs
inc
cs
icebp
push
imul
fwait
inc
pop
sbb
roll
dec
mov
xchg
sub
cmpsl
push
leave
xchg
mov
sbb
loop
and
or
in
sarl
addb
jns
mov
or
pop
sbb
pop
inc
or
jno
sub
imul
mov
mov
xor
mov
cmp
leavew
rclb
in
adc
or
cli
mov
test
mov
scas
and
dec
pop
sub
fbld
insl
inc
fdivs
push
fnstcw
imul
or
cmpsl
bnd
dec
ljmp
dec
idivb
add
leave
ds
push
mov
pop
rcr
mov
jmp
xlat
adc
jp
xor
repnz
test
stc
aad
insl
mov
test
mov
mov
ja
mov
fsubrl
fdivs
mov
mov
sbb
ss
sbb
clc
mov
mov
mov
jmp
push
cld
sahf
test
cmp
xchg
jnp
mov
inc
cmp
inc
insb
mov
adc
jne
out
or
int
sbb
xor
icebp
test
arpl
popa
sti
insl
icebp
cmp
inc
dec
jo
jle
sub
push
test
lret
orb
jge
adc
mov
sti
xor
sahf
sbb
add
fidivrs
mov
jnp
sbb
adc
jge
fistpll
dec
mov
mov
movsl
icebp
push
fdivrl
repnz
out
jo
xchg
add
mov
ret
fists
insb
push
pop
fldl
push
or
fwait
mov
jbe
mov
fdivs
mov
adc
pop
les
jnp
adc
mov
cli
and
jns
pop
aad
or
mov
cwtl
out
pop
dec
mov
adc
jp
push
add
and
cmp
sub
push
stos
aam
mov
into
es
mov
inc
xchg
in
test
aam
aad
mov
movsl
insl
ds
loope
js
mov
lret
aas
pushf
adc
mov
mov
xor
test
jae
push
xor
mov
fadds
popw
inc
mov
in
mov
in
jb
add
sbb
iret
mov
and
fs
adc
repnz
daa
imul
inc
addb
sbb
fstps
and
cmp
cmp
cmpsb
add
dec
out
xor
pop
or
xor
pop
in
inc
xchg
cmc
out
sbb
push
pop
andb
push
push
add
push
mov
sbb
jp
cmp
mov
stos
aam
imul
cli
xor
mov
push
mov
insl
push
xchg
jmp
das
aas
roll
loope
xchg
sarb
pop
xor
xor
jae
fsubrl
cmpb
addr16
fidivl
sub
cld
mov
call
mov
sbb
mov
and
adc
es
or
lret
mov
outsl
xchg
push
dec
sbb
outsb
cmp
xor
jb
std
flds
lock
outsb
mov
pop
xor
mov
jno
jl
lret
xor
or
stos
lods
imull
mov
out
dec
ret
cli
les
ret
mov
jbe
ja
mov
sub
xchg
inc
and
jne
jl
mov
cmpsb
dec
stos
out
jnp
xchg
test
jbe
add
cmp
sub
clc
mov
add
xor
ficomps
arpl
ljmp
or
push
mov
xchg
push
rcl
add
out
sahf
dec
test
test
mov
dec
cmp
mov
mov
stos
hlt
mov
fistpll
das
dec
shlb
push
or
cmpsb
pop
dec
inc
outsb
sbb
or
or
cltd
push
fisttpl
push
stc
and
xchg
xchg
inc
xchg
or
jp
xchg
adc
popa
add
mov
jle
xorl
cmp
adc
dec
cmc
sbb
jge
imul
mov
data16
insl
repnz
test
ja
sub
lea
lods
add
mov
mov
mov
inc
xor
outsl
inc
and
test
popa
inc
xchg
fwait
shlb
sub
mov
enter
adc
out
dec
ds
in
and
aam
mov
inc
les
imul
shlb
or
xor
adc
mov
out
mov
movsl
xchg
or
dec
cmpsb
sbb
xor
adc
pop
mov
push
pop
subl
mov
and
call
les
nop
push
xchg
push
pop
fs
mov
push
jmp
repnz
lods
fstps
lcall
scas
pushf
lea
cltd
mov
je
addr16
or
mov
lahf
cmp
fwait
mov
inc
pop
rcrb
rcrb
fwait
inc
int3
lret
jl
cmp
mov
dec
jle
push
roll
lret
sbb
hlt
mov
icebp
xchg
mov
pop
cmp
push
lods
testl
and
std
imul
setns
jmp
insl
xchg
cmp
mov
jae
adc
xchg
pop
ret
mov
lret
sbb
out
rcr
cmpsl
rsqrtps
sbb
lods
sbb
arpl
and
inc
sub
mov
cmp
cltd
cwtl
cmp
lds
mov
pop
fcompl
pusha
imul
pop
testb
xor
icebp
cld
sti
arpl
add
inc
ret
mov
scas
call
jmp
sub
pop
test
sub
insb
mov
repz
in
xor
or
and
cmp
adc
or
mov
jecxz
loopne
pop
int3
dec
jle
xchg
and
jnp
jge
xor
ljmp
xor
xchg
test
mov
pop
adc
mov
mov
mov
int3
mov
rcrb
mov
cwtl
lret
sbbl
mov
inc
push
jmp
or
jo
sbb
mov
repnz
xor
cltd
cmp
fisubrs
inc
and
mov
jne
and
mov
sbb
pop
adc
mov
addl
popf
ret
std
psubusb
xor
jb
adc
outsb
dec
mov
adc
xchg
flds
inc
sub
or
outsb
and
adc
xor
cmp
in
lret
push
out
rcrb
pusha
outsl
jno
cmc
xlat
inc
out
fs
pop
mov
add
fisttps
and
shll
bound
popf
xchg
push
cmp
cmp
outsb
inc
xchg
mov
xlat
lds
xchg
addl
cmp
pop
fwait
aad
lods
push
lods
push
lea
aam
mov
and
sbb
js
andb
jge
mov
sbb
adc
push
mov
jns
add
jns
xor
sbb
xchg
mov
into
pop
add
or
jmp
mov
push
lock
into
xchg
fistpl
cld
fucomip
lret
jbe
or
mov
movsb
inc
dec
push
ja
ja
sahf
push
dec
add
cmpsl
mov
mov
mov
fisttps
pop
jo
jecxz
xor
sbb
mov
dec
icebp
inc
out
inc
enter
add
adc
movsl
add
pop
dec
out
sub
mov
out
dec
stos
cmc
jge
xchg
sub
jge
and
inc
out
cld
clc
and
jmp
mov
in
mov
pop
clc
cmp
test
inc
lea
shl
imul
mov
in
jno
aad
mov
mov
adc
jp
ficoms
cltd
xchg
xor
jbe
fdivp
and
das
cwtl
lods
in
pop
std
mov
sahf
mov
xchg
mov
xchg
lahf
cmp
fstpt
lahf
lea
es
xchg
shlb
dec
inc
mov
jns
fwait
mov
icebp
sub
loope
lea
jno
loopne
out
sub
add
lods
inc
cmp
movsl
mov
lret
or
push
and
jmp
sbb
fstpl
into
outsl
scas
sbb
dec
movsl
addr16
xlat
dec
sub
push
jl
ljmp
rcrl
pushaw
ja
jae
insb
push
push
scas
popa
adc
mov
sub
sbb
jne
or
enter
psubsw
notb
arpl
xchg
mov
xor
cmp
pop
icebp
add
shlb
add
xchg
dec
pop
inc
mov
or
aad
xchg
xor
pop
rorl
imul
adc
jg
sub
sub
push
dec
ss
or
in
xchg
popf
inc
mov
xlat
in
fmul
gs
nop
and
cmp
and
cli
hlt
push
imulb
call
stos
adc
lods
pop
xchg
jecxz
out
cmpsb
loop
sbb
push
gs
xor
push
lret
test
inc
fidivs
xor
cld
adc
repz
lds
stos
jno
int
mov
out
sbb
pop
mov
xorb
aam
cmpsl
push
dec
xchg
sbb
into
cwtl
data16
test
sub
jge
or
mov
rorl
rcl
or
daa
test
mov
nop
cld
bound
sarb
cmp
dec
mov
add
test
int3
fstl
popa
out
data16
ds
and
add
sbb
in
sub
jb
or
repnz
mov
push
test
lods
cmc
or
dec
push
js
daa
inc
int
jns
test
xchg
inc
pop
adcl
cwtl
sub
xor
adc
jae
fucomi
lcall
insl
int3
aaa
xchg
fdivl
sbb
pop
js
out
cmp
dec
sbb
mov
scas
dec
ds
lock
inc
sahf
stos
pop
je
scas
and
pop
xchg
imul
sbb
out
dec
xchg
fiadds
dec
test
jmp
sbb
fsub
dec
sub
push
mov
dec
rorb
jg
lahf
cmp
stc
sti
cmpsb
pop
das
sbbl
mov
push
call
or
mov
inc
adc
pop
shr
cmovae
mov
movsb
dec
roll
push
movsl
cmp
ljmp
mov
cmc
imul
add
test
shlb
fmul
in
popl
xchg
pop
mov
stos
xchg
movsb
pop
movsb
insb
mov
mov
xlat
pop
xlat
jbe
fimuls
xor
lahf
jne
sahf
out
pop
pop
loop
enter
repnz
test
pop
mov
scas
dec
dec
or
cmp
daa
test
rol
inc
icebp
jns
sbbl
in
shlb
or
xchg
movsl
cmp
outsb
ret
mov
out
notb
push
inc
jg
fnstenv
cmp
dec
test
push
pop
shrb
sbb
inc
les
mov
into
cmp
dec
add
sub
adc
xorl
fcoms
ljmp
sub
out
xorl
ljmp
fs
movsb
jne
add
mulb
cmp
aas
xchg
jg
aam
pushf
lcall
xor
ds
and
leave
fyl2xp1
loope
push
js
mov
mov
fisttps
decl
adc
or
mov
cmpsb
faddl
jl
sub
aam
nop
stos
shlb
lods
add
mov
cwtl
pop
inc
test
inc
push
in
sahf
mov
jecxz
mov
mov
xchg
flds
mov
test
and
leave
jle
ds
sbb
call
int
or
jns
mov
or
rcrb
rorl
cmp
outsb
stos
iret
loope
push
sarl
mov
pop
das
popf
mov
push
mov
loope
inc
fdiv
mov
dec
jne
add
push
cmp
fisubrs
jns
mov
pop
out
aaa
scas
lods
mov
inc
frstor
jns
es
xor
shll
sbb
adc
testb
int
addr16
cmp
paddw
lds
push
lds
test
add
sbb
cs
cmp
add
jbe
cmp
jge
ret
push
ja
cmp
imul
push
in
mov
call
xor
xor
ja
scas
test
mov
xchg
jg
or
jl
push
xor
out
mov
and
mov
cld
lods
pop
into
jmp
push
push
leave
dec
les
lods
mov
call
aaa
subb
roll
push
and
jae
mov
add
and
cmp
mov
jae
sbb
push
sbb
into
stos
pushf
lds
pop
cltd
insl
add
jge
insl
push
dec
lods
jae
pushf
add
jb
test
push
xor
mov
mov
scas
sbb
inc
jmp
cmpsl
popa
lahf
sub
mov
mov
loope
xor
iret
pop
push
mov
out
push
mov
dec
cltd
mov
lcall
mov
sahf
aaa
lahf
mov
add
fcomp
lods
shl
jle
sbb
cld
fcmovbe
out
push
sub
test
icebp
jg
cwtl
lret
test
mov
xchg
shlb
subb
mov
test
pop
stos
push
fmuls
push
pop
loop
std
dec
test
dec
cmp
into
xchg
add
jne
pop
mov
iret
je
out
inc
jl
xchg
xor
shl
ret
pop
loop
jno
sbb
push
dec
dec
mov
mov
mov
dec
sub
jo
bound
jbe
add
ficompl
mov
add
jg
and
inc
inc
pop
jne
jp
sub
mov
repnz
xchg
test
push
push
jg
inc
imul
pop
aam
fcoml
out
xchg
and
dec
xor
sti
pop
xchg
ja
imul
adc
mov
xchg
scas
add
pop
ror
pusha
adc
cwtl
mov
popa
pushf
mov
push
sti
shr
loop
fnstenv
sub
shll
aaa
push
into
fldenv
cmc
xor
push
fiaddl
loopne
decl
push
int3
adc
sbb
hlt
sahf
cmp
mov
mov
mov
out
mov
and
and
or
mov
loop
cmp
mov
adc
sub
lods
adc
imul
jns
arpl
add
mov
push
sub
mov
and
test
lahf
add
or
sbb
inc
pusha
and
cmp
sbbb
inc
cmp
adc
cmpsb
outsl
dec
xlat
lret
or
xlat
movsb
jno
sub
mov
mov
stos
xchg
mov
jnp
repz
cmpsb
into
jns
shlb
sarl
in
push
scas
scas
xchg
add
out
xchg
xor
lret
ds
aaa
push
pop
stos
aam
xor
jo
rorl
lods
and
mov
inc
sub
loopne
enter
mov
sub
leave
jp
sbb
pop
mov
push
sub
sti
mov
outsl
jnp
cltd
insb
pop
in
out
fs
movsl
jmp
rcr
repz
xchg
sub
mov
imul
mov
lcall
mov
push
mov
dec
adc
and
dec
mul
ja
inc
insb
aaa
jb
inc
aam
fildl
push
hlt
add
and
xchg
xor
cmc
xchg
test
or
mov
insb
jbe
fsubrl
popf
dec
push
mov
les
insb
dec
popf
test
xchg
jge
nop
sub
xchg
roll
in
push
cmc
jo
imul
je
mov
mov
dec
stos
or
xchg
outsb
xchg
fldcw
lods
pusha
in
stos
arpl
xor
add
add
mov
xorl
or
jne
lods
aad
mov
movsb
inc
lcall
xor
pop
loope
leave
out
dec
xchg
push
ret
cltd
mov
push
jle
repnz
cmpsb
enter
pop
mov
mov
xor
xlat
mov
adc
je
pusha
lcall
mov
lds
sbb
popf
jecxz
gs
gs
inc
imul
ss
mov
lods
ror
adc
cwtd
orb
sti
repz
dec
and
jbe
mov
jnp
sbbl
popa
mov
jecxz
add
ljmp
cmp
mov
cmp
mov
or
xchg
popf
fdivrl
pop
clc
mov
push
js
sbb
insl
adc
inc
mov
rol
add
lea
and
into
push
pop
mov
mov
jmp
jecxz
push
mov
ja
insb
xor
test
cmovnp
imul
adc
xchg
add
fdivrp
push
pop
adc
or
mov
and
cmp
in
shll
dec
lock
mov
adc
pop
fnstenv
cmpsl
cmp
mov
enter
in
mov
jne
and
xchg
cmp
push
or
jl
jle
add
cltd
mov
shl
add
mov
rclb
bound
dec
dec
push
or
push
aaa
scas
xchg
addr16
lret
mov
into
push
cmpsb
js
mov
xor
in
dec
mov
and
fnstsw
loopne
jnp
xchg
xchg
nop
cltd
xchg
mov
add
bound
sub
insb
jmp
add
dec
ficoms
mov
and
mov
aaa
pop
fstpt
mov
inc
or
popf
or
fdivr
mov
jl
call
stos
cmp
pusha
in
xchg
repnz
adc
xor
xchg
xchg
divb
jecxz
mov
stos
daa
mov
or
adc
fcomip
or
popa
jecxz
clc
or
dec
push
in
xchg
orl
xor
jo
test
leave
lods
iret
repz
adc
test
jl
or
stos
push
adc
dec
jno
aad
cwtl
xor
xchg
orl
shl
pop
lods
mov
sub
jbe
outsb
stos
mov
xchg
adc
mov
es
mov
xchg
add
sbb
outsb
in
xchg
out
mov
cli
lods
psubd
loopne
test
cmp
imul
add
mov
aad
out
hlt
jl
pusha
mov
shrb
bound
pop
push
jae
mov
in
fcoms
int
mov
scas
lahf
add
jmp
scas
andb
sbb
in
call
scas
scas
loope
je
mov
arpl
cltd
pop
mov
fnstsw
hlt
nop
push
jne
mov
push
aaa
hlt
xchg
dec
xchg
testb
nop
ss
loope
cmpsl
push
inc
insl
pop
mov
ret
lock
jb
cwtl
into
mov
xor
push
mov
cli
adc
xchg
int
xchg
fstps
mov
dec
sahf
mov
ja
mov
sahf
mov
int
mov
pop
outsb
je
push
dec
mov
push
sbb
add
into
ret
mov
dec
cltd
adc
or
mov
in
pop
cmpsb
sbb
mull
push
jno
imul
xor
shrl
add
sbbl
loop
jl
xchg
mov
xorb
mov
push
push
and
insl
inc
push
in
loopne
and
cmpl
jne
inc
in
cmp
insb
push
dec
cmp
mov
arpl
ret
cmc
mov
repz
movb
sub
mov
fsubrl
cwtl
mov
loope
ds
aad
js
mov
adc
incl
push
andl
data16
xchg
dec
sbb
mov
lret
inc
fiadds
fsubrl
movd
sub
es
cmpsb
mov
jle
das
cli
pop
hlt
xchg
add
aad
adc
and
xchg
loope
insl
lods
fdivp
les
add
pop
enter
inc
sarb
test
into
leave
jmp
xchg
insl
fdivl
ds
xchg
scas
adc
outsl
mov
pusha
and
loope
mov
fnstsw
cmp
add
lock
xchg
adc
adc
je
std
shlb
pusha
sarl
dec
mov
pop
xorb
movsb
ja
shlb
pop
ret
scas
adc
and
and
out
add
or
test
cmp
fwait
mov
inc
sti
test
stos
or
mov
pop
cmp
pop
jg
fs
add
idivb
xchg
outsb
icebp
mov
or
xor
xchg
jnp
mov
aad
frstor
xchg
fisubrs
fwait
rolb
jge
insl
jp
jg
insl
ljmp
jbe
in
fidivrs
sti
pushf
inc
push
push
pop
xchg
jb
mov
addr16
push
imul
scas
daa
imul
xor
ss
test
xchg
shll
test
jge
in
cmc
repnz
xor
rcrl
stos
pusha
inc
inc
test
call
ret
jno
popa
mov
ljmp
xor
rclb
jo
or
je
lds
daa
dec
imul
addr16
inc
xor
aas
daa
fwait
rcll
insl
mov
stc
push
in
jo
fidivl
clc
popa
fadds
shrl
adc
cld
in
mov
roll
in
mov
inc
pop
sti
iret
sbb
lods
sub
jns
inc
loopew
push
aam
xor
xor
roll
pop
push
add
push
sub
push
adc
inc
movsl
enter
sub
aas
mov
dec
mov
inc
sub
push
mov
sbb
andl
mov
cmpsl
out
mov
cli
mov
mov
and
inc
fnstenv
dec
pop
js
clc
mov
mov
std
add
jne
jb
out
mov
jge
out
dec
mov
push
jp
out
lods
leave
lcall
jecxz
jbe
int
sti
bound
orps
dec
test
sbb
mov
xor
adc
pop
jo
jo
repnz
pop
in
mov
and
fs
orl
mov
clc
shr
xchg
pop
pop
or
into
and
sbb
int3
mov
cmp
fsubrl
mov
in
lcallw
gs
jecxz
in
cmc
int3
adc
push
into
test
xor
in
sub
xor
xorb
pop
lahf
push
cmp
pusha
rcll
push
fwait
popf
mov
fmuls
mov
les
and
cmp
cmp
hlt
dec
daa
add
sub
int3
cmpsb
sti
adc
dec
adc
jecxz
mov
mov
dec
dec
sub
out
shr
pop
adc
in
push
push
sub
cmpsl
outsl
aam
dec
outsl
sub
xchg
call
jb
movsl
pop
add
jo
je
cmp
cmp
mov
out
adc
adc
ret
fiaddl
andb
adc
test
push
or
pop
mov
jge
ret
cmp
pop
push
movsl
or
pop
xchg
es
pusha
fwait
out
adc
clc
fwait
mov
adc
mov
sub
mov
out
movsl
in
in
push
jo
pop
mov
arpl
or
cld
jnp
insl
inc
popf
insb
addb
and
int3
pusha
insl
mov
jo
aas
ja
mov
mov
daa
mov
les
addr16
in
mov
jne
or
pop
bound
imul
das
daa
mov
lds
rcll
mov
lea
out
pop
enter
xchg
adc
je
pop
icebp
loopne
sarb
add
adcl
cmp
xor
out
ss
lcall
adc
mov
das
push
pop
fsts
adc
mov
jnp
or
dec
xchg
pop
sub
xchg
cmp
sar
jns
into
xlat
addl
cltd
sbb
test
imul
lret
cld
pop
call
pop
jge
lcall
sbb
es
mov
add
in
scas
test
or
mov
sub
sub
cs
mov
sub
loope
pusha
adcb
jp
mov
loopne
jne
push
mov
xor
cwtl
rcrb
jnp
sub
adc
les
lods
pusha
mov
cmpsb
jp
cli
pop
arpl
std
push
mov
add
cmp
pusha
mov
push
inc
dec
ficompl
cld
adc
xor
mov
or
cmpsb
mov
mov
jle
mov
subb
orb
mov
cli
adc
inc
or
lods
jg
dec
stc
pushf
inc
add
xchg
gs
dec
jne
fsub
sub
adc
adc
add
and
in
stc
fwait
dec
and
inc
sti
xchg
lock
aas
push
mov
jmp
lds
mov
xor
scas
xchg
jle
and
pop
jl
lcall
and
mov
push
adc
cld
lcall
push
sbb
cwtl
jae
lock
push
pop
mov
xorb
mov
test
outsl
xchg
adc
fisubrl
xor
or
incl
adc
pop
fidivl
mov
dec
adc
jae
push
sbb
or
mov
xlat
test
mov
cld
lcall
loope
push
cs
xchg
pusha
ret
ret
adc
test
les
inc
popa
adc
inc
sarb
stc
into
sbb
xchg
push
pop
fcomps
adc
mov
mov
jg
or
insl
sub
sbb
mov
les
addr16
aas
mov
loope
mov
mov
bound
mov
ja
adc
das
xchg
sbb
inc
mov
scas
inc
sbb
pop
scas
pop
je
fstl
xor
push
push
scas
pushf
mov
lds
fcomps
jno
dec
jb
cs
pop
lret
mov
mov
das
leave
mov
in
jp
mov
loopne
in
ret
adc
mov
int
cmp
mov
sub
stc
int
aam
xchg
xchg
jne
fildl
inc
jne
sti
ss
je
pop
or
inc
repz
mov
xchg
out
in
dec
pusha
and
mov
mov
mov
jno
xchg
hlt
jno
add
jl
in
fcmovnbe
popf
mov
enter
cmp
je
cmp
dec
mov
push
in
push
stos
outsb
mov
sahf
sub
shll
or
sub
mov
inc
xchg
cs
sahf
gs
pop
gs
xor
imul
sub
stos
sub
dec
fwait
cs
mov
imul
xchg
jns
out
sbb
sub
mov
pop
xorl
ss
push
push
fwait
xor
push
into
icebp
add
adc
out
dec
mov
or
andl
push
and
aam
cltd
jbe
data16
pop
aam
mov
cmpsl
ficomps
imulb
stos
scas
push
mov
repz
je
inc
adc
ljmp
cld
push
adc
sbb
jge
dec
sub
lock
pop
push
ja
jno
int3
mov
shl
leave
out
cmp
fcmovnbe
cmp
pop
xor
sub
mov
es
lods
rclb
push
test
rol
aad
testb
adc
dec
fs
push
aaa
shufps
mov
les
xor
cmpb
out
dec
xor
xchg
push
cld
andl
push
out
popa
popa
ret
cmp
outsl
ret
loope
sbb
and
jne
jle
fildll
sub
bound
iret
addl
mov
loopne
cmpsb
pop
hlt
dec
aaa
dec
mov
xor
pop
dec
dec
mov
out
add
sbb
xchg
jp
jbe,pt
ret
lcall
lods
inc
sahf
cmp
pushf
cmp
test
xchg
sarl
jge
dec
arpl
icebp
rorb
add
scas
jo
clc
mov
xorb
movsb
stos
cwtl
ja
xchg
or
jb
dec
enter
pop
mov
sbb
mov
inc
ja
mov
mov
testb
pop
in
pop
stos
sbb
jmp
pop
mov
add
and
add
mov
xchg
movsl
jmp
mov
cmp
dec
dec
mov
cmp
cmp
mov
mov
adc
lcall
push
dec
dec
jge
mov
dec
in
xor
add
mov
test
push
daa
jno
es
sti
cld
push
subl
add
es
dec
push
and
mov
in
ljmp
jnp
xlat
sub
mov
in
mov
push
pop
and
and
push
leave
in
popf
mov
cmp
orl
xchg
cwtl
jmp
xchg
ret
mov
xchg
mov
sub
sbb
fwait
xor
mov
imul
test
cmpsb
pop
jp
test
jg
xchg
lcallw
in
rclb
adc
ror
addr16
into
jbe
add
xor
repz
sub
out
xchg
lcall
pop
lds
adc
js
mov
or
imul
ds
arpl
orb
mov
adc
addb
ret
scas
lock
xchg
imul
jbe
pop
push
out
mov
or
scas
fnstenv
ljmp
into
and
adc
mov
mov
mov
push
push
std
xor
lahf
in
repz
negb
mov
cmpsl
movsl
ljmp
idiv
in
js
int
jbe
addr16
rolb
gs
jge
xchg
inc
xor
orps
aam
sti
xchg
pop
lea
xor
xorb
lcall
ror
xchg
and
sub
gs
push
push
and
xchg
sub
pop
jmp
pop
jp
addr16
sarl
lods
enter
mov
mov
jge
ret
jg
and
xchg
std
and
hlt
adc
pop
sub
mov
cmp
add
inc
shll
cmpsl
js
insl
fs
subl
xchg
das
lret
rorl
scas
repnz
adc
and
popf
bound
daa
mov
push
icebp
sub
rorl
or
imul
ss
jmp
test
test
xchg
mov
loopne
xchg
ljmp
rol
adc
icebp
or
lods
addr16
stos
aas
movsl
adc
xchg
sub
into
pop
iret
dec
jmp
stos
add
mov
sahf
sahf
jne
fistl
movsb
or
inc
rorb
mov
shl
clc
sub
push
lret
lock
mov
subl
mov
add
mov
rorl
mov
lret
fcmovu
jae
dec
lret
mov
js
in
les
jle
xor
pop
dec
xor
arpl
xlat
sahf
fwait
mov
add
popf
push
data16
adcl
subl
mov
cmp
inc
xchg
push
mov
iret
or
sub
cltd
xorb
test
push
jmp
adc
cmp
cld
das
mov
rcl
add
data16
adc
push
cmp
outsb
pop
out
lods
stos
inc
add
insl
nop
or
mov
and
xchg
cmp
mov
sub
mov
sbb
jmp
xchg
rcrb
jae
insl
rcl
imul
loope
sahf
mov
sbb
xchg
xorb
push
xor
pop
imul
mov
dec
xor
dec
jbe
and
push
mov
out
push
sbb
fcomp
in
push
das
or
stos
jbe
in
lret
push
mov
cmpsb
or
lods
loop
jbe
loop
in
or
test
pop
pop
loop
jns
mov
mov
sbb
popf
aas
in
jle
or
push
inc
cmp
sbbb
mov
sub
xor
push
call
scas
ljmp
jp
jne
or
dec
inc
and
cmp
jns
mov
and
in
rcl
jle
hlt
mov
cs
repz
movsbl
dec
ficoml
or
in
pop
push
insl
mov
or
dec
pop
fwait
test
push
lcall
push
fldenv
cmp
push
and
jae
or
idivl
jg
icebp
lcall
loopne
adc
and
push
mov
pop
les
int
mov
mov
cld
clc
pop
pop
daa
daa
into
hlt
jne
add
int
dec
push
lea
test
cld
xor
jae
mov
addb
ret
imul
subl
xor
fnstcw
mov
movsl
jnp
pop
xlat
or
lds
inc
jmp
mov
pop
aam
and
sbb
mov
sahf
in
and
dec
cld
cmp
daa
mov
hlt
inc
adc
fucom
xorb
xlat
mov
loope
into
insl
dec
das
xor
cmp
pop
js
xchg
inc
add
popf
adc
in
add
push
scas
cmpsl
fisttps
cmp
xchg
adc
mov
daa
mov
pop
sub
cmpsb
out
test
dec
cmp
xor
pop
mov
push
ficoml
test
adc
xchg
push
stos
lods
cmp
jle
jo
sub
sbb
mov
pop
adc
imul
cmpsl
xchg
ljmp
stc
cltd
es
or
lcall
stos
xchg
nop
xchg
jbe
incb
sbb
cmp
ss
pushf
xchg
fsub
out
in
adc
enter
neg
leave
mov
and
jg,pt
insl
sbb
adc
push
xor
mov
push
mov
cmp
sarb
imul
outsb
lret
sbb
lock
adc
insb
into
loopne
icebp
jns
fstpt
jg
out
xchg
jmp
hlt
insb
fisubrs
mov
shrb
lods
bound
jl
fstpt
cmpsl
bound
rdpmc
adc
push
sbb
add
mov
out
rclb
push
mov
leave
inc
ret
pop
lcall
cmp
cmpsb
push
xchg
mov
test
mov
cmp
jnp
in
test
jl
push
jbe
out
fmull
stc
jp
inc
jbe
pop
cmc
dec
jg
test
aad
push
int
pop
xor
mov
mov
xor
test
fistpl
add
mov
mov
pushf
into
lock
and
movsb
stc
int3
stos
push
sbb
xchg
and
cmp
ja
movsl
cmp
loopne
adc
aas
jns
call
sarb
repz
inc
ja
push
sar
es
or
pushf
out
adc
in
test
mov
jne
inc
xor
adc
mov
clc
sub
sbb
and
cwtl
adc
dec
orb
adc
cmp
mov
or
mov
fs
outsb
add
jecxz
jecxz
pop
sub
ret
ret
inc
jno
jnp
pop
arpl
scas
test
add
xlat
mov
rcll
mov
mov
fs
loope
pop
stos
add
add
sarl
jo
pop
mov
dec
cmp
sbbb
mov
fs
movsl
jb
adc
loopne
insl
mov
xchg
xlat
jnp
push
add
mov
inc
and
xor
popa
sbb
inc
add
int3
dec
mov
popa
xchg
int
lods
pop
imul
lds
fcomip
shrl
mov
or
cwtl
lea
aad
hlt
out
daa
sub
cltd
mov
add
cmc
cli
mov
mov
push
xchg
shrb
xchg
push
add
mov
sub
add
hlt
fdivrl
mov
mov
dec
xor
addr16
aas
rorl
sahf
decb
sub
ljmp
cmp
push
add
push
call
push
cs
mov
jae
push
in
adc
sbb
push
xchg
mov
adc
add
mov
sbb
lret
outsb
mov
add
fcmovnb
jne
popa
mov
pop
fistpl
and
mov
xlat
enter
push
jecxz
hlt
out
leave
cmp
mov
and
scas
sbb
sbb
sub
push
mov
xor
mov
cwtl
popf
mov
stos
and
mov
jl
xlat
xchg
mov
ljmp
gs
iret
xor
inc
flds
into
lods
jp
adc
adc
jno
cmpsl
out
inc
cmp
add
mov
cmpsl
pop
je
sbb
inc
sbb
fs
mov
mov
inc
popa
jecxz
pushf
pop
adc
int3
mov
pop
xor
cmc
mov
add
cmpsb
in
sbb
lahf
roll
stos
dec
in
sub
xor
jne
scas
daa
int3
push
mov
xchg
jns
outsb
jecxz
mov
cmp
pop
push
les
xor
xchg
fwait
lret
jg
mov
fsubs
sbb
mov
lret
cmpsb
adc
fcom
jle
js
fimull
aam
push
mov
sub
aas
and
nop
lock
dec
dec
rorl
sti
cs
leave
das
subl
push
lcall
or
test
mov
mov
mov
notl
js
outsb
pop
xchg
mov
fnstsw
stc
imul
jns
mov
daa
aad
lods
push
push
dec
pop
push
xchg
cmp
adc
out
iret
push
push
divl
mov
imul
lcall
mov
mov
dec
ja
mov
pushf
push
sbb
pop
inc
ucomiss
shll
pop
dec
xchg
pushf
mov
mov
gs
hlt
sub
imul
in
inc
scas
cmp
pop
mov
jmp
mov
dec
hlt
imul
or
cltd
mov
xor
in
out
imul
out
les
xchg
sbb
sbb
pop
or
aaa
inc
adc
mov
push
mov
lods
xchg
mov
scas
pop
inc
push
pusha
cmp
ret
subb
imul
test
cmp
sub
mov
dec
sbb
inc
les
in
cmc
jle
clc
pop
push
outsb
add
jo
mov
jmp
out
roll
test
popf
rcll
jmp
lock
pop
mov
stos
fnstcw
cltd
dec
sar
ds
stos
lret
dec
out
mov
test
mov
jns
mov
pop
mov
jmp
pop
xchg
test
cmpsl
ds
std
testb
cwtl
int
iret
dec
insl
ja
xchg
cld
fidivrl
fwait
std
sub
ds
cmpsl
arpl
mov
dec
dec
inc
lods
incl
pop
sbb
and
dec
dec
ds
adc
push
mov
jno
push
or
push
mov
into
shl
out
add
sub
xchg
mov
jecxz
testb
adc
sbbl
lahf
push
in
mov
push
push
xor
pop
pop
outsb
sbb
lds
sbb
xchg
pop
inc
aam
mov
jl
mov
jmp
mov
push
iret
stc
into
or
fldenv
push
out
mov
lret
mov
mov
in
and
mov
int
dec
jbe
cs
mov
sbb
and
and
imul
scas
pop
into
test
mov
movsb
push
jae
mov
jns
mov
lsl
inc
pop
int
scas
mov
addr16
jg
add
stos
aam
mov
test
or
aam
jmp
push
shlb
mov
inc
mov
jno
adc
cmpsl
arpl
inc
push
lret
push
mov
xor
jnp
into
clc
mov
cmp
call
cmpsl
cmpsl
mov
cmp
push
gs
pop
mov
push
push
add
pusha
inc
jl
push
scas
fcomps
int3
cmp
loope
loopne
mov
inc
lds
push
mov
ret
dec
and
mov
xchg
mov
sti
xor
or
cmp
jecxz
test
push
mov
orl
hlt
adc
scas
cmp
or
cmpsl
sbb
or
mov
sbb
dec
dec
mov
jmp
insl
stos
hlt
sbb
rclb
push
insl
movsl
enter
movsl
leave
cltd
aas
mov
test
cmpsl
imul
push
inc
jno
in
cmp
or
test
lds
jmp
mov
mov
push
sbb
imul
sbb
xchg
and
xlat
sbb
cmpl
hlt
pop
ffreep
in
or
push
jmp
xchg
out
out
mov
loope
les
mov
insb
mov
ja
dec
add
leave
sti
sahf
dec
push
pushf
stc
in
mov
push
adc
mov
sbb
adc
cmp
push
ret
adc
sub
and
sahf
push
daa
cmpsl
ljmp
cmpsl
dec
repz
pop
hlt
jae,pn
mov
jo
push
fimull
cmp
fisubs
je
sbb
mov
adc
push
jns
sti
inc
orb
pop
in
cltd
lods
xor
into
sahf
mov
fs
std
ret
push
xchg
in
dec
cmpsl
pop
fsub
push
insl
std
sub
adc
pop
stos
inc
sub
loopne
scas
fsubs
in
xchg
cmpsl
adc
lcall
mov
mov
sbb
mov
std
cmp
jns
rolb
repz
ret
cltd
fnstenv
xchg
aas
imul
mov
dec
js
pop
push
push
icebp
repz
scas
pusha
mov
pop
xchg
mov
mov
dec
loopne
dec
add
frstor
repnz
xlat
imul
add
stos
fdivrl
sub
scas
sbb
lods
lea
loope
jnp
xchg
mov
and
call
test
pop
test
or
popf
ucomiss
xchg
mov
icebp
cmp
cmp
sub
stos
xor
cmc
sbb
xchg
int3
sbb
ret
popf
add
call
or
shlb
inc
cmp
cltd
xchg
pusha
notb
pop
fisttpll
dec
jno
loopne
mov
cmp
ds
mov
imul
add
xor
or
jbe
out
jbe
repnz
xlat
pop
mov
mov
inc
pop
test
out
or
sbb
stc
jl
sbb
lea
sbb
inc
cmp
xor
fldt
and
inc
cmpsb
dec
push
out
pop
push
lcall
insl
adcb
adc
das
fst
adc
mov
in
sbb
test
in
xlat
rorb
nop
rcll
add
sbb
xchg
xor
repnz
pop
enter
xchg
jge
test
push
pop
and
mov
push
inc
push
mov
xor
cld
mov
sbbb
adc
repz
sbb
arpl
out
jnp
or
fstpl
xor
push
test
add
jmp
inc
test
and
testl
je
lock
or
fdivrp
scas
mov
movsb
xor
xor
jl
imul
xor
clc
jne
pop
jg
xchg
addr16
jbe
es
out
xor
cwtl
ret
push
cmpsl
add
cmp
xor
fs
popa
shrb
lcall
xor
stos
repnz
pop
les
dec
xchg
shll
xor
mov
xchg
ja
mov
addb
rcl
mov
repz
ret
mov
xor
inc
into
test
sub
mov
in
ret
sbb
xlat
or
jg
cli
je
inc
push
dec
sbb
out
dec
hlt
ljmp
mov
xor
sub
mov
xor
inc
or
cmp
sahf
sbb
in
ss
fs
fistl
addr16
pop
push
adc
movsb
into
mov
pushf
or
xchg
xlat
in
mov
dec
cmp
lock
jecxz
test
in
pop
lahf
mov
shlb
inc
cwtl
sub
mov
add
ds
and
inc
lcall
xchg
inc
icebp
shlb
movsl
scas
xchg
mov
or
in
mov
cmp
out
mov
xchg
stos
push
pop
lret
lahf
repz
pop
lcall
cld
pushf
xor
jmp
cs
into
inc
or
sub
or
shrl
sbb
mov
adc
mov
ss
lret
mov
adc
inc
leave
ds
negl
sub
sub
jecxz
mov
out
call
and
jo
pop
xor
ja
hlt
jnp
mov
xor
or
mov
or
in
movsb
mov
mov
pop
sbb
inc
xor
sbb
lods
or
add
pop
je
pushf
bound
loop
pcmpgtd
mov
mov
repz
arpl
and
test
loop
aam
adc
lea
push
jne
sub
push
jno
pop
inc
cmp
rcl
cmp
sbb
push
pop
adc
out
test
sbb
and
mov
pushw
clc
call
fsubl
lcall
mov
stos
cmp
and
test
adc
jmp
lds
pop
mov
rorb
jb
imul
mov
insb
enter
adc
lock
cmp
xchg
mov
jl
mov
xchg
lds
push
and
jne
xor
mov
and
push
add
cltd
pop
xor
cmpsb
push
jbe
and
lds
mov
jns
das
pop
ret
inc
je
add
pop
xchg
movsb
cmp
adc
repz
pop
popa
test
dec
test
fldcw
xchg
dec
loopne
add
mov
jns
cmc
xor
xchg
ja
xchg
out
push
lret
lock
push
testb
mov
fistps
mov
pop
mov
dec
imul
movsb
push
push
test
pop
je
mov
xchg
inc
les
fisubs
test
divb
add
mov
cli
aam
cmp
das
and
mov
jge
lahf
bound
stos
dec
jl
dec
mov
int3
or
call
push
fstpt
xchg
idivb
clc
inc
push
xrelease
or
lds
push
push
pop
mov
xchg
mov
mov
cmp
sub
lock
mov
cmp
cmpsl
out
stc
iret
jp
cmp
mov
fnstsw
and
jo
and
mov
xchg
std
pusha
scas
aad
adc
push
jmp
stc
mov
pusha
sbb
insl
sub
add
add
test
popf
mov
fisttpl
leave
es
dec
and
outsl
inc
sub
arpl
aas
fcoml
cmp
and
movsw
mov
daa
ljmp
loopne
aad
loopne
ss
popf
fnstsw
outsl
and
test
cld
int3
sbb
dec
mov
fstp
lea
mov
inc
sbb
sbb
jp
mov
inc
jmp
aam
js
jp
adc
lcallw
cmp
aad
xor
sub
cmp
int
inc
je
bound
sub
xor
jle
sub
cltd
out
jecxz
movsl
sbb
cwtl
push
lcall
inc
enter
mov
mov
xchg
cmp
stos
ror
push
testb
lock
mov
shrb
jl
mov
mov
addb
pop
scas
cmp
mov
dec
pop
test
and
mov
aam
sbb
cli
orl
xchg
sbb
add
xchg
ja
xchg
fistpll
pop
fidivs
mov
adc
aam
jno
arpl
push
cmpsb
scas
sahf
cwtl
sub
in
lock
clc
push
insl
adc
cmp
cmpsb
inc
in
jb
dec
xchg
mov
dec
aam
testb
aad
pop
pop
lret
leave
mov
lock
mov
fdivrs
or
gs
cmp
dec
leavew
leave
mov
xor
mov
fwait
jnp
das
loopne
rorl
bswap
mov
stos
mov
mov
sbb
xchg
push
inc
and
add
in
pop
fbstp
jnp
xchg
xor
xchg
sbb
adc
lret
mov
mov
aas
out
adc
iret
std
add
mov
test
adc
push
cmpsb
xchg
lods
cmp
fistpl
jae
adc
shll
inc
std
dec
push
sub
cs
ja
mov
fptan
cmpsb
and
jmp
adc
adc
cwtl
arpl
imul
out
lds
cmp
loopw
leave
or
ret
mov
and
sbb
sub
jnp
mov
inc
pop
mov
aad
cmp
jb
xchg
lea
repz
cli
sub
aad
sub
or
push
lahf
mov
cmp
fimuls
loope
xor
test
addr16
iret
test
add
xchg
push
cmpsb
loop
pop
pop
mov
adc
xor
ret
notl
cli
add
in
out
stos
mov
repz
mov
adc
fnstcw
repnz
pushf
test
push
mov
cmp
mov
and
fisttpl
inc
cli
aam
cmpsb
popf
cmp
or
pusha
mov
jno
call
mov
mov
fdiv
mov
hlt
xor
enter
xchg
mov
mov
shlb
es
pop
mov
jb
aaa
fnsave
loop
push
xchg
aam
shlb
xchg
into
popa
adc
xchg
lret
outsl
sbb
fbstp
adc
jecxz
mov
repz
das
adc
xchg
push
aaa
mov
lahf
mov
mov
mov
les
aad
cli
dec
mov
cmpsl
enter
push
xor
sub
icebp
mov
subb
adc
jmp
rolb
sub
jp
add
lock
int
mov
inc
lret
cmp
xchg
loop
lahf
out
sub
jnp
or
shlb
jecxz
jle
rcll
movsb
xchg
lea
inc
cmp
daa
mov
inc
pop
push
mov
stc
fnstsw
xchg
movsb
mov
outsb
pop
xchg
lock
pop
int3
xchg
sbb
push
insl
movsl
sub
cs
push
sub
cmp
fmull
aaa
gs
ds
sti
sub
icebp
gs
jp
add
adcl
fcmovnu
and
jo
mov
cli
cmpsb
fs
push
or
addl
and
push
stc
jae
push
fildl
arpl
jmp
jp
daa
sar
clc
mov
and
negb
cmpsl
pop
inc
mov
sub
add
hlt
cmpl
cmp
xlat
aas
and
push
pushf
sbb
sbb
adc
jg
pop
jne
cmp
push
addl
push
in
mov
scas
enter
adc
push
and
aad
int
sub
add
sbb
jmp
jne
push
add
scas
cmp
push
jae
add
iret
in
jg
mov
enter
pop
pop
cmp
aad
out
out
pop
sbb
icebp
mov
xchg
push
in
outsl
mov
les
arpl
aam
push
or
stos
shll
mov
add
xchg
cmc
or
jno
shlb
adc
rcrl
dec
sub
lea
pop
cmp
insl
or
mov
sbb
pushf
xlat
add
imul
out
outsb
mov
pop
mov
idivl
jns
mov
xorb
mov
mov
repnz
idivb
gs
ds
inc
ret
sbb
test
mov
adc
popf
jne
mov
fildll
jns
mov
dec
and
in
ja
rcll
test
dec
outsl
loop
insb
ret
out
inc
std
adc
flds
push
or
mov
cmp
repz
aaa
test
jne
orl
xchg
stc
push
adcb
jl
inc
decb
push
lock
push
test
mov
adc
jmp
ss
ret
mov
sbb
addb
pop
nop
testl
jae
add
xchg
idivb
xchg
and
stos
fisubl
lcall
rorl
rcr
add
and
jge
setns
mov
lds
jmp
or
stc
add
push
pop
stos
stc
rcl
mov
hlt
push
out
xchg
sti
cmc
cmp
or
add
add
int
and
sub
inc
test
cs
notb
mov
sub
xchg
push
mov
and
mov
and
xchg
hlt
add
mov
insl
cld
add
sub
mov
cmp
push
outsl
popf
mov
sti
idiv
or
mov
push
outsl
bound
fstpl
jle
sti
insl
push
hlt
jnp
dec
push
pop
cmp
cmc
in
cmc
js
or
mov
aaa
pop
and
push
xchg
cmp
testl
hlt
dec
enter
fcmovnbe
fsubrl
sub
xor
bound
xchg
nop
push
dec
loopne
imul
ret
fwait
mov
push
add
push
or
mov
popa
in
cld
cli
aam
js
xor
cli
mov
sahf
cs
out
icebp
jp
iret
mov
pop
mov
cmp
jge
xor
mov
orl
or
cmp
iret
pop
sbb
mov
movsl
les
inc
std
push
cmp
xorl
sub
push
mov
adc
jp
push
xchg
outsb
roll
dec
test
pop
dec
mov
mov
lock
jnp
mov
xchg
jp
ss
cmp
cmpsb
or
pop
orb
sbb
pop
cmp
js
push
jne
icebp
jo
aam
sahf
cmpsl
loope
or
das
and
push
adc
xor
pop
clc
daa
and
fsubrl
xor
pop
sbb
xor
mov
pop
ret
cmpsl
bound
lahf
pop
dec
cmp
xchg
jecxz
mov
nop
sbb
sbb
stos
in
mov
or
xor
jmp
inc
pop
cmp
cmp
add
movsb
aas
cltd
popf
xchg
ja
and
test
dec
lahf
mov
mov
mov
jecxz
incl
push
xchg
xchg
fists
out
outsl
ret
repz
stos
int3
ja
psllw
cmpb
nop
mov
loope
dec
popa
rcrb
cltd
jmp
shrl
movsl
push
in
fsubl
cltd
or
cmpsl
pop
hlt
fiaddl
pop
subb
mov
imul
es
dec
pusha
or
mov
leave
loope
stc
sub
out
mov
lcall
aam
pop
push
lahf
inc
adcl
xor
pop
frstor
mov
mov
xor
jecxz
adc
mov
sub
ficomps
mov
imul
pop
push
xor
outsb
stos
jl
testb
dec
mov
idivb
sub
sbb
mul
nopl
gs
push
or
jnp
loop
cld
sub
fcomi
loope
pop
inc
inc
push
into
ror
data16
call
sbb
mov
enter
inc
bound
ja
mov
mov
lods
jae
mov
mov
pop
add
dec
xchg
mov
mov
adc
fisttps
xchg
inc
jmp
ret
mov
fbstp
dec
or
rcrb
xor
pop
out
lahf
or
test
ss
inc
insl
mov
repz
lds
pop
leave
mov
movsl
mov
loop
int
dec
push
jns
sti
negl
testl
push
dec
and
loopne
fcoml
loope
cmp
movsl
dec
xlat
idivl
in
rolb
dec
xor
dec
jae
and
push
adc
cmovge
ficoms
cmpsl
xlat
andb
adc
adc
sbb
nop
mov
add
iret
stos
push
jecxz
sub
jne
lock
or
adc
cmp
div
fwait
mov
mov
jge
mov
gs
cmp
jp
fistl
lods
sahf
add
sbb
cmp
iret
fisttps
insb
mov
mov
inc
lock
pop
pop
push
lods
ss
inc
mov
push
sbb
sub
jnp
dec
loop
fbld
xchg
in
leave
or
or
stc
jno
jg
push
and
daa
loope
js
int
fcmovne
dec
pusha
mov
inc
aaa
and
mov
xor
hlt
cmp
cmp
mov
cmp
fisttps
outsb
cmpsl
js
mov
iret
inc
inc
mov
push
jecxz
jmp
push
cli
mov
sbb
jecxz
fstpl
outsl
xchg
dec
sub
push
cltd
mov
sbb
sarl
clc
in
fstl
and
stos
outsb
loop
add
std
jmp
xchg
or
aad
pop
sbb
fnsave
mov
dec
push
sub
pop
push
push
mov
ljmp
or
lret
lahf
int3
hlt
stc
add
stos
aaa
test
push
pop
ret
pop
push
repz
inc
and
push
mov
dec
lock
jg
outsb
sarb
andl
push
out
cmp
dec
and
or
or
fwait
sub
mov
push
cltd
inc
shll
popf
cmp
in
lods
push
insb
dec
sbb
mov
jmp
pusha
jle
push
or
cmp
mov
fcmovb
pushf
xor
pop
je
inc
push
das
inc
roll
xchg
mov
lcall
cmp
andb
je
mov
jl
ds
jno
xchg
pop
js
push
pop
xlat
pop
addb
inc
out
lahf
inc
addb
pop
xchg
repz
push
cmp
movsl
pop
arpl
mov
pop
insl
orb
orb
lahf
stos
sbb
push
out
mov
add
cltd
or
mov
push
xchg
test
pop
cwtl
shl
addr16
xchg
aas
jecxz
sbb
sub
fwait
jmp
inc
enter
sub
mov
nop
mov
push
and
popa
call
sbb
dec
sbb
mov
jne
clc
pop
sahf
cltd
loopne
push
cmpsb
lret
movsb
inc
sub
push
test
rclb
sbb
dec
xchg
or
mov
out
fldenv
andnps
mov
ljmp
add
inc
xchg
push
lcall
in
and
loop
mov
insl
dec
mov
inc
cs
andb
leave
movsl
xor
ret
mov
xchg
jg
xchg
div
loop
sbbl
inc
gs
add
cmp
or
xchg
lcall
mov
add
out
int
out
xchg
adc
daa
add
cwtl
dec
dec
ret
outsb
js
scas
cmp
shlb
hlt
lods
lret
sub
test
arpl
jmp
xor
inc
stos
movl
mov
lds
mov
xchg
stos
movsb
mov
sub
loope
xor
xchg
test
cmp
pop
repnz
push
iret
cmp
movsl
sbb
mov
aas
in
and
fsts
sub
cmp
ljmp
xlat
dec
fildl
mov
xchg
mov
dec
add
fdivs
xlat
leave
ljmp
nop
mov
mov
xchg
sbb
std
xor
jae
ret
jmp
mov
jle
or
shrl
mov
jbe
repz
adc
popa
clc
xor
popa
xchg
mov
or
subl
jge
dec
ss
push
xor
in
ds
add
and
movsb
xor
rorb
mov
aas
xor
push
jbe
out
outsb
sbb
push
loop
xchg
jecxz
or
sbb
fistl
jmp
pop
inc
ds
imul
fnstsw
cld
popf
xchg
add
in
mov
xor
test
jmp
sub
repnz
fld
or
loop
mov
mov
lret
lea
rclb
lret
call
sbb
insb
xchg
jp
imul
mov
jmp
stos
repnz
jns
mov
mov
adc
fs
test
cmpl
lahf
sub
mov
mov
insl
and
mov
jle
in
loopne
pop
sub
pop
xor
jle
adc
outsb
cli
adc
test
mov
adcl
sti
sbb
inc
inc
xor
sti
mov
shll
mov
mov
push
jge
ljmp
dec
test
jno
fsub
cmp
in
bound
mov
daa
imul
in
mov
pop
jmp
xor
fidivrl
or
mov
in
add
test
xlat
cmp
les
mov
mov
mov
push
test
sub
pop
add
xchg
es
jmp
push
test
fstps
sbb
add
rorb
xor
mov
xchg
cltd
pop
lahf
gs
sbb
xor
jge
sub
jnp
adc
ja
add
xchg
pop
mov
xchg
dec
pop
ffreep
pop
add
cmp
and
lods
push
cs
notl
repnz
mov
push
or
iret
popf
inc
ljmp
adc
xchg
jae
std
pop
or
mov
mov
stos
jbe
aam
rorb
cmpb
inc
xchg
and
shrl
sub
and
scas
or
pushf
fildll
fiadds
cmpsb
loopne
push
out
push
inc
adc
push
pusha
dec
out
stos
sub
xor
icebp
push
jae
loopne
pop
dec
xor
int3
idiv
cmp
fiadds
dec
adc
or
sbb
imul
dec
adc
mov
push
dec
into
out
or
xchg
jl
in
adc
xchg
and
or
xor
data16
cli
jns
cli
ljmp
bound
bound
xchg
pop
sub
xchg
mov
mov
lds
inc
mov
daa
fisubs
and
dec
mov
mov
std
jae
xchg
add
sbb
mov
lret
adc
cmp
aaa
sub
fwait
lods
insl
decb
loope
add
sub
stc
fsubrl
xor
cmp
inc
fbstp
out
or
xchg
inc
pop
je
mov
sbb
mov
aas
cmpsl
in
push
in
adc
inc
fs
lea
or
or
sub
test
jle
loope
mov
in
sti
sti
adc
pop
jmp
loope
jl
fdivp
into
xor
pop
dec
xor
push
sub
data16
iret
mov
xchg
out
dec
lret
mov
lods
push
jmp
loopne
outsb
xor
mov
and
dec
fidivl
arpl
lds
out
das
movsl
pop
jbe
and
jnp
cld
lds
in
dec
aaa
das
outsb
sbbl
shlb
dec
mov
push
adc
jmp
sbb
add
stc
movsb
int
cli
mov
push
dec
mov
ljmp
jmp
lods
push
pop
push
or
cmpsl
pop
jge
out
mov
ja
dec
cld
jo
adc
lea
xor
xor
mov
dec
cmc
out
sahf
inc
push
jo
xchg
cmpsb
xchg
aad
pop
push
ffreep
push
push
cmp
jecxz
dec
sbb
cwtl
lret
iret
and
fisubrs
add
insl
scas
loope
pop
push
jg
insl
adc
dec
cmp
in
leave
jl
scas
pop
jecxz
test
cltd
xchg
jl
push
inc
or
mov
sub
add
jl
cs
adc
cmpl
mov
jg
pop
inc
cmp
jl
addr16
dec
fnsave
push
cmc
cmp
lahf
sbb
in
xchg
mov
pop
mov
fistps
test
divb
aaa
add
es
jns
mov
inc
leave
test
mov
cli
ds
or
jp
imul
cmp
inc
cs
adc
in
mov
enter
sti
xchg
leave
mov
andb
xchg
pop
dec
inc
dec
cs
fimull
popl
fs
std
jbe
sub
out
mov
adc
popa
dec
repz
in
pop
sti
cmc
rcr
xchg
je
cmpsb
mov
aaa
lock
add
pop
enter
lea
shl
popa
mov
xchg
cmpsb
pushf
cli
and
pop
cmpl
push
inc
ss
jo
mov
sbb
push
and
iret
and
ljmp
aam
push
std
xor
add
movsb
scas
out
mov
sub
shlb
or
loope
pop
xchg
ret
loop
mov
push
cmc
push
in
jne
xlat
add
mov
add
inc
std
pop
les
xor
and
je
adc
mov
push
loopne
xlat
stos
sahf
lea
cmc
test
pop
dec
jmp
popl
pop
sub
into
fwait
pop
arpl
sti
xchg
pop
insb
mov
mov
sbb
push
cmp
adc
sub
push
rclb
scas
pop
inc
jb
cwtl
fsubrs
das
sub
imul
stos
adc
aaa
js
or
mov
bound
pop
mov
lds
loop
cmp
icebp
adc
outsb
add
jb
xlat
xor
fs
popa
call
jnp
sbb
call
fcomps
icebp
adc
sti
adc
inc
push
dec
fnstenv
dec
stos
out
inc
xor
xor
cmp
movsb
in
jno
insl
xchg
pushf
adc
or
xor
fstpt
add
repz
or
int
in
ret
out
fsts
icebp
idivb
or
sub
clc
add
pop
mov
rep
mov
cmpsb
mov
jmp
test
pop
das
in
cld
stos
mov
dec
push
lret
dec
and
fdivrl
and
aas
dec
fwait
dec
addr16
mov
popa
jecxz
testb
div
add
imul
ss
js
int
scas
in
rclb
pusha
lahf
mov
pop
jl
scas
sub
aas
sti
lods
popa
jns
or
adc
jnp
ret
test
dec
adc
sub
cmpsl
aad
jo
xor
lds
push
xchg
icebp
mov
loop
pop
pusha
aam
jo
xchg
mov
mov
jnp
or
add
in
pushf
dec
adc
jnp
sub
dec
push
pushf
int3
inc
cmc
std
inc
cmc
adcl
or
pop
ss
or
loopne
dec
imul
push
cmp
frstor
inc
sahf
jge
sub
rol
lea
jo
mov
out
mov
addb
sub
in
movsb
mov
imul
movsb
out
test
rclb
jmp
sub
mov
stos
cli
fs
mov
push
jge
std
cltd
push
pop
fsubl
cmc
addr16
jnp
xchg
cmp
popf
ret
ret
dec
jns
flds
std
add
mov
stos
mov
push
int
dec
mov
push
dec
add
stc
adc
mov
inc
push
test
jne
lods
cmp
lea
or
jo
call
loope
xchg
mov
and
jg
mov
stc
cltd
addl
push
push
fdivr
push
cmp
adc
or
jns
cltd
jns
mov
cltd
popf
js
xchg
test
aaa
jge
inc
and
jno
and
mov
mov
sbb
ficoml
xor
inc
and
ss
jnp
clc
mov
xchg
cmc
dec
fstps
xchg
test
addl
xchg
sbb
fists
pop
xchg
test
sbb
sbb
call
pop
or
lods
ret
ss
mov
cmpsl
jne
popa
aam
popf
sub
cmpsl
outsl
xor
sbb
popf
xchg
lods
mov
jmp
pushf
shr
jle
adcb
int3
mov
sub
add
push
inc
mov
cmpsb
jne
cli
enter
test
jno
cmp
mov
add
add
popf
mov
dec
lock
xchg
sbb
dec
inc
aam
mov
cmp
xchg
add
and
push
fwait
in
sub
add
adc
data16
clc
inc
mov
jae
les
xchg
nop
inc
cmp
imul
adc
adc
jl
out
inc
popa
sub
jp
inc
push
jbe
sub
in
lret
pop
xor
stos
aaa
or
xchg
insb
sarl
xchg
cmp
xchg
repz
xchg
cmpsl
adc
and
pop
aaa
cmpsb
cmp
outsb
imul
xchg
cwtl
sbb
dec
das
fistpl
jg
push
mov
icebp
daa
mov
sahf
arpl
pop
push
fwait
lahf
loop
pushf
jl
add
mov
add
adc
mov
test
add
and
pushf
cmc
test
mov
pop
sarl
lods
dec
lcall
test
rcrb
enter
ret
mov
incl
in
lds
fisubs
push
stos
insb
stc
inc
mov
inc
pop
test
jns
push
add
lret
lcall
es
xor
xchg
fcoms
cli
xchg
jg
es
into
adc
mov
or
pop
mov
cmp
hlt
mov
pusha
push
xchg
adc
sub
add
int
sub
push
fisubl
jo
jecxz
aam
ljmp
rcrb
inc
mov
mov
cmp
pop
data16
xor
test
lahf
lods
subl
sbb
push
xchg
les
mov
aas
call
loope
std
adc
sbb
int3
lea
push
xor
push
fcompl
xlat
jo
pop
xor
in
jg
mov
pop
popf
aam
pxor
ret
les
inc
sub
pop
das
inc
mov
cmpsl
mov
push
loope
ja
out
stc
lods
outsb
mov
xchg
out
cs
ja
xorb
jb
aaa
mov
mulb
loopne
mov
jmp
dec
pop
cmp
jg
and
add
push
or
out
xor
popf
mov
int
out
lock
fstp
jno
jb
das
mov
xchg
add
adc
inc
and
xchg
push
loopne
sub
lret
push
out
std
push
jae
clc
sti
xor
mov
cmp
jl
pop
js
mov
jo
add
es
jb
xor
cmp
fisttps
mov
sahf
jo
inc
in
int3
jne
xor
pop
popa
cmc
fisttps
lock
mov
into
cmc
popf
push
stos
idivb
mov
mov
add
arpl
movsb
add
sub
std
mov
outsb
inc
icebp
call
pusha
mov
sub
add
cltd
jge
or
xchg
test
sbb
arpl
pop
aad
add
mov
xor
lods
movsl
jnp
jecxz
movsb
cmp
mov
popa
and
sbb
lods
jb
lods
ja
and
insb
cmp
stos
xlat
lea
sti
ljmp
ja
in
pushf
dec
cmp
shrl
call
ja
fisubs
int
pop
int
jne
and
rclb
sub
fstps
and
ss
mov
out
divb
dec
pop
jmp
dec
mov
cmpsl
roll
mov
stc
insl
dec
in
int3
rcll
cmp
addr16
pushw
cmp
sub
adc
push
daa
stos
imul
push
in
mov
in
push
and
xor
fsts
inc
push
inc
push
popa
mov
test
sbb
push
imul
pop
enter
test
lret
mov
inc
inc
jb
int
inc
into
fisttps
add
insb
aas
sbb
pop
ficoml
mov
push
test
mov
sub
imul
xor
sbb
out
mov
std
mov
jbe
xorb
sbb
fidivl
loopne
mov
fisttps
dec
ja
icebp
jg
lret
rolb
xor
jbe
test
inc
dec
xchg
sub
fdivl
xchg
mov
aas
inc
mov
jb
sbbb
push
sub
lcall
fs
cmp
aas
ficomps
inc
lcall
xchg
or
nop
jo
mov
cmp
push
dec
popa
cmp
scas
lret
je
subl
daa
adc
mov
pop
leave
inc
movsl
ds
les
push
sbb
dec
push
sahf
sbb
lods
cmpsb
mov
jecxz
clc
push
fwait
jl
loop
mov
push
test
jg
xor
mov
xchg
outsb
mov
dec
js
pop
shl
jg
test
ds
mov
pop
enter
inc
jb
loop
xchg
lret
mov
repnz
popf
cmp
inc
push
mov
add
xor
push
arpl
enter
iret
cs
or
xchg
lods
rcll
jnp
xchg
mov
ret
cmp
add
movsb
int
xrelease
xorl
fisubs
std
sub
sti
fiadds
mov
xor
cmp
inc
xchg
loopne
fwait
mov
push
loopne
and
xor
stos
stc
cmp
pop
arpl
jb
inc
fbstp
icebp
shl
fs
lock
shl
enter
dec
jbe
in
mov
insl
push
adc
es
adc
push
call
dec
push
loopne
test
ret
int3
insl
pushf
push
push
or
jbe
in
adc
xor
jnp
scas
xchg
movsb
popa
xor
subl
popf
mov
gs
in
jbe
add
xchg
mov
mov
cmp
mov
cmpsb
mov
movsb
or
lea
loop
sub
jmp
push
pop
insb
fs
push
and
insl
bound
das
jbe
arpl
adc
enter
mov
mov
out
sub
insb
inc
or
cs
ss
adc
addr16
jp
and
shrb
xor
xor
mov
faddl
psrad
pop
lock
and
sti
dec
test
sub
add
lods
loopne
and
cmp
stos
jnp
adc
out
mov
or
ret
pop
cli
mov
leave
jne
int3
pop
lds
insb
fwait
mov
sbb
std
int
dec
clc
je
xchg
mov
mov
cmpsb
dec
pushf
mov
orb
sub
mov
xor
xor
xlat
arpl
je
movsb
outsb
sbb
sti
lods
mov
inc
shr
mov
loope
mov
inc
sub
jecxz
dec
dec
shlb
dec
xor
jno
outsl
xchg
iret
cli
notl
jecxz
loopne
push
mov
xchg
leave
bound
inc
imul
dec
push
adc
push
push
mov
jb
aaa
xorl
cli
xor
mov
and
inc
xor
sbb
outsl
cmpsl
in
in
test
mov
ja
and
jmp
adc
ret
scas
sub
enter
or
cmp
loopne
js
fcoms
outsl
icebp
cli
lods
jge
jne
xor
pop
bound
lahf
fsubl
sub
jecxz
cmc
push
xchg
cmp
xor
lods
sub
dec
jb
jne
sub
sub
lret
pop
std
out
ret
rclb
in
adc
clc
in
lods
or
int3
inc
outsb
flds
fcmovnbe
stc
fistps
out
or
add
ret
mov
cmp
or
mov
int3
inc
inc
push
inc
push
data16
dec
sbb
fs
xchg
in
aaa
test
inc
add
mov
lds
imul
jb
cs
mov
push
add
cmpsb
cld
add
scas
bound
insl
mov
sub
push
imul
add
in
and
les
icebp
shr
inc
inc
mov
jmp
cmp
xchg
xchg
iret
xchg
cwtl
or
call
pop
dec
pop
sti
fcomps
mov
cmpsl
leave
lcall
lea
or
jecxz
dec
or
sub
mov
ds
or
mov
sbb
mov
fwait
out
xor
or
insb
ret
adc
divl
rolb
push
mov
outsb
ret
push
je
nop
inc
add
ret
sbb
pop
stos
movsb
cmp
loopne
jns
jmp
or
adc
mov
and
fildll
jle
out
add
aaa
jle
mov
or
jbe
popl
cmc
test
jb
mov
dec
test
pop
leave
test
pop
aaa
sub
aas
sbb
outsl
sbb
pushf
jo
or
jecxz
inc
roll
rol
mov
jnp
movsl
push
pushl
mov
mov
adc
mov
cmp
mov
mov
call
add
dec
sbb
inc
jne
mov
sahf
xlat
pop
pusha
leave
push
push
mov
mov
and
outsb
inc
lods
daa
push
pop
rol
push
jle
fnstenv
inc
jecxz
movsb
xlat
mov
insb
bound
mov
call
sbb
sub
mov
mov
mov
inc
mov
nop
xchg
es
data16
pusha
loopne
testb
out
jbe
cld
add
loope
xchg
es
call
std
jmp
in
int3
in
ret
mov
shlb
jle
int
aad
cmp
mov
in
sub
jae
scas
push
nop
sbb
add
mov
xor
or
cmp
add
jo
xchg
mov
sub
add
lcall
out
out
and
leave
jle
inc
and
pop
xor
inc
stos
xor
stos
std
dec
shll
cmc
popf
leave
icebp
push
sub
cltd
dec
cmpsb
repz
shrb
ds
stos
mov
inc
jl
mov
out
sbb
adc
mov
fstpt
std
lea
icebp
mov
aam
fsubrl
test
cmp
scas
rorl
and
mov
push
add
cmpsl
sub
sbb
jle
xchg
inc
lret
adc
cmpsb
push
cmp
lea
sbb
movsl
lock
ret
enter
jge
xor
jg
sbb
fadds
mov
int
popa
pop
imul
sti
int3
repz
sbb
clc
es
add
push
or
addr16
sbb
and
mov
jae
daa
fldenv
mov
ds
mov
inc
nop
xor
inc
ds
movsl
add
mov
cs
jne
aas
add
test
push
shlb
lods
scas
ret
mov
loopne
push
push
sub
xchg
xchg
faddp
loopne
mov
sbbl
mov
cmc
lahf
push
lcall
push
mov
idivl
sbb
or
loope
out
stc
lods
subb
daa
cli
push
adc
mov
repnz
mov
jno
shl
mov
dec
xor
sub
jge
stos
jge
cli
test
idivl
daa
add
or
jge
dec
pop
jno
push
adc
add
add
mov
or
mov
push
lret
int3
stc
and
jne
aad
sub
add
and
movsb
jmp
lret
pop
stos
rclb
jae
adc
ja
orl
adc
repnz
xchg
fisubs
aam
pop
xor
lea
or
mov
in
pushf
and
fdiv
mov
pushf
mov
cli
push
push
xor
js
jl
test
cmc
sub
jmp
xorb
or
sbb
adc
jo
push
cld
int3
xchg
lods
arpl
push
mov
fsubrl
lahf
dec
loope
imul
shll
ljmp
sbb
inc
mov
pop
xchg
dec
imul
cmp
movsl
sbbl
push
mov
add
inc
inc
or
and
lcall
pop
jecxz
lods
cs
bound
or
xor
jae
sbb
inc
xchg
mov
out
call
je
jg
imul
imul
inc
lret
pop
add
imul
dec
daa
fiaddl
insb
sub
xchg
lds
addr16
dec
pcmpeqw
std
fistl
scas
xchg
cltd
cmp
jns
add
pop
sbb
mov
sbb
outsl
sub
inc
push
int
jle
aaa
mov
push
hlt
movsl
sub
mov
pop
out
sbb
dec
pop
push
sbb
fcomps
sub
push
add
mov
mov
pop
imul
sub
mov
iret
test
fbstp
movsb
outsl
xlat
xlat
fdivrs
mov
and
es
aas
adc
sarl
dec
pop
jecxz
and
sbb
ficompl
mov
fiaddl
push
scas
dec
push
fldl
aaa
inc
out
iret
mov
movsb
test
sbb
je
adc
popf
lods
cli
fwait
jne
and
repnz
cwtl
orl
adc
icebp
das
lods
push
in
add
pop
xchg
push
pinsrw
mov
aaa
inc
icebp
and
sti
in
out
gs
mov
or
faddl
lds
ss
dec
sti
jl
inc
ret
xchg
inc
int3
and
jle
push
outsb
pushl
sub
in
int
pop
ja
outsb
in
dec
aad
mov
insb
test
rclb
out
sub
xchg
add
js
xchg
add
mov
jne
cmpsb
lahf
inc
sub
out
rclb
mov
repnz
imul
inc
mov
dec
mov
loopne
stos
int
fnsave
and
inc
orb
inc
mov
lods
jns
xorl
decb
lea
inc
cmp
sti
repz
inc
xchg
in
xchg
push
cltd
jp
in
sub
xor
pop
cmpb
adc
cmpsl
repz
or
into
loope
pop
andb
out
inc
pop
mov
push
push
jnp
sub
in
push
add
cmp
xchg
in
fldl
add
xchg
loope
data16
dec
xor
and
loope
adc
adc
mov
in
ret
mov
adc
daa
jle
cltd
imul
cmp
aas
rcrb
xor
jne
mov
adc
lods
in
lods
data16
and
fsub
cmp
cld
imulb
and
mov
adc
pop
jge
gs
scas
pop
dec
ret
xor
cwtl
das
jmp
push
cmp
int
popf
clc
notl
imul
sahf
movsl
push
adcb
lds
xchg
add
gs
fists
mov
sub
xchg
lock
lds
xor
mov
fimull
xchg
pop
aam
push
pop
dec
mov
pop
or
movl
adc
sub
int3
xchg
out
mov
jns
icebp
mov
mov
jae
dec
jns
sub
cwtl
leave
adc
loop
stos
lahf
mov
adc
scas
test
mov
pusha
add
mov
adc
adc
and
push
inc
out
or
xchg
rcrl
mov
inc
fdivp
dec
sub
cmp
mov
call
int
loope
add
jp
or
imul
repnz
jbe
mov
push
outsb
mov
mov
jno
andb
cmp
cmp
pop
lret
call
mov
sub
aad
adc
imul
call
dec
ret
call
les
mov
cmp
mov
adc
inc
jno
push
loope
add
repz
shrb
add
sbb
and
ljmp
iret
mov
pop
xchg
add
adc
loop
add
stos
sub
xorb
mov
sub
jnp
and
adc
into
in
loope
push
push
xor
loope
or
sbb
nop
cmp
push
fs
jno
dec
nop
dec
adc
bound
jno
sbb
ffreep
adc
xchg
out
jae
pop
cli
hlt
adc
jns
imul
les
jmp
jbe
lret
dec
ja
push
mov
xor
mov
xor
bound
jmp
imul
rorl
xor
sub
cmpsb
loopne
adc
or
sub
fs
pop
mov
push
lds
andl
das
and
mov
xchg
jmp
stos
push
or
xor
mov
lret
jg
xchg
ffreep
stos
test
push
dec
insl
mov
shl
popf
jmp
inc
daa
jb
movsb
ja
or
inc
fldl
add
test
push
mov
je
repnz
sbb
dec
shlb
xor
testb
and
jmp
aam
enter
ss
enter
mov
pop
outsb
cs
aaa
pop
xchg
dec
cli
push
pushf
or
lret
dec
push
in
fdivr
outsb
push
cmp
std
subl
xor
test
pop
inc
mov
test
icebp
stc
fisubrl
dec
mov
mov
add
repnz
lods
xor
fwait
out
ja
shl
in
cmp
bound
fcomi
pop
mov
mov
lret
and
lea
adc
mov
fsubrp
pop
sbb
add
mov
je
loope
jno
fs
push
fsubrl
mov
rcll
xor
scas
imul
xchg
divl
lahf
or
push
aas
les
loope
push
sbbl
push
adc
and
hlt
addl
add
test
push
subl
xchg
sbbl
or
jl
pushf
and
add
dec
movsb
push
dec
pop
loope
insb
add
dec
xor
lock
daa
xchg
icebp
pop
jge
leave
push
ja
mov
inc
repnz
leave
popa
inc
or
and
sub
jno
lods
mov
sbb
scas
aam
sbbl
sub
lret
cs
cmp
xor
jg
pop
sahf
jb
into
pop
es
mov
xchg
fsubr
scas
mov
xchg
push
sbb
sub
ret
inc
movsl
and
cmp
dec
jecxz
outsb
adc
mov
jge
div
inc
fldt
inc
jne
and
mov
cwtl
mov
jle
and
leave
lret
stc
xlat
arpl
in
cwtl
aam
add
dec
mov
inc
inc
sbb
sbb
in
xchg
lcall
out
stc
mov
push
push
add
mov
shl
fimuls
int
rolb
pusha
xchg
test
or
test
xchg
in
dec
ret
push
les
ja
push
dec
or
push
jmp
fcoml
cwtl
xchg
jbe
repnz
lock
jge
sub
mov
dec
arpl
imul
mov
dec
push
jmp
pop
mov
andl
pop
loopne
cli
cmc
push
xchg
sbb
xor
cmpsb
or
jns
xor
aaa
dec
repz
adc
mov
jnp
add
xchg
scas
in
mov
add
sub
ret
repz
out
lods
lock
add
add
sbb
stc
std
das
enter
add
ds
push
movsl
mov
shlb
xchg
mov
arpl
mov
mov
and
xchg
les
shrl
jle
xor
xchg
push
int3
cmp
lds
mov
adc
dec
and
out
inc
insl
and
sahf
push
into
lds
sub
adc
xchg
xor
data16
inc
iret
movsl
leave
aad
push
jnp
push
jle
jns
inc
jo
jb
inc
pop
mov
xchg
negl
pop
dec
gs
xchg
xchg
rcl
fnstcw
shlb
sub
mov
mov
insb
cs
xchg
in
jl
xchg
out
insl
jle
push
push
mov
nop
addl
stc
sarb
arpl
pop
dec
imul
jae
mov
mov
push
out
pop
mov
imul
les
add
and
xchg
sbb
xchg
jmp
enter
adc
mov
in
adc
pop
fmuls
jg
fwait
mov
xlat
xor
sbb
nop
pop
out
add
mov
inc
adc
xchg
or
jae
stos
fwait
incl
das
and
or
fidivrl
ret
sub
mov
pop
mov
jno
aam
jl
test
mov
inc
insl
fsts
repnz
rsm
shlb
sbb
das
cmpsl
js
cmp
test
mov
sub
cltd
mov
jne
imul
lods
push
ljmp
xor
iret
or
xor
dec
adc
lds
lahf
dec
cmp
jbe
adc
test
add
insb
push
xor
lahf
fdivs
inc
lret
push
es
add
dec
push
adc
xchg
ljmp
es
push
adc
sbb
adc
xor
push
or
popa
cmp
pop
or
aad
sub
inc
sbb
std
cmp
aam
mov
dec
stos
movsl
adc
xor
sbb
lcall
ja
insb
mov
push
popf
scas
pop
mov
into
or
push
cmp
adc
jmp
gs
cmp
mov
mov
xor
push
or
dec
sbbb
mov
aas
imul
jo
fnstsw
and
xchg
ret
add
mov
imul
scas
test
es
es
and
adc
sbb
rclb
bound
adc
addr16
add
or
mov
cld
test
out
push
les
popf
test
jnp
sub
and
roll
addr16
mov
cs
push
mov
test
mov
ljmp
lcall
loopne
jbe
inc
xchg
and
mov
inc
cwtl
jo
fwait
add
ficomps
cwtl
std
addb
imul
and
outsl
or
dec
push
xlat
add
insl
lods
xor
xchg
fsubrl
mov
jmp
shl
cmp
out
xor
cmp
sub
mov
call
insb
cmp
cmp
sub
cmp
pop
sahf
lcall
stc
lods
xchg
push
fs
int3
scas
sub
cli
aad
jmp
and
mov
mov
jp
movb
fmull
icebp
stos
lock
push
or
in
movsl
call
test
pusha
fisubs
stc
dec
lds
call
nop
push
int3
mov
jmp
dec
jmp
inc
in
push
ret
movsb
je
aas
pop
pop
dec
push
dec
fsubl
push
sub
lock
cmpsb
in
pcmpeqw
movsb
mov
iret
mov
push
mov
inc
cmc
in
sbb
in
stos
cwtl
and
dec
mov
push
insb
repnz
addr16
dec
jmp
push
mov
icebp
jno
rolb
adcb
aaa
popf
mov
andl
pushf
out
stos
sbb
movsb
in
jo
push
mov
push
cltd
dec
push
xchg
push
mull
mov
ja
pop
jle
mov
les
cmpsb
push
filds
in
xor
mov
mov
fimuls
mov
cltd
stos
push
in
lret
loopne
cld
xor
mov
andb
mov
push
cmp
adc
movsb
adc
enter
scas
add
lds
cli
mov
push
fwait
ss
adc
insl
loop
or
in
icebp
adc
ss
add
ret
mov
pop
cwtl
or
xor
loop
dec
div
lret
aas
pusha
movsl
sub
or
das
pop
mov
dec
stos
dec
int
int
mov
loop
ja
adc
sbbb
push
sub
jmp
loop
lds
cmpl
mov
sbb
sahf
xchg
pop
cmp
loop
or
andl
dec
sahf
dec
add
or
repz
cmp
enter
jb
xchg
notb
jb
dec
jle
ret
ret
daa
lahf
push
add
add
rclb
test
lcall
pop
dec
or
push
loopne
mov
into
aam
push
std
cli
or
std
outsl
mov
adc
cmpsb
into
fmulp
das
xchg
xor
fcomi
jl
push
out
test
shl
into
inc
loopne
jne
or
in
jb
rolb
clc
add
mov
push
xlat
dec
mov
popa
das
cmpsl
jmp
orb
mov
xchg
sbb
dec
call
mov
iret
adc
push
int
mov
std
inc
call
in
jl
add
cmp
imul
mov
mov
in
int
push
jo
cwtl
jle
xchg
js
cmp
xchg
push
push
dec
sbb
lcall
mov
push
adc
into
repnz
push
movsl
hlt
add
pop
sub
xlat
push
xor
mov
mov
sub
lds
fbstp
in
insb
lock
xchg
shlb
xor
pop
push
add
push
sub
lret
mov
js
sub
jno
fistpll
add
and
mov
loop
cmp
jge
xor
ljmp
insl
iret
sbb
in
mov
mov
out
sbb
lcall
dec
jne
shll
jo
rclb
or
adc
in
pop
fs
xchg
push
int3
lods
test
jmp
jmp
xchg
sahf
test
push
cmc
sbb
push
lret
loopne
int
add
daa
and
mov
mov
or
push
es
insl
dec
jbe
mov
shlb
lock
icebp
xor
dec
lods
sbb
cmp
push
ljmp
fistpl
pop
xor
scas
adc
xchg
xor
cwtl
insl
cwtl
clc
dec
dec
out
inc
ljmp
push
int
shrl
cmp
pop
push
jp
xchg
sub
scas
fadd
add
jne
stos
rcr
dec
jle
insb
pop
cmp
mov
push
sahf
rcr
pop
je
movsl
loope
lea
push
cmp
dec
sbb
xchg
sub
testl
add
enter
cmp
mov
test
mov
jns
dec
mov
mov
pop
adc
mov
insb
and
add
inc
std
pop
mov
push
add
in
dec
arpl
ret
int3
mov
push
cmpsl
or
cmp
jge
mov
jo
fdivl
push
repnz
lea
push
pop
inc
dec
cmpsb
xlat
es
js
mov
mov
dec
adc
cmp
mov
mov
and
iret
jmp
out
jmp
notl
pop
mov
mov
mov
jbe
xor
push
xchg
int3
or
pop
jo
dec
push
push
ds
mov
cmpsl
aad
ja
andb
scas
sub
fbld
mov
aaa
gs
lea
sbb
xchg
rorl
or
push
test
jge
loop
jg
xchg
xchg
mov
popa
adc
dec
jnp
pusha
cmp
or
lock
aaa
xchg
mov
loopne
mov
push
mov
or
cmp
mov
pop
pop
lds
mov
cmp
jge
loopnew
clc
jge
out
mov
dec
pop
dec
scas
fistl
inc
lds
in
ja
add
gs
out
xchg
xchg
mov
fcom
pmulhw
mov
popa
mov
pop
jecxz
iret
jne
mov
jp
mov
mov
or
test
ret
gs
xorl
jg
sbb
mov
xor
hlt
lret
pop
mov
pop
repz
enter
jb
cmp
cmpsb
lcall
mov
stc
push
mov
push
movsb
xchg
inc
sahf
mov
outsb
adc
add
std
movsl
faddl
repnz
mov
xorb
and
cltd
or
or
data16
insb
or
mov
out
ret
jne
bound
aas
cmp
pop
dec
jae
movsl
jne
daa
icebp
adc
dec
mov
xor
repnz
xchg
stos
pop
mov
les
das
add
adc
inc
aaa
dec
add
mov
ds
fistl
fldt
movsb
adc
in
scas
mov
fistpl
push
adc
jl
adc
and
outsb
lret
cltd
out
inc
movsl
push
or
nop
inc
add
fcoms
inc
subw
dec
mov
adc
xor
cmp
or
sub
fstps
or
adc
sbb
ret
fcmovnu
sub
cmpsl
lret
cli
add
push
push
shrd
xor
mov
aaa
xchg
add
pusha
leave
cltd
icebp
push
imul
xor
call
subb
or
insb
test
ds
call
mov
cmp
fsubs
cmp
xchg
pop
mov
mov
mov
addr16
gs
sbbl
cwtl
ss
inc
lods
data16
cmp
jne
mov
pop
mov
insb
subb
imul
jbe
std
cmp
fiadds
jb
adc
cmp
or
or
cmp
jp
push
sbb
xchg
xchg
or
cmp
mov
js
loopne
mov
fldl2e
into
dec
xchg
movsb
gs
fwait
mov
leave
repz
pushf
rcll
push
inc
xchg
test
adc
test
add
cmp
clc
sub
rcrl
js
xchg
adc
pop
and
in
nop
mov
lea
xor
mov
cmp
cmp
shl
sub
pop
repz
xor
pop
pop
mov
ret
dec
cwtl
push
jbe
fwait
push
imul
ret
cmp
shlb
jp
push
dec
dec
and
sbb
cmp
dec
mov
or
cmp
sub
push
cmp
icebp
xchg
mov
cld
imul
sbb
xchg
ds
je
cltd
cmp
insb
mov
fiadds
pusha
mov
push
outsl
push
dec
mov
cmp
inc
in
sub
jl
sahf
pop
in
ja
pop
xorb
inc
push
sar
leave
pop
jb
mulb
clc
movsb
mov
lock
jp
mov
in
jmp
jo
call
rorl
jp
sahf
dec
mov
jno
fwait
xlat
sahf
xchg
cmp
sub
sub
mov
push
loop
ja
xor
sarl
daa
sbb
data16
push
add
decl
jnp
xor
xchg
mov
ret
or
leave
mov
pop
mov
std
jge
xchg
nop
pop
xchg
and
fwait
mov
push
lods
fwait
mov
or
adc
stos
cltd
push
shlb
jge
sarb
lret
xchg
pusha
jl
daa
xor
and
jns
cmp
mov
outsl
push
imul
addl
sbb
jb
cmp
call
xchg
pop
cmpsb
pop
loope
mov
mov
dec
cltd
stos
insl
pop
jge
dec
xchg
pop
push
push
popl
jg
cld
jecxz
xchg
dec
sbb
jp
inc
rcrl
mov
mov
and
jbe
jl
pusha
test
push
movsb
or
fs
inc
insb
shr
pop
enter
mov
xor
cld
jne
std
imul
mov
clc
mov
lds
jecxz
outsl
sahf
in
jle
cwtl
lods
xor
in
cwtl
dec
lahf
jno
loope
or
out
push
test
inc
shlb
stc
insl
movsl
xor
mov
inc
mov
loopne
mov
lret
imul
push
cld
xor
jae
pushl
lea
aaa
in
push
shl
int
pop
or
or
lret
out
shr
mov
sub
inc
gs
or
aas
lods
push
pushf
dec
movsl
shrl
inc
addb
xlat
adc
cmp
ret
push
test
mov
jbe
mov
clc
or
das
mov
lcall
out
ficompl
sahf
in
mov
cs
xor
sbb
mov
jecxz
mov
in
or
into
adc
push
xor
inc
aaa
aad
pop
jb
imul
xor
stos
inc
hlt
or
mov
incl
fnsave
cmp
push
cli
subb
xchg
js
push
push
das
mov
sub
insb
or
iret
cltd
lods
fsubrs
outsb
scas
neg
ds
push
sub
ja
cwtl
lock
jmp
cmc
add
loope
out
mov
mov
icebp
jle
in
cltd
aam
sub
push
adc
pop
add
mov
adc
pmullw
cmp
mov
add
jb
cmp
fsubr
andb
jl
cmp
xchg
mov
xor
daa
out
sub
or
sub
or
ret
mov
notb
mov
xor
xor
insl
shrb
fwait
mov
sub
rorb
mull
clc
int3
inc
xchg
sahf
inc
mov
pop
outsb
test
and
daa
cwtl
or
insb
jle
arpl
cmp
dec
fidivrl
xchg
pop
inc
adc
rorl
mov
push
mov
inc
das
into
cmp
imul
mov
push
add
mov
rcl
fs
xchg
popa
dec
xchg
pop
pop
test
pop
and
leave
rorb
popf
call
cmp
rcrl
lcall
lcall
mov
add
mov
sbbb
nop
xor
iret
xchg
mov
or
inc
fst
mov
sti
inc
pop
inc
pop
icebp
and
xor
shr
enter
sarl
push
inc
cltd
mov
xlat
pop
out
fbstp
or
testl
out
sbb
or
lret
cmp
inc
shl
push
pop
sti
xchg
pushf
gs
mov
iret
or
pop
or
xchg
fistpl
inc
or
out
lea
adc
sub
sub
rcll
mov
push
fs
dec
or
jmp
jecxz
and
mov
les
xor
orb
into
push
push
dec
stos
and
imul
repz
dec
bound
lock
mov
gs
outsl
jg
inc
in
loopne
sub
mov
or
adc
mov
mov
or
rcrb
pop
notb
das
inc
jmp
nop
jbe
xchg
pop
inc
dec
jl
sbb
sbb
push
mov
test
or
adc
pop
jp
dec
loope
and
mov
adc
ror
test
testl
push
push
rclb
subl
decb
fsubs
mov
in
xchg
mov
pop
jae
push
insb
adc
in
cs
test
idiv
sbb
movsb
out
arpl
daa
cli
inc
cmp
gs
mov
in
test
imul
pop
cld
ret
test
leave
dec
lods
mov
cmp
data16
jae
mov
loop
int3
fs
adc
fisttps
xor
inc
adcb
arpl
in
scas
sarl
xchg
cmpsl
xchg
xchg
xchg
iret
push
adc
push
out
xchg
in
jno
pop
lret
sti
test
sbb
subl
xor
or
inc
fcomi
ret
adc
mov
adc
jb
mov
xchg
lret
test
jle
mov
data16
dec
testl
inc
int
aaa
adc
addl
dec
jecxz
jmp
shl
xor
or
push
popl
pop
push
dec
mov
pop
imul
push
adc
xor
jbe
mov
cmc
dec
or
fucomp
mov
in
mov
lret
xchg
stos
cs
cli
insb
adc
add
leave
imul
adc
push
or
out
scas
mov
daa
je
fisubrs
mov
int3
xchg
mov
sbb
lds
mov
pushf
aas
ds
popf
adc
inc
add
jg
dec
sahf
cld
mov
call
out
cmp
add
xor
in
cmc
pusha
rcrl
rcrb
inc
and
xor
push
aam
lds
dec
inc
lahf
das
icebp
xchg
pop
and
mov
mov
jp
cld
mov
sbb
pop
pop
cmp
fnstsw
inc
push
sbb
dec
xchg
cmp
xchg
add
int3
ficoml
roll
mov
xchg
roll
mov
data16
psubsw
mov
jo
inc
fs
fs
dec
jl
mov
fsub
xor
sub
repz
test
inc
push
std
mov
lcall
pop
cmpsl
xor
popa
push
and
jbe
in
inc
sub
cltd
adc
dec
sarl
adc
sub
lahf
mov
aaa
xor
pop
shr
int
mov
xlat
cltd
sub
loopne
sub
aaa
dec
rcll
push
pop
adc
jp
dec
push
inc
pop
sub
jmp
ret
insb
sub
aad
test
stc
sti
cmc
pop
imul
sub
mov
xchg
or
mov
cli
xchg
pop
mov
out
fsubs
add
push
xor
ret
xchg
mov
inc
adc
sub
cmc
sti
jmp
inc
aad
std
fists
sbbl
add
mov
sbb
push
mov
nop
push
mov
mov
fstl
pushf
mov
cli
add
pop
and
sbb
scas
adc
arpl
add
in
iret
ja,pn
out
dec
or
pop
lea
and
movb
dec
gs
clc
xor
fsubl
ret
js
lods
jp
fcmovbe
leave
enter
cltd
jle
cld
scas
es
subl
aad
sub
scas
sbb
inc
adc
sahf
jg
dec
sub
xchg
lea
in
pop
outsl
mov
jp
push
daa
out
je
pop
in
test
addr16
push
das
movaps
in
test
in
into
lods
outsb
mov
xchg
imul
push
push
cmp
or
xchg
adc
jle
or
mov
jne
or
sub
inc
add
out
inc
lret
jg
dec
and
outsl
xchg
jbe
mov
mov
pop
lret
and
insl
cmp
lea
shlb
inc
adc
popa
rorl
out
call
adc
ja
or
outsl
orl
mov
bound
rorl
mov
add
das
shlb
nop
mov
sub
ja
les
jl
mov
nop
aas
and
dec
jne
cld
das
xchg
out
stc
sbb
xchg
push
cmpsl
mov
jb
scas
pushf
mov
push
test
xor
mov
ja
cs
xor
pop
push
rcrb
scas
out
fnstcw
out
or
jo
xchg
dec
sbb
ljmp
popl
mov
gs
bound
jl
insb
push
push
xchg
inc
xor
aaa
jnp
in
insb
sti
mov
repz
ret
fisubl
and
pop
sub
inc
shrb
icebp
mov
sub
or
xor
dec
jne
xchg
cmp
andl
mov
mov
xchg
int3
arpl
xchg
sbb
lods
cmpsb
push
sub
mov
icebp
ljmp
jne
push
mov
cmp
pop
jl
or
adc
jnp
cmp
sbb
adc
mov
imul
shll
sub
in
dec
mov
xlat
sbb
jb
add
sub
jle
dec
xor
jns
ret
test
movsb
jecxz
inc
xchg
cmpsb
aas
or
repnz
xchg
cmp
btc
dec
cmc
jno
lock
outsl
sub
fcompl
sbb
inc
push
mov
data16
scas
in
pushf
pop
inc
sbb
daa
cmp
pop
ret
push
lcall
xchg
outsb
push
test
mov
mov
fadd
cs
cmovs
addr16
stos
cmp
test
push
ret
aam
and
fwait
daa
inc
xor
push
and
into
push
or
loopne
sub
add
call
mov
ret
pop
movsl
cmc
mov
mov
jo
out
pop
mov
lcall
pusha
cmp
xchg
cmp
push
and
lods
cmp
sub
cwtl
jp
and
mov
js
push
loop
sbb
test
out
pop
sbb
push
cmpsl
sbb
lcall
pushf
push
stos
mov
mov
push
in
inc
aam
loop
jle
lret
push
in
repnz
cs
mov
sbb
jo
lahf
pop
sub
mov
das
fnsave
out
sbb
add
mov
add
jge
sar
leave
mov
idivl
test
cmp
repz
adc
adc
mov
xor
daa
push
pop
sahf
pop
in
test
clc
jno
push
aaa
push
iret
jmp
mov
mov
imul
push
and
pop
bound
jecxz
bound
inc
pop
insl
xchg
cmp
push
lea
jb
push
sbb
cwtl
cld
popa
js
and
or
sub
jno
out
call
and
loopne
cmpsl
icebp
loopne
push
and
add
das
mov
jno
xchg
movsl
cmpsb
sbb
inc
aad
test
lret
jecxz
cli
or
mov
cmpsb
mov
and
xchg
outsb
hlt
insl
ficomps
je
push
sar
stos
sbb
minps
call
das
in
call
pop
fbld
adc
mov
inc
fwait
iret
jecxz
lea
cmpsb
repz
cmp
and
jno
data16
lock
mov
sub
dec
lods
sbb
jae
lcall
fs
cwtl
inc
outsl
push
ljmp
imul
dec
imul
jmp
jmp
outsl
cmp
mov
icebp
imul
hlt
dec
push
cwtl
cmpsb
inc
int3
testb
add
pushf
dec
or
mov
sub
sarb
jne
loopne
or
insb
popa
adc
xor
in
ljmp
push
popf
lret
imul
popa
outsb
movsl
sti
arpl
sub
popf
out
jbe
sbb
sub
dec
xchg
pushf
fstpt
adc
or
xchg
xor
js
ljmp
ja
pop
sbb
add
mov
add
mov
das
xor
leave
cmp
lods
incl
mov
add
es
aaa
daa
aas
inc
sub
bound
clc
or
sarl
mov
or
rolb
mov
jbe
test
cmp
int
test
aam
sbb
lods
int3
test
xor
pop
mov
pop
jl
fisttps
jge
xchg
or
ljmp
jnp
cmp
or
icebp
xchg
scas
int
add
sbb
notb
pushf
dec
push
out
lock
rol
dec
sarb
inc
lcall
flds
divl
out
xchg
out
cli
imul
rclb
push
mov
aas
pop
jbe
add
add
push
in
or
mov
jo
into
sbb
test
into
xchg
push
mov
or
push
xchg
inc
and
sbb
dec
sahf
aaa
inc
cmp
or
cltd
push
jg
lods
dec
pop
sub
daa
push
push
stos
xor
push
push
cmp
xor
repnz
out
jl
cmp
icebp
push
lods
pop
pop
scas
test
pop
mov
and
cs
in
push
fnstsw
insb
pop
test
inc
mov
push
repz
fidivs
or
loope
sbb
jmp
sbb
scas
nop
mov
cmpsb
icebp
test
dec
int
jl
test
sbb
sbb
xor
repz
pop
outsb
mov
pusha
pop
sub
xchg
push
push
or
es
lods
pusha
add
cmp
test
mov
fcoms
jbe
inc
fisubrs
mov
dec
pop
fs
cmp
movsl
cmp
insl
outsl
dec
rol
clc
lcall
pop
cmc
stc
jle
xorb
pop
imul
xchg
push
mov
mov
push
mov
jg
xor
pusha
jmp
xor
in
push
and
lds
xchg
orb
rorl
pop
xchg
mov
mov
cmp
add
aad
xor
jo
inc
popf
sbb
mov
gs
leave
inc
shll
mov
mov
aam
and
out
lret
mov
mov
mov
sbb
add
fnstcw
stos
les
add
daa
fcomip
pusha
inc
mov
daa
lahf
clc
addr16
test
sbb
int
jb
stos
les
in
cli
jo
shlb
xchg
mov
sar
xor
push
gs
sub
bound
scas
mov
xchg
mov
inc
addr16
and
push
sub
dec
mulb
test
and
jb
hlt
dec
xorb
icebp
mov
enter
pop
and
loope
xchg
push
jecxz
jmp
and
push
mov
inc
sbb
xchg
jge
push
lea
cmp
cmp
icebp
stos
lcall
out
mov
pop
jns
mov
mov
mov
fdivrl
cwtl
jne
pop
imul
frstor
rorb
inc
jl
sub
ja
pop
lret
jg
fisubrl
jg
sti
in
aaa
outsb
inc
dec
pop
pop
mov
dec
popa
sub
pop
xchg
rorl
xchg
icebp
inc
movsb
jno
lea
sbb
jne
jnp
mov
mov
xchg
rorb
fcoml
test
pop
add
xchg
and
mov
sub
mov
ret
inc
or
cmp
inc
addb
mov
jno
pop
mov
call
inc
jae
pop
cmp
test
je
add
add
andb
cmp
push
pop
nop
mov
es
loope
daa
xor
jmp
pop
mov
add
xor
test
faddl
inc
mov
pop
outsb
pushl
cmpl
mov
pop
scas
dec
pop
movsl
inc
dec
mov
adc
inc
incl
add
ret
cltd
scas
mov
pop
jns
adc
scas
dec
lods
add
jns
and
test
push
pop
and
sti
lea
mov
jecxz
out
cmp
orb
aas
dec
jp
mov
mov
dec
lds
pusha
sahf
pop
jl
and
lds
rclb
lods
fidivl
lock
fisubrs
cmp
xchg
jns
shlb
sbb
adc
push
call
jl,pt
mov
outsl
xor
adc
mov
jnp
mull
jge
or
cld
xlat
xor
push
sbb
nop
pop
mov
and
pop
sarl
cmpb
sbb
lret
push
and
mov
stos
lods
mov
sub
fidivs
push
icebp
and
add
xor
cmp
imul
sbb
cmpsb
mov
or
sahf
xlat
xchg
dec
mov
sbb
push
xor
and
test
andb
idivl
sbb
jnp
dec
and
out
mov
mov
imul
sub
out
addb
nop
mov
scas
adc
lea
rclb
fildl
je
push
mov
push
test
mov
call
inc
jnp
pushf
lods
xchg
popa
xor
in
push
out
jo
dec
inc
add
arpl
das
and
mov
pop
jbe
xchg
sbb
add
mov
dec
sbb
xchg
jo
mov
push
das
xchg
test
xor
repz
cmpl
mov
dec
clc
outsb
call
mul
adc
mov
or
add
jecxz
sub
fbld
cmp
sbb
push
jp
addr16
inc
mov
aad
sbbl
cwtl
popa
mov
mov
push
push
add
jmp
xchg
jmp
sbb
mov
mov
clc
sar
sarb
mov
xor
adc
push
aas
aaa
sahf
mov
xchg
add
les
stos
frstor
in
jl
test
stos
dec
xchg
jmp
subl
mov
and
popf
mov
mov
sub
pushf
lret
out
jmp
pop
das
in
xchg
xor
sbb
adc
xchg
addr16
push
popa
add
lods
mov
mov
out
mov
pop
and
dec
xor
out
imul
adc
fwait
imul
push
jb
out
imul
jnp
adc
dec
shlb
pop
cmp
and
inc
push
and
lods
pop
notl
fcompl
cmc
xchg
pop
cld
pop
mov
and
mov
jg
clc
sub
in
xor
bound
push
mov
mov
dec
mov
jle
add
popa
cmp
sbb
xor
cmp
sub
cmp
ja
test
bound
jb
sbbl
sub
fldcw
into
mov
mov
sub
out
add
sbb
sbbb
aad
xchg
fs
insl
adc
inc
pop
dec
je
nop
test
pop
mov
jno,pn
mov
fbld
cwtl
xchg
xchg
jns
pop
ret
xchg
sbb
mov
iret
push
icebp
jnp
xlat
and
or
fldcw
dec
lock
xchg
adc
sub
pop
sbbb
aas
out
in
orl
inc
mov
mov
fadds
inc
or
cmp
ret
cli
xchg
pop
mov
or
sbb
cli
add
mov
shr
sbb
mov
sahf
inc
jne
fdivs
pavgw
push
test
insl
frstor
lret
call
iret
mov
mov
jbe
dec
subb
dec
mov
dec
out
addl
fsubrs
lret
lock
lods
dec
icebp
cli
out
push
mov
and
data16
lcall
shll
dec
sahf
inc
rcrl
cld
loopne
repnz
test
fcomps
stos
xchg
loope
or
cmpsb
mov
add
xorb
sub
rcr
mov
cmp
adc
mov
loope
push
in
fucomip
push
push
jl
push
call
xchg
xchg
addr16
in
aaa
repz
fstps
imul
or
mov
jmp
clc
fstpt
outsl
leave
loopne
xor
dec
aas
push
and
jns
in
lods
call
add
sbb
jb
aad
leave
outsb
ja
insl
pusha
jb
or
adc
bound
adc
scas
push
int3
shlb
test
fidivs
stos
aad
loope
arpl
jno
mov
scas
mov
add
xor
xlat
call
cli
xchg
lret
or
pop
push
popf
aam
clc
rolb
fdivs
add
jl
xchg
mov
sbb
out
xchg
nop
aad
daa
sub
mov
inc
insl
pop
mov
fidivrs
aad
sub
dec
lods
cmp
jge
lea
pop
pop
int
bnd
mov
fnsave
hlt
cmp
fcomip
and
inc
arpl
test
add
ja
jnp
ret
cmpsl
adc
mov
int
mov
ret
mov
fidivrl
stos
xor
test
jb
in
or
insb
sbb
jne
loopne
add
jg
mov
sub
sbb
je
xchg
aad
mov
cld
xchg
into
nop
jne
ja
imul
cmp
jno
xor
ljmp
cmp
je
add
sbb
out
dec
jo
push
adc
icebp
inc
leave
sti
lods
sbb
int3
ss
pop
je
cltd
scas
cltd
sbb
addr16
cmp
mov
push
mov
xor
inc
movsb
lahf
rolb
jecxz
sbb
test
pop
lcall
pop
jnp
fisttpll
aas
push
cmpsl
cmp
or
pop
lock
and
adc
pushf
dec
rcl
and
add
mov
cmc
xor
in
or
jecxz
mov
fidivl
cs
iret
cmp
fs
xchg
aas
mov
adc
dec
faddl
into
cmp
sub
xchg
daa
or
or
adc
arpl
imul
or
mov
mov
dec
cmp
xchg
mov
cmp
dec
in
insb
push
test
bound
decl
cmp
cld
roll
adc
or
xor
and
ret
add
pop
std
hlt
lahf
mov
add
dec
adc
adc
cmpsl
fs
mov
scas
sub
js
mov
push
repnz
xor
cmp
enter
cmp
mov
int
ficoms
popf
adc
leave
add
jl
ja
xor
daa
repnz
sarl
fldl
std
dec
nop
inc
cwtl
sbb
pop
sbb
andl
push
add
mov
inc
test
imul
dec
and
adc
mov
inc
mov
cli
cmp
test
dec
dec
xchg
enter
mov
fwait
mov
sbb
and
cmp
jge
jp
cmp
jmp
or
lods
loop
test
int3
repnz
lods
add
scas
push
dec
jmp
outsb
jns
add
adc
mov
push
add
pop
shr
inc
add
pusha
adc
pop
fildll
insb
decb
out
cwtl
lea
inc
and
pop
push
jge
cmpsl
sbb
sub
pop
js
dec
fisubrl
fcomps
xchg
stos
pop
hlt
pop
shlb
jbe
roll
mov
fsub
sub
jecxz
out
out
push
ror
push
jge
jno
xor
xchg
push
addb
add
insl
cmp
insl
cmpb
int3
sub
jb
sbb
cmpsb
mov
and
add
inc
dec
iret
out
mov
push
popa
xor
rcrl
dec
rol
cmp
std
cmp
adc
sbb
cmp
or
mov
xchg
fldcw
cmp
ret
add
and
sub
imul
xchg
push
jnp
jmp
jl
and
nop
and
push
mov
sub
push
mov
add
ret
out
test
fidivrs
xchg
jg
aam
inc
lahf
hlt
xchg
fisttpl
add
hlt
add
and
sub
xchg
pop
fisubs
into
fwait
cmpsl
in
mov
push
mov
shll
cli
jno
adc
xchg
insb
push
data16
lcall
repz
inc
addr16
icebp
mov
sbb
push
pop
shl
xchg
and
and
push
shl
sbb
jb
jnp
ds
insb
inc
into
sub
cli
push
shlb
push
adcl
hlt
in
imul
fstps
ss
push
push
frstor
nop
ds
pop
stc
add
popa
pop
pushf
cmpsl
movl
insl
stos
jns
jbe
repnz
cwtl
dec
push
dec
icebp
imul
push
test
out
adc
mov
test
pop
mov
imul
lcall
xchg
sub
mov
pop
mov
fs
jae
or
adc
stc
adc
pop
cmp
lret
cmp
or
xchg
inc
call
inc
jae
pop
push
jbe
xchg
cmpsl
xor
or
lahf
leave
adc
out
and
enter
outsb
repnz
jmp
xchg
movsl
cmpsb
je
lods
int3
mov
sub
sub
adc
mov
xchg
aam
out
inc
into
clc
jnp
inc
mov
inc
xchg
lods
iret
cmp
and
jbe
mov
cmc
lds
xor
pushf
dec
sti
xchg
loop
movsb
pop
inc
sbb
sub
testl
push
inc
or
inc
dec
sarl
movsb
push
dec
lods
and
adc
lret
lret
xchg
cmc
jmp
fwait
movsl
nop
mov
popa
out
popa
lods
int3
das
jbe
mov
inc
mov
sbb
scas
out
sub
or
xchg
std
clc
jg
xrelease
nop
out
mov
push
in
dec
pop
jge
fs
jecxz
jb
jne
or
add
mov
mov
addr16
jbe,pt
nop
shlb
cmp
sub
or
loop
orb
xlat
icebp
aas
dec
les
ja
mov
icebp
adc
lcall
mov
mov
push
pop
cld
pop
movl
inc
fldcw
lock
push
ljmp
lods
cmpsl
out
call
and
adcb
lds
push
or
in
push
cmp
ret
adc
cmc
stc
push
clc
sti
cmpl
mov
dec
shrl
push
and
cli
and
ds
loopne
inc
andb
ss
in
pop
sahf
aad
fstp
test
mov
cmpsb
lcall
int3
mov
testb
xchg
sub
push
mov
jle
xchg
in
movsl
adc
push
repz
inc
or
mov
repz
jg
adc
cmpsl
mov
mov
popa
in
mov
in
nopl
mov
xchg
sbb
mov
mov
in
inc
cli
pop
pop
jno
sbb
in
adc
sub
rcll
iret
pop
jbe
out
or
jnp
icebp
inc
mov
mov
gs
test
ror
adc
hlt
imul
ja
lret
stos
adc
sbb
dec
ret
mov
ds
cltd
mov
sbb
pop
orb
adc
mov
push
pushf
adc
dec
les
jne
sbb
out
pop
dec
pop
dec
dec
fldt
clc
in
rcl
dec
push
insb
shll
sub
and
jae
or
rorl
or
sub
fdivrs
lahf
xor
pushl
jmp
jbe
fmul
cmpsb
imul
and
cmp
pop
adc
repz
stos
addr16
adc
imul
mov
dec
call
mov
dec
mov
mov
icebp
aam
subb
pop
sarb
std
scas
and
push
ret
adc
inc
ret
push
jl
mov
cmp
jg
cmpsl
clc
sbb
and
int
ret
call
sbb
mov
fistpl
insl
xlat
imul
cmp
push
fwait
das
hlt
iret
cmp
sbb
dec
push
jbe
mov
in
inc
ds
movsb
ret
sahf
cmp
and
mov
out
mov
stc
jae
out
arpl
mov
scas
cs
sbb
pusha
dec
bound
sub
int3
fsubl
and
sub
ja
in
xor
orl
xchg
unpckhps
sbb
outsl
sub
sbb
dec
mov
jecxz
mov
jle
jo
leave
gs
sbb
das
insl
les
push
aaa
popa
mov
in
push
adc
cld
mov
das
sub
push
les
mov
xor
loopne
ljmp
loope
outsb
xchg
cmp
insb
dec
popf
outsb
or
fwait
add
cwtl
xchg
pop
xor
insb
xchg
daa
fdivs
nop
xchg
and
push
or
cmc
pop
ja
int
jg
fnsave
loop
sbb
inc
sahf
imul
ljmp
jp
mov
mov
scas
nop
aam
ret
aas
mov
jecxz
mov
ret
pop
stos
rcll
mov
push
arpl
jp
jge
cmpsb
sub
ljmp
xchg
xchg
jne
or
inc
adc
sahf
jbe
mov
filds
jbe
push
sub
rcrb
ret
and
cmc
xchg
or
movsb
sarl
ret
sbb
std
lods
inc
xor
sub
std
test
jns,pn
dec
or
mov
fcoml
repz
add
jnp
xor
mov
in
sbb
xchg
dec
xchg
repnz
adc
insl
mov
inc
es
push
mov
sub
jmp
push
mov
out
push
lret
ja
or
mov
adc
lahf
mov
outsl
and
push
dec
out
pusha
ret
jl
popf
dec
jle
xchg
test
inc
dec
adc
pop
cmpsl
inc
icebp
leave
fstp
out
or
data16
mov
imulb
aad
lds
cmpsl
jp
dec
jmp
into
aad
sbb
pop
fwait
mov
mov
mov
pop
jmp
ljmp
sub
loope
jae
fcmovnbe
inc
clc
pushf
fwait
xor
mov
adc
sub
inc
leave
xchg
sbb
fsts
out
xor
loop
xchg
dec
inc
arpl
scas
subl
stos
int3
cwtl
leave
scas
fiadds
lods
iret
jl
xchg
adcb
sub
fstl
xchg
outsb
jecxz
dec
mov
int3
mov
out
das
scas
cmpl
jg
je
test
test
cmp
cmp
xor
lcall
mov
pushf
cmp
mov
and
popa
popa
inc
inc
idivl
xlat
int3
and
gs
popf
fs
mov
fldl
int
enter
loop
rcl
mov
repnz
in
and
jmp
sub
repz
pop
dec
jp
aad
ret
mov
insb
js
iret
scas
repnz
inc
les
sbb
pop
mov
dec
mov
xor
xchg
dec
lea
add
mov
jle
movsl
jb
or
inc
inc
cli
lcall
xor
ret
ficoml
jmp
jge
imul
jno
xchg
inc
and
pop
fstpl
vpshlq
aad
sub
sub
and
inc
popa
repz
mov
fs
dec
inc
mov
lret
jbe
mov
xchg
lods
cmp
outsb
ljmp
cmp
ret
popa
or
dec
mov
mov
dec
jmp
je
mov
jae
jg
push
inc
jmp
mov
clc
xchg
pop
outsb
sar
jbe
mov
fnstenv
or
data16
mov
sahf
call
lock
loopne
add
sbb
inc
cltd
sub
adc
mov
inc
mov
fldenv
or
nop
cmp
stos
adc
es
in
mov
sar
jecxz
dec
inc
int
addr16
out
ret
ljmp
mov
jg
mov
jb
test
sub
aas
mov
imul
in
insb
stos
lea
jo
jae
dec
xor
and
xchg
mov
ja
jno
aas
dec
into
movsl
hlt
push
test
cmp
jmp
call
pushl
adc
xor
jmp
ds
daa
aaa
inc
sub
sbb
cltd
scas
push
xchg
or
add
pop
inc
ss
mov
shlb
inc
mov
data16
mov
sub
xor
xlat
mov
mov
mov
insl
push
cld
iret
add
xor
sbb
jb
xchg
jp
pop
scas
push
pop
imul
add
sub
and
and
insl
test
jge
popl
fbstp
ss
push
push
xlat
push
jp
xor
pop
pop
repz
out
sbb
mov
inc
mov
scas
push
jbe
push
iret
sbb
sti
int3
sahf
cmp
lret
fmuls
xchg
stos
xchg
cltd
and
xchg
sub
jae
mov
dec
movsl
inc
inc
push
add
mov
adcb
add
jmp
in
sbb
js
fcomps
or
jne
jp
add
test
mov
adc
ret
and
shrb
in
pop
cltd
in
jae
das
mull
sahf
out
jl
add
mov
scas
stc
xchg
popf
leave
add
sub
jmp
jp
pushf
mov
sub
mov
dec
movb
outsl
in
dec
sarl
in
divl
ss
out
fldcw
ds
xchg
mov
out
addr16
pop
dec
in
ss
nop
mov
jno
hlt
stos
sarb
mov
stos
bound
xor
out
add
es
push
sti
and
cld
mov
int
stc
fwait
xchg
pop
mov
sahf
test
pop
inc
les
sub
fnstsw
popa
sahf
ret
lcall
ljmp
fwait
dec
in
add
cmpsb
int
shll
into
xor
out
in
testl
fisubrs
push
cld
cli
daa
mov
add
cmpsl
ret
mov
pop
xchg
sbb
and
or
fisubrs
add
fidivrs
and
cmp
jecxz
adc
jmp
mov
sti
popa
inc
adc
sbb
ficoml
and
test
cmp
mov
mov
addr16
cld
push
out
xchg
lock
ljmp
out
mov
mov
sahf
pop
sarl
jo
addr16
pop
popa
clc
pop
or
mov
std
sti
fidivrl
ljmp
ret
xor
js
dec
call
mov
xor
inc
mov
out
push
sbb
pop
mov
out
inc
outsb
popf
cmp
mov
pop
mov
mov
ljmp
out
call
sbb
mov
jns
jl
mov
pop
fidivrs
pop
mov
mov
cmp
mov
sub
and
xchg
pop
inc
push
and
push
nop
test
in
sbb
sbb
addr16
mov
push
flds
jnp
mov
outsl
mov
push
xor
scas
push
inc
loope,pn
int
sub
loopne
mov
jne
mov
xchg
fs
and
mov
pushf
mov
push
mov
mov
mov
test
mov
bound
loopne
repz
or
inc
or
cmc
add
adc
rcll
inc
push
repnz
push
mov
dec
dec
inc
jae
jecxz
jb
out
sub
jmp
int3
mov
push
int
adc
add
loop
shll
push
fdivrs
popf
in
int3
aam
pop
xchg
lret
add
lds
mov
jbe
mov
add
xor
xor
jl
leave
dec
push
int3
and
cmc
in
movsl
cmp
sub
leave
sti
loope
mov
inc
mov
or
in
faddl
andl
or
gs
mov
or
xlat
sbb
pusha
pusha
sub
js
lods
arpl
aaa
adcb
adc
mov
inc
mov
add
pop
inc
and
cmc
loopne
lret
movsb
rolb
out
push
dec
xor
push
cmp
not
or
xchg
lcall
subb
cwtl
fdivr
mov
or
out
hlt
ror
xor
sub
je
jge
adc
out
rol
in
adc
cmp
les
data16
adcl
xchg
push
mov
shl
aas
popa
dec
cs
sub
mov
add
sahf
mov
or
lods
and
push
lcall
paddsb
loopne
and
inc
push
lea
dec
cmp
pop
ss
loopne
jo
dec
dec
or
push
or
lea
mov
fisubrl
cmp
popa
push
scas
mov
mov
dec
adc
roll
xor
or
aas
push
jle
sbb
push
popa
ljmp
xor
adc
les
push
lret
cmp
lahf
popa
dec
adc
mov
lret
aaa
stos
and
adc
pop
fdivp
mov
xchg
mull
xchg
popf
fwait
jg
fs
or
cmpsl
mov
push
and
imul
iret
ret
jne
jl
inc
fldcw
xchg
repnz
inc
xorl
cmp
pushf
stos
call
stc
mov
mov
out
jo
das
in
push
and
sar
enter
int3
lods
jp
loopne
ja
dec
ror
scas
lret
jae
adcb
mov
mov
add
jb
inc
ljmp
std
add
faddp
cld
xchg
or
mov
jmp
pop
negb
mov
adc
xchg
aas
inc
orb
and
lahf
and
jge
push
fwait
jae
jnp
pop
xchg
ret
pop
in
movsl
in
push
jns
test
push
out
xchg
xlat
xor
inc
push
fmuls
lcall
stos
popa
in
adcb
cmp
mov
in
leave
enter
jae
xchg
sbb
pop
out
cwtl
and
pop
and
out
sub
and
ja
dec
inc
xchg
adc
xchg
jmp
and
scas
inc
pusha
sub
mov
in
ja
or
jb
test
fwait
fs
sti
inc
xor
loope
clc
inc
jb
cmp
mov
popf
icebp
xor
pusha
lret
mov
ffree
rcr
or
in
sbb
mov
pusha
mov
stc
and
mov
dec
adc
and
push
call
data16
add
xlat
and
lods
dec
int
mov
pop
xlat
push
movsb
test
pop
test
scas
xchg
nop
mov
loope
pop
shll
cltd
and
icebp
fmull
insl
test
xor
xor
iret
les
pop
or
cli
dec
iret
add
insl
push
out
dec
stos
fwait
push
call
adc
jns
lret
jle
inc
int
movsl
clc
std
cmp
mov
push
jno
scas
cmpsl
adc
test
mov
std
outsl
scas
lock
dec
sbb
xchg
aaa
test
cmp
dec
rcrl
sbb
es
or
push
adc
adc
push
push
inc
dec
mov
xor
loope
jb
je
cltd
mov
fildl
iret
lds
nop
jo
loopne
cmp
and
test
sub
mov
or
mov
mov
sub
or
inc
fldcw
fwait
jg
pop
mov
shll
ret
and
cmpsb
and
pop
gs
nopl
imul
xor
xor
push
icebp
jae
inc
idivb
in
mov
cmpsb
dec
xor
iret
cli
ficomps
dec
sbb
repz
mov
cs
aas
lahf
push
cmpsl
es
insb
imul
push
mov
pop
mov
les
ficompl
test
cwtl
pop
pop
repnz
inc
pop
push
inc
cmc
sub
and
lahf
int3
sti
das
std
mov
sbb
inc
notb
mov
pop
fisubrs
cmp
mov
pop
xlat
cmpsb
out
mov
xlat
scas
inc
or
cs
test
fmul
mov
sbb
cmp
popa
enter
repz
cmpsb
push
inc
dec
push
or
fyl2xp1
push
add
xchg
imul
fiadds
inc
cmp
popa
mov
jno
dec
mov
pop
movsl
test
loope
arpl
pop
and
shlb
pop
data16
jecxz
dec
fcmovbe
xor
ja
das
mov
cld
jns
lods
xor
in
sbb
xchg
mov
insl
xor
pop
mov
and
bound
shll
add
bound
lret
lock
mov
sbb
mov
sti
xor
ret
pop
dec
jmp
or
out
xchg
jmp
dec
cmc
arpl
lahf
or
mov
adc
mov
pop
test
gs
and
aaa
sbb
mov
jecxz
adc
outsb
cmpsl
jle
inc
inc
lds
fwait
and
in
mov
dec
mov
js
pop
mov
into
mov
lahf
pop
cmc
imul
inc
je
xchg
inc
les
stc
dec
sbb
call
xchg
mov
xchg
sub
cmp
outsl
icebp
in
testl
or
stos
sub
in
stos
clc
or
outsb
imul
clc
in
jne
loop
outsb
aaa
js
jl
dec
aaa
jle
shll
sti
ret
xor
enter
mov
leave
mov
cmc
xchg
mov
shr
out
pushf
add
jp
jmp
adc
xchg
inc
popf
cmpsb
dec
sub
mov
pop
ds
mov
inc
test
mov
mov
and
fwait
test
addr16
lds
call
mov
or
and
fisubrs
push
outsb
and
adc
movsl
adc
lcall
mov
cli
in
lods
adc
jmp
jmp
test
fnstsw
fists
push
ftst
adc
mov
xor
filds
test
repnz
xor
lahf
stos
dec
xchg
loopne
lods
or
mov
pop
jmp
xor
test
push
sub
icebp
jmp
xor
and
frndint
adc
add
inc
jg
aad
ret
mov
test
popa
cmpl
ret
add
jge
pop
test
jo
pop
jecxz
mov
inc
bound
pop
fwait
add
cmpsb
idiv
imul
pop
movsb
mov
dec
push
fwait
mov
dec
fwait
mov
pop
mov
cmpsl
into
sub
or
jecxz
mov
lods
sbb
sub
out
push
movsl
in
adc
insb
dec
push
jne
mov
pop
cmp
sbb
mov
fildl
xchg
inc
sti
aad
jmp
or
jo
bswap
mov
aam
mov
into
add
inc
xor
lods
in
push
es
rorl
ret
dec
xor
jmp
out
sbbb
iret
pop
fwait
or
je
pushf
mov
pop
pop
sub
stos
js
cmpsb
push
daa
aad
stos
sub
jecxz
outsl
je
in
sti
mov
mov
mov
xor
dec
scas
cmp
iret
mov
mov
std
sbb
pop
loop
fldcw
les
dec
xchg
dec
repz
sti
scas
arpl
mov
xor
mov
mov
and
testb
les
movsl
insb
imul
push
mov
dec
or
mov
test
mov
shlb
mov
aas
adc
push
cli
xchg
fldenv
mov
ficomps
add
inc
pop
insb
aam
out
mull
fcompl
scas
cmp
clc
pop
lret
scas
inc
jl
outsl
fucom
js
xor
cmp
push
daa
test
in
test
les
lcall
xchg
pop
mov
push
sub
outsl
lcall
push
inc
fidivs
test
adc
lods
flds
sub
mov
push
in
xchg
or
ds
out
fists
inc
adc
scas
dec
xor
popf
mov
inc
ds
mov
mov
roll
cmp
sahf
nop
aas
dec
jmp
dec
pushf
add
xchg
adc
aam
xchg
mov
lcall
fstpl
dec
lret
xor
dec
xchg
repz
rcrb
cli
cmpsl
inc
loope
add
loop
cmp
xor
shll
dec
sarl
sti
lret
lcall
scas
dec
xor
mov
imul
orb
pop
bound
sub
mov
loope
out
outsb
sbb
cmpsl
pop
cli
mov
bnd
mov
fs
sti
sub
outsb
iret
cmp
ffree
xlat
mov
push
mov
and
lret
rcll
stc
sbb
fbstp
in
mov
repnz
sbb
lahf
adc
cmp
sub
addr16
add
movsb
hlt
outsl
addb
iret
in
je
xchg
jg
fdivrs
cmp
jg
xchg
out
xchg
mov
enter
hlt
jbe
push
clc
sub
mov
mov
and
outsl
inc
int3
jecxz
dec
clc
lock
and
lea
enter
mov
dec
lret
fistl
gs
sub
cmpsl
sub
jns
es
scas
xchg
mov
pop
fstl
out
xchg
lcall
push
push
cli
cmp
pusha
loop
jb
adc
pop
test
scas
push
mov
out
cmp
sub
sahf
ljmp
mov
test
xor
cmp
addr16
pop
jne
in
imul
xchg
jae
adc
jo
push
jnp
inc
mov
add
xor
lock
es
sarb
dec
insl
out
das
pusha
jecxz
and
mov
leave
addr16
insb
dec
pop
jb
and
push
adc
lret
cmp
push
push
inc
sub
outsl
mov
sbb
cmp
stos
out
lods
inc
jl
jp
movd
ljmp
dec
mov
inc
mov
divl
sub
ljmp
pop
pop
inc
push
lret
cltd
mov
cmp
shrb
inc
repz
fldt
pop
or
xor
pop
adc
mov
push
sub
and
push
dec
push
popa
ds
subl
pop
ja,pn
cmp
cwtl
in
jecxz
fistps
add
adc
and
xor
sbb
lret
jecxz
or
or
fs
loopne
push
call
int3
dec
test
xchg
or
push
subl
stos
dec
test
xor
nop
aaa
inc
jnp
std
std
outsb
dec
outsl
ret
aas
mov
stc
mov
sbb
unpcklps
and
add
push
inc
cltd
fwait
adc
pop
aad
int3
das
push
pop
das
fcoms
push
scas
mov
hlt
inc
test
popa
popf
outsl
jns
add
outsb
adc
lds
jmp
fsubl
mov
cmpsb
jecxz
sarl
pop
lods
testb
jecxz
xchg
jo
jns
cmp
jbe
xchg
arpl
daa
mov
push
inc
inc
sub
hlt
mov
and
or
jae
push
daa
enter
mov
cmpsl
jp
mov
jmp
pusha
rcrb
push
lds
cltd
dec
lock
xlat
sarb
test
lock
push
and
xchg
mov
mov
jae
sbb
fdivl
dec
bnd
or
pop
sub
inc
icebp
orb
cmp
das
je
cmp
sbb
dec
mov
xchg
inc
inc
xchg
xor
ds
push
mov
inc
mov
movsb
shlb
xchg
push
test
inc
cli
jge
movsl
push
iret
push
mov
sub
fistpl
rolb
sbb
push
sub
pop
mov
adc
rcr
push
push
sub
shlb
test
aam
aam
xlat
stc
mov
cs
push
mov
sbb
xchg
cmp
jne
sbb
mov
push
insb
lcall
ja
cmpsl
mov
jno
fidivs
pop
mov
jg
add
and
popa
les
xchg
jne
mov
mov
pop
fiaddl
test
mov
test
movsl
adc
cmp
xchg
clc
fadd
or
add
and
cmp
sbb
push
mov
pusha
adc
push
xchg
pop
mov
cmpsl
ret
bound
iret
rolb
fimuls
fisubl
and
dec
cmp
and
imull
lret
ljmp
mov
or
sbb
loope
test
aam
and
jnp
icebp
mov
push
sbb
push
cmp
aas
push
or
inc
inc
inc
lock
cmp
ja
imul
shrb
mov
mov
mov
std
aad
and
cmpsw
test
ficoms
aam
aaa
sub
in
mov
xor
sub
dec
movlps
mov
ret
mov
and
je
pop
in
fucompp
adc
mov
xchg
xchg
jbe
sub
sub
xor
mov
jo
mov
clc
leave
push
xor
stos
mov
add
xor
jle
leave
cmp
dec
and
sub
dec
xchg
xchg
or
cmpsl
jmp
mov
loop
sbb
outsl
hlt
inc
insw
or
adc
cmp
lret
shll
jl
sbb
adc
push
mov
setge
cli
lods
cli
sahf
xor
fwait
sub
bound
push
aaa
cmp
inc
testl
lods
lods
fdivr
inc
adc
cmpsl
dec
xor
jno
mov
aas
fnstcw
dec
rcr
insb
or
dec
adc
xor
mov
mov
and
jecxz
clc
addr16
xor
lods
cmc
xchg
cmc
or
jl
in
xor
add
inc
lret
xchg
mov
mov
xchg
in
mov
xchg
sub
mov
mov
insl
and
xchg
push
fimuls
xchg
out
lret
mov
lret
or
and
mov
test
pop
push
fcomps
mov
negl
int3
sub
add
push
cmpsl
xchg
sbb
ret
data16
fwait
mov
in
push
inc
nop
pop
mov
jae
push
jmpw
push
or
into
out
je
mov
and
sbbb
push
nop
in
sub
dec
fmul
enter
mov
shll
idivl
scas
call
sbb
popf
pop
dec
xchg
sub
fwait
clc
sub
cltd
stos
mov
and
std
pop
inc
cld
ljmp
imul
xlat
push
dec
gs
clc
adc
mov
jno
fsubs
int3
adc
jecxz
dec
push
pop
das
test
repnz
adc
pop
leave
sbb
xchg
sub
xchg
fistpll
push
les
dec
dec
lcall
mov
test
fisubrs
test
pop
jb
imul
push
stc
xchg
rcrl
mov
ret
sbb
mov
jmp
xor
dec
outsl
inc
ja
push
cmp
jo
test
and
aam
jmp
push
fadds
jne
push
loop
mov
dec
js
push
inc
stos
dec
adc
sarb
arpl
ds
push
pop
xchg
in
cmp
and
loopne
mov
mov
sub
mov
je
inc
mov
mov
sbb
sub
push
rcrb
fwait
bound
int
sarl
xlat
scas
jg
mov
repz
es
lock
sbb
inc
inc
dec
sub
out
xchg
cmc
sbb
push
or
pop
add
push
rclb
jb
cmpsl
fidivrs
and
stos
movsl
mov
fldl
dec
cmp
lahf
xchg
in
inc
std
popf
or
xchg
jae
ja
pop
mov
or
test
cwtl
jecxz
gs
xor
sbb
mov
adc
jns
inc
js
lock
xor
xor
adc
xor
xchg
sub
inc
xor
jae
sbb
mov
in
mov
pop
fldcw
ds
jecxz
bound
pop
mov
mov
fs
cmp
insl
cmc
sbb
in
jne
dec
inc
fcmovnb
test
mov
sub
push
dec
cmp
or
push
jmp
mov
and
dec
outsb
addr16
daa
mov
inc
dec
push
mov
mov
adc
pop
daa
xor
sub
dec
int3
scas
mov
iret
xchg
int
cmp
sar
mov
sbb
jl
mov
pop
mov
push
loop
jge
inc
or
push
push
dec
cwtl
mov
pop
push
jle
sub
mov
cld
add
daa
jnp
notb
add
fisttpll
imul
mov
jns
mov
into
inc
push
je
out
fdivs
fidivrs
xchg
clc
dec
jecxz
mov
test
jp
jg
ds
mov
inc
xchg
xor
adc
jmp
add
and
in
xor
dec
test
in
xchg
stos
and
nop
jmp
cmc
cmp
lea
insl
ja
push
lret
pusha
addr16
jbe
fiaddl
out
out
aam
insb
cwtl
or
or
dec
cs
xchg
pop
repz
insb
inc
pop
xchg
repz
sub
xchg
dec
cmc
hlt
mov
popa
xor
adc
jae
sub
outsb
and
cmp
rcl
icebp
pusha
inc
daa
jnp
scas
push
push
lods
mov
ss
inc
xor
fisubl
push
mov
int3
fidivl
sarb
rcrl
movsb
lret
mov
mov
fiadds
neg
xchg
dec
mov
jp
rcl
mov
mov
push
inc
insb
push
sbb
jbe
mov
out
imul
rorb
movsl
aaa
push
imul
and
aaa
dec
mov
orb
sti
mov
dec
cmp
xchg
int3
lret
ljmp
rol
jo
add
sub
mov
pop
dec
dec
fwait
cs
lock
pop
adc
and
in
inc
or
icebp
test
jle
push
mov
mov
xor
mov
mov
aad
lods
mov
fs
inc
test
inc
fiadds
dec
mov
xchg
xlat
push
into
adc
jbe,pt
and
and
sub
and
pop
push
cmpsl
lds
shrl
ja
dec
in
stos
sbbb
lds
inc
pop
cmpsl
add
nop
out
push
insl
negb
jg
xchg
shr
js
inc
and
test
cmp
mov
ljmp
pop
cmpsl
mov
out
add
and
mov
mov
cmc
xchg
ja
stos
push
push
xchg
mov
jge
mov
fisttpl
in
xchg
jge
jnp
sbb
das
pop
addb
mov
xor
push
push
jle
mov
mov
xor
xchg
push
sbb
test
jnp
and
aas
xchg
mov
mov
and
cmpsb
push
lahf
cmovg
push
mov
mov
mov
orl
push
es
imulb
or
in
sub
es
loope
mov
and
adc
mov
mov
outsl
jbe
scas
adc
dec
or
and
fcoms
jge
jno,pt
inc
insl
cld
push
xchg
rcl
add
int
shl
mov
lret
out
adc
jae
xor
shl
iret
ss
adc
rclb
adc
pop
arpl
fldcw
xor
push
in
jns
stos
push
std
nop
mov
jbe
and
data16
pop
cmpl
xchg
aaa
push
dec
fcoms
mov
movb
xchg
adc
and
or
add
add
mov
cmpsl
mov
iret
add
jae
pop
mov
pop
adc
mov
in
fcomps
or
adc
lea
mov
inc
enter
or
inc
filds
or
bound
mov
jg
jmp
icebp
mov
push
or
js
rolb
stc
cmp
popl
aas
pop
or
dec
xor
add
pop
mov
cmp
out
pop
sbb
jge
mov
je
popf
cwtl
pusha
jb
cmpsl
pop
mov
add
les
icebp
insl
and
test
test
roll
jge
mov
push
loope
xchg
pop
aad
sub
cmp
inc
xor
inc
xchg
es
adc
scas
pop
aam
pop
gs
sbb
mov
push
mov
inc
pop
mov
sahf
mov
subl
ret
pusha
fldl
fiadds
dec
adc
movsl
out
mov
add
mov
fimuls
or
stos
mov
orl
dec
pop
clc
adcl
clc
popa
das
pop
sbb
fstpl
lds
pop
push
add
fwait
cmpsb
xor
ficoml
pop
jmp
xor
fisttpll
jmp
std
loopne
push
jg
jp
faddp
lds
xor
mov
dec
loope
jo
js
inc
out
mov
out
int
leave
shl
jl
leave
lret
incb
mov
lods
jecxz
fmull
pop
lcall
xchg
rcrl
cld
dec
push
std
cld
xlat
xor
xor
jb
add
in
popa
out
mov
pop
stc
push
inc
roll
ds
dec
push
pusha
idiv
movsb
out
fwait
lds
xor
pop
sub
call
pop
dec
arpl
int3
inc
data16
movsb
rolb
adc
ljmp
xor
imul
xchg
sahf
pop
int
dec
push
adc
out
push
xchg
jne
push
cmp
int
adc
rorb
adc
mov
xlat
aaa
arpl
aad
stos
mov
pop
cmpsb
mov
sub
jbe
xchg
mov
fwait
subps
cmp
lea
xchg
xchg
dec
mov
int
jg
imul
push
and
and
adc
or
mov
stos
mov
mov
andb
shl
fdivrs
add
lock
adc
decb
xchg
ret
fcmovu
jb
inc
push
push
xor
xchg
imul
cld
mov
je
xor
fiaddl
cmp
pushf
adc
add
or
jb
ret
lock
popf
dec
shll
or
mov
and
arpl
ror
test
xchg
sbb
mov
das
add
xbegin
pop
adc
shrl
icebp
flds
sti
fidivs
or
xchg
mov
shrl
mull
xor
fmuls
je
mov
lret
aam
sbb
icebp
and
add
xrelease
frstor
jge
cltd
push
inc
out
sbb
dec
and
jne
insl
enter
sbb
fstpl
popf
repnz
jbe
mov
enter
adc
xchg
cmc
jne
rcl
xor
in
scas
lea
dec
jo
and
cmpsl
gs
add
aas
inc
xchg
pop
lret
sahf
es
mov
jae
es
jg
pop
xchg
into
in
fdivr
mov
std
mov
js
jo
adc
rcll
jle
test
js
add
not
dec
jg
pop
jecxz
mov
sub
enter
pop
test
repz
sbb
add
lahf
ret
lret
repnz
int3
mov
pop
sub
pop
jb
loopne
cld
xchg
or
ljmp
rcrb
lds
cmpsl
sysexit
add
sti
or
lods
add
or
mov
idivb
pop
into
aam
pusha
aam
outsl
pop
adc
outsb
hlt
xor
mov
nop
or
sub
das
xchg
mov
sti
xchg
pop
push
push
xor
pop
sbb
mov
pop
mov
mov
mov
sbb
outsl
add
out
sub
pop
lds
rcll
adc
inc
clc
ficompl
inc
int
imul
adc
in
xchg
cmp
int
ja
adc
sbb
mov
neg
imul
out
inc
clc
clc
cld
add
repz
sub
add
cmpsb
pushf
adc
lcall
xor
repnz
nop
xchg
cmp
mov
cmpsl
rolw
xchg
push
jae
xchg
les
das
xchg
push
xor
cmpsb
xchg
mov
daa
or
mov
jns
insl
adc
aam
cmp
add
pop
or
cmpsl
mov
lods
out
divb
jp
jnp
mov
mov
xchg
popf
cmp
ja
and
stc
jb
movsl
mov
mov
mov
mov
fcompl
sti
insl
xchg
enter
ret
dec
arpl
aas
inc
inc
roll
int3
mov
cltd
outsl
in
rcll
testl
hlt
mov
mov
lds
fldt
push
mov
xchg
pop
loopne
push
in
repnz
scas
and
pop
xor
aas
mov
cmpsb
orl
adc
push
sbb
mov
in
cmpsl
ret
loopne,pt
fadd
into
je
add
ret
and
les
out
pop
sub
adc
jmp
jecxz
push
out
stos
popa
aad
inc
push
lret
mov
aaa
push
pop
add
cmp
in
cmp
xor
je
leave
pop
addl
mov
ret
add
xor
inc
movsl
cmp
loope
sbb
pop
add
ss
pop
fcompl
lahf
pop
fcoms
cmpsl
xlat
or
xor
pop
fwait
ret
aaa
jb
adc
push
xor
push
hlt
addr16
aad
into
test
mov
push
or
xor
dec
pusha
stc
ret
push
mov
stc
cltd
inc
or
sbb
cmp
dec
mov
outsb
push
and
sarl
jle
push
iret
inc
aam
add
pop
cli
dec
xchg
mov
push
inc
aaa
sbb
jle
cmpsb
mov
add
imul
iret
fistps
or
mov
add
pop
in
out
hlt
add
iret
sub
xor
push
and
mov
mov
out
rorb
jp
clc
pusha
out
fcompl
xchg
xchg
sbb
inc
jge
mov
insb
mov
cli
popa
or
xor
inc
fwait
lods
stos
pop
idivl
divl
and
sub
add
sbb
arpl
out
pop
test
ss
mov
fisubrl
mov
and
cmp
push
test
pop
mov
pop
cmc
push
inc
mov
movsb
pop
jno
mov
adc
in
mov
shll
jns
xor
sub
imul
mov
xlat
imul
and
add
rcrl
add
lea
cmc
stos
es
ljmp
rcl
push
mov
repnz
push
shll
adc
mov
icebp
loope
xchg
adc
push
fidivrl
push
and
out
in
mov
push
mov
mov
pop
xor
jae
rolb
aam
incb
jae
fistps
adc
jle
je
dec
xor
sub
or
inc
xor
mov
pop
pop
mov
adc
movsb
and
or
sarl
iret
push
and
push
jne
inc
loope
mov
and
or
sbb
loope
popa
in
cmp
cmpsl
std
xchg
xchg
das
sbb
xchg
fsubl
dec
adc
sub
out
loopne
lods
pop
xchg
in
mov
push
lcall
jecxz
insb
mov
ret
inc
lahf
add
inc
adc
and
out
shrl
aas
or
jae
dec
add
and
out
sub
sub
sbb
cmp
andb
scas
les
add
push
cld
or
xor
fstp
shll
sub
jne
mov
ret
cltd
pop
subb
orl
xchg
je
pop
mov
movb
mov
sub
xorl
mov
push
pop
cmp
jp
pop
pop
mov
mov
jbe
mov
sub
in
ss
xchg
push
jbe
leave
pop
mov
stos
pop
and
movb
std
orb
ds
iret
and
inc
sbb
inc
cmp
pop
sarl
fmull
and
ss
in
nop
mov
sub
out
arpl
pop
sti
in
outsb
xchg
xor
cmpsl
jge
test
out
add
mov
xchg
add
push
cli
push
sub
loope
sub
shr
dec
je
mov
mov
xorl
and
aad
push
push
js
cmp
cmp
lods
add
inc
out
jecxz
lds
xor
cmp
lea
rcrl
sub
jg
sbb
push
arpl
lea
frstor
repz
pop
mov
pop
mov
mov
add
pop
pop
mov
mov
sbb
sahf
dec
dec
ss
movsb
in
jle
in
imul
imul
xor
js
aas
das
xor
push
imul
lea
stos
repz
sub
and
jne
imul
xor
data16
test
insl
jmp
insb
movsb
aas
pop
or
xchg
push
push
mov
cmp
in
pusha
pushf
hlt
ror
pop
or
dec
stos
lret
stos
and
shr
lcall
inc
inc
repnz
inc
shrb
jbe
rclb
xor
or
or
mov
adc
mov
sbb
xor
lret
popl
cmpsl
popf
xchg
mov
movsl
repnz
jmp
or
fbstp
imul
loop
ljmp
int
push
lret
xor
rorb
mov
pop
sub
dec
gs
sub
push
xchg
hlt
inc
and
nop
dec
in
scas
pop
ss
in
xchg
movsl
jp
pop
leave
scas
mov
inc
lods
adc
ja
popa
xor
pop
ficompl
sti
xor
pop
push
and
jmp
hlt
mov
jnp
inc
mov
pop
or
fstl
repz
lret
leave
add
mov
mov
outsb
sbb
and
mov
cmp
lock
rorb
jnp
mov
mov
push
mov
fnstsw
mov
or
jo
popa
dec
pop
mov
ret
sbb
int
xor
aaa
xchg
in
dec
dec
pop
adc
inc
push
cmp
pop
inc
cwtl
andl
xchg
sub
pop
jo
mov
mov
xchg
xchg
add
popa
sti
adc
cmp
push
aas
mov
push
fists
inc
repnz
push
mov
adc
mov
stos
push
sahf
sbb
push
sahf
movsb
xchg
ret
jb
rclb
jge
mov
lret
xchg
sbb
in
lret
and
adc
imul
les
mov
shll
nop
je
mov
iret
adc
sbb
pop
and
sub
cmpsb
and
test
aas
fmull
pop
fldt
fldcw
nop
xchg
sub
mov
cli
mov
test
xchg
mov
jp
sub
jno
mov
int3
mov
lea
inc
scas
push
xchg
pop
je
fwait
in
cmpsb
imul
adc
addb
or
shlb
mov
mov
jb
stos
mov
lcall
or
sbb
dec
dec
jbe
fisubl
push
pop
xor
jecxz
push
arpl
adc
mov
popa
imul
out
ficoml
imul
loop
pop
xlat
not
aad
subl
push
cmc
mov
out
sub
adc
sbb
shr
and
insb
loopne
cmp
add
cmp
sbb
adc
cmp
fldenv
sbb
aad
push
jb
clc
insl
filds
or
lcall
in
jg
ffreep
aas
mov
aad
icebp
scas
gs
jb
iret
movsb
rcl
orl
jbe
dec
addr16
cmp
in
fisubrs
rclb
dec
js
pop
outsl
adc
je
pop
jmp
lcall
jb
out
or
fistpl
sbb
ret
jb
xchg
cli
pushf
pop
pop
lret
test
push
jle
xlat
sbb
imul
aam
in
mov
lods
fsub
xchg
loope
fmull
and
andl
repnz
cmp
xchg
adc
loopne
add
test
lahf
outsl
fs
in
mov
jne
mov
aaa
daa
cli
clc
stos
in
stos
rcrb
sub
call
stos
test
xor
arpl
leave
add
ss
hlt
push
int3
mov
pop
push
jl
mov
pop
mov
cmp
inc
scas
xchg
aam
mov
jnp
push
arpl
adc
xchg
dec
insl
jge
push
lods
dec
rorb
push
push
mov
out
lcall
push
cwtl
iret
mov
fs
cmp
rcll
insl
mov
ss
in
cmp
pusha
int
xor
xor
scas
mov
xchg
lahf
in
adc
stos
insb
inc
ftst
jnp
mov
xor
nop
jb
jp
ds
sahf
rcl
xchg
fistl
mov
in
push
jnp
push
imul
dec
mov
or
cld
lea
cmc
faddl
cmpsl
or
sbb
add
jle
je
stc
dec
or
inc
xor
or
or
dec
fmulp
and
dec
cmpsl
pop
inc
jmp
les
adc
pop
popa
mov
ret
xchg
cld
aas
data16
mov
mov
push
rcrl
adcb
loopne
sub
fisttpl
jb
mov
and
and
add
pop
inc
loop
sub
insl
pop
je
subb
lea
cmc
pop
mov
jbe
icebp
cmp
loope
lock
inc
mov
test
jnp
testl
push
cmpsl
out
dec
push
hlt
dec
mov
cmc
sysexit
cwtl
in
loop
mov
mov
shrl
ljmp
xchg
pxor
inc
mov
out
jb
imul
cmp
adc
fsubr
push
mov
xchg
mov
test
test
xor
xlat
adc
dec
or
cmp
add
rdpmc
inc
loopne
aaa
mov
scas
ret
push
or
or
popa
nop
stos
ret
iret
ret
fs
add
aad
mov
fnstenv
sub
aad
arpl
sub
les
in
lods
insb
add
inc
pop
lods
sub
enter
imulb
mov
adc
or
dec
js
fbld
jp
inc
push
push
inc
kxnorw
bnd
out
mov
jnp
mov
mov
out
aaa
cltd
or
std
les
nop
dec
mov
xchg
sbb
mov
inc
loope
sbb
aad
pop
mov
notl
repz
sub
iret
xor
lods
cwtl
pop
xchg
sbb
add
mov
cmp
xlat
lea
push
cmp
out
mov
addr16
jbe
sti
call
aad
into
data16
inc
mov
dec
adc
sahf
leave
cmpsb
or
std
das
in
or
add
xchg
rcll
inc
push
jecxz
repz
xor
ret
sbb
cmc
out
dec
in
es
mov
cmp
leave
enter
lea
dec
out
inc
mov
scas
inc
mov
lock
fistl
cmc
lods
aaa
cmc
pushf
scas
rcrb
or
aaa
popf
popa
pop
lret
int
jnp
dec
testb
pop
push
ret
js
inc
mov
mov
pop
and
sbb
pusha
mov
mov
aam
or
outsl
fnsave
mov
fisubrl
sbb
sub
mov
cmp
sbb
ss
scas
pop
fs
test
fimull
xor
aad
lret
bound
cmc
mov
mov
mov
insb
icebp
test
icebp
lods
es
inc
loopne
popa
mov
jbe
or
push
xor
jp
push
xor
cmp
add
roll
cmpsl
dec
jle
inc
jmp
xchg
xchg
gs
int
fimull
mov
into
inc
add
cmp
mov
lahf
je
dec
jmp
sbb
jbe
sbb
loope
cli
fwait
or
pop
push
mov
cmp
fbstp
xchg
sbb
mov
fisubs
cmpsb
lret
cmpl
mov
cld
outsb
cmp
andb
scas
fsubrs
cltd
movsl
bnd
mov
fdivs
xchg
adc
mov
xchg
push
lods
push
xlat
xchg
enter
or
lods
fiaddl
inc
mov
cmp
xor
mov
mov
dec
mov
mov
xchg
lods
iret
push
aad
mov
test
and
push
roll
loop
fstp
fcomps
jno
xchg
mov
xchg
pop
jo
es
fdivrl
pop
dec
and
cmc
mov
mov
lcall
lret
aam
jns
mov
sti
or
ret
inc
dec
test
xchg
jl
rcll
insl
test
pop
jae
and
add
cli
lahf
imul
inc
adc
rclb
out
lods
out
add
loopne
es
push
dec
jbe
cmp
mov
pop
mov
mov
pop
fs
sbb
mov
lock
or
adc
and
add
enter
imull
push
push
dec
xchg
pop
ret
jnp
push
cli
push
jo
out
push
pop
loop
dec
inc
push
push
repz
cmp
loope
repz
pop
mov
sub
jbe
enter
mov
les
test
dec
sbb
sti
dec
add
push
add
cmp
jmp
xchg
add
push
out
es
mov
inc
mov
jnp
xor
mov
mov
jl
insb
aas
jns
cmpsl
mov
sub
mov
xchg
int3
inc
ss
or
je
fbld
mov
cmp
add
and
ud1
loop
sbb
mull
in
imul
or
and
out
outsb
std
imul
movsb
es
adc
sub
jno
push
nop
ret
mov
adc
repz
aaa
leave
mov
add
cmpb
mov
or
lock
push
or
mov
xchg
data16
pop
or
dec
out
inc
mov
push
lea
jmp
sub
outsl
add
push
dec
dec
lcall
notb
adc
call
jbe
xor
sub
mov
daa
jb
jle
rolb
dec
repz
fistps
test
fs
push
sbb
sub
xchg
enter
call
mov
stc
jno
mov
sub
pop
in
outsl
sbb
hlt
pusha
mov
push
push
fdivrs
mov
ds
inc
and
adc
cmp
icebp
fsubrs
inc
mov
js
pusha
in
insb
inc
mov
pop
pop
imulb
xchg
clc
aad
repz
xchg
enter
lea
enter
pusha
shl
jecxz
loopne
mov
je
adc
outsl
xor
repz
add
mov
jne
inc
pop
and
or
insb
popa
addl
add
inc
leave
sarb
push
out
mov
sbb
jmp
jae
mov
mov
rol
pop
jle
adc
enter
das
xor
je
adc
sbb
sbb
in
ret
movsl
imul
cmc
cmpb
loop
and
push
mov
jo
dec
nop
pop
add
adc
test
in
xor
imul
cs
lahf
outsl
les
push
rorl
nopl
movsb
js
insl
push
stos
stos
and
int
cmc
into
pusha
pop
fadd
mov
jnp
sbb
mov
orb
in
and
or
push
add
sub
je
push
orl
enter
cmp
je
mov
inc
xchg
xor
fwait
adc
into
xor
inc
shl
imul
pop
imul
inc
fnsave
mov
cmp
test
sub
xor
test
gs
inc
fnstenv
jle
inc
pop
pop
ja
sbb
movsl
xchg
and
pop
push
testb
dec
cld
push
mov
and
mov
test
test
mov
sub
lods
mov
shl
xlat
sub
mul
or
jge
imulb
arpl
insl
cmpsl
lahf
xorl
cmp
aas
scas
sbb
and
aas
cmpsb
cmp
xor
lcall
push
cmp
ljmp
jae
sbb
cmp
add
paddusw
inc
jmp
insb
mov
jmp
test
and
aad
cmp
mov
mov
sub
icebp
or
jle
fwait
fs
rcrl
push
jbe
mov
sahf
cs
adc
pop
jb
pop
mov
sub
cld
out
jp
xchg
pop
sti
cmp
push
iret
cmp
mov
xlat
sub
mov
xor
mov
test
fldz
push
inc
adc
testl
xchg
mov
add
lret
mov
pusha
and
mul
xchg
inc
push
mov
inc
or
jae
cmp
and
sbb
fstpt
lcall
inc
bound
dec
fsubs
mov
outsl
ret
xchg
mov
cmc
add
aas
adc
sti
xrelease
mov
inc
call
add
shl
jno
mov
bound
clc
notb
mov
sub
sub
jmp
adc
or
sbb
ljmp
xchg
cmpsb
in
cmp
mov
sbb
mov
and
mov
into
or
adc
mov
nop
cmp
or
loope
mov
cmp
stos
xorl
push
js
push
mov
dec
adc
dec
cmpsb
ja
hlt
dec
jmp
and
insb
mov
add
insb
pop
repz
ret
iret
stos
mov
mov
in
mov
decl
jnp
mov
xchg
imul
or
adc
inc
dec
push
int
cmpsb
fisttpll
mov
clc
insb
lods
mov
and
push
fsubrs
cmp
ror
cmp
mov
dec
aaa
nop
movsb
sbb
xor
push
xchg
add
add
xchg
or
jmp
cwtl
mov
sbb
cwtl
in
pop
sub
in
mov
andb
and
push
add
push
inc
pop
cmp
pusha
pop
aaa
xlat
add
stos
pop
sbb
in
pop
stos
add
outsb
leave
outsl
aam
loopne
fadd
pop
arpl
xor
mov
pop
in
xchg
inc
jae
adc
xchg
mov
ds
shlb
xor
push
ljmp
loope
cs
popa
inc
fsubrl
fucomi
arpl
adc
out
jp
pop
fstps
jne
inc
mov
loop
push
cmp
shlb
daa
hlt
push
xchg
dec
sub
jo
fisubs
pop
mov
cmc
jecxz
lcall
push
xchg
stos
mov
add
mov
fdivrl
add
push
fs
nop
shl
mov
dec
jmp
out
outsb
adc
lret
or
cli
mov
out
sub
gs
push
jp
lea
jno
xchg
or
jae
fwait
and
fidivrs
scas
inc
test
int3
inc
sub
sti
mov
mov
std
test
mov
dec
jge
out
adc
pop
cmc
jmp
pop
cs
cs
pop
jecxz
addl
ds
mov
imul
test
mov
test
mov
xor
out
adc
shll
pop
enter
lock
stos
jmp
sub
stos
aaa
sub
and
mov
ret
jg
xchg
testl
into
shr
stos
cltd
das
pop
dec
add
pop
inc
cli
test
pushf
pop
xor
incb
aaa
rolb
cmp
mov
out
add
fcmovnbe
mov
or
push
ret
jl
sbb
cmp
loope
lret
push
outsb
cli
mov
pop
dec
jge
jo
jle
and
cmp
cltd
xchg
mov
inc
xchg
add
sbbl
cld
xor
repnz
push
pop
imul
lret
push
cmp
jp
hlt
lds
in
cmp
aam
mov
loop
add
sub
sbb
mov
cmp
leave
sarl
and
sbbl
xor
adc
jp
std
bnd
add
divl
push
push
sub
cltd
ds
mov
lcall
in
dec
sub
mul
jge
and
xlat
cmp
adc
or
mov
or
sub
test
stc
cmc
outsb
or
cmpsl
sahf
aam
inc
ja
xor
jae
lds
push
cld
inc
shr
cmp
pushf
pcmpeqw
sbb
aad
daa
loop
dec
mov
in
xchg
inc
pop
xor
jg
dec
cld
mov
lds
rcrb
add
mov
std
loop
fadd
pop
push
xchg
xorb
test
ja
pop
andb
xlat
int
xchg
lea
aas
and
jle
aas
fdivrs
loopne
add
int3
push
add
out
js
jecxz
mov
mov
sub
pop
pop
xchg
pop
mov
mov
in
cmp
loope
popa
dec
sbb
push
xor
dec
cmp
in
bound
sbb
cld
fwait
mov
fcoml
lret
xor
in
xchg
dec
mov
lods
rcl
test
push
push
mov
sub
pop
jne
adc
dec
ja
push
inc
mov
or
xchg
sbb
xor
mov
shll
xchg
ds
pop
mov
test
fs
in
icebp
pop
loop
xchg
cmc
insl
sbb
dec
imul
jne
adc
das
inc
push
decb
jno
or
or
dec
mov
sub
dec
mov
imul
adc
jne
or
cmp
dec
sahf
sub
insl
add
push
pop
xchg
mov
sub
scas
mov
adc
lds
or
in
push
cld
mov
push
sar
sbb
loop
fistl
fnstenv
dec
dec
mov
fs
add
inc
lock
dec
rclb
push
iret
sub
sbb
mov
xchg
sub
cmp
mov
xlat
rclb
cmc
or
cmpsl
inc
rorl
push
push
adc
mov
sub
in
mov
jg
sub
mov
repnz
lea
mov
sbb
dec
adc
dec
hlt
inc
out
sub
cmp
rcrb
aas
jl
xchg
jecxz
mov
and
stc
hlt
notb
and
push
inc
mov
mov
pop
out
xor
mov
stc
pop
jbe
out
dec
add
fs
fs
movsl
nop
lret
inc
rol
push
outsb
pusha
outsl
or
mov
addb
inc
ljmp
and
lock
jne
hlt
jmp
adcl
xor
dec
fbstp
movb
xor
ret
jp
popf
orb
outsb
imul
dec
and
xchg
add
stos
iret
in
mov
add
orb
inc
sub
jno
or
lret
pop
cwtl
fdivs
pop
mov
test
pushf
xchg
hlt
mov
sbb
mov
aad
loop
data16
cli
movsl
mov
aaa
jle
das
cmpsl
sub
mov
xor
test
jp
fsts
out
pop
test
mov
cmpsl
cltd
in
xchg
jne
mov
ret
adc
subb
arpl
mov
in
mov
rcll
mov
mov
stc
and
xor
mov
je
mov
lcall
imul
out
aas
xchg
stos
stos
loope
cmp
adc
pop
mov
fprem
adc
and
cmp
xchg
loope
and
aaa
push
mov
push
pusha
cmpsl
mov
and
lds
cmpsl
rcrb
adc
cmp
add
aaa
or
pop
push
push
sub
insl
ljmp
fistpl
ficomps
ret
xchg
add
out
mov
add
sbb
mov
int3
dec
ret
rcrb
data16
popfw
mov
pop
pop
mov
fs
pusha
sbb
xchg
or
jnp
ret
inc
dec
xchg
pushf
cli
or
popf
pop
mov
inc
sbb
inc
std
jecxz
addl
jg
fimull
shll
outsl
inc
adc
sbb
jg
notb
cltd
jae
lods
sti
repz
and
jns
inc
popa
sbb
popa
jmp
mov
jmp
std
sub
and
mov
fadds
in
fsubrs
stos
test
sbb
test
push
xchg
sbb
add
mov
mov
and
mov
loopne
lahf
shlb
adc
div
sub
dec
jne
loop
mov
sub
xlat
out
imul
cmpsb
int
xor
jbe
cmp
std
mov
pop
pusha
push
jo
sbbb
add
lahf
dec
push
rorb
or
jmp
fwait
sub
stos
int3
addr16
ja
lock
mov
fdiv
aad
jmp
divb
test
pusha
fidivrl
mov
mov
outsl
ret
mulb
cs
gs
adc
lahf
in
ret
fmull
xchg
shll
in
jnp
movsl
jne
les
ds
fs
pusha
add
sbb
ret
jns
scas
mov
mov
into
mov
sbb
or
ja
jb
sub
fsub
loop
arpl
fisttpl
or
in
mov
and
shlb
mov
nop
push
inc
cmpsb
mov
iret
imul
lds
sahf
mov
imul
repz
cld
cmp
adc
rolb
push
sti
xchg
das
aaa
iret
pop
pop
shrb
add
adc
cmp
das
or
cmp
jle
loope
and
lods
out
ror
sbb
add
dec
ss
sub
cmpsl
sub
or
movsl
and
dec
jnp
mov
cmpsl
stc
rolb
in
inc
add
aas
call
adc
cmp
leave
inc
cmp
mov
mov
jne
in
inc
filds
lds
arpl
cmc
xchg
fcmovu
mov
mov
scas
or
push
dec
xor
sahf
jle
jl
sbb
dec
push
cs
insl
ret
out
cmp
mov
adc
pop
jnp
add
jecxz
adcb
push
nop
movsb
ss
leave
xchg
cmp
jne
dec
pop
gs
pop
shlb
mov
lea
mov
sub
dec
fcmovnbe
sahf
test
mov
leave
inc
aam
int
in
in
cmp
lret
stos
add
adc
data16
inc
cmpsl
notl
dec
push
cmp
add
add
jmp
dec
ret
pop
inc
xlat
bound
call
call
jmp
sbbb
jle
divl
enter
or
addl
test
push
fdivrp
cmp
fimull
cmp
push
jne
cmpsl
dec
adc
hlt
mov
std
pop
repnz
out
add
fdivs
out
push
xor
cmp
xchg
pop
inc
mov
dec
fcmovbe
fmuls
jae
cmp
and
add
jmp
push
and
jle
out
mov
push
ds
push
pop
jmp
pop
lcall
std
add
leave
cld
lods
adc
cmpsl
ljmp
es
add
or
mov
adc
arpl
fdivl
adc
adc
or
and
loope
mov
out
mov
xor
popa
repnz
inc
scas
cmpl
inc
dec
push
add
std
fwait
xor
sub
jle
stos
xchg
jle
sub
pop
ffree
cmp
lods
int3
and
add
movsl
inc
cld
push
clc
or
jb
nop
ret
test
test
int3
mov
and
ret
jmp
int
aad
xchg
mov
mov
or
adc
xor
movsl
xchg
cli
test
pop
hlt
inc
adc
xchg
mov
inc
das
sarb
test
push
outsl
push
xor
mov
xlat
mov
sbb
inc
jmp
ljmp
pop
icebp
adc
pop
or
dec
dec
ja
sahf
adc
mov
mov
cli
cmp
jmp
and
loope
mov
push
xor
lock
pusha
and
jmp
add
je
fisttpl
push
add
loopne
or
lret
adc
mov
pop
push
push
sbb
mov
push
xor
xor
jecxz
cmp
mov
adc
xor
mov
adc
fs
mov
movsl
cmpsb
xchg
add
fcmovnu
ret
jl
mov
or
inc
push
test
out
repnz
xchg
mov
popa
into
rcll
insl
push
test
inc
push
dec
sub
iret
pop
jp
popa
push
add
fldt
fwait
push
sub
add
mov
mov
xor
mov
push
sub
je
insl
lock
cs
cli
sub
mov
outsb
jmp
push
testb
std
movsl
adc
jmp
faddl
mov
pop
jg
mov
sti
lock
jb
add
inc
jno
add
push
movsl
mov
and
jge
xor
std
xchg
popf
in
pop
repz
mov
lods
ds
sahf
mov
shrb
xchg
add
fsts
int3
xlat
shlb
movsb
jmp
jne
inc
pop
inc
sub
dec
aam
faddl
lahf
stos
pop
adc
mov
xor
mov
push
pop
xor
xchg
dec
jecxz
sti
outsl
dec
mov
mov
in
lock
mov
pop
jnp
fwait
xor
xchg
movsb
cmc
ja
sbb
sarb
jno
mov
and
shrb
mov
sub
cmpsb
push
inc
fxch
push
ja
jl
pop
lds
repz
sbb
cld
push
pusha
subb
ffreep
loopne
into
jg
fimuls
push
loop
bnd
or
dec
dec
mov
pop
arpl
filds
jg
leave
adc
mov
mov
popa
mov
mov
aam
inc
mov
mov
mov
in
jnp
xor
pop
xor
xor
cmp
test
mov
adc
add
insl
rclb
out
test
push
lret
ss
outsb
inc
lcall
fwait
xchg
sub
ja
xor
xchg
xchg
and
js
insl
push
cmpsb
sbb
loopne
pop
dec
mov
out
mov
push
popf
sub
sub
inc
xchg
sub
mov
cli
inc
cwtl
imul
loopne
int
loope
fcoml
ficoms
jge
out
test
daa
out
les
test
pop
fnstenv
or
or
cs
inc
inc
sub
popa
outsl
and
pop
cmc
cmp
mov
sbb
je
mov
and
je
xchg
inc
push
sub
addl
in
or
in
pop
int3
xorl
xlat
aad
test
inc
push
and
jl
jb
repz
mov
inc
call
adc
rorl
in
sti
outsl
movsl
mov
movsl
and
mov
adc
push
jno
cmp
insl
adc
xor
shl
scas
cmp
cmc
jecxz
add
movsb
mov
test
jns
test
add
repz
push
cmpsl
and
icebp
mov
mov
cld
mov
std
jnp
push
jl
cmc
dec
movsl
cmpsl
insl
dec
js
rorl
sbb
popf
mov
push
pop
mov
pop
cs
mov
xlat
push
or
in
xor
ds
sarb
in
lret
fnstcw
out
jnp
sub
pop
int3
xchg
out
dec
bound
and
push
ljmp
loopne
fs
dec
popa
pop
and
and
loope
jp
sub
or
push
fldcw
cli
sahf
loope
shl
rorl
pop
shl
movsl
jg
jmp
add
in
pop
shl
inc
sbb
ss
jno
jp
adc
shrb
xchg
lods
pop
iret
popa
pop
mov
pop
dec
fstpl
fidivrl
cli
cld
movsb
jbe
jb
add
pop
sub
add
jp
in
sbb
xor
mov
popa
scas
repnz
cmp
add
int
xor
je
add
inc
data16
jmp
addr16
mov
push
popa
mov
jl
leave
pop
sbb
sbb
cs
div
cmp
pop
in
out
ret
dec
pop
inc
mov
aam
in
sbb
sar
fstps
push
aaa
pop
dec
sbb
aad
dec
push
in
js
pusha
dec
ds
int3
push
pop
int
cltd
int3
pop
cltd
mov
loop
repnz
jbe
adc
adc
xchg
cmp
mov
lcall
mov
outsl
cmpsl
mov
dec
jecxz
and
jb
dec
jbe
pop
cmpsl
imul
dec
pop
scas
xor
jmp
jb
push
in
pop
repnz
lds
leave
dec
push
pop
xchg
dec
dec
push
int3
adc
and
xchg
addb
call
cld
fsubl
jecxz
xlat
push
rorb
ficoml
das
insl
sbb
adc
popa
xor
call
xchg
mov
jo
pop
push
movsl
rcl
push
stc
sahf
add
push
outsl
xchg
sbb
mov
lds
dec
mov
push
stos
sub
sar
push
inc
or
in
dec
and
xchg
cmp
jno
insb
ljmp
sbb
adc
mov
dec
mov
cli
jp
fisubrl
mov
lods
jbe
mov
mov
sbbb
adc
lds
lret
push
push
adc
jmp
cltd
fiaddl
and
mov
scas
mov
jne
inc
iret
ljmp
pop
out
int3
cmpsb
je
mov
les
and
or
add
fdivrl
cmp
movsb
aam
negl
cmpsb
sbb
sbbb
cmpsl
xchg
aad
stos
movsb
mov
cltd
mov
inc
jno
pop
out
dec
xchg
pop
xchg
mov
mov
mov
or
outsb
jge
jbe
xlat
and
popa
loop
mov
xor
scas
in
fisttpl
pop
movsb
or
mov
iret
and
sub
insb
lcall
std
cmp
fdivl
outsb
cli
test
cmp
fstl
sar
imul
rclb
pop
adc
cmpsl
je
dec
sub
mov
mov
sbb
cmp
inc
push
icebp
pushf
std
and
cmpsb
sbb
sub
loope
and
add
pusha
push
mov
mov
test
push
mov
sbb
sub
push
sbb
adc
mov
test
hlt
inc
add
cmovns
xchg
xchg
inc
icebp
mov
pop
inc
mov
lods
lock
push
cmc
out
adc
push
mov
dec
ljmp
mov
jle
push
shr
or
adc
icebp
dec
scas
inc
test
xchg
repnz
aam
orl
lds
add
aas
cmp
mov
dec
cwtl
mov
lret
faddp
jmp
stc
mov
fs
jg
mov
rorl
std
jmp
xor
xor
lret
inc
mov
addr16
jecxz
dec
enter
int3
add
pop
je
daa
mov
nop
xchg
inc
jle
mov
cmc
jmp
daa
iret
add
lret
sub
call
adc
sar
lock
mov
xchg
imul
push
scas
xor
bound
mov
and
cmp
push
andb
xchg
pop
xlat
or
xlat
addr16
and
dec
rcl
ja
add
inc
dec
dec
pop
int
movsb
scas
rcrl
inc
incl
hlt
sahf
inc
jnp
fsubrl
inc
xchg
insl
mov
jmp
into
xor
pop
adc
icebp
leave
mov
jle
cld
stos
cmp
pop
mov
mov
mov
gs
repnz
shlb
jp
insl
adc
push
lahf
jno
pop
and
fsts
iret
popa
enter
mov
enter
repnz
leave
adc
mov
js
in
sbb
push
fnsetpm(287
shll
gs
filds
inc
dec
cmp
mov
scas
je
push
jecxz
add
mov
lods
call
aaa
adc
jle
push
lock
pop
ret
sub
pop
sub
jp
adc
cmpsb
sbb
mov
add
aam
ds
xor
pop
dec
js
mov
xchg
jno
stos
daa
js
jle
pop
adcl
jo
sbb
add
flds
mov
icebp
mov
cwtl
lods
push
mov
popa
dec
cmp
adc
jae
outsb
imul
sarb
fs
push
jge,pt
and
inc
xor
mov
in
insb
call
test
pushf
idiv
pop
push
add
fsts
cmp
fs
pop
jg
xor
push
sbb
clc
sbb
jo
mov
adc
dec
pop
push
sahf
jno
daa
jnp
negb
outsb
in
jae
js
sysenter
mov
stos
ficoml
mov
pusha
loope
in
rclb
sahf
and
fcomp
mov
into
push
adc
cmp
or
loope
fildl
mov
scas
in
std
insl
ret
mov
jl
mov
sub
insb
cs
push
mov
lahf
or
inc
in
and
mov
and
sbb
ret
cmp
and
xor
pop
js
jl
dec
xor
das
push
sub
mov
lods
scas
add
ret
fildll
or
sarl
movsl
cmp
jle
shl
hlt
mov
lea
mov
popa
lds
scas
mov
daa
sbb
xchg
xchg
pop
cmpsb
mov
into
sbb
cmp
or
mov
ffreep
testl
cmpsl
stos
push
pushf
in
or
div
insl
pop
ds
cmp
mov
push
subb
jg
femms
call
add
das
push
stc
shll
dec
inc
jae
lahf
ds
fdivrl
push
mov
nop
js
pop
hlt
adc
mov
sar
jbe
inc
cmp
lods
mov
into
mov
jp
dec
in
inc
add
xchg
outsl
imul
imul
sub
sti
jbe
loopne
pop
cwtl
test
add
adc
movsl
shll
xor
mov
in
movsl
jb
pop
cli
imul
mov
cmp
xchg
lods
clc
jo
jl
adc
cmpsb
int
jecxz
jo
xor
xchg
sub
jge
imul
inc
les
sbb
mov
lcall
xlat
lahf
stc
and
push
aas
test
sbb
xchg
addl
cmp
jle
add
divl
lahf
push
cs
les
fsubr
gs
sbb
pop
out
cld
mov
mov
vaddsubpd
insb
sti
jns
cmp
and
hlt
mov
dec
add
negb
pop
mov
push
xor
mov
pop
es
pop
inc
mov
inc
xchg
scas
test
jo
or
push
sbb
sub
ret
inc
js
dec
jecxz
lret
pushw
dec
mov
call
mov
and
sahf
and
mov
lret
mov
arpl
lcall
shlb
add
mov
in
ret
jl
pop
or
cltd
mov
sub
ret
cmpsb
mov
scas
sub
imul
and
cmp
repz
cwtl
into
out
add
and
push
xor
adc
loop
adc
xlat
jl
cld
subl
xor
push
pushf
adc
idivl
cwtl
jno
sub
sbb
add
add
inc
cmp
push
movsb
xor
imul
notl
push
stos
lcall
cmp
add
dec
stc
xchg
es
jnp
push
inc
cmpb
lds
mov
inc
mov
stos
mov
xor
or
push
cmpsl
sbb
lret
sub
dec
aaa
xchg
jle
inc
lahf
jne
cltd
push
rcrl
or
jno
jp
and
loop
fldt
divb
sbb
pop
loop
cs
cs
jae
imull
xchg
addr16
fimull
je
sub
fmuls
popa
sahf
popf
scas
mov
add
lea
dec
mov
push
out
pop
sti
mov
mov
enter
sbb
out
adc
sub
pop
xchg
jg
cmp
loopne
inc
cmp
xor
cmp
and
mov
test
dec
cmpsl
out
adc
xchg
adc
and
shll
mov
add
xchg
fcomp
push
pop
iret
xchg
cmpsb
mov
sbb
sub
adc
inc
inc
pop
mov
lea
incb
or
mov
ret
inc
ret
mov
ljmp
or
dec
pop
aas
test
out
push
mov
stc
pop
mov
sbb
in
mov
pushf
jp
push
xorb
mov
into
call
je
lds
loope
jne
adc
fldcw
fsubrs
add
cld
mov
lock
pop
pop
xchg
fidivs
jecxz
inc
data16
idivl
in
xchg
int3
or
or
nop
mov
aad
fdivl
dec
lods
push
dec
adc
into
jge
mov
fnstsw
cld
sbb
mov
add
push
mov
dec
cmp
jnp
sub
in
mov
mov
push
insl
test
pop
gs
rorl
jecxz
and
push
jmp
add
mov
push
outsl
xor
inc
add
aas
rcr
mov
adcl
mov
mov
or
mov
in
sub
mov
sub
imul
push
push
and
fwait
and
insb
aaa
lret
dec
adc
sarb
iret
mov
shl
es
test
cmpsl
in
stos
xor
loope
xchg
fsubrl
mov
icebp
sub
push
inc
push
ds
mov
adc
pusha
lret
jne
jl
divb
imul
aam
sbb
pop
int
ljmp
fists
out
loop
pushf
inc
inc
jl
xchg
data16
mov
pop
andb
mov
mov
ret
loopne
inc
imul
sbb
pushf
cmc
push
imul
or
inc
shl
pop
adc
pop
sub
add
push
fs
push
mov
pop
fisttpl
jb
jmp
or
push
fwait
hlt
pop
jo
xchg
lea
movsl
leave
sbb
outsl
or
popa
data16
loopne
clc
dec
push
xchg
nop
stos
xor
push
in
xchg
insl
mov
xor
jne
pop
bound
scas
imul
movsb
mov
jbe
adcl
mov
pop
adc
and
adc
clc
inc
cli
mov
shlb
jg
sub
add
dec
mov
cmp
test
jbe
sbb
xlat
inc
cmpl
insl
dec
jl
or
test
or
mov
jno
repnz
lock
mov
adc
push
jnp
test
cmpsb
sbbb
test
lret
jl
cmpsb
rorl
lock
icebp
pop
repnz
mov
test
or
lret
sub
push
js
iret
push
filds
adcl
mov
cltd
push
cltd
adc
les
mov
push
pop
std
xor
mov
mov
inc
es
in
in
sbb
fistps
inc
adc
push
cs
ss
sti
mov
mov
mov
jne
movmskps
xchg
fs
xchg
xchg
xchg
gs
data16
mov
test
adcb
out
ret
push
lcall
adc
sbb
or
mov
stos
add
pop
lahf
mov
push
shlb
inc
adc
pop
insb
dec
ret
fnstsw
outsb
lds
inc
fstpt
idiv
xor
xchg
mov
sub
add
and
mov
mov
jp
movsb
cmp
sbb
les
inc
mov
in
aas
pushf
stos
sub
mov
mov
dec
sbb
stos
inc
or
cmpsl
sbb
inc
mov
sahf
rcr
imul
and
cmc
adc
in
sub
mov
push
cmp
or
mov
xchg
sub
mov
xor
push
int3
lds
movsl
imul
enter
cmp
ja
mov
daa
gs
xor
sbb
cmp
icebp
xchg
dec
sarl
inc
inc
aam
sub
jns
icebp
out
addr16
mov
loop
xchg
sbb
enter
scas
insb
adc
aam
adc
mov
mov
insl
and
fidivrl
nop
mov
jle
mov
cmpsl
sub
mov
fildll
sub
loopne
clc
dec
sahf
les
mov
inc
push
and
jp
fcmove
aam
and
add
outsl
ss
nop
addr16
and
lcall
jg
inc
sbb
sub
into
stos
ss
inc
add
pop
es
mov
cmp
push
ffree
ret
in
push
mov
popa
rcr
movsl
shl
xor
movb
push
shlb
fadds
jp
dec
xchg
pusha
cmpb
sub
mov
ljmp
jne
xchg
dec
aam
xchg
negb
xor
mov
jns
sahf
bound
cltd
add
shrb
lods
cld
mov
outsl
push
sahf
adc
fbstp
add
sub
mov
dec
test
xor
lods
es
inc
sbb
pop
mov
jp
cmc
pop
xchg
les
push
ds
xchg
fsincos
mov
insl
inc
dec
mov
icebp
loope
icebp
je
push
lea
hlt
push
sub
cmp
dec
dec
mov
mov
movb
stos
jl
out
loope
dec
push
and
jg
divb
mov
scas
push
and
js
push
ds
pop
xor
fstpl
mov
mov
adc
test
add
pop
lahf
into
mov
into
leave
lret
mov
dec
cmpsb
cmc
mov
leave
cwtd
andl
cltd
jbe
xor
orl
mov
sbb
add
negb
repz
rcrb
xchg
mov
dec
sbb
cmpsb
js
sub
push
inc
ja
mov
mov
outsb
mov
jl
scas
push
pop
xchg
pushf
mov
push
insl
push
inc
dec
mov
mov
jp
mov
nop
pop
jnp
into
push
into
gs
push
mov
xchg
mov
or
mov
inc
pop
or
fsincos
add
cmp
cltd
js
mov
mov
sbb
mov
xchg
shl
adc
pop
push
lea
jb
or
movsb
stos
jns
imul
loopne
and
push
insb
stos
mov
jecxz
push
test
cmp
pop
dec
adc
jns
sub
lds
sbb
in
fdivs
mov
mov
sbb
mov
mov
push
lods
push
fsubrs
icebp
or
fs
mov
adc
xor
lds
mov
jnp
inc
pop
add
pop
movlps
inc
add
mov
orb
adc
jl
mov
lea
fsubrl
sub
lret
repz
dec
loope
movzbl
push
jb
add
jmp
dec
jge
xchg
movsb
out
enter
insb
xor
push
mov
xor
repz
adcl
xchg
pop
jbe
xchg
aad
loop
cmp
mov
iret
je
leave
sbb
mov
test
inc
mov
div
test
xchg
xchg
cmc
pop
rcll
daa
pop
xchg
mov
pop
push
test
cmp
sub
aam
pop
loopne
divl
mov
dec
bound
jns
andb
jno
dec
mov
jnp
xchg
jge
pop
lahf
cmpl
mov
or
pop
fldt
mov
in
test
push
pop
inc
xchg
enter
push
ljmp
sub
das
repz
add
into
mov
pop
negl
stos
cld
xchg
xor
jle
xchg
xchg
jne
mov
insb
mov
mov
pop
sub
loopne
std
jno
out
es
out
sub
out
dec
sbb
and
stos
mov
ss
aaa
daa
cmp
rclb
add
dec
lods
stos
sbb
lods
pop
cld
leave
insl
imul
sub
jbe
cmp
cmp
jae
inc
push
mov
xchg
aaa
dec
xchg
jnp
add
adc
or
jne
arpl
xchg
mov
and
mov
xchg
jo
cmpsl
mov
push
sbbb
ja
in
push
out
outsb
int3
pop
dec
fcompl
fdivr
dec
pop
inc
imul
push
push
hlt
inc
lea
maxps
js
mov
repnz
mov
out
out
sbb
stos
pop
and
outsl
push
mov
and
sbb
fistl
adc
sti
je
dec
jb
add
push
pusha
mov
stos
jecxz
popa
push
insb
cld
add
shlb
inc
stos
pop
out
mov
pop
mov
fnstenv
ljmp
inc
push
or
outsl
fucomp
in
sbb
vpsubb
stos
imul
inc
stos
cmc
cltd
sub
push
lret
lret
adc
xchg
push
ljmp
loopne
fsubr
das
mov
xor
and
and
mov
xor
mov
xchg
lods
ficoms
test
add
dec
adc
sub
push
and
or
and
out
loopne
in
movsb
mov
inc
inc
test
in
inc
sarb
jne
push
pushf
in
pop
pop
pop
jb
lcall
or
mov
pusha
ret
sbb
sti
fsubp
gs
out
out
and
stos
out
pop
xchg
dec
rol
push
ss
je
adc
pop
xchg
mov
jmp
xor
sarl
pusha
lods
popa
pop
sub
lcall
data16
pop
lahf
lds
xlat
sbb
into
mov
fstpl
sbb
adc
pop
scas
imul
sub
cmpsb
push
xor
js
cld
push
and
xchg
imul
not
xchg
mov
imul
popf
xchg
lock
rcl
fdivrs
or
pop
push
adc
lods
imul
push
rol
fmull
or
mov
pop
or
mov
fsubs
dec
jns
cli
lods
stos
jae
out
adc
xor
mov
cmp
dec
popa
divb
frstor
loop
aaa
sti
jecxz
push
jmp
xchg
jecxz
dec
ret
adc
nop
clc
jne
jp
xor
jb
mov
and
push
fsubs
xor
push
push
xchg
insb
xchg
rclb
std
popa
add
das
mov
xor
push
adc
pop
iret
cltd
dec
add
out
pop
pushf
cmpsb
push
xchg
nop
imul
mov
mov
mov
rcll
daa
icebp
test
loopne
lret
or
test
jne
data16
xor
aas
dec
mov
mov
sti
insb
adc
popf
jl
pop
add
rcr
pop
test
push
add
out
out
loopne
insb
punpckldq
and
gs
xor
sbb
jne
mov
lods
imul
pop
xor
cld
add
xlat
lods
sub
mov
mov
fwait
lock
cmpsb
push
jle
dec
ja
or
sbb
xchg
ja
xor
out
cmc
cmp
ror
pop
ljmp
call
ss
das
popf
js
or
mov
jno
jl
cmp
adc
aas
js
rcll
xor
test
dec
inc
mov
mov
mov
adc
sub
and
iret
pusha
fdivs
sub
sbb
call
ret
xchg
inc
incb
into
mov
or
test
outsb
aad
sahf
and
imul
cmp
imul
mov
les
mov
jno
fwait
js
out
or
bound
lret
xchg
mov
pop
popa
lret
mov
mov
and
bound
xchg
inc
sar
push
addr16
xchg
test
dec
mov
xchg
jns
jl
push
xchg
out
inc
fnstenv
lret
in
rcll
les
aad
xor
mov
dec
leave
arpl
or
sti
aaa
daa
jle
push
aas
xchg
lds
popl
inc
and
cmp
shlb
xchg
and
or
xlat
sbb
jecxz
into
push
call
push
inc
sbb
inc
xchg
icebp
inc
pop
push
inc
xchg
adc
add
mov
mov
out
rorl
cmp
in
fcmove
cltd
mov
push
inc
fucomp
xor
in
out
loope
leave
pop
xchg
or
in
jmp
cmp
xorl
push
outsb
add
sbb
sbb
mov
adcb
lods
andb
ficompl
mov
lret
adc
xchg
sbb
jge
rcrl
mov
adc
jl
stos
ret
sbb
inc
add
jbe
aas
out
cmp
insb
mov
nop
aam
pushf
bound
pop
pop
pusha
jne
and
add
enter
les
xor
outsl
out
mov
cmp
adc
loop
jb
inc
sbb
cmp
adc
arpl
xor
sahf
adc
mov
int3
stos
mov
and
lods
test
jb
adc
lret
lret
dec
fmull
pushf
cmpsl
shrb
inc
enter
mov
lcall
mov
push
xorl
xor
je
mov
ja
sub
pop
mov
lds
add
lds
sbbb
pop
jae
pop
frstor
add
arpl
jnp
outsl
push
fsubr
or
int
pop
fwait
mov
push
xor
mov
fstps
add
cmp
cmp
aad
adc
or
ret
out
call
xor
cmpsb
pop
adc
adc
pop
scas
mov
fnstenv
xlat
jo
mov
and
adc
push
insl
xchg
scas
or
cli
int3
pop
cwtl
add
mov
xor
sub
andb
xchg
fwait
jnp
rcrb
sub
orb
dec
out
or
pop
repz
sbb
pop
mov
push
mov
xchg
popw
test
in
adc
fdivs
call
jnp
aam
in
and
outsb
std
mov
aas
outsb
addr16
out
stos
dec
jp
adc
iret
push
push
dec
jns
jmp
push
jmp
out
jl
lods
mov
cwtl
filds
cmp
jle
mov
in
push
mov
lock
mov
rolb
test
or
scas
fidivrl
inc
or
scas
imul
stos
inc
push
repnz
and
and
and
lret
cli
adc
movsb
sub
add
dec
mov
fdivl
mov
mov
or
mov
decb
pop
les
and
inc
imul
imul
inc
stos
xchg
and
mov
jbe
jge
jg
imul
cld
sar
pop
push
sbb
cltd
inc
iret
roll
mov
stc
xchg
out
addl
pop
repnz
adc
int
jl
stc
in
lahf
and
cmp
lcall
dec
sbb
in
or
arpl
testb
or
pop
adc
out
enter
inc
xor
push
popa
or
aad
fwait
push
pop
mov
test
jae
jl
pop
out
stos
outsl
dec
nop
push
lock
stos
in
ja
lret
in
and
xchg
shl
push
jge
jge
shlb
sub
jo
sbb
arpl
jle
cmp
into
sbb
loope
mov
dec
ret
jecxz
xchg
push
cld
or
sub
test
imul
pop
add
pushf
das
xor
jno
out
and
xchg
movl
xchg
int3
das
int3
lcall
int
mov
sub
xor
or
or
xchg
mov
iret
lcall
and
fldenv
ss
cmpsl
loope
xor
cltd
dec
icebp
repnz
outsl
jle
jns
sahf
lds
pop
pop
dec
fdivrs
sti
sbbl
imul
mov
xor
cli
pop
mov
fmulp
pop
div
in
daa
pushf
clc
and
sub
xchg
add
out
sub
pop
dec
test
xchg
cmp
roll
sub
test
lret
jne
xor
nop
mov
sbb
pusha
pop
jb
out
int
push
mov
out
xchg
or
xor
pop
in
inc
jae
sbb
cmp
mov
fisubl
fistps
mov
and
mov
push
jb
aas
and
mov
xchg
mov
in
pop
ret
add
pushf
and
les
sahf
pop
mov
loope
add
dec
pand
stos
cmp
cmpsb
lods
test
outsb
imulb
ret
add
push
sub
sub
aad
jo
ret
stos
data16
decb
popa
mov
inc
sbb
pop
aaa
cmp
stc
and
sbb
ror
fwait
sub
popf
repnz
jnp
pop
out
sub
lds
or
sub
jge
sar
lret
in
sub
lahf
lcall
sahf
test
add
fmuls
mov
aas
outsb
wbinvd
or
and
cmpsl
in
fidivl
push
inc
cmpsl
test
xor
sbb
xor
push
jmp
cli
lock
loopne
xchg
jne
into
fmuls
aaa
aaa
mov
push
add
pop
pop
push
ja
mov
mov
fimuls
ret
jbe
fidivl
out
fs
movsl
xor
in
cmp
push
mov
repnz
loop
xchg
fldcw
repnz
dec
mov
imul
imul
loope
xchg
cld
test
int3
scas
adc
addr16
rcrl
or
and
call
push
pusha
mov
or
out
dec
stc
mov
stos
out
test
push
sbb
into
out
cmp
addl
insb
das
push
lods
lret
pusha
fiadds
dec
jecxz
not
and
cmc
sbb
cmp
fsub
mov
jp
or
xchg
sub
stos
clc
add
ret
mov
sub
push
fsub
cld
test
adc
stos
jb
add
push
pop
ret
jmp
lea
lods
mov
inc
mov
lret
ret
or
adc
shlb
jo
stos
mov
mov
xchg
and
mov
ficoml
pop
shrb
pusha
add
push
jmp
addr16
rcrl
sub
mov
xor
mov
dec
and
xchg
lds
jl
cmp
fnstenv
jnp
pop
loop
adcl
lds
movsl
push
dec
sbb
xchg
mov
dec
call
stos
adc
or
and
lahf
sar
in
in
cmp
push
test
mov
pusha
sbb
sbb
cmp
imul
and
add
push
xlat
push
and
fdiv
pop
mov
addr16
dec
repnz
mov
dec
popf
pop
sub
or
sbb
test
inc
pushw
aad
mov
repnz
pushf
push
mov
jns
repz
adc
jne
sti
in
inc
pushf
mov
ds
jo
xchg
subl
jb
cmp
clc
xchg
lea
mov
and
jp
fadds
push
leave
or
push
cmpsl
scas
mov
sub
jb
sbb
pusha
mov
cmp
push
sti
sbb
push
test
jne
pop
sbb
jmp
mov
mov
sub
mov
pop
jne
sbb
loop
ja
xlat
ret
clc
xor
lock
jns
pushf
adc
pop
mov
ljmp
insl
sbb
mov
mov
insl
imul
sub
leave
scas
mov
xchg
dec
jno
mull
outsl
mov
and
sbb
shlb
mov
idiv
loop
divb
lea
dec
cmc
out
push
push
push
mov
jne
lods
adc
add
gs
mov
inc
xchg
inc
mov
out
movsb
xor
xlat
cmp
popa
cmp
call
sbb
ss
push
jp
cli
adc
xchg
cmp
inc
push
hlt
push
insl
xor
mov
push
inc
push
ljmp
jecxz
incb
xchg
hlt
inc
push
loopne
das
pushf
adc
bound
cmp
push
pusha
imul
push
inc
lods
movsb
andb
mov
movups
shl
loope
push
pop
aaa
jbe
adc
pop
pusha
ret
rcll
mov
sbb
and
mov
pop
push
inc
or
fmul
jmp
inc
lahf
and
shlb
mov
popa
pop
data16
lods
push
xor
js
xchg
inc
loope
sub
stc
outsl
cwtl
inc
cmpsb
adc
shll
cmpl
jnp
jo
cmp
scas
daa
rclb
imul
xchg
push
jle
rorl
into
inc
xorl
rcrb
mov
dec
sub
mov
ja
pop
int
mov
jmp
inc
and
cmpsl
mov
add
shrb
orb
mov
xchg
push
imul
pop
popa
ds
jnp
jno
jb
sti
mov
push
mov
and
mov
or
cli
xor
fidivrs
jg
cli
add
les
dec
push
mov
cwtl
lods
stos
mov
inc
xor
push
cmp
mul
test
lods
jae
test
push
pop
mov
push
jns
bound
jns
repnz
ja
mov
pop
fldcw
rcrb
aas
push
sub
std
scas
cld
cwtl
std
mov
xchg
dec
sbb
aaa
aas
xor
adc
pop
repnz
in
mov
cld
and
sbb
and
aas
fsubl
jns
call
push
test
xorl
adc
lahf
and
mov
inc
aas
movsl
rol
mov
cmp
mov
push
mov
es
addb
cmp
sbb
add
test
xor
rdmsr
mov
fs
xchg
mov
adc
add
pusha
repnz
lahf
roll
pop
sbb
in
cmpsl
fxtract
rcll
imul
movsl
inc
scas
pushf
sub
dec
loopne
inc
jae
pushf
int3
pusha
and
xchg
inc
dec
test
xor
push
test
push
cld
int
jne
leave
pop
push
xor
jp
sub
aas
and
jmp
sub
cmp
sarl
cwtl
in
arpl
mov
dec
repz
lahf
stos
aaa
push
xor
cmpsl
sbbb
lret
or
cs
shrl
dec
and
cmpsb
fwait
xchg
push
cmpsl
dec
sbb
mov
sbb
loop
jnp
jg
jo
scas
mov
pop
mov
icebp
mov
in
add
das
xchg
push
pop
mov
and
jae
das
lcall
dec
in
dec
pop
hlt
xchg
mov
or
orb
sub
fdecstp
orl
mov
cmp
sub
lods
test
pop
mov
mov
mov
jno
rorb
mov
out
loope
dec
iret
fiadds
sbb
pop
test
mov
mov
push
mov
mov
jg
sub
outsl
inc
out
mov
lahf
inc
lret
insl
arpl
mov
push
sbb
dec
sub
cmpsb
sbb
mov
jbe
fs
xor
ljmp
pop
int3
cmp
xor
cli
or
js
loope
popa
pop
addr16
cmp
sbb
pop
pop
lahf
sarl
popf
ret
jle
insl
aad
add
push
test
dec
inc
dec
push
pop
dec
scas
lods
or
dec
arpl
rol
cmp
out
ljmp
cmp
push
push
shrl
xor
cmp
jmp
data16
pop
xchg
sbb
push
push
lods
int3
xchg
je
adc
sbbb
out
jae
dec
xchg
popf
and
add
xor
or
mov
xor
icebp
and
imul
cmc
inc
jo
sahf
inc
fcomps
clc
xor
sbb
or
mov
cmp
sti
ja
or
dec
fbld
jecxz
fcoms
add
add
lahf
mov
in
xchg
inc
sbb
and
pushf
add
add
fidivrl
lea
xchg
mov
push
imulb
fsubr
clc
and
dec
cwtl
and
mov
sub
cli
pusha
fisubs
jnp
icebp
inc
dec
mov
xchg
mov
outsb
xchg
push
nop
jle
jg
cmpsb
inc
repz
xlat
sbb
and
add
pop
aas
mov
repnz
fsubl
jb
sahf
cmp
sub
out
out
add
fmull
lahf
inc
jno
xchg
fstpt
fnstsw
add
jae
fildl
je
push
mulb
stos
fidivl
imul
cltd
enter
xor
dec
movsb
outsb
sub
cmp
shlb
aaa
sbb
mov
jmp
mov
pushf
fs
enter
inc
xchg
fmull
xchg
fwait
mov
mov
test
sbb
lds
pop
repz
inc
inc
lds
adc
mov
test
cwtl
add
sbb
pop
and
std
mov
jne
mov
dec
mov
stos
pop
mov
inc
xorb
mov
lock
mov
xor
inc
scas
xchg
xor
mov
sub
stc
nop
adc
ljmp
jae
mov
mov
xchg
aad
clc
mov
mov
add
mov
shll
inc
ss
pop
jp
lret
and
ja
daa
lcall
dec
mov
xchg
lods
inc
cli
cmpsl
sahf
psubsw
das
sbb
ds
iret
jae
hlt
inc
pop
fwait
imul
adc
int3
dec
jbe,pt
and
lock
fucom
in
loope
ja
xor
xor
loopne
dec
repz
jecxz
xchg
dec
jle
out
sub
xchg
sti
lods
sub
in
push
dec
cmc
mov
add
xchg
loopne
xor
push
or
ret
add
fnstenv
mov
xor
add
add
cmc
and
mov
mov
adc
xchg
pop
mov
jno
push
scas
mov
cwtl
mov
aaa
fildl
movsb
push
roll
lahf
out
mov
jae
test
or
cmp
lret
aad
stos
dec
loope
test
hlt
lcall
jg
mov
test
jg
adc
sub
test
imul
roll
xor
jmp
stc
push
andb
lea
and
jge
jg
mov
call
out
xor
movsl
sub
pop
sbb
sbb
fwait
das
lret
test
lret
and
insb
outsl
push
ds
scas
push
adcb
es
sub
fdivl
sti
movsl
and
xlat
inc
imul
cmp
stos
pop
mov
cmp
int
mov
mov
imulb
xchg
mov
sbbl
aad
pop
inc
mov
test
mov
sub
mov
push
or
shr
mov
mov
add
inc
pop
xchg
cmpsb
pop
pop
lock
sub
rcrb
dec
sub
fdivp
jmp
xchg
sbb
addb
jmp
rorb
in
sbb
xor
std
addr16
inc
popa
adc
shlb
in
rolb
mov
and
cmp
out
cmp
out
inc
adc
mov
add
push
out
arpl
mov
movsb
enter
loope
ja
jl
mov
jmp
out
dec
and
mov
push
inc
pop
addl
inc
xchg
and
xor
mov
mov
je
and
popf
jne
cmp
or
xchg
loop
add
pop
mov
cltd
dec
sub
push
xchg
inc
jl
andl
push
stc
ss
cmpsl
xor
and
shlb
mov
int
rcr
push
std
sub
orb
repz
insl
addb
and
dec
adc
les
cmp
call
dec
dec
push
sub
xchg
or
dec
ja
sbb
cmp
pop
cmpsl
divl
and
jo
mov
icebp
in
cmp
nop
outsl
mov
lock
xchg
dec
rorb
outsl
inc
jo
jae
pop
fidivrl
lret
das
repz
adc
mov
xchg
sub
cmp
jp
aam
inc
in
dec
or
cli
sbb
xorl
cmpsl
xor
and
out
sbb
mov
xor
test
int3
jb
dec
iret
mov
daa
sahf
push
adc
push
xchg
test
rcrl
ss
ficomps
arpl
bound
insl
fidivs
daa
ja
mov
sbb
lret
jnp
jbe
inc
in
imul
sahf
xor
mov
jno
repz
pop
fsubl
sub
lods
enter
out
and
loop
notb
out
ds
mov
fs
fcompl
xchg
nop
sub
adc
inc
or
lahf
sub
xor
or
push
sub
and
dec
xchg
cmova
inc
rcll
or
xchg
sub
cli
pop
push
rclb
loope
adc
into
jecxz
dec
das
jnp
xchg
into
add
push
fcoms
lea
mov
push
sub
push
xor
mov
add
dec
push
inc
lds
sub
popa
ficoms
push
jns
xchg
loop
daa
test
dec
dec
repz
adc
dec
popa
mov
movsb
addr16
push
sarb
ret
test
cmp
es
xor
push
push
adc
xor
sti
dec
fmuls
lods
mov
cmpl
ja
and
in
push
xchg
lods
mov
in
sbb
pop
in
lret
fidivs
pop
mov
adc
pop
jp
cmp
fsts
in
scas
push
pop
push
clc
leave
fcomps
int3
pushf
sbb
jge
pushl
jp
cmpsl
into
test
or
aad
cld
cmc
sbb
addb
cs
enter
mov
js
jg
inc
ja
insb
stos
fbld
push
dec
les
add
pop
movsb
dec
jno
das
inc
mov
adc
into
or
mov
and
mov
cmp
test
or
lods
aas
pop
mov
das
jle
in
es
dec
or
jmp
sbb
fdivr
sbb
add
int
fwait
std
std
push
dec
imul
mov
pop
cmovge
sub
inc
pop
fwait
jmp
xorl
xor
shll
or
test
test
nop
hlt
lods
xchg
ljmp
lods
das
rorl
add
sbb
pop
jl
cltd
ficomps
ret
push
call
push
hlt
fstpt
pusha
rorb
sti
int
das
sbb
sarb
stos
shl
cpuid
and
andb
adc
xlat
sbb
mov
ljmp
sbb
ss
xchg
lret
loope
xor
push
andb
fists
jecxz
sti
push
add
enter
popf
pop
daa
in
add
sub
sub
xor
fsubl
cmp
add
cmp
cltd
mov
daa
or
mov
faddp
add
imul
cmc
nop
popa
repnz
out
std
notl
or
or
ljmp
outsl
cmp
lods
les
fcom
andb
fstl
xorb
sahf
adc
xchg
sub
std
xor
mov
jne
repz
fwait
xor
and
lods
xor
xchg
daa
sarb
xor
mov
mov
addr16
mov
push
lea
rcrl
cltd
stos
push
subb
out
iret
cmp
or
jno
cmp
inc
pop
cmp
jmp
rolb
pop
lahf
ljmp
jecxz
mov
jb
adc
jo
lcall
xchg
jae
mov
nop
cld
jmp
jge
mov
sbb
movsb
pusha
pop
fldl
popf
shll
push
mov
arpl
mov
pop
add
jmp
pop
in
jp
cli
jecxz
adcb
ret
movsl
or
lcall
je
dec
fcmovbe
inc
adc
lretw
stc
sti
adc
cmp
dec
testb
pop
mov
mov
aas
pop
jmp
fs
adc
push
repnz
sahf
lods
daa
ss
daa
mov
xchg
sbb
nop
jmp
dec
ds
sbb
mov
aaa
mov
lds
push
xlat
dec
sbb
aas
xchg
mov
mov
xchg
out
push
roll
hlt
adc
xor
cltd
sub
xlat
data16
jae
lock
lahf
repnz
aaa
inc
cmpsl
mov
dec
and
pop
mov
sub
rep
icebp
mov
sti
adc
lea
ljmp
in
pop
fisubs
addr16
jp
mov
lods
loope
and
add
jns
add
lret
mov
cltd
jl
push
xchg
dec
inc
inc
cli
addr16
mov
mov
out
rclb
repnz
pop
dec
and
inc
hlt
jne
or
jge
fstl
jp
sbb
jb
mov
out
push
test
push
inc
pop
mov
dec
add
scas
mov
adc
xor
daa
icebp
sub
rorb
mov
jg
push
shl
mov
push
pop
dec
xor
int3
dec
mov
sbb
dec
or
cvtps2pi
cld
push
mov
push
movsb
xlat
xchg
pop
aas
loopne
xor
mov
xchg
ljmp
and
cmp
cmp
sbb
leave
and
xchg
push
dec
insl
sbb
das
cmpsl
negl
ret
test
jbe
arpl
aaa
adc
push
inc
add
or
cmp
cmp
mov
subb
hlt
fcmovne
xchg
out
sti
xchg
loope
sahf
test
movsl
std
ja
xor
mov
mov
mov
push
aas
mov
in
test
push
add
dec
repnz
xchg
pop
sub
mov
lahf
jae
push
inc
push
inc
stos
and
dec
mov
int3
imul
mov
add
adc
inc
inc
pop
in
add
mov
int
mov
imul
sub
sub
jns
es
pop
xor
mov
inc
loope
idivl
mov
cmp
mov
cli
mov
jmp
mov
test
pop
stc
loope
cmp
mov
in
sbbb
imul
cmp
aas
hlt
js
enter
or
insb
push
pop
adc
inc
loop
ret
push
imulb
int
jp
repz
xchg
xor
mov
mov
sub
add
mov
jp
dec
fidivs
jecxz
out
pushf
jb
hlt
out
outsl
sub
das
imul
mul
xlat
fs
sbb
mov
lahf
push
push
aas
push
fmull
adc
cmp
js
push
cmc
dec
sub
test
xor
dec
mov
scas
and
scas
mov
neg
lcall
mov
cmpsl
or
and
push
fsts
xchg
movsl
jnp
lock
cs
stos
mov
clc
repz
aad
push
iret
rorl
xor
daa
rolb
and
clc
data16
mov
enter
fldenv
dec
mov
or
outsl
lea
pop
fisubs
dec
cmpsl
mov
push
sahf
scas
push
cli
pushf
xchg
sbb
cmp
lret
gs
mov
lds
push
mov
xchg
jb
xchg
bound
rcl
xor
adc
arpl
rorb
adc
xor
jbe
adc
mov
cld
lds
leave
adc
adc
sub
xchg
sbb
xor
jmp
insl
xor
in
adc
in
jmp
aad
pop
imul
lds
or
push
rcll
mov
stos
rol
test
in
aaa
xchg
push
insl
xchg
pop
rcrb
inc
cli
or
or
pop
jb
sbb
test
jp
std
jg
scas
and
mov
cmc
cmp
in
fs
xor
cmp
std
insb
dec
stc
dec
loop
cli
or
xor
daa
pop
and
adc
push
mov
dec
rclb
insb
cmp
fildll
cmpl
rcll
sarb
js
in
and
dec
outsl
jns
mov
sub
push
stos
out
lock
fisttpll
stos
xorb
adc
mov
cs
test
fadds
mov
sub
lods
jl
leave
icebp
sbb
incl
fdivl
adc
fwait
es
inc
sbb
and
icebp
mov
add
ret
inc
pop
lods
sbb
dec
test
dec
mov
pop
add
push
and
adc
sub
jno
cli
cmc
mov
xor
pop
cmpl
pushf
jb
mov
jbe
es
mov
movsb
out
cmp
sbb
ret
ds
jp
fimuls
cs
cmc
outsl
cli
mov
mov
movsb
push
mov
jmp
jle
pop
and
mov
mov
push
stc
adc
je
pop
int3
ljmp
ret
mov
pop
xor
sub
int3
and
xchg
xor
mov
fwait
push
jne
int3
fisubrl
xchg
movsl
out
out
mov
frstor
fs
xchg
popl
push
sub
or
dec
mov
pop
cmpsb
or
scas
jg
enter
add
mov
cmp
sbb
pop
push
dec
xchg
repnz
aam
xor
test
rorl
sahf
shr
mov
push
xchg
scas
int
xchg
lret
bound
mov
or
mov
lods
fwait
push
aad
faddl
adc
popf
inc
fisubrl
shlb
and
jno
sub
ljmp
inc
ljmp
push
std
in
cmpsb
xor
mov
cmp
xchg
fwait
mov
dec
mov
ljmp
push
shlb
sub
iret
jl
push
pop
jae
jbe
movsb
jo
mov
sti
lahf
rcrl
pop
into
inc
and
pop
mov
das
xchg
sbb
addr16
inc
mov
cld
push
outsl
add
leave
jmp
mov
enter
cmp
test
fucomi
stos
mov
mov
aas
cmp
test
dec
sti
mov
jmp
jbe
insl
stc
and
stos
clc
pop
lods
inc
frstor
cwtl
inc
or
xchg
pop
repnz
sbb
test
jle
pop
ljmp
cwtl
xchg
xchg
imull
insl
adc
test
scas
stc
lock
ret
jnp
dec
adcb
push
insb
inc
mov
nop
rcrl
cmc
mov
adc
push
push
push
outsl
pop
popa
lods
mov
ja
cmp
push
and
adc
mov
imul
sub
jge
cmp
mov
xchg
xlat
pop
outsl
das
mov
xchg
hlt
fstps
xor
push
lcall
out
mov
push
and
cltd
movsb
pop
mov
adc
cmp
vmovlps
mov
push
mov
push
sbb
add
shrb
call
mov
jno
test
and
orb
rorl
les
fists
pusha
sub
fwait
cmpsl
add
fistps
xlat
out
and
cmp
mov
subb
out
enter
push
std
jno
xor
jae
das
mov
jae
adc
jmp
jne
popf
jmp
aam
jg
xchg
in
popa
leave
mov
and
inc
subl
popa
push
into
pop
mov
stos
mov
mov
adc
mov
or
arpl
sub
jne
pop
sarb
lds
insb
leave
or
sbb
roll
push
and
nop
arpl
mov
cmp
cmp
fsubs
jg
sub
cmp
cmp
pop
fimull
xor
adc
leave
jne
stos
push
mov
sub
adc
jle
sub
fmul
out
dec
mov
clzero
jno
test
dec
or
jge
shll
cmp
cwtl
add
data16
pop
shl
push
insb
out
fbstp
fs
mov
cmp
cmp
xchg
fwait
lahf
roll
dec
popf
push
adcl
sub
in
loope
aaa
ss
jo
loop
rclb
les
inc
mov
roll
fisttps
daa
popa
xchg
add
frstor
jns
dec
addb
or
roll
pop
lods
inc
popa
dec
jg
mov
cmp
inc
mov
xlat
pop
mov
pusha
loopne
repz
leave
cmp
cmp
aad
jg
je
xor
cmp
mov
je
jle
xor
nop
xchg
inc
jmp
loop
subb
sbb
shrb
imul
mov
fists
lcall
lea
push
mov
je
cmpb
sbb
adc
fdivp
xchg
daa
popa
dec
jo
jecxz
popf
fwait
mov
leave
loope
pushf
fwait
cli
xlat
movsl
insb
mov
cmp
push
mov
stos
movsl
xor
stos
fstpl
xor
loop
lods
out
push
enter
fimull
jo
lcall
imulb
rclb
push
mov
rcr
dec
lea
mov
fwait
pop
dec
jmp
push
inc
sbb
std
mov
push
aaa
cmc
in
in
sbb
xor
mov
call
out
int3
outsl
repnz
mov
and
test
shll
xor
xchg
adc
clc
pop
call
jne
add
not
pop
rcrl
jnp
pop
movsb
fs
scas
or
xor
inc
and
adcb
and
clc
cltd
divb
aam
or
lahf
out
aad
mov
inc
cmc
cmp
fs
pop
cmp
imul
xchg
xchg
pop
repnz
insl
enter
jge
xor
scas
out
mov
pop
repz
inc
push
or
inc
les
cmpsl
or
inc
inc
mov
arpl
sub
push
pop
jmp
test
push
push
dec
popf
cmp
ret
aam
or
enter
mov
leave
or
jmp
jnp
std
scas
xchg
xor
inc
mov
lret
es
popa
aad
inc
insb
test
cmp
arpl
xlat
movsb
xchg
out
sar
mov
mov
jl
ds
in
inc
lcall
rcrl
out
pop
mov
mov
sbb
xor
push
std
jg
insb
or
pop
fs
fisttpll
cmc
xchg
and
and
or
lret
jbe
ret
vprotd
pushf
mov
push
leave
adc
xchg
mov
dec
stc
nop
jns
dec
mul
les
je
and
push
or
mov
aas
ja
mov
sub
cmp
push
andl
add
inc
sbb
dec
out
repz
lahf
xor
push
adcb
mov
and
pusha
xor
jg
push
adc
add
cs
jle
jl
pop
jmp
mov
icebp
fbld
push
sbb
outsb
cltd
stos
int
movsb
push
pop
imul
insb
int3
inc
notb
shlb
sti
insb
jo
or
leave
jmp
out
fnstcw
add
dec
in
sbb
xor
arpl
cmp
mov
adc
jl
arpl
ja
cmpsl
dec
sbb
movb
ja
jle
inc
pop
push
jnp
shlb
pop
ss
js
sub
dec
or
mov
lahf
pop
loopne
mov
in
pusha
jecxz
outsb
cmpsl
mov
cmp
cmp
jbe
lock
jge
sahf
push
push
mov
sub
int3
fldl
xlat
loopne
add
mov
mov
sub
out
loope
call
ljmp
jb
inc
pusha
es
lock
or
ljmp
push
or
sub
mov
scas
inc
and
repnz
fsub
mov
push
jl
iretw
inc
dec
repnz
sub
mov
sub
add
cmp
or
push
jp
and
stos
sbb
sbb
movsb
sbb
inc
inc
jae
fs
cs
mov
push
rcrb
mov
repnz
xor
dec
mov
dec
jp
insb
out
push
add
test
add
movsb
or
in
je
enter
pop
fs
add
push
nop
dec
cmp
scas
loop
cmp
shl
xchg
aad
mov
dec
pop
repz
push
ret
sub
aas
jg
cmpsb
les
lods
sub
ret
xchg
xchg
inc
jae
jge
cmp
lods
sbb
in
lods
mov
into
insl
ss
add
dec
lret
int3
adc
jg
and
ret
aaa
arpl
ficoms
xor
push
jae
insb
bound
add
pop
mov
mov
push
or
inc
push
push
jno
sbb
push
pushf
icebp
and
dec
xchg
movd
jo
push
mov
roll
adc
popa
pop
nop
call
xor
aad
push
filds
cmp
fwait
lahf
sub
sarl
fucom
xor
push
or
mov
push
imul
pop
arpl
loop
pop
pop
adc
inc
pop
sti
sti
popf
mov
clc
lcall
je
mov
scas
and
shrl
nop
std
jmp
out
mov
xor
leave
scas
imul
cmc
dec
xor
mov
pusha
movsl
jecxz
push
bound
arpl
das
loopne
fldcw
aaa
inc
fldenv
test
sti
pop
bound
dec
outsl
cmp
sub
jbe
sbb
jmp
aad
call
pop
popf
ss
loop
popw
mov
dec
pushf
push
pop
or
cmpsl
mov
movsl
xchg
outsb
je
lcall
mov
into
push
shl
ja
mov
push
flds
sub
xor
loope
push
jb
aam
lret
call
jo
push
mov
ljmp
sub
repz
ret
gs
into
insl
xchg
cwtl
or
push
cwtl
push
xlat
js
xor
cltd
and
dec
iret
mov
ficoml
icebp
push
cmp
stc
mov
sbb
mov
add
loopne
mov
mov
rol
ljmp
push
test
shl
stos
and
lret
adc
jle
addb
pop
push
dec
mov
mov
or
in
repnz
mov
sahf
add
add
mov
mov
or
test
mov
iret
aaa
jl
push
mov
fldl
movsl
imul
or
leave
jmp
insb
int3
xchg
xchg
pop
sti
testb
std
lahf
cmpl
push
mov
loop
cmp
xor
adc
mov
movsl
stos
sub
dec
add
push
inc
mov
mov
rolb
xchg
push
mov
inc
adc
stos
xor
pop
push
es
or
or
pop
lret
adc
nop
add
sub
xlat
adc
xor
inc
ffreep
sbb
mov
loopne
inc
xchg
dec
inc
test
mov
or
sub
and
sbb
imul
xchg
pop
jns
loopne
inc
imul
sbb
pop
sbb
sub
test
imull
ds
xor
dec
jno
ds
adcb
cmp
call
outsl
push
shrb
add
aaa
cmpsb
repz
aad
mov
je
lret
mov
fists
cltd
or
cmc
add
iret
mov
push
icebp
outsl
rcrb
jae
popa
hlt
or
xor
mov
adc
rolb
das
lock
pop
lods
jge
mov
cmpsl
clc
and
add
dec
fwait
movsl
inc
mov
leave
call
push
outsl
and
cmp
sbb
lret
sbb
pop
adc
inc
lock
jl
dec
lret
and
mov
sahf
mov
lahf
mov
enter
and
and
push
mov
inc
pop
xchg
out
pop
movsl
jno
mov
dec
mov
pop
pop
int3
pop
sbb
pop
push
test
xor
mov
int3
or
leave
ja
mov
repz
pop
push
test
add
pop
les
popf
test
push
sbb
fcoms
insl
lea
inc
shlb
jl
mov
mov
rcl
mov
xlat
jae
test
dec
or
add
mov
mov
icebp
cmpxchg
scas
fninit
or
ljmp
jnp
ret
dec
adc
jnp
idivb
or
mov
icebp
xchg
in
std
mov
jae
xor
iret
jns
aad
push
jo
mov
xchg
int
add
ficoms
movsb
nop
and
mov
sub
int
pop
les
sub
test
or
xchg
adc
inc
push
inc
shll
and
fsubrl
xchg
and
icebp
mov
dec
dec
cmp
mov
shlb
repz
int
jb
add
push
insl
jmp
js
mov
and
stos
push
mov
mov
adc
xor
xor
cmp
add
pop
xchg
test
cwtl
sbb
sub
mov
mov
sub
adc
clc
lea
mov
rcl
out
sahf
lock
dec
mov
out
rcrb
int3
xchg
pop
jmp
jp
and
jnp
pop
pop
enter
mov
mov
out
lods
inc
mov
mov
inc
and
shl
adc
mov
out
notb
movsl
jnp
arpl
push
mov
mov
and
jmp
inc
lea
imul
imull
cmp
jg
dec
inc
jecxz
je
push
icebp
in
jg
sahf
inc
cltd
data16
divl
sbbb
fistpl
cmc
cs
dec
imul
test
mov
mov
arpl
orb
bound
adcb
movsb
jae
xor
add
repz
jle
loopne
shll
inc
stc
lret
mov
add
shlb
mov
sarl
shrl
fucomip
shll
pop
pusha
cmpsl
mov
shll
mov
in
ds
cli
push
sbbl
addl
push
popa
ss
imul
movsb
or
out
fldcw
lds
cs
mov
mov
dec
jne
ror
ds
arpl
jmp
mov
jp
mov
push
mov
sub
scas
sub
mov
sub
into
xor
push
popf
mov
mov
xchg
or
and
pop
std
addr16
les
shl
test
adc
mov
nop
mov
fs
cltd
int3
mov
int3
xchg
push
icebp
and
rol
sub
add
sarl
stc
push
pop
sbbb
pop
icebp
fcoms
mov
test
fdivrs
out
lret
in
dec
js
jno
pushf
jbe
loopne
dec
outsb
jecxz
mov
mov
cltd
mov
add
gs
xchg
shlb
fdiv
xchg
int3
or
jae
jbe
bound
lahf
popf
push
inc
cmp
or
sbb
call
int3
push
or
and
fildll
hlt
fxch
xor
jge
dec
pop
es
je
mov
dec
push
pusha
xchg
sub
cltd
or
inc
or
jns
mov
cld
inc
mov
in
call
lods
bound
add
pop
mov
sbb
and
stc
jae
push
jg,pn
add
push
push
push
pop
xchg
pop
fcoml
cmpb
mov
xchg
pop
insl
cs
cmc
je
aaa
jnp
test
jl
out
arpl
xchg
cltd
pop
adc
fsubrp
jbe
or
pop
es
scas
fimuls
dec
mov
test
push
push
xlat
push
je
jno
fists
jg
test
sub
mov
aad
ret
jno
sub
xlat
leave
or
pop
adc
bound
sbb
and
mov
push
test
jmp
xchg
xchg
push
sbb
push
ds
repnz
je
cld
xor
test
push
call
adc
xor
sti
mov
push
jmp
pop
cmpsb
add
sbb
xchg
add
andb
add
push
and
sub
sbbl
dec
inc
inc
xchg
outsl
aas
int3
arpl
xor
and
jp
pop
push
push
push
test
dec
loope
rolb
add
mov
shlb
cmc
cmpsb
mov
movups
pop
adc
push
mov
pushf
and
sub
movsb
add
mov
scas
jmp
push
ret
clc
sub
push
sbb
jo
sub
sbb
push
push
lea
in
inc
and
adc
mov
xchg
inc
popa
jo
jno
jp
mov
leave
jns
xchg
gs
hlt
inc
clc
dec
mov
test
xchg
push
in
xchg
adc
aaa
mov
outsl
add
push
mov
imul
addl
bound
cmpb
stc
sbb
movsb
outsb
loope
in
insl
fisubs
xchg
pop
push
lahf
dec
std
mov
in
ret
js
jecxz
mov
fdivrs
pop
pop
ljmp
and
adc
xchg
mov
pop
jecxz
sbb
jp
adc
std
xorb
mov
pop
aas
xor
loope
xor
sar
xchg
xchg
test
js
or
scas
inc
idiv
xchg
xchg
xchg
movsb
jg
test
xor
int
inc
movsl
jne
sarl
cmp
in
xchg
arpl
push
shrb
adc
add
add
ss
mov
mov
mov
fdivrl
movsb
xor
adc
dec
stos
shrb
rcrl
xor
jno
dec
pop
ds
sub
sub
xor
test
dec
jb
jnp
pop
xchg
xchg
add
aaa
lods
sti
push
in
aas
popa
and
jne
lods
mov
leave
inc
je
ds
outsl
cmp
mov
sbb
mov
pop
repz
jns
movsb
out
jmp
push
xor
stos
sub
lahf
inc
repnz
push
jp
out
sub
mov
call
pusha
test
leave
adc
sbb
xchg
mov
loop
add
stos
das
or
fbstp
mov
cs
sbb
mov
dec
dec
mov
mov
dec
fs
adc
sbb
lods
mov
in
and
into
aaa
jl
sub
xorb
pop
daa
nop
sbb
stc
push
int
xchg
cmp
imulb
movsl
push
das
sahf
sbb
adc
inc
dec
and
dec
enter
sub
sbb
lods
add
ret
jp
outsl
loope
xchg
dec
xor
mov
fimull
imul
stos
xor
jae
mov
aad
les
push
into
scas
mov
pushf
push
pop
fisttps
mov
or
roll
movsl
push
pop
jmp
or
jb
xchg
jno
jge
jp
in
popa
shll
das
sti
aaa
push
pop
iret
add
rcll
cmp
and
sbb
adc
cs
push
xchg
vhaddpd
add
sub
adc
mov
ss
cmp
leave
sbb
into
pop
cmp
adc
xchg
push
sub
cmpsl
decl
ds
mov
fmull
mov
sbb
lahf
fmull
roll
mov
aaa
mov
jb
int
jbe
and
mov
or
mov
mov
xor
sbb
fiadds
add
rcr
fsts
dec
xor
or
xor
sub
mov
shl
and
cld
xchg
flds
jnp
sbb
push
mov
orl
jae
in
push
mov
mov
fsubrs
stos
shll
loop
jmp
fistps
mov
js
aad
cltd
and
in
add
cmpsb
lcall
outsb
das
leave
and
and
xor
adc
inc
mov
push
mov
xlat
mov
push
movsb
mov
xchg
adc
cmpl
inc
sbb
sahf
pop
or
sub
mov
call
add
icebp
subl
push
fstp
sbb
xchg
adc
movl
outsb
fnstenv
in
mov
bound
movl
mov
insl
mov
imul
mov
xchg
cmp
mov
sti
stos
push
shrl
ficompl
insl
lcall
lcall
jne
mov
loope
push
adc
cmp
mov
mov
push
or
fs
loope
icebp
pop
arpl
std
push
push
xchg
aas
movsl
fnstenv
xorb
add
sbb
cli
pop
jae
mov
sbb
xchg
test
fidivrl
fistpll
out
xor
sub
sub
je
mov
xchg
dec
jmp
mov
test
fcmovu
or
or
xchg
jl
pop
xor
int
pop
adcb
aas
aaa
cmp
je
pop
jnp
cmpsl
jbe
js
push
and
insl
ret
scas
sub
or
lcall
push
test
push
andl
bound
dec
sahf
pusha
pop
or
in
adc
subl
ds
mov
cmpl
inc
fs
sarb
pusha
adc
and
inc
les
jle
xor
ljmp
mov
inc
mov
aad
jb
lods
test
push
test
mov
sub
or
or
inc
xchg
cmpsl
jo
push
mov
jl
pop
insb
cmp
sub
xor
shlb
inc
xor
jge
imul
sbb
sti
test
test
push
lahf
test
pop
in
xor
adc
mov
jns
push
popf
loope
jnp
xchg
rolb
mov
rol
or
in
sub
inc
xchg
dec
mov
xchg
push
aaa
scas
mov
imul
adc
xor
mov
in
aad
insb
and
cltd
adc
lock
mov
mov
push
sub
jns
cmp
fwait
mov
aaa
in
dec
xchg
jae
ss
adc
test
je
out
pop
xlat
sarb
adc
in
pushl
out
mov
mov
fwait
cli
mov
into
inc
arpl
xchg
stos
pop
push
xorb
lcall
fisubrs
or
jae
push
outsl
sbb
pop
out
cmp
or
sub
bound
inc
enter
popa
sub
dec
sbb
sub
clc
test
inc
xchg
out
insb
sbb
jmp
sbb
nop
js
and
or
inc
lods
jae
es
jecxz
leave
sub
rorl
or
in
call
xchg
push
and
lret
fwait
adc
push
and
std
scas
call
fimull
mov
push
inc
adc
lret
loop
pop
push
jle
aas
cmpsb
inc
sub
and
insb
iret
ss
lcall
mov
fbld
lock
cmp
inc
dec
xor
clc
leave
stos
mov
adc
mov
sbb
ljmp
in
dec
xor
inc
lret
jge
or
vmaxps
sub
mov
mov
cli
mov
je
repnz
jnp
inc
scas
dec
pop
into
lea
mov
pop
cmpsb
addr16
fs
cmpsb
and
js
xlat
jg
add
pop
sub
lcall
jns
mov
mov
push
int3
je,pn
lock
mov
pop
dec
pop
popa
sub
adc
mov
jb
sbb
out
fistpll
push
push
jge
mov
jne
add
cli
mov
xchg
out
std
sub
push
cmp
in
push
inc
and
xchg
lock
imul
adc
mov
movsl
lcall
jae
ficomps
bound
mov
gs
fs
jo
mov
xor
shrl
cmp
cld
fidivs
cltd
cmc
push
inc
add
or
repnz
pop
push
loop
mov
adc
sub
cli
stc
push
mov
dec
rcl
iret
inc
addb
test
popl
movsb
les
mov
mov
jl
fs
jns
and
mov
je
in
shlb
mov
xchg
test
ds
sbb
out
or
into
adc
bt
pop
clc
das
lcall
sub
jno
test
lahf
inc
mov
js
arpl
scas
xchg
pop
leave
mov
daa
adc
add
and
mov
inc
in
int
inc
test
pop
add
movl
mov
add
lret
icebp
call
push
jb
mov
push
les
jmp
je
pop
fadds
fdiv
jne
add
nopl
mov
dec
imul
xlat
int3
bound
xlat
adc
jg
sahf
fucom
xor
push
inc
xchg
sub
popa
inc
dec
xchg
aam
push
push
mov
nop
popf
xor
lods
cli
xor
hlt
xchg
fwait
xor
bound
loope
jg
push
shlb
loopne
jae
pushf
fimuls
sahf
gs
shlb
sbbl
in
xchg
lods
fists
shr
add
jl
and
hlt
sbb
outsb
stc
adc
out
mov
repnz
adc
test
mov
nop
jecxz
shlb
mov
clc
or
mov
test
push
xor
gs
inc
int3
dec
std
xchg
sub
andl
fstpl
mov
add
out
bound
es
lock
ret
inc
gs
aam
and
fistpll
and
mov
test
cmp
addr16
xlat
aad
aaa
push
push
add
fisttps
xlat
call
mov
ds
fistps
mov
loopne
cltd
loopne
xchg
cmp
jno
add
dec
out
test
psraw
loope
xor
rcr
add
fsubp
jg
mov
mov
and
sbb
mov
or
adcl
inc
cli
adc
int3
dec
adc
sub
add
pop
jae
aas
cmp
rclb
mov
rcl
inc
aam
test
mov
hlt
stc
pop
icebp
imul
jecxz
ja
pop
jbe
mov
imul
pop
cld
push
incl
lea
outsb
out
jne
inc
mov
orl
aam
lret
in
inc
adc
and
jg
push
sbb
sbb
push
aas
mov
cli
adc
adc
nop
or
aas
mov
add
fucomip
push
mov
add
test
adc
and
sbbb
aaa
stos
scas
ret
sub
mov
pop
iret
pop
ds
addb
xor
jne
jns
mov
inc
movsl
and
jae
inc
loopne
mov
int
test
mov
pop
cmp
mov
inc
stos
adc
mov
icebp
cmpsl
cmp
mov
jae
xchg
dec
ret
fwait
test
movsl
cli
in
lea
in
mov
shll
dec
mov
jns
aam
out
push
xlat
pop
fs
cmp
leave
ss
sbb
imul
jb
mov
xchg
jno
insl
cmp
popf
testb
and
jae
daa
xchg
add
test
xorl
insb
inc
add
pop
movsb
dec
and
lds
sub
imul
xchg
popa
xchg
das
inc
inc
cmp
add
cld
mov
push
pop
jmp
pop
iret
testb
adc
or
sbb
les
cltd
mov
xor
fbld
out
mov
rorb
in
sub
stc
cmp
pop
dec
cwtl
insb
stos
aad
add
sbb
insb
shrl
cwtl
sahf
loopne
xchg
sarl
ret
shll
out
adc
daa
xor
jp
or
imul
xor
inc
push
popf
lock
stos
arpl
stos
rcl
xchg
push
xor
emms
orb
sub
jno
test
add
mov
jle
push
fildll
mov
xor
mov
add
push
pop
aad
pop
and
jno
mov
sbb
addr16
xor
pushf
adc
sub
lcall
sub
cmp
in
and
mov
movsb
ret
adc
xchg
mov
push
aad
xor
bound
dec
sbb
notb
jo
sti
adc
xchg
mov
dec
icebp
sahf
fwait
pop
lahf
je
mov
sub
rcr
mov
stos
out
cltd
sbb
xchg
xchg
mov
das
jg
push
icebp
sub
outsb
push
movl
aad
xor
cwtl
xchg
cmp
mov
sarb
mov
les
inc
jae
sahf
cmp
sub
xor
mov
dec
stos
jecxz
ds
iret
add
lret
test
outsb
nop
jae
enter
insb
mov
fs
mov
pop
je
lret
jecxz
cld
das
stos
xchg
jp
mov
sub
out
insl
mov
arpl
jecxz
dec
lds
mov
adc
repz
adc
mull
mov
push
loop
cmp
in
call
and
lcall
and
pusha
jg
cmc
jne
jne
movb
fiadds
hlt
fdiv
dec
dec
mov
push
cld
cmp
dec
jge
movsl
ss
xor
inc
loope,pt
pop
out
dec
out
xorl
inc
inc
adc
dec
inc
in
test
jl
mov
sub
dec
add
cmpsb
mov
int
pop
icebp
in
fdivl
push
jmp
mov
mov
div
adc
xor
cmp
cmpsb
add
inc
outsl
pushf
arpl
mov
out
mov
jbe
mov
dec
xchg
jae
xor
pop
out
lret
mov
dec
xchg
cltd
rcll
gs
aad
popa
and
scas
pushf
mov
push
enter
cwtl
insb
movsl
testl
arpl
add
or
jmp
or
enter
inc
mov
lahf
stos
fcomps
shrl
scas
inc
push
repz
xchg
testl
pop
nop
sub
fs
mov
fidivs
loopne
xlat
or
push
dec
and
or
xchg
fucomi
nop
adc
sahf
jge
xor
outsb
fadd
pop
jne
cmp
out
adc
int
movsb
lods
out
sub
sub
repz
jae
pop
test
inc
inc
sbb
push
ja
inc
dec
lcall
cmp
push
xchg
sub
gs
adc
data16
rorl
dec
mov
push
shlb
fildll
sahf
cmp
xor
push
push
scas
incl
shlb
push
jae
and
ret
cltd
pop
dec
jae
dec
ss
mov
aam
cmp
add
rclb
ret
cmp
ss
vrcpps
or
mov
pop
xchg
xchg
loopne
jb
enter
jmp
sub
popf
and
mov
loope
cmpsb
jmp
cs
mov
lds
fwait
add
jne
and
bound
out
outsb
push
lods
ficompl
sub
inc
cld
add
pop
das
imul
cmp
or
mov
adc
imul
idivl
pop
jo
lret
push
popf
adcb
out
rcrb
adc
and
adc
adc
inc
cld
stos
mov
fnop
cs
leave
adc
nop
xchg
mov
fisubrs
mov
jle
or
sbb
jmp
push
push
into
loop
into
std
popa
fcmovbe
jl
test
and
xor
xchg
sahf
out
loope
leave
dec
fldl
sbb
sarl
dec
dec
and
mov
subb
add
inc
dec
ljmp
sbb
pusha
jne
lcall
dec
pop
inc
data16
loopne
mov
movsb
call
dec
and
cmpsb
js
inc
fwait
ss
loopne
or
dec
popf
push
cmp
les
repnz
fisubrs
inc
mov
icebp
inc
jecxz
sub
lea
lods
sub
sbb
cltd
fcompl
aaa
sbb
pop
adc
lds
shlb
mov
movsl
jb
mov
fmuls
jno
fcomp
cmc
add
sbbb
mov
loopne
jl
into
loopne
in
pop
loop
jle
sub
xchg
jecxz
xchg
mov
lock
push
jnp
mov
or
lods
lock
pop
jb
repz
mov
cmp
les
inc
push
es
dec
fists
iret
fxch
cmp
xchg
es
in
mov
pop
jecxz
or
ds
dec
or
dec
mov
pop
aad
push
daa
xor
inc
rorl
ret
mov
lahf
je
mov
ret
pop
ja
call
push
pop
xchg
jne
xorl
cmp
xor
addb
or
jb
push
insb
mov
adc
inc
popl
jecxz
mov
stc
aas
pop
jp,pt
dec
pop
fcomi
popf
push
inc
add
jno
add
and
mov
clc
or
loopne
jnp
jno
xor
loop
sbb
dec
mov
in
mov
mov
jp
and
inc
dec
sbb
jns
popa
sbb
ds
loop
mov
sbb
mov
mov
jo
jnp
icebp
xor
cwtl
mov
neg
icebp
cmovg
inc
dec
cmp
fwait
adc
jb
and
data16
out
cmpsb
jmp
out
and
jnp
cwtl
pop
out
sahf
idivl
lds
cld
test
lods
add
jecxz
pop
daa
test
sub
enter
cmpsb
and
mov
pop
cmp
and
xchg
mov
gs
pop
test
iret
add
mov
cmp
jae
jno
adc
testl
jecxz
adcl
mov
jns
loopne
jge
push
mov
sub
jb
nop
jb
sbb
jae
test
sahf
push
fstpt
xlat
mov
notb
mov
adc
dec
cltd
mov
rclb
subl
cld
gs
mov
insb
adc
adc
push
out
pop
jae
inc
or
js
dec
pop
test
add
mov
pop
insl
sbb
adc
fs
pop
sbbb
pop
popa
xorb
add
mov
notl
ss
adc
pop
call
lods
mov
ficomps
jo
daa
call
or
push
ret
inc
cs
sub
sub
cwtl
or
and
ficomps
pop
in
enter
sbb
add
cld
jb
adc
rorl
xor
sbb
mov
jmp
inc
cmp
arpl
jbe
push
lret
pop
or
cmpsb
or
xchg
sub
loopne
jmp
cli
inc
add
iret
lret
lods
sub
add
rcrb
xor
add
jae
jmp
lock
lret
incl
pop
pop
out
mov
rol
inc
sarl
fldenv
cwtl
jno
cmc
xlat
inc
mov
iret
jae
insl
mov
dec
push
ret
orl
xlat
xor
inc
or
cmp
lea
aad
jns
loopne
mov
stos
fstp
mov
cmp
shll
sbb
les
or
dec
je
fists
sub
rcrb
xchg
mov
xchg
sbb
shll
test
mov
sahf
hlt
sarb
and
ds
mov
sbbb
dec
xor
adcb
hlt
arpl
jbe
dec
or
or
jno
xchg
shlb
push
inc
jmp
mov
mov
in
jg
leave
ror
and
test
mov
ljmp
inc
lcall
or
hlt
sbb
fcoml
push
cmp
lcall
popf
pop
push
dec
aam
dec
mov
pusha
lock
jno
fwait
pop
jg
scas
popa
mov
imul
mov
fistpll
scas
jno
push
sbb
mov
jge
je
cwtl
lods
dec
into
ret
imulb
dec
mov
int
adc
inc
repz
xchg
test
add
dec
jle
inc
das
push
ret
inc
sub
mov
cmp
pop
cs
add
fistpll
dec
push
jae
loop
inc
mov
and
mov
mov
sub
add
sbb
lret
cmp
fxch
jecxz
nop
jge
movsl
iret
hlt
insb
fadds
into
test
cmpb
ljmp
adc
scas
mov
mov
sbb
push
stos
loopne
loope
cmp
bound
push
out
jp
js
mov
stos
and
and
daa
cmp
movsb
pushf
and
hlt
shlb
dec
test
or
mov
in
int
pop
adc
ret
addr16
shrb
dec
cli
stos
sub
pop
sbb
out
repnz
or
leave
jo
inc
pushf
rep
jnp
in
mov
repnz
in
popa
hlt
mov
adc
into
or
outsb
sbb
pop
int
jb
pop
stos
mov
seto
inc
repnz
inc
into
addr16
lock
lea
clc
xlat
sbb
xor
add
pop
outsl
push
in
mov
outsb
call
jg
addr16
lahf
addr16
add
xor
pop
fldt
sbb
jbe
ds
cmp
and
push
and
movsl
jle
daa
mov
push
mov
pop
pop
lahf
fcoml
cltd
inc
pop
aad
shlb
cmp
pushf
std
inc
std
lock
addr16
and
dec
lcall
jbe
jmp
pop
cmp
test
cmpsb
test
cmp
repnz
pop
aas
adc
adc
test
jmp
xor
push
jmp
cmp
mov
shlb
adc
rcll
add
dec
sub
inc
nop
sub
xchg
add
sbbl
stos
pop
push
inc
fstl
xchg
lahf
icebp
push
shld
sbb
icebp
cmpsl
mov
xchg
and
and
mov
inc
sub
xchg
jmp
adc
out
jo
sahf
pop
cmp
jmp
cmp
push
xor
push
mov
ss
or
sarl
push
jo
cmp
or
mov
lds
sbb
inc
int3
loope
jae
cltd
clc
push
outsb
test
fistps
xchg
dec
sub
ja
sahf
repnz
outsl
sbb
mov
insb
fwait
pop
mov
xchg
dec
dec
and
dec
dec
outsl
and
inc
popa
pop
ret
sub
icebp
mov
rcrl
call
and
fnstcw
je
mov
mov
cmp
jp
xor
test
pop
dec
push
rorb
or
mov
mov
rcll
iret
lock
fldenv
adc
daa
jb
js
xchg
stos
callw
fidivrs
mov
bt
enter
popa
scas
fidivrs
xor
decb
stos
fdivrl
mov
sbb
sub
js
push
cmp
add
fcomps
sbb
inc
arpl
xor
jl
dec
das
pop
test
imul
cmp
iret
scas
mov
cmp
int
loope
es
and
ds
mov
mov
inc
xor
arpl
mov
sti
jns
jae
gs
imul
fwait
fimull
incb
adc
jg
and
scas
sbb
test
fistps
jle
je
xor
shr
mov
mov
das
xlat
cwtl
in
add
pop
fadd
scas
call
addr16
jbe
xlat
inc
xor
lds
and
mov
add
adc
ljmp
js
nop
push
mov
xchg
fdiv
xlat
jbe
ficompl
add
mov
cmp
int3
xchg
orl
mov
in
jmp
imul
movsl
or
repz
repnz
pop
and
push
in
push
sbb
aam
and
lcall
sbb
cmp
stos
fsts
aam
in
int
popa
mov
mov
add
mov
fs
cmpsl
stos
cli
jb
jp
popf
adc
sub
aaa
es
fwait
add
std
add
mov
inc
add
adc
fistl
cmp
pop
mov
shll
daa
lcall
roll
and
sbb
cmp
mov
notb
adc
jno
cld
fstpt
jae
mov
push
fcmovne
or
scas
les
pop
sbb
xchg
dec
sbb
bound
movb
adc
push
repz
and
enter
cltd
rcll
adc
sbb
jae
sub
jmp
add
dec
push
mov
hlt
into
pop
or
ret
fstl
adc
stc
popa
push
iret
orb
xchg
inc
mov
mov
dec
movsl
cmp
in
push
cli
mov
in
das
mov
lahf
push
call
or
cs
jne
cmp
inc
idiv
pop
imul
shlb
lahf
or
mov
adc
jle
rcr
xor
test
jb
jbe
in
xor
lds
sub
ret
sbbb
imul
cmp
mov
repz
ror
jmp
and
cltd
loope
aaa
sub
adc
inc
fstl
test
aas
cmpsl
mov
xchg
xor
mov
dec
push
xchg
pop
orb
sti
ss
mov
out
insl
mov
cwtl
js
adcb
xchg
das
in
inc
cmpsb
out
js
mov
xor
ret
mov
test
adc
dec
jecxz
aas
lret
dec
roll
inc
mov
mov
mov
or
mov
aam
mov
aaa
in
popa
jbe
scas
iret
xchg
inc
inc
sub
push
lods
aam
rorb
adc
loopne
into
popl
sbb
lcall
iret
push
aam
dec
and
std
mov
leave
xchg
andb
popf
cmp
inc
aas
or
xor
imul
cmp
sti
pushl
xor
push
gs
mov
lcall
mov
iret
fldl
jae
mov
icebp
mov
sbb
cmp
movsl
fcoml
dec
sbb
pop
sbb
lock
ret
fmull
lret
jg
dec
and
mov
xlat
lcall
pop
es
add
xchg
push
mov
sbb
ds
xchg
sahf
push
loop
addr16
pop
add
inc
rcl
cmp
and
adc
popa
sbbl
adc
sub
and
and
pop
mov
push
scas
scas
push
pop
add
je
or
xchg
and
pop
pop
sbb
adc
dec
adc
jae
fdiv
movsb
xchg
xchg
in
arpl
push
adc
cs
sub
sbb
dec
aas
mov
in
mov
xor
or
cmpb
cs
xor
cmp
jb
mov
push
ret
stos
sbb
mov
scas
les
sbb
lahf
sbb
out
sbb
movsl
outsb
aaa
cltd
mov
lahf
cmp
mov
mov
inc
sbb
pop
and
pop
sbb
shll
or
stos
mov
jge
xchg
scas
lret
adcb
inc
dec
dec
pop
adc
push
std
inc
mov
orb
adc
add
call
hlt
dec
roll
mov
dec
stos
adc
mov
loop
add
add
mov
out
cmp
sarl
lea
shrl
push
std
add
mov
insl
shrb
popf
mov
lea
lock
hlt
pop
xor
outsl
mov
pusha
mov
in
loope
pop
pushf
push
movb
mov
or
call
add
adc
jg
loope
imul
movsb
sub
add
out
sub
push
jne
push
test
jno
xor
lcall
fidivrl
or
mov
out
test
mov
cmpsb
test
ret
cmp
xor
arpl
cld
adc
rcl
fmulp
sub
in
sbb
call
mov
nop
stc
lcall
pushf
mov
mov
daa
arpl
lds
jp
mov
adc
adc
mul
jle
cmp
mov
mov
pop
nop
sub
insl
jne
sbb
push
xor
dec
repnz
xchg
ljmp
aaa
ja
mov
mov
inc
push
sbb
dec
rorl
cs
mov
pop
test
sbb
jp
popa
pop
scas
fwait
in
xor
xchg
loope
and
stos
pushf
add
in
scas
ljmp
dec
jo
outsl
jne
shlb
mov
sbb
push
jo
mov
add
mov
popa
in
add
inc
mov
stc
mov
pmaxsw
call
cmp
mov
cmpsl
movsb
cmpl
or
jmp
xchg
ljmp
xlat
sbb
xchg
cmc
sbb
sti
out
cwtl
add
cli
fs
jp
ljmp
fwait
mov
loope
xchg
adc
push
pop
and
repnz
lret
movsb
insl
and
push
loope
mov
adc
mov
jp
arpl
imul
xor
xchg
lret
cmp
adc
lods
roll
xchg
push
xor
fistl
int3
rcll
mov
or
lcall
aaa
lret
rorb
xchg
push
out
adc
mov
mov
daa
adc
sbb
jle
xor
and
in
jbe
push
dec
imul
mov
movsb
jb
lock
lret
sbb
sbb
push
mov
or
dec
cmpsb
call
inc
add
pop
xchg
in
push
mov
inc
dec
ret
or
repnz
sarl
das
mov
or
daa
test
lcall
pop
jbe
or
cwtl
stos
call
movsl
pop
loope
lahf
pop
addr16
jmp
add
orl
je
pop
cwtl
fs
mov
call
sub
dec
dec
jge
push
cld
sbb
mov
add
pushf
xchg
cmc
cli
mov
pop
cld
test
jg
repnz
add
or
mov
mov
sbb
lods
jnp
shlb
sub
fwait
dec
flds
fimull
add
sub
push
inc
in
xchg
push
outsb
outsb
adc
adc
cmp
loop
jae
lds
and
mov
scas
lods
outsl
dec
in
mov
dec
sbb
xor
add
imul
cmp
inc
stos
push
and
push
popf
xchg
fidivs
or
jnp
push
imul
clc
test
add
fisttpl
jle
sarl
mov
cs
cmpsb
push
sbb
pusha
pop
sbb
push
mov
push
fwait
insb
cmpsl
lods
dec
sbb
xchg
dec
mov
xlat
jl
add
mov
dec
dec
in
jecxz
mov
mov
pushl
enter
add
jo
cmp
sbb
movsl
divb
and
xchg
mov
sbb
mov
pop
pop
mov
jb
scas
xor
cli
std
mov
popa
mov
xchg
inc
pop
add
xchg
stc
test
mov
int3
push
imulb
sub
inc
icebp
lret
arpl
or
inc
in
sahf
xor
xchg
or
test
scas
xchg
push
pop
aaa
in
stos
lret
adc
cmp
hlt
imul
fildll
xchg
xor
rorb
dec
add
paddsw
jnp
shr
and
xchg
adc
insb
mov
into
adc
sub
scas
arpl
sub
adc
adc
enter
movsb
sub
xchg
mov
pushf
outsb
sub
adc
stc
sahf
adc
insl
shrb
lea
adc
push
add
mov
lds
in
push
mov
xorb
sub
dec
lock
cli
xchg
inc
popa
pop
iret
ret
clc
lods
sub
push
out
pop
or
dec
dec
push
dec
add
adc
cmp
in
mov
xchg
iret
mov
inc
xchg
push
mov
sbb
out
ret
xor
and
call
pop
jbe
ss
dec
xor
jp
cli
popf
cmpsl
mov
call
out
ret
push
adc
xchg
sbb
add
outsl
inc
adc
jmp
xchg
ret
mov
dec
add
stc
jecxz
xorl
negl
adc
jns
sub
sub
lahf
ss
hlt
inc
out
mov
pop
xchg
lds
jp
jmp
int3
xchg
into
inc
sbb
mov
mov
aaa
and
ret
aam
stc
in
nop
mov
push
pop
adc
mov
clc
jmp
std
sbb
jmp
je
das
jle
in
add
sub
pop
icebp
pop
cmpsb
pop
scas
mov
pop
push
fwait
xchg
push
jae
dec
ds
cli
sub
and
jecxz
ficoms
pusha
outsb
sahf
ljmp
cmp
inc
cld
and
sbb
mov
mov
xchg
jbe
stc
outsl
mov
imulb
into
sti
arpl
ja
loop
call
push
cld
mov
loop
rcl
in
shl
cwtl
add
sub
push
imul
in
orl
jg
cmc
fstpl
aas
inc
mov
add
and
jne
dec
in
cli
je
test
lcall
xor
xlat
push
fsubr
cltd
lret
and
rclb
dec
lcall
sahf
dec
push
adc
push
iret
push
push
cmp
push
in
imul
push
dec
dec
in
dec
hlt
cmp
push
std
test
pop
icebp
pop
or
das
push
lds
pop
fwait
dec
ds
adcl
mov
dec
sub
sahf
cmc
mov
cmc
div
or
fwait
lret
data16
jle
add
rcrb
fcmove
insl
inc
insl
imul
jmp
movsb
out
xchg
jmp
popf
shrl
jo
pop
xlat
dec
push
mov
or
xchg
jo
cmp
and
mov
mov
cmp
mulb
inc
hlt
push
sub
dec
cmp
cs
fdivp
les
in
and
adc
fxch
mov
sub
pop
adc
sub
fnsave
push
outsl
mov
roll
popa
pop
cld
push
scas
inc
mov
push
jle
dec
sbb
xchg
cli
inc
inc
mov
addr16
or
jl
xor
ljmp
or
mov
ljmp
in
inc
and
add
mov
and
ror
imul
dec
cmove
mov
ljmp
push
icebp
in
xor
out
sub
iret
sub
in
imul
in
daa
iret
push
dec
and
stc
loope
dec
jmp
in
mov
mov
ja
jns
mov
push
pop
jb
test
repz
sbb
rcl
in
sub
adc
add
stc
jle
push
push
push
adc
sub
repz
inc
inc
dec
shr
out
pop
xchg
push
dec
popa
and
sub
sub
jne
xchg
iret
daa
stc
insb
xchg
pop
sar
cmpsl
insl
push
adc
cs
sbb
mov
fisubs
lock
js
imul
test
pop
sbb
dec
xchg
lds
sbb
add
ret
shrb
mov
addl
outsl
ja
fndisi(8087
negb
dec
jp
mov
and
mov
and
adc
mov
movb
popf
outsl
and
ds
das
fdivrs
and
adc
adc
sub
imul
sti
imul
daa
or
inc
mov
imul
std
fnsetpm(287
adc
sbbb
mov
add
xor
sub
fcoms
xor
sarb
cwtl
mov
jnp
dec
in
rolb
xchg
xor
or
adc
fcmovnb
cli
add
xor
add
pop
push
inc
ss
lcall
bound
fisubrl
mov
ret
sub
sub
movsl
sbb
cmp
mov
push
sti
loopne
mov
mov
stos
xor
mov
push
jmp
mov
je
mov
fcmovb
dec
rcll
out
push
push
mov
mov
iret
insb
or
iret
sub
sbb
outsl
mov
hlt
sub
cmp
jno
push
fisubl
cmc
dec
xchg
cmpsb
or
mov
jmp
xchg
shlb
fdivrp
add
ficompl
mov
stos
jmp
je
cs
xlat
rclb
in
lock
mov
mov
loope
jecxz
ss
rcl
leave
rcrb
mov
arpl
fcoml
jbe
pop
ds
push
leave
mov
xor
xlat
sub
push
jne
add
push
and
inc
outsb
test
sti
loopne
mov
sub
in
mov
inc
iret
pop
push
cmc
or
mov
and
sbb
hlt
std
idivb
xchg
cmp
push
mov
pop
xchg
push
in
fnstenv
das
adc
dec
adc
adcl
cmp
xchg
out
adc
decl
xor
mov
mov
insb
stc
fisubl
repz
outsl
jbe
push
pushf
scas
inc
push
sub
aad
sbb
in
ret
icebp
lods
push
jl
or
sbb
and
push
stc
pop
loopne
pop
insb
dec
lahf
fwait
stos
xlat
xchg
outsb
sub
xor
int3
sub
sub
dec
pop
xchg
test
pop
sahf
add
and
ficoml
inc
mov
cmpsb
out
or
lods
adc
sbb
pushf
rol
lea
cltd
call
pop
add
iret
mov
cmp
bswap
push
or
imul
push
push
mov
enter
cmp
mov
pop
enter
int
mov
cmp
xor
int3
jg
pop
cmp
sub
sbb
sbb
fdiv
sub
sub
andl
in
sub
inc
rorl
clc
sbb
xor
je
and
movsb
cmpsl
push
dec
xchg
sub
mov
mov
orl
mov
add
rorb
jg
inc
lock
ficoml
xchg
inc
push
rorb
mov
mov
sub
sbb
leave
ljmp
sbb
imul
pusha
mov
mov
xchg
add
mov
xchg
int3
add
sti
push
scas
outsb
lahf
jecxz
mov
jne
sub
fstpt
xor
jo
sti
cli
xchg
push
dec
cmpsl
sbb
pop
add
mov
adc
dec
inc
and
push
mov
lods
jno
add
add
lret
sub
aad
cmp
or
shlb
iret
xchg
lods
xchg
out
and
leave
mov
out
inc
inc
cld
shll
addr16
bound
dec
jle
pop
insb
cmc
icebp
inc
cmp
cmc
push
pop
bound
repz
lods
xchg
cmpsb
stc
jge
mov
add
popa
test
mov
shrl
sti
addr16
test
inc
sub
jne
mov
out
test
leave
push
loopne
cmp
lds
dec
cli
pushf
cmp
pushf
cmpb
js
jbe
jb
scas
cmp
in
les
xchg
sbb
loopne
add
repz
add
cld
ja
lock
inc
inc
mov
repnz
lret
fmull
push
popl
in
stc
inc
out
mov
mov
sub
jae
ss
icebp
dec
iret
jb
mov
mov
cmp
add
pop
jg
neg
daa
rcl
mov
out
cmp
sub
ret
int
cwtl
xchg
xchg
push
repz
leave
sub
sti
jl
jp
fimull
jne
dec
out
pop
mov
xchg
cmpb
repnz
adc
jl
push
dec
pop
dec
andl
or
or
cmp
lods
arpl
popa
int
das
mov
lds
push
icebp
gs
and
adc
cmc
xlat
sbbb
adc
xchg
inc
or
daa
mov
fisttps
loop
movsl
shll
inc
add
lods
stc
addb
adc
mov
push
mov
pop
sysexit
enter
sub
add
fstl
popf
mov
loop
sbb
cltd
hlt
orb
and
dec
adcb
inc
push
sahf
mov
inc
pop
lcall
ss
or
inc
addr16
mov
aas
adc
mov
jp
mov
mov
cmp
dec
shlb
mov
int3
or
fst
push
push
ja
mov
fildl
or
mov
jle
xchg
repz
icebp
cmp
add
mov
js
xlat
and
add
xchg
fstpl
sar
aad
lds
mov
in
pop
add
stos
push
jne
pop
into
testb
adc
mov
lcall
nop
pop
arpl
pop
xor
jl
pusha
lea
push
es
mov
xor
mov
jno
scas
cmp
aas
sahf
cmp
adcl
and
jne
add
addr16
or
inc
int3
repnz
les
xchg
lods
bound
pop
insl
mov
lcall
rclb
mov
je
out
lcall
idivb
pop
fucomp
call
xor
pop
pusha
mov
dec
fwait
lcall
add
jae
push
jo
jns
imul
mov
ss
mov
test
mov
inc
jne
inc
xrelease
xchg
iret
mov
js
sti
mov
xchg
ffree
inc
push
add
mov
loop
mov
popf
xor
loopne
in
insb
cmp
jno
stos
ds
loope
nop
fildll
cmp
lcall
out
fnstcw
or
mov
jne
mov
cmp
hlt
call
fsts
add
or
xlat
pop
je,pt
xchg
ret
int
mov
lahf
xlat
inc
lea
and
gs
cmp
mov
jle
cmpsl
cmpl
aad
icebp
dec
add
test
xchg
adc
and
push
xchg
jecxz
fldcw
xchg
fwait
or
jg
inc
js
lahf
dec
es
xlat
and
mov
add
pop
push
add
arpl
lods
out
mov
lds
scas
sarb
daa
inc
add
repnz
cmc
pop
xchg
sarl
ja
and
mov
cmpl
mov
push
in
sbb
xchg
jp
add
divb
notb
in
pmaxsw
outsb
dec
push
sub
or
aad
mov
in
adc
maxps
loope
mov
xor
add
shl
jecxz
jl
dec
fstl
adc
call
push
mov
cltd
test
sbb
mov
popf
mov
mov
mov
jg
dec
pop
sar
scas
cld
pusha
sub
scas
pop
fs
outsl
scas
lods
andb
icebp
inc
sub
repnz
cltd
xchg
outsl
stc
and
pop
gs
fs
xchg
or
cmp
sub
aas
xor
cmp
inc
test
pop
into
sbbb
adc
das
insl
adc
xchg
push
cltd
cmpsb
pop
enter
xchg
lods
addr16
adc
outsl
cmp
add
xchg
aam
lret
cmpsb
outsb
sbb
in
cmc
iret
cmp
dec
not
data16
lret
jbe
xchg
std
mov
testb
pop
test
hlt
pop
pop
cmp
pop
sbb
sub
sub
aad
inc
push
mov
hlt
or
ds
ret
mov
and
orb
frstor
push
sbb
mov
push
imul
subb
mov
inc
jmp
jle
lods
inc
fidivl
mov
sbb
jb
push
jle
cmp
sti
das
aad
adcl
movsb
push
aaa
mov
fcoms
or
in
add
mov
pusha
and
imul
or
loopne
or
push
and
mov
popa
jp
gs
les
and
ret
ja
lcall
xchg
xor
sbb
fnstsw
push
aas
sub
xchg
and
jge
shll
pop
inc
adc
cmp
add
shrb
pop
pop
das
add
or
push
cld
xchg
lock
call
and
mov
out
pusha
push
push
add
lret
xchg
lahf
pop
inc
hlt
bound
pop
mov
dec
sub
icebp
fistl
into
popf
nop
inc
int3
fdivl
sub
arpl
aaa
and
inc
pop
rorl
pop
dec
lahf
imul
arpl
mov
fcoms
mov
cmpsb
rcrl
rorl
popa
pop
jb
shl
imul
out
fcmovbe
add
nop
sbb
sub
mov
sbb
mov
arpl
fisttps
jno
ljmp
jne
add
xchg
mov
cmp
or
inc
inc
negb
test
outsb
icebp
test
xchg
data16
loop
mov
push
jo
ret
mov
dec
mov
sub
xor
sbb
loopne
xchg
lcall
cmpsb
repz
cmp
ret
push
fsubrl
xlat
adc
xchg
fiaddl
lea
mov
sbb
jae
jp
xchg
inc
sub
js
mov
ja
js
aad
xor
xchg
dec
sub
inc
call
xor
call
stos
cmp
je
shrl
mov
lods
stc
sub
pop
mov
loope
sub
mov
test
mov
and
and
mov
stc
pushf
out
iret
lahf
jle,pt
lds
dec
mov
jb
or
dec
test
insb
or
cs
aas
pusha
and
fsubl
push
insl
test
pop
jns
out
and
popa
lds
outsl
mov
rcl
adc
push
fistpll
std
in
std
jmp
or
jns
add
xchg
mov
inc
inc
pop
nop
xor
jg
mov
je
mov
inc
cmp
shll
cmp
test
inc
or
cmp
lds
loop
out
xchg
sbb
sbb
addl
dec
cltd
popf
pop
cltd
data16
jnp
pavgw
test
push
sub
jnp
push
xchg
mov
sahf
bound
adc
fwait
sbbb
jne
xchg
cmp
sub
repz
lcall
mov
push
pop
xor
mov
push
pop
inc
cmp
push
sub
bound
cmpsl
xlat
out
inc
xor
flds
lods
pop
jb
pop
mov
xor
mov
or
xor
out
sub
ja
cmpsb
pop
gs
sub
insb
jle
cmpsb
leave
mov
dec
aad
je,pt
into
sub
loopne
sbb
lods
sbb
les
pop
out
mov
shr
cwtl
pop
hlt
adc
dec
sahf
add
add
sub
and
mov
stos
loope
or
lret
mov
add
adc
mov
out
mov
jno
outsb
roll
push
lock
cmpsl
jbe
jbe
and
bound
sub
fimull
cwtl
pushw
cmp
into
divb
and
sbb
jo
outsl
and
aas
jl
mov
fistl
jnp
jge
pop
test
sbb
rcrl
idivb
inc
cltd
push
jae
lret
int3
inc
mov
fdecstp
imul
aaa
sbb
mov
inc
dec
push
dec
mov
andb
xor
int
inc
cli
daa
sbb
push
jge
shrl
fdivr
pop
aad
das
fiadds
inc
je
aaa
xor
cmp
sbb
jge
pushf
stos
dec
mov
cmc
fwait
push
fnstenv
loopne
lahf
mov
or
addb
jne
popf
nop
mov
out
pop
in
aam
mov
cli
pop
xor
hlt
aad
sbb
outsl
jns
jnp
inc
js
leave
xchg
sub
mov
xor
mov
int
lock
je
in
push
ds
js
movsb
cmpxchg
ds
cmp
sub
hlt
pop
push
xchg
lock
pop
jo
js
mov
mov
ss
ret
insb
and
aaa
cmp
or
ret
clc
jo
pushaw
mov
lcall
icebp
pop
out
jb
lahf
jle
and
pop
arpl
ret
mov
add
adc
ds
fsubr
push
add
fisubrl
or
icebp
imul
stos
pusha
mov
xor
mov
xor
mov
fnstsw
adcl
lahf
bnd
pop
pop
fists
push
and
pop
mov
mov
loopne
bound
std
and
or
jecxz
pop
js
loop
and
rclb
push
hlt
push
test
add
shrb
sbb
xor
fxch
test
lret
sub
ficoms
scas
jno
loop
and
push
jns
sbb
js
addb
add
mov
adc
xchg
rol
jl
test
push
adc
lods
xchg
pop
addb
pop
inc
movsl
scas
cmp
in
ja
push
fimull
push
fdivr
mov
push
push
loop
mov
xchg
sub
mov
adc
pop
insl
fsubp
mov
pop
or
adc
push
inc
xchg
mov
dec
xchg
adc
inc
arpl
push
sub
mov
pushf
lret
or
add
ds
inc
xchg
inc
inc
cmp
or
loopne
jmp
inc
loope
sbb
cli
aam
stc
or
sti
aaa
mov
xchg
icebp
stos
cmp
rorb
aas
js
xchg
push
mov
push
jg
xchg
adc
fidivs
jp
repz
pop
int3
lea
mov
jno
movsb
pop
dec
fmull
dec
xchg
cld
mov
and
xchg
or
in
mov
shlb
fidivrs
dec
test
mov
mov
stos
enter
in
xor
push
xchg
push
inc
sub
jecxz
xor
pop
cs
rol
jecxz
push
mov
cmp
nop
xchg
dec
in
ds
inc
dec
test
dec
insl
push
add
jl
std
mov
mov
int3
sub
sbb
test
int3
rolb
cwtl
out
or
jle
mov
dec
jp
inc
repnz
pop
test
int
mov
aaa
xchg
jmp
movsl
enter
dec
mov
call
stos
movsb
sub
daa
jo
imul
stc
pop
xlat
ret
xrelease
dec
shrb
roll
mov
out
mov
lcall
jg
adc
sub
test
push
jge
scas
add
push
insb
add
fidivl
cmpb
fildl
inc
ret
fisubrs
das
pop
cmp
push
hlt
outsb
or
jno
jae
das
andl
jae
out
lods
mov
and
das
push
sti
pop
jno
inc
sub
jmp
or
cmp
cmpsb
and
pop
xchg
sub
fsubl
popf
fldl
out
ret
bound
lret
lock
mov
adc
testl
push
sbb
xlat
inc
lods
and
mov
inc
or
aaa
xchg
scas
fdivl
gs
xchg
or
fwait
mov
mov
xor
push
out
dec
xchg
mov
fsts
cltd
add
js
sahf
imulb
popa
sti
iret
push
fnstenv
cmc
fxch
or
sbb
dec
nop
cmp
push
pop
xchg
mov
push
inc
xor
stos
ja
add
sbb
jns
lds
lods
leave
add
mov
xor
lock
jae
cmp
push
push
inc
fisttps
das
and
lods
xchg
mov
jns
cmp
nop
aaa
nop
aam
xor
pop
xor
add
pushf
jg
sub
testl
mov
xor
push
js
sub
leave
fyl2xp1
cli
pusha
ljmp
stos
inc
into
push
mov
push
es
test
cmp
mov
sarl
or
test
les
mov
iret
cs
lds
mov
pop
lods
arpl
je
sbb
mov
jno
jae
sbb
pusha
in
icebp
push
lock
bound
cmp
xor
andl
inc
ds
inc
inc
pop
or
mov
xor
icebp
dec
test
pop
jnp
jmp
out
int
mov
ret
adc
sub
cltd
insb
nop
lds
pusha
pop
shll
loope
sbb
jae
int3
xor
out
push
js
dec
cltd
popa
cmp
imul
jns
pop
sbb
cmp
mov
popa
mov
mov
mov
je
jno
sub
std
pushf
in
sbb
add
stos
inc
ret
loop
in
mov
pop
add
xchg
mov
rcrl
push
cltd
lds
jns
bound
mov
push
mov
or
or
mov
lds
shl
push
cmpsl
fdivl
sub
ret
adc
movsb
sub
xor
adc
dec
jle
hlt
push
test
arpl
enter
xor
lds
fnsave
dec
cwtl
sbb
aad
cmp
int
pop
sub
or
movsb
fisttps
movsl
fadd
enter
sub
xchg
pop
pushl
out
jo
lret
fldcw
outsb
sub
addr16
test
popf
sbb
pop
xchg
loop
jo
xlat
pop
je
dec
pusha
stos
dec
js
xchg
pop
ret
lahf
imul
loopne
cwtl
or
ret
dec
ljmp
mov
inc
idivb
mov
in
sbb
pop
dec
insb
ret
dec
dec
les
cmp
scas
pop
out
add
pextrw
arpl
sbb
jl
xlat
push
movsl
jle
idivb
dec
jmp
adc
cmp
mov
push
jg
je
xchg
mov
pop
iret
cmpsb
push
push
sbb
popa
clc
out
popa
stos
pop
rcrl
rcrb
push
dec
cmc
out
sub
dec
xor
loopne
xchg
sbb
cmp
jl
js
repnz
push
cwtl
add
fdivr
jmp
push
push
adc
add
mov
sub
aam
push
sub
cli
sbb
test
mov
lods
cmp
rcrl
std
xor
add
orl
ja
loopne
xchg
xchg
lret
out
adc
std
je
cmp
mov
aaa
mov
jne
out
and
or
les
and
adc
loope
mov
scas
xchg
sbb
and
mull
inc
testb
enter
std
addr16
in
js
xor
dec
or
sbb
fwait
sub
mov
pop
dec
cltd
nop
lock
jg
cltd
lret
jb
jg
aas
xchg
bound
xor
mov
mov
mov
push
sub
mov
cmp
and
cmc
mov
inc
adc
xchg
pop
adc
push
cmp
cwtl
movsb
and
sub
lods
inc
adc
mov
add
popf
mov
cmp
adc
int
out
push
pop
ljmp
pop
ret
cli
cltd
jb
jecxz
sahf
loope
adc
inc
mov
jle
xor
aad
mov
sahf
or
mov
adc
xorl
test
sub
mov
into
outsl
pop
movsl
pop
pop
xor
cwtl
lcall
jnp
push
mov
cmpsb
cmpsb
in
xchg
add
and
cmp
vpminsw
test
rorl
inc
mov
dec
fisubl
rol
sbb
mov
outsb
xchg
in
cmpsb
jmp
cmpb
int
clc
mov
rolb
lret
mov
cwtl
outsb
sub
xor
jno
notb
xchg
mov
ss
inc
xor
cmp
fs
add
cwtl
fwait
adc
or
dec
pop
leave
fs
and
sahf
loop
fisttps
mov
mov
dec
decl
xor
into
cmc
sbb
pop
push
cli
sti
mov
push
pop
or
daa
les
mov
dec
mov
aad
cli
mov
in
mov
sbb
xor
call
xchg
rcrb
dec
test
orb
push
inc
or
cmp
sub
bound
test
popa
mov
sub
fs
inc
lds
sti
dec
ss
lcall
outsl
push
out
clc
lea
xor
mov
incl
test
ss
and
les
pop
mov
sbb
sbb
std
jae
add
dec
push
int
je
sbbl
jp
lea
icebp
mov
bound
or
movl
mov
xchg
fstps
sahf
mov
push
dec
jb
fcmovnu
mov
popa
imul
outsb
mov
repnz
dec
shrl
pop
outsl
or
in
les
mov
cmpsb
sarb
xlat
dec
mov
insl
test
cli
test
fwait
push
leave
xor
jno
shlb
aaa
mov
sahf
jbe
add
sub
arpl
xchg
mov
mov
out
rolb
and
leave
add
cltd
cs
cltd
pop
mov
das
jne
adc
pop
loope
push
mov
outsl
jge
lods
mov
sahf
out
sbb
fsubl
cltd
nop
repz
fsubrp
je
cmpsl
jp
pop
sahf
popa
fsubl
push
out
inc
es
sbb
add
mov
pop
lcall
cmp
cmpl
xchg
push
nop
adc
or
scas
std
mov
sbb
das
shl
and
pop
movsl
lret
mov
ret
sub
mov
mov
mov
mov
aam
xchg
sub
jge
cmp
add
pop
fs
es
and
stos
dec
and
push
jbe
pop
stos
arpl
sub
sub
sub
cmpsb
mov
popf
mov
out
add
xchg
sbbl
mov
popf
popf
fstl
mov
cmp
leave
out
popf
lds
lahf
data16
dec
cld
jne
int3
ljmp
push
and
movsl
inc
sbbl
mov
adc
sti
cmpsb
sti
jno
lds
xlat
dec
mov
fwait
ret
mov
push
xor
movsl
xor
cmc
test
sbb
into
test
jbe
divb
inc
mov
dec
sub
insb
pop
mov
push
shl
sti
sub
mov
popa
mov
mov
fisubrs
push
jge
adc
popl
jg
push
rorb
aas
shlb
fsubl
into
stc
ja
add
pushf
push
pop
xchg
in
loopne
jmp
mov
lock
mov
xchg
pop
int
jb
pop
icebp
je
cmc
jne
hlt
jb
sbb
sarb
pushf
movsb
inc
loope
arpl
or
cmp
xchg
mov
imul
cltd
mov
dec
dec
cmpsl
aas
jmp
fwait
mov
xor
dec
fwait
xor
xchg
pusha
das
cmp
stos
sahf
loop
and
scas
sbb
mov
fs
adcl
mov
pop
fs
lret
mov
out
pop
jnp
mov
pop
test
movsb
push
xor
lods
mov
mov
pop
push
push
loopne
test
inc
sbb
push
loope
out
jl
push
push
sbb
or
or
ja
xchg
sub
idiv
cwtl
xchg
lea
and
inc
sub
orb
xor
aas
push
ljmp
jmp
mov
jg
cli
mov
daa
mov
pop
push
addl
mov
ljmp
inc
cli
leave
cmpsl
lahf
mov
loopne
sbb
sar
pusha
movsl
insl
cmp
test
adc
fs
xchg
add
loopne
mov
dec
call
fimuls
push
xchg
lock
out
sbb
push
popf
and
push
add
movsl
mov
sub
jnp
inc
mov
into
movsb
out
cltd
dec
sbb
mov
jge
arpl
inc
out
sbb
cld
daa
mov
dec
sub
dec
movsb
xchg
cli
test
push
jmp
movl
mov
cmpsb
out
cmpsb
push
push
mov
or
enter
loop
test
fwait
sub
out
in
cmc
cmp
lock
lock
fstl
repz
xlat
sub
in
push
subl
add
xchg
in
stos
std
dec
or
pop
mov
push
sub
imul
outsb
out
or
in
dec
ljmp
xor
pop
ja
ljmp
sub
test
push
fdivl
adc
addr16
daa
push
orl
mov
loope
push
fucomip
dec
ss
xchg
ret
or
pushf
loope
push
jecxz
dec
mov
sub
mov
xorb
add
sbb
ss
jb
test
inc
leave
dec
js
add
push
leave
push
jno
push
dec
ds
mov
dec
pop
xchg
int3
mov
loop
ss
pushf
scas
das
cmp
adc
adc
int
lret
and
xchg
repz
or
xchg
fwait
jb
mov
dec
incb
and
dec
arpl
lcall
sbb
mov
cmc
pop
xor
jae
stos
sarb
dec
int
push
fnsave
cld
mov
push
push
mov
cmpsl
mov
adc
jbe
ror
in
push
aad
jp
into
shrb
push
mov
and
stos
aad
mov
out
pop
sub
inc
pop
movsb
movsl
mov
add
test
jecxz
mov
fsubp
cwtl
and
pop
insl
inc
push
icebp
mov
and
jp
std
fwait
hlt
in
nop
outsl
mov
xor
cmp
xchg
aaa
fdivs
pop
push
dec
mov
mov
or
fdivr
data16
xor
jmp
out
xchg
cmp
push
dec
pop
jb
test
mov
in
repnz
test
loop
or
xchg
fld
mov
adc
test
mov
sub
push
pop
pop
repz
fistl
divl
push
cmp
repnz
jecxz
enter
ds
xor
sahf
in
lcall
fwait
scas
push
lds
aad
repnz
lahf
pop
cli
inc
xchg
orl
popa
inc
cmp
mov
out
je
add
fwait
ret
faddl
xchg
cmp
btc
inc
xorl
mov
sbb
mov
push
lret
shr
sub
arpl
aad
sti
mov
stc
in
sti
insl
in
icebp
xor
fcomi
leave
xorl
testb
aaa
mov
roll
daa
icebp
pop
push
jb
push
rcrb
lea
pop
out
daa
sub
push
pop
shr
arpl
scas
cmp
push
or
into
mov
pop
sbb
loope
sub
inc
scas
dec
add
out
cli
inc
fs
push
popa
aam
jge
lret
jb
scas
cmp
or
into
aam
sbb
sub
mov
dec
lret
addb
jbe
adc
push
xchg
int3
jns
sub
stc
into
jle
andl
arpl
dec
push
xchg
movsl
xchg
xchg
mov
ret
dec
rol
cmpsl
lock
jge
ljmp
sbb
into
adc
cmp
mov
push
cmpsl
ja
cltd
jle
gs
out
cmp
mov
movzbl
cmp
sbb
push
hlt
arpl
faddl
push
outsb
movsl
sub
adc
push
jmp
and
sub
test
mov
insl
ret
shlb
sbb
sub
mov
pop
daa
cli
hlt
iret
jae
cmpsl
and
mov
pop
mov
add
push
push
rcrl
jnp
sbb
cli
jecxz
lock
pop
dec
scas
add
das
inc
pop
stc
jmp
mov
mov
cmc
cmp
out
mov
out
cmp
ret
mov
mov
sahf
pop
sbb
lcall
loopne
cmp
and
xor
popf
test
inc
fwait
sbb
cmc
xchg
jo
das
or
jo
jo
repnz
or
into
cmp
dec
fsubrs
mov
pop
xor
cmpsl
adc
xor
rcrb
gs
cs
fs
movsb
dec
cltd
add
mov
out
arpl
out
gs
int3
sahf
dec
loope
sub
dec
sahf
xor
dec
jnp
xchg
cmc
out
xor
or
shl
cltd
out
mov
jne
and
ret
nop
adcb
sti
arpl
hlt
loopne
or
icebp
cmpsl
adc
js
push
mov
mov
scas
push
xchg
jp
jp
dec
pop
inc
add
and
fucomi
push
lds
inc
sub
in
test
lahf
xor
popa
daa
mov
cmp
mov
sbb
mov
pop
das
sbb
mov
xchg
in
sbb
js
add
xlat
rcrb
jns
dec
adc
in
lcall
xchg
int
imul
rcll
pop
mov
adc
xchg
jo
jae
pop
mov
or
jmp
dec
rcl
sub
and
ret
dec
out
mov
pop
xchg
into
push
mov
xchg
fbstp
inc
int3
mov
sbbb
mov
jl
sbb
jecxz
add
pushf
int
fidivs
cmp
icebp
ss
mov
int3
pop
aaa
xchg
lret
pop
mov
pop
divb
xor
push
xorb
outsl
and
aas
jmp
jmp
nop
test
dec
add
movsb
flds
ss
hlt
cmp
lock
cs
fmuls
sbb
xchg
scas
pop
inc
pusha
cmp
aaa
mov
mov
es
mov
cwtl
mov
lock
fsubrl
sub
inc
cmp
sub
aad
repz
mov
cwtl
fsubrl
xchg
pushf
mov
jecxz
cltd
pop
pushf
addr16
fs
std
pop
std
mov
leave
push
enter
jecxz
xor
test
push
mov
xchg
gs
dec
or
mov
jb
push
loop
aad
jle
in
jb
jno
jmp
and
stos
test
jo
ds
mov
mov
es
repnz
orl
sarl
es
int
icebp
sub
jmp
imul
test
cmp
test
aad
das
rcl
and
mov
subb
ja
pop
mov
push
xchg
pusha
mov
fldl
adc
ficoml
xor
stc
mov
sbbb
push
pop
repz
xchg
inc
mov
push
pop
out
in
dec
lea
add
jns
popa
xlat
in
flds
adc
fisttpll
xchg
jp
pop
adc
mov
adc
mov
cmp
data16
adc
incl
ja
les
push
fsub
jge
pop
dec
sbb
xor
sub
imul
aad
cwtl
imul
cmp
mov
adcl
ficompl
or
jg
mov
xor
add
int
inc
dec
jo
xchg
mov
xchg
pop
sub
or
dec
inc
popf
inc
rorl
cmp
dec
mov
xchg
jecxz
cs
inc
gs
mov
int3
xchg
push
push
sub
xchg
and
cmp
movsb
ret
std
ljmp
imul
dec
add
jmp
sbb
rcrl
dec
icebp
std
add
sbb
jbe
ret
fs
popf
cmpsl
jmp
xchg
dec
inc
cmc
fiadds
push
inc
aam
add
repnz
pop
andb
adcb
ss
mov
out
jl
cwtl
cmp
push
cwtl
cmp
aas
mov
push
push
push
sub
in
and
pop
jb
push
into
enter
push
mov
xor
repz
xor
hlt
mov
inc
mov
mov
cmp
aam
mov
sahf
jbe
jp
push
aam
xlat
jle
sub
bound
sahf
scas
jle
lock
lahf
xchg
je
dec
inc
xchg
jmp
pop
das
aad
rcrb
mov
addb
iret
fisttps
aad
mov
dec
int
rclb
jmp
inc
and
in
sub
out
sub
aam
fmull
iret
cld
gs
xchg
mov
test
int
notb
or
xchg
loop
dec
fidivs
out
mov
sub
cmp
addl
fs
and
jne
cs
add
mov
notl
and
shlb
iret
and
xchg
pop
lahf
cs
push
xlat
xchg
mov
rorb
inc
adc
ss
daa
out
inc
test
xor
fisubl
loope
sub
lea
cmp
jecxz
inc
push
push
jecxz
mov
push
lods
in
addb
jg
out
pop
sti
jbe
sub
popl
ja
or
jb
hlt
mov
mov
pop
jecxz
push
dec
insb
mov
sbb
sub
je
push
jg
fnstsw
dec
scas
fnstcw
fildll
cmp
rorb
mov
icebp
mov
in
cwtl
push
xlat
jne
test
xchg
jo
jae
or
pop
aam
mov
out
nop
filds
popa
cwtl
dec
mov
shll
push
int
push
sub
fstpt
mov
inc
jbe
jbe
jp
pop
js
sub
addl
pop
test
outsb
jae
xorb
xchg
mov
rcrl
test
lds
mov
sub
enter
scas
test
push
dec
pop
stos
cmp
testb
xor
lcall
jle
daa
data16
or
push
mov
pop
push
scas
mov
mov
add
mov
popf
cli
sub
sbb
pop
mov
pop
xor
and
jbe
mov
nop
mov
jae
pop
inc
imul
test
mov
iret
cmpsl
lea
dec
jnp
call
add
out
enter
mul
inc
cmpl
jbe
ja
and
xchg
xchg
jbe
test
push
xor
dec
xor
add
inc
sub
push
test
xchg
push
mov
inc
lods
xor
andb
adc
add
stos
cwtl
inc
jo
call
adc
iret
and
ret
pusha
mov
pop
add
dec
add
adc
or
inc
add
xor
inc
push
pop
aad
sub
pop
mov
loop
aas
add
pop
fists
sub
push
mov
scas
mov
add
jl
int
jmp
push
xchg
movsl
sbb
jle
mul
pushl
push
icebp
mov
jg
in
cmc
insb
jge
dec
push
fwait
mov
xlat
xchg
fcmovnbe
dec
imul
fildll
jge
mov
sbb
sbb
jae
adc
mov
jmp
adc
sub
data16
and
icebp
cmp
xlat
ss
adc
jmp
rolb
lea
xchg
xchg
js
mov
push
bound
or
lret
bound
pop
cmc
daa
mov
inc
cltd
inc
or
out
nop
jbe
cmpsb
loop
inc
out
call
flds
dec
cli
ror
or
int
adc
jae
add
in
fnstcw
divl
stos
rclb
inc
imul
mov
mov
bound
jnp
fmull
adc
adc
lahf
add
jl
or
mov
ljmp
cmpl
fnstenv
pop
call
mov
cmc
pop
or
jnp
test
xor
xor
add
loope
xor
clc
adc
sbb
mov
in
adc
bound
jl
ja
ja
lea
add
add
lods
xor
popf
xchg
sub
mov
leave
jb
nop
in
mov
mov
pop
adc
inc
sub
pop
gs
jb
inc
cmp
or
fistpl
xchg
and
jmp
out
push
jno
movsb
lret
stos
mov
xchg
jb
pop
in
test
or
xchg
push
add
pop
rorl
cmp
mov
jnp
adcl
xor
insb
and
cmp
mov
or
xchg
popl
test
xchg
push
mov
jge
nop
jb
sub
cld
js
test
mov
std
leave
ss
in
mov
ror
fwait
mov
addr16
xlat
mov
nop
xor
ss
loopne
lds
ljmp
aam
mov
add
fidivrl
push
mov
jno
adc
jp
cli
outsl
fbld
orb
fisubl
adc
mov
fwait
test
jmp
xchg
into
sub
push
loopne
cmp
push
fimull
xchg
add
inc
and
sbb
and
inc
mov
mov
insb
xor
scas
arpl
push
dec
scas
mov
hlt
or
and
enter
mov
sub
mov
in
out
cmp
mov
movsb
daa
inc
mov
popa
mov
stc
repz
pop
decb
adc
mov
push
adc
ret
cwtl
filds
scas
into
lods
sub
mov
test
imul
jb
xchg
aad
jmp
call
jb
scas
jmp
mov
inc
je
inc
mov
ret
incl
das
inc
xchg
sub
pop
loopne
call
inc
addl
in
mov
lea
lret
xor
jae
mov
sub
xor
scas
addr16
mov
fdivrl
mov
push
or
movsl
pop
aad
test
mov
adc
push
push
xor
ss
pusha
dec
cli
inc
sbb
jns
xor
pop
daa
fwait
int
jne
pop
add
test
das
lret
daa
cmp
movsb
movsl
in
gs
dec
push
inc
dec
test
insb
popf
jle,pn
clc
xchg
push
movsl
jecxz
scas
and
mov
repnz
js
pop
in
mov
in
wrmsr
and
test
test
mov
pop
mov
out
pop
xorl
xlat
or
fsubrs
dec
scas
cltd
faddl
xor
adc
aas
divb
jo
loope
test
add
test
icebp
lock
xchg
mov
clc
out
sarl
ss
in
fs
in
cld
xor
clc
dec
cmpsl
jns
test
ret
test
sub
pop
icebp
lea
int3
divl
out
sbb
cltd
sbb
sbbb
aad
imul
adc
push
sub
mov
and
mov
cmpsl
sub
ljmp
jecxz
and
sar
in
hlt
jp
xor
out
fildll
push
lods
adc
inc
data16
or
jle
xchg
jmp
loopne
add
jl
icebp
push
cmpl
clc
out
bound
out
std
cmp
icebp
test
es
lock
cmp
push
push
mov
scas
lods
lret
xor
sbb
xchg
jns
adc
push
mov
shlb
imul
push
dec
fnstsw
leave
xor
lcall
jg
jae
push
jl
das
cmp
jae
pop
stos
jmp
or
pmuludq
in
out
push
or
add
testb
inc
sbb
sbb
cld
lds
sbb
lea
fcomps
pop
push
add
and
das
movsb
inc
pop
push
jbe
lret
add
iret
add
mov
cmp
and
out
lret
cmpl
xor
shrb
jno
lahf
push
sarb
jg
lcall
add
rolb
mov
ret
add
in
mov
mov
sti
or
xchg
jl
mov
push
add
mov
in
insb
loopne
mov
cmc
pop
arpl
xor
dec
inc
sbb
mov
adc
mov
arpl
add
fcmovnu
mov
and
mov
jecxz
pop
mov
xor
or
push
dec
gs
sub
fstpl
or
cmp
mov
xchg
rorl
fwait
inc
push
xchg
in
insb
pop
cld
movb
imul
mov
jmp
pop
sub
adc
out
in
shrb
out
adc
je
stos
test
lds
gs
pop
rcll
sbb
xor
inc
sub
sbb
inc
in
and
mov
mov
fidivrl
adc
and
test
xor
jp
ss
js
fcompl
xor
and
ret
movsl
adcl
movsl
inc
jmp
or
ljmp
inc
jmp
ss
mov
test
nop
dec
cmpl
adc
add
repnz
out
push
push
sahf
stos
scas
cmpsl
add
mov
mov
or
outsb
mov
mov
mov
out
aad
mov
jp
cwtl
push
les
cltd
cmpl
mov
push
xor
hlt
pop
xorl
icebp
out
xor
cwtl
in
std
out
mov
push
adc
jbe
lds
imul
mov
add
pop
and
xchg
add
in
enter
mov
loopne
push
add
ret
or
mov
cli
add
mov
cmp
add
ret
inc
pop
ret
leave
in
int3
inc
sbb
lret
pop
insb
xchg
or
out
sub
ja
pop
repnz
xchg
das
popa
sub
lret
inc
div
out
add
ja
sub
xchg
or
and
push
xchg
imul
call
xlat
notb
push
in
push
lret
popl
jbe
testl
aam
test
lahf
into
lcall
sub
sbb
popf
imul
ret
aas
lret
xor
sub
testb
sbb
mov
jl
lods
int3
inc
mov
add
imul
fisttpll
dec
out
repz
insl
and
les
sbb
js
xchg
jb
pop
mov
sti
or
xchg
bound
lahf
jae
leave
mov
sub
cmpsb
fimuls
pusha
cmpsl
jae
sub
into
cmpsl
xlat
in
repz
sub
inc
repnz
inc
push
cmp
nop
fisubl
adc
xor
dec
xlat
aam
out
jo
xchg
mov
rclb
mov
aaa
bound
mov
push
fidivl
sbb
fsubrs
xor
nop
pop
sbb
sub
cmp
dec
scas
enter
mov
mov
lods
or
insl
bound
cli
mov
ds
push
stos
out
loopne
jae
dec
int
iret
dec
cmp
stc
lahf
push
pop
or
mov
push
lahf
fwait
data16
iret
aaa
pop
fistl
xchg
lret
xor
adc
xor
arpl
pop
cmp
or
test
pop
push
stos
cmp
loopne
mov
sbb
mov
ljmp
icebp
pop
scas
pop
xchg
push
pop
sub
cmp
cmp
outsl
or
push
aad
lea
mov
jmp
adc
mov
ficoml
push
xor
xor
sub
fcomps
ret
inc
js
inc
sbb
daa
mov
repz
in
out
pop
cwtl
mov
sbb
sbb
lret
stos
sti
loop
sbb
inc
mov
and
push
dec
lret
sbb
cmp
push
pop
and
inc
insl
push
xchg
sahf
and
mov
pop
stos
sub
dec
push
mov
test
loopne
pusha
sub
cwtl
inc
jl
insl
push
andb
sub
mov
lods
cmp
inc
sahf
jae
jmp
push
and
push
sub
xor
ret
jl
sbb
push
jmp
mov
leave
aaa
jo
sub
stc
pop
das
jns
or
stos
sahf
jl
insb
iret
push
mov
cmpsl
pushf
mov
lahf
dec
jg
lea
out
jg
dec
sbb
jb
inc
xchg
mov
je
lahf
shrb
lcall
in
cmp
fldenv
push
mov
mov
pop
add
jo
xchg
push
cmpsl
das
dec
dec
mov
sahf
orb
and
shlb
mov
add
test
or
jmp
lds
andb
jae
mov
push
xlat
pushf
push
mov
add
push
gs
imul
andl
jae
mov
adc
inc
clc
icebp
in
mov
xchg
mov
xor
mov
mov
int
xchg
icebp
pushf
jecxz
xchg
rorb
imul
pusha
fs
mov
and
mov
sub
sbb
push
push
dec
adcb
xor
popa
sti
sbb
push
sbb
mov
push
add
out
mov
mov
cmc
lods
sub
sti
ret
sbb
icebp
adc
insb
insl
movsb
mov
xor
jne
std
dec
or
call
js
xchg
and
push
mov
inc
das
adc
cmpb
test
mov
cmp
xlat
dec
and
mov
gs
jo
loop
mov
filds
jb
jne
xor
mov
adc
outsl
add
fisttps
idivb
es
lret
jb
xor
fildl
arpl
jnp
inc
sbb
pop
ficoml
xchg
les
push
mov
call
jns
les
sbb
loope
andb
jg
sbb
cmp
inc
push
arpl
loopne
cmpsl
cltd
lea
cmp
adc
push
clc
in
pop
lcall
imul
jnp
lods
mov
jb
gs
popf
aaa
cli
lods
push
pop
rclb
aad
mov
sarl
cmp
adc
mov
pusha
fdivl
mov
ret
mov
push
lret
pop
test
sub
out
add
adc
lock
lock
or
pop
das
dec
xchg
test
out
or
js
in
jns
pop
out
arpl
ret
or
stos
mov
and
icebp
sub
lods
pusha
mov
adc
frstor
lahf
pop
pop
lods
sti
xor
adc
xor
rcrb
sbb
inc
sarb
cmpsl
mov
inc
enter
subl
push
mov
mov
lods
xor
js
add
insb
lret
imul
in
and
pop
jmp
xor
inc
adc
dec
and
jo
dec
sub
sti
daa
cmp
xrelease
out
cmp
movsb
lock
in
pop
cmp
std
adc
bnd
mov
loope
iret
add
roll
sub
stos
jp
call
adc
mov
in
xor
inc
add
mov
mov
dec
rcll
cmp
add
movsl
out
sub
in
or
xchg
outsl
in
push
add
xchg
dec
ljmp
push
mov
xchg
adc
or
inc
outsl
cmp
mov
xor
jnp
xchg
cwtl
pop
fstpt
in
jmp
sbb
sti
adc
sub
mov
pop
out
int3
aaa
cs
push
mov
sub
add
lret
int
iret
into
fldenv
inc
and
jp
mov
sub
ficoml
jge
pop
aaa
dec
stc
pusha
jnp
negb
cs
sbb
xchg
add
wbinvd
cmpsb
push
in
popf
lcall
sub
add
mov
aas
add
decl
lret
loop
ret
popa
xchg
add
sub
das
lret
adc
and
or
inc
clc
repz
add
int3
xchg
ss
push
pop
repz
pop
push
cli
jne
lahf
pop
pushl
cmp
decl
sub
xor
cmp
cmc
fwait
arpl
sub
inc
fstpl
push
sahf
jns
mov
roll
das
pusha
or
xor
sub
pop
lahf
xchg
mov
pop
mov
ds
or
pop
decl
leave
cmp
pop
xchg
push
fsubrs
sahf
cltd
cmp
pop
mov
mov
lods
enter
sbb
out
pop
mov
mov
aas
mov
into
dec
fldenv
xchg
lods
loope
cmp
push
loopne
push
sbb
mov
pop
pop
test
xchg
xor
adc
xchg
jns
cmpsb
or
mov
insb
push
gs
push
mov
enter
pusha
mov
inc
sbb
dec
push
aas
popa
sbb
movsb
inc
lock
pop
rcrl
mov
jb
add
jns
es
call
enter
jecxz
jns
mov
jae
or
pop
mov
andl
xchg
mov
loopne
stos
sub
add
jmp
aas
lods
sbb
cs
dec
dec
lods
scas
stos
cmpsl
testl
in
mov
sbb
cwtl
cmpsl
in
dec
in
test
orb
rcl
adc
mov
jns
xor
lret
push
cli
sub
bound
or
fs
inc
add
lods
sbb
jge
pop
lods
or
xchg
dec
xchg
cs
xor
loopne
inc
lock
sbb
pop
mov
jp
jbe
fdivr
shll
sbb
dec
or
dec
fidivl
pusha
jl
dec
jmp
aas
gs
stos
xchg
addr16
cmp
pop
fxch
test
fcmove
or
adc
outsl
test
mov
outsb
xor
mov
mov
and
and
cmp
add
enter
pop
push
or
js
jp
xor
movsb
lods
bt
mov
das
xchg
sbb
clc
sub
aas
int
add
or
jg
scas
roll
clc
mov
xor
add
xchg
push
fsubs
enter
into
dec
rclb
xor
int3
loop
push
add
push
stc
push
out
xchg
and
mov
dec
loop
mov
jmp
fcom
fucom
jg
pop
sub
lea
mov
xchg
stc
add
mov
aas
mov
fucomip
jbe,pn
cmp
or
pop
jb
rcrb
sbb
inc
mov
xchg
outsl
movsb
ss
mov
rorb
cmp
sbb
jge
add
dec
outsb
or
or
push
je
mov
mov
pop
cmp
mov
arpl
xchg
ret
cmp
pop
mov
mov
in
sbb
pop
bound
or
test
mov
and
lret
dec
mov
rorb
hlt
inc
out
push
aam
jno
repnz
jno
adc
enter
mov
shlb
ret
xchg
inc
call
dec
add
lods
sbb
jg
mov
xchg
fwait
into
sub
push
inc
pop
imulb
enter
bound
rcrb
dec
cmp
imul
testb
push
push
je
ret
jbe
sbb
and
adc
add
fwait
repz
stos
roll
outsl
mov
pushf
pop
cmc
jl
mov
push
mov
lret
jns
adcl
cltd
repz
fsubr
arpl
movsb
xor
jb
movsl
pop
movsb
mov
inc
push
xchg
jecxz
outsl
cmp
dec
shrb
ret
mov
mov
mov
into
lods
jg
adc
movsl
jae
pop
push
addr16
push
and
aas
and
cs
leave
xchg
out
cmc
insl
lds
push
and
loopne
cmc
jp
dec
pop
fnstenv
scas
popa
clc
dec
shl
jne
sbb
and
inc
pop
int3
mov
das
sbb
enter
xor
sbb
in
mov
pop
cmp
loope
cwtl
mov
cmp
push
loopne
xor
jle
popa
dec
sahf
add
jnp
sbb
push
cmp
sbb
sub
aas
mov
xchg
stos
mov
out
jle
shlb
in
ds
in
scas
or
daa
int
fsubs
jle
sbb
rcrl
cmp
cmp
jp
cmp
add
ja
jp
xor
cmp
je
dec
mov
mov
jnp
adc
xchg
jp
mov
movsl
xchg
push
test
cmpsl
sbb
outsl
loop
hlt
push
cltd
sub
add
mov
cwtl
rorb
add
xor
mov
lcall
sti
push
out
pop
std
imul
cmp
xchg
aad
cmc
push
adc
std
inc
push
sbb
pop
xlat
xchg
popw
sub
fdivrl
shl
fstpt
je
push
adc
mov
push
outsl
pop
jo
xchg
arpl
jge
xor
mov
mov
in
rclb
adc
jmp
xor
out
pop
push
mov
sbb
xor
xlat
jecxz
cmp
shlb
push
pop
add
mov
ss
dec
mov
movsb
jmp
popa
sub
inc
cld
sbb
dec
pop
pop
inc
fldenv
lahf
mov
les
mov
aad
and
les
cltd
mov
inc
xchg
loop
cmp
enter
popa
xor
dec
jns
xchg
and
sub
andb
and
add
mov
es
jge
scas
cld
sbb
mov
xor
jg
add
adc
lcall
imul
insb
mov
push
loopne
cwtl
iret
stos
jnp
nop
sbb
add
jno
ja
rclb
push
lea
rep
or
inc
leave
jbe
push
mov
popf
int
roll
sbb
inc
jae
test
imul
sub
shr
loop
mov
pop
shrl
jnp
cld
js
pop
push
das
out
and
cs
inc
fidivs
dec
jb
cmp
mov
sub
das
jo
mov
lock
pop
adc
cmp
das
or
sub
jno
out
in
xchg
ss
outsl
jle
pop
clc
das
ds
xchg
xchg
mov
xor
stos
jbe
mov
js
js
pop
jg
sub
ret
xchg
and
int
mov
xchg
push
repnz
cld
stos
push
addr16
addr16
loope
int3
test
pop
xor
xchg
psubusw
or
push
cltd
lcall
xor
repz
sbb
aas
mov
popf
scas
imul
xchg
adc
mov
sbb
stos
out
add
cs
sbb
enter
jae
xor
mov
or
mull
adc
push
inc
sti
inc
lock
and
mov
add
adc
bound
lods
ljmp
inc
out
outsb
mov
xor
xchg
add
loope
mov
ficoms
rorl
mov
loope
pop
test
sbb
ret
lcall
repnz
xchg
xchg
test
sub
fwait
pop
or
pop
shl
xorps
das
packsswb
subb
or
cld
pop
andl
bswap
mov
aad
adc
mov
pop
push
pop
dec
mov
int3
cmc
test
xor
ret
cvtps2pd
hlt
andl
xchg
xor
in
jo
pop
iret
mull
cmp
jne
pop
cmp
push
popa
mov
mov
or
or
inc
repnz
stos
ja
cmp
mov
rcrb
mov
push
or
xor
data16
loop
adc
test
and
xchg
pop
mov
inc
popf
popa
out
loop
lea
mov
out
pop
xchg
push
ret
mov
or
cltd
mov
faddp
fs
repnz
sarb
ss
push
adc
ss
cmp
dec
cmpsb
in
mov
pusha
sbb
or
setl
cmc
add
inc
adc
arpl
and
test
mov
ja
add
cld
icebp
sbb
std
gs
push
cmp
in
push
test
addl
sarl
push
xor
jle
les
adc
sti
test
std
gs
mov
dec
ljmp
or
pop
jno
xlat
adc
pushf
stos
mov
sbb
adc
push
xchg
jge
sbb
or
and
adc
lret
xchg
flds
and
lds
or
adc
or
lods
pop
xchg
push
push
mov
scas
push
cmp
shlb
push
pop
in
adc
negb
xchg
arpl
pop
dec
inc
add
loopne
pop
imul
int
or
out
add
imul
pop
in
sub
pop
mov
stos
inc
cmp
ret
into
int
cltd
fcomp
mov
aas
lods
lea
pop
adc
add
mov
jge
adc
or
lcall
dec
dec
jne
dec
mov
aas
mov
aas
jb
sub
jns
xchg
inc
cltd
sbb
aas
inc
pop
gs
int3
sub
call
jmp
fiaddl
xor
pop
ljmp
and
mov
xchg
pushf
jmp
push
mov
inc
mov
into
aam
stos
cld
jb
scas
lea
or
mov
cmpsl
sub
aam
xor
in
scas
push
xchg
sbb
orl
stos
shlb
xchg
push
clc
lret
push
stc
adc
out
jp
cltd
xor
repnz
fistps
and
pop
stos
push
and
dec
fsubs
icebp
inc
ja
in
es
call
lcall
inc
inc
clc
lcall
jecxz
jge
insb
jae
inc
pop
shrd
jo
xchg
push
fdivrs
aaa
out
pusha
outsb
repnz
arpl
daa
iret
icebp
xlat
dec
mov
push
mov
arpl
loopne
cmp
mov
insb
sbb
nop
int3
jb
xchg
adc
popa
mov
xchg
push
imul
add
aas
push
push
and
out
mov
sarb
add
cltd
mov
fisubrl
repz
lock
xchg
mov
call
or
stc
test
mov
mov
jne
jb
fs
add
inc
std
add
mov
pop
out
mov
scas
mov
cltd
sbb
and
gs
call
movsl
lods
mov
cwtl
dec
mov
pop
bound
loope
cli
in
rcll
int3
repnz
clc
cmpsb
adc
dec
inc
lahf
pop
jno
lret
sub
xor
test
sbb
rolb
mov
incl
dec
lcall
xchg
xchg
inc
jno
test
pop
shlb
push
movsb
movsl
movsl
gs
cmp
pop
mov
dec
cs
push
data16
cmp
jl
mov
inc
and
push
inc
imul
dec
rcll
aam
repnz
outsl
out
add
jecxz
pop
rorw
call
pop
frstor
mov
xor
mov
dec
push
mov
lds
mov
fwait
push
adc
mov
in
test
jp
inc
cltd
dec
fldl
push
ret
out
mov
into
adc
pop
rorl
push
loope
and
inc
pop
push
mov
cli
into
inc
in
adc
inc
xor
daa
adc
mov
icebp
std
out
mov
mov
push
adc
gs
push
add
jmp
cmp
cmp
jp
pop
or
out
fldl
sahf
or
popa
sbb
mov
or
cmpsl
lahf
ja
xchg
pop
cs
mov
pop
lret
repz
fsubl
lahf
mov
lcall
jb
push
cld
xor
jbe
sub
adc
push
pop
inc
sub
std
sbb
add
mov
int
mov
sub
fsubrl
cmp
test
sub
int3
fldt
push
dec
imul
incl
xor
pop
xor
or
dec
and
cmp
out
cmp
cmpb
xor
xor
lcall
sbb
daa
mov
and
jl
testb
ljmp
mov
mov
sub
jb
mov
lea
rcl
or
jmp
xorl
loop
mov
sahf
jnp
xor
add
fnstenv
cmpsl
xlat
dec
sahf
sbb
fs
xchg
cmp
es
add
push
jmp
popa
sbb
or
fstpl
pop
hlt
xor
and
pop
loopne
es
fidivrl
and
sub
insb
cmpsb
pop
and
sub
cmpsl
out
stos
pop
fsubr
mov
and
cmpb
sub
mov
into
loopne
pop
rorl
cli
vmovaps
add
sbb
pop
xchg
insb
imul
cmp
mov
frstor
mov
jle
lret
jb
dec
cwtl
loopne
aad
jno
cld
add
add
ss
roll
enter
aam
jge
test
mov
cmp
xor
sbb
mov
and
inc
xchg
nop
adc
mov
in
rorl
aas
mov
sub
inc
jl
xchg
and
xchg
insb
dec
inc
jo
adc
clc
hlt
inc
inc
lahf
push
dec
and
jo
xchg
inc
outsb
lds
and
jecxz
add
or
cmp
aas
mov
incb
jae
xchg
addr16
mov
push
pop
out
movb
sar
adc
push
scas
push
add
fbstp
sbb
lods
outsl
inc
outsl
into
mov
dec
scas
aaa
fldl
cmp
mov
outsl
sti
cli
add
pop
pop
xchg
cs
fbstp
pop
in
ret
jae
jns
jo
pop
cwtl
insl
push
pusha
popf
adc
cmpsb
das
pop
stos
pop
mov
stos
pop
jb
push
xlat
out
imul
jbe
sub
es
inc
bound
inc
sahf
aam
push
xlat
add
int
fcomps
and
fxch
cwtl
pushf
xor
lea
inc
outsb
mov
dec
adc
lock
cmp
add
xor
add
pop
jge
daa
xor
sbb
mov
xor
daa
mov
in
xchg
ret
leave
sub
ret
repz
js
dec
aas
mov
add
rcrl
test
and
popw
mov
and
inc
and
arpl
mov
adc
xor
xor
mov
xchg
adc
fldt
aam
sbb
leave
and
add
roll
mov
mov
clc
leave
xlat
pop
mov
movsl
in
ja
pop
stc
pop
pop
lods
aad
pusha
mov
xchg
push
fidivrs
or
xchg
xorb
or
pop
imul
aad
lea
jo
loope
pop
sbb
test
push
iret
mov
imul
nop
jo
icebp
sub
push
pop
push
cmp
insl
movsl
cltd
push
mov
inc
pop
divb
fwait
sub
aad
mov
imul
mov
or
add
leave
jecxz
ror
pop
jmp
xchg
or
sbb
or
outsb
push
andl
push
dec
fldenv
rclb
std
mov
mov
fwait
punpckhwd
fwait
inc
loope
clc
mov
loop
es
mov
inc
pop
push
sti
into
call
adc
cmpsb
bound
rep
lahf
and
jl
dec
jl
jecxz
loopne
fsubr
mov
cld
sub
das
or
test
shr
cmp
incl
roll
xchg
and
sbb
jo
adcl
jb
xor
fists
push
dec
xor
notw
push
jnp
sbb
jle
adc
into
pushf
rclb
jp
sub
data16
inc
fcomps
bound
inc
mov
xor
sarl
scas
jl
add
jne
inc
pop
out
lea
pop
fcom
test
cmpsb
testl
rcl
cwtl
adc
inc
sbb
into
xchg
xchg
dec
ret
popf
loope
push
mov
orl
jp
cmp
arpl
sub
lret
into
jno
xchg
sbb
out
sub
mov
cmpsl
subl
mov
rolb
xchg
ja
and
fisubl
xchg
aaa
and
dec
mov
jnp
movlps
cmp
outsl
mov
shll
dec
out
imul
jge
out
lret
popa
adc
int3
add
sti
shufps
or
shll
lcall
xchg
sbbb
add
mov
dec
test
add
mov
xor
and
lea
inc
dec
jle
lods
jp
sbb
adc
imul
mov
jl
into
lret
or
stos
lea
leave
xchg
insl
mov
sub
popf
add
cs
fidivrs
addl
leave
lahf
pop
xchg
mov
in
push
pop
in
nop
xor
or
add
push
sub
repnz
andb
push
gs
jmp
sub
mov
push
stos
mov
cld
shlb
incb
sti
leave
fs
pop
mov
js
or
pop
cmp
or
xor
push
les
fcoms
jge
mov
pop
mov
mov
push
idivb
lcall
leave
sub
or
xchg
into
in
mov
xchg
clc
divb
nop
pop
roll
cmp
rcrl
sti
js
rolb
popf
rcrb
add
or
and
dec
out
xchg
int3
mov
in
pop
lods
sbb
xchg
cli
pop
in
pop
nop
lock
jl
pop
scas
jl
jge
data16
adcl
sub
call
mov
ret
jo
test
and
xchg
mov
je
ds
lods
fs
pop
or
ret
jmp
fisubrl
mov
insl
das
test
jae
movsl
enter
mov
inc
xor
out
ret
inc
in
addb
fiaddl
sbb
jmp
in
xorl
lret
jp
inc
sub
sub
mov
cmpsb
push
xor
call
pop
cmpsb
popl
sti
adc
stc
dec
push
mov
mov
jmp
in
cs
xchg
inc
dec
pusha
sub
push
sbb
inc
xchg
inc
cmp
jbe
jno
rcll
mov
mov
fstpl
mov
inc
push
out
mov
lds
push
xor
cmp
and
movsb
pusha
in
push
mov
outsl
inc
push
cmpb
movsl
xor
out
ret
add
mov
pop
pop
pop
or
hlt
dec
sarl
and
mov
or
cmpl
or
test
cmpsl
dec
mov
or
and
mov
rcrb
xor
pop
xchg
ret
lret
gs
xchg
inc
mov
sbb
enter
jnp,pt
adc
out
cmpl
fisttpl
jecxz
mov
mov
nop
bound
dec
bound
cli
loopne
dec
push
sub
xor
int3
int3
dec
das
cmp
push
xor
mov
push
movb
mov
cmc
cmp
repz
rclb
arpl
add
lods
mov
cmp
jne
stos
sub
aas
adc
cmp
push
lods
sbb
hlt
arpl
inc
pop
shlb
push
pop
mov
outsb
movl
lret
lcall
push
lret
fwait
pop
flds
loopne
inc
jae
por
les
jp
into
adc
xor
js
jbe
inc
dec
add
fadds
jl
cmpsl
mov
addr16
leave
pop
pop
icebp
xchg
cmc
cmpsl
jne
call
addr16
or
je
push
add
in
push
fs
shlb
push
pusha
into
add
cltd
das
dec
adc
xor
adc
imul
bound
enter
fwait
mov
ret
adc
mov
xor
fimull
jne
and
mov
fisubl
pop
jge
jnp
out
call
jl
lret
out
inc
mov
sbb
rcl
xchg
iret
subb
mov
test
pusha
jns,pn
sub
mov
adc
and
mov
jp
push
lods
sub
push
push
add
xor
fnstcw
je
sub
lcall
dec
mov
dec
or
mov
stc
mov
lret
pop
je
pop
mov
test
push
ds
lahf
adc
ljmp
mov
pusha
call
inc
lods
mov
cwtl
in
cmp
faddl
xchg
jno
xor
sub
or
lods
das
xchg
xor
lds
jp
gs
into
dec
sarl
bound
lods
jne
dec
loopne
aad
xchg
mov
jg
xchg
ja
int
push
jnp
and
gs
stc
pop
das
dec
out
cs
test
push
xchg
mov
lods
xor
push
sarb
dec
dec
sbb
cmp
fmuls
shlb
mov
call
scas
mov
pop
xchg
jbe
or
cmp
sarl
add
mov
jno
add
lods
cmp
xlat
and
leave
cmpsl
xchg
mov
arpl
fdivr
cmp
dec
jge
mov
in
aas
jne
imul
jl
inc
int3
outsb
sahf
repnz
jle
in
call
les
sub
adc
xchg
sub
inc
fisubs
mov
subb
xor
sbb
fwait
stc
xor
push
pop
xchg
dec
mov
xorb
cmp
inc
jb
leave
ss
bound
jae
sub
rcrb
dec
stos
lea
stc
cmpsl
orb
adc
push
mov
pop
faddl
cmc
adc
sub
shlb
dec
sub
out
repz
jb
jb
cmp
push
mov
roll
inc
sub
aas
inc
add
pop
std
lahf
push
aam
or
and
mov
cmc
cmpsb
push
xchg
adc
test
scas
mov
arpl
aaa
cs
lods
aam
inc
push
lcall
sahf
or
xchg
movsl
bound
pop
mov
lods
ss
pop
dec
out
cmpsl
sbb
sbb
push
js
cmp
stos
cmp
pop
mov
aam
add
mov
pop
push
adc
add
pop
add
stos
fimuls
jo
mov
add
call
pusha
xorl
add
cmpsb
sbbl
push
int
mov
jae
out
bound
mov
in
jo
hlt
dec
xchg
xchg
test
aas
inc
sbb
sahf
fstpl
mov
cli
dec
sub
fldl
mov
sub
sub
rcrb
pop
dec
sti
add
jl
cmp
ret
xchg
xchg
sti
imull
cmp
lret
fnstenv
loope
mov
add
sub
dec
dec
cmp
mov
lea
mov
and
mov
popa
incl
bnd
lods
pop
fwait
inc
fistl
fcoms
and
and
mov
cmp
sbb
cmc
push
mov
pusha
movsl
push
lea
adcl
xchg
dec
inc
jl
pop
bound
mull
ljmp
push
in
aas
adc
ja
gs
adc
aaa
je
in
icebp
jmp
jb
addr16
pop
dec
lods
test
or
xchg
lcall
mov
and
andb
arpl
dec
sub
rolb
pop
pushf
insb
sti
lock
jo
scas
xor
cmpsl
cmp
cmpsl
inc
daa
mov
push
cli
lea
mov
sbb
mov
and
arpl
sub
xchg
push
movswl
add
adc
mov
cs
sbb
pop
xor
nop
fnstenv
jecxz
or
out
lahf
adc
movsl
movsb
jae
movb
div
jle
mov
mov
or
in
fimuls
bound
repz
scas
mov
stc
mov
and
cmpsb
repnz
sbb
pop
mov
push
pop
cmp
fstpt
shrb
mov
adcb
ret
cs
roll
xchg
jp
icebp
jmp
addr16
pushf
jb
mov
add
pop
xchg
dec
jl
fimuls
aam
fnstcw
add
shrl
rcrb
add
lea
outsb
out
lahf
jnp
lods
pop
xor
rolb
lahf
xor
xor
jp
mov
ret
xchg
ljmp
and
int
and
jne
cmc
call
imul
mov
fisubl
cmp
add
nop
inc
jbe
mov
mov
inc
and
mov
mov
scas
out
jb
add
mov
inc
and
cmp
shrl
xchg
inc
in
shlb
and
inc
stc
and
mov
test
lret
pop
pop
push
es
idivb
mov
jle
outsl
xchg
andb
cmpsl
mov
mov
dec
mov
arpl
mov
je
inc
mov
in
lret
sub
pop
mov
test
inc
fisubl
cli
mov
incl
in
rcr
movl
dec
push
loopne
jmp
xor
rol
cmpsb
add
jnp
stos
jmp
adc
cwtl
cmp
fadd
bound
pop
pop
imul
lea
loop
or
xchg
pop
inc
jge
xchg
arpl
sbb
add
mov
jbe
into
add
or
aaa
ffreep
popa
xchg
fs
lret
imul
xor
in
adc
add
nop
pop
adc
lahf
shlb
in
dec
mov
outsb
ds
or
lock
cld
aam
xlat
sub
insl
or
xchg
dec
mov
rclb
pop
mov
lds
movsb
arpl
pop
mov
cmp
loopne
hlt
cmc
sets
pop
cwtl
mov
movsl
inc
or
inc
lea
push
faddl
sub
inc
sub
repnz
mov
xchg
std
push
sub
sub
in
push
push
icebp
sbb
das
out
xor
fldcw
fcomps
test
xor
lret
mov
ret
js
lods
dec
mov
fldcw
lahf
in
or
in
mov
mov
sbb
nop
scas
loopne
lds
aas
loope
testl
and
lds
aad
lods
test
xchg
out
pusha
or
outsb
mov
std
cmp
loop
cs
mov
jns
mov
mov
loopne
xor
sahf
ds
dec
mov
dec
mov
jp
pushf
sbb
mov
mov
frstor
lea
sub
data16
pop
repz
arpl
cmp
das
clc
aaa
push
xchg
sbb
or
lock
push
jle
lret
shl
mov
fldcw
adc
xor
push
push
push
jmp
faddl
jbe
sub
dec
bound
fs
dec
jg
addb
pushf
inc
and
cmp
and
test
mov
mov
imul
orb
jmp
jle
out
fildl
mov
adc
popf
push
xchg
cmp
in
push
addr16
inc
mov
lods
xor
test
rcrl
dec
leave
and
cli
xchg
or
xchg
dec
out
adc
leave
shl
xor
mov
pop
push
mov
lea
repnz
icebp
decl
js
dec
mov
dec
dec
clc
lret
sbb
je
push
in
pop
out
inc
testl
mov
stos
xor
mov
negl
cmpsl
jg
pop
hlt
std
loope
iret
enter
inc
and
push
adc
scas
jo
push
mov
jnp
adc
test
sub
out
mov
insb
fdivs
xchg
dec
leave
mov
inc
mov
stos
xlat
sbb
test
inc
lcall
xchg
hlt
xchg
ds
sub
insb
into
jno
jmp
mov
adc
mov
rcr
pop
jecxz
jo
lret
mov
pop
cltd
into
aaa
and
sub
xchg
jo
movsb
cmc
and
push
add
mov
mov
xchg
mov
test
nopl
push
loope
cmp
out
sbb
lret
shll
sarb
jb
movsb
ljmp
and
mov
adc
mov
test
pop
inc
jmp
mov
cwtl
loop
or
fstps
fs
cmpsl
es
sub
jnp
imul
adc
in
push
push
pop
cmpsb
pop
xchg
outsb
push
cmc
cs
clc
xor
in
mov
fbld
lods
inc
addr16
and
iret
or
jo
jg
jne
lret
bound
ret
fdivs
insl
stos
in
rcrb
scas
bound
test
ret
leave
jle
repnz
and
fs
add
and
sbb
mov
push
stos
mov
rorl
xchg
dec
sbb
jns
fdivrl
lcall
add
jae
mov
inc
test
in
inc
mov
lds
stos
imul
daa
lret
daa
aad
mov
xchg
popf
and
jnp
loope
cwtl
dec
pop
jle
push
ret
aam
stos
mov
stos
xor
unpckhps
mov
das
cli
ret
and
inc
jp
in
mov
add
push
icebp
sub
hlt
int
in
loope
and
adc
ret
add
fwait
push
mov
sub
cltd
or
cmp
jp
or
sahf
and
loopne
pop
xor
neg
outsl
jo
mov
jmp
stos
es
jnp
pop
popf
inc
sbb
mov
fdivr
fdivp
fxtract
add
sbb
inc
sbb
jge
in
jg
mov
cmp
adc
clc
cli
mov
aad
add
push
ljmp
mov
push
pop
lock
pop
jno
sub
shrb
adcl
pop
sahf
cmpsb
fnstsw
mov
jl
mov
sbb
pop
sbb
cmp
insl
lahf
rcr
pop
nop
pop
dec
arpl
inc
xor
pop
dec
push
jmp
sub
pop
pop
mov
ss
shll
dec
das
xlat
jg
add
jmp
fisttpl
fucom
aam
mov
xor
pop
xor
movsb
sbb
pushf
sub
es
pop
xchg
icebp
jne
cwtl
mov
cld
leave
mov
dec
loopne
pop
notb
pop
push
sub
leave
insl
mov
lret
mov
lret
adc
push
push
add
roll
push
mov
push
xor
test
cld
int
jl
dec
mov
sub
les
fnsave
jmp
jo
adc
cs
or
inc
xor
outsb
pushf
icebp
mov
lods
leave
shll
and
push
sbb
push
enter
mov
in
jo
xor
lock
pop
dec
sub
jg
repnz
sbb
mov
inc
and
clc
ljmp
push
movsb
add
dec
adc
xor
jle
loop
jmp
data16
mov
popf
add
push
lds
in
or
adc
fwait
push
cmp
push
lret
jle
data16
or
aaa
cmp
rcl
mov
push
or
push
fnsave
loopne
and
pop
pop
mov
jmp
xlat
ljmp
loope
test
mov
rolb
scas
stos
ret
fiaddl
mov
les
cmp
or
mov
or
push
jo
sub
lods
dec
test
xchg
ret
jns
pop
leave
out
mov
lds
insl
and
cwtl
inc
sub
mov
push
add
cwtl
je
clc
pop
and
notb
cmpsb
add
push
ficoms
and
adc
mov
or
sbb
jecxz
or
dec
xlat
cmpsb
dec
ss
popf
icebp
pop
hlt
nop
sbb
lods
ret
sub
cli
lcall
pop
cld
movsb
test
xchg
push
popf
mov
sti
and
test
outsb
cmp
xchg
dec
pop
dec
scas
mov
shl
out
jmp
mov
mov
add
nop
sub
push
outsb
lret
imul
adc
dec
divl
leave
pop
sub
loopne
insl
in
add
hlt
xchg
jb
mov
ret
cmpl
lret
fmul
pop
jne
pop
fiaddl
loopne
pop
ds
add
gs
addr16
or
pop
pop
mov
je
xor
lcall
ret
xchg
repnz
cmp
cmp
arpl
xchg
mov
lcall
lcall
outsl
fabs
or
push
iret
inc
jnp
lock
jo
inc
cwtl
cli
addb
imul
cmp
dec
xor
aas
icebp
xchg
lret
pop
pushf
adc
jae
mov
pop
sub
adc
xorb
lret
mov
adc
xchg
pop
mov
cmp
inc
sub
xor
push
mov
adc
jnp
int
or
int
es
mov
mov
shll
cmp
cmp
fwait
lret
icebp
mull
sub
cmpsl
adc
fcomps
and
lret
pop
push
in
sti
xlat
sbb
ret
fmul
out
mov
divb
movb
pop
inc
mov
fnstcw
popa
shll
cmpl
inc
decb
insb
sub
shll
mov
dec
jnp
mov
sub
push
movsb
fldenv
in
dec
xor
in
retw
cld
inc
daa
mov
mov
xor
fsubl
inc
cvttps2pi
stc
outsb
xchg
jle
mov
ret
mov
mov
sub
xchg
jno
mov
xchg
lods
test
mov
pushf
sub
mov
repz
xchg
xor
icebp
nop
sub
std
adc
das
js
adc
rclb
shlb
jbe
gs
js
mov
pop
xchg
mov
jle
aad
insb
into
cmp
loopne
fcompl
lahf
int3
rorb
xor
fidivs
sbb
mov
in
xchg
xchg
xchg
das
mov
testb
leave
or
loop
cmp
jmp
dec
sbb
or
push
icebp
add
xchg
clc
pminub
icebp
push
cmp
lahf
je
cmp
popl
pushf
xor
sti
inc
shll
and
add
outsb
repnz
or
xor
loop
push
fcoml
lods
test
lahf
fisubl
iret
mov
popf
xlat
inc
pop
jbe
mov
adc
fidivrl
shl
mov
lret
pop
add
mov
movsl
js
mul
xor
xor
popf
xor
pop
icebp
and
or
lds
and
or
jnp
iret
icebp
arpl
nop
sbb
daa
cmp
lcall
mov
lret
dec
xor
in
fsubs
movsl
int3
pop
pop
sbb
and
add
es
iret
adc
pop
scas
fstpt
clc
je
pop
punpckhwd
sub
dec
hlt
pop
mov
sub
and
mov
bound
push
les
negl
leave
int3
xchg
ret
cmp
jno
aam
mov
xor
mov
ficomps
rol
stos
cmp
bound
daa
pop
test
mov
hlt
sti
inc
add
call
add
sbb
xor
lea
outsl
xor
aaa
jno
mov
dec
push
aam
add
fsubrs
add
push
push
dec
dec
daa
adc
dec
cs
mov
ficomps
mov
cwtl
jecxz
std
mov
fldt
add
sti
cmp
lcall
dec
bndldx
mov
enter
lret
jnp
cld
pop
cld
pop
loope
push
dec
pop
pop
jmp
push
imul
lret
shl
xor
adc
scas
movsl
mov
push
das
pop
lret
std
jg
and
hlt
mov
fisubrl
xchg
pop
std
sarl
add
aad
daa
lcall
inc
sub
mov
mov
fs
and
jmp
sub
sbbb
pop
js
fwait
add
ret
fistl
out
jbe
inc
out
mov
popf
or
or
jo
into
popf
mov
dec
mov
in
mov
jecxz
clc
movsl
divb
sub
or
jbe
adc
inc
dec
xor
dec
and
push
es
inc
cmp
or
test
fildll
enter
into
adc
ficoml
jnp
inc
loopne
shll
out
pop
int3
adc
xchg
bound
out
push
and
sbb
jno
sbb
add
push
jecxz
out
das
insl
fwait
pop
mov
int3
insb
add
push
adc
bound
in
mov
mov
shlb
ret
inc
stc
lahf
outsl
lds
test
mov
imul
sub
ret
daa
mov
hlt
test
movaps
push
mov
push
cld
jmp
xchg
pop
shl
les
jmp
and
das
dec
cmp
in
sbbl
sbb
pop
push
rorb
mov
lds
jg
pop
inc
xchg
incl
out
xor
mov
dec
mov
adc
pop
cs
pop
mov
sti
or
lock
add
mov
cmp
iret
xor
jb
sti
jl
jne
fstpl
jb
ds
lea
mov
mov
cmpsb
mov
push
js
adc
push
sub
test
or
xor
fnsetpm(287
xchg
idivb
jo
fwait
lds
jo
sub
and
scas
lcall
lcall
jae
sarl
mov
pop
push
push
mov
arpl
cmpsl
insl
leave
inc
subb
pop
arpl
cmpsl
into
in
pop
sub
pop
lea
pop
xchg
cmp
sbb
mov
xchg
fwait
push
pop
sub
jp
leave
in
xorb
inc
fwait
dec
dec
hlt
in
sbb
ds
decl
jno
ret
inc
clc
pop
arpl
sbb
jle
pushf
test
or
mov
fidivs
mov
nop
imul
je
or
clc
pop
xchg
mov
mov
cwtl
add
movsl
mov
jmp
push
scas
cmp
push
loopne
inc
mov
push
dec
out
sbb
jno
pop
lret
es
fists
mov
xor
sti
inc
mov
push
nop
cmpsl
ja
and
fmull
addr16
lahf
push
dec
push
cltd
das
mov
mov
mov
popf
into
pop
mov
lret
inc
jecxz
sbb
jmp
adc
lods
scas
and
pop
je
push
jno
sbb
lods
adc
insl
inc
fisttpll
loopne
mov
repnz
dec
xchg
or
adcb
adc
stc
push
hlt
cmp
jne
ss
push
sti
mov
jecxz
test
pusha
es
outsl
sti
jp
adc
mov
cmpsl
fs
jge
mov
imul
dec
pop
outsb
push
xchg
frstor
lods
or
jp
or
repz
jnp
hlt
test
xchg
dec
rcrl
daa
xchg
pop
lods
push
rclb
pusha
sbb
xor
insl
fucomp
cld
sbb
aas
jb
js
mov
shl
jo
add
hlt
push
jmp
mov
add
test
cmp
fimuls
push
sti
push
movsb
sub
mov
pop
mov
lret
push
sub
mov
add
das
or
pusha
dec
jle
adc
stos
les
lret
sbb
push
test
js
rsqrtps
stos
mov
in
jmp
cwtl
je
fwait
add
inc
add
dec
cmc
mov
mov
hlt
movsl
cmc
test
ss
sbb
xor
in
inc
inc
test
xchg
mov
xchg
lret
fwait
add
pop
mov
aam
and
stos
fcoms
sub
scas
lret
les
pop
negl
popf
xor
je
or
cmp
mov
cmp
xor
pop
popa
rcll
mov
push
inc
pop
ficomps
hlt
or
scas
iret
je
push
jecxz
xchg
mov
insl
cli
insb
enter
pop
dec
adc
dec
sbb
out
jns
xchg
xchg
mov
fdivrs
aas
cmpsb
xchg
iret
clc
idiv
adc
xchg
add
cmp
idivb
mov
mov
sub
push
push
adc
jb
xor
iret
xchg
jmp
add
fcoms
adc
imul
inc
mov
sub
iret
pop
sub
out
int3
scas
and
ret
repnz
xcrypt-cfb
cmpsl
loop
mov
test
out
sbb
jg
scas
pop
pop
ficoml
mov
shrl
lret
addb
loopne
push
pop
sbb
cmp
mov
in
and
pop
sub
xchg
stc
scas
dec
adc
mov
xchg
test
andl
int
es
add
and
imul
xor
test
cmp
cmp
or
jp
lods
jge
jno
adc
outsb
mulb
add
or
sbb
sbb
je
lcall
ljmp
cs
add
call
pop
xchg
mov
hlt
orl
aas
repz
mov
push
jl
xor
add
or
dec
and
testb
mov
fsubrl
cmp
dec
fsts
arpl
outsb
jp
jle
ror
sbb
xchg
fstps
fstps
ss
test
and
push
repz
sbb
adc
addb
add
mov
sbb
push
push
and
insl
mov
mov
adc
dec
sbb
mov
in
pop
inc
in
hlt
jne
mov
fimull
fidivl
das
pusha
outsl
and
add
pop
mov
hlt
addr16
pop
repnz
add
inc
push
inc
std
mov
fs
jnp
scas
sub
and
jg
jae
mov
lahf
mov
rorl
hlt
xor
sub
pop
outsl
mov
sbb
fs
jg
fmul
xchg
sbb
adc
mov
mov
dec
push
cmc
insl
loopne
mov
jne
fs
icebp
push
and
int3
mov
test
mov
push
jge
adc
rolb
xor
cmp
xchg
jo
xchg
out
push
out
push
mov
xchg
xchg
cmpsl
inc
cmp
jle
xorb
jno
lahf
fstpl
stc
aaa
loope
pop
pop
cmp
test
add
and
outsb
in
add
data16
insb
xchg
in
into
adc
and
dec
test
imul
fistpl
lods
mov
out
fldenv
xor
ret
inc
call
add
mov
mov
in
in
sbb
imul
xchg
add
fiaddl
xchg
cmp
fisttpll
lods
pop
push
je
push
lret
xlat
mov
pop
scas
ss
lock
add
fnstcw
decl
pop
pop
ljmp
fcmovb
cmp
xchg
mov
scas
lods
movsb
in
jno
jp
fimuls
in
les
ret
or
out
sub
jecxz
lods
adc
in
into
dec
dec
es
cmp
les
test
xor
ljmp
jecxz
jmp
pop
outsb
pop
mov
pusha
outsl
lods
aad
sub
pop
scas
aaa
mov
out
jge
and
testb
mov
orl
mov
enter
fildl
jle
sub
jnp
mov
xchg
mov
lods
mov
shlb
push
xor
push
dec
insl
or
mov
fstps
and
and
call
xchg
xchg
xlat
call
and
or
repz
cltd
nop
cmpsl
orl
lcall
dec
rcl
call
sbb
shrb
ja
pop
mov
mov
bound
inc
rcr
and
adc
ss
push
mov
xchg
and
mov
imul
pop
bound
jb
dec
adc
sbb
test
push
dec
movsb
lret
out
mov
int
daa
lret
xchg
jmp
fldl
xor
shrb
out
test
mov
or
xchg
cmc
sbb
aas
jns
ljmp
inc
mov
dec
push
push
fcmovne
pop
adc
scas
lods
repz
out
aad
testl
fbld
popa
aam
das
rorl
xor
aad
insl
cmpsb
push
pop
pop
mov
popa
movsl
mov
jge
jecxz
jb
dec
jnp
and
jp
cmp
push
push
addb
jl
jno
add
movb
sbb
cwtl
mov
adc
sahf
inc
ja
lock
out
imul
movq
test
jecxz
repnz
push
and
imul
sub
pop
cmp
dec
add
aas
imul
test
inc
sub
cmpsb
pop
insb
jmp
or
adc
fdivs
push
dec
jp
test
push
jle
add
inc
loope
fildl
fsubl
popf
mov
inc
rolb
out
ret
xchg
movsb
lea
xchg
enter
add
cs
or
and
cmp
sbb
ret
icebp
filds
cmp
and
mov
push
add
jmp
insl
imul
inc
push
cmp
cmp
pushf
jo
pop
xor
daa
fs
fwait
push
test
fs
cs
pop
cld
push
js
aas
xchg
mov
sbb
stos
ror
popf
fwait
movsb
in
push
aad
packssdw
adc
mov
sub
sbb
mov
dec
shll
out
jmp
data16
and
dec
mov
xor
mov
pop
push
dec
push
jbe
jle
xor
dec
movsl
movsb
mov
cmp
imul
andb
mov
fs
test
in
mov
jle
les
lcall
insb
ret
cmp
dec
inc
pop
lods
inc
xchg
fildl
sbb
adc
push
shlb
cmpsl
mov
sub
stc
add
or
inc
leave
leave
xchg
arpl
daa
or
mov
cmpsl
inc
jle
test
dec
negl
iret
xchg
push
rcl
addb
out
lea
lret
xlat
inc
push
sub
call
rcrb
mov
aad
in
addr16
dec
imul
push
add
fiadds
lcall
mov
xchg
out
mov
mov
pop
in
cmp
hlt
mov
sar
mov
and
inc
inc
cmpsb
xor
popf
xorl
pop
rclb
mov
add
jmp
iret
mov
add
lods
jecxz
sub
les
jbe
out
int
sbb
iret
shll
pop
sbb
and
adc
loope
mov
xchg
sbb
jmp
sub
notl
addr16
sub
cmp
inc
hlt
out
push
mov
xchg
sub
outsl
and
push
popf
icebp
insb
jl
add
lds
js
aad
nop
adc
sub
pop
ja
lds
fdivrs
dec
call
mov
test
pop
or
movsb
out
stc
and
mov
jno
push
push
sbb
fsts
xchg
xchg
or
add
inc
fstpt
sti
subb
mov
add
mov
add
adcb
imul
pop
daa
pop
jl
jnp
xlat
and
push
jb
adc
mov
jae
insb
mov
inc
iret
pop
jae
or
daa
pop
dec
sbb
mov
mov
cmpsb
mov
inc
loope
mov
jne
mov
pop
test
xchg
andb
cmp
fnstsw
pop
insl
adc
pop
adc
loope
js
psubw
add
cmpsl
xchg
ret
cmp
lea
or
push
inc
call
push
sti
push
cmpl
dec
into
cmp
out
pop
in
pop
inc
aas
stc
xchg
ja
les
mov
cmp
cmc
cmp
or
sti
dec
imul
imul
mov
sbb
jb
jmp
out
inc
outsl
mov
fucomp
daa
xor
dec
loopne
mov
rclb
test
and
push
dec
or
push
out
rcll
mov
and
addb
aas
dec
or
adc
xchg
nop
add
cmc
cmp
or
loop
test
sub
mov
sbb
cvtpi2ps
push
and
sbb
dec
jbe
mov
xlat
xchg
cmp
int3
dec
loope
cmp
ret
sbb
inc
jmp
incl
push
mov
dec
mov
add
ss
std
jmp
xlat
jmp
sub
aad
dec
or
std
sti
push
sbb
lds
xchg
lret
ret
xchg
sbb
sub
pop
mov
push
ret
sarl
inc
cld
mov
in
xchg
pop
clc
push
in
scas
test
std
mov
mov
aaa
adc
rorl
mov
jb
cmp
pop
jp
jge
or
clc
daa
push
xchg
cmp
sarl
xor
dec
adc
test
cltd
adc
xchg
inc
js
rcrb
pop
loopne
or
in
jecxz
xchg
notb
call
push
pop
sub
das
jae
cmp
leave
nop
jmp
es
add
adc
icebp
sbb
lea
sarb
jecxz
push
dec
imul
push
mov
aaa
mov
xchg
inc
sbb
mov
outsl
xchg
shrb
push
adc
icebp
xchg
je
addr16
jnp
outsl
scas
mov
fcoml
cwtl
push
leave
outsb
addl
mov
mov
not
jecxz
xor
jge
movsl
and
push
mov
or
push
jle
or
mov
jb
movsl
ficompl
xor
sti
inc
cmp
and
mov
jae
cmp
int
subb
cmp
adc
xor
popf
push
xor
inc
mov
mov
add
imul
sbb
or
cmpsl
fisttps
dec
cmpsb
inc
mov
orl
into
and
vpsrld
jecxz
sti
jl
repnz
mov
xchg
sub
js
xchg
in
cmpsb
pop
cltd
xchg
sbb
movsl
fcompl
xlat
cwtl
sub
dec
inc
and
es
xchg
push
inc
fsubrs
xor
lcall
movsl
jp
jnp
es
jnp
dec
test
cmp
xchg
xchg
lret
dec
arpl
test
bound
jp
ds
jge
dec
add
das
or
push
ret
mov
adc
add
cmp
adc
and
xor
shrl
mov
ss
jmp
or
inc
bswap
mov
push
mov
cmp
mov
int
lret
mov
out
into
mov
movsb
dec
lret
mov
push
sbb
sub
ss
and
add
push
scas
cmc
xchg
fbld
jmp
iret
jne
aad
in
jle
push
mov
pushl
xchg
lock
rcrl
push
xchg
aas
push
leave
push
out
dec
addr16
fisttps
push
mov
leave
adc
sub
js
stos
xor
cwtl
aas
push
stos
push
mov
cmpsl
push
into
push
daa
or
mov
xlat
push
mov
daa
push
jnp
and
adc
pop
mov
orb
hlt
aaa
je
test
imul
xlat
or
inc
jmp
loopne
inc
andb
sub
xchg
insl
stc
add
in
fidivs
jl
dec
daa
xor
addr16
scas
inc
push
mov
and
in
cltd
repnz
insb
jb
daa
bound
ss
pop
aas
push
pop
pop
aaa
mov
and
lock
xchg
test
add
std
hlt
pop
in
imul
inc
outsl
mov
test
push
cmp
mov
push
test
movsl
addr16
push
lock
mov
scas
jle
mov
divl
in
push
jmp
xchg
push
cli
mov
test
addb
ds
jecxz,pn
sub
mov
dec
dec
mov
mov
imul
and
stc
and
mov
rorb
aas
rorb
sahf
push
aam
inc
lret
cmp
out
xlat
inc
jg
pop
and
leave
adc
test
stos
movsl
lock
in
out
gs
inc
sbb
popf
nop
or
jb
pop
adcb
jns
hlt
xor
sbb
xor
jnp
cltd
les
jge
fldenv
sub
fmull
sub
push
nop
adc
cmc
adc
sahf
jl
jecxz
popa
jb
dec
cmp
add
pusha
jle
cmp
sbb
or
ret
pusha
test
in
test
add
or
mov
fdivrl
xchg
mov
push
push
and
into
cmp
jae
cmp
push
pop
sub
lahf
inc
jl
jecxz
inc
add
xlat
cli
cmp
daa
dec
call
mov
daa
and
dec
test
mov
popa
ss
jmp
inc
xchg
lret
fistpl
lret
push
push
mov
fstl
mov
xchg
pop
sbbl
and
subb
sbb
sbb
mov
rol
sahf
jl
popa
mov
into
std
in
out
shll
int
rcrl
xor
ficoml
adc
mov
pop
add
outsl
outsb
sbb
push
cmp
and
rcrb
pop
cmpsl
push
xor
push
dec
loope
xlat
repz
cmpsl
cmc
roll
test
std
mov
dec
cmpsb
jmp
jp
lea
mov
sub
pop
jne
out
or
andl
lock
push
jne
out
jae
mov
mov
lds
mov
inc
insb
loop
sbb
les
pop
or
rol
add
mov
lret
mov
push
in
lret
lcall
push
and
rcr
and
jb
jnp
xor
shl
out
cmp
popa
in
push
xchg
pop
mov
xchg
dec
and
addl
lods
test
inc
int3
ja
pop
ds
in
lcall
fcompl
pop
int
mov
std
js
into
pop
jge
roll
int3
cmpsl
clc
in
iret
negb
add
mov
push
imul
inc
xchg
sub
mov
pushf
aas
lock
test
dec
fcmovu
mov
notb
fidivl
enter
mov
cltd
fnsave
rep
cmp
pop
xor
push
adc
into
dec
mov
rcr
xchg
movb
fmull
sbb
add
lds
inc
jb
repnz
sub
inc
ficompl
out
pop
ds
cwtl
xchg
push
dec
imul
ja
xchg
nop
std
inc
and
sub
imul
js
test
mov
loop
mov
xchg
lods
iret
dec
jmp
mov
jmp
loopne
dec
cmp
ljmp
lcall
outsl
sti
inc
push
sub
rolb
xchg
pusha
cli
stos
pusha
xor
xor
dec
test
mov
xlat
sarl
lcall
je
imul
xchg
sub
cmpl
lahf
pop
stos
mov
loope,pt
jno
icebp
push
inc
jp
pop
cmp
dec
dec
jmp
xor
push
jg
sbb
insb
and
test
and
lock
xchg
jnp
sbb
or
cmpsb
js
xchg
scas
fcoms
inc
les
jns
outsl
xor
adc
lret
mov
dec
and
jno
cmp
movsl
repnz
movsb
ret
xlat
push
push
xlat
in
inc
sub
jge
stos
cs
push
ds
filds
cmp
daa
or
adc
cmp
fadd
and
inc
inc
sahf
sub
jns
jbe
pop
jne
adc
aas
rclb
mov
push
pop
imul
ficoml
mov
lea
fsubrs
mov
cmp
adc
inc
into
mov
lods
push
mov
or
lret
or
popa
mov
insl
mov
inc
enter
mov
dec
push
sub
hlt
mov
cltd
stos
fimuls
bound
sbb
in
pop
sub
negb
divl
adc
xor
pop
aad
push
leave
xchg
sub
jo
clc
aam
dec
lahf
cmp
add
lahf
mov
xor
mov
sbb
cmp
fistl
push
fdivrl
xorb
cmp
cmp
jg
lcall
lock
pop
rcrb
js
xchg
mov
pusha
divl
lret
xor
sub
push
stc
call
jge
cmp
nop
mov
aad
das
mov
dec
test
arpl
mov
hlt
lea
mov
cs
lds
push
fdivr
in
xchg
cmc
mov
and
jle
testb
or
ficoml
dec
js
pmulhw
fwait
enter
cmovae
push
dec
push
mov
sbb
and
adc
fs
rcrb
lds
enter
add
cld
jnp
mov
cwtl
mov
pop
mov
and
imul
mov
insl
enter
fimull
add
pop
xchg
cmp
mov
adc
hlt
cmc
insl
lea
mov
fs
inc
rorl
outsb
gs
add
sub
andl
data16
call
xchg
jmp
sub
pop
mov
push
cmpsb
xor
addl
in
out
repz
ja
test
sbb
scas
xchg
mov
jge
pop
sti
lea
pop
xchg
je
into
es
stos
mov
push
add
or
popf
fldl
cltd
jo
lahf
nop
fsts
bound
cmp
jns
sbb
adc
lds
divl
push
js
adc
jg
mov
mov
mov
insb
mov
pop
push
test
sub
xor
hlt
dec
cmp
jb
fwait
sub
sahf
leave
xchg
repnz
notl
repnz
lds
sti
or
stos
pop
stos
fwait
push
movsl
and
push
or
jae
es
imul
pushf
popf
push
push
fadds
lds
jo
in
xor
mov
xchg
test
addr16
pusha
lret
rcll
push
arpl
lea
or
mov
jl
mov
sub
outsb
inc
ret
icebp
jmp
cmp
cmp
pop
inc
pop
in
flds
int3
lret
mov
xor
call
pshufw
test
cmp
les
insl
sbb
sbb
insb
sub
push
jb
sahf
adc
clc
arpl
push
iret
out
popa
outsb
jb
sub
in
sbb
jmp
or
in
mov
cmc
jmp
mov
testl
and
into
pop
cli
jmp
mov
out
lods
enter
rorb
push
jo
dec
adc
xchg
push
mov
xchg
lock
adcl
loop
add
adc
adc
mov
adc
mov
xchg
or
jecxz
add
ds
xor
mov
or
push
jmp
xchg
lock
xor
int3
shll
idivb
insb
scas
cmp
cmc
ret
pop
mov
push
mov
movl
fcomp
push
aaa
out
push
ljmp
loop
cli
dec
xor
or
sub
testb
dec
js
pop
dec
mov
sbb
out
pop
inc
outsb
adc
pop
addr16
mov
mov
loope
xor
fnsave
jle
add
test
and
nopl
jg
insl
inc
lcall
mov
push
mov
sub
jp
sbb
nop
mov
jno
sub
xchg
std
lock
das
add
mov
andl
push
xor
xor
sbb
and
insb
mov
dec
out
inc
into
add
insl
orb
int
cmpsl
mov
sahf
sub
mov
adc
les
cmpsb
insb
jnp
fcoms
hlt
shlb
mov
int
insl
mov
out
cs
nop
aam
ds
and
iret
loopne
dec
and
sub
xor
xchg
test
adc
inc
loop
adc
test
add
std
xchg
mov
cmc
nop
imul
adcl
adc
sub
out
pushf
and
fcomip
cli
out
push
mov
and
sub
or
dec
pop
mov
push
sub
aaa
popa
aad
ss
mov
or
js
mov
cld
fisttpl
sbb
pop
in
xchg
sbb
fcompl
mov
pushf
or
addl
cmp
jecxz
shll
add
outsb
in
xchg
loopne
jmp
mov
mov
and
dec
sub
push
jbe
lahf
out
lock
inc
pop
lret
dec
lods
cmpsl
xor
mov
das
push
out
pop
adc
mov
dec
xchg
cmp
test
inc
sbb
inc
and
out
sbb
mov
pop
arpl
loope
xor
test
in
sub
fcompl
bound
inc
mov
jne
mov
lret
mov
cmp
mov
push
cmc
scas
loopne
dec
call
lahf
lds
insl
dec
sti
andb
fldl
pop
jnp
push
xchg
push
jne
pusha
cmp
cmp
mov
push
push
mov
cmp
aas
xor
jecxz
dec
popf
stos
int3
scas
decl
addr16
mov
lahf
outsl
jl
daa
dec
xchg
adc
mov
std
xor
or
fsubs
cmp
ss
sub
jnp
push
xchg
test
cmp
xor
xor
les
arpl
push
out
add
arpl
fiadds
imul
mov
push
dec
sarb
add
insb
fs
pop
sbb
iret
pop
outsl
rcrl
jns
subb
out
or
or
std
push
jno
cmp
push
shl
mov
jecxz
sub
stos
aas
adc
or
pop
jmp
push
cs
push
sbb
fcoml
push
pushf
sub
inc
shrl
push
xchg
sbb
inc
dec
or
pop
cmp
loope
out
xchg
hlt
push
ja
out
arpl
dec
test
xchg
lods
aas
pop
mov
sar
iret
sahf
icebp
ljmp
adc
mov
rcr
xor
push
xor
xchg
push
imul
aam
movsl
and
mov
out
sub
popa
test
movsl
idivb
imul
int3
mov
into
lds
nop
in
push
mov
jbe
dec
xlat
sbb
cmp
stos
pop
popa
jl
ja
xchg
leave
out
jb
out
adc
jbe
push
mov
push
ja
lock
insl
outsb
mov
bound
cld
xlat
icebp
imul
push
adc
adc
sub
lahf
pusha
mov
and
xchg
dec
loop
in
jno
xor
sub
mov
scas
stos
jbe
shlb
rep
loop
mov
lret
push
mov
jb
repnz
cmc
pop
jle
call
inc
mov
push
dec
ficoms
push
lret
fisubl
xchg
sarb
cmpsb
fsubl
dec
or
mov
dec
ja
into
push
cmpsb
xchg
stc
ja
cmp
call
ljmp
and
lcall
mov
adc
inc
inc
or
sbb
aam
sti
out
xchg
shl
inc
outsb
inc
fcoml
in
shrb
cltd
jmp
xchg
pusha
aad
jb
cs
orl
and
faddl
pop
sub
or
jg
xchg
jg
adc
sbb
gs
sub
jl
dec
stos
and
cli
or
paddusw
inc
mov
in
xchg
dec
loop
lock
push
fbld
aam
or
mov
add
adcl
xchg
add
push
add
int3
popa
std
and
xlat
addr16
dec
fsubs
jae
movsl
mov
push
data16
mov
aad
call
into
xor
cmc
imul
mov
dec
ret
xchg
adc
dec
ljmp
and
sub
sub
test
or
movsl
iret
stos
call
imul
adc
ret
add
push
sbb
and
lods
ffreep
rorb
mov
dec
xchg
ret
push
pop
sbb
sub
xor
jno
dec
int
pop
push
add
cmp
aam
test
test
jle
mov
dec
repz
notb
push
sub
mov
pop
pop
sti
sti
xchg
roll
mov
aam
inc
cmc
add
mov
int3
adc
jns
jmp
mov
js
cwtl
cwtl
jne
xchg
cltd
xchg
mov
cmp
loope
pop
enter
sahf
into
pop
cs
dec
ljmp
mov
xor
sarb
cmpsb
dec
out
test
mov
gs
mov
mov
jae
push
and
lcall
pop
cmp
adc
cwtl
xchg
nop
and
and
test
xchg
inc
cmp
shl
movsl
inc
cli
push
out
jle
jno
pop
or
jo
inc
int3
add
xor
int
jg
aam
ljmp
scas
ret
sbb
inc
mov
adc
rolb
aam
lods
mov
sub
mov
test
sti
cli
in
dec
icebp
lods
stos
in
daa
hlt
xor
pop
push
adc
and
xor
test
std
dec
movb
or
sub
jmp
adc
jge
ss
aad
cmpsb
in
inc
aaa
loopne
jne
pop
xor
adc
cmp
cmp
adc
push
sub
prefetch
or
xchg
jl
inc
sti
jbe
scas
dec
pushf
frstor
sbb
cmp
push
sub
push
add
into
and
jae
add
xchg
pop
out
push
out
pop
xchg
and
mov
js
xchg
jp
in
sarb
pop
lods
pop
cmc
outsl
cmp
les
and
dec
arpl
sarb
mov
mov
dec
xchg
es
jne
fidivrl
jne
push
adc
es
inc
cmp
sub
inc
lret
mov
cs
cmp
es
and
mov
pushf
rorl
lea
push
push
aaa
push
add
repz
jo
mov
mov
sbb
xor
pop
lcall
filds
outsl
insl
nop
aam
adc
sub
adcb
fisubl
and
negl
xor
xchg
jbe
into
sbb
push
retw
mov
jo
shrb
push
orl
andl
es
cld
inc
scas
les
movsb
inc
adc
call
xchg
mov
jle
out
xchg
rcll
xorb
xchg
arpl
inc
icebp
xchg
sarl
sahf
cld
stos
xor
shrl
or
aaa
mov
mov
je
adc
jmp
es
insl
pop
xchg
cmp
add
std
cmp
xchg
xor
out
je
mov
or
das
imul
repz
pop
inc
scas
lock
idivl
push
out
xlat
clc
xor
xor
and
xlat
push
in
cltd
imul
insb
mov
xor
aas
sbb
je
or
xor
sbb
pop
push
out
ss
test
dec
mov
jmp
and
inc
mov
rcll
xor
jo
lret
mov
cli
jno
neg
cmc
aas
std
sti
iret
sahf
out
mov
mov
cltd
push
push
jp
jge
cmpsb
jp
enter
into
add
stos
stos
xor
fnstsw
jecxz
verr
inc
lcall
mov
jb
sub
addl
sub
fidivl
inc
xor
dec
inc
mov
sbb
test
mov
cmp
mov
call
sbb
insb
shrb
or
mov
fwait
shll
jle
fcomps
pop
jmp
movsb
or
mov
and
mov
mov
and
aaa
in
movsl
aad
push
rclb
mov
jbe
ss
pop
xor
dec
or
inc
inc
sarl
nop
insl
ljmp
sahf
cmpsb
add
adc
ror
mov
lahf
mov
jno
jbe,pt
insl
cmpsb
loopne
pop
ret
ret
sbb
or
xchg
mov
dec
out
in
rolb
xor
xchg
popf
out
outsl
inc
mov
dec
js
dec
xchg
jb
sub
mov
pusha
mov
cli
jmp
mov
pop
int3
popf
cmpsb
out
push
pop
inc
add
aam
jno
mov
je
mov
outsl
cmp
test
filds
or
push
xor
xchg
push
or
jbe
dec
movsl
movsl
xor
cmp
jge
lds
or
mov
cmp
pushf
mov
sti
xlat
adc
dec
adc
stc
ret
out
sti
sbb
inc
cmpsb
fmul
adc
mov
mov
cmp
mov
ja
sarb
stc
hlt
icebp
mov
push
cmp
inc
lods
out
cmp
loop
or
jo
sbb
lret
jge
std
cmc
sub
jno
stos
ret
ficomps
cmp
stc
jecxz
push
icebp
pop
ds
outsb
sbb
mov
ss
xor
addl
sbb
pop
inc
inc
sbb
mov
sbb
insb
popa
fisubl
jge
mov
test
mov
ret
test
rcr
push
cli
call
mov
or
dec
jecxz
or
es
imul
out
testl
addr16
orb
fs
loopne
pop
imul
rcrl
js
repz
jbe
popa
sub
call
sbb
mov
shrl
cmp
fsts
sbb
orb
scas
and
outsb
fidivs
shll
stos
mov
cmpsl
loope
test
scas
sbb
scas
xchg
sti
mov
and
aas
push
jg
cltd
mov
jmp
aas
int3
adc
dec
sub
std
or
out
mov
mov
cs
cs
and
outsl
mov
aas
dec
in
outsl
cmpsl
mov
shlb
mov
test
lahf
fstpt
nop
aam
sub
push
mov
popf
js
pcmpeqb
mov
push
mov
jecxz
jns
push
addr16
or
mov
sub
push
pop
inc
gs
sub
aad
sbb
pop
xor
push
pop
add
mov
lret
fisttps
cld
and
jae
xor
xchg
jg
ret
out
push
dec
and
je
mov
into
daa
into
jmp
lods
xor
shll
mov
outsl
push
sbb
sbb
into
out
sbb
or
ja
mov
xorl
imul
and
les
adc
jmp
push
mov
fs
stos
add
aas
inc
jle
ret
es
xchg
popa
or
adc
cmp
je
mov
xchg
sbb
mov
lret
push
sub
and
cmp
adc
aad
fbstp
jo
or
pop
cmp
arpl
jns
adc
mov
testb
out
loopne
pop
cwtl
mov
pop
xlat
gs
or
ljmp
inc
mov
gs
lds
pop
or
les
dec
pushf
dec
mov
pop
adc
adc
inc
aaa
push
sti
mov
or
daa
lds
loope
leave
leave
mov
ja
aam
loopne
jmp
das
sti
inc
mov
dec
sub
test
sahf
test
cld
andl
push
xor
lds
sbb
lahf
add
cmp
or
fwait
cmpb
popf
xor
adc
dec
pop
nop
inc
inc
lcall
jmp
je
xor
or
jl
adc
fucomi
aaa
stos
rcll
test
outsl
fbstp
out
pop
mov
push
es
lret
lahf
xchg
out
test
sub
jo
fisttpl
movsb
push
out
jb
dec
repnz
push
pop
outsb
mov
mov
inc
dec
jmp
fcomi
cmc
into
push
stos
out
jno
test
mov
or
pop
lds
inc
int
mov
inc
ror
cmpsl
pop
mov
dec
out
sbb
mov
xor
ficoml
fidivl
pop
xor
sbb
jnp
adc
pop
cwtl
adc
or
sahf
orl
mov
jb
in
cmp
shll
cmp
sub
loop
cld
jns
jo
sub
jg
leave
sbb
xor
sub
mov
cwtl
inc
push
repnz
cmp
add
addr16
xchg
test
pop
xor
jo
loope
rep
add
aam
dec
dec
push
inc
out
adc
pop
xor
add
loop
repz
or
add
out
mov
jmp
pop
cmpsb
xchg
scas
mov
mov
insb
rolb
adc
push
inc
xchg
loopne
in
mov
lock
outsb
adcb
insl
stc
mov
les
jl
xchg
loopne
leave
push
ja
lock
icebp
pop
arpl
stos
xlat
cmp
and
sbb
push
incl
jns
sub
frstor
repz
loop
add
test
xchg
test
adc
shrl
dec
sbb
jns
fbld
js
push
and
lcall
cmp
mov
std
aaa
fsubrs
addr16
mov
rcll
in
test
mov
mov
lods
shl
fwait
mov
pop
xchg
popa
addr16
jge
xor
call
dec
xchg
pop
jg
jns
pop
mov
cmp
in
in
andb
fisttpll
mov
scas
inc
rorb
enter
xchg
pop
xor
xor
sbb
shr
enter
mov
xchg
sbb
xorl
negb
xor
daa
fildll
xor
dec
stc
dec
dec
sub
in
bound
jp
hlt
in
lods
outsl
aad
std
push
cli
loop
aam
cmp
out
sbb
xchg
mov
lock
or
dec
loopew
imul
pop
cli
xchg
push
decb
fists
jl
movl
mov
out
or
xchg
sahf
call
addb
mov
test
loopne
inc
cmp
stos
jl
and
and
mov
or
pop
imul
cmc
mov
in
sbb
fidivrl
loopne
mov
out
mov
rcrb
ljmp
aaa
rcll
add
mov
ja
or
in
rolb
popa
test
mov
sarb
scas
cmpsl
aas
xchg
mov
cmpsb
jns
enter
es
aaa
push
loop
mov
or
out
mov
icebp
loope
jns
pop
pop
xchg
in
lds
jb
pop
pop
cmp
adc
pop
lods
lret
sbb
jns
gs
adc
cmpsb
sar
orl
and
in
shl
ljmp
mov
mov
femms
cld
jg
ljmp
hlt
das
shr
fsubrs
repz
cmp
xor
mov
test
add
dec
cmp
dec
mov
or
pop
mov
cmpsl
dec
xor
pushf
loope
outsl
popa
out
pusha
daa
arpl
pop
pop
stos
cmp
insb
rcl
cmp
adc
xorl
es
sbb
push
add
xor
nop
mov
ret
test
mov
pushf
fsub
dec
push
ficoms
push
aas
int3
leave
imul
lcall
dec
mov
sbb
xchg
sbb
xchg
rol
fldpi
imul
sub
inc
and
mov
pop
mov
aad
cwtl
cli
call
pop
push
xor
ja
clc
pop
inc
and
test
jo
xor
pop
dec
push
adc
xchg
push
sbb
mov
and
cmp
or
out
leave
imul
sahf
les
push
mov
popa
pop
repnz
jns
or
sub
inc
sbb
in
sbb
xor
aam
sbb
mov
sbb
ljmp
rol
cli
mov
xchg
xor
in
out
xchg
or
dec
xchg
pop
mov
mov
pop
xor
fdivp
fnsave
in
mov
into
mov
fsubp
dec
aam
stc
mov
jae
mov
rclb
ficoml
add
mul
cmp
dec
inc
mov
mov
add
add
mov
je
in
stc
xchg
fldenv
fsubr
cmp
push
xchg
push
in
les
mov
mov
fstpt
mov
push
rorb
lret
adc
cmp
sub
cmp
ja
jnp
and
xor
push
subb
pop
fisubrs
adc
inc
into
sbb
ret
xlat
mov
pushf
xor
pop
or
test
outsb
pop
jb
inc
and
pushf
lods
jno
lret
xor
leave
inc
mov
cli
jmp
outsl
cwtl
je,pn
xchg
cltd
pop
insb
sub
sarb
shlb
sbb
pop
and
leave
mov
mov
jns
pop
int
nop
add
aad
sbb
jo
or
jmp
push
lret
loopne
push
dec
dec
fwait
jg
in
mov
lds
cmpb
dec
adc
mov
lds
cwtl
or
mov
cmp
mov
popa
das
or
test
push
out
sbb
mov
mov
enter
hlt
fldenv
xor
andl
movsl
add
int
dec
inc
xlat
std
test
nop
ss
daa
sahf
outsl
movsl
stos
rcll
xchg
mov
insl
roll
xor
subb
sub
xor
sbb
out
sbb
jmp
dec
xor
dec
std
negl
ret
sbbb
xchg
and
push
aaa
int
jle
sbb
ss
rcrl
xlat
dec
les
sub
lods
cmpsl
mov
or
icebp
xchg
sbb
rcrl
dec
sti
call
scas
push
xchg
add
vmovsd
add
push
mov
ss
mov
add
pop
insb
jb
add
jnp
fnstsw
dec
adc
adc
insb
lret
push
adc
cli
hlt
dec
lds
loope,pt
adc
mov
cmp
orb
push
xor
leave
and
out
mov
icebp
lea
cmp
pusha
cmovs
imul
mov
cmp
lods
shlb
dec
sub
insl
roll
jl
or
mov
test
mov
mov
lds
jmp
push
imul
mov
int
mov
into
cmp
push
push
add
inc
nop
jno
in
push
cs
xlat
es
iret
push
push
test
pop
adc
or
and
nop
ja
mov
shl
and
jg
popf
movsl
dec
fmulp
lock
mov
xchg
mov
push
sbb
in
push
jg
mov
lahf
daa
lods
push
or
vmread
push
shll
cwtl
pop
movsl
fdivrs
mov
add
push
in
rclb
push
lds
sub
mov
adc
xchg
push
jo
lret
adc
push
sti
repz
and
xchg
xlat
movsl
cmp
scas
orl
rolb
std
or
adcb
mov
add
push
or
aad
jl
stos
out
ja
dec
ss
and
xchg
enter
pop
mov
mov
dec
icebp
inc
movsl
push
add
xchg
pop
mov
xchg
dec
or
bound
mov
aaa
sub
push
xor
pop
ror
mov
movsl
data16
sar
lahf
adc
out
add
push
rcrl
pop
adcb
scas
mov
imul
lret
or
shrl
dec
adc
rorb
cmp
dec
jmp
cmp
pop
imul
mov
adc
sub
cmp
mov
pop
in
add
dec
shlb
inc
adc
lds
xorl
jae
sbb
jp
xor
inc
int3
dec
bound
test
mov
iret
mov
mov
ficomps
sysenter
sub
or
adc
les
sub
jp
outsl
dec
outsl
sbb
aad
xor
adc
xor
in
mov
pop
loop
je
shrl
nop
test
sbb
test
insb
push
cmp
cmp
push
mov
xchg
xor
call
clc
jl
cld
pushf
pop
sti
test
shrl
test
mul
xchg
mov
cmp
aad
les
xchg
cli
cmpsl
orb
xchg
mov
xchg
jns
adc
scas
sub
sbb
clc
sub
cmp
mov
push
add
aaa
adc
cmpsb
pop
cmpsl
ret
dec
js
sub
lock
cltd
lock
ret
lahf
sbb
shl
mov
mov
inc
std
hlt
sbb
xchg
push
mov
pusha
out
jbe
adc
sub
lods
pop
sarb
xchg
outsl
enter
test
sub
dec
ss
add
xor
jne
es
adcl
hlt
stc
popa
xchg
scas
cmpsl
add
fsubs
fs
scas
dec
cmp
mov
mov
sub
iret
pop
mov
pop
sbb
inc
adc
dec
popa
loopne
fidivs
mov
and
loopne
push
scas
sbb
add
dec
push
add
in
xchg
stmxcsr
or
pop
sub
mov
subl
dec
add
or
insl
sbb
dec
adc
test
addr16
outsb
or
cltd
lret
sub
dec
movsb
daa
lcall
pushf
fcomps
pop
fildl
pop
je
js
cld
push
xor
jae
push
pop
in
aad
test
test
push
mov
dec
pop
rol
popa
jge
cmp
sbbb
xchg
add
fsubl
xchg
jbe
or
arpl
jno
cs
push
rcrl
insb
adc
outsl
fmuls
jbe
sarl
cmp
sub
or
dec
jbe
or
inc
pop
adc
add
jb
repnz
shlb
imul
fs
adc
ficomps
sarl
jo
addr16
movsb
out
mov
sbb
shll
mov
adc
add
imul
in
addr16
inc
enter
dec
jno
hlt
cmc
dec
jecxz
xchg
xlat
adc
js
cmpsl
jo
push
cmpsl
cmp
enter
inc
jae
aad
mov
outsl
ret
iret
mov
rcrb
popa
out
pop
push
lock
divb
hlt
adc
insl
cltd
add
mov
subl
xchg
loopne
jp
fmul
stos
js
mov
stos
jg
push
sbb
int
clc
icebp
pop
mov
jg
pop
clc
inc
mov
cmp
rcrb
jg
or
adc
sti
es
movsb
out
dec
or
repnz
in
mov
xacquire
xorl
or
cld
insl
outsb
ret
push
insl
mov
mov
nop
cmp
in
xchg
pop
ss
iret
ja
mov
arpl
mov
jns
sti
sahf
fsubp
aaa
ud0
test
fnstenv
es
jle
pop
inc
xor
in
push
test
cmpsl
jp
mov
xor
cmc
test
inc
xchg
outsl
sub
push
mov
push
jl
inc
pop
mov
dec
clc
in
jmp
insb
inc
lods
in
jne
push
cmp
or
daa
shlb
xchg
add
adc
lret
call
cltd
into
xor
ja
jge
inc
pop
pop
mov
inc
xchg
gs
loope
loope
inc
add
test
mov
aas
mov
lret
dec
and
es
push
xchg
pop
or
lret
xchg
pop
and
adc
scas
iret
ss
adc
jb
int
and
leave
pop
lock
jmp
pop
push
mov
rcrb
or
mov
mov
in
cmp
xlat
in
fnstsw
test
sub
mov
xor
push
aas
outsl
lahf
outsl
jecxz
std
pop
insl
push
sbb
in
stos
xor
mov
icebp
sub
int
fmul
and
dec
adc
out
mov
lcall
shlb
nop
push
dec
std
out
clc
scas
dec
nop
popf
out
int
xlat
scas
dec
mov
xchg
mov
shl
jmp
sub
cs
xor
mov
pop
cmp
and
dec
movsl
xor
jae
negb
in
ds
lahf
mov
xor
movsl
cmc
negl
mov
lahf
data16
add
test
push
scas
add
push
call
shrb
pusha
js
je
or
xchg
sbb
inc
mov
adcl
add
sbb
fldt
es
inc
aaa
repnz
outsl
sub
jno
faddl
pop
xorb
dec
sub
push
inc
addr16
dec
aaa
sbb
lret
in
push
xor
repz
in
test
sub
or
mov
push
push
pop
test
loop
mov
mov
cmpsl
and
mov
imul
movsl
adc
xlat
adc
cmp
insb
dec
pop
je
xor
sbb
cmp
popf
or
sbb
cs
idivb
mov
pop
iret
pop
mov
dec
xchg
addr16
sbb
sub
fstpt
push
jae
fsts
xor
push
push
or
icebp
rcl
adc
ja
push
adc
or
adc
push
mov
lock
jmp
push
add
xlat
mov
push
loop
cmp
cmpl
cli
cmp
ficompl
sbb
xchg
pop
push
push
cmp
or
jno
cmp
jno
inc
adc
stos
pop
lock
insl
in
mov
outsb
jge
mov
mov
lcall
push
or
mov
mov
inc
and
adc
inc
scas
ljmp
cli
cmpsl
sub
sbb
es
sub
add
xchg
cmp
xchg
cmc
add
and
loop
dec
mov
sbb
inc
jnp
xchg
and
lcall
push
sbb
add
ds
fsts
push
test
xorl
mov
nop
mov
pusha
mov
inc
rcl
inc
mov
addr16
movsb
addr16
jno
push
out
mov
neg
push
sbb
jbe
jmp
sub
ja
push
sub
inc
popa
mov
inc
mov
cwtl
cmp
data16
pop
xchg
out
in
lea
or
jg
bound
mov
into
stos
pop
ret
cmp
mov
adc
dec
jle
or
addl
xor
repnz
push
xlat
add
scas
iret
lcall
call
lahf
cs
pop
aam
in
or
fwait
lods
jmp
test
and
push
mov
jle
mov
push
mov
pop
mov
push
ja
mov
mov
leave
xchg
lock
xchg
outsb
adc
loop
sar
stos
mov
cmpsb
mov
add
inc
addr16
cli
js
imul
inc
popa
xor
shrb
addl
mov
push
pop
cmpsl
fmull
inc
scas
mov
mov
sbb
test
inc
sti
sti
rclb
or
aam
push
adc
pusha
dec
sbb
cltd
push
ficoms
ds
loopne
dec
xor
out
dec
cmp
add
adc
bound
push
jne
add
sbb
xor
call
xchg
lods
ja
pop
mov
lds
adc
popa
or
inc
fs
enter
and
sarl
mov
sbbb
hlt
in
outsl
cmpsl
inc
inc
and
iret
pop
jl
fdecstp
xor
test
daa
out
lret
xchg
in
das
jno
add
jne
mov
lock
xchg
sbb
testl
dec
outsl
cwtl
pop
dec
fdivrl
xchg
push
jnp
enter
int
addr16
push
popf
jnp
jge
fcomps
enter
xor
or
fwait
js
sub
dec
outsl
and
adc
addb
or
push
scas
pop
sub
and
cld
pop
pushf
shr
stos
xchg
sbb
mov
jge
aad
adc
cli
xchg
and
fs
sarb
inc
sbb
push
mov
jbe
inc
popf
dec
inc
rclb
es
mov
pop
addr16
xor
popl
clc
push
cld
sbb
fldenv
jp
mov
xchg
pop
shr
pop
cli
fistps
xor
ljmp
mov
add
jle
movl
jecxz
add
ret
jl
ret
mov
hlt
inc
sbb
aas
js
shlb
add
xor
mov
ss
cmp
add
sub
push
mov
cmp
and
jo
rolb
adc
xor
scas
xor
mov
sbb
sub
mov
and
add
sbb
out
pcmpeqw
mov
movsl
sub
jae
stos
ret
push
call
fwait
popa
ss
stos
hlt
jo
ljmp
cmpl
fstpl
popa
jns
fcmovnu
xchg
fsubl
add
pop
mov
scas
or
movb
mov
pop
adc
xor
movsb
xor
mov
repnz
or
in
mov
and
dec
andl
jns
fdivl
cwtl
dec
fnstcw
andl
sub
lock
mov
add
sub
test
jnp
push
addr16
lahf
mov
sahf
into
stos
xor
leave
cmpsb
jmp
or
in
jbe
sub
leave
lock
xchg
repnz
out
inc
loop
ffreep
jbe
ret
out
js
add
xchg
outsl
adc
negl
cmpsb
cmp
sahf
jno
mov
cmp
jne
fcomp
scas
pop
jl
dec
xchg
mov
jns
sarb
mov
sarl
xchg
mov
push
loop
aaa
pop
call
and
jae
jge
in
jns
jp
insb
mov
sub
cmp
push
xchg
in
mov
cltd
pop
pop
lods
sahf
rorb
add
inc
adc
add
pushf
xchg
jns
stc
mov
push
mov
pushf
fildll
addb
cmpb
inc
push
jnp
cmpsb
pop
out
mov
sarl
iret
push
mov
and
sub
lahf
pop
mov
das
stc
add
sub
mov
and
dec
adc
je
xchg
fildl
aas
push
cmp
mov
xor
imul
cmc
jmp
xchg
pop
mov
push
inc
sar
in
cs
daa
cmp
adc
aam
jns
mov
jb
push
call
xrelease
jg
inc
push
cli
xor
mov
and
inc
cmpsb
jle
push
mov
sbb
clc
push
test
jge
icebp
lods
adcl
das
mov
cli
xchg
add
adc
subb
outsb
xor
pop
fisubl
divb
push
lods
push
sbb
iret
fmul
add
mov
cwtl
sub
nop
pusha
mov
pushf
jns
pop
fiaddl
test
push
movsb
sub
mov
add
cmpsb
aam
ffree
cmp
pushf
adc
imul
add
imul
jle
rcrb
push
add
add
and
int3
int3
sti
pop
pop
repnz
inc
add
lods
inc
mov
scas
in
adc
jg
add
and
out
aaa
sub
shrb
push
stos
repz
inc
lret
jle
outsl
mov
push
orl
push
push
leave
jmp
xorl
into
aaa
in
adc
fsubrs
push
insb
in
ficompl
xor
pop
scas
mov
xchg
sub
and
inc
daa
jo
xchg
test
xchg
sub
mov
or
jo
xor
das
adc
mov
mov
cmp
ds
and
sub
imul
xchg
and
cmc
xchg
mov
jge
js
sub
add
xchg
mov
cld
leave
insb
pop
jmp
xor
adc
into
sbb
pusha
adc
cmp
adc
fsubrp
pop
iret
add
sbb
mov
sbb
cmp
add
lods
xor
adc
scas
adc
mov
test
lods
pop
or
nop
test
ffreep
sarl
mov
setbe
repz
mov
fs
cmp
imul
ljmp
mov
dec
cmp
jnp
jno
jmp
test
jo
xor
sub
inc
push
push
mov
out
rcpps
jecxz
outsl
add
int3
into
insl
lcallw
jnp
arpl
add
loope
dec
mov
sbb
sub
and
stc
pop
jo
and
jmp
adc
int3
ja
out
mov
xchg
out
dec
movsb
inc
sub
dec
aad
popf
stos
xchg
aad
mov
inc
stc
pop
cmp
imul
aas
inc
int
mov
pop
imul
icebp
insl
jmp
push
inc
xor
sub
clflush
flds
pop
dec
addr16
pushl
xchg
popa
lret
movsl
add
pop
in
pop
test
dec
mov
cmpsl
movsl
in
xchg
push
outsl
and
mov
scas
mov
aaa
in
loope
dec
scas
out
mov
leave
mov
lock
jo
mov
ret
pop
mov
in
jecxz
insl
mov
dec
or
fsubr
popf
mov
aad
push
jp
sahf
lea
push
arpl
cmc
xchg
cltd
or
mov
push
xchg
jp
xor
loope
movsb
jbe
lods
pop
xchg
mov
fnstcw
incb
out
shrl
bound
xchg
ja
pop
je
inc
repnz
cld
mov
daa
jl
mov
adc
ret
sub
fistpl
es
imul
push
sub
jmp
sub
xor
je
push
jle
sbb
add
addr16
pop
insb
aam
mov
jmp
inc
xchg
push
jp
sub
mov
popf
add
repz
pop
inc
int
sub
or
push
inc
dec
mov
cmp
inc
add
cmovg
movsl
jp
in
sbb
xchg
fisubs
int
pop
cmp
rolb
subb
enter
clc
dec
idivw
ret
and
xor
or
mov
shll
or
cmp
dec
fstl
rorb
lods
lcall
sub
mov
sahf
sub
out
test
jecxz
aam
push
loope
sub
cltd
pop
xchg
cld
add
daa
lock
jp
dec
js
push
sub
ljmp
sbb
dec
and
subl
pop
idivb
pop
add
aad
sarb
ret
jl
and
and
das
mov
ficoml
push
dec
and
arpl
popf
icebp
fidivl
cmp
rorl
add
pushw
scas
out
and
push
lahf
enter
add
push
adc
insl
ret
dec
add
pop
and
adc
push
addr16
js
sqrtps
ffree
and
add
int
adc
mov
mov
stc
inc
mov
mov
fmul
cmp
xor
mov
loopne
lret
aad
sbb
pusha
aaa
sti
in
push
jbe
out
xchg
cmc
jge
pop
cmc
sbb
push
divb
xor
dec
sbb
cli
pop
orb
add
cmp
movsl
js
add
and
and
ja,pt
ficoml
push
push
cmp
ficomps
rol
iret
cli
pop
jecxz
adc
popa
and
xchg
loop
add
movsb
icebp
in
shrb
pop
mov
icebp
in
ret
push
ss
mov
or
sub
sbb
pop
jmp
jg
test
mov
inc
lods
lods
adc
cmp
xchg
xor
daa
test
nop
cs
jne
enter
mov
pop
mov
fsubrp
inc
cld
repz
in
cmc
repnz
xor
dec
and
icebp
xchg
mov
mov
dec
or
pushl
xchg
push
adc
sub
sub
stos
mov
inc
aaa
data16
jge
xor
inc
inc
out
or
jb
test
jl
jg
in
mov
mov
sub
inc
ja
and
inc
out
repz
lahf
aas
jae
mov
pop
les
fildll
sub
jns
lret
rorb
pop
cs
xor
adc
dec
push
pop
sbb
xchg
and
fwait
aam
adc
jns
mov
dec
das
cmp
cmpb
ret
cmp
sub
mov
pop
arpl
jge
sub
das
adc
popa
lret
out
leave
movsl
int
cmp
sarl
jb
or
stos
push
sbb
fmuls
inc
mov
dec
sub
dec
push
push
cmpsb
test
xor
dec
sar
aam
addb
nop
adc
inc
xor
pushf
nop
mov
fcomp
jp
aaa
push
xchg
pop
mov
mov
inc
lds
shrl
and
mov
scas
mov
add
xlat
cmpsb
push
je
and
sub
ror
pop
outsb
mov
sbb
jo
jmp
sub
inc
add
lods
jno
iret
outsb
in
adc
int3
sub
mov
cmc
inc
and
jb
pop
pop
mov
addl
fnstsw
sbb
pop
jmp
jl
decb
imul
and
pop
inc
push
mov
test
stos
pop
adc
cmp
xchg
cmp
mov
mov
adc
xor
insl
lods
add
les
jg
mov
pushf
cmpsb
loopne
mov
cld
and
cld
movsb
loope
push
mov
or
int3
push
jge
xchg
jae
cld
sbb
adc
ss
xchg
loopne
mov
mov
push
push
std
xchg
mov
jmp
jae
and
mov
jge
popa
hlt
cmp
enter
popf
sbb
push
sub
mov
push
mov
js
mov
dec
icebp
add
jne
nop
in
fisttps
push
repnz
out
inc
lods
call
mov
sti
andb
aas
dec
out
scas
push
or
mov
enter
push
mov
jnp
jmp
xchg
or
mov
push
shl
pusha
add
mulb
lcall
push
sub
xor
add
jae
and
mov
xchg
es
lock
xchg
andb
loop
mov
in
aam
fwait
icebp
call
xor
jae,pt
movsl
sbb
inc
push
jnp
fisttps
outsl
cs
dec
insl
sbb
lods
cmpsb
dec
mov
pop
je
cmp
fldenv
cmpsl
pop
rorl
add
ret
call
or
cmp
push
dec
out
xchg
ljmp
bound
lock
call
pop
repnz
les
into
push
pop
mov
in
sub
pop
cwtl
adc
icebp
scas
mov
sub
or
lock
dec
fsubrl
ljmp
daa
mov
and
test
cmp
imul
js
js
xchg
ficoml
loopne
cs
mov
inc
or
adc
adc
push
dec
dec
pop
lods
push
push
js
lods
fsubl
xchg
push
imul
inc
dec
out
cmp
jno
cmp
sbb
and
lahf
mov
jnp
pop
loopne
dec
xchg
cli
lahf
ds
lea
imul
push
daa
pop
inc
mov
addb
adc
inc
repnz
add
xchg
inc
or
movb
inc
sub
pop
sub
inc
in
dec
pushf
imul
shlb
stc
rcl
mov
leave
xchg
repnz
sub
arpl
dec
int3
mov
dec
mov
lds
lahf
jmp
add
cmp
cld
mov
test
sub
xchg
inc
mov
fidivrl
bound
ja
jo
push
push
std
or
pop
jp
push
xor
jns
ror
daa
inc
lcall
jl
nop
fnstsw
jge
mov
jge
or
ja
cmp
sti
push
outsl
sbb
push
mov
mov
popf
call
mov
cs
ds
ljmp
sub
inc
cmp
or
mull
adc
call
test
or
das
dec
jp
repz
mov
pop
out
out
xor
and
int
and
jmp
lods
mov
xlat
mov
enter
cwtl
inc
addr16
lock
xchg
test
push
xchg
cmpsl
daa
scas
adc
gs
jg
imul
aad
faddl
mov
inc
inc
rcl
mov
sbb
notl
aad
or
xchg
adc
gs
mov
pop
idivl
and
inc
fldt
repz
lock
js
lea
test
int
cmp
jmp
out
mov
hlt
dec
ljmp
or
push
xchg
adc
test
mov
jno
cmp
arpl
mov
xchg
dec
mov
mov
in
pop
lea
mov
out
inc
jecxz
ja
popa
push
xchg
stos
pop
addr16
xchg
push
or
in
repnz
mov
fildl
push
or
cs
sbb
xchg
mov
jnp
inc
aas
xchg
scas
enter
icebp
in
fistl
or
push
adc
mov
lret
out
adc
sub
inc
out
ljmp
cmpsb
xchg
shl
jns
icebp
int3
fbld
inc
sub
pushf
push
mov
xor
or
fisttps
pop
xchg
test
add
adc
cltd
mov
les
cmp
jne
jb
lds
adc
jnp
or
in
jne
bound
push
mov
jp
mov
stc
pop
inc
jns
or
xchg
repnz
rcll
inc
cmp
xchg
and
inc
pop
add
inc
or
fs
inc
xchg
js
adc
fidivrl
pop
bound
pop
add
repz
xchg
mov
into
mov
ljmp
iret
mov
aam
push
in
cmp
in
repz
sub
xchg
rorl
dec
pop
mov
mov
inc
mov
pop
xor
mov
test
cmp
call
add
mov
les
jle
repz
mov
pop
adc
xchg
leave
pop
lods
pop
push
in
jp
inc
int
in
mov
sub
leave
test
insl
mov
pusha
xor
xchg
ljmp
repz
push
js
add
cwtl
mov
lea
push
cmp
sahf
dec
xor
stos
adcb
push
cltd
xchg
ds
pop
xor
dec
lahf
sub
jge
shll
cmp
clc
mov
out
in
sub
in
xchg
mov
je
loope
out
shl
mov
rorb
push
inc
sub
mov
rclb
cld
stos
xor
in
fbstp
popa
dec
outsl
repnz
push
ret
out
ja
call
jecxz
sub
mov
imul
adc
jo
push
test
subl
imul
lds
dec
ss
rcll
data16
sbb
mov
out
inc
cmp
pop
loopne
inc
fsubrl
mov
mov
ljmp
xchg
gs
push
jle
xchg
add
sarl
lcall
cmp
jno
cld
mov
mov
fs
in
call
outsl
dec
cld
push
rcll
dec
cmpsl
xchg
sti
cwtl
jp
imulb
mov
cmp
and
les
push
test
sub
and
pop
cltd
aam
sbb
scas
int
or
cwtl
xchg
pop
in
imul
jb
sbb
andb
mov
aam
push
out
or
sub
decl
mov
xchg
mov
cmp
push
push
insl
adc
pop
xchg
and
jbe
test
sub
jle
dec
mov
add
mov
cmp
dec
xor
int
pop
mov
inc
cmp
sahf
push
xor
jge
popa
sub
iret
enter
out
jae
andl
dec
stc
in
mov
mov
mov
push
repz
cli
jnp
sbb
push
cli
ljmp
push
or
or
sbb
int
outsb
mov
adc
add
jg
jne
push
jl
ja
mov
jno
mov
ljmp
fsubrl
pop
fdivs
push
jbe
jp
and
mov
xor
sub
stos
lret
xchg
int3
jns
jo
jp
ret
ret
div
gs
shrl
mov
jb
mov
adc
sub
in
js
imul
sub
loope
xchg
lret
icebp
lret
bound
xor
sub
push
pop
das
into
pop
nop
lods
sub
xchg
mov
outsb
lea
inc
push
push
xchg
outsb
ljmp
mov
in
sub
outsl
iret
adc
imull
aaa
scas
sub
pop
jp
inc
mov
mov
fwait
mov
hlt
les
jbe
push
cs
sub
xor
inc
adc
sub
jno
mov
xchg
imul
or
sbb
in
pushf
xor
mov
jecxz
lock
ret
lea
inc
cmp
fcmovbe
pop
cmpsb
dec
sbb
cltd
inc
mov
push
insl
movsl
and
xor
scas
mov
jo
sti
in
roll
stos
add
push
add
push
call
xchg
jmp
jbe
mov
inc
mov
popa
les
lock
popf
gs
bound
cmp
mov
lahf
push
mov
dec
outsb
inc
loope
out
lcall
loop
sub
mov
dec
test
in
xchg
mov
dec
std
sub
cli
push
shll
push
or
cmp
ud2
insl
rolb
jnp
sub
movsb
push
aaa
push
mov
mov
popf
shll
pop
adc
je
shll
sbb
mov
add
sbb
xor
xorl
out
ljmp
pop
daa
mov
jmp
sti
fwait
push
sbb
mov
hlt
push
sub
ja
aam
fadds
mov
pop
hlt
nop
inc
dec
iret
dec
cmp
xchg
jl
lock
les
push
outsb
repz
enter
stos
loop
dec
das
sub
in
addr16
std
fbstp
lea
outsl
mov
out
inc
pop
mov
adc
push
sbbl
mov
or
mov
ret
repz
sub
mov
mov
push
cmc
xchg
sbb
orb
out
mov
ljmp
xchg
jae
cld
idivl
or
cld
xchg
cmp
js
mov
call
mov
add
mov
mov
movsl
sbb
sub
fdivrs
push
stos
sarb
in
jecxz
lods
sahf
call
jp
fistps
mov
into
dec
cli
pop
scas
push
out
adc
pushf
push
scas
dec
call
int
mov
decl
push
fwait
imul
dec
xor
sub
test
add
inc
and
lods
xchg
dec
pusha
call
mov
cwtl
sub
clc
daa
ffreep
mov
jns
push
cmpb
dec
adc
fiaddl
jmp
push
cmp
in
mov
addr16
lret
inc
dec
loopne
dec
mov
push
adc
lock
in
jg
icebp
sbb
out
mov
push
js
sarl
loop
xor
sbb
pusha
or
adc
fdivl
pusha
test
das
stos
leave
mov
or
or
sub
mov
xchg
iret
sbb
imul
das
shr
cli
push
pop
lock
stos
repnz
aad
xor
dec
push
fisubs
xor
lcall
mov
cmpsl
fistpll
xchg
cwtl
fidivrl
outsb
xlat
pop
pusha
aas
out
scas
outsl
les
mov
sub
mov
pop
jno
mov
mov
ss
inc
xchg
outsb
mov
imul
sbb
int
jb
lahf
xchg
sub
xchg
sub
pop
mov
and
lods
add
add
dec
mov
mov
jb
or
es
mov
adc
loop
mov
adc
lock
add
insl
test
push
insb
arpl
or
scas
dec
sbb
push
lcall
out
and
into
popf
inc
data16
mov
popa
aaa
add
mul
cmp
sbb
adc
out
sub
pusha
adc
or
pop
pop
fnsave
xor
push
xlat
pop
xor
xchg
jno
bswap
pop
jbe
xor
dec
pushf
adc
add
inc
lret
stos
faddp
jle
xchg
int3
loope
cmp
lcall
pop
jl
pop
inc
mov
fiaddl
in
ja
and
je
fabs
jae
sbb
xchg
mov
push
enter
mov
push
in
and
aaa
nop
mov
dec
xchg
out
stos
scas
xorb
rcrb
jae
ljmp
mov
sbb
mov
mov
stos
mov
and
xchg
inc
std
jge
in
cmp
mov
loopne
bound
out
pop
fsubrl
dec
pop
xor
jae
mov
repnz
pop
mov
call
adc
sub
mov
push
jns
pop
icebp
xchg
stc
arpl
std
cmc
lock
lahf
aas
dec
jne
out
dec
faddl
sarb
cmp
xchg
arpl
jmp
mov
imul
into
push
jae
xor
sub
add
mov
sbb
xor
bound
test
lret
cwtl
pushf
add
stos
mov
push
shlb
test
mov
in
adc
into
dec
dec
cltd
sbb
mov
negl
in
mov
and
xor
jmp
loope
pusha
popf
push
lds
cmp
les
cmp
mov
mov
lea
xor
jl
and
mov
push
xlat
call
scas
ljmp
push
fwait
test
mov
addr16
and
cs
xchg
clc
sbb
sti
lea
aad
sbb
dec
fcoml
clc
test
pushf
jg
mov
inc
xchg
adc
push
ret
out
in
mov
mov
jbe
sbb
loope
rcrb
sbb
mov
push
in
lea
clc
sub
fisubrl
xchg
inc
lret
xchg
clc
call
xor
cmp
xor
xchg
sbb
das
andl
pop
movsl
pop
test
pop
nop
clc
cmp
mov
mov
and
xchg
cmpsl
mov
pop
push
inc
sbb
nop
int3
or
pop
jns
imul
push
das
add
xchg
push
and
mov
flds
imul
push
mov
rolb
dec
push
movsl
sti
fs
and
inc
mov
or
sbb
fwait
jae
out
jae
movl
in
mov
rcll
push
icebp
inc
adc
xor
andb
hlt
adc
gs
jp
ret
add
sbbl
andb
aam
cmp
xchg
mov
aam
negl
scas
sub
cs
add
loop
roll
sti
and
in
lcall
es
and
stos
jbe
push
pusha
addl
push
push
ret
scas
dec
push
xor
or
bnd
and
xchg
xchg
or
mov
inc
push
adc
mov
add
data16
cltd
leave
sub
into
push
jecxz
rol
mov
sarb
xor
imul
outsb
cs
cld
push
inc
inc
jl
mov
repnz
mov
test
jecxz
popl
mov
pushf
vmread
lods
scas
jne
sti
mov
bound
shl
mov
fs
arpl
out
leave
add
mov
cmp
adc
arpl
or
add
out
cmp
not
and
loopne
lock
mov
fcomps
mov
js
es
jle
sbb
sub
xor
jmp
cmpsb
dec
ret
or
ja
push
jb
fcmovu
leave
js
jno
out
mov
xchg
mov
imulb
rorl
hlt
leave
jle
popf
mov
dec
fs
or
inc
mov
fstpt
lahf
lods
lahf
push
arpl
inc
pop
shrb
enter
fildll
jle
stos
jo
roll
sbb
mov
dec
cwtl
iret
cli
shlb
imul
jg
jb
test
jnp
xor
mov
mov
xchg
int
adc
jae
xor
lea
enter
fstpl
xchg
push
mov
cs
test
dec
xchg
dec
arpl
mov
mov
aad
and
xchg
dec
xchg
dec
or
je
icebp
dec
cmp
ljmp
subl
cltd
jnp
mov
in
enter
xchg
outsb
aam
jne
sbb
xor
imul
dec
js
mov
sbb
and
inc
sarl
loope
push
add
sub
test
jns
push
iret
popf
dec
jg
ret
cmpl
push
jp
jno
jne
in
add
lods
xchg
stos
fcmovb
mov
jmp
xchg
dec
sub
cmp
fs
sub
mov
xchg
push
jmp
movsl
inc
mov
shr
pop
shll
push
mov
mov
mov
fs
sub
push
leave
fidivrs
mov
pop
push
sbb
out
in
pop
mov
les
bound
mov
shr
out
out
xchg
sbb
and
inc
mov
fwait
arpl
jbe
inc
xor
jnp
cmpl
shlb
pop
jne
xchg
popf
sub
jge
clc
dec
mov
aaa
and
out
inc
jmp
nop
loopne
sub
sbb
outsl
in
xor
addr16
fistpll
dec
pop
mov
pop
push
and
imul
repnz
push
outsl
mov
inc
test
cld
mov
or
rorb
xor
push
aam
fisubrs
cs
mov
popa
aaa
pop
xor
test
testb
mov
jns
jbe
mov
mov
lods
mov
stos
stos
sarb
add
flds
cmp
sbb
sbb
xor
fdivrp
mov
hlt
out
xor
stc
cli
push
icebp
sti
call
adc
gs
lret
mov
loopne
repz
std
adc
push
lods
ret
rcrb
clc
mov
jp
call
lret
es
pusha
push
mov
push
fistpl
push
movsl
mov
lcall
push
lea
fs
shrl
push
loope
add
dec
int
mov
loopne
pop
mov
mov
arpl
shll
xchg
lret
cmp
inc
pop
fidivrl
shrl
inc
adc
inc
lret
inc
fistpll
jecxz
daa
in
rcl
xchg
mov
rol
fdivs
testl
mov
mov
push
shrb
or
aaa
jae
or
clc
push
das
sarl
test
push
mov
cltd
xchg
jl
xor
xchg
pop
push
jae
ds
imul
pop
push
int3
dec
scas
pop
or
xlat
bound
adc
divl
loopne
dec
jmp
mov
lods
lahf
jb
xor
add
sub
sarb
pusha
iret
int
arpl
xlat
push
std
out
mov
test
push
xchg
cmp
xchg
mov
adc
cmp
je
xor
fs
scas
xor
ja
test
sub
pop
cli
xorl
xor
mov
push
popf
fildll
orl
inc
cmp
in
popa
gs
les
add
rcll
pushl
add
int3
mov
cmc
lahf
mov
ret
jp
stos
fs
addr16
jnp
jb
loop
lock
clc
xchg
push
imul
fistpl
push
adc
addr16
or
inc
mov
xchg
lods
loop
fs
adc
mov
jl
xchg
psubw
ja
jg
push
or
sub
movsb
std
adc
jge
push
in
push
jmp
enter
inc
scas
incb
jae
cmp
aad
xor
insb
into
call
fs
xor
dec
inc
in
cmpsb
and
fs
and
sti
dec
mov
xor
add
lods
fincstp
xchg
fstp
cs
mov
jle
mov
lods
add
adc
mov
fidivrs
mov
negl
pop
push
hlt
ret
push
mov
jmp
cwtl
outsb
and
xchg
add
sub
add
inc
into
int3
arpl
nop
fsubl
push
sbbb
addr16
xorl
xchg
loop
xchg
or
cmpb
arpl
mov
xchg
mov
rcl
inc
adc
std
xor
mov
jge
in
cwtl
sarb
pop
arpl
scas
cmp
idivl
fwait
cmc
lock
sahf
rcl
push
std
jl
loope
mov
jmp
jbe
mov
pop
mov
popf
mov
xchg
push
repnz
outsl
sub
adc
sub
cmpsb
stos
lret
subb
arpl
adc
mov
notl
lahf
jne
xchg
fildl
adc
push
arpl
pop
pop
sbb
out
mov
add
dec
test
sbb
les
jns
fidivrl
je
lret
jle
nop
or
inc
cmpsb
cmp
cmp
shl
clc
push
or
out
adc
xor
mov
adc
push
ja
movsb
ret
or
lock
mov
inc
mov
adc
cmp
scas
jo
pop
inc
dec
sub
sbbl
data16
jnp
dec
sbb
push
push
mov
cltd
mov
mov
shrb
rorb
mov
mov
ds
sub
adc
loopne
push
scas
repz
call
dec
dec
xor
out
dec
popf
mov
push
int
push
mov
xchg
jno
aam
shlb
int
and
out
movsl
dec
adc
or
add
rol
pop
sbb
cmp
int3
jo
loop
fidivrl
out
es
dec
lea
or
sti
inc
push
stos
notb
add
mov
xor
push
pop
icebp
push
mov
mov
cwtl
sarl
mov
sub
std
decb
das
test
shrb
jo
andb
lock
mov
shl
add
lcall
loope
es
bound
hlt
jbe
cmc
int3
and
test
cmpsb
stc
and
mov
sahf
mov
jp
into
rorl
ljmp
lock
stc
rcr
movsl
xchg
dec
jne
push
adcb
daa
adc
leave
lahf
mov
scas
cli
std
push
jnp
ja
xor
fsub
jmp
xchg
mov
icebp
int
cmp
jecxz
popf
int3
loop
pushf
jno
and
mov
cld
add
loop
pop
xor
or
and
mov
pushf
push
loope
lcall
mov
mov
xchg
movsb
setle
cmp
pop
or
mov
in
gs
and
ds
divb
lret
mov
loopne
jp
movb
das
rcll
ret
and
lods
lods
xchg
out
pushf
dec
cmp
adc
rcl
loop
push
and
jns
mov
push
cmpsl
cmp
sti
test
cmp
sub
fbstp
jne
stos
incb
xlat
sbb
cld
inc
or
push
hlt
mov
xchg
fadds
lods
or
pop
rcl
or
jo
pop
pop
jp
pop
lods
sub
aas
scas
xchg
ret
addb
xor
mov
hlt
cmp
lods
pop
pop
repz
iret
mov
ljmp
xchg
push
or
fmulp
mov
add
mov
lret
or
pusha
xchg
je
ss
cmpsb
mov
mov
setbe
addr16
test
mov
push
clc
mov
adc
push
repz
or
sbb
jmp
cli
mov
xchg
fadds
dec
jno
mov
ljmp
imul
test
mov
aam
incb
push
int
mov
fisttps
add
jg
mov
sub
fistl
or
mov
icebp
pop
in
or
cld
jae
lods
dec
lahf
add
jg
rcr
push
in
ret
es
aam
inc
push
aaa
outsl
add
sub
dec
cmp
add
ljmp
jbe
dec
rcll
pop
xchg
mov
daa
mov
fwait
sub
mov
pop
adc
imul
adc
shll
imul
mov
xchg
inc
fistl
aas
or
pop
in
insb
in
lret
jmp
dec
mov
and
push
jno
stos
mov
ja
inc
mov
nop
andb
pop
loope
je
inc
xchg
adc
lock
out
xchg
sbb
ret
imul
cmp
mov
and
ficoml
jno
aas
mov
es
into
in
adc
pushf
in
les
push
repnz
xor
mov
int
mov
fwait
add
jl
add
and
and
imul
cmpsb
rcr
addr16
imul
shl
stos
adc
add
subb
dec
into
lfs
daa
xchg
outsl
stc
jne
fisttpl
hlt
insb
mov
ja
inc
xor
dec
lods
add
lahf
pop
pop
inc
lcall
dec
lods
mov
aas
pop
cmp
sbbb
mov
lds
mov
les
jo
int
jae
sbb
cmp
movsb
lahf
sti
sbb
sub
and
sbb
dec
and
push
or
test
xchg
inc
mov
cltd
inc
mov
fisubs
jmp
leave
fbstp
fimuls
push
mov
add
mov
mov
sar
mov
pushf
ljmp
inc
sbb
in
into
rdpmc
outsl
or
jno
jae
cmp
ret
mov
leave
push
dec
fnsave
jbe
das
inc
adc
fs
mov
leave
mov
mov
and
pop
call
aam
aad
stc
sub
insl
insb
jns
cmpsl
out
and
aad
loop
scas
lret
mov
xchg
in
fistpl
push
aaa
xor
popa
or
xchg
in
xchg
leave
aaa
cmp
cmp
pop
push
pop
hlt
in
jmp
test
movsl
jnp
pop
bnd
cld
in
jg
pop
jmp
mov
adc
cwtl
add
mov
and
ss
push
jg
xor
jl
insl
push
loope
mov
xor
mov
outsl
dec
fsubrl
stos
xchg
pop
les
jne
pop
or
dec
add
in
roll
mov
movsb
adc
mov
sti
add
cmp
dec
rolb
fsubr
lcall
pop
outsb
call
adc
mov
sahf
and
xchg
test
bound
mov
jmp
imull
cld
or
mov
test
mov
inc
push
bound
inc
filds
dec
divl
pinsrw
xor
pop
cmp
popa
jb
or
jbe
test
leave
outsl
jae
fldcw
jle
mov
inc
mov
outsb
adc
lahf
aas
ds
mov
test
cmp
pop
rclb
imul
loope
fwait
xor
cmpsl
mov
leave
inc
lock
jecxz
cmp
mov
movsl
sbb
lds
jb
aas
cwtl
mov
jne
dec
pop
jae
sub
jb
mov
push
hlt
pop
test
inc
xlat
mov
je
in
clc
and
adc
inc
mov
push
in
sub
and
fdivrl
fildl
sub
std
jecxz
push
cmp
sub
push
add
mov
push
push
jmp
inc
push
push
xor
push
jb
sub
loope
xchg
or
call
or
cmc
push
cwtl
rcrb
dec
pop
test
adc
lahf
seta
and
test
xchg
inc
lret
cmp
push
xor
in
stc
in
adc
jle
icebp
mov
sbb
sub
push
stc
cli
push
cmc
ret
cltd
adc
lahf
gs
sub
popf
ds
hlt
mov
jns
cmpsb
push
popa
aam
shlb
xor
pop
insl
push
jo
push
cmc
popf
and
dec
cmp
pop
nop
pop
sti
popf
les
jp
xchg
pop
add
ret
sub
movsl
imul
mov
adcl
es
lock
add
gs
or
xchg
mov
cli
mov
push
loopne
addl
adc
ficoml
or
push
cli
and
jmp
pusha
xor
imul
inc
insl
fwait
jmp
sarl
dec
hlt
imul
shll
imulb
xor
add
push
sti
jne
pushf
nop
loop
ffree
out
dec
ret
in
push
les
outsb
es
dec
test
add
test
arpl
rclb
push
jecxz
xchg
clc
add
xchg
mov
xor
mov
push
loopne
incl
rcrb
idivb
mov
aas
push
xchg
aad
xchg
mov
ss
loope
lds
popf
push
pop
mov
leave
jmp
mov
xor
std
mov
pop
cmp
loopne
adc
mov
add
stos
sub
std
cmp
sbb
or
xchg
gs
loop
inc
push
ret
repnz
push
xor
rorb
mov
test
dec
mov
cltd
aam
imul
fcoms
pop
jmp
sbb
and
sbbl
mov
inc
test
lock
in
dec
xor
sub
enter
cmp
aas
pop
or
and
pop
std
out
sahf
sub
mov
popf
popf
sbb
rorb
inc
loopne
jne
aas
mov
sub
jmp
es
xchg
std
out
dec
sbb
xchg
mov
jns
pop
or
stc
and
add
in
shrb
mov
out
inc
ret
lea
dec
scas
add
lea
or
cli
sbb
cmp
jb
dec
ja
inc
lock
lret
pushf
out
movsb
outsl
xor
jbe
js
adc
lock
and
mov
add
fisubrs
ljmp
dec
inc
incl
mov
sbbl
shll
in
enter
push
in
jl
sub
repz
mov
cmp
aas
push
xchg
das
and
rorl
ljmp
xchg
push
jae
xchg
lahf
inc
sub
into
stos
aas
or
mov
mov
adc
outsb
insl
jge
movsb
xor
cmp
std
loop
sub
xor
cmp
nop
mov
xor
sub
push
sbb
xor
adc
mov
xorl
push
lret
xchg
fisubrl
in
sbb
push
mov
aam
and
leave
shl
iret
or
test
adc
lods
jae
xchg
test
aas
jbe
nop
clc
push
data16
das
xor
pop
mov
andl
mov
repz
mov
jnp
mov
stos
cmpb
les
ret
iret
cltd
pop
in
sbb
jmp
frstor
push
push
lods
mov
inc
sbb
daa
gs
repnz
sub
push
mov
out
jge
add
push
mov
mov
popf
xor
iret
ja
mov
pop
hlt
mov
mov
paddq
adc
call
fldt
or
xlat
mov
aaa
pop
insb
mov
or
std
mov
adc
das
jle
sbb
rcr
leave
mov
repz
sahf
jne
mov
inc
stos
addr16
pushf
mov
push
fcomps
aad
data16
cltd
dec
cmc
push
or
mov
cmp
xor
sti
mov
mov
jnp
rep
test
decb
dec
out
xor
aad
xchg
mov
cmpsb
mov
fs
mov
ss
ret
xor
pop
pushl
sbb
xor
push
hlt
dec
adc
scas
pop
xor
in
add
add
push
es
iret
lcall
mov
fs
stc
cmp
repnz
in
mov
shll
out
inc
add
or
lods
sub
pop
out
dec
sub
fcomps
sbb
mov
pop
mov
push
lret
pop
mov
out
jge
andl
xor
stc
stos
xor
lret
loop
cwtl
loope
xchg
int3
sbb
pop
add
aaa
jo
call
mov
xchg
test
mov
mov
daa
subb
cmp
push
sub
cmpsl
mov
in
insl
shr
sbb
inc
out
push
repnz
sub
test
pop
rcr
in
in
lds
jne
mov
inc
outsb
dec
aam
sti
jl
mov
int
push
and
jp
scas
mov
lock
inc
cmp
loopne
icebp
push
sub
push
mov
shll
inc
mov
jno
js
sbb
xchg
movsb
xor
cmp
mov
cmp
add
shl
jns
jg
hlt
fimuls
dec
mov
push
out
popf
sub
daa
cwtl
outsl
sub
sbb
cltd
pop
nop
ret
mov
rorl
mov
loope
icebp
or
cmp
dec
dec
jae
add
dec
test
ret
mov
arpl
dec
imul
out
lds
mov
cmovl
dec
ret
andl
sbb
shrb
cmp
test
push
pop
cmc
out
add
or
lret
pushl
jg
inc
pop
int
lea
xchg
xchg
jge
bound
cmpsb
dec
or
icebp
repz
sbb
xchg
fadd
outsl
or
cmp
push
cmp
ja
xchg
outsl
icebp
mov
stos
push
or
bound
rol
fsubrs
jo
mov
idivl
sub
fidivrs
fadds
shrb
dec
imul
stos
add
inc
iret
and
popl
or
cmp
and
xchg
addr16
fsubr
fisubrs
cltd
mov
clc
or
shll
or
push
cmp
mov
cwtl
mov
lret
lcall
fisubs
lret
and
xor
jnp
push
je
xchg
in
in
dec
lret
sbb
sub
jnp
ljmp
fsubp
dec
cli
push
sahf
dec
and
adc
push
xor
xchg
shlb
jns
lods
enter
push
movsb
push
shrb
lret
mov
loopne
je
jmp
andl
cli
loop
xor
enter
xchg
loop
jns
je
repnz
mov
mov
jge
xor
loop
cmpsl
fmull
add
rorb
repz
xchg
fistpll
and
or
push
insb
movl
and
jg
es
add
sbb
dec
sarb
movq
sbb
mov
or
xchg
hlt
repnz
les
pushf
mov
or
aaa
addr16
cwtl
out
sbb
leave
in
mov
pop
mov
inc
jo
jbe
add
push
pushf
add
or
jnp
mov
jle
loopne
lahf
in
pusha
sbb
iret
cmp
loop
and
xchg
imul
push
pop
les
mov
cmp
icebp
roll
push
repz
pop
sub
xchg
and
jg
daa
xchg
lret
inc
pop
adc
add
movaps
pop
cmpsl
lods
outsl
adc
addl
ds
idivb
movsb
clc
push
cmp
dec
jo
shrl
stc
pop
adc
mov
ja
or
out
mov
jbe
das
addr16
movsb
repz
int3
hlt
pop
mov
mov
stos
pop
cmp
fistps
inc
inc
nop
hlt
xchg
push
cwtl
stos
enter
in
test
pop
pop
ret
mulb
push
xchg
in
jno
xchg
cmp
mov
imul
int3
mov
sbb
inc
and
mov
jne
sbb
push
repnz
fwait
mov
xor
cmp
test
xchg
and
movsl
xor
pop
add
adc
lock
and
cmp
icebp
stc
cld
arpl
adc
into
into
pop
es
aam
ss
repz
xor
dec
insb
nop
mov
hlt
js
push
aad
jbe
or
or
in
ret
and
sbb
push
push
or
xchg
ds
dec
aas
jbe
out
cmp
and
arpl
mov
dec
mov
jns
popa
popf
mov
add
cmp
mov
std
mov
mov
adc
jmp
test
push
xlat
cmp
cld
cmp
xchg
rorb
pop
jnp
insb
jno
lret
ret
and
dec
add
inc
negb
cmpsl
pusha
pop
dec
dec
les
add
jnp
int3
int3
iret
sub
mov
pop
inc
loop
push
xor
pop
mov
loope
and
mov
in
sub
add
adc
adc
adc
mov
mov
pop
adc
int
frstor
pop
pop
cmp
jb
cmpsb
movsb
ljmp
mov
inc
sub
cmp
jns
pop
lahf
hlt
mov
decl
lcall
pop
fimuls
out
cmpsl
fcoms
jae
mov
loope
inc
xchg
aad
lds
xchg
testb
sbb
mov
lods
xchg
test
gs
push
lods
fcmovu
mov
mov
add
hlt
adc
adc
xchg
shl
ds
dec
fstl
test
fwait
push
pusha
imul
test
xor
out
sub
pop
fisubs
jecxz
push
pop
dec
imul
and
push
sti
aad
jns
out
sbb
aam
add
or
mov
lods
daa
sti
fidivs
jmp
cli
dec
push
in
mov
inc
and
push
xchg
push
ror
jecxz
xor
in
sbb
dec
jecxz
mov
mov
mov
aad
xor
inc
xor
jg
pop
mov
mov
mov
je
enter
aaa
lahf
imul
sahf
mov
fwait
dec
cmp
push
cmp
mov
mov
adc
push
sub
cmpsl
cmp
jecxz
lcall
mov
test
repnz
xchg
hlt
push
cmp
cwtl
jp
mov
call
scas
pop
mov
loop
dec
jae
pcmpeqd
xor
and
movsl
xor
xor
add
icebp
ficoml
cli
aaa
outsl
cmc
sti
jl
fincstp
addr16
int3
inc
mov
out
ljmp
andb
aam
aad
xor
add
xchg
rcr
push
repnz
inc
clc
pop
movsb
mov
in
andl
add
xlat
iret
inc
xchg
cmp
hlt
mov
mov
sbb
sbb
dec
pop
shrl
dec
mov
sub
mov
shr
or
scas
and
into
push
or
clc
mov
rorl
push
addr16
cmp
jne
mov
negl
addr16
notb
das
mov
loop
push
aad
mov
fmuls
loopne
xor
shl
inc
stos
and
mov
xchg
xchg
scas
dec
mov
addr16
jae
testb
rorb
jae
push
fcomps
insl
leave
fildll
jmp
in
shll
ret
inc
sub
or
cmp
push
pushf
add
test
out
test
push
adc
pop
in
sbb
imulb
and
cli
and
pop
in
add
in
xor
mov
xor
adc
cmp
mov
and
imul
xor
pop
cmp
xchg
aas
aaa
lret
mov
leave
aad
call
inc
add
or
call
lcall
cmp
jb
dec
xor
cmp
sbb
inc
fsubs
aaa
je
fnsave
addr16
mov
jmp
arpl
mov
xlat
cmp
adc
cmp
cmpsb
mov
dec
pop
sarl
mov
fildl
in
inc
mov
sub
xchg
jno
jmp
icebp
das
mov
shr
rep
sahf
cmc
sbb
push
dec
dec
sbb
cmpb
jne
mov
mov
inc
mov
aaa
xchg
xchg
pop
fidivrl
loope
inc
push
jb
xchg
or
and
sarb
push
xchg
and
xor
jmp
mov
or
fistps
test
insl
mov
pop
sahf
sbb
pop
in
in
test
icebp
test
cmp
fs
jae
xor
aaa
push
outsb
add
pop
dec
test
lea
nop
push
icebp
lret
or
xchg
rolb
sub
xlat
push
xlat
ljmp
iret
cld
aad
aas
es
jb
outsl
sar
loop
push
ds
add
add
mov
sub
adc
sbb
test
mov
test
fs
pop
sbb
lods
lret
sub
push
mov
cmp
es
xor
mov
mov
dec
das
sbb
pushf
in
icebp
clc
call
repnz
filds
and
aas
into
movsb
lret
test
push
push
cmp
mov
es
add
add
push
inc
popf
lds
ret
pop
popl
cmpsb
lret
inc
out
xor
in
add
or
jmp
mov
add
sub
adc
sub
sbb
cmpsl
xor
data16
dec
in
lods
or
pop
cmpsl
mov
pop
in
fisttps
insl
mov
imul
rol
arpl
cmp
cmpsb
jecxz
push
add
pushf
pop
dec
inc
xlat
cmpb
mov
loop
arpl
and
jmp
fwait
test
in
cmp
fadds
sarl
adc
mov
lods
call
aaa
mov
xor
inc
rcll
push
sbb
mov
push
jb
xor
cmp
fwait
jmp
xchg
add
ja
or
daa
pushf
jae
mov
sbb
mov
sub
xchg
out
in
pop
xchg
jo
in
arpl
cwtl
cmp
cmp
pop
test
leave
dec
shl
lret
leave
push
arpl
jae
out
cmc
in
adc
push
sub
mov
mov
arpl
lods
mov
xchg
fstpt
mov
xchg
push
mov
lahf
or
or
fcmovu
mov
mov
cmp
arpl
or
mov
das
sub
dec
clc
fdivp
push
inc
dec
xchg
pushf
js
sbb
lods
push
fwait
ljmp
pop
adc
dec
insb
adc
hlt
mov
adc
jl
rorl
push
xor
jl
push
fnstcw
adc
xchg
shll
popf
fwait
xor
lods
xchg
pop
jge
inc
insl
jae
mov
outsl
fs
cmp
outsl
dec
mov
sub
pusha
inc
sbb
mov
pop
sbb
es
dec
mov
dec
mov
fiadds
cwtl
cli
shll
fwait
addr16
jg
cmpsl
movsl
cs
dec
aaa
cmpsb
lods
adc
push
cmp
push
in
push
in
popa
in
fdivs
mov
cwtl
mov
push
inc
inc
cmp
fimull
and
sub
cmp
sub
jl
dec
das
pushw
lret
sbb
iret
jnp
jns
sti
leave
xor
data16
movsl
and
filds
dec
shlb
cltd
sub
mov
push
pop
xor
mov
shlb
rcl
push
jmp
jmp
sub
ljmp
loope
adc
xchg
into
cwtl
sbb
std
fistps
das
or
out
lock
scas
cmp
jmp
jge
in
ret
in
or
or
imul
adc
xchg
not
stos
adc
dec
aaa
les
repz
cmp
adc
and
out
inc
shll
addr16
jecxz
pop
fwait
jbe
nop
push
icebp
mov
push
aas
push
jmp
pop
dec
outsl
cltd
shrb
clc
arpl
adc
test
int3
pop
out
jbe
sub
test
mov
jecxz
imul
sub
stos
movsb
mov
sbb
dec
adc
movsl
fsubr
nop
cmp
cmpb
iret
jb
shlb
cmpsl
add
or
adc
mov
jo
pop
mov
adc
stos
mov
hlt
mov
mov
out
aaa
fadds
popa
xor
jo
ss
xchg
nop
aas
xor
test
cld
push
pop
jg
icebp
mov
push
je
pop
mov
adc
loop
jae
dec
jns
mov
nop
cmp
popa
push
ficompl
ljmp
or
scas
mov
rol
xor
mov
arpl
mov
imul
sbb
mov
adc
lret
push
sbb
cmp
inc
xor
pop
notb
xchg
clc
mov
add
test
cli
cld
mov
aam
jae
jbe
adc
push
insl
fmuls
cs
test
mov
jecxz
push
jg
mov
add
dec
dec
in
cli
test
push
addr16
pop
lret
push
xchg
and
add
fbld
fdivs
aam
push
sub
fidivs
test
addr16
mov
popf
lcall
mov
dec
cmpsl
scas
ret
aas
pop
fadds
inc
mov
jmp
pop
pushf
jge
daa
mov
jmp
xchg
push
in
stos
adc
mov
mov
mov
push
jbe
ds
lret
adc
mov
ja
push
adc
or
push
std
dec
int
sub
outsb
push
adc
cmpsl
or
push
lock
xchg
jl
push
cmp
dec
pop
fcmovnu
mov
stos
cld
arpl
sub
pop
iret
cmp
cld
lea
jmp
mov
jg
pop
cmp
idiv
xchg
mov
lock
mov
popa
gs
iret
les
rorb
dec
ljmp
outsb
es
and
mov
or
push
adc
es
cli
inc
inc
mov
lods
add
inc
jbe
jp
test
mov
hlt
jecxz
dec
or
arpl
fistpll
addr16
out
mov
inc
hlt
or
sbb
mov
xor
add
pop
add
iret
jle
add
push
sub
xor
sti
out
or
mov
loope
in
cmp
jecxz
jb
insb
pop
fs
mov
xchg
fwait
xchg
mov
adc
fstpl
sbb
or
clc
fcmovnb
or
dec
sahf
aaa
jp
arpl
rcr
xor
icebp
push
enter
push
sbb
jb
push
mov
xor
xchg
mov
cmpsb
popf
gs
ljmp
cld
ss
cld
jmp
imul
sbb
cld
push
xchg
ficomps
mov
in
sbb
fcos
mov
sub
sbb
in
mov
sub
lock
push
fcomip
mov
lret
jne
lcall
sti
fimull
dec
xchg
fiaddl
lods
dec
push
pushl
stos
or
test
ja
aad
les
and
call
xchg
sub
sub
xchg
and
xor
inc
arpl
dec
lock
dec
mov
xchg
and
add
daa
inc
bound
cld
fwait
repz
xchg
mov
jl
mov
stos
add
shl
addr16
das
or
fistl
lret
jl
pop
je
pop
inc
mov
dec
js
sahf
orl
arpl
lea
pop
lret
jb
daa
mov
xor
inc
jle
test
or
add
aas
ficoms
xorb
inc
jae
and
dec
xchg
stos
xchg
outsb
mov
push
adc
push
movsb
outsb
out
sub
pop
and
mov
pop
dec
dec
fsubp
mov
sub
xchg
outsb
mov
xchg
das
movl
sub
or
shr
bound
or
fwait
xlat
pusha
xchg
shrl
cmp
add
mov
nop
xchg
idiv
loopne
stc
and
mov
into
fcomps
push
stc
jne
shlb
xchg
mov
jge
popf
xchg
repnz
outsb
pop
pop
dec
push
pop
cmc
sbb
inc
xchg
out
add
pop
out
aad
aad
mov
mov
inc
lods
push
add
data16
push
xchg
or
sbb
and
aas
ds
enter
lods
clc
mov
lea
ja
repz
push
in
cmp
dec
add
xlat
xor
jb
int3
mov
cmp
jmp
jmp
ret
xchg
fisubrs
dec
stc
ror
daa
sar
and
shlb
addb
and
add
arpl
push
mov
lcall
sub
jp
in
dec
mov
out
sahf
sbb
pop
andb
inc
and
mov
mov
or
bnd
push
sub
out
cld
movsl
pop
inc
sub
dec
cmpsl
xchg
ret
adc
cmp
cmp
sbb
pushl
sbb
imul
push
dec
or
jp
aaa
sub
faddl
gs
and
push
repz
mov
xor
mov
and
fs
ds
pop
mov
imul
pop
mov
mov
cli
sbb
add
inc
rorb
mov
popa
ljmp
ret
jns
mov
add
out
test
or
mov
add
mov
inc
push
push
push
mov
fstps
les
jbe
sub
int3
pop
cmpsl
inc
pop
mov
mov
xchg
xor
sub
daa
addb
insb
nop
movsl
stos
es
out
jge
and
enter
loop
push
push
lock
xor
dec
xor
arpl
add
or
xchg
decl
sub
mov
jecxz
movsb
xor
je
lea
dec
das
mov
mov
icebp
fidivrl
in
xor
stos
adc
pusha
push
movb
cmp
xchg
dec
xchg
out
add
jo
sbb
cmp
push
sbb
cmp
mov
push
mov
inc
ret
mov
ljmp
jo
test
jae
iret
fsubs
xchg
pusha
dec
call
jnp
call
xchg
out
push
or
dec
mov
icebp
sub
sbb
adc
or
add
call
inc
icebp
cmpsl
jmp
dec
pop
nop
gs
push
movsb
loopne
cli
jl
pop
fcompl
mov
in
mov
pop
btcl
sub
popf
dec
sti
inc
pop
std
xchg
rorb
jae
sub
xchg
pusha
pusha
shrl
xchg
sub
ror
int
mov
inc
mov
ds
nop
in
or
mov
adcl
pop
inc
imulb
lahf
fidivrl
jno
into
sub
and
loope
orl
mov
stos
xor
adc
inc
cmpsl
fcmovbe
enter
out
adc
push
std
js
mov
daa
fisubl
movaps
sbb
inc
popa
pop
jne
cmc
xor
or
arpl
push
fdivs
mov
xchg
sub
call
rol
cmpsl
sbb
pop
ret
ljmp
jp
push
bound
sub
jno
jb
mov
mov
movq
fsubs
dec
test
outsl
adc
data16
filds
daa
and
sbb
in
ljmp
repz
stos
adc
test
aam
ljmp
mov
aam
sub
sub
sub
imul
jno
sbb
xchg
push
das
loop
jmp
xor
fidivl
int3
int
mov
cmp
scas
xchg
lods
cmp
daa
xor
imul
add
jbe
leave
repnz
mov
cmpsb
adc
fs
insl
orb
sarl
sub
cli
cltd
cmp
outsl
jnp
test
cli
dec
pushf
add
jecxz
sub
inc
or
xor
sub
sbb
fldl
mov
daa
cmp
and
xor
adc
and
adc
mov
cmpsb
ljmp
lock
and
js
hlt
bound
adc
mov
mov
adcb
jae
arpl
mov
sub
sbb
dec
jg
mov
dec
add
pop
jecxz
cmp
xchg
jge
or
inc
or
and
jecxz
subb
mov
pop
jp
dec
enter
cld
mov
sub
sarb
loop
into
xor
pop
push
dec
or
inc
jp
sbb
mov
jbe
daa
imul
orb
je
std
cmp
xchg
adc
out
or
sub
dec
and
bound
test
test
pop
add
mov
dec
add
test
test
call
sub
push
cmp
xor
cli
push
rol
xchg
test
inc
icebp
movsb
imul
mov
mov
lcall
adc
or
test
jno
adc
mov
pop
leave
clc
mov
shrb
scas
movsb
sbb
ja
stc
data16
cmp
dec
ds
jmp
lcall
jl
std
ja
call
inc
bound
sub
mov
xchg
and
pop
mov
pushl
adc
jmp
sarb
shlb
lret
inc
fisubs
mov
fwait
or
mov
loop
sub
jb
int
or
aaa
adc
or
into
test
fcmovu
out
xor
mov
std
mov
xor
sbb
inc
js
ficompl
ret
arpl
fsub
cmc
clc
adc
out
test
rorl
dec
pop
stos
jne
orb
hlt
test
es
mov
rorl
sub
pop
and
mov
xor
xchg
inc
mov
sbb
inc
pop
in
push
popa
mov
stc
inc
xorl
fucomp
ss
cld
ffree
xor
scas
inc
pop
lret
testl
dec
shlb
cmp
gs
nop
add
nopl
dec
sub
xchg
shr
xchg
mov
orl
lods
movsb
pop
daa
dec
pushf
popa
mov
jnp
aam
dec
and
jl
ficoms
in
add
popa
fldt
test
sbb
jb
rolb
mov
add
repz
shlb
scas
mov
jecxz
loope
ja
mov
dec
push
dec
push
push
test
enter
je
xchg
faddp
adc
lods
out
andl
sbb
jecxz
cli
sub
ljmp
xor
xchg
sbb
xor
cmp
add
in
and
push
popa
mov
popa
sahf
adc
cld
insl
hlt
sub
or
mov
cmc
xor
dec
fidivrl
out
mov
rorb
add
mov
dec
jecxz
ficoms
ret
jg
mov
xor
jmp
and
cwtl
cmc
jmp
sahf
jg
fdivr
or
inc
jbe
lcall
inc
andb
lods
es
cmp
ja
cli
cmp
xchg
add
cwtl
shlb
mov
xchg
sahf
push
fdivr
out
pop
push
in
and
movb
repz
inc
and
adc
cmc
push
ret
imul
negb
mov
jnp
jmp
jg
pop
repz
or
out
add
outsb
or
sub
sahf
cmovl
dec
scas
sub
lock
aad
cmp
sub
movsl
xchg
dec
sub
mov
xor
cmpsl
mov
pop
push
mov
xor
pop
scas
sub
inc
ja
mov
loopne
out
jno
popf
jmp
cmpsb
adcl
xchg
jo
jecxz
pop
divb
push
shl
dec
xchg
xchg
out
out
sbb
mov
addr16
sbb
xchg
push
pop
sarl
lea
scas
ret
es
in
popa
into
sbb
mov
fs
sub
sub
pop
add
pop
lahf
xchg
in
mov
inc
mov
mov
idivl
jmp
repnz
xor
sub
jns
xchg
sub
out
repz
inc
out
jbe
cmpsl
cmp
fwait
lods
into
je
or
adc
xchg
movsb
dec
sbb
clc
adc
shlb
jns
sbb
sbb
into
cld
loopne
xor
xor
cld
mov
push
clc
lds
jmp
shl
in
push
orl
nop
and
ficomps
jmp
lcall
insl
cmpl
and
xchg
shrb
test
cmpsb
sbb
shrl
shll
or
xchg
ss
xchg
repz
pop
loopne
lock
test
lret
std
push
lea
fiadds
mov
xchg
xchg
fildl
cmpsl
aam
sbb
push
mov
xchg
pop
negb
pusha
sbb
test
andb
xlat
int3
sbb
aaa
adc
sbb
cmp
lods
cmpsb
cltd
pop
lahf
insb
enter
fwait
stos
cli
repnz
out
add
hlt
jne
inc
mov
into
and
movsb
dec
ret
cmp
insl
add
lahf
inc
stc
lds
loopne
mov
outsb
jl
call
cmc
or
aas
cmp
daa
addr16
cmp
adc
sti
mov
enter
js
lock
sbb
in
sub
add
xor
leave
stc
add
rcl
dec
mov
and
xlat
hlt
mov
jns
out
popa
mov
ljmp
jecxz
int
mov
jnp
call
out
in
iret
in
test
jl
mov
pop
and
inc
sti
in
outsl
stos
cmpb
je
push
mov
into
int3
shrl
bound
push
int
cmp
out
fmuls
nop
xor
in
mov
mov
ret
mov
pushf
xchg
jle
jne
out
in
into
xlat
call
addr16
cmpsb
test
mov
or
inc
cli
mov
sbb
cmpsb
outsl
out
das
enter
sub
and
mov
or
outsl
mov
jp
cmp
lahf
out
add
out
cli
push
pop
sbb
in
lods
dec
mov
sbb
js
push
or
xchg
mov
in
sbb
adcl
test
ljmp
into
dec
jno
xchg
ljmp
xorl
sbb
pop
out
xchg
adc
gs
pop
stc
les
xor
sub
jae
aad
stos
out
cmp
stos
adc
mov
lcall
in
xor
sub
in
or
push
bound
fwait
imul
mov
or
mov
imul
cwtl
dec
lcall
xchg
ljmp
adc
fcoms
sub
in
pop
sbb
std
push
inc
and
sbb
icebp
pop
mov
add
xchg
stos
and
faddl
test
std
out
js
imul
pop
push
pop
sub
cs
pushf
out
push
push
pop
inc
mov
cltd
add
inc
cld
fsts
fwait
sti
inc
mov
push
jne
mov
mov
add
rorl
cmpsb
adc
mov
push
loopne
inc
aas
leave
stos
jmp
push
mov
adc
dec
imul
movsl
mov
sbb
insb
xchg
adc
dec
jmp
or
jg
sbb
leave
addr16
adc
pop
lret
dec
loope
addr16
add
lods
mov
push
xor
sub
xchg
inc
insb
mov
sub
les
add
pop
int
fisttpl
push
ja
xor
mov
lock
cmp
popa
mov
rol
int3
lods
push
xchg
fbstp
aas
and
negl
mov
push
add
xor
shl
dec
stos
rcl
add
mov
push
lcall
sub
daa
ds
dec
fs
pushf
inc
jnp
dec
pusha
dec
scas
les
arpl
pop
fldcw
repnz
insb
testl
adc
push
aaa
fdiv
mov
cmp
add
cld
std
or
jp
sbb
mov
mov
or
loop
xchg
out
pushf
test
or
loopne
pop
jo
inc
push
pushf
sub
cmpsb
dec
push
scas
and
fdivl
ret
xchg
pop
and
cmpsl
xchg
cmp
xor
hlt
mov
pusha
out
call
rcll
adc
mov
cmp
shll
mov
add
popa
cwtl
hlt
xorl
mov
mov
jnp
ljmp
xchg
cld
jb
das
fcmovbe
push
dec
mov
test
ss
dec
stos
xor
jge
out
push
popf
stc
or
rclb
enter
push
lock
xor
outsl
repz
xchg
jp
add
mov
adc
sub
jne
and
in
fdivs
std
pop
flds
outsl
aam
jl
in
adc
and
inc
sub
mov
dec
mov
push
test
inc
xlat
push
sbb
dec
pop
test
jns
lret
lcall
cwtl
sti
mov
or
mov
push
inc
inc
outsb
cmp
inc
and
jecxz
js
aaa
push
ljmp
sbb
jno
pop
fcmovnu
vdivsd
and
jae
inc
stos
or
aam
popa
test
inc
jmp
bound
inc
rcl
xchg
testl
movsb
add
push
insl
call
xchg
xchg
push
xor
out
icebp
cld
xchg
cmc
cltd
sub
cltd
xchg
push
imul
push
sbb
ds
sbb
jmp
add
xor
fcomp
fidivrs
js
jmp
dec
inc
icebp
data16
and
add
icebp
xchg
push
pop
aaa
std
add
mov
loopne
addr16
push
xor
jno
sub
sahf
xor
ret
mov
mov
pop
ret
sbb
out
jbe
mov
adc
scas
mov
mov
cltd
shl
pop
inc
push
pop
das
mov
enter
pop
and
mov
ljmp
loop
pop
test
jns
popl
sbb
data16
mov
loop
pop
orb
sub
aad
cld
adc
push
xchg
mov
pop
and
notl
inc
lahf
dec
or
jno
shll
jmp
sub
int3
xchg
and
adc
push
flds
movsb
inc
or
hlt
lds
lods
loop
jl
aas
or
in
jae
inc
xchg
cmc
hlt
and
mov
les
add
addr16
lea
cmp
jg
insl
shrl
jle
std
pop
arpl
jbe
pop
ret
mov
pusha
dec
pop
cmp
or
popa
mov
in
push
mov
sub
jg
jne
lahf
pop
sbb
inc
mov
or
push
cwtl
hlt
rclw
mov
and
pop
lock
jo
pop
leave
or
cmp
ja
xchg
out
out
push
call
inc
ret
fsts
fwait
out
dec
dec
dec
sbb
aam
jne
add
push
sbb
pop
sahf
cmp
insl
mov
sahf
fimuls
pop
enter
test
sbb
xchg
notb
sub
insl
mov
mov
dec
insl
repz
xchg
sbb
and
dec
test
cmp
imul
mov
jno
mov
jo
cmp
in
mov
and
xchg
das
lods
dec
fwait
jecxz
push
in
sub
lods
popa
test
sbb
aad
add
cmc
cmp
clc
dec
insb
inc
int3
out
xchg
loope
mov
lods
in
adc
push
cmp
add
mov
add
in
cmp
add
xchg
cmpsb
sahf
xchg
pop
dec
sub
lret
xchg
mov
jg
mov
bound
cld
mov
inc
mov
ror
sbb
inc
aaa
mov
js
or
jno
cmp
ja
mov
inc
inc
sbb
cmp
xchg
mov
iret
push
adc
push
cmpsl
pusha
lcall
fimuls
jmp
in
sti
int
pop
in
sub
lds
cmpsb
in
push
adc
push
into
mov
sbb
mov
fdivs
cmpsl
push
or
cs
pop
shrb
cmpsl
insl
or
rcll
push
xchg
jle
flds
fdiv
pop
cwtl
lret
pop
xchg
out
pop
mov
adc
sbb
xchg
popf
in
movsl
mov
push
jnp
jecxz
sbb
mov
pushl
hlt
inc
lea
pop
pop
nop
pop
adcl
adc
std
andb
xchg
std
sbb
inc
enter
push
js
and
into
insb
xchg
fbld
sti
mov
xor
push
sub
jmp
mov
pop
inc
jb
jnp
mov
cmp
adc
fildll
push
dec
cmpsb
in
and
daa
jae
cmpb
dec
ljmp
and
and
sub
test
ret
scas
jbe
xor
lahf
mov
loop
test
lock
add
les
xchg
inc
jb
mov
cli
movsl
and
pop
adc
movsl
nop
jno
dec
dec
aas
mov
sarb
test
xlat
sub
adc
xchg
movsl
push
cmp
ja
add
push
sub
mov
cmp
add
call
adc
rclb
and
dec
cmp
pop
xchg
cmp
xor
xchg
repnz
hlt
out
pop
inc
cli
pandn
data16
jns
lcall
dec
int
jmp
push
lods
daa
shll
jbe
add
scas
fs
imul
mov
mov
cmp
cltd
outsb
pop
push
hlt
xor
push
pop
dec
pop
out
xchg
push
mov
sub
mov
xlat
fdivr
mov
xor
sub
addr16
inc
sti
in
cmp
push
andb
xor
movsb
jae
dec
add
inc
lahf
call
stos
leave
xchg
cmp
cmp
fsub
shrl
aas
xchg
push
lods
mov
repnz
dec
jb
push
icebp
inc
adc
fnsave
and
nop
jmp
and
sahf
lret
mov
popf
xchg
sub
js
call
ficompl
mov
pop
fsub
mov
sbb
and
hlt
or
mov
cmp
adc
mov
les
mov
roll
adc
mov
lea
outsl
mov
iret
mov
sub
xchg
out
jns
scas
std
jns
mov
xchg
xor
test
mov
pop
inc
jl
pop
pop
cmp
pop
scas
xchg
and
mov
arpl
sbb
in
nop
push
in
call
adc
nop
cmp
and
and
div
add
test
addr16
ss
movsb
out
fstps
cmpsl
cmp
imul
xchg
dec
mov
push
jb
addr16
fisubrl
out
out
push
mull
loop
lds
repnz
adc
int
int
adc
mov
jb
into
lret
ret
mov
push
cmp
addr16
int3
pusha
scas
cmpsl
scas
lret
inc
adc
dec
jmp
repz
xor
mov
addr16
pop
cmp
cmp
pop
andl
lcall
jp
adc
pop
fcoml
mov
dec
lret
ds
in
or
cmp
adc
or
or
push
adc
mov
sarb
adc
push
xchg
outsb
clc
jmp
lds
jns
sti
incb
stos
jge
adc
mov
int3
sub
inc
and
pop
subl
pop
mov
loop
sub
sbbb
orl
push
mov
in
lahf
mov
inc
pop
ficoml
and
jl
mov
jge
fcoml
adc
add
mov
insl
and
mov
add
dec
push
adc
mov
dec
es
xlat
fcmovbe
cmp
fcompl
pop
inc
jle
insl
stc
lcall
and
mov
stc
mov
cld
pusha
sbb
xchg
mov
cmp
insl
adc
and
hlt
pop
shr
out
test
or
xchg
sbb
ffreep
loope
mov
shll
inc
sbb
adc
push
xchg
dec
js
pop
nop
imul
or
testb
pop
mov
inc
adc
xlat
dec
icebp
jecxz
xlat
mov
jl
stc
test
mov
jbe
mov
testl
hlt
cmp
pop
nop
sbb
stos
xchg
call
or
sub
pusha
inc
imul
repz
xchg
xor
xor
mov
cltd
enter
inc
cmpsl
xchg
jge
sub
fstpl
data16
jae
mov
dec
js
out
mov
push
addr16
jmp
pop
xor
insb
dec
rorl
push
iret
and
bound
inc
in
xor
nop
mov
paddw
ret
stos
push
out
inc
js
dec
add
push
mov
sbb
mov
in
dec
pop
test
push
cmp
mov
jle
test
les
sub
pop
add
imul
jmp
push
pop
aam
in
pop
push
mov
inc
pop
aaa
sbb
mov
out
scas
imul
jno
fisttps
inc
adc
aaa
cmp
jle
and
pop
stos
push
pop
out
jno
add
mov
ret
dec
movsb
mov
das
stos
jb
nop
xchg
push
loop
ja
int
xchg
mov
xchg
pop
fisubrs
stos
push
pop
pusha
ret
fyl2x
mov
and
aas
fadds
jnp
es
pushf
xchg
jg
jo
pop
aas
enter
mov
sarl
out
std
aam
lcall
imul
lcall
xchg
xchg
dec
mov
jl
ljmp
std
add
add
pop
mov
and
fisttpll
inc
jg
sbb
push
inc
cmp
inc
jbe
test
mov
shr
xchg
xor
pop
mov
jecxz
inc
outsb
adcl
test
cmp
xchg
aad
cli
daa
or
imulb
add
sbb
fiaddl
js
faddl
inc
mov
ficompl
adc
test
imul
lret
dec
mov
xor
sahf
sti
out
dec
or
sbb
and
ja
lahf
les
cld
fld
xor
addl
mov
sub
fisttps
mov
jmp
jbe
loopne
cli
aaa
inc
xchg
stos
xchg
cwtl
movsl
pop
pop
dec
repz
sub
pop
cmp
cmp
mov
aas
xor
inc
js
jb
jp
xorl
pop
cmc
inc
and
sti
fisttps
pop
xchg
pop
fbstp
fistps
xchg
xchg
rcr
mov
scas
loope
sarb
xchg
clc
mov
add
pushf
loop
and
mov
jp
cmp
and
jl
xchg
enter
jae
or
les
lret
imul
lods
aaa
js
lods
sub
fisubl
or
push
xor
cld
jmp
mov
fiaddl
jecxz
mov
sub
push
sbb
cmp
arpl
addr16
enter
xor
roll
and
fidivrl
fidivs
xchg
xorl
scas
addr16
nop
sub
mov
pop
pop
pop
leave
ret
inc
jg
and
stos
add
fwait
popf
or
mov
jns
fiaddl
inc
les
push
fistl
ljmp
into
push
push
mov
inc
adc
xchg
add
add
jle
test
jae
push
out
sbb
mov
mov
cmpsb
shr
cmp
lods
add
push
pusha
sbb
rolb
inc
pushf
or
arpl
mov
ret
fs
fldl
fistps
test
iret
dec
mov
mov
jbe
pop
das
inc
jle
scas
push
pop
lahf
addr16
pop
lret
stos
xchg
pop
out
repz
dec
push
or
dec
xchg
je
je
mov
into
popf
loop
fs
xor
sub
sar
mov
leave
aaa
inc
negb
jo
pushf
int3
insb
xchg
mov
pop
sbb
aaa
inc
add
push
test
pop
mov
dec
push
xchg
rclb
mov
stos
popa
sbb
dec
sub
bound
xchg
sti
or
sbb
jmp
out
push
pop
mov
jbe
or
xchg
push
loopne
xchg
in
int
jge
div
xor
aas
xorb
stc
cld
mov
into
sbb
mov
imulb
jg
mov
jno
push
lcall
xor
orb
mov
sti
nop
jae
fdivrl
lret
sub
jge
or
sub
xchg
sbb
xor
cmp
aad
push
fistpl
inc
jl
adc
iret
and
adc
fisubrl
push
and
cmp
adc
mov
cmc
xor
stc
imul
jb
enter
mov
imul
movsb
pop
cmpl
xchg
subb
cmp
int
cltd
dec
mov
das
lea
test
mov
pop
sub
sub
into
mov
xchg
mov
arpl
fisubl
int3
clc
mull
pushf
imul
out
push
scas
add
fcom
mov
xchg
cwtl
js
lods
loopne
push
out
jns
xchg
call
cs
xor
arpl
shlb
scas
push
mov
shrb
pop
stc
outsb
add
in
jle
pop
jne
dec
fwait
or
outsl
xchg
xchg
inc
out
stos
dec
pop
dec
movsl
lret
sub
aaa
insl
out
insl
fwait
mov
sub
nop
pop
out
push
mov
xchg
add
jecxz
inc
icebp
pushf
lcall
mov
jl
fldt
pop
adc
xor
sbbb
ret
bound
cmp
rorl
adc
mov
add
and
adc
hlt
mov
cwtl
and
sbb
or
xchg
cmp
push
inc
push
jl
sub
repz
outsb
in
sbb
push
mov
push
mov
iret
pop
xchg
pop
in
iret
jmp
pushf
lea
sub
and
xchg
mov
and
sbbl
cmp
sub
negb
pause
sub
and
in
pop
pushf
in
test
mov
stos
pop
cmpsb
and
sub
out
pop
insl
sub
rclb
jns
xchg
loope
shl
mov
int
int3
lods
imul
jae
int3
stos
push
pop
imul
jbe
sub
cwtl
hlt
stos
scas
bound
lds
pop
push
ret
mov
mov
test
adc
int3
and
popf
mov
pop
bound
adc
jne
push
fwait
push
xchg
addw
js
fwait
cltd
ja
loopne
jne
mov
cmpsl
jns
dec
push
lcall
cmp
dec
fldl
jmp
outsb
mov
xchg
fs
sbb
xor
insl
jae
inc
and
push
adc
movsl
or
inc
mov
xchg
cltd
int3
dec
dec
mov
push
imul
mov
push
jmp
dec
daa
cmp
jmp
pop
cmp
mov
test
pop
or
mulb
sub
shr
push
ds
pop
leave
pop
jmp
add
jae
mov
aas
stc
dec
bswap
sbb
pop
jno
fwait
sahf
sbb
jne
out
xchg
pop
je
and
push
ljmp
dec
mov
inc
sub
jo
cmc
int
and
cmovo
movl
cli
fsts
icebp
jns
loop
dec
out
or
inc
in
notl
mov
out
lds
dec
dec
dec
add
outsl
cli
aad
or
push
jp
aam
xchg
idiv
and
sbb
scas
movsb
sub
mov
arpl
jecxz
mov
mov
sahf
pop
sbb
xor
pop
pop
sti
call
imul
inc
fwait
adc
mov
adc
push
pop
fistps
incb
fldcw
xor
bound
popf
dec
xchg
push
jle
loope
outsb
icebp
mov
pop
leave
pop
mov
mov
pop
and
xchg
ja
sbb
ljmp
push
lcall
jg
pop
cmp
fs
ret
and
xor
pop
test
mov
push
iret
inc
jl
lods
adc
in
dec
mov
imul
jb
les
enter
js
pop
ja
jle
sti
arpl
cs
cs
or
lock
popf
xchg
test
and
pop
icebp
sahf
push
pop
fwait
dec
push
addr16
clc
inc
jecxz
sti
fistl
enter
cmpsb
aad
jl
inc
rcll
cmpsb
push
pop
cltd
push
repnz
addl
xor
adc
xor
xor
gs
pop
mov
cmpsl
push
jo
ret
adc
push
mov
cltd
sub
xchg
test
shlb
push
in
das
les
hlt
fdiv
mov
sub
test
aad
inc
xchg
push
in
das
adc
lock
fidivrs
mov
inc
or
mov
cmp
lret
push
cmpsb
mov
and
les
les
fnstenv
aaa
es
xor
jae
mov
adc
adc
ror
adc
or
loope
sbb
or
push
pushl
aaa
outsl
push
lret
insl
adc
push
dec
sarl
stos
xorl
fwait
dec
in
fstps
add
mov
ret
add
jae
pop
xchg
stos
mov
rcrl
loope
jbe
adc
xor
rclb
fnstenv
shrb
daa
jl
jge
in
mov
lahf
or
arpl
xchg
or
lods
jle
mov
mov
imul
addr16
add
xchg
repnz
out
fs
cmc
mov
shr
pop
xchg
movsl
cwtl
clc
jmp
fwait
orb
cmpsl
test
leave
int
insb
lds
sub
sub
push
pushf
xchg
fistpll
std
aaa
mov
pop
fcmovbe
std
test
push
xchg
add
repz
rorl
lcall
ret
mov
js
sub
mov
in
fnstenv
mov
dec
dec
int3
adcl
push
cmp
mov
push
inc
adc
loope
lahf
mov
mov
hlt
repz
push
jae
sti
jecxz
enter
call
dec
imul
stos
daa
rcrl
xchg
xor
jo
mov
stos
jecxz
jge
push
jle
lret
movsb
mov
fiadds
mov
into
cmpsl
jb
dec
xor
out
push
icebp
fistpl
lods
dec
lock
fsubrs
pop
cs
mov
mov
jns
jle
movsl
add
jl
sbb
in
cmp
pop
notb
adcb
or
inc
dec
jne
or
mov
in
mov
pop
sbb
adc
scas
mov
sub
push
cmc
movsl
or
aad
repnz
mov
pop
repnz
call
adc
rclb
push
cmpsl
ret
sbb
add
or
add
pop
jmp
das
outsb
xor
fisubrs
adc
push
lret
imul
cmpsb
dec
inc
cmp
popf
subl
insl
and
adc
je
jge
cmpsb
lods
pop
cltd
loop
iret
js
sub
jno
fdivrl
xchg
and
dec
xchg
push
fs
xchg
lahf
fistl
xor
xchg
sbb
push
inc
fcomps
or
in
sti
and
js
jl
loope
mov
push
pop
mov
out
jmp
fimull
push
or
add
loopne
and
aam
pop
add
push
data16
iret
xchg
out
jne
dec
rcl
xchg
sbb
sbb
adc
clc
jae
add
dec
out
push
loop
movsl
push
sbb
fsubrs
xchg
adc
fsubrl
nop
dec
inc
mov
cmpsb
sbb
inc
dec
dec
pop
mov
sub
data16
mov
sbbb
shll
and
aam
adc
std
adc
test
mov
inc
add
in
in
cmp
lcall
dec
in
stos
xchg
push
fcomp
fs
mov
inc
ret
out
xor
cmp
mov
push
xlat
imulb
pop
add
adc
or
xchg
push
shlb
lahf
jo
dec
adc
or
ss
mov
cwtl
fcoml
inc
cs
fidivs
cmp
rcr
movups
mov
outsb
cmp
in
cmpsl
ret
int3
out
mov
dec
add
push
sbb
mov
push
xor
std
stos
repz
pop
jecxz
cmpl
jecxz
jle
xor
sub
ret
xchg
add
pop
mov
jge
push
test
ds
outsl
aam
dec
pushf
jnp
mov
inc
or
pop
mov
insb
imul
jecxz
jne
repz
jns
pop
pop
rol
int
cld
arpl
dec
dec
and
and
adc
xchg
push
xlat
jae
js
push
dec
gs
mov
and
inc
cs
and
sub
xchg
add
sbb
movb
lret
outsl
pop
push
mov
into
push
push
negb
jl
and
repnz
xor
ficomps
out
add
cmp
inc
mov
xlat
imul
lock
jnp
lea
fwait
xor
lods
mov
ja
fistps
inc
rcrb
hlt
inc
xchg
pop
imul
push
mov
pop
xchg
test
fimuls
out
int
outsl
rorl
aad
mov
dec
add
es
inc
ds
sub
call
mov
mov
dec
mov
loopne
ja
inc
daa
rcl
mov
pushf
cltd
pop
incb
inc
out
data16
cmp
imull
jmp
inc
mov
imul
mov
or
inc
mov
ss
or
mov
scas
and
adc
push
or
jge
xchg
xchg
dec
subb
faddl
lock
jb
mov
push
mov
aad
xlat
je
in
xchg
xor
pop
shl
popf
test
xor
lea
rclb
adc
in
outsb
mov
loope
and
jnp
stos
loopne
fdivl
sbb
fs
adc
cmp
bound
data16
fs
fimull
push
insl
push
ret
aam
movsl
sbb
insb
cmp
into
test
ja
xor
or
or
in
xchg
mov
popa
lret
outsl
jg
sbb
or
test
test
inc
pop
jecxz
mov
and
jnp
dec
and
push
movl
and
and
loopne
add
inc
mov
jae
sub
mov
pop
cmp
cmc
test
push
sbbl
mov
jmp
fldl
sbb
mov
cmp
std
pusha
mov
add
imul
gs
adc
test
cltd
pop
imull
icebp
cmp
fstpt
lock
cmpsb
pop
push
filds
insl
add
mov
push
cmpsb
mov
pop
test
ljmp
out
pusha
mov
pushf
jae
xchg
jae
das
push
inc
sahf
mov
or
mov
out
mov
mov
rcll
in
ret
mov
push
fs
inc
frstor
inc
stos
and
xchg
jnp
mov
inc
lcall
ljmp
movsb
rcll
addl
cmc
stc
xor
in
xor
ror
xchg
lret
pop
les
hlt
pop
sbb
jno
daa
mov
arpl
xchg
xor
nop
mov
mov
shlb
jge
rol
xor
mov
data16
xchg
push
ficompl
fildll
or
push
aad
mov
inc
dec
add
or
mov
inc
jae
shlb
mov
roll
in
test
sbb
push
sbbb
outsb
xchg
addl
mov
gs
ret
dec
js,pn
mov
lret
or
ret
add
pop
push
gs
jno
and
lds
in
xchg
xor
sub
pop
push
call
jo
pop
std
je
test
cltd
roll
cld
inc
xor
jbe
leave
jecxz
dec
movsb
sbb
sahf
mov
lahf
and
add
fstpl
icebp
mov
stc
or
pop
imul
rcrl
pop
sahf
mov
xor
shrl
sbb
sbb
lock
push
push
adc
sub
leave
pop
inc
sti
pop
call
xchg
cltd
loopne
pop
lock
int
fnsave
out
das
jae
jno
inc
xor
mov
inc
mov
sub
add
arpl
mov
lods
jno
dec
pop
je
add
outsl
xor
dec
rolb
enter
bound
cmp
jl
add
cld
aad
addr16
push
js
daa
lcall
jmp
insb
arpl
xor
lret
inc
stos
dec
std
movsl
jle
outsl
or
stos
adc
xlat
cmp
jl
fstps
lods
jecxz
ja
add
inc
mov
jb
outsb
xchg
movsl
dec
dec
lds
orb
cmp
aam
sbb
push
mov
mov
or
bound
insl
loopne
imul
add
jmp
sub
rorb
jae
dec
repnz
scas
scas
xchg
daa
div
loope
mov
stos
lods
dec
aam
sub
sbb
pop
mov
loopne
xor
shll
adc
sub
or
mov
mov
push
test
ljmp
xor
andb
ret
stc
in
fnstsw
in
cltd
sbb
arpl
test
jecxz
fisttps
dec
int
jle
aas
jg
ljmp
add
mov
faddp
arpl
jge
pop
sti
aam
mov
dec
dec
xchg
movsl
pop
test
jg
pop
jns
stos
lods
mov
xchg
push
cmp
repnz
adc
adc
xor
ss
add
std
and
popa
mov
sbb
das
test
pop
fidivrl
jnp
icebp
test
mov
xor
stos
pushl
das
int
enter
mov
adc
int3
jecxz
je
out
scas
mov
mov
push
push
and
aam
pop
jbe
testl
xchg
push
push
iret
mov
xor
pop
scas
fwait
push
insl
jbe
cltd
push
and
sub
in
pop
popa
fcmovnbe
enter
ds
int3
das
or
test
addl
inc
jno
loope
and
mov
ret
adc
out
xor
mov
stos
push
mov
mov
or
xor
rorb
push
loopne
outsl
cmp
imul
mov
ret
js
adc
pop
lret
aad
or
bound
pop
dec
adc
out
int3
cmp
inc
int
inc
sbb
and
ret
or
xchg
cmp
sbb
or
cmpsb
or
lahf
hlt
jbe
pop
add
push
fistpl
add
imul
lods
jne
dec
xchg
pop
cmp
sub
lret
jbe
fnstcw
sbb
xor
adc
testb
std
xchg
dec
or
fidivrs
sbb
cmp
out
jb
sbb
aam
or
and
and
dec
aam
mov
repz
sbb
test
dec
stc
clc
pop
rorb
push
std
pop
lods
std
sbb
shrb
push
rdpmc
movsb
pop
ret
jns
cld
lock
clc
shl
jmp
pop
lcall
push
inc
and
insl
jno
add
sub
jp,pn
or
cmc
cltd
nop
lods
fwait
add
add
mov
push
clc
leave
sarl
aam
add
jns
test
gs
rorl
mov
pop
mov
push
outsb
pop
xor
leave
xor
pop
mov
push
sub
xchg
xchg
inc
push
pop
mov
and
sbbb
add
add
in
inc
mov
rcrl
repz
pop
add
push
jo
xor
sub
xchg
add
out
cld
sub
mov
sub
cmp
jae
sti
xchg
xor
sbb
push
and
imul
jge
push
add
ljmp
sbb
jl
cmpsl
inc
push
lock
iret
aad
xchg
cli
mov
ds
xorb
pop
cmpsl
sarl
rorb
lahf
xchg
pop
mov
inc
dec
xchg
mov
test
jbe
cmp
lcall
xor
mov
psubsw
jecxz
test
nop
movsb
lds
pop
orb
push
aam
out
icebp
xchg
push
or
aaa
fldenv
insl
xchg
jge
or
push
jbe
dec
insb
or
imul
addr16
pusha
or
pop
mov
pop
xor
fisttps
pop
mov
notl
out
sbb
lahf
outsb
out
mov
out
shrb
call
div
xchg
and
vsqrtsd
movsl
loop
sbb
pop
out
clc
cmp
jg
dec
and
or
xor
cld
pop
pusha
pushf
arpl
adc
cs
aad
jae
pop
and
and
and
lcall
dec
sub
out
push
push
ljmp
xlat
incl
leave
int3
push
pop
je
in
test
inc
or
and
sub
movsl
push
mov
mov
push
in
fadds
dec
or
mov
xchg
pop
cmp
mov
and
mov
or
sub
push
jnp
enter
insb
fisubl
pop
push
sbb
mov
cmp
mov
shl
sbb
pop
stc
xchg
or
jl
or
or
inc
bswap
cmp
add
pop
cld
out
mov
xor
jo
ja
jno
mov
mov
out
sbb
sbb
adcb
jbe
pop
push
xor
xchg
and
dec
mov
cmp
cmp
sub
mov
dec
adc
ljmp
in
adc
xor
mov
xlat
cs
insb
popa
or
lds
mov
jbe
xchg
mov
shll
cmp
imul
int
pop
mov
jb
add
mov
inc
cmp
xchg
push
sub
into
imul
add
and
pop
jecxz
sub
test
or
mov
addr16
std
cld
fbld
inc
mov
mov
addb
cmpsb
pop
dec
inc
test
sbb
sub
ljmp
sbb
mov
loope
push
pop
sub
xchg
pop
cld
test
clc
sbb
repnz
out
test
add
cld
xchg
dec
in
bound
fiadds
inc
inc
rcrl
adc
call
int
jo
pop
adc
inc
imul
or
es
dec
fcoms
data16
je
dec
leave
dec
popf
xor
sahf
scas
mov
add
stos
lcall
fidivrl
int3
jecxz
in
sarl
lret
push
aas
adc
fdivrs
jo
jl
sbb
lahf
push
ljmp
aam
arpl
out
xchg
and
adc
inc
sbb
jns
push
aas
pop
adc
imul
lds
xchg
xchg
nop
inc
or
xor
push
push
popa
movsl
inc
outsb
stos
sbb
push
aas
loop
push
out
dec
and
lock
mov
sub
sti
lsl
sub
sub
push
pop
outsl
mov
in
out
lret
in
adc
sahf
mov
push
mov
adcb
adc
jmp
mov
arpl
lds
insl
push
pop
leave
movsl
aaa
arpl
jl
ret
pop
icebp
dec
xlat
push
adc
xor
in
imul
xor
pop
loopne
xchg
adc
jp
mov
movsl
push
lcall
scas
out
mov
mov
daa
aam
sbb
orb
lods
sbb
loop
xchg
outsb
push
inc
dec
xchg
add
cli
push
mov
mov
or
pop
mov
popa
mov
hlt
fwait
xchg
fsubr
pop
scas
or
pop
mov
xchg
pop
ljmp
sbb
add
lock
test
add
and
add
sbb
add
nop
roll
sub
add
xor
add
cwtl
roll
xor
add
push
ret
mov
roll
pop
ret
test
add
inc
roll
je
add
mov
add
dec
roll
xchg
ret
mov
roll
stos
ret
rol
add
add
ret
enter
roll
out
add
rol
add
insb
roll
add
add
fadd
add
je
add
adc
add
loopne
add
jl
add
push
ret
add
call
add
add
roll
or
add
add
add
sub
add
add
add
inc
ret
add
add
icebp
push
add
push
add
add
add
add
add
add
add
add
ret
add
add
lock
add
add
sti
add
addb
add
or
add
outsl
add
addb
add
cld
roll
or
add
add
add
sub
add
add
add
inc
ret
add
add
icebp
push
add
push
add
add
add
add
add
add
add
add
ret
add
add
lock
add
add
sti
add
addb
add
or
add
outsl
add
addb
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
dec
inc
push
inc
push
dec
xor
cs
insb
add
add
dec
gs
imul
push
dec
dec
dec
cs
insb
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
dec
inc
inc
xor
cs
dec
dec
add
push
inc
push
push
cs
insb
add
add
pop
imul
insl
add
inc
push
xor
cs
insb
add
add
inc
gs
jns
je
insl
dec
gs
imul
dec
xor
cs
insb
add
add
je
jne
inc
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
push
gs
gs
popa
insb
jne
inc
js
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
gs
insb
inc
js
arpl
gs
add
xor
cs
insb
add
add
push
outsb
imul
imul
inc
push
push
dec
xor
cs
dec
dec
add
dec
dec
inc
inc
push
push
xor
cs
insb
add
push
push
dec
inc
dec
xor
cs
insb
