push
call
ret
ret
test
inc
mov
repnz
jmp
mov
jl
insb
dec
lds
mov
fwait
dec
pop
fldcw
xor
cmc
sti
xchg
push
sub
fwait
in
dec
movsl
aam
xchg
lock
fidivrs
mov
out
add
sbb
mov
int3
idivl
dec
add
negb
pop
ds
lcall
in
mov
lea
outsl
mov
icebp
lds
mov
push
inc
mov
jae
mov
movsl
xlat
mov
pop
lea
lret
and
repnz
or
movb
jmp
xchg
movsb
addr16
xchg
mov
push
xchg
jecxz
jae
xor
lcall
mov
push
pop
cmp
loope
dec
xchg
add
test
repz
shlb
mov
rcrb
stc
push
sub
ljmp
cmc
fs
bound
dec
clc
add
mov
scas
inc
fistps
mov
jmp
pop
inc
xchg
repnz
fidivs
jno
dec
or
xchg
movsb
aaa
fidivl
scas
inc
inc
xor
lock
stos
rcl
or
dec
popf
and
pop
mov
xchg
notb
sbb
and
sub
inc
inc
cwtl
push
and
mov
je
orb
imul
pop
cs
divb
out
fldenv
jo
push
sbb
fdivrs
sub
aam
xchg
pusha
sub
inc
dec
mov
cmpsl
sahf
out
dec
add
jb
xor
repnz
mov
outsl
lods
sahf
out
sbb
pop
repz
xchg
enter
sti
mov
pop
mov
mov
dec
in
mov
daa
dec
ret
ret
insl
mov
mov
and
loop
loopne
movl
xchg
and
mov
xor
ss
jge
jno
mov
inc
rol
inc
sub
sbb
push
int
push
fcoml
pop
ret
das
jg
inc
rorb
cwtl
sbbl
rcll
push
fcmovu
push
xor
pop
xchg
popf
in
loop
push
mov
mov
xor
das
adc
dec
fwait
jnp
cmpsl
or
dec
jae
jmp
cli
add
mov
clc
jmp
xchg
movb
test
add
jb
push
jmp
mov
sub
mov
mov
add
xchg
out
pop
mov
jecxz
add
mov
sub
mov
push
inc
pop
inc
push
push
popa
sbb
mov
jae
es
mov
ret
adcb
inc
in
and
movb
xchg
pop
adc
inc
mov
flds
mov
jno
pushf
inc
dec
xor
outsb
imul
hlt
pusha
in
add
xchg
int3
xchg
add
lock
mov
sarb
loope
jnp
adc
inc
shl
pop
push
je
in
addr16
mov
add
pop
mov
mull
and
out
sti
rcl
pusha
xchg
mov
out
xor
mov
ds
daa
pop
daa
cmpsl
pop
scas
cmpl
sub
dec
sub
cmp
jno
pop
rorb
imul
lea
xlat
fmul
outsb
popf
push
outsl
push
pop
adc
push
ljmp
pop
push
mov
fnstenv
sub
push
jno
aas
sub
inc
adc
mov
test
mov
lret
lock
gs
jno
cmp
es
dec
mov
sbbb
das
out
jae
inc
lods
mov
popf
aam
mov
test
cli
xor
pop
in
mov
arpl
xchg
cmp
mov
lea
lcall
mov
add
lahf
repnz
addr16
xor
dec
and
pop
push
andb
repz
pushf
daa
std
pslld
push
movsb
push
mov
inc
mulb
cmp
push
stos
imul
out
mov
jp
fxrstor
js
orb
aad
lcall
sarb
xchg
fnsave
fldl
jbe
in
mov
dec
loope
and
lods
pmulhw
or
mov
negl
dec
and
jl
mov
fs
sbb
arpl
shll
aaa
fnsave
push
adc
or
add
adc
inc
mov
mov
jne
xorb
adc
aam
dec
jne
pop
sub
movsb
push
pop
push
dec
or
pusha
sub
pop
fiadds
cld
popa
adc
repnz
lods
mov
dec
push
ja
add
cmp
xchg
mov
data16
fcmovnu
iret
sbb
out
fidivrs
outsb
mov
imul
call
and
fucomi
cli
sbb
inc
push
push
arpl
xor
mov
aam
jecxz
lahf
adc
test
adc
push
xchg
mov
pop
rorl
popf
adc
mov
add
jge
xor
add
mov
xchg
lods
xchg
add
xchg
and
inc
arpl
xchg
sbb
jo
xchg
mov
mov
stos
sbb
call
cmc
stc
push
xchg
mov
aad
adc
enter
dec
ror
fs
or
push
sub
and
mov
or
popf
mov
aas
gs
and
imul
imul
push
jnp
pusha
mov
scas
popa
lods
add
pushf
jmp
outsl
test
dec
mov
pushf
cmpsl
pop
loop
pop
sbb
and
jae
push
js
mov
das
faddp
xor
inc
data16
sbb
jnp
scas
les
pop
fs
mov
add
pop
jle
icebp
jns
mov
jnp
jmp
push
or
ret
imul
dec
jmp
inc
and
mov
xchg
gs
gs
push
scas
aad
adc
pop
mov
sbb
mov
add
lods
pop
fdivl
xchg
repnz
jle
dec
push
jns
pop
xor
sub
push
aad
xchg
popa
lock
insb
mov
xchg
and
sub
and
push
push
inc
jnp
scas
imul
test
std
fbld
lods
xchg
enter
lods
fadds
xchg
adc
xor
popf
fistpl
lahf
into
sub
popf
jp
dec
lahf
adc
xor
mov
lods
mov
adc
fldenv
push
sahf
push
stos
jl
aam
ret
pop
xchg
or
or
pop
rcl
iret
in
sahf
sub
repz
cs
jo
mov
push
jl
cmp
push
mov
add
sbb
cli
fdivp
adc
mov
sbb
repz
stc
xchg
adc
pop
roll
decb
mov
outsl
mov
bswap
and
adc
cmp
das
fsubl
mov
pop
pop
fldenv
in
lods
mov
mov
mov
push
sub
inc
adc
jnp
push
mov
xor
fimull
pop
push
sbb
mov
adc
mov
xor
es
and
xor
and
int
mov
dec
addr16
sub
lds
ret
pushf
out
scas
or
aam
movsb
push
sub
int3
jmp
mov
jge
jnp
sahf
mov
adc
mov
lods
adc
cli
inc
icebp
imul
and
adc
add
movsb
or
adc
sbb
push
enter
mov
push
insb
add
sbb
sbb
popl
loope
mov
pop
pushf
mov
lods
into
sub
aad
lock
xchg
outsb
cmp
mov
incl
inc
loopne
sbb
into
popa
aaa
stos
xor
xchg
lcall
jne
adc
cwtl
addr16
lret
xor
pop
and
xchg
jecxz
pop
push
xchg
repz
push
xor
jo
lcall
mov
icebp
daa
sbb
sahf
out
fucomip
data16
mov
and
cli
je
imul
push
mov
cmp
cmpsl
rorb
les
cmp
sub
xchg
lods
mov
inc
test
sbb
push
fisttpll
sub
cmp
insb
adc
mov
or
add
mov
sti
pop
mov
push
data16
ficoms
fdivrp
sub
mov
inc
and
gs
xchg
scas
call
sbb
aaa
push
outsl
cld
rcll
or
mov
in
xchg
dec
scas
mov
mov
test
lret
sbb
dec
adc
ljmp
cmp
and
push
int3
lea
scas
xlat
mov
sbb
cli
push
mov
pusha
jae
jnp
int3
das
stos
add
sub
fstl
jp
mov
shrb
lds
pop
mov
movsb
adc
xchg
mov
in
xor
mov
enter
sbb
mov
fiaddl
addr16
dec
push
sarb
sar
push
sbb
stos
arpl
das
ss
into
add
fst
dec
and
mov
lods
xchg
aad
in
ds
test
pop
xchg
mov
mov
xchg
xor
repz
cmp
add
cmpsl
or
xchg
enter
les
dec
and
add
push
aam
cmc
jp
dec
jnp
movsb
and
cmp
fsubrs
insb
fldt
int3
adc
int3
fsts
mov
sarl
leave
fdivrl
jnp
pop
jns
enter
lea
bound
inc
cmp
mov
fcomps
xchg
xchg
std
addb
out
sbb
movsl
js
popa
jp
test
sub
pop
icebp
idivl
std
sub
xchg
stos
cmp
xchg
out
nop
and
in
out
nop
loop
add
add
std
inc
mov
lods
mov
or
mov
mov
push
xchg
fnstenv
popf
out
lods
test
push
mov
cmp
and
pop
push
fistpl
hlt
incl
jbe
insb
pop
iret
nop
ret
pop
jbe
je
pop
jnp
or
dec
or
xchg
push
daa
mov
add
popf
sbb
adc
rol
dec
xchg
sub
pop
jg
mov
mov
mov
mov
cmpb
push
sahf
mov
mov
idiv
or
xchg
sahf
cmpsl
int3
sub
and
loopne
inc
out
xor
cmp
js
mov
fs
gs
push
inc
clc
shll
push
cmpsb
mov
add
pop
push
or
pop
mov
repnz
stc
xlat
or
xchg
int3
sbb
push
ret
jge
imul
cmpsb
xchg
or
xchg
pop
das
das
stc
daa
lods
jg
xchg
xor
gs
mov
fldenv
movsl
fildll
into
mov
test
cmpb
jl
in
cmp
dec
sbb
subb
lahf
jle
pop
cmc
adc
xchg
xchg
dec
loope
mov
mov
mov
xchg
movsl
or
jae
hlt
mov
xchg
adc
aad
sub
or
popf
daa
fcomip
xchg
outsb
mov
into
sti
push
dec
cwtl
bound
mov
add
mov
sarl
fdivrs
shlb
inc
outsb
cmp
xchg
jmp
out
mov
xchg
sub
add
loope
ret
loopne
pusha
mov
cmp
xchg
fsubrs
js
addl
xor
sbb
lahf
push
add
sarl
dec
jg
or
rorl
into
push
and
jge
in
jmp
push
xchg
xor
lcall
cli
addr16
mov
jg
imul
jae
cmp
outsl
aaa
mov
add
adc
test
push
inc
outsb
xor
inc
mov
es
dec
xchg
fwait
ja
imul
imul
cs
movsb
stos
mov
rcll
in
adc
loopne
mov
xor
cwtl
inc
sahf
test
or
scas
jmp
mov
ret
sub
shlb
cmc
movl
add
dec
cwtl
mov
adc
cmp
jl
loope
addr16
lret
in
mov
add
add
fs
fnstsw
push
push
popa
aaa
idivb
mov
jp
cwtl
stos
inc
cmp
jecxz
jle
decb
sbb
xchg
out
es
mov
mov
into
mov
mov
test
test
stos
mov
lea
stos
movsb
mov
lret
call
sbb
sbbb
cmp
pop
out
jb
mov
pop
hlt
dec
movl
movsl
fcom
xchg
scas
cmp
aad
push
adc
addb
rcrb
out
arpl
shlb
and
pop
jle
pushf
iret
and
pop
dec
dec
lods
cmpsb
pop
dec
ds
stos
and
lea
jns
loope
inc
inc
out
insb
pop
gs
scas
lds
orl
dec
dec
xor
push
data16
jns
imul
es
in
push
jp
inc
pop
addl
dec
int
icebp
jne
pop
inc
cmp
xchg
jecxz
data16
xor
int
idivb
insb
pop
dec
mov
xor
cmp
cmp
or
xchg
cmp
roll
sti
dec
sbb
adcb
fmuls
ja
dec
fimull
cmpsl
dec
fld
lret
insl
sub
outsb
mov
jmp
in
ja
mov
fdivrs
pop
fcoml
push
xorl
mov
mov
mov
pop
cltd
mov
mov
mov
icebp
call
stos
mov
push
xchg
insl
hlt
mov
bound
mov
cmp
sbb
add
xor
xor
ja
int3
popf
sbb
leave
dec
jmp
icebp
lea
loopne
ja
scas
jno
mov
push
adc
adcl
mov
pop
ret
mull
mov
xchg
leave
pop
adc
cld
fistpll
xlat
pop
inc
cmc
dec
jbe
mov
out
pop
mov
dec
inc
cltd
fistpl
sarb
rclb
sub
push
fstps
jbe
xor
xchg
popa
loopne
sub
push
in
sbb
addr16
mov
inc
dec
sbb
ret
sbb
mov
xchg
inc
and
pop
cmpsb
out
lods
mov
adc
fucomp
sbbl
sti
dec
sub
push
dec
push
insl
mov
mov
jae
push
jcxz
dec
aas
xchg
and
shrl
inc
jne
push
xchg
ja
xor
xor
add
pop
int
add
cmp
mov
jae
cmp
and
flds
les
jo
mov
jle
sahf
sub
imulb
int
mov
add
dec
jo
scas
cmp
adc
dec
cmpsl
xor
or
test
es
push
loop
outsl
notl
fdivrp
lahf
rcll
mov
push
cmovae
dec
jne
sub
aam
sub
or
dec
jae
es
dec
mov
je
and
ljmp
rcr
dec
push
lcall
inc
out
dec
xchg
and
push
jbe
lods
es
push
xor
lock
mov
cmpsb
dec
mov
icebp
icebp
das
in
xor
rorl
inc
mov
xchg
lahf
pop
jg
sub
pushf
dec
out
scas
ret
nop
mov
loopne
dec
das
add
mov
adc
in
adc
xrelease
dec
cmpsl
pop
pop
dec
into
rcr
xor
cmc
dec
sbbb
add
fcoms
sub
sub
dec
xchg
pop
lret
and
testb
clc
es
mov
sub
inc
loope
sub
sbb
add
lahf
add
cmpsb
pop
sub
pop
loop
je
mov
jb
xorl
inc
xor
add
fwait
movsb
cwtl
and
movsl
fcoms
xor
push
xor
jo
popa
mov
sbb
jns
pop
in
out
push
test
mov
sub
xchg
or
rcl
clc
gs
in
test
sarl
mov
sub
rclb
mov
xchg
dec
cmp
movsl
js
popl
lret
add
cld
pop
popl
outsb
shl
pop
icebp
dec
pop
pop
outsb
scas
or
arpl
push
in
fsubr
in
testl
ljmp
jb
addr16
lea
negl
pop
aaa
and
mov
pop
test
and
fwait
xchg
mov
nop
je
and
jge
mov
cmp
xchg
mov
jp
loop
inc
jbe
clc
sub
or
in
inc
mov
inc
add
jae
sub
inc
mov
mov
jl
lock
in
push
xchg
imul
xchg
cmp
scas
out
stos
inc
xor
adcb
sub
and
sti
sub
xor
divl
jecxz
bound
mov
push
jno
cmc
je
xlat
dec
push
fs
lds
loope
mov
pusha
or
stc
pop
cmp
xor
cmp
int3
rcr
imul
sbb
lahf
negl
jbe
cld
stos
out
dec
mov
add
push
lahf
or
stc
sub
sub
and
dec
popf
and
ljmp
adc
dec
jb
mov
cmp
repnz
add
enter
out
packssdw
loope,pn
and
gs
in
in
mov
push
out
outsb
lods
pop
sbb
xchg
fildl
jns
push
xchg
mov
push
jno
jecxz
fs
call
je
sub
cwtl
xor
gs
mov
inc
adc
sbb
lea
in
cmp
ljmp
cmp
test
dec
xchg
cwtl
pop
jns
rclb
dec
lock
arpl
cwtl
shlb
mov
push
rcl
fldt
mov
icebp
fmuls
xlat
lods
int
loope
cmp
test
push
mov
mov
jb
push
insl
out
jno
andb
lods
lret
mov
fwait
lock
mov
push
inc
in
pminub
popf
nop
movsb
jg
cmp
pop
cld
and
lret
cltd
mov
iret
mov
ds
or
ret
lods
jne
stos
loop
popa
sbb
pop
lods
roll
sub
int
scas
idiv
shlb
mov
xlat
out
aas
xchg
andl
leave
icebp
sbb
dec
jo
mov
push
jge
pop
jge
xchg
add
push
daa
jmp
jo
out
out
lret
out
xor
jecxz
inc
pop
movl
dec
adc
and
sbb
in
xor
mov
and
in
mov
clc
pop
mov
fsubp
fnstsw
fdivrs
daa
xor
pop
lret
dec
ret
andl
iret
add
jno
mov
push
sbb
insb
mov
adc
int
inc
icebp
gs
jecxz
dec
addr16
xor
xchg
aas
subl
xchg
and
cmp
data16
sbb
lahf
repnz
enter
mov
lock
inc
xlat
fiadds
in
cmp
test
xchg
gs
push
das
fcmovne
cld
xchg
loop
ret
loopne
pop
or
inc
mov
ficompl
jno
lods
mov
hlt
and
ficoms
fbld
cmc
lods
popa
stos
jnp
adc
addr16
insl
jle
xor
scas
inc
jg
xchg
mov
and
xor
aaa
cmc
mov
cs
xchg
call
adc
lret
mov
rorb
mov
test
push
jmp
ret
in
sbb
inc
rclb
jmp
mov
ljmp
push
enter
sub
inc
dec
push
sub
mov
insl
fucompp
pop
lret
test
dec
stos
orb
nop
mov
int3
or
mov
jle
adc
inc
inc
xor
sub
cld
cmp
jmp
pop
pusha
pop
xchg
mov
cld
mov
jne
jb
hlt
adc
rcll
call
dec
pushf
add
int
jl
loopne
dec
mov
aam
sub
in
into
enter
gs
xchg
sub
je
ret
push
and
push
dec
mov
jns
mov
insb
xchg
mov
inc
cmpsl
stos
outsb
in
fsubl
xlat
xchg
js
lcall
subb
sub
lods
cmp
test
adc
jp
jl
mov
stc
or
stc
out
pop
add
call
jmp
mov
pop
cwtl
notb
pop
xchg
jl
mov
sbb
push
xchg
cli
jl
and
cmp
push
out
outsb
mov
cltd
adc
jb
push
outsb
xor
mov
pusha
sar
dec
jg
add
pop
lds
cmp
jns
inc
and
pusha
mov
mov
ret
in
xchg
ds
dec
cmp
pop
adc
lret
iret
pop
push
lods
xchg
sub
add
movsb
stc
jmp
jle
xchg
sub
push
nop
dec
xorl
push
and
adc
mov
es
xchg
add
je
shll
mov
push
bound
aas
xor
jns
fildl
and
imul
insb
sbb
rcrb
fidivs
mov
int
xchg
mov
mov
movsl
jnp
lea
ret
movsb
nop
imul
out
jbe
int3
enter
or
or
cld
cmp
mov
jmp
out
out
mov
lods
test
aam
xchg
data16
das
lock
ret
push
movsb
inc
insb
in
add
mov
ljmp
test
mov
mov
xchg
pop
push
mov
sub
dec
mov
or
addr16
gs
xchg
push
cltd
add
dec
sbb
lods
add
sahf
andb
and
mov
mov
aad
dec
fstl
mov
rol
das
jo
stc
mov
or
dec
fstps
jle
out
xlat
sub
and
ljmp
ljmp
pop
fwait
js
out
add
lock
jno
inc
add
cmc
add
loopne
andb
fcoml
dec
cmpsb
mov
shll
scas
cmp
push
leave
sarl
mov
add
movsl
in
insl
js
fs
fdivl
lcall
fwait
int3
jp
loop
push
jne
sbb
cmp
fidivs
rcrb
mov
sub
lahf
popf
dec
inc
std
outsb
ficoml
je
dec
xchg
rclb
mov
adc
cmp
ja
inc
mov
sub
sbb
or
mov
inc
popa
mov
cwtl
dec
mov
das
repz
dec
pop
push
mov
inc
mov
into
out
call
stc
jg
or
leave
in
or
mov
jmp
repz
sbb
insl
int
adc
lret
pop
xor
ds
sar
dec
adc
mov
pop
push
jge
popf
fmul
adc
adc
lcall
xchg
mov
std
pusha
fldt
imul
les
mov
fcmovne
cmpsl
mov
arpl
mov
jecxz
je
out
leave
dec
insb
adc
mov
jae
bound
decb
loop
adc
addb
orl
xchg
xchg
insl
add
lods
and
jno
sub
mov
mov
lods
dec
mov
jns
into
aaa
jmp
les
cmp
stc
add
pop
loope
adc
xchg
bnd
mov
xor
aam
sub
arpl
lods
sbb
sbb
in
push
mov
stc
xor
repz
cmc
ss
mov
cmp
rcl
or
ljmp
pop
mov
das
cltd
cmpsb
or
and
adc
adcl
popf
outsl
adc
mov
rcr
cld
push
jne
scas
divl
inc
test
mov
cmpsl
and
adc
dec
mov
ficoms
push
pop
xchg
enter
sub
pusha
xor
sbb
jge
iret
dec
dec
pop
aad
sbb
popa
pop
and
in
adc
jge
ss
in
jno
test
ret
cld
fdivs
cmp
push
nop
mov
xchg
lods
jl
cmp
inc
scas
testb
cmp
roll
xchg
inc
push
and
jle
sahf
xchg
lds
bound
insl
int
pop
xchg
push
pop
push
xchg
sub
jo
jp
and
cmp
js
fnstenv
addr16
in
jl
mov
pop
sbb
mov
into
test
xor
sarb
and
adc
jbe
repnz
je
in
clc
jbe
leave
leave
and
dec
pop
and
sub
inc
cmpsb
pop
popa
dec
push
mov
shlb
jns
clc
push
test
lock
or
loop
lods
xchg
and
sbb
dec
dec
xchg
pop
jns
mov
and
enter
ret
popa
push
rol
into
mov
lahf
cmpsl
sub
and
dec
push
movsb
stos
mov
repnz
mov
add
addl
mov
pop
movsl
popf
lock
add
dec
cmpb
mov
mov
fstl
insl
cmpsb
mov
lret
push
cmp
dec
lcall
das
in
gs
pop
push
fisttpl
sub
in
push
fwait
adc
sbb
mov
jg
push
cld
jae
add
int
int3
arpl
xor
imul
mov
ja
jecxz
arpl
sub
mov
add
inc
cmpsb
sbb
mov
mov
or
stos
jb
lret
xor
sahf
lea
push
testl
push
pop
or
lods
jp
fisttpll
shlb
cmp
jle
jns
mov
lahf
mov
aas
adc
lret
mov
add
pop
repnz
inc
in
mov
ds
push
out
in
mov
inc
pop
cmp
into
mov
jno
fisubrl
test
pop
data16
outsl
fists
sahf
mov
jns
push
push
bound
out
xor
test
push
cmpsb
sbb
mov
sahf
mov
loope
ret
fwait
fnstcw
lahf
add
cmc
add
xchg
popa
cmp
int3
lcall
jbe
push
and
faddl
and
lcall
ret
jmp
xor
test
jge
push
and
dec
addr16
movsl
xchg
ret
fsincos
fiadds
dec
add
orl
dec
imul
mov
lea
add
mov
andb
cli
repnz
addb
jmp
fwait
pusha
dec
pop
sub
imul
push
adc
dec
ss
lods
test
cmp
adc
push
movsl
arpl
stc
push
loopne
or
xor
jg
xchg
cltd
into
cmc
pop
jmp
dec
roll
mov
dec
in
dec
xchg
sbb
aaa
das
rcr
pusha
popa
push
dec
lahf
xchg
cs
adc
repnz
mov
mov
loop
adc
imul
jecxz
or
add
cmp
mov
push
sbb
push
or
scas
pushf
out
jo
ja
pop
js
das
xchg
out
lods
cld
and
lret
fcmovb
test
movsb
out
dec
mov
shr
mov
adc
dec
jecxz
pusha
xchg
hlt
mov
cmpsb
cmp
lods
movsb
lods
mov
enter
rclb
pop
push
adc
test
dec
stc
dec
cmpsl
jae
sub
mov
shlb
xor
mov
xor
gs
test
das
aas
lods
data16
call
xor
cwtl
cmp
push
or
in
push
imul
jg
mov
ljmp
adc
push
out
add
push
dec
inc
iret
xor
fsubrl
xchg
add
push
imul
int3
sub
js
or
repnz
xchg
movsb
outsl
mov
data16
xlat
mov
hlt
pop
ds
mov
xor
movsl
call
call
into
repz
pusha
pop
mov
mov
mov
subb
inc
pushf
xlat
shl
dec
and
fnstenv
sub
sahf
jle
adc
movsb
pop
js
shrl
stos
jge
sbb
inc
lea
mov
mov
test
mov
and
shll
sbb
sbbl
mov
jge
adc
inc
pop
lds
mov
sti
push
dec
adcb
mov
push
or
jo
dec
fldcw
nop
or
loopne
pop
roll
fnstsw
lock
ljmp
and
js
or
jb
xor
xor
push
cmp
cmp
sub
stos
sub
sub
bnd
mov
sub
pop
imul
and
lock
and
std
jbe
cmp
mov
out
mov
in
and
mov
imul
popf
in
mov
jns
cwtl
pop
hlt
push
mov
mov
popf
adcl
sbb
jne
subl
scas
mov
pop
mov
sete
mov
inc
dec
xor
mov
pop
into
adc
cmpsl
xchg
push
pop
mov
or
and
lret
adc
push
sbb
sub
lcall
pushf
mov
dec
out
popf
cmp
mov
mov
loopne
jl
jg
mov
xor
mov
insl
int3
push
push
imull
andl
pushf
dec
loope
xchg
mov
cmpsb
addr16
les
incl
pop
sub
iret
cmp
aad
mov
inc
mov
push
shrl
aas
fildl
nop
mov
adc
loop
mov
add
cmp
mov
cmc
outsb
xchg
or
jmp
pop
inc
test
ds
les
das
push
ret
andb
sub
hlt
push
mov
dec
cli
mov
adcb
jecxz
push
push
xchg
inc
clc
push
ficoms
in
rorb
insl
lahf
into
sbb
test
xchg
lods
ret
pop
in
push
addr16
into
hlt
xchg
out
sbb
data16
loope
jmp
inc
add
adc
les
inc
movl
add
int3
lcall
js
inc
push
cmc
popf
cli
push
cmc
shr
outsb
mov
js
fcmovb
xor
add
adc
pop
fsubrs
push
bound
in
fmulp
sti
lcall
pusha
imul
add
push
mov
pop
xchg
add
dec
sbb
mov
aas
orb
mov
cs
sub
xchg
xchg
adc
iret
popf
mov
xor
inc
push
lret
ficoml
repnz
fld
jg
xchg
add
mov
jae
mov
cld
mov
mov
adc
lds
push
cld
loop
aas
xor
popf
or
jle
jno
adc
jbe
adc
mov
out
test
and
pushl
pop
sbb
sbb
mov
jb
xlat
in
add
sub
mov
cmc
mov
loop
xor
add
xchg
outsb
scas
cmp
lahf
xor
enter
dec
andb
test
fdivrl
xchg
flds
inc
in
bnd
sub
push
sub
cmp
or
cltd
inc
mov
cs
es
inc
pop
rclb
sbb
imul
mov
cmp
out
inc
dec
aas
mov
pusha
add
lcall
ret
dec
enter
mov
xlat
xchg
in
stos
mov
rolb
call
mov
sbb
shl
fmul
negb
mov
mov
sub
mov
in
ret
pop
cwtl
xor
cmp
jp
in
in
icebp
mov
adc
mov
or
and
mov
add
cli
in
lods
adc
push
aam
adcl
pop
cld
cld
inc
pop
repz
mul
sahf
jge
aaa
sbb
sbb
sbb
lea
cmp
jns
pop
push
stc
outsb
sbb
repnz
inc
in
xchg
cmpsb
mov
xchg
jmp
inc
and
in
push
jns
or
pop
cwtl
outsl
mov
jecxz
ret
dec
lds
jle
jb
or
push
out
mov
xor
inc
das
fwait
arpl
leave
mov
jae
jnp
sub
lods
jbe
scas
cli
mov
sub
int
das
dec
aad
es
outsl
popf
and
in
mov
fiadds
push
push
xor
aam
push
jns
into
mov
inc
push
sub
and
test
gs
cltd
dec
in
mov
stos
aam
lret
xchg
push
clc
rolb
sbb
lcall
adc
and
in
mov
test
daa
ja
cs
lahf
mov
jns
xchg
adc
loope
jl
dec
loop
mov
sub
lret
sbb
mov
nop
or
and
xchg
cmp
lret
idivb
inc
cltd
repnz
xchg
push
ja
jb
push
add
jp
aad
test
out
jo
push
pop
sbb
sbb
and
xchg
push
loop
cmp
jle
hlt
or
or
mov
push
sub
push
push
sub
ja
mov
mov
aaa
push
jnp
cmp
gs
inc
xlat
jnp
cmpl
cmp
xor
adcb
dec
push
imul
movsl
idiv
aad
cmc
lea
test
adcb
ret
push
and
and
xlat
imul
sub
jne
ss
inc
das
pop
stc
pop
es
mov
sahf
imul
stc
and
test
xchg
or
jl
mov
loopne
insl
mov
es
int
test
mov
popf
jmp
rclb
loop
xchg
xor
xor
push
aam
scas
out
mov
ret
pop
jge
fdivrs
outsl
lods
dec
test
shrl
mov
mov
nop
enter
sbb
iret
sub
int3
push
lods
shrb
iret
enter
lock
mov
repz
cmpsl
aam
xor
aam
sub
jbe
pop
dec
fdivs
dec
dec
push
xchg
lcall
jae
lods
test
cmp
stc
dec
jnp
lcall
push
sbb
lea
inc
mov
xor
xlat
in
sbb
pop
loope
sub
inc
test
aad
nop
ret
xchg
push
leave
inc
mov
xor
add
jecxz
pop
mov
adc
test
adc
push
add
mov
test
fistpl
test
mov
and
mov
scas
mov
aad
repz
adc
xor
or
outsl
dec
sbb
in
cmp
movl
mov
jp
adc
ficoml
stc
push
xchg
and
lea
xchg
pop
aad
jge
push
movb
xchg
lds
or
and
rorl
test
stos
pop
or
nop
push
push
mov
dec
sbb
push
in
out
mov
popa
mov
or
out
pop
pop
mov
cld
cmp
rorl
test
dec
fadds
pushf
or
cltd
iret
loopne
lds
ret
or
fnstcw
xchg
out
add
xchg
mov
dec
xchg
fidivrs
outsb
push
pop
adc
andb
pop
movsl
test
dec
xchg
mov
test
lock
mov
jne
push
mov
or
jp
out
mov
cmp
stos
inc
lods
pop
sub
add
out
xor
insl
into
lods
pop
cmp
mov
popa
or
leave
mov
scas
int
out
push
gs
ljmp
out
pop
movsb
push
std
test
push
test
mov
or
fcoml
cmp
sub
ljmp
movsb
push
outsl
ljmp
mov
mov
push
js
fisubs
mov
dec
movsl
or
inc
push
adc
sub
data16
jns
out
dec
jp
dec
mov
ljmp
or
and
mov
fs
cmp
cs
es
xchg
leave
into
cmp
test
in
pop
sbb
cltd
or
adc
sub
fidivs
arpl
out
sbbb
dec
icebp
cmpsb
scas
lea
out
cmp
jb
jp
mov
jmp
inc
xchg
ja
fisubl
fsubrl
pop
gs
cs
jae
jno
stos
insb
inc
repz
xor
addr16
repnz
mov
adc
mov
movsb
xchg
loop
les
out
push
xlat
insl
mov
fidivl
pop
dec
mov
xchg
inc
loopne
lahf
cli
sbbl
push
in
std
fisttpl
xor
fwait
or
mov
inc
or
add
test
in
adc
push
lea
clc
das
dec
in
pushf
mov
cli
loop
sub
xor
mov
pushf
jmp
jnp
ds
addr16
scas
in
ret
adc
cld
push
xor
cld
aad
sbbl
sbb
mov
cmp
push
xchg
fdivrl
je
pop
xchg
xlat
sub
inc
and
mov
inc
cmp
and
xor
fisttpl
mov
inc
cmp
int
add
inc
jmp
aaa
adc
push
add
clc
or
push
pop
mov
push
push
sub
loop
ret
repnz
jne
mov
mov
nop
lahf
and
push
pop
in
mov
or
lods
push
aas
mov
adc
mov
shll
rorl
jmp
jo
mov
aas
cli
fisubs
xchg
ficomps
ds
or
sti
insl
push
mov
je
insl
mov
push
imul
mov
je
mov
cmp
push
test
addr16
or
sbb
loope
lcall
jae
xor
inc
jecxz
insb
cmp
loop
addr16
xchg
js
fs
addr16
or
fwait
jp
rcll
sub
ljmp
test
shrb
dec
cmpsl
sbb
ret
outsb
aad
loop
and
jl
and
adc
sub
inc
in
sbb
out
shl
or
das
add
jge
inc
int
call
push
push
out
enter
shl
cmpl
push
daa
pop
mov
inc
xchg
xchg
bnd
inc
jp
push
inc
stos
dec
movsb
pop
je
xchg
jbe
cmp
lcall
mov
test
adc
pusha
ret
jecxz
pushf
xchg
push
push
shlb
cs
hlt
push
fisubrs
ljmp
cmp
sbb
iret
lods
pop
int
movsb
and
out
dec
das
and
divl
dec
dec
adc
icebp
adc
dec
mov
xor
popa
insl
jl
leave
lods
pushf
dec
add
les
test
iret
fcmove
fs
jg
test
scas
in
loope
rcrb
inc
jno
jge
ljmp
scas
ja
out
inc
push
adc
dec
imul
dec
repnz
xchg
mov
adc
and
pop
mov
mov
in
lcall
fists
mov
adc
test
cmp
les
xchg
into
test
xchg
mov
or
cmp
fdivs
dec
mov
or
mov
arpl
cmp
in
mov
fs
xchg
lret
cmp
sub
test
add
cli
mov
push
sub
icebp
jb
out
add
aad
cmpsl
dec
mov
push
and
mov
mov
xor
jle
ljmp
push
mov
les
xor
sbbb
xchg
lods
mov
shll
dec
add
and
jns
pop
xor
cmp
scas
inc
push
mov
lea
pop
mov
inc
inc
push
jns
cltd
in
and
push
test
outsl
incl
push
aaa
popf
xor
rcrl
lock
test
xor
cmp
inc
jge
dec
out
and
mov
mov
dec
mov
rcll
pop
aas
test
jp
jo
and
adc
sub
rcr
fsubl
bound
fisubs
daa
xor
mov
cltd
pop
sub
jae
sahf
xor
pop
pop
push
mov
test
jne
add
fidivrl
xor
xor
test
fsubl
repz
lret
or
lret
adcb
xor
cmp
sub
sahf
cld
push
repz
nop
aaa
out
int
arpl
clc
mov
inc
test
stos
sbb
inc
cmpsl
push
mov
mov
sbb
sar
dec
rolb
sbb
pop
push
popa
or
ret
pop
dec
ja
sbb
jae
cmp
stos
imul
ret
outsb
dec
dec
outsl
sub
mov
adc
xchg
lahf
and
inc
pop
jl
stos
aad
mov
pop
pop
orb
fisubs
push
repz
add
rcll
or
std
sbb
cld
inc
cli
jmp
fidivs
lahf
sbb
out
dec
cltd
xchg
stos
cmpsl
mov
scas
mov
ljmp
inc
push
add
loope
inc
imul
fwait
jne
cmp
xchg
ret
mov
jg
xlat
gs
inc
lcall
test
je
push
inc
xchg
dec
hlt
fwait
in
stos
adc
cmp
aad
mov
jp
adc
push
incl
scas
insl
les
mov
jmp
frstor
xorl
test
in
cmp
and
or
mov
leave
or
xlat
dec
out
mov
mov
int3
enter
and
pop
cmpsl
push
ja
fistpl
xlat
pushf
inc
sub
jbe
in
fadd
jbe
adc
sub
sub
leave
xchg
xor
sbb
je
mov
cmp
xchg
jo
xor
adc
push
adc
fiaddl
cltd
push
jbe
jl
adc
cmc
imul
popf
mov
jns
pusha
add
xchg
lahf
mov
add
pop
cmp
jae
mov
dec
nop
movb
leave
shll
dec
fcmove
loopne
repz
mov
enter
imul
dec
shll
fwait
mov
xchg
sbb
xor
jne
int3
movl
cltd
je
xor
adc
das
dec
mov
rcll
sub
jge
xchg
cltd
stos
push
xchg
mov
clc
and
xor
mov
xor
dec
incl
xchg
mov
mov
stos
es
jg
js
push
cmp
out
js
ficompl
adc
xor
pop
push
jno
pop
cwtl
pop
mov
mov
mov
shl
outsb
je
mov
aas
rorl
cmp
pop
push
js
dec
pop
nop
jbe
cmp
lds
push
cmp
popf
es
or
inc
outsb
out
push
pop
rolb
rcrl
stos
cmpsl
sti
cmp
push
jl
push
jle
popf
lods
scas
push
cltd
add
fdivrl
shufps
gs
shl
dec
iret
cmpsb
arpl
in
inc
xorb
xchg
push
insb
add
mov
pop
es
cwtl
ret
test
int
mov
addr16
ss
jg
jb
subb
ja
push
mov
in
or
movl
mov
ja
orb
test
sub
dec
or
dec
add
mov
sbb
cwtl
repnz
mov
jg
jl
pop
out
mov
imul
jae
clc
shrb
pop
in
fs
shlb
mul
sbb
and
pop
leave
lret
hlt
push
and
sbb
push
dec
loop
aam
insl
ljmp
xchg
cmp
or
ror
movsl
test
dec
push
pop
and
push
sbb
or
and
std
dec
xchg
sub
or
push
enter
xlat
stos
mov
add
rcrb
cmpsb
loop
jp
mov
push
push
xor
pop
repz
sahf
xchg
mov
sub
pop
shrl
test
dec
outsl
imul
in
popf
popa
xor
and
inc
repnz
push
insl
lea
lahf
mov
cmc
in
add
test
icebp
xchg
rorb
lret
mov
or
pop
clc
pop
hlt
push
inc
adc
popa
sbb
mov
mov
dec
scas
mov
in
add
mov
pop
insb
jg
hlt
jle
xchg
insl
aas
shrb
or
fcompl
cmpsl
in
enter
sbb
inc
fdivrp
push
cmp
in
pop
dec
cmpl
cmpsb
mov
cmp
insl
sahf
enter
lds
mov
fs
and
adc
icebp
sbb
or
orb
pop
lock
push
jns
int
sahf
xor
call
xor
sub
jg
adc
leave
dec
jecxz
and
mov
fstp
shll
je
ret
push
push
lret
xorb
inc
inc
int3
pop
rcrb
pop
jecxz
lods
adcl
jo
and
pop
jmp
push
ret
repnz
xchg
mov
pop
dec
fadds
add
repz
pop
adc
mov
mov
xchg
jae
fnstsw
ds
out
adcb
mov
test
cmp
popa
ss
scas
lea
sahf
lock
mov
or
cld
std
pop
stos
insb
pop
pushf
cmp
ss
adc
mov
ss
addr16
cmp
adc
jb
mov
cmp
mov
std
pop
inc
into
pushf
xor
test
in
xchg
fwait
jl
adc
in
in
and
lea
aas
mov
movsb
js
mov
mov
adc
mov
pusha
scas
xchg
inc
sub
rcrl
sub
repz
jno
inc
aam
and
and
fs
mov
lds
cmp
sub
stos
mov
add
and
push
sbb
xchg
sti
lock
imul
jle
push
mov
cmp
push
shrl
xlat
mov
jno
cmc
lret
in
jnp
and
out
sub
xor
mov
cli
lcall
fldcw
sbbl
jnp
gs
bound
mov
cmp
mov
shrl
ss
ja
cld
xor
fidivrl
fnsave
fnstcw
or
sti
pop
push
test
dec
stos
fwait
std
jo
mov
mov
jmp
push
dec
inc
jle
pusha
xchg
pop
xchg
ret
insl
inc
xchg
cmc
ror
xchg
add
fcmovu
mov
out
test
imul
xlat
in
fmull
push
pop
add
icebp
mov
xchg
outsb
fdivr
lods
sbb
mov
bound
cltd
fdivr
mov
pop
or
jo
pop
add
div
pop
cmpsb
add
pop
int3
fcoms
or
pop
mov
mov
dec
and
sbb
cmpsb
add
jns
mov
addb
jb
add
stos
movsl
push
sbb
fildll
cmp
and
je
push
shlb
popa
lods
addb
pop
pop
or
inc
jo
in
dec
ja
mov
loopne
dec
pop
lahf
jg
dec
js
xchg
sti
sbb
mov
sub
inc
daa
stos
out
push
movsb
jmp
xchg
add
or
ja
js
xchg
outsl
xchg
inc
jns
inc
jp
add
outsl
cmc
fistl
iret
and
insb
test
inc
ds
arpl
stos
push
push
call
loop
xor
add
adc
push
fsub
shrl
push
mov
into
jb
insl
mov
inc
jns
pop
dec
mov
cmp
aas
stos
xchg
test
insb
pop
cmpsl
mov
lret
cmp
sub
pop
pop
cld
into
cmp
push
out
movsb
jbe
jl
jo
mov
shll
jns
mov
mov
cmc
in
add
pop
cltd
shrl
cwtl
jl
call
xor
cmc
sbb
aaa
sbb
sub
push
cmpsb
mov
in
jp
ja
stos
add
scas
jns
push
mov
xchg
add
cmp
dec
ja
filds
jno
adc
add
test
sub
add
adc
dec
push
lret
sbb
mov
das
mov
les
lahf
lods
enter
add
insl
add
add
xor
scas
mov
int3
loopne
sub
mov
mov
push
aas
mov
jmp
mov
lret
lret
dec
push
pop
ret
xor
jg
outsl
enter
and
xor
sbb
out
or
ss
xlat
xchg
test
orl
aam
imul
orb
sub
fidivs
call
mov
mov
xlat
push
sti
mov
rolb
jnp
lret
dec
lret
lret
and
push
subb
popl
or
call
sub
mov
sub
mov
mov
repz
sub
lods
and
add
jecxz
inc
push
jl
pop
mov
adcl
push
jmp
scas
mov
gs
icebp
test
in
loopne
iret
addr16
sub
in
add
jl
movsl
jle
mov
mov
neg
sub
push
les
sub
scas
aam
jg
lret
xchg
clc
arpl
jmp
jae
add
jmp
jg
in
mov
adc
xchg
repnz
pop
adc
ljmp
and
or
dec
add
xchg
bound
insb
push
xchg
into
roll
rol
mov
outsb
sbb
cmpsb
les
insl
iret
rcll
cmc
adc
daa
inc
clc
inc
leave
dec
add
aad
add
pop
in
or
insl
jnp
aad
and
add
mov
cltd
mov
inc
dec
adc
loopne
lods
push
inc
and
mov
ret
mov
mov
je
nop
pop
adc
push
rorl
adc
mov
dec
push
inc
xchg
push
movsl
lret
push
pop
sub
dec
mov
push
push
ficompl
call
inc
outsl
shl
pop
and
mov
xor
push
jmp
cmp
mov
pop
xlat
arpl
sbb
cmpsb
ja
cwtl
push
shrb
cli
mov
adc
outsl
in
and
mov
cwtl
fimull
push
popf
outsl
add
ljmp
out
setnp
cmp
xor
pop
bound
not
or
xor
sub
push
mov
adc
adc
inc
scas
or
jp
mov
xchg
mov
fmuls
sbb
imul
or
dec
mov
cmp
mov
jecxz
jae
ss
test
popa
dec
jle
pop
jecxz
jnp
sub
mov
adc
pop
in
and
adc
push
xor
jmp
add
xorb
jns
push
mov
ds
pop
and
sbb
xor
sbb
add
rcl
xor
repz
cltd
push
ret
dec
es
pop
mov
fisttpl
out
outsl
jge
mov
xor
xor
push
fstl
pop
inc
xchg
scas
adc
leave
jb
jnp
fldcw
ret
mov
mov
push
jl
ja
cwtl
add
cld
or
mov
pop
dec
mov
test
cmp
inc
lods
xchg
push
mov
sub
jmp
dec
pusha
add
pop
enter
divb
aas
cmpsl
ret
jnp
adc
inc
mov
jge
cmpsb
sbb
in
test
ja
pushl
ljmp
cltd
pop
imul
add
mov
les
adc
mov
loop
mov
lret
cmp
pop
pop
popf
sbb
jno
cmpsb
lea
popf
fldt
cmpsb
mov
inc
addr16
inc
movsl
and
or
into
outsb
insl
pop
pop
cltd
cmpsb
subl
sub
adc
outsl
mov
jae
dec
mov
mov
push
xchg
sahf
mov
fidivl
dec
add
lods
cli
sub
add
divb
push
mov
aam
add
xor
sbb
xor
push
in
test
stc
mov
sub
aaa
lahf
outsl
pusha
mov
into
scas
iret
push
out
adc
pop
fstpl
jmp
lea
mov
addl
mov
shrl
jge
repz
sbb
xchg
test
and
adc
popl
xor
ret
add
ja
loopne
imul
push
scas
adc
xchg
xor
cmp
jno
inc
push
sbb
push
gs
les
int
add
sbb
mov
or
imul
xchg
and
mov
adc
push
add
sbb
mov
movsb
repz
jecxz
jae
cmp
jno
test
pushf
pop
xor
mov
mov
mov
cwtl
and
scas
pop
leave
cmp
rcrl
fwait
icebp
inc
jecxz
sbb
add
and
lea
lods
iret
fwait
push
mov
addr16
stc
nop
into
push
orb
dec
jo
mov
push
mov
imul
mov
xchg
jno
cmp
gs
mov
cmp
pop
mov
lahf
addl
aaa
scas
pop
adc
jp
mov
dec
or
aas
push
and
lret
or
int
and
jl
arpl
jl
pop
movsb
shrl
cmp
decb
aad
jle
push
in
mov
jmp
jns
inc
or
add
outsl
shll
test
gs
shll
mov
cli
lret
pushf
scas
mov
fwait
push
dec
jo
iret
inc
xlat
ret
mov
stos
mov
nop
pop
lea
and
fldl
sub
popa
ficoms
dec
add
lret
cmp
or
adc
push
mov
mov
pop
fs
adc
dec
pop
pop
sbb
sarb
xor
js,pt
pop
stc
sbb
jno
in
scas
adc
push
jl
subl
out
or
lahf
cwtl
stc
add
jns
addl
pop
jge
decl
mov
jle
jmp
xchg
shl
pop
cmpsb
mov
adc
xor
add
and
pop
mov
roll
lds
pop
mov
or
push
ds
lcall
sbb
cmp
lret
pop
pop
je
push
mov
fistps
cltd
scas
sarl
pushf
cltd
dec
push
pop
out
jl
sub
xchg
sbb
cmpsb
outsb
add
lods
lret
icebp
cli
xchg
fwait
mov
ss
mov
jne
and
out
int3
jg
or
cmp
cltd
pop
fcoms
mov
or
std
cmpsl
repz
inc
in
push
mov
and
in
sub
sti
mov
addr16
arpl
jo
or
dec
nop
xchg
fistpl
sub
mov
pop
push
push
mov
pop
jae
enter
ret
stc
xor
nop
and
mov
iret
cmpsl
mov
push
scas
and
cs
dec
je
cmp
cmp
stos
sub
adc
sbb
mov
mov
xor
cmp
cs
inc
cwtl
cmp
ljmp
outsl
jnp
jns
mov
mov
dec
mov
xor
add
adc
mov
xchg
test
je
lock
cltd
js
dec
jne
and
sbb
cld
pusha
roll
mov
mov
pop
fcomps
sub
pop
or
add
push
shrb
mov
ret
cltd
xor
and
dec
sbb
out
dec
xor
jne
mov
icebp
mov
icebp
inc
test
mov
mov
mov
xchg
lds
jbe
jno
mov
jmp
int3
pop
mov
nop
mov
lods
add
and
or
cs
fmul
push
icebp
mov
cmp
popf
fdivs
pop
dec
sub
mov
sbb
int3
mov
and
add
xchg
mov
adc
cli
and
sbb
stos
mov
lahf
sub
insl
jmp
pop
lea
and
and
std
rcll
mov
jmp
jne
add
push
inc
or
call
addr16
add
iret
xor
inc
jbe
mov
repnz
cmp
out
sahf
stc
push
std
out
stc
sub
data16
loopne
add
cltd
xor
pop
xor
outsb
inc
xor
or
adc
push
xchg
adc
mov
sub
in
jl
mov
lret
xor
cmp
mov
sarl
gs
xchg
ret
outsl
fidivl
mov
bound
xchg
inc
mov
nop
xchg
add
inc
pop
add
pop
mov
out
xchg
push
popa
call
clc
dec
ljmp
push
xor
mov
add
jg
cmpsl
mov
jno
addr16
sub
xlat
fdivl
mov
add
add
jno
into
xchg
dec
mov
cltd
rcr
out
cli
add
lods
cmp
xchg
ljmp
lods
or
loope
cmp
push
in
dec
inc
pop
push
mov
mov
fldenv
sub
sub
push
in
test
addr16
lret
xor
cmp
jnp
cmp
pop
push
pop
xchg
cs
jno
inc
insb
mov
cs
popf
pop
lret
popf
shrb
imul
icebp
push
hlt
sbb
rol
jnp
out
into
mov
inc
adc
jbe
and
add
rdpmc
mov
push
inc
mov
scas
lods
sub
add
sbb
dec
inc
inc
push
xor
and
mov
ffree
leave
imul
add
adc
daa
scas
lock
daa
mov
jns
mov
pop
cmpl
bnd
negb
notl
cmpsl
out
and
lcall
mov
push
adc
into
xor
adc
push
fwait
rorb
sub
lea
les
in
adc
inc
jmp
mov
ret
pop
inc
push
push
rcrb
and
sub
mov
mov
push
inc
imul
push
idiv
out
lcall
and
test
aaa
ja
fwait
dec
cmp
sbb
dec
xchg
pop
in
roll
xor
jnp
inc
pop
and
pop
hlt
mov
imull
cltd
sbb
sbb
pop
jecxz
or
sub
out
nop
lret
and
push
push
icebp
in
test
xchg
dec
inc
xchg
out
bound
mov
ror
arpl
mov
xchg
das
popa
pop
cmpsb
out
inc
pop
xchg
jb
ret
push
xchg
mov
push
adc
pop
jbe
sbb
xchg
lock
fildll
hlt
push
pop
imulb
add
call
push
adc
push
lahf
call
xchg
adc
nop
sti
ja
sub
mov
adc
repnz
cli
push
mov
es
inc
test
call
mov
leave
ljmp
ljmp
pushw
cmp
test
add
sbb
xchg
mov
mov
jp
lods
cltd
xchg
loop
dec
subb
mov
add
sysret
mov
pminsw
adc
jnp
push
cmp
inc
popf
in
mov
addl
sarb
mov
pop
jge
push
adc
stos
arpl
jne
aam
aaa
fsts
movsl
lock
add
mov
mov
jle
sub
push
sbbl
in
stc
push
jp
mov
andl
mov
popa
inc
and
into
pop
in
cmp
into
xchg
xor
jne
fstps
sbb
cmc
mov
pop
ja
lret
sub
dec
in
xchg
xchg
sub
pop
sbb
adc
daa
inc
pushf
mov
mov
mov
or
pop
cmpb
add
mov
jo
andb
add
push
jle
push
test
sub
out
data16
cmp
dec
mov
iret
addr16
in
pop
js
xchg
nop
adc
outsb
pop
sbb
cmp
or
mov
dec
sbb
inc
out
les
mov
fsubl
xor
bound
adc
enter
adc
push
and
call
lods
xchg
stc
fstps
sbb
xchg
jl
pop
fldl
mov
fcomp
ja
mov
sahf
or
push
dec
pushf
adc
gs
jne
dec
mov
idivb
push
inc
je
icebp
in
sbb
out
loopne
fsubr
jmp
push
jmp
cmc
lods
rcrb
sub
xlat
int
pop
and
jae
add
je
push
dec
bound
fistpl
and
stc
add
xchg
int3
xchg
cmp
shlb
in
pop
ljmp
sbb
rclb
cmp
mov
mov
mov
fistps
repnz
xchg
notb
mov
loopne
dec
in
cmp
cli
daa
or
aas
cwtl
mov
mov
mov
cmp
je
jecxz
aaa
js
out
inc
cltd
pusha
adc
cmp
or
cmp
jns
cmp
jge
xchg
aad
mov
leave
dec
inc
jg
inc
xor
mov
push
push
cmp
into
shll
xchg
jae
cwtl
ss
insb
inc
xor
lcall
mov
mov
in
out
enter
cmpsb
push
iret
and
or
xor
ss
lret
jno
out
int
insb
xchg
divb
imul
jmp
jae
test
hlt
dec
gs
mov
pop
loopne
shll
arpl
in
mov
inc
js
jne
adc
rolb
fisttps
sbb
aad
sub
jmp
cmpsb
push
in
iret
push
shll
xor
adc
jg
and
lods
scas
daa
jmp
dec
jbe
sbbl
pop
or
test
or
mov
inc
rcrb
sub
pop
push
and
mov
aad
jecxz
lds
popa
loop
dec
and
push
test
cmc
lcall
mov
add
xor
jae
out
ret
fdivl
ljmp
js
inc
popa
mov
sbb
or
inc
lret
in
xchg
hlt
jne
iret
or
push
xor
loopw
lods
popa
les
and
fisttps
jb
nop
rorb
ljmp
fwait
daa
call
in
push
arpl
cld
ja
cmp
xchg
xlat
sub
out
ss
ljmp
je
dec
stos
pop
xchg
inc
jl
sub
popf
movsb
dec
notb
incl
cmp
lods
sub
addr16
aaa
or
cmpsb
adc
mov
jbe
sub
sbb
inc
push
xchg
lock
sbb
mov
pop
clc
mov
inc
inc
outsb
pusha
aad
in
mov
fimuls
jno
push
shll
add
pop
and
pop
arpl
test
addr16
adc
pop
and
int
cmpl
mov
pop
stos
mov
sbb
xchg
cli
out
or
or
push
enter
mov
rorb
push
dec
fdivrl
leave
adc
mov
in
sub
ja
mov
lahf
sahf
jae
lret
ljmp
imul
in
cwtl
in
dec
cmp
mov
jnp
fwait
cmpsl
or
cld
sbb
dec
sbb
ja
jecxz
and
aam
inc
mov
xchg
mov
jmp
xchg
fistps
xor
scas
inc
fstp
jmp
dec
mov
fistpl
push
outsl
jg
and
jne
shrl
mov
cvtdq2ps
sub
and
pop
adcl
xchg
shrl
jecxz
push
pop
sub
iret
pushf
or
loopne
das
adc
dec
adc
rorl
lea
lods
add
inc
clc
loopne
inc
pop
rcrb
leave
mov
icebp
insb
add
mov
xchg
icebp
or
pusha
js
out
call
add
rorl
cld
shrd
xchg
and
jmp
cmp
xor
int
sbb
aad
scas
bound
adc
jae
loopne
cmp
mov
xchg
test
xor
sub
push
cmc
pop
mov
or
fdivp
fwait
mov
jns
inc
or
popa
jo
cli
sub
mov
dec
xor
mov
es
pop
cltd
loopne
push
jb
outsb
mov
repnz
xor
insb
leave
movl
js
imul
popa
cmp
mov
jo
repnz
test
xchg
xchg
stos
cmpsb
xor
in
lcall
add
fistpl
xor
pop
mov
inc
mov
icebp
ret
imul
mov
in
je
and
stos
inc
out
inc
cmp
addr16
fwait
aaa
push
aad
mov
mov
out
adc
jno
in
inc
or
in
fstpt
sub
mov
ss
dec
and
hlt
xor
ret
push
sub
adc
ss
and
int3
mov
jl
xchg
xor
push
stos
lods
test
test
lret
adc
mov
fdivs
nop
shll
leave
out
cli
or
pop
jecxz
mov
fs
aas
iret
pop
out
xor
xlat
sarb
shll
movsl
or
rclb
sbb
arpl
mov
into
sbb
test
sbb
cmp
cmp
mov
rcrl
jns
test
imul
imul
pop
sbb
clc
cmpsl
xchg
into
add
scas
lret
mov
aam
push
inc
movsl
mov
mov
arpl
xor
sub
mov
push
xor
xchg
ja
subb
push
cmp
cmpsl
leave
push
in
mov
in
mov
or
cwtl
and
mov
ds
cmpsb
repz
ret
cmp
xlat
jo
ret
xchg
fidivrs
cmp
fwait
add
add
test
inc
mov
dec
add
jp
fsubs
fistpll
mov
and
xchg
mov
imul
in
or
inc
inc
mov
xchg
test
out
mov
lock
fldlg2
mov
test
jo
cmp
jno
leave
add
in
mov
pop
mov
sub
xor
mov
inc
fstpl
test
lahf
adc
jge
pop
rorb
and
push
push
cli
mov
cmp
dec
fdivs
inc
shlb
push
mov
adc
xor
ret
dec
insb
ljmp
aam
sar
out
dec
sbb
test
xchg
lods
add
cwtl
mul
sub
in
ds
flds
mov
cmp
out
add
xor
and
mov
push
jae
fsubrp
push
and
ljmp
mov
xchg
sbb
xchg
pop
jns
icebp
cmp
jae
idiv
and
hlt
push
and
or
jmp
xchg
bnd
and
mov
push
mov
or
test
sbb
fs
add
mov
pop
mov
sub
sbbb
and
or
bound
inc
adc
in
xor
cmp
fstpt
ds
outsb
ret
aam
testw
xor
mov
cli
xor
or
out
xor
and
negb
lret
fimuls
adc
out
movsb
fwait
xchg
jae
cmpsb
stos
clc
aaa
push
mov
les
xchg
ss
dec
ja
add
inc
clc
test
mov
in
adc
daa
das
adc
add
icebp
or
aaa
dec
jge
push
cmpsb
adc
cmp
lds
in
jnp
scas
sub
in
and
in
cs
das
addr16
xchg
jge
repnz
and
dec
lods
int3
sub
inc
pop
cld
xchg
mov
rclb
hlt
mov
dec
sub
add
cli
xor
push
xor
xor
outsl
cmp
add
leave
gs
into
data16
dec
xor
test
or
loope
add
dec
or
mov
cmpl
push
test
xor
lds
adc
xchg
lds
fistpll
dec
inc
mov
xor
adc
adc
outsb
sub
push
std
mov
xor
sub
mov
jb
add
push
test
bound
lea
in
cli
stos
ret
repnz
fsts
lds
fstps
push
pop
mov
lods
ss
dec
inc
or
ficoml
mov
adc
mov
popf
pop
sub
stc
inc
ret
popf
loope
fistpl
pop
outsl
fiadds
fldl
aaa
popa
mov
mov
xorb
jecxz
xchg
lcall
enter
pop
cltd
xchg
xor
in
ret
pop
icebp
xor
mov
fcmovbe
sti
ja
ja
lods
push
insl
mov
dec
loopne
pop
mov
popa
imul
xor
and
addr16
push
cmp
pop
inc
sub
arpl
into
cmp
sub
mov
out
mov
adc
aad
add
jo
pop
push
lcall
push
out
test
les
hlt
pop
fwait
and
cmp
mov
sub
xor
mov
push
repz
pushf
leave
mov
rorb
fsts
ja
fstps
daa
push
mov
mov
stc
sbb
jbe
pop
push
lods
imul
mov
cld
xchg
add
mov
addr16
lods
jmp
bnd
mov
mov
out
inc
or
inc
dec
arpl
out
scas
inc
jle
jp,pn
mov
in
push
adc
pushf
idiv
lcall
push
int3
sub
sub
adc
dec
sbb
mov
inc
sbb
cmp
adc
fnstenv
mov
and
mov
sbb
add
sub
gs
push
test
shl
rclb
clc
inc
xor
sti
sbb
pop
lret
sti
insl
xchg
into
jne
les
out
and
inc
mov
shr
adc
js
cmpsl
fstl
ret
mov
sbb
aam
pop
push
aad
pushf
cmp
scas
pop
jbe
call
movsb
iret
pusha
pop
inc
jmp
add
je
mov
cwtl
adc
fidivrs
loop
adc
icebp
jle
subl
pop
pop
cmp
cltd
adc
cmp
sub
add
mov
mov
add
inc
testl
xor
scas
push
int
fwait
jne
jne
mov
arpl
jne
int
sti
or
mov
adc
loopne
cmp
hlt
sbb
enter
xchg
adc
push
testl
sbb
out
adc
pop
rcrb
or
pushw
and
push
or
fdivrs
repnz
test
jp
mov
cmpsl
sbb
mov
mov
push
aaa
enter
outsb
inc
lock
dec
je
sbb
pop
mov
xchg
shr
dec
aad
xor
adc
testl
mov
xchg
jb,pn
insl
shlb
sub
push
jl
iret
adc
out
sahf
mov
mov
lock
xorb
cmp
xchg
fdivl
sahf
sub
or
fsubl
mov
cmpsl
popf
pop
xchg
sarb
sbb
pusha
out
clc
pop
stos
test
mov
aas
adc
and
clc
push
xchg
pop
lret
dec
ret
adc
ja
sub
or
icebp
xor
or
pop
mov
xor
lret
xchg
lods
iret
sub
dec
into
fcomps
push
in
imul
xchg
std
repnz
adc
jp
out
pop
enter
jle
sti
dec
mov
inc
sbb
or
pop
decb
push
inc
cli
xorb
add
xchg
dec
xor
fmuls
xchg
pop
cmp
cmp
repnz
ljmp
inc
cld
loopne
push
orb
addr16
mov
rcrl
sarb
or
xchg
popa
ret
push
mov
xorb
fwait
out
jo
leave
shl
daa
jmp
shrb
sub
es
pop
pop
addr16
or
je
push
popf
adc
ret
cmp
mov
inc
lods
push
cmp
jo
mov
daa
jle,pn
lret
pop
fwait
dec
mov
pop
punpckhbw
fisttpll
xchg
add
loop
ljmp
cmp
fimuls
arpl
popf
pop
xchg
outsl
jnp
lcall
sahf
cltd
ja
xlat
call
ss
movsb
lds
mov
int
aad
in
xor
jmp
pop
aam
cmpsb
sub
sbb
or
scas
push
cmp
fbld
lcall
mov
sahf
in
sbb
imul
cmp
add
mov
fisttpll
subl
int
mov
bnd
jmp
lods
test
aad
and
and
cwtl
sub
or
pop
pusha
ret
and
bound
scas
or
cmc
adc
lds
fidivs
push
sti
iret
mov
clc
les
cld
sub
and
std
jg
in
fsubs
add
pop
xor
adc
je
sahf
xor
js
jg
test
adc
jno
popf
iret
lahf
sub
inc
fldenv
mov
fs
test
xchg
jle
add
aam
dec
out
cmp
das
pop
mov
mov
and
lods
pop
movsl
cltd
and
jae
and
outsb
cmc
push
lret
inc
xchg
jno
es
push
lock
rcll
sbb
mov
test
mov
jmp
jmp
push
cli
sub
outsl
lret
jne
outsb
xchg
gs
mov
daa
dec
or
add
mov
add
aad
in
rorl
std
call
xchg
imul
movsb
shlb
lret
mov
cli
popf
int
loopne
push
or
std
fs
es
ljmp
mov
popa
pop
es
in
dec
mov
add
xchg
cltd
dec
jl
or
shll
rclb
mov
sbb
icebp
push
pop
outsl
subb
cli
cmp
loop
lods
mov
sub
sub
loopne
in
insb
pop
adc
lock
sbb
adc
loopne
push
mov
cmp
inc
sti
je
pop
dec
ret
pop
stc
mov
lret
js
cs
stc
es
rorb
das
ja
cmc
pop
sti
out
aam
sbb
cs
negb
sbb
or
sbb
cwtl
sbb
pushl
mov
add
rclb
mov
xchg
pusha
int
bound
inc
mov
add
pop
icebp
mov
int3
rcpps
test
loopne
aam
dec
ljmp
mov
pop
push
aaa
fsub
in
mov
sbb
ja
and
adc
xchg
xor
xchg
mov
adc
push
sub
or
dec
data16
nop
adc
xor
rcpps
rcll
sbb
jecxz
ret
stos
fists
repnz
jp
pop
push
push
mov
sbb
xor
scas
mov
lret
and
in
enter
push
rclb
int
stos
cs
in
clc
lock
dec
and
mov
fidivs
sahf
scas
jmp
ss
dec
adc
or
cltd
mov
pop
in
push
lret
nop
in
and
inc
jns
or
out
rcll
es
aad
adc
test
aam
daa
ss
lea
jl
icebp
sbb
shrl
ljmp
xchg
jge
jg
inc
jmp
add
mov
jg
cmpps
mov
jmp
inc
ret
push
pop
gs
cmp
and
push
movsl
push
fimull
fidivs
mov
mov
call
pusha
inc
add
and
pop
imul
rorb
dec
das
xor
push
cltd
mov
les
cmp
or
addr16
mov
aam
push
insl
inc
sbb
add
imul
orl
add
mov
test
insb
add
add
sti
xor
popf
xchg
stos
xor
jnp
and
and
and
mov
scas
divl
js
out
dec
cld
mov
pop
lock
add
adc
aas
cmc
xchg
leave
mov
xchg
and
push
shll
mov
adc
movsb
sub
xchg
mov
lret
sub
dec
cmpsl
pop
xchg
pop
lret
adc
push
jge
sbb
in
mov
sub
xor
inc
test
arpl
pop
mov
daa
fidivl
pop
cwtl
aaa
mov
pop
leave
mov
popl
pop
fmull
popa
jmp
lret
or
push
ds
sahf
in
xchg
inc
cmp
fxch
sahf
push
ret
lret
inc
and
or
aad
jl
mov
mov
insb
stos
sti
lret
in
push
or
add
lret
or
inc
loopne
mov
adc
in
test
fistpll
xchg
js
pusha
cmpsl
and
in
pop
and
leave
movsb
and
fidivrs
cs
test
mov
pop
pusha
repz
dec
in
bound
pop
sbb
inc
loop
popa
sub
push
leave
add
mov
popa
push
lahf
cmpsb
or
xor
popf
lahf
sbb
test
fildl
pop
shr
and
ror
ja
aaa
mov
aam
push
jg
bound
sub
inc
es
jmp
jb
in
test
inc
adc
mov
subb
jo
aam
sahf
mov
add
sahf
cmp
xlat
dec
addb
pop
or
cli
imul
lock
pusha
outsb
mov
jb
sbb
movsl
aad
sub
sbb
aam
dec
add
stos
jbe
loopne
mov
and
add
sbb
sbb
mov
loop
mov
lcall
sbb
lret
imul
and
out
sub
lods
scas
or
popf
xor
or
mov
in
mov
in
jb
movsbl
in
jp
ljmp
xchg
pop
js
xchg
shll
int3
jae
subl
in
jns
ljmp
icebp
and
pop
fdivs
xchg
mov
mov
outsl
sbb
sbb
pop
sub
adc
pusha
jnp
and
xorl
mov
outsl
scas
add
mov
push
lcall
sub
or
mov
cmpsl
push
mulb
xor
lahf
or
les
inc
adc
pop
imul
shll
and
imul
sbb
sub
pop
xchg
test
fidivs
stos
out
xchg
je
jbe
iret
test
jl
lods
loope
jae
repnz
and
roll
push
mov
mov
push
xchg
adc
outsb
xchg
sbb
test
dec
dec
inc
mov
pop
in
cld
insb
mov
cmp
test
add
int3
insl
xchg
bound
mov
push
mov
cmp
in
aas
outsb
xchg
fcoml
push
lcall
mov
mov
xchg
and
lea
pop
mov
pop
push
mov
repnz
loopne
or
je
imul
jg
lret
mov
movsl
cltd
mov
or
loopne
out
and
mov
fwait
cs
push
sub
les
sbb
out
xor
mov
mov
mov
mov
inc
shll
fidivs
lret
jle
daa
int
mov
shll
loope
sub
test
insl
and
addr16
mov
scas
pop
xchg
dec
lds
jg
sub
mov
ja
outsl
mov
cli
mov
or
jns
mov
jmp
jg
lcall
mov
int3
test
adc
les
test
lds
jecxz
push
sub
xor
mov
in
movsb
cs
in
push
mov
adc
push
sub
out
or
cmp
inc
sub
sar
pusha
push
fdiv
mov
push
rclb
push
in
aaa
and
gs
arpl
out
jnp
xchg
sub
ret
jns
pop
xchg
sbbl
sahf
lahf
push
adc
fisttps
rcr
adc
in
lods
xlat
adc
push
jbe
or
std
in
aas
in
outsl
and
divl
pop
into
gs
in
pop
xor
inc
je
adc
xor
cmp
cmc
cld
pop
pop
adc
mov
jge
jmp
incb
cmp
stc
lock
pop
inc
push
ret
data16
xchg
mov
sarl
sub
mov
mov
or
sbb
or
dec
xchg
push
cmp
push
sbb
adc
mov
sahf
sbb
jnp
sarb
hlt
sar
pusha
arpl
stos
add
aas
jbe
in
lcall
add
fbld
cwtl
pop
mov
xchg
sbb
lea
push
cmovg
sub
mov
test
aaa
fsubrl
inc
pop
sahf
sub
add
arpl
sub
aad
out
scas
rol
fstps
ds
insb
mov
cmp
add
imul
out
xchg
dec
or
sbb
jmp
or
jae
push
rclb
fnsave
jl
or
mov
lea
sub
ret
inc
mov
push
pop
loop
movb
das
adc
pop
pop
push
and
xchg
add
inc
or
or
xchg
paddsb
xor
pusha
cmp
xor
bound
push
test
jno
popa
inc
jmp
pop
dec
jl
int3
mov
fisttpl
jle
gs
xor
and
pop
lods
repz
out
shll
out
fnstenv
mov
jg
cmp
je
or
cmp
inc
xor
jnp
lcall
sub
mull
jbe
inc
add
or
fwait
dec
mov
jmp
hlt
lcall
repz
popa
loop
icebp
xchg
orb
fincstp
xchg
into
lret
mov
in
mov
pop
mov
rcr
add
scas
aas
std
push
mov
roll
mov
jmp
insl
xchg
daa
jae
test
xor
add
int3
adcl
inc
fwait
pushf
fistps
vpavgb
mov
mov
scas
or
scas
inc
outsl
in
arpl
pop
jl
sbb
lcall
mov
or
mov
xchg
loop
aaa
orb
sub
mov
out
pusha
push
sub
jnp,pt
jp
rcrb
mov
aas
popf
push
fs
sub
stos
cmc
pushf
push
adc
lock
and
mov
and
mov
lea
and
daa
loope
cmc
xor
rorb
cmp
pmuludq
dec
jbe
add
cmp
fiaddl
out
jl
outsb
add
sub
mov
jle
jnp
push
add
xchg
insl
or
cmpsl
rorl
fcmovne
and
pop
add
bound
in
daa
sub
pushf
rolb
sbb
mov
cwtl
add
fcompl
loope
jl
loopne
shrb
bsr
pop
xchg
mov
mov
and
mov
pop
shrb
ljmp
and
push
push
sahf
bswap
out
dec
jge
mov
cwtl
sbb
add
push
dec
jno
nop
add
sahf
sub
stos
sbb
lods
out
sbb
scas
aaa
xchg
and
incb
addr16
cmp
fdivs
and
push
push
insl
inc
jp
in
cmp
xchg
ret
dec
push
clc
dec
dec
mov
xchg
xor
mov
jmp
lods
movsb
mov
and
xchg
loop
stos
xchg
and
cmc
cld
add
adc
cvttsd2si
sti
xchg
pop
and
insl
lock
push
sti
es
push
pop
sbb
into
mov
stos
xlat
icebp
stos
jns
into
std
mov
push
mov
add
cmpb
or
xchg
mov
mov
mov
xchg
mov
sbbl
bound
fwait
rclb
push
mov
push
in
mov
xchg
std
les
push
inc
sbbl
mov
sub
mov
xchg
push
and
out
cmp
in
mov
mov
inc
pop
pop
in
push
scas
in
ficoml
out
pop
mov
pop
in
sbb
fmulp
loop
sbb
sub
out
data16
stos
lock
cmp
ljmp
fstps
adc
jl
out
das
pop
mov
push
imul
mov
sahf
pop
cwtl
inc
mov
add
fists
dec
insb
icebp
test
in
push
push
inc
daa
popf
daa
lret
setne
xor
rorb
mov
dec
cmc
pop
and
or
repnz
test
sbb
dec
shrb
mov
cli
mov
jle
mov
pop
lret
sub
and
add
cld
rclb
cwtl
and
repnz
andl
sub
iret
jl
mov
shl
xchg
sbb
mov
sahf
aas
inc
lods
and
arpl
adc
fdivs
fcomi
cmpsl
mov
shrb
subl
inc
ret
jbe
mov
adc
int
mov
mov
test
push
jno
push
incl
push
mov
xchg
imul
ss
rclb
or
scas
orb
stos
add
sub
adc
loopne
in
das
out
and
gs
fisttps
inc
ds
shll
pushf
inc
fwait
mov
or
fdiv
or
adc
push
jmp
aas
pop
rcll
cmpl
loope
pop
test
fdivp
add
and
cli
mov
and
cmpl
hlt
sub
inc
push
push
cmp
inc
imul
cmp
sub
push
movsb
lahf
ljmp
dec
sub
lods
mov
adc
cwtl
lret
fistpll
mov
mov
mov
repnz
add
fldenv
rcrb
sub
cmp
rcrb
mov
xchg
push
stos
mov
stc
adc
xchg
lea
fsubrs
dec
jecxz
dec
rclb
mov
sbb
and
imul
dec
jge
cli
add
push
sbb
push
inc
mov
or
xchg
stos
rclb
mov
fildl
adc
in
fcomi
fs
mov
inc
shlb
scas
insb
inc
mov
mov
dec
add
pop
leave
ret
fnsave
jp
jg
inc
dec
dec
movsl
js
mov
pop
rclb
pop
and
jo
clc
jns
pop
popf
jecxz
add
mov
adcb
cwtl
push
leave
cmp
pop
push
jo
sahf
xor
mov
xchg
shll
lea
rcrb
testb
sbb
sub
cld
mov
in
out
jecxz
push
push
int
in
dec
mov
stc
pop
sbb
jge
in
test
movsl
xchg
mov
xchg
aaa
push
in
jmp
ffree
loopne
les
or
inc
cld
aad
movsb
or
push
or
jmp
shll
nop
pop
add
xchg
push
sbb
sbb
push
or
repnz
arpl
inc
pop
ficoml
pop
js
in
mov
cmp
mov
or
lods
sbbl
int3
out
sub
adc
mov
popf
jle
rcrb
xlat
data16
ret
in
dec
mov
fcoms
mov
int3
pop
iret
or
divb
cmpsl
es
xor
data16
mov
adc
jg
outsl
cmp
lock
mov
leave
mov
add
cltd
add
cmp
ja
mov
in
sub
push
or
mov
bound
mov
jns
stos
jnp
fcmove
pop
cmc
adc
sahf
jnp
icebp
int
adc
movlps
je
aaa
fsincos
enter
dec
or
shrl
mov
mov
sub
push
jge
fldcw
lret
pop
sbb
sarl
fsts
test
popf
mov
sbb
and
in
cmp
aam
sub
sbb
jnp
iret
sahf
push
jl
pop
insl
das
fsubrl
daa
pop
jae
dec
fs
or
or
data16
xor
add
daa
inc
lret
sub
push
pop
lods
add
cwtl
rcll
xlat
stos
or
add
mov
iret
mov
scas
test
ss
test
das
jmp
fstpt
jb
inc
xor
add
push
movsb
and
sub
cmpsb
or
xchg
test
leave
pop
sbb
mov
inc
push
test
add
push
mov
daa
adc
sub
cld
jmp
into
push
repz
or
or
cmpsb
clc
repz
adc
sbb
xor
sub
insb
mov
sbb
outsb
pop
outsl
mov
mov
rcr
outsb
xchg
inc
sub
aam
scas
out
mov
adc
mov
mov
push
add
incl
jge
sbb
mov
mov
or
dec
iret
popa
scas
outsl
test
flds
adcb
sub
ret
xchg
push
pop
cmp
xchg
add
repnz
decb
xor
pop
jge
push
pop
mov
out
in
imul
xor
adc
xor
lret
xchg
xchg
add
jnp
stc
sbb
leave
in
sub
add
loope
pop
inc
and
in
jae
lcall
in
sub
lcall
dec
mov
fsts
push
pop
mov
jne
fsqrt
adc
mov
out
mov
xchg
sti
insb
add
jle
lock
pop
ret
int3
jl
into
mov
add
or
ret
mov
imul
jle
push
loopne
mov
fwait
push
xchg
xchg
addr16
xor
add
push
xlat
or
sti
pushf
cs
mov
jo
pop
add
push
fbld
ret
inc
push
rclb
mov
add
popf
test
cltd
stos
and
div
insl
pop
rcrl
pop
andl
or
push
fs
xor
sbb
int
or
push
fnstcw
gs
or
push
jecxz
dec
mov
xchg
xor
jg
mov
ret
jae
sbb
scas
test
inc
adc
lret
lcall
xor
movsb
add
pop
adc
xor
js
cmp
lahf
or
pop
dec
push
jg
icebp
dec
dec
imul
add
adc
popa
pop
into
add
fmull
fsubrs
cmp
mov
pop
out
repz
mov
aam
outsl
xchg
mov
out
ss
jne
das
filds
dec
xor
insl
mov
xor
push
rcrb
scas
jns
mov
or
movsl
fildll
cmp
popf
mov
dec
inc
and
dec
scas
add
stos
cmp
gs
mov
lahf
mov
out
jmp
je
stos
sbb
pop
adc
mov
and
cmc
pop
out
cld
lods
fs
and
jo
pop
xor
mov
or
sar
imul
mov
add
lods
jb
jb
and
test
mov
mov
call
fdivs
lcall
call
inc
cmp
jne
push
aas
xchg
repnz
mov
adc
je
inc
and
hlt
and
pop
lods
fsubs
mov
mov
cmp
sbb
push
call
in
aad
test
lcall
push
int3
cmp
xchg
inc
stos
in
mov
mov
movsl
mov
pop
lret
stc
inc
or
int
xchg
data16
cmpsb
hlt
push
movsl
mov
push
loope
call
in
testb
aam
push
sub
and
shr
cmp
cmc
xchg
push
mov
or
in
lods
pop
mov
outsb
nop
push
xchg
mov
lcall
cld
mov
ss
stc
scas
xchg
scas
in
push
xchg
outsl
mov
pop
cmpsl
jns
dec
aad
mov
push
mov
pop
pop
sbb
inc
sub
insb
into
popf
fabs
xor
push
dec
das
jmp
sar
int3
cwtl
or
push
jmp
push
fdivl
pop
dec
add
sbb
push
mov
xor
nop
in
jno
divl
cmp
pusha
aad
cmc
xor
cmpsb
mov
push
repz
cli
es
pop
mov
das
cmp
sar
pop
testl
or
cmpsl
popa
or
into
pop
mov
dec
les
sub
gs
xchg
push
cmp
frstor
inc
arpl
call
testl
fcomps
cmp
or
sub
ret
loop
stc
mov
mov
mov
addl
and
test
adc
jo
cmp
mov
push
ret
lahf
sbb
sub
or
add
push
lods
xchg
test
mov
and
in
mov
mov
push
jnp
sbb
lret
mov
outsb
pop
out
out
in
das
dec
rorb
movsl
xchg
test
mov
pop
addr16
or
xchg
add
pushf
inc
in
mov
fwait
stos
dec
shrl
shr
mull
shll
fmuls
add
push
xor
xor
test
and
in
and
xor
in
call
inc
xor
stc
std
inc
lahf
pop
push
cld
push
xor
loopne
bound
pop
lret
adc
xchg
pop
or
les
lock
or
adc
arpl
sub
mov
outsl
imul
lcall
cwtl
sbb
out
daa
lods
jnp
lahf
shrl
dec
inc
inc
in
bnd
js
add
movsl
sbb
push
mov
cmp
jge
mov
mov
sahf
mov
outsb
mov
popf
dec
std
in
arpl
fcoml
fwait
cmp
xor
sbb
loope
xchg
sbb
push
jo
pushf
scas
or
dec
andb
insb
pop
aam
dec
inc
push
aas
xchg
dec
ja
cld
mov
test
fs
mov
cmpsl
add
test
rorb
pop
xor
dec
jae
pop
loope
popa
lret
xchg
ljmp
scas
add
inc
fs
xchg
xorb
imul
xlat
lea
aaa
dec
adc
push
push
bound
ss
ljmp
push
push
rcr
aaa
lock
fdivl
cmp
aad
jge
outsb
cli
sub
in
jg
jmp
aam
pop
mov
push
out
or
xchg
inc
arpl
insl
sub
pusha
enter
shlb
fiadds
int
ss
and
mov
xchg
sbb
push
mov
jno
out
cmp
xlat
test
lods
xchg
adc
pop
stc
orb
push
lods
xchg
mov
fiadds
movsb
stos
mov
add
cmp
jge
imul
or
fs
and
cmp
jbe
cmpsb
add
iret
jp
mov
push
mov
cmpb
es
sbb
adc
or
push
into
inc
or
mov
dec
cmp
dec
xchg
mov
sub
shll
aas
xor
mov
lahf
int3
ljmp
sbb
jae
mov
or
sub
test
pop
or
call
clc
cmc
push
test
dec
ss
into
adc
dec
inc
bound
sbb
fs
ret
lret
and
or
adc
mov
sbb
mov
rep
fwait
xor
push
sbb
cmp
outsb
xor
out
arpl
and
lahf
cltd
aam
out
xchg
fs
pop
or
in
call
sub
pusha
pop
push
push
xor
arpl
ds
outsl
dec
jb
cmpsl
xor
or
int3
dec
sarl
int3
das
push
pusha
push
push
push
mov
dec
mov
push
dec
loope
rorb
jns
mov
jecxz
mov
lret
or
or
incl
add
add
pop
jl
ja
mov
xchg
cmc
daa
xchg
xor
jmp
enter
cmpsl
out
rep
jno
popf
xor
push
pop
call
test
inc
mov
push
in
cli
push
ficomps
adc
mov
inc
inc
xchg
sbb
pop
xchg
pop
incb
fadd
aad
repz
loopne
mov
or
add
or
andl
ss
idivb
jge
es
push
mov
xchg
out
aam
cmp
lea
int3
cli
inc
and
or
cmp
aad
stc
test
clc
enter
fsubl
xchg
and
dec
or
stos
mov
and
cmp
lods
rcrb
mov
fnstenv
mov
jb
pop
gs
leave
mov
push
loopne
out
rolb
sbb
xor
push
or
and
mov
xchg
ret
cltd
mov
data16
pop
loopne
xorl
rcrl
pop
mov
out
arpl
sbb
cmp
sub
stos
jno
fdivp
mov
mov
scas
xchg
addr16
xor
and
push
sbb
enter
xchg
fwait
out
xchg
xchg
push
add
xchg
lahf
in
test
push
xor
mov
xor
fcmovb
iret
flds
pop
fdivs
add
push
xor
mov
cmp
adc
das
dec
in
xor
das
pop
inc
sbb
in
fdivrl
gs
dec
add
inc
inc
cmc
mov
mov
outsb
jno
ficompl
push
lods
adc
lret
mov
xchg
rcrb
push
lock
movsl
adc
out
push
cmp
cmc
add
in
loopne
fisubl
xchg
insb
adc
pop
sarl
dec
or
dec
test
pop
dec
hlt
js
rorb
pop
inc
mov
sub
fdivrs
add
iret
dec
mov
je
push
xlat
mov
mov
sub
or
roll
pop
ret
inc
mov
sbb
into
call
mov
cmp
test
pop
lods
mov
mov
js
or
dec
iret
in
mov
inc
je
ss
lret
mov
add
xchg
push
sbb
insb
mov
mov
lret
dec
lcall
icebp
adc
stos
jns
outsb
push
or
pop
xor
sub
dec
out
dec
pop
dec
mov
in
fists
pop
xor
sbb
test
scas
xchg
mov
repz
inc
or
les
dec
xchg
adc
push
or
cld
jmp
into
in
daa
jge
inc
addr16
sar
ss
imul
repz
adc
or
push
mov
fsubrp
das
addr16
aaa
dec
testl
xchg
rclb
jnp
jb
pop
jne
and
ljmp
sbb
mov
or
cmpsl
mov
mov
sbb
jmp
wrmsr
fidivrl
push
pop
inc
or
psubb
push
inc
lret
popa
push
les
icebp
push
gs
ss
daa
xchg
push
mov
cmpsl
into
sub
inc
xchg
inc
clc
add
push
and
call
pop
jns
pop
fsub
ljmp
sbb
rcrb
stos
xchg
xchg
mov
fdivs
and
cmp
push
xchg
mov
dec
xchg
jnp
fwait
sub
pushf
das
xlat
jecxz
sbb
push
lcall
lcall
es
inc
or
addl
cmp
mov
push
and
dec
js
leave
inc
adc
jo
fstps
dec
pop
pop
mov
cmpsl
add
fdiv
inc
pop
aas
lret
outsl
xchg
cmpsb
mov
iret
lds
dec
add
jl
pop
pavgw
iret
pop
popf
push
mov
xchg
xchg
bound
daa
test
jle
cmp
mov
fisttps
inc
cmpsl
hlt
push
xor
movsl
mov
test
cmp
test
fcmovu
hlt
sub
push
xchg
dec
mov
sbb
pop
lret
cmp
pop
sub
xchg
cmc
shl
mov
sbb
std
jmp
push
mov
inc
enter
lock
pop
lods
inc
jno
lea
jae
sub
xchg
cmp
cmp
data16
das
ss
jl
ret
mov
mov
or
lods
ret
inc
push
or
jmp
pop
push
pop
iret
test
mov
repnz
mov
jno
mov
fst
add
testl
lds
sub
shr
lock
cli
lea
xchg
aaa
aaa
jecxz
scas
in
dec
shr
ljmp
inc
cli
cld
xor
dec
xlat
out
insl
push
lds
cli
add
bound
or
nop
and
or
jbe
lods
js
jp
insb
insl
por
cmpsl
mov
mov
mov
aad
rol
inc
nop
and
int3
cli
lea
jge
or
mov
mov
and
movsl
pop
mov
movsb
mov
push
sti
lods
cmp
jnp
popf
xor
add
push
stos
in
or
xchg
cld
test
ret
add
pushf
loope
dec
ret
ja
sub
adc
add
xchg
aas
add
mov
out
adc
push
outsl
mov
inc
mov
and
xchg
lock
fs
mov
push
cmp
loope
ss
jae
jae
mov
stos
insb
je
cmp
pop
icebp
dec
dec
testb
fdivrs
fucomi
or
mov
into
adc
mov
mov
sub
jl
popa
aas
fwait
daa
es
sub
jle
xchg
sub
inc
mov
clc
push
in
sbb
mov
xchg
mov
cltd
xchg
in
cmp
pop
lret
sub
xor
pop
nop
cmpsb
jns
cltd
xchg
fldl
les
or
inc
mov
jmp
testl
or
aaa
mov
push
dec
sahf
add
loopne
shll
pop
sbb
sub
sub
mov
jmp
stc
add
pop
mov
cmp
insb
sarl
push
add
mov
cmp
xor
jp
out
push
mov
subb
xchg
push
push
jle
mov
fcoms
jno
shll
pusha
les
mov
push
jbe
push
sub
inc
xor
xor
pusha
sti
mov
les
daa
or
subl
pusha
push
mov
and
lods
int3
push
pop
push
fcomps
stc
push
cmp
push
sbb
rcll
shll
mov
lds
mov
pop
mov
push
add
jecxz
mov
stos
cmc
cmpl
mov
sarb
aad
inc
mov
lret
pop
inc
pop
ja
lods
mov
or
sbb
fldenv
fdivs
outsb
les
hlt
out
rorl
lahf
ror
or
push
push
jne
cmc
xchg
push
dec
xchg
shrb
outsl
dec
xchg
mov
or
or
push
jp
xor
sub
jae
mov
aam
leave
sub
or
mov
mov
mov
mov
cmp
lock
mov
mov
add
into
mov
push
shll
mov
movsb
insl
push
add
push
int
lret
in
scas
in
outsl
dec
test
test
ret
ss
dec
fidivs
fsub
rcl
jno
xor
lahf
xchg
ss
popf
aam
dec
cmp
stc
jb
push
rolb
out
mov
dec
cltd
int
in
imull
jp
cmp
ljmp
movsb
add
popa
sbb
test
jae
lret
iret
push
push
dec
xor
ds
inc
cld
inc
lds
filds
xor
xchg
jecxz
dec
mov
lcall
cmp
loopne
or
mov
mov
in
mov
popa
ja
xor
push
cld
inc
popf
ffree
mov
sarb
outsl
pop
push
add
jg
pop
mov
xchg
push
mov
out
mov
lret
je
jecxz
push
sub
push
sbb
mov
fadds
xor
scas
pop
aas
into
stos
outsl
adc
repz
add
es
dec
dec
pop
sti
cs
ljmp
and
icebp
clc
jle
jecxz
leave
mov
add
clc
push
cmp
sub
mov
ficomps
loopne
or
dec
mov
xchg
mov
jb
xchg
lcall
gs
sub
pop
xor
je
add
je
addr16
call
inc
cmp
lods
pop
add
jle
sub
pop
xchg
ds
adc
adc
mov
mov
push
outsb
or
arpl
adc
mov
dec
rcr
div
lds
addr16
mov
and
ret
ret
or
popf
ret
mov
inc
inc
cmp
cmp
or
mov
popa
in
pop
jbe
repz
pcmpeqd
bound
aaa
fcmovbe
aam
mov
jne
push
cmc
or
jnp
mov
nop
daa
stos
ljmp
jmp
cmpsb
adc
adc
rcrl
or
into
pushf
fldcw
adc
das
mov
add
add
dec
pop
xchg
ret
pop
rcrl
push
jne
ja
and
push
or
sbb
sbb
ret
jnp
jb
je
cmc
xlat
aad
mov
lds
loopne
jmp
dec
jmp
xor
fistpll
cmpl
cmp
pop
in
dec
in
or
fldenv
popa
ja
push
popa
lret
lea
cli
scas
jno
out
inc
lret
cmp
inc
outsb
push
addr16
aam
std
bound
pushf
psubd
stos
in
test
cmp
scas
mov
inc
ljmp
repz
mov
arpl
xchg
movsb
imul
shll
int
push
xlat
jae
and
hlt
insl
fimull
ja
add
mov
sub
cmp
lret
or
enter
mov
imul
fsubrs
popa
popa
xor
push
and
mov
push
mov
sub
jge
xchg
movsl
pusha
jo
mov
insl
jb
pop
adc
and
push
add
out
int3
fnstenv
cli
jae
gs
pushf
inc
pop
xchg
icebp
pop
and
ljmp
add
ss
xor
scas
sets
push
cmp
popf
cmpsb
bound
mov
push
inc
jne
jp
scas
je
mov
inc
es
or
pop
push
cs
gs
popa
fsubl
repz
sahf
call
lock
adc
lock
xchg
pop
mov
dec
aad
into
in
inc
pushf
dec
adc
test
add
ss
or
fsubr
nop
push
lret
xchg
test
adcb
jl
or
repnz
leave
and
adc
push
sub
stc
rorl
or
loope
jecxz
mov
sbb
mov
sbb
xchg
xor
or
add
add
sbb
sbb
shl
daa
arpl
ret
movsl
push
xchg
jle
jecxz,pt
mov
lods
shlb
mov
mov
jmp
push
ja
sarb
stos
in
test
imul
mov
pushl
inc
sub
and
shll
mov
mov
xchg
cmp
pushf
dec
inc
hlt
jae
cmp
inc
cmpsl
ficompl
sub
xor
mov
outsb
mov
and
insb
cmp
imul
aaa
insb
push
add
xor
insb
aas
xchg
fs
rcll
dec
push
cmc
adc
or
lds
lea
ret
aad
cwtl
dec
ljmp
sbb
in
gs
or
inc
pop
sbb
mov
cmp
cld
dec
add
je
mov
mov
in
repz
pop
adc
add
jmp
adc
in
jns
data16
frstpm(287
iret
or
leave
xchg
and
jecxz
scas
dec
mov
out
or
mov
fimull
jne
mov
inc
int
lret
insb
push
xchg
fwait
mov
rorl
iret
fcoml
mov
jge
outsl
push
inc
mov
int3
imul
dec
sub
jns
adc
loop
arpl
stc
cmc
xchg
cmpl
add
addr16
es
pop
iret
loope
aam
outsl
jb
test
movsl
mov
fwait
jb
ja
fs
addr16
jl
xchg
loopne
mov
icebp
pop
movsl
mov
push
push
adc
bound
mov
ret
sbbl
adc
insl
enter
pop
cmp
xchg
mov
ret
loop
test
mov
sub
or
add
sub
aaa
mov
aaa
mov
and
testl
xor
in
or
scas
mov
mov
fld
jb
roll
xchg
xchg
xchg
adc
lret
jb
clc
mov
adc
cmpsb
cmp
dec
nop
rclb
inc
jb
xchg
fs
ja
iretw
add
faddl
jg
js
sbb
push
adc
pop
xor
push
mov
jbe
ret
xor
cmpsb
aam
mov
je
lock
leave
rcrl
push
out
test
ss
cmp
aaa
inc
sarb
inc
adc
cmc
leave
pusha
push
bound
shll
and
sub
jmp
dec
sahf
sti
xor
call
out
clc
jmp
xchg
add
fidivs
ljmp
mov
mov
cmp
xor
das
cmc
cld
das
rcll
cld
and
or
xchg
push
addr16
jnp
jbe
pop
inc
or
decl
jge
xor
pop
sbbl
scas
mov
scas
or
repnz
jl
push
xchg
in
movsb
push
mov
rorb
cli
ss
jno
hlt
dec
pop
xor
jns
orl
loope
mov
and
hlt
jle
mov
popf
sbb
and
outsb
outsl
imul
gs
adc
pop
push
jbe
sbb
xchg
dec
div
clc
pop
sbb
rcl
xor
nop
jl
fcomps
lods
movsb
jnp
in
sahf
mov
hlt
push
mov
outsb
sub
insl
cwtl
fxch
iret
cs
jne
subb
in
mov
and
ret
cmpsb
adc
pop
test
sbb
push
mov
std
xlat
fldcw
out
sarb
mov
sbb
sub
sarl
movsl
fsubrl
subb
push
mov
push
fldlg2
repnz
rorl
inc
in
ret
sub
dec
adc
lock
cmp
xor
scas
dec
add
mov
mov
popf
or
mov
push
scas
cmp
xchg
lret
xchg
dec
xor
mov
mov
or
jb
jno
xchg
and
mov
es
test
sub
or
mov
das
int3
fsub
outsb
cs
inc
lds
pop
or
shll
pop
cs
popf
push
adcl
jmp
jnp
adc
ret
hlt
lcall
mov
and
mov
and
popa
aam
addb
cmp
xor
push
inc
dec
cmp
into
arpl
dec
lods
int
inc
je
xchg
daa
xchg
mov
btr
pop
push
xchg
imul
aaa
cmp
xor
test
sbb
loope
pop
sub
sub
or
inc
pop
push
in
pop
jne
enter
hlt
shrb
lods
dec
push
in
cmp
pop
iret
cmp
nop
cmp
outsb
sbb
push
repnz
xchg
jb
movsl
daa
incl
fs
inc
sub
inc
inc
outsb
imul
xor
mov
or
out
rorb
fsts
nop
cltd
dec
sbb
cmpsb
mov
mov
fdivrs
test
or
sti
in
pop
and
dec
add
loopne
test
stos
push
jg
scas
push
sahf
stos
cmp
dec
or
xchg
mov
add
aaa
jae
adc
or
stos
pop
mov
cmp
jmp
add
adc
lock
enter
sub
xchg
fadd
mov
and
push
xor
call
shll
loop
int3
sub
inc
xor
fwait
add
aas
pop
icebp
ret
cmp
xchg
stc
sub
mov
pop
xchg
dec
and
jns
mov
iret
test
test
xchg
adc
inc
out
jg
insl
cld
lcall
xchg
int3
icebp
pushf
sbb
ja
dec
xlat
insl
idiv
lret
out
push
mov
and
dec
dec
push
fisubl
mov
and
adc
insl
mov
mov
outsl
ds
adc
les
std
inc
fwait
bound
xor
stc
xchg
mov
jb
pushf
movsl
iret
xor
pop
mov
test
sub
cmp
adc
push
pop
jg
jae
out
lock
xor
lods
mov
stos
mov
arpl
jb
popl
and
cmpsb
js
cmpsb
stos
es
shlb
mov
aas
in
mov
dec
lahf
imul
mov
cmp
loopne
mov
dec
ss
push
jmp
sub
nop
arpl
xor
push
nop
movsb
xor
outsb
hlt
js
mov
cwtl
lds
cmpsb
int
and
iret
dec
mov
outsl
cs
pop
jle
pop
outsl
xor
ljmp
push
adcl
lcall
jp
mov
jecxz
cmp
mov
xchg
xchg
xchg
mov
sub
inc
popf
jns
imul
in
sub
cmpsb
rcl
cwtl
les
or
jb
enter
in
push
popa
mov
add
sti
dec
lock
call
shr
outsb
add
push
andl
cld
incb
sbb
mov
cltd
ljmp
iret
insl
cmp
js
adcb
int
cmp
add
pop
jp
mov
daa
out
fnstsw
xchg
pop
mov
rorb
fldcw
xor
inc
and
cmp
roll
in
dec
and
or
enter
mov
scas
aas
or
idivl
insb
popf
aaa
adcb
in
pushf
rorl
mov
cmp
pusha
loop
scas
sbbb
and
pop
sarb
jge
rcll
mov
mov
fildl
fidivrl
push
adc
push
sbb
inc
out
mov
pop
cmp
cmp
orl
xor
cltd
push
push
xchg
in
out
inc
fidivrl
mov
stos
sub
mov
or
ret
jl
pop
in
subl
jle
mov
add
sub
mov
dec
mov
mov
sbb
pop
lea
or
gs
fidivrs
mov
insl
xchg
test
test
add
clc
int
push
inc
ret
cmp
pop
aad
mov
int3
inc
outsb
mov
bound
ss
xchg
js
jl
pop
xor
fstpt
adc
rcrb
mov
dec
cli
and
xchg
jg
in
mov
inc
fsubrl
in
xor
and
orl
push
mov
adc
sub
xor
and
dec
ficomps
fisubl
out
sbb
lret
mov
cmpsb
cld
je
pushf
bound
out
cltd
loop
dec
and
xchg
or
or
lahf
cmpsl
loop
lahf
mov
movsb
sub
dec
inc
push
push
ret
pop
or
mov
adc
out
push
movsl
test
aam
inc
cmp
enter
sub
jb
cmp
aaa
dec
xchg
pushf
jge
add
mov
fcomps
xchg
in
mov
test
pop
push
xchg
daa
mov
mov
inc
les
cmpsl
mov
inc
mov
adc
mov
mov
pop
sub
test
jge
mov
xchg
push
lret
adc
xor
cmp
out
jo
push
and
out
jbe
scas
xchg
lock
cmc
scas
xchg
mov
inc
inc
pop
in
cs
loope
mov
bound
push
pushf
test
add
push
jae
fistps
pop
ljmp
fcoms
into
rcrb
les
lods
add
mov
fistps
mov
movsb
pusha
test
std
jns
add
sub
adc
and
push
and
dec
xchg
cs
lret
shrl
jp
mov
loop
inc
pushf
sbbb
sahf
mov
or
push
cmc
and
xorb
inc
inc
mov
add
rcrb
inc
stc
xchg
mov
ret
popa
test
mov
xchg
test
or
jl
xor
push
cli
je
push
push
sub
push
adcl
clc
ja
fstpl
in
sub
clc
jns
shl
ljmp
into
cmpsb
dec
xchg
lcall
je
mov
mov
addr16
jne
xchg
js
testb
js
in
je
adc
ds
sub
push
pop
sub
sub
outsb
outsb
jle
loop
outsl
xchg
mov
push
xor
mov
dec
arpl
dec
popa
mov
xchg
cmp
xchg
clc
and
pop
mov
test
or
sahf
in
mov
jl
outsb
mov
ret
lods
jmp
out
push
xlat
xlat
decl
push
xchg
mov
mov
roll
add
inc
mov
insl
adc
dec
adc
add
inc
add
loopne
cli
pop
je
xorl
mov
push
mov
fisttpl
xlat
outsl
push
mov
clc
xchg
inc
mov
dec
pop
push
lea
xor
sbb
scas
ss
ret
push
out
jle
mov
add
mov
aaa
mov
adc
fwait
add
push
sbb
lret
and
ret
popf
push
fcmovb
call
push
jle
dec
or
sub
out
dec
insb
daa
aad
mov
outsl
push
clc
and
repz
jno
and
lds
xor
mov
int3
pop
incb
jno
push
mov
mov
sti
pop
dec
jne
jle
jp
jg
sbb
call
adc
in
mov
mov
push
pop
int3
stc
push
das
out
outsl
add
xor
out
pop
in
movsb
fisubl
push
mov
mov
mov
mov
test
push
inc
into
enter
and
fstpl
aam
xlat
shlb
mov
icebp
sbb
mov
negb
ret
pusha
clc
lret
adc
xchg
cmp
push
int3
stc
lret
xchg
mov
or
out
add
sbb
hlt
push
cmp
data16
inc
pusha
xor
xorl
sbb
jge
sub
jbe
mov
insb
jp
adc
xor
test
xchg
sbb
or
cmc
in
xor
mov
push
push
fsubp
cmp
mov
fcomi
les
cmp
lds
mov
sbb
ds
cmp
cmp
loopne
test
cld
es
xor
shlb
aaa
outsl
cmc
in
xchg
jno
jno
or
outsb
cmc
add
loopne
repnz
push
stc
subl
vmread
aad
mov
rol
adc
dec
pop
cmp
pusha
dec
push
jl
mov
sbb
cmp
mov
clc
jg
inc
push
test
out
dec
push
xchg
movsb
pop
cwtl
mov
xor
call
data16
jbe
cmp
sbb
mov
xchg
cmp
insb
popa
cmpsl
cmp
push
bound
add
push
test
jae
mov
adc
fwait
popf
mov
std
push
pop
hlt
adc
dec
mov
fs
jp
into
int
jp
pop
cmp
inc
out
dec
test
dec
mov
jno
pop
and
dec
repnz
and
xchg
cs
ja
loope
dec
or
mov
lea
mov
popf
mov
jge
push
sub
cmpsb
test
mov
mov
pop
movsb
outsl
das
nop
fldt
jg
xchg
sbb
mov
cmpsb
mov
out
pop
inc
aas
je
jmp
dec
inc
xchg
in
sahf
aaa
lret
ret
xor
fldcw
dec
pop
sbb
adc
ret
and
je,pt
fisubrl
bound
adc
int
mov
or
stos
imul
mov
std
fcmovne
gs
movsl
aam
jno
pop
mov
cmp
divb
fimuls
add
pop
repnz
loopne
xchg
xor
mov
adc
je
lock
mov
repnz
xchg
jbe
pop
jnp
add
jg
cmc
ret
mov
addr16
sti
mov
insb
test
sti
pop
data16
or
sub
loope
nop
and
add
sbb
push
cwtl
lahf
test
mov
sti
nop
xchg
jle
sub
jne,pn
stc
push
sbb
cmp
shll
incl
xor
or
cmp
jno
arpl
mov
jnp
pop
xchg
pop
push
pop
xchg
pop
sub
xor
cmc
or
shlb
adc
cmp
cli
xchg
out
mov
shr
pop
jmp
dec
adc
shrb
mov
pop
mov
stc
cmpsb
out
sbb
fisubs
outsl
mov
ja
leave
or
dec
sub
or
lea
lock
addl
mov
dec
mov
out
adc
xlat
push
push
loop
xchg
sti
add
sub
mov
test
int3
lret
testl
ljmp
push
insb
ja
orb
xchg
fmulp
and
push
pop
xchg
xchg
out
xor
out
insl
xchg
jl
in
or
or
mov
or
push
inc
xor
sti
pop
xor
and
iret
or
rcl
push
lret
inc
fsub
dec
push
movsb
and
sub
jl
sahf
jnp
lret
xor
pop
les
addr16
nop
pop
lahf
mov
add
lahf
lret
sub
xlat
pop
outsl
pop
mov
cli
test
in
into
inc
cmp
xchg
sbb
pavgw
jmp
xchg
ljmp
iret
inc
push
push
ljmp
pop
fwait
jns
jae
pop
dec
es
jge
sbb
cmp
fsubrl
push
pop
jns
inc
roll
aam
xchg
pop
std
mov
xor
sub
lret
data16
push
inc
repz
inc
push
fisttpll
cmp
repnz
jno
cvtps2pi
xor
fstps
xor
jnp
jge
jbe
mov
mov
add
fst
jp
aad
mov
mov
adc
repz
fsubl
es
jb
dec
sub
stc
jbe
les
cltd
fmuls
mov
imul
movsl
ds
fstpt
popa
or
or
leave
popa
fdivrl
ss
adc
jle
mov
xor
push
and
out
xlat
dec
adc
mov
add
sub
lods
fistps
push
testb
mov
mov
push
loopne
xchg
aam
mov
and
mov
fsubr
xor
xchg
mov
mov
cmpsb
fsubl
out
mov
cmp
notl
mov
mov
mov
in
cmpl
js
xor
mov
push
dec
cli
cmp
sub
push
insb
add
pop
ret
cmpsl
ret
dec
add
xor
les
fdivrs
pop
and
in
mov
in
adc
jae
xor
jge
sub
shll
xchg
mov
dec
add
jo
mov
pop
jl
adc
clc
mov
adc
dec
xchg
add
scas
cmc
jp
jmp
ret
mov
dec
push
push
out
jae
and
sub
xor
push
mov
les
push
cmp
scas
mov
jecxz
loopne,pn
ja
lods
mov
pop
lcall
cltd
mov
enter
sbb
push
and
sub
data16
mov
arpl
in
sbb
mov
jns
gs
aam
adc
fiadds
xchg
push
inc
in
outsb
pop
lods
inc
jge
aaa
shll
pushf
adc
cmp
push
bound
test
imul
and
stos
addl
sbb
popa
es
in
leave
pusha
xor
flds
subl
lret
add
or
adc
fcoml
repz
dec
or
fs
shrb
xlat
mov
sbb
or
mov
mov
mov
mov
clc
ja
lock
cmovl
inc
xchg
cwtl
sbb
push
dec
mov
in
cmp
xchg
cmpsl
push
pop
es
lret
pop
in
sbb
dec
sbb
push
fisubs
pop
and
or
inc
loopne
push
xchg
inc
and
repz
out
xchg
pop
mov
mov
mov
xor
or
or
stc
pop
sbb
push
pop
std
rcrl
and
mov
int
clc
pop
ret
sbb
adc
bound
imul
jl
mov
cmp
add
and
sub
das
xor
ljmp
in
sub
xchg
sbb
stos
daa
pop
in
loopne
sbb
cmp
in
outsl
shlb
cmpsb
pop
mov
ljmp
fidivrl
push
arpl
scas
or
rcrb
out
scas
xchg
aad
mov
iret
scas
test
cmp
mov
push
cmp
push
es
loope
sub
es
add
or
add
push
inc
fisubl
mov
cmp
scas
mov
mov
fld
and
add
and
hlt
das
jg
enter
xchg
push
and
ficompl
jge
and
fidivl
fisttpll
lds
jp
adc
push
lcall
xor
js
and
lcall
xor
xchg
es
cmp
es
out
sbb
std
gs
mov
pop
fsubrs
icebp
xor
popf
xchg
cmpsb
popa
mov
sub
testb
xchg
rcrl
mov
pop
lret
pusha
lcall
push
mov
push
fbstp
addb
insl
cmpsb
in
inc
sub
jbe
pop
loop
call
add
rorb
jl
popa
mov
leave
cmp
enter
sti
aad
cmp
repz
fcoms
out
push
dec
and
xchg
test
in
xchg
or
cmp
push
sub
dec
enter
clc
dec
xlat
adc
mov
dec
call
xor
jmp
jmp
stos
div
mov
sahf
sub
ja
les
lods
inc
adc
aas
lea
xchg
sbb
cmp
xchg
outsl
jb
rcrl
adc
jae
push
fidivl
add
jmp
popf
push
pop
call
inc
rcr
int3
jo
dec
xchg
inc
cmpsb
arpl
fcompl
add
jle
aaa
leave
jae
fimull
sbb
jns
aas
jno
and
outsb
pop
sbb
arpl
mov
jp
cld
ja
push
xchg
pop
aas
sbb
jo
and
jmp
cld
inc
inc
daa
in
ljmp
pusha
fbstp
inc
andb
imul
and
push
into
mov
pop
adc
jp
push
xchg
mov
xlat
mov
arpl
jecxz
fst
inc
arpl
xor
or
call
sub
push
add
int
push
fdivrp
rol
daa
xchg
add
add
xor
mov
test
sbb
lods
mov
scas
mov
lods
sbb
sub
movsb
dec
and
add
loop
xchg
in
cmpsb
inc
std
xchg
lret
cwtl
lahf
cmp
in
jmp
mov
pop
jmp
mov
and
in
jp
mov
fidivrs
mov
shl
jp
in
out
jle
lds
cs
sahf
cmpsl
or
jbe
sub
and
je
mov
xchg
movsb
lea
or
mov
push
sti
outsl
xor
sub
lahf
call
test
shl
pop
stc
movsl
ds
pop
lock
out
sbb
mov
into
outsb
out
pusha
sahf
mov
lret
roll
ss
inc
mov
rcll
mov
or
addl
mov
jae
inc
lret
out
lcall
cmpsl
aad
adc
lods
xor
data16
mov
mov
arpl
paddusb
test
shlb
or
rolb
lds
or
int
fistpll
je
push
pop
or
jno
cmp
xor
jge
repz
mov
lds
daa
cmpsl
sbbl
xchg
dec
cmp
add
jmp
iret
ror
mov
fmull
outsb
lea
cmc
fcmove
xchg
fwait
sub
mov
inc
dec
mov
cwtl
inc
xchg
mov
cmpl
mov
scas
xchg
lock
imul
xchg
push
rcrl
jl
mov
add
dec
mov
adc
or
xor
mov
rcll
jg
into
sub
fbstp
les
mov
icebp
jmp
pop
mov
lret
jge
push
rcrl
lods
mov
aaa
push
or
or
das
mov
pop
mov
fisttps
cwtl
push
arpl
cmp
ret
and
pop
push
fidivrl
mov
cltd
loope
aas
mov
cwtl
dec
cmp
pop
or
subb
push
daa
mov
push
inc
aad
pop
out
les
push
mov
inc
jno
adc
pop
cmpsb
inc
out
inc
dec
shrl
pop
or
popf
stos
cmp
and
and
cltd
shll
scas
mov
push
cmp
jnp
or
ds
pushf
xor
addr16
pop
mov
mov
lea
add
sub
int
sar
pop
lock
test
int3
add
mov
xor
loope
and
idiv
or
adc
pop
out
jbe
sbb
cli
mov
rcll
bound
cmp
icebp
or
pop
addr16
xchg
pop
pop
lock
dec
jl
clc
adc
int
push
mov
pusha
loop
or
push
aam
popf
imul
mov
insb
sub
inc
mov
jmp
pop
jg
or
iret
pop
xchg
sub
loope
mov
cmpsb
out
rorl
cwtl
pop
jl
xor
ret
lahf
sub
shrl
add
iret
daa
push
mov
xor
ss
lret
jl
inc
test
cld
or
adc
dec
sbb
or
mov
stos
cltd
test
je
roll
aas
sub
fidivs
stc
xor
jl
push
dec
mov
add
outsb
subb
adc
fs
pop
adc
and
outsl
dec
xchg
imul
filds
dec
lods
dec
lcall
in
call
pop
cmpsb
push
xchg
insl
nop
cmp
std
xchg
mov
xchg
lods
stc
push
adc
pop
inc
and
js
push
in
and
test
xchg
push
and
add
das
les
jecxz
lea
xchg
mov
sub
sar
out
and
filds
pop
push
sbb
insb
pushf
scas
pusha
pop
and
add
icebp
mov
in
push
cli
call
ljmp
jg
cwtl
out
mov
mov
subb
nop
sahf
dec
mov
cs
inc
and
insl
dec
or
icebp
cmpsl
jmp
sahf
pop
mov
stos
push
mov
mov
inc
mov
pop
xchg
or
add
test
xor
mov
loopne
lea
es
ret
lods
dec
push
ret
pushf
cmpsb
cmc
sar
or
dec
push
mov
cs
fwait
push
jae
xchg
adc
test
mov
inc
pop
inc
imul
stc
enter
add
sbb
dec
or
xchg
stos
lcall
inc
sub
dec
sahf
es
outsl
mull
mov
dec
movsb
fdivr
gs
xor
xchg
add
add
ds
push
push
and
mov
add
mov
xor
mov
int3
mov
imul
inc
xor
pop
outsb
lcall
push
push
lods
imul
xchg
xchg
mov
xchg
out
mov
aam
pop
xchg
jnp
mov
xchg
in
mov
fistl
sbb
arpl
xlat
mov
fs
mov
ds
fnsave
push
insl
mov
pop
mov
rolb
fsubrl
sbb
inc
dec
cmp
pop
dec
lret
mov
jl
add
sub
xchg
aad
adc
add
sar
imul
es
and
sub
pop
inc
mov
add
and
aam
fiadds
fwait
into
and
mov
hlt
mov
adc
sahf
or
jno
jg
and
xchg
sub
fdivl
daa
mov
fs
imul
mov
std
std
incb
pop
jne
mov
inc
js
pop
outsl
scas
cwtl
inc
or
push
push
sub
pushf
pop
test
mov
cltd
mov
xlat
sub
dec
hlt
dec
fs
add
es
mov
arpl
rcll
mov
add
repz
cmp
xor
icebp
xor
daa
mov
xchg
jmp
pop
pushf
movsl
repnz
loop
lods
in
cmp
inc
icebp
jecxz
xor
add
add
ds
jg
scas
dec
outsb
add
ja
sbb
fists
shrb
cmp
sbb
lock
das
inc
sbb
jp
push
or
mov
loope
push
sarl
test
or
pusha
mov
and
dec
or
mov
std
pop
jae
fildll
pop
out
cmp
ret
sarl
nop
mov
in
xor
in
insl
xchg
xchg
cmp
push
out
mov
test
cltd
idivb
das
jmp
adcb
into
cld
push
xchg
mov
fwait
addb
shlb
cmp
inc
push
pop
add
dec
insb
popa
andl
ss
ret
and
cli
mov
jnp
push
sbb
rorb
nop
test
lret
xor
das
mov
jmp
xor
push
xchg
fsubrs
mov
inc
push
xor
jne
add
xchg
cltd
mov
int3
repz
repz
and
das
cwtl
aaa
jbe
int
pop
stos
fstl
enter
adc
fidivrs
fcos
dec
fmulp
or
and
and
repz
stos
pop
sbb
mov
loopne
fwait
in
ljmp
mov
mov
lock
cmc
and
pop
cmpsl
cli
cmp
mov
mov
mov
mov
nop
repnz
xor
lods
sub
lahf
xchg
mov
aaa
outsb
sub
test
inc
in
lds
mov
mov
arpl
push
adc
mov
push
std
xorb
adc
xchg
xchg
test
sub
inc
in
fwait
bound
ss
inc
push
dec
mov
mov
sub
jmp
cmovns
lcall
out
movsb
cltd
mov
dec
jecxz
imul
xchg
xor
dec
lea
cltd
xchg
sbb
sbb
xor
add
xchg
pop
jo
sahf
push
pop
pop
push
clc
fs
push
sbb
mov
add
xchg
dec
in
iret
xchg
loope
iret
pop
nop
jnp
sub
xchg
push
outsb
int3
push
inc
imul
movsb
or
not
cli
fcomip
loop
cmpsl
lret
fisttpll
sbb
orl
out
imul
cmp
imul
mov
adc
push
test
push
fnstcw
xor
mov
jo
adc
ss
jo
xor
popf
nop
pop
push
cmp
and
pop
lcall
push
sub
xchg
in
jp
cmp
insb
sbb
fstps
lret
scas
cltd
stos
ficoms
icebp
dec
lcall
mov
in
or
pop
push
and
pusha
jge
and
cmpl
xor
outsl
fistpl
lret
repnz
push
stc
jno
cmp
mov
fisubrs
int3
daa
xchg
int
mov
jmp
dec
repz
rcr
inc
sub
or
imul
pop
pop
ret
adc
pop
cltd
imul
sub
arpl
pop
inc
lcall
dec
pop
push
lds
lahf
sti
jno
inc
sbb
inc
xor
das
int
into
adc
fidivs
in
sbb
jns
out
out
mov
dec
jno
insb
sbb
mulb
cmp
add
cmpsl
mov
mov
or
mov
ret
sub
inc
movsl
dec
test
shll
mov
adc
pop
leave
jno
lahf
push
inc
or
pop
daa
mov
mov
jb
rcrl
xor
int
std
lret
lds
subl
xor
push
ret
jae
xchg
mov
xchg
cs
or
leave
in
mov
int3
jmp
dec
insl
loope
pop
shlb
imul
inc
inc
push
add
and
lds
rolb
push
repz
cli
pop
jge
dec
mov
mov
fmull
fsub
ds
shrl
js
and
inc
adc
cld
adc
test
mov
mov
jecxz
das
jl
mov
cs
mov
mov
push
push
inc
pop
cmc
std
sub
xor
out
lret
test
or
or
mov
jo
and
outsb
lret
adc
push
es
pop
jns
dec
mov
icebp
push
stc
imul
std
ret
ds
faddl
sub
push
cmpsl
jmp
cli
add
scas
mov
and
imul
test
ffree
push
jl
gs
push
cmp
push
mov
iret
sub
sbbb
shll
mov
cmc
mov
push
lret
test
out
sbb
movsb
and
mov
repnz
fdivs
dec
dec
in
fldenv
sbb
and
into
cwtl
fidivrs
inc
pushf
fs
mov
and
dec
stc
push
rclb
jae
fistl
orl
fsubrs
add
stos
es
sub
mov
int
aas
sub
adc
int
pop
shl
mov
movsl
cltd
jne
jo
fadds
sub
lock
imul
into
jbe
mov
jge
fistpl
xchg
push
push
add
pop
rcll
inc
repnz
push
xchg
pop
or
mov
cmp
mov
mov
dec
push
fistl
or
jmp
bound
repnz
pop
loope
or
call
ret
fdivrl
fidivrl
lock
lock
inc
xor
and
stos
lods
icebp
lret
sub
cmc
jo
mov
adc
add
dec
lea
mov
sbb
lea
rcl
aam
fisubrl
gs
popf
in
jo
loope
data16
sahf
lret
ds
mov
fs
or
push
int3
jae
push
mov
mov
lret
dec
inc
lcall
jecxz
dec
mov
and
push
xor
ja
adc
fwait
dec
mov
fwait
cltd
fiadds
fstps
lcall
push
pop
imul
ret
push
xchg
lea
ds
sbb
data16
roll
movsb
int
push
lods
imul
cmc
test
sbb
enter
test
xor
pop
imul
sbb
data16
popf
pop
xor
push
xchg
mov
add
push
lret
sub
stos
int
negl
inc
pop
sbb
sbb
cmpsl
in
fidivs
push
rol
push
pop
or
aaa
mov
stos
aaa
xor
inc
pop
faddl
popf
popf
lea
inc
rcrl
imul
insl
inc
xchg
leave
loop
push
sub
adc
jmp
loopne
pushf
jo
jns
popa
dec
push
scas
push
mov
sbb
lcall
flds
add
xor
scas
into
pop
out
es
femms
sbb
jge
sbb
stc
mov
cmp
fcmove
lahf
mov
lret
bound
xchg
out
cmp
cmpsb
popf
fsubrl
pop
jge
hlt
jge
mov
mov
sahf
inc
dec
or
mov
add
dec
aam
cmpsl
or
cwtl
push
pop
sub
loope
sbb
mov
and
lock
pop
daa
into
in
mov
xlat
inc
mov
js
adc
mov
mov
cmpsl
pushl
mov
sub
pop
cmp
enter
push
cld
scas
ret
pop
add
inc
jle
pop
push
or
addr16
mov
pusha
and
lret
or
out
stc
pop
loope
in
insb
out
inc
cmp
insl
into
xchg
and
jg
in
push
xchg
xorb
cmp
iret
sub
stos
fisubrs
mov
add
fsubrs
inc
icebp
sahf
xor
mov
jp
lret
data16
mov
jecxz
and
cmp
push
sbb
xchg
mov
sahf
arpl
and
out
push
xor
in
push
xor
cmp
sub
mov
inc
into
push
fnstsw
fisttps
std
push
mov
jl
inc
push
adc
adc
mov
push
addr16
pop
ret
xor
dec
outsl
clc
jnp
mov
dec
shll
mov
decl
cld
mov
movsb
add
repnz
popf
pusha
push
cltd
popf
fisubs
orl
je
clc
push
add
mov
and
push
push
cmp
mov
test
pop
and
loope
mov
cmp
jbe
stc
pop
ljmp
loope
stos
cli
mov
jmp
aad
hlt
dec
ret
jae
shlb
xor
jge
out
lea
xor
call
movsbl
sbb
jnp
xor
xchg
or
test
rol
xlat
in
int3
out
cmpsb
xchg
mov
repz
movsl
mov
add
scas
test
xlat
imul
mov
sub
xlat
jle
das
ret
in
nop
je
sbb
pop
ss
test
or
mov
xchg
popf
adc
lods
insl
jne
xor
pop
dec
cmpsb
fs
jb
add
mov
mov
sahf
mov
aam
in
adc
or
insl
xor
sbb
iret
jge
test
test
das
cli
lcall
jge
xchg
loopne
ss
stos
sbb
mov
in
push
jne
pushf
mov
sahf
fucomi
sbb
push
lods
hlt
stc
mov
xor
cs
ja
mov
stos
fcmovnu
hlt
cmp
jbe
mov
icebp
out
fbstp
mov
ficompl
jae
mov
popa
sbb
or
mov
sbb
push
add
call
rorb
in
sbbl
andb
inc
dec
std
push
push
iret
xor
xchg
mov
mov
int3
loop
sub
sub
mov
es
or
test
cmp
lods
cmp
mov
in
jg
gs
jle
jge
mov
roll
mov
aad
jns
jns
adc
imul
daa
or
jle
add
loop
ds
pop
xor
scas
dec
fucomp
cmp
jbe
fsubs
adc
data16
mov
xor
or
push
pop
ret
or
mov
xor
adc
jp
add
and
js
dec
icebp
icebp
ret
push
xor
xor
insb
inc
in
and
lret
popa
stos
ds
call
ret
xchg
inc
pop
add
push
xchg
hlt
push
xchg
adc
push
inc
xchg
xchg
pop
cwtl
cmpsb
mov
jae
stos
or
pop
mov
or
lcall
sub
orl
sahf
es
in
sarb
push
mov
nop
pop
jo
mov
iret
loop
jle
aas
es
sbbb
fadds
gs
lods
mull
add
addr16
fwait
jnp
mov
xchg
xchg
arpl
mov
mov
ret
hlt
xor
out
xchg
cwtl
xor
pop
mov
push
cld
call
mov
fdivs
sbb
fs
add
loope
dec
cmp
outsb
repnz
inc
addb
aad
xchg
pop
dec
cli
add
xchg
into
lcall
loope
mov
loope
pop
cmp
cmp
aad
cld
cmp
xor
add
enter
outsl
cli
psllw
adc
cmp
and
jp
ret
jns
in
push
nop
clc
add
dec
repz
imul
pop
fistps
aad
xchg
inc
fidivs
jl
inc
xchg
aas
bound
inc
std
fists
sbb
clc
mov
repnz
rcl
data16
sbb
xchg
lds
push
test
mov
rolb
inc
cld
ja
xor
xor
sbbb
jg
mov
mov
lahf
or
and
inc
sarb
xchg
cmp
negb
or
cs
orl
push
test
insl
mov
scas
push
cmpsl
pop
shlb
xchg
in
insl
lret
out
bnd
sbb
loop
mov
addl
es
lea
inc
jo
push
adc
push
rorb
add
inc
sti
les
addr16
and
xchg
pop
mov
pop
in
push
scas
cmp
add
dec
cwtl
in
sub
aad
adc
aam
sti
mov
out
or
fidivl
test
loopne
pop
sbb
xlat
hlt
dec
cmc
repz
in
stos
popf
inc
test
mov
inc
adcl
xor
push
fisubrl
add
jecxz
negb
pop
xchg
push
cmpsl
push
hlt
add
push
and
repz
push
push
jmp
jae
scas
lock
int3
fmuls
jl
jae
mov
int
fs
pop
sub
dec
push
jb
adc
xor
aas
fnstenv
daa
xchg
dec
sbb
scas
push
xchg
mov
dec
sub
nop
cltd
icebp
adc
cmp
xchg
jae
inc
ljmp
popf
or
xor
sahf
ja
into
sbb
je
stc
sahf
stc
ret
icebp
and
xor
arpl
movsb
cmp
mov
insl
call
movsb
loop
mov
push
cltd
lahf
and
mov
sbb
loop
mov
enter
xor
push
mov
and
lods
dec
pushf
in
cmp
cli
ljmp
nop
aas
lret
out
cmp
call
ds
out
xchg
faddl
ret
outsb
pop
pop
add
mov
sub
inc
xchg
adc
rcr
xchg
jle
jmp
mov
movb
adc
pushf
in
mov
adc
jecxz
cmp
fiadds
jne
inc
in
aam
cmpb
and
lods
mov
jp
lcall
xor
leave
or
and
hlt
pop
push
incl
lcall
je
int3
divb
pop
lret
outsl
adc
jmp
xchg
dec
cmp
das
or
insl
and
pop
imul
stos
movsb
repnz
call
fs
incb
nop
push
add
sbb
or
js
push
mov
push
push
ljmp
adc
push
repz
testl
mov
adc
mov
xchg
xchg
addr16
aaa
sahf
adc
iret
fdivrs
cmc
leave
push
sbb
cmp
loopne
inc
mov
sub
and
sbb
mov
cwtl
mov
out
rolb
ljmp
mov
jp
add
sbb
mov
scas
iret
aas
lods
sub
pop
cmp
push
rorl
inc
leave
fidivl
add
xchg
iret
sub
movsl
xchg
jecxz
repz
mov
cltd
notb
rolb
faddl
mov
in
aas
ret
jno
pop
or
loopne
cwtl
jnp
push
sbbb
push
insb
jae
fsts
jno
mov
aam
cmp
mov
loop
lret
sbb
ffree
outsb
repnz
xchg
mov
sub
push
add
mov
and
mov
in
or
cmp
into
les
mov
arpl
mov
loope
repnz
adc
filds
push
or
mov
loop
add
jmp
fistpll
out
cmpsb
aas
popa
lret
cmp
out
or
ss
lds
xchg
push
pop
popf
and
lret
xlat
or
scas
adc
outsb
dec
xchg
mov
iret
movsb
xchg
test
jnp
mov
mov
movsb
outsb
out
jae
repz
out
iret
call
sub
xchg
dec
flds
outsl
ret
aaa
mov
bound
or
fstp
aaa
test
push
sbb
sbb
dec
popf
jae
inc
pop
sub
xchg
and
pop
cmp
outsl
scas
pop
pop
out
mov
jl
pop
jnp
inc
neg
mov
out
add
ljmp
cltd
movsb
out
ret
inc
call
pop
aas
insl
sbb
fwait
ss
loope
ja
dec
out
xchg
mov
sarb
xor
mov
inc
cwtl
outsb
ret
sub
insb
dec
pop
mov
incl
push
pop
cs
enter
aas
test
das
divps
mov
fildl
stc
push
out
xchg
cmpsl
sub
jnp
lock
ljmp
jecxz
int3
test
pushf
add
gs
sub
push
jg
pop
mov
imul
aad
pop
hlt
push
pop
sbb
cmp
xor
ja
push
sti
or
and
jmp
add
mov
test
xchg
ret
bound
pusha
xor
movl
scas
adc
out
addr16
cmp
imulb
jmp
adc
std
aaa
cs
test
adc
shrl
outsb
xor
xchg
jo
das
jge
lea
sbb
xchg
lds
dec
xor
ja
insb
mov
test
lret
outsl
xor
sti
scas
mov
rorl
repz
movsb
dec
adc
xor
test
insl
dec
test
sub
dec
fcompl
mov
pop
les
or
std
movsl
lea
fwait
jge
lret
push
test
cwtl
ja
add
dec
push
cli
inc
les
mov
loop
xchg
mov
enter
pop
in
push
lret
push
mov
or
aas
icebp
cmpsb
cmc
lods
xchg
mov
and
pop
mov
push
sbb
cmp
lret
imul
xor
jmp
mov
ds
mov
mov
out
push
pop
shll
lock
fdivrs
adc
in
fisubl
mov
mov
fidivs
lds
lcall
mov
push
ror
mov
movsb
xor
std
mov
out
xlat
sbb
xor
ljmp
movsl
push
inc
test
enter
imul
shll
neg
cmp
in
push
add
cmpsb
adc
and
mov
cmp
pop
aam
loopne
jne
sub
rcrl
push
mov
call
adcb
out
xchg
xor
call
mov
mov
mov
jl
xor
insb
sbb
push
std
mov
sbb
sbb
jmp
repz
js
adc
xor
adc
sub
dec
cltd
gs
sub
sub
add
add
push
dec
mov
sub
xchg
mov
inc
inc
and
jns
adc
es
cmp
adc
xor
stos
int3
cmc
push
xchg
jmp
fists
cmp
movb
add
push
mov
shll
and
mull
push
sub
les
adc
mov
sub
jno
loop
sahf
arpl
inc
or
lock
mov
ficomps
sub
fildll
mov
jl
mov
mov
adc
inc
ds
rol
insl
xchg
aas
xlat
jns
ja
mov
mov
jnp
in
pop
mov
shll
movsb
lahf
and
jae
jno
stos
dec
sub
mov
push
pop
ds
or
xchg
add
std
push
xchg
mov
pop
int
arpl
cli
pop
out
adc
pop
fimuls
add
lods
leave
outsb
es
cltd
jg
mov
rorw
loopne
dec
jb
loop
dec
popf
mov
push
inc
pop
imul
push
enter
sahf
mov
jae
inc
pop
mov
xlat
addr16
mov
push
dec
cli
test
in
jecxz
add
scas
sbb
jge
jecxz
lock
mov
add
je
cmp
adc
enter
ret
cmp
jno
or
inc
inc
xchg
mov
lahf
mov
mov
orb
push
int
and
mov
data16
xor
xor
shl
lds
mov
mov
sub
cmp
test
les
xor
xor
and
cltd
cltd
jecxz
pop
and
push
imul
adc
lock
sarb
insl
fbstp
sbb
imul
ss
or
out
sti
cmp
jp
enter
fisttps
pop
outsb
lret
adc
xlat
push
es
lods
pop
push
mov
jo
xchg
addl
lret
jb
jp
sbb
or
int3
std
repz
data16
cmp
dec
les
xchg
push
loopne
push
aam
mov
cmp
bound
xor
xchg
ljmp
aad
sbb
mov
test
insl
pop
pop
lods
enter
les
lret
sub
les
and
adc
adc
jecxz
adc
mov
dec
movsb
jae
adc
mov
out
xchg
enter
frstor
mov
dec
das
mov
and
shrb
mov
in
aaa
mov
int
mov
hlt
loopne
and
clc
out
xor
cmp
cmp
seta
icebp
imulb
filds
sbb
lock
push
sbb
push
add
push
scas
mov
mov
cmpsl
sub
and
mov
or
ret
mov
xchg
mov
bound
inc
fsub
cli
out
sub
bound
pop
xchg
arpl
sbb
add
mov
cli
out
jp
mov
scas
mov
inc
sub
pop
and
dec
and
test
inc
out
push
movsl
sub
cmp
add
jle
stos
test
adc
daa
call
dec
sahf
cmpsb
lods
notl
and
push
pop
pop
push
push
shrb
push
je
mov
fisttpl
and
lea
imulb
pop
mov
clc
pop
jns
inc
mov
jb
leave
lahf
jae
mov
fldl
cmpsb
xchg
xchg
sbb
mov
sbb
les
sbb
adc
dec
test
inc
repz
or
inc
cmpb
insl
fisubl
cs
cmp
lock
xor
sti
nop
and
sahf
xor
out
cli
js
out
dec
mov
and
or
repnz
mov
sbb
and
xor
xor
sti
push
aas
test
js
cmc
add
shrl
push
xchg
lods
inc
mov
leave
cmp
sahf
imul
aad
adc
xlat
stc
jae
mov
xchg
aam
jns
fs
cmp
out
sbb
popa
push
dec
dec
cmpsb
xchg
xchg
cmpsl
out
dec
je
lret
mov
lods
jne
shlb
pop
dec
pusha
stc
mov
outsb
sbb
das
push
and
fst
dec
mov
sub
jns
pop
xor
lods
ficomps
sti
aad
mov
mov
mov
imul
popa
clc
sbb
repnz
cli
mov
popf
push
jp
sub
data16
or
sqrtps
jb
lea
pop
lahf
cli
push
and
aam
fcmovnu
fiadds
cmpsl
out
mov
lahf
add
sbb
mull
aas
pop
adc
jnp
add
xchg
cltd
fsubp
aad
scas
mov
add
lahf
add
mov
leave
mov
rorl
ret
test
sbb
xor
aas
fstpl
cmp
adc
or
loopne
test
push
add
fsubrl
cld
dec
mov
rclb
repnz
lods
add
fldl
push
int
or
inc
cmp
pop
jecxz
cmp
loopne
sbb
dec
push
mov
enter
dec
in
mov
test
add
push
call
sbb
stos
sub
and
ret
add
pop
jb
addr16
bnd
cmp
setl
cmp
sbb
lods
divl
push
aas
mov
sub
inc
push
and
pop
pop
mov
into
xor
cmp
mov
mov
sahf
dec
pop
xchg
adc
into
xchg
cmp
xchg
int3
sahf
sub
pop
pop
mov
fs
xchg
inc
push
add
call
mov
outsl
testb
push
cmc
insl
or
mov
lea
cs
and
icebp
outsl
popf
mov
imul
fwait
mov
out
jae
jb
xchg
mov
scas
sbb
aam
mov
out
cwtl
mov
sub
push
pushf
cmp
dec
xchg
add
icebp
dec
jo
dec
xchg
fnstsw
and
bound
or
xlat
jns
mov
xor
mov
inc
insl
lods
ja
mov
xchg
mov
sub
ds
loope
idivb
loopne
adc
insb
cltd
pop
mulb
pushf
mov
das
rorl
jne
push
mov
insl
dec
dec
pop
cli
dec
insl
xchg
inc
enter
jo
dec
sti
pop
adc
xchg
mov
add
xchg
dec
jbe
out
pop
sbb
cli
out
dec
xor
movsl
fdivrs
stc
mov
inc
clc
sbb
ds
imull
lret
aaa
xchg
push
and
ret
or
stos
test
hlt
xor
push
aas
adc
lea
cmpb
xchg
pop
mov
jge
adc
stc
shr
mov
int
sub
jno
fnstsw
and
ret
call
dec
insl
rorb
test
fcompl
sub
push
pop
cmp
popa
mov
cs
shl
lcall
inc
mov
mov
pop
sarl
inc
sbb
mov
mov
push
mov
push
scas
jns
push
cwtl
mov
push
mov
fsubrl
inc
jne
loopne
mov
sarl
mov
pop
mov
int
jmp
cli
std
out
lretw
divl
sbb
mov
cld
shlb
shrl
pop
push
jle
push
adc
psubw
out
or
dec
dec
loop
push
and
pop
jno
fisubrs
pop
jp
in
inc
mov
jne
xor
call
test
pop
or
xorl
jnp
rcl
mov
jmp
jnp
rcrb
pusha
mov
out
and
xchg
mov
jae
popf
subl
addr16
fwait
pop
xchg
inc
jmp
bnd
loopne
pop
subl
mov
mov
nop
scas
cli
das
add
dec
inc
mov
pop
in
ss
push
mov
jecxz
out
mov
hlt
in
jno
sarl
or
mov
cld
cmp
push
rorb
jne
lahf
data16
fs
insb
mov
mov
jae
cmp
dec
test
mov
mov
aam
lcall
scas
je
dec
or
cmpsl
cli
mov
sub
loope
jbe
mov
into
rorb
cmovns
and
adc
test
push
aas
jo
cmpsb
mov
and
push
test
fs
adc
stc
and
stos
pop
into
add
xor
and
fsts
pop
sub
mov
add
das
pushf
cmpsl
mov
ds
aad
je
push
push
xchg
cmp
in
add
mov
sub
pop
rorb
dec
loope
or
js
mov
adc
xchg
xor
ds
ja
mov
hlt
xor
cmp
jb
leave
loope
jae
mov
inc
jne
jmp
sbbl
ret
sarl
xchg
xchg
jno
into
xchg
lret
insl
xchg
pop
mov
lret
ret
arpl
dec
jl
in
jne
pop
lods
push
mov
insl
cmpsb
ficoms
lahf
cmp
andl
xchg
mov
jle
test
sbb
mov
in
cwtl
je
sahf
jo
outsb
cmp
or
ffreep
xchg
push
pop
sahf
jle
pop
mov
lahf
aam
imul
and
aas
xor
fidivrs
xlat
dec
xor
adcl
pop
gs
cmp
ja
lds
pushfw
add
sarb
push
mov
popa
jp
fadds
fstpl
cmc
out
fmull
push
inc
les
push
ret
daa
addr16
mov
je
arpl
fs
jg
dec
xchg
pusha
lahf
sahf
sub
aam
adc
enter
or
into
out
adc
lahf
and
sub
insl
and
repz
aaa
xchg
xchg
jae
fildll
pop
dec
xor
popa
inc
imul
add
push
stc
call
or
mov
and
test
and
mov
mov
jns
dec
mov
lahf
sub
inc
and
jle
push
filds
stc
dec
ds
mov
mov
mov
ror
sub
fsts
addr16
adc
add
add
pop
pop
sbb
mov
mov
push
in
adc
pushf
stc
xor
scas
movsb
ljmp
in
jb
adc
or
add
push
stc
mov
push
js
or
mov
and
sbb
xchg
sub
jmp
je
xchg
cmp
push
hlt
fisubrs
mov
sub
jge
adc
out
xor
mov
lods
mov
add
xrelease
cld
aaa
dec
pop
mov
xlat
xchg
mov
mov
aaa
xchg
adc
out
fidivl
sub
jnp
insl
mov
adc
xchg
sahf
dec
mov
or
popa
outsb
and
ljmp
out
insb
call
mov
std
cwtl
jne
bound
iret
adc
int
mov
xor
push
imul
addb
aaa
ret
mov
cwtl
out
mov
mov
insb
shll
test
mov
lods
pop
into
es
jg
fdivr
xor
out
mov
scas
scas
mov
pop
pop
ret
sbb
fldt
in
sbb
sahf
jbe
mov
xchg
lods
cmpsl
imul
mov
sub
lret
fcomp
shrb
add
dec
push
test
fidivrs
aas
mov
in
aam
cmp
aas
mov
inc
mov
enter
cmc
addl
xchg
call
stos
leave
ss
inc
xchg
inc
push
dec
int3
in
out
lcall
cmc
repz
xchg
jp
or
out
jl
add
sbb
sub
jp
mov
std
int3
popf
add
pusha
fwait
jnp
cmc
cmpsb
andl
mov
out
sbb
jl
mov
mov
movsb
dec
dec
adc
xor
in
je
insb
movb
fisubl
mov
mov
add
lret
mov
mov
leave
jne
and
push
pop
gs
and
push
or
outsb
push
into
jmp
lea
mov
dec
inc
clc
not
scas
mov
sbb
push
add
jge,pt
or
xchg
dec
mov
femms
cmpsb
jb
pop
pop
sub
cmp
inc
inc
cmovns
rcll
inc
sbb
push
out
cld
scas
cmpsl
sub
cmp
fdivp
mov
fildll
xchg
mov
adc
scas
ret
dec
xorl
adc
stc
add
shrl
dec
jg
jl
movsl
mov
xchg
in
subl
test
sbb
xchg
push
sti
adc
xchg
dec
lock
rcrb
push
and
mov
rcrl
inc
cmpsl
cmpsl
cmp
pop
mov
mov
mov
loopne
bound
pop
clc
sbb
pop
and
or
xor
jbe
rclb
fldt
ror
mov
das
fcoml
dec
fidivl
int3
stos
sub
cmp
pop
stc
loop
cmp
into
mov
js
fiadds
jne
sub
outsb
xlat
pop
fmul
inc
and
fsub
lods
mov
xchg
sub
ja
insb
repnz
dec
sbb
enter
sub
shlb
enter
mov
sbb
cmp
lods
sbb
and
test
arpl
nop
pop
pop
bound
lods
mov
mov
daa
lcall
mov
incb
ficoml
andb
pop
out
mov
mov
inc
leave
cwtl
pop
cld
sbb
sbb
jmp
hlt
xor
add
mov
jne
mov
xchg
add
inc
adc
cmp
inc
dec
stos
leave
cmc
adc
hlt
sbb
xor
ss
insb
mov
push
cwtl
and
xchg
mov
xlat
orl
shrb
testl
ja
movsb
imul
xor
add
aad
inc
iret
mov
dec
xor
xor
jmp
xchg
dec
adc
mov
mov
inc
push
popa
or
dec
cmp
je
mov
mov
in
insl
add
jne
insb
push
push
fildl
mov
jp
and
fimull
arpl
xor
xor
imul
shrb
adc
jg
adc
insl
fildl
movsl
jp
push
inc
mov
stc
scas
xchg
inc
fmulp
push
adc
cmp
pushf
xchg
mov
idivb
inc
test
mov
jp
or
rorb
pop
ljmp
sbb
xchg
cmp
push
mov
je
insl
pop
sbb
gs
daa
xor
xor
jl
outsl
lcall
insl
cmpsl
adc
lea
std
jae
aad
xchg
push
xorl
push
clc
push
test
xorl
lea
push
jae
push
in
push
cmp
mov
xor
mov
xchg
fwait
mov
push
pop
fcom
xchg
aam
lea
inc
jo
xlat
sub
mov
inc
ljmp
stc
xchg
sbb
addr16
or
push
add
nop
popf
xchg
adc
aaa
rcll
cmp
sub
aas
es
sahf
jp
mov
adc
mov
test
hlt
fbstp
jl
outsb
fisubrs
in
hlt
ret
mov
push
push
lea
dec
stos
mov
mov
roll
bound
push
mov
pusha
arpl
fdivr
sub
mov
cmp
xchg
mov
mov
and
mov
adc
shrl
aad
xorb
in
stos
xchg
inc
push
inc
or
mov
dec
inc
push
push
xchg
cmpsl
mov
mov
and
fiaddl
out
and
push
push
popa
imul
xchg
jmp
pop
sbb
pop
pop
xor
movsl
lds
stc
popf
pop
sahf
mov
stos
xchg
dec
xchg
pop
out
pop
in
xchg
xor
jno
mov
and
hlt
mov
scas
and
jmp
cmp
push
cltd
inc
cmp
inc
mov
inc
pushf
shr
xor
fidivs
or
std
dec
jo
movsl
ret
pop
add
shl
outsb
push
cmp
inc
cmp
or
xor
daa
daa
sub
lods
dec
iret
insl
inc
add
sbb
dec
loop
ja
fldl
mov
xor
jns
cwtl
inc
mov
mov
gs
bound
fldt
pop
stc
add
jb
call
inc
sbb
push
dec
push
lods
out
daa
loope
xchg
sub
stos
add
push
fwait
fwait
pop
xchg
ljmp
pop
in
mov
rol
outsl
jbe
incl
data16
cmc
test
inc
in
ss
push
or
or
inc
mov
xchg
insb
fldl
hlt
daa
xor
mov
xchg
pop
lea
iret
fsts
adc
lds
rcrl
sbb
test
adc
outsb
pop
dec
mov
lods
xchg
jbe
out
sbb
test
jne
ja
ds
pop
xlat
ret
adc
mov
lret
dec
test
out
fxch
jge
mov
shl
push
fiaddl
dec
ficoml
lcall
cmpsb
xchg
enter
jge
fmull
fdivr
xchg
lret
fsts
in
pop
inc
addr16
mov
mov
je
jle
faddl
push
sti
sub
stos
popa
add
jns
jg
in
mov
aaa
addr16
xchg
cmp
data16
push
stc
xor
fs
sub
cmp
adc
fcmovb
mov
repz
lea
lahf
dec
push
xchg
xchg
jl
cltd
addr16
cmp
mov
fadds
sbb
dec
push
and
rorl
rcr
inc
cmc
xacquire
xchg
push
lret
lods
adc
xor
sub
push
xchg
dec
pusha
push
add
mov
pop
lods
xor
fists
jno
xchg
xor
lret
cltd
pushf
sbb
sub
pushf
xchg
loope
int
mov
jg
loope
psrld
ljmp
push
ja
lret
sbbl
fnstenv
dec
ja
fwait
lret
les
xchg
subl
mov
leave
sbb
pushf
stos
pop
ss
scas
add
fnstsw
cmpsl
cmpsl
mov
fidivrs
xchg
dec
imul
fsubrs
and
dec
and
dec
loop
lcall
mov
aam
inc
or
mul
or
mov
in
sbb
inc
lock
and
out
mov
in
pop
fs
sbb
mov
add
das
pop
subl
lds
pop
jecxz
fsubs
push
es
faddp
mov
xchg
xchg
push
mov
xlat
aaa
sub
cmp
jp
dec
jne
daa
inc
xor
bound
jnp
inc
scas
fsts
cmp
pop
shl
cmp
xchg
popa
mov
xor
dec
data16
lcall
es
stos
or
fdiv
outsb
orl
sbbb
shll
iret
inc
ret
cmc
popf
daa
out
xor
xchg
loop
or
mov
adc
notb
pop
xor
push
sahf
dec
mov
push
aaa
jno
cwtl
cld
and
jle
into
jmp
in
adc
xchg
dec
lahf
xchg
test
xchg
ret
call
call
hlt
or
cld
inc
out
xchg
scas
scas
or
xchg
sub
push
adc
push
movsl
int3
push
mov
dec
add
push
mov
lcall
push
inc
test
cmp
add
or
mov
les
js
scas
dec
or
mov
xor
out
jle
dec
ss
add
fucom
and
imul
stos
and
inc
sub
xchg
adc
sub
pop
shlb
mov
arpl
pop
js
hlt
adc
adc
in
ret
push
xor
mov
dec
in
and
inc
dec
mov
and
bound
and
notb
imul
jne
push
or
jl
or
cmp
push
cmp
cwtl
sub
sbb
mov
hlt
xor
pop
iret
lea
cld
dec
aas
jo
fmuls
je
imul
test
cmp
adc
iret
lock
adc
cmp
scas
popa
push
orl
loop
sqrtps
vmovaps
outsl
daa
cmp
imul
popf
sti
scas
mov
mov
inc
sbbl
jl
int3
push
cmp
in
shlb
or
dec
fimuls
mov
mov
or
test
ficompl
push
in
add
fwait
test
mov
mov
ljmp
in
cld
lds
loop
ja
outsl
leave
sbb
gs
push
sbb
cli
mov
sub
sbb
lea
outsb
push
inc
mov
dec
movsb
xorl
scas
ljmp
sar
xor
cld
loopne
scas
cmp
fwait
xchg
in
jp
pop
fs
xchg
and
outsb
test
dec
xchg
dec
out
in
loop
pop
xchg
or
icebp
les
jle
mov
dec
dec
dec
pop
mov
int3
das
outsl
mov
je
adc
scas
inc
add
lock
xchg
imul
lret
and
add
jmp
and
int3
pop
xchg
sbb
dec
outsl
adc
mov
adc
mov
mov
mov
inc
jge
sub
or
dec
fstpt
lods
push
imul
sbb
mov
jo
pop
dec
fsubrl
ret
adc
mov
ds
clc
mov
sub
out
orl
cmp
test
pop
dec
mov
sbb
or
mov
cmp
fld1
xor
nop
adc
pop
xor
int3
ja
pop
loop
push
fldcw
mov
je
nop
sub
jae
jmp
loopne
jb
push
inc
inc
loopne
xchg
fcos
cltd
outsl
mov
cmp
dec
clc
movsb
sar
dec
arpl
stos
push
inc
adc
add
faddl
mov
and
ljmp
idivb
mov
cmp
mov
cmp
push
xchg
push
mov
in
adc
xchg
sbb
and
mov
mov
or
xchg
adcb
inc
pop
inc
sbb
movsl
lret
mov
adc
or
iret
int
xor
dec
dec
subb
sar
add
push
lret
xchg
inc
lock
sbb
ja
jmp
mov
cmpsl
out
adc
dec
test
add
rcrl
sub
divb
cld
adc
mov
or
fsubl
cltd
mov
test
movsb
jnp
repz
jno
dec
pushf
xchg
stos
push
ret
mov
int3
popa
inc
cmp
pop
mov
pusha
out
sbb
pusha
adc
sub
js
sub
std
pop
out
and
out
lahf
push
adc
xchg
add
cmpsl
adc
sbb
fcoms
mov
sbb
shrl
cmp
loopne
xchg
jge
or
test
test
fldt
xor
aad
push
lret
sub
xchg
pop
bound
dec
jo
leave
sahf
cmp
test
lret
shlb
mov
inc
push
xlat
loopne
into
push
inc
lods
jp
arpl
sub
hlt
add
test
inc
inc
xchg
stos
xchg
fnstsw
loope
lock
or
or
dec
fsubl
aaa
icebp
and
cmp
incb
mov
push
mov
dec
push
xor
mov
pushf
sub
sbb
sub
sub
push
sti
movsl
adc
sbb
sbb
pushf
sub
adc
outsl
addr16
mov
sbb
jbe
pop
jnp
and
xchg
das
xlat
in
data16
lcall
js
movsb
lds
imul
mov
cmp
push
loop
test
and
stc
xlat
xchg
popf
outsb
sbb
fcmove
scas
lahf
add
jbe
sbb
daa
daa
jne
jge
and
push
dec
adc
sbbb
shr
insb
pop
mov
andl
lds
scas
xchg
ret
xor
pop
jno
movsl
test
cli
mov
sbb
xor
adc
xchg
inc
xchg
dec
bound
aas
in
jle
pop
stos
lret
xor
xor
push
mov
xchg
push
push
mov
adc
adc
add
mov
pop
imul
fcomi
lret
push
lretw
adc
push
or
ficoml
mov
or
nop
jle
inc
push
mov
test
repz
pop
cs
lahf
leave
mov
pop
xor
and
inc
fisubrl
inc
sub
out
mov
sbb
xchg
aaa
xor
adc
adc
sub
test
mov
in
sbb
push
fldcw
aam
cmp
push
xchg
pop
inc
pop
cmp
push
pop
push
decb
inc
push
lea
enter
cs
scas
xlat
xchg
xchg
test
add
dec
sub
f2xm1
pop
shrb
push
push
es
out
xchg
jae
aam
fcomps
test
or
dec
sarb
out
es
nop
mov
shrl
and
es
jge
ja
xchg
xchg
stos
popa
lock
or
push
jp
sti
and
leave
add
pop
shlb
lods
add
in
push
sub
test
adc
cmc
popf
push
aam
inc
dec
fildl
les
jle
call
es
xchg
lcall
xchg
mov
mov
jns
xor
in
notl
adc
ret
lods
stos
jecxz
ljmp
push
sub
testb
lods
xchg
mov
push
jb
dec
push
and
aam
sbbb
lds
shl
push
push
dec
cmp
or
clc
fsubl
loope
out
test
xchg
adcb
mov
imul
mov
push
xor
dec
jmp
pop
mov
xor
or
repnz
cmp
mov
and
lcall
push
pop
xor
enter
insb
ja
or
and
cltd
das
lods
sub
fcmovbe
into
mov
mov
loopne
lcall
cmp
lods
test
leave
mov
push
inc
fnsave
and
inc
je
lods
inc
shrb
mov
es
and
mov
inc
cwtl
pushf
jecxz
cltd
call
daa
aaa
addr16
push
adc
mov
test
les
enter
jmp
jo
rcl
in
dec
cmp
xor
cmp
inc
pop
mov
dec
jb
outsl
int3
xchg
push
jno
inc
shlb
outsl
fs
aam
out
mov
jbe
xchg
sti
stos
xchg
jae
sahf
push
and
mov
dec
and
push
and
das
aad
jle
push
xchg
jg
jns
mov
dec
xor
mov
mov
je
inc
sbb
js
ret
bnd
movsb
jno
inc
adc
pop
push
push
jmp
or
cmp
in
in
lret
mov
sbb
sub
or
push
inc
repz
dec
push
in
adc
dec
sarb
call
mov
lds
in
push
jo
add
mov
lea
xor
and
mov
pop
mov
sbb
sbb
fstp
push
sbb
mov
add
mov
rcll
sub
mov
insl
loop
cmpsl
lahf
popf
ror
push
sbb
hlt
cld
in
pop
out
sbb
jb
fstps
jnp
test
out
mov
jb
call
or
cltd
and
push
or
mov
mov
pop
add
push
mov
popl
jbe
pop
or
xlat
xor
je
int3
lds
lcall
scas
mov
cltd
gs
or
psubd
adc
mov
cmp
jg
dec
adcl
mov
insl
mov
fs
pop
add
xor
imul
std
inc
notb
and
push
xchg
pop
mov
push
shl
xor
jl
sti
push
outsb
mov
call
adc
sub
sti
or
orl
decl
dec
sahf
lcall
pop
std
adc
adc
in
inc
scas
xchg
addr16
jp
imul
xchg
test
inc
test
lock
call
inc
dec
js
mov
push
test
rclb
hlt
pop
dec
mov
jmp
fadds
push
and
pop
sbb
or
pop
daa
dec
push
xchg
aaa
add
int
pop
lods
scas
push
cmp
aas
inc
add
out
jae
daa
stos
iret
mov
addl
pop
xchg
nop
movsl
out
add
lret
outsb
mov
mov
sub
mov
sarb
pushf
call
je
aas
adc
push
pop
aaa
cltd
out
cld
mov
inc
rcr
dec
sbb
fwait
paddsb
jg
adc
sbb
xchg
mov
cmp
and
ss
sub
jmp
dec
inc
xchg
jo
xor
push
mov
push
inc
enter
jle
rclb
jl
movsb
in
xchg
dec
mov
inc
mov
xor
cwtl
add
mov
in
xor
jecxz
inc
les
add
jp
testl
inc
adc
cld
fldenv
push
fnstenv
push
cmp
jo
adc
pop
xchg
sub
push
ljmp
mov
es
push
mov
jo
xor
gs
stos
add
mov
xor
inc
or
xor
pop
or
std
push
jae
and
mov
lods
add
and
push
lds
mov
scas
mov
adc
rcrb
loop
mov
dec
out
shlb
push
imul
lahf
push
mov
decl
xchg
mov
fldcw
and
push
inc
aad
inc
leave
pop
push
in
ljmp
pushf
xor
adc
add
push
pushf
int3
ljmp
pop
jg
xor
ret
jb
repz
adc
leave
mov
sub
stc
sbb
xlat
popf
dec
fcmovb
int3
cli
test
or
test
es
mov
aaa
jo
dec
imul
movsb
sbb
mov
iret
es
pop
pusha
hlt
out
addr16
mov
mov
push
outsb
mov
push
add
push
ror
or
cmpsl
xchg
lock
push
mov
mov
adc
aam
cmp
icebp
in
mov
xor
pop
das
cmp
out
popa
in
push
popl
push
jae
lret
jbe
orb
and
inc
jnp
lea
push
push
mov
scas
cwtl
stc
sti
mov
in
movsl
call
les
sbb
jne
pop
loop
mov
outsl
sub
and
jnp
xlat
mov
iret
pop
into
mov
adc
mov
es
and
or
sarb
inc
lods
xchg
push
sub
dec
mov
xor
aas
xor
sbb
cmpsb
mov
mov
les
loop
in
pop
xchg
jno
mov
call
popa
lods
rcrb
arpl
aam
or
mov
subl
ja
cmc
mov
lret
jp
and
push
mov
cmpsb
pushf
or
orl
sti
cmp
int
sub
or
lret
ss
pop
out
icebp
xor
and
out
push
fadd
mov
fs
cmp
jbe
cs
mov
sbb
jns
fs
ja
mov
pop
xchg
cmp
push
scas
sbb
lods
jge
cltd
mov
push
pop
ja
lds
in
sub
mov
movsl
mov
mov
xchg
cmp
in
clc
popf
or
push
cld
daa
sbbl
repz
ret
xchg
imul
push
bound
das
mov
movsb
mov
fistps
stc
xor
addr16
and
stos
jb
stc
xchg
and
add
cmp
lods
jne
mov
test
dec
in
pushf
movsl
mov
push
or
jb
xchg
popl
pop
test
bound
in
sbb
outsl
movsb
fstl
pop
xor
pop
adc
rcrl
sub
stos
cli
pop
xchg
jg
aad
iret
dec
xchg
divb
and
mov
cmp
clc
orl
or
inc
jbe
fistps
hlt
or
jle
loopne
jns
nop
popa
cltd
fdiv
in
jo
leave
pusha
jge
add
mov
call
jecxz
iret
scas
shll
adcl
pop
mov
mov
pop
dec
jmp
cmc
cmp
test
inc
dec
push
std
inc
into
mov
pop
adc
jmp
sbb
bound
dec
push
dec
cld
outsl
enter
push
push
or
test
je
test
es
popf
push
push
enter
out
adc
mov
pop
test
jg
loop
sbbl
call
mov
aad
dec
lods
and
pop
jmp
loopne
jnp
sbb
add
ret
mov
stos
add
cmp
push
pushf
fsubr
jno
popa
movb
mov
fs
mov
mov
lods
dec
sbb
fdivrl
push
iret
iret
mov
sbb
or
lds
sbb
shlb
push
hlt
xlat
mov
cli
hlt
add
cltd
je
pushf
cmc
outsb
push
mov
aam
sbb
sbb
sti
decb
cmpsb
fs
imul
pop
or
ljmp
data16
and
mov
pop
sbb
dec
imul
push
addr16
lcall
push
cmp
dec
mov
test
mov
adc
mov
aad
sub
imul
lcall
cmp
sbb
cmp
mov
mov
int3
adc
adc
fmul
adc
xor
sub
cld
dec
in
out
push
mov
into
xchg
adc
jnp
mov
cmpsb
and
inc
xchg
xchg
mov
and
xor
jb
jle
xchg
rorb
bswap
stos
jns
or
fcomps
and
mov
xchg
push
gs
xchg
test
dec
in
loop
push
fidivl
test
loope
push
enter
rcl
xor
xchg
or
xorl
mov
mov
ret
jle
inc
ljmp
int
out
mov
fs
pushl
mov
in
shr
sarb
lods
cli
jmp
mov
pop
jne
bsf
ja
scas
cmpb
in
xor
mov
xor
xchg
mov
pop
xchg
xchg
mov
lsl
inc
push
xor
push
mov
pusha
push
sub
jle
mov
hlt
int3
in
and
push
loopne
divb
cmp
mov
outsl
cmp
inc
loop
imul
push
pushf
or
in
cmp
and
imul
inc
and
outsb
add
stos
sti
lret
mov
push
movsb
cld
sub
push
jp
sbb
imul
into
stc
insl
stos
sub
cld
hlt
out
jb
gs
mov
or
iret
add
call
repnz
cltd
mov
and
jmp
sub
fsubr
in
pushf
out
mov
outsl
ja
xor
sbb
rclb
pop
xchg
push
or
pop
sub
inc
pop
pop
cmp
lahf
cmp
jnp
in
ror
clc
push
or
stc
xor
loopne
mov
insl
fs
jae
aaa
daa
loopne
cld
mov
sbb
lds
pop
xchg
push
lds
pop
mov
sub
loope
and
push
aaa
jbe
negl
lea
xor
push
jg
mov
lods
arpl
imul
in
icebp
gs
inc
imul
daa
xlat
jge
mov
lods
mov
adc
add
dec
js
int3
dec
repnz
mov
dec
dec
sarb
adc
sub
xor
lock
pop
and
imul
aam
lea
or
jecxz
xlat
popa
push
adc
push
mov
jle
popf
xor
mov
or
shlb
pop
mov
add
setbe
xchg
cmc
jae
xchg
adc
cmc
sti
fsts
cmp
xor
negl
insl
ss
scas
enter
xor
dec
stos
push
sub
popa
aad
add
rolb
pusha
xor
sub
orl
xor
adc
out
jge
mov
jg
adc
mov
dec
fistpll
push
fdivl
jmp
mov
push
hlt
or
dec
inc
sub
lds
xor
sti
adc
scas
imulb
aam
jmp
xor
fistps
sub
movsb
inc
lods
orb
cld
xchg
dec
mov
mov
jb
mov
mov
adc
cmp
cmc
sti
jno
dec
pop
outsb
xor
inc
push
add
lock
push
pop
push
aam
jo
cmp
xor
add
movsl
sub
scas
push
mov
xchg
jle
cmp
sub
or
mov
mov
adcl
and
and
inc
inc
jg
mov
lds
movsb
movsl
or
mov
adc
jno
aad
jg
xchg
int3
pop
add
push
adc
xchg
xchg
hlt
mov
pop
data16
mov
loope
lods
and
sbb
jae
cli
aas
out
xchg
fwait
pop
push
call
xchg
xor
scas
xchg
xor
mov
cmp
das
add
jg
xor
xchg
jle
jne
sub
dec
rcll
mov
int
scas
jnp
or
and
popa
adc
iret
in
mov
dec
mov
cmpsb
xor
out
repz
sbb
sub
in
insb
ljmp
push
xchg
and
in
inc
fsts
pop
push
or
sbb
arpl
jno
push
push
arpl
adc
adc
fs
frstor
and
cltd
cmc
repnz
les
push
mov
pop
outsl
mov
inc
push
fucomp
test
and
movsb
insb
subb
mov
sub
sub
and
aas
cld
mov
and
lret
push
mov
mov
adc
clc
movsl
cli
icebp
psubw
push
pushf
adc
cli
lds
adc
jmp
out
or
sbb
push
push
movsl
test
addl
jmp
cs
sbb
jbe
xchg
jbe
xchg
inc
dec
inc
dec
in
pop
ficoml
es
jg
ja
cltd
jg
or
popf
test
pop
jno
and
xorl
jns
ljmp
mov
les
aas
xor
sub
outsl
xchg
push
pushf
jb
inc
int
mov
cmpsl
sub
xchg
cmp
sbb
adc
jbe
cmp
mov
mov
repnz
cwtl
in
lock
dec
lret
push
sti
sub
daa
rcr
rorl
sbb
fcomp
mov
xchg
std
fldl
icebp
sbb
cmp
shrb
sbb
test
cmp
xor
lea
into
into
lret
lods
xor
sub
cmc
pop
xchg
aas
popf
jmp
dec
lahf
lcall
addr16
inc
mov
or
mov
jecxz
or
in
inc
inc
xor
outsl
push
iret
xchg
push
mov
push
test
fbstp
inc
lret
inc
inc
rcll
cld
test
jg
loope
and
pop
andl
push
outsb
sub
and
out
mov
ret
iret
testb
push
adc
adc
testb
mov
fdivrl
scas
xchg
xorb
dec
xchg
and
inc
add
adc
aam
dec
iret
loopne
repnz
push
je
mov
sub
enter
sub
int
push
or
imul
jp
mov
or
shr
cwtl
cmpsl
int3
andb
daa
jle
mov
pop
movsb
push
sub
adc
cmc
lret
fidivrl
xor
lcall
addb
xchg
pop
sub
pop
mov
push
mov
lea
sbb
adc
sub
pop
stos
daa
jne
fwait
xchg
in
sbb
stos
daa
mov
jp
cs
popa
add
xor
mov
mov
sbb
adc
pop
or
add
int3
shll
leave
push
cmp
jnp
lret
cmp
lods
test
push
cli
icebp
add
xchg
cmpsl
jne
leave
xor
nop
scas
mov
lods
scas
push
mov
adc
mov
aad
jl
sub
and
ja
xchg
lret
in
mov
mov
movl
data16
mov
ja
ljmp
popf
aam
sarb
lcall
out
sbb
xlat
jle
fwait
sbb
mov
cmp
pop
leave
jae
lcall
jbe
bound
xchg
scas
xlat
jb
iret
ss
repz
push
xchg
push
sbb
mov
imulb
xchg
sahf
push
jl
mov
test
and
sbb
loop
movsl
jb
xchg
shll
mov
xchg
xchg
lods
xorl
mov
inc
xchg
sti
xchg
repnz
sub
xchg
inc
movsb
jnp
mov
test
xor
cmpsb
leave
rcrl
add
mov
cli
cmpsb
loope
iret
pop
adc
jg
sbb
mov
cli
add
outsl
out
jle
addr16
mov
sbb
pop
push
das
mov
lcall
dec
scas
into
inc
pop
add
imul
cmpsl
mov
dec
call
mov
adc
jne
jno
scas
ret
add
jmp
cmc
les
lret
lret
sbb
jnp
push
loopew
aas
sti
mov
or
mov
jle
cmp
ljmp
out
into
fcmovu
push
or
mov
pop
mov
or
mov
aad
stc
cld
jg
lea
push
lcall
xchg
add
dec
mov
pop
dec
popf
test
xor
xor
fldt
div
fs
setge
pusha
aam
jle
mov
push
sbb
mov
and
inc
cmp
sti
xor
pushf
jl,pt
xor
sbb
jge
push
in
je
scas
mov
cmp
sbb
int3
add
mov
dec
dec
ss
sub
mov
imul
mov
fdivs
je
daa
pop
fistl
aam
xlat
cmp
cmc
xchg
mov
cmpsl
cmp
repz
stos
sub
aaa
or
xchg
push
and
or
das
test
movsb
das
mov
clc
shlb
push
je
fbstp
stos
xchg
testl
mov
pusha
scas
jecxz
push
cmpsb
add
adc
pop
cmp
mov
out
mov
jo
and
mov
rolb
add
mov
fnstenv
scas
loop
ficompl
outsl
cmp
sub
mov
rcll
divl
mov
mov
jp
out
push
push
je
and
scas
in
sub
cmp
pushf
sar
arpl
adc
mov
stc
enter
setl
pop
mov
mov
add
cmc
cmp
in
inc
pop
test
test
dec
outsl
xlat
and
es
out
stc
mov
inc
cli
mov
ret
mov
dec
lret
push
jl
lret
xchg
ja
cli
ss
mov
leave
pop
movsl
lcall
sar
and
std
sti
pusha
sub
sti
mov
xor
ret
mov
mov
int3
xor
xor
pop
add
pushf
fcmovnb
push
imul
stc
mov
mov
iret
loopne
test
pop
arpl
push
loope
aam
xlat
jbe
dec
daa
xchg
pop
fildll
fnstsw
in
push
add
sbb
inc
repz
sbb
pop
fucomip
fsubl
outsl
mov
loopne
push
bound
sub
sarl
rclb
rorb
lahf
push
jb
in
mov
sbb
mov
cmpsl
aas
jbe
fwait
pop
mov
dec
jbe
leave
leave
inc
add
or
xchg
mov
cwtl
out
lds
popf
test
xchg
loope
dec
popa
pusha
xor
cmp
rclb
in
mov
negb
daa
push
cmp
psraw
or
sbb
aas
sahf
push
outsb
loop
test
adc
push
in
int
call
push
dec
xorb
das
mov
stc
ret
aam
in
filds
add
or
jbe
push
mov
repz
testb
pop
aam
ret
dec
and
jnp
cld
cmpsb
adc
cld
sar
subb
inc
push
clts
mov
popa
cmp
mov
jp
mov
jge
lsl
loopne
cmpsl
pop
shrl
mov
push
aam
sub
lcall
jbe
mov
repz
leave
int3
mov
or
add
adc
adc
add
mov
cmp
cmp
and
decl
or
cli
or
push
loope
jno
inc
fisttpl
push
push
std
mov
push
sti
xchg
mov
fistps
cld
cmp
bound
stos
sti
push
fadds
lahf
dec
lea
jmp
lret
in
out
inc
push
mov
and
sbb
xchg
sub
rorl
insb
jae
lods
mov
xor
and
cmp
sbb
inc
jmp
sbb
sub
loop
cld
fsubr
sub
ret
sub
jge
jge
bound
sub
mov
mov
pop
insb
adc
aad
outsl
add
jmp
add
jg
jmp
adc
mov
rclb
push
jg
shll
mov
push
test
ror
adc
add
xor
sti
jmp
scas
adc
pop
ja
repnz
ret
test
mov
pop
into
insb
test
sub
aas
xor
mov
pushf
movsb
test
or
clc
push
daa
xor
cmp
fs
xchg
sub
outsl
mov
mov
push
sti
pop
mull
daa
repz
mov
cmp
sbb
push
push
dec
cmp
inc
xchg
divb
pop
outsb
int3
mov
std
add
xor
int
adc
idivb
sbb
inc
cli
and
push
dec
js
pop
jle
push
push
add
xchg
aaa
add
out
mov
jmp
sub
dec
mov
test
nop
cmpsl
xchg
iret
das
js
sarb
xorl
add
push
adc
push
push
popf
xchg
dec
out
lahf
xchg
shll
jle
out
dec
js
jle
ret
fldt
add
and
je
and
js
mov
or
idivb
jle
cmp
xor
frstor
and
std
pop
jmp
adc
jnp
add
outsl
sbb
stos
shl
dec
jo
jb
jge
jbe
fistl
inc
sbb
push
xor
jl
xor
mov
sbb
out
jp
sub
popa
aas
pop
stos
pop
push
out
les
jne
pop
jecxz
jo
or
sbb
xor
jl
setns
mov
sbb
ja
xchg
xchg
aas
dec
andb
in
xchg
call
jae
mov
mov
sub
mov
inc
aas
mov
cwtl
fldl
pop
adcb
jae
xchg
popa
test
cld
mov
or
jl
movsb
or
pop
or
aad
jp
icebp
js
add
int3
aas
lods
push
out
mov
jp
insb
bound
push
roll
cmc
fldenv
ds
and
fcompl
sbb
push
jl
jmp
mov
sbb
movsb
or
outsb
adc
outsl
addr16
lds
push
push
stos
sbb
push
jno
cmp
clc
int3
xlat
xchg
xchg
mov
jle
jle
jge
shrb
iret
push
jge
xchg
lret
out
adc
xlat
mov
les
mov
mov
sbb
cmp
jo
dec
cmp
jmp
cmpsb
sub
lea
sti
es
pop
inc
cmp
pop
imul
pusha
mov
movsl
xchg
xchg
inc
add
mov
add
pop
jge
xlat
sbb
mov
sbb
rorl
cmp
xchg
pop
loope
mov
gs
xchg
jmp
dec
loopne
mov
and
adc
push
jae
shll
mov
ret
sub
mov
std
int
xchg
xchg
aam
xchg
jae
pop
sar
dec
xor
lds
or
fidivrl
cli
sbb
sbb
popa
popa
std
sahf
out
jmp
mov
mov
adc
data16
icebp
negl
cmc
mov
jmp
push
adc
les
jg
xor
pmaxsw
xor
cmp
and
mov
idivl
and
jge
pop
test
xchg
dec
cltd
std
add
notl
pop
add
int
inc
jle
test
adc
stc
test
scas
xchg
xchg
andl
mov
inc
mov
fsubr
or
int
clc
fistpll
sbb
faddl
stc
and
sub
in
or
pop
jge
ljmp
jl
and
pop
and
xchg
sti
lods
pop
loop
cli
sub
lcall
loop
pop
cmp
dec
ret
push
dec
mov
sub
lret
movsb
orb
cmpsb
inc
add
std
pusha
lods
and
nop
test
pmulhw
ss
mov
adc
repz
mov
stos
xor
hlt
inc
mov
xor
lret
dec
cmp
stos
out
adc
mov
shlb
push
dec
sub
divl
shrb
sbb
test
jecxz
fbstp
lods
sti
test
pop
add
fcoms
add
sub
xchg
mov
pop
dec
adc
adc
xchg
in
hlt
je
jge
test
mov
or
and
inc
testb
sahf
sbb
push
inc
scas
arpl
xchg
cli
fwait
inc
fcmovnbe
fsubs
and
ss
pop
add
pop
jmp
inc
and
aaa
add
scas
inc
push
shll
or
jp
insb
movsb
lds
and
mov
fbld
insl
jl
mov
incl
fdivr
daa
mov
mov
sub
es
mov
jge
ja
or
inc
leave
out
mov
and
mov
jbe
lods
mov
jge
in
je
in
jb
push
out
ret
xor
hlt
push
adc
iret
dec
lea
mov
jns
push
popf
testb
shll
jnp
pop
jle
add
pop
test
repnz
mov
inc
pop
jge
or
jmp
inc
add
insl
xlat
in
mov
mov
push
pusha
rolb
xor
xor
push
fstpt
sbb
je
xchg
inc
mulb
insl
inc
inc
mov
adc
jmp
push
repz
pop
std
in
sarb
mov
adc
popa
int3
sub
mov
inc
xchg
lret
mov
cmc
pop
and
addb
mov
mov
cmp
adc
out
scas
or
add
adc
std
mov
shr
push
jge
jno
shlb
sbb
mov
std
sub
mov
xchg
call
repz
jns
jne
and
pop
pop
aam
sub
sub
push
out
inc
pop
ja
mov
add
cmpsl
icebp
shlb
into
sbb
push
repz
mov
mov
mov
shll
push
adc
dec
arpl
in
xor
push
mov
test
daa
addr16
push
mov
push
dec
ret
or
enter
add
cmp
ret
test
lods
pop
dec
imul
mov
pop
movsl
jl
ja
fidivrs
test
adc
aam
inc
insb
mov
add
cmp
test
sbb
mov
iret
pushf
roll
push
push
out
push
jp
xor
or
in
shll
mov
xchg
jle
jmp
adc
push
test
mov
xchg
in
cmpsb
jne
xor
xchg
mov
pop
pop
ss
push
lcall
filds
mov
inc
scas
mov
adc
fidivs
mov
adc
sbb
jo
call
sbb
call
xor
push
stc
rcll
arpl
and
in
mov
or
loop
sbb
mov
fwait
adc
out
jg
leave
sbbb
sub
rcrl
cwtl
fldl
mov
pushf
movsl
sbb
sub
inc
fdivrl
sbb
ljmp
subb
sub
out
aam
fadd
cs
mov
cmp
push
xor
stos
out
loop
std
jnp
pop
jae
nop
scas
cmp
pop
icebp
adc
movsl
and
sub
jno
or
sarl
push
xchg
enter
push
jb
testb
js
push
mov
or
popa
mov
cmpsl
xor
sub
test
adc
mov
adc
jb
mov
or
cmpsb
sbb
popa
and
loopne
shlb
inc
cmp
xchg
jbe
inc
push
stos
xor
sbb
frstor
daa
cwtl
xchg
cmc
lret
xchg
mov
mov
lods
int
out
dec
and
push
lret
shrl
stc
enter
test
ds
cltd
jno
loop
mov
aaa
insb
push
xchg
jae
cs
mov
xor
mov
inc
xchg
push
cmpsb
xchg
or
out
mov
aaa
jp
inc
cmc
add
and
aaa
adc
and
inc
push
pop
fisttpll
mov
add
add
mov
pop
fsubs
orb
pop
xlat
popa
dec
lret
pop
sti
jbe
mov
or
insl
inc
popa
out
sbb
rcrb
xchg
pop
or
sbb
mov
stos
jae
fcmovnbe
sarl
sub
xchg
cmp
mov
or
dec
test
std
mov
jp
test
or
stos
push
mov
xchg
rcrb
subb
inc
lret
add
mov
mov
inc
pop
movsb
pusha
ljmp
sbb
orl
pop
and
sarl
mov
mov
add
sbb
inc
pop
push
mov
mov
js
inc
mov
push
int3
addr16
and
add
pop
hlt
mov
out
dec
maskmovq
divl
sub
mov
pop
xchg
push
cltd
sbb
lds
xor
or
jno
jge
hlt
push
jmp
out
fwait
mov
mov
jp
add
inc
pop
cs
mov
stc
hlt
and
fisubrl
mov
pop
jb
adc
cmp
orl
repnz
or
xadd
loopne
pop
adc
gs
je
and
jns
push
pop
adc
pop
fwait
dec
gs
dec
and
mov
loope
pop
ds
mov
push
pop
in
xor
xor
inc
xorb
mov
inc
jg
adc
lret
jns
push
jb
cmp
inc
push
imul
jl
les
shll
add
cmp
xchg
jle
sti
in
int
jecxz
or
sarb
inc
push
mov
notb
cmp
adcl
and
inc
mov
xor
insl
jno
stos
in
sub
xchg
addr16
and
mov
and
imulb
pop
mov
jmp
mov
add
jnp
and
je
inc
push
jg
inc
mov
add
mov
imul
cmpsb
fbld
mov
daa
fnsave
into
cmp
jl
loopne
sbb
add
stos
jl
xchg
push
arpl
or
and
cmpsl
jg
sahf
xor
mov
sub
call
and
xor
orb
xlat
aas
data16
lahf
out
lock
call
inc
ljmp
ljmp
das
jno
and
mov
pop
mov
popa
jmp
lahf
cmp
adc
add
dec
jmp
das
xchg
mov
mov
push
out
out
xor
cs
push
or
cs
or
inc
push
mov
stc
fs
adc
lods
dec
pop
es
dec
mov
test
lods
jno
sub
lahf
jae
stc
cmp
mov
icebp
mov
jne
xorb
jmp
jne
pop
nop
mov
imul
sbb
popf
or
cmp
test
std
xchg
insb
movsb
push
ret
int
in
push
xor
mov
lock
test
cmpsb
lea
push
loope
sbb
movsl
mov
mov
dec
jne
es
ficompl
movsb
inc
cltd
ss
loopne
push
decl
sub
cmp
jbe
push
mov
in
fcompl
rcl
add
ret
add
out
lods
popa
push
mov
negl
movsb
adc
mov
push
test
test
hlt
push
and
das
repnz
mov
pusha
mov
sbb
mov
push
sbb
lea
mov
lods
jp
in
subb
push
cmc
add
loop
mov
imul
sbb
sub
jne
lret
rorb
out
lret
nop
rclb
push
xor
inc
mov
mov
adcb
out
fdiv
add
push
jecxz
test
imul
out
xchg
xchg
es
xchg
push
pop
shrb
in
jge
ja
jno
movsb
cmp
lahf
sahf
loop
les
sbbb
fisttpl
adc
cmpsb
xchg
dec
push
cld
and
and
in
xlat
sbb
push
stc
sub
lret
std
cwtl
jnp
push
sbb
mov
pushf
mov
call
mov
cmpsb
jo
lahf
fwait
push
icebp
jmp
mov
dec
fidivl
mov
mov
ret
pop
xchg
sub
push
jle
lcall
cmp
dec
ljmp
xor
jp
sti
push
addb
movb
int
cld
fidivs
dec
jbe
add
mov
out
dec
cmp
ret
inc
cwtl
mov
jg
shrb
subl
cs
or
or
push
pop
jnp
cwtl
xchg
adc
adc
stos
mov
je
repnz
push
jne
jmp
leave
mov
jmp
xor
mov
adc
push
xchg
in
mov
or
lea
out
lea
imull
pusha
jbe
sbb
jo
inc
sti
add
test
inc
stc
cmp
jge
insb
stc
add
inc
arpl
into
add
mov
scas
in
xchg
pop
xor
decl
add
xor
in
pop
repnz
cwtl
inc
repnz
jo
jge
lods
xchg
and
push
inc
inc
pop
jae
mov
cmp
push
out
mov
mov
dec
ja
mov
das
xchg
cmpb
and
dec
popa
test
and
insl
leave
ror
or
pop
out
and
sti
dec
push
dec
mov
cmp
cmp
hlt
and
movsb
inc
addr16
or
rclb
icebp
rorb
jae
cmc
xchg
lret
aam
mov
movsb
add
pop
shlb
inc
test
rcll
push
in
neg
xchg
and
xor
sbb
sahf
mull
test
sub
iret
xor
mov
das
inc
leave
inc
das
sub
sbb
pop
test
fwait
mov
lds
jle
mov
jl
adc
js
push
js
mov
pop
push
testl
leave
repz
nop
cmp
call
ljmp
mov
cmp
jmp
test
cli
cmp
daa
pop
sbb
inc
cmp
in
fwait
sub
sbbb
jmp
xchg
mov
jnp
mov
fcompl
fmull
outsb
mov
mov
repz
mov
fs
mov
sbb
movsb
jle
fstpt
sahf
dec
fs
xchg
les
shl
ficomps
sub
rorl
inc
lcall
inc
mov
adc
shrl
outsl
stos
mov
sahf
fiaddl
imul
inc
pop
loop
xchg
cltd
xor
loopne
xchg
inc
sbb
fnsave
insb
xchg
mov
or
ja
iret
addl
rcl
gs
daa
mov
mov
arpl
sbb
push
arpl
scas
imul
fimuls
setl
aad
insl
sub
gs
or
pop
inc
inc
pop
xchg
and
xor
in
inc
in
mov
add
pop
push
shlb
data16
addr16
push
dec
push
ds
and
push
sub
inc
leave
dec
mov
jle
jno
addr16
imul
lods
popa
lahf
and
into
pop
stc
or
call
aad
inc
add
xor
inc
pusha
sbb
jg
dec
repnz
sbb
lret
mov
lea
push
ret
jbe
push
subl
fldl
arpl
push
jbe
cltd
jae
mov
mov
push
or
hlt
stos
or
rolb
and
xchg
dec
sub
jne
popa
outsl
fists
rcrb
hlt
sbb
shrb
or
das
mov
ds
cmpsb
js
lds
lret
fidivl
jg
ret
mov
jge
cmpl
add
mov
cmp
dec
fmul
jge
out
push
jb
addb
loope
rcll
sub
enter
sbb
cmp
stos
lods
pop
popf
cmp
dec
pop
dec
and
outsb
adc
stos
enter
sti
adc
cmp
push
cmpsl
fisubrs
int3
movsl
xor
dec
mov
push
mov
add
mov
mov
call
cmpsl
popa
dec
hlt
test
inc
dec
lcall
popa
fisubl
loop
loopne
fwait
ljmp
jno
pop
fcom
subb
cmp
out
adc
pop
push
movsl
cwtl
mov
inc
dec
arpl
xchg
sahf
lea
dec
push
jnp
sbb
scas
mov
cmpl
popf
mov
or
dec
add
imul
lea
or
cmp
scas
mov
gs
repz
and
int
stc
add
or
jb
lret
cmp
data16
test
inc
inc
jecxz
or
mov
test
xor
cli
mov
aaa
xchg
les
insb
repnz
jae
scas
inc
xchg
pop
test
and
int
mov
inc
fs
add
inc
mov
mov
xor
adc
cmp
sub
cmp
cli
cmp
fcmovnb
pop
jnp
mov
mov
sbb
jmp
es
mov
jo
repz
add
cmp
cmp
cmp
andb
vshufps
add
adc
out
inc
lahf
scas
xor
scas
sub
ja
mov
gs
dec
add
add
pushf
xchg
repnz
popl
and
fnstenv
mov
pop
mov
push
js
popf
enter
addl
pop
and
mov
inc
sbb
xchg
test
ret
stos
imul
jp
inc
mov
fbld
mov
stc
jne
sub
mov
sbb
prefetch
or
stos
inc
mov
xchg
mov
lods
xor
push
int
lock
cmp
push
mov
and
mov
jb
xchg
in
push
stos
pop
lock
into
mov
xchg
and
sbb
shll
aam
sbb
mov
pusha
push
pop
imul
lcall
shr
stos
mov
pusha
mov
dec
jge
pop
sbb
mov
mov
sub
xchg
dec
and
loope
sbb
sub
lcall
repz
leave
sub
sub
icebp
leave
enter
loope
sub
ret
jg
aas
and
fiaddl
mov
inc
movhps
lds
test
mov
subl
mov
and
push
fildll
mov
dec
pop
or
fidivl
pop
cmpsb
inc
mov
or
jbe
pushf
pop
pop
xchg
cmp
jb
jnp
inc
push
sbbl
idivb
lcall
js
pop
ss
shrb
jbe
rcr
xchg
or
sbb
mov
cld
mov
lahf
ss
mov
ss
xchg
xchg
xchg
pop
inc
lahf
addr16
pushf
cmp
dec
pusha
xchg
inc
or
adc
push
and
pushf
mov
out
cld
fldl
sbb
mov
lahf
sarl
aas
fbstp
pushf
or
jae
push
fiaddl
stc
cmpsb
gs
xchg
mov
loopne
frstor
xchg
mov
jge
cli
mov
out
sbb
aad
out
mov
cld
aam
add
push
fstps
pop
sbb
aas
subl
inc
pushf
xor
xor
and
xchg
cmp
mov
inc
inc
leave
bound
enter
roll
fld
and
dec
inc
sahf
xor
xchg
cmpsl
mov
sub
push
jne
sbb
lods
inc
cmp
in
dec
test
adc
insl
dec
jmp
aam
mov
sbb
das
mov
cmc
dec
push
fwait
scas
mov
mov
and
push
rcll
scas
cmc
jo
mov
test
dec
cmp
lods
mov
fyl2xp1
push
pop
add
insl
ficomps
cmp
loop
out
es
or
insw
addr16
xor
scas
push
inc
mov
sub
xchg
pop
mov
imul
and
xlat
stos
shr
adc
fdivrs
or
xchg
xchg
fdivl
adc
into
add
jbe
inc
shlb
loope
fnstsw
mov
lock
xor
push
xor
add
dec
aaa
gs
jae
mov
push
into
popa
sub
repz
and
sbb
sbb
adc
ja
sahf
rcrb
pop
pop
cmp
lahf
pop
aam
bound
pushl
or
push
subl
jge
movl
stos
leave
adcb
fisubrl
dec
ja
test
push
les
xchg
pop
in
sub
pop
sbbb
hlt
adc
dec
or
out
bound
add
pop
test
test
sbb
jmp
arpl
add
testl
fsubs
cld
stos
repz
rorb
gs
ja
mov
inc
movsb
lods
and
js
pop
push
in
or
sar
and
adc
daa
push
orl
sbb
mov
out
inc
jne
push
push
add
jg
dec
mov
mov
test
xchg
movsb
xor
cmp
fldt
or
adc
leave
outsb
jecxz
popa
cmp
mov
ret
and
loope
add
and
or
push
and
mov
xor
cmp
xor
loopne
jbe,pt
mov
lods
lcall
pop
lock
xchg
stc
stc
mov
bound
test
push
xor
dec
imul
frstor
cltd
gs
cmp
and
mov
cmpsl
xchg
aad
push
out
jmp
cmpsb
movsb
jecxz
sbb
mov
into
popa
nop
mov
sbb
jle
cmpsl
pushf
in
jl
dec
in
fdivl
cli
sub
and
and
stc
push
mov
movsl
in
sahf
mov
loope
sub
jle
insb
jmp
pusha
and
mov
adc
and
aam
jo,pn
orb
pop
and
cmp
insb
jg
and
arpl
rclb
adc
mov
push
push
jge
addr16
shl
imul
dec
ja
stos
lret
jno
add
mov
xor
pop
mov
and
bound
pop
sub
mov
sub
push
call
jbe
xchg
jg
mov
push
cld
push
aas
icebp
xor
push
roll
jecxz
loop
add
arpl
cld
jno
loop
dec
rcl
test
fldcw
xchg
stc
jecxz
dec
pop
jmp
std
loopne
lods
ret
adc
inc
push
pop
sbb
jp
dec
popf
sbb
xchg
push
mov
lahf
mov
xor
dec
out
cmc
pop
aaa
fs
mov
and
xor
cs
stc
push
ss
push
in
add
shrb
loope
andl
jns
adc
pop
xchg
outsl
loope
xor
mov
sub
cmpl
daa
push
clc
push
clc
mov
pop
lahf
mov
in
lods
cmp
xchg
sbb
cmc
test
stc
daa
les
call
out
fsubrs
lahf
adc
mov
xchg
pop
sarl
pusha
cmp
xchg
hlt
cmc
xchg
or
imul
mov
lahf
sub
push
cmpsb
dec
inc
in
int
and
push
mov
pop
cmpsl
dec
inc
xchg
push
inc
cmpsb
cmpsb
mov
dec
inc
mov
bound
mov
and
shl
jbe
xor
push
fcomp
loopne
cmp
std
mov
jl
imul
pop
imul
fdivrs
scas
jmp
mov
test
lea
xchg
std
dec
shrb
stos
lcall
dec
or
repz
xchg
adc
lods
insl
inc
std
clc
inc
scas
leave
jl
cmc
movsl
mov
out
and
out
inc
add
mov
mov
mov
inc
outsb
mov
sub
jp
es
lea
dec
add
hlt
dec
fcomp
xchg
dec
addr16
test
js
jmp
dec
movaps
in
inc
clc
hlt
inc
xchg
mov
xor
pop
and
movsl
pop
cmp
sub
int3
add
dec
in
lea
aam
repnz
je
popf
adc
daa
es
sub
jno
aam
out
jge
inc
fidivl
or
es
push
mov
rcl
rorl
into
cwtl
xlat
insl
pop
push
aas
ja
and
gs
and
fs
mov
in
dec
inc
stos
lods
xchg
inc
sbb
cmp
out
psubusw
mov
sub
inc
shr
fistpl
sub
adc
xchg
les
pop
cmp
in
sub
sub
cmpb
add
jo
xchg
rolb
cs
lods
test
mov
fidivl
cltd
push
or
das
test
sbb
mov
push
bound
dec
out
mov
pop
ffree
and
mov
push
jne
ret
mov
jb
pop
xchg
add
or
jg
xorb
mov
cmp
cmp
add
lods
adcb
insb
pop
js
fs
aas
cld
ret
sti
imul
cmp
or
cwtl
dec
sbb
xor
adc
mov
cli
fstpt
add
push
sbbb
movsl
pop
cmp
mov
popf
fwait
add
xor
xor
dec
dec
psubsw
adc
xor
jle
out
stos
xchg
pop
adc
xchg
jns
je
sbb
jge
push
and
or
shl
xlat
nop
xor
dec
xchg
out
and
dec
sahf
xor
jg
test
mov
adc
addl
mov
dec
pop
jge
loopne
iret
sub
fdivs
cmp
daa
ja
data16
jbe
inc
mov
mov
push
daa
ljmp
sbb
orl
xchg
jmp
jecxz
imul
orb
push
es
sbb
mov
inc
loopne
popl
andl
push
lock
clc
ja
or
stos
mov
sub
loopne
lret
int3
adc
mov
jo
sbb
adc
or
fdivrl
imul
cmp
enter
add
dec
fsubp
subb
push
mov
push
lock
dec
xchg
out
fld
dec
sbbb
clc
cld
decb
mov
loope
push
cs
scas
inc
in
cmpsb
mov
pusha
les
push
mov
jns
lock
dec
push
inc
inc
in
xchg
jmp
mov
je
inc
loope
dec
xchg
lcall
gs
mov
sbb
mov
mov
lods
jecxz
gs
mov
pusha
or
jg
dec
inc
ret
sbb
ret
push
dec
inc
cld
cmp
mov
in
push
lods
sti
hlt
push
lgs
mov
xorb
sbb
mov
push
ss
push
das
rep
loop
xchg
cld
sarl
rcll
and
push
gs
arpl
sahf
cmpl
out
repnz
dec
sbb
xchg
mov
sbb
fistpll
mov
mov
out
inc
sbb
sahf
dec
cmp
hlt
jmp
aaa
fimull
sahf
sti
stos
out
gs
xchg
loope
shlb
lods
add
adcb
aam
mov
and
pop
or
daa
sub
mov
jno
lock
rcrl
dec
dec
or
pop
leave
jp
xor
jae
pop
hlt
stc
test
repnz
mov
jl
addb
imul
lret
xchg
imul
rclb
clc
popf
adc
jnp
stc
imul
test
in
mov
lods
xor
xchg
mov
xchg
jecxz
pop
push
jns
rcrl
decl
rcl
and
mov
cmp
mov
popf
mov
fstpl
into
mov
or
leave
lds
mov
jle
shlb
mov
lods
mov
fbld
in
test
push
push
loopne
fwait
xor
cmp
shlb
in
loope
jecxz
aam
sub
mov
push
xor
adc
in
loope
movsb
pop
and
fldt
xor
into
pusha
hlt
lds
push
sub
shrb
sbb
out
jae
test
mov
in
push
push
mov
mov
sarl
adc
and
add
inc
shlb
and
mov
and
rorl
clc
cmpsb
inc
fdiv
out
push
clc
adc
lahf
push
push
ret
cld
decb
xchg
lea
dec
lds
aam
sub
push
pop
sub
shlb
frstor
aaa
cmp
mov
dec
cmp
dec
pop
lods
pusha
sub
aas
xchg
out
arpl
adc
xor
pop
js
es
push
and
loop
sub
sti
inc
arpl
mov
out
or
inc
aam
mov
cltd
cmp
shr
aas
mov
inc
pop
fnstsw
cwtl
sahf
cli
mov
lret
rep
mov
mov
add
mov
and
sbb
mov
cs
stc
sahf
rolb
add
aas
xlat
xchg
mov
adc
scas
aas
bound
int
fs
pop
rcrl
in
jp
cld
inc
in
ds
das
adc
or
cmpsl
pop
mov
jo
icebp
jp
daa
push
jb
insb
push
aad
push
cmp
pop
hlt
in
pop
inc
push
adc
repz
out
or
fwait
pop
testl
sub
sub
xchg
pop
lods
push
lods
mov
xlat
rclb
stc
testb
jecxz
in
dec
add
loopne
adc
xchg
mov
jnp
sbb
cmc
fucomip
les
jge
sbb
pop
mov
dec
xchg
insl
test
pop
sbb
push
xor
aas
aaa
add
stc
jl
loopne
cmp
test
pop
pop
jae
or
sbb
or
sbb
adc
dec
ss
fs
jmp
data16
iret
adc
inc
inc
pop
mov
or
push
out
pusha
or
xchg
push
int3
out
pop
pop
adc
test
adc
lea
mov
pop
movsl
push
aaa
loopnew
iret
bound
cld
xchg
fucomp
mov
aaa
or
imul
xchg
adc
push
inc
jo
jl
jp
sub
add
in
pop
push
ror
jbe
ljmp
sub
aad
push
ljmp
xor
dec
mov
data16
lret
and
idivl
pushl
push
xor
xchg
repnz
negl
lea
std
sbb
bsf
sub
scas
sub
test
in
pop
cmp
test
mov
mov
inc
mov
cmp
pop
mov
aas
aam
filds
jne
ret
dec
pop
mov
mov
js
clc
imull
sub
sahf
pop
aas
and
rorb
push
mov
xor
fwait
jo
testl
push
mov
lea
out
notl
or
cmp
mov
imul
bound
adc
jae
frndint
scas
ret
and
xlat
mov
je
dec
cli
xor
test
jae
add
adc
or
push
mov
lods
jl
std
jmp
fs
push
fisttpll
jp
xchg
in
fmul
in
mov
outsl
and
test
or
adc
andb
pop
pop
xchg
sbb
in
jns
arpl
cmp
gs
test
ret
lock
fbstp
jge
aad
inc
cld
cmp
stc
jp
dec
cmp
fistl
js
orl
pop
test
or
mov
pushf
mov
test
push
iret
cmp
fistps
outsl
repz
adc
adc
mov
push
scas
cmp
cmp
xchg
push
sbb
mov
inc
scas
xlat
and
leave
aam
or
ret
aam
filds
or
cli
add
jne,pn
insb
xor
fwait
call
adc
je
mov
sar
pop
sahf
add
jns
sbb
enter
jns
aas
mov
xlat
std
rorl
mov
scas
lds
movsl
fildll
sbb
fidivrl
push
jb
sbb
sbb
push
ds
movsb
leave
push
les
in
fwait
je
xchg
inc
cmpsl
cwtl
test
cmp
dec
jb
in
mov
sub
jne
nop
or
arpl
xchg
add
sbb
dec
jp
ljmp
fs
pop
jp
cmp
lea
push
les
jl
inc
xlat
and
push
sarb
fdivp
push
add
ret
mov
inc
ljmp
or
lret
cs
and
xchg
subl
in
daa
sbb
and
fldcw
xchg
jbe
push
push
test
mov
sbb
xchg
xor
adc
pusha
push
pop
cwtl
dec
and
xor
loope
sti
mov
out
lahf
lods
clc
into
je
dec
and
xchg
xchg
mov
inc
pop
outsb
jb
xchg
pop
addb
movsb
stos
inc
outsb
das
mov
jmp
fisubs
jne
sub
leave
mov
or
and
sub
mov
fwait
pushf
sbb
or
adc
ret
cmp
popa
mov
xlat
leave
cmpsl
out
add
pop
or
int3
out
jnp
xor
lea
pop
call
mov
in
imul
je
push
xor
js
popl
lock
dec
into
mov
fdivs
insl
outsb
sbb
mov
subb
push
push
xor
dec
sbb
adc
pop
notb
mov
mov
iret
cmp
lahf
sub
push
lea
lock
inc
nop
nop
addr16
jae
dec
cltd
test
mov
jns
cmp
jp
out
mov
fidivrs
cld
xchg
push
cmp
adc
int
sub
mov
js
in
fimull
adc
and
shld
xchg
movsb
call
fldt
pop
call
mov
inc
inc
inc
lods
outsl
sbb
stos
mov
fisttpl
pop
iret
lods
enter
mov
adc
or
cs
orl
std
mov
sahf
int
ret
popa
sub
test
sbb
push
es
pushf
stos
mov
mulb
push
outsb
call
sti
sar
add
sarl
out
pop
sar
lret
add
shlb
clc
test
jo
sub
pop
fbld
inc
lret
daa
fnsave
xor
jne
jns
lcall
mov
ret
sahf
insl
in
xchg
cwtl
ja
and
push
mov
rorb
push
clc
cmpsl
fs
xlat
and
dec
imul
insb
out
aad
pop
popa
or
push
clc
push
mov
ret
push
pop
push
dec
push
lcall
loop
lods
fcoms
or
push
stc
pop
push
imul
add
mov
sub
push
push
cmp
xor
popa
sbb
dec
or
mov
pop
rclb
outsb
inc
cmp
mov
inc
cmp
xchg
jg
insl
sub
jb
fisttpll
fsubp
sahf
mov
hlt
int
inc
dec
fs
ds
sbb
jg
cmp
jl
cmp
shrl
adc
add
fisubs
outsl
or
aaa
or
sub
jmp
inc
movsb
jns
push
pop
pop
pop
ljmp
aad
repnz
into
push
loopne
mov
daa
mov
in
cli
mov
push
jbe
loop
cmp
dec
movsl
xor
jb
call
jp
mov
xchg
fbld
adc
je
stos
push
ds
xor
adc
ja
jecxz
out
mov
test
jl
sub
scas
mov
mov
aam
mov
movl
fldt
xchg
cmp
jmp
sbb
sub
jbe
movsl
out
testl
sub
in
push
mov
push
dec
push
inc
fdivp
imul
jbe
xor
jmp
inc
test
add
ret
push
push
imul
cmpsl
xchg
cmp
fwait
lahf
dec
and
cmp
pop
push
mov
mov
mov
iret
or
sbb
mov
es
sub
cmp
jge
insl
mov
adc
pop
cmc
sub
js
cmp
add
roll
push
fstl
inc
out
clc
xor
push
fldenv
das
jecxz
push
xchg
addr16
inc
sub
and
inc
sbb
lret
cmp
in
push
lock
xor
pop
sub
jbe
mov
mov
outsl
rorl
cmp
hlt
subb
inc
mov
movsl
inc
pop
add
mov
mov
data16
fnstenv
and
push
inc
sbb
pop
les
pop
xchg
mov
stc
push
ljmp
in
pop
and
outsl
dec
and
popa
pop
cmp
xchg
add
mov
push
pop
mov
lret
pusha
imul
movl
inc
movb
mov
pop
int3
repz
arpl
movsl
js
cwtl
jo
ja
push
jae
orb
clc
test
jb
cmpsl
dec
je
aaa
cmp
dec
pop
pop
pushf
xchg
cli
neg
aas
shlb
xchg
nop
mov
icebp
dec
xor
inc
sti
push
cmp
lds
add
lods
jns
cmp
inc
xor
ljmp
mov
adc
jge
and
psubusw
verw
cs
mov
xchg
sbb
popf
out
jle
shl
fistl
lcall
sbbb
xchg
into
iret
mov
lcall
in
mov
sub
cmp
inc
sti
dec
xchg
sub
mov
dec
test
ret
out
mov
test
fstpl
std
mov
mov
ljmp
xchg
sbbl
push
dec
add
inc
jp
xor
sub
xchg
push
int3
ret
push
into
push
stc
add
out
sbb
mov
mov
loopne
cmp
adc
lods
or
fidivrs
aas
mov
push
add
and
jnp
ret
test
outsb
mov
jle
cmp
icebp
movsb
shl
xchg
cmpsb
fidivs
loopne
jmp
xlat
mov
mov
rorb
popa
cmp
sub
pop
pop
push
fdivrs
cwtl
popa
and
leave
add
test
sub
sub
jle
and
dec
push
test
inc
std
sub
xlat
jbe
cwtl
mov
stc
pop
adc
adc
cmpsb
dec
jmp
stos
pop
xor
mov
test
lods
mov
lea
flds
bound
xchg
lret
sbb
jae
arpl
inc
and
hlt
jnp
jnp
mov
ret
pop
mov
mov
mov
orb
or
out
or
outsb
mov
jecxz
xor
jmp
jp
dec
addb
inc
pop
loop
pop
cmpsb
ficompl
jle
add
mov
in
imul
repnz
inc
loope
into
mov
xor
fisttpl
popa
mov
add
adc
or
jne
js
mov
ljmp
ds
ficoml
jp
es
fnstsw
addr16
fdivl
jne
ss
fadds
jecxz
inc
push
add
inc
notb
sub
je
repnz
test
std
psubsw
push
push
sub
adc
and
out
mov
jae
jno
out
mov
aad
xor
loop
pop
pop
cmc
andb
jae
not
test
outsl
xchg
cmc
push
push
jg
test
sahf
sar
stc
ficoms
push
jle
das
fs
pop
stos
mov
dec
test
adc
inc
fisttps
iret
mov
pushf
or
inc
pop
push
cmp
mov
iret
xchg
cmp
push
inc
mov
dec
adc
cmpsb
adc
or
jmp
mov
and
adc
cmpsb
and
fucomip
sub
mov
mov
sub
aaa
pop
dec
in
imulb
jp
adc
xchg
mov
jmp
mov
test
rorl
mov
out
jae
lods
push
scas
arpl
push
nop
pusha
mov
andb
mov
cmp
xlat
jp
mov
arpl
insl
xchg
das
push
sub
mov
repnz
mov
add
aaa
and
xor
lea
iret
cmpsl
push
inc
jmp
rcrl
es
repz
fiaddl
inc
mov
es
adc
lods
add
sub
repnz
adc
cltd
dec
cmp
sahf
loope
in
and
mov
dec
js
mov
mov
cld
mov
sahf
fdivr
mov
rorw
mov
test
jb
insl
leave
outsb
lret
add
jno
push
adcb
adc
shll
mov
xlat
enter
and
pop
push
jle
sub
js
or
sub
fidivrs
jne
jl
cmp
jnp
das
mov
pop
outsl
popf
dec
sub
lret
mov
clc
jp
movsl
out
les
xor
sbbb
xchg
pop
jnp
outsl
add
pushf
adc
pusha
mov
adc
pushf
movsl
dec
mov
scas
repnz
and
mov
xchg
push
add
and
fs
ja
loopne
adc
ret
ret
jnp
lfs
cmp
cmp
sub
arpl
xchg
cmp
daa
mov
ficoml
jle
add
rolb
sbb
imul
sbb
jne
push
sub
xchg
fwait
jg
scas
aam
das
push
stc
mov
mov
sub
dec
aas
sub
fsub
icebp
inc
test
jge
rclb
jne
test
adc
cmpl
sub
repz
mov
leave
jmp
add
push
pop
out
push
pop
aad
inc
aad
pop
stos
mov
cmp
lret
fsubrl
and
adc
xchg
daa
inc
xchg
inc
inc
jg
fisubl
sbb
fdivs
push
les
jmp
andl
divb
mov
lods
ja,pt
popf
dec
sub
inc
mov
cmp
pop
enter
aas
in
data16
jae
jmp
jmp
add
outsl
ss
fdivrs
shrb
mov
jb
dec
adc
insb
inc
mov
jne,pt
cmp
pushf
mov
lods
test
xor
xchg
mov
shl
sub
out
popf
cmp
and
cmc
or
sbb
jge
jne
out
xchg
ja
addr16
cmp
aam
out
xor
sbb
out
addr16
bound
xorb
pop
testb
mov
pop
loopne
rcr
jecxz
jecxz
xorb
push
out
pop
mov
in
jmp
mov
out
sbb
jl
xor
sbb
xchg
aas
es
and
push
jp
xor
xlat
into
pop
push
xchg
mov
out
adcl
js
dec
sbb
xor
sub
fisttpl
sbb
sar
xchg
jmp
dec
stc
lcall
add
add
sahf
inc
or
and
insl
mov
add
shll
das
jo
cmp
ret
push
or
push
and
push
int3
jbe
mov
pop
sbb
lea
insb
ret
cmp
sti
out
filds
pop
fnstcw
add
loopne
inc
mov
xchg
push
mov
push
enter
aam
push
jecxz
mov
xchg
inc
adc
mov
push
pop
out
clc
xchg
sti
cmp
xor
xor
pop
es
mov
addb
inc
insb
xor
inc
push
jl
sub
fisubs
pop
rcr
arpl
divl
dec
dec
or
and
pusha
add
cmp
jno
clc
mov
mov
les
aas
scas
xchg
jae
or
mov
push
mov
test
xchg
rcrb
adcl
cmp
jle
call
sbb
fcmovnb
daa
mov
xchg
dec
aaa
scas
xor
clc
idivb
repz
sub
lods
push
add
jb
pop
inc
insl
pusha
pop
fistps
dec
loop
sbbl
lret
mov
sub
pop
repz
fists
jo
cmp
repnz
lds
push
pop
popa
pusha
xchg
push
push
stos
dec
inc
in
rcr
cmp
mov
pop
jbe
ret
pop
sub
cwtl
mov
shll
lods
pop
lcall
lods
adc
mov
push
inc
sub
hlt
push
xchg
and
popa
repnz
jo
push
pop
loope
push
movb
adc
xor
scas
mov
sti
clc
outsb
cmpl
xor
imul
arpl
sub
mov
push
push
imull
subl
jge
movsl
xchg
sub
lret
dec
into
xchg
and
pushf
lods
movl
out
ja
pop
push
add
repnz
mov
test
std
adc
xlat
push
adc
lret
and
xor
addl
add
mov
sub
into
jns
pop
lcall
aad
sub
mov
int
clc
jb
push
pop
and
nop
cmp
addr16
cmp
dec
js
lods
pusha
pushf
cmpsl
adc
mov
sub
xchg
add
in
mov
cld
and
mov
sbbb
loopne
mov
mov
jg
mov
xchg
mov
mov
inc
jge
and
push
lea
dec
sti
test
inc
shll
xadd
call
lods
fists
in
fmuls
addl
xchg
clc
test
cmpsl
push
ja
add
or
fdivp
sbb
sub
mov
fst
mov
add
shll
dec
mov
outsb
dec
adc
shll
jbe
mov
inc
rorl
js
pop
cmpsl
dec
xchg
es
mov
sbb
dec
insl
pop
fwait
jno
add
rclb
cmp
call
int3
adc
add
repnz
out
xchg
loope
push
cwtl
scas
cli
push
lods
test
add
cli
add
js
add
mul
in
mov
jle
push
lods
mov
repnz
xor
xchg
and
sub
jl
or
icebp
leave
sar
out
xchg
cltd
mov
adc
scas
icebp
mov
adc
in
push
jae
icebp
imul
or
lds
icebp
fcoml
mov
or
inc
jo
in
mov
sub
or
mov
adc
pop
dec
or
out
add
repnz
or
mov
in
js
ja
pop
or
adc
cmpsl
jmp
mov
jge
out
lds
lcall
or
fucomi
xor
push
sbbb
hlt
stc
or
sbb
dec
sbb
or
jno
adc
sub
inc
adc
dec
xchg
push
xor
int
dec
ficomps
jg
dec
stc
outsl
fwait
xchg
ja
cmpsb
mov
sbb
add
jno
icebp
inc
sbb
dec
mov
stc
mov
icebp
pop
mov
outsl
test
lret
mov
scas
mov
in
jo
push
push
pop
ds
pop
add
fidivl
mov
and
dec
xorl
add
or
pop
or
in
scas
and
and
addb
inc
sbb
adc
out
sub
out
xchg
dec
sub
mov
dec
push
cld
and
les
outsl
fistpll
lods
inc
pop
add
popf
fisttpll
mov
loop
jmp
or
jge
mov
icebp
aam
push
mov
mov
jo
mov
pop
inc
addr16
loopne
fidivl
idiv
mov
lahf
dec
in
xchg
jp
pop
mov
jnp
ljmp
test
ds
adc
sbb
outsl
mov
outsb
xchg
sub
test
stc
lods
mov
js
mov
mul
jmp
sub
adc
in
push
cmpsl
push
adc
adc
xchg
or
gs
mov
cs
jmp
pushf
testl
icebp
mov
xor
std
and
mov
or
sbb
rorl
ljmp
pop
mov
pushf
and
add
imul
pop
adc
xorb
cmp
mov
fwait
stos
xor
shlb
popa
pop
shll
push
sub
cmp
inc
pop
push
xor
or
push
jle
or
adc
cmp
lahf
das
inc
cli
mov
mov
jmp
dec
int
add
add
xor
sbb
js
sbb
rol
adc
add
clc
cmp
std
hlt
das
add
dec
sbb
or
push
jp
mov
pop
rcrb
in
stos
jle
add
mov
xchg
and
pop
mov
aas
repz
pop
scas
pop
lods
and
movsl
mov
dec
pop
aaa
imul
mov
mov
out
sbb
add
popa
or
loop
push
pop
xchg
push
mov
xorb
data16
cmp
add
scas
out
sub
dec
pop
fidivl
leave
icebp
jle
mov
xor
sub
ja
mov
into
mov
add
and
test
aas
cli
fldt
sub
and
test
rcll
fnstsw
out
mov
cmpsb
xor
aaa
add
jge
mov
or
and
int3
icebp
adc
pop
aad
fdivl
js
rcrb
cmp
push
jle
loopne
mov
mov
mov
mov
sub
sub
int3
mov
andl
push
pop
inc
mov
adc
or
sti
dec
aas
int
mov
xchg
xchg
cmp
mov
add
and
sbb
and
push
rcrl
push
scas
dec
pusha
fistl
fcomi
cmp
mov
jb
int3
jp
xchg
xchg
shll
push
mov
pop
repnz
sub
adcl
push
xchg
addb
fnstsw
shlb
push
cmp
or
add
add
mov
sub
and
in
mov
xchg
call
int
push
pop
jnp
jnp
and
les
cmpb
jmp
or
cmp
movsl
subb
push
movsl
sbbl
ja
call
cmp
inc
shll
mov
subl
xchg
adc
cs
pop
pop
jg
mov
das
aas
data16
aas
faddl
cmp
mov
mov
int3
pop
fwait
ds
xchg
loopne
mov
out
les
pop
dec
cmpsb
ficoml
sub
insb
inc
pop
or
mov
in
jno
cmp
loope
in
popf
and
xor
cmp
push
cwtl
pop
mov
sub
sbb
add
cmpsb
sub
mov
es
mov
mov
adc
jecxz
add
fildl
add
mov
addb
mov
sbb
ja
sbb
lret
out
insl
mov
imul
mov
sub
adc
loope
cwtl
in
mov
mov
mov
dec
jl,pn
lea
or
and
stos
fnstcw
dec
or
xorb
sbb
loope
sub
mov
mov
add
mov
add
jnp
mov
or
or
test
adc
rcl
bound
xor
pop
cmp
ds
fidivrs
pop
es
loop
loope
push
and
scas
mov
lcall
test
loope
xor
lods
les
xchg
mov
lret
test
addr16
xor
or
pop
sarl
stc
mov
xchg
inc
sub
fisubrl
stos
xchg
testl
test
inc
sbb
out
nop
out
scas
enter
pop
sti
add
dec
pop
repnz
inc
add
clc
add
cwtl
mull
xor
add
movsl
dec
lahf
insb
lahf
and
push
dec
adc
lret
test
out
icebp
jbe
lods
xchg
je
subl
test
add
sub
mov
das
mov
shrl
push
out
in
add
test
sbb
ss
xchg
mov
movswl
inc
js
mov
nop
and
inc
loope
out
adc
jmp
imul
leave
insl
fwait
xorl
mov
inc
mov
mov
jb
je
jns
sarb
outsl
pop
adc
mov
mov
xor
add
arpl
dec
xor
mulb
xor
scas
mov
add
loope
sub
loop
xchg
sub
int
cmp
push
popf
cmp
or
test
mov
inc
jb
push
add
das
out
sbb
mov
mov
mov
icebp
or
jle
inc
into
subl
jmp
dec
fimull
nop
cmpsb
mov
sarb
add
sub
mov
push
sbb
push
js
sbb
fsqrt
mov
add
loop
jle
shlb
sarl
push
jge
outsb
jmp
out
xlat
popf
jg
mov
pop
pop
cwtl
sbb
mov
or
test
sbb
hlt
dec
xchg
pop
or
adc
data16
fisttpll
jbe
or
sbb
add
sub
xlat
ja
scas
leave
mov
scas
fsub
scas
popa
pop
cli
mov
mov
fcompl
pop
adc
jmp
mov
push
push
jp
sub
xchg
inc
push
pop
mov
sbb
mov
shlb
lock
mov
or
dec
imul
inc
outsb
xchg
sarb
sbb
mov
and
dec
cmp
dec
xor
sbb
imul
pop
inc
popf
shrd
out
lock
in
adc
add
fwait
jnp
pop
sahf
fs
jne
fdivs
test
push
aad
sbb
mov
stos
mov
push
dec
fiadds
push
xor
mov
into
mov
in
or
cmp
ret
mov
ret
xchg
in
dec
cmp
mov
mov
add
push
push
popf
and
lret
les
dec
nop
movsl
bound
call
clc
jb
sbb
shrb
pop
int3
popa
mov
adc
mov
cltd
faddl
cwtl
mov
jo
insl
xchg
aaa
mov
fdivs
cld
jl
cmpsb
xor
cmp
pushf
bound
sbb
mov
fs
add
cmpsb
xchg
push
xchg
jge
cmc
fcompl
push
das
xor
movsb
cmc
shlb
cmpl
push
mov
hlt
pop
test
mov
test
pop
and
pop
push
xor
lret
out
push
call
mov
ficoml
jno
dec
in
and
xchg
mov
hlt
mov
notb
xchg
insl
jg
ds
jbe
jae
lret
pushf
aaa
xchg
xchg
xor
sbb
out
enter
ret
mov
jb
in
mov
inc
test
push
push
icebp
mov
adc
ficoml
sbb
jmp
and
mov
xchg
dec
jp
pop
inc
cmp
pop
add
cwtl
xchg
xchg
mov
or
xor
ljmp
xchg
xor
pop
out
loopne
std
push
push
fbstp
cli
xchg
fucom
fistpl
lea
js
out
insb
mov
or
mov
xor
pusha
inc
dec
sub
stos
and
addb
cmpsb
enter
and
loopne
and
roll
mov
jo
cltd
imul
inc
hlt
adc
or
and
xchg
inc
and
xchg
inc
ficoml
fdivrp
cmpsl
call
inc
es
jb
mov
sub
jecxz
into
push
out
lret
clc
lock
dec
push
mov
cltd
jg
iret
add
dec
adc
sbb
test
dec
xor
imul
call
xchg
scas
xor
loopne
inc
cwtl
pop
inc
xlat
add
filds
or
movsb
cli
es
push
mov
sbb
out
push
lds
nop
jle
lods
insb
lret
mov
popa
and
cmp
loopne
lahf
dec
enter
lods
push
pop
adc
icebp
adc
je
mov
cmc
pop
in
push
aaa
inc
jg
add
fsubrp
mov
push
xchg
or
jmp
add
xchg
inc
mov
fisubl
sahf
mov
cmp
jae
mov
inc
cmpsl
jo
pop
inc
mov
dec
mov
dec
in
jle
bound
cli
aas
push
aad
cmp
and
lock
je
mov
icebp
inc
ds
mov
imul
js
jno
setns
or
mov
push
fbstp
and
jae
sbb
pop
cmp
inc
out
dec
cld
adc
cmp
sub
add
push
inc
cs
scas
mov
push
test
xchg
jp
mov
dec
in
pop
push
jne
mov
push
lods
ret
adcl
bound
mov
jno
pop
nop
lock
stc
sub
nop
mov
pop
mov
jb
sti
popf
cmp
mov
xchg
and
jo
push
inc
mov
jbe
push
addl
xor
cmp
push
shl
cmp
push
pop
mov
push
mov
movsb
pop
pop
cltd
enter
mov
ljmp
repnz
clc
aam
outsb
shll
pop
insb
mov
fnstenv
adc
xorl
mov
in
addr16
sub
adc
inc
and
and
sahf
lret
mov
sbb
sub
dec
pop
cmp
cmpsb
sub
mov
repz
pushf
cwtl
jno
jg
or
adc
mov
dec
pop
push
jne
xor
jle
andb
and
sbb
daa
in
in
inc
xor
lcall
lahf
push
add
lock
mov
mov
or
stos
mov
pop
in
pop
out
mov
mov
add
push
jle
or
and
cmp
into
jg
mov
bound
jb
inc
int
or
and
xchg
lea
sbb
jmp
inc
ss
mov
adc
adc
ljmp
jmp
push
push
je
inc
or
add
adc
gs
mov
enter
jl
cmp
dec
dec
push
lahf
and
ret
test
cmc
cld
cs
adc
test
mov
push
iret
mov
pop
aaa
xchg
and
je
push
push
xlat
nop
insb
loopne
test
xor
icebp
sub
leave
testb
push
repz
xchg
pop
mov
rorb
add
cmp
lcall
dec
int
scas
xor
pop
xor
push
dec
inc
lea
test
jns
or
scas
mov
cwtl
pop
jle
lock
pop
add
jb
jne
sub
mov
js
cmp
add
jns
dec
or
jecxz
mov
xchg
mov
mov
sub
pop
lret
pop
and
push
jp
mov
dec
inc
pusha
punpckhdq
js
push
outsb
insl
adc
dec
stc
adc
pop
pop
outsb
jl
scas
shrb
mov
lcall
daa
xchg
popf
dec
cwtl
xchg
mov
push
jp
neg
shl
pop
cltd
fadd
mov
and
xlat
stos
inc
int3
pop
aas
xchg
stos
out
dec
enter
popf
ret
ficompl
sbb
testb
mov
into
mov
enter
xchg
cmpsl
js
jnp
push
pop
out
push
out
mov
sbb
scas
mov
mov
iret
in
roll
lds
jg
lcall
inc
sti
cmp
lods
test
cli
mov
mov
jno
add
mov
mov
ljmp
sbb
rolb
outsl
leavew
imul
loope
shl
add
out
sbbl
icebp
in
sti
mov
das
dec
fiaddl
cmpsb
nop
outsl
xchg
in
int3
loope
cmc
xchg
and
sti
mov
rcrb
outsl
mov
push
test
mov
sub
xchg
icebp
pushf
pop
inc
or
shl
cmpsl
inc
push
ficoml
push
inc
std
cmp
ficomps
mov
pop
xchg
or
jns
sub
push
out
ret
frstor
call
sub
dec
insb
and
outsb
cltd
push
add
mov
push
fsubs
xchg
mov
cli
and
xchg
std
sub
xor
dec
sub
bt
pop
iret
add
add
lret
dec
fcoms
jae
mov
and
inc
into
fwait
into
cmp
cltd
cmp
pop
cmp
xchg
aaa
adc
mov
ret
jmp
sarb
enterw
add
cmp
xchg
cli
cmpsb
xchg
mov
inc
push
std
mov
div
ss
aas
push
jecxz
jnp
mov
aad
cmpsb
dec
fldt
int3
cmc
dec
movsb
loope
jge
push
pop
lea
stc
and
inc
adc
fidivs
sarb
stos
std
enter
adc
sub
sbb
jecxz
ss
lds
mov
dec
add
out
mov
jne
mov
adc
push
push
in
mov
aam
fcomps
es
cmpsb
adc
rolb
xchg
jmp
clc
add
mov
fsubrs
cmp
ret
dec
test
xchg
mov
inc
inc
sti
fidivrs
mov
mov
movsl
orb
sub
call
fwait
push
cwtl
ja
pop
mov
call
xchg
adc
or
and
aaa
lds
fsubrp
decb
hlt
add
rorb
push
dec
cmpsl
inc
mov
outsb
fnsave
pop
jbe
imul
sbb
jb
lock
and
je
ljmp
add
es
pop
and
outsl
cwtl
imulb
jg
push
mov
push
sbb
je
push
jno
das
jg
sbb
test
mov
cmp
divl
rdmsr
dec
loopne
push
mov
testl
inc
or
pop
iret
popa
jae
sub
mov
inc
cmp
add
add
inc
jo
fidivs
or
inc
dec
push
out
adc
mov
sbb
gs
cmp
aam
push
cld
inc
lock
cmp
mov
push
mov
int
push
icebp
inc
mov
stos
movsb
xchg
push
es
call
xor
ds
sti
pusha
gs
test
cs
mov
lret
mov
add
shll
mov
xor
jge
out
inc
pusha
in
cmp
addr16
or
scas
sub
inc
pop
jne
les
adc
push
adc
adc
and
mov
insl
push
call
lock
out
stc
adcb
inc
and
xlat
push
test
xlat
mov
cmc
stos
mov
adc
mov
loopne
faddl
jecxz
out
lahf
js
jno
into
scas
loop
popa
inc
stos
jns
mov
out
cmpb
in
xchg
lahf
push
js
dec
push
mov
pop
push
arpl
jp
jae
mov
xchg
imul
incl
cld
xchg
xor
pop
rcrb
enter
ret
sub
jge
push
ljmp
andb
sti
popl
sub
leave
pop
jecxz
sub
ss
leave
outsl
ss
xor
dec
outsb
mov
cmp
pop
sti
xchg
cld
xor
push
popa
es
ja
in
testb
loopne
or
into
mov
lds
push
sbb
pop
push
mov
pop
cmpsl
mov
fimull
outsb
adc
jg
pop
out
repnz
xor
dec
aaa
jl
or
lods
repnz
in
in
jno
lods
sbb
call
xchg
enter
xor
jno
in
xchg
add
cmp
xor
dec
push
sub
call
bound
stos
xlat
aaa
je
xchg
shll
and
in
adc
lods
cli
add
lods
into
dec
popf
mov
pop
or
jg
call
sbb
sub
fnsave
lds
sbb
mov
cmp
xchg
jp
xor
sbb
imul
push
jp
lahf
or
dec
add
sbb
xchg
push
pop
mov
or
lret
dec
sbb
jle
test
and
add
fwait
pop
mov
in
inc
stc
push
rclb
push
push
xchg
dec
rorl
aas
testb
cs
xchg
jl
xor
inc
sub
aas
aam
jl
mov
mov
inc
pop
lds
inc
mov
arpl
lcall
lods
xor
bound
jmp
out
jl
jp
push
add
mov
ja
push
xlat
ret
leave
and
fs
xchg
and
push
dec
pop
dec
gs
cmc
jmp
add
hlt
rol
mov
insb
cld
fisttpl
aam
or
clc
pop
insl
and
andb
add
sub
push
mov
bound
lods
scas
insl
loop
push
test
outsb
mov
dec
pop
repz
stos
aas
int
gs
push
lcall
dec
outsb
jo
and
decl
pop
in
pop
fwait
cmp
shlb
imul
les
lret
imul
fimull
insb
xchg
xor
aaa
jae
shlb
sub
daa
push
xor
fdiv
lret
sbbl
adc
test
jae
stc
cmp
jg
aad
adc
jg
mov
push
dec
mov
daa
dec
test
sub
and
aaa
and
push
inc
xchg
fcomps
mov
pop
jle
das
std
push
cmp
push
xchg
lahf
iret
mov
jae
inc
jnp
popf
jp
outsb
inc
push
mov
std
in
inc
fsub
pop
cmpsl
fstpt
pop
or
push
mov
out
sbb
mov
push
out
rdtsc
sub
fnsave
je
sahf
jle
or
mov
pusha
insl
std
imulb
push
scas
push
sub
mov
sar
adc
xor
pop
pusha
ret
cmp
fcoml
jmp
mov
lret
adc
xorb
in
jmp
arpl
add
fstpt
push
sbb
xor
aaa
xor
or
cmpb
sub
add
jbe
mov
adc
insb
inc
or
add
inc
inc
rorb
push
lods
jp
popf
out
inc
pop
ja
add
jl
or
add
jmp
mov
jo
cmp
mov
inc
mov
cwtl
inc
xchg
in
loope
push
sub
orb
sbb
out
jl
shlb
pop
hlt
pop
stos
pop
push
enter
and
sbb
daa
fstpl
mov
hlt
jecxz,pn
mov
pop
inc
push
movsl
or
cwtl
cmpl
pop
repz
flds
out
or
or
cmp
insl
fcoms
adc
stos
mov
mov
shrl
inc
xchg
fcmovu
xlat
sbb
dec
cmc
mov
ljmp
or
mov
mov
xor
dec
test
nop
or
dec
ljmp
sbbb
jne
nop
movsb
mov
jge
or
jecxz
pop
xor
mov
call
add
repnz
push
test
lret
push
in
in
icebp
push
sarb
mov
mov
and
sub
push
lret
mov
dec
push
cmp
lahf
aas
test
mov
mov
xchg
mov
mov
ljmp
ficompl
xchg
sarl
call
clc
enter
adc
xchg
xchg
push
adc
hlt
add
in
std
mov
or
jp
bound
les
movsb
cmc
out
xor
mov
hlt
pop
mov
push
cmp
or
xchg
pop
leave
mov
inc
push
dec
jp
rorb
mov
jmp
lods
mov
mov
dec
jl
pop
adc
fdivrs
ret
dec
push
bsr
mov
cmp
lds
es
fs
imul
add
divb
hlt
add
aas
jg
lret
outsb
xchg
adc
cmc
out
push
call
sti
jmp
popa
mov
mov
mov
icebp
mov
xlat
and
mov
jg
scas
lret
adc
das
sub
mov
nop
jne
inc
adc
push
iret
pop
shlb
sahf
mov
fildl
cmpsb
add
or
loop
pop
imul
sbb
add
jp
dec
loope
stos
mov
mov
jecxz
xchg
fstpt
or
out
jl
pusha
xchg
and
xor
movsl
pushw
int
or
push
pop
filds
shl
xchg
jae
imul
shll
out
cmpsb
mov
xor
cwtl
mov
scas
daa
add
aad
mov
push
add
inc
inc
push
or
leave
mov
es
adcb
pop
and
stos
int
push
incb
addr16
and
cwtl
insb
fs
ss
xchg
mov
mov
fnstcw
icebp
lea
movsb
arpl
iret
cwtl
shll
and
popf
xlat
or
push
jo
js
pop
adc
xchg
inc
sbb
pusha
out
mov
jmp
dec
popa
pop
nop
sti
fcmovne
xchg
cmpsl
daa
pop
push
sub
imull
adc
int3
or
sbb
add
inc
pop
rcr
and
outsl
pop
addl
aas
lock
dec
andl
repz
aaa
adc
arpl
mov
stos
pop
shl
std
mov
mov
lods
fdivl
inc
mov
fwait
pop
in
sti
shl
or
orb
jns
lea
out
add
xchg
ret
dec
lret
sbb
jecxz
arpl
dec
or
and
mov
aad
or
icebp
xchg
push
nop
imul
popa
mov
inc
jge
jb
jmp
mov
sar
data16
das
sub
iret
cwtl
ss
pop
cwtl
cmpsl
mov
mov
hlt
mov
pop
push
stc
sub
je
push
jecxz
pop
sub
dec
cwtl
movsl
mov
jge
add
popf
mull
movsb
aad
pusha
dec
das
jmp
sub
pop
lods
jno
mov
stos
roll
aas
rorb
adc
sub
stc
push
test
xor
mov
mov
fs
push
adc
loop
cs
cmp
cmpsl
add
clc
xchg
jl
js,pn
sub
data16
pop
and
push
mov
mov
mul
adc
xor
adc
scas
sbb
icebp
outsl
mov
dec
stos
mov
cwtl
mov
int3
addr16
mov
imul
mov
js
popf
fadds
or
mov
cmpsl
insl
in
int3
ds
mov
insb
mov
xor
flds
push
push
std
ja
xchg
xchg
pop
sarl
arpl
ret
stos
cmpl
dec
lret
addr16
xchg
sub
clc
cwtl
push
jns
xchg
push
jae
jnp
add
or
xor
pop
mov
stos
xor
ret
test
xor
and
sbb
stos
adc
or
movsb
test
mov
sbb
dec
add
test
add
mov
adc
sub
rep
sbb
cmpsb
jle
or
icebp
rorl
dec
testl
mov
je
adc
push
ja
xor
aas
fs
sub
addr16
mov
hlt
cmp
es
mov
sub
psrad
outsl
jecxz
ds
gs
imul
aas
push
mov
mov
mov
and
inc
enter
adc
shrl
idivl
push
ret
inc
or
xchg
mov
into
div
push
mov
push
and
ss
nop
pop
pop
inc
aam
ss
lds
pop
stc
ror
adc
mov
daa
sarb
sub
ret
cmp
stc
mov
pextrw
xchg
aad
push
cld
gs
push
and
mov
mov
daa
adc
mov
push
outsb
rolb
sub
movsb
movsb
jno
imul
mov
fstpl
add
and
mov
jecxz
sub
and
test
and
fcmovnbe
stos
fmuls
imulb
lds
sub
mov
pop
mov
and
inc
mov
xchg
jnp
push
in
cwtl
sbb
lret
cmpsb
sub
mov
xchg
mov
push
sbb
dec
add
or
adc
cmp
je
mov
outsb
mov
movsb
pop
sbb
in
ljmp
xchg
pop
loope
cmp
fbld
mov
and
ror
aad
pop
rolb
add
lods
dec
xchg
mov
mov
imul
mov
dec
sar
out
lds
cmp
pop
lret
xor
cmpsb
fwait
out
lds
pushf
jl
in
sbb
push
xor
movsb
inc
cmc
shll
movsl
icebp
or
and
sub
or
dec
jb
inc
cmp
cmp
inc
shr
dec
push
lods
push
stos
scas
bound
xor
xchg
and
push
pusha
push
add
mov
fdecstp
in
pop
or
lea
cmp
fistl
sub
enter
sub
mov
mov
scas
test
inc
sti
aas
rorb
push
leave
jno
adc
pop
add
jne
imul
mov
add
fidivl
sub
jmp
mov
movsl
rcll
cmp
es
or
cwtl
popf
fimull
mov
fwait
jle
ret
subb
and
sub
pusha
ja
push
fs
add
or
decl
into
movsl
xor
jl
je
mov
xor
or
repnz
gs
add
inc
fdivl
inc
movsb
mov
mov
pop
mov
or
adc
push
inc
nop
imul
pop
adcb
mov
imul
pusha
dec
mov
sbb
dec
jp
xlat
fdivrs
arpl
test
es
out
sub
xchg
insb
aad
movsb
shlb
loope
cmp
add
dec
sbb
ja
je
filds
in
xor
or
movl
in
mov
inc
fwait
dec
pop
mov
enter
xor
sbb
fnstenv
and
sub
mov
fwait
std
in
lods
jo
xor
out
inc
ljmp
xor
and
pop
push
pop
mov
jno
mov
mov
dec
data16
bound
push
loope
ret
cmp
popf
jnp
and
je
jno
mul
lcall
cmp
adc
movsl
movsb
imul
push
mov
rcl
jo
rcrl
jecxz
mov
or
pop
cmp
mov
add
cld
add
pop
xchg
fsubr
fbld
or
stos
arpl
and
scas
lret
mov
pop
pop
dec
testl
sub
lret
mov
push
fs
mov
push
xchg
shrl
push
sbb
ret
hlt
aam
imul
mov
pushf
jg
loope
and
mov
jle
imul
adc
lcall
jnp
es
mov
outsb
shll
xchg
ret
inc
mov
pop
sub
aaa
jns
test
aas
and
add
outsb
stos
stos
hlt
pop
ss
sahf
out
xor
mov
fs
movsb
fmulp
xchg
mov
sub
adc
enter
xchg
ss
mov
ret
mov
ror
sub
je
dec
ret
call
adc
mov
jns
scas
or
push
into
outsl
mov
mov
divl
xlat
movsl
shlb
call
jnp
dec
xchg
divb
lcall
je
aad
mov
sbb
movsb
pusha
fsubl
test
jo
jl
cs
dec
mov
sti
int3
cmp
inc
mov
sub
dec
inc
or
icebp
fidivs
mov
mov
movsb
popf
pushf
inc
pushf
in
into
pop
push
in
xor
out
icebp
filds
inc
stos
stc
sarl
push
and
loopne
cmp
xor
aam
fdivr
xor
stos
push
out
in
sbb
or
xchg
rclb
je
test
mov
fsubrs
adc
inc
test
jg
xor
shrl
stc
add
ret
cmp
lcall
decb
loop
and
pop
fidivrl
and
dec
and
or
xchg
and
dec
fwait
add
cmpsb
mov
fs
ss
hlt
xor
mov
int3
inc
sub
mov
inc
jg
cli
insl
gs
addr16
pop
hlt
mov
and
movsl
mov
out
inc
push
pop
mov
bound
out
inc
in
or
pop
mov
pop
mov
in
pop
in
inc
dec
xor
sbb
lock
je
mov
lea
repnz
out
stos
iret
into
insl
in
mov
mov
mov
xchg
fcompl
mov
clc
outsl
daa
xchg
aas
xchg
in
sbb
xchg
push
sub
loope
js
aaa
sub
leave
add
fildl
xor
mov
fisubs
push
push
lahf
lahf
dec
rclb
pop
fists
mull
cmp
push
xor
xchg
and
sarl
out
stos
dec
sub
fists
ljmp
fwait
push
mov
test
movsl
cmpsl
jge
inc
popa
addr16
mov
cmpsb
dec
das
xchg
sbb
loopne
sub
imull
nop
std
dec
test
or
xchg
dec
xchg
cmp
mov
sahf
lods
dec
lahf
dec
adc
sbbl
dec
int
pop
xchg
mul
rclb
fmull
loopne
enter
cmp
popf
js
scas
sbb
xchg
fisubs
insb
aad
js
lods
and
enter
add
xchg
jo
loop
push
pop
mov
ficoms
cmp
mov
sarl
add
lods
jb
xlat
and
add
jno
repnz
xchg
or
jns
js
test
ror
adc
or
enter
jg
iret
jecxz
arpl
inc
fs
lods
outsb
gs
out
mov
pop
inc
and
add
push
imul
ficoms
sub
mov
inc
rol
xchg
cmpsb
insb
nop
cmp
mov
in
xor
push
and
shlb
shrl
cli
iret
shlb
test
fistpl
mov
imul
add
mov
mov
push
lock
sar
nop
int3
push
stos
sub
inc
cld
sbb
adc
cs
cltd
add
mov
xchg
cmc
sub
cmpl
fisubrs
insl
in
ret
mov
out
in
and
aaa
sub
test
fsubs
jnp
sub
push
sbb
mov
mov
shrb
sbb
and
jmp
aam
mov
in
mov
dec
push
sbb
xor
adc
adc
in
mov
out
jmp
push
or
pushf
addb
mov
insb
inc
ficoms
rcrl
mov
push
mov
jbe
mov
mov
insb
ja
add
pusha
xor
inc
jp
mov
cli
lahf
lcall
xchg
es
cmp
add
jne
mov
or
std
mov
dec
pop
sbb
out
dec
sub
repnz
stos
mov
cmc
popf
pop
mov
cmp
jbe
cmp
mov
mov
cmpsb
cmp
mov
jg
xlat
cmpsb
mov
clc
lock
xlat
xchg
pusha
pop
repnz
cmp
mov
rcrb
insl
mov
in
adc
cmp
mov
test
jl
clc
pop
xor
fdecstp
mov
dec
mov
push
or
sahf
orl
lret
adc
dec
mov
repz
xchg
incb
adc
mov
xlat
insl
ret
sbb
sahf
and
es
imul
sti
lahf
sbb
cmc
cmp
in
fcomps
cmpsl
mov
bound
inc
jo
in
ss
test
rcll
pop
pop
add
pop
aad
hlt
mov
test
sbbb
dec
lahf
xor
es
out
jne
jmp
outsl
xlat
addr16
mov
jne
scas
sbb
dec
mov
sbb
enter
ror
mov
imul
sbb
sub
lahf
cld
mov
dec
clc
push
cli
mov
andl
cs
dec
adc
sub
sbb
fdivrl
test
enter
push
mov
or
je
sub
sar
mov
push
mov
sub
or
and
or
pop
and
mov
and
clc
pushf
lods
mov
into
dec
sti
mov
test
pop
cwtl
std
fistpll
repz
mov
addr16
inc
cmpsl
loopne
insb
xchg
xchg
adc
fsubl
jns
pop
jp
pusha
jnp
js
outsb
pop
inc
ret
pop
cwtl
sub
aas
pop
aaa
push
dec
lods
xchg
mov
inc
mov
int3
bound
lods
sub
test
int3
lret
hlt
xor
pop
js
and
push
fmul
add
add
jg
out
pop
and
xor
jp
inc
xchg
mov
in
push
cmpsl
mov
ss
ret
repz
dec
hlt
jl
lret
jmp
loop
stos
icebp
mov
and
mov
das
sub
fidivs
repnz
xor
xchg
test
adc
movsb
mov
lcall
sbb
push
cmp
pop
adc
inc
stos
add
addl
mov
idivl
fidivrs
js
ljmp
add
push
out
sbb
mov
jg
xor
rep
stos
cld
mov
pop
cwtl
adc
add
adc
sbb
movsl
hlt
test
xchg
push
jnp
data16
mov
leave
mov
js
clc
or
popa
push
cmpsl
fsubrl
lods
repnz
dec
mov
cwtl
into
lea
lods
cwtl
mov
iret
pop
push
push
pop
shrl
imul
aam
pusha
in
mov
imul
icebp
scas
lcall
sub
stos
pop
lods
add
je
dec
in
pop
cmpsl
movsl
pop
stos
add
dec
lds
mov
test
xor
xchg
or
push
scas
loop
mov
in
out
fs
sbb
ret
mov
mov
inc
fdivrp
cld
push
jo
push
in
xor
inc
inc
jl
pop
sti
test
push
repz
packssdw
dec
cmpsb
jle
mov
xchg
and
mov
xchg
fcmovnb
pop
cmp
addr16
jmp
pop
lcall
or
jmp
loopne
push
lret
cltd
dec
mov
std
sub
push
je
xor
out
push
pop
pop
or
ja
mov
je
xchg
push
push
adc
outsl
dec
jb
sti
pop
and
out
sub
dec
adc
jnp
or
or
sbb
dec
out
jns
pop
xor
lea
jbe
xchg
in
stos
xchg
and
into
add
push
mov
push
test
jecxz
cmp
in
dec
mov
xchg
aas
rclb
cmpsb
push
ss
add
xor
scas
lcall
lods
aaa
jb
lock
xor
mov
out
jmp
xchg
ficoms
push
in
jae,pn
xlat
pop
ret
enter
pop
iret
fisttps
movsb
stos
daa
or
lds
ret
andb
cmpsl
jecxz
int3
xchg
push
mov
pop
and
cmp
inc
sub
dec
xchg
aad
jb
push
lea
aam
ret
sbb
inc
cmpsb
adc
test
lret
sub
ss
inc
repnz
ds
mov
lods
jecxz
xchg
and
test
sub
test
rclb
movsb
movsb
jp
movsb
xor
sub
or
xchg
xor
xchg
icebp
or
cmp
inc
xchg
or
imul
and
push
xchg
adc
mov
pop
sbb
xchg
add
or
mov
cmp
fisubl
dec
iret
cmpsb
add
outsl
out
mov
xchg
loop
inc
add
sbb
or
adc
or
leave
mov
push
xor
cmc
or
fildll
insl
in
imull
pop
js
or
repnz
inc
outsl
jl
rcrl
in
xchg
insb
xchg
push
mov
test
inc
ret
sub
fwait
push
imul
scas
outsl
mov
das
sbb
jnp
hlt
jae
out
and
fwait
adc
add
mov
rorb
lods
dec
push
dec
pop
xchg
sbb
scas
popa
pushf
xchg
or
mov
mov
popf
idivl
lods
push
je
xor
xchg
adc
adc
and
pushf
cs
dec
in
push
cmpsl
lret
or
clc
mov
int
sbb
xchg
int3
mov
stos
sub
cli
imul
lods
lahf
lcall
sbb
cmp
icebp
add
lret
and
pusha
cmp
or
mov
mov
xchg
stos
mov
dec
push
aas
cmpsb
inc
repnz
inc
jge
sti
in
jp
mull
xor
ds
cmp
sarl
daa
fs
add
mov
leave
xor
xor
lods
int3
cmc
clc
pop
rcrb
lret
inc
movsl
sahf
lods
add
jnp
jp
das
or
int
testb
jl
add
mov
test
ds
rorl
rcr
xchg
cmc
dec
js
andb
scas
fwait
xchg
adc
mov
pop
mov
mov
inc
push
or
mov
or
cli
pop
add
loopne
bound
nop
enter
pop
daa
jl
outsb
pop
sub
dec
ja
js
outsb
aam
fimuls
sub
call
cmpsb
jno
fmull
cs
mov
adc
test
sub
pop
outsb
movsb
sub
cli
jecxz
test
test
sbb
push
mov
mov
ret
xchg
push
xchg
xor
jecxz
mov
dec
adc
pop
rcrl
pop
lret
ret
sbb
leave
xchg
ss
dec
push
sbb
cmpsl
xchg
shl
pop
pop
pop
add
dec
out
in
rclb
fldenv
fisubrs
push
lds
xchg
mov
xor
xchg
adc
sbb
push
repz
in
add
or
add
rcr
jmp
lock
add
sbb
jg
xor
cmp
xor
fs
sub
jmp
push
push
push
jmp
xchg
inc
sbb
and
sub
pop
jne
push
mov
inc
mov
xchg
rcll
shl
mov
adc
xchg
jno
arpl
mov
outsb
jnp
fildl
test
adc
repz
loopne
xorb
jne
mov
mov
xchg
in
ljmp
adc
cmc
mov
imul
mov
xchg
scas
jo
xchg
inc
fidivrs
xchg
call
rorl
clc
adc
mov
icebp
or
xchg
jb
lods
rorb
xor
pusha
add
jbe
ds
ja
hlt
call
push
xchg
push
dec
cmpsb
xor
pop
add
cmp
insb
add
mov
or
and
outsl
xlat
xlat
and
inc
sub
repnz
test
jo
movsb
pop
jmp
jo
ss
push
cmp
hlt
xlat
outsl
scas
jg
cmp
push
push
lret
repz
fs
es
adc
adc
rcl
jb
aam
sbb
jnp
jl
cmpsb
enter
testl
into
push
fmulp
popf
and
cmc
cld
leave
cs
aad
in
push
ja
or
fucomp
lock
ror
movsb
add
jle
dec
arpl
sbb
push
add
loop
xor
daa
jle
gs
and
xor
lcall
fwait
push
xchg
aas
or
sbb
arpl
mov
push
out
xor
jae
pop
sahf
movsb
out
mov
hlt
sub
scas
jno
pop
lcall
push
call
lret
jns
and
in
cwtl
orl
and
into
loop
or
ss
jnp
mov
mov
xchg
push
sub
std
inc
outsb
sbb
es
mov
jb
xchg
rclb
pop
xlat
scas
mov
xchg
inc
in
push
mov
add
or
push
inc
lds
xchg
pop
cld
push
shlb
iret
filds
loope
mov
or
in
js
icebp
out
daa
jmp
repnz
and
imul
push
bound
push
out
and
leave
dec
std
inc
data16
dec
mov
out
in
push
xchg
je
jmp
mov
je
sub
es
and
mov
sbb
add
cld
mov
test
movsl
imul
mov
sub
adc
jne
in
fildll
push
std
push
icebp
cmc
lods
das
shrb
jg
lcall
pop
mov
fldl
mov
sar
push
sbb
mov
out
icebp
mov
push
out
mov
addb
xor
sub
mov
inc
ret
xor
cmp
scas
pop
cmpsl
sbb
sbb
jne
pushf
in
out
scas
jecxz
push
sbb
sbb
clc
sbb
imul
ja
addr16
bnd
sahf
fsubp
int
cs
xlat
popf
jg
xor
jo
mov
fcompl
xchg
add
jmp
sti
lcall
cld
std
xor
dec
ljmp
ds
loop
fmuls
pop
aam
imul
enter
push
lods
xlat
in
cmp
mov
imul
or
jge
or
adc
cli
sbb
mov
test
jge
and
aam
loop
jl
cmp
or
inc
xor
push
push
lods
inc
add
sbb
pop
jmp
ret
sti
frstors
add
outsb
mov
xchg
lods
negb
xor
jae
inc
popa
inc
bound
or
enter
shl
xor
pop
shlb
sub
cmp
sbb
pop
iret
imul
xchg
mov
sbb
insb
mov
xchg
daa
jo
sahf
or
cmp
xor
and
sbb
adc
aaa
lret
jne
adc
add
sub
add
xchg
xchg
push
je
cmp
sbb
and
push
cmp
inc
push
add
push
mov
ret
inc
dec
subb
xor
cmp
fwait
movb
les
test
push
fisttpl
push
push
push
sbb
cmpsl
jl
ds
lds
or
fmull
fwait
add
in
test
mov
push
cs
or
and
pop
mov
pop
pop
pop
adc
mov
pop
mov
aad
imul
jne
fadds
clc
sub
cmc
mov
xchg
or
dec
mov
adc
pop
or
movsb
mov
lds
out
and
hlt
mov
mov
pusha
cld
mov
mov
nop
ret
inc
inc
sbb
or
mov
cmp
int3
nop
daa
in
xor
jnp
lret
std
cmp
push
pushl
out
mov
in
aam
add
or
rcrb
out
popa
test
mov
mov
push
ret
and
push
and
iret
call
repnz
pop
pop
nop
xchg
sbb
arpl
and
sub
cmp
xlat
mov
cmp
repz
rclb
or
push
sub
in
sub
dec
mov
sbb
xor
sub
test
aad
dec
rorl
lcall
hlt
mov
arpl
fistl
jae
rclb
mov
mov
ret
sahf
shrb
mov
test
adc
sub
add
in
pushf
movsb
pop
mov
filds
insb
and
ljmp
filds
lock
xchg
cmc
cmpsb
jnp
das
mov
iret
jbe
into
cmc
mov
ret
cmp
test
cli
xchg
or
sub
pop
dec
or
adc
imul
stc
cmpsb
rolb
mov
stos
in
int3
test
subl
imul
cmp
pop
stc
push
jbe
mov
lock
sub
jp
in
jo
mov
fwait
and
and
int3
in
in
mov
bound
and
mov
fcoms
jle
out
sbb
or
pushf
orb
and
dec
mov
mov
icebp
into
fdivrl
dec
js
jmp
mov
inc
cmp
mov
push
sub
inc
cmpsb
lock
orb
jge
cmpsl
dec
nop
pushf
xchg
clc
add
out
mov
mov
or
jecxz
sub
or
mov
inc
pop
stos
inc
sbb
xor
test
and
sarb
fwait
inc
test
xchg
push
xor
jo
lods
push
inc
mov
addr16
push
xchg
insb
test
cltd
jl
sbb
pop
cmp
shrb
popa
mov
je
mov
and
xchg
insl
sub
add
adcl
fidivrs
push
push
mov
bnd
mov
cli
cmp
data16
and
xorl
or
aad
jle
push
or
xor
lahf
sub
clc
jns
add
fcomi
and
adc
scas
mov
out
xchg
add
leave
cs
popa
add
ljmp
jecxz
jns
daa
test
fcoml
scas
sub
xchg
xor
jge
in
xor
mov
add
cmpsl
pop
pop
mov
aaa
lahf
lods
cmpb
push
inc
inc
cs
loop
arpl
xchg
shlb
mov
jns
or
pusha
cld
mov
lcall
arpl
shlb
pop
and
adc
ficomps
inc
stos
hlt
aad
dec
mov
sub
incb
lret
push
sbb
ja
shl
dec
mov
cmp
ret
and
sbb
dec
je
pushf
fcmovnbe
cmpl
inc
lret
pop
push
pop
or
adc
leave
mov
cli
xchg
repnz
jg
xor
jo
stos
movsl
mov
dec
jae
sub
js
shrl
adcb
jo
ds
or
jp
mov
in
lea
push
jmp
loopne
or
mov
pop
and
mov
cmp
in
cli
in
roll
pushf
inc
mov
pop
mov
enter
popf
inc
stc
pop
movsl
ljmp
or
jge
pop
scas
xchg
push
jle
jge
xchg
aam
lock
call
cltd
mov
in
call
mov
add
mov
and
sti
flds
add
lret
pop
sbbb
jne
push
into
mov
cmpsb
sub
fsubp
mov
popa
jge
pop
or
add
inc
in
adc
and
cmp
test
test
pop
push
mov
rolb
xor
jo
out
pop
test
pop
insb
mov
cmp
mov
sbb
pop
jae
into
aad
jne
lret
inc
cmp
jmp
test
mov
arpl
data16
popa
test
add
das
mov
xchg
cwtl
iret
sar
aad
sbb
xchg
movsl
jp
push
and
mov
xchg
rcl
pop
mov
pop
ds
mov
cmp
fcomip
jne
sti
arpl
mov
call
aas
call
sbb
xor
adc
popa
test
sub
dec
shl
and
adc
rclb
movb
add
mov
mov
fisubs
mov
lds
add
cmpsb
into
xchg
xchg
int3
sahf
popl
cwtl
test
pop
cmpsl
mov
je
or
inc
les
pusha
pop
dec
and
sub
push
push
jg
xchg
lods
cli
mov
int3
jne
pop
mov
inc
lock
fisubrl
stos
xor
xchg
mov
xchg
je
cmp
loope
int
repnz
mov
mulb
lea
lea
js
xlat
jae
and
hlt
cmp
and
pop
and
jp
addr16
mov
pop
xlat
mov
mov
push
jo
and
jbe
fs
jo
lds
outsb
push
aad
das
xchg
pusha
les
pop
pusha
mov
and
adc
scas
add
adc
js
pop
or
mov
cmpsb
fisttpll
roll
mov
xor
fcmovu
call
rcrl
in
movhps
clc
int
std
stos
sub
decb
mov
push
roll
js
test
scas
fstpt
xor
sarl
rol
mov
sub
xchg
sub
cmp
lret
dec
sbb
inc
mov
jmp
icebp
or
mov
push
and
cmp
test
mov
lea
fistpll
pop
xchg
mov
cli
push
dec
mov
sbb
fildll
roll
xchg
adc
pushf
jns
int3
lods
push
inc
jno
mov
int3
stc
lds
dec
dec
xor
adc
cli
dec
lahf
jl
mov
aam
sbb
mov
lds
sub
ljmp
popf
jae
xchg
or
mov
fmull
jl
leave
das
adcl
mov
jl
dec
aam
lock
add
call
fs
jne
and
jmp
xchg
loopne
xlat
pop
loopne
out
sahf
cltd
out
sbb
sbb
adc
cmp
addb
jge
lea
mov
jecxz
in
sbbl
daa
repnz
xchg
enter
pop
adc
mov
mov
cmp
or
dec
fucomip
and
and
out
push
mov
add
and
cmp
adc
inc
les
lret
cmpsl
in
dec
push
xchg
inc
stos
fwait
sahf
roll
xlat
fldcw
rcr
mov
je
mov
xchg
and
fnstcw
xlat
cmpsl
js
adc
fwait
outsb
jo
mov
jmp
or
mull
sbb
xor
push
add
pop
out
add
sbb
jo
jo
mov
pop
pop
mov
pusha
pop
xchg
and
mov
daa
xor
fcmovnb
adc
fisubs
lods
mov
cmp
cmp
push
jbe,pt
push
adcl
pop
jnp
imul
xchg
xor
cmpsb
pop
arpl
push
scas
lahf
in
gs
popa
or
adc
in
loope
xchg
or
push
mov
test
xor
ret
jne,pt
pushf
lods
push
inc
mov
ret
pop
lds
sub
fdivr
jge
and
sbb
aam
or
cmp
sarl
std
sub
jle
jmp
dec
xchg
orl
fwait
enter
insl
or
call
mov
test
add
lcall
in
xchg
dec
pop
mulb
cs
cmp
into
push
mov
in
mov
lret
cmpsb
jecxz
inc
rcll
lock
xor
fisubrs
pop
inc
xchg
into
insl
ljmp
pusha
cmp
jp
cld
add
jno
cmpsb
jns
add
xchg
sahf
inc
xchg
loop
sbb
clc
or
push
lods
jne
aad
out
push
stos
ljmp
rcrb
clc
jle
subb
xor
call
dec
push
mov
jne
lahf
test
out
in
pop
push
cs
js
jbe
jg,pn
xor
data16
jno
add
scas
or
insb
mov
sbb
xchg
and
rol
sbb
outsl
loop
rorb
stos
sbb
pop
pop
mov
sti
mov
lahf
mov
dec
cmp
movsb
and
adcb
ss
incl
jp
insb
test
data16
cmpsl
call
notb
xor
lahf
pushf
add
fcoms
push
std
int3
pop
lret
pop
int
dec
shrl
test
mov
aas
jae
mov
cmp
imul
push
cld
aas
dec
xlat
and
cmp
push
adc
aam
or
adc
stos
jl
jae
out
cmc
cmp
loop
jp
ss
and
cmp
lods
mov
mov
call
pushf
push
pop
fsubp
or
test
pop
sbb
push
add
aam
adc
insb
xchg
popa
hlt
fmull
or
fs
orb
cld
pop
in
and
outsb
adc
mov
sahf
adc
sub
call
mov
add
gs
scas
fldt
sub
mov
rorb
cltd
and
push
xchg
jns
fldcw
add
stc
imul
pop
orb
out
pop
lret
sbb
xchg
lock
icebp
out
sbb
xchg
jmp
in
imul
xor
xlat
jle
repz
cmp
dec
not
and
imul
sbb
cltd
pop
fcomps
jp
movsb
outsl
add
dec
das
test
movsb
rcr
imul
enter
xor
or
addb
or
push
sub
fdivs
dec
push
push
mov
test
stc
jmp
and
hlt
repz
cmp
vcvtdq2pd
inc
xchg
lods
sub
inc
ret
push
jb
or
xchg
sbb
mov
cmp
nop
xchg
pop
dec
jle
inc
xor
mov
dec
shll
mov
mov
mov
sub
faddp
pusha
jno
sti
test
add
jl
das
lret
dec
lret
lcall
mov
pop
pop
and
mov
push
fcmove
loope
inc
test
and
sub
std
imul
mov
aaa
call
or
mov
fidivl
cmp
test
inc
push
or
mov
loop
cmp
and
inc
in
test
sahf
mov
cmpb
push
dec
or
mov
mov
jne
nop
lods
xor
jmp
mov
nop
aas
std
gs
dec
testl
inc
or
sbb
push
loopne
aas
dec
imul
or
xor
insb
push
cwtl
adc
dec
shll
cmp
fisubrs
cmovs
xor
cmp
icebp
pop
int3
les
enter
aaa
push
pusha
es
and
pop
pop
jmp
pop
cs
sbb
xor
and
mov
jne
bound
adc
ret
xchg
or
pop
je
test
or
adc
push
xchg
ljmp
adc
inc
ds
ret
int
rorb
xor
jp
jge
fildll
sbb
pop
leave
cmpsl
lret
add
loope
or
pop
into
imul
and
jnp
xor
xchg
nop
xlat
fcmovu
mov
mov
sub
dec
lahf
jae
add
xor
inc
dec
dec
ret
inc
dec
mov
xchg
les
pop
js
pop
arpl
cmc
rorb
xlat
push
loop
push
inc
outsb
mov
mov
int
rolb
call
fldcw
fs
test
dec
pop
xchg
out
in
add
adc
out
adc
xor
adc
je
test
or
or
push
xchg
pop
mov
movsb
pop
repnz
int3
daa
jge
test
cmp
stos
inc
int3
sahf
sbb
repz
sbb
cmpsl
and
or
or
lcall
fs
aad
mov
cwtl
outsb
jge
pop
and
js
shlb
orb
test
rcl
cmp
push
and
pusha
repnz
out
leave
mov
addl
mul
addr16
mov
jne
adc
ficoms
cwtl
pop
sbb
xor
jbe
mov
pop
std
test
xor
sarb
cmp
shll
repz
paddd
pop
out
cmp
adc
pusha
aas
push
stos
xchg
cmp
fdivrl
jg
jl
or
aad
xchg
call
xchg
inc
jg
mov
aam
push
in
mov
sub
or
stc
mov
jbe
rcl
rclb
xchg
adc
notl
sahf
jne
or
dec
cltd
inc
sub
xchg
cli
hlt
inc
pop
xchg
or
push
cmp
lret
xchg
decb
mov
jne
xchg
cmc
aas
xchg
movb
stos
fucomip
icebp
and
test
cmp
repnz
popa
fstpt
jl
mov
mov
cmp
out
inc
out
mov
mov
popa
shrb
decl
pop
in
xchg
pop
xchg
mov
aad
fcomip
stos
imul
lret
add
test
adc
jle
cwtl
jecxz
scas
fwait
insl
xchg
shlb
sbb
dec
xor
push
mov
sbb
fldenv
sbb
cmp
xor
shll
cltd
pop
push
loopne
sti
pop
mov
jae
popa
insb
xchg
pop
dec
sub
mov
adc
pop
lcall
cmp
fldl
hlt
pusha
mov
dec
mov
sub
lock
jg
nop
mov
ficoms
or
push
sub
push
js
sbbb
rcll
pop
gs
loopne
scas
insb
push
lcall
stos
pop
js
mov
add
mov
xchg
inc
xchg
sbb
jno
loop
lcall
mov
dec
into
mov
lds
jno
push
sub
push
lods
lods
ds
fisubl
jb
mov
or
mov
push
pop
in
or
jb
orb
lods
xor
mov
cmp
enter
adc
or
clc
lea
cmpsl
test
lock
adcb
jo
imul
int
lock
loopne
fstl
loopne
mov
push
out
lcall
and
test
sub
or
add
xchg
dec
imul
pop
arpl
push
fisttpl
dec
loope
fiadds
mov
popa
test
mov
jge
jbe
leave
or
dec
jmp
imul
test
mov
stos
out
loope
shl
aas
shl
fcomps
jbe
cmp
xor
ds
stos
imul
mov
xchg
sbb
inc
loope
test
sub
sarb
stc
adc
not
inc
stos
gs
mov
xor
mov
fcoml
out
xchg
xchg
lock
push
xchg
add
xchg
lret
adc
adc
test
sub
pop
add
push
pop
call
push
mov
jecxz
xor
or
cwtl
push
or
sub
lock
lods
dec
jne
xchg
and
pop
add
fdivs
stos
jmp
or
outsl
ds
sbb
mov
add
int
pop
pusha
mov
xchg
mov
mov
inc
jae
xlat
mov
fstl
mov
dec
xchg
lcall
repnz
lods
xchg
cmp
jbe
dec
sub
ss
cmp
push
mov
mov
or
sub
lods
fldl
mov
push
andl
negb
mov
cltd
cmpsl
orb
lods
in
jnp
icebp
pop
pop
xor
adc
sbb
outsb
lock
sbb
movsb
dec
xor
aas
fs
outsl
push
pushf
xor
cmp
lods
xchg
stos
or
jge
push
ja
sbb
outsl
ss
push
cmc
inc
push
sbb
push
mov
mov
and
sbb
push
gs
pop
dec
js
shlb
dec
rorl
xor
xchg
or
or
outsb
dec
cmp
mov
pop
or
add
repz
lods
xor
popf
adc
pop
sub
sub
jmp
mov
lret
std
mov
lds
xchg
cld
je
int3
or
sub
dec
lahf
popl
pop
or
xchg
mov
lds
xchg
push
stos
sbb
ja
lcall
xchg
test
jbe
int
je
in
pop
lods
push
enter
mov
clc
and
test
inc
leave
std
push
jnp
cmp
sbb
push
rclb
insb
in
cmpsl
jnp
int3
mov
push
xchg
push
filds
decb
in
ss
jge
subl
imulb
sbb
push
dec
xchg
std
mov
fstp
hlt
and
xchg
pusha
outsb
ficompl
xchg
adc
jae
leave
and
push
cmpb
mov
push
in
push
push
insl
popa
lods
sub
sbb
hlt
push
in
js
and
dec
mov
mov
push
jnp
addr16
stos
sub
stos
adc
arpl
into
shlb
jno
test
pop
adc
jbe
jnp
mov
inc
cli
lock
addr16
cmp
push
xchg
das
stc
fsub
dec
xchg
adc
cmp
xor
xchg
in
out
cmp
pusha
jle
add
jae
aam
sub
les
push
test
push
ss
xchg
inc
lods
fisttpll
insb
push
lods
cmp
sbb
out
mov
jns
adc
xor
dec
jne
pop
lcall
sbb
sbb
xchg
cs
sub
ja
lock
subb
mov
jbe
ja
fs
popf
sub
sub
iret
push
lock
or
cmpsb
inc
fisttpll
or
or
jge
or
mov
inc
outsb
push
movsb
movsb
lret
adc
aam
sub
in
sbb
cli
cmp
cmpb
and
cld
mov
pop
insl
movsl
inc
lret
mov
mov
inc
imul
add
ja
or
inc
int
push
hlt
int
add
or
or
iret
and
cmp
lcall
and
out
int
outsb
pop
push
sbb
or
repz
jl
sub
xor
scas
jns
clc
dec
mov
out
push
and
mov
pusha
sub
adc
negb
jge
pop
pop
pushf
xchg
inc
jne
sbb
mov
std
hlt
movsb
adc
cmp
pop
xchg
dec
sbb
in
cmp
stc
test
mov
dec
fnstsw
iret
push
mov
mov
sbb
push
jbe,pt
cmpl
inc
pusha
aas
xor
idivb
addb
cltd
fbld
push
mov
mov
stos
inc
mov
in
call
xor
add
call
mov
cmc
icebp
sub
push
mov
cltd
shll
jne
inc
repz
push
popa
mov
lahf
cmpsl
sarb
and
ficoml
ret
adcl
jecxz
jne
mov
rorl
mov
stos
pop
push
test
jp,pt
insb
pop
les
aam
cmp
adc
sub
mov
cmpb
pop
shll
push
push
cld
add
rorl
dec
sub
jae
shlb
push
jl
movsl
imul
lea
cmp
push
adc
ja
pushf
icebp
jp
mov
mov
arpl
lahf
mov
cmp
pop
xchg
xchg
ljmp
jmp
out
fidivrl
outsb
mov
mov
and
movsl
jle
lret
shll
inc
add
adc
mov
sbb
lds
mov
jp
cwtl
xchg
jge
movsl
dec
sbb
fcmovbe
jle
hlt
mov
dec
ficoms
aaa
sti
int
pop
bound
shlb
dec
pop
ret
dec
movsb
cmp
ret
hlt
jg
pop
and
jae
orb
mov
les
pusha
mov
and
cs
fcompl
xchg
cmpb
jne
push
jns
jmp
cmp
lock
sub
lods
jnp
mov
lods
sbb
ret
fbld
xchg
shrl
cmp
idivb
inc
jg
movsb
movsb
mov
aaa
test
sbb
cmc
mov
or
sbb
lret
cmc
test
cs
jl
xor
xchg
jl
push
xor
repz
dec
test
inc
stc
push
inc
or
stc
sbb
mov
mov
jae
sub
les
test
push
mov
jge
mov
in
insl
out
mov
cmpsb
scas
inc
std
fwait
jnp
dec
jnp
loopne
mov
clc
cwtl
adc
mov
mov
mov
cmp
cmc
push
sub
jns
lods
adc
adc
dec
xlat
loopne
test
sahf
js
mov
mov
push
cli
inc
std
insb
and
shl
or
or
mov
xchg
add
mov
push
dec
pop
jae
shrb
adcl
ret
inc
test
or
subb
imulb
xlat
push
or
das
jp
mov
rcrl
cs
jb
in
sbbb
cmp
xchg
cltd
adc
stc
jle
pop
mov
sbb
xor
stos
and
ja
xchg
addb
xchg
lods
xchg
inc
add
mov
les
or
mov
jge
jecxz
mov
ljmp
into
in
inc
iret
lds
or
and
jns
call
mov
movsl
fdivs
push
icebp
sbbl
lcall
sti
cmp
enter
dec
leave
push
jbe
inc
div
nop
fcoms
mull
mov
mov
pop
in
push
adc
sti
mov
lds
adc
mov
jge
repz
cmpsl
arpl
adc
dec
mov
mov
repz
rorl
ds
pusha
xor
mov
mov
or
xor
aas
cmp
je
jl
jmp
ja
mov
aam
jecxz
xor
mov
pop
inc
xor
xor
jmp
inc
pop
xor
add
orl
xorb
mov
popf
stos
ljmp
mov
es
push
cld
orb
xchg
xchg
fstpl
lods
pop
mov
and
cmpsb
mov
jge
dec
pop
xor
ds
enter
ljmp
rcrl
mov
outsb
push
movsl
push
rcrl
pop
push
outsb
outsl
adc
icebp
and
push
fsubrl
fidivl
add
jae
sub
test
xchg
hlt
inc
hlt
lods
test
fcomip
cs
push
xor
xchg
or
cld
int
loop
add
test
aad
lret
cmp
dec
inc
adc
jp
push
inc
sbbl
inc
rcrl
sbb
inc
data16
cs
aas
cli
jl
movsb
jg
stos
movsl
pop
mov
mov
sub
pushf
xchg
sbb
inc
scas
jmp
and
mov
cmp
mov
xor
iret
xlat
aas
pop
movsl
inc
inc
jecxz
push
mov
shrb
xchg
xor
out
and
repnz
or
pop
fs
mov
icebp
mov
fimuls
mov
pop
or
adc
mov
mov
pop
jle
cli
push
ficompl
sar
add
fwait
xchg
sar
mov
xor
lahf
pop
clc
pop
add
jne
mov
sub
ljmp
push
mov
stc
int
movsl
repz
adc
adc
xorl
les
lods
dec
mov
xor
add
bound
dec
addr16
fidivrs
push
jnp
cmp
mov
pushf
dec
js
stc
push
push
mov
fimull
es
aam
push
cli
jb
sbb
into
pop
cmpsb
mov
iret
mov
call
cmpl
addr16
std
mov
and
decl
sub
xor
fisubs
test
sub
test
add
sti
imulb
mov
sbb
pop
push
popa
ss
enter
and
inc
out
adc
and
push
xor
jle
jmp
xchg
xchg
mov
sti
ds
enter
outsb
sub
sbb
lods
mov
jle
stos
add
js
xchg
xor
mov
xor
pop
sub
cld
incl
hlt
mov
cmp
push
insb
fcmovbe
lods
jo
lcall
dec
and
testb
aaa
pop
jle
adc
mov
mov
push
xchg
lods
imul
int3
ret
push
and
mov
xchg
and
faddl
push
cmp
sub
xor
and
arpl
popf
mov
inc
dec
rol
aad
or
lahf
lods
mov
imulb
enter
in
pop
ret
fmull
into
mov
adc
inc
sbb
aas
sti
js
nop
fwait
outsb
addr16
fmuls
pop
adc
mov
jns
idiv
addl
cmpsl
mov
test
scas
adcb
or
out
in
xor
or
pop
adcb
cmc
imul
dec
push
test
jmp
rorl
sub
mov
fdivrl
addr16
cmc
mov
lret
mov
and
mov
pusha
inc
daa
outsl
movsl
es
loopne
in
cmp
add
push
sbb
xchg
movsl
sub
pop
movsb
movl
bound
add
jns
aaa
ror
cmp
xchg
mov
addr16
stos
inc
shll
jnp
mov
cwtl
cmc
je
pop
lcall
lds
cmp
add
lret
push
jns
sti
aad
jns
dec
popf
pop
xor
lret
rclb
loopne
es
lock
mov
adc
mov
xor
sub
mulb
into
pop
add
movsb
add
adc
mov
insl
shl
inc
xlat
push
lock
fisubs
ds
push
addr16
sahf
mov
mov
lret
push
testb
fdivl
lret
cld
adc
pop
nop
andl
pop
pop
pushf
ja
cli
lods
dec
loope
in
gs
mov
mov
adc
mov
lods
loopne
push
aad
ret
cmp
or
sbb
mov
xor
or
jge
outsl
fnstenv
mov
sub
hlt
mov
jmp
xchg
and
call
clc
fidivs
and
push
icebp
xchg
sub
pop
rcrl
pop
outsl
push
or
jb
jp
jmp
arpl
aas
aam
in
xor
cld
in
test
pop
inc
add
pop
orl
mov
gs
fiadds
xchg
cmc
or
in
cmp
add
fwait
lea
xchg
mov
dec
sub
lret
rolb
mov
mov
adc
adc
gs
call
leave
mov
stos
mov
int3
push
jae
lods
mov
mov
mov
dec
push
dec
int
es
jbe
iret
jmp
cltd
sbb
filds
pop
pop
negl
test
sbb
sbbb
mov
lea
sbb
and
cmp
pop
out
push
movsb
loope
lock
mov
jmp
mov
xchg
ds
daa
gs
jo
mov
je
cmp
repz
inc
dec
jnp
sub
stos
fwait
in
mov
lret
jb
in
scas
ret
andl
cltd
fdivrs
xor
or
in
pop
inc
ror
cmp
mov
mov
out
sbb
inc
mov
insl
sbb
mov
dec
pop
inc
or
loopne
dec
xchg
loopne
lcall
push
xchg
sti
shrl
sar
sub
sub
mov
mov
sub
decl
adc
cmp
adc
mov
add
daa
arpl
int3
roll
loopne
mov
imul
dec
shr
and
sub
jmp
cli
ds
test
sub
imul
arpl
mov
fidivl
and
test
cltd
xor
xor
imul
cmp
icebp
jno
inc
stos
mov
cmp
sbb
sbb
push
dec
lods
fwait
std
pop
adc
mov
lcall
inc
adc
pop
jbe
lds
or
xchg
sub
test
icebp
cli
stos
ret
ret
movsb
das
push
ja
and
adc
adc
and
inc
xchg
aad
out
das
arpl
jns
fistpll
jb
jbe
inc
mov
cmp
es
les
sbb
jnp
shlb
push
aaa
push
mov
stc
daa
pop
xorb
sub
ret
mov
add
and
mov
aaa
mov
mov
xor
out
in
shrl
scas
lret
test
jno
and
aam
sbb
insl
dec
fwait
pushf
mov
push
fwait
xchg
mov
addb
lods
sar
imul
shrb
fadd
push
add
push
or
mov
mov
fldenv
and
lahf
sbb
sbb
jl
sahf
cs
mov
pop
and
out
mov
cmp
jmp
and
sbb
sub
into
cmpsb
ja
mov
les
test
or
lea
jge
gs
jle
pop
negb
cmpsl
enter
in
mov
scas
sbb
stos
mov
push
cmp
iret
push
ret
stos
lock
push
paddsb
scas
mov
out
push
jge
sub
fldt
cltd
inc
faddp
jbe
push
nop
mov
pop
and
dec
mov
push
lcall
loope
clc
aad
sbb
rclb
sbb
mov
icebp
or
pop
fldenv
mov
sbb
fldl
mov
cli
loope
je
inc
dec
pop
xchg
lock
dec
jg
mov
stc
popf
js
addr16
lock
or
pop
rolb
xchg
les
cmp
xor
sbb
cld
xlat
sbb
lds
mov
inc
in
pop
mov
jne
clc
loop
push
lock
and
fst
idiv
ss
mov
stos
das
xchg
xchg
add
lret
xchg
gs
push
or
xchg
mov
popa
fs
imul
rep
stos
loop
pop
lea
cmp
mov
imul
xchg
jmp
leave
push
fstpt
andb
push
mov
adc
bound
jp
test
enter
lea
aam
pop
mov
jbe
lret
data16
xlat
push
add
cltd
mov
adc
hlt
imul
add
cmp
sbb
add
cmp
test
mov
aam
fidivl
inc
clc
inc
cs
push
mov
out
std
aas
mov
adc
aad
add
sbb
inc
pop
dec
rcr
xchg
das
mov
fistpll
imul
inc
add
cmp
or
jnp
imul
jae
add
stos
popa
call
add
mov
outsl
cmc
icebp
jecxz,pt
xor
dec
fstps
int
inc
mov
add
or
cmp
data16
sbb
mov
test
inc
lea
lret
es
sub
cmp
and
push
or
dec
insb
mov
loop
mov
sahf
push
aas
dec
sub
push
icebp
leave
jns
in
dec
pop
negb
add
pop
add
lock
scas
sub
push
out
lahf
into
insl
ror
xchg
sub
mov
loope
stos
sahf
stos
rorb
roll
jne
dec
inc
jb
fnstenv
xor
pop
mov
loopw
daa
add
test
mov
mov
fstps
inc
push
pop
xchg
mov
sub
inc
icebp
xchg
out
push
inc
xlat
xchg
add
lods
cmpsl
sub
sbb
and
fisubl
ret
pop
and
outsb
out
jmp
fldln2
jnp
andl
dec
dec
call
jp
mov
xchg
je
cltd
lea
ds
inc
popa
mov
inc
stos
insb
dec
mov
rcrb
sahf
bound
adc
rolb
mov
movsl
ret
xlat
or
lods
push
mov
sbb
ficoms
lods
mov
xchg
mov
xor
repz
pop
and
psrad
jl
addr16
mov
stos
inc
shlb
lcall
mov
test
in
or
add
dec
fisttps
mov
dec
xor
stc
xchg
shrb
cmp
cmpsb
popa
lret
stos
lods
push
jmp
insl
shlb
lds
ret
mov
cwtl
push
dec
sub
cs
xlat
adc
dec
xlat
bound
adc
data16
mov
sbbb
sub
movsb
int3
push
nop
or
ficoml
push
sub
jnp
data16
mov
cmp
out
in
adc
or
dec
inc
outsb
cmc
ret
mov
cmpsl
ss
xor
shlb
sbb
mov
inc
cld
nop
mov
and
mov
lock
enter
arpl
inc
cmp
fsubs
nop
popf
sub
dec
rol
or
pop
sub
sbb
shlb
add
mov
jns
or
stos
inc
or
lret
call
adc
adc
add
inc
pushf
ja
push
add
mov
push
shll
xor
xor
mov
out
fwait
rcrb
jge
adc
pop
xchg
nop
push
xchg
push
push
fnstenv
in
mov
jb
pop
inc
dec
iretw
xchg
cmpsl
ljmp
push
loopne
pop
mov
shll
mov
outsb
xchg
sub
cmc
add
fstps
stos
outsl
jge
mov
pop
pop
lcall
or
and
mov
pop
pop
insl
insl
mov
scas
orl
and
jbe
iret
mov
or
sbb
jne
mov
pop
rcll
push
inc
push
ja
adc
and
jmp
dec
sarb
testb
mov
or
hlt
js
sub
xchg
pop
incb
adc
or
push
test
ja
mov
lcall
in
test
pop
sbb
mov
jmp
push
dec
adc
clc
dec
mov
jae
movsb
push
pop
negb
sub
aas
mov
and
push
pushf
aam
fcomps
std
jnp
lods
mov
or
cmp
lret
mov
lods
lock
mov
sub
cmpsl
sahf
pop
adc
sub
jecxz
icebp
or
jbe
aam
test
xchg
sbb
hlt
aaa
cmp
sub
jle
push
in
stos
in
ds
add
jae
inc
daa
add
lcall
pop
lods
rcrl
and
xor
shrb
mov
push
pop
fsubrs
sbb
xor
das
xlat
orb
xor
xor
push
push
jg
mov
sub
cmc
inc
push
mov
push
adc
fistpll
in
lock
and
and
test
into
lock
ja
pop
and
das
dec
sbb
test
cmp
sbb
enter
xchg
mov
inc
sbb
daa
stc
jle
int
mov
cmpsb
xchg
pop
mov
in
adc
and
push
aaa
loope
cmc
dec
add
or
mov
icebp
insl
inc
icebp
and
into
movsb
int3
iret
add
jecxz
inc
je
inc
in
adc
xchg
mov
aas
call
jo
imul
shlb
inc
push
push
and
fstpt
adc
ret
imul
test
xchg
pop
test
lcall
xchg
call
in
cmp
jnp
mov
les
fldl2t
es
xchg
mov
pop
fisubl
rolb
adc
rorb
jne
and
mov
cltd
ja
xchg
inc
cmp
int
mov
int
push
mov
dec
sbb
xchg
xchg
imul
pop
add
mov
sbb
lcall
dec
lock
rclb
sti
jmp
cltd
xchg
inc
insl
in
sub
adc
test
jbe
fidivl
push
popa
or
add
cmp
sarl
out
cmc
adc
scas
aam
pop
cmpsl
ret
mov
mov
fdivr
js
aas
fstpt
lret
adc
fisttpl
loop
pop
leave
fistps
sti
ret
aad
mov
jno
push
into
push
dec
pop
mov
jle
hlt
mov
jo
pushf
cmpb
jp
lret
das
add
movsb
adc
ficoml
mov
arpl
jle
dec
cmp
and
shr
mov
jo
test
aas
scas
xor
lret
jge
aaa
loope
push
mov
test
cmpsl
cmp
cmc
lods
and
lcall
cltd
push
xor
adc
mov
xchg
es
int3
lds
das
xchg
orl
adc
test
or
sbb
mov
movsl
in
mov
ss
ficomps
stc
aas
pop
xchg
and
sub
push
iret
pusha
cwtl
dec
jno
in
xor
div
aam
stc
push
loope
clc
insl
lea
fwait
insl
cmc
mov
fdiv
pop
lret
pop
xchg
lock
decl
test
fistps
jns
jae
div
mov
xorb
add
push
mov
and
in
loopne
or
int3
dec
pop
xchg
sti
cmpsb
icebp
xor
roll
in
and
or
xor
insl
ja
rolb
or
mov
mov
int
outsl
imul
pop
outsb
mov
cmp
xor
fwait
adc
cmp
call
push
or
daa
xchg
sbbb
or
mov
nop
aas
pop
and
cmp
loopne
sbb
and
push
test
xchg
adc
jno
sti
stc
lds
cltd
fisttps
leave
adc
call
and
mov
push
ret
fadds
in
cld
mov
cmp
int3
aam
loop
cmp
xchg
xor
cmp
fwait
das
roll
lret
fisttpl
ja
imul
sub
xlat
hlt
cmp
ljmp
mov
sub
lock
sbb
imul
inc
dec
das
ljmp
lret
pop
mov
xchg
xor
and
or
and
pushf
jne
mov
cmpb
scas
mov
or
popa
pop
inc
das
mov
inc
add
out
addr16
loope
mov
dec
fstpl
add
in
jne
rorl
test
fs
xor
sahf
jo
inc
fcomip
mov
ljmp
ficoms
sbbl
xor
fnsetpm(287
push
pop
and
scas
jmp
mov
jbe
or
shrl
xchg
mov
addr16
cmp
jno
aam
mov
push
mov
push
xor
insb
repz
pop
sbb
sbb
jg
mov
lret
dec
dec
mov
dec
cld
fcom
lahf
jno
xchg
lods
xchg
jp
ljmp
cmpsl
movsl
insb
testb
inc
outsl
fcompl
pop
mov
icebp
andb
push
jl
daa
mov
xor
in
aas
insl
sbb
sub
sti
mov
inc
pop
out
bound
arpl
mov
dec
pop
pushf
movsb
and
fimull
lret
dec
or
or
das
test
sbb
popf
ret
cwtl
repnz
sub
add
sbb
mov
pop
fildl
mov
jmp
adc
fmul
sti
inc
jne
and
ss
inc
dec
adc
in
push
jp
aas
enter
in
push
dec
sahf
clc
mov
push
inc
cmp
xchg
shll
ficomps
sbb
xchg
cli
add
in
fiadds
mov
arpl
bound
mov
repz
xchg
nop
add
arpl
cmp
xor
fnstsw
aas
or
mov
jg
les
add
sub
stc
mov
mov
push
enter
ret
ficomps
pop
adc
or
jns
gs
cmp
orl
jae
es
test
lds
pop
xchg
pop
xor
mov
fcoml
and
add
xor
fwait
inc
dec
push
fucom
icebp
mov
push
mov
inc
mov
xor
pusha
cmovp
mov
mov
je
mov
pop
xor
sub
orb
popf
out
divl
jb
negl
xchg
ss
nop
dec
ret
jb
dec
std
pop
ds
xchg
imul
add
movl
test
je
or
shll
and
idivb
mov
sub
rorl
mov
add
mov
add
push
inc
ss
arpl
out
mov
xor
or
cmp
mov
push
sbb
pop
sahf
or
jecxz
sbb
push
orl
shl
dec
repz
imul
pop
pop
inc
or
mov
ja
fpatan
mov
into
jecxz
jo
call
sti
sub
inc
cli
mov
push
imul
imull
popa
dec
mov
sar
jbe
xchg
adc
aas
push
xchg
add
add
sbb
cmpsl
rorb
pop
xchg
lds
jmp
pop
xorb
js
add
push
inc
or
pop
in
adc
dec
mov
adcl
pushf
and
push
xchg
fwait
mov
mov
fstpt
popf
out
xlat
mov
pusha
test
mov
and
xchg
jg
pop
sbb
adc
andb
lock
cmp
pop
cmp
es
sub
add
in
inc
int3
inc
inc
add
inc
fldl
testl
les
or
xchg
inc
shr
cwtl
mov
mov
xlat
cmp
mov
push
sub
push
push
mov
xor
sub
sub
imul
hlt
shrb
or
jb
jnp
scas
pusha
jecxz
test
lea
ret
pop
loopne
dec
icebp
cmc
aaa
add
sahf
mov
je
cli
pop
lods
mov
xchg
popa
dec
mov
je
push
xchg
loope
sub
or
mov
cmp
jle
dec
ret
arpl
ss
ds
insl
cld
add
add
sbb
cmp
xor
pop
dec
xchg
jp
jae
inc
shl
sti
dec
xor
loope
mov
fdivs
xchg
ficoml
outsl
mov
sbb
mov
xor
ja
pushl
shlb
iret
pop
jo
dec
pushf
fiadds
push
or
movd
adc
fs
sub
mov
mov
xchg
testb
and
lea
cmpsl
cmp
push
sub
and
jno
xchg
or
movsb
ja
cli
cli
mov
pop
cli
sbb
xlat
nop
jg
add
repnz
add
popf
iret
adc
arpl
stc
push
ljmp
into
dec
std
add
push
pop
xlat
mov
test
ret
dec
ss
pop
sbb
movsl
add
sbb
aas
imul
stc
push
flds
imul
lret
mov
ret
rcrl
inc
pusha
shlb
fs
in
add
sbb
out
stc
fiadds
xchg
mov
push
sbb
fimull
shl
jge
mov
inc
mov
push
jge
cmp
push
insl
and
dec
in
orl
data16
clc
add
cltd
push
sub
lret
cmpsb
or
and
push
je
in
or
mov
sub
movsl
pop
fdivr
sub
add
xchg
xchg
add
and
loope
outsb
test
lods
jbe
insb
iret
lcall
jge
mov
sbb
dec
sbb
pop
test
lds
jb
mov
lods
ljmp
inc
aas
jecxz
aas
cmp
xchg
pop
add
hlt
sub
pop
or
hlt
push
push
daa
jne
mov
adc
add
movsl
xchg
call
outsl
jle
xchg
hlt
push
std
in
and
neg
push
jae
leave
rclb
ficoms
dec
and
popa
push
push
pop
fcmovbe
jae
cmp
xchg
or
outsl
ret
cli
insl
push
mov
ds
sub
ret
out
adcl
adc
mov
inc
int
testb
movhlps
fwait
idiv
mov
stc
mov
out
ds
cmp
imul
and
dec
cmp
orb
rol
pop
enter
mov
xchg
into
xchg
lock
mov
dec
das
loope
cwtl
int3
ret
push
jecxz
adc
pop
addr16
imul
ret
dec
mov
nop
push
mov
push
sub
sub
xor
icebp
dec
into
hlt
sbb
mov
and
sbb
push
imul
inc
js
in
rcrl
pop
inc
addr16
loopne
add
lahf
in
loop
sbb
push
xor
xchg
xchg
fstpl
add
fists
cmp
aaa
rcll
cmp
iret
test
or
ja
repz
push
fistpll
jne
mov
push
push
or
in
cmp
add
es
add
mov
xor
xchg
inc
adc
lods
or
add
roll
cmp
ds
xchg
and
addb
fcmovnb
daa
mov
sti
dec
pop
xor
adc
cmpsb
insb
repz
sub
push
jmp
clc
shrd
dec
popa
mov
and
test
fcos
mov
fcmovu
jecxz
je
mov
in
into
pop
cmp
xchg
or
push
or
lods
dec
jp
cld
and
add
inc
daa
sbb
cmpsb
push
arpl
lahf
ret
fs
add
push
andb
cmp
addr16
push
int3
dec
push
int3
std
mov
insl
insb
fbld
iret
inc
les
add
loope
push
mov
leave
aad
pop
icebp
xchg
stc
sbb
in
and
push
repz
pop
mov
leave
jmp
jmp
fcompl
into
cmp
cld
push
inc
cmp
rclb
sahf
mov
fiadds
sbb
xor
mov
jno
add
mov
cmp
sbb
fistpl
mov
pop
push
xor
jg
inc
mov
jb
jmp
enter
mov
jl
lahf
aam
ljmp
das
push
cmp
pop
insl
xlat
dec
jb
xchg
mov
sub
xchg
shll
cltd
in
mov
mov
adc
fs
scas
mov
jns
stc
movsl
shlb
out
sti
int
and
dec
xchg
or
fidivrs
xor
shlb
jns
jle
and
pushf
loopne
jb
add
pop
cmpl
addl
popf
sub
int3
cmp
mov
pop
mov
rclb
and
fdivrl
xor
sbb
ljmp
shlb
push
jle
xor
jne
lea
mov
dec
cmp
imul
and
bound
jge
push
pop
rcl
cmp
or
cmp
out
icebp
in
adc
mov
movsb
shl
mov
xchg
push
and
mov
imul
or
inc
sbb
clc
xchg
mov
sub
mov
out
fst
insl
in
jae
pop
xchg
in
sbb
fnstcw
inc
cs
jmp
movsb
rcl
scas
sub
jnp
add
lcall
cmp
into
stos
and
cmpsb
xor
mov
outsl
and
rol
fcoml
sub
adc
dec
or
in
xchg
jne
push
imul
push
test
dec
push
in
jl
fstpt
cli
push
aam
and
out
xchg
jl
sbb
inc
jg
sbbl
dec
jne
mov
mov
and
dec
and
int3
cmp
cmp
pop
sti
imul
jno
aaa
aam
iret
bound
lods
sbb
pop
and
scas
daa
divl
or
es
mov
sub
or
mov
cmpsb
xchg
xor
adc
shll
xchg
pop
bound
push
iret
xor
push
mov
or
test
inc
adc
lcall
push
push
inc
out
arpl
xor
adc
xchg
sbb
dec
cli
out
mov
sub
stos
repz
adc
pop
cld
mov
test
xchg
test
in
mov
pop
xchg
in
out
scas
or
mov
pop
pop
movsl
addr16
stos
in
movsl
xchg
mov
cltd
stos
insl
sbb
lea
or
pop
ror
cmpsl
insb
cmp
pop
das
into
aam
jmp
mov
dec
addr16
shlb
jno
dec
jp
dec
mov
jno
add
call
cmc
adc
ja
ffree
insb
jbe
push
and
mov
mov
push
inc
insl
in
mov
shlb
push
enter
adc
lahf
mov
push
inc
loop
xchg
and
mov
lret
jle
add
xchg
mov
shlb
into
mov
frstor
mov
testb
jne
cmpsl
jo
inc
sbb
cld
push
add
sub
mov
out
push
ds
pop
sarb
imul
leave
cmp
or
xor
sbb
test
inc
add
xor
movsb
cmp
test
xor
pop
cmp
mov
pop
ja
sti
and
pop
or
cmp
sbb
jno
mov
sbb
mov
and
cwtl
dec
sub
aad
add
dec
xchg
sbb
xchg
sub
or
pop
aaa
pop
pop
xor
mov
pop
ljmp
idiv
push
pop
jns
insl
mov
lret
in
in
mov
scas
xor
and
rclb
inc
xor
mov
lcall
cmp
fstpl
stos
xor
mov
ss
test
aad
ja
cmp
pushf
gs
int
jge
xchg
lahf
push
test
rclb
cmp
mov
cmc
add
in
cmp
aas
jo
fistps
cmpsb
popa
push
and
sahf
aam
inc
ja
pusha
jl
sub
xor
xor
into
push
push
mov
lret
sub
jg
jmp
addr16
sahf
addr16
mov
add
mov
pop
mov
lcall
xchg
into
popf
ret
push
sub
pop
insb
pop
fdivl
popf
mov
mov
mov
push
mov
dec
and
mov
lods
mov
aam
outsb
loope
psrad
or
arpl
lret
cmc
cmp
push
push
test
scas
xchg
test
push
iret
imul
sub
xchg
xchg
fisubl
push
adc
fsubp
stc
xchg
xchg
js
mov
stc
mov
add
jno
xlat
daa
adc
loope
cmp
leave
pop
fistl
movsl
mov
mov
decl
loop
out
test
stos
xchg
out
int
enter
cmp
or
push
lds
push
ret
xor
or
in
pop
sbb
imul
mov
mov
filds
mov
fadd
fadds
mov
mov
cmp
cltd
pusha
dec
sar
mov
jae
and
mov
loopne
int3
sbb
jle
ret
sahf
push
push
not
sub
std
lods
stc
push
sub
push
pop
sub
and
or
xor
mov
jecxz
mov
pusha
or
add
out
mov
movl
in
std
mov
adc
imul
shld
stos
push
mov
shll
sub
adc
shrb
push
stc
fstps
mov
mov
push
sbb
pop
filds
xor
fsub
fdivl
repz
movsb
and
loopne
pop
push
std
and
mov
in
sahf
stos
subb
mov
jl
fisttps
and
pop
sbb
adc
pop
cmp
sub
loopne
in
pop
negl
pop
in
mov
sub
jp
aad
hlt
adc
sarb
gs
pop
xor
rorb
add
and
sbb
mov
in
inc
sti
mov
adc
sub
mov
push
shl
dec
subl
cmp
adc
pop
imul
jecxz
or
test
sbb
and
sbb
outsl
fisubl
dec
dec
cld
cmpl
aad
pop
mov
test
inc
not
sub
mov
jmp
cltd
bound
jmp
sarb
or
mov
cli
stos
inc
and
push
sub
bound
cltd
and
push
dec
stos
ljmp
mov
mov
or
ds
push
mov
sbb
lahf
and
lret
pushf
pop
pop
dec
fcmovb
fsubrs
sbb
jno
setno
and
std
out
jns
mov
sbb
cltd
sub
push
pop
mov
adc
xchg
pop
mov
and
and
cmp
mov
mul
pop
jb
jmp
jne
adc
dec
in
dec
das
imul
push
jae
xlat
jb
lret
add
jmp
and
push
fidivs
push
pop
dec
adc
cli
mov
mov
pop
xchg
xchg
jbe
int3
data16
in
mov
imul
add
inc
insl
cmp
adc
mov
push
cmc
nop
jno
or
pop
push
lods
leave
cmp
adc
xchg
arpl
loopne
fidivrl
jb
cmp
xchg
cmpsb
lods
ss
insl
jns
add
gs
lret
push
fcmovbe
insl
stos
daa
fsts
addb
or
pop
lret
cwtl
daa
mov
adc
jae
jae
xchg
inc
repz
inc
inc
xchg
and
cmp
mov
int
push
divl
ss
vprotd
mov
movsb
cmp
addr16
xlat
dec
sub
adc
xchg
arpl
fcos
sbbl
inc
sbb
pextrw
sete
xchg
fistpll
xor
xor
rclb
cmp
inc
inc
pop
or
xor
fwait
mov
mov
fdivrs
sbb
cmp
mov
js
xchg
mov
mov
cltd
pop
sub
inc
test
leave
pop
test
scas
pop
xchg
or
fstps
push
ss
dec
imul
sbb
loopne
and
fwait
push
dec
clc
inc
in
push
xor
pop
pop
and
aas
std
call
xor
push
cli
sahf
push
filds
and
cmc
aam
into
sarl
xor
sahf
gs
add
add
insb
lods
add
imul
mov
sub
push
and
sub
pop
std
and
in
sbb
pop
jecxz
icebp
or
push
faddl
pop
sti
sub
sub
jns
stos
pop
xchg
stos
pop
jmp
adc
nop
mov
sbb
sbb
and
xchg
ljmp
or
mov
out
aam
xor
lds
scas
pop
lods
jge
cmp
fildll
mov
jmp
insb
daa
xor
xchg
adc
testb
adc
cli
cmpl
push
outsl
xchg
insl
mov
das
push
sub
ljmp
mov
in
out
adc
jle
divl
push
add
test
pop
pushf
cltd
pop
jg
shrl
fcoms
cwtl
pop
pop
pop
mov
pop
insb
test
push
ret
xchg
in
aam
push
ds
cs
hlt
sbbb
pop
push
xor
in
aad
push
int
inc
push
dec
lock
pop
fwait
int
push
jae
adc
scas
leave
add
cwtl
popa
shl
stos
pop
mov
rcrb
pop
sbb
inc
inc
inc
cld
push
pop
test
sub
pop
sub
arpl
jge
call
add
imul
mov
bound
push
mov
fcomps
mov
or
mov
insl
cmp
mov
iret
std
mov
and
mov
imull
sub
pop
lods
cs
loop
mov
sbb
add
add
stos
fidivl
lock
fisubrl
pop
popa
mov
jne
and
enter
xchg
or
jl
pop
int
call
xlat
aam
inc
repz
jb
push
into
dec
adc
dec
jp
lods
frstor
lret
or
adc
and
cld
dec
fcmovnb
mov
mov
cmp
cmp
add
inc
fiadds
jae
add
dec
test
inc
sbb
push
push
pop
inc
lds
sbb
jbe
or
jmp
les
std
mov
sub
sbb
adc
cmp
fstpt
mov
loopne
mov
sbb
roll
sti
lods
divl
push
and
lret
dec
in
sbb
jmp
mov
int3
dec
iret
xorb
adc
jae
loopne
shlb
or
inc
xorb
jnp
mov
mov
cmpsl
jp
add
les
jb
sub
addb
jne
aas
movsb
cmp
push
pop
jae
xor
sbb
test
addb
outsb
roll
xor
mov
mov
movsl
push
icebp
fs
loop
xchg
mov
push
mov
inc
xchg
inc
ljmp
inc
mov
mov
and
dec
lock
inc
out
rcr
out
push
push
or
inc
mov
bound
cmpsb
lock
fistl
stos
fcoms
inc
cmpsb
add
mov
adc
inc
mov
xchg
xlat
push
cmc
popf
pop
inc
cmpsl
jo
adc
cmp
dec
push
sub
popf
mov
cmp
lea
cltd
push
or
inc
mov
test
jo
pop
pusha
mov
data16
sbb
mov
insb
dec
imul
insb
aad
xchg
mov
jmp
or
mov
mov
sarl
fidivrl
and
cld
mov
lods
sub
xlat
push
pop
str
out
dec
dec
lock
dec
lret
xchg
jo
inc
mov
popf
jae
mov
push
call
pop
or
mov
pop
sbb
cmp
adcb
and
cs
inc
cmp
loop
xchg
scas
push
push
push
or
int3
xchg
fistl
call
mov
loope
jne
inc
in
das
cmp
xchg
jns
test
jno
loope
mov
cmp
mov
mov
sbb
call
pop
andps
dec
gs
mov
push
dec
dec
fcompl
add
fmull
call
pop
loope
sub
scas
add
and
ss
fcmove
pushf
push
addl
div
imul
dec
pop
lds
imul
dec
fsubr
leave
ds
shrb
test
pop
and
adc
loopne
jnp
aaa
bound
dec
mov
add
in
jl
aas
int
mov
sub
add
fucomi
xchg
xor
and
scas
mov
add
xchg
inc
sub
pop
jns
or
adc
outsb
mov
sbb
std
je
jl
push
je
add
call
push
jne
test
cmp
or
mov
pop
mov
push
ror
dec
or
jmp
jge
iret
inc
ljmp
in
jns
subl
adc
outsl
loopne
es
int3
shrb
jbe
dec
push
sub
outsl
fcoms
in
leave
sbb
pop
popa
cltd
inc
push
addr16
add
pop
outsl
cmp
jmp
or
ret
mov
sbb
stc
dec
popf
mov
pusha
jl
int3
adc
fbld
cmp
imul
pusha
xchg
push
test
ljmp
add
dec
adc
sub
hlt
popa
xchg
add
pop
xchg
mov
int
xchg
loopne
push
mov
bound
pushl
or
ss
lods
int3
jl
dec
into
popa
dec
inc
leave
int
dec
mov
pop
mov
mov
jl
inc
adc
dec
outsb
mov
jb
ss
dec
fdivl
lahf
push
lret
lods
in
stos
ja
dec
push
sub
mov
and
adc
arpl
fadds
je
pop
pop
push
mov
lcall
mov
cmp
jecxz
inc
hlt
mov
fwait
arpl
jle
push
icebp
mov
xchg
js
shll
pop
or
loope
leave
outsb
in
push
inc
xchg
pusha
scas
ret
data16
ss
out
cld
dec
dec
ss
adc
mov
mov
adc
mov
push
out
ror
fcmovnu
mov
push
aaa
sub
into
jl
xchg
and
scas
test
insb
adc
sbb
xchg
popf
arpl
add
xchg
imul
fisttpll
iret
pushf
inc
add
mov
mov
popf
lret
fiadds
pop
cmc
in
xchg
stos
mov
mov
inc
sbb
fists
loope
xor
adc
push
adc
loope
push
pop
movsb
jb
and
ds
fdivrl
mov
mov
and
in
adc
std
lahf
mov
gs
and
mov
mov
sub
jmp
cs
ljmp
test
lea
popl
in
fcoml
addr16
cmpsl
cmpsb
mov
scas
lret
aad
sub
xchg
fistl
dec
push
sub
mov
movl
fwait
stc
cltd
add
iret
pop
sti
sbb
pop
sbb
jno
xchg
mov
inc
cmp
xchg
push
arpl
mov
leave
or
call
inc
movsb
and
jecxz
push
ret
lahf
mov
fwait
pop
cld
cmc
pop
xchg
fstps
cmp
lar
mov
add
icebp
icebp
shll
cwtl
imul
add
dec
jnp
aas
mov
inc
frstor
mov
lahf
or
inc
xor
stc
iret
es
pop
push
sbb
mov
and
loope
or
test
decb
push
aad
mov
lret
std
xlat
cmp
mov
add
test
and
sub
pop
jge
or
loopne
out
test
cmp
mov
cli
imul
cld
push
rorl
lds
es
add
and
push
jl
movsb
mov
pop
jb
outsb
test
popa
imul
stc
mov
lods
xchg
insl
push
cmp
jo
in
ljmp
popa
adc
and
idivb
je
mov
pop
loop
jnp
push
pop
dec
sub
or
cmpsb
sti
pop
mov
mov
loop
sub
mov
pusha
xlat
sbb
xchg
mov
pop
scas
mov
mov
data16
test
faddp
push
into
push
jp
and
inc
xchg
pop
pop
mov
adc
xor
pop
lcall
jne
loopne
mov
roll
xchg
gs
imul
adc
xchg
inc
lahf
pop
adc
inc
xchg
jae
or
stc
and
mov
test
cmp
adc
sub
ret
push
lcall
insb
aaa
cmp
pop
mov
sub
dec
mov
pop
sub
je
insl
mov
in
jbe
inc
arpl
hlt
insl
outsl
inc
push
sti
mov
jmp
push
mov
xchg
inc
popa
jae
mov
adc
xor
bound
adc
mov
loopne
push
jnp
mov
movsb
jbe
aas
xor
push
push
dec
inc
mov
or
and
xor
daa
rcrl
sub
lret
push
loopne
lahf
inc
push
inc
imul
push
inc
cmpsb
jae
les
js
sbb
push
push
mov
lret
cmp
mov
std
sub
mov
pop
xchg
aaa
sbb
std
sub
sbb
dec
mov
jl
enter
inc
and
icebp
lea
loopne
pop
lret
mov
and
int
jo
dec
fucompp
cmpsl
mov
ds
or
dec
lock
xlat
sub
pop
sub
or
jb
push
lea
popf
std
or
mov
decb
sbb
call
and
insl
adc
outsb
jle
jmp
mov
push
push
add
test
pop
lds
cmp
mov
xorb
dec
xor
push
repnz
lret
push
insb
rcl
sbb
mov
or
imul
dec
leave
pop
lea
jbe
jb
inc
xchg
jmp
push
std
aam
mov
inc
sub
dec
ljmp
xor
push
cmp
jne
cld
dec
inc
inc
xchg
loopne
das
mov
negl
cwtl
jmp
inc
jbe
and
lahf
adc
fimull
adc
cmpb
mov
adc
in
adc
insl
stos
mov
add
fcompl
sbbl
add
lea
inc
ja
mov
incb
jle
int3
cwtl
fwait
pop
xchg
scas
arpl
mov
hlt
mov
sub
sbb
lock
pop
int3
mov
and
scas
mov
andb
xchg
repz
in
and
inc
popa
xchg
add
in
addr16
mov
push
call
fsubl
dec
inc
pop
xchg
into
mov
ud2
aad
jecxz
inc
std
lahf
sbb
add
adc
xchg
cmpsb
imul
insl
sub
out
push
and
inc
dec
dec
cmp
add
lods
pushf
ljmp
fxch
mov
js
fimull
add
aad
mov
mov
push
leave
xorb
and
mov
dec
inc
sub
inc
loope
and
jecxz
sti
pop
fcmovne
mov
xchg
fld
jl
je
pop
cs
adc
fsub
clc
fdivr
dec
pop
sahf
mov
and
or
sub
scas
lods
jno
jae
insl
out
int
imul
pushf
jb
nop
mov
adc
adc
testb
fnstsw
xchg
lds
inc
scas
cmp
idiv
jae
lcall
pop
decb
mov
ss
and
out
gs
and
in
orl
push
cmpl
jecxz
das
xchg
xor
mov
fisubs
xor
dec
out
fld
lahf
push
fcompl
sarb
mov
sbb
test
xchg
sbb
lret
scas
sti
jl
pop
mov
outsb
mov
mov
out
push
sbbb
push
loop
mov
jecxz
mov
test
popa
fmul
cmpsl
or
push
adc
pop
cmp
add
push
fistpl
mov
lods
les
sar
add
and
das
lods
int3
and
inc
pop
xchg
pusha
mov
push
dec
sbb
repz
jp
pop
jmp
out
xchg
push
mov
addr16
hlt
enter
sub
je
lret
cmpb
ss
jecxz
fmull
inc
cwtl
cmpl
in
scas
les
popa
jge
add
mov
or
push
cmp
sarb
pop
mov
mov
xlat
imul
and
jae
push
jge
iretw
mov
in
lods
mov
cmpb
js
mov
in
lock
mov
mov
stos
jl
xor
pusha
push
xor
jl
cmpsl
lret
mov
psubb
jb
pop
rcl
popf
xor
out
addr16
or
sub
or
xchg
cwtl
lret
pop
mov
je
das
push
mov
insl
mov
jnp
popa
cmpb
stos
or
aaa
or
inc
mov
inc
xchg
inc
sti
lock
jle
inc
dec
jle
fisubrs
sahf
mov
sbb
push
scas
sbb
push
inc
cmp
push
jecxz
int3
cmpsl
cli
mov
xchg
in
lret
mov
cld
lcall
mov
loop
ja
mov
mov
xor
out
orb
inc
ljmp
adc
jb
outsl
arpl
mov
fwait
outsb
or
xchg
mov
fdivrl
xor
leave
dec
xchg
je
mov
jo
jle
fcomi
sbb
ficompl
nop
idivl
push
xchg
push
push
insb
rcrl
cmp
pop
das
rorl
mov
movsl
clc
cmp
adc
subl
pusha
dec
push
add
rcr
or
mov
faddl
shll
mov
cmp
pop
xor
sub
sti
inc
mov
ljmp
cltd
xor
xchg
pushl
xchg
es
out
mov
adc
pop
sti
mov
lret
fmulp
mov
bound
cmp
sub
das
adc
in
adc
mov
mov
push
mov
dec
inc
cltd
xor
push
xor
jno
clc
cmp
leave
xchg
insl
gs
adc
in
repnz
sub
repz
lods
and
aad
jb
shlb
mov
cmpsb
movsb
shlb
outsl
mov
fucom
sub
and
nop
jge
ret
into
dec
xchg
push
sbb
mov
ret
ss
ja
sub
xor
nop
mov
jmp
orl
ja
sbb
lock
pusha
sub
insl
and
pop
mov
jb
and
mov
stos
mov
pop
lret
inc
jmp
add
jp
push
adc
xchg
inc
or
xchg
mov
ss
xor
scas
test
push
push
jnp
call
sub
mov
ss
jb
lock
stos
mov
fdivl
sub
std
repz
repz
mov
add
mov
xchg
movsb
jge
imull
outsl
out
outsb
scas
inc
xlat
inc
and
and
push
ds
xor
mov
shrb
cwtl
inc
dec
inc
into
jno
lea
je
testl
outsl
in
jmp
lock
test
sub
arpl
pop
incb
in
mov
jmp
addr16
jge
jle
mov
lahf
insl
mov
test
xchg
das
push
jmp
pop
mov
add
dec
adc
cmp
sahf
mov
mov
outsb
aaa
out
cmp
sbb
jb
jg
ficoml
mov
iret
jo
adc
push
cli
in
mov
ljmp
in
std
test
lret
in
and
in
mov
shll
cmpsl
iret
sbb
push
lock
cmp
or
push
into
and
cwtl
test
jns
add
mov
sub
dec
add
pushf
push
and
imul
clc
loop
out
xchg
das
mov
lods
popa
push
mov
test
aad
cmp
xchg
enter
dec
and
mov
lret
add
std
mov
xchg
jge
push
push
pushf
movsb
hlt
mov
push
mov
mov
xchg
icebp
into
out
or
adc
xchg
add
mov
push
into
pop
dec
inc
nop
or
or
in
or
sub
mov
mov
aam
mov
mov
cwtl
push
repz
mov
pop
inc
mov
inc
mov
mull
insb
cmpsb
je
cmp
sbbb
int
or
inc
mov
mov
int
jnp
movsb
adc
arpl
mov
enter
jle
ljmp
xorb
jbe
inc
imulb
repz
imulb
inc
push
out
cmp
lahf
lret
cmpsb
sbb
xchg
scas
xor
scas
ret
jb
icebp
pop
fistl
cs
adc
in
or
mov
push
push
shr
stc
dec
mov
xor
adc
xor
cld
or
xchg
daa
out
cmp
addr16
xchg
xor
xchg
clc
xchg
pop
and
fbstp
push
daa
rclb
mov
add
dec
filds
movsl
lret
je
add
les
stos
cmp
mov
push
std
aas
rcrb
inc
fiaddl
push
inc
jne
dec
mov
shll
inc
push
mov
jae
or
out
add
push
adc
into
popf
je
out
out
mov
lods
mov
sub
pop
dec
and
jns
mov
cs
push
adc
fcomip
lods
jge
pushf
ss
fisttpll
xchg
push
xchg
cmp
xchg
es
pop
dec
lods
push
push
push
arpl
addr16
ja
std
pcmpgtw
mov
in
stos
pop
push
mov
push
mov
loopne
sbb
sbb
jb
mov
jns
xchg
out
push
cmpsb
jnp
ret
and
inc
clc
leave
sbb
dec
fstps
imul
push
int
mov
lods
pop
es
xor
jl
xor
arpl
pop
rorb
mov
lcall
pop
dec
push
and
and
pop
jae
xlat
stc
jnp
filds
popf
jge
mov
jae
out
into
fisttps
pusha
sbb
pushl
insb
xchg
cmpsb
out
daa
push
es
mov
mov
jl
or
xor
sub
outsb
inc
xor
call
fldcw
push
daa
jecxz
cld
arpl
jbe
xor
inc
fwait
cwtl
je
xor
jnp
xchg
dec
rcr
cmpsb
xor
inc
sub
xor
mov
int3
shrb
orl
ja
cli
push
push
inc
push
lds
and
sbb
xor
pushf
inc
sarb
xchg
or
push
rolb
sahf
test
scas
out
mov
lret
add
imul
xchg
cmp
sub
int
and
and
ja
sub
hlt
mov
sti
les
pop
dec
ret
pushf
pop
pop
sbb
lcall
mov
pop
aas
pop
or
loopne
mov
jp
aaa
js
ljmp
dec
pop
jle
jns
enter
pop
pusha
fistl
xor
movsl
dec
stc
or
xchg
cwtl
pop
dec
cmp
sbb
aas
xchg
jp
xchg
adc
std
pusha
xchg
jge
sarl
xchg
fs
movsl
insl
fildl
jnp
jae
push
pop
and
and
sub
sbb
repz
pop
push
scas
xchg
push
xchg
cwtl
ds
ljmp
decl
push
popf
daa
jne
sbb
jns
jle
notl
and
pinsrw
jmp
or
bnd
aas
icebp
and
ret
jle
lcall
cmp
push
outsb
les
shrl
mov
jns
pusha
imul
mov
dec
rorb
add
inc
push
jl
out
daa
xchg
stc
pop
lahf
test
pop
lahf
pop
xchg
mov
dec
inc
in
mov
pop
in
push
pop
jl
xor
add
sub
into
add
jmp
shlb
je
rcrb
add
mov
scas
icebp
dec
xchg
fcomps
inc
sbb
mov
mov
adc
jns
imul
pminub
mov
outsl
aam
xchg
push
mov
fcoml
and
jnp
adc
pop
mov
dec
push
pop
lds
push
in
in
enter
data16
rcrl
adc
inc
movsl
dec
and
loop,pn
add
out
mov
pop
push
sbb
lods
sbb
mov
xchg
ds
mov
xchg
cli
pop
cmpsl
fisubrl
cmp
mov
and
push
dec
pop
or
xchg
repnz
sub
out
push
and
mov
lods
int
sub
in
ss
outsl
or
lods
movsb
and
inc
int3
mov
push
add
arpl
icebp
add
leave
push
testl
xchg
xchg
pop
jne
xchg
and
lods
daa
xchg
int
xchg
inc
je
mov
mov
es
in
repz
outsb
mov
outsl
and
lahf
push
pusha
sub
push
mov
sbb
aaa
cmpsl
and
aas
icebp
pop
jg
movsb
cwtl
mov
xchg
and
inc
xchg
out
xchg
mov
mov
dec
add
insb
jb
mov
xor
arpl
mov
mov
sbb
sbb
inc
outsl
or
xor
or
std
jle
mov
cmpsb
add
lock
fadds
mov
xor
inc
adc
mov
lret
aaa
sbb
hlt
cmp
ljmp
out
lea
inc
push
mov
mov
or
or
inc
hlt
sbb
je
lods
mov
adc
stos
xchg
out
clc
sbb
sub
jae
mov
les
movhps
cmp
dec
pop
adc
lock
mov
scas
sbb
or
dec
sbb
xchg
leave
addr16
sarb
movsl
loopne
cmpsl
into
lock
jl
into
push
inc
cmpsb
mov
ja
sub
in
lret
scas
push
mov
data16
into
mov
xchg
hlt
add
inc
fildl
jbe
loop
test
mov
daa
cmc
daa
mov
fsts
in
fucomip
sbb
inc
loope
mov
lret
lea
inc
xchg
sub
mov
pop
mov
xchg
adc
xchg
into
test
mov
or
push
jbe
clc
ret
cmp
dec
je
lcall
mov
push
jg
pop
and
in
sbb
push
add
movsl
push
idiv
xchg
cmova
popa
sub
int3
fildl
mov
push
stos
pop
xor
je
xor
int
add
or
xchg
gs
xor
clc
cmpsl
add
jb
leave
out
sbb
dec
cltd
pop
sub
out
xchg
out
cmpsb
hlt
jl
inc
mov
push
push
add
out
sbb
jl
pop
adc
repnz
enter
lahf
add
xchg
jno
inc
movb
or
lahf
push
scas
fistpll
fidivrl
sub
mov
jne
mov
jnp
jno
fs
sbb
xor
in
pop
cmp
aas
add
hlt
scas
cmp
pop
mov
mov
fdiv
push
add
scas
xchg
int
out
xor
adc
push
jmp
push
int3
xlat
mov
std
xchg
jge
jne
xor
ret
mov
pop
ret
dec
mov
xchg
test
pop
aaa
cli
xor
arpl
pusha
mov
mov
mov
fisttpl
dec
aad
stc
mov
sbb
aaa
bound
out
hlt
call
cld
jecxz
rcl
mov
inc
dec
out
mov
or
ss
sbb
jne
leave
inc
shlb
mov
fs
in
pop
jle
sub
mov
out
mov
dec
loopne
jl
adc
cld
inc
leave
xchg
xor
cmpsl
or
mov
push
and
jns
pop
pop
xor
xchg
loop
mov
dec
cmp
mov
pop
ds
dec
and
mov
mov
xchg
fdivr
inc
out
nop
pushf
ficomps
out
mov
cmpsl
jg
dec
loope
filds
inc
inc
mov
xor
mov
out
mov
scas
jb
mov
sbb
inc
lahf
cmp
js
jmp
insl
in
cli
scas
dec
and
mov
xchg
test
inc
inc
adc
hlt
mov
dec
jl
ret
out
mov
cld
xchg
inc
lret
cmp
stos
icebp
push
mov
cmp
mov
mov
xchg
les
lods
or
imul
dec
inc
decb
int3
dec
lret
or
aam
push
fidivrs
lea
push
mov
push
xchg
jle
mov
das
pop
add
add
push
inc
pop
xchg
dec
stos
add
inc
lcall
sub
dec
cmp
jns
push
stc
mov
or
push
nop
lods
mov
call
inc
fcompl
sbb
fists
sbb
or
movsb
sbb
imul
push
rcl
or
mov
dec
test
and
sti
dec
and
jns
add
ret
repnz
sub
shll
data16
or
sahf
fadds
dec
or
fiadds
negl
pop
inc
scas
and
rclb
gs
and
push
xor
test
cmp
fidivrl
not
mov
xor
in
jmp
sub
push
loop
xor
push
sub
cld
addr16
addr16
rorl
in
jle
orb
xchg
jp
outsl
xor
pop
in
pop
push
outsb
jbe
pop
or
fucom
jmp
push
out
mov
jne
popf
rcll
insl
mov
pop
and
inc
lds
or
int
testb
cltd
aad
push
or
and
sbbb
pop
fmul
or
or
lea
jge
inc
clc
hlt
mov
push
xor
insl
es
xchg
sub
cmc
stos
fnstsw
sub
or
gs
xlat
adc
cmc
fadds
insl
sarb
adc
xor
xchg
dec
push
imul
sub
jae
xchg
fcomps
roll
ud2
cmp
test
js
repz
xchg
dec
and
out
and
into
dec
clc
or
imul
cmp
outsl
mov
add
sub
adc
clc
pop
ja
mov
inc
mov
jl
cmp
ret
pop
push
jo
ds
lret
xlat
cmp
fidivrs
gs
xchg
aam
push
mov
data16
mov
mov
mov
or
notl
cwtl
add
loope
lods
push
push
stos
adc
out
lock
stc
mov
and
add
mov
jo
mov
dec
icebp
sbb
movsl
xor
inc
push
daa
mov
pop
scas
clc
movsb
or
inc
stos
mov
test
pop
test
pop
dec
stc
fmuls
pop
dec
gs
jle
out
jl
cs
in
sbb
jbe
dec
jo
xorb
aad
jl
or
cmp
mov
insb
shlb
push
mov
in
stc
jb
mov
mov
into
fidivs
xor
xchg
or
aaa
xlat
push
jmp
les
mov
flds
fstp
add
push
stc
jnp
cmpxchg
jge
xor
jmp
push
repz
push
xchg
not
pop
jns
inc
shlb
pop
rol
mov
cs
add
lock
inc
rclb
lock
add
jae
lret
aad
test
jne
arpl
es
imull
fcomip
xchg
scas
and
inc
call
jl
aam
fisttpll
inc
push
cld
sar
clc
pop
pop
pop
pop
sub
cld
pusha
xchg
pop
xlat
and
incl
sbb
stos
xor
adc
lds
lahf
adc
inc
movsb
in
mov
jle
aaa
sub
mov
lds
xchg
jle
sub
xchg
in
add
dec
daa
and
cmp
stos
add
pusha
push
pop
sbb
and
xor
inc
sahf
push
push
incb
inc
jg
fwait
popa
push
and
mov
sar
ds
arpl
jbe
sbb
fcoml
add
out
fbld
inc
push
flds
rorl
inc
cmp
push
mov
ja
ds
sub
inc
xchg
out
pop
mov
aaa
inc
mov
mov
dec
fdivrl
clc
push
adc
mov
or
mov
add
fldpi
stos
push
ja
pop
jl
lcall
xchg
aam
fcmovbe
add
mov
je
cltd
mov
pop
or
stc
inc
shll
fucomip
insb
push
mov
pushf
or
xor
test
ljmp
pop
jae
loope
add
imul
loope
jmp
js
mull
xchg
cltd
inc
mov
fwait
mov
push
lret
hlt
sbb
jb
fbstp
inc
xchg
xchg
xchg
std
add
jno
rcr
pusha
adc
or
xchg
push
repz
clc
adc
in
aas
and
adc
add
cmp
iret
mov
jns
jg
sbb
xchg
sbb
or
fisubrs
fnstenv
adc
add
and
pop
xchg
sbb
sub
in
sub
inc
pop
js
dec
mov
shl
mov
add
add
dec
inc
mov
lea
inc
roll
sub
test
pushf
lock
inc
pop
sahf
aad
sbb
loope
lret
push
scas
mov
mov
vpackuswb
stos
and
in
xor
mov
aad
sub
push
mov
mov
and
gs
add
xor
xchg
fs
int3
mov
insb
push
mov
adc
and
jb
lods
cmpsl
mov
sbb
add
mov
out
or
pop
or
ja
push
and
lock
test
cmp
iret
jae
jmp
push
cmc
xor
pop
pushf
je
push
jl
xchg
mov
jne
sbb
mov
daa
insb
or
out
and
movsb
sbb
je
int3
xor
push
add
fildll
addl
aas
ljmp
data16
outsl
xchg
aaa
imul
stos
mov
or
stos
jmp
xor
inc
push
aad
repz
pop
loopne
sbb
jno
dec
push
jbe
mov
rcl
aad
cmp
in
jnp,pn
fiadds
sub
mov
imul
aas
push
push
pop
sbb
fmuls
sub
mov
aam
jno
adc
sahf
pop
in
iret
shlb
mov
insl
pop
mov
int3
adc
push
add
jbe
imul
inc
xor
jg
cld
push
push
cmc
cltd
push
out
and
mov
jmp
mov
jns
movsl
mov
xor
xchg
pop
scas
sar
dec
inc
pop
ret
imul
jl
sti
out
sbb
lods
adc
dec
mov
addr16
push
movd
pop
adc
clc
pop
xchg
ret
dec
in
and
shll
xor
lret
or
push
lahf
mov
cmp
adc
mov
push
subb
mov
jg
in
push
das
xchg
pop
mov
xor
fsubrs
mov
rcr
sahf
lea
pop
and
pop
add
cwtl
mov
ret
arpl
push
xchg
push
xchg
dec
inc
fsubl
jno
mov
cmp
jecxz
pop
test
xor
ljmp
daa
sbb
inc
mov
das
jp
imul
mov
xchg
fisttps
and
jne
andl
jl
jb
jmp
mov
xchg
rcrl
jb
lcall
popf
test
xchg
jb
arpl
push
ja
adc
and
cmp
sub
ja
xor
inc
push
xchg
fldcw
aam
loope
testl
pop
scas
data16
xchg
stos
mov
cmp
dec
cmp
hlt
sub
add
iret
mov
clc
hlt
adc
mov
mov
dec
or
cmc
inc
sbb
stc
sub
fdivs
jp
dec
cld
les
push
cmp
pusha
shlb
and
cltd
xor
mov
mov
mov
or
std
inc
mov
add
data16
dec
inc
sbb
pop
aaa
out
sub
sahf
xchg
cmp
fiaddl
push
mov
in
xchg
mov
outsb
jmp
iret
outsl
sbb
dec
dec
arpl
idivb
ret
add
shl
sar
inc
inc
or
jmp
cmp
add
jmp
imul
stc
and
mov
mull
in
jae
loope
xor
push
popa
cvtss2si
jae
push
enter
cld
push
loope
mov
xchg
hlt
scas
ljmp
hlt
and
pop
rcrl
stos
popa
jmp
fadd
mov
mov
jno
jmp
shlb
call
mov
jle
push
aad
jecxz
push
imul
stc
ss
outsb
out
or
push
jae
inc
mov
cmp
push
andb
push
pushf
fcmovb
and
pop
sti
jae
pop
mov
in
or
inc
fdivrl
inc
cmp
xchg
jns
nop
out
pop
fistps
dec
dec
sbbl
subl
into
xchg
dec
jo
outsb
xor
inc
mov
inc
scas
cmpsb
sub
addr16
inc
std
ror
push
xor
inc
jbe
andl
xchg
insl
outsl
stos
cwtl
movsb
jmp
xor
jb
xor
popa
imul
aam
std
in
mov
mov
in
scas
cmpsl
hlt
clc
sub
push
push
fldcw
loope
in
ret
fs
xchg
aas
mov
in
jecxz
andb
rcr
ficoml
cmp
xchg
mov
add
fsts
stos
mov
orb
cmp
leave
shl
push
jno
sbb
adc
adc
out
cmp
pop
loopne
and
nop
mov
dec
pop
add
out
mov
ds
sahf
cmpsl
scas
scas
push
adc
sub
int3
cld
out
xchg
das
sub
in
cmpsb
mov
pop
loopne
mov
mov
test
mov
arpl
cld
lods
int3
push
sbb
stc
loope
inc
leave
dec
mov
jne
adc
insb
test
jnp
or
sbb
sub
mov
and
test
cmc
js
fstl
inc
fwait
in
push
mov
or
jns
lock
xchg
adc
jecxz
jle
ror
pop
ret
sub
dec
js
add
std
out
xchg
add
sub
jno
lock
enter
or
xor
xchg
test
jg
inc
dec
scas
bound
mov
gs
test
or
ss
test
stos
mov
movb
mov
push
xchg
cmp
daa
mov
test
jp
test
outsb
out
xchg
in
inc
push
and
adc
out
cmp
mov
pop
je
mov
dec
jmp
in
sbb
jnp
sahf
mov
mov
sti
lods
fucomp
or
fcmovnb
popf
push
push
fsubr
and
sub
mov
je
lds
push
in
and
fdivr
dec
lods
sub
icebp
jo
xchg
mov
enter
sti
push
outsb
xor
sub
orl
sbbb
xchg
in
sarl
clc
dec
mov
jo
idivb
out
mov
xchg
jns
mov
dec
adc
lahf
ss
mov
jmp
jae
jecxz
movsb
gs
mov
cmpsl
xchg
push
mov
out
fidivs
icebp
arpl
add
pop
or
xchg
aad
test
ljmp
mov
mov
jno
out
sbb
push
fisttps
sub
cli
jo
or
les
or
je
jns
outsb
and
xor
xor
or
enter
mov
sti
lock
sub
popa
cmp
cmp
mov
insb
pop
paddq
lahf
scas
lods
ja
sbb
dec
repnz
xor
movsb
in
out
dec
rorl
icebp
mov
push
ja
pop
gs
es
mov
cmp
pop
inc
int3
cmp
fmull
shlb
jle
jle
popf
shr
adc
xchg
mov
cmc
popl
xor
adcb
aaa
stc
pop
iret
out
pop
fcmovbe
fmull
sbb
adc
sbb
arpl
dec
outsb
mov
enter
scas
sbb
incb
sti
xchg
orb
int
flds
popl
cmp
sbb
inc
addl
xchg
loop
xchg
pop
pop
xchg
xchg
imul
mov
pop
inc
or
out
test
das
push
leave
inc
out
hlt
cmp
shrl
inc
lret
adc
ja
js
adc
dec
fwait
mov
faddp
cs
add
test
mov
mov
jns
mov
cmp
cmc
mov
ss
xor
cmp
jbe
pop
int
popa
pusha
or
cli
fidivs
stos
pusha
pop
lret
loop
fnop
in
lcall
xor
and
ds
stc
mov
push
mov
pusha
sbb
fldcw
jmp
stc
sub
out
ja
add
mov
jp
push
and
or
pushf
lret
push
ret
push
cmpsb
mov
shlb
add
call
lret
inc
fsubrs
sti
call
mov
lret
mov
leave
shll
scas
xchg
scas
pop
push
or
add
add
mov
stos
ss
into
test
pop
adc
fsub
stos
jbe
leave
push
dec
xor
adc
sbb
sbb
lds
sahf
mov
cmp
repz
push
cmp
pop
push
ret
aaa
movsl
lret
jp
jmp
fs
je
icebp
add
push
mull
pop
dec
sub
orb
pop
dec
and
in
xlat
lds
js
sub
clc
dec
and
push
clc
sbb
xor
les
in
fsubl
test
pop
mov
aam
fisttps
in
nop
inc
adc
adc
cwtl
jecxz
idivl
cmp
outsb
int
pusha
rolb
add
ret
and
xchg
insb
jne
ret
xor
mov
xor
rcrb
push
add
push
fsubrl
mov
loop
adc
dec
out
sti
int3
gs
ljmp
or
jp
aam
dec
fisubs
add
frstor
test
dec
mov
push
dec
mov
rolb
sti
pusha
jecxz
call
mov
std
gs
clc
push
mov
mov
sbb
mov
mov
enter
pop
mov
mov
and
popa
and
aad
inc
loopne
bound
cld
mov
repz
xor
cmp
mov
test
fs
xlat
roll
daa
mov
jecxz
push
out
in
je
add
cwtl
mov
cmp
stc
cmp
inc
push
jne
lret
mov
xlat
pusha
imull
ret
jle
pop
int3
aam
pop
aad
loope
popf
mov
add
sub
mov
sti
jb
inc
hlt
jmp
inc
cs
push
or
into
das
mov
push
mov
in
out
adc
imul
adc
cmpsb
lret
mov
add
jno
dec
loop
pusha
into
sub
pop
out
incb
and
and
lcall
sbb
mov
cld
push
mov
out
pop
fs
addr16
cmp
bound
xor
adc
mov
xor
ret
clc
jnp
or
adc
movsb
mov
stos
cmc
stc
movsb
mov
sbb
mov
shlb
pop
or
push
lcall
movhps
jp
insb
pop
mov
adc
sbbb
mov
nop
movsb
loopne
sbb
sbb
and
ljmp
lds
sub
int
jns
in
lods
xchg
pop
cmp
jp
iret
xchg
mov
dec
add
icebp
adc
shrb
adc
mov
fdivrs
push
cmp
adc
inc
jbe
add
jne
push
xchg
push
cmp
test
mov
inc
pushf
test
daa
gs
xlat
pusha
or
mov
lret
xor
xchg
movsb
jg
fwait
mov
cwtl
icebp
dec
pop
orl
in
mov
or
inc
imul
add
sbb
xchg
sub
ja
int3
imul
add
idivb
mov
aad
shl
inc
mov
call
adc
lds
mov
aam
mov
cltd
xchg
pop
fnstcw
push
push
loope
insl
lret
call
inc
or
jmp
and
rolb
push
imul
sti
pop
jae
cwtl
lret
fs
pop
push
scas
sbb
nop
mov
lret
pop
fistl
xor
dec
mov
cmpsb
push
je
add
add
lahf
pop
dec
push
add
adc
jne
or
pushw
fistl
mov
or
cmp
xchg
push
xor
roll
sub
jne
or
mov
and
out
xor
jne
jl
sbb
pop
pop
mov
rcll
xor
add
jnp
mov
insb
pop
or
lcall
loop
sub
push
insl
adc
bnd
xchg
es
ret
and
mov
fadd
fwait
arpl
cmp
sbb
std
shl
ficoms
sub
add
scas
loope
sub
xchg
sub
push
push
cmp
jbe
rorl
lret
mov
xchg
dec
pop
into
dec
aaa
mov
mov
testb
pushf
in
out
incl
cmp
adcl
ds
roll
add
and
shrb
push
ss
lcall
push
jmp
dec
sti
scas
rcrl
sahf
mov
jle
fbstp
outsl
cmp
stc
mov
callw
hlt
sti
fsin
dec
dec
in
jge
sbb
test
out
adc
add
add
lret
test
xchg
adc
nop
pop
mov
addb
mov
push
shlb
xor
test
cmc
or
call
push
addr16
lret
adc
sahf
sbb
scas
or
pop
sbb
jl
push
mov
sub
mov
aam
popa
push
fistpl
xor
or
fsubrl
jecxz
mov
and
mov
fdivr
cli
ljmp
sub
pop
insb
data16
ljmp
sub
dec
dec
sbb
fwait
lea
loopne
lods
repz
push
repz
stc
mull
imul
push
scas
mov
in
lcall
insb
jns
cmpsb
loope
xor
fdiv
jecxz
xor
dec
loop
jle
push
sbb
sbb
add
je
jg
jno
cmp
mov
sub
mov
fnsave
and
add
lods
call
testb
sub
ret
out
mov
in
inc
rol
xor
mov
dec
shrb
mov
xchg
repnz
stc
dec
inc
in
push
push
imul
cli
adc
and
jl
mov
popf
imul
ja
inc
jnp
dec
push
pop
sub
xchg
pop
lahf
jmp
adc
test
shr
push
loopne
leave
sbb
iret
comiss
std
test
lods
stos
and
mov
imul
sub
mov
mov
push
mov
push
sub
dec
add
jp
and
jg
das
pop
enter
out
arpl
pushf
arpl
pushf
cmp
xor
data16
pop
in
repz
outsb
movsl
push
icebp
sub
cmp
add
test
push
mov
sub
inc
add
pop
jae
and
sub
add
lahf
std
in
decb
mov
adcl
std
adc
jns
jle
ljmp
push
scas
in
xchg
inc
xchg
jl
int3
mov
jo
xchg
sbb
sarb
adc
cld
mov
movsl
pop
mov
add
cmp
push
cmpsl
xchg
out
mov
xchg
loop
sub
ret
icebp
adc
shlb
test
test
sbb
pushf
xor
hlt
inc
loope
adc
xor
cmp
push
push
push
out
push
hlt
testl
shlb
mov
stos
cltd
jne
xor
mov
xchg
inc
mov
pop
frstor
popa
es
dec
pop
sub
es
mov
loope
movsl
cld
xchg
fstl
jle
test
xor
mov
fistps
mov
xlat
cld
stc
fsubrs
add
out
lea
or
mov
push
xlat
rclb
adc
lcall
sbb
fcmovne
dec
push
dec
inc
ret
out
cmpsb
jns
in
ret
sub
pop
push
das
pop
jg
and
mov
inc
jnp
mov
add
stos
sbbb
pop
imul
add
aad
xor
sbb
xor
xchg
rcl
push
xor
repnz
sub
jmp
jb
sbb
pop
jns
inc
push
rclb
jae
jne
lds
add
loopne
movsl
rolb
in
mov
iret
dec
push
cmp
mov
mov
xchg
inc
sub
aam
imul
test
rclb
pop
stos
sbb
pop
nop
test
adc
les
inc
adc
inc
nop
sbb
ret
xchg
ljmp
aad
lret
mov
jge
push
rol
frstor
in
outsl
adc
pop
addr16
ret
pop
test
cld
inc
jg
add
pop
mov
and
movsl
xchg
pop
movsb
push
call
je
loope
mov
sbb
shrl
pop
sbb
push
mov
push
push
push
lret
out
aam
sahf
stc
jmp
or
fldcw
pusha
mov
stos
out
pop
xor
roll
or
xor
pop
sub
sbb
dec
imul
cli
push
mov
pop
adc
into
sub
incl
sahf
sbb
insl
cmp
mov
push
pusha
xchg
cmc
loopne
test
cmpsb
dec
leave
cwtl
lahf
enter
cs
adc
les
lret
mov
and
pop
dec
sub
gs
lds
ja
mov
mov
or
ja
leave
mov
ljmp
iret
and
ret
dec
lret
mov
push
dec
xorb
xor
scas
lods
push
mov
sub
jg
adc
mov
hlt
jp
test
sub
outsl
mov
stos
ficoms
jb
roll
in
sti
sarl
lcall
push
xchg
mov
cmp
lret
hlt
push
out
test
mov
xchg
stc
adc
mov
adc
inc
mov
push
cltd
xchg
lods
pop
xor
incb
icebp
xchg
dec
lock
xor
jno
adc
cmp
cli
and
icebp
add
sub
mov
bound
push
or
adc
adc
daa
add
xchg
cmc
icebp
jne
mov
dec
ds
pusha
mov
xchg
stc
jae
or
xor
insb
idivb
test
push
int
or
inc
mov
ret
neg
xor
inc
scas
push
pop
ret
dec
daa
test
adc
out
insb
in
inc
adc
outsl
or
lfs
fwait
adc
sub
push
dec
fldcw
adc
outsl
loop
fnstenv
jmp
or
mov
ja
pop
je
mov
cmp
sti
sbb
mov
push
jo
jp
add
mov
xor
andb
pop
mov
stc
push
jb
mov
inc
lahf
jns
jmp
mov
lock
dec
das
adc
or
cltd
ds
js
sbb
mov
jl
dec
in
addb
push
sbb
push
in
in
sbb
jb
rclb
sub
inc
or
shl
std
push
dec
xor
mov
scas
cmpb
add
jmp
notb
push
sub
int3
lods
push
addl
xlat
mov
mov
cwtl
loopne
sbbb
cs
jae
in
test
adc
in
mov
movsl
mov
inc
cmpsl
xchg
out
jmp
or
scas
dec
adc
mov
addl
leave
lret
outsb
into
push
jmp
scas
ror
movsl
orb
jle
fisubs
xchg
xchg
mov
pop
mov
js
adc
adc
add
ds
in
ffree
cld
add
orb
enter
add
flds
mov
andb
pop
js
mov
pop
inc
pop
xor
divps
das
push
es
push
jp
inc
sbb
inc
cltd
jecxz
enter
push
cmp
mov
mov
jle
xchg
jb
push
jno
xor
leave
and
movsl
pop
jae
stos
sbb
cmp
dec
mov
or
jo
fucomi
jmp
addr16
pusha
pop
mov
inc
sbb
or
mov
ljmp
xchg
test
cwtl
stos
add
ds
cmpsl
enter
cmpb
je
subl
lock
ror
cmp
cmp
stc
dec
fidivs
sbb
hlt
outsb
fiaddl
out
dec
ds
inc
pop
data16
pop
sbbl
loop
outsb
push
into
daa
cmp
push
lret
pusha
nop
icebp
shr
fstpl
and
es
sbb
or
and
xchg
insl
mov
mov
inc
pop
int3
mov
loop
lock
or
inc
push
shll
mov
pop
mov
mov
sbb
es
out
mov
aas
es
pop
xchg
pop
jno
je
inc
dec
push
lds
std
mov
std
sub
mov
test
sbb
cltd
mov
mov
cld
mov
xchg
jecxz
adc
fcomps
lods
dec
lcall
xlat
mov
rolb
sbb
mov
inc
xchg
sbb
dec
icebp
cmp
jmp
int
lods
add
movsl
jp
subb
iret
mov
call
cmp
lsl
inc
cli
mov
xchg
mov
pop
es
mov
mov
test
fwait
fwait
or
push
and
js
imul
push
jnp
cltd
in
inc
int
and
adc
mov
dec
mov
test
sub
inc
aad
stos
sbb
ret
jbe
hlt
lock
movsl
push
popf
or
adc
fsubr
out
sbb
push
xor
scas
sbb
push
and
xchg
add
popa
xchg
mov
mov
lods
shrb
pop
jno
clc
lds
daa
insb
getsec
shlb
fisubl
cs
inc
add
call
nop
out
push
xchg
add
fidivrs
mov
mov
addr16
jge
fimuls
loope
outsl
test
jp
adcl
ja
pop
and
addr16
adcb
pop
fcmovnu
push
cmp
add
fsubrs
mov
mov
stc
push
pop
mov
ret
add
push
pop
jo
addr16
fistpll
pop
dec
dec
into
aas
push
cmc
negl
add
sbb
aas
sti
pop
ljmp
xor
push
int
dec
mov
ret
xchg
je
sbb
rsm
cwtl
jne
sar
mov
xor
xor
jns
pop
pop
inc
pop
push
ret
adc
mov
test
clc
sbb
inc
mov
sbb
sbb
int3
xchg
fsubrl
xor
mov
mov
and
inc
je
mov
ja
and
stos
in
je
ret
sub
in
imul
sbb
xchg
dec
nop
and
in
dec
push
in
pop
pushl
popa
push
jns
push
ret
xchg
fildll
adc
dec
xor
adc
mov
int3
loop
mov
mov
add
and
sub
scas
test
imul
or
je
js
mov
xchg
scas
push
add
icebp
loope
push
and
or
cld
fcomps
shll
push
add
sahf
push
jge
mov
pushf
lock
inc
bound
mov
fnstcw
ret
or
cltd
sub
xchg
push
or
and
es
in
jbe
pop
out
in
test
jmp
jmp
sbb
imul
das
jae
sti
insb
int3
in
clc
test
mov
out
pop
push
loope
add
std
lods
into
or
mov
pop
aad
cli
pop
cmp
inc
imul
dec
or
lods
in
jbe
fcmovnb
stos
pusha
adc
push
mov
pop
cli
xor
int3
push
scas
mov
or
mov
pushf
jb
iret
mov
int3
lcall
sub
cmc
test
aas
loope
jne
outsb
mov
jle
adc
clc
mov
fcomps
jp
or
sbb
mov
mov
inc
xchg
jns
pop
sbbb
rcrb
cmp
xchg
rcrb
lds
mov
gs
rcrb
pop
scas
mov
rol
cli
dec
sahf
sub
roll
xchg
sti
dec
test
jle
call
adc
jae
jno
jae
aas
and
push
push
loope
fists
mov
mov
je
fs
out
cmc
arpl
dec
xor
fstl
mov
or
in
inc
inc
scas
mov
fdivl
mov
cld
ficomps
inc
mov
jb
rclb
hlt
lret
gs
bound
push
arpl
pushf
or
cmp
add
aam
adc
sbb
jp
jl
loopne
inc
jo
mov
rcll
cmp
jo
popf
add
xor
repz
or
insl
mov
pavgw
div
and
cmp
outsb
gs
pusha
lea
movsl
icebp
adc
mov
mov
adc
push
ds
add
jmp
ljmp
jl
cli
in
aaa
fists
or
mov
cmpsl
repnz
add
or
out
dec
rclb
inc
jle
rorb
add
test
inc
jo
mov
lret
jg
jle
xor
push
fiaddl
inc
mov
jg
pop
mov
jge
mov
mov
cmpsb
pop
iret
movsl
cmp
sahf
sti
cs
cld
adc
jmp
mov
dec
adcb
push
add
adc
mov
mov
rorl
dec
add
mov
popf
lahf
outsl
adc
lcall
std
inc
das
fiaddl
stos
dec
inc
cs
and
dec
lea
lahf
mov
inc
and
in
int3
lods
cmp
xchg
jl,pn
adc
fcomps
mov
xor
andl
sbb
hlt
and
add
mov
fadds
cmp
mov
stos
shll
fdiv
cmp
mov
mov
lea
out
jmp
mov
ljmp
pop
shlb
ret
stos
ret
es
or
je
lds
fs
dec
mov
js
daa
sub
jge
mov
or
lret
or
jnp
scas
hlt
cld
fdivrp
mov
xchg
add
add
shlb
or
add
test
xor
out
enter
mov
mov
push
stos
inc
and
inc
mov
jmp
push
fdivs
push
repnz
xchg
add
enter
or
pop
mov
and
int
push
and
jmp
sbb
mov
mov
adc
stos
addr16
loopne
xor
in
lock
mov
xor
bound
jp
into
frstor
or
push
mov
xor
xor
pop
movsb
scas
scas
xlat
adc
punpckhwd
jae
test
loopne
add
test
xchg
fcmovu
ror
and
add
add
es
imul
cltd
fcoms
pop
leave
or
int
imul
dec
jbe
test
sbb
or
test
cwtl
cmc
push
dec
jecxz
inc
arpl
gs
inc
inc
inc
mov
mov
or
mov
repz
pop
jle
cwtl
xchg
enter
subl
pop
test
pop
push
xchg
mov
push
fsubl
fcmovb
je
stc
mov
test
mov
iret
enter
jbe
jo
dec
add
js
xor
lret
inc
icebp
and
dec
mov
sbb
sbb
push
sub
call
jle
xchg
das
adc
lret
inc
pusha
jbe
or
addr16
iret
jg
addr16
or
pop
lods
push
adc
and
sarb
add
mov
inc
mov
js
jnp
sti
out
cltd
sub
and
and
fstl
jae
push
ss
gs
mov
movsl
pop
jp
pop
push
xchg
sub
insl
cmp
dec
fcoms
dec
add
pop
lods
dec
sub
jb
and
test
and
fstpl
mov
pop
fwait
cmp
imul
inc
mov
aam
stos
inc
js
pop
push
push
loop
push
ret
ss
add
scas
jae
pop
lea
pop
mov
jns
push
cmp
mov
lds
nop
movsl
addr16
push
into
jbe
add
xchg
and
movsb
negb
adc
dec
aad
loopne
into
lret
pop
add
fbld
sbb
xchg
popa
out
push
stos
dec
xlat
movsl
jno
sbb
and
or
pusha
adc
cmp
mov
stos
mov
pop
test
cmpsl
pop
adc
and
sahf
pop
inc
inc
push
lahf
call
std
add
clc
mov
aam
and
into
push
sarb
arpl
stos
jl
xor
add
lock
mov
cmp
jnp
test
push
mov
xchg
xchg
fdivr
sbb
in
loope
shrb
adc
hlt
push
xor
popa
lods
mov
and
dec
add
mov
push
dec
out
out
mov
jnp
pop
jle
lds
add
insb
sarb
das
es
mov
pop
aaa
pop
in
dec
mov
stos
sub
jne
cld
sub
push
dec
xchg
xlat
sahf
pushf
pusha
outsl
adc
push
stc
mov
cmp
lods
dec
lret
movd
pop
push
stos
in
jbe
mov
xor
add
fwait
jnp
pop
out
pop
addr16
loope
stos
pop
add
pop
dec
test
sti
shl
enter
push
add
jns
out
mov
mov
sub
push
pop
arpl
or
mov
pcmpeqb
lock
dec
movsb
fists
jb
push
scas
nopl
inc
lds
pop
out
pop
jl
pop
sbb
into
mov
ret
add
cmpsl
pop
cld
and
ljmp
mov
out
iret
push
lods
xchg
std
mov
lahf
stos
das
xor
out
into
insl
mov
rolb
inc
pop
in
jnp
add
int
outsb
dec
movb
lock
in
sub
fwait
shll
int3
jg
es
lea
or
testb
jp
in
dec
cmpsb
sbb
mov
out
push
movsb
lods
gs
outsb
hlt
sub
in
inc
lret
imul
cwtl
shl
or
xor
xchg
xchg
sbb
lds
sbb
sbb
in
movsb
dec
adc
outsb
inc
jne
dec
test
mov
jl
negl
fidivrl
das
cmp
ss
or
xchg
xchg
and
sub
cwtl
xchg
pop
sub
add
pop
fdivs
insb
push
mov
push
sub
daa
mov
pop
xor
inc
dec
mov
sahf
inc
dec
mov
scas
xorb
gs
cmp
lods
mov
pop
lret
bswap
sbb
shll
jne
pushf
arpl
arpl
ret
sti
aaa
or
xor
mov
sbb
add
aam
in
dec
pop
mov
or
data16
dec
frstor
fwait
popa
ret
push
pop
sbb
fcoml
js
daa
stc
jne
int3
roll
pop
cltd
push
das
pop
in
ret
test
push
sbb
push
nop
scas
sub
or
in
pop
cmp
mov
addl
adc
or
mov
push
dec
xchg
xchg
jg
test
cmpsl
sbb
imul
daa
sub
xchg
push
inc
xor
xchg
bound
cli
fimull
je
sub
ret
sub
lock
ljmp
pop
lock
loopne
dec
dec
xchg
cmp
add
mov
xorl
add
ljmp
ror
jg
adc
xor
insb
pop
ja
loopne
sarl
push
jne
inc
sbb
pop
mov
cli
sbb
inc
push
xor
testl
leave
fstpl
dec
insl
cmc
mov
jno
or
sub
cmp
cmpsl
sbb
rcll
cli
and
inc
inc
xchg
inc
adc
mov
nop
lods
into
adc
test
push
rclb
mov
sbb
add
add
repz
or
adc
cmp
repnz
je
call
mov
leave
int
jno
stc
stc
mov
mov
repz
sbb
xor
dec
lods
bound
arpl
sbb
ss
outsl
shll
lret
divl
jno
pop
mov
sub
mov
aad
sahf
mov
pop
cmp
dec
jecxz
fimuls
mov
xchg
or
lds
inc
daa
bnd
mov
xor
dec
sub
xchg
cmp
sub
fidivrs
mov
dec
add
mov
fdivr
or
dec
xor
fcmove
je
sub
or
dec
push
les
mov
lret
ret
stc
dec
jecxz
les
mov
dec
fs
aad
lret
mov
nop
inc
sbb
mov
sub
loopne
in
inc
ja
jle
pop
add
adc
cmpsb
sbb
inc
push
adc
ret
xchg
pop
rorb
fnstcw
dec
ja
sbb
push
sbb
jmp
push
mov
cltd
shrb
or
or
js
test
fdivrl
cmpsl
cmp
scas
call
jecxz
iret
aaa
lods
inc
leave
cltd
fdivl
call
sbb
aas
js
sbb
add
xchg
js
cld
mov
xchg
cmp
mov
cmp
xor
jmp
orl
add
test
push
mov
add
xor
lret
and
cli
int
gs
popa
mov
xchg
int3
dec
rcll
dec
dec
mov
adc
or
push
jno
lds
ret
ss
shlb
adc
cmpsl
or
jecxz
sbb
dec
sbb
cmp
scas
loope
and
or
and
mov
cwtl
loop
inc
rcrb
pusha
jae
test
aas
jo
in
jmp
gs
mov
fsubrl
daa
xor
push
test
insl
jo
scas
jg
dec
icebp
cmp
pop
ss
shrb
push
mov
push
jp
xchg
sub
into
lods
ljmp
jp
ds
mov
jl
pop
xchg
mov
dec
jg
sub
inc
mov
jmp
mov
insl
or
pop
addl
and
mov
cld
pop
insb
out
xchg
loopne
or
add
daa
mov
push
pop
sub
arpl
test
mov
int3
mov
adc
jge
sub
push
mov
xchg
xchg
push
push
std
sub
lcall
ret
mov
inc
rcrl
jns
test
repz
shlb
adc
dec
dec
mov
pop
scas
jb
fiadds
add
lret
and
mov
inc
inc
ret
xchg
cmpsl
test
cld
int3
lods
mov
jne
sub
sub
jnp,pn
aam
lea
lods
or
jbe
or
jae
lods
sub
and
loope
leave
jle
test
in
insl
sub
add
pop
jg
jae
lods
mov
cmp
sub
stos
mov
xchg
es
addr16
sti
fsts
push
decb
jg
pop
in
cmp
pop
push
stos
xchg
xchg
cli
cmp
pop
loopne
dec
push
inc
shrl
cld
das
mov
and
push
je
cmp
and
mull
or
jae
out
mov
aad
sbb
dec
mov
pop
or
ss
mov
lods
cmpsb
push
and
xchg
jae
xchg
cmp
test
pop
fldt
inc
out
lods
sti
test
jb
loop
inc
cmp
xor
cltd
pushf
aam
imul
jae
ds
sub
sub
mov
jmp
pop
ljmp
negb
outsb
or
aas
cltd
add
adc
leave
cltd
cs
and
push
mov
mov
pop
or
dec
jle
sti
mov
cmc
push
cmc
push
jno
pop
mov
aam
fstpt
adc
add
dec
jo
and
jle
or
or
js
cmp
popa
pop
outsl
pop
ja
cwtl
mov
stos
fwait
mov
dec
cwtl
xchg
mov
xchg
adc
fidivrs
hlt
les
sub
pop
enter
fildl
aaa
add
dec
jg
int3
rcr
gs
mov
cli
js
fbstp
mov
testb
mov
repz
add
jbe
inc
es
in
in
cmp
jnp
nop
daa
aam
shll
cmp
and
mov
jo
cltd
push
sbb
mov
outsl
add
stos
sahf
pop
pop
cmp
adc
mov
and
jbe
push
cmp
repz
dec
int3
aaa
push
iret
xchg
cmc
cmp
dec
pusha
dec
pop
das
arpl
sahf
and
mov
dec
xchg
xor
xchg
xchg
mov
rol
push
jb
jecxz
cwtl
pushf
pop
ret
xor
icebp
ljmp
jbe
and
stc
outsb
das
flds
pop
ds
ret
push
fiaddl
mov
gs
cli
push
dec
lahf
or
pop
fwait
test
push
and
and
and
xor
leave
inc
jne
cmp
sbb
in
or
dec
arpl
lret
add
lret
xor
outsl
push
mov
push
xor
ret
push
fisubrl
mov
cmpl
jno
rcrl
rcrl
pop
and
push
addr16
int3
pop
mov
inc
into
inc
sub
test
ret
mov
and
aaa
push
sub
lahf
jmp
xchg
adc
dec
add
mov
in
mov
test
sbbl
pop
cmp
pusha
inc
add
cltd
push
cmp
cli
and
es
cmp
add
jns
sub
fnstsw
in
imul
bound
int3
dec
mov
xchg
loope
adc
mov
jnp
add
addr16
jmp
inc
das
cmp
fsubrs
test
xchg
xchg
outsl
daa
mov
sahf
cltd
leave
sti
mov
push
cwtl
push
and
jmp
movsl
push
lret
icebp
movsb
out
test
cs
fildll
xchg
or
ret
mov
jb
inc
xor
cmp
add
adc
xchg
mov
jle
and
lahf
sub
mov
dec
les
cs
fcoms
jo
mov
pop
aad
popa
je
rcll
out
mov
inc
pop
mov
mov
cli
mov
jecxz
ret
adc
dec
test
or
or
push
loop
imul
mov
out
xchg
push
andb
pop
add
mov
in
push
xorl
out
or
inc
jae
pushf
jae
es
mov
test
jmp
movsl
inc
lods
inc
jg
push
mov
aad
xchg
cli
outsl
pop
andl
sub
sarl
add
cmp
in
aad
addl
adc
icebp
icebp
adc
push
dec
cmp
jle
fistl
sarl
mov
or
lds
mov
aas
jmp
sbb
jnp
insl
dec
and
push
inc
and
sub
jecxz
push
ja
xor
pop
inc
dec
hlt
es
inc
addl
ljmp
xchg
and
arpl
dec
pop
test
lds
in
add
fsubs
int
mov
fildl
cmp
pop
nop
and
sbb
fnstsw
imul
mov
add
jne
jb
mov
mov
pop
insb
sar
pop
fidivrl
add
adc
xor
jle
imul
out
xchg
hlt
pushf
loope
dec
xchg
hlt
push
shlb
adc
cmp
cmc
cwtl
adc
roll
es
stos
mov
test
je
in
mov
out
popa
sarb
stc
add
sbb
subl
dec
lret
out
out
insl
jge
dec
add
fcmovu
movsl
jecxz
repz
cmpsb
pop
cmp
rcr
lret
inc
push
pop
lcall
add
mov
sub
jle
push
jae
imul
lret
iret
mov
or
mov
and
in
jno
lahf
in
cmp
dec
shll
mov
sbb
lcall
ljmp
popa
jae
sbb
and
sbb
out
push
mov
xchg
sbb
xor
and
daa
xlat
push
jp
inc
test
mov
push
xchg
bnd
and
add
xlat
inc
adc
inc
add
shlb
cwtl
sbb
xchg
test
repz
pop
ret
xor
imull
testb
cmp
icebp
data16
insl
pop
notl
or
dec
jno
sub
sbb
aaa
lcall
sbb
addb
mov
inc
dec
fistl
xor
in
dec
outsl
sbb
cmpsb
in
sbb
stos
jge
pop
fstpt
movsl
lcall
cli
in
jae
push
ret
and
xor
cwtl
pop
loop
js
imul
imul
mov
jae
xor
imul
xor
sub
add
xchg
fdivp
rcrb
jl
out
xlat
jmp
pop
push
hlt
test
not
repnz
rcrl
in
into
popf
movsb
rorl
inc
imul
jo
xchg
cmp
dec
fs
in
xchg
out
subb
arpl
and
push
mov
sub
push
fs
cmp
clc
dec
aas
jno
inc
jle
xchg
in
or
mov
cltd
add
push
xchg
pop
or
cmp
sub
movsl
fisttps
mov
sti
ret
mov
gs
aaa
dec
in
test
dec
adc
xchg
lret
inc
push
ficoml
mov
sbb
or
cmp
icebp
dec
gs
lret
push
jge
sbb
cs
cmc
andb
repnz
push
icebp
or
and
stos
std
testl
iret
cmp
jle
scas
dec
push
loop
mov
add
mov
and
xor
adc
xchg
mov
mov
adc
sub
sbb
mov
sbb
add
les
sbb
std
jle
movsb
out
and
gs
cmp
insl
inc
inc
sbb
mov
xchg
stos
sub
inc
test
push
sbb
or
shrl
sbb
inc
repz
dec
mov
leave
icebp
xchg
aad
mov
pop
cwtl
popaw
xchg
fsubrs
sbb
pop
sti
mov
arpl
push
ds
or
sub
fdivl
testb
int3
push
clc
inc
pop
dec
sarb
push
mov
push
dec
aaa
pop
loopne
lret
cmp
fcmovnb
dec
test
repnz
pop
cltd
cmpsl
fcmovne
adc
fbstp
sbb
pop
mov
dec
aam
add
push
mov
xlat
and
sub
mov
dec
pop
arpl
fiaddl
sar
mov
insb
push
xchg
jae
lahf
and
ret
jbe
addr16
add
fisttps
push
add
lret
les
insl
ja
int
lea
xchg
xchg
jnp
adc
mov
hlt
sub
and
scas
mov
clc
pop
jmp
pop
xor
ds
adcl
xchg
addr16
jo
in
ss
mov
clc
cmp
adc
movsl
xchg
sub
int3
sub
jae
cmp
sub
mov
push
mov
xor
cmp
xchg
insl
or
ds
mov
cmp
mov
insb
fnstcw
dec
add
and
add
and
mov
cmpsl
fistpll
add
fadd
xchg
pop
out
xor
adcl
cmpsb
test
adc
jle
lods
inc
xlat
xlat
sahf
lock
push
and
ss
mov
imul
into
or
mov
jmp
sbbl
push
cltd
sbb
cmp
fimuls
outsb
lds
xlat
push
cwtl
push
loopne
gs
push
sar
enter
cmp
movsl
cmpl
loop
ficoml
xchg
sarb
movsl
xchg
push
xchg
cmp
lret
jne
or
inc
pop
enter
dec
scas
mov
or
fbstp
shrl
push
imul
inc
js
cs
shr
inc
lcall
adc
push
lea
test
inc
pop
mov
insb
push
dec
xchg
jo
repnz
ret
and
ret
add
out
nop
adc
movsl
loope
cld
or
aaa
push
jg
push
jbe
sub
out
sub
data16
add
mov
xor
and
je
clc
mov
insb
add
cs
shlb
int3
adc
push
movsb
lea
icebp
mov
scas
outsl
sahf
push
in
test
xchg
xor
gs
test
jne
mov
clc
bound
into
xchg
push
popf
sti
out
and
popf
mov
arpl
arpl
data16
cld
lds
es
aaa
lea
imul
mov
fwait
cmc
test
fcmovbe
mov
jmp
adc
sub
jns,pt
out
or
jl
xor
je
orl
sbb
insl
pop
cmp
daa
mov
pop
xor
pop
mul
repz
xor
sbb
push
es
dec
add
fsts
jo
sub
sbb
das
or
sub
in
out
mov
mov
sahf
cmp
push
gs
add
insb
cmp
pop
add
ja,pt
fldt
outsb
adcl
loope
jno
fs
push
loop
add
mov
out
fbstp
mov
ss
pop
nop
push
in
or
shll
fs
pusha
data16
push
inc
testb
xchg
jns
ret
pop
stc
inc
jns
addr16
or
in
jl
pushf
dec
gs
mov
rdtsc
xchg
les
cmp
fcompl
int3
loope,pt
test
pushf
add
sbb
or
xor
and
enter
mov
jecxz
sbb
pushf
out
iret
in
aaa
push
mov
jmp
test
call
stc
das
mov
push
sub
jp
sub
mov
push
push
dec
sbb
aaa
pop
lahf
scas
enter
add
int3
xchg
inc
aaa
out
add
xor
cld
loopne
dec
xor
cmpsl
xor
sbb
imul
lret
data16
call
xor
mov
repz
negb
dec
fnstenv
add
jns
ds
jle
inc
or
fistl
shll
sub
scas
test
testb
jge
arpl
and
fs
xor
shr
mov
adc
imul
scas
test
jo,pn
cwtl
mov
aam
loopne
mov
sub
stc
frstor
dec
loope
mov
adc
and
outsl
add
or
adc
push
orb
leave
out
leave
shlb
mov
cmpsl
cmpsb
les
mov
or
cmp
pop
dec
cmpsl
shlb
lret
jge
cld
xor
rcr
sub
push
sbb
cmp
fdivr
inc
hlt
add
sarl
lcall
jbe
lcall
mov
and
movb
and
enter
daa
inc
push
dec
stos
dec
divl
push
repnz
and
sbbl
lret
std
enter
std
push
data16
pop
sbb
push
xor
mov
xor
out
cli
push
ret
adc
es
or
jbe
sahf
add
gs
out
adc
fsubl
push
adc
push
mov
popa
mov
mov
inc
adcl
loope
incl
dec
aaa
popa
xchg
mov
lret
mov
add
cmp
add
mov
sbb
scas
push
out
lret
dec
je
xchg
iret
adc
jae
jno
jl
daa
fcompp
pop
loope
jle
iret
jge
xor
add
in
sub
push
fdivrl
inc
call
mov
push
add
inc
sub
test
repnz
notb
xchg
pop
or
scas
in
testb
inc
or
xorb
in
jle
xchg
mov
cs
popf
aaa
jb
filds
out
int3
xor
sub
adc
xchg
jmp
mov
xlat
sbb
inc
add
call
mov
dec
inc
std
shl
add
into
loopne
push
repnz
loope
mov
sbb
mov
mov
or
dec
scas
insb
daa
dec
jmp
push
sbb
dec
dec
fwait
sbb
xchg
jbe
fadd
and
lods
pop
divl
mov
pushf
cmp
inc
das
xchg
mov
sbb
jmp
out
push
mov
adc
lcall
adcb
neg
lea
mov
incb
pop
rorb
mov
inc
add
xchg
ret
addr16
stos
rcrl
cwtl
xor
into
call
iret
xlat
push
fnsave
movsl
lods
test
ljmp
cmpb
cmpl
sub
out
idiv
cmc
inc
repz
ret
jecxz
lds
or
and
movsb
mov
orl
lock
insl
add
jbe
xor
popa
push
sti
pop
cmpb
pushf
push
aas
xchg
leave
aad
mov
out
inc
cltd
pusha
cltd
scas
and
sbb
imulb
jo
push
push
sub
dec
sahf
jae
sbb
or
rorl
sbb
push
lret
add
or
pop
mov
dec
jb
enter
cmpsb
mov
sbb
loope
out
jae
sbb
push
mov
lods
cmc
xlat
push
inc
xchg
es
clc
dec
ds
pop
cli
and
daa
pop
mov
hlt
cmpsb
xor
adc
mov
stc
adc
and
ds
ljmp
sub
sbb
mov
pop
mov
xchg
imul
jl
push
add
les
pop
in
inc
push
and
jno
cs
jne
xchg
dec
mov
iret
xchg
out
arpl
pop
lock
adcl
int
sbb
pop
int
aas
and
int3
dec
test
popf
ret
sub
scas
shrl
pop
mov
or
push
adc
pop
lds
lods
outsl
mull
movsl
mov
adc
add
mov
in
xchg
add
aam
and
in
mov
push
or
or
sbb
ja
and
stc
enter
jae
mov
sbb
fstp
imul
xchg
je
nop
sub
push
jp
push
sbb
shlb
in
xlat
sbb
or
and
mov
test
xchg
mov
nop
cwtl
jb
push
daa
icebp
mov
mov
arpl
repnz
jmp
je
subl
cli
stos
in
movsb
adc
mov
fsubp
adc
repnz
arpl
xor
lret
jecxz
add
push
cs
insb
adc
aas
outsl
lret
or
xchg
push
xchg
pop
sub
push
rorl
mov
inc
jno
cmpsb
cmp
orl
rcrl
xchg
pushf
xor
or
add
std
inc
xchg
repnz
adc
movsb
scas
or
mov
add
jle
test
in
push
xchg
mov
in
xchg
fnstenv
jnp
or
xchg
shlb
jnp
push
jmp
test
ret
dec
mov
inc
sub
inc
pop
mov
push
es
fimuls
pushf
fsubl
loope
cmp
add
leave
je
mov
mov
lock
repz
addr16
lret
lock
out
push
lock
xor
dec
ret
stos
in
mov
sub
xor
and
or
inc
stc
scas
lods
adc
loop
cmpsb
adc
push
fsubr
xlat
out
push
jge
inc
std
jg
mov
dec
adc
notl
mov
add
push
scas
mov
insb
roll
mov
mov
lea
mov
mov
mov
jb
add
in
call
clc
push
fimuls
inc
dec
cmp
cmp
scas
pop
out
push
shrl
cltd
idivl
int3
inc
and
outsl
jae
arpl
cmpsl
mov
movsl
js
js
add
cmpsl
js
insl
jecxz
rcll
cld
lods
pop
push
pop
pushf
dec
mov
add
jmp
push
or
jne
mov
mov
cmpsl
ret
pop
bound
lods
push
or
pop
nop
ss
sbb
imul
xor
les
lret
pushf
jecxz
mov
jmp
jae
push
push
cmpsb
pop
xor
jae
dec
mov
or
pop
mov
push
adc
mov
mov
hlt
mov
les
push
test
xor
sbb
ret
bnd
push
por
sbb
lret
mov
dec
in
std
ret
sbb
fistps
cld
stos
pop
pop
mov
daa
sbb
popf
xchg
push
xchg
mov
jecxz
fdivr
pushf
push
jmp
ljmp
je
mulb
adc
lcall
lds
and
push
xchg
xchg
movsb
dec
adc
aas
movsb
sub
sub
rol
mov
add
jle
and
mov
or
faddl
jno
imul
insl
jmp
push
sub
fs
out
hlt
rol
inc
adc
pop
sbb
pushf
pop
cwtl
cs
adc
jno
cmp
mov
aaa
adc
or
cmp
and
out
addr16
in
adc
push
xchg
xchg
add
sub
dec
arpl
pop
imul
lods
rcrb
jge
sub
ret
sahf
mov
sbb
pop
ja
xlat
idiv
push
push
rcrb
or
push
or
loop
xlat
rcll
add
push
out
test
push
mov
push
xlat
scas
xor
inc
je
jl
pop
out
dec
adc
or
data16
xor
mov
dec
lcall
jg
push
out
fldenv
add
shll
mov
inc
jmp
xor
in
hlt
into
sub
notb
cwtl
int3
out
push
call
mov
gs
inc
dec
mov
lret
dec
adc
stos
ret
xchg
add
addl
adc
pop
and
sbb
pop
aas
mov
clc
xor
fcoml
xchg
ss
nop
add
out
push
in
int
cmpsb
mov
jecxz
jns
aad
xchg
clc
xor
nop
dec
inc
push
inc
mov
mov
sbb
pushf
mov
ljmp
pop
mov
dec
pop
cltd
test
repnz
pop
xor
or
dec
sub
inc
add
movq
push
sub
in
fwait
mov
orl
mov
insb
loopne
outsl
or
out
adc
bound
scas
and
movsl
roll
dec
imulb
add
cltd
jp
outsl
jp
jmp
aas
dec
cs
sub
add
rclb
mov
das
sub
pop
arpl
int
in
xchg
ss
loopne
xchg
xchg
xchg
insl
sbb
popf
ret
enter
inc
xlat
fsubrl
int
jmp
ret
pop
and
sub
and
data16
enter
dec
mov
push
lods
insl
add
pop
ret
cmp
lods
out
fdivs
mov
pop
xlat
ja
mov
arpl
rcr
push
clc
and
lret
jbe
bound
xor
dec
xchg
iret
sti
xchg
ds
les
cmpsl
addr16
in
insb
stos
aad
xchg
in
outsb
mov
pop
and
inc
out
sub
mov
aam
jmp
aad
push
sbb
push
insl
dec
loope
inc
mov
add
xchg
popf
or
cwtl
mov
cmp
fstpt
sahf
dec
xchg
xchg
push
sbb
lea
shl
jmp
rorb
mov
jne
sbb
gs
nop
ja
sub
jae
mov
flds
push
shll
mov
adc
mov
push
js
lods
test
scas
fimuls
fwait
sarb
movsl
lahf
push
testl
lcall
xchg
pushf
pop
cmp
jbe
sti
and
xchg
cltd
mov
xchg
adc
xor
inc
in
fisubrl
push
push
mov
aam
fisttpl
cmpsb
jno
call
cltd
ja
push
scas
int
pop
or
test
add
lahf
fstpt
mov
mov
sti
js
push
icebp
mov
ljmp
out
or
rcl
jbe
out
sub
push
movsl
mov
inc
xchg
adc
jb
jae
ret
icebp
add
ds
movsl
add
lss
cltd
lea
scas
in
out
push
mov
cs
inc
in
test
jb
mov
sbb
push
je
fs
dec
push
scas
lea
aas
repnz
mov
out
imul
hlt
sub
ds
mov
xor
add
lods
and
and
test
push
fldl
inc
lret
jnp
add
bound
test
out
dec
aad
loope
jge
sub
ljmp
mov
popf
sbb
pop
xchg
mov
or
enter
mov
loopne
mov
fidivrs
xchg
les
mov
pop
xlat
sub
mov
in
dec
push
inc
andb
clc
fstps
sahf
push
fdivl
aam
jo
pop
cmp
clc
and
ljmp
int3
stos
mov
fists
fcmove
shll
jp
mov
inc
rcr
ds
xchg
or
stos
mov
cmc
fidivrl
cmp
data16
mull
push
cmc
les
adc
cmp
ljmp
ret
dec
adc
xor
xchg
jmp
mov
fs
andb
mov
inc
nop
sbb
loopne
mov
dec
push
add
movsl
daa
adc
ficoms
or
js
push
sub
jp
xchg
lods
pop
xchg
in
mov
add
gs
xor
pusha
mov
sub
mov
xchg
scas
rorb
or
or
add
adc
mov
and
sbb
push
add
jns,pt
add
mov
pushw
cmpsl
push
out
fsub
or
mov
or
jecxz
arpl
jns
mov
cmp
stc
cmp
repnz
or
in
push
or
jns
enter
sbb
popa
shll
movsb
call
idivb
mov
pusha
lds
bound
inc
sub
mov
pushf
and
js
insb
scas
sti
xor
and
lods
inc
das
mov
push
add
fbld
mov
push
leave
out
pop
xor
cmp
bnd
test
rol
sub
js
inc
test
jmp
and
fstpt
and
fisubrl
addr16
je
xchg
pop
out
cwtl
loop
pusha
cli
xor
push
adc
cltd
push
dec
ds
dec
fistpll
cmc
or
and
imul
pushf
in
or
shlb
inc
push
int3
ds
mov
lcall
iret
in
mov
or
jno
outsb
push
cmpsb
in
orb
arpl
call
dec
xchg
incl
shl
test
mov
arpl
cwtl
out
repz
lret
mov
xor
pop
fucomip
mov
fneni(8087
loop
pop
jge
loopne
cmpsl
fildll
out
jl
mov
lahf
sbb
pop
jnp
mov
inc
lahf
subl
cwtl
int3
imul
adc
cmpsb
mov
sub
test
mov
pushf
push
test
and
fimull
sbb
push
jl
stc
mov
sbb
or
cmp
xchg
mov
jnp
int3
mov
or
lret
xchg
and
adc
inc
addb
mov
dec
mul
setae
mov
mov
xchg
add
int3
pop
jge
xor
lahf
loop
fidivrl
test
das
pop
lods
imul
std
daa
iret
pop
and
mov
lock
jo
sbb
lret
pusha
aam
cmpsl
addr16
lock
bound
cmc
inc
pop
jne
jl
cmp
sti
call
ja
mov
xchg
push
shl
or
pushf
mov
xchg
mov
and
sbb
mov
mov
pop
add
adc
stos
iret
push
out
xchg
mov
mov
pop
loop
int
cs
lods
icebp
daa
mov
inc
repnz
dec
cwtl
test
mov
mov
adc
stos
adc
push
or
push
mov
dec
xchg
xchg
sahf
dec
ret
fimuls
iret
mov
pop
xchg
int3
mov
dec
cmp
dec
sbb
sub
adcb
out
rcr
adc
aad
add
shlb
dec
sub
push
jae
pushf
sub
sbb
cmp
push
pop
lcall
mov
cmp
push
cwtl
repz
jne
mov
sbb
xchg
add
lret
jbe
push
lret
loopne
add
inc
dec
lods
xchg
mov
pushf
sahf
jnp
sahf
cmp
dec
push
out
jl
mov
push
mov
mov
mov
shrl
test
mov
xchg
notb
jl
add
ffreep
pop
cwtl
je
in
sub
shr
in
shll
and
adc
cmp
pop
xchg
mov
dec
jno
xor
pop
fistpll
mov
jecxz
fistpl
pop
adc
push
ja
rorb
inc
xlat
xchg
sbb
movsl
and
and
pop
or
arpl
leave
jb
push
mov
inc
sbb
push
les
mov
and
adc
push
jg
js
pop
mov
mov
mov
xchg
add
shrb
pop
insb
inc
call
les
push
mov
inc
stos
xor
fdiv
dec
cmp
jns
test
ret
xchg
inc
xor
mov
aaa
loop
and
mov
outsl
je
test
loope
sahf
test
inc
popf
mov
xchg
inc
scas
mov
fcoml
inc
xor
xchg
jne
and
out
out
jns
je
cltd
aam
shrl
jnp
lods
jno
leave
mov
add
push
dec
lea
push
pop
adc
je
pop
mov
sub
mov
push
popf
rorl
adc
shlb
push
dec
addr16
stc
cld
adc
push
adc
mov
cmc
pusha
jl
sbb
notb
sbb
inc
jo
fldenv
mov
ret
jp
jnp
xor
inc
div
mov
cmp
test
mov
aad
lods
insb
ljmp
rolb
lock
sbb
cltd
sub
mov
add
imul
mov
jl
aaa
xor
jno
in
fcmovu
lds
nop
or
lahf
pop
dec
sbb
sbb
jo
mov
stc
lods
xchg
mov
xor
cmp
mov
jo
shll
leave
fidivs
mov
lods
cmp
ljmp
dec
bound
add
stos
scas
test
int3
sub
int
adc
iret
pop
pop
int
mov
lret
aad
or
imul
mov
jecxz
cld
jle
push
add
lods
cmc
jnp
xor
pusha
stos
lods
sbb
inc
push
xchg
popf
mov
call
add
jp
inc
aad
int3
lock
data16
incl
adc
adc
mov
fs
and
neg
mov
aas
ficoms
lock
or
testb
push
bound
mov
stos
mov
loope
lahf
xlat
pop
negl
lret
mov
xchg
push
sub
imul
lahf
gs
inc
aas
sub
xchg
pop
sbb
pop
pmuludq
push
jne
movsb
xchg
lock
xchg
sbb
jno
pushf
fs
pop
mov
xchg
stos
inc
cmc
int3
ss
cmp
jns
sub
sbb
xchg
call
iret
mov
popf
sbb
ja
into
addb
lds
stc
popa
push
xor
lcall
jb
int
adcb
repz
mov
loop
and
mov
idivl
cld
pop
js
cmp
jp
push
dec
mov
fstps
adc
jnp
sub
xchg
in
dec
fs
push
mov
mov
push
jecxz
mov
mov
cmp
push
cli
cmp
inc
movsl
std
fildll
or
cmc
bound
xorl
push
jb
dec
mov
and
in
mov
ds
xchg
push
movb
sbb
cmp
fldt
mov
enter
fcmovbe
mov
fwait
orl
cmc
or
or
xchg
push
pushf
mov
push
or
inc
lods
jl
push
xchg
es
push
xchg
iret
movsl
mov
lahf
sbb
icebp
pop
mov
adc
stos
cmpsl
or
sbb
jae
fcompp
lcall
jg
sarl
mov
imul
push
nop
mov
mov
icebp
aad
sub
in
sub
outsl
pop
pop
leave
cmp
cli
cmp
mov
mov
jae
aaa
xchg
aad
xchg
and
sbb
sbb
inc
std
add
sbb
daa
push
repnz
iret
icebp
push
or
hlt
push
jp
mov
aam
cmp
movsb
add
cld
scas
jp
loope
xor
mov
pop
inc
adc
std
enter
add
fcmovnu
and
jcxz
nop
cltd
loopne
adc
and
cmp
or
int
mov
adc
lahf
mov
or
roll
popa
dec
fwait
hlt
pop
sahf
dec
or
movsl
imul
mov
pop
adc
xor
fdivl
jp
lds
fists
jg
inc
pop
rcl
mov
js
sbb
ret
jae
gs
or
adcl
jg
gs
add
fmuls
push
add
pop
je
inc
inc
jae
out
cmp
lds
pop
cmc
and
movsl
test
mov
push
punpckhdq
out
and
cwtl
mov
iret
jle
lahf
add
mov
dec
inc
jl
icebp
mov
je
and
pop
sbb
rcll
lds
hlt
push
dec
and
push
dec
jo
rcrl
rcrl
pop
mov
pushf
lods
scas
xor
je
push
sbb
pop
adcl
ret
cmp
and
test
pop
ret
movsb
rol
aam
cmc
mov
mov
dec
int3
xchg
popa
xchg
das
leave
into
and
mov
inc
clc
sahf
push
imul
pop
movsl
jns
cmp
or
icebp
test
fists
ret
inc
mov
mov
xor
push
push
sbb
or
jge
shll
xchg
mov
cli
cltd
add
negl
mov
bound
gs
dec
outsb
add
popl
sarb
js
or
loopne
and
inc
xor
icebp
dec
push
or
dec
ljmp
xor
xchg
or
and
gs
push
pop
push
sbb
mov
mov
add
sub
cmpsb
mov
xlat
sbb
mov
nop
lock
add
xchg
icebp
data16
xchg
inc
ret
stc
repnz
add
adc
mov
adc
stos
sbb
push
add
and
pop
hlt
sub
inc
sub
cmp
decb
mov
xchg
je
push
int3
loop
ljmp
test
pop
xlat
fsubrp
adc
sarl
inc
and
or
lods
ds
pop
adc
mov
jmp
mov
and
jns
loope
scas
roll
dec
lods
sti
test
inc
cmp
or
ljmp
sbb
jnp
pop
cld
cmp
cmpsb
mov
xchg
lret
sbb
fildl
pop
ficompl
mov
dec
mov
mov
mov
popa
sbb
je
call
dec
lret
loopne
rclb
sbb
sahf
aaa
movl
loope
in
insl
adc
sub
jns
add
test
add
adc
aam
idivl
in
pop
cli
push
fmuls
rorb
inc
mov
call
cmp
add
xor
push
outsl
cmpsb
jbe
bound
idiv
or
insl
in
out
leave
neg
inc
jmp
fisubl
mov
xchg
sbb
pop
push
fnstsw
stos
jg
lret
mov
add
in
jge
movsl
mov
popa
mov
hlt
push
arpl
cwtl
jae
push
call
sarb
or
pop
mov
pusha
and
stos
sti
xlat
jae
or
out
inc
test
or
dec
cmc
test
and
fnstenv
adc
jle
and
clc
mov
inc
cmpsb
sbb
dec
out
loop
xor
daa
jmp
mov
in
cs
outsb
orb
gs
and
inc
das
dec
out
jo
inc
scas
sub
xor
sbb
outsb
cmp
jo
push
out
out
lret
test
sbb
roll
lret
push
xor
movb
ficompl
ss
mov
imul
shl
in
inc
pop
sub
lods
nop
push
clc
adc
mov
jmp
or
adc
mov
out
lcall
pop
xor
int3
ret
mov
push
imul
xchg
fsubl
xorb
mov
in
mov
jp
add
pop
mov
xchg
int3
push
outsl
add
orb
fnsave
stc
aas
sbb
sbb
pop
xchg
lcall
and
pop
add
rcrl
pop
and
bound
sbb
sbb
xor
ja
or
jle
mov
imul
add
mov
jb
push
test
sub
pop
aas
imul
test
fxch
aam
lcall
xchg
fabs
inc
jecxz
pop
int
aaa
pop
lret
push
in
out
and
je
or
mov
and
rorl
nop
mov
mov
mov
faddl
xor
lcall
lods
cmp
sub
out
jae
rclb
out
cld
aas
xchg
fs
enter
adc
in
mov
dec
push
xor
lret
sub
incl
popl
aam
frstor
inc
pop
mov
sub
scas
andb
outsl
pushf
jecxz
xchg
clc
psubsb
iret
or
dec
out
stc
cmpl
cli
pop
xor
out
mov
aad
loop
sahf
fiadds
ret
or
lods
and
bound
faddl
xchg
dec
mov
push
pusha
xlat
add
inc
jg
movl
mov
sub
rorl
in
xor
ret
es
mov
test
cltd
or
lds
push
xchg
inc
xchg
pop
shl
xor
adc
loopne
xor
mov
scas
aad
jno
push
inc
test
inc
repnz
jnp
jo
push
xchg
lds
dec
jmp
push
pop
mov
add
jge
pop
cs
xor
mov
inc
cmpsb
push
or
jae
mov
clc
push
pop
dec
aad
cmp
rcll
stos
fmuls
ret
jb
adc
int
enter
orb
cli
add
sbb
in
hlt
xchg
sar
cmpsl
dec
in
lret
sub
cmp
les
lret
xlat
fcoms
pop
mov
sbb
mov
outsl
fstpt
cmp
es
push
call
cld
add
aad
sub
andl
xor
sub
xchg
xchg
pusha
daa
lret
push
sbb
pusha
inc
cld
in
stc
add
dec
pop
mov
xchg
lret
das
enter
mov
push
shll
push
dec
les
add
sar
in
movsl
xor
pop
aaa
xchg
ret
cmc
sti
lods
sbbl
sub
ror
stc
mov
inc
push
pop
fcompl
mov
pop
cmp
mov
mov
ljmp
add
jno
and
insb
inc
jle
lret
popf
push
fsubr
mov
fists
and
mov
push
pop
mov
xchg
xchg
test
mov
cmpsl
mov
jb
aad
fidivs
lcall
xor
jne
pop
xor
scas
push
push
imul
cltd
lods
or
sbb
xor
jg
jne
or
ljmp
mov
flds
gs
push
sub
clc
sbb
pop
adc
pop
pusha
jb
inc
and
cmp
jo
dec
test
call
stos
frstor
mov
push
xchg
pop
push
and
jg
push
ret
imul
int3
lret
and
aam
fnstcw
dec
cwtl
rorb
push
or
daa
out
cmpsb
cwtl
and
ret
jne
ljmp
das
fwait
outsb
push
inc
mov
stos
or
sub
out
data16
cltd
mov
xor
aad
fcmovb
pop
addl
out
out
sub
mov
mov
aad
sbb
push
cmp
xor
mov
pop
mov
dec
es
dec
xchg
mov
in
sar
ds
hlt
push
cltd
xchg
xlat
arpl
add
rclb
pop
lret
popf
sub
xchg
add
js
lcall
mov
stc
pop
addr16
fcoml
mov
cwtl
mov
std
mov
rcrb
iret
xchg
dec
adc
daa
arpl
xchg
xor
loope
lock
cmp
jne
inc
aam
xor
or
mov
adc
mov
mov
das
cmc
aad
dec
faddl
push
or
mov
sahf
bnd
repz
jns
mov
aad
jmp
pop
data16
push
dec
sbb
xchg
push
cmp
sbb
xchg
cmc
cmpsl
imul
or
lret
cmpsl
adc
jg
loop
in
mov
or
fs
xor
mov
push
sub
into
lea
lods
jg
es
sbb
mov
sub
adc
in
dec
test
adc
jge
rclb
insl
pusha
xorl
mov
cmp
loop
mov
lcall
dec
sbb
cmp
dec
call
fs
scas
jae
cmp
xchg
cmc
leave
pop
jne
xchg
mov
andb
sub
loope
pop
shrl
push
dec
into
xor
sub
jl
sub
aad
lock
inc
shr
or
mov
mov
add
jnp
rcr
add
mov
cmp
inc
pop
mov
lock
enter
ret
dec
jnp
out
xchg
imul
ret
mov
jno
xchg
jg
xchg
dec
out
fnstsw
sub
out
sahf
jle
lahf
inc
jns
cmp
push
push
push
imul
xchg
push
arpl
pop
lods
rcll
cmp
rcll
cmpsb
cld
dec
testb
or
mov
js
jl
fdivrs
mov
dec
add
push
push
sbb
jnp
in
xchg
sbb
cmp
mov
cwtl
inc
xor
xor
in
sbb
mov
cmp
pop
imul
movsl
mov
inc
in
nop
jp
cltd
call
push
push
xchg
sarb
and
dec
mov
int3
inc
dec
mov
mov
jo
xchg
loopne
adc
insb
popl
sbb
adc
and
mov
daa
arpl
insl
std
and
jno
push
mov
pop
jbe
pop
sahf
cli
add
jl
cmp
sbb
push
addl
mov
push
test
xor
imul
sbb
xchg
popa
pop
sbb
cmp
into
mov
push
daa
nop
int
xor
in
ret
in
and
sub
aam
adc
fs
xor
or
insb
fistpl
adc
xchg
popa
in
nop
add
fsubs
in
mov
jbe
jle
cltd
fcoml
stos
sub
sub
icebp
xchg
lods
mov
dec
pop
dec
pushf
sub
and
pop
lret
or
aas
jl
rol
push
ret
mov
in
pop
push
xor
or
sbb
pop
xchg
xchg
cli
arpl
or
and
sbb
test
mov
jg
mov
mov
jg
push
add
mov
and
add
scas
ficoms
flds
ret
movsb
mov
mov
mov
adc
adc
mov
aaa
sub
dec
xchg
pop
cmp
pusha
mov
test
mov
imul
nop
int3
loope
rorl
movl
and
stos
stc
ljmp
cwtl
xor
jb
jno
jb
push
roll
nop
loopne
pop
push
push
or
push
mov
push
mov
sbb
fistpll
fadd
lret
adc
add
repnz
jnp
mov
jo
and
scas
inc
sbb
popf
add
bound
push
inc
and
pusha
mov
lea
and
mov
adc
inc
lods
lret
add
lea
negb
pop
mov
fidivs
push
mov
jl
push
rorb
add
dec
push
loopne
sbb
push
push
arpl
add
nop
fcoml
lds
jno
fs
mov
mov
pop
lahf
fwait
outsb
sub
push
pop
arpl
test
xlat
xor
ja
lahf
lock
xor
ss
fcom
and
xchg
adc
movsb
sbb
mov
gs
lahf
rorl
adc
aaa
push
sub
sbb
jae
repz
mov
mov
sub
es
aaa
outsb
mov
leave
sub
out
scas
aas
call
mov
mov
inc
jnp
addr16
nop
ret
movsb
repz
rorb
add
int3
sub
push
aad
add
jmp
push
rcr
cmpsb
das
xchg
int
push
adc
sbb
jecxz
push
ret
and
lret
xchg
fwait
jae
sbb
or
lock
cmp
add
jp
fnstcw
adc
ja
rcrl
cmp
imul
mov
lods
inc
inc
xor
test
jp
ljmp
in
call
imul
es
movsb
stos
mov
sbb
mov
outsb
jecxz
inc
sbb
out
inc
dec
fwait
dec
mov
pop
clc
shll
out
inc
and
mov
jno
mov
jg
imul
or
jg
test
int3
dec
inc
inc
xchg
inc
and
aam
in
pop
xchg
mov
jp
movsl
les
pop
fsubrl
xor
decb
insl
lcall
jno
cmc
addr16
push
mov
ja
jge
adc
aas
lret
xchg
pop
cmp
scas
mov
outsb
jo
pop
shlb
mov
enter
test
push
lock
pushf
fwait
dec
rcl
out
jmp
ja
jecxz
cld
mov
mov
mov
adc
imul
cmp
jp
inc
rcr
pop
jge
or
jl
imul
stos
stc
xchg
xlat
and
imul
xchg
fdivrl
add
jle
mov
or
xchg
aaa
js
xchg
stc
outsl
es
pop
and
push
adc
mov
scas
pop
jbe
fisubrl
cli
mov
sbb
lods
cmp
fwait
jbe
cmp
mov
inc
rcll
test
outsl
mov
shlb
or
jb
into
jbe
dec
sbb
push
jg
inc
mov
mov
mov
out
jb
mov
shlb
lds
add
and
adc
pop
inc
push
out
out
das
and
inc
inc
dec
xlat
mov
pop
sbbl
cmp
fidivrs
pop
rcll
xor
shlb
xchg
imulb
sbb
repnz
cmp
popa
stc
je
aaa
sti
lahf
lret
mov
jp
mov
nop
sahf
in
mov
ja
mov
jae
popf
pusha
sub
xchg
jecxz
lea
pop
rclb
cli
adc
loopne
mov
xor
mov
js
pop
cwtl
out
cmp
inc
mov
gs
inc
aad
add
test
mov
aas
jb
xorb
mov
cmp
mov
pop
push
sub
cmpsl
pushf
call
fsubrl
mov
dec
xor
mov
mov
xor
lcall
pop
test
xor
cmp
stc
shll
ss
inc
ds
mov
rcrb
mov
mov
lds
cwtl
adc
mov
shrl
xlat
and
cwtl
add
mov
or
add
inc
mov
stos
pop
adc
test
fisubrl
inc
orl
adc
test
inc
cs
mov
adc
cmpsl
xchg
mov
pop
lcall
or
in
jae
lahf
addl
xchg
aad
pushl
cmp
xchg
jo
and
out
xor
test
sahf
sti
inc
xor
jmp
push
lds
in
or
jecxz
inc
cmp
sbb
dec
mov
sbb
sub
push
leave
sahf
aam
lcall
icebp
dec
cli
subl
jns
outsb
pop
jl
iret
mov
out
push
dec
pop
lea
bound
xchg
and
mov
pop
aad
add
inc
jmp
xchg
lea
shrl
test
cmp
and
sub
push
cmp
adc
bound
loopne
adc
repz
push
test
mov
and
dec
inc
xlat
mov
aam
sbb
pop
mov
sbb
mov
inc
test
loopne
xor
add
pushf
mov
push
push
mov
int
xchg
icebp
mov
sub
pop
dec
pop
mov
mov
sub
or
adc
adcb
insl
lahf
sub
lret
adcb
cmp
ja
pop
mov
jbe
or
sti
push
sub
mov
sahf
dec
shrl
fsubrs
mov
dec
mov
arpl
dec
int3
add
mov
bound
push
in
mov
fcmovnbe
hlt
xor
stos
push
dec
xchg
shll
movsb
mov
ss
adc
stos
sbb
xchg
call
xlat
push
lods
mov
fsubl
out
mov
cmp
in
xchg
jp
insl
rolb
mov
test
cmpsl
lret
jns
popa
cmc
repnz
out
fdivrs
loopne
pop
jmp
out
xchg
and
call
mov
dec
fmuls
out
add
lock
aas
lea
push
data16
cmc
gs
stos
loope
call
fucomip
lods
and
jecxz
xor
mov
loopne
jecxz
adc
push
dec
push
add
frstor
je
pushf
rcll
imul
inc
data16
xchg
mov
pop
movsl
push
add
addl
jl
lods
mov
sub
dec
cmp
stos
pop
pop
xchg
or
cmovae
jo
jge
sbb
inc
jle
testb
or
mov
rcll
fistpll
push
in
cmp
xor
je
stc
jle
in
sub
add
imul
lock
data16
mov
sbb
add
add
fsubrs
xchg
lret
int
int3
shll
inc
mov
test
outsb
adc
cmp
add
pop
dec
or
xor
mov
xor
fwait
mov
jnp
push
ja
push
dec
fucomip
imul
or
es
sbb
int3
pusha
or
xor
sub
adc
clc
push
sbb
sarb
and
or
fldenv
mov
sarl
mulb
and
pop
bound
rclb
aaa
bound
out
mov
aad
pusha
adc
sbb
btr
rolb
jno
aad
in
fdivrp
cmp
hlt
push
xlat
dec
fdivrp
xchg
mov
mov
outsb
in
fnstenv
in
inc
fisubl
pop
test
jg
mov
mov
jb
lret
pusha
rolb
xchg
dec
xchg
sbb
mov
rclb
js
cwtl
in
jmp
fimuls
push
data16
lcall
mov
xchg
sar
mov
mov
xchg
cmp
stos
mov
out
pop
int
push
gs
int
jmp
test
imul
mov
lods
jecxz
cmp
pop
push
jg
push
jecxz
gs
inc
imul
mov
pop
mov
divb
gs
lods
sahf
clc
xor
mov
sub
push
mov
movsb
fmul
xchg
mov
mov
pop
or
sbb
mov
pop
scas
mov
cwtl
addr16
xlat
push
inc
pop
xchg
lds
in
outsb
pop
arpl
xor
loope
jno
fs
adc
outsl
mov
mov
lcall
add
fisubrl
jmp
cmpsb
popa
repnz
sbb
xchg
imul
aad
mov
in
clc
imul
push
das
call
add
test
xlat
repnz
test
stos
loope
into
lds
sti
mov
or
ret
push
and
jge
adcl
xchg
aam
stos
pop
push
icebp
das
mov
int3
dec
aad
push
xlat
mulb
in
inc
jns
sub
mov
popf
xchg
test
add
enter
and
pop
hlt
adc
pop
leave
jno
inc
loopnew
mov
xchg
or
ret
int
inc
cltd
mov
fs
xor
lcall
repz
and
and
outsb
sub
std
ror
dec
jnp
mov
out
or
jbe
std
jno
mov
repnz
mov
jmp
stos
xor
out
ss
not
mov
xor
push
push
xor
pop
icebp
jae
xlat
ficoms
cmp
mov
arpl
mov
test
cli
enter
and
pushf
in
xor
xchg
jnp
jmp
mov
shrb
faddl
divl
mov
jecxz
mov
sub
sbb
jl
xchg
repnz
test
leave
fld
pop
mov
pushf
enter
or
inc
dec
pop
js
lock
gs
xor
push
xchg
popa
jns
subb
pushf
cmp
mov
jge
adc
out
xchg
cmp
imul
in
fcmovnb
iret
fprem
fs
ja
inc
or
jns
mov
dec
loop
out
lea
xchg
push
test
jge
out
movsl
adc
sbb
clc
cmp
mov
dec
filds
ret
int3
xchg
and
add
roll
inc
lret
lret
mov
in
inc
lods
cld
dec
dec
xchg
xchg
inc
icebp
ja
fcompl
arpl
xchg
int3
pop
mov
fimull
xchg
aad
sub
jl
fiaddl
jne
or
push
jne
sbb
add
cmp
andl
sbb
sbb
pusha
pop
pop
call
divl
jno
out
stc
jl
mov
pop
cmp
sbb
mov
enter
subb
sbb
push
fisubl
cwtl
xlat
cli
frstor
test
lret
repnz
icebp
cmp
out
sbb
mov
or
fwait
ja
cmpsb
int
test
gs
pop
jp
xchg
or
cltd
scas
push
jmp
jl
adc
dec
jae
mov
cmp
sbb
xchg
or
cmp
sti
mov
js
add
jns
lock
jge
jp
dec
loopne
push
sbb
jle
jl
imull
icebp
scas
dec
test
inc
lods
cmc
cmp
clc
cltd
adcl
popa
jecxz
or
lods
xchg
sbb
dec
shrd
rolb
mov
cltd
xor
sub
sub
iret
lods
icebp
dec
rol
dec
cmc
int
mov
sub
mov
pusha
ret
insl
or
rorl
mov
dec
sub
adc
iret
mov
xor
fisttpl
push
fnsave
mov
xchg
add
clc
jl
je
ss
mov
out
xor
lea
xchg
bound
fidivl
inc
lahf
in
mov
stc
bound
in
fisubl
std
xchg
cli
mov
test
test
test
insl
mov
outsl
and
rcll
in
cmp
scas
in
push
in
or
adc
mov
repz
mov
stos
aam
test
mov
pop
out
mov
es
add
aas
mov
or
aam
sbb
jne
test
xchg
xchg
hlt
xchg
dec
in
lds
push
lcall
xchg
mov
sbb
mov
mov
hlt
adc
pop
inc
add
pop
sub
mov
imul
adc
jb
inc
dec
mov
dec
dec
mov
push
je
sub
or
jbe
inc
mov
adc
mov
mov
aad
out
jle
and
std
jecxz
fistl
xor
pop
fld
xor
test
mov
cmp
aaa
sbb
mov
and
stc
jbe
ljmp
les
rcll
popa
lret
std
sbb
cltd
loop
xchg
imul
mov
clc
inc
mov
ret
gs
shlb
cltd
scas
xchg
daa
fsubs
xor
data16
mov
pusha
mov
jb
lods
nop
lahf
daa
sub
push
insl
sarl
pop
stc
cmp
les
fisubl
mov
mov
hlt
bound
movsb
pop
mov
push
std
jmp
lock
leave
pop
pop
addr16
sahf
jbe
out
popf
inc
call
aad
cwtl
in
loope
stos
adcb
mov
mov
out
lea
mov
pusha
jnp
push
movsl
imul
in
test
xor
sub
addb
dec
dec
mov
cmpsb
lret
loope
and
xor
or
jl
mov
sub
mov
shll
add
test
inc
fbld
push
fbstp
xchg
cmp
notl
cmp
xchg
lods
fistpl
cltd
inc
in
mov
repnz
iret
mov
scas
stc
arpl
mov
insl
push
dec
mov
mov
aam
loop
lahf
jp
sbb
mov
mov
pop
mov
call
movsl
dec
dec
jp
jno
push
dec
into
into
fimuls
xchg
mov
xor
xchg
mov
xchg
scas
jecxz
mov
les
dec
decb
mov
and
ror
sub
sbb
jae
mov
outsb
repz
cltd
lds
or
mov
sbbb
jl
jle
fsub
cmp
ror
jns
sub
mov
mov
stc
or
jmp
js
lods
add
mov
loop
mov
jae
sub
ret
add
test
dec
mov
push
and
fdivrs
loop,pn
pop
call
rol
cld
pushf
jge
xchg
pop
cmc
mov
rcrb
nop
mov
mov
shlb
fldt
add
xchg
jnp
rcrl
fnstsw
gs
mov
xchg
mov
mov
dec
das
ja
push
push
cwtl
lret
cmp
subb
out
lahf
test
imul
stos
or
pop
sbb
add
dec
lds
inc
icebp
roll
shrl
mov
daa
lea
sbb
lods
imul
xchg
xchg
out
lods
sahf
mov
ret
fnsave
cwtl
loop
or
jo
cmc
out
sbb
popa
and
mov
mov
push
pushf
sub
in
pop
fsub
mul
sbb
push
add
leave
imul
mov
orb
sahf
push
pop
sbb
push
cmp
mov
outsb
cmpsl
jns
jmp
push
and
sbb
mul
mov
hlt
jle
in
jb
hlt
fldl
add
adc
cld
out
icebp
test
sub
push
sub
jp
scas
xchg
icebp
add
adc
jo
adc
bnd
push
ljmp
es
lock
add
int
pop
arpl
out
jo
mov
iret
int
insb
cmp
push
lds
sbb
xchg
call
mov
ret
adc
inc
lahf
mov
adc
mov
push
stos
sbb
popf
sub
jne
mov
in
xor
mov
repnz
cld
mov
pop
je
mov
mov
popf
cs
imul
fsubp
cmp
fldt
stos
icebp
jo
jno
in
mov
xchg
aaa
sub
mov
aam
pop
inc
repz
adc
rclb
mov
roll
fildll
icebp
cmp
pushl
out
cmp
or
mov
enter
jg
xchg
repnz
out
fisubl
outsl
aam
das
outsb
fsubrp
inc
std
push
and
and
in
daa
iret
icebp
jb
sbb
xor
pop
iret
jb
sub
dec
dec
mov
lods
cs
loopne
pop
cmp
popf
cwtl
or
ljmp
mov
xchg
ss
test
mov
push
fcompl
sbb
popa
mov
mov
sub
inc
jp
mov
pop
fs
ret
rolb
add
mov
add
push
fs
popf
pop
daa
mov
jo
cs
push
mov
ja
adc
subb
mov
ja
mov
and
push
arpl
pop
sub
in
daa
push
test
ret
das
mov
mov
cmp
cmc
test
xchg
or
push
in
mov
mov
mov
add
adc
in
in
fisttpll
add
ja
push
or
inc
hlt
push
std
and
lahf
mov
cmpsb
sbb
or
orl
popf
adc
and
sbb
aas
mov
mov
cs
cmp
in
xor
fsubs
dec
mov
ret
or
push
inc
data16
stc
enter
and
add
insb
adc
or
or
daa
mov
pushf
jo
fldl
pop
notl
call
fadd
mov
sbb
mov
xor
and
jp
add
insb
sbb
sub
std
mov
sbb
jae
mov
insb
sbb
xchg
cmp
jmp
and
xchg
lret
pop
push
xchg
push
and
xor
loope
movntq
out
or
insl
aaa
xlat
fs
xor
mov
outsl
pop
mov
sbb
ds
push
cmc
imul
jno
stos
push
cmp
movsl
test
lds
jno
aas
pop
xchg
cmp
rolb
mov
mov
sbbl
jne
shll
or
iret
jg
inc
outsl
or
xor
orl
cmp
inc
pop
xchg
sbb
lcall
lds
insl
pusha
repnz
in
rcrb
sub
in
adc
aam
rcl
int
mov
loop
popf
pop
sbb
push
mov
loopne
mov
jo
push
pop
mov
mov
adc
cs
mov
sub
repnz
das
in
andb
mov
sub
iret
pop
stos
mov
popf
mov
and
leave
test
add
ds
sub
push
sbbl
jg
jge
nop
cmc
mov
sub
mov
out
popa
sub
pop
insl
add
iret
xchg
call
sbb
xor
inc
push
xchg
adc
movsl
mov
xor
sbb
cmc
xor
adc
and
clc
nop
pop
and
mov
mov
dec
jae
dec
lds
mov
push
dec
dec
inc
push
roll
in
cmp
outsb
push
outsl
inc
dec
lods
test
ljmp
mov
aas
call
popa
aas
ret
cld
pop
add
pushf
stos
fbstp
icebp
pop
mov
lcall
cld
imul
lret
les
pop
inc
movsb
shlb
sbb
icebp
loopne
push
mov
inc
pop
add
mov
outsb
imul
mov
mov
mov
test
and
cmp
add
jle
sub
stc
cltd
jecxz
fsts
add
mov
stc
sub
int
stos
jmp
vmovdqa
fldl
lcall
and
aaa
cmp
inc
or
pop
adc
mov
out
push
repnz
lock
sbb
cmp
test
loop
jae
push
mov
add
les
jae
adc
jbe
push
jle
mov
aaa
psubusb
inc
and
add
mov
push
mov
loopne
shr
rclb
dec
aas
dec
insb
out
sbb
clc
cmp
push
ljmp
inc
shrl
dec
addr16
int3
in
sub
inc
xor
sbb
test
subl
xchg
in
sahf
cmp
xchg
leave
xchg
xchg
mov
pusha
lret
cs
add
mul
mov
mov
adc
add
sbb
or
imul
imul
cmp
loop
sbb
outsb
fimull
jecxz
mov
dec
test
jo
adc
mov
fcoms
jne
or
insb
pop
pusha
cmp
cwtl
mov
mov
xor
mulb
ja
adc
ret
inc
js
testb
call
jns
fwait
pop
rorb
shlb
jg
pop
mov
adc
cwtl
mov
pop
cmp
dec
add
add
cmp
add
adc
loopne
enter
push
push
sahf
adc
stos
jp
pop
jmp
or
jo
notb
dec
sub
add
cwtl
data16
ret
xor
imul
mov
in
int3
push
cmp
inc
scas
call
add
sub
scas
add
push
sbb
lahf
adc
push
xor
and
pop
les
jne
pop
cs
inc
mov
arpl
dec
add
test
arpl
aaa
imul
aam
pop
rcrb
push
mov
and
mov
mov
pop
jno
mov
jl
push
lea
cltd
inc
test
adc
iret
sbb
cld
mov
rcr
aam
jae
dec
xor
fwait
in
push
and
hlt
rorl
or
inc
insb
add
xchg
fistpll
es
cmp
mov
pop
adc
dec
xor
lahf
cmp
sbb
test
je
orb
dec
xlat
cmp
pop
shll
inc
mov
call
inc
rcll
cmp
pop
out
pop
xlat
cmp
imul
or
adc
fdivrp
jge
push
mov
rolb
cs
fs
jle
and
in
push
ror
scas
cs
mov
pusha
mov
aas
ret
push
pop
ror
xor
outsl
mov
add
push
cs
popf
jnp
pop
out
int
outsl
sbb
stos
lret
dec
sub
adc
int
sbbb
addr16
insb
add
add
iret
xchg
mov
sarb
ljmp
int
ljmp
daa
inc
push
inc
lret
mov
test
mov
int
push
ds
push
dec
popf
xchg
dec
add
sbb
cmp
int
into
or
int3
ret
xchg
in
rcrb
xchg
mov
shl
pop
push
cmpsl
lret
movsl
inc
pushf
outsb
sti
fnsave
fistps
push
ljmp
xchg
xor
fldt
test
pop
aas
cmpsl
les
jecxz
enter
xchg
lahf
cmp
addb
mov
jl
fs
inc
or
lds
mov
lret
add
cli
xchg
stos
inc
hlt
xor
lods
push
push
or
outsl
iret
bound
cmp
or
adc
andnps
push
push
jne
pop
mov
jl
mov
cmp
mov
fwait
repz
dec
popa
xor
dec
out
aam
imul
mov
or
gs
insl
fwait
icebp
scas
mov
pop
ljmp
cmpsb
mov
fimuls
sbbb
ds
dec
lock
ds
adc
jp
ss
pop
sbb
and
jbe
sbb
cltd
mov
sub
jle
addb
daa
cmp
xor
mov
movsl
loope
into
xor
cltd
bound
sub
cmp
xchg
ret
mov
lret
pop
add
out
leave
adc
mov
or
sahf
cmp
sub
lcall
jb
lea
push
leave
repnz
sbb
push
mov
mov
stc
cmpsb
sub
jnp
mov
icebp
pop
inc
xchg
dec
or
out
sub
out
dec
punpckhbw
cmp
ret
out
inc
fisubs
ja
in
adc
mov
jecxz
inc
add
scas
das
pusha
mov
test
bound
ret
fadds
mov
jmp
scas
rorb
clc
cmp
push
sub
pop
xor
scas
rcl
pop
neg
test
mov
pop
es
push
das
mov
dec
out
sub
mov
mov
int3
cmp
xor
add
push
ja
sbbl
dec
je
les
sbb
loop
jne
sbb
push
icebp
dec
insl
stos
mov
mov
inc
jns
jns
mov
repz
mov
xor
pushf
cmp
enter
cltd
inc
xchg
push
les
call
mov
nop
pop
cli
imul
bound
clc
pop
jne
mov
or
ret
les
cmp
loopne
push
push
rcrl
pop
and
push
mov
xor
ljmp
adc
shrb
push
mov
jae
adc
pop
in
inc
jnp
or
cmp
adc
cmp
sub
jl
or
jecxz
sbb
repnz
fs
mov
and
outsb
mov
mulb
jns
sbb
in
hlt
adc
jl
push
into
lret
xor
outsb
dec
loope
mov
cmpsl
pushf
dec
int
outsl
lret
fisttpl
arpl
outsl
mov
mov
xor
inc
sbb
sbb
inc
ljmp
mov
mov
into
aad
ljmp
movsl
or
sbb
shll
in
mov
gs
movsl
out
int
mov
pushf
cmp
cltd
movsl
insb
ficomps
sub
dec
add
pop
jmp
pop
mov
shrl
enter
mov
push
incb
jmp
fcom
jecxz
stc
insb
ja
in
call
in
mov
jb
test
es
xor
mov
xor
jmp
fs
pop
cltd
cmp
in
insb
mov
out
xchg
int
out
cmp
aad
mov
loope
fimuls
mov
mov
xchg
stos
ret
ret
lcall
dec
ret
jmp
fwait
jp
popa
mov
push
loopne
test
icebp
out
jecxz
add
lahf
sbbl
jae
dec
gs
shrl
mov
repnz
push
pop
push
out
outsl
dec
mov
or
cmpsb
pop
adc
pop
push
jno
or
testb
cmp
mov
cmp
fisttps
outsl
sub
mov
push
fwait
lock
cmpl
addr16
dec
lcall
repnz
repz
fwait
adc
xchg
ljmp
add
pop
call
je
insb
mov
in
mov
fnstenv
nop
dec
mov
in
sbb
movsl
jecxz
pop
add
sub
lea
inc
ds
or
insb
adc
mov
repz
sbb
imul
xchg
add
sbb
adc
jno
out
andb
rcll
cmp
repz
jae
fsts
jne
xor
xchg
push
mov
sti
pop
jge
adc
sarb
stc
rcr
xchg
inc
mov
adc
sbb
es
cmp
xorl
call
mov
lret
and
jl
gs
lret
clc
aam
mov
jns
adc
and
inc
push
inc
push
je
lock
xchg
hlt
mov
xchg
outsl
push
shlb
dec
cmc
loop
inc
jae
push
pop
daa
fsub
stc
pusha
mov
dec
jge
pop
fcomi
out
mov
push
xchg
addb
das
fcoms
inc
and
stc
test
and
gs
mov
iret
adc
mov
jns
out
imul
add
idiv
arpl
sub
loope
cmp
hlt
jno
pop
mov
cmpsl
lods
adc
cmp
outsl
mov
pop
data16
test
out
int
and
push
lahf
mov
inc
and
cs
int3
loope
cli
int
ret
pushf
adc
iret
and
pop
and
inc
cmpsb
inc
mov
sbbb
xor
mov
hlt
mov
push
imul
test
ja
sub
sub
sub
dec
dec
sarb
mov
loope
in
lock
mov
and
loopne
out
cmp
xchg
sbbl
xorl
jb
push
pop
leave
dec
dec
xor
push
inc
and
arpl
inc
mov
dec
lret
mov
int
je
mov
add
je
sti
sbbb
mov
dec
shll
dec
shr
inc
mov
fsubs
orl
lods
test
cmp
imul
sub
rorl
xchg
sarl
jp
xor
lahf
mov
shlb
nop
xchg
arpl
sub
data16
js
adc
xchg
into
aad
icebp
inc
xchg
push
stc
cmp
clc
mov
loope
mov
lea
ja
lock
mov
leave
fucomip
clc
and
cmp
dec
xchg
mov
and
loopne
fwait
mov
fwait
dec
sti
in
int3
iret
fcomp
mov
mov
push
inc
es
inc
shl
movsl
xchg
lret
push
add
subb
lods
fs
rcrb
xor
adc
inc
pop
sub
xor
loop
scas
pop
jge
addr16
lock
fistpll
in
push
adc
cs
pop
inc
andb
je
testl
lea
loopne
call
dec
or
cmp
mov
sbb
in
push
jae,pt
xchg
xlat
out
out
sub
add
sbb
fistpl
int3
shrb
lea
jmp
jl
std
aam
jp
dec
adc
jl
stos
stos
fcmovnbe
daa
es
addl
punpckhwd
mov
in
clc
vpcomq
pop
vunpcklps
into
sti
mov
adc
sub
adcb
aaa
loope
in
xlat
addl
pop
pop
jle
popf
pop
daa
sbb
inc
mov
add
xadd
pop
adc
push
nop
in
cli
sbb
or
push
xchg
sbb
xor
imul
mov
in
mov
aas
pop
fwait
bound
rol
sub
test
mov
lcall
mov
add
stc
xor
scas
clc
sub
mov
aaa
xchg
dec
frstor
pop
push
movsl
add
in
sbb
adc
imul
iret
js
jns
push
mov
fs
cmpl
sub
out
pop
mov
cmp
clc
pop
subl
in
movsb
add
ds
test
jecxz
adc
xor
add
call
mov
jbe
ret
adc
pop
pop
cmp
sar
in
dec
icebp
test
loope
imul
sub
leave
arpl
mov
push
pop
es
jg
pop
mov
mov
repnz
lods
sbb
pop
mov
cwtl
dec
adc
mov
and
cmc
outsl
call
icebp
push
dec
call
mov
and
scas
cmc
cmpsb
test
add
dec
mov
lret
push
sarb
pushf
roll
pop
mov
adc
mov
movsl
je
js
mov
movsl
je
dec
jge
cmp
and
jae
pop
popf
mov
cmpsl
lods
and
jle,pt
or
mov
jo
mov
test
and
dec
js
aaa
push
cmpsb
push
xlat
and
movsb
sti
mov
insb
inc
in
xchg
adc
ffreep
mov
add
rclb
or
cmpb
lods
add
orb
nop
fstps
adc
jno
cmp
sbb
mov
enter
and
fstl
hlt
mov
test
or
dec
fdivl
cmp
jno
lods
inc
sbb
xlat
out
or
add
repnz
xchg
jbe
insl
push
pop
lret
cmp
jae
icebp
imul
jbe
daa
movsl
int
sbb
cli
andb
popa
imul
testb
or
push
inc
inc
ds
xchg
nop
sub
pusha
popa
std
mov
add
aad
mov
cmpsl
push
jp
push
imul
and
mov
outsb
cld
icebp
in
mov
push
pop
dec
js
add
sbb
ret
sbb
mov
test
dec
push
into
stos
dec
xor
dec
add
xchg
int3
stos
ret
lods
add
stos
lret
adc
aam
dec
sub
aas
imul
push
xchg
xor
divb
sbb
jb
rcrb
ja
mov
notb
mov
add
sbb
jge
cltd
popf
inc
dec
push
nop
push
mov
shl
mov
roll
mov
sbb
fldenv
add
cld
sbb
adc
scas
cmpsl
xchg
mov
imul
cmpsl
cld
xor
cld
lock
adcl
cmp
mov
negb
es
movsl
mov
push
sub
xchg
sub
pushf
aad
mov
aas
leave
hlt
in
adc
sbb
fdivrs
inc
mov
dec
pop
out
scas
das
mov
mov
nop
xor
ss
dec
jge
mov
inc
or
insl
es
cli
movsb
cmp
les
jns
add
jo
idivb
fwait
mov
stc
pop
cmpsl
pushw
repz
push
jle
lock
insb
lahf
lods
and
cmp
jl
sub
lods
lahf
cmp
sub
icebp
mov
xorb
mov
pop
xchg
scas
leave
pusha
shl
cmp
es
stos
dec
xchg
fmuls
out
mov
xchg
sbb
cmp
ljmp
push
jno
inc
mov
add
in
add
sub
addr16
in
pop
cmp
pop
mov
or
push
cmp
imul
dec
int
mov
xor
pop
imull
cld
add
out
sbb
or
adc
imul
in
int
jge
mov
jnp
jbe
mov
inc
or
int
cwtl
push
xchg
aaa
jmp
leave
int3
inc
cmp
loopne
sbb
cs
scas
mov
sub
or
scas
dec
call
ljmp
jg
hlt
testb
fsubs
fdiv
mov
iret
out
mov
je
pop
pop
inc
mov
popf
leave
or
xchg
mov
arpl
test
and
mov
jnp
lcall
loopne
arpl
or
mov
insl
fildl
scas
sbb
jne
lock
mov
je
jns
pushf
push
jp
mov
xchg
pop
in
add
and
cmpsl
jmp
push
xor
fmul
dec
lret
ja
movsb
fdivs
aas
je
nop
cmpsl
fwait
xorb
xlat
fwait
and
sarl
pop
dec
push
ficoms
int3
fdivl
das
add
cmpsl
gs
pop
jae
pop
adc
ret
sbb
jo
add
das
mov
mov
inc
dec
rol
jae
in
mov
lods
aam
mov
in
inc
xchg
out
in
lret
and
xchg
ljmp
pop
shll
dec
pop
loope
test
mov
or
dec
cld
mov
into
imul
test
cmp
adc
ffreep
aaa
sbb
hlt
pop
lret
mov
in
cmp
idiv
adc
and
mov
in
cmp
aas
lahf
mov
pop
adc
mov
addr16
jns
adc
test
ss
xchg
cmc
pushf
sbb
popa
pushf
sub
test
aaa
adc
cmp
and
push
js
jg
xor
icebp
inc
and
ss
or
xchg
mov
sub
dec
or
je
imul
cltd
push
sub
addr16
adc
jne
jb
jbe
xchg
jecxz
data16
cmpsb
mov
ljmp
test
int
adc
mov
xchg
ffree
shl
sub
test
aaa
push
aam
adc
add
push
pop
leave
inc
mov
mov
mov
movsb
mov
dec
mov
or
xchg
pusha
fldenv
cs
nop
pop
push
xchg
dec
lahf
outsl
call
inc
push
add
cli
loop
sub
cmp
popa
pop
inc
jmp
test
in
sbb
mov
or
fldcw
push
sub
negb
test
or
out
stos
xchg
mov
jp
adc
mov
ds
push
pop
in
ss
add
cmp
inc
push
xor
stos
xor
rcrb
xchg
xchg
ds
out
imul
cli
repnz
jae
push
outsl
shlb
mov
and
loopne
loop
sbb
jg
ja
xor
hlt
loopne
fidivl
or
mov
pop
jno
dec
sahf
mov
push
lea
cmc
hlt
adc
ss
dec
sar
or
stos
pop
hlt
xchg
or
fcomps
and
adc
out
cmp
cmp
jns
mov
out
inc
popf
out
js
fldt
sbb
insb
push
lahf
mov
mov
lahf
daa
shr
lret
test
and
mov
pop
data16
stos
push
iret
cwtl
inc
push
fdiv
adc
fdivrl
test
jbe
test
repz
dec
sbb
sahf
aad
mov
aam
ja
inc
cwtl
xor
into
cmc
rcrl
fucomp
je
test
ficoms
je
testl
stc
imul
rclb
inc
sub
pop
in
and
dec
data16
clc
push
loop
stos
enter
or
push
jno
fdivl
testb
sbbl
adc
insb
or
dec
cltd
std
pop
pop
pop
test
xchg
xchg
orb
mov
sub
sbb
xchg
mov
jg
out
xchg
in
mov
stos
inc
add
mov
and
xor
mov
sbb
mov
adc
js
dec
fistpll
push
xchg
mov
or
fwait
sbb
mov
dec
or
out
in
loope
fsubrs
dec
call
dec
inc
xorb
pop
mov
dec
negb
lret
push
inc
clc
adc
sub
and
mov
lret
mov
xchg
push
adc
mov
bnd
jmp
adc
cs
dec
cwtl
leave
mov
scas
cs
push
imul
mov
lret
mov
scas
subb
add
shlb
scas
xchg
insb
and
scas
mov
jp
int3
mov
test
fbstp
je
inc
sub
sub
popa
stos
clc
shlb
xchg
movsb
mov
push
mov
fidivs
xorb
ds
mov
sub
push
xor
push
sbb
sub
rclb
cmp
pop
dec
jbe
inc
add
leave
mov
test
jbe
pushf
test
dec
cmp
roll
pop
andb
mov
sahf
cwtl
pusha
mov
mov
outsb
ljmp
lcall
stc
xchg
jp
adc
mov
cmp
inc
in
xchg
std
fcompl
and
aaa
push
test
cmp
test
call
rclb
and
adc
adc
lds
adc
jmp
arpl
push
xor
cs
cli
dec
inc
fs
daa
lds
subl
sub
in
mov
test
inc
subb
out
add
jl
adc
scas
xchg
cmc
or
push
adc
push
movsl
clc
cld
in
iret
pushl
sbb
or
pop
aaa
adcb
or
les
outsb
adc
fbld
lods
fidivrl
pop
push
xor
xchg
xchg
and
fisubl
test
test
inc
add
dec
js
movsl
movsl
call
cmp
cltd
mov
lock
sar
movsb
out
cmc
lods
jmp
mov
inc
arpl
and
addr16
xchg
cld
test
push
cli
jge
popa
mov
sub
sahf
pop
test
inc
adc
int3
mov
mov
push
add
loopne
repnz
dec
xchg
cwtl
and
loop
repnz
arpl
mov
inc
push
inc
scas
mov
shll
xchg
loope
push
mov
popa
fidivrs
push
cmp
jmp
add
jge
insl
in
fs
daa
ljmp
js
dec
xor
mov
stc
stc
cmp
xchg
iret
rorl
cmp
jl
add
xchg
ret
test
lods
mov
nop
inc
push
leave
xor
add
adc
cmc
ffree
jl
xor
shlb
push
out
test
dec
mov
mov
cld
xchg
xor
xchg
rorl
int
adc
sub
test
ja
int
lock
addr16
mov
cmpsl
jp
xorb
push
rcll
adc
or
test
adc
fidivrs
mov
aaa
out
inc
into
xchg
xchg
xchg
sub
or
stos
or
rcr
push
stos
cmp
mov
mov
into
sub
fiaddl
xor
or
xchg
lods
jo
push
sbbl
push
adc
in
xchg
and
push
inc
hlt
mov
ljmp
xor
cli
lods
adc
jb
push
jl
sti
jle
frstor
xlat
inc
jbe
movsl
or
inc
test
jge
aam
jo
call
add
push
icebp
ljmp
or
popa
mov
pop
std
fstpl
dec
adc
rcrl
pop
jno
mov
xchg
es
sub
sbb
fnsave
sub
adc
pop
bound
mov
fbstp
fmull
lods
js
mov
stos
cmc
jo
jb
imul
jno
inc
xchg
lods
imul
mov
and
aad
jmp
loopne
xchg
movd
sahf
daa
gs
lods
outsb
xchg
repz
inc
push
push
dec
sbb
mov
and
test
in
aad
addr16
hlt
push
sbb
lret
xchg
push
inc
pop
jle
cmpsb
jg
repnz
lret
mov
mov
lret
out
xchg
lret
push
xchg
pop
add
inc
stc
dec
xchg
and
mov
std
push
pop
xchg
cmp
jbe
sbb
jnp
stos
imul
cmp
movsb
pop
and
xor
push
pop
xor
sub
cltd
ret
adc
cmpsb
adc
in
xlat
aad
push
push
push
fsts
fst
dec
push
dec
stos
sti
outsl
adc
push
mov
aas
dec
mov
aam
int
and
loopne
sub
or
fisttpl
xor
or
mov
loopne
cvttps2pi
ljmp
int
lods
ret
mov
inc
cmp
mov
test
cmp
jno
daa
xchg
xchg
xor
inc
repz
push
lcall
mov
cmpsl
out
rcrl
aad
lock
inc
add
mov
xor
iret
aas
scas
test
sub
dec
outsb
loop
inc
ss
hlt
mov
xchg
mov
pop
dec
scas
dec
jo
fwait
arpl
cmpsb
push
mov
mov
sbb
in
dec
test
pushf
sub
mov
mov
dec
xor
cli
inc
mov
in
or
xlat
and
ja
jp
lcall
jae
dec
movsb
cmpsb
mov
test
imul
inc
fsubs
in
add
popf
test
popf
xchg
dec
jb
imul
mov
mov
pushf
ficoml
daa
sub
fsub
mov
mov
insb
cmp
adc
out
mov
mov
movsb
and
mov
and
xchg
les
inc
mov
leave
adc
fsubp
jbe
push
ret
popf
cmpsl
pop
push
arpl
sti
and
xchg
cli
jns
mov
pushf
imul
aam
jp
daa
sbb
or
cli
xchg
mov
inc
sub
aaa
lret
or
push
jle
inc
and
xlat
jg
jg
jne
sub
mov
mov
loope
cmpb
addr16
and
test
sti
out
je
dec
test
adc
mov
pop
mov
mov
push
mov
cld
inc
mov
adc
movsl
mov
data16
and
or
and
jnp
mov
rep
pop
popf
int
xor
popa
movsb
jp
pop
mov
insb
fbstp
test
ss
sub
xor
sbb
je
cmp
or
push
xor
fidivs
lea
adc
and
adc
rclb
popf
jge
int3
mov
sbb
daa
fistps
pop
adc
fs
xor
mov
test
inc
pop
pop
test
mov
and
xchg
and
push
addr16
fwait
ja
pop
lcall
mov
out
push
in
dec
mov
xlat
arpl
bound
addb
sbb
sahf
sub
xchg
or
cmp
cmp
push
sahf
lds
xchg
pusha
pop
fdivl
into
imul
mov
xchg
pop
sub
inc
sbb
pop
sahf
gs
test
ds
scas
or
sub
into
scas
inc
inc
jne
sbb
nop
dec
xor
pop
shrl
test
lock
nopl
pop
mov
mov
ja
insl
push
scas
xor
into
aam
cmp
cld
push
jnp
push
lock
sub
sub
push
and
push
arpl
push
insb
test
mov
jmp
in
fstl
aaa
outsb
xlat
cmp
pop
mov
push
fsubrl
aas
pop
dec
test
adc
mov
daa
pop
andb
pop
pop
mov
lods
inc
mov
shlb
inc
and
icebp
lea
nop
imul
cwtl
xchg
inc
or
inc
in
test
mov
das
push
mov
leave
sahf
mov
mov
or
clc
jle
sub
rclb
lds
sahf
mov
outsb
movsl
in
ljmp
inc
js
int3
ja
out
jle
enter
shlb
xchg
add
push
repz
inc
inc
fwait
push
lock
sbb
xchg
ljmp
outsl
xor
xor
and
out
cmp
or
lods
lcall
pop
xchg
or
cwtl
mov
xchg
test
icebp
mov
aad
inc
mov
enter
jp
push
mov
sub
data16
imul
lock
sub
stos
lods
dec
loopne
and
or
inc
or
jo
add
inc
andb
add
push
push
mov
push
mov
or
enter
push
jmp
adc
pop
fisttps
incl
mov
mov
test
xor
push
dec
out
ret
cs
inc
and
add
into
jl
sub
in
shlb
movsl
mov
test
leave
sub
xchg
adc
xchg
xchg
sub
orb
das
xchg
adc
lods
outsl
xchg
xchg
cmpsl
imul
mov
daa
in
fsubrl
cmp
inc
add
insl
lea
test
lock
inc
pop
insl
xchg
push
aad
mov
insb
sbb
addl
aad
add
inc
mov
cmpb
mov
pop
jg
adcb
adc
pop
jmp
and
xchg
xchg
sub
out
lcall
mov
sub
push
mov
mov
sbb
mov
and
cld
sti
sub
les
das
test
outsl
jmp
mov
or
test
lds
sahf
aad
sbb
dec
ret
or
int
in
pop
ret
or
jecxz
lahf
fiaddl
and
mov
inc
or
outsb
outsb
add
or
int
das
or
popf
lret
rolb
lcall
push
fmuls
outsl
and
fcompl
test
add
out
inc
mov
inc
clc
fldcw
repnz
and
gs
leave
rcr
cmpsl
popf
jns
lods
test
or
inc
add
jbe
or
out
mov
sub
ror
inc
popa
sub
adc
jbe
cmp
insl
insb
jno
out
add
add
data16
fwait
enter
adc
mov
aas
sub
mov
mov
mov
addr16
fisubl
pushf
pop
or
dec
lret
or
jg
cld
mov
and
sub
jg
lods
or
add
add
lds
nop
aad
data16
xor
push
rcll
cmp
push
xchg
jo
xchg
inc
jmp
xchg
adc
sbb
cmp
bound
test
sub
sub
cmpsb
mov
testb
mov
and
xor
pop
fbstp
xor
out
mov
sahf
ret
adc
dec
test
pop
ret
mov
cmpsl
xor
jle
add
cwtl
jp
xor
ljmp
mov
push
jns
and
aad
jo
or
daa
jb
stos
cli
int
bound
push
mov
and
rorb
push
jecxz
add
ret
lcall
aam
adc
mov
icebp
std
mov
ja
stos
fstl
out
lea
shrb
sub
ja
sub
adc
mov
shlb
out
and
aam
mov
enter
int3
jae
lods
sbb
push
pop
push
mov
jl
and
icebp
je,pt
repz
mov
cli
outsb
mov
push
and
xchg
xchg
mov
push
push
mov
jne
mov
inc
rolb
mov
or
or
inc
mov
popa
dec
ret
imul
pop
pop
inc
ret
subl
jne
mov
rcrl
lock
jecxz
addr16
xchg
mov
mov
xor
pop
call
ljmp
stos
adc
in
insl
jl
dec
mov
mov
fbld
pop
hlt
or
dec
leave
push
xlat
add
pop
push
sbb
adc
fwait
shrl
insb
mov
inc
push
outsb
test
aam
out
jno
ja
or
mov
xlat
int
xor
mov
jge
fisubrs
mov
std
sub
insl
dec
or
lds
gs
into
dec
jmp
rol
push
inc
aad
add
push
dec
iret
push
arpl
shll
fs
and
or
adc
lds
xor
fmuls
inc
inc
jbe
pop
pop
insb
adc
movsb
xchg
push
mov
jle
xor
xchg
or
and
dec
test
dec
add
pop
push
test
inc
aaa
inc
sub
mov
jge
cmp
cmp
fwait
mov
push
sti
adc
fucom
mov
adc
push
add
clc
into
mov
call
out
enter
sbb
into
dec
imul
jo
imulb
int
ret
es
cmp
in
sub
mov
addb
mov
jecxz
push
add
jmp
xor
push
in
loopne
aam
and
cmp
dec
sahf
or
out
mov
sub
mov
or
es
sub
or
out
mov
jns
xchg
lods
cmpsb
leave
loop
push
mulb
mov
call
insb
mov
mov
out
mov
cmpsb
repz
pop
nop
push
fcomp
test
dec
leave
rorl
mov
push
or
xor
fsubl
push
imul
pop
popaw
xchg
cmp
cli
pop
cmp
cmpb
adc
popa
add
add
inc
out
mov
in
mov
sub
adc
loop
add
dec
xor
cmpsl
jge
in
lret
dec
aaa
lret
jmp
rclb
dec
mov
loope
jne
jo
jo
div
sub
or
jb
sbb
fiaddl
ret
mov
xor
pop
movsl
cld
sbb
inc
cmc
cmp
or
fidivl
mov
xchg
pushf
xor
pop
loop
cmp
pop
test
shll
mov
bound
xchg
mov
adc
inc
es
scas
mov
sahf
jecxz
fld
int
add
cmpsl
inc
sub
ja
or
sarl
and
jl
pop
dec
cli
mov
sub
hlt
movsl
mov
cltd
movsb
xchg
out
push
fs
adc
fadds
popa
pop
pop
lods
xor
push
movsb
int3
sub
lret
push
in
mov
jbe
lcall
in
xor
pop
xor
ret
cld
sbb
mov
mov
jbe
or
pusha
pop
test
lret
jecxz
inc
aas
jns
xchg
lds
daa
repnz
cld
xor
inc
mov
scas
or
lahf
mov
cmp
dec
icebp
or
test
inc
push
pop
ror
rcrl
push
cmp
shrb
jnp
or
push
psubw
cmp
sbb
lahf
lret
pop
pop
pop
mov
imul
out
and
into
neg
inc
xlat
lock
roll
and
cs
mov
pop
int3
add
test
jmp
dec
cmpsb
xor
add
fistps
shr
xor
dec
je
frstor
mov
mov
mov
xchg
mov
sbb
js
insb
push
lock
xlat
fidivrl
outsb
insb
and
mov
jecxz
mov
insl
call
imul
pop
or
int
loopne
lds
add
sbb
add
mov
popa
sbb
add
pop
sub
aaa
xor
dec
bnd
pop
mov
jmp
jg
loopne
sub
mov
sbb
jns
and
push
or
ljmp
scas
aas
sub
cmp
dec
inc
sbb
mov
aad
pop
stos
and
jo
dec
jecxz
add
fsubrs
divl
inc
lds
shll
loope
mov
xchg
xchg
and
xchg
jge
in
mov
shrl
movl
or
jp
movsl
push
inc
cmpsb
aam
fdivrp
les
inc
js
popf
add
loopne
xchg
movsb
out
bound
pop
leave
push
jle
xchg
or
sbb
mov
dec
add
adc
add
int
in
inc
in
std
outsl
or
pop
pusha
push
pop
jae
nop
xor
mov
sbb
xchg
mov
push
and
mov
pop
xor
loopne
and
lcall
andl
lds
shll
les
pop
nop
in
jo
arpl
call
std
stc
jns
enter
mov
mov
popa
out
push
add
mov
mul
push
mov
xchg
ret
sbb
adc
fs
push
enter
lods
lods
dec
fsubp
jb
xchg
push
push
icebp
data16
xorl
in
leave
jecxz
lea
bound
mov
xchg
subb
fsubs
cmpsl
add
mov
arpl
xchg
cld
cmc
push
lret
pop
adc
jge
mov
out
pop
mov
js
aad
sti
jecxz
and
loop
es
aam
dec
or
sahf
ret
jnp
out
mov
push
lahf
mov
andb
cs
cmp
mov
pop
push
adc
mov
jbe
inc
lods
xchg
mov
jns
setb
xor
adc
cmp
test
cmpsl
mov
sti
rol
out
outsl
add
js
jecxz
mov
cmp
inc
mov
mov
lea
movsb
jo
xchg
fwait
inc
loop
imul
fnstcw
outsl
inc
popa
jge
and
add
pop
cmpsl
mov
inc
and
arpl
fldt
dec
cmp
scas
inc
adc
add
imul
mov
mov
aam
jo
pop
insb
fsubl
and
push
push
lods
pop
adc
inc
sub
add
fcomps
or
mov
push
sub
jbe
or
lret
sbb
lods
shll
cmp
pop
xor
pop
add
aaa
mov
lcall
shrb
jge
shll
stos
pop
fld
jg
fwait
mov
xor
sub
add
mov
scas
jmp
testl
sti
inc
mul
insl
inc
sbbb
fcoml
lods
xchg
or
push
mov
cmp
or
push
cmp
mov
mov
cmp
jge
popa
cmpsl
lret
mov
or
pop
pop
out
sub
popf
sbb
fistps
pusha
mov
fists
dec
rol
fisubrl
js
movsb
dec
test
jae
pop
inc
dec
xor
iret
fsubrl
jo
mov
movsb
stos
push
xchg
mov
push
add
cmp
sub
cltd
pop
out
mov
imul
adc
dec
dec
mov
roll
enter
repnz
mov
lret
test
cmp
mov
cmp
mov
test
or
nop
inc
andl
cmpb
ds
and
fwait
and
adc
aaa
add
inc
lds
and
cli
inc
cmpsl
jo
push
pop
jmp
mov
dec
pop
mov
mov
outsb
outsl
pop
lahf
leave
paddd
inc
lahf
mov
jne
mov
rorb
sub
xor
push
int3
lea
call
pop
fsubrl
loopne
out
push
sbb
xor
fsubr
insb
jae
fbstp
pop
sbb
mov
ljmp
and
idivb
push
cs
sbb
ret
inc
pop
or
out
xchg
gs
add
xchg
lea
mov
leave
pop
adc
adc
ja
lret
cmp
ds
outsl
mov
or
push
sbb
mov
aam
or
jo
imul
push
imul
in
inc
stos
inc
pop
pusha
or
cmp
sti
outsb
sub
lea
push
add
sbb
lahf
out
pop
jmp
pop
enter
push
jmp
lret
pop
aaa
pop
int
stc
cmp
pop
sub
mov
xlat
mov
in
sbb
aam
rclb
out
repnz
sbb
pop
mov
std
arpl
aam
jne
cmp
out
or
push
neg
shrb
mov
sub
flds
xchg
pop
js
test
iret
les
lret
int3
push
fs
push
ret
jbe
dec
into
repz
cmpsb
pop
mov
cli
lock
dec
push
jecxz
scas
stos
arpl
mov
repnz
sbb
inc
jg
push
scas
test
cmp
xchg
ret
ss
pushf
ja
or
lea
outsl
sub
fdivl
stos
rcll
xchg
push
push
loopne
mov
mov
mov
out
movsl
ret
dec
dec
jmp
push
xor
or
add
mov
dec
clc
aaa
xlat
cmp
dec
rcrl
sbb
outsl
mov
mov
ficompl
pop
mov
xor
cmp
stos
repz
xlat
jae
movsb
in
mov
fldenv
push
das
stos
pop
or
pop
addr16
in
data16
add
dec
dec
lahf
test
fisttpll
ja
mov
out
inc
cmc
xor
inc
pop
adc
repnz
pushf
adc
pop
mov
xor
ret
mov
stos
mov
movsl
and
jo
xchg
sahf
jl
leave
add
sbb
fildl
fisttpll
or
sbb
fisubrs
xchg
pop
scas
cwtl
mov
mov
xchg
fisubrs
or
iret
add
xchg
cmc
inc
sub
dec
sbb
lcall
out
andl
dec
sbb
scas
push
mov
cli
pop
lock
insb
lock
in
jbe
push
cwtl
ljmp
cmpsb
stos
mov
daa
push
or
out
add
in
and
mov
imul
jnp
cmp
push
adc
mov
cmc
add
cli
movsl
xor
pop
dec
xchg
enter
sahf
test
shr
stos
jg
mov
stos
aad
movsl
cmc
popf
sub
cmpsl
in
in
dec
cmpsl
lods
dec
jl
xchg
out
mov
adc
cmp
outsb
add
jne
movb
pop
popa
ljmp
mov
jge
rorl
sbb
dec
xor
mov
mov
cmp
mov
xchg
xchg
jl
sti
arpl
call
loop
arpl
push
std
xchg
jle
insb
pop
and
and
lods
add
cmpsl
mov
adc
jg
sbbb
scas
inc
adc
loope
sub
cltd
je
testb
add
add
test
mov
jge
mov
mov
aaa
or
test
cmp
test
mov
hlt
xchg
arpl
jnp
dec
pop
add
nop
add
dec
leave
mov
inc
dec
stos
lahf
push
xor
mov
fs
mov
add
ljmp
mov
aas
push
push
sub
roll
daa
pop
or
shll
movsb
cmp
dec
aaa
sarb
push
aaa
pushf
cli
pop
jbe
int
add
cli
mov
sbb
cmc
push
lock
not
add
inc
xchg
data16
mov
lahf
ret
les
lcall
jp
mov
pop
sub
setns
mul
cmp
leave
out
unpcklps
repz
ss
sbb
ss
fistpl
inc
adc
lock
or
fadds
test
add
popf
fdiv
xchg
push
in
xchg
adc
add
jnp
ljmp
addb
inc
cli
jns
sbb
daa
sub
shrd
ret
stos
sub
sahf
fwait
push
or
sub
adc
pop
xchg
fucomip
sbb
push
mov
dec
call
loopne
inc
inc
aam
lret
cmp
mov
or
adc
mov
inc
add
movsl
fwait
lea
xchg
negl
aaa
ror
lods
popa
mov
dec
pusha
ret
movsb
test
mov
inc
xchg
push
inc
in
fnstcw
rcrl
cwtl
mov
push
repnz
ror
adc
sahf
fdivr
add
jle
push
and
pop
xor
imul
sbb
inc
enter
aaa
lret
aaa
mov
cltd
sub
push
jns
pusha
cmp
push
cmp
inc
fldl
lcall
in
lcall
cmp
jp
frstor
ss
aad
xchg
aaa
movsl
fsubr
andl
insb
or
jg
popf
and
xor
shrb
pop
std
cmpsl
and
dec
mov
sbb
sbb
aaa
cmp
js
mov
sbb
mov
aam
pushf
ret
fimull
scas
inc
inc
das
sub
pop
out
ss
lea
sbb
jmp
popf
insl
and
in
cmp
sub
sti
xor
and
xor
inc
cmp
pusha
mov
sbbl
imul
sbb
add
stc
xor
add
fstp
inc
add
mov
mov
movsb
xchg
lods
addr16
addl
mov
push
xor
data16
xchg
xchg
sahf
add
sub
sbb
mov
insb
xor
imul
lcall
adc
fistpl
je
pop
and
into
inc
loopne
daa
int
inc
xor
clc
mov
lcall
jmp
lret
testl
stos
mov
add
bound
repnz
scas
lcall
xor
lahf
ret
mov
inc
xlat
cmp
mov
enter
or
ljmp
emms
mov
or
cmp
add
sub
adc
and
add
or
decb
jecxz
out
jecxz
aam
push
clc
push
movsl
scas
cmpsl
sbb
les
mov
sahf
daa
fdivrs
outsl
iret
dec
pop
jbe
jbe
fcmovnb
sub
test
insb
dec
decl
enter
cmp
and
sti
faddl
mov
jns
in
movsl
xor
jecxz
jle
xchg
push
dec
fwait
addr16
ret
pusha
xchg
imul
das
sub
sub
stos
xchg
fdivs
push
mov
jne
fs
sbb
push
test
dec
jno
stc
mov
aam
movsl
sub
cs
and
dec
dec
std
sbb
xchg
iret
push
jmp
and
mov
cwtl
sbbl
xchg
shlb
sub
std
lods
mov
and
data16
subb
test
sbbb
loopne
daa
in
mov
pop
cmc
int3
inc
mov
setb
cmp
xor
outsl
dec
jo
and
jno
ds
push
cltd
fs
in
lcall
stos
push
roll
ja
fldl
mov
add
hlt
jnp
inc
xor
xor
fimull
lret
int3
lret
shr
mov
cmp
repnz
fcmovbe
mov
icebp
xchg
push
or
stc
inc
aam
cmpsl
cmp
or
insl
pusha
clc
loop
mov
das
rorb
ss
xchg
cmpsb
mov
scas
subl
mov
cld
in
pop
xor
cmp
enter
insl
add
sbb
loop
xchg
jns
push
dec
sbbl
adc
jmp
sbb
xchg
out
addb
lret
pop
sbb
cmpsb
jo
adc
xor
jo
fstpt
jle
aad
mov
or
inc
mov
jecxz
cmc
xor
inc
ss
inc
mov
cltd
cmp
loope
add
add
dec
or
jl
push
dec
mov
sbb
pop
in
fistl
ja
les
jmp
pop
adc
xchg
aam
rcrl
fisttpl
adc
jl
xor
cmp
inc
outsl
fwait
pop
sub
jbe
xchg
jae
xchg
data16
movsl
je
pop
jne
cmp
mov
mov
fistpl
test
cmc
cmc
mov
ficoml
mov
addb
mov
mov
xchg
sarb
outsl
ljmp
and
push
testb
adc
push
out
xor
mov
mov
leave
jg
fidivl
mov
les
inc
les
in
pushl
lods
ret
movsl
push
into
leave
stos
mov
push
iret
inc
aad
orps
lods
aam
adc
test
add
fnstsw
mov
ds
dec
imul
sub
into
add
cwtl
add
xor
aam
dec
int
insl
inc
andl
fstpt
mov
adc
dec
sbb
loopne
dec
pop
push
idivb
lods
adcl
cmp
fsubr
push
js
lods
mov
loop
mov
pop
jne
mov
cs
pop
movsl
cmc
sub
imul
push
lcall
mov
das
stos
jmp
lock
dec
icebp
add
pop
pop
dec
cmpsb
xor
leave
add
notl
repnz
rcl
jns
inc
ret
cmp
cwtl
daa
pop
cltd
in
data16
xchg
sub
jle
adc
jns
mov
outsl
lods
outsb
faddl
sub
or
inc
adc
dec
lds
aaa
iret
popa
scas
jae
mov
loope
jb
daa
xchg
rcrl
pop
add
mov
jg
push
in
dec
jle
mov
stc
sbb
sub
and
push
stos
int
pop
mov
das
in
fisttpll
mov
ljmp
cmc
fwait
jp
adc
adc
inc
lods
push
or
dec
lea
ja
dec
scas
sbb
add
imul
mov
dec
and
dec
jo
xchg
dec
ds
testl
xlat
jge
insl
sbb
lret
xchg
mov
iret
pop
pop
xor
cmp
mov
pop
cmpb
stos
std
push
or
ror
jge
nop
insb
je
mov
fwait
and
stos
adc
cli
ror
fsts
stos
bound
out
mov
pop
andl
mov
dec
adc
push
cmpsb
in
adc
inc
jp
mov
out
xchg
ja
sub
xor
adc
ss
cmpsl
xchg
nop
mov
cs
test
repnz
int
notl
xchg
or
bound
nop
push
dec
sub
lea
pop
mov
or
loopne
dec
or
mov
inc
xor
pop
int
fadd
pop
test
lret
fwait
add
idivl
xchg
call
sub
mov
jo
xchg
xlat
lret
and
push
xchg
pop
iret
mov
pop
inc
sub
inc
and
cmpl
push
jo
aas
adc
insl
mov
xchg
dec
sub
enter
or
mov
or
and
sbb
loopne
xlat
xchg
rclb
movsb
pushf
out
lea
xchg
rorb
ljmp
cld
sub
push
inc
xchg
and
aaa
gs
push
ficompl
scas
jmp
addr16
add
leave
dec
imul
inc
and
pop
pushw
pusha
mov
mov
popf
ret
in
js
mov
pop
cmp
pop
xchg
sti
lret
pop
pop
lods
lds
adc
mov
dec
mov
xchg
and
or
mov
lahf
push
xor
fistpl
imul
scas
leave
addr16
xor
leave
test
in
addr16
mov
insb
push
sahf
mov
and
sahf
dec
fdivp
jmp
mov
add
or
into
lods
call
fsubp
and
xchg
mov
jp
cs
in
mov
test
std
jb
mov
aad
sub
lds
pop
cmp
movups
rorb
xchg
xor
out
or
ret
mov
dec
lods
jbe
outsb
sbb
pushf
mov
push
cmpsb
loopne
cmp
cmc
dec
sbb
sbb
push
repz
jge
or
mov
in
mov
pop
mov
and
push
bound
sbbb
ret
repnz
inc
sbb
push
in
das
loopne
jmp
daa
cli
lea
mov
pop
pop
cld
mov
xchg
mov
aam
inc
xchg
popa
dec
add
inc
repz
mov
add
daa
mov
mov
push
sbb
xchg
mov
sub
mov
idivb
fcomip
cmpsl
xchg
or
out
int3
cmp
stos
js
and
sub
mov
ret
lcall
sbb
sub
shl
stos
insb
push
dec
jle
mov
push
cmp
out
mov
sahf
add
mov
loop
dec
cmp
loop
adc
testb
pop
loop
sbb
mov
or
mov
and
dec
cltd
mov
push
mov
push
rcrb
mov
jp
jne
sbb
jg
jae
shlb
adc
mov
mov
xor
mov
daa
orl
cltd
lock
push
xchg
cld
call
out
xchg
sub
ret
xor
cmc
push
pop
or
sbb
cltd
and
js
xchg
or
jg
and
cld
test
cwtl
add
lea
pop
mov
fstpl
nop
fstl
cmp
int
adc
add
push
repz
pushf
test
or
mov
stc
pop
and
xchg
out
lcall
insb
mov
mov
cmp
sub
aas
pop
adc
xchg
popf
shll
push
sub
jb
lret
insl
and
fidivl
ffreep
dec
mov
jo
out
mov
ret
cld
mov
mov
dec
mov
jecxz
mov
sub
add
inc
iret
jno
xchg
outsb
stc
inc
cmp
imul
jl
daa
fldl2e
mov
add
or
test
sub
enter
sbb
jg
aam
xchg
paddsw
aad
into
mov
ficoms
mov
ja
pop
jnp
dec
adc
push
push
push
adcl
adc
adc
iret
stos
sub
dec
ret
pop
add
sbb
test
cmc
aam
cmp
jp
jp
pop
or
sbb
adc
pop
test
mov
push
aad
lea
xchg
insb
mov
or
and
in
loope
add
in
mov
data16
sahf
adc
push
test
fsin
roll
mov
sub
mov
sub
mov
pop
mov
or
pop
repz
add
arpl
jecxz
inc
mov
mov
ds
or
jp
mov
or
std
loope
test
pop
push
pop
divl
pop
pop
sub
xor
in
cmp
or
push
dec
shll
mov
lcall
add
iret
dec
sub
xor
push
out
jne
iret
scas
data16
mull
jae
js
dec
add
fisttpl
inc
scas
popf
or
sub
xchg
mov
jle
icebp
xor
notl
in
jecxz
jl
lea
and
mov
ret
lret
std
jnp
pop
out
push
out
jae
jnp
in
cmp
mov
test
loop
imul
cwtl
jo
cmpsb
sbbb
gs
loop
into
and
push
negl
fnstenv
dec
test
je
lret
int
insl
cmp
jge
scas
cmp
dec
dec
call
sub
cmp
and
repnz
and
adc
fildll
lods
add
lret
fs
xorl
inc
loop
outsl
dec
test
shll
mov
mov
faddp
inc
je
cmp
int3
out
divl
mov
cmc
inc
and
fcmovnbe
push
or
int
aas
push
add
jbe
std
jns
cld
test
jae
sub
sbb
loop
fsub
test
in
out
mov
dec
lods
mov
inc
fsubr
and
js
in
int
mov
and
and
sarb
adc
add
xlat
inc
inc
lahf
adc
popa
das
fstps
jb
jl
call
mov
sbb
loopne
fs
fcompl
xadd
cmp
test
shlb
adcl
jecxz
and
or
rcl
push
jp
lahf
les
ror
dec
pop
stc
or
xor
sub
add
out
mov
mov
push
sar
pop
test
js
jl
sub
sti
adc
mov
or
add
mov
jne
xlat
data16
inc
mov
xchg
cmp
and
pop
movsb
dec
dec
and
arpl
jge
pop
dec
fsub
mov
jb
in
sar
fldl
lods
scas
push
lahf
jb
dec
push
call
push
gs
inc
rolb
jmp
adc
adc
andb
inc
mov
or
add
std
movsl
cmp
add
les
in
bound
outsl
bound
mov
js
cmp
xor
fdivl
mov
stos
mov
mov
cltd
loope
insb
xchg
in
cmc
call
pop
je
push
or
mov
divl
push
loopne
pusha
sbb
in
inc
addr16
rclb
data16
rolb
test
add
mov
add
pop
adc
sbb
or
call
data16
iret
or
loope
and
sbb
cltd
and
sbb
dec
mov
pushf
sarb
std
into
mov
mov
jb
pop
ds
decl
xor
lret
rorl
push
mov
jnp
adc
add
and
push
loop
dec
js
daa
dec
push
and
pop
sbb
and
add
shll
mov
mov
mov
divl
mov
leave
pop
jge
loop
pop
pop
and
fsubs
xor
cmp
scas
inc
pushf
jmp
test
stos
cmp
mov
adc
mov
sbb
adc
stos
add
outsb
jge
aaa
add
sub
push
loopne
outsl
outsb
jb
fildll
sbb
xor
mov
lods
sbb
sti
mov
inc
inc
mov
sbb
icebp
dec
dec
and
fnsave
and
fisttps
push
xchg
je
mov
mov
outsb
repnz
sbb
stos
dec
mov
stos
xchg
out
das
pop
jno
or
in
and
sub
popa
sub
cmpsb
push
xchg
sbb
add
dec
nop
jo
cmp
loop
std
cmp
hlt
add
arpl
cltd
adc
fldl
in
mov
add
xor
jns
cmp
stc
mov
pop
or
mov
and
pop
cmp
add
setnp
mov
jo
sbb
cmpsb
xchg
test
mov
sbb
sbb
cmpl
or
mov
data16
xor
fwait
jno
inc
pop
das
rcrl
inc
inc
sbb
push
xor
push
jne
or
loopne
test
cmp
xor
pop
stos
cmc
je
mov
jno
dec
repz
pop
lods
fistpll
roll
adc
dec
xor
into
std
pop
inc
les
adcl
jno
imul
or
add
xor
out
fistps
mov
in
jns
daa
dec
into
and
aam
xchg
dec
xchg
pushf
in
and
cmp
sub
enter
shrb
cmp
sub
loop
adc
mov
pop
loopne
arpl
out
into
mov
xor
xchg
or
popa
pop
sbb
push
pop
sub
enter
addr16
sahf
sbb
xchg
cmp
popf
adc
pop
sbb
mov
cmp
adc
out
mov
mov
push
test
sub
loop
inc
xchg
mulb
and
nop
add
push
jp
iret
mov
std
not
pop
dec
out
mov
mov
mov
ret
dec
mov
sub
or
or
jae
outsb
push
sub
mov
frstor
cwtl
mov
sbb
push
mov
push
pop
jge
and
inc
mov
mov
loop
mov
sbb
add
lcall
je
shrl
lret
xchg
in
pop
fistpl
dec
inc
scas
lds
cmp
fimuls
sub
int
pusha
jmp
sub
ffree
std
mov
sbb
movsl
in
mov
nop
scas
cs
mov
jbe
int
mul
sbb
jge
push
mov
iret
push
mov
nop
xor
fmull
mov
push
xchg
lahf
inc
adc
out
sub
test
nop
jp
mov
jnp
and
lahf
pop
mov
ror
pushf
cmc
mov
lea
jno
jecxz
adc
fldenv
add
into
adc
adcb
nop
cmp
cmp
fiadds
jo
loopne
lods
out
pop
movsl
repnz
lods
ja
push
mov
shlb
movl
frstor
sub
out
addb
mov
insl
into
cmc
sub
fdivl
test
and
fldcw
cs
add
insb
roll
inc
adc
jns
scas
cmp
lahf
mov
icebp
addr16
nop
loopne
fldl
sub
and
inc
iret
lcall
xor
test
scas
jb
fistl
jecxz
ret
in
out
js
loope
repnz
mov
xor
hlt
and
loopne
fst
movsb
xchg
hlt
cs
aas
fmul
int
mov
add
adc
pop
fcomps
sti
andb
cld
int3
dec
xchg
cwtl
push
adc
aam
cmp
or
add
pop
insb
loopne
jmp
adc
out
lock
lret
pop
sub
movsb
orb
xchg
xor
shll
repnz
loope
cs
push
sub
ds
cmp
xchg
stos
mov
inc
into
ds
cmpsb
loope
adc
jg
cmpsb
pop
cmp
outsb
sti
push
sbb
mov
fiadds
leave
andl
popa
xlat
add
sbb
mov
sub
and
add
xor
xor
cmpsl
xchg
mov
in
sbb
xchg
xor
or
jns
dec
cmp
bound
dec
das
out
fistpl
sub
mov
mov
mov
add
dec
fnsave
add
insb
icebp
xor
cmp
stc
mov
sbb
xor
out
shrb
mov
mov
adc
adcb
pop
xor
sub
mov
or
lock
cmp
xor
in
ja
or
pop
fwait
push
out
dec
jp
pop
bound
cli
lods
xor
mov
push
inc
cmpb
fisttpll
movsl
ret
lret
movsl
ja
sbb
fidivrs
clc
add
lahf
mov
xchg
fists
jae,pt
xor
add
imul
sub
jb
test
mov
popf
aad
xchg
inc
add
push
cld
add
and
xchg
std
push
gs
jb
push
aas
lods
push
jecxz
mov
add
inc
js
das
push
cmp
je
mov
repz
sarl
mov
add
pusha
mov
test
nop
add
mov
roll
jae
push
xchg
movsb
push
sub
mov
lret
mov
mov
cmpsl
xlat
xor
mov
pusha
pop
lock
sbb
iret
xchg
adcl
xor
adc
andl
push
fimuls
cmp
mov
cmpsl
stc
dec
ljmp
and
add
cwtl
mov
mov
inc
nop
int
mov
push
adc
adc
jp
std
adc
inc
test
push
addr16
int
xchg
sbb
push
pop
rcrl
daa
js
divb
mov
mov
jmp
add
mov
sbb
push
mov
insb
test
pop
cltd
adc
in
ret
mov
mov
sbb
xchg
sbb
daa
push
or
popf
jecxz
pop
scas
jp
pop
xchg
outsl
mov
in
es
repz
enter
out
add
test
sbb
arpl
jns
fistps
dec
dec
lret
ja
mov
aad
test
adc
xchg
and
cltd
mov
sbb
ss
stos
pushf
mov
xchg
jb
sub
out
icebp
add
bound
test
movsb
stos
cmp
and
add
je
inc
sbb
ss
jmp
mov
cmpsl
daa
roll
pop
jp
or
cli
insb
sbb
cmp
mov
pop
rclb
or
mov
lcall
mov
inc
pop
and
push
mov
mov
or
cmp
inc
rorb
in
xor
jge
nop
sbb
ficompl
sbb
mov
mov
into
cltd
call
adc
push
mov
cmp
cltd
incl
pop
add
cld
xor
and
fbld
loopne
mov
lret
sub
sbb
scas
clc
and
push
sub
lock
fwait
xor
mov
call
xor
sbb
sahf
notl
pop
xchg
outsb
imul
aad
jmp
lods
sbb
fs
in
and
sbb
sub
fmul
icebp
jecxz
jmp
in
mov
popa
int3
jno
mov
inc
subps
jmp
push
and
jmp
sub
mov
inc
dec
lods
aam
xchg
stos
outsl
stos
test
aaa
fnstenv
testl
into
push
iret
mov
jge
jnp
or
popf
xchg
pop
dec
sbb
inc
fwait
arpl
dec
pop
sub
xchg
or
cmp
loope
xor
mov
and
push
mov
dec
mov
jnp
push
iret
ret
add
fists
mov
stos
sti
or
mov
repnz
sahf
and
stos
mov
adc
fbstp
ds
call
pop
pop
xor
push
mov
aam
adc
stos
std
int
mov
cmp
hlt
pop
lea
decb
or
xlat
flds
push
mov
sbb
scas
ror
in
adc
xor
add
xor
dec
sub
bound
fwait
or
jge
sbb
cmp
loopne
xor
shl
cmp
inc
mov
aas
out
repz
in
sbb
movsb
lret
int3
push
aad
lock
mov
inc
cmc
inc
push
jns
xchg
push
mov
mov
jle
shlb
or
xor
hlt
pop
fisttpll
jo
inc
insl
pop
cmp
jl
mov
fwait
pop
mov
into
jnp
mov
sbb
jae
fmuls
scas
imul
lock
rol
lcall
inc
cmp
test
and
popa
loop
insl
leave
xor
hlt
pop
sub
add
jle
out
xor
popa
mov
ret
inc
movsl
addb
test
xlat
arpl
jno
leave
cmp
loope
sbb
negl
mov
cmpsb
imul
pop
push
decl
into
or
mov
stc
xchg
mov
inc
rorl
stc
xor
add
shlb
add
pop
les
ljmp
sbb
pop
jb
iret
fdivrp
add
cmp
inc
or
dec
stos
inc
mov
stc
mov
sbb
pop
xchg
push
mov
enter
cmpsl
sub
dec
xchg
push
dec
inc
mov
dec
and
cmpsb
fwait
or
test
fbld
mov
in
inc
pop
mov
imul
cmc
jmp
pushf
jnp
insb
xchg
or
pop
gs
adcb
inc
aam
int
jmp
inc
adc
pop
ror
sub
add
and
sub
and
sqrtps
imul
mov
fisubrs
out
pop
push
xor
and
dec
jne
xor
cli
inc
hlt
iret
ljmp
movsb
shl
mov
mov
cmp
je
mov
mov
ljmp
add
pop
inc
or
cmp
or
mov
inc
sbb
push
adc
jns
sub
imul
and
inc
lret
popa
jmp
mov
fucomip
in
xchg
inc
iret
pop
fisubrs
cwtl
dec
pop
add
into
cmpsl
inc
push
in
inc
sub
lea
les
jae
xchg
insb
mov
dec
push
addr16
xchg
in
lea
or
fildll
loope
push
inc
adc
xchg
pop
mov
push
ficoml
adc
jns
add
mov
dec
ret
push
xor
out
xchg
or
sub
inc
cmp
or
test
xor
daa
nop
or
fwait
adc
cmp
rol
mov
movsl
dec
loopne
lret
lods
mov
loopne
pop
in
aam
ljmp
pop
lods
xor
rorb
es
dec
mov
and
enter
jne
pop
test
and
ds
jg
jl
lcall
xchg
fstpt
jb
mov
hlt
pushf
mov
imul
mov
or
mov
iret
jbe
stos
cmp
inc
dec
hlt
xor
mov
pushf
cltd
sbb
jbe
cs
pop
idiv
dec
jae
push
lods
pop
movsl
and
mov
ret
idivl
mov
cli
std
les
xchg
inc
mov
mov
push
inc
arpl
call
jmp
push
and
popf
iret
test
es
gs
inc
dec
xor
test
mov
pop
push
pop
jl
jns
jb
jbe
fisubrl
dec
mov
fs
dec
push
out
xchg
sbb
inc
xchg
cmp
xchg
pushf
js
cli
frstor
push
mov
add
dec
sub
pop
inc
inc
and
pop
arpl
cmc
and
mov
movsb
movsb
pushf
es
and
ds
adc
js
xor
sbb
call
mov
adc
mov
orl
je
pop
adc
adc
loop
mov
roll
or
mov
out
cld
lods
shll
inc
push
insl
mov
movsb
adc
jo
adc
add
insl
mull
jmp
xchg
cmp
sbb
pusha
ja
dec
or
movsb
push
add
mov
out
or
nop
dec
pop
bnd
orb
cmp
jmp
mov
lods
test
sbb
or
cmpsb
mov
fdivs
push
dec
mov
cmc
and
xlat
mov
iret
xor
xchg
fcmovnb
cmp
mov
iret
imul
push
rcrb
insl
mov
dec
test
fimuls
addl
jmp
lcall
mov
outsl
fcoms
pusha
mov
fucomi
pop
sbb
rorb
push
push
add
xchg
sub
mov
lahf
jp
pushf
sahf
lcall
pop
pop
fisubrl
jl
ror
lods
cltd
inc
dec
cmp
movsl
inc
fistpl
dec
cld
or
imul
add
pushf
ds
test
lcall
test
mov
xor
enter
iret
xchg
cltd
inc
pushf
mov
mov
xchg
outsl
dec
test
fs
add
mov
scas
testb
gs
xchg
scas
stos
cld
jp
push
add
lock
cli
xchg
leave
pop
fcomps
xchg
and
mov
pop
jp
or
jge
jp
lods
iret
adc
ficoml
fcompl
pop
rol
fwait
das
cwtl
dec
mov
xor
mov
sbb
fs
mov
xorl
fmuls
push
mov
mov
insl
lods
cld
mov
inc
ss
dec
test
das
cmpl
pop
push
jecxz
ror
ret
fistl
enter
stos
cmc
sbb
jb
aad
das
lds
cmpsl
stos
imul
push
clc
mov
sti
loope
cwtl
or
mov
inc
jmp
xchg
out
xchg
mov
fadds
and
inc
pop
mov
mov
xchg
loope
jne
leave
push
insb
fsub
cmpsl
pop
divl
inc
pop
cld
movsb
repz
bts
shlb
inc
mov
xchg
push
or
cld
add
ret
aas
mov
repnz
sub
or
sub
ret
mov
pop
adc
mov
xchg
lcall
loope
fsubr
test
inc
ret
ret
push
jns
ljmp
jg
push
mov
fsubs
mov
shll
jns
js
pop
lds
xchg
xor
popf
sbb
xchg
push
push
dec
fst
rcrl
and
iret
cmp
or
sub
test
loopne
and
cmp
orl
mov
sbb
mov
dec
test
icebp
cmpsl
int
adc
xchg
cli
movsl
or
or
dec
inc
add
pop
push
pop
les
repz
fisttpll
lahf
mov
mov
xor
mov
mov
test
sti
lret
lret
pop
inc
aaa
addr16
pop
test
xchg
mov
jno
mov
pop
inc
iret
push
xchg
xchg
enter
test
out
repnz
inc
inc
and
pop
inc
cmpsl
jns
sub
sbb
sub
mov
cli
push
inc
ret
in
filds
mov
pop
sbb
inc
in
sub
sub
out
push
pop
xchg
andl
mov
ja
inc
ret
scas
movsl
push
int
hlt
in
mov
fcmovne
lock
icebp
mov
push
mov
fistpl
push
jp
inc
push
cmp
xlat
push
icebp
shl
inc
stos
xor
sbb
mov
sub
and
scas
push
int
shlb
repz
push
inc
cmp
ljmp
shrd
or
and
imul
js
push
aas
inc
xor
int3
or
jo
aam
loop
stc
mov
scas
inc
xchg
lods
xchg
xchg
jae
sahf
or
jo
pop
xor
mov
xchg
and
test
add
cli
pushf
pop
and
inc
fsubp
scas
jae
jb
push
or
aaa
outsl
gs
push
sbbb
mov
iret
push
cmpsl
sti
jmp
imull
push
add
cmp
cmp
aaa
xchg
push
lret
gs
dec
adc
sub
sbb
imul
stos
subl
cmpsb
adc
ja
lods
push
clc
or
xor
mov
push
shl
shrl
in
push
and
sbb
cmp
rclb
add
xor
sub
and
jno
dec
mov
pop
shlb
push
sub
test
add
cmp
sub
mov
jle
divl
dec
xor
into
adc
mov
cmp
xlat
sub
push
xchg
inc
addb
cmp
repnz
push
out
test
sarl
insl
mov
lods
cmc
addr16
push
dec
testb
pop
jmp
shlb
loop
fildll
push
push
mov
cltd
insb
std
negl
pusha
popf
shrl
mov
into
in
sbb
add
js
stos
cmp
dec
test
es
dec
or
xor
xor
jl
cmp
mov
loopne
addr16
or
push
nop
xorl
jbe
cmp
push
lds
cmp
fwait
call
les
leave
cmp
or
xchg
lods
aaa
cwtl
and
pop
xor
inc
add
jge
dec
stos
lret
adc
inc
dec
sbb
sub
cmp
ja
xchg
scas
fstpl
aad
mov
add
cli
rolb
inc
add
mov
std
pop
rol
shll
cs
inc
ja
or
inc
out
out
fsubrs
repz
lcall
scas
push
insl
adc
incl
shrb
mov
gs
iret
and
mov
push
or
xchg
in
gs
cs
outsl
xor
jmp
pop
gs
pop
cmc
sti
sbb
cmp
cmp
and
xorb
stos
fcmovb
add
pop
stos
clc
cmp
andl
out
test
into
test
in
and
cmp
cs
popf
dec
sarl
push
cmp
sbb
test
gs
dec
jp
lahf
arpl
mov
scas
popl
push
fldl
mov
fnsave
push
and
cmp
mov
and
and
adc
lock
cli
imul
lds
mov
or
nop
adc
adc
lahf
loopne
xchg
mov
frstor
push
movsl
adc
ljmp
mov
dec
pop
lahf
mov
lock
cmp
rcrb
sub
ss
sti
lock
popa
leave
sbb
dec
push
test
iret
mov
imul
fcoms
sub
out
test
jno
sbb
into
push
cli
jge
pop
ret
ja
mov
add
mov
test
xchg
in
nop
pop
and
loop
or
enter
jae
les
dec
push
jno
dec
push
xlat
jle
das
stos
ror
push
test
xchg
xor
push
cmp
xchg
inc
dec
in
rorl
mov
out
cmpsl
movsl
std
add
mov
mov
or
int
orl
cmpsb
inc
aad
insl
inc
jo
mov
shlb
push
sub
xor
adc
mov
rcrb
mov
or
add
and
sti
sub
stos
bnd
jo
mov
sbb
push
mov
mov
xor
insl
imull
push
loopne
movsb
cltd
cmpsb
cmpsl
sub
push
es
xor
idivb
ljmp
sub
pop
movsb
cmp
or
mull
je
js
loope
nop
pop
jo
cmp
cmpsb
cwtl
jmp
mov
sahf
test
out
shr
pinsrw
mov
ja
stos
mov
push
cli
call
sbbb
repnz
shlb
cmp
sub
pushl
and
mov
push
movsl
fsubp
nop
xor
push
and
idivl
sahf
sbb
stc
rcrl
loope
jb
int3
or
dec
adc
stos
xchg
mov
xor
andb
and
mov
sbbl
mov
and
std
or
dec
push
call
imul
es
push
loope
dec
jp
lds
xor
cltd
lods
jno,pn
xchg
mov
lods
sub
aas
sbb
imul
addr16
cs
test
pusha
repnz
and
pop
mov
cs
jbe
and
bnd
jl
push
jmp
inc
in
sbb
jecxz
jmp
mov
sub
push
push
mov
jp
mov
pop
aaa
shrl
mov
std
mov
and
mov
sti
out
mov
dec
or
jmp
ljmp
add
shll
xchg
xchg
adc
imul
mov
sub
mov
lea
adc
insl
push
pop
lock
jo
call
js
adc
mov
jle
sti
not
xor
push
cmp
mov
popa
and
fcmovbe
xchg
sarb
push
cmp
push
scas
sbb
pop
adc
sahf
sub
ret
mov
add
sbb
sahf
jl
or
adc
outsb
into
push
shlb
sbb
and
movsb
jl
cmp
scas
gs
pop
xlat
inc
out
shl
jmp
pop
pop
mov
je
sub
insb
ljmp
repz
mov
jecxz
xor
push
lods
test
cmpsl
sbb
mov
cmpsb
mov
fbstp
cmp
ja
push
push
cmpsl
je
jl
xchg
lret
push
hlt
sub
mov
fisttpll
mov
inc
test
xchg
sub
fiaddl
outsb
mov
out
in
icebp
push
pop
jns
cmpsl
inc
adc
testb
push
jnp
add
int
pop
call
iret
dec
fcmovne
inc
es
lahf
push
stos
jge
mov
push
mov
push
in
jne
loopne
ror
lret
pop
pop
dec
cmp
push
xchg
out
jp
sbb
push
xchg
test
add
cmpsl
dec
or
dec
mov
and
pop
cltd
mov
mov
lods
ja,pt
cs
push
or
das
sbbb
inc
shl
push
pop
sbbb
ret
test
into
lahf
cmpsl
sub
jb,pn
inc
xlat
push
shlb
pop
xchg
rolb
inc
adc
addl
test
ds
iret
push
dec
int
push
test
mov
or
mov
xchg
mov
js
mov
or
sub
mov
xchg
cmpsb
cmp
clc
ljmp
iret
xchg
adc
popf
ja
ja
push
push
sbb
fwait
sahf
lods
push
inc
xor
mov
jb
rorb
xchg
and
les
inc
fcmovb
and
repnz
xchg
add
sbb
or
adc
loop
inc
and
xchg
ja
testb
repz
out
add
mov
sahf
loopne
addr16
sbb
or
push
in
lods
loope
add
push
lahf
out
push
mov
dec
in
mov
jmp
cs
adcl
adc
mov
and
inc
shld
jbe
aad
in
in
test
sub
in
push
jg
xchg
jge
lret
cmc
popa
mov
inc
test
adc
sbb
data16
pushf
movsl
mov
andb
sub
sub
ror
inc
inc
test
mov
stos
enter
lock
xor
in
inc
pop
rolb
in
xchg
daa
mov
repnz
jne
push
adc
xorl
mov
int3
rcl
xor
push
add
movsb
jmp
mov
pop
sbb
sbb
aam
ret
addr16
mov
sub
iret
mov
lds
cmp
dec
idivb
roll
std
rcl
ret
xor
jg
int
dec
xchg
xor
inc
aas
dec
mov
dec
in
xchg
push
mov
and
loope
mov
mov
iret
mov
push
adc
sub
mov
jbe
sub
mov
dec
stc
int3
neg
or
clc
nop
mov
sahf
insl
and
fcomps
sub
mov
scas
xchg
mov
sub
pushf
ss
add
sbb
in
xchg
push
push
fdivrp
fiaddl
sbb
dec
out
dec
mov
and
imul
mov
add
mov
mov
add
out
or
xchg
add
outsl
pusha
cmp
adc
test
sub
xchg
pop
push
or
hlt
mov
cmp
imul
sbb
std
fwait
popf
add
inc
push
xchg
add
and
lret
repz
call
dec
mov
adc
imull
ja
inc
cmp
pushf
clc
mov
dec
cwtl
xor
lds
das
insl
dec
data16
lahf
stc
xchg
mov
hlt
pop
leave
adc
scas
pop
in
stos
rorb
rcrl
sbb
mov
int3
or
fdivrs
sub
lretw
and
mov
adc
int3
mov
ja
fmuls
icebp
jne
outsb
loop
push
in
xlat
jmp
std
addr16
sti
xor
xchg
mov
jmp
fsubs
daa
pop
jbe
push
gs
stos
in
and
shl
stos
test
lds
nop
push
jns
jecxz
pop
pusha
ror
enter
sbb
push
push
push
out
idivl
mov
testb
push
pop
lret
lahf
test
xchg
pop
lahf
xchg
inc
xchg
or
xor
test
mov
insl
xchg
stos
and
mulb
stc
or
push
adc
xor
xchg
repnz
daa
push
xchg
mov
push
cmc
inc
cs
xchg
xor
mov
mov
xchg
lea
ja
mov
mov
mov
mov
mov
jnp
loope
lcall
and
pop
popf
loope
dec
imul
movsl
and
scas
dec
repz
sub
xor
cmp
inc
popf
push
lret
ficompl
pop
ljmp
int3
in
arpl
mov
out
add
iret
push
test
mov
cmpsl
cmp
out
or
cmp
cmp
lods
xor
lea
cmp
jecxz
jae
test
ret
or
pop
xchg
iret
add
jno
adc
rclb
sbb
jl
fnsave
mov
xchg
sbb
js
xchg
xchg
fwait
dec
daa
aaa
inc
inc
cmc
mov
xchg
add
subl
mov
lret
popa
stc
insb
mov
sbb
ss
jecxz
inc
cmp
jno
out
jb
icebp
cld
in
jno
xchg
jle
fldcw
cltd
cmp
or
fildll
aam
stc
add
iret
lahf
cmpsb
pop
xchg
insb
inc
and
sbb
insb
sub
fistps
bound
pushf
pop
ljmp
add
mov
pop
push
push
dec
xorl
xchg
fdivs
jecxz
shl
out
or
push
repz
dec
fisttpl
jecxz
aas
xor
in
sahf
scas
sbb
add
sarl
mov
xchg
xor
movsl
adc
mov
jg
js
xor
scas
and
incl
ja
jmp
insb
lods
mov
jnp
jmp
aas
pushf
stos
daa
fwait
push
into
mov
inc
stos
fbld
and
mov
into
jae
lock
shr
das
jo
sahf
xor
pop
pop
fmuls
movsb
and
sbb
xchg
lds
cmpsb
jecxz
mov
mov
imul
outsl
jecxz
push
jae
stc
xchg
andb
jo
into
repnz
xchg
test
adc
addl
lahf
add
pop
in
push
arpl
ja
movsl
push
fcomps
out
xor
int
aam
imul
cmp
jmp
push
xlat
xchg
es
adc
adc
jg
or
dec
inc
cld
out
pop
int
shlb
fs
ja
insb
lods
popf
clc
test
aad
fsub
cmp
cmp
pop
sbb
jae
fwait
dec
xchg
pop
arpl
imul
mov
sub
or
mov
inc
call
lahf
cmp
test
inc
andl
push
or
fldt
inc
sbb
cmp
dec
push
stos
xchg
dec
sub
push
mov
mov
push
into
and
aas
stos
mov
cmp
out
mov
inc
and
or
out
movsl
rcl
mov
add
pcmpgtb
cwtl
das
pop
pop
out
push
ss
mov
xor
push
xchg
mov
xor
mov
push
daa
or
repz
adc
push
pop
iret
mov
push
push
cmc
mov
test
in
cmp
jmp
jge
shll
jmp
jmp
xlat
nop
push
jne
out
lods
fdivs
inc
mov
rolb
push
inc
inc
lods
adc
mov
add
bound
or
gs
add
clc
add
es
movsl
loopne
sub
repz
mov
cmp
inc
mov
dec
loop
mull
cmp
repz
fwait
aas
enter
popf
push
mov
lods
cmp
loop
pusha
xchg
inc
adc
xor
mov
mov
imulb
mov
call
scas
push
inc
jns
mov
cld
pushf
call
in
mov
lods
ljmp
mov
in
sbb
call
mov
mov
out
xchg
cmp
imul
repz
ljmp
dec
imul
cmp
cmp
ret
int3
pop
pop
jb
test
scas
out
xchg
jae
jecxz
gs
pop
lock
pop
push
add
jge
xor
stc
mov
mov
add
lret
xor
adc
inc
push
mov
out
nop
fdivr
outsl
scas
mov
ljmp
testb
sbb
in
aas
xchg
cmc
std
sbb
and
pusha
adc
ret
cmp
mov
loope
rcr
dec
insb
mov
mov
and
sbb
ds
add
insb
mov
push
shrl
sbb
das
aad
jb
mov
cs
cmp
popa
les
fisubrs
clc
cld
or
je
xchg
out
mov
insb
aaa
in
cmpsb
dec
pop
mov
fstpt
jecxz
xchg
add
cmp
sub
cmp
dec
lahf
arpl
xchg
jo
pop
fcoms
ja
cmpsl
imul
inc
cmp
idivb
dec
mov
lds
das
or
mov
mov
push
mov
jae
fdivs
ljmp
add
daa
ret
std
push
repnz
cmp
daa
dec
inc
adc
mov
push
icebp
jae
jmp
mov
mov
ret
sub
push
fimull
test
or
movsb
cmp
cmp
pusha
fdivr
mov
ljmp
xor
mov
or
in
xchg
jle
add
push
inc
fistpll
cmp
ret
mov
xor
fists
mov
jge
xorl
mov
and
insb
inc
arpl
sub
into
or
pop
and
inc
fwait
loope
jnp
sbb
cmp
mov
je
jo
pop
mull
repnz
inc
or
jmp
pusha
mov
jne
imul
mov
or
sbb
adc
test
clc
aam
in
dec
or
std
adc
cmp
jg
push
fldl
repz
push
sub
fs
scas
pop
orl
inc
mov
add
imul
movsl
aad
jle
enter
jbe
mov
and
cmp
cwtl
shl
mov
loopne
xlat
inc
mov
popa
mov
pushl
pop
add
and
js
testl
xchg
sahf
movsb
sbbl
jecxz
xchg
or
mov
sub
daa
pop
sarl
xchg
out
flds
negb
fimuls
mov
inc
sti
aad
sarb
jge
movsl
ljmp
enter
cltd
xor
cwtl
fadds
into
cmpsb
add
cmp
mov
pop
icebp
add
movsl
lcall
mov
xchg
mov
xchg
arpl
enter
lea
jbe
sbb
pop
mov
inc
and
imul
shll
lods
in
inc
cli
jge
cmp
lea
push
add
add
ds
mov
ljmp
sbb
mov
imul
insl
pinsrw
out
out
or
pop
ja
test
xor
je
inc
sahf
mov
cwtl
cmp
push
and
xor
test
in
outsl
movb
sub
js
pop
es
leave
pop
cli
dec
sub
dec
mov
sbb
xchg
aaa
mov
stos
sub
and
mov
xchg
outsl
es
sbb
cmp
fnstcw
push
scas
xchg
push
push
repnz
mov
push
enter
fstpl
pushf
mov
idiv
mov
loopne
lcall
inc
xor
push
aam
fbld
repnz
mov
sub
das
xchg
je
aaa
dec
sub
lret
mov
jg
int
cs
jne
and
push
cmpl
lods
fstpt
aad
icebp
rcrl
mov
and
sbb
pop
call
sbb
push
mov
sahf
loope
cmp
mov
ljmp
or
mov
xor
subl
out
pop
adc
mov
daa
lods
lds
adc
push
loope
adc
cmp
or
xor
sbb
sub
add
dec
pop
mov
mov
and
xchg
cld
lcall
pop
nop
pushf
lret
xchg
dec
test
es
and
iret
adcl
jg
andl
sub
pop
fucomp
pop
mov
cld
lock
dec
bound
mov
arpl
xlat
adc
pop
mov
outsb
jnp
or
add
push
repz
jmp
fsubr
or
sbb
stc
push
sarl
jb
cli
jb
cmp
push
testl
cld
test
lea
scas
out
mov
lahf
cld
gs
jp
aam
push
pop
mov
adc
xchg
push
mov
lcall
sub
jno
aaa
repnz
movsb
bound
addr16
aas
stos
mov
cmp
loopne
pop
ret
orl
call
mov
push
lret
dec
add
lret
sbb
outsb
call
into
outsb
xchg
xor
enter
dec
stos
ret
jae
stc
pop
jecxz
jb
dec
pop
in
lret
dec
lret
and
nop
mov
push
xchg
addr16
ret
push
cmpsb
xchg
negl
int3
inc
cmp
orb
push
mov
mov
jns
aam
mov
data16
outsb
pop
adc
sub
push
bnd
inc
loope
aas
add
lock
cmp
int
dec
and
ds
test
addr16
addl
loop
push
fisttps
movsb
in
imul
push
faddp
inc
cmp
ret
jge
cmc
push
cmp
test
add
pop
movsl
cmc
stc
inc
in
sbb
mov
lea
or
ljmp
sbb
dec
xor
xorb
insb
and
rcr
xor
cs
stos
cmpsb
jle
daa
je
inc
rcrl
out
sub
insb
mov
jno
sahf
push
in
ja
fisubrl
movsl
xchg
lcall
aam
enter
push
xchg
in
sbb
jge
in
cmpsb
mov
mov
cmp
or
and
icebp
jge
std
cltd
pop
pusha
int
or
push
mov
pop
lds
sub
cmc
fistpl
inc
mov
fcomip
lods
stc
aaa
ret
je
sub
jle
lret
push
xor
push
repz
std
outsl
insl
mov
or
scas
repnz
pop
mov
dec
pop
stos
mov
aaa
jbe
xor
lret
in
sbb
jo
sbb
insl
fnstcw
cwtl
je
and
push
and
push
and
testl
pop
je
ret
add
rcl
inc
mov
test
and
push
bound
mov
adc
sbb
pop
pop
loopne
mov
jne
shrb
rolb
adc
mov
sub
leave
mov
mov
inc
sarl
adc
mov
and
jle
icebp
inc
repz
pushl
fimull
or
cmpsb
and
xlat
test
lret
push
dec
sub
mov
adc
arpl
mov
push
push
jge
inc
sbb
sub
fnstcw
in
mov
out
jle
add
aad
cmpl
lds
lods
test
push
insb
and
inc
push
test
jnp
and
sbb
sbb
fcmovbe
mov
xchg
lea
int3
and
lcall
sbb
jge
subl
or
test
mov
incl
lret
mov
scas
xchg
add
xor
ss
xchg
rcrl
mov
mov
sub
sub
pushf
mov
cmpsb
popa
in
insb
cld
arpl
in
imul
cmp
adc
scas
xor
ret
or
aaa
out
fmuls
jge
sub
jp
js
dec
les
dec
and
xchg
and
pop
int3
call
in
mov
jns
out
mov
cmp
mov
scas
mov
cld
xchg
push
leave
rorl
mov
xchg
jle
dec
cmp
mov
inc
dec
mov
add
cwtl
test
ret
jle
ljmp
pop
pop
sbb
leave
xchg
sbb
fidivs
sti
pop
movsb
fsubrs
lret
shll
pop
enter
push
andb
jno
in
pop
cmp
adc
das
shrb
sbb
adc
popf
adc
or
jge
aaa
jp
test
mov
enter
add
inc
mov
xchg
lods
imul
and
pusha
or
mov
gs
jle
jnp
scas
mov
sub
xchg
sub
push
pushf
pop
outsl
mov
sbb
repz
jnp
pop
lea
or
adc
sub
test
mov
jmp
push
xchg
mov
and
call
mov
dec
xchg
rol
div
into
push
jle
lods
xchg
dec
xor
stos
pop
imul
or
popa
pusha
call
xchg
test
jb
aam
xlat
mov
inc
mov
sub
mov
jp
out
cmp
pop
ljmp
out
cltd
shll
mov
or
hlt
arpl
cmpsb
gs
hlt
sub
scas
pop
out
xor
mov
enter
xchg
mov
mov
jbe
fnsave
cltd
loope
mov
je
mov
pop
xor
xchg
or
adc
push
cmp
jg
and
adc
xchg
and
mov
jecxz
test
adc
sbb
push
ds
fsubs
jmp
and
loop
sub
addr16
xlat
push
mov
or
xchg
insl
orl
cmc
clc
mov
fadd
cmpl
push
stos
mov
insl
mov
xchg
repnz
jb
cld
mov
cmp
cmp
jae
in
lock
add
pusha
stos
jbe
popf
iret
xor
cmp
data16
add
cmp
push
push
cmp
fldt
lahf
int3
in
scas
orb
cmp
inc
push
stos
test
add
lret
addb
into
aam
mov
cmp
outsb
xor
insl
mov
inc
int3
data16
mov
popl
adc
out
mov
push
test
dec
mov
add
mov
or
push
pop
aas
iret
xor
jmp
jbe
es
cmp
stos
xor
pushf
fimull
ljmp
mov
and
shlb
and
jbe
orl
add
cli
adc
xchg
pushf
in
sub
insb
adc
shl
mov
jecxz
outsl
push
pop
xchg
icebp
pop
jmp
lods
adc
fsubrp
pop
outsl
mov
sub
gs
cmpsl
mov
cld
mov
jo
mov
cli
inc
xchg
sbb
xchg
arpl
cmp
int
out
shlb
or
xchg
repz
mov
xor
xor
rol
repz
popa
idivl
xchg
sub
sub
mov
stc
lcall
sub
into
sub
xchg
stos
repz
add
imul
pop
in
in
stc
inc
aad
fs
movsb
mov
scas
pusha
es
and
dec
dec
push
sub
out
insl
jnp
arpl
pop
stos
mov
notb
jbe
jg
das
andl
mov
xor
inc
pop
pop
jne
adc
xchg
xlat
mov
jbe
mov
hlt
iret
rcl
enter
outsl
adc
and
or
ret
lods
loopne
and
cs
xor
lock
out
cmp
xchg
pushf
xchg
outsb
nop
arpl
test
sbb
cmp
sbb
insb
xor
out
out
loop
xlat
sbb
adc
lds
mov
leave
loopne
nop
sbb
mov
jbe
jne
xchg
data16
pusha
inc
fwait
sar
in
mov
and
or
fwait
adc
cmp
stc
ds
sarb
stc
ret
divl
arpl
or
sbb
push
sbb
roll
mov
out
xlat
ret
and
sti
mov
pop
bound
out
cmc
les
and
mov
push
and
sbb
aas
call
insb
jae
daa
popf
or
shll
daa
pop
in
sub
jnp
add
and
sbb
jns
dec
rcr
sbb
add
stc
mov
xor
lahf
aaa
icebp
xchg
test
sbb
mov
jo
sub
and
mov
icebp
dec
cs
push
cmp
cmp
push
pop
push
sbb
dec
jl
jl
popf
sar
andl
jmp
movsb
stos
and
cmpb
fstl
fmuls
cmp
mov
inc
mov
or
dec
sbb
cmpsl
cs
mov
pop
or
cmp
or
xor
rcrb
adcl
jle
adc
loopne
mov
adc
fdivs
jnp
cmp
adc
dec
pop
push
adc
mov
clc
rorl
inc
xchg
push
pop
inc
adc
inc
push
and
int
mov
cmp
jnp
mov
out
and
mov
jp
or
sub
fcompl
mov
pop
push
leave
mov
dec
shll
sbb
in
xor
outsb
shrl
test
shll
fisttpl
jge
pusha
movsb
mov
cld
insb
jnp
mov
push
add
cmp
sti
insl
int3
int3
int3
fsts
xor
out
mov
cli
cmp
add
pop
dec
out
mov
jae
fsubrp
inc
lahf
push
fmul
xor
jns
pop
aas
xor
adc
jg
xor
aad
pop
xrelease
out
mov
adc
paddq
jl
sub
mov
lods
movsl
mov
push
push
sbb
fistpl
inc
add
xor
or
call
call
insb
mov
adcb
in
jl
or
adc
push
clc
popl
inc
or
push
add
xchg
cmp
xchg
fmuls
jno
add
xchg
mov
dec
aaa
cmp
cmc
and
popa
addb
push
cmpsl
dec
movsb
pop
push
pop
pop
push
adc
push
ret
es
pusha
and
fchs
and
push
push
andb
sub
or
adc
stos
jns
loop
sub
add
cmpsl
mov
insb
insl
mov
fs
pop
rorl
mov
stc
inc
inc
loope
and
mov
shlb
mov
andl
xchg
push
adc
addr16
mov
and
out
pop
mov
mov
outsl
xchg
dec
mov
xor
mov
cmpl
into
fnstenv
shr
imul
sub
arpl
fcomp
shlb
xchg
push
decb
iret
mov
jecxz
or
mov
fs
loope
mov
js
inc
jns
cmpsb
std
mov
scas
mov
push
mov
pop
sbb
int
cld
sbb
dec
lahf
or
outsl
xchg
inc
lods
mov
sti
dec
fbstp
ret
rcll
lcall
cs
cmc
mov
push
lods
push
sahf
jge
or
mov
inc
add
cwtl
insl
popf
fisubs
pop
lret
aaa
out
lret
xorb
or
cmp
or
loopne
dec
or
int3
xor
rclb
andb
jle
pop
dec
add
movb
lret
stos
cmpsb
jle
dec
mov
lods
xor
dec
ss
inc
push
inc
roll
mov
imul
dec
push
repnz
push
lret
js
push
aam
jnp
inc
outsl
lods
mov
inc
push
fldl
mov
ss
fcomps
jle
adc
mov
push
fists
lahf
lods
push
outsl
cmpsl
sbb
sub
ret
leave
jo
push
mov
jns
cmp
fwait
add
test
mov
cmp
push
arpl
subl
out
jecxz
xor
jno
cmp
pushf
inc
loopne
cwtl
dec
add
jb
mov
jo
scas
lock
aad
pop
xor
leave
and
sbb
or
fildll
std
addr16
add
fstpl
xchg
mov
loope
shl
xchg
push
cmp
inc
inc
dec
fs
xchg
xor
movsb
push
fimull
mov
ss
mov
sahf
add
push
mov
ret
sbb
mov
jp
push
aad
xchg
lds
pop
cmp
in
add
cmpsl
adc
shrb
repz
scas
out
mov
ljmp
push
jns
mov
mov
and
test
mov
xor
jne
lods
imul
loop
push
add
rolb
ss
ret
stos
pop
sub
sub
popf
ja
mov
call
pop
xchg
mov
sub
mov
pop
xchg
mov
rcrl
xchg
stos
inc
mov
fbld
imul
stos
adc
les
es
in
mov
sar
idiv
xchg
cmp
adc
imul
repnz
adc
jns
sti
arpl
push
dec
ja
fists
ret
adc
mov
push
outsb
stos
adc
dec
aas
fwait
xor
push
sbb
insl
repnz
sub
cltd
jecxz
shrl
xor
inc
test
imul
in
repnz
aam
sub
push
dec
popa
cmp
and
mov
rcll
out
mov
inc
movsb
mov
fisttps
xor
xor
pop
roll
insl
nop
xchg
repz
pop
xchg
out
rorb
es
pop
jmp
dec
adc
inc
outsb
xchg
scas
and
adc
sbb
adc
and
subl
shl
sub
out
mov
sbb
cmc
push
mov
push
fs
sub
movsb
pop
dec
jp
fwait
push
flds
paddsb
dec
add
out
dec
les
pop
mov
loop
inc
pop
push
in
xchg
inc
fs
or
scas
inc
popa
test
xor
shl
mov
adc
mov
pop
mov
dec
clc
jne
fimull
mov
inc
add
stc
adc
jg
dec
loopne
xchg
xchg
nop
jp
or
add
daa
dec
pop
inc
int
add
cmpsl
aad
divl
rcr
fwait
lea
sbb
in
dec
fwait
stos
mov
jp
mov
pop
cmpb
fstl
in
mov
jns
sti
lea
sbb
add
neg
mov
add
arpl
adc
ljmp
clc
daa
adc
dec
push
cmpb
mov
pop
cli
pop
cmp
lcall
loopne
test
js
js
jnp
js
mov
rcrb
adc
jmp
mov
test
arpl
jl
fisubs
addr16
in
sbb
pop
xchg
cmp
out
dec
jne
inc
ret
mov
shll
cmp
out
aam
mov
inc
xchg
or
idivl
mov
out
inc
jbe
pushf
aaa
cmpsl
mov
fs
jmp
mov
jnp
or
stc
enter
dec
push
cmpb
cmp
sbb
movsl
outsl
lret
xor
andl
imul
shrb
adc
addr16
fisttpll
mov
mov
rcl
push
popa
jae
cmp
cmp
in
xchg
sbb
js
push
addr16
lcall
jae
sub
aas
lock
push
mov
stc
cs
jl
pop
xor
mov
clc
loopne
adc
jns
sub
add
cmp
sbb
int3
push
jnp
cld
push
mov
aam
push
movsb
fidivrs
pop
add
xor
inc
mov
inc
cmp
ss
je
jne
dec
jg
add
arpl
pushf
cld
gs
inc
fs
sahf
mov
xor
or
es
add
mov
cwtl
cmp
aad
js
notl
jge
pop
ds
push
push
or
rcrb
xchg
out
rorb
fisttpl
inc
int
nop
inc
mov
shlb
add
and
cltd
mov
sub
dec
ja
push
jecxz
mov
dec
jle
jecxz
int
loop
shrl
repz
clc
mov
lret
imul
inc
test
xchg
xor
in
sbbb
pop
and
adc
jmp
xchg
sbb
loope
xchg
shrb
xchg
sub
sbb
cmpsl
push
pusha
adc
inc
js
movsb
jecxz
mov
push
pop
lods
and
push
add
add
cmp
xchg
and
arpl
mov
xchg
xor
loopne
stos
leave
fs
lods
das
mov
pusha
push
fwait
rcl
mov
pop
or
in
movsb
popf
push
mov
lods
xchg
xchg
push
std
addl
orb
paddsw
adc
sbb
jno
adc
test
sbb
clc
test
and
int3
movsb
out
sub
out
dec
and
push
mov
enter
xor
mov
xchg
cmp
pop
aaa
mov
fstpt
sbb
inc
ret
outsb
lret
mov
repnz
es
mov
inc
imul
out
cmpsl
sub
rclb
jo
aaa
sbb
pop
rcrb
lods
popf
loopne
inc
iret
nop
inc
push
fcmovne
cltd
mov
dec
lods
xor
sti
adc
pop
je
ret
pop
push
inc
or
dec
and
and
mov
inc
testl
xchg
push
sahf
iret
inc
xorl
dec
and
mov
jecxz
sub
pushf
inc
mov
jno
pop
adc
mov
push
jg
dec
imul
or
add
pop
cmp
xlat
jae
xchg
push
mov
test
pop
dec
push
loope
add
pop
sbb
mov
mov
outsl
dec
addl
out
cmp
ds
fnstsw
mov
jle
lock
sbb
in
out
rolb
cmc
sub
push
xchg
out
adc
mov
test
je
lcall
imul
call
mov
sub
sbb
scas
or
xor
mov
test
push
cltd
adcb
push
adc
adcb
aas
pop
je
xchg
jne
sub
sahf
movl
mov
ret
data16
xor
lds
xchg
pop
hlt
imul
cmp
pop
fidivrl
cltd
mov
mov
and
pop
subb
loopne
mov
test
fbld
pop
or
xchg
rclb
loopne
cltd
xchg
or
add
cmpsb
jae
ds
xor
aas
and
cmp
mov
mov
fwait
aam
loope
fs
mov
jo
scas
pop
sub
sub
adc
jmp
sub
cmp
xor
sub
sub
mulb
out
jl
push
testl
into
lods
mov
jecxz
insb
mov
out
jle
into
inc
cwtl
stc
mov
or
pop
mov
or
mov
xchg
mov
add
inc
stos
sti
mov
sub
orl
out
pop
dec
push
and
cmpsl
dec
je
cmc
push
outsl
ja
enter
cwtl
and
imul
add
repz
fistpl
test
inc
cmp
jmp
inc
jle
push
ljmp
jle
sbb
sbb
pusha
dec
jb
fcmovne
lds
inc
movswl
addr16
adcl
jle
inc
push
test
shll
lock
enter
lods
loope
bnd
sbb
adc
jno
imul
mov
xchg
data16
fs
hlt
xchg
enter
add
push
cmpsb
add
das
sbb
inc
addl
inc
xor
jne
mov
into
mov
or
add
adc
adc
xorl
in
cmpsl
inc
sub
sbb
shlb
mov
arpl
cld
mov
insb
or
cmp
rclb
leave
lret
call
ret
or
arpl
adc
adc
scas
shl
push
mov
mov
pop
ss
pop
xchg
xor
sub
jecxz,pn
inc
jecxz
mov
rcll
push
hlt
jo
push
mov
push
cltd
push
insb
push
cmp
push
mov
int
xchg
in
mov
dec
jp
test
imul
inc
xor
push
lcall
sarb
es
hlt
pop
js
pop
xchg
shrl
hlt
loopne
fisubrl
lret
inc
lods
jmp
xchg
pop
mov
add
out
add
bswap
xchg
lret
das
daa
cs
movsl
adc
imul
cmp
push
popf
mov
ds
out
xchg
jns
orl
testb
mov
cmpsl
jno
les
adc
fwait
inc
fiadds
ror
adc
mov
cwtl
inc
sbb
movl
repz
inc
notl
xor
xor
dec
or
mov
std
push
cmp
enter
push
pop
out
jns
sub
std
add
pop
inc
filds
and
in
nop
sti
mov
sub
mov
leave
js
hlt
loope
mov
inc
int
in
jnp
int
sbb
sbb
ja
cmp
lods
mov
les
and
and
pop
std
imul
scas
fidivl
lock
ss
sbb
nop
add
iret
repz
inc
mov
xchg
mov
insl
lret
cmp
and
std
and
nop
xor
pop
int
mov
dec
pop
jnp
enter
sub
fstl
push
lcall
xchg
or
leave
sti
xor
or
test
mov
sbb
dec
dec
hlt
mov
sbb
jge
cld
stos
out
shr
je
mov
xor
sbb
jae
sub
mov
mov
push
mov
mov
icebp
add
inc
test
pop
jno
fsubr
fsubrl
lea
arpl
and
loopne
dec
pop
mov
sbb
lret
cmp
mov
push
adc
sub
or
adc
fwait
pusha
mov
xor
xchg
pop
or
ror
cli
mov
es
dec
fisttpl
mov
jecxz
pop
xchg
jmp
cmp
ja
adc
lcall
and
xor
mov
popa
loope
push
adc
mov
aad
pop
fidivrs
pop
orl
xor
inc
lods
push
divb
adc
mov
and
cmp
adc
fsub
pusha
scas
pop
cmp
test
inc
jbe
icebp
fidivrs
xlat
inc
out
add
xchg
adc
movsb
mov
insl
in
mov
fdivl
std
lods
stc
adc
mov
dec
xor
or
ret
jbe
cmc
out
xchg
jns
outsl
push
dec
push
movsb
and
sub
mov
xchg
mov
push
fcomps
enter
xchg
shr
add
add
loop
mov
int3
sbb
fxch
or
cmp
xlat
fsubl
leave
bound
ss
insb
jo
ljmp
push
popf
dec
jl
and
jbe
test
sub
enter
xchg
add
dec
sbb
sub
popf
mov
mov
imul
add
test
cmpsl
or
into
mov
add
in
mov
mov
xchg
pop
lcall
rorl
jo
pop
jbe
jl
sahf
add
andl
lods
test
jmp
sub
lods
xor
ljmp
pop
addr16
inc
test
jp
push
pop
mov
aad
mulb
add
mov
mov
inc
xchg
push
shlb
mov
stos
loopne
decb
popf
inc
ja
sbb
jmp
push
ljmp
loop
mov
into
pushf
mov
imul
outsb
shrb
and
notb
xchg
cmpb
int3
aam
mov
xchg
insb
popa
jo
hlt
dec
inc
dec
pusha
pop
arpl
push
js
inc
add
clc
fmuls
gs
cli
adc
jg
sbb
cmp
and
outsl
dec
mov
sub
push
mov
push
in
mov
push
ja
mov
outsl
mov
sbb
stos
js
push
inc
in
xchg
sbbl
icebp
imul
push
ss
repz
dec
scas
add
pusha
dec
scas
leave
cmp
idivb
xchg
das
ljmp
arpl
sub
shrl
aad
push
shlb
lods
jp
lea
and
jne
in
add
movsl
inc
repz
sti
leave
adc
int3
pop
fsubs
notb
sbb
cld
loope
test
notb
cld
and
pop
sub
mov
add
xor
adc
mov
lcall
out
icebp
dec
aaa
ds
lods
rcll
add
loope
andl
clc
std
dec
fs
outsl
dec
inc
inc
scas
xlat
mov
cmp
xchg
and
cs
sti
mov
mov
test
hlt
and
push
mov
pop
mov
push
cmpb
sub
aas
movsl
mov
lcall
shrl
testl
scas
shl
out
xchg
push
into
inc
aad
mov
pop
orb
mov
sarb
lcall
rcrl
out
add
jnp
dec
mov
mov
sbb
and
add
and
mov
jecxz
es
insb
outsb
shrl
push
lahf
push
jmp
mov
sbb
push
mov
movsl
jl
call
ljmp
push
dec
scas
jmp
jne
enter
addl
mov
out
cmpsl
pop
mov
cmp
int
sub
lcall
enter
mov
mov
xor
aas
je
stos
cwtl
psrad
push
popf
inc
inc
xor
mov
es
cmp
sub
jae
inc
dec
ret
cs
leave
xor
outsb
lods
hlt
cltd
repnz
xor
xor
mov
mov
cmp
adc
dec
xor
out
leave
xchg
outsl
out
adc
pop
outsb
and
or
xor
xchg
mov
sti
sbb
ficoml
xor
addr16
addr16
fisubrs
nop
ret
xchg
sub
jl
adc
mov
bsr
mov
pop
sbb
sbb
ret
pusha
sbbl
es
mov
mov
idivl
xchg
pop
pop
sub
add
dec
mov
pop
adcb
repnz
jle
enter
sahf
mov
ror
inc
movb
into
popf
xlat
push
jne
adc
js
mov
js
jne
pop
sub
mov
sbb
inc
fistps
in
lahf
sub
out
push
push
data16
fs
mov
pxor
push
dec
mov
xorb
inc
ret
ss
xchg
call
clc
jne
ret
fdivrs
test
mov
jecxz
lea
fs
pop
lcall
jmp
push
inc
sahf
aaa
dec
je
test
insl
aaa
mov
add
and
xor
sbb
or
adc
dec
and
mov
push
mov
xor
mov
inc
fs
roll
test
or
pop
ret
dec
or
test
add
or
cmp
inc
aas
mov
outsb
lods
pop
in
mov
push
jp
xchg
dec
shlb
in
xchg
inc
mull
popl
mov
int3
push
cltd
xchg
dec
mov
or
pop
mov
or
aas
mov
outsb
in
test
sub
cwtl
test
inc
push
nop
mov
mov
xlat
xlat
lea
icebp
add
dec
add
inc
mov
jo
adc
adc
cmp
jp
lcall
jg
xor
mov
inc
dec
cltd
orl
xchg
inc
jae
mov
das
add
sub
xchg
pop
stos
ret
add
out
pop
in
sbb
sub
jo
push
fwait
cs
lock
cli
sti
adc
cmpsl
rolb
mov
push
push
lahf
mov
or
mov
fldcw
shl
inc
in
idivb
pop
notb
mov
jl
sti
cwtl
rcll
std
sbb
cltd
xchg
icebp
test
jmp
jbe
xchg
pop
in
mov
icebp
cmp
sub
jmp
popf
push
mov
dec
mov
sub
jl
sahf
jb
lods
sub
imul
cmpb
jp
and
mov
stc
jnp
mov
ljmp
imul
lcall
notb
sub
cmp
and
cld
mov
daa
addl
dec
in
data16
loope
dec
shlb
push
or
mov
call
mov
aad
add
test
push
inc
xor
jns
into
fldl
or
je
push
mov
inc
call
out
not
pop
testl
in
test
fwait
or
cmp
mov
add
fstpt
arpl
lock
lret
in
cltd
iret
and
mov
dec
xor
push
jmp
jl
dec
repnz
shr
daa
orl
iret
jg
movsl
xor
aaa
sub
das
fwait
call
dec
dec
lcall
scas
jne
loop
lret
loopne
test
xchg
sahf
fstl
lea
data16
lret
mov
ss
test
pop
orl
mov
pop
testl
insl
divl
test
ret
adc
fstpt
mov
stos
jne
xor
mov
fsubl
hlt
mov
andl
and
push
insb
out
push
fadds
cmp
ds
fnstsw
pop
inc
shlb
fsubl
arpl
xor
shr
and
sbb
cli
fisttps
int3
out
ret
in
jns
jp
inc
push
xchg
in
rcrl
push
sti
ret
repz
mov
xor
inc
lods
push
sbb
push
fst
pop
mov
ss
stc
or
pop
jns
push
arpl
dec
ror
in
mov
daa
loopne
test
push
push
xchg
pop
insl
xchg
jno
fs
mov
add
mov
xor
pop
mov
pop
ret
lret
out
mov
pop
dec
adcl
xor
insl
sahf
addb
cld
loope
data16
cld
push
in
fdivs
cmp
scas
dec
pop
insl
jne
mov
xlat
inc
jecxz
cmp
and
xchg
push
xor
int3
repz
jbe
std
xchg
test
xchg
sbb
add
add
sbb
cmp
mov
movsb
push
dec
mov
xchg
mov
dec
nop
imul
mov
mov
mov
xchg
mov
daa
in
dec
xor
adc
hlt
xor
or
repnz
shll
jecxz
cmpb
data16
inc
jge
call
add
ja
movsb
or
into
dec
sub
push
jns
aam
pop
cld
sub
xchg
push
popa
mov
add
mov
xlat
add
outsl
xor
mov
push
out
mov
pop
mov
test
call
mov
aam
xchg
lahf
icebp
fcoms
mov
lock
pushf
jno
jle
mov
jge
loop
push
lods
sbb
adc
adc
hlt
jbe
inc
je
jns
dec
mov
cmc
jbe
les
and
insl
push
pop
mov
push
loop
lds
je
or
inc
jp
pop
cmpb
addw
adc
jns
or
imul
mov
loope
loopne
loopne
lock
pop
or
std
jecxz
xchg
test
mov
jle
sti
xor
mov
and
mov
or
jle
push
enter
jmp
inc
mov
xchg
lret
and
mov
cltd
orb
pop
push
call
and
mov
lock
test
mov
mov
jne
pusha
jnp
mov
gs
push
std
fcomps
in
inc
inc
loop
sbb
pop
add
add
pop
aas
hlt
mov
loope
add
add
sar
negl
mov
adc
test
and
cmp
flds
adc
daa
mov
pop
push
xchg
imul
sbb
sub
fbld
and
jl,pn
loopne
rcr
dec
lcall
arpl
sarb
pop
fstps
pop
jmp
leave
imul
adc
ljmp
shr
push
xchg
jo
test
adc
sub
inc
xchg
shl
call
call
stc
bnd
cmp
lcall
inc
cmp
cmp
mov
arpl
lock
lea
xchg
out
xchg
jbe
icebp
add
lods
xor
sarl
pop
lea
push
divb
leave
fidivl
cs
jnp
mov
jg
lahf
jmp
out
mov
lods
mov
cmpsb
jg
mov
test
push
dec
mov
es
aad
mov
fstpt
mov
lock
push
jb
pop
pop
dec
pop
pop
or
add
sbb
pushf
fistl
loop
adc
gs
lret
cmp
sahf
pushf
test
pop
dec
push
mov
push
add
iret
cmc
icebp
inc
call
dec
out
mov
ret
js
push
in
rorb
or
cmp
jl
mov
mov
shlb
shll
sti
lcall
in
or
add
dec
xchg
jl
mov
movsl
popa
lds
cmc
ret
or
int
mov
mov
cmp
es
jecxz
rcrb
or
xchg
iret
inc
inc
test
mov
je
xor
inc
mov
ja
xchg
adc
inc
testb
test
jno
lcall
aad
cmpsb
sub
cltd
jno
jnp
mov
add
sbb
mov
push
orl
mov
fisubrs
cmc
popf
int3
ret
xor
mov
divb
insb
mov
mov
pop
mov
in
rcl
jae
aas
add
jae
mov
nop
mov
ficompl
pop
xor
mov
test
mov
mov
aam
mov
mov
sti
cmp
mov
jmp
push
xchg
dec
mov
cmp
das
fdivrl
pop
testb
mov
pop
xor
outsl
pop
jmp
sbbl
testb
mov
aad
stc
mov
int
pop
popf
pop
insl
arpl
xchg
test
fbld
or
mov
jbe
dec
mov
scas
push
and
int3
popw
mov
xor
lret
xor
or
mov
popa
idivb
pop
jl
imul
jns
add
mov
add
mov
scas
fs
push
pop
push
std
daa
inc
loop
mov
xor
jg
stos
cwtl
ljmp
push
test
outsl
xor
lret
mov
enter
hlt
mov
xor
dec
add
nop
mov
pop
add
in
dec
xor
cmp
jg
insb
pop
mov
movsb
lock
ss
cmp
dec
bound
daa
mov
shll
clc
jnp
sbb
dec
cmp
sub
xor
and
shll
clc
inc
scas
pop
jnp
inc
push
ja
mov
mov
pop
mov
xlat
mov
loopne
or
push
scas
cmp
jg
adc
xor
add
dec
outsb
mov
sbb
mov
popa
push
hlt
xor
push
jecxz
leave
dec
and
orl
daa
fwait
test
inc
lock
jmp
das
jae
cld
mov
std
inc
hlt
jno
pusha
cmp
sbb
mov
dec
xor
sbb
inc
pop
enter
or
imul
pop
and
sbb
in
or
sahf
icebp
in
repnz
mov
inc
lcall
adc
xor
stc
test
push
insb
jnp
jnp
jl
into
repz
mov
xchg
mov
out
pusha
in
push
jo
imul
xor
cmp
xchg
hlt
cli
add
xorb
xchg
inc
jge
outsb
inc
jns
es
cli
sbb
cmp
mov
and
cmpsb
jle
subl
out
sbb
cmp
insl
repz
cmp
int3
and
rcl
xorl
pop
mov
in
mov
cmp
ret
mov
decb
movl
hlt
jge
xchg
test
cltd
out
xor
pop
cltd
mov
pop
adc
mov
inc
movsb
pusha
imul
pop
cmpsb
jns
mov
and
ficoml
leave
pop
aad
mov
xlat
int
cs
pop
outsl
pusha
stos
jnp
hlt
nop
mov
jmp
testb
loopne
in
mov
mov
xor
sahf
or
push
jbe
scas
jecxz
or
pusha
outsb
inc
cmp
jb
xor
sbb
mov
jmp
sub
pop
jecxz
pop
xor
int
ss
pop
xchg
out
sub
fcompl
dec
pop
mov
jbe
push
lret
xchg
repz
mov
mov
dec
cmp
xor
mov
imul
jae
cli
pop
icebp
sti
leave
in
mov
xchg
pop
sti
sub
and
es
in
movsl
mov
jp
jo
and
mov
xchg
or
xchg
clc
inc
cld
out
out
insl
sub
cwtl
out
mov
in
into
lret
mov
pop
adc
mov
cld
scas
lods
addb
jb
pop
sub
andl
sbb
mov
fs
push
shlb
lds
pop
xchg
adcb
inc
cmp
adc
mov
jge
shl
sub
sbb
fmull
pop
xchg
int3
adc
cli
jb
dec
in
cld
repnz
jbe
iret
inc
pusha
or
xchg
js
push
lea
sarb
insl
aam
mov
or
push
inc
or
jne
xchg
jae
xlat
or
cmp
pop
inc
fyl2xp1
ret
cs
cmpsl
jo
adc
inc
adc
into
mov
je
out
hlt
and
scas
into
aad
add
add
int3
bound
cwtl
sub
xchg
icebp
cmp
xchg
pop
scas
dec
adc
jp
xor
mov
mov
sbb
and
popf
faddl
xor
pop
inc
cmpsb
subb
fildll
pop
outsl
outsl
mov
hlt
cmp
cmpsb
roll
mov
cli
aad
idivb
push
lds
in
bound
stc
xchg
mov
add
sub
mov
xorl
mov
xchg
mov
idivb
mov
xorb
sub
dec
xor
pop
rorb
dec
stc
xchg
out
lret
push
lret
ret
aad
pop
jnp
push
mov
cmp
jno
inc
push
jns
pop
xorb
xchg
dec
add
in
mov
mov
enter
or
rol
lea
fdivr
mov
lahf
pop
push
push
loope
push
scas
cmp
jnp
mov
xchg
or
fcoms
mov
pop
cli
adc
ljmp
cli
les
add
xor
add
hlt
aad
inc
ljmp
mov
dec
lds
arpl
adc
and
xor
cmp
daa
loope
insb
cmc
push
sti
iret
in
jge
aas
push
inc
mov
stc
test
push
scas
int3
ds
addl
dec
into
cltd
int
ljmp
jp
xor
jae
inc
mov
sub
insl
push
sbb
sub
mov
adc
push
mov
push
mov
data16
inc
lds
ret
mov
add
cmpsb
out
add
call
pusha
rolb
adc
movsl
jecxz
ds
sub
andl
or
adc
dec
push
aaa
and
nop
push
dec
out
push
inc
dec
or
cmpb
roll
push
cli
pop
dec
cltd
shl
adc
cmp
cmpl
sbb
incl
lret
adc
in
sbb
jno
iret
cmp
mov
inc
add
cld
shll
js
dec
pop
fcoml
mov
mov
mov
mov
adc
hlt
jp
movsl
in
mov
lcall
stos
jg
fsubrl
flds
lock
mov
adc
aaa
jne
mov
sub
sbb
les
cltd
xor
divl
push
fistpll
push
repnz
mov
shlb
lock
cli
fdivs
xchg
es
cld
sub
push
repz
xor
mov
push
sub
leave
mov
imul
add
js
xor
jnp
repz
stc
inc
jp
icebp
mov
jo
popf
roll
adcb
andl
add
push
xor
stos
mov
jge
mov
jecxz
mov
and
inc
sbb
lcall
clc
and
mov
mov
mov
test
mov
push
mov
adc
sbb
sbb
jne
ds
jb
cmp
sbb
dec
stos
adc
push
push
xchg
or
adc
shrb
lods
jb
xlat
in
jl
pop
pop
in
or
jge
nop
int3
pop
js
cmp
push
dec
sub
fidivs
mov
in
mov
or
incb
xor
enter
lahf
movsb
pop
adc
or
enter
or
cltd
mov
jns
cmp
push
xchg
cmp
or
jnp
xchg
movl
jno
inc
sarl
repnz
test
cmp
cld
xlat
rcr
sbb
inc
xchg
loop
dec
ss
adcb
pop
jge
mov
mov
addr16
mov
dec
cmp
cmp
lret
lret
push
mov
subl
or
mov
adc
mov
outsb
cltd
jecxz
add
stos
or
push
jno
hlt
sahf
fdivrl
mul
bound
les
dec
xor
inc
fnstsw
or
push
inc
popf
and
jns
inc
and
jnp
inc
push
mov
jne
mov
rcrl
addr16
hlt
enter
movsl
jb
push
or
adc
or
sahf
fildll
sub
imul
imul
imul
inc
pop
and
arpl
bound
xchg
sbb
dec
mov
subb
les
call
flds
sub
jb
mov
ss
roll
xlat
mov
dec
hlt
jl
sbb
jo
insb
lahf
add
stos
or
gs
fdivl
push
imul
pop
push
mov
popf
add
pop
mov
cmp
dec
lret
lcall
push
mov
fcoml
loope
movsb
cwtl
ljmp
bound
not
in
dec
xchg
cmp
in
ret
inc
gs
inc
orb
mov
adc
subb
xlat
insl
popf
push
ja
cmp
rcrb
mov
mov
cmp
jg
bound
mov
lods
ret
mov
out
pop
jp
cmp
hlt
clc
and
xchg
jo
testl
shll
ret
rorl
lods
and
movsl
hlt
cmpsl
dec
pop
cwtl
lret
and
pop
pop
push
inc
adc
xor
and
cmp
xchg
jecxz
dec
mov
fildl
mov
pop
ret
adc
pop
sbb
outsl
loopne
mov
push
sub
push
dec
icebp
loope
pop
shll
mov
mov
testl
enter
in
xor
ljmp
dec
sub
pop
imul
mov
outsb
adc
fildll
shll
pop
cmp
add
push
enter
xor
mov
inc
inc
inc
mov
inc
cwtl
dec
dec
push
cmp
add
das
push
mov
adc
pop
inc
or
lds
sub
mov
xor
rcll
push
sbb
cmpb
insb
cs
inc
test
out
pushf
pushf
add
adc
sqrtps
mov
rcrl
inc
mov
cmc
adc
pusha
pop
mov
loopne
addr16
rol
xor
adc
adc
or
fsubl
sub
or
and
pop
fs
dec
pop
mov
pushfw
decb
mov
stos
mov
lret
mov
jle
mov
fcomp
fstp
shrl
mulb
pushf
decl
int
jns
mov
mov
xor
xor
xchg
stos
push
nop
mov
cmp
insb
xor
fists
sbb
ud2
jge
jb
adc
outsb
faddl
jno
addps
jmp
jae
pop
out
sbb
push
mov
out
call
in
sub
outsb
pop
mov
sbb
jbe
out
andl
popf
mov
cmpsl
sub
jmp
mov
xor
movsb
in
mov
ficoms
rorb
repz
mov
fisttpll
ss
fists
es
cmp
stos
test
jnp
das
addr16
sub
mov
mov
mov
jl
adc
mov
mov
inc
fdivr
sti
in
or
sbb
push
fcoms
dec
sub
pop
xor
sub
popf
call
adc
dec
push
lds
xchg
in
shrb
dec
stos
movsl
negl
fs
jne
cs
cmp
fwait
or
mov
es
insl
or
dec
cld
shl
sub
cmp
leave
and
das
mov
xor
ljmp
movsl
adc
movsl
fists
mov
mull
add
fs
jcxz
lahf
jecxz
lret
push
adc
dec
ds
or
add
lcall
cmp
adc
add
in
xchg
scas
les
test
add
cmp
xchg
out
sbb
cmp
xchg
adc
pop
sbb
sub
add
pop
bound
sbbb
add
popl
push
xchg
pop
jl
mov
arpl
push
pop
and
sub
sbbl
xor
test
outsl
cmpsl
jbe
dec
sbb
sbb
rcrl
dec
fcmovnb
in
shll
push
jl
xchg
sub
nop
xchg
xor
adc
sbbl
dec
xchg
aad
and
mov
xchg
pop
inc
push
int
lea
call
clc
push
push
shrb
dec
fcmovnbe
cmp
dec
or
or
sub
adc
pop
cmp
ds
in
fnstsw
sbb
push
test
fistps
loop
das
stc
fcomps
push
adc
dec
xlat
subb
push
xchg
mov
scas
push
dec
and
inc
inc
stos
adc
ljmp
and
and
mov
dec
inc
pop
addr16
lds
cli
inc
dec
push
mov
out
imul
mov
ret
iret
lock
inc
jmp
cli
aaa
adc
mov
xor
inc
scas
jb
rclb
push
arpl
or
sbb
dec
mov
inc
sub
xor
enter
ret
sbb
mov
stos
adc
orl
dec
and
cmpsl
xchg
out
sub
movsl
or
cmp
push
and
push
ret
sbb
sbb
les
jle
sti
jno
out
xchg
mov
inc
pop
sbb
cmp
xor
mov
loopne
daa
mov
cvtpi2ps
and
mov
mov
push
jmp
andb
fmul
jo
hlt
dec
inc
andl
fadd
jne
pop
mov
jle
mov
xchg
xchg
or
mov
pop
sub
call
test
into
sbb
inc
cltd
adc
push
mov
fmull
arpl
call
or
lods
and
je
mov
popf
or
stos
scas
scas
lret
cmp
xor
xor
mov
add
bndstx
jl
insb
pop
add
and
jecxz
push
mov
test
pop
ljmp
jno
push
cmp
divl
or
pop
cmp
jp
inc
iret
xor
dec
into
xchg
std
push
xchg
jbe
mov
cmpsl
pop
loopne
cli
mov
pop
xchg
dec
mov
insb
idivb
cli
inc
jecxz
cltd
loopne
xor
rcll
pop
pop
and
les
inc
popa
mov
outsb
cmpsl
sbb
jno
xor
cs
popa
sbb
lods
inc
cmc
cmc
push
test
jae
aas
jnp
push
fbld
dec
adc
mov
enter
data16
pusha
xchg
push
pop
inc
or
into
js
mov
and
scas
jle
fistps
lahf
je
jp
ror
lock
arpl
ret
jg
xor
mov
sbb
sbb
pop
loope
adcl
xchg
stc
mov
sub
cmpsl
shr
push
test
and
xchg
mov
je
jecxz
mov
or
mulb
pop
mov
mov
ret
in
jae
rcl
jg
push
add
in
mov
clc
xchg
outsb
dec
inc
sbb
enter
ss
or
movsb
dec
jmp
push
inc
cmp
pop
aam
cmp
jge
dec
xor
mov
in
xchg
mov
adc
jg
push
fwait
xor
add
mov
xchg
push
or
arpl
mov
cld
push
fnstenv
jnp
xor
xor
inc
sti
in
das
mov
sub
inc
bound
imul
cmp
push
inc
and
lea
sub
jge
dec
out
or
aad
sahf
push
adc
movsl
hlt
std
xchg
mov
pop
jb
push
jne
or
lods
shrb
outsb
cwtl
mov
inc
repnz
adc
cmp
adc
jle
inc
repnz
mov
call
shrl
pop
test
sbb
sub
fdiv
mulb
push
inc
lods
cs
into
pop
popf
dec
jne
xchg
ljmp
and
push
test
dec
test
sbb
push
pop
inc
ja
rolb
sub
xchg
test
mov
pop
es
xor
divb
push
in
das
cltd
je
aad
mov
mov
mov
fs
inc
je
ja
loop
xchg
js
push
bound
popf
into
inc
jmp
and
or
sub
mov
mov
sub
cltd
xchg
jno
mov
mov
in
outsb
mov
dec
fmulp
xor
addl
mov
test
movsl
imul
mov
lret
scas
adc
fstpl
ret
daa
push
or
xor
lea
and
dec
ficoms
mov
ja
cwtl
cmp
jmp
aaa
xorb
xor
es
inc
je
cs
and
hlt
out
and
mov
jae
fldenv
pop
add
adc
jp
cmp
xor
outsl
mov
imul
sub
lds
test
daa
cmp
addl
adc
lret
fs
add
cmp
sbb
mov
aas
jg
xor
loope
lods
out
jg
jo
rcrl
add
mov
jno
scas
fstps
sbb
xor
push
imul
ret
stos
out
mov
jecxz
lcall
push
xchg
adc
push
add
jmp
jg
dec
nop
mov
sahf
pop
mov
repnz
insb
cmpsb
jmp
push
xchg
ss
xlat
imul
lahf
adc
inc
es
jno
cmp
push
insl
jb
push
sbb
cmpsl
jg
mov
lcall
inc
aam
shrl
loope
push
and
mov
insb
scas
mov
arpl
test
das
xchg
add
mov
and
adc
mov
loop
or
sub
add
pop
or
or
bound
fcomip
sub
es
push
cmp
xchg
repz
jno
jp
lods
lock
stc
xor
aam
or
dec
xlat
and
inc
inc
js
mov
or
xchg
test
daa
mov
add
stos
add
push
and
outsl
lret
and
repz
mov
incb
dec
fists
lds
xor
and
cmp
sbbl
sbb
int
mov
jecxz
or
push
jge
push
mov
les
pusha
fnsave
out
fdiv
jmp
sbb
movsb
subb
xor
mov
mov
pop
mov
inc
sub
mov
xchg
pop
daa
das
pop
aam
mov
xlat
clc
jge
rcrb
scas
or
test
and
adc
test
ja
loop
fucomip
cwtl
int3
cmpl
leave
and
jne
mov
sbb
outsl
into
inc
mov
test
inc
push
cmc
jne
pop
cmp
stos
ja
inc
mov
mov
xor
in
ljmp
mov
dec
jns
mov
pop
test
adc
fldt
mov
inc
jge
pop
sbb
mov
cmpsb
push
sbb
or
mov
mov
xchg
aas
or
sbb
js
add
inc
xchg
es
and
clc
cltd
call
push
iret
sahf
add
lahf
cmp
test
pop
sahf
pop
arpl
lahf
or
out
int
popa
test
rorb
into
cmp
fdivr
nop
lods
add
addl
leave
mov
jle
cmpsl
mov
jle
les
insb
shlb
fsubrl
and
fwait
lock
je
cmp
movb
sub
in
lret
mov
fimuls
les
mov
aam
out
dec
mov
mov
push
pop
fistl
pop
jge
push
jbe
adc
or
mov
or
fstl
mov
push
xchg
out
push
mov
dec
dec
adc
jae
test
cmp
mov
das
stc
pop
xor
jmp
into
daa
cmp
pop
mov
mov
sbb
cmp
aas
dec
cwtl
in
jmp
into
push
push
dec
cmp
dec
outsb
negl
jl
lock
inc
imul
and
cmp
pop
mov
cmpsb
lods
xchg
sbb
and
push
and
dec
sti
shll
clc
lods
and
adc
and
mov
shrb
adc
repz
add
mov
mov
ljmp
outsl
inc
lcall
lods
inc
insl
nop
jle
std
in
or
andl
add
lcall
je
sbb
pop
popa
mov
xor
xchg
add
out
jb
and
shr
and
adc
mov
loopne
int
out
sbb
cmp
mov
dec
xor
xchg
sbb
jbe
inc
dec
sub
subb
jge
adc
push
jne
shlb
xor
add
xchg
loopne
sbb
lret
ret
cltd
inc
fdivrl
pop
or
push
sub
aam
sub
iret
add
sub
dec
cmp
js
sti
inc
clc
adc
aaa
add
cmp
adc
insb
dec
push
and
mov
sub
jp
shll
xorb
mov
bound
cmpsb
lock
es
stc
inc
sub
stos
and
popf
xor
adc
adc
cmpsl
stos
outsl
stc
or
mov
loop
out
inc
in
and
sbb
in
jns
dec
mov
xor
jecxz
push
xchg
or
pop
sti
cmpsl
dec
jle
xchg
loopne
outsl
out
cmpsl
scas
pop
fsub
cmp
xchg
mov
aam
adc
fadd
or
sahf
adc
hlt
stos
cmovle
xor
mov
repnz
loop
jns
shll
rcll
aaa
mov
jne
int
add
hlt
test
icebp
xor
mov
fs
adc
adc
jne
pop
les
pop
scas
or
lret
push
dec
repz
outsb
xor
push
test
jnp
fiaddl
dec
rcr
mov
dec
imul
jb
loopne
fucom
cmp
or
out
cli
minps
out
and
cmp
xor
xor
adc
mov
out
xorl
leave
es
sub
sbb
aad
fstps
pop
fidivs
test
cltd
ds
aam
or
push
add
loopne
rcl
adcl
inc
cld
movsb
int
imul
in
mov
or
xchg
add
aas
fmul
rep
pop
mov
jle
or
xchg
and
xorl
addr16
jbe
rclb
stos
mov
xor
int
pop
loope
adc
sub
mov
cmp
out
pop
loope
dec
cmp
daa
pop
push
jbe
inc
mov
dec
idivl
mov
mov
in
push
jmp
insb
sbb
cmc
adc
fcoms
pusha
mov
stc
idivl
int3
fs
jbe
sbb
ljmp
data16
pop
cltd
iret
inc
lahf
sub
xchg
pusha
lods
enter
frstor
mov
lods
and
xor
push
es
cmp
popa
pop
lea
lcall
sbb
pop
xchg
gs
jne
loopne
xor
pop
ret
jae
rcrb
mov
pop
shll
pop
mov
mov
mov
icebp
cmpsb
and
dec
dec
test
rcll
in
aas
cld
jecxz
add
ret
das
sub
ror
jecxz
test
jno
adc
rorl
add
sar
aas
adc
jb
xchg
hlt
xchg
inc
xchg
shll
cmpsb
aas
cs
shlb
and
cmp
data16
lods
popf
or
iret
xlat
sub
sbb
pop
jae
jl
add
stos
jae
test
push
adc
jae
cwtl
inc
xor
daa
js
jecxz
ss
int
sbb
pop
mov
mov
addr16
lcall
sbb
jnp
dec
mov
fdivl
pop
mov
jo
adc
fs
enter
stos
add
shll
movsl
mov
xor
mov
xchg
lahf
test
lods
inc
xor
mov
sub
xlat
repz
lret
jmp
dec
shrb
out
mov
popa
xchg
push
mov
mov
mov
and
ds
outsb
dec
fisubl
pop
out
cmp
je
sub
mov
dec
adc
loopne
dec
dec
cmp
lds
pop
inc
push
lock
in
aad
pop
push
sti
lea
lds
sbb
cmpsl
and
jle
pop
popf
adc
jbe
sub
lahf
das
out
mov
cmp
xchg
ds
inc
shr
push
test
pop
rclb
arpl
ljmp
mov
mov
mov
ss
jg
lcall
sbb
nop
test
xchg
dec
xlat
inc
loopne
inc
cmp
jo
mov
jnp
lret
xchg
daa
notb
add
sbb
xchg
inc
lret
movsb
jnp
cli
fs
or
test
adc
sahf
xchg
shlb
mov
sbb
or
repz
out
lret
xchg
leave
repz
xor
pop
xorl
xor
add
cmc
stos
dec
cmp
inc
push
mov
dec
lret
add
sub
jb
jge
es
sbb
xchg
cmpsb
aas
psrlq
imul
mov
xor
push
pop
fidivs
jo
sbb
fldl
jns
mov
push
test
inc
cmp
popa
popf
sub
xor
ds
out
data16
movsl
inc
inc
mov
sbb
pop
test
push
es
xchg
mov
cmpsl
pop
lods
sbb
stos
iret
mov
rcrb
test
xor
popa
xor
jae
jae
loope
lds
xchg
adc
mov
jl
push
movsl
test
jl
jno
push
shl
and
mov
das
jnp
mov
or
out
xchg
out
jle
or
cmp
dec
mov
outsb
or
inc
fucomp
and
clts
mov
mov
pushf
xor
loope
mov
mov
xchg
das
aad
clc
mov
sbb
push
mov
sub
sub
add
ja
sub
js
xor
xchg
sub
icebp
aas
jp
or
in
imul
xchg
jle
add
mov
rcll
fsts
pop
scas
int3
scas
in
push
sar
xchg
lahf
jno
push
divl
inc
pcmpgtw
xor
iret
filds
sar
pop
fistpl
xor
wbinvd
mov
lods
cmc
mov
add
mov
into
test
jae
mov
and
test
movsb
xor
popf
mov
pop
repz
cmp
test
inc
push
mov
jb
lods
mov
movsb
mov
cld
dec
lods
adc
jp
cmp
gs
jae
in
sbb
loop
mov
sarb
mov
imul
clc
out
ss
add
adc
mov
lcall
pusha
nop
cmp
sbb
icebp
push
std
ds
jne
mov
cmp
jo
or
scas
pushf
outsb
mov
sti
ja
pop
cwtl
arpl
xlat
int3
xchg
enter
push
movsb
xchg
pop
inc
xor
sbb
dec
icebp
js
out
and
xor
repnz
inc
fwait
scas
rcpps
sahf
lahf
sub
inc
scas
mov
in
je
xor
inc
push
or
fstl
mov
std
inc
jp
cmp
cltd
pop
xor
dec
jno
loop
mov
movsl
push
lret
or
xor
sbb
adc
dec
push
pop
dec
imul
cmpb
inc
fucom
xchg
ljmp
adc
add
mov
xlat
and
adc
test
inc
pop
xchg
pop
xor
rcl
push
sahf
xlat
ds
int3
popa
xor
imul
clc
lahf
out
jmp
mov
sbb
or
jbe
push
dec
push
aaa
dec
sbbb
aam
cmp
add
fwait
sub
jmp
dec
pop
jl
hlt
xor
jp
and
xor
stc
outsb
xchg
or
pop
xor
mov
stos
and
popf
imul
dec
inc
mov
add
aas
popf
pop
jecxz
sbbb
ficoml
fistpl
cs
fsubl
inc
into
pop
dec
mov
push
test
dec
mov
aam
push
test
inc
adc
das
or
test
out
popf
cld
sub
stos
xor
lcall
and
rcr
cwtl
xor
pop
push
push
sbb
data16
dec
les
shr
jecxz
hlt
sbb
sub
and
inc
xor
and
jns
add
pop
jge
adc
push
loop
bound
inc
push
pop
add
mov
mov
xchg
inc
xchg
call
adc
les
divl
outsb
je
xchg
mov
and
ds
imul
outsl
cmpl
push
sbb
out
add
jb
out
fidivl
insb
cmp
mov
sbb
call
lcall
adc
je
frstor
and
out
movsl
pushf
ljmp
pop
cmp
sbb
jecxz
gs
jp
inc
test
loop
fs
mov
jp
outsb
pop
sbb
sub
mov
mov
dec
mov
loop
push
pop
xor
rcrl
sub
stc
jbe
mov
xchg
inc
push
aas
in
jnp
pop
or
add
cmc
pop
outsl
std
leave
cwtl
adc
stos
out
in
sub
mov
enter
xchg
std
je
int3
aas
leave
mov
pop
pusha
lds
repz
mov
pop
in
in
icebp
ror
sbb
pop
and
and
pop
or
lahf
inc
out
sub
inc
ljmp
pop
sbb
insb
js
arpl
add
shrl
xchg
sarb
add
adcb
push
fwait
cmp
cs
push
cld
xor
jne
rcrl
push
out
sub
cmpsb
jno
rclb
xor
dec
jecxz
lods
jge
leave
adc
jb
xchg
aam
dec
adc
mov
imul
xorb
sub
inc
nop
fidivrl
outsl
aam
cmp
pop
dec
pop
outsl
dec
scas
aaa
mov
dec
int3
mov
popf
cmpsb
or
xor
pop
and
cmp
ja
add
test
fildl
out
mov
and
xchg
loope
movsb
sub
xchg
mov
inc
xor
add
sbb
scas
and
inc
mov
rcr
fmulp
sub
lret
sub
xor
mov
jecxz
mov
push
repnz
pop
lods
sti
cltd
xor
subl
stc
inc
dec
xor
xor
popf
fisttpl
xchg
cmpsb
ffree
jo
mov
jp
and
lock
fldl
inc
fwait
mov
int
jb
pop
enter
ret
mov
or
adcl
xchg
sbb
pop
sbb
lock
test
dec
pop
inc
rcl
mov
adc
mov
push
mov
xchg
stc
in
out
mov
push
jg
inc
jmp
xchg
in
sbb
jae
cwtl
inc
addl
aas
ffreep
pop
loopne
xchg
es
mov
fistpll
scas
pop
xlat
fstpl
jne
or
rcrb
sahf
and
pop
sbb
add
mov
loop
add
dec
pop
sti
pop
push
in
mov
push
push
cmp
cltd
inc
push
jge
dec
cmp
movsb
aaa
jbe
in
stos
loope
and
ds
insl
subb
jge
jecxz
xchg
std
dec
dec
pop
outsl
hlt
sbb
add
xor
mov
adc
jns
loopne
ja
jl
lds
mov
sbb
and
add
fstl
out
pop
hlt
loope
xchg
jae
or
pop
les
pusha
lods
cmpsb
mov
mov
flds
jno
inc
out
adc
imul
fnsave
bound
xchg
mov
test
lcall
mov
mov
int3
out
sahf
in
cmp
and
push
adc
xor
sbb
add
xchg
xor
fildll
loopne
xchg
adc
ss
cmpsl
outsb
stos
lock
push
lcall
sub
inc
icebp
cmc
repz
xor
sbb
repz
jecxz
cmpsl
push
ret
inc
sbb
or
push
cmpsl
lret
scas
loopne
inc
adc
int3
cld
enter
bound
xchg
and
inc
add
cmpsb
popa
xor
push
sbb
cmpsl
or
push
enter
divb
inc
in
enter
fbld
int3
mov
movswl
into
insb
insl
subl
insl
mov
mov
test
rclb
pop
loope
sub
imul
or
loope
in
mov
cmpl
jns
fwait
and
adc
xor
xchg
mull
ret
in
xor
fs
ljmp
dec
je
jb
sbb
arpl
stos
push
enter
mov
into
push
pusha
mov
pop
pop
fcom
jecxz
outsb
and
or
lods
ja
mov
cmpsb
les
clc
xor
shrb
repnz
nop
je
pop
psubusb
icebp
dec
lods
xor
cltd
call
mov
fstl
loopne
xchg
fbstp
rcrb
and
mov
movsb
cltd
in
ss
dec
mov
or
cwtl
call
pop
jbe
jne
sbb
scas
mov
sbb
sub
sub
jge
lret
dec
mov
and
in
push
dec
inc
xchg
lds
push
inc
add
mov
les
xchg
push
sarl
cmp
pop
cmpsl
mov
inc
mov
mov
scas
push
lahf
xor
insb
push
ljmp
pop
push
cmp
mov
stos
lret
cli
ret
inc
aas
enter
push
aad
out
cmp
mov
loopne
mov
xchg
nop
push
xchg
std
add
push
movsl
jl
cmp
or
stos
lock
ret
repz
push
ja
jne
and
insl
add
lods
inc
adc
test
and
popa
xorl
jbe
xor
mov
mov
into
pushw
sub
into
mov
jmp
xchg
mov
xor
mov
jnp
sub
incb
stos
jl
inc
jns
icebp
cmp
add
arpl
mov
std
xchg
push
testb
fs
and
cwtl
decl
imul
out
xchg
xor
addr16
lds
and
add
jmp
inc
jbe
xor
jmp
sti
fmul
xor
and
cmp
dec
sti
mov
pushf
test
test
cwtl
popa
js
in
cmp
ja
cld
stos
add
or
jbe
in
aaa
cmp
mov
mov
int3
sbb
push
mov
inc
les
sti
dec
jbe
cld
sub
xchg
iret
outsb
push
nop
mov
pushf
dec
adc
clc
mov
push
cmp
imul
cwtl
and
push
inc
fucomi
outsb
fcoml
fs
mov
arpl
sbb
push
inc
cmc
inc
xchg
push
aad
push
xchg
mov
and
jg
loope
or
push
sub
mov
cmc
sbb
mov
dec
cmp
or
jbe,pn
ljmp
in
jl
xlat
jb
fisubl
dec
jb
loopne
repnz
fsubrs
push
shrb
inc
shrl
out
cmp
out
and
lcall
add
push
ds
out
std
mov
fiaddl
mov
sbbb
into
cli
mov
cmpb
test
and
fimuls
add
push
jg,pt
out
mov
lods
pop
cmpb
cld
lods
push
or
adc
push
sbb
faddl
fiadds
test
push
or
lahf
nop
xchg
cltd
mov
inc
jg
sarl
pop
jecxz
mov
push
lock
mov
mov
mov
mov
xchg
xchg
mov
dec
mov
pop
push
int
pop
insb
xchg
inc
mov
jmp
or
hlt
cld
sbb
mov
fs
cld
pop
ljmp
cmp
cmp
pop
xchg
jecxz
bound
ljmp
jle
scas
jle
dec
lret
loop
inc
or
push
rclb
fcoms
rcrl
pop
mov
stc
insl
test
in
dec
lods
cmp
xchg
mov
or
or
test
or
ret
ret
stc
icebp
pop
or
iret
mov
xor
fs
inc
dec
sub
shll
pop
scas
lcall
aaa
add
inc
imul
mov
mov
dec
mov
add
insl
setno
or
ja
mov
push
jl
xchg
sti
hlt
lods
add
ficompl
outsl
xchg
sub
lret
dec
jae
adc
xchg
xor
push
sbb
lret
push
test
ret
xlat
and
inc
pop
push
mov
xor
mov
ret
xchg
sahf
cmp
loopne
lds
scas
jae
subb
test
scas
loope
pop
and
into
mov
add
js
test
xlat
mov
daa
mov
lods
test
add
test
adc
stos
mov
arpl
sarb
aaa
xor
pushf
dec
repnz
imul
push
adc
std
outsb
dec
ficomps
fistpl
hlt
test
ss
cmp
push
jl
in
adc
movb
int3
mov
jg
dec
es
mov
jne
outsl
push
pop
sarb
fisubrs
xor
aas
xchg
mov
and
add
jbe
or
rol
loop
repz
inc
vphadddq
rcrb
push
js
rcll
outsb
lret
xchg
outsb
gs
pusha
call
xchg
lahf
shll
outsl
popa
ret
int3
xor
fucomip
out
pop
repnz
mov
bound
dec
sbb
aam
push
push
inc
pop
dec
lock
lcall
mov
mov
adc
jp
std
jno
inc
sbb
jl
ds
jne
sub
inc
cmp
fcompl
ficoml
mov
push
mov
incb
mov
das
push
cli
add
xchg
sahf
add
jne
mov
shrl
dec
mov
xchg
pop
stos
pop
aas
sbb
clc
or
mov
pusha
cwtl
adc
sub
mov
push
into
jge
neg
cmp
int
aad
fmull
stos
adc
mov
iret
cmpsl
shll
sbb
addr16
jb
xchg
sub
mov
sarb
icebp
xchg
or
pop
loop
xor
enter
fidivrl
in
stc
frstor
push
ds
lods
bound
ret
xchg
fdivp
cmp
shrl
mov
mov
shrb
sbbb
test
pmaxsw
fldenv
ds
push
inc
rcrl
out
dec
orb
rcrb
mov
xor
lea
outsl
or
push
sub
jg
add
mov
cmp
xchg
fwait
sbb
popa
xchg
aad
xchg
pop
enter
inc
jnp
push
fmulp
loop
xlat
loopne
loopne
xor
ror
cltd
sbb
cmp
mov
hlt
mov
xchg
into
jne
fxch
jbe
sub
add
and
nop
jnp
xchg
push
sub
sub
ret
adc
sbb
in
lcall
cmpsl
adc
jae
pop
adc
movsb
ds
sbb
mov
sub
je
adc
leave
dec
pop
cli
pop
sbb
mov
aaa
dec
sbb
iret
adc
jno
into
in
push
push
inc
push
cmp
xchg
mov
dec
std
out
ljmp
inc
sahf
pushf
enter
xor
outsl
movsl
xchg
ss
sahf
ficoml
mov
push
repnz
cld
add
inc
adc
aaa
mov
les
mov
xor
adc
inc
mov
je
lods
daa
jmp
and
xchg
mov
shlb
into
mov
lock
mov
mov
inc
adc
daa
lcall
dec
mov
negl
aam
xchg
or
mov
xchg
hlt
fcmovnbe
cltd
mov
sbb
cmpsl
sbb
cmpsl
sbbb
dec
mov
pop
xchg
popa
into
lods
sbb
sbb
movsl
sbb
out
sub
test
arpl
aam
xor
push
pushf
jecxz
imul
shrl
or
sub
std
enter
stos
jo
aad
mov
push
mov
enter
shlb
iret
in
xchg
jge
mov
nop
xlat
jo
xor
cmpsl
mov
pop
inc
xor
sahf
add
xchg
xor
cmc
mov
push
mov
inc
push
cmp
or
insl
rcll
movsl
pop
lret
shll
pop
push
rcl
stc
push
xchg
inc
xchg
cmpsb
sub
inc
mov
pop
push
shrb
sbb
ds
cmp
ret
cmp
jge
sbb
addr16
sub
lea
push
pusha
dec
or
xor
ret
cmp
add
leave
insb
adc
js
adc
rclb
cli
mov
fistl
int
pop
in
mov
lret
js
roll
fcoms
movsb
xor
mul
ja
or
mov
adc
and
outsl
into
jecxz
jae
call
push
mov
clc
pop
fidivs
pushf
jne
push
jg
push
push
xchg
les
sub
std
xchg
arpl
xor
or
add
dec
mov
push
mov
jno
pop
mov
sarb
lret
and
inc
loopne
arpl
mov
aas
out
rcrl
pusha
pop
inc
mov
sbb
fildl
mov
adc
mov
jnp
push
inc
rolb
imul
pushf
lea
out
jge
fsubs
rcll
sub
cmp
add
stos
sub
lcall
push
add
xor
mov
push
js
int3
imul
mov
mov
pop
inc
push
jnp
int
sub
add
testl
pop
mov
sbb
leave
das
mov
arpl
mov
es
cmpsb
outsb
xor
pushf
ret
cltd
das
dec
in
into
mov
out
cmp
add
fs
adc
sub
xlat
lods
xor
in
out
cmc
mov
mov
flds
jne
cmp
xor
adc
in
mov
push
dec
outsb
sbb
and
sub
fs
std
and
push
in
jp
or
clc
dec
jg
push
arpl
fwait
mov
inc
lods
out
rcll
mov
notl
or
rep
fcmovnu
push
and
jo
popa
les
add
sub
adcb
mov
xchg
bnd
cli
outsb
stos
mov
sbb
mov
jg
cli
cltd
sub
mov
cmp
push
xchg
nop
in
mov
call
dec
scas
sbb
iret
or
sbb
sub
shl
data16
lock
jg
cmpsb
int
jp,pt
ljmp
sub
xor
jmp
pop
adc
in
add
sbb
mov
and
fstpl
notl
mov
or
jns
lea
sub
fsubs
cmp
and
arpl
inc
dec
mov
push
xchg
sub
dec
add
out
push
les
repnz
mull
imul
loopne
popf
test
gs
das
add
imul
sbb
loopne
or
jno
es
fwait
mov
mov
cmp
pop
push
push
loopne
mov
dec
inc
dec
xchg
jecxz
pusha
xor
mov
in
ss
ljmp
inc
mov
bound
pop
push
shrl
repz
sarb
in
lret
outsb
xor
lds
xchg
mov
sahf
inc
xor
mov
enter
or
adc
mov
xor
lock
aas
pop
adc
mov
push
shrl
mov
lea
stc
cmp
inc
in
xchg
inc
mov
std
pop
push
xchg
xchg
xchg
dec
pushf
mov
pushf
add
mov
scas
cwtl
push
bnd
add
cmp
fistpl
out
aas
xor
cwtl
fcmovnb
mov
stc
loope
dec
gs
push
daa
ss
push
inc
ljmp
inc
pop
add
mov
or
push
loop
push
mov
clc
mov
xchg
jnp
xor
mov
pop
movsl
dec
incb
adc
shl
add
cmp
fsubr
mov
cmpsl
roll
pop
sarb
lret
test
call
dec
pop
mov
dec
sbb
jbe
pop
jne
xchg
cmp
movsb
ret
jo
cmpsl
sub
pop
mov
push
insl
or
xchg
add
xlat
inc
lods
mov
cmp
repnz
jmp
dec
cld
mov
fcoml
mov
cmp
sub
adc
clc
xor
in
push
inc
mov
rolb
mov
out
mov
mov
sub
dec
jb
xchg
xchg
push
js
orb
dec
jae
mov
shll
popf
ljmp
xchg
nop
jp
push
push
test
jge
hlt
xchg
sbb
and
popf
fnstenv
xorl
inc
push
imul
jmp
mov
pop
enter
xor
and
jns
fs
stc
push
imul
push
int
mov
mov
add
repz
jg
or
xor
int3
xchg
adc
fcmovnbe
in
stos
out
xchg
data16
adc
testl
sbb
dec
sahf
aas
mov
pop
push
cltd
stc
mov
std
push
inc
push
add
dec
add
dec
imul
jno
imul
js
xchg
xor
jns
xchg
mov
cs
ret
clc
in
mov
imul
in
test
add
push
xchg
hlt
mov
jno
mov
adc
ds
xchg
jo
or
xchg
imul
mov
out
push
jmp
imul
outsb
js
in
loop
sub
and
jle
sub
mov
pop
xor
sub
push
ficompl
inc
mov
fsubrs
cmp
xlat
inc
jg
adc
jecxz
imul
insb
shlb
pop
test
ja
lds
xchg
lods
mov
xor
mulb
idivl
lds
push
xor
lret
fs
mov
cli
xor
mov
lea
add
lods
adc
clc
ja
sbb
fldenv
and
aad
cmp
in
setno
xchg
xor
add
bound
pusha
sbb
repz
mov
lds
scas
pop
icebp
or
lcall
int
jmp
inc
pop
mov
loope
adc
dec
test
dec
pop
fisubrl
and
push
pop
addr16
lret
add
test
sbb
call
mov
inc
xor
lock
movsl
add
adc
mov
xchg
int3
imul
mov
lahf
inc
aad
lock
shlb
out
sub
pop
pushf
push
pop
xchg
test
dec
inc
lods
sbb
mov
push
daa
dec
ret
push
lcall
jecxz
push
jge
mov
cwtl
lret
insb
adc
ret
pop
popf
into
pop
fxtract
in
inc
aaa
or
mov
mov
xchg
and
ret
and
mov
add
stos
lods
lahf
sub
jg
push
dec
pop
lret
sahf
lret
mov
sbb
out
je
add
ds
bound
clc
test
mov
fldt
into
cmc
lcall
enter
rcl
shlb
xchg
les
inc
jp
shl
fs
scas
sub
push
iret
gs
fdivrl
clc
mov
dec
stc
clc
jp
outsb
das
lods
int
or
pop
jbe
sbb
ror
aas
sbb
lods
xor
jnp
jg
cmp
dec
cmc
sbb
lcall
sti
dec
and
fcmovnu
imul
adc
dec
shll
scas
in
xchg
daa
daa
sub
not
pushf
test
js
mov
jmp
enter
ficompl
inc
gs
test
ljmp
jecxz
dec
cmp
xchg
iret
xor
mov
aaa
pushf
outsl
and
aam
push
cli
cltd
and
xor
loope
bound
push
push
loope
pusha
imul
xor
mov
nop
mov
jb
jno
pop
pop
adc
jecxz
repz
add
daa
int3
push
pushf
or
sbb
mov
mov
fisttpll
subb
jg
cld
fidivl
jne
or
push
mov
in
loop
in
fsubl
dec
in
inc
movsb
mov
mov
data16
cmpsb
and
sbb
out
push
xchg
xchg
or
fldcw
xchg
scas
cmpsl
divl
inc
les
inc
in
mov
call
adc
popa
je
mov
dec
mov
jns
push
inc
adc
orb
lea
ret
mov
enter
fldt
push
jecxz
cmp
cmp
mov
hlt
rcrb
mov
xchg
cmp
repz
stos
out
sub
gs
pusha
cmpsb
fcmovne
aam
push
xchg
enter
inc
fucom
insb
psubsw
lods
dec
loope
mov
xor
adcb
push
inc
mov
and
out
cwtl
jae
mov
in
and
aas
in
je
gs
push
lcall
push
popf
in
inc
inc
sbb
dec
insb
xor
dec
insb
out
movsb
add
sub
sub
out
mov
inc
push
jp
pop
xlat
or
ficoms
fdivr
and
nop
and
inc
ljmp
test
js
pop
std
scas
rolb
sarl
cmp
and
sbb
sbbb
dec
xchg
push
lds
cmc
mov
xor
mov
scas
imul
xchg
int3
jmp
popa
xor
or
aad
xor
xchg
mov
test
pushf
fisttpl
repz
jecxz
xchg
jmp
ret
push
movsl
leave
pop
loope
fadds
call
lods
loopne
push
xor
js
xor
push
mov
sub
nop
lcall
fsubs
sarl
stos
add
mov
outsl
push
sbb
loop
xor
test
xchg
mov
xchg
xchg
inc
flds
aas
les
pop
jp
push
movsb
adc
loope
mov
movsb
sub
dec
movsb
and
fidivl
iret
ja
or
inc
dec
adc
push
leave
ja
xor
stc
inc
jo
ret
loop
stc
cmc
test
ret
inc
aad
and
adcl
pop
adc
ja
push
mov
ret
mov
pusha
mov
jecxz
out
push
insb
inc
inc
cli
push
fnstsw
mov
out
pop
pop
ret
pusha
sti
sbb
jg
data16
cmp
cmp
insl
pop
push
test
call
lcall
mov
push
jns
adc
push
out
ss
push
push
pop
mov
push
hlt
pop
out
bound
dec
inc
mov
out
mov
jae
dec
scas
fildl
sbb
imul
jg
mov
or
sbb
out
adc
mov
scas
cmp
cltd
popf
mov
jmp
bound
jns
dec
std
shll
movsb
pop
jle
mov
sbb
pop
push
aam
sti
nop
cwtl
push
dec
mov
test
sub
popa
inc
shlb
xor
cmp
ret
dec
jns
xchg
and
sub
xchg
inc
imul
mov
sub
xor
fiadds
push
mov
jmp
outsl
outsb
pusha
pop
cmc
stc
mov
cmp
mov
icebp
or
in
and
mov
sbb
pop
push
mov
ret
js
ljmp
push
pop
mov
out
out
and
and
in
rcr
jb
lds
adc
pop
cmpsl
push
imul
xchg
test
mov
pop
nop
sbb
std
xchg
push
fsubrs
leave
sti
shr
out
int
arpl
add
loope
pop
xor
xchg
outsb
push
mov
sub
jg
cmp
cmp
sub
mov
in
cmpsl
push
xorl
mov
xchg
mov
jo
adc
dec
ja
in
ss
fadds
mov
mov
add
iret
adc
ret
xor
movsb
mull
xchg
ja
xchg
push
pop
mov
and
popf
aas
imull
mov
fmull
add
int
mov
gs
push
call
mov
push
sar
out
sub
shrl
in
rcrb
pop
add
pop
out
add
cmp
jb
ficoms
data16
mov
lret
rorb
dec
lock
popa
mov
mov
sub
mov
xchg
inc
mov
mov
push
arpl
fistps
xorb
mov
das
test
call
js
xchg
inc
shlb
jl
test
jge
pop
xchg
cwtl
cld
stos
cltd
sub
pusha
fdivrl
fildl
movq
imul
xlat
ljmp
jbe
shrl
outsb
stc
push
dec
and
aas
outsb
sbb
xchg
or
incl
dec
cmp
jo
mov
cmp
test
adc
cmp
sub
and
pop
sub
and
inc
call
movsb
shlb
add
cmp
repz
lahf
lock
sbb
fcmovu
sub
sub
sti
ss
inc
addr16
fucomp
loop
xchg
std
ds
jbe
pop
xor
pop
lock
test
lods
fstl
add
aad
repnz
into
ljmp
cmp
mov
faddp
push
mov
hlt
mov
aas
xor
jb
cmpsl
test
jmp
ja
stos
fwait
sbb
dec
shlb
adcl
pop
mov
or
push
outsl
cmpsb
lea
out
cld
push
mov
inc
movb
push
xchg
adc
sbb
in
push
daa
jmp
imul
je
call
add
jnp
test
or
sahf
hlt
fnstcw
dec
mov
pushf
xchg
xlat
rclb
pop
addr16
lret
add
push
adc
adcb
icebp
jge
hlt
shr
pop
iret
pop
pop
and
rcl
xchg
ficomps
lret
xor
mov
pop
mov
xchg
ret
adc
fs
cld
dec
je
xor
pop
mov
nop
sbb
lret
pop
scas
stc
push
xor
es
js
cmp
jle
xor
add
daa
aas
mov
add
leave
and
in
loopne
mov
adc
inc
xchg
inc
lret
jmp
xchg
cltd
mov
stos
push
pusha
mov
fnstcw
or
jecxz
mov
cmc
add
popf
adc
push
sub
mov
fstpl
mov
lcall
and
and
cs
lret
in
mov
int3
adc
mov
xlat
lret
lea
mov
xor
xchg
jle
jnp
mov
std
cmc
dec
std
fcomps
pushf
cld
psubusw
and
push
jns
lock
cmpsb
repnz
jecxz
push
mov
mov
aad
mov
sahf
push
in
lcall
lret
add
adc
mov
sbb
cmpsb
lods
and
pop
out
mov
push
rclb
xchg
sahf
shrl
mov
push
sub
inc
mov
dec
dec
sti
cltd
push
push
test
cli
repnz
pop
out
xor
xlat
js
iret
mov
sti
frstor
dec
push
enter
pop
in
push
xchg
ss
cmp
repz
movsl
push
data16
xchg
sub
cwtl
jmp
jae
ljmp
push
rol
cmc
adc
push
scas
add
shr
imul
stc
fwait
push
xchg
faddl
lds
or
push
or
mov
inc
mov
pusha
dec
push
ficomps
mov
mov
cwtl
inc
hlt
sbb
shll
xchg
mov
ss
rcll
pop
repz
aad
icebp
pop
iret
sub
notl
mov
stc
bound
cld
ret
mov
out
je
push
dec
ljmp
mov
or
xchg
push
std
test
mov
jnp
cmpb
sbbl
sbb
mov
bound
dec
js
push
sub
jle
daa
and
jp
dec
jmp
stos
test
jecxz
cmp
and
les
daa
adc
xchg
les
shufps
sbb
inc
pop
nop
add
movl
add
adc
stos
sarb
add
dec
xchg
ret
lret
xchg
mov
sub
hlt
js
loope
fldt
outsl
lock
lods
cli
adc
push
fsubs
xor
jp
imul
push
cmpsl
stos
jne
lea
sbb
mov
inc
inc
jbe
xchg
pop
or
cmp
sti
cltd
sti
sub
rcrl
jl
xorl
mov
jge
sub
or
ljmp
mov
stos
inc
dec
ja
mov
sti
sbb
es
fildl
stc
inc
dec
xchg
push
cmpsl
xor
mov
pop
int
sub
adc
sub
roll
or
mov
push
enter
dec
push
into
and
out
push
std
xchg
cmp
cmp
adc
jbe
jl
andb
out
mov
pop
sub
push
jle
loop
arpl
adc
sbb
std
pop
or
fwait
pusha
mov
jbe
das
test
pop
dec
sub
std
inc
and
ja
je
mov
outsb
daa
ret
mov
in
test
dec
mov
insl
push
inc
imulb
pop
push
aaa
sbb
decb
sahf
inc
xchg
rcll
stos
js
enter
movsl
push
aas
jbe
xchg
imul
fwait
arpl
insb
stos
stos
mov
std
aas
push
leave
ja
lods
push
or
rorl
shlb
hlt
mov
pop
sub
aam
xlat
dec
sarl
xor
fcomip
pop
fwait
sti
out
ds
adc
lret
test
lods
push
dec
inc
loopne
push
jae
scas
xor
push
int3
lret
dec
mov
push
scas
test
and
cmp
inc
xor
les
js
into
das
out
repnz
sub
xchg
shr
push
pop
push
jle
outsb
sbb
xchg
pop
mov
mov
in
shll
push
lds
out
cli
xor
pop
mov
gs
or
mov
iret
pop
mov
fs
cmp
cld
mov
pushf
leave
pop
fstpl
testb
jmp
xchg
dec
pop
in
cmp
mov
sarl
popf
clc
mov
cmpl
es
xor
add
clc
jp
insl
add
mov
insl
scas
adc
arpl
mov
jp
mov
icebp
sbb
in
sbb
test
sub
in
fs
dec
add
fwait
xor
push
dec
scas
enter
pop
xor
aas
js
mov
pusha
out
filds
pop
push
or
add
cld
sub
stc
arpl
out
fsub
xchg
jl
sarl
jmp
add
sub
mull
mov
lods
inc
pusha
mov
or
ret
inc
jge
or
imul
loopne
sub
jo
rolb
cmp
hlt
insb
inc
and
push
inc
xchg
adc
xchg
insb
pop
and
rcr
sbb
pop
dec
pusha
fisubrl
or
rorb
imul
pushf
mov
les
mov
push
jns
mov
pop
push
bound
imul
jge
imul
xchg
imul
dec
mov
cmp
or
mov
popf
out
push
mov
enter
sahf
xor
repnz
daa
mov
decb
mulb
sbbl
dec
dec
inc
push
mov
lock
xor
dec
xor
xchg
sbb
ljmp
jno
lret
push
lea
aam
stos
stos
insb
divb
daa
xor
add
dec
mov
xor
enter
xchg
xor
jmp
jns
mov
pop
mov
rcrb
jno
jns
jmp
cmp
adc
stc
leave
push
cli
cld
push
repz
dec
into
adc
movb
scas
dec
stc
mov
mov
jl
and
dec
inc
cmp
pop
lcall
into
lea
mov
cmp
xchg
push
push
push
inc
lcall
push
pop
pushf
mov
clc
xchg
mov
sti
or
cmc
dec
push
fistl
mov
shr
mov
insb
dec
data16
outsb
addl
fdivrl
lock
mov
imul
or
movsl
xorl
int3
xor
decb
jo
xor
ficoml
push
sbb
sbb
jge
rorl
jmp
lds
iret
fsts
inc
or
arpl
call
push
inc
cmp
dec
addb
test
test
lods
sub
dec
xchg
in
shl
and
jge
nop
lock
mov
pop
popf
mov
pop
repnz
shll
fs
inc
and
mov
jo
popf
cmpsb
int
stc
dec
mov
adc
dec
subps
shrl
decl
les
dec
rorb
idivl
out
jno
negl
aad
pop
xchg
cltd
movd
cmp
rcl
xor
imul
into
int
push
ja
das
xchg
mov
scas
push
jl
popa
pop
xor
popaw
sbb
fnstsw
mov
xchg
push
jnp
cld
scas
stos
mov
dec
outsl
jae
and
dec
nop
adc
add
mov
rcrb
pop
and
cmp
or
xchg
dec
ss
in
test
outsl
and
jmp
lcall
add
cmp
adc
call
rcll
loopne
xorb
lods
data16
jb
xchg
add
cmp
dec
daa
hlt
stos
std
movsl
jbe
mov
test
arpl
adc
xchg
into
popf
xlat
addb
sub
jmp
sub
cmpsl
insl
sbb
push
psubusb
iret
lock
push
push
aaa
mov
fidivrl
in
cmpsl
pop
popf
rorl
mov
cmp
andl
mov
aad
stc
xor
es
pop
mov
inc
popa
cmp
jae
and
sub
inc
lds
test
push
cmp
pop
add
cli
push
xlat
sbb
xchg
subl
pop
loop
sub
sahf
js
sub
mov
lods
enter
mov
loop
mov
pop
mov
or
mov
enter
andl
mov
mov
mov
add
pop
insb
pop
mov
pop
push
mov
mov
jae
sbb
aad
cs
lret
sbb
in
rolb
add
inc
push
cmp
int3
inc
ret
push
stc
mov
insl
mov
push
fdiv
adc
cmp
test
and
xchg
cli
adc
in
mov
and
inc
xor
test
jge
dec
push
adc
stc
mov
ljmp
cmpsl
das
ja
lcall
pop
inc
adc
jl
and
jno
mov
insb
or
mov
insb
push
push
cld
adc
fwait
shrl
test
xchg
dec
ja
jnp
mov
int3
cmp
repz
xlat
and
test
sahf
mov
testb
loope
and
push
xor
lcall
jle
out
and
mov
ret
out
ret
push
out
or
into
pop
xor
int
or
movsb
xchg
mov
int3
dec
scas
arpl
sbb
xchg
int
cwtl
rcll
cli
clc
popf
add
andl
lds
lods
das
sub
xchg
push
add
subl
mov
mov
sub
jo
mull
jb
cltd
shrb
mov
lahf
dec
inc
leave
nop
outsl
and
data16
stos
nop
xchg
fbstp
pop
fisttpl
stos
adc
shl
mov
mov
cli
xchg
test
or
bnd
push
loope
out
roll
out
mov
mulb
mov
call
xchg
pop
cmc
push
pop
pop
out
cltd
sub
push
fs
mov
adc
inc
lret
push
mov
fimull
or
enter
jge
push
cld
cmp
pop
push
xor
jle
and
movsb
das
add
cmp
or
and
jl
sub
xchg
mov
aas
es
lea
and
daa
dec
sub
inc
ret
idivl
js
sti
mov
outsl
and
push
dec
mov
inc
or
pop
testb
mul
insl
inc
pop
ljmp
add
addr16
ret
mov
inc
mulb
or
mov
jno
xor
cmp
adc
mov
pop
in
dec
popl
push
lahf
push
call
lahf
jge
push
mov
mov
fcompl
bnd
movsb
test
movsb
ss
add
pop
fsub
mov
popf
repz
adc
popa
pushf
mov
iret
xchg
into
test
or
sbb
inc
lahf
dec
mov
inc
dec
pop
loopne
sbb
xor
inc
sbb
psraw
xchg
fisubrl
mov
and
jmp
xor
push
sbb
adc
xlat
outsl
mov
xchg
jne
icebp
pop
xor
push
pop
sbb
mov
mov
in
jne
push
sbb
jno
scas
push
cwtl
push
inc
lcall
mov
andb
add
aas
push
dec
outsl
cmp
jecxz
stc
push
loopne
sbb
or
jp
into
mov
in
shr
xor
xor
jge
cmp
mov
test
lret
into
jno
out
mov
push
sahf
xor
out
jne
add
daa
sub
dec
ds
aaa
in
push
push
fs
arpl
inc
call
in
repz
mov
and
push
dec
movsl
mov
dec
cltd
inc
and
repnz
or
fwait
mov
pop
sbb
add
aad
cmp
mov
mov
rorl
mov
iret
pop
sbb
mov
imul
stc
fiadds
insl
popa
shrl
popa
push
jnp
pop
sub
mov
addl
push
mov
fsubs
adc
push
xlat
ds
imul
mov
outsl
and
push
jne
push
adc
ret
jns
cmp
aam
mov
bound
dec
leave
or
jno
jno
jge
stc
or
sub
sti
outsl
test
pop
xlat
xchg
jl
cmpl
dec
mov
push
xchg
mov
adc
movsl
sbb
pop
fwait
push
addr16
jmp
iret
xchg
je
es
shlb
push
loopne
pop
sbb
in
mov
in
sbb
inc
rcr
cmpl
jge
mov
and
fwait
fs
aas
push
jmp
push
sbb
cmpsl
fwait
jp
add
das
lret
test
out
pop
fldenv
fwait
fwait
jl
push
stos
incb
jecxz
fcomps
push
out
jne
mov
add
mov
lahf
insl
aas
or
dec
int
mov
loop
ret
jmp
mov
xor
sub
arpl
test
lret
xchg
outsl
nop
sub
adc
inc
mov
inc
in
fbld
xor
imul
lods
jns
jge
push
scas
aam
mov
in
cld
in
cmpsb
sbb
idiv
testb
mov
xchg
pop
mov
hlt
test
fldcw
xchg
xchg
xchg
jge
xor
and
jg
sahf
xchg
jecxz
int3
push
push
pusha
ljmp
and
push
test
cmpsl
ficoml
mov
xor
jge
int
mov
leave
lahf
xor
push
mov
outsl
mov
imul
pop
imul
outsb
test
pop
jp
dec
sub
cli
leave
andb
shll
cmp
push
mov
sbb
addr16
pusha
and
jnp
pop
mov
pop
jge
pop
xor
loope
mov
xlat
in
ljmp
sub
cmpsl
out
jle
and
leave
mov
data16
xchg
testl
lret
ret
das
in
divl
jmp
xchg
dec
outsb
mov
out
adc
test
or
aas
pop
jmp
mov
mov
out
inc
xchg
mov
hlt
push
push
or
cltd
in
jb
bound
or
push
jl
pop
test
jno
fcomps
rorl
aas
ds
pop
sbbb
mov
nop
pop
ja
xchg
lret
add
mov
aam
adc
rorl
adc
andl
inc
push
mov
fnsave
sti
lret
movb
dec
jns
xor
jb
repz
pop
out
ljmp
daa
inc
mov
jmp
mov
xor
cmp
js
push
and
fildl
adc
sti
jnp
cmp
insb
or
xor
fs
addr16
sub
mov
xchg
loop
arpl
sti
add
fdivl
pop
icebp
in
adc
subb
cmpsl
mov
sbb
mov
sbb
lods
jl
push
cmc
scas
add
sub
pushf
fucomp
adc
sub
test
and
sahf
mov
in
dec
in
lahf
jno
scas
addl
les
cli
add
inc
imul
mov
inc
jb
cmp
in
icebp
imul
jecxz
pop
pop
pop
popa
inc
mov
scas
out
or
or
ss
mov
jbe
cltd
xchg
lods
jle
outsb
cmp
das
mov
push
fwait
pop
pop
ljmp
ja
inc
push
int3
jg
addr16
dec
test
pop
push
cs
fisubrl
push
or
ja
push
std
fdivrl
popa
jle
or
sbb
das
dec
stc
test
jmp
push
gs
add
cmp
push
lock
xor
jl
dec
sub
mov
call
sub
xchg
jne
loop
outsl
sbb
or
aas
in
push
or
in
lcall
leave
mov
jb
mov
jno
add
aam
ljmp
add
lahf
cmpl
in
ljmp
xchg
fwait
inc
pusha
ret
mov
nop
push
jbe
sub
push
xchg
xor
int
xor
inc
xchg
xor
imul
fidivrs
test
dec
push
pushf
push
xor
add
cmp
cmp
aad
icebp
std
sbb
lcall
mov
xor
scas
cmp
cmp
or
sub
into
jnp
push
lock
pop
cmpsb
aas
daa
push
push
mov
sub
ds
cmc
mov
mov
xchg
push
mov
mulb
xchg
cmpsl
cmp
ss
push
mov
pop
out
fstps
mov
pop
or
inc
cmpsb
push
shrb
cs
inc
inc
cwtl
js
nop
movaps
adc
mov
inc
frstpm(287
aas
jo
mov
mov
gs
mov
or
dec
ss
fwait
int
lret
data16
xor
jmp
cwtl
lcall
cmpl
push
nop
sar
cld
mov
adc
sbb
sub
cld
leave
cmp
mov
inc
std
outsb
ja
cwtl
ljmp
add
xlat
fadds
call
mov
mov
fistpl
test
xorl
aam
add
dec
mov
aaa
or
test
out
sub
inc
cwtl
sub
inc
adc
mov
add
pop
push
ror
divb
push
test
mov
add
cmpsl
and
roll
or
dec
fstpt
or
inc
cmpsb
push
cld
insb
jnp
mov
jg
pop
jb
adc
insl
add
pop
or
dec
divl
shll
pop
push
dec
repnz
pop
sub
nop
aam
out
ja
mov
daa
sbb
out
push
inc
adc
fidivrl
int3
xchg
add
hlt
mov
std
jbe
and
mov
push
mov
in
mov
cmpsb
push
cli
pop
adc
push
fistpl
js
fisttpl
scas
pop
mov
and
daa
addb
cs
mov
push
scas
shrl
sub
outsb
mov
outsl
movl
add
lock
ss
sbb
fcmovnbe
jae
pop
loop
xchg
aad
loope
sbb
popf
jle
mov
push
jg
ds
sub
xchg
popa
push
mov
mov
ffree
dec
in
inc
and
fistl
sbb
inc
arpl
dec
mov
bnd
cltd
ds
pusha
inc
stos
fimull
orb
push
inc
addr16
iret
ljmp
pop
cmpsl
push
pop
dec
pop
aaa
push
cltd
stos
dec
xor
scas
es
and
dec
shl
ror
movsb
mov
mov
jo
pop
loop
out
out
ljmp
xor
pop
add
cmp
repz
int
popf
add
mov
insb
push
aas
stc
lcall
sbb
sti
cmp
gs
sbbl
rcll
das
das
loopne
pushf
or
out
pop
sub
fptan
ss
jp
push
or
call
ds
dec
mov
sbb
cmp
aad
test
in
decb
inc
sbb
bound
add
ja
ficompl
movhps
cmp
pop
inc
scas
sbb
loope
mov
pop
xchg
sbb
pushf
push
or
cmp
pop
jne
call
gs
mov
cs
hlt
sbb
clc
sbb
imul
pop
pop
loopne
lahf
fwait
push
cwtl
xchg
jne
arpl
out
stc
add
mov
xchg
adc
jecxz
pop
arpl
xlat
cltd
and
mov
xchg
in
inc
test
int3
dec
and
das
fldenv
jne
ja
xchg
and
sbb
leave
cli
mov
movsb
jbe
outsl
pop
dec
mov
xchg
ljmp
shll
sub
out
jle
pop
xchg
adc
cmc
sbb
xchg
mov
jb
dec
mov
popf
mov
ja
cmp
mov
cltd
lahf
data16
pop
or
imul
mov
inc
add
xchg
jp
stos
cmp
push
leave
fucom
and
inc
fldenv
jle
mov
cmp
inc
mov
lods
ss
add
jno
mov
sub
enter
sub
fwait
add
mov
xchg
pop
iret
or
js
scas
mov
popf
psllw
data16
or
lret
push
data16
ret
repz
xlat
sub
or
fisttpl
add
rorb
push
mov
dec
outsb
push
cs
jmp
mov
mov
adc
in
in
pop
ja
mov
lock
nop
cld
jns
imull
add
inc
jnp
jb
sbb
and
test
add
dec
arpl
cmpsl
cmpl
xchg
lcall
xchg
and
lds
lahf
mov
lcall
nop
or
jne
xchg
push
inc
add
and
inc
dec
sub
movsb
stos
adc
fsubrl
inc
xchg
xor
repnz
jnp
dec
xor
add
pop
push
movsl
jns
idiv
inc
push
sub
cld
imul
xchg
hlt
cld
out
jae
pop
and
pusha
xchg
ds
dec
and
jo
pop
movsb
je
sbb
sbb
sbb
test
or
jl
aad
ja
shrl
push
dec
push
test
dec
rolb
sub
adcl
sarb
sbb
int3
sbb
ljmp
notl
inc
xlat
aad
enter
mov
adc
inc
popf
gs
adc
cmp
push
cmpsl
dec
dec
push
mov
hlt
or
dec
cmp
out
push
movsl
dec
daa
and
divb
mov
add
pop
shll
in
jno
xlat
and
enter
inc
imul
inc
dec
test
ret
outsb
dec
andl
js
ljmp
lods
insb
add
data16
fxch
sub
lcall
aam
xor
iret
mov
xor
xor
test
sub
mov
cmpl
nop
jmp
int
jnp
sti
mov
push
sub
jl
and
popf
and
sub
and
jp
cwtl
ds
cmpsl
imul
ffreep
xor
xchg
add
leave
jmp
mov
iret
out
inc
stc
les
rorl
jecxz
sbb
jp
aaa
pop
or
jns
stc
in
mov
daa
out
popf
or
lret
and
push
jg
sbb
cmp
outsb
fcoms
adc
iret
xchg
cmpsb
lahf
insb
or
lock
pop
inc
shlb
inc
mov
sbb
mov
add
xor
outsl
insb
mov
and
loope
pop
or
pop
das
ja
dec
pop
xlat
cwtl
lahf
insb
cmp
movsb
iret
stos
int
imul
ds
movl
out
insb
subl
fldenv
outsl
hlt
cmpsl
mov
sub
sbb
mov
dec
adcl
push
xor
hlt
test
nop
je
aaa
scas
pop
sbb
out
nop
push
add
lcall
ja
mov
popa
pop
fildl
mov
shrl
lahf
mov
inc
sub
add
dec
jp
add
enter
test
hlt
leave
hlt
push
mov
aaa
xorl
mov
jne
rolb
movsb
add
add
add
inc
sbbb
dec
sahf
or
or
push
repz
mov
push
int
xchg
stos
sub
mov
mov
or
mov
cmpb
shll
mov
push
mov
xchg
push
or
aas
and
dec
push
loopne
popa
jns
lcall
repnz
int
das
enter
xchg
adc
mov
clc
cmp
daa
mov
mov
sub
mov
or
sbb
cmp
fsubr
pop
mov
divl
sbb
popa
xchg
out
xor
lahf
roll
push
repz
xor
dec
data16
sbb
stos
mov
xchg
push
orl
bound
and
fsubp
adc
js
arpl
loope
ret
dec
cmp
rclb
or
movsb
and
loope
cwtl
pop
movsl
fistpl
jno
mov
es
cmpsl
xchg
mov
mov
jae
lret
and
mov
jge
testl
jo
in
push
and
xchg
and
mov
fwait
dec
pusha
pop
adc
mov
mov
adc
push
ret
push
insl
jnp
popf
mov
sbb
sub
push
add
xchg
mov
mov
jecxz
mov
ret
lods
xor
ljmp
lcall
into
pop
fcoms
lock
sbb
push
add
xor
xorb
repz
fdivrs
out
out
ds
dec
mov
adc
xchg
loopne
aam
imul
data16
into
add
loop
sub
loopne
std
pop
addr16
call
inc
mov
test
pop
push
sbb
fwait
nop
shrb
pop
mov
sbb
dec
sti
jno
jge
mov
hlt
mov
cmpb
mov
test
in
ljmp
mov
jne
iret
out
adc
xchg
sbb
fisttpl
mov
testl
mov
hlt
out
insl
or
and
pop
mov
int3
dec
lds
out
loope
popa
enter
mov
mov
ja
add
jmp
push
out
cwtl
push
addr16
int
lret
adc
mov
dec
inc
ficompl
enter
push
dec
and
adc
push
mov
xor
mov
and
or
xchg
fisubrs
add
inc
jbe
shl
mov
loope
jg
daa
inc
cltd
sti
xchg
ficoms
jno
std
pop
mov
sbb
sub
sub
cmp
mov
push
push
mov
fidivrs
icebp
or
cmpsb
popf
xchg
mov
lods
rorl
adc
or
pop
adc
dec
mov
shufps
xor
inc
test
mov
mov
jbe
adc
adc
out
repz
cli
mov
popf
lds
mov
mov
daa
dec
test
insl
and
jae
subl
mov
mov
mov
push
push
jecxz
xchg
int3
call
push
das
push
rorl
push
fs
daa
fists
sbb
lret
shrl
out
pop
mov
add
xchg
out
data16
int
in
mov
adc
mov
call
jno
dec
mov
push
jns
repz
cwtl
mov
xorb
addl
movsl
pop
jne
sbbl
xor
dec
pop
push
lahf
lea
pop
js
mov
imul
mov
es
mov
adc
aaa
jne
cs
mov
shll
sti
inc
xchg
lods
andl
push
push
add
inc
cltd
xor
cld
rcll
inc
iret
roll
push
jne
cmpsb
jg
sbb
pop
push
dec
push
dec
xchg
repnz
test
gs
mov
jae
das
and
xor
and
scas
mov
ljmp
push
std
and
int
sbb
sub
rclb
dec
insb
lahf
and
out
incb
push
jnp
or
rcr
mov
int3
dec
imul
cld
mov
imull
outsb
pop
xor
cmp
pop
pusha
subl
ja
lds
dec
add
inc
pop
fdivl
movsb
aas
mov
sbb
xchg
ret
xor
mov
jne
mov
pop
pop
adc
mov
ljmp
cli
ja
ucomiss
pop
addr16
dec
and
xchg
inc
mov
push
out
xor
mov
inc
bound
dec
and
xor
mov
mov
cmp
jmp
rclb
cli
ss
push
fistpl
mov
xchg
xchg
test
dec
ret
and
inc
sub
test
nop
push
out
ror
inc
xlat
mov
test
cmp
sub
add
shlb
je
bound
lcall
jge
rorb
push
adc
repnz
and
fs
cmp
out
cli
into
call
cs
fistpll
xchg
fsubl
movsb
mov
adc
das
ljmp
out
shrb
popf
mov
std
pop
or
test
pop
shrb
sub
popa
adc
fldcw
mov
xchg
sub
mov
lock
in
inc
push
std
push
sub
pop
sbbb
iret
mov
cmp
mov
cmp
pop
pushf
push
push
dec
mov
mov
push
sbb
int
repz
fcoms
mov
inc
ljmp
inc
xor
sbb
mov
and
int3
js
shlb
push
jp
xor
pop
inc
mov
fidivrl
das
xlat
inc
mov
xchg
mov
pop
xchg
test
jns
and
or
lock
lds
loopne
mov
inc
sbb
ret
jo
lcall
xchg
fiadds
fadd
int3
mov
sbb
pop
cmp
mov
insl
cmpl
jge
pop
xor
test
fildll
inc
pop
mov
je
pop
mov
mov
in
pop
pop
data16
aam
in
mov
lods
pop
jle
cli
mov
bound
xchg
out
sarb
incl
out
loope
popa
lods
mov
mov
js
mov
sub
bound
push
xchg
rorl
inc
scas
xchg
leave
mov
xchg
icebp
cli
jne
pushw
ret
mov
pop
xchg
xchg
mov
cmc
pop
dec
cmc
sbb
popf
mov
pop
xchg
mov
mov
cmp
mov
arpl
jle
mov
xchg
rcrl
cmp
aad
popf
inc
out
pop
repz
bound
mov
or
mov
jg
imull
mov
push
xchg
inc
out
push
inc
movsb
imul
lcall
int
dec
push
push
mov
sbb
cmp
imul
pop
jno
sti
lock
mov
ss
das
mov
into
inc
push
cmp
jno
or
xor
popf
mov
push
mov
push
or
lahf
mov
mov
pop
cmp
mov
bound
in
fistps
pop
inc
negl
dec
sbb
sbb
daa
leave
leave
inc
push
lock
pop
push
and
mov
rorl
into
imul
ret
push
mov
or
jns
push
insl
pop
mov
sbb
imul
ljmp
ret
push
sub
lret
test
shrl
shl
pusha
in
imul
imul
xchg
xor
lret
mov
mov
mov
fs
int
or
push
leave
test
push
cld
int3
imul
add
pushf
fistpll
sbb
or
mov
cltd
sbb
jnp
shl
jne
sub
enter
sub
and
jmp
lods
leave
sbb
and
sub
push
mov
mov
je
sub
push
out
add
cli
and
inc
fstpl
mov
out
pop
fninit
cltd
jb
fisubrl
ficoml
clc
xchg
dec
fisubrs
rcrl
mov
adc
jmp
cmp
enter
mov
adc
push
inc
sub
dec
scas
xchg
cld
jecxz
popa
xchg
mov
rcrl
in
test
pop
jno
mulss
jb
hlt
mov
adc
inc
mov
cmpsb
dec
add
dec
adc
sbb
outsb
iret
and
inc
or
cwtl
add
mov
mov
lcall
jmp
dec
pushl
mov
mulps
test
imul
jnp
pop
imul
mov
iret
dec
es
add
scas
fwait
mov
pop
sbb
pop
in
pop
jl
mov
xlat
decl
idiv
pop
mov
cmp
addl
sbb
sub
xchg
jbe
add
or
adc
mov
xlat
inc
and
js
add
jl
xor
fisubl
call
out
out
dec
sub
sarl
add
roll
mov
int
cmpsl
xchg
shll
in
cmp
scas
sbb
xor
out
movsl
lret
jb
sub
lock
jno
mov
pop
dec
imul
xor
fwait
mov
lods
push
test
cmp
pop
sub
es
testl
fsts
mov
repz
gs
jmp
and
xchg
cwtl
sbb
xlat
mov
push
mov
cld
mov
mov
aam
xchg
imul
mov
lods
outsb
fdivrl
mov
lret
movsb
inc
mov
inc
sbbb
push
mov
jnp
and
mov
xor
mov
call
jnp
or
stos
sub
lods
in
or
mov
add
sub
out
mov
ret
outsl
fildl
and
push
pop
aad
inc
je
rol
out
push
out
in
ljmp
imul
call
xchg
rcll
mov
loopne
sub
stos
dec
inc
rcrb
push
ljmp
je
jns
gs
in
add
rcrb
sbb
pop
sbb
adcb
mov
or
sub
jge
fbstp
mov
in
jle
das
scas
xchg
cmc
sbb
and
adc
mov
mov
insb
ja
xor
push
idivl
fs
int3
cli
adc
add
cld
ss
sbb
sbb
push
sbb
or
mov
in
movd
sti
in
lds
xchg
push
std
and
insl
dec
inc
mov
pxor
mov
adc
xchg
movsb
in
and
gs
stos
xor
cmp
arpl
dec
divb
scas
xor
test
in
inc
scas
xchg
add
pop
fcoms
mov
and
cmc
int3
jo
xchg
leave
movsl
lea
lea
pop
inc
mov
push
pushf
loope
push
jge
mov
jb
mov
xor
iret
repz
xor
rol
mov
ret
sub
imul
xor
test
mov
pop
inc
fdivrl
filds
aad
mov
cmp
sbb
addr16
pusha
mov
xchg
inc
rcrb
jbe
ficompl
js
imul
or
cwtl
sub
mov
push
mov
dec
mov
sbb
mov
cmc
je
shll
inc
xchg
repz
pop
ljmp
ret
add
ds
xchg
push
xchg
adc
adc
xor
xchg
xchg
jp
sub
enter
inc
dec
fcomps
ss
cld
mov
addr16
pushf
and
es
push
adc
rcll
ret
addb
mov
lret
push
rcrb
inc
addr16
or
clc
roll
push
pop
pop
movl
adc
shl
xor
movsl
sarb
stos
sbb
fwait
push
push
clc
inc
add
pop
sub
pop
mov
jnp
js
das
fildll
int
jns
aaa
cwtl
shlb
or
std
sbb
dec
pop
cmpb
lock
scas
or
jge
sahf
jge
cltd
stc
test
out
shlb
jge
ret
jecxz
jnp
movsb
ds
inc
repnz
scas
adc
enter
mov
cmp
aas
clc
andb
mov
dec
push
test
loopne
lock
mov
popf
out
mov
mov
out
jno
and
and
cmp
xor
mov
jl
cmp
or
add
or
lcall
stos
lret
xchg
xchg
les
lods
pop
inc
pop
cmpsb
and
in
xchg
push
mov
mov
rorl
xor
xor
push
aad
sub
divb
mov
cld
sub
mov
pop
mov
shlb
jmp
ss
and
fstpt
in
adc
dec
inc
adc
mov
sbb
mov
cli
loopne
pop
sar
inc
pop
mov
mov
mov
adc
scas
pop
lea
imul
mov
sub
and
arpl
addb
cmp
nop
jnp
leave
dec
scas
mov
cmc
xchg
jp
aas
stos
rolb
pop
popa
cmp
lret
add
jnp
jne
sub
je
sbb
vrsqrtss
loop
sub
or
add
popf
mov
je,pn
mov
dec
push
sbb
cmp
and
push
cli
test
lcall
cwtl
mov
lds
dec
mov
jae
std
mov
ja
mull
add
xor
sub
stc
loop
je
xor
pop
mov
outsl
sub
insb
adc
xorl
and
gs
xchg
rolb
out
add
rorl
insl
fs
mov
xor
mov
cmp
xorb
hlt
fdivl
or
mov
pop
es
out
sbb
xchg
push
pop
inc
std
lret
xlat
stc
xor
aam
jle
repnz
sub
mov
mov
sar
in
add
stc
xchg
pushf
dec
cmc
jl
pop
sbb
pop
rol
add
cmpsb
int3
and
repnz
stc
push
dec
popf
repnz
ljmp
jae
and
out
pop
push
sub
outsl
add
push
in
scas
jmp
int
add
fidivl
mov
jmp
std
mov
mov
imul
pop
fdivs
fsubrp
cld
icebp
movsl
out
jbe
push
mov
imul
push
fldenv
fdivrl
mov
jp
movsl
mov
add
lret
fiaddl
mov
fwait
cmp
lahf
ret
xchg
add
and
and
out
rorb
popf
xchg
add
es
bound
out
mov
cmp
shr
pop
adc
xlat
xchg
and
fwait
divb
rcl
fwait
cmpsl
imul
xchg
popf
jle
add
cli
movl
mov
scas
pushf
nop
jl
pop
mov
fnstenv
xorb
mov
fmul
insb
mov
adc
fcoml
jmp
cmc
lock
xor
std
cwtl
out
xor
inc
add
sub
aaa
inc
shlb
cmp
fisttps
fisubrs
jp
out
xchg
cli
push
shll
cmp
aad
scas
cmc
int
lret
fistpl
outsl
xchg
lret
mov
or
and
xchg
test
adc
pop
push
dec
imul
cwtl
mov
mov
outsb
lods
mov
imul
dec
dec
push
push
or
shlb
js
mov
sub
dec
pop
dec
imull
lret
cli
dec
sub
outsb
xor
call
push
cs
mov
addb
popf
lods
jl
fs
int
push
flds
outsb
ss
pop
orb
pop
or
in
mov
movsl
add
jle
jno
in
mov
dec
push
pop
fidivs
shrl
push
dec
and
loop
mov
inc
aas
cwtl
jno
mov
jmp
out
mov
mov
test
dec
ficoms
rorb
cmp
push
push
movsl
bound
std
adc
adc
push
adc
hlt
cld
and
mov
icebp
push
les
push
xchg
pop
dec
fcmovne
paddb
pop
mov
ljmp
xchg
adc
cmp
arpl
cmpsb
xor
fldt
subb
test
movsb
lds
mov
loope
and
dec
cmpsb
je
pop
and
and
jb
out
jae
pop
imul
cmc
or
jo
inc
push
mov
jge
cmp
and
jecxz
pop
or
inc
or
dec
or
stos
shl
dec
or
mov
shlb
ret
xchg
mov
or
out
ficompl
dec
in
stc
cmp
sbb
outsl
push
mov
sbb
jg
push
int3
xchg
jecxz
int
orl
push
mov
pop
test
jnp
roll
add
jg
push
pop
jb
mov
add
aam
inc
popf
pop
cmpsl
imul
or
cwtl
mov
popf
mov
lea
xchg
rcll
lret
xchg
shll
inc
int3
js
sti
fwait
in
xchg
nop
add
sahf
jl
push
out
sahf
mov
into
xor
fstpt
imul
andl
fcoml
ljmp
stos
or
mov
popf
decl
pop
mov
mov
imul
dec
xchg
xor
popa
das
pushf
enter
sub
cmp
dec
jle
pop
push
cmp
jecxz
icebp
and
jne
add
lds
dec
lock
push
adc
jo
lret
sbb
ret
xor
in
xchg
mov
xchg
inc
pop
pop
ljmp
pop
and
add
and
mov
jg
or
std
gs
ljmp
mov
sbb
cmp
aad
hlt
push
mov
push
cmp
stc
stos
mov
lock
iret
add
dec
jno
popa
mov
xchg
hlt
loop
dec
and
mov
out
scas
mov
push
pushf
test
mov
mov
shlb
ss
je
ljmp
in
mov
lods
push
rcl
es
sete
insb
cmp
data16
call
jp
lea
mov
out
inc
jno
inc
int3
outsl
cli
or
lods
xor
jmp
sbb
popf
or
xor
push
out
adc
dec
cli
sbb
push
and
push
inc
xor
adc
xchg
xchg
fs
push
fdivp
mull
aas
xor
inc
popf
or
dec
mov
pusha
add
insb
mov
sub
stos
call
ja
xor
mov
and
inc
add
gs
lret
inc
mov
pushf
mov
into
and
adc
add
cli
mov
jb
call
lds
pop
jne
inc
cmp
jo
add
lods
jno
clc
out
jae
sub
scas
xor
cmp
mov
lock
out
aam
jne
sbb
out
pop
add
xchg
lcall
push
repz
mov
das
sti
lea
pop
sbb
lahf
xchg
sub
aas
jecxz
mov
sbb
js
and
in
cmpsb
pop
fwait
or
pushf
dec
enter
xor
jecxz
repz
xchg
test
jb
fldenv
push
mov
aas
xor
inc
popf
outsl
icebp
jp
cmp
push
out
dec
mov
push
push
addr16
cmp
adc
dec
sub
push
scas
push
repz
inc
imulb
pushf
xlat
insl
jno
cmp
jno
int
nop
xchg
mov
int
cltd
pusha
dec
mov
mov
aam
aas
cld
daa
aad
jb
pop
test
adc
lds
lcall
sub
xorb
add
std
arpl
ss
jg
stos
jmp
mov
xor
jb
xchg
add
mov
nop
and
loopne
and
outsl
xor
addr16
and
jg
jb
add
repnz
scas
jb
mov
in
test
aas
imul
jbe
inc
sahf
mov
mov
push
int3
mov
xor
mov
inc
mov
inc
test
movsl
sbb
pop
and
jne
cmp
mov
jmp
push
lods
pusha
jge
aaa
push
mov
aam
popa
jmp
pop
jnp
pop
pop
rcpps
cmp
sub
mov
xlat
cs
push
fisttpl
aas
cli
push
jl
into
and
popf
push
das
adc
addr16
xor
or
dec
push
push
jle
mov
adc
pop
push
adc
adc
rcrb
test
mov
xlat
push
pop
cmp
addl
pop
movb
pushf
push
sbb
sub
inc
fucom
mov
scas
fcmovnb
mov
pop
xor
hlt
int3
cwtl
dec
cli
mov
mov
fdiv
dec
or
push
or
mov
jl
rcl
lea
iret
scas
cli
out
leave
push
inc
and
pop
xchg
cltd
cmpsl
mov
mov
mov
stos
pusha
dec
or
pop
ror
es
mov
in
adc
call
xchg
jnp
sar
sbb
cmpsb
int3
sub
mov
iret
lds
test
xor
xchg
cmp
jnp
inc
xchg
adc
jmp
dec
mov
lds
and
insb
adc
xor
mov
or
lock
jp
mov
data16
inc
imul
mov
and
dec
dec
pushf
mov
das
mov
gs
gs
pop
jae
fimull
icebp
ret
shr
and
mull
sub
out
addr16
test
repnz
lcall
add
icebp
pop
or
xor
sub
outsb
cmp
call
mov
mov
inc
inc
pop
push
xor
dec
adc
and
jo
fbld
aad
inc
das
aam
adc
in
hlt
imul
xchg
jl
loope
xchg
pop
mov
aas
jbe
adc
pop
movb
cmp
sbb
cli
xchg
lahf
cld
push
sub
aad
or
scas
mov
andl
xchg
pop
pusha
adc
ret
sub
repz
pop
and
xor
xchg
fisubs
mov
jle
sub
xchg
fldl2e
cs
dec
clc
div
neg
inc
fdivrs
iret
es
inc
pop
mov
imul
xchg
mov
xor
inc
les
push
mov
push
out
gs
jne
push
cmp
and
icebp
sbb
icebp
ds
pusha
jg
loopne
mul
in
dec
mov
jmp
add
loopne
sub
ret
in
mov
mov
pop
mov
sahf
adc
sbb
fsubrs
in
cmp
jg
mov
mov
cmpsl
inc
mov
pop
lock
fiaddl
or
stos
je
outsl
mov
sti
out
fstl
repz
mov
sub
mov
outsb
lds
mov
test
mov
and
inc
inc
inc
inc
daa
je
pop
jmp
inc
xchg
mov
scas
mov
mov
cmp
outsb
cmc
lea
mov
shr
daa
daa
addr16
and
lret
fsts
aaa
jbe
sub
inc
push
mov
xor
adc
lods
pushf
lcall
int
sbb
and
xchg
push
sbb
push
loop
mov
fldl
cmpb
lods
lret
call
fstps
popa
add
mov
xchg
enter
sbb
in
inc
mov
inc
jnp
sti
cmp
enter
push
ret
xor
inc
call
les
push
div
lret
dec
add
insb
loope
dec
mov
mov
mov
scas
popf
sti
in
int3
movl
adc
or
les
pop
adc
es
lea
jg
das
sub
lea
fdiv
subb
shll
sub
adc
xlat
lret
aaa
aas
stc
int3
es
jae
sbbl
adc
lock
mov
ljmp
dec
jbe
dec
ret
xchg
xor
adc
mov
cld
add
lret
sbb
fsubr
inc
inc
aad
inc
sub
cmp
sub
sti
jge
and
pop
lcall
dec
mov
dec
sar
cltd
lock
push
mov
mov
ss
loop
enter
lcall
mov
mov
lods
sub
lret
cmp
and
sub
mov
adc
faddl
sub
sbb
dec
push
mov
xor
adc
in
mov
hlt
stos
xor
push
enter
movsb
enter
dec
scas
test
stos
mov
mov
shrl
clc
or
mov
jno
enter
out
jp
daa
push
xlat
xchg
cwtl
lods
insb
mov
mov
sbb
in
popf
leave
pop
bound
les
mov
xorb
mov
jl
stos
dec
pop
jbe
ret
out
dec
lea
clc
xchg
jg
mov
jmp
pop
les
inc
repnz
cli
fwait
mov
into
jmp
lods
or
les
test
movsl
pop
in
mov
xchg
mov
adc
das
adc
into
or
pop
cmp
add
lds
in
unpcklps
sti
xchg
jle
cmp
adc
dec
cmp
or
or
xor
cli
aas
rcrb
xchg
fdivl
ret
xor
fldt
pop
fldt
pop
hlt
xorl
cld
or
lods
mov
mov
int
xor
fcompp
loope
xchg
movsb
pop
dec
xchg
sbb
sub
sub
xchg
iret
push
add
inc
dec
mov
std
call
outsb
and
pop
mov
pop
xor
imull
pop
std
xchg
mov
pop
jg
icebp
jle
jns
xchg
cmovb
sub
or
dec
idivb
outsb
cmpsb
addb
add
and
fs
mov
imul
inc
pusha
add
lods
out
xchg
push
fadd
add
daa
pop
mov
loope
insb
cltd
cli
cmpl
adc
xor
and
xor
out
mov
loope
xchg
xor
out
push
out
mov
filds
jmp
pop
mov
out
rorb
idivb
out
mov
bound
push
pop
stos
ret
je
pop
pusha
in
push
ja
xchg
ja
movsl
pop
arpl
lcall
dec
ja
lods
adc
imul
jp
xchg
cmpsl
in
xor
lods
out
sbb
es
dec
mov
jge
aaa
cld
lock
jbe
xor
loop
mov
int
cli
out
ljmp
aam
xchg
mov
gs
sbbl
arpl
mov
sahf
or
dec
jae
loopne
aaa
pop
lds
outsl
ret
jb
dec
icebp
arpl
nop
cmp
push
and
fs
and
mov
jo
dec
in
enter
pop
leave
push
push
iret
sti
popa
xor
mov
or
popf
inc
aam
ret
cs
mov
push
mov
xchg
cli
mov
sub
jb
push
push
cltd
das
cli
shl
dec
push
adc
sbb
dec
repnz
ret
ret
lods
cmc
fbstp
or
lea
adc
pop
dec
test
push
in
mov
mov
imul
ret
enter
add
pop
jg
xchg
and
sub
daa
lods
mov
jno
adc
xchg
lods
popf
sub
in
leave
dec
and
push
inc
mov
jmp
xchg
xchg
pmovmskb
pop
xor
mov
shlb
sahf
lret
stos
imul
jmp
ss
test
test
rcrb
mov
inc
test
xchg
sub
insl
cmp
mov
divl
cmp
lahf
paddsb
ljmp
clc
jge
inc
cmp
ud2
cmpsb
in
xor
popl
push
xchg
inc
mov
or
addr16
clc
loopne
mov
rclb
call
adc
imul
mov
dec
xor
shlb
dec
lret
cmc
mov
outsl
pop
int
aad
or
add
sbb
inc
out
pusha
ss
ret
jl
stos
push
cmp
mov
mov
mov
mov
shl
jecxz
cmp
inc
jnp
movl
cmp
cs
mov
push
jbe
dec
loope
or
repnz
and
add
ret
sub
fisttpll
repz
fs
stos
push
cwtl
xor
sbb
sub
stc
inc
iret
test
lea
sahf
mov
mov
push
mov
mov
cmp
push
jg
pop
jno
mov
lea
add
cmp
add
fimuls
pop
movsl
ja
mov
arpl
mov
loope
xor
add
xor
das
adcl
add
push
dec
clc
fsubrs
scas
xlat
das
lahf
push
repz
inc
adc
mov
dec
daa
hlt
mov
mul
dec
sub
jp
ss
imul
lcall
in
sbb
adc
lds
cs
out
xor
pop
pusha
inc
addr16
cld
inc
bnd
test
icebp
loop
mov
jmp
xor
pop
jmp
dec
push
popl
inc
adc
or
sahf
popf
cltd
icebp
repnz
loop
jb
outsb
inc
adc
jnp
ds
cmp
mov
cmpsb
mov
add
jg
xchg
dec
sarl
fcoms
dec
pop
xchg
lods
std
movsl
or
sub
push
out
ljmp
movsl
mov
negl
sub
add
cwtl
enter
and
cmc
mov
les
fidivrl
jnp
int
repnz
pop
pop
cli
imul
sti
lcall
test
imul
arpl
out
pop
jns
inc
cwtl
pop
sub
cmpb
das
push
repnz
mov
call
stos
insb
sbb
repz
jmp
stos
adc
dec
xor
fsubp
arpl
dec
dec
out
and
fdivrl
pop
lods
mov
cs
push
lds
dec
cli
outsl
or
cmpsb
mov
mov
push
xor
mov
mulb
inc
jmp
ds
adc
mov
sbb
repnz
adc
mov
outsl
sbb
or
sub
add
in
mulb
out
mov
inc
sti
cltd
cmp
repz
rcrb
lds
dec
jp
into
push
out
add
aam
loope
arpl
pop
ss
jp
mov
mov
inc
inc
pop
or
jg
sub
dec
xchg
insb
loope
lods
dec
add
cmp
xor
out
fldenv
mov
popl
fidivs
pop
push
out
hlt
sti
mov
adc
mov
mov
fldl
int
xchg
ljmp
leave
and
fcmovnbe
in
das
cmp
cmp
fwait
pop
jge
push
dec
or
cltd
and
pop
mov
daa
mov
jp
imul
xlat
pop
pop
or
sub
leave
or
test
pop
lret
mov
mull
lea
scas
cmpsb
ds
mov
clc
addr16
inc
fmuls
xlat
repnz
lock
push
in
aad
insl
dec
dec
test
mull
fidivrl
lds
js
int3
scas
pop
fstp
push
mov
daa
roll
fildll
hlt
mov
rolb
mov
daa
jne
repz
bound
cmpb
icebp
mov
int
jbe
adc
xlat
or
movl
es
or
and
cmp
out
into
loop
out
mov
jnp
push
pop
push
cmp
add
sbb
mov
les
sbb
sbb
pop
shlb
dec
in
inc
and
adc
into
mov
lret
outsb
int
insb
test
and
pop
mov
mov
orb
insb
ljmp
in
icebp
dec
and
fmull
fisubrl
shlb
test
pop
iret
add
mov
jne
out
cmp
xor
push
cwtl
popa
adc
sti
aas
movb
imul
mov
lret
jecxz
outsb
or
push
fsubrl
jmp
and
sbb
into
aad
sti
int
insl
out
push
cld
scas
inc
sti
test
dec
inc
push
mov
loopne
ljmp
push
pop
aam
cld
into
dec
jno
aas
xchg
inc
int
or
mov
out
xor
ds
test
iret
ja
inc
push
xchg
cmp
rclb
ja
dec
xchg
ret
mov
lcall
test
push
repz
leave
inc
mov
fucomi
cmp
cmp
lds
aaa
insb
jle
cmp
mov
pop
scas
and
rol
jmp
inc
pop
sub
push
add
popf
mov
stc
xchg
dec
inc
fdivs
mov
push
and
jg
xor
jne
es
nop
lret
mov
mov
cltd
addb
jnp
inc
iret
dec
xchg
aaa
sub
sub
pop
ret
inc
xchg
or
push
xchg
or
jns
std
dec
push
sbb
sub
insb
cld
xor
mov
stos
sbb
in
xor
push
xlat
mov
push
sbb
daa
add
sbb
cs
add
cmc
ror
mov
roll
sub
sahf
adc
adc
out
nop
insb
roll
or
add
hlt
cmp
mov
std
inc
inc
icebp
push
movsl
pop
jns
les
orb
into
movsb
cmp
int3
push
sub
sti
xor
scas
call
push
sbbl
dec
jne
mov
xlat
int3
mov
scas
xchg
jmp
jb
pop
adc
out
ret
pushf
inc
iret
xchg
jb
sub
or
fisubl
and
mov
push
ret
clc
xorb
xchg
or
and
pop
lods
or
inc
imul
and
and
aad
mov
stos
pop
push
out
inc
xor
movsl
pop
std
pop
xor
lock
test
inc
add
test
cwtl
and
cltd
iret
push
inc
xchg
push
in
sub
xchg
pop
movsb
movsb
or
jecxz
pushf
jns
mov
hlt
popa
out
or
ljmp
mov
arpl
push
jp
or
lret
inc
mov
imul
pop
xadd
inc
aas
scas
loop
add
jp
dec
mov
popa
push
xchg
cmp
gs
cmc
fcoms
inc
lahf
adc
jb
int3
stos
out
out
sub
int
push
fcmovu
jp
xchg
mov
and
dec
adc
sbb
pop
test
shll
lea
inc
dec
lret
scas
cmc
notb
sub
lcall
pop
add
add
xor
fmull
xor
mov
adc
ljmp
lcall
jp
in
jle
data16
lcall
sub
inc
lret
mov
insl
loope
pop
rol
xchg
outsl
jmp
and
lret
test
push
cpuid
adc
clc
arpl
pop
outsl
push
xchg
sti
dec
xor
mov
jbe
push
sub
pop
out
xchg
fidivrs
loopne
mov
cwtl
mov
push
outsl
jp
xchg
push
jo
or
pop
inc
out
sbb
out
les
mov
dec
or
and
movsl
sti
dec
xor
cmp
test
xor
in
xor
shll
jl
jns
jl
sarl
scas
fcmovbe
data16
nop
mov
loop
and
call
add
cld
dec
jl
mov
add
popf
cmp
stc
inc
inc
pop
xor
lock
popa
fnstcw
addl
sahf
push
mull
adc
clc
sarb
mov
mov
mov
outsl
imul
dec
mov
shl
add
aad
pop
inc
jnp
sub
mov
or
or
mov
js
call
push
jo
push
std
xor
inc
jbe
jp
ds
jge
sub
scas
addr16
or
insl
and
lret
out
push
popl
das
add
outsb
sbb
sbb
lahf
repz
fidivs
popf
imull
dec
mov
fists
shr
mov
movsl
mov
test
jge
sbb
pop
adc
or
mov
adc
xchg
iret
fisttps
aad
pop
cmc
mov
lods
xchg
cmpsl
push
xchg
mov
iret
or
rclb
mov
xor
icebp
push
cltd
push
test
test
nop
sub
mov
mov
movsl
dec
mov
or
outsl
and
clc
and
scas
adc
enter
adc
inc
adc
sbb
stos
or
push
mov
cmp
rcr
ja
xchg
adc
jae
jnp
outsl
sub
mov
adc
std
sbb
cmp
pop
pusha
ficompl
push
mov
out
adc
sub
mov
mov
aad
hlt
ret
push
repnz
cli
incl
enter
dec
inc
inc
jg
rcll
rorl
popf
popa
push
xchg
push
fiadds
add
adc
adc
and
and
xor
cwtl
outsl
fldt
xor
mov
cli
and
push
push
jmp
xchg
addr16
mov
sbb
das
cmp
jo
or
pop
and
pop
ljmp
into
lock
mov
mov
lods
mov
jns
pop
cmp
cwtl
icebp
jge
sbb
cltd
into
mov
mov
cmp
lret
aam
xor
icebp
mov
add
ret
and
mov
stc
fwait
dec
jae
mov
rcrl
mov
fidivs
stc
jo
cld
jbe
enter
sbb
rcl
rcrl
rcl
jmp
adcb
sbb
cltd
push
out
or
fdiv
push
lea
gs
dec
lahf
data16
mov
add
dec
lock
sub
pushf
and
test
mov
sbb
les
ret
mov
inc
cmp
mov
dec
out
imulb
aad
jne
lds
add
xlat
cmp
cmp
adc
pop
or
addr16
fcoms
sarb
xor
lcall
addr16
js
dec
daa
stos
jp
imul
mov
inc
rorb
jnp
mov
movsb
adc
add
nop
fmuls
imul
jecxz
jne
dec
iret
les
ficoms
sbb
shrl
int
adc
push
xchg
mov
clc
inc
sbb
pop
xor
dec
scas
rorl
pop
or
mov
inc
insb
mov
popf
jl
mov
stos
push
decb
dec
sahf
lcall
mov
push
sub
int3
dec
hlt
mov
sbb
ret
out
pop
stc
jmp
pop
push
addl
or
sbb
xor
stos
pop
and
pushf
lahf
into
xchg
and
pop
mov
dec
xchg
pop
ret
bound
mov
jbe
scas
cld
or
push
pop
jle
stc
addr16
movsl
cmpb
dec
mov
xchg
mov
cs
outsb
inc
mov
push
sbb
leave
sbb
and
arpl
fsubl
xor
or
jge
push
and
xchg
sahf
mov
icebp
mov
mov
add
push
fisttpll
fsts
test
ret
lock
cltd
mov
jg
sahf
xchg
xor
dec
outsl
sub
or
fcoms
iret
push
popa
movsb
cmp
scas
pop
into
cli
stc
loop
or
sbb
in
lret
scas
cmp
adc
lret
xor
nopl
lods
clc
bound
call
jecxz
adc
pusha
dec
clc
in
pop
mov
cld
inc
pop
xor
jl
dec
mov
mov
xchg
jg
and
push
popa
jecxz
in
cld
jg
ja
or
scas
fsub
sub
adc
aaa
pop
inc
cli
cwtl
dec
cld
icebp
imul
push
subl
aam
repz
loop
xor
add
pusha
mov
sbbb
mov
xchg
in
inc
dec
scas
fcomps
or
and
sbb
sub
in
xchg
hlt
icebp
out
stc
in
movsl
sbb
in
lahf
pop
popfw
or
pushf
addb
lahf
into
pusha
jl
and
leave
scas
inc
jp
push
pop
data16
test
sub
mov
or
inc
or
jp
clc
movsl
pop
mov
int
int
push
jo
cmp
fmull
aas
fistl
fistl
repz
add
jae
cmp
shll
fadds
fdivr
or
pop
mov
ret
mov
pop
xchg
insl
lock
and
lods
jmp
lahf
mov
sub
push
adc
lret
addr16
test
jb
ret
dec
push
sti
or
or
push
mov
mov
inc
iret
jns
sbb
mov
jg
push
out
lods
aaa
mov
or
or
repz
notb
test
scas
jle
adc
dec
call
scas
and
pop
sub
loope
fwait
xor
movl
fildll
push
pop
mov
shr
cmpl
sub
mov
cmpb
leave
leave
fsubrl
fstl
sbb
lcall
cs
sarb
js
mov
push
cltd
mov
imul
js
test
sbb
add
xchg
cmpsl
das
pop
fmul
jl
add
stos
cmp
lahf
lea
ja
add
mov
arpl
popf
adc
xor
rclb
mov
pop
aam
inc
adc
dec
dec
and
adc
sahf
pop
sbb
lahf
icebp
adc
pushf
and
jge
daa
lods
jbe
nop
pop
lret
lret
dec
inc
jo
loop
nop
xchg
mov
rcrl
cs
adc
rorb
cs
or
xor
cld
iret
jbe
xchg
xchg
fimuls
add
cmc
sub
push
push
lahf
out
mov
mov
sub
pop
mov
outsb
dec
popf
ret
dec
icebp
mov
rclb
dec
outsb
dec
sub
fcoml
cmp
and
add
mov
mov
mov
push
sahf
add
adc
ret
data16
pop
ficomps
fidivs
sbbb
insb
cltd
add
sahf
out
nop
insl
sti
out
fwait
out
push
dec
aam
jne
jnp
xor
ja
adc
cmp
push
stos
mov
mov
sbb
or
decl
push
mov
incl
loope
pushf
jns
mov
jae
mov
testl
push
pop
add
inc
xchg
mov
hlt
fwait
cwtl
mov
mov
es
pop
ror
loop
xor
fcoml
sbb
cmp
xchg
cmp
mov
push
mov
in
mov
js
mov
inc
lock
fs
pushl
mov
nop
fidivl
cmc
or
xchg
fidivrs
push
cmp
adcb
pusha
mov
mov
cli
push
loope
inc
push
sub
sub
mov
mov
movb
inc
adc
fbstp
cmp
aaa
mov
in
pop
es
mov
xchg
jne
sahf
int
inc
hlt
pop
xor
in
lret
jecxz
xor
inc
jns
pop
mov
or
les
pop
xchg
loop
push
rolb
enter
testb
scas
cmp
aad
stos
ror
pop
adc
push
data16
jno
mov
popf
loopne
out
out
mov
mov
mov
mov
insb
int
in
aad
adc
shr
mov
scas
addr16
dec
or
mov
outsl
add
push
mov
neg
into
jbe
push
pop
and
mov
xor
jbe
mov
sub
pop
rcr
data16
scas
jg
xchg
adc
sub
mov
and
lahf
into
test
jae
mov
mov
imul
je
cmp
cmpsb
test
and
add
imul
mov
das
cmc
dec
nop
inc
lahf
push
fildl
lds
ss
and
dec
dec
dec
add
std
in
in
ret
stos
sbb
aas
mov
popf
cmpsl
lods
pop
push
add
popl
sub
and
scas
and
mov
pop
lds
movzwl
idivl
pop
sbb
mov
adc
xlat
sub
mov
in
mov
xlat
sbb
push
add
cmp
sub
mov
arpl
dec
xchg
xchg
inc
es
testl
mov
and
lret
mov
imul
inc
push
fiadds
and
frstor
out
add
mov
dec
pop
outsb
movsl
inc
repnz
ret
repnz
cmc
stos
fstps
out
lock
xor
inc
fcomps
push
mov
fldcw
sbb
arpl
push
iret
pop
sti
sbb
push
addl
pop
xchg
loopne
test
repnz
xchg
aam
sub
mov
ret
lock
addr16
dec
out
push
push
pop
pop
testb
mov
daa
inc
lods
mov
mov
inc
cmp
fs
das
pushf
movsl
xchg
pop
xchg
jnp
pop
aad
and
rcl
sbb
scas
in
dec
lret
fwait
jno
adc
dec
and
mov
aad
cmp
mov
pusha
test
sub
js
test
stos
cld
mov
pushl
scas
iret
ljmp
xchg
shlb
scas
and
sbb
test
and
andl
in
jbe
divl
ret
jl
xchg
inc
xlat
sub
out
pop
outsl
pop
je
and
adcl
jge
add
lahf
ret
xor
jae
xlat
jb
sub
imul
bound
pop
and
daa
dec
repnz
mov
das
fs
push
add
pop
dec
jbe
stc
clc
ljmp
inc
popf
aad
sbbl
loopne
xchg
xlat
mov
mov
jbe
adc
inc
push
andb
adc
das
stos
lcall
pop
fcompl
sub
ja
jne
add
in
cmp
divl
and
push
out
shlb
cmc
adc
push
xchg
stc
addb
add
shlb
mov
sbb
data16
ja
roll
add
dec
xchg
mulb
in
js
shlb
imul
lahf
cmpsb
dec
js
push
pop
mov
ficoms
adc
movsl
push
xchg
in
nop
push
jbe
sub
sbb
mov
push
pop
push
shlb
or
ds
inc
xor
jmp
jno
mov
xchg
jg
cwtl
or
je
pop
or
mov
adc
scas
sbb
stos
mov
xlat
dec
push
dec
ffree
data16
rcll
lret
push
xor
aam
fisttps
out
fildll
lds
ret
sub
outsb
push
insl
cli
outsb
lcall
sbb
out
rcrb
or
lods
insl
inc
int3
pop
ss
lock
xor
or
icebp
sub
in
xchg
ret
mov
push
icebp
mov
enter
push
out
iret
sub
in
fimuls
xor
inc
dec
cmpsb
pushf
out
jnp
xchg
xor
cmc
test
movsl
jae
sub
stc
inc
dec
je
test
gs
push
xchg
sub
inc
mov
cmp
fcomps
cmp
sar
aam
addr16
ja
adc
mov
lret
mov
and
jmp
stc
fidivl
fwait
sbb
scas
sbb
xor
pop
push
jo
jp
sbb
cmp
mov
jne
sub
push
push
sub
or
adc
xchg
fcoms
adc
mov
xchg
pop
mov
out
insl
out
sahf
add
in
adc
test
into
repz
jge
pop
pop
adc
jp
nop
add
xor
test
mov
js
add
cmpsb
lret
int
jmp
fsubl
sbb
js
fcomip
cltd
test
pop
jge
leave
mov
stc
pusha
lahf
or
jb
xor
jp
sbb
add
loop
xchg
inc
push
ret
jnp
out
sub
fdivp
mov
ja
fwait
aad
out
xchg
pop
sbb
mov
shll
dec
loope
mov
jo
decb
cmc
push
sti
in
dec
xorl
or
jno
sbb
into
dec
mov
in
pop
jnp
fbstp
inc
nop
das
lahf
in
xchg
sbb
mov
imul
fistpll
adc
jnp
cmpsl
outsl
pop
push
mov
inc
test
mov
scas
lock
popf
or
stos
pusha
add
jne
fcomps
and
loop
int3
enter
xchg
inc
cmc
add
cmp
and
xor
addr16
aad
push
roll
mov
adc
sbb
push
pop
adc
mov
push
ja,pt
sbb
lds
je
jge
inc
data16
cmpb
mov
shr
scas
sub
sub
arpl
test
jbe
int
sahf
jle
daa
lods
sbb
cmp
into
push
popa
loope
lods
ja
int3
out
sbb
or
cmc
jecxz
mov
fwait
pop
cmp
dec
xchg
shrl
pop
loop
dec
push
dec
add
push
mov
sub
jle
repnz
dec
fldt
jne
nop
push
adcb
test
sub
pop
jo
inc
arpl
xchg
sub
jo
inc
or
jp
mov
adc
push
jno
lea
jl
ljmp
push
sub
jbe
loop
int
push
or
das
jo
aad
lret
mov
fwait
movsb
fildl
jo
test
dec
aas
loopne
lods
inc
pop
test
pop
xor
call
push
cmp
clc
loope
jl
push
rcll
sarb
lcall
push
mov
push
mov
cmp
fildl
mov
pop
lods
sbb
sbb
xchg
loopne
shlb
cld
inc
mov
inc
repnz
xchg
jb
xchg
adc
adc
in
pusha
fnstcw
cmpsb
mov
xor
pop
jbe
dec
divb
mov
adc
rorb
popa
gs
out
outsl
push
jb
jle
or
pop
jp
in
inc
push
mov
movsb
push
inc
or
addr16
lods
cld
cmp
movsb
dec
or
mov
pop
cmp
jns
sub
popf
mov
ljmp
dec
xor
out
ret
cmc
pop
jle
fnstenv
mov
pop
ja
aad
out
gs
lock
push
mov
fsubl
xor
sub
xchg
insb
cmpsb
mov
lds
mov
cmc
lret
and
mov
mov
pushf
mov
adc
mov
lock
ret
or
loope
iret
push
add
ret
stc
mov
lea
nop
mov
roll
lcall
jo
movsl
in
mov
push
ljmp
xchg
pop
inc
push
out
xchg
mov
sub
mov
push
in
xor
and
mov
rorl
cmp
xchg
mov
movsb
or
xor
push
shl
addr16
push
rcl
and
out
xchg
inc
daa
lahf
pop
test
mov
push
pmulhw
mov
inc
lods
adc
push
out
rclb
and
fldl
sub
cmpb
push
fisubrl
inc
xor
pusha
xor
ljmp
das
jns
adc
xchg
out
mov
mov
loopne
inc
aam
adc
push
sbbl
sub
loope
push
mov
mov
or
lcall
in
xlat
fnstsw
sbb
scas
outsb
and
mov
pop
jg
cs
daa
lret
push
into
lahf
fwait
inc
and
push
lahf
test
mov
push
insl
ficompl
in
outsb
dec
xlat
rolb
int3
pop
stos
cwtl
xor
jge
xor
or
je
in
sub
insl
mov
ja
test
pop
xchg
test
pop
arpl
lahf
sub
in
xor
inc
ficoml
add
and
js
inc
test
enter
cs
jl
inc
push
add
pop
mov
push
mov
sbb
ret
xchg
jp
xorb
fdivs
pop
je
js
dec
sbb
cmp
sub
xor
or
sub
jno
push
mov
cmpsl
dec
mov
adc
out
hlt
mov
std
add
hlt
push
das
lcall
sub
ret
popa
loope
push
jg
or
push
and
push
test
adc
leave
mov
loop
xlat
mov
pop
mov
mulb
les
shrb
nop
ja
roll
sbb
addr16
and
fadd
cmp
cmpsl
sbb
mov
inc
xor
movsl
je
lcall
cmp
sub
cmpsb
push
mov
jl
jo
pop
push
or
jbe
pop
cmp
jbe
cmp
xchg
pop
mov
lea
rolb
xor
outsb
mul
test
xchg
lea
dec
sub
sub
mov
adc
add
xchg
loopne
pop
movsb
andb
sub
adc
inc
sub
or
fs
cmp
scas
push
jg
mov
loopne
bound
push
pop
mov
in
dec
xlat
adc
jbe
adcl
mov
negl
jge
and
movsl
mov
or
mov
jp
pop
xor
icebp
add
fs
shl
adc
nop
push
rcrb
cmc
add
testl
dec
add
cwtl
jns
pushf
ret
pop
lock
inc
rcrb
pop
add
adc
lds
jbe
mov
aas
and
jmp
pushf
leave
jge
inc
fadd
test
dec
inc
sub
adc
adc
fisubrs
sbbl
mov
or
xchg
insb
mov
mov
push
shll
rol
aas
mov
dec
mov
xorl
imul
das
sub
sub
cmp
jo
fisubrl
add
xor
sub
lret
lock
mov
inc
or
clc
insl
loope
aaa
insb
inc
ljmp
fldcw
shll
mov
or
mov
shll
cmp
xchg
xchg
xlat
push
fdivp
loop
adc
add
inc
stos
jp
in
push
add
inc
jge
int
imul
dec
mov
pop
push
lods
loopne
jmp
sub
xor
loopne
nop
and
and
dec
xor
mov
sarb
mov
lcall
imul
lret
add
fistps
shl
arpl
cs
mov
adc
ret
lret
adc
loop
mov
push
or
inc
push
inc
hlt
jb
dec
int3
popa
pop
aas
repz
sub
add
mov
insl
push
sbb
mov
in
lahf
and
push
test
push
popa
cmpsl
mov
push
mov
shlb
mov
jecxz
shl
incb
inc
mov
push
sub
sbb
jns
je
psubusw
mov
xchg
insl
mov
imul
inc
std
fwait
mov
movsl
jbe
nop
test
push
xchg
or
fildl
pop
dec
cltd
xor
fisubs
lret
sbb
push
push
lods
dec
fs
adc
in
cmp
loop
rcrb
or
xchg
cmp
aaa
fwait
cld
sbb
inc
in
and
rorb
xchg
div
sub
ret
ds
cmp
mov
push
dec
inc
cli
cs
sub
and
mov
adc
cmp
aas
push
jle
and
arpl
dec
fistpll
mov
fcoml
orb
inc
icebp
int3
mov
xchg
jno
notl
icebp
sub
mov
sahf
or
add
mov
imul
adc
or
in
in
outsl
int
pop
jns
sub
jmp
fisubl
daa
cmp
mov
jno
loope
push
mov
test
xor
addr16
adc
inc
out
mov
arpl
inc
int3
and
or
mov
iret
adc
outsb
stos
xlat
pop
dec
add
in
rcrb
loope
add
jns
push
repnz
pop
fimuls
xlat
les
lods
and
cmp
push
std
mov
dec
lods
add
mov
jae
incl
lea
cmp
lret
and
or
push
xchg
out
sbb
lahf
pop
and
fidivrl
test
or
aad
pop
push
jne
ret
inc
cmp
push
into
lret
insb
adc
mov
sbb
lcall
outsb
xor
mov
aaa
xchg
sub
mov
adc
inc
sub
pop
mov
jns
cmp
dec
add
dec
ss
add
push
mov
mov
arpl
push
sub
adc
imul
jmp
push
test
mov
lea
icebp
and
mov
xorb
inc
push
inc
js
push
test
adc
pusha
fincstp
push
and
lods
gs
pop
lods
fidivs
cmp
inc
sub
mov
rorb
mov
test
push
fsts
movsl
out
xor
repnz
lods
jae
dec
and
cmpsl
adc
scas
and
xchg
daa
jge
pusha
popa
mov
sbb
sbb
aad
ficoml
and
pop
cmp
clc
dec
xchg
pop
in
pop
sub
push
add
sub
inc
jae
pushf
sub
xorb
mov
add
movsb
stos
xchg
inc
push
repnz
out
imul
ss
bswap
aam
and
fldl
jb
fisubl
mov
popa
fisubs
out
mov
mov
and
or
lods
pop
sub
inc
jno
push
or
inc
mov
subb
sbb
inc
dec
push
pop
stos
cmp
test
push
decb
aad
arpl
nop
mov
and
test
and
or
arpl
ret
ret
and
into
outsb
jecxz
cmp
les
lcall
sub
mov
dec
dec
fnstcw
scas
dec
jl
in
adc
rorl
inc
or
mov
adc
pop
fdivrl
xchg
jae
cs
gs
jbe
divb
xchg
rolb
jno
jl
dec
mov
lods
mov
cs
pop
loopne
outsl
cmp
dec
les
ljmp
mov
hlt
jmp
aad
fisubrs
or
xchg
lods
lock
push
sbb
in
push
fiaddl
ds
push
xchg
cmp
adc
loope
or
jnp
mov
and
negl
push
jnp
push
outsb
in
mov
mov
mov
test
mov
test
leave
dec
push
test
push
aam
je
nop
xor
xchg
out
movsl
paddsw
jmp
daa
icebp
popf
jne
inc
add
cmp
push
leave
cmp
pop
nop
mov
mov
jns
ja
sub
scas
xlat
adc
jo
fsub
aam
daa
fldenv
fwait
mov
aaa
jge
popa
scas
or
xor
xchg
adc
nop
popa
out
and
test
pop
adc
loopne
shlb
mov
push
xchg
mov
mov
sahf
out
ljmp
pop
mov
push
fs
mulb
xchg
mov
mov
add
je
push
rol
sbb
inc
bound
jg
imul
lods
jmp
push
cmp
lret
add
mov
xchg
and
mov
pushf
mov
add
mov
jo
mov
dec
jmp
push
push
jne,pn
xchg
jbe
stc
mov
jns
iret
lea
pop
clc
or
movsl
lods
adc
int3
and
es
mov
movsl
std
aam
mov
lret
mov
xor
pop
addr16
xor
fsubs
loopne
movsb
xor
add
pop
loope
mov
or
hlt
andb
jmp
push
sbb
add
fwait
pop
mov
outsl
sub
fsts
mov
jo
out
mov
cmpsb
xchg
pop
adc
aas
flds
enter
test
shl
repz
push
push
repz
insb
jecxz
inc
xor
out
ljmp
in
test
cmp
adc
push
std
nop
mov
pop
fs
jbe
fstpt
mov
cld
xor
repz
movsb
aaa
fmul
fcoml
mov
imul
popf
fs
or
mov
add
sahf
dec
test
test
sti
inc
daa
xchg
mov
add
mov
cmp
out
inc
dec
sub
cld
xchg
lret
shr
cld
fldcw
lods
rcll
aam
dec
int
dec
fucomi
xor
repnz
add
outsl
xchg
lea
mov
jo
dec
mov
xor
xchg
mov
loope
push
pushf
push
push
cmp
shrb
fwait
mov
lock
xlat
gs
movsb
leave
xor
and
mov
add
lahf
mov
fdivr
adc
mov
mov
negl
mov
cmp
clc
jmp
inc
fidivrl
adc
pop
or
cmp
push
jno
loop
push
lods
into
dec
ljmp
sbb
shrb
jmp
dec
push
or
xor
leave
cmp
dec
fstp
dec
out
and
sub
add
cmp
inc
dec
add
inc
or
xchg
pop
aam
inc
addr16
push
push
xchg
inc
mov
paddb
mov
add
pushl
or
clc
das
dec
dec
or
scas
fidivs
pop
ret
mov
fnstcw
shlb
mov
out
lcall
es
push
xor
jo
shll
out
ljmp
es
out
je
test
divl
ret
adcb
jne
data16
and
insb
aam
rol
cmc
push
push
sarl
ds
stos
mov
or
xor
lret
std
cli
dec
aaa
sub
push
pusha
lcall
test
outsl
insl
dec
and
xchg
bound
jecxz
pop
stos
scas
push
pop
xchg
jge
xor
ss
mov
icebp
test
jno
mov
repz
push
cmp
ds
mov
sbb
xor
cmp
cmc
push
pop
push
mov
test
inc
test
jne
stos
cmp
sub
out
mov
call
mov
mov
dec
xchg
or
mov
std
mov
add
pop
stos
nop
xor
push
sbb
mov
mov
out
pop
fiadds
pop
loop,pt
jmp
pop
inc
ljmp
das
mov
mov
cmp
xor
adc
je
inc
cmp
mov
and
push
jbe
lret
xchg
sbb
mov
lcall
cmc
popw
or
sub
les
aad
fmuls
nop
lret
cmp
call
add
test
push
fisubs
mov
sbb
bound
nop
xor
or
cli
outsl
adc
in
jge
cmpsb
push
pop
cs
push
std
call
mov
pop
jne
push
pop
int
cmp
arpl
rcr
inc
aam
jb
call
dec
stos
mov
loope
js
mov
jp
rol
scas
fadds
imul
mov
arpl
jnp
lcall
xor
ret
rcrl
jle
pusha
xor
inc
push
jmp
or
adc
popa
jge
add
mov
loope
iret
cmp
mov
aaa
hlt
push
sub
repz
les
arpl
lock
roll
in
sub
movsb
add
jp
fs
sub
jp
add
pinsrw
cmpsl
leave
rorb
xor
pop
mov
es
rcrl
cld
out
stc
movsl
cmp
sti
add
nop
das
dec
lods
dec
test
add
and
sti
jne,pn
sbb
into
add
push
jae
test
or
pop
cmp
rolb
xchg
cmpsb
aad
out
push
and
and
mov
cltd
mov
dec
lret
push
shl
je
add
in
xor
ror
add
sbb
dec
xchg
cmpsl
hlt
loope
mov
sbb
add
push
adc
shll
or
js
in
mov
mov
dec
aam
sarb
xor
sub
push
dec
or
lcall
jbe
or
enter
cmp
jb
jecxz
fwait
jnp
int
loopne
and
inc
sbb
sbbb
dec
dec
jmp
lea
aam
lods
xor
or
adc
int3
push
ret
cmc
sarb
ljmp
add
xor
xchg
call
or
or
inc
sahf
dec
jae
pop
mov
push
scas
inc
mov
xor
cs
roll
inc
jl
negl
fistpll
addr16
sbb
stos
lea
aaa
pusha
test
xchg
jb
fndisi(8087
mov
rorb
add
inc
shr
pop
mov
out
pop
call
sbb
jmp
cmc
or
jbe
push
aam
mov
popa
or
mov
imul
repz
hlt
sahf
pop
push
lahf
insl
loope
insl
pushf
and
mov
mov
pop
adc
push
int
ljmp
mov
or
dec
jge
lcall
out
ret
mov
jo
adc
push
test
movsb
xor
test
jge
ss
call
and
dec
mov
and
xor
sbb
lock
mov
pop
and
or
lock
adc
sbbb
adc
fnstsw
push
and
hlt
shlb
and
sbb
mov
loope
jo
adc
fmuls
insb
out
sti
cs
mov
cltd
inc
fadd
cmp
stos
lods
push
stos
subl
jno
fucom
cmp
dec
jmp
test
dec
mov
jae
rcll
push
shll
je
jno
pop
push
jmp
das
push
push
scas
loopne
in
push
mov
adc
xor
sahf
jl
dec
lret
lock
inc
sbb
test
add
pushf
enter
sub
pop
xchg
sbb
arpl
cmpb
push
push
inc
push
mov
sbb
stos
jl
iret
fcompl
push
stos
repnz
ret
mov
inc
pop
mov
add
fs
xor
jecxz
mov
scas
pop
inc
je
call
pop
repnz
sti
fimull
lcall
sub
cmpb
es
push
out
loope
mov
inc
push
lods
xor
out
test
sub
lock
inc
or
and
ret
insl
aaa
mov
pop
jnp
rcrb
in
mov
ss
cmc
dec
cmc
ja
xor
push
sub
sub
bswap
jno
test
lods
or
jge
sub
lahf
lret
xchg
or
mov
dec
add
and
dec
pxor
cmp
mov
loope
mov
jge
push
dec
jge
mov
sbb
xor
add
arpl
adc
rorb
das
xchg
sbb
xchg
cmp
psubb
lahf
outsl
call
insb
add
mov
pop
push
adc
pop
and
fs
imul
incb
cwtl
icebp
pop
mov
mov
addl
lret
clc
xor
cmp
in
out
stos
adc
aad
mov
leave
shr
daa
data16
ret
cmc
daa
pop
fwait
shrl
xchg
jbe
aas
jp
lret
orl
scas
movsl
insb
cmp
fsubrs
inc
enter
fisttps
dec
dec
sahf
or
shlb
mov
insb
mul
xchg
nop
stc
sbb
xchg
fld
mov
ret
pop
test
lcall
push
cmp
ret
shll
mov
push
insl
fldl
mov
imul
int3
loope
xchg
fiaddl
mov
daa
xchg
scas
stos
fists
out
mov
xor
xchg
sbb
pop
shll
pop
scas
xchg
ja
mov
or
push
xor
ljmp
jmp
or
mov
cmp
mov
cmp
jge
add
push
inc
arpl
mov
pop
sbb
jle
sub
jg
out
lds
cmp
or
rorb
ss
mov
movsb
fimuls
dec
sub
lea
subl
adc
push
sbb
and
jnp
mov
loopne
cli
loop
pop
sbb
in
out
sbb
subb
nop
push
and
or
sbbl
mov
adc
sahf
add
adc
sub
sub
adc
xchg
sbb
xchg
add
dec
fstps
xchg
lcall
mov
cmp
pop
xchg
adc
loope
and
insb
sub
xchg
cld
jo
mov
xchg
test
mov
adc
mov
xor
inc
shlb
mov
sbb
pop
loop
adc
pop
out
xchg
or
stos
cmpsb
mov
inc
add
lods
add
pop
inc
les
cmpsl
movsb
call
xlat
jecxz
mov
out
mov
sub
lock
mov
or
into
fdivrl
sahf
cmp
int
dec
test
sub
frstor
cmpsb
cltd
push
mov
jl
stos
push
dec
out
pushl
adc
je
dec
sub
outsb
xchg
movsl
and
push
insl
jbe
push
mov
xchg
js
lret
xlat
lretw
test
sti
dec
cmp
pop
shl
xchg
cmp
insb
push
test
and
int3
into
mov
pop
inc
push
inc
pop
and
add
sbb
subb
fnop
pop
fistpll
push
adc
xor
sbb
adc
scas
sub
in
pop
icebp
out
xor
insb
imul
int3
xor
mov
scas
lea
nop
or
mov
push
sahf
mov
dec
mov
or
sti
js
jne
xor
mulb
mov
inc
fildll
xor
test
out
sub
xor
shll
mov
cmp
push
pop
mov
pop
mov
sub
loopne
stc
imul
xchg
or
xor
fdiv
xchg
mov
aad
xchg
cmp
sub
popf
cmp
int3
xor
xchg
and
cmc
addr16
sub
in
imul
mov
xor
or
push
xchg
test
fisttpll
into
or
out
xor
clc
outsl
add
clc
mov
adc
adc
sarb
adc
dec
adc
and
mov
call
jno
repz
dec
mov
arpl
push
lret
adc
divl
mov
mov
retw
adc
add
cld
push
and
mov
sub
enter
sbb
pop
mov
out
and
fnsave
or
pop
das
mov
int3
jns
repnz
dec
mov
lds
lahf
xchg
and
sbb
shl
lcall
add
xor
in
xchg
out
jle
mov
movsl
cmp
cwtl
loope
push
inc
inc
fisubl
not
sub
jne
sbb
cmp
mov
dec
stos
xchg
push
repnz
ljmp
mov
mov
pop
fimull
or
cmp
xchg
and
dec
loopne
mov
cli
push
je
movsb
xchg
rorb
xchg
pcmpgtb
mov
popf
ss
and
push
push
push
jle
pop
mov
outsb
loopne
lret
mov
je
and
mov
add
push
cmp
sub
mov
inc
cmpb
lret
ficoms
jne
pushf
mov
sub
jnp
or
jmp
dec
adc
dec
sbb
paddsw
inc
fnstenv
enter
push
dec
mov
sahf
lods
jp
stos
xchg
movsb
test
mov
cmc
pop
and
ds
jo
jno
dec
mov
jp
push
jno
ret
out
aas
and
cmpsl
fstpt
xchg
jmp
mov
adc
pop
out
scas
mov
pop
push
in
fidivrs
mul
jecxz
mov
loope
xchg
pop
jae
mov
fs
adc
es
pop
insl
mov
dec
rolb
arpl
rol
je
dec
inc
xchg
jg
sti
lret
cmpsl
decb
movsb
psubusb
outsl
je
cmp
cmp
dec
insb
test
arpl
nop
pop
dec
mov
lret
mov
les
ds
repz
test
ret
outsl
stos
fcmovnbe
scas
sbb
fidivs
add
sbb
ljmp
fmuls
push
mov
pop
out
mov
and
jae
es
sub
clc
pop
xor
jg
sbb
mov
icebp
aaa
mov
cmpsl
sub
cmp
jno
andl
mov
add
clc
imul
push
push
or
fdivl
xor
and
cmp
cld
xchg
ds
imul
cmp
lret
cs
es
das
xchg
push
jnp
scas
or
pop
jle
mov
out
out
push
stos
aad
and
adc
mov
push
rcr
aaa
in
inc
cmp
loope
imul
jb
test
arpl
movsl
cmp
mov
inc
int
xchg
inc
xorl
mulb
mov
or
pop
jmp
lock
loopne
xorl
ljmp
pop
xchg
lods
adc
sbb
push
in
mov
ljmp
xor
dec
sub
clc
icebp
jecxz
lret
cmpsl
pop
xchg
sbb
add
mov
jb
sahf
subb
into
xchg
jno
sahf
dec
sti
flds
es
insb
mov
mov
xor
ss
cmpsl
dec
pusha
cmp
xor
fists
mov
clc
push
dec
sub
sub
mov
sbbl
or
xor
sti
dec
mov
mov
in
mov
cld
and
pushl
mov
lcall
in
mov
or
xchg
add
sbb
repz
roll
jle
mov
fisttpll
negl
test
lds
cld
dec
inc
cmp
xor
movsl
mov
push
call
out
orb
inc
addr16
fcos
cmp
cmp
aad
mov
test
ja
or
pop
add
ret
adc
dec
pinsrw
sahf
ret
int3
lret
hlt
and
xchg
add
sbb
mov
add
xlat
jp
in
lods
pop
adc
inc
fadds
cltd
imul
add
jp
and
repnz
mov
sahf
push
inc
lea
sub
sarb
inc
adcl
mov
leave
je
jno
call
xor
mov
inc
inc
arpl
std
or
sub
xchg
std
das
inc
add
aam
repnz
sub
ror
lahf
jae
push
sub
inc
jo
sbb
adc
dec
mov
jb
add
jne
mul
ret
pop
push
clc
pop
sbb
xor
mov
xchg
jo
push
hlt
inc
and
ja
push
lahf
scas
xor
lret
into
nop
mov
adc
xchg
in
inc
mov
sub
cli
pop
jne
imul
jl
pop
int3
xchg
push
in
stos
jg
pop
mov
lds
loop
push
fimuls
jne
jo
mov
mov
mov
mov
pop
test
rcl
scas
rcrb
leave
into
add
sub
push
fwait
pop
shrb
or
mov
dec
dec
call
xor
or
jo
inc
in
sub
pop
sahf
shr
dec
and
ss
mov
adc
sbb
repz
jo
sub
sbb
out
nop
sub
inc
rol
or
jl
or
sbb
jbe
xor
sar
lret
int
xor
je
mov
gs
jmp
cmp
xchg
add
arpl
jmp
jne
ljmp
ljmp
sbb
movsl
stc
leave
push
sti
dec
jl
push
xchg
iret
sahf
addl
push
ret
jo
cmp
sbb
pop
ds
lcall
in
ljmp
pop
sbb
add
adc
mov
cmc
mov
fs
sarb
icebp
mov
jns
and
popf
aas
or
jmp
or
inc
fbld
clc
outsb
das
cmpl
push
adc
outsb
jnp
add
and
test
xlat
push
sbb
or
cwtl
add
ss
repnz
fists
gs
sub
inc
pop
repz
fwait
or
inc
inc
or
int3
mov
negl
test
xor
cmp
xorl
jg
mov
dec
add
repnz
nop
mov
or
aas
xchg
mov
sbb
mov
xor
inc
xchg
or
lret
out
testb
add
test
mov
inc
mov
jle
je
xchg
test
inc
pushf
stc
call
filds
lea
jo
adc
fisubl
in
xor
dec
adc
cltd
push
lock
xchg
cmp
pushf
cmp
fmul
aad
iret
sbb
dec
fisubrl
icebp
loope
ficompl
add
inc
fidivrs
adc
mov
pop
cli
sbb
fimuls
mov
imul
or
push
pop
out
movsb
clc
sub
sub
aaa
push
lcall
jmp
fs
cs
inc
push
dec
in
jo
mov
fstl
jl
dec
jae
fcompl
xorl
inc
mov
xor
jge
sbb
and
aad
into
repz
scas
imul
das
test
jl
add
push
test
xor
jb
test
jg
dec
das
inc
repnz
mov
jns
sub
mov
xor
mov
rolb
sub
or
xor
into
sub
sub
sbb
loop
cmp
lea
or
xor
xor
divps
std
dec
insb
loope
jno
shrb
mov
in
dec
pop
mov
mov
out
fwait
js
or
xchg
pop
push
add
jl
jle
sbb
test
mov
and
inc
mov
sub
nop
movsb
mov
mov
cmp
mov
mov
or
loope
cmp
pop
mov
dec
ret
bound
lds
lea
sahf
into
fstl
or
fld1
fcom
jecxz
add
inc
or
adc
and
fs
xchg
sub
mov
adc
lcall
ret
inc
or
push
jge
xor
pop
mov
inc
repnz
jne
sar
or
jno,pn
lods
inc
sbb
cmpsl
pop
sbb
ja
outsb
sbb
pushf
jns
popf
mov
mull
call
cmpsb
call
xor
into
ret
xor
xor
adcl
xor
mov
adc
sbb
jno
lods
add
stos
gs
repnz
stos
mov
sahf
pop
lret
lret
ds
mov
mov
test
xchg
pop
jecxz
dec
lahf
mov
repz
pop
test
subl
cmp
adc
call
loope
and
gs
push
pop
iret
dec
mov
and
movsb
lea
bound
push
lcall
fcoms
repnz
mov
fidivrl
inc
xchg
pop
add
fcmovb
aad
loope
std
sub
not
pop
mov
add
pop
out
dec
lods
dec
add
notb
mov
sbb
fmulp
sub
sub
ja
add
idivl
mov
mov
mov
mov
ja
frstor
push
sub
iret
push
imul
popf
cli
in
pop
stc
rorl
out
cld
pop
sub
das
mov
jp
hlt
jmp
stos
lcall
or
iret
sub
aam
and
dec
lods
outsl
and
lahf
out
sarl
cmpsl
scas
scas
and
test
xor
adc
js
lods
xorl
push
and
jo
sti
fdivl
popa
pop
nop
inc
mov
stos
pushf
lods
lret
stos
push
and
mov
not
xor
jle
xchg
in
mov
scas
mov
rcrl
or
fisttpl
xchg
mov
lock
jp
pusha
mov
jo
leave
fs
stos
sbb
add
ret
mov
pop
sub
nop
out
aad
sbb
insl
sbb
lock
cmp
loop
mull
movsl
in
and
xchg
push
sti
pusha
mov
nopl
loope
sub
rclb
cmc
pop
jle
clc
scas
aaa
out
sub
dec
test
out
loop
aam
scas
cmp
jo
push
pop
jb
jp
xorl
jb
sbb
rcrl
cmc
loopne,pt
mov
push
mov
lret
shl
flds
test
pop
jnp
mov
add
rcll
leave
dec
shrb
mov
dec
pop
outsb
int3
js
xchg
shrl
jno
pop
add
movsl
cmp
aam
rcll
adc
popf
fwait
dec
cli
adc
enter
mov
lods
adc
inc
imul
bound
mov
cmc
pushf
push
arpl
mov
int
pop
ficomps
movl
lahf
stos
cmp
imul
mov
dec
pusha
sbb
adc
insb
gs
push
adc
jae
mov
cld
std
sub
loop
popf
jp
aam
lret
inc
repnz
subb
cmp
xchg
in
xchg
test
rol
push
mov
jge
insl
into
in
xchg
mov
in
inc
dec
lcall
xor
or
adc
xor
jo
test
add
sbb
jge
mov
and
ja
or
cmp
out
xlat
dec
test
shl
push
repz
jbe
mov
jns
aas
cmpsl
and
dec
push
xchg
inc
dec
jns
shrl
scas
push
clc
dec
mov
or
fmull
jmp
fisttps
dec
inc
iret
ja
dec
jmp
ror
insb
inc
subl
xor
rcrl
jnp
xor
push
mov
sub
adc
pmuludq
imul
in
imul
cmp
mov
stc
loope
int3
lret
sub
push
mov
lock
imul
pop
ret
rclb
lods
int
mov
cltd
or
add
rcl
cmc
arpl
aas
xor
hlt
inc
mov
loopne
jbe
aam
add
out
sarl
aam
jl
or
add
mov
push
push
cmpsb
xor
movsb
xor
int3
and
int3
or
push
push
or
mov
and
mov
dec
adc
and
xor
push
test
sbb
iret
push
xadd
push
mov
mov
inc
pop
sbb
inc
jns
sub
lret
stos
insb
enter
testl
cmp
add
inc
push
xchg
jo
pushl
pop
mov
and
push
dec
xor
pusha
lahf
cld
xchg
inc
mov
add
fdivr
mov
sbb
inc
mulb
xor
cltd
mov
leave
test
mov
lods
sbb
mov
pop
mov
mov
and
add
pop
test
les
mov
mov
std
mov
cwtl
outsl
pop
jecxz
jns
jb
sub
mov
je
sahf
repnz
mov
lods
pop
xor
mov
mov
stc
mov
nop
jno
addr16
push
mov
mov
push
xor
dec
stc
pusha
xchg
pop
xchg
sbb
lods
sub
loop
les
mov
add
gs
or
icebp
push
xchg
pop
int
dec
imul
push
push
lcall
cmc
cld
mov
addr16
sti
lahf
into
jb
mov
pop
mov
push
add
loope
push
adc
popf
push
push
into
push
jp
fsubl
mov
popf
xor
cmp
sarb
or
pop
sub
pop
sub
sbb
mov
mov
mov
cs
lds
lret
in
in
pop
add
mov
inc
jg
sahf
jne
adc
inc
popf
xchg
in
pop
add
jg
inc
rolb
cmp
dec
push
loopne
fdivr
sub
mov
add
pop
and
js
mov
sbb
gs
out
sub
sbbl
idivb
xlat
xchg
ret
cmp
das
push
push
iret
sub
mov
pusha
add
fstpl
or
mov
icebp
dec
mov
imul
cmpsb
lret
lods
inc
pop
mov
mov
mov
mov
mov
jae
push
pop
rorl
pop
ljmp
push
cmp
adc
jle
nop
cltd
mov
mov
cmpsb
pop
inc
xchg
icebp
sbb
jnp
sbb
mov
std
ds
shlb
cmp
push
jns
mov
adc
test
push
loop
into
pop
xor
inc
arpl
pop
iret
fmuls
movsb
fisttpl
int
jp
nop
mov
daa
cmc
ss
cltd
jno
loopw
inc
ss
daa
fdivl
sarb
dec
ss
pop
sbb
or
stos
mov
setae
iret
push
fcomp
ffreep
ja
jo
int
push
mov
cltd
inc
and
mov
fidivs
mov
mov
pop
cli
adc
in
addb
jno
outsb
cmc
pushf
mov
pop
lcall
adc
nop
sbb
or
ss
xlat
adc
xchg
push
pop
data16
xlat
inc
ficomps
fsin
arpl
xchg
jecxz
mov
sub
mov
pop
and
aaa
das
je
cmc
out
sub
ljmp
cmpsb
dec
pop
pop
xor
dec
fistl
insb
sub
das
mov
and
das
loop
push
rclb
pop
int3
std
pop
int
fmuls
cltd
adc
mov
xchg
sbb
dec
cmp
sub
test
or
adc
sub
sbb
mov
jns
and
in
mov
push
es
xchg
pop
jns
je
adc
pop
std
movsb
mov
cli
jmp
incl
adc
rcl
mov
adc
pop
pop
cli
xlat
jns
push
inc
xor
sbb
or
repz
hlt
stos
ficomps
push
or
dec
jecxz
les
mov
loopne
clc
push
popf
arpl
xor
lock
add
mov
test
testl
push
outsl
scas
cmp
data16
enter
mov
js
in
xlat
add
and
in
test
sub
cwtl
mov
iret
int
cmc
adc
subb
sbb
roll
push
mov
xchg
pop
jne
xor
sub
into
test
mov
dec
mov
mov
mov
mov
lods
adc
loop
repnz
xlat
jecxz
mov
out
mov
cli
bound
xchg
dec
in
lahf
inc
lret
xor
dec
jecxz
dec
push
xchg
imul
sbb
or
mov
push
jo
add
sub
pop
bound
cmp
sub
adc
fildll
push
xlat
shll
stos
jecxz
rcrl
push
jmp
stc
sub
mov
addr16
outsl
into
lcall
movsb
sahf
gs
pop
loop
sti
fs
js
push
mov
int
dec
xor
xor
stc
mov
mov
mov
pushf
jae
jge
or
ss
push
pop
fld
mov
push
mov
cltd
mov
mov
mov
aad
mov
mov
cmp
fldenv
loopne
ret
nop
push
add
subb
call
rolb
out
ja
dec
xlat
cmp
cmc
or
mov
test
cmova
add
repz
sti
and
pop
or
leave
cmp
add
mov
push
xor
test
jp
ret
adc
les
mov
rcrb
mov
repz
mov
dec
movsb
lods
mov
dec
add
shr
sub
test
dec
and
dec
adc
fcoms
sahf
cmpsb
mov
xchg
mov
dec
pop
cmpsb
inc
aad
movsb
dec
push
or
cmc
jo
dec
jae
cwtl
sub
xchg
sbb
jae
jo
cli
aad
ljmp
xchg
outsl
jmp
in
pop
mov
shlb
aaa
push
adc
scas
sub
adc
scas
outsl
sub
xor
sbb
cli
arpl
sub
cmp
xorl
scas
insl
xor
dec
sbb
ficomps
cs
jb
mov
add
bound
aas
lcall
ficoml
fisttps
into
jne
outsl
cli
pop
inc
and
mov
jbe
mov
pusha
sub
xchg
cmpsb
sub
or
add
xchg
pop
jbe
movsl
cmp
sbb
repnz
lret
hlt
fisttpll
push
fmulp
pushf
lea
pop
imul
sub
lds
inc
push
xchg
mov
jge
testl
test
push
and
out
insb
lds
cmpsl
movsb
sbb
shll
lcall
push
pop
and
les
cmp
push
aam
adc
xchg
out
ds
adc
dec
push
xor
xor
in
ss
stc
ret
push
insb
fisubrs
aam
scas
or
pop
adc
in
in
shrl
in
inc
es
addl
inc
xlat
mov
cmp
push
sbb
cltd
shll
jg
dec
iret
fistpl
stc
mov
gs
jg
lea
or
inc
mov
je
xor
xchg
aaa
adc
sarb
mov
mov
addr16
out
push
sub
imul
xor
sti
pop
sti
push
out
je
cmp
sti
loopne
push
dec
dec
pusha
push
loop
aad
data16
sbb
sar
jle
and
cltd
fisubs
lahf
popf
leave
jne
lea
cltd
xor
cs
push
mov
or
shrb
mov
mov
arpl
mov
les
fiaddl
daa
mov
clc
out
push
adc
mov
out
mov
cmp
stc
xor
xor
outsb
cmp
cmp
jmp
dec
push
jnp
sti
sbb
mov
pop
inc
cmpsb
add
xor
insb
mov
cmp
dec
fiaddl
cmp
test
loop,pn
aam
cmp
inc
inc
mov
fdivrl
jne
test
xchg
push
cmp
xor
mov
ja
mov
jae
popa
mov
test
pop
idivb
fwait
push
push
cmp
dec
adc
adc
mov
inc
fidivrl
leave
pop
aas
dec
test
js
sbb
xchg
or
push
ret
inc
inc
test
adc
dec
aaa
sbbl
test
scas
cmpl
sbb
call
jmp
lock
loop
lret
lcall
push
xchg
cmp
js
in
mov
rcr
jecxz
adc
mov
mov
out
in
ljmp
adc
dec
repz
sahf
aam
cmpsl
test
mov
xor
jecxz
xor
ret
jae
je
xchg
dec
cmpl
and
sti
push
rorb
push
sahf
push
cld
xor
rcrl
dec
into
nop
jnp
add
or
ret
mov
mov
mov
mov
iret
xchg
mov
pop
loopne
and
or
jno
pop
mov
inc
or
xchg
leave
psubusb
dec
int3
stc
std
jle
testl
push
xor
jne
mov
outsl
add
mov
jecxz
pushf
add
push
lds
xor
xchg
test
cmp
ret
fs
insb
sarb
inc
xchg
lea
or
cld
daa
aad
fisubs
mov
into
clc
aad
je
das
mov
sbb
jg
test
push
shl
xchg
pop
hlt
scas
ret
push
ror
sub
int3
lods
sarb
mov
push
sbb
jne
push
add
cli
mov
ds
xchg
enter
int
sbb
mov
mov
push
push
xchg
out
mov
scas
std
and
test
cwtl
lds
loopne
std
fisttpll
sti
fisttpll
sub
and
movl
pop
sti
xor
cltd
mov
mov
inc
and
add
faddl
test
push
inc
mov
sub
mov
inc
add
push
jle
shlb
adc
mov
mov
mov
outsl
adc
xlat
mov
les
andb
jmp
arpl
dec
fists
xor
push
jno
repz
pop
adc
imul
gs
popf
in
inc
loopne
lods
mov
pusha
sub
inc
sbb
sbb
stos
cmp
mov
add
cmpsb
or
push
sbb
gs
inc
mov
addr16
push
dec
jge
stos
mov
ja
cmp
icebp
xor
mov
push
std
dec
mov
fwait
mov
cmc
sbb
mov
cmp
adc
jge
lds
cmp
repz
filds
mov
dec
dec
dec
push
mov
stos
sub
imul
mov
and
xchg
mov
cmpl
cmpsl
sbb
mov
mov
pop
mov
into
jno
cmp
push
jg
std
mov
decb
shll
mov
roll
outsb
outsl
xchg
mov
xchg
or
inc
mov
std
cmpb
imul
and
out
cmp
mov
out
loope
jne
mov
jnp
out
pop
mov
insl
dec
xchg
int
inc
pop
dec
int
jnp
inc
andl
gs
stos
jle
pushw
push
fistl
out
mov
mov
movsl
call
popa
lock
out
xchg
mov
or
ret
inc
and
je
mov
pop
push
push
mov
mov
jb,pt
dec
repz
sbb
push
shll
dec
mov
pop
push
xchg
cltd
pop
sub
or
rcll
inc
imul
repnz
push
or
and
jmp
inc
dec
fimull
call
sub
mov
pop
and
pushf
shll
mov
out
inc
sub
xor
lahf
xchg
sub
mov
sub
push
out
jle
pop
es
in
sub
stos
std
jae
scas
xor
jns
clc
mov
pop
or
bound
lcall
fwait
add
into
nop
add
xor
mov
mov
mov
pop
xor
add
filds
pop
and
orl
sahf
push
int3
repz
test
add
xor
push
data16
bound
sti
sbb
mov
movsl
repz
pushf
and
adc
jg
das
pushf
add
push
loopne
data16
push
or
je
cmp
clc
lahf
pop
dec
iret
cwtl
dec
xlat
adc
mov
sbb
call
mov
or
pusha
mov
pusha
add
dec
fucomp
pop
and
aam
fimuls
ficomps
cld
fs
sti
xchg
mov
rorb
jns
outsl
sahf
mov
sub
cmp
ret
sbb
mov
aam
inc
pop
xor
insb
cmp
mov
sbb
add
dec
cmpsl
jp
adc
cs
pop
mov
mov
xor
fnstenv
jle
shlb
lret
jmp
and
and
adc
pop
std
xchg
ficomps
jnp
jg
enter
xor
in
mov
and
bound
aaa
add
add
and
dec
out
jp
cmp
push
xor
arpl
add
cmp
inc
loope
cmpsb
cmp
iret
mov
sub
inc
fs
pushf
add
insl
shll
ret
and
sub
or
dec
xor
in
filds
sahf
adc
js
push
sbb
addl
adc
imul
das
lea
sub
adc
lea
adc
rcrl
jno
int3
cli
cmp
testl
jl
out
lock
out
inc
subl
negl
xor
arpl
movsl
mov
pavgb
leave
dec
enter
outsb
xchg
mov
sbb
push
jp
xor
sahf
pop
lock
test
je
xchg
popf
ljmp
js
mov
ss
mov
mov
or
adc
ja
rorl
jbe
sub
xlat
fs
jp
test
jge
inc
shlb
into
popf
jg
cmp
and
lods
into
xchg
test
movsl
push
or
jge
aas
scas
xchg
mov
or
popf
aad
dec
mov
mov
aam
mov
test
arpl
cmpsl
pusha
fwait
mov
out
xchg
pop
notb
or
jmp
imul
sbb
xor
mov
cmp
lahf
xor
pop
dec
out
mov
cmp
dec
test
dec
arpl
ds
shrb
pop
stos
sbbl
sbb
aad
mov
je
push
fdivs
rorb
xchg
nop
mov
sbb
or
dec
xor
fistpll
std
stc
pop
popf
sahf
je
jmp
fs
sub
pmulhw
daa
jge
scas
adc
cwtl
rorl
jmp
xor
je
sub
sub
cmp
dec
std
sbb
fistl
adc
lahf
push
or
mov
subl
jae
leave
xor
jne
test
icebp
xor
scas
inc
test
mov
js
bound
rorb
mov
lret
mov
andl
popf
shlb
add
jo
push
lahf
lods
xor
sub
outsl
jge
fmul
or
mov
insl
push
out
mov
push
lods
cmp
sahf
ret
ja
fistl
xor
insl
inc
dec
jns
addr16
pop
cli
stc
std
loope
int
or
aam
popl
shl
es
push
not
mov
pop
out
leave
mov
dec
adc
leave
mov
notl
ficomps
repnz
jle
push
mov
fimuls
into
cmp
pop
aas
addr16
subl
adc
cld
pop
mov
dec
aam
int3
mov
stos
mov
imul
pop
mov
jl
cmp
xchg
sub
push
mov
jmp
mov
test
mov
mov
mov
pop
xor
jbe
cli
in
and
fcmovb
or
cmc
dec
xor
cmp
repnz
jge
in
in
iret
mov
movsb
dec
xchg
push
jnp
mov
and
xchg
popf
out
int3
out
pop
data16
ror
xchg
lods
in
add
xlat
jg
jle
inc
lret
adc
mov
adc
cmpsl
movsb
and
cmpl
mov
gs
cwtl
cld
shlb
xchg
cs
pop
sub
fchs
jne
push
stos
jmp
gs
ja
push
jno
in
mov
push
ret
inc
enter
dec
mov
jb
mov
rolb
dec
stos
mov
or
scas
orb
imul
call
push
add
pop
je
adc
inc
add
in
or
es
mov
test
icebp
mov
repnz
in
xchg
and
mov
mov
or
pop
jg
sahf
ljmp
cmp
or
cmpsb
sub
cltd
das
ja
fsts
pop
cmpsl
dec
outsl
mov
xor
mov
gs
test
or
cmp
pop
sub
mov
jbe
inc
lods
pop
pushf
cmp
or
ror
jecxz
mov
cmp
jl
out
loopne
sub
or
jmp
cmp
enter
bound
adc
xchg
inc
mov
cmc
insb
push
popf
cld
pop
jne
push
fsubs
dec
cwtl
xchg
mov
andb
jno
popa
inc
in
mov
in
std
push
jmp
stos
ror
mov
mov
pop
call
mov
lock
xchg
ljmp
add
iret
aaa
insl
cmp
fbstp
or
mov
mov
enter
insb
xchg
loop
jle
cmpsl
pop
dec
mov
jae
mov
xchg
push
mov
pop
sti
pop
jne
test
adc
fwait
es
jae
mov
cmp
in
imul
cmp
iret
push
iretw
shlb
jg
sarb
std
hlt
repz
int
fchs
push
sub
or
js
jb
out
adc
add
dec
cmpsl
fwait
stos
ret
hlt
iret
push
lret
cmp
pop
or
sahf
inc
mov
mov
leave
dec
add
lds
ficoms
or
nop
mov
adc
jno
push
pop
mov
popa
xchg
inc
jle
test
mov
sbb
arpl
and
je
pop
sahf
pop
fdivrp
jmp
add
jne
sbb
test
pop
fisubrl
decl
jge
ss
inc
mov
shll
fucom
mov
imul
push
negb
bound
mov
shrb
ljmp
cmp
ss
in
pop
push
cmp
aam
into
cltd
or
jg
rcrl
lahf
jecxz
mov
cmp
mov
repnz
divb
dec
out
inc
jle
fcomp
inc
mov
lcall
in
pushf
ds
scas
imul
jne
dec
fadd
sub
adc
mov
stos
lods
mov
rolb
xor
dec
std
or
data16
jle
mov
mov
xchg
xchg
test
push
or
push
push
in
clc
sbb
cmp
jmp
not
mov
xor
sbb
shrb
dec
sbb
ret
lods
cmp
pop
pop
mov
fnstenv
outsl
je
push
xor
scas
pop
jno
sub
arpl
je
and
stc
ds
sbb
int
sbb
add
aaa
cld
push
in
push
mov
or
lahf
jo
cmp
mov
xchg
stos
xor
fcmovbe
rcl
mov
push
mov
ret
out
or
dec
aas
adc
aaa
pop
dec
inc
cmp
mov
adc
fdivs
in
push
fstl
test
sti
test
sub
or
pop
ficompl
cltd
cmp
dec
lret
roll
or
roll
lcall
lea
jp
add
adc
xor
repnz
int
int
lret
lods
in
push
jg
data16
aad
aaa
dec
fwait
dec
mov
test
mov
hlt
vpunpcklbw
xchg
push
pop
push
mov
std
js
dec
mov
cmp
mov
popa
paddusw
cmp
mov
xor
mov
jle
bound
jge
bound
add
insb
lcall
adc
mov
in
cld
sub
push
mov
adc
push
xor
mov
pop
xchg
push
ds
daa
sbb
mov
mov
shlb
mov
aad
les
push
lods
scas
pop
mov
in
xor
cmpsb
mov
jge
pop
jge
jns
xchg
popa
and
rcrl
pushf
test
cmp
stos
jns
jmp
add
shl
inc
jae
xchg
subb
jns
imul
mov
sub
sub
daa
fsubrs
xor
cltd
mov
mov
or
or
lods
leave
xchg
cmp
inc
xchg
jae
pop
dec
scas
push
daa
jle
std
xlat
mov
mov
cmpsb
popa
int3
push
daa
jle
aam
mov
inc
adc
or
sbb
jl
rep
std
mov
add
mov
aam
sti
push
enter
scas
push
xchg
add
test
mov
iret
and
lods
cmp
stc
scas
push
lods
cmpsb
lahf
pop
enter
xchg
notb
sbb
xor
mov
pop
sbb
addr16
sbb
cmp
add
pop
jns
lahf
sbb
cli
mov
jno
idiv
xor
dec
out
mov
jl
popf
inc
movsl
cmp
dec
or
aam
lock
outsb
loop
mov
jmp
imull
jb
rclb
iret
scas
mov
or
dec
sar
jmp
ret
ss
fidivrs
mov
jg
lahf
aas
adcl
inc
lea
mov
les
push
arpl
fisubrl
inc
adc
bound
sub
movsl
fistps
inc
lea
mov
dec
fsub
jp
nop
into
es
ret
insb
hlt
xchg
pop
lret
int
ja
push
mov
sbb
jmp
dec
cmp
popa
insl
in
cli
aad
les
mov
cmpsb
fwait
jnp
jmp
nop
push
int
iret
or
cmp
cmc
mov
jle
sub
je
or
mov
and
das
cmpb
test
mov
shrb
ja
filds
jmp
mov
push
add
loop
mov
ds
imul
dec
mov
lahf
push
loope
cmp
js
in
adc
adc
sbb
pushf
inc
dec
push
test
test
inc
sub
xchg
cli
jnp
mov
pop
iret
add
xchg
lea
ljmp
mov
out
add
jl
or
pusha
dec
pop
cld
fcomps
jo
roll
inc
mov
mov
and
cmp
aas
mov
int
xchg
fs
imul
insb
gs
pop
adc
mov
scas
data16
cmp
sbb
stos
mov
jo
mov
sub
fisttpll
xor
cmp
push
movsl
in
fsincos
cld
add
mov
mov
dec
mov
lods
ja
jo
add
pusha
call
aas
push
out
rolb
arpl
ja
test
fcmovne
std
fbld
pushf
sbb
mov
cmpsb
sbb
hlt
jne
fisttpl
arpl
cltd
filds
xchg
hlt
xor
neg
out
popf
cmpsl
jno
test
lds
mov
mov
fldenv
sbb
pop
fbld
pop
aaa
push
pop
movsl
fwait
mov
mov
xchg
sbb
inc
inc
scas
out
fimuls
xchg
xchg
insl
stc
outsl
mov
xchg
push
hlt
mov
stc
pop
ja
jns
pushf
mov
ret
test
or
push
imul
adc
outsb
jb
fsubr
dec
mov
jae
in
imul
add
push
dec
or
and
mov
decl
lods
gs
pop
andl
movl
xchg
ljmp
mov
lcall
add
cmp
add
in
sbb
cmp
andl
test
lock
or
cmpsb
mov
mov
adc
dec
bound
fcomps
inc
je
imul
cltd
dec
frstor
push
dec
push
insb
cwtl
cwtl
cmp
jne
hlt
pop
js
mov
push
aad
and
xlat
in
jg
cmc
hlt
bound
jle
lret
mov
or
movsb
pop
int3
xchg
loope
adc
movsb
mov
fisubl
setp
cmpsb
scas
es
push
fwait
push
jle
jno
fs
cld
add
sahf
inc
mov
mov
daa
es
out
sti
sbb
mov
push
dec
into
push
cmp
inc
jmp
mov
push
sbb
pusha
pop
jbe
add
mov
mov
mov
sbb
mov
rclb
fcomps
cmp
xchg
ds
addr16
sbb
hlt
leave
push
mov
push
lret
adc
inc
xor
cmp
daa
enter
mov
jo
pushf
sub
lds
mov
xchg
fiadds
sub
xlat
pop
stos
iret
test
mov
sbb
or
jmp
add
mov
mov
sti
movsl
cld
xlat
test
sub
jnp
repnz
sbb
xor
sub
cmp
ljmp
bound
sbb
pop
and
fstpt
or
aad
mov
mov
mov
mov
pop
push
jecxz
mov
in
mov
stos
inc
and
mov
cld
movsb
ret
fisubs
cmp
and
xor
loop
jo
sub
add
mov
stos
dec
imul
inc
clc
popf
push
sti
jl
or
out
mov
cmc
cmpsb
add
inc
loopne
xchg
incb
push
inc
or
and
loop
xor
jb
call
dec
nop
adc
cmp
push
int
push
jnp
add
pop
inc
mov
pop
arpl
fucomip
cmc
adc
jg
xor
jl
repnz
mov
lock
aaa
xor
dec
out
xor
pop
fdivrl
xor
dec
push
out
out
push
jno
or
inc
jge
test
fildll
aam
loope
sbb
es
cwtl
xchg
jbe
adc
rcll
xchg
dec
push
cmpsl
pop
arpl
xchg
mov
addl
mov
aaa
addr16
adc
push
adc
das
cld
or
cmc
sub
in
sub
aad
in
mov
out
imul
clc
xor
mov
movsl
pop
enter
sbb
jb
mov
iret
mov
cmp
mov
inc
cs
jmp
jg
cli
popf
aam
push
mov
shlb
fimuls
shll
pop
mov
xor
push
aaa
cwtl
enter
cwtl
sub
mov
adc
test
adc
popf
imul
stc
xchg
or
lret
dec
scas
mov
jl
gs
mov
imul
aad
sbb
push
mov
or
fdivrs
inc
mov
test
or
pushf
lds
xlat
imul
pop
mov
cld
inc
mov
imul
in
ja
hlt
rcrl
repz
hlt
stos
call
aad
pop
xchg
pop
outsl
push
or
xor
shll
and
pop
cmp
and
xchg
leave
int
sbb
push
pushf
lds
and
sahf
int
pushf
cmp
pop
test
jae
inc
test
mov
decb
iret
pop
inc
call
pushf
xor
mov
add
and
push
int3
push
xchg
or
mov
inc
jbe
stos
hlt
pop
cmpb
loope
fimuls
movsl
and
test
xchg
lods
repnz
gs
xchg
out
mov
jge
scas
insb
add
push
xchg
pop
sbb
or
jge
xchg
xlat
movsl
jnp
sbb
shrb
roll
add
fisttpll
cmp
and
int
mov
inc
mov
fnstsw
insl
pop
repnz
sahf
inc
pop
icebp
pop
mov
ss
add
pop
sub
xlat
mov
mov
cmpsb
inc
mov
daa
pushf
call
cltd
xchg
je
fsubrs
sub
pusha
cmpsb
jns
andl
or
jae
add
pop
dec
ss
xchg
cmp
cld
jnp
aaa
mov
iret
mov
stc
inc
outsb
mov
mov
call
xor
jg
mov
aaa
cmpl
out
inc
and
xor
lahf
ljmp
add
push
sub
push
das
pop
scas
push
neg
mov
sbb
cwtl
xchg
imul
mov
adcb
mov
loope
pop
fcom
fldcw
stos
loope
jle
push
mov
int3
inc
push
cmp
sahf
fstl
sub
rorb
cmpsl
xor
jecxz
mov
mov
mov
push
mov
aas
or
xchg
in
int3
and
js
mov
xchg
in
jne
cmc
and
lock
orl
in
xchg
jo
dec
cmpsl
arpl
xor
add
test
in
sahf
es
mov
leave
fs
mov
adc
jle
sub
cmpsl
mov
cmp
and
sub
in
mov
mov
add
ficomps
test
push
push
imul
and
pop
adc
push
and
xchg
mov
sub
or
int
mov
mov
xor
jp
test
sahf
and
xlat
and
sbb
outsl
fnstcw
scas
jg
pop
out
cli
jecxz
out
clc
sbb
push
sub
std
or
repz
in
push
dec
aam
addl
pop
or
stc
dec
orb
mov
push
nop
cmpb
xchg
jbe
push
popf
bound
je
adc
fmul
jbe
inc
pop
lods
jecxz
ljmp
cmp
sub
inc
test
lds
ficoml
or
mov
std
mov
out
pop
mov
pop
mov
cmpl
mov
in
mov
or
cltd
push
and
and
pop
fisubl
test
jge
cmpb
sub
pop
add
inc
xchg
mull
sbb
push
push
orb
stc
push
dec
fisttps
or
jbe
js
jns
jb
int3
jp
dec
mov
jmp
mov
and
jl
xchg
incl
and
xor
jne
sahf
add
stos
outsb
out
lahf
pusha
enter
sbb
add
cmp
out
ret
mov
movsb
mov
aas
scas
cmp
in
jl
adc
push
leave
pushf
and
mov
jmp
repnz
pop
jae
xchg
inc
xchg
and
xchg
outsb
fs
dec
pushf
incb
mov
test
mov
ds
out
push
iret
test
mov
sbb
and
jl
add
xchg
movsb
xchg
cmp
jnp
fisttpl
popf
and
addr16
xchg
sbb
lds
lods
mov
neg
loope
push
push
loop
mov
lcall
mov
fwait
movl
xchg
bound
fs
fnstcw
mov
scas
lahf
push
cmc
dec
stc
xor
inc
pop
mov
and
mov
aas
xchg
or
mov
sub
cmp
lods
scas
mov
ds
pushf
sahf
dec
fcmovb
sub
jecxz
sub
stc
gs
mov
inc
ds
lret
bound
lahf
pop
ljmp
xchg
sub
inc
pop
add
add
in
lcall
add
mov
adc
sahf
leave
stc
push
outsl
int3
mov
loope
or
push
pop
ss
sub
pop
xchg
adc
rcrl
lcall
sbb
mov
push
icebp
mov
add
xor
mov
adc
mov
xor
xchg
insb
or
fnsave
push
mov
repz
idivl
sub
movsl
in
cmp
notb
jecxz
jnp
adc
xor
mov
sub
jmp
jg
mov
inc
inc
popa
sbb
xchg
in
bound
aam
mov
adc
rolb
cmp
cmp
jmp
pop
insl
pop
fildl
cld
and
xchg
mov
sarl
notl
fists
shll
sahf
lret
dec
sub
imul
stos
stos
mov
jmp
push
xchg
cmp
mov
stos
das
in
mov
sbb
sbbl
shld
xchg
cmp
mov
rolb
xor
cs
pop
clc
and
xchg
popa
pop
add
or
xchg
push
cs
sub
cmc
mov
imul
movsb
adc
out
iret
or
popa
std
sahf
cmpsb
push
add
xchg
je
mov
jecxz
in
sub
dec
test
insb
inc
push
les
inc
xorl
out
sbb
xchg
push
sub
push
aaa
in
xchg
loope
stc
fucomip
sub
hlt
scas
sbb
das
and
sub
fcmovnu
mov
push
call
nop
shrb
pop
and
insb
test
dec
push
pop
daa
and
ja
test
pop
mov
aam
and
add
cltd
pushf
rcpps
aas
add
pop
push
std
jo
repnz
jmp
xor
ficoms
add
and
and
mov
pop
stc
jne
clc
cli
nop
mov
push
xor
jmp
out
pop
cltd
outsb
pushf
lahf
push
mov
sbb
jo
add
test
inc
xor
dec
lods
and
jg
cmc
push
pop
dec
orb
testb
sahf
loope
ret
jae
mov
repnz
lods
mov
pop
mov
dec
sbb
stos
inc
add
dec
in
iret
push
fidivl
xor
xor
sbb
adc
cs
mov
sti
adc
out
push
jb
push
xor
mov
les
stc
inc
jb
repnz
cs
insb
lret
pop
movsb
xor
daa
mov
iret
or
mov
cwtl
testb
push
push
add
cs
or
lcall
je
hlt
xor
xchg
stos
mov
pop
inc
cmc
loop
and
jns
sahf
out
stos
mov
adc
adcb
jo
sub
lret
aaa
rcr
cmp
sahf
popa
sbb
and
sbb
fisubrl
out
push
sarb
inc
push
mov
cmovle
lret
iret
popa
add
iret
les
mov
jmp
repz
outsb
jg
or
test
inc
jg
int3
pop
sub
dec
adc
or
cmp
mov
push
sub
sbbl
subl
mov
xchg
sub
sbb
lahf
iret
and
enter
les
adc
addr16
jge
xchg
sub
out
or
dec
outsb
cmp
push
sub
dec
mov
xchg
mov
xchg
sub
jg
and
pushf
xchg
sbb
and
add
mov
cli
mov
pop
in
jecxz
pop
rolb
inc
cli
loopne
push
adc
jne
outsb
lods
add
lahf
mov
mov
test
inc
shrl
icebp
push
mov
lods
mov
xor
fdivrs
mov
aam
adc
loopne
add
andb
mov
jb
xchg
and
call
inc
jns
or
idiv
ss
jmp
or
mov
hlt
negb
sub
mov
cltd
xchg
or
cmp
pushl
icebp
jne
jbe
inc
and
dec
push
fmul
jb
stc
lcall
mov
imul
jmp
sti
jae
sub
in
loopne
mov
mov
cmc
mov
shrl
ret
outsb
cmp
cmpsb
fidivrs
out
clc
adc
lods
scas
loopne
lret
lods
push
xor
cmp
ss
enterw
data16
inc
mov
mov
push
jmp
dec
lds
push
push
mov
mov
clc
mov
jecxz
mov
icebp
subb
push
add
fdivrp
jno
mov
cltd
and
xor
addr16
lock
pop
nop
sbb
dec
pop
or
sub
mov
insl
in
xlat
enter
xchg
mov
inc
push
push
int3
xchg
and
dec
sbb
adc
sub
addr16
ret
and
fcomps
addr16
dec
dec
subb
pop
inc
push
mov
mov
lods
fnstenv
pusha
jg
and
jg
shl
test
sub
inc
push
or
inc
gs
mov
bound
fs
sahf
imul
add
sbb
jns
adc
aas
add
dec
mov
inc
mov
mov
popf
cmp
fs
cmp
pop
aaa
dec
fimuls
cmp
sahf
cmpsl
incb
push
mov
cmp
jg
movsb
dec
add
icebp
aas
add
mov
outsb
andb
sub
mov
cmc
loope,pn
std
pop
or
pop
jg
jns
lret
push
clc
jb
wbinvd
in
jmp
mov
xchg
inc
dec
pushf
stos
rolb
and
dec
adcl
cmc
mov
gs
stos
in
xor
mov
adc
out
repz
xor
mov
pushf
pop
adc
shll
jmp
leave
add
jp
outsb
push
repz
dec
or
push
cwtl
pop
dec
lods
fs
mov
inc
cmp
ret
call
mov
pop
lds
ficoml
std
cmc
repnz
inc
cmp
je
repz
imul
aad
out
pusha
fdiv
add
jne
mov
enter
loopne
div
sbbb
mov
bound
dec
out
sub
add
adc
popa
mov
add
pop
mov
pop
add
mov
jae
jbe
sbb
or
sbb
xchg
ljmp
jno
pop
dec
lret
les
es
loop
dec
sbb
js
xchg
xor
dec
dec
stc
scas
jg
daa
lds
xor
push
pusha
jae
outsl
jp
std
scas
loopne
jmp
fidivl
lea
jns
lds
pop
ret
jg
jmp
xchg
mov
ds
insl
jbe
je
push
insl
xchg
jl
addr16
mov
push
test
mov
jnp
jno
pop
lahf
dec
inc
lods
xor
xor
fs
shlb
or
out
mov
mov
push
xchg
fs
inc
sub
xor
loop
aam
mov
ss
int
sub
cs
pop
jne
push
addl
mov
cmpb
stc
lcall
cltd
adc
jle
ficompl
faddp
cmpb
outsb
add
add
stos
popf
mov
xor
movsb
in
lcall
add
ljmp
movsb
xchg
sti
pop
adc
insl
cmp
push
jmp
test
les
icebp
in
mov
xor
in
ret
shlb
loope
cs
orb
xchg
mov
inc
fmull
sahf
push
sbb
fstpt
test
outsl
xor
repz
fnstcw
jno
ret
ja
sbb
hlt
lods
fbstp
mov
inc
cmp
call
cmp
adc
sub
scas
adc
in
lcall
aad
out
out
or
icebp
mov
testl
or
aad
sahf
out
inc
push
clc
pop
push
inc
cmp
sbb
lods
call
sbb
and
scas
or
or
aaa
loope
jle
sub
cmp
es
jl
sub
rcrb
jecxz
mov
cmpsl
add
mov
clc
pusha
push
int
cmp
inc
jnp
mov
arpl
add
cs
jmp
dec
lods
adc
cmp
pop
inc
call
outsb
cmp
insb
ret
xchg
test
enter
insl
roll
dec
shrb
dec
addr16
gs
mov
xchg
jle
mov
shll
sti
adc
outsb
xchg
mov
mov
mov
add
jecxz
sub
mov
cmp
lahf
jne
out
test
mov
mov
jb
nop
es
shrl
out
jb
adc
jae
cmp
push
and
imul
sub
jle
iret
pop
cwtl
pop
pop
sbb
push
arpl
lret
stc
mov
push
pop
sbb
fidivrs
pop
jns
into
jecxz
clc
add
pop
push
jno
push
insb
je
mov
pop
mov
scas
out
ret
xchg
push
stos
aaa
lcall
popf
sub
fisubs
mov
fsubr
cmp
add
enter
call
inc
jae
pop
popf
jecxz
test
mov
popf
add
pop
sub
mov
cmp
out
out
cmp
fdiv
loop
dec
mov
cmp
xchg
or
cld
sub
cmp
js
or
sub
xchg
out
mov
imul
movsl
and
push
test
std
push
push
push
mov
lods
shlb
jbe
mov
je
pop
out
sbb
jns
xor
daa
adc
lahf
mov
ficompl
mov
sbb
push
mov
les
adc
push
cmp
or
mov
daa
mov
pop
and
xor
shlb
ficomps
arpl
outsl
aas
mov
shrb
repz
loop
push
ja
fprem1
clc
addr16
sub
leave
mov
in
cmp
pop
movsl
sbb
aad
pop
inc
mov
int
mov
fisttpll
loop
cmp
ficoms
je
enter
push
adc
or
sub
jge
rcr
in
mov
mov
cld
mov
mov
sarb
or
aam
out
out
jl
cli
xchg
mov
test
jmp
xor
push
xchg
fucomip
ret
push
fsubs
int
lret
and
add
add
aaa
adc
bound
xor
mov
xor
shlb
pop
insb
pusha
arpl
ret
mov
popa
mov
mov
gs
jo
or
jne
or
aas
xor
xlat
xchg
pop
mov
xchg
test
xor
adc
rcr
or
lahf
cwtl
bound
lahf
or
fsubrl
fs
inc
mov
or
and
scas
orb
jns
sub
add
jmp
mov
es
lret
cs
jns
je
shrb
les
shl
pop
push
test
cmpb
jno
ret
dec
and
add
fdivrs
push
jg
jo
sar
push
and
rorl
push
bound
aad
mov
mov
dec
and
add
lahf
xchg
aam
xor
std
loopne
adc
jb
inc
out
push
shlb
fs
std
xchg
or
sub
pop
stos
sbb
jle
pop
cli
jne
mov
sub
pminsw
int3
xchg
xchg
jg
xor
out
roll
jnp
mov
add
adcb
xchg
or
das
jge
fs
xchg
jecxz
sti
idivb
fldlg2
test
data16
pop
addr16
scas
xchg
adc
stos
dec
push
sahf
mov
out
icebp
pop
push
cmp
insb
mov
push
sbb
stos
icebp
push
push
pop
out
loop
and
gs
aaa
xorl
jp
cmc
shlb
push
sub
inc
or
add
fcmovbe
pushf
push
adc
pop
cmpl
rcrl
xchg
lret
mov
cmp
or
js
jge
jbe
xchg
inc
adc
sub
sbb
jns
pop
and
fadds
mov
adc
jae
adc
add
inc
cli
jl
dec
add
enter
in
fistpll
or
and
iret
pop
pushf
and
daa
push
add
addl
repz
jns
pop
inc
es
cmpsb
sub
rcll
dec
push
outsb
adc
cld
jns
rolb
aad
mov
or
repnz
jle
sarl
cmp
loopne
cmc
enter
xchg
dec
popa
inc
lret
sub
jge
sbb
ds
out
sti
out
sub
es
fs
clc
pop
and
sbb
xor
popa
push
in
aaa
xchg
aas
fisttpl
pop
ret
mov
sbb
fnstcw
leave
in
push
dec
push
push
aaa
mov
and
imul
mov
orb
jp
adc
dec
xor
repnz
gs
fistps
mov
sarb
fisubrs
adc
sub
xor
movq
mov
xlat
xchg
xor
loopne
dec
jl
pusha
lcall
pop
lea
cmpsb
call
ret
mov
jno
fimull
popf
dec
sub
and
adc
lods
adc
push
mov
sbb
jg
les
sub
gs
out
icebp
shrl
shr
mov
sub
mov
cld
mov
xchg
in
mov
inc
add
inc
cwtl
lret
cmc
sub
push
push
or
pop
jle
aas
test
clc
or
notl
cmp
incb
mov
mov
cmp
sbb
out
xlat
fistps
inc
fidivrl
sub
xchg
dec
movsl
inc
mov
test
push
inc
outsb
mov
iret
jns
mov
sti
jp
imul
dec
inc
popf
clts
sti
scas
jge
lods
pop
rcr
js
in
adc
mov
sarb
or
push
stc
adc
push
nop
mov
cmc
test
popf
xor
xorb
cmp
mov
mov
xlat
rcrb
sbbl
xchg
and
dec
mov
pop
stc
cltd
dec
xor
ror
jb
push
repnz
push
mov
mov
mov
sbb
adc
xor
movsl
insl
mov
leave
mov
out
nop
bound
cmc
push
jmp
xchg
jno
sbb
fldcw
sbb
or
and
or
mov
outsb
mov
inc
jecxz
mov
add
movl
mov
inc
cmpl
push
xor
fbld
imul
cmpl
dec
ffree
lret
mov
popf
push
ret
loope
and
jge
outsl
push
cli
cwtl
cmp
imul
mov
mov
cmp
mov
mov
dec
cmc
shll
rcl
mov
pop
repz
lahf
xor
jle
jns
xor
xor
and
cmc
push
xor
push
dec
adc
outsl
sbbl
stos
movsl
out
push
xchg
sub
jg
addr16
xchg
mov
hlt
and
xor
fnstenv
and
mov
sub
push
xor
hlt
addb
push
xchg
adc
add
xorl
pop
mov
mov
sbb
iret
ss
add
les
daa
aas
rorl
mov
cmp
dec
das
and
sti
lret
xor
mov
shlb
lds
mov
out
pushf
pop
les
pop
insb
xchg
test
popf
pop
add
push
push
sub
lcall
xchg
lret
movsl
jp
out
adc
jb
inc
fcoms
pop
adc
push
mov
jecxz
repnz
arpl
push
and
add
aad
mov
mov
andl
pop
jae
or
lcall
jecxz
pop
push
test
cld
lcall
xchg
jmp
fstl
das
in
mov
ret
scas
nop
cmp
jne
loopne
pop
ljmp
idivb
jecxz
or
jl
jne
mov
jg
scas
mov
filds
push
nop
and
xchg
xchg
aad
inc
sbb
inc
arpl
cmpsl
scas
sbb
mov
and
pop
dec
mov
mov
rcl
js
sti
add
jge
mov
xlat
ficomps
loop
adc
cld
push
cmpsl
repnz
inc
adcl
ljmp
xor
jp
icebp
fwait
cltd
fs
js
jo
jb
cmp
loopne
inc
shlb
xor
inc
inc
inc
jbe
xchg
cmc
mov
mov
test
cmp
pop
in
enter
insl
sub
adc
and
mov
aas
pop
mov
popf
or
cld
jmp
in
int3
outsb
leave
xlat
cli
jbe
dec
jp
xchg
jle
test
cmp
push
movsl
cmp
xor
mov
xchg
mov
or
xchg
pop
loop
icebp
addr16
fsts
sbb
xor
scas
jns
mov
out
jp
leave
push
mov
and
push
jns
sete
cmp
stc
dec
mov
imul
mov
fwait
jne
fwait
or
lea
dec
ret
je
and
and
adc
dec
xor
cltd
in
mov
pop
mov
lret
jbe
rcrb
mov
lock
cmp
push
scas
sbb
loope
mov
stc
sub
hlt
arpl
push
add
push
cmp
faddl
sbb
mov
jbe
movsb
rcll
sbb
sub
loope
bound
mov
inc
hlt
xchg
mov
aas
sbb
cmp
dec
shl
aam
cmp
mov
test
adc
int3
mov
call
cmp
adc
stos
inc
dec
outsb
mov
mov
sbb
test
mov
mov
inc
das
outsb
mov
push
in
std
add
cmp
pusha
imul
lea
push
mov
inc
test
ficomps
je,pt
mov
test
xchg
iret
pop
add
pop
leave
mov
dec
jbe
jnp
and
or
fbld
leave
stos
in
and
loopne
xor
lcall
xor
les
psubw
dec
lds
dec
ja
fs
push
add
xchg
repz
mov
adc
js
jecxz
idiv
mov
push
xchg
movsl
lret
add
mov
aad
test
popa
dec
mov
and
pop
ljmp
mov
push
jns
mov
aas
xor
push
in
add
fs
add
xchg
insb
addr16
cwtl
decb
jnp
add
out
ljmp
ljmp
fwait
test
pop
mov
jmp
daa
lods
fidivs
aam
hlt
outsl
cmc
push
les
mov
ret
mov
or
scas
xchg
sub
xchg
mov
aas
cmpsl
test
sbb
xchg
daa
add
mov
fdivs
test
fmull
insl
pop
fnstsw
xchg
enter
out
clc
popa
data16
push
mov
xor
inc
shr
push
sub
mov
flds
in
xchg
aam
pusha
nop
sub
jmp
idivl
cmp
add
mov
and
in
int3
test
stos
stc
test
test
cmp
or
aad
repz
cmpsl
mov
jecxz
adc
inc
lea
fmul
pop
add
cwtl
arpl
in
inc
icebp
cltd
cmp
or
jg
xor
add
gs
outsb
jle
pop
xchg
jno
nop
aam
pop
popf
add
jnp
fisttps
pop
js
cltd
out
xchg
jb
gs
jp
test
stos
xchg
pop
outsl
in
pop
push
add
pop
fdivl
jae
cli
lods
jbe
push
dec
fcmovnu
in
cmc
leave
or
outsb
adc
mull
ljmp
imul
movsb
or
xlat
inc
add
cmp
mov
fidivrl
sbb
mov
cld
in
push
inc
push
or
cmp
xor
inc
xor
xlat
fimull
outsb
lcall
clc
jg
outsl
inc
sub
add
inc
inc
and
jmp
xlat
in
pop
and
xlat
inc
xor
mov
inc
jne
into
pop
daa
shll
lods
or
add
jp
dec
fcoms
add
cli
and
sub
les
push
sbb
or
hlt
out
xchg
fdivrl
outsb
mov
loop
popa
and
popa
jmp
jmp
or
cltd
into
mov
popa
stos
mov
imulb
in
out
pop
orl
cld
pop
mov
adc
add
testb
mov
jb
dec
mov
pop
mov
fsts
pop
push
sbbl
mov
mov
push
cwtl
sarb
jge
fcmovu
out
pop
dec
mov
mov
cmp
lahf
pusha
xor
sub
data16
pop
adc
mov
xchg
pushf
push
loop
jae
inc
popa
sarl
jnp
movsl
fcompl
xlat
mov
xor
leave
enter
out
pop
inc
ja
bound
xor
das
adc
sub
and
andb
repnz
jge
aad
pop
loope
adc
push
sbb
pop
jmp
dec
or
lock
mov
dec
bound
les
adcl
sti
sti
push
cltd
add
fisubl
fbstp
dec
out
or
inc
jbe
arpl
popa
and
xor
jns
dec
ljmp
sbb
jb
pop
dec
xor
shrb
sub
fucomip
dec
xlat
dec
inc
sti
shl
push
push
aad
lcall
sbb
fnstenv
ficoms
fdivl
pop
pop
push
mov
dec
cld
nop
sub
sub
pop
push
fcoml
cmp
subb
mov
mov
push
lea
stos
and
fdivrs
adc
orb
or
out
add
dec
jp
psubusb
and
lret
arpl
enter
mov
in
fs
out
movsl
xor
adc
cltd
sbb
repz
mov
adc
outsl
dec
mov
xlat
jne
and
ja
pop
sub
sbb
in
push
rcl
aas
lret
push
pop
mov
test
ret
repnz
pop
cli
jmp
rorb
xor
push
hlt
cmp
in
xchg
push
sub
iret
loopne
ret
test
xlat
push
lret
aas
pop
push
mov
lret
mov
sub
ja
mov
xchg
push
sbb
sub
mov
rorl
xchg
inc
fwait
jne
inc
sarb
sub
or
add
xor
pushf
loop
mov
mov
bndstx
lahf
out
std
shlb
popa
ja
in
mov
imul
or
xchg
mov
and
and
xor
cmc
dec
repz
pop
mov
dec
sbb
push
wrmsr
mov
mov
fists
cmp
into
and
sbb
cli
loopne
push
push
pop
sbb
jl
bound
dec
dec
cmpsb
imul
loop
push
add
mov
subb
test
inc
lcall
pop
mov
shl
ja
lods
js
leave
cmp
sahf
stos
psubd
and
cli
inc
aad
mov
mov
mov
rorb
or
xchg
cltd
in
jl
or
aas
in
dec
ficomps
push
cs
subb
pop
xor
mov
adc
inc
test
xor
aas
int3
add
xchg
es
dec
leave
out
jmp
mov
cwtl
adc
jmp
xchg
push
sbb
lahf
xchg
mov
daa
xor
sub
pusha
jne
call
imul
insl
sbb
xchg
mov
inc
sub
shl
rol
testb
mov
jge
add
xor
mov
push
sbb
cmp
in
inc
cmpsl
int3
push
jle
cld
push
cli
adc
es
sbb
adc
mov
nop
ja
imul
mov
out
inc
push
jmp
bound
mov
arpl
jge
add
in
pop
push
jecxz
ljmp
pop
jmp
mov
mov
mov
ljmp
lock
je
rclb
lods
cmpsb
push
xchg
inc
aad
ja
add
mov
nop
jo
cmp
std
dec
je
and
mov
cmp
pop
cmpsb
push
arpl
jns
xchg
lahf
dec
or
mov
addr16
mov
sti
das
jl
mov
cmc
fsubrl
fistpl
icebp
cli
mov
mov
mov
pop
ds
adc
call
pop
shll
xor
icebp
dec
lahf
mov
je
outsl
or
repz
je
mov
lret
ljmp
sub
rclb
scas
cltd
pushf
lret
testb
and
scas
adcb
out
mov
and
sbb
fdivrs
jg
xchg
add
in
jp
sbb
mov
sbb
sub
jb
arpl
and
inc
xchg
xchg
div
or
push
mov
or
and
fs
push
lea
push
mulb
cmpsl
test
fwait
shr
js
cmpl
add
sub
xchg
mov
sub
ficoml
push
lcall
ja
testl
cs
mov
fs
inc
fiaddl
pop
fstpl
hlt
int
mov
sarl
adc
std
fisubs
sub
xchg
jge
imul
sbb
shll
xor
pop
or
outsl
ret
sbb
sbbb
dec
jae
cs
and
xor
sub
inc
push
in
mov
aam
or
std
cmp
xchg
pushf
xor
adc
loopne
test
dec
ret
lret
add
stos
or
call
testb
pop
jbe
repz
adc
pop
inc
push
pop
xor
adc
arpl
mov
lds
mov
test
icebp
shlb
cmpsb
dec
jmp
pop
or
mov
jp
fs
shlb
in
shl
xchg
cli
lret
mov
pop
iret
mov
mov
jno
clc
imul
imul
mov
aam
or
mov
push
cmp
sub
popa
jb
pop
fyl2x
sysenter
pop
inc
push
xchg
xor
ja
cmp
neg
dec
dec
dec
xchg
addr16
out
xorl
ret
aaa
cmp
jae
sub
mov
mov
add
lea
iret
iret
push
jg
jbe
or
in
or
push
mov
inc
push
push
aaa
mov
addb
outsb
cmc
addr16
std
pop
add
jnp
cmp
cmp
dec
dec
cmp
lds
cmp
movsl
filds
das
dec
inc
in
je
roll
mov
mov
iret
loop
mov
lcall
ljmp
xor
out
cmc
push
lea
pop
cld
sub
inc
mov
mov
xchg
xchg
cmp
and
aad
inc
and
push
sti
and
sahf
cmp
mov
sub
xchg
filds
lret
or
sbb
decl
data16
mov
mov
scas
mov
sbb
sarb
loopne
int3
lods
mov
push
sbb
idiv
shlb
and
ljmp
mull
hlt
stc
lods
push
mov
inc
mov
and
mov
xor
cmc
inc
inc
cmp
js,pn
mov
add
lods
rorb
mov
daa
js
sahf
addr16
and
push
fdivl
mov
jmp
adc
insb
scas
addb
jne
ret
sub
push
push
sarb
or
mov
ja
sub
adc
cmp
sub
nop
xor
mov
fucomp
outsb
xor
mov
lods
dec
jmp
shlb
pop
push
int
mov
mov
inc
push
xlat
xchg
mov
add
push
inc
into
in
fsts
hlt
stc
and
inc
inc
mov
add
aas
in
xlat
cld
ljmp
inc
pop
mov
cli
xchg
repnz
mov
icebp
in
test
pop
fsubp
jae
dec
iret
push
arpl
not
xchg
movsl
cmp
xchg
push
icebp
push
fnsave
ljmp
mov
xorl
sub
xchg
jns
lods
sub
push
ja
mov
and
xchg
cmp
push
inc
push
addr16
fisubs
or
ljmp
idivl
cwtl
enter
push
dec
xor
pop
and
inc
popa
test
pop
filds
jne
test
decb
or
push
rcr
mov
test
mov
dec
and
sub
and
lds
mov
or
ja
dec
rcll
fistl
dec
and
xchg
out
stos
aad
mov
mov
or
adc
mov
mov
adc
les
ret
add
mov
stos
stc
stos
adc
in
popl
cli
jmp
jno
push
clc
cmpb
mov
out
or
testb
ja
or
inc
push
cmp
dec
out
cmpsl
sub
jns
pusha
cmp
mov
cli
push
mov
test
xchg
data16
adc
sub
mov
popf
in
xor
aam
inc
pop
repnz
jb
mov
push
mov
out
push
aad
mov
sbb
loopne
scas
js
jle
shr
movq
xor
add
test
mov
mov
es
add
rcr
sbb
sub
das
jo
mov
int3
lods
mov
repz
mov
push
ss
push
fstl
jle
lock
sbb
mov
inc
and
and
sub
clc
outsl
test
leave
popa
or
push
dec
cmp
push
repnz
jnp
roll
aad
dec
sbb
add
testb
mov
push
xchg
inc
inc
lahf
into
insb
xchg
add
push
cmp
cld
jle
loopne
mov
jmp
cmp
adc
imul
mov
pop
into
cs
mov
xchg
sbbb
sarl
lahf
aad
in
mov
inc
clc
pop
fmuls
mov
push
jecxz
xor
push
clc
inc
xorb
fisubl
ljmp
inc
adc
sub
test
xor
imul
xor
ret
mov
addr16
das
fmuls
mov
test
rcrb
mov
and
movsb
cmp
jo
push
pop
fstpt
push
dec
fcomp
call
mov
and
or
inc
shl
or
add
or
push
popa
cmp
sbb
insl
jne
mov
cmp
mov
aad
jg
sti
pop
dec
sti
fisttpl
mov
out
lahf
and
sub
mov
jae
loopne
mov
pop
mov
push
mov
xchg
or
ficompl
je
mov
leave
fiadds
mov
push
shlb
cmp
into
jae
out
loopne
mull
int3
cmp
push
fs
insl
arpl
sbb
int
add
mov
rorb
inc
int3
cmp
jno
push
into
imul
push
pop
xchg
mov
rorl
push
movsl
pop
out
dec
iret
dec
loop
repnz
pushf
fwait
negl
stos
xor
aad
insl
mov
jns
mov
dec
sbb
hlt
dec
out
add
repnz
xor
cmp
push
mov
mov
xchg
loopne
jae
push
popa
cmc
mov
jle
adc
dec
filds
inc
xchg
in
scas
ds
movsl
xchg
and
xchg
or
scas
push
iret
jg
ljmp
dec
jb
std
fcomps
jge
arpl
scas
and
dec
in
iret
negb
test
sbb
inc
movsb
xchg
mov
mov
clc
sbb
aad
pop
popf
fldcw
sarl
add
inc
data16
ficompl
lahf
call
jecxz
imul
pop
stos
add
pop
in
sbb
inc
pop
fs
jg
pop
ds
mov
mov
mov
mov
mov
cmpsb
jno
shll
leave
insl
mov
fnstcw
stos
stc
or
out
xor
test
or
mov
idivl
xchg
add
aam
sbb
inc
xor
bound
insl
subb
cld
data16
and
and
leave
in
sub
setle
pop
ljmp
ret
mov
sbb
cbtw
leave
inc
xor
jp
dec
xchg
fwait
or
aad
pop
jge
aaa
inc
aaa
enter
add
sti
add
xchg
jne
sahf
xchg
push
enter
mov
ret
inc
inc
sub
and
or
gs
adc
xchg
and
xor
mov
mov
mov
inc
xchg
or
pushf
cmp
mov
jnp
dec
js
daa
scas
in
shl
or
and
mov
add
jp
xchg
adc
cmp
xlat
ret
or
mov
cmpsl
jecxz
loop
jb
stc
enter
xlat
jg
dec
pop
arpl
ss
xor
mov
mov
das
xchg
xlat
or
stc
data16
pop
addr16
mov
imul
ss
and
lea
repnz
stos
push
aaa
imull
rorl
addl
sbb
sbb
xor
int
xor
xchg
inc
sub
jecxz
adc
ret
popa
dec
scas
inc
lds
sahf
mov
inc
pusha
js
and
hlt
jbe
aam
lcall
xchg
pusha
push
imul
in
mov
xor
popf
cmp
mov
gs
push
mov
and
dec
add
adc
pop
cmp
ljmp
fsub
ljmp
and
add
mov
out
mov
arpl
test
hlt
lcall
and
push
hlt
shrl
push
mov
dec
xchg
xchg
or
jb
incl
addl
xchg
and
inc
addr16
mov
xchg
push
out
mov
test
lods
sub
arpl
mov
and
pop
mov
nop
ljmp
mov
aas
shr
pop
mov
notl
jmp
mov
popa
es
xchg
mov
mov
js
hlt
jp
iret
leave
mov
fwait
sar
sbb
mov
popa
sbbl
jmp
push
ss
mov
jnp
int
je
lahf
jbe
clc
and
popf
adc
in
inc
inc
push
jns
and
xor
push
addr16
imul
loop
xor
arpl
xor
out
test
lea
sub
pop
mov
sbb
mov
repnz
insb
mov
add
lret
mov
int
add
sbb
outsb
cld
mov
pop
rdtsc
les
insb
fidivrs
fmuls
dec
mov
mov
jecxz
xlat
mov
add
push
or
dec
push
test
push
cmp
xchg
stc
mov
loop
pop
inc
lcall
pop
and
shlb
cmc
or
mov
and
stos
sub
sub
repnz
aad
lds
shr
hlt
sbb
push
and
orl
jb
push
pop
repnz
or
mov
lods
fcomp
pop
lds
sbb
gs
cmp
popf
lahf
mov
aam
popf
call
mov
fwait
push
int3
cmp
dec
lods
sub
outsl
bound
cmp
shl
and
adc
mov
push
dec
pop
xchg
js
push
inc
ret
sub
sub
aam
popa
lret
pop
mov
xchg
scas
xor
lret
cwtl
lds
xchg
cwtl
ret
shll
sub
setge
xchg
and
insb
scas
sbb
imul
mov
aas
mov
ds
add
xchg
cmpsb
sub
inc
ds
mov
icebp
add
js
icebp
sbbb
mov
xchg
fdivl
fsub
leave
aaa
inc
jae
fisubl
dec
push
inc
fisttps
mov
cwtl
inc
out
or
daa
sub
sub
jge
leave
jmp
cmc
mov
push
rcrb
xor
jp
sub
dec
clc
dec
jb
shl
cmpsb
xorl
lea
inc
cmovp
add
add
push
gs
pop
jae
addr16
pushf
or
mov
pop
and
aam
stos
sbb
icebp
jecxz
sahf
jecxz
ds
pop
aam
or
mov
loop
stos
repz
in
in
pop
out
pop
mov
ret
mov
jg
pop
push
punpcklbw
inc
movsl
cmc
fcompl
cmpsb
insl
ret
loope
push
xlat
jbe
ja
xor
adc
xlat
pop
mov
mov
push
enter
pop
mov
cmp
xor
xor
lods
or
and
dec
mov
mov
jo
pop
into
out
addr16
push
repnz
cmp
xchg
pop
loopne
cmc
adc
jnp
leave
mov
int3
out
lock
mov
sbb
inc
stos
push
loop
adc
stos
xchg
in
inc
js
dec
mov
jge
outsb
add
repz
pop
sub
mov
mov
dec
mov
loope
enter
test
iret
sbb
les
xor
pop
shr
push
push
jnp
fisttpl
jmp
jecxz
pop
sub
shlb
jae
push
lods
out
cmpl
sub
repnz
jae
adc
cltd
pop
mov
lret
cs
lret
jge
out
divl
bound
int
test
lcall
shrl
flds
cli
pop
je
dec
fsubrl
stc
add
cmp
sbb
les
in
aad
loopne
sub
sub
inc
jge
les
aaa
into
adc
jmp
jmp
stc
mov
arpl
mov
push
dec
xor
and
cltd
pop
pop
sbb
fiadds
arpl
in
mov
fisubrl
adc
mov
jecxz
mov
fstpt
inc
inc
in
push
push
xchg
cmpsb
xor
fistpll
in
data16
sti
mov
out
add
push
xchg
lret
sbb
jb
call
addr16
lea
into
imul
xlat
sbb
fldenv
ds
lods
stos
xor
pop
es
ja
clc
push
xchg
pop
fsubs
jg
dec
cmp
cmpsl
lcall
sub
cmp
cmp
sub
movsl
aam
adc
int3
mov
repz
cmp
dec
pusha
imul
int
xchg
jg
test
push
cld
movsl
and
imul
stc
pop
xor
xorl
pop
mov
push
or
mov
test
movsl
xlat
dec
pop
push
inc
pop
mov
fidivrs
mov
mov
mov
mov
mov
cmp
mov
sbbb
and
lods
xor
push
sub
test
xor
pop
mov
bound
mov
push
jb
xchg
and
leave
lahf
add
mov
push
js
insl
les
push
or
ljmp
lock
daa
adc
and
and
adc
pop
lods
loopne
cltd
push
ret
sub
out
sbb
mov
adc
cltd
adc
push
lods
cmp
cmp
mov
jnp
add
out
mov
lock
add
pushf
mov
rolb
movsb
ds
add
add
push
inc
mov
mov
jecxz
fidivrs
xchg
out
jl
xor
test
and
test
sbb
movsb
dec
es
push
movsb
and
in
sahf
loope
lret
add
fnclex
mov
cmp
test
repnz
shrb
jns
mov
test
daa
fidivs
fisubrs
movsb
mov
or
int
movsb
xchg
push
mov
test
pop
je
sub
jp
fimuls
fists
bound
add
adc
int
xor
push
in
dec
mov
std
or
test
dec
pop
test
jg
andb
arpl
jle
std
and
jle
mov
and
jp
or
sub
cs
jbe
cmp
xchg
dec
sbb
sbb
loopne
pop
add
xchg
pop
repz
shrl
lahf
sbb
and
shl
je
sbb
xchg
into
lods
pop
push
fwait
pushf
inc
adc
int
sbb
lret
lods
inc
test
sahf
jns
lock
int3
sub
adcb
jns
pop
aad
ja
iret
cmpsb
repz
inc
jecxz
or
mov
dec
xchg
ja
mov
lcall
mov
ret
je
add
lods
dec
stos
cmp
push
xchg
xor
mov
xchg
jns
cld
adc
dec
dec
sbb
push
mov
les
pop
outsl
js
or
jns
jo
insl
cmp
xchg
mov
mov
dec
push
jb
push
imul
arpl
fmuls
aaa
dec
mov
push
mov
test
cli
sarl
pop
dec
push
pop
fisttpll
insl
mov
xor
xchg
test
ret
addr16
xor
ja
pop
icebp
dec
loop
or
ljmp
pop
cld
pop
cmp
inc
sbbb
mov
xchg
fsubr
fidivrs
or
adc
insb
inc
adc
mov
cmp
push
dec
adc
loopne
rcl
jp
push
xchg
mov
shl
pop
adc
cwtl
or
mov
incb
loopne
jnp
cmp
cld
lds
cmp
arpl
sub
fistps
cmp
dec
push
dec
fstpt
xor
mov
loope
mov
pop
shlb
adc
rol
stos
lock
mulb
lahf
int3
ljmp
adc
mov
mov
xor
mov
iret
out
mov
mov
inc
fidivs
loopne
xor
add
rclb
cmp
cld
out
jae
sub
sub
inc
mov
or
fcmovu
cmp
pusha
inc
lods
jp
subb
rorb
dec
call
adcl
inc
mov
adc
and
mov
cmp
cmp
xchg
shr
dec
sti
call
scas
mov
divb
lret
ds
and
mov
dec
int3
mov
fisttps
cltd
xchg
pop
hlt
pusha
sbb
rcrl
push
add
cmp
mov
mov
cs
xor
notl
ret
scas
mov
int
xor
rcll
orl
leave
jmp
jg
js
mov
and
std
xchg
call
enter
push
daa
dec
bnd
xchg
add
es
test
pop
les
loop
sub
fldt
mov
jb
loopne
sub
dec
sbb
imul
inc
push
mov
ljmp
mov
out
je
lods
push
ret
sub
mov
into
dec
loopne
mov
aas
repz
mov
inc
jmp
xchg
jl
and
inc
mov
cmpsl
mov
jae
out
outsl
mov
fcmovb
jg
add
dec
in
imul
and
sub
pop
mov
inc
push
push
repnz
dec
inc
inc
ja
sub
mov
xor
repnz
and
in
push
mov
or
mov
push
bound
out
dec
xchg
in
loop
or
cmp
jmp
loope
pop
dec
sbb
stos
xchg
push
and
popf
cmpsb
gs
pop
and
inc
sub
das
in
pop
pop
mulb
std
enter
out
movsl
je,pt
test
loop
pop
inc
cmpsb
xor
jl
pop
aad
inc
mov
dec
mov
das
and
cs
push
fldenv
push
outsl
push
cs
lcall
nop
adc
pop
mov
cmpl
lcall
cs
fwait
jp
mov
mov
xchg
add
or
aaa
mov
sub
ljmp
orb
je
sub
or
jno
sbb
jo
loope
call
mov
bound
adc
push
ss
pop
movsb
mov
rol
out
test
stos
decb
mov
jg
mov
in
sbb
insb
in
ret
adc
movsl
xor
imul
sub
xchg
fstps
loop
mov
jp
jp
jg
push
pop
std
adc
rcrb
repnz
insl
or
dec
in
sbb
mov
mov
pop
adc
out
mov
in
lods
in
mov
fistps
jbe
jae
cmp
inc
rcrb
iret
push
cmp
je
fs
push
cmp
add
sub
lcall
stos
stos
cmpsl
cmp
adc
mov
ja
sarb
jns
pop
jne
mov
sbb
pop
xor
cmp
out
aas
and
out
mov
aam
movsb
stc
faddp
test
rorl
call
cld
mov
xor
lea
push
jl
or
push
lahf
xchg
mov
and
push
add
xchg
fistpll
pop
mov
add
out
mov
rol
sub
dec
ljmp
jne
lock
and
adc
loope
cmp
cmpsb
dec
lock
dec
xlat
add
or
inc
mov
fidivs
xchg
movsl
mov
push
movsl
cltd
lods
inc
rcl
mov
mov
dec
mov
xchg
mov
fadd
xor
adc
iret
loop
rorl
filds
out
roll
sbb
imul
jno
in
add
inc
test
gs
stos
imul
sub
repz
or
in
out
mov
in
cmp
sub
xor
addr16
xor
lock
sbb
iret
sbbl
pusha
inc
pop
addr16
push
out
or
je
ret
xor
in
movsl
push
loop
out
adc
ja
aas
xor
mov
mov
or
scas
add
call
hlt
imul
jb
sbb
and
xchg
and
or
enter
inc
neg
imull
jne
sub
pop
push
psllq
jbe
std
clc
mov
mov
mov
jb
sbb
sbb
cmp
mov
cwtl
push
mov
add
adc
adcb
sub
rcll
jae
insb
mov
xchg
and
mov
cltd
xchg
add
fstpt
push
es
mov
repz
inc
sbb
roll
test
int
loope
ret
std
sbb
lods
hlt
inc
pop
cwtl
or
fs
mov
xchg
int
pushl
pop
jge
fsubs
arpl
sahf
sbb
orl
jle
sahf
cmp
paddq
push
les
push
dec
push
call
pop
push
stos
add
dec
scas
cld
jecxz
out
mov
xor
cwtl
cmp
hlt
sar
pusha
loopne
das
imul
lods
mov
lds
test
and
dec
pop
pop
into
and
or
add
adc
cmc
pop
fwait
xchg
mov
xchg
lahf
fadds
ret
movsl
pop
xchg
lcall
arpl
jno
imul
or
cltd
push
xchg
adc
mov
repnz
xchg
mov
cmp
push
loop
xor
add
fisubs
lods
cmpsl
out
stos
jg
incl
pop
je
frstor
in
xor
sahf
dec
sub
adc
sbb
sbb
cld
cld
jle
hlt
mov
aas
aaa
inc
and
in
les
pop
ja
in
mul
cmc
test
or
icebp
test
mov
dec
mov
mov
sub
cltd
dec
xor
add
mov
movsl
pop
ficomps
xchg
scas
int3
mov
aas
mov
push
repz
push
xor
js
je
mov
add
push
mov
jnp
inc
mov
insb
cmp
mov
pop
cmpb
repz
push
shrl
add
lret
push
jg
cld
jae
adc
sub
xor
cld
fiadds
xor
or
lahf
pop
cs
divb
divb
inc
outsl
std
adc
movsb
int3
push
mov
lahf
jle
and
mov
mov
lds
inc
cmp
add
std
sub
addb
mov
aaa
cmpsb
mov
pop
xor
scas
cltd
hlt
pop
mov
cmp
outsb
subb
shll
fadd
mov
adc
jb
add
add
inc
jecxz
mov
out
mov
dec
hlt
or
xor
sub
sti
cmp
fsubrp
jno
cmpsl
sbb
fcompl
clc
popa
movsl
push
in
dec
or
pop
mov
xchg
jg
jb
fidivs
jmp
inc
es
scas
cmp
adc
pop
jge
inc
jo
xor
dec
mov
lods
ret
aad
jne
out
js
pop
pop
cmpb
loope
jecxz
dec
jmp
movsb
lret
adc
pop
adc
add
inc
fdivrp
cs
pushf
jo
sarl
mov
fadds
cmpsl
out
xchg
mov
dec
in
mov
lea
cmpsl
ret
add
lds
pop
fwait
cmp
mov
dec
jecxz,pt
mov
jle
xlat
rcll
jbe
into
push
cmp
xor
jmp
adc
dec
xchg
stos
adc
dec
dec
mov
iret
sbb
sbb
aad
push
sub
cli
sbb
mov
dec
lcall
cs
jbe
outsl
imul
jmp
add
bound
imul
adc
sbb
cmp
je
cmpsl
mov
mulb
xchg
jbe
sub
xchg
into
imul
in
ud0
pop
stos
fdivrl
push
or
fcomps
sti
sbb
xchg
shrb
faddp
ret
or
sub
mov
lcall
ret
pop
loope
test
jae
fidivrl
sbb
sbb
dec
sahf
ss
vmread
xchg
dec
fiaddl
dec
or
dec
mov
pop
cmc
cmp
jae
mov
movsb
add
and
ljmp
adc
mov
and
inc
mov
push
nop
loope
je
pop
les
cmp
jae
lods
gs
cltd
js
out
fwait
or
cmp
add
movsb
lret
ss
mov
notl
cmp
ret
xor
fdivrs
mov
repnz
inc
push
mov
shrl
stos
cmp
mov
sub
or
dec
add
mov
popa
mov
data16
xchg
sbbl
jo
fs
fistpll
push
cmp
fstl
sub
dec
nop
and
aad
and
push
and
mov
das
bound
popa
insl
dec
arpl
rcr
and
sti
cmpsb
repnz
fcmovbe
out
push
addr16
push
frstor
jecxz
ljmp
cmp
sub
out
clc
orb
iret
xchg
int3
aaa
stc
inc
andb
push
jbe
push
daa
loop
push
mov
dec
decb
mov
andb
movsb
insl
adc
cmp
ficoml
cmc
jb
jecxz
sub
call
xchg
cld
and
cmp
imul
xor
xor
outsb
push
movsl
mov
dec
les
stc
xchg
cmpsb
xor
pop
and
repz
mov
iret
add
fisubrs
fcompl
cmp
test
push
in
mov
cmp
xchg
pop
jmp
cltd
push
push
xor
sbb
call
sub
fstp
lahf
fcmovnbe
loop
pop
int3
xchg
sbb
lea
iret
sbb
pusha
jae
cli
lret
call
jae
aam
mov
int3
and
mov
dec
ret
or
test
mov
invd
in
pop
repz
mov
fnstenv
clc
xchg
sar
dec
mov
cmp
lods
call
xchg
cmp
inc
inc
cwtl
sbb
int3
xchg
mov
push
push
fists
rcrb
mov
push
int3
int3
fwait
test
jecxz
lock
jl
mov
jecxz
cmpsl
add
xchg
popf
and
mov
scas
xor
imul
cmp
xchg
ja
enter
xor
jnp
mov
mov
scas
in
scas
fisttpl
mov
pusha
pop
test
xchg
jge
fwait
inc
sub
mov
jl
lock
dec
push
pop
addr16
pop
pop
push
cmp
cli
mov
popf
mov
cmpsb
rcr
fldl
sub
or
jle
js
fldl
or
icebp
shl
cs
loop
out
jecxz
mov
mov
nop
data16
cmp
cs
test
add
pusha
daa
cmp
ljmp
movsb
lahf
imul
popa
lret
dec
mov
das
outsl
and
aam
xchg
sbb
cmp
lock
jno
sub
xorb
push
aaa
jl
sarl
insb
xchg
sbb
aas
adc
jns
cmpsl
pusha
cmp
and
mov
jle
pop
scas
inc
jb
push
sub
jl
aas
repz
dec
push
mov
mov
lock
cmp
in
push
daa
insl
fistps
pop
pop
push
adc
mov
sub
aad
mov
inc
push
xorl
push
push
nop
ds
mov
lret
jg
in
add
loopne
cmp
jmp
jl
mov
leave
int
inc
inc
pop
test
xlat
push
xchg
mov
pop
mov
add
pop
aam
mov
fbld
out
lahf
bound
cmc
daa
jns
or
add
inc
and
add
push
lcall
xchg
sahf
outsb
test
jl
pusha
cmp
mov
mov
cld
sbb
imul
add
fldenv
pop
jl
fcomps
in
or
sbb
or
push
xchg
adc
mov
xchg
test
add
push
test
ss
aaa
pushf
adc
ret
jmp
clc
jl
dec
test
out
jo
jns
push
imul
pop
cmp
loope
mov
les
sbb
insb
lods
lds
mov
mov
es
mov
fildl
out
pushf
jg
pop
popa
ljmp
xchg
jnp
aas
dec
or
lret
xor
inc
mov
leave
sbb
imul
fisubs
stos
push
pop
mov
adc
test
xor
cmp
rorl
add
sbb
pop
mov
pop
lods
mov
push
fidivl
pop
and
bound
push
negb
sub
xor
jne
cld
pushf
adc
fisubl
lods
fldcw
movsb
mov
and
push
or
pop
inc
xchg
lods
pop
scas
inc
dec
cmpsb
repnz
add
cmp
inc
daa
pop
fcom
jnp
pop
orl
hlt
arpl
inc
adc
adc
dec
outsl
filds
pop
and
ret
jnp
mov
add
inc
cmp
adc
pop
jae
fcmovnb
aam
repnz
cmp
and
sbb
fsubrs
cmpsl
xchg
je
cli
ja
push
sbb
scas
cmp
std
lods
inc
xchg
dec
jbe
push
sahf
mov
test
lret
lods
insb
lea
xor
mov
imul
lock
outsl
or
repnz
test
mov
push
ss
mov
test
push
adcb
or
add
fildl
mov
ds
pop
pop
iret
ljmp
adc
cmp
in
cmp
in
clc
rolb
sub
sahf
ret
insb
sbb
dec
aam
xor
mov
xchg
push
ds
pop
dec
jo
pop
outsl
xor
add
orb
andl
jno
inc
ret
pusha
sbb
inc
dec
sbb
mov
neg
test
adc
dec
xchg
fidivs
adc
xor
ljmp
test
jns
sub
iret
aaa
mov
pushf
mov
out
sub
int3
inc
push
adc
test
cs
movsb
push
xchg
out
inc
icebp
leave
mov
push
rorl
dec
mov
ljmp
in
lods
jmp
in
cs
pop
jp
xchg
jb
jge
out
adc
rolb
cmc
popl
daa
cltd
fadd
dec
into
test
inc
adc
fdivrl
lret
cmp
sub
mov
cmpb
lret
cmpb
xchg
pop
mov
std
out
cs
aaa
es
pop
movsb
mov
cmc
fiadds
xchg
cld
outsl
test
lds
les
stos
jmp
insl
ss
out
or
xchg
out
test
popa
fmull
add
pop
repz
xchg
orb
cld
jle
jle
xor
popa
mov
in
stc
scas
test
adc
or
shll
imul
xor
cmc
adc
lahf
stos
into
out
out
xchg
aam
test
cmp
inc
dec
movsl
icebp
repnz
mov
addl
mov
add
and
push
roll
mov
mov
or
out
jge
inc
push
and
push
rol
pusha
push
mov
jp
aaa
clc
fimull
jle
push
cmp
xchg
mov
pop
jne
in
aaa
xor
hlt
ja
fstpt
push
mov
sub
gs
and
subb
sti
js
popf
outsl
rol
and
inc
push
nop
pop
pop
rolb
ja
sub
lret
insl
cmc
jne
inc
insl
jle
jno
push
test
or
xchg
pop
loopne
xchg
js
adc
push
add
outsl
out
mov
fcmovbe
or
or
push
arpl
mov
out
shl
push
fs
inc
jg
dec
pop
outsl
adc
jno
data16
or
xchg
push
daa
jns
ret
fdivl
das
push
icebp
enter
mov
jae
jae,pt
push
ret
int3
ljmp
add
ret
xor
enter
push
fsubl
mov
lods
ret
in
jecxz
cltd
cmpl
jnp
mov
xor
push
inc
int3
mov
stos
scas
lods
xchg
daa
std
loope
and
push
jecxz
lcall
cmp
adc
mov
fwait
aas
cmp
cmpsl
out
cmp
dec
push
sub
cmp
iret
push
enter
xor
jp
push
out
or
stos
jp
movsl
inc
daa
inc
call
jb
add
jne
sbb
jle
or
lcall
out
fs
mov
shll
push
shrb
inc
lahf
inc
das
jmp
xchg
xchg
shlb
and
xchg
inc
call
ret
xor
xor
imul
je
xor
mov
repz
inc
mov
dec
addr16
out
pop
pop
daa
push
xchg
sarl
push
and
mov
addr16
orb
ret
out
sbb
cmp
jl
push
outsl
es
inc
out
ja
dec
inc
mov
or
ss
pop
movsb
in
insl
fninit
mov
jl
shl
loop
inc
les
imul
sub
popf
sub
push
pop
imul
jne
testl
inc
sbb
imul
and
and
mov
or
arpl
cmc
popf
aad
in
sbb
push
aad
int
cmp
push
mov
fimuls
and
or
ja
cmp
mov
or
lods
xchg
cmp
sti
loop
iret
cld
cmp
gs
cli
adc
call
dec
leave
cmp
xor
inc
push
pop
or
mov
das
lock
cmp
clc
inc
es
notb
dec
loop
mov
pop
cmp
xchg
ret
insb
pusha
test
jne
mov
rol
stos
jne
inc
movl
add
mov
jecxz
sub
mov
fldenv
xchg
or
mov
pop
sahf
cld
insb
mov
sbb
inc
pop
ss
ljmp
xchg
mov
sbb
push
push
xor
or
jno
xchg
in
iret
in
scas
pop
rorb
test
xchg
jae
sahf
dec
mov
outsb
xchg
out
sbb
rcl
jge
push
push
bound
or
add
push
aaa
int3
int
xor
sbb
stos
pop
loopne
shlb
pop
add
sub
aas
ja
nop
xchg
iret
cld
sub
mov
cmpsb
xchg
jle
mov
adc
cltd
adc
add
sub
addl
mov
sbb
xchg
ficoml
lret
xchg
dec
xorl
les
pop
bound
mov
or
pop
or
mov
stc
xchg
nop
mov
addr16
or
pop
mov
and
rcr
mov
je
fildll
adcb
lcall
mov
shl
enter
sub
xor
test
inc
and
sahf
in
xchg
mov
mov
bound
push
lahf
in
push
aas
negl
jbe
enter
lods
pop
test
outsl
ja
iret
scas
subb
ss
push
out
loope
std
jl
cmpsb
mov
fnstcw
jecxz
ds
mov
flds
mov
jbe
or
adc
mov
js
xchg
xchg
mov
and
arpl
loope
cmp
or
sbb
aam
test
push
mov
mov
lock
in
vfnmaddpd
or
sub
leave
dec
das
jge
cmp
pop
ret
cmp
arpl
add
insb
outsb
cwtl
cltd
ss
jl
dec
insb
inc
scas
cmp
and
in
cmpsl
dec
mov
add
cli
sbb
cmp
adc
fwait
mov
sub
inc
stc
mov
leave
mov
inc
sahf
cmp
inc
mov
sbb
cli
imul
lret
push
adc
push
xor
lods
sub
add
jle
andb
cmpsl
popf
push
inc
mov
mov
scas
scas
cmp
popa
sbb
ljmp
push
mov
cmp
inc
adc
jae
repnz
lcall
sbb
push
inc
sub
mov
leave
fisubs
mov
mov
sbb
bound
and
out
ja
popa
inc
push
cmp
orl
add
ja
sub
ljmp
lods
adc
mov
insl
test
ljmp
aaa
adc
inc
subb
push
mov
roll
jge
xlat
sbb
cmc
testl
je
loop
mov
sbb
loopne
pop
xchg
out
insb
add
push
popa
and
addr16
mov
mov
and
or
lcall
cmp
dec
loope
movsl
mov
stc
popa
mov
inc
insl
pop
js
aaa
mov
arpl
dec
dec
pop
jo
lret
xchg
or
fwait
popf
out
std
sbb
mov
jne
call
xor
stos
cmp
mov
rep
and
xlat
xchg
and
test
incb
adc
jl
jns
clc
mov
and
cmp
mov
andl
cs
iret
add
js
xor
cs
imul
outsb
imul
sahf
xor
lret
jecxz
jl
scas
enter
int3
int3
jae
add
addr16
es
xchg
mov
xorw
loope
aam
xchg
or
mov
pop
pushf
sub
adc
xor
jmp
sub
inc
mov
stc
in
cli
mov
rcll
jecxz
les
dec
cmp
xor
xlat
cmp
cmp
adc
inc
test
and
loopne
add
sub
mov
xchg
and
into
sub
cltd
insb
jnp
imul
stos
cli
lods
loope
hlt
sbb
sbb
scas
mov
and
and
repz
leave
cmp
xchg
popf
mov
add
loopne
jno
scas
fsubrl
cwtl
sbb
fisubrs
cmc
mov
loop
orl
xchg
push
das
and
imull
movsb
addl
ja
cmp
pop
rolb
or
out
daa
cwtl
mov
cli
cs
mov
jp
add
fidivs
mov
push
push
shr
rorl
inc
test
inc
push
and
or
sbb
cmp
mov
inc
push
and
push
jecxz
push
lods
cltd
leave
rcr
pop
leave
in
mov
push
fimull
aaa
xchg
shll
ret
push
dec
pop
mov
inc
cmp
mov
mov
jmp
push
lods
push
icebp
mov
sub
dec
xor
xchg
add
cmpsl
mov
loop
push
in
dec
pop
ja
js
shlb
je
xor
mov
or
mov
into
insb
fstpt
cmpsl
sbb
mov
pop
cmp
out
push
and
clc
adc
call
fsubrs
int3
mov
popa
fbld
xor
popw
out
sahf
ljmp
inc
subb
lret
sti
and
add
fcmovbe
je
push
xchg
cmp
out
imul
daa
hlt
cmp
dec
dec
mov
mov
xor
dec
cmovl
inc
push
aad
enter
fisttpll
jne
dec
push
and
mov
mov
movsl
stos
pushf
rclb
dec
mov
pop
cs
lods
mov
pop
lcall
out
mov
ret
cltd
movsb
mov
orb
push
pushw
jae
mov
fs
inc
xor
dec
stos
mov
jp
sub
dec
inc
les
insb
push
push
in
xchg
xor
shll
dec
cmpsl
in
je
aaa
test
dec
xor
push
push
jg
inc
push
fsubrs
lret
jp
aaa
inc
lods
fsts
push
insl
mov
mov
loope
jno
mov
jmp
movsb
je
jae
mov
std
lock
addl
jno
push
loop
inc
mov
xchg
mov
pop
push
jge
dec
and
pusha
jg
push
stos
lret
pop
xchg
mov
or
pop
out
add
cmpsl
cld
idivl
pusha
faddp
into
jmp
shl
or
loop
movsl
xchg
daa
imul
ret
xchg
pop
out
in
add
xchg
push
add
jne
sbb
push
notl
mov
jecxz
mov
xchg
mov
push
popf
rolb
pusha
popf
mov
dec
or
ss
stos
mov
popa
sub
in
sbb
imul
jmp
push
mov
stos
loop
xchg
adc
cld
sub
pop
daa
pop
xchg
pop
shr
insb
rcl
out
sub
and
filds
in
das
stos
push
loope
adc
xchg
pusha
and
mov
jg
psadbw
dec
cmc
stos
arpl
ds
mov
test
add
es
call
rcrl
xchg
insl
lea
test
xchg
xor
in
adc
push
mov
add
cmp
scas
lret
adcl
int3
test
fsts
fimuls
add
ljmp
shlb
dec
xor
dec
daa
inc
jge
daa
shlb
mov
lret
xchg
fimull
push
xchg
xor
lods
out
sub
and
repz
fstpl
xor
hlt
fisttps
es
lock
push
xlat
int
aaa
mov
scas
jge
adc
stos
push
mov
fs
jns
cwtl
cmc
sbb
adc
xor
fdivrl
iret
xor
push
daa
addr16
inc
adc
mov
add
mov
pop
xchg
xor
subl
insl
adc
mov
rcrl
pop
xor
adc
hlt
sub
push
into
jecxz
mov
stos
lock
push
pop
les
dec
adc
cld
stc
push
rolb
mov
iret
aam
push
mov
adc
pop
lcall
jns
xor
cwtl
jns
mov
aaa
xor
xchg
cmp
lods
pop
test
loope
int3
into
cmc
jg
in
icebp
jnp
jne
repz
jbe
je
cs
fildll
pop
jecxz
cs
stc
je
sub
jnp
in
dec
add
clc
dec
frstor
adc
test
js
xor
popa
imul
fs
cli
mov
xor
js
test
push
mov
or
jb
loop
jo
in
into
les
mov
sbb
notb
ja
je
pop
and
mov
psrad
cmpsb
xor
mov
sub
mov
inc
add
jne
mov
push
add
pop
xchg
aad
movsl
aam
insl
rol
jmp
test
xor
adc
mov
cmp
vmwrite
cmp
aam
sub
sbb
sbb
jno
mov
or
sbb
das
cmp
xchg
ret
test
sbb
and
or
ja
gs
outsl
jno
cld
or
dec
cmp
push
xchg
cmp
dec
lcall
cwtl
imul
aas
lds
lea
jne
pop
loope
fistpl
loopne
int
inc
and
loopne
aad
xor
lds
fadd
andb
js
mov
lods
inc
inc
adc
imul
adcl
je
imul
jle
and
mov
sub
cmp
add
xor
jno
dec
pop
ljmp
icebp
lret
pop
cli
add
in
fsubrl
call
push
add
mov
div
ljmp
add
icebp
push
dec
jae
pop
cmp
leave
movsb
push
repz
inc
lods
imul
adc
xor
or
push
fcomps
dec
lods
pop
xchg
cmp
jmp
sub
leave
nop
mov
push
js
mov
xor
mov
jge
popf
pop
test
outsl
mov
fucom
sti
aad
push
lods
xchg
pop
sysret
mov
daa
xchg
or
dec
pushf
data16
mov
xorl
fdivrs
sbb
in
popa
jb
test
pop
mov
mov
cmpsb
mov
in
cwtl
cmc
int
push
xchg
mov
notb
jmp
loop
out
outsl
cmovge
and
mov
pop
or
jg
aad
fsubrs
cwtl
pusha
mov
enter
adc
aam
push
xor
fmulp
inc
xlat
cmp
xlat
mov
cmp
rclb
push
jb
stos
adc
sub
pop
rol
inc
call
jno
mov
stos
push
xchg
mov
ds
in
dec
mov
pusha
and
xchg
adc
inc
mov
jl
add
hlt
xchg
inc
or
repz
mov
imul
in
ljmp
icebp
jecxz
jae
js
lds
mov
ret
shll
add
sub
jge
data16
sub
test
cld
inc
movsl
adc
push
cli
mov
inc
xchg
movsl
push
jp
xchg
mov
aad
lds
sub
dec
mov
pop
and
out
imul
or
push
lea
inc
cld
lret
out
sbb
pop
jne
js
sbb
pop
mov
adc
jno
xchg
dec
mov
push
pop
sahf
arpl
das
sub
in
in
outsb
cmp
xor
fcompl
push
adc
push
aam
rcrb
inc
sbb
out
neg
les
push
jbe
aas
sbb
push
leave
ljmp
jbe
jae
test
enter
cmp
dec
pop
lret
pop
fcompl
sbb
xchg
sbb
scas
pop
es
std
cmp
lds
nop
popw
push
movsb
insl
add
mov
mov
std
pushf
data16
push
xchg
daa
sbb
and
mov
mov
dec
pop
xchg
add
adc
jb
nop
cmp
mov
fs
pop
mov
dec
mov
insl
mov
sub
jns
inc
pop
nop
inc
push
gs
jb
or
es
fsub
imul
mov
jne
dec
cmpsb
mov
cmc
insl
mov
pop
push
jge
dec
stc
pusha
sahf
leave
adc
push
dec
mov
push
fisubs
in
into
sahf
jg
lock
rorl
jge
shr
ret
shlb
test
and
dec
mov
mov
add
or
lock
xchg
jp
mov
fsub
popa
outsl
pop
or
pop
shrl
ficomps
mov
and
jno
xchg
push
js
sbb
jge
data16
sbb
in
and
mov
ss
sbb
sbb
imul
mov
push
mov
mov
mov
xchg
in
sub
or
cmc
fwait
lret
lods
mov
push
mov
std
jecxz
push
xor
push
insb
popl
xchg
orb
fisttps
daa
mov
sahf
sbb
shl
xchg
lods
inc
lcall
add
or
xchg
js
test
mov
xchg
inc
mov
comiss
test
xor
fbld
cmp
arpl
xlat
repnz
loop
or
dec
cmp
stos
sbb
push
shrb
jge
inc
sub
inc
out
or
or
test
pop
subl
sub
fiaddl
cmp
inc
mov
and
scas
int
pop
loope,pt
call
popa
lea
inc
mov
jle
daa
mov
pop
jnp
sub
or
mov
mov
pop
mov
jo
xchg
rep
cmc
push
ret
ss
insb
divb
adc
xor
shll
mov
fs
mov
aam
dec
sti
sahf
mov
adc
jecxz
xor
xchg
out
aaa
ds
sbb
das
inc
adc
and
cmp
jg,pn
out
popf
jns
les
sbb
dec
push
mov
jo
mov
addl
xor
push
jno
imulb
pushf
push
cmp
lahf
mov
insb
sub
xor
sbb
pop
in
je
xchg
dec
add
sub
in
mov
test
push
xchg
sbbb
or
push
dec
repz
inc
sub
xchg
bound
dec
sub
icebp
jns
icebp
call
sub
xchg
outsl
mov
aaa
daa
clc
jbe
sbb
pop
incl
das
inc
sbb
sub
aas
xchg
push
mov
jb
dec
pop
movsb
dec
mov
les
sbb
adc
mov
inc
xchg
pushf
jl
cli
das
mov
rcrl
and
or
fnsave
imul
xor
xchg
inc
es
adc
cmc
pop
inc
and
xlat
add
jl
sbb
loope
ret
pop
pushf
dec
data16
mov
inc
or
add
ss
mov
push
icebp
xor
or
movb
lcall
inc
push
arpl
mov
sub
xchg
dec
sub
adc
cmp
cmpsl
sub
jge
mov
ljmp
cld
xor
inc
sbb
jo
xor
xlat
fcoms
mov
cmp
fsubp
icebp
mov
mov
adcl
fwait
adc
mov
jp
sahf
add
addr16
scas
mov
jl
or
or
lcall
lds
popl
or
pop
daa
aam
adc
out
or
out
push
cmp
imul
ds
xlat
fistpll
out
bound
xchg
or
bound
xchg
jbe
pop
pusha
adc
lahf
or
mov
mov
and
hlt
shrl
jmp
leave
fldcw
push
mov
ret
fidivs
cmp
jle
inc
xchg
cltd
fs
adc
jmp
jb
imul
addl
dec
adcl
push
fiaddl
hlt
inc
inc
jl
movsl
sbb
shlb
and
mov
sbb
int
aam
test
push
jb
inc
insl
push
in
into
mov
in
in
outsl
pop
cmp
movsb
or
xchg
fildl
jle
mov
mov
int3
mov
aas
cmp
es
cwtl
cld
jp
xchg
adc
shrl
or
aad
adc
xchg
xor
or
lock
pop
lds
cmpb
xchg
mov
cmp
cli
cld
pop
ja
cmp
mov
icebp
jae
xchg
jae
mov
and
in
mov
dec
popa
clc
stos
dec
jecxz
xchg
lret
mov
or
jo
subb
mov
adc
sbb
test
cld
xor
jbe
and
test
sti
leave
mov
es
aas
inc
mov
inc
test
cltd
lahf
gs
sbb
dec
fs
inc
xchg
mov
fsts
repnz
gs
cwtl
sbb
ficoms
inc
pop
test
test
jg
adc
rcl
mov
in
lds
rorl
std
sub
xchg
fs
in
mov
jnp
je
xchg
inc
fldt
adcl
cmc
arpl
xor
aad
mull
dec
pop
or
push
pop
push
addr16
push
sub
mov
jnp
out
fisttps
out
repnz
scas
ret
jbe
xchg
jo
mov
clc
shlb
jmp
pop
push
loop
mov
xor
push
adc
cwtl
jge
sbb
adc
testl
cwtl
aad
fcompl
and
stc
sbb
jge
mov
push
sahf
add
lret
fisttpll
popf
dec
insb
pushf
fcoms
fldl2t
cltd
xchg
sbb
in
mov
cs
mov
mov
clc
mov
jnp
sbb
ret
push
fidivs
mov
loop
gs
cmp
sub
jno
mov
dec
add
cmp
xor
lock
ss
push
sbb
and
mov
sti
scas
jmp
or
jecxz
add
jno
jmp
xchg
jns
dec
jno
dec
jmp
ret
cmpsb
sub
mov
rorl
xchg
xchg
add
mov
inc
xor
adc
xchg
fldl
in
sbb
mov
push
xor
dec
xchg
lret
out
cwtl
mov
incl
push
cs
pop
sarb
mov
in
lods
mov
dec
pop
repnz
xor
inc
repz
leave
decb
daa
fbld
out
lods
inc
cld
shr
mov
and
lret
push
sbbl
enter
push
jge
repnz
xchg
sbb
sbb
je
jg
fcompl
cwtl
int
test
inc
outsb
add
pusha
cli
das
fcmove
fdivrs
mov
push
int
stc
xchg
aaa
lea
pop
mov
mulb
scas
xchg
out
test
std
ret
xchg
adc
mov
decl
pop
jecxz
pop
lds
pop
push
out
xlat
adc
repz
enter
frstor
in
xchg
pop
xchg
mov
adc
mov
adc
repz
and
movsl
cmc
cmp
push
lcall
lods
jge
jmp
test
or
inc
leave
jne
xor
in
jg
mov
mov
cmp
mov
add
dec
fnstenv
and
popf
outsl
mov
cmpsl
jp
mov
call
jl
test
push
imul
mov
outsb
mov
test
in
je
into
in
int3
mov
ss
pop
dec
faddl
jno
movb
les
pop
repz
idiv
mov
imull
mov
jo
cs
sub
cmp
mov
pushf
loopne
cli
mov
data16
mulb
jl
jbe
mov
adcl
pop
inc
lods
jb
pop
iret
in
mov
dec
xor
sbb
neg
inc
sbb
sbb
mov
std
adc
ret
imul
sbb
fists
sub
test
aas
lret
mov
int
dec
int
scas
mov
push
mov
mov
push
sub
push
sbb
mov
imul
ds
pop
sub
xor
and
push
xor
adc
gs
and
ret
shlb
cli
sbb
outsl
in
mov
pop
imul
ss
xor
test
mov
mov
enter
jg
xchg
jb
sbb
dec
int3
mov
cmp
lret
adc
test
out
pop
mov
repnz
or
push
fbstp
jnp
daa
cld
cld
inc
fnstsw
mov
xorl
sub
mov
pushf
pop
cmc
addr16
xchg
cltd
sahf
sti
push
pop
fimuls
xor
mov
call
push
hlt
xor
cmc
or
lret
pusha
jecxz
lahf
mov
mov
icebp
call
dec
cs
pop
push
sarl
jbe
pop
daa
in
icebp
incb
lahf
push
sbb
stc
sahf
adc
cwtl
jle
insl
mov
rorl
adc
pop
arpl
xchg
imul
pop
insl
sbb
sahf
adc
lock
outsb
sbb
gs
xor
in
popf
fidivrs
dec
and
mov
add
cmpsl
cmp
insb
pusha
stc
and
sahf
pop
jno
push
push
outsl
repnz
fxch
jne
cmc
ljmp
popf
repnz
je
dec
lock
sub
xchg
inc
rclb
pop
int
lret
and
sbb
and
lods
cltd
lret
pop
fbld
cwtl
lcall
out
dec
je
fwait
out
sbb
or
test
push
subb
xor
cmp
mov
in
add
jae
pushf
mov
inc
inc
adc
or
cmp
pop
cs
adc
aas
hlt
mov
and
mov
dec
mov
and
mov
push
popf
push
lods
add
mov
test
sti
clc
mov
lret
jbe
les
fincstp
lret
xchg
dec
cli
stos
jmp
jg
xchg
jo
pop
pop
mov
js
mov
les
in
and
jp
icebp
mov
dec
jno
rolb
fisttpll
jae
cmp
pop
mov
add
cmpl
es
fs
fisttpll
hlt
sti
outsb
scas
cmp
lea
out
ret
nop
sub
leave
outsb
push
sarl
jp
xchg
pop
jecxz
imulb
rcrb
cs
and
pop
repz
clc
jp
dec
lds
push
cmp
jp
fwait
or
fbstp
pop
mov
jmp
sub
mov
push
sub
and
inc
jmp
fs
pmulhw
lods
int3
xor
sub
bound
lods
rorl
push
ss
into
push
jmp
pop
sti
jge
das
lds
mov
push
xchg
shlb
adc
repz
imul
scas
xchg
sahf
fstpl
out
pop
mov
pop
sbb
daa
repnz
mov
fcompp
enter
adc
cmc
cmc
jbe
in
scas
insb
test
je
sub
testb
fcoml
sahf
cmp
nop
inc
mov
daa
sbb
xchg
sahf
movsl
and
jg
add
mov
nop
icebp
fsubl
mov
xor
jns
lret
ret
mov
and
mov
idivl
adc
jbe
addr16
or
imul
nop
inc
or
imul
push
mov
faddl
addb
sub
lock
xchg
sarl
adc
call
mov
in
sarl
jecxz
sbbl
mov
dec
adcb
lret
mov
or
mov
or
out
pop
loope
loopne
xor
xchg
mov
cmp
pop
orb
ja
mov
sbb
dec
pop
std
sbb
in
aas
test
fistl
clc
pop
cmp
xchg
loope
xchg
jns
inc
les
lret
sbb
movsl
dec
pop
pop
stc
out
repz
xchg
std
push
jl
mov
and
dec
mov
dec
aaa
scas
inc
inc
mov
push
dec
sti
popf
cltd
jmp
jecxz
adc
dec
pop
mov
mov
cmp
xor
fistpll
icebp
xor
mov
adc
lods
sub
cmp
sbb
je
lret
loope
sub
push
call
push
les
arpl
push
mov
in
inc
and
in
test
inc
push
pop
adc
stos
outsl
bound
inc
in
fldcw
lret
cmp
xor
test
and
fnstenv
xor
inc
ficomps
mov
and
std
xchg
ss
ja
cmp
dec
rcrl
es
cmpsl
or
or
inc
jb
mov
outsb
lret
lahf
addr16
imul
cmp
ja
push
mov
add
jne
sti
test
add
xchg
mov
mov
mulb
pop
jae
lods
imul
in
lahf
and
movq
popa
js
sub
jg
ret
push
mov
je
pop
mov
cmp
pop
sahf
rcrl
in
and
jo
mov
enter
insb
pop
arpl
shrb
jns
popa
aas
mov
stos
fbld
inc
icebp
push
popl
cmp
je
test
jae
sbb
scas
iret
leave
mov
push
adcb
mov
sbb
cmp
fcmove
bound
mov
or
cmc
mov
fwait
test
clc
inc
aas
js
fstpl
jle
jp
mov
cmp
adc
mov
or
pop
lods
sub
mov
scas
sbb
movsl
jb
adcb
inc
fwait
push
jne
xlat
cmpsb
jnp
push
in
mov
std
sbb
aam
pop
mov
es
js
repz
add
mov
cld
sub
ror
xchg
dec
jo
std
push
fucomip
or
jmp
imul
inc
ljmp
add
stos
in
jo
push
ds
imul
sub
cld
ret
daa
fwait
or
dec
rorb
xchg
inc
mov
push
lea
bound
xchg
jne
out
in
jb
cmp
sarb
int
shlb
mov
inc
enter
ret
mov
in
and
mov
pop
shlb
loopne
and
sbb
or
mov
dec
lret
in
pop
lods
xchg
inc
sub
mov
jecxz
or
cmp
fdivrl
out
jmp
ss
aam
mov
lds
inc
add
jnp
xor
mov
push
fcomps
popa
stc
or
adc
bound
pop
lds
pop
mov
and
add
pushf
cmpsb
sub
jg
in
outsb
xor
sub
jbe
lock
adc
push
or
lods
cmp
jbe
call
scas
mov
sub
mov
lods
into
pop
adc
aad
jp
mov
mov
dec
xor
jmp
in
sub
xchg
std
rcll
sub
orl
data16
xchg
adc
adc
loopne
sti
sub
cmc
hlt
mov
das
adc
jo
icebp
jmp
pusha
push
inc
and
xlat
das
mov
inc
out
into
mov
xchg
dec
pop
push
scas
pushf
adc
or
xchg
dec
xchg
jnp
xchg
xchg
notl
sbb
int
in
and
dec
bound
ja
sahf
pop
ss
cld
hlt
xor
push
or
inc
pop
into
call
stc
loope
sbb
push
jmp
rcll
and
call
call
cmpsb
xor
jno
ret
pop
and
enter
mov
sti
aad
xchg
arpl
sbb
or
out
xor
and
sub
mov
rorb
add
jae
fucom
loope
push
lods
addr16
cmp
scas
lds
add
jo
test
bound
rorb
out
pop
out
out
test
ds
mov
jnp
add
adc
push
hlt
pop
dec
sti
adc
xlat
xchg
cmp
adc
dec
xchg
in
bound
scas
loope
dec
jnp
jnp
cmpsb
out
xor
mov
fdivrl
enter
out
movsl
add
insl
and
dec
mov
movsl
xor
mov
jl
inc
out
push
notb
mov
out
pop
jne
dec
jge
test
sbb
mov
and
enter
loopne
fidivrs
cmovb
mov
movsl
and
aam
mov
int3
jnp
cs
clc
vcvttsd2si
mov
cli
jge
ret
xchg
mov
packssdw
push
and
pop
and
or
pop
dec
btsl
pop
fldl
int
pop
loopne
scas
fstpt
cwtl
insb
cmp
pusha
lcall
pop
mov
in
xor
adc
or
jg
sub
mov
cmp
sbbb
test
sbb
fwait
inc
jbe
dec
outsb
mov
sti
ja
rcll
in
pop
cmp
stos
push
adc
test
mov
repz
nop
outsb
adc
into
int3
sub
in
fstl
xor
arpl
pop
arpl
stc
inc
xor
pop
in
imul
dec
xchg
sar
popa
pusha
in
in
leave
add
mov
jno
gs
xor
test
in
popa
and
aad
push
pop
pop
iret
push
mov
and
jno
and
aad
cld
rolb
mov
pop
fmuls
clc
xchg
pop
mov
hlt
push
enter
pop
mov
mov
mov
repz
clc
cli
and
lea
sbb
outsb
push
shlb
mov
push
pop
push
mov
push
cmp
imul
outsb
aaa
adc
mov
add
loopne
pop
dec
add
iret
lods
pop
pop
ds
xlat
pop
cmp
cmp
inc
arpl
add
xorb
mov
xchg
test
loopne
push
imul
jmp
rorl
dec
xchg
je
xor
add
push
outsl
hlt
dec
push
stc
aas
dec
mov
scas
das
jecxz
scas
aaa
dec
shlb
xchg
imul
add
or
inc
xchg
adc
jecxz
daa
lods
xchg
les
test
dec
and
jo
xchg
or
xor
lods
jnp
xor
and
xchg
ljmp
in
sahf
pop
mov
test
push
push
push
jmp
or
fldt
cli
inc
lea
fs
xor
mov
or
cmc
movsb
cmc
enter
pop
adc
lahf
imul
jb
aaa
sbb
sub
in
loope
pop
loop
mov
in
iret
and
loopne
jnp
or
jg
enter
cmc
sbb
cwtl
mov
fists
jae
xrelease
in
or
push
xor
push
jae
mov
xor
fsubr
pop
dec
dec
sub
push
mov
ret
inc
mov
xchg
imul
imul
add
mov
mov
sbb
arpl
addr16
mov
lret
jge
add
sbb
in
xchg
int
ss
jns
pop
adc
jb
mov
imul
test
sub
xchg
lods
movsb
push
test
lahf
adc
rorl
mov
rclb
data16
push
loope
in
jbe
fidivl
inc
arpl
sub
iret
jb
scas
gs
push
pop
xor
mov
mov
pop
outsl
adc
mov
xchg
fidivrs
test
and
mov
jmp
in
add
dec
dec
mov
cs
movsb
cmc
or
inc
push
clc
add
sbb
adc
mov
mov
cltd
jo
sarb
nop
popa
xchg
leave
std
es
xchg
fwait
add
jge
add
cmp
data16
cld
addb
mov
lret
jecxz
enter
xor
adc
jmp
loop
lods
test
cmpsb
mov
nop
out
mov
mov
and
xor
mov
dec
push
pop
loopne
push
lods
mov
movsl
jnp
xchg
test
aam
xor
popf
movsl
rcr
mov
pop
jne
inc
jae
jecxz
inc
addl
dec
pop
push
fwait
cltd
adc
dec
mov
push
test
outsb
sub
mov
pop
pusha
int
lds
in
jecxz
mov
and
loop
and
push
mov
xor
and
mov
aam
fstpt
cmp
test
out
or
imul
shll
into
cmp
or
cs
inc
lods
test
cmp
aaa
xlat
xchg
out
movb
xorb
pop
mov
in
xor
mov
dec
push
xchg
jnp
jmp
mov
sahf
scas
test
shl
pop
arpl
mov
mulb
aaa
out
jae
cmpsl
inc
pop
xchg
adc
push
arpl
iret
addr16
mov
gs
xlat
lock
out
mov
lea
sbb
add
sub
cmp
push
push
mov
and
jle
xor
push
mov
test
mov
mov
imul
jle,pn
xor
std
rcrl
or
mov
lret
jno
sbb
push
daa
in
es
enter
push
das
mov
aad
gs
pop
sbb
aas
or
jo
lcall
push
movsb
push
push
mov
fs
cwtl
jp
fidivs
mov
mov
pop
addl
add
cmp
fs
sub
jb
sbb
ja
fsubs
push
scas
sbb
mov
sub
xor
inc
xorl
imul
lcall
xchg
fidivrl
insl
jl
push
push
mov
aaa
inc
fdivrl
loope
jge
mov
xchg
stos
jb
push
je
repnz
in
xchg
jno
fwait
and
test
xchg
push
jb
inc
sbb
jmp
sub
jnp
fldenv
scas
xchg
mov
push
jl
jge
gs
sbb
arpl
ss
add
or
dec
into
sbb
push
insl
data16
mov
mov
movsb
sahf
test
arpl
cwtl
dec
repz
mov
arpl
pusha
outsb
or
rcrl
sbb
mov
push
rclb
cli
gs
pop
push
xor
and
xchg
and
loope
mov
push
cmp
mov
push
and
jo
sub
push
arpl
icebp
xchg
xchg
xlat
in
mov
xchg
xor
call
lcall
lcall
outsb
arpl
gs
dec
mov
xchg
add
mov
jmp
jae
ret
adc
push
fwait
movsb
mov
out
xchg
and
push
adc
xor
movsb
shll
jne
xor
push
ljmp
push
jp
push
dec
adc
std
fwait
nop
xor
es
sub
aaa
pop
lea
pop
pop
push
mov
jl
adc
pop
daa
cmpsb
pop
aaa
popf
adcb
cltd
and
movsl
mov
jmp
popa
mov
add
out
std
repnz
loope
insb
les
fstps
lods
mov
xchg
ja
jle
shll
and
jnp
repnz
inc
mov
hlt
arpl
dec
out
push
lahf
outsb
mov
mov
sbb
add
mov
pop
or
ret
jmp
push
push
rorl
jge
mov
cmp
cmp
sub
test
jns
jle
js
or
loope
stos
and
es
cmpl
mov
mov
push
inc
xchg
pop
inc
cmc
test
lret
lock
dec
cmc
adc
inc
or
out
int
mov
loope
adc
and
mov
outsb
int3
mov
dec
xchg
mov
jnp
fs
mov
nop
fistps
in
movsl
cmp
lea
mov
jne
insb
mov
or
or
xor
flds
cld
lock
lock
push
daa
add
adc
roll
xor
iret
jno
sahf
loop
mov
loop
xchg
xchg
mov
lret
add
fwait
gs
mov
sahf
imull
stc
sub
mov
mov
xchg
pop
sbb
mov
jmp
scas
dec
sahf
arpl
shl
cmp
pop
aas
es
rcrb
mov
or
xchg
jno
stos
repz
mov
mov
xor
cmc
sarl
inc
and
inc
out
xor
popa
add
shll
adc
push
adc
push
xchg
adc
jl
jle
xchg
fdivl
inc
push
iret
shrl
das
cli
imul
inc
mov
hlt
jae
or
sbb
inc
subl
xchg
cmc
out
movsl
fwait
add
mov
fimull
aad
lea
pop
arpl
adc
xor
arpl
hlt
test
jg
jp
cltd
jnp
add
pop
inc
pop
loope
ret
aad
mov
cld
pusha
std
aam
fiadds
jle
dec
inc
or
pop
push
ret
jno
aaa
jle
pop
push
mov
inc
xchg
adc
cwtl
cltd
sub
mov
std
and
add
ror
mov
or
xor
mov
in
and
xchg
jbe
cmpsb
popf
push
mov
sahf
add
loop
jmp
xchg
add
leave
stos
stos
lret
and
jle
bound
add
pusha
lret
lret
cltd
adcl
or
or
sub
jnp
mov
xor
nop
test
and
repnz
add
clc
cmp
ja
mov
push
dec
or
mov
cmpsl
cmpsb
xor
sarb
and
jne
add
mov
fldenv
sub
loope
aad
cs
sub
and
mov
ficoml
cmp
insb
lahf
cmpsb
mov
andl
sub
push
mov
or
adc
mov
mov
dec
push
jecxz
outsl
pusha
adc
cmc
sbbb
adc
pushf
adc
sub
lret
test
lcall
adc
andl
add
call
mov
fimull
add
sub
xor
sti
out
sbbl
pop
cmc
cltd
loope
mov
add
outsl
inc
add
dec
sub
das
gs
xchg
outsb
add
mov
jecxz
ja
add
jnp
stos
popa
xor
and
ds
gs
add
outsb
and
ljmp
ret
iret
and
out
or
jo
dec
sub
mov
xchg
add
fisubrl
fwait
cmp
pop
add
add
stc
es
in
rorl
in
dec
scas
movsl
pop
mov
xor
pop
icebp
lds
icebp
adc
xor
in
je
mov
stos
push
push
sub
xor
adc
mov
xorb
push
mov
lea
cmpsl
sbbb
popf
inc
fstl
push
and
jns
pop
xchg
idivl
push
dec
mov
pop
lods
sub
push
lock
dec
xor
push
jmp
mul
pop
testb
mov
jb
xchg
enter
jmp
xor
push
ja
add
faddl
dec
mov
inc
inc
cmp
das
jbe
cmpsl
fs
and
imul
shl
mov
mov
fsts
mov
stos
rcl
or
sub
imul
mov
gs
xchg
mov
loope
daa
and
inc
adc
jmp
loop
mov
jl
outsb
add
insl
lds
add
adc
ret
adc
icebp
push
out
test
loope
and
cmp
lahf
lret
loope
repz
add
mov
dec
mov
repz
and
aam
ficomps
or
inc
or
icebp
push
push
sub
dec
push
sbb
daa
test
cmp
inc
add
jno
pop
pop
push
dec
sub
push
fs
cltd
xchg
das
adc
mov
pop
mov
cmp
ss
mov
sbb
cmpsb
mov
jno
repnz
xchg
inc
cmp
inc
add
fmuls
stos
lret
pop
pop
adc
xor
xor
mov
dec
and
mov
inc
lock
pop
jo
or
popf
orl
sub
lods
daa
pop
ds
xchg
cmp
call
jmp
lock
sarl
gs
push
repnz
loope
or
pop
bound
dec
arpl
xor
mov
pop
lds
ja
inc
fbstp
bound
xchg
loope
test
pop
aas
enter
cmp
cmp
inc
imul
mov
xor
xchg
shl
cmp
sbb
adc
movsb
fldcw
and
mov
lcall
cmp
jge
sti
jbe
shl
shrl
add
scas
mov
fdivr
out
push
imul
push
mov
pusha
sbb
getsec
push
cmpsl
xchg
stos
cwtl
repnz
sub
add
imul
and
push
and
adc
jb
xor
sbb
and
mov
rcl
sbb
js
jge
lahf
mov
dec
scas
jne
dec
pop
jle
dec
jg
mov
xchg
fiadds
ljmp
aad
rol
mov
lahf
fstpl
int
jg
stos
pop
aad
adc
cmp
int
cmp
jmp
inc
cmc
lds
push
lcall
push
and
outsl
pop
xor
mov
ds
in
cmp
mov
in
aaa
lret
add
aaa
rcrb
mov
cmpl
adc
data16
popf
bound
pop
jmp
gs
roll
mov
fmuls
pop
movsb
or
xchg
jp
mov
xor
xor
popa
mov
sub
fsubs
jmp
mov
repz
scas
out
add
fdivl
ljmp
mov
fcmovnbe
sub
dec
mov
push
xchg
push
mov
adc
ss
lea
jnp
es
in
loopne
and
dec
data16
cs
push
jp
ret
cmpsl
mov
out
mov
cmc
in
or
addb
pop
mov
sahf
in
jle
mov
popf
mov
arpl
push
in
into
shll
mov
xorl
rcrb
sub
or
loope
fs
lret
popf
jge
adc
das
xchg
bound
ss
loopne
adc
repz
les
sbb
inc
das
cmp
jge
or
maxps
call
xchg
or
and
adc
adc
cmp
pop
cmpsb
mov
xchg
lahf
lret
sbb
push
xchg
mov
das
xor
jb
ss
jle
jecxz
outsb
sbb
jp
cmp
sub
cmp
mov
mov
xor
cmp
push
inc
test
dec
cmp
xchg
xor
ficoml
mov
out
and
imul
cmp
out
add
iret
mov
xchg
lret
leave
cmp
dec
pop
mov
sti
jno
mov
mov
push
dec
jno
sbb
test
rcrb
sarl
xor
ret
fidivl
inc
cmp
cltd
aas
scas
add
mov
rclb
arpl
add
cwtl
test
jp
loop
std
pop
fwait
push
call
mov
mov
std
std
cmp
lcall
ficoms
inc
sbb
rolb
ret
outsl
dec
pop
xor
and
lock
lea
cmpsb
enter
cmp
push
mov
add
sbb
pop
int3
addb
adc
fiaddl
push
cli
pop
in
pop
dec
jp
sahf
xlat
outsb
cmp
loop
and
scas
sbb
jns
mov
jmp
xchg
sbb
std
sahf
aaa
cmp
mov
xchg
imul
addl
xchg
shr
cmp
adc
push
add
add
sarb
out
test
imul
mov
sub
ja
jb
dec
sub
sbb
inc
fildl
and
inc
jb
dec
inc
lea
fdiv
int3
adc
mov
mov
mov
pushf
insl
aam
mov
push
addr16
lods
imul
xor
sbbl
scas
dec
mov
mov
stos
test
ror
cmp
lahf
jg
mov
add
mov
push
pop
inc
stos
pusha
mov
mov
mov
lcall
rclb
iret
xor
outsb
sub
cld
inc
xchg
push
cmp
clc
dec
je
inc
lds
mov
add
rcrl
and
mov
fsubrl
loope
enter
shrb
adc
ljmp
arpl
mov
loopne
imul
cmp
inc
movsl
data16
push
push
shlb
inc
dec
cmp
add
adc
add
ret
mov
xchg
ljmp
jae
int
inc
leave
movsl
cmp
xchg
sbb
and
mov
mov
dec
ror
ret
lods
cmc
mov
inc
mov
dec
pop
or
xor
xchg
loop
and
sub
scas
fs
cmp
add
fbstp
xor
sub
out
mov
mov
ficomps
daa
jg
mov
jmp
jg
adc
mov
rcrl
and
shll
mov
daa
sahf
xor
lods
xorb
pop
pusha
nop
pop
cmp
test
lods
or
push
aaa
mov
and
rcrl
xchg
push
mov
pop
stc
push
int3
xor
outsb
sbb
mov
cs
addl
jbe
icebp
sub
mov
add
xor
jmp
movsl
movsl
mov
xchg
scas
idivl
imul
hlt
ljmp
add
sbb
dec
mov
mov
nop
mov
ja
cs
movsl
hlt
xlat
mov
scas
xchg
push
fildl
icebp
sub
cmc
sbb
pop
jbe
fsubs
jp
xlat
push
mov
mov
mov
jb
cmpl
je
sub
mov
or
bound
dec
sbb
adc
jecxz
sbb
out
call
mov
push
or
cmp
xchg
mov
cmp
mov
sbb
loopne
add
xchg
lods
lea
ljmp
repz
mov
xchg
loop
xchg
inc
lret
mov
inc
adcl
sbb
adc
mov
stos
pop
aaa
push
in
daa
test
inc
inc
ljmp
mov
mov
pushf
ja,pn
mov
adc
out
fs
cs
imul
adcb
test
bound
and
jecxz
and
mov
xor
inc
inc
pop
xor
in
add
fstps
jo
ror
lods
inc
push
js
insb
dec
push
and
pop
adc
mov
enter
push
out
sbb
pop
and
test
dec
mov
insl
and
aas
push
fdivr
mov
xchg
sarb
xor
push
adc
mov
sub
stc
pop
aas
push
int3
xchg
outsb
iret
inc
or
jp
mov
jg
int3
pop
mov
jb
add
imul
and
xchg
adc
add
pop
rcl
xlat
lret
test
das
shl
and
scas
lret
xchg
inc
sti
movsl
cmp
mov
loope
sahf
outsl
push
fistps
mov
pop
mov
mov
aaa
xor
call
cmp
fst
sarl
or
push
push
ljmp
call
loope
rorb
out
push
mov
shr
mov
orl
std
arpl
outsl
adc
dec
mov
mov
pop
ja
test
ss
mov
es
cmp
cli
and
outsl
ficompl
and
sub
inc
mov
aaa
aad
imul
icebp
and
or
push
negb
pmulhuw
and
cs
out
ljmp
dec
inc
sub
add
fstpl
jno
nop
xor
mov
mov
adc
ret
outsl
mov
arpl
inc
pushf
mov
pop
in
imul
imul
jns
pop
fwait
jl
and
fiaddl
arpl
jbe
adc
test
xchg
mov
out
jmp
popf
adc
inc
pop
sub
test
dec
cmpsl
dec
dec
jp
popa
inc
in
xor
bound
testl
add
out
ret
xor
imul
int3
jl
test
cmp
mov
jne
jns
lods
mov
aam
sbb
inc
add
jns
jmp
in
push
mov
cltd
fstps
adc
imul
pushf
outsl
movsl
dec
and
das
xor
fidivrl
insb
ja
insl
push
add
mov
cmp
push
fwait
lea
or
test
mov
push
cmc
iret
adc
dec
out
xchg
push
std
in
mov
das
xchg
mov
insb
jle
ljmp
std
add
fdivr
jmp
rol
adc
cmp
sub
adc
xchg
mov
hlt
push
lods
outsb
ja
dec
push
stos
xchg
loope
test
out
cltd
mov
ficompl
sbb
mov
lahf
dec
test
jg
imul
mov
adc
loope
sub
cmp
jbe
movsb
shlb
xlat
push
jo
mov
mov
enter
sub
mov
jge
in
loope
das
in
int
insb
sbb
jecxz
imul
cli
mov
sub
mov
stc
xchg
pop
inc
stos
mov
and
mov
repz
sub
push
negb
or
sub
pop
and
jg
mov
xchg
mov
jnp
fisubrl
daa
xchg
mov
ja
pop
pop
mov
or
sub
fstpt
fidivrs
and
adc
iret
sbb
stos
adc
incb
push
push
je
and
pop
inc
shlb
xchg
mov
test
or
dec
cmpsb
and
mov
into
into
jae
and
stos
xlat
mov
xor
lds
mov
movsl
push
cmp
sbb
fcoms
mov
cmp
std
inc
enter
mov
add
sbb
rcl
cltd
rolb
xor
sub
pop
mov
jae
iret
xor
loop
push
std
fiaddl
xchg
ljmp
imul
in
popa
or
aas
cmp
mov
sub
out
test
mov
pop
push
cmpsb
out
mov
lock
icebp
and
jb
pop
mov
pop
shr
sahf
pop
pusha
daa
sub
push
les
pushf
les
sub
adcl
fisttps
mov
je
ret
rcrb
xchg
inc
mov
push
mov
fs
bound
lahf
sub
xor
jge
mov
shlb
enter
test
divb
ret
not
jg
mov
and
inc
ja
fldt
fwait
mov
mov
shl
lcall
mov
jne
dec
sub
jbe
dec
jmp
jg
sbb
or
popf
jecxz
push
mov
movsb
pop
jb
xor
mov
xchg
ret
idiv
je
into
jo
enter
jbe
jbe
sbb
jae
addr16
xchg
pop
ffree
push
ficoms
loop
jno
addr16
leave
fwait
sub
dec
incl
sbb
scas
inc
pop
push
jo
mov
das
or
iret
ret
arpl
jmp
xor
fs
ja
ja
jmp
mov
psubd
adc
jl
mov
sub
cmpl
cmpsl
data16
loope
adc
ja
xor
fnsave
icebp
nop
sbb
cmp
push
enter
inc
test
and
jo
iret
shlb
leave
inc
xlat
fwait
mov
sbb
adcb
jl
jae
bndstx
push
mov
fcomp
dec
pop
ja
adc
or
loop
cmpsl
mov
int
pop
push
ret
rorl
cmp
std
push
das
jae
ljmp
fcomp
pop
add
testl
pop
test
scas
xor
or
inc
addr16
das
out
xchg
inc
inc
mov
mov
leave
or
add
test
test
dec
pop
sub
fisubrl
mov
fwait
push
push
push
lods
icebp
jle
adc
stos
mov
popa
aam
push
or
or
js
fsub
lea
pop
shll
movsl
pop
add
stos
mov
call
xchg
aas
xor
jmp
in
cmpb
outsl
push
shlb
mov
sbb
aaa
lods
jge,pt
fimull
hlt
or
ljmp
scas
mov
mov
call
mov
dec
mov
dec
repz
rcll
cmc
fildl
sub
mov
in
std
sub
jmp
or
add
lds
mov
lock
sbb
xor
pop
cmp
ror
xchg
idiv
push
aad
or
js
dec
dec
loope
inc
and
jns
pop
push
mov
dec
addl
and
mov
dec
cmpsl
test
dec
xchg
aaa
fistpll
jg
cmc
pop
subb
fbld
cmp
mov
jle
aaa
and
arpl
xchg
push
fistpl
xchg
aaa
xchg
ds
xlat
dec
push
sub
adcl
divl
sbb
shlb
mov
push
orl
lcall
idivl
xchg
xor
outsb
test
dec
mov
loop
push
cmp
jecxz
pop
xchg
pop
daa
sti
lock
mov
js
out
dec
lcall
das
arpl
jmp
sbb
dec
jle
lahf
push
aad
xlat
dec
inc
ja
add
ret
cltd
in
icebp
rep
dec
fbld
mov
mov
imul
addr16
sbb
cmp
std
or
outsl
add
lods
pop
aas
inc
ss
mov
lea
fdivrs
jnp
repz
call
sarl
jge
adc
jns
mov
jl
and
pop
sbb
adc
jb
add
mov
lods
jg
sti
in
loope
inc
in
mov
sti
sbb
mul
fstl
xor
popa
icebp
pop
fisttps
mov
out
std
fwait
pop
jae
je
lods
sbb
inc
and
dec
mov
pop
aad
ficomps
imul
push
into
jl
mov
stos
mov
popl
mov
push
in
loopne
and
pusha
stos
pop
mov
xor
cmp
jecxz
xchg
inc
inc
inc
lret
imul
repz
and
lret
xchg
cmpsb
pop
inc
stc
push
inc
lods
ret
ret
pop
mov
sarl
push
cs
lea
mov
mov
les
movsb
mov
add
and
cld
gs
lret
notl
and
xchg
pop
ds
addr16
xchg
inc
les
mov
push
xchg
imul
mov
mov
dec
sbb
push
push
mov
xchg
and
shll
testb
scas
dec
inc
mov
out
negb
inc
sbb
shrl
fisttps
mov
out
mov
sbb
aad
dec
pushl
daa
dec
xlat
xchg
arpl
fcmovnb
dec
fimuls
sub
dec
and
insb
roll
adc
outsl
jae
xor
jmp
dec
aas
mov
popa
push
cmp
in
adc
stc
pop
jne
lea
cli
cld
jo
loopne
js
jge
insb
sbb
cmc
popa
cmp
cld
cmp
outsb
add
test
les
ss
in
or
mov
xchg
scas
movsb
pop
rcll
or
hlt
inc
push
dec
mov
sbb
test
xchg
dec
js
cmp
push
int
cmp
clc
adc
push
adc
mov
xor
sbb
xchg
xor
nop
fstpl
bound
mov
add
cmp
jb
call
lea
pusha
pop
adc
jle
jnp
or
les
mov
gs
jg
insl
and
xor
int3
add
mov
imul
mov
dec
push
lea
xchg
fnstcw
inc
movsl
dec
inc
into
outsl
sbb
sbb
das
test
add
pushf
inc
ret
sbb
or
mov
and
pop
mov
in
icebp
push
sub
pop
dec
xchg
push
in
pop
xor
xor
jne
push
inc
dec
xor
xchg
mov
in
jno
fdivrl
xor
adc
xlat
jns
pop
add
test
push
fsts
mov
xor
iret
push
test
pop
idivb
outsl
sbb
test
and
jbe
cwtl
or
adc
or
es
lock
sub
dec
cld
jno
les
stc
mov
mov
mov
dec
lcall
xchg
in
xchg
call
testb
movsb
fnstenvs
repnz
cmc
stos
dec
adc
imul
xor
mov
pop
cmpsl
test
mov
jne
mov
and
pop
call
dec
push
data16
pop
enter
les
pop
stc
sti
jl
mov
test
fiaddl
mov
jnp
dec
incb
xor
mov
mov
push
lret
popa
and
add
fcompl
nop
enter
dec
mov
mov
cmpsl
test
xchg
mov
dec
pop
out
jnp
and
leave
mov
ss
std
stos
std
cmp
cmp
loope
xchg
dec
out
dec
pop
leave
sub
rcll
push
push
sub
push
shrb
dec
clc
jg
sbb
aas
add
sbb
ror
movsl
lahf
push
test
cmpsl
pop
add
addr16
pop
xlat
xchg
mov
jnp
aas
ljmp
dec
pop
cli
mov
mov
and
jg
fisttpl
push
mov
jbe
mov
xchg
cli
outsb
test
sahf
mov
add
add
inc
mov
loopne
push
int3
mov
adc
std
in
sbb
pop
lods
imul
mov
mov
les
stos
pop
test
mov
inc
sub
mov
pop
inc
push
stos
lret
leave
ja
push
mov
cmp
rcl
xchg
push
outsl
mov
pop
push
or
movsl
jmp
sahf
dec
jnp
adc
mov
icebp
jmp
pop
bound
test
xor
sub
or
dec
jae
cmc
mov
xor
jae
or
and
test
aad
add
inc
mov
in
ljmp
jmp
xor
divb
push
loopne
daa
jnp
push
mov
sti
loope
aad
out
jecxz
leave
sbb
add
fs
test
xor
jg
push
shl
mov
pop
lret
cmp
fwait
dec
or
or
push
cmpsb
lods
js
lret
iret
clc
aam
sbb
ds
add
lahf
and
adc
xchg
adcl
imul
mov
push
cmpsb
outsl
mull
or
push
cmpsl
cmc
mov
jg
out
mov
int3
dec
imull
leave
jb
jne
lret
inc
shr
outsl
jmp
repz
cmp
std
fadd
or
nop
sti
mov
xor
cld
fidivrl
pop
clc
add
cmc
push
dec
insl
or
mov
stos
and
nop
out
fidivl
inc
inc
xchg
mov
aam
mov
add
sub
mov
mov
imul
les
dec
push
xchg
fimull
push
int
popf
inc
popf
or
sbb
ret
gs
add
adc
or
push
test
pop
inc
addr16
push
in
xor
and
sbb
push
insb
mov
add
push
in
dec
cmc
mov
sub
jne
out
int3
pop
out
in
jecxz
xor
movsl
pop
lcall
jnp
mov
mov
mov
jno
cmp
aad
js
mov
dec
and
out
sub
insb
lea
jp
adc
xchg
add
in
in
pop
mov
push
pop
jge
lock
push
mov
pop
aad
shll
mov
ret
out
arpl
in
es
and
cltd
mov
inc
roll
mov
aad
in
or
addl
pop
adc
add
int
jno
in
pop
sbb
cmp
scas
shll
lret
gs
sbb
test
std
movsb
xchg
xchg
hlt
inc
xor
jbe
jo
dec
jo
sub
faddl
add
stos
das
or
sbb
arpl
jmp
popl
pop
push
testl
jnp
stc
xchg
jge
jmp
scas
dec
inc
adc
pop
add
sub
add
inc
dec
jecxz
jle
push
inc
in
sbb
mov
daa
fcompl
movsl
mov
inc
lock
xlat
aas
call
inc
int3
push
dec
jecxz
pop
in
cmp
ret
add
ljmp
push
jle
pop
pop
add
add
push
adc
test
lods
jns
je
out
mov
mov
or
xchg
call
pusha
test
cltd
aad
cmp
outsl
call
dec
adc
mov
jle
fmuls
pop
out
mov
cltd
insl
sub
mov
lock
and
xor
cmp
fs
cs
mov
jns
addr16
jb
adc
cmpsl
sbb
pop
jno
mov
adc
push
lea
out
xchg
stos
out
stc
call
adc
mov
lods
jp
ret
stos
mov
sub
dec
xchg
iret
and
loope
mov
sbb
xor
xor
das
sbb
out
lods
mov
aas
aad
push
pop
push
in
adc
stos
pop
and
sbb
imul
sbb
hlt
fcomps
push
test
popa
jge
test
dec
xor
ss
sbb
js
jmp
mov
inc
cmpsl
jmp
scas
call
sbb
or
mov
out
ja
push
xor
jnp
pop
jmp
movsb
xor
adc
insb
loopne
pop
xchg
jne
shll
arpl
andb
subb
pop
xchg
rorl
mov
add
pushf
mov
iret
mov
mov
movsb
popf
je
add
loop
clc
mov
xor
jge
sbb
bound
sub
test
dec
pop
xchg
jno
cli
je
sbb
xor
incb
clc
test
push
aaa
mov
cmp
xchg
fstpl
mov
lea
jmp
sahf
cld
data16
and
cmp
push
enter
push
inc
ret
hlt
stc
cmpl
bound
xor
xlat
outsl
iret
xchg
mov
insb
xchg
scas
data16
pop
mov
sarl
lock
sub
or
jo
mov
jbe
jno
call
pop
movsl
or
dec
into
fstpt
sbb
sbb
sub
lods
fldln2
call
rcr
cltd
push
mov
cli
mov
push
mov
cwtl
and
or
insb
push
push
test
addr16
int
mov
in
stos
sub
je
out
daa
sarb
iret
mov
add
inc
push
mov
cmp
xchg
xchg
push
dec
adc
int
and
aad
jb
jb
cmp
jne
mov
mov
add
push
mov
sbb
pop
and
dec
xchg
nop
scas
outsl
and
cli
ret
fistpl
xchg
push
xorl
clc
mov
mov
fadds
dec
cs
movsb
arpl
adc
aad
mov
aam
pop
inc
loope
outsb
pop
loope
lcall
les
fwait
daa
mov
popf
mov
ret
jae
or
push
call
push
fs
or
xor
arpl
int3
and
es
mov
or
aam
loop
push
mov
popf
inc
std
dec
xor
jmp
jmp
das
iret
in
pop
subl
jecxz
inc
jmp
jae
loopne
je
mov
clc
divb
in
xchg
popa
xor
inc
pop
test
jae
push
jo
arpl
je
dec
jecxz
mov
push
push
stos
into
mov
xchg
mov
ds
dec
inc
movsl
cld
jae
jo
cmpsb
push
out
ret
in
pop
daa
fcmovne
mov
sub
pusha
out
sbb
lcall
adc
rcrl
lcall
in
adc
sbb
rcrb
scas
inc
inc
sub
mov
and
and
cld
dec
movsb
in
sbb
pop
cli
dec
or
popf
int
fldcw
xchg
xor
cwtl
out
mov
inc
dec
push
push
ljmp
xlat
loop
mov
mov
or
iret
insl
jno
xchg
inc
idiv
pop
dec
loopne
pop
icebp
lret
xor
push
xor
mov
lret
xchg
fadds
insl
xchg
or
sti
aaa
aam
inc
insl
ss
ret
das
shl
in
mov
pop
out
adc
mov
inc
mov
shrb
stc
cltd
or
jns
cs
xor
into
mov
sbb
sbb
add
cmpsl
xchg
aaa
sub
add
outsb
shr
pop
jecxz
mov
cmp
cmp
xor
pop
push
pop
xchg
mov
shrl
lods
sub
xchg
in
mov
mov
and
std
pop
push
mov
push
cmp
jne
push
cmp
scas
rol
mov
jl
xchg
sbbl
movsl
push
leave
dec
adc
outsl
nop
icebp
notrack
jg
pop
popa
mov
dec
fiadds
xchg
dec
ftst
ss
jp
pop
or
adc
sub
sbb
inc
jbe
out
cwtl
fnsave
adc
push
dec
popf
je
pushf
into
push
adc
inc
aad
ljmp
mov
scas
test
dec
enter
mov
mov
test
pop
push
test
lret
cmp
enter
ret
mov
adc
fcmovnu
push
jns
mov
xor
cs
stc
or
hlt
push
push
mov
push
and
mov
hlt
in
xor
push
dec
cmp
jle
lret
mov
testl
xchg
sub
fs
add
sub
addl
cld
int3
mov
inc
rcll
mov
mov
loopne
ret
cmc
or
arpl
pop
cmp
loopne
aaa
daa
mov
xchg
inc
es
sbb
mov
addl
sti
lahf
les
xchg
add
push
mov
out
lods
mov
out
cmp
cmpsl
cmc
mov
jb
mov
mov
mov
dec
xchg
fisubrs
mov
int3
pusha
sbb
or
adc
je
bound
adc
aaa
repz
ret
fs
adc
lods
mov
fdivs
xchg
mov
int3
jae
sub
dec
xchg
hlt
xor
mov
inc
je
lds
add
ret
insb
pop
gs
adc
mov
jo
popa
gs
movsl
dec
ret
aad
mov
mov
dec
ret
out
ftst
aad
scas
andb
test
sbb
xchg
cmp
shrl
pop
neg
or
test
testl
adc
push
inc
aam
mov
mov
mov
daa
and
or
inc
int3
loope
jmp
push
lods
xor
arpl
mov
mov
in
ja
aas
jbe
test
jb
inc
insl
push
mov
xchg
or
je
sbb
outsl
push
push
push
mov
pop
insb
ss
dec
push
inc
jbe
cmc
sbb
mov
lods
cmpsb
lock
pop
mov
dec
insb
mov
pusha
fisubrl
inc
xor
mov
scas
add
mov
cltd
hlt
sbb
fisubrl
lds
std
cmp
and
scas
icebp
add
idivl
lods
add
inc
inc
xor
les
xchg
push
jb
pop
cwtl
jecxz
xchg
pop
push
and
pop
and
cmp
inc
das
cmpsl
xchg
movsl
and
add
mov
outsl
aad
outsb
in
imul
dec
push
sub
inc
fdivrp
xlat
out
fldl2e
mov
sbb
and
mov
in
mov
scas
push
scas
sub
jnp
xorb
pop
pushf
movsb
sub
sub
push
push
cwtl
stos
out
cltd
stos
cmp
pop
not
test
fistps
jne
inc
push
jae
lcall
loop
les
das
movsb
pop
pop
pop
insb
fisubrs
ret
mov
mov
push
xchg
sub
in
in
push
add
call
ss
ftst
mull
pop
aam
add
mov
sbb
repz
andl
arpl
push
xor
mov
mov
addr16
xorb
out
loop
xor
mov
call
enter
pop
xchg
mov
adc
aas
mov
mov
bound
dec
lcall
ljmp
xorb
hlt
push
ss
push
sbbl
stc
lahf
mov
or
aas
cmp
pop
or
and
sub
lcall
mov
lret
lret
lcall
imul
pop
orb
aad
aam
insl
mov
xlat
icebp
or
test
pop
leave
arpl
pop
xchg
fists
iret
push
add
lods
fnop
jbe
in
sbb
mov
jnp
stc
lods
cmp
xor
iret
ss
int3
mov
or
jmp
ja
hlt
dec
test
test
iret
pop
adc
lcallw
mov
jno
aad
push
xchg
jns
cld
stos
mov
add
adc
jmp
xchg
and
mov
mov
pop
push
in
xor
shll
sub
pop
lea
jmp
and
pop
mov
mov
add
js
cmpl
shr
scas
xor
aam
cltd
jle
sub
lret
dec
adc
lea
ret
mov
mov
xorl
repnz
push
mov
js
mov
jmp
rcr
sub
xor
adc
push
mov
jl
div
mov
mov
mov
mov
xor
cld
sbb
nop
repnz
sub
fsubs
jmp
sub
pop
mov
shrb
dec
xlat
xor
scas
jp
and
cli
in
cmp
or
add
mov
stc
mov
xchg
es
pop
jle
jns
lods
out
push
dec
mov
mov
push
cltd
or
mov
repz
les
les
sbb
or
cmpsb
mov
mov
into
pusha
pop
dec
imul
sbbb
je
sub
push
test
out
mov
mov
xlat
cmpsb
mov
loopne
loopne
sbb
mov
mov
pop
mov
nop
fsts
sahf
test
sub
mov
xchg
dec
sub
nop
inc
xchg
test
loope
stc
adc
sub
sub
stos
fsubrs
out
loop
jp
or
outsb
leave
out
jle
dec
imul
in
adc
test
test
mov
mov
push
inc
test
push
lea
add
mov
nop
jmp
or
gs
adc
mov
ss
mov
jbe
xchg
mov
mov
and
jge
insb
sub
mov
dec
gs
xchg
mov
sbb
or
les
push
fidivl
adc
bound
xor
fsubrp
sahf
xor
push
sbb
ret
cltd
dec
or
cmp
lods
icebp
popf
push
sbb
outsl
scas
popf
mov
push
shr
nop
enter
mov
in
xor
push
fldl
andl
inc
mov
push
in
cs
push
adc
sub
imul
or
prefetch
or
cmc
nop
jno
mov
cmp
xchg
cmp
int3
test
outsb
adc
int3
sti
inc
xor
lea
mov
test
add
jno
push
jg
inc
rclb
xchg
adc
pop
test
divl
mov
imul
dec
jb
stos
sub
fdivl
sahf
notl
ret
lret
sbb
push
pop
lahf
add
in
adc
lahf
leave
fs
in
lcall
lret
ljmp
in
adc
xchg
sbb
pop
loope
cltd
or
jbe
mul
movsl
je
or
pop
imul
jnp
enter
push
pop
shlb
cmc
adcl
cwtl
or
or
lahf
imul
lret
xor
cmpsb
inc
sub
pushf
lcall
test
popf
psraw
shl
shrb
inc
lcall
icebp
pop
mov
and
lahf
imul
out
ffree
pop
mov
lea
jne
insl
iret
dec
fdivrl
push
mov
minps
mov
dec
sbb
add
pop
pop
xchg
adc
xchg
fisttpl
pop
cwtl
es
mov
jbe
mov
adc
push
dec
popa
shll
aam
dec
lret
ss
lret
outsl
mov
mov
jge
nop
xchg
dec
mov
push
push
sbb
fstpl
int3
lcall
adc
push
das
sti
jbe
fs
aaa
aaa
movsl
mov
repnz
inc
jecxz
dec
xor
fisubrl
sub
scas
jne
imul
mov
jb
out
cmp
jecxz
cmpb
js
je
add
sub
xchg
inc
sbb
adc
inc
sbb
sub
jo
gs
cmpsl
jge
scas
pop
inc
js
notb
xor
adc
fdivr
testl
cmpl
test
mov
data16
mov
gs
cmp
pop
adc
mov
or
mov
into
push
push
lret
adc
repz
sbb
dec
cmp
push
sub
inc
nop
hlt
mov
push
sub
cld
dec
sub
loop
sub
inc
arpl
aam
cmp
outsb
sub
int
stos
cld
out
faddp
add
je
jns
jnp
test
adc
aam
cmp
mov
cmp
in
hlt
ljmp
fsubrl
mulb
negb
fs
sti
rol
add
push
push
dec
xlat
cmp
push
lods
inc
js
std
sub
and
jecxz
xchg
repz
movsb
shlb
imul
xchg
push
roll
ret
cmp
int3
xor
adc
mov
imul
push
and
movsb
test
loop
cwtl
or
xchg
mov
pop
push
stos
add
clc
ljmp
jmp
daa
fcoml
sbb
cli
pop
fbld
push
lds
mov
out
dec
hlt
jl
mov
test
mov
test
and
ret
inc
pop
mov
and
call
jne
pop
jns
shl
int
mull
dec
and
lahf
sahf
insl
adc
cmp
aad
mov
sub
push
mov
mov
or
xor
pop
sbb
mov
pop
push
aas
xor
inc
insl
test
or
push
inc
es
sbb
mov
dec
cwtl
in
shr
jne
je
movsl
jns
loopne
xchg
roll
push
xchg
lret
jecxz
mov
sub
out
inc
sahf
stc
sahf
jbe
scas
mov
inc
sub
push
inc
cmp
mov
repz
or
fstps
ret
mov
pop
pop
pop
aam
sbb
push
xor
in
hlt
movsb
mov
add
xchg
mov
das
ds
xchg
aad
movsl
and
test
sub
sbbl
rcrb
loope
sbbb
push
push
mov
enter
imul
pop
and
mov
inc
inc
gs
pop
cwtl
xchg
loope
repnz
ss
push
cmpsb
dec
jp
push
mov
sub
xchg
popa
mov
in
cld
push
sbb
in
pop
cli
lret
stos
rorb
sub
jp
repnz
scas
insl
jne
call
or
imul
fcompl
mov
xchg
test
cmpsl
dec
jecxz
cmp
outsb
inc
push
ss
adc
movsl
mov
fldl
add
bound
and
repz
adc
jl
sub
call
xor
and
xchg
mov
push
or
fsubl
shlb
jp
cmp
jo
dec
jb
sub
imul
ljmp
sub
loope
faddl
scas
cmpsb
mov
outsb
mov
dec
adc
xlat
sbb
lret
add
mov
jo
push
inc
cmc
scas
out
xchg
out
sub
push
popa
mov
sbb
push
sub
add
and
push
mov
mov
push
pushf
xor
jmp
jecxz
mov
xor
mov
gs
ret
push
or
or
pop
inc
adc
popf
jp
popf
gs
cmp
sbb
adc
xchg
jecxz
mov
dec
mov
leave
imul
jb
push
scas
lret
loope
xchg
jmp
fdivs
xchg
sbbl
rorb
or
jmp
out
mov
pop
mov
fwait
sbb
sub
pop
jl
mov
mov
in
or
fs
jp
jo
icebp
jb
out
loope
imul
sbb
and
cmp
dec
into
mov
xchg
pushf
dec
dec
stc
out
push
shr
inc
ret
xchg
pop
and
jecxz
xor
dec
jne
inc
out
jns
adc
mov
push
fcmovnb
xchg
mov
jbe
mov
sahf
iret
into
pop
mov
pop
jmp
pusha
sti
std
mov
lret
fsubrs
lret
mov
or
mov
jecxz
adc
adc
mov
dec
add
mov
data16
jb
sub
js
inc
pop
fdivs
aad
inc
flds
mov
arpl
scas
aas
pop
sub
mov
addr16
lahf
lods
fcmovnbe
sbb
sbbl
movsl
loopne
in
add
sub
test
xchg
into
inc
pusha
mov
fwait
lcall
pushf
enter
js
in
rclb
mov
enter
stos
call
outsl
sub
rcrl
adc
or
clc
mov
rol
sti
cltd
fldcw
sub
icebp
jb
jl
jg
push
push
in
or
aas
mov
fwait
jo
inc
jnp
mov
ret
add
ret
test
je
mov
rclb
mov
xchg
mov
ljmp
icebp
and
call
cmc
jmp
xchg
cmp
mov
mov
pop
icebp
mov
decl
pop
loope
ljmp
lods
cmpsl
into
mov
dec
sub
adc
xor
inc
mov
rolb
pop
and
out
popf
decb
sbb
cli
lds
test
negl
jns
fildll
pop
inc
stos
xor
leave
lret
jg
outsl
lods
inc
xor
imul
mov
lahf
jp
or
xchg
je
int3
subl
data16
xchg
or
insb
cltd
into
xchg
lcall
adc
call
lret
fisubrl
push
dec
adc
outsl
addb
imul
es
int
jnp
jmp
push
or
out
mov
mov
scas
lcall
outsb
sbbb
lods
xchg
fwait
mov
cld
lock
ds
fldcw
xor
mov
and
dec
je
sub
jns
dec
xchg
sarl
inc
sti
inc
aam
xchg
outsl
jg
xor
cmp
dec
xlat
sbb
enter
pop
jae
dec
mov
dec
adc
gs
mov
push
inc
xchg
mov
xor
adc
jp
stos
cld
inc
mov
dec
cmpsb
lds
lret
xchg
cmp
fwait
and
adc
js
mov
pusha
dec
cmp
mov
jg
mov
or
adc
cltd
sbb
lcall
out
jl
aaa
aam
inc
cwtl
push
flds
in
psrlw
and
or
std
sub
outsl
insb
mov
icebp
xor
scas
or
mov
test
inc
and
and
ljmp
pop
xchg
mov
dec
sub
lcall
iret
in
push
in
dec
xor
aam
mov
lahf
push
cld
cwtl
push
mov
lcall
out
inc
pop
aad
faddl
sbb
adc
outsl
imul
push
insl
inc
dec
add
out
jo
in
testl
andl
pop
mov
outsb
push
cld
xor
in
adc
mov
movb
push
push
jmp
cmp
arpl
into
call
jmp
jae
insl
out
xor
xchg
nop
movsb
xchg
nop
mov
frstor
andb
push
pop
icebp
lds
jg
sahf
mov
push
cwtl
ja
mov
mov
addr16
jl
aad
or
or
inc
jg
fwait
int
fidivs
jp
test
pop
xchg
idivl
popa
sub
mov
insb
fisubs
sub
push
cmp
cld
pushf
int3
xchg
adc
into
out
xchg
xchg
adc
ds
and
setnp
xchg
fadd
inc
mov
mov
jle
add
push
mov
call
mov
es
mov
xchg
xchg
mov
xchg
and
xor
ljmp
in
jbe
xor
movsb
sbb
mov
inc
rorb
pushf
jae
and
lahf
push
xor
inc
out
shlb
popf
xor
push
lods
xchg
aad
out
rorl
push
jl
lds
sbb
xchg
in
into
popf
jnp
lock
in
ds
dec
xor
repnz
sub
xchg
imul
push
das
enter
pop
push
fwait
inc
popf
jg
xor
cmp
cmpsl
js
fistps
push
mov
pop
xor
jle
lods
test
jg
adc
cmp
push
pusha
hlt
or
leave
das
insb
jmp
imul
and
sbb
icebp
add
movsl
jnp
sarb
fs
push
and
lods
sub
cmp
jp
add
sbb
sbb
pop
dec
or
stc
xchg
add
xchg
cmp
pop
in
sbb
nop
and
int3
insb
outsb
pushf
lahf
loopne
fisttpll
or
pusha
addr16
adc
sbb
enter
fnstsw
mov
test
cld
lock
icebp
movsl
test
mov
arpl
and
dec
push
sub
cmc
jge
sti
push
or
pop
dec
in
loopne
jp
xchg
cld
ds
jb
inc
inc
test
mov
push
cli
push
std
sub
sub
jae
into
adc
pop
movsb
push
xchg
andb
xchg
pop
mov
mov
mov
imul
jecxz
repz
jo
xchg
mov
and
pop
add
jle
aas
push
push
rclb
in
mov
std
int3
cmp
cld
int
dec
std
jbe
add
clc
lods
push
push
popf
xor
add
imul
not
inc
popf
pop
sti
inc
xor
outsl
cmp
icebp
add
leave
or
add
cmp
ret
insb
sahf
sub
rcrl
js
stos
outsl
inc
mov
out
push
xchg
jns
bswap
sub
cmpsb
pusha
lock
shlb
cwtl
lret
sbb
insb
pop
mov
sbb
lret
dec
xlat
mov
ficoml
pusha
add
movsb
mov
aaa
inc
jmp
cmpsb
lods
stos
adc
mov
std
arpl
arpl
xor
push
mov
outsb
daa
arpl
fbld
sbb
inc
cmp
cld
incl
xchg
sbb
rol
cmpb
mov
dec
adc
xlat
idivl
push
jbe
cmpsl
into
ja
pop
adc
inc
movsl
les
incl
mov
ljmp
sub
dec
or
cltd
ret
jns
sub
cmp
jo
pmuludq
pushf
popa
arpl
xchg
push
in
adc
sbb
sbb
dec
mov
mov
test
jbe
jl
or
aas
adc
mov
xchg
outsb
and
lret
push
bound
sub
mov
mov
mov
lods
pusha
lods
out
inc
and
sahf
pusha
inc
outsl
and
cmp
mov
cmp
jecxz
dec
mov
or
rcr
or
mov
jb
push
xor
cmpsl
in
or
icebp
push
mov
jge,pt
xor
adc
xchg
pop
cmpsb
mov
xor
popf
mov
lea
sub
jmp
xchg
adc
aaa
iret
xchg
and
fwait
add
lods
cld
mov
dec
xlat
mov
sub
inc
inc
jnp
cmp
int3
and
adc
int3
es
aad
fadd
push
add
pop
ret
push
ljmp
pop
push
cmp
jnp
fdivs
les
icebp
mov
pushf
adc
pop
mov
fdivrs
js
inc
outsb
push
stos
xchg
cmp
rcr
data16
pop
idivb
outsl
jb
std
fimuls
or
aad
repz
jmp
xor
nop
out
push
subl
fiaddl
add
add
out
lret
lods
fldt
mov
lods
lock
pusha
xchg
icebp
fwait
fs
and
add
adcl
xchg
aaa
mov
xchg
add
mov
jp
int
mov
jge
sbb
lret
push
or
add
jae
add
shrb
jno
push
inc
imul
and
sbb
fadd
outsb
fincstp
mov
inc
push
fbld
xchg
sbb
mov
rolb
cmp
lret
sarb
ds
ret
sbb
imul
xor
and
popa
scas
xor
bound
sar
mov
mov
mov
cmp
sub
lods
nop
pop
fldt
pushf
iret
lret
xchg
lock
push
xor
ljmp
push
push
mov
adc
mov
gs
mov
clc
mov
jecxz
push
adc
lret
or
nop
clc
jge
or
mov
fmulp
sbb
mov
add
mov
mov
jo
mov
out
xchg
pop
stos
aam
and
fnstenv
out
jle
scas
push
enter
jl
xor
xchg
or
and
popa
ret
mov
mov
imul
mov
scas
lds
cs
xchg
scas
xor
fwait
add
sub
mov
push
or
xor
pop
mov
fdiv
pop
lock
mov
pop
pop
sahf
inc
pop
insl
dec
cmc
rol
inc
jbe
shlb
repz
scas
adc
inc
mov
lock
std
push
stos
sarb
test
push
sub
clc
aaa
stos
cmp
idivl
fcmovbe
test
call
filds
adcb
cmpl
sbb
les
xor
icebp
xchg
mov
fwait
ja
gs
stos
dec
sub
lods
or
ror
xchg
pop
jmp
pop
pop
push
inc
das
mov
icebp
sbb
icebp
sbb
sub
call
jno
jno
movsl
loopne
enter
mov
mov
mov
shlb
push
or
out
fimull
inc
dec
push
in
inc
lret
pop
add
cmc
aas
mov
fisubs
adc
scas
pop
sti
fstps
sbb
mov
js
leave
xor
mov
in
add
jmp
push
pusha
jo
mov
mov
pop
fildll
xchg
push
push
jecxz
rcrb
sub
ja
pop
scas
and
sbb
dec
insb
sbb
mov
push
daa
xchg
pop
pop
mov
xchg
dec
sbb
stc
pop
push
js
sbbb
test
stc
pop
mov
push
popa
lods
pop
mov
shr
cmp
gs
pop
cmp
mov
or
nop
mov
lcall
idivb
shr
cmp
push
or
ficompl
or
xchg
les
icebp
push
clc
clc
add
cs
mov
adc
adc
sub
or
jae
lods
or
sbb
add
mov
loope
js
adc
mov
lret
jae
and
lcall
mov
int3
xchg
add
lods
mov
lods
sbb
loope
int3
xchg
xor
mov
movsl
sub
pop
xor
push
pushf
pushf
inc
sbb
das
test
js
dec
push
or
inc
push
lock
data16
cmp
test
jge
es
stos
mov
push
sub
and
cmpsb
cld
mov
rcrb
xchg
adc
stos
cmc
adc
ss
mov
cmpsl
scas
push
and
sub
mov
pop
dec
cltd
test
enter
jecxz,pn
bound
aad
not
mov
and
inc
mov
push
rcll
sub
sbb
rclb
cmpsl
xchg
xor
lret
add
sub
decl
dec
add
lret
dec
popf
daa
push
or
mov
or
mov
push
add
es
outsb
arpl
push
adc
or
loopne
cld
mov
sub
clc
mov
jle
incl
test
xchg
das
mov
ljmp
jle
mov
pop
pop
lds
pushf
add
sahf
aas
mov
loopne
sbb
pop
jle
insb
fwait
inc
icebp
enter
cmp
adc
insl
scas
mov
jne
shll
xchg
fbstp
popf
std
mov
rorb
in
dec
cwtl
xor
iret
mov
dec
fs
push
enter
dec
jne
mov
mov
js
jno
repz
lods
sbb
scas
pop
mov
out
int
jne
iret
js
adc
mov
or
xchg
addr16
in
notl
dec
and
xchg
fsubr
add
rcrl
and
pop
cli
mov
mov
outsl
add
and
mov
cmp
data16
pop
and
cld
xor
clc
cmovnp
nop
mov
gs
push
sti
aam
cmc
jecxz
fistl
jo
inc
push
pop
and
push
loop
push
mov
and
and
cmp
les
mov
in
pop
pop
jle
out
dec
adc
mov
add
aad
lahf
push
dec
pop
scas
sub
cld
push
out
push
fcoms
out
xchg
test
sbb
bound
aaa
cli
fwait
inc
mov
scas
rcrl
adcb
pop
pop
enter
mov
dec
push
mov
pop
lahf
inc
in
fbstp
push
test
out
push
mov
cmp
xor
sti
out
out
jecxz
dec
xor
dec
inc
lods
shlb
mov
push
adc
shll
sub
xor
push
pop
mov
inc
lds
fstpt
icebp
nop
mov
add
bound
repz
mov
cmp
out
ljmp
xor
xchg
imul
out
jns
mov
cmp
mov
push
pusha
sub
and
stos
inc
pop
sub
sbb
push
or
xor
xor
sbb
xor
lods
lods
mov
sub
xchg
loopne
sub
mov
push
cmp
sbb
orb
mov
into
adc
ret
idiv
hlt
pushf
or
lret
inc
rcrb
loopne
rcrb
cld
testl
inc
icebp
into
mov
lds
add
or
pop
call
movsb
jns
and
shlb
add
mov
mov
and
add
pop
xchg
lret
cmc
pop
xchg
stos
and
ret
xchg
sbb
and
sar
inc
repz
hlt
sub
xor
fdivs
sub
aad
mov
cmp
out
dec
cli
fs
jnp
lea
clc
mov
push
clc
cmp
jnp
jp
sbb
or
pushf
popa
adc
jmp
dec
xchg
lods
add
adc
loopne
and
sbb
repz
out
and
push
sub
push
in
jmp
in
rcr
xchg
gs
bound
in
dec
mov
mov
xchg
mov
adc
lret
sbb
and
sbb
push
mov
xchg
dec
mov
out
cmp
pop
sarb
cmpsl
test
dec
xor
incl
jl
dec
ja
cld
dec
popf
mov
loopne
mov
sub
xor
and
mov
and
jecxz
in
test
adc
clc
inc
fs
jnp
cld
sub
push
push
sbb
jl
sti
pop
or
lret
loope
sbb
fnstcw
mov
add
pop
ret
pop
nop
movsb
out
mov
lcall
push
inc
jge
pop
pop
aad
or
jae
iret
and
adc
shl
and
cmp
ja
daa
sub
ja
les
dec
xchg
lcall
insb
adc
xor
adc
mov
mov
inc
xlat
xchg
fildll
adc
mov
sbb
jp
xchg
mov
or
and
fimull
shr
lahf
and
popa
in
pop
into
and
arpl
adcl
dec
cmpsl
lret
mov
out
mov
sub
xor
cmpsb
mov
and
inc
jno
or
stos
test
xor
stos
dec
addr16
cmp
mov
cmpsb
sub
sti
call
and
add
leave
movsb
movsl
lods
and
cmp
hlt
rcl
or
xchg
repz
aam
xlat
mov
test
dec
rcl
and
lret
pop
push
jbe
xor
out
mov
js
imul
inc
or
sub
adc
inc
jnp
jmp
cli
cmp
lods
mov
fstps
jmp
and
arpl
mov
in
dec
ret
out
in
int
pop
pushf
inc
icebp
adcb
repz
pop
add
les
mov
in
mov
lds
cmp
jle
push
mov
stos
in
dec
mov
xchg
fs
push
push
mov
mov
ret
hlt
mov
or
jmp
adc
xchg
call
mov
and
mov
mov
pushf
clc
jl
xchg
hlt
cmpsb
sarb
not
and
inc
or
pop
vpsadbw
push
push
loop
mov
mov
sub
push
sarl
dec
mov
in
mov
xchg
adc
stc
pop
mov
cmpl
iret
mov
xor
sub
imul
inc
mov
repz
xor
pop
adc
and
insl
ret
aaa
movsl
push
scas
aaa
scas
cmp
or
jge
push
jmp
dec
dec
ficoml
cmc
cld
cwtl
lods
cli
and
mov
int3
mov
mov
add
loopne
loop
popa
movsl
pop
fisubrl
cmp
pop
test
cmp
pop
mov
iret
sub
dec
ret
xchg
mov
fnstcw
pop
or
das
outsl
inc
cmp
or
mov
test
pusha
push
cmp
xor
mov
push
and
push
test
jge
call
cmpb
mov
fcomip
adc
stos
lock
xchg
rcl
andb
xor
cmc
lea
sub
jns
or
inc
pop
repz
mov
inc
push
jl
push
sub
lahf
inc
add
jecxz
add
push
or
mov
dec
mov
fsts
xchg
mov
dec
inc
test
pop
push
jmp
xchg
push
push
mov
xchg
sub
vxorps
cmc
add
pushf
icebp
push
push
pushf
mov
dec
inc
xchg
push
jnp
xor
ficomps
or
pop
or
cmpl
es
clc
inc
mov
adc
fbstp
mov
das
daa
sbbb
jecxz
fsubl
pop
adc
dec
test
lds
or
cld
pop
push
and
add
sahf
inc
flds
scas
push
xchg
pusha
scas
dec
fnstcw
push
pop
in
gs
inc
xor
in
negl
xchg
mov
sbb
lea
data16
push
test
call
mov
dec
push
mov
sti
add
xchg
mov
adc
push
jp
adc
sbb
js
jg
adc
xor
mov
cmp
sbb
and
xchg
lock
repnz
mov
inc
negl
ret
add
stc
gs
mov
movsb
and
add
ljmp
sbb
inc
xchg
ss
mov
popa
cwtl
ja
dec
mov
fdivr
scas
aas
mov
inc
int3
mov
dec
cmp
push
cmc
nop
mov
add
call
xor
ja
mov
rclb
out
in
cmpsl
mov
mov
inc
ja
inc
imul
push
ja
jno
shrl
in
aad
sub
pop
xchg
push
push
pop
test
xchg
xchg
and
iret
aas
push
sbb
movsl
cmp
inc
les
pop
into
xchg
fisttps
adc
inc
outsb
in
dec
loope
inc
ljmp
das
xchg
add
ds
fxch
adc
inc
repnz
xor
pop
inc
insb
loopne
xor
in
popa
pop
out
push
add
mov
xchg
lret
clc
mov
sbb
pop
pop
sbb
cmp
dec
xor
es
jecxz
xchg
das
push
inc
std
movsb
sub
aas
xchg
dec
mov
mov
mov
stos
jp
jmp
jmp
mov
test
iret
mov
into
aam
pop
or
xor
sbb
mov
push
mov
fwait
clc
mov
fisubl
push
fbld
pop
lret
pop
cmpsb
ss
xor
inc
jecxz
ds
aas
imul
insb
mov
mov
and
orl
push
push
mov
inc
jae
call
movzwl
mov
cmp
fwait
or
mov
mov
xchg
cmp
int3
nop
add
inc
fistpl
mov
mov
and
sahf
fcoml
or
mov
and
cli
inc
dec
mov
adc
add
icebp
movsb
mov
jge
xchg
gs
pop
dec
popa
sub
data16
mov
mov
sub
mov
jno
adc
jns
repz
sub
imul
pop
je
gs
and
mov
push
sub
add
pop
sub
movsl
and
push
popa
push
mov
dec
xchg
repz
push
test
repnz
out
mov
sub
out
frstor
jb
bound
out
push
int
sbb
test
cs
gs
adc
call
xchg
je
loopne
sahf
jmp
mov
cmp
push
mov
imull
js
loope
cld
imul
dec
adc
mov
pop
loopne
adc
dec
fisubrs
aad
lock
fmull
mov
stc
scas
jge
outsb
adc
lcall
cmp
xchg
fwait
push
sbb
cli
or
push
sarb
push
lmsw
int
add
fmull
insl
repnz
cmc
cmc
into
popf
inc
into
loope
xchg
stos
xchg
cmpsb
pop
ds
dec
jmp
test
mov
testb
inc
std
out
les
imul
jmp
mov
jnp
dec
mov
test
cmpsb
negb
in
xchg
sbb
ret
pop
adc
daa
movl
gs
out
inc
gs
rolb
push
xor
mov
push
xchg
js
fstps
lcall
out
fimuls
daa
lret
mov
aam
fisubs
icebp
mov
sbb
adc
xlat
xor
lea
cltd
inc
inc
push
xor
lock
rcrb
sub
or
xchg
pop
mov
movzbl
psubusw
fidivl
sbb
mov
mov
or
enter
int3
jle
sbb
out
or
int
cltd
loope
outsl
cmpsb
and
sub
pop
push
addl
aaa
inc
dec
fimull
and
icebp
insl
push
jne
add
xor
enter
nop
jge
push
cmc
aas
in
sbb
jno
lds
push
sbb
mov
test
xor
mov
icebp
add
loop
adc
into
cmp
mov
mov
adc
and
sub
push
lods
testb
or
xlat
das
sbb
jmp
pop
into
sub
jb
xchg
push
popa
cld
adc
add
pusha
inc
clc
popf
mov
jno
bound
pop
call
pop
aaa
in
test
fmul
movsb
jg
inc
and
or
mov
mov
mov
sbb
jnp
xor
mov
adc
arpl
in
mov
sbb
mov
scas
shrb
test
inc
xlat
test
mov
insb
pop
adc
xchg
enter
jno
add
mov
xor
rcl
xchg
shrl
push
data16
das
pop
jb
sbb
movl
lea
add
mov
inc
ljmp
or
rcrb
adc
nop
js
dec
into
or
mov
cmp
mov
adc
xlat
sub
dec
cld
cld
mov
adc
sub
cmp
aad
mov
xor
data16
sub
lahf
xor
lret
insb
lea
pop
sbb
ret
jae
ficoml
je
aad
inc
dec
add
xor
inc
xor
push
or
pop
stc
lds
test
lea
jno
scas
xchg
mov
mov
fildl
and
scas
push
ret
clc
lods
aad
dec
fsubr
push
popf
aad
add
jge
call
stos
mov
stc
lods
xor
xor
je
mov
cmpsl
dec
pop
and
add
xchg
lret
add
scas
jmp
add
scas
dec
pop
sbb
cmc
jo
cmp
in
fcomi
orb
fsubrp
mov
cmpsl
pop
cmp
xchg
xchg
mov
movsl
aas
enter
pop
hlt
aad
outsb
rorl
mov
cmp
imul
addb
bound
sub
shlb
insl
add
and
enter
dec
fadds
fs
mov
sub
mov
jne
fwait
daa
lret
bound
pushf
movsb
or
mov
ja
cld
js
std
test
stos
cli
add
sarl
add
and
lret
loop
imul
in
arpl
imul
cmpsl
xor
shr
sub
leave
cmp
jp
push
add
jl
or
loop
outsl
mov
xor
cld
shrl
ret
push
imul
das
sub
mov
test
push
mov
out
test
fisttps
test
mov
sub
push
cwtl
cli
dec
add
mov
adc
cli
ljmp
push
cmp
jecxz
int
rol
sbb
in
out
stos
sahf
sbb
call
pop
xchg
iret
sub
outsl
pop
stos
jg
subl
andb
xchg
or
and
mov
mov
dec
bound
dec
cli
scas
pop
adc
test
inc
xadd
mov
and
jmp
xchg
std
pop
sub
lahf
imul
in
add
adc
mov
lods
jo
sbb
nop
jle
into
ljmp
mov
adc
int3
push
xor
dec
adc
add
jecxz
stos
mov
or
cld
dec
lcall
ss
sbb
nop
jne
or
add
lahf
lret
sbb
cmpsl
lods
dec
jge
sub
pop
push
mov
pop
fnstsw
lock
xchg
aad
or
fdivs
and
roll
xor
notb
ud2
or
in
stos
jecxz
sbb
out
fcoml
cmp
je
jb
outsl
dec
mov
sahf
mov
sahf
xor
jp
test
int
in
push
stc
in
push
mov
daa
ret
cld
ljmp
call
cmpsb
iret
call
mov
clc
stc
jns
int3
test
push
stos
sahf
mov
test
sbb
fisttpll
sbbl
jecxz
loopne
psubb
das
xchg
jecxz
mov
mov
add
mov
bound
fidivrs
and
jg
pop
sbb
shl
xchg
adc
sub
lds
and
arpl
pop
cmp
js
or
enter
fwait
xor
shl
bound
paddw
mov
inc
push
je
jnp
into
mov
xchg
adc
in
fcomip
cmp
fld
je,pt
int
fwait
mov
xchg
dec
out
push
push
out
out
adc
xchg
jp
sbb
sbb
cmp
or
mov
je
fisttpll
jmp
pop
out
loopne
shrb
jne
mov
fadds
inc
lret
xchg
push
cmp
xor
fisubrs
loop
push
mov
jo
mov
scas
popa
decl
add
in
jnp
push
and
sub
add
cmp
adc
test
loop
mov
adc
mov
pop
xchg
jg
cld
lods
mov
pop
mov
shr
add
cld
arpl
dec
aas
mov
shr
sbb
mov
pop
mov
jp
pop
movsl
push
mov
ret
stos
xchg
jle
insb
jbe
iret
pop
adc
les
pop
pop
icebp
push
enter
out
sbb
pop
mov
adc
sbb
dec
cmp
add
lods
mov
mov
push
dec
pop
add
cmp
jmp
mov
fs
mov
lea
or
test
push
xchg
mov
push
mov
cmp
xchg
or
out
rcrl
call
inc
test
lcall
xor
mov
or
insb
sbb
push
iret
neg
pushl
mov
push
xchg
shlb
and
je
js
pop
pop
push
mov
push
inc
int
add
fbstp
loop
rorl
cmp
movsl
sbb
cmpsb
mov
ror
enter
fldl
dec
cli
xor
rcrl
dec
dec
xchg
sbb
push
adc
fcmovnu
add
insl
pop
push
adc
lahf
lahf
xor
shrl
aas
hlt
inc
dec
adc
adc
sbb
pop
dec
dec
pop
inc
push
test
repz
sbb
inc
add
jno
inc
nop
inc
dec
mov
sub
mov
fmull
jmp
mov
pop
neg
xchg
xchg
cmp
mov
mov
subl
pusha
enter
dec
sbb
add
mov
xor
add
xchg
inc
ret
dec
mov
outsb
sti
addr16
mov
xchg
shr
cmp
loopne
bound
mov
push
pop
fstpt
xchg
imul
movsb
in
test
dec
lea
lods
outsb
adc
pushf
bt
loopne
lock
faddl
bnd
shlb
test
xor
cltd
xchg
shlb
and
out
cwtl
add
test
icebp
rcl
adc
enter
gs
cwtl
cwtl
idivb
mov
je
nop
and
popf
sub
mov
movsb
sbb
jae
sbb
xor
add
sub
inc
sbb
iret
insb
out
leave
xchg
mov
fidivs
jns
push
lcall
jmp
das
inc
jo
sub
push
inc
and
js
jb
stc
mov
in
and
jno
test
xchg
xor
movsl
std
adc
cmp
xor
push
insl
push
mov
and
jne
stos
xchg
call
fcomps
adc
mov
jns
jns
aam
pop
addr16
mov
pop
dec
outsb
push
rcrl
fistl
incl
insl
cwtl
pop
add
nop
jmp
ret
fiadds
or
sbb
lahf
not
push
mov
int
jp
push
dec
xchg
fcomi
xchg
pop
pop
out
movsb
aad
fs
adc
lret
cmp
sbbb
ljmp
pop
dec
fdivrs
push
movsl
ret
push
into
outsl
inc
pushf
jo
imul
aas
les
xchg
les
sti
jno
shll
inc
neg
jmp
add
add
sbb
cmp
fcmovnu
sbb
sbb
out
int3
lret
rolb
sub
outsl
fs
adc
ret
mov
int
push
inc
push
rclb
lock
scas
sarl
cwtl
inc
daa
popa
adc
or
pop
mov
out
mov
loope
dec
mov
movsb
and
loopne
jne
adc
pusha
outsl
xchg
push
pop
ss
jbe
fisttps
xchg
xchg
js
cs
imulb
mov
or
in
lds
into
push
cli
inc
int
jbe
push
push
or
add
xlat
int3
rorl
cmp
cmp
ror
clc
test
jae
scas
int3
data16
in
das
cmpsl
jp
and
hlt
movsb
pop
stc
fstpl
and
push
rcr
pusha
pop
jae
lahf
push
outsw
and
mov
xchg
fcoms
mov
fwait
inc
xchg
iret
cwtl
xor
pop
js
inc
movl
cmpsl
xchg
adc
jae
or
inc
ljmp
jp,pt
addr16
jne
aas
push
pop
inc
xlat
stc
lcall
xchg
mov
test
xchg
cmp
jns
gs
dec
mov
nop
sbb
xchg
divb
imul
xchg
pusha
es
hlt
or
pop
jmp
jo
xchg
push
mov
jmp
mov
dec
and
inc
push
sub
mov
loope
sub
cli
cmp
sub
and
mov
jb
jno
sbb
out
cmc
mov
cmpsl
lds
push
imul
xor
adc
or
inc
negl
pop
jnp
pop
mov
cs
or
adc
nop
mov
std
pop
fwait
out
inc
divb
popa
jnp
aas
mov
aas
pop
push
ss
cli
negb
mov
dec
adc
in
jno
ficompl
mov
sbb
jl
setnp
cmp
stc
cmpb
pop
adcl
adc
out
jne
mov
aas
xchg
cltd
inc
cmpsl
das
mov
push
std
mov
mov
or
mov
aaa
dec
scas
fwait
repnz
mov
pushf
dec
dec
scas
mov
cwtl
call
ljmp
in
out
shll
test
test
cmp
cmpsl
pop
iret
cmp
gs
sub
aad
out
sahf
lods
rolb
outsl
mov
je
inc
jno
int3
in
ja
rcl
imul
pop
sbb
sahf
mov
ret
push
xchg
jno
add
or
xor
jo
lds
ss
dec
push
dec
xorl
xchg
mov
jg
cmp
fldt
pop
bound
nop
test
mov
cmp
into
pop
sub
mov
xchg
ss
add
push
scas
mov
ss
in
mov
pop
lea
mov
adc
dec
jne
sbb
mov
pop
iret
push
vmovupd
cmp
int
dec
arpl
sbb
xchg
mov
and
lea
pop
pop
sbb
or
lea
add
inc
imul
pop
lahf
lea
inc
test
jecxz
mov
bound
mov
jl
out
loope
nop
out
mov
es
js
sbb
std
cwtl
and
aas
cmpsl
and
adcb
out
enter
cwtl
stos
repz
xchg
jmp
cmp
test
mov
jo
jg
fs
sub
cmpsb
icebp
dec
add
cld
xchg
inc
xor
orl
int
aaa
sbb
pop
adc
rcrb
lea
adc
shl
in
adc
add
js
mov
xlat
loopne
insl
enter
ja
sahf
rorl
cmp
aas
out
inc
jge
popf
inc
scas
outsb
aaa
sub
lret
ds
add
jecxz
push
ljmp
xchg
rorl
lods
ja
jbe
pop
adc
push
adc
sbb
into
mov
pop
sub
loopne
mov
in
push
test
int3
pop
pop
lods
jle
jmp
jecxz
imul
and
jg
mov
jmp
mov
imul
shll
jae
mov
dec
scas
lods
movsl
cmp
popf
push
cmp
movsb
repz
pop
aaa
add
push
sub
push
loope
adc
adc
pop
pop
test
fdivrl
out
add
dec
jmp
rorb
mov
inc
lret
js
add
pop
cld
add
rcl
inc
xchg
mov
ljmp
pop
mov
js
jg
pop
bndldx
push
vpaddw
mov
lret
dec
iret
jno
outsl
lods
xor
pop
mov
mov
or
and
cmp
orb
cs
std
jnp
in
lahf
xor
ljmp
movsl
les
shlb
sarl
mov
arpl
ret
sti
pop
xchg
xor
jecxz
stos
cs
jne
push
mov
and
mov
jnp
test
es
pop
aaa
sub
push
mov
ret
lret
add
jae
ja
shrl
push
push
push
xor
insb
xchg
xchg
js
insl
inc
cmp
es
ljmp
and
xchg
push
ljmp
and
mov
call
mov
xchg
orb
push
pop
aaa
push
ret
ds
fucomp
test
pop
jnp
sub
sub
mov
popf
and
adc
lea
rol
pusha
push
push
pusha
mov
xor
cli
ja
sbb
mov
inc
aas
mov
sub
je
aad
dec
daa
mov
addr16
jl
outsb
cmpsb
pop
or
mov
xor
lahf
pop
xchg
pop
jge
lea
xor
dec
jo
in
sub
addr16
sub
shrb
insb
cld
out
out
jmp
jo
push
int3
or
pop
out
fldl
jnp
cli
es
ficoms
cmp
mov
aaa
stos
insl
cmp
xchg
inc
fcmovnu
and
sub
mov
mov
jmp
mov
out
dec
push
dec
mov
sub
fnstenv
cmpsb
test
dec
pop
pop
push
test
into
aas
pop
les
push
pop
insl
loope
jnp
stc
inc
add
cmp
insl
xchg
jecxz
inc
lahf
add
imul
outsb
mov
cli
mov
lock
test
je
scas
add
pop
dec
push
les
out
sahf
inc
add
and
lcall
cmp
andl
inc
dec
lret
inc
outsb
iret
mov
pop
mov
icebp
dec
xor
xor
test
jg
add
aad
and
and
in
out
ss
cmpsb
fdivl
pop
xorb
mov
mov
push
mov
scas
outsb
outsl
jo
dec
inc
add
sbb
aad
sub
or
xor
xchg
mov
xlat
fists
pop
cmp
push
adc
stc
stos
f2xm1
mov
dec
mov
adc
add
in
jne
or
stc
sub
in
lret
adc
jle
int
lods
pusha
push
xchg
lods
inc
cmp
fsubrs
clc
pop
das
pop
enter
xrelease
push
sub
fcmovne
mov
sub
das
lds
into
adc
iret
arpl
cmp
xchg
and
xchg
pop
fisubs
and
push
xchg
divl
jo
std
push
jns
ja
test
or
lock
sub
xchg
adc
add
pop
cltd
push
adc
push
and
pusha
shrb
insl
and
cli
int
xchg
out
std
sbb
fsubr
sbb
push
fwait
pop
xorb
mov
in
movsb
sbb
jl
imul
sub
or
scas
push
dec
cmp
aas
sar
and
xor
mov
retw
and
xor
js
and
dec
lret
xchg
xchg
adc
mov
arpl
outsl
lret
push
cmp
pusha
mov
xor
xor
ja
cmp
cld
cmp
roll
outsb
add
jae
cld
arpl
enter
mov
loopne
mov
push
xchg
enter
xchg
jb
test
push
scas
out
jb
hlt
sbb
aam
jl
loop
pop
cmc
or
mov
mov
sub
cmp
stc
dec
pushf
mov
jg
mov
cltd
mov
popa
fnsave
jns
in
adc
and
movsl
pop
cltd
js
insl
adc
in
or
or
aaa
loopne
inc
add
dec
jge
repnz
mov
add
in
je
aas
test
or
ret
xor
jbe
inc
test
rcl
cmpsb
fdivr
mov
sub
push
mov
sbb
movsb
push
stc
xchg
cmpsb
ret
push
inc
iret
and
dec
and
enter
sub
popf
in
pcmpgtd
adc
lods
dec
fxch
call
xchg
ljmp
and
rcll
fwait
inc
jne
xor
cltd
mov
in
pop
cs
ret
mov
mov
icebp
ljmp
stos
scas
test
into
mov
ss
data16
cmpsb
mov
or
pop
pop
mov
mov
divb
push
scas
xchg
out
adc
or
icebp
cmpsb
inc
in
mov
sbb
mov
outsl
cld
jp
stos
mov
test
add
loopne
addr16
int3
pop
negb
cltd
and
scas
dec
pop
es
sub
cmp
cld
stc
push
inc
jmp
hlt
clc
mov
dec
ret
in
push
or
shrl
xchg
sbb
push
inc
and
sbb
fcompl
bound
andl
shll
sub
xor
aaa
cmp
sub
cmpsl
and
rorl
loope
inc
stos
push
mov
outsl
or
cltd
in
sbb
fs
jg
scas
jbe
sti
push
push
pop
fld
lret
xlat
cmp
dec
jb
push
call
mov
mov
out
inc
out
je
mov
movsl
test
pop
icebp
mov
int
lea
cmc
or
lret
or
rorl
cmc
or
movsl
xchg
bound
cmp
popf
pop
push
imul
aad
jg
rclb
dec
or
outsl
imul
loopne
mov
mov
cmpsl
fldl
int
mov
add
scas
cli
push
adc
cld
push
sahf
sbb
jge
xchg
inc
push
and
add
pop
xchg
xor
mov
sub
out
into
stos
imul
jae
mov
pop
mov
lahf
aam
mov
xor
cld
popf
or
loop
pop
pop
mov
gs
mov
push
cli
jb
enter
push
push
pusha
sub
jne
fwait
mov
mov
add
scas
les
imul
pop
out
lea
shlb
mov
mov
or
jmp
pop
lock
cli
mov
btc
jae
lret
mov
fimull
mov
pop
inc
jg
es
hlt
data16
jmp
add
movsl
js
sahf
es
sbb
sub
faddl
xchg
into
xchg
push
lea
add
test
or
xor
dec
push
jg
sarl
and
es
adc
js
push
push
sub
rcrb
jbe
xchg
sti
cmpsb
mov
enter
mov
and
or
lods
testl
or
imul
pop
add
repz
jecxz
in
orl
das
arpl
subl
daa
push
in
fdivrp
sub
push
mov
xchg
ss
inc
jne
sti
adc
rorb
jg
aam
jg
adc
xor
aad
cwtl
daa
xor
jmp
add
push
jge
insb
pop
sub
or
dec
or
aas
nop
or
fdivrl
xchg
mov
push
xchg
in
mov
insl
int
stos
cmpl
jmp
mov
clc
sub
leave
shlb
mov
bound
subl
or
cli
xchg
int3
test
fcomps
adc
out
cmp
icebp
pop
aam
pop
add
aad
push
pop
rolb
add
fs
cmp
iret
sti
dec
mov
aad
fisubrl
push
rcr
pop
and
out
ret
push
jmp
es
outsl
xor
push
inc
jbe
mov
sbb
ljmp
bswap
dec
addl
xor
repz
pop
scas
shlb
mov
mov
pop
sub
pop
jns
dec
pop
clc
pusha
js
pushf
pop
aam
mov
lret
or
jecxz,pt
jns
and
cmc
scas
imul
icebp
xchg
jns
and
je
or
jmp
repz
int
or
push
clc
jmp
xchg
enter
repz
jg
pop
int3
xor
out
jmp
adc
subb
fdivl
dec
pop
dec
lcall
mov
enter
cmp
jecxz
out
mov
fbld
xchg
jmp
jl
adc
int
add
into
jns
xor
push
xor
and
jl
xor
sub
cs
pop
jo
rcll
jmp
jp
inc
scas
mov
mov
imulb
sub
mov
imul
repnz
dec
xchg
andb
sub
fwait
mov
aas
icebp
repnz
test
ljmp
push
lock
mov
test
cmp
lahf
pushf
or
mov
mov
push
pop
leave
pusha
xchg
test
pop
sahf
sub
test
push
imul
test
ret
ficoml
sub
lcall
mov
fnstenv
jns
rcrb
fadds
add
sti
mov
lods
cwtl
loop
je
les
sub
dec
pop
daa
sbb
loope
loop
and
push
or
leave
jmp
xchg
sub
pop
xor
adc
lret
pop
shl
int
nop
js
mov
stc
adc
int3
lret
insl
push
andl
pop
sub
in
jge
lds
push
cmp
adc
repz
push
push
and
add
aas
or
dec
adc
add
cmp
out
fstl
es
mov
mov
pop
mov
fcompl
ljmp
sub
cmp
fs
or
adc
push
into
rcrb
inc
repz
pop
xor
lock
popa
and
call
or
jne
aad
mov
pop
sub
mov
pop
jbe
enter
xchg
gs
js
loopne
dec
cmpsl
add
fmuls
jbe
popa
cltd
imul
lret
daa
or
sbb
sub
arpl
mov
push
cmpsb
popf
dec
xchg
inc
mov
scas
sub
dec
insb
jg
jge
pop
mov
cltd
std
and
push
inc
xor
cmp
ljmp
inc
mov
xchg
stc
fnstsw
xor
outsb
inc
lock
stos
aaa
cmp
xchg
insb
sbb
stc
and
mov
xor
push
xchg
mov
jg
mov
jle
test
aas
inc
xchg
xchg
andb
and
adc
xorl
xor
into
rcl
shll
nop
or
lahf
addr16
or
and
roll
pop
fwait
inc
sub
ljmp
jnp
jne
cmpsl
lcall
lods
roll
sub
xchg
data16
vpshab
stos
sar
adc
add
stos
or
in
xchg
mov
repz
push
aam
imul
mov
lea
cli
xchg
es
cmp
lret
mov
leave
dec
movsb
in
xor
and
xor
aaa
jbe
ret
out
imul
iret
mov
insb
mov
push
cmc
inc
scas
mull
fadd
mov
push
lahf
fcoms
and
rclb
js
mov
dec
ss
sbb
aad
push
sbb
xor
fnstenv
dec
negb
movq
push
scas
test
movsb
cmp
mov
push
add
inc
push
scas
add
and
hlt
loopne
push
cwtl
push
push
cmovae
push
xchg
adc
je
inc
mov
sbb
sbb
lock
mov
push
fidivrs
es
popf
inc
shll
subb
jbe
in
pop
ja
mov
fwait
fs
mov
out
mov
jmp
mov
js
mov
ljmp
push
fwait
lret
push
sub
nop
test
dec
sub
xchg
push
cmpsl
sbb
mov
adc
cwtl
push
xchg
ror
insb
data16
sub
cmp
in
subb
xchg
in
dec
jle
and
push
or
inc
xor
mov
xor
sbbb
xor
adc
loop
add
xor
dec
cmc
enter
repnz
mov
cs
aaa
xor
cmp
jbe
jge
mov
push
jns
sub
xchg
loopne
jecxz
ds
sbbb
jo
je
push
push
into
add
mov
adc
imul
fildll
pusha
xchg
push
add
mov
mov
sub
out
out
dec
sub
or
loop
lret
fists
jle
mov
pop
gs
jno
bound
dec
pop
dec
xor
mov
inc
psubusb
rcll
pop
cmpsl
or
movsb
out
ret
jae
add
test
mov
cmp
lods
aad
mov
mov
adc
int
inc
mov
mov
fcomps
es
and
cli
or
mov
dec
loop
scas
es
loope
in
clc
inc
dec
mov
mov
sub
jecxz
rcr
popf
fistpll
mov
jns
adc
add
inc
xor
cmp
cli
inc
xchg
sbb
sub
mov
cwtl
adc
and
jl
in
push
dec
cmpb
fxam
arpl
cmpsb
daa
popf
mov
sub
clc
cmp
dec
fwait
dec
mov
mov
pop
iret
cmpsb
and
jecxz
shll
lods
add
sbb
shrb
popf
xchg
ret
dec
pop
mov
out
addr16
inc
xchg
imul
jg
pop
addr16
mov
xchg
mov
jmp
sahf
mov
push
cwtl
int
push
loope
shlb
add
pushf
cwtl
out
aaa
ss
ffree
ljmp
arpl
call
aas
mov
push
or
or
rcrb
adc
xchg
stos
dec
in
push
loopne
movsb
add
stos
sub
pop
jge
test
je
lds
push
fwait
pop
gs
inc
test
adc
mov
adcb
pop
bound
and
scas
mov
sub
add
loope
or
mul
and
inc
or
pop
adc
xchg
lods
aam
dec
sbb
icebp
shrb
xchg
popl
pop
sub
loope
jp
mov
leave
cli
lcall
or
mov
mov
fdiv
out
xor
cmp
mov
push
xor
sti
ret
sbb
sti
es
xchg
jmp
fcompl
arpl
add
dec
subl
out
jns
ret
jp
fildll
jle
adc
push
mov
ret
ficoms
loopne
mov
pop
xchg
fisubl
dec
sub
xor
jnp
push
addr16
fwait
popa
push
inc
pop
shl
push
inc
add
les
add
adc
sbb
adc
mov
shll
sub
mov
xchg
mov
inc
sahf
filds
adc
js
jecxz
insl
insl
std
jge
xorb
jnp
dec
lods
leave
dec
lea
je
pop
mov
ja
xlat
sub
cmp
daa
ret
xchg
sahf
lret
cmc
pop
inc
dec
and
popa
jge
sub
push
sti
int
out
ret
shr
into
cmp
pusha
imul
xlat
jmp
or
cld
sub
jae
mov
dec
ja
mov
pushf
cmp
data16
test
xchg
mov
xchg
mulw
nop
std
xchg
adc
lods
dec
push
enter
cmp
add
gs
sbb
lock
dec
js
stos
aas
gs
push
mov
rorb
push
dec
movsb
in
mov
inc
push
test
scas
sbb
mov
pop
aaa
xor
cmp
rcrb
pop
mov
fdivrs
data16
adcl
jo
cmp
jge
xor
insb
sub
in
pusha
enter
mov
arpl
arpl
sub
mov
orb
mov
sub
jmp
test
test
mov
xor
pushf
pop
cli
stc
lret
pusha
dec
dec
cmc
sti
das
jp
push
orl
arpl
add
sahf
mov
les
xchg
mov
mov
xor
cli
cmp
and
call
dec
cmpsb
jo
jns
pop
xchg
xchg
repz
adc
daa
adc
jbe
imul
aad
int3
cld
cs
sbb
xchg
lea
or
aas
repnz
test
loopne
jle
inc
inc
hlt
lock
out
dec
in
icebp
je
jg
sarl
mov
pop
decb
sbb
cmp
lret
aas
jns
adc
xchg
and
mov
mov
rol
popf
pop
pop
rolb
xchg
pop
adc
jne
sbb
ljmp
imul
sub
jl
rolb
adc
in
push
inc
lods
shrl
and
out
call
inc
ret
push
inc
repnz
push
and
scas
push
stos
adc
popf
rcrb
inc
int3
push
lret
lret
cwtl
xchg
inc
in
xchg
jno
xchg
push
xchg
rorb
call
test
lods
fimuls
clc
lods
push
cmp
xor
aaa
mov
xor
xchg
aam
xchg
push
push
aam
jge
int3
inc
xor
das
pop
loop
pop
xchg
nop
mov
sub
stos
cmp
and
adc
in
loope
hlt
cmpsb
jo
loop
aas
mov
bound
cmovo
loopne
in
ljmp
add
inc
stos
push
lods
call
or
xchg
cld
xchg
push
lds
xchg
gs
dec
jo
outsl
mov
test
push
pop
sahf
das
or
hlt
bound
or
std
fwait
jnp
or
push
inc
xor
dec
call
push
lock
lret
sbb
div
push
cld
jno
and
aad
xchg
cmp
jns
xor
test
push
push
push
mov
mov
mov
xor
xor
sub
lock
fisttpl
push
stos
cltd
mov
xchg
imul
mov
add
ljmp
cwtl
sub
movsb
mov
push
mov
lods
popf
adc
sar
iret
mov
push
or
push
add
mov
dec
iret
jle
ret
mov
pusha
push
jl
fists
push
int
xchg
jecxz
jle
mov
scas
into
fisubl
ret
idivl
sbb
fwait
jno
gs
push
nop
dec
or
xor
adc
icebp
movsl
cmpsb
mov
ret
dec
fdivs
pop
push
jbe
xor
push
in
mov
mov
leave
pop
dec
decl
inc
xchg
test
push
loop
data16
iret
sqrtps
push
and
push
push
dec
in
lea
mov
pop
pop
sub
sbb
xchg
out
sub
jae
jp
push
push
aaa
and
xchg
xchg
hlt
and
ljmp
ds
pop
js
cmp
or
and
scas
icebp
loope
push
push
pop
mov
fcompl
sub
ds
inc
adc
js
mov
std
nop
lods
out
dec
jns
insb
mov
inc
das
add
mov
push
scas
int3
out
pusha
repnz
js
or
mov
aam
dec
addr16
lret
add
inc
sti
jmp
mov
gs
jb
movsb
hlt
mov
outsl
or
jecxz
dec
fdivr
or
inc
push
aaa
loopne
mov
test
pop
push
sub
mov
cmp
xchg
sbb
loope
jl
inc
adc
sbb
fcmovu
daa
inc
cltd
test
add
jge
inc
dec
jne
xor
xchg
push
call
aam
ds
orl
adcb
adc
adc
cmp
jnp
mov
vmovlps
das
fidivl
test
sahf
aam
repnz
ds
jl
adc
pop
in
mov
popa
out
xchg
mov
popf
daa
xor
push
dec
cmp
pop
fdivrl
repnz
ja
sbb
hlt
scas
gs
insl
cmpb
insl
and
xor
sbb
mov
cld
cli
mov
jle
mov
xor
xor
insl
jp
add
into
cmpsl
imul
mov
pop
mov
ds
add
mov
scas
mov
repz
xor
stos
push
test
cmp
mov
xchg
jge
je
arpl
rcrb
rcll
movsb
cmp
inc
popf
rcrl
add
mov
loopne
loope
lock
jecxz
dec
mov
inc
ret
rclb
and
dec
jle
popf
fs
mov
fbstp
mov
pop
jl
mov
sub
lret
test
jne
cmc
ja
add
in
push
stos
popf
sub
cli
das
sbb
test
push
fstl
and
int
adcl
xlat
scas
xor
icebp
or
pushf
pop
dec
mov
pop
mov
sti
mov
inc
nop
leave
xchg
mov
mov
or
std
or
pop
mov
and
lods
mov
dec
mov
sti
push
or
jecxz
hlt
mov
fs
lret
jo
mov
and
xor
lods
in
sub
mov
mov
loopne
stos
hlt
dec
inc
xchg
pop
jecxz
ds
inc
push
and
cld
js
or
sbb
lods
lods
sahf
ss
inc
mov
fisttps
sbb
cli
std
insl
stos
enter
pushf
push
and
sbb
mov
jnp
mov
cmpsb
fdivrl
shrl
hlt
add
xchg
aad
ds
mov
divb
mov
mov
mov
pop
stc
mov
mov
add
mov
daa
sub
ret
add
dec
popf
js
and
adc
push
sbb
data16
push
add
lock
pop
cwtl
dec
sbb
mov
jnp
ljmp
sti
cmpl
xchg
inc
push
mov
inc
xchg
mov
imul
ljmp
bound
add
call
inc
aam
jno
ja
in
mov
push
clc
aam
cmp
push
fs
out
or
sbb
out
aam
mov
xchg
sub
fdivrs
andl
mov
or
adc
aad
jbe
adc
fucom
cmp
ja
je
sbb
or
cmp
repz
out
pop
test
xchg
mov
mov
and
jbe
std
xor
les
fildll
sbb
push
sahf
inc
cmpsb
in
lret
jge
shrl
test
loop
mov
nop
sbb
jmp
pop
movsb
daa
push
mul
shll
mov
mov
call
outsl
fnsetpm(287
xchg
fwait
ss
addl
inc
orb
add
jecxz
sti
lock
iret
xchg
add
call
cmp
jnp
mov
sbb
push
add
lock
insl
mov
jno
pushf
lahf
or
ds
nop
mov
and
or
popf
cmp
mov
je
mov
movb
mov
sbb
inc
push
out
cmp
pop
movb
in
push
ret
outsb
jge
std
jno
ja
xchg
lods
mov
mov
mov
and
gs
jo
stos
insb
push
add
push
and
sub
leave
movsb
in
repnz
sub
inc
clc
jns
mov
and
add
pop
cmp
insb
out
or
fmull
cmp
mov
pop
mov
cmp
push
fistpl
inc
arpl
mov
jae
lahf
inc
push
pop
pop
lods
or
xlat
pushf
and
cmpb
inc
pop
pop
mov
mov
and
ret
outsl
jecxz
test
or
pop
ja
ds
mov
mov
dec
fldcw
xor
jae
push
jae
xor
cmp
test
and
lods
jmp
or
ds
jg
sbb
jge,pt
outsb
repz
into
adc
xchg
push
popa
std
pop
pop
syscall
loope
xchg
inc
dec
stos
std
fcoms
jns
mov
mov
pop
xchg
or
je
fidivrs
inc
mov
vpaddsb
les
push
jmp
int
mov
add
push
lods
xchg
jne
or
je
or
idivl
lahf
iret
in
push
push
fnsave
mov
jmp
lods
mov
add
push
dec
push
sti
inc
adc
test
repnz
pop
mov
pop
inc
nop
mov
aam
out
and
outsl
icebp
loopne
gs
pop
std
xor
push
sub
xchg
sub
mov
inc
mov
loopne
xor
jb
mov
incb
ljmp
sbb
mov
add
adc
add
je
stos
jl
rcrb
loopne
in
fsubrl
xchg
rclb
xchg
idivb
push
movsb
cmc
in
add
lods
xchg
repz
dec
fildll
test
push
call
aam
push
test
pop
pop
pcmpeqw
dec
pop
pop
pop
xor
jecxz
xchg
lds
cmp
mov
jne
outsl
inc
idivl
nop
insb
and
or
imul
addl
btr
mov
pop
gs
mov
or
push
jnp
ficoms
fnstenv
dec
in
fwait
addb
push
call
pop
push
lea
loop
aad
sbb
aad
rolb
pop
mov
out
lahf
mov
outsb
pushf
ficompl
pop
dec
mov
mov
jno
nop
je
jmp
nop
push
xchg
cmp
cld
xor
mov
jno
cli
ds
stc
mov
xor
push
mov
pop
dec
cmp
cmp
stc
stos
enter
xchg
cli
icebp
cmpsb
mov
repnz
ja
inc
insl
jle
fstpl
sbb
stc
movsl
sbb
hlt
mov
mov
jns
xor
jmp
sub
inc
push
out
cmpsb
rcr
inc
lock
mul
outsb
jge
ret
and
sub
punpckhwd
lods
data16
or
adc
push
push
clc
cmpsb
loop
adc
pop
sti
dec
movsb
pusha
lods
adc
inc
pop
add
jg
inc
jl
repz
leave
push
je
mov
mov
ss
sub
subb
push
xor
aas
mov
lcall
push
jmp
jmp
dec
push
pop
subl
mov
push
mov
add
mov
sarl
mov
lds
push
jge
sub
nop
lret
inc
mov
sub
xchg
test
cmpsl
pop
jp
xchg
mov
mov
push
inc
and
es
subb
sbb
adc
mov
mov
mov
sub
test
out
push
mov
ds
jge
scas
leave
xor
incb
in
stos
sbb
sbb
dec
fwait
push
push
int3
xor
and
lods
sbb
test
in
push
pop
std
cltd
testl
xchg
mov
push
mov
shlb
cld
or
cli
fsubs
sahf
hlt
pop
into
jmp
and
clc
and
ljmp
insl
stos
and
lcall
loopne
in
shld
mov
sti
imul
dec
ja
or
mov
pushl
mov
loopne
or
jl
pop
mov
fildl
cmpsb
pop
leave
mov
fimull
push
xor
inc
js
popf
sub
or
sbb
pop
mov
cmpsb
cs
jle
imul
ret
aas
in
nop
add
push
je
mov
cmp
in
fisubrs
pop
or
dec
sub
mov
cmp
mov
jnp
imulb
xor
out
std
lods
adc
dec
inc
gs
into
js
and
icebp
fdivl
outsl
jle
test
loopne
rcr
movsb
je
inc
in
mov
into
adc
adc
pop
dec
repnz
cmp
pop
cs
xchg
pop
test
lods
xchg
fdiv
ror
aaa
push
or
ret
push
adc
add
or
loopne
loope
into
jno
dec
hlt
test
fwait
xchg
mov
leave
xor
cwtl
movsb
inc
xchg
pop
mov
sarb
stc
and
mov
dec
insl
mov
insb
sub
mov
cltd
daa
fnsave
aas
fisubrs
mov
jbe
popf
dec
jno
fdivrs
je
fisubs
mov
dec
imul
xchg
test
push
jnp
fimull
jp
fildll
and
outsb
or
dec
hlt
sub
stos
stc
stc
mov
pop
es
fwait
scas
jl
add
testl
or
sbb
sbb
movsl
addr16
call
xor
cmp
in
or
addl
rcr
mov
hlt
cltd
jo
arpl
adc
jne
and
ljmp
dec
push
outsb
fisubrl
imul
push
aaa
lods
sub
cmpsl
jo
enter
fisubs
inc
loopne
movsl
scas
pop
mov
bound
cmc
pusha
pop
sub
add
pop
push
fmull
into
out
mov
lock
rorb
loopne
data16
ret
shrl
mov
fdivl
divl
sbb
jecxz
cmp
repnz
xor
pusha
sahf
cmpsl
and
pop
enter
in
outsb
subl
in
mov
aas
and
aad
inc
js
ja
es
iret
adc
arpl
dec
mov
loope
xor
lds
mov
rolb
outsl
or
push
scas
dec
dec
js
imul
fs
pushf
dec
add
lret
clc
dec
lret
aad
pop
pop
push
cmp
loop
loop
aaa
hlt
dec
jbe
jl
pop
lods
jecxz
fdivrl
mov
lahf
pop
and
inc
repz
repnz
sub
inc
fldl
fsubrp
jl
decb
fimuls
xor
dec
mov
dec
mov
pusha
or
or
les
sub
xchg
xor
inc
stos
fsubl
mov
pop
aad
sbb
scas
jb
sub
and
add
aad
jbe
outsl
add
mov
fildl
rolb
shl
and
jmp
stos
push
int
sub
rcr
lahf
aaa
popf
xlat
xor
enter
int3
fstl
imul
jno
xchg
jbe
in
movsl
push
push
enter
loop
test
jmp
fistl
scas
insb
xchg
xchg
inc
mov
push
jl
sbb
sbb
lret
mov
sti
das
sbb
popl
lock
pop
mov
dec
out
and
ficoml
adc
test
ljmp
in
cmp
mov
inc
or
inc
xor
and
fidivrs
pop
cmp
fmul
dec
xor
jle
add
inc
pop
dec
xchg
inc
jo
push
sbb
mov
into
cmp
icebp
aad
and
or
push
pop
mov
cli
jbe
cmp
leave
inc
pop
jne
pop
jg,pn
or
cmpb
mov
pop
std
push
mov
sub
mov
in
iret
sub
jl
rorb
xlat
sarb
ljmp
insb
stos
mov
or
cmovno
dec
ret
xchg
add
hlt
into
fdecstp
imul
lret
fidivs
imul
push
cmp
jns
push
mov
loopne
sbb
push
fwait
xchg
aam
sub
fsts
dec
cmp
sahf
cmp
js
mov
lea
movsb
sbb
jmp
push
jnp
addr16
mov
pavgw
adc
push
enter
sbb
add
add
jno
aam
divl
inc
pop
and
sub
pop
mov
lahf
xchg
negb
stos
sarl
divl
loop
mov
in
iret
testb
xchg
mov
ss
push
cmp
pop
dec
clc
jmp
mov
sar
out
into
xchg
xor
popf
add
cmp
mov
outsl
pushf
xchg
loop
pop
lret
es
inc
fidivrs
cmpsl
pop
lret
push
push
popf
or
add
mov
pop
sbb
adc
lcall
pop
sbb
sbb
dec
fldl
cmpsl
fwait
sti
insb
mov
pop
mov
adc
cs
aas
movsl
arpl
push
xor
mov
inc
inc
insl
inc
test
hlt
xlat
adc
enter
or
sub
push
iret
xor
stos
sti
js
jle
addr16
enter
out
mov
xchg
sti
dec
xor
adcl
into
jno
scas
jge
sub
es
aas
mov
out
outsb
repnz
jae
push
and
stos
imulb
aas
dec
imul
dec
inc
into
mov
loope
or
imull
lea
and
cmpsl
addr16
mov
rclb
fwait
in
mov
lcall
bound
sbb
jg
fisubl
sbb
fbld
les
fisubl
aas
dec
sbb
sbb
into
cmp
fs
dec
das
mov
push
stos
out
nop
rcrb
cmp
adc
sahf
jg
lea
insb
xor
cltd
cld
cmp
push
pop
shl
push
cmp
sbb
push
pop
int3
adc
mov
js
mov
jl
xchg
sbb
imul
inc
adc
xlat
push
push
pop
inc
lahf
add
fs
insl
jbe
sbb
ficomps
jle
cmp
imul
orb
fwait
in
fwait
cmpsb
lcall
mov
mov
aam
scas
mov
mov
leave
mov
jb
push
mov
aam
loope
int
fidivrl
and
sub
or
shlb
dec
cmp
sbb
jne
inc
pop
das
je
lods
add
popa
pop
lretw
rorb
cld
cmp
and
add
push
cmp
xchg
mov
mov
mov
pop
es
outsb
dec
cli
andb
jbe
jecxz
mov
xor
xchg
xor
and
int3
cmp
or
shll
loope
xchg
mov
gs
movsl
fstps
jmp
popf
and
rcl
and
sbb
cmp
inc
push
aad
sub
ljmp
xchg
ret
add
sub
shll
aas
jl
test
lock
jne
inc
mov
daa
jns
out
fistpl
idivb
out
cmp
cltd
mov
cmp
incb
dec
fucomp
fisubrs
lret
sub
inc
jbe
jbe
adc
mov
scas
dec
fcom
cmc
jp
out
push
lcall
gs
repz
mov
push
or
xchg
xchg
lret
mov
dec
dec
cmpsl
das
int
ret
movl
mov
cmp
xchg
ds
stos
test
inc
ret
mov
ret
je
mov
popl
cmp
mulb
sbb
fs
xchg
aas
xchg
push
jl
pop
lods
dec
push
or
push
stc
insb
adc
dec
idivb
call
adc
dec
popa
loopne
movsl
inc
mov
and
ds
ja
and
out
jmp
jg
aad
xor
mov
sub
xlat
add
inc
inc
sbb
andl
xor
push
into
or
pop
and
dec
pop
mov
jbe
ret
sti
inc
out
insb
inc
push
repz
negl
push
mov
loop,pt
and
dec
or
in
dec
das
inc
sti
sahf
jae
push
sti
ss
push
out
lret
cmc
mov
sti
and
add
je
push
push
or
aam
shl
jns
jbe
and
lods
xchg
adc
jb
mov
jp
push
mov
filds
ficoml
mov
cltd
mov
sbb
mov
stos
in
ljmp
xchg
scas
lret
inc
test
push
and
addl
leave
test
enter
push
xchg
xor
dec
cmpsl
add
pop
test
pushf
adc
mov
sbb
mov
or
stos
stos
xchg
popa
jae
push
arpl
lds
cmp
xchg
loope
bound
pop
mov
jae
adc
call
cmp
cld
mov
fsubl
fwait
jmp
dec
fiadds
mov
pop
bound
loope
shlb
fs
mov
jno
repz
dec
fcomps
stc
pop
or
vmread
sub
fwait
rcl
xchg
popf
or
jle
adcb
add
fs
enter
or
lds
or
daa
sbb
mov
repz
clc
inc
lods
xchg
arpl
adc
mov
outsb
mov
add
aam
cli
jecxz
adc
mov
rcl
jb
fldcw
pop
popf
inc
jnp
je
cld
lret
sub
in
int3
or
testb
mov
push
rcrb
xor
adc
shl
and
sahf
mov
ror
xchg
in
rcr
or
jecxz
jns
fadd
clc
fidivs
popa
shrl
rcrl
inc
mov
xor
and
fidivrl
popf
gs
mov
pop
sub
xlat
xor
pop
addr16
mov
sub
stc
sub
rcll
mov
sbb
ds
mov
fbstp
les
mov
ja
adc
dec
fisubrl
mov
push
or
stos
cmp
xor
loopne
ret
inc
pop
cmc
push
into
pop
mov
push
mov
add
xchg
in
bound
imul
pop
xchg
ss
xchg
stos
or
stc
inc
pop
jo
mov
iret
inc
fadd
inc
jle
and
mov
jo
sbb
push
cld
shlb
dec
and
mov
push
out
jo
in
xor
push
adc
lahf
sbb
sbb
fisubs
mov
xor
push
pop
add
mov
adc
iret
mov
mull
pop
ret
jge
out
mov
sub
push
divl
test
add
mov
lds
je
lock
cmpsb
pop
jae
sub
lds
sbb
sbb
andl
ljmp
add
stc
test
dec
mov
sub
clc
xchg
mov
xor
mov
xchg
mov
xchg
notb
int
test
loope
pop
and
and
sub
cmpsb
push
sub
inc
cmpsl
clc
imul
int3
mov
xchg
mov
stc
fcmovu
mov
int
ret
sbb
push
lahf
aad
xchg
fnsave
lea
inc
stos
cs
pusha
mov
mov
loopne
lcall
push
lahf
divb
outsb
and
hlt
mov
sbb
mov
pop
pop
push
cmp
pop
lcall
test
aad
inc
xchg
jp
scas
adc
lret
stos
jmp
dec
jae
nop
xchg
call
xor
inc
cltd
and
mov
jl
sbb
cmp
idivb
or
popa
add
xchg
mov
popf
jnp
xchg
lea
sbb
pop
in
mov
in
mov
xchg
dec
mov
mov
shlb
lods
mov
js
push
std
cmp
out
adc
out
negb
call
cld
dec
add
cmc
mov
cli
sbbl
ja
mov
xchg
in
mov
scas
out
adc
data16
stos
push
sub
imul
lods
outsb
movsb
dec
sti
aad
dec
insl
xlat
push
and
leave
cli
loop
xor
je
lds
dec
mov
popa
or
push
xchg
xor
adc
negb
pop
push
or
loopne
xchg
pusha
and
sbb
mov
cmc
mov
cmpsb
cld
fisttpl
cld
inc
add
imul
mov
repz
js
addr16
jle
xor
jne
leave
jno
cmpsb
pop
ss
adc
pushf
pop
sbb
adc
dec
scas
adc
shlb
call
mov
scas
in
imul
ds
std
push
lock
stc
clc
das
add
dec
popa
es
shrl
or
lret
or
decl
std
in
cmp
cmpsl
aaa
ja
dec
adc
adc
dec
cmp
push
iret
and
xchg
sbb
enter
mov
push
insb
xor
scas
aaa
mov
pop
stos
fbstp
addb
xor
xchg
mov
arpl
pop
adc
pop
stos
bound
test
dec
and
mov
jae
add
in
push
bound
ja
dec
mov
push
push
inc
push
xchg
mov
push
fistpll
lds
pop
fcompl
test
mov
stc
loopne
pushf
and
add
aas
in
add
cmp
xor
in
dec
mov
xor
adc
nop
imul
jne
out
shlb
xchg
lods
lcall
push
pop
mov
es
mov
leave
mov
xchg
inc
xor
jno
je
bsr
cmpsb
cmp
std
stos
ret
inc
mov
pop
jmp
jmp
xorb
or
scas
or
leavew
xor
out
mov
in
mov
test
jb
push
push
xor
loopne
push
jno
xchg
aaa
mov
movsl
clc
fsubrl
or
repz
mov
push
xchg
into
int3
test
cmp
fnstenv
add
movsl
pop
adc
shl
mov
sub
xor
xchg
jno
sbb
dec
fnstsw
fldenv
jns
ds
call
xor
cmc
add
das
pop
mov
cmp
aas
inc
xor
iret
dec
and
push
xlat
out
mov
lds
frstor
fs
pop
mov
pop
sti
xchg
inc
arpl
roll
inc
insl
adc
jno
divb
dec
dec
mov
outsl
jns
xchg
aas
repz
push
or
in
sub
and
ret
sbb
jmp
cmpsb
iret
jmp
pop
add
cmp
sbb
pop
cmc
lret
and
lcall
jge
push
dec
lcall
and
cmpsb
filds
orb
sbb
rcll
mov
out
push
mov
out
jl
lahf
push
sbb
fimuls
mov
aad
mov
inc
mov
mov
test
cmpsb
and
mov
daa
push
push
and
cmp
rcr
cmp
aad
pop
dec
sub
in
mov
stos
repz
cmc
add
sahf
lods
add
arpl
sub
xor
xchg
xchg
add
xor
loop
stos
mov
add
fs
hlt
gs
in
jns
pop
sbb
mov
js
mov
into
int3
nop
sub
mov
inc
adc
sbb
jno
or
jbe
movsb
dec
jne
dec
push
andl
lret
cwtl
xchg
jge
and
ret
imul
lock
jp
fwait
mov
incb
push
andb
mov
cltd
sub
mov
xor
pop
in
push
mov
int
cmp
dec
loop
mov
lret
dec
dec
xchg
jge
mov
sbb
cmp
ja
xlat
push
pusha
daa
adc
push
sbb
fs
imul
pushf
jns
movsb
sbb
sbb
fdivrs
dec
add
mov
cld
jnp
int
pushf
in
out
pop
movsb
push
insb
dec
pop
adc
das
popf
push
jmp
adc
pop
or
es
lret
mov
lret
or
sub
into
sbb
jb
fisttpll
je
fisttps
enter
insb
shl
mov
fmuls
outsb
popl
ja
lret
call
jb
or
add
pusha
roll
imul
in
lahf
cld
cli
sbb
push
push
add
sbb
mov
xchg
push
test
jb
sbb
ss
sub
lock
xchg
jp
or
mov
orb
add
sbb
imul
push
jne
popa
in
sbbl
xchg
loopne
dec
and
in
sbb
lods
pop
add
imul
sub
sub
jp
sbb
out
cli
lcall
data16
fdivrl
inc
sub
in
push
and
jno
push
std
xchg
inc
jge
mov
hlt
sub
jb
out
nop
sbb
mov
fnstcw
cmp
xor
ficomps
inc
and
leave
stc
ret
inc
add
repnz
jl
mov
push
cmpsb
inc
aam
test
fsubr
jne
jl
dec
inc
ret
xchg
push
or
lea
adc
dec
or
push
fwait
xchg
sbb
cld
lea
ret
cs
popa
sub
les
inc
sub
mov
add
popf
lret
lock
mov
and
pop
mov
sbb
pop
mov
aam
or
sbb
scas
dec
or
inc
nop
push
sub
rcll
ficomps
repnz
jg
fcmovnb
push
jp
adc
in
mov
aad
je
xchg
xchg
gs
stos
test
repz
jg
sarb
mov
icebp
xlat
in
xchg
jmp
test
mov
mov
jae
int3
ja
rcrb
pop
push
ret
mov
fsubs
mov
dec
xlat
xor
mov
push
adc
pop
mov
cmp
add
inc
out
std
stos
push
pusha
adc
inc
loope
push
add
out
outsl
test
and
add
mov
mov
repnz
daa
aam
mov
inc
adc
and
and
xchg
mov
cmp
cmp
mov
mov
gs
cmp
pop
cld
xchg
xchg
dec
addl
xchg
adc
ss
add
lret
sbb
stos
sub
jecxz
dec
inc
jecxz
mov
cmpsb
mov
jns
leave
fsubrl
rorl
adc
jl
loop
mov
cwtl
mov
mov
fbld
mov
xor
pop
scas
pop
xchg
and
mov
cltd
dec
decl
lcall
dec
fs
mov
jae
insb
in
cmp
sbb
das
mov
xor
jl
jmp
pop
dec
push
loope
hlt
arpl
or
and
in
cmp
push
inc
mov
lahf
fistl
fistpl
dec
cmpsb
pop
sub
dec
and
aaa
cmp
mov
rorb
inc
jns
adcl
jmp
leave
jbe
add
jns
push
ss
jb
insb
xchg
mov
inc
cmp
cld
cltd
pop
insb
loopne
loope
enter
bound
xor
lea
sbb
pop
outsl
nop
test
push
movsb
inc
ret
sahf
pop
add
inc
xor
lods
push
xlat
stos
js
xchg
add
lods
jbe
cmpsl
sarb
pop
pushf
in
incb
lret
aaa
sub
xlat
mov
dec
fs
rcrl
jmp
nop
dec
in
repz
mov
mov
sbb
dec
adc
fisttpl
pop
mov
mov
in
aas
jnp
xchg
mov
ret
dec
sbb
lods
je
dec
into
fs
insl
xor
dec
int3
mov
sbb
add
lea
or
and
or
inc
idivl
pushf
or
in
push
fstps
dec
lea
push
js
mov
in
sbbl
stos
stos
xchg
scas
inc
push
and
imul
in
xchg
subb
scas
test
fs
leave
nop
das
push
pop
lret
lret
pop
mov
lahf
mov
inc
pop
push
push
mov
add
hlt
movsl
mov
mov
lea
aam
mov
call
mov
add
sbb
or
add
std
nop
mov
popf
ljmp
push
clc
jge
lret
mov
push
cwtl
jae
std
sbb
and
cmp
dec
lods
push
aam
sub
mov
out
aam
pushf
mov
mov
loop
mov
scas
cmpb
xor
sbbl
scas
jo
mov
sub
dec
ret
lods
sbb
or
jmp
sub
inc
popf
inc
dec
int
ret
push
xor
out
jl
sub
adc
adc
jp
aam
and
cmp
fidivl
gs
fdivl
jbe
rcll
xlat
mov
js
sub
hlt
orb
xchg
jb
repz
jnp
xor
and
scas
popf
scas
push
clc
js
pop
push
insb
mov
sbb
je
enter
notl
ret
lret
jmp
push
orl
cmp
das
pop
xor
push
fcoms
je
xor
lods
mov
mov
repnz
xchg
lds
fwait
cmp
test
and
testb
cli
add
xchg
dec
fcmovne
pop
std
cmp
inc
aaa
call
jg
out
std
cmpsl
dec
push
pop
mov
jp
aad
je
adc
sbb
add
aam
ret
repnz
cs
pop
cltd
mulb
mov
ds
ret
pop
add
les
mov
fmul
xchg
test
rolb
add
data16
inc
mov
sar
pop
dec
push
pop
pop
xor
divb
and
jl
lock
xlat
insl
mov
mov
ljmp
add
clc
adc
and
jmp
insl
aaa
cld
imul
hlt
add
pop
daa
adc
mov
out
xchg
movsldup
push
addr16
lods
sub
pop
into
inc
push
pop
shll
xlat
out
adc
xor
out
out
add
sbb
mov
add
xchg
push
adcb
loop
imul
icebp
leave
loope
movsl
mov
mov
pop
fdivrs
iret
inc
cmp
pop
cmpsl
movsb
xchg
push
movl
jns
imul
pop
cmp
sub
mov
xor
out
xlat
aam
aaa
jmp
lds
xchg
outsb
pop
lock
stos
scas
test
push
mov
int3
data16
jbe
lret
mov
dec
jbe
jno
test
sub
hlt
and
xchg
mov
and
mov
outsb
fld1
sub
xor
adc
xlat
jmp
out
cmp
jmp
sub
inc
xchg
lea
mov
popa
xchg
int3
sbb
ljmp
out
mov
ret
repz
add
sbb
fsubrl
and
hlt
xor
shll
dec
cwtl
cmc
or
mov
or
rorb
inc
cmp
lret
pop
xor
mov
jns
xchg
popa
mov
subb
xorl
sub
sahf
sbb
xor
xchg
jmp
mulb
std
loope
stos
adc
outsb
fdiv
jl
sbbb
aas
cmp
sti
flds
lods
fldcw
xchg
les
iret
cli
movsl
inc
xchg
sub
pop
es
negl
hlt
popa
sub
outsl
leave
aad
push
pop
push
js
push
dec
sbb
sbb
ficomps
xor
mov
and
xchg
dec
jne
dec
cld
icebp
jmp
adc
xor
jno
jg
pop
not
scas
mov
mov
push
push
mov
add
jae
das
sub
ret
lcall
pop
and
mov
xchg
mov
leave
push
sbb
xor
jne
fistl
fwait
sub
add
jp
and
mov
or
add
ret
lret
out
lds
jl
pop
fucomi
push
lods
sbb
xchg
sbb
sub
and
iret
inc
push
in
stos
sub
call
lods
shrl
cmp
sub
push
or
sbb
in
int3
adc
push
mov
fldcw
inc
mov
ret
adc
fsubl
scas
inc
rol
les
lahf
add
sbb
loopne
loopne
jnp
ljmp
xchg
mov
scas
inc
xchg
add
dec
xchg
xor
push
and
test
xor
sbb
sub
mov
xchg
xchg
stos
cltd
andl
mov
fistps
add
test
cmp
sub
lods
sbb
ret
add
cmp
leave
dec
sub
cmp
sahf
jns
pop
cli
jo
enter
mov
jge
stc
jbe
cmp
sbb
ja
ljmp
out
jns
popf
cwtl
sub
scas
and
outsb
loope
mov
add
dec
add
out
xor
nop
addr16
push
adc
ljmp
sub
enter
mov
cmp
shll
repz
mov
clc
jge
test
add
and
test
enter
fmuls
jb
sbb
cmpsl
test
pop
or
xchg
xchg
aad
popa
sbb
jg
pop
leave
int3
mull
lock
rcrl
iret
mov
push
sub
aam
sub
lret
insl
mov
into
imul
iret
js
nop
xor
les
js
or
pop
pushf
out
pop
loop
or
sarl
daa
xor
add
leave
jl
adc
xchg
push
and
push
test
inc
mov
xor
loopne
out
loopne
pop
cmpsb
mov
leave
aam
add
rorl
mov
outsl
arpl
pop
push
int3
jb
ret
aas
movd
in
sub
nop
into
jmp
bound
mov
sbb
lods
cli
repnz
out
test
inc
insl
lods
lret
scas
cwtl
mov
dec
loopne
fs
out
push
cmp
dec
mov
pop
or
dec
rcrb
lret
xchg
mov
fldenv
sarb
adc
idiv
or
push
scas
xchg
xchg
in
shrl
das
adc
dec
loopne
push
std
mov
cmp
mov
or
mov
lret
jbe
push
inc
pop
test
jg
mov
sbb
sub
adc
add
pop
incb
orl
mov
out
fldenv
nop
imul
repnz
das
loope
jb
cwtl
shlb
add
add
add
cs
xor
imul
cmp
into
sbb
insl
js
mulb
xor
jae
mov
inc
addr16
fidivrl
or
push
jb
xchg
mov
sbb
in
bound
pop
jmp
adc
inc
push
xchg
mov
pushf
mov
push
mov
cmpsb
lea
aad
jb
mov
imul
int
nop
into
ja
cld
dec
mov
sti
dec
fsubrs
push
test
orb
aas
jb
xchg
fstpt
xchg
bound
mov
jl
xchg
xor
lret
mov
pop
popa
gs
shr
fstl
xor
and
lahf
jecxz
inc
and
ss
pop
pop
dec
mov
js
mov
dec
icebp
mov
jb
les
js
das
rcrl
js
jl
les
push
in
or
inc
sbbb
or
int
rclb
sahf
mov
or
xchg
and
cld
and
xor
inc
test
push
shrb
mov
test
push
outsl
mov
pop
ret
loope
pop
movsb
fidivs
push
push
or
cmp
sub
and
jmp
lret
xchg
imul
push
xor
dec
mov
test
push
jcxz
jl
or
in
in
xchg
ljmp
jb
xlat
testb
push
idiv
into
xchg
out
mov
push
mov
fdivr
out
fnstcw
mov
push
rol
outsb
dec
xor
add
push
mov
xor
es
push
leave
outsl
data16
fcoml
mov
xchg
repz
pushf
bound
mov
xlat
mov
pop
inc
test
std
orb
mov
outsb
aad
outsl
test
mov
mov
aad
sbb
insl
and
shrl
cmp
inc
cmp
loop
push
push
mov
sbb
xor
or
push
push
ja
pop
pop
test
mov
loope
add
test
testb
sub
int3
out
movsl
inc
cmp
xchg
and
popf
popf
in
cld
out
das
add
shr
enter
pop
sub
adcl
lret
je
std
xchg
add
lret
ret
cs
lcall
es
gs
mov
int3
stc
dec
jmp
add
xchg
pop
pusha
test
xchg
je
test
dec
loope
cli
jae
test
mov
loopne
mov
mov
in
cltd
aas
sar
fdivl
xor
mov
ud1
mov
mov
rcrl
pop
stos
shl
sub
adc
je
je
les
inc
fwait
dec
cmp
call
mov
mov
in
je
inc
jno
movsb
xor
mov
jb
mov
cmp
add
out
ja
enter
shll
xor
jns
xchg
js
xchg
into
cmpsl
icebp
jle
pushf
or
mov
mov
xlat
xor
fcompl
inc
mov
push
xchg
lods
rorb
pushf
jp
js
dec
xchg
xchg
or
cmp
cmpsl
int
mov
int
push
jge
add
cld
lret
cmp
lea
test
pop
lcall
jmp
mov
push
xor
lahf
jle
in
dec
xchg
xchg
cli
inc
mov
lds
xlat
and
stc
xchg
lret
adc
dec
push
filds
cmp
sub
ja
cmp
inc
cli
mov
and
and
test
jo
and
dec
in
out
in
and
fcoml
mov
fstl
xor
push
sbb
mov
stos
fists
hlt
scas
jge
mov
je
pop
mov
cmc
mov
jo
jecxz
dec
sub
insb
mov
xchg
and
mov
dec
adc
mov
mov
push
push
pop
incb
loop
xor
iret
out
pushf
mov
xchg
fistps
cwtl
in
mov
dec
shlb
pop
pop
dec
addr16
mov
ret
adc
adc
ja
lahf
adc
in
outsb
sbb
in
ja
orb
cld
jl
sub
mov
icebp
test
add
push
xchg
aad
aaa
mov
decl
and
pop
cmp
or
daa
test
mov
mov
bound
sbb
pop
dec
sbbb
icebp
in
aad
ja
jle
sbbl
movsl
xlat
xor
xchg
incl
mov
stos
xchg
rol
pop
mov
pop
jo
mov
or
je
xchg
push
and
mov
lds
dec
aad
cltd
or
add
ret
or
movsb
adc
lods
inc
mov
mov
je
xchg
jecxz
sti
lret
sub
std
xchg
lret
or
test
ss
push
push
and
ret
mov
push
jnp
hlt
insl
leave
rorl
fsubrl
testb
or
fwait
adc
cltd
mov
sub
int
imul
iret
cmpsb
call
push
inc
or
push
xor
outsb
nop
mov
mov
xor
push
cli
jecxz
jmp
clc
mov
mov
add
or
sar
sbb
jp
mov
or
icebp
fimuls
mov
xorb
repnz
pushf
cmp
mov
out
fwait
sbb
sti
clc
repz
and
ljmp
mov
fldt
int
dec
call
cld
cmpsb
sahf
mov
lock
or
loopne
xchg
pop
add
loopne
fildll
aad
fnstenv
pop
aam
sbb
andb
cmpsl
dec
inc
test
aas
or
bsr
insb
arpl
push
sub
out
cmpsl
sarl
cmp
ret
mov
enter
fnsave
imull
mov
push
mov
inc
cmc
xchg
fyl2xp1
pop
sub
sub
int
lcall
pop
pop
and
aas
out
xchg
push
adc
stc
and
or
and
pop
and
ja
jg
cmp
inc
int3
ret
lcall
stos
icebp
sahf
vpshufhw
and
mov
pop
sub
in
nop
adc
sbb
lret
xchg
pop
and
and
mov
ja
out
mov
cmp
and
das
ret
jne
inc
xchg
jl
ljmp
jmp
int3
cltd
pop
dec
mov
and
fs
movsl
mov
arpl
xor
push
sahf
in
pop
shll
xchg
in
add
hlt
insb
xlat
imul
jecxz
bound
mov
lods
mov
cmp
popa
cmp
daa
pushf
out
ljmp
cmp
mov
xchg
fsts
cli
sub
ror
shr
stc
inc
adc
fcomps
push
mov
movsl
js
mov
push
jle
add
jne
pop
pop
aad
mov
xchg
into
push
push
std
sub
fwait
mov
outsb
push
subl
or
mov
and
popf
scas
add
push
pop
cmp
mov
or
and
push
test
scas
lea
mov
sub
repnz
cmpsb
or
stos
adc
xor
dec
lods
andb
ror
popf
mov
je
and
lds
loopne
lods
pop
xchg
mov
out
xchg
and
stc
pop
andb
hlt
sbb
in
xchg
dec
and
std
xor
cmp
into
mov
subb
and
adc
test
or
aas
inc
fildll
jmp
or
call
inc
mov
loopne
add
push
mov
jl
inc
cs
sbb
js
push
or
lret
jle
xchg
cs
sbb
push
cmp
xchg
mov
in
pop
lods
dec
lcall
add
and
in
jbe
xchg
pusha
mov
sbb
mov
sub
sbb
sarl
push
insb
dec
test
in
psrlq
cmp
and
pop
lock
dec
and
xor
test
cli
mov
pop
test
rolb
subb
loopne
ret
loop
movl
test
je
pop
pop
dec
xor
lret
idivl
mov
push
mov
push
mov
mov
sbb
movsb
cmc
into
inc
adc
adc
adc
lea
sbb
jecxz
cli
mov
mov
fwait
xor
xchg
mov
xlat
xor
jae
stos
cwtl
and
push
test
sub
jmp
in
cmpsb
clc
jo
out
mov
sbb
adc
jno
cmp
xor
out
shll
xchg
xchg
insb
inc
mov
sbb
jecxz
jo
mov
mov
mov
mov
test
das
and
xchg
add
or
mov
adc
je
add
and
pop
cmpl
icebp
nop
cmp
std
scas
stc
and
dec
adc
xor
xorb
sbb
inc
inc
xchg
loop
andl
push
xchg
flds
add
sbb
mov
push
xor
pop
movsb
lret
ja
out
add
ret
cmp
loopne
sub
jns
cmp
mov
or
mov
xchg
jno
sbbl
ret
jmp
fsts
push
inc
ds
inc
fndisi(8087
test
in
pop
add
mov
scas
adc
repnz
movsl
adc
dec
enter
jbe
jnp
popa
mov
pop
and
leave
mov
into
iret
inc
and
cmp
lcall
xor
insl
mov
ret
mov
xchg
cmp
pop
xchg
pop
inc
jge
arpl
xor
cmc
out
icebp
fdiv
cmp
loop
push
adc
shr
and
popf
adc
mov
sub
loopne
daa
sub
sti
jno
pop
add
mov
ret
js
imul
push
xchg
stc
scas
or
lods
or
and
mov
xor
and
adc
aaa
xchg
mov
cs
mov
mov
scas
data16
or
inc
inc
push
jecxz
or
pushf
fndisi(8087
xor
dec
out
or
dec
dec
xlat
jp
dec
inc
movsl
incl
fwait
adc
cmpb
jae
xchg
and
jnp
aam
loop
in
lds
cltd
adc
mov
enter
push
loope
and
fidivrl
jmp
cmp
scas
or
test
sbb
stos
push
adc
movsb
mov
fstl
popa
mov
dec
cmp
lock
sbb
js
sahf
out
mov
fistpl
daa
pop
and
xchg
xor
sbb
mov
outsl
xchg
mov
or
test
test
push
add
add
je
jmp
ss
pop
bound
decb
lock
popf
mov
lret
fwait
stc
mov
out
bnd
unpckhps
and
sti
xor
iret
cmpsb
adc
and
subb
pop
pusha
mov
daa
nop
xor
sbb
arpl
fsubrl
mov
dec
ret
ret
dec
mov
cltd
xchg
sbb
scas
cmpsl
sbb
arpl
sbbl
mov
imul
movsb
out
insl
je
mov
add
stos
lret
adc
shlb
fldcw
andl
daa
pop
out
xchg
imul
add
stc
aad
xchg
sub
test
and
mov
adc
adc
mov
fadds
xor
ret
std
insl
xor
adc
arpl
aad
push
jecxz
imul
fmull
les
mov
cmpsl
fstps
adc
jg
mov
push
loopne
in
dec
rcll
nop
pop
pop
lods
jns
xor
push
cltd
dec
and
adc
dec
pop
in
cmpsl
xchg
cmp
fdiv
daa
es
stc
lret
cmp
ljmp
das
inc
push
clc
pop
lds
imul
xor
loopne
movsb
das
pusha
pop
das
jbe
test
inc
pop
mov
pop
mov
mov
lret
mov
inc
cmp
outsl
std
aam
adc
fucom
ss
idiv
enter
popa
scas
dec
or
add
sub
xor
test
sbb
ss
add
dec
aam
cmp
ret
inc
fiadds
push
sub
pop
int
ljmp
pop
lock
scas
lret
js
dec
xchg
adc
pop
mov
xchg
ret
dec
in
leave
and
mov
or
sbb
dec
movsl
cmp
loop
xchg
adcl
cmp
add
sbb
test
inc
add
stc
loope
cmp
in
and
daa
in
fs
fsubl
lret
pop
loopne
bound
cld
repz
mov
rcrl
int3
ret
mov
jo
dec
sahf
mov
xor
test
in
or
je
shr
mov
outsl
jns
add
in
mov
fadds
pop
pop
subl
mov
inc
scas
inc
mov
sbb
adc
xor
and
cmp
test
repz
jecxz
loop
loopne
push
xchg
dec
stc
or
and
inc
and
lahf
jmp
or
jl
ss
push
leave
inc
mov
cmpsb
jbe
jae
and
add
cwtl
int3
sbb
test
lret
sbb
mov
add
lods
jle
add
inc
cmp
add
adc
adc
adc
jge
lods
add
push
out
pop
add
inc
push
jbe
jp
push
into
mov
fwait
jmp
push
dec
dec
sti
lahf
mov
divl
dec
pop
ss
jbe
fld
pop
in
es
and
into
popf
sbb
mov
inc
addr16
jne
pop
inc
sbb
push
mov
jg
inc
call
add
pop
jbe
inc
cli
mov
dec
fldcw
push
dec
scas
aad
mov
push
popf
xchg
je
cmp
pop
repz
add
cs
loop
es
and
pop
mov
aaa
in
xchg
jp
mov
xor
notl
neg
xchg
outsb
loopne
mov
xor
in
imul
mov
mov
ret
out
stos
dec
pop
mov
sahf
addr16
xchg
loop
lds
out
push
mov
add
test
jecxz
dec
dec
cmp
mov
out
aas
xor
sub
outsl
xchg
outsb
cmp
xchg
rcrb
dec
pop
mov
je
xchg
jne
jl
imulb
inc
jp
testl
pop
mov
or
xchg
jno
test
pop
outsb
pop
push
and
data16
mov
stos
into
xchg
mov
adc
adc
pushf
scas
dec
xchg
dec
mov
cmp
push
lods
and
pop
rcll
cmpsb
iret
dec
ss
repz
mov
inc
mov
shll
outsb
sti
ret
push
add
mov
mov
and
fwait
sbb
fstpt
movsl
fnstcw
ret
adc
push
xchg
sbb
std
jp
popf
xchg
int
mov
out
push
sti
push
mov
ja
cmpsl
jb
lret
data16
fsubrl
mov
aam
pop
add
mov
push
cmpsl
iret
dec
rolb
lock
cmpsl
cwtl
xchg
out
xor
jo
or
mov
enter
leave
cmp
fbld
jp
mov
subl
bnd
pop
loop
fisubl
fdivrs
pusha
outsl
mov
lea
popa
dec
clc
ds
pop
in
cli
lret
ss
pminub
jns
les
sahf
repz
mov
stos
roll
stc
lret
test
add
mov
cmp
or
mov
xor
fst
outsb
xchg
int
lea
lcall
inc
xchg
lea
popa
jge
fsubs
pop
mov
jp
sbb
push
jg
mov
mov
and
scas
sbb
or
stc
movsb
inc
jge
mov
cli
in
jl
pop
push
sub
xor
and
push
roll
pop
dec
int3
add
mov
cmp
adc
dec
rorl
push
and
popa
inc
push
enter
and
xor
sbb
xor
loop
add
mov
fcmove
add
jg
lods
mov
pop
xor
xor
scas
in
aaa
cmp
aam
ja
test
xor
add
push
cmc
out
jne
jb
inc
xchg
imul
movsb
out
adc
xchg
adc
das
mov
addr16
gs
xor
imul
iret
cmc
cmp
lock
aaa
mov
inc
add
out
jne
pop
fcmovnu
sahf
jno
adc
dec
int
roll
mov
subl
jg
sub
xor
shll
mov
add
xchg
ss
push
mov
roll
in
add
in
rcrb
nop
xor
push
mov
mov
push
insb
xchg
cmpsb
add
aad
adc
mov
xorb
push
sbb
loope
test
in
or
das
and
mov
insb
jge
lods
out
clc
mov
sub
fs
push
adc
mov
call
mov
mov
cmp
jnp
ss
push
adc
mov
sbb
mov
in
sbb
cwtl
repnz
and
shl
ficomps
outsb
dec
sbb
call
dec
cli
ret
push
je
pop
xchg
pop
ss
fwait
in
xchg
jle
mov
pop
jge
neg
lcall
lock
dec
inc
lods
mov
shll
or
sub
or
ja
adc
mov
or
addr16
addr16
mov
lcall
or
jo
jb
push
lds
divb
jno
cmp
sbb
stc
cltd
fisttpl
push
cmp
mov
ret
test
jp
sbb
std
dec
ror
sbb
stos
push
xor
sbb
sbb
aas
repnz
inc
negl
iret
mov
fisubrs
das
and
lret
fcomps
lods
gs
xchg
adc
or
or
mov
sbbl
xor
mov
dec
aam
fldl
mov
addl
out
imul
xchg
or
lds
loopne
pop
dec
lds
cmp
sbb
loopne
iret
in
inc
loope
ljmp
pushf
dec
pop
cwtl
sub
das
xor
ret
mov
sub
decb
pop
out
mov
mov
cmovbe
cmp
mov
mov
scas
jmp
je
addr16
or
mov
sbb
dec
ficoms
mov
dec
mov
xchg
hlt
cmp
pop
fcmove
aad
jl
adc
fidivs
mov
jo
fimuls
notl
addl
adc
scas
jo
cmp
xlat
js
fstl
icebp
call
push
das
sbb
ficoms
cli
jb
imulb
ss
jnp
jle
or
gs
push
ds
or
jae
pop
iret
jb
xchg
adc
hlt
das
movb
xor
lret
xchg
add
loop
dec
push
cli
test
mov
mov
ds
inc
call
leave
in
jns
ljmp
jne
out
push
mov
scas
fildl
dec
aaa
mov
xchg
bnd
pop
stc
add
bound
ds
jmp
pop
outsb
pop
pop
jns
movsb
insb
add
cmpsl
mov
mov
test
xchg
aas
pop
movsb
popf
icebp
pop
std
stos
cmp
aaa
pop
xchg
movsl
stc
cmp
inc
fadd
mov
and
cltd
rcr
out
pushf
jno
sub
clc
sbb
jecxz
stos
mov
sbb
adc
push
and
mov
fstpt
cmpsl
leave
scas
outsb
pop
mov
push
dec
mov
ljmp
repz
xor
xor
jno
aaa
sub
sub
push
ss
addr16
mov
aas
es
xchg
cmc
fs
sbb
out
in
fdivs
adc
jge
pop
lcall
add
movsb
xorb
popa
inc
mov
sbb
push
or
mov
outsl
leave
call
add
imul
push
or
cli
sbb
lret
push
mov
das
mov
adc
mov
out
inc
fwait
xchg
xor
fwait
sub
out
sbb
jbe
mov
inc
adc
add
out
push
std
sbb
js
inc
adc
pop
mov
bound
stos
fxch
lods
fs
int3
add
rcll
imul
cltd
leave
repnz
mov
cli
ret
insb
or
xor
jne
sbb
lds
or
add
adc
pusha
cmpsb
movsb
cmp
push
es
ja
jle
ljmp
imul
out
mov
adc
ljmp
add
mov
push
in
xchg
jg
rcll
negl
stc
mov
push
jns
push
push
mov
rolb
loop
out
out
out
jb
in
repz
testb
lahf
loop
push
jne
iret
dec
push
loop
push
pop
push
adc
sub
or
test
cmp
imul
pushf
xchg
test
ret
or
mov
out
jp
add
and
push
adc
roll
lock
je
xor
mov
fisttps
xor
mov
and
fnstenv
testb
movsl
dec
dec
mov
push
sbb
xlat
cmp
mov
icebp
aas
test
sbb
jne
imul
cmp
sub
hlt
test
hlt
sub
mov
adc
mov
cmp
and
mov
popw
mov
rorb
sbb
movsl
mov
inc
jae
add
cwtl
cld
xchg
test
push
ja
push
or
mov
aas
mov
mov
mov
xchg
inc
pop
mov
fs
fwait
jg
cmp
jmp
out
push
pop
andl
xchg
push
pop
jnp
jle
aam
push
dec
xor
and
pop
outsl
xchg
jg
xor
out
lret
addb
fists
sub
dec
push
mov
push
adc
mov
mov
scas
aam
imul
shl
lea
dec
inc
inc
jg
sbb
cli
nop
pop
insl
adc
push
mov
add
lahf
cltd
outsb
ficoms
lret
dec
sbb
or
sar
mov
push
hlt
or
fs
push
iret
mov
fidivs
outsb
xchg
outsl
mov
cmp
cmc
enter
jno
mov
ja
loopne
aaa
roll
pop
sbb
and
enter
sti
sti
ss
inc
xor
mov
add
inc
dec
bound
es
dec
jns
or
ds
adc
shlb
sbb
test
push
stos
cli
daa
sti
add
in
shrl
into
cmp
jl
push
push
mov
test
pop
push
js
aad
mov
xchg
jnp
mov
add
leave
jbe
mov
xchg
fxch
int
fildll
or
into
in
js
outsl
inc
cmc
mov
jb
xchg
popa
xchg
popl
and
sub
fs
mov
das
dec
cwtl
fisttps
cmpsb
push
inc
push
daa
pop
add
loopne
fidivrl
lahf
test
lret
cltd
pop
bound
xchg
pop
sub
mov
adc
inc
ret
mov
in
jnp
jmp
pushf
xchg
or
out
inc
es
mov
jne
mov
push
sbb
out
insl
pop
cwtl
cmp
icebp
pusha
fs
or
lock
mov
in
xor
bound
daa
pop
mov
add
ljmp
daa
test
mov
mov
xchg
lret
cmp
stc
pop
cmp
jp
adc
mov
emms
lods
jge
test
int
rol
pop
scas
int3
inc
push
or
mov
cs
incb
cmc
repz
pop
divb
adc
mov
lock
andl
mov
xor
cmp
xchg
sub
cli
xlat
enter
or
out
popa
clc
or
sbb
push
mov
mull
xlat
push
xor
adc
ds
cmp
outsb
stc
jp
add
xor
mov
push
push
pop
xor
sub
xchg
jnp
loope
mov
je
inc
cmp
cltd
jno
or
or
gs
aam
in
and
push
shl
lcall
iret
ret
out
lock
imul
in
dec
outsb
in
jecxz
pop
js
stc
push
mov
dec
push
add
out
rcl
hlt
jae
mov
sub
ja
pop
lret
jmp
jg
sbb
pop
out
cmpb
add
cmp
ret
jecxz
roll
cld
dec
inc
cs
jno
arpl
jbe
lods
or
mov
orl
xor
and
or
jecxz
dec
jecxz
aas
test
fisttpl
sub
loop
imul
add
push
pushf
mov
fldl
add
xchg
subb
fldenv
hlt
cwtl
xor
xlat
in
jg
call
icebp
imulb
xchg
pop
and
sti
fdivl
xor
xchg
dec
sbbb
dec
inc
stos
sahf
dec
and
cs
movsb
xor
sbb
je
mov
dec
xchg
cli
enter
xor
das
add
xchg
dec
jae
imul
cld
clc
mov
int3
jp
scas
out
fldenv
sbb
addl
sbb
imul
ret
xor
cmpb
lcall
iret
push
mov
jl
ja
je
push
aad
sahf
mov
sbb
pop
mov
add
xor
mov
inc
jne
movsb
pop
lods
push
fs
add
push
lock
iret
xchg
mov
xor
dec
xchg
jle
leave
pop
or
into
nop
cwtl
test
dec
pop
ja
lret
dec
jae
pop
mov
stos
lahf
add
jmp
movsl
mov
cmpl
sub
icebp
lods
les
push
in
inc
je
lods
mov
stc
jmp
pop
aas
jne
shlb
out
push
jnp
scas
jmp
aad
mov
test
cli
add
add
sub
pop
sbb
mov
testl
ljmp
lods
lods
xor
and
mov
push
rcrb
adcb
hlt
and
push
subl
hlt
lahf
cmp
flds
mov
jo
xor
push
add
pusha
mov
xchg
pushf
pop
cmp
ljmp
popf
mov
pop
pop
or
mov
mov
mov
cmp
lods
and
adc
in
inc
fidivrl
std
cmpsl
mov
stos
inc
mov
and
push
add
scas
add
mov
jne
or
or
add
adc
jp
push
loop
dec
push
fistpl
xchg
sbb
inc
lods
xchg
rcr
add
xchg
ret
or
xchg
movsl
in
bound
int
popf
pop
jbe
test
lcall
insl
push
lret
fsubl
mov
mov
stos
cwtl
lcall
xchg
push
push
push
fadd
fcoms
xlat
addr16
sub
into
or
clc
xchg
cmpl
push
lods
sub
mov
aaa
dec
subl
iret
and
mov
ljmp
std
xchg
icebp
and
and
pop
and
add
out
nop
jae
outsl
jo
dec
subl
cmp
xor
hlt
ja
jne
xchg
xchg
rorl
or
fldenv
test
shlb
pop
clc
mov
insl
roll
gs
xor
data16
dec
sub
aam
xchg
lcall
mov
sub
aaa
adc
and
jnp
inc
pop
mov
and
sub
xchg
sub
test
sbb
add
cmp
sub
mov
jp
push
sub
test
mov
jge
dec
in
int3
fndisi(8087
bound
push
out
decb
into
sub
cmpsb
test
xchg
stos
repz
or
clc
cwtl
push
sub
enter
ret
ds
idiv
cmp
lret
int3
aaa
sub
or
fisttpl
aad
push
inc
add
push
pop
out
repnz
pop
add
inc
mov
mov
inc
insb
mov
fwait
mov
loop
test
inc
enter
das
jno
sarl
pop
mov
pop
call
ljmp
out
cld
clc
adc
cmpsl
xchg
decb
in
sbb
sbb
xchg
jno
cmp
outsb
lea
sub
push
mov
pusha
mov
enter
push
das
lods
shrl
dec
lcall
pop
dec
xchg
fimuls
cwtl
in
test
loopne
sbb
and
or
xchg
subl
pop
jle
cmpsl
mov
mov
dec
inc
in
mov
dec
mov
imulb
push
ror
xchg
cmc
movsb
ret
sti
aaa
xchg
test
mulb
mov
pop
arpl
fdivrs
push
mov
pop
adc
pop
or
xchg
and
push
mov
cmp
inc
inc
mov
ss
pop
ja
mov
sub
aam
sub
mov
jns
divb
add
aaa
and
or
aad
or
dec
mov
jp
or
ret
xchg
xor
sti
xchg
test
aaa
movsb
mov
out
add
mov
add
ja
movsb
aaa
clc
decl
fildll
push
jl
sbb
into
jle
fisttpl
inc
fcomi
inc
cli
sub
add
push
out
push
push
cli
aam
inc
dec
pushf
loop
pushf
jbe
outsb
aas
sbb
testb
in
repnz
int
ret
bswap
cmp
repnz
icebp
icebp
out
xlat
mov
sbb
jmp
neg
sub
mov
push
xor
mov
cmp
sbb
sbb
test
and
jns
jecxz
das
mov
add
scas
push
and
push
fisubl
or
jo
sub
inc
add
fsubl
insl
cmp
clc
jbe
jecxz
push
cmc
add
loope
dec
ret
stos
nop
jp
jns
sub
adc
jnp
shll
ret
aaa
int3
pop
jne
mov
sub
repz
jg
xchg
cmc
mov
lret
jl
jg
xor
push
fsubr
call
pop
mov
rcrb
js
test
push
ret
mov
sub
jge
test
dec
xchg
pop
ds
jl
xor
jb
addb
lods
shlb
mov
cmp
aam
push
inc
sbb
loopne
inc
xchg
jns
aaa
mov
mov
pop
mov
mov
jl
cld
jno
cmc
ljmp
jb
inc
push
cmp
sbb
aaa
pop
and
shll
push
mov
jne
or
lods
jno
lcall
out
sbb
xor
aad
sub
aad
add
sbb
mov
mov
addr16
das
sarb
push
mov
in
in
out
les
negb
push
in
imul
bound
mov
mov
shlb
subss
cmp
inc
addb
jecxz
mov
and
fisubrl
mov
push
add
insl
mov
movsl
cmp
mov
jno
js
ret
xor
pop
sub
in
dec
roll
stos
pop
cwtl
jecxz
cmpsl
loope
xchg
xchg
lret
fldl
bnd
je
ret
cltd
sub
rcrl
test
and
testb
loopne
pop
mov
xor
das
mov
push
xor
adc
ret
add
stos
xor
pop
xchg
jb
jmp
dec
sub
adc
insb
xchg
out
mov
jge
mov
fdivrs
xor
mov
call
fldenv
mov
repnz
jb
das
or
int3
stos
loop
add
addr16
add
lcall
mov
movsb
dec
mov
shll
cs
pop
xor
push
jge
jb
pop
sbbb
pop
lock
dec
dec
test
mov
or
inc
inc
xlat
push
out
ja
fnstcw
push
or
cmp
pop
xor
mov
in
add
gs
sbb
dec
jl
std
cmpsl
cmpsb
jp
hlt
sbb
mov
leave
fstps
stos
mov
or
decl
cmp
jo
dec
adc
test
lods
inc
idiv
outsl
xor
nop
cmp
mov
scas
ficoms
jg
mov
das
aaa
out
icebp
orl
stos
mov
add
sub
scas
fsubr
aas
jecxz
and
icebp
xchg
insl
cmp
pop
cli
xchg
ds
neg
aam
xor
push
out
jecxz
ljmp
jge
sub
es
popf
sub
test
iret
cbtw
pop
std
adc
ret
pop
mov
push
push
pop
sbb
mov
shrl
mov
pop
movl
icebp
inc
hlt
jns
pop
mov
mov
je
fidivl
fdivrl
xchg
jecxz
lahf
in
or
push
in
cmp
dec
mov
jo
mov
add
repz
fstpt
ret
pop
cltd
inc
fistpll
lret
rcl
push
add
daa
or
mov
and
cmc
rorb
sub
scas
enter
lods
xchg
andl
sub
shrb
in
mov
arpl
pop
loopne
jae
movsb
lock
enter
std
mov
repz
cld
mov
inc
mull
pop
into
lock
cmp
repnz
shrb
pop
jge
xchg
jmp
mov
lock
cmp
outsb
inc
push
mov
ret
rcl
loopne
mov
mov
sub
jb
or
sub
xchg
push
or
mov
and
xchg
inc
xor
popa
mov
or
add
add
mov
mov
lods
mov
shll
inc
xlat
movsl
jnp
mov
icebp
aaa
xor
cmp
daa
jb
cmp
int
or
or
add
and
xchg
xlat
mov
pusha
xor
mov
stc
clc
add
test
cmp
sbb
sarl
scas
lea
aam
push
movsb
pop
imul
sbb
scas
xor
jnp
movsb
inc
mov
xor
rol
and
mov
mov
mov
push
movsl
mov
dec
in
lea
dec
bound
outsl
lcall
fisubrs
cwtl
sbb
in
mov
jb
inc
rol
test
mov
out
sub
scas
and
dec
adc
push
das
mov
aaa
fst
js
daa
data16
or
or
or
add
inc
jo
inc
adc
mov
push
and
daa
push
xchg
push
and
jno
mov
aas
xor
adc
icebp
movsl
clc
scas
push
jnp
stos
fldl
xor
jae
mov
jnp
enter
jg
and
fdivl
inc
insb
push
and
out
push
mov
sahf
mov
out
sub
adc
mov
pushf
push
inc
mov
call
movsl
bound
outsl
aam
push
imul
lea
sti
xor
push
arpl
jle
mov
aaa
inc
ljmp
adc
mov
ja
lds
jo
mov
test
xor
ds
idiv
lds
jg
cmp
iret
rol
and
aam
or
inc
jnp
or
mov
pop
adc
leave
add
sbb
popa
cmp
repz
dec
into
fsts
addl
shrl
fisubl
xchg
and
cli
and
or
pop
jmp
lods
xchg
push
lret
lahf
popa
les
vmaxpd
cmp
fcom
data16
out
mov
stos
addr16
dec
mov
sub
icebp
shll
and
insb
divb
cs
pop
sbb
into
daa
gs
sub
aas
nop
cld
fs
ja
cmp
jnp,pt
and
sub
xor
and
or
add
insb
int
add
pop
sar
and
fsubl
outsl
add
outsl
sub
sub
dec
sub
sti
loopne
xchg
fildll
adc
xor
ss
mov
add
sahf
or
jne
mov
out
fmuls
mov
jmp
les
test
out
sti
sub
xlat
mov
lds
rclb
push
mov
mov
cmp
int
sbb
out
mov
fcoml
xchg
dec
or
push
std
jg
out
jle
out
or
popa
leave
sub
jo
fs
push
push
stc
mov
in
jns
adc
leave
cli
push
pusha
push
iret
test
jl
push
mov
fcoml
or
lret
sbb
pop
dec
lea
lret
inc
pop
cmp
mov
lea
lds
and
pop
pop
push
xchg
fistpll
jg
in
xor
aaa
push
pop
dec
or
in
add
sbb
sub
loope
dec
enter
sub
rol
push
xchg
outsl
or
jg
mov
adc
mov
ret
push
pop
xor
flds
xchg
fadd
mov
cmp
mov
mov
or
xor
test
sub
jmp
sub
push
lea
ja
jo
and
loope
mov
sbb
cmp
in
inc
clc
mov
or
add
aad
cli
jno
fiaddl
sub
ret
cmc
repnz
mov
scas
stc
cmp
jg
mov
cwtl
outsl
das
fsubrl
js
lret
dec
or
rclb
int
push
mov
mov
popa
fxch
adc
gs
sbb
ret
outsb
adc
add
pop
repnz
sbb
out
add
mov
add
inc
lahf
xchg
pop
loope
adc
imul
xchg
push
adc
int
shl
push
testb
sbb
mov
test
lahf
outsb
daa
dec
fwait
ljmp
dec
jne
mov
xlat
pop
or
stos
jbe
vpsraw
rclb
nop
mov
scas
cmp
push
xchg
fidivl
stos
pop
adc
xor
xchg
test
repz
sbb
ja
push
ds
cmp
push
push
add
xor
jbe
loope
movlps
das
dec
sbb
fcomp
sub
mov
testl
mov
std
mov
dec
sub
inc
sub
adc
int3
in
lea
fdivrs
dec
imul
xchg
cld
hlt
push
xor
adc
loopne
mov
jnp
mov
add
dec
mov
lret
into
dec
push
and
mov
out
jecxz
jmp
add
pop
fwait
loop
movsb
cmp
inc
adc
jl
cmp
push
push
mov
push
test
or
mov
adc
insb
fldt
ret
movsb
xor
jge
add
add
iret
adc
xchg
idivl
pop
pop
push
shll
add
mov
inc
xor
xor
imul
mov
test
sub
pop
push
pop
and
mov
inc
fistpll
stos
mov
lods
push
mov
inc
ja
cmpsl
push
notb
popa
lods
cmp
pop
mov
enter
cld
in
pop
cmp
or
movsb
movsl
lret
xchg
dec
adc
loopne
add
jae
movsb
mov
mov
mov
adcb
shrb
pop
repnz
xchg
in
cwtl
xor
sub
adc
rclb
in
loopne
stos
fcomip
lret
es
push
mov
aaa
cltd
xchg
xchg
fs
push
hlt
mov
pop
jecxz
stos
andl
jno
hlt
xor
push
in
inc
adc
sbb
lcall
pushw
mov
and
arpl
iret
xchg
push
mulb
divl
xor
add
push
jnp
xchg
mov
in
je
test
and
xchg
jne
lods
mov
aas
mov
idivb
lcall
testb
jnp
inc
and
loopne
pop
daa
inc
cmp
rolb
fdivl
cwtl
pop
inc
scas
ror
add
jb
cmp
sub
jbe
arpl
loope
fwait
lahf
fisubrl
jbe
add
jbe
xchg
fs
xor
lahf
mov
shlb
xchg
xchg
jns
aaa
sub
mov
ss
mov
cmp
not
pop
cmpsl
data16
mov
xor
xchg
dec
adc
into
lret
add
sbb
inc
hlt
movsb
or
aaa
hlt
popl
int
pop
mov
and
pop
mov
scas
or
mov
pop
inc
in
shrb
incl
lock
fwait
cmpl
stc
dec
movsl
mov
aas
repnz
aas
je
push
iret
jns
lds
or
add
jle
inc
in
or
pop
cmp
adcl
je
les
or
ds
push
xorb
sub
lcall
lock
pop
lock
lock
les
push
xchg
xchg
mov
int
xchg
inc
rclb
imul
xor
movsl
popf
shrl
add
outsl
cld
call
mov
fldcw
fstps
aas
or
mov
sarl
cmp
pop
add
fsubrl
imul
ja
shlb
cmpsb
out
hlt
iret
adc
pop
sbb
xchg
inc
js
jecxz
divb
jmp
cmp
cmp
andl
and
nop
ret
push
xchg
mov
and
adc
jp
adc
dec
mov
std
icebp
lahf
dec
stc
mov
push
test
loop
sbb
jb
orl
cmc
inc
enter
pop
call
add
clc
in
xchg
inc
out
loop
clc
fdivrs
int3
xchg
mov
test
cmp
mov
icebp
cmp
cltd
fldt
sub
sub
outsb
pop
mov
jns
xchg
pushf
cmp
xor
orl
cmp
sti
mov
cmp
dec
call
ljmp
xor
aad
xchg
das
in
dec
jp
test
shrb
cmp
rcl
pusha
sarl
sar
imul
adc
test
movsb
aaa
movsl
insb
mov
movups
dec
cmpsl
lods
mov
cld
hlt
test
push
mov
mov
inc
dec
mov
and
mov
xchg
dec
cld
dec
or
fsts
pusha
pop
shll
out
adc
loope
in
xchg
sub
add
in
inc
push
mov
repnz
ret
adc
andl
rorl
lods
pop
push
mov
mov
lret
dec
testl
xor
inc
cmp
js
push
mov
jecxz
pop
scas
mov
pop
ja
sbb
lcall
sbb
push
movsb
push
jg
ss
cmp
fdivrl
mov
xor
add
frstor
xor
mov
push
jae
sbb
popl
xor
cmpsl
adc
jge
push
jae
jnp
lea
mov
imull
add
loop
mov
repnz
popa
stos
test
push
orb
lret
aaa
pushf
rclb
les
xchg
sub
mov
adc
jecxz
sub
das
iret
movsb
push
arpl
jecxz
stos
add
js
push
dec
jnp
sub
jge
push
jmp
test
inc
sbb
cld
fsubl
xchg
pop
loopne
nop
mov
pop
or
aad
rorl
pop
data16
cltd
and
adc
lahf
ret
inc
je
jnp
cmp
cmp
pop
mov
and
mov
mov
nop
rcll
sti
ret
jns
xor
clc
and
leave
cmpl
mov
into
sbb
jae
in
push
int
icebp
lcall
pop
arpl
rorb
pop
adc
popa
fsubs
add
mov
lods
pop
arpl
sbb
dec
lahf
test
xorl
or
jg
adc
les
jnp
jge
or
mov
mov
out
out
cmpl
cwtl
clc
push
aas
dec
or
imul
fisubl
xchg
push
pop
lcall
cmpsl
xchg
or
pop
inc
bound
inc
cmp
mull
outsl
sbb
cmc
xchg
fwait
or
stos
push
fidivl
jnp
dec
outsb
inc
stos
arpl
cmc
divb
sbb
das
xchg
cltd
cmp
orb
cmp
fmuls
ljmp
inc
loope
out
add
xchg
dec
in
mov
outsb
leave
xor
les
insb
jno
mov
push
aas
sub
test
jno
rclb
fstpl
push
and
mov
in
sub
daa
xchg
push
outsl
fs
lcall
scas
jmp
addl
pop
pop
ret
shrl
hlt
adc
adc
push
lods
cmp
gs
stos
push
frstor
or
std
mov
mov
xlat
clc
cwtl
loop
add
scas
stc
imull
inc
pop
insl
sbb
jecxz
je
out
cmp
int
fidivrl
loop
shlb
adc
leave
sub
fisttpl
nop
inc
std
push
mov
jne
xchg
dec
push
mov
mov
mov
xchg
xor
mov
popa
inc
stc
dec
xor
loopne
add
mov
into
fcompl
inc
out
aas
std
rorb
sbb
rcl
lcall
fistps
fisttps
adc
enter
cmp
lahf
jmp
xchg
xchg
clc
mov
or
lock
pushf
fbstp
push
pop
arpl
xor
shll
mov
mov
ja
pop
lods
xor
xor
adc
push
add
add
or
stos
mov
mull
sub
testb
sub
out
sbb
jno
mov
aam
mov
pop
pushf
adc
mov
or
push
stos
mov
sub
out
push
imul
xchg
or
mov
add
xchg
inc
sbb
inc
fs
lret
pop
sbb
rol
gs
push
pop
adc
fistl
out
jecxz
push
mov
mov
shrb
adc
adc
rol
pop
push
shll
xchg
xchg
mov
jl
stos
negb
sahf
sub
out
cmp
jg
inc
out
dec
jnp
sbb
jle
ja
mov
data16
adc
inc
jae
shl
loope
stc
les
push
xor
std
aad
je
cmpsb
stos
sbb
dec
xchg
xchg
sbb
push
jne
outsb
mov
pop
mov
movsl
pop
aam
ljmp
inc
js
int
xor
mov
inc
dec
repnz
mov
dec
jl
inc
jb
loope
mov
iret
sbb
add
sbb
or
mov
call
pop
shrl
or
enter
je
cmpsl
in
mov
sahf
xchg
jp
pop
pop
sbb
inc
repz
jb
movl
lret
cmpsl
inc
dec
in
and
and
jne
xlat
push
or
mov
js
cwtl
push
pop
repz
push
add
and
incb
push
mov
popa
fsubs
ret
mov
mov
cli
addr16
pop
push
sub
jae
fucomip
call
jg,pn
pop
fisttpl
and
les
adc
inc
mov
or
mov
or
mov
lods
inc
nop
js
decb
cld
stc
loop
add
inc
lods
add
xchg
mov
cmp
cmp
fs
pushf
test
cmpsl
cli
leave
add
push
int
inc
xchg
cwtl
stos
xor
xchg
jp
dec
pop
mov
rolb
std
and
iret
fwait
scas
dec
jle
iret
mov
pop
xor
sbb
mov
mov
jmp
cltd
js
add
cld
ss
dec
add
into
cltd
pop
outsl
push
pop
inc
clc
cltd
cmp
loopne
adc
sahf
shll
dec
inc
fs
int
xor
int
lret
push
stc
jne
cmp
out
xlat
sahf
inc
xor
call
pop
fsubs
ds
mov
sub
sub
sbb
or
sbb
mov
dec
pusha
clc
pop
pusha
cld
inc
jae
pop
mov
fsubrs
mov
pusha
movsb
inc
repz
pop
xchg
mov
test
jo
jecxz
mov
cltd
cmp
enter
movsl
shlb
shll
or
mov
cmp
lock
sub
pop
dec
add
push
repnz
lcall
mov
inc
and
or
fnstenv
sbb
jbe
mov
pop
and
repz
inc
pop
sub
out
shlb
shll
and
sti
repz
sbb
es
hlt
popa
loop
push
mov
mov
insb
mov
stc
nop
jle
nop
xor
adc
cli
pop
test
add
cmp
sub
cmpsl
mov
fiaddl
pop
andl
push
std
sbb
nop
mov
xor
mov
pop
fs
xlat
pop
scas
loopne
xor
mov
inc
fistl
xlat
aaa
mov
add
dec
cmpsb
lret
pop
jg
xor
rcll
or
fstps
fimuls
stos
arpl
ud1
loopne
xor
dec
out
sbb
int
lcall
add
jns
fs
ja,pn
push
imulb
cmp
clc
mov
inc
sbb
sub
ret
add
hlt
and
xor
xchg
data16
inc
ljmp
push
lcall
fisttpll
or
lods
jmp
int3
in
xchg
into
cmp
movsl
scas
pop
ljmp
pop
jae
ja
daa
loop
xor
sub
ja
push
pop
pushf
gs
rorl
mov
cmp
loope
jl
int
jns
call
test
mov
adc
xor
lea
sbb
adcl
sub
lods
ds
test
loope
sub
fcmovu
aaa
add
sbb
inc
mov
loope
jbe
lock
inc
popf
jnp
or
fstpt
mov
add
mov
mov
jp
ja
xchg
sti
sbb
pop
mov
subl
inc
mov
or
push
or
pop
and
add
mov
and
mov
push
and
xchg
xor
orb
pop
xor
push
sbb
lcall
sbb
popa
mov
xchg
jmp
mov
mov
push
xchg
mov
xor
inc
test
mov
out
adc
dec
cmp
leave
inc
es
xchg
add
jp
outsl
lods
mov
xchg
int3
or
movsl
enter
sarb
push
into
movsb
push
mov
sub
push
and
mov
push
push
je
cmpsb
xchg
and
cmpsb
rclb
mov
test
sbb
jo
push
aaa
and
and
pop
cmp
push
and
sub
jnp
rorb
repnz
jl
imul
int
sbb
mov
ljmp
dec
insl
mov
jnp
iret
clc
in
daa
fsubl
xor
cmc
adc
lods
mov
push
int
or
stos
testb
in
dec
mov
sub
pop
in
les
inc
xchg
fmuls
in
add
lock
testb
aad
xchg
sub
dec
cmp
das
sbb
into
outsl
pop
xor
test
dec
inc
ss
fsubrl
lea
cli
cmpb
dec
jnp
jne
aaa
hlt
in
cmc
fadds
xchg
adc
cmp
xor
cmp
mov
flds
xlat
mov
xor
ret
dec
hlt
cltd
ljmp
movsl
and
popf
xor
imul
sbb
jge
dec
imul
or
add
xor
in
push
insb
xor
into
add
adc
bound
aam
test
cs
and
addr16
sub
pop
sub
mov
xor
das
lahf
call
push
outsl
mov
fwait
shll
cltd
pusha
pushf
fdivr
rcl
out
push
jbe
ret
cs
lds
push
cld
mov
mov
push
leave
iret
or
dec
ja
lods
mov
stc
adc
dec
add
dec
or
imul
add
cmp
shl
lea
cwtl
sub
jmp
push
xor
dec
jecxz
lret
cmp
mov
jbe
insb
test
fdivs
or
jecxz
adc
lahf
pop
jno
mov
lahf
mov
faddl
loop
xchg
lahf
fwait
test
sti
add
clc
jbe
push
push
test
inc
int
push
add
movsb
mov
mov
mov
lods
mov
test
sbb
idivb
cmc
leave
push
pop
pop
mov
out
stc
pop
push
dec
jmp
repz
xchg
pusha
fldl
or
jl
pop
mov
les
cmc
adc
and
repz
mov
lahf
stos
lahf
and
dec
imul
mov
outsb
pushf
mov
pop
lods
xchg
mov
daa
dec
push
push
js
jno
mov
add
mov
jne
xor
jecxz
fidivs
sub
sbb
int3
test
test
sbb
cmp
pop
mov
lds
fadds
pop
and
incb
les
out
or
das
imul
inc
jne
std
adc
pop
mov
dec
pop
fimull
inc
sbb
cltd
or
jb
sbb
cli
pop
dec
xchg
xchg
nop
movsb
push
xor
rclb
jle
xchg
pusha
xor
sbb
mov
mov
sub
mov
movsb
mov
js
xchg
aam
jmp
xchg
in
pop
in
icebp
lods
movsb
mov
stc
mov
cmc
mov
mov
push
mov
lcall
test
push
adc
sahf
cs
out
aas
jle
xchg
fdecstp
add
out
cltd
jne
int
scas
mov
jae
cmp
adc
cwtl
add
stos
add
mov
loopne
mov
xchg
dec
xor
adc
es
test
sbb
pop
lahf
jmp
les
pop
cmpsl
or
jmp
sar
mov
pop
add
movsb
jg
add
push
dec
xor
lods
xchg
rorb
pop
xor
fldenv
sub
push
push
cli
movsb
les
insl
xlat
cmp
mov
lret
int
pusha
repz
add
cmp
dec
cmp
xor
stos
mov
clc
jg
mov
dec
pop
das
cmp
testl
mov
mov
aad
mov
sub
repnz
adc
ja
popa
jo
imul
mov
lahf
push
jl
addr16
push
gs
xor
adc
or
hlt
push
sahf
or
int3
lret
mov
mov
and
das
out
and
inc
scas
jecxz
mov
pushf
cmp
dec
cmp
shll
cmp
insl
push
imul
adc
pop
mov
iret
mov
lods
mov
or
inc
out
sub
shll
mov
and
fbstp
cmpsl
lret
lret
mov
iret
out
jl
sub
rcll
or
inc
stos
gs
imul
out
cmpsl
dec
fmuls
aaa
or
or
and
mov
subb
aam
out
sbb
pop
divb
std
push
mov
pop
jecxz
fstpl
cli
rcrl
pop
cmpsl
dec
je
fstpt
fwait
adc
int
popa
xchg
mov
rcrl
aam
cmp
sbb
pop
mov
cmpsb
enter
pusha
rorb
dec
cmp
add
pushf
xchg
jns
leave
ret
xor
mov
jne
iret
inc
out
pop
xchg
dec
add
dec
sbb
mov
or
add
xor
lds
and
pop
imul
lds
pop
cmp
adc
enter
inc
aas
mov
push
cld
dec
bound
mov
mov
xchg
cld
insb
sbb
outsl
notl
loopne
cmp
pusha
jecxz
push
fisttps
pop
dec
xor
movsl
or
das
es
and
push
pop
pop
cmp
mov
loope
cld
adc
xchg
adc
jo
aas
std
mov
mov
xor
jnp
cld
jmp
out
sarb
sbb
out
aam
or
fcomps
mov
mov
adc
ret
jmp
inc
add
sti
push
push
test
jns
dec
mov
jno
sub
mov
jae
cwtl
loope
test
mov
pop
pop
rolb
cwtl
insl
test
xor
nop
jp
lcall
mov
fdivs
or
mov
hlt
mov
sub
pop
or
lcall
lcall
push
cltd
loop
or
test
mov
div
pop
and
imulb
lods
into
sahf
or
xchg
call
fwait
pop
inc
mov
add
push
pop
sbbl
pop
pop
lcall
movsl
jp
mov
mov
sub
cmp
fdivs
mov
adc
jg
mov
stc
in
pop
dec
jecxz
cltd
jnp
jl
cmpsl
cld
mov
add
je
lock
dec
and
cmpsl
cmp
or
fldt
adc
push
sbb
sub
pop
mov
pop
out
or
aam
or
sub
jecxz
adc
loope
adc
fcoms
pop
std
pop
push
nopl
push
dec
movsl
fdivrs
loope
pop
mov
ret
sbb
adc
stos
lret
bound
adc
js
jb
pop
wbinvd
push
cmc
adc
push
xchg
push
mov
imul
sbb
enter
push
pushf
stos
lret
jl
or
and
andl
jecxz
xor
orl
mov
movsl
sub
pusha
mov
pop
incb
out
push
add
mov
movsb
push
adc
xchg
fstpt
movsb
jle
lods
sahf
jp
movsb
sbb
xor
adc
xchg
mov
shrl
lahf
jecxz
je
mov
pop
mov
push
and
mov
jge
lahf
inc
stos
or
je
and
xlat
outsl
dec
xchg
rclb
cs
int3
fdivrs
xchg
mov
pusha
int3
cld
adc
cmpsl
mov
push
pop
daa
mov
scas
cmpb
and
mov
adc
mov
mov
cmp
cmp
loopne
cld
repnz
popa
cmc
out
in
scas
lock
mov
push
sub
inc
ret
push
adc
test
dec
xchg
adc
je
mov
lods
sbb
mov
imul
cmp
mov
xor
imul
pushf
lods
sti
cmp
push
sbb
cmc
hlt
push
sbb
cs
imul
aaa
mov
dec
sar
and
xchg
mov
xchg
adcb
xor
sub
addr16
addr16
outsl
mov
add
mov
jge
mov
push
jecxz
fwait
cmpsl
push
lea
xor
sbb
test
mov
push
cli
pop
push
xorl
pop
test
fadd
dec
sbb
lock
jns
dec
mov
push
shlb
leave
or
daa
pop
mov
sub
ret
ss
mov
inc
adc
lods
lods
jmp
ds
test
fs
push
mov
and
xor
mov
add
fwait
sbb
xor
frstor
cmp
aaa
lahf
push
lods
inc
add
inc
push
and
xchg
xor
divl
dec
in
add
and
imul
inc
in
mov
mov
ret
cltd
cwtl
arpl
cltd
lret
je
xchg
ljmp
ja
out
je
sarb
out
or
mov
cli
push
popf
scas
adc
cmpsb
sarl
dec
mov
aad
std
in
imul
scas
ret
lods
push
cmp
jp
inc
sbb
mov
mov
cmpl
cmpsl
mov
inc
leave
stos
out
jb
dec
add
in
test
shrb
hlt
std
pusha
push
leave
sbb
mov
xor
xchg
insb
insb
and
in
adc
in
loopne
mov
cmp
add
and
mov
adc
and
lea
loope
je
les
push
in
xor
pop
push
mov
jle
rclb
and
out
push
sub
sbb
dec
push
iret
mov
push
pop
mov
sub
cld
mov
outsb
inc
das
stos
xor
push
mov
jge
les
push
adc
sbb
jno
and
or
jns
push
pop
ljmp
push
in
int3
and
add
ficoml
imul
mov
daa
push
or
push
jno
ficoms
xchg
cmpsl
dec
aad
out
push
ds
out
push
lea
test
jnp
faddp
jmp
push
push
insb
scas
daa
addb
paddd
dec
jmp
inc
jecxz
loope
xor
out
mov
scas
addr16
lret
xchg
bound
push
insl
push
int
jb
pop
mov
pop
outsl
lods
push
adc
test
xchg
dec
jae
scas
pushf
pop
or
mov
fistps
add
repnz
cwtl
scas
sti
aam
inc
stos
movsb
outsb
push
mov
inc
mov
mov
lea
es
dec
std
ret
popa
pusha
jae
and
pop
dec
fwait
cltd
jns
aad
repnz
sub
ficomps
push
inc
repz
fstpl
xor
mov
rcll
jns
test
mov
sub
xor
mov
ret
call
gs
xor
pop
into
cmp
mov
xabort
xchg
out
mov
jbe
fmul
ret
jb
xlat
ret
int
push
int3
inc
dec
lahf
loope
es
sbb
stos
or
sub
jb
in
jne
jmp
imul
pop
dec
cmp
pop
in
lea
repnz
push
int3
push
fsubp
sub
jbe
dec
push
cwtl
popa
jge
scas
bound
fcomi
fnstsw
lock
push
lahf
mov
push
mov
sub
out
cmc
jne
mov
sbb
mov
or
repnz
or
push
out
pop
mov
jecxz
aaa
out
insb
mov
loopne
scas
mov
and
inc
shl
fwait
notl
mov
cltd
js
mov
mov
inc
int
mov
cld
shl
mov
jp
ffreep
ds
pop
pusha
sbb
repz
xor
test
push
cmp
cmc
loope
fs
mov
xchg
xchg
sbb
jecxz
mov
nop
and
push
in
int3
in
xchg
cld
fs
mov
aam
clc
test
mov
stos
in
addb
movsl
mov
and
in
out
mov
mov
or
add
mov
dec
mov
test
fsubs
jge
cld
xchg
dec
jle
jl
popa
add
lock
jl
mov
pop
out
dec
pop
in
adc
xchg
sub
ffree
cmp
push
mov
mov
sub
adc
mov
ret
arpl
sbb
mov
pop
daa
out
adc
imul
rcl
pushf
rcrb
mov
ljmp
dec
mov
xor
jb
lahf
scas
ljmp
shll
lods
push
add
add
mov
lcall
mov
or
inc
jne
shrl
xor
es
push
cs
rcll
pop
shlb
cli
ficomps
mov
mov
lret
scas
jae,pn
or
mov
cwtl
aaa
loopne
adc
ret
adcb
in
xor
in
ret
push
out
out
dec
mov
fisubl
icebp
xchg
insb
lret
push
push
es
mov
nop
pop
mov
movsb
pop
pushf
and
dec
adc
inc
cli
xor
sub
jnp
push
test
mov
lahf
adc
mov
dec
sub
adc
xchg
std
insb
add
insb
cwtl
and
xchg
xor
pop
nop
xchg
mov
jnp
aad
jns
lahf
fidivrl
adc
mov
sbb
push
mov
pop
dec
cmpl
jmp
jae
lods
sbb
jb
fwait
adcb
or
mov
lods
daa
and
xor
jl
clc
xchg
jae
scas
int
int
inc
iret
iret
mov
push
inc
dec
xchg
hlt
and
and
adc
fwait
ja
and
loop
mov
mov
xor
push
cs
mov
js
mov
xchg
out
adc
ret
lea
mov
push
fmul
mov
pusha
ljmp
xor
jmp
mov
fdivr
inc
data16
test
mov
dec
push
into
ficomps
cs
cwtl
fdiv
and
mov
push
sub
icebp
loopne
sub
lods
dec
enter
dec
call
pop
add
mov
jmp
cwtl
sahf
mov
cmpsb
stc
pop
sub
ds
xlat
clc
jb
push
loopne
sbb
test
andl
and
ds
insl
xor
aaa
add
movl
mov
popa
xorl
cmp
sti
and
negl
push
jmp
mov
data16
add
cmc
repnz
outsb
adc
adc
scas
inc
push
push
mov
in
and
mov
push
fimull
adc
push
in
roll
or
cwtl
insl
shll
cmp
push
fisttpl
pop
push
hlt
cmp
jl
lock
mov
mov
pop
call
daa
and
mov
ljmp
sbb
daa
xlat
sbb
mov
mov
xor
sbb
xchg
pop
dec
xchg
add
leave
flds
cmp
push
push
inc
xor
cmp
and
rcl
xchg
adcl
orl
sub
call
stos
sbb
mov
in
mov
mov
xor
jmp
ja
pop
dec
sar
pop
cwtl
mov
jbe
dec
add
push
repnz
cmp
fisubs
xchg
inc
add
xchg
inc
imul
cmp
sub
test
cs
mov
pusha
inc
fs
fnstcw
dec
xchg
repz
adc
pop
fsubs
pop
test
mov
mov
cmc
movsb
xchg
or
fcomip
jnp
cmc
mov
mov
pop
in
mov
xchg
sbb
jge
outsb
or
push
sbb
lods
mov
lcall
dec
insb
faddl
and
mov
xchg
mov
ret
and
lods
push
fsub
imul
fimull
mov
mov
fistps
mov
jmp
enter
jle
stc
in
clc
out
daa
mov
sub
loope
addb
push
aas
int
lds
push
pop
jmp
negl
fwait
xchg
jb
xchg
push
out
test
test
push
xchg
inc
ret
sub
mov
lcall
popaw
lods
sbbb
inc
cmp
cwtl
xor
ljmp
dec
cs
out
adc
add
cltd
xor
out
addr16
cmpb
loop
push
test
lret
sbb
jle
popa
or
push
ja
nop
sahf
add
and
xchg
test
in
jl
jmp
mov
sahf
or
xor
int
aam
mov
dec
das
sub
out
imul
in
add
movl
rolb
or
nop
hlt
call
leave
iret
add
out
ret
mov
or
mov
daa
mov
mov
and
lods
sti
sbb
pop
or
subl
inc
push
mov
ljmp
repnz
jbe
hlt
out
push
or
test
dec
jno
ret
int3
mov
lods
mov
lea
inc
or
push
arpl
xor
popf
int
loope,pn
and
and
les
fidivrl
cmp
bound
mov
sub
out
inc
jno
cld
adc
outsb
outsb
cmp
xor
out
mov
inc
sarb
and
xchg
add
shrb
add
push
dec
mov
mov
dec
cltd
and
shl
adc
subl
jmp
loope
push
pop
call
pop
pop
mov
mov
adc
jae
and
adc
lret
lret
xchg
inc
dec
fcomps
clc
mov
add
mov
mov
data16
sbb
pusha
jmp
xor
add
push
xchg
roll
xchg
cwtl
pop
push
sbb
je
addr16
out
repnz
cld
leave
pop
imul
mov
sub
sti
push
mov
sub
dec
idiv
xor
repnz
repnz
in
mov
xchg
push
sti
mov
cmp
xor
cltd
je
inc
mov
call
stos
xor
pop
ret
addr16
loope
js
fs
inc
outsb
jae
lret
add
push
nop
shll
loop
mov
aas
dec
cwtl
inc
sbbb
sbb
cmp
movsb
dec
mov
sbb
or
adc
jb
push
lret
mov
xor
lret
mov
lea
xor
sub
ljmp
dec
movsb
or
mov
push
mov
cmovbe
sarl
mov
fdivrp
adc
ljmp
stc
adc
push
test
loopne
pop
inc
stc
dec
or
aad
ljmp
pusha
out
mov
ret
lods
mov
pushl
mov
dec
mov
ret
push
mov
jae
cmp
jmp
mov
pushf
add
rorl
push
push
mov
mov
mov
imulb
adc
adc
push
push
sar
push
lds
fisttpl
jle
gs
xchg
xchg
pop
lret
sbb
xor
bound
popa
pop
add
jmp
sub
or
inc
mov
ja
je
dec
jle
xchg
idivl
lea
push
push
popa
pop
pop
push
fwait
xchg
inc
jnp
mov
mov
and
push
movsb
push
leave
mov
adc
push
xor
cmc
std
push
stos
icebp
push
pusha
sub
fs
push
mov
addr16
jno
mov
aam
rcrb
sub
leave
lods
push
insb
lods
nop
inc
sub
pop
fwait
and
mov
pop
sahf
sbb
pop
js
imul
mov
xchg
jl
adc
int
inc
inc
mov
mov
scas
das
xlat
jg
sbb
mov
in
mov
jmp
mov
sahf
aas
mov
and
ret
adc
inc
std
push
adc
push
movsl
repz
sub
das
add
adcb
sub
xor
mov
sbb
sub
cmc
insl
mov
adc
sub
pop
pop
push
lret
pop
mov
sti
xchg
jle
pop
addl
out
xor
aas
mov
aaa
dec
xchg
push
cmp
pop
or
cltd
dec
adc
fidivs
or
and
fsubs
or
jnp
and
pop
inc
xchg
dec
xchg
std
stos
pusha
sti
xor
add
adc
outsb
aam
test
sub
jle
mov
into
cmp
sub
mov
inc
jnp
addr16
jecxz
or
aas
jle
ret
add
scas
xor
test
and
xor
stos
lret
js
shrl
cli
movsl
daa
push
inc
shl
xchg
and
roll
test
test
push
shlb
daa
gs
aam
jmp
filds
repnz
dec
xor
jns
add
add
ret
mov
test
pusha
and
movsb
pop
sbb
xor
sti
adc
fildll
rcrb
test
mov
dec
pop
push
lret
cld
pop
or
jmp
push
jns
or
roll
mov
scas
inc
fs
shl
xadd
sub
loope
sbb
mov
repz
mov
mov
add
and
fsubl
fstpt
ret
xor
cmp
sbb
cmp
jmp
jmp
pop
arpl
or
mov
jno
xchg
sarb
or
out
add
mov
enter
adc
or
in
bound
es
push
popf
sbb
addb
add
jno
lcall
pusha
cwtl
cld
cmp
shll
jecxz
sub
cmpl
adc
lods
mov
jge
fwait
fwait
out
xchg
push
jnp
daa
in
mov
sbb
xchg
repnz
fs
or
xor
pop
mov
lahf
fldl
mov
ss
lret
enter
popf
inc
pop
mov
scas
adc
mov
xor
loopne
fwait
mov
sbb
dec
add
mov
jge
mov
std
popf
xor
out
test
ret
daa
adc
cmpl
aaa
push
jne
mov
shl
dec
add
lret
dec
stc
notb
adc
and
inc
mov
fcomps
inc
outsb
js
xchg
mov
ficoms
or
test
sub
xchg
aaa
or
scas
adc
aad
cmp
xchg
call
repnz
and
cli
mov
lds
xorb
xchg
fldl
or
pushl
sub
xor
pop
dec
cmpb
lock
adc
dec
jnp
sbb
lea
sub
shll
dec
repnz
fxtract
sbb
sbb
add
lods
cmp
ja
and
das
leave
lret
scas
lret
in
mov
aaa
scas
or
dec
sahf
xchg
nop
add
arpl
loope
xchg
test
mov
stos
xor
into
lret
outsb
and
pop
push
xor
pop
iret
jns
jle
and
insb
xor
xor
or
fdiv
dec
imul
mov
cmp
dec
stos
xchg
xchg
jb
jmp
rcl
mov
xor
fs
xor
xor
pop
xchg
popf
sub
scas
fistl
leave
xchg
dec
pop
xchg
outsl
and
dec
push
mov
lcall
adc
jns
push
sub
pop
add
stos
inc
in
mov
xor
cmp
lea
fs
push
subb
sti
fildll
mov
ret
in
add
das
lret
sbb
mov
xchg
aas
adc
jb
imul
adc
test
pushf
dec
jp
pop
mov
popa
scas
jg
test
popf
fstp
cmp
push
pop
fisubs
xor
pop
mov
fsubp
fistps
inc
xlat
das
popf
sub
mov
cmc
pop
icebp
xchg
or
lahf
push
nop
sbb
lret
pop
lcall
sub
loopne
xchg
loopne
xor
sbb
fidivrs
pop
ror
rcrb
loope
add
das
aam
iret
xchg
cld
stc
xchg
dec
test
aam
cmpsl
add
jmp
std
adcl
fisubs
cmpsb
fwait
xchg
out
adc
fnstenv
cmp
test
xchg
scas
pop
rcrb
repnz
mov
inc
movsb
or
mov
adcl
adc
sbb
jb
hlt
arpl
cmp
js
fildl
arpl
ds
cmp
lahf
dec
movsb
add
insl
adc
xor
cmp
enter
cs
cmp
mov
mov
lahf
and
lock
lds
lahf
dec
cld
cmp
aam
adc
bound
and
into
jbe
jp
pusha
xchg
jl
in
cmp
les
loope
mov
mov
pop
jno
or
inc
xor
es
add
inc
cld
repz
inc
jbe
mov
lods
xchg
mov
je
rolb
in
sbb
mov
loopne
jbe
das
ret
cmpsl
add
push
cs
mov
sub
mov
dec
test
mov
sbb
mov
fimull
int3
movsl
pop
cld
xchg
sbb
dec
fwait
mov
clc
jo
xchg
das
xor
jne
movb
mov
and
or
in
mov
xchg
inc
movsl
addb
test
sti
loope
call
jo
lods
or
in
mov
xlat
cmp
sahf
pop
pop
aad
pop
xchg
dec
lods
imul
fisubrs
pop
aam
push
stc
ds
stos
push
fs
jmp
push
rorl
test
or
or
mov
sahf
mov
fdivrl
movsl
mov
cs
rorl
and
in
push
push
cmpsb
inc
je
add
pop
xor
adc
and
xor
fisubrl
int
pop
lds
mov
sub
mov
mov
inc
loope
xlat
mov
mov
out
mov
fnstcw
fsubr
mov
insl
lret
cs
cs
sbbl
pop
push
xchg
sub
pop
insl
fdivrs
jbe
in
loopne
xchg
push
dec
mov
dec
aam
mov
pop
adc
shll
fsubrl
sub
ret
out
inc
mov
sysenter
test
sub
cs
push
fsubrs
cmp
and
cmp
aam
inc
adcl
std
std
imul
adc
ret
mov
mov
mov
xor
iret
imul
mov
dec
pop
stos
scas
dec
push
in
mov
inc
out
sub
adc
imul
dec
test
push
aam
inc
mov
push
jb
pand
mov
mov
sub
outsl
xchg
jmp
inc
jo
lods
scas
imul
shrl
imul
scas
daa
push
sbb
add
imul
mov
sub
loop
sbb
in
and
ret
int3
mov
data16
or
jae
hlt
mov
jnp
enter
jnp
mov
push
iret
jg
test
pop
adc
fsubp
inc
ja
cltd
ror
add
movsb
xor
mov
and
movsb
xlat
data16
dec
xor
rolb
imul
xchg
mov
loop
inc
rcr
adcl
sbb
adc
jnp
pop
fsubr
cmp
adc
test
sbb
int
add
mov
sub
mov
addb
stc
mov
pop
add
fsubrs
cli
xchg
addb
inc
add
or
daa
mov
cmp
add
fiaddl
out
push
pushf
cs
or
shlb
mov
sbb
add
jp
out
pop
shrb
sub
cwtl
xchg
imul
mov
ljmp
popa
sbb
inc
shll
mov
in
nop
test
jae
das
pop
sti
adc
jl
jbe
push
mov
xchg
out
lret
mov
xlat
les
mov
xchg
dec
mov
cwtl
xchg
loope
loop
xor
lods
in
std
and
out
fmuls
mov
ja
xor
mov
repnz
and
push
or
mov
mov
ret
push
mov
aaa
shl
pop
aaa
rcpps
sub
je
xor
jno
fwait
nop
dec
mov
leave
int3
dec
inc
sbb
cwtl
in
icebp
cmp
mov
adc
shrl
loope
rorl
stos
sub
mov
outsb
aad
push
mov
out
inc
cmpsl
add
mov
push
adc
or
jmp
jns
xchg
or
das
or
or
pop
popf
mov
adc
adc
cmp
add
fidivs
xchg
pop
clc
or
xor
scas
xchg
es
jp
cwtl
cs
pushf
or
inc
push
add
push
enter
add
hlt
out
out
mov
xchg
xchg
in
sbb
xor
sub
add
xchg
cld
subb
loope
das
test
test
sub
xor
mov
cmpsb
movsl
shl
stos
sbb
pop
sub
and
xchg
stos
push
mov
xor
xchg
nop
inc
sub
cmc
ret
add
in
pop
enter
mov
pop
add
add
adc
shlb
out
pop
popa
adc
jle
lea
pop
cmc
cwtl
pop
xchg
faddp
sub
or
stos
jno
ret
jle
pop
rclb
add
push
sbb
pop
mov
shlb
or
lret
popf
out
sbb
pusha
lea
mov
jmp
out
xchg
and
sarl
pop
in
pushf
jns
jecxz
jns
test
loopne
sbb
lods
stos
mov
daa
xchg
sti
jg
jo
inc
cmc
sbb
mov
inc
jmp
push
les
test
mov
loopne
and
mov
insb
int3
xor
mov
xchg
insl
xor
mov
add
push
add
or
aaa
lods
int
mov
jno
loop
mov
adc
js
out
or
cmp
xor
mov
out
sbb
add
ss
pop
mov
jns
push
lcall
dec
aam
inc
pop
cwtl
repnz
mov
and
sbb
sahf
les
mov
mov
clc
in
push
mov
fstpt
jg
inc
cwtl
fldenv
mov
jle
loopne
cmp
popa
pop
out
inc
iret
fsubl
cs
sub
add
dec
lcall
gs
fbstp
sub
pusha
js
movsb
sub
into
outsl
bound
sbb
test
outsb
mov
add
in
call
inc
lock
inc
bound
push
je
inc
ds
mov
mov
es
cmpsb
orl
jecxz
mov
fidivrl
popf
mov
sub
pop
cmpsb
sbb
xchg
ret
nop
or
movsb
mov
in
cmp
lahf
enter
or
std
rcr
jae
lods
lahf
push
insb
inc
mov
call
movsb
mov
mov
add
jne
and
mov
add
cmp
cmp
jo
inc
popf
xchg
lods
sub
mov
or
cltd
xchg
inc
xchg
mov
or
and
mov
pop
mov
mov
call
push
ljmp
xor
dec
daa
push
mov
ljmp
std
mov
add
paddusw
cs
jbe
int3
and
inc
lds
pop
inc
dec
pop
add
jo
in
push
xchg
loope
mov
out
adc
add
stc
or
mov
lods
rcll
int3
dec
mov
jne
int3
sar
scas
movsl
or
ja
scas
jb
dec
fcomps
lods
jl
sahf
mov
in
cs
inc
xor
jno
pushfw
sub
mov
scas
or
mov
mov
or
dec
lret
pusha
outsl
lods
rcrb
cltd
ljmp
sub
sbb
mov
test
sahf
bound
mov
push
push
les
and
mov
insl
bound
and
stc
sahf
or
jge
insb
icebp
mov
je
into
xchg
and
sbb
pop
enter
mov
andb
xor
rcll
fldt
in
xchg
popf
ds
outsb
shl
movsl
jne
mov
mov
inc
push
dec
repz
or
call
adc
insl
dec
mov
lret
outsb
add
into
imul
add
mov
xor
cmpl
cmp
cmp
jne
das
movl
pop
pusha
test
xchg
mov
sar
pop
cwtl
fwait
adc
ljmp
or
mov
cmc
outsb
out
clc
dec
test
inc
jle
in
in
lods
mov
out
shlb
add
enter
mov
int
mov
mov
fsubrs
add
and
push
xchg
rcrb
insb
fbstp
mov
mov
mov
xor
xor
stos
jmp
subl
movsl
jb
pop
push
mov
dec
mov
enter
sub
or
test
outsl
sub
in
mov
repz
dec
mov
mov
clc
jle
hlt
mov
insb
push
or
jle
xchg
pop
jge
mov
fsubrp
push
add
das
loope
outsl
xchg
xchg
dec
mov
call
insl
sbb
stos
out
addr16
scas
jecxz
push
and
dec
popf
mov
lcall
dec
pop
lds
sti
xchg
jl
adc
adc
jb
inc
push
adc
int3
jne
fwait
and
adc
ret
jae
cmp
jp
jnp
in
jmp
and
mov
pop
dec
ja
mov
push
dec
sub
xchg
push
ljmp
icebp
cmp
dec
lds
outsb
jg
sbb
xchg
lods
dec
dec
jp
or
mov
insl
or
mov
jg
inc
push
cmp
sbb
mov
push
es
xchg
sbb
and
jnp
mov
je
mov
cwtl
ss
dec
movsb
aam
leave
jp
imul
lods
addr16
mov
adc
and
mov
ror
ror
fistpl
cmp
inc
dec
lcall
imulb
outsl
cmp
sti
push
shll
xor
shlb
ret
adc
das
data16
add
pop
pop
add
or
add
dec
mov
lods
mov
in
cld
notb
loope
xchg
lds
xchg
or
push
jecxz
add
std
aad
loop
fucomi
lock
es
fstpl
push
push
or
push
lret
jne
dec
sub
add
add
or
jno
mov
and
fistps
enter
es
outsl
gs
enter
stos
outsl
mov
pop
xor
pop
sub
das
or
jbe
push
xchg
loop
sbb
out
popa
cmp
or
xor
cmp
push
mov
sbb
pop
xchg
lret
xchg
mov
mov
dec
jnp
jne
divl
sub
loopne
jge
enter
push
gs
movsb
mov
lock
or
addr16
lcall
aam
stos
fistl
or
outsb
xchg
or
loopne
jae
adc
xor
ds
dec
dec
test
fwait
cld
test
sub
rorb
add
jecxz
fmuls
cmp
sbb
in
jne
adc
or
dec
fxch
mov
ja
mov
xlat
arpl
push
lret
jae
cmp
clc
adc
dec
test
lea
stos
add
sahf
xchg
sbb
repnz
cmpsl
mov
xorl
inc
negb
sti
inc
je
imul
shl
fistl
fs
add
sbb
cwtl
mov
inc
es
aas
lcall
adc
in
and
mov
loopne
mull
ret
mov
jge
add
out
inc
hlt
adc
loop
inc
mov
shr
inc
repz
out
cwtl
js
cmpsl
insl
mov
cmp
divl
push
dec
das
fldt
les
mov
jle
push
pop
jno
mov
mov
divb
cmc
xchg
cs
pop
or
push
ret
or
cmp
inc
stc
xchg
cmp
push
iret
cltd
arpl
push
rcl
lods
sti
decl
in
aas
mov
pop
shl
divl
sahf
inc
pop
lcall
test
sub
lahf
ss
push
lret
sub
loopne
cmp
jns
or
adc
movsb
test
ljmp
pusha
fcoml
mov
add
addl
mov
dec
push
ffree
fsts
imul
fs
cmpsb
mov
fisttpll
loopne
or
jns
or
ja
lcall
sbb
sbb
mov
mov
aad
or
sbb
pop
jb
xchg
icebp
hlt
inc
jbe
pop
inc
mov
test
out
lods
dec
sahf
movsb
aas
int
fisubrl
rorl
daa
decl
test
rcll
in
in
xchg
test
out
mov
inc
xlat
push
cwtl
mov
dec
cwtl
inc
dec
test
jae
frstor
dec
inc
jns
clc
leave
arpl
loopne
mov
add
adc
loope
arpl
lds
cmpsl
jb
push
mov
pop
mov
call
in
shlb
mov
stos
jno
pop
lea
sbbb
or
in
addr16
or
xor
rclb
mov
xchg
jbe
ret
adc
sub
ja
aad
ret
enter
pop
sub
cmpsl
pop
sbb
dec
shll
and
xchg
push
add
pop
xor
adc
out
shr
lahf
xor
adc
out
jo
and
loopne
inc
push
jne
cmp
fs
mov
imul
push
scas
pop
xor
jb
fcompl
pusha
test
jo
int3
adc
shrb
and
loope
cltd
hlt
addr16
in
xchg
les
sar
or
out
xchg
jns
mov
xor
es
cmpsl
xchg
cld
mov
sub
pop
cli
lods
popf
test
mov
cmp
aad
arpl
in
and
add
push
or
movsl
push
sub
mov
mov
pop
or
popf
repnz
pop
mov
test
xchg
loop
mov
repnz
insb
dec
mov
push
cltd
push
sub
enter
dec
and
lods
and
andl
jae
sti
mov
or
sbb
lds
mov
cmpsb
popf
inc
scas
out
pop
sub
fdivl
aam
icebp
xor
imul
push
insl
mov
push
mov
xchg
cmpsb
addl
push
and
lahf
insb
sti
les
cmova
rclb
dec
loop
dec
adc
pop
in
add
jns
adc
cmpsb
mov
and
xor
pop
jp
dec
push
div
sarb
out
mov
mov
push
lds
loop
aas
fstl
inc
in
pop
mov
xchg
add
lret
rcr
ret
sub
cmp
xchg
xchg
shr
sub
pop
cmp
idivb
mov
add
add
divl
shll
arpl
test
sbb
and
test
out
mov
imul
sbb
pop
outsl
dec
insb
sub
lret
inc
adc
loop
repnz
ret
ret
sbb
sti
add
lods
test
mov
and
fisttpll
lods
out
or
fists
xor
cmpb
push
jbe
test
cmpsb
or
xor
fwait
push
fdivr
jmp
xchg
scas
sub
lcall
in
push
cmpb
inc
enter
cmp
vorps
xchg
ss
sub
cmp
or
mov
and
mov
cltd
jp
bnd
popf
push
fidivs
call
sub
push
jp
int3
ds
jle
sahf
pop
or
aad
nop
xor
popa
add
xorb
sbb
ret
lods
mov
mov
add
push
jg
jae
add
push
dec
inc
sub
outsb
cwtl
mov
into
inc
ret
popl
jp
inc
shll
jge
sbb
or
push
xor
xor
cli
cmp
rorl
sub
ficomps
pop
insb
add
xlat
pop
lods
add
and
dec
das
add
fstpl
in
cmpsb
cli
es
das
dec
adc
adc
int3
fiaddl
add
scas
movsb
add
add
or
inc
adc
repz
xlat
jl,pn
jns
lods
xor
lds
xor
inc
mov
push
xchg
sub
arpl
fildl
pop
inc
out
call
test
imulb
mov
mov
ret
fs
pop
and
lock
pandn
or
scas
jmp
sbb
or
rcll
sbb
add
sahf
enter
mov
or
xor
bound
addr16
and
aaa
ret
sbb
cmp
and
jno
lcall
jge
mov
movsb
je
sbb
jo
scas
jmp
lcall
sub
aaa
jbe
repz
cmp
jne
mov
or
sbb
mov
cmp
int
cltd
pop
inc
mov
sub
fisttpl
mov
in
adc
movsl
pop
and
xlat
jmp
repz
insl
stc
xor
lds
dec
dec
sbb
aad
repnz
fildl
cwtl
xlat
mov
add
ret
or
insb
enter
jge
xchg
add
pop
stos
inc
push
xchg
lods
out
aam
movsl
sahf
fnstcw
imul
and
cltd
loopne
addr16
aad
ja
aas
push
psubusw
dec
push
adc
aaa
sbb
jbe
mov
imull
pop
jp
shll
loopne
and
pop
scas
dec
ret
pop
pop
pushf
and
jne
std
and
mov
sar
dec
enter
sbb
lcall
sub
outsb
cmp
xchg
mov
cwtl
jle
das
cmp
xlat
push
dec
cmp
fsubs
loope
aad
insl
mov
mov
jb
mov
loope
divl
mov
out
sbb
cmp
insb
or
mov
xor
daa
dec
mov
mov
add
mov
dec
cs
mov
ds
cmp
sbb
or
popa
adc
cli
imul
push
xchg
adc
je
lea
adc
leave
mov
mov
push
std
cs
subl
jge
subb
iret
push
daa
movsl
test
sbb
pop
jno
dec
stos
imul
cmpsb
jp
paddsw
lcall
sbb
cltd
mov
or
mov
fs
fmull
inc
inc
test
mov
std
xchg
jecxz
scas
sub
and
jb
addr16
inc
popf
and
sahf
lock
add
inc
sbb
xchg
pop
hlt
imul
lcall
fsts
and
xchg
mov
add
sbb
jl
jno
bound
popa
jmp
cmpsb
lret
mov
xor
dec
mov
pop
mov
adc
dec
or
inc
mov
push
mov
out
xor
dec
mov
xchg
mov
pop
icebp
lods
cmp
push
jae
idivl
jecxz
xor
push
mov
xchg
xlat
mov
cmp
adc
jb
lret
enter
mov
movsl
sar
popa
dec
pop
adc
xor
fimuls
int
push
lret
mov
xlat
adc
.byte
.byte
mov
.byte
xor
cmp
xchg
sbb
or
scas
adcl
lods
sub
int
xchg
pop
push
out
rcr
sti
out
iret
sbb
push
js
dec
pop
add
aas
cmp
data16
cmp
mov
sub
shlb
mov
mov
divl
inc
enter
pop
sahf
gs
jle
out
sbb
aad
pop
inc
push
jmp
jb
outsb
jae
dec
imul
lret
or
mov
jge
fs
out
xor
std
popf
and
cmp
jns
push
xlat
outsb
leave
mov
cmp
pop
mov
fstpt
and
push
push
test
push
jnp
aam
mov
loop
lret
lods
pop
sbb
rorb
loop
mov
pop
ds
mov
into
aad
in
xchg
cmpsl
push
mov
cld
fcompl
cmp
shll
mov
in
loop
test
xchg
lahf
and
and
mov
cmc
daa
push
popf
push
push
test
mov
loopne
or
mov
jmp
mov
xchg
xchg
arpl
jg
mov
scas
ret
mov
mov
daa
jbe
inc
add
add
or
cmp
in
push
push
and
xchg
lret
notb
cmp
sub
mov
push
shlb
xorl
pop
xor
inc
addr16
stos
jl
gs
sub
mov
sub
jae
scas
cmpsl
fs
repnz
insl
mov
aaa
shrb
repnz
sub
jecxz
mov
mov
fcmovnbe
push
mov
mov
test
cwtl
repz
fistps
adc
jnp
sub
or
xchg
jno
jb
xchg
or
bound
inc
ja
cmc
add
loope
out
test
pop
je
adc
dec
mov
scas
in
lds
leave
push
sbb
ret
mov
xchg
push
xchg
jnp
mov
pop
add
xchg
xor
movsl
add
rcll
enter
xchg
lahf
out
cmc
cld
push
daa
mov
out
add
or
int
dec
aaa
ficoms
and
out
inc
mov
insl
push
mov
or
jns
jb
jl
repz
sti
aaa
dec
repnz
andl
fstpt
iret
fdivl
sahf
pop
xchg
int3
push
sbb
xchg
xchg
stos
lods
in
pop
fs
or
int
sub
xchg
pop
lret
push
add
jge
imul
mov
xor
inc
in
xor
dec
and
cmp
pop
mov
pop
sub
pop
sahf
inc
sub
push
mov
pop
sbb
xor
aas
popa
aam
xor
adc
fstps
cmp
movsl
xchg
pop
cmpsl
pop
jo
or
dec
popf
outsl
sbb
xchg
adc
or
mov
lock
es
pop
cmp
lcall
lret
mov
dec
lret
daa
jbe
lock
repnz
mov
in
subl
cmpsl
loopne
xchg
jmp
fisubrs
push
push
jecxz
cs
jne
pop
jae
fucomip
pop
mov
xchg
call
pop
mov
dec
cmc
dec
loopne
mov
test
movsl
push
cmp
test
pop
add
jecxz
dec
or
cmpsb
pop
shl
push
mov
mov
push
aas
adc
out
aaa
cmc
ret
movsl
icebp
add
cmp
inc
or
add
xchg
outsb
mov
and
imul
or
xor
int3
fsubl
xchg
jb
enter
jbe
mov
push
cmp
xchg
mov
shr
scas
pop
imul
mov
sbb
inc
push
mov
shrl
cmc
jp
inc
lcall
jle
sbb
mov
ljmp
jge
ret
mov
adc
pop
mov
stos
les
push
in
subl
ljmp
or
fnsetpm(287
pusha
dec
xor
out
jo
sti
sbb
xchg
rorl
idivb
jbe
mov
jne
xor
cli
xor
imul
shrb
sub
pop
fidivs
loopne
ss
push
popf
mov
dec
addr16
mov
pop
arpl
jge
xor
into
scas
xchg
jge
popf
xchg
sub
add
sbb
sbb
adcb
adc
mov
out
stos
mov
xor
jmpw
mov
inc
sbb
ss
lea
loop
lcall
sub
sbb
adcb
lret
or
rorb
iret
sbb
jb
in
movsl
jae
fwait
outsl
sti
fincstp
xlat
lcall
data16
lock
push
mov
imul
mov
sbb
cwtl
mov
cmpsb
test
lret
sbb
popa
pop
pop
push
leave
inc
pop
lahf
mov
or
sbb
mov
lock
sbb
iret
adc
dec
aam
subb
and
and
cwtl
dec
repz
out
aam
mov
cmc
pop
jbe
cmp
sub
mov
push
mov
pop
mov
jl
movb
loope
dec
mov
dec
ret
lods
xchg
and
ljmp
in
push
arpl
sub
lcall
loop
subb
xor
add
test
mov
das
std
test
enter
js
cmpsl
push
fcoms
rclb
sbb
jno
std
call
inc
ljmp
les
pop
lret
loop
push
adc
push
sub
ret
sub
jecxz
xchg
xchg
mov
dec
hlt
shl
cmp
sbb
mov
test
pushf
xchg
and
mov
mov
imul
fwait
add
jae
xor
into
push
cwtl
sub
mov
fsubr
ljmp
sub
mov
out
test
mov
sbb
xor
mov
loope
aaa
xchg
imul
jne
std
jle
ret
pusha
push
inc
insl
cwtl
jg
das
sub
dec
bound
xchg
xchg
dec
push
xor
mov
cmp
xchg
in
and
jnp
push
ds
clc
outsb
mov
pop
lds
lods
xor
adc
rcr
inc
inc
adc
add
cwtl
shrb
outsb
mov
je
arpl
stos
movsb
adc
mov
test
iret
cmp
mov
xor
test
push
xchg
push
jb
leave
xchg
xor
push
fnstenv
cwtl
mov
loop
scas
in
mov
sbb
nop
pop
lahf
test
jp
fmulp
jae
daa
xor
jnp
fimuls
jns
jne
push
pop
jns
cmp
cmp
out
pop
xchg
adc
fucomp
add
jne
inc
and
add
sbb
adc
mov
lahf
cmc
pushf
adc
fdivp
int3
fdivr
out
xor
ret
rolb
adc
outsb
inc
imul
cmp
mov
push
ljmp
in
push
loope
test
jp
adc
jmp
std
mov
add
cmp
fs
mov
cmp
xor
outsl
ret
inc
dec
cld
cs
dec
push
andb
mov
pop
push
mov
aaa
cmp
fwait
or
jl
scas
push
xorb
push
cwtl
dec
adc
ficompl
adc
loop
es
jg
cmp
mov
shrl
lds
mull
push
inc
in
pop
jbe
mov
jmp
testb
jp
pop
les
inc
pusha
mov
mov
inc
mov
xchg
loope
adc
test
lcall
xor
stos
es
lds
cmp
push
mov
pop
sub
imul
jmp
fists
push
in
mov
push
lock
xchg
inc
repz
fildll
xlat
xchg
mov
and
adc
xchg
je
mov
daa
cmp
adc
aaa
cmc
jg
das
popa
insb
push
fbld
inc
dec
mov
dec
inc
test
xor
add
lods
fisubrl
mov
adc
aas
xor
rcrb
jne
loop
ljmp
scas
sbb
pop
mov
ret
push
loopne
int3
pop
insl
adc
sti
mov
pop
mov
mov
push
xor
out
into
mov
fidivrs
cmp
in
or
lret
jb
jnp
data16
inc
cli
pop
pusha
xor
sbbb
dec
add
jge
lock
mov
sbb
out
shlb
pop
xchg
or
inc
or
fcmovu
lcall
stc
aad
push
mov
push
mov
fdivrs
lock
int
sbb
int
data16
xor
jle
mov
enter
shll
int3
lods
and
ret
sbb
mov
mov
mov
lahf
jnp
push
fisttpl
leave
pop
cmp
call
lret
imul
cmp
pop
fnstenv
pop
popa
insl
out
cltd
dec
popf
push
adc
or
mov
pusha
jle
sub
jp
pop
push
in
out
xchg
lret
and
ljmp
imul
and
ret
xchg
lret
mov
icebp
lcall
test
xor
in
mov
adc
imul
pop
fsubl
push
addr16
insl
jb
outsl
dec
test
add
cli
gs
cli
xchg
mov
gs
bound
pop
insl
inc
inc
cmpsl
call
stos
mov
ret
fwait
dec
xor
bound
dec
xchg
into
cmpsl
dec
mov
xor
fnsave
adc
mov
push
lret
repz
ljmp
xacquire
xchg
inc
sbbb
pop
testl
jo
or
fs
leave
mov
fcomi
add
pop
and
ljmp
jbe
fmul
scas
test
push
in
mov
pop
dec
or
xor
imul
dec
sarl
cmp
jmp
mov
fs
in
inc
test
sbb
dec
xor
xor
inc
pop
inc
mov
into
lcall
je
push
sbbl
push
jb
mov
mov
test
test
fxam
push
mov
std
shrb
xor
jg
adc
mov
push
mov
stc
push
insl
add
cmc
lahf
je
ret
adc
aad
sub
jnp
jnp
arpl
xor
mov
cmpsb
xchg
inc
pop
or
test
inc
inc
test
cmc
pop
sbb
popa
scas
cli
into
aas
addb
push
cmc
mov
incl
inc
pop
lcall
push
mov
aaa
jmp
loop
mov
xchg
shrb
dec
xchg
sub
in
add
icebp
mov
cltd
pop
loope
xlat
mov
xor
jns
sti
sbb
dec
fiadds
inc
loopne
push
dec
jbe
enter
stc
pop
pop
movsl
mov
xchg
sar
push
iret
push
add
std
jo
sbb
imul
mov
scas
xchg
or
ljmp
inc
add
add
jmp
data16
jb
and
lahf
fcoml
enter
sbb
cs
sub
movsb
mov
loope
pop
lods
loop
cwtl
ja
int3
xor
lret
insl
lds
jo
jg
jmp
stos
lock
pushf
stos
aad
or
adc
adc
mov
push
sti
mov
push
mov
rorl
leave
sti
out
mov
aaa
sbb
jecxz
out
loope
inc
cmp
test
cld
icebp
xchg
cmp
out
xor
test
das
push
mov
cmp
or
popf
test
lret
jns
popa
std
inc
lahf
fcmovbe
add
iret
adc
add
add
jmp
out
pop
mov
test
cli
ret
decl
dec
sbb
dec
sbb
xchg
jg
popf
ret
mov
and
arpl
mov
mov
arpl
mov
adcb
jecxz
fcmove
movsb
testb
cmp
in
fmulp
jmp
out
jbe
stc
pop
mov
mov
test
dec
pop
ret
nop
ds
fcomps
std
xchg
or
scas
aaa
gs
imul
xchg
fdivr
push
pop
mov
cmpsl
push
pop
push
cmpsb
test
movsb
inc
mov
mov
pop
jo
loopne
jge
sarb
mull
push
jge
sbb
pop
or
ds
xchg
xor
sbb
add
dec
mov
clc
mov
pop
cltd
mov
call
cmpsl
test
cmpsb
inc
lret
imul
jge
sbb
dec
orb
ss
jle
push
inc
into
je
jecxz
cmc
inc
out
test
mov
lcall
pop
push
popa
pop
in
ss
sub
jg
movsb
or
test
into
lret
daa
mov
in
dec
pushf
lcall
add
stos
mov
sti
or
mov
std
fwait
jge
xor
or
adc
xor
push
pop
lds
les
or
aad
add
push
mov
xchg
inc
orl
lods
and
sbb
orl
mov
jae
xor
sti
fstpl
xor
pusha
dec
nop
add
out
pop
mov
pop
jnp
test
popa
sub
lcall
jle
sbb
jne
and
hlt
xor
aas
enter
ror
nop
xchg
push
xchg
rorb
scas
sahf
out
outsb
jnp
adc
and
call
ret
and
cmp
repnz
insb
pop
sub
inc
jne
into
mov
and
inc
pop
imul
fcmovbe
jno
xlat
push
lods
insl
out
lock
cmp
imul
mov
repnz
cmp
gs
mov
js
adc
cmc
lcall
mov
lret
push
mov
stos
lds
mov
sub
popf
ss
inc
cmc
bound
dec
add
xorl
fidivrs
xor
pop
add
cmp
bound
cmpxchg
cld
sub
pop
xchg
push
mov
rorb
pop
pinsrw
mov
sbb
int
pop
icebp
ja
daa
les
rcll
mov
jp
add
mov
adc
test
jne
and
rol
mov
imul
lret
fbstp
cli
cmp
divb
mulb
push
cltd
inc
sbb
in
mov
sub
push
into
mov
mov
or
push
sbb
mov
or
mov
shr
repz
push
aam
loopne
imul
clc
in
xlat
fnstsw
dec
scas
add
push
test
divl
out
testb
cmp
mov
aam
rclb
into
fmulp
fistl
xor
push
mov
push
push
push
shl
test
out
pop
inc
stc
mov
xchg
or
pop
push
cltd
std
add
in
push
std
cwtl
dec
fsub
push
jnp
mov
mov
fcomp
pop
jge
shr
mov
sbb
sbb
call
or
pushf
ljmp
test
in
sbb
ficomps
mov
cmp
ljmp
js
pop
inc
adc
sub
mov
add
stc
fnsave
rorl
push
in
call
out
insb
xchg
sbb
std
cmpsl
std
add
sub
pop
bt
cmp
jne
pop
xlat
jmp
shll
cli
loope
int3
mov
lahf
jl
jnp
xchg
bound
xor
mov
vunpcklps
cmc
pop
xorl
sub
in
mov
add
outsl
pop
sub
mov
mov
fisttpl
jne
jecxz
pop
je
js
dec
dec
jp
test
jmp
or
adc
mov
sahf
int3
fadds
sti
or
mov
jno
mov
dec
mov
cmp
loope
aad
xchg
mov
cmp
sbb
out
test
xor
es
test
lret
jae
pop
jb
inc
popf
call
fs
mov
int3
xchg
push
dec
out
stc
andb
xchg
cwtl
fucomip
push
rcr
add
test
cmp
xchg
push
and
ja
cld
pushf
in
xor
lret
pop
popa
xchg
leave
test
adc
xchg
test
xor
xor
lods
pop
or
jl
int3
push
loope
orl
cmp
idivb
or
rcl
xchg
ss
subl
ret
fildll
repnz
mov
pop
daa
enter
arpl
pop
stos
aas
mov
add
jno
xor
cmc
inc
cmp
addps
push
in
mov
jb
sbb
lock
cmpsb
inc
adc
sub
mov
or
loope
xor
mov
adc
cmp
pop
push
inc
sti
aas
mov
in
and
sub
push
push
popa
in
and
xor
sub
divl
fprem1
inc
mov
add
sahf
mov
mov
ret
sbbl
and
pop
push
add
loope
xchg
lret
mov
xor
int3
dec
in
push
sarb
rcll
fs
push
xor
inc
sbb
inc
jecxz
ret
push
cltd
ret
jns
push
sub
pop
aam
pop
fisubrs
mov
cmp
push
inc
or
movsb
xor
xchg
sbb
dec
fsubr
xor
jnp
push
pop
push
mov
push
mov
xchg
cld
cmp
and
sub
xchg
push
sub
adc
out
inc
dec
adc
outsl
jmp
sub
inc
iret
lret
jp
sub
inc
adc
je
cmp
mov
push
mov
xor
push
mov
addb
int3
or
push
aam
and
stos
into
mov
add
xor
and
outsb
or
sub
mov
pusha
xor
sub
xchg
sbb
sti
addr16
xor
inc
aas
lods
or
in
sbb
enter
pop
push
fwait
mov
insb
and
js
mov
mov
scas
mov
enter
inc
jl
divb
push
pop
popf
scas
inc
mov
push
push
jle
mov
outsl
xchg
mov
and
movsl
push
mov
int3
insl
push
dec
sbb
adc
mov
jmp
xor
and
int
dec
fadds
mov
movb
decb
sbb
lahf
push
xor
shl
cltd
repz
in
cmp
fcoms
mov
mov
cs
inc
add
jl
push
cli
jp
stos
and
imull
jae
push
es
rolb
push
mov
sub
cmpsb
push
rol
lods
mov
iret
in
xor
shlb
loop
jle
aas
xchg
into
jecxz
clc
cmpsl
fmul
cs
dec
adc
sbb
pop
fisubrl
mov
popf
jecxz
cmp
sbb
inc
adc
pop
jbe
leave
int3
cmp
outsb
call
pop
sbb
pushf
ja
jb
mov
roll
stc
push
mov
mov
fdivr
dec
cs
mov
ficoms
lret
cmc
pushf
pop
add
loope
pop
or
xor
dec
push
mov
cmp
jne
insb
arpl
in
mov
adc
mov
sub
dec
and
imul
fldt
subb
and
xchg
test
stos
gs
les
or
mov
hlt
inc
outsb
jbe
stos
.byte
pop
pop
daa
dec
.byte
cmp
and
sbb
sbb
outsb
push
fmull
push
rorl
adc
mov
flds
pop
mov
dec
push
popf
loop
addr16
repnz
adc
push
mov
in
dec
icebp
scas
decl
mov
stos
out
lods
inc
jae
leave
sti
test
pop
out
lret
rcll
dec
inc
repnz
push
lahf
jb
mov
pop
pop
sbb
sbb
cwtl
mov
ret
aaa
cmpsb
dec
mov
dec
mov
stos
sbb
out
mov
dec
dec
push
stc
aad
sbb
mov
shr
js
data16
sbb
jae
pop
add
xchg
out
lcall
loop
movsb
out
imul
mov
sbb
push
inc
push
sub
sub
adc
xchg
loope
xchg
in
inc
repnz
mov
test
mov
xor
enter
jns
imull
lret
int3
cmpsl
iret
pushf
stos
cmp
add
and
adc
mov
scas
lret
push
push
sub
mov
and
movsl
dec
add
sbb
vrcpss
mov
xchg
jle
inc
push
push
mov
cmp
mov
or
lods
sub
or
sbb
and
out
or
and
xor
push
adc
adc
sub
jbe
lods
xchg
subb
stos
sti
call
jb
push
pushf
pop
mov
int
int3
mov
dec
xor
dec
mov
mov
cmpl
js
scas
outsb
enter
and
ror
addr16
cld
lods
out
inc
je
call
or
icebp
sub
jns
ja
movsl
mov
or
xchg
cmp
sub
mov
sahf
icebp
icebp
add
mov
loopne
adc
sarb
outsb
cltd
dec
lret
push
data16
xchg
lret
xchg
pop
or
adc
pop
mov
hlt
and
orl
dec
sub
adc
mov
adc
and
adc
aas
les
fiadds
dec
ret
pop
aas
sub
scas
xchg
xlat
arpl
rorl
enter
sub
rcl
js
sbb
icebp
xchg
pusha
mov
jl
pop
push
push
fbstp
sub
jg
push
insb
jns
mov
gs
in
fcmovnb
push
movsl
fnsave
les
or
in
mov
push
ja
mov
loope
out
shlb
mov
add
push
bound
jno
ja
dec
ret
mov
inc
jo
aaa
lods
insb
out
sub
or
aas
lahf
sub
xchg
add
repnz
iret
xchg
outsl
shrb
mov
and
mov
lcall
jbe
outsl
pop
add
pushl
aas
in
add
mov
dec
fdivl
add
shrl
shrb
fsubr
fcoms
cmpsb
cmpsl
imul
dec
pop
mov
js
jg
inc
sbb
adc
inc
clc
out
movsb
lods
push
pushl
ljmp
ljmp
gs
fisttpl
mov
inc
jnp
movsb
sarl
push
add
inc
cmp
push
incb
idivb
jno
into
sub
mov
or
lahf
nop
popa
dec
out
pop
rcll
mov
test
xor
push
and
and
lret
xor
push
mov
cmp
sbb
testl
jl
scas
push
js
ds
push
push
fwait
movsl
outsb
pop
lahf
push
mov
push
ret
sbb
pop
xchg
sub
std
lcall
loope
cwtl
sbb
jge
mov
in
mov
pop
movsb
cmp
sbb
adc
pop
cmp
test
inc
inc
mov
dec
adc
repz
sbb
push
mov
push
out
sub
neg
das
and
loope
adc
mov
inc
xchg
in
push
outsb
sub
mov
cwtl
gs
and
jecxz
hlt
sbb
repz
in
out
cmp
bnd
test
lcall
fisubl
add
mov
inc
mov
jecxz
xchg
fisttps
test
lret
sub
inc
xchg
mov
loope
mov
pop
outsb
test
je
mov
lods
inc
lea
push
xchg
ljmp
imul
pop
out
cwtl
stos
rcrb
divl
dec
mov
lret
mov
fmuls
and
jo
xchg
es
adc
xchg
inc
pop
mov
push
test
adc
pop
in
subb
pusha
aad
vmovupd
mov
scas
mov
fsubr
fwait
xchg
inc
push
movsl
hlt
fadds
lcall
lret
mov
jmp
sbb
roll
xchg
sarb
pop
xor
mov
ja
adc
jmp
popa
out
mov
cltd
negl
ficoml
lret
mov
sbb
push
addr16
notb
insl
cwtl
cltd
aam
add
test
roll
ret
cmp
call
pop
push
repnz
or
lock
sbb
aaa
ljmp
hlt
bound
mov
outsl
sub
insl
stos
push
lcall
enter
into
push
fwait
add
inc
pushf
popf
int3
outsl
sbb
push
inc
cmc
push
lahf
xchg
lds
neg
les
js
inc
pushf
das
inc
xchg
and
mov
pop
icebp
xchg
push
int3
mov
hlt
xchg
pop
sbb
arpl
xchg
push
ret
fstl
sbb
push
test
aas
dec
js
sub
jmp
lock
lea
cwtl
outsb
popf
xchg
aad
cs
inc
push
xor
xorb
bound
test
aas
xchg
mov
lea
jg
cmp
jno
popa
sbb
addb
pop
dec
mov
into
movsb
mov
das
int
or
adc
cmp
mov
add
sbb
add
jns
sarl
cmp
test
or
cmpsb
outsl
movsl
add
push
mov
ret
add
jno
push
pop
inc
cld
pop
dec
inc
jmp
pusha
movsl
or
loopne
aas
mov
push
rorb
and
sbb
movsl
lock
fdivs
ja
push
hlt
std
pop
push
jnp
sbb
inc
mov
cmc
jge
push
scas
arpl
mov
sti
sahf
rcr
xor
adc
adc
dec
mov
push
in
paddsw
adc
mov
pop
rcl
inc
sub
fcompl
add
mov
cmc
mov
pusha
incb
popf
lret
rclb
adc
dec
push
cmpsl
ss
dec
dec
out
pushf
imul
push
push
in
popf
test
in
in
or
fldl
mov
inc
das
sbb
push
add
cmp
imul
out
lock
inc
wrmsr
dec
movsl
lahf
out
add
add
adc
mov
jbe
or
xchg
cmp
xor
inc
hlt
push
addr16
cmpsb
push
loop
cmpl
repz
ud2
sub
dec
enter
aam
xchg
inc
mov
xchg
push
add
add
sub
ficoms
data16
xchg
fcmovnu
loope
hlt
mov
add
sub
sbb
jno
mov
or
push
out
sarb
push
xor
mov
sbb
pop
jl
xchg
bswap
dec
inc
mov
xlat
icebp
sbbb
add
es
lods
xor
outsl
arpl
movsl
out
lds
mov
icebp
xchg
xlat
sub
pop
jae
pop
add
in
pop
jne
sbb
scas
shlb
ljmp
sbb
in
mov
es
cltd
cmp
cmc
pop
jge
lock
adc
je
jno
call
jb
insb
and
add
icebp
push
sar
les
stos
push
push
push
sbb
sbb
add
xor
cwtl
rolb
lahf
in
shll
cmp
popa
dec
nop
sti
ss
lret
mov
sub
loope
cmp
lds
iret
or
sbb
bound
push
scas
insb
cmpsl
mov
lods
into
test
scas
lcall
in
jl
cmpsl
stos
cltd
xchg
adc
inc
shlb
scas
xor
fcomps
cmp
push
lock
inc
hlt
faddl
movsl
into
hlt
movsl
or
repz
push
cld
out
js
fs
jecxz
pop
stos
es
xchg
into
es
dec
pop
cmpsb
enter
insb
cmp
fdivrl
repnz
inc
aad
repz
jg
enter
test
mov
jmp
xchg
lods
roll
add
xor
jno
out
pop
sbb
push
sub
jns
mov
repnz
mov
popa
orb
outsl
pop
xchg
xchg
add
movsb
cmpsl
pop
int
sar
sbb
scas
pop
mov
out
test
jl
xchg
les
popa
fbstp
scas
pop
adc
pop
das
stos
popf
push
or
insl
ss
mov
xchg
repz
push
xchg
xchg
or
mov
iret
or
mov
mov
inc
cs
xor
pop
aad
rsm
xchg
add
jne
repnz
xchg
cmpsb
mov
test
loop
aad
ficoml
cmp
fisubrl
in
pop
jp
inc
arpl
inc
xlat
xor
mov
mov
popf
mov
es
daa
sbb
fs
stos
sub
xchg
cmpsb
mov
scas
push
inc
int
adc
hlt
jo
jmp
cmp
jns
std
jp
movsb
mov
jae
addr16
lahf
sbb
imul
nop
aaa
fidivrl
lea
mov
jnp
xchg
xchg
push
int3
lock
pop
dec
rcr
repnz
loop
sbb
std
pushf
xor
add
and
add
or
int
mov
cmp
add
and
mov
enter
scas
dec
push
stos
inc
fildll
xor
int
fildl
cmp
xchg
push
sub
pop
fldcw
rclb
push
xor
and
scas
mov
test
loop
sbb
xor
push
dec
xorb
xlat
cmc
arpl
inc
mov
or
mov
inc
dec
subl
mov
jl
int3
cmp
mov
xchg
add
out
mov
loopne
scas
stos
das
xlat
cld
and
fwait
lcall
shll
movsb
or
add
lret
ss
dec
pop
add
inc
fdivl
sbb
mov
int3
sub
loop
mov
dec
call
insl
add
xchg
fwait
mov
sbb
jmp
adc
pop
lds
push
push
mov
outsl
mov
pop
sub
xor
aad
out
mov
scas
sbb
mov
jle
mov
xor
cmc
test
push
aas
push
xchg
lock
out
lret
mov
mov
cmc
ja
push
lea
aas
dec
bound
add
push
inc
xor
out
jns
pop
and
insb
iret
pop
pop
xlat
or
push
std
add
fnstcw
flds
shl
test
jge
pop
jbe
and
jg
jnp
popf
inc
mov
sbb
iret
mov
in
mov
push
test
pusha
mov
sarb
mov
adc
and
shrl
pop
jp
hlt
jae
lahf
std
shll
jl
popa
mov
inc
sub
bound
test
pop
pop
call
rorl
mov
loope
xchg
add
fsubrl
das
stos
inc
cltd
addb
lods
inc
mov
iret
add
xor
pusha
inc
cs
je
dec
lods
sub
int3
iret
ljmp
idivl
inc
push
or
jne
mov
and
in
jns
clc
popf
inc
in
cwtl
push
adc
or
jmp
loopne
lret
push
or
dec
mov
add
test
push
das
adc
stos
xor
adc
enter
and
xchg
jbe
sbb
sbbb
pop
testl
sub
aad
lea
adc
mov
in
rorl
sti
xchg
imul
jno
roll
add
dec
mov
xchg
xor
lahf
sub
mov
inc
cwtl
jnp
imul
mov
mov
std
sti
add
mov
insb
cli
cwtl
cmpsl
mov
mov
das
mov
xchg
int
push
adc
push
es
add
cmp
dec
lods
loopne
add
test
push
push
stos
std
in
mov
mov
bound
cli
fstpt
shll
call
cs
scas
lods
outsb
dec
fs
or
mov
sbb
and
fdiv
loope
push
ret
leave
popa
mov
test
jb
int
jbe
xchg
pop
mov
fldl
add
xchg
sbb
fstp
mov
cmp
jmp
int
xchg
shlb
mull
test
jp
adc
xor
mov
insl
inc
roll
shll
or
push
scas
imul
in
ret
fiadds
into
in
mov
popf
sahf
enter
xchg
sbb
jmp
or
pusha
lret
dec
popf
push
sbb
scas
fs
fldenv
jp
cltd
cs
jb,pt
mov
std
cltd
push
mov
jle
mov
andb
mov
adc
es
mov
rorl
inc
repz
icebp
not
xchg
or
out
lcall
xor
xchg
iret
sbb
cld
dec
dec
fs
movsl
lret
jb
mov
stos
or
xchg
mov
push
or
cli
sub
push
mov
bound
lcall
mov
xchg
mov
in
pop
aas
fcoml
pop
push
jns
sbb
xor
sbb
arpl
adc
dec
push
pop
inc
adc
adc
pop
jnp
cmp
mov
test
dec
fs
clc
lock
jne
mov
das
js,pn
push
jne
sahf
clc
jae
pushf
lea
inc
pop
dec
inc
pop
sbb
pop
or
subb
cwtl
scas
fiadds
scas
jb
ret
push
mov
mov
repz
mov
roll
add
pop
lock
xchg
idivb
xchg
cmp
fsubl
mov
adc
and
dec
push
out
fs
fistl
dec
inc
add
stc
jnp
lahf
cmpsb
xor
push
mov
cmp
pop
push
cmp
je
out
pushl
insl
xor
sub
testl
inc
fs
and
jecxz
mov
adc
push
xchg
dec
push
cwtl
negb
jl
jle
mov
mov
aaa
jb
fwait
push
dec
lret
sahf
sbb
mov
xchg
lods
mov
or
dec
mov
in
xchg
insb
rclb
aas
and
leave
test
cltd
xchg
push
cwtl
pushf
mov
push
adc
sbb
lea
repz
dec
adc
cltd
sarb
push
call
mov
out
cmp
dec
push
xchg
int3
sub
lret
inc
cmc
pop
jns
push
add
jno
inc
mov
push
mov
mov
fbld
mov
fstpl
es
loopne
adc
adcl
mov
mov
cmp
repz
pop
pop
add
push
aaa
in
xor
aad
daa
enter
or
fdivrs
clc
dec
mov
lahf
insl
adc
push
xchg
jmp
jg
jmp
or
add
xor
dec
bound
or
pop
inc
pushf
cmc
stos
ds
and
repnz
add
push
push
push
jb
mov
dec
xor
jns
mov
xchg
sbb
loopne
xchg
xor
fbld
fs
loop
inc
mov
addb
dec
ja
fsts
add
sub
or
cwtl
test
adc
xor
sub
pop
pcmpgtb
xchg
and
mov
incb
cmp
mov
shlb
pop
adc
ljmp
ret
rorl
mov
lahf
cmp
sub
fwait
push
pusha
fisubrl
aas
testl
mov
pop
jno
jle
imul
fildl
sub
or
dec
pop
mov
outsl
into
std
inc
jo
lods
pop
xchg
pop
outsb
icebp
jne
shll
dec
sub
xchg
loop
jle
jb
adc
sub
in
in
in
clc
cmp
push
jns
inc
and
fcomps
fldcw
jecxz
fsubs
and
sbb
lock
es
sub
sub
popa
js
icebp
push
jns
adc
out
or
mov
pop
mov
inc
repnz
push
fdivl
scas
push
popa
arpl
mov
adc
add
in
je
cmc
out
xchg
lods
push
in
and
popa
mov
popf
xor
push
fildl
out
pop
mov
rep
pop
xchg
lds
cmc
jg
xchg
fisttpll
fidivrs
arpl
pop
xchg
sahf
pop
adc
mov
mov
adc
scas
nop
adc
negl
fnsave
mov
shlb
pop
mov
dec
decb
je
loope
repnz
stc
out
mov
inc
sbb
dec
push
jo
sbb
imul
or
mov
imul
jle
nop
lret
mov
xor
adc
jmp
sub
sbb
and
mov
adc
stc
inc
ret
sarl
rolb
popl
cmp
xor
adc
in
push
rcll
xor
test
repnz
push
or
stos
aad
insb
xor
jbe
mov
jp
add
xor
ret
inc
mov
push
and
and
add
sbb
ret
pop
cmc
or
rcrb
jle
nop
sub
sti
xchg
push
or
add
xor
sub
es
leave
std
test
push
lods
dec
fdivl
test
dec
loopne
inc
dec
iret
push
sbb
andl
sub
sub
in
imul
xchg
cmpsb
test
nop
cs
mov
xchg
test
push
stos
xor
mov
loopne
mov
daa
push
xchg
fst
and
dec
clc
sbb
sbb
out
call
xor
nop
test
std
mov
push
xor
sub
mov
lods
fdivr
mov
gs
jmp
or
pop
pop
mov
ja
cmp
xor
insl
sbb
xchg
pop
test
mov
sbb
pop
mov
mov
repz
mov
inc
xchg
repz
push
push
dec
call
mov
dec
and
pop
ljmp
xor
or
dec
pop
aaa
xchg
pxor
or
sub
xchg
cld
add
and
int
adc
vmread
out
xchg
gs
aad
mov
psrld
push
pop
popf
lock
out
pop
xchg
cwtl
repnz
repz
inc
xchg
jbe
ja
add
pop
repz
dec
mov
push
andb
pushf
jl
icebp
add
rol
inc
dec
adc
jle
daa
fcmovbe
iret
jo
and
fidivl
out
jl
jo
bound
jl
xor
add
jns
into
pop
test
or
adc
adc
cld
xchg
repz
sbb
dec
test
sbb
cwtl
jae
and
sahf
.byte
sbb
.byte
add
add
pusha
cmpsl
cmp
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
xor
add
js
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
or
add
and
add
pusha
cmpsl
cmp
add
add
or
add
push
or
cmpb
add
push
add
subb
push
or
addb
add
pushf
or
xorb
add
mov
add
add
add
rorb
add
fimuls
add
add
add
add
add
inc
add
addb
add
pusha
cmpsl
cmp
add
add
add
add
clc
or
sbbb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
mov
sub
add
mov
sldt
mov
sldt
rolb
sub
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
and
add
cmp
add
push
push
add
push
sldt
addb
addb
add
cwtl
push
add
pusha
cmpsl
cmp
add
add
add
add
adc
xorb
add
ss
and
add
clc
push
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
pop
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
add
add
cmp
add
add
add
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
insl
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
mov
or
xor
add
in
or
xor
add
sbb
add
dec
mov
add
andb
add
add
call
add
add
add
add
add
insb
stos
or
rolb
add
cmp
or
rolb
add
or
or
rolb
add
fsubrl
add
lods
mov
add
add
add
add
add
add
add
add
add
or
call
cmp
add
lods
les
add
add
add
or
in
add
in
or
in
add
add
leave
or
js
add
dec
int
add
rorl
add
add
add
add
movsb
rorl
add
add
xlat
or
add
add
adc
or
enter
or
call
add
add
add
add
fisttpl
add
add
add
add
js
or
faddl
add
push
loop
add
add
add
add
in
in
add
add
clc
jmp
add
jl
or
mov
add
sub
or
sbb
add
add
add
add
add
add
add
or
sub
add
nop
stc
or
mov
add
add
add
add
or
mov
add
aam
or
les
add
cwtl
add
nop
add
add
push
or
and
add
dec
or
add
add
add
add
add
add
or
adc
add
push
adc
adc
add
adc
adc
add
js
or
adc
add
mov
or
adc
add
mov
add
add
add
in
cmp
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
cmp
sub
mov
sub
xchg
sub
push
pop
mov
or
adc
pop
jbe
adc
dec
jns
pop
add
inc
cmp
lods
or
lods
lea
cmpb
dec
jg
nop
fwait
out
imul
into
cmovae
es
jo
jne
rol
mov
xchg
push
jbe
fildll
xchg
pop
mov
repnz
subl
mov
movsl
jnp
lret
push
push
cs
and
dec
inc
ss
mov
jne
sahf
adc
orb
sbbl
inc
mov
push
cmp
outsl
repz
sbb
pusha
les
sbb
hlt
mov
je
xchg
inc
arpl
lds
cltd
out
lret
loope
int
pop
hlt
call
add
pop
sbb
dec
xor
es
push
mov
pushw
jl
cmp
push
xor
addl
ljmp
test
in
out
popa
scas
and
ljmp
pushl
pop
jno
inc
dec
cld
or
jle
rcrl
push
arpl
mov
movsb
push
pop
mov
push
movsb
push
jecxz
imul
mov
pop
pop
clc
stos
mov
in
inc
inc
or
dec
xchg
push
pop
rcll
xlat
sbb
mov
xchg
pop
mov
pop
sub
lahf
std
in
push
or
pop
xor
hlt
cmpsl
loopne
test
mov
push
ja
sti
subl
sub
xor
fbstp
ss
int
mul
cmp
push
or
add
jo
js
push
cltd
mov
ret
and
repz
sbb
push
pop
xchg
xchg
dec
jmp
dec
push
out
int
loop
xchg
popf
fistpl
les
inc
cmp
xchg
ds
pop
lea
ret
inc
loop
or
out
inc
jl
push
cmp
xor
push
insb
sbb
mov
nop
or
add
ret
xlat
pop
inc
dec
mov
data16
mov
push
ret
mov
sub
push
cmp
fcoms
cmpsb
inc
cld
je
xchg
inc
fs
sub
ljmp
cmp
stc
fldt
mov
xor
shlb
ret
cltd
enter
cmpsl
pop
or
push
loope
sti
fcoml
roll
imul
pop
test
push
repz
adc
mov
pop
sbb
and
dec
cmpb
inc
sbb
sbb
ljmp
inc
sti
call
cmc
icebp
aam
cmpsl
lret
faddp
cmp
stc
adc
test
loope
bsr
mov
pushf
cmp
adc
jp
stc
bound
mov
mov
loop
mov
and
push
in
jmp
jno
cmp
clc
call
jmp
jne
add
addr16
inc
add
pop
dec
or
xchg
inc
inc
inc
pop
int3
dec
movsl
int3
inc
shll
mov
sub
in
popl
xchg
mov
das
inc
outsl
or
js
orl
adc
jno
fstpt
test
pop
repnz
bound
pop
stos
daa
fs
sahf
gs
std
aam
or
add
jl
std
sbb
add
and
inc
xor
lock
js
lods
inc
sub
or
lret
dec
xor
lods
test
pop
jae
in
lock
stc
insl
pushf
adc
adc
jge
pusha
not
xchg
pop
cmp
inc
xor
or
jns
mov
mov
test
loop
lahf
nop
shlb
mov
test
or
sub
enter
and
adc
or
add
and
push
cmp
jbe
inc
xchg
cld
imul
ret
fs
mov
and
mov
leave
push
push
iret
sbb
lods
fs
mov
fnstenv
mov
jg
jo
lds
into
cmpsb
add
movsb
mov
ljmp
lret
inc
aad
fwait
lahf
add
outsb
cmpsb
lret
xchg
repz
xchg
arpl
and
mov
shll
jmp
push
inc
adc
cmpb
dec
notb
sbb
int3
xor
sbb
mov
and
repz
sub
dec
push
xor
enter
push
adc
jnp
pop
aaa
lahf
xor
movsl
xchg
mov
xchg
and
shlb
push
inc
xchg
dec
outsl
shll
xchg
aam
adc
push
pop
lret
sub
push
and
movsl
jp
jo
daa
and
mov
es
repz
or
jmp
arpl
jae
cld
pop
jb
dec
lret
sets
push
mov
sbb
mov
or
mov
cmpsb
sbb
mulb
out
cld
push
arpl
push
shrl
jns
movsl
loop
outsb
in
sarb
popf
call
jmp
xchg
mov
ss
shr
push
and
push
int3
jae
xchg
test
inc
repnz
scas
inc
out
jge
jne
outsl
push
mov
dec
call
push
mov
xlat
xor
cmp
ret
fmul
sbb
cli
fwait
in
inc
xor
push
xchg
lods
sti
cmpsb
mov
and
pop
mov
or
pop
nop
or
movsb
cmp
in
mov
movsb
pop
push
stc
js
adc
jno
xchg
ja
sbb
lods
add
js
insb
out
jb
icebp
push
repnz
xchg
dec
mov
repz
xor
cmp
xchg
cli
call
xor
push
imul
mov
jns
test
add
imul
movsb
insb
sub
sub
pop
cltd
mov
stos
adc
sbb
incb
xor
xor
stos
movsb
add
jbe
xchg
or
movsl
mov
mov
xchg
call
add
std
test
inc
mov
in
or
mov
push
out
movsb
cld
fs
push
loopne
push
fcomp
or
push
jl
movsb
sub
pop
lods
sbb
cmp
dec
sbb
inc
test
pop
dec
je
push
jl
jle
adc
sbb
mov
pop
neg
data16
lcall
bswap
mov
xchg
mov
push
das
inc
fs
and
cld
cmp
xchg
jae
cmpsb
mov
je
ficoml
sti
push
jnp
xchg
ds
loope
inc
outsb
add
inc
inc
cmp
mov
rsqrtps
sbb
push
inc
add
ftst
jne
or
xchg
lods
xchg
popf
mov
xchg
jnp
jg
imul
fwait
pushf
push
mov
nop
int
add
mov
sarb
popa
xor
jbe
stos
in
or
int
sbb
dec
pop
mov
jl
outsb
sbb
icebp
out
sahf
jbe
mov
dec
pop
adc
inc
js
rorb
or
push
inc
xchg
fisubs
and
or
dec
dec
mov
inc
add
fistl
subps
pop
jp
dec
jns
sbb
jbe
movsl
stos
ljmpw
aam
stc
dec
and
test
lcall
and
sahf
icebp
mov
cltd
push
aad
loope
out
jg
out
xor
shrb
lret
cmp
iret
sub
push
lds
dec
mov
dec
std
clc
mov
rcr
or
adc
mov
shlb
xor
call
xchg
dec
cmp
xchg
push
push
cmpsl
test
push
out
into
les
sub
loope
pop
xchg
shrb
cmp
aas
movsl
jns
mov
dec
mov
and
dec
add
pop
lret
mov
cwtl
adc
inc
cmp
fs
jns
out
add
sbb
adc
dec
mov
aas
xchg
pop
or
fbld
sub
pop
xchg
scas
cmpsb
iret
test
movsb
test
das
sti
ret
nop
mov
jmp
insl
or
imul
loope
fstps
mov
outsl
jne
pop
add
loopne
movsb
aam
push
push
push
nop
stos
adc
imul
pop
adc
xchg
aad
sbb
mov
fdivrs
push
ret
cmpsb
push
cmc
dec
dec
test
adc
daa
shrl
mov
push
pusha
lahf
dec
and
pop
mov
arpl
mov
fs
or
dec
jge
mov
add
adc
insb
scas
out
cmpsl
pushf
enter
add
pop
jb
lods
mov
inc
dec
hlt
cwtl
pop
sti
mov
push
push
jne
adc
ljmp
dec
xor
inc
xchg
repnz
sbb
aas
dec
je
mov
add
cmpsb
in
jb
out
sbb
aas
loope
icebp
or
cmp
movsl
xor
jmp
inc
cmpl
xor
punpckhbw
pop
fstpl
in
pop
sub
out
jmp
test
mov
test
pop
push
jp
stc
outsb
test
mov
push
sub
clc
pop
leave
cmp
mov
xchg
adc
fs
or
imul
or
dec
lahf
into
fcomi
int3
mov
add
and
std
push
enter
pop
shrb
lods
scas
lahf
rorl
cmpsl
add
je
leave
dec
mov
sti
sbb
sarb
dec
repz
jb
adc
pop
gs
push
lods
int
and
sub
fimull
lahf
push
sub
hlt
jmp
xor
mov
cmp
movsl
xor
xchg
js
jg
aas
in
cmpsb
cmc
and
in
mov
xor
cwtl
or
push
and
dec
sahf
enter
cli
cmc
jecxz
adc
adc
outsb
fs
das
sti
in
fisubs
mov
mov
pop
lods
mull
imul
mov
unpcklps
repz
test
inc
add
xchg
inc
jge
and
out
andb
cltd
scas
mov
std
mov
adc
out
in
bound
xchg
scas
pop
add
push
xchg
xlat
mov
ljmp
push
pop
cmp
xchg
std
call
or
in
sub
pusha
cld
ljmp
ds
cmpsl
push
fstps
push
add
in
ret
sbbb
push
jb
xchg
pop
xchg
sti
and
adc
int3
fdivl
leave
add
xchg
mov
sti
sbb
cmp
jle
inc
cmpb
ljmp
xchg
loopne
daa
ror
mov
test
rcl
jae
pop
or
cmp
loope
adc
pop
jl
lret
mov
outsl
dec
jmp
in
lock
push
test
cmp
push
int
aaa
fwait
and
fucomip
cld
scas
aas
loop
aad
clc
and
bound
push
jo
rolb
push
in
adc
push
mov
dec
xor
dec
shrb
xor
dec
outsb
lret
dec
xchg
arpl
rcrl
mov
fs
shll
cli
out
repnz
test
popa
repz
adc
out
out
inc
popf
scas
testb
mov
stc
popa
out
sbb
cltd
rcrl
cmc
mov
mov
subl
lds
or
inc
or
add
xor
dec
js
jnp
enter
jle
in
loope
mov
insb
push
xor
xchg
push
ret
rorl
mov
pop
inc
loop
mov
or
insl
sbb
aaa
sarl
out
enter
js
bound
xchg
fildll
sbb
cwtl
push
nop
int3
cmp
and
cwtl
imull
sub
shlb
ret
add
cmp
loop
pushf
jae
xor
mov
xor
xor
or
sub
inc
mov
in
lahf
sbb
test
add
or
mov
ljmp
jns
popa
and
mov
test
sahf
xor
andl
movsl
adc
push
cmc
cmpsb
mov
in
cmpsl
xchg
popa
inc
stos
test
mov
ljmp
flds
aam
jecxz
jae
jbe
in
mov
xchg
in
les
push
jmp
hlt
sbb
xor
mov
aaa
imull
roll
inc
in
dec
mov
mov
dec
xchg
jmp
in
mov
xor
cmp
jne
shl
pop
and
stos
mov
fsubrp
cmp
pop
aas
xor
sub
jbe
push
mov
daa
in
inc
jle
cmp
xchg
ja
clc
mov
sbb
adc
sub
xchg
cmp
xlat
jle
lret
push
mov
pushf
outsl
adc
adc
rcr
or
jne
dec
jo
sbb
or
cmpsl
inc
in
dec
or
loopne
dec
jmp
call
lds
int3
dec
outsb
mov
icebp
imull
aaa
mov
mov
mov
aaa
jb
cld
mov
incb
sbb
pop
jae
xchg
ljmp
push
jmp
ja
add
addr16
into
cltd
jb
test
jno
leave
mov
rcrb
adc
out
daa
lret
scas
jecxz
mov
jecxz
xchg
bound
in
mov
jbe
jns
movb
hlt
enter
add
rcll
frstor
cmp
sub
adc
int3
cld
jp
insl
mov
mov
jbe
jp
sub
test
dec
and
and
mov
aas
push
sub
imul
ret
xor
push
push
hlt
mov
xor
or
inc
std
daa
sub
out
or
pop
push
mov
sub
int3
xchg
xchg
adc
int
adc
scas
fwait
cld
divb
xchg
cs
sub
mov
stos
fiaddl
lcall
icebp
out
xchg
or
cmc
pushf
xchg
in
lods
add
adc
cmpsb
jo
jnp
mov
and
in
xor
cwtl
xchg
xchg
cmp
daa
jnp
and
or
dec
aaa
ds
stos
mov
sbb
inc
leave
xchg
xrelease
out
xchg
xor
call
lea
sub
jb
in
fisubrs
jno
xchg
and
out
push
jmp
or
inc
pop
dec
xchg
hlt
bound
enter
setns
inc
mov
jmp
xchg
mov
sbb
xchg
in
pop
cmp
xor
outsl
shrl
stos
add
push
pop
xor
mov
add
notb
arpl
sub
jl
add
sbb
mov
sbb
bound
imull
jnp
scas
adcb
je
and
jnp
adc
sbb
pop
xor
dec
mov
sbb
sub
roll
adc
cmp
or
pop
fists
jmp
hlt
or
jge
dec
push
xlat
mov
mov
cmp
enter
xchg
add
add
lahf
pop
mov
movsb
push
lret
popa
adc
or
xor
push
or
add
aam
in
aad
xchg
jbe
push
in
bound
aad
push
int
out
mov
or
xchg
xor
push
call
sub
or
sbb
lods
es
push
adc
cmpsl
xor
in
adc
fnstsw
test
repnz
dec
mov
negl
pop
xchg
dec
mov
add
inc
shll
mov
pop
test
cli
push
mov
test
mov
ret
pusha
hlt
push
mov
in
xor
cli
pop
xor
sarl
mov
or
leave
jne
into
mov
jg
mov
cmc
mov
aas
sub
add
fistl
pop
ja
mov
jecxz
lods
sub
faddl
gs
negb
shrl
subl
rcll
ficoms
sub
dec
mov
ret
mov
add
pushf
mov
lret
add
aad
mov
hlt
in
aam
sub
push
repz
adc
ss
push
enter
sub
pop
add
fadd
loope
dec
cmc
inc
pusha
dec
dec
jp
fldcw
loope
jle
int
adc
sar
or
out
dec
adc
pop
mov
loop
cwtl
lahf
add
outsb
adc
xchg
xchg
sti
js
mov
int3
ja
ja
lret
cmp
test
mov
push
std
adcb
jl
add
adc
cli
jns
imul
stos
and
popa
lahf
into
sbb
scas
push
push
or
iret
jmp
incl
pop
imul
xchg
shrl
add
sub
addr16
jo
arpl
xchg
xor
mov
mov
rorl
loope
or
cmp
gs
imul
jl
adc
mov
and
lods
jp
bound
push
mov
outsl
les
jp
jge
pop
ss
ja
xchg
imul
pop
rcrb
jb
scas
call
cmc
out
jne
lds
pop
mov
mov
sub
sbb
mov
notl
sub
or
jae
sbb
jge
dec
in
xchg
jge
or
cwtl
sub
int
dec
fistl
mov
dec
sub
jae
push
clc
mov
scas
and
popf
xchg
fcoml
lds
scas
mov
cmp
nop
push
or
aas
dec
cwtl
xorl
mov
cld
mov
cmp
daa
mov
push
sub
cmp
pop
dec
int
shrb
ds
jnp
push
dec
and
mov
push
jl
frndint
push
mov
das
cmp
adc
ret
sbb
loop
addr16
push
lea
and
js
inc
sub
les
lret
or
push
or
out
rorl
dec
inc
out
ret
movsb
popf
inc
daa
push
or
xor
jge
xchg
cltd
int
pop
std
insl
pop
ljmp
mov
cmp
xor
fdivrs
stos
pop
clc
xor
clc
setle
stc
clc
jae
insb
mov
xor
cmp
outsl
mov
jo
pop
not
in
mov
adc
out
dec
add
in
mov
cmp
cmp
movsb
loopne
inc
jbe
pop
xchg
lods
jmp
jp
int3
and
shrb
mov
xorl
sahf
xchg
dec
xchg
daa
push
and
repz
pop
jne
adc
xchg
or
test
mov
pop
xor
jl
mov
mov
out
mov
cwtl
outsb
pop
cmpsl
int3
or
push
rolb
sti
popa
sbb
call
fwait
inc
dec
lea
scas
mov
iret
dec
mov
aam
jo
push
or
pop
pslld
sbb
ljmp
dec
pop
adc
push
mov
sub
mov
pop
in
lahf
bound
fiadds
ret
mov
sbb
push
push
mov
xor
ja
sahf
outsl
out
pop
push
int
in
inc
push
fs
clc
xchg
loop
pop
xchg
xchg
mov
stos
mov
lahf
sbb
in
or
imul
cmpsb
popf
push
into
outsb
sub
mov
pop
leave
int3
mov
popf
aas
pop
ja
fsubrs
dec
dec
into
lret
in
lahf
out
xor
xchg
imul
push
pop
push
jae
dec
jmp
jbe
push
dec
into
and
into
jns
or
fmuls
test
aas
shll
xor
and
repnz
js
sub
and
pop
push
inc
je
jle
aaa
clc
enter
ret
push
push
mov
gs
out
mov
pop
sti
inc
je
sbb
mov
push
loop
jnp
std
mov
insb
out
mov
movsb
pop
cwtl
iret
int
popa
std
cmp
lret
jmp
sti
daa
sbb
dec
imul
clc
pop
fisubs
dec
lcall
mov
pop
je
cli
repz
lds
push
push
bound
adc
mov
call
fucomp
sub
pop
and
push
or
lods
insl
into
imul
shll
cwtl
testb
jge
add
xor
add
inc
shl
sub
ret
aam
insb
jne
sub
aaa
or
lret
insb
dec
nop
fucom
out
jge
jge
insl
je
lcall
or
jbe
cmc
test
sbb
xchg
loope
repnz
mov
nop
add
sbb
mov
cmp
cli
int
and
out
or
mov
stos
add
or
jns
fwait
insl
popf
dec
repz
push
ss
repnz
jns
repz
or
jns
lahf
outsb
mov
imul
mov
mov
mov
push
lock
pop
movsb
mov
mov
daa
and
jno
loope
sbb
mov
xchg
nop
fabs
mov
sbb
dec
mov
pop
xlat
inc
xlat
cmp
inc
nop
leave
decl
shrl
leave
rcrl
mov
and
sbb
aad
jp
inc
inc
jecxz
xlat
test
in
and
popa
or
pop
out
sub
out
push
inc
aas
push
not
mul
dec
aam
mov
sbb
shrl
cs
mov
rol
in
sti
imul
bound
cmp
jp
adc
push
sbb
pop
xor
jne
lds
test
mov
mov
aaa
out
mov
repz
mov
jo
xchg
mov
lahf
mov
mov
insl
cli
adc
sbb
pop
mov
cwtl
add
dec
movsb
mov
fwait
leave
push
sahf
pop
pop
stos
mov
pop
mov
jl
out
jp
dec
jne
mov
in
in
stos
sub
inc
cli
pop
sbb
shrl
je
adc
pop
loope
sub
mov
stos
hlt
inc
aas
cwtl
push
mov
sub
pushf
xchg
jo
and
sbb
in
fsubrp
xorb
xor
sahf
dec
int3
das
mov
and
stos
mov
dec
push
push
mov
gs
nop
sub
push
pushf
jg
dec
outsl
data16
pop
mov
mov
mov
sub
lods
mov
push
movsb
shrb
movsl
mov
sti
out
mov
inc
xor
shll
outsl
push
sarb
sub
mov
stos
mov
mov
cmpsl
sbb
adc
or
and
daa
aam
push
and
mov
xchg
dec
pop
dec
add
lods
icebp
adc
mov
fbstp
call
sub
and
pop
push
mov
cmpw
shll
push
ret
mov
adc
push
imul
aas
dec
sbb
loopne
sub
mov
std
aas
xchg
jnp
inc
xor
sub
movsl
aas
ret
call
pop
pop
stos
das
mull
cmpb
fistps
lahf
xor
inc
js
stos
mov
dec
pop
into
pop
mov
cmpsb
cld
inc
push
xor
add
cwtl
pop
xor
mov
aad
cmp
cli
addl
or
aaa
push
sub
pop
jmp
pusha
xchg
pop
push
inc
push
out
xor
rcrb
sbb
sbb
insl
repz
imul
add
mov
popa
add
pop
and
add
cld
jmp
add
cltd
xor
mov
ret
push
mov
pop
call
jb
cs
loope
sub
pop
mov
dec
sbb
inc
cmc
pop
inc
push
das
mov
push
mov
adc
adc
rclb
ds
in
movsl
push
push
out
xchg
imul
aas
arpl
iret
sub
jl
lea
sbb
inc
ss
cli
lret
push
add
mov
repnz
jp
sbb
inc
push
pop
inc
add
dec
mov
xor
mov
inc
outsl
test
pop
lret
jecxz
or
lcall
ljmp
mov
test
mov
mov
lret
mov
imul
and
insb
push
fs
daa
xchg
mov
and
popa
mov
jae
outsb
stos
dec
sahf
adc
leave
xchg
mov
ljmp
push
jecxz
fcoml
aad
inc
daa
sahf
outsl
ret
lock
push
pop
clc
xorb
and
jge
adc
sbb
pop
jbe
pushf
mov
dec
test
or
mov
push
cs
aas
loopne
jne
shrb
arpl
dec
add
out
mov
test
push
jp
push
pop
ss
test
xchg
cmp
cmp
lahf
test
jae
in
push
dec
adc
xchg
xor
sub
dec
fwait
leave
inc
in
cmp
mov
lods
pop
jp
or
andl
scas
rcll
pop
push
push
aaa
jno
or
es
rolb
mov
pop
movsl
movsl
cmpsb
lret
jge
clc
xchg
sub
fstps
les
mov
xor
mov
inc
sti
mov
cmp
mov
test
push
mov
mov
sarb
xor
sub
cmp
push
mov
cld
scas
scas
jmp
clc
lock
shlb
insl
enter
aam
or
mov
mov
add
aam
inc
stc
or
imul
daa
mov
dec
fcompp
and
sub
xor
jge
scas
jmp
xchg
popl
jle
cmpsl
inc
imulb
cmp
out
orl
sbb
ds
movsl
lahf
jnp
fbstp
jno
repnz
int
call
mov
inc
dec
add
lcall
push
jbe
push
cld
nop
sbbb
pop
lret
or
or
test
and
adc
popa
jbe
mov
cmc
and
test
and
mov
fidivrl
push
jnp
sbb
int
out
add
in
les
popa
inc
aad
fdivrl
lea
mov
inc
push
cmpsb
cmp
gs
jne
dec
mov
jecxz
lcall
je
fst
mov
mov
insl
sub
arpl
xor
and
mov
mov
call
loopne
fidivl
out
lahf
movsb
daa
out
je
adc
inc
pop
xchg
add
into
jg
pop
jbe
and
shll
jle
movsb
inc
cmpsl
or
cmp
aam
jle
shrl
or
jg
cmp
icebp
pop
push
inc
ret
repz
scas
repnz
xor
movsl
push
sbb
stos
inc
inc
rorl
lock
cmp
and
dec
dec
lcall
lock
adc
and
pop
ret
mov
daa
dec
push
jge
lret
jns
imul
or
and
ret
sar
sub
cmp
jp
jae
out
sub
inc
adc
loopne
lods
add
fadds
outsl
sahf
shr
loopne
mov
hlt
mov
xchg
jns
cwtl
mov
aaa
pop
in
lods
xor
and
movsl
int3
or
adc
xor
imul
xchg
ja
test
stos
sahf
mov
stos
sub
xchg
cld
adc
mov
sub
pushf
iret
orb
jne
stos
push
push
mov
lcall
pop
cmp
nop
push
iret
sub
iret
lcall
inc
inc
sub
inc
idivb
pop
push
call
test
add
int
inc
adc
ljmp
je
pop
and
mov
orb
cwtl
popf
pop
push
loop
les
add
xor
outsb
fsubrs
xchg
jne
icebp
or
imul
dec
sub
fdivrl
mov
adc
fcoms
cmp
into
xor
pop
sahf
jmp
mov
dec
sbb
shrb
fbld
loopne
addr16
jmp
push
sbb
push
ljmpw
cmp
repnz
lods
mov
sbb
push
mov
mov
rcll
mov
push
lea
cwtl
clc
test
sbb
dec
outsl
movsl
adc
and
popf
bound
addr16
mov
insl
cmp
outsl
add
dec
sub
jns
js
dec
fistpll
mov
fwait
jb
imul
push
scas
cmp
mov
icebp
inc
pop
sub
js
cmpsb
inc
lret
shl
popf
push
aaa
iret
mov
fsubrl
ja
das
cmp
out
inc
int3
mov
sbb
mov
inc
xor
jmp
fisubl
int3
mov
aam
add
addl
out
test
xor
je
adc
cwtl
xor
clc
sbb
es
inc
cmp
pop
sti
loope
inc
out
xchg
push
dec
mov
aaa
in
sbb
or
adc
inc
sti
enter
adcl
sbb
in
push
pop
pop
lods
sub
push
out
sbb
jo
imul
ss
mov
movsl
jl
add
and
shr
mov
movsb
out
xchg
out
push
or
call
dec
mov
and
push
arpl
adc
fimuls
push
mov
lea
adc
sub
js
popf
and
cmp
cmp
les
xchg
iret
imul
add
mov
das
scas
inc
mov
inc
jmp
pop
outsl
lret
cs
mov
jecxz
inc
or
sbb
or
aaa
sub
push
cmp
dec
outsl
mov
call
pop
sahf
sbbl
cmpsl
or
or
ja
inc
sbb
push
mov
fwait
stos
xor
and
xchg
arpl
sbb
inc
jp,pt
sub
dec
dec
hlt
aam
cs
insb
cwtl
shl
ds
sub
fadds
jg
insl
stos
imul
inc
mov
push
push
xchg
outsb
cld
adc
decb
adc
addr16
inc
or
imul
enter
sti
or
dec
les
pop
in
add
cmp
std
mov
and
rcll
aam
data16
and
mov
rcrl
jl
jecxz
inc
dec
jnp
fwait
jl
arpl
or
mov
aam
inc
jnp
xchg
insl
fistl
std
imul
aad
jne
sbb
out
sub
imul
add
add
mov
cmp
adc
in
gs
jge
mov
add
fcmovbe
push
push
cld
movsb
hlt
and
shll
dec
inc
addr16
leave
scas
out
or
push
or
fdivrs
inc
push
pusha
mov
aaa
xchg
adc
hlt
pop
cmp
pop
inc
test
mov
xor
out
sbb
or
pop
roll
ja
mov
jae
and
test
inc
lcall
add
dec
cli
xchg
add
dec
xor
jb
popa
test
adc
test
mov
lahf
jne
jge
mov
pop
cmp
call
js
cmp
popf
push
enter
pop
mov
adc
push
adc
and
jmp
shlb
insl
sub
shlb
mov
hlt
adc
cmp
inc
or
xchg
ror
pop
cmp
aam
jge
fidivrl
jae
ss
mov
fs
cs
adc
push
xchg
mov
pop
mov
dec
and
jbe
dec
push
jecxz
xchg
bound
jns
add
xchg
fisubrl
imul
outsl
inc
or
or
inc
cli
movsb
sbb
sbb
mov
adc
loop
jns
and
lock
or
push
dec
jge
mov
cli
test
xchg
jle
add
and
mov
and
cmp
add
jb
xchg
popa
add
add
shl
pop
push
insb
call
cmp
xchg
pop
xor
jg
ljmp
sbb
pop
cmp
mov
and
cmp
out
jp,pn
sub
xchg
mov
mov
adc
cltd
fs
fisttpll
xor
adc
loope
or
xchg
fwait
add
mov
push
mov
add
jg
and
lret
sub
jbe
jl
xor
in
jb
rcll
inc
cmp
lods
xor
cmp
sub
mov
test
inc
sbb
lahf
lods
jb
add
outsl
sub
movsb
inc
push
jg
dec
push
or
xorb
lret
bound
or
pop
sbb
sub
sub
pop
cmp
sbb
movsl
cmpsb
xchg
cmp
jb
jb
data16
rorb
sub
andb
outsb
mov
cltd
and
clc
inc
dec
mov
xchg
cmp
adc
sub
in
ja
test
out
insb
xor
imul
and
cmp
or
pushf
sbbl
add
dec
mov
out
call
jbe
push
shrb
stc
daa
adc
or
addr16
je
dec
shrb
cmp
cmovge
fmuls
pop
jbe
jno
cmc
add
sbb
cmp
inc
fdivrl
jle
es
push
cmc
in
add
test
cld
subl
cmc
bound
sarb
mov
fidivs
scas
jbe
sbb
pop
sbb
jl
leave
dec
movsl
jl
mov
clc
xchg
js
test
mov
cmp
int3
xchg
sarl
and
dec
sub
jmp
xchg
outsb
jno
push
in
stc
test
dec
daa
in
shrb
fs
dec
mov
xchg
fidivrl
insl
push
rolb
ja
push
sub
ja
popa
dec
insb
scas
push
push
push
or
jno
ljmp
xor
push
enter
pop
inc
insl
mov
int3
sub
push
mov
ljmp
inc
pop
pusha
out
xor
pop
jns
adc
jbe
and
inc
mov
add
out
ljmp
sbb
jnp
xchg
ficoms
mov
cmp
shlb
add
dec
pop
adc
pop
aad
cmp
pop
je
mov
xchg
test
out
xchg
fimull
fisubrs
jp
push
mov
mov
cltd
pushf
div
in
movsb
das
mov
mov
fnstsw
sub
sub
push
dec
subb
xchg
pop
dec
cmpsb
and
jnp
push
imul
lods
into
xchg
imul
xor
leave
.byte
pop
sbb
mov
inc
cmp
call
adc
in
icebp
imul
pop
mov
aaa
shll
bnd
scas
test
xchg
scas
mulb
jge
mov
push
stos
pusha
jne
sub
xchg
lods
mov
jecxz
sbb
jg
dec
mov
jecxz
or
xchg
pusha
mov
dec
int3
icebp
and
xor
lcall
leave
adc
leave
mov
inc
scas
sub
cmp
jns
scas
movsb
mov
mov
imul
call
mov
lahf
arpl
mov
stos
pop
pushf
jp
mov
xor
sbb
aaa
pop
les
push
jle
roll
jo
ret
pop
in
in
mov
or
inc
and
out
pop
cli
cmp
push
cmp
push
push
cs
cmpsl
rcr
adc
gs
dec
fldpi
outsb
lock
dec
dec
and
lret
popf
cwtl
sbbb
cmp
push
add
movsb
xlat
mov
mov
cmpsb
xor
ljmp
or
filds
mov
aad
rolb
cli
dec
insl
jp
mov
adc
xchg
xchg
loop
jmp
gs
mov
das
mov
adc
stc
mov
ja
cs
push
stos
push
bswap
scas
mov
jno
mov
stc
fdivrl
push
xchg
pop
push
add
nop
popa
cwtl
add
imul
in
pusha
xor
popf
mov
fwait
jl
inc
mov
mov
in
fninit
mov
jns
xchg
adc
ret
psubw
add
mov
fwait
inc
into
cltd
aas
mul
je
out
sti
lahf
pop
push
mov
hlt
and
cwtl
xchg
pushl
dec
repnz
cwtl
xchg
mov
mov
mov
cmp
in
jecxz
jp
xchg
jge
mov
hlt
pusha
xchg
or
mov
add
xor
sub
icebp
into
jb
in
mov
repnz
sub
js
dec
xor
gs
sub
or
das
mov
out
outsb
repz
pop
mov
cmc
pusha
rcll
outsl
jmp
push
mov
aad
jg
add
mov
aam
push
xlat
pop
aam
mov
call
inc
add
in
jnp
cltd
bound
or
pop
in
pop
out
scas
cmp
push
loope
or
xorl
cltd
push
fstl
lret
mov
xchg
inc
mov
push
rorl
clc
mov
and
and
scas
loop
gs
mov
mov
adc
sub
and
xor
dec
lret
cmpsl
inc
sbb
nop
scas
xchg
fsub
pop
mov
jnp
sbb
sbb
pop
movsl
rol
jl
mov
lds
sahf
aas
pop
xchg
aad
or
loopne
push
cmp
sbb
lret
lea
inc
je
xchg
aam
das
mov
dec
rclb
outsl
fadds
pusha
cmpl
dec
test
bound
pop
gs
dec
repz
aad
mov
stos
xchg
insb
cwtl
jmp
out
cltd
adc
add
shll
push
fistpll
addr16
aas
movb
jns
sub
inc
mov
push
shll
mov
cmp
mov
push
aaa
mov
lods
out
jg
popf
xchg
xchg
pop
inc
cmp
push
or
jne
inc
fdivrl
mov
stos
xor
sti
mov
repnz
push
push
push
nop
mov
mov
hlt
xchg
or
stos
adc
add
pop
or
bound
pop
and
sbb
int
inc
test
lcall
test
mov
mov
xchg
mov
mov
push
dec
lock
pushf
jg
cmp
xchg
xor
pop
jbe
ucomiss
fisubrl
es
xor
xor
pusha
pushf
jae
inc
test
add
leave
mov
mov
leave
pop
cli
call
jmp
ja
aaa
jns
cwtl
imul
bound
popf
xchg
ljmp
out
dec
mov
inc
in
mov
add
jp
or
stc
xor
xor
ss
inc
cltd
rcrb
xchg
orb
aad
mov
dec
xchg
or
fsubrl
popa
ret
dec
xchg
adc
push
mov
cmpsb
cwtl
gs
ret
sbb
dec
pop
inc
cmpsb
sub
cmp
pslld
out
jecxz
pop
je
ds
xchg
jl
dec
jae
icebp
in
or
insl
sti
movsl
cld
outsb
stos
stos
stos
clc
lock
mov
xchg
xchg
testl
mov
mov
fnsave
sub
fcmovnbe
rcrl
jmp
outsb
cli
loop
xchg
sahf
out
jmp
daa
out
insb
pop
pushl
inc
cmp
jns
les
aam
insb
dec
and
loop
loop,pn
inc
sub
xor
into
ja
mov
adc
push
xchg
adc
add
dec
std
mov
dec
out
dec
add
push
stos
fidivrl
jle
xchg
fldcw
mov
cmp
ret
sbb
mov
mov
mov
jne
or
mov
and
int
inc
imul
push
push
mov
add
jg
pop
stos
test
movl
xchg
xchg
sbb
mov
and
xor
mov
aaa
dec
shlb
lcall
and
les
lds
jl
push
loopne
test
jns
mov
push
adc
jle
cs
sub
jle
xchg
orb
mov
pop
addr16
outsb
dec
popa
cmpsb
xchg
jge
std
mov
shll
ret
inc
sbb
push
scas
or
inc
in
inc
and
addr16
jno
push
cmpsb
add
lret
sbb
mov
leave
push
imul
fcmovne
or
jne
lods
mov
in
sub
mov
jmp
cmc
cwtl
testl
jge
fstpt
push
mov
sbb
mov
inc
xor
push
lea
push
mov
cwtl
cmp
arpl
std
pop
das
popf
sahf
dec
call
pop
dec
lods
mov
jle
shlb
out
dec
cs
outsb
std
jbe
add
jns
aaa
push
outsb
pop
xchg
push
xchg
jnp
cmp
inc
fwait
and
push
push
sub
inc
lcall
gs
or
add
in
or
int
dec
addr16
mov
in
xchg
mov
lds
mov
rclb
or
push
jl
cmp
dec
sbb
pop
cmpsl
test
mov
jbe
mov
sbb
sub
scas
sarb
add
ss
mov
enter
inc
add
jp
mov
cmp
les
es
jl
xchg
mov
lds
push
insl
imul
inc
inc
mov
mov
push
ja
push
fdiv
or
loop
nop
popf
pushf
push
xchg
xor
dec
push
dec
pop
push
pop
js
gs
pop
mov
sub
push
xor
xchg
sbb
push
mov
gs
cmp
in
mov
adc
sbb
add
repz
jns
adc
stos
callw
xchg
mov
ss
inc
push
sub
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
add
and
pushf
movsl
jp
or
pop
push
call
dec
adc
div
fs
xchg
ror
into
out
cld
test
add
pop
pop
add
mov
mov
or
mov
call
loop
xor
cmp
dec
loope
hlt
sbb
add
add
mov
pop
add
mov
sub
add
add
sub
push
popl
or
mov
sub
mov
dec
dec
push
mov
pop
cmp
jne
and
jmp
and
sahf
jg
xchg
stos
fwait
push
push
mov
pop
pop
jmp
add
es
mov
cmpb
sub
jl
arpl
inc
jle
mov
aad
test
and
mov
mov
popf
sbb
lret
jb
xor
add
arpl
xchg
arpl
arpl
addr16
xchg
dec
pop
repz
sbb
ret
test
ror
or
mov
fstpl
sub
sarb
andl
dec
sti
mov
push
dec
inc
or
imul
and
xor
jnp
push
stc
faddp
imul
daa
push
push
fsubl
test
jge
push
addr16
pop
push
jl
pop
addr16
dec
cmpsb
sbb
call
lds
or
cld
pop
xchg
arpl
mov
xor
jnp
push
sbb
jne
push
add
mov
push
out
call
mov
arpl
les
and
dec
mov
fnstenv
inc
lret
cld
xor
jge
test
pusha
inc
aam
lahf
cmp
sahf
cmpsl
and
or
out
fstp
and
pushf
and
filds
xchg
or
les
mov
fdivrl
mov
cmp
ja
push
lods
add
insl
and
xor
mov
enter
xchg
pop
lret
push
sbb
jg
andl
into
sub
lret
or
andl
subl
jb
or
pop
xor
cmc
lahf
mov
test
lahf
xor
in
das
cli
inc
cld
jmp
call
repnz
mov
shlb
or
cmp
jge
xlat
cld
push
push
orb
pop
mov
repnz
daa
pushf
dec
jg
pop
div
or
sbb
mov
fldz
lret
cmpsb
cltd
repnz
mov
mov
cld
sub
or
push
mov
pop
ja
movsl
data16
aas
iret
push
pop
out
dec
jle
or
cltd
mov
push
cmpsb
inc
out
adc
clc
fistps
adcb
repnz
stc
and
nop
test
pmaxsw
mov
repnz
mov
rcr
cmp
in
cmp
andb
push
sahf
jp
mov
cld
icebp
or
fwait
and
test
pushl
cmp
mov
js
or
shrl
push
or
ja
popa
or
xor
xchg
test
in
xor
xorl
adc
fstpl
int3
test
popf
dec
in
push
pop
loopne
out
or
fstpl
int3
movsl
popa
sub
xorl
or
fildl
cmp
pop
lods
or
add
or
xchg
lcall
push
pause
jbe
dec
xorl
push
mov
test
jb
ficoms
sbb
jp
or
jbe
sahf
jno
invd
or
fmull
xorl
or
pusha
pop
imul
addl
jp
orb
lea
sti
loopne
xorl
xchg
push
mov
data16
loopne
xorl
or
ja
dec
test
cmpsl
test
xchg
ror
dec
mov
xchg
hlt
xorl
ret
xchg
or
mov
adc
xorl
fwait
test
xchg
lcall
xchg
lds
adc
or
sub
imul
mov
loop
sti
fmull
xorl
or
push
pushf
lea
adc
or
lea
invd
or
adc
addl
fwait
dec
test
xchg
push
cmp
data16
xlat
or
add
pop
jmp
jp
jmp
addr16
fistpll
out
ficoms
mov
jne
cld
xorl
xorl
or
int3
lcall
add
xchg
xchg
jge
add
dec
xchg
dec
test
orb
or
cmp
loop
xchg
daa
dec
xchg
dec
and
orl
or
or
adc
ficoml
cltd
push
mov
sbb
loop
xchg
daa
dec
xchg
dec
and
cmc
jl
xor
sbb
jge
repz
adc
xorl
push
mov
sbb
loop
xchg
daa
dec
xchg
dec
xor
pop
adc
das
adc
xorl
push
mov
sbb
loop
xchg
daa
dec
xchg
dec
xor
add
xor
imul
add
call
or
lret
ja
or
adc
ficoml
cltd
push
mov
jp
mov
test
jbe
or
add
xor
imul
cmp
mov
jns
leave
or
ljmp
pop
adc
xorb
test
test
add
adc
stos
data16
fistps
push
xorb
incb
insl
lret
adc
xorl
or
ja
or
fstl
cld
loopne
xchg
add
jmp
pusha
stc
ljmp
xchg
push
inc
adc
addl
xchg
mov
lds
jbe
or
rorl
mov
jge
push
xorl
xchg
mov
add
mov
adc
inc
out
data16
mov
jl
cli
rorl
popa
cmp
mov
jnp
sub
inc
and
test
sub
dec
add
or
pop
sub
xlat
rcrl
add
sbb
cmc
mov
xor
bnd
cli
sbb
leave
jg
xchg
imul
inc
push
bound
sub
adc
adc
xchg
lret
or
ja
or
ja
or
ja
or
pop
pop
adc
mov
push
or
xorl
xor
jbe
int3
lcall
xor
ja
or
ja
or
lea
mov
sub
sbbb
popf
xchg
jno
or
loop
push
shld
jg
dec
mov
cmp
jns
loopne
adc
icebp
decl
pop
cmp
ljmp
push
xchg
fldt
inc
or
sbb
ret
pop
cmp
fldenv
fsubrs
xchg
adc
out
mov
mov
ss
ss
xchg
xchg
push
movsb
shlb
incb
jns
pop
sahf
and
push
jp
cmp
mov
sbb
push
sbb
incb
add
push
push
pop
enter
mov
in
call
ficoml
xchg
popl
sub
out
xchg
sbb
dec
pop
scas
push
dec
icebp
jg
pop
xchg
xchg
lea
jle
inc
inc
mov
add
xchg
negb
aaa
sbb
in
cltd
dec
out
lock
outsl
scas
cld
in
mov
jns
xchg
flds
dec
jne,pn
xor
sub
pushf
pushf
jnp
mov
out
in
mov
js
mov
cwtl
das
pop
repz
ss
dec
mov
xor
cmp
mov
sbb
sub
sbb
fisubl
and
push
fbstp
mov
and
and
dec
xor
int3
adcl
jae
jns
les
loopne
mov
stos
pop
stc
mov
xchg
fnstsw
push
mov
inc
jecxz
dec
bound
das
bound
cmp
outsl
push
add
addr16
push
sahf
sub
mov
lret
js
sbb
push
pusha
fisttpl
push
pushf
cmp
js
dec
cmp
sbb
mov
mov
loop
test
enter
jge
imul
lods
mov
lcall
jecxz
ss
fcoml
sbb
ja
jg
insl
stos
add
scas
xchg
xchg
xchg
sbb
pop
inc
push
out
fmuls
mov
daa
add
sbb
scas
sarb
outsl
pop
xor
call
outsb
rcr
xrelease
xchg
and
mov
sub
lods
ljmp
in
jbe
push
pop
lret
enter
sub
fcom
push
cld
ss
dec
pusha
and
jbe
cmp
jmp
sub
int
pusha
decb
mov
cmp
xor
cmp
int
inc
xchg
fsub
out
mov
cmpsb
in
mov
dec
jb
lods
imul
and
cli
mov
push
jae
mov
cld
pop
lds
mov
arpl
inc
movsb
mov
add
add
add
add
or
add
add
dec
add
dec
add
sub
rorb
adc
cmp
add
cmp
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cmp
add
cmp
cwtl
cmp
add
add
add
cmp
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
cmp
add
add
add
cmp
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
sbb
add
add
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
add
cmpsl
sbb
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
out
je
fbld
cmp
add
pop
cltd
pop
sbb
movsb
pop
pushf
and
dec
subl
pop
mov
pop
push
mov
rorb
popf
dec
xchg
mov
mov
push
test
add
movsl
loopne
mov
in
iret
adc
lock
cltd
in
cmp
and
lds
sub
hlt
add
sti
sub
xorb
mov
loopne
int3
pop
cmc
pushf
es
pop
iret
repnz
and
xor
mov
in
cmpsl
xchg
adc
adc
mov
enter
jb
stos
xor
jo
adc
leave
xor
daa
insb
pop
fcompl
lea
jmpw
xor
pop
cmp
jmp
push
sub
mov
movsl
jmp
pop
mov
out
push
lret
push
sti
fsubrl
bswap
adc
scas
lcall
movsl
cmp
and
add
jae
cltd
add
outsb
je
xchg
stc
mov
test
cmpsl
jae
add
sub
xchg
cmpsl
mov
movsl
cmpsb
sahf
int3
call
add
out
xchg
out
test
in
push
call
je
mov
pop
or
mov
jecxz
mov
inc
insb
dec
push
fcoms
les
inc
cltd
movsl
repnz
sahf
sbb
popf
mov
fisttpll
mov
jge
clc
mov
addr16
out
lahf
push
lret
loope
pusha
das
mov
sahf
cmc
std
into
dec
xchg
loopne
jnp
cwtl
mov
jmp
jge
std
xchg
loop
dec
xchg
ss
in
pop
push
push
dec
mov
xlat
js
data16
scas
or
andl
sahf
daa
xchg
sub
xor
mulb
or
lods
mov
jbe
iret
push
scas
mov
inc
les
sbb
lock
rorl
jge
pop
outsl
rcll
jmp
mov
adcl
sub
sbb
loopne
push
mov
loopne
cmpsl
int
mov
pop
and
das
lret
and
push
test
inc
adcl
ret
xor
mov
pusha
in
out
mov
add
je
cmpsb
daa
test
sbb
pop
and
outsl
popf
fdivl
js
push
xchg
xchg
mov
xchg
pop
jmp
xchg
or
outsb
cmp
sbb
test
inc
inc
add
jne
and
xchg
dec
push
add
xor
fnstcw
in
jae
xchg
shlb
stos
pop
test
or
inc
sub
int
into
stc
lcall
xor
sbb
ret
sub
dec
in
jecxz
and
sbbb
inc
mov
xchg
nop
ss
push
lcall
jb
mov
cmp
adc
ljmp
mov
adc
fcomp
rorb
push
lahf
lods
fidivrs
mov
pop
pop
cmc
add
add
stos
enter
fs
outsl
inc
repnz
inc
push
in
sbb
jle
gs
cmpsl
mov
addr16
sub
mov
sub
adc
icebp
push
iret
xor
sti
out
and
pop
dec
pop
jns
or
sti
add
shrl
int3
ret
int3
popf
xchg
jecxz
add
imul
sub
lock
fldl
pop
bnd
in
scas
outsb
ds
adc
dec
mov
jne
sbb
mov
arpl
inc
push
jnp
pop
fmuls
roll
icebp
rclb
mov
scas
pop
aaa
jns
in
mov
pop
cmc
stc
push
and
mov
cltd
push
popf
xchg
es
add
mov
cmp
ret
idivb
arpl
xlat
add
inc
bound
fsts
mov
cli
ja
or
ror
xlat
fdivrs
cs
ds
dec
in
push
outsl
mov
div
inc
pop
jp
xchg
cmpl
popf
push
enter
aad
push
test
mov
adc
imul
fcomi
arpl
aam
clc
xchg
sbb
add
iret
lods
sarb
push
pop
mov
pop
push
shlb
pusha
repz
or
sub
loop
gs
pop
pop
cwtl
cs
je
xor
mov
sbb
mov
mov
mov
pop
push
imul
testl
adc
mov
scas
push
aad
pushf
std
movsb
daa
sbb
sbb
stos
pop
imul
jbe
ljmp
dec
je
jg
sub
aam
in
or
sbb
add
pop
cmp
mov
adc
pop
push
hlt
and
cs
push
push
xchg
aad
mov
mov
cli
adcb
push
xchg
adc
inc
sti
loopne
rcrl
push
sbb
jae
mov
xor
mov
jnp
or
xchg
sbb
adc
jmp
cmp
push
test
lret
inc
scas
cmovp
cmp
scas
not
mov
cli
out
sbb
xchg
pushf
outsl
mov
mov
ret
adcb
mov
icebp
inc
inc
dec
test
push
push
xchg
adc
dec
cltd
es
or
push
movsb
mov
or
les
stos
sub
das
ds
hlt
mov
sub
ret
pop
xchg
inc
push
cmp
or
cmp
rolb
adc
jbe
mov
dec
nop
leave
lcall
mov
aad
mov
mov
in
loop
daa
mov
fistl
pop
cmpsl
loopne
mov
clc
jp
jns
fsubs
arpl
jno
and
push
inc
cmpsb
mov
cmp
sub
and
dec
jae
jno
xor
pop
or
lds
inc
fdivrl
int
iret
push
cmp
push
jle
fnstsw
popa
hlt
xor
xor
mov
ljmp
shrb
sbb
out
mov
outsl
daa
into
adc
push
sbb
dec
sub
push
adc
rclb
cmp
mov
push
pop
pop
inc
sub
jmp
jle
dec
in
add
loopne
aam
mov
mov
inc
inc
gs
iret
and
jg
rorl
inc
pop
lods
mov
fsubl
add
cmpsl
call
push
xchg
pop
test
frstor
push
jmp
mov
jns
adc
loope
inc
mov
repz
mov
jbe
fsubrs
mov
out
push
push
cmp
mov
cmpsb
mov
sub
setl
add
popa
mov
sub
das
aas
jg
ficompl
call
or
inc
imul
in
pop
sub
movsl
lods
out
cmp
dec
movsl
pushf
stos
and
mov
mov
scas
push
jns
in
jbe
shl
cmpsl
cmp
inc
sbb
pop
pop
sub
fs
sbb
fcompl
xchg
imul
in
aam
jmp
sbb
mov
cmp
cmp
sub
dec
fisttpll
xchg
stos
clc
stc
imul
pop
mov
jns
mov
imul
xor
add
insl
mov
dec
aad
mov
mov
xbegin
shll
add
mov
dec
jne
bnd
sbb
inc
adc
xchg
sub
cmpps
mov
or
and
insb
mov
push
push
mov
movsl
jge
or
cwtl
sti
call
mov
.byte
