jle
push
sbb
or
sbb
inc
or
mov
lret
divb
sub
pop
lods
shl
dec
lds
stc
mov
aam
cmp
or
test
or
out
jp
or
rcrb
ds
insl
repnz
out
sar
inc
xlat
jne
js
mov
int3
ret
jno
fistps
push
aas
test
repz
out
test
movsl
xor
pop
mov
or
and
pop
and
imul
mov
inc
sub
lods
enter
imul
mov
jp
push
add
fs
loop
xchg
out
or
test
test
mov
lret
daa
pop
lret
dec
call
jmp
dec
jnp
mov
push
out
add
push
and
stc
loope
xchg
push
ret
fwait
gs
add
enter
mov
fs
ds
push
adc
cmp
pusha
or
mov
lea
je
cmc
clc
cmp
pusha
pushl
pushl
ret
neg
cmc
stc
ror
movl
pushw
popfw
jmp
call
jg
or
imul
xor
push
or
sbb
outsl
cltd
adc
xor
bound
or
or
jg
pusha
dec
ja
and
ja
icebp
sbb
mov
add
dec
mov
mov
mov
shrb
mov
inc
popa
nop
test
jmp
jnp
pop
int3
loop
cmpsl
and
or
push
mov
push
pop
jo
add
subb
popf
xchg
mov
inc
mov
or
icebp
push
cld
sub
fnsave
cld
repnz
rorb
pop
in
insb
mov
mov
mov
add
insl
repnz
aaa
pop
or
mov
pop
mov
call
test
push
ret
dec
shrb
js
fsubrl
jbe
fmulp
cmc
test
mov
and
add
stos
adc
jecxz
addr16
loop
jb
cmc
fsubs
lea
cmpsb
movsb
mov
jo
mov
enter
dec
adc
mov
movsl
shlb
cmp
lret
xchg
sub
dec
in
insl
lods
gs
test
pop
js
mov
inc
ret
add
mov
in
inc
and
ljmp
inc
mov
arpl
mov
imulb
ds
inc
mov
fidivl
dec
jnp
testl
es
sub
jp,pt
add
adc
imul
sbb
xchg
out
repz
inc
cmp
sbb
andl
dec
xor
sbb
or
fs
mov
or
jmp
shll
cmc
jge
mov
stc
jne
add
xchg
mov
mov
aad
sub
dec
mov
pop
jecxz
shll
sbb
pop
mov
outsb
out
flds
test
mov
adc
or
leave
xorl
adc
mov
cmp
jl
jl
idivl
pop
inc
sbb
push
aaa
add
sti
sub
add
and
push
cli
bound
jecxz
adc
imul
cmp
test
stos
btcl
mov
ljmp
out
cwtl
jmp
adc
add
ret
or
sub
sub
cmp
sub
push
mov
jl
adc
js
iretw
pop
mov
mov
ljmp
ret
dec
xchg
rcrl
jecxz
repnz
sbb
cmp
inc
cmp
jno
pop
cmp
test
insl
adc
dec
push
xchg
repz
mov
cltd
and
aam
mov
lds
dec
dec
mov
outsl
fs
scas
push
fldenv
sbb
dec
mov
daa
pop
enter
cmpl
jne
push
sbb
dec
ja
jmp
adc
inc
xor
cmp
in
fstpt
loopne
mov
aaa
fisubrl
int3
xor
hlt
and
scas
xor
cmpsb
outsl
xlat
ljmp
pop
xchg
mov
or
push
out
iret
enter
sbb
xor
out
in
shll
stos
dec
in
popf
xchg
xchg
pop
and
push
mov
mov
rcr
js
movsl
aam
mov
and
cmpsb
and
push
stos
mov
pushf
and
nop
sbb
xor
xchg
out
outsl
out
das
jg
test
loop
in
loopne
push
adc
adc
in
xlat
arpl
xor
lods
sbb
pushf
enter
push
subb
je
movq
out
aas
outsb
xor
pop
fdiv
mov
faddl
int
adc
push
mov
enter
lock
pop
pushf
xchg
shrl
dec
rorl
aas
outsb
loopne
sbb
xchg
addr16
jno
sahf
sbb
pop
aam
dec
lds
xor
stos
sti
jecxz
pop
xchg
inc
into
jae
enter
dec
aad
repnz
stos
lahf
stos
repnz
lahf
aaa
fcompl
repz
in
pop
in
enter
pop
mov
pop
fisubs
mov
dec
jbe
ds
inc
adc
add
jl
inc
xchg
clc
jo
jecxz
sbb
int
jnp
pusha
fiaddl
mov
stos
das
stos
push
cmp
push
dec
xor
mov
ret
repnz
and
aad
cmp
rcrb
repnz
leave
ljmp
repnz
or
stos
inc
loope,pn
inc
jmp
or
cltd
sub
xchg
iret
das
jmp
insb
mov
pop
mov
ret
pop
xlat
adc
test
into
fldcw
sub
enter
stos
mov
and
mov
push
mov
pop
push
gs
pop
jl
xor
rorl
cmc
push
adc
adc
or
test
cmp
cltd
jae
ljmp
mov
sub
add
or
enter
xorb
das
and
pop
or
pop
xchg
pop
push
popf
loope
add
nop
push
push
stos
jp
rol
lods
aas
subl
adc
mov
sbb
test
pop
loopne
cmc
in
dec
movsl
or
lods
mov
cli
pop
xorb
daa
pop
pop
adc
or
aad
dec
xchg
mov
aas
jp
leave
lods
loopne
enter
xchg
out
xchg
push
mov
mov
mov
jo
push
or
rclb
dec
jg
ss
xor
lds
cmp
subb
pop
add
sub
or
hlt
negb
mov
stos
or
lock
dec
aas
sti
jg
mov
xchg
push
rolb
mov
cmp
xchg
test
out
sub
insb
ret
idivb
xlat
mov
aad
sub
pop
fwait
paddusb
xchg
repnz
cwtl
pop
lods
cmp
aad
cmpsb
jb
cmpsb
mov
fcomi
mov
mov
mov
lods
test
inc
push
aam
loopne
jp
fucomi
addl
add
test
mov
lods
sbb
shrb
jb
mov
pop
fldt
lods
test
inc
pop
mov
pop
out
and
lret
and
xchg
fcompl
andb
jbe
jle
std
shl
and
add
inc
cmpsb
out
inc
mov
in
aad
int
ret
clc
mov
mov
dec
outsb
lock
lea
lret
popa
lods
stc
jnp
insl
xor
orb
pushf
mov
cwtl
xor
sub
lock
add
int3
popw
les
lcall
push
fwait
and
ret
lds
fidivrs
jbe
stos
aaa
mov
mov
cs
jp
sub
jb
mov
clc
inc
adc
sub
lods
sbb
xchg
sbb
cmp
push
push
push
in
aas
cmpsl
rorl
cld
je
jb
jbe
xchg
sarb
mov
pusha
test
outsl
xlat
pop
lock
mov
xchg
in
mov
jae
pop
inc
dec
mov
and
jmp
cmpsb
jbe
mov
out
mov
mov
jp
cli
push
out
jae
xchg
pop
ljmp
jecxz
roll
iret
inc
push
jbe
cmp
inc
cmpsb
push
ss
add
pop
mov
es
xorb
leave
pop
out
iret
add
cmp
lods
sbb
mov
out
decb
mov
or
inc
js
sbb
addl
lods
andb
ljmp
inc
popa
and
pop
cmp
add
in
and
jno
jmp
inc
insb
dec
cwtl
adc
jne
add
call
pusha
lea
jae
bt
push
cmp
jmp
add
movb
or
push
jmp
bt
pusha
not
push
stc
call
push
dec
xor
sbb
testb
or
loopne
jl
push
iret
aaa
mov
icebp
jns
jge
mov
movsl
jmp
mov
hlt
mov
inc
mov
push
lret
mov
jns
add
or
cwtl
enter
push
cmp
dec
enter
inc
scas
mov
popa
jb
pop
shl
sub
jno
inc
mov
fildl
daa
mov
int3
outsl
rep
push
sarl
xor
fisubs
pop
outsl
mov
inc
mov
pop
ljmp
inc
mov
les
enter
or
inc
fbstp
sarl
xor
gs
add
mov
popf
push
sub
xor
and
cmp
data16
scas
lcall
in
and
jmp
not
mov
adc
ljmp
cltd
xchg
and
mov
scas
and
cmc
mov
loop
in
fdivrl
fiadds
dec
fldt
fisttps
ss
mov
mov
jecxz
clc
popf
pop
xchg
lret
leave
mov
mov
sub
loope
popf
aam
arpl
dec
mov
imul
addr16
das
mov
mov
lahf
pop
jo
xlat
in
out
shlb
fnstenv
pop
int
cli
incb
push
cmp
scas
lods
adc
jp
lods
mov
mov
loop
inc
addb
pushl
out
cmp
mov
sbb
push
aad
mov
imul
cmp
xchg
dec
ret
push
mov
out
jo
mov
xchg
ret
jbe
repnz
daa
nop
xchg
pop
dec
bound
inc
and
test
pushf
mov
movb
lea
jmp
fs
subb
call
fadds
push
xchg
sbb
loop
add
insl
dec
ja
insl
notl
pushf
les
data16
fiaddl
xchg
out
push
cwtl
and
rolb
lods
fsubl
movsb
fcoms
add
jge
std
dec
insl
ja
jecxz
subb
sub
cmp
pop
adc
roll
pop
jl
repnz
jp
lret
mov
mov
mov
test
hlt
ficompl
pusha
dec
rorl
out
je
inc
lods
dec
sub
sub
sbb
lods
rcrb
js
lock
pushf
aam
mov
aad
pop
adc
out
adc
insl
subb
movsb
add
hlt
push
sub
enter
stos
daa
push
test
ret
push
ja
in
mov
and
sub
leave
or
orl
push
addr16
or
hlt
fs
cli
dec
mov
out
sbb
bound
pusha
or
popa
lea
jae
push
lea
jne
pushf
call
pusha
call
nop
mov
mov
lcall
shrb
mov
in
aaa
xchg
pop
xor
jns
repz
and
xor
lods
fnop
mov
mov
cmp
xor
and
movsb
es
push
xor
mov
push
pop
push
addl
inc
xor
pusha
adc
inc
mov
xchg
fs
ret
adc
cwtl
in
js
mov
lcall
sbb
jl
in
dec
adc
cmp
test
push
sbb
jo
lods
sbb
inc
fstl
insl
fldcw
sbb
aaa
popa
ss
mov
ror
or
mov
divl
jp
sahf
incb
fidivrl
shr
dec
ja
mov
cmp
and
pop
ret
popa
lahf
push
fidivl
jb
fcoms
pop
mov
or
outsb
push
fiadds
cmpsl
out
aaa
mov
jge
dec
out
xor
jne
ret
inc
leave
inc
aad
push
andl
shlb
insl
push
mov
jmp
popf
push
sub
lods
sbb
ss
fimuls
and
daa
sbb
xor
icebp
scas
or
mov
mov
mov
jns
lea
cltd
or
or
dec
icebp
push
fbstp
or
into
lcall
mov
aaa
mov
es
mov
xor
push
movl
shrb
lcall
adc
jg
push
add
mov
push
gs
mov
es
cltd
std
popa
loopne
cld
dec
nop
aam
push
mov
sub
mov
imulb
add
adc
inc
cld
movw
pushf
pushf
call
pushf
push
movw
inc
push
jmp
scas
movsb
fnstsw
sbb
or
adc
sbbb
dec
xchg
sbb
push
insl
icebp
out
out
test
mov
sbb
lds
inc
rolb
xor
mov
cmpsb
or
aad
std
aas
inc
movsl
sbb
pop
jae
out
and
scas
ljmp
xor
cmp
jmp
jmp
sbb
jae
lods
sbb
data16
push
fimuls
push
mov
ficoms
xor
xchg
cmp
movsl
sub
push
popf
je
jbe
movsl
dec
rorl
mov
jcxz
mov
jle
cmp
xor
js
or
cwtl
cmc
jne
cmpsb
cli
loopne
jbe
mov
mov
je
sub
mov
sbb
push
rcrb
out
jp
jge
jge
sbb
xlat
dec
xlat
push
shll
daa
xchg
notl
jecxz
ljmp
jge
mov
in
push
ja
sub
in
fwait
or
hlt
scas
dec
popa
push
add
pop
sbbb
inc
mov
sub
jl
clc
push
je
adc
mov
cwtl
pop
loopne
pusha
xor
test
mov
into
mov
bsf
shl
sub
bsf
mov
test
pushf
cmp
mov
sub
pushf
pushl
popl
cmp
cmp
push
call
and
test
lods
sbb
shlb
lret
push
dec
decl
inc
jne
push
add
mov
cmpsl
sbb
imul
or
add
jle
iret
or
pop
jbe
outsb
lret
and
jbe
xor
and
jnp
das
stos
out
flds
loope
movsl
push
inc
pusha
jl
aad
fmuls
fdivl
fs
cld
dec
or
inc
clc
shll
cmp
mov
cwtl
and
mov
out
lea
call
pushf
mov
lea
jne
not
mov
push
movb
pushf
lea
jmp
not
jmp
rol
mov
pop
xchg
stos
adc
fldt
cmp
scas
aas
fwait
sete
jecxz
xchg
imul
pushw
psubusw
and
push
mov
mov
xor
lods
or
mov
mov
adc
mov
or
xor
mov
jg
push
mov
xor
shll
xor
aaa
xor
xlat
push
xor
or
cmc
notl
ja
inc
mov
clc
mov
jecxz
push
cmp
and
pop
jo
ljmp
cmp
cld
pop
xor
sub
data16
xor
push
xor
lock
push
test
and
inc
ret
repz
dec
jbe
lds
outsb
mov
xor
fidivl
add
mov
xor
pop
pusha
mov
and
sti
sbb
cwtl
shrl
pop
arpl
dec
xchg
push
outsl
cs
mov
into
jge
pusha
jp
aas
dec
pop
jecxz
ja
xor
mov
lds
inc
popl
xor
repnz
lds
in
xor
scas
sub
int
cmp
inc
loopne
ss
pop
xor
or
scas
aam
mov
cmp
jmp
xor
ljmp
mov
xlat
mov
ds
test
adc
arpl
xchg
popf
js
jl
inc
rorl
mov
lea
repnz
out
stos
and
jl
pop
addl
mov
int
out
mov
arpl
pop
fdivl
xchg
push
push
cmp
cmp
adc
stc
xor
fcompl
add
icebp
sub
insl
cmc
and
mov
aas
mov
sub
outsl
shl
mov
mov
push
insb
mov
mov
mov
out
fildl
jl
cmp
fstpt
jmp
inc
cmp
mov
mov
ja
xor
outsl
shlb
int
loope
icebp
es
cmp
mov
xor
ficomps
mov
sbb
dec
mov
push
or
jmpw
pop
xor
mov
or
js
sub
sbb
mov
insb
pop
xor
mov
adc
jnp
mov
push
mov
adc
mov
xor
repnz
std
or
inc
jge
cmpps
inc
fs
and
push
dec
outsl
pop
inc
xor
arpl
int
mov
push
cmp
mov
loopne
push
adc
shll
push
stos
push
dec
push
cld
pop
xor
mov
sbb
jl
xor
inc
add
dec
push
sub
ret
sarb
xor
roll
testb
imul
jl
fistpl
repz
add
adc
xor
test
sub
andb
sbb
mov
data16
mov
pop
dec
mov
and
incb
push
sbb
hlt
cld
sarb
sub
pop
mov
add
jb
mov
jbe
mov
aaa
pop
push
mov
or
sbb
push
push
xor
dec
outsl
rcll
std
xor
dec
scas
sbb
mov
pop
jb
dec
outsl
adc
adc
xor
mov
xlat
cs
iret
mov
sahf
inc
push
adc
jl
mov
sub
aaa
ljmp
dec
xchg
cmp
jmp
cltd
aaa
cmp
inc
pusha
shl
decb
push
sahf
mov
sub
push
dec
add
mov
inc
sub
mov
or
mov
mov
std
lods
sub
sub
sbb
xor
shll
mov
mov
outsl
push
ds
aas
repz
xchg
hlt
cmp
lods
sbbl
push
sub
mov
arpl
mov
xor
cmp
lret
sbb
imul
mov
aas
add
and
fstl
lahf
scas
jecxz
cltd
jmp
mov
js
or
sub
cmp
enter
outsl
sbb
xor
xor
adc
lret
and
ds
mov
stos
mov
xchg
outsl
orl
dec
sbb
xor
ja
and
or
push
aas
cld
pop
inc
push
add
repnz
outsb
xor
dec
lock
cmp
push
hlt
add
add
or
mov
mov
jns
lds
testb
sub
pushf
std
add
outsl
cmp
jmp
push
repnz
aam
and
scas
inc
dec
ds
jbe
jl
cs
mov
outsl
inc
sub
cmp
cmp
rcrl
popf
push
mov
cmp
mov
lds
in
ds
sub
add
outsl
mov
push
out
ja
push
mov
cwtl
sbb
inc
jle
inc
jb
add
lea
mov
jb
mov
xchg
stos
mov
mov
lock
mov
in
ja,pn
fiaddl
mov
mov
mov
outsl
jg
ret
aas
stos
push
int3
pop
mov
ret
xchg
adc
adc
ss
cld
ret
popa
lock
pop
xchg
mov
sbb
adc
loop
cwtl
pop
test
outsl
popf
lcall
xor
pop
repz
mov
and
iret
rcll
jnp
jbe
gs
mov
insl
pushf
fmuls
xchg
xor
pop
mov
imul
inc
mov
repnz
push
dec
ret
psrlw
adc
loop
ljmp
inc
add
mov
mov
lock
lods
nop
push
fstpt
das
cmp
push
mov
repz
adc
pop
les
ja
jno,pt
outsl
mov
pop
dec
dec
aad
je
out
xor
sub
mov
adc
cmpsb
pop
int3
pop
push
xchg
incb
iret
dec
roll
and
lock
fucomip
mov
lret
test
cld
mov
xchg
mov
add
loop
addr16
pop
pop
imul
cltd
lret
xchg
aas
mov
jb
dec
shll
dec
pop
push
pop
pop
icebp
pop
ja
jb
cmp
mov
aas
jae
sbb
bound
fistpll
jno
pop
in
sub
push
inc
jl
shrb
dec
push
inc
sbb
xor
lock
xchg
cmp
lock
mov
jecxz
jae
dec
xor
mov
adc
mov
gs
cmc
rolb
jg
stos
mov
push
mov
enter
mov
sub
cli
adc
xor
inc
push
cmp
lds
lret
dec
icebp
dec
test
or
push
and
adc
mov
movsl
jbe
int3
xor
inc
and
aad
mov
ds
xchg
add
sbb
leave
xchg
orb
add
dec
ficomps
mov
das
push
mov
dec
dec
mov
les
adc
fsubs
outsb
rcll
lds
cmp
adc
jge
and
fldenv
jb
jg
mov
aad
dec
icebp
xor
xorl
xchg
inc
loopne
call
jle
stos
xchg
nop
xor
fcom
pop
push
pop
out
xor
bound
add
ljmp
pushf
adc
mov
out
adcb
dec
aas
insl
inc
test
mov
or
lods
test
aas
xchg
jp
mov
xor
inc
ret
adc
mov
cmp
iret
dec
fadds
negb
xchg
sti
sbbb
les
subb
mov
sbb
adc
mov
xor
inc
lds
cmpsl
out
insl
xchg
jle
cmc
or
andl
xor
lret
dec
mov
rcl
mov
insl
lea
movsl
inc
sahf
and
pop
jne
cmp
aaa
pop
pop
jl
in
cli
fcomps
dec
cmp
cmpsl
test
idivb
inc
jae
jns
daa
jb
mov
mov
pop
faddl
in
hlt
and
mov
xchg
xlat
pop
ret
repnz
int3
cmpsl
iret
mov
dec
addr16
outsl
sbb
cmp
cmp
sahf
insl
aaa
xchg
push
enter
jb,pn
xchg
adc
arpl
jecxz
add
xchg
test
mov
jl
cmp
cmp
sub
xchg
les
push
push
inc
stc
jno
cli
xor
mov
mov
xchg
lock
dec
jo
jle
pop
shr
sub
rorb
push
jb
adc
ror
dec
xor
dec
aas
jg
inc
jl
lret
outsb
mov
mov
dec
pop
dec
sti
and
orl
add
cld
les
shrb
pop
jmp
int3
jns
pop
testb
sti
add
aam
or
inc
or
mov
cmp
aas
push
jg
fsts
or
sbb
sub
inc
xor
or
or
mov
add
mov
pop
and
into
cmp
or
ljmp
gs
adc
inc
pop
mov
or
and
inc
push
mov
vmwrite
jge,pt
ss
dec
add
or
arpl
mov
outsl
xchg
lods
repnz
cld
mov
push
xor
daa
je
cmp
cmp
and
lahf
iret
loopne
push
out
xor
scas
lds
shll
adc
jno
ja
ret
movsl
mov
ja
sub
mov
int
xor
add
inc
jae
out
xchg
xor
push
stos
push
ss
xor
icebp
inc
int3
in
stc
adc
mov
sub
mov
xor
adc
push
mov
xchg
mov
adc
dec
cld
sub
fs
jns
addr16
out
shll
outsb
pop
cmpsb
mov
mov
sbb
syscall
or
scas
inc
loopne
pop
hlt
icebp
dec
adc
rcll
push
pop
cmp
inc
ds
adc
cmpsb
pop
xchg
cli
ds
divl
loop
aaa
jnp
xchg
sti
lret
aas
push
outsb
and
sahf
and
cli
insl
dec
and
sbb
addr16
mov
jb
xchg
mov
stos
insb
push
sarb
xchg
dec
imul
pop
sbb
outsl
adc
shrb
gs
sub
sub
dec
aas
cmp
cmp
push
sti
pop
orb
outsl
pop
aaa
mov
dec
inc
mov
out
dec
dec
mov
jmp
pop
xor
cmp
cmp
inc
and
pop
stos
sbb
bound
cmc
imul
mov
or
push
mov
aas
movl
push
sar
pop
test
mov
in
add
jne
sub
insb
pushf
outsl
jae
les
mov
xor
daa
pop
mov
cmp
adc
addr16
jnp
test
sub
jo
mov
int
stos
pop
lds
cs
pop
add
cmp
arpl
cmp
sub
lods
xchg
outsl
sbb
mov
scas
mov
fwait
xchg
mov
incb
lods
filds
sarl
je
loopne
cmp
lcall
xchg
xchg
dec
add
je
movsb
sub
sbb
je
popa
movl
jns
mov
pusha
jge
lock
adc
pop
ss
fsubl
shl
aad
movsl
jno
stos
dec
mov
bound
lds
pop
jnp
xchg
push
dec
imul
inc
pop
cmp
aas
shlb
aam
xor
outsl
add
dec
jnp
pusha
jecxz
or
jl
cmp
inc
jns
push
mov
sub
cmp
ljmp
mov
mov
loop
mov
dec
les
lea
aad
mov
mov
pop
xchg
movsl
dec
mov
pop
jns
iret
ret
jl,pt
dec
sti
mov
push
std
mov
pushf
adc
pop
xchg
jo
adc
mov
mov
and
in
xchg
lods
or
or
loop
xor
mov
divb
cmp
cmpb
dec
stc
int3
mov
xor
iret
jns
cmp
imul
mov
xchg
test
sub
jae
cld
dec
sub
jno
add
dec
sub
jne
daa
cmp
mov
cmpsl
mov
sbb
push
push
test
test
lret
add
in
pop
sub
ss
aas
cmpsl
dec
rcr
fisttps
cld
out
les
xchg
xor
mov
inc
fdivl
xchg
xchg
xchg
inc
lret
cmpsb
push
stos
mov
mov
outsl
out
jbe
iret
cltd
icebp
pop
mov
pop
xchg
dec
frstor
dec
fidivl
inc
mov
sarb
rcl
xchg
shrl
ja
mov
movsl
xor
adc
ljmp
or
icebp
mov
adc
adc
dec
pop
ficompl
rorl
xchg
add
jmp
add
fcompl
push
mov
xchg
lds
mov
cmp
jp
mov
xorl
pop
arpl
push
mov
lock
push
xor
leave
inc
popa
adc
sbb
dec
dec
mov
mov
add
aaa
or
test
sbb
dec
push
repnz
inc
cli
aas
insl
out
xchg
jge
jmp
jb
and
inc
cmpsl
mov
pop
xchg
mov
jmp
mov
or
mov
sub
jae
cmp
arpl
xor
aas
icebp
and
xchg
cmp
push
mov
add
outsl
xchg
fninit
mov
jge
in
andb
mov
and
enter
rol
jno
shll
cli
mov
adc
xor
aas
xchg
aad
sub
jp
add
xorb
push
jge
xor
orb
outsl
ja
push
mov
dec
mov
xchg
mov
or
insb
orb
cld
or
shll
add
cmp
test
jno
ljmp
bound
push
aam
push
mov
and
in
rclb
inc
mov
ss
push
push
pop
repnz
cltd
sub
lret
jo
dec
in
fwait
mov
shl
inc
mov
decl
arpl
adc
pop
and
xchg
lock
dec
push
cli
int
mov
arpl
ffreep
push
repz
adc
mov
sbb
aaa
rcll
out
repz
inc
syscall
pop
int3
add
xor
jl
les
push
dec
push
ret
sbb
mov
xor
push
mov
dec
fwait
jb
outsb
les
jl
test
cwtl
mov
stos
adc
fs
cmp
dec
fs
fstpt
cmp
dec
dec
jge
pop
pop
xchg
xchg
inc
xchg
add
adc
cltd
adc
addl
nop
stos
lea
dec
lea
dec
pushf
push
into
adc
dec
adc
sbb
mov
imul
and
movsl
dec
jg
fwait
shll
xchg
insl
sub
cld
lock
cmp
pop
adc
dec
mov
xchg
sub
push
aas
ja
push
mov
ja
dec
mov
lods
and
or
ljmp
rcl
cwtl
jecxz
fwait
mov
cmpsl
dec
lea
or
test
jb
xor
jge
mov
in
mov
or
push
imul
rcrl
mov
cmpsb
jno
insb
cmc
cmpsl
dec
movsl
push
add
into
jnp
pop
outsl
mov
sbb
and
je
jo
cmp
pop
adc
loopne
mov
fnstsw
arpl
outsl
sub
sbb
lock
test
out
push
out
push
mov
enter
outsl
sarl
cwtl
mov
and
mov
or
and
mov
mov
push
pop
idivb
mov
pop
sbb
push
iret
dec
popf
iret
xlat
stos
ss
shll
js
mov
imul
and
daa
aas
aas
scas
je
sub
mov
sbb
rcr
inc
lea
inc
repnz
push
js
cmp
xor
shrb
shr
cmp
mov
mov
test
push
mov
rcl
or
inc
jo
adc
out
xchg
push
pop
push
repnz
dec
leave
dec
hlt
inc
out
add
jmp
arpl
pop
repz
mov
lret
dec
mov
jp
mov
xlat
jae
xor
inc
subl
push
mov
outsl
pop
inc
lds
pop
cmp
dec
jl
jb
push
dec
xchg
int3
loopne
push
pop
cmp
sbb
push
dec
inc
test
cmp
loopne
shlb
mov
lea
call
fs
mov
dec
data16
in
fcoms
nop
xor
es
cmpsb
fs
lret
test
cmp
push
xlat
nop
jle
mov
jp
xchg
xchg
push
xlat
sarl
imul
fildl
in
adc
cld
loopne
in
jb
es
ja
cld
flds
inc
cmpb
test
push
bound
sub
loope
hlt
out
xor
aad
lds
arpl
je
scas
test
dec
imul
xor
inc
xchg
mulb
fmul
movsb
mov
cmp
cmp
sbb
mov
push
inc
pcmpeqb
sbb
std
cmc
cmpsl
pop
pushaw
dec
lcall
fistpll
jne
and
fdivs
rorl
dec
lcall
push
adc
adc
ficomps
mov
xor
xor
imul
jae
mov
jb
orl
inc
popa
sti
js
mov
lret
stos
lock
jp
inc
xchg
xchg
in
into
dec
fisttpll
pop
push
xchg
inc
daa
sub
jg
lds
sub
sbb
xchg
jno
push
adc
out
iret
jnp
and
adc
push
xor
sarb
arpl
xchg
imul
fistl
dec
push
sub
dec
dec
push
push
lea
aad
or
aaa
dec
adc
adc
mov
hlt
outsl
pop
enter
fcoms
adc
mov
add
ss
mulb
xor
notb
addb
lock
std
cmp
cmp
enter
decl
jecxz
sbb
dec
push
sub
push
faddl
mov
movhps
mov
jl
outsb
xchg
insl
push
hlt
or
in
aas
inc
idivb
xchg
sti
aas
inc
pusha
jns
and
call
es
cs
movsl
mov
jbe
jge
dec
outsl
nop
mov
aas
cmp
mov
xor
inc
outsb
mov
int3
cwtl
mov
mov
cmp
dec
xchg
out
mov
mov
cmp
mov
xchg
mov
xor
cmp
jb
hlt
inc
mov
bound
mov
roll
outsl
cmp
cmp
inc
mov
jns
sbb
push
dec
lds
pop
adc
repz
lret
sub
jnp
dec
repnz
pop
sbb
mov
int3
pop
dec
gs
nop
mov
out
xor
jecxz
repnz
push
icebp
fs
adc
frstor
mov
insb
and
push
dec
xchg
ljmp
fcompl
call
pop
stos
bound
adc
inc
cmp
mov
popl
out
or
adcl
inc
roll
sub
dec
mov
pushf
dec
or
mov
ret
outsl
rclb
cmp
push
data16
mov
inc
sub
shr
call
push
or
and
enter
mov
bound
pop
ljmp
fwait
inc
adc
inc
mov
and
xchg
data16
rorb
adc
dec
or
lret
mov
mov
sbb
push
or
push
rclb
push
pop
insb
xchg
jae
fwait
cmp
repz
cmp
shll
sub
mov
cld
movsb
jp
dec
push
arpl
jecxz
test
mov
out
xchg
cmp
cmp
pop
push
xchg
mov
insb
mov
jge
dec
mov
popf
repz
mov
stos
mov
divl
sub
adc
lds
pop
fldcw
mov
cmp
lds
int
jnp
fimull
pop
push
xor
and
movsb
adcb
lcall
mov
xchg
pop
sbb
inc
or
jge
mov
or
jmp
add
loopne
pop
in
xor
cmp
xor
or
sti
loopne
ret
mov
jno
into
data16
arpl
push
stos
adc
cmp
inc
mov
lock
push
ret
arpl
inc
fidivrl
mov
imul
rorb
mov
jno
imul
sbb
test
add
popf
movsl
clc
das
les
les
jecxz
mov
pop
mov
int3
dec
jl
adc
test
dec
mov
sti
sub
call
nop
hlt
cmp
dec
call
mov
or
stos
sub
or
sti
cmp
hlt
pop
sbb
jmp
jmp
in
pop
mov
mov
test
or
mov
outsl
in
push
mov
jnp
int
add
adc
faddl
mov
dec
push
xor
adc
mov
lods
or
fidivrl
addb
daa
icebp
out
push
out
xchg
popa
jle
mov
lods
int
and
mov
loop
imul
push
jle
jo
mov
stos
gs
lock
mov
push
imul
scas
aam
sub
shlb
rcrl
mov
stc
sahf
outsl
daa
pop
call
arpl
hlt
je
mov
or
jmp
pop
cmp
cmp
imul
xor
loopne
dec
test
mov
push
pop
outsl
stos
aas
fstpt
and
aad
test
push
dec
jmp
stc
mov
testb
sub
sub
cmpsb
xor
jns
mov
inc
inc
cmpsl
sbb
ret
pop
mulps
jp
jo
bound
stos
mov
cmp
sbb
ds
scas
push
xor
xchg
jmp
push
cld
sbb
dec
out
pop
mov
pop
pop
cmp
mov
lds
pop
in
pop
clc
or
sbb
mov
loop
adc
mov
xchg
mov
icebp
dec
int3
dec
mov
cmpsl
inc
pop
loop
push
xor
stos
or
inc
mov
or
add
loop
ss
mov
mov
test
add
mov
cltd
outsl
mov
data16
repnz
mov
fimull
mov
and
and
popa
gs
cmc
mov
cwtl
or
sahf
movsl
pop
or
push
pushf
pushf
dec
jno
add
ret
hlt
aam
xchg
inc
jnp
fildl
ret
or
pop
and
test
add
xchg
out
or
adc
push
add
cs
dec
shll
sub
sub
pop
pushf
mov
out
push
push
lcall
mov
jg
cltd
bound
mov
inc
arpl
mov
rcll
adc
je
mov
pusha
push
and
shlb
test
std
add
ljmp
icebp
lock
test
mov
xchg
xchg
lock
inc
jns
lcall
mov
pusha
xor
out
cmc
mov
leave
inc
stc
repz
out
cmp
sub
dec
loope
rcr
icebp
pop
test
sbb
ja
sti
clc
jbe
ds
fwait
mov
dec
cli
lods
ds
std
icebp
add
mov
jle
push
mov
mov
adc
cmp
js
inc
outsb
push
into
inc
mov
pop
push
lods
jae
ss
bnd
outsl
nop
or
jle
push
xor
orl
jae
ficoml
cmp
add
sub
bound
mov
mov
dec
sub
mov
sbb
int
imul
cmpb
sti
push
lds
loope
dec
inc
jns
sub
and
and
shlb
jle
scas
push
jno
std
sbb
push
pop
fnstsw
in
adc
rcrb
inc
shll
addr16
call
mov
orl
mov
rcr
in
js
pop
sbb
aaa
cmp
out
cmp
xchg
cmp
sbb
sub
pop
xor
pushf
rclb
ret
xchg
push
jmp
xchg
std
dec
mov
sbb
enter
ret
mov
fs
mov
fwait
outsl
add
and
into
repnz
sbb
jno
lds
or
dec
mov
outsl
xchg
dec
out
outsb
popa
push
ja
pop
cmp
insl
or
add
push
clc
aas
sub
aad
mov
pushf
test
push
aam
push
out
xchg
add
fwait
xchg
sub
lods
push
ljmp
xchg
leave
mov
push
jb
push
adc
lock
mov
adc
outsl
insl
fistl
cwtl
stos
jl
mov
mov
jle
xchg
enter
mov
repz
pop
push
lds
lcall
bound
prefetcht0
mov
aam
sub
pop
addr16
dec
mov
dec
movsl
cmp
pop
cmp
cltd
mov
jno
rolb
or
sti
or
ret
cmpsb
xor
jno
popf
bound
subb
inc
cltd
or
sbb
push
mov
jmp
imul
xor
or
iret
scas
push
dec
cmc
jecxz
xor
bound
fs
notb
inc
xor
or
insb
xor
pop
mov
test
xchg
rclb
push
sbbb
cmp
add
cmc
add
arpl
jae
dec
mov
sbb
rcll
and
mov
adc
xor
lock
test
hlt
jg
std
pushf
and
in
sub
scas
mov
sbb
push
cmp
repz
shl
ss
dec
ret
jmp
push
dec
and
mov
xchg
xor
jb
jecxz
in
mov
pusha
sbb
adcb
call
aad
inc
test
jmp
cmp
cli
push
js
jb
dec
stc
sbb
add
dec
lds
dec
movsl
mov
testb
mov
int3
divl
dec
xchg
xor
fs
je
or
pop
mov
aas
stos
call
xchg
push
pushf
lds
shr
push
hlt
adc
sbb
push
je
and
out
jge
mov
or
scas
cltd
enter
and
int
jge
mov
cmpl
lock
jbe
repnz
adc
rcrl
dec
les
jo
jp
int3
insb
fdivrs
mov
xor
lea
inc
dec
imul
pop
rcrl
cltd
aaa
out
cli
or
jnp
push
inc
dec
insl
add
in
inc
push
add
inc
pop
stc
pop
ljmp
mov
hlt
push
jne
pop
xor
pop
mov
mov
dec
inc
icebp
es
cld
fs
mov
add
pusha
ds
in
inc
fsubl
in
js
jno
lahf
subb
repnz
into
xor
cld
cwtl
mov
add
jae
je
ss
imul
aaa
xchg
ds
mov
shrl
in
sbb
stc
js
daa
jl
inc
inc
mov
test
jno
movsb
lea
add
ljmp
cmp
arpl
inc
fsts
mov
inc
dec
adc
dec
push
mov
aaa
clc
xchg
jp
mov
or
loope
mov
frstor
mov
stc
add
ja
lret
nop
push
jle
nop
fs
mov
pop
fs
pop
and
or
push
add
dec
jle
cmp
sbb
jne
xchg
and
push
lahf
cmp
aas
stc
pop
adc
jp
cmp
lock
cmc
push
scas
ja
shrb
pop
mov
mov
ds
adc
mov
push
mov
inc
sub
je
repnz
icebp
sarl
dec
or
mov
mov
lods
xor
mov
adc
xor
popa
ja
icebp
xchg
mov
pop
dec
hlt
add
dec
nop
inc
cmpsl
pmulhuw
call
andb
sarl
dec
jl
fs
or
ss
push
and
shll
mov
mov
and
and
ret
xchg
dec
out
or
or
jmp
dec
push
imul
lods
and
cmp
hlt
in
aam
setae
push
in
fsubrp
bound
shll
es
int
dec
sbb
out
xchg
lret
ror
in
xor
xchg
pop
mov
xor
or
jnp
or
fnstcw
aam
loope
push
mov
fdivs
jno
aas
cld
inc
push
mov
push
inc
dec
add
xchg
fstpt
jb
lods
dec
outsl
push
shrb
jp
cmpsl
nop
push
jl
dec
test
aaa
cmp
and
rcrb
jno
out
push
lret
sub
insb
outsl
push
mov
push
cwtl
dec
xchg
lods
fimuls
repnz
sbb
jmp
test
int3
cli
push
pop
inc
outsb
jmp
test
xor
dec
filds
into
lcall
stos
or
push
add
pop
mov
xor
lds
jb
jg
data16
xor
fs
cmp
insb
push
in
and
mov
cs
mov
aam
or
nop
cltd
ss
mov
mov
aad
fwait
inc
mov
adc
adc
outsl
clc
mov
add
jb
ret
pop
sbb
mov
jno
cmp
add
dec
ds
shrb
xchg
xor
inc
mov
mov
lods
mov
sbb
or
fwait
xchg
js
fsubrl
xchg
mov
cmp
je
lea
adc
mov
cltd
inc
mov
mov
subb
pop
loope
faddl
dec
outsl
insb
add
js
adc
loop
sbbb
loope
mov
stos
imulb
lock
push
inc
and
adc
fwait
sar
out
jnp
enter
or
jge
and
ljmp
or
xchg
xchg
mov
jl
pop
les
or
add
push
mov
or
add
push
test
sbb
jg
push
je
in
and
pop
nop
vpsubb
jge
shll
je
leave
iret
xor
enter
xchg
dec
jno
fdivrs
adc
aas
sbb
cmp
repz
push
stos
ja
xor
loopne
push
pop
outsb
xchg
mov
xchg
dec
sbb
inc
lcall
add
push
jb
mov
lods
sub
scas
pop
stos
lock
sub
clc
cmp
lods
mov
test
ss
cmp
sbb
insl
jle
insb
xchg
das
push
lods
gs
push
sti
mov
push
arpl
js
std
imul
das
pop
imul
mov
pop
lods
xchg
adc
insb
loop
cmp
test
aas
inc
je
lods
loope
test
shll
pop
mov
mov
outsl
scas
jns
sbb
xlat
push
mov
scas
or
cld
int
js
out
int
push
or
push
imul
pop
jne
inc
jno
je
dec
or
lahf
mov
cli
repz
adc
inc
push
jle
imul
bound
jbe
sub
out
xor
iret
movl
call
or
out
pop
decb
sub
push
cmp
mov
inc
mov
aas
enter
jecxz
call
ds
jl
pop
jno
test
shlb
and
pop
pop
push
in
sub
lods
xlat
sub
ficoms
mov
and
cmp
inc
sbbb
add
dec
cmp
je
fnstcw
test
mov
dec
mov
test
dec
sbb
stos
bound
push
push
dec
or
jle
pop
mov
mov
fsub
paddusw
jge
cmpl
mov
int3
dec
dec
mov
sbb
pop
cld
inc
pop
xor
xchg
sarl
xor
aaa
add
cmp
or
iret
outsb
std
or
inc
jo
pop
xchg
cmp
mov
pop
adc
mov
push
out
ret
pop
adc
jo
adc
cmp
and
fisubl
loop
ret
push
stos
sbbl
adcb
xchg
frstor
testb
xchg
testb
into
arpl
xlat
cmp
mov
test
icebp
jnp
inc
xor
lcall
divb
mov
push
sub
stc
push
bound
cmpsb
in
aad
packsswb
cmpsb
cmp
call
pop
inc
xor
push
aas
add
sbb
cmp
jl
jp
imul
fnstsw
pop
sbb
ja
rorb
repz
xor
cld
aas
ds
adc
data16
inc
incb
mov
push
or
subb
adc
jno
dec
push
ds
inc
aaa
scas
or
pop
pop
and
or
cmp
popa
cmp
ret
xor
out
mov
test
incl
aas
inc
out
pop
jnp
cmc
and
mov
add
repnz
xlat
cmp
rcl
xchg
jle
mov
out
nop
dec
mov
gs
inc
push
push
iret
mov
aaa
jb
fistpl
push
mov
int
loopne
in
idivb
jmp
jbe
lock
cld
xchg
aaa
adc
dec
cmp
fnsave
mov
dec
lock
adc
in
xor
inc
inc
je
jno
xchg
in
or
push
dec
andl
loop,pt
outsl
mov
sub
pop
aas
cli
popf
xchg
pop
call
mov
jae
push
dec
js
outsb
lahf
jle
mov
mov
mov
repz
icebp
bound
jo
inc
cmc
mov
dec
sub
adc
arpl
lahf
inc
pushf
adc
lret
imul
cltd
jae
dec
jmp
push
stos
ret
mov
dec
dec
enter
aas
jg
stos
or
adc
sub
in
jae
xor
fsubl
mov
fwait
nop
dec
jmp
fcompl
bound
je
pop
fwait
js
inc
out
inc
icebp
sub
cmp
test
rclb
and
lcall
xlat
adcl
lock
dec
sbb
jmp
ds
push
iret
into
push
mov
sub
xor
test
mov
dec
inc
movsl
push
sti
fmull
stc
mov
adc
adc
cltd
hlt
aas
loope
push
out
loopne
jg
dec
inc
xlat
fdivl
das
adc
imul
aaa
cld
sub
sbb
inc
stos
std
mov
sub
jbe
xchg
mov
in
ficoms
cmp
and
out
xor
inc
cltd
mov
dec
aaa
jle
cltd
inc
push
push
jmp
out
mov
out
add
loope
shrb
cmp
xchg
jg
iret
shlb
fstpl
xchg
in
dec
or
aas
cmc
fisttpl
in
rcl
adc
mov
aad
cmp
lods
pop
xor
test
xor
adc
sub
add
jge
or
gs
inc
cmp
jle
loop
and
xchg
popa
sbb
scas
or
nop
cmp
sarl
sub
insl
sbb
add
leave
jle
mov
and
scas
xchg
push
into
mov
dec
cmp
xor
testl
sub
imul
in
pop
aas
cmp
pop
xchg
mov
lcall
push
jns
sub
jnp
mov
js
out
pusha
ss
mov
aam
jbe
idiv
adc
mov
mov
sub
loope
int3
adc
ds
or
arpl
pop
xchg
adc
imul
jnp
mov
jb
clc
sbb
mov
in
xchg
ret
ret
lret
push
xchg
ds
mov
sub
mov
pop
out
out
lret
pop
ret
pop
rcl
int3
cld
pop
push
ret
xor
xor
jnp
mov
mov
mov
xor
into
jns
or
xchg
jecxz
cwtl
lods
aas
pop
repz
pushl
stos
orb
scas
mov
and
rorl
js
jecxz
mov
dec
int3
das
arpl
cmc
jae
into
test
sti
add
ficoml
lock
cli
cmpsl
out
cmc
mov
loopne
add
xchg
lock
add
cld
rolb
jmp
xor
pop
push
push
xor
ret
cmp
sti
xor
ja
pcmpeqb
and
loop
push
pop
adc
into
pop
dec
mov
jae
divb
dec
inc
jns
js
xor
pop
mov
dec
in
sahf
insl
test
push
scas
mov
xchg
ds
hlt
in
rorl
dec
cmpsb
mov
fwait
pop
out
dec
mov
mov
psrlw
repnz
loop
dec
mov
out
or
pop
xor
mov
mov
cmp
lock
call
jne
xchg
xchg
sti
or
mov
jl
mov
xor
dec
inc
decb
testl
cmpsb
lods
jb
mov
mov
fsubl
xor
pusha
lea
popf
cmp
xchg
mov
lea
or
std
pushf
insl
out
test
cmp
adc
ss
push
and
mov
mov
popa
aam
aad
data16
inc
cmp
fcmovnbe
xor
dec
push
loop
nop
pop
ss
push
lock
push
lods
je
dec
lret
lods
lret
ds
imul
dec
pop
pop
jno
mov
sub
je
jnp
cmp
xor
mov
mov
out
cmp
adcl
mov
sbb
aas
sarb
pop
jmp
jnp
xor
inc
and
or
jnp
lret
mov
push
aam
inc
repz
aam
pop
clc
add
or
xor
ret
je
jno,pt
or
push
pop
xchg
push
call
push
vpmuludq
push
out
scas
dec
sub
push
cmp
push
lods
mov
stos
lock
push
push
outsl
fdivrl
repz
pop
pop
lret
mov
arpl
xchg
adc
dec
cld
imul
inc
outsl
and
lds
aas
adc
faddl
je
mov
push
xchg
push
imul
imulb
aaa
and
xorb
in
pop
push
pop
jns
cmp
push
push
push
and
sub
and
add
sahf
mov
mov
ret
sub
xor
scas
sub
cmp
mov
inc
lret
push
inc
jbe
int
test
mov
shlb
xor
jle
xor
xor
rcrb
dec
xor
cmp
divl
push
je
xor
nop
mov
inc
aam
xchg
mov
nop
xchg
imulb
call
aaa
outsb
or
mov
mov
xor
pop
mov
inc
hlt
imulb
sbb
pop
xor
inc
inc
mov
inc
jl
int
mov
dec
ret
inc
cltd
mov
inc
inc
gs
push
mov
mov
mov
dec
insb
cmp
cmp
lahf
push
lret
inc
cmp
cmp
xor
inc
arpl
cmp
rol
addb
int
xor
jl
shlb
pop
lea
dec
je
shll
dec
ss
stos
pop
ljmp
insl
inc
inc
ds
adc
xor
imul
mov
mov
inc
dec
mov
and
adcl
stos
cmpsl
aaa
xor
or
fstpt
pop
cmp
roll
movb
pop
cmp
ss
inc
mov
int3
adc
ss
push
inc
mov
pop
inc
aam
clc
cmp
ret
mov
gs
rorb
inc
cmp
mov
push
xor
ss
ret
dec
or
aas
inc
cmp
ja
lret
pop
push
dec
cwtl
mov
push
inc
or
mov
dec
mov
ret
xor
lret
fstpt
test
cmp
das
movsb
xor
inc
pop
xor
fildl
aas
hlt
outsl
mov
xchg
insb
insl
push
adc
ss
mov
dec
mov
or
xorb
pop
mov
cmp
std
jno
aad
rcll
or
gs
xchg
mov
jge
xchg
xor
loopne
mov
adc
xchg
xlat
mov
xor
movsb
push
insl
adc
push
inc
xor
dec
aas
add
movsb
jecxz
out
loope
push
mov
adc
and
in
jg
push
mov
insl
sti
jp
ret
mov
clc
or
pop
mov
push
jno,pt
ds
dec
hlt
sahf
lahf
xchg
push
outsl
inc
push
jns
nop
in
inc
and
sbb
mov
sar
push
cwtl
adc
cli
mov
icebp
lret
pushl
outsl
popl
push
aaa
xlat
sbb
push
stos
adc
push
mov
pop
lods
test
mov
push
cmp
pusha
adc
cmpsl
adc
xchg
sub
inc
jno
enter
lret
movsl
pop
mov
ficomps
xchg
mov
arpl
sub
mov
dec
sbb
cmc
mov
adc
mov
mov
mov
in
or
imul
and
push
leave
and
push
inc
pusha
iret
inc
test
cmp
arpl
adc
lahf
sbb
inc
mov
cwtl
sub
out
jo
mov
dec
ljmp
outsl
outsb
push
xchg
adc
cmp
mov
mov
ds
adc
ror
or
sub
jmp
fisubrs
xor
pop
dec
push
xchg
and
cmp
loop
bound
jo
fistpl
mov
insl
les
pusha
or
and
shlb
dec
fwait
push
inc
mov
stos
fdivp
push
xchg
cli
ljmp
mov
lret
push
push
daa
fmuls
dec
pop
mov
push
jmp
cmp
mov
lret
mov
icebp
lahf
fwait
rclb
mov
into
mov
cld
mov
mov
cmpsb
or
inc
int3
out
pop
in
xchg
lea
xor
xor
ficomps
dec
sbbb
into
xchg
and
in
shlb
push
sub
ds
addb
cmp
fsubrs
jb
ljmp
adc
adc
std
push
je
call
rcrb
mov
push
ds
aas
jb
daa
ja
ds
push
ja,pt
cmp
js
lgdtl
add
xchg
jbe
cmp
fsubs
and
imul
xchg
or
pop
mov
cmp
loop
movl
je
js
pop
fmull
orl
rclb
inc
loop
popf
pop
mov
pop
xchg
mov
repnz
lock
mov
inc
or
inc
pop
mov
add
ss
mov
pop
loope
dec
xor
fmuls
inc
sbb
lret
sahf
and
in
dec
xlat
dec
rorb
sbb
negl
mov
int3
cmc
dec
stos
mov
xor
int
jecxz
icebp
loope
aad
sbb
sub
movsb
outsl
lods
inc
mov
or
cmp
loop
mov
dec
sbb
out
push
ljmp
add
mov
jb
pop
mov
xlat
push
test
or
mov
cmp
arpl
add
scas
fdivrl
jge
xchg
dec
aad
xchg
and
mov
inc
mov
pop
js
sbb
adc
jnp
in
outsb
sbb
jbe
mov
inc
aas
dec
aad
mov
sar
cld
xor
xor
pop
call
mov
adc
mov
outsl
dec
cmp
mull
inc
sbb
mov
das
add
jp
jmp
gs
faddl
xor
pop
jb
mov
mov
mov
ja
cmp
or
fstp
pop
push
syscall
sub
mov
sub
lock
push
cmp
mov
lods
movsb
out
ja
gs
outsl
test
je
xorb
add
in
test
ret
xchg
je
push
insb
cmp
xor
xor
cltd
push
inc
xchg
aad
in
fcompl
mov
out
ja
add
jo
sub
aas
jg
test
enter
inc
add
fucom
xchg
jge
aad
jne
rorl
je
outsl
dec
loop
fdivs
lahf
stos
xchg
xchg
insb
loopne
repnz
mov
xchg
scas
gs
jno
jp
and
in
repnz
pop
lds
mov
xchg
xor
jmp
adc
jecxz
ljmp
push
or
call
pop
fcmovnbe
gs
outsl
cltd
out
test
push
aad
jbe
int3
xor
bnd
insl
xor
jmp
xchg
outsb
mov
int
xor
movsl
xchg
mov
push
popa
or
mov
push
mov
mov
pop
nop
push
in
push
xchg
leave
dec
xchg
xchg
cld
fwait
xor
sub
lock
aas
outsb
mov
lea
cli
outsb
adc
or
inc
mov
mov
cmp
sbb
scas
xorb
dec
in
jbe
adc
sahf
hlt
inc
imul
ret
xor
cmpsl
outsl
out
jge
inc
fidivrs
int3
addb
mov
loope
sub
jo
fs
mov
dec
cmp
xchg
stos
mov
rorb
lret
gs
loop
dec
outsb
addr16
xor
add
cmp
repz
lds
rol
outsl
dec
loope
jno
adc
jl
adc
jnp
call
mov
push
mov
pop
mov
lcall
outsl
insl
jno
mov
lret
mov
popf
xchg
fisubl
cli
in
push
pop
pop
fs
testl
call
xchg
jbe
nop
mov
inc
and
loopne
leave
ret
pusha
push
mov
cwtl
adc
stos
fildll
cmp
cwtl
dec
je
add
xor
hlt
adc
rcl
hlt
dec
push
dec
loop
stc
and
jae
popf
call
lcall
mov
cmp
jg
adc
ss
outsl
cmp
call
ljmp
mov
shl
xchg
xor
cli
cmc
xor
arpl
dec
aas
jge
inc
push
bound
ja
jp
scas
adc
mov
lods
xor
xchg
mov
adc
lea
in
sahf
xlat
aad
jo
stc
mov
pop
jo
cmp
in
clc
or
and
adc
push
shr
mov
insl
imul
ret
add
and
adc
lea
sbb
push
sub
stos
fcoml
adc
lret
ds
hlt
lret
outsb
cmp
lret
pushf
test
mov
outsl
shll
iret
cli
jno
inc
xchg
jp
sub
scas
cmp
jbe
cmp
rorb
push
lock
cmp
arpl
std
ret
icebp
cmpl
loop
jnp
daa
jns
and
ds
fcomps
in
in
repnz
fadd
pop
pop
or
subps
cmp
lcall
xchg
mov
dec
popa
adc
adc
push
es
inc
cmc
cmp
adc
pushf
ss
popa
mov
jno
dec
out
xchg
je
shr
sub
lss
mov
fdivrl
xor
pop
dec
pushf
lds
adc
es
mov
std
add
mov
jo
mov
hlt
stos
scas
ret
sub
cli
cmc
inc
andb
cli
pop
push
sub
mov
jmp
out
leave
push
jno
adc
jae
ds
push
in
xchg
push
ds
ljmp
jae
les
aam
jg
shrl
rclb
mov
cmp
lret
or
out
push
sbb
repnz
or
loopne
shlb
xchg
out
xor
leave
cmp
sub
iret
dec
sbb
push
add
dec
lret
mov
les
cmp
xchg
ljmp
push
ja
dec
push
ljmp
mov
xchg
push
jns
mov
cmpsl
loop
xchg
daa
cmp
js
enter
cmp
jl
dec
outsl
jne
add
sub
jle
scas
rcrl
sub
cmp
enter
hlt
fmull
jbe
mov
mov
dec
test
dec
aaa
daa
fwait
loopne
xchg
mov
out
mov
cmp
dec
pop
dec
mov
stos
icebp
mov
arpl
filds
insb
fcmovnb
adc
stos
mov
xchg
pushf
sbb
gs
aas
pop
push
xor
daa
iret
aam
xor
sbb
insb
popa
out
bnd
cmc
add
test
outsl
dec
in
repz
sub
scas
push
mov
xor
repz
dec
pushf
and
xchg
pop
cltd
mov
pop
xlat
aad
mov
ret
inc
jge
jnp
lcall
cmp
dec
inc
mov
dec
jnp
insl
scas
jns
pop
push
and
stc
xor
test
fcomps
fwait
jmp
std
fiadds
xor
jne
push
popa
arpl
mov
fsubrp
mov
xlat
jge
dec
div
hlt
outsl
jno
sub
test
or
movsl
mov
outsb
scas
ljmp
fildl
loop
lret
shrb
jo
jl
dec
je
mov
scas
aaa
imul
dec
mov
mov
push
mov
push
jecxz
add
test
pushf
popa
dec
or
std
jecxz
test
xchg
loop
lock
sarl
movsb
mov
outsl
add
xchg
pop
cltd
fstps
inc
outsb
xor
aas
mov
mov
mov
mov
push
pop
mov
adc
inc
std
inc
inc
mov
dec
sub
adc
push
mov
or
mov
scas
sub
jo
push
lock
rol
cmp
iret
inc
jne
xor
add
lods
arpl
aas
xor
xor
push
jb
test
and
les
scas
jmp
push
and
int3
dec
dec
add
enter
jecxz
xchg
cmp
imul
xor
mov
out
ds
sub
shll
push
scas
cwtl
mov
jbe
rorl
mov
xchg
xor
pop
mov
mov
xor
jo
pop
dec
mov
je
xchg
adc
iret
push
ret
mov
push
xchg
jae
insb
xor
jb
or
pop
add
mov
in
std
xor
mov
ds
xchg
movb
xchg
xor
mov
mov
je
sarb
and
jo
je
call
jle
cmp
mov
aam
xor
lock
pop
xorb
xchg
es
dec
mov
out
insb
jge
pop
push
push
addl
adc
inc
ret
jns
mov
jnp
pop
shlb
fidivrl
repnz
ret
shrl
mov
cmp
shrb
push
movsb
or
and
pop
xchg
fcom
out
int
popf
popf
push
ss
inc
inc
adcl
dec
rol
fs
into
icebp
and
mov
fwait
xlat
cmp
push
cld
adc
xor
aas
push
jno
fwait
or
arpl
xchg
jbe
sub
and
inc
xor
rcrb
xor
or
repz
mov
gs
push
push
and
dec
pop
jne
mov
push
dec
adc
push
aas
xchg
adc
ss
test
jg
sbb
jecxz
push
xchg
loop
pop
loop
dec
movsb
dec
shl
jno
xor
addr16
hlt
dec
jg
jns
inc
sbb
cmp
cmp
push
mov
scas
mov
in
orb
pop
adc
mov
sbb
lea
test
mov
aas
fmull
std
and
dec
xabort
xchg
movb
inc
pop
mov
cmp
dec
xor
in
pushf
xor
aas
mov
jne
cmp
jge
cmpl
cmp
pop
mov
stc
aas
jbe
inc
push
cli
lock
xchg
popa
or
pop
mov
pop
pop
xor
mov
mov
push
insl
hlt
mov
lock
ljmp
lods
xchg
fdiv
pop
fidivl
adcb
into
mov
mov
arpl
andb
rcrb
je
jno
xchg
xor
inc
xor
mov
gs
lret
push
inc
xchg
sbb
arpl
cmp
and
leave
adc
fwait
mov
jbe
dec
cld
repz
call
adc
sub
stos
ss
insb
psubd
jbe
dec
leave
mov
or
jmp
lcall
je
dec
xchg
sbb
aaa
ret
or
adc
push
and
lds
push
push
outsl
leave
cmp
jns
ficomps
mov
ljmp
cmp
jno
pop
mov
mov
aas
pop
je
jle
cmpsl
mov
push
xorl
mov
xchg
push
fbld
mov
sbb
mov
in
clc
and
jg
ss
jbe
xchg
dec
ret
or
outsl
lcall
ret
int3
pop
cmp
sbb
xchg
outsl
adc
popf
push
adc
jns
and
pop
xorl
ds
pop
aas
add
movsb
insl
loopne
push
jbe
push
rcl
push
iret
fwait
pop
jnp
and
or
adc
ja
lds
int
and
mov
and
jl
jae
jo
test
and
enter
push
call
test
cmp
leave
mov
out
jmp
std
adc
pushf
ret
pop
dec
sub
and
cltd
dec
mov
xchg
jecxz
jg
fwait
and
mov
or
push
or
jecxz
loope
push
mov
stos
jmp
clc
leave
lock
mov
dec
cmp
aas
jecxz
jl
mov
push
outsl
popf
mov
push
mov
fs
rorl
push
hlt
xchg
xchg
loopne
cmpsl
out
pop
or
lret
stos
xchg
cmp
vpsllq
pop
ret
lcall
fiaddl
and
mov
out
cmp
mov
addr16
gs
pop
adcl
jge
sarb
cmp
cmc
movsb
adc
outsl
jmp
inc
orb
outsl
fisttpll
mov
xor
adc
stc
jb
outsl
jns
pop
popa
cmp
leave
mov
adc
jno
test
hlt
xlat
dec
mov
mov
dec
dec
icebp
shl
outsl
insl
fdivrl
add
push
fcoms
pop
ss
les
or
fwait
pop
int3
ljmp
mov
cmp
adc
xor
xchg
gs
cmp
dec
fwait
dec
ja
cmp
jb
jo
xchg
dec
ficomps
pop
pop
mov
gs
pop
mov
dec
jbe
cmp
int
xchg
std
pop
push
push
popf
adc
mull
adc
push
xchg
loop
push
jp
or
push
insl
pop
jno
lods
pop
inc
dec
sbb
adc
flds
arpl
lret
gs
lret
shlb
andb
adc
mov
test
push
hlt
sbb
jns
sbb
mov
cmpsb
push
dec
inc
dec
push
cmp
adc
iret
rcll
sbb
out
shr
mov
cmp
bound
mov
jno
jne
shl
mov
sahf
pop
sbb
dec
jecxz
fidivrs
adc
arpl
movsl
cmp
adc
lods
push
in
ss
in
mov
mov
and
fsubr
xor
test
out
mov
sbb
jo
cmc
mov
int3
adc
mov
movsb
and
in
jmp
sahf
jb
imul
daa
insb
lcall
jne
scas
xor
rorl
insb
lock
sbb
mov
cmp
dec
lds
jg
stos
or
and
fcompl
inc
fdivr
outsl
xor
adc
mov
lahf
mov
imulb
jle
jl
lds
out
mov
out
sbb
pop
hlt
in
bound
sbb
lea
cmpb
push
dec
fsubrp
pop
sarb
mov
outsl
sbb
or
push
movl
stos
push
repnz
test
or
dec
mov
xor
vmovsd
shrb
inc
ss
inc
inc
bound
cmp
xchg
sbb
lds
jnp
xor
mov
jae
test
mov
push
adc
lahf
jne
mov
mov
or
cmp
cmp
cld
dec
add
and
or
sti
jmp
repz
mov
enter
mov
mov
jo
sbb
push
push
dec
push
sbb
mov
mov
inc
xorb
sahf
cmp
je
outsl
sti
insl
daa
mov
adc
pop
cmp
sbb
test
or
loopne
sar
xor
xor
mov
insb
mov
subb
mov
xchg
lret
xor
outsl
adc
xor
inc
adc
lods
xchg
jb
or
cmp
out
cmp
repnz
shrl
cmp
xchg
cmpsb
loop
mov
movsl
add
test
pop
das
xchg
je
jbe
inc
lock
arpl
adc
lcall
mov
mov
arpl
imul
ret
loope
insl
push
ss
repz
or
xchg
adc
jb
std
mov
cmp
lods
sbb
dec
outsb
lods
push
jbe
jb
popf
outsl
aad
or
hlt
loop
ja
int
out
push
jle
jb
dec
pop
inc
jnp
aas
stos
xchg
cmpb
js
pop
pop
out
jecxz
stos
movsb
mov
inc
xchg
xchg
dec
jns
js
or
jp
mov
jnp
sbb
or
pop
clc
cld
or
xchg
jb
aas
addr16
add
out
mov
decl
sub
xor
or
add
and
aad
mov
mov
inc
popa
ret
pop
sbbl
or
jbe
sti
mov
popl
mov
push
cmp
and
inc
jg
test
add
out
in
xchg
push
or
test
pop
mov
inc
xchg
pop
xchg
jo
add
xchg
inc
or
xchg
aaa
scas
mov
scas
divb
add
std
or
enter
sub
loope
push
inc
mov
ss
pop
cli
xor
inc
or
in
push
in
mov
push
mov
outsl
shll
pop
lock
stos
pop
jns
repz
jno
into
xor
push
loope
lock
xor
push
jbe
ss
push
adc
popa
dec
fmull
es
cmp
adc
xchg
inc
enter
push
outsl
xor
jo
xchg
cli
ss
cwtl
outsl
sbb
xor
iret
jae
adc
cmpsl
sti
push
jecxz
push
pop
inc
jle
mov
sti
xor
shlb
push
pop
inc
mov
cmp
push
aas
adc
sbb
push
ljmp
sbb
mov
pop
inc
subl
pop
rolb
jl
mov
cltd
cmp
add
int
cwtl
ja
call
xchg
cld
add
imul
jle
inc
int3
pop
mov
dec
and
outsl
sarb
aas
movsb
sbb
jmp
add
ret
rorb
cmp
cmc
leave
push
inc
mov
push
add
dec
negb
subb
movsl
pusha
ljmp
and
xor
jp
fdiv
sub
push
sbb
or
mov
mov
dec
mov
mov
bound
movsl
xor
mov
ja
lds
or
loope
xchg
in
scas
jmp
test
mov
loop
mov
repz
jecxz
cmp
outsl
cli
mov
imul
adc
ss
xchg
bound
push
nop
mov
lds
sbb
mov
clc
test
inc
sbb
lock
jae
pop
lods
inc
in
stos
arpl
mov
ret
mov
std
adc
mov
insl
dec
outsb
jb
push
sub
jb
lock
mov
cld
adc
fmuls
test
pop
cli
jmp
xchg
sub
or
jg
jle
mov
dec
dec
iret
jb
jbe
mov
aaa
clc
xchg
push
adc
adc
cs
add
dec
mov
test
dec
push
scas
dec
mov
inc
lds
stos
or
fisubl
sbb
int3
imul
int3
sub
rclb
push
cli
out
popf
push
push
sub
push
stos
enter
enter
mov
mov
xchg
out
push
lock
cmp
ljmp
subb
jae
lock
dec
xor
push
xchg
push
mov
sub
je
sbb
inc
xor
rorb
repnz
and
sarb
out
nop
je
scas
and
scas
mov
mov
sub
into
dec
addl
aas
push
fsts
or
fsubs
cmc
iret
mov
cmp
or
sbb
push
out
xlat
push
mov
sbb
testl
mov
jns
dec
push
push
mov
dec
xor
mov
dec
xchg
aas
fwait
dec
ss
dec
gs
push
xchg
jge
loop
jb
outsl
mov
jg
mov
pop
push
adc
out
jl
pop
jmp
iret
mov
stos
pop
dec
cmp
fcomps
js
push
divl
cli
lock
push
inc
outsl
push
push
jmp
dec
out
kmovd
inc
movsl
out
cmc
sti
movsl
dec
cld
arpl
dec
subl
jmp
jmp
insb
outsl
cmp
adc
push
mov
out
jae
repnz
negb
cwtl
jnp
jae
insl
dec
or
adc
test
aaa
sbb
nop
lock
in
jl
ret
pusha
cmp
js
mov
xor
sbb
cmp
push
imul
push
mov
arpl
scas
inc
js
dec
pop
mov
outsl
in
outsb
or
ds
repnz
and
sub
hlt
jecxz
push
mov
leave
arpl
ret
or
mov
jb
mov
mov
dec
and
loopne
sbb
jmp
dec
add
lret
das
jecxz
mov
mov
mov
mov
or
dec
cmpl
leave
cmc
movsb
and
clc
sub
mov
xor
fs
pop
mov
or
sub
aas
test
loop
insb
inc
and
jge
sahf
pop
lock
push
inc
xchg
inc
xlat
ss
adc
aas
dec
notl
mov
xchg
or
inc
add
jns
out
dec
adc
inc
mov
adc
test
jmp
loopne
push
add
sbb
and
cli
sqrtps
pushf
shlb
es
out
push
cmpsl
mov
and
adc
je
push
dec
dec
addr16
insb
push
jno
mov
cs
shll
cmp
scas
push
ljmp
test
movzbl
test
rcrb
add
pop
xor
mov
cmp
js
mov
or
pop
cli
inc
stos
cmp
fimuls
sub
paddw
fcoms
or
jno
jecxz
lock
cs
xchg
cmp
cld
scas
loopne
push
push
cmp
sbb
test
xchg
movsl
mov
dec
push
fadd
xchg
cmp
lock
or
int3
ficomps
cltd
push
mov
mov
les
adc
xor
cmpsl
jbe
jo
xchg
lea
rol
mov
cmp
inc
test
lret
stc
arpl
outsb
sub
jecxz
inc
xchg
cli
aas
xor
ss
inc
mov
dec
mov
mov
xchg
ror
or
fsubl
ss
inc
popf
popf
mov
adc
cmp
in
sub
fmulp
push
pop
cld
sub
testl
jmp
dec
xchg
jo
orl
jb
imul
sbb
sub
insb
inc
call
jnp
lea
scas
fildll
in
in
ret
hlt
jb
fwait
mov
add
cwtl
jbe
cmp
ret
sbb
pop
inc
hlt
fsts
mov
ss
cmp
pop
ss
aam
xchg
cmp
dec
stos
mov
out
outsl
mov
rcll
lock
inc
clc
jl
jge
popf
push
hlt
mov
sahf
stc
mov
push
rolb
shrl
cwtl
leave
mov
xor
or
pop
js
dec
insl
mov
or
cwtl
sub
cmp
pop
shrb
loope
shll
jne
and
lret
test
dec
cmc
jb
int
mov
cmp
pop
jne
push
subl
jns
xchg
lods
xor
mov
dec
jle
dec
lea
jno
mov
sbbl
scas
imul
push
dec
lock
cwtl
mov
neg
mov
hlt
cmp
cmp
popa
sub
push
sbb
lods
or
hlt
or
insb
lea
jb
push
cld
out
or
cli
xchg
leave
jo
loope
daa
xchg
mov
mov
push
xlat
or
bound
ds
int
movsl
jno
pop
jmp
pop
mov
mov
sub
mov
jbe
fucomp
and
repz
lock
in
les
in
adc
adc
cmp
mov
dec
in
and
xor
loope
mov
js
inc
loope
mov
popa
add
incl
adc
adc
inc
xchg
mov
mov
cmp
xchg
sahf
loope
xchg
xlat
jl
dec
cmp
and
xchg
cmc
outsb
sbb
jno,pn
add
adc
push
pop
and
mov
pop
dec
sbb
push
hlt
push
test
lret
xchg
outsl
adc
inc
adc
push
mov
adcb
xor
xor
jl
jb
or
inc
je
icebp
imul
dec
adc
cmp
push
pop
call
xor
adc
lahf
inc
aas
hlt
in
mov
push
enter
inc
mov
arpl
or
dec
ss
and
dec
mov
and
out
cmp
mov
pushf
aas
data16
push
into
dec
movsb
mov
inc
cmp
sub
outsl
mov
or
mov
mov
jge
in
add
cmp
hlt
add
es
sbb
mov
jge
test
push
sub
inc
sub
std
add
idivb
test
insb
pop
xor
add
inc
xor
arpl
jp
int3
shll
addr16
ljmp
stc
out
cltd
scas
loopne
movsb
mov
outsl
bound
fwait
push
imul
inc
dec
xchg
push
inc
clc
pop
imul
xchg
in
jge
inc
fwait
subl
fidivrl
mov
add
mov
sub
sbb
outsl
xlat
add
cmc
pop
xchg
dec
dec
imul
aam
dec
inc
popa
lcall
pop
cmp
adc
jmp
bound
mov
insb
mov
sub
and
adc
fstp
jnp
xor
testl
rcr
jnp
roll
std
pop
jmp
imull
pop
pop
jb
jne
cmp
stc
leave
mov
xor
push
sbb
add
adc
dec
dec
call
pop
dec
ja
xchg
inc
push
icebp
mov
ret
push
cmpsl
sbb
insl
adc
dec
mov
push
ljmp
mov
jo
sub
cltd
je
pop
rorl
dec
outsl
dec
icebp
mov
mov
push
and
icebp
push
aas
pop
cld
xor
aas
inc
nop
adc
inc
mov
inc
cmp
dec
pop
push
out
cmp
leave
ror
xor
scas
lea
test
fnsave
incl
jnp
out
xor
es
pushf
lock
pop
ret
push
divb
push
or
leave
in
rclb
mov
pop
jle
outsl
cmp
jge
push
xchg
js
dec
jmp
pushf
and
in
xor
sbb
fisttpll
dec
pop
xchg
inc
outsl
xchg
out
mov
in
mov
fcomip
jnp
xor
ficoms
fsubrs
rcll
int3
xchg
movl
or
fidivs
pop
mov
ljmp
leave
pop
jae
dec
inc
test
lret
xchg
jae
cmpsb
shl
ror
inc
sbb
pop
dec
cmp
aas
xlat
adc
dec
fisttps
push
mov
daa
int
fcoms
aas
iret
ret
int3
out
stc
ja
xor
shlb
cmp
aas
pushf
and
es
xchg
pop
dec
cmp
and
sbb
sbb
sub
mov
ret
xchg
and
into
stos
adc
xchg
test
jbe
inc
jo
mov
or
and
jp
mov
mov
sbb
push
stos
aaa
jecxz
xchg
stc
scas
lcall
pusha
sbb
leave
jno
arpl
cli
mov
pcmpeqb
mov
out
in
jle
lock
dec
inc
jno
xor
mov
fisttpl
sub
add
cltd
enter
lcall
dec
es
push
int3
xchg
outsl
cmp
les
les
addr16
insl
std
or
cmpsb
test
cmp
inc
push
jge
mov
and
into
andl
mov
loop
addr16
cmp
inc
add
pop
sub
cmpb
icebp
mov
stos
push
lahf
xor
fstpt
inc
adc
cli
adc
jnp
bound
out
lods
stc
sbb
mov
aas
dec
inc
push
in
lahf
dec
cli
jge
mov
fdivrl
arpl
movsbl
rorb
rcrb
xchg
mov
outsb
imull
mov
lds
fists
js
cmp
in
dec
push
mov
xor
mov
aad
je
xor
imul
mov
adc
test
inc
push
push
mov
adc
push
mov
ja
rorl
test
mov
pop
imul
fs
pop
aad
outsl
mov
push
loop
movsl
inc
cmp
outsl
popf
addr16
mov
dec
add
inc
mov
gs
jg
inc
stos
mov
jae
and
lahf
test
movsl
test
inc
pop
jl
push
outsl
insb
daa
lret
xor
xor
mov
repnz
jmp
cmpsb
push
out
lds
test
xor
adc
test
jle
out
lahf
and
and
and
lods
pop
arpl
cmp
or
outsb
adc
dec
push
push
and
pop
xchg
adc
testw
mov
test
push
rolb
xchg
and
fmul
and
xchg
lahf
adc
mov
jne
inc
mov
mov
adc
rol
mov
or
imul
repz
aam
insb
jmp
test
and
dec
sbb
clc
pop
divb
mov
mov
jecxz
sub
jge
push
mov
nop
lods
repz
inc
in
fnstenv
adc
mov
push
repz
mov
push
add
decb
nop
repnz
hlt
rcl
jno
out
ja
or
push
pop
cld
outsl
pop
mov
jb
aas
jne
pusha
pop
xor
aad
pop
loop
shr
add
out
rclb
jmp
inc
fiadds
out
and
or
je
rclb
outsl
mov
cmpsl
jno
mov
fmul
jo
stc
xchg
into
inc
ss
adc
sahf
xorl
cmp
lahf
ds
cmc
and
pusha
jno
cmp
push
out
adc
repz
inc
dec
push
iret
mov
js
sbb
insl
mov
add
add
xor
or
in
les
movsb
inc
bnd
mov
sub
imul
inc
dec
enter
into
cmp
rolb
push
push
call
dec
arpl
add
mov
dec
int
icebp
loop
jno
xchg
cmc
mov
mov
push
adc
repz
inc
enter
aaa
jle
push
jp
aad
out
pop
xor
outsl
lock
les
push
mov
pop
lret
cld
cwtl
pusha
je
inc
inc
cli
push
call
faddl
sub
cmp
xchg
insl
push
mov
xchg
ljmp
adc
push
pop
push
icebp
sbb
hlt
ss
push
jl
pusha
rorb
push
das
pop
jae
ja
mov
gs
test
aas
mov
fldl
ret
mov
pop
dec
sahf
icebp
xor
dec
fwait
pop
insl
pop
test
jo
dec
das
mov
mov
inc
inc
mov
out
mov
lods
dec
in
pop
cli
aas
movsb
into
jb
push
hlt
outsl
or
lret
test
stos
into
in
aam
dec
icebp
xchg
or
dec
dec
fildl
mov
pusha
jle
jmp
cmp
mov
pop
outsl
outsb
jno
jns
dec
je
dec
pop
mov
jo
jb
xor
pop
in
sbb
jb
sub
sbbb
dec
mov
je
shrb
jo
and
lret
push
dec
push
push
adc
push
inc
inc
fbld
frstor
rcrb
pop
sti
jb
inc
lahf
adc
inc
imul
push
pop
and
add
repz
mov
jbe
in
pop
xor
adc
push
ds
pop
xor
sbb
leave
jecxz
arpl
shll
dec
cmp
sbb
cld
mov
jno
jbe
fwait
add
jns
xchg
inc
movsl
dec
sbb
jg
jmp
je
dec
cmp
das
int
fwait
or
add
mov
sbb
or
sbb
cltd
push
pusha
xor
inc
loope
outsl
lahf
mov
cmp
or
cmpsb
jno
mov
daa
mov
std
bnd
cmp
iret
jl
mov
loope
ret
aas
xchg
add
insl
cmp
mov
jo
mov
aas
mov
orb
testl
xchg
and
mov
imul
xor
dec
push
add
ja
xor
cmpsb
sub
hlt
sub
mov
jecxz
pop
movsb
mov
jnp
mov
xchg
cld
xor
xor
and
push
fidivrl
dec
adc
out
push
dec
es
add
lcall
sub
push
das
ja
push
or
xchg
lret
cmp
pop
repnz
mov
dec
in
arpl
insl
addb
mov
sbb
pop
jmp
jb
outsl
sbb
data16
xchg
add
push
xor
adc
pop
dec
jl
inc
and
jle
fsts
adc
pop
and
rcl
pop
or
mov
pop
adc
pop
rcll
xchg
nop
mov
or
jb
icebp
jl
loop
xchg
or
rorb
dec
int
add
pop
lcall
arpl
cwtl
sbb
adc
imul
sbb
cltd
addr16
sub
and
push
loopne
jns
dec
jg
cmpl
aas
push
add
inc
dec
popa
xchg
imul
scas
testb
sub
dec
ja
loop
fstpt
pop
mov
mov
push
lock
fidivs
dec
cmpsb
mov
in
xchg
in
iret
mov
imul
bound
daa
pop
scas
push
mov
xor
imul
das
sahf
mov
loop
mov
cmp
mov
nop
cmp
add
jle
dec
push
dec
sbbb
cli
pop
idivl
push
lods
cmp
sub
push
mov
or
popa
sbb
shl
test
mov
mov
push
xchg
xchg
aad
aaa
out
popf
or
data16
inc
test
xchg
jno
add
mov
cmp
xor
or
lock
jp
dec
push
es
xlat
and
in
xchg
cmp
and
rcr
dec
jb
mov
or
out
fcoml
inc
push
push
xor
or
rolb
ss
lret
jge
cmp
inc
pop
mov
pop
xchg
cmc
cmp
mov
add
jne
sub
clc
scas
jae
cmp
mov
outsl
mov
xor
dec
cmpsl
outsl
insl
stos
jae
mov
mov
inc
add
lock
push
in
push
enter
or
mov
lods
push
mov
inc
stos
into
or
pxor
push
or
imul
jle
add
xor
fcomi
ljmp
inc
js
and
or
popf
cmp
jo
subb
lock
mov
cld
sbbl
xlat
out
adc
dec
aas
std
fbstp
xor
int3
push
cmp
es
jge
insl
lret
mov
sti
push
jo
pop
int
out
out
loopne
pop
shl
movsb
stos
xchg
addl
push
clc
rolb
imul
sar
sbb
fwait
adc
popf
mov
aaa
push
mov
arpl
mov
pop
inc
mov
jne
std
out
jae
or
push
add
pop
adc
lock
cmpsl
or
pop
sbb
xor
jp
adc
add
sbb
out
daa
inc
repnz
and
es
mov
ret
adc
sbb
xor
xlat
inc
add
xor
mov
ss
fcmovnb
push
sarb
dec
imul
sbb
or
subl
sub
fists
gs
push
jae
dec
mov
push
out
push
mov
aas
jmp
jle
std
in
xchg
outsl
in
cmp
sti
cmp
jle
mov
sub
sbb
or
pop
push
pop
test
sbb
xchg
int3
inc
shl
pop
jae
scas
ds
xlat
nop
inc
fstpt
loopne
jnp
and
jmp
xchg
sbb
or
imull
pop
jbe
pop
xor
sbb
les
push
pushf
test
lock
sbb
cmpsb
sub
imul
dec
mov
rorl
enter
ljmp
loopne
in
or
jns
jnp
adc
aas
lds
inc
add
shl
adc
adc
dec
sub
inc
sarl
mov
pop
lea
and
lret
xor
xchg
jnp
dec
sbb
aad
add
negb
dec
in
jle
lock
mov
in
dec
inc
xchg
nop
jae
mov
fwait
xor
leave
xchg
mov
std
pop
jg
push
imul
cmp
sahf
push
data16
xor
or
xorl
fisubrs
sbb
jnp
pop
mov
das
xchg
mov
sbb
mov
std
lds
aas
inc
dec
mov
movsl
add
push
mov
jnp
rorb
in
cmpsl
pop
adc
ja
add
pop
adc
push
out
mov
insl
ss
xchg
iret
or
push
in
stos
ss
dec
xchg
adc
push
and
dec
sub
cmp
inc
out
rcll
movsb
lea
and
test
int3
sbb
divb
cmp
sti
adc
jo
mov
hlt
pop
cmp
mov
adcb
dec
xchg
jg
jne
shrb
lret
lea
xor
scas
xor
mov
imul
cmp
mov
or
jp
push
in
mov
testb
imul
sub
xlat
addr16
addr16
mov
dec
ret
mov
inc
push
xchg
pop
stos
int
and
out
lods
or
jp
push
jecxz
fisubs
cmp
dec
mov
arpl
aas
daa
mov
sbb
mov
mov
outsl
push
sub
add
dec
cmp
aaa
fadds
sub
fsubrl
fsubl
sub
cmp
mov
enter
xchg
das
adc
pop
xchg
mov
xlat
push
or
jmp
mov
or
decb
lods
popf
add
popa
inc
jecxz
test
aas
in
cs
fistpl
arpl
xchg
aas
movsl
hlt
inc
cs
imul
sbb
clc
rclb
ret
xchg
daa
sub
xchg
ficompl
ret
push
pop
add
dec
pop
imul
dec
xor
test
mov
lock
sub
or
dec
jmp
fwait
sbb
mov
sbb
inc
nop
adc
mov
xor
sti
popf
mov
icebp
and
stos
or
dec
scas
repnz
pop
xchg
inc
arpl
inc
ljmp
iret
popf
dec
inc
imul
mov
adc
sbb
and
cmp
rcrl
dec
push
adc
sbb
lods
push
les
icebp
xchg
and
dec
ljmp
lea
lcall
jle
jmp
sub
dec
ret
push
inc
loopne
inc
std
dec
js
imul
loope
cmp
pusha
sub
bound
push
test
xor
push
lds
cmp
mov
fadds
add
cmc
and
icebp
cltd
xor
scas
test
mov
stos
je
cs
dec
push
std
stos
push
xor
sti
nop
add
xor
dec
mov
mov
clc
pop
sbb
mov
sub
fdivrs
jae
fcomps
in
pop
and
lods
cli
aam
xchg
jmp
push
out
mov
loopne
xchg
stc
inc
orl
xchg
push
adc
mov
or
rclb
cmp
jb
psubq
or
jp
mov
repnz
imul
pop
in
out
xor
cmp
mov
imul
mov
shll
mov
jle
mov
lock
mov
testb
push
adc
pop
inc
mov
or
pop
lods
pop
lods
mov
and
push
stos
test
stc
lods
jl
mov
cmp
out
adcb
repz
icebp
cmp
shll
push
push
les
andb
xor
aas
mov
insb
pop
fs
fwait
pop
or
js
ds
mov
xlat
add
xor
fisubs
jmp
lret
push
mov
sbb
das
leave
xor
std
fisttps
aas
test
dec
jno
cmp
dec
mov
sub
jg
orl
inc
leave
sub
xor
mov
shr
ja
mov
shrl
shl
dec
and
cmp
ret
std
or
push
or
shl
mov
xchg
jne
jle
mov
shl
inc
orb
or
lret
fsubr
dec
xor
ljmp
das
dec
xor
xchg
mov
ds
dec
inc
ret
mov
adc
xchg
pop
imul
dec
pop
mov
or
mov
ss
xchg
ds
sub
cmpsb
dec
pop
rorb
or
es
mov
popw
jno
rclb
jo
push
adcl
shl
es
sub
lret
divb
pop
loope
sub
or
xor
or
jnp
mov
dec
mov
pop
aas
xorb
mov
leave
push
lret
repz
adc
popf
mov
mov
jnp
mov
lods
cmp
call
es
pop
mov
or
push
sub
dec
aas
and
ficoms
lahf
dec
clc
aaa
mov
or
outsb
xchg
stos
or
push
pushf
xor
mov
jmp
xchg
stc
je
arpl
outsl
idivl
lret
mov
jns
cmp
push
jb
test
int
addb
lds
scas
pop
shlb
dec
inc
push
jnp
out
cs
dec
and
mov
dec
inc
call
ds
xchg
pop
cmp
mov
stos
cmp
lock
or
mov
mov
popf
xor
cmp
mov
repnz
jae
xor
frstor
repz
adcb
xchg
insb
mov
pop
jno
data16
out
inc
xor
sbb
shlb
ds
out
mov
adc
aaa
icebp
cmp
cmp
pop
cmp
out
sahf
inc
mov
sarb
xchg
inc
loop
mov
push
movl
test
push
push
sub
mov
cmp
mov
xchg
ret
fadd
ret
shlb
jae
test
aas
xor
push
out
enter
push
push
fs
pop
mov
xor
push
push
jb
xor
jl
mov
add
push
mov
pop
and
xor
cmp
sub
jp
xor
adc
out
rol
cmp
mov
mov
fidivl
mov
mov
mov
cmpsb
cmp
movsl
mov
mov
lret
mov
aad
inc
lret
mov
cmp
dec
xor
out
cmp
mov
int
int3
inc
in
mov
cmp
das
dec
movsb
ds
push
xor
rcrb
mov
ret
ds
cmp
inc
les
ss
xor
mov
mov
xor
lret
lea
test
cmp
push
push
dec
pop
inc
push
dec
add
cmp
insb
cmp
push
aas
inc
xor
push
xchg
ss
dec
inc
fs
insb
push
pop
lret
loop
outsl
xlat
inc
mov
mov
mov
cmp
inc
je
mov
ss
mov
inc
cmp
ss
dec
cwtl
aaa
les
pop
mov
inc
cmpl
ds
jmp
push
mov
inc
dec
imul
jg
jg
mov
imul
sarl
mov
ret
cmpsl
xor
push
fs
movb
mov
push
mov
rolb
mov
enter
loopne
shll
jge
mov
icebp
test
or
cmp
mov
sub
out
jae
xor
or
xor
xchg
or
iret
int
inc
xor
mov
mov
out
mov
test
jb
out
mov
decl
xor
jmp
outsl
ss
cmp
test
loop
dec
notb
arpl
mov
push
fimuls
inc
and
fnsave
aas
arpl
xchg
mov
and
push
jbe
decl
aas
imul
or
jmp
and
je
xor
in
or
repz
dec
shrb
loope
mov
sti
inc
pop
mov
ljmp
dec
sti
les
iret
mov
in
push
sbb
cltd
pusha
mov
fisttpl
hlt
sti
push
push
jb
dec
shrb
push
mov
enter
leave
pop
mov
jno
mov
out
dec
out
sbb
std
addr16
adc
or
lret
xchg
pop
nop
inc
pop
push
and
rcrl
adc
sbb
inc
jmp
aas
ret
clc
push
pop
fmuls
jge
hlt
or
movsb
push
lcall
into
add
jo
rorb
bound
outsb
push
std
xchg
outsl
mov
lods
sbb
lods
and
dec
pop
jne
sbb
cmp
fwait
inc
cmpsl
aas
inc
daa
lea
push
or
inc
in
xor
cmpsb
xor
clc
cmp
insl
cmp
hlt
adc
cmp
mov
movsb
ret
cmp
xor
mov
pop
inc
push
cmp
xor
xchg
or
adc
aam
jecxz
mov
jae
mov
imul
sub
mov
adc
xchg
fisubrs
push
xchg
mov
scas
in
jbe
xor
mov
mov
out
test
rcl
pop
pop
enter
xor
push
mov
lret
dec
inc
push
inc
lahf
cmp
inc
inc
dec
fcoml
xor
cmp
in
mov
fimuls
ljmp
adc
inc
push
ss
idivb
mov
out
mov
push
les
loop
xor
cmp
sarb
xor
out
mov
lea
rolb
jg
jnp
aam
mov
dec
movsb
add
cmp
lcall
jne
data16
idivb
pop
enter
enter
mov
fbstp
push
ret
inc
jae
sub
aas
mov
cmp
loop
inc
clc
dec
push
ret
dec
aaa
mov
out
dec
push
mov
inc
inc
aaa
dec
ret
cmp
ret
cmp
xchg
or
mov
lret
ds
inc
cld
mov
ror
clc
aaa
fs
xor
test
test
fdivrl
inc
dec
ret
inc
mov
call
cmp
je
jp
js
inc
int
jnp
jbe
loop
mov
xorl
dec
inc
dec
dec
push
ss
inc
mov
addb
inc
rorb
inc
mov
cmp
pushf
shrl
dec
ss
movsb
les
inc
aam
lea
dec
clc
fcmovne
les
decl
in
stos
nop
in
scas
addb
cmp
or
shlb
cmpsb
shlb
inc
cmp
xchg
xor
daa
hlt
nop
std
mov
out
push
stc
mov
and
mov
mov
sub
test
stos
movsb
inc
adc
cmc
lock
sub
sbb
outsl
fwait
mov
in
nop
jge
mov
mov
dec
cmp
push
xchg
outsl
jp
ja
push
aas
lds
fwait
lret
shlb
sarl
add
inc
in
pop
jbe
jno
inc
lock
lods
repnz
inc
dec
stos
cmp
sti
out
and
xchg
push
xorb
shl
xchg
repnz
push
mov
cmp
jae
dec
pop
fwait
test
mov
fwait
dec
mov
aas
push
add
mov
pop
push
push
jno
and
iret
and
xlat
jmp
repnz
shr
dec
mov
out
int
or
insb
fs
add
xor
adc
dec
or
sub
mov
xchg
push
dec
dec
cwtl
sbb
xchg
aas
fiadds
dec
ds
push
test
pop
popf
dec
xchg
or
inc
xorb
add
mov
or
into
or
ljmp
lods
fisubl
jbe
fadd
and
loop
subl
jp
xchg
mov
sub
add
xchg
cmp
aaa
pop
xlat
fmul
add
movsb
xor
jge
nop
ret
inc
push
sbb
mov
push
shlb
pop
cmp
mov
jmp
pop
rolb
add
cs
pop
dec
fbstp
xor
mov
or
push
out
js
mov
ds
cmp
aaa
inc
jnp
ret
test
or
mov
mov
into
mov
jl
add
lret
sarb
sbb
adc
jno
das
cmp
mov
mov
xor
or
aas
rcll
outsl
pop
faddl
jle
aas
xor
lods
cmc
jl
out
dec
ja
inc
mov
adc
mov
jo
xchg
or
test
jns
call
lea
push
ja
aas
hlt
cmp
iret
pop
loope
pop
push
adc
and
xlat
std
jne
or
cmp
pop
ret
in
mov
mov
out
incb
mov
int3
daa
call
or
adcl
push
or
pop
rclb
push
test
out
mov
das
jmp
pop
lret
js
stos
mov
movsl
les
stos
sbb
gs
pop
fstpt
xor
xor
adc
stc
aas
push
push
sub
jns
mov
std
adc
xor
cltd
lds
inc
adc
push
jnp
movsb
mov
inc
mov
sbb
cmp
mov
xchg
rcrb
adc
jb
mov
or
pushf
sbb
cmpsl
xor
sub
fistpll
fmull
push
mov
shrb
dec
scas
adc
inc
fs
cltd
lock
popa
and
hlt
mov
and
or
stos
jae
and
sub
xchg
push
inc
in
fnsave
mov
aas
mov
and
out
or
fwait
imul
push
outsl
cmpsb
cmp
push
add
dec
arpl
pop
repz
sbb
insb
sub
ljmp
stc
mov
or
loopne
xlat
mov
je
cmpsl
fimuls
ljmp
rol
push
mov
push
mov
cli
loopne
fldenv
sub
lret
sbb
mov
lret
shlb
jl
scas
mov
mov
pop
stos
stos
jg
xor
and
mov
in
mov
push
in
push
loop
lods
fs
cmpsb
pop
push
test
mov
arpl
jb
xor
rorl
in
lahf
dec
or
mov
pop
add
outsl
cmp
cmp
pop
pop
or
popf
push
cmp
jecxz
andb
xchg
mov
fabs
movsb
int
test
leave
movsb
or
lahf
push
icebp
lds
pop
int3
andl
cmpl
jp
outsl
arpl
dec
stos
dec
dec
or
aam
xor
lock
lods
mov
outsl
mov
xor
pop
aas
push
adc
outsl
test
push
jno
ret
xchg
outsl
lods
stos
xor
mov
cld
add
incl
push
rorb
cli
and
add
jmp
je
adc
cltd
cmp
dec
gs
mov
xor
or
in
outsl
xor
push
xchg
mov
push
stos
arpl
stos
adc
icebp
movsl
movsb
mov
pop
dec
adc
pop
xor
xor
jb
dec
scas
xchg
xor
jl
scas
mov
xor
inc
ret
enter
daa
pop
fistps
push
inc
pop
scas
out
js
mov
lods
lds
jnp
jmp
jp
out
jge
in
int3
enter
jb
lea
or
lock
pop
pop
mov
jmp
hlt
inc
cmp
dec
ljmp
or
cltd
add
fwait
adc
xor
stos
push
sub
or
lea
test
push
data16
xchg
inc
xchg
inc
imul
push
pop
jl
mov
dec
adc
lock
xorb
outsl
movsb
roll
push
jo
cmp
out
rclb
rclb
pop
adc
add
ja
cltd
xor
std
movsw
xor
dec
lods
mov
cmc
jle
jl
or
sarb
sub
or
and
dec
xor
call
into
fidivl
or
dec
fbld
jbe
je
fisttpll
pop
ja
out
sti
fmuls
cli
scas
adc
jl
inc
loop
mov
jns
adc
pop
cmp
jl
mov
xchg
es
popa
jb
loop
add
arpl
outsl
cmp
repz
ds
sbb
std
adc
loop
dec
mov
adc
xor
mov
xchg
je
inc
out
aad
mov
adc
daa
and
int
or
add
adc
push
jo
mov
inc
mov
add
mov
iret
jl,pt
imulb
fnstcw
and
and
cwtl
mov
dec
jno
out
xchg
push
aas
add
dec
mov
stos
xchg
pop
mov
mov
sti
aaa
jb
leave
or
pop
leave
xchg
sub
mov
mov
out
cli
mov
inc
in
inc
jle
aas
je
add
insb
inc
sahf
dec
sarb
cmp
push
adc
pop
inc
outsl
lock
cld
cmp
sub
loope
hlt
outsl
add
jl
mov
mov
lods
pop
push
mov
xor
jmp
scas
xor
inc
ds
dec
cltd
xchg
jmp
mov
push
fiaddl
sbbb
xchg
lahf
ja
mov
dec
cmp
add
push
fsubrl
mov
dec
mov
aam
adc
sub
xor
adc
ja
mov
or
mov
xchg
aaa
dec
icebp
dec
jnp
or
inc
push
adc
xchg
dec
dec
int3
xor
sbb
movsb
arpl
ja
rcrb
idiv
push
andl
lret
in
je
jp
adc
mov
pop
push
sub
shrl
xchg
fmul
xchg
inc
cmpsl
adc
rorl
fidivs
imul
into
jge
pop
pop
popa
push
jecxz
into
std
and
mov
pop
inc
insb
stos
fldenv
jmp
testl
xor
cs
pop
cli
or
in
call
leave
adc
cmpsb
sbb
and
jmp
aad
dec
and
adc
nop
jno,pt
or
imul
lcall
xchg
ds
cmpb
outsb
xorl
adc
or
aam
sub
addr16
mov
mov
inc
movsl
adc
scas
mov
inc
mov
push
lock
out
adc
dec
jb
imul
xchg
adc
push
pushf
clc
xorl
inc
xor
dec
outsb
sub
lea
mov
shrb
sbb
ss
cmp
push
jbe
popf
xor
jp
push
inc
mov
jp
cwtl
cmp
lret
cmp
pop
mov
arpl
ljmp
movsb
jno
pop
cmp
cmp
mov
movb
push
int3
mov
shrl
adc
push
or
mov
cli
in
jnp
bound
test
push
adc
mov
clc
cmp
push
sbb
js
lds
sbb
pop
mov
pop
cs
fwait
orl
cmp
es
or
insl
loop
cmp
inc
adc
sbb
mov
cld
lret
pushf
jo
movsb
out
jge
inc
cmp
or
dec
mov
dec
and
mov
mov
outsl
jbe
cwtl
fdivr
arpl
inc
lret
fcmovne
test
jbe
int3
xchg
mov
mov
push
mov
addr16
cld
ja
rcl
lods
pushw
dec
xor
push
adc
mov
sahf
je
insl
add
xor
adc
ret
or
outsl
mov
dec
xchg
add
jp
mov
dec
jne
pop
sbb
lds
aad
fwait
repz
dec
aas
jmp
cmp
inc
jl
popf
push
jo
insl
mov
in
out
cld
stos
ja
adc
sarb
fmull
outsl
dec
scas
andb
or
adc
ret
rcr
add
das
adc
clc
jbe
inc
mov
pop
or
inc
push
xchg
cmp
xchg
inc
loopne
lret
or
lods
nop
adc
and
dec
lods
or
pop
movlps
xchg
mov
andb
popa
cmp
pop
adc
cmp
jno
outsl
jne
fmull
and
push
test
mov
push
cmpsb
mov
lret
sbb
lods
mov
cmp
add
mov
fistpll
aas
pop
xor
pop
jg
arpl
sarb
and
fstl
and
inc
xor
es
xchg
dec
clc
mov
cmp
jae
jbe
mov
repnz
cmp
push
idivl
inc
movsb
mov
sub
inc
insb
nop
daa
popa
les
imul
fbld
aas
nop
hlt
ja
les
arpl
mov
jo
jno
ficomps
pop
xor
jmp
pop
mov
sub
je
icebp
xchg
cmp
xchg
or
fnsave
arpl
pop
cmpsb
shrl
cmp
daa
pop
ds
jecxz
mov
loop
xor
and
push
push
outsb
rcrb
fdivrl
outsb
mov
sub
ljmp
mov
std
or
jle
out
ja
or
arpl
mov
test
mov
dec
cltd
mov
lret
lret
dec
jge
dec
testb
fsubs
sbb
mov
aaa
adc
in
push
cmpsb
jl,pn
xchg
mov
bswap
xchg
jmp
xchg
outsl
xchg
jle
int3
clc
add
xchg
repnz
xor
push
inc
mov
outsl
sub
inc
jnp
mov
jge
cmpsb
inc
pop
hlt
mov
in
xorb
mov
sbb
sbb
outsl
and
ljmp
xchg
xlat
or
mov
pop
jp
aaa
mov
sub
outsb
push
adc
mov
xchg
pop
mov
out
push
cmp
fldl
jae
insl
add
inc
push
dec
pop
andb
fildll
mov
lock
mov
arpl
add
mov
or
mov
addb
outsl
test
sbb
dec
or
dec
mov
cmp
mov
aaa
dec
xor
test
xor
xor
lcall
sbb
xor
jge
repz
dec
xor
cmp
loop
jp
ss
lcall
pop
xor
cmp
mov
xor
xor
dec
cmp
xor
dec
fs
clc
cmp
and
mov
and
push
cld
lret
jb
xor
xor
jnp
cmp
cmp
sbb
enter
xor
cmp
ret
std
cmp
sahf
fiaddl
cmp
cmp
js
inc
int3
inc
mov
lret
jl
xor
sti
xor
push
les
inc
mov
mov
ss
lret
or
jne
adc
mov
mov
add
ds
aaa
mov
inc
xchg
mov
cmp
into
sar
fdivl
push
les
xchg
cmp
xor
sarl
jp
pop
inc
mov
mov
jp
aaa
insl
ret
cmp
loop
cmp
mov
mov
mov
push
int
aaa
mov
inc
mov
lret
inc
mov
dec
les
mov
aas
test
mov
mov
aad
int3
xor
cld
mov
leave
js
ss
inc
inc
inc
cmp
shll
mov
mov
rclb
mov
mov
mov
xor
cmp
ss
inc
pop
add
mov
mov
aam
int3
pop
mov
sbb
sbb
aaa
cmp
cmp
dec
in
sbb
test
push
int
rcl
mov
mov
sub
int
inc
sarb
mov
arpl
repnz
mov
je
xor
cmp
mov
cmp
inc
jnp
cmp
push
int3
push
ret
ss
jp
mov
lds
mov
inc
test
mov
mov
push
cmp
ss
aaa
fs
fstpt
fidivl
dec
jb
insl
jno
push
outsb
cmp
int3
xor
cmc
in
cmp
jnp
xor
scas
inc
js
sti
pop
adc
fwait
jmp
jns
mov
jne
rclb
xchg
adc
jbe
pop
je
mov
mov
aaa
outsl
dec
incl
repnz
mov
xchg
dec
push
add
hlt
sbb
mov
sub
mov
pop
out
ja
out
adc
scas
mov
movsb
aad
aas
mov
fiaddl
mov
and
or
movhlps
cmpsl
pop
pop
fiadds
lods
sub
fdivl
pop
xchg
dec
loope
adc
cmpsb
xchg
mov
xchg
fwait
push
sub
rorl
mov
jecxz
adc
out
xor
out
pushl
pop
sbb
loop
mov
sbb
jno
dec
fcmove
ds
mov
xor
pushf
pop
in
jne
mov
test
andb
mov
jb
inc
mov
fprem1
prefetch
scas
mov
mov
loopnew,pt
in
push
ret
sbb
adc
inc
fwait
pop
loope
sub
and
dec
enter
cs
mov
adc
insl
jno
push
inc
int
pop
lret
daa
ss
cmp
call
icebp
inc
ljmp
cmp
sbb
int3
adc
push
push
mov
mov
inc
mov
scas
int
ret
repnz
repnz
cli
cld
cmpb
lods
sub
push
jns
mov
adc
insb
dec
add
push
mov
and
ret
lods
or
add
outsb
jnp
in
outsl
rcll
jg
fcompl
repz
lea
icebp
mov
addr16
lea
mov
pop
out
test
les
lret
mov
test
pop
add
cmpsl
daa
xor
mov
dec
sbb
sti
std
into
out
xchg
cmp
rcrl
les
pop
inc
lods
mov
dec
in
mov
rcl
xchg
jbe
jae
pop
sbb
iret
leave
push
repz
hlt
mov
push
aas
dec
ds
addr16
sahf
stc
xchg
and
mov
inc
and
sub
mov
dec
stc
bound
addr16
ror
jb
dec
repz
faddl
insl
mov
inc
mov
stos
and
psubusw
mov
orb
jl
popf
cmpsb
test
clc
pop
and
cmp
mov
outsl
and
add
inc
mov
dec
aas
call
jno
fstpt
into
repnz
and
mov
push
std
in
dec
sub
mov
iret
jnp
rorl
mov
or
dec
xchg
in
inc
test
inc
sahf
push
cmp
push
sbb
dec
or
sub
inc
repnz
mov
bound
ss
add
fisttpll
xchg
inc
lahf
pop
dec
iret
sub
add
test
out
inc
mov
dec
and
stc
adc
icebp
jp
jg
test
jae
cmp
js
cltd
test
movsb
das
mov
cld
pushf
sbb
xchg
xchg
jb
mov
cmp
cltd
and
or
mov
aas
inc
add
mov
dec
les
push
test
imul
test
lcall
popf
inc
nop
mov
dec
adc
test
mov
cmpsb
pop
sub
rcll
ds
clc
sbb
mov
and
jb
dec
es
arpl
pop
sub
inc
movsb
cmpsb
jmp
int3
or
dec
pop
insl
adc
mov
jl
lods
lock
dec
inc
xor
and
fwait
mov
xchg
leave
dec
push
dec
mov
jns
pop
xor
inc
or
cli
jmp
leave
ljmp
push
daa
jmp
and
call
in
pop
roll
gs
adc
inc
mov
shlb
cmp
sahf
das
xchg
pushf
mov
shrb
push
jno
bound
andl
adc
mov
lock
mov
pop
jge
xchg
fmull
leave
dec
lahf
ds
adc
cmc
imul
dec
lahf
ljmp
push
pop
inc
or
das
dec
push
mov
fcompl
test
out
mov
push
adc
pop
inc
cmp
inc
or
out
push
xchg
jne
iret
dec
addr16
and
adc
mov
dec
xchg
push
mov
outsl
idivb
mov
mov
sbb
lahf
ja
mov
bound
pushf
cmp
cld
pop
mov
lahf
shll
ret
mov
inc
mov
jmp
cmpl
fidivrs
jl
test
jmp
cmp
fcoml
popf
xlat
ja
adc
or
mov
push
mov
sub
ret
unpcklps
into
cmpb
add
aas
xlat
shlb
adc
cmp
test
mov
cmp
rorl
iret
pop
lea
push
push
jb
aas
insb
aad
sti
sbb
mov
dec
adcb
jb
dec
jp
push
lods
add
jae
rcrb
hlt
push
call
js
mov
pop
push
xlat
add
add
in
xlat
ss
insl
inc
out
push
scas
push
inc
jno
iret
dec
movsb
xor
repnz
outsl
movd
daa
ret
cld
adc
xchg
pop
ljmp
push
cmp
jecxz
xor
dec
jo
dec
jnp
scas
pop
adc
xor
pop
cs
cmp
je
sbb
sti
into
lds
lods
in
push
rcl
sbb
rorl
jecxz
mov
xor
jle
push
jle
dec
out
sbb
inc
pop
sbb
xchg
jne
imull
iret
cltd
jmp
arpl
adc
divl
mov
shll
mov
dec
jne
xchg
test
mov
aaa
dec
outsl
or
jnp
cmpsl
cmpb
mov
fs
sti
xor
fisubs
bound
mov
fidivrs
fwait
loopne
push
xor
addb
cmp
lock
jno
jbe
cmp
rorb
shll
fisubrs
mov
sbb
je
sbb
jmp
sarl
xchg
lret
cmpsb
ds
inc
outsb
or
shl
mov
cmc
xchg
outsl
sbb
aaa
lock
mov
rcll
pop
clc
filds
adc
xchg
and
iret
mov
push
sub
iret
adc
popf
sbb
ljmp
cmp
adc
inc
xchg
outsb
adcl
scas
pop
rclb
and
and
sbb
shl
jle
sub
dec
jg
ja
cmpsl
ret
push
outsl
popf
push
xorb
in
push
and
inc
push
imul
in
bound
ds
mov
aas
push
imul
jmp
pop
stc
rsqrtps
roll
enter
sti
movsb
and
push
jo
andl
imul
pushf
xchg
ljmp
insl
sub
cmp
cmp
int3
nop
je
pop
lock
adc
dec
mov
inc
adc
cmp
mov
nop
orps
das
inc
bound
js
aaa
pop
xchg
fidivrs
test
and
out
or
xchg
mov
inc
movsb
imul
sbb
sbb
adc
xor
arpl
mov
cmpsb
ds
inc
lds
aas
ljmp
jle
cmc
icebp
jb
inc
scas
popa
inc
pushf
aas
ficoms
sbb
imul
outsl
jae
mov
std
dec
adc
push
test
cltd
test
stc
mov
push
pop
in
in
mov
shll
and
mov
outsl
sub
orb
dec
adc
into
fs
int3
fstps
ret
sub
jmp
std
mov
cli
sbb
jno
fs
loop
or
jne
iret
mov
mov
xchg
lock
test
mov
and
sub
jns
mov
pop
cmpsb
movsb
xlat
pushf
add
aaa
imul
fcoml
in
jno
out
ds
idivl
add
or
xor
jp
push
xor
gs
mov
sbb
jnp
shlb
xchg
lods
cmp
and
add
rclb
ss
xchg
sub
adc
add
and
sbb
dec
or
bnd
jl,pt
xor
xor
sbb
aaa
fadd
and
mov
xor
jge
cmp
mov
mov
mov
xor
into
and
mov
dec
outsl
jbe
jl
movsb
nop
std
hlt
adcb
or
test
pusha
inc
jle
std
or
xchg
lret
test
fmull
jle
mov
xchg
dec
insb
xor
pushf
xor
adc
mov
lret
dec
test
cld
adc
insl
shll
pop
add
dec
arpl
xchg
leave
sub
popl
inc
fidivrs
pop
jle
fisttpll
mov
or
inc
push
and
mov
sbb
mov
and
orb
mov
mov
lret
icebp
lea
dec
add
shrb
aas
xchg
clc
jb
into
xchg
pop
inc
cmpsl
pop
mov
sub
sbb
rorb
sarl
fildl
or
xor
leave
push
outsl
mov
pop
pop
imul
test
in
hlt
lds
mov
adc
ret
pushf
lret
test
add
ss
adc
dec
movsl
and
test
movsb
loop
sbb
arpl
inc
dec
push
ljmp
cwtl
and
push
adc
jo
aas
mov
xchg
out
mov
pusha
jmp
adc
xor
notb
jns
sub
es
pop
popf
lds
aas
inc
push
outsl
sahf
dec
xor
test
sbb
xorb
cltd
and
rcl
das
inc
out
cmp
loope
add
mov
sub
test
insl
fistl
and
lret
xor
xchg
dec
sbb
in
inc
and
ja
enter
adc
cmpl
and
push
sub
push
arpl
pushf
lods
dec
push
cmp
jecxz
test
xor
sub
jmp
test
mov
fimull
push
imul
js
xchg
xchg
fmull
mov
cwtl
out
or
dec
rolb
jecxz
lahf
stc
xlat
mov
sbb
dec
int3
dec
jg
in
aas
mov
fs
dec
iret
xor
les
jno
xchg
and
xor
jns
adc
jge
lock
icebp
mov
mov
sbbl
adc
sbb
in
pop
adc
jnp
cmp
mov
xchg
xchg
imul
xor
aas
or
fbld
xor
mov
das
lret
pop
adc
int
pop
push
dec
mov
adc
arpl
cld
lods
test
mul
dec
pushf
pop
jb
out
pop
mov
icebp
data16
jb
mov
xor
pop
sbb
fwait
dec
push
mov
cs
cmp
push
dec
repnz
call
xchg
aas
fwait
or
outsl
and
dec
sbb
jle
hlt
pop
and
mov
insb
sbb
sub
add
add
mov
fs
sarl
insb
in
mov
sub
inc
in
xor
jle,pt
adc
push
or
push
cmpsb
jo
test
sbb
out
cmp
mov
ret
inc
jle
add
cmp
jmp
daa
dec
xchg
mov
nop
sbb
push
stc
out
pop
jl
or
xor
ret
ret
mov
inc
sahf
psrlw
push
or
jmp
mov
stc
xchg
pop
leave
push
or
out
inc
cld
dec
je
es
aad
mov
mov
jb
sbb
fcompl
outsl
inc
sbb
sbb
mov
repnz
ret
sub
jge
imul
out
pextrw
cmpb
ljmp
hlt
sub
scas
jns
sub
and
pop
mov
jbe
js
loope
xchg
lahf
inc
mov
adc
and
mov
sub
ret
outsl
mov
push
push
cld
dec
into
adc
repnz
add
pusha
fwait
xor
and
imul
lock
pop
pusha
jg
mov
and
inc
aas
mov
fstpl
xor
pop
or
push
sarl
inc
imul
push
lds
inc
sub
inc
dec
repnz
inc
pushf
mov
test
fistpl
dec
adc
ds
inc
lock
xchg
mov
adc
or
gs
sub
dec
repz
fld
ljmp
movsl
pop
scas
andb
imul
cli
cli
sbb
pop
adc
pop
add
mov
je
push
aad
js
xlat
push
mov
ret
lds
mov
jle
cmp
jo
jl
in
pop
in
mov
jge
mov
xor
mov
inc
mov
loope
inc
sbb
hlt
push
test
or
jg,pt
enter
ljmp
outsl
adc
cmp
jno
imul
push
out
xor
in
mov
cwtl
cmpsb
xchg
push
hlt
outsb
ret
cmp
ds
and
icebp
out
jecxz
pop
test
push
sub
repz
lret
aas
mov
push
imul
imul
mov
out
add
add
stos
leave
dec
xchg
loop
loopne
int
push
sarl
popa
pop
add
jp
shll
shl
push
scas
jle
arpl
sub
jb
sti
inc
or
fcoms
rorl
push
push
les
sbb
insl
cld
pop
push
push
xchg
adc
pop
cmp
leave
mov
jp
dec
xchg
std
arpl
sti
cmp
xchg
add
mov
es
xor
xchg
aaa
push
inc
or
test
sbb
pop
flds
aam
repz
test
push
sub
pop
adc
xchg
inc
adc
inc
sbb
sarb
loop
inc
xchg
lds
or
icebp
adc
mov
cmovbe
dec
mov
push
lock
xor
mov
mov
or
loopne
push
sub
ss
jns
dec
ret
mov
jl
test
mov
and
xor
mov
ss
cmpsl
mov
xchg
notb
fcoms
testl
inc
and
mov
ljmp
mov
int
cmp
xorl
jne
xor
mov
dec
xor
lds
les
sbb
cmp
clc
jb
adc
mov
xor
cmp
aas
dec
mov
xor
adc
mov
add
adc
add
inc
subl
mov
inc
outsl
test
pop
iret
loop
mov
stos
push
pop
mov
rcrl
ds
xor
gs
inc
or
adc
test
test
xchg
sar
leave
mov
outsl
mov
pushf
mov
cli
ret
inc
enter
inc
ret
lret
inc
jle
jnp
push
cld
in
mov
fadds
shlb
cmp
outsl
cld
pop
mov
ss
pushf
adc
mov
cmpl
aas
ret
ss
push
int3
cmp
in
jae
mov
jge
dec
inc
cmp
jnp
jp
inc
dec
inc
push
jmp
mov
rorl
inc
dec
mov
xchg
push
mov
mov
adc
fimull
rcrl
insb
inc
mov
fadds
aas
ret
mov
mov
push
shrb
dec
jg
ret
jg
cmpsl
mov
jmp
gs
ss
cmpl
mov
pop
xor
dec
xor
outsl
push
test
test
aas
push
dec
jg
mov
push
push
mov
sarb
leave
je
mov
ds
ss
push
test
sarl
mov
inc
aas
les
inc
mov
mov
jae
lds
inc
cmpsl
lret
rcrb
jg
nop
xor
sti
and
mov
nop
adc
dec
int
pop
xchg
lea
lds
cmp
outsl
jo
or
in
inc
or
pop
inc
fidivrl
adc
in
xor
into
adc
lods
jl
jb
aas
shlb
jg
sbb
xchg
jns
stos
popf
iret
push
sub
pop
cmp
and
outsl
fadds
dec
adc
loop
xchg
sub
jo
fidivrs
cmc
push
dec
in
out
sbb
push
mov
push
jmp
outsl
lret
fsub
int3
xchg
jnp
mov
mov
shrl
cmp
leave
xchg
or
ret
sti
dec
pushf
mov
xchg
and
and
outsl
dec
scas
out
inc
movsb
or
pushf
or
mov
cld
in
xor
xorb
lahf
sar
dec
rorb
xchg
je
mov
sub
xor
in
clc
lret
outsl
mov
std
shld
adc
ds
mov
mov
leave
xor
imul
inc
inc
loopne
mov
pop
sbb
inc
out
call
addl
cwtl
aas
pop
cld
bnd
dec
enter
jmp
xchg
daa
icebp
scas
sbb
or
xchg
fimull
leave
mov
xchg
lods
xchg
lock
imul
sbb
pop
lock
icebp
lcall
mov
xchg
js
add
outsb
dec
lods
fwait
pop
dec
jecxz
dec
xchg
ljmp
scas
dec
inc
adcl
mov
popf
inc
daa
push
outsb
sub
inc
in
iret
popa
push
mov
lods
and
pop
imul
les
mov
cmp
cmp
ljmp
ret
dec
push
dec
or
mov
cmp
dec
adc
pmuludq
dec
cmp
lods
dec
add
aas
int
push
sbb
pusha
fdivs
cmp
mov
leave
out
movsb
inc
adc
push
or
add
jo
push
or
adc
xchg
rcrl
xchg
jae
lods
in
xor
adc
mov
or
popa
dec
jge
fnstenv
rcll
ss
lods
mov
aaa
or
and
mov
mov
lret
aaa
and
xchg
movsb
sbb
cmpsb
mov
sbb
or
js
sbb
mov
inc
xor
lds
outsl
stc
push
mov
jecxz
xchg
jp
ret
jnp
rclb
xchg
mov
adc
cld
test
mov
xlat
cmp
adc
stos
push
insb
aas
movlps
mov
push
jae
mov
sbb
int
xor
jo
dec
jnp
jecxz
jb
adc
xlat
shlb
out
push
xchg
loopne
xchg
in
outsb
push
icebp
js
les
mov
mov
xchg
pop
ljmp
push
push
popf
imul
jg
or
dec
mov
ror
je
and
mov
cmp
stos
leave
lahf
sbbl
outsl
popa
push
mov
loope
fmull
xchg
ror
sbb
push
dec
xor
out
xor
daa
or
pop
xchg
fwait
clc
movsb
mov
movsl
dec
mov
mov
call
out
test
xchg
mov
imul
dec
adc
test
outsb
push
dec
call
fs
and
repz
sbb
sti
jge
push
std
add
test
and
jne,pt
test
out
out
jno
lea
xlat
test
adc
push
setg
outsl
sahf
sbb
cmp
cld
pop
out
lock
mov
test
shrb
outsb
xchg
jno
lock
insl
mov
divb
fiadds
lods
or
fcomps
in
adc
repnz
test
mov
loope
je
adc
rolb
int3
jecxz
jmp
xchg
out
inc
sub
push
mov
mov
movsb
out
cmc
dec
or
je
test
aas
jle
in
or
dec
pop
mov
dec
mov
les
dec
cmp
cmc
inc
hlt
mov
add
fnstcw
call
dec
jb
inc
inc
adc
adc
repnz
or
jp
jns,pn
mov
lods
fcoml
push
dec
bound
ds
xor
sbb
push
in
inc
pop
in
jno
inc
imul
inc
or
ss
sbb
dec
jge
lret
pinsrw
pop
nop
push
fdivl
jg
mov
xor
das
fbstp
push
adc
adc
pusha
in
jmp
stos
ret
mov
sub
aaa
pop
adc
nop
hlt
xchg
adc
cmp
mov
icebp
mov
adc
sbb
and
dec
mov
jb
cwtl
daa
dec
mov
inc
inc
lahf
push
sbb
mov
or
aas
or
in
xchg
test
push
out
test
mov
push
int
cmp
adc
mov
mov
out
movl
mov
insl
or
out
scas
test
xor
dec
mov
loop
and
cmp
or
push
mov
sub
shl
sti
mov
inc
aaa
out
jle
xchg
outsb
push
push
ss
mov
bswap
push
jno
push
sbb
andl
hlt
sahf
inc
ret
push
data16
jae
jb
inc
int3
divl
dec
icebp
mov
inc
sbb
lods
lods
dec
dec
gs
mov
out
xor
dec
push
adc
lret
in
je
jp
mov
inc
mov
adcl
pushl
cld
xchg
ds
dec
push
lods
inc
pushf
sbb
cmpl
data16
repz
fmuls
ja
clc
inc
aaa
pop
gs
loop
jb
inc
mov
repnz
inc
lds
inc
sub
push
jnp
test
cmpsb
insl
rcr
and
jbe
pop
pop
add
cmpsl
pop
add
adc
int3
out
push
sbb
lahf
push
mov
fs
dec
dec
test
insb
inc
mov
icebp
mov
cmp
popf
mov
stos
xchg
in
xchg
mov
and
gs
rol
into
arpl
in
pop
cmp
shrl
mov
js
loopne
cld
cmp
movsb
repnz
push
fdivrs
mov
sub
mov
dec
push
sub
not
lock
mov
mov
in
xchg
mov
ret
call
inc
push
aas
push
daa
xor
add
das
sub
jg,pt
fcomp
xchg
xchg
dec
and
pushf
insb
adc
cmp
jne
das
push
test
and
gs
or
pop
jbe
clc
loope
fildl
jle
or
fsubrl
dec
pop
push
and
fsubl
lods
adc
mov
inc
push
xchg
dec
in
pop
mov
repnz
outsb
cmp
mov
in
pop
cmp
adc
call
test
pop
xor
sti
arpl
int
xor
outsl
inc
ret
lret
add
lods
jge
addr16
fstp
insl
pop
sbb
jle
mov
gs
into
inc
push
fsubrl
pop
subl
lret
test
mov
mov
adc
ficomps
xchg
daa
in
pusha
ret
mov
sub
ja
pop
adc
pushf
mov
lret
sub
in
push
leave
dec
std
push
rolb
cmpsb
jge
dec
lds
ret
pop
fwait
lock
push
jb
lret
jno
mov
push
icebp
iret
lock
lret
loope
xchg
add
sub
aas
push
push
test
or
dec
outsl
loop
cld
ds
imul
insl
ds
mov
pop
or
add
aad
in
scas
repnz
pushf
cld
jl
cmp
ja
jnp
nop
jno
sub
je
cld
ja
adc
outsl
in
mov
or
mov
dec
dec
or
mov
lret
push
std
inc
cmc
inc
fdivp
arpl
leave
xor
jbe
mov
add
mov
adc
or
jg
dec
dec
in
dec
push
and
frstor
orl
mov
sub
fsubl
lock
xchg
xchg
dec
adc
adc
stos
cmp
jno
sti
pushf
sub
mov
xchg
rcrl
outsl
pop
jno
test
repnz
ret
iret
lea
xchg
xchg
add
ja
aam
sbb
stos
dec
out
ss
shrl
out
jne
popf
mov
lret
mov
pop
imul
push
xchg
xchg
lods
aas
and
mov
cmp
in
lock
rorb
jnp
sub
stc
cld
mov
stos
sbb
inc
jg
jg
jnp
xor
push
xor
and
ds
test
ljmp
adcb
dec
jnp
mov
xchg
outsl
stos
popf
jecxz
jg
push
mov
rcrb
or
xchg
repz
aas
xchg
aam
sti
pop
insb
pop
push
int
imull
push
ret
xchg
jb
dec
mov
outsl
fwait
xchg
out
adc
mov
mov
xor
mov
negl
dec
cld
mov
inc
mov
or
aas
repnz
lret
xor
jb
jge
sub
or
pop
outsl
xor
int3
scas
cmp
jo
xor
push
dec
mov
nop
adc
aad
cmp
sar
push
cmp
mov
cmpsb
fisubrl
fidivl
and
push
aas
mov
pop
mov
xchg
sbb
pusha
xor
popa
jne
loop
pop
dec
xchg
dec
hlt
iret
xchg
push
stos
aas
inc
push
test
sub
jnp
mov
rcll
bound
lahf
mov
lret
clc
push
pushf
mov
data16
or
mov
test
add
scas
enter
mov
cs
nop
mov
outsl
fidivrs
mov
ljmp
jge
not
dec
jl
dec
hlt
ljmp
cs
mov
pop
and
dec
leave
sahf
outsb
jb
pop
mov
ljmp
out
test
or
or
in
pop
clc
and
mov
and
fisubl
and
nop
outsb
jb
xor
mov
outsl
jbe
jmp
and
dec
mov
push
into
lahf
enter
mov
lock
xchg
cli
dec
fidivrl
cmp
pop
iret
fdivrl
mov
mov
push
ljmp
loope
sarb
push
inc
or
add
jle
repz
jecxz
pop
out
lods
mov
pop
dec
sbb
or
cmp
ds
mov
jmp
je
xchg
icebp
xor
ror
dec
test
sbb
pop
dec
cmp
loope
add
sub
pop
in
popa
aaa
stos
sbb
xchg
dec
stos
sahf
xor
push
inc
in
mov
pushf
cmp
or
ss
push
mov
lock
xchg
jno
inc
dec
mov
in
insb
into
push
mov
mov
xchg
cmpsl
cmp
pop
push
xchg
in
push
xchg
inc
sbb
inc
dec
jmp
xlat
inc
mov
sbb
int
cmpb
out
rorb
push
cmp
pop
lea
and
xor
mov
pop
out
cmp
bound
mov
add
lds
sbb
pop
hlt
shl
xchg
std
sub
and
adc
lds
dec
xor
dec
pop
mov
sub
mov
inc
sub
fisttps
xor
jnp
cmpsl
mov
xor
cld
fidivrl
inc
mov
cmp
aaa
dec
mov
imul
push
jmp
pop
cld
in
push
sub
dec
jno
push
cmpl
xor
cltd
dec
addr16
inc
lock
add
add
lret
mov
mov
addr16
out
mov
sbb
lcallw
ds
add
fdivrl
xchg
rcll
push
jp
pop
xlat
jl
xor
adc
sub
sbb
push
push
loopne
and
mov
sbb
repnz
pop
ljmp
and
push
cwtl
mov
xor
mov
int3
jae
adc
push
movsl
ficoms
aaa
cli
lods
arpl
stos
dec
jp
cmp
movl
add
xor
movzbl
push
jmp
mov
adc
push
data16
ja
cwtd
dec
jnp
mov
mov
fcom
push
lret
imul
inc
je
sbb
inc
ficomps
sbb
pop
mov
imul
fldcw
dec
pop
jns
shrb
dec
ds
cmp
lret
test
push
mov
xorb
adc
cmp
cmp
push
jno
mov
decl
pop
jl
lret
mov
frstor
outsl
add
inc
pop
and
paddw
xor
mov
test
jle
xor
sbb
mov
pop
xor
xchg
adc
jnp
divl
lds
loop
aas
dec
mov
sbb
mov
nop
fs
and
iret
arpl
rcll
lock
test
xchg
xor
loop
mov
jecxz
push
sub
movl
in
and
sbb
cmp
incb
inc
jo
mov
inc
cmpsb
jp
cmpb
je
push
repnz
sbb
mov
dec
js
dec
test
push
popa
sbb
lcall
sbb
mov
aas
mov
adc
or
jnp
xchg
ds
push
cmp
adc
call
jg
fdivs
inc
je
in
mov
popf
push
outsb
in
fxtract
inc
xor
sub
ficoml
pop
sbb
mov
mov
jbe
arpl
fsubrs
add
push
outsb
mov
adc
daa
cmp
mov
cmc
fwait
push
inc
enter
mov
iret
imul
cmp
cmpb
mov
testb
lock
pusha
nop
aad
out
js
rclb
xchg
lods
aaa
jb
dec
push
stos
aas
mov
cmp
mov
or
mov
xor
sbb
clc
jp
popa
and
sarb
jae
stc
aam
mov
lret
bound
and
mov
jl
mov
pop
fwait
xchg
mov
sbb
movaps
cltd
dec
and
adc
pop
repz
mov
stc
jecxz
xor
xchg
push
adc
mulb
dec
shlb
movsb
or
inc
mov
inc
lods
bound
icebp
mov
out
mov
outsl
sbb
inc
jmp
repnz
jmp
xchg
loop
js
lret
xchg
jb
aas
in
mov
mov
aas
or
imul
fcmovnb
int3
adcb
idiv
dec
xchg
rcll
aas
sbb
jecxz
push
push
out
out
addr16
sbbl
pop
mov
push
fdivp
xchg
pop
mov
or
pusha
push
adc
ljmp
cmpl
scas
pop
jae
adc
mov
or
fiaddl
imul
cmp
aad
xchg
sub
cli
cld
pop
mov
mov
std
popa
jae
add
daa
roll
icebp
mov
addr16
test
insb
push
ja
jb
dec
test
inc
push
and
lock
neg
cltd
pop
mov
pop
in
pop
mov
cmp
aas
sbb
cltd
lret
test
ss
mov
pop
sbb
cmp
lahf
clc
or
ds
fwait
pushf
mov
aas
data16
ja
cmp
xor
fimuls
jecxz
ds
jb
xor
aaa
cltd
adc
daa
mov
outsl
ror
into
sbb
jp
push
sub
loop
mov
cmp
inc
push
shrb
imul
lahf
arpl
lret
lcall
mov
sahf
sbb
jmp
xchg
scas
dec
sbb
pop
stc
sub
in
push
xchg
subb
cli
stc
lret
dec
lods
mov
xor
icebp
flds
inc
mov
repnz
mov
push
mov
cmpsb
dec
sahf
push
pop
push
cli
xchg
xor
pop
ss
pop
lret
in
loopne
pushf
out
scas
ds
mov
adc
pusha
shr
push
mov
mov
mov
push
or
stos
xchg
xchg
push
sub
inc
mov
mov
cmp
xor
sbb
adc
dec
mov
and
ficomps
fwait
mov
ss
adc
cmp
std
push
dec
ss
sub
mov
lret
lret
adc
outsb
xlat
lds
push
ja
or
outsb
mov
cmp
ds
inc
cmpsb
ja
jno
mov
inc
adc
lds
repnz
dec
dec
adc
out
sbb
lds
lcall
adc
xor
and
les
mov
pop
test
insl
psllq
inc
test
outsb
push
inc
int3
cmp
lds
int3
xchg
pop
xor
outsl
loope
nop
xlat
int3
scas
orb
outsl
mov
fnsave
sub
jno
fwait
push
je
test
and
cld
out
mov
cwtl
test
mov
dec
outsb
dec
in
test
dec
mov
fisttpll
jnp
dec
pop
aaa
call
iret
jns
dec
divl
add
ss
xchg
add
adc
mov
sbb
cld
push
dec
sub
xchg
xlat
std
insl
movsb
mov
mov
cld
mov
adc
stos
loopne
jno
xchg
imul
lods
jnp
mov
cmpsl
lfs
lds
xlat
push
xchg
movsl
outsl
cmp
ja
fisubrl
aaa
test
out
fwait
mov
jno
pusha
sbb
mov
mov
jno
fisttpll
int3
inc
or
loope
in
pop
adc
inc
int3
mov
sarl
and
jbe
push
sbb
ss
or
jb
out
popa
mov
loopne
in
jno
sbb
mov
xor
ljmp
ss
jae
push
lods
adc
push
xor
adc
xchg
mov
adc
hlt
adc
fnsave
or
in
icebp
xor
fs
in
adc
mov
jns
ja
inc
int
sub
push
fsubl
inc
add
and
push
ret
inc
aas
pop
ss
les
lds
sysenter
xchg
mov
mov
rorb
lds
ret
adc
mov
xor
popa
cmp
dec
xchg
dec
dec
add
or
jge
push
xchg
mov
sbb
lods
aas
mov
sbb
icebp
and
rolb
dec
xor
mov
outsl
faddl
sbb
xor
mov
jne
jmp
xor
stos
cmp
sub
mov
test
pop
xchg
lock
js
lods
mov
jl
sub
arpl
mov
pushl
in
pop
iret
call
xchg
inc
mov
cld
leave
nop
mov
and
sub
push
jnp
inc
movsl
push
out
decl
daa
gs
or
cmpsl
mov
jno
cmp
or
jne
in
or
rorb
enter
test
xor
push
call
std
mov
hlt
fldcw
mov
aaa
fcmovne
sub
rolb
imull
je
subb
cmp
jmp
scas
mov
inc
jns
dec
sbb
push
and
or
lods
daa
xchg
sub
mov
xor
cmp
or
fistpl
js
inc
test
into
pop
pop
dec
loop
pop
fiaddl
stos
fistpl
roll
push
cltd
xchg
lret
sbb
mov
movsl
xlat
call
jle
xchg
scas
or
pop
cmp
test
xchg
mov
cmp
xchg
mov
imul
fnstcw
sub
jb
jp
add
gs
sub
push
int3
das
lahf
dec
xchg
cltd
aam
sar
inc
popf
inc
neg
jnp
es
dec
push
lock
loopne,pt
out
subb
cld
fdivrs
or
push
enter
pop
sub
dec
pop
inc
cmp
sub
inc
aas
push
push
out
push
pop
inc
lods
mov
sti
pop
jl
jmp
out
fldt
mov
adc
bound
bnd
push
leave
dec
out
or
out
les
mov
mov
fsubl
or
icebp
ss
jmp
or
cmp
movsb
dec
dec
stc
sti
decl
mov
mov
xchg
fs
adcl
inc
jo
scas
stc
fcmovnbe
mov
je
sbb
push
js
je
pop
je
rolb
and
hlt
push
cmc
fmuls
outsl
xchg
push
dec
xchg
ss
lock
sub
push
jno
repz
mov
xchg
dec
sbb
popf
scas
pop
push
mov
dec
push
flds
jl
lcall
cmpsl
push
cmc
and
stos
ss
les
mov
push
jno
adcl
sub
mov
dec
sbb
mov
push
sbb
and
aam
mov
xor
out
mov
jno
lahf
push
stos
cmp
lds
fs
jecxz
arpl
cmp
into
cmp
stos
sbb
sub
xchg
cmp
jnp
movsl
cmpb
push
cltd
das
cmp
icebp
leave
icebp
sbb
std
pop
arpl
iret
mov
sub
f2xm1
sbb
pop
jl
jle
and
or
mov
sbb
stos
and
test
insl
sub
dec
lret
imul
in
fs
pop
imul
xchg
dec
dec
mov
mov
popa
ret
jne,pt
pop
adc
pop
cmpsb
or
cmp
xchg
gs
adc
out
jnp
je
sub
es
stos
jmp
sub
jnp
cmp
xchg
out
dec
cld
sub
test
xlat
dec
add
cmp
outsl
xlat
pop
mov
xchg
and
mov
jb
cmp
mov
inc
mov
fs
add
mov
add
jle
xor
sub
jbe
cli
mov
outsl
sub
std
inc
pop
jnp
push
inc
mov
xchg
rclb
std
and
pop
adc
and
pop
shrb
and
addl
and
mov
mov
jo
cmp
lcall
ja
sbb
shrl
dec
js
imul
lret
dec
ret
daa
lret
hlt
dec
cmp
cmp
mov
aam
cwtl
adc
push
xchg
dec
dec
popf
outsl
stos
push
fidivl
mov
pusha
js
mov
mov
stos
hlt
dec
dec
shlb
xchg
adc
clc
xchg
xchg
dec
mov
lcall
dec
mov
pusha
fldcw
pop
add
cmp
or
movsb
push
divb
aas
cmp
push
jge
xchg
push
outsl
jae
adc
dec
xchg
pop
lds
sarb
out
push
xor
vcmpsd
sub
xlat
mov
js
pop
iret
dec
imul
adc
stos
bound
cmp
push
gs
mov
sti
dec
fs
lods
mov
cli
jmp
lock
add
mov
test
test
cmp
loop
pusha
inc
adc
jle
adc
push
mov
or
mov
pusha
xor
in
sti
je
lock
fdivrs
jle
ljmp
inc
xor
push
dec
js
inc
repz
dec
repnz
mov
inc
sub
or
shl
stos
nop
pop
jge
xchg
imul
imul
fs
arpl
xchg
sbbb
loope
push
push
packsswb
daa
mov
xlat
ds
mov
jmp
xor
mov
jno
repz
stos
xchg
faddp
lods
outsb
lcall
adc
lds
imul
ret
push
push
pop
or
movsb
pushf
mov
in
test
mov
xorl
arpl
cmp
call
sbbb
aas
push
pushf
test
cmp
mov
xchg
lds
add
cli
pushf
adc
hlt
addr16
int3
fdivl
cmp
lods
push
sub
repnz
mov
jns
xlat
sbb
add
sub
sarl
mov
or
inc
sub
cmp
lds
or
dec
jp
mov
jo
mov
or
jo
in
push
mov
push
out
jne
inc
lds
xchg
pop
and
loope
sub
xor
mov
mov
xchg
inc
gs
dec
ret
js
aas
fidivl
push
dec
push
add
add
es
sbb
mov
dec
cmp
jge
pop
sahf
sarl
pop
cmp
ja
or
mov
jb
aaa
jns
adc
dec
outsl
ds
cmp
mov
fnstsw
shrb
sbb
dec
mov
ja
sub
and
in
mov
jns
ret
mov
jne
sar
push
mov
cmp
mov
in
cmp
ss
pushf
cwtl
in
addr16
aam
shrb
add
outsl
movsl
pop
jge
ja
dec
dec
addb
pop
lds
int3
push
xor
pop
dec
cmpl
aas
mov
mov
int
and
fistpll
cmp
fwait
jl
jge
dec
ja
arpl
fwait
sub
sbb
fcomp
lret
cmp
fistl
jae
repz
or
mov
xor
jae
dec
mov
sbb
or
or
push
sub
fnstcw
xchg
movb
inc
add
ss
outsl
or
jge
rcll
xchg
popf
fadd
cld
cmc
imul
bswap
lahf
js
jg
cmp
fbstp
into
cld
inc
addl
sbb
nop
fs
cmp
jns
mov
cmp
sbbl
jmp
cmp
aas
jp
dec
sbb
arpl
jne
ds
lock
inc
dec
mov
loop
push
adc
ret
xor
xor
leave
stos
jge
mov
lea
and
out
loop
outsl
inc
mov
loop
ds
dec
pushf
and
je
sub
aaa
sbb
mov
xchg
push
or
jg
ret
mov
pushf
rolb
mov
lods
mov
mov
or
test
sbb
dec
dec
xchg
adc
xor
cmp
adc
xor
sbb
mov
mov
mov
mov
and
mov
shrb
jl
mov
cmpsl
in
sub
shrl
daa
mov
jbe
in
popf
das
xchg
xchg
hlt
pop
adc
andl
insb
das
jecxz
arpl
or
inc
jno
push
cltd
mov
inc
dec
jp
aas
test
jbe
mov
mov
rolb
sub
enter
push
mov
dec
adc
inc
lea
aas
imul
les
xchg
xchg
dec
cmpsl
inc
lahf
sbb
pop
sub
xor
mov
lret
ja
mov
dec
lea
fwait
inc
mov
cmp
int3
cltd
xchg
jae
lret
push
stc
idiv
fstps
leave
and
sub
scas
shll
push
xchg
iret
mov
dec
adc
hlt
dec
mov
xchg
fidivs
add
mov
and
push
mov
dec
dec
mov
cli
cwtl
dec
xchg
push
inc
jno
dec
and
add
lds
dec
xor
popa
mov
ficoml
mov
cmpsb
cmp
cltd
or
sbb
pusha
adc
xchg
scas
roll
jle
push
mov
jp
push
xchg
push
dec
nop
divl
jecxz
rcl
push
pop
push
dec
lret
lahf
insb
cmpsb
push
adc
push
jb
scas
dec
je
pop
xor
pushf
mov
or
add
dec
cmp
sbb
int3
insb
mov
aas
hlt
lahf
fadds
outsl
bound
pushf
adc
insl
sub
mov
xor
lret
xor
or
push
pop
inc
mov
mov
xchg
ds
jo
mov
adc
inc
orps
mov
jb
dec
xchg
fdivr
ja
mov
ss
fdivrl
push
fwait
push
sti
jge
dec
mov
ja
dec
idivb
ja
addb
xor
insl
les
xchg
xor
xchg
aad
insb
push
arpl
in
imul
cmp
adc
mov
push
dec
test
test
or
loop
bound
cmc
test
mov
pop
je
or
mov
divl
adc
lds
imul
jns
jecxz
jb
mov
test
and
test
lret
aaa
cmp
out
sti
push
dec
mov
mull
xor
lea
mov
sbb
mov
je
pushf
xlat
test
dec
xchg
adc
xor
cmp
xchg
pop
jne
dec
movsl
xchg
arpl
outsl
lea
or
fisttpll
sti
stos
rorl
push
push
int
push
ret
loope
inc
jns
scas
and
aad
xchg
xchg
jp
push
cmp
dec
mov
lea
jl
and
inc
and
ret
xchg
es
mov
jl
mov
mov
cmp
scas
inc
inc
push
adc
test
les
clc
xor
cmpsl
mov
mov
push
mov
xorl
mov
fdivs
loop
inc
cmp
mov
xor
xchg
xor
push
jae
mov
mov
ds
ss
lret
xchg
repnz
sub
andb
ss
mov
sbb
pop
push
jno
mov
ret
xor
xor
add
mov
mov
aaa
xor
nop
ret
in
lds
xor
push
outsl
xor
mov
xor
mov
mov
dec
jl
lret
mov
mov
jae
stos
cmp
fdivp
xor
inc
scas
xor
int
xor
cmpb
repnz
push
mov
les
cmp
ret
inc
xor
mov
xor
cmp
cmp
jmp
mov
mov
xor
roll
mov
push
xor
pop
inc
push
int3
mov
sbb
stos
les
cmp
leave
inc
xchg
pop
test
mov
inc
ret
cmp
pop
push
xor
inc
mov
in
ret
xchg
bound
mov
xor
adc
pop
inc
push
dec
push
dec
xor
or
mov
cmp
hlt
mov
xor
push
pusha
dec
push
inc
push
xor
enter
ret
bound
iret
les
lret
jo
cmp
xchg
pop
dec
cmp
pop
pop
lret
jae
jp
pop
xor
sbb
aaa
adc
mov
int
roll
into
cmp
inc
arpl
mov
mov
arpl
jb
pusha
mov
orl
cli
bound
push
inc
push
dec
cmp
inc
jnp
inc
inc
pop
mov
inc
mov
xor
inc
cmp
pusha
pop
adcl
dec
in
push
dec
jnp
cli
loopne
jl
leave
pop
cmp
ss
ljmp
dec
pop
mov
mov
inc
xor
xor
rcll
mov
les
ds
cmp
dec
mov
ja
push
mov
std
cmp
fdivrl
or
test
add
push
std
and
stc
push
ss
fwait
cmc
cmovp
xchg
pop
and
and
dec
dec
test
or
dec
aad
insb
xlat
xor
and
fwait
out
mov
ret
push
or
fstl
pop
clc
add
jge
rcll
pop
jo
hlt
pop
push
xor
iret
mov
imul
jo
mov
add
incb
loope
pop
pop
es
mov
enter
ds
add
jbe
fdivl
xchg
sbb
pop
mov
rclb
stos
cmpsl
ret
lret
jno
mov
jge
aam
test
jle
popa
enter
hlt
push
outsl
xchg
inc
call
out
cld
mov
rol
scas
jnp
scas
roll
addr16
pop
outsb
xor
jmp
insl
call
mov
cld
sbb
pushf
aas
push
xor
inc
shlb
pop
jle
add
jne
jbe
mov
cmp
aas
nop
adc
notb
sar
sub
fisubrl
ret
test
inc
cmp
add
or
pop
xlat
cmpsl
xchg
aaa
stos
negl
xlat
xchg
insb
in
cmpsl
gs
and
outsl
sub
jg
mov
ret
mov
xchg
add
xchg
dec
cmc
cmp
xor
loop
mov
ffree
std
inc
xlat
movsb
ljmp
outsl
mov
mov
loopne
stos
mov
cmp
or
aas
mov
xchg
mov
dec
jmp
subl
enter
dec
inc
jp
fsubl
out
bound
dec
pusha
jg
outsl
cs
sbb
add
adc
push
scas
xchg
xchg
andb
aas
ret
outsl
jno
xlat
stc
dec
sbb
in
adc
stos
scas
je
xor
dec
lahf
inc
push
in
loopne
imul
cmp
clc
lods
push
movl
adc
in
std
loope
outsl
pop
push
pop
xchg
fs
jno
pop
push
push
cmp
test
pop
push
mov
jmp
ret
inc
test
outsb
sub
mov
mov
lock
inc
mov
add
push
sbb
outsb
ficoml
in
data16
cmpl
outsl
ja
lret
sub
adc
jecxz
push
pop
shrl
dec
mov
imul
rorb
dec
inc
sub
jno
push
insb
adc
out
xor
ret
mov
xor
iret
rorl
xor
dec
sbb
rorb
enter
cwtl
mull
inc
pushf
fbld
jge
out
mov
add
xchg
push
sbb
cltd
shr
xchg
add
mov
scas
jmp
stos
adc
inc
sbb
or
sub
inc
ror
jle
mov
and
lret
roll
jge
ret
cmpsb
jge
pop
add
rclb
orb
or
cmp
gs
sti
dec
jo
roll
jp
mov
es
std
aad
popf
mov
dec
ret
lds
mov
mov
dec
notl
add
insb
cli
stos
pop
mov
inc
xchg
xchg
ds
leave
es
les
xchg
and
cmp
dec
xor
mov
out
or
cmpb
test
jb
or
push
sbb
xchg
xor
add
insb
jne
jl
jle
outsl
ret
movl
or
popa
pop
or
adc
loopne
cmpsb
adc
mov
xchg
imul
je
fstl
bound
cmp
mov
aaa
mov
inc
mov
xorl
test
loop
adc
pop
inc
movsb
outsl
xlat
sbb
inc
mov
push
lods
sub
fcomp
cltd
outsl
ljmp
or
int3
fs
pushf
outsl
cmp
out
push
sti
ds
mov
scas
inc
gs
mov
mov
pop
mov
push
rcl
sub
jb
lret
jle
jnp
jb
inc
iret
sbb
ljmp
ret
loop
sti
mov
data16
xor
dec
pop
add
push
sbb
ss
or
mov
jne
pop
out
adc
or
and
push
jae
cli
cli
inc
sarl
cmp
mov
pushf
dec
mov
loopne
mov
mov
cli
int
and
shl
dec
mov
sti
test
sysenter
push
cmp
dec
xor
test
gs
inc
mov
les
cmp
shrb
or
mov
test
dec
aaa
inc
xlat
int3
sbb
pop
and
lret
xchg
pop
rclb
jg
jb
movsl
sub
fsubl
pop
negl
jno
addr16
add
popf
sbb
sbb
lret
xor
pop
mov
push
test
mov
or
adc
outsl
call
sbb
sbb
jnp
inc
xor
repnz
mov
add
in
pop
adc
bound
mov
or
or
inc
loope
and
mov
or
sbb
add
xor
test
add
push
mov
adc
cmp
stc
ss
jecxz
rclb
std
cwtl
lahf
fisttpl
jb
int3
addr16
popf
in
lret
jne
loope
jbe
in
movsb
xor
xor
mov
dec
mov
iret
cwtl
adcl
pop
sub
or
xor
xor
push
sbb
dec
xchg
mov
pop
or
dec
and
sbb
adc
cmpb
xor
cli
pop
je
leave
mov
lahf
rcr
or
mov
push
test
cmp
add
push
jl
mov
sub
ds
call
ret
push
cmp
shll
mov
xchg
xchg
sarl
cltd
mov
sti
pop
jb
outsl
xchg
dec
mov
push
pop
stc
stc
cmp
pushw
xlat
into
pop
push
pop
cmp
out
ss
and
fprem
mov
pop
add
push
push
cmp
outsl
push
and
xchg
add
jae
popl
es
add
xlat
aam
xor
lods
add
cmp
jae
xor
pop
push
xor
scas
daa
les
aas
rorb
leave
mov
xchg
mov
cmp
test
or
sbbl
dec
enter
aas
mov
clc
mov
add
mov
sub
pop
push
jle
pusha
dec
push
loope
iret
loop
pop
sbb
imul
jge
fbstp
ror
dec
sub
imul
hlt
rclb
dec
and
xor
mov
jae
xor
into
test
add
inc
jle
daa
mov
mov
testb
aas
mov
ficoml
xchg
push
out
loop
dec
sub
mov
mov
dec
cmc
pop
xor
movl
inc
rcr
sub
das
loop
arpl
pop
xchg
mov
pop
push
or
jg
fsubrs
in
loopew
data16
inc
cli
and
mov
mov
jmp
in
push
mov
std
addl
xchg
mov
movsl
ret
push
fcos
jp
xlat
push
sub
dec
pop
push
cmp
std
pop
mov
hlt
sbb
xchg
cli
xchg
mov
push
jno
ret
fsubl
cmp
push
xor
cmp
insb
movsl
dec
and
arpl
push
xchg
pushf
ret
dec
lods
bound
xlat
aas
je
and
mov
xor
pop
stos
lret
fistps
loop
inc
push
push
movsl
stos
mov
adc
adc
stc
add
mov
inc
lock
mov
lret
xchg
xor
jno,pt
push
cld
pop
icebp
adc
jge
dec
es
inc
push
test
push
cmp
out
pop
dec
cmp
std
mov
ret
push
xor
dec
test
sub
je
inc
leave
xor
jno
ret
jl
mov
jle
jno
adcl
xchg
dec
inc
popa
xchg
lock
sbb
mov
std
imul
pop
jb
fcoml
sbb
xchg
jbe
mov
out
jl
jmp
ljmp
cmpl
sbb
jge
mov
outsb
cmp
mov
inc
sbb
adc
in
cmp
or
dec
inc
jb
nop
imul
gs
pop
test
mov
fs
dec
fwait
pop
mov
mov
inc
inc
adc
sti
sub
cmp
in
dec
mov
cmp
mov
mov
adc
lods
pop
mov
in
fdivs
pusha
data16
jl
jo
adcl
leave
cltd
xor
cmpsl
or
fld
cmp
std
pushl
mov
aas
lret
ret
jle
loopne
je
lea
aad
xlat
out
inc
mov
push
outsl
jo
cmp
cmp
popf
mov
and
push
frstor
inc
dec
or
pop
adc
xchg
inc
lods
fdivl
inc
sub
rcr
imul
sub
fcoml
dec
inc
test
jns
aad
movsb
mov
out
aaa
popf
and
or
imul
inc
dec
pop
and
call
xor
mov
mov
pop
dec
arpl
add
mov
xchg
movb
lret
and
call
dec
les
push
es
xchg
dec
data16
sub
pop
inc
jge
in
pop
inc
loope
icebp
cld
mov
lahf
dec
dec
aas
push
idivl
sti
ss
xchg
arpl
add
outsl
nop
or
adc
xor
xor
aaa
movb
mov
test
cmp
test
daa
fmul
adc
jl
dec
inc
aaa
scas
pop
and
pop
pop
mov
mov
fdivl
lds
pushf
hlt
in
ds
cmc
xchg
mov
arpl
push
and
cmp
in
das
xorl
bound
dec
add
pop
adc
mov
cmpsl
movsl
and
lea
in
inc
test
dec
cmp
inc
aad
stos
sub
jo
cmp
xlat
test
aas
jg
shll
ret
xchg
push
mov
data16
pushf
add
in
jp
xor
pop
xor
out
add
dec
cmp
xor
daa
movsb
ret
out
push
adc
jle
or
push
or
pop
mov
fsubs
addr16
in
push
shll
sub
inc
pusha
push
and
cmpsl
add
pushl
xchg
loope
pop
xlat
dec
mov
cmpb
inc
bound
push
mov
addr16
idivb
adc
int3
ljmp
imul
int3
movhps
rorb
rcl
push
adc
les
adc
outsl
std
negb
push
pusha
lods
push
test
iret
inc
jmpw
xor
jl
lods
jnp
fwait
pushf
iret
scas
or
movsl
mov
xlat
jbe
push
adc
adc
push
jo
jge
sub
jno
lock
das
cmpb
insl
shl
jge
je
inc
xor
mov
jnp
int
inc
add
dec
xchg
fmul
js
insb
mov
pushf
filds
cmp
mov
rclb
lret
add
aas
rclb
std
fdivl
aas
js
shll
jne
loop
fwait
ds
in
push
and
lock
popa
ja
mov
popf
pop
gs
jno
push
cmp
or
clc
cvttps2pi
push
pop
bound
add
mov
divl
rclb
inc
popa
cmp
leave
push
or
lret
nop
mulb
lock
jl
cmpsl
mov
xchg
dec
rorl
dec
jb
aas
pop
int3
enter
or
je,pt
hlt
outsb
repz
xchg
jecxz
mov
mov
add
cmp
mov
pop
dec
mov
cmp
insl
adc
cmp
int3
inc
cmp
imul
mov
rcrb
mov
ficompl
mov
mov
jns
loope
mov
into
xchg
xchg
push
jne
sub
ja
pop
aad
je
imul
not
push
or
int3
or
es
lods
popa
int3
fbstp
lock
and
xor
rol
xchg
and
mov
dec
std
lds
jns
fadds
dec
jno
push
mov
lock
lea
ret
sbb
scas
repz
sub
sub
sub
mov
jg
sub
mov
outsl
mov
mov
subb
jle
jmp
mov
addr16
lret
cmp
rcrb
or
cmp
mov
or
std
dec
in
ss
cmp
mov
push
xor
mov
stc
dec
notl
jle
push
push
jmp
mov
cmp
xchg
test
lret
jl
outsl
test
push
jno
adc
xor
bnd
xchg
loop
outsl
out
out
sub
sub
mov
xchg
pop
mov
pop
push
pop
arpl
xor
cli
add
mov
xor
cmp
pop
pop
fs
cmp
xchg
rcr
imul
mov
mov
dec
in
icebp
loope
in
xor
mov
push
test
ret
xchg
or
jns
dec
popa
aas
sub
iret
fisubl
mov
loope
add
iret
mov
loop
sub
mov
add
dec
cmp
jge
inc
dec
add
in
das
pop
push
pop
ret
pusha
fnsave
sahf
fwait
xchg
mov
push
adc
jecxz
shrl
xchg
sub
in
cmp
aas
fcoml
or
push
sub
xchg
pop
stos
cmp
mov
call
ss
les
pop
adc
sti
mov
stc
push
test
pop
xchg
mov
ret
sbb
lahf
push
xor
mov
jo
add
inc
xor
xor
add
or
xchg
sbb
insl
jp
inc
ss
mov
jb
imul
imul
xchg
push
dec
test
ds
inc
jmp
jecxz
arpl
xor
mov
ds
dec
stos
lahf
dec
repnz
sbb
test
jo
mov
xchg
push
pop
dec
loop
push
fwait
adc
jb
cld
adc
ret
mov
mov
dec
adc
xchg
lahf
fdivrs
leave
push
add
push
sahf
mov
xorl
je
mov
outsl
and
xchg
add
fwait
rorb
in
pop
insb
push
pop
std
andb
mov
mov
fcmovb
mov
mov
cmp
push
stos
repz
rcrb
push
mov
pop
scas
push
jg
ljmp
mov
pop
cmp
add
jecxz
xchg
adc
push
pop
rclb
bound
jecxz
movsb
adc
jmp
push
repz
or
add
in
cmp
push
push
adc
xchg
sbb
pop
cmp
outsl
push
aas
sbb
xor
adc
jp
inc
ds
mov
jae
jbe
jnp
jnp
mov
jb
add
or
xor
xchg
insb
xor
out
mov
insb
arpl
jae
in
iret
push
xor
jecxz
sarl
mov
dec
mov
pop
outsl
lret
jp
outsb
mov
fndisi(8087
cmp
cmpsb
cmp
mov
icebp
lock
loop
inc
mov
mov
xchg
xchg
shlb
fistl
rolb
dec
iret
mov
adc
push
or
cli
add
mov
xor
mov
push
inc
nop
mov
xlat
push
icebp
sbb
mov
xchg
sti
gs
mov
out
ds
fidivrs
push
out
adc
cmpsl
and
jmp
andl
fsts
hlt
loop
stc
cli
stc
jg
loope
or
out
mov
daa
mov
test
dec
xor
lea
jle
or
inc
xor
add
aas
xchg
add
sub
push
movsb
popa
loop
dec
adc
jge
push
pop
sbb
ds
cs
add
mov
sub
mov
pop
mov
mov
in
push
jae
scas
xor
mov
lea
ja
xor
mov
pop
test
xor
js
sbb
or
lea
jl
dec
xchg
scas
imull
or
mov
push
bound
sbb
nop
adc
popa
je
lret
aas
mov
jl
loope
sti
push
pop
mov
mov
xchg
xchg
push
popf
dec
hlt
daa
xchg
and
lds
inc
outsb
mov
call
cmc
adc
sub
and
xchg
pushf
jg
movsl
xchg
mov
and
pop
jns
push
movsl
mov
outsb
leave
aad
xor
ss
push
inc
movsl
and
sub
and
or
mov
and
fmul
xchg
mov
sti
pushf
push
arpl
shl
lods
les
push
outsl
shlb
or
cltd
stc
cmpsb
jecxz
cli
std
pop
jle
mov
test
xor
mov
lods
inc
jecxz
std
jle
push
xor
popf
mov
push
pop
cltd
sbb
xor
lds
or
mov
popa
mov
xchg
dec
jg
fwait
int
add
outsl
shr
mov
add
adc
or
je
jl
sbb
repz
xor
ret
mov
les
push
loopne
dec
dec
add
add
sub
dec
pop
pushl
test
mov
mov
arpl
fldl
inc
and
or
data16
pop
mov
rcrb
add
loopne
jb
lods
push
lock
adc
mov
les
call
sub
xchg
sti
jg
jl
dec
data16
jl
mov
xchg
cmp
mov
arpl
decl
popf
xor
xlat
pop
cli
xlat
mov
sub
pop
inc
mov
int
xor
and
push
and
lock
dec
out
dec
push
outsl
xor
ror
mov
mov
xor
aaa
dec
inc
jno
xlat
hlt
xor
arpl
mov
scas
cmp
mov
pop
test
loope
fcoml
popa
in
addb
popa
pop
jge
push
sbb
lcall
repz
out
pop
cmpsb
add
dec
test
xchg
add
cmp
push
mov
nop
xor
or
rorb
inc
outsl
enter
adc
adc
jl
inc
scas
lods
inc
mov
loope
push
xor
aaa
loopne
push
mov
cmp
sbb
pop
dec
cmp
mov
push
call
sbb
les
insl
sbb
mov
movsb
hlt
lret
aam
loop
or
scas
mov
mov
jle
mov
mov
pop
mov
sub
mov
cltd
and
lahf
sbb
dec
sarb
out
enter
xchg
fldenv
lods
sub
push
bound
mov
iret
add
outsl
adc
aam
outsl
cltd
xchg
jo
jb
pop
dec
sub
push
inc
fdivl
cmp
mov
mov
notb
jecxz
ret
pop
lret
aaa
lds
sti
jns
xor
in
movb
jo
mov
shrb
pop
loope
cld
pop
mov
or
std
inc
add
mov
sahf
jns
arpl
out
les
mov
mov
in
mov
sbb
gs
aaa
mov
inc
mov
inc
jo
add
arpl
pop
sbb
gs
dec
and
dec
adc
cwtl
in
sub
enter
js
xor
lock
out
sbb
jno
cmp
adc
int
dec
adc
movsb
xor
cltd
pextrw
inc
xchg
sub
xchg
xor
inc
addr16
mov
push
aam
dec
rcr
xor
arpl
mov
fsubrl
out
clc
cld
cmp
inc
aaa
cltd
into
notl
sbb
mov
push
enter
cmpsl
jo
sbb
insl
test
cwtl
mov
aas
shrb
adc
jl
test
mov
push
push
jb
jno
xchg
mov
sbb
out
inc
test
jecxz
and
inc
xchg
or
pop
and
push
lahf
and
push
je
adc
push
cwtl
iret
xchg
xchg
in
sub
push
dec
mov
repz
mov
xor
scas
ds
je
xor
and
and
into
and
cmp
adc
add
lret
pop
mov
cmp
fidivrl
or
sbb
mov
xor
sub
fwait
cwtl
ret
xor
mov
jns
xchg
mov
jmp
or
push
lods
push
or
jl
xor
int3
movsb
pushf
sahf
nop
push
push
outsl
sbb
add
cwtl
pop
mov
or
and
mov
mov
xorb
pusha
mov
or
xchg
pop
inc
mov
xchg
sahf
push
xor
or
mov
stos
in
pop
and
into
and
xor
or
loop
mov
fbstp
push
in
lock
inc
sbb
mov
or
pop
scas
inc
sub
cmp
jecxz
ret
aad
fs
add
mov
or
dec
jno
mov
or
pop
jmp
xor
cmp
aaa
popl
inc
testb
inc
cmp
in
push
dec
stos
jno
sub
xchg
aas
push
in
mov
mov
aas
dec
dec
push
cmp
and
mov
jl
jl
dec
pop
iret
add
pop
push
shlb
sub
lea
mov
push
push
repz
ds
aas
fwait
scas
or
gs
jecxz
pop
fists
xor
jle
in
mov
outsl
loopne
xchg
pop
repz
cmp
push
adc
arpl
dec
dec
add
ja
mov
inc
or
loope
out
adc
xchg
mov
pop
xchg
incb
ds
mov
sub
outsl
rolb
pushf
mov
ret
cs
jp
push
cld
xchg
imull
addb
jle
pusha
lods
sbb
push
imul
into
mov
xor
ficoml
pop
fisubl
mov
xlat
out
dec
cwtl
incb
mov
push
mov
in
sbb
jns
jo
mov
jmp
test
lret
xor
push
dec
push
outsl
push
sbb
or
pop
push
adc
push
ret
mov
and
pop
sbb
jge
das
push
dec
aaa
cmp
mov
mov
negl
jmp
and
mov
dec
stos
push
xor
sub
rcrb
mov
jp
cmc
xor
sbb
xor
pop
les
add
daa
int3
repz
addb
stos
inc
ss
loope
dec
mov
push
loopne
inc
mov
lock
daa
jo
leave
mov
cld
test
mov
jge
xchg
jno
dec
push
dec
je
inc
in
dec
ret
in
push
mov
inc
add
fldt
pop
sbb
insb
xor
imulb
arpl
xor
inc
shrb
fs
dec
fistps
dec
rcrb
enter
fdivrl
in
fisubs
movsb
sub
xchg
dec
icebp
add
add
or
dec
out
and
ret
in
sbb
jge
inc
cs
jnp
enter
ss
fwait
adc
pop
fdivl
outsl
xchg
arpl
fsts
mov
mov
inc
outsl
push
mov
xor
jp
mov
xor
xor
jne
addb
and
xchg
nop
pop
dec
into
or
aaa
xchg
in
xor
mov
cmp
mov
xor
jg
rorb
leave
ficompl
ds
dec
sub
dec
push
add
xor
not
lods
and
inc
or
aas
lea
inc
or
lods
dec
mov
lods
cmp
sbbb
pop
push
jmp
ss
jae
inc
pushf
outsl
and
dec
cld
sbb
adc
cmpsl
test
jbe
ds
jg
push
sti
in
cmp
sbb
mov
fmul
or
or
sbb
xlat
cmp
cmp
inc
and
jne
stos
icebp
daa
call
adc
shl
pop
and
pop
imul
in
mov
rorb
bound
das
repnz
dec
fdivr
sti
pop
cmp
mov
stos
jmp
and
jg
leave
cmp
lock
popa
je
sbb
outsl
bound
repz
add
in
sarb
outsl
mov
xchg
bound
push
sbb
push
repz
and
mov
mov
test
or
arpl
push
aaa
sub
mov
lds
jmp
add
in
mov
xchg
jnp
add
dec
fisubs
mov
lea
push
xchg
jno
test
shl
cwtl
into
inc
addr16
add
in
mov
xchg
cwtl
pop
idivl
pop
fstl
je
adc
dec
es
add
es
push
push
adc
dec
les
push
inc
jnp
adc
insb
dec
jns
aad
dec
mov
icebp
into
xor
mov
popf
push
pop
inc
xor
sub
nop
jl
cmpsl
mov
jmp
fs
loopne
pop
xor
dec
nop
leave
repz
dec
ljmp
xlat
out
shrb
xor
pusha
lcall
fimuls
lds
mov
inc
jnp
pop
jp
popf
lods
push
mov
pop
pop
jns
cmpsl
popf
add
pop
push
adc
into
sbb
cmp
sbb
mov
arpl
inc
in
or
cmp
push
inc
rcll
sub
mov
out
sub
cmp
pop
ja
stos
pop
cmp
jnp
arpl
fwait
icebp
iret
sbb
mov
sarl
add
push
imul
mov
in
inc
xor
push
dec
gs
mov
and
jae
sbb
mov
lret
mov
lds
jns
jb
popf
bound
insl
lret
je
mov
add
mov
loope
push
ljmp
inc
sbb
jae
outsl
push
inc
jecxz
in
subl
xchg
movsb
mov
push
outsb
cmp
leave
mov
push
les
enter
rclb
push
adc
jecxz
movsb
shl
push
out
jae
call
fidivs
push
int3
out
std
xchg
mov
push
add
pop
cmpsl
arpl
mov
mov
or
xlat
sub
push
push
mov
lds
ds
sbb
lods
adc
lret
mov
pop
pop
adc
ret
sbb
xor
mov
fmull
mov
mov
add
xchg
leave
fstp
push
adc
addr16
mov
dec
xchg
sbb
xrelease
adc
sub
sbb
mov
mov
jle
sbb
pop
cmpsl
pop
loop
dec
pop
pushf
adc
lds
mov
sub
push
xorb
daa
push
and
xlat
sub
mov
mov
or
or
mov
pushl
push
cmpsb
lods
cmp
jnp
mov
push
rcll
dec
nop
mov
stc
out
pop
inc
mov
dec
push
pop
lret
aam
add
cmc
fwait
adc
pop
cld
jge
sub
sahf
in
leave
pop
mov
std
stc
or
cmp
popf
int
arpl
fcomps
enter
pop
xor
mov
xor
cmp
jb
insb
dec
std
adc
pushf
dec
daa
ljmp
and
inc
jno
icebp
sub
test
sarl
push
add
pusha
sub
and
aas
in
add
xchg
or
jae
xlat
dec
mov
incb
outsb
inc
jno
mov
or
dec
fnstsw
cmp
push
outsl
aas
jnp
pop
push
fstpt
inc
mov
cli
loope
pushf
cmp
notl
arpl
int
pop
mov
leave
je
ret
testl
mov
cmp
pop
sti
or
and
sub
push
jno
insb
push
popa
xor
or
out
fildll
jecxz
loope
fidivs
xchg
leave
bound
enter
inc
int
test
sbb
or
fcmovne
rolb
xchg
or
adc
call
in
arpl
bound
mov
cmp
add
lret
outsl
xchg
sub
or
push
addb
insb
xor
rcl
inc
mov
lret
xchg
inc
cmpsl
mov
lods
popf
mov
push
out
push
jb
xchg
jo
xchg
pop
in
mov
sti
push
cmp
sbb
sbb
xchg
in
bound
and
push
dec
inc
sbb
jmp
jecxz
test
xor
or
cmp
dec
cmp
sahf
idivl
push
das
testb
cmpsl
inc
int3
pop
arpl
repnz
jle
leave
stos
mov
push
mov
xchg
dec
add
dec
sbb
dec
inc
cmp
mov
sti
cltd
outsb
fidivs
stos
or
xlat
jno
mov
in
data16
aas
xor
lds
sub
fs
push
cltd
dec
cmp
dec
fwait
outsl
ss
and
adc
ljmp
and
fcoml
loop
push
or
scas
nop
fwait
xchg
or
cmpl
icebp
lods
outsb
cmp
sti
push
mov
in
dec
jl
pop
xchg
pop
mov
mov
leave
jno
sar
inc
clc
push
adc
lahf
and
jecxz
xchg
sub
adc
jb
outsl
xlat
or
push
ret
imul
jno
and
cmp
adc
lods
or
push
mov
xor
in
pop
xor
je
xchg
cld
lock
and
xor
aad
xchg
mov
push
mov
bound
push
data16
pop
xchg
xor
mov
mov
mov
gs
add
mov
in
rcr
inc
push
fstpl
andb
sti
adc
mov
xor
jp
pusha
cmp
test
cli
mov
cmp
push
and
insl
arpl
mov
cmp
ljmp
jne
xchg
mov
rorl
cmc
arpl
rolb
fmull
pop
shrb
movups
jns
call
pop
dec
xchg
xor
push
add
mov
adc
gs
mov
dec
nop
aas
nop
movsl
cltd
inc
or
dec
rolb
inc
or
sub
sub
mov
sbb
jg
in
cmp
gs
mov
into
movsl
shr
dec
orl
push
ds
xchg
test
test
dec
adc
pop
or
shl
dec
dec
rclb
lea
jnp
cmpsl
sbb
adc
jno
cmp
adc
xchg
out
stc
test
mov
ret
cmp
push
push
testl
fnstcw
shlb
pop
lods
mov
cmp
or
leave
shl
or
aaa
in
jno
inc
aam
push
or
push
nop
inc
jne
pop
dec
xchg
or
outsl
xlat
fsubr
test
adc
data16
push
loop
nop
adc
push
cli
outsl
inc
arpl
lret
scas
loopne
loopne
popf
jb
jnp
mov
sti
xchg
test
inc
scas
fstpl
stos
ret
sub
hlt
outsl
inc
testl
or
adc
out
jbe,pt
mov
adc
lcall
fstpl
dec
jnp
adc
insb
into
scas
addr16
andl
xor
rolb
movsb
pop
lock
jg
jp
dec
loop
aad
subl
inc
aaa
push
push
sbbl
mov
vmread
inc
cld
push
xor
lock
xlat
cwtl
mov
lods
jp
jmp
dec
test
adc
xchg
cmp
or
push
sbb
lds
stos
or
mov
fldenv
push
iret
sub
add
jnp
into
adc
mov
loope
arpl
outsb
jge
aaa
dec
push
pop
ljmp
outsb
les
add
jge
mov
hlt
sub
cmp
setno
call
sub
das
pop
add
sub
fs
daa
scas
fwait
je
xorl
enter
jle
out
dec
sub
insl
mov
popa
cli
call
cmp
scas
dec
xor
and
popa
outsl
add
stc
xlat
and
inc
push
cmpsl
xchg
mov
inc
sub
xlat
mov
push
sub
in
jnp
into
and
mov
fs
outsl
aaa
inc
testl
ret
inc
pushw
mov
subl
and
mov
dec
arpl
add
mov
lcall
cmp
jne
inc
insl
inc
dec
test
xchg
pop
pavgw
xchg
incl
insb
jecxz
lods
push
sbb
fildl
xor
ret
dec
out
out
loop
push
hlt
int3
out
dec
xor
jnp
push
mov
les
or
gs
ret
push
mov
xor
scas
lea
jb
dec
out
pop
push
out
pop
xor
dec
movb
push
and
mov
mov
or
fwait
pop
xor
call
outsl
sbb
stos
dec
ss
xchg
or
cmc
scas
jbe
cmp
and
and
xor
and
cmp
mov
jl
daa
shll
mov
mov
pop
daa
jmp
rclb
jb
adc
rorb
fistpll
adc
pop
leave
dec
mov
and
dec
imul
aas
testl
dec
cmp
mov
les
sbb
ret
push
dec
outsl
jns
das
push
aas
pop
or
rcrb
jmp
bound
outsl
adc
pusha
in
xor
mov
ljmp
out
fcmovne
insl
and
and
adc
adc
push
and
push
dec
jmp
mov
add
lahf
negl
outsl
mov
lret
and
lds
mov
add
dec
cmpb
push
inc
icebp
pop
dec
pop
adc
push
cmpsb
mov
push
mov
and
push
pop
jno
sbb
jge
pushf
mov
iret
push
pop
js
mov
sahf
sub
jl
and
mov
adc
push
ret
push
cmp
decb
jb
xchg
ja
xchg
loopne
fnstenv
mov
or
pop
pop
add
aaa
mov
push
ja
xchg
enter
mov
pop
inc
ss
mov
xlat
mov
aaa
or
orb
adc
in
mov
push
push
push
dec
jbe
lret
insl
fildl
sbb
sub
mov
adc
xor
outsb
add
nop
loop
xor
push
dec
into
lock
jnp
push
bound
addl
je
dec
pop
sbb
sbb
mov
lock
sti
mov
push
mov
ss
lea
ss
mov
cs
loopne
push
fnstenv
xchg
pushf
sbb
jo
xlat
insl
xchg
ss
dec
movl
xchg
repz
int3
mov
scas
jbe
mov
xchg
or
mov
sub
dec
xchg
pop
inc
cmp
in
jb
adc
out
mov
cltd
and
xor
lea
repnz
rorb
insb
outsl
pop
lcall
adc
addb
jl
xchg
mov
fstps
jmp
xchg
outsl
sub
into
xchg
mov
mov
inc
mov
xor
out
fs
aaa
int
sbb
mov
fldl
aas
adc
cmp
lock
test
andb
mov
ret
fstps
jp
popa
cmp
frstor
dec
inc
adc
daa
dec
in
call
loopne
cmp
jge
shlb
or
aas
jnp
test
and
sbb
out
gs
loop
icebp
jb
ret
lret
pop
xchg
lock
xchg
stos
mov
mov
pop
nop
xchg
lahf
dec
out
pop
mov
inc
sbb
out
sbb
pop
mov
jl
push
arpl
jle
add
rcrb
xor
jno
inc
in
or
mov
mov
xlat
push
mov
xor
jb
xchg
js
push
bound
push
pop
fbstp
icebp
mov
jo
fxch
insl
pop
jle
aaa
rcpps
sti
sub
pop
lahf
fdivrl
mov
nopl
fcomps
inc
mov
xor
outsl
add
xor
and
dec
mov
shlb
repnz
and
ret
jb
aas
icebp
pop
sub
lods
sbb
and
pop
arpl
ss
or
jno
imul
pushf
xor
lds
filds
andb
jmp
dec
adc
pop
insl
jae
xchg
fcmovu
loop
inc
sarl
xlat
xor
arpl
adc
push
mov
jnp
nop
xor
std
arpl
jle
movsl
rorl
inc
std
sbb
or
pushf
jl
out
addb
jb
xor
mov
in
pop
inc
into
fcoms
cmp
test
cmpsb
jbe
in
dec
mov
jno
imul
jl
push
xchg
mov
add
adc
ljmp
adc
xor
rclb
or
xlat
negl
outsl
xlat
sti
pop
inc
xor
push
mov
dec
enter
and
push
mov
stos
xlat
popa
fdivl
icebp
aad
ds
push
stos
push
jno
inc
mov
in
aaa
test
mov
inc
mov
iret
sub
or
stos
dec
out
sbb
jb
xor
add
cmc
adc
in
dec
dec
mov
pop
jmp
jmp
pushf
stos
out
scas
push
mov
outsl
mov
cmp
cltd
push
sub
scas
repnz
and
aad
out
icebp
push
stos
pop
push
adcl
jg
in
test
add
mov
mov
js
ja
mov
cltd
iret
iret
and
pushf
mov
lds
jecxz
adc
jl
jecxz
mov
mov
jle
mov
int3
pop
sub
cmp
test
test
fsubp
mov
in
push
mov
outsl
and
xchg
sub
push
adc
or
dec
adc
and
repnz
stos
rclb
jge
mov
push
inc
cmp
sti
mov
pop
inc
mov
movb
pop
fstl
adc
xlat
mov
je
jle
dec
cwtl
icebp
push
lret
in
adc
sti
mov
popa
dec
xor
arpl
or
and
out
inc
lahf
mov
mov
push
inc
aas
lock
stc
push
lods
jne
fsts
inc
push
fcompl
aas
adc
sti
loopne
sbb
daa
and
jl
sub
aam
cmpsb
mov
mov
add
adcb
nop
xchg
jp
mov
fadds
je
iret
add
sbb
ret
lcall
addr16
imul
pop
loope
inc
push
xchg
nop
add
mov
adc
mov
int3
jo
stc
jmp
rcl
pop
out
sahf
dec
xchg
test
daa
xchg
mov
dec
xchg
fdivp
or
cmp
inc
adc
ljmp
popa
xchg
fists
mov
xchg
cmp
cmpsb
cmp
in
jmp
dec
xchg
cltd
mov
sti
je
xchg
loop
scas
gs
sbb
hlt
pop
in
cmc
out
mov
jnp
in
sub
ret
out
fstpt
mov
or
and
or
sbb
jbe
xor
and
xchg
stc
fwait
and
js
jo
std
jmp
dec
cmp
call
push
aad
add
sbb
inc
ret
sbb
ds
arpl
xchg
pop
outsl
mov
pushf
pop
dec
xchg
cmp
cmp
rclb
inc
or
and
fwait
sub
and
sbb
sbb
pop
cld
repz
jmp
outsl
stos
push
xchg
xchg
dec
inc
mov
lds
mov
xchg
stc
push
bound
push
outsl
cmp
call
jmp
inc
fldl
in
dec
lcall
xchg
inc
jb
push
push
fwait
mov
lret
std
adc
jnp
imul
ret
outsl
mov
mov
xchg
scas
sbb
adc
xor
rol
mov
pushf
mov
mov
xchg
mov
pushf
call
push
test
cmp
fcoml
cmp
fisubrl
sub
inc
ljmp
pop
outsl
repz
push
and
pop
out
cs
cmp
jmp
test
inc
lock
adc
dec
outsb
push
pop
xchg
adc
ss
xchg
je
mov
test
loope
dec
mov
push
lret
dec
xchg
sbb
sbb
and
mov
mov
cmpsb
and
pushf
mov
mov
mov
and
adc
pop
pop
jae
mov
rcrb
jnp
adc
inc
movsb
adc
adc
enter
int
and
les
push
cmpsl
sbb
ljmp
jbe
hlt
outsb
push
inc
outsl
mov
flds
call
push
pop
imul
push
dec
ds
sbb
xorl
dec
push
push
jno
add
int
cmp
leave
lods
lock
jae
insl
dec
jo
jb
fwait
pop
lea
adc
mov
and
inc
nop
add
fnstcw
jnp
cs
mov
push
mov
subb
push
jb
js
sub
daa
aas
sti
dec
loope
inc
mov
mov
inc
dec
sbb
sbb
outsl
scas
movsl
lods
arpl
aaa
mov
aas
sub
orb
xchg
ljmp
mov
jg
sub
je
jo
rcr
lock
push
inc
aam
add
pop
loopne
dec
scas
test
fsub
dec
clc
andl
idivb
imul
add
lods
inc
mov
inc
int3
mov
sbb
dec
outsb
repnz
loopne
les
pop
jle
xor
or
jno
and
aas
shl
push
sub
jp
jecxz
or
shlb
xchg
out
lods
jne
and
gs
aas
andb
sbb
dec
vandnps
shr
mov
sub
jae
stos
cli
xchg
std
or
lock
and
scas
cli
jge
inc
stos
jo
shll
adc
das
xor
add
mov
shrl
mov
call
in
outsl
and
mov
fs
lret
stos
dec
xchg
cld
and
xor
and
outsb
loope
push
ss
mov
sub
int
mov
pop
or
add
sbb
fdivrl
in
gs
sub
out
or
idivl
dec
pop
imul
xor
rorl
mov
mov
xchg
sub
or
mov
repnz
push
ss
aaa
pop
cwtl
push
js
inc
xor
or
repnz
adc
inc
data16
xor
pslld
cmp
push
cmp
xchg
xchg
push
movsl
jae
mov
push
sub
push
pop
cmp
out
inc
xchg
mov
repnz
mov
cmp
pop
insb
dec
mov
lcall
mov
test
cli
dec
leave
pop
xor
inc
dec
dec
ret
jp
dec
push
push
cmpsl
or
lahf
push
cmpsb
or
loopne
inc
pop
jle
xor
push
lret
pop
ss
cmp
jl
mov
xchg
cmp
repz
hlt
xor
dec
fiadds
mov
ret
inc
ss
mov
inc
xor
dec
push
mov
ss
cmp
cmp
xchg
sarl
cmp
xor
cmp
ret
sbb
mov
mov
aam
ss
int3
inc
iret
cli
inc
xor
jp
xor
test
sbb
ljmp
cmp
cmp
xorl
push
cmp
add
pop
lret
divb
sbb
cmp
mov
dec
mov
mov
ret
roll
inc
in
inc
dec
test
cmp
cmp
push
dec
pop
ret
push
cmp
inc
mov
xor
pop
jae
dec
mov
xchg
ret
cld
pop
push
hlt
inc
inc
cmp
ss
push
sarl
pop
cmp
inc
rcl
mov
sarl
aas
inc
inc
imul
adc
jo
mov
cmp
sarb
mov
cmp
xchg
mov
xchg
shlb
les
fadds
xor
inc
cmp
cmp
cmp
xor
adc
mov
ds
loop
pop
inc
mov
shl
push
iret
jae
enter
ja
or
pop
int
pop
or
inc
orb
repz
or
mov
mov
sbb
pop
mov
std
lock
push
adc
xchg
test
and
lea
in
mov
and
movsb
sub
adc
mov
outsl
pop
adc
sub
cmp
adcl
xchg
mov
das
repz
mov
adc
dec
sti
cli
and
push
lock
bound
mov
mov
shll
cmp
push
pop
icebp
push
jecxz
cmp
jl
and
xlat
push
push
add
ljmp
push
push
stos
xor
push
lret
jecxz
pop
pop
es
in
lock
les
call
inc
lret
mov
scas
cmc
sbb
mov
fwait
shlb
jl
mov
mov
jge
cmp
xchg
cmpsw
fmul
add
or
mov
cmc
jmp
stc
pop
mov
shl
nop
mov
mov
sbb
or
jnp
jno
fxch
inc
insb
bound
cmp
mov
sar
mov
imul
mov
dec
or
test
sub
mov
cmc
pop
mov
fmul
lock
ss
cli
icebp
xchg
insb
xchg
inc
test
arpl
ja
leave
dec
push
repnz
lea
scas
push
xchg
inc
mov
mov
push
push
std
mov
iret
jg
ss
aam
xchg
mov
cmp
cmp
repnz
or
bound
into
daa
or
jp
sub
xor
fldenv
stos
cmp
aas
scas
push
int
inc
pop
outsb
icebp
sahf
ret
mov
push
sbbb
lcall
imul
xor
mov
push
sbb
or
aaa
leave
pop
sub
pop
dec
nop
outsl
movsb
movsl
add
dec
scas
outsl
pusha
ja
dec
and
jns
cmpb
jns
pop
roll
mov
mov
pop
outsl
sub
dec
xor
outsl
scas
call
jae
lock
pop
std
icebp
lret
jnp
pop
jle
cmpsl
mov
pop
push
pusha
ret
nop
jae
aas
dec
ljmp
pusha
addr16
xchg
pop
adc
sti
mov
ljmp
lock
leave
push
sti
mov
or
mov
mov
outsl
rclb
ret
arpl
clc
fiaddl
mov
lds
xor
or
push
push
and
outsl
or
cwtl
sbb
pop
or
adc
and
es
xor
sub
inc
or
cmp
and
cs
ja
and
dec
ja
mov
cmp
repnz
mov
or
inc
push
sbb
sbb
dec
pushf
cmp
mov
jno
outsl
add
dec
cli
dec
sub
mov
inc
imul
outsb
xor
fsubr
inc
mov
push
testl
push
jae
cmp
sbb
in
xchg
mov
jno
jb
enter
ljmp
imul
cltd
cltd
push
xchg
dec
js
mov
push
xchg
repz
loopne
sbb
iret
dec
pop
aas
cmp
out
shll
xor
rorb
mov
push
mov
iret
jo
popl
dec
jae
xor
sbb
hlt
in
les
mov
in
push
mov
sbb
outsl
mov
jp
inc
cmp
xchg
ds
out
xchg
jge
inc
mov
iret
or
mov
push
jbe
sub
pop
arpl
add
and
xchg
push
rorl
mov
ret
addr16
sbb
push
push
lods
xor
mov
mov
ret
adc
pop
xor
loopne
lds
dec
mov
mov
pop
push
imul
bound
icebp
jmp
out
cmp
mov
xchg
dec
jle
je
dec
out
je
dec
jne
jns
dec
adc
lcall
jecxz
icebp
sbb
pushl
pusha
jnp
mov
pop
sub
push
inc
jecxz
jns
xchg
dec
dec
mov
xchg
dec
stos
sarb
fstpl
add
dec
leave
aaa
cmp
dec
and
sti
ret
mov
ljmp
andb
add
loop
in
daa
mov
imul
lcall
je
sti
mov
stos
testl
into
in
dec
dec
ret
and
or
ljmp
xor
std
jecxz
call
stos
mov
rclb
and
mov
stos
idivb
out
bound
push
inc
jge
add
cmp
dec
sbb
test
rcl
mov
aas
adc
fsubrl
adc
adc
popf
movb
inc
fnstcw
pop
xor
es
ljmp
adc
mov
mov
mov
add
sub
or
std
in
pop
rolb
push
fwait
ret
fbld
imul
and
mov
mov
fimuls
ret
sub
scas
sti
sbb
push
das
sbb
push
dec
adc
jnp
jnp
inc
pop
fdivl
add
adc
adc
mov
hlt
inc
incb
outsl
clc
mov
ljmp
in
pop
dec
leave
cmpsl
xlat
xchg
int3
fcmovu
dec
dec
jno
xor
cs
xor
in
pop
mov
int3
cli
xchg
jl
mov
mov
hlt
sub
imul
jns
or
adc
add
pop
and
sahf
cmp
xchg
push
dec
sbb
ja
jns
js
pusha
leave
insb
pop
inc
dec
or
int
pop
jno
push
jp
repnz
xor
ret
imul
stos
adc
xor
mov
ret
orb
lcall
arpl
mov
xor
cmp
std
inc
ret
dec
scas
mov
cmp
outsb
and
cwtl
aaa
dec
lcall
inc
adc
or
les
xchg
push
aaa
stos
pusha
sub
das
xor
ja
cmc
movsl
inc
loopne
push
lret
inc
mov
fbstp
mov
adc
inc
jge
and
push
lock
out
pop
inc
out
stos
repnz
dec
outsb
pop
inc
mov
jne
ja
mov
dec
test
lcall
or
fneni(8087
push
push
repnz
xchg
mov
nop
sbb
ret
cmp
sub
or
xor
ja
mov
bsf
lock
insb
je
mov
and
mov
movsl
add
lcall
adc
lret
sbb
xor
push
lds
or
repnz
popa
sub
lock
je
js
call
adc
pop
sbb
aaa
dec
ret
cmp
rorb
sub
mov
sub
push
mov
fcomps
sbb
stos
ret
data16
scas
xor
mov
outsl
pushf
inc
mov
adc
mov
cmpsl
sub
mull
arpl
inc
mov
or
fwait
sub
mov
add
out
push
outsl
cmp
dec
dec
jnp
jbe
sbb
jmp
inc
adc
sbb
mov
xor
xchg
adcl
add
mov
inc
pmaddwd
arpl
mov
jge
loope
sub
jl
je
xor
adc
adc
dec
lds
je
pushf
aam
lret
mov
jo
test
shll
mov
adc
nopl
outsl
stc
jle
jne
jb
loop
cmpsb
mov
jge
inc
or
push
mov
lret
sbb
insl
sub
ficoms
mov
jne
mov
cs
aad
push
xchg
dec
or
xor
cmc
das
mov
aas
push
mov
adc
xor
ss
and
out
out
mov
ds
sub
test
sub
test
movsl
dec
popa
aaa
xchg
repnz
arpl
test
cmp
js
cmp
outsl
lds
lret
push
cmpsl
sbb
xchg
and
ds
mov
push
rcrb
nop
sbb
loopne
jl,pt
bound
shlb
fwait
rcrb
dec
int3
fbstp
mov
push
inc
popa
in
aad
add
cwtl
adcb
std
pop
ret
mov
jl
sub
jnp
dec
sti
mov
mov
mov
push
mov
pop
mov
ret
xchg
mov
mov
outsl
xlat
roll
adcl
push
into
bound
push
pushf
push
int3
mov
cmc
dec
inc
adc
add
mov
cwtl
test
pop
add
lcall
arpl
push
mov
cmp
je
dec
repz
pushl
sub
xchg
test
pop
es
inc
repz
out
or
cmp
popa
jbe
mov
ds
push
pop
lock
pop
iret
inc
adc
insb
sbb
outsl
je
notl
mov
repnz
sbb
adc
mov
mov
ds
loope
ss
iret
pop
int3
in
fcomps
test
int
inc
stos
jmp
out
push
push
sbb
shll
mov
shrb
jg
andb
aas
sbb
pop
call
push
jns
dec
data16
sbb
mov
dec
inc
in
sbb
mov
inc
mov
out
push
pop
sub
adc
sbb
dec
daa
ret
pop
in
pop
xor
dec
mov
outsl
or
mov
adc
cld
fwait
pop
mov
push
dec
cmp
scas
lock
mov
push
mov
sbb
inc
xlat
in
inc
jae
in
sbb
push
sub
pop
adc
add
mov
pushf
outsb
shl
adc
fsubrl
cmpsb
push
push
ljmp
and
loopne
iret
leave
popf
xor
jne
popf
pushf
outsl
ds
pop
adc
inc
cmp
push
inc
daa
pop
mov
jmp
xchg
dec
js
xor
adc
filds
fmulp
xchg
xor
adc
xor
not
mov
sbb
dec
stos
bound
icebp
or
lds
or
out
sub
or
xor
fisttpl
pmuludq
fnstenv
push
push
adc
scas
or
movsl
jb
dec
dec
jo
lock
outsl
dec
iret
adc
pop
out
imul
dec
loop
lods
add
xor
jbe
adc
mov
mov
pop
cmp
divb
movsl
incb
lods
inc
das
jecxz
dec
lcall
jbe
ds
outsl
movsl
xchg
xchg
sub
pop
imul
sub
mov
sahf
je
xor
cld
sahf
push
and
fldt
rcll
das
add
arpl
dec
sub
xchg
push
cmp
in
lahf
mov
icebp
popf
xor
bound
scas
pop
dec
adc
or
testb
sbb
lds
movsb
and
jmp
xor
xor
push
les
ljmp
adc
sub
arpl
sub
pop
or
ret
lahf
dec
outsb
int3
and
jg
and
push
mov
push
jae
mov
int
sbb
gs
insl
mov
xor
push
xor
dec
push
jg
add
sbbl
mov
pop
imul
lods
bound
add
dec
adc
in
stc
xchg
in
inc
inc
pushf
subb
jo
or
or
push
or
xchg
sub
jg
shlb
mov
cmp
ret
mov
push
lock
dec
dec
push
addb
ds
mov
daa
lahf
inc
test
fisubs
lea
stos
shr
push
jg
xor
fldt
mov
push
mov
push
sti
arpl
loopne
scas
xor
xchg
imul
xchg
adc
inc
packuswb
ss
sub
into
adc
aaa
inc
adc
xor
ret
adc
xor
outsl
stc
in
lock
jo
jo
nop
icebp
mov
add
or
fldl
xor
leave
xchg
sub
push
mov
mov
cmpsl
push
dec
cli
pop
lock
aas
jg
adc
repnz
mov
les
dec
in
pop
mov
mov
movsl
xchg
inc
add
push
std
adc
jb
jno
scas
xchg
cmp
push
icebp
xor
daa
mov
outsl
pop
insb
shll
dec
pop
pop
cmp
pop
dec
ljmp
xor
adc
mov
pop
std
dec
xor
in
add
push
inc
jb
aas
mov
popf
stc
jns
aas
xchg
xor
mov
aaa
subb
popf
push
fnstenv
xchg
test
ret
cmp
std
jp
dec
jl
in
out
pop
push
dec
push
dec
pop
sbb
xor
push
push
shr
idivb
loop
dec
outsl
mov
ds
and
pop
loop
pop
cld
out
xor
xchg
and
rolb
xlat
cvttps2pi
jecxz
popl
adc
xor
adc
sbb
jl
mov
push
in
push
nop
mov
jnp
lcall
xchg
int3
inc
jmp
in
cli
dec
jnp
test
xor
popf
daa
sub
test
mov
mov
fdivs
xchg
dec
outsl
sbb
lods
sbb
outsl
pop
push
test
push
mov
movaps
xchg
shll
mov
mov
shll
pop
mov
sbb
mov
test
mov
pop
jnp
mov
cmp
testl
push
pop
stos
flds
in
xor
fucomp
in
ljmp
inc
popf
or
int
andl
ret
mov
and
aas
fwait
mov
pop
mov
dec
cltd
fmuls
pop
roll
xchg
out
or
icebp
xor
mov
cmp
jbe
adc
mov
mov
lcall
cwtl
lods
hlt
sub
mov
scas
jmp
test
js
fdivl
stos
xchg
imul
dec
dec
adc
aas
loopne
in
test
pop
gs
mov
mov
rcrl
test
pusha
jp
adc
xor
and
sub
repnz
into
adc
dec
mov
mov
in
out
jmp
in
push
popf
xchg
jecxz
sub
push
outsl
mov
movl
xor
dec
pop
jl
cmp
xchg
and
xchg
sahf
fmull
outsl
jno
aas
xchg
push
pop
cmp
or
iret
fsubrs
ja
sbb
cld
or
sub
gs
sbbl
xchg
mov
outsb
fistps
jge
sbb
inc
pop
in
test
inc
jb
dec
add
lock
mov
cmp
sbb
xor
lret
sbb
jmp
pop
fs
fists
jns
sbb
push
mov
nop
push
stos
cld
push
mov
mov
aas
mov
sub
fists
insb
jnp
jbe
aas
mov
xchg
ja
aad
push
sub
ret
fmull
adc
fisttpll
dec
mov
push
mov
sbb
lock
jmp
jmp
add
inc
xchg
loopne
or
sub
int3
push
sahf
ret
xorl
in
push
and
add
dec
cmovs
xor
mov
or
arpl
shll
shll
mov
fwait
cmpsl
dec
xchg
ret
mov
ss
lock
pop
xlat
jg
outsl
mov
mov
ljmp
push
xor
or
pop
inc
adc
lret
dec
and
xchg
rcl
popa
ds
aas
ficomps
pop
xchg
jns
add
aaa
cwtl
sbb
xor
incb
lret
pop
adc
test
and
aas
pop
cmc
lock
sub
inc
into
dec
hlt
cmpsb
stos
vmovdqu
or
sahf
xor
or
aaa
inc
rcll
dec
out
mov
lret
adc
push
dec
push
in
inc
jl
divb
pop
pop
pop
push
lret
jno
mov
stc
sbb
dec
lock
mov
push
lods
je
jns
adc
in
arpl
mov
pop
ror
ljmp
popf
hlt
je
int
mov
cmp
xorb
daa
cmp
push
xchg
xchg
or
adc
inc
or
fsubl
mov
shl
mov
or
icebp
inc
sub
iret
bound
sbb
rcrl
dec
push
rclb
insb
xor
sbb
jno
cmp
outsl
pop
sti
stos
xchg
pop
xor
int3
pop
jp
mov
loopne
xor
lcall
jns
in
test
pop
aas
cld
add
and
jno
in
out
repnz
dec
outsl
mov
push
inc
jbe
js
int3
lock
inc
dec
jmp
dec
call
lock
push
fsubr
inc
mov
ja
inc
arpl
fwait
cmp
lock
inc
in
pop
pop
loop
mov
lcall
out
push
pop
ljmp
jecxz
icebp
bound
jg
push
pop
cmc
xchg
pop
addr16
insl
ret
or
pop
dec
std
lods
xchg
lock
cmp
adcl
popa
push
in
xor
jl
fisubs
xor
adc
cltd
push
push
sbb
mov
dec
pushf
inc
into
cmpsb
ds
jle
xchg
dec
sbb
rolb
mov
lret
fs
push
je
cld
stc
test
outsb
repz
mov
lret
mov
sbb
push
xor
push
sub
test
lret
xchg
dec
fisubl
pop
movsb
sbb
pop
push
adc
mov
scas
std
addr16
push
dec
mov
jno
sub
or
push
xchg
push
push
insb
cmp
dec
or
or
outsl
out
outsl
lea
mov
sbb
mov
lret
pop
daa
icebp
xchg
loopne
out
movsb
lods
mov
jno
jo
jmp
pop
mov
shrb
lock
test
mov
jge
or
adc
push
xor
outsb
int3
dec
out
nop
mov
jp
dec
mov
pop
push
push
lret
fcmovb
into
add
dec
mov
mov
mov
push
aas
cmp
fwait
cmp
or
mov
popf
lock
iret
js
rorl
pushf
or
arpl
fwait
aaa
push
daa
fcompl
cli
clc
mov
lods
popa
inc
push
and
cmp
inc
jno
popa
mov
aas
sbb
std
adc
pop
dec
imul
lds
xor
xlat
xchg
gs
sti
ds
aas
ret
insl
and
ret
xor
lret
mov
imul
fsubrs
adc
std
pop
mov
js
cmp
cld
push
test
lds
cld
jge
shrb
les
or
lret
adc
imul
mov
adc
popa
and
shll
clc
sbb
lret
arpl
in
test
mov
and
aam
dec
sbb
jp
jle
jb
jne
js
cmp
test
nop
and
inc
adc
pop
pushf
cmp
push
inc
test
mov
pop
lods
push
scas
xor
jp
ljmp
arpl
cmpsl
mov
push
and
add
hlt
mov
popa
inc
adc
inc
mov
dec
fidivrs
push
stos
push
push
dec
dec
xchg
aaa
dec
add
add
cmpsl
fidivs
push
mov
jg
sub
sti
arpl
jg
pop
push
out
mov
out
mov
mov
add
icebp
sub
pop
pop
dec
cmp
iret
mov
les
arpl
loopne
mov
sahf
and
and
hlt
leave
outsb
arpl
or
xchg
xchg
sub
lds
aas
jp
fsubrp
lods
cmp
add
popf
pop
pop
fcoms
in
xchg
mov
cltd
mov
dec
lods
dec
sub
rcrb
xchg
jno
inc
nop
insb
in
jg
jbe
or
int
mov
out
lock
movq
out
jecxz
out
jnp
jae
sbb
push
pusha
mov
inc
nopl
inc
ss
jle
adc
and
test
push
lahf
dec
mov
outsl
push
nop
and
ficomps
cmpsb
sbb
sbb
scas
scas
scas
mov
aas
jle
rorb
leavew
xor
mov
mov
aaa
and
in
test
cmp
ret
push
in
arpl
sub
dec
jno
push
stos
lret
lock
lds
outsl
adc
inc
sub
pop
add
dec
daa
xor
aas
out
inc
and
in
fldl
xchg
mov
push
mov
int3
xchg
out
xchg
pop
push
sbb
sub
push
pop
enter
mov
mov
sub
out
jg
lahf
loop
clc
adc
iret
cmp
dec
push
and
or
ficompl
sub
rorb
sub
mulb
rcrb
inc
icebp
sbb
orb
pop
cli
sub
push
andl
outsl
lret
aas
add
dec
ret
dec
mulb
or
outsl
in
or
add
subb
ljmp
xchg
pusha
adc
or
nop
into
mov
sub
dec
repz
push
sbb
fdivl
jno
add
stc
fs
adc
in
mov
in
test
lds
mov
push
dec
cmp
pop
stos
idivl
rcll
lds
push
lods
insb
subb
notl
sbb
ljmp
fwait
sti
pop
jbe
test
nop
xchg
into
iret
lock
int
push
mov
fs
pop
pop
lahf
push
push
or
sbb
sbb
xchg
xor
adc
xchg
outsb
mov
dec
add
mov
mov
std
cwtl
test
xchg
dec
sbb
adc
addr16
pop
dec
mov
scas
adc
stos
das
jb
sub
sbb
xchg
cltd
test
xlat
and
dec
xor
cmp
xlat
addr16
mov
popf
enter
outsl
idivb
dec
arpl
scas
jge
mov
push
dec
fs
out
ja
or
pop
test
mov
cli
loope
enter
data16
jmp
jecxz
fwait
adcl
jmp
aaa
rclb
xorl
mov
sub
xor
shl
adc
fidivrs
hlt
jno
arpl
mov
shll
ret
push
cmp
inc
pop
dec
cmp
enter
lds
xor
outsl
jecxz
sub
pop
mov
cwtl
pop
sub
loop
jmp
xchg
fsubs
loop
daa
pop
aad
vmwrite
xchg
or
cld
xor
sub
lret
jmp
jmp
inc
sub
sbb
sbb
cltd
dec
sarb
loop
push
outsl
rcl
mov
shlb
push
dec
and
mull
fdivrl
jno
outsb
hlt
incb
push
push
outsl
fldt
mov
arpl
dec
jge
repnz
lock
xor
mov
hlt
mov
cli
stc
inc
sarb
cmp
or
out
dec
iret
call
pushf
inc
mov
lods
data16
jns
push
ds
pushf
int3
sbb
hlt
lods
daa
fmul
hlt
pushf
jno
sbb
and
or
ret
arpl
fstpl
or
sub
lret
or
or
fidivrl
cmc
mov
test
pop
and
xchg
xchg
inc
shlb
jae
test
loope
outsl
add
jb
bound
fidivrs
and
loop
lock
daa
push
mov
push
mov
jg
bound
xor
push
scas
push
cmp
jo
and
mov
test
xor
xor
adc
aaa
pop
arpl
pop
xchg
push
cmp
insb
mov
outsb
movsb
bound
mov
mov
repnz
ds
push
adc
mov
mov
repz
mov
jl
pop
pop
sbb
outsl
mov
insl
push
xchg
aaa
jg
adc
movsl
imulb
ljmp
and
xor
cmp
fcompl
in
push
vpshufd
cmp
cmp
jae
movsb
push
je
inc
call
push
mov
cmp
insl
sbb
js
insl
push
pop
push
dec
fnstsw
sbb
cmp
dec
mov
orl
dec
jnp
mov
and
xchg
pushf
cwtl
mov
pusha
mov
jno
aaa
mov
jbe
lcall
xor
adc
out
leave
pushf
push
mov
push
jg
mov
nop
mov
lds
or
mov
stos
mov
jp
cmp
aas
loope
inc
fwait
jl
push
jb
adc
and
xchg
loop
add
in
mov
inc
pop
movsb
test
xchg
mov
mov
mov
in
aas
repnz
jnp
mov
mov
xchg
inc
dec
in
mov
sbb
mov
jnp
les
dec
xor
inc
jge
gs
dec
mov
adc
adc
cli
mov
cwtl
sarb
push
or
push
sbb
sti
test
loope
sti
sbb
pop
sub
nop
xchg
negl
ljmp
push
lds
int
and
dec
push
jecxz
scas
dec
push
and
mov
stc
int3
mov
push
in
int3
sub
mov
lock
stos
jno
cmpsb
stos
push
cmp
push
cwtl
outsl
xor
shrl
sbbb
mov
push
bswap
adc
xchg
adc
clc
jb
dec
cmpb
std
dec
sub
adc
jmp
hlt
dec
or
movsl
mov
jmp
cmc
xor
lods
and
dec
jo
sbb
push
mov
test
dec
pop
fwait
cmp
int
mov
mov
in
xchg
inc
cli
xor
mov
mov
inc
test
push
xor
jge
xor
out
push
push
push
lock
sbb
fidivs
sbb
sti
test
add
dec
pop
xlat
test
outsl
xchg
lea
test
scas
or
jno
inc
cs
pop
test
jmp
xlat
cmp
inc
inc
jl
popf
pop
mov
lret
xor
movsl
mov
adc
mov
sbb
stc
push
xchg
push
mov
cmp
push
dec
out
mov
dec
jp
ds
xchg
cmp
jle
sub
inc
sbb
jecxz
xor
adcb
dec
xchg
rorb
movsbl
jg
leave
and
mov
mov
mov
push
xor
mov
dec
sub
add
nop
mov
nop
int
push
popf
scas
mov
push
push
popa
push
sbb
aaa
cmpsb
dec
std
push
fwait
and
mov
xor
mov
jno
mov
jae
inc
mov
test
xchg
xor
repnz
lock
add
in
dec
pop
dec
shl
and
xor
adc
adc
mov
das
pop
in
jno
adc
out
shrl
xor
insb
push
jno
and
ja
sub
mov
sbb
lock
ss
outsl
jae
js
in
xchg
cmc
xchg
mov
pop
xchg
add
loop
mov
fsubrs
add
mov
enter
mov
xchg
pop
pop
jmp
dec
pop
rorb
movsl
insb
pushf
aaa
xor
jae
dec
movsl
xor
push
pop
aas
ds
sbb
dec
jno
movsb
rolb
jge
test
xchg
mov
pop
lock
out
xchg
out
adc
xor
fisttpll
sub
xor
and
xchg
aas
xchg
hlt
push
repnz
pop
push
sbb
pop
ds
push
daa
lahf
sbb
fldlg2
jo
mov
xchg
mov
int3
xchg
pop
sub
dec
fstpt
and
outsl
addr16
addl
repz
sbb
shrb
cltd
xchg
jl
test
ljmp
lret
cmpsb
sub
insl
mov
jge
popf
movsl
dec
out
hlt
in
push
ss
pop
mov
mov
arpl
lock
repz
rorl
stc
jo
mov
lea
sbb
or
dec
mov
push
dec
mov
cwtl
mov
xchg
pop
jg
cli
add
push
push
jnp
adc
adc
push
fisubs
cmp
jno
es
lods
jnp
leave
xor
adc
or
imul
ds
or
sub
cmp
sbb
mov
pop
and
mov
dec
data16
hlt
lock
arpl
ljmp
outsl
cltd
mov
ds
insb
mul
ja
rolb
and
push
dec
pop
filds
dec
ja
pop
dec
std
subl
test
jb
xor
mov
mov
mov
stc
cmc
divl
imul
aam
add
mov
outsl
or
jno
jnp
xchg
jp
je
pusha
mov
add
pop
testl
aas
rorl
sub
in
push
xchg
ss
sub
jmp
fsubp
sub
mov
sti
jmp
pop
das
or
xlat
std
out
into
xor
popa
stos
out
cmp
fs
cmp
test
repz
js
mov
shr
add
xor
lds
inc
daa
mov
nop
not
mov
xchg
jmp
xor
aas
in
popa
pop
pop
je
rclb
out
inc
adc
jecxz
jns
xchg
divl
repnz
pop
jl
push
mov
int3
push
test
jb
outsl
shr
push
xor
adc
pop
insb
test
arpl
fcompl
cld
mov
fcmovne
ret
je
ljmp
pop
loopne
xchg
scas
int
fdivl
mov
shlb
sub
js
jl
or
into
adc
cmp
sub
outsl
leave
xor
mov
push
xor
jp
mov
lea
adc
imul
mov
aaa
sub
aad
jne
jns
add
mov
xor
cmc
xor
pop
ss
xor
cwtl
getsec
inc
jp
xor
xor
push
repz
xor
decl
xor
ss
jle
aaa
scas
jle
ss
xchg
bound
xor
jecxz
loop
jg
cmp
std
and
push
in
xchg
adc
xor
stos
scas
pop
fwait
push
xchg
pop
rcll
sbb
xchg
mov
loopne
cmp
ret
xor
sbb
inc
cli
xor
sar
mov
inc
inc
fs
aam
mov
sti
cmp
fs
lods
nop
add
xor
xchg
pop
xor
xor
add
shll
fcmovb
mov
pop
mov
cmp
and
xor
sbb
aas
cmp
cmp
inc
addl
aaa
mov
pusha
mov
stc
cmp
pop
movsb
les
add
inc
ret
leave
jle
roll
xchg
movsb
ret
adc
pop
js
inc
dec
cmp
ds
aaa
ret
dec
xchg
rcrb
dec
leave
mov
inc
into
loop
push
push
cmp
testb
ss
mov
cmpl
cmp
cmp
cmp
push
inc
enter
jne
inc
je
arpl
cwtl
xor
mov
xor
cmp
inc
mov
or
mov
push
xor
int3
pop
mov
mov
inc
pop
xor
je
inc
cmp
inc
xor
dec
push
mov
xchg
int3
imul
mov
mov
inc
mov
add
lret
fisttpl
dec
pushf
int
pop
mov
mov
les
pop
dec
mov
gs
cmpsl
ds
mov
inc
mov
lret
shlb
cmp
mov
mov
int3
rol
xor
cmp
sub
cmp
scas
mov
mov
cltd
test
xor
inc
loopne
imul
in
xchg
mov
mov
xorb
jo
je,pn
push
xor
pop
sub
rep
sub
daa
repnz
sub
mov
out
int3
lds
imul
das
cmp
jb
jno
jmp
je
inc
lock
popa
outsl
inc
pop
sub
push
cmp
rcll
sub
popa
mov
les
inc
or
adcl
lock
adc
push
sbbl
push
xor
test
inc
add
add
mov
pop
in
jo
mov
out
mov
lret
xor
jecxz
jp
out
rorl
insl
mov
dec
divb
inc
and
push
or
cli
mov
sub
adc
add
and
and
dec
adc
shrl
sub
js
nop
stos
hlt
inc
int
dec
dec
and
cmpb
pop
outsl
cmp
lret
add
xlat
cli
add
out
aaa
cs
push
cmp
cld
ds
and
jne
xchg
mov
adc
fcomp
insb
cmpsl
jecxz
inc
icebp
push
dec
orl
mov
rcrl
xchg
mov
sbb
and
pop
mov
mov
jl
mov
lods
add
ss
xchg
push
test
xor
leave
sbb
adc
push
cltd
and
or
hlt
xorl
outsl
cmp
add
int3
xchg
arpl
outsl
and
adc
daa
jnp
sbb
ljmp
push
icebp
fsts
mov
adcl
mov
lods
aas
outsl
xchg
pop
iret
cmpsb
xchg
ret
sub
dec
lock
or
cmp
fwait
mov
sub
ljmp
mov
jb
imul
mov
adc
sbb
cmpsb
jle
lret
adc
and
repz
jp
outsl
push
js
addb
mov
stc
dec
xchg
xor
cwtl
popf
jp
lock
fwait
dec
push
arpl
pop
dec
jp
in
inc
mov
call
and
jp
jl
xchg
lods
sub
add
adc
std
add
pop
insb
sbb
cmpb
dec
mov
cmc
pop
lock
cmpb
jp
nop
fwait
in
icebp
mov
or
loope
fldt
jp
xchg
sub
lock
aas
dec
je
mov
dec
cmp
pop
and
inc
out
aas
adc
test
fdivs
repnz
push
adc
sub
dec
push
mov
lock
lea
adc
xlat
xor
mov
push
cmp
rcrl
lods
dec
lea
mov
mov
mov
imul
daa
inc
stos
push
pop
outsl
cli
movsb
addl
fdivrl
imul
insb
jb
dec
enter
adc
xchg
mov
and
jo
inc
insl
push
and
cmp
xor
fs
jecxz
adc
in
decl
outsb
jge
xchg
inc
xchg
fcompl
scas
jae
mov
push
ret
test
jmp
mov
leave
stc
ljmp
in
repnz
mov
pop
dec
aas
inc
jb
popa
lcall
dec
cmp
negl
sbb
dec
fisttps
ror
or
sub
cmpsb
cmp
aas
fwait
mov
push
insb
pop
xor
sbb
ds
adc
test
xor
dec
popw
jno
lret
inc
cld
adc
push
dec
ss
adc
loop
loop
push
xchg
scas
js
mov
aas
stc
daa
inc
jge
mov
fldcw
jb
in
movsl
jno
shrl
loopne
outsb
fucomp
xchg
out
aas
ds
xlat
push
ss
subb
and
stos
and
imul
cmc
nop
mov
add
xchg
xor
popf
dec
adc
jmp
les
bound
xor
cmp
cs
outsl
in
xchg
add
outsl
jns
or
shlb
stos
mov
dec
out
mov
sti
xor
aaa
ss
cmp
orb
xor
jo
hlt
ret
cld
out
adc
push
push
and
inc
int
in
push
jnp
sub
inc
sub
sbb
jg
rcrb
aaa
addr16
in
push
xchg
mov
fdivl
cmp
jmp
xorb
mov
pop
push
ss
insb
cmp
pop
push
mov
mul
jo
fstps
jb
adc
daa
xchg
ljmp
rcll
xorl
sbb
sub
push
rclb
imull
adc
cmp
add
mov
out
test
aas
retw
lods
lret
pop
cmp
or
xchg
mov
push
dec
cmp
inc
mov
call
outsl
xor
jl
pop
pop
jno
or
test
ret
frstor
sar
xor
in
jge
data16
iret
inc
jecxz
jno
aas
movsl
push
xchg
popa
jg
and
shlb
jb
cmpsb
jge
add
xor
pop
xchg
jmp
scas
lret
sti
add
bound
std
adc
stc
out
jae
cvtps2pd
adc
or
add
prefetch
xchg
cmp
pop
and
lret
fwait
rcrb
inc
aam
push
lahf
scas
add
jb
aas
scas
in
push
sbb
pop
shll
mov
std
in
mov
sbb
stos
pop
dec
ja
mov
xor
mov
push
or
and
inc
mov
sbb
push
fsubl
xorl
test
cmpsl
mov
push
mov
orl
lcall
jb
arpl
push
stos
jae
xchg
lock
out
push
xchg
outsb
inc
and
lahf
jo
mov
mov
out
mov
or
in
sbb
sub
into
lret
pop
out
lret
add
flds
jb
mov
push
loope
lahf
insb
into
pushf
push
cmp
ret
cmpsl
jno
cli
mov
in
mov
mov
ret
mov
shlb
in
push
lock
adc
inc
dec
cmp
lock
popf
ss
sub
out
inc
xchg
adc
sub
pop
aas
mov
fdivrp
shrl
mov
xchg
ss
sbb
loop
inc
sub
jnp
pop
jecxz
or
jb
xor
and
mov
pop
mov
inc
xor
int3
jno
mov
scas
ret
sbb
dec
iret
push
shrl
cmp
dec
xor
lock
mov
inc
outsb
cmp
aam
sar
jp
std
xor
in
xor
sbb
insl
sbb
adc
clc
and
dec
in
arpl
cld
xor
bound
imul
rcl
hlt
cltd
xlat
jmp
ds
iret
cmpsb
idivb
dec
scas
ffreep
setl
leave
fwait
sarl
dec
xchg
xor
fldenv
or
insl
lcall
cmpsb
in
daa
in
push
arpl
into
ret
sub
mov
ret
outsl
add
out
aaa
fsub
jno
es
out
push
xchg
jne
sbb
notl
sbb
sub
push
pop
mov
mov
loope
push
hlt
outsl
sbb
sbb
cmp
mov
loopne
jp
mov
int3
aaa
fldcw
and
pop
aas
dec
scas
aad
pushf
hlt
sbb
int
mov
fdivl
arpl
loopne
pop
push
bnd
jnp
rcrl
mov
mov
mov
dec
fwait
xchg
sub
and
outsl
push
xlat
inc
mov
cmp
mov
dec
adc
aaa
and
adc
lret
std
das
mov
pusha
outsl
sti
inc
dec
push
push
mov
lock
jge
sub
lea
add
into
in
cwtl
push
cmp
sbb
into
sbb
lret
xchg
push
inc
sarl
cmp
mov
outsl
in
inc
fistpll
aas
mov
or
add
out
roll
jno
inc
dec
jbe
sbb
cltd
fwait
stos
mov
xchg
sub
mov
ficomps
cs
push
adc
mov
pop
inc
rorb
cmp
adc
or
cld
test
fadd
pusha
add
mov
outsb
out
icebp
xchg
sub
std
adc
xor
outsl
nop
inc
lods
fs
sub
jl
je
lret
lds
mov
sub
cmp
ss
cmp
xor
lods
std
cmpsl
xor
jbe
cmp
push
xor
pop
dec
lods
xchg
jl
push
cmpsb
lock
pop
lds
hlt
add
cmp
fldl
aaa
dec
xchg
xor
ret
and
add
sub
mov
cmp
lret
lret
mov
or
mov
inc
lds
mov
mov
inc
loop
lds
inc
cltd
adc
shll
mov
nop
add
lret
inc
mov
pop
sbb
mov
outsb
sti
mov
sub
daa
xor
adc
or
inc
inc
xchg
out
jns
pop
mov
pop
pop
push
pop
sbb
shl
jae
das
rorl
xor
lret
and
int3
sbb
insl
iret
leave
mov
lods
sub
fbld
push
test
xor
cmp
push
into
fcmovb
mov
mov
dec
lahf
leave
iret
jns
popf
les
push
jnp
div
mov
imul
out
addr16
and
test
mov
popf
dec
add
enter
test
sbb
nop
xchg
jge
sbb
mov
mov
or
mov
mov
std
lods
bound
stos
lcall
fwait
jb
in
mov
cmp
dec
testl
pop
dec
cmp
sarb
or
out
outsl
mov
xor
ret
stc
add
xor
push
imul
movsl
decl
add
cmp
push
inc
out
mov
repz
fbstp
cmc
cli
aaa
and
inc
cmp
in
and
mov
repz
std
imul
mov
cld
mov
int3
jb
lret
gs
dec
mov
push
pop
cmp
mov
inc
mov
js
or
testb
arpl
or
lea
cmp
fsts
push
inc
in
push
mov
lock
mov
out
push
mov
fdivrl
and
in
xchg
popl
push
testl
push
dec
jo
repnz
stos
mov
jae
pop
xchg
xor
adc
mov
in
jbe
test
das
or
mov
mov
mov
add
fadd
sub
insb
scas
sbb
mov
scas
mov
adc
push
lret
cmp
cmpb
or
scas
or
repnz
xorb
add
push
cmp
fwait
test
cmp
mov
xchg
sarl
add
cmpsb
mov
lock
imul
imul
dec
imul
mov
orps
sti
sbb
xor
cmp
loope
lods
loopne
mov
jecxz
cmp
mov
repnz
scas
dec
movsb
mov
and
movl
cmpsl
push
xor
fdivrs
sbb
and
adc
lods
pop
cwtl
subb
add
mov
out
insl
es
int3
ret
pop
icebp
dec
mov
push
rorb
jmp
push
sbb
lock
jmp
jecxz
neg
cmp
xlat
dec
mov
mov
pop
aas
jno
cmp
mov
mov
xor
stos
cmp
mov
jo
adc
jl
push
loop
and
clc
jno
dec
call
pop
insl
lock
addr16
mov
xchg
xlat
fdivl
inc
or
pop
jge
in
fs
rclb
loop
loop
arpl
mov
xorl
push
outsb
sbb
dec
mov
loop
dec
jae
xchg
push
mov
stos
inc
pop
adc
aad
push
xchg
jb
or
sar
gs
frstor
fs
repnz
in
cwtl
mov
addl
fisubrs
fcomps
adcb
sbb
pop
fsubl
out
out
add
adc
adc
dec
add
push
cld
sub
fstp
pop
pop
out
inc
lahf
das
push
lret
push
xchg
sub
dec
xchg
mov
je
sub
loope
push
mov
popa
divb
arpl
sub
dec
inc
push
scas
inc
xchg
sub
mov
push
jl
movsl
xor
pusha
lcall
in
lods
mov
repnz
xchg
jmp
pop
jno
mov
popa
daa
sbb
lret
pop
ret
lock
dec
mov
mov
mov
je
cwtl
mov
iret
imul
cmp
hlt
pop
xchg
mov
inc
stc
mov
arpl
xor
dec
add
out
pop
lret
pop
xchg
sub
push
jle
pop
add
or
mov
decb
mov
cld
inc
push
mov
andb
in
or
or
jb
in
lock
and
cmp
es
dec
stc
das
xchg
movsl
icebp
test
mov
lret
pushf
mov
xor
adc
fisubl
in
xchg
fistpll
cmp
push
and
mov
ljmp
lods
enter
inc
icebp
test
mov
orb
mov
mov
enter
mov
xchg
cli
pusha
stos
outsl
mov
mov
sbb
push
lock
lahf
or
fsubp
and
pop
add
ja
mov
jge
and
sbb
add
mov
repz
pop
cmp
jb
dec
mov
lock
in
mov
sti
mov
xchg
scas
int
mov
jo
adc
sbb
or
push
xchg
mov
notl
popf
push
test
in
mov
mov
adc
add
mov
into
leave
loop
xor
les
out
mov
test
jl
mov
cs
cld
jmp
addr16
repnz
rorb
ret
out
push
movb
rorb
cmpsl
inc
mov
loopne
cmpsl
jno
or
push
outsl
fwait
aas
adc
xor
adc
loope
clc
loopne
pop
mov
adc
ficoms
xchg
xchg
or
and
fst
shll
xchg
je
roll
push
push
imul
mov
shrb
xchg
inc
insl
out
jne
notb
push
insb
sbb
nop
pop
xorl
divb
and
push
xchg
dec
lea
jmp
aad
add
push
jecxz
mov
xchg
jno
int
out
dec
das
sarb
js
scas
sub
mov
in
in
dec
jnp
cltd
sub
ljmp
jo
mov
nop
ja
xchg
or
fstl
popf
xor
mov
mov
mov
popa
les
jno
xchg
inc
adc
movsl
or
sbb
inc
mov
jo
loope
add
adc
and
inc
mov
test
jecxz
lock
hlt
sti
sub
test
aaa
out
push
sbb
xor
push
sbb
push
or
nop
or
mov
sti
jge
aas
jns
faddl
scas
and
std
lock
pop
sub
jns
xchg
movsb
push
xlat
mov
imul
divb
test
outsl
mov
and
clc
hlt
mov
icebp
inc
and
push
inc
jl
std
divl
xorl
loopne
in
xchg
dec
mov
movsb
fwait
jl
xchg
mov
fwait
cmpsb
or
cmp
xor
fucomp
sub
lods
mov
and
mov
push
push
jno
arpl
mov
jmp
push
cltd
sub
lret
push
mov
mov
inc
adc
and
cmpb
jmp
pop
mov
dec
test
xor
xchg
in
in
pop
dec
jne
cmp
shl
je
das
rcrb
xchg
push
add
add
aad
cltd
add
jno
mov
jb
js
push
cmp
push
mov
sti
scas
pop
cmp
lret
push
sub
in
cmp
jo
hlt
adc
daa
mov
pushf
mov
test
xorb
data16
xchg
pop
inc
stos
aas
pop
add
addr16
lret
add
mov
pop
loop
leave
cmp
ret
sub
outsl
or
pop
jmp
xchg
fmull
movsl
xchg
push
dec
mov
ss
or
stc
outsb
xchg
mov
stos
push
add
inc
sub
mov
outsb
cli
icebp
push
arpl
jns
lods
mov
jge
inc
dec
jb
jb
push
sarb
fdivrl
ret
bswap
pop
mov
and
iret
pop
and
push
jno
mov
adc
adc
jp
mov
loopne
loop
ret
lret
sbbl
bound
imul
test
xchg
mov
test
repz
lahf
scas
mov
outsb
jp
je
mov
movsl
xchg
mov
push
test
pop
ss
mov
dec
ds
fstpt
les
cmp
jnp
nop
sub
popf
mov
bound
clc
cmp
cmp
dec
clc
int3
push
xchg
adc
cmp
xor
lret
js
dec
repnz
inc
adc
jle
imul
sub
mov
push
xchg
lret
enter
out
xor
test
xorl
divb
sbb
aas
mov
out
lahf
adc
popa
lret
in
sbb
cmpsb
push
jno
ret
xor
xlat
out
shr
jp
push
add
pop
sub
shrl
outsl
mov
sbb
je
scas
lret
icebp
mov
pop
int
mov
sub
xchg
sbb
and
xorb
inc
inc
popf
das
fiadds
cwtl
mov
cmp
jae
in
or
add
orl
dec
inc
mov
cmp
xor
clc
or
pop
xchg
addr16
das
ret
sbb
aad
xchg
lock
lcall
orb
lods
pop
loop
jg
add
or
jno
fmul
inc
ljmp
jp
dec
ds
pop
mov
ljmp
dec
pop
pop
mov
inc
fcomps
xchg
xchg
cs
cmp
jle
imul
ja
sbb
mov
out
mov
sbb
lahf
fldl
add
enter
xchg
or
repnz
mov
mov
pop
dec
aad
lea
stc
bound
and
aas
xchg
jg
insb
and
xor
lea
mov
mov
je
dec
add
xchg
and
cmp
xchg
lretw
scas
pop
cmp
pop
xchg
sbbl
xchg
cld
add
xchg
pop
adc
inc
mov
nop
pop
dec
mov
sub
mov
xor
jbe
or
movsl
sub
adc
leave
adc
xchg
cli
faddl
fsubl
xor
outsb
sbb
stos
mov
int3
shlb
daa
hlt
sti
cli
xchg
cmp
inc
pop
dec
push
lret
mov
cmp
cmpsl
mov
nop
sub
xchg
mov
pop
push
dec
mov
mov
in
fnstcw
insl
pop
jno
leave
mov
adc
mov
dec
adcl
xchg
push
insb
adc
mov
push
test
xor
lods
repnz
outsb
dec
jmp
shlb
mov
push
or
lahf
cmpsl
mov
mov
dec
loopne
push
test
fbstp
pop
outsb
popa
sub
mov
test
dec
bound
aad
aas
enter
in
movsl
adc
pop
imul
imul
pop
mov
mov
add
mov
mov
int
mov
in
push
scas
pop
or
pop
jge
std
fdivrl
cli
rcl
fidivs
das
or
pop
and
cmp
scas
cmc
inc
dec
cmp
iret
sbb
jge
xchg
sub
cmpsl
add
jle
je
xor
outsl
push
sbb
inc
push
or
xchg
push
and
repz
ljmp
loop
nop
das
push
js
icebp
into
lock
fsts
and
mov
adc
pop
in
xor
or
push
cmp
and
testb
push
push
push
mov
test
cld
sti
orl
mov
ss
inc
sbb
outsb
das
inc
insb
fistl
cmp
loop
call
in
adc
sub
scas
test
jno
testl
leave
mov
lret
cmp
mov
inc
test
in
popa
and
arpl
pop
loop
cmpsl
or
cld
sti
movsl
push
dec
mov
es
xchg
push
dec
mov
add
lock
pop
ds
sbb
cld
iret
out
ljmp
or
js
xor
inc
cmp
and
std
pop
inc
adc
loopne
in
push
jb
mov
mov
popa
fwait
xchg
outsl
sub
jbe
dec
jbe
mov
or
pop
rorl
ret
test
push
jecxz
nop
xor
or
xor
mov
dec
stos
adc
xchg
stos
outsl
cli
xlat
xchg
and
cmp
repnz
or
mov
push
cmpsb
sub
add
rclb
adc
xchg
leave
jne
add
inc
and
pop
lret
pop
mov
or
inc
mov
lcall
aas
jno
pop
push
sub
es
shrl
je
sbb
fs
mov
mov
shl
push
inc
mov
idivb
mov
sti
mov
int
or
xchg
inc
mov
xchg
iret
jno
ret
jge
int3
push
out
rcrl
pop
insb
fnstcw
push
mov
int3
mov
and
or
movsb
mov
jmp
dec
push
ja
insb
xor
xor
rolb
ss
je
stos
inc
dec
lock
mov
test
cmp
mov
imul
out
sub
lock
fdivrl
in
push
ljmp
jne
add
pop
rcrb
test
fisubs
dec
cmp
jno
push
out
dec
addl
jg
push
and
xorb
push
jb
and
ss
or
cmp
or
ds
lods
lds
inc
adc
sub
iret
push
jp
push
repz
adc
ss
or
cld
and
or
fidivrl
fadds
ret
or
js
ret
inc
mov
loope
ds
add
add
jno
ljmp
outsl
push
mov
fldl
inc
mov
add
xchg
push
and
fistps
or
mov
aas
hlt
outsb
popf
dec
xchg
cmp
popl
dec
nop
mov
popf
test
xor
cli
push
imul
mov
ret
mov
adc
mov
mov
lods
push
cmovg
mov
mov
push
xor
lock
pop
inc
pop
mov
ljmp
movsb
and
stc
pop
dec
ret
add
scas
rcl
ljmp
ret
test
push
cwtl
xor
test
adc
gs
adc
test
aaa
pop
sti
sub
mov
pop
sbb
or
cmp
das
cmp
arpl
pcmpeqb
fcoml
cmpb
iret
fwait
pushf
ds
sub
andb
aaa
stos
aas
scas
xchg
inc
mov
insl
add
cmp
cmpsl
dec
inc
out
jle
cmp
sahf
sbb
rcrl
jl
mov
cld
adc
push
and
stos
push
mov
ss
cmp
adc
dec
rorl
cmp
xchg
xlat
loop
sbb
fsubs
outsl
inc
push
in
pop
jne
leave
stc
jno
out
add
push
aad
dec
movsb
sbb
cmp
mov
mov
xor
icebp
push
cmp
cmp
pop
sbb
xchg
or
sti
adc
cmpsl
nop
shlb
shrl
fisubs
inc
push
xchg
inc
mov
jl
push
inc
adc
sbb
mov
jp
test
cmp
aas
xchg
sbb
jge
call
pop
mov
xchg
xor
jno
and
mov
mov
dec
stos
add
dec
fisttps
push
add
aas
aaa
jl
dec
mov
outsl
aaa
mov
sub
shll
inc
xchg
xor
ds
mov
mov
stos
cmp
or
cli
xor
mov
adc
test
test
xchg
ljmp
mov
mov
xchg
les
adc
mov
lret
mov
and
cwtl
cmp
jle
xor
adc
icebp
xchg
bnd
xor
lods
or
test
and
xorb
lock
cmp
cmp
mov
or
push
mov
sahf
int
dec
cmp
out
mov
ret
push
mov
lcall
xor
inc
divb
mov
dec
sti
jg
mov
int3
aas
dec
leave
ljmp
rorb
push
mov
mov
adc
inc
pop
ss
push
xor
loope
jl
xor
les
aam
lret
ret
pushf
mov
cmp
xor
mov
pushf
cld
cmp
push
dec
les
ss
pop
inc
cmpsb
ss
ss
sub
cmp
mov
mov
ss
inc
rorb
ret
push
add
xchg
sub
push
push
mov
dec
inc
xor
xor
mov
push
sbb
pop
mov
into
mov
je
mov
xor
test
ss
ret
mov
xchg
mov
xor
ss
dec
push
dec
xchg
xor
xor
fidivrs
inc
xor
push
xor
mov
jae
xor
xor
lret
pop
mov
xor
mov
je
xor
cmp
xor
inc
test
cwtl
inc
pop
aaa
dec
test
je
mov
sbb
mov
ss
xor
dec
xorl
iret
mov
loop
hlt
idivb
ret
xor
mov
test
mov
push
lea
aam
mov
inc
dec
jl
test
cmp
jecxz
sub
push
add
dec
push
adc
in
js
mov
xchg
out
lret
out
xlat
aad
es
int
insl
dec
pop
fsubrl
add
ficoms
ss
jp
in
adc
pop
adc
mov
adc
push
icebp
and
ljmp
sahf
int
push
sbb
jg
pop
pop
dec
lock
xor
dec
jbe
jl
jb
outsl
ss
mov
out
pop
xor
lret
adc
aas
int3
mov
lods
sbb
repz
jo
mov
mov
fwait
sub
jns
into
fwait
xchg
and
test
arpl
dec
in
sbb
mov
xlat
push
xor
leave
adc
rcll
test
popf
ret
adc
rcll
mov
dec
pop
scas
insl
jae
push
roll
filds
push
pop
imul
and
outsl
movsb
les
push
sti
imul
test
lds
test
mov
jl
xor
in
jne
insl
jg
aas
cwtl
outsl
stc
sbbl
mov
fdivrs
cmp
or
subl
imul
cmpsb
jnp
inc
and
dec
rcrb
mov
xor
push
mov
jns
mov
stos
jge
cli
mov
jl
push
mov
fldl
dec
adcl
dec
test
cmpsb
and
sub
push
cmp
divb
sbb
fidivl
dec
dec
xlat
adc
test
lret
push
or
xchg
lret
pop
fidivrs
jne
sbbl
push
aas
or
add
mov
mov
inc
popf
jg
push
ret
andb
aas
into
sbb
mov
xor
repz
out
and
jae
inc
stos
loop
fstp
mov
mov
pop
shr
jb
insb
inc
or
aas
jp
cmp
dec
xchg
or
roll
rep
push
nop
cmp
std
mov
stc
cmpsb
out
outsl
test
lods
pop
out
sahf
adc
and
arpl
int3
scas
inc
cwtl
push
je
and
imul
cld
dec
lret
test
movsl
dec
in
mov
dec
stos
mov
lods
js
lds
sbb
ds
mov
dec
xor
sbb
sbb
in
addl
lea
loope
xor
mov
inc
rcl
mov
xchg
je
mov
aas
pop
inc
outsl
sbb
shll
bound
jno
ja
repz
imul
add
mov
insl
jle
inc
adc
jle
inc
int3
or
add
xchg
daa
insl
lods
ja
pop
xor
push
repnz
push
dec
jno
xor
repnz
dec
dec
mov
adc
xchg
mov
ljmp
popl
inc
std
mov
mov
shrb
cmp
pop
dec
mov
inc
or
inc
in
push
movsb
mov
xor
aas
cld
cmp
jg
call
lret
mov
jb
adcl
jnp
call
jo
imull
iret
jle
dec
adc
decl
je
cli
arpl
frstpm(287
mov
mov
dec
pushf
xor
rcrb
mov
mov
inc
mov
lea
dec
hlt
stos
jb
out
adc
mov
mov
outsl
outsl
dec
adc
pushf
pop
decl
sub
add
mov
je
xor
sbb
scas
sbb
int3
call
cmp
jge
xchg
nop
cmpsl
mov
sub
push
mov
dec
mov
adc
ret
lods
lock
mov
in
mov
mov
push
and
insl
lods
xchg
push
dec
rcrl
xor
xchg
jp
cmp
sbb
insb
dec
loop
dec
aas
push
jnp
fwait
iret
std
lea
faddl
lock
lahf
adc
cmp
adc
fcoml
and
cwtl
add
xor
xchg
jbe
popf
iret
mov
lods
mov
jae
hlt
mov
ss
rorl
in
mov
std
leave
arpl
cmp
jl
jecxz
dec
mov
xchg
inc
cmpsl
push
popf
mov
int3
jno
mov
dec
push
dec
movsb
outsb
in
sub
sbb
fs
fcoml
add
lock
pop
mull
lret
xor
into
leave
nop
jg
xlat
into
outsb
in
inc
fistpll
lds
push
std
arpl
pusha
xlat
mov
inc
lret
xchg
cmp
mov
sti
mov
add
push
sbb
imul
mov
pop
jno
adc
mov
add
push
aad
insl
cmpsb
fiaddl
mov
xchg
mov
adc
dec
jb
lret
sub
mov
and
loope
xor
ljmp
adc
xchg
jo
adc
mov
repnz
push
sahf
sub
ret
and
jae
repnz
test
mov
jb
mov
jae
aam
push
dec
xor
or
jge
enter
in
push
pop
test
xchg
outsl
stos
inc
mov
mov
xor
fcoms
stos
test
pop
and
jae
xor
ds
ret
int
test
sub
sbbl
jmp
xchg
jp
fs
pop
xchg
shlb
adc
and
lret
adc
leave
jl
dec
test
fs
aaa
sarl
repnz
test
inc
call
jp
mov
sbb
and
xchg
ds
pop
cli
je
pop
ss
aas
dec
outsb
push
mov
xor
lock
mov
test
xchg
out
arpl
lret
lds
jno
dec
xor
sti
stos
xchg
jmp
jge
jnp
bound
jno
iret
jge
and
bound
or
sub
add
mov
pop
xchg
push
adc
xor
ds
out
mov
sbb
or
mov
inc
lret
aas
aam
push
lds
xchg
in
dec
cwtl
add
sbb
xor
loopne
stc
xchg
xchg
xor
or
hlt
add
jne
ja
cld
aas
mov
enter
mov
jno
xchg
push
or
pop
dec
mov
dec
adc
or
inc
adc
push
sbb
push
xlat
dec
imul
ljmp
stos
shlb
scas
dec
subb
sub
push
cmc
cmp
int
vcvtpd2psy
adc
icebp
test
xchg
pop
dec
xor
mov
pop
subb
pop
outsb
int
jecxz
ret
insl
pop
cltd
ljmp
adc
cli
out
arpl
xchg
cmp
fmul
mov
mov
jo
daa
xchg
inc
outsl
out
les
xor
rorb
mov
fmuls
mov
xchg
xor
adc
cmp
js
xchg
icebp
hlt
xor
mov
mov
xchg
xorb
dec
leave
std
les
pop
out
test
inc
cmpsl
shl
sbb
daa
inc
jb
jo
ss
lret
cmpsl
rolb
mov
mov
adc
xorl
mov
fdivrl
ret
xchg
jae
add
inc
mov
loopne
mov
inc
mov
aas
push
test
addl
rcll
fsubrs
dec
mov
xlat
mov
cmovb
je
ret
mov
dec
add
repz
sub
add
daa
fisubrl
ds
ret
ljmp
add
jg
cmp
adc
push
inc
cld
inc
xchg
lret
mov
lock
or
and
dec
adc
xlat
dec
pop
sub
maskmovq
imull
popf
dec
xor
lahf
mov
adc
xor
int
push
dec
xchg
mov
or
jbe
mov
dec
bound
push
adc
shl
mov
ds
pop
subb
mov
adc
iret
daa
push
mov
out
decb
insl
inc
sahf
pop
test
fdivl
stos
mov
cltd
xchg
xchg
xor
adc
lds
push
and
push
pop
dec
and
inc
jmp
jnp
hlt
icebp
je
sbb
into
inc
ss
je
enter
gs
ja
push
xor
orb
divl
outsl
pop
dec
pushf
popa
aam
mov
push
push
jno
pushl
cmp
add
mov
lods
hlt
outsl
aam
sub
inc
mov
add
arpl
xor
aas
fmulp
shll
arpl
inc
jne
stos
push
nop
in
mov
das
and
ja
adc
in
add
mov
int3
mov
outsl
mov
dec
jge
sub
sub
stos
loopne
mov
std
cmp
jle
fcoms
cwtl
jno
or
sti
dec
mov
xor
mov
push
loopne
jno
hlt
outsl
push
pop
cmp
dec
aad
inc
mov
mov
div
pop
cmpsb
xchg
xor
ret
bound
shrl
pop
fs
repnz
jno
sub
pop
mov
sti
adcb
fisttpl
mov
mov
mov
or
push
int3
loopne
fwait
xor
out
arpl
mov
xor
adc
lret
aad
pop
fisttps
xchg
mov
inc
push
mov
insl
cmpsl
lahf
dec
pop
or
gs
dec
push
gs
xchg
dec
pop
hlt
int3
xchg
jle
mov
jno
xor
jns
push
lock
push
cmp
jmp
dec
aaa
cli
adc
loop
ret
sbb
jecxz
sub
ds
add
xchg
scas
sub
je
jmp
int3
ja
jecxz
pop
inc
cmp
sbb
mov
and
add
cwtl
testb
lods
inc
inc
sbb
mov
pop
sub
insl
jl
mov
xor
bound
test
inc
jl
jmp
ret
xor
xor
xor
les
xor
repz
and
add
xor
cli
popa
xor
add
xor
daa
cmp
mov
loope
les
jo
mov
xor
rorb
ret
xor
outsb
dec
push
int
cmp
cmpsb
mov
out
rcl
daa
inc
mov
ss
int3
push
int3
adc
jae
xor
inc
test
in
xor
mov
rolb
mov
cmp
fnstsw
xor
adc
inc
push
divb
sbb
inc
push
adc
mov
mov
push
aas
icebp
popa
pop
inc
data16
ja
add
mov
add
jmp
pop
mov
inc
mov
inc
cmp
cmp
mov
jle
xor
frstor
aas
jnp
lret
dec
aam
pop
dec
in
sbb
scas
idivb
pop
iret
xor
mov
mov
pusha
mov
pop
dec
push
dec
mov
mov
lds
cmp
mov
xchg
ljmp
inc
fdivrs
mov
cmp
inc
jp
xchg
into
sar
inc
ret
lds
inc
iret
cli
dec
jp
inc
lret
pop
inc
xor
push
inc
inc
mov
inc
pop
mov
push
pop
cmp
mov
leave
mov
pushf
inc
push
mov
test
inc
inc
push
aaa
push
inc
ss
mov
cmp
jo
xchg
in
lahf
ss
dec
cmp
movsb
mov
cmp
ficoml
dec
xor
mov
ds
into
pop
xor
xor
mov
lds
dec
aas
cmp
dec
adcl
inc
cmp
and
repz
adc
lock
das
mov
arpl
push
mov
push
and
leave
sub
dec
inc
jno
jge
iret
push
push
sti
iretw
or
dec
js
into
mov
or
xchg
nop
cmc
mov
mov
rcrl
cmp
mov
dec
dec
and
adcb
mov
sbb
inc
jl,pt
outsl
inc
fnstsw
jl
jge
inc
xor
dec
sub
xor
dec
ja
popa
xchg
icebp
xor
xor
jp
outsl
fwait
ret
jg
fmuls
std
repnz
das
mov
sti
and
hlt
inc
mov
in
push
cli
mov
push
or
cmp
pop
mov
mov
adc
dec
mov
jle
sbb
in
in
xor
ret
aas
jno
push
push
cmc
inc
sbb
sub
xlat
xor
mov
insl
push
xor
sub
push
or
bound
dec
fnstenv
sub
in
add
mov
rcll
push
decb
cs
loop
aam
cltd
sahf
adc
movsl
jge
iret
sub
lea
dec
lods
push
dec
inc
loope
stos
fwait
mov
aas
pop
hlt
rolb
cwtl
inc
imul
dec
push
insb
aas
mov
sarb
arpl
xchg
add
push
mov
add
jp
in
lock
dec
xor
mov
pop
xchg
shll
dec
mov
xor
push
mov
ds
sub
into
push
xor
das
shlb
dec
sti
nop
enter
push
les
bound
ja
into
inc
cmpsb
xlat
pop
sti
pop
lret
mov
lcall
xchg
cmpsl
shlb
out
js
jo
mov
push
push
jle
jo
push
in
jno
xchg
xor
pop
or
lock
out
pop
gs
pop
mov
cli
xor
scas
jno
or
je
pushf
je
sahf
and
mov
jmp
std
push
mov
imul
sub
push
movsl
adc
cmpsl
repz
imul
sti
xchg
in
or
or
push
inc
jo
inc
jns
dec
mov
arpl
ret
ret
push
iret
sub
into
push
loop
dec
mov
push
sub
xor
test
and
daa
in
adc
addr16
out
mov
mov
das
outsl
jnp
ss
push
inc
mov
or
jo
sbb
xor
sbb
adc
icebp
dec
xchg
jns
inc
rolb
iret
and
fwait
mov
jne
int3
jae
loope
test
jno
jp
loope
cs
xchg
jne
out
push
repnz
mov
jb
lock
inc
in
xor
popf
js
pop
push
out
call
stc
rolb
jnp
scas
jne
mov
push
and
xor
aas
sub
inc
outsl
lea
test
cld
mov
sub
cmpsb
mov
and
not
leave
andl
arpl
enter
jne
ljmp
cmc
jb
lds
and
sub
iret
outsl
lds
jno
hlt
jno
out
int3
adc
js
or
xor
xlat
jmp
fadds
fwait
scas
jp
outsl
out
push
dec
sub
and
divl
mov
or
aas
rcrb
leave
js
shlb
fwait
mov
cmp
fldl
mov
sbb
inc
jnp
in
pop
cmp
testl
adcl
cmp
cmp
daa
aas
jns
cmpxchg
bound
mov
mov
scas
fadds
cli
mov
call
jns
mov
in
fimuls
shl
scas
outsb
pop
dec
or
or
mov
ss
add
out
xor
mov
and
out
push
push
push
mov
dec
mov
dec
or
push
rcrb
repz
iret
inc
sub
test
jge
mov
dec
mov
push
mov
das
jno
arpl
outsl
testl
aas
into
xchg
out
gs
arpl
popa
stos
cmp
pop
inc
fdivrp
stos
lea
test
jb
cli
mov
mov
dec
int3
adc
in
bt
xor
outsl
jns
rcrl
xor
lret
jns
repz
mov
push
or
mov
cmp
dec
sub
test
ss
jb,pn
aas
lds
fmull
lahf
mov
ret
lcall
clc
lahf
data16
dec
popf
xor
addr16
mov
push
imul
notl
fs
xchg
xor
pop
push
mov
add
sti
or
enter
dec
jne
and
push
or
fimull
out
xorb
sbb
ret
mov
bndldx
adc
imul
mov
inc
xor
mov
cmp
dec
adc
int
cmc
sub
sbb
lods
out
jns
jbe
bound
pop
ds
pop
cltd
mov
addr16
jnp
or
jns
adc
xchg
sar
mov
sbb
jl
out
test
orb
fs
aad
inc
jns
and
mov
pop
sub
xchg
push
xchg
mov
mov
cmpsl
gs
popa
xchg
bound
inc
dec
mov
lret
push
push
sbb
outsl
push
ja
add
mov
test
jle
xchg
inc
sarl
lret
mov
rolb
xchg
xchg
lock
loop
push
outsl
mov
push
jp
xor
sub
mov
pop
mov
dec
mov
pop
das
xchg
sub
push
test
dec
sbbl
sbbb
lods
stos
mov
dec
fwait
in
mov
pop
rcl
sahf
or
xor
addr16
push
lret
cmp
dec
xchg
dec
and
addb
cmp
lods
push
xchg
pop
lcall
jmp
mov
mov
mov
lret
insb
pop
icebp
out
nop
or
push
xchg
out
pop
icebp
popa
push
loop
rolb
mov
inc
xchg
movhlps
movsb
aam
sbb
push
and
fwait
add
into
movsl
jl
outsl
dec
xor
rcrb
push
sbb
adc
out
jge
call
arpl
scas
sbb
push
xor
andl
dec
jmp
aas
add
imul
xchg
mov
arpl
scas
lock
lahf
push
sub
daa
dec
scas
fistpl
lret
je
cmovnp
mov
ds
fs
dec
rorb
adc
hlt
xchg
mov
inc
lret
adc
mov
std
inc
fcompl
aas
adc
add
push
leave
shrb
fidivrl
or
rclb
lock
jge
pop
jns
ret
add
adc
sbb
inc
sbb
mov
aas
addr16
jle
loopne
into
and
xchg
fcoml
push
or
cli
into
in
cmpsb
addr16
pop
push
iret
add
pop
mov
push
jl
leave
xlat
mov
out
nop
es
mov
push
out
sti
shrb
add
jp
cld
lcall
lods
jmp
pop
out
rclb
pop
push
mov
sbb
aaa
inc
xlat
out
dec
or
sub
rcl
dec
subl
mov
inc
sbb
inc
mov
jle
sub
adc
lahf
mov
jb
and
and
sbb
pop
push
mov
in
ss
pslld
jns
outsb
stos
addr16
rclb
mov
popf
adc
or
out
sbb
in
sbb
scas
andb
sbb
inc
and
jg
mov
push
mov
xor
jne
lcall
pop
and
push
daa
outsl
or
cmp
test
mov
mov
sbb
dec
enter
mov
cmpxchg
data16
push
jns
std
dec
cltd
ret
cmp
hlt
lret
loope
ss
xchg
aas
and
add
cmp
push
stos
into
or
pop
sub
fcoml
js
mov
icebp
mov
lret
xor
ds
xchg
adc
push
data16
pop
push
test
mov
xor
xor
notb
or
repnz
and
fprem1
inc
out
or
pusha
inc
arpl
fwait
cld
jbe
jbe
xchg
je
push
je
in
ds
movsl
inc
cmp
jp
adc
jmp
push
push
faddl
cmp
fwait
xor
lahf
aas
fld
mov
jmp
fmulp
cmp
sti
insl
cmp
push
in
mov
test
adc
repz
push
test
sar
call
negb
jno
aaa
dec
lcall
push
cmp
popf
lds
out
push
fsubrp
xchg
fs
ffreep
out
sti
dec
es
inc
mov
aas
rorb
or
dec
xor
lret
shll
cmp
dec
and
inc
adc
lds
cli
ret
scas
fcompl
leave
repz
xchg
movsb
cmp
xor
ror
lret
hlt
jno
ret
or
add
adc
rorb
loopne
test
loopne
mov
arpl
mov
sbb
and
adc
outsb
pusha
enter
in
divl
pop
inc
sbb
sbb
imul
rol
mov
pop
push
shlb
dec
movb
mov
cmpsb
cmp
pop
data16
aad
fdivrl
cmp
pop
adc
adc
sbb
aaa
outsl
sbb
int3
mov
mov
shll
mov
cmp
pusha
in
int3
jecxz
adc
gs
fimull
movsl
subl
icebp
xor
mov
fs
adc
in
iret
stos
ret
nop
out
hlt
test
scas
mov
fisttpl
xchg
shll
adc
in
sbb
dec
push
imul
add
addl
rcrb
mov
xchg
int
mov
stos
data16
push
push
xchg
xor
aam
adc
sbb
cmp
stos
add
out
ja
mov
lock
dec
pop
sub
mov
rcrb
lahf
test
je
pop
mov
imul
push
lds
cmp
call
or
push
push
adc
mov
out
jnp
lretw
rolb
or
mov
rorl
loop
lret
mov
jns
xor
btr
out
adc
insb
mov
add
adc
nop
push
test
aas
adc
in
daa
movsl
sti
dec
fcomps
ror
arpl
test
in
xlat
cmpl
in
sub
arpl
dec
aas
jp
ss
jb
adc
sub
arpl
push
mov
test
sub
cmp
imul
fists
pusha
jmp
mov
ret
mov
mov
dec
sbb
lock
fsubrp
jge
inc
push
sub
lret
and
or
repz
pop
inc
cmc
in
addb
setl
aas
mov
jg
daa
lds
bound
sub
dec
xor
out
mov
push
xchg
sarb
outsl
out
insb
in
mov
dec
lock
dec
jg
inc
subb
mov
cmp
mov
loope
dec
xlat
sbb
hlt
inc
stos
xchg
scas
in
fistpll
dec
xlat
adc
xchg
push
aaa
int3
cs
mov
int3
xor
int
stos
fwait
in
in
into
and
scas
dec
lcall
jae
mov
movsl
or
bound
mov
cmp
shrb
sub
iret
cmc
mov
adc
sbb
xchg
negb
mov
ljmp
inc
xchg
xor
mov
pop
xlat
sahf
xor
mov
mov
gs
icebp
mov
mov
rep
xor
mov
ror
data16
lret
shll
repnz
sbb
and
mov
dec
dec
dec
cltd
inc
icebp
divl
xchg
cmp
xor
shll
std
push
scas
inc
mov
dec
mov
sbb
cmp
cmp
cmpsl
iret
insb
xor
pop
ja
xor
rorl
call
adc
xchg
push
aas
cltd
push
xchg
pop
addr16
push
cmpsb
jns
sahf
in
mov
mov
xchg
dec
add
jb
es
mov
adc
xor
xor
call
inc
imulb
cmp
imul
push
ret
push
icebp
stc
sub
pop
test
lret
ja
std
jo
push
call
mov
pop
ljmp
in
push
or
push
test
xor
std
xor
ss
test
cli
lods
jmp
xchg
jb
je
mov
fstpt
imul
mov
imulb
xor
jmp
pushf
out
jo
inc
fwait
cmc
mov
in
jle
xor
pop
inc
cltd
ss
adc
jg
mov
lock
ficompl
xchg
mov
lahf
jg
xchg
js
add
dec
sub
dec
cmp
xor
dec
je
loopne
jnp
xorl
adc
sti
xor
push
addr16
push
inc
xchg
sub
push
cwtl
or
xor
jg
sarl
pushl
mov
xorl
inc
xchg
loopne
inc
scas
and
cld
xor
icebp
adc
test
inc
inc
bound
adc
pop
xor
repnz
adc
lods
mov
dec
test
rcll
ss
jecxz
pop
inc
push
aam
negb
xor
xchg
out
movsb
idivl
inc
inc
leave
mov
lods
movsl
inc
ficomps
int
cmp
adc
xor
lods
inc
mov
adc
mov
mov
adc
divl
inc
outsb
pop
popa
pop
adc
shll
pushf
dec
popf
adc
loopne
popf
mov
adc
call
mov
ret
je
xor
lret
aam
and
or
addr16
cmp
rcll
xchg
nop
mov
xor
pop
xor
jl
lock
ds
push
adc
cmc
ret
push
push
repz
iret
sub
add
adc
mov
xor
insl
sbbl
mov
cmp
xchg
xchg
in
xor
movsb
sbb
shr
jecxz
jno
jae
jns
or
push
cltd
sub
inc
xchg
xor
out
cmp
stc
sbb
xor
imul
fsubrl
pop
imul
jb
jns
mov
cltd
xor
pop
jae
push
loope
stos
add
inc
adc
in
mov
fnstcw
inc
mov
js
shl
popf
jbe
and
scas
loope
pop
push
xor
enter
adc
xchg
xor
ja
jne
push
cmp
divl
cmp
std
push
data16
mov
divb
cltd
jb
loop
pop
sub
xlat
pop
jbe
inc
pusha
mov
push
xor
push
into
xor
push
mov
repz
pop
xorb
mov
lret
dec
repnz
xchg
mov
mov
rcrb
cmc
mov
dec
in
mov
dec
push
or
mov
mov
lea
int3
dec
jmp
push
ret
std
sbb
push
arpl
lods
ss
or
daa
dec
xchg
push
aaa
fnsave
lods
mov
xor
add
xor
inc
push
xchg
sbb
jb
mov
and
jae
inc
xchg
cmp
je
pop
sub
and
addb
mov
adc
imul
frstor
or
pop
mov
push
sub
cmp
mov
lret
fs
pop
cld
into
jmp
repnz
add
push
mov
push
sub
sahf
std
jbe
xchg
jb
push
pop
xorb
adcb
dec
jp
cmpsl
adc
xchg
movsl
push
xchg
push
sbb
jbe
gs
shrl
out
inc
push
mov
stos
xchg
bound
xor
lods
dec
xor
mov
xor
scas
sbb
dec
inc
stos
inc
or
mov
adc
stos
in
sbb
popf
scas
jb
sub
int
xor
sbb
xor
popa
pop
xchg
wrmsr
adc
imul
add
ja
ss
ds
leave
fdivl
iret
or
pusha
or
fsubrs
pop
scas
scas
push
push
jae
hlt
inc
sbb
cli
sub
ds
and
xor
xchg
imul
outsb
adc
and
mov
xchg
jns
test
xor
fnstsw
xor
xor
cmp
jae
xchg
cli
adc
inc
sahf
and
roll
popa
jbe
jo
mov
incb
xor
scas
sbb
xorl
jns
jb
std
fs
jbe
imul
je
cmp
fimull
loop
mov
push
cwtl
adc
inc
add
mov
fimull
fwait
lock
ja
popf
xorb
cmc
cmp
sub
inc
push
into
inc
and
ss
mov
in
cli
jbe
sbb
test
xchg
inc
pop
ds
fidivs
add
addr16
cmp
dec
xor
jg
push
xchg
add
xor
jne
out
sbb
mov
addr16
adc
jae
mov
and
jle
imul
cmpsb
rcll
and
call
xorl
push
xor
mov
mov
and
adc
jns
xchg
pop
inc
dec
jnp
mov
or
adc
mov
push
dec
repz
cmp
mov
xor
push
pop
xor
fndisi(8087
cmp
subb
fs
sub
cmp
repnz
lahf
int3
dec
repz
in
adcb
loop
je
into
inc
stos
je
inc
jnp
sub
pop
sub
jns
add
lret
xor
lahf
cmp
fs
xor
pusha
sti
daa
push
cltd
hlt
push
stos
shrl
int3
clc
pusha
push
addr16
add
or
into
jb
je
jns
fidivrl
cmp
inc
xor
aas
inc
mov
sarl
xchg
mov
mov
or
jp
xor
mov
cwtl
jbe
push
jb
xchg
insb
mov
dec
ss
fstl
push
addl
push
cmp
repnz
mov
push
outsl
mov
pop
pusha
mov
xchg
mov
xor
gs
repz
xor
cmp
xor
test
or
in
je
xor
dec
push
xor
outsb
sub
inc
pop
clc
mov
rcll
pop
inc
xor
shr
jb
je
neg
add
xchg
and
jo
je
int3
xchg
xchg
pop
push
lods
cltd
xchg
cmp
repnz
scas
mov
je
lcall
pop
pop
repz
xor
sub
cmp
bound
adc
mov
xor
mov
cmp
jb
add
scas
je
add
push
jo
push
dec
rclb
mov
push
or
jp
or
scas
adc
ja
pop
hlt
mov
in
mov
xor
and
push
inc
adc
cmpsl
jne
dec
xor
movsb
push
cmp
inc
push
adc
inc
iret
je
cmp
imul
mov
ret
xor
mov
lods
inc
push
xlat
mov
sub
outsl
mov
add
xor
push
aam
rcl
daa
loope
jns
hlt
repnz
pushl
cli
jb
mov
fisubl
stos
cmp
mov
popf
or
xor
xlat
jns
cltd
mov
pushf
or
push
cwtl
mov
fwait
dec
dec
xor
shll
cmpsb
shl
push
xor
jae
outsb
xchg
mov
cli
lods
lods
ds
fs
push
push
clc
jb
je
sub
pop
notl
mov
cmp
adc
xor
lods
nop
xor
pop
hlt
mulb
inc
mov
adc
pop
push
mov
arpl
push
push
push
mov
mov
xor
lds
and
jp
xchg
int
aad
xchg
sarl
jl
lret
mov
xor
cmpsb
push
mov
das
out
nop
dec
push
lea
jns
sbb
pop
jb
dec
movsl
pop
cmpb
jo
jle
xorl
rcll
lea
xor
call
push
sub
bound
xor
mov
jnp
xor
mov
xchg
call
adc
sub
std
xlat
push
push
dec
fucomip
loopne
mov
fdivrs
adc
stos
sti
mov
cmpsl
jb
cltd
out
add
sbb
je
pop
jg
xchg
mov
adc
push
cmp
xchg
xor
lods
pop
cs
xor
jb
jmp
xchg
inc
daa
cmpb
fildll
xor
data16
adc
adc
fcoms
push
imul
rcll
dec
ljmp
push
xor
loop
or
bound
adc
scas
xor
stc
fwait
lods
ss
push
or
mov
scas
fsubl
xor
data16
in
or
cmp
lods
jb
adc
dec
orb
test
mov
xor
xor
add
push
fidivs
addr16
xor
mov
push
pop
adc
aam
cmp
jno
xor
inc
ds
icebp
inc
or
xchg
les
xor
icebp
and
adc
ds
icebp
add
adc
add
xor
mov
icebp
inc
adc
pop
xor
jne
fldcw
ss
push
ja
rcl
movb
test
aaa
and
and
mov
push
add
sbb
popa
adc
sbb
test
ss
adc
out
inc
cmc
cwtl
lret
jp
jmp
fcoms
sahf
adc
push
loop
loop
and
loope
or
imul
dec
xor
pop
dec
sbbb
pop
push
xor
mov
xor
shlb
sbb
adc
dec
pop
inc
cltd
mov
addb
mov
popf
cmp
and
mov
bswap
pushf
xor
mov
sub
and
xor
or
jno
fbstp
mov
mov
jnp
ds
rcrl
xor
push
jb
roll
push
xlat
xor
repz
push
cmp
sub
push
mov
rorl
pshufw
push
mov
loope
cwtl
and
xchg
adc
pop
adc
mov
adcl
mov
mov
add
aam
adc
cmp
inc
xor
hlt
std
mov
arpl
sub
inc
cmc
jbe
mov
xor
dec
xor
lcall
aaa
sub
xchg
xor
xchg
ss
cs
je
push
loope
inc
insl
xor
push
pop
fldenv
icebp
cltd
or
cmp
enter
xor
xchg
pop
nop
xor
jbe
xor
scas
add
add
hlt
sahf
notl
pop
xor
sbb
fstpt
int3
pop
xchg
pusha
xchg
xor
or
xchg
aad
inc
loopne
sti
xor
repnz
push
mov
jl
inc
ficoms
shll
aam
dec
mov
jne
xor
pop
xor
inc
xchg
scas
orb
xor
popf
push
mulb
out
xor
mov
xor
cmp
xor
adc
push
add
and
sarl
mov
adc
cmp
xor
jle
sub
jg
xchg
lret
jns
lahf
std
jp
pop
inc
rcll
mov
cmp
mov
fdiv
jne
pop
cmp
jbe
aaa
xlat
jns
or
pop
xchg
inc
pop
orl
push
sub
inc
iret
bound
jno
xor
push
or
popa
dec
xor
push
push
inc
lcall
xor
push
shll
push
pop
xchg
mov
daa
rcl
mov
divb
push
test
shlb
int3
iret
dec
cmc
sti
repnz
insl
push
sbb
jno
shl
divl
mov
cmp
lahf
mov
daa
out
mov
je
addr16
fcompl
into
mov
ss
mov
fists
addr16
add
xor
mov
std
xor
out
setb
dec
dec
je
dec
cld
lea
xor
das
aas
shlb
push
fcomps
adc
adc
pushf
push
ja
icebp
adc
pop
leave
push
xor
shr
std
outsb
jbe
nop
lock
imul
and
mov
into
cmp
fldenv
inc
test
rclb
jmp
sbb
adc
push
inc
xor
adc
xchg
mov
lret
dec
xchg
xor
dec
in
mov
je
cmpsl
xor
mov
push
daa
test
dec
or
cmp
jb
xchg
cli
mov
xchg
jno
xor
insl
push
xor
mov
inc
sub
xchg
scas
lds
jne
enter
popf
ss
cmp
sbb
in
repz
dec
xor
nop
insb
bound
rcll
lret
xor
xchg
mov
mov
cmc
mov
jmp
cmp
daa
push
sub
repz
cmpl
mov
dec
jp
sbb
cmp
xchg
loop
dec
or
inc
and
cld
xor
cmp
xchg
push
gs
jae
testl
cmp
lods
adc
inc
push
and
xor
ret
mov
mov
movsl
pop
stc
cmp
xorl
inc
sbb
cmp
stos
xchg
jno
out
xor
inc
cmp
hlt
in
mov
mov
addr16
lcall
push
outsl
mov
mov
ja
xor
pop
xor
sub
xchg
packsswb
movsb
and
aad
or
xchg
add
push
push
cmpsb
and
enter
adcb
das
or
mov
cld
xor
mov
loope
xor
cmpsl
dec
je
or
in
cmp
mov
je
pop
xchg
cltd
scas
stos
mov
pop
and
or
shlb
inc
inc
outsl
bound
jnp
inc
cmp
popa
cmp
lret
pop
fs
push
jno
mov
adc
adc
mov
mov
push
icebp
mov
fwait
rolb
adc
mov
call
add
xor
dec
and
jecxz
push
aad
and
movsb
push
ss
push
nop
adc
push
mov
into
mov
dec
push
mov
jle
sbb
lret
ror
ss
xchg
mov
and
movsl
cmp
loop
jb
ss
push
push
inc
adc
jge
xor
jmp
icebp
add
add
push
nop
js
xor
into
out
out
push
dec
ret
cmp
inc
imul
inc
cmp
jnp
adcb
adc
push
cmp
jb
xor
into
mov
xor
xchg
sti
aam
or
mov
push
push
inc
and
adc
cmp
int3
jb
jno
push
xchg
cmp
dec
pop
mov
xor
xchg
xchg
adc
in
mov
adc
fnstcw
cmpsb
in
popa
add
inc
retw
cmpsl
adc
pop
xor
adc
xchg
mov
shll
lods
dec
movsl
push
loop
dec
outsb
cmp
cmp
push
mov
leave
je
jb
adc
sbb
dec
xor
jbe
adc
cs
adcb
jno
xor
xor
add
mov
xchg
inc
dec
xchg
cmp
ja
xlat
das
xor
aam
icebp
sub
mov
push
aaa
je
leave
cmp
xor
das
out
cwtl
cmp
loop
pop
inc
cmp
aad
mov
pop
mov
inc
jae
mov
xchg
adc
sbb
daa
mov
jne
ficompl
and
fdivs
xor
fnstenv
rorl
sub
adc
pop
mov
ja
adc
repz
out
xor
ja
cmc
mov
jp
inc
sbb
mov
xor
dec
push
aad
lds
aam
fdivs
rol
xor
xor
cs
jb
shrl
xchg
and
out
sahf
sbb
jno
inc
fwait
dec
daa
push
xor
xor
notl
adc
mov
push
xor
jno
out
xchg
push
xchg
pushf
cmp
je
test
mov
je
xor
test
mov
push
inc
xchg
sub
lcall
xor
test
fldlg2
rcll
xchg
cli
push
out
xor
divb
repz
xchg
inc
rcrb
xor
cmp
xor
adc
out
cmp
xchg
xor
ficoms
stos
xor
jne
mov
xchg
add
push
bound
xchg
je
mov
cltd
adc
xor
movswl
lret
mov
adc
sub
sahf
add
mov
and
fcoms
xor
stos
sub
pop
fsts
repnz
fildll
loopne
xor
pop
mov
xchg
xor
lahf
insb
jno
rclb
adc
jb
mov
sbb
popa
xchg
add
cmp
jb
adc
fs
pop
arpl
mov
and
decb
cltd
xchg
xor
testl
pop
ljmp
inc
daa
pop
inc
stos
xor
pop
icebp
mov
lea
popf
ja
lret
rcr
ss
pop
xchg
loope
jno
repz
bound
pop
cmp
adc
out
in
dec
push
inc
pop
xchg
inc
lods
in
in
xor
icebp
xor
cli
dec
adc
in
ljmp
add
mov
sub
scas
xchg
cmp
movsl
rcll
pop
popf
icebp
ja
je
push
xor
push
dec
cmp
push
nop
divl
mov
mov
movsb
out
fidivs
mov
jge
rcrb
popa
xor
push
fists
jmp
xor
push
icebp
lret
cmp
push
adc
les
lret
roll
aas
stc
inc
cmp
mov
imul
ss
push
and
xor
fstl
push
call
std
addb
mov
sbb
xor
sub
sarl
out
mov
aas
lea
jge
jno
xor
test
inc
testb
mov
insl
push
mov
ret
cmp
out
daa
push
adc
push
adc
inc
mov
into
dec
sbb
les
lods
push
or
add
test
jae
pushf
dec
repz
sbb
je
xchg
pop
and
repz
loop
push
sub
xchg
lds
dec
xchg
call
lahf
sub
sub
cld
and
pop
sti
sub
lods
pop
dec
lods
push
push
filds
pop
mov
xor
xor
sbb
outsb
push
lahf
xor
aas
pop
mov
shrb
adc
stos
fidivl
mov
inc
cmp
adc
call
cmp
inc
jns
js
cmp
mov
mov
enterw
cli
mov
ds
repnz
dec
and
mov
outsl
popf
jb
insb
xorb
xchg
vmovaps
aaa
rolb
cld
pushf
dec
add
ss
inc
out
sub
scas
loop
cmp
cmp
cltd
lret
inc
xor
inc
call
push
je
or
mov
fs
and
cs
dec
cmpsl
lods
mov
idivb
xchg
pop
jp
push
xor
mov
sbbl
adc
test
mov
cmp
cwtl
jbe
mov
xchg
mov
mov
jo
dec
or
adc
jne
adc
jno
mov
pop
mov
cwtl
das
dec
sbb
pop
mov
mov
test
sbb
sbb
insl
les
lea
mov
mov
xchg
xor
shll
adc
les
shrb
lcall
inc
dec
inc
call
mov
loop
repz
vpmulhw
adc
in
inc
adc
popa
outsl
push
adc
jmp
mov
cmp
std
xlat
adc
fstl
ss
or
out
nop
and
scas
test
mov
cmp
lds
test
jp
aas
or
imul
sub
test
push
inc
mov
pop
icebp
inc
nop
ja
ss
outsl
jg
inc
out
das
cmc
lret
xchg
lret
repnz
inc
pop
leave
lret
sbb
mov
fnstenv
push
cltd
xor
xor
xor
fcompl
inc
test
inc
ds
call
dec
mov
jg
xchg
sub
fidivl
mov
push
and
or
fisttps
ljmp
inc
mov
mov
loop
iret
jnp
aas
and
lea
dec
pop
mov
adc
outsl
push
aas
mov
mov
scas
cli
adc
stc
lds
mov
pop
xchg
sbb
adc
aaa
bound
xor
rorl
dec
jmp
mov
cmp
arpl
loopne
dec
cli
and
pop
cmp
jnp
lahf
adc
shlb
ja
cmp
movsl
pusha
pop
pop
sbb
mov
movsb
xor
push
jbe
sub
test
mov
pop
mov
push
ds
xchg
inc
jb
lds
xor
sbb
outsl
xor
fcmove
ss
inc
int3
arpl
jmp
mov
outsl
dec
shrl
ss
jl
movsl
xchg
js
push
pop
adc
and
pushf
sbb
xchg
sbb
lret
pop
adc
jecxz
dec
ljmp
imul
dec
mov
inc
adc
js
mov
adc
lock
js
add
ds
mov
sub
out
loopne
cmp
push
push
jns
adc
push
dec
in
inc
push
mov
jae
sub
call
rolb
test
add
sub
adc
inc
out
cld
jle
xor
push
xor
cmpsl
pop
cmp
mov
aas
loop
sbb
cvttps2pi
jae
jno
sub
pop
lock
xchg
aas
and
cmp
inc
pop
mov
fidivrs
mov
push
pop
ret
ss
bound
test
ss
push
lods
sbb
mov
add
add
arpl
shll
ds
jno
loop
jae
jne
fiaddl
dec
jl
daa
das
je
outsl
cmp
dec
cmp
fisttpl
ds
lahf
pop
xchg
cmp
sub
mov
daa
mov
dec
shll
xorb
inc
lret
xor
mov
aas
hlt
adc
mov
push
vsqrtpd
pop
mov
movsl
adc
and
pusha
mov
xor
inc
cltd
imul
xchg
into
call
test
mov
push
mov
dec
and
lret
hlt
xor
and
pusha
ss
aas
mov
adc
xchg
or
outsl
jle
mov
std
and
insl
js
insl
sbb
dec
jns
jne
push
xchg
lds
sub
outsl
sbb
outsw
jns
sahf
mov
inc
pop
and
push
inc
lret
fdivl
outsb
add
ja
pop
in
xchg
shrb
rclb
pop
jae
lods
pop
xor
mov
movsl
dec
fucomi
and
dec
mov
or
outsl
mov
sbb
sub
jl
cld
xor
jnp
imul
loop
pop
cmp
jp
into
lds
cmp
push
ljmp
or
mov
jo
test
or
mov
push
xchg
fadds
cmp
xchg
es
pushf
xchg
jbe
push
jno
ret
ja
xchg
lret
divb
adc
mov
ja
dec
adc
fwait
mov
punpckhbw
mov
aas
sbb
ds
dec
ss
sbb
xchg
lahf
mov
sarl
icebp
dec
dec
out
ds
sub
lods
mov
xlat
orb
aaa
pop
jge
movsb
lods
aas
jmp
es
fnsave
arpl
sahf
dec
push
mov
orl
ja
pop
imul
sub
imul
add
xchg
enter
outsl
mov
add
push
jl
inc
pop
cld
cmp
rorl
jae
lea
inc
lret
adc
dec
repz
gs
aas
fistpl
pop
mov
fbstp
jbe
jl
cmp
mov
adc
jecxz
fnstenv
cmp
pop
jne
cwtl
push
add
lret
in
push
add
add
fimuls
push
dec
or
xchg
inc
ds
or
sbb
insl
xchg
popf
cmp
cmpsl
inc
push
dec
push
das
scas
dec
fldenv
out
push
in
popa
push
out
aad
push
jecxz
stos
sub
call
scas
xor
arpl
xchg
cmpl
in
out
xchg
xor
xchg
pop
inc
insl
fldenv
repz
cmc
or
xorb
lret
inc
ss
xor
scas
sahf
test
dec
lds
sub
loop
mov
rcrl
xor
sub
test
mov
in
push
push
cmc
out
jg
xor
std
sub
imul
popf
lods
dec
mov
sbb
xor
movsb
xchg
mov
mov
leave
in
mov
scas
dec
sar
adc
std
adc
aaa
dec
decb
pop
imul
jmp
xor
cmc
stos
mov
test
push
or
cs
mov
ret
in
and
push
or
idivb
pop
adc
sub
mov
rol
push
pop
test
adc
pop
mov
dec
cmp
fists
xchg
loop
and
aam
dec
push
xor
adc
xor
int3
out
add
js
xor
stos
sub
xor
iret
cwtl
int
je
out
adc
cltd
push
push
sbb
repz
aam
push
cmp
loope
mov
pusha
dec
ljmp
xor
fucomi
adc
enter
je
pop
sub
sbb
add
jns
dec
xor
xor
outsl
fstpt
xor
fisubrl
movsl
adc
ljmp
pushf
sbb
jns
xchg
pop
je
push
lods
push
rorb
popa
insl
pop
into
lcall
je
gs
jo
xor
leave
outsl
xchg
pop
mov
push
jae
push
mov
jl
push
or
sub
repz
mov
cmp
sub
ds
mov
push
dec
in
jecxz
add
loope
xor
and
dec
xor
mov
insl
pop
push
stos
test
aaa
int3
xor
push
fs
push
je
adc
lret
or
adc
test
mov
pop
push
mov
xor
lods
jle
adc
sbb
jbe
movsb
dec
ds
pop
addr16
jns
push
clc
adc
shl
push
dec
call
movsl
and
xor
ds
jmp
xchg
mov
les
dec
sarb
dec
dec
mov
or
into
ja
mov
jmp
sbb
hlt
mov
pop
sub
or
popf
push
cmc
dec
test
xor
test
fldt
xor
sbb
pop
xor
pop
inc
pop
scas
mov
jo
xchg
loop
mov
add
ljmp
js
and
iret
xchg
mov
loope
out
xor
out
fbld
mov
xchg
and
test
xchg
sbb
xor
aam
shl
dec
adc
cltd
orl
pop
mov
mov
mov
dec
mov
xor
sbb
pop
leave
adc
mov
inc
mov
pop
divb
cmpb
clc
or
gs
push
sub
or
dec
adc
jnp
testl
xor
fistpl
mov
stos
std
in
xor
out
xchg
clc
cmc
push
in
push
bound
inc
dec
lods
xchg
xor
leave
jle
lods
pop
pushl
fwait
push
sbb
lds
xor
addl
xchg
cmc
dec
mov
sahf
test
push
jl
mov
jecxz
imul
into
jo
icebp
push
mov
push
mov
insb
jae
loopne
mov
sbb
stc
movsl
or
add
bnd
fdivs
xor
push
loope
jnp
loop
dec
in
cmpsb
lock
and
cmp
les
cmp
in
dec
dec
dec
xchg
movsl
daa
xor
xorl
inc
jbe
xchg
lock
test
push
xor
dec
testl
dec
int
sbb
ret
cmp
push
cmpsb
jae
addr16
xor
loop
ja
std
xor
lret
pusha
jno
mov
lea
mov
lahf
movsl
and
adc
inc
cmp
xor
rol
enter
xor
test
push
data16
gs
xor
add
push
repz
ljmp
xchg
fildll
jae
orl
xor
xchg
xorb
and
mov
or
mov
mov
aad
sahf
test
movsb
xchg
inc
lods
les
adc
push
adc
gs
mov
jnp
ja
pop
push
dec
sbb
pop
incb
call
xchg
mov
testl
xor
jnp
add
push
in
loope
cmp
lcall
mov
int
inc
push
adcl
orl
mov
xor
imul
push
dec
xchg
pop
fnsave
pop
stos
cmp
xor
mov
pop
arpl
mov
and
adc
add
push
inc
adc
adc
sbbl
sbb
in
push
hlt
fisubrl
sub
xchg
inc
cld
sbb
mov
imul
xor
add
enter
notb
dec
inc
je
in
jge
mov
or
xchg
mov
fs
out
fwait
rep
dec
push
xor
xor
adc
ret
fiaddl
inc
mov
jle
pop
jmp
test
out
dec
push
lret
cld
xor
xchg
sub
sbb
les
inc
pop
cmp
or
or
dec
xor
arpl
mov
stos
jno
enter
cld
ret
aad
inc
into
fisttps
cmp
int
js
jns
or
jae
pop
pop
push
divl
mov
mov
mov
sti
repz
es
pop
in
pop
xor
push
add
aaa
and
jb
pop
rcrb
std
xor
mov
jl
sarb
out
das
sbb
fmulp
out
pusha
jo
lahf
xor
add
or
mov
add
fidivs
sbb
jl
and
xor
xor
sub
mov
test
aaa
mulb
into
in
mov
stos
popf
cmc
sarl
xor
cmp
xor
out
loope
enter
xor
bound
mov
imul
loopne
test
xchg
test
test
cmpb
inc
fs
cld
fiaddl
add
inc
ja
das
dec
cltd
cltd
sbb
cmp
jmp
and
cltd
inc
fucomi
xor
lret
dec
cmp
mov
xor
sub
test
mov
xchg
movsl
push
jno
jmp
jo
mov
dec
imul
pop
pushf
cmc
cmp
pop
push
rcll
sbb
rcrb
cwtl
adc
mov
inc
mov
test
int
out
xchg
add
xchg
pop
inc
push
fucomi
sbb
inc
push
data16
jnp
cli
jle
xchg
dec
cmc
pop
int
movsl
dec
xor
inc
mov
sbb
sti
aas
sarl
lods
or
push
or
idiv
mov
add
mov
and
stc
ss
mov
xor
fistl
testl
ret
mov
dec
or
adc
push
pushf
jecxz
mov
arpl
lds
cmp
repnz
call
ret
push
jmp
dec
mov
cmp
dec
bound
cmp
andb
dec
lret
pushf
xor
arpl
dec
dec
adc
xchg
xchg
je
dec
lods
dec
adc
hlt
adc
ss
ds
iret
push
mov
and
dec
xchg
jbe
sbb
jno
jge
sub
adc
push
into
or
mov
pop
lret
push
mov
mov
or
jae
dec
sub
adc
pop
mov
inc
call
out
jnp
xchg
xchg
dec
test
cmpsb
sbb
out
popf
daa
std
popa
imul
cmc
int
lods
cmc
mov
aad
fdivr
push
pop
and
js
insb
loopne
mov
mov
aam
or
sbb
xchg
lcall
mov
push
test
cmp
iret
or
pushf
add
shrb
dec
enter
mov
add
inc
mov
dec
add
push
inc
jl
leave
cmpsb
add
lret
dec
ds
cmp
call
outsb
cli
xor
mov
and
add
push
sub
xlat
sbb
je
and
sbb
cmp
in
jecxz
loop
mov
cmp
inc
jge
cmp
dec
stos
outsl
and
mov
mov
xchg
xor
popa
xchg
push
pop
lret
push
arpl
mov
test
push
sbb
sbb
aam
scas
jno
nop
adc
lds
repz
in
es
push
jecxz
pop
ret
jae
out
fsubr
jp
repnz
aas
cmp
icebp
scas
and
xor
inc
sbb
aas
cmpsl
mov
mov
jl
popl
mov
repz
push
jecxz
out
fidivl
popa
xchg
cwtl
mov
aas
adc
dec
push
outsl
sbb
loop
or
and
mov
fwait
imul
mov
into
adc
fs
add
push
add
cld
cmp
ss
pushf
mov
push
pushf
adc
sti
sbb
lock
ret
mov
mov
inc
imul
mov
dec
into
and
lea
push
mov
and
inc
or
pusha
sarb
inc
out
push
jecxz
cmp
sub
sbb
hlt
out
fdivrs
add
or
test
out
fsts
dec
icebp
push
adc
or
aas
xor
bnd
ds
ja
jg
adc
mov
sub
adc
dec
pop
cmp
lds
ret
or
and
imul
add
jg
int
mov
clc
or
mov
xor
xchg
xor
cwtl
outsl
ffreep
jle
add
mov
xchg
inc
dec
mov
mov
sub
add
stos
aaa
and
cmp
mov
mov
mov
pushf
test
jmp
adc
clc
test
xor
push
pop
or
pop
jmp
loop
jnp
xchg
mov
f2xm1
mov
in
mov
shr
subb
adc
cwtl
xor
pop
sbb
arpl
xlat
mov
stc
loope
in
pop
pop
push
std
shl
cmc
push
out
fsubrs
jae
inc
lret
or
pop
mov
mov
inc
and
add
cmpsl
xor
xor
adc
iret
sahf
lret
push
imul
aad
pop
xor
xor
cltd
push
xchg
adc
in
or
xor
bound
push
mov
insl
pop
adc
dec
data16
mov
or
mov
stos
lock
push
pop
push
gs
inc
push
xchg
lret
push
fadds
push
test
cltd
arpl
push
inc
out
aas
push
test
into
fnsave
or
adc
and
mov
xor
jle
and
mov
cli
add
and
xchg
insl
pop
pusha
adc
daa
push
adc
jmp
notl
das
fnstenv
push
aad
jae
cmpsb
pop
adc
fiaddl
add
ret
and
xor
jne
es
adc
dec
and
adc
pusha
pop
xor
push
loope
jl
mov
pop
mov
push
push
faddl
rorl
pop
pusha
in
mov
es
xor
mov
adc
pusha
fs
loopne
inc
arpl
and
scas
jnp
inc
jae
test
adc
sbb
xor
mov
mov
mov
or
icebp
scas
push
push
jb
cli
adc
adc
lock
xor
iret
mov
arpl
outsl
dec
inc
cmp
inc
icebp
xor
xor
or
xor
outsl
enter
pop
adc
jnp
mov
ds
push
xchg
lret
jbe
lret
imul
pop
fldpi
rclb
aas
and
leave
sti
fs
cmp
js
sbb
jmp
lock
cld
xor
mov
loopne
ss
hlt
xor
into
inc
cmp
mov
out
fwait
xor
scas
sahf
and
mov
flds
pop
mov
xchg
xor
nop
shlb
mov
movsb
and
inc
sar
shll
mov
or
loop
dec
pop
rcrb
test
repz
jmp
mov
inc
inc
xor
repnz
hlt
mov
sub
and
leave
xchg
xor
fdivrp
inc
imul
xor
lds
lock
int
mov
mov
addr16
push
xor
icebp
push
sbb
mov
orb
mov
mov
pop
outsl
mov
jnp
dec
cmp
ds
adc
add
addb
xor
loopne
mov
aaa
clc
fidivrs
movsl
and
adc
ja
sub
dec
lods
sub
jno
mov
int
xor
sbb
stos
scas
inc
and
xchg
lret
cmp
leave
lahf
xchg
dec
sub
xor
xor
inc
cmp
adc
adc
gs
lods
push
add
movsl
mov
jg
mov
mov
gs
adcb
fs
daa
out
test
mov
xchg
or
popa
decl
inc
mov
push
add
or
sti
jp
dec
pop
add
cmpsb
xor
pop
inc
lret
shll
in
lea
mov
xor
add
jae
enter
aas
jb
inc
std
aaa
push
sub
addl
in
lock
push
mov
test
sbb
mov
ret
cmp
shlb
mov
mov
mov
jb
js
cld
fisubrs
lcall
mov
daa
les
push
in
inc
jns
mov
mov
xchg
out
mov
push
mov
repz
iret
sbb
pop
push
dec
bound
notb
push
call
sub
ljmp
add
inc
ss
bound
aam
orb
sbb
jae
push
xchg
and
mov
fwait
mov
xor
jmp
divb
xchg
sar
push
or
sbb
or
cmp
pop
or
outsl
loope
add
xor
scas
fucom
jnp
jmp
test
cmp
and
and
mov
sahf
mov
push
xchg
out
jmp
push
xlat
roll
je
and
jne
mov
aam
dec
pop
test
push
adc
dec
stos
out
push
mov
aas
mov
das
dec
fiaddl
jb
xchg
xor
fs
imull
dec
hlt
mov
aam
pop
xchg
jle
xchg
hlt
push
dec
mov
cmp
popa
sti
xchg
insb
fstps
pushf
mov
jl
jge
and
dec
adc
mov
jp
movsb
inc
dec
fsubr
jmp
mov
push
rcrl
push
add
push
and
sub
ret
mov
jae
adc
add
sub
push
fcom
adc
xor
stos
adc
push
jb
lret
stos
mov
out
lds
outsl
std
dec
sbb
jbe
xor
test
adc
mov
jg
sti
outsl
xchg
cmp
mov
bound
jb
aas
cli
mov
or
into
stos
rolb
loopne
or
mov
inc
sti
or
aas
repz
sbb
mov
push
into
cmp
jmp
xchg
std
jb
or
stc
fnstcw
pop
cmp
adc
jo
cmp
dec
decl
dec
sbb
repnz
ret
mov
test
test
lcall
andl
cmp
or
fildll
push
bound
and
shl
adc
and
hlt
mov
sub
lds
jb
fwait
pop
adc
sahf
sub
dec
xor
ffree
das
decb
fs
shlb
xor
insl
jmp
add
pop
pop
or
jb
mov
xor
gs
mov
rclb
dec
addr16
add
cltd
ds
outsl
pop
xor
imul
lret
loope
outsl
pushf
xor
xchg
ds
dec
inc
scas
cmp
push
mov
insl
cmpsl
jmp
scas
ljmp
adc
mov
imul
pushf
mov
hlt
jg
sbb
cmpsb
je
adc
push
or
xchg
imul
rcll
or
ljmp
pop
inc
scas
dec
fs
and
or
and
dec
inc
or
dec
xor
push
or
cmp
pop
in
mov
hlt
push
ss
mov
jecxz
out
cmc
push
jl
pop
dec
mov
int
lods
cmp
arpl
xor
pop
adc
pop
pop
xor
popa
jbe
jmp
mov
out
out
jne
mov
dec
adc
jnp
adc
mov
sub
push
test
hlt
outsl
inc
mov
mov
fstpt
jl
inc
mov
dec
adc
dec
outsl
jne
mov
jecxz
cltd
sub
dec
ds
or
aas
sarb
outsl
add
outsl
imul
arpl
arpl
jge
sub
in
cmp
mov
test
arpl
mov
orl
out
les
mov
sub
jnp
cmp
cltd
push
inc
sbb
fistpl
fisubrl
xchg
mov
stos
pop
jecxz
add
stc
cli
ficoml
cld
or
mov
cmpsl
push
jbe
push
cmpb
ds
lock
pop
pop
ret
mov
testl
nop
rclb
stc
dec
mov
mov
and
jg
loopne
sub
inc
jecxz
jae
jl
test
adc
out
repz
clc
inc
cltd
pushf
dec
sbb
leave
jne
mov
cmp
and
adc
lahf
into
mov
repz
cs
lods
dec
xor
lea
cmpsl
xor
stc
testl
movsb
xor
sbb
ss
stc
xchg
aad
nop
inc
mov
repnz
dec
insl
in
inc
cmp
mov
test
cmp
mov
fsubp
jbe
adc
mov
cmp
xor
mov
aad
outsl
xor
loope
xor
xor
jg
les
call
xchg
xchg
xchg
dec
inc
stos
dec
add
popa
cwtl
mov
jecxz
scas
ret
jb
fsub
cmpsb
test
jmp
enter
jl
or
push
icebp
fbld
leave
xchg
mov
iret
jae
mov
sbbb
or
lcall
push
jp
loope
inc
dec
sub
cmpl
xchg
lret
fistpl
sti
add
mov
ftst
mov
pusha
cs
sti
or
or
mov
clc
stc
int
jp
sub
cmpsb
insb
mov
pushf
and
pop
mov
inc
cli
jae
push
fadd
cmp
bswap
ficompl
push
pop
sbb
inc
add
inc
ds
jecxz
sub
pop
test
inc
jmp
cmp
and
push
push
xchg
pop
xor
sbb
xor
fisubs
sub
iret
ror
hlt
jo
test
inc
mov
movsl
ds
sub
in
jae
jns
test
mov
xor
pop
in
stos
test
ds
insl
jb
push
imul
fisubrs
fs
bound
and
inc
ds
jmp
out
mov
mov
stos
arpl
jae
mov
xor
adc
inc
xor
dec
adc
repnz
aas
cmp
scas
pop
adc
sbb
popf
pop
je
pushf
jo
push
fwait
inc
arpl
sub
cmp
adc
lahf
mov
sbb
scas
push
pop
push
dec
movsb
mov
push
jns
sub
pusha
dec
mov
cmp
enter
aas
cmp
push
icebp
jmp
mov
sub
js
les
stc
jb
clc
stc
jmp
inc
xchg
push
mov
les
out
dec
and
fdivrl
icebp
ss
dec
inc
das
sub
cli
je
cmp
shlb
test
test
cmp
xchg
pop
mov
lds
cmc
data16
imul
bound
or
adc
jecxz
lcall
xlat
xchg
aas
jle
sbb
jp
stc
or
jecxz
cmp
outsl
std
add
frstor
mov
iret
in
xchg
pop
dec
push
mov
push
out
xchg
mov
lds
movsb
inc
nop
xor
aas
cwtl
fs
shll
adc
mov
xor
mov
xchg
adc
or
cs
iret
dec
jge
mov
scas
inc
scas
popa
lea
fwait
mov
andnps
movsl
popf
pop
mov
push
mov
push
ja
les
add
xor
pop
aas
stc
in
xchg
js
popf
mov
pop
fwait
dec
sbb
enter
cmp
push
scas
pop
bound
idivb
arpl
xchg
mov
ds
jmp
xor
test
out
add
push
add
mov
mov
pop
ret
mov
sbb
sti
in
aas
sarb
je
repz
cmpb
fsubr
xchg
dec
jnp
in
sti
sub
andb
stc
sti
or
mov
sbb
and
outsl
daa
adc
adc
mov
jecxz
xchg
and
jno
push
inc
push
and
movsb
jle
cmp
inc
cmp
push
ds
das
aas
cli
je
in
repnz
movsl
vmovss
dec
mov
xchg
sub
mov
sub
jg
sahf
mov
mov
jb
test
movsl
push
sbb
mov
lock
outsl
add
pop
arpl
push
pushf
out
aaa
fsubp
xor
mov
ja
outsb
test
popa
dec
and
popf
pusha
push
movsl
lods
repnz
cmp
add
inc
mov
daa
int3
das
pop
int3
jmp
mov
push
rcl
or
icebp
and
outsl
movsb
outsb
daa
jbe
inc
jns
inc
stos
mov
push
fdivrl
je
push
mov
mov
mov
sar
fistpll
push
mov
cmp
cmc
test
jge
imul
test
dec
adc
fwait
xor
push
push
push
pop
fcmovb
roll
insb
popa
xor
js
push
adcb
iret
outsl
push
inc
jno
icebp
jns
cli
insb
lds
std
mov
popf
insl
movsl
xchg
mov
mov
jmp
mov
lcall
lret
test
aas
scas
lret
fsubrl
shl
fsubrs
adc
mov
in
fsubrl
mov
fidivrl
stos
out
cmpsl
xchg
cmpsb
mov
mov
and
cwtl
xchg
dec
mov
inc
mov
xchg
adc
push
out
pop
ss
push
jmp
pop
jmp
push
out
outsb
aad
xchg
xor
cmp
mov
adcb
jne
pop
jg
out
xlat
mov
fwait
mov
pop
xchg
xor
nop
sahf
xor
xorb
call
and
inc
xchg
shlb
lcall
sub
fcmovbe
out
xor
lahf
in
xor
jb
shl
or
mov
gs
hlt
in
loope
push
jp
or
in
aad
cmp
dec
dec
xchg
xor
insb
orb
sub
add
xor
jns
sbb
xor
jmp
push
adc
je
sarl
bound
jbe
sbb
mov
enter
scas
daa
mov
in
mov
cmp
pop
xchg
push
push
aaa
fld
push
xor
mov
sub
xor
insl
negb
mov
xchg
xchg
adc
ljmp
jecxz
je
mov
clc
add
jb
cmp
cmpsb
xchg
cmp
cmp
arpl
sbb
cmp
scas
and
sbb
xor
movsb
sahf
push
or
xchg
sub
inc
dec
sbb
lods
push
lret
lahf
stos
xor
inc
and
clc
jnp
xor
jecxz
xsave
fistps
push
cmpsl
adc
xor
cmp
inc
dec
push
aaa
out
clc
ja
jnp
shrb
aam
fcoml
push
out
mov
or
cmp
cmc
mov
mov
xor
aam
in
sbb
push
cwtl
add
cmp
sbb
loopne
stos
sbb
dec
cmp
hlt
in
stc
xor
inc
mov
sbb
sarb
shll
cwtl
xchg
inc
dec
mov
mov
fidivs
outsb
mov
loopne
jb
out
cwtl
mov
mov
iret
mov
shll
sbb
pop
inc
cmp
mov
mov
outsb
ficoms
cmp
push
jo
mov
test
adc
jb
xchg
or
inc
and
lret
inc
xchg
outsl
insb
pusha
pop
xor
push
mov
xor
lods
lods
push
shrb
sbb
mov
and
xchg
lcall
xor
fcom
outsb
sbb
insb
jno
adc
pop
ss
and
push
push
in
pop
stos
sbb
pmaddwd
cli
popa
push
sub
jb
sub
cmp
lods
adc
div
imul
mov
xchg
cli
cmpl
or
aaa
fimuls
adc
bound
in
add
jmp
xor
aaa
sbb
das
dec
or
sbb
lds
push
cmpps
clc
add
xor
into
ds
xor
aaa
test
or
xor
adc
mov
cmp
pop
mov
adc
sub
cmp
repnz
cmc
mov
lcall
mov
add
stos
jne
xor
jl
cmp
scas
mov
int
inc
cmp
mov
inc
xchg
xor
jp
sahf
ds
inc
in
and
test
nop
xor
lcall
jns
in
mov
sahf
sbb
orb
out
test
sbb
xchg
adc
cmc
xchg
xchg
dec
outsb
sub
mov
aad
jle
xor
mov
xor
jno
mov
in
pop
sti
xor
xchg
xchg
xchg
stc
out
test
pop
mov
mov
xlat
sub
push
push
movsl
js
test
scas
xor
ds
mov
aam
jge
stos
and
lret
xor
and
iret
push
xor
pop
xchg
push
loopne
data16
mov
insl
dec
and
push
testb
fnsave
push
in
out
push
push
push
or
testl
xor
mov
inc
xor
xor
inc
arpl
les
lods
dec
pop
add
imul
adc
movsl
xchg
pop
sub
xchg
clc
jo
iret
cli
hlt
jbe
mov
xchg
mov
mov
xorb
das
fidivs
jle
jge
push
and
pushf
std
cli
pop
mov
sub
push
loopne
push
xor
mov
dec
pusha
outsb
pop
gs
dec
hlt
jne
cmp
jle
imul
cli
mov
pop
xor
aaa
das
rclb
xor
adcl
inc
dec
dec
xor
leave
cmpsl
xor
es
xor
ret
lahf
mov
mov
mov
ret
pushl
sahf
testb
xor
fwait
data16
mov
push
mov
dec
stc
sti
fwait
aad
shl
je
xor
paddb
xor
jbe
push
mov
out
call
xor
pop
jo
inc
test
push
sbb
aas
cmc
andl
inc
or
lods
push
in
rorl
mov
dec
add
push
insl
jnp
xor
pop
rclb
add
jns
cmp
mov
xor
mov
push
pop
test
ret
loop
jnp
arpl
adc
fnstcw
cmp
ja
xor
xor
mov
cmp
cmp
xor
lea
xchg
fsubr
pop
push
shl
xchg
icebp
inc
shlb
jno
iret
lds
mov
push
bound
inc
ret
push
popf
test
sub
mov
cmp
ret
mov
xor
test
cmp
bnd
xor
cmpsb
jne
add
loopne
mov
mov
sub
adc
pop
xchg
ret
pushf
jp
xchg
mov
adc
cltd
xor
sarb
push
push
xor
les
xchg
sarl
inc
insb
test
xor
mov
jb
mov
imul
scas
jo
jge
dec
mov
add
clc
inc
or
jp
xchg
daa
mov
imul
mov
inc
pusha
lods
mov
xor
je
or
lahf
lods
ds
mov
adc
push
adc
loop
repnz
push
fmul
pop
inc
icebp
xor
adc
pushf
movsb
xor
cmc
jge
imul
inc
nop
inc
rcrb
jp
mov
xchg
cmp
sub
lcall
out
adc
jmp
mov
xor
stos
adc
aaa
cmc
dec
xor
add
push
add
out
mov
ret
shrb
cs
dec
push
dec
aaa
sbb
call
jnp
bound
xor
popf
xchg
push
dec
pop
add
repz
cmp
ficoms
out
mov
popa
les
gs
xor
fisttpl
cmp
add
cli
inc
push
fs
mov
lods
and
mov
hlt
jb
pop
push
imul
lods
sbb
sahf
dec
cmp
xchg
shlb
fs
xor
lods
jg
out
in
mov
fs
mov
pushf
shll
aaa
movsl
xor
leave
jb
ficoml
push
test
xchg
lahf
pop
xor
xor
test
inc
sbb
push
stos
por
subl
or
ret
xchg
or
xchg
bound
movsl
mov
jae
jb
xchg
and
xor
xor
fs
daa
inc
shl
std
xchg
mov
sbb
and
xchg
xor
test
sbb
pushl
mov
add
push
adc
cmc
shrl
dec
popf
dec
mov
add
inc
dec
jmp
repz
inc
insl
stos
out
push
jae
xor
stc
xorl
movsl
dec
stos
xor
push
fnstcw
and
and
push
xor
int3
inc
pop
scas
lods
sbb
daa
adc
cmpb
add
cmp
jns
and
stos
xor
inc
xor
xchg
sbb
stc
fisubrl
add
xor
das
mov
mov
dec
push
sub
fidivs
outsl
mov
xor
jb
jo
lahf
daa
or
nop
jge
dec
push
pop
pop
scas
sahf
cmp
xorl
cmpb
out
mov
xor
sub
mov
fwait
push
jmp
mov
addr16
cli
xchg
push
xor
loop
xor
test
ret
pop
cs
idivb
je
leave
aam
mov
pop
repnz
in
aas
mov
xchg
xor
sbb
mov
push
sbb
scas
lds
jo
out
icebp
mov
out
les
cmpsl
mov
scas
ficoms
push
cltd
xlat
fstl
xlat
cld
jb
mov
jge
mov
jecxz
hlt
sbb
das
rclb
mov
or
xor
xchg
addb
loope
cmc
shll
cmp
mov
pusha
iret
test
dec
and
ss
bound
inc
int3
dec
cmpsl
fdivl
push
outsw
ja
adc
imul
xchg
lock
repnz
cmp
lods
xor
add
mov
lods
outsl
sbb
and
mov
std
lcall
xchg
fs
inc
and
cmp
pop
pusha
loopne
ds
aad
inc
mov
iret
sub
stc
pop
jl
push
push
pop
and
sbb
dec
inc
adc
jecxz
cmp
cmp
cmp
jp
aam
outsl
sbb
repz
fisttpll
imul
mov
jmp
leave
mov
cmpsl
cmp
push
nop
iret
mov
outsl
jae
cmp
xchg
mov
sbb
das
cwtl
add
std
pusha
ss
dec
mov
stos
or
fsubrl
lds
push
xchg
enter
pop
shll
dec
jne
mov
adc
push
xchg
inc
mov
push
daa
mov
dec
incl
cmp
xchg
cmp
mov
outsl
scas
in
movsb
ja
leave
xchg
push
push
cs
loope
cli
in
lret
xor
mov
push
and
orl
jo
pop
xor
xor
outsl
push
int3
mov
leave
repnz
call
mov
inc
push
sub
outsl
lret
cmc
cmp
xor
movsl
in
aas
jle
sbb
out
jnp
in
scas
mov
dec
pop
sbb
cmp
mov
cs
outsb
shrl
sahf
mov
mov
lea
pop
int3
dec
mov
cwtl
imull
mov
mov
mov
shl
mov
aam
xor
xchg
or
js
mov
sbb
xchg
fs
adc
dec
push
lods
mov
mov
js
inc
adc
dec
lret
fmull
addb
repz
nop
loopne
mov
addr16
popf
pop
inc
fildll
add
push
out
cmp
iret
ds
push
mov
jae
dec
mov
lahf
mov
stc
out
icebp
inc
imul
cld
jp
cmp
cmp
push
aaa
aaa
cmp
pop
inc
fsubs
push
or
adc
stc
mov
mov
ja
add
nop
arpl
dec
or
push
pushf
jl
ss
js
lret
imul
adcb
sub
jmp
xor
in
pop
fcoms
mov
mov
movsl
fisubl
xchg
icebp
into
mov
into
enter
cmp
adc
push
mov
dec
ljmp
cmp
mov
dec
sbb
or
mov
jo
cli
stos
ss
pushf
inc
push
sub
sub
jns
jp
dec
repz
popl
outsl
adc
dec
jecxz
mov
sub
mov
push
add
into
mov
jmp
bound
std
inc
insl
mov
and
add
popf
push
fwait
lcall
lahf
mov
sub
jnp
outsb
mov
mov
mov
mov
iret
jecxz
push
les
xchg
gs
xchg
cld
add
cmp
mov
cmp
shll
xchg
sub
sub
out
daa
cwtl
push
pop
int3
mov
stos
sub
and
mulb
xchg
push
out
mov
scas
jns
jecxz
mov
es
cwtl
idiv
scas
call
std
mov
popf
mov
inc
outsl
cmpsl
and
daa
popf
jecxz
lahf
arpl
push
xor
or
popf
das
jge
popa
inc
push
fwait
int3
cmp
jo
ja
repnz
aas
jp
dec
stos
push
imul
sbb
ja
test
pop
jns
cli
cwtl
fs
shr
mov
arpl
arpl
outsl
adc
in
xor
scas
push
js
xor
inc
es
test
movb
jbe
cmp
xor
mov
mov
dec
xchg
lret
dec
sbb
mov
mov
iret
add
jne
cmc
dec
stc
xchg
clc
jne
jo
mov
insl
xor
xor
mov
mov
movsb
cmp
sub
stc
adc
and
gs
fldl
pop
push
dec
add
inc
mov
inc
or
std
outsl
nop
lods
es
mov
mov
sti
or
mov
outsl
rcr
ja
scas
and
in
scas
sub
dec
push
je
shrl
lret
xor
cmp
je
pusha
push
jecxz
inc
rorb
lods
loopne
inc
imul
jp
mov
xchg
xchg
sbb
push
testl
push
adc
push
test
xor
and
mov
dec
xor
ja
inc
pop
xor
jae
je
adc
clc
xor
mov
mov
push
data16
sti
cmp
xor
int3
pushf
cmp
xor
aam
inc
clc
push
ret
or
and
pop
stc
das
xchg
adc
sar
or
iret
cmc
xor
addr16
out
mov
dec
rcll
mov
cmp
dec
scas
leave
aam
int
jmp
xor
test
lock
xor
loopne
dec
daa
stos
or
xor
xlat
pop
jo
xchg
xor
adc
lcall
xor
loopne
out
pusha
cmp
mov
int3
dec
cld
inc
dec
insl
not
aaa
add
push
and
pop
dec
fld
outsb
adc
pop
xchg
roll
cli
cld
gs
jb
mov
jnp,pt
js
jae
int
xor
lcall
dec
clc
xor
xor
sub
imul
ja
cmp
push
mov
adc
xor
xor
imul
sbb
xchg
std
jbe
imul
ja
dec
movsb
cld
adc
xor
pusha
repz
push
xchg
and
cli
add
mov
sarb
cmp
mov
int3
cli
sti
xor
test
inc
enter
inc
cmp
sbb
outsb
push
mov
in
pop
fs
rcll
or
pop
out
mov
inc
jnp
jp
repz
cmp
jmp
lods
int3
xor
xor
fildl
xchg
push
pop
arpl
cli
popa
test
or
push
pushf
out
lret
je
jae
xor
int
lret
xor
enter
xor
add
pop
in
dec
or
xor
xlat
jg
xor
xor
adc
pop
adc
push
lret
ss
dec
in
push
int3
fstpl
jnp
das
or
aam
and
xor
ret
out
bound
movups
push
cmp
xor
mov
jp
js
mov
sbb
xor
aam
cli
add
inc
push
adc
enter
xor
dec
mov
aad
jle
ret
dec
push
push
adc
addb
int
mulb
popa
xor
fs
sti
mov
int3
cld
push
dec
lods
xchg
jnp
push
clc
inc
jnp
sbb
xor
push
notl
ja
adc
and
mov
repz
mov
js
jle
inc
push
ret
adc
xor
jg
enter
aad
rcr
xchg
stos
lret
pop
ss
pop
jp
push
imul
lret
in
xor
andb
xor
sbb
mov
and
mov
jo
mov
mov
jbe
cmpsb
ds
cmp
sub
mov
iret
jne
pop
mov
inc
loope,pt
enter
dec
loopne
sub
sub
dec
cmp
xor
push
jecxz
mov
aaa
loope
int
push
push
sti
cmp
popf
std
imul
les
or
ret
fpatan
in
bound
ss
test
enter
shlb
fsubs
stos
cmp
xchg
mov
pop
int
jne
int
push
out
xor
xor
cwtl
adc
and
inc
pop
aas
push
or
lock
shrb
stos
xchg
popf
or
mov
rorl
daa
adc
repz
das
pop
ss
bound
jnp
xor
mov
inc
dec
les
stos
adc
ja
mov
gs
cmc
ret
test
fnstenv
mov
std
cmp
add
xor
or
jmp
daa
lahf
and
je
sub
jl
jo
xor
push
std
iret
jno
incl
lret
mov
fidivrl
xor
inc
loope
or
lea
inc
nop
jne
and
mov
mov
jae
adc
push
enter
xor
push
pushf
mov
mov
cld
in
inc
rol
sub
cmp
push
jns
sbb
sbb
ret
je
xchg
sbbb
pop
mov
sbb
inc
pop
pop
out
xor
leave
add
lcall
or
cmpsl
rol
cmp
xchg
insl
jnp
sbb
ja
pop
sahf
jne
or
outsb
push
je
divw
adc
lcall
rcr
mov
aas
push
xor
xchg
lock
mov
aam
les
xchg
or
cmp
js
xor
addr16
arpl
fbstp
jo
out
push
push
adcb
pusha
cmp
jbe
dec
cmc
inc
xor
push
dec
ret
ror
roll
imul
out
inc
in
and
xchg
lods
xlat
or
xor
into
sub
cmp
je
mov
repz
xor
push
in
mov
jle
pop
pop
cmp
pop
adc
or
mov
cltd
sub
sub
dec
mov
xorl
sub
lahf
xor
pushf
int3
adc
jp
sbbb
and
sub
sbb
call
sbb
sub
ss
xor
inc
fs
jno
call
lcall
pushf
ss
xor
inc
add
xor
jnp
sub
decb
and
outsl
cmp
mov
fidivrl
jg
and
xchg
fsubrs
xor
push
inc
add
mov
imul
adcb
je
cmp
xor
push
pop
sub
mov
inc
data16
les
cmp
push
and
or
out
xor
dec
mov
subl
rclb
addr16
arpl
sub
insb
cmp
dec
xor
xchg
xchg
cs
aam
jb
nop
mov
pop
dec
mov
xchg
fdivl
sub
add
int3
jno
int
mov
ret
daa
in
cmp
data16
je
fiadds
xor
pushf
lods
mov
cmp
xor
int3
push
and
sub
sti
mov
jl
sarl
cmp
xchg
mov
mov
dec
gs
pop
loope
sbb
xor
std
or
test
ds
outsl
push
xor
mov
neg
inc
sbb
sub
mov
inc
scas
ss
pop
sbb
xor
into
je
cmp
into
push
aas
xlat
sti
cmp
ljmp
jno
mov
lcall
adc
cmpsb
xor
test
pushf
imul
xor
cmc
ja
test
std
mov
ds
lea
dec
cmp
je
adc
cmpsb
cli
push
lret
ja
imul
gs
inc
outsb
lods
jb
mov
or
push
test
xor
pop
out
hlt
stc
iret
pop
jb
movsb
ljmp
jg
xor
or
notb
cmp
jl
xchg
inc
scas
mov
add
sub
sbb
and
xor
push
xor
cli
jl
push
dec
les
sbb
jmp
ret
js
mov
rorl
add
jnp
xor
fwait
cmp
in
sbb
test
stos
push
adc
notb
xorb
int3
dec
add
xor
xlat
adc
incb
sbb
mov
xor
push
out
bound
adc
mov
dec
mov
or
or
mov
cmp
adc
addr16
je
testb
scas
outsl
icebp
pop
es
cmc
xor
and
jb
mov
ss
movsl
sub
jb
enter
pop
push
mov
ja
mov
pop
add
adc
in
in
sub
imul
xor
cmp
xor
imul
fwait
jb
pop
out
xor
addr16
add
xor
lods
dec
jno
cmp
lret
cmp
dec
sub
inc
movsl
adc
dec
push
inc
clc
cmp
pop
nop
add
dec
aaa
inc
mov
sti
dec
xor
sbb
sub
clc
xchg
jp
mov
dec
sti
negl
je
xchg
cli
xor
bound
sbb
mov
test
push
adc
inc
test
inc
lea
inc
mov
cs
fistps
popf
sahf
pop
lret
cmp
ss
add
fldcw
jns
idivl
arpl
aas
xor
scas
push
fdivl
f2xm1
mov
popa
adc
xor
ds
cmpb
jne
xor
xor
push
cli
mov
mov
push
lret
clc
xor
and
sbb
lods
inc
stos
ja
imul
shl
daa
and
inc
cmovb
mov
sub
jae
stos
push
cmc
ret
nop
sti
out
pop
iret
pop
inc
outsl
xor
adc
nop
pop
push
ss
ret
mov
pop
xchg
xor
enter
pop
xor
xor
jnp
jbe
push
xor
xor
mov
lock
lods
ds
push
mov
into
fwait
std
sbb
sbb
pop
movsl
mov
xchg
sub
inc
xor
and
in
cmp
jg
push
xor
cmp
inc
mov
xor
cmc
imull
data16
jb
outsl
fcompl
dec
iret
xor
ficoml
xchg
jae
loope
out
rcrb
je
clc
mov
or
sub
outsl
adc
mov
sub
xor
test
out
xor
data16
movsb
imul
push
push
xchg
rclb
xchg
mov
cmp
sub
bswap
push
jle
int3
outsl
mov
insl
pop
xchg
leave
jecxz
push
mov
xchg
lods
testb
xor
and
xor
nop
cli
cmpsl
adc
adc
imul
movsl
and
cmp
cmp
or
scas
sub
xchg
and
stos
lahf
sbb
movsb
out
xchg
repz
jb
pushf
or
adc
rorl
mov
inc
lret
sbb
cld
cmp
cmp
dec
clc
adc
pop
mov
clc
inc
or
pop
push
aas
in
pop
in
imull
inc
cmp
rcr
movlhps
popf
sub
in
push
jo
ror
dec
gs
xor
push
inc
sarb
mov
cmc
sub
sahf
les
xor
fisubrl
push
lahf
sti
xor
cwtl
ja
fsubrl
jnp
push
jge
xorl
gs
adc
jp
pop
inc
dec
cmp
jne
dec
into
mov
bound
test
scas
loopne
xor
push
mov
mov
in
je
shrl
jb
aas
mov
xor
dec
int
cmp
in
inc
test
push
inc
jmp
pop
or
mov
sbb
sbb
add
adc
iret
adc
pop
add
inc
xor
popf
aam
pop
inc
mov
xchg
decl
inc
jno
repnz
and
mov
xor
push
adc
je
jp
cmp
pop
addb
xor
xor
push
sbb
xchg
std
cltd
jb
lcall
jle
push
mov
arpl
ss
xor
and
pop
loope
sbb
mov
aaa
movsl
maskmovq
notl
cmp
lds
je
lahf
adc
xor
add
sub
push
xchg
into
fcomps
rolb
sbb
stos
push
mov
adc
xchg
ss
mov
sbb
dec
inc
inc
push
mov
sbb
jae
xchg
cmp
fadd
cmp
push
jns
cltd
push
lods
fldcw
dec
ja
cwtl
jmp
cltd
inc
jbe
aaa
mov
js
in
adc
mov
xchg
pop
sbbb
push
sub
inc
jo
stc
sbb
cmp
xor
jbe
xchg
loop
leave
cwtl
hlt
pop
inc
jns
mov
mov
cwtl
cmp
add
rcrb
dec
push
mov
pop
out
mov
sbb
sbb
push
pop
cmp
cltd
pop
mov
fsts
js
dec
cmp
gs
orb
lcall
insl
out
inc
cmp
mov
cmp
inc
adc
jnp
push
mov
mov
movsb
push
push
cwtl
jl
aas
repz
lcall
sub
out
cmc
xchg
fdivs
xor
mov
push
in
aad
mov
cmp
andb
fcomps
cmp
notl
pop
movsb
push
add
pop
imul
test
jl
leave
inc
inc
je
xor
js
mov
lret
pop
sbb
ret
jmp
or
pop
fmul
clc
and
sub
repz
lret
push
push
jns
dec
and
mov
mov
jns
mov
cltd
xchg
stc
inc
je
xchg
mov
js
cwtl
call
inc
dec
clc
xor
stc
mov
into
mov
fdivl
cmp
push
cmp
mov
push
push
out
cwtl
int3
mov
mov
adcb
pop
fld
stc
mov
cmp
xor
dec
sbb
cmp
mov
cmp
sbb
jbe
js
push
sbb
mov
pop
push
nop
sbb
addr16
out
dec
jb
mov
fnop
pop
js
cmp
push
pushf
sbb
and
mov
cwtl
adc
push
inc
mov
movsb
lds
inc
pop
cmc
fsts
into
mov
jmp
je
dec
cmp
dec
ljmp
sub
pop
cwtl
mov
pop
cmp
dec
sbbl
sbb
mov
pop
cwtl
cmp
mov
mov
mov
mov
xor
push
ret
call
dec
je
test
lahf
idivb
mov
enter
setns
ret
pop
sub
jo
inc
mov
mov
mov
ss
pop
xor
pop
js
sbb
pop
pop
inc
push
bound
cmpb
imul
cmp
inc
fcomp
dec
lods
jns
stc
pop
into
out
cs
rorl
cmp
pop
sbb
xchg
sub
sbb
mov
popa
pop
xor
test
ret
mov
push
in
mov
pop
and
scas
repz
xchg
sti
lcall
mov
pushf
pop
clc
out
out
repz
and
js
cmp
mov
rorb
js
clc
mov
adc
adcl
mov
dec
ja
inc
pop
rol
stos
mov
jns
and
fcoml
test
std
mov
mov
fdivrs
push
pop
pop
push
adc
or
mov
fldcw
in
adc
xlat
mov
inc
ret
xchg
rorb
cmp
pop
sub
lods
dec
mov
pop
cwtl
ret
inc
out
fcompl
xor
push
xchg
sub
btc
rcl
or
push
pushf
mov
bsf
and
mov
movsbw
stc
neg
mov
cmp
cmc
pushf
mov
mov
not
rcr
xor
lea
not
not
jmp
add
add
jmp
popa
push
sub
stos
sbb
xor
aas
stos
setae
xchg
adc
mov
arpl
xor
fs
mov
add
cmp
ja
stos
das
jp
jp
dec
xchg
xlat
push
xor
dec
jp
stc
mov
adc
adc
das
mov
aam
daa
xchg
jle
mov
inc
fwait
leave
xor
mov
not
push
out
ret
scas
push
rolb
dec
nop
inc
ret
movsl
mov
dec
out
shlb
imul
mov
or
sbb
xlat
pop
inc
jg
pop
pop
lahf
fbld
cmpl
int3
jle
aas
lahf
out
and
clc
es
cmc
stos
sbb
pop
jg
dec
lret
addr16
negl
xchg
cmc
lods
cltd
lret
pop
dec
aad
xchg
mov
in
rcrl
ds
pop
mov
inc
arpl
loope
push
ja
jno
out
andl
lahf
adc
lods
cmp
aam
fimull
dec
xchg
sub
mov
xchg
aad
in
outsb
mulb
pop
icebp
or
jl
outsb
arpl
insb
push
mov
enter
je
mulb
push
in
mov
mov
sub
mov
pop
mov
and
call
pushf
push
push
mov
lea
jne
jmp
not
bt
cmp
test
jmp
jne
pusha
push
pushf
stos
push
pushf
push
lea
jmp
add
pushf
push
pushf
pushf
lea
jmp
call
cld
mov
hlt
stos
sbb
lods
xor
leave
pop
shrl
lods
sbb
xchg
pop
mov
aas
xor
or
add
push
or
call
dec
mov
arpl
jne
sbb
adc
pop
ret
stos
adc
sahf
stc
fs
mov
ret
push
cltd
add
iret
and
arpl
add
cmp
lods
pop
jg
lcall
in
and
inc
ret
addr16
jmp
fwait
gs
shrl
xor
cli
jp
je
leave
mov
xor
sbb
mov
push
cmp
mov
xor
sub
pop
xlat
mov
or
dec
es
push
in
xchg
jp
loop
dec
sbb
inc
jge
push
outsb
test
fidivs
push
mov
int3
lret
test
push
mov
outsb
in
and
mov
pushf
pop
push
pop
pop
sub
jecxz
loop
leave
sub
add
or
sub
mov
add
stc
pop
add
push
hlt
lds
aas
ljmp
pop
pushf
movsb
add
pop
out
popa
mov
cwtl
pushf
test
rol
dec
inc
add
push
scas
push
mov
mov
cmp
rcll
cmp
or
push
mov
jmp
cmp
push
loop
pop
sbb
aas
jmp
mov
xor
sub
das
and
insl
pop
mov
scas
pop
aas
iret
pop
push
mov
xchg
mov
jg
mov
insl
adc
stos
sbb
pop
out
jle
dec
ljmp
pushf
adc
cmpsb
cmp
stos
fisttps
pushf
mov
daa
xchg
jnp
fidivrs
pop
push
loop
imul
mov
push
clc
jp
insb
xor
je
gs
push
adc
and
scas
cmpsb
aam
add
push
xchg
fstp
jbe
icebp
std
and
scas
cmp
jne
in
jo
pop
les
js
enter
int
sub
inc
shr
lcall
jbe
mov
dec
pop
jae
ret
adc
imul
dec
dec
or
clc
cmp
cmp
mov
pushf
lea
ja
pusha
inc
inc
setbe
not
inc
pushl
ror
xchg
daa
mov
and
rcl
mov
mov
jmp
cmpb
pusha
pushf
mov
lea
jmp
movl
add
insb
push
adc
add
sbb
inc
test
add
sbb
and
sbb
push
and
add
add
cmp
call
push
push
inc
pushf
pusha
pushf
mov
inc
pushf
lea
jmp
pushf
call
dec
call
pusha
pusha
lea
jne
cwtl
movb
mov
lahf
movzbw
push
bswap
jmp
adc
rcll
xor
mov
jge
orb
xor
mov
mov
push
ja
aad
add
ljmp
dec
popa
sarb
testb
and
cmc
ja
xorl
inc
mov
sti
sbb
imul
popf
cmc
enter
add
movl
cwtl
lea
lea
jmp
lea
jne
jmp
lea
ja
clc
pusha
bt
add
stc
or
movl
lea
je
stc
pusha
mov
cmc
cmp
mov
lea
jne
pusha
movb
movb
inc
call
mov
push
movzbl
movsbw
movsbw
cwtl
lea
jmp
call
pushl
xchg
btr
rcl
inc
mov
bt
bt
bt
sub
call
push
cmp
stos
sbb
mov
xchg
sub
jbe
lcall
insb
cld
mov
aam
fwait
or
jge
test
mov
sub
leave
xchg
in
mov
push
jbe
xor
cli
jbe
rep
pushf
fidivrl
mov
mov
hlt
pop
scas
pop
jl
or
aaa
or
cmp
add
out
cld
mov
push
xchg
xchg
mov
push
lea
mov
mov
movsbw
bswap
xchg
mov
movsbw
pushf
mov
pusha
mov
bswap
movzbw
jmp
add
mov
stos
sbb
leave
cmp
cltd
add
subl
push
ja
lock
push
sub
xor
sub
cmpsb
insb
outsl
ds
push
callw
in
les
or
pop
movsl
cld
or
add
pop
mov
bnd
sbb
lret
in
jne
xor
hlt
dec
outsb
idivl
imul
adcb
lret
jbe
shrb
bound
cmp
and
clc
add
mov
pushf
cmp
jmp
clc
push
add
call
pushf
call
test
cmp
push
pusha
cmp
mov
mov
lea
jb
cmc
cmp
pusha
pusha
push
lea
ja
test
call
lret
cli
xchg
stos
sbb
incl
cmp
cltd
or
imul
push
dec
jns
mov
add
in
pop
mov
pop
scas
popa
in
sbb
mov
int3
je
mov
scas
xchg
cs
or
cmp
sbb
mov
and
inc
std
aas
imul
into
dec
stos
or
ss
xchg
adc
inc
dec
lret
sbb
and
lods
or
lock
lods
in
cmp
or
pop
das
pop
mov
in
stos
sbb
fs
call
mov
test
stos
or
jp
iret
testb
sbb
push
xchg
jbe
bound
xor
mov
push
arpl
inc
and
or
push
add
not
call
pushf
mov
mov
movb
pushl
lea
jmp
mov
sbb
or
inc
lods
sbb
push
xchg
dec
adc
push
rorb
frstor
aaa
rorl
add
rcll
mov
mov
pop
mov
mov
cli
mov
add
cli
mov
enter
arpl
stc
mov
and
sti
movsl
fwait
or
hlt
outsb
push
and
push
clc
pop
negb
mov
inc
lahf
sbb
in
aad
mov
mov
hlt
and
enter
hlt
jmp
push
cmp
cmc
sub
jmp
lods
pusha
sub
clc
movb
cmp
not
pusha
clc
neg
clc
ror
test
shr
pushf
lea
je
jo
pushf
push
adc
pushf
pusha
lea
jmp
rol
mov
stc
jmp
clc
mov
ror
lea
jbe
pushf
lea
call
push
push
cmp
mov
jmp
lea
jb
pushf
bt
cmp
pushf
jmp
call
sbb
jb
stos
sbb
arpl
inc
mov
sbb
pusha
in
rol
xchg
sbb
jae
dec
xchg
sub
mov
adc
nop
pop
or
aas
scas
enter
fs
sub
adc
hlt
mov
and
shl
sbb
shll
xlat
cmp
pop
mov
jg
iret
pop
sbb
push
mov
insl
addl
mov
adc
test
xor
mov
fchs
xchg
popa
jge
gs
rorb
and
std
xchg
sub
mov
mov
sbb
icebp
mov
mov
in
mov
xchg
imul
inc
rolb
adc
fcmovnb
scas
fsubr
repnz
mov
mov
add
scas
push
insl
stc
xchg
cmp
js
cmp
sahf
pop
cmc
stc
inc
xchg
pop
mov
push
xchg
cs
lfs
cmp
pop
mov
pop
enter
sbb
or
adc
pop
push
jle
cmp
add
jmp
lea
jo
mov
pushf
push
pusha
lea
jmp
movl
push
pusha
pusha
pushf
lea
jmp
mov
movsbw
jmp
mov
jmp
pushf
pushf
movl
pusha
movl
call
mov
push
ljmp
and
push
mov
iret
xor
outsb
pop
xlat
jmp
mov
fadds
icebp
sbb
stos
or
dec
int
add
jmp
mov
xchg
mov
pop
jbe
or
dec
add
sub
shrl
aas
xchg
xor
inc
insb
jmp
js
adc
ret
lea
add
out
dec
scas
loop
data16
dec
xchg
into
push
sub
xor
mov
sub
insb
cmp
call
add
pushf
call
pushf
pusha
pushl
movw
movl
jmp
push
not
test
mov
sub
jle
neg
bt
test
test
cmc
mov
cmc
bt
pushf
call
jmp
pushf
lea
je
jmp
jmp
lea
call
pushf
lea
jmp
mov
sbb
stos
sbb
cmp
or
scas
cmp
push
insl
jae
mov
and
popf
test
add
mov
insl
mov
adc
movsb
push
jnp
fcomps
rorb
push
ja
sub
push
push
pop
dec
cmp
cs
adc
lods
xlat
aaa
lock
repnz
lcall
jge
aad
insl
mov
bound
aaa
in
data16
inc
pushf
mov
lea
call
push
adc
pushf
lea
call
jmp
push
mov
push
pushf
lea
ja
push
jmp
outsl
popf
in
stos
sbb
in
jno
movsl
xor
fldcw
and
xchg
adc
mov
pop
or
cmc
loopne
jne
push
aas
scas
xchg
jg
cli
mov
adc
add
pop
jb
push
es
mov
orb
inc
cmp
and
mov
mov
push
inc
push
mov
lods
push
aam
imul
in
xchg
xchg
stc
sbb
out
rolb
loop
ficompl
outsb
lcall
pop
add
sbb
push
pop
call
mov
call
and
dec
cmp
lods
or
scas
xchg
jnp
inc
ds
cmp
cmp
leave
add
pushf
pop
adc
add
lods
xchg
clc
jo
sub
mull
mov
cmp
daa
test
cmp
out
add
je
mov
aas
ja
roll
mov
xor
out
sbb
mov
out
pop
repnz
mov
shll
ja
cmc
fists
test
aaa
mov
add
and
outsb
imulb
in
cltd
xchg
dec
xchg
fwait
mov
lahf
aad
and
cmc
jns
xchg
mov
mov
gs
push
and
lods
push
arpl
sub
and
or
push
popf
and
push
rclb
jg
movsb
adc
aam
sahf
and
fwait
cmp
adc
pop
inc
mov
sub
xchg
mov
push
pop
frstor
xchg
pop
lahf
lret
push
mov
pop
adc
mov
orb
fistl
adc
and
push
test
adc
mov
in
xor
lea
lea
pushl
movl
call
jmp
mov
clc
test
pushf
pusha
pushf
movw
lea
je
pusha
call
pushl
rep
pusha
mov
pushf
lea
jmp
push
lea
call
cmp
stc
cmp
push
push
lea
jae
call
pushf
push
pushl
popl
mov
movb
pusha
push
pushl
ret
jb
push
push
mov
pushl
ret
or
test
stos
sbb
cmp
leave
inc
filds
jno
fwait
test
out
xchg
iret
shll
mov
mov
sbb
xchg
mov
or
stos
jnp
fadds
xchg
das
aam
jecxz
mov
out
sub
jne
or
xchg
and
jb
sub
add
xchg
bnd
cmpsl
inc
out
xor
mov
cmp
sub
cmp
cmp
leave
mov
insl
xor
lods
cs
sub
lcall
and
lahf
jle
addb
lret
out
ret
and
lea
lea
mov
pushf
mov
not
mov
bswap
lea
pop
push
push
pushl
pushl
ret
mov
sbb
push
aam
clc
pusha
shrb
nop
sub
xor
fsubl
imul
sub
jbe
push
mov
or
sti
inc
movsl
sbb
popa
scas
es
fimuls
xchg
sbb
inc
lahf
filds
xor
sti
sbb
gs
cwtl
pop
shl
ss
ss
in
sbb
daa
stos
aas
mov
aas
mov
xchg
add
sbb
jbe
pop
sahf
lock
enter
aaa
pop
jbe
cmp
cmc
xor
sub
aad
inc
popa
cmc
jne
mov
mulb
push
rclb
cwtl
shl
cmp
inc
fimull
aad
out
jbe
push
movl
pusha
mov
lea
jmp
movl
pusha
movl
lea
jmp
mov
pushf
in
sbb
into
pop
hlt
pop
xchg
movl
ds
lods
aad
int
les
sub
xor
mov
sub
mov
mov
mov
push
clc
loopne
cmp
loope
ja
add
sbb
ret
inc
mov
pop
mov
lea
cmpsb
sub
repz
adcb
outsl
or
pop
fisubs
sbb
das
scas
xor
leave
inc
shl
sti
jge
flds
or
mov
xchg
and
cwtl
push
test
sub
jecxz
sets
lock
icebp
push
xchg
fstps
es
cmpsb
es
xor
pop
mov
lret
sbb
xchg
aam
in
or
out
jbe
push
ficoms
mov
fstpl
add
cmovbe
jb
ja
jp
cmp
rorl
or
dec
ljmpw
jecxz
cs
rclb
subl
outsb
ljmp
jmp
lret
add
ljmp
pop
jo
mov
jl
xchg
ficoml
std
popa
sti
sahf
and
cmp
in
mov
mov
cmp
movsl
add
outsb
outsl
jl
nop
out
mov
dec
imul
fadds
pop
mov
adc
scas
rcrl
cmpsb
xchg
testb
loope
mov
cmp
cmpsl
out
ja
adc
ljmp
arpl
cli
pop
sub
xor
xchg
subb
push
stos
mov
gs
call
and
enter
cmp
in
enter
push
mov
xchg
das
mov
cli
lahf
push
scas
dec
js
mov
sub
dec
pop
mov
stc
test
or
and
cld
mov
inc
fidivrl
mov
xor
outsb
add
jno
xchg
jg
sti
aaa
jg
sub
jmp
pop
mov
xor
int
cmp
mov
jb
decl
incb
pushl
push
fistpll
pushf
fdivr
push
cmp
dec
mov
mov
inc
mov
jns
jne
sbb
and
push
mov
test
pop
add
inc
sub
fldcw
sbb
mov
mov
into
jae
gs
jbe
lods
jl
cmc
pop
jbe
push
stos
mov
add
pop
dec
pushf
or
cli
xchg
cmp
jo
or
out
stc
jns
or
xor
std
jg
jne
jne
adc
dec
mov
mov
pushl
dec
and
and
push
pusha
test
call
jmp
call
pushf
movl
pushl
movl
pushl
lea
jmp
ja
dec
add
bt
shl
mov
js
cmc
pusha
cmp
cmp
lea
jg
jb
cmc
cmp
pusha
call
bt
add
jmp
btc
bsr
not
mov
push
call
mov
pushf
mov
pushl
mov
pushl
push
pushl
ret
jle
aam
stos
sbb
cmp
imulb
fdivrs
mov
pusha
repnz
xchg
test
arpl
mov
dec
ljmp
pushf
adc
pop
add
mov
in
mov
pushl
mov
fs
jbe
addb
fmull
sbb
push
xchg
pop
add
xor
test
xor
sahf
xor
or
inc
push
fbstp
bound
iret
insb
jne
imul
addr16
lea
imul
mov
nop
pop
sbb
mov
jg
je
sbb
mov
jmp
out
jae
add
adc
adc
jmp
pop
test
je
out
jae
push
movsb
sub
xchg
push
loope
lret
divb
jg
xorl
arpl
xchg
jne
mov
mov
rcrb
xor
add
call
and
adc
mov
dec
cld
inc
jb
lcall
popa
lea
icebp
adc
adc
pop
lahf
jb
cmp
cmc
cmp
push
jmp
inc
pushf
dec
inc
xor
sar
add
dec
xchg
rcr
daa
mov
or
and
sbb
mov
cmc
cmc
test
mov
dec
dec
bswap
mov
movl
lea
jno
sub
push
call
testl
add
add
add
add
add
aas
adc
add
aas
adc
add
add
aas
adc
das
xchg
push
sbb
lret
lds
mov
cld
test
gs
mov
rolb
mov
push
mov
shr
pop
sbb
cmp
es
inc
inc
sbb
test
inc
sbb
lret
pop
sub
out
xor
icebp
sbb
fdivs
mov
jo
dec
jp
xchg
nop
add
pop
in
dec
xchg
in
or
faddl
jno
es
stos
cmc
decl
ret
std
aad
out
jns
into
add
in
negl
popf
mov
cmp
loope
fidivs
enter
mov
cmp
mov
lds
cmp
mov
repnz
sbb
or
jae
ja
xor
mov
sub
shll
stos
and
aas
ljmp
fistpll
loope
ja
sbb
mov
dec
int3
push
sbb
imul
cwtl
jmp
jge
push
push
xor
xor
insl
insb
roll
popa
push
ret
mov
cmp
jns
jns
int3
adc
or
and
push
or
jge
mov
xor
shrb
xor
es
repnz
mov
sub
mov
stos
je
or
and
sbb
dec
jge
je
add
push
and
cwtl
mov
sub
sti
mov
pop
repnz
mov
xchg
mov
cmp
xchg
gs
sbb
testb
popf
cld
jo
repz
dec
jnp
xor
sarb
sbb
int3
std
jbe
jmp
ss
jmp
test
push
ret
inc
lods
cwtl
inc
das
movl
push
jae
leave
aam
mov
lock
dec
fcompp
push
btcl
mov
and
leave
cs
mov
lods
dec
dec
jle
les
int3
xor
push
bound
mov
dec
daa
sub
xor
add
mov
in
cmp
loope
sbb
sub
mov
adc
lock
lds
cmp
loop
jmp
mov
dec
fstpl
cmc
xchg
cmp
lods
movswl
je
nop
dec
addb
outsl
sbb
push
cmpsl
andb
sbb
xchg
xchg
mov
add
or
icebp
sbb
outsl
adc
or
cmp
cmp
pop
scas
shlb
cmpsb
mov
dec
out
loope
push
imul
and
lret
repnz
nop
cwtl
movsl
mov
mov
mov
and
jecxz
jmp
mov
rcrl
aam
adc
xor
cmp
addl
subl
imul
push
ljmp
mov
lods
mov
jbe
les
mov
gs
jbe
and
pop
loope
sbb
sub
sub
scas
lret
test
or
pop
xlat
mov
cmpsl
fisttpll
dec
xchg
rcrl
xchg
pop
test
sbb
mov
inc
sbb
iret
out
cmpsl
int
push
sahf
push
pop
int
mov
inc
aad
das
aas
adc
cwtl
cli
adc
mov
cmc
ds
shlb
pushf
mov
cltd
mov
xchg
or
or
mov
sub
jno
dec
sbb
orb
pop
test
outsl
pop
xchg
cwtl
pop
les
jo
insl
pop
orl
mov
testb
fidivl
stc
jge
cmp
pop
sub
in
xchg
shrb
push
jecxz
push
sahf
jle
adc
rcrl
jae
test
push
hlt
pop
dec
pushf
and
xchg
pop
push
xor
and
arpl
ja
pop
je
std
dec
lea
aas
cmp
call
ret
mov
mov
inc
pusha
mov
sub
in
mov
push
movb
adc
add
xchg
addl
or
sub
xlat
scas
pop
sbb
cwtl
push
inc
fs
js
push
in
lods
out
out
mov
xlat
outsb
jnp
sti
cmp
add
xchg
in
cmc
inc
xor
and
sub
and
mov
push
xchg
cli
cmpsb
add
stos
cmp
dec
jo
push
dec
lcall
repnz
bnd
dec
clc
scas
pop
out
xchg
cmp
lods
push
sub
inc
cmp
jne
adc
fstl
xchg
mov
loop
adcl
jmp
adc
mov
add
push
repnz
lahf
pop
rorb
cwtl
xor
aaa
dec
mov
sub
mov
pop
lahf
and
or
shlb
mov
js
and
aas
xor
inc
aas
pop
sub
stc
inc
push
ljmp
add
scas
icebp
test
out
pop
mov
test
fcompl
xchg
pop
sub
fucomi
xor
and
movsl
or
pop
mov
in
out
xchg
sub
stc
push
enter
mov
shlb
js
sub
cmp
idivl
das
rorb
xchg
xor
adc
adc
adc
call
out
mov
mov
inc
imul
lcall
mov
dec
lret
xchg
lock
mov
mov
adcl
lods
bound
adc
imul
jo
in
mov
imul
rolb
dec
push
std
std
out
mov
cmpsb
push
or
push
fsts
inc
pop
pop
pop
fsub
push
and
add
out
aam
xchg
in
lods
xchg
test
outsl
cmp
test
sub
inc
mov
or
insb
jmp
insb
test
ficoml
jb
mov
outsb
pop
aad
addr16
pop
mov
push
outsl
das
aas
add
inc
dec
sbb
fisttpl
lods
das
xchg
mov
shll
cmp
imul
and
aas
cltd
insl
leave
fildll
mov
fildll
test
popa
lock
fdivl
lea
leave
jns
nop
ljmp
rcll
xchg
test
xchg
inc
mov
pushf
movb
pop
or
mov
jmp
test
sub
outsb
shlb
mov
mov
subb
iret
push
and
jl
fstpt
sbb
stos
jne
mov
and
jo
cltd
dec
popf
dec
test
pop
imull
fwait
xor
cld
lea
andb
ja
sub
fnstsw
pusha
es
lret
or
rcrl
call
push
je
scas
inc
xchg
xchg
mov
cmp
or
xchg
xor
outsb
sub
test
xchg
sbb
jp
lock
movsl
repz
aam
or
sbb
pop
lods
cmp
fdiv
sbb
lds
sbb
cwtl
and
adc
jno
repnz
mov
bound
mov
nop
lret
out
stos
mov
xchg
pop
pop
fiaddl
cmp
mov
stos
cli
xlat
or
mov
filds
xchg
cmp
clc
add
fldenv
in
cmp
cld
nop
or
jp
or
scas
bound
jbe
mov
cld
stc
jmp
jns
lahf
sbb
or
and
dec
cltd
movsb
insb
arpl
addr16
inc
mov
jno
cli
mov
xchg
mov
fs
xor
mov
jo
cmpsb
mov
loope
push
xor
dec
in
in
cmp
std
inc
pop
pop
out
int
push
pop
sbb
pop
rol
js
rcrb
mov
mov
xlat
shlb
gs
and
outsb
cmpsl
inc
addr16
or
fmull
inc
xchg
push
lret
mov
and
cmp
xchg
xchg
inc
cmpsb
popf
xor
inc
xor
and
stos
sti
mov
jnp
cmp
push
and
out
jns
test
xchg
cli
test
in
cmp
dec
les
stos
repnz
ljmp
xchg
mov
xchg
xor
xor
sti
xchg
xchg
in
mov
mov
lds
cld
movsl
cmp
jl
add
or
enter
scas
pushl
lods
xchg
loopne
xchg
dec
xchg
in
repz
loope
mov
int
jmp
in
push
cs
mov
mov
adc
or
imull
lret
pusha
or
xchg
adc
aas
cld
notl
mov
inc
js
ficompl
xchg
inc
popa
mov
scas
lret
pop
inc
outsl
push
in
mov
jmp
fsubl
gs
test
mov
imul
decb
jo
xor
jo
mov
filds
in
fimull
add
sub
mov
fwait
sbb
adc
iret
xchg
nop
add
add
push
mov
pop
mov
ljmp
mov
push
idivl
push
mov
jg
sub
movsl
int
mov
xor
fisttpl
inc
xchg
cmpsb
cmp
jnp,pn
xlat
cmp
xor
and
lods
or
sub
cmp
mov
sti
seto
loope
jns
insl
bound
and
andb
pop
jbe
movsl
test
fdivrs
or
lret
imul
stos
push
inc
cwtl
push
sbb
loopne
and
scas
sbb
xchg
push
mov
adc
imul
fadds
daa
add
or
and
and
loop
scas
pop
out
les
push
adc
mov
in
gs
aam
movsl
lahf
dec
adc
adc
inc
les
adc
mov
sbb
aad
movaps
in
out
cmp
stc
outsl
sti
mov
cmp
shll
xchg
or
dec
pusha
mov
fildl
add
dec
xchg
ljmp
sbb
cmp
addr16
in
pop
inc
mov
fwait
pop
cs
pop
insl
aam
and
inc
xchg
inc
lock
inc
inc
sbb
das
out
je
dec
sbb
xchg
mov
mov
adc
test
ljmp
dec
test
pop
cmp
cmp
sub
test
xlat
pusha
das
sbb
mov
add
enter
or
xchg
mov
lret
push
stos
push
jae
xchg
lcall
jne
xchg
dec
inc
popa
mov
rcll
lcall
aam
jmp
push
pop
ret
cwtl
mov
out
cli
xchg
scas
imul
sbb
and
push
lret
in
ror
rol
subb
xor
decl
cmp
sbb
inc
pusha
or
sbb
add
das
movsl
movsl
outsl
jmp
in
stos
mov
add
add
add
movb
adc
pushl
lea
jmp
xor
pusha
pushf
pusha
call
call
inc
jb
shrb
pop
out
or
dec
iret
pop
negl
push
pop
fcom
mov
ds
jbe
arpl
andb
push
xor
stos
inc
popa
jmp
pop
adcb
mov
cmp
jg
repz
fwait
dec
cwtl
mull
rorl
fistpl
popf
push
sub
stos
sbb
dec
mov
jmp
push
push
xor
dec
pop
push
inc
ret
daa
test
sbb
movsl
or
in
sbb
fldt
and
lret
test
test
cmp
icebp
adc
inc
or
sbbb
push
adc
cs
jne
stc
cmc
pop
repz
sbb
in
push
movq
test
repz
mov
push
cld
dec
jbe
jmp
jmp
pop
mov
xor
pop
adc
cs
jle
add
movl
add
insb
push
adc
add
sbb
inc
test
add
sbb
and
sbb
push
and
add
add
add
add
call
pushf
jmp
movw
movb
rep
pop
mov
mov
mov
movw
lea
jmp
bswap
mov
push
lea
jmp
rol
call
mov
inc
jmp
cmp
jmp
mov
movzbw
mov
push
mov
pushf
pushf
mov
movw
pusha
mov
pushl
ret
lea
jae
pushf
inc
pushf
pushf
mov
inc
mov
push
inc
not
pushf
push
mov
mov
pusha
pushf
lea
call
jmp
jmp
pusha
lea
ja
call
inc
stc
mov
stos
sbb
dec
ret
push
mov
icebp
adc
test
pop
icebp
mov
fbld
push
in
pop
fldenv
gs
add
cmp
pop
jbe
in
pusha
mov
mov
push
daa
mov
push
scas
xchg
adc
fistpl
pop
mov
xor
imull
pushl
call
popf
cpuid
nop
pusha
jmp
lea
jbe
shr
sub
call
in
loope
shrb
mov
cmpsb
push
test
jecxz
dec
lods
mov
pop
jecxz
mov
div
clc
jp
jl
inc
mov
sbb
fiadds
cmc
adc
popa
in
xor
test
stc
adc
inc
lret
rcr
nop
add
inc
movsl
adc
insl
pop
xor
mov
cmp
mov
xor
add
jnp
hlt
sub
xchg
adc
or
in
sub
mov
dec
mov
icebp
int
lods
cs
neg
arpl
mov
xor
mov
aaa
mov
push
ljmp
or
mov
cli
inc
je
repz
mov
inc
and
add
clc
and
jmp
aad
push
shld
setg
mov
shld
aaa
inc
bsf
sub
dec
rcr
push
or
sbb
push
cmp
inc
aaa
aaa
push
rol
push
xor
mov
test
pusha
pusha
test
pushf
call
sbb
scas
iret
stos
sbb
push
mov
data16
push
out
inc
mov
jno
test
mov
pop
icebp
mov
adc
push
lcall
add
push
sahf
out
xor
dec
dec
cmpsl
mov
movsl
lods
lock
cmp
aaa
xor
rcr
es
enter
inc
xchg
mov
xchg
mov
jb
push
into
mov
ret
imul
push
ja
add
xchg
mov
pop
cwtl
lahf
and
dec
aam
cmp
out
sub
mov
pop
and
test
fldt
popf
sbb
pop
lret
xlat
push
adc
repnz
scas
inc
dec
in
stc
aaa
insb
xchg
les
aad
and
inc
lock
adc
fimuls
stc
jecxz
repnz
mov
xor
jecxz
xchg
mov
xor
pop
movups
shlb
inc
insl
andb
cwtl
ret
dec
in
pop
xor
in
mov
cmp
dec
mov
lock
test
aaa
inc
call
mov
xlat
inc
mov
or
lds
sub
inc
lahf
dec
jnp
sub
sub
pop
and
pop
arpl
pop
in
cmp
push
lea
ja
dec
not
jmp
pusha
call
push
jmp
push
movl
mov
pushf
lea
jmp
jmp
add
dec
gs
popa
addr16
outsl
js
add
jmp
sub
pushf
pushl
movb
jmp
mov
sbb
repz
jae
ja
cwtl
cmp
add
mov
repz
adc
pop
icebp
mov
test
ds
dec
ret
sbb
lret
lcall
xor
add
mov
jp
stos
sbb
xor
inc
cmpsl
daa
mov
adc
pop
rolb
in
fldt
cmpl
mov
in
xor
push
adc
jne
gs
jle
xor
movsb
andnps
dec
int
lods
push
mov
push
mov
push
clc
sub
dec
mov
xor
mov
dec
ret
dec
out
mov
cwtl
or
pop
repnz
inc
cmp
add
jae
int
xor
xor
mov
or
je
pop
mov
rorl
jne
add
or
movsl
lcall
ja
insb
xor
ficoml
cmp
fisubrs
pushf
test
push
mov
sbb
lret
mov
loope
daa
lret
fwait
and
fsubrl
pop
inc
out
and
jl
negl
ljmp
add
out
xor
xor
or
shrb
jp
sahf
xchg
subl
sahf
fcomps
cmp
push
pusha
cmp
mov
mov
out
daa
dec
orb
lods
mov
pop
xchg
popa
aad
sub
call
xchg
fcomi
mov
test
iret
adc
testl
dec
jno
inc
sub
or
lret
stos
sbb
das
lahf
and
enter
adc
dec
fs
lds
scas
popa
fwait
int
jmp
cmc
insl
std
popa
loope
std
jno
sbb
shll
clc
cld
jo
decl
mov
xchg
jns
imul
loope
xor
pop
inc
loope
std
push
jae
or
rcrl
sti
inc
imul
push
xchg
or
mov
pop
cmp
pop
mov
jbe
xchg
or
cmp
ljmp
lcall
pop
sub
inc
cmp
stos
sbb
test
and
or
popf
sub
jo
cmc
stc
xchg
fbld
rcll
inc
test
push
jbe
daa
jge
cmp
and
dec
test
js
mov
sbb
mov
cmp
dec
jge
std
cmp
dec
cwtl
ret
pop
jp
adc
lea
pushf
jmp
jb
sbb
stos
sbb
xchg
das
xchg
jmp
pop
divl
test
scas
add
lret
adc
outsl
cmp
fisubrs
out
into
xor
jne
lret
daa
arpl
pop
fsubrl
inc
inc
rclb
leave
jns
inc
mov
stos
into
out
inc
push
repnz
inc
cmpsl
mov
xchg
in
leave
stos
sbb
call
push
mov
addr16
addb
mov
aas
cmp
out
dec
pop
rorb
push
popf
cmp
xor
inc
and
xchg
dec
out
into
inc
cli
sbb
jl
push
in
and
pop
cmc
cwtl
pop
cmpsl
in
lods
sub
js
push
mov
aam
and
jmp
shll
test
fldenv
dec
fidivs
daa
sub
mov
nop
mov
cmp
in
cmp
shrl
mov
or
pushf
mov
lea
lea
push
mov
mov
pushf
pusha
push
pushl
ret
jmp
mov
leave
stos
sbb
dec
fsubl
sub
xor
and
sub
xor
inc
fdivrl
add
insb
icebp
pop
adc
popf
xor
inc
mov
mov
dec
dec
adc
loop
orb
add
xor
xchg
outsl
rol
push
inc
adc
std
gs
bound
push
jp
mov
fbld
test
aad
in
jne
push
jecxz
pop
lahf
jecxz
inc
mov
adc
aas
inc
jno
into
repnz
or
stos
sbb
mov
shlb
ficompl
and
lret
movsl
adc
xchg
xchg
push
dec
mov
subl
popa
insl
int
and
adcb
pop
mov
sbb
or
lret
insl
jg
cwtl
in
jge
cmc
inc
dec
shr
mov
pushf
bt
cmpb
pushf
movb
lea
jmp
push
lea
call
lahf
push
sub
stos
sbb
sub
sub
sub
xor
mov
push
iret
xchg
jge
sahf
push
cs
push
icebp
mov
fstpl
testl
lods
test
jne
jmp
dec
mov
pop
push
xor
popf
or
lahf
dec
out
inc
push
out
mov
mov
push
int3
sbb
in
xor
or
sub
cwtl
les
popa
aas
add
push
mov
sbb
leave
add
sub
pop
fs
inc
sbb
test
mov
neg
bsf
sub
cmp
rol
mov
cmp
sub
bt
clc
jmp
jno
sbb
stos
sbb
inc
xlat
push
jecxz
mov
adc
adc
or
shll
int
cmpsl
sbb
addr16
arpl
dec
xlat
inc
adc
ds
jne
lods
in
inc
imul
sub
adc
dec
mov
andl
pop
pop
push
cmpsl
pushf
sbb
or
fwait
stos
sbb
ss
sahf
push
cli
jns
or
rcll
sub
movsl
shll
cmpsb
inc
les
test
pusha
aam
in
mov
xchg
or
mull
jge
mov
icebp
dec
mov
inc
cmpsb
mov
jp
ret
cwtl
adc
inc
cld
test
arpl
loopne
leave
imul
jbe
pop
xchg
movsl
aas
in
mov
sub
and
je
xchg
pop
iret
rep
dec
fistl
dec
negb
pop
xchg
jle
jo
push
sbb
xchg
sub
mov
add
enter
push
cs
stos
sbb
sbb
add
pop
ficomps
xchg
sub
sub
mov
mov
cwtl
xchg
bound
pushf
movsb
xor
lcall
pusha
int3
push
in
stos
xor
mov
mov
add
neg
dec
mov
int
movsl
lods
sub
or
mov
in
out
jmp
sahf
sbb
enter
cltd
cs
mov
cmp
push
cmp
aam
jbe
and
enter
rcrb
mov
xor
lea
je
sar
cmp
mov
stc
add
rcr
sbb
pusha
bt
mov
call
call
bt
neg
jmp
lea
ja
shl
sub
jae
or
cmp
add
neg
shr
movsbl
mov
pusha
mov
mov
pushf
test
cmp
pushf
repnz
mov
lea
jne
movsbw
bswap
movsbw
jmp
call
pushf
lea
ja
clc
xor
add
adc
add
and
mov
call
rol
mov
mull
aas
push
mov
mov
ret
inc
cmpsl
in
cmpl
inc
fldl
pop
adc
cli
xchg
mov
and
xchg
lea
push
xchg
subb
sbb
dec
mov
dec
and
xchg
or
xchg
js
enter
les
or
fwait
xor
bound
ret
pop
cmpsb
ljmp
sbb
pushf
pushf
pushl
ret
clc
jmp
int3
popf
pusha
lea
jo
push
pusha
movl
pushf
lea
jmp
pop
dec
xor
stos
sbb
aas
xlat
jae
push
jecxz
jecxz
out
push
jecxz
mov
xchg
adc
add
mov
jbe
xchg
pop
ljmp
jb
mov
popl
inc
add
push
inc
pop
sub
rcll
xchg
das
cltd
jbe
shll
mov
jns
cmc
cmp
cltd
in
cmp
mov
ss
sub
jns
les
dec
mov
out
das
aam
pop
ficoms
dec
jns
enter
dec
icebp
mov
out
arpl
push
mov
ss
sti
lock
jg
adcb
dec
and
arpl
jo
xchg
cmp
ja
test
mov
sub
insb
dec
xor
mov
mov
fldl2t
pushf
insb
icebp
pop
mov
mov
mov
pop
sbb
sbb
push
ret
dec
loopne
pop
mov
dec
inc
in
xchg
and
std
gs
sub
mov
add
mov
pop
lahf
or
xorl
cmp
mov
fs
leave
or
addr16
out
movsb
pop
cmpsl
xor
xlat
pop
sahf
add
jo
dec
cmp
xchg
xchg
cli
xchg
ljmp
stos
lret
mov
imul
mov
or
in
push
in
push
in
into
jae
mov
dec
loopne
mov
mov
jbe
jle
jb
push
jbe
mov
rcrb
adc
mov
add
popf
xchg
mov
mov
arpl
pop
adc
fildll
sub
jl
mov
shrb
sub
and
mov
adc
inc
jnp
sahf
cmp
push
ret
cwtl
sbb
add
add
in
push
in
in
xchg
adc
push
mov
jo
or
mov
rcll
dec
lds
sarl
sbb
rclb
sub
mov
push
mov
push
fisubrl
sbb
js
add
sar
jne
adc
jecxz
dec
ja
iret
out
inc
popl
mov
add
btc
mov
jmp
push
lock
std
std
lea
xchg
bound
and
addr16
and
pushf
mov
pop
shll
xor
ds
int3
lods
jge
stc
in
push
aam
push
les
loope
and
test
in
cltd
jno
ds
pop
sub
inc
xchg
in
xchg
push
push
mov
inc
adc
pop
ror
jmp
push
fmull
fs
jbe
sbb
stc
or
btc
mov
xor
btc
call
mov
movl
mov
call
push
push
jae
stos
sbb
jmp
repz
ljmp
ja
pop
out
or
xor
mov
xchg
addr16
jge
pop
add
out
cmp
fsubs
adc
push
mov
outsb
mov
jp,pt
add
es
jbe
out
roll
in
add
push
aad
fisttpll
inc
rcrl
lds
sub
mov
mov
ficoml
add
subb
jne
mov
shll
rorl
mov
dec
fildl
test
repz
xchg
pop
popa
lea
scas
addr16
pop
inc
std
sbb
mov
roll
hlt
dec
or
or
insl
fstpl
sub
dec
jl
push
jl
hlt
jns
sub
dec
stc
jmp
testb
pusha
add
cmpsl
pushf
pusha
popa
mov
jo
lock
data16
incb
sbb
push
ja
aas
scas
and
das
push
push
divl
jae
adc
xchg
mov
xchg
lea
jne
sar
xor
neg
mov
not
cmp
add
sbb
pushf
pushf
mov
mov
clc
test
mov
lea
je
push
call
jmp
dec
lret
sub
ljmp
aam
sub
insb
ljmp
dec
aam
sub
dec
ljmp
stos
or
dec
lret
sub
dec
lods
or
stos
or
dec
stos
mov
xor
fadds
push
or
stos
push
imul
jecxz
mov
ljmp
mov
jmp
inc
sub
rsqrtps
pop
mov
push
lock
out
jb
sub
iret
xor
fsubl
mov
mov
xor
mov
add
push
aas
xchg
js
adcb
xor
mov
mov
sub
cli
jmp
or
imul
movsb
rcrl
mov
and
outsl
jbe
cmp
dec
jno
push
movsl
imul
aaa
insl
dec
faddl
cmp
mov
shll
and
cmp
pushf
push
and
jno
aad
mov
loopne
pop
inc
fwait
add
cltd
xor
dec
fdiv
sbb
in
sti
insl
mov
jp
adc
pop
push
jae
and
outsb
xor
push
pusha
cld
shlb
xchg
mov
fadd
xor
inc
mov
cmc
mov
mov
mov
int3
jns
pop
sbb
mov
sub
cmp
sub
inc
pop
adc
inc
xlat
pop
jbe
ret
lods
loopne
pop
insb
movsl
adc
fdivl
push
xlat
mov
mov
mov
mull
xlat
jo
jl
fbld
pop
or
mov
push
ret
pop
ss
outsb
hlt
dec
push
fnstsw
add
push
sahf
sbb
fstenv
test
insl
sub
lcall
jle
and
shlb
or
add
mov
mov
arpl
cmp
dec
movsb
ret
sar
jp
sbb
andb
das
mov
ret
push
push
cli
xor
pop
sbb
mov
lret
pop
mov
jp
push
xor
add
sahf
aas
mov
aas
mov
ja
push
mov
repz
xor
rcll
mov
xor
jno
in
and
cld
push
popa
ret
push
xor
cmp
fstpl
mov
push
mov
adcb
pop
sub
mov
inc
pop
aam
sub
mov
xor
mov
inc
cli
jnp
xchg
inc
push
mov
hlt
mov
int
cs
mov
push
inc
pop
mov
insb
xor
in
sarb
ss
sub
leave
pop
ss
pop
mov
iret
pop
leave
cmp
pop
xor
xor
xor
adc
cmp
sub
dec
js
cli
xor
pop
out
cmp
imul
jp
mov
jns
mov
inc
xchg
cltd
jbe
xchg
mov
mov
push
mov
into
lret
outsl
xchg
pop
inc
mov
push
cmp
push
dec
aam
push
mov
xor
inc
mov
lret
lret
or
ss
das
ret
cmp
nop
push
xor
xlat
arpl
mov
test
push
les
xor
mov
cwtl
inc
pop
aas
cwtl
pop
mov
inc
fcoms
mov
inc
lret
push
dec
push
inc
lret
pop
dec
push
dec
inc
push
mov
pop
mov
mov
mov
lret
xor
rcrb
xor
repz
ja
fstpt
mov
dec
mov
xor
dec
int3
mov
or
aam
pop
jns
dec
mov
mov
fidivrl
mov
and
dec
scas
repnz
push
mov
push
jbe
aaa
mov
cmp
mov
inc
je
mov
cmp
fs
jbe
mov
outsb
push
xchg
mov
cmp
mov
je
jbe
push
mov
cmp
fs
inc
arpl
cmp
dec
push
dec
fs
jbe
jo
pop
inc
fbstp
cs
jo
cmp
mov
addr16
cmp
adc
xor
test
jb
inc
mov
sbb
dec
mov
into
aam
jp
insl
mov
mov
outsb
inc
dec
lds
shll
int3
hlt
mov
into
aad
divb
mov
fwait
cmp
mov
or
push
aas
inc
mov
cmp
xchg
cmp
lret
ds
vandps
adc
cmp
idivb
mov
dec
fidivrs
push
push
inc
mov
push
push
inc
ret
dec
leave
gs
inc
inc
push
arpl
pushf
les
mov
ret
inc
cmp
fwait
int
fists
push
mov
ror
mov
iret
dec
xor
mov
dec
les
xchg
xor
xor
push
lahf
into
xor
inc
push
lret
cmpsl
iret
inc
call
dec
cmpl
push
hlt
xor
imul
lret
mov
lods
or
push
cmp
ss
lock
inc
or
push
lret
push
rclb
dec
xor
jo
xor
mov
aas
mov
loop
aas
test
test
mov
leave
lock
inc
or
xor
lret
into
pop
bound
mov
pusha
mov
jo
pop
sbb
inc
mov
rclb
jle
xchg
mov
popl
mov
mov
inc
inc
movsl
aaa
push
mov
lret
idivb
dec
rcrb
push
push
mov
jno
sbb
push
enter
ja
leave
mov
mov
inc
or
push
mov
enter
lret
mov
cmp
lret
pop
lret
pop
dec
fistl
ret
push
push
xor
xor
icebp
push
push
movzbl
popa
inc
pop
lret
xchg
enter
mov
dec
xor
mov
dec
inc
xchg
sbb
dec
inc
cmp
cmp
jge
xchg
add
int3
cwtl
push
or
mov
mov
pop
push
push
shlb
inc
inc
mov
outsl
xchg
iret
pop
push
mov
pop
cwtl
ret
add
arpl
cli
mov
enter
pop
inc
je
push
inc
into
inc
mov
cmp
push
mov
push
jb
dec
stos
shll
mov
dec
sbb
fs
cmp
cmp
push
iret
jno
push
inc
inc
pop
adc
and
push
cmp
sub
popa
push
dec
sbb
cli
sbb
inc
dec
mov
fs
push
jge
xor
jbe
mov
aaa
arpl
inc
jmp
xor
dec
cmp
mov
dec
outsb
jne
pushf
stos
xor
push
xchg
pop
inc
inc
xor
and
dec
sahf
xor
jle
mov
inc
mov
mov
mov
add
ret
dec
push
cmp
dec
jno
jb
or
inc
xchg
cs
xor
mov
mov
cmp
mov
fs
jbe
movb
push
add
pop
mov
gs
inc
push
ret
je
mov
cmp
arpl
adcl
cmpsb
mov
fnsave
inc
mov
stos
sar
xor
sub
pop
inc
inc
xor
xor
mov
inc
shll
or
mov
push
pop
xor
mov
xor
sub
insb
cmpsb
mov
test
mov
mov
dec
lcall
lcall
lcall
pushaw
mov
xor
mov
imul
push
sarb
mov
ss
dec
or
in
xor
inc
fs
inc
pop
aas
mov
add
dec
aaa
mov
insl
mov
fimull
xor
jmp
xor
add
mov
dec
lret
inc
inc
into
mov
stos
ret
sbb
mov
inc
and
iret
imul
mov
lret
dec
inc
ror
pusha
dec
sub
xchg
xor
lret
mov
inc
add
mov
enter
mov
ret
xlat
lds
fidivl
inc
sar
jae
mov
lret
scas
xchg
push
cmc
cmp
jl
cmp
push
inc
aas
popa
shlb
add
loop
inc
fidivrs
ss
or
mov
mov
mov
cmc
push
fldl
jp
mov
pop
dec
push
lcall
lds
dec
aaa
cli
sbb
pushf
inc
popa
inc
inc
sub
xor
adc
mov
aas
test
dec
xor
mov
mov
sub
scas
push
xor
outsb
mov
or
push
pop
push
inc
dec
inc
fnstenv
push
sbb
and
inc
sub
push
dec
or
push
rclb
mov
push
xor
mov
mov
loopne
lds
mov
ret
int
testb
mov
pop
mov
mov
aaa
mov
mov
mov
mov
cmpl
rorl
dec
test
cwtl
xor
jbe
mov
cmp
mov
jp
stos
mov
mov
sub
push
inc
pop
mov
dec
sarb
dec
inc
mov
sarb
cmp
push
cmp
shll
cwtl
or
lahf
jl
rclb
or
je
xor
mov
inc
lods
inc
leave
idivb
adcb
mov
cmp
mov
lds
aad
mov
js
add
jne
jecxz
push
or
cmp
je
test
or
sbb
sub
jno
mov
jns
cmp
xor
outsb
mov
sub
jno
pop
or
inc
idivl
sbb
sbb
mov
jbe
cmp
or
inc
pop
inc
loopne
addb
sti
roll
mov
or
mov
push
rorb
out
fnsave
divl
fsts
xchg
dec
mov
mov
or
xor
jbe
ss
scas
je
shll
xlat
xor
aad
mov
mov
mov
into
adc
xchg
xchg
dec
sbb
pop
push
xor
pop
jmp
ret
lock
pop
cmp
cmc
aaa
shrb
test
cmp
mov
inc
das
out
int
cmp
lret
bound
dec
lods
movl
push
mov
rclb
ret
lock
gs
push
mov
mov
aas
push
mov
jle
push
shrb
dec
pop
cmp
mov
mov
mov
test
shl
pop
or
xor
lds
mov
dec
mov
aas
push
push
xor
jl
roll
xor
cmpsb
inc
cwtl
mov
cmp
dec
xchg
pop
mov
inc
push
push
xor
orb
sbb
xor
mov
pop
pop
xor
fistpll
pop
int
xor
in
bound
add
sub
pop
cmp
aam
xor
into
push
pop
mov
push
repnz
scas
cmp
les
inc
in
xor
lea
or
adc
cmp
sub
lahf
movsb
hlt
dec
dec
xchg
mov
mov
pop
mov
cmp
mov
lcall
lcall
mov
xchg
aad
shrl
sbb
shll
neg
iret
dec
int3
jno
xchg
aas
push
test
inc
idivb
mov
mov
push
mov
ret
fistl
arpl
mov
mov
xor
xchg
and
in
incb
cmp
in
mov
dec
arpl
adc
les
inc
js
mov
ret
ret
mov
divl
xorl
mov
mov
sarl
arpl
adc
mov
mov
dec
push
ss
mov
mov
or
aas
push
mov
into
fs
push
jbe
loopne
and
ds
pop
mov
shlb
nop
cmp
push
mov
inc
gs
xor
mov
mov
mov
popa
fwait
ror
inc
rcrl
aaa
add
inc
cmp
inc
inc
pop
cmp
xor
mov
ss
jecxz
mov
xor
inc
ss
or
mov
ret
xor
pop
add
repnz
ss
movsb
mov
leave
dec
mov
aas
lods
xor
insb
mov
insb
bound
xor
fisubl
mov
aaa
mov
jp
lret
cmp
pop
ret
pop
mov
aaa
mov
jp
dec
insb
cmp
nop
adc
inc
leave
dec
mov
dec
ficoml
jb
cltd
lea
mov
dec
setae
mov
rorb
int
repnz
inc
mov
or
cmp
xor
push
pop
dec
lret
jnp
dec
ja
add
push
cmp
mov
ret
shlb
popa
inc
gs
dec
push
lret
je
push
pop
rcl
push
aas
cmp
push
cmp
push
mov
mov
push
mov
gs
rcll
dec
mov
jl
lret
push
mov
add
push
fidivrl
push
inc
dec
push
inc
es
push
dec
push
ficoml
pusha
mov
nop
xchg
cmp
push
or
sarl
push
movl
fimull
inc
cwtl
int
push
hlt
push
mov
jle
divb
insb
je
xlat
jmp
popa
int
mov
xor
arpl
xor
ds
inc
out
dec
xchg
iret
mov
mov
mov
mov
lret
pop
push
addb
hlt
repnz
pminub
mov
cmp
pop
push
aaa
stc
rclb
gs
movsl
js
lret
pop
mov
mov
mov
cmpsb
mov
inc
loop
int
xorb
ret
lcall
ds
pop
out
insb
call
aad
mov
and
cmp
xchg
mov
or
dec
aaa
mov
xchg
cmp
outsl
xchg
push
add
mov
mov
int3
add
push
inc
cmp
repz
sti
outsb
and
sub
js
dec
lret
cmp
xchg
cmp
adc
push
mov
lcall
out
adc
cmp
clc
push
fmuls
pop
jb
shlb
mov
jae
push
xchg
cmp
lcall
xor
stos
cmp
xor
ljmp
adc
idivb
iret
push
cmp
repnz
test
xor
in
dec
out
push
mov
push
cld
cli
divb
cmp
dec
incl
mov
mov
sbb
sahf
adc
sub
mov
push
repnz
arpl
ret
rolb
int
mov
dec
inc
push
mov
add
stos
into
ja
hlt
lcall
cmp
jmp
and
testl
push
and
sub
push
add
cmp
mov
cmp
cmp
cmp
push
jmp
fs
push
adc
ret
xchg
pop
divb
cmp
pop
es
cli
or
mov
pop
test
mov
lcall
jle
inc
mov
mov
mov
imul
inc
js
subl
data16
mov
pushf
xor
mov
mov
inc
shll
int3
jbe
mov
stos
mov
js
mov
fiaddl
cwtl
dec
lret
cmpsl
adc
insb
test
cwtl
mov
enter
cwtl
mov
mov
push
int3
int
mov
rclb
mov
shll
xor
cwtl
pop
inc
pop
inc
cwtl
push
ret
push
mov
shlb
sti
mov
mov
testb
dec
push
dec
scas
jb
sub
addr16
in
ret
mov
and
mov
mov
xor
je
mov
cmp
pop
int3
popa
cmp
xchg
dec
js
dec
push
dec
mov
cmp
jb
xor
cmp
je
mov
cmp
fs
jbe
mov
je
mov
cmp
fs
jbe
xor
mov
arpl
je
mov
jl
push
je
xor
inc
xlat
lret
cwtl
rcrl
push
les
int
xchg
push
push
cmp
mov
mov
sbb
jae
cmp
xchg
xor
mov
in
adcl
fstpt
xor
jns
sarb
inc
cmpsl
xor
xor
jg
mov
push
mov
mov
xor
sub
inc
jge
inc
jns
xor
mov
insb
jecxz
mov
in
mov
ret
ljmp
sbb
lret
repz
xor
rcrb
push
dec
cwtl
push
dec
push
shrb
xor
xor
mov
inc
sub
dec
push
inc
std
fnstsw
bound
popa
mov
aas
mov
sarb
or
mov
stos
xor
pop
sub
mov
xchg
inc
int
std
int3
hlt
sarb
inc
push
pushf
dec
xor
push
mov
int3
aaa
cmp
dec
cmp
adc
pop
xchg
mov
leave
dec
pop
inc
xorl
and
pop
push
jo
clc
jb
dec
cwtl
xor
push
and
je
mov
into
adc
pop
push
xchg
in
cmpsb
push
jo
mov
mov
mov
push
pusha
inc
jnp
iret
dec
jge
int
mov
es
mov
loop
add
lds
push
or
inc
mov
xor
sbb
mov
scas
aaa
xor
clc
adc
bound
dec
adc
inc
ret
xor
arpl
jbe
pop
repnz
push
ss
mov
jbe
ss
mov
je
mov
cmp
xor
pusha
fs
cmp
mov
je
mov
cmp
out
int
push
jle
push
mov
mov
xor
mov
mov
bound
mov
iret
fwait
mov
push
repnz
and
cmp
dec
sub
mov
xor
or
inc
dec
lea
bound
push
int3
int
iret
lods
stos
dec
xor
lret
mov
push
cmp
xchg
mov
mov
push
les
mov
push
shrb
inc
push
scas
xor
push
pop
ret
pop
rclb
dec
mov
xor
xor
adc
cmp
push
dec
sub
dec
repz
int3
outsb
or
xor
adc
lea
dec
or
push
jo
dec
mov
lret
mov
xor
and
mov
and
mov
inc
les
inc
mov
push
inc
shrb
int3
out
inc
mov
push
inc
ret
lods
and
add
lcall
int3
cs
dec
shrl
insl
int
mov
jb
jbe
mov
xor
dec
hlt
mov
mov
mov
popl
pusha
dec
nop
popa
dec
add
in
inc
pop
ss
addl
inc
push
into
mov
cmp
pop
mov
mov
rcrb
shll
dec
mov
sub
xor
es
xchg
aaa
dec
test
stc
inc
fwait
ret
mov
fwait
push
mov
sub
mov
mov
push
inc
add
mov
lds
popf
cmp
cmp
enter
lret
sahf
mov
pop
lret
sarb
rol
dec
inc
lret
addr16
push
enter
aas
jb
dec
lods
cmp
push
inc
fs
inc
jbe
mov
cmpsb
mov
push
into
mov
test
push
arpl
mov
inc
push
sahf
aas
push
ss
jno
int
in
iret
ret
push
ret
ss
push
cmp
mov
pop
rorb
cwtl
xor
cwtl
pop
mov
cmp
push
mov
into
push
scas
adc
inc
push
ret
mov
mov
push
ss
xor
cmp
inc
mov
lret
push
xchg
lret
push
aaa
push
dec
fwait
mov
dec
lret
sarl
lret
ds
and
dec
cmp
mov
adc
xor
xor
ds
cmp
xlat
push
sahf
cmp
ss
mov
xor
push
sahf
test
inc
stos
xchg
xor
xor
cmp
fbld
mov
test
lea
mov
scas
mov
mov
mov
lcall
test
xlat
mov
sarb
mov
aad
mov
push
ss
sbb
mov
xor
gs
add
mov
or
xor
xor
aaa
xor
cmp
ljmp
push
inc
ret
divb
inc
mov
ljmp
pop
mov
xor
mov
sahf
mov
dec
lret
dec
pop
mov
pop
into
insl
mov
dec
pop
ss
xor
jno
dec
lret
adc
rol
push
shll
lret
dec
enter
xor
mov
test
imul
mov
pop
lret
sub
lret
lret
push
ror
inc
int3
aaa
sub
and
ljmp
cmp
test
adc
loopne
ret
lret
inc
outsl
add
jns
jnp
inc
mov
lahf
js
cmp
aas
stos
pop
enter
cmp
movsl
into
push
int
int3
cli
mov
push
mov
cli
dec
and
int3
lds
dec
lret
mov
inc
ds
pop
mov
xchg
mov
mov
rcrb
inc
mov
xor
inc
sub
dec
dec
pop
xor
mov
ret
xor
and
or
int3
xchg
aas
pop
inc
mov
shrl
ss
add
lret
pop
in
adc
pop
dec
jge
arpl
push
int3
fisttpl
data16
dec
scas
and
push
mov
xor
inc
push
pop
and
mov
mov
outsb
jns
aaa
outsl
mov
jo
mov
jno
mov
mov
mov
push
pop
mov
mov
dec
adc
add
xor
ja
mov
and
add
inc
mov
ja
add
popa
push
jo
lret
mov
mov
insb
mov
cmp
idivb
push
ret
adc
xchg
dec
pop
ja
dec
xor
xor
ds
jbe
sbb
mov
dec
ss
lcall
sub
shrl
dec
daa
dec
mov
hlt
cmp
dec
dec
lret
mov
mov
dec
loop
ret
out
filds
pop
push
pop
cmp
adc
jmp
js
xor
cmp
int
dec
mov
mov
pop
mov
int3
adc
xor
xchg
cmp
inc
push
xor
cmp
xor
xor
mov
jne
lods
into
addr16
mov
dec
into
ffree
dec
cmp
inc
bnd
ss
push
shl
dec
dec
sub
mov
test
mov
jl
aaa
dec
mov
cmp
cmp
je
dec
mov
inc
lcall
mov
test
jne
aaa
fldenv
inc
pop
adc
dec
add
out
je
or
push
mov
dec
fiaddl
js
pushf
push
push
mov
mov
pop
and
mov
inc
leave
rolb
jp
jo
cli
nop
aam
dec
jge
inc
lcall
fnstsw
lcall
dec
int
cmp
mov
mov
pop
dec
mov
xor
loop
mov
mov
mov
ja
mov
push
jge
test
or
xchg
push
dec
cmp
or
push
jns
ds
call
adcl
push
jg
mov
push
mov
gs
ds
inc
je
mov
cld
movsb
iret
mov
pop
adc
insb
inc
cli
mov
sbb
inc
dec
push
lret
outsl
aas
xor
int
mov
sub
imul
xchg
xor
mov
dec
inc
int
aas
pop
inc
shrl
and
mov
ret
mov
push
mov
cmp
dec
sub
dec
push
cmp
mov
je
jbe
mov
inc
jge
fs
lods
xor
push
lret
mov
sbb
outsl
push
cmp
pop
push
mov
fs
ret
je
mov
cmp
fs
jbe
mov
arpl
arpl
cmp
shlb
inc
inc
arpl
dec
mov
cmp
iret
jbe
ss
mov
je
mov
cmp
mov
je
mov
cmp
fs
jnp
dec
dec
aas
test
mov
shll
loopne
es
jge
es
dec
jno
ret
mov
jno
ret
sarb
lret
push
lds
cmp
pop
orb
push
dec
fcmove
adc
out
mov
cmp
mov
je
mov
cmp
fs
jbe
mov
je
mov
mov
mov
mov
or
xlat
cmp
ret
mov
inc
sub
xor
mov
dec
cmp
sarb
xor
scas
xor
push
xor
nop
or
xor
xor
cmp
ss
aaa
into
fwait
sbb
das
inc
pop
rdpmc
iret
jo
sahf
or
enter
bound
pusha
adc
xor
or
xor
pop
mov
shl
cmp
mov
pop
mov
mov
push
sub
mov
lret
das
aas
ror
xor
xor
xor
push
into
pop
jmp
insb
in
sbb
mov
cmp
cmp
sbb
mov
add
adc
xlat
push
cmp
push
mov
enter
mov
lret
cmp
adc
inc
aad
mov
and
push
jbe
jnp
cmpsb
mov
in
mov
in
mov
je
lret
mov
sbb
adc
sarb
push
cld
push
ds
cmp
scas
inc
movsb
push
mov
mov
mov
mov
mov
sub
ret
je
dec
mov
inc
ss
push
les
inc
or
inc
incb
enter
int
dec
je
xchg
pop
ret
and
xor
mov
pop
aaa
xor
cmpsb
mov
rorb
cmp
ds
mov
ret
enter
push
cmp
ret
lret
push
mov
inc
push
dec
dec
push
dec
mov
pop
gs
push
xor
dec
xor
mov
mov
fs
push
cld
int
mov
cmp
leave
pop
gs
pop
ss
int
cwtl
pop
mov
mov
fs
mov
je
mov
mov
cmp
mov
je
mov
cmp
fs
jbe
mov
jo
mov
fs
jbe
mov
je
mov
mov
push
aaa
mov
je
mov
mov
mov
push
int
fimull
repz
ret
mov
cmp
mov
dec
arpl
je
mov
cli
mov
imul
mov
enter
sarb
cmp
pop
inc
aaa
je
pop
cmpsb
mov
cmp
mov
les
mov
inc
je
testb
iret
push
inc
xor
je
mov
cmp
fs
ret
arpl
dec
mov
cmp
fs
jbe
clc
xor
mov
je
mov
cmp
fs
jbe
mov
je
mov
mov
fs
mov
shlb
cmp
fs
jbe
mov
je
push
mov
push
ss
mov
je
mov
cmp
fs
ja
inc
inc
push
dec
push
mov
je
jbe
aam
xor
jbe
mov
je
mov
cmp
dec
fwait
mov
stos
cmp
testl
mov
cld
xor
fdivs
inc
cltd
xor
xchg
xor
fbstp
fiaddl
sub
push
dec
xor
inc
dec
cmp
cmpsl
or
mov
ss
jb
sarb
ss
stc
pop
mov
mov
mov
mov
cld
mov
ret
fsubs
ss
mov
mov
and
cmp
or
xor
cli
jge
jmp
mov
jmp
mov
dec
dec
in
cmpsb
mov
out
add
aaa
lock
icebp
cmpsb
mov
shl
mov
push
xor
mov
arpl
je
out
inc
mov
ficoml
int3
dec
lds
xor
push
adc
xor
xchg
dec
cmp
or
es
inc
pop
adc
insb
lret
push
lret
fs
int
mov
rclb
cmp
fwait
imul
lret
jmp
fld
ljmp
mov
cwtl
shll
shl
mov
test
inc
xlat
mov
into
mov
xor
jp
dec
insb
lret
xchg
xchg
rclb
int
mov
hlt
aaa
pushf
into
rcrb
cmpl
mov
xor
insl
inc
xchg
cmc
xchg
mov
cmp
dec
mov
fwait
dec
dec
inc
repnz
and
fsubr
dec
mov
cmp
sarb
cmp
ss
mov
ljmp
inc
mov
mov
jl
xor
xchg
push
xchg
sbb
jbe
cwtl
mov
je
mov
cmp
inc
jnp
inc
adc
les
ds
aas
add
enter
inc
sbb
inc
cltd
ds
sbb
loop
lcall
rcr
cltd
inc
mov
leave
int
cld
push
or
xor
cmp
push
push
js
dec
mov
xor
out
jl
aaa
cmp
mov
xchg
insb
mov
xchg
xchg
add
test
xchg
push
cmp
dec
hlt
sbb
fidivl
pop
lret
and
cmp
pop
hlt
inc
xchg
movl
lret
sub
mov
lret
mov
xorb
xor
mov
inc
xor
mov
cmp
add
jno
add
ret
xchg
mov
mov
insl
dec
mov
fwait
sarb
ret
clc
push
sub
jle
insb
jno
movsb
mov
lret
imulb
std
ret
cmp
outsl
xor
inc
out
mov
rorb
sub
ds
rol
outsb
or
pop
rcll
jns
cmp
xchg
rol
push
lods
fidivl
xchg
xor
repnz
dec
das
int
sub
or
mov
in
mov
pop
cld
mull
lret
xor
rcr
cmp
jb
sbb
leave
xor
cmp
rclb
les
lcall
inc
out
int3
xor
aaa
sub
pop
dec
mov
cmp
lret
js
lret
repnz
adc
out
dec
mov
into
xor
or
pop
xor
mov
dec
jae
inc
mov
push
jae
fs
mov
xor
xor
adc
jbe
mov
je
mov
cmp
dec
sbb
mov
les
pushf
mov
les
pusha
mov
xchg
inc
cmp
mov
inc
mov
push
les
fstp
dec
insl
mov
cmp
dec
lret
mov
dec
add
pop
ds
cli
jae
adc
xchg
int
push
sbb
cmp
or
hlt
xchg
enter
xchg
clc
xchg
out
cli
cmp
pop
mov
sbb
push
ss
push
aaa
cld
mov
inc
push
cmp
fsubrp
push
mov
mov
push
insb
aad
mov
jg
adc
cmp
jnp
dec
pop
push
dec
in
xor
sti
test
adc
and
jnp
outsb
push
xchg
int
xchg
sub
mov
aaa
jecxz
xchg
inc
xor
jb
mov
xchg
lret
mov
inc
addr16
xchg
cmp
pop
mov
sbb
xchg
jp
and
adc
mov
mov
cld
adc
data16
adc
mov
lsl
inc
mov
icebp
outsb
aaa
fs
out
cmpsb
mov
je
xchg
repz
adc
mov
cmp
cwtl
shlb
cmp
clc
andl
add
mov
cli
push
jae
sarb
mov
cwtl
aam
jb
cli
push
sbb
mov
pop
fistpl
mov
inc
rcrl
fistps
pop
jle
xor
and
push
scas
in
das
je
rclb
gs
dec
and
lds
push
mov
mov
flds
push
and
leave
xchg
xor
fs
pop
inc
rol
repz
xor
ljmp
xchg
out
mov
push
aaa
xchg
cmp
bound
push
push
push
cli
ret
mov
inc
push
inc
gs
jmp
imul
js
fdiv
and
sbb
push
fidivl
sbb
dec
jl
push
push
xchg
mov
xor
out
xchg
mov
and
cmp
mov
mov
pop
out
jl
lcall
fwait
pop
sti
fidivrl
faddp
nop
adc
mov
repz
dec
flds
mov
jb
jo
je
idivb
dec
ret
push
push
rorb
pop
je
xor
ljmp
jmp
in
xor
mov
dec
lret
sbb
sub
lret
inc
imul
xor
dec
pop
xor
mov
hlt
push
outsl
push
int3
xor
nop
idivb
push
sbbl
jb
or
cmp
aam
divl
mov
and
jge
test
xor
nop
mov
arpl
in
js
and
in
xchg
jns
mov
xlat
xor
mov
aaa
out
mov
xchg
xchg
adc
inc
popf
push
fcmovb
xor
aas
xor
stos
xor
jp
pop
sahf
lahf
repz
pop
xorb
iret
pop
adc
sti
dec
mov
dec
fiaddl
aad
clc
aaa
xor
js
cwtl
subl
clc
push
jp
add
adc
mov
aad
mov
push
aas
int
shlb
xor
cltd
movsl
lods
inc
loop
mov
nop
adc
xor
imul
xchg
pop
pop
mov
popf
xor
mov
rclb
mov
add
sbb
sbb
int3
pop
out
jg
mov
mov
test
jle
xchg
xor
xor
xchg
add
andl
dec
xor
enter
adc
jg
pop
lea
js
cmp
enter
xlat
push
cmp
pop
cld
clc
xorb
mov
fs
gs
fstpl
shll
push
xchg
sbb
and
jns
adc
pop
rcrl
loop
shll
mov
inc
mov
test
lret
xchg
clc
iret
inc
adc
cmp
leave
faddp
inc
lret
dec
push
sarl
push
mov
xor
push
xor
xchg
sarl
jle
hlt
add
rol
into
dec
xchg
cmp
aaa
sbb
lret
inc
mov
dec
push
int
cmp
inc
jnp
pop
inc
dec
sub
mov
sti
mov
mov
shrb
push
loope
call
push
rorl
and
pusha
cmp
in
inc
push
pusha
mov
dec
js
dec
pop
cmp
sbb
mov
cmp
push
enter
cmp
inc
bound
cmp
fidivs
outsb
mov
in
inc
inc
add
int3
outsb
push
mov
dec
dec
push
ds
xor
iret
pop
mov
inc
aas
fiaddl
push
filds
mov
sbb
pop
xor
dec
push
xchg
mov
repnz
pushf
mov
iret
push
mov
ret
mov
pop
add
xor
int3
or
shll
adc
aas
pop
cmp
mov
sbb
lret
pop
inc
jo
arpl
mov
dec
mov
adc
ret
inc
mov
push
rcrb
push
mov
jae
inc
lahf
cmp
push
sbb
inc
shll
and
lahf
add
pop
xor
pop
dec
mov
mov
int3
sahf
lods
js
cs
mov
adc
mov
cmp
fs
jbe
fisubl
and
aas
adc
fistpll
mov
sti
inc
dec
mov
rclb
test
inc
add
dec
push
jo
jnp
imul
ror
out
or
int
iret
mov
mov
mov
sub
mov
mov
add
and
idivl
stos
cmp
dec
jge
stc
in
sti
mov
aaa
stos
loop
cmp
xchg
dec
fwait
adc
inc
inc
addr16
cld
jae
stos
iret
aam
bound
mov
aam
ret
cli
mov
add
lcall
cmp
lret
jmp
mov
sti
xchg
dec
xor
mov
pop
push
mov
les
lods
int
aaa
cmp
cli
fbstp
sub
pop
out
cmp
mov
mov
add
andl
push
ret
mov
mov
in
mov
lret
inc
rorl
rcll
sbb
xor
or
je
outsb
sub
mov
mov
pop
sarb
mov
cmp
iret
sbb
inc
pusha
nop
leave
stos
jb
mov
inc
lret
popf
shr
sbb
adc
push
cmp
and
lret
jle
int
xchg
rorl
cmp
xor
aaa
mov
xchg
mov
mov
mov
xor
mov
sbb
nop
xor
shlb
pusha
leave
inc
cmp
and
or
mov
shl
pop
push
aas
dec
ds
or
jbe
push
into
outsb
sbb
outsb
ret
loopne
inc
aas
into
mov
ss
daa
jbe
stos
mov
push
xchg
and
mov
mov
int3
mov
ljmp
pop
mov
cmp
dec
push
je
add
mov
aas
push
sbb
inc
sbb
call
leave
dec
out
push
mov
sbb
dec
out
std
push
xor
mov
push
movsb
mov
mov
and
sub
inc
inc
and
cmpsl
fs
orl
test
sti
ret
inc
das
imul
andb
mov
cmp
sarl
mov
mov
mov
ljmp
lret
pop
xchg
xor
je
cld
xlat
iret
sub
xor
push
push
stc
mov
ljmp
sbb
mov
cmp
out
hlt
xchg
dec
and
dec
mov
popa
xor
mov
inc
xor
adc
inc
cli
sbb
dec
mov
inc
add
mov
cmp
inc
lcall
dec
dec
inc
jne
pop
xor
mov
mov
sub
int3
dec
push
push
lret
xchg
xor
mov
ss
fs
inc
cwtl
ss
inc
sbb
out
xchg
pop
or
push
mov
dec
pop
ds
inc
inc
je
mov
outsb
xor
xchg
pop
ss
cli
pop
popa
pop
push
inc
mov
rcrl
ss
sub
les
ss
lret
jle
cmp
xchg
sbb
sub
dec
into
xor
xor
xchg
mov
mov
xchg
clc
mov
pop
mov
mov
lret
lret
roll
lcall
push
fiaddl
leave
push
jb
cmp
mov
out
inc
xchg
les
inc
dec
xlat
ret
pop
shll
lods
icebp
cmp
adc
xor
or
dec
cmp
mov
inc
bnd
add
je
hlt
mov
inc
cmp
mov
mov
add
jno
mov
inc
jp
cmpsb
adc
xor
inc
addr16
lods
leave
xor
jo
inc
mov
cmp
inc
cmp
ja
push
dec
aaa
and
xorl
lret
icebp
inc
repz
mov
adc
push
mov
je
mov
cmp
dec
pop
push
lods
adc
sbb
mov
sbb
iret
inc
cmp
outsl
jnp
xchg
and
popa
enter
mov
int
sar
ret
push
push
mov
mov
lret
in
dec
push
ljmp
dec
out
roll
inc
mov
lret
ds
push
aas
xor
rclb
mov
dec
mov
loop
leave
aas
dec
sbb
mov
lret
dec
ret
inc
add
faddp
inc
shlw
mov
mov
xchg
pop
jae
xchg
mov
inc
les
sbb
inc
repz
ljmp
sbb
int
push
ret
dec
pusha
mov
mov
lcall
xchg
les
push
dec
mov
lret
push
xchg
push
xor
sti
mov
cmp
dec
sbb
dec
or
popa
rolb
mov
xor
push
mov
sub
mov
sub
sarb
mov
ret
mov
mov
xchg
inc
lret
aaa
sbb
and
mov
fs
repnz
jle
arpl
insb
xor
out
scas
shlb
ja
inc
push
cmp
rcrb
rol
pop
jne
loope
insl
ret
adc
shll
pop
ret
xlat
gs
mov
jle
xor
and
mov
sbb
mov
xor
mov
bound
sahf
sub
dec
fidivs
cmc
push
push
add
je
jae
dec
les
aaa
push
dec
mov
or
cli
and
aas
push
lret
fs
dec
rolb
inc
ret
pop
into
xor
es
roll
imul
lret
inc
jge
mov
jb
mov
cmp
enter
mov
sbb
ds
in
into
xor
push
ds
mov
mov
inc
pop
mov
push
aaa
mov
inc
shlb
xlat
mov
sbb
inc
fmul
ret
cmp
fiadds
xor
into
xor
jo
adcl
ffreep
insl
inc
inc
mov
and
mov
dec
pop
rcr
cmc
sbb
dec
xor
push
repz
lds
sbb
push
mov
dec
mov
or
jbe
std
dec
inc
int3
ds
ret
mov
push
dec
inc
or
ret
xor
icebp
ret
xor
popf
cmp
inc
std
dec
jecxz
mov
add
stos
arpl
scas
mov
mov
push
sbb
shrl
out
dec
leave
jecxz
aaa
xchg
ss
aam
mov
pop
mov
cld
sbb
push
dec
mov
push
dec
ret
sub
push
mov
call
mov
fstp
testl
les
mov
dec
mov
mov
lcall
cld
inc
ds
dec
movsl
mov
je
jecxz
mov
ret
mov
fidivrl
dec
inc
mov
repz
fimull
jp
jo
cmp
xchg
jmp
stc
or
mov
xor
cld
enter
push
cmp
sub
fidivrl
jle
repz
push
xor
stos
inc
push
ljmp
je
iret
pop
and
mov
xor
aaa
dec
xchg
int3
add
xchg
lret
sub
mov
pushf
cmc
xor
je
cmp
les
add
ret
outsb
mov
mov
sub
mov
ret
and
dec
popf
inc
push
jno,pt
hlt
rcrb
inc
fwait
lret
push
dec
mov
arpl
je
xchg
pop
rol
inc
gs
lret
lahf
sub
inc
inc
or
int3
jnp
ss
mov
inc
or
dec
xlat
dec
pop
ljmp
dec
cmp
jmp
dec
jbe
mov
pop
ret
cmp
iret
jbe
push
loope
imul
inc
jae
ja
sub
pop
mov
push
mov
push
inc
mov
xor
pop
cmp
in
aaa
dec
or
je
movsl
cmp
dec
xchg
ret
ss
cmp
fildll
xchg
mov
in
int
repnz
push
cmp
inc
inc
in
sbb
inc
push
into
mov
into
add
inc
mov
pop
mov
inc
jne
cmp
mov
rolb
add
mov
aam
int3
mov
xchg
shrl
dec
je
push
add
mov
je
into
mov
xchg
xor
mov
xor
adc
ds
mov
adc
inc
cmp
dec
and
aas
inc
inc
sbb
inc
in
pop
xchg
cmc
xlat
mov
ljmp
xchg
cmc
push
inc
inc
ljmp
inc
lcall
test
xchg
cmc
mov
sub
cmp
aaa
mov
jo
aaa
dec
inc
into
xor
mov
add
rclb
inc
cmpb
adc
jno
xlat
imul
push
gs
pop
aad
push
rcll
push
push
mov
pop
push
cmpb
pop
mov
push
mov
xor
add
inc
int3
mov
aaa
inc
mov
and
movsl
or
std
xor
lods
push
mov
inc
movsl
iret
inc
call
sti
xor
movsl
jle
mov
cwtl
push
add
mov
std
lds
inc
add
sahf
inc
xchg
pop
repz
mov
sarb
inc
push
outsl
inc
dec
inc
jp
xchg
push
hlt
adc
hlt
push
aam
jbe
mov
in
hlt
inc
bound
add
je
mov
cmp
mov
sub
je
jbe
and
sbb
outsb
xlat
inc
ret
nop
int3
test
xchg
roll
dec
das
push
enter
jmp
movl
pusha
inc
mov
fwait
aas
inc
mov
rcll
and
adc
popa
lret
fwait
mov
sarb
and
pop
mov
pop
dec
mov
into
les
push
ret
leave
std
sbb
inc
into
inc
push
mov
movsb
rorb
inc
mov
sbb
insl
xchg
sub
dec
fnstsw
add
jnp
xchg
dec
outsb
mov
xchg
mov
jnp
mov
inc
jle
fildl
ss
dec
out
or
lret
inc
and
push
dec
ret
and
dec
into
mov
pop
ljmp
mov
rcrb
iret
xchg
push
inc
jp
dec
fsubr
dec
jle
out
mov
hlt
inc
xchg
mov
mov
inc
movb
mov
inc
jp
adc
cmp
and
ret
jae
imul
lds
adc
nop
cmp
inc
or
mov
je
aad
mov
mov
mov
mov
inc
cmp
xchg
pop
cmp
jae
mov
sbb
push
repz
cmpsl
xlat
aaa
xchg
mov
lds
dec
dec
aaa
aam
cmp
in
mov
stos
xor
dec
and
push
retw
inc
push
ret
push
push
js
aam
mov
xor
jb
inc
cmp
mov
pop
dec
insb
push
ss
push
ja
incl
mov
inc
jno
mov
rcrb
pop
mov
jecxz
mov
arpl
push
xor
aaa
or
repnz
or
mov
push
or
lahf
shll
adc
adc
lret
mov
in
inc
cmc
stc
push
ds
sub
out
mov
int3
movsb
cmpsb
dec
js
push
push
pop
push
mov
inc
mov
mov
mov
dec
jle
mov
inc
mov
aas
icebp
cmp
push
mov
cmp
dec
ret
inc
mov
xchg
lds
push
cmp
mov
push
dec
cmp
shlb
arpl
xor
enter
imul
inc
or
push
mov
mov
bound
aam
int
mov
dec
enter
mov
inc
jo
pop
ret
xor
stos
dec
xor
divb
cmp
jnp
int3
mov
xor
xchg
adc
mov
ret
inc
scas
inc
inc
inc
arpl
aas
xchg
cmp
xor
inc
les
cmp
jb
dec
add
mov
jne
cmp
mov
adc
out
lret
inc
adc
pushf
ret
jo
inc
xor
leave
jo
adc
push
das
jl
outsb
mov
xchg
in
leave
lock
cs
push
cmp
inc
mov
lret
into
sub
leave
lret
cmp
or
stos
leave
push
jb
movb
ud0
xor
xchg
add
dec
dec
lcall
int
push
push
jae
xchg
leave
cmp
jbe
mov
jae
xor
iret
ret
sti
cmpsl
stos
mov
and
ret
xor
mov
mov
mov
jne
mov
lods
lds
push
vcmpsd
jno
or
inc
lods
mov
stc
stos
mov
xchg
aaa
sarb
mov
into
popa
out
lret
inc
mov
dec
into
inc
xorb
xchg
dec
out
pop
xor
leave
sti
lods
lods
int3
xchg
shl
mov
imul
mov
add
dec
ret
sub
pop
xor
lods
cltd
mov
test
fcomi
inc
xchg
and
int
notb
xor
iret
ss
mov
inc
inc
jae
mov
push
mov
cmp
scas
inc
pop
pop
inc
jo
int3
andl
lret
dec
jle
test
rcll
aaa
jle
push
xor
adc
push
xor
cmc
xchg
mov
cmc
push
and
xorb
xlat
inc
mov
mov
adc
dec
arpl
lods
mov
into
mov
hlt
fcomi
cmp
into
sarb
dec
int3
mov
dec
enter
mov
xor
dec
repz
inc
test
hlt
pop
repz
dec
leave
das
cmp
push
test
mov
aam
aaa
mov
lods
into
je
enter
mov
lret
adc
inc
dec
enter
mov
add
fs
ljmp
gs
adc
mov
mov
cmpsb
sub
mov
or
je
mov
cmp
lahf
jbe
mov
je
mov
cmp
movsb
xchg
insl
rcrl
je
and
xchg
cmp
ds
inc
mov
mov
or
push
dec
and
cmpsb
int
cmp
call
rorb
mov
cmpsb
daa
shll
sbb
dec
push
pusha
dec
jnp
stos
mov
dec
add
je
xchg
cmp
lds
sub
jno
push
addl
mov
inc
out
dec
testl
out
mov
flds
adc
mov
inc
sub
aaa
or
sbb
lret
mov
cmp
dec
out
outsb
xor
jge
inc
push
fs
std
jl
inc
nop
inc
fidivs
xor
add
and
in
in
inc
mov
cld
sbb
ss
mov
iret
sbb
mov
mov
mov
jmp
int
inc
mov
dec
popf
inc
leave
dec
loop
int
mov
rol
jp
mov
call
je
mov
xor
xchg
sarl
inc
jp
ret
imul
scas
mov
inc
inc
mov
dec
mov
mov
lds
sarl
xchg
cmp
pusha
mov
cmp
mov
int
mov
iret
xorb
inc
lret
mov
xchg
mov
lret
ja
aam
push
cmp
imul
sar
dec
xor
xor
pop
leave
adc
or
jae
aad
jb
sub
cmp
push
xor
push
mov
sub
mov
mov
mov
adc
or
mov
push
arpl
mov
in
push
cmp
lret
aam
mov
xor
jo
sbb
sbb
ret
orl
cmp
cmp
ss
dec
or
and
pushf
push
mov
xchg
shll
pop
dec
je
adc
inc
cli
mov
xchg
ror
xlat
xor
ds
mov
pop
xchg
add
and
cmp
mov
ds
xchg
mov
jae
stos
cmp
mov
lret
push
std
xchg
dec
hlt
xor
in
mov
ds
cld
clc
cmp
sbb
mov
pop
mov
fsts
mov
xor
cmp
loop
cmp
pop
mov
pop
inc
shll
inc
lret
pop
les
dec
pop
je
mov
or
mov
std
pop
inc
mov
rorl
inc
iret
pop
ret
ss
dec
ss
sarb
xor
cli
add
pop
inc
fildl
jo
push
xor
inc
dec
sbb
pop
push
cmp
cmp
mov
dec
stc
mov
je
push
inc
cli
ret
ss
xor
xor
les
mov
mov
xchg
enter
cmp
xor
cmpl
mov
push
mov
mov
dec
fucomip
push
mov
ror
aam
mov
lret
imul
mov
hlt
ds
rcrb
or
in
cmc
xor
inc
shll
ret
push
pop
mov
ret
push
les
mov
mov
ds
cwtl
xor
iret
xor
jne
pop
inc
push
inc
js
push
cs
inc
cmp
mov
mov
inc
dec
push
int
dec
pop
push
loope
mov
sub
mov
dec
push
mov
incb
pop
hlt
mov
pop
xor
pop
inc
pop
fistpl
xor
fdivs
xor
xor
inc
adc
fisubs
jmp
loopne
and
cmp
lock
popa
jle
lcall
fdivp
popa
aas
fsub
mov
ss
mov
js
pop
mov
xchg
xor
or
xor
xor
aaa
pop
ljmp
cmp
lcall
sbb
cmp
scas
ret
mov
sbb
rol
xor
mov
hlt
cli
dec
aas
fiadds
test
les
ss
loope
arpl
and
jae
and
inc
mov
add
mov
les
fnstcw
mov
iret
push
movl
xor
stos
cld
shl
cmp
inc
aaa
jo
xchg
iret
mov
pop
jne
cmpsl
and
lods
insl
nop
jge
out
shlb
imul
xor
pop
iret
pop
sti
or
xor
push
into
push
out
lcall
mov
mov
fistps
dec
sbbb
pop
sti
xor
mov
out
arpl
cmp
push
inc
push
push
mov
call
add
popf
xor
add
xor
push
cmpsb
gs
cli
addr16
jb
test
and
xlat
mov
mov
add
add
add
push
sbb
inc
dec
je
out
gs
sub
rolb
lahf
or
divl
fnstenv
xor
jge
aaa
rcrb
inc
cmp
and
cmp
ss
inc
pop
mov
ss
dec
inc
js
cld
loopne
pop
test
cmpsb
pop
mov
push
clc
negl
mov
xchg
inc
push
ret
repnz
cmp
dec
xchg
ret
dec
rcll
les
pop
faddl
xchg
mov
enter
pop
push
sarb
or
sbb
movsb
in
cmp
js
jle
xchg
stc
inc
shlb
popa
lcall
cli
fs
mov
push
inc
mov
cwtl
xor
scas
inc
inc
pop
popa
mov
out
pop
push
cmp
mov
adc
aam
xchg
add
mov
push
ret
cmpsl
repz
roll
je
xor
pop
sarl
rol
cmp
pop
shlb
mov
fdivrl
pop
cwtl
push
test
mov
aam
xchg
je
adc
fstl
cmc
jp
rcrb
cwtl
mov
jecxz
lea
stos
adc
xor
sbb
mov
jae
mov
lds
sub
outsb
mov
xchg
cmp
ljmp
xor
inc
scas
inc
lods
outsb
mov
notl
repz
sbb
pop
push
push
loopne
inc
cmp
rclb
inc
inc
dec
xchg
xchg
dec
shlb
dec
aas
loopne
dec
or
or
dec
mov
cmp
leave
cmp
xchg
mov
mov
repz
fldt
ret
pop
jecxz
rclb
inc
pushf
inc
fiaddl
inc
inc
mov
arpl
aas
dec
inc
insb
dec
repz
enter
push
rcrb
mov
jae
xchg
iret
fs
sbb
dec
jae
and
outsl
inc
push
mov
inc
pushf
pop
aas
loopne
inc
jp
ljmp
dec
and
xchg
ljmp
aas
fwait
xor
pop
xor
test
pop
ret
mov
int3
mov
mov
inc
nop
cmpsl
ffree
in
push
xchg
lcall
js
dec
mov
xchg
jb
lcall
pop
xchg
dec
xchg
jbe
fistps
xor
outsb
mov
push
leave
fstpl
mov
inc
mov
lret
push
lds
push
ds
push
inc
push
pusha
lret
xchg
xchg
sbb
pop
push
pop
fcmovne
jbe
rcrl
xchg
push
xor
mov
mov
and
cmp
xor
xor
pop
cmp
jbe
push
loopne
pop
icebp
mov
mov
mov
les
sbb
popa
pop
xor
gs
or
ffreep
push
mov
jle
sbbb
dec
xor
outsb
mov
jnp
inc
pushf
xchg
adc
insb
dec
cmp
loopne
fs
push
mov
out
lcall
mov
push
aas
clc
aaa
mov
inc
mov
xor
jp
imul
cmp
mov
inc
sarb
test
xchg
jbe
mov
mov
jbe
mov
push
jle
push
cmp
inc
mov
imul
lret
add
int
sarb
xchg
jle
mov
mov
and
push
jle
jecxz
cmp
mov
mov
call
shrb
pop
add
gs
jne
lret
testb
pop
inc
pushf
cmpb
push
inc
lret
rol
std
mov
pop
sbb
enter
push
cmp
cmp
and
pop
adc
inc
cmp
dec
aas
dec
and
push
mov
test
gs
mov
push
clc
pop
dec
fidivrs
sarb
ds
into
leave
aas
lret
dec
nop
xchg
rclb
sbbl
dec
mov
mov
lret
mov
cs
pop
inc
cmp
xor
int
push
mov
xchg
mov
pushf
push
push
mov
mov
inc
dec
adc
sbb
pop
mov
filds
iret
jne
rorb
pop
nop
push
push
jb
sbb
mov
shlb
xor
cld
jle
jmp
imul
cmp
fiaddl
cmp
loopne
lret
push
mov
into
mov
ret
adc
sahf
mov
cmp
add
xor
xor
aaa
hlt
xchg
dec
ret
xor
pop
ss
je
mov
mov
ss
mov
xor
enter
jae
ja
or
pop
and
add
cmp
idivl
xor
mov
jmp
dec
pop
fnstsw
sbb
std
push
mov
jb
push
adc
xor
sbb
pusha
jae
popf
aaa
sbb
xor
cmc
repnz
dec
jnp
inc
mov
les
leave
mov
mov
push
mov
mov
out
aad
xor
push
cmp
mov
mov
fdivrl
mov
xchg
enter
cmp
add
mov
mov
push
xor
xor
pop
cmp
arpl
mov
xor
pop
scas
es
bound
test
fisttpl
pushl
xchg
fs
dec
jg
inc
and
xorl
pusha
mov
inc
pop
xor
cli
jle
je
mov
inc
imul
mov
iret
js
cmp
shlb
les
test
mov
push
movsb
lcall
jecxz
cwtl
testl
ja
push
inc
mov
outsb
lcall
outsb
mov
xorl
aam
cmp
push
ja
jb
add
enter
xor
xchg
add
pop
cmp
xchg
bound
cmp
cmp
pop
leave
repz
dec
orb
fcmovb
xor
ds
lret
dec
fwait
inc
push
inc
cmp
jp
push
inc
sar
ss
mov
jb
test
xor
dec
jnp
or
mov
es
mov
inc
push
movsb
dec
out
push
fbstp
repz
xor
sti
orl
pop
add
pop
mov
push
cmp
cld
pop
push
cmpb
inc
mov
push
cmp
mov
dec
dec
xchg
mov
push
in
sti
jae
ret
push
ret
xor
repz
inc
and
pop
pop
inc
pushf
into
or
bound
popa
pop
add
cmp
inc
outsl
xor
pop
xor
std
stc
mov
out
push
mov
outsl
insb
cmp
jecxz
cltd
sbb
jns
jo
sbb
jle
sbb
daa
xlat
inc
mov
lahf
je
dec
or
aaa
jle
add
test
leave
sahf
sti
in
inc
inc
test
jae
cmp
int3
dec
fwait
push
xor
or
mov
dec
adc
std
pushf
jb
lcall
ret
enter
cmp
cmp
cmp
cmp
pop
loopne
mov
dec
mov
es
sub
out
aam
inc
rclb
test
push
cmp
or
jecxz
mov
mov
push
and
arpl
jmp
sbb
call
fidivrs
adc
lods
cmp
int
call
fistpll
mov
pushf
inc
dec
push
loope
pop
dec
dec
jp
jle
js
xchg
stc
divl
mov
fistpll
mov
rcr
push
mov
lock
or
negb
imul
cmp
ss
mov
inc
mov
shll
pushf
sahf
or
divb
mov
in
xor
xor
jbe
sbb
dec
lea
int
mov
jo
rcrb
stos
pop
adc
push
fstpt
sti
pop
andb
push
xchg
or
cld
xchg
rorl
scas
jle
xor
inc
sti
cld
pop
pushf
mov
int3
and
push
imul
lds
popf
adc
mov
inc
stos
pushf
mov
ds
mov
aaa
jno
mov
rcl
sti
add
or
lcall
dec
pushf
xor
mov
adcb
mov
jbe
push
incl
popf
mov
and
popa
mov
add
data16
inc
push
mov
mov
pop
aad
aas
inc
inc
ret
out
sarb
xchg
idivb
hlt
cmpb
adcb
std
mov
pop
xor
sub
repz
or
sti
pop
mov
cmp
cmp
sbb
aas
repz
and
call
sti
idivb
mov
aaa
loopne
mov
xchg
push
xor
jle
cs
dec
in
mov
ja
jmp
xor
testb
movb
ss
mov
cmp
pop
mov
mov
mov
sub
cmp
mov
xor
idivb
sbb
outsb
dec
pop
jnp
mov
sti
dec
jp
inc
push
in
lcall
dec
sarb
out
push
hlt
jle
jbe
cmp
lret
dec
mov
jle
icebp
loop
repnz
mov
xor
fwait
mov
or
arpl
cmp
mov
mov
adc
cmp
lea
adc
inc
mov
nop
fisttpll
adc
pop
inc
dec
mov
hlt
push
mov
nop
loopne
push
shl
mov
std
popa
aam
ret
inc
inc
aaa
jge
ss
mov
je
clc
or
mov
aaa
je
push
jns
cmp
add
dec
push
mov
sbb
inc
adc
shl
ljmp
push
testb
inc
mov
pop
add
mov
ja
inc
ficomps
popf
cmp
mov
sbb
mov
aam
or
aad
pop
rcrb
mov
sti
dec
mov
add
mov
cwtl
mov
add
enter
andb
sarl
mov
and
gs
inc
inc
dec
insl
xor
mov
push
mov
jne
mov
jnp
mov
mov
jecxz
cmp
lea
ds
mov
stc
mov
mov
inc
mov
add
cmp
pusha
dec
adc
mov
pop
xchg
aam
pop
pop
movsb
loopne
jmp
jecxz
mov
lods
ds
mov
lods
and
inc
or
mov
stos
xorb
jl
cmp
jne
aas
sub
cmpsb
ret
sar
lahf
inc
sbb
lret
insl
xor
mov
jge
gs
jbe
inc
mov
inc
inc
inc
pusha
iret
adc
xchg
loop
xor
ret
and
int
mov
sbb
pop
dec
rcrl
mov
fs
xchg
sbb
mov
iret
call
add
lds
pusha
lret
push
mov
int3
sbb
xchg
inc
mov
in
xchg
mov
mov
mov
jnp
add
inc
and
xor
fwait
iret
mov
rcrb
int
push
lock
xor
mov
jnp
scas
fstps
mov
xchg
mov
mov
add
pop
sbb
dec
adcb
in
pop
mov
xlat
dec
insb
push
cmpsb
into
sub
mov
mov
rolb
cmpb
cmp
cwtl
enter
fsubl
in
icebp
ds
push
push
mov
xor
fbstp
hlt
frstor
jnp
js
shlb
mov
pop
mov
lahf
cmc
xor
xchg
push
inc
or
andl
or
sbb
lret
cmp
jmp
into
cmpl
test
xor
mov
xor
cmp
xor
mov
jne
dec
mov
sub
mov
push
movw
int
into
and
mov
lret
into
cmp
and
xor
loopne
jp
push
dec
cltd
lods
test
xor
push
jae
mov
js
pop
xchg
stc
outsl
dec
jo
push
dec
push
inc
sub
mov
orl
mov
sbb
fdivrs
ss
leave
inc
sbb
cmp
dec
pop
sahf
push
jnp
les
mov
mov
inc
popa
aam
pop
jle
and
dec
pop
ret
rolb
fisubl
xor
jns
iret
lret
push
add
aaa
adc
sub
out
dec
stos
cmp
adc
data16
cmpsl
and
push
jmp
stos
sbb
inc
xor
inc
xor
mov
or
dec
fildl
mov
sub
dec
push
pusha
and
lcall
xor
inc
fs
pop
mov
mov
scas
movsl
sbb
xor
mov
jnp
enter
xor
xchg
cmc
mov
lods
jbe
xor
mov
push
xor
xor
mov
jb
push
out
jecxz
dec
xor
dec
adc
lock
movsl
inc
add
mov
jecxz
mov
push
out
imul
jns
stc
out
dec
dec
in
sub
xchg
cli
sub
mov
faddp
in
xchg
mov
jmp
cmovns
mov
adc
jl
ret
sahf
xchg
rclb
movsl
pushf
loopne
sbb
inc
rorb
imul
and
ds
into
lods
sti
xor
mov
pushf
xor
dec
in
dec
xor
sarl
mov
icebp
loopne
add
sub
aaa
int
leave
inc
adc
out
cmpsl
sub
sti
xor
lods
sbb
xchg
subb
xchg
mov
cli
xor
mov
rorl
cmp
sub
mov
pop
xchg
mov
rcrb
lahf
xorb
out
cmp
cmc
mov
lcall
loope
sbb
dec
mov
gs
mov
pushf
inc
es
push
cmp
push
rolb
cli
jns
ss
loop
push
js
sbb
sarb
std
add
sbb
clc
xlat
xor
or
sar
dec
fidivrs
cld
xchg
pop
mov
notl
jbe
mov
mov
cmp
inc
nop
repnz
sti
inc
add
loop
jb
mov
test
dec
add
test
jecxz
mov
rcrb
jp
jge
lock
inc
dec
cmpsb
pop
cmpb
or
aam
out
cmp
sti
push
popa
mov
mov
mov
fs
mov
gs
jle
ss
inc
jle
pushf
fwait
sarl
jle
jnp
inc
repz
inc
call
cmp
mov
fwait
aaa
insb
test
inc
push
xor
jg
insb
xor
jl
ss
mov
mov
and
inc
inc
lret
cmp
repnz
mov
cmp
and
insb
enter
mov
pop
mov
xchg
aaa
mov
jne
mov
inc
xchg
std
mov
mov
mov
pushf
add
inc
aaa
dec
sbb
adc
xor
jbe
pusha
xorl
and
les
hlt
cli
js
sbb
xor
sahf
jb
pushf
xchg
mov
cmp
les
ss
popf
xor
std
push
negl
adc
and
pop
push
xor
push
sbb
ret
test
insb
fs
sub
jbe
mov
mov
lahf
data16
push
xor
faddp
out
mov
push
mov
ret
mov
pop
fucom
dec
insb
mov
cmp
imul
aaa
test
std
les
and
dec
jne
mov
ss
xor
xor
aad
inc
add
clc
jp
xor
outsl
jp
ret
aaa
jns
jl
popf
inc
jmp
ret
aaa
pop
cli
jl
repnz
mov
jp
jp
cli
mov
mov
mov
jle
mov
test
aas
cmp
movsl
mov
xchg
fwait
mov
lods
test
pop
and
and
jl
mov
mov
xchg
js
xor
dec
inc
mov
mov
pusha
jl
mov
out
jae
add
mov
add
xor
pop
sub
fwait
xor
mov
outsl
je,pt
jle
bound
inc
pushf
jae
mov
bound
and
mov
loopne
mov
pop
inc
ds
shl
dec
pushf
mov
pop
push
ret
xor
inc
pusha
sbb
jb
mov
dec
xor
fldl
std
popa
movsl
shll
inc
xor
mov
inc
je
out
jb
lahf
pop
xorb
mov
rcrl
dec
cmp
jne
jl
and
sbbb
push
data16
sbb
hlt
cli
repz
ss
rcll
hlt
ret
mov
jge
jle
mov
and
add
cmp
jge
ss
idivb
mov
pop
dec
in
inc
pop
mov
addr16
mov
rorb
cld
mov
mov
adc
pushf
sbb
insl
xchg
jb
adc
inc
mov
mov
dec
mov
jp
mov
inc
mov
push
shlb
xor
fld
jo
mov
sub
loop
es
mov
and
lret
mov
jmp
add
xor
lcall
iret
xor
mov
test
add
and
mov
outsl
data16
ljmp
dec
xor
push
rcrl
dec
xchg
cmc
aas
cltd
aam
mov
mov
je
ss
sar
hlt
and
mov
aaa
pop
sbb
cltd
bound
clc
jl
sbb
hlt
pop
jb
and
loopne
mov
out
mov
jbe
sbb
push
dec
enter
xor
dec
pop
popa
mov
int3
xor
or
lret
mov
aaa
insl
xor
xor
mov
mov
add
jmp
js
cmp
in
inc
insl
mov
fwait
mov
js
mov
inc
mov
iret
mov
cmc
push
ss
inc
sub
mov
cmp
pop
fwait
mov
mov
xchg
mov
inc
jl
fs
add
sbb
fidivs
psubsb
gs
ds
fidivs
push
xor
roll
lea
sub
adc
cmovns
mov
arpl
pop
dec
push
mov
mov
je
mov
fwait
jbe
cmp
dec
mov
pop
cmp
cwtl
xor
fsub
push
adcb
adc
add
push
int
mov
cmp
cmp
push
pop
mov
sti
xor
lret
pop
xchg
xor
inc
test
cltd
cmp
sti
fdiv
dec
repz
jae
mov
rorb
lods
pop
push
xlat
lahf
ret
dec
or
pusha
xchg
addb
add
test
fidivrs
mov
inc
mov
push
pop
sarl
fmuls
cmp
pop
xchg
jl
jg
sbb
xchg
ss
rol
dec
cs
pop
rorl
and
dec
cmp
mov
mov
mov
sti
sub
or
pop
xor
cmp
cmp
sbb
push
aaa
pushl
std
push
fnsave
xorb
ds
xchg
push
fiadds
sahf
outsb
aas
test
push
fidivs
mov
jge
dec
jp
xor
arpl
cmp
leave
cmp
cmp
sahf
jg
jle
cmc
mov
jl
mov
mov
stos
out
fmuls
pushf
cmp
push
cli
inc
cmp
xchg
jle
inc
jl
mov
dec
cmp
mov
inc
stos
cli
dec
inc
fwait
jno
inc
lcall
inc
push
cmp
jl
lahf
and
data16
inc
pop
inc
xor
es
pop
xor
xor
inc
stos
xor
push
jb
pop
lret
repnz
xlat
insl
cmp
mov
fs
mov
mov
mov
cmp
mov
xor
inc
jmp
test
cld
pop
cmp
cmp
js
fmuls
xor
in
jb
fidivs
xchg
xor
cli
mov
mov
sbb
xor
cmp
add
jnp
mov
mov
lcall
jae
cmp
lods
int3
mov
je
mov
enter
fbstp
ja
push
xor
xor
cmp
mov
lcall
leave
mov
mov
cmp
mov
xor
cwtl
jne
push
cmp
fwait
sarb
cwtl
or
cmp
nop
js
jbe
mov
addl
je
aaa
clc
jo
jnp
cmp
aas
cmp
loop
xor
mov
js
mov
shlb
and
pop
sbb
shlb
xchg
ss
fcmove
add
enter
add
stc
cmp
ret
xor
xchg
rolb
fs
mov
lcall
idivb
imul
cwtl
mov
scas
aad
test
pop
xchg
fidivrs
dec
fdivrs
pop
fiadds
aaa
pop
jmp
lds
inc
pop
lcall
cwtl
push
orl
dec
cmp
fisttpll
inc
xchg
pop
jge
inc
add
jno,pt
insb
pop
add
push
jl
ret
pop
push
xor
ret
jb
mov
xor
out
mov
jno
nop
negl
lds
xchg
jl
cli
les
push
aas
mov
into
sti
mov
mov
jae
push
push
cmp
out
cmpsb
jmp
lds
push
inc
dec
xor
mov
xlat
rcr
aam
xor
fistps
jle
xor
jae
jge
cmp
sbb
jae
xlat
inc
sbb
push
xor
cmp
adc
inc
cmp
call
fisttps
sbbb
ja
mov
jb
push
push
pop
push
je
sbb
js
jns
enter
hlt
jo
mov
shl
pop
jb
inc
jb
add
pop
xchg
pop
arpl
mov
aas
movsl
lret
dec
mov
pop
xor
lret
sarb
add
dec
xorb
push
sti
jb
jle
jl
mov
lret
cld
add
aas
loopne
rcrb
jl
cmp
dec
mov
shlb
and
jp
sti
mov
pop
xor
inc
cmp
cmp
sbb
sbb
in
mov
jne
mov
xor
mov
std
popa
or
aam
push
arpl
in
mov
ds
jle
mov
ds
xchg
jl
mov
jecxz
idivl
test
sti
jmp
cltd
mov
test
sti
jmp
cltd
mov
sub
cmp
xor
arpl
add
inc
adc
mov
mov
sahf
push
pop
sbb
add
xlat
std
add
out
xor
aaa
cltd
jb
mov
cmp
xorb
mov
jl
repnz
insl
dec
fwait
pop
into
cld
fdivrs
ss
mov
mov
popl
int
pop
mov
shlb
pop
inc
cmp
push
fwait
jl
dec
fs
xchg
sbb
aaa
xchg
fbld
pushf
loop
mov
movsl
mov
les
ret
out
xor
mov
dec
or
mov
imulb
push
cmp
xorl
cmp
dec
cmp
ret
or
sahf
lahf
aaa
sbb
cld
or
icebp
cmpsb
ds
xor
fcoml
mov
lret
ss
ljmp
fidivrl
cmp
repnz
pop
inc
insb
aaa
and
ss
nop
cmp
ss
test
mov
sbb
adcl
popa
mov
shll
es
rorl
cmp
mov
cmp
mov
lds
mov
jne
cld
cli
aas
out
leave
xor
xchg
je
push
shlb
hlt
xor
ret
xor
cmp
sahf
fmulp
cmp
sbb
cmp
cmp
push
cmp
xor
push
pop
into
arpl
inc
xor
hlt
cmp
inc
rorb
repz
push
pop
mov
push
roll
xor
in
add
or
cmp
pop
stc
mov
aaa
inc
cmp
inc
pusha
add
test
xor
sti
xchg
jl
je
jae
add
les
arpl
jb
or
and
jns
or
mov
and
xor
loope
les
out
cmp
pop
pop
ret
inc
aam
and
pop
xor
loop
add
into
mov
int3
cmp
ss
cmp
inc
jl
ret
adc
sti
pop
ret
out
bound
ss
lds
lcall
jb
jge
xor
mov
loope
push
sbb
sbb
push
push
pushf
mov
dec
cmc
and
repz
adc
ja
mov
adc
pop
push
pop
mov
and
add
or
jb
loope
inc
jl
pop
pop
incb
ret
filds
xor
push
lret
std
repnz
filds
ds
sub
es
xchg
push
inc
sahf
inc
mov
pop
mov
fistps
jns
icebp
inc
out
aaa
test
dec
cmc
add
inc
es
add
fiadds
xor
mov
dec
xor
mov
test
push
push
cmp
lds
out
push
cmp
lret
sbb
and
ds
add
and
ss
add
cld
lahf
mov
dec
mov
inc
mov
roll
dec
mov
mov
bound
jbe
adc
pop
jae
inc
dec
push
jb
xor
pop
arpl
jl
rolb
mov
xor
dec
sbb
xor
popf
pop
jl
sarb
jne
jecxz
nop
add
xor
jae
into
pushf
jl
mov
inc
dec
adc
das
bound
mov
js
push
pop
ja
bndstx
mov
daa
fbstp
xchg
int
sarb
jae
pop
sbb
lcall
push
adc
pusha
push
inc
mov
pop
xchg
sbb
cmpsl
popf
push
cld
imul
mov
lret
add
mov
mov
pop
jae
ret
jbe
or
and
ja
ret
in
jl
xorl
aas
outsb
mov
hlt
fstl
sbb
ret
int
xchg
inc
gs
xor
xor
and
insl
ret
cmpsl
in
cmp
cmp
cmp
pop
mov
mov
and
mov
cld
and
jb
push
mov
mov
dec
cmpsl
inc
outsl
mov
leave
mov
sub
or
pop
int3
ja
mov
out
cmp
out
pop
ficomps
mov
test
jnp
push
testl
adc
push
push
fwait
loopne
add
test
loopne
dec
dec
rcrb
ret
inc
push
cs
pop
icebp
aam
rcr
incl
aaa
cli
repnz
sarb
repnz
push
dec
sbb
jbe
inc
jb
sbb
mov
adc
sbb
fistpll
add
xor
cli
dec
mov
xorb
fwait
cmp
pushf
nop
mov
xlat
rorb
notb
xor
xor
lret
jp
enter
es
data16
bnd
int3
fiadds
test
sub
lds
pop
dec
aam
clc
jbe
pop
or
outsl
mov
inc
enter
inc
cmp
daa
xlat
loopne
dec
jg
mov
mov
cld
push
test
sbbb
js
sbb
pushf
or
popf
pop
dec
dec
fimull
in
jp
je
mov
cmp
gs
xor
leave
mov
sbb
sbb
daa
pop
mov
inc
pushf
pop
mov
adc
popa
or
ss
mov
movsl
fistpll
mov
into
aam
dec
enter
jle
ja
ss
pushf
cmp
jp
ffree
pop
loop
hlt
xlat
cmp
into
and
mov
inc
sbb
addr16
mov
add
add
popf
push
aas
pop
jmp
jl
ret
fs
cmp
dec
inc
xchg
and
loope
std
inc
xor
sub
push
inc
xor
std
lret
xor
inc
or
cld
pop
sbb
mov
inc
sub
dec
inc
xchg
movsl
jl
jns
mov
ficoms
jg
xchg
sarb
dec
daa
sbb
cmp
lahf
out
fimuls
xchg
inc
into
jl
ja
add
ja
cmp
xor
popf
out
mov
push
pushf
mov
push
pop
inc
jae
test
push
mov
test
dec
lds
xor
rclb
jecxz
jae
cmp
cmp
cmp
push
aad
dec
cmp
pop
sbb
pop
cmp
pop
or
mov
fnsave
pushf
xor
push
mov
xor
aam
mov
cmp
aam
cmp
fisubrs
cmp
ret
mov
and
scas
xor
xor
in
aaa
cmp
movsb
inc
in
and
add
xor
cmpsb
mov
cwtl
leave
mov
js
mov
mov
jecxz
push
mov
loop
insb
add
mov
adc
lret
jmp
testb
pop
aaa
inc
outsb
rcrb
or
in
aaa
mov
cld
imul
aaa
lcall
mov
aaa
out
scas
pop
dec
sbb
sti
mov
mov
xor
aaa
push
fnstsw
push
popa
jmp
jnp
mov
std
xchg
xchg
mov
inc
dec
jne
xor
pop
bound
loopne,pt
sti
inc
xchg
mov
out
aaa
xchg
inc
cmp
popa
inc
cmp
ret
aam
mov
popa
ja
ja
cmp
scas
pop
ss
aas
cli
cld
xchg
hlt
jg
dec
push
pop
and
ret
mov
aaa
sbb
repnz
lahf
ret
and
pop
vpunpcklbw
lock
cld
into
outsb
mov
ss
aas
mov
aas
dec
mov
fld
aas
addr16
mov
inc
inc
pop
lret
imul
jnp
in
cld
std
popa
xor
push
jne
cld
jnp
add
and
enter
into
movzbl
insl
mov
mov
jne
aaa
lret
inc
cmp
add
mov
aam
jbe
jg
mov
mov
test
cmp
shl
pop
inc
xchg
inc
jmp
xor
insb
inc
int3
push
mov
push
adc
sti
dec
cmp
popf
cmp
mov
out
sarl
cmp
inc
lcall
cmp
loopne
or
dec
mov
mov
movsl
lret
inc
push
movsb
xor
inc
mov
or
aaa
sti
fbld
mov
dec
cmp
and
std
dec
arpl
inc
mov
lret
mov
dec
cli
mov
fiadds
cli
mov
inc
mov
loop
xor
mov
xchg
and
or
cmp
push
je
aas
loope
sub
mov
inc
sarb
jl
fs
push
ss
gs
xor
cmp
jae
lds
pop
or
dec
adc
jns
aaa
mov
mov
xor
fs
ds
jp
ljmp
pop
jle
and
inc
shl
sbb
mov
mov
js,pt
sti
aam
out
ss
bound
mov
repz
jns
push
cmp
and
or
fs
inc
or
shll
mov
stos
cmp
pusha
cmp
andl
movsl
jl
lds
dec
mov
leave
xor
jae
cmpb
inc
add
inc
adc
out
mov
xchg
jp
mov
enter
inc
xchg
cmpl
fcomps
cmp
mov
inc
ret
addr16
imul
sub
cmpb
das
pop
enter
and
inc
mov
jae
inc
enter
jl
push
inc
lcall
pusha
test
or
mov
jb
push
xchg
lahf
clc
pusha
lds
adc
int3
and
push
daa
aas
jb
fucomip
and
adc
xchg
mov
xchg
fwait
cli
inc
add
mov
inc
and
ret
stc
jle
pushf
loop
scas
jmp
cld
in
mov
cs
les
pop
mov
mov
popf
jp
or
dec
mov
popf
negb
into
jp
jp
aam
xor
mov
push
mov
sbb
cmp
xor
push
mov
cmp
xchg
arpl
xchg
sub
mov
ds
push
ret
outsb
cmp
pop
shlb
bound
mov
insl
cmp
mov
mov
lret
fs
mov
fdivrl
mov
std
sbb
inc
loop
call
mov
dec
push
inc
sbb
outsb
ja
decb
mov
mov
lahf
ds
sbb
dec
mov
xchg
arpl
popa
jb
cmp
fidivl
mov
cmp
mov
mov
mov
mov
negl
popa
ja
mov
inc
ds
roll
xor
mov
inc
inc
sti
jl
mov
xor
inc
test
mov
jnp
sbb
int3
jbe
test
dec
lret
cld
push
fimuls
pop
xor
xor
mov
xchg
lds
pop
roll
incl
out
jae
jbe
jae
sbb
and
dec
mov
mov
sahf
push
xor
lahf
jle
cld
pop
cmp
jns
cmpsb
mov
jge
sub
jne
ja
push
cmp
insb
lret
paddsw
cmp
push
xor
cmp
gs
in
or
negl
or
xor
mov
push
js
rolb
sbb
arpl
mov
cld
jge
mov
test
inc
daa
fidivrs
ret
les
fmulp
mov
loopne
les
xchg
es
xchg
xor
mov
mov
sti
xchg
les
bound
lahf
adc
mov
mov
lods
sbb
leave
cmp
adc
mov
jle
pop
xor
mov
lret
xor
xchg
test
idivb
mov
jne
dec
cmp
cmp
hlt
sti
mov
mov
jne
push
mov
add
and
mov
push
outsl
ss
idivb
es
mov
aaa
out
outsl
insb
or
sub
cmp
mov
sbb
cmp
dec
pop
sbb
xor
sahf
js
lds
push
ss
mov
fbstp
cmp
add
arpl
pop
pushf
dec
aam
jnp
cmp
jnp
mov
pop
mov
dec
jb
push
sbb
xor
cmp
and
sbb
test
sub
jl
lret
mov
je
xor
fnstenv
nop
pusha
cmpl
es
stc
ficoms
cmp
jnp
jle
in
daa
dec
pusha
repz
mov
loop
push
or
pcmpeqw
pop
fidivrs
pop
mov
mov
gs
les
add
ret
mov
cli
ss
mov
jnp
jno
pop
out
mov
sbb
ret
jl,pn
mov
aaa
xchg
mov
je
rorl
lret
mov
aaa
lret
pop
dec
and
loopne
loope
pop
and
push
cmpsl
mov
hlt
test
fcmovb
mov
push
push
repz
jbe
xchg
or
jb
rcl
ret
or
test
mov
cwtl
dec
xchg
aam
ficoml
pop
outsb
sbb
jg
shlb
fidivs
mov
dec
push
sahf
xchg
bound
stc
shll
js
fnsave
mov
cmp
cmp
stc
adc
xchg
sbb
mov
mov
repnz
mov
aas
push
push
cmp
push
cmp
addl
dec
loop
and
dec
inc
pop
cs
ficompl
icebp
cmp
lds
repnz
pop
xor
aad
push
push
dec
mov
mov
notl
je
mov
push
inc
pop
sbb
cmp
xchg
adc
cmp
inc
cmp
push
jbe
dec
cwtl
cmpl
xor
ret
cmp
cmp
mov
je
add
inc
xchg
jae
dec
cltd
cwtl
pop
adc
cmp
ret
ss
sub
cmp
sti
dec
mov
mov
aas
cmp
cmp
pushf
and
cmp
popa
flds
repz
jbe
sub
mov
enter
inc
jae
icebp
arpl
jg
sbbb
push
cmp
pop
loopne
inc
mov
lods
mulb
pop
xor
pop
dec
jp
lcall
mov
xor
out
dec
jns
bound
cwtl
pop
lahf
mov
xor
dec
mul
cmp
mov
aam
sbb
test
xor
cmp
mov
ja
mov
inc
pop
mov
js
lret
xlat
sbb
inc
ret
aad
or
popf
cmp
mov
mov
inc
xor
int3
inc
rorl
dec
mov
fldl
inc
shl
inc
dec
adc
mov
push
cwtl
les
inc
enter
xor
in
inc
ds
xchg
rcl
icebp
mov
repnz
adc
ss
dec
cwtl
imul
js
out
dec
lds
cmp
inc
mov
push
add
outsb
movsb
ret
cmp
loopne
mov
imul
inc
int3
pushf
in
sub
fisttpll
dec
sti
ret
pushf
and
cmp
jp
test
aas
mull
mov
or
xchg
adc
or
dec
mov
jae
jge
adc
mov
push
mov
test
adc
add
xchg
out
cmp
dec
mov
inc
cmpsl
mov
xchg
adc
iret
aaa
cwtl
jecxz
xor
subl
adc
mov
lods
lret
xchg
xor
cmpl
add
push
ss
inc
fists
sarl
inc
je
push
aad
inc
mov
inc
jae
stc
inc
fnstenv
and
cmc
loopne
clc
jecxz
inc
pop
mov
pop
dec
jns
ss
pop
es
ja
insl
jp
loopne
ss
add
xlat
jl
inc
xchg
mov
mov
shll
subb
hlt
mov
mov
cltd
mov
cmp
sub
cmp
test
test
inc
inc
jae
inc
dec
jne
inc
inc
mov
inc
cmp
aam
inc
adc
lret
or
aaa
pop
pop
dec
xor
daa
jp
sahf
pop
inc
adc
dec
mov
or
push
cmp
mov
jae
jl
inc
mov
icebp
fadds
pop
gs
repnz
add
dec
pop
loop
aaa
inc
dec
xor
cmp
pop
mov
jne
jbe
fwait
std
orb
sahf
les
dec
xchg
ja
cs
lret
rcll
add
mov
in
aas
push
add
add
lds
pop
popa
pop
js,pt
and
xchg
mov
push
dec
adcb
add
mov
out
cmc
cmp
mov
mov
add
mov
dec
in
stos
mov
mov
jl
ss
adc
push
jno,pt
jmp
mull
pusha
decl
cmp
mov
dec
aaa
mov
ds
fs
push
int3
pop
mov
sbb
inc
mov
fadd
daa
mov
push
xrelease
sbb
icebp
je
adc
ds
enter
mov
das
out
push
mov
in
xor
jns
adc
fnstenv
pop
mov
xchg
testl
pop
hlt
xor
mov
enter
adc
int3
mov
jae
lea
test
xor
pop
loop
xor
inc
push
in
jb
inc
add
popa
mov
out
cmp
mov
jg
pop
sti
ds
mov
outsl
xchg
pushf
xor
les
dec
fs
jecxz
lea
paddsw
hlt
aad
pop
mov
add
fstp
mov
in
cmp
xchg
jecxz
das
lea
xor
lock
loop
dec
pmaxub
jge
xor
adc
xor
jmp
push
jle
lret
or
cmp
ss
gs
addr16
jp
xchg
std
icebp
add
xor
cmpsb
pcmpgtd
into
stos
pusha
pop
loopne
cmp
in
cmp
enter
or
shll
push
inc
dec
mov
xchg
loopne
xor
cmp
mov
add
lock
xor
xor
dec
movsb
gs
cmp
addb
sbb
int3
mov
xchg
in
lock
dec
sbb
mov
rcrb
pusha
inc
mov
cmp
stc
push
and
movsb
lahf
pop
push
bound
adc
xor
imul
xor
push
das
xchg
jl
test
fistps
call
or
sbb
and
lcall
pop
pusha
ss
cmp
addl
inc
aam
xlat
cwtl
out
pusha
or
inc
adc
adc
fistpll
inc
mov
out
push
jno
ficompl
sub
sarl
inc
inc
dec
hlt
or
mov
xor
pop
fstpl
mov
ja
add
jg
call
adc
pop
in
hlt
cmp
loop
push
dec
and
pushf
lods
push
xor
in
xchg
inc
mov
push
ljmp
ss
cmp
pop
dec
and
pop
enter
add
mov
cmp
add
pop
pop
enter
shlb
loop
pop
sarb
mov
cmp
xchg
arpl
fdivs
dec
shll
inc
push
sbb
pop
jg
testb
cld
inc
mov
cmp
mov
dec
pop
mov
bound
sbb
push
sbb
scas
push
callw
sbb
mov
pop
xor
cmpl
pop
fcom
or
xchg
xor
sar
in
cmc
push
push
xor
xchg
addl
xchg
jns
xor
mov
inc
jb
mov
test
adc
call
dec
sti
rorl
leave
aad
push
sub
sub
push
rclb
stc
out
mov
push
fmuls
push
shl
jbe
iret
jmp
addb
imul
cwtl
mov
xor
mulps
jb
imul
sbb
xchg
gs
push
cmpsb
leave
insb
inc
jae
dec
int3
push
cmp
stos
test
adc
mov
inc
or
shlb
inc
std
ss
xchg
jp
xlat
repnz
scas
ficompl
loope
ret
fcom
push
test
push
xor
shll
bnd
xor
push
push
mov
std
adc
jmp
outsb
je
mov
sub
repnz
rclb
iret
xor
mov
orl
jbe
cltd
cli
sub
lar
sub
lcall
xchg
and
aas
aas
pop
push
lea
lcall
imul
imul
push
mov
int3
test
jb
jno
test
push
mov
inc
inc
xchg
mov
daa
xchg
jns
mov
dec
ds
xrelease
lods
stc
nop
xorb
mov
aas
push
dec
out
or
lods
adc
pop
pop
xchg
fldl
jp
xchg
jb
xor
jg
test
scas
mov
dec
fimull
sub
stos
push
or
push
push
cltd
xor
push
adc
xchg
fcmovbe
fimull
jo
inc
xlat
leave
rorl
scas
adc
imul
hlt
rolb
push
push
jle
mov
mov
ret
jno
cs
lods
pop
loope
ffreep
daa
xor
dec
jl
jmp
and
inc
push
mov
push
mov
jge
fldcw
nop
mov
sbb
fcoml
sbb
je
arpl
xchg
adc
jge
cwtl
cmc
stc
lret
mov
cwtl
dec
int
imulb
ss
cmp
xlat
repz
stc
idiv
mov
jb
or
mov
add
push
dec
xchg
xor
mov
adc
xor
xor
push
jecxz
adc
jbe
mov
aam
push
in
pusha
fbstp
xor
lea
test
xor
mov
rorl
addr16
push
mov
add
dec
push
dec
or
cmp
mov
push
pop
adc
cmc
mov
test
mov
jp
add
inc
jbe
mov
push
aad
push
adc
push
or
jmp
cmp
cltd
lret
cmp
mov
call
dec
jmp
leave
jns
pop
cmp
lret
xchg
xchg
push
push
mov
repz
or
jo
mov
roll
push
in
sub
je
xchg
sub
divb
and
mov
xor
loope
xchg
jno
or
jle
sarb
xor
aad
xchg
or
adc
movsb
inc
mov
push
and
sbb
repnz
mov
arpl
xchg
add
test
jbe
cmp
mov
xchg
sti
je
call
cltd
push
jb
sbb
enter
or
xchg
xchg
stc
cmp
adc
mov
arpl
cmc
xor
dec
test
push
lret
enter
inc
rcll
dec
jb
adc
roll
lcall
push
enter
push
fs
adc
mov
enter
xor
adc
sub
shl
xchg
enter
gs
xor
adc
das
push
je
pop
mov
jbe
mov
pushf
mov
stos
ljmp
push
mov
mov
imul
sub
mov
dec
cmpsl
test
sub
imul
daa
call
adcl
xchg
add
ret
push
push
jnp
push
cmp
inc
into
cmp
xor
xchg
loop
int
mov
in
and
pause
cs
mov
imul
pop
std
pop
mov
cmp
jb
jle
push
dec
data16
test
mov
sarb
adc
cmp
push
inc
mov
sub
jno
mov
xor
xorb
push
mov
test
adc
outsb
jle
mov
jb
das
dec
xlat
inc
xchg
xor
cmp
pop
adc
jl
repnz
dec
notl
jo
jns
pop
idivl
mov
ret
cmp
aad
push
je
adcl
jp
sbb
hlt
jb
lods
jo
sub
or
sub
cmp
xchg
ret
add
jae
push
shl
cmp
xchg
cmp
ret
mov
repnz
mov
jb
nop
cli
out
xor
push
insb
jae
cmp
lods
int3
sub
add
and
lea
lea
fnsave
arpl
inc
out
fisttpl
xor
inc
adc
xchg
mov
mov
and
inc
enter
sbb
sbb
sub
pop
mov
aam
popa
or
jge
push
push
adc
pop
into
roll
sub
sub
loope
jns
cmp
xor
push
pop
pop
sbb
add
pop
xchg
adc
pusha
dec
xor
xor
push
adc
jo
fwait
cmp
dec
adc
or
jbe
push
fmull
mov
jbe
sbb
jbe
xchg
cli
jbe
adc
ss
xchg
xchg
dec
sbb
push
rcl
adc
xchg
sti
ret
xchg
cmc
out
sbb
mov
test
jbe
int
shlb
cwtl
adc
int
imul
das
mov
mov
repz
aaa
mov
sbb
enter
mov
sarl
mov
outsb
mov
sub
xchg
pop
mov
jb
pop
scas
or
adc
std
fiaddl
call
sbb
scas
xchg
repz
push
in
dec
mov
sti
ret
jnp
cmc
adc
dec
dec
pop
or
mov
mov
jne
fdivrs
adc
or
pop
cmp
aam
mov
imul
xor
pushl
mov
push
mov
in
or
jmp
jp
cmp
cmpsb
jns
js
dec
mov
jae
sbb
jle
sub
cwtl
scas
push
mov
adcl
pop
test
dec
xor
xor
mov
mov
dec
mov
cli
pop
clc
into
push
jb
insl
shlb
lods
mov
xchg
inc
outsl
mov
adc
xor
pusha
adc
jmp
scas
and
shl
je
or
push
lods
mov
hlt
jmp
sbb
adc
cs
mov
pop
mov
inc
push
mov
sarl
les
jnp
lods
push
xor
stos
pop
jb
inc
mov
call
jno
push
xor
mov
xor
xor
inc
lcall
sub
or
loope
pop
add
push
xor
pop
repnz
pop
pop
xor
jbe
mov
bound
xor
jl
xchg
push
mov
jle
xorb
hlt
sub
push
jne
notb
aaa
push
ja
mov
pop
jns
push
mov
pop
jnp
jmp
xor
sbb
pop
jge
mov
aas
pop
jg
push
loopne
and
inc
popa
andl
test
inc
test
push
es
xchg
xor
or
dec
imul
imul
or
dec
insl
lea
outsb
mov
dec
xor
jo
mov
lock
push
jno
dec
cmp
ss
insb
jb
mov
push
xorl
sub
adc
hlt
and
push
push
mov
push
pop
pop
adc
xchg
jbe
xor
push
xchg
cwtl
jl
push
aam
insb
or
jae
outsb
jo
cmp
orb
out
push
jmp
adc
pop
stc
push
pop
xchg
mov
dec
push
or
cmpsl
xchg
fldenv
and
cwtl
or
sbb
pushl
cmp
pop
push
inc
dec
mov
pop
aad
lret
adc
jo
jecxz
sbb
xchg
xor
leave
test
pop
rcll
shlb
fcoms
test
repz
int3
outsb
push
clc
data16
mov
mov
lret
cmp
repnz
outsl
adc
xchg
or
int3
push
add
mov
arpl
fs
inc
outsl
push
push
pop
shrl
enter
mulb
push
xchg
pop
and
jnp
loop
push
cmp
push
push
adc
mov
std
xor
leave
cmp
push
call
data16
shlb
imul
stos
lahf
loopne
pop
call
repz
decb
xor
imul
stos
aas
out
dec
lods
adc
cmc
push
push
dec
mov
sbb
inc
enter
dec
mov
cmp
mov
jge
jecxz
inc
stos
push
pop
xor
dec
add
adc
psadbw
lock
push
push
loope
sub
xchg
add
xor
fiadds
hlt
xor
sbb
mov
push
cmp
adc
mov
sbb
mov
scas
jge
neg
jp
xor
icebp
sbb
jo
fs
or
xor
mov
mov
pop
jp
pop
je
mov
stc
testb
clc
xorl
cmpsb
sbb
lods
inc
repz
push
and
jecxz
jmp
pop
xor
jp
clc
dec
in
aad
xor
jbe
xchg
xor
xchg
adc
xor
sbb
ja
fistl
std
jo
daa
loop
cmc
lock
in
insb
sbb
je
inc
das
mov
fnstenv
out
enter
add
mov
das
mov
in
rorl
and
in
adc
push
mov
mov
or
mov
rcll
xor
xor
hlt
cmp
andb
or
push
xlat
or
mov
adc
imul
add
mov
xor
in
enter
xor
adc
sarl
insb
fnsave
xor
cltd
add
jl
cmp
xor
cmp
xor
sub
xor
xchg
dec
in
xor
jge
out
fyl2xp1
pop
in
pop
xlat
inc
jle
add
adc
stos
cs
imul
inc
cmpsl
push
faddp
dec
mov
inc
ss
xor
or
jp
push
frstor
sub
mov
pop
popf
mov
adc
xor
mov
rol
push
mov
mov
lahf
mov
add
dec
mov
push
pop
lret
sti
cmp
stc
div
les
xor
shlb
xchg
ss
insl
pop
mov
jb
push
xor
inc
jno
shll
aaa
mov
mov
adc
ret
test
cmc
xchg
lods
enter
fwait
outsb
cmp
pop
mov
and
movl
fidivrs
xor
fs
mov
sbb
and
jne
stos
cmp
adc
xchg
lret
cwtl
aad
dec
loope
fwait
xor
jmp
enter
xlat
ds
xor
aad
adc
cmp
call
cli
fnstsw
pop
jge
xor
pop
inc
popa
inc
mov
sub
mov
sbb
inc
mov
arpl
cwtl
push
cmp
movsl
pop
jle
xor
and
dec
cmp
test
or
adc
rcl
push
das
lock
mov
dec
lret
je
lcall
push
inc
mov
aaa
lds
sub
lods
adc
jo
mov
and
cmp
sub
mov
cltd
mov
xchg
aas
mov
pop
or
imull
or
int
xor
faddl
adc
adc
add
scas
adc
mov
xor
and
fisttps
rclb
xor
fiadds
sub
push
dec
adc
pusha
cmp
repnz
adc
jo
adc
cltd
mov
fwait
daa
xor
pop
jmp
xor
mov
test
ss
xchg
ficompl
xchg
js,pt
xor
push
pop
xor
mov
lret
std
shl
xor
ror
jge
punpckhbw
sbb
mov
cld
sub
fiaddl
je
inc
ret
lds
insl
xor
mov
aam
movsl
das
hlt
addl
xor
outsb
push
jmp
loope
pop
push
xchg
inc
daa
cmc
incl
bound
push
cmp
ja
gs
sbb
out
test
adc
cmp
and
push
lcall
shrb
rorl
xor
sub
sub
into
jmp
sbb
dec
fwait
ds
cli
enter
adc
mov
sahf
shlb
add
sbb
lea
stos
xor
mov
pushf
cmp
outsb
sub
out
mov
sbb
push
outsl
or
mov
add
xlat
push
or
xor
push
mov
xchg
sub
xor
lods
add
xor
popa
adc
adc
dec
movsl
xor
lods
jge
jb
pop
inc
add
popf
imul
test
sbb
cmp
pop
sahf
repz
and
push
shrb
dec
sub
push
sub
mov
loopne
mov
cli
lea
cmp
sub
dec
xorb
xor
lahf
mov
sbb
rcll
xchg
outsb
inc
cmp
mov
xchg
ljmp
movsl
xchg
mov
xorb
fisubl
mov
fsubr
xchg
xor
mov
inc
lds
dec
mov
sbb
jno
mov
xor
adc
lock
xor
lret
fistl
iret
adcl
imul
pusha
inc
std
xor
sbb
lret
mov
mov
test
jg
jae
lret
test
jo
push
pop
jmp
testl
inc
push
fmull
adc
sub
push
adc
scas
xorl
lcall
fstpl
test
outsl
lods
jge
pop
and
xor
gs
cmpsb
sub
dec
addr16
fld1
or
xor
cmp
jbe
push
xor
ja
cli
mov
fisubl
fbstp
dec
imul
aaa
xchg
fidivrl
jae
inc
dec
mov
xor
insl
push
push
movsl
shlb
or
sarb
in
aad
repz
inc
xchg
dec
jae
arpl
push
fcmove
scas
adc
inc
jne
xor
sti
xchg
scas
push
mov
push
cmpsl
ss
das
jmp
or
adc
cmp
add
xchg
adc
les
lea
cs
sbb
popf
sub
push
test
adc
movsb
inc
sbb
xor
outsb
mov
xorb
adc
repz
mov
pop
add
loope
popf
cld
jno
push
mov
jae
xor
add
cmc
sbb
notb
adc
xchg
xor
shlb
fs
adc
icebp
xor
outsl
adc
push
sbb
inc
popa
cmp
xchg
rcrb
dec
les
pusha
jbe
adc
pop
push
push
rclb
mov
cmp
xchg
add
loop
fistpll
jb
ja
pop
repz
repnz
xchg
sbb
xchg
clc
icebp
xor
xchg
push
stc
mov
mov
add
inc
mov
rclb
mov
mov
dec
jp
mov
cltd
jae
rcrl
dec
and
repnz
add
ror
jp
inc
rep
rclb
adc
sub
inc
sbb
mov
jo
push
sbb
aas
mov
sub
js
dec
mov
ret
jae
cwtl
jbe
pop
push
ss
scas
inc
or
jb
rorb
mov
pop
cmc
xorl
int3
jae
xchg
xchg
mov
mov
stos
inc
mov
mov
je
jne
pop
mov
push
mov
loope
lcall
aas
mov
hlt
mov
xor
mov
lret
mov
popa
loop
xor
cmp
push
push
jo
push
xchg
jne
xchg
inc
jne
inc
adc
mov
xchg
mov
fisubl
xor
leave
mov
push
dec
xor
aad
xor
test
cmc
loop
cmc
push
cmp
mov
and
mov
dec
jp
adc
das
push
adc
jb
xlat
pushf
xor
out
movsl
adc
pop
adc
repnz
movb
movsl
push
pop
dec
pop
inc
cltd
dec
fs
lods
mov
ficoml
rorb
sub
mov
or
repz
or
aaa
jmp
xor
imul
cli
mov
inc
mov
push
xor
insb
fidivrl
pop
xchg
pop
xchg
mov
jb
sub
gs
adc
push
xchg
jmp
xchg
mov
enter
out
mov
out
mov
out
push
outsl
stos
pop
dec
mov
inc
js
sbb
fs
je
mov
pop
add
xchg
add
das
loop
cmc
or
cmp
sub
das
push
cmc
sbb
xor
ds
xchg
popf
push
xor
xchg
je
jo
push
xor
adc
cmovno
sub
es
repz
pop
push
or
mov
dec
adc
inc
cmc
inc
sar
or
mov
xlat
ret
sbb
ret
xor
notb
mov
in
xor
ret
js
mov
rorl
ja
mov
cli
mov
mov
dec
or
icebp
jle
adc
cmp
push
xlat
xchg
inc
xchg
test
mov
aaa
js
push
jae
cmp
dec
je
mov
movsl
outsl
rcrb
sbb
lds
push
cs
pusha
rcr
pop
xor
repnz
cmp
aas
out
insb
ljmp
loop
dec
jae
pop
push
mov
cmp
add
int3
sti
adc
cmpsb
jle
jb
repnz
adc
xchg
fs
sti
cmpsb
xor
and
xchg
xchg
in
push
xlat
cmp
leave
jno
cli
adc
sti
sbb
jno
pop
mov
and
notb
les
sbb
rcrb
cld
pop
icebp
xor
cmp
xlat
and
icebp
aam
adc
lock
mov
negb
adc
xor
push
xor
mov
sub
push
or
adc
adc
ss
mov
jo
lret
mov
mov
mov
push
xchg
movsl
popa
daa
xor
push
mov
dec
scas
test
add
inc
sbb
fists
lahf
xor
sub
shll
cmp
lcall
pop
je
loop
fmuls
push
leave
sbb
repnz
decb
xchg
stos
mov
fld
cmc
or
mov
xchg
lret
xchg
inc
and
cmp
dec
sub
mov
adc
xchg
call
sub
mov
out
enter
pop
xor
xor
mov
mov
aam
bound
lods
shll
test
and
pop
xor
call
std
adc
push
outsl
lods
shr
jl
cmp
in
xor
jmp
push
cmpsb
sub
jo
lret
popa
mov
jae
adc
adc
in
scas
fsqrt
xor
dec
out
daa
xor
cltd
out
fcomi
push
mov
adc
lahf
mov
lods
mov
xor
and
jns
adc
sbb
dec
xchg
hlt
es
jo
das
lret
xor
popf
jl
dec
insb
call
sbb
lahf
dec
test
mov
out
fsubrp
ret
xchg
shlb
es
dec
sbb
mov
fwait
scas
stc
inc
movsl
xchg
pop
add
repz
dec
int3
fcom
inc
loope
jl
scas
arpl
jecxz
jns
in
stos
js
test
aaa
pop
inc
push
rorl
cmp
addr16
mov
sub
mov
insb
mov
jl
dec
stos
adc
push
test
test
push
mov
mov
sbb
sti
pop
xor
cmp
or
les
xor
lret
jnp
mov
jbe
push
mov
clc
bnd
pop
es
adc
jb
sahf
jle
iret
push
pop
and
ja
pop
jbe
imul
lret
cmp
and
je
xor
sub
mov
or
enter
fistps
nop
shll
or
inc
and
dec
dec
push
std
je
shrl
icebp
mov
je
dec
xor
out
dec
jle
js
test
aam
mov
jnp
je
or
je
xor
and
dec
dec
mov
inc
hlt
mov
ret
pop
mov
ret
xchg
jecxz
mull
sahf
jle
adc
and
fidivl
inc
dec
gs
sbb
sahf
in
les
repnz
push
sbb
dec
push
xchg
xchg
jle
mov
push
sbb
ret
mov
sbb
xchg
add
cmp
mov
mov
dec
push
inc
mov
lcall
jne
mov
sub
jne
mov
adc
xchg
lea
cltd
jns
push
jae
jb
pusha
and
jns
pop
lcall
std
iret
dec
xor
jnp
jmp
adc
out
push
push
xor
dec
xor
xor
nop
mov
mov
mov
mov
sub
mov
mov
sub
mov
inc
js
pop
push
cli
xor
je
add
adc
icebp
int3
lea
cmp
dec
adc
adc
push
loope
aam
in
xor
mov
and
lock
call
dec
push
push
popa
dec
jae
or
fdivs
cmc
aam
sub
es
adc
xchg
in
dec
jge
cli
cmp
push
mov
js
adc
cmp
cmc
cli
lds
or
ds
cmp
mov
add
push
and
mov
jb
push
lret
mov
dec
mov
into
aam
pop
js
mov
mov
push
mov
cmp
ljmp
xor
add
cmp
jae
and
push
out
inc
mov
jae
lcall
xorb
and
shlb
inc
fwait
loop
std
inc
adc
adc
sub
inc
inc
xchg
inc
inc
xchg
and
mov
mov
pop
inc
jbe
dec
cmp
adc
mov
mov
inc
mov
rclb
cmp
in
push
add
into
jns
push
fmuls
fwait
shrb
es
or
repz
inc
mov
es
ljmp
je
or
push
shlb
aaa
scas
xlat
mov
aas
cmp
and
sub
inc
sub
mov
push
in
fwait
movsb
inc
test
std
test
je
loope
add
push
test
push
cmp
xchg
add
pop
cs
jl
aam
cwtl
cmp
ret
mov
movb
movsb
xchg
add
es
push
push
testl
mov
out
decb
in
ficoml
sub
ret
ficoms
lahf
insl
repz
sub
icebp
xor
call
sub
or
sub
xchg
xor
dec
cmpsb
xor
mov
dec
call
push
adc
xchg
push
jb
push
sub
adc
pusha
je
sub
xchg
loop
xchg
cli
push
sub
sub
or
xor
outsl
shll
pop
mov
pop
rorl
dec
cwtl
xor
xor
push
mov
imul
xor
mov
arpl
std
iret
cmp
push
and
hlt
mov
js
hlt
push
xor
ja
divb
cmp
push
outsb
or
stos
xchg
je
inc
ljmp
imul
sub
test
mov
lods
lahf
pop
mov
aas
mov
test
mov
lea
shll
lahf
std
fistpll
jns
les
adc
jbe
outsl
shlb
xor
push
mov
push
int3
pop
dec
push
fs
pop
inc
xchg
inc
xor
push
push
push
repnz
sbb
mov
cli
and
aas
movsb
ror
stos
dec
add
adc
loop
push
jo
jp
inc
and
xor
pop
out
es
bound
sbb
xchg
mov
mov
es
sbb
repnz
das
mov
aaa
outsl
mov
movl
sbb
insb
out
pusha
cli
mov
enter
mov
into
ret
aaa
in
push
in
add
js
es
cmpsb
pusha
or
adc
cmp
jl
and
je
lret
mov
jo
pusha
add
and
xor
push
mov
dec
gs
jnp
pop
out
mov
push
xlat
arpl
cltd
lods
push
lds
inc
xor
stc
add
mov
loop
xor
inc
mov
xor
or
sbb
adc
int3
or
repz
stc
pop
pop
shrb
jns
xor
cmp
insb
cld
pop
push
pop
imul
or
fmuls
cwtl
cld
repz
jnp
pop
jl
sbb
cmp
mov
andb
out
fs
xchg
pop
xor
cld
sti
mov
arpl
xlat
mov
dec
dec
cmp
ret
jbe
xor
xchg
in
cltd
pop
jp
mov
popf
ja
mov
rolb
push
inc
gs
adc
dec
call
xchg
mov
repnz
sub
xchg
fcomi
test
adc
jno
aam
xor
mov
sub
lret
leave
xor
int
mov
cs
movsb
push
movl
fimull
sub
push
bound
xor
jae
outsl
mov
les
sub
xchg
inc
and
fs
and
mov
xchg
cmp
push
jae
add
add
inc
pop
push
js
cwtl
cmp
mov
pop
bnd
cwtl
jb
mov
xor
xor
pop
pop
pop
push
push
ja
bound
in
sub
jo
sbb
mov
fldl
lcall
imull
ret
aaa
xor
push
or
lcall
rorb
in
jmp
hlt
cmp
arpl
fdivrs
call
pop
xor
xchg
xor
cmpsl
jmp
sbbl
inc
push
inc
mov
test
aam
addr16
sbb
mov
jae
xchg
jl
popa
dec
out
pop
cmp
sbb
loopne
xor
cmp
fdivs
mov
dec
rorl
dec
push
ljmp
xor
sbb
mov
jae
or
imul
imul
and
jnp
xchg
xchg
lret
xchg
ret
mov
sbb
xor
jnp
jle
lock
mov
je
fcoms
das
inc
add
push
cmp
sub
ss
and
scas
std
icebp
cld
mov
jp
push
cmp
es
popa
jl
jnp
xchg
rcl
push
sub
jnp
ja
jnp
subb
aad
jmp
leave
mov
adc
lret
pop
mov
lret
in
mov
cld
les
jnp
xchg
sub
push
shll
les
fdivl
sub
xor
pop
jno
jl
sub
push
push
xlat
popa
mov
adc
sbb
add
cmc
outsb
adc
pop
mov
rclb
inc
adc
movsl
ficompl
daa
push
jnp
repnz
and
and
mov
xor
sub
loopne
and
xor
cmpsl
dec
xor
in
cmpsb
lods
sub
test
inc
lret
mov
xor
sbb
mov
push
pop
mov
xchg
mov
aas
xor
icebp
in
daa
and
mov
rcrl
mov
mov
and
pop
xor
and
stc
test
mov
mov
out
jns
mov
and
xor
pop
mov
mov
adc
fbld
jo
sub
andb
ds
fsubrs
leave
mov
test
mov
int
movsb
popa
mov
dec
adc
aaa
cmp
out
decb
push
inc
and
push
daa
xor
mov
scas
pusha
into
hlt
adc
enter
stos
mov
cli
mov
mov
xor
or
inc
xchg
js
dec
pusha
or
dec
push
and
rcrl
and
sub
loop
outsb
xor
arpl
ss
mov
push
addr16
add
jecxz
clc
jbe
xchg
jnp
dec
cmp
xchg
gs
mov
push
lcall
mov
loop
out
jge
rorb
add
inc
xor
sbbl
popf
sbb
mov
or
jno
xor
sub
loope
lret
leave
fwait
mov
in
or
adc
sub
shrb
and
lods
shlb
xor
inc
jp
outsb
push
xor
into
fs
xchg
movsl
xor
adc
shll
loopne
mov
fisttps
mov
or
pop
jae
test
ljmp
les
lahf
xor
gs
or
cmp
jno
lea
jne
sbb
sub
lret
adc
xor
jmp
mov
mov
jp
das
lods
ss
cmpsl
sbb
mov
in
add
xor
insl
fwait
mov
fs
and
adc
popf
mov
leave
loope
cltd
scas
mov
stos
jne
adc
dec
sub
enter
xor
neg
mov
lret
xor
aaa
gs
add
rcrl
push
fadds
bound
pop
jne
mov
addr16
add
mov
xor
mov
pop
pop
cmc
inc
and
xor
nop
cmp
je
sub
cmp
add
and
rcrl
outsb
inc
push
pop
daa
into
sbb
lea
repz
fstpl
dec
or
mov
inc
xor
movsl
mov
out
dec
lahf
shll
cld
mov
lods
push
inc
and
push
pop
ljmp
jae
cmpsb
sar
pop
or
insb
jecxz
mov
cmc
arpl
imulb
xor
xor
mov
cmp
or
mov
cs
push
pop
fists
and
jecxz
push
ss
xor
loope
stos
xor
mov
outsb
or
pop
xlat
out
mov
pop
dec
sub
sub
xchg
adc
roll
sbb
lods
jle
mov
push
push
inc
call
dec
ss
xor
pop
outsb
and
lea
add
xor
scas
adc
or
repz
mul
push
std
cmp
fcmovu
mov
or
mov
xchg
push
popf
cld
stos
dec
sbb
iret
and
xor
out
pop
in
rcrb
fwait
test
daa
xor
mov
mov
push
lods
xor
test
sahf
add
faddl
mov
inc
jge
pop
orb
movsb
adc
lock
push
or
jge
jo
xor
adc
fimuls
mov
stc
jbe
sbb
dec
aaa
rclb
mov
push
jbe
and
or
ss
sub
dec
inc
inc
repz
sahf
pop
push
ret
fnstenv
clc
icebp
xchg
inc
push
pop
fs
add
sub
jnp
cmp
xchg
jb
jae
mov
inc
jecxz
jp
cmp
leave
clc
mov
xorb
add
mov
sbb
aaa
jmp
test
mov
add
mov
repz
enter
jp
xor
aas
hlt
add
stos
xor
jmp
and
cmpb
addr16
xor
mov
and
imul
inc
adc
dec
xor
sarl
mov
repnz
and
stos
xor
stc
lods
dec
xorb
int3
sub
repnz
jmp
push
icebp
js
xor
xor
and
cmp
or
ret
mov
std
mov
lret
xor
xchg
add
movsl
ret
lods
dec
jge
jbe
aad
cmp
jmp
outsl
xor
mov
pushl
lcall
dec
js
jne
leave
ret
std
adc
popa
push
and
ret
lret
xor
repnz
mov
scas
outsb
loop
mov
dec
xor
aad
xlat
inc
stc
jmp
mov
xchg
inc
enter
rcll
rcrl
xor
add
cs
cmpl
inc
rclb
jns
push
adcb
cmc
mov
mov
ficoms
mov
imul
pop
popa
cwtl
repz
js
outsl
xrelease
push
bound
mov
sbb
insb
jecxz
inc
push
add
and
add
mov
insl
sbb
sub
loopne
xor
imul
test
int
out
notb
lcall
mov
mov
les
and
cmc
test
sbbb
fidivrs
sub
lret
adc
push
cmp
mov
js
ja
rcrl
stos
adc
xor
jl
mov
add
pop
fcmovnb
ss
jae
pusha
pop
cmp
jns
dec
push
dec
je
rolb
xchg
jmp
ja
dec
sub
out
lods
lret
push
pop
ret
dec
sub
xor
scas
pop
daa
inc
cltd
lock
shlb
leave
xor
pushf
ljmp
or
clc
xchg
rorl
movsl
stc
testb
out
push
fwait
add
insl
aad
dec
xor
ret
jmp
or
outsl
cs
cltd
mov
bound
enter
sub
cmp
out
fcomp
xor
and
add
cli
stos
xor
and
push
out
test
xchg
pop
inc
mov
lock
jge
aas
push
dec
int
imul
lret
test
and
sbb
add
jns
jne
cmp
mov
ret
mov
es
insb
jnp
dec
pop
xchg
xor
lret
test
sbb
pusha
cmp
push
push
mov
fisubs
xchg
jo
into
aam
xor
icebp
je
stos
or
pop
sbb
in
push
mov
adc
test
and
add
outsb
cmp
mov
insb
lret
pop
mov
xor
ljmp
mov
xchg
es
in
and
xor
loopne
lcall
shlb
cmp
addl
out
iret
cld
xchg
lret
ror
test
mov
sub
xchg
add
and
cs
or
sbb
xchg
push
repz
and
ss
push
and
xorl
cmp
fs
add
repz
mov
std
push
jmp
in
std
cmpsb
adc
scas
pop
inc
cmc
jg
or
insb
std
cmp
pop
mov
cmp
or
shrb
fidivl
repnz
sub
adc
jo
adc
dec
sbb
clc
add
xor
xlat
cwtl
lcall
leave
insl
adc
ljmp
test
adc
shr
scas
mov
jp
mov
inc
pop
insb
xor
out
rcrl
mov
movsb
scas
and
adc
gs
sub
faddl
adc
cli
in
wbinvd
adc
imulb
cmp
push
lcall
cmp
mov
clc
notl
ljmp
xchg
inc
sub
aad
out
push
pop
sbb
xor
arpl
decl
jmp
mov
mov
fwait
je
in
sbb
shrb
push
shlb
aad
fnstcw
rcr
daa
outsb
push
out
jmp
add
push
xchg
add
sbb
cld
jmp
xor
pop
shrb
add
mov
popa
cmp
ljmp
and
rcll
and
je
sbb
test
cmc
jns
movsb
cmp
pop
cltd
lret
fidivs
cmpsb
mov
out
mov
lahf
int
xor
jbe
je
push
lods
dec
xor
stos
scas
and
mov
mov
fnstenv
sbb
mov
xor
test
int
hlt
lret
cltd
push
jle
ss
push
or
dec
adc
call
push
mov
rorl
repnz
xor
clc
hlt
mov
mov
xchg
push
mov
inc
and
insl
adc
ds
mov
cld
mov
xchg
xchg
inc
outsb
cmpl
mov
outsb
xor
jno
jb
pop
xor
cmp
icebp
dec
jo
push
arpl
sub
into
repnz
mov
sahf
test
dec
cs
sbb
mov
std
sbb
xor
aaa
mov
inc
fcmovnb
jmp
sbb
mov
inc
fstpl
pop
psubb
loop
push
decb
push
daa
shll
pop
inc
icebp
fnstsw
pop
cs
clc
cmc
or
popf
push
hlt
mov
aad
je
fninit
shrl
dec
add
adc
xor
cmpsb
mulb
loopne
mov
pop
xor
out
and
mov
sbb
movsb
xchg
xor
fs
aam
and
add
inc
xor
and
pop
jp
mov
mov
outsl
pushf
into
jge
mov
daa
fisttps
xor
into
aaa
xor
rcr
mov
add
mov
push
xor
push
xor
shll
icebp
out
dec
mov
inc
adc
enter
or
in
enter
lea
xor
add
leave
pop
and
mov
xor
pop
xor
in
std
aas
adc
push
xor
and
sbb
andl
shl
icebp
xor
push
aas
xchg
in
xor
pop
mov
popa
call
into
inc
push
cmpsl
pop
rcll
and
push
arpl
clc
jo
subl
repz
sahf
xor
or
stos
xchg
aas
mov
divb
xor
xchg
nop
or
xor
push
loopne
add
cltd
adc
sub
sub
js
cmpl
mov
xlat
cli
out
hlt
mov
adc
loopne
fs
xor
insb
inc
or
and
lods
movb
lcall
adc
mov
xor
loop
fistpll
adc
xor
xor
fwait
xor
jmp
xchg
xor
or
mov
jo
out
pusha
outsb
pop
in
and
sub
ss
adc
jns
jbe
xor
sarl
xor
fs
lret
fstp
mov
xchg
push
mov
adc
scas
nop
test
repnz
and
loope
xor
mov
ljmp
mov
and
lods
int
outsl
adc
ss
or
xchg
adc
push
add
subl
cmpsl
xor
popf
xor
lea
enter
aaa
mov
mov
adc
dec
inc
addr16
mov
hlt
pop
push
insl
out
arpl
fdivl
scas
add
ljmp
iret
xchg
xchg
push
xor
push
test
sbb
pop
loope
jmp
or
js
jle
mov
insb
mov
and
sub
xor
cmp
push
je
out
imul
sub
ret
es
jmp
xor
loope
xchg
fcomps
cmp
test
stos
mov
add
in
push
push
cmp
pop
xor
je
jl
in
daa
data16
fcmovbe
ss
jae
mov
and
dec
push
stc
mov
push
out
xchg
je
jo
lock
cmc
dec
jnp
jle
cli
jo
lock
fdivs
roll
iret
shll
es
pop
lock
lock
rorl
xor
adc
or
xor
pushf
adc
jge
dec
push
dec
sub
repz
subl
jb
jge
clc
pop
pop
stos
push
dec
cltd
out
jmp
dec
mov
ret
into
sub
fiadds
mov
xlat
dec
daa
hlt
icebp
and
scas
lret
mov
popa
xchg
cmpsl
xor
loopne
out
mov
push
xor
or
lahf
cltd
mov
sub
mov
add
scas
xchg
jb
sbb
xor
sub
xlat
lahf
lea
loope
inc
push
hlt
xor
pop
pusha
add
cmp
outsb
jle,pt
xor
lds
loop
cld
jae
fnsave
adc
or
sub
jmp
mov
cmp
adc
mov
and
mov
lods
mov
data16
cs
and
mov
lcall
adc
and
inc
inc
das
ljmp
jmp
sbb
test
sub
ret
adc
xor
outsb
loop
lret
sbb
idivb
adc
dec
inc
xor
cmp
shll
mov
out
out
add
cmp
je
shrb
xor
xor
xchg
ficompl
aam
inc
repz
sub
leave
popf
sub
mov
mov
shlb
adc
mov
xor
lahf
jne
lods
dec
cld
xchg
add
xchg
loope
mov
sbb
outsl
sbb
fsubr
and
les
jae
out
adc
sbb
xor
inc
mov
adc
or
sbb
xor
lahf
xor
xlat
mov
mov
push
popf
xor
insb
test
in
data16
fidivs
xor
jns
cld
jbe
pop
mov
fldl
add
daa
mov
add
mov
scas
outsb
cld
imul
xlat
fists
pop
mov
fisubrs
add
adc
mov
mov
icebp
xchg
leave
inc
adc
sub
sub
fdivs
out
es
rorb
jbe
jns
fbstp
popf
fwait
inc
cli
popa
mov
or
xor
sbb
out
push
xor
push
sub
adc
js
inc
clc
stos
mov
sbb
and
mov
out
lock
xchg
sbb
push
jmp
push
xor
mov
add
stc
mov
stos
stos
and
dec
icebp
sbb
push
data16
fiaddl
jne
loop
xchg
pushf
test
dec
lods
notl
call
pop
xchg
dec
inc
mov
imul
js
jae
mov
mov
mov
loopne
lea
ljmp
call
xor
aad
sbb
andb
push
jmp
ret
push
pop
aad
mov
addr16
mov
jl
xchg
push
xor
dec
adc
xor
test
testb
jae
outsb
fnstenv
pop
inc
mov
push
mov
ret
sub
push
nop
xor
adc
aaa
cmp
jmp
push
jecxz
lcall
cmpsl
pop
js
mov
cmp
das
mov
sub
xchg
hlt
jl
mov
inc
xlat
movsb
pop
xchg
xor
jecxz
or
in
mov
mov
adc
inc
std
xor
das
sbb
mul
test
pop
cld
pop
push
mov
dec
xor
popa
jle
xor
pop
push
dec
imul
popa
xor
and
sub
mov
rcrl
lcall
outsb
push
int3
and
mov
test
xchg
enter
cs
test
adc
xchg
dec
or
cmp
adc
arpl
fdivrp
in
mov
enter
dec
xor
jle
test
testl
mov
sbb
daa
in
push
push
push
movups
cmp
sub
mov
jmp
xor
xlat
jecxz
fwait
pusha
imul
mov
mov
repz
clc
xchg
pop
xor
inc
adc
push
sar
or
jle
movsb
xor
sti
test
rorl
in
sbb
loop
xor
xor
aaa
arpl
push
jge
and
bnd
ss
out
sub
adc
push
xchg
xchg
cltd
xchg
nop
xor
xchg
inc
xchg
scas
mov
xorb
loopne
mov
adc
push
sbb
push
js
xor
cmpsl
mov
rdmsr
mov
cmp
mov
mov
xor
cmp
ja
push
test
push
imul
mov
or
loopne
jae
outsb
fwait
xchg
jb
rcr
or
or
sbb
xlat
call
pop
push
adc
andl
cmp
inc
xchg
jecxz
pop
lea
dec
loopne
das
and
mov
xor
aam
ljmp
push
leave
mov
mov
addl
stos
shl
jae
cmp
movsb
cmp
outsb
das
xchg
popf
mov
mov
mov
mov
xor
mov
push
das
push
ret
push
in
add
cmpsl
lret
cmp
inc
xchg
loopne
outsl
adc
fcomp
and
fmull
dec
jns
fisubl
add
sub
fldl
xor
cs
bound
mov
push
icebp
es
dec
lret
pop
mov
loop
loopne
inc
cli
mov
out
ds
popf
fists
sbb
pop
lahf
mov
add
xorb
dec
push
es
dec
pop
shlb
pop
sub
add
push
adc
enter
mov
insb
mov
pop
fistl
test
mov
push
dec
cmp
pop
aad
addr16
add
push
pop
je
loope
stos
outsb
cld
mov
sub
sub
outsl
test
repnz
mov
test
cmp
fmuls
mov
add
adc
ds
or
sti
inc
test
xor
cmp
daa
or
lock
adc
and
and
adc
scas
fwait
adc
dec
xchg
jg
lea
push
outsb
jecxz
cld
in
xor
out
xor
push
inc
fnsave
cwtl
cmp
jbe
test
rorl
xor
out
push
out
std
push
adc
mov
mov
xchg
jo
sub
add
dec
xchg
adc
clc
data16
int3
lods
popf
fwait
mov
js
mov
lods
adc
sbb
dec
adc
sub
roll
pop
inc
xadd
xlat
and
mov
xor
xchg
fnstsw
adc
or
nop
dec
ja
stc
insl
push
xchg
in
xlat
sbb
sbb
lret
mov
xchg
mov
popf
lahf
sub
in
cli
pop
jb
pop
push
jecxz
stos
stos
inc
inc
loope
or
pop
ret
jb
andl
xor
sub
rdmsr
nop
jno
scas
mov
mov
push
cmpsb
lea
xor
int
jne
ret
sub
sbbl
into
xor
sbb
cmp
stos
mov
adc
xchg
lds
pop
xor
inc
test
cmp
adcb
out
das
adc
sarb
iret
mov
popf
lods
data16
mov
push
mov
das
xor
add
push
cmpsb
aaa
adc
xchg
ja
shlb
adc
fstpl
xchg
xchg
pop
and
sbb
push
jle
lds
xor
dec
sbb
lods
push
fstpl
cmp
outsb
icebp
adc
mov
inc
jmp
call
mov
mov
dec
and
repz
cmc
xchg
pop
jnp
jne
out
jecxz
sub
adc
test
push
or
xchg
in
push
cmc
lahf
push
js
call
mov
movl
inc
mov
iret
push
popf
sbb
ficompl
enter
mov
mov
jno
loop
lahf
outsb
xor
imul
arpl
cmc
xchg
test
neg
dec
outsb
out
xor
cs
sub
xor
movsl
xchg
jnp
lret
xchg
push
xor
in
xlat
shlb
in
xor
inc
mov
and
sbb
arpl
pop
adc
fwait
fwait
dec
fwait
cmpsl
xchg
mov
cmc
and
hlt
daa
push
out
mov
xor
icebp
cmpsl
call
pushf
sub
das
adc
outsl
xor
stc
call
out
imul
and
iret
mov
pusha
je
jecxz
lahf
into
cmp
xor
inc
or
inc
and
sub
aas
nop
inc
cltd
lret
mov
add
sbb
orb
pusha
insl
or
add
outsl
aam
dec
mov
xor
addr16
and
or
xchg
push
insl
sbb
adc
enter
lea
lock
fcomps
fnstcw
push
out
movsb
imul
fcompl
mov
push
mov
mov
add
into
inc
out
int
xor
jecxz
stos
or
jo
fs
push
cmpsb
hlt
icebp
out
push
sti
adc
or
inc
cmpxchg
fists
stos
mov
mov
dec
mov
xor
jbe
dec
mov
out
xor
lock
cmc
aaa
icebp
imul
scas
jb
push
test
lods
ds
call
test
mov
cltd
popl
inc
in
dec
test
js
adc
mov
inc
push
sub
xchg
rcr
jae
or
adc
mov
mull
pinsrw
xor
aas
insb
and
fs
jo
ficoml
add
xor
in
testl
ret
mov
inc
mov
xor
sbb
mov
es
testb
lahf
pop
xor
pop
dec
cmp
xchg
mov
xor
xor
pushf
or
cmp
add
mov
cmp
xchg
lret
xor
in
jmp
mov
xor
lods
pop
out
add
test
lea
incb
stos
fstpt
adc
call
xor
adc
insb
pop
out
lret
stos
dec
mov
test
cltd
loope
xor
add
jb
or
adc
and
iret
xor
daa
adc
jge
mov
fists
clc
inc
push
cmp
cld
pop
test
xor
out
sub
or
mov
gs
pop
xorb
cmpsl
bnd
es
mov
xchg
fidivrl
xor
xor
xchg
cmp
push
testl
xor
jge
icebp
pusha
pop
cmp
mov
cmp
jp
dec
stc
pop
adc
shll
jae
and
jp
xchg
cmp
mov
sub
je
pop
jbe
lock
or
add
adc
and
sub
mov
mov
leave
insl
add
push
loope
repnz
mov
inc
mov
jne
insb
mov
cs
cwtl
cmp
sahf
in
dec
pushf
je
xchg
mov
subl
in
cmpsl
mov
shll
in
pop
add
pop
sbb
xor
in
mov
int
inc
arpl
out
sub
popf
xchg
inc
dec
mov
pop
fstp
jmp
sbb
push
ss
sbb
lods
add
push
xor
lea
mov
mov
sub
mov
push
or
orb
cwtl
xor
or
or
imul
outsl
add
push
push
pop
push
jge
xor
mov
push
mov
hlt
inc
frstor
sbb
jge
mov
cs
aaa
sbb
inc
push
push
out
push
pop
ss
xchg
clc
repnz
jp
sarb
mov
cld
push
pop
mov
je
dec
xor
push
ja
je
push
pop
xor
call
mov
fmuls
test
sub
or
xchg
aaa
es
aam
adc
xlat
or
xor
inc
stos
mov
dec
out
mov
sar
jp
xchg
ret
clc
pop
sub
mov
enter
mov
pop
stos
xchg
fdivrs
in
mov
and
data16
push
cmp
cs
mov
cltd
sub
xchg
shll
daa
imul
inc
das
xor
xor
push
xchg
jb
xchg
das
sbb
mov
and
shlb
sbb
loopne
daa
sub
loopne
add
adc
in
push
aaa
mov
loopne
scas
shll
cmc
cli
xchg
xchg
pop
cmp
cmp
outsb
imul
mov
ja
rorl
push
xor
mov
push
idivb
mov
cmp
pop
mov
xchg
cmp
shrl
mov
xchg
cmp
sub
jae
xchg
fdivr
inc
push
mov
mov
and
push
inc
xchg
pop
xchg
adc
ret
mov
push
xchg
and
sbb
loope
or
jae
out
hlt
das
out
ds
mov
xchg
xchg
or
test
inc
xchg
or
or
push
pop
arpl
addr16
jo
xchg
jl
jne
inc
je
xchg
mov
xchg
aad
inc
arpl
jp
outsb
adc
cmp
cwtl
xlat
push
pop
sub
mov
dec
push
jmp
xchg
adc
pop
test
sbb
xor
imul
mov
mov
inc
lahf
loopne
mov
cli
adc
push
xor
dec
or
push
sub
jne
dec
out
inc
or
hlt
jg
scas
loopne
leave
hlt
sti
xchg
popa
xor
pop
hlt
push
hlt
pop
cltd
mov
aam
shrl
mov
aam
orb
inc
or
xchg
mov
jg
lock
data16
lcall
mov
sub
dec
xor
jns
nop
push
xorl
mov
pop
mov
sub
outsb
adc
or
sub
xchg
push
inc
sbb
ja
cmc
push
jle
cmp
fdivs
sti
cmpsl
pop
mov
jecxz
mov
and
adc
inc
cmp
push
jo
fbld
lock
filds
push
xor
push
jae
inc
ret
mov
xor
sbb
cmc
sbb
dec
adc
adc
nop
je
push
negl
repnz
add
xor
inc
iret
and
and
icebp
aam
aad
jge
hlt
sub
ja
repnz
cs
sbb
cmp
push
lods
iret
push
cmc
xor
or
aad
inc
adc
push
lods
iret
xchg
sti
lret
mov
mov
pop
xor
mov
stc
mov
xchg
dec
jae
enter
cmp
jns
jecxz
mov
push
lcall
jae
push
aas
inc
mov
aaa
test
mov
mov
iret
mov
out
xlat
xor
popf
iret
dec
lcall
ljmp
nop
mov
jecxz
push
pop
jae
loop
push
and
push
dec
sti
pop
shl
push
dec
or
adc
xchg
adc
repnz
inc
or
test
les
gs
xor
push
mov
add
adc
lret
nop
testl
out
xchg
les
jnp
or
xor
push
xchg
ret
sub
scas
int
xchg
inc
popf
in
mov
ja
sub
sub
push
mov
mov
stos
dec
lret
push
sub
shr
push
mov
dec
lcall
sbb
or
push
cmp
leave
hlt
inc
lret
inc
or
rcl
lret
push
jbe
ss
sub
cmpsb
jmp
std
inc
stos
adc
dec
shrl
sub
mov
cmp
sbb
jbe
jl
xor
sahf
add
xchg
push
sbb
mov
enter
insl
sub
push
push
xor
or
push
call
mov
out
sbb
push
dec
pop
int
inc
or
add
ss
loope
ret
push
sub
push
jae
test
cmp
call
dec
mov
hlt
int
mov
mov
jae
pop
push
jge
adc
inc
adc
stos
rorl
lods
lea
fdivrs
cwtl
mov
dec
or
ja
testl
mov
jb
xchg
out
mov
fcompl
popf
xchg
cmc
insl
sbb
test
int3
mov
mov
jb
popf
xor
push
popa
sbb
aad
mov
in
add
or
ljmp
cmp
add
sahf
cld
xor
out
mov
dec
std
decl
mov
cmpsb
or
mov
imull
imul
inc
and
imul
into
bound
imul
or
push
dec
xorl
pop
push
sbb
lcall
dec
cmp
mov
jge
cwtl
dec
mov
mov
std
jge
or
scas
loopne
cmp
aad
or
out
jge
mov
jb
jp
sub
mov
cli
jle
jp
sub
mov
sbb
jle
push
cli
jb
lahf
jl
mov
add
lds
push
data16
test
cmp
dec
mov
jns
jae
je
in
les
in
shll
inc
xchg
inc
inc
roll
adc
nop
ja
mov
int3
cwtl
inc
sarb
rcrl
jns
cwtl
movb
pusha
sarl
popa
adc
xchg
jbe
mov
push
dec
sub
push
in
mov
rdmsr
add
cmp
sub
out
dec
nop
lahf
xor
das
jmp
cmc
xlat
jo
aam
jecxz
sub
jg
mov
mov
jl
inc
fidivrl
mov
popf
add
pusha
xor
iret
xor
mov
shlb
mov
test
inc
std
dec
icebp
arpl
stc
insb
xchg
repnz
push
sbb
ja
fldt
adc
xor
rcrl
xchg
pop
push
jg
pop
xor
sub
push
mulb
stos
outsb
daa
rorl
pop
out
inc
fstl
insl
adc
in
hlt
int3
cmpsl
in
xor
pop
mov
pop
mov
cmp
mov
cmp
jns
inc
inc
adc
push
cmc
repz
out
sbb
xor
or
mov
test
push
out
std
xor
test
pop
pop
mov
inc
inc
adc
call
imulb
mov
push
push
xchg
cld
push
adc
sub
inc
cltd
or
repz
loope
push
dec
xchg
mov
pop
arpl
imul
mov
and
mov
rcll
mov
gs
loop
add
pop
mov
inc
lea
mov
data16
mov
xor
dec
fs
into
sbbb
inc
adc
fisubs
sub
shlb
arpl
stos
cmc
pop
dec
add
xorl
pop
nop
xor
decb
mov
outsb
int3
fiadds
pop
or
rcll
insb
dec
frstor
lret
cmp
mov
mov
cmp
xchg
insl
lahf
push
pop
repnz
arpl
xor
mov
lcall
push
rcrb
inc
repnz
cmpsl
inc
dec
cmpsl
xchg
dec
arpl
rcrl
xchg
popf
push
xor
mov
push
subl
insb
shll
cli
daa
pop
cmp
dec
cmp
inc
mov
xor
out
leave
lods
push
stos
stos
call
call
sbb
fidivl
shll
lcall
jp
and
outsl
aam
jo
adc
push
xchg
cmc
jno
push
out
mov
hlt
push
pop
rol
fisttpl
pop
sbb
pop
cmc
cmp
or
sub
mov
mov
js
cmpsl
aas
pop
sbb
cli
outsb
cmp
mov
sbb
cmp
or
xchg
aaa
xchg
cmp
cmp
pusha
adc
push
in
ljmp
dec
in
lea
pop
fstps
dec
push
adcb
push
shll
pusha
jb
mov
jbe
xor
repz
or
mov
adc
orb
push
pop
sahf
lahf
or
dec
arpl
pusha
mov
cs
push
mov
leave
fistl
xchg
jo
repz
stos
cmp
mov
xor
jmp
cmp
jae
push
jl
aam
dec
jbe
jno
adc
in
push
fisubrs
mov
data16
or
add
inc
aad
inc
out
je
ret
daa
call
sbb
jb
sub
lock
inc
xchg
mov
lret
cmp
jle
mov
aam
je
jnp
inc
loop
lea
cmp
ljmp
push
cwtl
lods
add
xchg
loope
cli
and
cmp
inc
jne
lahf
jbe
pop
popa
and
sub
mov
pop
popa
imul
push
js
sarb
icebp
out
xchg
loop
dec
addr16
inc
fildl
add
sub
mov
ds
pusha
cmp
jo
jl
mov
jae
hlt
aam
pop
pop
pushf
aas
push
cmp
mov
and
sub
sbb
scas
stc
push
sbbb
jb
mov
mov
mov
fldt
or
dec
cmp
dec
lock
rcrb
je
les
int3
fcoms
push
adc
fwait
aas
lea
gs
sbb
stos
cwtl
pop
xchg
and
add
xor
mov
adc
das
stc
xor
data16
std
xchg
sub
mov
push
sub
lahf
pop
push
xchg
adc
cmc
fs
neg
cli
jl
inc
sarb
out
insb
popa
push
dec
cld
sub
incl
push
imul
add
push
mov
dec
xlat
sub
sub
movb
jae
push
push
dec
xor
iret
cmc
sbb
xor
test
lds
xchg
cmc
aaa
stc
icebp
xor
xchg
and
push
repz
fmul
sub
or
jge
and
repz
xor
jg
add
add
cli
fnstsw
jnp
fwait
xchg
in
fistpll
cmp
pop
jne
je
divl
js
rcpps
sub
cs
xchg
fsubrs
dec
inc
inc
xchg
pop
pusha
out
sahf
push
dec
add
or
loopne
pop
test
inc
jae
and
cltd
ret
and
inc
and
cmp
in
xor
addr16
stos
xor
dec
shlb
in
lock
gs
mov
xor
dec
xor
adc
push
push
sahf
movl
lahf
in
mov
stos
xchg
fisubs
popa
loope
xchg
and
push
sub
loope
mov
pop
mov
stc
fmull
xor
mov
das
js
dec
xor
mov
sti
lds
cld
xchg
call
test
push
xor
sbb
out
xlat
les
sahf
xchg
push
leave
imul
mov
mov
movb
pop
push
cmp
aaa
cli
lcall
clc
or
push
int
push
pop
fldz
ret
std
add
das
dec
icebp
repz
fiadds
mov
cmp
xor
andl
loope
xor
daa
inc
mov
enter
das
mull
push
loop
test
xadd
xor
arpl
push
mov
dec
ss
es
call
pop
ret
xchg
int
cmp
call
sub
dec
popf
mov
or
andb
sahf
cli
cmp
pop
xor
mov
dec
mov
mov
movsl
pop
dec
lods
testl
frstor
xor
test
out
cmp
xor
imul
inc
js
hlt
xor
jbe
insl
jnp
cmp
xor
mov
xor
movsl
out
fwait
jne
xor
mov
cmp
pop
mov
adc
xor
int
dec
adc
cs
sbb
mov
popf
ljmp
out
or
xchg
mov
mov
sub
mov
or
jecxz
cmp
push
jg
sbb
sbb
shl
xchg
cld
cmpsl
out
jns
mov
xchg
lods
push
ret
jp
mov
xor
cmp
jle
inc
lds
mov
sub
add
les
test
cld
pop
sub
xor
dec
xorl
mov
arpl
pop
loop
mov
std
xchg
pop
into
push
bnd
fsubr
sbbb
int
outsb
xchg
or
cmc
or
mov
mov
mov
ljmp
femms
dec
out
test
in
pop
call
cltd
and
and
movsb
adc
popa
cmp
sub
xchg
mov
sbb
xor
sarl
mov
push
mov
inc
ljmp
jg
stos
mov
xor
pusha
arpl
xor
jne
push
jb
mov
ret
push
mov
outsl
dec
lcall
aaa
int3
enter
xor
movsb
and
out
pop
into
push
je
xor
call
xor
xchg
out
inc
pop
das
jge
or
bswap
inc
imul
cmp
xor
rcl
push
sub
idivl
hlt
mov
scas
jmp
dec
jg
iret
cld
stos
dec
int3
fimuls
test
sub
cmp
mov
inc
shl
xor
insb
push
inc
sub
pop
and
xor
mov
pop
push
xor
xor
fdivs
sbb
popl
inc
outsl
xor
mov
add
fisubl
lret
mov
mov
faddl
dec
adc
pop
outsb
pusha
mov
shlb
add
aad
shrb
pop
xor
int3
mov
add
adc
aam
ds
jno
dec
leave
es
aaa
pop
loop
daa
push
repnz
or
sbb
xor
push
test
mov
dec
push
std
xor
xor
dec
in
xor
and
lds
out
jbe
sub
sub
jo
dec
sbb
cmc
push
push
frstor
mov
cmp
pop
inc
and
arpl
sbb
inc
call
xor
js
xor
push
add
or
nop
jp
jne
insl
invlpg
leave
pop
xor
rcrl
fsubr
or
loop
adc
std
fsubr
inc
jecxz
arpl
jnp
dec
sbbb
sahf
fsubrs
pop
xor
push
call
pop
icebp
in
dec
fists
xor
mov
leave
test
dec
movsl
out
addl
or
sbb
xchg
aas
sub
test
xor
push
and
negb
rcrl
pop
test
cmp
mov
and
test
popf
es
jmp
orb
test
add
stos
mov
and
xor
pop
and
mov
decb
stc
xor
cmc
pop
loopne
int
pop
fsts
and
popf
xor
test
divl
push
movsl
dec
fisubl
lret
fwait
stos
pushf
lea
outsl
xor
push
push
popa
sahf
push
jge
dec
dec
adc
imul
mov
cmpsl
cmc
repnz
dec
rcll
push
inc
and
mov
leave
pop
es
xor
enter
xor
popa
jb
loop
in
movsl
dec
shrl
aad
push
adc
sub
xchg
scas
inc
in
add
xchg
sbb
mov
iret
test
dec
out
std
xchg
xor
push
add
xor
dec
or
fsubrp
push
inc
and
and
inc
or
lret
mul
outsl
aad
xor
call
fdivl
sub
add
adc
jg
inc
xor
xor
popf
cmp
xor
add
mov
xchg
cli
xor
adc
loopne
out
mov
sub
cmpb
mov
or
pop
sub
jb
add
inc
out
jb,pt
push
xor
enter
xchg
fldt
insb
cmpsb
leave
lahf
cmp
jbe
dec
dec
and
dec
mov
mov
lahf
cmpsl
adc
xor
or
sub
pushf
cmc
rcrb
std
xor
loop
cmp
mov
insl
xchg
push
xlat
out
xor
movb
mov
mov
fidivs
mov
sbb
repz
and
xor
std
adc
in
jns
stos
add
sbb
movsb
popf
data16
mov
mov
mov
adcb
pop
aaa
dec
pop
int
ficoml
aam
outsb
pop
cmp
mov
jns
mov
pop
orb
aam
js
mov
xor
cli
clc
sub
std
scas
push
xor
sbb
xor
push
sbb
sub
loopne
outsb
aad
xchg
call
mov
in
mov
lea
cmp
shrb
das
sub
pop
out
jns
dec
cmpb
mov
mov
jb
arpl
hlt
or
dec
xchg
xor
mov
adc
pop
mov
icebp
in
inc
inc
adc
and
sub
cltd
and
out
cmc
and
adc
hlt
aaa
sub
cmp
and
hlt
popl
in
and
xchg
stc
jae
hlt
je
lds
jecxz
cmp
repnz
outsb
outsb
cmp
jge
outsb
xchg
or
push
dec
cwtl
lods
rcl
inc
adc
nop
sub
lret
xchg
push
repz
sub
aaa
fs
inc
addr16
notb
xchg
jp
inc
lods
pop
mov
mov
xchg
mov
add
jae
xchg
pop
int3
pop
lcall
pop
push
xchg
and
or
fwait
or
dec
mov
outsl
and
push
dec
xchg
comiss
imul
out
pushf
jnp
lret
notb
sti
xchg
lea
pop
xchg
stc
xchg
mov
lret
sub
xor
mov
xchg
sub
xchg
fnstcw
or
push
fnstenv
adc
jnp
dec
jecxz
cmp
inc
repz
or
sub
sub
cmp
mov
cmpsl
out
push
pop
dec
insb
icebp
mov
adcl
fiadds
subl
js
inc
mov
xlat
lret
xchg
push
lcall
shll
cmpsl
mov
scas
xor
push
aas
push
bound
inc
xchg
cmp
sub
push
sti
push
xchg
sarw
movsl
cmp
cmp
in
xor
xor
push
mov
mov
mov
ja
in
rcr
movsl
jle
xchg
stc
call
test
mov
or
xchg
xchg
and
call
outsb
adc
jbe
or
popf
xchg
push
xor
jmp
andb
push
mov
pop
cmc
fidivrs
sbb
test
dec
or
jle
pop
cmp
outsb
pop
mov
pop
mov
or
stos
adc
aaa
ret
mov
push
adc
xchg
andb
adc
xor
xchg
fistps
cmp
mov
shlb
xor
adc
lock
int3
xchg
lock
xlat
adc
dec
add
add
in
adc
inc
push
mov
inc
jns
sub
push
mov
les
xchg
inc
inc
stos
and
sub
push
int3
daa
mov
fisubrl
xor
lods
mul
xor
sbbb
jns
filds
jbe
fsubl
fidivs
ret
test
outsb
adc
add
push
popa
rcr
xor
sbb
lret
cs
loop
outsl
or
into
syscall
cmc
mov
movsb
sub
mov
ds
mov
je
out
jp
xchg
fisttpl
push
xchg
pop
jg
xor
push
and
xor
dec
push
mov
mov
lock
dec
decl
push
and
clc
test
mov
fs
push
fisubl
ja
xchg
push
aam
mov
sbb
scas
xor
stc
dec
sarl
jo
and
and
mov
xor
sub
in
andl
mov
out
lret
jne
xor
in
ja
lret
sahf
adc
call
push
mov
mov
jge
add
pop
cmpsl
pop
addr16
inc
mov
mov
aad
adc
mov
or
enter
dec
xor
pop
cmp
adc
push
sbb
dec
mul
push
dec
std
mov
fwait
xor
add
hlt
movl
xor
mov
pop
incb
popa
leave
push
fcoml
out
or
pop
xor
outsb
pushf
adc
cmpsl
xor
es
adc
pop
fstps
popa
xchg
leave
ret
push
jmp
xor
test
push
mov
mov
int3
icebp
push
push
pop
adc
add
int3
cmc
lahf
repz
and
mov
pop
xor
iret
dec
xor
mov
jb
out
jmp
imul
cmp
stc
call
in
xor
movsl
outsb
insl
out
in
divl
xlat
rcrb
call
arpl
jp
mov
sbb
dec
push
inc
imul
ret
mov
out
pop
dec
daa
and
mov
push
add
inc
orl
xor
mov
push
mov
push
das
idivl
inc
adc
adc
pop
xchg
or
cmpsb
cmp
pop
pop
push
lea
sbb
sbb
filds
xor
pusha
icebp
cmpsw
dec
xor
cmp
xor
std
mov
pop
xor
dec
add
pop
mov
aas
cmp
and
int3
adc
pop
pop
mov
popf
lahf
mov
xor
push
mov
mov
movsl
movl
test
add
fidivs
stos
push
fcoml
adc
std
aaa
jo
jecxz
shll
or
xor
push
popf
pop
loopne
jne
xor
rorb
cmc
pop
mov
dec
mov
lods
enter
cmp
push
xorl
and
lret
std
aas
xor
test
stos
pop
sub
sub
adc
cwtl
lcall
ret
or
xchg
shll
int3
andl
fcoms
dec
cltd
sbb
loop
in
sbb
jns
mov
sub
add
test
dec
jp
shlb
std
insl
adc
cltd
adc
leavew
xor
add
push
pop
shll
das
shll
sub
leave
sub
adc
insb
out
xlat
ss
mov
jle
push
xor
add
mov
cs
imul
scas
mov
shll
in
inc
xor
sarl
xor
push
aad
and
inc
xchg
or
test
mov
ret
push
shr
push
scas
outsb
add
and
je
add
mov
pop
out
lahf
xor
mov
inc
enter
xor
sub
mov
inc
mov
xchg
inc
push
mov
adc
fs
mov
push
scas
mov
adc
lahf
xchg
adc
mov
je
add
mov
inc
sbb
mov
xor
mov
aad
mov
or
jne
testl
out
in
shlw
mov
subb
in
subb
xchg
xor
push
mov
pop
jns
xor
jnp
push
mov
bound
fbstp
imul
xchg
daa
xor
subl
jo
xor
mov
test
fwait
xchg
push
xchg
addr16
sub
xchg
jge
xor
fcmovnb
js
lods
push
jmp
test
push
pop
cmp
das
mov
pop
push
jne
sub
stos
mov
fs
cld
lods
xchg
dec
fidivl
pop
dec
push
add
mov
push
movq
sub
xchg
outsb
push
sarl
sub
inc
mov
push
adc
popf
dec
iret
xchg
pop
mov
xchg
inc
push
out
aam
adc
fwait
shlb
cmp
out
fs
lcall
xor
outsb
and
xor
ret
cmc
ja
xor
imul
out
repz
fwait
or
mov
dec
cmpsb
push
cltd
push
lahf
and
sub
pusha
popf
xor
cmc
mov
mov
jl
dec
aas
lahf
repnz
lret
inc
xor
push
inc
jle
int3
jno
int3
icebp
insl
push
mov
arpl
dec
mov
mov
out
mov
cwtl
cmp
sub
call
bound
lret
adc
and
mov
das
loope
and
xlat
jne
inc
js
xor
call
sub
dec
lods
stos
sub
inc
ljmp
dec
stos
mov
roll
cmpsl
xorl
lods
dec
int
and
nop
sub
xor
pop
push
aaa
or
icebp
sub
pop
jmp
and
push
push
je
fs
or
cmpl
sarl
mov
dec
xor
cmpb
cli
int
inc
push
dec
sbb
lret
sbb
cli
mov
stos
mov
out
cmp
scas
pop
inc
pushf
mov
dec
mov
stos
bound
xor
jo
outsl
xor
leave
and
push
hlt
jbe
adc
es
lods
adc
push
js
outsb
decl
outsb
hlt
pop
xchg
add
std
outsl
fwait
mov
xchg
clc
icebp
pop
xchg
dec
xchg
mov
loop
pop
sub
cmp
mul
sub
jle
enter
xchg
add
in
lea
fisubrs
icebp
push
mov
mov
push
xchg
sub
push
mov
mov
push
sub
daa
xchg
lret
lret
cli
mov
addr16
stos
ljmp
ret
out
das
mov
pop
js
xor
lods
mov
dec
enter
rcrb
push
pop
repnz
pop
xor
cltd
clc
imulb
sti
push
jmp
mov
std
cltd
ret
mov
dec
cmp
lahf
in
mov
jns
lcall
jns
hlt
test
inc
std
pop
fimuls
test
pop
push
jae
sbb
pop
das
mov
jmp
or
sarl
sbb
push
jge
pop
jae
sbb
mov
pop
pop
clc
xchg
mov
mov
std
imull
js
test
dec
lret
push
int3
cmp
fadds
repz
mov
or
imul
mov
inc
or
cwtl
xchg
imul
jecxz
lcall
xlat
sub
decl
inc
sti
shlb
je
mov
fs
push
mov
ss
bnd
mov
sub
in
call
loope
pop
push
pop
jge
movhps
jno
dec
in
addr16
in
fs
jb
inc
jge
xchg
pop
push
fs
js
lcall
push
xor
sbb
popf
and
aaa
insb
mov
push
pop
push
xchg
xchg
and
mov
xor
cmp
adc
or
repz
xchg
test
xor
and
mov
icebp
lea
inc
adcb
add
iret
mov
les
enter
sub
push
sbb
or
mov
xchg
divl
jae
jmp
push
dec
jns
lock
pop
push
cmc
and
inc
arpl
xchg
pop
iret
push
adc
fists
jno
lea
rclb
push
dec
in
insl
jb
jmp
fdivrl
mov
icebp
shrb
jae
pop
bound
sbb
add
roll
pushf
xchg
jo
repnz
dec
inc
inc
pop
add
addl
adc
mov
cli
aam
inc
xchg
insl
adc
lods
lock
lret
xchg
je
jne
repz
mov
sarl
mov
cmc
movsl
insl
outsb
rorl
push
fs
into
and
ret
ret
test
ds
adc
dec
mov
sldt
cmp
sbb
dec
xor
xchg
and
out
sub
cmp
sar
icebp
xchg
pop
xchg
lods
xchg
jae
mov
mov
push
dec
xchg
mov
fs
push
imul
imul
int3
fists
popa
das
arpl
ja
jecxz
jp
dec
stos
mov
enter
push
fists
inc
sbb
xchg
mov
cmp
jne
sub
dec
xchg
dec
add
xchg
or
loopne
xor
call
jae
xor
adc
xchg
cmc
inc
mov
cltd
inc
adc
adc
and
add
aam
repnz
xor
mov
aam
sarb
add
test
loope
sbb
shll
dec
cli
mov
rol
cs
bound
repz
insb
mov
sbb
mov
lods
aaa
repz
out
push
adc
xchg
pop
setl
std
dec
out
inc
aaa
cmp
ds
xor
push
or
adc
sub
imul
cli
adc
xor
test
sub
mov
aam
dec
mov
jns
stos
sub
mov
xor
add
ret
lret
mov
mov
cmp
xchg
add
jb
adc
outsb
cmc
inc
cmpb
mov
cmpsl
xor
sahf
pop
push
cmp
mov
push
add
popf
push
mov
ret
xchg
dec
int
rclb
lret
xchg
test
pusha
xchg
pop
jmp
inc
lahf
dec
test
jb
repnz
add
mov
jecxz
adc
or
adc
in
mov
mov
rcl
lods
push
mov
jo
xchg
push
je
mov
mov
mov
push
push
mov
mov
mov
sbb
and
rclb
insl
in
clc
outsb
cmp
dec
adc
pop
mov
xor
loopne
jecxz
sbb
cmp
iret
fists
mov
sub
rorl
mov
sub
sbb
push
repz
ficomps
sub
lcall
fists
lcall
mov
repz
rcrl
mov
cmpsb
cmp
xor
cmp
mov
adc
mov
ficoml
mov
push
push
cmp
pusha
cs
pop
inc
pop
mov
fwait
pop
sub
insl
cli
aaa
mov
pop
sarl
mov
arpl
or
jecxz
jp
mov
fsubr
and
jecxz
cli
int
mov
push
and
or
or
in
dec
jp
inc
push
lods
lock
push
xor
fdivl
jo
mov
insb
pop
pop
cli
mov
jbe
lds
bnd
pop
hlt
add
cli
movl
sub
and
sub
mov
lret
js
mov
add
sbb
xlat
hlt
in
aam
inc
push
jae
mov
sbb
mov
pop
xchg
cli
aam
push
or
sbb
adc
mov
enter
cmpsl
int
pop
xchg
call
loope
mov
pushf
clc
or
repz
pop
xchg
and
xchg
leave
js
mov
rep
xchg
loopne
jmp
mov
dec
or
push
jp
xor
xchg
dec
jg
shl
stos
shlb
mov
jl
pop
inc
repnz
mov
adc
pusha
push
jnp
mov
xchg
sarb
lret
repnz
pusha
xchg
repz
add
mov
push
mov
mov
aad
lahf
sub
pop
xchg
sbb
push
mov
and
mov
pop
lcall
add
jp
aas
jge
inc
sbb
int3
xchg
stc
jbe
push
mov
mov
sbb
push
xor
jp
push
fstpl
mov
test
dec
push
mov
int3
rcr
mov
into
idiv
in
mov
mov
mov
jg
and
shll
dec
xor
cld
add
dec
push
into
xchg
jb
adc
nop
inc
into
push
outsb
pop
repz
fcoms
add
or
mov
out
fs
push
dec
adc
mov
add
add
aam
popa
lret
xchg
pop
or
neg
xchg
mov
mov
movl
cld
mov
or
adc
add
xchg
mov
data16
cmp
inc
idivb
mov
jb
mov
aad
xor
stos
sub
adc
or
jae
sub
add
gs
push
push
imul
lock
xor
xchg
stc
pop
sub
enter
add
jbe
hlt
lock
in
outsb
fs
clc
xchg
adc
push
add
dec
adc
push
xor
ja
dec
or
mov
enter
push
push
mov
out
mov
pop
lds
stos
loop
aam
popf
pop
sbb
ret
xchg
add
jo
aas
pop
leave
mov
sub
and
push
idivb
call
icebp
jle
cmp
lcall
pop
add
loopne
scas
icebp
sbb
jne
cli
sub
imul
push
setg
jle
xor
sub
push
adc
mov
gs
add
push
pushf
adc
aam
mov
fs
stos
hlt
icebp
sub
js
xor
pushf
pushl
movsl
add
test
jmp
lret
jg
and
xchg
push
adc
insb
mov
ljmp
or
sub
sbb
or
or
inc
testl
sub
rorb
cmp
mov
or
jge
clc
xchg
xchg
xor
inc
nop
xchg
xor
xor
jnp
xor
inc
fwait
pop
icebp
push
mov
cld
lcall
pop
popa
push
pop
daa
cmp
push
rep
repz
lcall
jge
or
mov
xor
loop
xchg
add
mov
inc
jae
jae
inc
test
xchg
dec
push
lea
andl
ret
cwtl
mov
insl
or
jp
pop
or
shlb
pop
jmp
xchg
ds
ds
imul
loope
cmp
lret
or
or
xchg
mov
adc
fstpt
imul
ss
cmpsb
int3
or
mov
push
jb
xchg
mov
ss
and
ret
hlt
cli
cmpsb
xor
push
and
add
mov
dec
fisubl
loope
xorl
daa
xor
in
xor
popf
push
pop
pop
cli
jl
jo
sub
loop
push
cmp
inc
repz
jmp
add
hlt
push
add
mov
pop
add
data16
adc
pop
jle
mov
xor
xor
daa
addr16
jb
jp
call
sub
jne
jl
pop
inc
push
and
rcl
repnz
in
fdivl
cmp
testb
xor
hlt
rcl
shlb
fdivrl
xchg
xchg
cmp
push
clc
and
jne
xchg
xchg
mov
xchg
js
pop
sysenter
fidivl
aas
in
adc
test
rcll
int
jbe
aam
xor
mov
dec
mov
xorl
jne
cmc
jecxz
push
push
addr16
pop
faddl
imul
mov
adc
mov
mov
gs
jl
cmpsl
call
cmpsb
xchg
xchg
xor
jne
jbe
mov
movsb
add
call
jge
test
xchg
faddl
loopne
push
addr16
mov
xor
push
cmp
adc
cmc
repnz
in
mov
hlt
je
jne
popf
cmpsb
pop
xchg
xor
jmp
fcoml
aad
xchg
cmp
ds
shll
loopne
sub
sbb
lret
das
inc
fcoml
fstpl
fdivr
jle
push
xor
mov
adc
xchg
cwtl
mulb
popf
push
push
repz
and
in
repnz
fcoml
aad
xchg
scas
imul
inc
pop
imul
js
xchg
adc
shr
rcll
mov
inc
push
mov
and
adc
push
and
pop
sbb
out
lds
fsubr
sbb
push
aam
push
add
xor
add
xchg
inc
addr16
fistpl
dec
jae
sbbb
in
idivb
inc
push
dec
add
lcall
xor
mov
mov
adc
mov
sbb
jge
ja
dec
out
sub
push
xor
mov
mov
xor
or
pop
xlat
adc
shll
mov
repnz
jno
sbb
lcall
mov
roll
mov
stc
bound
sarl
add
in
data16
mov
and
xor
jb
pusha
and
sub
jge
dec
push
mov
enter
mov
adc
mov
jae
sub
sbb
fdivr
js
scas
lcall
pop
mov
xchg
mov
fstpt
int
dec
adc
mov
jnp
loop
pop
nop
adc
enter
int3
xchg
push
mov
sbb
push
push
hlt
mov
or
add
xchg
xor
cwtl
popf
push
and
aas
push
sbbb
cmp
adc
lock
cmp
adc
mov
inc
and
inc
mov
gs
jbe
cli
xor
sarb
sarb
mov
add
addr16
scas
mov
jge
jno
dec
testb
test
mov
sbb
pusha
jecxz
jne
int3
jns
mov
jnp
cmp
xchg
in
stos
fnstsw
push
pop
aas
xor
cmp
fdivrs
faddp
lahf
cmp
inc
ficoms
xor
sbb
imul
enter
pushf
xor
lds
inc
inc
daa
or
adc
inc
sub
bt
mov
or
ss
inc
or
in
mov
mul
aam
sti
mov
sub
js
dec
lret
xor
jle
cmp
add
inc
push
lahf
loope
dec
xchg
popw
jo
push
push
shll
jb
cli
sbb
mov
outsb
cmc
lret
jne
out
pop
mov
pop
loopne
pop
cmpb
xchg
and
xor
pushf
xor
xor
mov
fdivrp
mov
fimull
pop
add
cld
shlb
dec
mov
jg
sahf
test
rcr
lds
mov
xchg
inc
mov
test
out
cmp
icebp
pavgw
cmp
iret
mov
mov
jns
push
jp
xchg
imull
inc
mov
into
inc
repz
sub
adcb
and
inc
cmp
stc
pop
xchg
pop
jmp
jp
lds
cmc
jae
mov
js
aas
adc
notb
jl
pop
ss
pushf
movsb
pushf
inc
inc
adc
xor
mov
repnz
pushf
sahf
sbbb
mov
scas
push
aaa
rclb
lcall
addr16
mov
rclb
cmp
idiv
int3
xchg
mov
repz
aas
scas
xchg
jbe
jge
mov
pop
xchg
test
mov
aaa
inc
jnp
mov
mov
pop
adc
mov
push
jb
cmp
in
adc
pop
inc
fld
mov
xchg
inc
xchg
mov
cwtl
bound
cmc
xchg
push
xchg
inc
in
inc
push
push
dec
add
mov
mov
subl
fnop
rclb
xor
jle
xor
xchg
ja
cmp
mov
stos
mov
das
loopne
xor
jno
adc
rcrl
shlb
and
xor
fstpt
push
pop
xlat
cld
dec
movsb
xchg
mov
mov
nop
shrl
xor
loopne
and
fsubr
and
adc
dec
mov
scas
add
jge
int3
adc
cmp
add
lret
addr16
sub
insl
rcll
xor
stc
cwtl
lahf
std
jnp
popf
mov
adc
pop
and
adc
fwait
cmp
les
stos
movsl
sarl
jecxz
sbb
xor
pop
or
xchg
xchg
jg
or
sub
stos
sub
push
xor
outsb
daa
repz
test
cmpsb
adc
subl
push
fsubrl
jl
xor
mov
aaa
sbb
jb
adc
and
xor
aas
std
aaa
dec
cltd
lods
mov
or
leave
push
adc
loopne
aam
lret
ret
or
ja
ds
sahf
rorb
cmpsl
stc
push
or
lret
sub
push
jb
lods
fmul
and
lahf
test
les
adc
test
mov
stos
cmp
pusha
jmp
mov
inc
mov
mov
xor
add
ret
mov
jge
and
pop
inc
and
dec
cmp
xor
out
xor
cld
add
adc
mov
mov
pop
xlat
dec
mov
push
push
stc
xor
cwtl
jno
mov
ss
outsl
leave
fwait
mov
push
mov
cs
imul
xor
jg
xor
cltd
ljmp
xchg
adc
push
movl
push
cmp
pusha
mov
lea
sbb
pop
or
push
inc
pop
repz
push
pop
std
inc
ficomps
aas
pop
add
or
insb
pop
movsb
pop
mov
arpl
xor
adc
idiv
fmulp
inc
xor
mov
or
sti
or
xchg
jp
push
nop
mov
int
and
inc
test
pushf
mov
or
lret
fs
jl
das
mov
add
push
xchg
xor
cmp
xor
je
jns
stos
arpl
xor
mulb
inc
adc
sub
out
mov
aad
ret
dec
xor
js
lret
in
clc
sbb
add
push
loope
iret
xchg
xor
pop
mov
je
cmpsl
sub
or
xchg
testb
dec
ret
imul
mov
pushf
xor
sbb
push
inc
rcll
sub
movsb
jmp
aas
dec
inc
add
and
mov
push
push
sbb
sarb
test
shlb
push
daa
jbe
jp
iret
pop
dec
in
out
cld
outsb
cmp
frstor
pop
xor
daa
and
jp
xor
mov
cmp
mov
mov
and
dec
dec
sbb
vpmullw
enter
icebp
shrl
outsl
mov
xor
mov
cltd
xor
xlat
fdivs
xchg
push
iret
xor
in
stos
pop
and
dec
push
xor
cmp
inc
ds
stc
jne
xchg
jo
mov
mov
inc
mov
scas
pop
xor
mov
jmp
into
push
and
sti
xor
and
sbb
clc
inc
repz
stc
xor
or
sbb
xor
repz
xor
loope
imul
jle
testb
xor
add
push
mov
mov
and
xchg
rcrl
xchg
mov
sti
stos
sbb
ffree
and
xor
pop
xchg
jnp
sub
mov
inc
testb
xor
out
xor
push
jns
leave
push
in
orb
or
pushf
xor
push
test
jne
out
xchg
out
or
scas
out
adc
bound
xchg
sub
nop
mov
xor
cmp
out
jmp
sbb
inc
pop
aad
sbb
sbb
in
xchg
jg
cmc
sub
adcl
xchg
pop
mov
ljmp
jnp
and
jo
in
push
divl
sub
xchg
pop
inc
lahf
and
adc
repz
xchg
or
and
cmp
push
add
or
mov
int
addr16
xor
fidivrs
lret
add
push
xor
jge
pop
mov
outsb
leave
fsub
sbb
push
inc
call
outsl
dec
fwait
lods
mov
leave
mov
lock
xor
mov
out
lds
stc
leave
dec
xor
jns
xor
push
jo
aad
hlt
insb
stos
pop
enter
cmp
or
and
dec
jmp
pop
test
xor
std
int
xor
mov
enter
stc
clc
jb,pn
xor
or
jmp
push
sbb
rolb
push
sub
in
fadd
dec
and
push
ja
adc
mov
or
dec
push
adc
push
push
xor
and
adc
outsb
sbb
movlps
sub
cmp
inc
loope
adc
in
pusha
push
in
jne
push
sti
cmc
mov
or
or
and
adc
adc
cmp
and
xor
sub
xlat
repz
dec
addr16
mov
pop
mov
repz
fisubrs
fildll
aad
fistl
out
sub
shl
and
inc
das
xor
shlb
push
test
cltd
inc
bswap
sub
xchg
mov
mov
mov
xor
ficompl
inc
and
fwait
mov
stos
xor
sub
popf
call
scas
mov
mov
push
rcrl
add
dec
shlb
aaa
xchg
fisubl
mov
test
loope
test
adc
mov
pushl
aas
adc
insl
hlt
cmp
add
imull
loopne
mov
scas
xchg
dec
inc
hlt
cld
inc
js
fmuls
pop
mov
jnp
test
lcall
jl
cmp
loop
addr16
or
or
xor
das
jle
push
sub
mov
add
pop
and
cld
xchg
or
lcall
popf
or
or
sahf
mov
mov
daa
mov
inc
pop
loope
mov
mov
les
sub
test
dec
mov
or
fisubs
les
xlat
in
scas
mov
hlt
lea
shr
out
pop
lds
nop
je
mov
imul
pop
mov
xchg
ds
repnz
mov
mov
mov
divl
xchg
push
pop
dec
push
or
ja
pop
xlat
aaa
xchg
jg
sbb
adc
xchg
adc
jae
jne
mov
scas
adc
stos
je
sub
dec
shr
shrb
sub
sub
xchg
sub
aad
rolb
cli
add
popa
cltd
je
lea
pop
jae
mov
cmp
hlt
in
mov
mov
jecxz
mov
mov
cmp
mov
push
add
jp
jnp
inc
cmp
hlt
mov
inc
pop
push
jbe
dec
ss
adc
xchg
or
shl
inc
aam
popf
jmp
adc
cld
cmpsl
push
pusha
inc
sti
and
scas
inc
icebp
sti
adc
inc
mov
daa
adc
dec
loop
lock
xor
std
daa
mov
and
pop
and
lods
rcrb
xlat
jae
imulb
xor
imul
inc
xchg
cmp
frstor
mov
and
xor
inc
pop
scas
sti
cmpsb
loope
mov
xor
mov
adc
inc
movsb
filds
xor
mov
dec
movsl
mov
or
cmp
outsb
push
sbb
xor
push
adc
out
rorb
insb
jne
out
pop
dec
and
inc
sbb
jo
jecxz
cmpsl
repz
cmp
jge
pop
push
xlat
adc
imul
xor
mull
xor
mov
cltd
in
stc
subb
or
jo
rcll
and
adc
icebp
movsb
out
sbb
shrl
or
stos
mov
sbb
and
mov
xchg
cmc
push
push
pop
es
sub
add
xor
sub
into
jnp
xor
lret
xchg
push
inc
test
pop
aaa
xor
jo
sbb
adc
sub
mov
add
adc
imul
inc
loopne
push
lcall
mov
pop
popl
stos
mov
or
cmpsl
xor
fldl
mov
aaa
xor
subl
jns
out
fdivr
outsb
lahf
mov
jo
inc
cmc
lods
xor
add
xchg
in
mov
xchg
lret
or
pushf
testl
arpl
sub
je
dec
lods
xor
loopne
arpl
cmc
xor
lahf
xor
add
push
test
aas
push
mov
add
dec
jecxz
xor
outsb
pushf
cltd
gs
push
adc
and
mov
sub
push
fidivl
inc
push
jmp
int
pop
sub
cmp
jns
cli
xor
pop
sbbb
pop
xor
add
jle
push
fidivl
push
arpl
insb
xor
push
loope
shlb
xor
cmp
data16
outsb
xor
das
rcr
out
adc
lods
mov
mov
sub
mulb
cmp
inc
in
xor
fs
sub
xchg
add
or
push
iret
mov
out
jmp
xor
fisttpll
xor
ljmp
xor
cmp
aas
adc
cltd
cmpb
pop
fmul
push
aad
data16
add
movsl
xor
cli
sub
xor
in
test
push
pop
xor
insl
inc
psraw
mov
and
and
or
loop
das
aad
xor
sbb
sub
xor
roll
xor
fnstsw
push
lahf
xor
mov
cltd
mov
pop
mov
cmc
dec
xchg
add
iret
mov
push
sub
jo
lret
cmpsl
scas
mov
nop
mov
adc
cmp
add
lea
jmp
pop
mov
mov
mov
mov
jecxz
xor
jge
adc
nop
stc
sub
inc
mov
and
xor
add
cmc
jbe
in
sbb
test
xor
pop
rclb
or
and
and
in
fidivl
mov
mov
jle
add
mov
inc
push
cs
mov
clc
xor
add
jge
icebp
xor
cld
xor
mov
xchg
dec
stos
xor
add
mov
scas
sub
aam
adc
mov
clc
mov
push
pop
xor
dec
mov
in
push
push
lea
cmp
popa
and
mov
or
xor
loope
dec
aad
pop
xor
dec
add
mov
xor
mov
loop
inc
shl
pop
xlat
pushl
ds
add
xor
mov
popf
xchg
pop
xchg
mov
jmp
mov
or
sbb
rolb
repz
dec
inc
stos
jecxz
lea
xor
int3
lods
mul
xor
das
adc
xor
mov
cmpsl
xor
jle
pop
xchg
inc
jp
xor
push
or
xor
aam
lock
and
xor
push
rorb
arpl
call
mov
int3
inc
test
xor
clc
cwtl
xor
lahf
cli
sbb
dec
bound
or
xchg
outsb
sub
xchg
jmp
lret
xchg
repz
test
mov
lahf
adc
xor
and
popf
insl
pop
leave
aad
jle
mov
mov
ja
inc
cs
icebp
and
lock
mov
and
mov
shl
sub
add
test
stos
cmp
cmpb
dec
xor
cmpsl
div
xor
xor
xorb
and
xor
rcrb
inc
es
sbb
fwait
imul
loop
fists
mov
adc
shlb
adc
xor
xchg
xor
and
jbe
xor
sub
mov
das
dec
lods
dec
cmpsb
repz
sbb
dec
les
or
in
mov
addr16
cwtl
adc
cmc
bound
mov
fwait
cmpsl
stos
sti
cmp
repz
aad
scas
into
lods
lahf
xor
ljmp
xor
dec
das
or
mov
ljmp
mov
push
xchg
pop
jp
out
mov
testl
lret
push
jmp
pusha
cmp
cmp
mov
enter
pop
pop
xlat
inc
cmp
mov
hlt
adc
int3
out
mov
jb
push
mov
sbb
cmp
sarb
or
xor
imul
int3
mov
push
cmp
cmp
adcl
test
outsb
dec
cmp
inc
dec
xor
imul
ljmp
jno
mov
scas
adc
or
in
daa
sub
out
mov
xor
xchg
call
dec
dec
push
cmpsb
mov
icebp
les
dec
mov
xchg
pop
int
mov
mov
jle
js
add
stos
shlb
cwtl
push
aam
or
push
outsb
rcr
push
sbb
jae
push
add
mov
mov
jno
jb
sbb
ds
pop
out
mov
dec
mov
jb
mov
rcrl
popa
call
mov
inc
mov
jp
push
jo
out
xor
xchg
jmp
shlb
xchg
je
adc
sbb
sub
lcall
dec
push
sbb
movsb
xor
movsl
cmp
test
or
mov
xlat
icebp
cmp
incb
xchg
outsb
popa
mov
xor
adc
in
push
loope
cmpsb
xlat
stos
or
inc
and
and
mov
push
push
xor
and
jg
push
mov
mov
inc
test
movsl
ficompl
pop
jb
sub
test
fwait
repz
ja
xor
push
cld
cmp
sbb
rcr
icebp
es
ret
outsb
xor
push
xor
pop
xchg
cltd
lods
inc
push
xor
sub
inc
imul
jbe
and
test
dec
pop
push
aas
insl
adc
lock
call
clc
lods
rcll
loopne
adc
adc
outsl
pop
pop
pop
movsb
cmp
mov
pusha
mov
mov
dec
jecxz
mov
mov
push
xor
scas
push
iret
pop
daa
scas
jns
ljmp
push
insl
pop
jne
xor
dec
out
jns
cmpsb
and
cli
rol
cmp
in
jmp
lcall
popa
stc
mov
pop
mov
cmp
mov
ljmp
loope
push
xchg
enter
xor
sbb
cs
push
lahf
mov
pop
lret
dec
jo
or
xor
sbb
or
push
fistps
dec
or
rcrl
xor
outsb
fsts
xor
and
sahf
adc
fstp
mov
ss
fs
pop
xchg
pop
xor
mov
mov
mov
sahf
lahf
ja
dec
daa
xor
push
scas
push
outsb
or
mov
mov
aam
stc
xor
mov
jg
add
test
ds
insl
gs
jecxz
movsb
sbb
jp
xor
xchg
inc
int3
cmpsl
shll
loop
add
mov
sbb
std
cwtl
dec
mov
mov
dec
mov
mov
mov
push
xor
enter
and
mov
and
cmpsl
pop
mov
adc
xchg
xchg
add
out
cmc
xchg
jle
xor
ldmxcsr
aam
sbb
divb
pop
shlb
mov
test
mov
scas
inc
addl
lods
rcrb
outsl
sub
mov
inc
aad
adc
adc
clc
inc
xchg
hlt
xchg
and
adc
das
pop
push
es
push
hlt
jb
das
dec
ret
cmp
push
xchg
jmp
stos
loopne
push
jl
xchg
or
mov
sub
icebp
xchg
cmp
dec
jb
jae
rep
ret
cmova
imul
pop
xchg
pop
and
push
jns
sbb
cmc
test
adc
hlt
xor
aaa
sub
fs
adc
cmp
pop
add
notb
xor
inc
xor
sub
stc
push
push
cmc
mov
or
jecxz
xor
popa
or
adcl
xor
adc
inc
mov
rorl
cmp
and
xor
add
cmpl
es
dec
enter
xor
aad
mov
or
push
jge
mov
dec
mov
dec
xor
xor
add
xchg
pop
inc
lea
fmul
jne
or
std
mov
jle
mov
adc
push
int
xor
and
popa
xor
movsb
push
fists
adc
inc
adc
shrl
adc
loope
cmp
xor
imul
mov
dec
pop
jecxz
stos
adc
jb
xor
add
and
and
dec
mov
push
das
and
cmp
dec
xorl
lret
popf
mov
dec
pop
std
jge
dec
addr16
cmp
lods
out
xor
arpl
fs
loope
jg
lds
inc
mov
sbb
lret
sub
xor
shrb
or
sub
inc
push
pusha
loopne
fsts
inc
mov
leave
fidivl
fwait
mov
iret
mov
jg
add
xor
jo
xor
ljmp
subb
push
or
sub
xor
test
sub
jmp
jb
push
adc
out
push
ud0
inc
testl
imul
or
jbe
lcall
stos
xor
push
jnp
xor
fadds
sub
push
adcl
jp
push
das
mov
mov
sbb
and
in
loope
pop
mov
cmpsl
or
dec
imul
shlb
loop
mov
jbe
mov
gs
inc
mov
mov
out
inc
jne
sub
mov
xchg
sub
je
rorl
pop
lea
jns
or
aas
jb
jg
inc
inc
add
sbb
xor
jae
test
rcl
dec
push
ret
into
stos
stc
out
push
fisttps
or
fld
sub
mov
icebp
cli
add
xor
cmp
outsl
push
repz
pop
pop
hlt
xchg
xchg
ss
cli
in
lcall
cmc
jb
imul
jb
pop
popa
sbb
shrb
dec
out
repz
ja
mov
jnp
arpl
xchg
mov
mov
mov
icebp
pop
add
negb
push
fwait
adc
xor
popf
and
dec
test
mov
xchg
shl
mov
jle
fmul
enter
mov
outsl
ja
push
mov
cmp
popa
dec
xor
repz
out
ja
sbb
mov
cmpsb
pop
mov
icebp
xchg
cmpsl
mov
dec
test
hlt
dec
jg
cmpsb
lcall
lahf
fcomp
sbb
fcomp
cwtl
lds
mov
xor
push
cltd
lcall
inc
add
inc
ja
push
mov
or
out
cmp
leave
mov
lcall
xchg
mov
sub
or
mov
dec
outsl
pop
hlt
xchg
add
ss
xchg
xchg
push
je
sti
xchg
adc
andb
sub
daa
sarb
pop
jle
jne
icebp
repnz
inc
fs
pop
fisttpll
xchg
adc
mov
inc
divb
adc
in
sbb
xchg
mov
int3
pusha
xchg
push
pop
int3
call
fidivs
xchg
add
dec
inc
outsb
mov
xor
sti
insb
or
sbb
insb
push
xchg
inc
inc
push
cmpsl
xchg
dec
xlat
mov
push
dec
pop
mov
xchg
repz
sub
inc
shll
jb
inc
or
mov
xchg
push
adc
and
xchg
mov
adc
or
rcrl
aad
stos
pop
push
and
xchg
je
popa
mov
xor
jb
shll
ja
xchg
stc
hlt
lret
and
dec
add
aaa
ljmp
jl
xor
push
outsb
add
jp
lds
mov
cmp
push
sbb
bound
mov
cmp
adc
push
push
lods
mov
adc
cmp
popf
testb
subl
fwait
mov
inc
sub
insw
iret
mov
xchg
add
jb
shll
adc
in
and
repz
inc
lods
rorb
add
mov
test
xchg
jecxz
pop
pushf
shlb
mov
mov
sub
mov
push
test
add
push
mov
pop
mov
or
insb
aad
sti
inc
hlt
sahf
mov
mov
push
mull
dec
dec
out
or
jne
push
or
jae
jge
pop
jmp
push
cmpsl
mov
push
js
jns
mov
dec
pop
sbb
stos
xchg
push
push
mov
push
stos
xchg
repz
test
imul
rolb
arpl
out
idivb
ss
jle
cmp
repz
pop
sahf
cmc
stos
imul
shrb
cmp
cmp
mov
xor
push
ljmp
lea
xor
cmp
clc
icebp
mov
outsb
xor
push
jmp
icebp
ljmp
pop
inc
inc
push
mov
push
xor
and
mov
sub
xor
jo
jp
mov
das
or
lcall
xlat
xchg
imul
lret
xchg
sahf
aaa
dec
icebp
test
or
push
fsubrl
mov
daa
mov
sub
adc
cld
mov
rorl
xor
jmp
xchg
push
adc
sbb
nop
ret
ficoml
fisttps
xchg
xor
xchg
add
lcall
or
imul
jmp
dec
xor
mov
ss
or
mov
push
stos
dec
cmp
outsl
stos
pop
ret
ret
mov
inc
mov
pop
xor
mov
out
sar
icebp
xor
xchg
xor
jmp
addr16
ret
mov
mov
push
out
mov
out
mov
out
loope
dec
jns
xchg
mov
inc
mov
out
pop
jbe
aad
aam
cmp
xchg
sahf
repnz
mov
xchg
sarl
rclb
xchg
adc
fs
sub
ds
popa
rcll
cltd
dec
cld
inc
dec
mov
push
xchg
add
adc
cmp
inc
dec
jae
jbe
adc
push
cmp
jle
into
cmp
adc
fsts
add
inc
stc
lods
rclb
push
js
popf
pusha
fs
mov
dec
out
das
es
jg
pop
pusha
adc
dec
call
xorl
cli
xchg
cmc
push
xchg
and
adcb
push
aad
xchg
inc
imul
pushf
inc
ret
add
xorl
cmp
xchg
mov
mov
jae
test
push
xchg
movsb
pusha
movsb
push
xchg
mov
les
push
les
jae
and
ja
and
ja
jae
add
add
xchg
ja
hlt
push
inc
and
sub
bound
inc
sarl
inc
aaa
inc
inc
ret
jp
andl
jp
sbb
ss
test
dec
jp
push
push
pop
rcll
mov
or
inc
shll
pop
mov
lods
rclb
xor
out
push
add
imul
cli
xchg
mov
mov
pushf
rclb
pop
pop
xchg
int
mov
sub
fs
push
cmp
imul
xor
fs
cmp
sbb
je
adc
shlb
out
sahf
call
cmc
xchg
add
adc
and
jne
sub
lcall
jp
rclb
repnz
loop
pop
sub
inc
jbe
jnp
pop
ret
out
pop
or
cmpsb
je
stc
mov
sbb
les
push
push
adc
loope
jbe
in
fidivrs
cmpsb
adc
jg
test
loope
mov
rol
in
pop
push
jmp
mov
adc
jmp
mov
adc
push
inc
jmp
push
mov
repz
ret
iret
outsl
cltd
imul
dec
pusha
mov
mov
fwait
popa
les
lret
lret
ficoms
mov
ret
lock
push
movsl
loope
push
call
pshufw
xor
xor
notl
push
or
jg
and
pop
add
std
xor
sti
in
or
imul
inc
les
or
fucomp
jmp
stos
or
xor
mov
xor
dec
push
inc
mull
sub
push
or
sar
push
push
inc
jne
mov
mov
call
lds
dec
xor
rolb
push
repnz
adc
xor
stos
data16
orb
xchg
nop
mov
sarb
das
mov
push
movsl
inc
adc
adc
pop
mov
dec
or
xchg
adc
mov
aam
xchg
xchg
incl
arpl
jecxz
jg
xorb
adc
add
mov
push
xor
repz
xchg
subl
push
xchg
ret
push
addr16
js
ja
icebp
push
pop
xorl
mov
mov
lds
pop
or
addb
je
ja
cmc
mov
cmpsb
push
xor
inc
repnz
push
adc
fwait
divb
in
push
jmp
mov
call
ja
lea
or
mov
nop
je
repnz
push
lods
rcrb
fists
mov
dec
fwait
sbb
dec
cmp
ds
push
sbb
mov
and
daa
mov
xchg
dec
push
cmp
jns
inc
outsl
fcompl
dec
or
mull
pop
fisttpl
cmp
mov
fsts
and
into
mov
adc
sub
xchg
popa
mov
sub
adc
cs
sbb
leave
sbb
sbb
xchg
mov
mov
dec
aad
xchg
mov
push
adc
add
mov
js
add
sti
cmpsl
mov
mov
cltd
pop
dec
ret
js
push
ret
xchg
fs
pop
sti
repz
and
fs
int
pop
push
bsr
cld
inc
inc
addr16
aaa
jbe
inc
repz
jb
xchg
adcb
aam
xchg
jbe
pop
adc
enter
cmp
cmp
cmp
ja
mov
push
push
xchg
enter
mov
push
xor
pop
mov
fwait
add
push
orb
jbe
mov
xchg
stos
push
pop
mov
push
shlb
shll
ret
push
add
loopne
jmp
jp
xchg
inc
mov
push
lods
je
pop
sbb
loope
loope
fstpt
pop
ss
rcll
sub
scas
inc
addb
mov
arpl
mov
xor
fcoms
pop
data16
ja
js
add
clc
or
mov
idivl
push
and
fsubl
fsubl
xor
push
mov
jge
pop
lods
xlat
shrb
inc
mov
outsl
or
mov
iret
sbb
cmc
jne
out
sub
lock
fs
sbb
jp
mov
in
test
xor
out
dec
pop
ljmp
pop
push
xor
dec
xchg
push
fisttpll
adc
mov
dec
adc
xchg
js
fstpl
aad
and
push
idivb
je
je
push
inc
fcmovb
data16
mov
sub
adc
je
pop
mov
mov
xchg
fbstp
scas
sbb
xchg
mov
add
test
pushf
dec
test
rolb
xchg
pop
jle
lods
dec
cld
mov
jle
cmp
sbb
in
mov
jg
aam
adc
loope
push
lds
push
pop
ss
das
jmp
cmp
xchg
inc
adc
sub
push
into
push
popa
lret
inc
or
pop
cmp
jnp
ret
push
xchg
loope
sub
or
mov
lods
add
jb
sub
jo
aaa
mov
js
add
adc
push
push
mov
movsl
mov
and
jb
or
aaa
or
inc
pop
insb
mov
scas
push
add
add
ret
xchg
jle
enter
popf
ret
bound
mov
dec
fs
bound
shl
into
push
jmp
insl
sub
aad
mov
push
insb
xchg
adc
xchg
push
cmp
xchg
fists
push
sbb
mov
push
cmp
jnp
fidivrs
fsubr
das
pop
mov
outsb
xor
icebp
xchg
ljmp
sub
push
sub
and
or
sub
ss
inc
xlat
sti
add
into
shlb
xchg
leave
adc
lods
int3
ret
out
jbe
repnz
cmp
js
xchg
sarb
jbe
mov
xor
mov
mov
xchg
shll
jo
xor
or
add
mov
mov
inc
or
mov
sbb
call
mov
add
je
cs
inc
cmp
mov
mov
loop
jg
imul
dec
jb
ret
repz
bound
or
sarb
mov
ror
adc
xchg
fisttpll
dec
ss
mov
adc
jecxz
jp
loop
jae
repz
mov
fwait
xchg
inc
jb
pop
pushf
int
fisubs
sti
orl
gs
lock
push
jae
shlb
repnz
repnz
jg
mov
push
aaa
shlb
imul
jno
add
in
mov
push
xchg
jle
jb
scas
xor
push
xchg
cltd
xor
cs
jno
xor
out
cmp
int
inc
dec
push
inc
jle
push
xor
push
xchg
xchg
mov
mov
push
add
jp
inc
push
mov
arpl
mov
sbb
nop
adc
mov
mov
jl
jmp
mov
or
xchg
push
pushf
imul
dec
dec
dec
jmp
insb
data16
leave
enter
ss
shlb
dec
addr16
repz
and
add
or
rcrl
add
leave
cmp
lret
adc
mov
pushf
into
inc
push
ss
push
rcll
into
mov
jb
sub
int3
xchg
pop
mov
mov
push
mov
and
dec
outsb
aad
aas
scas
dec
mov
cmc
sub
pop
xchg
dec
lret
dec
roll
pusha
aaa
sbb
movsb
imul
or
aaa
inc
jle
loop
jb
cmpsl
push
or
push
loop
lds
rolb
push
test
dec
loopne
cmp
xchg
lret
ss
mov
cmp
cld
fbld
xor
jecxz
hlt
repz
or
ret
sub
test
inc
dec
mov
js
sub
test
mov
mov
mov
push
push
xchg
mov
inc
push
or
pop
insb
lods
add
push
pop
sbb
jae
and
cmpsb
xchg
mov
icebp
dec
sub
jmp
sub
add
pop
xchg
xchg
mov
ss
jae
dec
mov
xchg
dec
xor
shll
push
xchg
add
adc
sbb
jae
dec
test
add
mov
or
push
movsb
cmp
sbb
int
push
mov
ljmp
dec
dec
jge
jne
sbb
aam
sbb
mov
imul
sbb
mov
jb
xor
mov
push
add
bound
mov
sub
dec
shrl
shll
pushl
enter
stos
pusha
xchg
ss
dec
iret
push
loop
mov
outsl
jo
fwait
shlb
sbb
dec
mov
xchg
inc
adc
iret
pushf
mov
push
or
test
xchg
mov
int3
pop
xor
push
dec
leave
pop
xchg
xchg
add
add
lods
lock
xchg
dec
mov
add
outsb
push
xor
imul
movsb
iret
xor
sub
cmp
jae
sbb
cmp
lret
icebp
in
into
xchg
xor
cmp
xor
jge
jb
dec
lods
jno
jge
push
mov
and
inc
push
ret
jl
inc
xor
push
dec
stos
pusha
cmp
lock
cmp
mov
xchg
sbb
sub
lods
stos
insl
ds
inc
add
fwait
push
pusha
dec
xor
and
enter
int
adc
or
sub
cld
jns
pusha
fwait
outsl
mov
int3
and
and
mov
xchg
clc
icebp
adc
lret
xchg
cmc
jge
cs
push
jb
test
sti
mov
xchg
add
inc
mov
ret
pop
aaa
jecxz
fwait
mov
arpl
repz
jno,pn
test
jae
push
jb
sbb
sti
insb
cs
popa
pop
jae
dec
pushf
loop
enter
mov
addr16
js
lds
add
cld
in
filds
add
pop
call
fsubrl
data16
mov
in
repz
inc
adc
adc
ja
popa
adc
loopne
push
push
fcomi
mov
or
pop
cmp
xchg
xchg
or
mov
mov
xchg
das
inc
notb
pop
repz
fwait
mov
hlt
pop
jecxz
jp
pcmpgtd
xor
xchg
cmpsl
sub
cmp
lods
shlb
xchg
cli
push
bound
fmull
push
or
cmp
aam
shlb
and
inc
pop
lods
rclb
rcll
es
imull
std
in
imul
in
ljmp
xchg
adc
or
dec
mov
xor
rorl
inc
xor
js
xor
insl
es
push
dec
mov
insb
xor
cmp
xor
in
sti
fstp
fisttpll
sub
xor
enter
outsb
mov
jmp
sbb
enter
add
cmp
dec
cmp
xchg
cmpl
jp
std
insb
xchg
mov
leave
or
dec
ror
mov
lea
push
push
dec
data16
add
mov
mov
or
push
inc
and
dec
fstpt
les
fadds
inc
test
in
cmp
addr16
xor
mov
shll
jecxz
lcall
inc
idivb
mov
xchg
cmpsb
push
out
je
lock
fs
pushf
adc
mov
push
and
xchg
adc
push
jp
hlt
in
push
lea
repz
cmpsb
mov
jae
mov
push
xchg
mov
cmp
dec
rclb
pop
outsl
pop
adc
cmc
and
rcll
cs
movsb
adc
jnp
fmul
adcl
jae
mov
in
xchg
inc
push
lods
rclb
adc
sub
mov
sub
lcall
xchg
jb
push
pop
adc
pop
int3
cli
inc
lcall
xchg
je
xchg
shlb
push
jecxz
cmp
mov
push
divl
adc
rclb
test
lret
xchg
cmpl
push
cmp
sbb
and
sub
mov
mov
push
xor
mov
push
push
repz
inc
and
xor
popa
xor
mov
push
cmp
adc
ja
adc
mov
les
add
xchg
popa
icebp
and
add
xchg
stc
push
jae
rcll
mov
and
xor
pop
lret
ret
mov
mov
sti
je
mov
pop
ss
push
cli
jl
data16
scas
movsb
xchg
mov
popa
repz
sbb
fs
data16
xchg
dec
add
sub
sbb
data16
or
hlt
xchg
push
popa
ret
adc
sti
bnd
dec
ja
mov
xchg
push
mov
jbe
push
xor
rclb
dec
ror
lret
sbb
mov
rol
add
in
mov
loope
stos
cli
jl
je
nop
movsb
ret
cmp
jl
cmp
inc
or
icebp
lahf
nop
push
inc
pop
nop
xor
js
mov
xchg
cmc
fwait
adc
mov
mov
cwtl
jae
ds
pop
inc
xchg
xchg
adc
std
push
roll
sti
adc
push
pop
fs
push
pop
push
je
imul
fwait
jno
cmp
in
lods
aaa
stos
scas
push
in
es
loop
arpl
xor
ja
cmp
mov
cmp
jmp
fists
xchg
ljmp
es
mov
jbe
sbb
jb
icebp
or
insl
test
xor
sti
scas
loop
js
aam
fiaddl
fs
into
xor
xor
outsl
xchg
pop
dec
dec
or
mov
sub
movsb
sahf
or
mov
ror
ss
adc
je
cmp
aaa
mov
cmp
jae
xor
xchg
sub
sbb
lods
inc
dec
icebp
dec
cs
test
xchg
mov
push
test
out
push
mov
inc
out
cmovno
xor
inc
loop
mov
lret
adc
sub
dec
in
xor
or
mov
nop
test
movsb
repz
inc
inc
ja
shlb
xor
in
push
sbb
dec
pop
jp
xor
xchg
arpl
xchg
add
int3
roll
inc
lds
cli
aad
xor
mov
sub
add
test
add
push
inc
adc
sub
xorb
outsb
or
sub
mov
sub
add
jle
insl
cmpsb
jae
sbb
stos
hlt
int
das
mov
inc
insl
xchg
jb
jnp
or
cwtl
ds
pop
adc
ds
je
lds
enter
jl
pop
je
push
js
int3
or
popa
jns
mov
mov
jp
mov
cmp
cmpsb
pop
lcall
inc
lcall
xchg
mov
idivl
js
mov
fidivrl
cmp
adc
cli
adc
divl
ret
cwtl
and
and
cmp
out
stos
lock
clc
bound
bnd
sbb
bound
call
leave
mov
js
nop
rcll
in
mov
dec
iret
add
push
push
sub
sti
cmp
hlt
mov
mov
icebp
rclb
inc
add
cli
push
sub
push
xor
sub
jecxz
ret
out
pop
mov
mov
stos
dec
mov
leave
imul
mov
push
mov
js
push
imul
popl
test
sub
mov
mov
push
dec
jae
jbe
movb
mov
imul
jno
std
data16
push
call
mov
test
imul
adc
leave
imul
jmp
sbb
push
mov
dec
je
sub
sbb
xchg
add
and
adc
sub
sbb
ret
fists
jp
inc
aam
rclb
mov
add
cli
mov
data16
outsb
inc
bound
push
outsb
mov
outsb
push
sbb
insb
stc
mov
enter
pop
cmp
xor
inc
arpl
repz
cs
or
test
js
inc
push
cwtl
mov
mov
iret
scas
add
push
or
adc
jmp
inc
ret
js
and
fstpt
cmpsb
mov
icebp
fs
iret
ret
mov
mov
rclb
mov
repnz
insb
jno
cmpsl
sbb
int3
enter
nop
sub
lret
sub
sub
je
call
enter
sbb
mov
add
shlb
mov
adc
pop
movsb
push
mov
jne
dec
iret
mov
scas
icebp
gs
popf
dec
push
xchg
xor
xchg
push
xor
lods
xchg
aad
xchg
shl
mov
sbb
or
cmp
repnz
rclb
push
jo
add
andb
insb
hlt
push
cs
jae
and
lds
das
ja
adc
mov
ds
or
call
stos
cmpsl
test
test
add
iret
dec
test
cmc
jge
fwait
xchg
jnp
add
cld
enter
frstor
sarl
inc
sbb
sub
cmp
popf
repz
inc
pop
sahf
push
xchg
push
sub
and
cmp
pop
push
xlat
pushf
cmp
iret
in
cmc
mov
sub
mov
add
test
ljmp
push
sub
outsb
in
fs
pop
mov
cmp
sbb
mov
sub
sub
mov
adc
add
mov
ja
mov
mov
sbb
sbb
jge
sahf
into
jns
xchg
movsl
pushf
inc
pop
pop
jnp
popf
es
insb
cmp
jo
iret
out
cmc
jo
test
xchg
adc
pusha
mov
popf
addb
ss
pusha
int
cmp
shlb
into
cmp
pop
jne
mov
pop
xchg
sub
push
push
mov
fimuls
fisubs
xchg
push
testb
dec
push
shrl
mov
jb
mov
ficoml
adc
daa
xchg
inc
mov
out
or
mov
jnp
push
jmp
repz
jmp
sbb
dec
cltd
sub
into
leave
cmp
mov
outsl
xchg
outsb
mov
sti
xchg
lea
jo
nop
adc
ljmp
orb
push
mov
jnp
lret
adc
in
mov
mov
dec
dec
scas
xchg
ss
sub
inc
lods
xchg
mov
scas
ret
int
xchg
jno
xchg
mov
cs
cmc
pop
dec
add
imul
shll
dec
mov
cmc
mov
movsb
xchg
push
pop
int3
xchg
pop
lret
je
popa
fisubs
das
js
and
nop
cli
dec
stos
cmp
push
shlb
mov
adc
ja
aas
xor
mov
into
push
mov
loope
cmp
push
inc
mov
cmp
push
jb
xor
icebp
or
rol
ja
loope
test
mov
js
mov
xchg
add
adc
jb
shll
xor
xchg
mov
sub
jns
and
daa
addb
push
js
test
jae
fstps
je
enter
into
xchg
push
dec
xor
int
mov
sub
cmp
scas
lcall
js
adc
mov
cli
xor
inc
mov
push
push
push
add
mov
or
lea
lcall
repz
xor
sbb
push
iret
lea
jnp
xor
push
mov
shlb
push
push
xchg
xchg
lret
push
xchg
sub
xor
mov
lcall
mov
push
jae
mov
sub
icebp
pop
aaa
aas
and
aaa
mov
rorl
cmp
dec
cmp
or
sub
cmp
push
mov
xchg
jmp
push
jns
xchg
js
or
push
pop
jbe
xchg
xchg
xchg
rclb
mov
mov
cmp
push
js
push
repnz
out
stos
xchg
push
lock
cmp
pop
repnz
inc
sbb
add
xorl
and
aaa
xchg
xchg
and
or
mov
xchg
sub
pop
jle
inc
mov
je
and
push
cmp
div
sub
decl
ljmp
pop
sbb
mov
xlat
inc
jns
xchg
inc
gs
fbld
mov
mull
mov
xchg
inc
stos
mov
scas
xchg
vmwrite
jmp
dec
jae,pt
adc
lahf
jle
pusha
enter
add
icebp
dec
out
mov
pusha
repz
insl
enter
cmp
enter
out
push
mov
or
xchg
add
mov
push
je
je
push
rep
clc
xor
xchg
jne
sub
xor
repz
pop
add
jae
jnp
lret
pop
xor
mov
xchg
sub
lret
jae
sub
lret
jne
push
cmp
xchg
mov
push
sub
adc
xchg
sbb
jne
and
scas
aam
pop
fldenv
xor
xchg
or
xchg
xor
xor
add
arpl
nop
pop
and
mov
xor
adc
jge
outsb
inc
adc
nop
xor
dec
mov
xor
jmp
bound
cwtl
mov
repz
daa
int
popf
mov
mov
iret
xchg
add
sbb
sub
js
pusha
or
movzbl
fsubrl
pop
pop
leave
roll
sbb
stc
add
and
or
or
insl
mov
scas
jl
adc
dec
lret
pop
lea
mov
add
inc
stc
xor
pop
jbe
mov
loop
or
aas
sbb
inc
clc
jp,pt
jo
push
xor
out
popf
add
mov
mov
push
add
jecxz
dec
xor
nop
and
xor
popa
jbe
sub
adc
jo
fwait
stos
lea
loop
xor
test
push
inc
xor
repz
sbb
xchg
mov
stc
cmovp
lret
dec
jle
adc
les
fimuls
adc
stos
dec
orb
mov
lods
jle
adc
aam
sbbl
pop
and
mov
push
fbstp
cltd
ds
mov
and
aam
cmpsl
rcrl
test
push
fs
and
push
sbb
add
or
push
dec
pop
jo
sub
lret
fwait
cli
jle
insl
jnp
pusha
cmp
xchg
push
adc
mov
xor
repz
cltd
mov
int3
ret
dec
call
fidivrs
sub
cmp
inc
pop
mov
and
jl
dec
lods
sbb
mov
sub
push
stc
aaa
test
popa
xlat
dec
mov
xor
out
ror
xor
cld
orb
loopne
jl
adc
enter
jnp
clc
nop
mulb
adc
out
sbb
adc
in
ljmp
dec
xchg
rcrl
inc
outsl
mov
xor
jecxz
cmpsb
xor
in
lret
dec
je
add
or
push
cmp
dec
mov
push
xor
or
sbbb
sbb
mov
jmp
das
inc
sbb
in
xor
sub
mov
sbb
cmpsl
outsb
out
dec
mov
jne
ljmp
dec
xor
enter
in
out
xor
sub
dec
add
cmpsb
push
add
and
rclb
rcrb
dec
and
push
cmp
gs
dec
mov
cmp
mov
adc
repz
bound
push
cld
jp
xor
xor
in
jecxz
pop
imul
mov
mov
sarl
enter
sbb
mov
ds
loope
dec
lret
dec
xor
mov
sbb
jmp
es
pop
out
fdivs
jbe
mov
std
sbb
pusha
lods
cmp
pop
clc
notl
inc
loopne
loop
sbb
addr16
inc
mov
idivl
adcl
adc
sahf
aam
in
into
jecxz
adc
adc
es
inc
out
stos
sbb
mov
jo
add
int
xor
or
sub
out
aam
shll
mov
xchg
xor
movsb
dec
cs
inc
je
shll
orl
lret
adc
xchg
add
jmp
mov
rcll
xchg
adc
adc
push
mov
hlt
sub
cmp
xchg
cmc
and
icebp
mov
lcall
push
test
hlt
pop
lcall
rcll
hlt
add
xor
push
fmulp
xchg
and
and
mov
mov
lods
jle
in
fadds
push
lds
push
sub
jp
cltd
jecxz
push
stos
mov
mov
add
imul
bound
adc
push
mov
push
repnz
and
inc
enter
push
dec
or
xor
pop
push
js
cwtl
cmp
mov
lds
bnd
cwtl
mov
mov
xor
push
pop
sbb
test
or
xchg
ss
adc
xlat
push
mov
out
dec
jnp
xchg
adc
push
add
pop
adc
and
subb
jo
pop
dec
xor
mov
loop
xor
push
jp
xchg
push
jae
xchg
xor
push
ret
mov
cs
jp
mov
xchg
rcll
mov
and
cs
sbb
cmp
push
mov
and
imul
stc
fnstenv
iret
mov
dec
mov
fnsave
out
dec
or
xor
enter
stos
scas
bound
lcall
sti
pop
sbb
inc
pop
adcb
sub
mov
mov
or
ret
add
call
hlt
xor
sahf
popf
ret
loopne
jno
and
xchg
xchg
je
rclb
sti
fists
js
fs
movaps
xor
push
add
mov
sub
bswap
mov
xorb
mov
ret
jle
hlt
clc
icebp
xor
outsl
mov
and
dec
fildl
rcll
pusha
sub
and
aam
icebp
xor
xchg
xchg
add
pop
sub
fucomip
xor
into
fnstsw
cmpsb
pop
dec
ret
mov
arpl
jecxz
jp
push
lcall
jb
int3
push
xor
repnz
cmp
xchg
add
inc
jmp
sbb
sub
popa
cli
mov
push
mov
int
pushl
mov
pop
dec
xor
outsb
push
lcall
xor
repnz
jp
push
xchg
add
fdivrs
xchg
ret
je
in
push
xchg
cmp
dec
je
ficompl
ljmp
int3
notl
int3
ret
push
add
lods
inc
jnp
pop
push
or
cmp
dec
add
cld
cld
jp
jns
lcall
insb
ret
fcoml
mov
adc
xchg
adc
faddl
mov
adc
xor
adc
bnd
mov
xor
push
pop
jae
adc
push
mov
mov
jp
nop
bnd
out
ficomps
jle
rclb
rolb
push
sti
loop
mov
sbb
mov
arpl
jae
loop
push
and
imul
mov
sub
cli
pop
jp
pop
fisubl
cltd
or
sub
sub
fwait
adc
add
inc
mov
xchg
shlb
and
loop
xchg
xchg
cmc
shlb
adc
in
mov
mov
rcll
repnz
movl
out
xor
in
jmp
and
mov
sti
insb
cs
sbb
cmp
xor
aas
cli
aaa
out
or
and
mov
sbb
and
jno
fs
mov
mov
cli
xchg
mov
push
push
into
cmpsb
mov
push
cmc
jnp
rclb
cs
in
fiaddl
in
and
xchg
stos
add
lds
jnp
les
adc
mov
std
cmp
neg
ficompl
cmp
xor
leave
adc
ljmp
sarl
cmp
cmp
fstpl
stc
inc
ret
fcoml
sbb
shlb
fsub
lock
inc
push
sarl
cmp
mov
inc
mov
adcb
arpl
faddl
std
jp
sbb
xchg
stc
xchg
mov
jnp
cmpb
in
mov
jnp
mov
fists
mov
rcll
pushf
rclb
add
add
shrb
leave
and
adc
inc
mov
clc
icebp
push
rcll
sbb
push
mov
outsl
mov
shll
lcall
xchg
jp
shrl
and
les
mov
add
mov
aaa
test
pop
dec
jge
test
cmp
nop
jbe
xor
inc
jne
mov
inc
mov
push
imul
cli
shrb
sub
je
mov
shl
dec
sbb
add
fdivrs
js
jae
loopne
xor
dec
mov
jae
aas
push
out
repnz
add
cli
repnz
mov
xor
movsb
inc
dec
lret
lods
imul
xorl
pop
adc
dec
adc
aad
xor
lret
out
push
xchg
in
mov
push
sub
xchg
clc
push
repnz
roll
adc
mov
aad
xor
mov
ja
repz
pop
cmc
cmc
jnp
mov
insb
lods
pop
jnp
cmc
mov
mov
cmp
movsl
mov
into
cwtl
mov
cld
inc
inc
mov
push
xchg
outsl
pop
addr16
jbe
xor
pop
sub
mov
jge
jbe
dec
cmc
push
repz
insb
push
mov
push
mov
add
shlb
cmp
and
ss
inc
jge
sub
in
nop
fists
xor
or
cwtl
or
sbb
xor
das
shlb
adcb
fiaddl
push
ret
add
scas
daa
adc
es
xchg
xchg
sbb
lcall
push
clc
jbe
inc
inc
mov
pop
mov
pop
mov
das
mov
arpl
in
ficoml
lods
aad
sbb
movsl
arpl
int
push
adc
cmp
mov
sub
jg
push
mov
dec
inc
mov
repnz
bnd
dec
mov
je
jl
cmpsl
outsb
sarb
pop
ss
aas
sarb
xor
fdivl
cmp
lahf
pop
inc
cmp
jbe
jmp
mov
mov
jecxz
scas
jnp
dec
fbstp
ljmp
adc
int3
lea
repz
leave
adc
dec
sub
dec
xchg
lds
xchg
push
scas
push
repz
lret
pop
jne
cmp
jp
mov
pop
xor
dec
aaa
mov
les
mov
push
sub
xor
scas
inc
outsb
rcll
std
das
fwait
xor
xor
push
and
mov
mov
cmp
je
sbb
push
xlat
aas
jmp
fiadds
cmpsb
push
repz
xor
adc
mov
mov
jno
jecxz
filds
sub
xor
sahf
rcl
sbb
cmpsb
push
mov
sub
mov
outsb
push
and
inc
cwtl
pop
mov
and
ja
ret
xlat
adc
jnp
in
test
lods
and
sub
aaa
mov
jb
int
rcrl
xchg
push
sub
cmp
pop
shlb
push
dec
pushf
ds
xor
mov
cmp
insl
shrb
jae
and
lcall
ja
inc
mov
cmp
jns
adc
bnd
cli
lret
mov
inc
push
inc
test
xorl
ds
std
jo
mov
and
or
cmc
mov
adc
notl
dec
mov
pushf
cmp
fidivl
sbb
xor
rcrl
punpckhdq
sbb
xrelease
lds
jb
lods
sub
add
rcr
adc
cs
xor
repnz
nop
pop
push
icebp
scas
inc
push
shr
fwait
sub
mov
cs
shlb
pop
movsb
shll
ficoml
adc
in
pushf
scas
jae
lret
in
aam
aam
in
sbb
sub
daa
aad
xor
mov
xor
mov
inc
cmp
inc
movsb
mov
cmp
pop
xchg
pop
xor
jbe
bound
sbb
mov
jl
jle
mov
lcall
outsb
jo
mov
mov
mov
sar
mov
mov
ficoms
loopne
shlb
dec
pmulhuw
int3
xor
shl
call
xor
incb
add
or
xor
adc
sbb
and
and
sub
sub
xor
into
adc
dec
les
fadds
mov
mov
andb
shr
loop
mov
subb
sbb
mov
push
mov
bound
jae
fmuls
adc
push
fdivr
rcr
fwait
mov
lds
jmp
inc
jns
inc
pop
imul
sbb
dec
push
mov
inc
dec
dec
into
xor
mov
and
leave
or
cmp
mov
add
sub
cmpsb
fcom
jmp
mov
enter
pop
sub
push
icebp
jl
sbb
iret
shrl
int3
inc
int3
xor
pop
mov
xor
cmp
sbb
mov
sub
push
sbb
sarb
cmpsl
jns
subl
push
imul
mov
jno
add
push
leave
test
scas
xor
sbb
call
loope
sub
sbb
and
mov
add
adc
pop
jno
dec
cld
xor
push
xor
das
sub
inc
mov
add
mov
loop
xchg
xor
stos
stos
ljmp
pushf
xor
jg
andl
mov
add
mov
dec
lods
pushf
xchg
iret
stos
adc
xor
or
adc
sti
push
mov
push
out
inc
pusha
push
or
push
out
shrl
inc
fstps
push
shlb
ror
xchg
adc
and
ret
adc
or
xlat
lock
pop
popa
push
or
ds
dec
movsb
neg
pop
mov
sub
mov
inc
xor
cli
jp
sub
sbb
stos
push
push
loope
xor
and
adc
inc
in
mov
mov
into
in
sub
add
inc
jg
jae
out
and
push
push
xor
icebp
imul
and
daa
dec
jno
xor
adc
popf
xchg
jle
movsb
cmp
mov
push
pusha
insl
cmc
cmp
fcomps
sub
jp
mov
out
cmpsl
mov
mov
pop
mov
mov
insb
and
int
bound
mov
cmp
cmp
sarl
adc
pop
popf
xor
nop
and
add
outsl
fisttpl
mov
aaa
ret
popf
adc
jmp
lea
or
popf
lahf
add
or
xchg
fstpt
xor
stc
and
xchg
xor
scas
cld
or
lock
inc
sub
clc
icebp
adc
xor
jo
mov
sbb
in
flds
int
sub
cvttps2pi
test
mov
lret
xor
cli
xor
xlat
sti
cmpb
push
push
push
stos
ret
mov
aaa
mov
in
pop
push
testb
clc
sub
ret
bound
push
pop
cmpsb
out
lock
test
inc
stc
aam
repnz
xor
imul
pop
xor
ss
mov
call
das
rorb
hlt
pop
iret
push
jo
int
xor
imul
sub
lret
cmpsl
ror
xor
lcall
dec
xchg
nop
rcll
clc
fidivs
mov
mov
div
xor
movsb
test
sti
and
lods
xor
lds
adcl
fmuls
adc
sub
xor
jg
adc
xchg
movsb
mov
insb
shl
outsl
dec
lret
xor
mov
pop
lock
stos
push
cmc
dec
push
xchg
sub
lock
or
or
xchg
scas
in
out
fstp
mov
dec
xchg
call
mov
xchg
imul
xor
loopne
sub
stc
or
add
out
mov
cmp
mov
adc
mov
rorb
orb
fwait
out
enter
inc
adc
clc
fldcw
fprem
xchg
sbb
ljmp
mov
mov
inc
xor
and
in
test
dec
lea
add
dec
lods
pop
xchg
mov
xchg
fdiv
test
iret
daa
testb
push
inc
popf
enter
insl
mov
jg
lahf
dec
xor
mov
or
iret
sahf
xor
int
insl
imul
pop
lods
xor
fcoms
add
and
sti
js
cmp
pop
das
adc
pushf
sbb
es
xchg
cmp
subb
and
loope
in
push
shrl
dec
mov
push
adc
and
xor
loope
lock
les
push
mov
insb
dec
dec
rcrb
xor
fldt
xor
lret
popa
sar
xchg
cmpsb
xor
psllw
mov
xor
mov
ret
enter
pop
mov
mov
iret
push
or
sbb
pushf
ss
dec
adc
push
add
js
xor
movsl
mov
cmpb
xor
call
jl
xchg
xor
jbe
movsl
dec
cmc
sub
divl
lahf
cmp
movb
or
xor
mov
push
int3
decl
test
adcl
mov
adc
dec
mov
loop
sar
xor
outsl
or
jb
sub
push
cs
add
popa
mov
xlat
xchg
mov
xor
sub
or
mov
inc
out
add
inc
sahf
mov
ret
dec
xor
outsl
insl
push
lret
movl
lock
daa
dec
sub
push
xor
mov
xor
pop
test
xor
icebp
xor
and
lods
sbb
popa
adc
xor
and
roll
les
cmp
addb
lret
jecxz
xchg
mov
or
fwait
cmp
pushl
pop
add
daa
shlb
or
xor
mov
insl
adc
jmp
pop
dec
mov
cmp
dec
xor
dec
mov
fisubs
xor
cmp
xor
sarl
scas
jmp
int
pop
inc
ret
or
repz
out
mov
rcr
mov
push
jle
adc
das
shl
ds
lahf
iret
inc
xor
xor
lret
xor
and
xor
ds
xor
and
adc
inc
loop
mov
pop
or
les
xor
inc
xor
adc
lea
jbe
adc
mov
psraw
aad
jbe
jmp
out
arpl
push
fildl
test
cmpsb
movsl
aaa
in
sub
mov
xor
pop
loopne
push
cmc
lods
mov
xlat
add
sbb
int3
sbb
xor
xchg
inc
loopne
jns
xor
or
sti
mov
gs
loope
xor
cli
jmp
mov
aad
cmc
adcl
loope
xor
dec
mov
xor
gs
xor
sbb
icebp
cmpsb
sahf
and
mov
les
dec
cmp
sub
xor
daa
push
jno
int3
icebp
sub
and
in
and
sahf
lods
scas
jl
sub
sbb
add
sbb
add
inc
lock
repz
out
andl
jns
xchg
fsts
push
or
push
sbbb
nop
and
and
or
mov
loope
insb
add
xor
inc
daa
loopne
fiadds
enter
dec
jmp
leave
imul
mov
icebp
pop
jno
jmp
xchg
test
iret
imul
or
loope
filds
nop
fstps
cli
out
sub
mov
xchg
fidivs
mov
push
cmpsl
jmp
mov
shl
dec
icebp
adc
xor
sub
arpl
mov
icebp
movsb
pop
xor
cld
into
shlb
shl
fiadds
lcall
mov
pop
inc
adc
push
xor
jbe
xchg
or
mov
roll
xor
sub
lock
cmp
adc
pop
rol
mov
and
adc
movsb
orl
adc
xor
fcomi
add
sbb
stc
pop
pop
xor
popf
dec
push
jmp
std
xor
mov
adc
xor
sbb
repnz
push
dec
addr16
inc
out
xor
popf
lcall
movsb
mov
rol
xor
fwait
je
xor
repz
ljmp
xor
push
loope
sbb
push
pop
ss
jmp
pop
call
enter
or
add
inc
loopne
fwait
stos
inc
inc
mov
cld
repz
and
xor
in
negl
xchg
aaa
arpl
and
addb
shrb
insb
mov
jle
repz
ficoms
adc
pop
mov
mov
shrl
inc
xchg
or
push
mov
mov
xchg
adc
inc
and
out
andl
imul
sub
sti
inc
xor
pop
jnp
push
shll
lds
shrl
mov
cld
cmc
mov
rorb
mov
and
xor
aas
cmpsb
out
hlt
cld
xchg
push
sahf
lea
push
sub
adc
shlb
ret
xor
rorl
pop
rolb
and
pop
mov
clc
mov
xchg
out
xor
push
mov
movsb
fisubs
dec
mov
inc
sub
in
mov
pop
sub
xor
sti
test
xor
cltd
or
xchg
mov
es
sbb
push
xor
add
cmp
sub
pop
cli
mov
lods
dec
and
jl
mov
xchg
sub
push
adc
data16
push
push
xor
scas
sbb
lahf
lcall
jb
xchg
in
adc
pop
adc
jmp
pop
cld
stos
jle
and
inc
sbbl
fbstp
xchg
sbb
iret
xor
push
adc
push
dec
loopne
test
daa
test
or
sbb
lods
fidivs
sub
jo
imul
iret
addr16
out
xchg
sbb
pop
and
stos
and
or
push
xor
lahf
fstpt
adc
and
add
sbb
xor
lock
faddp
xor
lret
cltd
mov
outsb
and
fildl
mov
jne
cmc
xchg
in
stos
jae
lcall
xor
imul
and
jb
jnp
orl
xor
xchg
mov
stc
xor
js
sub
fucomp
xor
dec
stos
push
out
add
pop
xor
jg
push
mov
fsin
sub
sub
xor
fmull
xor
xor
push
mov
in
int3
ss
xor
pusha
cmp
xor
xor
jmp
mov
xchg
xor
cmc
xor
jle
adc
add
sbb
pop
push
insb
paddq
sub
out
xchg
popf
xchg
cli
sub
std
pop
dec
push
jecxz
push
or
inc
adc
out
icebp
shll
out
push
pop
inc
js
mov
xchg
jb
arpl
fcompl
inc
scas
xor
xchg
adc
stc
call
fs
mov
pop
aad
sbb
mov
call
sbb
push
pop
sahf
xchg
sbb
je
cwtl
xor
xor
mov
out
adc
xchg
jns
in
das
cmp
lods
mov
or
cmc
cmp
out
jecxz
outsb
add
sti
out
cmp
inc
test
dec
clc
sub
mov
nop
loope
in
scas
push
stc
sub
nop
ds
in
xor
scas
and
call
pop
repz
cltd
dec
mov
inc
fxch
inc
xor
push
sbb
pop
xor
push
enter
stos
mov
fldl
inc
dec
push
pusha
push
sbb
sub
pop
out
push
jb
mov
push
inc
jge
jp
std
mov
mov
mov
lahf
sbb
aad
das
lcall
sub
test
adc
outsl
scas
xor
fidivs
fbstp
xchg
add
hlt
and
aad
add
jns
mov
jo
loop
ds
js
xor
mov
xchg
xchg
mov
mov
xor
ss
add
ds
jle
ds
into
lret
inc
add
mov
ficomps
imul
xor
lods
fldt
into
add
push
xchg
jno
add
pushf
inc
mov
test
pop
xor
sub
test
aas
shl
sub
mov
leave
sbb
xchg
xchg
scas
rclb
addr16
loop
stos
pop
ss
sahf
in
adc
dec
fnstenv
loope
or
and
adc
sbb
in
pusha
aas
push
or
dec
scas
sub
mov
inc
sub
in
mov
push
je
mov
push
add
aas
inc
lret
xor
and
fstps
std
scas
xor
pop
xchg
add
xor
clc
subl
mov
insl
mov
jns
daa
inc
loope
scas
dec
test
push
sbb
mov
int3
push
loope
out
aam
push
dec
xor
add
xchg
adc
dec
lret
dec
jmp
and
dec
pop
mov
xor
std
sbb
mov
or
test
and
sbb
pop
shrl
fistl
jmp
mov
mov
mov
scas
insl
jmp
or
push
mov
pop
adc
pop
xor
xchg
xor
push
dec
in
push
pop
sub
xchg
test
push
xor
jmp
dec
dec
test
xchg
fsubl
push
stos
outsl
sub
icebp
scas
xlat
dec
retw
mov
add
mov
xor
cs
mov
cmp
xor
in
mov
out
push
mov
jle
mov
les
inc
or
cmp
shlb
hlt
adc
in
ficoms
inc
lods
pop
or
sub
push
mul
adc
jp
test
imul
rcl
ror
xchg
mov
clc
cmp
push
xor
or
sub
hlt
fdivl
jmp
jne
xor
sti
call
fmull
mov
lods
mov
std
adc
or
sahf
lds
aad
or
mov
inc
jl
mov
repz
inc
scas
lea
cltd
lret
xor
adc
icebp
mov
pusha
fptan
mov
cmc
mov
mov
leave
sbb
adc
outsl
stos
rorl
loope
es
ds
es
or
sbb
in
lods
add
sbb
mov
xor
xchg
inc
lret
dec
mov
aam
dec
shll
call
xchg
add
xor
mov
push
sbb
enter
cmp
sbb
les
popf
xor
mov
fimuls
fsts
es
xchg
sbb
dec
xchg
inc
lods
mov
mov
out
shl
lods
jg
inc
xlat
pop
outsl
and
out
sub
pop
xor
push
push
push
stos
hlt
stc
xchg
cwtl
mov
sub
testl
push
mov
mov
sti
add
repz
adc
xchg
imul
push
xlat
xchg
test
dec
adc
shlb
or
and
inc
cs
jae
test
cmp
pop
sbb
xchg
iret
in
stos
mov
rcll
cmpsl
sbb
and
repz
js
cmp
lods
mov
cmp
or
cmp
mov
fidivrl
mov
das
insb
xchg
adc
mov
lods
stos
inc
clc
xor
pop
or
push
xchg
inc
lret
xor
pusha
mov
add
leave
cmc
or
push
pop
add
scas
mov
sbb
jno
inc
imul
mov
fsqrt
jg
dec
int3
mov
in
mov
fnstcw
xchg
bound
hlt
mov
or
mov
jle
inc
std
mov
push
jge
dec
sub
mov
outsl
jo
cmpsl
jno
push
aad
xchg
daa
pop
rorl
sahf
ror
mov
sub
pop
and
xor
sbb
roll
cmp
or
cmpsb
sub
push
mov
pusha
pop
icebp
jbe
cmp
adc
out
xor
lcall
adc
pop
mov
jb
and
sub
and
sbb
data16
in
mov
pushf
xchg
jb
adc
xlat
int
jmp
ror
sub
rol
push
cli
pusha
adc
pop
sbb
xor
and
shll
sbb
xor
cmp
mov
loope
cmp
dec
add
outsl
adc
pop
dec
xor
pushf
cld
xchg
push
shlb
inc
inc
mov
sub
sahf
shrl
sub
lea
cmp
xor
mov
insb
je
cld
pop
je
bound
push
jo
add
pop
and
lcall
int
xchg
add
sbb
ret
out
out
jmp
mov
movsl
dec
ja
push
inc
icebp
xor
push
add
push
pop
fdiv
xchg
inc
scas
sub
xor
mov
cmp
pop
push
rorl
jl
jge
and
or
dec
and
negl
iret
pop
gs
dec
lds
sahf
push
aam
int3
cmp
lea
ds
add
xor
shlb
cmp
dec
or
xor
lods
jmp
jne
std
lret
stos
scas
fnstsw
or
push
cmp
cmp
loope
dec
fcomip
lea
out
adc
sub
and
js
xor
scas
cmc
neg
pushl
jmp
sbb
sub
xor
lods
out
shlb
out
add
testl
or
add
or
rcll
xchg
and
cs
lods
lahf
iret
xor
jmp
inc
xchg
xor
lods
loope
xor
fstp
fcoml
popf
lahf
imul
insl
xor
pop
jmp
adc
hlt
pop
mov
movsl
es
sbb
std
inc
ja
xor
or
popf
add
xchg
jecxz
sbb
dec
mov
daa
xchg
jp
add
inc
jle
out
adc
scas
fcomps
lret
out
inc
mov
mov
outsl
adc
cltd
clc
push
sbb
int3
cmp
sahf
sub
mov
and
fwait
rolb
xor
jmp
xor
or
dec
adc
pop
orl
mov
and
cmp
addl
mov
mov
pop
arpl
lea
int3
inc
add
lock
mov
pusha
call
mov
fidivrs
jmp
js
dec
imul
fs
repnz
daa
mov
cmp
sbb
lcall
sbb
fwait
sbb
jns
shrd
lock
sub
hlt
js
or
add
icebp
fcmovbe
jmp
aad
das
ljmp
or
ja
push
cmp
outsb
xor
and
mov
fisttps
add
add
dec
outsb
push
insb
ss
stos
adc
inc
xor
mov
jno
sub
mov
inc
push
mov
and
inc
shrl
adc
and
repz
pop
mov
push
sbb
flds
mov
shlb
lcall
andl
out
dec
jmp
add
lcall
inc
sub
loopne
fwait
sub
mov
mov
sbb
mov
and
jmp
adc
dec
cmc
adc
mov
cmp
test
inc
icebp
xor
and
divl
and
lock
adc
mov
xor
lea
sbbl
outsb
mov
cmpsl
outsl
or
pop
mov
pop
into
test
xor
es
fimuls
cmpsb
in
mov
xchg
mov
sbb
and
sub
movsb
icebp
dec
cld
fs
cmp
xor
cltd
lcall
jle
in
sub
mov
stos
or
and
mov
sub
mov
into
mov
xor
pusha
seto
les
repnz
lahf
mov
fbld
cwtl
mov
jno
insl
fldl
push
xor
mov
xchg
or
sbb
push
bound
cmp
xor
dec
test
inc
pop
jb
jmp
jg
adc
sbb
or
pop
andl
and
lcall
movsb
inc
sub
outsl
gs
je
add
and
inc
das
push
in
xor
scas
fistl
rolb
push
imul
and
mov
adc
sub
inc
addr16
movsl
mov
mov
inc
fdivr
inc
test
push
enter
jmp
das
dec
pop
mov
inc
prefetch
jb
push
sub
adc
sub
ja
lods
scas
shll
addr16
mov
pop
rcll
mov
test
shrb
out
lock
shl
or
lea
dec
jno
add
inc
xor
sbb
dec
rorl
xor
inc
out
sub
pop
aam
mov
jg
adc
mov
xor
sar
iret
adc
xor
or
add
mov
dec
sub
iret
dec
adc
or
icebp
gs
fsubrl
jns
out
mov
sbb
lea
stc
jmp
call
push
es
push
and
jne
jl
ds
repz
adc
or
outsb
jmp
or
mov
pop
pop
mov
out
cmc
mov
idivl
dec
cmp
pop
xor
dec
mov
xchg
out
stos
mov
cmp
sbb
clc
mov
in
push
aam
xor
push
mov
cmp
clc
pushf
jae
mov
or
cs
mov
cmp
mov
mov
repnz
data16
test
mov
je
push
xlat
repz
inc
ret
push
jne
dec
mov
shlb
jbe
insb
dec
mov
cmp
hlt
clc
ret
jne
xchg
lcall
and
push
adc
ja
adc
mov
jnp
icebp
pop
insb
xor
insb
inc
push
imul
xor
jle
sub
sbb
pop
call
mov
bound
xor
jp
sbb
lcall
movsw
and
mov
cmpsl
cld
test
lret
jnp
aas
popa
sar
mov
jl
xchg
mov
mov
in
inc
xchg
mov
in
sub
sbb
mov
pushf
data16
cld
mov
mov
pop
loopne
sbb
jns
andb
popa
inc
xchg
xlat
mov
jne
pop
fistps
test
leave
xchg
sbb
xor
fidivrl
je
adc
push
push
mov
repz
test
pop
cltd
mov
sub
jp
xor
push
xchg
jae
sbbl
adc
cld
cmp
push
adc
insl
mov
js
pop
cld
dec
pop
pop
xchg
xchg
jle
lcall
mov
mov
and
lock
jp
push
cmp
shll
aaa
pop
hlt
jno
sbb
aaa
pop
xor
aas
daa
pop
idivb
aaa
mov
push
mov
push
mov
xor
add
mov
add
inc
mov
xor
lret
push
ficoml
inc
bound
jmp
pop
repnz
test
push
add
pusha
or
mov
repz
ss
aas
push
rorb
mov
sbb
aaa
lahf
lcall
mov
dec
ss
outsb
xor
sbb
pop
xor
mov
or
sahf
daa
fildll
inc
incl
pop
sbb
mov
mov
xchg
push
sahf
rcrl
mov
das
test
mov
fstpt
ss
lcall
cmpb
sti
mov
pop
mov
jae
inc
jns
filds
mov
mov
pop
fnstsw
repnz
inc
mov
js
fstpt
pop
sahf
dec
lods
pop
cmp
cmp
jge
out
aad
pop
add
clc
push
cmpsb
inc
mov
mov
inc
add
and
fildl
cmp
jb
cmp
neg
xlat
fimull
push
dec
inc
leave
ds
pushf
push
cmp
pop
or
lods
das
push
cmp
bswap
lods
fdivl
lahf
push
mov
lret
loop
ss
sub
xor
inc
es
stc
adc
pop
cmp
or
test
sahf
sub
jae
cmp
negl
clc
mov
push
inc
js
fdivp
xor
loopne
xorb
ss
adc
aaa
je
sbb
js
sbb
or
mov
cmp
add
mov
sub
stc
cwtl
fdivrs
mov
insb
pop
repz
js
pop
jne
js
xchg
in
inc
inc
mov
cwtl
adc
add
psubw
and
mov
cmpl
pop
mov
mov
jecxz
shrl
fcomps
push
adc
add
fidivrs
xchg
mov
push
mov
popa
loopne
aam
and
sbb
pop
rcrl
out
sub
stc
jg
adc
xchg
cltd
sbb
lods
adc
pop
test
jle
mov
push
sbb
mov
clc
jns
cmp
sbb
cmp
ret
fnstenv
popa
fldcw
xor
add
dec
sbb
mov
lcall
add
stc
lcall
fldt
sbbb
cmp
mov
stc
movsl
mov
or
jp
in
mov
das
fistl
sahf
out
mov
movsl
aaa
scas
fisubrs
and
mov
push
mov
pop
jae
pop
jg
cltd
pop
xchg
lcall
mov
adc
and
fdivp
loope
jae
insb
sub
decl
xlat
and
jp
in
addr16
int3
lcall
mov
xchg
push
and
pusha
push
cmc
xchg
mov
fdiv
push
or
dec
adc
repnz
or
xchg
pop
sub
stos
push
sbb
out
call
xor
adc
je
and
xchg
loope
int3
xor
mov
js
aam
pop
jp
hlt
pop
mov
adc
pusha
bound
xor
pushw
idivb
insb
fdivs
push
outsb
pushf
clc
xorb
xor
sbb
sahf
sbb
jne
mov
shlb
lods
scas
push
cmp
mov
ja
pop
jns
and
adc
adc
xor
pop
adc
icebp
mov
xor
pop
adc
push
test
cmp
sub
jb
xchg
jmp
xor
je
pop
mov
jbe
sub
xor
mov
xor
xchg
xor
data16
cwtl
push
aaa
push
adcb
cmpb
mov
neg
push
mov
push
jae
mov
dec
xor
fsubp
cld
sbb
loop
push
enter
in
cmp
cmp
fwait
std
fistpll
inc
inc
inc
inc
dec
dec
dec
xor
pop
pop
pop
pop
popa
arpl
imul
jns
jge
addl
leave
aam
ja
and
xor
jne
mov
pop
ret
jae
xor
data16
fmul
and
in
adc
inc
addr16
lahf
clc
dec
imul
xchg
mov
cmc
push
push
xor
das
xchg
out
add
cmp
out
addr16
jg
xor
or
lods
jmp
cmp
pusha
aam
jns
hlt
sbbl
out
out
fwait
test
repnz
sbb
pop
addr16
call
cltd
das
aad
push
test
add
sub
adc
push
js
cmovb
and
stos
mov
shll
dec
fnop
hlt
mov
push
movl
inc
fdivrs
adc
out
sbb
xor
dec
mov
xor
or
hlt
int
lahf
cmp
repz
in
inc
jecxz
in
fidivl
mov
or
lods
cmp
ljmp
ljmp
xchg
shl
aaa
pop
mov
xor
pop
or
push
push
push
xlat
sub
mov
xor
dec
dec
jecxz
adc
dec
lock
adc
xlat
xor
inc
int
adc
add
adc
sbb
cld
int3
int
adc
nop
dec
inc
push
jo
mov
rcr
pop
jae
hlt
sbb
xor
pop
addr16
iret
or
xchg
mov
sub
xchg
fdivs
push
int3
rclb
clc
stc
push
adc
scas
ss
xor
nop
pop
out
xor
cmpsb
jecxz
in
loop
xor
pushf
push
sbb
int3
pop
xor
jb
loopne
shll
ret
outsl
sbb
mov
subb
stos
mov
test
pop
xor
and
or
rorl
pop
inc
push
mov
sub
mov
xor
cltd
pusha
sbb
je
inc
mov
xor
dec
iret
shll
ret
mov
ficoms
sub
sbb
jmp
in
out
int3
mov
mov
fsubrl
imul
mov
mov
pop
push
push
ret
mov
xlat
push
sbb
inc
adc
push
jne
cs
and
xlat
xor
fwait
push
pop
decb
test
pop
jl
xchg
and
jns
jns
cmpsl
loop
rcrb
fwait
jle
sub
dec
daa
inc
pop
mov
js
xchg
adc
ret
add
es
xor
jo
fwait
je
and
mov
repz
lea
xor
sbb
fcoml
mov
ljmp
inc
push
fadds
outsb
mov
sub
xchg
push
shrb
addr16
push
rclb
cwtl
xor
sbb
sti
les
and
in
lret
scas
loopne
scas
out
dec
jge
adcl
lret
adc
popf
cmp
in
sahf
cmc
inc
mov
xchg
mov
gs
aad
loopne
xor
subb
xlat
mov
mov
in
inc
and
sub
bound
pop
push
push
and
out
inc
or
adc
fsubs
in
leave
xchg
fwait
stos
xor
lds
std
push
cmp
xor
lods
mov
add
adc
test
or
aam
xor
dec
xchg
rcrl
push
adc
dec
nop
dec
dec
je
push
xor
loopne
adc
inc
inc
sbb
sub
xor
or
xchg
mov
negl
xor
imul
bnd
sub
jle
loop
xchg
sbb
mulb
xor
outsl
mov
fs
xchg
xchg
jp
push
pop
jnp
faddl
push
lret
xor
xchg
sarl
loope
sbb
xor
mov
stos
pop
mov
das
cmp
lcall
js
inc
repz
adc
test
into
jge
xor
add
jp
xchg
imul
int
movl
divl
nop
cmc
in
lods
cmp
or
sub
or
jb
and
int3
push
cld
sub
add
fbld
cmp
lret
cmp
sbb
or
dec
mov
cs
push
and
shl
pop
cmp
fnstcw
je
in
push
sub
xor
ret
addr16
out
repz
sbb
xor
stos
ljmp
pop
push
fmuls
adc
add
test
push
dec
xor
pop
fildl
xor
inc
add
xchg
insl
adc
stc
mov
xor
in
push
mov
inc
rol
rcrl
aas
cmc
jmp
fwait
and
inc
fisubrl
enter
fbld
xor
pop
popa
fsubr
or
adc
sbb
inc
lea
ficomps
int3
adc
roll
mov
mov
cli
stc
lcall
mov
outsl
push
or
sub
rclb
xor
outsb
lret
nop
mov
cli
add
imul
cs
sbb
jae
shll
lcall
or
data16
stos
icebp
push
sbb
sbbl
adcb
fadds
outsl
outsb
cmpsl
sar
rol
xor
jbe
lcall
ja
xor
lea
imul
jecxz
loop
push
xor
ficompl
fcmovnbe
pop
mov
xor
dec
lods
cmp
adc
xor
and
in
sub
jecxz
bound
addl
jl
push
inc
sbb
xor
scas
test
adc
adc
mov
and
mov
pop
adc
cltd
ja
and
adc
adc
fstl
insl
mov
rol
push
push
scas
sbb
out
xor
mov
mov
lret
cmp
mov
mov
xor
orb
paddsb
out
daa
pop
arpl
sbb
pop
cmp
cmp
xchg
into
pop
push
inc
in
lret
popa
repnz
sbb
and
out
das
xchg
fidivrs
dec
cmp
lret
fwait
push
add
popf
out
push
lods
dec
out
repz
lods
rclb
push
and
das
jmp
psrlw
xor
out
int
fnstsw
pusha
xchg
mov
and
push
mov
in
hlt
inc
leave
push
add
aad
jno
inc
psraw
insl
sub
cltd
jecxz
imul
jmp
stos
add
mov
push
in
or
sarl
mov
mov
mov
cmc
lcall
xor
dec
xor
add
xor
pop
loope
cli
sbb
scas
int
insl
mov
imul
js
xor
je
lret
mov
push
pop
push
add
adc
stos
addr16
adc
fmulp
hlt
pop
cmp
adc
fcomps
nop
test
lcall
inc
cmc
fs
jo
sbb
add
xchg
jns
and
sub
push
cmpsb
xor
and
aam
add
cmp
adc
add
push
jl
adc
add
sub
xchg
xor
int
arpl
xchg
fisubs
out
in
mov
addr16
or
or
imul
cmpsb
mov
flds
xchg
fadd
mov
dec
ret
loope
jo
mov
adc
push
ja
aaa
scas
dec
dec
dec
xor
mov
cmp
call
fs
xchg
mov
xor
in
fldcw
outsl
push
xchg
dec
jmp
rcrb
inc
flds
xor
outsl
add
shll
inc
addr16
xor
shrl
jl
push
or
mov
iret
movsl
stc
scas
xchg
enter
jp
aad
sbb
jl
arpl
mov
xchg
notl
mov
sbb
inc
xchg
stc
adc
inc
movsb
fmul
push
xor
lea
xor
ud1
and
rolb
add
mov
jmp
data16
int
clc
out
mov
lock
daa
push
mov
xor
jb
sub
and
in
cmp
movsb
fld
and
mov
jge
or
lods
jb
ljmp
sbb
cmpb
aad
lret
adc
sarb
push
fbld
push
in
push
lret
repnz
pop
mov
xor
inc
mov
stos
in
adc
mov
mov
jnp
cltd
add
xor
push
pop
aam
xor
sbb
xor
repnz
daa
lea
mov
xchg
test
mov
lock
cmpsl
xor
xchg
add
mov
int3
xor
ds
pop
hlt
jo
les
ret
out
repnz
xor
imul
cmc
movsl
repz
dec
add
ljmp
inc
jo
ss
xlat
shlb
pop
jl
lcall
sbbb
add
icebp
je
pop
fcoms
mov
xor
test
pushf
push
outsb
xor
sbb
jno
gs
push
out
mov
xchg
jnp
xor
or
sbb
xchg
stc
jo
scas
loop
mov
mov
pushf
or
call
lock
por
mov
mov
js
xor
cmp
mov
pop
pop
push
xchg
aaa
in
xchg
jae
mov
mov
xor
enter
push
outsl
cmpsl
or
dec
adcl
addr16
aad
lahf
pop
cmc
lret
xchg
cmp
inc
dec
mov
sti
into
pushf
xor
cmpsl
int
sub
add
add
addr16
aaa
mov
inc
push
scas
mov
sbb
dec
pop
or
fnstsw
pop
popa
xor
clc
fiadds
sbb
test
xor
or
jnp
cmc
bound
xor
out
insb
cmp
xor
xchg
cltd
movsl
es
sar
xchg
xor
hlt
mov
jl
mov
mov
test
jo
jecxz
xor
adc
repz
nop
xchg
jnp
mov
mov
jb
lret
data16
mov
fwait
lock
sti
sub
xor
repnz
jne
mov
push
rorb
incb
outsl
sarl
jb
sub
dec
lods
cmpsl
adc
je
dec
fcoms
push
stos
sbb
xchg
pop
imul
push
mov
xor
or
pop
mov
xor
mov
push
les
pop
mov
or
lods
loopne
xchg
stos
scas
dec
mov
xchg
inc
int3
bswap
sbb
insl
add
mov
repz
dec
adc
ss
fwait
pop
test
jnp
stos
mov
pop
jge
push
xchg
jmp
imul
frstor
jb
out
jecxz
lea
lahf
mov
jne
jmp
int
scas
dec
cmp
mov
cld
call
pop
loop
add
sbb
jno
cmp
sbb
and
outsb
dec
in
test
into
fdivrl
andb
enter
je
push
sti
adc
pushf
repnz
lret
mov
divl
lret
cld
adc
lods
xor
pop
idivb
in
cltd
ret
lds
push
add
add
jmp
jg
inc
push
mov
popa
test
sub
test
push
adc
test
cmc
inc
mov
dec
dec
xor
push
ss
das
icebp
out
inc
xorb
sub
repz
push
fwait
rcr
xor
cld
sbb
test
das
clc
jecxz
int3
cmp
mov
fld
cltd
dec
fucomi
pop
imul
int
int3
xor
cmp
and
xor
jns
inc
add
add
rcll
test
vzeroupper
out
mov
popa
fidivl
push
pop
xchg
xchg
stos
movsb
xor
inc
imul
and
dec
mov
test
es
dec
lods
jge
xor
aad
and
xlat
xchg
add
push
inc
sub
aad
scas
imul
sahf
aad
adc
inc
inc
push
movl
addr16
dec
cmpsb
adc
jne
xchg
adcb
lcall
sub
imul
push
xor
adc
xor
not
lea
ljmp
je
add
xor
jo
push
cmpsl
dec
xor
sub
inc
xor
out
imul
decb
adc
std
dec
mov
jge
in
pusha
notl
pop
sub
jb
int3
cmpsl
mov
aaa
mov
add
lods
ficomps
xor
push
add
xchg
movsl
scas
rcl
and
add
jle
sub
mov
leave
mov
adc
addl
mov
mov
xchg
xchg
into
cmp
jg
xlat
mov
and
xchg
nop
dec
sbb
xchg
inc
xor
pop
lret
int3
cmc
xor
lret
xchg
inc
sbb
and
push
faddl
fstpt
mov
and
adc
mov
popf
jnp
pushf
lret
pusha
cmp
cmc
xor
add
in
mov
lock
lret
xor
inc
fdivl
testb
ret
stc
jle
push
sub
dec
rclb
xor
in
sub
pop
mov
mov
jle
xor
popa
jae
aas
adc
sub
shl
ja
xchg
mov
insb
xor
jnp
cmpsb
cmp
stc
nop
adc
push
xor
add
outsb
int3
test
mov
stos
xchg
pop
mov
lock
push
ja
cmp
xor
dec
ss
rolb
adc
mov
imul
sub
orb
addl
xorb
xor
push
aas
xor
xor
jnp
or
pop
dec
cmp
xor
mov
ret
adc
push
jnp
mov
icebp
jmp
sub
pop
add
cli
or
hlt
dec
lret
mov
pop
push
test
insl
sub
ret
mov
iret
xor
mov
shrb
mov
pop
sub
mov
int
frstor
call
jg
sbb
cs
xchg
pop
clc
jmp
xor
out
add
sub
ds
mov
adc
jg
call
and
xchg
pop
dec
aaa
enter
popf
inc
jge
dec
ja
xor
sub
int
xchg
xor
rcl
mov
xor
lcall
stc
stos
adc
add
out
jns
mov
lea
imul
xor
push
jecxz
sub
sbb
aad
pop
dec
insb
out
xor
js
roll
or
add
loopne
adc
mov
sahf
lcall
inc
push
sbb
inc
js
cmp
jnp
inc
pop
xor
popa
jo
push
jno
frstor
xor
dec
pop
lret
jmp
fimuls
dec
mov
in
sbb
frstor
xor
pop
das
cmpsl
movsl
pop
or
out
clc
jmp
mov
push
sub
push
jns
inc
ret
shrl
scas
jb
sti
sahf
stc
lock
out
shufps
or
mov
repz
into
sbb
imul
jmp
xor
and
jg
xchg
cmp
das
fldenv
mov
rol
into
rorl
dec
add
test
xchg
mov
xor
loopne
lea
add
pop
ja
scas
repnz
jno
inc
int
adc
sub
dec
and
mov
sub
push
bound
sbb
sbb
xor
push
mov
sbb
adc
nop
test
dec
pop
add
adc
dec
aas
dec
cmc
dec
stc
cmp
xchg
xor
sbb
shl
nop
push
xlat
pushf
fisubl
inc
or
xchg
dec
adc
dec
pop
cld
mov
mov
adc
mov
jno
cmp
bound
stos
mov
scas
adc
cltd
popa
cmp
cmp
ja
push
ret
sub
stc
xchg
jmp
into
inc
pop
lret
pop
into
add
mov
jae
in
jnp
lahf
adc
jns
lods
push
sbb
daa
dec
dec
call
xor
push
or
lods
ljmp
in
xor
call
push
mov
ret
test
mov
mov
mov
popa
xor
fld
xchg
xor
pop
push
call
sahf
mov
xor
popa
mov
int3
stos
enter
xchg
and
fistpl
push
pushf
les
xor
and
push
data16
fmul
fnstsw
cmp
adc
popa
je
adc
xor
jle
mov
sub
xchg
nop
mov
sbb
mov
test
or
ljmp
xchg
mov
inc
xchg
pop
xor
sub
js
mov
shlb
mov
fyl2xp1
jne
int3
adc
sub
mov
xor
mov
movsb
lods
inc
cmp
cmp
cmp
loope
cltd
out
xor
inc
mov
aaa
ficoml
cmp
mov
ljmp
jl
adc
sbb
inc
mov
test
sub
push
pop
jecxz
push
arpl
xor
and
sub
dec
and
mov
cmp
lahf
jne
je
jmp
inc
inc
test
inc
push
dec
pop
repz
mov
call
repz
pop
lret
dec
jp
mov
test
and
mov
es
and
int
mov
or
xor
sbb
out
outsl
das
jns
pop
daa
xor
jns
lret
loope
lock
sub
in
and
test
mov
xor
push
jecxz
aad
and
add
push
repz
add
xor
popa
and
daa
sub
aas
movsb
inc
fcoml
xchg
or
pop
imull
add
cwtl
xor
sub
icebp
push
xor
sahf
and
xor
pop
sbb
or
lods
pop
xor
cmc
cmp
pop
rcll
ss
movsb
icebp
stc
jmp
inc
sub
add
xor
pusha
cmp
stos
ret
fidivl
jae
and
mov
xor
aas
and
sbb
xor
add
push
das
xor
sub
movsb
adc
sbb
mov
add
pop
xor
xor
jbe
movsb
or
int3
xor
mov
adc
push
decl
lea
or
and
push
adc
aad
dec
sbb
mov
cltd
adc
xor
fstpl
jl
int
inc
sub
jne
xchg
sbb
push
lods
push
or
and
xor
mov
fs
cli
adc
cld
xchg
lret
and
push
rolb
loopne
push
dec
adc
xor
sub
sbb
jae
xchg
mov
xlat
adc
xchg
add
dec
push
les
rolb
adc
aam
xor
int
das
xor
movl
jae
mov
push
push
fs
xlat
leave
push
lret
pushf
xchg
outsb
in
jno
xor
push
test
push
data16
insl
movsl
movsb
popa
adc
loopne
pop
fildl
lcall
dec
cltd
xor
xchg
cmp
inc
inc
outsl
push
cmp
pop
mov
jb
pop
xchg
lds
dec
cmp
cs
jno
dec
jns
sub
mov
mov
shlb
out
xor
push
jnp
mov
shlb
jae
adc
or
imul
cwtl
aam
sahf
add
lahf
lds
xchg
icebp
jge
inc
shrb
mov
dec
test
jno
xor
sub
call
xchg
adc
cmpsl
icebp
bound
fnsave
iret
cmp
je
or
jno
mov
sub
clc
or
and
sbb
dec
sarb
aad
sbb
push
xor
stos
insl
lods
mov
ret
mov
pusha
dec
sbb
into
sub
test
cltd
divl
sub
ret
rcll
mov
repz
das
sbbb
cmp
mov
shlb
adc
pop
and
and
imul
pushf
ds
adc
or
or
jle
pop
lods
xchg
nop
sub
repz
hlt
outsb
cs
lods
outsl
xor
pop
cmc
or
pop
mov
xchg
ds
push
jl
lret
cli
bound
or
dec
xor
fsubs
dec
stos
cmp
mov
jbe
add
test
testb
pop
dec
sbb
push
inc
scas
jg
xor
rcrb
out
mov
push
outsl
xor
mov
inc
inc
ret
push
insb
popf
cmp
pop
xchg
dec
dec
pusha
sub
xor
fmul
aas
cmc
cmp
push
xchg
pop
add
inc
sbb
xchg
xor
push
xchg
push
mov
insb
in
scas
and
icebp
or
sub
adc
mov
and
xor
sbb
je
lea
sbb
add
push
mov
or
mov
loope
adc
mov
sbb
lret
cmp
pop
adc
xor
lods
lret
stos
xor
das
int3
aas
call
cmp
cmp
add
fsubs
push
adc
jo
iret
lods
and
push
xor
sti
mov
xor
and
jg
dec
push
xor
jno
rol
rorl
adc
mov
mov
cwtl
xchg
dec
fwait
jmp
add
dec
mov
jo
xor
push
xlat
fdivr
insl
lret
subb
psllq
jmp
je
sbb
push
cwtl
mov
out
xchg
xor
add
cmp
inc
icebp
dec
add
mov
lahf
stos
add
push
cmp
in
dec
xchg
sbb
jne
ret
jmp
push
cmpsb
xor
or
sahf
lods
lahf
cwtl
pop
mov
paddsw
mov
les
pop
mov
into
dec
or
add
notl
push
push
dec
jle
mov
push
add
sbb
stos
inc
mov
cmp
adc
xchg
adc
or
hlt
imul
pop
sbb
pushl
mov
aas
cmp
jb
addr16
arpl
push
dec
shl
mov
or
jno
push
pop
movsl
sahf
mov
push
xchg
xor
ud0
int3
cmp
arpl
mov
nop
and
mov
pop
xor
outsl
addl
mov
lahf
jg
mov
loope
shl
cmp
push
loop
sub
mov
xor
dec
fstps
xor
mov
ljmp
fldt
adc
inc
cld
xor
jg
divl
dec
je
and
lods
mov
sbbb
mov
fnsave
mov
out
inc
test
or
fs
stos
mov
cmp
pushf
push
fstl
aam
mov
dec
insl
sub
dec
xor
shll
cltd
outsl
or
push
fsub
jae
sub
dec
jbe
inc
int
faddp
hlt
subb
mov
stos
icebp
xchg
jp
test
pop
aam
mov
lret
cmp
xor
xchg
inc
jne
jbe
xchg
sarb
lods
lcall
xor
inc
mov
jle
leave
in
push
sbb
aaa
es
fs
clc
cmp
xor
cmp
mov
pop
mov
dec
adc
aad
cmpsl
stc
cmp
push
adc
cmc
push
or
fnsave
jo
cwtl
add
out
outsl
add
dec
insl
mov
mov
test
xchg
jg
xchg
leave
mov
fistl
dec
cmp
cmp
lret
clc
xor
cmpsl
mov
popa
xor
mov
xchg
xor
fcoms
jnp
aas
xorb
test
fmull
imul
mov
mov
xor
or
push
jmp
pop
xchg
fidivrs
jno
fadd
out
xor
scas
inc
psubusw
mov
test
addr16
xor
mov
cmc
int3
jno
add
dec
lret
adc
adc
push
arpl
jle
fwait
inc
cmp
inc
adc
push
cmp
push
pop
imul
inc
cmp
repz
pop
mov
mov
stc
mov
push
or
xchg
push
push
jge
int3
sbb
pop
xor
ss
sbb
jmp
inc
dec
mov
mov
jp
xor
loope
add
mov
mov
push
xor
pop
mov
jle
lcall
mov
enter
std
shrb
inc
jns
xor
push
stc
or
aam
adc
push
xor
jae
lods
fwait
shl
pop
in
cmp
inc
push
cli
cmp
xchg
popa
push
fucomi
add
ss
enter
rcl
xor
pop
sbb
in
jge
xchg
mov
adc
in
sub
jmp
iret
mov
lods
movsl
mov
xor
negb
in
mov
and
popf
pop
xchg
pushf
sbb
hlt
imul
loopne,pn
jl
xor
and
xor
aam
bound
in
fsubs
inc
and
jmp
xchg
stos
and
jecxz
push
jg
xor
es
aam
mov
mov
dec
xor
mov
mov
xor
mov
aaa
xor
xchg
mov
xor
cmp
ss
ja
push
or
add
gs
imul
adc
insb
jmp
or
aad
incb
mov
sub
add
popa
inc
or
test
dec
add
dec
inc
jge
mov
leavew
jl
fs
xchg
ja
push
push
mov
lret
xor
inc
cmp
inc
xorl
inc
sub
sbb
jno
dec
inc
sbb
stos
lods
cmpsl
test
jo
xor
loope
fnsave
mov
fcomip
popf
xchg
inc
jl
cmpsb
int
inc
ficomps
xor
xor
js
int3
mov
mov
orl
addr16
stc
inc
add
xchg
in
sbb
psllw
imul
dec
jge
cmc
cmp
push
dec
cmp
adc
jb
xor
dec
leave
lret
jns
out
dec
nop
xor
xor
inc
push
sub
fmull
add
cltd
mov
cmpb
pop
and
jl
xlat
jl
jns
ds
mov
sub
frstor
inc
xchg
aas
es
fstpt
cmp
test
cli
mov
dec
in
jmp
adc
push
add
jecxz
mov
xor
cmp
pop
push
mov
test
lcall
mov
mov
push
adc
xchg
pop
je
or
push
xor
pop
xchg
lahf
push
repnz
xor
mov
and
sbb
xchg
xor
xchg
shl
sbb
fbld
movups
adc
test
lcall
repnz
lea
in
cmp
out
xchg
dec
or
adc
jg
cmpsb
sub
sub
adc
out
int3
aam
cmp
inc
cmp
icebp
mov
fs
movsl
fucomp
xor
xor
mov
lods
pop
cs
sub
mov
insl
negl
cld
xor
push
rorb
ds
pop
sti
xor
jecxz
test
cwtl
dec
ret
mov
xor
pop
and
adc
inc
lret
jmp
sahf
aaa
inc
cmp
mov
mov
aad
ljmp
dec
dec
lods
fnstsw
jne
push
bound
inc
jno
pusha
xchg
or
sub
or
icebp
imul
xor
sbb
fnstsw
insb
inc
adc
add
cmc
outsl
sarb
push
and
jae
popa
cld
in
ret
sub
aad
movsb
rclb
test
je
cli
jne
push
xrelease
aad
test
cmc
mov
add
xor
call
fadd
xor
mov
dec
into
loope
xor
xor
pusha
imul
adc
xlat
int3
pop
push
movsb
addr16
jns
xchg
sub
jge
adc
je
xchg
shr
dec
sub
movsb
hlt
cmc
mov
cmp
xchg
adc
adc
xchg
jno
adc
sbbl
pop
outsb
xor
mov
aas
xor
cmpl
adc
mov
hlt
pop
xchg
fidivrl
adc
xor
scas
xor
sti
jecxz
mov
sub
sub
insb
rorb
xor
sub
xor
sti
sub
and
xchg
movsb
das
inc
jp
xlat
jle
add
sbb
loopne
push
nop
dec
dec
dec
xor
push
and
adc
mov
mov
mov
xor
sbb
xchg
fcoms
or
lods
sahf
lcall
pop
sub
push
mov
adc
shlb
xor
int
mov
add
cmc
in
sbb
ret
mov
lods
pushf
push
pop
mov
out
sti
pop
rolb
sub
mov
mov
test
stos
mov
push
xor
add
into
dec
lds
push
sti
xor
adc
movsb
movsl
out
xor
and
jne
jg
inc
sbb
adc
gs
leave
xor
or
cli
adc
dec
adc
xor
mov
aas
push
dec
xorb
sub
shll
gs
out
scas
test
xor
out
sti
sbb
add
es
subl
inc
mov
xchg
loope
enter
ss
repz
jg
xor
arpl
xor
mov
mov
je
xor
sahf
sub
pop
jne
xchg
ss
xor
out
imul
pop
mov
sub
nop
adc
xor
test
sbb
push
in
xchg
sarl
mov
xor
out
dec
adc
mov
in
pop
hlt
test
lea
xor
push
push
lods
movsb
xchg
ficompl
lods
dec
pop
fwait
xor
sti
cmp
xchg
push
mov
mov
nop
sub
aad
or
cmp
xor
sarl
xorb
xor
imul
sahf
or
add
mov
in
rcrl
mov
push
sub
leave
test
dec
fbstp
out
push
jg
insl
push
leave
xor
mov
add
xor
ja
lock
mov
rcl
pusha
mov
xor
xchg
add
xor
out
mov
sbb
insl
xor
leave
push
lahf
pop
xchg
je
xchg
jl
ljmp
imul
stc
pop
cmp
lods
in
xor
inc
pop
cmpsb
xlat
addl
fidivl
dec
jb
jae
inc
xor
popf
lcall
int3
gs
cmc
imul
fdivrl
adc
xor
out
fsts
xor
and
loope
ljmp
inc
divl
adc
lods
movsl
mov
push
pushf
les
sub
sbbb
or
push
mov
mov
push
mov
xchg
fildl
jne
lds
pusha
out
jg
and
pop
xor
in
iret
test
arpl
add
cmp
mov
test
xor
popa
and
xor
fmuls
mov
add
in
xor
sti
fs
push
outsb
nop
xor
pop
pop
mov
gs
xor
jns
xlat
cli
daa
cltd
mov
ja
in
lock
cmp
dec
xorl
adc
xor
std
movlps
ds
jl
aam
inc
xor
stos
dec
dec
clc
dec
popa
xor
lahf
push
pusha
adc
mov
sub
xor
jno
xchg
call
cwtl
mov
dec
xor
mov
mov
int
and
cmp
sub
sbb
das
sbb
int3
insb
xor
jmp
xchg
push
stos
imul
or
pop
sbb
scas
and
into
repz
pop
add
fidivl
mov
push
in
es
gs
mov
repz
rorl
xor
fldenv
inc
out
mov
mov
xchg
mov
sbb
xor
lret
rcr
xor
out
mov
mov
jp
ds
roll
ja
add
push
iret
and
mov
fstpt
dec
push
pop
stos
lods
ret
inc
insl
aad
xor
lcall
inc
add
push
mov
mull
push
inc
mov
add
xor
fcoms
out
es
mov
sub
f2xm1
push
cltd
xor
fdivrs
aaa
xor
fisttpl
loope
daa
add
sbb
xor
mov
jmp
imul
mov
push
adc
inc
fldt
negl
out
leave
push
pop
enter
mov
out
or
mov
test
pop
mov
mov
pushf
cmp
xor
test
xchg
mov
scas
xlat
or
inc
sbb
out
test
xor
sub
das
dec
fidivl
ss
and
lods
cmp
sub
adc
xor
pop
adc
mov
nop
push
sbb
hlt
mov
xor
out
mov
pop
dec
add
mov
xor
dec
sbb
rcrb
and
out
cmpsl
jecxz
pop
jmp
xor
pop
andl
jge
dec
mov
sub
insb
out
or
sbb
mov
pushf
sbb
sbb
mov
es
imul
adc
lea
xorb
push
or
dec
inc
push
test
jg
sub
outsl
sub
and
testl
adc
lods
pop
jge
dec
inc
mov
mov
inc
mov
xor
fwait
aam
inc
inc
add
xor
data16
inc
add
stos
xchg
das
int
pop
lret
popf
xor
sub
mov
fcmove
cmpsl
fdivs
xor
pop
stos
jno
ret
pop
add
pop
lea
adc
fbstp
fucomi
orl
xchg
outsl
mov
inc
jmp
add
mov
cmp
sub
ja
ss
mov
mov
adc
dec
dec
and
xor
rorl
sub
xor
xor
xlat
xchg
cltd
je
xor
dec
aas
js
pop
jns
hlt
jb
mov
sub
and
jo
inc
mov
scas
inc
xchg
cmpsb
fcmovbe
shrl
pop
enter
mov
fxch
inc
das
sub
call
fldt
daa
stos
ud1
std
jb
popa
xorl
xor
sti
cmpsb
xchg
dec
fdivs
insl
sbb
jecxz
mov
xor
sbb
hlt
insb
pusha
mov
fisttps
ficoml
ja
out
or
ret
shl
push
sbb
addb
xchg
fmulp
fwait
mov
hlt
call
cmc
cmp
mov
rolb
or
xor
mov
lock
outsl
ja
lret
adc
cs
dec
mov
insb
mov
add
sub
cmpb
sti
in
jg
xor
pop
int3
cwtl
call
lods
test
push
adc
xchg
cltd
repz
inc
subl
leave
outsl
data16
adc
jle
cli
fists
es
mov
inc
xchg
jecxz
or
or
xor
ret
xor
inc
aam
dec
inc
mov
sbb
ret
adc
idivl
sub
mov
mov
sub
inc
int
mov
lds
dec
cmpsl
dec
xchg
xor
mov
movsb
out
adc
dec
es
insb
lret
les
xchg
mov
xchg
cli
imul
and
std
sub
lahf
xor
pusha
xor
push
cmp
push
scas
pop
sti
in
xchg
push
cmpsb
int3
pop
into
xor
add
xor
and
icebp
fisubrl
mov
jae
pop
dec
cld
les
add
ljmp
xor
lds
sub
add
add
push
cld
or
pushl
push
jge
dec
and
jno
fnsave
mov
insb
enter
inc
insl
xor
add
xor
push
adc
pop
mov
xor
adc
rcll
vphaddudq
xor
popa
push
fwait
xor
mov
loope
scas
inc
mov
jns
sub
or
cmpsl
or
movsl
push
mov
cltd
push
xchg
ljmp
mov
jno
or
xor
xchg
punpckhdq
cli
adc
inc
mov
cs
test
cmpl
test
cmpsl
add
sarl
orl
outsl
mov
mov
adc
gs
cmp
ret
inc
cmpsl
cli
scas
cld
inc
pop
dec
xor
and
lods
add
mov
jae
out
mov
int3
imul
sbb
xor
data16
xor
push
xchg
xor
or
in
xor
iret
dec
ficompl
flds
shlb
dec
adc
push
sub
negl
imul
loope
fs
jmp
repz
xchg
in
sbb
push
ja
push
ret
nop
sub
into
stc
jl
loopne
adc
in
int
dec
das
mov
mov
fwait
xor
xlat
fbstp
sub
sbb
mov
in
lret
jbe
inc
mov
pusha
adc
adc
sub
aaa
test
xor
lock
leave
and
xchg
sti
or
and
mov
insb
lods
test
xor
pop
inc
pop
pushf
xchg
mov
xor
sar
inc
rcll
push
pop
jo
xchg
das
adc
sbb
daa
inc
cld
lods
insl
pop
lds
rcr
and
out
xor
insb
ret
add
dec
and
push
negl
sub
adc
pop
fidivl
jle
popa
test
mov
xor
out
outsb
xor
inc
dec
xchg
and
cmc
sbb
in
mov
outsl
decl
lock
push
movb
pop
and
in
mov
jno
dec
dec
stos
adc
or
xor
cld
dec
mov
cmp
mov
lods
sub
ljmp
mull
dec
clc
push
ret
pop
les
imul
cmp
jne
sbb
jle
mov
test
add
xor
clc
xor
add
pop
data16
cmc
cli
jne
sbb
lods
xor
jl
lahf
pushf
cmc
or
in
inc
jo
dec
cmp
mov
push
and
push
xlat
xchg
repz
scas
or
push
adc
loope
fistpl
mov
xor
mov
popf
push
and
dec
adc
das
imul
adcb
lret
xchg
sbb
inc
mov
test
call
pop
lret
stc
xchg
cmpsl
adc
test
loopne
xor
mov
into
mov
fiadds
ds
pop
cmpsb
xor
adc
pop
dec
cmpl
mov
lcall
adc
lahf
xchg
scas
lods
movsl
pusha
stos
adc
push
sub
cmpsb
jae
in
sub
jns
mov
mov
xchg
cmp
mov
mov
push
js
cmpsb
into
xor
imul
xor
dec
pusha
sahf
mov
add
iret
pop
sub
mov
ljmp
push
aaa
rcrb
scas
out
scas
xchg
int3
popa
lret
cmc
int
inc
stos
fldenv
pushf
or
scas
cmp
sbb
push
inc
adc
dec
aas
or
stos
pop
call
fcmovne
cwtl
in
fmull
cltd
push
push
addr16
insl
xor
sbb
jge
inc
sub
dec
inc
pop
addr16
xor
jmp
mov
fisttps
push
insb
adc
fcoms
cli
pop
aad
mov
and
adc
jb
and
jno
stos
push
mov
cmp
mov
xor
jno
xor
xchg
inc
in
in
jecxz
out
sub
popa
jg
mov
mov
lret
mov
sarl
aam
je
xchg
fsubl
iret
std
pop
push
inc
mov
fs
xorl
or
iret
repnz
push
dec
or
fwait
xchg
lcall
mov
xchg
idivl
xor
sub
icebp
mov
mov
aaa
ret
out
jne
xchg
add
jbe
pop
cmpsb
addr16
sub
mov
inc
jnp
sbb
lock
dec
in
add
pop
pop
aaa
xor
popa
add
xor
loopne
mov
mov
orb
pushl
js
xchg
iret
pushf
jnp
dec
xor
dec
lea
cs
mov
movsb
xor
loop
fdivrs
xlat
cmpsl
inc
test
pop
push
and
inc
inc
leave
ret
mov
cs
xor
movl
loopne
mov
sahf
pop
insb
xor
xor
jg
pop
cld
push
popf
pop
nop
inc
lret
xor
daa
pop
iret
fnstcw
adc
cs
hlt
das
call
leave
subb
popa
sbb
pop
adc
movzwl
push
cmp
ss
dec
pop
test
mov
or
xor
or
cmpsb
pusha
pop
sub
dec
shl
mov
adc
mov
outsl
cmpsl
push
lret
pop
fsub
into
loop
ret
ljmp
popf
pop
fildll
out
lea
jmp
fsubl
and
popa
sub
sbb
lods
add
pop
push
rorb
lahf
cmp
cltd
add
cmp
popl
movsb
xor
xor
cwtl
orl
cmpl
mov
lret
push
inc
aad
mov
xor
cs
popa
xor
pop
out
adc
xchg
dec
push
mov
push
xor
cmpsl
aam
adc
out
cs
fiaddl
test
adc
cltd
xchg
xor
mov
mov
cld
mov
or
cmp
call
mov
andb
and
cmp
xor
cmpsl
and
cmp
sarb
adc
mov
inc
inc
inc
repnz
sahf
xchg
push
cmc
scas
rcr
dec
fbstp
xor
sbb
xor
xor
insb
ljmp
jbe
pop
incb
pop
sarl
dec
cmp
xchg
mov
xor
cmp
out
out
add
mov
js
cmpl
mov
jb
lods
sbb
add
jno
xchg
outsl
and
sub
mov
stc
cltd
jae
dec
fisubs
xchg
sbb
jns
outsb
xorb
sub
lcall
mov
test
test
dec
sbb
dec
stos
daa
mov
or
xor
dec
repz
test
sub
push
xor
decb
pop
scas
sbb
jp
sub
clc
and
scas
xor
xchg
imul
inc
cmp
mov
push
dec
repnz
sub
out
lods
loope
xor
je
push
xor
adc
add
mov
lds
adc
or
xor
add
lods
cltd
ret
ret
pop
jmp
xchg
and
or
dec
popa
int
adc
sbb
mov
scas
add
sub
pop
sub
cmp
sub
mov
ds
jae
dec
inc
rcll
insb
pop
ss
in
mov
inc
inc
call
imul
jmp
sub
adc
cmp
cs
xor
in
call
lds
adc
out
adc
adc
sahf
or
jecxz
test
andl
or
in
aas
and
xor
jns
mov
jmp
pop
lds
ja
inc
popa
js
test
sti
jp
xchg
and
sbb
leave
jecxz
dec
fstpt
push
data16
lock
fnsave
sub
inc
dec
push
pop
mov
in
or
flds
inc
xchg
and
js
pop
sti
adc
mov
xchg
xchg
adc
sbb
dec
mov
xor
dec
xchg
push
push
icebp
push
nop
xor
push
jl
jns
push
repz
add
xor
adc
and
jmp
popa
pop
xor
out
lds
sbb
scas
jo
add
fcomp
pop
dec
sti
pop
daa
or
push
ljmp
xor
clc
and
mov
cmp
test
jle
add
mov
loope
xor
popf
cs
mov
pop
imul
fadds
pop
test
mov
imul
mov
xor
mov
xchg
mov
fcoms
push
push
mov
pop
and
xor
fistl
pop
sbb
jne
inc
out
divl
inc
scas
testb
mov
xor
add
mov
xor
sbb
xor
fidivl
adc
cmp
pop
pop
scas
mov
loope
cmp
xor
int3
sbb
gs
lret
add
and
jmp
pop
mov
stc
xchg
sbb
push
stos
fists
popa
fnsave
or
xor
lods
mov
xor
pop
rorl
loope
push
repnz
dec
or
sub
and
notl
adc
cmp
sub
imul
mov
push
nop
inc
xchg
and
dec
out
ss
pop
jb
xlat
mul
xchg
sub
lds
cmp
sarl
out
js
xor
dec
jns
mov
add
inc
xor
jg
and
pop
push
push
or
lcall
mov
mov
nop
sub
movsl
xchg
movsb
dec
add
cli
push
mov
cmp
xor
push
daa
cmp
popa
in
lods
inc
call
fisttps
sub
rcll
in
xor
les
jnp
loop
adc
inc
or
push
dec
xor
fnstcw
inc
xchg
fimull
inc
mov
scas
xchg
ds
push
mov
movl
ret
int
ret
test
add
jp
movsb
jmp
push
sub
and
std
test
mov
add
lret
adc
push
sbb
cs
lret
into
shlb
and
mov
inc
inc
movsl
popf
jo
ljmp
ds
lods
jb
push
jnp
dec
and
xchg
adc
pop
lock
pop
gs
lahf
pop
add
stc
aaa
mov
mov
pop
cmp
push
loope
dec
cmpsb
les
xor
addb
lahf
add
addr16
dec
dec
lds
orb
sbb
jge
mov
bound
lock
and
clc
adc
mov
cmp
ficompl
dec
inc
testb
imul
jns
jb
data16
es
bound
std
adc
pop
fisubs
cmp
xor
xchg
mov
pop
jmp
dec
push
cmpsl
cs
lea
inc
xchg
xor
jns
lods
xchg
cmc
gs
jo
das
mov
cmp
arpl
add
enter
push
add
mov
jmp
push
lds
sbb
jge
out
mov
xor
jl
and
push
int
adc
insl
push
xor
test
cmpsl
addr16
cmc
mov
nop
cmp
jns
mov
js
ret
stos
xor
int3
outsb
jecxz
into
xor
push
adc
hlt
push
inc
inc
mov
lods
inc
in
add
mov
negl
add
jle
cltd
jo
shrb
cld
cltd
rorl
push
mov
sbb
fidivs
xor
cmp
dec
andl
mov
in
xor
pop
mov
repz
mov
xchg
adc
rorl
mov
mov
jg
adc
inc
pop
mov
add
sub
movlps
int
and
cmpsb
fiaddl
enter
cmp
outsl
test
gs
xor
jo
shl
fistl
push
or
add
pusha
leave
icebp
lods
push
mov
or
fldenv
mov
cwtl
xor
stos
lods
insl
pop
and
inc
inc
sub
adc
push
xor
sbb
fwait
jnp
call
test
jae
pop
inc
lahf
dec
jno
push
movsb
add
aas
test
mov
push
mov
mov
movsb
xchg
jb
mov
lea
call
loope
in
popa
push
xchg
sti
xor
lret
or
std
dec
jo
inc
push
fidivrs
in
leave
xor
int3
push
push
inc
daa
xor
movsl
insl
jmp
and
bound
fcomi
popf
iret
nop
mov
insb
loopne
popa
cmp
lcall
dec
dec
pop
stos
fistpll
pushf
or
xor
lods
dec
rcrb
inc
or
or
mov
imul
xor
mov
popf
xor
pop
push
stos
jo
inc
xchg
imul
lcall
aad
adc
pop
jns
cmp
aaa
cmp
xor
hlt
loopne
gs
movsl
roll
xchg
or
xor
pop
mov
mov
andl
loopne
and
xor
loope
mov
call
pop
push
arpl
pop
mov
sbb
push
pop
lods
lahf
jg
jbe
loope
repnz
dec
adc
inc
add
push
mov
in
bound
or
lret
adc
mov
mov
and
jne
push
stc
mov
sbb
mov
inc
jb
dec
xchg
adc
jle
sub
pop
pop
mov
sub
aaa
inc
xor
or
out
lods
jmp
test
fdivr
add
scas
xor
dec
imul
mov
test
cmp
jg
jb
aam
xorb
inc
pcmpeqb
push
mov
lea
pop
xor
insb
sbb
or
add
adc
adc
sbb
jo
divl
insl
scas
mov
lds
ja
into
sbb
xor
cmp
sahf
xor
pop
pop
or
movsl
outsl
syscall
repz
stc
imul
shrl
nop
mov
lods
cltd
fists
mov
push
or
ficompl
mov
pusha
or
jp
dec
cmpsl
in
sub
mov
xor
ds
push
arpl
adc
add
xor
mov
xor
jae
xchg
fwait
and
mov
and
enter
dec
rclb
sbb
xchg
push
call
or
push
and
mov
dec
out
cmp
addr16
xor
inc
add
nop
or
sbb
lea
ss
push
lret
stos
mov
ret
push
repz
pop
iret
out
dec
and
mov
aam
xor
adc
cli
xor
jae
movsb
or
dec
stos
xor
jecxz
lods
dec
vmovsd
insl
test
call
aaa
cmp
xor
inc
sub
xchg
addl
ja
xorb
pop
sbb
xor
cmc
stos
and
mov
and
sub
inc
mov
loope
push
jg
lret
shrb
lahf
cltd
xor
incb
xor
mov
jnp
xor
scas
add
or
ret
loopne
xchg
dec
jmp
cmc
lret
xchg
sbb
push
test
add
insl
dec
mov
jns
es
pop
nop
xor
lock
rorb
xor
loop
subl
lock
add
imul
sbb
xor
ja
fidivrl
push
xor
jb
aad
mov
dec
aad
es
push
pushl
cmpsl
add
xor
add
jnp
cmp
add
pop
inc
scas
jge
sahf
xchg
hlt
adc
fcom
inc
sti
jo
xchg
adc
adc
cmp
outsl
add
xchg
xchg
iret
push
dec
cltd
add
xor
out
xchg
push
xchg
pop
lods
sub
or
dec
push
daa
xor
add
fisttps
sub
jmp
xchg
pop
rclb
dec
inc
push
mov
mov
xor
lret
dec
cmc
daa
stos
scas
inc
mov
cmp
inc
mov
pop
sub
xchg
inc
negb
adc
push
xor
movsl
idiv
xor
or
mov
arpl
pop
stos
mov
jnp
push
outsb
aas
pop
add
les
xchg
andl
enter
xchg
out
or
jne
stos
std
mov
mov
in
mov
xor
xor
out
sub
bound
shlb
dec
and
rolb
xor
ret
sahf
lret
jl
adc
mov
dec
mov
mov
cmp
and
inc
outsl
adc
pop
mov
push
outsb
int3
cltd
into
sub
jnp
pop
dec
and
sub
mov
push
cmp
sbb
rol
loopne
mov
sub
call
sbb
add
test
ja
cmp
scas
xor
jle
test
and
xor
and
les
iret
xor
scas
inc
dec
lods
fidivrl
adc
mov
in
xor
test
and
imul
repz
xchg
addr16
inc
es
jno
rclb
xor
icebp
cmpsb
andb
int
rolb
jne
inc
aad
js
push
cmp
idiv
add
lret
into
xor
push
test
or
fcmovbe
mov
sub
int
xor
cmp
inc
dec
cmpsb
cmc
testl
dec
adc
push
and
cmp
lock
push
lret
inc
test
iret
jmp
cmp
je
pop
xor
add
insb
clc
insl
push
call
sub
mov
push
sahf
aas
xchg
add
shlb
sysexit
mov
xchg
movsl
add
rcrl
cmp
xchg
imul
aam
ss
inc
add
out
adc
adc
pxor
ljmp
lds
mov
push
sti
test
push
lods
adc
scas
stos
repz
ljmp
mov
mov
sub
sbb
adc
xlat
mov
inc
cmp
fldcw
imul
pusha
repz
cmpsl
ljmp
pop
int
outsb
jbe
call
sbb
jb
pop
xchg
cld
lods
inc
ss
push
xchg
adc
push
imul
xor
push
cmp
adc
sub
out
pop
dec
or
ss
xor
fstps
cmp
ret
mov
and
and
mov
aad
adc
shlb
cmp
dec
popf
xor
mov
dec
cmp
mov
xchg
cmp
bound
push
lret
adc
mov
xor
jp
call
jae
and
xor
nop
cwtl
add
xor
sbb
xor
ja
mov
mov
fsubrs
cwtl
adc
fidivs
push
cmpsb
ret
mov
jns
stc
ljmp
cmp
pop
sub
cld
or
lret
aad
adc
xor
adc
push
push
add
outsb
mov
adc
pop
push
out
xor
inc
cld
fildl
mov
aad
xor
call
push
ljmp
mulb
or
push
sub
xor
in
enter
sbb
imul
xchg
push
xchg
nop
add
sbb
pushf
xor
mov
xchg
not
jmp
jmp
push
dec
mov
mov
sub
das
icebp
fsave
out
adc
push
inc
jno
add
cmpsl
call
imul
cmc
cmp
xor
add
mov
push
clc
out
ds
mov
xchg
pop
btr
inc
and
push
loop
iret
dec
push
lock
rolb
mov
in
xchg
nop
inc
dec
xor
popf
mov
mov
outsl
cmc
adc
mov
add
mov
xor
or
xchg
jns
jno
lcall
lods
push
inc
div
adc
loope
pusha
ja
mov
cmpsl
mov
push
cmc
adc
loope
iret
mov
or
in
nop
mov
dec
adc
call
out
std
xor
mov
dec
ja
jecxz
ja
jp
test
fnstsw
jb
sub
pop
sbb
jne
pop
sub
xchg
dec
adc
test
dec
push
shl
sbb
inc
stos
addb
shlb
sbb
xor
out
outsl
dec
loopne
xor
cmc
outsb
stos
sbb
les
pop
push
fcoml
int
cmp
sub
dec
sahf
rdmsr
adc
adc
or
imul
aas
jg
and
sbb
mov
xor
das
popf
cltd
xor
daa
and
ret
and
push
lcall
cld
xor
aad
fs
jae
clc
cmpsb
jno
mov
negl
sub
divb
imul
mov
stc
mov
mov
xor
xor
jmp
sub
and
mov
xchg
push
into
push
adc
dec
aas
add
xor
jp
mov
xor
int
out
sbb
sbb
leave
icebp
fnstenv
pop
rclb
push
mov
shll
and
outsb
sub
sbb
pop
test
xor
or
dec
and
dec
mov
jne
fdivr
hlt
jo
xorb
or
jg
xor
xchg
cmp
movsl
xor
adc
mov
mov
inc
xlat
sub
cmp
in
data16
shll
push
pushf
xchg
cmc
mov
jecxz
dec
xor
push
sahf
out
xor
jp
lret
pushl
mov
int
in
pop
inc
cmc
mov
adc
orl
lea
das
sbb
test
clc
sub
jo
sahf
xor
sbb
loop
dec
xchg
inc
xor
mov
adc
sub
adc
xor
aad
add
mov
xchg
test
inc
inc
ds
push
out
mov
inc
dec
mov
rcrl
xor
iret
lock
add
sbb
test
fsubl
in
cmpsl
add
sbb
xor
push
in
aam
push
and
sahf
imul
jle
es
jge
inc
sbb
cmc
inc
pop
iret
add
push
cli
adc
cmp
xor
adc
addr16
into
movsb
dec
imul
jmp
or
xchg
int
bound
or
in
xchg
clc
xchg
cmp
sub
cmc
lods
fs
cli
xor
jns
mov
dec
aam
repnz
or
cmp
lcall
insb
into
xor
jns
and
rcll
das
std
dec
mov
js
xor
and
push
push
adc
stos
lods
movsb
xchg
movsl
aas
xchg
inc
addl
shll
lea
aam
dec
nop
push
fsubrs
int
sub
cltd
daa
sub
cmpsb
cmp
sbb
xchg
and
push
mov
jmp
outsl
push
lea
adc
outsl
or
data16
repz
sub
int3
mov
xchg
add
out
jmp
out
add
mov
mov
jno
loope
adc
dec
imul
mov
and
shlb
push
adc
xor
aaa
in
mov
xor
mov
mov
xor
mov
cmp
outsl
hlt
ficoml
xchg
mov
xor
shll
adc
int3
pop
or
mov
adc
dec
or
push
jg
lcall
gs
sbb
xchg
xor
fs
xor
mov
sub
mov
sub
lret
xor
sbb
push
fs
aad
icebp
lds
sbb
movsb
call
imul
pushf
roll
ds
pop
jnp
xor
daa
cs
out
out
cmp
jae
mov
and
test
pop
jl
xor
add
loope
scas
and
ljmp
pop
fsts
adc
jno
xor
push
out
or
mov
insl
mov
push
fiadds
push
call
aam
cmp
nopl
xor
inc
add
pushf
xor
call
test
or
frstor
xchg
xor
imul
add
adc
fistpll
jle,pt
lret
cld
sahf
aad
in
inc
lret
lods
in
shlb
or
imul
mov
enter
cmp
push
pop
aam
mov
jne
dec
sahf
mov
mov
mov
adc
dec
lods
mov
push
jne
cmp
jnp
lods
rolb
mov
push
imul
jo
push
or
or
pop
xor
push
and
xchg
repz
lahf
fcmove
outsb
inc
jl
pop
hlt
shlb
call
fs
push
mov
nop
jle
inc
xor
add
jl
test
int
lods
pop
cmp
iret
xor
add
filds
add
sbb
stos
cli
or
movsb
fcomps
mov
in
xchg
inc
and
aad
cmp
inc
jne
test
xchg
and
adc
mov
mov
xchg
lods
stc
xor
mov
imul
jo
xor
mov
jbe
jl
sbb
xor
in
fldcw
sub
dec
adc
push
iret
rorb
sub
push
inc
jmp
shlb
push
icebp
mov
jo
out
sub
stc
pop
scas
cltd
xchg
mov
clc
cs
filds
test
dec
into
add
test
or
xor
mov
and
mov
sbb
jmp
repnz
or
daa
dec
push
std
popf
pop
push
mov
dec
mov
icebp
pop
xchg
pop
xor
mov
outsb
mov
jp
sbb
xor
or
into
inc
xor
data16
xchg
jne
fstps
add
sub
push
xor
and
cli
or
loopne
xor
xor
adc
mov
stos
pushl
adc
xchg
scas
int
lahf
dec
lea
inc
lcall
jb
mov
cmp
lods
and
sbb
outsl
pop
lods
or
test
jae
es
mov
subl
dec
and
push
sub
sub
mov
stos
xor
xor
xchg
pop
fcoms
loop
lcall
jmp
push
adc
cmp
add
mov
dec
lods
gs
fildl
int3
jno
sub
cld
movsb
lods
fwait
sbb
xor
lret
addr16
jne
cmp
pop
push
pop
push
gs
xor
icebp
fiaddl
out
pop
fidivs
ja
jnp
mov
into
addr16
xchg
and
xor
ficoms
pop
cmp
adc
inc
xor
iret
add
sete
aam
xor
jg
cmpb
lods
dec
xchg
jmp
and
filds
or
xchg
sbb
sbb
and
add
dec
insb
pop
out
dec
mov
xor
and
sbb
mov
dec
mov
or
add
jns
jns
pusha
xor
fwait
adc
cmp
mov
hlt
in
shl
int
xor
rcrl
push
inc
add
in
dec
loopne
sbb
lea
nop
push
inc
mov
cmp
push
addr16
pop
cwtl
jo
dec
sbb
xor
mov
cmpsb
xor
push
scas
mov
mov
pop
xchg
repz
jnp
adc
jg
inc
add
cmp
fstpl
test
adc
xchg
cmc
je
push
loop
xchg
xor
xchg
xor
stc
lods
mov
andl
int
xchg
adc
cmpsb
jge
mov
testl
pusha
shlb
adc
les
lret
orl
shlb
lods
mov
test
xor
lds
leave
dec
repnz
mov
repnz
mov
ss
mov
fwait
dec
imul
sub
test
mov
jg
xor
sub
push
jae
fimull
sahf
inc
push
in
lds
jecxz
push
mov
adc
mov
dec
mov
aad
aad
sti
jns
add
sub
ret
sbb
adcb
sbb
cmp
test
jne
std
and
pop
or
in
jecxz
fs
cli
push
pushf
ljmp
xor
jg
adc
cmc
xchg
in
inc
mov
xchg
add
fwait
popa
data16
jecxz
inc
sarl
xor
xchg
movsb
iret
and
pop
xchg
cmpsl
xlat
lcall
insl
mov
out
adc
cmp
xchg
int3
cmp
push
testl
push
and
sahf
ljmp
dec
std
int
cmp
inc
scas
xor
push
into
enter
mov
outsl
xor
cmpsl
fwait
push
mov
xor
leave
dec
dec
pop
sbb
adc
xchg
movsb
std
jge
les
push
dec
dec
add
leave
mov
xor
fsts
mov
sarl
dec
lcall
push
lret
or
add
and
sbb
negb
incl
fwait
mov
mov
push
inc
pop
sub
mov
adc
jl
sbb
sub
adc
sarl
mov
xor
in
cli
out
lret
xor
mov
or
dec
and
icebp
push
ds
daa
xor
and
adc
inc
jno
jmp
lahf
xor
add
inc
dec
movsb
xor
mov
xchg
lods
xor
shr
fisttpll
call
mov
int3
xchg
dec
bound
mov
xchg
adc
pop
add
push
in
fucomip
sti
rcr
push
loope
inc
mov
push
nop
ret
ds
xchg
aad
push
adc
mov
ss
add
pop
mov
cs
xor
pop
imul
or
dec
jns
leave
xor
cli
jl
push
mov
push
out
jb
xor
and
iret
cmpsb
gs
mov
lods
pop
dec
sub
ljmp
hlt
xchg
pop
rol
and
mov
xor
out
cmp
loopne
xor
outsb
dec
iret
sbb
mov
cli
pop
lods
push
add
xor
cmp
call
sub
out
add
dec
jge
and
push
jp
mov
rcrl
xor
pusha
inc
enter
push
xor
cli
mov
jbe
xchg
xor
pop
and
jmp
pop
sub
pop
xor
test
lods
and
dec
mov
dec
dec
das
enter
stos
ror
je
fbstp
push
inc
mov
sub
sar
pop
sbb
xor
lods
xchg
cmp
jae
mov
mov
dec
sahf
icebp
adc
pop
dec
loopne
mov
jnp
jmp
dec
and
in
xchg
nop
lea
mov
lret
inc
ret
adc
inc
sub
xor
inc
mov
je
xchg
call
push
xor
push
mov
cmp
shll
cmc
or
xorb
pop
cs
cld
and
dec
mov
and
push
das
mov
enter
jb
js
push
out
outsl
xchg
and
inc
sbb
into
xor
cmp
xor
mov
xor
out
push
xor
pop
cmp
lcall
pop
xor
jp
notl
adc
inc
ds
in
xor
aaa
mov
pop
and
dec
dec
lock
stc
and
les
daa
sbbb
dec
rorl
jae
jnp
ja
js
popf
adc
mov
inc
rclb
jecxz
sbb
xor
add
dec
nop
jb
cltd
loop
out
dec
mov
setb
movl
enter
cmpsl
outsb
into
repz
lds
cmp
mov
imul
and
fcompl
sub
dec
mov
mov
loope
je
xchg
aad
mov
cmpsb
sub
push
xchg
lret
je
in
xor
inc
sub
xor
insb
jne
mov
faddl
add
xchg
cmp
outsb
xor
jo
out
xor
inc
loop
inc
pop
shlb
enter
jge
testb
inc
popa
inc
dec
adc
ds
daa
pushf
add
mov
mov
ja
out
xchg
nop
mov
pushf
sub
inc
rorl
pop
jae
idivl
sub
dec
shrb
push
ljmp
dec
fcmovnu
mov
sub
jp
filds
test
mov
mov
and
pop
add
sahf
aad
rcrl
xor
fs
cwtl
xor
loop
call
sub
dec
mov
lods
sti
xor
repz
mov
pusha
and
sub
adc
loope
fs
dec
inc
fistps
iret
je
adc
xor
pop
mov
inc
xor
orb
or
out
and
cmpl
movsl
out
xor
iret
jmp
jge
out
cmc
mov
pop
dec
jp
cltd
call
ficoms
cmp
xor
outsb
into
in
stos
test
scas
inc
divb
imul
mov
dec
xor
sub
sbb
mov
dec
jmp
push
idivl
push
push
xor
je
xor
scas
out
or
aad
xchg
or
dec
jl
adc
pop
xor
out
inc
push
insl
add
fisttpll
test
into
sbb
jbe
decb
mov
inc
xor
pop
nop
xor
imulb
or
je
dec
or
push
cmp
push
inc
in
into
xchg
mov
loopne
inc
cmp
jnp
sub
dec
cltd
mov
not
sub
or
sbb
push
jle
ja
iret
test
adc
push
clc
jecxz
cmp
nop
xlat
adc
sub
shll
xor
dec
ret
jl
push
aad
mov
sahf
sub
xor
push
push
adc
dec
dec
xor
popa
mov
sub
sub
test
xor
and
scas
out
inc
and
repz
mov
mov
dec
dec
or
movsl
pop
xor
jmp
xchg
adc
lea
cli
adcb
test
inc
cmp
repnz
nop
lcall
outsl
mov
rorb
dec
add
out
sub
adc
pop
outsl
pusha
lcall
adc
int
xor
jge
sbbl
inc
lods
icebp
xor
sbb
aad
popf
mov
mov
loopne
sub
insl
push
aam
fdivr
in
mov
push
xor
out
ds
repnz
ficompl
add
xor
sahf
and
dec
call
ljmp
xor
dec
adc
push
mov
out
mov
shl
outsl
loope
push
out
scas
inc
inc
mov
xchg
mov
push
cmovb
pusha
pop
push
inc
xor
lds
flds
mov
lret
dec
addr16
add
stos
xor
cld
and
sub
aam
in
cmp
jmp
push
aaa
add
jnp
subb
in
xchg
stc
mov
mov
inc
sahf
or
push
or
out
je
push
in
out
jecxz
fisubl
test
jno
cmp
xchg
or
xchg
sub
mov
sub
es
mov
xor
lret
outsb
int
loopne
mov
test
add
jnp
movsb
stos
and
stc
pop
mov
add
std
test
and
jecxz
sbb
jns
cmc
imul
adc
sub
das
cmp
stos
dec
test
pop
inc
dec
add
into
test
mov
jo
mov
mov
lock
testb
add
mov
jge
mov
std
mov
movb
adc
cld
pusha
xchg
loope
jl
mov
xchg
aaa
adc
dec
lods
lret
pop
test
shrw
add
ljmp
sub
stc
sbb
ja
and
mov
sub
mov
inc
into
inc
add
xchg
mov
sub
push
add
pop
mov
fnstsw
movzwl
inc
lods
in
sarl
imul
ja
fs
push
cmp
and
cs
dec
mov
jecxz
rcrl
jb
jp
in
cltd
dec
add
cmp
pop
repz
stos
or
and
out
adc
jmp
cld
inc
mov
pop
push
mov
dec
cmp
into
test
xor
popf
stos
in
lods
or
into
pop
push
xchg
mov
mov
sbb
daa
shrl
jbe
mov
jb
js
out
xchg
adc
cmpsb
xor
jge
in
jno
lret
sub
lds
inc
call
lods
jno
lock
inc
add
pop
xchg
sbb
inc
mov
push
aad
leave
cmp
add
jmp
out
mov
imul
xor
mov
push
xchg
lret
sbb
mov
aaa
xchg
xor
lea
mov
mov
imul
xor
cwtl
insl
mov
es
and
dec
push
cmp
int
neg
pop
pop
adc
xor
mov
push
or
jns
xchg
sti
imul
or
test
les
insl
push
test
aaa
daa
mov
fstpl
add
push
rep
ds
jne
in
ss
sbb
mov
stc
xor
and
pusha
mov
int
push
repz
mov
fcom
bound
sbb
out
or
and
dec
add
sbb
inc
push
pop
cmc
test
into
adc
outsb
test
jl
stc
xchg
fsubp
sub
movsl
xor
stos
pop
push
xor
addr16
sbb
fdivrs
mov
ret
hlt
movsb
repnz
call
fwait
push
inc
int3
mov
std
xor
ja
push
push
and
xchg
mov
ljmp
adc
xor
push
jecxz
js
mov
mov
cmp
jo
loop
and
add
stos
dec
sbbb
xor
xlat
rcr
fdivr
and
pusha
insb
outsb
aaa
js
jge
arpl
aad
jnp
xor
add
inc
scas
rorb
xchg
out
cmp
sbb
into
scas
xor
addr16
mov
iret
loope
xor
enter
fwait
hlt
mov
adc
pop
outsl
cmp
jbe
sbb
push
sbb
jmp
in
or
dec
mov
aam
or
pop
add
jmp
jno
ret
in
xor
scas
inc
aas
xor
sub
test
pushf
out
inc
arpl
nop
js
jl
xor
xor
jb
xor
in
in
popa
and
sub
xor
inc
das
sbb
add
out
pop
xchg
xor
popa
arpl
push
nop
dec
xor
leave
sub
inc
adc
mov
cmp
pop
inc
xor
and
in
sub
adc
movsl
mov
dec
push
jg
fdivl
shll
stos
mov
stc
add
adcl
cmp
xor
stos
and
ljmp
dec
jge
xor
mov
inc
xor
push
cmpsb
fstl
jo
xor
fsubl
jp
es
mov
popf
dec
cmp
pop
push
pop
xor
jnp,pn
xor
or
sti
lret
jno
xor
mov
jns
inc
cltd
and
mov
fsubr
push
movsl
jle
xor
jge
pop
bound
push
cmpsb
loope
pop
ficompl
adc
fiadds
push
xchg
bound
aad
ds
leave
out
cmpb
cmp
jae
loop
pop
in
popa
mov
cmc
and
inc
dec
addl
scas
and
jo
inc
popf
test
adc
and
jns
mov
sbb
and
inc
in
in
add
out
xchg
addr16
sbb
call
mov
in
adc
adc
xor
mov
pop
xrelease
movsl
orb
dec
ja
cmpsb
inc
test
ss
fnsave
mov
enter
scas
xor
icebp
call
cmc
add
xor
cmp
inc
inc
pop
mov
mov
add
adc
ss
aas
jmp
xor
or
popa
mov
fstpt
xor
jbe
add
mov
jns
mov
aam
xlat
es
xor
inc
mov
stc
xor
int
fbstp
mov
imul
sti
xor
data16
cmc
loope
xor
stc
pushf
dec
push
mov
fwait
mov
push
out
pop
xchg
mov
dec
add
and
loopne
xor
ficomps
jns
push
mov
xor
test
xor
xchg
in
adc
cmp
fistpll
adc
sub
inc
adc
das
add
int
in
aas
out
call
mov
push
fbstp
je
push
shlb
lss
xor
popf
mov
addl
mov
dec
mov
repz
mov
cwtl
out
testl
push
cmp
in
jno
fimull
aad
sete
adc
xor
test
push
push
into
push
sbb
inc
sbb
xor
jge
clc
jo
ficoms
xor
push
push
dec
repnz
xlat
xor
sbbb
aam
adc
xor
aaa
cltd
mov
dec
fs
mov
add
xor
and
jle
push
sub
add
inc
dec
dec
inc
push
pop
fisubs
add
test
inc
cmp
imul
in
dec
fildll
pusha
fidivs
pushf
xor
sub
lods
jno
rcl
cltd
fcmovne
or
shrl
aaa
xor
aas
cmp
scas
nop
daa
lods
dec
push
xor
mov
jmp
xor
int3
mov
mov
sbb
jmp
cmp
cmpsb
xchg
movsb
xor
ficoml
and
cltd
out
nop
xchg
and
outsb
dec
xor
bound
mov
divb
inc
cs
leave
ja
and
aas
dec
push
int
push
push
jnp
js
cmp
xor
fsubrl
sbb
sbb
hlt
jns
test
pop
out
xchg
inc
xchg
adc
push
clc
mov
xor
aad
iret
dec
dec
sub
xchg
dec
cmp
bound
mov
inc
add
fmull
test
jmp
mov
jne
dec
pop
mov
jge
lods
adc
and
aad
mov
lret
mov
xchg
xchg
fcomps
repnz
popa
push
pop
jb
push
xchg
ljmp
scas
mov
push
fbstp
loop
xor
mov
adc
sbb
inc
adc
and
mov
cmp
and
xchg
xor
mov
add
in
idiv
jge
mov
cmc
jb
cmp
aad
jle
adc
clc
jbe
stos
pop
les
pop
pushf
inc
pop
mov
inc
xchg
jge
add
pop
je
xor
lahf
test
mov
xor
inc
add
bound
inc
call
mov
inc
mov
adc
mov
xor
xchg
arpl
fimuls
add
pop
lahf
getsec
sbb
fistpl
jbe
ds
fwait
or
aad
lret
inc
int3
adc
sbb
inc
or
xchg
call
push
mov
ds
jmp
int3
jo
cmc
jae
je
jecxz
xor
sbb
lea
push
jge
cwtl
cli
adc
or
mov
fs
xor
test
jmp
sbb
sbb
call
pop
jb
mov
fisubl
test
int3
sti
sbb
pop
lods
dec
negb
jb
dec
pushf
sub
xor
mov
pop
mov
ljmp
repz
xchg
mov
or
inc
std
insl
inc
mov
popa
rclb
add
jg
push
dec
xor
cmpsl
jg
xchg
pop
inc
xchg
enter
imul
push
movl
test
mov
adc
fisubrs
sahf
inc
pop
out
mov
mov
cmp
shlb
movsb
dec
cmp
xor
repnz
xchg
sbb
psllq
out
cmp
or
pop
nop
lock
test
cltd
inc
pop
sbb
adc
xor
imul
testl
out
js
pushf
icebp
inc
mov
rcrb
inc
lods
sbb
fbstp
pop
xor
jns
clc
push
cmp
dec
daa
cmp
out
fs
std
inc
data16
sub
xor
in
cmp
inc
movsl
xor
les
je
movsb
es
mov
dec
cmp
jno
jmp
xor
loopne
gs
adc
inc
adc
lret
mov
xor
mov
lock
xor
in
pop
imul
jno
push
in
fs
je
cmp
xorb
orb
xchg
scas
fistpll
lret
add
sub
aaa
sbb
push
repz
adc
imul
xor
xchg
sbb
xchg
aad
add
push
sbb
jmp
jl
jbe
rorb
movsb
and
jnp
out
lds
inc
leave
mov
pop
bound
nop
std
adc
cmpsl
aad
scas
fisttpl
shlb
and
push
cwtl
ret
cmp
add
pop
and
push
xor
lret
mov
xor
xchg
sbbl
dec
es
fstps
cmp
outsl
sbb
mov
sub
decl
adc
sub
arpl
jge
repz
orb
popf
addr16
jb
enter
inc
cmp
pop
int
cmp
mov
ds
or
adc
daa
inc
ror
xor
dec
lods
fstps
mov
xor
bound
pusha
inc
ja
inc
sub
and
subl
cmpsb
jns
adc
sub
loop,pt
outsl
cwtl
jne
add
adc
adc
inc
notb
xor
out
das
sub
dec
adc
es
add
sub
dec
outsb
insb
enter
flds
outsl
xor
add
dec
or
pop
xor
pushf
mov
mov
sbb
xor
addr16
in
jl
lods
icebp
and
inc
dec
and
fidivl
sarl
out
push
sub
aad
xchg
pop
inc
adc
or
jmp
out
jmp
cmp
mov
in
adc
add
mov
jns
jl
cmp
mov
and
dec
jmp
ja
xor
jae
sti
push
jecxz
fisubrl
add
mov
push
jnp
cmp
jmp
test
cmp
push
inc
xor
int
xchg
nop
dec
mov
stc
mov
cmp
xor
jge
dec
call
into
xor
adc
lods
cs
cmpsb
mov
sbb
sub
jns
shlb
adc
lsl
cmp
ljmp
jmp
out
es
xchg
hlt
cmpsl
xor
call
insl
xchg
mov
xchg
fwait
idivl
divb
fstl
jbe
mov
pop
les
mov
enter
sbb
xor
inc
hlt
ss
push
pop
xor
push
divl
cmp
jne
mov
lcall
mov
or
adc
dec
sub
int3
jmp
lods
sarl
inc
mov
in
les
aaa
adcl
fwait
mov
and
out
outsb
sbb
cmpsl
xor
and
int3
mov
mov
and
pop
out
mov
pop
insb
adc
and
dec
push
je
push
aaa
inc
int
dec
inc
iret
loop
xchg
lock
jae
jne
or
in
cltd
mov
xlat
call
add
stos
mov
add
repnz
jg
sbb
dec
mov
das
ljmp
dec
and
fldt
fcomip
sub
add
or
push
outsb
jge
sti
jl
sbb
std
xchg
mov
pop
out
dec
leave
mov
inc
pop
xchg
add
sub
ljmp
sarb
inc
aaa
xchg
push
cmc
xor
test
lea
fdivrl
xor
xor
mov
push
mov
jae
xor
push
es
fcmovne
mov
popf
inc
mov
getsec
xor
std
mov
aad
enter
in
xor
insl
jns
and
cmp
test
movl
inc
sar
push
pop
push
xor
xchg
ret
xchg
inc
jp
pop
popa
pop
fisubrs
fnstenv
add
xor
imul
dec
movsb
pop
or
add
mov
push
inc
fbstp
sub
push
xor
lods
cmp
sub
adc
adc
in
in
xchg
aam
outsb
adc
nop
ds
mov
sub
mov
jge
cwtl
pop
mov
test
leave
sub
or
popa
fistps
rclb
push
sarl
jge
dec
add
outsb
jmp
loop
pop
into
xor
dec
fucomip
inc
stos
test
testl
sub
xor
jne
cmpsb
out
mov
xor
decl
or
adc
sub
add
jmp
push
xor
int3
test
pop
aas
mov
pusha
pushw
sbb
jne
test
mov
clc
call
dec
xchg
pusha
popf
pop
sahf
lcall
inc
stos
dec
or
dec
xchg
xchg
out
xor
sbb
adc
xorl
mov
stc
xor
filds
movsl
mov
sbb
add
push
aad
inc
cli
xchg
stos
cwtl
sbb
inc
stos
jmp
xor
fdivrl
fwait
mov
xor
sub
add
lea
xor
mov
and
fidivrl
fldcw
mov
mov
jecxz
addr16
mov
mov
cli
mov
inc
adc
cmp
xor
and
lahf
xor
or
sub
push
pop
jg
fildll
ficompl
movsb
cmpsl
test
out
es
cmp
mov
jg
mov
jge
push
cmp
imul
roll
xor
repz
fisubrl
in
ds
mov
xor
aad
cmp
lock
mov
push
inc
push
cmp
into
mov
sti
lahf
adc
inc
sbb
dec
xor
fldt
xor
std
adc
sub
jg
and
mov
stos
inc
mov
pop
mov
adc
hlt
pop
push
xlat
cmc
cmp
mov
push
aad
ja
dec
cli
rolb
fidivl
push
out
stos
hlt
cmp
outsl
adc
dec
lret
xor
fwait
pop
mov
out
ret
sbb
and
xorl
xchg
loopne
xchg
xchg
pop
call
push
jl
sub
cwtl
lahf
xor
sysexit
into
loopne
subb
aas
inc
dec
sbb
outsb
xor
cs
sar
push
enter
sub
pop
call
sub
pushf
outsl
mov
inc
sbb
xor
add
jno
mov
inc
addr16
lahf
xchg
std
call
std
dec
out
push
sti
insb
jae
iret
mov
nop
xor
jecxz
movsb
lods
leave
xor
scas
push
pusha
sbb
xor
add
imul
push
dec
adc
into
xchg
adc
or
fucom
ds
shrb
rcrl
mov
cmpsb
and
fdivs
cli
push
xchg
addl
lret
clc
in
imul
ficoms
fcom
add
pop
sub
imul
ud0
pop
jae
push
mov
cmp
daa
inc
jg
fdiv
fidivl
stc
test
test
jecxz
push
sbb
stos
mov
adc
in
mov
push
sub
stos
jae
es
cmc
mov
inc
aas
xor
jg
lcall
mov
es
add
jg
sbb
stos
out
xchg
pop
sbb
mov
lods
add
addr16
divb
pop
outsl
inc
in
mov
or
out
mov
and
nop
add
lds
sub
xor
or
dec
cmp
mov
les
mov
ret
and
push
lods
fwait
stc
xor
or
std
in
and
jns
mov
push
sub
cmp
pushf
xor
lret
jmp
jmp
out
pop
push
lods
inc
jb
mov
lret
popl
xor
mov
pop
mov
jmp
sub
mov
jecxz
pusha
xor
mov
aas
in
add
repz
mov
into
mov
inc
mov
fnstcw
pop
cmp
fdivs
add
sarb
xor
lahf
cmp
addb
frstor
out
xchg
inc
ja
call
xchg
add
xor
pop
int
in
jecxz
loope
icebp
add
or
jg
out
mov
test
cld
add
aad
jp
inc
mov
mov
dec
jecxz
lret
pop
adc
insb
test
ljmp
jg
mov
pop
and
cwtl
in
push
outsb
add
mov
xor
decl
sbb
jno
aad
or
hlt
xor
addr16
fldcw
adc
or
stos
fisttps
jo
xchg
xor
mov
push
into
sarb
sub
loope
orl
adc
or
mov
leave
xor
xchg
dec
add
aas
test
inc
aad
cmp
inc
gs
mov
adc
or
adc
and
jl
xor
and
enter
xor
push
fmulp
pushf
punpcklbw
imul
mov
icebp
and
scas
mov
sahf
cmp
dec
notb
dec
repz
lahf
jmp
xor
loopne
sub
lods
jecxz
int
jbe
jo
jp
mov
xor
pusha
cmp
insl
insb
xor
pop
sbb
mov
dec
bound
sub
mov
xorl
inc
xchg
xlat
sub
sbb
or
fsubs
fprem
sbb
xor
push
negb
sub
in
xorl
ljmp
aad
mov
xor
popa
ret
xor
sbb
or
test
mov
push
cld
or
adc
push
add
fstpt
pop
jge
iret
adcb
adc
add
cld
push
leave
push
rcll
addr16
scas
jge
int3
mov
jmp
xorl
jo
jl
xor
into
mov
movsl
push
jns
lret
xor
push
or
loope
sub
leave
out
dec
sbb
and
pop
into
shlb
insb
mov
cmpsl
test
dec
stc
mov
xorl
in
push
aad
sub
xchg
xchg
jp
loop
jno
fisubl
pop
cmpsl
ss
xor
stos
and
cmp
out
jae
pop
scas
adc
sub
aaa
mov
pusha
dec
int
cmpsl
inc
mov
xor
add
sub
insb
xor
adc
pop
xchg
ficompl
push
pop
cmp
sbb
xor
push
adc
push
jnp
dec
add
in
xor
pop
push
inc
enter
xor
fcoms
jb
xchg
fimuls
xor
xor
repz
cmp
repnz
in
xor
test
repz
loop
fs
xor
cmpsb
add
jb
into
cmp
mov
xor
test
pop
mov
push
xchg
adc
std
xchg
stos
xor
dec
flds
ds
and
adc
scas
or
and
add
xchg
subb
fnstenv
lods
pop
adc
aaa
test
jl
add
mov
flds
je
scas
dec
push
mov
sub
mov
call
sbbb
push
and
sahf
pop
jle
fnstcw
aad
repz
in
in
ret
and
icebp
xchg
loope
mov
mov
xor
stc
push
adc
xor
mov
add
in
pop
icebp
repnz
out
xor
sbb
add
cmpsl
jb
push
icebp
inc
rcrl
dec
jbe
into
mov
pop
push
sbb
or
jns
mov
fadds
cwtl
xchg
push
mov
add
mov
pop
or
repz
int
ss
cmp
cs
cmp
and
jmp
pop
mov
add
sub
mov
adc
aad
push
inc
les
or
mov
or
dec
push
xor
add
loope
jmp
fs
xchg
pop
push
stos
repz
movsb
lods
pop
adc
fidivl
sub
ljmp
xor
mov
xor
mov
orl
pop
outsb
xor
pop
jns
xor
sbb
popa
xor
stc
add
cmc
lods
sbb
add
lock
xchg
dec
aaa
and
and
pop
or
xor
fimuls
mov
rcl
pop
lcall
dec
movsl
sub
pop
out
xor
and
jg
popa
div
jb
lret
test
jnp
cmp
les
loopne
adc
jae
adc
insl
or
xorb
dec
xchg
or
ffreep
add
add
dec
or
dec
dec
daa
jb
adcb
mov
mov
xlat
fnstenv
and
addr16
inc
dec
loope
dec
dec
stos
lret
leave
jns
cmpsl
scas
inc
mov
jae
orb
fisubrl
cld
dec
shll
xchg
xor
adc
hlt
push
sbb
jae
test
xor
adc
add
insl
hlt
jge
out
call
pop
cmpl
aas
push
adcb
fidivl
xor
push
lea
mov
or
fs
or
and
adc
stos
ret
mov
xor
outsl
xor
jp
jle
aad
add
cmp
pop
sub
cli
jns
call
jbe
jae
and
mov
cmpb
sbb
in
sub
fsub
xor
scas
adc
andl
hlt
inc
call
pop
pop
cmc
add
cmpl
cld
jns
cmp
mov
cli
sub
mov
xchg
adc
xchg
loop
pop
fs
sbb
push
xlat
xchg
gs
jge
shlb
xor
mov
insb
push
adc
inc
cmp
mov
xor
mov
mov
push
adc
xchg
dec
mov
inc
cltd
leave
sbb
adc
mov
jb
xchg
mov
data16
out
xor
pop
insl
cmp
jne
add
lahf
cmp
aaa
inc
xlat
sub
out
mov
push
mov
mov
imul
mov
pop
sub
ja
std
es
fildll
dec
popa
shll
adc
xor
out
inc
dec
sub
mov
sub
adc
sbb
xchg
mov
mov
xchg
and
mov
fists
lods
shl
xor
lret
dec
dec
pop
or
adc
in
outsl
xchg
push
pop
inc
xor
xor
lahf
xor
cmp
testb
xor
push
int3
in
test
cmp
mov
faddl
xor
xor
push
cmc
xor
xchg
fisttpll
push
sarb
xlat
bound
maskmovq
aas
cmpl
xor
adc
xchg
lret
pop
push
clc
adc
inc
xor
sub
sbb
adc
subl
mov
shlb
cwtl
lret
enter
sti
xor
ss
cmpsl
ljmp
lret
and
xor
add
mov
push
icebp
cmp
in
mov
mov
mov
cmp
repz
jns
inc
sub
aad
jmp
xor
jb
pop
rcl
fst
mov
es
sbb
xor
int3
or
sub
add
jno
dec
out
adc
xor
xchg
xchg
jg
mov
popa
adc
je
and
ja
xchg
add
cmc
rcrb
out
aas
inc
xchg
mov
sti
xchg
sbb
push
xchg
mov
mov
jno
add
jmp
or
inc
jp
in
cmp
pop
fsubl
push
xor
mov
sub
insb
add
sbb
cwtl
les
pop
or
xchg
or
ja
ret
push
pop
dec
outsl
out
in
loope
and
cmp
xor
adc
or
xor
jne
les
xchg
sbb
in
test
inc
xor
mov
jbe
mov
xchg
adc
mov
xor
fisubs
pop
xchg
cmc
fwait
mov
xor
outsl
out
mov
lcall
mov
mov
int3
dec
mov
jae
aad
repnz
dec
shlb
xor
loop
in
or
je
into
fs
inc
fcompl
mov
push
loope
xchg
mov
push
cltd
fld
and
outsl
dec
lds
push
test
dec
aad
subb
and
test
addr16
or
push
scas
stc
mov
cmp
loope
enter
sarb
movsb
dec
and
jbe
gs
pop
test
or
push
aam
mov
push
lret
inc
xor
ljmp
sbb
xchg
les
cmp
inc
inc
adc
fs
fsubrl
in
repnz
stc
jae
mov
lock
mov
loop
popa
sbb
jecxz
leave
cmpsl
stc
and
js
add
fistl
sbb
aam
test
pop
outsl
mov
cmp
inc
loope
jns
sub
imul
or
daa
nop
xor
push
or
mov
hlt
xorl
shl
mov
stos
push
xor
xor
insl
rcrb
sub
xor
addl
fidivl
cmpsb
dec
fmull
lret
mov
fbld
jnp
fs
sbb
fstpt
js
sti
jns
adcb
pusha
or
in
test
jle
mov
adc
mov
lahf
into
xchg
and
iret
jne
xor
cmp
sarl
dec
xor
sar
jne
xchg
adc
addr16
cmp
jecxz
mov
mov
cmp
xchg
mov
lahf
mov
rorb
push
dec
aaa
cwtl
into
stc
or
test
repz
inc
std
sub
movsb
adc
popa
xor
sahf
inc
push
mov
insb
out
mov
lea
pop
cmovp
and
xchg
jbe
out
test
pop
dec
mov
fs
or
int3
fistpl
sub
xor
fisubl
push
adc
cmp
jns
lods
pop
test
xchg
push
loop
gs
sbb
cmp
xor
andl
sahf
mov
jge
jne
inc
inc
jmp
xor
fiaddl
inc
xor
lods
orl
loopne
or
cmpb
shlb
lcall
add
jne
rclb
jecxz
xchg
push
mov
or
adc
pop
jbe
flds
dec
aam
mov
faddl
pushf
dec
jg
int3
movsb
sbb
lock
and
dec
mov
out
cmp
or
aam
push
push
dec
and
test
dec
mov
sub
xor
cmpsl
pop
and
push
xchg
mov
xor
ljmp
mov
mov
mov
mov
mov
lret
repz
push
shrl
call
xor
stos
dec
xor
xor
xchg
into
test
psadbw
xchg
lods
in
push
inc
mov
dec
cli
lret
sarl
movsb
mov
xchg
mov
xchg
mov
insl
push
push
cmp
adc
xor
fbstp
push
push
dec
into
test
sub
pop
mov
xor
sub
fdivl
xorb
and
xor
jl
jae
imulb
sbb
imul
cld
lods
in
lds
jne
lcall
push
pop
xchg
pushf
push
nop
push
sbb
xchg
add
loopne
adc
adcb
xor
fcoms
mov
push
xor
or
fsts
outsb
inc
sbb
add
adc
and
lods
mov
lea
jmp
inc
in
enter
adc
adc
cmp
int3
dec
cmp
lcall
out
mov
and
call
inc
sahf
adc
or
mov
iret
xchg
xor
aaa
cmpsb
push
inc
cmp
shlb
and
fsubp
leave
insl
jge
xor
cli
aaa
push
mov
dec
inc
fnstcw
adc
cmc
jmp
jb
scas
adc
dec
xor
or
aaa
mov
mov
aam
jl
adc
push
or
mov
adc
xor
movsl
sbb
mov
mov
pop
inc
subb
ds
cmp
xlat
fwait
rep
push
rcll
test
xchg
lahf
ljmp
int3
in
addr16
and
faddl
jo
aad
out
pop
xor
adc
adc
fdiv
lret
imul
sti
inc
fucom
xchg
pop
icebp
shrl
lea
mov
push
je
leave
xchg
mov
xor
js
or
xor
mov
jbe
dec
mov
adc
test
sub
sbb
enter
pop
dec
dec
jb
js
dec
nop
outsl
pop
mov
xor
cmp
lods
sbb
jns
popf
int
xor
loopne
adc
sub
dec
xchg
xchg
adc
push
rcll
jo
inc
mov
addr16
pop
mov
push
pop
xor
pop
ja
and
xchg
pusha
int
ret
add
dec
nop
imul
add
in
std
xor
sub
mov
jo
pop
ja
add
fidivs
sbb
add
jle
aad
sub
out
ds
aad
mov
jge
pop
jle
adc
fwait
arpl
xor
pop
adc
adc
pop
js
cmpsb
adc
es
cmp
dec
xor
mov
push
repnz
mov
daa
dec
xor
movups
scas
data16
subb
daa
cmc
or
sbb
xchg
pop
in
sub
das
jmp
xor
rorl
push
xor
dec
pop
cmpsl
push
inc
into
pop
xor
out
inc
push
dec
mov
mov
mov
push
ja
xor
jns
inc
in
jecxz
add
stos
mov
cmovo
loopne
js
in
jbe
jge
sbb
inc
or
outsl
fists
cmpsl
xchg
cmp
xor
mov
shrb
mov
dec
ja
pop
mov
cmpb
add
ret
dec
movsl
push
loop
mov
inc
icebp
cld
cmp
xor
mov
mov
and
xchg
xor
mov
imul
cmp
icebp
jmp
sub
jae
sub
fsubl
or
inc
int3
lret
adc
lds
hlt
sti
fstl
sbb
inc
cld
dec
jg
icebp
in
mov
cmpsl
test
ljmp
scas
pop
in
dec
dec
jno
adc
sub
dec
repz
add
jle
mov
mov
adc
sub
push
icebp
and
xor
jnp
aad
data16
adc
sub
sbb
es
xor
fucomi
xor
sub
dec
sub
out
test
xor
xchg
es
rsqrtps
lods
icebp
pop
out
push
aad
jns
je
cmpl
fistps
fisubs
fwait
test
sbb
pop
insl
jno
inc
adc
pusha
pop
sbb
out
adc
xchg
dec
scas
mov
xor
push
cld
mov
mov
push
in
repnz
paddd
xor
push
lret
and
xchg
xor
sub
jno
mov
dec
cmp
out
in
dec
scas
leave
mov
mov
push
dec
fwait
insl
xor
xchg
repnz
std
lcall
xchg
out
jge
dec
aad
psrld
mov
cld
sub
repz
fcomi
inc
push
out
xor
adc
pop
movsb
push
cmp
sub
add
ret
cmc
adc
aaa
jns
ja
je
push
addr16
xor
xor
xor
orl
pusha
enter
in
adc
ret
push
or
fcoms
pop
adc
xor
shll
mov
sbb
inc
in
fstp
sbb
adc
sub
xor
adc
inc
or
and
inc
popa
ds
fdiv
sub
and
or
and
adc
and
jb
and
aas
xor
lcall
int
add
mov
jae
xor
xchg
out
pushf
mov
dec
inc
mov
jbe
test
repz
jae
fldcw
sbb
xor
scas
leave
jmp
jae
xchg
push
xchg
adc
sti
sbb
jmp
call
stc
sbb
and
outsb
mov
movsb
sahf
addl
iret
add
ficoml
bnd
inc
dec
jg
xor
ret
lcall
dec
adc
adc
pusha
int3
dec
xchg
lea
cmpl
inc
dec
fstps
pushf
adc
sub
cmc
lods
sub
es
dec
and
mulb
icebp
xor
lea
mov
ret
test
and
call
mov
enter
in
mov
in
pop
lcall
dec
jl
jns
cmp
sbbl
push
sbb
adc
test
xor
mov
dec
xchg
jge
add
sub
sub
and
popf
and
mov
aad
adc
mov
push
nop
mov
sub
mov
push
xor
mov
or
xor
mov
jg
inc
mov
lret
add
xchg
xor
sub
push
xchg
jb
mov
push
mov
xchg
and
cltd
dec
sbb
or
lret
popf
jmp
mov
clc
clc
xor
test
out
negb
inc
testl
mov
mov
ficomps
lock
repz
push
pop
mov
push
sbb
into
addr16
push
pop
pop
cmpsl
int
xchg
dec
std
rcrb
inc
push
shr
setb
mov
jp
mov
pop
repnz
es
dec
scas
fimuls
xor
lret
sbb
repz
mov
adc
adc
subl
xor
dec
outsb
ja
push
or
lods
sbb
rcr
fcmovbe
decb
data16
fmull
xor
xlat
jle
mov
jmp
sub
pop
xor
rolb
scas
adc
icebp
mov
repz
lahf
imul
cmc
out
loopne
ss
mov
int
adc
stc
daa
xchg
ss
mov
out
call
adc
sub
xor
sbb
incl
ja
out
dec
cld
xor
push
stc
jns
add
adc
in
jbe
xor
adc
or
rep
add
popa
and
xor
enter
push
push
adc
stos
fwait
mov
addr16
pop
push
cmc
jno
repz
cmp
xlat
lods
or
xor
mov
sbb
xchg
xor
nop
ljmp
fdivrs
push
jg
xorl
add
arpl
mov
xor
mov
adc
and
xor
xlat
nop
xchg
psubb
sub
hlt
cmp
adc
cmp
mov
add
mov
pop
sub
xor
test
dec
add
cmpsb
into
movsl
push
fcomi
mov
inc
pop
ret
addr16
imul
inc
or
repz
mov
cmp
mov
leave
dec
mov
push
xor
pop
pop
lods
std
or
mov
xchg
sub
dec
xchg
stos
or
mov
mov
out
mov
xchg
pop
sarl
hlt
ficompl
inc
paddsw
xor
and
dec
shrl
xor
or
cltd
xchg
in
mov
mov
inc
je
xchg
lcall
mov
es
inc
scas
jmp
pop
jb
popa
cld
test
cmp
iret
mov
ds
cmp
xor
addb
std
push
push
push
icebp
dec
aam
xor
sbb
in
sub
push
xchg
and
mov
fucomi
dec
add
add
popl
push
pop
jno
das
dec
in
xor
pushf
scas
xor
mov
sbb
subb
cmpsb
shl
jne
or
sbb
mov
sbb
in
inc
mov
shlb
aad
dec
jae
insl
mov
mov
orl
xchg
stos
hlt
stc
add
es
fildll
cmpb
and
out
jnp
jge
ds
pop
aaa
in
push
fiadds
in
push
or
sahf
ds
xor
cmp
mov
fnsave
mov
pusha
fisubrl
mov
xchg
xchg
mov
enter
js
mov
xor
xorl
inc
imul
fisubl
stc
daa
push
pushf
fcmovnu
repnz
stos
lret
xor
pop
outsl
cmpsl
xchg
cmp
fadds
jl
push
inc
insb
imul
in
xorl
insl
push
dec
xchg
ret
cmpb
xlat
inc
adc
pop
mull
popa
shlb
or
bound
mov
adc
aas
call
std
pop
mov
scas
dec
stos
push
fnsave
xchg
add
cmp
out
inc
xor
add
and
and
movb
nop
dec
cmpsb
dec
adc
iret
outsl
pop
fcmovb
daa
in
popf
xor
jg
push
in
jmp
es
xor
cmpsb
add
xor
and
mov
sub
scas
jge
mov
shrl
xor
xchg
cli
push
mov
xor
sub
es
mov
xor
xor
rol
stos
xor
jge
cmpsl
jbe
test
iret
mov
xor
aas
pusha
loopne
aam
in
lea
addr16
mov
iret
dec
cld
int
inc
xlat
std
fimuls
xchg
jecxz
pop
pop
in
mov
daa
lea
cs
in
xor
aad
mov
xor
pop
nop
pop
call
inc
lcall
xor
insl
sub
jns
jbe
jae
ljmp
sub
dec
and
pushf
hlt
mov
jae
test
push
sub
sbb
adc
push
movsl
es
lret
movsb
clc
mov
cwtl
jbe
and
xchg
cmp
cmp
sbb
or
xor
nop
push
pop
mov
xor
mov
rcll
cs
orb
add
test
pop
dec
xor
push
popa
mov
adc
xor
sbb
ja
and
out
mov
test
or
mov
inc
je
cmp
jbe
fs
jecxz
xor
lret
testl
pop
out
xor
pop
xchg
xor
in
imul
mov
mov
fdivl
dec
xor
ss
out
pop
mov
xor
cmp
xor
inc
stc
xor
negl
sbb
xchg
and
pop
std
addl
add
aaa
push
sub
jg
std
pusha
pop
in
int
xor
cwtl
sub
adc
dec
in
xorl
addr16
mov
sub
sbb
xor
pop
iret
je
push
cmpsl
mov
cmp
loope
sbb
sbb
addr16
je
mov
xor
xchg
aad
and
jmp
gs
mov
out
test
pop
mov
xchg
jno
mov
push
dec
dec
or
cmc
push
sub
jmp
add
mov
mov
andb
pop
cmp
cli
mov
dec
int3
imul
or
cwtl
js
int
push
jb
add
sarb
dec
jle
push
xor
and
push
lahf
imul
lea
inc
cli
daa
mov
stos
nop
outsl
push
pop
ror
jns
inc
fistps
adc
popa
mov
movsl
dec
xor
push
jecxz
out
ss
out
mov
rcrb
dec
and
adc
dec
dec
mov
sub
cmpxchg
das
xor
and
pop
roll
adc
pop
subl
xchg
rcll
xchg
xor
xchg
or
mov
lret
ret
sbb
popf
adc
out
loope
add
or
mov
jle
pop
jmp
pop
mov
mov
ret
int3
dec
cmp
aam
test
xor
filds
adc
push
jle
sti
fmul
sbb
and
sub
sbbb
push
cmp
nop
push
xor
pop
jno
aad
adc
xor
sub
add
stc
jg
xor
movsb
popf
xor
out
inc
xchg
adc
es
inc
movsl
and
cmc
adc
popf
dec
cs
ljmp
dec
mov
jg
out
add
cmovnp
mov
addl
cmp
rorl
repnz
and
xchg
mov
nop
xor
ja
stos
sar
xor
int3
fldcw
adc
xlat
movsl
addr16
ljmp
jns
and
in
mov
mov
xchg
xlat
dec
jle
or
mov
or
or
xor
test
outsl
inc
faddl
xor
push
add
inc
jns
xor
int3
cmp
xchg
movsb
or
add
and
fs
xor
mov
xor
mov
cmp
jmp
insb
out
add
xor
loopne
xor
sub
mov
xchg
pop
xor
pushf
cli
adc
scas
sahf
icebp
mov
lods
add
sub
dec
or
out
dec
push
adc
sahf
inc
rcr
mov
bound
add
dec
pusha
das
in
xor
in
sbb
jbe
mov
jnp
adc
cli
mov
mov
iret
push
sbb
sbb
ret
aas
pop
outsl
shl
inc
repz
out
jecxz
adc
in
hlt
test
popf
inc
mov
rcrb
outsl
lock
sub
inc
xor
xor
ret
enter
and
dec
push
imul
out
test
jmp
mov
stos
mov
adc
inc
and
cld
cmp
sarb
sub
add
sub
scas
fwait
sbb
push
jecxz
das
out
inc
mov
xor
lret
pop
or
xor
sbb
cmp
dec
push
pop
loope
push
xor
xor
xchg
dec
scas
int
xor
mov
into
cmp
xor
xchg
sub
mov
cmpl
pop
ffree
add
and
mov
imul
mov
dec
adc
pop
mov
jmp
push
test
out
fnstenv
mov
mov
sbb
rclb
push
pop
imul
popa
loopne
push
sbb
dec
cmpl
dec
pop
mov
mov
lds
bnd
mov
sub
hlt
or
xchg
dec
dec
rcll
adc
add
fstps
inc
dec
push
les
mov
imul
adc
xor
cmpsb
lods
adc
xor
mov
out
xor
mov
mov
stos
outsl
adc
xchg
mov
or
adc
inc
mov
mov
cmpsl
arpl
mov
adc
mov
ds
ja
repnz
jb
jbe
xor
adc
mov
clc
test
dec
test
jge
cmp
adc
stos
xor
adc
mov
and
ds
xlat
xor
arpl
fdivs
pushf
inc
add
push
cld
jne
shll
jb
notl
int3
adc
cmpsb
jmp
xchg
inc
adcl
xchg
mov
clc
mov
jl
repz
inc
aad
or
and
inc
movsb
aas
cmp
cmpsl
jg
lods
jle
sub
and
inc
mov
js
daa
push
cmc
adc
add
sbbb
scas
insb
or
inc
arpl
sub
xor
sub
repz
stos
add
push
subb
shl
mov
pushf
filds
sbb
hlt
cmpsl
pusha
and
pop
fdivrs
sub
fiaddl
ds
lahf
test
shr
and
pop
or
rolb
mov
cmpsb
cmp
xchg
in
sti
dec
xor
jno
cli
xor
addr16
add
mov
xor
inc
mov
xor
repnz
pop
xor
mov
out
iret
jns
ret
mov
pop
sbb
add
or
lcall
xchg
jl
xor
cmp
lock
gs
nop
lret
inc
xor
std
mov
fstl
clc
cmpsl
push
mov
add
adc
sub
mov
lods
mov
lahf
jge
shlb
sbb
dec
aas
cmp
out
jb
sarl
and
and
sub
lahf
and
mov
imul
xor
jp
mov
xor
in
leave
dec
nop
mov
jle
test
das
xchg
sbb
xor
adc
in
push
arpl
sahf
add
in
dec
adc
cltd
lcall
adc
movsb
pusha
pop
jp
loope
xor
sbb
cmpsl
inc
mov
push
iret
gs
lods
mov
insl
rcr
xor
fsub
and
sub
lods
cmp
movsb
sti
sbb
rolb
xor
push
idivb
ljmp
repz
pop
lahf
xchg
xchg
lock
xor
adc
dec
je
cltd
jmp
fdivs
xchg
cmp
inc
lods
jb
loop
lock
outsl
daa
scas
shr
rcr
dec
dec
xor
xchg
je
dec
ret
pushf
and
cmc
fdivr
lds
lret
xor
dec
pop
jecxz
imul
pop
repz
push
push
cmp
cld
mov
dec
test
adc
pop
cmp
nop
pushf
sbb
mov
lds
xor
inc
adc
movsb
mov
divb
jmp
xor
in
iret
rcrl
jge
sub
adc
ds
adc
lcall
mov
ljmp
ja
sbb
push
shl
in
bound
fnsave
ja
out
cltd
xor
pop
fists
add
xor
dec
push
addr16
popa
call
or
aad
cltd
ficoml
les
loope
xor
popl
pushf
divl
movsl
cmc
sbb
jns
sbb
cwtl
int3
push
mov
dec
mov
mov
adc
add
jl
push
adc
sti
cltd
shr
mov
adc
inc
add
xor
sar
dec
daa
arpl
mov
jmp
add
xor
pop
xor
xlat
adc
jle
jmp
cmc
movsb
pop
or
jo
movsl
out
xor
inc
ret
mov
dec
sub
lahf
push
dec
add
aaa
push
loope
xchg
ret
mov
jo
xchg
jno
jge
lds
sbb
ret
popa
xor
or
dec
and
inc
dec
xlat
xor
push
insb
push
pop
push
pop
pop
lret
pop
dec
xor
enter
and
int3
and
pop
sub
jge
push
jnp
xor
cmp
mov
xor
mov
sub
push
test
xor
cmp
in
push
xor
enter
popf
jo
loope
push
ljmp
xor
int3
scas
inc
sbb
scas
or
das
xchg
hlt
lcall
dec
fbstp
in
pop
orl
push
lahf
jle
inc
mov
cwtl
pushl
ja
fcomip
js
mov
fiadds
xor
in
je
xchg
jg
add
adc
fcom
cmpsl
sub
mov
inc
dec
mov
popf
push
outsb
dec
lods
rdmsr
inc
call
jbe
sti
fstpt
and
add
or
push
out
sub
dec
or
int
cmp
dec
sub
dec
mov
sub
adc
add
xor
pushf
cld
jmp
mov
xchg
popa
fldenv
and
cmp
xor
in
leave
xchg
shlb
int
push
repz
add
popf
inc
lea
fsubl
ljmp
out
or
sub
aad
mov
inc
adc
sbb
fstps
sahf
test
mov
inc
pop
mov
xchg
push
xor
fdivs
mov
cmp
pop
cs
mov
ljmp
xor
movsl
stos
insl
xchg
mov
dec
sbb
inc
ja
fiaddl
sbb
insb
mov
add
fbld
push
ds
dec
jae
cmpsl
pop
adc
mov
shrb
stc
pop
rdmsr
jl
cmp
xchg
scas
fisubrs
std
push
adc
and
lret
cs
pushf
inc
std
or
xor
xlat
mov
xor
cli
fcomps
movsl
clc
das
pop
sbb
inc
cltd
xor
jo
dec
pop
sti
xor
mov
mov
or
stos
imul
bound
cmp
fs
clc
adc
stc
sbb
and
jae
dec
and
mov
ds
cld
inc
xorl
jo
rorb
mov
push
dec
fwait
xor
mov
lods
mov
fdiv
sub
scas
push
and
ja
mov
xchg
outsl
loope
sti
mov
inc
xor
inc
dec
ds
jbe
jo
cs
test
xor
in
dec
sub
out
xchg
mov
les
lret
ret
mov
mov
mov
lods
addb
mov
sbb
xor
fsubrs
scas
and
rcl
dec
leave
jecxz
jmp
pop
mov
sub
inc
and
outsb
dec
cltd
jge
mov
out
dec
nop
pop
mov
pop
or
pop
adc
cltd
adc
loopne
xor
xor
je
insb
inc
dec
xchg
iret
divl
int
dec
jmp
mov
xchg
aas
jg
mov
popa
icebp
mov
xlat
mov
ds
dec
jge
lea
mov
imul
int
rolb
adc
icebp
mov
or
mov
jg
cld
jp
test
jne
and
adc
sbb
adc
sahf
adc
cmp
dec
mov
mov
jmp
outsb
lods
cmc
dec
ja
xor
cld
and
dec
xor
iret
mov
mov
fstl
lahf
test
inc
je
cld
fmuls
popa
push
sbb
xchg
sahf
adc
dec
lock
cmp
lock
push
ret
or
leave
jg
jno
popl
xchg
push
cmc
pop
icebp
xor
daa
stos
pop
xchg
out
xor
test
xor
cmp
cmp
int
in
sub
mov
mov
inc
fistpl
cmp
in
clc
loopne
mov
mov
jge
out
pop
pop
xchg
push
ss
cmp
add
scas
ret
cmpsl
push
push
fmuls
pop
outsl
xor
call
in
xor
mull
push
mov
or
xor
dec
or
xchg
jbe
cwtl
cmp
mov
mov
mov
dec
xlat
stos
sbb
cld
inc
scas
mov
jnp
jne
add
add
cmpsl
xor
popa
adc
or
cltd
fimull
test
xor
add
pop
dec
repz
je
xchg
scas
push
xor
push
xchg
or
push
cmp
add
adc
pop
loop
cmp
mov
xor
jne
shlb
and
insb
xor
inc
sbb
hlt
psubd
cmpsb
in
mov
movl
lock
and
sbb
mov
inc
repnz
push
jno
jns
lea
mov
mov
shrl
and
mov
in
sahf
sub
sbb
in
mov
imul
mov
mov
jmp
add
shlb
lods
dec
outsl
mov
call
mov
xlat
pop
loopne
inc
leave
int
mov
push
cmc
test
xor
jge
xchg
pushf
lcall
mov
loopne
or
fwait
inc
ds
add
mov
dec
xor
stc
cmc
xor
data16
inc
push
adc
loopne
or
sahf
addr16
fstps
lcall
in
cwtl
repz
sub
leave
bound
stc
std
loope
popf
dec
add
mov
sub
jmp
pop
mov
or
sub
add
inc
add
add
movsb
int
out
dec
inc
sub
in
pop
je
xchg
xor
jb
gs
inc
in
cmp
sahf
mov
mov
mov
shl
jb
call
jno
out
mov
test
repz
and
aam
jb
xor
xor
jl
sbb
push
insb
out
pop
dec
push
pop
xor
aad
pop
je
into
xchg
jb
xchg
adc
xor
nop
mov
xor
sub
or
xchg
push
inc
aam
popf
jmp
aad
mov
dec
adc
or
mov
cmp
jo
jp
adc
popf
lods
and
sbb
clc
xor
adc
std
push
movsl
xchg
dec
xor
dec
loope
test
xchg
imul
int3
sub
in
pusha
mov
insb
cmp
adc
cmp
mov
lods
sub
add
adc
or
ud2
dec
das
sti
stos
nop
add
xor
lods
xor
inc
ret
push
mov
mov
inc
popa
or
push
xchg
call
cwtl
pop
aad
fwait
inc
xor
xchg
fdiv
andb
adc
push
cmp
cld
lret
mov
ss
mov
lret
and
xor
push
ljmp
pop
pxor
xlat
incl
imul
pop
iret
je
repnz
fsts
arpl
inc
mov
inc
push
aaa
mov
stos
rcrb
ret
dec
pop
sub
repz
mov
push
and
inc
dec
xor
shrb
test
sbb
push
rolb
xor
ljmp
shrb
pop
fs
xchg
add
dec
sbb
cmpsb
inc
in
adc
sbb
cmp
stos
fwait
push
jae
push
fs
imul
push
lock
push
push
xchg
inc
add
and
dec
or
stc
pop
outsl
pop
lods
inc
dec
adc
and
fwait
cmpsl
and
adcl
or
add
adc
dec
gs
das
inc
and
clc
sti
xchg
jns
cmc
xor
fstpt
into
xor
xchg
add
pop
jg
cmp
adcl
lods
adc
lock
dec
xchg
dec
cli
movsb
repz
hlt
jp
inc
inc
pop
mov
adc
pop
sti
push
dec
repnz
xchg
push
iret
shrl
push
sbb
insb
sub
jge
lret
imul
scas
aad
insl
cltd
sbb
adc
push
icebp
and
or
adc
call
xor
xchg
jne
scas
dec
aam
in
xor
loopne
add
or
test
or
xor
jl
inc
xor
mov
lea
addl
sti
xor
and
inc
xchg
xchg
pop
rorb
movsb
sbb
jns
cli
lahf
std
call
sahf
mov
adc
cmc
push
push
lds
mov
xor
pop
xor
cmpsb
int
xor
adc
add
xchg
mov
icebp
leave
xor
mov
pop
xor
or
mov
cmp
inc
jo
jp
mov
xchg
cmp
adcl
int
lock
lahf
shrb
test
mov
jnp
xor
in
xlat
outsl
lea
xor
and
xlat
scas
nop
dec
xchg
popa
lods
xor
jp
xorb
daa
pushf
scas
imull
fistpll
lock
lea
push
mov
or
xor
xchg
outsl
and
enter
jmp
in
stos
adc
jae
mov
sub
jmp
inc
inc
aad
dec
fisubrl
out
sbb
sub
icebp
fildl
jo
enter
sbb
xlat
addb
mov
movsl
loop
mov
adc
inc
stos
imul
inc
sub
xor
enter
fistpl
hlt
sub
mov
sahf
jg
in
pop
xorl
popf
dec
sub
or
sahf
rorb
nop
dec
xchg
fwait
pusha
dec
pop
out
adc
xchg
sbb
adc
out
inc
or
adc
adc
lret
cmc
push
sbb
fidivs
icebp
notb
push
incb
adcl
fidivl
call
pop
xor
add
test
outsb
mov
push
push
xor
add
and
stos
shr
int3
test
xchg
or
dec
inc
mov
pop
mov
xor
pop
mov
mov
ss
roll
test
lods
es
push
stc
dec
out
inc
pop
mov
int3
inc
add
xchg
mov
cmc
rclb
xor
xor
arpl
adc
sub
jb
das
sbb
test
sub
xor
fsubl
inc
ficoms
add
sub
sub
xor
clc
push
and
std
in
xor
add
mov
push
inc
pop
mov
pop
sbb
mov
dec
mov
mov
dec
cmp
pop
or
mov
stos
roll
cmp
or
insl
pop
test
pop
rcrl
add
dec
jg
cli
inc
adc
hlt
dec
shll
jmp
es
cmp
sarl
and
imul
fs
lods
xor
out
sbb
or
add
jmp
insb
xor
fcomi
cwtl
xlat
xchg
add
mov
sbb
cld
or
jg
int3
jle
pop
dec
xor
imul
xor
sbb
cmp
inc
pop
jle
xor
cmp
jae
push
outsb
lea
icebp
lahf
pop
xor
dec
inc
inc
nop
fdiv
mov
jnp
inc
lods
pop
fstps
or
push
mov
mov
ror
xor
dec
xorb
testb
xor
repnz
test
fcoml
ds
loopne
mov
cltd
cmp
dec
add
xchg
rep
pop
sbb
inc
insl
push
mov
jnp
mov
nop
int3
in
push
jns
jg
add
scas
push
push
xlat
xor
dec
cmp
sub
push
jb
lret
xor
insl
in
jmp
mov
fbstp
sahf
adc
cltd
outsl
lcall
enter
jnp
pusha
daa
xor
aad
and
or
loope
mov
into
adc
lcall
test
mov
lea
mov
mov
xchg
test
jmp
mov
adc
lret
cmp
jns
nop
cmpsl
xor
gs
or
push
iret
ret
add
pop
xor
xor
push
add
mov
rcl
cmc
pop
cwtl
inc
mov
aam
mov
adc
movsl
xor
push
negb
push
xor
xchg
scas
dec
sbb
inc
xchg
pop
inc
cmp
xchg
jne
or
mov
aad
in
inc
stc
inc
loope
adc
xor
push
and
adc
cwtl
or
in
cltd
sbb
adc
sti
jo
mov
cltd
movsl
out
mov
jle
mov
pop
sub
xor
in
scas
dec
push
fldt
jnp
test
add
and
aaa
sahf
xor
fisttpll
cmp
xor
fistps
outsb
pop
dec
jmp
enter
es
and
pop
xor
pop
jp
pop
mov
ret
push
mov
jae
test
pop
stc
mov
shlb
pop
ja
and
nop
lock
cltd
iret
outsb
adc
jg
and
xor
mov
jns
xchg
and
and
inc
add
mov
out
je
jns
pop
and
sub
xor
sub
loop
push
add
sbb
imul
out
faddl
inc
xor
clc
xor
sbb
push
sbb
lahf
push
fisttpl
mov
sahf
mov
scas
ret
mov
pop
insl
aam
test
int
test
add
pusha
cltd
add
mov
into
lods
xor
xor
mov
fstl
sub
pop
imul
xor
lods
cmp
xor
mov
mov
cmp
xchg
insb
sub
subb
inc
xor
fwait
push
cmp
inc
push
xor
loope
sbb
pop
push
mov
mov
int3
xchg
xor
jne
test
pop
aaa
sbb
xor
cmp
pop
mov
dec
mov
out
cmp
xlat
popf
sbb
xor
lahf
xor
mov
adc
sub
rcrb
popl
out
aaa
cmc
cmp
pop
inc
xchg
hlt
dec
push
flds
jne
add
inc
cld
ret
into
xchg
add
push
xor
or
gs
lret
xor
mov
mov
mov
cmp
and
fdivs
and
out
lds
adc
out
jae
push
adc
cmp
or
dec
inc
inc
pusha
jae
mov
subb
out
adc
xor
xchg
add
insl
icebp
jle
jo
mov
sbb
loop
mov
mov
mov
cs
xor
mov
loope
lods
movsb
push
call
ja
sbb
xor
clc
loope
inc
mov
add
test
scas
inc
in
xorl
int3
or
mov
xor
jmp
push
xchg
ficoml
push
jge
inc
inc
mov
cmp
jmp
sbb
jns
mov
push
sti
insb
or
fs
and
mov
mov
loop
lret
pushl
or
mov
xchg
mov
dec
xchg
adc
sahf
pusha
movsl
daa
push
dec
inc
lods
xor
cli
sbb
add
mov
push
jnp
aas
popl
mov
dec
js
mov
call
lcall
cld
or
push
sbb
xorl
sarb
add
inc
rcrl
xchg
int
out
fdiv
dec
lods
gs
sub
mov
std
xor
adc
cmp
lea
pop
in
pop
mov
cmp
bound
insl
shlb
dec
add
movsl
test
xor
movsb
stos
adc
and
in
inc
dec
sub
div
sbb
xor
lret
adc
sahf
aad
dec
sti
jae
ja
xor
out
lods
mov
sbb
in
add
out
loopne
cmc
repnz
mov
pop
jne
xchg
lds
outsl
and
mov
jmp
inc
dec
xchg
fs
push
dec
xor
out
xor
or
imull
rcrl
dec
adc
adc
adc
xor
sbb
je
enter
push
jp
jmp
dec
xor
out
fnstsw
rorb
cmp
jecxz
popa
mov
cltd
and
pop
std
xor
das
aad
imul
push
xor
pop
add
sub
mov
in
or
or
push
jle
push
lock
fistl
mov
mov
jge
and
mov
mov
call
push
pusha
stos
xchg
fidivl
sub
adc
xchg
or
scas
ficomps
movsb
and
inc
adc
push
iret
mov
stc
in
cmpsl
xor
mov
mov
adc
pusha
lea
test
cmpsl
xchg
dec
add
xor
xchg
aad
add
xor
jae
cmp
popa
and
xor
fisttps
stc
pop
or
and
xchg
sub
aad
push
dec
push
dec
cmpsb
xchg
iret
ret
loop
cli
adc
hlt
push
cltd
xlat
in
mov
pop
add
push
repz
movsl
dec
ficomps
out
push
scas
xor
ret
pushf
mov
xchg
sahf
jl
testb
xor
in
daa
fyl2xp1
mov
xorl
fsts
arpl
aaa
dec
mov
inc
mov
lods
pop
jecxz
inc
cmp
mov
push
adc
or
insb
imul
sbbb
iret
jl
xchg
pushf
icebp
xor
xchg
dec
xor
jmp
push
outsb
inc
aad
xchg
mov
sub
mov
les
mov
out
dec
push
scas
cs
hlt
mov
call
or
ror
sub
fnsave
and
mov
fistl
and
add
pslld
sbb
xor
dec
nop
std
xor
fistps
pop
enter
inc
xchg
cmp
inc
loopne
mov
mov
xor
jge
rdmsr
cmpsb
jo
repz
mov
fnstsw
pusha
mov
in
lahf
shl
push
add
pop
or
mov
cmp
xor
imul
stos
in
sub
fcomi
xchg
xchg
rcr
lcall
int3
lret
xchg
bound
enter
xor
mov
add
fisttpll
xor
lods
mov
lcall
fcoml
inc
daa
shl
jl
pop
add
sbb
shrb
andl
cmpsl
jno
nop
sub
pop
stc
jl
cmc
or
mov
pop
inc
test
cmp
addr16
push
xchg
adc
scas
mov
fsubrl
xor
nop
fldt
in
add
and
inc
mov
jns
das
and
mov
or
pop
pop
sub
imul
push
xor
lret
lods
mov
xchg
in
or
push
roll
cmp
pushf
add
and
pop
pop
mov
sub
pop
sub
xor
mov
adc
scas
mov
xorb
pop
shl
mov
daa
into
or
xor
push
and
iret
repz
js
sahf
xchg
jle
lds
xor
xchg
das
xchg
xor
insl
movsl
cmc
xorb
shl
stc
les
xor
aaa
mov
das
xchg
xor
movsl
fcom
dec
cmpsb
fldcw
xor
sbb
xor
push
jp
test
repz
push
xchg
cli
jp
adc
xor
ljmp
shlb
adc
cmp
xor
ds
cld
jge
repnz
aad
or
fwait
cmpsl
xrstors
xor
pop
insl
outsl
rcll
shll
test
sahf
pop
test
out
inc
xor
mov
fdiv
cli
xchg
pop
adc
addb
aad
mov
mov
fnstenv
mov
xor
cmpsl
pop
pushf
mov
icebp
xor
xor
mov
pusha
rdmsr
pop
add
xor
or
mov
imul
out
enter
mov
and
push
andl
xor
out
repz
fdivp
jmp
movsl
ds
adc
inc
popf
cmp
incl
loopne
stos
inc
cmpsl
jbe
add
xor
adc
punpckhdq
adc
inc
xor
shrl
cmovg
testb
hlt
lahf
jg
xor
imull
or
mov
mov
ficoms
lahf
xchg
sub
ret
jo
pushf
fstpt
inc
mov
icebp
dec
push
jmp
or
insl
jle
and
outsb
push
cwtl
iret
clc
sub
and
mov
js
sbb
mov
mov
cmp
xchg
daa
arpl
test
les
mov
lahf
mov
lds
cld
movsb
lods
sub
pop
mov
int
jle
mov
fstp
xchg
sbb
rcll
mov
es
and
and
sub
loopne
or
xor
sbb
int
scas
clc
xor
xchg
xlat
dec
jbe
movsb
push
into
sub
mov
cwtl
push
mov
jl
sub
stos
iret
jecxz
or
sub
jmp
popf
mov
loopne
les
stc
or
leave
xor
push
xor
jecxz
add
test
xor
bound
stos
jle
icebp
sub
add
xor
pop
mov
fldt
dec
movsb
pop
or
test
xor
mov
sbb
jge
push
mov
fsubrl
shll
sub
mov
and
push
shrl
mov
lock
fisubrl
push
adc
xor
xchg
dec
mov
icebp
out
xor
scas
jecxz
xlat
movsl
sarl
iret
cmpsl
cld
push
enter
xchg
and
cmc
loopne
adc
mov
sub
sub
repz
jmp
sbb
xor
xor
mov
js
pop
loopne
cmp
xlat
ret
xchg
addr16
sub
xchg
ret
or
inc
psubq
dec
sbb
mov
xor
and
popf
xchg
pusha
aam
fmull
push
add
inc
xchg
inc
cmp
lret
xor
shll
shlb
xor
push
loopne
pop
std
fidivs
stc
pop
or
pop
xor
jo
dec
and
add
addr16
xchg
push
push
inc
dec
mov
testb
jno
hlt
or
mov
cmpsb
inc
or
out
sti
pop
stos
fldenv
add
adc
dec
sub
and
add
xor
jne
mov
mov
not
aas
inc
mov
add
xor
add
jecxz
xor
test
mov
into
nop
adc
call
mov
aas
data16
mov
or
or
repz
shrb
xchg
push
mov
pop
jmp
lsl
sub
outsb
sub
and
push
cmpsl
pop
xchg
test
sbb
inc
or
cmp
push
mov
out
xor
dec
and
pop
mov
rcll
xor
and
aas
add
mov
push
mov
mul
cmp
decl
adc
popl
push
inc
fldt
cs
or
lods
jno
and
mov
jns
out
ficompl
mov
outsl
mov
mov
in
xor
shrl
push
push
cmp
roll
les
adc
leave
loopne
pushf
into
inc
xor
shr
mov
jle
scas
lods
fisttpll
test
lret
inc
xchg
xor
sbb
sub
push
stos
xor
popf
sbb
and
sbb
inc
lods
call
dec
cmp
fs
push
jl
mov
jo
fisttps
xor
int
loope
pop
fwait
xor
adc
mov
or
lret
mov
imul
cmpsl
inc
je
mov
xor
mov
fisttpl
mov
sub
mov
inc
pop
out
xor
xor
out
jbe
shl
mov
shr
pop
and
inc
sub
test
push
sub
xor
shl
fists
adc
cmc
dec
fwait
inc
adcl
mov
aaa
push
mov
sub
lods
inc
pop
mov
xor
adc
xor
sahf
es
xlat
sub
mov
push
pop
mov
adc
incb
xor
push
scas
cmp
push
fwait
lods
scas
push
xchg
sub
inc
push
xor
daa
mov
shlb
jmp
jae
mov
inc
mov
je
outsl
and
sbb
repz
xadd
clc
lock
addl
stos
inc
inc
icebp
pusha
cmpsl
xor
popa
xor
adc
xor
pop
iret
xchg
xchg
xchg
fldl
dec
or
xor
sti
rcll
stos
or
xor
and
pmaddwd
into
adc
imul
stos
jp
sub
inc
fbstp
add
mov
iret
mov
xor
js
mov
xor
mov
pop
xchg
inc
cmpsb
jecxz
xor
popa
mov
xor
je
clc
push
add
dec
int
jge
dec
dec
and
dec
loop
lea
test
push
adc
pop
std
push
cmpl
lock
test
and
sub
xchg
push
stos
xlat
fidivrl
mov
and
jnp
xchg
xchg
mov
mov
push
sbb
repz
fldenv
lods
xor
or
jne
cmp
rclb
loope
mov
and
mov
loop
push
add
xchg
in
cmp
popf
repnz
dec
imul
mov
test
push
gs
mov
adc
xchg
mov
into
cmc
xor
jae
mov
push
cs
cmpsb
and
sbb
xchg
and
dec
or
test
mov
add
inc
push
bound
cmpsl
mov
pop
sbb
imul
loope
mov
cs
dec
loopne
dec
adc
push
jmp
sbb
test
std
stc
orb
xor
arpl
mov
add
jb
jbe
dec
mov
subb
out
push
sub
sub
test
mov
int
xor
dec
mov
or
pop
aaa
ret
pusha
or
cld
inc
lock
fstl
adc
scas
adc
dec
inc
test
xchg
inc
inc
adc
cli
and
mov
inc
mov
dec
shll
cmp
xor
xlat
das
pop
xor
jmp
jo
outsl
stos
inc
addr16
imul
adc
mov
dec
test
iret
out
aaa
mull
push
lahf
xorb
add
xor
jg
int
adc
or
and
fcomp
mov
push
xor
in
mov
mov
jno
dec
cmp
inc
xor
cltd
mov
loopne
and
xchg
adc
xchg
stos
movsl
push
arpl
sub
sbb
jae
call
daa
mov
xchg
pop
dec
lock
test
inc
push
pop
lahf
cmp
mov
inc
pop
cmpl
loopne
cli
ja
ljmpw
test
or
dec
stc
outsb
in
inc
fmull
add
adc
cmp
daa
xor
shlb
xor
dec
sub
jp
jns
mov
inc
xlat
jecxz
int
loop
push
lea
fbld
mov
incl
leave
mov
fcmovnbe
mov
xor
xor
fistpll
xor
mov
aas
push
imulb
push
hlt
push
adc
sub
jno
sbb
inc
jecxz
push
xorl
sub
popf
rolb
por
imul
loope
add
inc
jmp
pop
int3
push
mov
dec
jnp
call
sub
outsb
mov
ljmp
mov
pop
mov
sarl
lock
ud1
mov
inc
lret
xor
adc
pusha
mov
cmp
sarb
sbb
cltd
movsl
subl
xor
sub
add
inc
fsubr
inc
repz
out
sbb
insl
cmp
es
mov
outsl
cmpsb
in
sub
xor
aas
int
jb
into
sbb
add
fisttps
push
cli
jl
mov
ret
cwtl
dec
cmpsb
push
xor
pop
jno
int3
or
pushl
mov
loop
and
ljmp
xorl
fidivl
imul
test
idivl
xchg
sub
inc
sbb
sub
ljmp
pop
push
in
xor
in
loopne
adc
xor
xchg
jae
loope
xor
scas
or
call
out
cmc
mov
andb
sbb
andl
out
shlb
imul
pop
sbb
adc
jbe
lock
int3
dec
push
xor
xchg
out
popf
cmp
repz
mov
or
addr16
sub
push
add
add
jns
xor
xor
xchg
into
or
inc
lret
adc
decl
mov
repz
xchg
mov
repnz
sbb
std
fwait
inc
and
xchg
or
cmp
inc
sbb
mov
nop
xchg
xor
mov
mov
cmp
fldl
push
cli
roll
and
push
cmpsl
sbb
lahf
adc
mov
xchg
xor
gs
xor
sbb
adc
andb
ds
mov
fcmove
mov
rorl
dec
cmpsb
xor
push
sub
ja
push
xor
out
test
push
and
jb
icebp
pop
shlb
cmp
adc
mov
jle
daa
xchg
inc
sub
or
mov
mov
pop
pop
jo
pop
pop
add
sub
lret
jbe
ja
push
xchg
in
lret
arpl
cltd
inc
add
adc
int3
push
mov
scas
jns
out
xchg
stos
sub
jl
stc
dec
int3
or
push
jbe
je
cld
push
jns
or
leave
cmp
and
push
pop
mov
cld
add
test
repz
ret
mov
sbb
shll
xchg
push
mov
push
dec
icebp
imul
add
cmp
sahf
xor
lock
cltd
in
mov
adc
aas
loopne
js
xor
adc
rcll
cmp
xchg
daa
int
imul
mov
scas
and
mov
in
push
shll
shll
or
lods
xor
test
jmp
mov
sub
or
andb
pop
shrl
push
sbb
sbb
fistpll
rolb
lea
inc
lgs
dec
out
imul
pusha
sbb
pushf
mov
nop
add
inc
xor
ret
popa
in
fmull
inc
mov
shll
lock
xor
jne
pop
lods
ss
inc
adc
and
les
jecxz
sub
cmp
inc
mov
xor
fnstcw
adc
sub
imul
aam
jl
or
cwtl
pushf
dec
pusha
add
sarb
sub
aas
add
sub
nop
movq
adc
mov
pusha
push
mov
fs
xchg
lods
push
mov
fdivp
aas
xor
into
scas
xlat
xchg
shll
out
dec
pop
in
jg,pn
pop
cmc
jl
stos
push
jo
fdivs
jno
sahf
xchg
xor
cs
adc
add
or
ljmp
aam
push
pop
ss
and
jg
addl
fnstcw
fadd
mov
push
and
sahf
cmp
jbe
jns
dec
into
sub
insl
cmp
test
cmc
ja
or
sub
imul
mov
imul
pusha
jmp
xchg
lods
jb
rorb
xor
scas
dec
sub
xor
mov
lret
stos
xor
icebp
or
inc
xor
cltd
fwait
pop
xor
pop
xchg
popf
call
leave
inc
jl
movq
ret
cmp
jmp
xchg
mov
xor
je
sub
jne
xor
cs
outsb
push
sub
jle
cmc
fidivs
dec
lock
mov
add
out
xor
mov
mov
jge
xor
imull
ljmp
sarl
mov
fdivrl
jns
xor
pop
ds
daa
dec
add
mov
cmp
xor
outsb
dec
lahf
jp
ja
imul
adc
mov
add
xor
and
xchg
or
gs
adc
lods
mov
ss
popf
andl
jno
inc
test
daa
sub
xchg
push
std
nop
dec
lods
jnp
roll
mov
lods
ds
cmp
xchg
pusha
mov
jl
fnstcw
repz
or
add
shl
jno
sahf
xor
pop
cmc
jb
mov
dec
dec
int
xor
inc
sahf
popa
aaa
negl
jp
sub
int
mov
mov
dec
das
inc
sbb
popa
jo
xchg
stos
and
sbb
and
or
dec
pop
fdivp
fwait
sub
xorl
scas
xchg
addr16
rorb
inc
mov
stc
lds
xor
mov
adc
cmc
add
dec
test
fnsave
lret
push
in
xor
push
icebp
and
mov
add
xchg
mov
mov
rcl
js
mov
cmp
xor
push
adc
roll
je
mov
and
jbe
in
sbb
shlb
dec
mov
in
cmpsl
adc
xchg
enter
aam
adc
in
stos
cmovle
out
inc
add
sub
xor
mov
subb
push
xor
and
sti
popa
jle
pop
xor
push
add
data16
cs
mov
adc
aaa
xlat
xor
mov
iret
xchg
mov
mov
xor
dec
pop
or
dec
popf
lret
jo
cmp
add
cmp
lods
addb
call
stos
stos
into
pushl
adc
loopne
sbb
lock
mov
fs
pop
jmp
scas
in
xor
or
cwtl
push
testl
arpl
in
xchg
or
hlt
xor
xchg
add
push
fsub
pop
dec
or
mov
dec
in
or
sahf
inc
rdmsr
out
dec
stos
pusha
shrb
lods
xchg
and
mov
fmuls
enter
jecxz
xor
nop
lcall
outsb
mov
adc
sbb
pop
es
lods
scas
xchg
sub
loopne
clc
or
mov
das
ss
mul
scas
xor
fwait
in
mov
lds
adc
inc
ljmp
cmp
xchg
cmpsb
jb
sub
scas
repz
xor
fisubrs
mov
shl
sub
xor
mov
in
add
and
fwait
ror
loop
hlt
xlat
je
xor
inc
pop
in
mov
add
into
sbb
popa
daa
and
rcll
aad
pop
cmp
xor
xor
mov
sub
xor
push
mov
jnp
push
push
sub
push
xor
push
in
imul
or
gs
test
int3
clc
insb
mov
outsb
sub
inc
xor
add
xchg
test
cwtl
dec
push
xor
out
sub
push
stc
adc
push
xor
push
sbb
and
js
orl
adc
ja
sbb
std
fidivs
mov
fwait
movsb
mov
loop
push
mov
inc
jl
out
xor
bt
into
iret
mov
mov
jmp
lods
mov
add
loopne
xor
dec
push
fidivl
mov
jnp
cmp
or
sub
ss
add
add
sub
pop
cltd
int
xchg
inc
jle
push
inc
xor
aaa
in
repz
cmp
pop
jae
xchg
icebp
test
sbb
loopne
cld
xchg
pusha
pop
xor
and
pop
xor
inc
test
mov
inc
push
sbb
test
pop
cmc
and
add
dec
iret
sub
call
xchg
pop
cmp
push
xor
shrl
hlt
mov
out
pop
test
adc
xor
jns
stc
jg
cmp
je
pop
dec
adc
or
cmpsl
sub
jp
pop
xchg
xor
cmp
xor
fidivl
adc
lret
sub
lods
mov
sarb
pop
lcall
ss
icebp
push
sub
aad
add
das
cmp
hlt
out
xchg
ljmp
cmpsl
jge
xchg
xorl
xor
mov
xor
cmpsb
inc
mov
lcall
rorb
fiadds
out
add
dec
cmp
cmp
lea
aad
mov
adc
loopne
scas
and
push
cs
mov
in
xor
gs
cmpsb
stos
push
rclb
das
xor
aad
rorl
xchg
stc
les
xchg
scas
xor
adc
jg
xlat
dec
in
outsl
dec
mov
cmpb
cmp
sbb
mov
inc
sub
aam
xchg
xor
mov
add
or
mov
outsb
aad
xadd
push
cmp
sbb
sbb
imul
fbstp
out
jo
idivb
cmpsl
jbe
xor
or
adc
out
lds
hlt
enterw
jmp
movsl
repz
sahf
dec
call
arpl
xor
out
repnz
inc
xor
adcb
fwait
sbb
movsl
pop
or
fldt
int
cltd
and
mov
lods
xchg
scas
cmpsl
das
cmp
in
adc
std
popf
insb
movsl
movsb
shrl
lock
mov
xlat
xor
xchg
mov
inc
ja
aam
jl
in
and
xor
mov
push
icebp
inc
test
jb
imul
and
sbb
add
mov
dec
and
stc
xchg
push
push
cmpsl
aad
dec
fwait
sbb
pop
add
inc
test
inc
jp
jns
popa
xchg
adc
loope
arpl
invd
push
xlat
and
xchg
add
je
xor
in
test
inc
xchg
jnp
jo
cwtl
xor
das
xlat
lods
adc
js
lds
iret
pusha
mov
push
rcrl
xchg
mov
push
push
adc
cmc
inc
xchg
sbb
xor
loopne
xor
popa
pop
sahf
sub
pop
or
lret
add
push
inc
outsb
movsl
mov
xorb
lcall
aaa
movsl
mov
sti
mov
das
dec
pop
scas
es
stc
je
mov
sub
add
xchg
cmc
test
inc
lret
imull
jecxz
inc
xor
cmpsl
repnz
push
rcl
shll
xadd
xorb
pushf
xorl
out
add
cmp
pop
xor
sub
adc
xor
jg
sti
out
out
shlb
pushf
ja
lret
mov
add
pop
jbe
add
dec
fs
cmp
xlat
xor
xor
sbb
jmp
sub
push
adc
push
jb
repz
lret
enter
or
jmp
pusha
mov
cmp
sub
push
sub
mov
mov
cmp
mov
pusha
aam
test
xor
lret
xor
cmp
xor
or
insl
pop
jg
or
push
nop
test
ss
movsl
loope
dec
adc
cltd
cmp
cli
nop
dec
jmp
push
in
mov
xor
push
jb
push
mov
sub
movsb
add
aad
stos
sub
and
jnp
sbb
pop
fldenv
pusha
xchg
add
scas
xor
int
fidivs
fadds
outsb
mov
xor
std
inc
xor
cmpsb
xor
addr16
xor
fsubrs
mov
mov
add
jbe
mov
mov
mov
adc
inc
ss
fnstcw
ror
pop
js
dec
and
sub
dec
scas
data16
mov
test
lret
xor
aas
int
mov
fsubr
sub
xchg
lret
or
ds
out
xor
fistpll
pop
sbb
and
pop
jae
xor
and
sbb
sbb
push
out
lret
ss
mov
out
pop
mov
cmp
or
hlt
mov
add
dec
push
aaa
cwtl
mov
sbb
scas
sub
sub
jg
aaa
dec
inc
xor
mov
out
inc
movsl
xor
insb
xchg
cmp
jne
cltd
test
movsb
mov
or
je
fs
cmp
das
repz
loop
sbb
inc
std
aad
sbb
sbb
xor
jmp
in
jmp
in
inc
xor
aas
iret
data16
les
out
add
pop
lock
mov
sub
xor
into
push
mov
into
add
or
stos
sbb
imul
jp
cld
cli
mov
pop
jae
sub
mov
xor
stos
mov
jg
flds
push
jbe
dec
movsb
xor
jns
jno
lahf
or
stc
test
imulb
out
adcb
leave
cmc
push
shll
dec
jno
and
out
popa
mov
mov
mov
scas
inc
ljmp
jae
inc
daa
fadd
xlat
or
cld
rclb
lock
mov
leave
jecxz
adc
xor
in
incl
push
cli
test
pop
push
pop
fidivs
cmp
push
stos
popf
test
and
push
pushf
sbb
stc
adc
dec
xlat
mov
fidivl
xchg
loope
lea
dec
xor
fisubs
jecxz
orb
testb
add
movsb
and
sub
adc
lods
adc
adc
xor
daa
add
and
pop
cmp
xchg
std
push
mov
clc
push
jp
sbb
int
lret
and
fstps
mov
fiaddl
xor
and
cs
popf
shr
cmc
mov
inc
lret
dec
imul
adc
lret
mov
pop
stos
lcall
inc
cld
arpl
loopne
push
jp
je
or
mov
mov
aam
xchg
sub
out
xor
shrl
mov
add
xchg
mov
xor
ret
jae
daa
and
cmp
or
cli
push
mov
sbb
int
lcall
lahf
cmp
adc
scas
ss
inc
aaa
adc
push
aas
mov
push
xor
data16
xor
sbb
scas
xchg
es
jns
xchg
dec
insl
sub
mov
or
and
movsb
add
xor
lret
and
dec
xor
enter
push
dec
dec
push
scas
cltd
adc
imul
pop
adcl
inc
ficompl
sub
fcomps
add
cmc
icebp
mov
sub
iret
popf
mov
xor
mov
push
adc
sti
movsb
lcall
xor
into
in
adc
push
push
sub
sbb
dec
testl
adc
inc
out
repz
cs
js
mov
xor
sub
mov
mov
aad
and
mov
fisubrs
and
in
mov
frstor
cmpsb
xor
leave
decl
mov
dec
sub
out
xchg
std
aaa
pop
mov
inc
xchg
orb
sbb
push
bound
or
out
inc
inc
fdivs
sbb
push
sub
adc
std
push
push
jge
pushl
cmc
insl
imul
test
jbe
fbstp
inc
sahf
cmpsl
cmpsb
xor
insb
pop
mull
aas
mov
lahf
pusha
insl
iret
add
push
xor
dec
xor
int3
mov
and
xor
adc
mov
jmp
xchg
mov
xor
cmpsb
test
fdivr
rorb
adc
and
sbb
fdiv
mov
aas
inc
push
xor
subb
jmp
sbb
fcomi
test
cmpsb
xor
adc
sbb
ss
sbb
arpl
inc
in
or
xor
pop
scas
mov
pop
btc
pop
pop
out
add
mov
xor
std
xchg
dec
out
imul
lret
inc
call
mov
inc
movsw
xor
mov
les
adc
add
out
mov
ret
mov
push
shrb
cli
add
jb
lahf
inc
inc
sti
in
movsb
mov
xchg
mov
scas
or
insl
jns
adc
dec
mov
mov
cmp
xor
scas
cwtl
adc
mov
inc
cmpsl
mov
mov
fwait
jge
jb,pt
out
cmp
mov
test
xor
sysret
out
pushl
xor
stos
cmp
shll
xchg
idivl
xor
lods
dec
jbe
lret
outsb
push
xor
std
add
xor
jmp
sahf
xor
jl
jns
mov
xchg
andl
stos
cmp
lahf
daa
rolb
mov
mov
mov
repz
fnstenv
xor
pop
out
test
data16
in
xchg
movsb
inc
stc
mov
adc
pop
ret
dec
out
lahf
adc
mov
xor
orb
rep
ret
std
jne
js
jae
adc
push
loopne
popf
or
add
test
sub
lret
push
lgs
imul
stc
lret
shlb
jnp
dec
xor
xchg
ficoml
jns
dec
add
popa
pushl
outsl
pop
hlt
sbb
xor
or
xchg
stos
push
sub
ror
stos
xor
add
xor
xchg
xchg
xor
int
rep
iret
in
mov
psubq
mov
or
ljmp
iret
jg
pop
push
mov
popa
push
ss
mov
xchg
xorl
inc
mov
stc
xor
fstpl
fbstp
test
push
push
xchg
xchg
pushf
xor
pshufw
push
pop
add
aam
pushf
xchg
cmp
int3
fwait
xor
enter
pushl
cmpsb
add
es
aad
lahf
sub
push
leave
repz
xlat
ficompl
dec
sahf
pusha
xor
and
xchg
dec
push
ja
pop
sub
loope
jg
bound
mov
cmp
dec
dec
aam
push
lods
adc
cmp
or
push
test
cmp
int
jns
and
mov
and
rorb
fwait
popa
neg
xor
jmp
xor
and
sar
xchg
imul
or
xor
in
sub
fnstsw
jno
push
pop
cmp
dec
xor
or
stc
xor
xor
jg
xor
mov
jbe
mov
mov
test
mulb
mov
sarl
add
mov
mov
mov
jb
bound
xor
mov
push
adc
and
sub
je
aas
xchg
out
fucomi
arpl
repnz
addr16
sbb
ds
dec
ss
xor
fbstp
xor
inc
scas
cmpsb
dec
sbb
pop
test
ja
mov
shrl
push
mov
subl
push
arpl
ret
rclb
popl
addr16
ja
stos
push
stc
or
xorl
sar
jp
sub
arpl
adc
imull
xadd
xor
sub
push
xor
jecxz
inc
xchg
inc
mov
xor
aaa
xor
jg
pushf
fadd
xchg
into
jb
popa
cmp
inc
mov
xchg
icebp
xor
in
cs
add
scas
stos
cmpsb
ss
sahf
lods
movsl
mov
call
cld
or
mov
push
sub
mov
cmpsb
xor
xlat
hlt
int
lds
add
frstor
std
xor
sarb
pop
push
out
es
sub
out
lea
testl
pop
and
xor
lea
and
xor
shll
mov
push
popf
dec
in
xchg
imul
repnz
mov
jb
push
and
cmp
popf
rcll
adc
jns
push
test
cmpsb
cmpl
xchg
adc
sbb
filds
xor
pusha
icebp
xchg
lret
pop
xor
dec
dec
out
jb
loopne
jae
insb
std
cmpb
divl
call
inc
arpl
pop
and
fsubrl
rolb
dec
xchg
mov
test
sub
jo
pop
lcall
icebp
out
mov
pop
pop
xor
pop
push
scas
xor
or
mov
and
xor
lock
pop
adc
shlb
ss
mov
xorl
jbe
mov
scas
outsl
jmp
sub
and
cmp
mov
mov
fidivrl
aad
ret
xchg
adc
xchg
mov
and
cmpl
insb
stos
les
adc
jne
rolb
fidivl
xor
mov
xor
cwtl
lret
in
je
adc
fcompl
mov
test
or
fbld
mov
add
cmp
out
out
sbb
push
inc
out
or
xor
and
icebp
or
pop
int3
sahf
pop
inc
cmp
xchg
or
dec
inc
scas
dec
cmc
xor
pop
mov
out
loope
mov
fistps
and
xchg
fdivl
je
xor
jg
cli
add
mov
pushf
adc
in
xor
test
loop,pn
pop
xor
andb
sub
outsl
aad
pop
add
loopne
sbb
jnp
sbb
stos
push
jb
lock
popf
xor
mov
insb
xor
inc
pusha
mov
in
xor
daa
mov
push
icebp
insb
pop
sub
and
adc
push
xchg
xor
fs
sub
jg
lds
push
enter
bound
xor
add
ret
mov
loop
and
adc
movl
rorl
iret
pop
hlt
outsb
or
pop
sub
dec
lods
movlps
sbb
test
lahf
mov
negl
mov
lods
aad
lret
ja
aam
push
adc
cs
test
cmp
int3
fiadds
arpl
into
push
xor
daa
mov
add
jbe
int3
or
xor
out
sbb
xor
mov
fidivs
lret
testl
pop
inc
jmp
mov
rorb
mov
in
cli
inc
jnp
or
xor
stos
jmp
lcall
aas
repz
filds
lock
int3
cltd
xchg
sbbb
repz
pop
lds
push
std
dec
scas
sar
cmpl
mov
arpl
outsl
lret
jne
dec
fsubl
jmp
or
push
fistps
inc
lods
int
fidivl
ror
mov
out
push
imul
pushf
xchg
mov
mov
xor
sbb
dec
xor
icebp
lock
adc
outsb
in
out
xor
imul
jcxz
mov
into
cmpsb
aam
call
cltd
popf
out
psllw
jno
jg
out
rcll
sbbl
cmc
inc
mov
xor
dec
int3
lret
insb
in
into
adc
out
div
iret
roll
xchg
cmp
ja
mov
dec
out
mov
mov
popl
and
sbb
xor
int
pavgw
inc
mov
leave
dec
push
pop
sub
jle
jne
rep
or
xor
jo
push
sbb
cwtl
enter
mov
or
leave
loope
jno
sub
xor
out
or
sarb
dec
and
inc
rcll
lods
xor
sub
mov
push
xor
xchg
sub
xor
lret
or
inc
out
adc
jecxz
mov
xchg
ss
mov
ss
sbb
into
xor
jle
int
int3
xchg
daa
je
cmc
adc
push
rorb
mov
cmp
adc
cmpsb
loope
popa
mov
xor
push
lea
jge
dec
in
sbb
ret
out
inc
ja
mov
jns
add
iret
ljmp
repnz
rorl
js
std
imul
in
add
outsb
pop
pop
or
cmp
sub
insl
nop
or
testl
dec
add
test
sub
and
and
or
inc
inc
mov
movsl
mov
imulb
jno
xor
call
cwtl
sub
sahf
xchg
mov
stc
dec
sbb
stc
xor
mov
imul
pusha
fwait
sub
jne
testb
add
movsb
sbb
push
hlt
xor
aam
pop
inc
outsl
fcom
notl
mov
in
test
fstp
int
shl
in
lret
hlt
or
lcall
ret
stos
mov
fs
imul
sahf
cmpsb
jb
rorb
xor
movsb
lea
dec
mov
mov
inc
dec
xchg
dec
nop
xor
mov
or
sahf
sub
lea
xchg
ret
ffree
cwtl
ss
orl
fcomi
sub
dec
ds
gs
stos
aas
dec
fidivl
fdivrl
rcl
inc
cld
push
cmpsl
mov
dec
sbb
nop
mov
stos
or
int
and
cmc
sbb
mov
aaa
xchg
lret
add
inc
xor
jg
jb
cwtl
dec
mov
add
lods
xor
sub
sub
mov
into
mov
cmpsl
insb
lcall
nop
dec
inc
inc
xor
inc
outsb
sbb
lock
pop
dec
aad
test
mov
hlt
test
jne
dec
xor
sbb
cmp
cmp
sbb
shlb
fisttps
out
mov
leave
add
mov
push
push
repz
adc
sub
imul
outsl
and
mov
or
scas
xor
dec
xchg
mov
add
stos
xor
int
add
jne
dec
inc
scas
addr16
pop
adc
or
xor
nop
das
push
fbstp
into
jmp
mov
xor
in
dec
mov
out
aad
ja
inc
cmp
xor
test
sub
push
push
push
dec
arpl
xor
push
aas
push
fwait
sarb
jl
and
adc
inc
sub
shrl
subl
fisttpl
mov
mov
mov
ds
adc
xchg
getsec
cmpsb
ja
dec
clc
mov
pop
xor
out
aas
xor
mov
loope
mov
das
inc
call
dec
pop
xchg
mov
xor
inc
inc
dec
sahf
sub
push
movsb
mov
push
in
adc
xor
dec
adc
das
js
clc
mov
icebp
loope
xchg
add
incl
pushf
jge
mov
xchg
fnstsw
shlb
cmc
ret
out
fcmovnbe
cmpsl
testb
jns
bound
push
mov
mov
fistpll
repnz
insl
xchg
mov
push
test
enter
jg
movhps
adc
xor
xor
sbb
out
mov
dec
cmpsl
das
sbb
xor
or
test
mov
aad
mov
jle
subl
rclb
mov
add
mov
xchg
or
cmovnp
loope
out
pop
mov
ljmp
add
xchg
adc
inc
into
cwtl
pop
mov
pop
in
arpl
mov
and
dec
popf
xchg
jb
or
cmpsb
dec
push
icebp
fs
mov
stc
mov
and
and
and
inc
daa
test
mul
xor
fwait
stc
pop
add
and
pushl
push
sub
pop
sbb
fs
ret
or
stc
ret
pop
add
cmp
xchg
test
lods
push
and
xchg
jmp
ja
dec
cwtl
xor
aas
jb
mov
bound
lret
or
fcoml
lock
aad
cltd
xor
in
gs
in
lock
xlat
xor
scas
clc
lret
push
jecxz
test
pusha
cld
adc
mov
pusha
scas
outsb
pop
divl
mov
push
dec
add
mov
sub
sub
jbe
sub
out
mov
xor
andl
jl
xor
aad
push
pop
adc
mov
leave
lret
loopne
hlt
jecxz
shlb
cmp
jne
push
movsl
xor
ret
cmp
inc
xor
int3
out
add
jns
xor
push
in
out
cmpsl
pop
adc
push
pop
fwait
pop
mov
sbb
sbb
je
in
insb
pop
xor
jns
les
jne
mov
cmpsl
inc
fwait
mov
xor
cmp
loopne
repz
mov
inc
cmp
lock
js
imul
push
repz
inc
xor
mov
ret
xor
mov
mov
mov
ja
xor
inc
fsubrl
aam
lret
xchg
adc
adc
ss
adc
pop
bsr
loopne
rolb
rcrl
ficoml
fstps
jmp
xor
loope
sub
out
loopne
xor
sahf
inc
xor
out
mov
cmp
xor
pop
xchg
lods
xor
adc
mov
jnp
fstpt
push
int
js
jge
aam
scas
and
adc
in
jns
sub
xlat
inc
out
cmp
dec
mov
jns
xor
cli
mov
out
loop
aad
mov
cmp
jl
mov
sbb
dec
xor
ret
push
jnp
mov
and
movsl
inc
daa
dec
movsb
xor
mov
lock
popf
int
mov
xchg
xchg
jge
testb
xor
in
and
mov
push
lds
fdivl
fdivr
xor
pop
sbb
pop
jl
xor
mov
stos
popf
fidivl
dec
cmp
lock
nop
push
aad
cwtl
mov
push
pushf
xor
stc
cmp
push
mov
mov
xor
mov
shrl
in
ficoms
aam
xor
out
inc
jg
fldcw
sub
adc
jmp
xor
jp
into
push
cmpsl
add
stc
cmp
pop
mov
in
mov
cltd
cmc
push
jle
ss
cmp
cmp
popf
dec
lds
frstor
xor
nop
pop
xor
shlb
daa
inc
jp
jbe
mov
repnz
lahf
shrb
negb
add
pop
aad
or
xor
mov
aaa
ja
popa
push
fimuls
xor
fwait
inc
inc
xchg
out
sbb
pop
incb
mov
sbb
fildll
stc
push
xor
in
sbb
cwtl
cmc
push
addl
out
push
jb
lds
xchg
xchg
add
fimull
inc
mov
push
iret
aad
cs
adcl
xchg
pop
loop
test
jns
mov
xchg
out
mov
or
rolb
lods
imul
mov
push
pushf
push
sbb
dec
out
xor
dec
or
xor
or
jo
les
addb
pop
xor
call
mov
idivb
movsb
mov
popa
movsb
lods
push
or
stos
xor
mov
cmpl
add
inc
xchg
pop
xor
inc
sahf
enter
pusha
dec
push
mov
sub
mov
stc
mov
and
cmp
jmp
inc
cltd
jb
jb
push
ss
bound
pushf
repnz
mov
jecxz
int3
rorb
push
ja
inc
xchg
mov
and
dec
cmpsl
js
loope
mov
push
inc
xor
stos
lea
sub
inc
jne
fwait
jl
or
adc
xor
sub
rcll
lea
mov
mov
lahf
pop
sbb
or
ljmp
mov
in
or
fcomps
xor
andb
in
add
jle
pop
xor
int
push
or
leave
cmc
push
lock
xlat
std
subb
movsl
inc
arpl
ss
xchg
mov
aaa
add
mov
int3
add
or
pop
sahf
mov
cmp
adc
aam
out
xor
shrl
gs
sub
shlb
lods
and
xor
jmp
xor
aas
cltd
sbb
sar
div
mov
call
mov
cmp
fidivs
out
adc
mov
stos
or
fwait
lret
adc
daa
mov
int
jb
pop
arpl
into
pop
xor
add
bound
ljmp
push
stos
ds
cmp
lods
imul
test
mov
cmpsl
sub
stos
push
xor
ja
push
xor
cmc
sbb
push
sub
test
dec
xchg
cmp
mov
sbbl
xor
fstl
repz
inc
lret
repz
mov
mov
xor
movsl
aam
sub
adc
mov
data16
out
add
int
xchg
push
jg
les
or
or
pop
mov
cmpl
std
fnsave
jmp
int3
mov
pusha
add
sahf
inc
and
cwtl
aas
stc
sbb
loopne
mov
cmp
in
and
into
std
mov
xor
sub
cltd
cwtl
aam
lahf
add
pop
pop
jle
cmpl
sar
inc
repnz
cmp
shl
aad
scas
pop
mov
mov
lea
repnz
mov
dec
adc
es
dec
pop
neg
mov
xchg
clc
das
push
jg
inc
push
imul
dec
sub
fwait
addl
xchg
cmp
cmpsl
sub
pop
mov
jp
xor
or
xor
sub
sbb
inc
out
xchg
and
inc
jae
xor
lods
lods
test
adc
push
add
jge
mov
lret
pop
out
xor
pop
adc
xor
xchg
scas
inc
mov
jle
movsb
lret
xor
int
xchg
insb
cmp
sbb
mov
mov
jno
push
push
xchg
bound
inc
pop
cld
mov
inc
xchg
test
mov
ja
dec
test
adc
test
cmc
mov
add
inc
stos
push
fidivl
pushf
sbb
add
push
and
scas
imul
push
leave
lea
dec
adcl
inc
sub
add
fistl
add
jns
xchg
stos
enter
inc
jl
adc
inc
xor
outsb
test
push
or
xor
nop
cmp
pop
dec
into
jg
push
or
lret
fcmovbe
fcom
pusha
nop
stos
and
pop
into
hlt
repz
lahf
cmp
dec
in
dec
lods
xor
inc
dec
je
jp
loope
push
cmp
and
xor
or
jle
incl
xchg
cld
pop
or
adc
xchg
jbe
aad
mov
jmp
stos
xor
ds
xor
mov
pop
jnp
push
pusha
jg,pt
inc
mov
adc
ljmp
fldl
addr16
pop
outsb
add
mov
jbe
fs
shl
push
cld
jns
pop
aad
adc
out
les
cmp
int3
test
stos
dec
inc
cs
out
cltd
or
inc
jae
add
sbb
pop
cmpsl
int
push
xor
movsl
jle
sbb
sbb
outsl
inc
inc
add
lcall
sbb
icebp
scas
out
lods
dec
loope
andb
cmp
loopne
incb
sarl
cs
inc
js
mov
fldt
mov
mov
push
add
dec
and
lret
cmp
out
sahf
dec
test
pop
jae
add
rclb
dec
fs
sahf
mul
sbb
repz
xor
xchg
jo
scas
shl
rorl
insl
movsl
dec
cltd
fistpll
xor
jmp
out
lret
and
push
lea
add
pushf
int
test
stos
psubusw
push
fstpt
xor
pop
or
dec
ss
bound
mov
loope
xor
test
imul
rorl
loop
xor
mov
pop
pop
xchg
in
adc
into
daa
xor
sub
sub
lds
cltd
jp
adc
stc
inc
shll
mov
testb
fnsave
pop
push
lea
or
push
and
mov
sub
adc
hlt
stos
sub
out
mov
out
cmp
std
push
stos
dec
push
mov
fsetpm(287
loopne
mov
inc
xchg
test
xor
idivl
movsl
stos
mov
xor
je
loope
ds
sub
dec
mov
jle
cmp
daa
xor
mov
je
fdivs
adc
mov
in
mov
and
cmc
loop
out
xor
imul
nop
adc
sub
jo
lods
mov
xchg
dec
dec
jb
dec
lea
push
bound
dec
and
sar
leave
dec
repz
in
xor
leave
xor
mov
xchg
push
shlb
lcall
push
jne
ret
jmp
dec
mov
xlat
push
or
sub
pop
inc
or
inc
lds
hlt
in
xorb
xchg
jne
loope
out
adc
repnz
dec
mov
ja
pop
inc
rol
iret
dec
ret
repz
jecxz
sub
movsb
add
iret
dec
std
xor
xchg
xchg
pop
dec
mov
rep
out
add
xchg
pushf
hlt
sbb
sub
adc
push
sbb
movsl
xchg
test
je
dec
dec
xor
cwtl
adc
add
mov
xchg
jle
fisubs
add
je
or
std
or
xor
js
add
pop
cmpsb
pop
xor
call
push
push
ja
int
inc
lret
int3
dec
push
shrb
xor
jnp
mov
subl
aaa
xor
jb
ja
out
adc
dec
jne
or
pusha
push
xor
mov
mov
out
es
fiaddl
add
subb
imul
push
cmp
xor
dec
jbe
adc
jle
inc
xor
jg
jge
dec
add
arpl
pushf
adc
bound
cwtl
fistpll
ljmp
pop
in
rcr
pop
cmpl
in
clc
inc
adc
pop
push
test
imul
cltd
lahf
shll
sub
out
loopne
cmpsb
push
and
push
push
mov
mov
data16
sbb
xor
sbb
xor
mov
xor
insb
out
hlt
dec
loope
cmp
adc
mov
or
int3
loop
and
jo
das
add
ja
xchg
es
repz
aaa
in
insb
rcl
stos
mov
sbb
xor
loopne
inc
aad
jp
and
inc
pop
sub
push
sub
cmp
or
xor
pop
xchg
popf
push
in
xor
cmp
xor
daa
jmp
push
adc
jbe
ja
mov
xchg
inc
adc
xor
mov
sbb
mov
pop
popf
aaa
dec
scas
aad
nop
cmp
mov
add
enter
and
bound
jle
icebp
xor
jmp
xchg
mov
into
push
mov
xor
dec
adc
in
pop
scas
cmp
mov
repnz
rcl
jo
loop
jo
xor
int3
lods
popa
add
negb
adc
mov
and
mov
out
addr16
mov
jo
cmp
aam
xor
or
sbb
andl
xor
fisttps
cmp
femms
mov
cli
pop
out
jle
mov
jg
xor
jnp
and
inc
xor
jmp
pop
je
pop
push
dec
xchg
jns
add
in
test
cmp
sar
jb
pop
daa
mov
nop
xor
adc
sahf
popa
test
adc
sti
rorb
in
adc
and
popf
xor
fwait
pop
call
cmc
sti
aaa
pusha
insl
xor
out
jg
xor
outsb
jae
mov
xchg
add
dec
jecxz
mov
adc
pop
pusha
out
icebp
mov
dec
xchg
or
push
pop
add
test
hlt
fs
sahf
outsb
in
lret
cmp
scas
nopl
jg
mov
push
dec
ds
arpl
push
movsl
or
xlat
mov
in
repz
cli
inc
rcr
subl
sbb
push
sbb
loop
pop
jb
add
xor
leave
adc
insl
fwait
movsl
cmp
lret
clc
dec
stc
cmpsl
filds
inc
in
xor
pop
movsb
rcr
mov
into
xorb
add
pop
loop
faddl
mov
imul
mov
jae
xlat
out
test
popa
sahf
les
rsqrtps
push
dec
aam
xor
int3
mov
mov
sub
jno
add
das
sub
dec
stc
or
xchg
icebp
push
sarb
inc
xorb
pop
sbb
mov
sub
adc
int
jns
loopne
xchg
add
dec
sar
sbb
inc
enter
jo
cmpsl
mov
adc
pop
ret
xor
mov
int
lret
xor
push
stc
push
hlt
inc
sub
mov
and
fstl
xchg
xor
dec
push
lret
icebp
jae
mov
aaa
sub
add
test
or
scas
add
subl
mov
pop
mov
mov
or
xor
sub
jno
test
jns
cmp
iret
bound
sub
popf
sub
outsb
and
clc
adc
pop
mov
addl
mov
xor
nop
lock
adc
xchg
xor
les
dec
xor
sub
popa
sbb
sub
repz
mov
ret
dec
test
dec
movsb
push
cli
xor
xchg
mov
adc
mull
cwtl
bswap
xchg
push
jmp
sub
mov
xor
popf
xchg
pop
mov
stos
xchg
fisubs
push
nop
mov
repnz
xor
in
test
sub
cwtl
fsubrs
outsb
cltd
orb
sbb
cmp
out
pop
xor
inc
shlb
mov
mov
loopne
ficomps
jge
imul
jne
ja
inc
mov
mov
and
mov
mov
add
cld
xor
repz
scas
push
cmc
mov
stos
mov
loopne
xor
xchg
add
cmp
inc
mov
ja
lahf
mov
xor
pop
push
cmc
push
ds
adc
lock
lret
mov
adc
pop
aad
mov
dec
mov
rcl
and
scas
adc
dec
cld
stos
sub
xor
repz
xlat
ret
call
lea
push
xchg
and
insl
jae
jo
dec
test
cmp
jnp
in
xchg
jb
adc
out
push
cmp
add
lock
cmp
mov
xor
adc
aas
divl
xor
test
xchg
repz
mov
cmp
cwtl
cmp
ljmp
fwait
loope
xor
int
sub
in
test
aam
xchg
cli
inc
mov
xor
repnz
cmp
cli
stos
jg
inc
mov
fstp
aam
in
popf
dec
cmpsl
xor
aad
lods
in
or
cmp
push
xor
jg
xlat
mov
loope
dec
rorb
mov
dec
idivl
add
xchg
out
fdivs
add
shlb
insl
icebp
outsb
imul
fisttpll
xor
pop
push
js
sbb
ja
jecxz
add
leave
mov
sbb
or
adc
pop
ficoml
sti
sbb
das
popf
aad
cmp
cmp
pop
aad
xor
fdivl
push
data16
inc
je
in
or
jb
mov
dec
into
dec
jns
push
ds
pusha
popa
lea
adc
movsl
lahf
lcall
sub
mov
and
xchg
ljmp
addr16
in
xor
sbb
addb
and
imul
inc
test
lods
mov
out
inc
and
ficompl
pop
mov
adc
mov
js
jbe
and
xor
xchg
das
sbb
stos
xor
pop
pusha
mov
xor
test
pop
xor
cmpsl
cltd
int3
xchg
lret
xor
scas
popf
sbb
hlt
jb
xchg
movsl
das
mull
xor
repnz
mov
jne
mov
jecxz
insl
push
jo
ja
jg
rorl
add
push
jne
ficompl
test
mov
or
incl
cmp
sarl
push
inc
aas
shlb
cmc
mov
adc
xor
cmpb
jp
aas
sahf
cmp
daa
xor
or
jb
es
push
jle
dec
or
add
dec
out
push
loope
insb
mov
mov
dec
add
pop
push
mov
int3
mov
cmp
cltd
add
cld
movsb
xchg
xor
sti
and
sbb
imul
xorl
jno
in
daa
inc
pop
xor
sub
or
push
mov
mov
add
xor
mov
xchg
iret
cmpsb
adc
jb
cli
lods
stos
lods
push
dec
sbb
int3
xchg
push
je
cltd
xor
dec
inc
neg
xor
inc
loopne
xor
inc
push
les
shlb
shll
pop
or
hlt
adc
adc
int3
into
push
aad
and
dec
ja
or
mov
cwtl
fsubl
push
leave
enter
mov
adcb
cltd
and
dec
ljmp
movl
xor
xor
xor
lcall
xor
jecxz
das
lret
scas
dec
mov
in
iret
lods
mov
xor
mov
jo
sbb
cmp
insb
dec
sbb
cmp
jae
fidivs
jle
cmp
jl
ret
push
adc
cltd
and
mov
jg
and
ds
test
out
in
fmull
loope
xchg
rolb
outsb
int
nop
cli
rcrl
mov
ret
or
inc
out
mov
out
push
gs
and
cmc
jne
fwait
cmp
add
xchg
addr16
ds
xor
out
or
in
mov
push
add
mov
std
push
push
in
jbe
js
mov
xor
shll
repz
stos
dec
dec
mov
sub
xchg
xor
pop
jl
mov
arpl
xchg
cmp
xor
jbe
sbb
xchg
sahf
jg
popa
xor
scas
or
mov
sbb
xor
inc
int
inc
jns
popa
pop
lods
mov
mov
fcoml
dec
dec
adc
xchg
sarl
jae
shl
mov
scas
sub
push
fimull
adc
xchg
xor
pop
inc
pop
adc
mov
fs
jle
xor
imul
icebp
sbb
xor
push
add
dec
pop
leave
push
push
xchg
ja
sub
xchg
scas
adc
test
lea
mov
stos
push
mov
fadds
out
iret
test
ja
inc
pop
add
test
addr16
dec
xchg
xchg
xchg
jne
xchg
pusha
daa
dec
mov
mov
xor
xor
or
cmpl
xor
cmpsb
daa
repnz
dec
in
xchg
rcll
stos
fstpl
int3
push
or
addr16
outsb
jnp
arpl
nop
xor
push
shr
fwait
xor
in
xchg
adc
jbe
dec
sub
das
cmp
fnstenv
cmpsb
mov
popf
std
and
fmul
pushf
mov
enter
lcall
xor
xchg
int
or
mov
gs
jle
xor
jl
add
int3
lock
xchg
lcall
mov
xor
js
or
gs
lods
aaa
fimuls
sbb
push
jle
enter
jno
mov
dec
sub
mov
stos
shr
inc
sahf
push
sbb
in
xchg
negb
ja
je
aas
jae
mov
jmp
lods
push
adc
mov
dec
insl
int3
repz
jo
lahf
stc
sbb
jb
in
shll
pop
imul
sar
xor
push
out
jae
stos
xor
inc
dec
xor
mov
or
cmp
inc
imul
pop
dec
ret
cmp
loopne
push
shll
mov
ret
fdivs
into
pusha
mov
mov
lea
js
inc
ljmpw
push
and
sub
mov
pop
pop
xor
out
adc
fwait
pushf
adc
adc
adc
aad
inc
jnp
inc
jbe
pop
or
repz
push
fstl
ds
push
add
xorl
jmp
imul
ror
cmp
xchg
dec
jecxz
cwtl
fdivs
addl
xor
nop
in
lods
add
adc
cmp
int3
inc
out
xor
lods
testl
jecxz
loope
mov
fists
dec
xor
fincstp
mov
stc
into
mov
int
cmp
add
xor
lods
fists
stos
pop
and
sub
inc
or
mov
pop
mov
xor
loop,pt
xor
test
add
test
sub
mov
mov
sub
pop
pop
xor
dec
mov
mov
jne
cld
leave
xchg
js
dec
bound
fcmovne
push
lret
cmpsl
lods
adc
add
enter
cwtl
fcomps
xchg
jae
push
stos
xchg
js
ss
shr
inc
pop
inc
pushf
xor
mov
sub
in
and
xchg
nop
dec
adc
lret
dec
xor
insl
adc
jb
sub
ret
shlb
inc
jle
movntq
out
adc
fnstenvs
cmp
mov
repz
lods
adcl
push
jae
dec
mov
cld
nop
adc
push
cmp
loop
mov
xor
mov
call
xor
xlat
sub
mov
arpl
lods
mov
xor
jns
add
or
mov
dec
lods
sub
decl
cmpsb
ja
inc
jbe
lock
mov
rorl
nop
stos
sbb
or
decb
lds
xor
lret
mov
rep
insb
xor
hlt
adc
push
pop
jo
or
xor
pop
pop
adc
sbbl
imul
test
jle
rdmsr
dec
or
mov
cli
dec
imul
sbb
jnp
fnsave
inc
fsts
jg
dec
call
sub
and
and
ds
dec
inc
fnsave
push
fcomi
decb
mov
mov
mov
ljmp
js
sti
in
pop
je
inc
push
jb
pop
or
test
xor
iret
sub
fcoml
and
pop
inc
pop
inc
inc
jb
fidivl
mov
outsl
xchg
pop
rclb
xchg
push
sbb
js
jb
add
mov
repz
jne
std
mov
dec
jl
mov
push
mov
jg
sti
jbe
sub
std
push
hlt
mov
test
mov
rclb
sbb
sub
xchg
dec
int
push
pop
les
inc
fidivrl
xor
imul
in
sub
loopne
cli
js
add
mov
xor
shl
xlat
arpl
fldt
fst
add
cmp
adcl
icebp
es
xor
pop
fildll
lods
dec
enter
rcrb
stc
cli
xchg
xor
call
dec
dec
xchg
adc
sbb
decl
sbb
popf
xor
out
lret
pop
sbb
jns
xor
decl
jns
dec
ret
xchg
cwtl
mov
popa
adc
xor
into
pop
xchg
iret
xchg
inc
stos
xor
loope
xor
movsl
aas
mov
xlat
xchg
xor
orb
xor
fucom
stos
mov
pop
dec
inc
ret
adc
clc
push
cli
bound
xor
or
or
xchg
fwait
imul
fisttpll
fstps
inc
fdivrl
push
xchg
lahf
lret
sti
dec
sub
xor
push
icebp
adc
enter
xor
xor
or
imul
pop
sub
sub
movsb
push
test
push
jae
cld
arpl
pop
add
adc
or
ss
adc
iret
mov
inc
sti
cmp
cmp
sub
inc
push
or
add
outsb
mov
mov
jae
flds
stc
fnsave
gs
sbb
shll
pop
adc
sahf
sub
lret
mov
xchg
adc
mov
shll
jno
xor
iret
jecxz
mov
mov
fsubrl
repnz
or
xlat
fcmovbe
jp
dec
xchg
jl
sbb
int
dec
push
nop
je
pop
stos
xor
lahf
mov
mov
ljmp
subb
sahf
adc
jae
pop
lahf
das
dec
xor
xchg
test
jae
pusha
scas
adc
shrb
sub
mov
repnz
xor
mov
ret
jle
mov
mov
pusha
iret
cs
dec
jbe
inc
test
lcall
and
jb
sub
xor
movsb
incl
dec
adc
shrl
fdivl
ret
add
dec
out
dec
sarl
or
and
push
jo
int3
mov
sub
bswap
repz
rcl
inc
xlat
cmpsb
mov
pusha
xor
cmpsl
sub
inc
repnz
test
sbb
es
imul
lods
imul
scas
jge
insb
outsb
idivb
mov
pushf
xor
lret
xlat
lcall
xchg
mov
sub
mov
inc
cmp
mov
dec
nop
hlt
mov
adc
aaa
cmp
dec
imul
fdivr
jbe
and
adc
scas
stos
out
movsb
lahf
mov
mull
pop
int3
shl
movsl
aad
add
adc
adc
xor
repnz
xor
popf
xchg
in
lret
shlb
sub
sahf
mov
push
movsb
jle
movsl
xor
pop
addb
stos
fdivl
ja
out
xor
mov
xor
or
mov
push
movsb
popf
add
mov
jbe
xchg
add
ds
mov
xor
jb
jne
cltd
mov
rcll
mov
or
jns
lahf
inc
bound
pop
adc
cli
jne
xor
ja
push
mov
repnz
inc
int3
ds
mov
sbb
mov
pop
lcall
xor
out
and
fucom
sub
lahf
adcb
cmp
inc
popf
mov
or
outsl
sbb
xor
sub
add
mov
xchg
pop
stos
xor
and
fdiv
insb
push
xor
repz
or
es
iret
push
lea
lahf
jns
push
test
add
jb
rcrb
push
test
fs
je
aam
sub
push
das
aad
xor
enter
pop
mov
push
mov
mov
arpl
xlat
push
push
or
inc
adc
sub
xor
jo
std
aam
movb
test
or
dec
jae
xor
scas
repz
xor
push
imul
dec
mov
aad
stc
dec
stos
lcall
insl
leave
add
sahf
sbb
mov
cmp
push
pop
pop
add
in
mov
cmpsb
or
sti
out
or
mov
out
pop
lea
push
mov
push
push
mov
add
or
mov
xchg
inc
scas
gs
stos
inc
pop
xor
dec
rol
pop
mov
jp
or
pop
inc
repnz
add
ljmp
es
fbstp
mov
imul
push
push
stos
adc
std
mov
pop
pop
mov
xchg
pop
sub
stos
mov
lods
jb
add
xchg
mov
inc
repz
fs
ss
loopne
xor
jns
jp
or
cmp
cmc
fcoml
xor
lcall
push
fidivrl
lods
cmp
xchg
fs
xor
out
test
mov
repz
into
cltd
xchg
pushl
roll
mov
repz
sub
cmp
xor
sbb
sbb
sti
cmpsl
pop
fidivrl
xor
test
dec
xchg
sub
mov
cmp
imul
cs
fnstsw
cmc
jge
mov
lea
mov
test
outsl
mov
xor
push
cld
xor
pop
push
mov
pushl
xorl
sbb
test
icebp
stos
pop
cmp
jg
xor
sub
pop
pop
mov
loop
outsb
lods
outsl
int
repz
out
sub
stos
mov
xchg
ja
mov
shlb
sti
repnz
push
sbb
or
into
shlb
inc
cmp
hlt
or
idivb
cmc
fnsave
pop
and
xor
cltd
jb
adc
pop
mov
rorb
mov
ficoml
pop
adc
fadd
cmp
xor
push
jmp
sub
lea
inc
insb
arpl
scas
dec
cmp
jge
ss
lds
push
cmp
icebp
mov
xor
jl
pop
movsl
inc
popa
add
sti
xor
fs
scas
xor
ds
cmp
cmp
cmp
or
mov
subl
cmpsl
inc
fcmovb
sbb
xor
outsb
inc
pushf
lods
sbb
add
cld
inc
fisttps
xor
lahf
into
shl
pop
adc
pop
cs
icebp
movsb
push
xchg
xor
sub
fisttps
mov
xor
mov
push
fcom
mov
sti
jne
push
arpl
es
or
push
and
xor
inc
fcmovnb
xchg
and
pusha
enter
inc
dec
test
stc
js
xor
pop
jg
mov
add
sub
mov
js
inc
sbb
and
stc
adc
int
out
mov
movswl
adc
lret
jg
cld
iret
push
xchg
fidivrs
loope
jne
enter
mov
popa
ss
gs
das
pop
xor
cmpsb
cld
adc
jmp
or
into
sub
ret
in
adc
push
dec
push
hlt
jae
lcall
pop
mov
xor
sbb
mov
loope
aas
xchg
lcall
aam
popa
mov
push
enter
lret
push
xor
jp
aas
xor
push
daa
push
xor
bound
jo
mov
push
ds
add
mov
xor
dec
lock
pop
cwtl
xor
add
mov
add
and
xor
pop
mov
ljmp
jno
pop
inc
scas
xor
adc
out
unpcklps
lcall
lods
leave
sbb
ret
addl
popf
stos
mov
ss
lcall
mov
xor
arpl
movsl
adc
popa
sbb
cmp
xlat
xor
cli
les
mov
hlt
jb
add
pop
jecxz
mov
cli
xchg
inc
insb
xor
push
mulb
pop
fimuls
lcall
clc
fsin
xchg
lds
inc
mov
int3
mov
mov
ret
aam
insb
xor
fcomps
mov
inc
or
enter
jne
mov
imul
xor
aam
inc
fidivrs
adc
pop
rcrb
pop
jge
xor
jne
lock
cmc
out
or
adc
mov
jl
and
repnz
test
imul
mov
fidivs
fsubr
push
push
pop
sahf
in
shll
setns
call
cmpsl
test
insb
xor
adc
scas
or
rorb
out
jae
les
paddq
cld
xchg
mov
or
bound
dec
cmpsl
inc
adc
mov
icebp
adc
mov
cmp
xor
jb
push
dec
fdivs
xchg
negl
inc
inc
lcall
jp
cwtl
dec
mov
ljmp
xor
mov
imul
pop
jmp
fbstp
movl
cmpb
inc
jg
jge
adc
cmpsb
in
inc
orl
sub
in
xchg
shrl
movsb
incl
loop
xlat
xor
mov
sti
xor
or
push
ljmp
cmp
dec
loope
gs
jmp
lock
xor
bound
mov
in
inc
mov
dec
shll
sub
xchg
xor
sub
adc
sbb
mov
js
sbb
and
shlb
loopne
cmpl
movb
dec
cli
js
leave
cmpsb
sbb
xor
out
lea
aam
sarl
lods
mov
jg
xchg
xor
out
out
add
or
outsl
ss
cmpsb
xor
or
mov
add
int
inc
dec
push
xor
or
mov
loopne
movsl
push
jno
mov
add
fdivs
subb
mov
mov
inc
out
inc
int
or
jle
jns
or
push
rorb
je
dec
bound
jbe
fdiv
push
pop
dec
es
mov
rorb
sub
imull
xor
cmp
test
hlt
dec
inc
rcrl
aad
push
dec
mov
clc
mov
pop
sbb
lea
mov
shlb
in
std
sub
fnstsw
cmp
mov
jns
nop
and
adc
hlt
push
xor
or
mov
clc
push
test
lahf
sbb
push
mov
inc
sub
xor
test
mov
mov
jb
pop
fcom
shlb
mov
aaa
cmpsl
jae
mov
leave
nop
or
mov
jns
sub
or
cmp
inc
js
xor
xor
test
push
lock
add
push
movsb
xchg
xor
cltd
and
popa
data16
inc
fwait
mov
mov
rcll
ret
imul
xor
aaa
mov
lahf
mov
add
test
push
fidivl
outsl
xchg
mov
xor
mov
fnstsw
xchg
insl
cwtl
jo
push
sbb
cmp
pop
adc
jns
and
pop
das
hlt
jg
mov
inc
scas
ss
xchg
lock
lret
icebp
in
pop
push
gs
inc
cltd
dec
sub
xor
out
lds
mov
xor
jl
mov
pop
mov
mov
dec
xor
imulb
jmp
sub
xor
pop
jle
out
pushf
cmc
test
cmp
cmp
scas
shll
mov
jle
cs
mov
decl
sahf
divl
in
jne
mov
pop
mov
stc
test
cmc
mov
pop
xor
flds
push
sub
dec
or
insb
inc
shlb
xor
push
in
and
adcl
mov
iret
jmp
xor
daa
stos
out
adc
lret
mov
xchg
cmp
movsl
jns
mov
inc
int
xor
mov
test
and
adc
es
enter
adc
push
dec
mov
dec
in
cmp
sub
imul
inc
loopne
inc
inc
mov
mov
push
or
mov
adc
xchg
jecxz
test
test
xor
sbb
movsb
je
fwait
aad
or
aaa
icebp
dec
mov
rcll
pop
mov
nop
inc
or
ja
sub
sbb
xchg
mov
fbld
inc
lret
pop
dec
movsl
xchg
mov
into
fmuls
sub
jns
cmpsb
stc
mov
js
aaa
in
loop
push
inc
imul
jmp
cmp
int
jp
lret
xor
fldt
cld
cltd
sahf
and
and
xor
ret
xor
test
imul
mov
fldlg2
xor
pop
outsb
fstl
sti
addr16
mov
or
data16
aad
ret
cmpsb
pop
or
jne
fsubr
mov
ficoms
out
lds
inc
inc
pop
add
cmp
push
icebp
xor
lods
adc
rcrl
data16
shl
andb
adc
in
test
imul
cmp
aam
cwtl
mov
inc
jb
ljmp
mull
pop
stos
push
mov
mov
dec
inc
or
in
loop
mov
sub
and
xor
out
sbb
int3
loopne
inc
or
mov
shrl
mov
xor
test
mov
mov
dec
adc
into
in
sub
outsb
sbb
xor
movsl
adc
fcompl
ss
cmpl
pop
jne
xor
cmp
mov
adc
fs
inc
inc
js
bound
or
xchg
int3
rcr
les
xchg
xor
icebp
xor
adc
shlb
mov
jg
mov
fdivrl
push
cmp
mov
sbb
fidivl
int
stos
xrelease
lcall
mov
cmpsl
pop
and
dec
adc
xchg
ret
lcall
dec
xchg
push
xchg
cmpsb
mov
mov
lods
cmpsl
xor
mov
and
and
fucom
xor
pusha
cltd
sbbb
jl
mov
ds
dec
pop
dec
dec
shl
aam
fidivs
pop
xchg
mov
or
push
pushf
push
int
inc
push
movsb
cmp
inc
push
add
sub
xor
pop
mov
xor
push
inc
imul
pop
xor
outsb
int3
jmp
cs
icebp
sahf
test
xor
stc
sbb
jns
mov
and
std
out
xor
push
inc
enter
dec
cmp
inc
mov
push
dec
andl
mov
cmp
mov
cld
adc
or
mov
mov
sub
jl
or
mov
bound
mov
gs
xor
or
adc
push
adc
pop
movl
push
mov
pop
jnp
cmp
ja
xchg
out
mov
cmp
clc
nop
fildll
fisubrl
or
nop
cmpsb
xchg
or
iret
xchg
xlat
sbb
push
mov
sbb
pop
inc
fcompl
lret
adc
out
inc
repnz
dec
jle
pop
mov
dec
test
xor
cmp
cmp
pop
adc
lock
xor
call
push
xor
lret
mov
xchg
std
xor
aad
adc
iret
mov
sub
inc
jg
mov
shr
test
clc
mov
xchg
orl
mov
pop
lcall
sub
out
es
jecxz
popa
in
jae
and
pop
hlt
fsubr
outsl
mov
loope
inc
js
es
dec
mov
inc
cwtl
decl
xchg
repnz
xor
adc
adc
pop
mov
xchg
xor
inc
mov
fabs
xchg
hlt
andl
fistpll
aas
adc
jmp
inc
xor
cmp
sub
xchg
outsl
ja
push
test
push
sub
dec
dec
sbb
push
adc
jg
mov
xor
das
mov
and
dec
adc
insb
int3
xchg
gs
subb
sub
xor
add
sub
sarl
sub
call
jmp
call
fists
push
mov
xor
jns
sbb
and
sti
xor
popf
sub
and
push
and
jle,pt
xor
aad
shl
adc
sbb
cs
sub
or
movsb
fmul
push
push
xchg
sub
lahf
and
outsl
mov
mov
adc
inc
imul
push
xor
outsl
fidivrl
aad
push
fcompl
add
imul
enter
mov
scas
dec
inc
pop
fcoms
sbb
xor
hlt
push
daa
inc
outsl
test
aad
lods
fucomp
pop
xor
stc
jecxz
xor
sub
fdivl
outsl
adc
jbe
inc
or
xchg
xor
sub
cltd
jp
or
xor
jo
cmp
daa
or
fmuls
not
xchg
xor
loope
adc
jl
mov
stc
nop/reserved
hlt
dec
cmc
std
fcoml
sub
adc
push
mov
in
xor
test
mov
cmp
fs
in
mov
es
dec
jg
push
xor
stc
andl
push
pop
movsb
xor
jb
jb
aas
push
fisttpll
push
inc
push
sbb
push
lahf
call
mov
sub
ds
adc
lock
mov
xor
mov
dec
adc
ss
sub
adc
lods
pop
shrl
es
mov
cwtl
inc
ffreep
lock
cmpsb
xor
fwait
clc
mull
mov
inc
aam
in
popa
mov
lods
inc
insb
ds
addr16
fs
pusha
xchg
cld
scas
xor
data16
xor
cmc
push
fists
xor
fimuls
push
je
xchg
mov
mov
add
inc
add
cs
in
xor
and
sub
cmp
xchg
setne
pop
fisttps
add
xor
dec
dec
xor
sub
push
out
imul
push
adc
pushf
sub
mov
xchg
xor
pusha
fiadds
dec
imul
insb
mov
xchg
mov
sbb
push
xor
jo
rolb
adc
lods
into
sbb
daa
xchg
xor
pop
in
movsl
xor
mov
inc
lea
loope
fs
mov
cwtl
xor
enter
jae
lcall
sahf
pop
sti
xchg
rcrb
sub
dec
pop
adc
gs
push
jge
fnstenv
shl
shrl
cmpsl
popa
jb
outsb
dec
mov
enter
pop
das
and
cltd
pop
adc
je
jl
push
inc
push
xchg
cmp
out
pop
cmc
jb
xor
fbstp
xor
mov
cmp
cmp
mov
int3
shll
xor
push
jae
stc
ficomps
inc
xchg
icebp
adc
xor
aas
dec
pop
xor
push
jno
loopne
xor
fstpl
dec
sbb
xor
add
sbb
or
call
mov
stos
push
sub
adc
js
rorb
cwtl
push
arpl
inc
divb
sbb
xor
iret
xchg
rdmsr
and
stos
xorl
test
dec
cmpsb
bnd
jae
adc
mov
mov
mov
xchg
orl
xor
dec
gs
dec
insl
mov
lcall
scas
ljmp
addb
mov
dec
loopne
xor
sub
add
xor
or
add
xor
sub
sbb
jno
xlat
add
jmp
inc
dec
pop
mov
shl
jbe
and
inc
psllw
cmpsb
test
push
pop
add
cmp
dec
xchg
mov
imul
push
aaa
mov
push
outsb
xor
or
sbb
adc
out
and
cmc
pop
orb
out
nop
popa
inc
movsl
and
push
pushf
xor
jne
and
sbb
mov
xchg
xor
outsb
pxor
sub
rcll
xor
das
out
loope
cmc
stc
push
daa
iret
and
in
sub
sbb
inc
lods
call
xor
mov
pop
rorb
out
iret
inc
jge
mov
adc
mov
xacquire
mov
in
sub
dec
cld
xor
fs
xor
pop
sbb
adc
or
pop
mov
jne
xor
out
sahf
ficoms
pop
dec
shl
stos
outsb
aas
jg
js
into
dec
popf
sub
les
jno
cmc
loope
or
dec
lahf
sub
inc
aad
xlat
push
fiadds
mov
stos
dec
sub
subl
out
mov
test
xor
repnz
cmpsl
add
out
push
lods
pop
sbb
dec
test
xor
cmpsb
add
or
out
mov
xchg
daa
repz
xor
sub
cmpsb
iret
sbb
test
sahf
push
aaa
pop
dec
push
xor
adc
mov
mov
divb
lahf
dec
sub
movsb
popa
out
xchg
faddl
sarl
aas
adc
out
out
xchg
dec
jg
fcomi
lret
xchg
or
push
mov
dec
cmp
mov
and
xor
out
jmp
shrl
imul
ljmp
in
xor
add
leave
int
fldl2e
xor
mov
cmp
mov
fmuls
push
mov
pushf
fsts
push
aas
sub
pusha
inc
xor
jp
fwait
jae
push
mov
sbb
mov
cmp
jmp
stc
fstl
and
jno
shrl
mov
adc
cmp
sub
hlt
sbb
lock
mov
mov
cmp
push
das
shrb
lock
dec
xor
add
out
mov
and
and
mov
sbb
xor
xchg
cmp
int
sbb
addr16
mov
ds
dec
or
xchg
sub
loope
sub
mov
popl
mov
cs
mov
add
test
sbb
add
inc
je
mov
push
inc
and
jae
push
loope
inc
repz
shr
push
mov
inc
and
shll
and
sbb
dec
adcb
lret
sub
xchg
push
xchg
jg
pop
test
and
mov
out
in
adc
test
mov
stc
and
shll
cmp
js
test
xor
cmp
fcmovnbe
mov
add
mov
push
fldenv
pop
cmp
xor
mov
cmpsl
lcall
fdivrp
aas
cmp
sub
xor
das
mov
std
outsb
imul
xor
adc
xor
ja
push
xchg
inc
push
ss
aad
ljmp
fsubrl
js
pushf
mov
mov
add
push
imul
push
cwtl
pushf
clc
add
cmp
mov
in
fildl
cmp
dec
rorl
adc
xor
icebp
rsm
imul
outsl
lahf
mov
cmp
data16
inc
adc
pop
xor
sbb
subb
fimull
sbb
pop
inc
add
xor
lods
icebp
add
or
xchg
imul
cmpsb
jp
sar
pop
xchg
inc
je
mov
mov
xor
out
dec
fstpl
bound
push
mov
mov
inc
xor
aam
or
push
into
pop
xlat
arpl
mov
mov
xchg
rcl
sub
add
lret
adc
pop
out
pop
mov
ret
xor
inc
inc
inc
arpl
xor
xchg
cmpsl
aad
loope
das
popf
and
cld
mov
sub
mov
or
jne
jle
mov
data16
mov
xor
push
aad
sbb
pop
and
in
mov
loope
pop
dec
xor
rorb
adc
dec
scas
pop
pop
xor
out
xchg
or
loopne
jae
inc
ja
fwait
xor
xorb
and
mov
dec
loope
mov
ficoms
push
movsb
sub
pop
lods
data16
mov
pop
scas
mov
push
push
rorl
inc
mov
cld
mov
int
adc
mov
adc
cmpsb
pop
xorb
shl
pop
lock
push
xor
in
cmp
adc
mov
or
sub
iret
out
test
int
adc
xor
popa
push
add
xor
push
dec
push
jge
xor
aad
and
out
dec
sbb
or
add
pop
or
into
jno
stos
loopne
dec
or
notl
dec
jmp
sub
cltd
cmpb
xchg
bound
mov
rdmsr
aaa
mov
or
icebp
fidivl
or
sbb
push
xor
pop
roll
mov
sbb
jb
jmp
adc
xor
mov
js
dec
xor
imul
pushf
fldt
adc
and
lcallw
or
push
dec
fnsave
inc
cmp
and
mov
sub
sahf
add
or
xor
jo
rclb
mov
test
push
or
in
push
add
popf
inc
fdivs
push
cmp
loopne
inc
pop
imul
ja
pop
push
inc
cmpsb
fdivr
or
int3
mov
jo
adc
pop
test
imul
outsb
sub
mov
jge
in
fwait
aad
aam
inc
mov
mov
pop
mov
dec
and
cmp
xchg
xor
add
dec
imul
xor
jge
xorl
mov
iret
xor
lea
sub
pop
or
xor
or
sbb
movsl
xor
mov
cmc
inc
sub
or
mov
mov
add
mov
aas
or
jno
ljmp
mov
loopne
adc
xorl
outsl
scas
adc
lret
fwait
into
stc
cwtl
fsub
dec
pop
jmp
xor
stos
add
or
mov
pusha
rcrb
pop
ss
cs
repz
test
xor
rclb
icebp
lods
movsl
sub
sti
sbb
sub
push
fbstp
dec
cmpsb
test
jns
sbb
xor
gs
jp
roll
cmp
das
hlt
addr16
xor
sbb
sbb
jle
xor
add
xor
cmc
mov
pop
aad
call
mov
and
or
imul
rorb
adc
faddl
pusha
test
xchg
and
xor
ret
aas
popf
push
imul
dec
and
mov
mov
insl
mov
dec
cmpb
fbld
test
imul
mov
loopne
scas
aam
xor
inc
mov
test
sbb
lea
and
cltd
fsubl
call
xor
push
test
xor
push
loope
sar
sub
mov
scas
xor
add
and
xor
sub
mov
or
cmp
pop
clc
xor
inc
ficoml
dec
add
repnz
xchg
jmp
sbb
mov
pop
sub
out
dec
add
outsb
add
jl
and
pop
push
push
jle
rolb
shrl
cltd
xor
push
ljmp
aaa
dec
subb
sar
out
add
xchg
arpl
mov
push
sbb
and
das
mov
jb
mov
dec
es
push
xor
xchg
popf
mov
mov
sbb
xor
stc
enter
fdivs
test
stos
mov
jl
cld
inc
inc
insb
mov
in
cmp
mov
movsl
push
cmp
xor
or
test
xchg
cmp
je
pop
fwait
sub
lret
cmp
js
aad
sbb
jecxz
mov
subl
enter
int
mov
in
insb
mov
add
outsb
mov
fcomi
or
xor
push
ds
add
iret
mov
cmpsl
aam
push
popa
aaa
xor
clc
nop
lods
jo
inc
ficoms
dec
jl
xor
dec
adc
lds
in
xor
ret
xorb
out
lcall
repz
xorl
or
xchg
dec
jl
insb
out
dec
std
outsb
inc
cmp
pop
mov
jmp
in
adc
xor
sahf
add
push
jae
dec
adc
test
pop
xor
lea
xor
nop
es
pushf
lock
sbb
mov
xor
mov
and
insb
cmp
jbe
xor
cmpsb
mov
push
xor
aad
cli
add
testb
xchg
imul
movsl
ret
leave
sub
popf
test
dec
xor
adc
add
xor
ret
js
dec
test
inc
test
pop
mov
leave
fisttps
shrl
lea
cmp
xor
pusha
inc
fidivs
gs
shll
adc
xor
cmp
fstps
inc
jns
sahf
dec
adc
xchg
repnz
jo
fwait
sub
pop
mov
js
and
push
xchg
jmp
call
push
xchg
adc
push
mov
sub
nop
mov
pusha
and
je
imul
rolb
jg
mov
jns
xor
cmpsl
xor
pop
ds
adc
stos
loopne
adc
out
enter
mov
fcom
pusha
push
aad
xor
lods
add
jne
add
xor
clc
and
and
push
pop
and
mov
adc
jge
push
xchg
push
cmc
xchg
sub
push
xor
and
push
mov
xor
mov
sahf
daa
pop
stc
aad
add
xchg
shlb
cld
addb
adc
or
adc
jmp
adc
add
ret
mov
call
lahf
cwtl
bound
test
or
out
cld
sbb
push
sub
leave
cmp
mov
push
add
xor
flds
xchg
in
hlt
adc
sti
sbb
testl
mov
sub
push
xlat
adc
xchg
pusha
jnp
add
adc
testb
adc
xchg
sbb
dec
jb
sub
push
xrelease
push
popf
mov
ja
sub
lret
cld
ljmp
jne
int3
movsl
imul
push
mov
adc
addr16
and
divb
jb
xchg
mov
inc
xor
mov
jb
add
or
stos
inc
ds
in
pop
mov
aaa
pop
data16
in
jbe
xor
adc
imul
sbb
pop
add
and
xchg
xor
lds
ja
inc
xor
ss
ficomps
lea
jno
testb
pusha
fstl
sbb
das
repz
sub
and
cmpsl
int
cmp
fisttps
leave
adc
xor
jb
sub
js
push
dec
movsb
push
pop
cmc
push
dec
adc
xor
xchg
mov
pop
imul
push
dec
lods
add
rorl
cld
mov
xor
mov
inc
lods
popa
mov
mov
xor
test
xor
jp
test
xlat
xchg
iret
mov
fmull
rclb
sbb
add
xor
stc
adcb
xchg
stos
add
lods
dec
xor
jo
cmp
sbb
lds
jecxz
push
aad
mov
pop
fidivs
sbbl
xor
idivb
xor
lret
xor
out
inc
pop
push
lock
test
xor
xorl
xchg
inc
adc
push
aaa
pop
xor
pusha
rclb
fldl2t
or
sbb
xor
pop
mov
xor
rcr
cli
xchg
decb
xor
push
cmpsl
jo
in
pop
inc
adc
jne
test
jae
into
and
sub
xor
das
in
out
pop
fmull
stos
dec
dec
lret
imul
pop
adcb
push
loopne
xor
in
adc
xor
cmpb
sahf
push
adcl
mov
cmc
xchg
mov
add
nop
mov
scas
fs
jle
xor
sti
dec
xor
push
test
adc
out
xchg
jae
mov
xor
mov
or
xor
pop
dec
jne
jl
repz
mov
outsl
insb
push
out
mov
push
dec
rcrl
xor
mov
jb
and
mov
or
loopne
xor
jg
add
repz
outsl
in
inc
inc
fsubrl
sbb
and
das
xor
cmpsl
imul
out
int3
xchg
stos
xchg
pop
add
xor
and
cmp
xorl
scas
add
push
lcall
pop
sbb
jnp
movsl
pop
incl
xor
daa
clc
add
xor
or
xlat
inc
mov
movsb
push
jp
outsb
xor
dec
push
sub
push
movsb
icebp
stos
or
mov
inc
sbb
pop
lahf
and
inc
int
inc
add
mov
leave
dec
add
mov
sbb
sbb
adc
nop
jb
sbb
sub
lret
xor
insl
mov
push
push
movsb
xchg
xor
mov
xorl
inc
movsl
cmpsl
filds
test
out
add
inc
mov
mov
adc
sbb
cmp
jns
aam
mov
adc
rcll
shrb
jg
aas
jmp
jo
fildl
testb
sbb
adc
pusha
adc
mov
push
ficompl
or
xor
add
popf
mov
adc
dec
bound
aas
adc
pusha
jno
add
scas
orb
clc
jmp
hlt
std
xchg
pop
add
sbb
ja
enter
add
mov
flds
rcll
mov
dec
mov
dec
and
jge
adc
inc
mov
jl
fcmovu
sbb
prefetch
pop
push
jno
dec
rcrl
cmp
out
xor
jo
movsl
rcrl
mov
fistpll
push
or
dec
xchg
into
out
push
cmc
xchg
mov
insb
scas
rcrb
pop
pop
mov
jnp
test
mov
xchg
fisubrs
mov
jb
stc
xor
cwtl
sti
jne
sub
and
dec
dec
ds
mov
lahf
pushf
inc
shr
sti
cmp
xchg
cmp
and
xor
lcall
shrb
xor
cmp
sbb
imul
sub
stc
shlb
push
pop
icebp
mov
enter
dec
int
mov
fs
out
add
mov
por
mov
stos
or
xchg
dec
daa
pop
lea
xor
cmp
push
cmp
push
aaa
stos
xchg
jge
cmp
xor
movsl
fldenv
into
repz
xchg
loope
mov
mov
xor
inc
enter
cmp
xor
mov
push
cmp
pushf
mov
repz
scas
cli
jnp
push
dec
or
dec
repz
cltd
mov
loopne
pop
dec
ja
xor
ss
add
push
outsl
adc
imul
scas
or
insb
movd
inc
xchg
or
jmp
cmp
xor
lods
add
jl
sub
xlat
xor
add
adc
xchg
jge
mov
ret
mov
mov
cmp
xchg
xor
sub
pop
insl
loopne
jns
icebp
movsb
sbb
ss
mov
popf
push
adc
dec
test
scas
ret
cltd
insb
iret
bound
lret
dec
cmp
popa
jne
out
cmpsb
add
loop
xchg
mov
jbe
jmp
mov
add
inc
push
cmpb
outsl
xlat
ljmp
xor
inc
ret
sub
xor
out
jecxz
adc
in
stc
jo
pusha
int
cmpsl
cmp
xchg
dec
push
jns
adc
jle
lods
sbbb
scas
pop
leave
mov
int
add
mov
jae
pop
mov
dec
outsb
inc
cld
adc
imul
test
jecxz
xlat
lret
xchg
lods
stos
jg
inc
xor
cmp
adc
pop
cld
jl
xchg
jne
jns
inc
inc
sahf
lcall
test
inc
adc
xorb
cwtl
mov
cmp
fistpll
push
je
rcrb
adc
sbb
xchg
pop
sti
mov
jge
ds
jo
lods
xor
test
mov
xchg
cs
ss
inc
imul
add
mov
or
call
xchg
pop
mov
jae
mov
enter
xchg
iret
xor
pop
dec
xchg
dec
jg
adc
sub
orl
insb
or
hlt
addl
daa
vsubpd
jl
dec
push
in
insl
movsl
sbb
dec
sarl
cmpsl
std
adc
sbb
push
dec
xor
pusha
and
or
in
mov
mov
jno
sub
daa
cli
mov
push
adc
push
or
mov
jo
inc
dec
sbb
je
dec
jns
loopne
ljmp
fcmovnu
jb
jno
mov
xor
sbb
mov
xor
js
adc
ss
cmc
stos
xor
in
sub
dec
xchg
mov
cld
push
mov
aas
and
lods
std
sbb
xor
rcll
call
dec
aam
jl
cmp
loopne
fwait
jne
lock
add
jb
or
ds
in
ds
cmp
push
add
movsb
lret
dec
add
sahf
xor
adcl
test
mov
mov
imul
xor
and
insl
mov
adc
push
int
pusha
sti
xchg
push
dec
dec
pop
cltd
xor
js
xor
cli
push
adcb
cmpsl
lret
pop
adc
ret
cltd
dec
jbe
sarb
imul
dec
mov
adcl
cmp
ss
xchg
cmp
test
dec
inc
fs
jl
out
cmp
setb
stos
in
xchg
dec
mov
rol
test
cmc
call
int3
dec
punpckldq
nop
sbb
hlt
lcall
lods
out
outsl
dec
out
xchg
enter
mov
pop
ret
lret
xor
out
inc
imul
and
int
lret
movsb
repz
nop
mov
mov
adc
lea
cmc
daa
sub
dec
cmp
hlt
and
jo
ss
cmpsl
mov
cmp
mov
sarl
repz
out
pusha
and
aas
imul
mov
add
cmp
mov
xor
addr16
cmc
outsb
sbb
mov
icebp
dec
ja
mov
out
lods
adc
movsl
cltd
lcall
out
xor
test
push
pop
fdivl
sub
xor
shrb
dec
sbb
xor
mov
mov
cmp
sti
jns
dec
lock
int3
insl
or
js
jns
xor
jno
mov
push
mov
out
das
clc
adc
pop
mov
out
scas
cmp
sbb
outsb
add
xor
mov
push
xor
pop
push
imul
mov
xor
cmpsl
xchg
pop
ret
iret
xor
jecxz
jg
cwtl
add
and
xchg
or
cmp
push
fstp
mov
outsb
xchg
shlb
andl
mov
adc
jmp
aaa
xor
in
fldt
or
imul
ret
add
test
push
aad
leave
adc
sbb
xor
and
jge
xor
adc
xor
pop
push
xor
sbb
into
out
rorl
mov
idivl
or
jbe
jae
pop
out
cld
push
hlt
add
fwait
test
aas
orl
mov
xor
xchg
fcom
sbb
cs
inc
pop
lea
stos
jg,pn
adc
and
rcr
cmp
xor
lods
repz
aas
in
pop
fsubl
mov
fldenv
pop
dec
stc
mov
mov
cmpsb
cli
cmp
mov
test
sarb
in
mov
or
sub
fistl
adc
xor
popf
dec
call
aaa
lock
leave
mov
stos
fdivs
icebp
iret
or
mov
dec
xchg
cmp
repnz
lock
cs
sub
cltd
add
or
loopne
cltd
bswap
xor
sub
ficoms
aad
pushf
divb
fmull
sbb
call
enter
nop
sub
mov
cmp
mov
testl
inc
dec
fs
cmp
lcall
mov
xorl
loopne
or
nop
iret
mov
add
ret
mov
fs
aam
push
out
in
int
neg
jle
xor
xorl
or
adc
fldenv
mov
nop
pushf
dec
out
pop
mov
sbb
xchg
je,pt
sub
test
sub
aam
outsb
add
or
xchg
stc
and
cmp
cltd
mov
adc
mov
or
sbb
mov
fs
pop
hlt
lahf
adc
xor
cmp
jb
fsubr
jl
out
jmp
dec
leave
stc
cwtl
mov
jecxz
sub
lods
add
mov
and
cmp
xchg
lret
mov
arpl
lds
outsb
test
cmp
push
sbbl
or
cmp
xchg
or
and
jns
test
jmp
jbe
lret
xchg
adc
and
xor
aaa
nopl
mov
sub
add
insl
push
sub
cmpsb
xor
and
sub
adc
ja
leave
dec
lret
cmp
add
fnstsw
mov
mov
shll
cmpsl
subl
addr16
ljmp
pop
and
xchg
pusha
insl
jg
push
xchg
and
push
pop
jbe
cld
xlat
testb
test
xor
mov
movsl
inc
xor
and
test
fcmovne
es
mov
test
jg
xor
dec
and
push
or
adc
in
pusha
xor
and
leave
mov
jbe,pt
sub
push
jns
pop
fcompl
mov
test
fildll
sbb
rorb
je
xchg
arpl
cmc
cmp
xchg
in
stos
xor
inc
iret
jecxz
xor
imul
xor
sbb
fnstcw
push
xor
dec
daa
imul
sub
mov
cmp
mov
popa
jae
clc
cmp
xor
cld
les
enter
and
dec
shrl
imul
in
stos
das
divl
dec
and
aaa
cmp
xor
jg
out
xor
ficoms
imul
mov
push
cltd
cmp
sti
jg
and
iret
lret
std
imul
lret
mov
dec
mov
xrelease
inc
mov
sbb
jbe
inc
xor
pop
repnz
adc
in
xor
aam
lods
popf
cmp
xor
fsubr
neg
sti
test
aaa
ret
jg
inc
lods
cmp
push
fidivrl
shll
inc
inc
nop
into
pop
out
adc
mov
xor
ljmp
inc
aad
sbb
aam
out
jge
call
sbb
cmc
aaa
test
rcll
mov
pop
scas
cmp
notl
dec
pop
shl
aaa
scas
dec
mov
enter
fldl
mov
loopne
lahf
adc
add
mov
fs
xorb
xor
test
xchg
add
xor
bound
xchg
xor
faddl
fsubs
pop
xor
or
mov
loope
lret
xor
ja
in
fisttpll
push
inc
jl
int3
cmp
xchg
and
mov
ljmp
add
and
and
ss
jbe
mov
xchg
jo
sti
in
cmp
sub
mov
xlat
mov
sub
cmp
mov
dec
push
jecxz
adc
andl
iret
mov
stc
frstor
adc
in
out
and
add
jns
call
inc
loop
fidivrl
lcall
es
mov
inc
jnp
icebp
mov
clc
lret
int
dec
xor
in
mov
pop
xor
mov
dec
insb
inc
xorb
sub
cmpsb
adc
adc
push
mov
les
pop
fimull
xor
or
icebp
lldt
pop
sbb
leave
testb
fwait
je
cld
xchg
lahf
xor
addb
jnp
mov
ja
repnz
scas
dec
shrb
inc
outsl
or
movsl
and
iret
fldcw
arpl
addl
mov
cmpsl
ljmp
popa
ja
js
aam
cmp
jg
jecxz
fmulp
mov
jne
lret
xor
cmc
cld
or
pop
xlat
cmpsl
xchg
leave
mov
dec
dec
in
movb
hlt
cli
mov
pop
inc
or
add
xor
jl
test
xor
int
pop
jmp
xor
sarl
mov
push
dec
add
fbld
xor
inc
scas
pop
roll
clc
sbb
fbstp
fidivl
stos
movsl
aad
loope
imul
in
mov
cwtl
pop
pop
idivb
int
sbb
mov
xchg
es
leave
or
lahf
jne
pop
xor
jmp
add
sub
xor
pop
cmp
jnp
int
imul
jb
push
arpl
xchg
enter
xor
cmc
add
mov
inc
iret
loope
mov
out
adc
clc
js
xor
data16
xor
mov
loop
into
inc
outsl
pushf
in
pop
sbb
rcll
xor
jg
imulb
repz
add
nop
xchg
mov
outsb
addr16
sti
test
inc
and
xor
into
jae
push
bound
out
push
loope
or
lods
mov
dec
mov
xor
xor
mov
xor
movsb
mov
test
out
or
adc
push
inc
xchg
in
and
jne
nop
dec
rcrl
add
insb
push
or
fmuls
stos
fwait
push
arpl
xchg
inc
and
pop
inc
addl
mov
fnstenv
mov
sbb
fmuls
or
fsts
int3
daa
shlb
inc
inc
mov
mov
mov
fs
in
mov
popa
adc
mov
inc
jbe
sub
mov
xor
cltd
lock
or
xchg
xor
mov
mov
dec
jne
mov
adc
jno
mov
es
xchg
ss
xchg
icebp
and
xchg
sbb
call
jne
add
mov
repz
mov
mov
cmpsl
sub
lods
dec
add
xchg
popf
shr
push
xor
stos
xor
sbb
mov
movb
inc
push
cmc
in
dec
fstpt
jbe
add
mov
outsl
mov
mov
into
cmpl
adc
out
in
fs
mov
int3
scas
test
adc
and
scas
push
mov
cli
sti
iret
js
dec
mov
pop
pop
inc
xor
adc
xor
add
dec
mov
int3
jecxz
xor
mov
sbb
popl
jp
rorb
xor
jg
mov
add
adc
push
sub
and
dec
lea
dec
jno
dec
bound
cs
test
test
ljmp
pop
mov
lahf
outsl
ds
add
mov
jns
out
ret
leave
sub
sub
adc
test
adc
sbb
cmp
out
jae
xchg
aas
sub
mov
xor
insl
jbe
xor
shll
pop
cmp
dec
fiaddl
xor
cmc
call
lods
notb
inc
int
das
adc
or
dec
aas
push
lcall
loope
call
mul
push
pop
pusha
dec
mov
movl
fcmovnbe
mov
mov
lahf
fidivrl
sub
or
mov
out
xchg
hlt
dec
ss
mov
jb
sbb
sbb
dec
mov
std
sub
xor
inc
lahf
push
cmp
bound
mov
sub
ja
std
mov
mov
stc
cmp
shll
scas
inc
xorb
mov
dec
adc
push
or
cmc
sbb
cmp
js
adc
jnp
sbb
imul
aam
mov
and
sbbl
cli
jo
bound
in
sub
mov
in
pushf
lds
arpl
xchg
or
inc
in
inc
dec
mov
dec
sti
adc
test
inc
cmpsb
pop
push
inc
mov
nop
test
dec
sub
mov
inc
lcall
push
int
mov
iret
cmp
dec
ljmp
xchg
mov
testb
js
test
loope
jbe
in
xor
inc
sarl
xchg
cmc
movsb
adc
movsl
into
sbb
orb
stos
mov
adc
ret
adc
xchg
dec
repz
aad
xor
outsb
sbb
cmp
xchg
stos
mov
sub
sbb
shr
adc
sub
stc
pop
inc
in
xor
lahf
inc
lcall
pop
ja
jnp
shlb
lds
and
add
dec
leave
scas
xor
mov
aas
mov
sbb
mov
mov
mov
xor
into
mov
xchg
pop
popf
pop
push
xor
and
rcl
lret
daa
inc
jnp
lahf
std
mov
lds
fs
fistpl
adc
xor
push
pop
cmp
stos
bound
mov
dec
fildl
xor
jp
mov
andl
dec
mov
dec
mov
imul
rorl
lahf
mov
in
xchg
xor
mov
mov
lock
hlt
pop
xchg
int
inc
xor
adc
mov
pusha
mov
push
arpl
xchg
inc
mov
mov
inc
pop
sub
jg
shrb
loopne
hlt
inc
js
fcoml
push
nop
test
aas
data16
sub
mov
dec
push
xor
cmp
xchg
jns
cmp
cmc
lret
cmp
pop
xor
push
adcl
jbe
repz
and
sub
or
gs
or
add
scas
dec
pop
movsb
mov
stos
pop
sahf
bnd
scas
jno
fidivl
inc
fstl
sti
mull
aad
inc
fwait
andb
cld
shlb
fistl
mov
jae
inc
cmp
inc
ficomps
inc
xor
xlat
roll
cmp
adc
daa
aaa
sbb
es
icebp
fcompl
mov
jecxz
dec
mov
sub
fdivrl
into
pushf
xor
arpl
dec
push
sub
cmc
mov
sbb
or
gs
dec
xor
xchg
lods
add
scas
dec
dec
xor
add
dec
orb
xor
inc
jecxz
push
out
jbe
and
sbb
cmc
pop
pushf
pop
push
sbb
jge
cltd
imul
jp
fidivrl
lods
xor
lret
rol
push
imul
add
mov
mov
xlat
dec
insl
inc
fbstp
leave
ja
cmpsl
xchg
lods
xor
in
cltd
mov
loop
arpl
push
js
jae
cmp
outsl
andl
inc
xor
cmpsl
les
or
push
sub
xor
std
das
pop
adc
icebp
in
jmp
xor
into
scas
adc
mov
lods
xor
xchg
xorl
int3
cmp
in
out
cmpsl
mov
fwait
push
add
sahf
popa
mov
imul
add
inc
mov
lahf
or
fs
dec
subb
adc
lret
ja
sbb
inc
lds
push
jbe
xchg
js
xor
jg
jno
enter
and
push
mov
and
fisubs
cltd
mov
and
shl
into
xor
popf
jge
les
push
sub
test
scas
lds
in
sahf
setnp
fistl
xor
dec
push
pop
xor
push
cmp
pop
push
rorl
inc
mov
add
leave
and
xor
shrl
mov
sub
jecxz
fstl
xor
sbb
adc
cmpsl
add
mov
push
xchg
adc
pop
pop
dec
fdivrs
mov
dec
jne
sbb
xor
cmp
and
adc
in
jns
fsubr
lret
shll
popa
int
into
mov
xchg
mov
mov
arpl
inc
xor
xlat
jbe
xchg
out
sti
fs
mov
xor
dec
pop
aas
jg
movb
mov
aam
lods
cmp
mov
mov
push
inc
cwtl
repnz
xor
sahf
and
roll
or
xor
repnz
mov
es
xor
xor
dec
xor
mov
das
pop
cmp
and
cld
in
repnz
stc
sbb
jbe
jg
int
repnz
fldcw
inc
int
or
pushf
pop
jne
fidivs
repz
loopne
cmp
addl
and
cmp
push
xor
or
xor
shl
mov
or
out
ss
xlat
xor
andl
popf
cmp
inc
in
push
subb
mov
sbb
nop
leave
inc
in
mov
in
xor
lods
xchg
cmp
add
call
push
pop
repnz
jb
mov
dec
pop
jmp
xor
pop
mov
xor
insb
jecxz
ljmp
divb
jl
ja
inc
and
mov
xchg
push
es
outsb
mov
xor
cmp
mov
mov
xor
dec
mov
inc
loop
inc
in
xor
or
pop
test
stos
and
push
inc
scas
adc
push
sbb
neg
pop
bound
cli
movsb
jle
mov
xchg
insb
stc
in
sbb
push
push
scas
push
cmp
sbb
das
xor
dec
call
adc
xchg
pushf
dec
mov
pop
inc
cltd
mov
fstps
nop
xor
fwait
jb
xor
pop
repz
test
adc
inc
rorb
adc
test
mov
push
lahf
stos
sub
popf
fcoml
daa
xor
push
jb
enter
xor
push
shrb
fnsetpm(287
push
mov
sub
sub
das
xor
scas
lea
sahf
mov
fnstsw
mov
xor
mov
jg
mov
jmp
pushf
fdiv
inc
into
test
pop
pop
and
jmp
subb
stos
jmp
dec
leave
rorb
sbb
or
mov
lods
pop
pop
inc
jle
xor
lret
cmc
mov
out
mov
mov
pushf
dec
dec
sbbb
int3
xor
test
int3
sbb
xor
ljmp
mov
and
cmc
pop
or
movsb
cmpsb
jb
mov
out
xchg
mov
dec
inc
cwtl
cmp
stos
xor
pop
or
xor
xchg
sub
xor
adc
add
inc
dec
jmp
rclb
call
pop
xor
ret
xor
jg
pop
jge
push
xor
mulb
sub
sbb
xchg
xor
cltd
push
adc
cmc
xchg
ss
mov
adc
dec
adc
mov
fwait
inc
sarb
adc
loope
sub
and
pop
in
cmp
or
or
push
mov
lods
sbb
loopne
adc
int
adc
icebp
add
xor
jl
loope
xor
rcl
shrb
imul
pop
pop
outsb
cli
xor
cmp
adc
mov
xor
sti
jns
mov
icebp
inc
popa
sarb
andl
xor
jg
je
mov
sar
mov
sbb
popa
adc
iret
cmc
xor
xchg
sbb
mov
mov
cmp
lcall
adc
imul
inc
or
shll
stos
fs
mov
repnz
ja
popa
xor
mov
in
xor
int3
mov
inc
add
cld
loop
xorl
xchg
lcall
xor
mov
push
das
inc
or
dec
pop
add
mov
or
push
push
xchg
bound
push
fsubrs
out
mov
add
cwtl
lcall
adc
ss
outsb
xchg
pop
mov
insb
int
jmp
out
in
ret
sbb
loopne
mov
mov
sbb
cmc
xchg
popa
mov
fs
les
pusha
insl
leave
mov
or
rcll
mov
or
loope
aas
jns
push
or
jge
jg
movsl
fildll
or
xor
xchg
xchg
add
into
fimull
add
nop
pop
xchg
out
or
and
subl
leave
inc
aas
lret
mov
xchg
xchg
xchg
in
push
aaa
mov
cmp
cld
fsts
sub
lea
inc
shlb
and
cltd
es
ret
dec
mov
xor
fldcw
loop
test
push
adc
xor
bound
sbb
xchg
sti
inc
enter
lea
jl
nop
mov
jbe
xor
add
iret
scas
xor
outsl
jl
mov
outsl
into
ljmp
int
xor
test
xor
dec
shrl
cmp
pushf
pop
mov
push
mov
cmp
jl
and
cmp
fsubl
adc
in
lret
push
mov
sub
dec
mov
xchg
xor
push
int3
fmuls
inc
mov
xor
pop
cmpsl
xchg
dec
dec
rcrl
in
test
cs
fstpt
inc
out
jecxz
cmpsb
mov
adc
ss
inc
cmc
mov
mov
imul
inc
mov
popf
jmp
popa
shrb
lret
inc
mov
jge
mov
cmp
repz
icebp
sub
lods
movsl
out
push
cmpsl
clc
popa
push
mov
mov
out
int
xor
scas
dec
nop
pushf
push
add
push
gs
xchg
adc
outsb
and
out
pop
in
jge
or
xor
mov
cmp
adc
adc
into
popa
xor
repz
add
dec
pop
test
xor
into
cmp
jge
gs
mov
daa
xor
lahf
mov
lds
cmp
mov
sub
jbe
cltd
xor
xchg
dec
ret
ret
xor
stc
aam
cmp
jns
repz
ret
and
dec
scas
leave
frndint
jbe
mov
add
sub
xor
add
xor
jg
stos
iret
inc
sar
mov
in
dec
lret
in
imul
fidivrl
xor
ret
test
scas
xchg
xchg
mov
shlb
rcll
leave
push
jo
dec
les
inc
mov
xchg
inc
fsts
pop
add
add
loopne
mov
insl
inc
adc
ss
loopne
adc
dec
xorl
xor
jmp
jno
insl
sbb
and
nop
sub
shr
outsb
pusha
lods
inc
and
hlt
xor
jg
dec
call
lods
cld
int3
sub
cmp
xor
cmpsb
pop
fiadds
push
les
mov
or
mov
test
std
mov
loopne
rcrb
dec
xchg
fdivl
dec
sbb
in
jne
lods
stc
leave
mov
cmp
leave
mov
pop
icebp
orb
mov
fidivs
cmp
or
stos
xchg
jl
xor
jp
jb
lock
adc
nop
movsb
adc
cmpsl
popf
mov
fistpll
pop
shll
jg
mov
jle
movsl
push
repnz
push
pop
divl
xchg
push
pushf
pop
sbb
xlat
sti
xorl
lcall
movsb
pop
add
arpl
xchg
sub
fldl
loop
dec
mov
pop
xor
fwait
mov
call
arpl
ficoml
xchg
icebp
outsb
xor
jge
sbb
ret
in
mov
inc
mov
divl
add
mov
fsubrp
xor
and
popa
push
pop
mov
in
test
pop
sti
xchg
xor
into
dec
bound
mov
pop
push
pop
outsb
sub
mov
inc
cmp
test
aam
andl
mov
sub
dec
xchg
jno
dec
adc
adc
dec
dec
xor
lea
add
adc
mov
mov
out
or
sub
inc
sub
add
inc
push
fiadds
mov
std
push
aas
dec
in
mov
cmpsl
xchg
dec
xor
and
fcomi
mov
push
or
xchg
int
ja
mov
lods
jnp
xor
aad
adc
daa
out
sbb
repz
xlat
xchg
int3
xor
sti
xchg
call
and
jle
aaa
push
lods
in
sub
and
pop
shll
dec
je
int
xchg
mov
out
fldenv
scas
inc
add
mov
fildl
sub
ffreep
push
insb
pop
inc
out
mov
fstpl
dec
cld
push
lret
aad
nop
leave
cmp
cmp
adc
fs
and
and
or
call
cld
cmp
outsb
inc
mov
pop
xor
inc
ja
xchg
jns
sbb
sub
adc
jno
push
sub
xchg
aam
lahf
int3
fldenv
add
jb
mov
xchg
jecxz
push
cmp
add
push
arpl
dec
test
loopne
mov
add
jno
fcomi
or
xor
inc
xor
lcall
dec
mov
inc
inc
dec
sub
xor
enter
cmp
mov
je
xor
mov
stos
cltd
ja
or
push
cmpl
shlb
jo
lods
xchg
xchg
adc
out
fbstp
push
jg
int
icebp
stos
sahf
or
cmp
fwait
leave
pop
hlt
mov
dec
xor
push
xor
xlat
xchg
xor
inc
aam
xor
orb
lods
fldenv
inc
ret
or
cmc
leave
inc
xor
xor
push
sub
lods
insl
mov
xor
dec
mov
aam
repnz
jl
lods
cltd
or
xor
stos
vpxor
in
xor
xchg
xor
mov
mov
mov
xor
cld
jle
mov
cmp
test
outsl
ficomps
shlb
or
mov
or
sub
repnz
fsubs
cmpsl
xchg
repz
cmp
cmp
xor
fldt
clc
imul
xor
jmp
mov
or
aad
xor
test
push
hlt
dec
add
pop
mov
sub
mov
bound
popa
mov
cmp
clc
push
pop
xor
or
roll
std
pop
inc
mov
clc
lods
ret
xor
pop
loope
adc
aam
cmp
jp
xor
sti
mov
adc
push
aam
add
mov
and
inc
xor
cmpl
pop
std
addr16
xor
add
ljmp
jecxz
or
jl
push
and
sub
iret
enter
mov
push
add
and
inc
ret
fnstsw
xor
push
das
jns
int
xchg
cmp
fldenv
dec
cltd
scas
push
in
pop
push
xchg
xor
arpl
jmp
pusha
lods
pop
mov
dec
jae
fs
adcb
inc
pop
push
repnz
mov
lods
push
pushf
push
daa
push
call
or
mov
xchg
cltd
inc
ljmp
xor
mov
xchg
call
dec
adc
push
fstpt
sahf
sub
xor
stos
sbb
mov
dec
lds
push
or
adc
mov
fs
adc
imul
testl
out
pop
and
push
cmp
and
in
inc
cld
or
dec
scas
movsl
mov
xor
xchg
push
mov
adc
jnp
ret
xchg
inc
jb
cmp
add
pushf
push
dec
adc
dec
repz
xor
xor
mov
movsb
insl
mov
push
xor
push
ret
lea
cmp
add
cmc
lahf
rcrb
pop
gs
xchg
push
mov
xor
sub
cmp
xchg
and
mov
push
push
ds
icebp
es
sbb
dec
popf
pop
xor
add
out
cltd
enter
push
mov
mov
adc
mov
int
jb
adc
movsl
jno
mov
lahf
mov
adc
xor
sub
cmpsl
pop
shll
sbb
insb
mov
mov
movb
xor
sahf
pop
andb
cmpl
or
repz
cmpsb
fcomps
hlt
xor
shlb
xor
or
or
jae
inc
pop
inc
mov
dec
inc
pop
push
scas
cs
pop
sub
shr
sbb
loope
aam
ljmp
mov
dec
ficompl
cmpsl
je
xor
fs
xor
cltd
stos
test
add
clc
dec
lret
mov
adc
inc
fldt
sbb
xchg
imul
mov
xor
ret
movsb
lret
mov
icebp
das
mov
out
ds
dec
or
hlt
xchg
orl
push
stc
loopne
inc
mov
scas
mov
or
xchg
sub
subb
xchg
mov
jmp
dec
shld
mov
mov
scas
aad
xor
cmp
inc
arpl
fdivl
stc
xor
jno
icebp
cwtl
insb
and
into
insl
in
xchg
es
stc
adc
clc
dec
in
mov
lods
and
or
jns
out
mov
cmpsb
xchg
mov
aas
shll
dec
popa
fmull
aam
mov
adc
and
gs
xchg
sub
repz
dec
repnz
fcomp
cmc
and
aam
xchg
rcr
xor
lock
out
sbb
test
fsubrs
mov
jae
rep
pop
outsb
add
jo
pop
dec
shlb
inc
bound
repz
xor
or
push
jp
pop
xor
mov
jle
scas
jg
xor
inc
and
add
sbb
xor
enter
ja
je
test
xchg
jmp
mov
and
push
inc
and
pop
push
jecxz
add
rolb
js
xor
movsl
idivl
and
pop
pop
xor
icebp
inc
loopne
bound
mov
cmp
xor
movl
faddl
mov
das
fistps
cld
xor
aaa
adc
mov
push
and
jmp
push
sub
test
xor
add
lret
push
mov
mov
fidivl
mov
pushf
enter
aad
fadd
or
xor
add
hlt
fiadds
pop
and
outsb
sti
mov
test
xchg
cld
inc
cmp
xor
xor
fwait
test
xor
jnp
jg
mov
shrb
mov
add
xor
mov
out
xor
mov
mov
scas
je
push
int3
cltd
dec
test
xor
roll
nop
push
push
xchg
xor
jp
sub
xlat
jmp
and
push
mov
rolb
sbb
xor
push
jns
adc
xlat
mov
dec
push
xchg
and
jecxz
mov
push
xchg
pop
cmp
dec
xor
mov
xor
and
xor
sbb
insl
fldcw
add
sbb
pop
rolb
mov
rorb
sti
xchg
pop
adc
les
dec
pusha
cmp
xor
jg
add
push
xor
movsl
je
inc
pop
dec
imul
push
pop
rorb
adc
popf
jecxz
enter
inc
aam
adcb
cmp
sbbl
subb
les
stos
inc
add
and
jmp
dec
or
xor
outsl
or
inc
stc
aad
add
sahf
xor
mov
je
push
out
xor
lcall
pop
in
repz
dec
arpl
cmp
call
push
mov
pop
lahf
inc
inc
lds
test
fwait
xor
es
mov
adc
sarl
jnp
push
fdivrs
xor
or
inc
push
imul
xor
sti
push
xor
xor
push
xor
es
or
daa
and
adc
mov
xchg
lret
out
sbb
mov
jne
push
pusha
shll
out
sub
mov
cmp
and
pushf
xchg
or
mov
sbb
insl
jl
test
rcr
je
enter
dec
bound
mov
sub
imul
cmp
cmp
push
in
cs
dec
inc
push
push
test
stos
mov
imul
hlt
cmp
push
mov
leave
cmp
dec
aaa
movsb
rolb
das
mov
addb
out
in
adc
les
rorl
loope
mov
shl
sbb
bound
lods
fmull
jmp
call
jns
or
pop
xor
std
test
frstor
lahf
cmp
rclb
inc
ficomps
rcll
loopne
mov
ja
jae
subl
mov
push
add
xchg
sub
enter
mov
cmp
bound
push
mov
sub
mov
outsb
adc
mov
push
mov
mov
dec
maxps
sahf
mov
or
adc
dec
insl
mov
cli
pop
xor
sbb
fdivl
pushf
jns
ljmp
in
mov
hlt
jnp
xor
movsb
out
sahf
pusha
xchg
pop
lahf
xchg
mov
dec
mov
jmp
inc
pop
push
out
out
test
push
fcomps
and
mov
mov
daa
xor
andl
js
dec
or
cmp
stos
pop
add
pop
stos
adc
lea
jnp
mov
repz
push
xor
sar
xor
cld
jnp
test
fdivl
or
push
out
cmpl
jbe
xor
aas
jno
sbb
out
xchg
and
push
and
pop
js
inc
adc
jns
mov
sbb
xor
xor
sbb
cs
mov
test
mov
test
mov
inc
pop
lahf
out
push
fst
sar
xchg
push
xor
mov
jecxz
add
xor
pop
rol
jnp
test
stos
xor
pop
sbb
repnz
or
xor
fisttps
in
aam
mov
mov
dec
pop
pop
push
adc
in
cltd
inc
mull
aam
scas
mov
xor
lods
xor
hlt
addl
push
and
stos
fmulp
xchg
sbb
nop
cmpsl
pushf
sub
and
pop
mulb
mov
mov
mov
pop
leave
fists
mov
and
adc
mov
inc
mov
sarb
xor
into
stos
lods
in
cli
xor
mov
popf
jmp
or
lret
pushf
ja
xchg
inc
mov
inc
sbb
jmp
adc
jns
cmpsl
inc
cmp
mov
sbb
xor
gs
mov
bound
pop
pushl
xchg
fiaddl
fsub
pop
div
pop
dec
or
inc
jae
or
rol
xor
int
sub
icebp
repz
xchg
popf
inc
add
pop
cmp
scas
mov
push
push
sbb
sub
mov
ret
xor
mov
push
jns
divl
fistpl
nop
movsl
test
dec
and
xor
inc
sbb
mov
adc
cmp
ljmp
sub
loope
std
xor
test
shll
xchg
mov
dec
ljmp
adc
xchg
mov
or
imul
xor
je
jb
mov
cmp
xor
ja
pop
xchg
xor
mov
int
add
or
mov
out
test
or
and
jge
mov
popa
adc
lret
aaa
mov
push
sub
dec
loopne
sahf
cmp
mov
aaa
test
outsb
xor
cltd
sbb
xor
jg
xchg
es
xor
and
adc
xor
mov
test
mov
fwait
or
arpl
sub
out
sub
insb
push
xor
mov
movsl
mov
sub
loope
add
push
xor
inc
popa
xor
and
shll
add
pusha
add
ss
das
shlb
xor
lahf
repz
cmp
sub
insl
shrb
xchg
xor
jb
jne
push
inc
jp
xchg
xor
negl
sti
push
dec
push
mov
xchg
orb
notb
stos
xor
push
xor
xchg
aaa
aaa
mov
push
cmp
xchg
dec
inc
dec
cli
push
iret
inc
cmpsl
xchg
inc
xor
adc
jb
mov
xchg
xor
xchg
mov
adc
xor
xor
push
jecxz
adc
jbe
mov
aam
push
in
pusha
fbstp
xor
lea
test
xor
mov
rorl
addr16
push
mov
add
adc
fcmove
les
sbb
sub
clc
and
sbb
sti
scas
fld
testb
adc
adc
push
mov
push
adc
mov
dec
or
cmp
adc
ja
mov
xor
pop
js
ljmp
int
mov
jb
jecxz
xorb
xor
xor
push
add
fs
int3
xor
jb
mov
pop
mov
dec
jb
dec
adc
push
push
in
xor
lret
sbb
mov
fisubs
mov
push
lcall
sbbl
inc
push
jns,pt
push
lcall
xchg
inc
mov
test
out
cmp
sub
mov
je
jbe
dec
ret
push
push
pop
icebp
mov
popf
or
pushf
cmp
push
mov
push
inc
dec
daa
dec
xor
mov
mov
adc
cmp
cmp
pop
outsb
jp
mov
fidivs
aaa
mov
cmpsb
push
fisubs
sbb
jl
xchg
and
push
in
push
dec
fwait
dec
fwait
pop
mov
adc
adc
adc
jae
push
rclb
fs
adc
dec
mov
ret
pop
add
inc
js
xor
pop
xor
cmp
push
cwtl
or
out
push
push
mov
cmp
arpl
jb
sbb
xchg
push
inc
hlt
mov
daa
cmpsb
mov
lea
inc
ret
stc
bound
bound
xchg
xor
adc
mov
aad
push
push
xlat
fnstenv
shrl
mov
jp
loop
mov
mov
jb
js
adc
aaa
rcrb
andb
push
push
pop
popf
fwait
xor
xor
inc
sbb
jbe
push
dec
jb
xor
lods
dec
lcall
xchg
mov
adc
xor
add
jae
sbb
mov
mov
cmp
push
lods
mov
hlt
sub
mov
mov
xor
xor
xchg
pop
mov
inc
push
mov
sarl
les
fwait
cmpsl
dec
sbb
dec
ss
push
jbe
les
psubsw
ljmp
cmp
or
scas
xor
je
pop
pop
xor
xchg
pop
pop
adc
mov
js
xor
aam
insb
push
mov
jle
addb
jne
idiv
push
jbe
mov
pop
jns
lcall
jnp
gs
cld
sbb
pop
jge
mov
jp
push
loopne
mov
dec
xor
test
cmpsb
mov
lret
mov
lret
mov
lret
mov
mov
scas
ffree
aam
jo
mov
mov
sub
iret
push
andl
aad
adc
hlt
and
sub
xor
adc
xchg
jbe
xor
push
xchg
cwtl
xor
push
aam
insb
or
mov
outsb
jo
lods
mov
orb
sbb
flds
and
lods
stos
mov
cs
call
sub
enter
mov
outsl
or
mov
cld
or
stos
cmpsl
popa
xchg
push
mov
jmp
pop
push
hlt
std
adc
jo
pop
push
adc
outsb
in
cmc
pop
inc
lea
call
stc
pandn
mov
clc
xor
mov
inc
lds
jg
cltd
and
mov
xor
pop
out
int3
insl
cli
rdmsr
cmp
lahf
outsl
adc
sbb
sub
xor
fnstsw
push
or
fbstp
inc
mov
cmp
push
jl
lret
sbb
pop
loop
imul
repz
out
xor
inc
xchg
push
xor
scas
and
test
into
jnp
mov
fs
js
xchg
cwtl
test
xor
fdivp
popf
jne
cmc
int
and
sub
xchg
scas
in
loopne
jns
mov
ss
and
in
jl
push
jae
mov
int3
test
popf
xor
jle
cmp
pop
iret
jns
jg
lods
dec
jmp
jbe
xchg
out
sub
movsl
mov
xor
lahf
xlat
add
ljmp
scas
adc
dec
ss
popa
pop
mov
push
lcall
jl
sbb
mov
xor
push
jo
jmp
sbb
fcoms
xor
dec
ljmp
daa
pusha
push
gs
sbb
sub
mov
lret
shrl
mov
mov
int3
dec
push
rcrb
cmp
inc
pop
hlt
test
lods
mov
push
cmp
jmp
jle
or
sti
xor
mov
dec
rcl
sub
insl
push
cmpb
sbb
xor
add
lcall
pusha
int
bound
jo
shlb
push
jp
xchg
push
jbe
sti
push
shrl
mov
xor
cmp
push
sub
insb
lods
stos
test
xor
stos
jmp
lret
iret
mov
cmc
xchg
push
jb
mov
mov
xchg
rcrb
mov
repz
push
enter
nop
loopne
add
mov
dec
das
xchg
ljmp
fldenv
sarb
das
xchg
pusha
idivb
or
jo
or
cmp
jle
mov
push
xor
push
dec
jbe
inc
push
test
clc
or
aas
into
test
push
rcrb
into
rolb
mov
sbb
push
popa
xchg
jae
leave
aaa
arpl
popa
mov
sub
xor
adc
xchg
mov
je
movsl
push
ret
push
cmp
add
out
jno
xor
jae
out
mov
adc
jecxz
clc
stos
int
ljmp
jmp
xchg
adc
cmp
cmp
jle
mov
cmc
jne
bnd
aas
pop
aad
xchg
rcrb
xchg
pop
mov
cmp
xchg
shll
hlt
sub
jle
lods
lock
repz
xchg
pushf
pop
inc
xchg
jnp
xchg
inc
repz
popa
adc
mov
lock
xor
jne,pn
push
sti
xor
mov
jb
dec
or
pusha
popa
push
aaa
addr16
ss
push
adc
cli
pop
xchg
pop
push
xchg
je
pop
pop
ror
push
inc
outsb
cmp
sub
push
fstpl
and
pop
push
sbb
mov
push
aam
popa
xlat
je
je
addr16
stos
jb
adc
sar
loop
sub
pop
mov
mov
adc
loopne
push
js
addl
sbb
repnz
xchg
jns
xor
ret
mov
jg
mov
lea
add
jno
cmc
adc
lods
xor
adc
hlt
mov
adc
or
inc
push
fwait
pop
popa
test
add
in
ljmp
scas
xchg
dec
cmc
push
je
pop
adc
nop
cltd
sub
add
sub
sbb
push
and
jno
cmc
nop
mov
xor
xchg
ret
ss
mov
dec
adc
shlb
cmp
adc
xor
push
sbb
push
movsb
icebp
test
adc
mov
stc
jmp
das
out
aad
pop
and
jnp
sub
xor
sub
addr16
xor
push
in
xchg
mov
add
jg
push
jge
xlat
jae
fmul
hlt
xor
dec
xor
jmp
xor
repnz
movb
and
rcrb
add
dec
jg
out
xor
push
ja
xor
dec
mov
cld
mov
notl
sahf
lods
push
push
mov
ds
stc
lea
je
mov
push
xchg
or
pop
stos
inc
jae
xor
iret
xor
mov
jecxz
push
inc
insl
inc
fbstp
pop
xor
pop
call
push
icebp
bound
cmpsl
dec
sub
or
popa
filds
mov
inc
lods
xor
pop
push
loopne
aaa
push
or
cmpsb
sbb
lcall
movsb
adc
hlt
and
jecxz
sbb
xchg
lahf
dec
xchg
fisubrl
test
repnz
jae
and
fiadds
aad
jno
in
repnz
jp
hlt
xor
mov
push
mov
dec
ss
dec
cmpl
sbb
sub
mov
int3
xlat
sub
and
lods
enter
leave
aad
mov
inc
lods
pop
popa
inc
fwait
aad
orb
mov
push
iret
mov
xor
xchg
jl
adc
iret
faddp
test
in
hlt
xor
xchg
out
mov
movsb
fs
xchg
inc
pop
xor
push
ss
mov
rcl
aas
xchg
cmpsb
and
fisttps
inc
shl
jl
sahf
jmp
sbb
or
sbb
jecxz
and
or
fs
fdivrs
lcall
cmpsl
stos
jge
mov
jecxz
push
xor
xchg
mov
xor
adc
call
cwtl
xlat
inc
aaa
sub
jp
push
shrl
jb
pop
fldt
jge
jge
repz
adc
add
dec
les
sub
dec
mov
dec
fwait
push
ret
lcall
lcall
xchg
repnz
push
test
push
jae
mov
pop
scas
test
push
add
fsubrl
jno
dec
out
lods
loopne
jecxz
mov
lret
mov
sti
adc
loope
push
xor
adc
adc
jle
xor
and
mov
cli
inc
jmp
shlb
cmpsl
js
sbb
push
ficoms
xor
inc
push
jne
ss
xor
cmpsb
inc
or
popfw
xor
mov
rorb
and
fidivrl
push
mov
in
xor
xor
dec
push
xchg
inc
push
cmp
adc
add
ss
decl
movsl
pop
ljmp
outsb
adc
xchg
xlat
xorl
xor
loopne
jmp
push
xchg
push
outsb
push
shlb
pop
xor
push
dec
push
leave
adcl
mov
ds
sub
cmc
popa
cmc
adcb
jno
push
aam
notb
inc
icebp
mov
rcll
push
fimull
push
mov
fidivs
dec
inc
loop
xor
repnz
es
aad
lds
dec
cmp
mov
aaa
inc
dec
mov
push
ss
and
jae
inc
xchg
push
cmp
jae
jne
xchg
mov
mov
jae
xchg
loop
cmp
cmp
push
shlb
divb
sbb
cli
mov
jae
shlb
aaa
push
ds
sarb
iret
jae
leave
push
push
xchg
jae
pop
cmp
push
dec
sbb
xor
cli
mov
fcmove
xor
cli
mov
push
jecxz
push
js
inc
enter
xor
adc
andb
xchg
mov
inc
into
lds
xchg
les
jmp
shlb
mov
pop
push
ret
cmp
mov
xor
mov
mov
xchg
inc
cmc
dec
lret
ret
into
ret
stc
jp
push
push
cmp
filds
dec
and
sarb
les
dec
dec
cmp
mov
adc
inc
cmp
inc
ljmp
inc
mov
xor
ror
ja
push
lds
enter
cltd
adc
jae
and
clc
cmp
ss
or
xchg
je
mov
jecxz
xchg
test
mov
inc
mov
cmp
lock
cmpsb
pop
ss
and
mov
out
lock
mov
imul
adc
mov
inc
mov
xchg
ror
insb
pop
mov
xchg
les
dec
int
loop
rcll
inc
pop
adcl
mov
sar
push
jae
xchg
adc
aam
mov
xor
xchg
cmp
loop
xchg
inc
cmp
mov
mov
adc
jnp
xchg
lahf
jns
fidivs
and
lcall
inc
and
cmp
mov
cmp
icebp
mov
rclb
aaa
loopne
adc
ljmp
fwait
mov
shlb
xor
ret
cmp
pop
inc
ror
jb
cmp
sti
pop
shlb
mov
jb
xchg
call
leave
aad
es
inc
sti
inc
push
inc
repz
xchg
mov
sbbl
cmp
inc
push
push
jbe
xchg
in
adc
push
clc
cmp
scas
xchg
mov
pop
sbb
js
ret
xchg
mov
cmp
into
adc
sarb
sbb
in
mov
ljmp
into
fs
xorl
rclb
add
mov
pop
dec
cmp
xchg
mov
and
mov
jp
mov
shlb
je
or
push
sbb
sub
mov
push
adc
xor
inc
inc
mov
roll
repz
mov
inc
xchg
jb
inc
aas
cmp
and
iret
mov
test
mov
dec
pusha
jae
xor
je
xchg
mov
jne
mov
rol
xchg
cmp
mov
mov
je
ss
mov
pop
pusha
xor
jmp
inc
cmp
jne
mov
xor
push
pop
lea
or
outsl
lds
mov
cmpsl
xor
mov
stc
outsb
mov
pushf
lret
pop
setne
pop
pcmpeqw
jae
xchg
xchg
mov
roll
std
mov
je
stos
testl
pop
mov
xor
rolb
pop
mov
loop
mov
mov
push
fsubs
enter
sbb
inc
test
stos
xor
xchg
adc
pop
data16
pop
or
mov
unpcklps
and
inc
jbe
xchg
in
jmp
xchg
ds
xor
xor
shlb
xor
xchg
lds
mov
cwtl
add
jae
hlt
mov
xchg
lret
and
ljmp
lret
mov
xor
mov
lea
iret
pop
jne
ds
inc
cmpl
in
ds
hlt
mov
dec
mov
cltd
mov
aam
push
stos
rcll
mov
xchg
cmp
mov
pop
cmp
xor
hlt
gs
mov
push
rcrb
sarb
loopne
cmp
fcomps
and
mov
dec
leave
add
mov
std
adc
sbb
int3
cmp
dec
xchg
mov
mov
fbstp
hlt
leave
xorl
jecxz
jo
jb
push
mov
leave
ret
xor
aas
mov
jmp
inc
into
testl
sbb
xor
shrb
test
inc
repnz
dec
cmp
ret
dec
hlt
inc
leave
cmpsb
dec
push
xor
cmp
xor
push
notl
jbe
leave
aaa
aas
cmp
sub
mov
xor
js
mov
je
mov
mov
adc
inc
inc
sbb
nop
xor
arpl
cmp
pop
ret
dec
hlt
inc
leave
cmpsl
cmp
jnp
in
rcl
push
xchg
adcb
loop
ret
jge
sbb
jno
fwait
push
mov
sbb
mov
mov
jno
shrb
xor
js
mov
jne
mov
dec
push
dec
int
and
rcrb
fwait
mov
push
pop
mov
xchg
lret
push
sub
mov
and
cld
shrl
xor
fbstp
hlt
leave
inc
cmc
pop
outsb
mov
xor
pop
aam
mov
xorl
popa
fwait
mov
pop
stc
inc
sbbb
cmp
push
pop
xor
in
jl
xchg
into
int3
mov
sub
shl
xchg
jbe
push
adc
icebp
pusha
push
je
jl
jne
push
divb
pop
lcall
cmc
jns
pop
lcall
mov
aas
or
adc
xchg
decl
aam
lock
clc
ljmp
dec
xor
jge
mov
dec
fcmovnb
mov
cmp
jae
xchg
scas
jge
dec
mov
push
ret
xchg
jne
adc
mov
in
loop
mov
ss
pop
shlb
sti
daa
out
int
stc
xchg
or
mov
imul
dec
jo
xor
ret
mov
or
pop
aaa
rcll
dec
adc
sub
inc
inc
cmpb
inc
mov
mov
lret
clc
les
mov
fcmove
push
fidivl
add
xchg
mov
push
jle
ljmp
mov
mov
pop
mov
pop
mov
mov
xor
mov
mov
dec
dec
mov
in
notl
sti
xchg
lods
dec
jp
inc
out
mov
and
mov
icebp
pop
mov
leave
mov
ret
cmp
inc
es
mov
inc
jp
leave
mov
mov
fxch
cmp
fidivrs
sbb
inc
out
aam
push
stc
push
push
ds
pop
cmp
sbb
and
popa
jne
es
mov
aas
test
imul
movsl
and
sbb
pop
cmc
sub
jecxz
push
and
fsqrt
ror
cmp
sub
inc
lretw
inc
and
cmpsb
adc
lahf
xor
xchg
inc
push
jns
adc
push
cmpsl
notb
pop
out
cmpl
cmp
pop
fstps
cltd
sti
xchg
cmc
int3
push
xchg
add
dec
inc
or
ret
imul
ret
mov
in
mov
es
add
add
les
aaa
adc
insl
sti
les
push
inc
cli
lret
inc
ficoml
lahf
jno
aaa
xor
xchg
shlb
jg
add
addr16
add
aad
xor
adc
outsb
jne
je
movsl
or
lret
jae
scas
mov
rcll
dec
cmp
adc
push
add
repnz
dec
testb
jne
mov
fsubrs
add
pop
mov
adc
je
leave
push
dec
xchg
mov
shl
rclb
add
xor
inc
hlt
xor
mov
push
das
cmp
sbb
addr16
pop
jae
bound
js
enter
repnz
and
cmp
lret
mov
sarl
xchg
xlat
sub
and
rclb
mov
mov
mov
dec
inc
idivb
adcl
xchg
or
mov
jb
aaa
push
cmp
and
sarb
mov
mov
das
je
negb
arpl
lret
mov
mov
call
add
sub
push
mov
les
stos
ljmp
bnd
or
push
mov
mov
cmp
push
ffreep
fimull
mov
xchg
enter
fcoms
xchg
pop
jno
mov
icebp
xor
aas
pusha
jae,pt
cmp
mov
cmp
ds
jle
mov
shrb
mov
test
hlt
cmc
cld
outsb
aam
and
aaa
pop
jb
mov
adc
ficompl
inc
fdivs
out
inc
test
cmp
push
dec
lret
cld
xor
jb
das
dec
xchg
rcrb
repnz
inc
aaa
rcll
jnp
sub
pop
xchg
adc
xchg
sarl
jl
adc
divl
outsb
into
push
push
das
mov
lret
ds
sahf
xchg
in
inc
jmp
dec
clc
mov
mov
cmp
jne
mov
adc
testl
adc
loopw
outsl
push
jne
adc
adc
lret
aaa
mul
inc
xor
insl
push
rcll
jne
mov
dec
nop
orb
and
adc
push
rolb
mov
pop
aas
xlat
jnp
and
xor
push
mov
cwtl
ds
mov
jns
inc
xchg
mov
call
cmp
adc
dec
cmc
xor
test
cs
add
pop
js
push
push
add
xor
xchg
xor
cmp
outsl
mov
inc
std
fs
testb
ljmp
fwait
push
adc
sbb
repnz
lret
sub
cmp
and
inc
into
pop
push
push
hlt
sub
mov
jne
andb
jb
mov
sub
cmpsl
pop
jae
jns
aam
cmp
mov
mov
fcom
pop
xor
test
js
inc
testl
dec
push
fwait
jp
fcmovnu
xchg
repz
mov
cmp
inc
cmp
cmp
rolb
jb
stos
push
mov
fwait
xor
and
pop
cmp
mov
ds
negl
add
test
into
or
jp
fdivrl
pop
pop
cmpl
add
icebp
sbb
fcomi
mov
cmc
fsubl
mov
popf
mov
add
inc
shl
clc
xor
mov
scas
xchg
mov
adc
arpl
sbb
bound
cmp
cmpsb
mov
repz
push
ds
xchg
lahf
push
pop
aas
mov
mov
push
shll
lret
outsl
ret
jno
dec
test
add
cltd
aaa
xor
loop
into
inc
add
leave
outsb
cmp
mov
push
addr16
fcoml
fsubrs
cli
xor
pop
mov
hlt
cmc
cmp
mov
imul
mov
ja
ret
jle
push
xchg
cmc
inc
leave
test
pop
adc
ss
repnz
lcall
gs
mov
xchg
in
mov
mov
lret
mov
dec
xor
mov
mov
ret
mov
rol
push
jnp
or
popf
mov
push
xor
mov
outsl
mov
add
lret
sti
mov
mov
inc
jp
mov
jnp
xorb
add
mov
jae
cmc
lret
push
test
jns
xor
je
mov
push
inc
incl
fsubs
test
loopne
jg
add
inc
mov
sbbl
mov
cmc
mov
fsubs
dec
into
xor
and
mov
xor
data16
cmp
js
aas
arpl
aas
rcrb
push
xor
rcll
sbb
inc
repnz
add
xchg
divb
int3
call
jp
mov
cmp
mov
in
mov
movsb
mov
arpl
pop
addr16
jbe
leave
xchg
and
cmp
sub
jbe
fdivrs
je
icebp
movsb
pop
andl
pop
ds
fildl
loop
mov
aas
or
cmpl
sub
jle
adc
dec
adc
rclb
mov
dec
adc
mov
pop
dec
push
stc
es
jnp
fcoms
jle
mov
mov
sub
and
mov
add
add
pop
mov
mov
das
cmp
or
loopne
xchg
xchg
pop
and
cmc
pop
aaa
je
xor
jns
ss
cmp
ss
lcall
je
mov
stc
xor
inc
dec
shrl
xchg
sbb
mov
jb,pt
pop
cmp
cwtl
mov
mov
std
mov
ds
pop
mov
mov
arpl
insl
arpl
sbb
jae
adc
xchg
mov
outsb
out
mov
add
test
orl
mov
jmp
xchg
aas
gs
pop
or
ljmp
ficoml
push
divl
lret
xchg
ss
cmp
jecxz
jae
cld
cli
jmp
xchg
xor
xchg
xchg
stos
cmp
mov
mov
stc
sarl
imul
ret
orl
mov
jnp
sub
ret
sahf
aaa
cmpb
rcr
mov
pop
pop
dec
push
xor
jbe
jecxz
cmc
xorl
mov
push
cmp
push
push
mov
nop
push
int3
ja
xor
xorl
cld
push
mov
mov
jo
mov
pusha
xchg
xorl
mov
mov
xchg
sbb
mov
lret
inc
or
mov
mov
decb
cmp
pop
or
jno
mov
movsl
jae
call
fdiv
inc
adc
cwtl
adc
cmp
cld
sub
out
shlb
mov
jb
mov
repz
push
adc
cmp
popf
cmp
cmp
aas
sti
add
bound
cmp
jae
inc
jmp
ret
rorb
or
xor
test
cmp
pop
push
fnstenv
mov
adc
xchg
imull
inc
pop
push
push
ljmp
push
sti
pop
lret
sbb
inc
out
xchg
pop
fcmovne
mov
mov
test
mov
leave
leave
mov
jo
xor
shlw
fcmovbe
jno
pop
dec
add
lret
clc
repz
jle
clc
repnz
fmul
or
jge
mov
xor
rorb
jge
jnp
stos
dec
into
push
mov
dec
push
loope
adc
daa
push
xor
mov
ret
xor
mov
cmp
xorb
inc
xor
pop
lods
int
aaa
dec
aas
and
mov
mov
cmp
cmp
stos
shl
mov
jl
cmp
aad
jns
ds
adc
xchg
roll
mov
push
loopne
aad
aaa
mov
xchg
dec
repnz
rclb
push
mov
fisttpl
sbb
out
in
adc
aad
mov
dec
mov
arpl
inc
push
fs
mov
cld
cmp
xor
out
adc
les
ss
xchg
clc
xchg
cmp
shll
ret
inc
mov
je
aaa
std
leave
inc
cmp
leave
shlb
leave
je
sbb
inc
mov
xchg
xchg
mov
ss
mov
fists
imul
inc
stos
jno
pop
lods
mov
pop
push
cltd
mov
scas
mov
pop
cmp
loopne
std
rclb
std
mov
xchg
pop
sbb
push
cmp
aas
fsubr
mov
inc
sbbb
in
xor
push
lahf
add
iret
int
inc
fwait
push
mov
test
xchg
fmulp
xchg
jecxz
inc
and
mov
aas
ret
arpl
mov
inc
cmp
int3
xchg
daa
dec
xchg
pop
dec
repz
in
int3
mov
or
or
dec
push
push
dec
ret
fbstp
stc
hlt
mov
dec
xchg
push
sarb
push
ret
rcrl
fcoms
mov
push
shlb
cmp
cmp
jmp
push
mov
xchg
mov
jno
jb
mov
js
inc
ss
push
mov
cmp
jl
pusha
aam
rclb
pop
gs
out
test
push
inc
inc
das
dec
imul
push
dec
leave
int
leave
movsb
mov
dec
fidivs
clc
cli
jns
xor
shrl
je
cli
cmp
stc
jecxz
ret
mov
scas
repz
insl
jp
fisttpll
mov
loope
xchg
dec
xlat
icebp
adc
iret
aas
pop
mov
ljmp
in
adc
sub
mov
push
or
and
pusha
aam
push
lret
shlb
or
daa
adc
pop
inc
cltd
lahf
lret
cmc
pop
cltd
sti
shlb
xlat
imul
push
cli
fsqrt
mov
std
mov
idivl
rcrl
xor
lock
ds
and
push
inc
pop
out
mov
mov
into
mov
jmp
pusha
mov
xchg
sbb
lret
nop
mov
inc
loope
testb
push
jae
xor
aam
insl
push
loop
in
pop
cmp
mov
or
nop
mov
shlb
dec
mov
stos
jg
pop
imul
repnz
std
cmp
xor
xchg
mov
mov
aaa
pop
cmpl
mov
sbb
mov
ret
mov
dec
rcrl
stc
add
jle
jnp
mov
inc
push
sbb
mov
inc
ljmp
repz
iret
add
xor
shrb
mov
push
add
cmpsb
cli
sbbb
cli
cli
jp
test
in
adcb
fsub
mov
xchg
mov
inc
inc
push
cmp
push
lock
int
int
scas
ss
mov
adc
xor
fnsetpm(287
sub
and
mov
cltd
jmp
push
pop
mov
sbb
mov
fimuls
sub
mov
lods
adc
mov
jg
hlt
jle
mov
xchg
jle
push
lret
cmp
mov
mov
sbb
roll
stc
hlt
pop
cli
xlat
ss
jns
mov
push
xchg
add
pop
hlt
shlb
and
pop
ret
inc
jl
push
xchg
and
aaa
test
test
rclb
fcompl
sarb
dec
mov
popa
rclb
mov
pop
aaa
enter
in
inc
jnp
sub
push
xchg
push
mov
mov
mov
pop
xor
jns
jge
mov
dec
shll
mov
xor
fs
push
push
xor
pop
add
clc
out
mov
xchg
call
sub
nop
inc
push
xor
push
xor
mov
push
les
xor
jle
xchg
std
jne
dec
jno
outsb
or
aas
sbb
cmpsb
ficoms
adc
xchg
sbb
std
push
test
jbe
pop
cmc
add
cmp
jnp
xor
shlb
jnp
leave
push
scas
mov
cmp
xchg
lret
popa
je
jbe
push
push
test
cmpsb
pushl
enter
stc
ficoml
push
testl
mov
inc
nop
cmp
pop
hlt
test
cmp
add
hlt
aas
or
push
daa
sbb
gs
outsb
mov
push
fsubrp
lock
fwait
fwait
pushf
lods
mov
fstps
cmp
pop
fwait
dec
lods
mov
push
movsb
outsb
jmp
fcomps
push
out
cwtl
push
pop
jge
inc
xor
lea
cmp
ss
in
dec
orl
fcom
push
mov
jmp
push
mov
push
cmp
fwait
test
inc
jae
xchg
ss
cmp
dec
push
inc
push
fcoml
iret
mov
pop
fwait
cwtl
push
andb
jae
fisubrs
xchg
lret
push
cmp
arpl
sarb
mov
aaa
xchg
push
cld
out
sbb
jae
andl
push
sar
inc
sbb
arpl
pusha
lret
sarb
rorb
mov
bnd
fidivl
fs
xchg
fwait
dec
in
cmp
jns
decl
push
aaa
ds
jo
jnp
nop
cmp
jne
clc
ds
in
cmp
jmp
mov
idivl
cmp
cmp
mov
xchg
push
inc
std
hlt
je
leave
aas
enter
negb
ret
mov
inc
pop
cmp
sbbl
and
and
lcall
cld
push
xchg
dec
inc
movb
ds
mov
dec
int3
jae
insl
pop
sbb
cmp
mov
cmc
out
mov
fs
and
mov
xchg
jb
mov
hlt
cmp
sahf
out
jle
mov
in
mov
jns
inc
das
pop
sti
inc
jle
xchg
fwait
mov
xchg
ss
mov
cmp
lahf
stc
jne
subl
rorb
shl
idivl
fistpl
cmc
bswap
adc
add
pop
test
or
xchg
inc
or
shlb
gs
repnz
call
xchg
xchg
cmp
imul
add
sub
mov
mov
jg
xchg
inc
jle
xor
push
ss
mov
bound
js
arpl
js
aas
add
addb
hlt
jns
mov
inc
mov
cmp
jnp
push
push
pop
inc
imul
dec
nop
pusha
inc
imul
iret
pop
sarb
divb
pop
orb
sub
pop
ds
add
sbb
negl
jg
repz
movsb
mov
cmp
fldenv
iret
sbb
xchg
bound
shll
xchg
ss
pop
iret
mov
inc
popf
xor
addl
leave
aaa
mov
sarb
lea
popf
jle
std
xchg
xchg
dec
xor
pop
mov
dec
sbb
push
cmp
xor
sbb
jo
cmc
mov
lds
cmc
inc
sahf
add
xor
adc
ss
mov
mov
pop
jns
int
mov
lahf
mov
insl
shlb
push
xchg
jnp
fs
cli
mov
in
xchg
cmpsb
stos
cmp
jno
fs
push
cmp
out
sbb
imul
imul
into
mov
mov
fidivs
cwtl
xchg
dec
jle
icebp
sub
sti
repnz
sbb
loop
cmpsl
pop
jbe
rclb
ret
push
pop
mov
mov
mov
js
jns
cmc
cmp
cmp
jne
cmc
xchg
mov
cli
sbb
cmp
addr16
shr
sub
hlt
cmc
dec
inc
jnp
into
inc
jg
mov
push
loop
and
arpl
sbb
mov
scas
call
ror
test
mov
cmpsl
out
lcall
icebp
cmp
mov
jo
push
push
stc
shl
cmpsl
dec
fs
adc
out
lahf
xor
push
add
jne
clc
jbe
ja
cmp
outsb
mov
and
mov
mov
mov
mov
adcl
popa
rcrb
dec
imul
jbe
jae
mov
adc
sbb
ds
dec
shl
lahf
jp
mov
lahf
mov
inc
daa
xchg
xchg
mov
push
jecxz
lock
je
add
xchg
xor
test
movsb
mov
xlat
mov
ljmp
or
jae
and
adc
mov
lods
aas
mov
mov
dec
sbb
add
ds
popa
mov
add
inc
xor
xor
mov
jmp
mov
repnz
dec
lret
adc
xchg
push
popf
xor
cmpsl
mov
mov
leave
fwait
sti
mov
clc
out
in
jg
mov
addr16
rclb
jns
inc
rorl
xchg
mov
add
push
movsb
cmc
leave
imul
movd
mov
cmpb
movsb
cmp
cmpb
clc
or
inc
push
mov
dec
push
insb
iret
gs
int
lret
je
lock
rcll
rorb
xor
xor
inc
popf
xor
lods
cmpl
xor
sub
clc
int3
aam
jo
out
cmp
stos
mov
mov
add
xchg
jg
fwait
mov
add
dec
inc
call
rcrl
repnz
mov
nop
cmp
mov
mov
sub
cmp
ret
mov
mov
cmpsb
push
stos
stos
jne
neg
cmp
lahf
pop
mov
jp
mov
push
cmp
popa
mov
jecxz
cltd
xchg
in
repnz
fcoms
xchg
push
push
pop
leave
mov
sbb
int
fnstsw
loope
enter
das
lds
dec
fs
push
std
inc
add
dec
pop
fwait
inc
arpl
mov
aas
je
aaa
adc
adcb
fidivs
mov
bound
repnz
cmp
mov
jne
fdivs
les
mov
jecxz
dec
sti
sub
pop
jecxz
aaa
stc
ret
enter
or
cmp
es
xor
dec
jne
sarb
adc
mov
add
jecxz
xorb
cltd
mov
inc
mov
mov
xchg
shlb
mov
jns
fists
arpl
mov
imul
mov
pop
sbb
mov
xor
inc
xor
jp
cmpb
push
pop
xor
jae
sub
inc
sbb
jae
movb
jge
ljmp
jge
push
cmc
ret
mov
repz
movsl
pop
daa
xor
fnstcw
insl
loopne
cmp
mov
fldcw
enter
ror
call
inc
mov
rcl
andl
clc
rclb
pop
pop
cmp
nop
xchg
push
fidivl
cmc
lcall
sarb
repnz
bound
gs
leave
into
xor
mov
mov
or
or
mov
ror
and
lods
inc
inc
push
and
ret
clc
lret
xor
mov
dec
hlt
js
ljmp
lods
lds
rcrb
lock
aas
lods
mov
xchg
rol
mov
mov
scas
jle
imul
sub
gs
sub
decb
call
pusha
push
mov
imul
sarl
sub
mov
cwtl
add
push
rcrl
out
jl
rcrb
dec
inc
mov
add
inc
cmp
mov
jmp
xchg
push
xor
mov
int
sub
aas
pop
test
pop
lcall
enter
daa
pop
lahf
sbb
jne
lea
mov
clc
jle
cmp
mov
push
push
inc
xlat
mov
shll
cmp
pop
xor
jmp
push
cmc
xor
dec
fcmove
or
or
mov
out
fisubl
mov
nop
out
pop
rclb
lahf
pop
sbb
mov
xchg
cwtl
xorb
in
mov
inc
mov
add
mov
jmp
mov
xchg
sub
mov
arpl
dec
push
push
divl
aaa
mov
stc
sub
mov
add
enter
mov
mov
mov
aaa
jnp
test
pop
fdiv
mov
jns
pop
push
pop
xchg
adc
push
icebp
adc
xchg
es
sbb
and
cmp
mov
sahf
push
inc
addb
push
ja
push
or
sti
jbe
mov
stc
push
std
pop
xor
jns
arpl
push
cmp
mov
inc
cmp
cli
cmp
mov
mov
adc
push
ret
xor
jl
xchg
mov
pop
jo
mov
jne
mov
dec
xor
mov
cmp
xor
xchg
mov
arpl
add
repz
insl
rcrb
rcrb
mov
push
xlat
push
dec
hlt
mov
xor
mov
jne
xor
loop
or
jbe
sbb
xchg
test
inc
cmc
xchg
push
inc
ret
mov
or
test
insl
mov
dec
mov
jo
push
js
movsb
mov
and
push
xor
mov
pop
add
jle
stc
fdivrs
sbb
out
xchg
sbb
inc
cmp
sub
cltd
out
dec
pop
ss
pop
add
pop
mov
mov
cmp
xor
xor
mov
incb
cmp
push
popa
push
mov
sub
mov
mov
dec
push
jns
rorb
pop
mov
adc
push
cmpl
mov
jmp
mul
xchg
imul
test
cmc
sub
lds
mov
adc
mov
add
lods
enter
out
mov
cmp
dec
flds
sbb
cmp
pop
jb
xor
fnstenv
mov
aam
mov
xor
fnstenv
mov
pop
repnz
mov
xor
mov
ficoml
push
push
or
cli
outsb
add
gs
mov
add
pop
mov
xchg
dec
ror
fidivrl
adc
ret
into
xor
test
dec
xor
mov
cs
xchg
fmull
pop
pop
inc
or
xchg
loopne
das
aas
adc
test
push
pop
jecxz
push
cmpsb
sub
xor
push
mov
add
sarl
dec
jbe
xlat
movsb
stos
mov
jae
xchg
xchg
jne
cmpsl
lods
jl
push
adc
mov
sbb
movsb
pop
hlt
push
adcb
mov
mov
mov
ficompl
jbe
inc
add
adc
jl
aad
popf
lods
aad
fdivs
divl
shll
or
imul
sarb
pop
xor
mov
adc
xlat
out
mov
mov
mov
cli
adc
inc
aam
xchg
imul
and
cmpb
sbb
scas
or
jae
adc
xchg
xchg
mov
xor
lea
cmpsb
sbb
mov
out
aaa
push
call
pop
inc
inc
jae
ja
xlat
xor
inc
add
fwait
adc
fs
not
aaa
cmc
mov
jae
mov
xor
je
or
mov
dec
and
jo
xor
add
fisttpll
repnz
mov
je
pop
push
mov
pusha
push
fs
mov
inc
mov
cmp
cmpsb
mov
jp
xchg
aaa
sbb
sar
ret
add
cmpsl
lea
xor
int3
mov
jns
mov
insl
insb
inc
cmp
push
xchg
into
cmc
in
add
aad
mov
add
xlat
inc
outsl
rcll
js
inc
gs
imul
xor
icebp
bound
add
and
mov
inc
mov
xchg
jb
mov
data16
lea
ja
xchg
jae
ret
lcall
adc
push
push
mov
push
aam
insl
movsb
cmpsl
cmp
enter
iret
les
dec
outsb
xor
mov
iret
iret
addb
xchg
fcomps
xor
xorb
jnp
shl
mov
mov
fwait
lret
insb
pop
push
sarb
push
sub
outsb
js
jbe
mov
push
mov
insb
into
mov
xchg
xchg
mov
dec
arpl
xor
outsl
xor
in
shl
fwait
mov
imul
dec
and
sbb
loopne
aaa
xor
pop
mov
mov
out
jno
add
hlt
adc
out
sub
pusha
loope
mov
jns
jge
loope
cmp
adc
xor
inc
mov
dec
and
lcall
ds
add
repnz
hlt
jmp
push
sub
sti
or
xchg
scas
daa
icebp
jg
sbbl
pop
ret
ret
mov
repz
mov
ljmp
inc
loope
inc
sbb
js
push
adc
mov
cli
xchg
push
push
fcmovbe
xor
cmp
imul
aas
jbe
cli
lret
xchg
lea
in
lret
lds
mov
daa
jg
adc
jb
mov
cmp
into
call
es
shl
fstl
jge
sahf
mov
pop
xor
cmp
nop
xor
sbb
jb
iret
xor
lcall
sub
xorl
cmp
push
mov
ret
mov
lret
je
mov
loop
sbb
das
pop
cmp
sub
mov
and
dec
mov
or
jne
js
lcall
daa
mov
ss
adc
mov
std
sti
repz
xor
icebp
pop
std
jbe
cmp
jbe
sbb
jbe
cltd
std
adc
inc
enter
enter
mov
stos
shlb
mov
cmp
xchg
out
add
cltd
inc
aas
outsl
add
mov
lret
popa
or
mov
je
inc
pop
push
into
push
test
pop
imul
sbb
mov
in
hlt
aaa
jp
jnp
xor
mov
push
ret
mov
xor
jbe
stos
arpl
add
int
push
jle
xchg
jp
lret
cmpsl
icebp
fstl
test
mov
into
loop
ret
mov
push
test
sbb
lods
ret
cmpsl
mov
je
jb
cmp
lret
mov
mov
lret
jbe
sbb
ror
and
xchg
mov
dec
xchg
stc
sarl
mov
pop
arpl
mov
aad
mov
jg
jbe
add
aam
arpl
sar
sbb
test
fdivp
into
imul
mov
mov
mov
std
loopne
pop
aam
rclb
aad
inc
cmpsb
ret
pop
pop
jne
bnd
out
ja
xchg
jecxz,pt
push
mov
cmp
adc
cmp
std
mov
sti
enter
mov
sbb
pop
cmp
mov
add
pop
jne
inc
push
out
and
adc
mov
xchg
and
add
cmp
cmp
int
pop
dec
sti
fbstp
adc
mov
fs
or
fwait
mov
cmp
int3
jae
sbb
hlt
mov
out
in
ljmp
lea
mov
test
pop
outsb
add
addb
in
push
sbb
xor
mov
mov
mov
cmp
ds
aaa
jg
lds
cmpsl
xlat
iret
ja
test
pop
sub
fwait
jo
fisttpl
jl
rcr
inc
sti
decb
mov
lahf
nop
mov
sub
idivb
imulb
pop
cmp
or
out
pop
cmp
mov
sbb
push
mov
inc
ljmp
ficoml
jmp
fiadds
mov
dec
cli
xchg
loopne
jnp
enter
or
xchg
mov
dec
xor
xchg
sbb
inc
dec
pop
xlat
aas
mov
lret
add
mov
test
aaa
ss
andl
pop
cmp
bnd
je
adc
stc
mov
mov
and
insb
xlat
decl
xor
pop
sarl
lret
xchg
das
inc
mov
mov
jne
or
ss
inc
adc
es
je
ret
xor
ja
mov
mov
xor
cmp
xchg
cmp
dec
fwait
rorl
push
cltd
add
aaa
in
outsl
arpl
xchg
adc
adc
cmp
jns
push
lea
into
adc
xchg
pop
nop
push
idiv
jl
cmp
cltd
mov
fidivrl
inc
add
mov
shr
sub
jp
leave
sub
ret
pop
mov
fidivrl
dec
iret
and
mov
mov
in
ret
mov
push
js
fdivrs
mov
xor
cmp
mov
testb
es
cli
push
jmp
mov
fldcw
pushf
cmp
mov
sahf
shrb
je
jg
cmp
jo
sub
pop
int
stc
mov
js
cmp
mov
cmp
gs
dec
or
sub
movsb
xchg
cmc
test
into
fstps
lahf
cmp
mov
mov
scas
in
outsl
xchg
fdivl
aas
cmp
pop
fcmovb
pop
and
cs
or
shrb
inc
mov
imull
aas
leave
sub
mov
mov
lahf
jbe
mov
add
mov
add
fwait
movsl
xor
cmc
xchg
fwait
imul
data16
jb
xor
outsl
mov
mov
dec
mov
push
rol
sbb
icebp
jg
sbb
xor
xchg
xchg
and
insl
sti
sub
xor
into
mov
aad
fmulp
jecxz
cmp
mull
jb
repz
mov
jne
dec
jecxz
arpl
ret
scas
test
and
stos
test
sub
ret
xchg
sti
repnz
ja
push
add
out
xor
adc
ja
aas
pop
mov
mov
sub
sbb
ret
shll
ds
std
mov
roll
cmp
gs
iret
iret
mov
push
sahf
inc
movb
cmp
mov
inc
andl
add
mov
mov
mov
jp
les
hlt
insb
push
repnz
movl
lods
xchg
mov
into
cmp
aas
add
mov
push
rol
add
mov
xchg
into
scas
mov
sar
mov
xor
push
sti
xchg
cmpl
xor
imul
or
es
mov
gs
jae
ljmp
xchg
lock
push
push
xor
dec
or
xor
mov
pop
aam
aas
sbb
aas
cmpl
add
ss
jge
dec
xor
je
sbb
fs
mov
xchg
insb
jbe
ds
mov
popa
mov
jmp
lods
xchg
fidivl
popa
shlb
dec
lea
lret
push
int3
leave
cmp
cmpsb
enter
sti
lea
cs
pop
jae
ja
adc
icebp
inc
cmpsl
push
xchg
pop
xchg
push
pop
add
out
out
jle
ret
xchg
inc
mov
in
dec
dec
mov
xchg
jp
jnp
ds
jns
test
pop
xchg
mov
mov
cmp
and
shlb
push
aaa
cmc
pop
add
dec
jnp
and
lea
mov
sbb
fstl
inc
xchg
ret
xchg
mov
mov
cmp
sar
testb
cs
hlt
insb
mov
or
jbe
cmc
jo
out
mov
push
data16
mov
jae
mov
dec
out
arpl
aad
mov
and
mov
int
pop
adc
xor
popf
popa
xchg
pop
xor
movsb
clc
cmp
cmp
mov
xlat
into
sbbb
xchg
cmpsb
dec
hlt
lahf
cld
arpl
clc
inc
cmp
push
push
mov
lret
aaa
mov
mov
mov
es
daa
jo
mov
jae
cmpsl
popa
mov
mov
mov
mov
cmp
clc
loop
testb
cmpsl
push
xor
cli
rclb
cmp
mov
rolb
cmp
aam
and
mov
hlt
mov
or
add
std
popf
aas
mov
lret
inc
jb
pushf
int
xlat
push
add
inc
and
lods
push
inc
push
out
test
lret
push
push
sub
or
mov
push
ss
sarb
mov
je
outsl
stos
and
ljmp
xchg
std
es
push
cmp
jb
cmp
mov
fwait
lcall
or
or
imull
cmpb
lds
cmp
aas
lea
dec
push
rol
sbb
or
push
pusha
icebp
hlt
dec
adcb
xor
mov
adc
jae
pop
inc
aas
sbb
xchg
jb
cwtl
call
jnp
ffreep
in
lret
lcall
mov
outsb
cmp
out
mov
mov
mov
add
sbb
cmp
cmpsb
aaa
add
jmp
inc
cmc
outsb
jmp
inc
sbb
insl
test
or
sar
xor
out
inc
ret
pop
or
mov
aaa
adc
adc
stos
mov
xchg
cltd
ret
iret
ror
int
fsub
or
insl
xchg
adc
mov
pop
and
mov
je
xchg
roll
out
jae
arpl
jp
inc
mov
lods
enter
rol
mov
or
mov
jl
mov
mov
mov
inc
mov
stc
xchg
mov
push
nop
pop
sti
adc
loope
rcrl
stos
or
xor
cld
mov
cli
cmp
push
mov
jbe
fnstcw
push
int
ficompl
pushf
mov
cmp
les
repz
sub
ljmp
or
lret
xchg
jno
add
lret
shll
pop
loope
mov
push
cmp
cmp
fs
jle
or
jns
or
xchg
jg
js
mov
mov
cs
hlt
xor
ss
xchg
mov
in
inc
cmp
nop
fildl
fs
xlat
cld
int
pushf
inc
pop
push
inc
test
fiadds
mov
movsb
sbb
cmp
mov
inc
mov
insl
mov
lods
xchg
mov
hlt
fmull
fwait
jmp
aaa
dec
adc
sub
cld
mov
lret
adc
mov
inc
dec
push
push
adc
xchg
rorb
mov
jge
daa
jbe
inc
gs
fstpt
sti
add
and
inc
mov
push
sti
arpl
add
mov
mov
hlt
outsb
mov
push
mov
push
cmp
fmuls
push
cmc
sarb
dec
cli
sarl
add
lcall
sub
pop
fstpt
push
cmp
lret
nop
mov
push
xor
pop
sbb
pop
jecxz
xor
popa
xchg
push
mov
lds
xchg
jbe
sbb
cmp
jecxz
jns
movl
mov
push
lock
xor
idivb
mov
xchg
rcrb
pushf
mov
inc
push
call
mov
inc
lock
xor
fwait
pop
mov
cld
ret
mov
adc
mov
add
mov
orl
shrb
mov
mov
mov
shlb
jl
mov
imul
inc
jbe
xchg
fldt
sub
sub
cmpsl
cmc
pop
jecxz
xor
jnp
hlt
es
mov
sbb
mov
mov
xchg
and
js
aas
jne
aam
cmp
push
lret
push
push
xchg
es
xchg
mov
adc
call
jg
mov
mov
in
leave
push
cmp
xchg
mov
mov
mov
aas
jmp
sub
std
push
inc
les
xlat
test
inc
adc
cli
pop
call
jecxz
out
pop
adc
int
mov
cmpsl
mov
pop
adc
repz
mov
bound
subb
fists
cmc
add
xlat
adc
xchg
or
jle
jle
mov
addr16
dec
adc
mov
mov
scas
ficomps
sti
mov
aaa
out
add
imul
pop
cmp
pop
pop
mov
sti
stc
mov
cmp
stos
pop
mov
gs
cmc
add
mov
cmp
lds
xlat
pusha
xor
mov
hlt
ss
cmp
jo
push
call
push
and
adc
das
inc
push
rorb
xchg
jp
inc
ss
sub
das
mov
push
mov
repz
call
pop
stos
lds
sbb
cltd
or
leave
add
std
jbe
add
mov
or
filds
notl
push
std
insl
ficoml
mov
rcl
mov
push
ss
xor
inc
in
pop
aaa
jo
mov
sub
into
push
imull
daa
imul
push
pusha
and
adc
subl
pop
lcall
insl
mov
lret
add
sub
dec
lock
fisttpll
inc
fistps
lahf
mov
mov
jne
fnstsw
xorl
jnp
in
mov
lea
loopne
rcrl
xor
cltd
enter
mov
adc
inc
int3
sbb
mov
push
dec
mov
or
mov
mov
mov
arpl
mov
bound
fstl
xchg
inc
shll
push
mov
push
emms
mov
mov
enter
mov
int
lea
ljmp
daa
in
testl
ret
out
jp
xor
jb
cmp
jo
jb
mov
stc
shll
repnz
pop
adc
xor
push
jl
xor
mov
stc
ss
cmp
mov
xchg
inc
xchg
fcoml
bound
jb
adc
sbb
cmp
std
and
je
mov
fimuls
fstps
fdivp
cltd
ss
mov
push
mov
xchg
clc
push
into
and
arpl
xchg
out
push
je
test
inc
push
push
adc
mov
aam
lret
js
ret
pop
cli
arpl
test
jb
cli
push
call
push
xchg
inc
rcl
loope
rcll
jle
mov
mov
jbe
mov
cmc
jl
jbe
adc
aaa
adc
orb
rcll
fidivl
sbb
mov
fcompl
push
mov
mov
mov
dec
mov
sub
hlt
lea
xchg
cmp
push
xor
sarl
xor
stos
mov
mov
mov
pop
mov
fsubrl
jbe
add
daa
jmp
repz
outsl
clc
mov
mov
push
cmp
lds
sbb
and
ror
ljmp
aas
aas
sub
cmp
in
les
jp
pusha
inc
mov
and
push
ret
jbe
mov
fisttps
clc
jp
ss
cli
push
dec
mov
incl
adcl
push
inc
jb
clc
jp
ss
call
xor
lods
lret
jbe
mov
mov
pop
jecxz
andl
hlt
mov
jecxz
roll
leave
mov
xchg
int
jmp
ljmp
enter
mov
jno
dec
shlb
les
fwait
insl
dec
xchg
lahf
fnop
iret
xchg
fwait
sub
mov
mov
jo
rclb
push
out
cmp
ss
aam
mov
hlt
jb
cmp
push
setno
ja
adc
je
adc
mov
repnz
cmp
hlt
jp
jnp
sbb
mov
sahf
arpl
mov
or
xor
ffreep
aas
inc
xchg
rorb
dec
add
inc
jge
mov
mov
mov
inc
xchg
dec
mov
and
inc
inc
and
adc
push
inc
mov
mov
inc
je
repnz
je
sbb
int
data16
mov
mov
push
cmc
and
fsub
mov
xorl
mov
xor
dec
dec
test
lock
cmp
cmp
jnp
fistpl
xor
push
repnz
in
mov
sbb
frstor
test
inc
jle
cwtl
xor
and
je
aas
jle
jp
push
faddl
or
scas
mov
repnz
adc
push
pop
stc
dec
sub
mov
jbe
mov
jle
aad
lock
sbb
jb
arpl
add
push
mov
lea
fdivs
xchg
stc
ss
xor
stc
sbb
xor
bound
push
in
add
inc
and
inc
dec
mov
shrl
stc
in
cmp
mov
dec
les
out
ss
scas
push
notl
cld
dec
mul
mov
fistpll
add
xor
xchg
insl
pop
mov
ret
mov
add
mov
ss
pop
jns
dec
int3
adc
repz
fists
jbe
xchg
dec
fnstcw
repnz
leave
dec
inc
mov
jmp
fdivs
jp
or
popf
cmc
push
cmp
sub
xor
mov
xor
or
push
mov
adc
out
dec
sub
ja
or
rcrl
jbe
cli
lret
xchg
lea
shlb
jle
push
and
insb
push
aam
jbe
push
insl
push
mov
xchg
cli
push
mov
mov
or
mov
in
dec
jmp
cltd
scas
dec
mov
fs
int
pop
dec
sar
xchg
adc
lods
or
lret
dec
dec
mov
inc
xor
inc
jle
roll
jp
xchg
mov
inc
or
add
xchg
push
iret
jae
fcomps
xchg
dec
jno
mov
loop
sbb
aam
cmp
mov
out
cmp
xlat
mov
repz
xchg
int
cltd
daa
mov
shlb
test
sbb
lahf
inc
call
stc
cmp
mov
bndstx
jo
mov
jns
repnz
loopne
fdiv
mov
stos
aam
mov
fcoms
xchg
int
mov
mov
push
fnsave
iret
imul
push
push
cmpsl
jmp
adc
adc
movsb
jb
jae
mov
xchg
out
pop
movsl
das
push
mov
cmp
xchg
mov
mov
sub
leave
push
xchg
xor
inc
loopne
dec
rorl
jns
dec
sbb
xor
push
mull
hlt
push
mov
mov
cmp
mov
out
mov
push
lret
fxch
jl
stc
leave
rcrb
jmp
shlb
xor
cmp
dec
adc
sub
mov
adc
shl
sbb
cwtl
adc
pushf
cmp
and
inc
dec
rcll
mov
xor
xchg
iret
xor
lea
int3
insb
dec
mov
fwait
out
shl
push
mov
enter
movsb
iret
or
xchg
pop
jge
add
scas
cs
insb
sbb
cmp
xchg
cld
lea
pusha
arpl
cmp
repz
dec
aaa
das
push
mov
pop
stc
aaa
mov
lods
and
mov
jmp
out
rol
fwait
shrb
mov
add
lret
sbb
inc
xor
lds
mov
push
xlat
xor
cltd
push
lret
ret
dec
ss
insb
enter
and
and
inc
mov
push
adc
adc
pop
mov
into
jnp
xorl
vucomiss
iret
nop
mov
pop
sbb
sub
imul
test
jne
cmp
pop
inc
lahf
std
add
mov
push
test
xor
fbstp
ja
ss
xchg
jb
mov
xlat
movsb
es
add
xor
cmp
cmp
stc
rcl
daa
cltd
push
cmp
jl
jnp
sbb
enter
popf
into
cmpsb
cmp
mov
js
xchg
mov
mov
mov
int
aas
cmc
xchg
in
or
inc
sbb
aaa
jns
iret
push
pop
mov
cmp
sarl
push
test
inc
inc
push
inc
outsb
jne
or
push
and
loopne
or
lret
mov
pop
xor
jmp
inc
jns
sub
mov
pusha
dec
mov
fwait
enter
pop
push
jns
sub
bound
cmc
pop
mov
mov
loop
aas
push
mov
and
xor
push
cli
mov
jp
fldenv
enter
and
out
cmp
bnd
movsb
enter
push
and
pop
inc
push
rcr
ds
jmp
test
nop
shl
push
ja
adc
xchg
mov
in
into
imul
arpl
lahf
loope
dec
lret
roll
imull
inc
mov
pop
pusha
xchg
insb
jbe
shlb
xorb
ficoml
inc
hlt
mov
push
cmpsb
out
dec
test
daa
xchg
push
mov
adc
sahf
jae
popf
lods
int3
jp
sahf
jp
loop
push
dec
pop
arpl
xchg
stos
out
push
mov
out
aas
js
and
leave
daa
jmp
int
pop
addr16
cmp
add
jnp
inc
faddl
loope
imul
sbb
inc
sbbl
dec
mov
cltd
outsl
sbb
cwtl
jp
pop
pop
aaa
jo
jns
ss
cmc
pcmpgtw
repnz
cltd
mov
jae
mov
ss
sbb
mov
push
dec
sub
ret
cmp
cmp
dec
test
add
inc
pop
loop
pop
xchg
push
jbe
in
loop
sbb
pushf
xchg
xchg
add
cli
xor
push
cli
pushf
sbb
xor
mov
jmp
loopne
mov
out
dec
sub
sub
or
xor
mov
mov
dec
push
mov
leave
mov
mov
iret
mov
idivb
xor
pop
mov
mov
je
gs
mov
je
gs
je
gs
je
mov
shl
lcall
mov
stc
pop
cmpsl
mov
and
das
inc
sbb
inc
sub
mov
cmp
int3
mov
iret
ret
adc
mov
leave
je
test
mov
cmp
mov
les
xor
xor
or
mov
mov
sarb
pop
loop
pushf
sahf
adc
inc
pusha
fnstcw
mov
mov
mov
sbb
xor
mov
cltd
fistpl
mov
fidivrl
iret
mov
pop
fucomip
cmp
mov
inc
lods
bound
pushl
popa
dec
dec
arpl
mov
or
mov
mov
xchg
loop
inc
mov
jecxz
mov
push
test
adc
adc
mov
xor
jcxz
pop
sub
add
lea
cs
rcll
adc
out
add
pop
lret
iret
stc
mov
jns
sub
cmp
fcmovu
fs
dec
xchg
aas
gs
or
pop
push
mov
out
add
popf
cmpsb
mov
fdivrl
mov
mov
cmp
push
cmp
cmp
inc
mov
xor
ljmp
push
xor
ret
ja
es
and
jne
mov
outsb
rcll
repz
sbb
jbe
test
ss
int
or
lods
pop
test
shll
jp
fs
xchg
out
sbb
insl
fmuls
mov
cmp
inc
popa
mov
mov
mov
cmp
int3
and
aaa
addr16
jl
sub
sbbb
sub
scas
dec
fs
push
insb
sbb
and
adc
js
mov
mov
inc
inc
add
lcall
cmp
out
dec
push
int3
xor
cld
push
mov
out
hlt
fwait
sub
popf
rcrb
mov
xchg
mov
mov
mov
xorl
pop
xor
add
fwait
or
mov
push
in
xchg
lret
neg
cmp
pop
jnp
cmc
jnp
outsb
inc
adc
icebp
pop
sbb
fdivs
and
and
cmp
push
mov
lods
rcrl
test
jl
ror
jmp
in
dec
inc
adc
iret
xor
mov
add
cmp
sbb
cmp
or
ss
jno
dec
aas
dec
sbb
inc
xchg
in
cmp
aas
rolb
pop
arpl
inc
movsb
mov
sahf
inc
cmp
ss
cmp
lods
hlt
mov
push
addr16
push
cmc
les
lret
xor
dec
inc
add
loop
jle
pop
jp
leave
push
sbb
cmp
jle
inc
in
daa
xchg
fs
jnp
jne
pop
scas
repnz
and
cwtl
inc
jne
pusha
fwait
shlb
in
sub
rcll
dec
cld
ds
sub
incb
mul
and
rol
ljmp
jne
ds
shll
out
popa
nop
sbb
sahf
mov
xchg
mov
call
mov
repz
sub
and
push
xor
pop
cmp
ja
ljmp
sbb
andnps
sbb
jnp
xchg
andnps
inc
sbb
or
push
lret
popl
dec
je
sub
push
and
jae
out
lahf
sbb
ret
aaa
mov
pop
into
out
adc
lods
sahf
rorb
add
out
daa
into
jle
stc
sar
ja
inc
jle
xchg
mov
add
fs
repnz
std
int
shrl
jo
dec
mov
inc
push
or
xor
jbe
cmp
dec
cmp
scas
push
ds
inc
das
int3
aam
fstpt
mov
mov
out
icebp
sti
fs
mov
push
jp
pop
call
xor
mov
mov
push
leave
mov
xchg
push
cmp
dec
imul
mov
nop
pop
cmc
and
dec
mov
test
mov
loopne
lock
cmp
adc
mov
mov
or
mov
sub
repz
mov
xchg
xchg
cmp
and
cmpsb
jnp
cwtl
and
jbe
adc
mov
pop
add
jge
inc
xor
je
pop
je
xor
fs
push
mov
imul
das
mov
enter
rcrb
pop
shlb
outsb
jp
push
lcall
ljmp
pop
iret
add
jne
gs
xchg
call
imul
repz
insl
cmc
in
xchg
and
test
aaa
pop
or
lahf
xor
dec
sbb
adc
ljmp
pop
dec
data16
rcll
xchg
cmc
or
jp
fs
mov
adc
jp
xor
mov
fstl
cmp
cmp
push
inc
call
aam
rolb
imul
aad
push
mov
and
sar
or
add
iret
push
add
pop
fdivl
movsb
pop
adcl
xchg
sarb
push
bnd
add
xor
mov
push
add
jg
xchg
pop
inc
add
push
insb
cmp
lret
imul
pop
mov
or
mov
xor
dec
xor
xchg
stos
add
shl
inc
inc
mov
push
dec
orl
movsb
cmpsb
rcll
ja
jbe
cmp
and
mov
push
call
test
rorl
fwait
pop
sbb
xchg
pop
inc
jp
pop
push
incb
xor
inc
stos
xor
lds
cs
xor
lods
mov
mov
xchg
mov
dec
mov
cmp
into
mov
es
jle
mov
imul
fs
jne
ror
xlat
jbe
adc
mov
sti
mov
dec
cmp
cmp
xor
psllq
xor
data16
mov
js
notb
je
push
adc
lahf
inc
dec
push
xchg
adc
mov
cmp
ffree
scas
mov
push
inc
leave
cmp
pop
int
lea
mov
inc
mov
inc
dec
lret
xchg
nop
pop
mov
mov
fwait
int
ret
xchg
xor
and
ret
mov
cmp
and
dec
xor
lods
add
mov
cli
cmp
inc
fisubs
add
xor
js
fcmovnbe
shlb
push
or
mov
mov
out
test
nop
sub
aaa
mov
pop
outsl
xchg
jmp
jmp
scas
lahf
jge
dec
fistpll
xor
pusha
sbb
lods
imul
iret
scas
call
mov
fs
leave
push
xchg
arpl
scas
or
cmp
push
stos
or
inc
shlb
sub
aaa
inc
cld
mov
pop
jnp
fldcw
arpl
push
loopne
enter
add
mov
dec
push
jnp
aam
js
pop
mov
fwait
inc
sub
inc
pop
sub
test
xchg
mov
adc
scas
ds
scas
fisubl
add
mov
mov
movsb
push
pop
push
push
lahf
jp
sub
mov
mov
sub
std
jbe
aas
ret
jne
adc
fsubrl
dec
leave
lret
cmp
push
pusha
rcrl
dec
out
test
test
mov
mov
xor
fidivs
mov
in
fadd
fidivl
pop
cmpb
and
sbb
sub
cmp
and
xchg
stc
pop
cmp
cmovnp
test
lret
and
ror
mov
icebp
cmp
xchg
lcall
mov
push
xchg
ficompl
fimull
pop
jnp
and
daa
cmp
add
cmp
mov
dec
cmp
mov
test
aaa
out
test
jnp
aaa
add
push
int3
mov
ficomps
test
ss
movsb
cmpsl
aaa
xchg
cmpsl
mov
add
pop
mov
cmc
jno
into
pusha
inc
and
in
das
xor
stos
mov
sarb
mov
sarb
xchg
dec
outsb
push
lahf
clc
inc
and
jne
sbb
hlt
pop
xchg
sti
cs
add
sbb
cli
push
out
mov
push
lahf
inc
sti
mov
dec
or
sti
xchg
mov
mov
rclb
xchg
mov
mov
ret
dec
jmp
mov
cli
xchg
cmp
into
or
dec
bnd
fucom
pushf
xchg
jae
cmp
xor
pop
push
pusha
mov
roll
and
pop
cmp
xchg
adc
in
scas
clc
pop
mull
inc
test
pop
lret
xlat
adc
mov
inc
mov
adc
pushf
repz
mov
scas
fnstcw
jnp
pop
and
rcll
xchg
jge
mov
jmp
fwait
js
and
inc
jb
aam
or
adc
les
pop
cwtl
shlb
or
inc
pop
fst
int
dec
jl
cmpsb
sti
iret
or
mov
in
sbb
mov
notb
push
pop
ret
mov
daa
jmp
ljmp
push
mov
outsb
or
fpatan
push
inc
xchg
sbb
lret
lea
cmpsb
push
mov
inc
in
roll
lret
into
test
sub
mov
ficompl
lods
sub
mov
dec
cmc
out
rcrb
and
aas
daa
mov
pop
pop
scas
ljmp
jae
xchg
fwait
adc
jno
push
cmp
sbb
lret
es
arpl
ja
cmc
inc
xchg
enter
push
pop
dec
or
rcl
popl
andl
and
sbb
jbe
sbb
loop
cmp
xchg
add
dec
sahf
cmp
jo
push
data16
sbb
xchg
arpl
ret
nop
je
cmp
push
push
jae
loopne
int
xchg
and
xor
ret
stos
cmp
adc
les
das
jle
ljmp
test
pushl
jbe
rcll
sub
fidivrl
cmp
and
inc
test
push
lret
test
ljmp
cld
mov
shrb
add
cmp
or
mov
cli
addr16
or
das
fimull
cmp
mov
sarl
cld
enter
mov
adc
ret
jno
sahf
aaa
cmp
fidivrl
out
test
mov
in
arpl
mov
idiv
mul
mov
ret
jnp
inc
add
call
add
xchg
cli
sbb
sub
pop
mov
out
jns
out
popf
and
imul
push
popa
addl
std
cmp
loope
dec
xor
in
inc
test
inc
pop
xchg
call
pop
sbb
sti
jne
xchg
mov
outsl
jmp
xchg
rcrb
cmp
jbe
rcrb
or
mov
dec
stc
inc
cli
cmp
into
dec
jnp
pop
mov
std
ficoml
jl
add
jnp
jmp
ss
iret
sbb
jnp
push
cmp
dec
sti
pop
pop
lea
mov
pusha
repnz
mov
aam
fs
pop
sarb
add
popa
pushf
fidivs
cmc
lret
jp
adc
add
sub
call
addr16
cld
pop
mov
mov
jno
mov
aad
jp
push
xor
cmp
sbbb
push
sbb
test
repz
dec
mov
bnd
xor
scas
add
loop,pt
mov
push
jbe
mov
mov
clc
xchg
nop
dec
in
hlt
xlat
dec
cltd
nop
xor
xchg
or
sarb
adc
iret
pop
repz
mov
cld
cmp
fcomip
mov
mov
or
cmpsl
pushf
ret
sub
jne
cmpsb
jns
not
dec
adc
or
lret
sti
into
and
mov
in
mov
or
mov
imul
fwait
add
mov
pop
std
leave
imul
je
and
dec
stc
inc
ss
enter
mov
push
jecxz
cli
sbb
and
fiadds
xor
mov
cmc
pop
mov
jp
push
hlt
mov
stos
and
xchg
xor
sbb
mov
inc
jbe
das
cld
ret
push
jp
idivl
jae
pushf
xor
lods
les
inc
andb
inc
mov
into
das
nop
adc
enter
cld
add
aad
adc
jl
mov
dec
cmpsl
stos
aas
jns,pt
adcl
aaa
movsl
testb
roll
arpl
pushf
mov
xchg
int3
enter
jnp
inc
ds
jo
jae
xchg
mov
fistl
loop
xchg
movsl
mov
int3
mov
push
mov
mov
cmp
iret
aas
sub
es
jg
mov
arpl
je
push
icebp
test
mov
jg
lahf
rclb
in
jae
xchg
nop
push
xchg
mov
add
leave
and
fidivs
scas
and
fdecstp
sti
fcomps
jo
mov
inc
cli
mov
jno
jle
jge
cli
sbb
jnp
addb
push
out
add
and
das
cmpsb
sbb
xchg
stc
sbb
push
mov
sbb
mov
xorl
adc
mov
sub
xlat
pop
xchg
push
or
lret
xor
aaa
jge
lcall
imul
mov
xchg
stos
cmp
mov
cmc
push
pop
js
cld
mov
cld
hlt
lcall
xchg
or
and
outsb
cmpsb
imul
scas
or
sbb
xor
cmp
mov
out
mov
or
xchg
sbb
movsb
mov
and
in
imul
push
and
lret
fidivrs
dec
and
lret
and
cmp
adc
xor
int
fdivp
mov
cmp
push
add
xor
jae
jae
xor
mov
xchg
adc
push
inc
and
lock
or
and
hlt
dec
push
mov
cmp
and
inc
jne
je
bound
repnz
lcall
jo
sbb
lahf
lahf
testl
imul
cmc
bound
sar
cmpsb
repz
adc
aas
adc
xchg
lret
in
adc
adc
inc
jnp
imul
jge
dec
mov
mov
push
mov
jl
sbb
pop
mov
into
rcll
lahf
lock
movsl
ss
ss
or
jl
data16
xor
xchg
movsb
mov
adc
repz
jne
pop
xor
enter
in
adc
mov
adc
insl
add
mov
mov
testl
push
inc
jb
fsubrl
aas
ss
pop
pop
cmp
fdivl
aam
lret
inc
hlt
sti
addr16
xchg
js
arpl
ds
sbb
jg
stc
js
dec
push
mov
ja
and
mov
mov
mov
dec
mov
test
and
push
ja
push
repz
rcrl
xchg
pop
pop
mov
cmpsl
jl
ror
mov
sub
dec
xor
add
sbb
adc
mov
sbb
mov
jae
push
mov
xchg
rcll
pop
in
jns
sbb
out
push
jle
iret
adc
push
ret
sub
jbe
mov
add
lahf
leave
sbb
imul
mov
aaa
mov
pop
iret
dec
aas
push
negl
cld
fidivrl
mov
test
fdiv
test
mov
adc
mov
mov
lods
push
sbb
cmp
cwtl
fcompl
mov
andb
xchg
in
loop
push
rcl
inc
pop
movb
cmp
and
cmp
add
cmp
mov
push
cmp
cmp
dec
mov
mov
movb
stos
test
shll
push
cmp
fildll
and
mov
jnp
es
cmp
cmp
mov
out
loope
into
mov
lods
in
cmc
cmp
mov
fwait
adc
inc
xor
faddl
popa
repz
xchg
jecxz
adc
adc
jo
pop
mov
pop
pushl
dec
out
sbb
stc
mov
cmp
pusha
js
mov
jl
aam
jns
xor
xchg
push
sbb
cld
out
lahf
inc
aas
add
adc
lahf
or
cs
cmp
adc
jbe
popa
aas
mov
dec
lret
or
test
or
enter
push
mov
xor
icebp
pusha
sbb
xor
push
xchg
shl
insb
lcall
sti
in
inc
out
lret
shlb
stos
es
mov
icebp
into
jae
cmp
or
push
and
adc
xor
inc
cmp
inc
pop
add
cmc
or
jno
jo
xor
ret
or
push
mov
or
sbb
push
xchg
insb
sub
inc
fwait
pop
dec
pop
repz
shl
loope
bound
push
gs
jle
mov
adc
insb
mov
jp
push
pop
xor
push
std
xor
and
je
xchg
mov
adc
push
mov
or
add
jnp
xchg
push
mov
mov
cmpsb
xchg
adc
movsl
sbb
xlat
jbe
ss
add
xor
stos
jo
mov
inc
push
movsb
pop
cmp
sbb
hlt
inc
popf
cmp
mov
clc
push
xchg
in
xor
clc
mov
xchg
push
sub
cmp
cltd
hlt
mov
adc
aam
inc
mov
mov
cmp
cmp
mov
add
mov
sub
adc
mov
fs
mov
int3
push
mov
xor
ret
incl
mov
xchg
or
sbb
inc
inc
push
inc
lds
jp
push
cmp
dec
push
mov
xor
jge
sub
lea
xchg
push
in
arpl
loopne
inc
in
inc
popf
jae
xlat
mov
cmc
jbe
hlt
out
cld
sti
lahf
jb
pop
or
pop
cld
xchg
js
aad
pop
xchg
popf
popf
mov
inc
fwait
mov
adc
inc
or
inc
sbb
stc
cmp
negb
sbb
cmpsb
jp
mov
xchg
xor
out
insl
popa
xor
std
xor
cli
mov
cmp
adc
or
jo
push
ds
adc
outsl
push
mov
out
aad
xor
out
mov
mov
xor
repz
xor
jae
jg
loopne
pop
movsb
mov
mov
fwait
mov
ret
xchg
jno
out
cltd
pushf
xor
jmp
aas
xor
or
xlat
jae
dec
gs
sub
and
dec
pusha
rcl
adc
cmc
inc
mov
jnp
pop
test
in
fidivrl
jbe
pushf
mov
cmp
cli
xchg
cmp
xor
iret
aam
loop
mov
fwait
bnd
mov
in
rclb
sub
adc
cli
shrl
mov
cmp
out
jmp
in
outsb
sti
xor
fisttps
sbb
xchg
fsubrs
mov
ret
arpl
pop
mov
addr16
cmp
sbb
icebp
jne
pop
xor
xchg
xchg
mov
repnz
cltd
ret
adc
xor
mov
aam
outsl
add
xor
mov
aad
aas
div
fldt
dec
fchs
xchg
xchg
fs
shl
cmp
into
stc
xchg
sbb
cltd
int
cmc
xchg
aam
inc
mov
sbb
jne
cmp
enter
aas
mov
xchg
mov
movsl
dec
pop
inc
xchg
sbb
inc
pop
mov
jg
sbb
lret
and
push
jbe
mull
push
aaa
jb
push
jb
mov
sbb
xchg
xchg
dec
faddl
bound
jbe
sub
sub
mov
or
test
mov
or
ret
aam
and
sbb
mov
aas
test
mov
jl
cmp
jl
xchg
xchg
jmp
push
pop
cmc
les
repnz
cli
out
mov
adc
jl
inc
mov
scas
inc
and
xor
mov
jp
add
sbb
xchg
sbb
int3
lds
adc
xchg
xchg
mov
inc
dec
sbb
mov
xor
lock
jns
pop
xlat
lahf
fcompl
icebp
push
cmp
jmp
dec
ret
pop
xchg
sub
push
lods
ffreep
shlb
cmp
xchg
daa
inc
xor
push
std
xor
rcrb
dec
inc
mov
jl
repz
pop
inc
je
adc
shlb
je
xchg
bound
in
dec
data16
mov
dec
mov
into
xor
into
hlt
js
push
sub
inc
aad
stc
stos
nop
hlt
mov
shlb
add
mov
mov
push
xor
push
jl
shll
jns
xor
mov
mov
inc
mov
xor
add
lods
xchg
dec
cmp
fwait
jb
inc
call
stos
inc
jae
or
test
xchg
in
lcall
insl
add
pop
outsb
push
aaa
jl
mov
push
jp
inc
xchg
pop
mov
push
xlat
mov
xor
xchg
jp
arpl
lods
aam
push
lcall
cmc
lcall
adcl
lahf
xor
xor
adc
xor
fsubs
adc
sub
jecxz
cmpsb
call
xlat
lods
pavgw
fs
mov
idiv
dec
imull
add
xchg
jae
les
je
lods
xor
jb
xor
stos
orb
xlat
imul
enter
jb
cs
lea
lods
dec
rcl
jbe
cmp
pop
jnp
push
xchg
cltd
add
mov
dec
test
loop
adc
sub
pop
mov
in
pop
sbb
js
mov
add
pop
inc
pop
sbb
jl
cltd
loop
cmp
sbb
js
dec
dec
in
dec
inc
aas
jb
xlat
push
jecxz
sub
xchg
aad
mov
mov
pop
shlb
dec
xlat
nop
fstpl
int3
outsb
or
inc
cmp
lret
adc
push
pop
jb
aad
rcrb
les
mov
cmc
lcall
push
xchg
into
adc
push
test
orb
mov
push
repnz
add
mov
adc
stc
std
mov
push
push
push
mov
adc
xor
mov
cmp
dec
out
out
push
cmp
decl
imul
mov
stc
dec
es
mov
push
pop
cmc
cltd
mov
addr16
inc
stc
mov
rcrb
and
inc
xchg
mov
mov
push
push
cmp
mov
and
cmp
inc
jb
or
mov
cld
pop
addr16
xchg
incl
dec
push
pop
insb
pop
xor
push
shl
iret
push
pushf
inc
aaa
inc
inc
xchg
cmp
insb
lods
mov
sar
xchg
push
xor
and
and
dec
jmp
or
xchg
pop
dec
jae
out
dec
adc
xlat
cmc
and
aad
outsb
mov
mov
inc
stos
mov
mov
adc
cli
pusha
dec
dec
aad
sahf
mov
cmc
out
lock
pop
cmp
scas
enter
cmp
hlt
jp
mov
pop
xlat
jnp
cmpsb
dec
mov
pop
das
aam
lods
ljmp
flds
mov
fldl
cmp
jae
sub
mov
imul
cmp
movsl
sarb
pop
gs
adc
rcrl
and
sbb
out
jecxz
fnsave
push
pop
jb
jp
jae
mov
mov
int
test
imul
pop
cmp
shlb
shll
shr
test
pop
ss
ret
mov
nop
scas
mov
insb
jns
jge
popf
sub
ljmp
inc
fstl
sub
int
out
je
push
mov
jl
and
jl
add
mov
push
mov
or
jmp
popf
rolb
inc
cmp
jge
adc
rcr
jmp
mov
adc
clc
scas
int
jl
lock
push
dec
idivl
xor
dec
ja
repnz
testl
repnz
jae
xchg
popa
pop
mov
shrb
cld
das
ret
mov
dec
sbb
sub
mov
adc
xchg
dec
fadds
stos
stos
repz
jb
or
addr16
pop
pop
cmc
push
mov
jb
addb
in
xchg
out
in
aas
fisubrs
outsb
test
xor
ss
aaa
push
lds
mov
pushf
aaa
inc
cwtl
jns
adc
lcall
xchg
xchg
hlt
sub
or
mov
mov
mov
jae
xchg
jbe
in
xor
and
fdivr
testb
push
jo
out
and
popf
fldl
dec
xrelease
sub
scas
ljmp
data16
and
xor
adc
lock
cli
add
lock
jne
loope
mov
ja
mov
adc
cmp
xchg
and
pop
xorb
mov
js
cmp
mov
sbb
shl
mov
call
and
ds
inc
ficoms
cmpb
pop
xchg
hlt
cwtl
cmp
cmc
sub
push
sbb
inc
mov
mov
inc
js
sbb
jne
ja
jg
inc
dec
lcall
insb
xor
xchg
pop
mov
pop
data16
int
pop
lock
shl
xor
lcall
clc
xor
lret
sarl
mov
outsl
rorl
jmp
sbb
arpl
ljmp
mulb
xchg
mov
xorl
pop
xor
sti
ffreep
ja
sub
xchg
fwait
not
mov
pop
out
pop
cmp
mov
adc
addr16
lock
icebp
dec
test
pop
mov
push
add
ja
mov
mov
pop
roll
pop
mov
xor
mov
hlt
mov
push
jmp
mov
or
sbb
sti
jnp
jge
test
imul
int3
cmpsl
mov
fsubrl
dec
ret
ss
push
scas
mov
push
icebp
les
mov
adc
aad
fst
aas
sbb
mov
and
pop
sub
shlb
sar
rorl
out
divb
in
imul
jge
add
mov
mov
pop
sbb
dec
cmp
inc
xchg
les
xor
dec
sub
pop
loope
xor
or
inc
in
incb
xor
fdivrs
nop
shlb
jb
inc
loop
adc
xchg
js
aam
xor
mov
pop
jae
inc
loop
mov
es
rorl
mov
pop
adc
pop
xchg
push
adc
inc
je
jp
xchg
mov
inc
add
add
xchg
mov
inc
mov
add
xchg
xchg
and
clc
mov
loop
sbb
aam
cmp
mov
pop
sbb
js
aam
fisttpl
mov
pop
sbb
sbb
sbb
mov
pop
test
iret
jnp
mov
leave
add
inc
mov
mov
inc
jb
mov
cs
enter
push
mov
adc
dec
out
cmpsl
test
jle
mov
popa
xchg
jmp
ja
sbb
fistpll
fisttps
mov
xchg
loop
xor
or
std
lcall
arpl
stos
lret
sub
xchg
fsubs
pop
and
ja
mov
cmp
inc
xchg
adc
repnz
cld
icebp
push
push
jb
dec
xchg
mov
mov
jecxz
jb
push
bound
repz
jb
mov
xchg
aas
idiv
dec
mov
inc
jno
mov
dec
mov
jno
jbe
aas
mov
mov
xor
shl
sti
dec
fs
lahf
push
lcall
dec
adc
mov
xchg
jbe
sbb
add
insb
ss
dec
xchg
mov
mov
pop
push
jge
pop
cmp
insb
push
fsubrl
into
adc
adc
rol
push
mov
ss
cmp
sbb
test
dec
decl
xchg
mov
xor
cld
std
and
mov
push
repnz
jp
sub
loopne
scas
jb
cwtl
fisubrl
jnp
das
inc
test
cmp
xchg
cmpsb
and
jbe
aad
rorb
loopne
mov
dec
mov
mov
push
pop
jb
mov
xchg
adc
into
test
aad
adc
jp
push
mov
adc
and
nop
sbb
testl
add
inc
adcl
inc
add
insb
jb
nop
push
xchg
jae
lcall
sub
inc
inc
insb
xchg
xchg
nop
sub
notl
inc
shrb
push
out
pop
es
sbb
insb
xor
dec
jecxz
repnz
fs
gs
mov
add
out
dec
into
sbb
mov
pop
stos
mov
jbe
sbb
sub
popa
jl
icebp
adc
lahf
imulb
shrl
loop
les
mov
testl
lahf
fisubl
aam
adc
sub
jle
jb
es
mov
mov
sub
mov
xor
mov
rolb
leave
jle
inc
xor
es
aam
xor
sub
add
mov
aas
add
cmp
mov
sarb
mov
aam
jb
ljmp
push
cmpsl
xchg
mov
pop
inc
push
aas
jmp
and
or
div
add
pop
xor
idivl
adc
jb
mov
divb
dec
insl
mov
cmpl
mov
push
in
stc
enter
and
push
mov
fcompl
ja
xchg
jne
jbe
fwait
bound
cmp
xchg
movsb
xor
mov
fdivrs
int
les
inc
sarl
bswap
inc
dec
xlat
cmp
jb
shlb
xchg
iret
inc
and
mov
out
push
ss
push
xor
sar
push
push
mov
lods
dec
aam
notb
mov
rcl
xchg
in
leave
pop
jne
cmp
jg
loop
jle
sub
inc
outsb
cltd
or
cmp
je
mov
lahf
cli
pop
or
xchg
xor
inc
adc
or
fstpt
sub
dec
stos
mov
int3
adc
cmpsl
mov
or
or
ss
cmp
lds
imull
lods
mov
scas
mov
cmp
mov
nop
js
mov
mov
dec
jg
mov
jns
adc
xchg
pop
repnz
push
hlt
dec
sti
xchg
jmp
sti
xor
jecxz
icebp
pop
push
cmp
xor
push
mov
dec
adc
mov
push
je
test
inc
adc
inc
cld
mov
sub
js
dec
repnz
cmp
clc
xor
mov
cmp
enter
aaa
cltd
push
cli
fbstp
mov
adc
outsb
rcrb
sub
jne
mov
pop
call
add
pop
push
movsb
or
dec
ljmp
ds
cmp
stos
ss
les
mov
out
xchg
pop
jo
push
xor
mov
xchg
mov
in
mov
addr16
jge
push
in
ja
dec
inc
push
jb
push
jbe
divb
xlat
xchg
mov
mov
into
rclb
in
mul
out
daa
aaa
dec
dec
lea
int
mov
cltd
inc
jle
xchg
je
inc
fcomps
cld
scas
jae
mov
jo
xchg
dec
push
pushf
iret
bound
aam
dec
icebp
xlat
sbb
popf
rorb
push
dec
repz
insb
pop
mov
out
lea
arpl
push
iret
or
js
xchg
fisttps
cmp
xchg
mov
push
dec
dec
fs
jbe
mov
cmp
xor
pop
xor
faddp
into
cmp
and
jge
dec
mov
mov
icebp
clc
mov
xchg
sub
mov
sbb
inc
fnsave
pop
inc
fists
pop
add
idivl
sbb
popf
mov
xlat
lcall
xrelease
outsb
inc
aas
scas
push
mov
jp
inc
test
sbb
aaa
daa
roll
push
xchg
sbb
xchg
pusha
imul
dec
popa
mov
push
xchg
fildll
xchg
xchg
mov
pop
or
and
lahf
xor
test
sbb
pop
btr
mov
mov
je
mov
daa
cs
or
xchg
stc
sbb
repz
repz
out
adc
call
fiadds
and
pusha
shrb
aas
rorl
sbb
inc
daa
int3
mov
mov
xchg
outsb
mov
aas
push
push
das
jb
scas
pop
outsl
int3
mov
dec
je
mov
repz
sub
fisubrl
inc
std
cmpsb
pop
push
xor
mov
inc
std
and
mov
sbb
mov
push
leave
repnz
jns
ret
cs
pop
repnz
mov
lock
ret
cmp
xor
fs
and
ret
inc
mov
pop
stc
mov
and
ficomps
lret
or
cli
enter
test
pop
ljmp
adc
lods
jg
fistpll
stc
jns
mov
lcall
std
sbb
sbb
outsl
dec
pusha
adc
cmp
xchg
fidivs
lcall
gs
push
rcll
jb
and
test
nop
mov
lahf
addr16
out
cmp
es
jge
jle
into
sbb
into
mov
movb
mov
mov
mov
mov
adc
cmc
add
mov
and
xchg
int
cmp
add
or
add
divl
mov
shll
add
pop
pop
sbb
cmp
int3
les
mov
pop
int3
les
js
dec
adc
ss
into
aaa
adc
push
mov
lcall
mov
fistpll
inc
data16
out
push
sub
adc
and
inc
xor
pop
lods
push
ficomps
sti
decb
push
cs
mov
out
lret
inc
xor
mov
mov
cmp
xchg
xchg
adc
inc
push
and
xor
add
and
jne
daa
dec
les
imul
fwait
sub
jg
mov
mov
outsb
mov
xor
cmp
xor
mov
ds
mov
mov
test
sbb
inc
mov
mov
push
mov
inc
ret
sti
xor
out
ja
dec
in
jnp
fmuls
cltd
in
xchg
notl
cmp
xlat
fstpt
js
aaa
xor
inc
jns
mov
loop
xchg
mov
cwtl
out
aaa
dec
mov
shl
scas
push
loop
push
cmp
sbbl
cmp
int3
pop
cmp
fwait
repnz
testb
cld
dec
fstpt
clc
int3
cmp
mov
adc
jp
mov
mov
js
cli
mov
push
ds
xchg
jbe
mov
fcmove
push
adc
xchg
scas
adc
push
xchg
cmp
les
ret
mov
es
lcall
imul
test
jecxz
mov
das
ret
dec
jnp
or
out
cltd
ds
loopne
cli
jle
mov
into
xlat
pop
sbb
mov
ljmp
cltd
jns
cmpl
or
xchg
adc
mov
pop
ret
cmc
push
mov
dec
sub
pop
and
imul
ja
notb
fwait
call
es
out
popf
pop
cmp
dec
into
inc
xorl
in
xor
mov
into
push
cmp
inc
xchg
mov
inc
shrb
nop
int
enter
mov
push
cmp
int
int3
add
pusha
ret
xchg
sub
xchg
xor
sub
sarl
ljmp
lock
jmp
sub
pop
and
cmpsb
xor
jae
lahf
les
mov
rorl
cmc
jb
fmuls
jns
pop
jge
bound
mov
mov
xorl
jns
popf
xor
cmp
adc
mov
push
jmp
xchg
fnstsw
inc
repnz
adc
pop
mov
pop
pop
sbb
mov
jae
lock
js
sahf
mov
bound
insl
sub
push
js
inc
mov
pusha
test
lahf
push
push
pop
inc
mov
lock
aam
add
aaa
push
push
pushf
in
inc
xlat
lcall
dec
cmc
loop
pop
jmp
jl
xlat
dec
mov
pop
add
mov
movsb
xlat
mov
push
xor
jne
push
loop
xlat
js
nop
lds
inc
stc
mov
xchg
pop
dec
or
sti
xchg
popf
enter
pop
push
jge
flds
pop
lret
xlat
dec
std
mov
sti
andl
sbb
add
cmpsl
adc
jb
cmp
pop
sti
xlat
push
popf
inc
dec
push
fucomip
mov
pop
lods
add
xlat
pop
lcall
mov
and
outsb
and
cmp
mov
lahf
pusha
jno
mov
xor
lock
dec
mov
xlat
mov
cs
push
mov
mov
cmp
mov
outsl
xor
xor
aad
push
sub
cli
arpl
rcrb
xlat
sar
cmp
xchg
sub
pop
fwait
cmp
sub
mov
roll
fists
jbe
mov
filds
jmp
and
xchg
pop
xor
fcompl
add
push
mov
std
aaa
addr16
sub
shll
mov
mov
movsb
ss
sbb
jg
mov
mov
jge
or
lcall
mov
xchg
enter
popa
les
lret
inc
int
jo,pn
rolb
sub
fildll
incl
stc
jp
inc
jmpw
mov
push
aad
lcall
dec
pop
sbb
push
lret
scas
mov
mov
sbb
movb
pop
loop
xchg
mov
pop
xchg
sbb
repz
orl
cmp
and
aaa
xor
sbb
mov
std
aas
add
scas
mov
mov
cmp
push
pushf
xorb
in
inc
mov
inc
cmp
jge
inc
enter
adc
out
lcall
mov
adc
xchg
jbe
jnp
sub
popa
call
xchg
std
mov
cld
pop
les
sbb
push
push
inc
adc
push
pop
test
mov
sub
jmp
mov
ja
out
and
rorl
xchg
mov
insb
sti
jp
test
push
ss
or
inc
int3
lock
jo
pop
jno
enter
inc
and
inc
pop
shl
loopne
jmp
pop
xchg
and
int3
inc
arpl
push
hlt
fcoml
adc
dec
mov
mov
popf
mov
mov
ret
sahf
int
fcoms
push
out
dec
jns
xchg
shrb
fstpt
lds
ret
aad
rcrb
ja
jbe
cwtl
ret
fwait
mov
or
inc
or
lods
sti
jp
pop
xchg
and
inc
ja
call
mov
rol
std
pop
jbe
shll
popf
add
jb
mov
je
push
or
and
lock
jns
ret
das
mov
push
adc
loopne
outsl
lahf
pop
neg
shll
add
xor
or
cld
xlat
xchg
cmp
mov
jo
ss
ret
lcall
adc
lods
rolb
jno
lahf
add
dec
je
xchg
xchg
mov
xor
push
cli
jb
out
sub
fwait
or
mov
divb
rclb
es
insb
jnp
outsb
jae
mov
cwtl
mov
repnz
repz
xchg
xor
xchg
pop
xchg
jns
mov
mov
aad
fwait
xor
mov
sarb
ja
mov
int
std
mov
mov
mov
mov
call
loope
push
roll
xor
add
mov
movsl
test
nop
mov
aam
addl
pop
jne
xor
adc
jo
cltd
xor
jg
fdivrp
pushf
imull
lret
push
stc
test
lcall
cltd
movsb
mov
sbb
xor
dec
cmc
leave
push
push
fidivrl
iret
xlat
xor
imul
outsb
mov
push
adc
addl
std
xchg
outsl
inc
rcl
mov
jle
mov
xor
xor
fs
sti
xor
divl
stos
sub
xchg
lcall
xchg
jo
repz
push
adc
popl
mov
icebp
shll
inc
xchg
test
xor
cmp
es
mov
cmp
add
push
rolb
inc
xchg
out
push
xchg
mov
xchg
scas
xchg
stc
lds
shll
pop
lret
aam
lret
mov
cmp
sub
cmp
mov
out
cltd
ret
fwait
jae
jp
xor
pop
clc
insb
hlt
xchg
fwait
into
and
in
jne
xor
cmp
push
xor
pop
jo
lock
popa
add
out
stos
add
hlt
sub
mov
jge
jno
test
inc
repnz
jne
les
xchg
mov
pop
jmp
pop
xor
cmp
mov
push
jae
inc
sbb
push
inc
popa
inc
adc
mov
cmp
imul
mov
mov
jo
dec
js
repz
add
in
mov
iret
adc
repnz
mov
mov
cmc
push
mov
push
jp
sub
jl
jl
cmc
sarl
or
mov
xlat
lds
repz
add
stos
mov
int
enter
xchg
movsl
jl
and
jle
and
lea
lods
pop
sbb
dec
iret
push
pop
inc
jb
xchg
xor
xchg
frstor
lahf
roll
mov
xor
es
xlat
xor
xor
jns
dec
sti
call
call
or
push
pop
and
icebp
add
jp
mov
and
bound
xor
aam
mov
pusha
mov
push
adc
ja
in
mov
ja
mov
xchg
in
add
cmc
sti
push
imulw
out
loopne
inc
adc
lcall
push
sarb
aad
push
fdivr
lcall
mov
push
clc
xor
aas
scas
push
pushf
ja
sbb
push
cmp
stos
cmc
mov
leave
loopne
push
mov
in
ss
cmp
jns
mov
ret
or
aam
das
mov
or
shrb
xor
inc
test
ss
stc
cmp
push
pop
fwait
push
int3
sbb
jg
jmp
pop
xor
mov
inc
out
cli
es
out
imul
push
inc
std
xchg
rol
scas
jbe
sub
pop
into
popf
loopne
pop
push
iret
fwait
leave
xor
push
mov
scas
rorl
jmp
and
in
push
fwait
lcall
scas
dec
hlt
stc
aas
das
dec
sub
push
xchg
pop
push
push
xchg
push
inc
xor
mov
jecxz
jb
cld
push
mov
jecxz
scas
adc
pop
xchg
jb
aad
push
decl
xor
jb
mov
dec
jae
inc
shlb
jl
mov
aad
sbb
or
push
ret
mov
bnd
adc
in
les
rorl
dec
loop
sarl
mov
pop
shl
loop
cmp
mov
mov
mov
fcoms
mov
push
xor
cmp
jle
xor
adc
xor
dec
loopne
ficoms
loope
enter
xchg
jecxz
pop
mov
mov
ja
dec
outsb
jbe
negl
int
pusha
out
ja
js
xor
adc
xor
cmp
iret
pause
mov
inc
mov
sahf
mov
enter
dec
lcall
enter
icebp
push
and
cmp
mov
insb
stos
mov
insb
dec
jae
push
pop
inc
enter
cmc
mov
push
adc
mov
insb
mov
xchg
out
pop
jnp
or
push
pop
cmp
xor
pop
mov
std
loopne
adc
or
add
cli
mov
stc
jbe
mov
inc
sub
push
xor
mov
and
push
ja
cmc
pop
out
cmc
stos
sbb
mov
dec
mov
mov
out
mov
cli
xchg
jmp
cli
inc
jmp
mov
out
incl
gs
jb
xor
push
and
mov
imul
push
ret
push
ret
ret
imul
ss
mov
lea
mov
insl
stc
test
jae
cmp
into
xor
stc
xchg
xchg
push
pop
mov
inc
xlat
popf
fimull
rclb
jbe
call
cmp
emms
les
adc
push
cmp
jo
out
ret
shlb
cld
lret
rclb
shlb
fcomip
xlat
adc
push
xchg
cmpsl
es
inc
sub
push
mov
jl
das
cmp
push
xor
mov
iret
out
jge
movaps
ss
cmp
bound
and
jne
cmp
pop
mov
sysenter
je
jle
sub
mov
inc
les
mov
mov
fmull
das
sub
mov
inc
push
out
mov
mov
aad
push
push
push
mov
rclb
sub
or
shlb
push
out
jne
mov
into
pop
sti
xchg
dec
fcoml
imul
jle
mov
cli
fsub
pop
movsb
mov
and
ja
pop
rolb
pop
ret
inc
cmp
push
add
mov
cmp
popf
jmp
or
loope
add
in
mov
das
inc
mov
in
test
xlat
mov
sbb
sbb
xchg
sarb
xchg
fnstsw
jne
cmpsl
xlat
adcl
pusha
rcll
divl
inc
jae
jl
sub
aaa
es
aad
lock
xlat
sub
call
lcall
into
dec
inc
mov
cmp
jmp
notl
and
xor
popa
inc
cs
push
fldl
push
shll
icebp
mov
push
mov
inc
je
outsl
ja
mov
xlat
mov
push
ja
dec
test
icebp
dec
xchg
push
scas
xor
pavgb
jae
loop
and
pop
ja
xchg
ja
cs
mov
iret
push
cli
jb
fadd
jl
mov
std
jne
mov
popa
adcb
out
clc
neg
inc
mov
std
jne
mov
push
or
aas
call
push
lea
lretw
pop
mov
in
mov
xchg
adc
mov
cmp
lahf
mov
ljmp
fucomi
aas
cmp
mov
les
mov
in
in
pop
inc
jae
fidivrl
pusha
jmp
cwtl
jbe
cwtl
ror
mov
xchg
sub
into
cmp
inc
into
call
in
jbe
mov
aaa
xor
inc
pop
aaa
mov
jp
jbe
inc
aam
fcmovne
adc
shrl
rcrl
clc
ss
repnz
shlb
pop
push
jmp
sub
or
hlt
pop
fdiv
icebp
push
push
lds
ja
fs
xlat
jns
mov
dec
dec
push
leave
push
fwait
ss
jp
jbe
cmp
arpl
jb
push
inc
xchg
into
daa
cmpsb
xor
xlat
adcb
inc
pop
cmp
js
fildl
lods
les
addl
rcrl
adc
loopne
xchg
xor
jp
mov
sar
dec
mov
dec
jbe
xchg
int3
out
les
adc
shlb
xlat
lods
pop
nop
mov
inc
jae
je
jle
push
dec
andb
mov
xor
adc
pushf
xor
adcb
dec
cmpb
cld
sub
cmp
pop
ss
scas
cltd
jno
inc
xchg
je
sarb
sbb
mov
shll
into
mov
mov
dec
popa
jnp
je
mov
cwtl
dec
push
mov
je
mov
cmp
jbe
leave
cmp
add
sbb
out
pushl
xchg
imul
dec
sbb
pop
lret
cltd
jns
popf
jnp
adc
and
clc
mov
jae
or
nop
xchg
inc
lds
fnstsw
jp
xor
lret
jmp
xchg
mov
inc
test
je
xchg
cwtl
sub
xchg
sbb
aas
jnp
pop
icebp
xchg
sub
cltd
and
push
mov
inc
nop
aas
push
push
pop
add
into
push
aas
fadds
loop
adc
sbbb
addb
aaa
inc
mov
cmc
pop
xchg
mov
jl
in
dec
inc
std
loop
and
nop
nop
adc
xchg
push
shlb
sub
mov
lods
lret
or
into
fwait
sub
sbb
push
sarl
rcrb
sarl
mov
stos
pushl
mov
dec
jo
adc
cmc
push
xchg
and
cmp
pop
outsb
rcrl
sti
loopne
mov
adc
sahf
mov
out
ja
pop
lret
sub
xor
je
xchg
test
hlt
jae
pop
jmp
sbb
or
aam
jl
mov
test
xchg
jne
ds
mov
push
lea
cmp
mov
mov
mov
jecxz
mov
adc
enter
xor
enter
std
adc
push
mov
mov
icebp
mov
lret
adc
pop
mov
dec
jl
rorb
push
inc
out
sbb
jae
into
xchg
sbb
movb
loopne
jmp
rorb
xchg
mov
aas
bound
jb
push
adc
mov
push
sti
xchg
stos
inc
xchg
icebp
mov
cmp
xchg
xor
xor
cmp
mov
bound
scas
mov
enter
fistpl
sub
pop
xor
loopne
mov
loopne
repnz
sub
std
adc
movsl
ror
femms
movsb
lcall
clc
loop
and
movsl
jnp
scas
push
xor
mov
sarl
cmp
dec
xchg
sti
cltd
mov
cmp
je
mov
pop
jae
mov
sbb
repz
frstor
sbb
dec
sbb
jae
outsb
je
pusha
mov
mov
mov
rclb
mov
jo
aaa
jg
aaa
adc
xor
xchg
jae
repnz
outsb
sub
ja
into
data16
in
movb
leave
and
add
clc
and
loope
enter
jo
aad
inc
push
sbb
ja
push
dec
shlb
xchg
movsl
mov
repnz
and
mov
imul
icebp
into
in
aam
xchg
lret
mov
rcll
sub
jge
xor
das
add
jne
sbb
cli
xlat
pop
xor
pop
out
jbe
pop
mov
or
cli
hlt
jbe
jbe
xchg
xchg
xchg
inc
cmpb
pop
push
lea
push
sbb
mov
int
je
call
cmp
sbb
stc
mov
mov
xchg
lret
dec
ror
out
sbb
sbb
jnp
jle
hlt
push
inc
push
aad
ret
mov
mov
dec
fwait
mov
push
cmpsl
call
leave
std
mov
xchg
push
shll
jbe
test
sub
sbb
sub
shl
cmp
sbb
mov
add
mov
jae
aam
out
sbb
cmp
pusha
jb
lds
jnp
mov
adc
lret
pop
shlb
mov
xor
jb
mov
adc
sbb
fs
mov
es
test
outsl
jecxz
xchg
and
push
add
inc
nop
lock
sub
pop
inc
or
mov
or
dec
je
repnz
aaa
mov
call
or
test
xorl
cmp
fs
adc
or
shr
cmc
adc
sub
add
adc
xor
add
push
cmp
mov
jns
fdivl
aas
hlt
mov
aaa
jnp
enter
rcll
xor
or
sti
dec
sub
cmpsl
subl
push
jb
push
mov
cmp
loopne
fstpt
pop
sti
mov
aas
aad
jne
mov
repnz
add
dec
mov
mov
cmp
push
icebp
push
je
adc
and
cmp
mov
xor
mov
out
aaa
cmc
mov
push
xchg
pop
out
xchg
sub
out
ret
xor
mov
lcall
xchg
xchg
and
xchg
movsl
and
sub
dec
cltd
sti
insb
jno
cmpsb
repz
ljmp
lea
lods
add
inc
inc
jp
in
cs
mov
fs
push
push
jae
xchg
mov
push
test
and
cmp
int
subl
mov
jns
sbb
push
add
bound
xchg
mov
xchg
aad
xor
pushf
shlb
jl
pop
xor
sbb
mov
rorl
xor
xor
fdivr
mov
and
mov
pop
push
repz
adc
gs
mov
test
push
xor
shl
jmp
push
jg
mov
jp
pop
insb
xchg
data16
xor
xchg
fstpl
or
cmc
test
loopne
movb
enter
mov
xor
sti
cmp
js
inc
xor
jle
mov
dec
jecxz
js
loopne
mov
pop
ret
dec
adc
xchg
ds
rcl
cmp
rcll
into
mov
insb
add
jp
lret
mov
fisubrl
mov
ds
gs
pop
outsb
cs
out
adc
int3
mov
fldcw
test
sti
push
lret
test
inc
scas
mov
call
push
addr16
add
cmp
js
leave
push
dec
mov
loopne
push
hlt
inc
sbb
push
inc
hlt
fidivrl
movsb
sbb
lret
ja
mov
xchg
push
xor
add
sbbb
lahf
dec
fwait
icebp
mov
sub
or
int
cmp
or
mov
sub
popf
xchg
leave
je
pop
fwait
aam
repz
fnsave
imul
add
shr
add
mov
lahf
mov
ljmp
imul
mov
mov
or
cmc
leave
lret
pop
mov
mov
stos
inc
pop
adc
jo
cli
add
push
jb
mov
pop
leave
test
nop
push
aad
add
mov
fimuls
dec
push
and
cmc
leave
ret
lret
leave
ja
lret
loop
aad
shlb
cmp
jle
inc
xchg
mov
pop
xchg
cmp
cwtl
mov
lods
daa
inc
mov
mov
inc
adc
push
mov
pop
cld
movsb
add
repz
rcll
add
fidivrl
push
inc
shlb
push
sbb
rclb
and
sbb
icebp
test
lods
sbb
mov
push
mov
cmp
in
stos
sbb
and
mov
add
mov
push
aaa
dec
mov
fwait
aaa
outsl
ja
mov
push
mov
adc
mov
nop
dec
or
mov
mov
mov
mov
hlt
mov
or
or
jle
cmp
mov
jle
mov
jnp
repz
cmc
lock
in
mov
or
mov
rcr
pop
jbe
push
xor
les
fists
cmpsb
in
mov
xchg
mov
mov
jb
xchg
add
aas
mov
cmc
push
mov
xchg
pusha
rclb
mov
loopne
add
fadd
rclb
outsl
sub
jp
cmp
mov
cmp
push
insl
push
aaa
pop
arpl
aas
sbbl
xor
sbb
daa
jmp
lret
ret
lea
jno
mov
sub
and
in
popl
pop
sub
std
test
inc
mov
dec
mov
pop
jp
push
cmp
mov
xor
clc
cmpsb
lds
test
cmp
xor
outsb
out
subl
add
sub
mov
xor
addr16
push
cmc
jno
pop
push
rorl
insl
loope
rcll
or
jmp
ds
inc
bound
mov
sbb
mov
mov
cmp
jecxz
subl
inc
aas
cmpsl
or
popf
icebp
mov
xchg
push
mov
mov
jae
aaa
sbb
iret
cmp
jle
mov
aas
and
push
mov
js
adc
push
pop
mov
pop
cmp
push
stc
jb
aaa
mov
pop
stos
inc
push
insl
xor
fbstp
aas
mov
pop
ss
test
lock
into
test
cmp
daa
je
push
inc
jmp
inc
dec
mov
std
cmp
push
inc
mov
mov
clc
or
pop
fwait
out
leave
inc
jg
mov
into
dec
mov
ror
pusha
jb
test
sub
push
push
xchg
or
ss
lahf
inc
and
dec
pop
insb
mov
fisubrs
xchg
sub
std
mov
adc
add
xchg
pop
xchg
xor
jb
jg
sub
mov
xchg
push
sbbb
xor
outsl
fidivs
add
fldenv
stc
ret
xchg
mov
dec
cmp
fwait
clc
out
cwtl
push
cmpl
inc
xlat
shll
cmc
push
imul
xchg
jae
cmp
xchg
daa
jmp
xorl
mov
jns
dec
mov
adc
lds
cmp
sub
dec
cmpsb
jo
adc
addr16
xor
cmc
cltd
mov
cmc
pop
xchg
jp
lock
mov
jecxz
jge
ds
jb
cmpsl
clc
jp
cmp
push
lock
dec
insl
mov
cmc
mov
inc
mov
mov
push
dec
dec
lock
out
sbb
into
push
mov
push
lock
sub
push
add
dec
dec
jle
cmp
lock
cli
imul
pushl
xchg
into
mov
mov
cli
stos
dec
fidivrs
mov
repz
stos
dec
push
mov
lret
xchg
dec
jb
dec
add
jbe
mov
andb
jp
inc
adc
std
bound
in
xor
xchg
lret
jl
fists
inc
mov
push
cmc
xchg
repz
pushl
mov
adcb
jp
ss
mov
inc
rclb
subl
aas
pushf
xchg
dec
push
push
inc
into
mov
insb
fs
rclb
add
ret
mov
add
add
inc
sbb
xchg
pop
mov
cmp
mov
push
inc
xor
xchg
pop
les
jb
lock
cli
push
cmpl
xor
pop
dec
push
ja
lods
out
scas
test
jle
mov
jo
xor
push
push
std
jp
scas
rcrb
jmp
imul
mov
sub
jne
mov
add
mov
mov
pop
or
xor
nop
fdivr
pop
jecxz
push
sarb
push
adc
mov
sbb
dec
dec
cmp
sbb
sbb
or
sub
mov
aas
adc
cmp
push
and
push
out
stos
sub
pusha
ret
ficompl
push
std
add
orl
sub
mov
mov
and
call
xor
clc
loop
jns
mov
leave
stos
xchg
loop
jb
mov
into
xchg
jns
xchg
dec
cli
nop
repnz
push
xchg
dec
shl
inc
jb
and
pop
xchg
jae
adc
imul
xor
xor
mov
test
mov
popl
mov
push
movsb
jmp
pop
or
mov
mov
icebp
push
les
ja
jnp
cmc
insl
jb
pop
mov
cs
neg
cmp
add
mov
mov
sbb
ffreep
pop
mov
shll
in
lds
es
or
mov
fdivr
push
cmpsl
jle
mov
lret
xchg
into
dec
cmp
dec
mov
and
test
call
cmp
mov
repnz
mov
pop
std
fimull
popf
push
pop
xchg
mov
cli
pusha
mov
aas
mov
cmp
cmc
addr16
aas
jne
add
pop
icebp
pop
xor
mov
pop
sti
xor
clc
repnz
insl
sub
and
mov
mov
mov
in
sub
push
pop
pop
inc
repz
cwtl
out
push
ds
xor
adc
adc
add
sar
jl
push
and
cwtl
dec
test
sbb
xor
jl
ret
int3
pop
in
shlb
jns
lcall
cmc
mov
pushf
aas
pop
mov
outsl
icebp
xchg
mov
leave
cmc
mov
mov
faddl
inc
pushf
std
ss
push
xor
mov
adc
cmp
mov
rorb
repnz
jbe
clc
arpl
mov
pop
xor
mov
outsb
push
dec
jnp
mov
xor
push
inc
sarl
lcall
push
lahf
jnp
imul
xor
adcb
cmp
jb
inc
pop
cwtl
arpl
pusha
lret
adc
int
and
push
leave
rolb
and
and
jl
hlt
loop
mov
int
dec
adc
cmc
cmp
dec
lcall
cld
shll
jns
mov
push
push
push
mov
jl
jns
and
mov
mov
dec
jae
cmp
fstps
js
pop
dec
adcb
dec
stos
mov
dec
jl
cmpsb
outsb
adc
lret
je
mov
mov
xlat
pop
jp
mov
mov
lods
clc
ret
iret
iret
mov
pop
aaa
xchg
jp
ss
lcall
pop
mov
fdivl
cmp
bound
negb
mov
fdivr
negb
xor
repz
mov
pusha
xor
lret
jbe
repz
hlt
push
xor
adc
mov
adc
je
mov
mov
ds
in
inc
pop
inc
jns
add
jb
cmc
jp
ss
inc
int
add
fiaddl
fsubs
outsb
clc
loope
bound
cmpsl
js
mov
pop
push
cmp
adc
lods
sarb
test
push
ljmp
pop
ss
lcall
sbb
aaa
jnp
push
rolb
cmp
fidivl
mov
pop
inc
aaa
inc
nop
call
gs
jp
bound
in
test
pusha
jbe
mov
mov
aas
sbb
add
xchg
adc
js
sub
sarb
in
xor
idiv
mov
xchg
mov
rcr
fwait
xchg
push
out
cmp
lds
ret
xlat
jnp
ret
xchg
add
jl
and
cmp
inc
jbe
push
popa
xor
mov
and
xor
push
adc
push
loope
xchg
sti
in
xor
mov
je
mov
js
mov
push
and
cmp
inc
mov
nop
bound
jnp
add
jle
repz
push
adcb
mov
push
mov
mov
mov
inc
loop
dec
jp
push
aam
enter
aas
mov
fimull
fdivrl
sbb
jle
fdivrl
std
lcall
mov
lds
repz
jnp
mov
enter
cmc
push
xor
repz
mov
ret
jnp
mov
push
inc
leave
sub
push
mov
add
and
popa
dec
cmp
mov
mov
aas
pop
mov
repnz
enter
push
ja
cmp
ss
dec
jecxz
out
in
and
mov
cmp
xor
or
sub
cs
push
cmp
adcl
adc
les
inc
iret
mov
jno
std
lcall
call
enter
add
into
sbb
std
aam
out
inc
fisubrs
daa
sbb
stos
mov
push
adc
xor
popa
mov
sbb
leave
dec
ja
and
pop
int3
cmp
and
jo
ja
subb
loope
xchg
push
cmp
xor
test
push
push
rorb
push
sbb
ss
cs
add
push
je
repnz
repz
mov
dec
or
cmp
sub
sbb
cmc
outsb
imul
dec
in
in
sub
xchg
mov
cli
jae
and
xchg
xchg
mov
shlb
in
sbb
rcr
jg
jge
adc
mov
je
mov
dec
js
and
xor
mov
push
xor
aam
ret
or
push
dec
adc
into
lret
fsubrp
xorb
out
and
ljmp
stc
insl
add
push
fdivs
in
pop
call
pushl
test
imul
movb
mov
inc
or
sub
std
pop
jge
nop
add
xor
push
xchg
add
xchg
jle
ja
push
xchg
add
sahf
jae
push
mov
pop
sub
jp
pop
mov
inc
inc
dec
loopne
jecxz
mov
sbb
push
iret
pop
inc
add
stos
fldl
into
push
mov
je
mov
xor
and
lock
adc
jno
movsb
add
jnp
cmpsl
hlt
jb
mov
jp
jae
call
xchg
inc
les
ret
sbbl
xchg
stc
cmpsl
sbb
xor
mov
aaa
aam
mov
ja
sub
dec
mov
jb
lcall
xchg
stos
int3
pop
push
daa
and
sbbl
ja
mov
pop
push
add
pop
inc
push
xchg
icebp
cmp
outsb
jbe
ss
pop
cld
xor
push
repz
movsb
mov
xchg
outsb
pop
pop
push
jge
cmpsb
mov
aaa
mov
enter
movsb
inc
cmp
loop
sub
mov
cmp
fbld
nop
mov
pop
fstpl
shll
fcomip
stos
add
sub
mov
cmc
jg
orl
incl
jb
push
fbld
ret
mov
lock
or
jge
mov
jns
ror
or
sub
mov
dec
jne
je
mov
and
loope
adc
cmp
loop
xchg
inc
pop
je
cmp
dec
in
xor
sbb
pop
outsl
or
nop
insb
cmp
jae,pt
aam
cmp
cmp
xor
sub
mov
cmp
test
inc
xor
mov
in
inc
les
js
dec
lock
fdiv
fnstenv
gs
mov
push
fdivl
jle
sbb
pop
xor
mov
lds
xor
mov
sbb
mov
lcall
push
insb
jmp
dec
imul
inc
dec
inc
popl
xor
cmp
sub
mov
pushf
jecxz
fwait
xchg
mov
test
sbb
mov
sbb
mov
xor
dec
push
bound
jl
inc
pop
outsb
jp
xchg
adc
push
xchg
ja
mov
mov
fdivp
mov
sbb
xor
std
cmp
cmp
jne
jb
mov
and
adc
out
push
and
ss
inc
mov
dec
rolb
xor
xchg
xchg
js
mov
adc
cmp
pop
cmp
movsb
scas
jge
mov
std
dec
or
pusha
mov
jae
lcall
iret
mov
mov
xlat
test
sbb
mov
je
adc
pop
xor
lret
dec
and
sbb
mov
mov
pop
rcll
loop
outsb
pop
push
xor
cmp
jge
loopne
loop
mov
mov
sub
adc
loop
rcl
mov
add
or
cmp
xchg
mov
xorb
mov
jae
pop
inc
sbb
arpl
mov
xchg
adc
fists
movsl
enter
cli
int3
hlt
repnz
repz
inc
mov
mov
clc
mov
call
push
mov
scas
cwtl
cmp
lcall
jb
and
pop
mov
fcoml
push
addr16
and
scas
aaa
arpl
test
xor
loopne
js
outsl
cmpsl
add
ret
push
cmpsl
mov
xlat
shll
inc
fnstcw
jg
mov
push
ss
movsb
pop
ss
iret
popf
jnp
inc
jle
insl
jb
pop
inc
aam
push
cmp
mov
movsl
push
idivl
push
js
adc
sbb
xchg
sub
xchg
mov
adc
mov
into
inc
cltd
sbb
repz
push
and
in
mov
sti
sbb
cmpsb
sti
mov
xor
pop
cmp
and
xchg
mov
lea
dec
xor
popa
fs
cmpsb
or
mov
mov
ret
addps
icebp
testl
inc
out
xor
movsb
inc
dec
mov
xlat
pop
xor
dec
mov
or
cmpsl
mov
les
mov
inc
fwait
or
adc
scas
addl
push
pusha
jecxz
jb
mov
ret
push
pop
dec
push
stos
pop
mov
cmpsb
cltd
mov
cltd
adc
cs
cmc
popa
out
stc
lcall
dec
jl
mov
jl
repz
stc
pop
sti
fistl
sbb
inc
clc
fiaddl
repz
enter
pop
add
notl
xchg
repnz
inc
idivl
cmc
or
data16
pop
xlat
push
inc
jne
pop
sub
pop
ud0
xor
push
cmp
pushf
mov
dec
adc
aaa
stc
mov
jb
js
cmp
imul
cli
push
mov
jge
dec
mov
ret
inc
xchg
insb
data16
xor
adc
add
dec
inc
lret
adc
mov
inc
stos
mov
mov
clc
leave
out
add
filds
adc
xchg
mov
jo
xchg
out
xchg
add
mov
imul
inc
mov
push
or
shlb
xlat
test
sarl
shl
jge
fldt
repnz
sahf
je
jg
shl
lret
jb
jmp
or
adc
sbb
cmp
push
lcall
pop
cli
mov
xlat
jmp
out
in
aaa
inc
cli
xchg
mov
push
mov
pop
jg
dec
ret
stc
jns
call
push
imull
xchg
fstpt
repz
mov
leave
ljmp
dec
xorb
fidivrs
test
into
in
mov
xor
sub
rcr
je
adc
jo
xchg
mov
push
shll
or
mov
mov
cmp
out
ret
pop
xchg
out
mov
imul
mov
mov
rorb
mov
jno
subb
int
popa
mov
and
ss
dec
shlb
inc
jbe
popf
shll
mov
popf
xor
dec
int3
xor
cmp
cmp
xchg
adc
movsb
cmovnp
and
jmp
cmc
inc
add
pushf
mov
mov
in
lret
es
adcb
pop
xor
xor
inc
rclb
xchg
mov
lret
dec
aaa
int3
xor
inc
lret
push
enter
or
std
sub
in
into
test
sub
mov
inc
inc
xor
out
cmp
jnp
mov
in
xchg
or
pop
cld
cmp
inc
mov
xchg
push
lcall
ret
mov
xor
xlat
out
add
je
int
xchg
mov
cmp
je
lret
imull
sub
frstor
imul
mov
loop
call
inc
aam
mov
pop
jns
jp
xchg
stc
cmp
rcll
add
xchg
lahf
scas
mov
xchg
jmp
cs
xlat
mov
out
stc
lahf
cli
cli
add
dec
in
out
or
jg
cmpsb
fsubs
mov
je
xchg
pop
out
bound
mov
sbb
andb
adc
dec
mov
pop
add
in
dec
lock
add
mov
cmc
hlt
and
test
pop
xor
hlt
dec
xchg
and
int
xchg
adc
inc
sti
sahf
inc
mov
adc
jmp
repnz
cmp
push
popa
xor
leave
push
cmp
cli
lahf
jg
cmp
xchg
lahf
sbb
xor
xchg
xchg
ds
xor
repnz
out
jmp
aas
aad
jecxz
ds
ja
pop
and
jbe
and
push
sarl
cmc
xchg
mov
cs
xchg
xrelease
aaa
je
xor
pop
shll
add
inc
mov
add
loop
xchg
fdivrs
subb
hlt
jp
inc
dec
insb
dec
cmp
pop
not
xchg
push
pop
repz
mov
push
enter
push
clc
mov
mov
xchg
mov
jb
adc
aaa
xor
or
mov
data16
push
daa
sub
ret
push
int
loopne
push
jge
iret
rorl
xor
in
jbe
xor
mov
mov
cmp
lds
mov
rcrb
inc
xor
vsubpd
mov
lcall
les
lret
int3
sbb
dec
rcrl
iret
mov
insl
cmp
js
sbb
dec
mov
xor
sub
test
and
pop
push
je
or
cld
cltd
mov
inc
inc
add
repnz
mov
xor
adc
xchg
jbe
inc
xchg
pop
and
dec
and
and
adcl
aad
pop
mov
dec
repnz
xlat
dec
xor
mov
lods
jge
je
cmp
inc
out
imul
jge
scas
mov
ss
xor
mov
pop
mov
test
jbe
jns
xchg
fcoms
add
lcall
mov
mov
jae
jp
sar
jl
shrb
lret
mov
xlat
add
mov
push
pcmpeqw
or
stc
bnd
in
outsb
aad
popf
sub
xchg
lcall
shlb
repnz
pop
jae
cmp
pop
xchg
mov
nop
adc
into
cmp
cmp
xchg
cmp
dec
dec
push
dec
lahf
mov
push
aam
mov
add
cmpsl
insb
mov
cmpb
rclb
inc
xor
cmpsb
subl
pop
les
pop
mov
and
cmp
in
pop
or
mov
test
icebp
out
cmp
cmp
xor
in
mov
dec
push
xchg
loope
lcall
cltd
popf
mov
push
jo
mov
cs
xchg
adc
jno
xchg
lea
jb
or
cmc
push
push
cmp
lret
movsl
pushf
aaa
sbb
mov
insl
loop
lock
jp
inc
jbe
ss
add
enter
in
sahf
and
loop
clc
bound
sbb
cmp
pop
xchg
cmp
push
mov
setp
jb
xor
cld
in
je
icebp
loop
mov
mov
pop
jns
mov
sub
into
pop
rolb
daa
cs
cmp
mov
mov
cmp
daa
mov
cmp
pop
mov
sti
inc
cli
jns
inc
jp
xchg
jne
repnz
jb
cwtl
mov
outsb
xor
dec
dec
mov
jle
cmp
mov
adc
addb
inc
leave
pop
pop
lcall
jae
shlb
inc
jno
repz
xor
mov
rclb
sub
scas
push
dec
or
mov
rclb
mov
push
jbe
jb
aam
mov
push
mov
cmp
cmp
cmp
dec
cmc
sub
lds
push
mov
inc
adc
cmc
jo
lret
loop
mov
jae
mov
mov
lds
shlb
lea
cmp
cmp
fwait
sarl
cld
in
js
xor
cmp
dec
adc
std
test
repz
xchg
jb
mov
lds
mov
es
into
mov
dec
cmp
lods
mov
pop
mov
mov
adc
sbb
xchg
add
rol
xchg
ret
and
in
xchg
pop
mov
fadds
xchg
mov
outsl
in
push
mov
clc
mov
jb
imull
sub
jae
subl
xchg
test
and
xchg
ljmp
xchg
jg
shrl
and
andl
mov
cli
mov
je
jl
jmp
push
inc
xor
cltd
lds
mov
lds
inc
out
jle
inc
rcll
sbb
inc
int3
icebp
adc
int
and
dec
enter
hlt
sbb
ret
jle
dec
cmp
inc
lds
fs
dec
dec
pusha
adc
into
inc
add
nop
sti
dec
mov
fucompp
mov
movb
js
xor
cmp
test
fisttps
cld
xor
sub
test
mov
add
adc
icebp
pop
inc
stos
les
add
pop
dec
dec
mov
lahf
hlt
and
add
lea
ja
leave
xchg
sub
pop
subb
lods
bound
cmp
jne
lcall
mov
sbb
or
cmp
inc
adc
sti
jg
and
push
lahf
mov
pop
xchg
xchg
jbe
mov
or
jecxz
jne
ss
xor
pop
push
adc
cmp
cmc
mov
mov
rolb
inc
stos
sarb
inc
mov
out
ss
enter
repz
or
testb
cmc
aad
sub
aad
sahf
sub
jae
jge
jg
xorb
lods
push
lds
dec
mov
fdivrs
pop
mov
es
nop
sti
aam
dec
xchg
nop
sub
mov
jbe
mov
lret
xor
adc
push
je
loopne
mov
xor
ror
jl
rorl
mov
mov
std
iret
pop
repnz
push
ja
mov
lods
jnp
lock
jo
adc
das
imul
lcall
sub
insb
xchg
jns
leave
push
lret
leave
mov
je
mov
pop
xor
sub
out
mov
push
ret
lods
push
and
fdivl
les
rcrb
inc
arpl
jnp
daa
mov
les
cli
aaa
jns
sub
pop
mov
pop
and
daa
sbb
inc
push
push
repnz
and
xchg
adc
ljmp
jb
fldenv
lret
or
inc
cli
xlat
outsl
mov
mov
xchg
lret
rcll
mov
cmp
sbb
or
lcall
pop
lahf
and
rcll
rcll
adc
adc
stos
adc
shrl
sbb
dec
js
xchg
test
frstor
out
mov
jae
mov
in
cs
sub
outsb
mov
cmc
inc
jecxz
scas
mov
movsl
mov
cli
adc
xor
mov
les
ret
cmc
in
jge
fcomi
xchg
mov
jne
adc
push
jp
adc
xor
xchg
dec
push
ljmp
mov
aas
cli
imul
inc
shrl
iret
cmp
sub
imul
arpl
mov
xchg
and
push
mov
bound
inc
mov
jmp
shlb
or
adc
xor
mul
pop
dec
mov
mov
jbe
enter
shl
fiadds
shl
ficoml
aaa
cmc
mov
ljmp
or
mov
dec
dec
xor
jg
mov
lret
push
jne
test
adc
mov
xor
ja
cs
xchg
inc
xor
inc
rcrb
xlat
hlt
xor
cltd
cmp
es
xchg
in
pop
pop
mov
ds
jl
sub
pop
pushf
fsubs
xchg
mov
jge
pop
push
iret
mov
mov
daa
mov
push
jge
push
iret
cmp
out
iret
inc
jbe
mov
nop
sub
mov
jg
iret
add
rcrl
scas
xor
enter
mov
out
fcompl
mov
cmp
mov
jno
cmpsb
jmp
xchg
jg
jae
add
add
int3
test
mov
jae
inc
jns
pop
cmp
and
lahf
mov
mov
cmp
mov
push
jmp
xchg
jl
into
adc
mov
inc
loopne
mov
pop
into
stc
jge
cmp
mov
cmp
je
sub
mov
mov
bound
and
das
mov
cmc
push
shrb
jbe
out
xchg
adc
shlb
in
mov
sahf
lock
ret
stc
je
cmc
jo
add
iret
jp
push
or
cwtl
clc
jno
mov
enter
xor
enter
outsb
inc
mov
cltd
pop
mov
jae
cltd
mov
xor
lret
stc
arpl
jb
lods
daa
cld
lahf
add
addr16
push
lods
adc
ja
push
xchg
lret
fs
lcall
imul
jecxz
adc
xchg
inc
dec
jb
data16
xchg
push
inc
xor
inc
test
sar
pop
imul
addb
in
mov
or
add
pop
xchg
iret
push
das
push
enter
out
or
jecxz
je
gs
ds
or
add
cmp
adc
dec
inc
nopl
leave
xchg
ret
iret
aaa
jge
adc
call
add
xorb
dec
fwait
mov
fldl
pop
xor
shll
cwtl
je
mov
jbe
sub
popf
loop
cmp
je
jno
xchg
xor
jle
fmuls
test
mov
jmp
fldlg2
mov
push
mov
mov
or
mov
and
and
pop
xchg
jno
sti
mov
pop
pop
sbb
add
push
mov
xchg
mov
mov
imul
loope
push
mov
shlb
popa
adc
jle
jb
lock
scas
dec
sbb
andl
add
mov
imul
jb
aaa
dec
pop
rclb
push
rol
mov
lret
lret
xchg
nop
inc
sbb
xor
jb
inc
xchg
fs
xor
xchg
adc
test
repnz
scas
dec
movsl
and
cmp
and
mov
add
xor
xchg
cmc
inc
lock
fwait
subb
fidivl
aas
and
dec
sub
jle
arpl
cmc
lea
shlb
push
arpl
mov
fcmovbe
adc
mov
xchg
in
sarl
dec
pop
xchg
adc
pop
shrb
xchg
push
in
pop
lret
dec
xor
add
int3
cmp
sbb
sar
cmp
fcoml
ret
and
dec
or
cmpb
mov
aaa
jp
xchg
inc
imul
jo
xor
pop
mov
clc
hlt
adcl
xor
imul
add
pop
xor
decl
dec
ret
mov
jmp
mov
pop
out
hlt
pop
fcmovnb
pop
push
ret
imul
inc
mov
push
cmp
adc
das
mov
jns
xor
mov
in
mov
dec
daa
mov
xor
mov
movsl
hlt
movsl
cmpsb
test
enter
add
loopne
fdivp
mov
test
mov
push
cmp
push
lret
xchg
xor
out
pusha
jb
jbe
mov
fcmovnbe
addl
pop
jne
adc
sarl
jbe
mov
call
lea
pop
mov
cmp
cwtl
jge
mov
pop
rorl
jbe
ret
mov
push
inc
inc
daa
out
jns
cmp
push
xor
mov
loope
pop
mov
xor
sbb
movsb
dec
mov
in
fcoml
pop
repz
movsl
out
sub
inc
adc
lcall
xchg
rcll
add
lea
lret
xor
adc
jns
sbb
imul
push
mov
push
cmp
jb
lahf
cs
adc
xchg
mov
ficoms
xchg
outsb
cmp
push
mov
into
insb
cld
inc
loop
sbb
lock
push
jp
out
je
mov
les
xchg
mov
xchg
sarb
push
ret
ds
mov
jne
rcl
cmp
mov
mov
nop
mov
cmp
xchg
add
xor
scas
shlb
nop
xor
push
mov
pushf
xor
into
inc
mov
pop
mov
mov
mov
push
rclb
or
inc
dec
nop
js
inc
push
movb
dec
xchg
jbe
push
cmp
cmp
and
divl
pop
mov
lcall
stc
adc
repnz
loop
jp
cmpsb
cli
xchg
inc
add
and
lds
icebp
push
test
jle
cltd
into
imull
fcoms
rolb
lcall
nop
adc
sub
xorb
adc
cltd
test
test
and
cmp
jno
lret
sbb
mov
jne
ds
jge
sbb
cwtl
shlb
subl
std
push
ljmp
lock
cmpb
and
cmc
dec
fmull
aam
push
jb
xor
sahf
fimull
clc
fistl
mov
adc
bound
dec
mov
jo
inc
shlb
mov
adc
mov
mov
adc
sub
sbb
fnstenv
je
mov
and
aad
call
pop
notb
arpl
repz
jb
pusha
xchg
mov
loop
mov
jmp
cli
jae
loopne
push
stc
mov
cmc
mov
push
and
pusha
jp
mov
and
icebp
sti
mov
or
sub
mov
jb
xor
mov
mov
or
sub
or
sbb
sarl
push
ret
cmc
and
mov
xor
popf
aaa
add
inc
cwtl
jg
dec
lods
aam
in
dec
leave
lahf
sbb
mov
aad
mov
jp
lcall
cli
pop
or
in
mov
mov
dec
adc
mov
mov
push
std
lcall
cmc
repz
testb
cli
mov
fs
ja
test
int3
sbb
idivb
imul
inc
movsl
mov
mov
popa
push
test
or
pop
hlt
xchg
insl
push
dec
and
add
cmp
mov
fs
jmp
xchg
stos
mov
xchg
or
inc
pop
sub
inc
add
fst
sub
stos
xchg
dec
mov
mov
scas
test
pushf
jmp
ret
pop
loop
int3
push
and
scas
out
fcomps
fwait
shl
and
pop
les
dec
mov
xor
mov
dec
adc
cld
not
xchg
faddp
les
pop
stos
icebp
lret
mov
add
into
xchg
jmp
inc
jns
mov
xor
push
push
mov
xlat
pop
fwait
or
hlt
mov
adc
daa
add
shll
mov
aam
js
lds
rorl
inc
hlt
mov
jne
fdivrs
ret
pop
push
push
lcall
cmp
loop
into
mov
fdivrs
leave
dec
clc
cmp
jle
outsb
jg
lock
xchg
mov
mov
dec
int
lret
inc
dec
push
and
aaa
sbb
mov
mov
xchg
xlat
sbb
adc
imul
xchg
cwtl
xlat
inc
jmp
rcrb
dec
mov
outsb
mov
movsb
inc
xchg
aas
sbb
mov
jbe
shl
jl
scas
hlt
lahf
jbe
or
adc
std
xor
jmp
push
add
fcmovu
xor
xor
inc
push
or
mov
xlat
cmpsb
ss
push
inc
ja
inc
or
ja
pop
pop
lock
ljmp
lods
daa
clc
cmc
jl
lahf
or
fimull
in
mov
push
out
inc
aam
rdtsc
nop
cmp
popf
in
jle
rcrb
cmpb
int
das
js
stos
lea
mov
inc
rcll
or
repnz
scas
mov
and
cmpsl
ja
sub
bound
cmc
dec
imul
scas
imul
icebp
xor
mov
nop
clc
sub
push
nop
xchg
jecxz
pusha
jmp
lods
fwait
push
mov
pushl
mov
lcall
mov
mov
fdivrl
add
ljmp
mov
adcb
xor
movsl
sarl
jb
push
xor
xchg
mov
xor
outsb
and
je
jb
xchg
mov
frstor
iret
movsl
xchg
push
xor
dec
jmp
push
dec
cmp
inc
xchg
xor
and
pusha
xor
mov
dec
cmp
inc
cmp
xchg
mov
mov
mov
lods
push
movl
jp
push
repnz
aaa
pushf
inc
aaa
pop
lret
xor
xor
dec
pop
cmp
js
mov
dec
mov
mov
movsb
cmp
mov
push
mov
inc
adc
push
lds
dec
ret
jno
xchg
inc
aaa
fidivs
insl
mov
mov
movsb
rorb
pop
mov
cld
int3
movsb
push
xchg
mov
mov
jno
jecxz
fmuls
icebp
push
ja
mov
xchg
fcompl
mov
jns
or
jg
mov
sbb
mov
jle
loopne
or
push
pop
loope
add
arpl
hlt
mov
clc
cmp
fs
xchg
fmuls
or
hlt
mov
das
mov
mov
jp
pop
negb
lock
fnsave
cmpsb
push
ss
imul
mov
xchg
sbb
sub
sub
push
lock
push
and
in
pop
movsb
inc
mov
inc
pusha
pop
cmpsb
test
addr16
sub
ror
xor
xchg
call
sbb
jne
jge
cmp
push
xchg
in
xor
xchg
jo
mov
sbb
xchg
and
shl
pop
jge
fwait
add
jne
jns
jge
dec
xchg
jg
push
xchg
jge
pop
icebp
sti
inc
addr16
push
das
xor
cmp
mov
data16
mov
mov
cmp
add
into
cmp
int
cmp
arpl
mov
cmp
dec
pop
out
push
jge
mov
add
mov
movsb
rcr
fwait
mov
aas
insl
jge
subl
push
loopne
dec
lcall
dec
adc
lock
cmp
mov
jne
sbb
jnp
rcrb
mov
mov
fsub
lock
enter
dec
mov
rclb
mov
ss
xor
and
push
mov
cmp
mov
jg
stc
scas
fldcw
data16
mov
movsb
mov
push
sbb
into
loop
rcl
insb
out
dec
divl
popa
stc
push
adc
mov
orl
inc
fsubrp
push
pop
clc
or
lret
mov
jbe
inc
dec
inc
cmp
sbb
xor
gs
vpsrlq
and
add
push
scas
out
punpckhbw
stos
mov
inc
xorl
mov
push
cmp
jecxz
dec
adc
jg
arpl
arpl
inc
jbe
mov
push
adc
repz
jb
mov
jne
in
mov
inc
aaa
inc
arpl
jb
cltd
lret
cmp
pop
pop
inc
rolb
cmpl
xchg
mov
imul
mov
arpl
pop
cltd
jge
arpl
sub
cltd
mov
push
je
cmc
push
sbb
fdivr
in
inc
and
push
add
cld
push
cmp
jns
or
inc
pop
sbb
sub
mov
ss
mov
xchg
insb
icebp
jp
ss
sub
arpl
mov
xor
jl
dec
jb
mov
fsubrl
jge
mov
fwait
lds
cmc
adc
xor
mov
movsl
clc
das
je
jl
mov
push
inc
cmp
inc
mov
mov
mov
jbe
pop
push
push
cltd
dec
push
movsb
xor
pop
mov
mov
mov
movsb
jb
ds
cli
xor
push
pop
shrl
cmpsl
mov
xchg
cli
and
mov
sub
pop
cmp
lcall
add
xchg
xor
jno
or
add
imul
and
nop
adc
test
add
cwtl
adc
pushw
aam
mov
test
push
adc
push
mov
scas
lcall
jno
inc
jp
cmp
and
ret
inc
hlt
cmp
jge
enter
sbb
dec
mov
mov
xchg
incl
mov
mov
aas
mov
xor
add
mov
adc
adc
incb
inc
icebp
mov
bound
iret
push
inc
push
sarb
inc
into
mov
dec
mov
or
loope
mov
dec
xor
push
mov
cli
dec
mov
mov
dec
sbb
jo
pop
cmp
and
adc
fsts
mov
inc
in
pop
sbb
popl
jae
stos
inc
sbb
inc
ret
dec
xchg
and
cmp
cmpsl
pop
sub
imul
call
add
xchg
repnz
aam
jb
cmp
ret
mov
repnz
pop
mov
mov
sub
adc
jo
daa
fdivrl
and
rclb
mov
xor
jle
pop
mov
das
sahf
repnz
ss
mov
adc
or
clc
repz
ds
add
add
leave
daa
inc
jp
mov
and
sti
scas
mov
mov
xchg
arpl
mov
push
inc
mov
pop
or
repnz
mov
mov
mov
aaa
xchg
inc
pop
add
sbb
imul
jae
mov
push
je
dec
jl
inc
inc
adc
push
cmp
xchg
xor
mov
enter
sub
and
cmc
iret
rolb
push
bound
jg
mov
jle
daa
mov
in
add
in
std
enter
adc
sub
clc
push
ret
je
jle
xor
inc
xchg
mov
push
xor
ss
pop
ret
and
inc
add
hlt
and
aam
adc
jle
jmp
clc
and
sub
stos
jne
mov
sbb
xor
rcrb
push
jge
or
or
xor
ss
xchg
adc
mov
or
mov
mov
stos
test
arpl
fisubrl
sub
jae
rcl
out
cmc
stc
in
inc
aam
inc
adc
push
sahf
stos
lea
xchg
adc
das
push
mov
rclb
mov
stos
push
enter
mov
in
jo
clc
push
nop
push
sbb
mov
bound
stc
popl
push
jnp
aas
aas
mov
ret
xor
mov
add
jns
jle
shrb
mov
push
jno
iret
jge
adc
rclb
add
xchg
jae
mov
xor
repnz
cli
push
push
rcr
movsb
jno
mov
fs
xor
pop
repnz
adc
ret
mov
popf
int
dec
jb,pn
push
out
cli
mov
fcomp
push
and
sarb
fnstsw
pusha
shlb
jp
dec
mov
mov
add
mov
jp
mov
nop
adc
and
mov
inc
loope
or
jp
jbe
cmp
mov
dec
mov
cmp
add
aaa
nop
cmp
xchg
dec
mov
in
insl
jb
mov
sbb
aaa
js
cmp
inc
aaa
fists
inc
je
mov
das
xor
movsl
xchg
cmp
push
lea
jno
fdivr
add
cmc
cmpsl
adc
addr16
test
mov
fidivs
enter
cmp
mov
stos
xchg
sbb
jb
xor
pop
lahf
cmp
fdivr
ds
lret
mov
dec
push
xchg
sbb
insb
add
sbb
jo
dec
push
pop
and
stc
or
lret
push
xchg
mov
dec
cmpl
mov
jmp
adc
aam
mov
enter
repnz
and
inc
mov
inc
push
adc
fnstcw
std
jbe
add
imul
neg
dec
fwait
cmp
clc
test
mov
arpl
jno
cmp
test
test
cmp
mov
jp
and
imul
cmc
lcall
mov
mov
xor
adc
xor
shl
sub
icebp
imul
lret
ror
addr16
inc
and
xchg
dec
outsb
jns
in
mov
rclb
pop
fists
push
rcrl
mov
mov
fadds
ret
mov
mull
adc
cmp
cmpl
sbb
out
mov
mov
push
aaa
repnz
aaa
add
mov
fistpll
mov
stos
jnp
lea
aas
repnz
pop
ss
je
cmp
cmp
inc
jmp
cmp
xchg
repz
push
ss
push
dec
lcall
rorb
xchg
ret
mov
shlb
mov
push
push
iret
push
mov
ja
inc
cmp
addr16
xchg
sbb
cmc
shll
and
sbb
orps
faddl
repnz
std
mov
sbb
cmp
sbb
jae
hlt
in
inc
xchg
push
mov
pop
adc
mov
mov
sarl
inc
mov
pop
call
dec
push
push
aaa
repnz
push
push
mov
jnp
xor
addr16
aad
xchg
cmc
loop
and
add
in
or
repnz
cmpsb
mov
push
push
jo
repnz
mull
shrb
mov
loopne
xchg
xor
cmp
dec
mov
in
and
push
roll
inc
push
leave
repnz
jl
fldcw
pop
int3
mov
or
loop
push
push
jge
jns
mov
cmp
lds
jbe
mov
mov
xchg
mov
or
lea
int
push
xor
out
or
push
idivb
sti
vmwrite
ud2
or
gs
into
jle
inc
loop
inc
pop
jno
leave
in
adc
mov
mov
push
aas
inc
inc
adc
lcall
dec
shrb
mov
mov
jl
ss
adc
inc
or
mov
popa
push
or
mov
pop
jmp
jmp
cmc
mov
ss
out
jne
das
push
inc
mov
fs
xor
or
pop
mov
rcrb
dec
jnp
mov
pop
std
pushf
into
mov
popa
and
and
arpl
pop
push
inc
or
iret
mov
dec
pop
mov
xor
aas
pushf
inc
or
outsb
jnp
dec
and
shlb
push
inc
sbb
jae
cmc
stos
test
sub
mov
push
add
in
je
test
adc
or
mov
dec
jae
mov
mov
sub
ret
enter
cs
xchg
mov
cmc
jno
dec
cmpsb
iret
outsl
cmp
mov
into
and
js
mov
test
lahf
jae
cld
xchg
push
xchg
mov
jb
mov
pop
ret
add
xchg
push
push
fwait
xor
cmp
mov
jnp
ret
arpl
adc
pop
jge
fcmovne
xchg
mov
fistpll
mov
add
push
mov
adc
mov
xchg
fdecstp
xchg
fdivr
xchg
pop
inc
cmp
test
inc
dec
ret
je
fistpl
fidivrs
mov
out
xor
sub
mov
sub
mov
jp
sub
mov
leave
ds
leave
dec
fs
int
out
pop
shlb
mov
and
sti
jae
xchg
xor
lret
fwait
mov
fdivl
imul
ret
fildl
pop
push
movsb
jecxz
adcb
aad
jecxz
dec
js
mov
mov
mov
scas
lds
lret
lret
xor
rolb
sti
cwtl
xchg
in
test
sbb
jb
push
icebp
and
push
pusha
sbb
inc
incb
mov
call
clc
pop
test
bound
iret
aas
stos
shll
mov
in
mov
cmpsl
sbb
or
pop
inc
push
xor
mov
push
je
les
and
adc
xor
cmp
cmp
inc
bound
or
stos
xor
jl
jl
or
rcrl
xor
fisttps
jl
clc
mov
std
clc
ret
jmp
ds
dec
mov
push
shlb
in
push
je
ret
pop
clc
cmc
inc
push
pop
popl
enter
ja
iret
mov
sbb
int3
pop
adc
xor
lcall
jae
stos
add
push
xchg
mov
mov
aad
jbe
and
push
sbbl
fucomi
lret
xor
lret
scas
push
loopne
jae
mov
dec
adc
insb
xor
movsb
cmc
rcl
jnp
ds
push
lcall
mov
and
aaa
pop
or
mov
and
xor
jmp
mov
repnz
jl
jl
sarb
mov
push
shrb
mov
es
in
inc
clc
loop
cld
inc
lcall
icebp
jae
push
mov
out
lcall
jno
cmc
pop
jle
je
js
idivl
add
hlt
fisubl
xchg
sbb
es
jb
adc
int3
cmp
je
scas
xlat
mov
jo
inc
es
xor
pop
mov
cmp
outsb
jns
adc
xor
adc
cmp
cmpsb
mov
and
loopne
xor
call
xchg
rol
cmp
jle
mov
dec
mov
mov
adc
push
xor
imul
rorl
add
inc
rcrb
cmp
inc
pop
xor
ja
jecxz
data16
das
insl
in
push
jb
jb
jb
cwtl
fcmove
rcl
popf
adc
mov
out
mov
popa
iret
dec
vsqrtss
loop
sub
xchg
mov
jb
ret
push
inc
loopne
jle
scas
inc
inc
insl
ret
popa
cmp
push
mov
jle
mov
inc
xchg
fdivrs
xchg
cwtl
movl
stos
in
mov
js
fstpt
or
xlat
mov
mov
cmp
aas
add
loopne
xlat
sbb
mov
xor
and
xchg
lock
pop
in
fidivrl
xor
jnp
stc
hlt
sbb
inc
mov
xor
mov
ret
mov
notl
jo
cmp
add
jae
jl
nop
aad
mov
es
ret
arpl
pop
ret
jecxz
pop
shlb
add
pop
mov
sbb
mov
cmp
xchg
dec
incb
push
ljmp
dec
mov
in
arpl
repnz
jp
mov
hlt
lcall
in
flds
faddl
jae
mov
int
or
movl
ss
jmp
dec
mov
pop
xchg
data16
popa
jecxz
adcb
mov
mov
ret
sbb
movsl
lret
je
scas
push
mov
adc
test
lock
sti
mov
ds
adc
lods
negl
xor
mov
pop
cld
decl
push
arpl
mov
imul
xchg
cld
xchg
sub
add
lock
daa
cmp
jo
mov
add
cltd
iret
aaa
push
outsb
mov
jnp
lds
mov
ret
out
push
jmp
les
pop
mov
pop
in
lods
xchg
lret
cmp
lock
into
ds
push
push
mov
test
mov
or
loopne
out
xchg
cmp
repz
mov
and
pop
in
inc
mov
lahf
rol
adcl
int
mov
mov
sbb
jb
xchg
sbb
fs
jg
cli
in
xchg
addl
xchg
xchg
or
mov
adc
xchg
cmp
cmpsb
jnp
jno
addl
mov
in
mov
ret
inc
and
xor
stos
xor
and
adc
lock
or
mov
or
push
rolb
dec
repz
sbb
mov
arpl
dec
je
xor
lea
ljmp
mov
and
scas
mov
push
jb
fs
lock
rclb
popf
dec
das
int
lea
sbb
jle
jae
fdivl
icebp
adc
cmp
dec
lock
loope
nop
jbe
lcall
sub
push
xchg
cmp
pop
adc
xchg
test
pop
mov
dec
icebp
xor
iret
outsl
subl
mov
mov
xchg
adc
jp
push
inc
adc
jne
jo
fistpl
incb
mov
xchg
xor
or
xor
into
mov
mov
xor
dec
dec
les
fwait
adc
jg
mov
mov
popa
cmp
xor
dec
dec
mov
cmp
mov
gs
pop
into
mov
sub
dec
xor
cs
into
mov
xor
scas
jno
mov
inc
inc
sbb
test
rcr
or
lods
rorl
iret
cmp
mov
aad
and
and
popa
icebp
mov
out
movsb
or
push
cltd
dec
inc
nop
je
jbe
in
pop
aas
sub
mov
insb
fdivr
jp
dec
dec
stc
xchg
lods
test
cmp
sub
cmp
sub
mov
mov
js
mov
mov
jg
mov
mov
hlt
mov
jg
mov
sub
ret
xchg
adc
jl
inc
je
test
addr16
ret
sub
push
mov
aam
xlat
in
cmpsl
jg
les
mov
sub
and
insl
lds
inc
out
test
jo
mov
cmp
inc
out
ret
aam
dec
xor
int
lea
repnz
sub
pop
int3
mov
lret
mov
mov
cmpl
in
jle
push
mov
shlb
mov
aas
pop
sub
sub
sarb
arpl
loope
jo
mov
xor
push
mov
mov
sbb
push
mov
fidivrl
sbbl
mov
push
xchg
sahf
rclb
xchg
mov
roll
inc
es
test
cmp
sub
pop
insb
into
mov
lea
cs
cmc
fcomps
adc
data16
adc
enter
das
or
add
jmp
in
xor
lret
lds
dec
int3
cli
adc
out
lds
int3
mov
and
mov
bound
jb
xor
cmp
test
jmp
cwtl
std
adc
inc
xor
jo
lahf
sub
dec
cmp
inc
mov
inc
push
sub
or
or
mov
xor
push
jg
into
jnp
adc
sahf
jp
lods
inc
aaa
pop
mov
inc
pop
fstpt
xor
rcr
mov
mov
sub
inc
loope
ljmp
leave
fisubrs
ss
pop
ljmp
xor
xor
js
cmp
inc
in
inc
mov
cmc
mov
xchg
jp
imul
xchg
cmp
mov
iret
aad
rorb
movb
sti
insb
enter
out
lods
dec
xchg
xorb
sbbb
mov
mov
js
fmulp
leave
clc
jl
inc
jae
xor
js
sbb
and
rclb
inc
js
lea
pop
mov
fsubs
mov
gs
sub
in
cld
xor
push
loopne
inc
inc
mov
mov
jnp
push
inc
movsl
jnp
out
js
cld
pop
xchg
sbb
adc
jl
test
push
outsb
xor
mov
into
jnp
xor
and
daa
lea
sahf
out
mov
iret
and
test
cmp
clc
scas
call
jnp
rclb
xchg
je
repz
fistpll
jnp
push
pop
adc
insb
cmc
xchg
in
cmp
shlb
shll
insl
mov
jbe
mov
cmc
cmp
out
mov
lahf
xor
movsl
cli
mov
or
dec
xchg
icebp
mov
dec
sbb
fdivrl
add
cmpsb
int
push
xor
dec
cmp
jae
lcall
pusha
xchg
mov
mov
cmp
cmc
push
cmpl
aas
aad
cmc
sub
outsl
stc
mov
jno
mov
shrl
jns
pop
cltd
sbb
les
mov
xchg
xor
mov
dec
or
cmp
sti
dec
cmpsl
js
mov
popf
sub
in
add
jne
in
push
sub
push
fcoms
mov
dec
mov
jecxz
jbe
rcl
xchg
mov
xorl
notl
dec
xor
jp
subl
addb
push
int
cmp
mov
mov
mov
cli
mov
xchg
dec
mov
mov
sarl
xor
popa
int3
xor
mov
enter
into
dec
mov
dec
add
ja
pop
daa
insb
jmp
stos
mov
rol
dec
push
mov
xor
es
jne
stos
outsl
push
sbb
ljmp
push
stos
pop
jecxz
push
lret
repnz
lods
adc
mov
pushl
mov
mov
adc
xor
inc
mov
pusha
lcall
mov
xchg
imull
pop
sbb
imul
insl
movsl
cmc
pop
and
dec
test
ret
aas
jbe
dec
lea
xchg
scas
mov
cli
aaa
out
jge
inc
icebp
orl
jnp
inc
push
mov
int3
push
stc
sarb
nop
xchg
aas
mov
aam
add
incb
or
inc
jp
mov
mov
adc
ret
mov
xor
push
into
xchg
lods
sub
packsswb
ficoml
cmpsb
mov
aas
mov
cmc
jp
inc
push
call
and
stos
std
out
lahf
std
jge
sub
add
orb
and
andl
mov
aas
xor
cmc
sub
subl
dec
in
sub
add
sar
imul
call
out
inc
dec
test
in
xchg
out
fidivl
xor
jb
push
mov
mov
and
cld
xchg
mov
mov
adc
ja
sub
cwtl
bnd
aad
idivl
sbb
xor
push
xchg
jl
pop
aaa
xor
jo
imul
pop
mov
fiadds
cmpsb
mov
loopne
mov
js
roll
mov
jg
dec
fildl
repnz
fisubl
iret
icebp
xor
sub
dec
imul
push
adc
jge
inc
cld
jp
ror
sub
iret
mov
pop
rcrb
cmp
int
movl
fnstsw
cmp
sub
sti
mov
or
cmpsl
insl
mov
arpl
je
adc
out
mov
add
lods
cli
movsb
push
test
cmpl
shr
add
cld
mov
push
test
add
call
xchg
fsubs
sbb
pop
cld
mov
inc
addl
mov
cmp
cmp
mov
or
push
xor
xchg
out
lret
push
push
mov
inc
call
mov
mov
lret
pmuludq
cltd
and
fimull
sarb
mov
mov
cmp
xor
xor
lods
mov
std
cmp
adc
mov
aad
xor
push
mov
fwait
in
mov
jp
ljmp
sub
js
lret
pop
fmull
push
and
jp
call
inc
jecxz
or
iret
cmp
cwtl
not
mov
div
jl
test
pop
ljmp
sub
adc
and
loop
sahf
mov
idivb
aaa
popf
push
jge
xor
insl
cmp
and
cmp
xor
xchg
mov
xor
mov
and
notb
mov
push
mov
and
adcb
into
cmpsl
hlt
or
lods
arpl
jp
rcll
rorb
xor
or
sbb
ja
pop
das
xchg
mov
rorb
jecxz
inc
lret
inc
out
xchg
cmp
mov
mov
inc
jle
pop
rcl
fcmovnu
inc
adc
mov
adc
xorl
pushf
cmp
mov
sbb
cmp
pop
ret
rclb
lods
pop
jne
mov
je
adc
xor
xchg
xor
jae
inc
add
pushf
and
xchg
aas
inc
cmp
into
jge
push
mov
imul
dec
jb
and
cmp
je
add
lret
fsubl
inc
cld
nop
sbb
lcall
mov
add
inc
mov
mov
mov
push
and
adc
fdiv
sarl
adc
jne
jno
imul
testl
lods
mov
lret
insl
push
pop
xchg
dec
jge
popa
mov
sbb
mov
jp
or
mov
bound
mov
popf
adc
ja
xchg
sub
ljmp
out
xchg
push
call
in
inc
add
inc
xchg
loopne
nop
sahf
hlt
sbb
lahf
pop
cmpsb
xlat
xlat
or
shlb
inc
and
mov
sub
lods
enter
mov
pop
aad
push
cmp
fsubrs
sub
pop
push
decl
mov
jae
addr16
mov
scas
das
sub
daa
pop
aas
inc
test
mov
add
pop
mov
std
push
push
cmpl
js
sti
jmp
iret
jb
jp
add
and
adc
into
insb
push
mov
and
out
dec
mov
push
sbb
call
psrlq
cmpsl
lods
pop
cmp
popa
mov
mov
xchg
das
int
inc
out
push
sarb
xchg
popf
add
shrb
lret
addr16
sub
test
mov
xchg
adc
mov
sbb
cmc
fldenv
clc
cld
xchg
ror
mov
pop
hlt
dec
jle
mov
fadd
add
into
inc
inc
test
loope
add
dec
lahf
pop
aaa
pop
or
lahf
lret
mov
cmp
clc
call
mov
sub
push
pop
out
loopne
rcrl
jp
jecxz
pop
and
leave
rcrb
data16
aad
arpl
inc
das
adc
data16
dec
dec
mov
cltd
sub
test
sbb
jmp
adc
sub
sbb
jbe
and
lret
cmp
cmp
sbb
pop
daa
inc
push
xlat
dec
cmc
pop
xor
jnp
mov
and
scas
repnz
xchg
lcall
frstor
jne
sbb
popa
dec
push
jb
xor
jmp
push
cmp
add
dec
sbb
arpl
mov
into
aad
mov
push
push
aaa
jb
adc
cmp
lar
shll
popa
add
inc
add
shrb
mov
movsl
mov
mov
cwtl
mov
idivl
mov
mov
mov
mov
jp
push
mov
in
fiadds
mov
pop
loop
ret
js
push
sbb
and
inc
out
stc
mov
inc
xchg
mov
mov
pop
push
xor
inc
in
xchg
int
inc
dec
adc
add
in
aas
loop
loopne
mov
mov
insl
dec
xchg
jl
sub
icebp
xchg
xorb
and
sti
enter
sarb
xor
jb
out
and
jns
ffree
ss
push
add
inc
ljmp
adc
xor
cmp
xchg
jle
jb
iret
pop
inc
out
je
mov
mov
jbe
jb
mov
xchg
dec
or
loope
jno
arpl
mov
je
jle
loopne
jae
cmc
jns
ljmp
dec
je
stos
jg
daa
ret
in
mov
mov
decb
sti
fistpl
push
rcl
divl
jge
jbe
les
stc
testl
pop
nop
mov
mov
dec
daa
cmp
cwtl
imul
sbb
pusha
out
push
imul
pop
lret
sbb
clc
dec
js
sub
cwtl
fildl
fsqrt
inc
out
inc
inc
mov
icebp
jbe
jecxz
cld
or
lret
pop
cmp
mov
xlat
xor
ret
jnp
stc
sub
movsb
xchg
lds
faddp
inc
dec
sbb
mov
int
lds
push
je
jne
mov
mov
dec
xchg
inc
inc
jl
xchg
pop
inc
in
dec
mov
lock
ret
cmp
push
xor
or
cmp
out
and
js
xchg
push
push
cmp
sbb
das
cmp
movsb
push
mov
ret
pop
push
xchg
jnp
into
mov
lea
adc
jmp
ljmp
lea
cmp
pop
sbb
ret
push
repnz
es
sub
sbb
mov
outsl
leave
dec
shlb
jno
mov
in
mov
iret
xchg
xor
push
enter
and
mov
sbb
les
aad
push
mov
repnz
ds
lcall
inc
xchg
clc
jp
cmp
lds
hlt
rcrl
loope
mov
inc
inc
jae
sub
cmp
push
daa
fs
adc
cmc
cmp
jb
inc
push
xchg
mov
or
mov
or
mov
jmp
push
lods
ss
pop
mov
sub
dec
xchg
sub
icebp
xor
scas
cmpb
enter
xor
in
jg
jl
pop
adcl
push
adc
cmp
mov
mov
cmp
push
cmc
mov
ja
int3
orb
push
dec
jb
jp
cmpsl
add
cmpsb
sbb
dec
dec
mov
sbb
mov
jle
adc
add
fstpl
xor
test
scas
xor
hlt
xchg
cmpl
dec
xchg
dec
xchg
ret
mov
jae
ljmp
xchg
pushf
sbb
fcmovb
push
aad
ja
xor
mov
shrb
inc
adc
ja
fsub
and
test
sub
lcall
and
mov
aam
adc
es
sub
loopne
test
jne
ljmp
sub
das
inc
jbe
xor
mov
jno
daa
and
xchg
push
jns
aaa
pop
and
iret
or
and
stos
fs
pop
cltd
jae
sbb
mov
mov
inc
push
sbb
fcmovb
jae
mov
repnz
adc
or
mov
repnz
mov
xor
xlat
xchg
arpl
mov
or
shrl
gs
out
outsb
or
leave
xchg
cmpsl
xor
and
mov
jmp
iret
push
testb
repnz
adc
pop
sub
sbb
clc
dec
popa
pop
and
jae
stos
mov
stos
adc
push
xor
sub
xor
mov
mov
call
push
icebp
aad
xlat
inc
repz
dec
sbb
xor
mov
mov
mov
xor
sub
mov
int
fwait
and
jnp
mov
jb
daa
push
and
iret
xchg
mov
loope
pop
ljmp
xchg
xchg
mov
pop
pop
jbe
mov
inc
or
push
in
or
add
call
fiadds
lcall
aaa
inc
cmp
fldl
inc
shll
xor
inc
aam
mov
dec
xorb
cmp
adc
fistpll
lods
sar
push
lcall
adc
cmp
divb
push
mov
mov
push
mov
mov
jo
lock
fnstsw
add
jmp
jle
mov
das
mov
push
aam
cmpsb
inc
xor
xorl
lcall
ret
and
subl
sbb
mov
arpl
dec
inc
int
dec
xchg
es
fs
arpl
repnz
xor
das
xor
int
pop
jo
mov
ds
dec
nop
mov
cmp
rorb
lea
sbb
movsb
adc
add
je
cs
jmp
cmp
rol
or
out
pop
arpl
mov
outsl
std
addr16
cmc
and
cmpsb
push
leave
ja
ss
push
arpl
adc
xor
ret
filds
call
sbb
fs
mov
mov
sti
divl
dec
cmp
rcr
pop
xchg
test
std
jp
push
jle
mov
jo
mov
pop
adc
test
lcall
jp
xchg
dec
sbb
mov
ss
out
mov
xor
aaa
test
das
xorb
pop
xchg
cmc
or
movsl
add
adc
add
sbb
aas
lea
mov
and
hlt
jb
push
push
addl
inc
inc
adc
mov
shll
inc
pop
icebp
ja
mov
std
mov
in
inc
sbb
mov
cmc
dec
mov
jbe
out
leave
imul
adc
push
adc
adc
int
jp
push
xor
dec
cmp
int
stc
jle
mov
xor
dec
dec
mov
adc
leave
inc
ret
xor
int3
insb
inc
xchg
xchg
adc
rclb
fwait
push
setl
or
pop
je
mov
out
outsl
inc
mov
pop
mov
jae
mov
lret
cmp
dec
inc
insb
push
mov
mull
push
dec
jo
iret
mov
cmpsb
enter
mov
or
pop
xor
hlt
add
or
adc
sub
pop
test
lods
das
subb
pop
sbb
pop
sbb
and
movsl
mov
pop
loopne
push
outsb
mov
repz
aad
test
pusha
and
cmp
cs
sti
adc
mov
push
cwtl
push
stc
adc
push
push
xor
push
iret
fldcw
test
mov
sub
push
jge
outsl
pushf
push
call
mov
in
sbb
aaa
mov
and
sbb
cmp
jb
pop
jge
es
lret
jb
xor
cmp
sub
je
insl
and
es
lods
push
dec
xchg
pop
jp
pusha
int
pop
dec
cmp
movsb
or
sti
lahf
adc
jg
loopne
adc
and
push
xlat
xchg
sbb
jl
mov
inc
outsl
jb
and
mov
and
push
mov
sbb
jno
xlat
sub
test
cmp
aad
and
outsl
push
sbb
xor
fstl
xor
pop
out
mov
lcall
sarb
xchg
mov
lret
fcmovbe
xchg
imul
cmc
subl
and
mov
into
adc
jg
push
mov
xchg
sbb
xor
dec
enter
xor
push
sbb
xchg
inc
pop
aam
es
les
dec
xor
mov
xchg
imul
and
movsl
xchg
lret
lret
jbe
repnz
xchg
rorb
pop
xchg
imul
cwtl
aam
lret
mov
jne
sbb
dec
out
int
fs
repnz
cmp
inc
add
mov
pop
xchg
out
adc
loop
jns
mov
repnz
mov
adc
sbb
pop
push
mov
mov
and
stc
push
outsb
inc
mov
sbb
insb
divl
xchg
lds
cmpsl
mov
add
pop
mov
sbb
jecxz
into
adc
pop
and
cmp
push
insl
fistpl
std
pop
cmp
imul
mov
fildl
popf
mov
shr
out
into
and
dec
and
xor
je
jg
lds
lock
mov
call
xor
cwtl
mov
mov
int
jg
hlt
les
xchg
dec
mov
jle
fdivs
push
xor
ss
mov
cmpsl
mov
mov
loop
in
push
push
mov
pop
imul
pop
mov
sub
and
mov
enter
push
jmp
popa
sbb
mov
jno
cltd
push
sbb
cmp
inc
dec
xchg
xlat
inc
jp
std
mov
mov
inc
jb
outsb
mov
aaa
arpl
rcll
out
loop
add
sbb
mov
stos
in
cmp
jb
jg
or
andb
out
xchg
jno
mov
das
xor
sub
inc
lcall
inc
clc
xchg
cmp
call
es
cmp
sub
in
fwait
dec
mov
out
push
sub
bound
insl
sbb
stos
icebp
ficoms
gs
test
sbb
push
xor
idivb
sub
js
mov
sti
aaa
fcom
xor
rcl
push
idivl
loop
stc
loope
fisubl
jmp
pop
enter
xchg
arpl
sbb
xchg
mov
cmp
or
pop
stos
aad
shlb
adc
jge
icebp
popa
popf
and
ret
mov
inc
pop
out
test
lret
pop
jmp
xchg
jmp
xchg
aaa
aaa
cmp
xchg
lret
mov
jp
mov
mov
pop
dec
push
jae
test
sbb
adc
sahf
aam
pop
push
or
mov
and
ss
ret
pop
jge
mov
cmpl
adc
xchg
ja
mov
lds
mov
pop
ss
mov
mov
xchg
xchg
or
fs
fs
out
inc
test
xchg
xchg
mov
outsl
push
xor
push
hlt
jecxz
icebp
in
xor
int3
pop
into
sarb
mov
jb
sub
fisubrl
out
mov
mov
pop
mov
jbe
aam
dec
cmp
daa
push
jns
pop
jg
mov
clc
pop
push
push
out
adc
mov
dec
pop
or
pop
and
ss
out
out
aaa
xchg
popl
lds
sbb
add
in
mov
cmp
xchg
ficompl
mov
cwtl
fs
mov
movsb
xor
mov
icebp
push
jle
popf
ret
xchg
mov
pusha
mov
idivl
mov
out
sti
fwait
cmpsl
jge
sbb
out
or
push
xchg
imul
les
mov
push
roll
aaa
push
or
cmp
mov
leave
shr
enter
xlat
int3
hlt
xor
fimuls
ljmp
arpl
les
add
sti
mov
xor
mov
pop
mov
pusha
xor
push
or
xchg
xchg
xchg
xor
mov
mov
mov
shlb
mov
aas
iret
pop
mov
test
xor
clc
or
std
sub
shr
cmp
je
hlt
mov
mov
push
rorl
cmpsl
pop
pop
push
out
daa
xchg
xor
sarl
mov
punpckhdq
cli
jns
push
adcb
jno
test
repnz
pop
mov
cmp
push
jnp
pushf
repz
mov
push
andb
je
push
aaa
add
dec
pop
in
dec
pop
push
xor
mov
call
icebp
insb
data16
inc
adc
xlat
xchg
pusha
mov
ret
jl
shll
pop
inc
xor
lock
cs
dec
out
inc
aaa
cmc
repz
test
std
shll
fists
cmp
leave
cld
sti
add
das
sbb
pop
in
lods
jnp
jp
lea
ss
sbb
sbb
cmpsb
mov
xchg
or
gs
mov
cmp
mov
push
inc
fbstp
arpl
leave
call
mov
mov
and
jmp
nop
push
lea
imul
fcompl
bnd
sbb
rcrb
adc
push
cmp
rcrb
push
xchg
flds
mov
push
push
lea
hlt
xchg
repnz
sub
or
add
ljmp
lret
repnz
frndint
fsubrl
adc
jge
mov
sub
jns
dec
mov
adc
cwtl
inc
pop
lret
enter
movsl
inc
sub
scas
xorb
mov
shll
jno
mov
pop
movsl
bound
mov
fwait
sbb
stc
adc
fxch
adc
mov
push
fidivrs
push
stc
jo
xor
mov
shrb
cltd
sbb
push
sbb
xor
cmp
cltd
icebp
push
lds
loope
in
hlt
jmp
repz
jnp
lock
xor
xchg
xor
lcall
add
sbb
or
out
xchg
fisttpll
sahf
pop
shll
idivb
movsl
shlb
xchg
lock
lea
pusha
cmpsb
stc
mov
lock
sarl
pop
lds
cmp
jne
and
ds
fnsave
push
pop
mov
imul
repnz
imul
sbb
cmc
cmp
jbe
clc
xor
fistpll
sbb
and
cmc
mov
jnp
pop
add
push
adcb
xchg
fwait
and
in
hlt
push
mov
cld
into
lock
jno
mov
mov
dec
cmp
push
mov
test
cmp
xlat
shlb
out
mov
cmp
xor
dec
jns
shl
add
in
gs
dec
je
sub
sarl
pushf
fs
adc
or
xor
inc
dec
iret
pop
dec
cmc
loop
lcall
jns
adc
jb
cmc
cmp
ret
jbe
mov
sqrtps
inc
mov
mov
bound
in
jp
ss
adcl
and
add
ret
xor
dec
out
aaa
mov
mov
cmpl
cmc
aaa
push
xchg
xchg
test
rorl
mov
jns
inc
mov
icebp
cmp
shlb
mov
insb
fs
dec
mov
mov
push
rorl
xor
jb
sbb
cli
xchg
mov
repz
mov
xchg
das
xchg
adc
jb
and
loop
xchg
cmpsb
mov
outsb
push
mov
dec
outsb
and
mov
shrb
ret
mov
pop
out
push
inc
xor
push
outsb
loope
xchg
mov
jns
cli
mov
dec
insb
push
xchg
push
test
shr
shlb
and
jno
outsl
in
xor
mov
inc
push
xor
push
shlb
mov
out
fs
mov
xor
xchg
push
lods
in
les
rol
jle
arpl
cli
addr16
and
cmp
inc
adc
std
add
xorb
gs
push
rcrb
insb
pop
sbb
inc
mov
dec
fwait
js
clc
jp
js
shr
inc
lret
in
mov
push
or
mov
mov
incb
mov
shll
push
in
mov
mov
loope
cmp
adc
add
cmp
jl
xchg
insb
ret
push
je
into
daa
mov
rclb
jns
aas
push
jle
lret
xchg
mov
shl
adc
bound
pop
add
or
jl
push
imul
mov
jl
jns
adc
bound
mov
push
add
xor
call
pop
rcl
popa
fwait
jns
test
adc
xchg
ljmp
loope
enter
js
rclb
cwtl
pop
push
xchg
ret
aaa
inc
es
push
ret
repnz
xor
push
xchg
rol
nop
icebp
sbbl
or
or
clc
push
push
loope
mov
mov
cmp
add
int
adc
inc
pusha
fdivr
jns
dec
mov
xchg
push
ljmp
push
adc
into
imul
and
mov
js
call
push
or
xor
pusha
repz
into
push
pop
adc
hlt
push
inc
mov
insl
xchg
xchg
insb
mov
adc
ficompl
ret
mov
cmp
add
iret
lea
fs
mov
clc
jp
ss
cli
or
mov
xchg
ljmp
jge
mov
rorb
mov
xor
cmp
pusha
push
xor
push
ret
adc
mov
clc
add
sahf
dec
mov
lea
popa
fs
enter
push
lock
inc
dec
addl
cmp
mov
dec
push
dec
hlt
sarb
sub
imul
mov
out
bound
fsts
sar
xor
lock
insl
sub
mov
inc
cmp
ret
or
inc
in
in
ret
xchg
das
iret
int3
add
mov
push
mov
dec
repnz
rclb
xor
mov
inc
inc
xor
mov
ljmp
jb
jbe
lods
mov
mov
popa
inc
push
addl
mov
ret
push
movsb
outsb
cltd
testl
pop
pop
cmp
mov
popf
xchg
push
mov
mov
cmpsl
mov
and
cmp
insl
adc
daa
push
inc
dec
fwait
insb
int
dec
push
xorb
std
pop
out
xor
cmpsb
sbb
cmc
xlat
aaa
mov
mov
pop
jp
popa
clc
cmp
arpl
daa
shl
fcompl
loop
loop
xchg
rolb
repz
inc
xor
mov
push
xchg
xor
mov
mov
mov
push
shlb
xchg
lahf
rcl
xor
pop
push
sti
add
loopne
push
std
aad
xor
in
inc
cmc
or
lods
jnp
movsl
inc
orb
rclb
sub
add
add
sti
lahf
jp
sarl
inc
sti
repnz
lret
ss
xor
sbb
add
bound
insl
movsl
mov
ret
fcoml
pop
add
adc
into
idivb
jbe
cli
cmp
cwtl
in
popf
stos
xlat
push
mov
mov
loopne
adc
outsb
cltd
and
test
mov
mov
cmp
cmp
lock
cmp
mov
pop
repnz
adc
fs
push
jb
xor
xchg
cmp
shlb
lcall
cmp
mov
stc
or
daa
mov
pop
shl
sub
ljmp
rcrl
and
lods
mulb
xor
hlt
xor
jbe
push
push
mov
es
into
mov
addr16
mov
push
mov
and
sbb
ret
mov
ja
arpl
and
icebp
enter
mov
iret
pop
daa
dec
jp
adc
add
repnz
xchg
aas
rcrb
mov
mov
push
popf
adc
mov
push
fstpl
mov
mov
loope
mov
xlat
sbb
adc
daa
stc
dec
test
repnz
sbb
out
xchg
rorb
lret
jg
push
repnz
cmp
lcall
mov
sbb
jl
mov
cmp
ret
mov
cmc
jl
lahf
test
lahf
cmp
stos
out
sahf
adc
push
dec
repnz
push
inc
push
pop
jae
push
xchg
mov
xor
push
cmp
inc
pusha
inc
jmp
mov
test
lahf
xchg
jp
adc
cmc
repnz
divb
mov
cmp
out
stc
pop
push
jnp
fnsave
cmc
xchg
dec
xchg
out
shl
and
bound
jmp
adc
lahf
xchg
mov
les
cli
push
stc
jae
ss
addr16
mov
and
dec
mov
nop
or
inc
loopne
clc
mov
pop
jb
jb
push
cmp
xchg
mov
xor
push
inc
mov
mov
shlb
cmp
xor
mov
inc
push
out
push
add
adc
jo
push
pop
je
xor
mov
push
mov
ss
dec
cmp
cld
push
xchg
cmp
cli
jns
xor
push
addr16
sub
cmc
add
dec
jnp
add
pop
push
sarl
push
cmp
mov
push
rcrb
leave
mov
daa
inc
jmp
xchg
jnp
sbb
dec
iret
dec
xor
rol
push
mov
mov
cs
mov
sub
add
jecxz
insb
aad
mov
push
push
mov
mov
nop
xor
push
icebp
push
push
rol
adc
mov
mov
push
ret
inc
andb
dec
ret
mov
mov
mov
dec
adc
mov
push
pop
xor
jge
lcall
jb
mov
cmp
dec
popa
ss
push
fnsave
inc
fwait
mov
inc
pop
cmp
in
orl
lods
dec
movsb
push
pop
xchg
jae
mov
xor
mov
jae
sbb
push
pop
cmp
js
mov
xchg
add
mov
test
sbb
fcmovnbe
pop
push
aad
xor
or
pushf
cltd
push
popf
shr
mov
gs
stc
xor
divb
mov
cmp
cmc
imul
aaa
fisttpll
pop
arpl
je
push
xchg
push
inc
icebp
ljmp
sub
cmp
inc
mov
int3
sub
mov
mov
cmp
shlb
ret
adc
inc
jl
pop
es
sub
in
mov
addr16
sbb
dec
xchg
add
cmc
scas
xlat
lea
mov
add
adc
push
cli
data16
lret
adc
xchg
push
fwait
xchg
mov
loop
push
cmpb
xor
pop
xlat
adc
pushf
in
incb
jae
fstl
pop
shr
jnp
std
leave
add
xlat
jae,pt
leave
mov
popa
es
frstor
stc
jmp
jne
mov
lds
jge
addr16
pop
jbe
push
aaa
fldl
sbb
mov
mov
loope
and
push
pusha
aas
cwtl
mov
push
dec
adc
imul
inc
xor
cmpsl
inc
stc
jae
mov
das
pop
out
mov
test
xchg
jne
into
ss
lahf
in
cwtl
pushf
cld
loope
jb
xor
inc
xor
sbb
into
mov
jge
sti
push
inc
jne
hlt
loopne
push
iret
adc
mov
inc
mov
out
cli
jl
push
jae
js
repz
lret
sbb
ret
js
mov
std
mull
push
leave
mov
xchg
aam
setge
scas
lret
pop
fs
rorb
xchg
mov
testb
xchg
mov
clc
and
repnz
push
add
xchg
addr16
aam
cwtl
mov
mov
testb
test
out
and
je
sbb
lret
push
and
jns,pt
loopne
test
cltd
push
add
push
sbb
mov
cs
inc
sbbl
cmp
pop
jp
sbbl
popa
mov
sti
or
hlt
cld
pop
shrb
iret
xor
lods
test
mov
mov
bound
fs
mov
fs
sub
xor
bound
mov
xor
mov
rcrl
and
pop
rorb
into
cltd
pop
lret
sar
jae
mov
push
mov
mov
lret
fnstcw
add
in
imul
pop
dec
adcl
mov
push
push
pop
pop
out
pop
jl
addr16
out
mov
rcrb
popa
jl
adc
mov
addr16
cmp
imul
sbb
adc
cltd
pop
cmc
push
xchg
and
mov
xor
sahf
mov
inc
and
mov
xor
jae
clc
in
leave
out
cmp
insl
dec
pop
daa
jle
mov
xor
outsl
add
ret
leave
ss
lret
and
cmc
je
mov
xor
push
jns
insb
and
mov
jp
mov
fisttpll
imul
loopne
mov
mov
mov
lret
in
ror
sbb
daa
mov
mov
dec
insb
aam
push
cmp
or
dec
mov
out
dec
cmp
sub
pop
std
jl
mov
push
xchg
int3
pop
jae
push
cmc
pushf
jo
mov
jecxz
mov
pop
stc
mov
jle
jb
ret
enter
outsl
mov
pop
inc
icebp
lcall
out
repnz
je
mov
stos
inc
mov
fsubrs
jle
jb
adc
xchg
mov
js
les
movsl
clc
fidivl
cmpsl
js
cmp
lods
lcall
pusha
adc
jp
dec
clc
aas
xchg
sahf
mov
mov
dec
clc
add
xchg
and
fwait
cmpsl
iret
inc
aas
outsl
jae
nop
imulb
outsl
data16
inc
ljmp
mov
pop
add
pop
adc
push
dec
jo
pop
es
ret
pusha
mov
sub
lret
or
push
movsb
push
sub
iret
lods
or
cltd
mov
xor
jno
and
lret
aas
aam
jo
cmp
dec
mov
aaa
jl
mov
xchg
pushf
cmp
cmp
sub
lods
ret
mov
add
or
aad
lret
cmp
pop
mov
cmp
dec
int
ljmp
jle
cld
inc
adc
push
aaa
add
repnz
inc
jb
mov
pop
jl
adc
cmp
outsl
adc
leave
push
pop
mov
dec
sbb
fimull
mov
add
cmp
rcrb
inc
xchg
push
inc
push
shll
jp
mov
and
ljmp
push
jb
cmc
arpl
lret
arpl
in
test
xchg
add
pop
mov
jb
pop
jge
out
jns
xorl
sub
icebp
nop
xor
and
mov
insb
xor
mov
add
gs
mov
dec
xchg
or
mov
jb
cs
cmp
faddp
jl
lret
xlat
and
int
xchg
adcl
js
clc
aas
pushl
mov
mov
icebp
popf
and
je
push
mov
pushf
hlt
xor
push
mov
adc
cmpl
fs
iret
mov
je
xor
mov
adc
lret
jle
lea
fisubrl
loop
mov
jae
cld
lcall
je
pusha
inc
xor
sbb
aam
mov
dec
cmpl
lds
xchg
lcall
pop
sti
push
insl
push
into
pop
xchg
or
add
mov
jmp
jne
dec
adc
cmp
lahf
sti
xor
out
gs
xor
pop
aaa
rcrl
inc
mov
cmp
cmp
xor
icebp
imull
pop
inc
icebp
inc
shlb
je
pop
mov
xor
mov
cli
inc
lock
xchg
jae
sub
mov
cld
jnp
cli
jo
or
adc
loop
xor
push
stc
push
dec
dec
cmc
rclb
jae
push
push
sub
xor
push
lret
dec
xor
int3
adc
xor
dec
dec
cmp
xor
mov
xor
mov
sbbl
dec
mov
addr16
cltd
daa
jle
shlb
mov
fs
push
pop
inc
repnz
push
mov
mov
sub
cmp
out
add
jne
xor
xor
das
test
ficompl
jo
mov
push
jge
lds
ret
inc
arpl
aad
mov
xor
mov
push
cli
push
mov
jbe
mov
ret
icebp
mov
lock
fs
mov
push
inc
push
lds
ret
inc
arpl
aad
mov
xor
inc
mov
pushf
push
mov
jbe
mov
ret
ret
insb
xor
loope
lock
or
inc
mov
leave
or
ret
inc
arpl
jb
push
rcl
mov
xor
inc
mov
or
ret
inc
arpl
hlt
inc
inc
mov
nop
cltd
lret
pop
xor
add
mov
jbe
cltd
lret
xor
inc
shrl
ss
leave
mov
mov
mov
jbe
cltd
lret
xor
ret
xor
inc
outsb
lock
nop
cltd
lret
sahf
xor
add
mov
jbe
cltd
lret
xor
inc
shrl
ss
leave
mov
mov
mov
jbe
cltd
lret
xor
ret
xor
inc
outsb
lock
nop
cltd
lret
cld
xor
add
mov
jbe
cltd
lret
xor
inc
shrl
ss
leave
mov
mov
mov
jbe
cltd
lret
xor
ret
xor
inc
outsb
lock
pop
aaa
jp
leave
add
mov
jbe
cltd
lret
xor
inc
shrl
ss
leave
mov
mov
mov
jbe
cltd
lret
xor
ret
xor
inc
outsb
lock
rcll
aas
xor
add
mov
jbe
cltd
lret
xor
inc
shrl
ss
leave
mov
mov
dec
ds
cmp
cmp
jg
fistpll
ja
and
std
mov
pop
mov
pop
pop
sbb
pop
mov
push
pop
adc
push
pop
xor
pop
sub
push
sub
pop
and
ret
sub
imul
ret
sub
addr16
gs
arpl
and
popa
ret
pop
ret
pop
ret
pop
ret
pop
ret
push
ret
push
ret
push
mov
icebp
pop
mov
mov
mov
mov
mov
mov
mov
mov
divb
divb
das
imulb
sub
imulb
mov
cmp
daa
xchg
xchg
and
xchg
bound
mov
adc
movsb
int
lock
stos
mov
sbb
int
mov
mov
mov
mov
shl
iret
sti
int
lret
sub
adc
sbb
jno
xor
outsl
hlt
cs
insl
hlt
sub
imul
mov
mov
adc
loopne
lahf
inc
cmc
js
inc
cmp
pop
sahf
pusha
mov
fwait
mov
adc
jl
aad
outsb
ss
xchg
lahf
mov
xlat
js
jne
push
and
arpl
dec
test
sarb
sbb
push
jg
mov
inc
add
or
fldenv
adc
adc
nop
sbb
shll
les
push
jmp
icebp
dec
cld
fcompl
movsb
jecxz
adc
mov
mov
fcoml
push
xchg
pop
mov
sbb
sub
bound
nop
mov
cmpsl
mov
ret
jp
sub
js
cmp
std
rcll
push
pop
dec
cmp
fisubrs
je
daa
mov
cmp
mov
push
insb
mov
or
and
cmp
in
clc
ja
aaa
fistpll
jae
dec
out
ja
jae
ficompl
push
add
push
mov
test
push
ds
xor
fwait
dec
ret
inc
add
or
jb
out
popa
ss
dec
mov
ds
ja
mov
cmp
sub
dec
pop
ja,pt
pop
sub
cmp
loope
movl
lods
dec
inc
addr16
xchg
adc
iret
int
dec
mov
lds
dec
or
mov
mov
mov
dec
sbb
leave
ficoml
into
sbb
or
nop
pop
shll
cmp
shll
dec
or
nop
pop
shll
mov
push
shll
dec
or
nop
pop
shll
dec
fs
shlb
dec
or
nop
pop
shll
dec
or
nop
mov
fnsave
adc
or
nop
pop
shll
dec
or
nop
pop
shll
cmp
ficoml
into
sbb
or
nop
pop
shll
mov
push
shll
dec
or
nop
pop
shll
fidivs
repnz
sti
xor
test
xor
sbb
popf
fcompl
xor
popf
mov
enter
or
ret
inc
arpl
push
lock
adc
mov
leave
mov
mov
jo
mov
lock
push
adc
lret
and
into
inc
arpl
popa
cwtl
inc
lret
ss
mov
mov
ret
je
mov
jbe
cltd
lret
xor
inc
mov
pop
lods
mov
mov
push
shl
mov
xor
inc
aaa
jp
xchg
lret
enter
movb
je
mov
jbe
cltd
lret
xor
inc
mov
jp
xchg
mov
mov
je
mov
push
dec
das
pop
pop
rcrb
into
aad
int3
push
adc
mov
movb
je
mov
jbe
cltd
lret
xor
inc
mov
jp
xchg
mov
jnp
mov
jo
mov
sti
push
dec
das
pop
adc
xchg
ret
cs
jo
xchg
dec
aaa
and
enter
or
ret
inc
arpl
jb
push
mov
xor
cmp
inc
arpl
inc
arpl
jno
sbb
pop
inc
aaa
pushl
lret
je
mov
push
or
lods
ret
cmp
xor
inc
mov
jp
xchg
mov
mov
je
mov
push
dec
das
pop
je
push
test
mov
inc
mov
lahf
push
lret
mov
xor
mov
les
push
ret
cmp
clc
ret
inc
arpl
mov
mov
leave
mov
adc
xor
aas
xor
mov
pop
push
lret
mov
xor
mov
les
push
ret
std
rcrb
cmc
jne
sbb
sbb
aaa
adc
push
xor
ss
push
sub
ss
clc
adc
sub
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
xorl
outsl
xchg
subl
ret
pusha
push
pop
adc
pop
xor
pop
das
pop
outsb
pop
sub
pop
push
sub
pop
daa
pop
pop
and
pop
bound
pop
pusha
pop
pop
pop
pop
pop
sbb
pop
pop
cmp
mov
push
jnp
mov
mov
mov
mov
lock
loop,pn
loop
loop
loop
loop
loop
loop
mov
test
adc
mov
inc
mov
shl
xchg
mov
lret
xor
sbb
stos
ja
pusha
jl
pusha
mov
xor
xorb
or
jnp
add
pop
cmp
sbb
sub
xor
mov
mov
insl
fsub
loope
xchg
subl
cmp
insb
inc
addb
sti
push
aam
xchg
into
push
aas
js
mov
insl
pushf
mov
mov
out
push
inc
add
xor
sbb
repnz
aaa
nop
xchg
fisubrs
cmp
xchg
xor
enter
jne
enter
test
pop
mov
subl
shrb
pusha
jg
inc
scas
pop
je
and
lcall
je
je
pop
enter
adc
std
loop
andb
xor
mov
lds
lret
add
and
adc
sti
test
xor
xchg
push
aad
cmc
mov
mov
push
cld
jg
divl
push
imulb
inc
xor
dec
aaa
jmp
inc
dec
stc
lea
jae
jp
jae
mov
inc
lcall
test
lret
hlt
ss
mov
ja
xor
fnstsw
mov
inc
jmp
jb
dec
inc
mov
icebp
aas
or
mov
loope
stos
iret
aaa
inc
leave
enter
sub
enter
inc
ss
add
mov
mov
mov
fs
mov
mov
pushf
mov
mov
shll
dec
or
nop
pop
shll
shl
fs
mov
adc
or
nop
pop
shll
dec
or
jbe
adc
or
nop
pop
shll
dec
or
nop
pop
fs
outsl
adc
or
nop
pop
shll
dec
or
nop
pop
shll
mov
shll
dec
or
nop
pop
shll
push
mull
into
sbb
or
nop
pop
shll
dec
or
jbe
adc
or
nop
pop
fs
inc
pushf
mov
fs
ds
and
sub
jo
push
mov
icebp
sub
jne
push
jbe
std
movsb
inc
dec
xchg
rcl
xchg
jg
and
mov
rcrl
dec
xor
xchg
loopne
jo
repz
xchg
xchg
int
lret
icebp
cmp
inc
xor
xor
es
js
or
lahf
mov
cmp
ja
jge
sti
and
popa
mov
mov
mov
sub
inc
aam
pop
push
mov
leave
in
xor
shll
lret
das
jle
hlt
mov
push
movsb
mov
pop
hlt
bound
mov
xchg
adc
cmp
ja
repz
xor
fs
jecxz
xchg
repnz
mov
add
sbbl
cwtl
inc
call
push
inc
mov
out
pop
jp
aad
test
loop
jns
movsb
cmc
cmp
mov
jb
adc
hlt
and
mov
lahf
loope
and
stos
arpl
push
adc
mov
sti
icebp
push
dec
lods
std
dec
repz
push
nop
xchg
push
dec
adc
dec
pop
jbe
int
mov
shlb
pop
and
inc
jbe
push
inc
ds
xor
fsubp
ret
js
les
pop
add
pop
inc
sub
dec
cmp
xor
or
xor
ret
loop
mov
rorl
mov
int
lcall
and
sarb
sti
adc
jbe
sbb
pop
cmp
push
mov
add
sub
popl
orb
clc
addl
ja
outsl
jp
dec
cmp
rclb
mov
mov
jo
jne
dec
outsl
xchg
adc
adcl
xlat
adc
mov
xchg
rcrb
adc
out
xchg
xchg
out
popf
fcomps
xchg
lods
mov
xchg
lret
sub
int3
xchg
test
gs
xchg
popl
fs
js
xor
insl
jge
in
jmp
lahf
inc
and
arpl
cli
scas
add
fs
bound
add
cmp
ds
push
sub
and
in
cmp
fimull
faddp
mov
lds
repnz
cmp
jae
mov
ficoms
mov
add
mov
dec
aaa
aad
or
into
pop
lods
xor
jne
out
xor
ljmp
jbe
adc
add
pop
icebp
mov
ret
mov
push
lods
jae
les
push
jae
sbb
xchg
aam
ret
in
or
clc
dec
xor
push
dec
jae
stc
test
mov
push
xchg
sbb
pop
xchg
add
cmp
xchg
into
adc
push
jl
sarb
mov
lret
push
jns
pop
dec
mov
ss
pop
fs
enter
dec
adc
into
enter
and
and
test
pushl
addr16
push
pop
hlt
add
imul
repnz
mov
mov
or
mov
lock
pop
sbb
inc
aam
iret
pop
push
and
dec
repnz
lcall
enter
push
mov
push
addr16
pop
ds
sbb
lods
mov
les
sbb
mov
call
rclb
cmpl
xchg
jae
pop
mov
mov
pop
adc
push
push
mov
int3
xchg
cmp
xchg
sub
inc
stos
adc
mov
cmp
sar
mov
sarb
adc
push
leave
mov
ret
inc
cmp
cmp
dec
scas
ret
into
arpl
xchg
dec
jecxz
shll
xor
ret
adc
or
arpl
lea
lea
xor
rclb
mov
xor
popa
pop
xlat
mov
sti
add
add
jae
push
xor
mov
and
shlb
ljmp
popf
mov
push
dec
cltd
out
add
inc
std
sub
push
or
jne
mov
lds
or
pop
test
iret
outsl
es
jp
fmul
fidivl
push
push
jge
and
push
pushf
xor
or
jbe
shrl
mov
ss
cmp
test
dec
mov
jae
ljmp
fcomip
sbb
mov
inc
xchg
scas
xor
xor
lds
inc
lcall
pop
xor
cmp
das
call
jp
dec
mov
idivl
insb
pop
sub
and
rclb
sbb
mov
xchg
adc
mov
scas
data16
and
shl
scas
mov
shlb
cmc
fwait
outsb
cmp
push
les
mov
into
jb
std
jnp
push
adc
xchg
sbb
enter
cmpb
mov
lret
lods
hlt
add
sub
outsb
lret
call
cmp
aad
js
and
lret
fcmovnbe
clc
cmp
push
lret
fisttpl
rolb
test
outsw
pop
nop
lret
mulps
aad
aas
sarb
pop
leave
mov
push
stc
hlt
dec
adc
mov
cmp
push
js
aam
xor
fnsave
pop
mov
or
xor
daa
jp
xchg
xor
push
hlt
xchg
adc
hlt
arpl
or
add
cmpsb
repnz
bound
pusha
test
inc
pop
push
pop
rcrb
push
lds
or
xor
std
hlt
enter
js
mov
mov
lds
cli
push
jp
lea
mov
cmc
push
mov
push
adc
adc
inc
adcb
divb
ret
clc
leave
cs
mov
pop
or
inc
xlat
scas
int
or
xchg
mov
pop
xor
xchg
jle
icebp
mov
add
out
mov
mov
arpl
ret
pushf
sub
mov
rcrl
pusha
rol
mov
push
add
mov
or
lahf
jmp
cs
xchg
ror
xchg
xchg
xor
sbb
xchg
mov
testl
aam
testl
idivl
adcb
sbb
mov
fldl
adcb
call
daa
stc
mov
cmp
dec
mov
mov
cmp
in
adc
jns
xchg
xor
aas
or
xchg
lods
cmp
xchg
aad
divb
jnp
int
cmpsb
cld
jae
sti
mov
pop
cmc
adc
lcall
mov
shll
dec
mov
jae
inc
lods
xchg
xor
xchg
jnp
je
and
mov
pop
sub
mov
and
xchg
icebp
push
mov
inc
inc
push
sbb
daa
mov
mov
cmp
xor
mov
mov
xor
inc
cld
outsb
mov
mov
jb
xchg
push
lea
divb
push
and
andb
mov
mov
xor
xchg
daa
jae
or
pop
jae
aad
and
daa
cmpsl
mov
adc
jae
dec
mov
xchg
mov
mov
movsl
ret
jp
cmp
sbb
inc
gs
add
mov
fdivrp
sti
cvtpi2ps
dec
dec
jle
ss
adc
ja
jno
push
lock
loope
bound
mov
decb
pusha
pop
cmp
pusha
into
enter
mov
int3
mov
out
cmp
mov
ja
jne
repz
shlb
les
mov
pop
inc
test
sti
push
enter
lret
cmp
cmp
jae
inc
in
lcall
pop
in
and
xchg
mov
jno
dec
cmp
sti
shll
add
cmp
xor
inc
and
lcall
ljmp
mov
xorl
add
push
popa
enter
mov
cmpb
es
inc
mov
ret
jp
dec
adc
lock
ja
xchg
mov
push
lock
loop
xchg
cmp
add
jp
push
add
and
jb
fistpll
dec
xchg
sbb
dec
jmp
and
jecxz
fistl
dec
mov
je
daa
lds
add
outsb
cmp
pop
jb
les
and
jo
jne
inc
movsl
mov
push
xchg
imul
adc
xor
inc
pop
aas
flds
xchg
push
js
jge
loop
xchg
and
xchg
fldcw
pop
sub
dec
pusha
push
push
mov
divb
pop
cmp
add
mov
inc
sub
xchg
out
xchg
into
jae
push
clc
jp
mov
mov
push
cmp
ret
jo
xchg
inc
push
inc
xor
insb
sbb
sbb
fdivp
nop
fs
mov
push
fisubs
xchg
adc
sbb
xchg
dec
sub
inc
mov
lret
out
clc
jp
fcoms
jg
mov
shl
xchg
mov
rolb
add
in
xor
push
les
push
adc
xor
xor
sbb
add
pusha
or
into
dec
add
mov
arpl
and
mov
cmp
jp
xchg
cmp
sbb
xchg
lds
push
mov
bnd
sub
repnz
movsb
repnz
scas
daa
pop
sbb
aaa
adc
arpl
scas
loop
adc
push
add
xchg
ret
roll
inc
pop
jp
push
lret
aas
movsl
ret
adc
out
shrb
add
dec
adc
mov
xor
xor
cmp
ss
divw
clc
sbb
mov
jb
arpl
ret
push
jle
xor
inc
andb
dec
sub
fs
mov
mov
in
loop
xchg
jp
xchg
push
mov
push
add
jo
xor
arpl
xlat
inc
cmp
mov
xor
jno
cmpsb
push
lds
ret
mov
push
movsb
push
mov
popf
mov
or
push
data16
jae
into
das
divl
jae
aam
jae
pop
leave
roll
jl
inc
push
inc
fimuls
push
push
je
xchg
inc
or
ret
and
xchg
fxch
adc
adc
xor
xchg
out
cli
fwait
cmp
jno
std
xchg
and
sub
xchg
adc
test
xchg
xchg
dec
push
add
jae
mov
into
lock
mov
pop
xor
negb
inc
clc
negl
pop
mov
es
mov
inc
ret
sub
addr16
mov
push
add
inc
xchg
sub
testb
cli
jno
and
inc
inc
repz
mov
hlt
sbb
mov
push
mov
pusha
int3
mov
popf
ljmp
ljmp
inc
and
fwait
adc
sub
mov
push
pop
scas
clc
dec
or
mov
into
adc
push
hlt
cmp
sti
mov
addr16
es
cmp
inc
fmull
pop
inc
adc
mov
adc
data16
xchg
pop
cmp
xlat
popa
jns
push
test
in
sbb
or
cmp
xchg
int
mov
out
adc
sbb
test
ror
mov
add
sahf
popa
into
sti
std
sbb
test
shlb
dec
push
out
cmp
outsl
jns
dec
lds
shlb
xchg
stc
pop
mov
int3
dec
pop
in
insb
jo
cmp
mov
jl
ret
push
xchg
clc
mov
aad
test
push
pop
es
jnp
mov
mov
int
popf
sub
aaa
xchg
fs
xor
jb
xor
fidivrl
scas
sbb
adcl
loopne
cmp
movsb
adc
clc
jbe
mov
jp
add
ficoml
mov
push
mov
mov
shlb
jp
loopne
or
fwait
aas
test
ljmp
ret
clc
or
fsubp
xchg
jbe
jb
pusha
shlb
mov
push
incb
out
dec
les
mov
sti
mov
pop
ret
insb
es
inc
cld
pop
lahf
jecxz
popf
fwait
adc
pop
pusha
jae
or
in
inc
mov
imul
xchg
lret
xchg
fwait
jbe
adc
movsb
cmc
xchg
sbb
rcrb
pop
add
dec
andl
add
in
popf
add
rcll
lods
int3
lahf
push
stos
push
push
std
jp
pusha
repnz
inc
xchg
in
fxch
dec
mov
fwait
push
cmpsb
test
mov
test
push
jg
mov
or
and
inc
jnp
repnz
jle
dec
ds
mov
mov
xor
xchg
jne
mov
push
sbb
test
test
adc
rorl
jo
lret
out
add
xchg
push
in
sarb
test
and
rcrb
ljmp
xchg
adcl
pop
mov
out
loop
iret
dec
jns
jge
cwtl
push
ret
jmp
mov
ret
cli
xchg
or
ret
bound
js
jle
inc
cmpsl
mov
dec
xchg
mov
lret
mov
xchg
mov
xchg
aaa
lahf
cmc
and
mov
pop
int
dec
xchg
lahf
lods
adc
xlat
lahf
or
fistpll
adc
rcrl
pop
fsubs
adc
jecxz
in
dec
mov
lahf
lcall
jp
popa
loop
divl
lahf
push
dec
add
in
push
fdivl
jb
mov
pusha
sbb
out
jnp
adc
loope
ret
dec
mov
rcll
aas
xchg
mov
sbb
mov
push
mov
inc
cmp
lret
dec
jmp
dec
je
cmc
fisttpll
pop
cmp
mov
adc
xchg
rorl
and
or
test
pop
lods
adc
nop
mov
stc
mov
xchg
sub
repnz
sbb
cmp
xchg
dec
push
ljmp
mov
jae
add
repnz
iret
mov
mov
rclb
adc
and
repnz
lcall
add
xchg
cmp
in
cs
sarl
lods
mov
jb
das
jp
mov
mov
push
notb
mov
je
jb
mov
push
repz
in
push
mov
repz
sbb
outsb
sti
enter
sbb
adc
pop
xchg
dec
xchg
lahf
inc
ret
test
outsb
ret
xchg
jbe
dec
ljmp
or
mov
xchg
outsb
flds
andl
push
mov
call
mov
or
xchg
in
mov
mov
mov
dec
inc
pop
mov
pushf
arpl
enter
into
in
sarb
stc
mov
push
push
cli
repz
xchg
mov
adc
clc
maxps
clc
pop
call
insb
ja
clc
je
ljmp
rol
mov
pop
repnz
inc
into
shlb
xorl
jbe
mov
inc
jl
mov
aas
mov
jnp
xchg
xchg
shlb
fwait
cmp
rcll
xlat
insl
mov
push
je
loop
int3
repnz
xchg
dec
push
push
call
lret
dec
mov
stos
xor
das
dec
add
mov
sti
sbb
mov
sarl
push
in
call
div
push
adc
xchg
es
sbbl
jb
jecxz
loope
sub
adc
xor
rorl
icebp
or
adc
repnz
aaa
jae
insb
out
xor
xchg
or
hlt
mov
jge
jo
negb
xchg
xchg
and
loop
jg
ret
or
jbe
aad
je
fnsave
mov
cli
dec
int
adc
sti
mov
push
lret
or
push
push
mov
push
nop
xchg
xchg
shl
rcl
scas
int
shlb
jae
lods
mov
jnp
sub
ja
and
dec
push
movsb
ljmp
lcall
ljmp
je
inc
repz
push
nop
adc
cltd
sti
adc
jae
mov
stc
and
sbb
fiaddl
mov
es
lret
mov
ret
and
adcb
mov
mov
mov
push
xchg
dec
push
xor
xchg
mov
jo
push
les
push
loopne
pop
cmp
aaa
xchg
mov
jne
daa
jno
xor
sahf
mov
roll
mov
mov
in
xor
xchg
loopne
mov
in
or
mov
inc
mov
aam
gs
mov
outsl
add
cld
test
sub
push
inc
mov
cmp
dec
xor
mov
shl
adcl
mov
ficomps
dec
cmpsl
inc
xor
sbb
sahf
inc
and
mov
xchg
mov
push
addr16
pusha
inc
jp
add
inc
push
sti
or
mov
push
mov
sub
mov
lods
pop
xor
insb
mov
cld
sti
xchg
cmp
mov
dec
sti
mov
push
or
push
xor
mov
ds
repz
pop
enter
pop
or
repz
les
and
arpl
xor
mov
xchg
dec
push
sub
cmp
repz
mov
xor
icebp
call
mov
sbb
xchg
fcoml
ljmp
or
xchg
loope
cmp
mov
fmul
pavgb
bt
mov
push
mov
sub
cwtl
scas
test
push
cmp
mov
loop
bound
xor
loopne
pop
cmp
pop
xchg
xchg
jnp
pushf
add
jae
sbb
add
bound
fsts
lock
ret
mov
xor
lret
cmp
lahf
xchg
mov
mov
mov
sbb
addr16
lret
jbe
out
or
push
jmp
xor
loopne
das
dec
push
push
inc
push
arpl
jae
cmc
ss
mov
xor
xchg
cli
sti
cs
push
outsl
inc
push
jno
xor
jecxz
xchg
cmc
xor
jb
cmp
lcall
push
sub
dec
xor
mov
add
mov
adc
bound
adc
out
mov
mov
mov
cmp
ret
js
inc
scas
arpl
aad
jb
and
mov
jecxz
call
and
inc
mov
xchg
xchg
fwait
mov
xchg
loopne
and
arpl
cmp
or
fidivrl
dec
insl
or
daa
test
add
lahf
sbb
cmp
add
xchg
ret
fnsave
xor
sub
cld
mov
shlb
lret
cmc
jp
js
or
mov
xchg
into
fimull
cmp
mov
bound
and
lds
add
popa
jp
xor
rolb
dec
repnz
mulb
jle
repnz
cmp
mov
js
rcll
repnz
push
repnz
loopne
scas
mov
and
sbb
jmp
int3
hlt
and
gs
fwait
std
in
repnz
testl
out
and
je
stos
push
sbbl
xchg
cmpsb
jecxz
or
fimull
loop
xlat
repnz
outsl
mov
punpcklbw
loop
cmc
addr16
jp
inc
das
xor
cmp
xchg
mov
push
mov
sub
and
cmp
push
inc
or
mov
sbb
pop
jns
dec
mov
js
outsb
jo
xchg
xchg
dec
shlb
es
in
ja
xchg
jl
insb
sbb
in
add
pop
dec
pushf
sbb
cmp
out
ja
das
stos
push
pop
cmp
jo
adc
rclb
inc
in
notl
xchg
jnp
add
int3
push
jb
push
lods
inc
mov
pop
jno
xorb
add
je
std
adc
ss
push
pop
mov
icebp
or
pop
mov
in
les
and
xchg
dec
test
imul
xor
mov
fdivrl
faddl
testb
sbb
int3
fs
mov
xor
mov
sti
jl
sub
popf
mov
ficomps
inc
rcll
mov
cwtl
cmp
adc
and
imul
cmp
cmp
mov
mov
sbb
scas
jne
pop
gs
inc
repnz
dec
repz
lahf
into
aas
fcoms
cmp
adc
adc
in
sub
sbb
mov
ret
inc
cmp
adc
adc
stos
mov
rclb
cld
out
or
xchg
scas
mov
cmp
sarl
mov
pop
mov
aas
sub
pmulhuw
leave
mov
mov
mov
mov
in
mov
popf
incb
jae
push
cmp
test
nop
iret
inc
scas
fstpl
jl
xchg
cmc
cmp
xlat
xchg
sub
mov
loop
roll
mov
ds
lea
loopne
out
aad
mov
jecxz
cmp
mov
xorl
xor
pop
dec
sti
ret
fistpll
outsl
or
and
xor
inc
lea
or
xor
and
xor
dec
push
xor
sub
push
cmpsb
ret
lods
sbb
mov
popf
push
mov
iret
push
and
rclb
and
shl
dec
scas
jp
rolb
mov
or
das
lods
std
jp
test
push
nop
or
inc
out
jb
aaa
sub
popf
hlt
inc
xchg
aad
dec
scas
mov
jle
out
xchg
movsl
in
or
cmp
fcomi
sub
adc
push
icebp
iret
inc
cmpsb
jae
int
je
ret
inc
xchg
sbb
push
inc
ds
xor
dec
pop
repnz
pushf
negl
mov
fistl
sbb
into
jnp
sub
and
mov
mov
insb
and
cmp
sbb
cmp
insb
add
and
xor
add
xor
ret
pop
and
add
lods
clc
jg
test
stos
xchg
xchg
in
dec
xchg
stos
shlb
inc
or
fstpl
push
mov
xor
jmp
mov
jg
pop
mov
sub
mov
mov
stc
icebp
xchg
sub
mov
mov
cli
repnz
or
jbe
testb
pushf
ja
dec
jecxz
pop
es
xor
push
notl
xor
iret
push
je
jle
push
aam
inc
jecxz
repnz
into
je
dec
push
lahf
hlt
in
into
bnd
jb
mov
push
imul
loop
mov
and
lea
and
xor
cmp
rcrb
mov
jp
push
aam
jb
xchg
loop
adc
mov
pop
xchg
dec
scas
push
jecxz
into
shlb
push
movsl
sub
fisttpll
mov
hlt
and
jne
dec
xorb
xchg
nop
jae
lods
or
mov
sbb
movsl
jae
push
mov
inc
adc
insb
lods
es
jg
mov
xchg
mov
adc
xchg
popa
pop
inc
xor
mov
push
pop
mov
mov
mov
and
cld
pop
mov
into
push
lret
pop
xchg
mov
push
test
xchg
cwtl
push
mov
push
jg
enter
adc
movsl
fnstsw
rcl
mov
fiadds
xor
mov
push
pop
mov
fwait
outsb
push
out
add
add
cmp
xor
xor
stos
add
sub
mov
stos
stos
push
loope
xchg
cmp
push
jle
clc
addb
cmc
arpl
cmpsb
shll
call
shl
push
or
shrb
mov
jae
sub
aad
cmp
jge
sub
roll
sbbb
jle
adc
adc
pop
xchg
push
loopne
inc
leave
sbb
mov
fwait
xchg
ret
dec
xchg
js
mov
sbb
jmp
mov
mov
stc
sbb
ss
mov
and
dec
inc
add
and
nop
pop
jb
xchg
ds
lds
mov
xchg
mov
cmpxchg
mov
xrelease
in
cmp
pop
mov
or
rcll
inc
push
shlb
mov
movsl
jb
aaa
negb
out
repz
mov
mov
mov
xor
aam
mov
cmp
cmp
sbb
dec
clc
and
popf
aaa
mov
in
sbb
adc
repnz
jae
addl
pop
add
mov
mov
mov
add
mov
out
filds
mov
cld
sub
fnstsw
push
and
dec
call
xor
sub
jge
ss
jp
out
xchg
lret
mov
outsb
jae
fnop
iret
ret
xchg
cmpsb
inc
cli
sbb
pop
stc
pop
pushf
sarb
xchg
lcall
push
fdivl
divl
repnz
test
rol
pop
xchg
hlt
jns
inc
cmp
push
jmp
js
xchg
inc
jb
push
push
testl
mov
jge
and
mov
lds
adc
inc
xor
out
in
sti
mov
out
xor
mov
icebp
fwait
clc
js
ret
les
inc
mov
ds
and
inc
icebp
xchg
ss
test
xchg
es
gs
pop
fadd
push
fwait
mov
outsb
dec
jb
cmp
outsb
in
push
sbb
mov
ss
pop
rcpps
xor
bound
inc
fnsave
clc
xor
sti
dec
mov
pop
xchg
dec
mov
rcr
in
lcall
add
adc
mov
les
mov
icebp
lahf
and
out
sti
stc
int
lcall
mov
shl
decb
insb
repnz
std
mov
xor
jae
popf
mov
pop
mov
xchg
popf
ja
jns
cmp
dec
lret
mov
xor
inc
or
mov
js
or
xchg
les
mov
addb
xor
ljmp
addl
cmp
repnz
jnp
popf
xchg
xchg
lcall
inc
mov
dec
xchg
xchg
add
hlt
mov
mov
inc
lds
jp
lcall
adc
adc
xor
pop
gs
push
add
lret
jne
mov
out
repnz
shl
fldl
mov
adc
call
mov
lret
and
std
jae
add
mov
cmp
mov
ds
xor
xchg
mov
jl
call
sahf
cmc
jp
sahf
js
add
push
arpl
or
sub
arpl
hlt
pop
stc
int
sub
mov
jl
mov
andl
iret
cmpsl
sub
jae
push
fistpl
lret
mov
cltd
push
and
cld
push
cmp
cmp
and
pop
rorl
cltd
push
add
xchg
and
jge
sbb
subb
push
pop
loope
push
aas
roll
pop
test
cmp
cmpsb
dec
ret
int3
insb
outsl
xchg
push
lea
push
adc
ss
lds
inc
add
cmpsl
push
fs
lock
stos
pop
or
pop
loope
inc
push
jl
xor
inc
ss
jb
xchg
ret
sub
xchg
shll
arpl
mov
pop
xchg
imul
jb
or
nop
sbb
xor
gs
clc
xor
popa
ja
out
loope
cmc
cmp
or
iret
in
adc
rcll
and
test
hlt
xor
pop
fdivs
sti
sarb
inc
dec
out
xlat
sti
jns
xlat
into
daa
mov
sub
enter
in
push
jge
inc
in
jae
push
insb
inc
jp
adc
mov
shrb
cmpsl
push
inc
jbe
fcmove
xchg
icebp
dec
arpl
leave
lret
mov
rolb
push
mov
je
ja
clc
arpl
ds
ss
ret
in
mov
mov
mov
gs
mov
bound
or
sbb
push
mov
mov
out
mov
adc
jae
pushf
push
cwtl
mov
ficoms
lcall
dec
enter
movb
xchg
xlat
lock
shlb
stc
xor
popf
mov
movsl
fidivrs
cmp
mov
pop
pop
ja
jnp
icebp
fwait
or
mov
stos
dec
daa
mov
dec
jle
sbb
lods
or
in
ss
stc
orl
sbb
les
outsl
adc
sti
cmp
aaa
cmp
pop
add
mov
hlt
jae
xchg
push
push
aaa
mov
mov
xchg
lahf
mov
test
inc
scas
xlat
mov
mulb
cwtl
push
add
xor
dec
repnz
aaa
xchg
xor
dec
xchg
call
dec
jl
cmc
mov
js
xor
jl
loop
ja
addr16
stc
pop
jp
pop
shl
cmp
int
fidivs
xchg
jae
mov
aas
xchg
sub
inc
sahf
xchg
popf
int3
add
mov
js
or
and
cmp
repz
idivb
xchg
rep
addr16
push
fsubrs
ss
jl
mov
push
ss
repz
loopne
cmp
leave
dec
add
loop
fdivrl
sbb
jmp
shl
in
sub
mov
rcll
repnz
and
add
repnz
mov
adc
jg
mov
adc
lahf
clc
xor
mov
js
ret
fsubrp
pop
add
mull
xchg
jb
adc
fisubl
adc
adc
xor
cmp
mov
adcb
sub
into
push
cmp
test
shll
aas
sbb
fimull
out
mov
cmp
js
mov
jl
es
mov
xor
popa
or
push
fcomps
sbb
adc
pop
aam
dec
xchg
iret
xchg
movsb
test
pop
jne
outsb
fwait
jae
push
push
shll
dec
cmpsl
push
jne
jbe
push
loopne
ret
dec
or
push
jno
sbb
cld
push
inc
jne
jp
icebp
jbe
dec
aam
mov
adc
or
repnz
nop
xor
push
mov
fsts
repnz
push
popa
call
push
mov
aam
sbb
ss
jae
stos
pop
push
adc
pop
call
jmp
jne
mov
adc
cltd
sbb
add
cmp
lahf
pop
sbb
mov
sub
int3
ret
cmp
mov
popf
shrl
xchg
push
dec
adc
inc
xchg
adc
jnp
ss
adc
insl
push
repz
mov
mov
mov
push
cwtl
xor
mov
mov
nop
add
aas
cwtl
mov
mov
jb
xor
movsl
inc
mov
js
mov
ret
fdivrs
cmp
xor
into
fstpt
stc
xchg
sbb
lds
mov
rolb
imul
mov
enter
cmp
inc
cmp
mov
cmp
shlb
xor
lret
inc
xchg
xchg
mov
lock
ja
rorb
cmp
inc
loope
movsl
fstpt
in
sub
sub
int
push
sti
jnp
jl
test
cmp
sarl
mov
addr16
xor
adc
lods
cmp
aaa
out
sbb
pop
mov
jle
gs
bound
loop
mov
ss
lcall
addr16
aaa
jnp
aas
dec
fs
aaa
fistpll
mov
shlb
pop
ja
repz
lods
add
inc
mov
jb
add
push
ret
push
rorb
and
loop
sbb
adc
cmp
mov
dec
adc
mov
dec
dec
mov
cmp
rorl
mov
push
es
cmp
rolb
pop
cmp
inc
push
aas
in
push
dec
scas
test
fwait
jle
mov
mov
lods
and
push
or
mov
ret
stos
xchg
jle
jle
inc
test
jb
push
mov
push
divl
inc
sub
sbb
sahf
call
jmp
fwait
mov
cmp
xchg
fwait
int3
mov
sarl
in
int
xchg
and
cmp
scas
mov
jp
mov
int3
insb
ds
mov
int
in
xor
test
loopne
gs
xor
sub
jbe
iret
orl
or
into
xchg
pop
loopne
into
pop
ljmp
loopne
dec
pop
loopne
aas
xchg
shlb
loopne
enter
cwtl
xor
adcb
fimuls
outsl
or
inc
push
inc
jb
push
add
inc
movsb
mov
lret
clc
loopne
pop
inc
lea
adc
rol
jns
out
outsb
jl
adc
mov
fnstcw
xchg
inc
into
push
ret
sti
mov
mov
imul
mov
and
outsb
imul
xchg
fldcw
sub
xor
js
push
call
push
mov
jecxz
ja
fisttpll
popf
call
sbb
push
jbe
mov
inc
xor
shll
lret
mov
jbe
xchg
push
and
mov
dec
mov
pop
jbe
and
cmp
bound
faddp
data16
pop
loop
mov
jb
sbb
cld
fistpl
ss
jg
fwait
push
outsb
adc
jle
mov
xor
sub
mov
mov
mov
mov
mov
inc
xor
adc
cli
std
cmp
mov
add
lret
mov
jbe
cltd
lret
into
lds
inc
inc
ret
push
and
jbe
mov
mov
arpl
aad
mov
xor
mov
std
or
mov
inc
jb
pop
and
mov
mov
adc
jle
add
push
inc
jb
push
cmp
push
mov
cltd
lret
push
enter
push
in
push
std
sahf
stos
ret
cmc
arpl
insb
std
lcall
dec
imul
std
push
mov
mov
aas
cmp
mov
push
ret
inc
arpl
hlt
aaa
xor
std
lcall
dec
jb
test
into
and
aaa
sbb
movsb
pavgw
xchg
mov
mov
std
cwtl
mov
std
mov
je
mov
push
rcll
dec
push
sub
movsb
pavgw
pop
dec
nop
cltd
lret
lock
pop
fs
mov
mov
or
xchg
mov
push
dec
roll
adc
pop
ss
mov
ret
sbb
push
aas
aaa
dec
push
leave
dec
imul
std
add
sar
inc
and
jne
push
dec
mov
std
mov
jb
xchg
mov
inc
jb
pop
and
mov
int
mov
testb
jb
int
lds
movsl
std
push
jb
xor
xor
std
movsl
ss
sbb
into
and
push
lcall
ret
std
subb
jb
lcall
mov
into
mov
js
add
mov
ds
pop
dec
or
mov
movsb
scas
insl
or
sbb
mov
imul
test
dec
mov
push
cmp
sbbb
jle
push
pop
popa
lahf
jae
addr16
sbb
sbb
and
mov
fmul
xor
adc
xor
mov
out
xchg
sbb
xor
adc
les
pop
add
mov
or
sahf
sbb
adc
pop
add
jne
push
out
cmpsl
inc
aaa
rclb
cmp
sbbl
inc
push
mov
mov
mov
adc
add
clc
jae
xor
pop
aas
insb
sub
mov
xchg
fistpl
inc
ds
push
adc
xchg
mov
repnz
xlat
sbb
mov
sbb
ja
es
mov
pop
adc
push
jmp
or
je
mov
dec
cld
out
sbb
pop
repz
xor
fisubl
loop
daa
or
push
repz
mov
cwtl
outsb
adc
xchg
movsl
das
push
loop
lret
mov
jae
sti
inc
sbb
push
mov
mov
ja
pop
rcl
dec
adc
sbb
xor
dec
pusha
sbb
xchg
sarl
add
stc
mov
adc
and
int3
subb
mov
clc
lcall
pop
add
inc
mov
inc
lcall
gs
push
mov
xor
mov
jbe
mov
mov
scas
and
lds
add
inc
xor
pop
and
sub
jb
xor
inc
sub
inc
cmpsb
jmp
mov
xor
mov
mov
jb
flds
xor
test
xor
mov
lods
adc
test
mov
xchg
jp
push
mov
xchg
jmp
mov
mov
sub
ljmpw
popf
add
jge
and
xchg
std
jb
mov
push
xor
xor
mov
pushf
stos
hlt
dec
inc
dec
cs
hlt
sarb
icebp
shr
fxtract
roll
hlt
lock
inc
xorb
pop
cmp
xchg
aas
mov
push
fidivl
lret
popf
mov
jecxz
subl
mov
fbstp
stos
lea
or
mov
jmp
xor
out
push
inc
and
mov
cmc
lds
push
push
aad
xchg
jp
imul
outsb
movsbl
jp
fstps
or
xchg
fimuls
addr16
or
aam
xchg
sub
xor
jne
popf
inc
in
add
sbb
and
leave
pop
mov
fmuls
sub
mov
xor
mov
lret
mov
inc
ret
sbb
xor
sbb
jns
xor
lods
lret
fbstp
jns
ret
mov
cld
outsb
pop
ds
mov
sbb
add
stos
pop
out
imul
shrl
shrl
jnp
sbb
mov
aam
js
nop
mov
jle
rcrl
adc
xchg
jnp
inc
lahf
lock
cmc
dec
pop
sbbb
xchg
aad
rol
xchg
ljmp
mov
outsl
ljmp
add
arpl
shrb
aam
jnp
ja
pop
jp
ss
cli
mov
xchg
jp
outsl
jne
cwtl
pop
addl
aam
lret
mov
icebp
sbb
add
daa
clc
and
add
push
out
mov
fadds
addl
clc
mov
xchg
test
and
cli
sbb
imul
fs
pusha
dec
fisubrl
adc
mov
out
repnz
push
sub
dec
lcall
sti
popa
outsl
negb
xor
fsubl
mov
ja
xchg
jbe
fnstenv
in
jg
sub
xor
fwait
xor
mov
les
cmp
fists
dec
arpl
leave
xchg
sub
fsts
ret
adc
adc
dec
repnz
or
fs
xorl
jp
push
mov
and
insl
inc
and
dec
cmp
and
mov
adc
inc
mov
in
or
sub
push
inc
xchg
xor
push
mov
adc
inc
mov
fidivrs
lods
xchg
and
movsb
je
add
or
aam
adcb
xchg
sbb
int3
std
pushf
in
into
addl
lcall
jbe
cmc
mov
jae
or
shrb
popa
xchg
and
bound
outsl
mov
mov
or
push
jno
add
pop
lret
and
jmp
les
pop
adc
dec
pop
lahf
test
lds
rcl
je
push
loope
mov
jbe
push
pusha
xchg
xor
and
xchg
mov
sub
sub
dec
jg
pop
lret
imul
ret
xchg
mov
xchg
xchg
mov
out
inc
push
pusha
cs
jp
daa
jp
adc
or
sar
aaa
test
mov
xchg
dec
or
sbb
xchg
outsl
cmp
sbb
or
stc
out
jg
pop
cmp
inc
inc
or
mov
adc
adc
push
or
adcl
arpl
rclb
mov
push
test
xor
inc
jno
lock
and
jns
xchg
cwtl
in
adc
scas
mov
ret
fildll
or
sar
mov
rclb
sarb
or
pop
mulb
jp
repz
xchg
push
ds
loop
lods
xchg
leave
in
inc
cmp
mov
leave
jbe
movb
xor
lods
mov
jg
and
inc
xchg
js
int
inc
loope
cmpl
lcall
adc
xchg
lock
nop
push
mov
addr16
or
out
mov
adc
mov
push
ret
and
push
dec
xor
push
cmp
adc
inc
stos
xor
mov
add
push
pop
into
sbbl
jg
xchg
push
jno
mov
xor
xor
inc
int
test
bnd
xchg
mov
mov
leave
bound
xor
xchg
inc
aad
cmp
xchg
roll
or
mov
mov
insl
stos
jl
mov
scas
jmp
fiadds
mov
mov
xor
adc
cli
adc
pop
jns
inc
ficoml
xor
pop
push
adc
shlb
pop
push
inc
xchg
mov
adc
cmp
cwtl
cmovnp
popa
cmpsl
push
mov
inc
inc
jb
inc
pop
and
push
push
sbb
addr16
imull
or
mov
jbe
ljmp
push
fwait
add
adc
fcom
aad
imul
add
fcoms
outsl
push
sbb
repz
add
mov
shl
lds
loope
fdivs
std
mov
lcall
fs
pop
cwtl
aam
xchg
repnz
mov
push
or
xor
cmp
std
ds
mov
in
push
outsb
arpl
xchg
dec
and
pop
fadd
je
adc
xor
ret
mov
jnp
xchg
lods
mov
mov
mov
jge
mov
dec
mov
rol
jge
fcomi
and
repz
mov
cmp
pushf
aaa
push
jp
inc
repnz
jae
outsb
std
push
fidivs
mov
xlat
push
inc
xor
jp
nop
mov
out
filds
adc
idiv
shll
ss
sub
icebp
pop
pop
jns
push
mov
lahf
push
stos
mov
popf
push
jle
jne
or
adc
adc
aam
xchg
inc
adc
pop
mov
mov
sar
pushf
sbb
xor
adc
mov
popl
mov
mov
cmp
repnz
push
push
pop
lahf
mov
jns
ss
jo
insl
repnz
pop
movsl
aad
sub
loop
out
push
pop
fst
outsb
imul
mov
popf
xor
cmp
stos
jno
pop
stos
std
mov
xchg
sarl
add
out
xchg
xchg
loopne
xor
orb
jecxz
stc
mov
cmp
or
sbbl
jbe
aas
outsl
sbb
cmp
fidivl
ret
loop
mov
iret
ljmp
xchg
push
out
dec
adc
lahf
xor
in
ds
jo
cmc
push
outsl
or
add
inc
leave
cli
mov
or
sahf
cs
pop
faddl
stc
leave
addr16
daa
add
aaa
inc
or
mov
popa
or
jae
or
push
xorl
mov
stos
add
mov
pop
inc
jb
sub
test
in
mov
sti
movsb
dec
cs
add
and
ret
push
inc
shl
sub
scas
shrb
mov
hlt
cmp
jp
leave
xlat
nop
in
ficomps
dec
pop
sar
cmp
cmp
sub
jae
jnp
inc
fisubl
cmp
jecxz
xchg
pop
cltd
insb
mov
jae
inc
inc
aam
mov
dec
adc
push
rcll
repz
inc
sarb
sbb
or
js
mov
xor
lods
inc
lret
xor
mov
add
ffree
in
pushf
cli
insl
dec
mov
mov
scas
xlat
push
inc
jl
cmp
cmp
pop
xchg
cltd
aas
loope
add
lods
sarl
mov
push
rorb
pop
mov
rcrl
adc
dec
popf
rcll
fs
cmp
add
xchg
mov
jnp
pop
mov
add
mov
add
stos
jp
and
fs
inc
jb
fmul
decl
sub
dec
cmp
sub
mov
cs
add
mov
out
ret
adc
jae
inc
fcmovne
in
cmp
mov
push
and
addr16
mov
cwtl
pushl
adc
jp
add
push
inc
xchg
dec
lret
lahf
mov
ds
sarb
xchg
in
addr16
mov
xor
icebp
ret
jne
clc
out
pop
cmpsb
mov
je
rcrl
sbb
push
xor
xchg
test
sbb
mov
fcoml
xchg
pop
sbb
push
mov
clc
jae
mov
jle
jg
cmp
xchg
jb
aaa
dec
jle
cmc
testb
add
push
inc
inc
push
bound
pusha
fwait
pop
pop
jb
aaa
add
xchg
cmp
lret
jbe
xchg
and
dec
orb
js
push
lret
mov
and
mov
incb
les
popf
out
rol
push
popf
pop
pusha
mov
dec
sub
adc
xchg
mov
shrb
int
mov
flds
hlt
push
xchg
lds
mov
sbb
push
and
data16
icebp
dec
mov
sbb
sbb
imul
cmp
dec
mov
ret
dec
jp
xchg
adc
pop
cmp
hlt
rorb
insl
cmp
dec
shlb
ja
rclb
pop
inc
xchg
sub
out
adc
aaa
cmpsb
inc
sbbb
iret
idiv
mov
push
cmp
inc
arpl
xor
mov
aaa
jae
jns
stc
cli
inc
push
mov
dec
ret
lds
sbb
dec
and
loope
mov
adc
test
cmc
cmp
add
dec
testl
stc
jb
mov
sbb
jg
push
mov
std
inc
mov
les
cmp
das
push
mov
sbb
jne
lods
xchg
cmp
mov
jge
divb
popf
jnp
addr16
dec
or
mov
xor
adc
shl
mov
ret
mov
addr16
stc
in
in
or
mov
jb
lods
push
icebp
dec
adc
adc
jle
cmp
sti
lret
adc
mov
cmpsb
cli
bound
xor
fldenv
jle
inc
adc
mov
sbb
xor
leave
pop
inc
shrb
scas
je
push
mov
xchg
mov
push
cwtl
cld
push
or
xchg
or
ret
cwtl
dec
int
and
daa
shl
xor
jg
inc
and
mov
push
mov
mov
jle
mov
js
push
mov
jb
xor
hlt
xor
int3
fidivl
xor
cmp
adc
outsl
je
rclb
sti
cmp
adc
xchg
cmpsl
xor
mov
rcll
push
icebp
gs
lret
add
inc
sub
int
cmp
cmp
das
mov
adc
shl
je
out
test
mov
dec
xchg
ret
dec
sub
rorb
xchg
rclb
sarb
mov
sbb
cld
xor
ret
sar
subb
je
hlt
add
movsl
fwait
cmp
mov
fs
push
xor
mov
in
jno
clc
cmp
fdivrs
popf
jae
sbbb
inc
mov
pop
mov
pushf
adc
fnstsw
fsubrl
push
mov
inc
mov
or
iret
lea
jb
inc
insb
outsb
dec
mov
js
push
xor
jecxz
hlt
jmp
jno
push
out
pop
mov
mov
xor
mov
sbb
ds
fcomps
and
loope
incl
dec
sarb
fnstcw
mov
out
daa
mov
pop
addl
pop
pop
fs
cmp
dec
repnz
pop
and
inc
sub
jbe
cmp
lcall
lds
cmp
ret
adc
shlb
xor
ss
add
pop
sub
sub
jae
add
inc
mov
pop
not
push
inc
shll
sarb
mov
mov
jno
sahf
xor
cmp
lret
xor
jae
dec
rorb
mov
dec
aam
add
add
pop
jle
mov
push
pop
cmp
mov
jecxz
pop
ds
mov
mov
xor
mov
lds
aaa
pusha
mov
cmp
xor
std
jne
pop
pusha
mov
in
cmpsb
jl
ljmp
xchg
cmp
into
mov
or
or
inc
jmp
sbb
add
int
cmp
mov
pop
mov
inc
fimuls
outsl
and
or
fmul
or
mov
lret
push
xor
ror
ret
clc
sar
jb
rorl
xchg
fcoml
mov
ss
sbb
mov
mov
add
cmc
fisttps
ds
xor
push
pop
inc
in
mov
xchg
inc
adc
jno
enter
shlb
sti
test
call
popa
loope
pop
iret
sub
xchg
jp
enter
sbb
js
mov
sti
fisubl
hlt
pop
inc
jae
fstl
cmp
mov
das
add
ret
repnz
xchg
rep
mov
jns
xorb
je
adc
dec
imul
adc
addr16
lret
outsl
pusha
jo
push
or
cli
push
jnp
push
xchg
scas
adc
cmpsb
test
rcll
lret
or
jne
fldl
push
into
cmp
js
xor
inc
xchg
dec
pop
adc
aas
pop
pop
gs
mov
pushf
lods
mov
iret
jp
in
call
mov
jo
out
shlb
mov
xor
mov
cmp
push
xor
shlb
popa
dec
inc
mov
aad
mov
ja
mov
pop
stos
dec
mov
stos
les
repz
jmp
js
jmp
repz
mov
fsubrl
inc
jbe
or
inc
xchg
pop
icebp
inc
and
mov
xchg
nop
fcomip
adc
in
jbe
xchg
pop
jb
in
push
jbe
push
aam
hlt
daa
lcall
pushl
rorb
mov
mov
xor
js
mov
pop
sbb
xchg
jbe
jb
inc
jbe
mov
xor
xchg
fdivrl
dec
push
call
repnz
es
cmp
push
decl
jp
xor
mov
mov
fnstsw
jne
hlt
sbb
fadd
push
cltd
lret
add
adc
aas
je
sbb
ljmp
test
push
adc
mov
ds
sub
jae
popa
mov
movsb
xor
push
pop
loopne
in
xor
hlt
je
sbb
adc
lock
xlat
dec
shll
adc
pop
and
lret
xchg
outsb
insl
rcrl
imul
mov
rolb
push
xchg
or
idivb
leave
xor
jmp
addl
push
sbb
mov
push
inc
imul
pop
ljmp
jno
cltd
sub
les
mov
clc
xor
cmp
xchg
push
out
mov
jo
jne
pop
lds
mov
ja
out
call
push
push
mov
lods
es
je
mov
lret
ficoml
pop
mov
mov
and
rcl
je
mov
andl
ret
jo
jge
pop
pop
arpl
push
and
subb
jae
repnz
fisttps
mov
dec
add
fmul
test
js
inc
mov
push
and
mov
mov
stc
pop
mov
add
dec
movsb
cwtl
addb
push
mov
test
out
jae
lock
hlt
fwait
push
pop
jb
xchg
out
xchg
jae
xor
rcrb
inc
adc
lret
iret
xchg
pop
xlat
fsubrs
mov
divl
jb
les
dec
add
iret
add
out
cmp
repz
xchg
pop
push
add
fwait
das
add
xor
mov
push
lcall
aaa
jb
outsl
stc
xchg
cmp
cwtl
std
rcrb
cmp
mov
aam
imul
sub
xor
sti
xchg
and
cmc
lds
shlb
in
add
arpl
cltd
adc
sarl
scas
mov
cmp
push
push
inc
lds
cmp
lcall
inc
mov
js
aaa
cltd
lret
cltd
lret
inc
push
adc
xor
aaa
add
jo
les
or
int
dec
scas
mov
xor
imul
je
loopne
jmp
cmp
and
das
push
and
int
push
icebp
jmp
adc
mov
mov
or
fisubrs
lock
add
mov
ret
sbb
push
rcll
or
inc
mov
nop
cltd
lret
cmp
fs
mov
push
lock
ret
sbb
push
rcll
or
inc
mov
nop
cltd
lret
mov
inc
and
cmp
mov
les
cmp
xor
mov
mov
lock
pop
fs
inc
add
mov
pop
xchg
into
and
pop
dec
sub
mov
inc
arpl
jb
push
cmp
mov
xor
testb
leave
ficoml
popa
add
mov
ret
sbb
push
rcll
or
inc
adcl
aad
mov
xor
mov
cmp
mov
fs
dec
xor
lods
xor
xor
inc
imul
sbb
roll
adc
lock
or
addl
push
aas
shlb
cmp
das
push
xchg
aaa
fs
push
scas
push
xchg
mov
rclb
mov
mov
dec
add
inc
out
out
popl
jbe
inc
pop
ret
inc
arpl
mov
je
sbb
inc
arpl
mov
add
inc
das
aas
xor
xor
inc
imul
mov
inc
aaa
dec
inc
das
push
xchg
inc
fs
or
cmp
jbe
cmp
push
pushf
cmp
dec
xor
nop
xchg
pop
xor
xor
push
lock
xchg
clc
repz
inc
in
ss
jg
or
jg
sti
jnp
aaa
insb
xchg
subl
push
and
andl
pusha
xchg
sbbl
pop
xchg
sbbl
pop
xchg
add
stc
cmp
adc
xor
xchg
sbb
xchg
adc
push
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
mov
inc
dec
icebp
dec
dec
and
dec
bound
dec
pusha
dec
pop
dec
pop
dec
sbb
dec
pop
dec
sbb
dec
pop
dec
push
dec
adc
xchg
jle
jle
jle
jle
jle
jle
pop
sub
dec
loopne
inc
push
dec
int
dec
dec
iret
dec
and
dec
fldenv
aaa
dec
xor
sbb
dec
and
inc
sub
inc
cs
cs
xor
leave
pop
loop
lahf
imull
xchg
aam
je
dec
ljmp
lret
je
mov
lea
rorl
sbb
inc
test
inc
sbb
lahf
mov
xor
jae
aaa
xchg
out
aas
or
rcrb
xor
push
stos
mov
lock
mov
shll
mov
loopne
movsl
cli
pop
ret
inc
add
adc
dec
mov
cmp
xchg
push
add
push
sbb
movb
shr
sti
lcall
adcb
test
push
sub
jne
or
aad
dec
inc
jp
mov
xchg
inc
loop
xchg
fdivs
mov
stc
cmp
sbb
mov
or
mov
adc
ret
repnz
ret
mov
push
push
mov
stc
inc
or
jnp
adc
rorb
test
ja
in
push
or
jnp
jbe
dec
inc
out
jle
fisubrl
inc
fistpl
jecxz
rcr
mov
aaa
xor
hlt
jnp
daa
jnp
dec
divb
test
movsl
xor
mov
addl
lret
cmp
lret
mov
xchg
fldl
push
ret
ja
cmp
add
rcll
xor
stos
movsb
adc
test
cmp
lahf
or
out
dec
add
xor
cmp
jns
mov
gs
daa
out
shll
mov
clc
mov
jnp
add
jnp
pop
xor
movsl
pop
sbb
orb
add
cmp
ss
xor
test
enter
mov
push
mov
lods
aaa
dec
cmp
mov
gs
xor
inc
xor
adc
das
adc
mov
test
inc
aas
mov
fstl
enter
xor
test
je
jg
rcl
ss
data16
pop
or
and
inc
cmc
xchg
pop
push
fsubrs
cmc
mov
adc
sbb
dec
push
xor
mov
inc
add
xor
jbe
push
rcrl
mov
je
adc
push
cmp
movsb
mov
aaa
and
rorb
inc
sti
repnz
xor
mov
xchg
popa
jg
xchg
mov
cmp
pop
loop
pop
mov
popf
fnsave
mov
mov
rcr
inc
push
out
loop
sub
imul
xor
cmp
push
rcl
shlb
and
sahf
pusha
adc
je
sbb
pop
xor
xchg
clc
cmp
mov
ja
cmp
push
aas
xchg
out
fcoms
jne
inc
imul
and
test
sti
jb
inc
cmp
mov
inc
jae
inc
or
mov
aas
daa
mov
roll
ds
clc
ja
mov
fstl
dec
pop
push
je
dec
das
dec
ret
dec
in
inc
lret
inc
js
push
dec
mov
cmp
inc
jbe
mov
je
mov
cmp
fs
jbe
mov
bound
into
sbb
or
nop
pop
shll
dec
or
jbe
adc
or
nop
pop
shll
dec
or
nop
pop
fs
outsl
adc
or
nop
pop
shll
dec
or
nop
pop
shll
mov
shll
dec
or
nop
pop
shll
xor
push
jbe
adc
or
nop
pop
shll
xor
fs
mov
adc
or
nop
pop
shll
dec
or
jbe
push
sub
mov
adc
mov
out
clc
jne
mov
pop
ds
pop
xchg
xor
outsb
push
mov
mov
scas
and
push
jno
add
add
mov
pusha
mov
inc
adc
dec
or
dec
ljmp
repz
std
and
xchg
shl
and
or
cmp
sbb
mov
repz
jo
sti
cmp
and
adc
repz
jae
xor
mov
push
repz
lea
je
popa
aaa
aaa
js
add
and
xor
push
negb
aam
xor
fs
jne
lds
divb
adc
mov
cmp
mov
lds
test
jle
shlb
add
xor
xor
insl
jg
jne
push
xchg
loope
mov
aad
outsl
xchg
sub
ret
adc
xchg
cmc
out
pop
jle
seta
cmp
inc
std
rcrb
insb
inc
les
out
adc
les
push
adc
leave
ss
int
push
inc
jbe
mov
rcrb
into
ss
mov
push
dec
xchg
inc
and
cmp
jg
inc
test
into
inc
test
iret
inc
fs
fcoml
and
dec
shlb
lods
sub
stc
mov
jle,pn
fildl
jle
shlb
adcb
xor
pusha
xor
sub
inc
std
push
arpl
ret
mov
cmp
out
int
push
add
cs
sbb
adc
pop
repz
cmp
ss
cmp
bound
cmp
jp
roll
jo
repz
add
sub
inc
sub
aas
leave
xchg
dec
cwtl
xor
mov
xchg
fwait
mov
xchg
ret
pop
arpl
in
lret
ret
sub
ret
cmp
sbb
outsl
push
pop
ret
jecxz
inc
sbb
sarl
roll
jo
repz
add
sarl
and
cmp
gs
mov
mov
cmpsb
cmp
sbb
xlat
aam
out
xor
dec
push
scas
icebp
hlt
cmp
test
fucomp
inc
data16
test
and
mov
adc
out
mov
aas
xor
sbbl
insb
mov
dec
mov
mov
pop
add
jae
cld
pop
ret
adc
cmpsb
lock
mov
mov
jl
xor
pop
repnz
mov
or
xor
xor
mov
inc
jbe
in
mov
arpl
mov
and
or
xchg
insb
jecxz
jecxz
loopne
pop
inc
jns
xchg
roll
cltd
xchg
or
jae
push
jae
mov
call
aaa
clc
aas
dec
repnz
jge
sbb
inc
mov
mov
mov
xor
pushf
int
loope
ds
ds
loope
sbb
dec
addr16
test
dec
mov
push
pop
mov
dec
repnz
sbb
sbb
and
pop
pop
dec
adc
mov
mov
pop
mov
pop
insl
fdivl
jg
cmpsl
adc
mov
les
loop
and
test
test
into
adc
gs
insl
jle
xchg
aas
sub
dec
mov
jb
pop
aad
sub
cmp
jp
push
mov
repz
mov
hlt
cmp
je
cltd
fs
and
mov
jg
cmp
lahf
fstpl
ss
xor
jae
mov
std
popf
pushf
sub
js
xchg
and
push
stc
jp
icebp
sub
pop
xorb
cmp
push
mov
jns
fwait
and
push
pop
loop
aaa
fcmovnu
mov
mov
clc
cwtl
mov
jae
sarb
loop
jle
push
and
mov
jmp
mov
xor
hlt
popf
std
xorps
or
loope
dec
popf
jb
xlat
arpl
pop
cmp
push
fistps
or
cwtl
pushf
mulb
ror
xor
push
inc
mov
add
test
andl
add
pushl
les
mov
dec
push
shlb
and
lret
push
bnd
adc
pusha
aaa
cltd
cmp
push
in
test
cmp
testb
pop
push
test
push
cmc
daa
mov
pop
inc
mov
hlt
cmp
pop
sbbb
cwtl
jbe
sub
loopne
addr16
xchg
sbb
xor
out
orb
sbb
pusha
mov
adc
dec
int3
aaa
xor
mov
aam
jb
pop
or
gs
xchg
loopne
icebp
sbb
mov
cmc
jmp
jae
ja
ss
mov
cwtl
pusha
aas
jne
jnp
icebp
sbb
mov
xchg
pushf
add
bnd
scas
and
jae
loop
cmc
stos
xchg
mov
cmp
mov
xor
push
jne
adc
js
loop
clc
aam
insb
mov
aaa
shl
add
jb
push
and
jbe
je
push
mov
loop
pop
cmc
std
popa
out
mov
mov
push
jae
addr16
mov
mov
dec
pop
xor
cmc
out
aas
test
xor
and
mov
jae
and
pop
hlt
mov
inc
cmp
clc
mov
pop
rclb
xor
push
pop
hlt
dec
jmp
lock
fidivrl
std
xchg
pushf
sti
enter
pop
fcmovbe
insb
mov
cltd
mov
das
ja
inc
into
testl
mov
outsl
push
sub
lds
popf
int3
ja
sti
dec
pop
fnsave
jle
in
outsb
pop
jmp
mov
mov
loope
rcrb
aam
shll
mov
xor
notl
cmp
jne
pop
fs
int
shl
js
pop
mov
leave
mov
call
fsubrl
jnp
mov
fwait
rorb
cmp
or
stc
out
dec
sar
repz
add
add
push
mov
adc
clc
shll
aam
jge
lea
adc
ja
xchg
repz
ja
adc
adc
pusha
stos
jecxz
jae
mov
cmp
jp
fs
jl
pop
lcall
fwait
adc
inc
cmp
jnp
cld
inc
and
jge
mov
insb
dec
adc
sub
fistl
mov
pop
adc
mov
cli
xchg
popf
fisubrs
jge
push
or
dec
lea
repnz
dec
adc
vandpd
mov
and
mov
fmull
dec
pop
outsl
rorl
pop
add
pushf
lods
ds
jns
addb
mov
int
lcall
nop
pop
inc
arpl
lds
iret
repnz
notb
orl
push
sbbb
push
jns
fcom
dec
repz
icebp
fstps
jle
mov
mov
push
lret
dec
shlb
sbb
mov
xor
std
mov
fmuls
ror
jae
and
inc
adc
imul
fnstsw
clc
xorb
mov
popa
cmp
jge
outsb
lea
arpl
or
mov
cmp
xchg
subl
add
push
mov
outsb
clc
xor
mov
fwait
div
pusha
imul
cld
in
pusha
xchg
insl
xchg
test
pop
lock
or
mov
mov
xor
or
sbb
scas
xchg
subb
outsb
adc
pop
cli
pop
mov
jle
cmc
imul
js
inc
sbb
mov
insl
xchg
fsubrp
adc
icebp
cmp
pop
shlb
mov
repnz
iret
je
je
outsl
leave
cmp
aam
mov
mov
inc
fsubs
and
cwtl
pop
inc
mov
rolb
adc
jle
jl
xchg
lahf
cmpl
mov
xchg
lret
stos
stos
shrl
inc
and
lahf
mull
ljmp
fimuls
add
in
push
rcrl
aam
xchg
fs
test
aad
cmc
aam
sahf
shl
mov
hlt
cwtl
ret
push
or
adc
cmp
jnp
icebp
pop
imul
jbe
inc
cmc
aaa
lret
out
jge
cs
adc
sbb
jmp
int
sti
out
iret
pop
imul
insl
leave
lret
push
mov
repz
repnz
cmp
incb
ss
cltd
xchg
mov
xchg
aaa
ret
add
add
xchg
imull
inc
ss
pushf
imul
inc
fnstcw
mov
arpl
pop
in
lahf
test
ja
mov
outsl
xlat
push
xchg
ss
fidivrs
push
xor
sbb
xlat
mov
or
js
adc
js
loopne
jecxz
jge
aaa
shlb
hlt
xor
inc
lahf
jnp
mov
cmp
test
lahf
aaa
jne
inc
add
jbe
mov
jnp
adc
lret
sbb
sbb
mov
sarb
ljmp
push
sub
jnp
stos
loop
sahf
sbb
xchg
inc
and
xchg
aaa
inc
sbb
mov
cmpsl
call
imul
add
and
xchg
jno
mov
xchg
movsb
push
sbb
push
test
or
repnz
fsubrp
xor
aaa
mov
dec
cmp
adc
fldenv
add
xchg
jmp
hlt
pop
dec
insb
sbb
dec
js
repnz
xchg
lret
mov
js
shll
adc
sarl
loopne
mov
mov
mov
gs
push
cltd
xor
lods
xchg
arpl
loope
fists
and
push
lret
clc
iret
fcmovnbe
sti
fsubs
arpl
pop
fadds
rcrb
insl
stos
cmc
or
sbb
aas
pushf
aam
cmc
xchg
mov
addr16
xchg
mov
push
sbb
mov
data16
mov
inc
shlb
popa
inc
jne
inc
and
jae
mov
sar
mov
lods
aas
orl
mov
xchg
rclb
loop
jge
jle
cmp
stc
dec
mov
sbb
adc
fisubrs
pop
sub
mov
and
mov
inc
xor
dec
pusha
jnp
pop
repz
dec
xor
ljmp
cmp
and
sbb
into
aas
jns
mov
idivb
xchg
loope
shl
sbb
stc
sahf
xchg
fldenv
xchg
shlb
into
mov
aad
insl
adc
xchg
mov
and
xor
dec
sbb
cli
jnp
pop
ret
dec
clc
arpl
cmp
movsb
jg
inc
pop
mov
inc
rcrl
fwait
jecxz
mov
clc
fidivl
lcall
jnp
and
push
jae
jo
cmc
test
inc
xchg
mov
and
cmp
shlb
js
sti
int3
sbb
test
jg
fstpl
enter
sbb
loop
into
jl
push
sarb
jns
jae
push
jbe
out
xchg
fucomip
inc
mov
inc
adc
aam
dec
push
pushf
nop
dec
cmp
sarb
shl
lret
inc
adcl
sti
cmp
shlb
ret
fsub
pop
xlat
mov
loop
movsb
pop
scas
push
mov
mov
mov
jne
icebp
adc
loope
data16
pop
xchg
jo
xchg
rcll
jge
mov
dec
xchg
stc
push
cmp
xchg
pop
adc
out
jae
or
and
je
push
cwtl
xchg
fbstp
je
cmp
jae
push
pop
dec
dec
push
sub
pop
negb
imul
adc
mov
ss
js
mov
inc
push
mov
xchg
repz
aas
sbb
cmc
mov
gs
add
cmpsb
lock
push
pop
fnsave
nop
ss
or
adc
add
cmc
leave
int
or
adc
xchg
sub
sahf
shlb
pop
cmp
test
mov
test
jecxz
pushf
adc
cld
jae
and
ja
cmc
enter
xchg
fldl
cmpsb
xor
xchg
std
ret
sub
cltd
dec
sarl
dec
xlat
loop
and
shlb
jp
inc
js
inc
and
or
pop
dec
adc
push
dec
idivb
ss
dec
ret
fbstp
movb
cmp
lret
enter
mov
loop
add
sub
dec
lret
fadds
push
arpl
rcl
jg
mov
cli
ds
push
mov
icebp
fildll
add
cmp
push
sbb
popf
test
rcrl
push
mov
dec
xor
push
idivl
in
ret
adc
cmp
add
sbb
cmpsl
insb
mov
dec
enter
cmpsb
out
not
jle
dec
lret
fscale
aaa
inc
and
ljmp
icebp
into
fs
aam
loop
add
roll
jl
pushf
les
fdivl
cmpsb
mov
inc
pop
sub
jns
lock
pop
xchg
imul
cmp
sbb
nop
xchg
mov
adc
sbb
nop
shlb
jle
xchg
add
fstl
xchg
nop
hlt
sbb
js
hlt
adc
push
hlt
mov
jle
mov
in
aaa
jle
inc
aam
push
xlat
dec
loop
adc
mov
xor
pop
loope
mov
ds
xorb
sbb
pxor
rclb
and
xor
adc
ret
fstpl
dec
xor
in
adc
adc
fidivrl
je
sbb
test
insb
sar
xor
mov
mov
imul
hlt
push
fidivrs
shr
into
divb
ja
fbstp
rclb
loopne
into
mov
mov
rcll
lret
xor
mov
add
cmc
lret
fidivl
pop
or
clc
hlt
lods
mov
std
mov
dec
aas
sti
xor
mov
jno
cmp
mov
lods
cmpsb
sub
dec
mov
icebp
pop
test
push
mov
ss
aaa
pop
cmp
sbb
movsb
cmp
bound
fwait
movsl
mov
clc
repz
lea
cli
cmpl
pop
jnp
into
cmp
or
or
jno
fisttpl
mov
ret
sub
repz
push
mov
inc
push
jnp
add
ret
inc
xchg
daa
xchg
xchg
sbb
mov
inc
shll
xchg
aam
repz
rcll
push
mov
in
fisttpl
mov
test
mov
push
test
xor
nop
cmp
adc
cmp
xchg
jle
fidivs
cmc
and
sbb
sub
dec
mov
out
jle
mov
pop
adc
shll
cs
jle
std
or
out
pop
out
or
push
clc
fildl
sti
lret
cmc
mov
jb
pop
shlb
or
jb
repnz
cmp
jbe
cmpsb
cmp
xchg
pusha
push
adc
jo
xorb
push
jl
push
mov
das
popf
jle
mov
mov
sbb
cmp
pushf
inc
mov
mov
cmp
add
jb
pop
repnz
mov
cmc
push
xor
andl
into
mov
out
push
xor
test
adc
lods
inc
cld
mov
push
pop
dec
dec
stc
dec
mov
mov
dec
sub
mov
std
or
pop
sub
scas
xor
add
test
divl
cwtl
int
jle
ljmp
fdivrs
xchg
dec
inc
inc
lcall
adc
shl
into
mov
adc
inc
int3
inc
xchg
test
inc
rorb
aad
push
push
xor
loope
sub
loop
add
rdpmc
push
aas
pop
mov
cmp
minps
lahf
mov
test
pop
pop
mov
imul
jecxz
icebp
adc
mov
cmp
cmp
mov
cmc
or
xchg
lods
dec
push
sbb
xor
nop
adc
ror
repnz
push
jb
aam
inc
lret
ja
xchg
and
push
pop
lret
adc
sub
ja
mov
les
dec
adc
sub
lds
push
rolb
into
jb
add
sbb
dec
out
push
xor
inc
repz
mov
mov
andb
jo
xor
sub
sbb
push
or
pop
xchg
dec
shll
adc
push
repz
sbb
shll
push
test
jae
push
add
iret
adc
insl
repz
test
not
cmp
mov
in
cmpsb
xchg
xchg
pusha
push
adc
adc
sbb
xchg
std
test
push
ret
icebp
xor
daa
xchg
pop
fdivl
mov
pushl
xchg
inc
pop
aam
mov
cmpl
pushf
stos
orl
xchg
xchg
lret
inc
jp
dec
test
xchg
xchg
std
push
or
inc
fs
add
dec
mov
jp
hlt
fmuls
xor
rcll
repz
std
stos
fisubs
repz
inc
xchg
cmp
fwait
cmp
push
inc
adc
fbstp
mov
aas
lcall
inc
adc
js
mov
lret
xchg
aas
jbe
popf
cmp
mov
sbb
push
aaa
call
and
mov
rolb
sarl
pushf
int3
jbe
clc
jp
xchg
xchg
mov
sbb
shl
inc
and
lods
ret
push
push
jo
adc
jo
je
mov
mov
adc
cmp
jo
je
mov
cmp
and
xchg
lock
xchg
pop
inc
xchg
je
adc
xchg
jno
jb
stc
cmp
aam
inc
and
adc
push
lock
inc
xchg
lock
loop
lock
xor
lock
mov
inc
sbb
aad
and
cli
cmc
mov
ret
lcall
fildl
xchg
mov
fisttpl
xor
fildl
xchg
das
cwtl
fisttpl
cmp
inc
fcmovnbe
sbb
mov
xchg
mov
fistl
into
jle
xor
fistl
into
jle
cmp
fistl
fistl
mov
fistl
fninit
xchg
inc
gs
fninit
xchg
enter
fists
fbstp
xchg
xchg
pop
gs
fistl
fistl
fcomi
xchg
xor
push
mov
addr16
lock
loop
xor
mov
add
xor
lock
push
adc
and
int3
xor
lret
sbb
xor
cmpsl
jmp
das
int
scas
int
inc
lret
mov
xor
js
stc
leave
adc
in
push
sub
pop
xchg
lcall
cmp
xchg
adc
cmp
mov
int
adc
leave
xchg
rorl
mov
sub
nop
push
cmp
mov
aaa
roll
jg
add
sub
fisubs
jecxz
jae
dec
outsl
xlat
mov
inc
insl
mov
push
jecxz
cld
sub
dec
arpl
push
jnp
jb
mov
cmp
jmp
jne
inc
xchg
int3
aad
or
xchg
dec
jnp
out
jne
daa
adc
lock
aaa
iret
shl
cmp
and
and
jne
xchg
cli
cmp
mov
fdivrs
loope
xor
xor
inc
pop
mov
push
cmp
xor
mov
push
mov
dec
arpl
fs
jbe
push
inc
lahf
mov
rcrl
inc
icebp
and
jne
add
adc
jb
xor
pop
adc
jle
cmc
adc
sar
pop
push
testl
cld
fistl
mov
jge
negb
aam
data16
ret
xchg
or
mov
aaa
and
jg
fnsave
or
aaa
iret
jae
cmp
adc
bound
dec
adc
aas
int3
xor
lods
loope,pn
push
inc
push
xor
outsb
push
mov
repz
adc
stos
adc
xchg
inc
and
in
lcall
mov
fisubl
insl
shll
shrb
adc
jb
cmpsb
das
rcll
insl
jb
push
stc
dec
mov
xchg
cmpl
jp
jbe
xor
mov
cmp
adc
aaa
mov
cmp
pop
jbe
fistpll
mov
cmp
cmp
icebp
cmp
je
dec
and
sbb
lods
enter
sub
int3
xor
fwait
test
inc
inc
xor
sub
mov
sarl
add
movsl
and
push
data16
stc
dec
xchg
int3
xor
cmp
int3
loope
repnz
shlb
push
cmp
dec
push
int3
insl
adc
mov
out
lods
lcall
roll
fdivrp
lret
xor
xor
repnz
xchg
test
mov
lcall
cld
in
jb
xchg
les
imul
movsb
sarl
aam
xchg
movsl
repnz
ficoms
mov
lret
mov
stc
dec
jae
xor
shrb
xor
fs
inc
insb
xor
ret
xchg
xor
add
pop
adc
adc
push
mov
adc
lcall
data16
xor
mov
jecxz
addb
xor
insl
xchg
jne
fmul
jns
stc
dec
jb
xor
fs
inc
fs
add
jbe
cmc
lock
push
jb
adc
aam
adc
aam
adc
aam
pop
adc
adc
xor
mov
repz
mov
adc
aaa
xchg
leave
lea
cmp
in
xchg
xor
push
jns
xor
dec
xor
push
jge
getsec
shlb
xlat
and
hlt
mov
inc
mov
pop
mov
mov
shlb
xor
aaa
pop
pop
mov
xor
out
aaa
lock
ja
and
out
js
cmp
mov
jecxz
jae
jp
push
jg
lods
js
out
xchg
inc
sarb
mull
pop
pop
cmp
js,pn
mov
push
jae
dec
in
cmc
pop
inc
das
fwait
cwtl
dec
pushf
mov
fisttpll
cmp
mov
sbb
jae
add
push
adc
cld
loop
cmp
cmpsb
mov
sbb
outsb
in
add
xchg
mov
push
jnp
mov
lret
inc
cmp
mov
xor
cwtl
sahf
xchg
mov
movsl
lea
mov
inc
call
mov
xlat
movsl
xchg
stc
mov
xor
pop
mov
fwait
popa
popa
loop
inc
adc
pop
mov
dec
pop
pop
repnz
jb
aaa
push
mov
push
jns
adc
jno
mov
daa
jbe
int3
inc
pop
insl
dec
idiv
or
loop
mov
cli
cmp
inc
mov
inc
pop
mov
mov
inc
inc
cmp
mov
pop
clc
adc
cmp
shrb
sbb
inc
inc
and
push
inc
popa
inc
mov
inc
jns
lcall
jns
cs
add
mov
icebp
mov
cmp
jno
adc
adc
es
pop
jge
dec
mov
mov
out
mov
in
je
cltd
pop
sbbl
inc
cmp
mov
dec
mov
ljmp
mov
test
inc
adc
sub
stc
repnz
je
cltd
and
lcall
mov
cli
push
dec
icebp
sub
xchg
mov
sbb
jge
cli
push
mov
fldl
push
jae
jo
testl
fists
mov
int3
test
xchg
jno
and
jno
jp
iret
xor
jp
push
in
push
out
or
repnz
push
mov
es
insl
cmp
sub
add
mov
sbb
loopne
sub
aam
jl
lods
bswap
into
clc
push
lea
test
imul
pop
xorl
and
fdivl
popf
enter
sub
push
cmp
lcall
xchg
lahf
inc
jns
dec
cmp
jp
xlat
mov
and
lds
mov
in
add
lret
adc
repz
int3
aad
in
outsl
loopne
aas
push
sbb
sbb
lcall
mov
xor
jg
adc
in
icebp
aam
jns
inc
dec
je
movsb
jne
inc
pop
cmp
mov
jne
xchg
mov
jecxz
jg
jno
push
inc
shll
data16
jns
dec
mov
jb
push
inc
ss
sub
pop
test
sbb
or
sbb
xchg
aad
sbb
out
dec
sahf
repz
out
ret
push
lret
iret
ss
and
lods
xlat
sbb
adcl
jmp
cwtl
adc
xchg
cld
loope
in
cmc
fnstenv
mov
loope
sbb
push
sbb
popa
stos
mov
push
mov
es
sbb
jmp
sub
mov
rcrl
shlb
xchg
fstps
xchg
test
jnp
xor
loop
add
pop
mov
mov
inc
dec
int
push
jecxz
mov
cmpsb
mull
jbe
and
mov
neg
cmp
les
push
aaa
fildl
sbb
jp
iret
frstor
out
fincstp
into
lea
and
pop
je
cmp
nop
pop
jp
iret
into
out
mov
fnstenv
imul
adc
iret
arpl
and
cli
add
std
mov
push
jns
enter
fcmovnbe
pop
iret
cmpsl
jns
dec
jbe
repnz
ret
cmp
sbb
insb
repz
mov
ds
mov
or
mov
iret
dec
sub
cld
cmp
cmpsb
mov
pop
push
or
mov
cmp
cs
cmp
lahf
aam
addr16
pop
pushf
test
add
pushf
and
cld
shl
fsts
rolb
cmp
inc
insl
dec
adc
mov
imul
cmp
xchg
mov
les
ret
inc
mov
cmp
mov
mov
cmp
mov
add
push
icebp
rcl
pop
rorl
xchg
call
bound
ds
cmp
lds
adc
repz
lock
cmp
rolb
icebp
cmpsb
sbbb
push
div
pop
loop
mov
or
movl
add
or
rorl
push
mov
in
icebp
into
aad
pop
inc
sub
out
xor
leave
cmp
clc
mov
pop
pop
scas
xchg
mov
jmp
xchg
jmp
sbb
jp
xor
fucomi
ret
dec
icebp
add
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
fucomp
xor
jecxz
xor
lock
ss
repz
cmp
dec
iret
dec
lcall
std
int3
ljmp
hlt
mov
push
mov
dec
jne
push
mov
xor
arpl
aas
mov
cmp
cmp
fidivl
repnz
mov
je
sub
xor
sbb
enter
dec
sub
int3
pusha
les
mov
cmp
mov
xor
jno
mov
ret
dec
jbe
sub
mov
sub
pop
mov
mov
xor
xor
xchg
cwtl
mov
icebp
imul
inc
cmp
insl
jle
mov
sbb
pop
sbb
mov
dec
jg
mov
lret
rcll
cmp
add
and
mov
stos
pushf
mov
stos
aas
mov
xor
jbe
push
mov
int3
lcall
pop
mov
cmp
mov
dec
mul
xchg
rclb
cmpsl
mov
xchg
pop
jnp
mov
push
icebp
sub
add
or
fucomi
shl
sbb
gs
shlb
sbb
lahf
mulb
cmp
add
mov
jge
mov
clc
fidivl
shll
pushf
mov
mov
add
sub
mov
jmp
js
adc
repz
or
adc
cld
jl
icebp
cli
jb
mov
sti
pushf
dec
jp
sarb
ja
in
dec
xchg
fwait
jle
call
jns
fadd
add
cmc
pop
and
xchg
sub
nop
aas
inc
mov
adc
push
loop
or
pop
adc
insb
test
sbb
in
push
jae
in
push
pop
out
jno
dec
repnz
jp
roll
loopne
push
test
sub
xorb
rorb
or
test
ja
in
int
movb
lea
mov
push
repnz
push
adc
cli
xchg
iret
into
cmp
int
mov
inc
dec
bnd
les
imul
aaa
aas
jb
or
jp
roll
xchg
lea
aas
mov
push
sar
push
lea
sbb
test
adc
adc
inc
jecxz
jp
clc
push
das
fnstenv
pop
xchg
test
sub
ret
jno
cmc
and
sub
add
decl
ds
int3
mov
test
and
sub
lret
adcb
test
fs
icebp
je
int
push
xor
push
test
mov
std
mov
or
or
clc
js
lods
mov
clc
out
ss
push
lcall
pop
mov
sub
adc
push
push
ficoms
xor
sub
cmp
push
inc
cmpsl
hlt
dec
mov
jl
push
adc
sbb
cmpsl
pop
test
sbb
cwtl
rclb
push
xchg
push
push
mov
cmpsl
jg
test
ljmp
test
mov
pop
sub
jge
cmp
xchg
inc
test
inc
out
int
incb
adcb
xor
aad
icebp
mov
mov
lret
jae
pop
loope
sbb
push
and
or
test
sub
xchg
push
push
push
add
lea
dec
jns
sub
leave
jno
bound
mov
inc
mov
das
ret
adc
ret
mov
dec
scas
jae
mov
mov
jno
jbe
mov
cli
sti
mov
int3
fidivrl
inc
fidivl
add
jae
test
push
xor
mov
mov
mov
fidivrs
jne
ror
mov
in
xchg
and
push
cmp
cmp
rcll
sub
mov
divl
fsts
dec
push
mov
hlt
jecxz
xchg
and
xchg
jae
stos
ljmp
inc
mov
sub
cmpsb
or
xor
fidivs
mov
outsl
out
repz
add
sbb
imul
jle
int3
inc
push
fwait
movsb
xor
sti
xchg
mov
repnz
in
pop
cmpsb
push
mov
test
rclb
mov
movsb
add
repz
in
adc
mov
adc
mov
pop
push
xchg
mov
aad
adc
jp
and
xor
leave
imul
and
lcall
jle
ret
mov
inc
jno
xor
jmp
ss
pop
in
inc
sbb
xchg
out
pop
into
hlt
lret
pop
mov
mov
mov
xchg
test
dec
mov
fs
jb
cmp
jns
loop
std
aad
push
pusha
adc
inc
outsb
mov
sti
mov
mov
cmp
je
pusha
fildl
jns
push
sbb
daa
fld
ja
mov
mov
lds
xor
cmp
adc
jae
sahf
lcall
adc
mov
ss
mov
adc
sbb
popa
into
mov
adc
or
cmpsb
inc
gs
je
or
mov
mov
push
mov
fwait
icebp
cmp
scas
push
mov
mov
dec
add
lods
out
arpl
xchg
hlt
mov
aas
jno
dec
movsb
test
insb
xchg
cmpsl
insb
lds
lods
dec
in
sti
je
insb
jge
cmp
fmull
mov
push
add
push
mov
test
ret
out
add
cmc
shll
imul
rcrl
add
mov
add
mov
push
mov
jecxz
sbb
arpl
xchg
out
dec
xor
lret
xchg
xchg
nop
jae
scas
ret
fldcw
add
rcll
aam
xor
aam
test
hlt
mov
test
inc
pop
hlt
xchg
cmpsw
hlt
repz
cmp
stos
hlt
test
xor
xchg
and
xlat
or
push
addl
movsbl
pushf
inc
xor
jns
outsb
push
pop
xor
jne
inc
sbb
sbb
jmp
jmp
xchg
jne
sbb
xor
jne
adc
jp
jne
xorb
mov
xchg
add
in
xchg
cmpsl
ret
pop
data16
xchg
xchg
inc
sbb
or
pop
sti
movsl
mov
negb
push
les
dec
mov
cmp
push
adc
xchg
mov
fcompl
mov
mov
jb
scas
enter
push
cmp
inc
xor
xor
mov
sbb
lret
inc
push
dec
outsl
or
bound
mov
loopne
jae
outsl
mov
mov
lret
push
pop
cli
add
fs
fwait
jbe
xlat
add
scas
pop
js
repnz
les
jl
pushf
mov
je
mov
cmp
gs
pusha
xor
push
mov
mov
or
jbe
mov
push
dec
jbe
mov
je
div
pop
mov
je
mov
sti
mov
ficoms
mov
cmp
lahf
jbe
mov
stos
aas
in
fdivl
divb
or
arpl
shrl
dec
fadds
add
icebp
icebp
sub
jl
insb
sub
fwait
xor
mov
sbb
icebp
iret
mov
dec
xor
dec
inc
mov
nop
inc
sbb
popf
and
repz
push
pop
ljmp
push
adc
mov
and
or
dec
cmp
xchg
inc
mov
lahf
or
fsts
lods
or
out
movsl
add
jle
je
push
icebp
sub
and
ja
clc
pusha
clc
test
add
add
test
pushf
or
jmp
jmp
stos
outsl
ljmp
insl
das
jbe
outsl
out
mov
adc
add
outsl
fnstenv
std
jno
push
iret
xor
sub
fidivrl
or
movw
lea
jne
call
pushf
lea
jne
lahf
jmp
movl
push
lea
jmp
int3
test
add
cmp
lea
icebp
xor
jmp
xchg
lock
inc
jg
push
xlat
cmp
xor
pop
popf
adc
lret
scas
adc
xchg
dec
jge
sbb
addr16
cli
jne
pop
scas
dec
in
popa
sti
mov
add
mov
sti
lock
lock
inc
add
ss
ljmp
jp
mov
sub
sahf
add
push
jecxz
ret
aas
stos
inc
cld
daa
xchg
xor
push
xlat
int3
xor
dec
jg
ret
lock
inc
nop
adc
cs
outsb
or
xor
xchg
mov
stos
arpl
jle
xor
jns
pop
cwtl
aam
mov
ljmp
lock
mov
push
int3
xor
push
mov
mov
arpl
add
fdivs
icebp
in
test
and
mull
mov
mov
xchg
add
test
inc
fcmovbe
imul
push
scas
push
jb
mov
test
mov
xchg
mov
jle
xchg
and
mov
inc
jge
leave
std
dec
inc
ja
jmp
sub
inc
incb
incl
pushl
call
movl
pushl
mov
pushl
popl
pushl
push
push
pusha
pushl
ret
pushf
pushf
movl
push
mov
pushf
mov
lea
jmp
jmp
ss
xor
pop
pop
dec
aaa
fistpll
mov
add
fcom
scas
sbbl
ds
xor
aaa
jmp
pop
std
test
mov
ljmp
jmp
jmp
dec
sbb
mov
ljmp
fcomps
sub
add
inc
cmc
mov
cli
mov
aaa
lcall
stos
sub
incl
ljmp
push
mov
testl
ss
mov
ficoms
push
ss
out
ror
lcall
int
mov
pop
mov
cli
jmp
sbb
cmp
call
cmp
sub
jg
lock
pushl
mov
add
out
adc
decl
cld
fnstenv
aas
mov
mov
add
pushl
std
mov
mov
sbb
pop
enter
call
lret
sahf
aaa
decl
jo
pushl
aas
cmp
in
decl
jl
ss
dec
hlt
call
pop
jmp
lcall
mov
je
sbb
decl
insl
pushl
enter
lcall
cwtl
test
xchg
cld
push
call
dec
push
push
into
addr16
inc
and
mov
xor
inc
jae
stc
cmp
decl
sar
lcall
pop
push
push
push
sarb
cld
jmp
out
pop
fistpll
clc
incl
jmp
mov
out
test
decl
push
and
ljmp
add
cmp
pop
adc
fidivrs
jne
pop
call
mov
push
dec
cmp
ljmp
call
clc
ds
jmp
lcall
mov
call
rorl
aaa
push
adc
lcall
lahf
pop
cmp
outsl
cmc
ja
fisttps
inc
gs
outsl
fs
gs
imul
add
les
add
setno
mov
lea
push
movb
lea
call
jmp
lea
jb
call
pusha
call
pushf
pushl
popl
mov
pushl
ret
mov
call
add
inc
js
je
jb
arpl
jae
jmp
bt
cmc
push
stc
or
pushl
lea
je
not
pushf
seto
not
mov
cwtl
call
es
sub
cmpsl
sbb
lea
icebp
jns
test
loope
mov
pop
ret
xlat
addr16
icebp
dec
shlb
out
xor
push
cmp
cld
icebp
pop
test
shlb
inc
mov
fcompl
jmp
lcall
xor
inc
stos
xchg
ret
and
dec
push
pop
subl
scas
add
xor
push
lret
xor
test
popf
dec
aaa
loopne
daa
ja
lea
lcall
stos
mov
cmp
sbb
into
outsb
adc
out
cmpsb
loopne
inc
or
pop
or
mov
pop
repz
bound
sub
fwait
in
or
mov
xor
jnp
push
rcr
lahf
daa
push
push
int
test
inc
insl
roll
xor
mov
push
test
rcl
mov
aaa
xchg
cli
ss
ds
ret
pop
repz
sub
xchg
jl
cmpsb
shrl
dec
lahf
lods
jmp
mov
push
cltd
lods
test
add
and
shlb
xlat
rorb
xor
cmp
add
inc
mov
mov
insl
and
sbb
xor
xchg
xchg
out
inc
jbe
jg
scas
sub
sbb
xor
lret
outsb
mov
fcmovnu
mov
call
call
add
mov
mov
jmp
lea
jb
stc
stc
clc
cmp
jmp
lods
lock
xor
mov
loop
aaa
add
fdiv
push
into
cld
movsb
adc
cs
xchg
call
push
into
mov
repz
insl
arpl
xor
jb
jg
into
insb
add
stos
jo
xchg
mov
jecxz
add
daa
filds
add
ljmp
sbb
sbb
and
out
mov
lds
adc
lock
test
push
in
stc
xor
iret
dec
dec
aad
nop
mov
inc
pusha
rorl
xchg
cltd
aam
in
dec
repz
shr
push
mov
xor
add
rorb
pop
and
out
outsl
addb
push
fst
clc
lahf
into
dec
in
test
bsr
and
hlt
cmp
lea
nop
aaa
dec
js
sub
into
scas
mov
mov
xor
and
int3
popf
adc
rcr
mov
adc
bound
xchg
sub
jmp
ficoms
enter
je
add
iret
call
mov
or
jg
cmpsl
or
fistl
pop
outsl
rorl
lahf
std
dec
add
cld
xchg
stos
subb
sbb
inc
popa
test
pop
orb
adc
pop
xchg
mov
cs
pop
testb
push
sahf
loop
adc
sbb
cmpsl
sbb
in
fadds
rclb
or
and
push
fcomps
xchg
push
push
imul
cmpsl
in
jne
and
imul
push
mov
pop
cmp
xchg
jmp
sub
mov
and
pop
dec
ss
or
repnz
inc
stos
pop
jbe
or
shlb
pop
mov
idivb
add
fs
xchg
pushf
lea
jbe
not
movzwl
pushf
lea
pop
mov
call
into
ret
mov
lods
sbb
sbb
add
leave
inc
fisttps
sbbb
cmp
add
mov
jmp
jbe
fidivrl
ficompl
push
cmp
dec
pusha
test
lret
jecxz
sbb
pusha
pop
inc
jmp
aaa
cld
sbbl
cmpsb
ljmp
xor
imul
adc
jno
push
adc
jmp
pop
fimull
sahf
mov
loope
repnz
andl
mov
and
data16
cmp
inc
cmp
sbb
push
in
in
fcomps
nop
or
fnstsw
cmp
fsts
pop
mov
lods
xor
sub
dec
xchg
xchg
int3
mov
mov
pop
mov
cld
xor
aam
sar
pop
out
les
js
mov
cmpsl
sbb
xor
or
jp
xchg
bound
inc
jmp
test
hlt
fisttps
jg
mov
mov
inc
mov
and
mov
sub
mov
in
pop
adc
jle
movl
dec
aas
enter
jne
lods
xchg
sbb
jl
cli
cs
outsb
ljmp
repz
aad
leave
sub
jno
sub
sub
cld
icebp
cmp
push
dec
adc
cmp
xorb
mov
inc
shll
sub
add
bound
adc
dec
in
cs
rcr
lret
das
ficoml
or
dec
xor
outsb
mov
inc
cmp
mov
inc
sbb
mov
cmp
jge
testl
test
pop
mov
loopne
add
mulb
mov
xchg
xorb
test
subb
std
cwtl
cmp
scas
cltd
mov
sub
push
shrl
ret
in
insl
hlt
sub
xor
sbb
mov
sub
xor
push
iret
je
mov
xor
in
add
andb
fmull
mov
and
jo
sub
add
push
je
dec
int
mov
cmp
scas
out
dec
ja
iret
cmc
out
repnz
cmp
ret
stc
bt
stc
cmp
jmp
dec
ds
mulb
scas
ds
push
mov
dec
jb
adc
cmc
fdivs
add
push
push
push
xchg
push
lods
push
fidivl
leave
mov
and
push
iret
push
in
repz
pop
xchg
mov
add
outsl
daa
xchg
adcl
pusha
mov
scas
jmp
cmp
cmp
call
jmp
lea
jne
test
bswap
mov
sar
bsr
movsbl
bts
sub
inc
inc
movsbl
cmp
mov
push
clc
call
cmc
mov
call
lea
je
cmp
cmp
pusha
lea
jne
call
mov
mov
pushf
pusha
push
mov
pushf
pushf
jmp
cmp
push
cmc
cmpsl
sbb
cwtl
clc
xor
and
push
mov
pop
xchg
movsb
push
xchg
adc
cmpsl
mov
aad
pop
call
mov
inc
jae
push
jbe
dec
shll
mov
or
lret
int3
adc
cmp
add
icebp
or
pop
lods
fcoml
fs
adc
adc
fmuls
test
inc
add
bswap
or
shrd
test
mov
pushf
test
cmp
cmp
movl
lea
ja
movsbw
pop
movsbw
movzbw
mov
pop
call
fstl
xchg
mov
xor
inc
push
fwait
rolb
popf
dec
pop
pop
xchg
adc
ss
es
andb
insb
lret
jmp
out
js
data16
or
pusha
sahf
lret
push
mov
lods
adc
cwtl
call
lock
and
mov
pop
orb
insb
inc
jb
add
test
add
sbb
or
call
pop
push
xor
cmpsl
sbb
std
jno
gs
sbb
mov
test
icebp
pop
cmpl
or
idivl
push
adc
pop
jno
shlb
jae
in
rclb
out
repz
ret
clc
jl
mov
fucom
pop
sahf
ficomps
lcall
lods
subl
sub
xor
lcall
pop
out
xchg
pop
scas
push
pop
pusha
test
ss
mov
xor
ljmp
stos
fimuls
inc
fadds
inc
dec
mov
lea
call
cmc
cmc
sub
call
call
repnz
jmp
and
test
mov
popa
fstl
dec
mov
xchg
xlat
xchg
scas
jg
cmp
xlat
int3
sub
ja
mov
test
fists
push
adc
mov
inc
and
xchg
mov
call
jae
sbb
cmpsl
sbb
mov
xchg
or
push
stos
inc
add
test
push
loope
lret
mov
mov
xlat
addr16
jnp
mov
mov
mov
pop
frstor
dec
rorb
gs
mov
jp
mov
ljmp
push
shr
mov
jbe
jnp
imul
add
dec
insl
test
aam
icebp
and
movb
pushl
movb
movl
call
lea
jae
pusha
and
mov
bts
mov
btr
adc
mov
pusha
xor
bt
repnz
call
cs
and
cmpsl
sbb
popf
and
in
pushf
or
and
lods
add
enter
or
sub
popf
imul
out
cmp
mulb
dec
jge
inc
push
or
icebp
lret
or
inc
enter
sub
and
or
cmp
insb
dec
jl
into
movsl
jbe
sarb
push
sbb
test
jns
dec
stos
xor
je
arpl
sbb
iret
adc
cmpsl
sbb
inc
leave
gs
inc
aad
lds
mov
movsl
psubusb
movsb
sub
cli
clc
jno
inc
jns
ja
je
lods
adcb
adc
inc
popa
aas
ret
icebp
push
pop
pop
cmpb
mov
push
xchg
test
mov
cwtl
hlt
jns
and
jmp
lea
je
bt
cmp
call
imul
gs
xor
cs
insb
add
rol
jmp
fs
icebp
cmpsl
sbb
push
aam
les
inc
shlb
pop
lret
xchg
fdivs
jecxz
pushf
clc
fcmove
pop
and
shlb
mov
pushf
push
inc
popa
xor
xorb
jbe
push
out
bound
push
mov
incb
bswap
lea
mov
movzbw
pop
bswap
pop
call
push
lea
call
call
mov
call
pushf
lea
call
jmp
movl
pusha
movb
mov
lea
jmp
adc
jp
cmpsl
sbb
or
add
in
jl
xchg
mov
sub
adc
adc
imul
inc
xor
xor
loop
pop
jbe
mov
jne
mov
mov
int3
imul
mov
cmp
std
gs
sbb
loopne
loopne
adc
pop
jmp
add
adc
mov
in
pop
clc
pop
add
push
lea
lret
in
push
or
lods
outsl
dec
repz
dec
jmp
movsl
add
xchg
std
jg
outsl
mov
fbstp
mov
and
nop
sub
sub
or
bt
test
pushf
mov
lea
je
pushf
pushf
add
cmc
test
movw
cmp
pusha
lea
jb
test
cmp
pusha
pusha
jmp
add
mov
cmpsl
sbb
in
lock
lock
imul
xor
mul
nop
adc
loopne
mov
enter
jo
inc
sahf
es
shlb
mov
lret
xchg
inc
pusha
rorb
mov
mov
jnp
add
lcall
ja
jp
into
push
sti
jne
xchg
xchg
sbb
xor
xor
sub
test
ja
and
xchg
rorb
add
jno
jae
cwtl
sbb
jle
aam
cmpsl
sbb
scas
adc
or
jbe
mov
out
jmp
outsl
add
inc
push
jbe
add
cltd
inc
or
stc
mov
shrl
jne
std
sbb
test
bt
or
jmp
lea
jne
call
je
or
bsr
or
test
add
movsbw
sub
sar
clc
xor
shr
ror
mov
shl
add
btr
jmp
call
sbb
out
cmpsl
sbb
nop
add
add
mov
out
xchg
jbe
inc
cmpsl
out
out
add
sbb
ss
jb
in
rorb
scas
dec
jmp
add
lret
ret
and
out
aas
and
jbe
es
int
fwait
inc
mov
pop
fwait
jae
push
mov
pop
mov
cwtl
lods
inc
xor
xchg
adc
fldenv
pop
mov
and
cmp
jbe
fstl
ror
xor
call
pusha
cmp
push
pushl
movl
pushl
lea
jae
pusha
jmp
movl
call
out
loop
cmpsl
sbb
filds
inc
mov
popa
std
xchg
cmp
push
or
mov
movsl
cmpsl
mov
or
shrb
add
cltd
mov
ret
and
push
outsb
mov
iret
xchg
pop
jg
lea
scas
and
sub
std
divb
pop
int3
add
loopne
push
mov
xor
mov
lock
std
std
mov
ret
jae
mov
es
pushf
mov
pop
xor
xor
push
mov
in
sbb
scas
and
aam
pop
lds
in
fsubs
adc
test
test
xchg
jno
scas
add
xlat
xor
aam
in
xchg
push
cmpsb
movsb
xchg
cmc
mov
push
enter
jnp
in
cmpsl
sbb
insb
rolb
in
xchg
dec
aas
jae
mov
pop
mov
and
daa
xchg
scas
pop
mov
xor
cli
out
dec
shlb
sbb
stos
sub
lea
clc
dec
cmp
cmp
dec
je
sbb
pushf
lock
test
and
mov
sub
mov
pushf
movl
call
setl
mov
jmp
lea
jp
pusha
movl
pushl
pusha
movl
mov
movw
movb
lea
jmp
lea
jne
pusha
call
pusha
push
movb
mov
lea
je
push
movzbw
push
push
call
sbb
mov
push
test
pusha
cmp
or
pushf
call
shr
sub
dec
test
mov
test
cmp
and
pusha
cmc
add
push
mov
pushl
lea
jmp
shl
add
shl
neg
mov
and
add
shr
dec
stc
movl
btc
mov
push
pushl
bt
cmp
pusha
call
cmc
pushl
pusha
push
test
bt
cmp
pusha
pushf
movl
lea
ja
adc
rcl
bt
sub
sbb
sar
add
movzbw
mov
shr
cmp
cmp
sar
mov
cmp
stc
repnz
pushf
lea
jae
push
mov
lea
jne
jmp
btr
mov
bt
cmc
pusha
pusha
and
stc
cmp
add
add
test
bt
jmp
aam
mov
sbb
xchg
and
mov
es
and
jmp
test
mov
or
cmp
int3
sti
mov
push
jo
add
dec
mov
div
aas
push
and
mov
and
jp
add
scas
xchg
sbb
dec
outsl
repz
out
xlat
in
xchg
add
rcr
into
sub
mov
sub
lods
jmp
inc
xchg
in
sub
xor
int
mov
jmp
xor
sbb
imul
push
cli
je
adc
mov
fisubs
pop
shrb
les
gs
movsl
roll
loop
xchg
out
xchg
inc
and
ljmp
add
xchg
lea
jmp
lea
jae
jmp
pushf
xchg
lock
dec
loope
mov
adc
insb
js
int3
pop
rcl
mov
inc
mov
ja
inc
push
ja
xor
jbe
jmp
mov
cli
jne
add
xchg
jne
jo
fcompl
les
dec
add
cmpsb
jo
insb
iret
dec
jns
rcl
mov
insl
stc
push
fisttpl
aaa
mov
add
mov
cmpsl
sbb
pop
ja
mov
shll
cmp
mov
outsl
lea
push
dec
lahf
rcl
mov
push
outsl
call
xor
scas
fwait
int3
lds
scas
xchg
sub
dec
bound
mov
mov
xor
sbb
in
or
imul
inc
scas
stos
mov
or
hlt
cmc
jns
cmp
add
addr16
cmp
dec
subl
sub
lret
mov
insb
out
insb
inc
mov
jge
scas
push
mov
pop
daa
xchg
add
ljmp
mov
pop
inc
outsl
ret
dec
push
cmc
clc
or
pusha
push
lea
jne
bsf
add
mov
cmc
pusha
or
push
pusha
lea
je
call
and
cmpsl
jmp
sbb
daa
mov
xchg
cwtl
cli
es
xchg
pusha
mov
push
aaa
notl
adc
mov
inc
xchg
or
dec
fistps
inc
fwait
ret
repnz
dec
ja
notb
inc
and
ds
negl
push
mov
movw
lea
jmp
cmp
jmp
push
jmp
pushf
pusha
movl
push
movb
lea
jne
push
movl
push
lea
jmp
push
mov
jmp
cmc
mov
cmpsl
sbb
dec
leave
inc
movsl
sub
sub
adc
pop
adc
dec
inc
jge
push
ja
in
fldcw
lret
fmul
daa
pop
inc
popa
mov
ja
adcb
in
jl
sub
je
call
orl
cwtl
mov
ja
jecxz
add
push
pushf
lea
jmp
call
cmp
nop
out
sbb
push
jmp
sub
push
sarl
xor
sub
leave
in
jge
and
test
test
xchg
add
repnz
pop
scas
out
xchg
sub
xchg
adc
pop
testl
lea
lods
lea
fwait
pop
fsubrs
mov
in
dec
add
dec
xchg
cmc
sub
iret
sub
jecxz
lock
pop
dec
or
jbe
inc
cmpsl
xchg
pop
dec
das
xchg
inc
enter
adc
jo
lods
push
outsb
cli
sub
flds
scas
xor
pushf
add
fmull
mov
and
mov
or
xor
je
or
add
out
jmp
lods
pushf
pushl
ret
xor
mov
sub
stc
test
pusha
bt
cmp
pusha
lea
jbe
dec
neg
add
sub
xadd
mov
bswap
cmc
inc
mov
neg
or
xor
add
bt
adc
bsf
shr
bsf
bsf
rcr
mov
bswap
pushf
add
bswap
not
jmp
lea
lea
seto
mov
cmc
stc
mov
pushf
setg
mov
stc
clc
clc
cmc
mov
jmp
add
pusha
test
mov
xor
rcr
cmc
mov
clc
cmp
call
loopne
jae
cmpsl
sbb
movq
arpl
dec
mov
pop
ret
add
cltd
sub
adc
roll
ljmp
mov
pop
push
scas
jnp
outsl
sarl
mov
xor
push
sbb
mov
pop
push
jbe
sub
outsl
rorl
pop
jg
sbb
mov
sub
inc
xor
pop
out
sbb
push
loop
fisubl
jle
pop
fisubrl
pop
sahf
int
sarb
sub
add
mov
sbb
inc
arpl
call
cmp
xor
fstps
cmp
push
xchg
out
jno
add
stos
arpl
mov
jmp
lahf
std
push
adc
iret
mov
pop
jg
pushl
imul
or
xlat
inc
push
adc
pop
and
cwtl
bswap
bswap
lahf
lea
push
jmp
shr
in
sbb
dec
cmp
std
mov
mov
jge
xor
dec
iret
pop
rcrl
pop
lds
dec
sarl
mov
imul
test
mov
add
stos
jo
aas
scas
sti
mov
mov
out
iret
das
pop
repz
cwtl
push
pop
xchg
stc
jne
hlt
cli
inc
mov
cmpsb
jb
mov
cmc
xchg
jns
mov
and
das
and
mov
das
and
jne
jbe
addb
loop
dec
outsb
xchg
fiadds
cs
loop
ljmp
ret
cmp
push
mov
pushf
pushl
ret
pusha
jmp
push
inc
cmp
cmpsl
sbb
cs
cmp
sub
jp
movsb
dec
pop
popl
cltd
adc
xchg
das
cmp
ja
repz
fildll
pop
pop
pop
mov
push
icebp
add
pushf
lea
jmp
into
cld
test
cmpsl
sbb
std
imul
xor
roll
std
or
jo
sub
lods
cmpsb
cmpb
xchg
or
popa
sahf
and
lods
dec
push
cmpb
and
stc
and
popa
cwtl
xlat
mov
pusha
call
movb
mov
dec
inc
mov
clc
stc
stc
pushl
cmp
push
mov
mov
lea
jbe
rcl
and
dec
mov
mov
pushf
rol
shl
add
bt
rcl
mov
lea
stc
pop
add
jmp
movb
lea
jmp
jne
gs
xor
fs
insb
add
inc
and
in
mov
add
decl
add
push
jmp
jmp
call
sub
lea
call
pusha
cmp
push
call
movzbw
lea
pushf
xchg
pushf
lahf
jmp
pushf
jmp
lea
ja
cmc
add
clc
or
call
adc
mov
cmpsl
sbb
pop
xchg
or
clc
popf
sbb
popf
sbb
adc
cmp
out
ficompl
and
popf
cmp
xor
cmp
xchg
pop
push
adc
mov
pop
mov
push
in
rclb
subl
pop
ljmp
roll
push
ret
add
jbe
sbb
push
cs
shlb
movb
inc
adcl
adc
fs
pop
fistpll
aad
push
mov
sub
pop
jge
pop
ljmp
add
cmpsl
sbb
push
enter
int3
xor
pop
test
addr16
push
push
ja
cmp
mov
xchg
mov
mov
subb
dec
loop
mov
int
shlb
gs
sub
cmp
cmp
adc
cltd
jne
push
pusha
clc
out
sbbl
loope
or
outsl
add
jecxz
mov
repnz
jbe
xchg
sbb
loope
jns
int
insl
lods
gs
incb
mov
call
push
stos
loope
sbb
mov
adc
adc
daa
outsl
cmp
decb
mov
fidivrs
push
fadd
mov
mov
pop
pop
jmp
mov
jns
mov
faddl
xor
std
imul
dec
adc
mov
mov
add
mov
adc
lock
shl
and
loope
pop
addr16
loopne
sbb
repnz
jb
push
push
ljmp
or
cli
cmp
pop
inc
adc
outsl
out
mov
sub
mov
movsb
mov
adc
movsb
dec
dec
push
xchg
jle
cmp
or
cmc
loop
sub
cmpsl
xor
inc
push
inc
fcoml
sbb
addr16
dec
rcrl
popf
icebp
xor
icebp
sub
loope
cli
mov
xor
int
aas
inc
loopne
sbb
xchg
repz
testl
mov
mov
icebp
jae
aaa
js
ret
or
push
jbe
push
ret
insb
dec
mov
mov
into
ds
jge
push
jmp
sub
sub
dec
int3
dec
sar
xchg
cmp
js
sbb
add
negb
and
sbb
aas
xchg
xlat
add
subl
add
mov
pop
push
lea
loope
shrl
pop
pop
mov
dec
in
test
cmpsl
sbb
cmpsb
push
jbe
xor
push
mov
sub
mov
xchg
sbb
stos
inc
iret
aaa
mov
lods
inc
cltd
sub
push
jp
jns
dec
sub
stos
sub
test
cmc
lcall
mov
test
lret
aaa
ret
stos
aaa
mov
cmpl
std
inc
sbb
mov
jns
outsb
nop
sub
mov
ficoml
inc
and
rdpmc
sub
stc
test
jno
sbb
cmpsl
sbb
mov
sbb
je
pushf
les
nop
loope
dec
fsts
inc
mov
or
jle
dec
sar
and
fisttpll
imul
fs
popa
mov
mov
dec
jle
fsub
pop
inc
and
or
push
mov
pop
ret
mov
push
data16
jl
test
loope
ror
push
xlat
mov
push
loopne
imul
sbb
mov
jecxz
jo
cmpsl
sbb
testb
sub
xlat
mov
loopne
loop
imul
jg
pop
out
mull
ja
aas
sub
bswap
lock
bnd
orb
movsl
add
sbb
test
inc
mov
iret
addr16
sub
cmp
jne
pop
xchg
mov
and
das
mov
test
fldenv
ss
ljmp
jbe
dec
lods
or
test
adc
adc
call
int3
fnstcw
std
xor
sbbb
cmpsb
pushf
lea
jmp
pusha
call
pusha
push
lea
ja
call
lahf
xchg
in
frstor
or
and
pushf
add
cmp
and
in
adc
mov
inc
mov
sub
std
or
addr16
xchg
dec
sbb
sahf
nop
sub
xorl
cli
clc
sbb
int
cmpsl
dec
ret
dec
pop
fistps
lret
iret
adc
mov
scas
negb
dec
adc
inc
cmpb
pop
ret
shrb
lods
jmp
lea
jne
call
xor
pop
frstor
ret
push
mov
xchg
loop
leave
clc
cwtl
adc
popa
jmp
pop
std
jg
addl
gs
and
xor
test
xor
je
ds
std
xchg
mull
lret
dec
in
lret
pop
stos
fistpl
inc
xchg
ret
out
daa
outsl
stos
notl
scas
cmpsb
addr16
inc
je
xchg
xchg
xchg
fsubl
push
rcrb
pop
call
lock
sub
cltd
push
jle
pop
notb
xchg
sub
loop
mov
fisubrl
jbe
xchg
pop
mov
test
pop
inc
ret
data16
xchg
adc
and
push
sbb
xor
shll
push
mov
xor
stos
sub
inc
mov
cwtl
rcrb
pushf
loopne
in
das
dec
cmp
mov
pushl
pusha
inc
push
mov
mov
pushf
lea
jmp
inc
lea
jb
pushf
pusha
lea
call
pushf
pusha
adc
movb
lea
call
jmp
sbb
sar
pushf
movl
jmp
lea
jae
pusha
test
clc
cmp
lea
jb
push
pushf
lea
ja
inc
push
inc
call
push
call
push
pusha
call
rep
pushf
mov
push
movl
push
push
lea
jmp
jmp
movl
push
push
lea
jmp
pushf
mov
lea
jae
cmp
xadd
shld
mov
shrd
mov
jmp
bt
cmc
cmp
sub
pushf
add
jle
clc
cmp
push
lea
jae
push
pusha
pusha
lea
jmp
xor
dec
loopne
enter
les
insb
push
test
push
mov
push
out
pcmpeqd
ret
ja
ja
mov
and
pop
cs
ja
imul
sub
lods
mov
enter
loop
popf
dec
push
mov
pusha
pop
jl
divb
jno
in
sbb
fldenv
push
mov
push
push
data16
ret
cmpsl
sbb
xchg
adc
jnp
xchg
pushl
push
xlat
imul
testl
pop
dec
push
jbe
xor
cli
mov
lret
sub
popa
push
jb
mov
in
out
ja
das
jg
jecxz
xor
lahf
into
jmp
inc
cwtl
outsl
fbld
jnp
pushf
call
cmp
stc
pop
aad
in
jne
push
leave
xor
insl
lods
pusha
sub
pushf
xor
xor
inc
push
jbe
addb
js
popf
add
xchg
push
adc
push
push
adcb
mov
push
ss
xchg
mov
push
inc
sahf
out
inc
cwtl
daa
lods
xor
fsub
stos
pusha
pushf
lea
jmp
mov
neg
xor
not
mov
test
sub
pushf
repnz
mov
pushl
pushf
jmp
pushf
adc
push
lea
jae
jmp
jmp
call
neg
push
stc
clc
bt
not
call
mov
sbb
cltd
stc
adcl
xor
add
std
jg
imul
xlat
inc
mov
pop
shr
jo
push
jmp
fisttpl
sbb
jnp
mov
xor
sti
jne
push
clc
jp
pusha
int3
pop
adc
insb
cmp
ss
dec
fadds
cmpsl
scas
pop
hlt
jb
pusha
fisttps
outsl
fdivs
mov
std
jg
mov
adc
lock
xchg
adc
popf
fs
jmp
fdivs
dec
and
std
in
sbb
jnp
sar
inc
leave
cmp
mov
ret
or
pushf
or
pop
shlb
dec
lock
cmp
jnp
xchg
inc
sahf
and
mov
divl
jns
movsl
inc
sub
es
loope
fisubl
xchg
outsb
movsb
jns
push
mov
int3
mov
mov
jo,pt
enter
cmp
mov
lahf
xor
gs
xlat
mov
stos
mov
out
jbe
jl
push
subb
jo
int3
test
lods
shll
sub
pop
push
cmpsl
sbb
pop
lret
push
fstpt
xlat
inc
stos
cmp
stos
jae
data16
xchg
ds
loope
std
push
jbe
push
enter
mov
das
out
or
xchg
mov
sub
test
jo
pop
popa
std
inc
cwtl
pop
fdivrl
jl
arpl
fsubs
or
sub
clc
das
dec
lret
pop
adc
fsin
add
callw
jl
cmp
adc
ja
cld
call
mov
notl
paddsb
test
sti
jge
adc
adcl
jle
cli
mov
sbb
mov
ds
pop
xchg
adc
mov
cmpsl
shr
frstor
inc
mov
dec
mov
imul
push
push
call
iret
cmp
jo
pop
xchg
jecxz
insb
fcoml
mov
dec
jae
xchg
lcall
stos
inc
outsl
out
dec
mov
xchg
sub
push
xchg
icebp
inc
into
inc
lahf
pop
iret
xor
bnd
ds
in
rolb
jl
fimull
mov
imul
and
jmp
dec
notl
jnp
dec
int
test
popl
cmp
je
pop
sub
or
jno
insb
faddl
xchg
dec
jns
mov
fiaddl
pop
dec
rclb
sub
scas
dec
je
add
xor
orl
and
push
and
insl
mov
add
es
addb
ja
mov
int3
pop
cmp
jb
sub
cli
dec
adc
int3
sbb
xor
call
js
adc
cli
jne
xchg
push
mov
js
cltd
sub
xchg
or
jb
nop
mov
xor
divb
mov
stos
sbb
jmp
aaa
pop
cmpsl
fisttps
add
fnsave
aad
mov
dec
stc
rol
bt
clc
clc
cmp
lea
lea
bswap
jmp
pushf
jmp
mov
movzbl
cwtl
movzbw
pushl
popl
cwtl
mov
pop
mov
mov
cwtl
not
movl
lea
jmp
pusha
pusha
movl
jmp
push
sub
add
rcl
btr
rcl
rcl
mov
test
mov
test
stc
repnz
pushf
lea
jne
cwtl
movb
lahf
cwtl
push
call
add
adcb
adcb
adcb
dec
pop
add
pop
add
add
add
add
add
cmpsl
sbb
push
lock
fs
std
mov
test
mov
dec
popa
in
mov
cs
xor
sub
cld
mov
loope
xchg
push
pop
sti
add
cli
adc
xchg
sbb
pandn
jp
sbb
out
cmp
insl
ror
push
cmp
sbb
iret
les
xchg
mov
out
jne
dec
and
sbb
cwtl
aam
dec
mov
dec
insl
pop
cmpsl
les
mov
insl
fstpl
jns
xchg
sub
insl
loope
test
push
mov
xchg
ljmp
popa
stos
sub
and
sahf
and
xor
gs
fldcw
pop
popa
add
cwtl
mov
sbb
pusha
push
bt
stc
neg
stc
mov
movb
not
cmp
pushf
call
call
push
lea
je
movsbw
pusha
pushf
mov
pusha
cwtl
movzbl
bswap
mov
lea
js
cwtl
lea
push
movl
pushf
pushf
pusha
pushl
popl
pusha
mov
pushf
pushl
ret
pusha
test
test
or
movb
movl
lea
je
push
push
stc
cmp
pusha
call
test
jmp
pusha
lea
ja
pusha
lea
jb
cmc
pushf
pusha
cmpb
call
pusha
mov
pushf
xchg
movzbw
lahf
pop
pop
movl
setge
lea
push
pushl
pushl
mov
movl
jmp
setnp
bswap
push
movb
pop
movzbw
jmp
pushf
inc
push
lea
jmp
pushl
addl
repz
and
addl
shlb
push
and
jns
jg
test
inc
or
imul
add
jl
mov
inc
jmp
test
sub
or
bound
aam
sahf
fmull
ss
leave
and
adc
cltd
fisttps
hlt
mov
hlt
outsb
push
repz
shll
daa
push
aam
enter
cmc
add
jecxz
pandn
mov
adc
xor
in
out
jecxz
jne
test
dec
jp
lea
in
push
faddl
mov
add
test
roll
add
ljmp
stos
sbb
or
imul
fcmovnu
fstpl
scas
ficoml
adc
xchg
popa
xor
xor
pop
pop
xchg
sub
sbb
mov
or
cmp
push
jmp
fs
ja
pusha
stc
add
mov
pusha
cmp
or
movb
jmp
bt
xchg
ror
mov
pushl
sub
pusha
rep
mov
movsbw
mov
call
pusha
mov
push
mov
push
mov
pushl
ret
in
pushf
call
pushl
popl
movzbw
pushf
mov
bswap
setae
cwtl
movb
movl
pusha
lea
mov
call
pusha
call
mov
sbb
xchg
mov
xchg
add
cmpsl
sbb
and
stos
inc
jbe
push
pop
test
jge
push
in
std
pop
xchg
sub
in
adc
cli
jbe
lods
cld
and
mov
jne
fs
in
and
jecxz
mov
cmp
xchg
aad
pop
mov
dec
mov
dec
cmp
cmpsb
push
jbe
jle
lcall
push
sbb
in
mov
sbb
std
pop
int
movsl
adc
icebp
insl
rcll
sub
push
ficoms
push
dec
sbb
out
lock
and
and
sub
test
shl
jmp
pusha
jmp
jmp
stc
cmp
cmp
pushf
jmp
pushf
call
pusha
sub
movw
clc
pushl
popl
cmp
cmp
pushl
jmp
call
pushf
setne
not
xchg
mov
pop
push
mov
xchg
mov
not
pop
bswap
pushf
mov
mov
pushl
ret
pop
cld
test
cmpsl
sbb
shlb
enter
cmpsb
or
ds
jecxz
mov
pop
setnp
rclb
inc
movsl
adc
fnstenv
push
cltd
cmc
sub
jmp
ja
dec
mov
sbb
movsl
in
mov
lods
jmp
fs
mov
out
xor
add
rcll
test
ret
sti
jge
push
sbb
ret
and
pop
mov
mov
mov
sbb
movsl
fs
sub
jo
xchg
dec
inc
lret
or
jle
pop
aam
add
xor
pop
mov
jne
imul
iret
getsec
mov
das
and
pop
lock
popf
ror
cmpsb
and
movb
movb
mov
pusha
pusha
pushl
ret
movb
pushf
mov
call
add
push
shlb
dec
jecxz
jecxz
daa
loopne
mov
inc
mov
shlb
push
or
lret
dec
fdivrl
cmp
js
mov
fmull
fimull
and
es
fcmovnb
out
jbe
in
mov
movsb
es
loop
ljmp
push
jmp
jle
xor
xchg
or
arpl
jbe
dec
pop
clc
cmpb
pop
cwtl
lock
inc
lret
repnz
sbb
sbb
xchg
push
sub
repnz
cld
sub
jbe
xchg
cmp
rclb
add
and
pop
jmp
push
xlat
jae
mov
or
add
push
mov
jmp
int
fstpl
xor
adc
pop
add
jbe
xor
inc
ja
jle
and
pop
mov
sti
cmp
leave
add
inc
mov
jns
notb
mov
cmpsb
repnz
jmp
or
leave
pushf
jmp
push
or
cmpsl
sbb
fdivrl
and
cwtl
sub
xchg
mov
cmpsl
jp
push
jbe
lahf
mov
jp
mov
int
popa
mov
call
loopne
xlat
xrelease
addr16
pop
arpl
mov
mov
imul
jmp
dec
jl
into
cmpsl
sbb
push
fisttpll
and
mov
leave
inc
popf
xchg
pop
pop
push
enter
mov
mov
lea
cmpb
cmp
mov
movsb
leave
ret
adc
fld
jl
jne
jge
push
sbb
lea
lret
ss
mov
xchg
sbb
xor
cmp
call
cld
icebp
add
pop
stos
jno
ja
jp
ss
stos
push
pop
mov
xor
xchg
and
mov
js
stc
mov
into
cmpsl
sbb
std
popa
cmc
jne
xchg
icebp
mov
mov
add
shl
in
mov
fbld
inc
mov
mov
mov
stos
adc
cmp
pop
fistpl
push
fadd
test
test
outsl
xchg
negb
jb
push
add
adc
cmc
je
push
or
inc
pop
sahf
into
mov
or
out
ljmp
insb
fmul
lret
cmc
mov
adc
or
add
fmuls
jo
hlt
dec
add
sub
cmpsl
sbb
jnp
outsl
add
addr16
push
jmp
adc
pop
jecxz
popf
push
sub
outsl
fs
push
jbe
mov
adc
lret
aas
popa
lcall
mov
movl
push
mov
adc
lds
lock
cwtl
pop
rcrb
cmp
lea
xchg
pop
xchg
setp
call
or
sbb
xchg
sbb
add
lock
les
fdivrs
fs
jae
sub
jbe
jno
cmpsb
cmpb
pop
xchg
es
call
add
inc
push
sub
out
icebp
push
xchg
xor
popf
cmc
ljmp
ret
icebp
dec
mov
cmc
test
push
and
call
lea
ja
pushf
call
mov
fcmove
cmpsl
sbb
js
nop
adc
js
add
dec
addl
mov
mov
lcall
outsl
xchg
frstor
push
into
bound
pop
add
fnstsw
mov
scas
sbb
std
call
in
test
inc
mov
sub
ss
aas
xor
sub
cwtl
cs
dec
loopne
inc
in
in
test
loope
test
mov
cmp
xchg
lods
das
cmpsl
sub
and
sub
add
imul
outsl
xchg
inc
jae
lret
cmpsl
sbb
push
in
in
mov
inc
rolb
dec
sbb
movsb
and
nop
imul
icebp
push
push
jne
pop
xchg
mov
sbb
sti
aaa
arpl
sbb
jg
pop
arpl
fildl
push
rsm
push
lods
mov
je
ret
and
jb
cmp
cmp
jmp
push
stos
pusha
call
call
mov
sbb
rorb
mov
xchg
clc
jo
push
les
js
push
sbb
mov
or
dec
inc
xchg
push
jbe
jne
cmpsb
orb
xor
mov
popa
or
xlat
outsb
or
xchg
sbb
sbb
je
or
nop
mov
inc
cwtl
mov
adc
outsb
bnd
dec
in
add
mov
int3
inc
push
aad
push
and
and
test
insb
or
fadd
cmp
hlt
nop
mov
int
xchg
pop
out
push
push
orb
notb
fwait
notl
xor
xchg
dec
int
adc
dec
jge
in
dec
mov
dec
outsl
aad
stc
push
and
js
dec
lods
inc
pushf
hlt
jae
jg
pop
fnstcw
mov
cmp
cli
or
mov
sbb
and
adc
dec
aad
imul
push
jb
popa
pusha
sbb
or
push
jns
leave
mov
add
sub
jge
aam
pop
insb
add
adc
ss
push
js
push
lds
call
aam
xchg
pusha
into
in
xorl
push
mov
jp
push
rcrb
loop
pushf
inc
ret
daa
xchg
ja
add
mov
dec
inc
flds
mov
adc
fisubl
sub
mov
shll
scas
out
das
mov
inc
jnp
decb
into
dec
loope
xchg
mov
pop
push
into
aaa
lcall
push
inc
stos
lahf
imul
sbb
sub
sbb
inc
jmp
shll
cmp
out
inc
pop
aam
cwtl
fsubl
push
cwtl
hlt
sub
insb
xchg
in
sub
cwtl
jl
mov
cltd
in
in
pop
pop
add
mov
in
push
call
and
rcrl
outsl
rolb
xor
xor
dec
pop
pop
fcoms
outsl
out
xlat
arpl
push
test
xchg
sbb
xchg
cs
cmpsb
insb
insb
ds
push
mov
stc
dec
jns
lcall
xchg
hlt
cmp
lods
xor
repnz
mov
xor
call
pusha
mov
cmp
cmpb
pusha
movl
pushf
movb
lea
jmp
pusha
call
cmp
pop
enter
aaa
fwait
pop
scas
seta
fwait
out
es
adc
and
mov
mov
jmp
sub
data16
jbe
in
cmpl
add
cmp
pushl
enter
nop
and
cli
lahf
aaa
lock
pop
stos
mov
jbe
jmp
test
std
jl
xchg
add
fdivrl
push
js
clc
adc
hlt
jns
sti
rcrl
in
xchg
adc
lods
mov
and
movsb
jbe
sbb
pop
mov
mov
lret
lahf
aaa
xchg
sub
sub
and
jbe
data16
fadds
dec
nop
rorb
and
jne
inc
lea
pusha
movzbw
lea
rcl
movsbw
clc
btc
mov
and
test
and
xchg
sbb
shr
mov
neg
mov
pushf
mov
adc
ror
dec
mov
bt
xor
adc
mov
bsf
mov
cmp
push
clc
or
pushf
pushf
pushf
lea
je
cmp
pusha
cmc
cmc
or
pushf
pushf
lea
je
rol
add
shrd
xor
dec
mov
clc
mov
lea
shr
movsbw
shr
shl
mov
mov
stc
jmp
fmul
mov
cmpsl
sbb
rolb
inc
mov
dec
sub
scas
sub
mov
je
mov
xchg
sub
test
adc
inc
cld
cmp
mov
cmpsb
aad
rorb
in
inc
adc
add
sbb
cwtl
inc
add
and
cmpsb
xchg
dec
aas
pop
sbb
xor
cltd
loopne
mov
aad
mov
imul
sub
pop
xchg
pop
out
jbe
push
dec
mov
lret
push
ja
xchg
push
sbb
stc
jns
imul
jno
insl
fstpl
shll
adc
scas
xor
sbb
lea
add
fadd
sub
lods
aad
mov
ss
sub
lret
inc
pop
dec
call
shl
aam
inc
add
jnp
sub
cmpsl
add
xor
cmp
loop
jle
cli
jle,pn
ljmp
or
out
pusha
jmp
out
cmpsb
cmpsl
sbb
fsubrs
dec
loopne
rcrb
add
jg
movsb
dec
sbb
cmpsb
rolb
sub
je
stos
je
scas
adc
push
jbe
sbb
in
loope
ljmp
insl
mov
or
out
sbb
out
cmpsl
pop
icebp
aas
pop
jl
adc
outsl
lahf
xlat
idivl
imul
mov
mov
and
push
movl
pusha
mov
pushf
lea
jmp
mov
call
pusha
stc
push
rol
pusha
clc
push
cmp
movsbw
pushf
pop
lea
lea
mov
pop
movb
cwtl
mov
jmp
sub
pushf
and
bt
mov
shr
mov
adc
bswap
or
add
add
shr
bt
push
mov
pusha
lea
bsr
btr
add
pushf
mov
pushl
jmp
or
sbb
sub
mov
jp
lods
std
jg
fsubs
cwtl
call
cmpsl
push
mov
fimuls
pop
mov
ja
push
iret
ljmp
jp
lahf
pop
shlb
mov
lret
cli
enter
loop
jbe
loop
push
fcmovbe
sbb
aaa
iret
inc
shrl
mov
in
fnstenv
out
jae
aaa
sub
pop
cmp
sub
cltd
leave
adc
dec
jne
jne
push
push
jns
cmp
mov
movb
call
cltd
mov
ret
cmpsl
sbb
ret
xor
and
push
mov
rclb
mov
call
ja
push
inc
addb
add
hlt
je
js
loope
mov
mov
fsubrl
insb
adc
orl
fnstcw
jns
leave
dec
out
push
fdivrs
lods
inc
sub
push
mov
push
ja
out
ljmp
jno
mov
adc
jmp
lcall
pop
xchg
cmp
xor
push
int
jbe
pop
aas
outsl
out
lret
sbb
mov
ret
idivb
cmpsl
mov
push
lret
sub
push
mov
dec
mov
daa
ret
pop
cmpsl
fstpt
sub
add
pop
dec
cmpsb
orb
fisttpll
nop
mov
jmp
pop
xchg
sti
xor
fcmovnbe
jmp
hlt
fs
loop
xor
cmpsl
sbb
sbb
cli
mov
lock
js
push
mov
mov
mov
xchg
sub
ss
je
mov
int3
sbb
mov
mov
popa
cmc
icebp
pop
adc
out
shrl
add
in
xor
andl
rcrl
js
cmc
cmp
es
mov
cli
jbe
cld
repnz
mov
arpl
fs
popf
xor
dec
out
jmp
sub
insb
sbb
mov
and
jecxz
imul
adc
lea
movl
jmp
not
pushl
dec
clc
lea
jb
push
rol
bt
cmp
cmp
mov
not
lea
movb
lea
push
lea
not
mov
jmp
add
shl
add
test
btc
cmc
add
mov
pushf
test
sub
jns
test
push
movb
lea
je
pushf
sub
pusha
shrd
add
stc
bt
pushl
movsbw
mov
push
cmc
test
add
cmc
call
call
call
push
xchg
sete
movsbw
push
bswap
push
movsbw
lea
movw
movl
push
pushf
pushl
popl
pushl
pushl
ret
sub
movl
movb
jmp
lea
call
pusha
pushf
pusha
jmp
add
add
btr
aam
not
push
movsbw
mov
ror
dec
stc
das
sub
bts
push
test
movzbw
test
neg
push
ror
push
btc
xor
push
pop
lea
jmp
sub
mov
stc
cmc
bt
test
cmpb
call
cmp
jmp
add
mov
shlb
pop
mull
push
jmp
scas
pop
mov
mov
cli
inc
daa
add
pusha
mov
dec
ja
sarb
xorb
ret
mov
addl
fstps
and
movsl
icebp
adc
sbb
xor
scas
repnz
and
dec
sbb
add
mov
inc
repz
call
pusha
mov
pusha
movb
pushf
push
lea
jmp
or
jmp
xchg
pushf
dec
pusha
test
cmp
stc
shl
setg
push
not
lods
sub
je
test
push
sub
test
stc
not
stc
clc
neg
pusha
call
xchg
xchg
mov
enter
mov
inc
ljmp
pop
mov
int
jns
add
test
aaa
jge
lods
pop
xorl
mov
fcoms
push
mov
repz
mov
or
aas
lock
das
pop
xchg
sub
outsl
js
aas
dec
mov
cwtl
add
jns
sbb
imul
jbe
div
cli
test
push
loop
sub
leave
lahf
mov
imul
pop
mov
or
lods
adc
hlt
jbe
repz
inc
lret
fistl
mov
xchg
and
lret
mov
or
call
ret
add
pop
adc
cmpsl
sbb
or
in
aam
in
mov
pop
jg
cmp
dec
fldl
jbe
repz
cmpsb
sub
pop
fidivrs
ret
popa
or
push
sub
shrb
add
loop
data16
push
test
ret
das
outsl
xchg
pushw
mov
call
mov
mov
pushf
pushf
pushl
ret
rol
cmc
stc
pushf
cmp
cwtl
cwtl
pop
lea
jmp
repnz
xlat
mov
jle
sub
addr16
lock
adc
fnsave
mov
cld
jle
lcall
xchg
lret
pop
sub
push
jbe
int3
xor
mov
cmp
xchg
call
movsb
cmp
push
mov
mov
clc
xor
dec
fwait
cmc
lea
sbb
sub
shll
mov
push
xlat
and
out
xlat
mov
int3
lret
mov
xor
adc
es
divl
jnp
mov
dec
out
movsb
push
add
outsb
jne
inc
cmpsl
ja
pop
fstpl
test
iret
pop
inc
fildl
sahf
push
xchg
ljmp
xor
call
add
mov
test
mov
and
or
nop
test
ret
or
mov
sbb
cmpsb
cmp
sub
xor
pusha
push
inc
jae
rolb
push
orb
movsb
and
es
dec
sub
mov
jp
in
insb
aad
popa
sti
sahf
cld
xchg
ja
ja
cmpsl
jmp
mov
lret
jle
push
pop
inc
jecxz
sbb
aad
push
js
mov
ja
xchg
pop
fcmovne
ficompl
gs
test
movsl
repz
xor
push
jbe
sti
adc
adc
imul
faddl
bound
and
cwtl
push
mov
pushl
sbb
loopne
aam
mov
xchg
stos
inc
cmp
ret
loope
dec
mov
mov
jb
test
pop
enter
adc
inc
mov
leave
sub
popa
mov
cmp
in
mov
cmpsl
sbb
test
xor
and
sbb
adc
loopne
adc
sti
pop
sbb
dec
push
mov
sub
gs
bound
fnstcw
jl
shlb
in
push
addb
push
or
ret
andb
xchg
inc
cwtl
add
les
add
adc
btc
mov
cmp
cmp
add
test
movzwl
shl
mov
call
dec
inc
ds
repz
lcall
and
fistps
data16
push
or
push
das
and
notb
mov
xchg
cmpsb
xorb
pop
repz
sbb
popa
sub
push
orb
into
push
scas
fiadds
xor
loop
outsb
cmpsb
ljmp
jnp
or
movb
lea
jne
jmp
cltd
mov
mov
jmp
xlat
imul
jnp
out
sbb
push
mov
mov
mov
cmp
xor
jge
add
daa
insb
call
je
js
and
pop
stos
test
scas
adc
in
dec
cmp
out
mov
push
mov
in
add
push
outsb
dec
nop
scas
inc
test
xchg
pop
mov
pop
iret
and
dec
jecxz
pushf
add
js
jg
jb
mov
dec
ret
add
add
pop
sti
xchg
jle
cwtl
mov
lods
inc
and
mov
sar
xchg
or
out
aad
les
push
xchg
sbb
inc
xor
out
dec
bound
and
imulb
xchg
mov
scas
and
push
sbb
into
mov
test
jge
mov
lods
insb
rorb
mov
mov
xchg
std
jno
in
dec
xchg
rcll
test
dec
add
cmovae
int
mov
mov
xchg
mov
ficoms
idiv
jbe,pt
cmpsb
lret
aaa
mul
lcall
ss
icebp
iret
xchg
mov
jne
and
mov
out
les
mov
inc
sub
cmp
pop
mov
mov
out
push
arpl
cli
outsb
shlb
popw
dec
loop
mov
mov
fwait
pop
lds
sub
mov
jle
pop
stos
es
and
jne
insb
movsb
int3
test
mov
xchg
push
stos
lahf
and
stos
add
mov
cltd
pop
icebp
mov
ja
add
mov
xor
mov
test
mov
cmp
xchg
and
add
mov
loope
stos
add
cltd
pop
adc
push
xchg
jbe
pop
in
xor
outsl
icebp
popa
mov
push
loope
insl
in
inc
jns
mov
mov
icebp
in
xchg
or
test
jg
ds
inc
ror
inc
loope
push
lds
stos
mov
imul
cltd
leave
andb
cmp
addl
int3
leave
mov
jbe
xchg
cmp
push
je
and
mov
popf
or
mov
pop
out
sbb
jmp
adc
sbb
fscale
inc
andl
sti
pop
and
test
cmpsl
sbb
rorl
cltd
and
inc
jecxz
shrb
push
shll
mov
cmp
push
out
jg
xchg
pop
ja
scas
ret
stos
pop
dec
insb
test
hlt
mov
push
jbe
mov
fs
mov
xchg
pop
mov
bound
cltd
sbb
enter
pushf
xchg
fisubs
cltd
ds
or
push
in
lods
add
sbb
or
stc
test
aas
xchg
shl
xor
sar
aaa
cmpl
leave
xor
aas
iret
packsswb
movl
jmp
loopne
jmp
cltd
add
insl
add
sbb
add
mov
scas
aaa
out
jl
in
add
pop
push
aad
and
subb
xchg
stos
fcmove
cltd
mov
sub
xchg
mov
pop
adc
xlat
pop
aaa
mov
inc
cld
sub
jo
jmp
jno
adc
leave
and
fldcw
repz
push
es
test
call
jmp
inc
and
pushf
bt
xchg
bswap
sbb
mov
shr
cmc
cmp
stc
mov
pusha
test
xchg
shrd
bts
jmp
pushf
movl
push
pushf
pushf
lea
jmp
test
in
cmpsl
sbb
fldl
imul
inc
int
mov
insb
push
call
popl
cmpsb
scas
cmpsb
sbbb
and
push
popf
repnz
popa
xor
addb
sbb
add
popa
mov
xchg
daa
jecxz
cwtl
pop
out
das
imul
sub
add
add
add
pop
xchg
add
dec
adc
add
add
dec
adc
add
sub
adc
push
inc
cmp
cmpsl
sbb
dec
lret
inc
mov
es
into
popa
out
mov
mov
jbe
mov
adc
scas
aas
popa
sbb
mov
call
xor
iret
and
xlat
or
cmpb
inc
cwtl
fsubl
add
add
pushf
lea
je
cmc
cmp
call
jmp
mov
mov
sub
or
mov
pop
out
xorl
test
push
data16
xchg
sbb
pop
and
xchg
xchg
add
or
fnstsw
pop
xchg
adc
or
mov
jne
inc
stos
sbbl
fsubrl
jp
sub
das
mov
push
push
in
sub
cmpsb
sbb
sti
leave
jne,pt
push
jl
mov
and
enter
push
push
lea
fs
ja
pushf
lea
jb
push
push
stc
cmc
cmpb
pushf
lea
jne
sar
add
mov
cmc
add
stc
movzwl
jmp
cmpsl
pop
and
shlb
loopne
out
pop
inc
dec
mov
jge
cmp
aas
stos
daa
addr16
adc
ja
sub
mov
imul
scas
dec
jmp
in
outsl
iret
das
dec
lcall
jns
mov
int
sub
adc
xchg
pop
lahf
push
aam
cmpsb
ds
out
sarb
and
inc
leave
sub
xchg
rorl
jbe
and
inc
jmp
sub
fsts
cmp
sub
addr16
lods
incb
jge
mov
add
add
out
aas
arpl
mov
adc
lea
je
call
shl
btr
mov
jmp
call
mov
push
setae
setge
jmp
lea
jae
cmp
test
cmp
call
mov
sbb
lcall
mov
clc
xor
stos
mov
scas
adc
stos
sub
in
push
rolb
inc
enter
loopne
and
mov
mov
insb
test
in
aas
dec
aad
xor
out
inc
rcrl
das
aam
inc
sahf
imulb
sbb
ljmp
fs
push
aad
xchg
lds
xlat
rclb
pop
ljmp
inc
in
rcll
ljmp
jl
pushf
lock
inc
pop
mov
xorb
outsl
xchg
mov
int3
inc
pop
scas
push
push
mov
mov
lret
lcall
in
inc
cmp
stos
push
mov
inc
mov
icebp
mov
add
inc
adc
jbe
call
roll
push
stos
fstps
sarb
popa
mov
pop
mov
shrl
in
popa
xorl
js
inc
cwtl
loop
jbe
int3
push
mov
inc
pusha
lea
jmp
pushf
pusha
pushl
pushf
movl
pushf
movl
movw
movl
lea
jmp
adc
jp
cmpsl
sbb
xor
pop
push
lret
jnp
scas
fidivrs
mov
imul
push
ficoml
push
dec
lret
lock
out
cmp
fidivl
data16
divb
clc
cmp
xor
sahf
jl
push
test
mov
stos
inc
ljmp
data16
stos
insl
jno
sub
pop
dec
loope
shrl
jg
repnz
popl
fcompl
pop
sahf
loop
shlb
daa
loopne
pop
xchg
dec
sub
inc
das
lahf
das
pop
xchg
push
fstpt
addr16
jns
pop
jg
mov
je
jge
mov
ja
sahf
cmp
pop
mov
mov
sub
pop
mov
popf
xor
jge
in
dec
insl
popf
xchg
daa
jb
ja
sarb
mov
lock
jg
mov
sbb
mov
sbbl
aas
iret
dec
out
jecxz
fists
cwtl
xchg
into
sbb
and
and
mov
push
sub
sub
pushf
adc
adc
sbb
mov
adc
jnp
push
xchg
lcall
scas
sti
ret
jns
jp
test
xchg
std
inc
cli
lahf
sub
pop
adc
imul
mov
mov
mov
iret
add
rcrl
ja
mov
add
icebp
and
str
pusha
movl
mov
pusha
jmp
push
call
jge
dec
mov
sbb
jne
lea
mov
cmc
sbb
dec
xchg
fs
or
dec
stos
daa
popf
or
mov
pop
enter
lret
cmc
lds
or
int
inc
pushf
hlt
push
out
jno
fwait
stos
xor
ret
aas
pop
push
fadds
pop
jmp
ja
negl
push
stos
jmp
ja
adc
sarb
add
mov
mov
into
dec
mov
aas
outsb
iret
add
jecxz
sub
js
push
fwait
pusha
cld
pop
fimuls
push
and
scas
jp
dec
out
sub
mov
insb
jle
cmp
in
outsb
ljmp
xor
push
icebp
shlb
lret
mov
lahf
push
mov
outsb
mov
jmp
jne
xchg
pop
aad
adc
xchg
mov
decl
negl
pop
test
in
ret
and
jns
inc
push
jbe
loope
sarl
fwait
negl
ja
xlat
sbb
out
das
jg
lods
or
rcll
neg
clc
mov
jmp
dec
lret
sub
lret
insb
sub
sub
dec
mov
or
xor
aam
ljmp
dec
aam
sub
dec
ljmp
stos
or
dec
lret
sub
dec
lods
or
stos
or
dec
stos
mov
xor
fdivr
shlb
and
not
push
add
bt
ror
pusha
test
movw
not
movb
test
neg
movl
jmp
test
pushf
call
call
push
or
cmpsl
sbb
out
dec
ret
inc
fidivs
data16
fwait
xor
jno
pop
push
mov
loopne
lahf
and
out
inc
jg
lods
cli
jne
clc
push
pushf
call
cli
jns
cltd
xchg
inc
jne
popa
or
jg
and
sti
sbb
sub
xchg
mov
sbb
fbstp
addl
add
insl
rol
pop
add
lret
pop
push
popa
or
jb
gs
pop
loope
fldcw
jge
sti
add
mov
xchg
or
push
loopne
fstl
adc
or
push
cmc
je
ds
fs
inc
das
mov
insl
xchg
mov
aas
add
lret
pop
aam
cmp
jge
sahf
add
repnz
iret
cli
xchg
dec
bnd
nop
nop
imul
mov
mulb
out
jbe
push
les
and
mulb
outsb
mov
xor
push
push
stos
adc
imul
push
mov
xchg
cli
jmp
sti
mov
bt
bt
push
jmp
clc
ror
pushl
pushl
call
shrd
sbb
mov
test
pushf
call
mov
shl
shl
shl
mov
call
lea
je
call
mov
lea
ja
pusha
imul
movl
call
pushf
call
pop
pushf
push
mov
push
movl
pushf
push
pushl
pushf
movl
pushf
pusha
mov
lea
jmp
repz
push
pushl
mov
movl
call
pushf
mov
push
pushf
pushl
pushf
lea
jmp
cmc
pushf
bt
cmp
mov
pushf
lea
jb
cmp
pusha
pusha
stc
cmp
call
movl
lea
jae
push
pusha
lea
jmp
pusha
mov
lods
cmpsl
sbb
pop
rcll
aaa
iret
pop
mov
jb
test
rcll
loopne
lock
cld
jnp
ja
pop
xrelease
add
hlt
leave
test
jne
nop
mov
push
test
insb
xchg
sbb
jb
stos
lahf
pushl
push
sub
xorl
mov
jg
scas
cmpsl
sbb
dec
fildl
sub
dec
into
dec
aas
pop
fs
sbb
xor
js
mov
pusha
in
push
jp
mov
ds
sub
orb
or
lods
push
flds
stc
xchg
jmp
xchg
cs
push
decl
stc
addl
fwait
lret
daa
pop
stos
jmp
dec
fists
fwait
sti
cmp
xor
cwtl
lods
cmpsl
sbb
mov
mov
jmp
push
inc
arpl
outsl
xor
jg
rcll
outsb
dec
loop
out
cli
push
push
enter
push
xchg
out
lret
subl
cmpsb
xchg
jp
mov
ds
stos
daa
xchg
int
or
ret
out
lea
add
or
cmp
push
std
push
cli
dec
jbe
in
jge
or
jecxz
outsl
scas
iret
add
mov
and
mov
movsb
int
jmp
stos
lods
cmpsl
sbb
lahf
pop
cmpsl
cmp
jb
xchg
cmp
out
sub
mov
adc
pop
jmp
gs
sbbl
fwait
test
jbe
test
out
lds
adc
out
sub
pop
movups
push
js
fdivl
les
cmc
mov
int3
cmp
xchg
lods
cmpsl
sbb
rorl
xor
jecxz
add
rcrb
iret
out
sub
movups
jb
nop
add
popl
std
xchg
aad
sbb
ds
xchg
adc
pop
fstl
and
test
hlt
testl
pushf
sub
xor
push
and
pop
out
ds
or
ja
inc
movl
shrl
dec
sbb
outsl
popf
sbb
jno
icebp
jbe
and
stc
test
cmp
call
lea
je
pusha
pushl
mov
lea
call
sub
jmp
popf
rdtsc
nop
call
push
stos
lods
cmpsl
sbb
push
jbe
mov
xchg
push
mov
xchg
push
xchg
ret
xchg
and
mov
jo
sbb
out
nop
in
and
mov
les
loopne
jl
sub
adc
movsb
or
push
cmp
inc
stos
cmpsl
sbb
mov
dec
fiadds
ss
xor
movsl
outsb
stc
data16
or
sub
jecxz
sub
xchg
in
cmp
stc
push
scas
sbb
and
dec
inc
add
push
subb
mov
or
in
sub
out
lret
jae
cwtl
popl
cmp
pushl
popl
pushf
pushl
ret
stc
cmpb
lea
jmp
jmp
push
jmp
mov
pushf
movb
lea
jmp
repnz
stos
cmpsl
sbb
mov
and
cmp
add
subb
aas
mov
enter
push
jbe
loopne
cmpsb
andb
inc
leave
sub
popa
sti
arpl
adcb
adc
mov
std
sbb
and
ljmp
push
lea
je
shld
and
setns
btr
mov
inc
jmp
push
dec
xor
cmp
aad
imul
jbe
loope
ret
addr16
sub
je
js
jo
movsb
xor
flds
insl
imul
int
adc
cmc
mov
sub
mov
cwtl
dec
sub
lods
cmp
and
ja
not
mov
jne
lods
inc
icebp
xor
xchg
inc
scas
xor
jp
cli
mov
fisubrl
imul
adc
daa
push
lcall
in
sub
xor
enter
fcomps
in
cmpsl
xchg
jne
xor
and
xor
mov
mov
insb
and
pushf
push
movl
pusha
call
pop
movzbw
call
jmp
push
or
cmpsl
sbb
push
mov
inc
test
push
js
mov
mov
andb
shlb
pop
stos
andb
pop
inc
scas
stos
inc
popa
cli
jbe
scas
xchg
add
adc
int
int
jns
fnsave
insl
mov
push
fs
dec
cwtl
xchg
push
xchg
ljmp
cli
decl
xchg
jp
data16
pop
not
movl
cwtl
setnp
cwtl
lahf
lea
call
cmp
jmp
stc
neg
cmc
not
pushf
neg
bt
cmc
lea
ja
pushf
not
stc
stc
rol
bt
pusha
stc
pushl
sub
call
lea
jb
pushf
cmp
pusha
cmp
cmp
call
sbb
scas
test
lahf
add
cmp
pop
and
mov
in
xor
dec
ja
and
or
push
rcll
lods
mov
popa
and
pop
and
icebp
jno
xor
dec
popf
int
inc
cltd
shll
mov
pop
cs
setl
mov
cmp
cmpb
pushf
push
push
lea
jmp
mov
movl
pushf
pusha
mov
pushf
lea
jmp
mov
pushf
mov
lea
jb
cmp
cmp
call
mov
fisubl
cmp
pushf
xor
and
lock
enter
push
pusha
mov
xor
cli
mov
cmpsb
sbbb
or
out
dec
test
cmpb
enter
jae
sbb
iret
sbb
sti
daa
ja
dec
arpl
test
push
cmpsl
sbb
addr16
xchg
incl
xor
cmp
xchg
xchg
xlat
xor
add
ja
push
leave
sub
push
and
pop
add
repnz
mov
lret
bound
leave
cmp
mov
mov
sbb
xor
nop
add
call
popa
mov
add
lret
push
cmp
pushf
lea
jae
cmp
test
xor
pusha
mov
jmp
call
bswap
jmp
aad
mov
cmpsl
sbb
cmpsl
sub
jg
outsl
inc
dec
jecxz
jb
mov
xchg
icebp
push
shl
adc
mov
notl
inc
lds
push
rcrb
push
data16
ds
and
ljmp
xchg
cmp
xchg
pusha
movl
pushf
movl
movl
lea
jmp
pusha
movl
pusha
jmp
dec
inc
inc
cmpsb
cmpsl
sbb
and
add
cmp
add
pop
adc
add
jo
in
mov
push
jno
push
fisttpll
push
jno
jne
movsl
cld
jbe
cmp
dec
ja
mov
cmp
int3
sub
xor
mov
fisubs
jecxz
jmp
adc
jne
pop
iret
outsl
or
push
push
mov
adc
mov
cmp
inc
jne
scas
ja
les
jns
and
jne
mov
mov
xchg
mov
fists
les
mov
xchg
in
pushl
mov
pushfw
popw
and
shl
shl
xor
mov
pusha
clc
movb
test
sub
clc
call
pusha
jmp
and
cmpsb
cmpsl
sbb
lahf
adc
rep
push
rcrl
sti
lock
xchg
cmp
pop
dec
sti
dec
lock
pop
lret
xor
fwait
and
mov
mov
sub
imul
mov
cmp
push
push
mov
sbb
mov
push
iret
mov
out
pop
cmpsb
into
mov
or
ja
cli
decl
in
mov
decl
subl
fs
jb
test
cmp
jmp
push
movl
pushf
pusha
lea
jmp
pushf
movl
movb
push
pushf
call
jmp
clc
in
xchg
movsl
cmpsl
sbb
dec
int
shrl
dec
shll
test
add
ljmp
jbe
pop
andl
push
sti
stc
movl
andb
sub
sti
xchg
dec
xchg
mov
inc
jae
add
outsl
mov
cwtl
adc
movl
pusha
pushf
pushf
lea
jmp
pusha
call
dec
ja
movsb
cmpsl
sbb
inc
lods
sbb
sub
push
jbe
aam
fimull
pop
cmp
xchg
repnz
aas
pop
in
or
sub
rorb
loopne
xor
sub
xchg
jbe
scas
dec
test
fwait
lret
add
rcrb
cmp
cmp
test
loope
push
mov
push
mov
jge
xlat
xor
jns
addr16
mov
bound
mov
rorl
repnz
xchg
sub
sbb
sahf
cs
push
repz
addr16
loop
ljmp
cmpsl
dec
shrb
in
shlb
loopne
loopne
ja
push
inc
mov
adc
scas
or
dec
mov
testl
lret
add
mov
in
mov
add
pusha
push
movl
mov
lea
jmp
pop
push
sub
mov
test
cld
xchg
cld
je
nop
lock
or
mov
fistl
test
jmp
ja
inc
test
jg
lea
xchg
add
adc
pop
xorb
sbb
xchg
out
aas
xchg
rorl
aaa
imul
ret
into
fdivrs
sbb
in
insb
hlt
mov
mov
fs
int3
dec
fcmove
leave
pop
adc
mov
mov
mov
xchg
arpl
adc
mov
fidivs
lss
sbb
into
push
and
mov
xchg
cmpl
mov
adc
cli
stos
inc
das
lret
notb
pop
hlt
xchg
sbb
pop
daa
fwait
ret
jnp
aam
cmp
jns
xchg
xor
rcll
inc
jnp
out
pop
jae
sti
mov
jmp
mov
fwait
testl
enter
pushl
mov
push
push
lea
jmp
lea
je
test
test
cmp
pusha
push
lea
jne
jmp
movsbw
seto
btc
shl
xor
jmp
mov
xlat
mov
sub
cmp
pop
push
adc
pop
mov
mov
fdivs
xchg
pop
loop
ret
xchg
test
les
xlat
sahf
push
add
push
xor
inc
sub
out
ficoml
pop
xchg
mov
aam
pop
xchg
push
mov
adc
push
aad
xor
test
repz
jnp
jns
cmp
cs
cwtl
jbe
inc
gs
dec
lods
adc
inc
mov
push
cmp
dec
movsb
in
lods
in
or
addr16
shl
das
arpl
or
adc
mov
or
out
je
xchg
xchg
sbb
jnp
adc
fs
jb
push
out
ds
js
push
or
out
into
dec
rclb
je
pop
mov
adc
enter
loopne
sbb
and
loop
fiadds
lret
dec
xor
xor
adc
push
jle
and
jmp
dec
loopne
pop
xchg
sub
sub
fiadds
lret
icebp
add
hlt
fsubrl
cmpsl
sub
xor
daa
xchg
add
xchg
mov
push
or
jae
pop
fistpll
inc
adc
out
incb
cmp
cmp
pop
cli
inc
loopne
sti
addr16
sub
and
sub
in
jne
out
push
iret
cli
or
mov
lods
and
and
in
xchg
stos
sbb
enter
cmpl
popa
loopne
cli
xchg
sub
push
cmp
stos
rclb
pop
cmpsb
fwait
push
std
xor
or
fbstp
inc
clc
jmp
push
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jb
loope
cmpsl
sbb
fdivs
hlt
pop
call
add
mov
aam
xlat
sub
mov
sbbl
in
lds
dec
lahf
dec
mov
test
cmpsb
into
dec
cmpsb
les
push
push
cwtl
arpl
iret
or
fs
ret
or
pop
xchg
mull
and
xchg
pop
inc
xor
jp
mov
add
aam
rorb
push
js
lock
sbb
pop
pop
cmpsb
cmpsb
les
cld
sub
sbb
jo
cmpsl
sbb
inc
movsl
sub
adc
push
mov
push
push
jl
stos
or
sbbb
sub
subb
jp,pn
push
push
aam
cmpsb
mov
push
jp
mov
jmp
popl
lahf
cmpsl
sbb
addl
fistps
dec
in
repnz
push
iret
pop
pop
dec
je
pop
negb
dec
test
dec
stos
xchg
or
adc
or
mov
push
pop
lcall
mov
add
stos
fdivs
ret
ret
lcall
xor
lock
mov
sbb
insl
test
je
push
fimull
add
and
test
in
movsl
dec
int3
cmp
cwtl
pop
xchg
rcl
add
paddq
lcall
shll
mov
repnz
push
ret
stos
or
filds
pushl
jmp
lret
push
insb
mov
repz
shll
arpl
ret
sti
aas
xor
jmp
mov
xor
mov
jmp
movzbl
movzwl
push
pushf
lea
jmp
movl
pushl
movb
mov
pusha
pushl
ret
pusha
push
mov
pushl
pushf
pushf
lea
call
pushf
jmp
pusha
mov
push
pushf
mov
pushf
lea
jmp
pushf
pushf
pushf
inc
call
mov
sbb
fwait
aaa
scas
adc
pop
mov
push
aas
int
dec
test
mov
leave
cmpsb
sub
js
sbb
icebp
xor
jmp
pop
sbb
jno
mov
cli
mov
mov
sahf
cs
sub
xchg
adc
enter
jne
sbb
jne
pop
fstl
add
dec
mov
in
repz
int
aaa
in
dec
shrb
mov
add
add
xor
sti
fmul
gs
dec
int
out
cmpb
imulb
jo
into
push
aam
or
rcll
aad
loopne
hlt
sbb
movsb
enter
xor
lock
mov
cmpsb
sub
nop
enter
shrb
jne
addl
ja
int3
cmp
cwtl
and
arpl
push
or
mov
dec
fdiv
xchg
pop
cmpsl
sub
std
xchg
or
dec
jle
push
into
adc
fnstcw
insl
xor
xchg
enter
fstl
add
sahf
out
sbb
dec
mov
add
outsl
sbb
dec
into
sbb
jne
jbe
mov
roll
xor
out
pop
jg
out
in
cmp
imul
je
jl
addb
xor
sbb
add
jbe
dec
shll
sbb
in
push
les
outsb
ljmp
ljmp
std
test
push
xlat
je
ja
mov
add
sbb
popf
and
test
out
in
loop
add
pop
ror
fcom
mov
lods
dec
rorb
sub
mov
cwtl
call
push
fs
xor
pushl
pusha
test
cmc
not
pushf
neg
movb
stc
clc
mov
ror
pushf
lea
call
pushf
test
cmp
bt
cmp
push
push
movb
lea
jae
pushf
cmp
pusha
push
lea
jae
push
cmp
pusha
pushl
lea
ja
pushf
inc
not
inc
not
dec
inc
xor
xchg
aam
shr
pop
call
add
pushf
lea
jmp
movb
pushf
lea
jb
cmc
cmpb
call
push
jmp
pushf
movl
jmp
jbe
push
fwait
cmpsl
sbb
outsb
fisubl
pop
clc
popf
add
daa
outsl
pop
xlat
add
roll
mov
dec
loope
icebp
inc
pop
sbbb
fadds
cld
fs
sarl
mov
jecxz
lods
sub
xchg
add
sub
popf
cmp
sahf
inc
lahf
pop
mov
push
sahf
out
jo
pop
inc
jns
ficompl
pop
pop
jle
or
dec
mov
lret
adc
and
sbb
jp
pop
xchg
jnp
jne
xchg
loopne
rcll
imul
scas
and
pop
sub
sub
or
jnp
sti
jp
xor
jns
or
aas
push
out
arpl
or
mov
push
mov
aaa
data16
dec
add
dec
out
cld
jo
sbb
lods
jb
es
inc
sti
arpl
push
roll
testl
mov
popf
sub
test
fisubrs
add
ljmp
out
add
test
lcall
xor
mov
inc
or
fistpl
aas
and
scas
push
mov
xor
xor
and
jge
push
outsl
jmp
cmp
popa
sbb
push
orl
pop
inc
in
cwtl
jbe
test
dec
pushf
in
pop
mov
sub
push
sub
lods
adc
mov
add
ror
sets
shl
add
and
jmp
call
pushf
lea
jne
pusha
lea
jae
clc
sub
pusha
call
sub
jmp
push
aad
shll
popf
sub
imul
icebp
push
cmp
daa
cmpsb
push
dec
loopne
push
mov
dec
pop
arpl
sbb
cmpsb
lret
lcall
and
xchg
jg
arpl
sti
incl
add
fs
imul
add
testl
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xchg
mov
cmc
imul
test
jmp
mov
daa
lahf
das
xchg
and
and
cmp
push
fwait
pop
fdivrl
cmp
aas
cmpsb
sbbb
in
test
popa
loopne
pop
in
add
mov
stos
das
mov
jecxz
pop
lahf
fildl
daa
sbb
cltd
inc
cwtl
mov
sub
jmp
movl
call
add
cmp
test
pushf
mov
pushf
movb
cmc
test
pusha
movw
lea
je
pushf
mov
pushf
pushf
lea
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
lahf
leave
stc
pusha
stc
push
cmp
pusha
jmp
jno
sbb
ret
aaa
mov
aas
lahf
mov
pop
pop
outsb
jbe
mov
loopne
push
sbb
sub
mov
call
pop
or
push
imul
aam
sbb
loop
adc
jns
mov
xchg
sub
add
mov
lcall
stos
fcmovb
xchg
xchg
jbe
lods
sub
cs
rclb
jb,pt
lret
mov
orb
ds
ficompl
in
pop
ss
cwtl
cmpsl
sbb
add
xor
mov
sbb
cmpb
push
jmp
jbe
inc
dec
cmpsb
sbb
loopne
ds
aas
popa
daa
ret
jecxz
insl
jmp
sbb
cld
je
adc
movsb
int3
clc
cmp
clc
push
xchg
mov
test
int
cmpl
add
shll
sahf
push
ds
fists
iret
push
or
enter
les
sahf
and
loopne
js
cli
jbe
hlt
xor
and
fists
nop
test
xor
cmp
xchg
mov
adc
das
mov
sbb
in
mov
hlt
fcoms
adc
pop
sbb
push
cmp
sarb
dec
leave
xor
push
mov
pop
js
int3
shlb
push
lock
mov
push
sar
fdivrl
cmpsb
pop
cmp
mov
jecxz
pop
iret
and
divl
loope
adc
xchg
stc
repnz
repz
adcb
cli
dec
pop
xor
fisttps
jmp
orb
daa
mov
cmp
lahf
iret
pop
aaa
xchg
mov
movsl
rcr
sub
or
pop
not
mov
pushf
pushl
pushf
pushf
lea
jmp
jmp
scas
or
stos
lea
sub
mov
mov
xor
adc
movl
mov
pusha
mov
push
lea
jmp
pushf
mov
lea
push
mov
not
jmp
mov
sbb
xchg
clc
xor
clc
les
in
push
nop
jae
pand
inc
add
mov
test
sub
outsb
cmp
cmp
xor
inc
dec
mov
outsb
imul
mov
push
stc
loope
push
jnp
ds
iret
or
rcll
mov
fsubrs
xchg
orl
dec
mov
out
outsb
stos
cli
mov
adc
sbb
jae
bt
cmc
stc
sub
push
call
rep
call
pushf
lea
je
movsbl
lea
not
pushf
push
xchg
movzwl
lea
pop
movsbw
call
ja
fcoml
lds
rorl
mov
push
test
push
out
xchg
adc
out
mov
lret
and
rorl
inc
jno
dec
movsl
pop
mov
ja
sub
cmp
pop
mov
std
mov
sub
mov
int
mov
and
xorb
mov
out
xchg
mov
mov
test
int3
inc
mov
pushf
and
mov
loop
push
mov
rclb
cmpl
jo
adc
inc
adc
imul
shlb
and
jg
xchg
add
jge
or
adc
cmp
stc
jne
loopne
inc
fidivrl
jbe
push
sbb
adc
cld
xchg
roll
loopne
aam
add
dec
jbe
lock
into
push
dec
lcall
mov
jne
push
call
setg
ror
push
jmp
pusha
pushf
push
cmc
sub
pushf
push
call
mov
xlat
xchg
cmpsl
sbb
or
push
xchg
idivb
push
mov
mov
cltd
jo
push
cli
add
jbe
test
std
pop
out
push
jns
popa
insb
loopne
loopne
rcll
popl
adc
or
mov
and
pushf
rcrb
call
cwtl
cld
in
xchg
rclb
test
icebp
inc
add
sbbl
pushf
mov
push
pushl
ret
cs
xchg
cmpsl
sbb
xlat
aaa
mov
or
call
push
cmp
add
cwtl
loop
dec
pop
divb
xchg
daa
scas
das
lahf
xor
pop
pop
loope
insb
mov
ss
mov
mov
loope
cwtl
std
or
loope
push
sbb
or
sub
mov
int3
sar
xchg
into
add
lea
jne
push
stc
neg
mov
pushf
pushf
stc
pusha
add
cmc
clc
movzwl
and
rol
shrd
mov
test
add
cmp
pushf
mov
jmp
sarl
cmpsl
sbb
test
and
jg
xchg
mov
insb
xchg
dec
push
push
in
mov
push
roll
popa
lds
lahf
pusha
hlt
cmpsb
inc
cli
pusha
add
int
fisubrl
lret
push
inc
jnp
mov
imul
jnp
in
scas
mov
or
into
cmp
mov
cmpsb
ds
xor
cs
cmp
mov
add
pusha
mov
loopne
add
mov
mov
push
repnz
xor
and
push
inc
mov
out
ficoms
jl
and
adc
push
movl
mov
movb
pushf
lea
jae
push
pusha
lea
jmp
lea
mov
pop
mov
push
mov
pushf
pusha
lea
call
pusha
pusha
lea
jne
push
pusha
mov
pushf
pushf
lea
jmp
push
lea
jne
shld
shr
pushf
xor
cmp
btc
call
jmp
sbb
mov
cmpsl
sbb
mov
mov
mov
outsb
push
pop
pop
inc
les
addr16
adc
push
jbe
jb
in
mov
inc
push
loop
out
data16
orb
aam
mov
jb
lods
daa
xlat
mov
mov
xlat
pop
adc
cmp
es
jge
mov
jbe
lock
mov
test
xchg
push
mov
jns
jns
push
popf
push
stc
js
jmp
add
in
mov
add
sbb
jmp
stc
out
lret
fcoml
cmp
sahf
shrb
std
bt
add
clc
call
stc
mov
clc
cmp
cmp
test
pushf
pushf
lea
je
pusha
movb
stc
add
pushf
cmp
jmp
mov
pushf
pushf
lea
jne
call
jmp
sbb
jl
pushf
xor
and
adc
insb
jmp
jl
inc
adc
pop
push
dec
sbb
mov
add
ret
pop
out
jg
arpl
xlat
pop
imul
aaa
sub
or
lds
hlt
lret
pop
adc
inc
and
mov
je
add
fs
jmp
lea
je
cmc
clc
cmp
pushf
lea
jne
call
clc
add
call
jns
adc
sbb
inc
jne
xor
addl
dec
mov
mov
mov
aas
mov
push
arpl
addr16
cmp
fdivrs
add
cmp
pusha
sahf
cli
jbe
clc
sub
enter
fistps
sahf
and
cmp
mov
and
icebp
cmp
notl
cmp
or
insb
cld
mov
nop
cmpsl
sbb
sbb
sbb
sub
fdivl
popf
xor
mov
popa
cltd
enter
in
add
sbb
push
mov
jp
mov
adc
xor
aad
xor
sbb
pusha
pushf
movb
lea
jb
pushf
pushl
ret
cmp
push
cmpsl
sbb
xor
movsl
adc
insl
jmp
pop
or
aaa
js
sub
jg
sbb
sbb
test
cmpsb
dec
xchg
push
jle
push
popf
jns
mov
xor
shl
push
mov
push
push
mov
cltd
ds
push
ljmp
bound
out
testl
mov
sti
mov
repz
das
call
push
push
cmp
add
mov
clc
push
sbb
mov
dec
xlat
daa
ja
test
sarl
xchg
jmp
and
cmpl
sbb
jo
jl
or
lea
clc
ja
sbb
into
and
pop
fstps
xor
or
sbb
hlt
xchg
sbb
fisubrs
jbe
jo
mov
les
pop
or
test
rcll
xor
mov
repz
pop
mov
jmp
movntps
mov
dec
rcll
sbb
fmulp
inc
sub
mov
dec
sub
inc
jg
xor
sub
sbb
cs
into
lcall
into
dec
fstps
jle
aaa
ja
cmp
dec
nop
cs
push
cmp
sub
jle
cmp
cwtl
sbb
js
roll
mov
je
je
divl
das
mov
mov
addl
jae
iret
push
leave
mov
pop
lahf
fisttpl
lret
jbe
cmp
xor
pop
aas
mov
and
xchg
repz
push
data16
xlat
or
ljmp
stc
imul
jmp
aad
push
xchg
je
nop
jno
jbe
je
je
insb
call
inc
rcrb
movsb
out
xor
pop
test
dec
rolb
shrb
mov
sub
pusha
mov
jne
popa
sbb
or
push
nop
add
adc
int
jne
jecxz
push
scas
cmp
jo
mov
sti
mov
in
lods
mov
loope
cli
lahf
cmpsb
ds
mov
xor
repnz
inc
ljmp
cmp
idiv
loop
shrl
cld
add
icebp
mov
pop
movsb
or
callw
adc
add
dec
icebp
jo
mov
repz
cmp
pusha
shrb
and
dec
fwait
jmp
cmc
test
add
push
cmp
jb
in
incl
and
ljmp
cmp
add
out
enter
jmp
out
lods
mov
mov
push
mov
adc
fildll
repz
call
inc
movw
call
sbb
sbb
inc
mov
mov
std
lea
mov
mov
add
dec
xlat
pop
int
xchg
and
and
insb
lret
sbb
gs
pop
popl
sbb
sub
pop
outsl
mov
pop
test
dec
mov
mov
sbb
jl
adc
ds
inc
fisubs
pop
mov
cmovnp
stos
push
or
add
imul
and
insb
mov
jbe
sub
adc
inc
js
daa
dec
mov
maxps
or
arpl
mov
rcr
jg
mov
xchg
and
lea
sbb
outsl
cmpsb
loop
and
inc
sbbl
push
scas
inc
mov
into
push
lret
mov
test
outsb
fidivrs
adc
insb
lret
ljmp
int
cmpsb
repnz
aaa
lret
movsl
sbb
sti
das
addr16
pop
inc
lahf
int
test
dec
adc
sti
lea
call
jmp
call
and
shr
mov
clc
clc
test
pusha
test
pushl
push
pushf
lea
je
bt
test
stc
clc
sub
test
cmp
pusha
jmp
push
pushf
jmp
mov
lea
je
cmp
cmp
push
lea
je
push
push
pushf
pushf
lea
jmp
loope
jno
cmpsl
sbb
fstps
pop
roll
arpl
mov
adcb
cmc
popa
jecxz
jmp
iret
xor
addr16
pop
mov
lret
or
inc
adc
mov
xchg
sbb
adc
lods
and
adc
jbe
sahf
movsl
gs
std
mov
divl
leave
and
xchg
xor
jg
aas
jnp
xlat
push
lret
fwait
jmp
mov
popf
sub
xor
add
xlat
sti
and
cmp
rcr
fld
inc
cltd
mov
mov
fnstcw
lods
and
clc
cmp
pop
fcoms
rorb
push
jbe
cmp
cmpsb
subb
leave
gs
popa
add
push
and
cli
mov
xchg
cmpsb
incb
mov
pop
in
sbb
adc
call
lea
jae
jno
pushf
pushf
cmp
push
jmp
call
lods
mov
sbb
rcr
sub
rcr
clc
clc
bt
not
rol
rcl
not
adc
neg
call
movl
pusha
pushf
movl
pushf
movw
push
pushf
lea
jmp
aas
mov
cmp
push
pusha
shl
push
lea
je
call
shld
mov
test
add
clc
clc
movzwl
lea
shl
xor
rol
cmp
mov
pusha
call
mov
lea
ja
inc
dec
sub
push
rcr
sbb
clc
lea
add
shl
shrd
mov
sbb
mov
cmc
repnz
push
movl
lea
jbe
pushf
lea
jne
push
pushl
movb
pusha
mov
push
lea
jmp
lea
jae
mov
mov
inc
pushf
inc
setne
pushf
mov
lea
pusha
lea
call
pusha
adc
mov
call
btc
jmp
pushf
inc
lea
pushf
inc
sub
adc
shl
xchg
stc
shl
mov
pusha
mov
lea
clc
test
pushf
xchg
pushf
stc
pusha
or
mov
pusha
call
push
or
cmpsl
sbb
add
add
data16
push
icebp
mov
ffreep
sahf
insl
jecxz
push
dec
ja
lahf
pop
lods
addb
cli
cli
dec
inc
popa
rorl
push
xchg
push
cwtl
and
fcompl
dec
movsb
sar
push
nop
fsubrs
push
inc
je
dec
cwtl
mov
js
lea
push
jmp
pushl
movl
jmp
jl
pop
cli
lds
cld
ffreep
sbb
xor
repnz
sarb
push
xchg
fdivl
mov
pop
pushf
inc
push
xchg
jo
and
jmp
push
xchg
test
add
xchg
push
add
hlt
mov
fs
mov
rcrl
andb
jecxz
inc
and
inc
add
add
rolb
negl
addb
inc
and
push
lcall
pop
pop
fstpl
xor
and
cmpsb
inc
cmpsl
mov
xor
lahf
pop
mov
jl
inc
sbb
pusha
loope
xchg
les
pop
mov
add
sti
xchg
sbb
mov
mov
dec
out
insb
push
sbbl
jle
and
dec
imul
pusha
inc
push
xor
mov
cmpsl
mov
sub
and
push
test
jp
add
push
out
movsl
test
and
cmp
mov
in
and
xor
and
pusha
lahf
push
fimuls
rolb
andl
in
jb
int
add
add
aaa
popa
loope
push
mov
xchg
xlat
mov
popa
inc
in
jb
ds
mov
inc
hlt
mov
pop
jp
push
test
ss
add
inc
pop
push
inc
popa
fs
lcall
mov
daa
enter
jmp
out
sbbb
pop
testl
hlt
out
inc
mov
pushf
movsb
hlt
mov
inc
mov
movsl
jecxz
imull
out
hlt
iret
movsl
sahf
and
jl
inc
je
xor
out
cmpsl
dec
cmpsb
test
mov
lret
pop
mov
movsl
inc
data16
hlt
mov
int
cli
hlt
push
inc
bound
push
mov
out
xchg
xchg
test
xor
in
xor
mov
les
hlt
aad
test
les
movsl
ja
pop
push
mov
cmpsl
push
in
and
sbb
jg,pt
add
mov
ret
pop
jge
inc
add
test
adc
out
data16
jl
mov
mov
sbb
not
movsl
push
pop
test
dec
out
test
mov
jg
and
nop
pop
out
inc
data16
xor
cmp
shlb
inc
push
sub
push
dec
add
mov
hlt
bound
ret
xor
sbb
cli
xchg
arpl
and
pusha
pop
hlt
push
xor
pop
sub
xorl
cmp
dec
mov
hlt
cmp
test
out
test
mov
jmp
xorb
fidivrs
testl
data16
mov
mov
divl
divl
lds
hlt
je
push
testl
jae
hlt
cmpsl
and
inc
jle
mov
fidivrs
hlt
dec
hlt
mov
hlt
cmpsl
jo
mov
clc
ljmp
pop
out
hlt
jecxz
addr16
loopne
jbe
mov
inc
push
sbb
mov
hlt
inc
cld
out
sbb
arpl
lahf
ret
xor
arpl
mov
mov
fmul
xchg
cmp
cmpsl
jmp
mov
push
cmp
mov
call
jge
neg
sbb
xlat
pop
jbe
push
les
jae
idivl
in
andl
nop
inc
mov
inc
test
cmp
int3
dec
add
sbb
mov
hlt
jle
inc
cmp
popa
mov
hlt
mov
pop
je
sbb
mov
test
lahf
rorb
fistpll
movsl
mov
pop
ret
out
ss
gs
inc
mov
inc
orl
sbb
push
jge
mov
sbb
sbb
hlt
je
jle
mov
test
mull
mov
pusha
push
pop
mov
jecxz
popf
ficoms
mov
les
je
mov
std
fwait
addl
push
fists
mov
loope
push
hlt
inc
rolb
hlt
adcb
mov
fidivrs
hlt
dec
fbstp
mov
cmp
ficomps
stos
fstp
in
les
mov
mov
fistl
into
sbb
enter
mov
testl
je
ret
mov
xchg
std
mov
xchg
loope
push
mov
mov
add
neg
cmp
cmp
add
ffreep
xchg
scas
aam
out
mov
and
inc
mov
pusha
stos
movb
mov
dec
add
ss
pop
sarb
jl
pushf
dec
ffree
cmp
inc
addr16
cli
mov
andb
jnp
aaa
fadd
pop
and
push
and
mov
sbb
arpl
cmp
jge
mov
cmp
cmc
fstp
movsb
mov
test
popf
mov
mov
stos
int
pop
mov
cmp
arpl
jmp
jl
push
pop
mov
mov
and
andb
mov
imul
inc
mov
and
and
mov
add
pop
popa
sbb
and
pop
jecxz
hlt
inc
push
push
inc
push
and
inc
jbe
ret
bound
mov
mov
pop
jmp
mov
pop
les
jp
jge
cmp
hlt
test
jnp
mov
mov
arpl
jne
mov
imul
iret
je
out
add
mov
into
enter
fists
xchg
imul
add
ret
mov
test
outsl
jnp
mov
mov
je
jbe
out
lcall
dec
sti
insb
enter
mov
ficompl
inc
jnp
mov
pop
and
mov
adc
mov
sbb
mov
and
test
adc
mov
je
mov
out
mov
jmp
pop
pop
mov
mov
pushf
jle
test
push
or
mov
dec
jbe
add
and
inc
mov
test
add
ljmp
leave
pop
jnp
jbe
les
xor
xchg
pop
ret
cmpl
xlat
test
hlt
cmp
and
ljmp
mov
test
jbe
mov
jnp
inc
hlt
iret
and
inc
jecxz
sbb
lods
bnd
mov
jmp
les
add
push
xor
fisubs
testl
mov
cmpsl
popa
call
mov
fisttpll
push
pop
mov
sub
cmp
ja
sti
hlt
in
je
dec
mov
js
jnp
insl
cli
out
push
gs
popa
inc
jecxz
push
mov
mov
push
arpl
jg
stos
xchg
inc
ficoms
push
test
mov
jb
test
popf
mov
pop
mov
aaa
les
cmp
stos
mov
and
test
ja
repnz
fistpll
mov
lret
mov
repnz
fisubs
inc
scas
call
pop
mov
ret
fwait
les
loope
enter
divl
mov
inc
fwait
pusha
jl
fs
mov
outsl
mov
push
push
dec
gs
mov
rcll
andl
pusha
hlt
rolb
push
out
stos
push
pusha
addr16
pop
mov
pusha
fistpll
push
idivl
mov
push
insl
push
lahf
cmp
std
sbb
jl
ret
mov
xchg
mov
xchg
stc
mov
fistpll
jge
dec
insb
les
test
mov
fisttps
mov
or
push
inc
in
xchg
fidivrs
and
stos
aaa
popa
adc
inc
test
hlt
add
jl
jno
scas
je
xchg
jbe
mov
pop
into
fidivrl
push
fistps
out
mov
or
sbb
bnd
cli
daa
jbe
push
fisttps
lds
sarb
inc
les
mov
and
pop
movl
mov
popa
lret
ret
dec
xchg
dec
lcall
push
push
mov
jb
loop
xorb
popa
scas
movsl
rolb
fsubs
cltd
jb
pop
ret
mov
push
lock
pop
in
cwtl
testb
jmp
or
js
inc
mov
or
jle
ret
jb
shll
mov
push
sti
sar
mov
mov
roll
lea
dec
cltd
and
enter
inc
in
arpl
push
icebp
dec
fstpt
inc
inc
xchg
bound
inc
dec
push
inc
cmp
pusha
dec
and
adc
push
jmp
dec
cmp
jae
aas
pop
xchg
mov
push
gs
fildll
insb
ljmp
lods
shlb
scas
mov
sub
pop
repnz
fistps
mov
jae
mov
xchg
push
sub
jmp
sarb
sub
rcrl
stc
sbb
lds
cs
in
ja
xor
xor
push
scas
add
sahf
aas
xor
movl
push
rcl
pop
hlt
lods
fistpl
push
xchg
cwtl
push
push
je
pop
cltd
ret
pop
push
xchg
icebp
pop
mov
mov
jb
rolb
dec
push
neg
cmp
sbb
xchg
jl
cmp
xor
popf
xor
jns
mov
pminub
push
inc
ja
xor
sbb
xor
rorb
lds
divl
xchg
rcll
mov
lcall
jp
je
jbe
shll
jge
pushl
notl
sti
shlb
sbb
jecxz
mov
gs
inc
mov
iret
xchg
sarb
jbe
jl
cmp
subb
arpl
je
push
sti
aaa
jp,pn
push
and
je
iret
ret
pop
fbld
stos
xor
lret
ret
adc
sbb
leave
add
xchg
xchg
aas
push
cwtl
imull
pop
mov
xchg
stc
sub
mov
add
idivl
ss
cmp
pushf
test
mov
mov
adc
cmp
cmp
cwtl
imul
jecxz
mov
arpl
cmp
ret
ss
ret
push
notl
aas
xor
pop
ror
push
dec
adc
mov
push
and
xchg
jl
jecxz
in
movsl
cmp
cmpsl
or
xor
ljmp
push
and
mov
mov
xor
push
aas
out
test
out
stos
mov
xchg
jl
cmp
mov
pop
aaa
cmp
lods
push
mov
xchg
cmp
inc
sbb
ss
ret
adc
les
fidivrs
xchg
call
movsb
push
shlb
fdivs
dec
mov
fcompl
mov
push
mov
xor
bound
roll
mov
shlb
cwtl
adc
cmp
popa
push
cltd
mov
mov
sub
jle
mov
pusha
pop
or
push
inc
loopne
mov
inc
inc
and
out
push
or
test
mov
aam
fstpl
and
aas
pop
jb
xchg
pop
divl
cld
mov
xchg
adc
aas
sbb
mov
in
push
add
or
sbb
shlb
rclb
push
outsl
mulb
adc
mov
jne
shll
cmp
sbb
std
pop
stos
mov
pushf
data16
addr16
xor
into
test
sub
mov
adc
add
pop
idivb
pop
mov
mov
xchg
jae
ljmp
loope
hlt
adc
jmp
pop
loopne
adc
push
adc
cmp
test
cld
pop
mov
dec
stos
pop
dec
xchg
loop
ficoml
clc
in
mov
mov
mov
push
imul
adc
dec
dec
inc
in
je
adc
dec
movzbl
sub
push
sbb
jno
push
aas
or
imul
mov
lds
cmp
lret
stos
fs
and
push
xor
dec
insl
mov
jne
mov
mov
and
mov
mov
mov
pop
hlt
ret
insl
dec
cmp
dec
cmp
mov
xor
mov
lock
cmp
dec
arpl
pop
enter
jecxz
xchg
fadds
aas
cmp
inc
fcmovnb
pop
mov
sub
jb
loopne
jecxz
repnz
sarb
imul
push
mov
mov
pop
ss
cmp
fiadds
dec
pop
imulb
test
jl
xlat
insl
jp
add
mov
pop
pop
dec
inc
mov
jl
cmp
or
in
mov
fs
loop
inc
cltd
cmp
inc
mov
mov
adc
mov
rorb
mov
sbb
fiadds
in
shlb
sbb
push
fcomps
pop
les
pop
int
push
pop
dec
dec
push
and
jl
aam
jg
imul
aad
in
inc
hlt
xor
aad
ja
dec
aam
xor
and
mov
es
cmp
mov
repz
jbe
mov
dec
insb
jp
jbe
aaa
adc
ljmp
addr16
dec
mov
jl
adcl
push
lret
push
nop
mov
dec
sti
lcall
fcomps
fs
je
mov
push
mov
cmp
outsl
dec
xchg
add
or
inc
cmp
pop
jae
loop
dec
adc
xorl
mov
aas
cmp
cmp
call
test
push
adc
fstpt
inc
ljmp
cld
xor
mov
add
pop
out
stc
or
pop
inc
cld
aas
inc
gs
arpl
or
scas
xchg
push
loopne
mov
test
icebp
xlat
movb
mov
xchg
xor
mov
inc
outsb
inc
pusha
stc
cli
jl
dec
adc
mov
xchg
inc
loopne
mov
sbb
iret
mov
inc
fbld
inc
adc
je
cmp
inc
add
ret
pop
les
or
jae
mov
cmpsl
xor
cltd
mov
mov
loop
inc
pop
cltd
bound
jecxz
repz
aam
push
mov
cmpl
imul
mov
outsl
xchg
pop
sbb
pop
cmpsl
dec
loop
cmp
mov
pop
mov
lret
leave
cli
dec
mov
insb
lret
stos
mov
in
in
test
mov
mov
iret
lret
imul
xchg
mov
adc
xor
mov
lahf
in
aas
push
add
rcrb
inc
jno
mov
enter
lds
push
pop
dec
inc
adc
test
mov
add
inc
bndldx
lods
xor
or
inc
xor
dec
or
dec
inc
aam
test
sub
adcb
jnp
push
dec
push
push
outsl
cmp
fidivrs
adc
cwtl
icebp
int3
imul
dec
dec
add
mov
add
adc
xor
std
popf
push
mov
dec
dec
jmp
mov
fcmovb
xor
sarl
xor
mov
cmp
and
ret
xchg
push
sbb
ss
aam
pop
inc
arpl
push
out
xor
push
out
arpl
push
mov
aad
mov
cmp
cwtl
push
insl
jbe
cs
pushf
push
fstl
and
sbb
mov
cwtl
adc
pop
pusha
cmp
cmp
lds
xchg
xlat
mov
dec
cld
inc
sub
sub
pop
aas
add
jg
clc
mov
mov
pop
hlt
or
lods
sarl
xor
cmp
pop
pop
inc
ds
dec
dec
rcrb
loop
sbb
cmpsb
cld
push
pop
addr16
hlt
roll
aam
jl
js
mov
inc
push
inc
and
testl
mov
mov
lods
pop
in
repz
xor
push
test
lcall
test
sub
dec
mov
push
jg
mov
inc
insl
and
lock
push
push
mov
mov
add
ss
xor
bound
icebp
adc
loopne
dec
sub
pop
dec
adcl
mov
je
shll
ds
scas
sub
ror
test
and
enter
fwait
dec
dec
xchg
cmpsb
sbb
pushf
mov
cmp
loope
loope
push
inc
pop
bound
xchg
mov
lds
orb
loop
push
sbb
and
aad
lock
add
pop
inc
mov
imul
push
roll
push
andl
sub
dec
push
xor
mov
mov
jle
dec
lcall
xlat
inc
mov
dec
fadd
pusha
hlt
out
dec
bnd
lock
inc
xchg
mov
stc
js
pushf
mov
mov
cld
jecxz
dec
sbb
xor
pop
stos
fcoml
into
lods
mov
lods
pop
xor
lret
sahf
xor
add
ret
ficompl
inc
hlt
cmp
ret
test
fsubrl
inc
and
inc
aaa
mov
les
ret
fsubs
shl
out
imul
xchg
inc
add
inc
jb
ja
add
pushf
inc
mov
loopne
xchg
aam
xor
jg
int3
mov
call
mov
pop
mov
in
and
test
sub
push
mov
pop
xchg
scas
adc
clc
mov
inc
lcall
loopne
ds
xchg
stos
fnstenv
bound
xchg
jg
decb
mov
or
push
shr
and
add
xor
push
xor
lock
add
or
cmp
sahf
je
test
je
pop
push
outsl
out
mov
sarb
mov
adc
push
cmpl
daa
fdivrs
jne
popf
inc
jmp
pop
mov
fcoml
ljmp
dec
sbb
dec
adc
push
stc
push
mov
xor
stos
cltd
roll
jb
mov
outsl
jns
push
xor
sbb
adc
loope
mov
add
mov
jle
rclb
btr
sub
out
inc
hlt
std
arpl
cmp
adc
sub
inc
aad
or
dec
mov
sub
cltd
sub
stos
stos
mov
adc
xor
mov
cli
negb
push
mov
and
pop
shlb
fcmovnb
inc
outsl
fildl
iret
aaa
adc
into
in
xor
aam
sub
inc
adc
outsl
std
pop
ljmp
pop
mov
mov
aas
xor
cmp
lods
xor
mov
das
in
lcall
js
dec
hlt
cmpb
push
out
inc
xor
or
bound
mov
ja
or
mov
cmc
xchg
pop
stos
dec
cmpl
es
sarl
rclb
pusha
fdivrl
ss
push
addb
in
call
xchg
cmp
dec
lahf
pop
jae
scas
testb
dec
leave
cmpsb
ret
std
test
stos
daa
xorl
pop
xor
adc
push
subl
ror
adc
aas
cmp
dec
push
es
outsb
arpl
cltd
or
mov
insb
push
mov
pushf
mov
pushf
je
xor
add
xchg
bound
sahf
scas
stos
jns
xor
xchg
mov
mov
xor
mov
lea
pop
leave
jne
out
andb
idivl
adc
jle
loopne
pop
negb
push
inc
push
cmp
adc
imul
fnsave
xchg
inc
adc
push
or
dec
push
repnz
cmp
outsl
jmp
xchg
mov
mov
int3
arpl
inc
arpl
add
adc
inc
ss
ss
push
xor
jae
int3
hlt
mov
shlb
dec
and
add
xchg
mov
push
and
shrb
mov
mov
loopne
ret
xchg
mov
mov
dec
jl
jb
jecxz
dec
mov
xchg
mov
rcl
or
inc
test
add
fcmovne
scas
push
notb
xchg
bound
cmp
aas
arpl
push
fs
push
cmp
dec
inc
mov
mov
rorl
sbb
loopne
sbbb
mov
lods
lods
mov
out
shlb
scas
jns
ret
or
iret
pop
cwtl
repnz
ret
repnz
fldcw
aaa
into
aaa
xchg
and
hlt
inc
jge
xchg
dec
sahf
xor
lret
xor
cmp
je
jle
lds
push
pop
xchg
pushf
adc
xchg
jmp
leave
inc
cli
fdivl
xchg
stos
scas
jp
cli
mov
sarb
gs
mov
add
adc
cwtl
cwtl
sub
loop
loope
in
scas
push
mov
sarb
mov
add
push
sti
test
jp
jne
xchg
push
test
jl
xchg
mov
xchg
arpl
mov
test
push
mov
ret
rolb
aaa
xorb
sahf
mov
shll
popf
jbe
dec
gs
sub
inc
repnz
add
je
loopne
push
jmp
dec
pop
or
push
xchg
pop
xor
push
cmp
sbb
fs
mov
push
dec
push
mov
aam
cmp
ja
inc
cli
clc
arpl
int
pop
data16
cmp
popf
mov
jg
mov
inc
sbb
je
outsl
inc
push
pushf
vpmulhuw
nop
cmp
pop
aaa
pop
fnstenv
shll
lret
hlt
xchg
jno
test
add
popf
jno
fsub
xchg
popl
adc
pop
ret
and
enter
out
jns
push
pop
test
aam
ret
cmp
insl
mov
gs
xchg
out
pop
hlt
dec
mov
pop
orl
mov
mov
add
cmp
outsl
xchg
adc
aaa
xchg
mov
cmpb
xchg
je
cmp
xchg
inc
inc
add
push
lods
xorb
lods
jg
push
arpl
adc
imul
mov
push
rorb
movw
xor
pushf
pop
aas
ss
cs
jbe
add
dec
sub
lcall
sar
shll
mov
aaa
inc
es
je
insb
pop
pushf
xor
jbe
pop
adc
fnstenv
sub
loop
push
xchg
inc
pop
aam
cli
pop
scas
aad
inc
repnz
pop
mov
fiadds
mov
outsl
mov
adcb
mov
mov
ror
imul
push
push
jns
bound
aaa
xchg
clc
cmpsb
ss
mov
xor
xor
fcoms
xor
mov
inc
ja
cmp
push
shll
shlb
xlat
sarl
sahf
lds
sarb
aad
out
mov
xor
imul
mov
cld
repnz
inc
sbb
imul
cli
aad
insl
aad
xor
dec
in
mov
sbb
sbb
xchg
int
xor
fwait
mov
jne
rcl
pop
ljmp
hlt
cmp
xchg
push
pop
adc
or
adc
cld
xchg
cmpsb
mov
mov
pop
inc
cmp
jg
jecxz
and
cmpsb
popl
movsb
xor
icebp
cwtl
xor
and
mov
aam
adc
jecxz
pop
loop
dec
mov
in
push
call
lret
pop
cmp
push
pop
adc
iret
mov
lcall
dec
pop
out
aam
pushf
loop
adc
jecxz
push
sub
mov
shlb
into
arpl
mov
push
out
cli
js
into
out
lcall
pop
cmp
test
jb
mov
push
adc
cld
lcall
add
lods
xor
mov
push
rclb
mov
test
out
push
cwtl
imul
rclb
jo
cmp
out
xor
and
jg
sarl
mov
rcrb
mov
mov
xchg
dec
xchg
jns
mov
stos
js
mov
and
lods
push
test
rol
mov
testl
pop
arpl
pop
cmp
outsl
cmp
pop
dec
inc
inc
xlat
data16
and
std
arpl
dec
jl
adc
sub
jg
sahf
dec
mov
shlb
fs
cmc
idiv
pop
adc
dec
lcall
cmp
mov
add
adc
sbb
pushf
dec
cmc
rorl
inc
inc
sbb
mov
shlb
loop
jmp
cs
adc
push
xor
out
es
arpl
jp
orl
out
push
out
rclb
inc
flds
aas
outsb
cmovp
sbb
aas
pop
jp
jne
dec
sub
dec
jno
jne
mov
mov
sub
in
repnz
sti
mov
dec
push
scas
jae
or
fwait
cld
sub
cmp
arpl
stos
movsl
aas
pop
popf
jbe
bound
pop
cmp
sbb
push
ss
push
js
xchg
jle
push
lahf
jbe
xchg
xor
and
xchg
push
outsl
pop
sbb
sbb
xor
mov
xor
loope
push
mov
pop
test
and
push
aas
loop
pushf
cwtl
lods
fwait
outsl
mov
inc
fst
repnz
xor
rclb
or
sbbb
adc
mov
insl
xchg
push
cmp
sbb
sub
jb
sub
mov
lcall
add
sub
jb
xchg
dec
lds
stos
adc
ds
sub
aas
cld
cltd
stos
dec
imull
push
pushf
add
xchg
jmp
adc
dec
ss
push
ss
sar
cmp
enter
cmp
push
adc
data16
out
cmp
xlat
fstpt
and
int3
xchg
cmc
push
fdivl
lcall
xchg
outsl
imul
inc
jl
mov
adc
xor
mov
and
js
and
gs
xchg
bound
sarb
inc
push
pop
inc
push
adc
repnz
ja
inc
inc
sub
push
loope
push
mov
mov
sub
cmp
jno
stc
sbb
aam
stc
cld
rcll
mov
lret
xchg
scas
cmp
je
orb
imul
stc
loop
stos
xor
and
les
jg
cld
aas
dec
inc
inc
dec
pop
jo
test
sbbl
pop
xchg
loop
fchs
inc
cmp
sarb
leave
lods
popf
rorb
fwait
cwtl
mul
push
mov
mov
inc
pop
dec
lret
adc
jb
push
jg
aas
dec
xor
hlt
push
adc
push
les
cmc
insb
jne
push
mov
js
aad
xor
inc
mov
push
scas
scas
cmp
cmp
daa
lds
pop
fld
xor
cmp
dec
pop
lods
push
mov
mov
xor
mov
jbe
jecxz
cltd
stos
jg
aas
inc
lods
loop
cmp
sub
into
and
sbb
testl
sub
mov
adcb
mov
mov
rorb
xchg
jecxz
icebp
xchg
mov
mov
pop
add
mov
jp
mov
sahf
adc
shlb
cli
scas
mov
aas
push
jb
jg
dec
idivb
sub
xchg
fdivrs
xchg
or
pop
aas
inc
or
dec
cmp
fwait
aas
fwait
in
adc
repnz
dec
aaa
push
push
ret
arpl
out
idivb
cmp
mov
mov
xchg
hlt
bound
clc
mov
jne
adc
sbb
pop
scas
dec
xchg
and
adc
lock
mov
stc
mov
push
push
aas
dec
cmp
sbb
sub
jae
jl
mov
xchg
dec
dec
sbb
sbbl
dec
loopne
mov
jne
jle
push
das
mov
mov
and
rcrb
mov
xor
mov
mov
sahf
cmp
mov
mov
sub
das
lods
mov
js
xor
xor
mov
xorb
push
nop
inc
out
dec
cmc
arpl
je
or
mov
sbb
xor
mov
outsl
notl
sbb
ja
in
imul
scas
daa
push
add
and
inc
add
loopne
inc
loope
arpl
mov
fs
xor
push
dec
int
xor
and
push
je
imul
pop
sahf
je
fisttps
cmp
sbb
dec
iret
cmc
mov
mov
ret
xor
mov
movsb
pop
add
je
movsb
je
lods
loop
dec
add
adc
inc
jnp
cmp
movsb
mov
inc
into
cmp
addr16
xchg
pop
pushf
mov
dec
jl
mov
stos
pop
dec
pop
sbb
mov
jl
leave
push
jnp
loope
test
faddl
mov
arpl
sarl
xor
add
xor
cmp
icebp
and
mov
push
int3
inc
mov
add
popa
mov
inc
nop
add
jecxz
lods
gs
push
cmp
loop
push
ss
mov
aas
ss
dec
mov
call
call
mov
pop
push
repnz
xchg
xor
arpl
mov
aas
add
xor
fnstsw
dec
xchg
gs
stos
mov
xor
scas
xor
pop
aaa
dec
aam
push
cltd
jae
fcoml
hlt
cmp
aad
and
xor
rorb
mov
xchg
cmc
imul
mov
and
test
fldl
je
pop
dec
sub
or
adc
lret
push
add
adc
pop
push
cmp
jp
mov
test
sbb
leave
cltd
push
mov
dec
dec
xor
cmp
cltd
in
or
jecxz
mov
sti
pushf
sbb
push
mov
inc
or
ss
dec
mov
lds
dec
inc
cmc
mov
jb
push
sbb
cmp
mov
and
or
ss
std
cmc
and
addb
inc
jmp
cmp
popf
scas
pop
repz
aaa
mov
push
xlat
mov
cld
mov
xor
mov
push
pop
push
pop
mov
div
mov
sti
pop
lds
jle
or
lock
dec
xor
inc
cltd
mov
int
inc
sub
roll
mov
imul
cmp
xchg
aad
pushf
mov
bnd
dec
pop
cltd
pop
hlt
dec
jp
test
xchg
nop
xchg
xlat
xor
jb
mov
in
mov
stos
push
scas
jae
mov
mov
or
inc
dec
adc
xor
leave
mov
pop
mov
inc
xchg
mov
test
sbb
js
lods
pop
shlb
loopne
push
repnz
lods
in
test
push
scas
xchg
out
adcl
mov
add
in
loope
and
add
sbb
pop
pushf
sbb
insl
sarb
ljmp
repnz
xchg
cmpl
mov
loope
jg
mov
shlb
cmp
adc
testl
jl
and
adc
orl
jb
inc
outsl
loopne
dec
sbb
sbb
jno
xor
dec
int
aam
dec
repnz
push
inc
lret
dec
dec
mov
dec
mov
adc
push
cmp
jnp
je
cli
fimuls
sbb
jmp
inc
stos
xchg
mov
cltd
mov
xor
add
push
pop
mov
movsb
call
rol
push
mov
mov
sti
insb
push
jno
stc
pop
mov
mov
loop
dec
jne
cltd
jnp
push
xchg
arpl
mov
sbb
ret
das
cli
ret
fcoml
arpl
shl
addr16
mov
ret
xchg
push
adcl
ss
or
push
repnz
out
dec
nop
dec
cmpsl
scas
mov
daa
pop
dec
mov
push
add
jg
out
push
mov
push
loop
add
and
and
and
jecxz
jns
sbb
dec
sarl
xchg
sarl
lea
insb
dec
mov
xchg
xchg
adc
cmpsb
cmp
push
aam
bound
sbb
sbb
fwait
imul
lcall
xchg
sub
xor
ja
or
stos
dec
inc
mov
in
in
jecxz
jno
jl
xor
xchg
mov
cs
mov
dec
jae
inc
mov
mov
aad
rcrb
call
sbb
divb
dec
inc
xchg
pop
or
insb
cli
push
mov
jae
aas
cmp
and
sahf
xor
inc
lock
inc
push
cltd
mov
aam
xor
pop
push
outsl
pop
dec
push
xor
xlat
mov
push
inc
cmp
inc
mov
lcall
inc
mov
mov
ret
push
inc
in
arpl
xor
jmp
pop
xor
inc
loopne
jmp
inc
cmp
les
loop
fstl
repz
mov
enter
pop
movsb
subl
mov
call
push
fs
aas
outsb
xlat
xor
jbe
xorb
adc
adc
dec
insb
inc
ret
into
inc
cmpsb
inc
nop
mov
xor
fnstcw
mov
inc
mov
sub
mov
mov
cmp
sub
and
cld
pop
xchg
ss
into
dec
dec
inc
inc
dec
mov
xlat
adc
out
xor
daa
jne
add
adc
pop
mov
jno
popa
shrb
mov
xor
fidivrl
enter
dec
xor
mov
bound
xchg
pushaw
sub
rcl
ja
repnz
aas
and
ja
fmull
xchg
push
xor
add
sarb
jo
push
cmp
dec
aaa
cmpsb
jp
and
je
dec
sub
call
in
mov
std
faddl
fs
dec
pop
fs
outsl
fsubrs
cld
int
xor
cmp
jg
dec
push
shll
sub
sub
cmp
ljmp
inc
out
adc
push
out
inc
test
insl
sti
jne
outsl
or
ret
mov
push
xchg
scas
enter
jae
leave
xor
mov
shlb
lcall
push
inc
cli
test
inc
sub
add
jb
fsubl
mov
pop
xchg
jne
sbb
mov
pusha
push
dec
std
mov
push
subb
ljmp
in
push
hlt
xor
mov
xchg
pop
jne
mov
push
in
mov
int
mov
sbb
add
repnz
lret
sbb
fstpl
xchg
sbb
mov
leave
ja
cmpsl
push
inc
sbb
inc
and
cltd
jae
xor
inc
mov
cmp
mov
je
mov
js
pushf
mov
dec
add
cmc
fs
jmp
hlt
bound
push
jle
ss
fdivs
std
lret
ret
mov
cmpsl
cmp
mov
ljmp
cmp
pop
les
lcall
adc
sub
jns
dec
imulb
xchg
or
sbb
mov
or
push
ret
divl
pop
fdivrl
dec
movsb
push
cmp
dec
in
mov
outsl
ficoml
ret
call
xchg
jne
adc
xor
mov
scas
mov
fstps
gs
mov
aam
hlt
mov
cwtl
mov
inc
xchg
cltd
or
and
xor
or
mov
in
movsb
adc
xchg
mov
arpl
mov
mov
adc
jne
xchg
mov
xchg
stos
loopne
push
cwtl
call
sbb
int
mov
xchg
and
adc
pop
gs
mov
fisubrl
mov
hlt
iret
insl
rolb
inc
repz
scas
jmp
xchg
or
gs
mov
fdivrs
ss
cmp
call
cmp
scas
stc
pop
push
pop
repnz
rclb
scas
aaa
mov
scas
adc
cmp
xor
mov
lock
pop
aaa
xor
cmp
mov
test
mov
in
push
mulb
inc
xchg
shrl
xchg
sub
sub
int3
push
fimuls
cmp
add
dec
pop
adc
arpl
push
int3
dec
xor
loop
lock
push
loope
mov
pushf
sub
lock
fnstenv
pop
push
sub
jae
push
loopne
sbb
cmp
aaa
dec
jl
jp
jmp
xlat
sar
ret
sarl
cmp
sub
repnz
push
adc
js
push
rcrb
inc
xchg
cli
xor
rcrl
aaa
pop
addr16
mov
fcmovnbe
dec
jo
lea
jmp
loopne
scas
mov
arpl
mov
xchg
mov
js
sbb
imul
rclb
rol
xchg
mov
push
dec
sbb
pop
mov
mov
xchg
inc
pusha
add
ret
stos
les
orl
out
mov
push
pop
mov
sub
inc
sbb
mov
inc
cmp
inc
jne
push
jbe
ds
jg
aas
dec
in
adc
leave
sbb
test
rcrl
lds
jp
out
or
jg
or
push
sbb
mov
fwait
sbb
pop
shl
mov
inc
xlat
cmp
scas
cmp
cmp
repz
jae
inc
ss
mov
xor
inc
js
adc
rorl
sarl
aaa
bound
and
enter
xchg
shlb
xor
jecxz
cmp
jae
or
adc
jb
out
add
inc
popf
cmp
pop
adc
jo
pop
jecxz
pushf
and
aaa
mov
ja
push
cwtl
mov
cmpsb
mov
push
movsb
lds
cmp
cmp
cltd
mov
orb
shll
mov
fimuls
loop
das
fisttps
and
push
int
adc
fwait
xchg
mov
leave
mov
dec
lahf
or
cltd
push
adc
mov
orl
cli
mov
lret
cmc
jecxz
mov
dec
and
das
imul
xor
js
mov
push
movsb
inc
and
cmpsl
pop
ljmp
pop
sti
mov
scas
orb
jmp
adc
cmp
xchg
dec
data16
mov
mov
mov
add
loop
sbb
lds
pop
jno
pop
cli
notl
daa
inc
push
adc
sti
add
push
add
test
or
sub
adc
ret
pop
push
aam
clc
jo
fidivrl
xchg
mov
push
xor
sub
out
scas
mov
sbb
or
jecxz
ret
and
sbb
push
cmp
movsl
pushf
mov
push
orb
pop
stos
negb
loop
or
adc
lret
ficomps
out
sub
dec
or
les
dec
push
rcrb
xchg
mov
and
jle
loopne
xchg
mov
push
cmp
repnz
sub
loopne
ljmp
shlb
mov
fstps
inc
imul
add
dec
das
cmp
inc
fsts
pop
add
aad
jmp
rorb
jge
xor
jp
cld
loopne
mov
rorl
je
fadds
sarb
mov
mov
cmp
dec
sub
xchg
scas
sbb
cltd
cmp
scas
fstl
outsl
in
push
xor
jne
repnz
dec
loope
jg
negb
pop
sti
ss
xor
dec
imul
push
sub
cli
xchg
movsb
push
mov
add
mov
out
adc
std
dec
cmp
mov
lret
pop
cmp
fscale
jge
dec
dec
dec
jle
icebp
push
lret
arpl
or
into
mov
pop
outsl
and
or
ror
jmp
dec
sahf
dec
in
xorps
mov
or
jbe
jmp
aaa
jmp
or
xchg
inc
push
call
ja
mov
jp
dec
out
adc
jge
aam
call
cli
xorb
ret
inc
loopne
arpl
outsl
mov
jbe
pop
push
insb
sub
dec
loop
pop
or
xchg
lahf
jge
jbe
jmp
into
xchg
xor
mov
mov
xchg
js
push
pop
xchg
xor
xchg
sbb
push
pushl
cmc
xor
adc
mov
out
jnp
rcl
cmc
mov
arpl
ret
mov
xchg
outsl
hlt
ss
mov
adc
and
push
pop
push
adc
subl
xor
mov
fildll
cmp
sti
jb
incb
clc
loopne
repnz
enter
ret
jp
xor
imul
rol
add
ret
stc
scas
jle
mov
pop
scas
scas
stc
rcrl
jbe
roll
cmp
jp
sbb
jns
push
aas
rclb
in
rcll
xchg
xor
xchg
inc
jb
mov
and
add
scas
mov
jecxz
test
mov
adc
xchg
push
jnp
mov
add
inc
repz
xchg
mov
in
fcompl
or
mov
jle
push
pushf
addl
or
push
lcall
add
ss
mov
jae
sahf
cmp
fcmovnu
inc
push
sahf
push
imul
ds
fidivrl
ss
dec
enterw
jge
addr16
jno
jecxz
test
cmp
in
fldcw
jl
mov
pop
ret
repz
js
push
or
outsl
xchg
stos
or
outsb
cmc
fcmovbe
xor
push
adc
pop
inc
mov
mov
or
push
mov
xor
sbb
jo
cmp
cmp
push
add
int3
jae
ja
das
inc
or
fisubs
pop
mov
outsl
cmp
xor
leave
sub
insb
lea
push
dec
int3
push
outsl
fbld
mov
mov
arpl
inc
jmp
xchg
cmp
lcall
cmp
jle
mov
adc
fs
mov
push
ret
jbe
or
xor
sbb
aad
pop
push
jae
adc
xchg
cmpsb
mov
arpl
es
sub
ret
lods
dec
mov
xlat
insl
int3
add
data16
sbb
ret
mov
dec
jl
mov
shl
andb
shll
cmp
mov
sti
push
cli
sarl
data16
mov
cmpb
repnz
js
lret
nop
outsb
sbb
insb
addl
aam
mov
push
xor
jmp
jbe
pop
mov
lret
pop
mov
mov
inc
call
cmp
jle
xchg
stc
push
pop
cli
popa
loopne
xchg
shll
inc
jg
gs
fwait
adc
fidivl
pop
pop
je
push
push
cmc
fists
pushf
pop
lds
fidivl
addr16
or
or
push
negl
popf
inc
dec
mov
sbb
movsb
push
ficomps
xor
push
scas
xchg
loopne
push
fnstsw
das
push
mov
mov
push
sbb
arpl
adc
inc
aad
sarb
dec
test
add
jge
or
jno
pop
sub
daa
dec
nop
push
sar
cld
xor
dec
push
ficoms
jg
popf
jecxz
cli
int3
mov
xchg
cld
sbb
mov
dec
inc
inc
arpl
hlt
repz
jbe
rcll
negb
lods
xor
push
mov
xchg
sbb
ret
sbb
lret
inc
shll
push
pop
outsl
fldl
sbb
xor
jp
adc
and
mov
adc
les
dec
mov
adc
xor
rcl
add
adc
movsb
jl
cld
lcall
in
pop
mov
inc
inc
pop
fdivl
loopne
adc
rcl
adc
add
aam
loopne
jns
mov
pop
mov
outsb
adc
mov
jl,pn
push
clc
xchg
or
sbb
fidivl
mov
lret
imul
mov
jb
sub
lcall
test
mov
clc
pop
sbb
leave
push
sub
fsts
jno
dec
pop
mov
xchg
cwtl
pop
repnz
jbe
mov
push
mov
jecxz
aaa
out
outsl
xor
fidivrl
cli
jg
or
repnz
push
jb
xchg
dec
bound
int
jb
aas
sbb
or
cmp
loop
xchg
pop
sub
push
loopne
xor
cltd
fs
ja
push
repnz
push
bound
arpl
out
int
lcall
lea
inc
lea
mov
pusha
shll
mov
mov
cli
pop
insb
mov
outsb
mov
popa
repnz
arpl
xchg
jb
dec
and
loop
xchg
aaa
mov
test
lds
mov
mov
xor
jle
xor
out
mov
aad
in
dec
test
pop
jle
notl
mov
cmp
xor
mov
shlb
jnp
lahf
mov
xor
cmp
xchg
jne
pop
push
popa
and
sarl
cmp
dec
jp
jns
or
test
daa
cmp
adc
jg
cmp
sar
adc
pop
push
cli
jb
xor
inc
icebp
xchg
js
xor
fdivp
cmpsb
int3
sarb
scas
cmp
pop
cmp
popf
outsl
sbb
pusha
inc
stc
cmp
stos
add
out
xlat
jb
aad
loope
jge
inc
sbb
mov
les
jecxz
mov
pop
jns
jecxz
mov
aaa
jge
dec
jl
cli
pop
add
arpl
adc
scas
in
jns
in
push
jl
push
nop
out
cltd
mov
cmp
fcoml
jecxz
mov
mov
sarb
dec
loopne
outsl
push
pop
xchg
loope
testb
rcll
mov
pop
fld
scas
xor
sub
sbb
inc
cld
aaa
cmp
jle
aam
mul
loope
movsb
inc
pop
push
jae
fsubl
xchg
mov
mov
xor
xchg
dec
jb
loopne
jg
repz
sub
jmp
mov
mov
push
lds
arpl
inc
call
xchg
mov
js
gs
inc
and
sar
std
dec
mov
addr16
sbb
js
sbbb
stos
scas
mov
aaa
push
in
jbe
inc
xor
push
mov
fxch
dec
outsl
push
pop
adc
push
push
jp
push
xor
test
insl
gs
outsl
adc
jle
lea
mov
jns
mov
pop
jecxz
ja
js
mov
stc
xchg
and
push
cwtl
addr16
inc
pop
jle
mov
out
cmp
xor
pop
add
sbb
push
sbb
jns
ja
addr16
push
shl
pop
in
jb
cli
push
ret
jbe
xor
fsts
adc
shlb
pop
xchg
sbb
arpl
lcall
sbb
scas
or
adc
adc
movsb
hlt
fs
in
scas
cmp
push
pop
loopne
xchg
std
cmc
cmc
xor
dec
hlt
jecxz
xor
out
or
pop
negl
push
push
gs
aaa
pop
js
cmp
add
mov
loopne
loopne
jns
sub
fisubs
in
cmp
pop
int3
std
push
fs
scas
fwait
ret
xor
lret
add
dec
scas
pop
dec
mov
fwait
shlb
shl
and
jnp
popa
cmp
mov
jmp
arpl
popa
notl
lock
orl
xchg
stos
jle
mov
sub
xchg
cwtl
inc
xor
lret
sarb
push
dec
xchg
mov
scas
mov
dec
push
lods
in
in
inc
mov
cmovae
cs
inc
dec
ds
cmp
call
je
mov
dec
push
pop
insl
test
loopne
repz
rolb
adc
mov
lock
test
dec
test
popf
cmp
adcl
or
ss
scas
jae
loopne
hlt
mov
mov
push
aad
aam
mov
mov
data16
lock
xchg
jmp
adc
sti
pop
push
dec
es
fdivr
sbb
xlat
enter
push
cmp
xchg
fsubr
dec
sub
clc
inc
ret
popf
xchg
xchg
mov
cmp
cmp
lahf
arpl
xchg
push
std
inc
add
shlb
jl
inc
push
jae
mov
lret
fistl
enter
pop
or
int
mov
dec
mov
sbb
dec
and
nop
and
ja
jbe
addr16
fwait
int3
fldenv
and
icebp
hlt
outsl
add
inc
shll
rcl
loope
adcb
dec
lcall
iret
ret
push
ljmp
scas
imul
imul
xchg
adc
mov
outsb
push
cmp
push
hlt
xchg
sti
push
and
out
repz
sub
test
mov
sti
mov
sub
sub
add
stos
rol
mov
jne
fiadds
mov
mov
mov
push
movsb
mov
addr16
mov
test
push
out
outsb
xchg
jns
add
loop
orb
rcrb
enter
push
dec
xor
mov
fimull
xchg
popf
dec
movsb
adc
sub
mov
out
push
lods
pop
sbb
mov
std
shrb
imul
js
fmul
idivb
pop
je
cmpsl
jmp
cmp
inc
test
je
jb
outsl
lret
lcall
xor
xchg
dec
in
mov
sbb
or
cwtl
push
push
repnz
pop
mov
aam
imul
insb
mov
std
xor
cmp
cld
inc
sub
insb
mov
xchg
arpl
shr
or
stos
cmp
pop
pop
faddl
or
jnp
xchg
inc
mov
push
pop
loope
mov
cmp
adc
pop
add
pop
fcmove
or
xor
mov
cwtl
lahf
movsb
dec
push
aam
inc
fisubrs
mov
cmp
xchg
jae
dec
dec
pop
in
leave
mov
xchg
push
adc
mov
mov
inc
and
dec
mov
data16
pop
es
pop
aad
divl
aaa
mov
and
jbe
mov
jne
pop
sub
mov
stos
xor
cmp
mov
sub
fcompl
outsl
and
mov
orb
dec
cmp
out
sahf
jmp
inc
divb
mov
incb
fisubrs
cli
mov
jae
std
stos
and
hlt
je
ret
testb
mov
pushf
mov
aam
lahf
cmp
outsl
ljmp
sbb
int3
xchg
sub
adc
pop
mov
sub
mov
sbb
add
loop
movsb
mov
arpl
add
inc
lods
cmp
xor
mov
fidivrs
push
mov
fcoml
rorl
je
shll
hlt
mov
aad
stos
cmp
nop
push
mov
or
adc
lret
jo
addb
mov
inc
loop
stos
pop
and
push
sti
sub
sbb
pop
je
sbb
xchg
sub
dec
sub
sti
fs
je
js
sti
xor
hlt
sub
ret
ljmp
ja
dec
scas
pop
je
jg
pop
fsubr
mov
inc
jecxz
lods
xlat
push
loope
ret
icebp
xor
popa
jne
and
inc
mov
inc
hlt
jne
sbb
mov
push
dec
sub
fidivs
cmp
xchg
mov
lret
cmp
xor
push
cmp
mov
push
lods
push
pushf
pop
scas
rol
add
push
jne
stos
inc
dec
repnz
jbe
pop
jge
dec
pop
push
jnp
and
inc
mov
pop
popa
xchg
jl
aaa
arpl
cli
mov
jbe
jge
mov
mov
fs
pop
mov
cmp
xchg
mov
je
mov
sub
adc
arpl
fwait
sarb
je
push
call
sahf
std
jg
clc
stos
push
aad
out
pop
inc
xchg
add
adc
pop
cld
fldl
mov
jb
je
lock
push
aas
inc
movsl
sbb
cmpsb
mov
push
cmp
cmp
inc
js
jne
stos
jbe
popa
xchg
pop
cmpsb
je
mov
inc
sub
mov
mov
mov
or
lcall
pop
out
inc
popf
in
mov
pop
add
sub
lret
pop
outsl
imull
dec
push
sbb
push
add
jp
push
cmp
loop
cmp
jbe
lret
outsl
pop
rcll
dec
inc
rcr
cmp
add
pop
fisubrl
jl
cmpsb
out
loop
cmp
mov
mov
jp
xor
mov
add
out
mov
sbb
sbb
ret
jno
les
mov
sarb
jbe
jecxz
rolb
fst
les
std
jl
fiaddl
dec
je
jl
mov
lcall
inc
push
mov
jp
pop
outsb
daa
rcrb
xor
ljmp
xor
push
jmp
xchg
int3
cmp
bound
hlt
out
sarb
stos
mov
std
loope
or
pop
cld
icebp
test
cs
xchg
out
push
nop
push
xchg
aas
into
dec
mov
push
aas
jg
ficoms
lea
mov
dec
mov
jp
jbe
pop
lret
jg
add
movsl
xchg
enter
scas
icebp
outsl
repnz
mov
pop
cltd
jle
push
std
aas
js
cmpsl
pushf
jbe
hlt
repz
repz
imul
xor
or
push
dec
mov
xor
lds
jae
adcl
fldt
pop
bound
jp
sub
stos
mov
push
ret
dec
mov
mov
push
jbe
lret
loope
iret
add
aas
push
mov
jmp
cmp
jb
icebp
inc
hlt
in
sbb
sub
lret
xorb
cwtl
lods
lcall
ucomiss
ret
push
cmp
push
in
aaa
and
in
call
xor
push
dec
aaa
jnp
inc
ja
push
mov
loopne
and
ds
mov
cltd
xor
sbb
shr
xchg
jnp
fistl
pop
js
and
jg
mov
hlt
fldt
pop
loopne
inc
jge
dec
shl
stc
dec
out
xchg
jle
xor
and
dec
mov
insb
outsl
aas
inc
jp
rcll
sub
subb
test
ja
jp
icebp
xor
inc
adc
daa
sbb
push
pop
les
add
mov
ss
test
test
pop
jp
jle
sub
repnz
mov
je
xchg
pop
fdivl
repnz
mov
mov
mov
imul
jp
shlb
dec
xchg
arpl
sbb
add
xor
mov
sbb
mov
pop
jecxz
repnz
addl
mov
add
je
mov
daa
rclb
flds
dec
lds
jp
pushf
scas
jp
fisubrl
dec
lcall
cmp
pushf
dec
inc
imul
pop
fwait
sbb
mov
push
xchg
stos
es
adcb
imul
jo
cmpsb
xchg
cmp
jnp
inc
fs
inc
pop
popf
les
dec
mov
imulb
inc
and
js
cli
pop
add
inc
movsl
cmp
push
mov
push
fdivl
xchg
push
rclb
in
mov
xchg
dec
adc
lahf
push
mov
push
scas
mov
push
push
push
push
inc
jb
xchg
mov
jmp
dec
negb
stc
fs
pop
cmp
outsb
repnz
push
cli
stos
push
ret
js
mov
addr16
mov
add
adcl
jp
outsb
js
fimull
mov
stc
xchg
cli
scas
mov
test
xchg
inc
data16
sbb
test
cli
pop
pop
cli
mov
not
adc
mov
cmc
jecxz
lret
jbe
jbe
shrl
ljmp
ja
pop
loope
jb
jp
and
jo
ja
and
push
mov
jo
loop
or
adc
inc
arpl
popf
xchg
dec
ret
out
rcr
mov
rorl
xchg
xchg
lods
cwtl
sbb
push
outsl
cld
fwait
mov
add
dec
mov
cmp
xor
repz
or
mov
lret
jmp
rcrl
cli
sbb
push
shl
push
push
ret
adc
lret
inc
aad
lds
inc
arpl
enter
fadds
inc
test
cmp
outsl
nop
int3
inc
adc
pushf
cmc
dec
loope
dec
jae
xchg
out
sbb
loopne
out
jp
push
push
jb
push
mov
cmp
shl
sbb
aam
pushf
push
sbb
xchg
adc
mov
imul
cmp
aas
dec
inc
sti
daa
inc
flds
test
ret
cwtl
adc
ret
sbb
mov
negl
jp
cmp
scas
xchg
xor
inc
loopne
jg
cmp
sarb
jp
xor
bound
cltd
jnp
stc
jecxz
push
shrb
negl
inc
mov
shl
outsl
jno
cli
nop
int
xor
iret
xchg
xchg
sub
mov
aas
cmp
inc
mov
shlb
hlt
cmp
lea
fwait
xor
shr
aad
cmp
cli
lea
pop
rcr
mov
jge
dec
aaa
out
jbe
fnstsw
pop
repnz
repnz
stos
scas
mov
xchg
imulb
idivb
xlat
push
imul
mov
mov
lahf
les
or
insl
dec
inc
mov
mov
mov
ficompl
mov
xchg
dec
aas
push
aas
dec
xchg
sbb
cld
dec
xchg
inc
fwait
or
sbb
iret
adc
xorb
divb
ret
in
mov
and
xchg
out
lahf
sti
cmpsb
cmpsl
push
mov
stos
jp
xchg
add
enter
imul
mov
dec
pop
or
cltd
mov
dec
lret
adc
ret
inc
mov
xor
rol
pop
push
clc
insl
sub
sub
aam
lcall
lock
aad
sbb
inc
movl
out
mov
adc
and
jmp
jp
cli
nop
cmc
mov
mov
movsb
adc
pop
push
adc
mov
mov
cltd
stos
orb
dec
mov
mov
push
lods
jg
xor
call
mov
rolb
dec
subl
gs
or
sbb
or
out
jle
loope
jge
pop
xor
xchg
scas
cmp
insb
xchg
jno
cltd
sub
mov
imul
adc
je
aad
jp
mov
lods
rorl
mov
sbb
push
sub
mov
scas
std
flds
bound
sti
fldenv
ret
fldenv
pop
xorb
push
fldenv
mov
test
mov
add
jg
mov
push
scas
adc
jne
jne
and
ss
pop
inc
mov
dec
adc
shrl
je
inc
mov
mov
movl
push
ficoms
adcl
cmp
cmpsl
orb
xor
scas
ds
jbe
cmp
icebp
dec
xor
sub
jmp
inc
loope
push
pop
test
scas
xchg
loop
sbb
fimuls
outsl
push
pusha
fsts
xor
xor
mov
sbb
dec
loope
or
dec
mov
sbb
fcoml
bound
repz
pushf
shll
outsl
fadd
dec
inc
xchg
jno
xchg
adc
subb
popf
xchg
insb
jge
push
fsts
outsl
cs
inc
stc
xchg
jp
xor
add
outsl
mov
jae
aaa
jp
sahf
stos
sbb
dec
lods
inc
sbb
adc
test
xchg
jb
mov
add
sbb
fld
xchg
leave
mov
movsb
xor
xchg
ror
loop
sub
dec
xor
mov
sbb
gs
and
cmp
sbb
loop
xor
test
push
scas
add
mov
shld
sub
cmc
mov
cmp
cmc
mov
ds
cmp
dec
cmpsb
xor
sub
xchg
dec
jmp
push
adc
sahf
aaa
ds
jo
add
xor
mov
or
mov
shrl
out
stos
rolb
shlb
inc
mov
sbb
ja
loopne
cmp
xchg
mov
int
mov
jns
cwtl
dec
jp
push
mov
mul
into
jnp
loopne
xor
rorl
fcoms
rcrl
mov
loope
xchg
sub
mov
mov
jnp
xchg
cltd
out
sysret
inc
insb
pop
jg
jae
pop
mov
lret
loopne,pt
mov
dec
or
adc
jbe
mov
loopne
jl
aad
xchg
adc
shll
gs
aaa
stc
xlat
mov
mov
cmp
xor
push
loope
in
clc
in
push
inc
jge
je
xor
hlt
leave
dec
pop
fisttpll
push
adc
int3
add
jnp
jp
jle
jae
les
stc
out
mov
jge
ficomps
aas
icebp
movsb
cmpb
dec
loopne
shlb
cmp
adc
movsb
mov
inc
out
inc
jle
xchg
xor
dec
sub
inc
rcrb
jmp
mov
mov
shll
repz
cld
aam
push
cmp
sub
nop
mov
fcoml
scas
push
adc
shrb
movsb
outsl
sbb
adc
mov
mov
push
pop
xchg
push
sbb
jbe
inc
repnz
cmp
pop
mov
xchg
mov
mov
mov
lret
cmc
sub
cmp
xchg
mov
mov
cltd
push
sub
dec
movsb
mov
sarb
fstps
add
loop
cmp
inc
iret
mov
ret
push
aas
aad
pop
mov
repz
cltd
mov
pop
push
xchg
or
bound
inc
gs
dec
hlt
push
sarl
in
cmc
xor
xor
in
push
xlat
inc
imul
aam
repz
aaa
mov
sub
sub
xchg
push
loope
inc
ss
xor
std
pop
push
inc
dec
or
pop
jge
xchg
in
mov
ficompl
out
dec
movsb
aas
int
outsl
add
leave
flds
sti
rolb
iret
push
dec
add
push
repnz
sbb
fists
lea
je
xchg
dec
dec
or
xchg
mov
ficoms
insl
and
pop
dec
mov
stos
and
inc
aad
pop
ss
sbb
repnz
push
test
inc
cmp
fcmove
pop
mov
daa
pop
scas
outsl
popf
cmp
sbb
sub
push
scas
cmpsb
lahf
jecxz
push
inc
jg
sbb
hlt
xor
clc
dec
scas
js
sub
dec
adc
jp
pop
pop
push
adc
test
shrl
mov
cmp
xorb
dec
inc
fildl
icebp
mov
xor
jmp
push
adc
add
jb
cmpsb
jbe
shlb
mov
sub
sbb
pop
push
push
icebp
add
rcr
fldenv
sbb
cli
or
cmp
inc
or
ret
sbb
inc
outsb
jne
loope
xchg
or
sbb
cltd
jle
fcmovnbe
push
sub
push
cld
cmpsb
test
rdtsc
bound
adc
movb
adc
rclb
out
inc
outsl
add
mov
sarb
push
repz
or
mov
adc
xchg
adc
adc
setns
xor
push
jb
inc
sbb
ljmp
pop
push
popf
dec
bnd
xchg
lret
imul
les
push
xchg
and
test
ret
lret
and
add
or
inc
cmp
mov
lret
push
cwtl
xor
shl
xchg
repz
mov
adc
dec
adc
sbb
jne
jne
cmpl
xor
mov
and
inc
push
push
jnp
or
imul
xchg
jb
test
je
loopne
mov
cmp
out
push
loope
das
test
inc
xchg
outsl
int
fwait
inc
cmp
je
xor
mov
sbb
push
lcall
inc
and
lahf
loop
fs
rolb
in
std
fnstenv
pushf
and
mov
cmp
jne
mov
loopne
mov
pushf
mov
pushf
ret
push
jl
xchg
add
gs
insb
sub
xchg
push
cmp
mov
lock
cmp
bound
and
sub
cli
pop
or
xor
adc
inc
outsb
and
mov
jno
xchg
xorl
outsl
int3
dec
outsb
xor
inc
mov
jae
inc
xor
loopne
adc
test
jg
popf
popf
enter
and
xchg
xor
mov
sub
fstpt
hlt
ljmp
xchg
bound
fs
andb
ljmp
xchg
mov
jb
add
push
pop
outsl
inc
pop
sbb
ljmp
mov
xorb
mov
loope
cltd
adc
xchg
dec
cmpsl
cmp
cmp
push
mov
adc
push
and
adc
ret
sahf
or
mov
insl
rclb
out
dec
and
fimuls
mov
adc
cmp
dec
ja
push
mov
xor
daa
and
ret
aaa
stos
jecxz
inc
mov
into
shlb
dec
test
sti
adc
into
ror
prefetcht1
movsb
xchg
fdivp
xor
xchg
ret
nop
xchg
add
scas
add
jb
xchg
xchg
ss
sarb
lret
sbb
fs
push
cmpsb
jb
cmp
or
pop
pop
repz
jbe
fstpt
pop
xchg
outsl
dec
mov
je
loope
xchg
mov
lcall
loop
push
ljmp
sbb
sti
cmp
iret
xor
adc
or
ret
ficoml
insb
adc
cmp
jmp
mov
cmp
push
and
cmp
aaa
mov
fdivl
xor
jns
loopne
cltd
jae
jge
outsb
mov
mov
mov
cltd
inc
xor
mov
shll
sub
add
cmpb
xor
jne
ds
fcoml
mov
jb
pop
aad
rcl
arpl
aas
mov
xchg
jae
inc
mov
pop
or
xchg
sbb
divb
adcl
mov
fstpl
mov
mov
movsl
enter
inc
sub
shll
mov
cmp
mov
jae
fadd
push
out
push
xchg
mov
nop
aad
push
cld
jae
cmp
push
pusha
mov
cmp
dec
call
pop
pushf
clc
jns
test
dec
mov
lret
mov
mov
jns
xchg
jl
cmp
outsb
xor
inc
in
xor
stos
daa
add
push
push
pop
scas
stc
nop
test
push
xor
inc
jecxz
pop
scas
mov
cwtl
mov
cmp
cmc
repnz
cwtl
imul
out
add
loope
andl
pop
loopne
jnp
xor
ss
fisttpl
lods
mov
dec
cli
fs
ss
dec
cld
dec
scas
adc
hlt
movsb
dec
push
mov
mov
cli
int3
sbb
roll
stos
rol
in
cmpsb
scas
cmp
push
xchg
pop
ret
mov
scas
mov
jp
cmpsb
sarl
jno
jns
adc
mov
or
rcl
dec
push
mov
add
jl
outsb
xchg
mov
adc
bound
std
shl
bound
loope
xor
mov
insl
inc
into
mov
out
mov
pop
stos
pop
mov
sti
rorl
mov
pop
push
std
shrb
push
cmp
das
leave
leave
mov
push
mov
mov
cmp
bound
mov
mov
pushf
cld
mov
repnz
adc
xor
mov
int3
jns
push
jno
push
dec
fwait
notl
jae
mov
mov
lret
movsl
sbb
cmp
jg
aas
aaa
mov
data16
aam
mov
sbb
fwait
iret
or
or
nop
xor
aas
leave
cwtl
mov
test
jae
cmp
sti
push
dec
xor
mov
hlt
roll
shll
in
les
pop
inc
dec
mov
jp
out
xorl
jne
cmp
popl
inc
dec
cli
aam
push
js
mov
shll
lcall
jl
mov
dec
mov
lcall
ljmp
cmp
pop
cs
add
mov
push
add
inc
jae
shl
and
sahf
mov
repnz
int3
mov
xlat
sub
mov
inc
or
imul
adc
mov
mov
pushf
push
jbe
push
scas
sub
jbe
and
rorl
xor
bound
ret
mov
outsl
mov
in
pop
push
mov
lods
dec
mov
scas
xchg
mov
fwait
xor
scas
or
cmp
cmp
mov
sti
dec
iret
inc
mov
mov
int3
std
outsl
je
icebp
je
sbb
dec
das
cmpsl
or
and
jne
cltd
arpl
or
dec
cwtl
xlat
movb
jb
shll
mov
xchg
jg
and
sbb
fidivs
xor
and
sub
mov
adc
stc
cli
mov
cmp
sub
arpl
inc
inc
arpl
jmp
and
mov
jns
xchg
jecxz,pn
cmpsl
jb
in
test
or
pop
repz
je
jecxz
movsb
dec
or
cmp
pop
into
mov
shrb
xchg
cmp
in
stos
fadd
sbb
not
mov
xorb
or
jp
ss
in
cmp
aad
cltd
pop
and
xchg
push
cmp
shll
jg
ss
inc
std
iret
dec
sub
mov
pop
dec
or
push
in
aas
cmp
pop
leave
std
dec
rorl
jl
lods
lods
pushf
pop
dec
xlat
icebp
aam
adc
dec
mov
rcll
push
dec
or
jecxz
mov
clc
ret
pop
ficompl
pop
xor
shl
mov
add
mov
scas
push
jnp
aam
xor
movsb
inc
sub
aam
or
push
inc
scas
and
pop
cld
cli
add
and
push
mov
mov
ret
adc
mov
mov
repz
insb
sub
mov
jno
popl
or
orb
push
addr16
mov
int
push
fwait
shlw
mov
push
adc
and
sar
ss
jl
pusha
xor
rcl
insb
setnp
dec
lahf
cli
cmp
cltd
fsubs
pop
xchg
clc
mov
or
dec
scas
in
push
arpl
aas
mov
cld
adc
rolb
scas
add
mov
pop
scas
out
jbe,pn
adc
pop
loope
imul
xchg
dec
adc
aam
movsb
les
fisubl
loopne
mov
negl
jns
and
ret
scas
pop
dec
outsl
aam
imul
ss
jp
sbb
pop
hlt
pop
ljmp
push
dec
sub
dec
outsl
lahf
in
mov
in
into
imul
sub
xorb
bound
icebp
movsl
js
fcoml
outsl
fs
outsb
dec
dec
mov
xor
js
mov
push
xor
mov
mov
repz
scas
mov
push
mov
dec
adc
enter
loope
sub
xor
imul
inc
negb
xlat
loope
outsl
push
pushf
sbb
in
outsl
enter
and
dec
jecxz
dec
movsb
lds
jmp
aas
aaa
sbb
repnz
inc
leave
mov
aad
in
sbb
push
add
xchg
insb
aaa
dec
outsl
xchg
dec
jo
jmp
insl
mov
mov
pop
movsl
add
sbb
repnz
xor
lret
mov
cmp
mov
push
insb
into
dec
jle
sbb
xor
test
xchg
aad
dec
xchg
push
push
adc
lahf
test
in
inc
rcrb
pusha
xor
cmp
jno
jo
dec
je
fisubs
js
xor
xchg
aad
ljmp
xor
test
jle
push
test
mov
scas
sbb
aad
fisttpl
test
insl
mov
das
cmc
sub
jo
push
sbb
icebp
sub
fstpt
mov
pop
adc
mov
loop
lods
ret
inc
imul
jle
mov
mov
mov
scas
add
dec
out
aaa
shll
jle
jg
aas
ljmp
fnstenv
mov
push
hlt
fsts
hlt
in
sub
adc
fimull
orb
push
cmc
sub
movsb
cmpsb
xor
dec
xor
push
mov
inc
mov
xor
and
loope
xchg
fidivrs
mov
mov
cmp
mov
cmpl
sbb
push
outsl
push
mov
xor
dec
cmp
mov
ficoms
repz
aad
cmp
sub
or
out
outsl
push
stos
enter
jae
bound
dec
insb
mov
int
scas
jnp
jno
pop
je
stc
lret
aaa
pop
je
jg
dec
cld
cmpsb
pop
dec
out
shl
xchg
leave
xchg
push
lods
sbb
adc
test
sub
jge
dec
jle
xchg
cmp
lcall
mov
lea
enter
inc
jecxz
jne
ret
xor
mov
cmp
lret
mulb
dec
jbe
inc
sub
dec
or
cmpsl
xchg
out
rep
mov
dec
ret
adc
xor
aad
adc
fnsave
loopne
rcll
mov
es
jb
jecxz
cmp
jle
pop
sbb
bound
push
dec
jge
fcoml
mov
adc
sbb
sbb
inc
lahf
jp
sub
stos
xor
icebp
mov
sbb
pop
or
and
xor
dec
insb
enter
jae
sbb
push
push
mov
mov
push
cmpsl
xor
stos
inc
mov
cli
pushf
xlat
and
push
and
loop
std
lahf
aas
movsl
mov
out
or
insl
sbb
sub
and
aaa
sbb
mov
push
add
nop
mov
cmp
fiaddl
adc
mov
jge
lock
hlt
inc
and
cmp
jbe
in
mov
jle
push
jbe
add
xor
pusha
xchg
outsb
insl
xor
sbb
jecxz
push
mov
dec
pop
scas
fsubrs
sbb
pusha
add
push
ja
inc
add
cli
push
pop
push
inc
and
dec
movsb
data16
orl
cwtl
imull
pop
push
pushl
xchg
jbe
scas
scas
outsb
popa
testl
mov
jmp
and
sub
test
ret
fcomi
das
jmp
jb
out
push
scas
jb
loopne
dec
add
mov
xorb
std
sbb
rcl
iret
jg
add
xchg
fnsave
jnp
pop
push
sbb
xchg
leave
loope
push
stc
xchg
jecxz
push
dec
push
dec
xor
mov
dec
mov
aad
sbb
cltd
xlat
xchg
push
mov
fcmovne
ss
dec
sub
imul
je
sub
adc
or
in
sbb
shlb
clc
pop
sahf
sahf
rcl
out
adcl
push
cmp
mov
and
js
push
sti
aaa
jge
call
rcrb
sti
sub
les
mov
repnz
xchg
ja
cmc
dec
dec
cwtl
repnz
pop
hlt
in
test
sbb
sbb
mov
push
jp
das
mov
jecxz
mov
mov
adc
add
cwtl
xchg
mov
std
pusha
push
xchg
rorb
sarl
js
into
add
adc
jmp
pop
adc
xchg
or
icebp
xchg
xchg
shll
fs
idivl
and
imul
add
iret
in
push
outsb
xor
ret
xchg
iret
xor
add
aas
rorl
scas
int
hlt
xor
repnz
push
pop
repnz
arpl
jne
imul
clc
push
int3
rclb
xchg
sbb
dec
cmp
outsb
push
enter
inc
sbb
out
scas
lds
xlat
jne
popa
insl
es
fistpll
and
sbb
add
fsubl
fldcw
fists
inc
repnz
mov
cmc
ficoml
dec
mov
pushf
pop
sbb
mov
jp
loope
into
mov
scas
negl
ss
std
call
push
jmp
imul
sbb
or
cmp
inc
mov
sub
dec
mov
pop
sbb
popa
aam
jno
pop
dec
rcll
call
pop
pop
xchg
xor
dec
mov
arpl
inc
inc
mov
sbb
sbb
repz
fmul
inc
je
dec
lretw
imul
aaa
fucomi
xor
cmp
xor
dec
jmp
xor
stos
gs
xor
xchg
insb
scas
sbb
aas
mov
outsl
sti
lods
add
loopne
clc
xor
fidivrl
xor
cltd
pop
and
lret
pop
mov
push
sti
xchg
cwtl
xchg
imul
ret
stc
aam
inc
mov
sbb
pop
pop
mov
insb
insl
jp
std
lock
fcoms
push
movb
mov
push
insb
xchg
or
push
adc
jno
roll
pop
hlt
mov
push
jb
adc
sbb
pop
outsl
mov
xor
push
out
mov
cmpsb
xor
out
mov
into
add
jae
mov
mov
mov
loop
jecxz
repz
ss
inc
push
xor
mov
insb
cltd
andb
movsl
mov
push
jae
std
inc
lret
enter
shlb
inc
mov
mov
clc
mov
pop
sub
fldcw
dec
push
dec
fs
jbe
mov
aam
mov
and
dec
adc
fs
shlb
cmp
arpl
cmp
pop
jecxz
mov
push
mov
lock
xor
jbe
in
fisubrl
xchg
mov
adc
je
adc
pop
dec
rcrl
loop
mov
shl
mov
shll
jp
je
insl
sbb
rclb
xchg
xchg
xor
lcall
push
dec
jbe
dec
imul
rcrl
dec
test
vmread
das
push
mov
mov
pusha
wbinvd
fdivrl
and
aaa
lea
leave
das
mov
ret
pop
mov
adc
cmp
and
mull
xor
shlb
cmp
arpl
adc
fs
movsb
lds
inc
fs
inc
jbe
out
inc
dec
orl
ret
xorl
and
cmpsb
xor
mov
push
add
sbbb
lret
inc
jle
inc
dec
or
fidivl
mov
cmp
movsb
mov
mov
jl
cld
push
lods
roll
jae
popf
pop
cld
hlt
and
loop
clc
and
aaa
inc
hlt
fwait
in
test
xchg
aas
jp
fs
inc
adc
insb
pop
jp
inc
add
fldenv
rcl
adc
loop
int3
aas
jp
push
fs
jbe
scas
jnp
int3
into
jecxz
in
in
mov
jg
add
shll
rcrb
sti
mov
sbb
aad
pop
arpl
add
pusha
loopne
jae
and
outsl
mov
aaa
fwait
inc
es
push
push
or
dec
clc
ja
decb
cmp
sbb
ja
movsl
cmp
push
ds
mov
cmp
mov
ret
xchg
xor
fcmovbe
clc
dec
cmp
pop
inc
jno
xchg
in
cmp
fwait
xor
or
mov
loopne
scas
cmp
mov
addr16
cmp
jnp
xchg
add
imulb
xchg
dec
jne
vmovdqa
mov
inc
mov
sub
shlb
sbb
imul
xor
sbb
sub
bound
cld
push
adc
lcall
icebp
arpl
sbb
sbb
push
mov
mov
sti
xchg
push
ret
dec
jge
addr16
jbe
je
pushf
push
push
lock
cmc
xor
daa
in
jl
jg
es
mov
aad
and
push
lret
test
pop
stc
push
pop
sub
lods
cmp
loopne
pop
mov
jo
rcrb
pushf
repnz
and
and
inc
push
loopne
lea
jge
jecxz
dec
pop
mov
mov
jb
cltd
cli
xor
jecxz
and
push
cmp
pop
cmpl
push
xor
push
lahf
fisttps
je
scas
js
sti
out
xchg
push
dec
jb
repnz
sbb
sub
adc
arpl
rclb
fwait
ja
pusha
std
pop
pop
sahf
nop
xor
arpl
les
jb
dec
stos
scas
insl
in
fistpll
jne
inc
and
pop
repnz
scas
dec
dec
outsb
xor
leave
dec
mov
jne
sahf
cmpsb
xchg
mov
pop
mov
mov
cmp
dec
notl
and
push
fdivp
mov
pushf
fwait
pushl
test
adc
js
mov
cmp
aaa
xlat
add
mov
pop
xchg
enter
hlt
and
mov
push
xor
int3
cmp
insl
mov
lret
mov
pop
ret
ret
int
rolb
scas
pop
hlt
mov
add
std
mov
and
stc
sub
mov
int
push
or
ja
in
cltd
mov
mov
adc
adc
outsl
aaa
daa
lcall
in
fistpll
aad
std
mov
jge
add
dec
adc
and
xchg
push
dec
shrl
mov
mov
and
sub
xchg
sub
arpl
jbe
dec
xor
int3
cmp
iret
fs
outsl
stos
leave
xor
int3
pop
dec
into
out
fimull
out
or
movb
mov
stos
add
cmpsl
jl
mov
sarb
push
arpl
adc
add
aad
in
sbb
xchg
imul
fs
pushf
mov
sbb
xchg
cmp
mov
loopne
ret
dec
xor
movsb
outsl
in
insb
cmp
or
outsl
cmp
pop
mov
jecxz
xlat
outsl
xchg
adc
rcll
inc
mov
dec
sub
insl
out
mov
inc
je
aas
or
fcomp
cld
lret
int3
inc
mov
inc
push
mov
dec
dec
shlb
jecxz
sarl
nop
dec
mov
mov
add
cmpl
inc
ja
inc
shlb
xor
cltd
fmul
shrl
loope
push
dec
sub
mov
dec
cmpsl
dec
dec
frstor
adc
push
bnd
cs
jge
rorb
fmulp
mov
cmp
ss
es
test
xlat
add
jb
jnp
and
je
sbb
add
loope
and
mov
mov
in
push
and
faddl
pop
mov
sub
cld
push
popf
imul
sbb
cmp
loope
xor
dec
push
and
cmp
cmp
scas
or
xchg
push
add
pushf
shll
pop
and
jno
ljmp
dec
nop
mov
test
adc
sub
mov
sti
in
gs
mov
cli
push
loopne
je
movl
mov
mov
mov
clc
repnz
jbe
nop
pop
jg
shl
jmp
adc
jb
add
pop
cmp
inc
icebp
mov
jg
js
int3
xlat
ds
fisttpll
fs
jbe
mov
ss
push
test
sub
push
mov
dec
fidivrl
jecxz
dec
mull
jg
cmp
sub
mov
scas
mov
cmp
movb
xchg
dec
shll
mov
jnp
mov
fisubrs
cmpsb
xchg
jae
outsb
mov
jl
int
sbb
lretw
xchg
lahf
imul
xchg
cmp
sbb
ds
adcb
dec
mov
enter
mov
sti
push
push
push
push
shl
push
pop
jb
pop
imul
popf
mov
push
repz
mov
mov
lods
cwtl
pushf
jecxz
rcrb
xchg
arpl
bound
push
or
dec
pop
adc
mov
clc
shrb
jnp
mov
jg
jge
fwait
scas
cltd
inc
xor
jp
test
mov
lods
scas
jecxz
jb
sub
mov
push
loopne
std
bound
jnp
dec
jne
dec
call
ret
mov
or
es
je
adcb
fdivl
test
pop
and
insb
add
movsb
scas
cmp
inc
shlb
and
fs
loopne
push
fidivs
fwait
std
cltd
or
inc
push
clc
pop
and
xchg
sar
aaa
dec
pusha
enter
or
xor
stos
lods
rorb
xor
rcrb
xchg
mov
push
inc
in
scas
jae
jecxz
dec
xor
sbb
pusha
mov
cli
dec
mov
mov
ds
mov
adc
loope
adc
enter
fnstsw
pop
fnstsw
jecxz
rcl
cltd
ret
addl
adc
push
xchg
ficompl
inc
loope
mov
repz
push
sbb
clc
ljmp
mov
xchg
pop
xor
jp
lods
dec
push
push
mov
stos
push
mov
and
enter
in
mov
mov
scas
pop
insl
add
retw
sub
test
enter
adc
or
pushf
pop
xor
ss
mov
adc
inc
sbb
pop
mov
cmp
lcall
xor
mov
cmpsl
je
inc
loopne
je
pushf
dec
mov
mov
or
rcl
cs
pusha
jno,pn
js
xchg
xchg
dec
xchg
fsts
cmp
shrl
and
rol
mov
inc
stc
fbstp
mov
cmc
andl
xorb
xor
dec
or
inc
and
push
cwtl
xor
xchg
imul
cmp
or
sbb
inc
dec
arpl
inc
mov
ljmp
cmp
lret
jae
xor
lret
arpl
mov
mov
gs
or
gs
ja
int
push
mov
je
add
jecxz
xchg
scas
movsl
mov
mov
rcrb
in
jnp
cs
int
sarb
add
jmp
pop
mov
or
cmp
add
xor
data16
dec
jnp
cmp
loop
popf
mov
jo
push
xchg
mov
rcll
fs
out
cmp
jp
push
jg
das
dec
push
xchg
and
sub
mov
sbb
pop
mov
inc
iret
in
pop
cli
push
inc
rcll
js
xor
das
cmp
add
cmp
adc
mov
inc
dec
xchg
jae
sarb
xchg
pop
loopne
mov
out
sbb
scas
orb
push
and
add
inc
leave
cmp
cmp
mov
cmp
adc
int3
repnz
inc
mov
sahf
aas
movsb
xor
mov
ss
leave
fldenv
add
jnp
fucomip
outsb
loop
sub
pop
dec
mov
bound
sbb
mov
fwait
jo
sub
adc
notl
stos
cs
ficoml
and
push
mov
jno
data16
mov
xchg
pop
hlt
adc
sbb
lcall
aas
push
pop
adcl
push
inc
push
testb
cmp
inc
test
in
cmpsb
push
stc
repnz
popa
cmc
fs
or
jmp
out
mov
push
mov
sbb
das
ss
mov
xor
popf
cmp
je
inc
rcrl
rcrl
cli
jbe
jp
popa
bound
jb
adc
mov
jo
fdivl
fstps
mov
shll
js
mov
jge
mov
adc
jp
ret
outsl
mov
iret
cmp
adc
lret
push
cwtl
call
mov
push
mov
sahf
stc
fsts
std
adc
je
push
es
pop
ficomps
inc
or
repnz
fwait
repz
sti
add
repnz
addr16
je
arpl
lods
or
mov
adcl
cmpl
jo
popa
fwait
lds
jnp
lea
repnz
in
mov
fs
in
or
inc
das
arpl
sbb
xor
ret
hlt
aad
popa
sbb
sti
cmc
cmp
ljmp
mov
fldt
or
movsb
xchg
mov
sbb
outsb
push
cmp
add
ret
loope
int
xor
lods
btc
and
push
mov
mov
sub
mov
push
insl
mov
sbb
xchg
sub
dec
xor
xor
mov
insl
mull
sbb
or
mov
adcb
fisubrl
mov
fucomi
dec
mov
sbb
dec
jns
out
mov
fwait
xor
pushf
lcall
mov
movsl
out
mov
ja
mov
mov
fs
mov
jae
fildl
loopne
xchg
arpl
jl
inc
ret
sub
pop
lret
jne
ret
push
mov
xchg
or
je
mov
sbb
loop
mov
mov
sbb
adc
add
sbb
mov
sarb
loope
outsl
cmp
hlt
cmp
xchg
aad
inc
mov
loopne
cwtl
cmp
scas
pop
mov
jp
mov
inc
jmp
mov
xchg
fwait
sbb
jle
mov
divb
clc
scas
je
adc
test
push
or
test
xchg
je
add
in
xchg
sbb
mov
push
cltd
mov
inc
scas
push
addr16
rcrl
mov
mov
or
imul
lock
fcomi
cmp
push
push
mov
lcall
sti
jle
cltd
aad
aas
cmpsl
pop
mov
jb
mov
sbb
pop
jecxz
mov
out
and
cwtl
pop
sbb
ss
pop
dec
mov
mov
sub
mov
adc
xor
iret
sahf
int
out
pop
xchg
cmc
xchg
dec
dec
shlb
lock
xchg
pushf
cmc
jg
scas
js
lock
test
xchg
xor
into
mov
adc
arpl
and
mov
dec
add
sti
push
adc
sbb
inc
and
mov
pushf
or
rcrl
xor
push
xchg
mov
dec
jecxz
in
hlt
into
rcr
sub
pop
mov
dec
cmp
add
sbb
imulb
fwait
add
sub
fucom
out
cmp
xor
leave
xchg
jmp
enter
pop
jbe
mov
xchg
int3
in
loopne
dec
es
mov
or
call
mov
imul
outsl
and
cmp
mov
xor
std
loop
clc
lss
sbb
mov
hlt
iret
jge
mov
loopne
cmp
lahf
outsb
adc
dec
cmp
xorl
ja
popf
and
cmp
aas
jmp
arpl
jmp
or
fadds
aaa
cltd
xor
inc
mov
out
mov
sub
xchg
dec
addr16
mov
pop
push
cmp
shl
dec
inc
repz
jecxz
pop
loop
mov
sahf
cmp
push
xchg
jl
push
adc
pop
mov
pop
xchg
adc
daa
lcall
mov
jae
into
rclb
xorl
mov
sub
jecxz
xchg
mov
jno
fdivr
rclb
out
cmp
lret
ljmp
sbb
addr16
repnz
dec
mov
xchg
push
cmpsl
mov
andb
xchg
in
lret
je,pt
pop
dec
roll
rcrb
jmp
mov
in
iret
mov
into
cmpsl
xor
inc
data16
arpl
fnstsw
or
dec
mov
push
sbb
sub
mov
aas
mov
ljmp
loope
jnp
sub
or
cmp
mov
mov
loopne
xchg
mov
repnz
or
int
gs
in
out
add
dec
jnp
loop
or
sbb
sub
repnz
lahf
xor
jb
js
mov
aaa
push
inc
in
and
or
pusha
xor
push
icebp
shll
out
test
sbb
sub
out
pusha
fidivs
subb
loopne
aam
arpl
push
xchg
push
int3
xchg
hlt
cmp
adc
mov
inc
xchg
dec
mov
test
arpl
mov
xor
mov
out
push
pop
cmp
xchg
mov
cmp
xor
iret
adc
ds
pop
aam
and
mov
cmp
cmp
je
in
idivl
jl
jb
adc
jp
daa
test
mov
dec
lahf
adc
push
xchg
mov
jno
lea
push
rcrl
pop
aam
inc
pop
dec
call
mov
lock
pop
clc
scas
fwait
adc
cmp
inc
adc
sarb
xchg
inc
push
stos
ret
cmp
push
push
pop
loop
pop
pushf
stos
mov
mov
sbb
inc
arpl
ret
cmp
jecxz
les
jg
xchg
sbb
pop
jnp
shlb
ret
stc
and
lock
sahf
fbstp
xchg
mov
je
sbb
pop
js
sbb
cmp
push
call
cmp
cmp
aam
mov
jge
jmp
mov
push
or
dec
xchg
pop
cmp
jmp
sub
push
cmp
lcall
adc
sub
test
push
jecxz
jb
jbe
add
jl
mov
fistps
int3
push
fdivl
inc
shlb
sarl
dec
jge
mov
xlat
add
fstps
inc
adc
ds
pop
mov
mov
inc
mov
add
cwtl
out
xchg
xlat
or
jle
jecxz
popf
pop
orb
xor
std
dec
fildl
push
scas
repnz
jnp
mov
cmpsb
lahf
adcb
mov
sbb
pop
mov
xor
xorl
xchg
jae
xchg
inc
mov
push
sarl
cmp
mov
jmp
and
cli
xchg
jo
add
mov
pushf
je
fdiv
add
jbe
mov
ret
jns
cmp
xchg
push
mov
mov
cmpb
push
int3
mov
insl
insb
data16
mov
jecxz
mov
cli
aam
fmulp
xor
in
pusha
inc
outsb
arpl
or
dec
xor
popf
jmp
lock
push
adc
xor
dec
bound
pusha
jle
adc
jge
lods
jl
dec
jp
aam
push
insb
jmp
sbb
cmp
std
fs
mov
call
mov
rorl
dec
mov
data16
insb
jbe
ret
fwait
sub
repz
aas
sbb
inc
repz
jo
ljmp
fldt
dec
cltd
or
das
mov
push
ret
fstps
push
shlb
andb
scas
add
xchg
pop
xchg
movsl
out
pop
adc
insb
jnp
jbe
sbb
pop
addr16
aaa
call
sbb
neg
cmp
cmp
ret
ds
xor
add
mov
xlat
dec
movsl
mov
pop
xchg
loopne
dec
jnp
xorl
cmp
dec
or
cld
adc
fiaddl
push
pop
cmp
adc
mov
insl
aaa
shlb
mov
je
jecxz
jb
mov
fcmovbe
sbb
dec
push
push
pop
jno
push
int
push
cmp
and
popa
xor
in
out
add
movsb
and
xchg
popa
loopne
stos
push
outsb
sbb
nop
hlt
or
cmp
andl
loopne
repz
iret
jp
js
out
int
inc
sbb
xchg
outsl
cs
jge
push
xchg
jne
dec
or
pushf
push
jae
sti
inc
jmp
dec
jle
mov
cmp
xchg
add
fstl
ret
and
orl
or
rep
or
cld
leave
inc
out
dec
fimuls
pop
cwtl
arpl
xchg
lret
pusha
pop
lock
cmp
out
add
cltd
fmuls
and
ds
push
mov
mov
aaa
push
cmp
sbb
shrb
addb
rorl
and
cmp
fldcw
mov
leave
xlat
stc
pop
inc
jnp
xchg
xor
mov
insl
daa
xor
into
out
loope
orb
lock
dec
cmp
mov
push
loope
jp
xor
lret
mov
mov
push
roll
sub
insb
push
loopne
mov
les
scas
ret
daa
ret
pop
adc
outsl
mov
and
jl
sbb
jmp
push
arpl
add
leave
jg
cmp
jbe
shll
aas
or
add
dec
dec
cmp
lret
mov
inc
push
loopne
dec
in
add
testb
fiadds
dec
subb
push
adc
dec
cmp
jl
jmp
adc
scas
loope
push
and
lds
dec
insl
cli
cmp
fcomps
mov
test
push
push
ud1
sbb
rclb
cmp
dec
push
mov
jbe
pop
cld
push
sub
cmp
je
dec
xor
mov
movsb
pop
into
xor
loopne
cmp
stos
pop
loope
insb
cwtl
inc
cmp
inc
xorb
arpl
mov
repnz
cld
stos
xchg
sbb
mov
pop
xor
mov
loope
cmpsb
icebp
into
pop
outsl
clc
lret
push
pushf
mov
addr16
add
sub
std
xchg
sbb
adc
scas
pusha
cmp
mov
pop
add
jns
jp
call
jp
xchg
mov
adc
mov
or
les
lds
dec
repnz
fiaddl
test
loope
int3
push
xor
cmp
repnz
sbb
mov
std
mov
mov
dec
inc
inc
arpl
mov
and
mul
dec
jg
outsb
mov
fsubrl
lahf
fldenv
movsl
je
sbb
fdiv
push
test
jge
je
out
sub
repnz
mov
or
jns
push
sub
mov
adc
scas
sbb
lret
mov
pushf
pusha
cmpl
jle
loopne
push
into
mov
adc
ss
sub
fnstcw
xorb
jb
rorl
or
mov
ja
push
mov
inc
lret
add
pop
cwtl
cmp
push
mov
out
sbb
cmp
adc
mov
xlat
xor
xchg
push
jo
movsl
test
push
jp
xlat
addr16
rorb
icebp
pavgw
inc
rol
mov
or
mov
arpl
call
mov
or
les
rcrl
popf
xor
xor
orb
ret
dec
add
stos
mov
pop
jg
cmp
mov
sti
shll
fs
xchg
bound
pop
mov
aas
dec
push
cmp
pushf
sub
add
shr
jns
in
iret
lea
pusha
es
lea
pop
aaa
pop
adc
rcr
fnsave
inc
xor
mov
jb
jle
shlb
ficoms
nop
inc
xchg
push
cmp
mov
mov
lfs
imul
sbb
or
push
xchg
lcall
aaa
pop
pushf
cmpsl
xchg
ss
mov
fwait
leave
or
push
mov
nop
cmp
xor
test
pop
mov
scas
adc
jg
xchg
loope
lcall
es
cmp
cmp
loop
data16
imul
pushf
mov
aaa
mov
push
testl
mov
pop
adc
lods
cmpsb
arpl
aas
xor
dec
push
sbb
out
test
push
xchg
sbb
in
sub
xchg
shrl
sbb
sbb
xchg
sub
dec
js
and
sub
das
call
mov
inc
mov
stos
xchg
adc
xor
in
shl
mov
rorl
push
mov
fisubs
cmpsb
mov
inc
cmpsb
mov
xchg
xor
add
jge
pop
mov
das
xchg
andl
cbtw
leave
fidivrl
testl
push
int3
mulb
pop
mov
add
lret
inc
in
jecxz
dec
push
adc
ret
iret
in
add
fmull
pop
sub
pop
cmp
xor
dec
xor
cmpsb
pushf
lea
jl
hlt
data16
scas
adc
or
or
mov
cli
mov
lea
cld
mov
inc
mov
add
popf
mov
loopne
mov
cmp
vrsqrtss
adc
dec
jnp
pop
iret
imul
std
adc
mov
pop
ljmp
mov
adc
ss
dec
jp
loopne
out
in
hlt
dec
enter
xchg
and
jb
mov
mov
mov
es
sub
cmp
scas
cmp
and
fnsave
xchg
inc
repnz
jge
rorl
sarb
ljmp
xor
lahf
xor
lret
cmp
pop
data16
nop
movsb
shr
adc
adc
pop
jae
add
xchg
add
inc
push
hlt
push
cld
out
pop
ss
adc
arpl
into
enter
test
in
add
outsb
jno
sbb
cld
shlb
mov
xchg
mov
int3
movsl
sbb
pop
sarl
dec
mov
adc
test
and
int
ja
je
sbb
xchg
mov
loope
push
in
jae
add
sbb
arpl
dec
scas
lods
dec
push
and
push
cli
adc
add
add
scas
aas
call
sub
je
rorb
gs
push
or
add
repnz
dec
mov
dec
push
mov
divl
xchg
and
inc
adc
andb
dec
ret
dec
leave
imul
test
inc
scas
add
jge
addps
sbb
out
mov
xchg
add
fimuls
mov
mov
mov
push
sub
lret
cli
popf
jns
mov
clc
loopne
cmp
divl
jo
scas
push
in
and
and
scas
mov
fdivl
loopne
das
jbe
je
enter
fidivl
fisubs
out
lahf
or
arpl
and
pop
mov
push
xchg
outsl
and
pop
das
dec
shrl
mov
outsl
pusha
shll
push
cmp
cmp
jp
push
ds
inc
jecxz
imul
loopne
mov
mov
gs
repz
xchg
cld
leave
fs
adc
sub
mov
push
repz
cltd
mov
rclb
jmp
pop
sub
mov
sbb
xchg
sub
inc
dec
inc
scas
pop
mov
xchg
scas
divl
sub
push
not
mov
dec
inc
xchg
jae
xchg
dec
jl
rcrb
cmp
mov
push
push
leave
pusha
add
enter
aad
scas
xchg
daa
gs
ja
dec
cmp
jl
stos
mov
lods
fmuls
outsb
fidivs
repnz
push
rol
mov
mov
dec
inc
mov
insb
rclb
shl
fisttpll
scas
iret
push
mov
push
outsb
pop
push
popf
xor
repz
mov
scas
jb
inc
js
gs
cmpsb
in
xlat
or
xchg
sub
xchg
std
popf
or
cmc
mov
sbb
lock
jb
insb
sub
push
loope
int
sti
mov
scas
sti
jnp
aad
rcrl
and
ljmp
cli
aaa
imul
and
pop
inc
pusha
sti
sub
shl
aas
mov
pop
jo
xor
inc
inc
inc
in
xchg
arpl
mov
mov
and
scas
sahf
push
cmp
or
dec
notl
or
jo
sub
dec
and
pop
push
maxps
cmp
mov
fwait
push
movsl
adcl
mov
je
ja
jecxz
dec
scas
jne
inc
out
inc
bsr
xor
lock
mov
rsm
outsb
mov
mov
mov
adc
jecxz
stc
add
repnz
rorb
and
or
lret
jb
dec
jb
jg
jb
pop
jno
pop
iret
fcoms
xchg
inc
ds
xchg
push
repnz
xchg
adc
lods
cmp
cwtl
fnstenv
xor
pushf
loopne
ljmp
push
roll
loopne
dec
cs
cs
xor
adc
push
lret
jp
sub
ja
or
xchg
shll
jns
sbbb
andb
mov
cs
std
mov
clc
add
inc
repnz
in
icebp
js
rol
mov
mov
outsl
add
and
cmp
fchs
xchg
fnstcw
imul
scas
jmp
pusha
shrl
lahf
cmp
sub
push
hlt
clc
into
pop
sbb
ljmp
imul
loopne
dec
mov
pop
sbb
nop
cmp
xchg
ret
int
adc
adc
pop
dec
inc
fsubrl
es
jne
cltd
cld
xor
sub
jp
or
bnd
cmp
into
cltd
push
iret
pop
push
out
and
ror
pop
mov
or
mov
pop
xor
outsl
insb
pop
jp
shrb
xchg
inc
cmpl
jmp
fdivrs
cli
xchg
pop
pop
push
scas
jg
xchg
adc
fidivrl
jnp
lods
mov
push
xor
adc
cmpl
dec
dec
dec
push
inc
fidivrl
cmp
pop
add
shll
dec
add
push
mov
or
mov
jecxz
out
push
loopne
inc
ja
mov
sbb
sbb
mov
xor
jmp
inc
cmpsl
mov
push
in
mov
mov
stos
inc
ja
xchg
pop
xor
lret
je
adc
jns
movsl
adc
cld
rol
add
xchg
or
adc
cmp
push
sbbl
cmc
jl
mov
inc
xor
pop
xor
push
shlb
fstl
rcrb
ret
jbe
mov
inc
loope
push
sub
jae
mov
ja
mov
pushf
cli
xchg
je
jae
push
jbe
xchg
scas
cmp
sbb
hlt
sbb
jle
xchg
mov
cltd
mov
adc
mov
push
sti
push
inc
in
adc
repnz
mov
jo
mov
sbb
int3
add
rolb
push
bound
xchg
sub
ss
add
fiadds
mov
push
push
mov
xchg
lret
filds
lcall
pop
sti
push
cmp
dec
jg
xlat
jecxz
cld
sbb
add
shlb
or
mov
leave
std
dec
arpl
leave
dec
sub
and
data16
sbb
cmpsb
jg
mov
es
xor
add
mov
push
dec
shrb
loopne
fistl
test
es
dec
xchg
adc
ja
lcall
or
test
add
cmp
into
jb
scas
xchg
leave
cmp
xchg
push
into
xor
dec
bound
imul
sub
sti
scas
mov
cmp
xchg
mov
repz
dec
ss
cmp
inc
std
mov
xchg
imul
loop
arpl
rorl
mov
sbbl
xchg
dec
push
cmp
pop
mov
test
ds
fists
ja
pop
mov
loopne
sub
push
xchg
mov
gs
dec
cmp
lea
mov
xchg
push
jmp
push
mov
add
loop
out
inc
int3
xchg
test
sub
iret
enter
pop
popf
mov
cmc
mov
pop
pop
loop
push
xchg
dec
stc
outsl
mov
and
adc
imul
xchg
push
dec
movsb
inc
mov
or
fs
mov
ja
js
xor
aam
mov
dec
arpl
shlb
push
xchg
mov
cmc
jecxz
cmp
loopne
cwtl
dec
mov
jg
xchg
arpl
sbb
mov
push
mov
inc
fsubl
push
xchg
xchg
mov
imul
xor
inc
mov
scas
ja
fld
xlat
mov
jp
xor
xor
ficomps
or
xor
jo
outsb
fdiv
cld
add
or
loope
iret
jne
int
push
cltd
or
lret
xchg
jle
loop
xchg
orps
outsl
pop
inc
pop
bound
fistps
xchg
jg
outsl
fidivrl
std
mov
cs
jo
pop
xor
or
mov
pop
aaa
and
std
cmp
adc
test
andl
pop
ret
pop
inc
push
sti
lcall
jp
int
arpl
into
sbbb
jno
mov
xchg
ja
cmp
and
inc
cli
push
mov
or
test
int
mov
ds
scas
fistpl
sub
fstpl
std
mov
adc
mov
mov
xchg
lods
adc
fisubrs
mov
jecxz
pop
jb
ds
sbbl
hlt
sbb
dec
popa
mov
and
shll
push
loop
scas
dec
mov
fs
cmp
ret
cmc
ret
sbb
lea
mov
push
push
mov
mov
push
scas
cld
push
hlt
inc
xorb
aad
shll
es
lret
jp
loopne
dec
inc
sahf
push
mov
sub
shlb
fstl
sbb
sub
test
mov
mov
cld
sbb
xchg
or
in
loop
ds
push
dec
sbbb
test
cmp
scas
or
outsl
gs
xor
shrb
enter
cld
sbb
mov
outsl
out
mov
sarl
cmc
and
rcl
mov
mov
and
mov
sub
mov
sbbl
cmp
rolb
add
xchg
mov
loopne
cld
inc
aaa
pop
fsubr
pop
loopne,pn
or
sbb
xacquire
cmp
loope
fs
mov
aad
jo
or
in
popa
pop
jg
adc
push
test
sbb
mov
xorb
shrb
jmp
cmp
sub
xor
mov
and
ret
jl
pop
shl
loopne
cmpl
pop
mov
adc
negb
arpl
dec
mov
mov
push
in
mov
mov
js
aam
testl
shl
add
stc
iret
dec
jecxz
aaa
jns
sub
pop
xor
ret
ret
iret
imul
jb
push
xchg
push
nop
ficomps
mov
pusha
bound
in
or
loopne
sbb
add
fidivs
jo
aad
inc
cld
adc
jno
hlt
aas
shl
addb
in
outsb
jle
flds
cs
xchg
push
aaa
lsl
lock
rcrl
ds
loopne
adc
inc
adc
insl
data16
cmp
cmp
inc
lahf
push
sbb
xchg
add
sub
cmp
lds
out
add
fwait
leave
mov
mov
mov
mov
loopne
push
jbe
and
add
push
sbb
sbb
dec
dec
and
mov
mov
cmp
dec
scas
jmp
into
dec
push
push
push
mov
cmp
xchg
imulb
sbbl
jg
mov
inc
and
mov
test
lcall
adc
bound
mov
mov
dec
cltd
fcomi
je
es
es
movsb
inc
hlt
rolb
adc
sub
pop
sbb
hlt
dec
xchg
fcmovbe
inc
repz
repnz
sub
addb
jne
mov
xlat
fwait
mov
pushf
pop
int3
cmp
jbe
push
test
mov
repz
repnz
ja
std
ss
mov
xchg
mov
popa
add
outsl
movsl
pop
jg
mov
push
clc
cmpsl
mov
dec
mov
in
fwait
gs
push
test
clc
ret
pop
dec
jecxz
adc
dec
data16
pop
mov
sbbb
cmp
adc
inc
dec
inc
and
outsl
sahf
sub
add
jae
dec
and
out
push
hlt
jle
mov
rorl
sub
fs
test
push
arpl
in
enter
call
jg
jbe
or
mov
scas
push
aad
daa
push
ss
inc
int
dec
fcoms
sub
or
or
and
lods
iret
daa
fstpl
insb
mov
subl
and
sbb
push
test
mov
or
test
fs
xchg
or
fimuls
int3
xor
imul
pop
pop
mov
mov
mov
jecxz
loop
aaa
shll
sarl
fwait
ret
push
mov
jns,pn
and
loop
cld
jecxz
loop
xor
ret
mov
push
ret
mov
sub
sahf
sub
mov
mov
sbb
leave
push
inc
mov
mov
jbe
mov
xchg
jne
dec
jp
movb
sbb
add
mov
gs
or
jg
jo
pop
xlat
xor
cltd
mov
push
mov
aad
jmp
mov
cmpsl
gs
xor
cltd
mov
cmc
gs
push
xor
mov
dec
mov
push
fsubs
or
aam
fisubrl
dec
push
test
push
xor
jb
hlt
add
push
mov
jnp
lret
jbe
aad
cld
pop
xchg
bound
mov
xchg
dec
jbe
lods
xor
out
xor
xor
jae
mov
jb
xchg
ljmp
mov
xor
scas
xor
mov
push
lods
add
lcall
mov
ja
xor
lcall
xchg
imul
mov
cmp
mov
push
inc
add
inc
pushf
xor
inc
mov
push
aas
add
out
mov
push
cmp
cmp
mov
xor
sub
xor
push
inc
ret
rorl
push
pop
xor
hlt
call
mov
ret
xor
adcb
cmovnp
mov
dec
mov
ret
push
inc
xor
dec
mov
hlt
push
je
std
fnstsw
in
loope
mov
cltd
sarb
fiaddl
mov
add
cmp
fiaddl
aas
mov
mov
mov
mov
fs
inc
mov
mov
xor
into
sarl
mov
pusha
mov
mov
bound
outsl
add
add
pusha
sub
adc
popf
fisubrl
adc
inc
push
pop
mov
dec
cmp
sbb
scas
daa
jb
jae
ret
pop
mov
and
loope
xchg
cmp
push
sub
jb
sub
jb
mov
scas
jo
xchg
sbb
xor
xor
or
cmpsb
mov
bound
inc
and
je
or
inc
and
cmc
add
push
xchg
inc
cltd
sub
cmc
mov
lods
pop
xchg
insb
icebp
cli
arpl
xor
jp
int3
cmc
subl
lock
and
jp
jb
outsl
das
les
mov
jg
inc
mov
inc
fdivrs
pushf
cmp
notl
mov
mov
pusha
aaa
pushf
aad
jns
in
out
mov
jmp
xchg
fs
xor
pop
jb
push
inc
xchg
push
aaa
xchg
dec
enter
cs
lahf
adc
inc
xchg
pop
insb
dec
mov
inc
inc
shlb
and
pop
test
int
cmp
mov
aaa
xlat
or
mov
jb
inc
sbb
std
int3
push
arpl
cmp
jecxz
cli
xor
pop
pusha
or
pusha
fucomi
mov
dec
adc
mov
jg
xchg
mov
push
xchg
mov
jecxz
mov
xchg
push
jne
mov
lock
arpl
xor
dec
mov
mov
add
push
or
int
push
dec
shr
lret
jl
in
dec
pop
jo
sbb
xlat
mov
pop
and
jb
imul
pop
pushf
xor
dec
jae
push
mov
adc
iret
faddl
arpl
add
xchg
mov
pusha
mov
adc
jp
dec
ss
adcl
mov
sbb
std
fistpl
imul
hlt
mov
lfs
mov
jae
jp
add
push
jl
or
jae,pt
scas
mov
inc
xchg
jns
cmp
push
xchg
xor
jae
std
sbb
mov
sarb
sahf
push
mov
mov
dec
cld
or
mov
rol
mov
outsl
cmp
outsb
adc
inc
int
lret
jno
pop
and
xchg
imul
call
cmp
add
push
adc
dec
push
xor
cmp
fldenv
popf
neg
lret
dec
setb
dec
je
arpl
inc
sub
mov
pop
mov
pop
push
loope
sbb
add
divb
xchg
popa
in
test
pop
xchg
shll
scas
adc
pop
fdivrl
or
inc
movsb
in
jae
cmp
mov
repz
cmp
xchg
lock
mov
pop
sarb
ja
scas
jl
addr16
in
dec
mov
fidivs
test
nop
mov
lock
add
scas
repnz
stos
adc
push
sti
xor
xchg
cld
ss
cmp
out
sbb
pop
dec
mov
jno
inc
movsl
cwtl
push
push
daa
dec
jmp
inc
jecxz
mov
mov
mov
fsubl
scas
imul
stos
gs
dec
aaa
mov
jp
outsb
adc
cmpsl
insb
int
jne
add
or
cld
repz
xchg
xchg
movsb
out
pop
push
out
test
testl
lods
xchg
std
insb
sub
call
xchg
sahf
lcall
cltd
sub
fdivs
mov
add
fidivl
das
pop
or
stc
xorl
dec
mov
jbe
dec
test
jb
mov
int3
dec
xchg
xchg
jnp
push
scas
rclb
scas
cwtl
inc
xor
call
or
arpl
pop
xchg
dec
jmp
ja
sbb
cmp
pop
cmp
mov
shrb
lea
dec
add
aaa
imul
or
xchg
xchg
pop
xchg
cmc
cwtl
imul
mov
jg
or
pop
pop
pop
arpl
repnz
pop
inc
adc
test
jge
iret
dec
jo
mov
mov
jno
pop
shlb
sub
cmp
sbb
lahf
and
fcmovne
ficoms
xchg
and
or
inc
dec
pop
push
xor
stos
xchg
in
xchg
arpl
jo
jne
adc
incb
adc
lods
pusha
sarb
inc
ret
shl
repnz
push
aaa
jb
cmp
mov
mov
out
in
and
fadd
push
cltd
adc
cmp
add
loopne
lret
decb
stos
fs
stos
lcall
xchg
sti
iret
add
repnz
mov
sti
mov
pop
lock
add
aam
or
adc
repz
mov
jp
repz
je
adc
enter
lret
dec
sub
and
popa
add
and
lods
jno
xor
mov
inc
cwtl
clc
in
or
pusha
sbb
pushf
sbb
fsts
gs
inc
je
js
add
idivl
enter
std
cmp
repnz
cli
mov
imulb
jecxz
or
adc
adc
xchg
jmp
and
and
xchg
or
cli
in
scas
outsb
nop
cmp
push
pop
imul
jno
movsb
out
xor
sbb
hlt
daa
mov
dec
push
shrl
pop
cs
pop
pop
cmp
ret
inc
sbb
sub
xor
mov
and
dec
mov
mov
and
mov
mov
mov
inc
mov
mov
fwait
icebp
hlt
arpl
scas
out
loop
sbb
mov
or
test
cltd
mov
xor
ss
mov
mov
ret
and
aaa
gs
mov
stos
ss
xchg
data16
cmc
inc
mov
dec
push
dec
fs
jbe
mov
mov
mov
out
lock
lock
push
aaa
fs
lret
mov
xor
mov
scas
xchg
enter
push
adc
inc
scas
push
inc
scas
xchg
mov
mov
ret
pushf
test
mov
js
dec
push
dec
mov
pushf
test
push
call
std
rol
sbb
mov
dec
sbb
bound
rcll
movsb
pop
pop
xchg
inc
cld
pop
pushf
rorl
pop
xor
jno
test
jg
fnstenv
lea
push
cld
jecxz
jb
fcmovbe
cmp
xchg
lods
adc
fwait
mov
and
inc
mov
add
push
jl
push
push
pop
cmp
pushf
cld
rcl
in
or
int
xor
pop
rcrb
cmp
jecxz
mov
dec
test
pop
mov
aam
cltd
stos
xorb
pop
les
shlb
or
jle
sub
fnstsw
bound
mov
in
mov
push
jge
cmp
and
lret
in
pop
dec
add
outsl
sbb
cmp
std
cmp
add
mov
rclb
push
sub
sbb
movsb
mov
aas
std
xor
call
jge
rorb
stos
cwtl
out
push
ja
ret
pop
inc
bound
loopne
decb
xchg
push
push
dec
adc
add
cmpsb
aas
inc
cwtl
xchg
pop
push
mov
ja
xchg
es
out
mov
jecxz
cmp
mov
shlb
ja
lret
lds
iret
rolb
mov
sbb
inc
cmp
mov
cmp
fs
aaa
data16
jmp
pop
aad
push
add
jns
inc
sub
xor
outsl
jmp
jp
adc
mov
out
aaa
jno
xchg
push
push
fsts
lcall
xchg
sub
mov
adc
fstpt
rcrb
lds
jmp
stos
sbb
inc
aad
xchg
xor
push
js
shll
rolb
dec
lods
xor
ljmp
sarl
mov
jae
repz
iret
sahf
add
mov
dec
fistpl
jp
aad
std
fsub
mov
dec
addr16
xchg
cmp
sub
imul
hlt
or
call
xchg
pop
dec
loopne
arpl
aam
xchg
cmp
jg
cmp
xchg
push
mov
pop
adc
mov
pop
push
lret
jns
xchg
add
inc
pop
into
aam
into
sbb
mov
inc
rorl
lret
mov
dec
jns
mov
mov
jno
aaa
or
mov
or
xor
loop
xor
iret
in
popf
nop
pushl
mov
outsl
cmpsb
std
xchg
fidivrs
stos
outsl
lds
dec
and
or
ret
rcl
icebp
jb
ss
pop
and
leave
leave
das
inc
rcll
jg
jae
push
lea
pop
rolb
inc
insb
xor
push
hlt
mov
pop
pop
int3
nop
mov
rclb
std
jno
pop
jns
sbb
stc
sub
lds
jb
push
and
cli
loope
dec
movups
add
add
imul
out
jne
loope
sub
jge
jnp
lcall
rclb
ret
pushf
inc
sbb
add
mov
and
push
or
aam
sbb
sbb
bound
jne
hlt
xchg
in
xor
xchg
xorb
mov
pusha
mov
sti
das
push
lret
aas
mov
loop
inc
addr16
cmp
mov
dec
pop
loopne
pop
jae
adc
pop
pusha
addl
popa
mov
scas
pop
fistpl
dec
lahf
sarl
dec
leave
push
cld
mov
fcoml
push
push
loope
dec
repnz
or
mov
jge
or
ds
loope
push
cld
dec
js
fwait
xchg
fisubl
int
in
int3
dec
mov
scas
dec
dec
and
cli
xchg
add
xor
xchg
clc
adcb
adc
sub
sbb
mov
sbb
inc
int
and
and
lods
orl
outsl
mov
sub
shll
insb
into
xchg
loope
pop
jb
rorb
clc
adc
bound
cld
push
and
xchg
mov
inc
mov
pop
pushf
jbe
mov
xchg
xor
dec
dec
push
pop
aad
and
int3
je
cmp
cld
lret
vcvttps2dq
ret
xchg
sbb
fdivs
dec
lcall
repz
enter
rclb
rorl
jp
outsb
rcrl
cmp
fimuls
mov
push
ret
mov
mov
repnz
push
imul
outsl
xchg
test
les
cmp
out
in
cmp
xchg
daa
adc
in
cmp
and
in
push
stos
test
lcall
xor
std
inc
mov
cld
sbb
and
jp
popf
adc
fdivrl
dec
pop
loopne
mov
test
call
sub
push
pop
jg
in
shlb
sbb
push
push
sub
sub
cmp
hlt
xor
mov
sbb
sub
or
add
inc
fs
adc
jp
jnp
leave
push
push
jecxz
inc
cmp
jl
xlat
jp
inc
dec
fprem
ret
das
pushf
mov
jge
or
idivb
xor
scas
add
mov
bound
push
icebp
inc
rcrl
mov
push
outsb
ss
xor
sub
sub
add
mov
dec
arpl
enter
dec
inc
int
dec
popf
leave
mov
jbe
pop
aaa
dec
jnp
jae
lret
xor
out
fildl
mov
not
subb
sbb
xchg
jmp
mov
xor
sub
aaa
mov
cli
sub
jp
pop
loopne
aad
sbb
cli
jecxz
jbe
leave
pop
xchg
push
xor
pop
inc
repz
pop
push
inc
je
adc
push
loopne
std
cmp
imull
into
push
mov
xchg
push
and
push
call
fwait
je
repnz
mov
mov
or
cmp
fidivs
das
mov
cmp
leave
xchg
xchg
add
jns
popf
xchg
loopne
cmp
cmp
ret
out
push
std
cmpb
sub
pop
sub
in
pop
inc
out
sti
push
dec
mov
jae
test
jge
mov
push
enter
xchg
call
js
lret
jo
pop
setns
mov
mov
test
cmp
xchg
xor
hlt
jbe
fwait
adc
xlat
ficoms
mov
ljmp
jns
pop
rclb
cmp
sub
mov
adc
lcall
push
xchg
dec
sub
ret
add
mov
shrb
sbb
push
adc
push
rorb
jns
mov
xlat
fdivl
dec
imul
repz
xchg
stos
in
dec
mov
jmp
sbb
dec
mov
repnz
or
sbb
nop
cli
mov
add
pop
fimull
push
sub
repz
xor
pop
sarl
pushf
xchg
or
iret
mov
inc
mov
lods
xchg
cmp
sti
jb
dec
xor
mov
cli
divl
cmp
xor
aaa
xlat
cli
xor
jae
jg
jge
xor
mov
jns
inc
data16
ds
push
ficompl
loopne
pusha
test
dec
ja
das
and
out
push
and
cmpsl
sub
inc
lock
into
adc
int3
pop
lock
cmp
fdivs
inc
ret
xor
xor
popf
test
icebp
outsb
push
stos
add
bts
lock
loope
int3
jge
xchg
cmp
lahf
dec
xchg
sbb
jo
dec
cmp
adcl
imul
cmp
nop
dec
and
mov
adc
mov
jp
dec
pop
insb
add
lods
call
pop
outsl
icebp
sarb
test
inc
aam
mov
std
fwait
adc
sti
cwtl
rolb
cmp
into
sbbb
repnz
loopne
fidivrl
mov
out
xchg
or
and
inc
mov
xor
xchg
loope
repnz
xchg
inc
push
pop
xor
cmp
dec
lret
xchg
mov
icebp
loop
pushf
xchg
mov
aad
repnz
inc
mov
sbb
mov
scas
xchg
push
les
sub
xor
mov
cmpsl
rorl
push
mov
jb
addr16
inc
cltd
xlat
mov
cmp
mov
je
fidivrs
std
adc
dec
mov
inc
idiv
adc
push
sub
fdivrs
movsl
adc
inc
outsb
dec
mov
inc
mov
shrl
fsub
imul
sarb
fnsave
sti
pop
sub
cmp
xor
scas
add
cmp
sbb
stos
push
cmp
xchg
push
fists
sbb
sarb
enter
add
rclb
scas
pop
rol
jbe
mov
cmpsl
pop
loopne
push
mov
outsb
sub
scas
adc
dec
int
mov
cmp
push
jns
and
cltd
mov
add
fldcw
rcrb
popa
lock
or
mov
inc
repz
adc
test
bound
pop
mov
mov
sub
pop
pop
add
stos
and
mov
imul
sub
stc
mov
stos
mov
xchg
rcrl
movsb
stos
push
loop
pop
rol
cmp
fcmovnb
shlb
scas
ss
cmp
scas
jge
mov
jl
int3
stos
jns
ds
push
adc
sbb
cmp
test
cmp
ret
push
push
and
ljmp
std
inc
inc
in
loop
cli
dec
adc
cmp
stc
pushf
pop
xchg
hlt
insb
inc
mov
mov
stos
orb
xchg
cli
scas
cmp
add
mov
lods
lcall
popa
shll
cmp
xchg
push
pushf
pop
jl
jecxz
loope
cmp
xor
push
inc
adc
xchg
loop
shl
rorb
ficomps
dec
fcmovne
iret
fwait
cli
out
inc
adc
imull
lahf
inc
jno
shll
imul
mov
add
psraw
mov
insl
sti
dec
repnz
pop
adc
xlat
pop
into
mov
xchg
mov
pop
sahf
cmpsb
mov
ret
add
mov
dec
data16
xchg
test
xchg
or
jns
cmp
pop
and
mov
mov
lcall
and
hlt
ret
outsb
and
ljmp
lret
mov
mov
outsl
loope
inc
int
jg
imul
xchg
jae
mov
sbb
or
cmpl
cli
shlb
in
inc
scas
pop
into
aaa
jge
push
cld
mov
inc
dec
xchg
or
jl
mov
cmpsb
pop
dec
aam
xor
sub
stc
jmp
sbb
fists
lods
cmpl
mov
mov
test
hlt
jge
dec
or
test
js
sub
jmp
ja
push
or
int3
cmp
dec
adc
mov
insb
imul
xchg
dec
in
out
jp
pop
outsb
outsl
cmp
sub
scas
cmp
adc
push
mov
rcl
fwait
mov
dec
adc
pop
adc
or
sbb
dec
or
into
fwait
or
push
ret
mov
or
dec
les
jp
sub
dec
push
faddp
sbb
jge
fwait
loopne
add
xor
lods
pop
mov
jae
pushf
push
inc
inc
into
jle
call
push
inc
and
adc
lcall
outsb
cltd
mov
push
xlat
mov
call
inc
xchg
mov
mov
xor
adc
mov
in
imul
daa
je
mov
ficompl
int
mov
fcomi
fbstp
mov
pop
cwtl
push
shlb
xor
mov
lahf
xor
mov
in
and
xor
adcl
in
imul
xor
xor
mov
outsb
scas
icebp
and
adc
sarl
cs
arpl
loope
fidivl
int
add
cmp
sbb
dec
jmp
mov
cld
xlat
jne
sub
push
ss
loopne
loopne
mov
cmp
jg
cmp
jb
lcall
movsl
cmp
or
data16
pop
fdivr
push
mov
inc
adc
out
mov
les
mov
in
dec
loope
mov
sbb
push
mov
in
xor
mov
fwait
in
nop
inc
mov
sbb
test
and
dec
out
jno
dec
cmp
or
add
adc
imul
push
xchg
jg
pop
add
jnp
and
mov
xor
sbb
out
clc
xlat
push
mov
xor
repz
stc
pop
loopne
xor
lret
aam
mov
sub
or
leave
fildl
cmpsl
pop
lret
or
cmp
add
push
dec
push
sub
xchg
fisubrl
jl
je
sbb
add
push
loopne
dec
sub
xor
dec
mov
std
mov
insb
sbb
je
les
fstpt
xor
lods
scas
mov
into
jb
push
jno
mov
lret
dec
xchg
mov
fldt
sbb
mov
icebp
inc
cmp
ss
ds
insl
xchg
mov
scas
cltd
xchg
lods
arpl
sub
stos
int3
cmp
push
loop
or
outsb
cmpsb
xchg
sub
sub
out
aad
add
jmp
dec
xor
sti
imul
int3
rorl
push
mov
xchg
stc
xchg
and
inc
dec
mov
push
dec
arpl
or
xchg
clc
sub
add
rcl
xchg
cmp
and
or
jbe
sbb
imulb
je
inc
inc
cwtl
xor
xorl
inc
xor
pop
mov
data16
cltd
mov
mov
icebp
scas
insl
lahf
mov
fs
ja
mov
std
insl
leave
lahf
inc
lods
inc
jo
mov
xor
xor
xor
xchg
mov
popa
adc
pushl
loopne
push
std
sbb
mov
cmp
cmp
dec
lods
jae
mov
sbb
jge
mov
dec
les
mov
xlat
xor
add
mov
psrlw
rcrb
or
xchg
mov
je
cmpsb
or
jl
fistpll
ss
stos
push
scas
aad
mov
lods
push
xchg
dec
mov
shrb
iret
pop
nop
mov
ljmpw
shrl
bound
jp
or
mov
bound
js
bound
sbb
imul
jbe
bound
loopne
xor
pop
mov
cmp
dec
ja
ror
mov
out
inc
jns
mov
dec
cmpsl
sti
jg
mov
push
mov
add
out
mov
mov
jb
mov
nop
push
mov
xor
insb
fcmovbe
popa
sarb
mov
shll
xchg
xchg
cmp
lods
sub
push
outsl
adc
test
ds
cmp
lods
mov
jne
loop
cli
adc
pushf
loop
jo
sub
gs
pop
xchg
insb
jge
bound
cmp
or
cli
movsb
test
lret
jp
inc
jecxz
aas
mov
arpl
repz
xorb
dec
scas
xchg
and
fcoms
push
or
nop
or
xchg
ret
cmp
dec
mov
insb
in
leave
out
dec
jecxz
dec
push
addr16
jp
repz
jg
pop
leave
jp
dec
jb
cmpsl
lea
data16
jl
shl
xchg
rcll
cltd
insl
cmpsl
jnp
imul
dec
pop
adc
ficoms
and
push
int3
sti
test
out
aad
xchg
cmc
stc
pop
push
dec
data16
fcompl
push
movsb
jb
lods
cs
and
sbb
xorb
sbb
and
mov
ja
psadbw
adc
push
push
push
arpl
sbb
out
pop
sub
ss
cltd
mov
shll
shl
pop
mov
insb
push
loop
loope
sbb
pop
jg
inc
inc
popf
pop
mov
pop
push
cmp
nop
fnstenv
dec
dec
lds
cmpsl
in
mov
xorb
xor
test
fisubl
cmp
cli
xchg
hlt
xor
arpl
sub
popa
or
lret
sbb
pop
sub
pusha
or
inc
pop
inc
jns
jge
aam
aad
gs
and
hlt
xlat
mov
aad
test
xchg
inc
rclb
popl
js
movsl
in
bound
fimuls
fs
xchg
dec
jnp
nop
or
mov
mov
shl
jae
xchg
or
xchg
jo
mov
scas
jnp
ror
push
daa
sbb
dec
rorl
daa
push
cmp
dec
xor
xchg
imul
sub
rcr
dec
mov
fwait
enter
pop
mov
nop
scas
jae
mov
loopne
pop
scas
push
or
idivl
icebp
insb
rcl
push
adc
ret
not
push
add
ds
cmp
mov
mov
xor
lcall
nop
lods
call
sub
sbb
mov
mov
dec
je
mov
inc
mov
dec
repnz
xor
ss
cmp
dec
les
loop
xor
push
xor
lahf
cmpb
cmp
mov
jb
shlb
sbb
inc
dec
shl
xchg
cmp
test
jno
adc
fstl
cmp
inc
or
lock
orl
outsl
pop
ret
and
dec
dec
jnp
in
data16
jmp
jg
xor
lcall
sub
add
aad
or
adc
stos
or
pop
ret
sub
lret
inc
je
push
fsubl
cmp
inc
ljmp
and
sbb
mov
xlat
pop
mov
stos
imul
and
or
fsubrp
xor
aad
bound
xchg
outsl
popa
int3
xor
add
sbb
cmp
incb
outsl
aas
mov
ret
jne
pop
and
mov
ja
inc
adc
mov
std
xchg
loope
cmp
fstpl
arpl
pop
popa
pop
in
sbb
push
add
jns
rclb
xor
xchg
fs
call
mov
outsl
add
jnp
lds
rclb
jg
call
ss
js
bound
mov
adc
cmp
xor
pop
adc
dec
inc
stos
ret
add
mov
mov
imul
add
pop
jmp
jl
cmp
gs
mov
movsb
mov
arpl
ret
xchg
in
add
pop
jmp
xor
cmc
rcll
test
je
add
ficoml
pop
jg
arpl
cmp
out
sub
repz
or
push
pop
in
push
pop
adc
lahf
scas
je
or
xor
mov
cmp
scas
dec
cli
imul
inc
jl
fcompl
in
in
push
pop
enter
sbb
push
shl
lret
enter
mov
xor
ljmp
jb
dec
xchg
mov
inc
sahf
mov
xor
cmp
xchg
push
mov
fnstcw
mov
ret
ret
notl
pop
xor
mov
cltd
pop
mov
roll
inc
imul
int
daa
push
gs
hlt
fs
or
dec
pop
pop
push
in
mov
adc
mov
jp
in
std
stos
mov
mov
mov
mov
out
sbb
fldl
adc
fwait
jae
cmp
ret
int3
repnz
and
mov
mov
call
bound
jns
notl
mov
xlat
mov
cmp
clc
mov
sub
jp
sub
divl
aad
dec
sbb
mov
repz
or
jp
fidivrl
std
aaa
and
pop
daa
dec
iret
xor
lret
push
in
jae
outsl
scas
push
cmp
lcall
mov
je
cwtl
mov
adc
dec
repnz
js
ljmp
dec
leave
xlat
inc
rclb
xchg
dec
inc
daa
loop
xchg
add
ror
cltd
add
fisttpl
mov
adc
jb
jecxz
push
cltd
jo
sahf
jp
push
enter
and
rclb
xorl
inc
mov
test
inc
fs
jb
bound
loop
add
aad
loope
sub
inc
xchg
mov
int3
insb
fidivrs
dec
adc
mov
sub
cmp
jbe
jle
and
loop
fcomi
hlt
adc
loope
mov
mov
xchg
or
adcb
lea
int
pop
inc
push
add
test
dec
inc
sti
and
sbb
rcl
jne
jg
int
dec
inc
or
out
into
xlat
push
jl
jle
mov
mov
or
outsl
jg
lea
add
fwait
and
scas
repz
lock
fidivs
jae
dec
mov
les
dec
adcb
xchg
or
mov
imul
sti
sub
jnp
inc
subb
xchg
faddl
lret
mov
mov
fmull
scas
cmc
mov
loop
adc
insl
iret
dec
push
and
rol
pop
cmc
lret
cmp
test
mov
mov
loopne
fmull
pop
ss
fidivl
stos
mov
mov
jb
adc
pop
mov
in
cmp
inc
xchg
fcmovb
sahf
adc
sbb
adc
jno
jp
xor
inc
loope
push
fwait
pop
insb
push
push
jae
jge
and
xor
xchg
jbe
mov
mov
push
pop
rclb
dec
mov
push
sbb
loopne
ret
jno
pop
daa
jp
mov
xorb
bound
or
js
lret
xor
cmp
or
arpl
insl
jbe
mov
lods
sbb
fildl
loopne
or
lcall
ss
pop
dec
pop
aaa
push
pop
jae
or
add
pop
in
dec
shll
mov
lahf
push
xor
popf
pushf
fs
outsl
cmc
sbb
loopne
stos
jp
and
mov
inc
xor
js
or
cmp
add
fcom
pop
xchg
popa
xchg
bound
jge
inc
or
cltd
aas
cmp
cmp
jecxz
idivl
out
push
jb
std
add
adc
ss
arpl
scas
ja
aas
cmp
inc
mov
inc
lret
outsl
pusha
adc
dec
xchg
imul
push
int
mov
lcall
mov
leave
ror
push
xor
or
dec
inc
sub
dec
les
xor
fwait
aas
rcrb
lret
cmp
scas
adc
rorl
pop
addr16
mov
adc
icebp
ret
mov
push
xchg
ret
push
aaa
push
and
out
sbb
leave
imul
push
subb
aaa
or
fmulp
adc
push
push
movl
scas
popl
cwtl
jo
adc
or
xchg
or
or
popf
push
jae
adc
inc
or
mov
or
cmpsb
or
xor
mov
xor
cmp
dec
repnz
xor
lods
push
les
xor
xchg
push
dec
mov
push
outsl
out
or
xchg
cmp
xor
xor
data16
enter
pop
xchg
or
pop
aad
sub
jmp
shl
xchg
mov
push
fcmovnb
ret
inc
ficoms
jmp
push
mov
cld
sub
dec
ds
outsb
shll
mov
or
cli
inc
bnd
mov
cmp
mov
inc
ss
xor
bound
les
xor
cltd
xor
add
sbb
ficomps
jbe
xchg
dec
cmp
rclb
das
loope
popf
mov
push
jp
ret
push
adc
ficoml
mov
orl
jne
sbb
mov
outsl
pop
mov
jae
inc
pop
mov
jl
mov
cmc
jno
or
xor
in
xchg
xchg
in
inc
sbb
nop
scas
add
xor
push
into
fs
nop
dec
sbb
mov
xor
out
mov
inc
mov
xchg
dec
in
cmpsl
push
ss
pop
rclb
mov
repz
fwait
cwtl
insl
add
gs
ds
mov
jbe
gs
mov
mov
fwait
imul
mov
popf
pop
xor
jb
xchg
loope
in
dec
add
mov
mov
push
movsb
ss
fdivr
xor
adc
adc
pop
mov
icebp
mov
aad
js
adcl
pop
gs
cwtl
and
lea
dec
roll
aas
jae
rol
add
loope
dec
xor
fwait
xor
and
ret
dec
mov
lds
test
fcomi
mov
mov
inc
adc
mov
jbe
jp
xchg
leave
cltd
dec
sbb
dec
jb
scas
scas
jnp
lcall
xor
or
adc
push
lods
mov
std
movsb
adc
cmp
xor
jecxz
push
mov
push
das
xchg
jno
loope
jp
push
cli
jno
cmp
fbld
mov
loopne
inc
loopne
lds
lods
js
mov
jl
orb
cmp
jo
dec
jle
sarb
test
and
dec
fiaddl
xchg
push
les
ss
cmp
arpl
lahf
aam
repz
sbb
sysenter
bound
xor
test
ja
mov
je
into
roll
mov
xchg
xlat
lods
xchg
push
frstor
int3
leave
arpl
dec
jecxz
js
or
pop
add
sbb
clc
popa
clc
les
jl
mov
jecxz
push
lret
jge
dec
ss
hlt
enter
call
cmp
dec
dec
lret
jo
nop
arpl
push
push
mov
ror
cmp
dec
cmp
bound
bound
and
push
je
lret
stos
cltd
dec
loopne
xchg
xor
mov
call
imul
push
or
and
push
dec
jecxz
cmp
insl
leave
pop
cltd
or
dec
mov
lret
imul
insl
or
or
xchg
cltd
adc
cmp
cmp
inc
push
lcall
or
fisubrl
pop
lcall
pop
repz
shrb
mov
xchg
mov
mov
mov
mov
sub
xor
xchg
ja
mov
cmp
inc
cmp
mov
ds
aas
xor
add
cmp
rolb
inc
jge
adc
repz
fisubs
cmpsb
push
xor
adc
mov
shl
into
insb
xor
jne
cmp
dec
add
into
je
adc
mov
push
repz
mov
bound
xor
push
xor
inc
xor
lds
mov
shll
stos
dec
mov
xchg
mov
or
pop
sbb
push
xor
or
dec
mov
sbb
addr16
sahf
repz
sarl
jbe
sahf
mov
fucom
repnz
or
std
cmp
xor
mov
dec
fdivrl
mov
test
mov
xor
push
js
sub
adc
mov
jb
adc
stos
sbb
cmp
ss
in
xchg
push
sbb
bound
out
lret
insb
je
adc
jbe
stos
and
cmp
mov
and
cmp
jbe
jg
jge
jns
mull
test
xor
jb
ss
push
push
xor
repnz
cmpsb
pop
stc
cmp
mov
sub
shlb
subl
je
mov
jb
cmpsl
sbb
xor
jno
je
add
push
jmp
mov
mov
fs
loope
jb
inc
and
mov
mov
sub
lods
iret
mov
push
repz
insl
fnstsw
or
mov
and
aaa
leave
xchg
xchg
push
mov
hlt
lcall
fcmovne
xchg
lret
aas
xchg
lret
les
mov
call
cs
mov
pop
sbb
out
inc
and
jg
mov
addr16
push
lds
xor
ret
jae
stc
or
jb
cli
xor
push
inc
cs
xchg
pop
mov
notb
cwtl
ss
mov
push
cmp
stos
xchg
or
sbb
mov
sub
xlat
dec
and
fisubrl
test
sbb
ret
pop
int3
xor
loopne
mov
iret
adc
ds
dec
hlt
dec
hlt
icebp
xlat
jnp
mov
test
or
cmp
aam
xor
int3
loop
hlt
mov
loope
hlt
loopne
jne
hlt
jns
mov
loop
fiaddl
mov
ret
ret
sub
mov
cmp
inc
adc
mov
bound
loope
sbb
incl
jnp
insl
push
mov
cmpsl
mov
loopne
cli
xor
sbb
adc
sti
xor
fs
mov
repnz
push
add
es
nop
inc
adc
mov
mov
xchg
insb
int3
cmp
shrl
into
sbb
outsb
std
lea
pop
inc
mov
lret
mov
lahf
mov
inc
iret
fwait
loope
push
cmp
iret
shlb
pop
pop
sbb
loop
je
clc
pop
fimuls
dec
adc
shl
mov
enter
mov
pop
ss
loop
repz
xor
jecxz
sbb
sub
mov
xchg
cli
cmp
sbbb
xor
jp
cmp
xchg
mov
inc
ficoml
mov
jb
jecxz
jge
mov
mov
lcall
je
dec
adc
inc
push
scas
mulb
arpl
outsb
add
xchg
fldcw
rcl
xchg
sub
dec
fadds
push
xor
bound
ja
mov
add
mov
jecxz
pop
xor
dec
cld
enter
mov
add
mov
nop
xlat
dec
incb
ljmp
inc
push
push
lahf
dec
lret
jns
pop
push
mov
add
ss
cmp
mov
jle
scas
dec
pop
pop
inc
idivl
jg
mov
sub
pop
mov
xchg
dec
push
dec
jp
stos
stos
mov
xchg
cmp
je
mov
cmp
dec
jp
pop
fsts
push
inc
je
mov
cmp
mov
ss
mov
adc
fs
aas
mov
je
mov
cmp
mov
mov
je
ja
cmp
inc
jbe
mov
je
mov
mov
fs
jbe
mov
je
mov
cmp
fs
mov
push
xor
jb
mov
cmp
fs
jbe
mov
je
mov
cmp
stc
mov
cmp
jle
nop
mov
ss
or
ja
pop
inc
loop
mov
jle
mov
xor
xchg
cmpsl
les
mov
sbb
fcoms
push
test
inc
push
adc
cli
xlat
cmp
clc
mov
sti
pop
lcall
cmp
js
rclb
cmp
xor
jne
and
bound
mov
fidivl
push
fdivrs
push
enter
cmp
adc
cmp
cmp
sbb
sub
adc
ds
stos
sahf
xchg
je
inc
add
xor
mov
rclb
adc
sahf
pop
aad
fidivrs
adcb
mov
jl
js
mov
mov
aam
inc
rcr
out
adc
mov
dec
xor
loopne
mov
adc
pop
push
pop
sahf
mov
fiaddl
sarb
cmp
mov
jae
js
sub
pushf
mov
adcw
into
add
jecxz
xor
nop
inc
cmc
lcall
push
push
jb
mov
repnz
xor
mov
repz
xor
aam
adc
push
xor
mov
cmc
adc
xchg
mov
notb
aaa
push
xor
mov
notl
cmp
js
mov
pop
xor
mov
pop
mov
lcall
jnp
xor
pop
jl
xor
jge
sti
mov
pop
jle
xor
push
aas
pop
jg
lahf
mov
pusha
xorb
or
cmpl
lods
inc
testl
xor
or
mov
mov
push
lea
cmpb
or
mov
sbb
adc
xchg
pop
inc
lcall
mov
imul
push
jge
repnz
and
xchg
pop
ss
adc
jae
xor
je
adc
inc
pop
sti
sbb
pop
data16
clc
cmp
jo
mov
pushl
pop
leave
mov
pop
xor
mov
ja
rclb
add
inc
push
insl
aaa
xor
and
cwtl
jle
pop
scas
popa
sub
rolb
rol
aad
jae
shr
cmp
mov
jecxz
mov
mov
push
int
movsl
loopne
mov
xchg
cmpsl
jmp
arpl
mov
testl
mov
ss
and
insl
aas
mov
mov
dec
js
jle
bound
loopne
in
push
jno
and
fisubs
aad
in
sbbl
movsb
faddp
loopne
jle
push
push
imul
add
sbb
or
push
dec
sbb
shlb
iret
lahf
fisubs
sub
mov
pop
dec
xchg
les
ss
cmp
cmp
aaa
mov
push
and
mov
in
int3
fidivrl
clc
icebp
enter
mov
inc
divl
cmpl
iret
pop
or
dec
jae
mov
clc
je
cmc
sti
into
pop
pop
out
setge
cmp
xchg
hlt
rcrl
jmp
inc
xchg
insl
add
xchg
xor
jae
add
in
dec
pop
xchg
ret
jle
xor
mov
cmpsb
jns
cmpl
or
xchg
mov
jne,pn
sbb
mov
inc
mov
pop
bound
mov
jl
aaa
pushf
mov
cld
mov
aas
pop
mov
ss
ret
ds
pop
pop
push
stos
rcll
iret
das
cmp
pop
dec
les
add
cltd
mov
jne
enter
sbb
iret
aas
and
imul
cmp
xor
dec
cltd
lcall
lock
cli
pusha
loopne
sub
jl
out
xlat
imul
pop
das
lock
imulb
jns
arpl
pop
shll
mov
xchg
mov
fbstp
or
mov
mov
cmp
scas
and
mov
outsl
ljmp
shlb
movsl
mov
fninit
mov
cld
pushf
push
mov
xchg
mov
lock
jae
jb
mov
incl
lcall
stc
insb
push
cwtl
arpl
push
es
les
ss
fadd
sbb
jb
aaa
popf
rclb
adc
sarb
jbe
out
inc
push
sub
pop
jb
sarb
fidivs
mov
les
push
nop
mov
jb
jb
sbb
xor
pop
pause
cmc
pushf
push
push
jmp
jb
insb
inc
je
jno
pop
sub
or
add
inc
arpl
add
inc
test
inc
test
and
out
push
es
xchg
xor
daa
dec
push
xor
sub
mov
sub
mov
sub
mov
sub
lods
int3
in
xor
dec
insl
lea
sub
into
out
xor
cs
outsl
scas
iret
out
xor
das
push
jo
mov
lock
xor
xchg
mov
icebp
pop
adc
in
jl
push
jge
push
shl
fcoml
addr16
ss
out
ffree
cmp
jns
mov
jb
push
mov
fneni(8087
push
popa
dec
xchg
mov
sub
pop
push
xchg
adc
ret
sub
sar
pop
add
bound
dec
aam
loopne
push
inc
pusha
sub
jae
mov
xor
inc
sbbb
fistpl
sahf
aas
lcall
int
jnp
call
cmp
cmp
mov
cmp
nop
sahf
lea
cli
or
aas
mulb
in
mov
mov
fistpl
call
loopne
filds
mov
aaa
mov
mov
cmc
sbb
xadd
and
fsubl
jg
mov
pop
stos
jge
pop
dec
adc
lock
add
and
xor
sbb
mov
lods
inc
xor
cwtl
js
cmp
xor
aaa
and
cmpsl
ss
adcl
xchg
xchg
mov
xchg
addr16
push
shlb
sub
mov
dec
mov
mov
push
fs
xchg
and
inc
pop
cmp
mov
xor
lcall
cmp
mov
fistps
in
dec
std
mull
scas
push
jns
mov
mov
mov
lcall
bnd
cmp
je
jb
loop
inc
pop
clc
inc
xor
icebp
inc
add
jl
and
scas
pushf
xor
jp
lcall
mov
mov
sar
in
mov
push
pop
mov
ficompl
dec
push
data16
mov
ficoms
dec
je
push
cmp
cmpsb
inc
xor
sbb
mov
inc
mov
ss
jp
fwait
pop
movsb
sti
inc
lds
fcomps
rcrl
mov
push
mov
cmp
movsb
scas
inc
sbb
cmp
xor
stos
scas
jge
shll
push
jg
adc
aad
xlat
push
cmpsb
addb
and
test
dec
dec
ret
lds
aas
rol
xor
mov
jo
push
pop
xchg
testl
dec
push
ja
mov
loope
nop
int3
inc
mov
dec
push
and
mov
jae
ss
rclb
stos
mov
cld
orl
cmp
xor
jo
lcall
movsb
sbb
dec
ja
pop
or
dec
push
jge
hlt
enter
aas
rcll
mov
fnstenv
inc
push
std
pusha
rcrl
jle
mov
fists
xchg
mov
and
ds
ss
scas
shrl
shlb
inc
mov
sbb
loop
rclb
inc
and
std
addr16
dec
ret
cmp
mov
fisttpl
push
ret
add
incl
pop
jg
ss
dec
cmp
ds
jg
push
jmp
cmp
sbb
xchg
push
dec
xor
rcll
loope
out
mov
adc
push
dec
jns
aas
stos
dec
lds
ss
jnp
mov
push
jmp
and
mov
fwait
mov
pop
and
add
inc
mov
xchg
xorl
cmpb
popa
std
rolb
clc
stc
pop
bound
sbb
jge
mov
cli
xor
jo
add
rorl
out
fisttps
jb
mov
lcall
pushf
sbb
mov
mov
and
mov
pop
add
and
movsb
pop
push
xor
inc
or
aas
and
mov
inc
xchg
hlt
jb
push
cmc
xchg
or
fsincos
fisubs
es
mov
out
xor
cmp
out
sbb
mov
xlat
mov
mov
dec
stc
fdivl
or
add
inc
lods
mov
push
jae
mov
adc
jb
pop
mov
adc
test
dec
insl
sub
fldenv
call
das
jb
add
add
jl
adc
loope
mov
fdivrl
mov
inc
cmc
pushf
mov
sub
mov
popa
inc
cmc
pop
cmp
pop
test
dec
or
hlt
sbb
loop
push
push
jae
arpl
data16
movl
cmp
sahf
cmp
ja
mov
je
cmc
pop
ss
rcrl
cli
mov
add
fdivrs
push
cmpsb
fcomps
cwtl
mov
jge
dec
jae
xor
pop
in
hlt
mov
fildll
iret
sar
test
push
hlt
pop
mov
loopne,pn
rolb
out
mov
inc
or
jnp
data16
ficompl
outsl
je
movsl
push
mov
dec
lcall
shlb
xchg
mov
dec
mov
aas
xlat
outsb
sub
ds
sbb
cmp
rcrb
xchg
pop
das
jmp
xor
test
mov
test
cwtl
dec
popa
pop
add
pop
mov
cmp
inc
adcb
loop
leave
pop
out
pop
inc
test
inc
xchg
sbb
cmp
jl
aas
pop
jne
mov
jae
fcmovu
mov
lods
mov
mov
adc
add
divl
mov
mov
ljmp
scas
mov
into
out
nop
es
jnp
mov
mov
jecxz
dec
imul
or
in
call
xor
pop
sbb
aas
lcall
ja
mov
xchg
mov
lods
lret
xchg
sub
data16
orl
push
dec
je
jb
mov
lds
aas
pop
fidivs
lcall
scas
xor
sbb
fstps
das
mov
jge
jle
dec
push
mov
popa
rolb
jbe
gs
sbb
push
inc
bnd
ret
imulb
push
xchg
mov
cmp
ljmp
mov
adc
mov
lret
push
cmp
cmp
ss
push
pop
mov
aaa
lahf
ljmp
cmp
neg
jae
push
cmpsl
or
dec
or
sub
mov
int
xchg
xor
fwait
xor
shl
arpl
push
adc
pushf
xor
xchg
push
les
dec
xchg
popa
hlt
fstpt
cmp
arpl
jb
push
pop
fdivrs
lcall
mov
pop
sarl
je
mov
jnp
out
bnd
inc
imul
push
sbb
fs
pushf
add
movb
out
sub
sub
xor
mov
push
xor
popf
fldcw
cmp
enter
int
dec
or
xchg
inc
jae
or
xor
test
into
adc
sub
fbstp
mov
and
nop
adc
xchg
shlb
fsubs
ret
mov
popf
out
lahf
xchg
imul
or
mov
ss
xchg
mov
andb
xor
xor
xor
roll
inc
and
cmpsb
lea
jmp
bound
ljmp
mov
sub
out
insl
dec
outsb
popf
jne
inc
ja
jae
pop
rclb
std
stos
cltd
dec
sbb
inc
lods
dec
xor
dec
jno
pop
add
shll
lcall
fidivl
and
std
out
mov
ja
inc
pop
push
pop
xor
inc
fnstsw
dec
bound
ss
iret
cmp
jl
jmp
push
mov
sbb
pop
aaa
push
mov
cmp
jbe
ss
push
mov
je
mov
cmp
mov
mov
lret
je
mov
cmp
mov
push
jbe
mov
mov
mov
je
mov
cmp
fs
sbb
jb
push
fs
mov
xor
cwtl
mov
push
ss
xor
xor
mov
je
mov
cmp
fs
jbe
mov
je
mov
cmp
fs
jbe
mov
je
cmp
aas
mov
cmp
mov
ss
mov
int3
cmpb
std
adc
and
je
decb
and
mov
xchg
mov
inc
aaa
push
jo
inc
ss
pop
mov
mov
lret
sti
and
mov
mov
mov
adc
mov
lret
ss
je
push
mov
arpl
mov
mov
and
enter
arpl
pop
mov
cmp
mov
shll
jbe
fidivrl
jno
jb
mulb
mov
je
enter
jb
mov
dec
sarb
xchg
jp
or
cmp
jp
mov
inc
add
hlt
cmp
leave
xchg
or
mov
imul
out
lret
or
ss
add
inc
out
in
push
dec
xor
icebp
out
jne
sbb
scas
mov
in
repz
jecxz
daa
add
mov
and
subb
mov
pop
sbb
or
xor
imul
movsb
inc
pop
xor
loop
fcoml
pop
jecxz
adc
sarl
add
scas
add
xor
scas
lret
nop
push
pop
ret
divb
xchg
xor
xchg
inc
scas
ljmp
int3
mov
cmp
jnp
in
sub
fmulp
sub
push
pop
inc
push
scas
cmpsb
cli
rcl
adc
mov
bound
dec
add
fstpt
movsb
pop
cltd
fmuls
stc
out
pushf
xchg
repz
fstp
ljmp
xor
push
xor
dec
mov
rep
icebp
mov
frstor
xor
mov
sub
xchg
in
inc
mov
xorl
lret
mov
jmp
mov
push
mov
pusha
rcr
jae
cmpsb
inc
adc
push
inc
jge
cltd
sub
pushl
dec
stos
lods
mov
ficoms
cmp
push
dec
adc
xchg
ret
ss
ljmp
or
daa
shr
sbb
add
jp
out
in
adc
sub
and
ret
and
cmpsl
into
inc
pop
mov
lret
in
imul
adc
test
inc
or
adc
out
push
xchg
or
pop
pop
mov
pop
push
push
test
pop
jecxz
xchg
or
cmp
push
and
push
loope
xor
leave
mov
xor
stc
sahf
mov
xchg
and
inc
xchg
jns
xor
dec
mov
cmp
icebp
xor
int
cmp
dec
scas
add
xchg
dec
or
fidivrl
adc
gs
lods
idivl
cwtl
pusha
mov
xchg
inc
js
pop
inc
xor
push
and
dec
sbb
mov
call
push
jb
jl
mov
pop
xor
xlat
clc
mov
mov
mov
dec
or
dec
or
add
sbb
mov
xor
jle
inc
and
repnz
loope
mov
mov
in
push
dec
cld
pop
outsb
inc
xor
addb
jnp
push
xor
pop
mov
push
add
xor
sbb
xor
jmp
cwtl
cmp
jae
push
sti
xchg
mov
lods
cmpsl
decl
jbe
add
aas
aaa
js
xlat
call
or
jbe
testl
mov
sub
pop
pop
pop
idivl
dec
stc
sarl
jae
out
dec
mov
mov
iret
cwtl
cmp
cmp
push
xor
dec
lahf
cmpsb
cmp
cmp
push
push
cmpsb
jne
adc
inc
popf
and
mov
nop
inc
or
adc
pop
lahf
cmpsb
xor
pop
pop
pusha
sahf
adcb
pop
mov
pop
sti
pop
call
data16
lock
mov
sbb
cmp
mov
mov
or
nop
inc
add
cmc
push
fcomp
cmp
adc
or
stos
pushf
pop
xchg
dec
xchg
js
into
push
dec
xor
rolb
and
inc
rorl
enter
xchg
repz
sub
xchg
aam
and
into
cmp
iret
and
xchg
scas
push
adc
je
popf
cltd
and
sbb
sti
loope
loop
fs
sbb
sub
movsb
mov
stos
xchg
dec
sarb
into
add
iret
dec
push
push
rcl
jno
cltd
mov
xor
iret
xor
mov
xor
shll
sarl
sarl
sarl
sarl
sarl
mov
dec
dec
roll
rol
rol
shll
mov
scas
shll
push
rcll
mov
jae
cs
push
dec
cld
sbb
pusha
dec
lret
iret
jo,pn
lock
int
clc
and
into
mov
pop
pop
push
xchg
out
js
cwtl
aas
and
add
mov
dec
dec
mov
adc
pop
clc
cmc
jns
cltd
jg
inc
fldenv
sbb
repz
pop
sti
in
add
stc
lock
sti
xor
adc
cmc
adc
sbb
sub
sub
sub
sub
sub
sub
sub
sub
movsb
lods
cmpsb
adc
pop
into
fisttpll
iret
movsb
push
dec
rorb
test
xchg
adc
loop
sbb
inc
sub
mov
sbb
cmp
loopne
in
call
addr16
fildll
outsb
test
dec
jo
xchg
lret
mov
push
out
mov
lods
nop
into
mov
inc
mov
popf
test
jecxz
gs
mov
sarl
or
outsb
orb
dec
inc
push
pop
pop
repz
mov
and
mov
cmp
fcoml
sbb
mov
stc
adc
cmp
jo
jno
jno
jno
jno
jno
push
xchg
js
xchg
rcrb
pop
shrl
adc
aad
add
out
xchg
aaa
fcoms
imul
sti
add
sub
mov
pop
cmpsb
jg
add
add
sti
cli
add
dec
push
xchg
repnz
sarb
xchg
fildl
jno
jno
jno
jno
jno
jno
jno
jno
push
sarb
cmp
fld
lcall
cmp
mov
add
add
mov
fnstcw
add
or
adc
mov
bound
sbb
insl
sbb
outsl
roll
roll
shr
ror
rorl
rorl
shll
cmp
add
sar
xchg
add
sub
adc
ss
sub
sub
fisubrs
jg
loopne
subl
movsl
sub
dec
sub
sub
movsb
js
pop
test
stos
add
push
icebp
je
cmc
insb
jp
fwait
mov
roll
shll
cwtl
into
fimull
iret
fcoml
rcrb
jno
sub
addb
add
add
outsl
add
mov
mov
addl
pop
in
aad
add
adc
xor
xchg
push
or
sub
aas
adcl
cltd
mov
test
and
pop
popf
push
jecxz
push
push
call
dec
push
mov
push
into
push
dec
pop
test
jp
fwait
add
add
add
add
add
add
add
add
jns
cltd
popf
cltd
xchg
leave
sti
adc
push
xchg
pop
adc
shlb
rorl
mov
push
jg
test
cmpsb
loope
pop
dec
jle
jo
xchg
stc
push
sti
pop
add
adc
es
inc
cs
outsb
pop
sbb
mov
push
negb
inc
les
rolb
inc
cmp
add
and
clc
pop
push
mov
and
ficomps
test
aas
mov
add
inc
push
outsb
fstl
imul
push
addr16
mov
mov
pop
pop
es
sbb
movsl
ljmp
mov
push
jae
pop
into
add
iret
jno
hlt
pop
cwtl
std
mov
mov
in
aad
add
mov
repnz
xchg
and
cmc
push
xchg
and
pop
sub
scas
and
adc
push
lods
ficompl
mov
in
sub
push
mov
cmp
subb
dec
add
inc
xor
mov
xlat
add
inc
rol
roll
xor
inc
add
add
add
fstl
cmp
rorl
inc
push
ret
rolb
shrl
inc
dec
sarl
mov
xor
mov
aaa
push
mov
jb
adc
inc
and
pop
push
push
bound
call
push
mov
mov
das
push
push
clc
jae
xchg
insb
push
aaa
add
cmp
and
xchg
cmp
mov
dec
mov
fsts
push
aad
add
mov
sbb
sbb
movsl
sbb
sbb
sbb
sbb
sbb
sbb
sti
je
testb
lahf
adc
fildl
add
leave
test
cmpsl
shll
aas
xor
jbe
mov
js
in
adc
push
inc
pop
sahf
fdivr
imul
inc
insl
cmpsl
outsb
leave
outsl
outsb
push
mov
xorb
jmp
sbb
test
cmp
sub
dec
mov
ret
icebp
outsb
scas
outsl
mov
sbb
and
int
inc
jns
pop
mov
push
fsts
pop
sbb
adc
cmp
dec
pop
popa
into
out
jmp
clc
xor
jge
mov
rorl
mov
xor
mov
test
stos
rorl
or
test
dec
xchg
clc
sbb
fimull
iret
inc
inc
sub
cmpb
in
orl
sbb
arpl
aaa
sbbl
sbb
sti
inc
add
lea
pop
ret
pop
aaa
add
cltd
gs
inc
inc
and
jae
pop
test
mov
lods
add
push
xchg
or
test
jnp
xchg
add
divl
add
push
dec
push
cmp
and
mov
jb
fucom
adcl
cwtl
pop
mov
fadd
imul
jbe
dec
stos
iret
cmpsb
pop
sbb
stc
fwait
sub
leave
je
test
dec
inc
test
repz
fstps
sti
mov
adc
fbld
push
jmp
mov
call
int3
adc
cmp
pop
xor
mov
cld
iret
and
adc
js
mov
mov
inc
orl
je
mov
clc
sub
adc
sub
mov
mov
xchg
test
mov
push
mov
cmp
pop
adc
adc
mov
ss
mov
fistl
inc
and
and
mov
inc
xor
xor
cli
andl
and
dec
sub
stos
xlat
cwtl
mov
test
stos
mov
outsl
dec
test
or
roll
mov
in
aad
add
fstl
and
xchg
neg
repz
pop
add
sub
and
sub
sub
clc
adc
aam
xchg
es
cmp
jnp
cmp
mov
sbb
iret
pop
push
rcl
pop
cmp
xchg
loopne
jae
dec
pushf
mov
cltd
and
pop
pop
mov
repnz
and
rolb
rolb
push
ret
add
add
sbb
mull
test
dec
push
push
jle
adc
cmp
push
pop
xchg
lahf
clc
negb
xor
bound
imul
mov
stc
jns
sub
jmp
sub
push
pop
xor
inc
jge
repz
push
sti
cmpsl
add
push
cmp
xchg
mov
in
je
mov
sbb
nop
je
sarb
out
iret
mov
add
jbe
test
stos
sub
mov
mov
mov
mov
je
xor
mov
adc
push
je
ja
inc
inc
cltd
fcmovu
mov
sbb
aaa
push
cmp
or
add
jne
mov
dec
mov
ret
mov
divl
jb
aas
xchg
ret
inc
lods
lret
mov
push
xor
aaa
into
mov
push
inc
rol
push
inc
rorl
dec
icebp
dec
cmp
aaa
jp
adc
inc
imul
push
push
xor
imul
aas
insl
inc
outsb
inc
outsl
lret
jno
push
mov
xorb
aaa
fwait
cmp
hlt
inc
fwait
divl
mov
dec
dec
sbbl
dec
push
cwtl
cmp
dec
xchg
mov
xor
inc
cmc
cmp
addb
dec
inc
sbb
push
sub
imul
dec
jno
jno
jno
cmp
sbb
sbb
sbb
sbb
sbb
push
mov
mov
mov
pop
jmp
sbb
mov
shll
scas
hlt
cmpsb
les
inc
scas
nop
inc
enter
leave
rorb
rorl
test
fwait
int
inc
into
pop
ret
push
jno
jno
push
inc
add
mov
jns
xor
sub
sub
imul
jno
jno
jno
jno
xchg
push
aas
jno
jno
jno
aaa
pop
repz
mov
loope
fistpl
fcmovbe
jno
ret
lcall
fdivp
xlat
stc
mov
sbb
jno
stc
ret
test
mov
add
push
popa
fnstenv
in
xchg
add
imul
mov
pop
fsubrs
sbb
lds
pusha
call
dec
mov
dec
adc
push
mov
insl
mov
or
xor
ss
cmc
cmpsb
dec
imul
call
into
xchg
sub
pusha
dec
xor
xor
out
xor
xchg
or
test
ja
push
sub
std
mov
stc
mov
jo
pop
adc
sti
lds
fiaddl
fnstcw
push
or
ja
mov
jp
inc
lods
cltd
cwtl
pop
jb
xchg
jae
pop
jl
cli
es
mov
pop
arpl
cwtl
not
repz
std
scas
sbbb
dec
int
push
clc
movsb
iret
insl
sahf
andl
inc
orb
clts
mov
mov
mov
cltd
cmp
xchg
jg
mov
jns
hlt
fstps
add
jnp
xchg
sbb
inc
xor
push
fiadds
adc
fdivrs
iret
and
mov
data16
movsb
and
mull
cs
jl
loop
lcall
xchg
sub
push
xchg
or
popa
cmp
cwtl
xlat
call
mov
mov
cmp
mov
mov
cwtl
xchg
rcl
pop
jl
cmp
or
add
divl
inc
aaa
es
dec
cli
pusha
into
add
pop
mov
fidivrs
sbb
pop
push
shl
insb
mov
ds
xlat
adc
movsb
jbe
cmp
mov
pop
imul
fldenv
sbbl
sbb
ret
mov
mov
arpl
push
push
outsl
popf
pop
ss
mov
cmp
add
mov
mov
pslld
icebp
loopne
dec
cld
cmp
loop
and
mull
testb
call
imul
mov
and
notb
inc
cmp
clc
cs
je
push
test
cmp
cwtl
xchg
inc
cmp
clc
mov
cmp
aaa
mov
xor
pop
fld
cmp
mov
es
test
pop
inc
mov
mov
scas
nop
jns
clc
mov
inc
sub
aas
mov
loopne
aas
xor
int
pop
outsb
mov
mov
ret
icebp
xchg
lds
add
dec
pop
mov
inc
pop
enter
sbb
stc
js
cmp
enter
dec
pop
mov
fcomps
or
jmp
stc
pop
mov
xlat
lods
sub
cmc
pop
mov
or
enter
adc
jns
xchg
add
mov
add
aaa
pop
cmp
xchg
add
jne
js
mov
movsb
test
into
sahf
in
pop
mov
insl
aas
stc
je
js
dec
and
mov
popa
mov
mov
cwtl
jb
aas
shll
loopw
cmpsb
mov
dec
push
ljmp
xor
imul
jecxz
xchg
popa
lcall
incl
div
pop
xchg
dec
std
xchg
push
fimull
je
fcmovnbe
mov
sarb
and
or
dec
ss
pop
lock
mov
xchg
fwait
mov
dec
mov
mov
sbb
aaa
mov
sub
sub
stc
sbb
cmp
lret
pop
cmp
jp
xchg
insb
fildl
popa
cmp
or
jp
or
add
add
cmpsb
test
xchg
lahf
and
mov
pop
nop
js
and
dec
mov
xchg
dec
pop
push
or
test
sub
jge
dec
adc
cmp
jb
stc
shr
fisttpl
jne
js
imul
dec
sbb
pop
mov
es
mov
sub
jnp
xchg
mov
cmp
popf
push
xor
push
cmpb
mov
out
jle
mov
xlat
pusha
lret
cli
paddusb
jp
lock
pushf
and
add
aad
loopne
jae
rcrl
gs
pusha
xor
aas
sahf
lahf
mov
inc
adc
push
pop
push
cmp
jo
les
mov
dec
add
mov
pop
mov
sbb
mul
push
aas
shrl
mov
jp
std
lahf
pop
sbb
pusha
push
mov
mov
pushf
push
mov
movsb
stos
repz
mov
xchg
movsb
mov
jecxz
adc
cli
pop
dec
pop
addb
loopne
pop
pop
mov
ficoms
cmp
pop
aas
fdivr
mov
inc
lcall
rorl
add
mov
xlat
jns
lods
fadd
mov
fiadds
cmpsb
mov
mov
fnstenv
mov
sub
xchg
test
jge
arpl
add
jns
loop
cli
into
cltd
loop
pop
aam
inc
add
pop
ja
cli
aaa
fld
push
mov
inc
ja
ret
cwtl
cmp
pop
xlat
lods
nop
pop
fiaddl
fistps
popa
push
or
mov
sbb
leave
jo
xlat
pop
jns
ss
clc
sbb
cwtl
xor
jb
ss
dec
xlat
cmp
sub
out
cmpsb
adc
dec
into
jns
xchg
cwtl
mov
push
cmc
add
or
ret
add
add
xchg
ss
out
xchg
mov
jns
push
fsubrs
adc
add
das
mov
adc
or
sub
push
sub
addr16
inc
inc
neg
fildl
mov
repz
jnp
fsubrp
mov
xchg
movsb
pop
adc
jns
mov
mov
cmp
out
xchg
xlat
jle
adc
mov
adc
pop
inc
rclb
call
imul
sarb
sbb
rclb
pop
je
mov
int
jno
test
sbb
aaa
xorl
mov
mov
jns
pop
cmpb
xor
xchg
sub
mov
mov
outsl
mov
pop
lahf
cmp
leave
ja
outsl
mov
leave
mov
mov
jb
out
xor
ret
pop
popa
or
enter
ja
call
shl
sub
pop
sbbb
pop
out
fcomps
negl
sbb
movsl
cmp
adc
repz
add
ss
mov
inc
aad
idiv
out
ss
jno
testl
les
pop
xchg
int
dec
xchg
aam
mov
call
inc
lret
jl
fimull
jae
fisubl
sbb
cmp
cmp
js
data16
cmp
fwait
movsb
stc
aas
cmpsl
jle
xor
out
lods
sub
pop
inc
lds
mov
xlat
mov
lret
lods
xor
in
sbb
pop
cmp
mov
xchg
jecxz
aas
xchg
lea
pop
dec
sti
pop
out
inc
repz
jmp
fistl
mov
pop
xchg
mov
decb
mov
mov
movsb
mov
call
out
sbb
sbb
xor
or
inc
lea
pushf
mov
lret
pop
imul
cltd
push
jns
clc
jb
or
jecxz
pop
sarb
scas
mov
cmc
iret
cwtl
cmp
aaa
cmp
pop
jle
cmp
aad
sahf
jae,pn
dec
pop
or
jns
sub
ljmp
ja
mov
out
fnsave
push
cmp
dec
adc
ljmp
and
movsb
xlat
inc
xchg
dec
sub
lahf
adc
mov
loopne
jnp
and
dec
inc
cmc
outsl
pusha
mov
pop
jnp
fildll
lods
mov
or
push
xor
sti
cmpsl
mov
fwait
test
not
jns
jne
cs
leave
and
xor
add
cld
mov
ret
ss
mov
jp
add
sbb
fidivrs
and
pushf
fisttpll
lahf
and
ja
and
mov
ja
imul
lds
idivl
lods
ret
pop
add
xlat
fcompl
aad
nop
jae
test
xchg
pop
das
imul
movb
icebp
clc
xor
xor
scas
pop
int
mov
sbb
movsl
xor
stc
pop
cltd
scas
inc
cmp
test
sbb
mov
push
push
mov
sbb
inc
mov
jbe
inc
cmp
fsubr
scas
cmp
hlt
add
ss
mov
ss
addl
shll
pushf
test
inc
sub
sbb
bound
push
sub
mov
pop
movsb
shlb
fidivrs
nop
mov
xchg
enter
repz
cmp
push
mov
jg
in
or
nop
stos
inc
mov
gs
pushf
xor
fwait
shlb
test
call
jbe
and
cwtl
lods
lods
inc
adc
cmpsb
jne
sarl
add
push
mov
cmp
push
pop
aad
cmp
or
aad
xor
push
mov
mov
xchg
shl
pop
sbb
mov
clc
insl
sbb
ja
sarb
cmp
cmp
sbb
test
dec
sbb
cli
jp
sti
jbe
cmp
mov
jecxz
mov
out
mov
push
jge
jmp
push
xorb
xor
add
pop
insl
mov
or
mov
xor
arpl
fcmovnbe
mov
xchg
js
mov
mov
std
lret
xor
mov
into
je
shr
sbb
fadds
fisubrs
ret
xchg
leave
add
jbe
sub
pop
scas
inc
xor
push
pop
push
lret
xchg
daa
imul
push
push
into
test
push
int
fs
inc
jge
insl
xchg
js
test
nop
jg
aaa
sahf
decl
and
inc
push
mov
ds
mov
pop
mov
pop
push
add
in
sbb
or
pop
pop
aaa
les
jno
push
cwtl
pop
sbb
or
mov
ficompl
cmpsb
and
mov
or
mull
or
sub
jle
push
cltd
ss
jecxz
ljmp
dec
mov
dec
lods
push
sbb
xchg
in
xor
push
sbb
xchg
pusha
jae
mov
rorb
pushf
sub
inc
testb
loop
ss
mov
mov
or
out
jnp
icebp
out
clc
and
sbb
push
addb
lret
out
daa
mov
mov
cld
fxch
outsl
imul
sbb
out
in
and
sub
cmp
push
cmp
clc
lock
mov
xor
or
xor
pop
fdivrl
xor
jle
lcall
pop
jge
in
mov
rol
mov
out
std
pop
cli
idivb
in
cwtl
fnstcw
mov
cltd
jmp
pop
or
lods
pop
in
cli
sub
lcall
aas
mov
pop
add
xor
cld
lcall
jle
mov
iret
in
movsb
mov
ja
adc
mov
mov
mov
mov
shrl
outsl
add
pop
mov
jmp
pop
mov
je
lods
int3
add
mov
enter
xchg
aam
nop
jno
xor
js
out
es
and
xlat
push
cmp
jg
clts
pop
sbb
cld
xor
ficompl
js
adc
mov
test
negl
pop
sbb
add
movsb
gs
movsb
pop
clc
movsl
in
add
out
cmp
mov
mov
or
add
imul
mov
sarb
test
mov
and
add
cwtl
pop
iret
pop
dec
gs
sarb
pop
addr16
mov
cltd
add
cmc
mov
add
fstps
pop
in
imul
xor
sbb
mov
sub
mov
jle
fbld
mov
and
pop
fdivl
mov
lea
mov
inc
adc
aaa
cld
jp
imul
negl
cmp
push
shr
push
fcoms
cmc
inc
xor
jo
clc
and
fnstcw
sub
das
cmpb
clc
mov
sbb
cmp
stos
lret
nop
test
sub
test
pop
jge
push
add
cmpsl
mov
add
sub
pusha
dec
dec
xor
mov
pop
mov
in
test
sub
mov
es
les
cld
jae
fistpll
inc
scas
xchg
sbb
xlat
adc
scas
pop
jl
add
mov
fidivrs
in
add
xor
xlat
mov
outsl
pop
xor
jmp
outsl
lods
fwait
stos
sbbb
pop
imul
mov
jo
fistpl
pop
fcomps
addr16
pop
and
insb
aas
lods
jp
pop
cmp
add
fstp
mov
mov
into
icebp
mov
mov
mov
out
and
jge
push
cltd
mov
add
sub
pop
jns
arpl
sbb
add
cmc
lods
loop
es
sbb
and
vminss
jns
ss
mov
out
pop
pop
mov
cmp
inc
or
popf
lock
jo
hlt
inc
out
cld
fisubrl
adcb
mov
lcall
pop
loope
imul
push
mov
sbb
pushf
cmp
sbb
jp
fdivs
sbb
cmp
aas
lods
in
add
xchg
outsl
js
sub
mov
sub
inc
sbb
movsb
sub
push
mov
xchg
push
shl
out
pop
push
scas
nop
mov
or
roll
sbb
daa
out
sbb
pop
fisubl
add
mov
xor
jne
lcall
in
dec
xchg
rorl
jl
jae
std
les
mov
in
lret
loopne
or
test
lahf
dec
popa
mov
lods
in
xor
push
cmp
add
in
in
rorb
cmpsl
into
sub
fdivrs
fwait
lods
loopne
pop
loop
mov
std
loopne
js
mov
adc
cmp
movsl
rcrl
adc
pop
mov
sbb
mov
fcompl
or
les
jmp
aaa
insb
sub
xlat
push
in
in
leave
sbb
leave
xchg
adc
pop
sbb
sub
push
in
dec
dec
sub
push
inc
popa
imul
inc
pop
cld
mov
add
xchg
sub
je
jo
xchg
ds
mov
mov
mov
stc
filds
aam
fsubrs
mov
leave
ds
pop
insl
adc
les
cmc
pop
mov
leave
adc
cmp
clc
es
aad
pop
int3
sub
out
xor
jg
pop
cmp
popa
outsb
inc
xor
pop
pop
mov
cld
sub
jno
std
add
or
inc
push
mov
adc
and
add
aas
ja
mov
out
jo
incb
add
and
or
xchg
xorl
lret
adc
imul
add
insl
test
imul
mov
cmp
pop
lds
lahf
or
jnp
ret
popf
lret
clc
cmpsl
sbb
pushf
pop
sti
sarl
fwait
aaa
pop
push
into
jo
add
test
popa
sbb
jle
mov
sbb
mov
xchg
push
inc
or
lea
ret
cmp
nop
loope
sub
in
enterw
in
push
test
testb
cs
mov
fwait
add
xadd
cmpsl
xor
outsb
std
pop
sarb
pop
fsubr
imul
and
lods
xchg
mov
pushf
jp
add
imul
mov
cmpb
mov
test
jmp
testl
lahf
dec
sahf
call
fimuls
mov
iret
mov
add
jl
add
pop
cmpsb
cltd
or
or
arpl
inc
faddp
xor
pop
cmpsl
mov
jp
jl
cmp
pop
xchg
sti
pushf
fdivrl
mov
and
dec
pop
push
jp
sbb
pushf
jnp
lret
jb
cli
jl
cmp
andb
cmc
pop
dec
mov
cli
sbb
lds
cmp
sbb
pop
loopne
mov
mov
addr16
pop
xorb
mov
pop
pop
pop
jge
mov
xchg
out
and
dec
jl
popa
lcall
cmpl
mov
jnp
outsb
jg
cs
sti
fistps
lahf
mov
stos
sbb
cmp
adc
dec
test
andb
xchg
inc
pop
sarl
jle
cld
fcompl
aas
stc
sub
aad
jmp
pop
clc
sbb
jg
mov
fistpl
aad
lcall
jp
xor
pop
fadds
pushf
cmp
pop
pop
test
repnz
push
jp
jnp
xchg
pop
int3
clc
push
sbbl
int3
cmc
lahf
dec
sbb
xchg
fdivs
jge
loopne
cld
and
jg
cmp
pop
ds
xor
ds
lds
sbb
mov
popa
pushf
aas
sbb
lahf
sahf
sbb
ficoml
inc
jnp
fistpl
mov
inc
inc
cli
fidivrl
sbb
repz
lahf
pop
mov
xchg
inc
popa
fcompl
xchg
pusha
cwtl
fstpt
mov
sbb
sbb
pop
jle
cli
ds
mov
sti
pop
dec
sbb
jp
mov
dec
mov
mov
pop
add
sbb
inc
mov
mov
fcompl
fidivrs
js
sahf
pusha
cld
dec
lahf
lcall
jge
clc
cwtl
xchg
fdivs
fwait
jb
fidivrs
inc
lds
fwait
and
xchg
xchg
fistpll
cltd
pop
fdivr
mov
cmp
xchg
mov
push
cli
cmp
cld
aas
mov
and
ds
fidivrs
lcall
dec
faddl
incl
mov
pop
shl
sbb
sahf
cld
lds
jg
sbb
cmp
jge
into
adc
sahf
je
and
cli
sbb
push
aas
mov
fcomps
iret
dec
jae
pop
cmp
xor
cmp
pop
pop
loopne
jg
xchg
xchg
add
jle
lods
fidivs
fiaddl
mov
pop
xchg
cmp
pop
popa
sbb
jle
cltd
adc
pushf
pop
cld
inc
inc
jg
jns
sbb
aad
cmp
js
jnp
pop
inc
pop
mov
pop
xor
pop
aas
fwait
jge
pop
mov
jle
fdivs
cmpb
pop
je
mov
ficomps
mov
stc
mov
pop
ret
pop
fwait
daa
pushf
push
aas
inc
jl
jl
adc
mov
cmp
lahf
ficompl
sbb
xor
faddl
and
inc
pop
mov
xchg
pop
pushf
jb
pop
jg
pop
or
and
cmp
cmp
cwtl
fdivrl
fildl
mov
andl
cmp
clc
icebp
pop
jg
jnp
cli
cmp
cmp
loopne
dec
cmc
sbb
aas
xchg
mov
and
jmp
or
aas
xor
popa
jl
fcmovnb
cld
loopne
cmp
negb
jg
and
inc
mov
cmp
aaa
int3
and
cli
jp
fidivl
sub
dec
clc
inc
jl
jge
fistps
inc
sarb
data16
and
fwait
jl
fdivrl
push
jp
pop
ret
sbb
lcall
fcomi
pop
jl
jb
cmp
inc
arpl
and
andl
mov
cmp
pop
xor
inc
xor
pop
cmpsl
mov
stos
adc
inc
jnp
cwtl
pop
aas
push
ljmp
xor
pop
cli
sbb
jp
lcall
int3
jl
dec
out
sti
adc
add
cmp
pushl
and
jnp
jns
push
inc
shll
dec
pop
cwtl
mov
lds
xchg
adc
cmp
add
xchg
loopne
sbb
cmp
fcom
jg
adc
sbb
lcall
cmp
pop
cmc
cmp
pop
mov
pusha
inc
cmp
jns
and
cmc
fidivrs
mov
repz
jl
jge
ficoms
add
cmp
mov
and
xor
push
sub
andl
mov
mov
mov
fdivrl
jnp
cmp
pop
inc
mul
imul
ss
nop
jg
sbb
mov
imulb
or
push
ret
inc
cmp
cmp
dec
mov
inc
xchg
pop
add
mov
fistpl
mov
aas
xchg
sti
jne
rclb
jl
pop
iret
stos
hlt
fmull
sahf
sbb
dec
dec
mov
jp
cmp
js
sbb
mov
push
ss
mov
pop
fadd
sbb
cld
fisubs
mov
orl
cmp
pop
fisubrl
xor
or
rcl
pushf
js
xor
mov
cmp
out
mov
pop
cmp
cmp
add
adc
out
rcll
mov
cld
js
jle
fldenv
push
or
pop
inc
add
fidivs
inc
fstpt
push
jp
mov
and
jl
sbb
pop
dec
lcall
mov
clc
sbb
fidivs
mov
js
pop
scas
add
clc
pop
sub
bound
sbb
pusha
adc
mov
jp
call
pop
xchg
arpl
adc
cld
pop
cmc
xor
pop
js
sahf
dec
pop
stos
call
inc
pop
fidivl
fwait
pop
cmp
mov
jg
pusha
pop
sbbb
fdivl
add
jne
ficoml
sbb
popa
fsubrs
mov
jo
mov
cmp
negb
mov
andl
jo
cli
pop
lret
dec
push
inc
sub
pop
js
ret
add
jg
jle
mov
loop
fcomps
pop
popl
cmp
out
jle
cmp
fcompl
fsubl
ficomps
icebp
movsb
cwtl
cmp
pop
cmp
fucomip
jle
cli
lret
xor
pop
mov
inc
mov
inc
test
cmp
mov
cmp
pop
pop
incl
pop
loopne
pusha
jbe
dec
stos
jl
js
incb
idivl
idiv
pushf
xor
jle
mov
loopne
mov
add
pop
cmp
jle
aad
pop
sbb
push
jg
pop
stc
loopne
aaa
pop
test
shll
push
popa
popl
inc
mov
jge
lret
mov
repz
pop
add
pop
pop
pusha
movsb
aaa
ja
pop
cwtl
mov
lahf
mov
sar
jnp
jl
pop
jp
hlt
push
mov
ljmp
sub
pop
shlb
mov
lret
ja
pop
addl
insb
movsl
pop
outsb
pop
fwait
mov
mov
cmp
sbb
cmp
fwait
jne
mov
popa
scas
xchg
lds
shl
adc
rorb
pop
inc
dec
mov
push
aas
pop
cmp
sbb
mov
cmp
pop
mov
mov
fidivrl
xchg
xor
pop
lcall
push
mov
test
idivb
cmpsb
ret
or
lcall
mov
ret
bound
ficompl
pop
mov
lcall
call
loop
sbb
icebp
aad
sti
aas
pop
xchg
fisttpll
mov
fisubrs
push
pusha
pop
xor
pop
jnp
jno
add
dec
jmp
or
pop
mov
arpl
xor
inc
jp
fwait
inc
mov
inc
ds
sarl
shl
hlt
mov
sahf
sbb
mov
add
xlat
mov
pop
cmp
jle
cld
cwtl
scas
lods
int
outsl
aad
mov
mov
pop
inc
imul
lods
mov
fstpt
cmp
sbbl
repnz
inc
xchg
outsl
adc
pop
pusha
fiadds
sarb
push
int3
mov
lret
xlat
cmp
jg
mov
js
lds
jbe
cmp
xchg
pusha
ja
mov
pop
cwtl
inc
jp
fdivl
sbbl
into
mov
mov
cmp
fwait
mov
sti
cwtl
cmc
jb
jle
enter
ret
mov
xchg
sbb
negl
lcall
ret
lret
arpl
test
dec
mov
pop
dec
xlat
hlt
lahf
clc
das
mov
jp
bound
jl
mov
lods
mov
push
adc
sbb
cmp
mov
pushf
pop
insl
lcall
and
scas
inc
daa
pop
into
pop
push
add
pop
jg
sbb
int
jmp
pop
out
rol
pop
cmp
inc
mov
pusha
das
loope
cld
fisttpl
mov
out
subl
dec
jl
pusha
push
lcall
and
int3
lds
pusha
cmc
mov
xchg
cmp
sti
and
xchg
jbe
jnp
inc
aas
inc
pushf
mov
mov
cmp
and
pop
std
lds
fwait
pop
mov
cli
sbbl
xchg
pop
adc
clc
pop
pop
cmp
sbb
jg
bound
push
pop
pop
mov
mov
xchg
cmp
fisttpll
sbb
cwtl
sbb
add
pop
mov
insb
loop
pop
pop
push
jle
jnp
cmp
sti
pop
jo
fidivrl
adc
lcall
pop
cmp
and
mov
ret
push
loopne
adc
jp
pop
mov
xchg
mov
mov
and
fistpl
sbb
pusha
push
pop
inc
mov
sbbl
pop
ds
jl
hlt
lcall
jge
mov
jns
pushf
sbb
mov
mov
jb
cmc
cmp
mov
cmc
jl
pusha
sbb
sbb
clc
or
addl
arpl
sub
push
inc
sarl
rclb
insb
lods
push
jl
stc
orb
dec
add
xor
pusha
aad
mov
xchg
xlat
sti
xorb
add
fiadds
subb
pop
mov
pop
push
and
sbbb
daa
test
dec
cmp
clc
scas
out
fsubrs
repz
sbb
mov
loop
jnp
mov
sbb
xor
xor
or
and
sbb
sbb
adc
sahf
mov
pop
mov
gs
mov
popa
lcall
push
cwtl
fcomps
js
pop
inc
cmp
movsl
stos
mov
lcall
or
pop
aaa
xchg
sbb
xchg
popa
pusha
pop
scas
pop
mov
inc
add
aaa
pop
sbb
popa
mov
sbbb
pop
cmp
cwtl
adc
sbb
pop
push
pop
lcall
sbb
js
jl
jge
repz
cld
mov
sbbb
js
outsl
xorl
popf
dec
fnstenv
mov
stc
cmp
mov
sti
sbb
fwait
pop
pop
sbb
jle
pop
jle
adc
sti
pop
and
sti
lcall
sahf
sbb
lcall
fidivrl
jo
xor
pop
pop
pusha
mov
adc
lcall
jns
cmp
idiv
mov
push
js
sahf
jge
xchg
pop
pop
xor
loopne
sti
push
cmp
pop
loopne
push
jge
cmp
fistpll
rclb
xchg
fsub
pop
jle
pushl
call
lds
cmp
dec
jle
inc
add
sarl
pop
shll
jge
sub
aaa
lcall
inc
or
mov
pop
sbb
rcr
fdivrs
mov
js
enter
jl
inc
fwait
icebp
push
popa
inc
shlb
hlt
sub
mov
pusha
cmp
data16
sbbb
sti
imul
sahf
mov
jnp
dec
sahf
add
mov
and
push
das
push
ja
rcrb
xorl
lea
xchg
ljmp
cmp
inc
mov
dec
pop
xchg
fistpll
jae
push
dec
mov
jge
sbb
add
cwtl
dec
push
loope
dec
mov
pushf
mov
add
popa
and
jge
sahf
jg
jnp
and
out
sbb
aas
cmp
lds
fmul
cmc
sbb
cwtl
pop
dec
lea
inc
mov
cli
mov
fidivrs
daa
cmp
fists
cmp
jb
xchg
clc
dec
or
sarb
arpl
pop
sahf
cwtl
mov
dec
pushf
icebp
jmp
ss
cmp
fsubp
inc
inc
stos
test
fldt
dec
mov
pop
mov
je
pop
and
sar
mov
jl
shll
inc
cwtl
pop
ds
inc
sbb
gs
xchg
cmc
jge
xor
scas
rol
pop
je
xchg
jge
push
pop
and
pop
arpl
fcompl
stos
or
loopne
cmp
clc
stc
fidivrs
and
mov
clc
fdivr
inc
cwtl
xchg
cmpl
inc
test
lahf
mov
jbe
imul
jp
mov
cwtl
jnp
dec
mov
pusha
dec
dec
pushf
pop
inc
pop
ficoml
mov
pop
mov
shrb
sbb
xchg
sbb
fwait
push
fwait
jge
popa
pop
das
add
mov
cwtl
pop
inc
pop
xchg
mov
ficompl
adc
popa
cmp
and
cmp
cmp
add
jnp
stos
cli
aas
insl
pop
pop
add
sbb
mov
jp
lcall
inc
cmp
inc
push
fstpl
cmp
pop
sbb
inc
pop
fistps
or
sbb
and
add
cmp
jge
idivb
pop
pop
pop
jge
inc
cli
cmp
jo
sbb
aas
pop
lcall
sub
inc
adc
mov
jo
dec
rcrb
fists
jle
loopne
mov
jg
gs
jl
sahf
mov
popa
fists
in
jle
rorl
pop
mov
add
pop
and
pop
clc
ret
test
outsb
jmp
jmp
or
and
dec
lds
jle
add
cmp
mov
mov
pop
xor
ret
add
notl
mov
or
cmp
ds
aas
das
sbb
push
js
pop
jle
pop
ss
mov
xchg
or
mov
cmp
mov
pusha
cmp
jne
ffreep
dec
mov
sbb
fldl
mov
and
inc
push
sar
fidivl
pop
xor
pop
mov
sbb
clc
inc
cli
aad
fistpll
cld
jb
sti
sbb
flds
ljmp
cmpl
loop
js
lcall
jp
popa
jo
lret
mov
fdivrs
mov
jp
xchg
sahf
das
and
loopne
js
frndint
add
cmpb
push
clc
cmp
int
mov
faddl
pop
negb
adc
pop
pop
cli
mov
fwait
cmp
popa
sbb
mov
sbb
jg
fmul
jge
inc
cmpsl
inc
cli
jno
mov
je
mov
fdivs
xor
jnp
jge
pop
call
cli
popa
mov
loopne
cld
fdivrl
add
dec
mov
cmp
cmp
sahf
push
stos
inc
stos
pop
mov
aas
repz
sbb
cmp
pop
sbb
pop
jl
aaa
add
pop
xor
outsl
xchg
mov
push
dec
inc
mov
pop
lds
out
int
fwait
inc
cmp
inc
loope
inc
and
aad
pop
pop
mov
mov
jl
adc
gs
pop
imul
sar
pop
push
jge
xchg
pop
adc
insl
aas
cmp
sbb
sbb
mov
dec
mov
cwtl
outsb
inc
out
cmpsb
pop
mov
xchg
lret
pushf
arpl
and
ss
jnp
jle
mov
push
add
pop
xor
add
popa
fadd
clc
xor
pusha
inc
push
cmp
pop
cmp
and
pop
lods
icebp
xor
adc
mov
cmpl
and
stos
fcoms
pop
push
pop
push
jl
and
sbb
bound
fistps
sub
jl
sahf
cmp
inc
sub
push
inc
xchg
js
sbb
ficompl
or
pop
xlat
pop
fildl
cmp
rclb
sarl
enter
cmp
lcall
cmp
add
push
pop
cwtl
cli
pop
aas
push
sti
pusha
cmp
rorb
cmp
jge
mov
sbb
mov
fidivl
push
pop
fcom
cmp
imul
mov
xchg
cmp
into
mov
test
pop
adcb
fdivr
or
xchg
loopne
aas
mov
lock
mov
ds
les
je
push
inc
loopne
sbb
enter
idivb
or
xor
clc
pop
pop
mov
pop
gs
sti
rol
fisubrs
jo
stc
cmp
fidivrs
xchg
lahf
cmp
hlt
pop
fidivrs
pusha
loop
mov
sbb
dec
jae
mov
sti
loopne
cmp
jno
orl
lahf
test
dec
cmpb
cmp
mov
push
pop
cwtl
fdivp
inc
pop
js
mov
mov
fistps
mov
jge
sbb
push
jno
jns
jns
add
jp
cwtl
mov
shlb
shlb
jl
adc
jnp
lret
jae
sti
insl
ss
idivb
mov
mov
mov
add
iret
popa
inc
dec
bound
cmp
fwait
int3
dec
addr16
jb
and
sarb
cmp
lret
ss
mov
cli
divl
sti
js
loopne
jge
inc
adc
pop
sarb
cmp
inc
ja
mov
adc
fists
add
jmp
mov
pusha
adc
popf
mov
inc
bound
cmp
lahf
mov
mov
cmp
adc
cmp
mov
es
pop
fstl
pop
mov
cltd
sar
loop
xor
push
jb
popa
jp
jge
call
jl
pop
mov
cmp
fdivrs
sbb
aaa
iret
aaa
pusha
mov
and
fdivs
out
addb
sub
dec
xchg
cmp
faddl
popf
or
xor
dec
add
cmp
cmp
xor
pushf
mov
inc
cmp
cmp
and
sbb
dec
sbb
jp
sahf
inc
arpl
lcall
decb
clc
loopne
inc
mov
nop
fdivl
aaa
pop
pop
pushf
outsl
scas
add
fwait
adc
pop
push
cmpb
xor
pop
pop
pop
fsubl
mov
test
mov
pop
sbb
lods
mov
fwait
cmp
xor
sahf
mov
mov
xor
add
sbbb
in
clc
mov
cmp
cmp
pop
loopne
xchg
ja
scas
test
cwtl
loopne
add
fdiv
sbb
pop
lcall
fcomip
xchg
sbb
mov
cmp
gs
mov
cli
fisubrl
aas
pop
repz
fistpll
pusha
cmpsl
dec
divl
pop
xchg
pop
and
or
cmp
cld
inc
lret
xchg
dec
pop
pop
inc
fcmovb
mov
scas
loope
sti
mov
jae
lods
xlat
xor
cli
cmp
push
fwait
xor
adc
sub
cmpsl
pop
inc
lahf
cmp
sbb
mov
stc
andl
cmp
push
sbb
sub
xor
pusha
cmp
fidivrs
jnp
cltd
xchg
icebp
rcrl
outsb
pop
shll
cli
cmp
ljmp
pushf
popa
inc
loopne
ds
sbb
cwtl
cmc
mov
pop
je
enter
int3
dec
mov
xchg
push
ret
dec
mov
stos
and
fnstcw
idivb
shl
sahf
rcrb
cmp
cld
dec
cmp
idivl
and
xor
mov
rclb
inc
fiaddl
popa
jge
dec
ljmp
into
sti
lcall
mov
repz
or
jp
jnp
movsl
andl
fdivr
bound
add
leave
jae
popa
leave
sbb
mov
cmp
push
add
jp
pop
cmpsl
and
fcmovu
sarb
add
imul
idiv
and
pop
and
jnp
cmp
xchg
xchg
adc
jns
jle
popf
jg
inc
sti
sbb
fcoml
loopne
dec
sbb
je
outsb
mov
mov
cld
sahf
inc
mov
test
jp
ficoms
mov
xchg
cmp
cld
loopne
decl
fidivs
pop
ficomps
cmp
pop
mov
add
dec
fwait
lock
jbe
jle
pop
fldt
lcall
sbb
mov
mov
outsb
sbbl
pop
stos
ljmp
out
push
cli
sbb
enter
pop
rcrb
ja
mov
mov
sbb
mov
inc
jge
mov
popa
pop
cwtl
jnp
jge
inc
dec
sbb
stos
mov
outsb
push
and
cwtl
xchg
xchg
pushf
add
inc
cmp
inc
cmp
clc
cld
pushf
jnp
outsb
push
inc
jg
jp
jns
fwait
lahf
incl
gs
and
push
fstl
cmp
pop
pusha
out
cmp
loopne
fistpll
mov
sbb
jbe
sbb
mov
fidivrl
scas
add
cmp
inc
cltd
pop
mov
xchg
test
dec
mov
cli
aas
cmc
fidivrs
inc
out
mov
mov
mov
add
pop
cmp
xlat
js
inc
jnp
fistpl
popa
inc
testb
cmp
dec
bound
cmp
addl
sub
imul
jg
jnp
pusha
add
cmp
sbb
push
push
inc
sbb
mov
cwtl
cltd
cli
icebp
dec
loopne
push
mov
nop
stos
rcrl
jb
add
dec
hlt
mov
cmp
push
jg
outsl
or
cmp
cmp
push
shll
fdivrl
fisubrl
jo
mov
xchg
in
jae
push
pop
jecxz
mov
fidivrs
les
mov
pop
addl
mov
fwait
jp
loope
out
outsl
lahf
mov
pop
into
fldenv
add
cmp
mov
out
outsl
inc
and
mov
mov
cmp
mov
push
cld
cli
xchg
lock
stos
jg
aas
sbbl
push
dec
xchg
repz
sbb
clc
fidivrl
pop
add
inc
lds
adc
imul
js
sbb
inc
dec
pop
mov
pop
jg
fildl
fcoms
aas
inc
push
jp
adc
lcall
jnp
add
add
inc
mov
pop
js
add
mov
inc
ret
inc
pop
sbb
push
pop
cmp
mov
sbb
adc
sbb
pop
xchg
mov
mov
mov
flds
les
or
jb
mov
hlt
mov
jnp
dec
cmpl
jl
pop
inc
cld
movlps
mov
mov
loopne
inc
xchg
adcb
insb
xchg
cmp
repz
sbbl
jle
pop
pop
mov
and
mov
rorb
cmp
adc
mov
jnp
push
adc
negl
fwait
push
adc
repz
js
in
jle
add
fdivrp
jp
mov
pop
cwtl
hlt
sti
and
popa
mov
push
jl
sahf
sbb
cmp
jle
sarb
mov
pushf
mov
das
cmp
jns
mov
pop
sti
jl
cmp
pushf
fadds
mov
inc
cmp
mov
lds
notb
cmp
pop
dec
ds
mov
enter
pop
pop
in
ret
imul
xor
fistpl
jne
adc
or
mov
in
pop
sbb
add
sbb
cmp
js
fisubs
cwtl
mov
mov
lahf
cmp
add
mov
lds
add
pop
clc
sti
cmp
js
mull
cmp
fwait
inc
aad
clc
adc
adc
inc
pop
scas
and
stc
inc
adcl
push
mov
pop
fsubrl
ficoml
subb
cwtl
outsb
sbb
xchg
inc
aas
sahf
pop
add
and
mov
rcr
xchg
mov
jge
cmpsb
test
sti
inc
mov
mov
cs
and
cli
sti
fdivrl
ljmp
sub
in
mov
cwtl
jae
inc
incl
clc
mov
jge
sti
dec
fcoml
loop
cmc
loope
or
pop
fisubrs
ss
pop
pop
mov
ljmp
cmp
jp
cmp
popa
cli
dec
inc
pusha
aas
mov
cmp
inc
xorb
jp
push
sahf
xchg
mov
lahf
or
dec
push
pop
pop
fwait
mov
pop
not
stc
jae
pop
inc
enter
mov
pusha
push
lcall
ret
scas
neg
fs
clc
mov
and
popa
loopne
mov
cmp
ds
xor
cli
sarb
pop
fisubrs
mov
xor
jp
xlat
daa
iret
mov
cmp
rclb
clc
jg
ds
adc
jge
subb
inc
pusha
inc
pushf
adc
ficompl
jge
outsb
xor
imul
fistpl
popa
pop
cmp
decl
sti
cmp
add
push
xor
lds
lea
roll
jecxz
jp
pop
dec
mov
fwait
cmp
repz
nop
hlt
pop
xchg
xchg
dec
mov
push
cld
xchg
jge
cmp
and
mov
and
sbb
and
dec
lds
clc
pop
cld
cmp
push
lret
sarb
ficomps
in
mov
lea
pop
mov
push
pop
cwtl
lcall
ja
aaa
jp
pop
mov
filds
sbb
mov
aad
pop
fstpt
cmp
lret
cmp
or
outsb
loop
pop
sub
push
js
andb
mov
lcall
inc
fildl
and
cld
xchg
fwait
adc
pusha
xchg
loopne
pop
xor
inc
nop
test
inc
inc
mov
out
divl
sub
pop
js
fmulp
test
mov
adc
cld
hlt
sub
jae
inc
and
cwtl
jle
jbe
sbb
and
sbb
jns
mov
xor
mov
pop
fcomp
loopne
mov
addr16
inc
inc
push
mov
fidivrl
sbb
lcall
jl
data16
loop
pop
jnp
iret
jno
inc
adc
sahf
dec
fsubs
mov
pushf
add
test
mov
cmc
sub
imul
sti
pop
mov
cmp
fidivrs
pop
cmpb
stos
insb
movsb
jg
ret
fbld
add
pop
lcall
lds
fists
sbbb
adc
xchg
idiv
leave
ds
pop
pop
dec
aam
cmp
daa
inc
add
sbb
pop
inc
scas
mov
mov
mov
sbb
xchg
pop
push
or
in
push
lcall
aas
pusha
jecxz
and
mov
fisubrs
lahf
jl
inc
data16
jge
add
pop
push
test
ret
dec
hlt
js
hlt
mov
in
fdivrs
cmp
pop
jmp
pusha
jo
cmp
cmp
js
jge
orl
je
xchg
jne
inc
mov
hlt
cwtl
and
es
sub
sahf
faddl
int3
dec
add
cmp
out
jb
cmp
jg
adc
mov
mov
fdiv
loop
and
mov
data16
or
cmp
mov
inc
mov
pop
adc
jp
hlt
pop
xchg
pop
shrb
add
lcall
mov
call
xchg
lahf
popa
mov
mov
sbb
orb
cwtl
inc
and
lock
mov
fwait
mov
inc
xor
and
int
stc
pop
out
inc
insl
adc
jl
lret
mov
test
sti
sbb
dec
adc
pushf
push
xchg
js
loop
pop
lret
jl
pusha
decl
mov
push
mov
pop
xchg
sub
nop
jle
arpl
jae
je
xchg
clc
xor
and
inc
fwait
pushf
mov
pop
cmp
or
pop
sbb
sarb
pop
pop
adc
push
jg
arpl
cmpb
dec
pop
pop
add
pusha
pusha
negb
mov
mov
push
aas
inc
sti
cmpl
xchg
push
mov
inc
ficomps
sahf
sbb
aaa
sbb
xor
cwtl
lds
pop
mov
pop
jle
and
sbb
lahf
jge
pop
jne
sti
cld
inc
and
les
js
mov
adc
pop
sub
lock
jg
jp
lcall
dec
lods
loope
fwait
adc
inc
lcall
push
jns
andb
sbb
jp
bound
mov
mov
arpl
repnz
mov
popa
jo
and
aaa
cmp
jb
jnp
mov
ss
mov
pop
push
cmp
mov
lret
ret
or
ficompl
jp
mov
arpl
in
mov
mov
inc
push
mov
mov
ret
mov
pop
lahf
loopne
pop
popa
sahf
sub
movsl
xor
inc
imul
jp
push
mov
cmp
stos
test
roll
sbb
mov
fisubrs
push
adcb
je
fwait
incl
inc
push
cmp
cmp
mov
mov
js
mov
cmp
jle
fcomp
push
pop
lahf
scas
push
jmp
and
cmp
loopne
pop
cmp
aaa
jmp
push
adcb
aas
pop
pop
fistpll
add
jle
and
and
jp
jle
jp
cmp
cmp
ret
mov
mov
repnz
pop
pop
fidivrl
cwtl
cmp
cli
aas
pop
push
xchg
ds
sbb
pop
fists
inc
pop
jnp
jle
faddl
lea
and
push
mov
mov
mov
mov
clc
lcall
sbb
lret
push
sahf
push
mov
lea
push
jg
pop
cwtl
subb
das
rorb
incl
jns
jnp
pop
sbb
rcrb
mov
jle
cmpl
jae
sbb
jle
push
sar
jg
inc
pop
and
pop
jge
mov
fwait
mov
cmp
and
xor
pop
adc
add
mov
cltd
sarl
jmp
dec
stc
ljmp
data16
pop
mov
jl
out
ljmp
pop
and
lahf
xchg
push
pop
push
ja
push
and
xchg
inc
incb
inc
mov
jae
pop
cmp
xchg
inc
clc
and
fisubs
cmpb
mov
mov
xchg
mov
pop
iret
or
lds
cli
into
dec
xchg
aas
rorb
loopne
out
lcall
cmp
lahf
sbb
pushf
stos
xor
inc
xchg
fidivrs
sahf
das
cwtl
and
cmp
hlt
fidivl
adc
push
mov
outsl
sarb
mov
popa
fadd
fnsave
xchg
pop
fsubrs
pusha
fistpll
mov
pop
adc
lahf
call
xchg
stos
pushf
mov
sbbb
hlt
mov
out
cmp
cmpsb
incl
pop
pop
rolb
enter
pushf
cwtl
outsb
adc
pop
fs
mov
psubb
sbb
inc
lret
popf
sti
shrb
push
mov
add
add
aas
int3
sub
add
cmp
lahf
lds
popaw
inc
mov
icebp
jmp
inc
dec
pop
pop
loopne
adc
mov
mov
fistps
xor
cmp
fwait
jp
sbb
mov
mov
insb
jl
xchg
jnp
fsub
aas
pop
xchg
lds
fidivrl
dec
add
pop
lock
pop
cmpb
pop
sub
jno
outsl
stc
fdivrl
sub
sbb
andl
lea
fildll
mov
ficompl
addb
imul
pop
inc
fs
mov
or
pop
mov
and
sbb
rclb
inc
popa
inc
jb
addl
out
lock
fsubl
rcl
cmp
sbb
mov
jne
sahf
repnz
cli
pop
fmull
fidivl
je
mov
mov
mov
sbb
push
jge
add
and
mov
je
sbb
lret
js
xor
in
fidivrl
inc
and
sbbl
inc
ret
mov
push
je
push
ficomps
repz
lret
push
mov
mov
jge
sti
jle
sbb
pop
fstpl
fiaddl
pushf
adc
and
enter
xchg
mov
pusha
das
nop
lcall
lcall
clc
jl
mov
cmp
pop
or
xor
lds
cmp
cmp
push
fistpll
lahf
sub
pop
cmp
add
jle
cmp
dec
cli
cmp
pusha
lock
addb
stos
push
cmp
mov
mov
gs
sarl
shll
sbb
add
xor
mov
cmp
or
fiaddl
push
inc
fdivrs
clc
mov
dec
cld
jnp
ror
inc
pop
notl
adc
aas
scas
daa
out
cmp
ret
stos
ljmp
cmp
lret
mov
js
jnp
xorb
sbb
cmpl
out
adc
ss
call
repnz
js,pt
jg
pop
jl
pop
cmp
test
sub
test
or
in
mov
lds
and
jno
dec
sbb
fnsave
and
popa
and
pop
mov
pop
into
jl
cmpl
scas
pop
sti
mov
add
lcall
jp
or
daa
fstpl
push
sbb
cmp
xchg
loopne
dec
in
js
fdivrl
negl
push
sbb
pop
sahf
add
pop
call
hlt
jge
mov
sbb
ret
and
notb
test
pop
and
adc
mov
sub
fisubs
push
jl
lcall
fmulp
fcmove
aam
clc
aas
cmp
push
pop
sahf
lahf
mov
mov
rolb
test
pusha
pusha
push
cmp
xchg
sarb
fistpl
push
xchg
sub
push
cmp
dec
sub
add
xchg
jle
loopne
ret
cmp
cmp
jg
pusha
jp
fwait
cld
pop
shrb
sbb
mov
cld
lds
inc
stos
inc
lahf
push
xorb
pop
cmp
mov
pop
xchg
push
cld
outsb
aam
pop
fnstsw
pop
jge
pop
lcall
sub
fwait
pop
ljmp
jnp
stc
add
popa
je
push
sub
mov
stos
xchg
pop
rep
jmp
mov
jp
lock
out
repnz
inc
cmp
in
sub
js
pop
mov
jl
iret
sbb
cmp
sbb
pop
add
cwtl
mov
xor
mov
lret
push
in
mov
andl
je
repnz
fimuls
and
stos
aas
sub
arpl
cs
xchg
xor
incl
cmp
cmp
popa
fidivrs
repz
dec
push
pushf
cmp
mov
das
popa
jle
cli
sbb
das
ret
clc
fiaddl
loopne
jp
jmp
lahf
dec
jae
cli
pop
pop
jle
mov
sbb
test
cmp
shrb
lea
repnz
cwtl
pop
jo
testb
pop
adcl
sar
and
js
fcoms
idivb
cmp
push
loopne
scas
pop
popf
xchg
jmp
inc
jp
mov
dec
cmp
mov
fadd
adc
jle
jb
mov
add
cmp
fdivp
mov
mov
fdivrs
pop
mov
pop
hlt
jmp
repz
jge
mov
pop
insl
pop
mov
cmp
pop
sub
mov
add
rcrb
xor
add
mov
lds
popa
inc
rsqrtps
jg
mov
pop
dec
insb
fimull
lcall
sahf
je
fidivs
icebp
fcomp
js
lcall
inc
leave
popf
push
mov
pop
inc
fcompl
mov
xchg
popa
jle
fistpll
dec
xor
pop
mov
out
cmc
int
loopne
lcall
sahf
or
mov
lret
sahf
mov
add
push
xchg
fistl
cli
and
cmp
dec
fsub
roll
mov
mov
xor
mov
negl
or
js
fwait
pop
fcmovb
xchg
pop
lcall
cmpsb
loopne
mov
arpl
and
sbbl
clc
pop
mov
pop
pop
jg
jle
and
loopw
mov
nop
cmp
push
fdiv
xchg
lahf
inc
cmp
lahf
rcrl
jp
mov
mov
adc
and
pop
inc
add
cmp
mov
imul
dec
icebp
out
cli
pop
ret
inc
mov
mov
mov
inc
jb
ss
cmp
jl
sub
pop
push
cmpb
rcrb
and
aad
idiv
stc
inc
inc
pop
fisubs
clc
cld
adc
loopne
add
rcrl
scas
lahf
sbb
push
pop
pop
jnp
and
cmp
add
fwait
pop
rcrb
jmp
out
pop
ds
cmp
aaa
sbb
mov
rclb
pop
filds
adc
fdivr
fistpl
ss
mov
mov
fbstp
pop
sbb
cwtl
cmp
test
mov
cmp
loope
mov
hlt
pop
sbb
test
loope
cmp
xor
pop
lret
ss
inc
push
pop
cmp
std
xor
cmpsb
mov
mov
lcall
push
xchg
je
mov
mov
mov
or
mov
fwait
push
sbb
jae
sti
popa
stos
jb
fdivr
dec
mov
push
jge
jle
rolb
jp
add
mov
pop
cmpl
sarl
sub
pop
neg
mov
push
inc
mov
mov
cmp
lahf
jp
aas
ret
clc
lcall
pop
inc
fwait
arpl
jb
add
pop
scas
jnp
stos
enter
dec
in
ds
lcall
push
clc
mov
fiadds
andb
mov
pop
fistpl
dec
jne
xor
inc
imul
pop
loopne
dec
pop
jl
mov
sbb
sbb
pop
mov
rcl
sbb
fisubl
sbbl
mov
mov
mov
xlat
pop
xchg
es
ss
cmp
lock
sbb
lcall
push
jnp
mov
xchg
cli
mov
mov
cmp
adc
inc
ds
jnp
pop
aaa
jl
cmpsl
dec
adc
fisttps
cmp
mov
fildll
test
cld
cmpb
cli
inc
cmp
lcall
fcoms
dec
pop
mov
jl
dec
popa
push
cmp
sbb
jl
cmp
jge
fmul
mov
loop
je
aad
xor
fstpt
inc
jge
mov
xor
push
inc
pop
test
repz
lahf
pop
pusha
cwtl
push
jle
pop
pop
adc
sbbl
cwtl
filds
sbb
faddp
pop
addb
xchg
nop
cmp
mov
ficomps
inc
outsb
jnp
mov
cmp
shl
pop
add
je
push
xchg
mov
rcrb
adc
cmp
inc
inc
in
mov
jp
pop
jno
pop
xchg
mov
jl
sbb
fwait
dec
cli
sbb
rclb
js
arpl
cmpb
cmp
sbb
jg
cmpl
lahf
adc
sbb
cli
cmp
jle
mov
sbb
pop
pop
outsb
pop
push
mov
aas
ljmp
inc
mov
shl
loop
idivl
divb
inc
inc
and
mov
lock
call
pop
out
sbb
pop
xchg
and
cli
lret
cmp
ljmp
and
cmpsb
je
xchg
out
cmp
xchg
xchg
jb
pop
cmpl
aaa
xlat
push
pop
fisttps
cwtl
cmp
adc
or
pop
mov
repz
pusha
mov
mov
sbb
cmpb
mov
fwait
test
jmp
push
ss
std
bound
pop
inc
loopne
cmp
outsb
mov
push
pop
aas
mov
and
sbb
xchg
pop
popa
jge
pop
pushl
jg
testb
repz
pop
fidivs
or
add
pop
pop
xchg
dec
mov
jmp
jb
je
xor
pop
cmp
and
push
je
ficoms
fiaddl
xor
jnp
push
scas
dec
ret
and
and
and
adc
pop
fstp
lods
push
mov
pop
sahf
mov
cli
stos
xchg
jle
sbb
inc
push
pop
loopne
ja
pusha
roll
pop
fcmovnb
mov
jb
cmp
cmp
xcrypt-ctr
cmpsl
pop
insl
fdivr
push
jno
sbb
mov
fisttpll
cld
arpl
mov
aad
jb
pusha
mov
cmc
jle
dec
ficompl
fdivp
aam
cmp
push
jle
cltd
and
lods
sbbb
sti
lcall
popa
pop
bound
cmp
lcall
js
fidivrl
cmpsb
dec
je
sbb
inc
aad
pop
stos
cmp
aaa
cmc
fcoms
adc
addb
xchg
jae
pop
inc
idivb
fldenv
sbb
cmp
xchg
xchg
sbb
clc
cmp
add
inc
and
add
and
sbb
out
sub
fwait
mov
ds
inc
mov
sbb
sar
lret
aas
pop
cmp
inc
fidivrs
inc
out
jl
bound
lcall
or
cmp
dec
pushf
cmp
mul
inc
ss
cltd
cmp
xor
mov
mov
jg
pop
orb
jge
xchg
leave
and
mov
mov
mov
cmp
cmp
sbb
imul
mov
adc
fcompl
sahf
jge
mov
jg
clc
aad
cwtl
jge
jecxz
sbbb
cli
mov
cmp
shl
iret
adc
and
add
mov
cmp
cltd
sahf
cmp
cmp
sbb
mov
push
jb
pop
cmp
pop
inc
adc
jge
aad
and
loopne
pop
push
fistpll
jle
jp
mov
sbb
inc
daa
pop
xor
xor
push
rclb
pop
dec
push
cmp
test
imul
fwait
mov
jg
mov
jle
inc
in
mov
in
xchg
sbb
adc
mov
hlt
gs
repz
movsb
jb
clc
sbbl
mov
and
push
jg
xor
xchg
adc
cmp
and
mov
pop
inc
pop
adc
js
mov
inc
mov
or
lcall
enter
and
dec
jae
jg
mov
adc
mov
inc
or
lahf
pop
popa
hlt
repz
repz
pop
mov
jp
js
pop
lahf
pop
push
clc
pushf
fiadds
mov
xchg
repz
mov
inc
push
lret
push
sar
pop
xchg
sbb
jmp
push
xchg
in
mov
cmp
cld
into
bound
cwtl
setp
fildl
mov
pusha
jl
leave
pop
fdivr
inc
lods
add
loope
in
inc
cmp
ret
sahf
fldt
mov
sbb
pop
pop
dec
gs
jp
cmc
or
dec
test
pop
xor
idivb
and
sbb
mov
pop
cld
mov
push
cli
fdivrp
orb
idivb
pop
sbb
push
cwtl
xchg
lods
iret
sub
sub
xor
fstpt
pop
fdivrs
ss
and
lret
loopne
pop
lds
jge
cld
lcall
adc
stos
mov
test
pop
rcrl
aas
sbb
pop
jnp
jb
jg
ret
push
call
mov
mov
bound
cld
mov
mov
cmp
hlt
sarb
sub
lret
lds
cmp
idivb
cmp
mov
jle
clc
mov
out
mov
mov
negl
fidivrs
dec
gs
adc
mov
cvtps2pd
icebp
jnp
lods
jp
and
cmp
roll
inc
cmp
mov
mov
adc
push
pop
fnstcw
cli
bound
pushf
sahf
lcall
in
mov
mov
cmpsb
aas
pop
pop
icebp
cli
lret
sbb
xchg
pand
pop
pushf
fdivrs
ss
mov
add
mov
ss
sti
aaa
fwait
sahf
daa
mov
cmp
push
cli
jg
pop
mov
sub
adc
inc
xor
inc
rol
inc
mov
bnd
jle
ret
lret
xchg
mov
iret
in
or
push
out
dec
fnstenv
cwtl
add
cmp
outsl
aaa
dec
cmp
cmc
lret
mov
fadds
cmp
push
cmp
dec
aad
ficompl
clc
jp
lods
xchg
jbe
and
xor
pop
pop
cmp
gs
or
mov
ja
loop
mov
dec
fmul
cmp
pop
mov
mov
rol
jae
push
cmp
mov
cmp
push
pop
rcl
mov
je
pop
push
test
mov
cwtl
sbb
adcl
pop
cmp
mov
mov
inc
hlt
pop
mov
xor
imul
push
lcall
cmp
xchg
fdivr
mov
cli
fists
sti
repz
adcb
xchg
lahf
pop
cli
push
in
fadds
lock
jns
mov
sbb
dec
pop
popa
pand
out
mov
or
jecxz
xchg
add
push
popa
idiv
jl
pop
add
je
hlt
fbstp
xor
inc
xor
sarl
ficoml
shlb
ljmp
pop
pop
sar
mov
lahf
jge
mov
adc
xchg
mov
cmp
rclb
adc
loopne
mov
or
fstpt
fsub
lea
jne
rcrl
cli
jnp
xchg
pop
sbb
cmpb
rcrb
jp
add
cmp
xchg
cwtl
lea
ja
lcall
fucomip
inc
cmpsb
sub
pop
mov
adc
mov
xor
and
cmp
mov
add
fsubrl
mov
mov
xor
mov
negl
test
mov
leave
stos
loop
mov
test
fidivrs
inc
pop
sbb
fistps
cmp
adc
and
test
and
pushf
sbb
clc
mov
shlb
fbld
cmp
or
inc
repz
arpl
lahf
or
cli
pop
nop
hlt
pop
je
mov
repnz
or
inc
shll
pop
cmp
mov
cmp
js
jg
fidivrs
mov
sbbb
pop
lahf
ds
and
add
js
sbb
js
xchg
push
mov
bound
push
cld
andl
sbb
dec
mov
cli
push
adc
jp
js
sub
pop
mov
lcall
pop
cli
int3
fwait
inc
mov
adc
popa
xchg
rolb
sahf
mov
xchg
inc
imul
fdivs
sahf
adc
cmp
out
xchg
mov
iret
and
fcomp
sbb
aad
das
scas
or
daa
xor
jb
mov
jle
mov
pusha
mul
mov
jae
add
dec
inc
int
imul
bound
and
push
cmp
jmp
pop
pop
add
jl
mov
cmp
repz
xchg
sahf
mov
dec
and
pushf
cmp
loopne
push
dec
jl
jnp
sbb
stos
xorl
and
pop
call
lret
ss
adc
mov
fdivr
ret
daa
adc
dec
pusha
pop
sbb
in
loopne
dec
ss
dec
cmp
cltd
dec
and
jg
icebp
jmp
pop
jle
push
sbb
mov
cmp
mov
sub
cwtl
pushf
inc
jg
loopne
sahf
pop
cmp
dec
pop
or
inc
pop
sbb
mov
pop
and
jp
mov
mov
cmp
outsb
inc
outsl
pop
lret
dec
hlt
cmp
sti
mov
fwait
es
movsl
inc
pop
pop
pusha
and
cmp
bound
nop
mov
mov
cmp
pop
pop
mov
aad
sti
cmp
stos
test
leave
imul
popa
inc
xor
jge
mov
cmp
pushf
lahf
xchg
dec
je
xor
imul
mov
xchg
in
and
popa
pop
xor
sbbl
cld
jge
mov
mov
xor
lds
cmp
pop
ret
sub
sbb
fisubl
or
xor
inc
pop
je
cld
pop
mov
sbb
ljmp
and
scas
jg
ja
pop
aas
pop
xorb
push
pop
cmp
xchg
inc
popa
sbb
pop
idiv
fmull
adc
fisttpl
pushf
jp
aas
loope
inc
loope
mov
jnp
sbb
popa
adc
fnstcw
ret
sbb
shll
lahf
dec
int
and
jnp
pusha
dec
adc
dec
js
cld
cmp
data16
and
ss
inc
xor
jl
pop
fidivl
sub
cwtl
mov
jb
clc
pop
mov
cmp
fcoms
fwait
add
cmp
lcall
dec
cmp
and
xchg
mov
mov
hlt
mov
je
clc
outsl
cmp
mov
hlt
fmull
popa
cmp
inc
mov
dec
cltd
jp
jle
fmull
cld
pop
sar
adc
adc
rclb
pop
and
xor
pop
sbb
cld
fidivrl
ret
aad
pop
jle
cmp
adc
sub
cmpsb
mov
cmp
push
fiaddl
rclb
xchg
mov
jns
jno
xchg
push
loop
cmp
xchg
ficomps
ljmp
lahf
push
cmp
pop
jp
inc
add
cmp
adc
mov
lock
push
mov
fcompl
inc
mov
jle
cmp
sbb
jne
jg
aas
mov
into
xchg
cli
cmp
mov
or
fwait
jge
lahf
sbb
cmp
pop
cwtl
push
outsb
xchg
mov
push
pop
inc
mov
pop
push
je
lcall
sub
fsts
pop
cli
fwait
int
fwait
push
jnp
jo
mov
scas
pop
andb
and
lds
xchg
dec
ror
fbstp
pop
inc
movsb
cmp
mov
cmp
aas
lds
cmp
push
mov
fiadds
iret
cwtl
fwait
pop
mov
mov
inc
pop
pop
cld
xchg
push
pop
lcall
pop
je
mov
jo
xchg
cmp
pop
mov
hlt
fmul
sbb
cmp
inc
pop
je
stos
cmp
xor
push
mov
je
bound
pop
clc
cld
pop
sti
xchg
sub
test
filds
addr16
adc
pop
adc
jle
pushf
cmp
dec
push
icebp
push
pop
mov
add
loopne
stos
xlat
test
repz
js
fistl
mov
andl
das
cmp
cld
mov
jl
pop
sbb
adc
pop
ljmp
pop
pushf
xor
jp
sbbb
jg
sbb
aas
sbb
cmp
or
and
or
sti
cwtl
and
cmpsl
pop
fdivrl
inc
push
pop
js
sbb
xor
movsb
cmp
pop
cmp
inc
loopne
fwait
and
shrb
cmp
xor
mov
jnp
nop
lahf
mov
pop
fcmovbe
pop
jae
inc
mov
and
fistpl
mov
sahf
stc
leave
jns
xor
sti
sbb
cwtl
cmp
aas
mov
fsubr
pop
dec
mov
ud0
push
mov
xor
clc
mov
cmp
mov
into
cmp
shlb
pop
mov
push
mov
imul
faddl
adc
clc
in
mov
shll
fadds
jp
or
adc
loopne
cmc
cli
inc
mov
and
fbld
leave
mov
pop
repnz
js
push
cwtl
jle
inc
mov
pop
shlb
dec
jg
sbb
push
loopne
cmp
fs
ror
js
loop
cmc
rclb
mov
dec
and
icebp
inc
ljmp
sub
push
cmp
cld
js
sbb
dec
pop
bound
jmp
pusha
testl
movsb
idiv
cld
xlat
mov
fldenv
aas
mov
cmp
push
movsl
inc
fwait
lcall
stos
out
bound
pusha
and
push
mov
pop
push
aaa
sarb
andb
clc
hlt
rclb
sub
cmp
mov
adc
into
pushf
inc
out
fdivrs
dec
out
mov
inc
pop
aaa
cmp
fidivrs
pop
push
mov
cwtl
and
and
aaa
rorb
cmp
push
mov
popa
mov
ficoml
pop
clc
rcll
xor
pop
sbb
xlat
jle
dec
add
jb
pop
ficompl
lahf
stos
inc
mov
jl
cmp
dec
ret
in
in
cli
repnz
inc
and
cld
pusha
sbb
mov
lods
in
sbb
ds
pop
pushf
idivb
lods
aaa
in
xor
jp
sbbb
js
dec
lods
pop
cli
or
mov
mov
mov
loopne
int3
cmp
pop
in
jle
ja
cmpb
adc
cmp
mulb
js
sti
sarb
and
xor
scas
pop
lods
jle
pop
daa
xchg
addb
jle
adc
clc
adc
cwtl
stos
pop
pushf
cmp
sahf
mov
outsl
pop
shll
cmp
mov
cmp
addl
xchg
jle
out
add
repnz
bound
pop
mov
popl
mov
and
repz
pushf
xchg
sbb
pop
lahf
rorb
jle
push
es
jg
dec
lods
cli
jge
push
mov
mov
cmpb
cltd
je
push
sub
decl
sbb
inc
repz
sbb
mov
cld
mov
cmp
pop
xchg
mov
lahf
insl
jg
imull
fisubrl
bound
fildl
pop
gs
mov
pop
cmp
fwait
cmp
bound
dec
pop
mov
icebp
hlt
cmp
dec
sbb
repz
sbb
inc
js
pop
mov
cmp
mov
lcall
sbb
sbb
push
pop
pusha
clc
rorb
cmp
pop
xor
and
inc
popa
mov
incb
fdivrp
cmc
outsb
mov
bound
fwait
cmp
lahf
dec
cwtl
div
adc
ficompl
mov
lcall
cmp
mov
pusha
jp
subl
mov
pop
mov
pop
xor
push
inc
cs
pusha
bound
mov
fistpll
hlt
xchg
pop
jnp
enter
push
mov
aaa
aas
inc
movsb
inc
cmpsb
data16
fadds
cli
jge
cld
dec
scas
inc
push
push
pop
pop
mov
pop
jge
cmp
jmp
jle
cmc
and
fwait
mov
jge
inc
inc
pop
popa
cmp
fsubrl
jge
xchg
jl
clc
cmp
aas
hlt
sti
jmp
push
out
xchg
clc
hlt
mov
lds
cmp
ret
jl
push
sbb
and
xor
adc
cmp
cmp
cmp
cli
int3
lock
pop
pop
das
cltd
add
pop
shrb
sbb
dec
adc
xchg
mov
rcl
sbb
addl
ficomps
xchg
mov
test
pop
pop
mov
in
ret
divl
jp
dec
sti
xor
mov
push
call
fdivrl
cmp
cmp
mov
cmp
inc
cwtl
sbb
mov
jg
ljmp
mov
sarb
pushf
rcrl
inc
loopne
sub
lcall
add
mov
jge
add
dec
cmc
adc
pop
pop
pop
in
bound
xorl
fistpll
shll
mov
call
push
push
into
rcrb
sub
fadds
adc
dec
inc
hlt
pop
cmp
mov
lahf
pop
cmp
dec
pushf
shlb
mov
clc
push
mov
cld
inc
pop
mov
cwtl
xor
pop
pop
pushf
add
mov
je
or
pop
xchg
adc
mov
cltd
mov
jnp
mov
jp
pop
cmpl
outsl
sahf
sti
aas
mov
mov
mov
das
pusha
enter
fistpl
sbb
jnp
pop
fisttps
mov
loop
shlb
lahf
orl
sbb
ret
jae
push
jl
popa
cmp
fwait
mov
xor
adc
cmp
jns
add
and
rcrb
pop
push
jbe
sahf
fistpl
aas
jl
pop
leave
inc
into
fdivrl
push
pop
fidivrs
loop
sahf
hlt
xchg
ljmp
jae
inc
or
inc
sub
mov
rclb
mov
lds
mov
pop
jl
fcompl
aas
cs
sahf
lcall
es
cltd
and
lahf
je
xor
inc
cmp
clc
add
add
dec
adc
cld
pop
pusha
int
lahf
xor
fwait
jnp
add
ficompl
inc
push
push
mov
fwait
jge
dec
ss
popa
mov
pop
mov
push
jge
cmp
fistpll
into
lcall
cmp
dec
add
and
adc
pusha
pop
icebp
ss
orb
aas
jg
daa
or
arpl
fcomps
js
pop
push
pop
mov
mov
lcall
lahf
push
scas
adc
fdivs
mov
jle
cmp
iret
into
push
pop
pop
es
and
pop
sahf
pop
cmp
cmp
cmc
jle
xor
push
adc
xchg
int3
mov
clc
mov
cwtl
cs
pop
in
jg
xchg
fwait
dec
push
stc
pop
and
sbbl
xchg
pusha
lahf
adc
sbbl
sahf
mov
jb
sbb
sbb
pop
mov
cmp
pop
fstpt
mov
inc
lret
inc
ret
jae
aas
sub
jge
popa
xor
sbb
or
cmp
aas
es
mov
pop
mov
mov
fidivrl
sbb
jno
pusha
cmc
ss
aas
xchg
pop
pop
jle
aaa
mov
lahf
inc
negl
fistps
cmp
iret
aaa
mov
and
fistpl
ret
mov
pop
mov
imul
sbb
jb
sbb
adc
mov
pop
jo
inc
mov
mov
pop
adc
mov
mov
mov
mov
sbb
ret
pop
fdivr
das
add
incl
jg
clc
popa
jp
fwait
jle
notb
orb
cmpsb
movsl
jo
fsubrl
dec
push
cld
mov
xor
inc
jl
pop
mov
popf
sbb
push
loopne
pushf
adc
dec
xchg
neg
scas
push
xchg
push
repz
push
negb
into
ss
pop
mov
mov
mov
jg
jp
mov
jl
mov
loop
pop
ljmp
pop
rcr
cli
lds
cmp
cli
cmpsl
jp
cld
mov
loope
mov
sti
xchg
sbb
jle
cmpb
loopne
cmpl
cld
pop
mov
mov
bound
into
loopne
pop
dec
or
mov
mov
pop
sbb
shl
rcrb
mov
sahf
pop
movsb
fistpll
fidivl
add
loopne
cltd
push
inc
lcall
pop
pop
scas
aas
xchg
mov
pop
add
sub
fimuls
cmpsb
cmp
mov
push
and
pusha
adc
fdivp
mov
adc
in
xchg
pushf
dec
pop
sbb
jp
cmpl
fcoms
mov
xor
out
pop
lret
or
sti
jnp
push
push
cmp
iret
fidivl
fdivrs
in
pop
hlt
lcall
dec
lret
jl
cmp
mov
add
mov
push
adc
add
inc
mov
cwtl
rorb
hlt
ret
test
fwait
add
adc
out
add
cmp
clc
aad
pop
rol
sbb
je
jne
aas
mov
pop
outsl
mov
mov
pop
loopne
inc
pop
cmp
jle
add
inc
dec
push
dec
mov
loopne
or
jg
mov
andl
nop
dec
cs
lahf
ret
cmp
lcall
in
jg
nop
aaa
out
in
or
repnz
push
fidivrl
add
jl
cld
adc
dec
xchg
sbb
pop
pop
dec
or
repz
repz
mov
xor
sbb
fcomps
fdivrs
int
mov
sarb
daa
sarb
cld
jb
sbbb
adc
xchg
es
dec
pop
stos
jl
repz
cmpsl
fstps
dec
sbb
mov
into
pop
mov
sahf
jle
mov
ficomps
sbb
mov
inc
dec
dec
pop
pop
inc
cmp
lret
ret
push
cmp
jg
movsb
xchg
lahf
sbb
sbb
sub
lcall
dec
xor
nop
push
dec
mov
dec
fldenv
clc
mov
cld
or
jb
fdivrl
clc
jg
add
in
pop
pop
mov
cmp
loopne
pop
xchg
ret
enter
lods
mov
push
mov
jge
cmp
adc
lcall
cmp
sahf
push
jmp
xchg
jg
inc
dec
fidivrs
inc
pop
sarb
xchg
stos
roll
cmp
shll
loopne
push
dec
inc
ss
cmpsl
xlat
aas
jge
push
and
xchg
cmp
inc
js
cmp
mov
add
fistps
mov
in
cltd
popa
loopne
out
sub
mov
sahf
fldt
mov
mov
sahf
mov
scas
adc
adc
inc
orl
fistl
xchg
xchg
rcrb
pop
and
push
mov
jle
sbb
mov
cmp
mov
stos
pop
pop
mov
inc
jae
cwtl
cmp
and
mov
addl
cmp
jle
jp
cwtl
cld
mov
pop
pop
cli
cmp
mov
fildll
pop
ret
loop
inc
sarl
fcompl
fwait
test
jmp
pushf
lret
les
jb,pt
pop
adc
rcrl
push
push
sti
push
xchg
shll
jnp
jg
dec
pop
mov
pop
into
rclb
cmp
loopne
in
mov
in
aaa
sbb
inc
push
fdivrl
loopne
sahf
and
cmp
mov
cmp
push
cmp
call
std
mov
push
fwait
sti
and
cmp
pop
inc
ss
add
inc
jne
inc
push
sti
cmpl
movsl
cmp
jo
dec
sti
pop
pusha
mov
aas
pushf
les
inc
mov
dec
in
xchg
pop
cmp
pop
lahf
sarb
push
cmp
mov
jge
fwait
pop
xchg
in
stos
mov
inc
jg
adc
mov
nop
or
cmp
cmp
jp
bound
mov
lret
lahf
sub
pusha
cmp
jl
adc
inc
inc
fcomps
sti
xor
pop
push
cmc
popa
out
inc
fstpt
outsb
fwait
inc
push
mov
inc
mov
add
arpl
call
lahf
fidivrl
cmp
fstpt
aas
pop
push
sahf
rcrb
out
clc
mov
add
cmp
loopne
lcall
pusha
cmp
sti
push
jge
lret
and
incl
xchg
mov
test
jl
pop
xorb
xor
sub
cmp
vmulpd
adc
sahf
js
xorb
pop
fisttps
ficomps
call
pop
push
sbb
shlb
xor
xchg
add
shlb
mov
insb
lcall
pop
cld
mov
fdiv
push
adc
mov
jp
cmp
pop
jp
and
sbb
jecxz
jge
inc
pop
pusha
cmp
cmp
mov
and
sbb
cmc
push
sub
je
adc
arpl
lods
cmp
es
das
mov
sub
leave
scas
arpl
ds
sahf
jp
scas
adc
cmp
push
sbb
mov
push
pop
xchg
xchg
repz
push
cmp
mov
pop
cmc
push
xchg
and
or
lahf
pop
cmp
mov
push
sbb
cld
cmp
pop
pusha
mov
xchg
fyl2xp1
jmp
in
mov
fistps
or
dec
xchg
cld
mov
pusha
mov
data16
cli
dec
pop
sbb
mov
inc
shl
fidivrs
pop
loopne
ds
and
sti
sbb
inc
mov
or
mov
mov
push
dec
cs
pop
mov
rcrb
dec
or
mov
mov
out
sbb
mov
sbb
inc
ret
dec
mov
int
push
pusha
mov
das
xchg
lds
jp
cmp
cmp
sbb
jo
popa
js
je
jb
cli
fcompl
xchg
inc
fwait
les
cmp
mov
cmp
jb
clc
pop
inc
mov
cmpb
sub
adc
ficoms
pop
or
xchg
cwtl
and
enter
testl
xchg
fildl
repz
sbb
data16
cwtl
mov
mov
xchg
aas
inc
jp
and
cmp
inc
pusha
ss
pop
nop
shlb
pop
cld
in
mov
loopne
push
sbb
jns
pop
cmp
inc
sbb
mov
ljmp
cld
pop
and
inc
cmp
fiaddl
pop
sbb
pop
les
inc
sbb
js
fcoml
lahf
push
and
jbe
mov
ss
adc
push
popa
inc
ljmp
and
sahf
pop
pushf
dec
fwait
cmp
xor
cmp
ffreep
mov
cmp
pop
int
mov
addl
andl
cwtl
aas
jp
sub
dec
sahf
mov
mov
inc
rcrb
loop
add
jns
pop
jmp
fsubrl
sbb
clc
enter
push
mov
mov
inc
dec
pop
add
movsl
ss
cmp
dec
ja
iret
fists
sbb
xchg
loopne
lcall
mov
mov
popf
adc
pop
pop
jg
pop
mov
xor
xor
cmp
mov
ss
cmp
mov
fwait
sar
cld
shll
and
inc
out
jns
cmp
fcoms
pushf
add
loopne
inc
inc
cmovs
inc
pop
pop
mov
or
jl
cmp
or
jp
dec
fstpl
xchg
fistpl
je
pop
cmp
sub
in
inc
adcb
sahf
cmp
imul
fcomps
jle
jge
cmp
hlt
clc
sbb
jbe
pushf
incl
pop
inc
shlb
scas
pop
cmp
cmp
cmp
mov
scas
dec
imul
mov
fidivrl
dec
dec
outsl
adcl
lret
mulb
add
incb
loope
ds
pop
cmp
popa
cld
cmp
sbb
and
scas
or
xchg
js
in
inc
aaa
jle
pushl
mov
repnz
fs
cld
pop
pop
sahf
lds
pop
push
jne
and
idivl
aaa
or
cmp
sahf
mov
push
adc
jno
fsubrl
add
xchg
sbb
fildll
adc
sub
sbb
jbe
mov
pop
pop
in
and
mov
sbb
xor
sbb
cmp
mov
cmp
cmp
jno
outsl
jb
pop
loopne
dec
or
sti
dec
std
sahf
pop
lcall
cmp
cltd
push
pop
js
movsl
xchg
scas
cwtl
pop
xor
mov
and
cmp
filds
sbb
add
sub
into
pop
pusha
and
mov
addl
jp
mov
pop
add
add
sahf
shrl
ss
cld
cltd
jle
pop
sbb
fdivrl
ss
hlt
pop
pusha
js
fdivr
aas
mov
lds
cmp
jnp
mov
mov
cld
cmp
cmp
mov
pop
add
fdivs
popa
sbb
pop
inc
lahf
mov
scas
cld
les
push
sbb
sub
inc
pusha
pop
fwait
xchg
jge
lret
mov
sbb
fstps
lcall
pop
or
push
jle
fistpll
out
inc
push
cmp
dec
fcompl
inc
jge
aas
in
test
push
mov
lcall
cmp
outsb
cmp
dec
imul
stos
cmc
sahf
xor
cmp
mov
cmp
add
xor
fidivrl
cmp
sti
cmp
mov
cmp
mov
cmp
lcall
fbld
sbbl
rcr
pusha
push
push
lret
pop
and
inc
idivb
jmp
xor
adc
mov
cmp
add
cmp
or
jmp
pusha
lahf
clc
ds
pushf
jb
add
and
or
je
aas
je
mov
xchg
jnp
adc
add
jb
pop
dec
mov
pop
jp
pop
sbb
mov
sbb
mov
sti
add
add
mov
mov
mov
jp
lock
inc
inc
cmp
mov
dec
into
pop
loopne
sbb
inc
sbb
cwtl
pop
cmp
shr
ds
mov
mov
mov
loopne,pt
pop
sbb
cmp
jle
aas
repz
mov
and
mov
adc
xchg
mov
pop
lcall
and
pop
js
and
sbb
pop
pop
xchg
jge
pusha
ret
inc
pop
sti
mov
fidivs
shll
out
ds
cmp
xorl
aaa
mull
cmp
dec
nop
je
xchg
sub
lahf
das
xchg
mov
pop
stos
lcall
fcmovb
push
pop
stc
test
jle
mov
cli
pop
incb
mov
cwtl
mov
in
jl
js
jae
cmp
adc
xchg
pop
call
andb
jge
add
out
cmp
pop
in
nop
stos
jae
dec
xchg
jge
push
pop
and
jp
stos
imul
push
jl
loopne
pop
fdiv
sahf
mov
pop
pushf
out
fimull
jp
pop
sbb
lret
andl
pop
mov
movsb
pop
jp,pn
shrb
mov
mov
pop
clc
ss
pop
stc
fstpt
xlat
mov
sbb
mov
pop
pop
loope
push
pop
sbb
sbb
xor
pop
pusha
jl
cmp
pop
lcall
pop
lds
loopne
lcall
xchg
pusha
mov
or
fdivrs
dec
popa
dec
sub
inc
negl
mov
pop
pop
sahf
mov
mov
pop
fisubrl
inc
cmpb
mov
fidivrs
sbb
cmp
cmp
or
pusha
jo
pusha
mov
pusha
pop
cwtl
addb
insl
lcall
push
sahf
adc
pop
inc
lahf
cmp
faddl
repz
pop
mov
add
add
pusha
fdivs
clc
iret
enter
aas
mov
jge
jl
cli
bound
call
push
outsl
mov
push
je
aad
in
cmp
clc
aaa
lret
mov
mov
rcrl
dec
push
popa
mov
jo
inc
fcoml
leave
cwtl
add
mov
push
mov
out
call
sbb
es
faddl
cmp
neg
cli
jg
fcoms
aad
mov
mov
fdivl
mov
push
insl
mov
mov
jg
push
xchg
sbb
mov
jnp
xor
and
fbstp
fmuls
repz
clc
jp
pop
sub
cmp
xchg
xchg
inc
cmp
push
ficoml
push
pop
or
dec
pop
jle
jl
pop
mov
jecxz
mov
rdseed
js
in
push
mov
movsl
cmp
cmp
push
push
sub
cmp
xchg
mov
dec
pusha
adc
sti
sbb
cmc
pusha
stos
jp
adc
add
fprem
xlat
sbb
movsb
fcompl
das
fisubs
inc
pop
jne
movsb
pop
fistpl
pop
test
je
aad
roll
mov
faddp
mov
jmp
mov
cltd
jb
cmp
sbb
pop
pop
aam
ret
and
stos
sarl
mov
inc
xor
sub
xlat
lds
inc
cmpsb
sbb
dec
popa
icebp
sub
sbb
pop
loope
es
add
mov
fisubl
pop
xchg
bound
ds
pop
pushf
in
shl
sbb
pop
xor
push
cld
int
sbb
jl
repz
sbb
lcall
jno
cmpsb
lcall
sarb
pop
push
pop
pop
loopne
mov
and
jl
or
aad
mov
cmp
sub
jg
xor
cmp
or
movsl
adc
push
aad
sbbb
and
insl
cmp
add
pop
adc
les
leave
xchg
fidivrl
xchg
add
dec
out
adc
cld
aad
fadds
mov
push
mov
pusha
cmp
insb
std
outsb
mov
sub
pop
jle
adc
jge
sbbb
and
scas
cmc
ficompl
sub
pop
jge
fistpl
out
das
sbb
pop
cli
xchg
insl
popa
cmp
cmp
mov
incb
sahf
mov
js
mov
dec
cmp
cli
sbb
xchg
push
lahf
rorb
fwait
inc
repnz
sbb
sahf
lret
inc
pop
sbb
js
sbb
jbe
andl
mov
pop
adc
cwtl
sbb
fistpl
adc
jl
pop
jp
ljmp
inc
mov
or
mov
push
cwtl
popa
fsubl
popa
pop
sahf
jae
sti
pop
pop
nop
mov
daa
push
les
rcll
mov
push
mov
neg
pop
scas
adc
pop
push
cmp
fwait
and
inc
inc
pop
jge
call
mov
scas
int3
ljmp
pushf
jl
aas
jle
dec
jb
jo
inc
jmp
hlt
cmp
mov
ljmp
lret
jp
ret
mov
pop
stc
inc
mov
pop
testl
sbb
inc
inc
fiadds
inc
dec
inc
xchg
rcrl
addr16
cmp
inc
cmp
mov
xor
dec
xchg
jo
jno
cmpb
add
in
inc
inc
jnp
sahf
cmp
scas
or
cmp
push
sti
push
jmp
mov
les
ficompl
lahf
js
scas
lcall
cltd
mov
mov
pusha
divb
adc
lahf
fadd
adc
fcoms
and
mov
mov
cmpsb
js
lea
fxch
xor
pop
and
jp
cli
adc
jnp
jecxz
mov
clc
rolb
lret
add
pop
cmp
xchg
pushaw
addl
jb
mov
fdivrl
jge
cmp
jge
pusha
adc
outsl
lahf
mov
fnsave
dec
out
negl
and
clc
push
fcompl
add
pop
loopne
pop
pop
shr
pop
and
aaa
ffreep
mov
jo
cmp
jg
adc
popf
lds
jg
jge
fidivl
dec
lret
pop
fnstcw
cwtl
mov
mov
stos
ret
pushf
inc
inc
cld
pop
inc
jge
sbb
fimuls
filds
icebp
xchg
xchg
adc
rcr
andb
inc
adc
sbbb
mov
cmp
pushf
add
cmp
sbb
sbb
pusha
pop
or
iret
cmpsl
push
jl
sbb
fildll
jmp
add
fdivp
je
or
lahf
in
cwtl
test
cltd
jo
sbb
arpl
cmp
mov
inc
cmc
sbb
mov
cmpsb
cmp
inc
mov
cmp
fdivl
adc
inc
jne
pop
pusha
sbb
dec
aas
orb
jl
fstpt
mov
xchg
mov
cld
sbb
insb
mov
mov
cmp
js
rolb
incb
stos
and
jb
mov
or
push
mov
sbb
dec
push
mov
pusha
mov
cli
mov
and
sbb
pusha
inc
mov
jns
mov
insl
cmp
pop
cmp
or
dec
jecxz
repz
popa
and
pop
mov
mov
ljmp
xor
popa
repnz
addl
fwait
mov
pop
mov
cmp
mov
inc
lahf
pop
and
int3
fnstcw
sahf
pop
out
sbb
push
xchg
mov
jle
jp
push
pop
out
mov
sbbb
pop
xor
jmp
clc
loopne
inc
inc
add
mov
jns
dec
pop
dec
pop
cmp
stos
cld
dec
dec
adc
popa
jp
rcrl
pop
adcl
fistpll
pop
sarb
jmp
jnp
je
sub
pop
mov
jg
and
movsb
shll
addb
inc
clc
ficoms
shlb
mov
xchg
hlt
dec
sarb
cmp
aaa
jp
imul
cli
aaa
cmp
sbb
aaa
pop
sbb
in
ds
mov
mov
sbb
loopne
icebp
sbb
in
js
pop
add
dec
leave
and
imul
mov
mov
add
pop
daa
xor
idivb
pop
xor
jg
dec
dec
dec
jnp
jo
pop
loop
jp
push
test
push
mov
cmc
mov
adc
or
xchg
cld
ja
mov
jmp
bound
sbb
add
fsubrs
cmpl
sbb
pop
jp
fwait
pushf
inc
aas
mov
jnp
push
cmpb
jp
cmp
decb
and
adc
mov
adc
icebp
addr16
loopne
jae
xor
js
mov
sti
jg
adc
loopne
or
pop
ljmp
fwait
pop
jo
les
test
call
lret
outsb
pop
sahf
lcall
pop
inc
fwait
cmp
fcomp
lds
fsubr
orb
js
adc
lcall
xchg
push
jae
and
jle
cmp
negl
sbbb
xchg
jg
mov
cld
fisttpl
jne
cwtl
cmp
push
loopne
stos
mov
loopne
mov
inc
fidivl
mov
sbb
int3
mov
cmp
inc
in
cmp
sbb
mov
mov
jo
mov
dec
ss
sahf
cmp
dec
jl
mov
std
aam
lret
jb
sti
aas
lahf
inc
jle
cmp
sbb
pop
clc
fistps
scas
mov
pop
inc
pop
lahf
cmp
cmp
icebp
cmp
add
pop
adc
jle
pop
dec
mov
mov
mov
lock
mov
jnp
ljmp
cmpb
fmull
pop
jns
and
sub
mov
stos
dec
cmp
mov
hlt
adc
sti
fwait
lret
inc
and
dec
sbb
add
loope
sbb
in
pop
xchg
hlt
or
add
mov
inc
dec
inc
cmp
jg
popa
loopne
pop
cwtl
mov
pop
loopne
adc
jle
clc
pop
inc
rclb
jg
pop
mov
jae
mov
stos
enter
adc
cmp
jp
xorl
push
js
cmpb
push
inc
pushf
fwait
pop
add
pop
cmp
aas
ficomps
cld
dec
jbe
cmp
pop
in
mov
popa
adc
jae
cmp
push
ficomps
mov
cmp
pop
pop
inc
sub
inc
add
fwait
lahf
xor
imul
pop
mov
mov
orb
clc
aad
mov
jg
ret
aas
pop
mov
adc
add
ja
dec
fwait
dec
pop
popa
pop
pusha
jp
mov
pushf
mov
mov
sbb
cld
pop
cmpb
jl
sub
inc
pop
sahf
dec
hlt
cmp
loopne
pushf
sbb
cli
pop
sbb
inc
mov
sub
or
lahf
jnp
mov
push
xchg
repz
fidivrs
mov
jo
adc
sbb
adc
cli
pop
lock
fisubl
outsb
lcall
call
outsb
adc
or
sub
mov
js
fiaddl
lcall
idivb
cmp
aaa
xchg
shlb
fwait
cwtl
jle
dec
adc
leave
popa
lahf
out
xor
test
arpl
push
xchg
cmp
xor
test
dec
dec
mov
jnp
inc
ja
and
cmp
sbb
jp
jg
or
pusha
add
aaa
sahf
icebp
or
push
pop
pop
jnp
sbb
cld
pop
imul
mov
push
fiaddl
lahf
adc
cmc
xchg
lcall
mov
lea
jne
jne
outsb
fldl
mov
mov
inc
pop
push
nop
dec
fstpt
add
pop
aad
jmp
fadd
dec
jnp
jns
mov
fidivl
cld
lcall
mov
stc
cmc
mov
arpl
push
aad
xor
ds
imul
mov
or
xchg
cmp
aas
addr16
or
rcr
jnp
pop
je
pop
mov
cwtl
jg
push
cmp
inc
adcb
cmp
jnp
inc
dec
or
adc
xor
cmpb
fistpll
pop
sbb
pop
add
pop
inc
inc
idivb
push
pop
sbb
xchg
cmp
icebp
and
mov
push
fstpt
lods
inc
into
jp
mov
subb
mov
lds
cwtl
jecxz
pushf
mov
sbb
fidivrl
faddl
mov
dec
je
cmp
dec
imul
lds
mov
xor
cmc
pusha
fwait
lock
lea
inc
scas
pop
fldcw
or
imul
pop
cmp
sbb
jge
dec
aaa
pop
inc
int3
lock
loope
inc
das
fdivrp
cli
dec
mov
mov
sti
sub
cmp
cmp
xor
dec
pushf
push
mov
inc
inc
sub
and
loopne
loope
je
sbb
hlt
dec
repz
mov
sbb
pop
xchg
xchg
cmp
repz
andl
pop
pop
and
mov
out
mov
pop
pop
sbb
sbb
push
mov
mov
pushf
jns
and
fwait
xchg
mov
jg
push
pop
pop
jecxz
mov
add
test
popa
dec
cmc
pusha
cmp
mov
mov
or
jae
cltd
and
cmp
xchg
and
jne
hlt
sbb
adc
jle
ret
and
mov
inc
mov
pusha
cwtl
cli
cld
sti
jge
adc
cmp
ret
cmpsb
enter
pusha
popa
cmp
cmpl
and
push
clc
sahf
xchg
xor
jg
inc
cmp
xchg
xchg
inc
push
fstpt
push
inc
jns
jns
pop
pop
and
add
rcrb
test
jle
or
cmp
mov
inc
repz
fildll
js
add
cmp
xchg
cmp
inc
pop
or
cmp
mov
push
lret
pop
push
pop
cmovae
data16
inc
and
cld
ret
push
pop
adc
repz
push
adc
adc
push
ret
addb
mov
jecxz
jmp
pop
stos
or
dec
bound
pusha
pop
lcall
adc
pusha
pop
or
icebp
push
dec
sahf
mov
push
incl
pop
int3
cmp
mov
inc
lds
lret
mov
pop
sar
aas
cmpsl
adc
dec
inc
inc
mov
scas
bound
jl
inc
jp
rcrb
cmp
inc
lahf
insl
cmp
ss
mov
adc
jle
inc
sub
clc
fisubrl
outsb
xchg
lcall
inc
cmp
cmp
sbbb
add
pop
mov
mov
cwtl
pop
xor
in
jnp
lea
sbb
ret
cmp
sti
inc
xchg
mov
je
repz
adc
hlt
sbb
cli
jnp
in
mov
pop
pop
icebp
mov
lcall
push
jnp
popa
ret
xor
inc
fcomps
negl
mov
cmp
add
cli
cmpb
cli
pop
xorb
js
or
pop
rcrb
pusha
stc
aaa
enter
pop
ljmp
adc
jmp
cmp
jg
add
inc
dec
adc
fwait
aas
dec
adcl
hlt
xchg
adc
loopne
or
stos
in
mov
mov
inc
and
xor
outsb
cmc
div
or
or
xchg
jl
mov
inc
mov
jge
mov
cmp
mov
inc
cmp
mov
sahf
cmp
xchg
push
sbb
inc
lret
pop
lahf
mov
cmp
pop
jb
pop
loopne
fidivrs
fwait
in
das
fiadds
inc
xor
cld
pop
sarb
jno
pop
pop
push
pop
cmp
xchg
stc
fwait
dec
pop
mull
pop
mov
cmp
pop
sub
sbb
repz
fcompl
jp
test
mov
js
pop
push
ficomps
fidivl
mov
aas
cmp
inc
jge
es
pop
push
sahf
lahf
pop
pop
fneni(8087
pusha
cmp
jnp
clc
int3
inc
mov
fidivrs
imul
arpl
or
sbb
pop
dec
mov
jle
xchg
or
push
das
aaa
mov
pop
js
mov
sahf
fcomp
jle
cltd
xchg
pop
mov
inc
mov
inc
jl
push
js
jle
xor
lcall
jp
jns
push
clc
push
cmp
add
sbb
and
pushf
inc
addr16
inc
into
cmp
aas
into
xchg
sahf
dec
mov
iret
je
cmp
add
out
add
xlat
lahf
xchg
filds
out
jg
loopne
sbb
jle
pop
popf
lcall
inc
push
clc
pop
popa
dec
std
dec
lahf
inc
cmp
hlt
test
xlat
sbb
push
imul
mov
sbb
loop
bound
rcrb
arpl
icebp
or
mov
loopne
cltd
popf
ret
cmp
cmp
mov
and
cwtl
fdivrl
dec
dec
jge
pop
pop
push
mov
push
jg
shlb
aaa
punpcklwd
push
jle
xchg
nop
aas
cmp
or
sbb
mov
ds
mov
xchg
cli
adc
mov
pushf
and
sbb
or
je
pop
jp
dec
jns
jp
jnp
mov
mov
sub
xor
clc
pop
mov
jb,pt
js
pop
pushf
je,pt
fcomps
mov
repnz
cmp
adc
out
xchg
jp
xchg
fidivrs
jg
cmp
cwtl
jle
sbb
mov
cmpb
sbb
pop
int3
aas
dec
cmp
idivl
mov
jbe
mov
lret
ficompl
inc
mov
aad
jge
pop
lcall
add
adc
xor
inc
add
dec
dec
push
js
cmc
fdivrl
popa
mov
sbb
bound
adc
pop
mov
adc
hlt
pusha
cmp
js
or
add
dec
pop
push
jl
ficompl
mov
sbb
faddp
pop
stos
rcrb
faddl
sti
jle
pop
inc
and
cmp
sbb
jg
fwait
lahf
pop
out
rcl
aas
pop
fldenv
popa
rcr
testb
inc
ficompl
mov
and
pop
mov
sbb
push
fimull
and
sbb
mov
sahf
call
jnp
cmpsb
aaa
cld
cmpsb
cmp
pop
add
fsub
push
aas
mov
cmp
sbb
stc
fidivrs
outsb
add
push
pop
aas
jg
sbb
jp
mov
shll
push
add
cmpl
push
sub
inc
push
jge
jl
dec
xor
cmp
sahf
xor
imul
mov
xorb
mov
pop
inc
or
cmp
fmul
test
test
mov
int
mov
mov
push
cmp
inc
add
push
cld
mov
dec
arpl
mov
ss
fwait
pushf
loop
sbb
cmp
fistl
xchg
mov
mov
popa
je
cmp
xor
insb
push
dec
jl
cli
dec
pop
inc
ljmp
pop
jl
out
cmp
mov
loopne
xor
pusha
cwtl
inc
stos
mov
cld
jge
aas
pop
jb
inc
fisttpl
sarl
data16
fisubs
lock
or
fiaddl
push
push
lods
loope
notb
and
sbb
pop
call
push
fwait
pop
mov
fwait
and
sar
jl
fdivr
pop
inc
and
cmp
fdivr
ds
fidivrl
inc
push
cli
sub
negb
jl
cmpsb
clc
std
inc
xchg
lret
mov
xlat
sarl
hlt
pusha
xor
sahf
mov
ret
loop
lcall
stos
ss
ficompl
repz
fdivrl
mov
cld
mov
iret
sbb
fcoms
arpl
pushf
pop
cmp
test
mov
mov
sbb
cmp
addl
mov
fistpll
xchg
stc
popa
cmp
cmp
pop
lcall
mov
int
pushf
adc
pop
cwtl
and
pop
lahf
test
inc
mov
cmp
and
dec
push
inc
add
sbb
add
sbb
cmp
mov
cwtl
cmp
pop
sti
fadd
pop
mov
push
pushf
xchg
je
push
push
mov
icebp
sarb
mov
cmp
and
and
loop
cmp
cmpl
sub
and
cld
or
push
dec
fnstcw
in
sub
fcoms
nop
xor
sbb
loopne
pop
mov
push
adc
sbb
mov
mov
test
fwait
data16
insl
inc
cmp
jmp
pusha
inc
or
cmp
addr16
jle
mov
sbb
test
cmp
js
adc
pusha
xchg
icebp
xchg
mov
adc
ds
pop
cli
pop
pushf
sarb
fdivrs
inc
sahf
mov
mov
aas
cmpsl
fidivrl
sbb
mov
call
inc
jb
cmp
sti
mov
jg
fisubl
fdivl
add
inc
cmp
pop
data16
movsl
idivl
mov
pop
pusha
jp
add
sahf
mov
adc
cmp
or
xor
out
sbb
cmpl
popf
bound
ret
mov
mov
jle
arpl
ficompl
mov
and
jp
outsb
pop
incb
lret
sti
fstl
add
mov
hlt
pop
mov
dec
inc
sbb
pusha
fidivrs
cmp
jne
adc
pop
jl
cwtl
rcrb
xchg
ret
aad
adcb
addr16
inc
stos
sahf
mov
pop
ret
push
pushf
jg
addr16
pop
add
icebp
inc
add
sarb
xchg
push
add
jge
inc
xor
mov
js
popa
pop
mov
sbb
and
pop
lcall
mov
xchg
decb
and
or
cmp
mov
aaa
jge
lods
loope
hlt
lcall
jg
fistpl
push
push
mov
orl
jge
jnp
xchg
jge
loop
clc
push
sbb
jnp
push
cmpsl
mov
push
mov
xor
pop
shlb
pusha
insb
adc
stos
ror
outsb
aam
into
mov
xchg
mov
cmpsb
mov
pop
ficompl
sahf
mov
xor
jns
mov
adc
cmp
jle
imul
loope
add
lret
adc
sarl
cmc
cmpsl
adc
mov
vorps
jmp
inc
sbbb
lahf
xor
jle
jmp
pushf
sbb
cmp
pusha
std
cmp
pop
negb
es
out
push
fiaddl
ja
mov
rolb
mov
inc
lods
mov
popa
and
aas
stos
mov
sbb
add
retw
addl
dec
fwait
jmp
flds
stos
dec
jo
loope
mov
cmp
fidivrl
ficomps
pop
addb
mov
cmp
leave
test
subps
clc
ficomps
dec
push
cmpsb
cmp
xchg
lcall
outsb
cmp
clc
pop
jp
aas
inc
imul
pop
testb
mov
jbe
int
pop
push
in
mov
xchg
mov
xorl
sbb
cmp
push
jge
push
data16
fcompl
mov
shrl
mov
xchg
pop
add
jns
mov
test
and
flds
ficoml
sbb
fistps
scas
add
pusha
cmp
enter
fistpll
lds
cmp
inc
mov
iret
lret
add
xchg
cmp
jnp
sbbl
mov
hlt
popa
and
test
jbe
and
fsub
cmp
rol
adc
xor
lcall
incb
cmp
pusha
sbb
cli
cwtl
pop
mov
cmp
cmpsb
mov
mov
scas
xchg
cld
mov
xor
mov
cmp
cmp
mov
push
mov
test
xchg
xchg
mov
sbb
inc
stc
mov
pop
sbb
inc
fisttps
fwait
mov
aas
pushf
sbb
xchg
cwtl
fmul
sarb
jp
xchg
outsb
jle
mov
js
fsubl
scas
sbb
mov
cmp
decl
loopne
add
sbb
fistps
xor
test
les
test
mov
push
jb
lcall
inc
movsb
jg
sti
fwait
dec
outsl
pushl
dec
inc
cmp
fiaddl
sbb
xchg
lcall
mov
pop
fwait
xor
jl
ret
and
js
xchg
roll
fcoms
cmp
adc
pop
leave
cmc
adc
js
cmp
sbb
subl
inc
and
clc
rorb
int3
int3
aad
mov
pop
lahf
sti
cli
mov
cmp
fwait
ss
push
fistpll
mov
push
xchg
je
call
lea
and
adc
sbb
mov
cmp
mov
notb
cmp
mov
jbe
insl
jnp
mov
jg
pop
push
filds
dec
push
sarb
leave
sarl
ss
pop
pop
adc
adc
ljmp
pop
mov
pop
adc
jge
retw
xchg
push
ss
push
pop
loopne
jp
jp
xchg
xor
sbb
sahf
andl
outsl
xchg
data16
push
popa
ds
mov
mov
aad
imul
mov
or
dec
gs
sti
mov
mov
hlt
pop
inc
je
sbb
mov
and
into
cli
jnp
mov
arpl
imul
dec
cmp
rclb
mov
lock
cmp
sbb
shl
cmp
mov
cmp
pop
sbb
sbbb
push
cmp
fiadds
dec
jae
lds
je
js
mov
sahf
cmp
pop
xorl
dec
inc
mov
pop
xchg
repz
cmp
mov
jp
outsb
test
jno
xchg
push
cmpsb
sti
cmp
sub
jle
lods
sub
add
mov
jnp
rorb
cwtl
inc
pop
mov
sbb
xchg
xchg
jg
repz
cmpb
add
inc
mov
mov
mov
stc
dec
push
addb
pop
push
jle
inc
loopne
pop
cmp
sbb
in
daa
ret
sahf
js
pop
push
cltd
decl
push
push
cli
mov
add
jnp
sub
or
out
loopne
filds
cmp
std
mov
iret
mov
loope
lret
and
js
jl
pop
push
int3
push
jmp
lods
dec
cmp
clc
mov
cmp
lcall
add
mov
cmp
pop
inc
filds
dec
push
mov
mov
dec
sahf
and
sti
pop
pop
mov
hlt
sbb
js
mov
cmp
push
jge
push
sarb
jg
outsl
push
scas
lock
or
stos
cmp
pop
inc
and
lea
aaa
fnsave
inc
xchg
jnp
pusha
xlat
inc
bound
sbb
pop
rcrl
pop
sar
sahf
cmp
mov
jnp
push
or
adc
fdivrl
in
jle
sbb
sbb
push
inc
sbb
lcall
inc
scas
cmp
cmp
popa
jp
scas
pop
mov
repz
and
rol
pop
ljmp
mov
sbb
cmp
mov
inc
shl
add
pop
mov
aaa
cmpsl
hlt
jnp
adcl
pop
data16
loopne
pushf
pop
adc
das
mov
clc
fidivrl
pop
in
mov
xor
pushf
jl
cmp
cwtl
push
jle
lahf
cmp
into
push
sbbl
gs
popa
je
mov
cmp
orb
loop
jg
pop
pop
inc
inc
or
cmp
jne
inc
add
or
add
fwait
mov
inc
fsubl
mov
or
push
mov
arpl
push
fdivr
lahf
sbb
sub
sbbb
subl
cs
inc
and
sbb
adc
dec
les
dec
jle
fiaddl
jp
adc
cmpsl
push
in
inc
mov
aas
divb
lcall
lahf
jp
inc
inc
pusha
jp
into
popf
pusha
mov
push
dec
xchg
jno
idivb
and
lret
cmp
sbb
ret
ds
pop
mov
pop
sti
stos
jae
mov
mov
pop
pop
sub
mov
sub
imul
jmp
add
sbb
gs
add
jnp
add
cmp
pop
pop
lods
ds
jl
mov
push
je
or
cmpl
mov
cli
arpl
xchg
push
sub
pop
jge
notb
pop
jnp
imul
xchg
lcall
push
fisubl
lahf
xchg
pop
jle
jno
adc
pop
jp
in
push
pop
add
push
sahf
dec
mov
cmp
out
jns
mov
dec
xchg
adc
cmp
xchg
push
xchg
sbb
dec
cmpsb
fisubrl
imul
ficoml
push
dec
nop
mov
pop
jg
mov
scas
shl
pop
aaa
dec
sbb
sarl
sub
xchg
pop
mov
mov
sarb
stos
adc
mov
mov
fcomip
dec
xor
adc
mov
jae
sbbl
sti
loopne
add
cmpb
inc
insb
cwtl
cmp
mov
pop
mov
clc
pusha
mov
jns
adc
subl
inc
repz
mov
fdivrs
mov
fstpt
cli
pop
jle
sub
jo
mov
pop
fsubr
mov
push
inc
mov
ret
loopne
fistpll
je
pop
or
mov
inc
pop
or
pop
jge
fdivrl
add
in
lret
mov
xchg
sti
popa
in
icebp
cmp
push
push
fcoms
jge
mov
and
xchg
cmpl
lock
pop
lcall
xor
fildl
inc
pop
mov
pop
loope
xchg
ds
fstpt
dec
push
jmp
mov
faddl
rcrl
ror
sti
cmp
cwtl
popa
lods
ret
js
and
das
pop
pop
xchg
cmc
pop
xabort
rcrb
sti
pop
sbb
jp
pop
pop
jae
sarb
mov
jns
lods
loopne
mov
dec
sub
jl
cmp
lds
aas
adc
push
loopne
mov
lcall
fwait
cmp
pop
ds
mov
push
or
ss
clc
sar
jl
sahf
push
cld
inc
inc
mov
or
mov
scas
xchg
cmp
pop
popa
jb
cmp
fucom
ss
loopne
out
pop
out
xor
pop
inc
mov
rcrb
sbb
jl
ja
neg
icebp
inc
fiadds
fnstcw
sbb
mov
push
xor
rcrb
inc
add
mov
jl
adc
jnp
jge
jge
notl
cwtl
cmc
std
or
push
fistpll
out
mov
sbb
decl
dec
pushf
nop
inc
cltd
xchg
fcoms
mov
imul
add
hlt
add
jg
cmp
push
pop
sbb
aaa
cmp
pop
popa
test
sub
jnp
iret
pop
js
fwait
add
and
cmpb
pop
adc
mov
int
fstp
pop
sti
push
pop
mov
mov
xchg
mov
in
fwait
mov
mov
in
adc
or
mov
arpl
dec
cld
sbb
repz
mov
jl
cld
and
mov
or
push
fistpll
sbb
sub
rol
cwtl
mov
popa
fdivrl
stos
inc
stos
pop
aad
pusha
sti
or
xor
aas
pop
stos
jl
fdivrl
sbb
cmp
bound
gs
inc
int
mov
adc
lahf
and
pushf
add
jb
sbb
sbb
movl
jg
or
dec
cmc
mov
jb
mov
rorb
cli
mov
pop
lock
lahf
sbb
pop
cmp
mov
shr
mov
pop
mov
jmp
push
lock
and
sbb
out
sahf
loopne
insb
ficomps
cmp
sbb
mov
adc
cwtl
stc
mov
cwtl
inc
mov
into
add
popa
mov
jl
jle
mov
std
jbe
lds
bound
fsub
or
dec
pushf
scas
inc
or
or
add
push
xchg
loopne
push
icebp
jge
fsubl
mov
lahf
out
inc
and
cwtl
mov
xchg
fcmove
pop
popa
inc
xor
cmp
js
pop
mov
inc
daa
mov
pop
or
jecxz
cld
cmp
adc
jge
cmp
jge,pt
mov
jne
hlt
xchg
push
std
cmp
scas
lahf
inc
popf
rcrb
cmp
mov
jp
push
popa
xchg
pusha
dec
pop
into
pop
hlt
inc
pop
sbb
cli
sbb
pop
mov
inc
mov
inc
pop
push
pushf
fisubrl
sbb
out
arpl
loop
inc
and
std
popa
fbld
out
sarl
imul
mov
rcr
je
mov
push
pop
or
js
cmp
sbb
add
jge
ja
cmp
ficomps
movsb
mov
clc
sub
mov
pop
pop
add
loopne
add
pop
pop
cmp
sbb
add
sbb
js
loop
mov
and
xchg
pop
jle
pop
lret
cmp
and
lds
or
fmull
inc
jge
pop
jo
xchg
stos
push
int3
push
aas
lcall
xchg
mov
lret
scas
fwait
jl
push
mov
cmp
aas
stc
jnp
pop
mov
arpl
adc
sti
sbb
inc
inc
stos
lahf
nop
jg
xor
outsl
inc
xchg
cli
dec
mov
mov
mov
jnp
mov
pop
mov
ds
fcomps
jge
mov
inc
movsl
cmp
mov
sbb
dec
out
out
cmp
inc
fmull
pop
in
std
daa
sahf
dec
dec
mov
lret
mov
pop
popa
mov
das
das
pusha
cmp
inc
adc
fwait
cli
lahf
pop
sbb
cmc
xchg
mov
and
test
push
test
loope
add
pop
loopne
mov
das
lds
jnp
out
pop
repz
stc
cmp
pop
add
cmp
les
mov
repz
popa
mov
cmp
pop
cmp
mov
cmp
jp
pop
cmp
fstpt
loopne
insl
into
inc
fisubrl
jle
mov
lret
jb
cld
pop
pop
sbb
scas
fldt
push
mov
add
shll
mov
adc
mov
dec
out
fldt
leave
sub
pop
js
add
cmp
cmp
mov
sbb
and
push
pop
and
je
shll
shrb
cmp
aas
push
pop
pop
push
sbb
icebp
pop
repz
pusha
popf
ss
push
jge
jo
push
mov
addl
cmp
inc
fildl
lds
mov
cmp
adc
roll
lods
dec
xchg
lahf
inc
mov
sub
aas
push
mov
pop
mov
lods
sbb
sbb
fistps
pop
mov
lods
add
incl
pusha
movsb
or
mov
lcall
cltd
xor
pop
fstpt
cmp
pop
or
jmp
cmpsw
aas
xor
stos
std
xchg
out
outsb
cli
loopne,pt
into
mov
imul
lret
jmp
pop
idivb
out
cmp
inc
lcall
roll
cmp
pop
fdivrl
out
divb
inc
out
mov
lcall
sub
pop
jb
pop
mov
jp
sahf
or
sahf
fsubs
inc
xchg
pop
mov
sbb
mov
and
xchg
lds
cld
mov
fistps
cld
dec
add
inc
fildl
cmp
inc
fsub
fisubrl
ds
js
push
scas
idivb
aad
sahf
pop
into
in
aad
mov
mov
xor
jg
pop
jge
push
xchg
stc
clc
sbb
sti
cmp
sbb
mov
cmp
sti
cmp
jno
aas
fdivp
pop
fwait
mov
stc
mov
xor
pop
mov
pusha
adc
pop
movb
mov
and
adc
mov
pop
mov
pop
cmp
cmp
inc
or
mov
add
shl
pop
push
lcall
sbb
sbbb
cmp
pop
cmpsl
adc
fistpl
or
push
cli
pop
lds
xchg
cmp
cmpl
lahf
xchg
les
inc
out
adc
pop
arpl
mov
sbb
xchg
pushf
loopne
push
or
and
adc
pushf
dec
in
inc
int
pop
jp
sub
sub
andb
inc
int
jnp
cmp
cmp
xchg
call
lahf
jo
mov
test
fdivrl
mov
sub
lret
sti
pop
xchg
popa
lahf
jnp
test
xchg
inc
rcr
mov
mov
bound
dec
fwait
pop
adc
mov
fcompl
pop
inc
out
pop
and
jp
mov
xor
pusha
jp
fstpt
cwtl
pop
sub
pop
mov
jle
dec
or
pop
adc
and
mov
adc
inc
jmp
icebp
mov
ffreep
lret
push
and
mov
cld
mov
or
cmp
pop
jnp
xchg
cmp
std
rorl
orb
jl
fwait
fdivrs
xchg
adc
sar
jnp
mov
mov
int
lcall
push
lahf
jg
add
cmp
cmp
shll
ficomps
jnp
inc
nop
pop
jb
loopne
fstpt
mov
xchg
cmp
sbbl
pop
mov
mov
jle
inc
cmp
sbb
mov
pushf
mov
aas
cwtl
mov
ljmp
jecxz
mov
mov
jle
lret
sbb
fsubl
xlat
ficompl
mov
ret
push
je
mov
jge
adc
jne
mov
movsl
xchg
mov
jmp
pop
js
inc
test
pop
mov
loopne
ljmp
jae
cld
rclb
bound
push
stc
insb
cmp
mov
sbb
mov
jl
iret
cmp
mov
mov
inc
pop
ljmp
popa
cwtl
sarl
loopne
in
lcall
in
stc
ror
popa
ljmp
mov
jb
pop
jl
out
ficoml
fcomps
add
sarb
ret
xchg
push
jnp
inc
pop
arpl
mov
xor
cmp
insl
sahf
inc
sub
inc
sub
decl
fnsave
lret
push
sbb
jae
cmc
sti
cmp
adc
xchg
pop
xchg
movsb
mov
mov
inc
lcall
pushf
daa
pop
loope
cmp
lcall
scas
rcrb
fdivrl
repnz
nop
cli
mov
xchg
rcll
stos
add
pop
ret
test
sub
bound
sti
cmp
mov
jge
sub
ss
fistl
mov
pop
cld
add
pop
mov
adc
pop
js
push
pop
mov
xchg
incl
mov
imul
inc
add
pop
inc
aam
pop
jmp
lods
dec
or
pop
mov
mov
mov
sbb
inc
jp
insl
xor
inc
pop
push
pop
mov
icebp
mov
cmp
sub
mov
or
mov
xchg
sub
cmp
jnp
jns
dec
pop
mov
aas
mov
dec
outsb
mov
fidivrl
iret
int3
dec
mov
mov
lahf
jge
sti
lcall
mov
popa
xlat
jg
cmp
or
push
js
cmp
adc
sarb
mov
mov
pop
xchg
mov
adc
stos
or
stos
push
loopne
pop
cli
pop
dec
pushf
and
xchg
mov
jno
mov
cmp
adc
int3
inc
cs
jg
sbbb
fimull
inc
add
jbe
outsl
mov
cmp
mov
add
lods
inc
movq
jle
cmc
xchg
fstps
ret
je
sub
adc
sbb
mov
pop
stc
mov
fdivl
jg
test
sub
je
push
fistpl
add
sbb
adc
and
sub
mov
xchg
andb
and
jno
lahf
inc
pop
icebp
ss
push
into
notb
dec
cmp
cli
sub
push
push
jb
lret
stos
dec
pushf
rolb
fistps
pop
pop
dec
loopne
jg
aas
lea
out
fsubrs
js
pop
jle
fcompl
insl
mov
pop
ret
jo
sbb
stos
js
jp
dec
and
pop
test
dec
lahf
sti
mov
and
jns
lahf
repz
jg
js
xor
sub
jle
sbb
dec
popf
cmp
int3
leave
and
push
pop
fidivrs
inc
sbb
push
inc
xchg
push
lds
daa
fmulp
in
pop
sbb
fwait
and
sbb
mov
cmpsl
in
fs
popa
xchg
ljmp
add
adcl
rcll
xchg
sbb
sbb
pusha
in
push
push
adc
mov
insl
pop
andb
pushf
xchg
inc
test
and
scas
je
dec
dec
fwait
loopne
jae
mov
aad
js
mov
stos
aam
pusha
cwtl
sahf
cs
dec
ret
and
cwtl
inc
pop
mov
int3
dec
sti
sbb
lock
adc
and
scas
jle
and
inc
and
sbb
insb
sub
test
fidivrl
push
mov
mov
pop
ficompl
mov
ds
cmp
cmp
pop
jl
add
sbb
cmp
sbb
imul
pop
out
mov
or
and
loopne
sbb
sbb
fsubrl
gs
pop
inc
cld
clc
inc
lods
mov
rorb
jnp
jl
add
fidivrs
fmull
pop
jmp
dec
jl
sti
and
sbb
shrl
loop
cmp
xchg
cmpb
lahf
mov
test
add
repz
jge
ss
mov
cmp
repz
pop
mov
cmp
fwait
mov
mov
jmp
jmp
test
test
arpl
xor
lcall
cmpl
jnp
stos
lahf
lcall
lock
popf
mov
and
jp
je
adc
pop
inc
lcall
cli
lahf
mov
inc
pop
pusha
addr16
cmpsw
insb
jnp
bsf
dec
cmp
in
popf
mov
mov
cmp
test
pop
aas
mov
cmp
xchg
jle
js
jmp
jno
push
inc
cmp
jp
scas
add
mov
fcomp
sbbb
lods
repz
cs
mov
jne
xorb
dec
cmp
pushl
sbb
ljmp
cmp
sbb
inc
cmp
andb
jnp
add
sub
inc
mov
cmp
and
cld
lea
cmc
mov
jle
jne
jg
push
mov
xchg
pop
bound
mov
push
in
inc
les
je
adc
fcmovnu
mov
xor
xchg
pop
pop
mov
jl
dec
mov
cmp
jb
arpl
hlt
lahf
pop
aas
xchg
pop
add
in
icebp
sub
cmp
dec
mov
mov
mov
pop
cmp
fisttpl
push
push
pop
cld
fimull
sti
jecxz
fisubs
mov
lret
and
mov
fcmovnu
jecxz
fidivrl
cmp
stos
jg
and
pop
pop
cmpl
sarl
adc
sbb
hlt
psrlw
dec
lcall
cld
pop
xor
int3
ss
and
stos
mov
adc
or
lods
push
push
mov
sub
pop
pop
shll
stc
sti
cld
lret
stos
sbb
loopne
iret
ffreep
in
lret
mov
and
cltd
mov
and
add
push
sbb
cmp
add
cmp
sub
mov
mov
ficomps
aas
imul
fmuls
cmp
gs
inc
adc
shl
jns
pop
loopne
push
pop
stc
adc
sbb
dec
sbb
fistpll
jle
loopne
pop
pusha
jge
cmpb
cli
sbb
bsf
inc
cmp
cmp
int3
jge
in
mov
adc
mov
lahf
jae
cli
stos
aad
xor
lcall
pop
mov
outsl
lahf
cmp
mov
inc
rclb
sahf
into
js
jp
jge
ficompl
jle
fbstp
pop
cmp
clc
popa
lret
xchg
mov
cmp
pop
bound
mov
test
pop
pop
aas
aas
outsb
adc
clc
cwtl
cli
xchg
bound
sbb
mov
fsubl
pushf
jg
sub
cltd
xchg
inc
jae
insl
adc
cli
mov
jp
repnz
popa
cwtl
cld
sbb
cmp
and
scas
ret
dec
mov
mov
mov
ss
pop
xor
xor
pop
pop
push
sbb
mov
and
fstpl
scas
adc
andb
ret
cmc
cmp
pop
leave
xchg
fistl
pop
dec
dec
in
fcoml
mov
in
fbstp
inc
xor
mov
push
dec
adc
shlb
mov
lock
lret
popa
loopne
fdivs
push
lds
inc
inc
adc
xor
ja
aad
fldt
jle
dec
or
jl
repz
jp
jnp
es
pushf
ffreep
iret
mov
fcmovu
cmp
lahf
cs
lods
insb
cmp
jmp
shl
pop
in
hlt
xorb
cmp
mov
jae
inc
jb
sbb
sbb
int
inc
pop
jge
or
enter
lcall
pop
dec
aad
sbb
xchg
inc
pop
into
mov
pop
pop
or
negl
fstpt
or
push
shlb
lds
lds
sbb
sti
lods
mov
out
mov
cli
pop
cmp
hlt
fwait
jl
fcompl
stc
dec
mov
push
mov
mov
dec
js
jl
pushl
push
pop
cld
cmc
cmp
pop
cmp
sub
jge
lcall
inc
fcomi
dec
pusha
xchg
dec
cmp
inc
pop
mov
jge
jnp
sbb
fwait
jns
sbb
lcall
sbb
jnp
dec
jae
pop
xchg
cmc
loop
cmp
repnz
cmp
mov
add
andl
lcall
jge
int3
xorl
inc
fcoms
pop
xor
pop
xchg
in
adc
sbb
ret
adc
pop
jnp
ds
sbb
shll
sbb
lcall
lock
sbbl
pop
inc
js
add
and
rcrb
mov
xor
ljmp
mov
fidivrs
sti
adcb
js
fsubs
pushf
ret
adc
cld
scas
in
sti
mov
cli
pusha
pushf
sbb
xchg
pop
js
std
popa
sbb
mov
jl
inc
scas
fcompl
pop
popa
mov
or
push
sub
add
stos
push
add
ret
cmp
iret
fimull
cmp
das
and
lds
shlb
lret
pop
cmp
fidivs
pop
jo
add
insl
ficoml
add
adc
sahf
mov
pop
dec
mov
add
stc
rorb
dec
js
xchg
lahf
je
pop
xor
dec
lds
jp
adc
je
je
mov
fwait
mov
push
and
cld
cmpsb
cltd
cmp
incb
jae
dec
xchg
cmp
fistps
xor
cmc
mov
cmp
loopne
inc
clc
adc
sub
cli
pop
sbb
pop
fdivr
mov
incb
xchg
sti
dec
xchg
mov
loopne
dec
mov
cmp
pop
and
jmp
das
push
lcall
pushf
aad
cwtl
subl
sti
mov
dec
lcall
sbb
add
xorb
pop
mov
cmp
xchg
pushf
jo
testl
cmp
xorl
dec
xor
daa
insb
cmp
add
in
das
cmp
dec
mov
cmp
pop
mov
cmp
clc
aas
dec
sbb
outsl
xchg
mov
jnp
lock
or
xchg
adc
je
jnp
pop
cmp
inc
rol
pop
pop
cwtl
aas
mov
aaa
ret
adc
add
mov
xchg
pop
dec
fnstsw
sbb
mov
pop
jnp
xor
cmp
mov
cwtl
xchg
adc
add
bound
cmp
aas
pop
dec
dec
sahf
clc
hlt
pushf
lahf
dec
mov
or
push
lcall
cmp
push
xchg
dec
lds
xchg
adc
pop
xorb
mov
push
and
sti
mov
adc
adc
pop
pop
sub
popa
pop
lcall
xor
in
aam
push
movsb
fwait
cmp
mov
pop
dec
dec
xchg
scas
pop
jb
loopne
stos
mov
call
lcall
lcall
mov
pop
xchg
aas
pand
sbbl
adc
mov
mov
mov
xchg
push
addb
adc
sahf
cmp
ficomps
adc
fwait
mov
pop
pop
fcomps
addb
ret
and
jp
pusha
shll
or
jl
popa
jge
cwtl
add
pop
jg
sub
cmp
and
mov
or
aaa
and
pop
and
mov
push
and
mov
pop
xchg
repz
inc
lds
jg
mov
push
pop
sbb
cmp
adc
subb
sbb
cld
inc
cmpsb
jnp
popa
mov
jl
cltd
pushf
sub
fs
jg
adc
cmp
mov
sbb
mov
mov
mov
cmp
sbb
int3
aad
cmp
jle
sbb
lahf
es
sbb
popa
mov
cld
mov
je
leave
sbbl
jp
rcrl
cmp
lods
pop
pop
outsb
mov
fwait
cld
inc
cwtl
loope
mov
mov
mov
cmp
mov
sbb
pop
rcrb
sub
ds
pop
je
pop
cmp
sbb
fwait
and
or
loopne
mov
pop
pop
sub
pop
push
pop
pop
mov
pop
and
loop
neg
xchg
cwtl
ds
cmp
or
push
popa
pop
sbbb
mov
or
data16
jge
rclb
mov
mov
pusha
inc
push
phaddw
xchg
jg
cwtl
out
mov
xchg
shl
lds
sbb
cmp
cli
inc
repz
bound
cmp
mov
ljmp
adc
mov
loopne
push
shr
pop
dec
shll
jne
shl
dec
fcmovb
mov
aaa
fbld
cli
aad
and
add
aaa
mov
cmp
push
jb
mov
dec
dec
mov
cli
outsb
xor
adcb
xchg
mov
int3
dec
mov
pushl
pop
aas
shlb
and
dec
js,pn
mov
cwtl
dec
cmp
sti
cli
dec
push
add
fcomps
data16
mov
jl
jns
pop
aas
es
jmp
clc
sbb
adc
out
push
aaa
mov
mov
xlat
lcall
lods
mov
xor
js
ficomps
sbb
cmp
pop
sar
rcrb
inc
pop
mov
cmp
jns
ds
addb
sbb
pop
cmp
push
pop
mov
xorl
sbb
mov
ret
lret
aaa
pusha
and
sbb
shlb
mov
sbb
pop
iret
sti
adc
mov
inc
jge,pt
clc
cld
ficomps
scas
int3
mov
imul
mov
sbb
jnp
icebp
inc
lahf
pop
mov
mov
lock
arpl
insb
pop
or
xor
inc
add
aaa
cmp
popa
notb
clc
dec
mov
testb
cmp
lods
push
push
clc
jl
subl
pop
rorl
nop
or
and
cmpsb
pop
pusha
pop
jo
jmp
shlb
pop
bound
fdivrs
mov
push
mov
mov
dec
push
sub
jp
in
mov
sbb
adc
jmp
andb
xchg
push
pop
cmp
stos
jl
jno
dec
pop
out
cmp
mov
push
aaa
pop
pop
lahf
sbb
mov
pusha
cwtl
lcall
loop
inc
popa
xchg
cmp
jne
cmp
rorl
fcomi
jecxz
cmp
pop
add
sbb
ret
add
jge
sbb
cmp
sbb
fcmovnb
mov
stos
mov
sbb
cs
ficomps
pop
push
cmp
cmp
sbb
aad
shlb
scas
ret
pushf
inc
jo
cmp
jnp
sub
jbe
ds
push
pop
cmp
cld
incb
fimull
data16
dec
fidivrl
dec
dec
bound
movl
inc
push
jle
data16
pop
mov
loopne
out
pop
mov
cli
sarb
cmp
xchg
clc
push
mov
mov
lahf
pop
and
pop
mov
imul
fistps
movlps
pop
sbb
dec
add
cld
and
pop
int3
mov
fimull
adc
lcall
cld
faddl
scas
sti
dec
inc
jecxz
in
cli
and
dec
jmp
mov
repz
and
pop
int
jp
decb
inc
hlt
fcomp
sti
aad
out
pop
push
fwait
jl
mov
sbb
pop
loopne
push
aas
cld
pop
pop
xchg
ficomps
adc
add
filds
xchg
sub
pop
ret
jnp
nop
je
repz
jecxz
lds
cli
ret
test
out
notl
and
insl
xor
push
js
adc
cwtl
pop
jmp
fistpl
jle
js
testl
mov
cwtl
cmp
inc
aad
sarb
or
ja
pop
dec
jmp
pop
xor
inc
mov
fwait
mov
mov
fcomps
jb
pop
pop
mov
lock
lret
mov
dec
mov
pop
test
fildll
jge
pop
sub
add
sbbl
mov
push
jle
das
imul
sahf
rcrb
mov
or
cmp
fmuls
inc
movsl
outsl
test
nop
repz
jnp
mov
fwait
pusha
or
jae
pop
and
xor
jp
mov
mov
xor
mov
mov
cmp
adc
and
pop
aaa
cmpb
inc
mov
push
pop
lahf
xchg
in
lock
mov
mov
jl
js
mov
xchg
or
pop
loopne
or
stos
sub
out
cmpsl
call
sub
inc
andl
pushf
lahf
jge
cld
push
mov
cltd
das
mov
xchg
pop
scas
repnz
xor
pop
jnp
xor
push
inc
nop
mov
mov
sti
xchg
pop
outsl
iret
cmp
in
xor
cld
cli
jp
jp
mov
push
mov
filds
sahf
add
imul
xor
cmp
adc
setle
fstpt
dec
mov
add
cli
pop
lds
push
ret
or
fwait
ret
pop
cmc
sbb
lds
mov
pop
leave
push
test
mov
lret
pushf
pop
fs
xchg
inc
loop
pop
cmp
sbb
nop
aas
push
pushf
push
jg
mov
xor
inc
mov
sarb
ret
and
dec
fdivrl
cli
sahf
sti
sbb
xchg
dec
pop
mov
xlat
loop
fsubrl
pop
mov
ret
clc
test
or
push
adc
pushf
mov
js
cmp
mov
sbb
mov
jbe
scas
adc
fidivrl
je
pop
and
test
inc
xor
pop
aas
jge
ds
lahf
sub
jb
sbb
or
scas
les
pop
stos
cmp
out
movl
jb
fbld
cmc
icebp
mov
cmp
scas
shlb
pop
pop
mov
sbb
es
loop
ja
pop
sti
add
mov
jge
mov
je
mov
pop
inc
jns
stc
add
sub
pop
cwtl
xchg
test
fcmovb
int3
mov
and
xchg
insb
ficoml
pop
fwait
mov
xlat
mov
xchg
xor
lds
jnp
mov
jl
cli
in
aam
cs
loop
or
orl
aas
mov
lock
mov
fistpll
insl
jg
shl
xor
jl
ret
test
pop
sbb
pop
xlat
aaa
inc
sub
aas
mov
adc
sbb
dec
push
xchg
cwtl
fimuls
cmp
mov
cs
cmp
roll
push
cmp
pop
pusha
inc
jg
mov
mov
xchg
ja
sbb
mov
cmp
aaa
sahf
fs
icebp
sbb
fwait
test
int3
nop
bound
pop
lahf
mov
sbb
jg
sub
pop
sub
xchg
inc
je
xor
or
cmp
ss
or
lds
fdivrl
loop
cmp
sbb
and
cld
adc
cmp
js
cmp
addl
ss
jnp
cmpsb
push
imul
jl
push
and
jno
cld
call
and
lds
push
sub
sub
jp
sbbl
std
cld
hlt
push
mov
sbb
ljmp
xchg
cmp
cmp
pop
iret
sbb
cli
popa
jo
js
inc
iret
addl
es
lcall
ss
pop
sbb
pushf
mov
pop
clc
cmp
pusha
ds
pop
lahf
shl
rcrb
mov
outsb
rcrb
jg
push
dec
mov
pop
sbb
jge
sbbl
jno
pop
jnp
iret
ss
mov
sbb
dec
mov
dec
sti
mov
jo
adc
and
jl
and
sub
int3
cwtl
xor
clc
pop
scas
test
and
dec
mov
and
mov
jg
hlt
mov
dec
sub
insl
call
cmp
push
push
popa
sbb
outsb
add
jl
add
lds
pop
pop
inc
adc
mov
mov
push
cmp
xor
mov
pavgb
pop
insl
orb
fstpt
lds
pop
jmp
xor
dec
and
pop
cwtl
jle
dec
lcall
xor
pop
and
jnp
sbb
lret
addr16
pop
jecxz
xchg
pop
std
inc
jle
xchg
push
lds
cmp
popf
add
jae
adc
inc
jecxz
clc
jl
lcall
inc
inc
xor
in
cmp
test
or
out
sub
jge
into
lds
jg
insb
mov
mov
jnp
repnz
mov
xchg
out
or
mov
sbb
repz
rcrl
clc
imull
jne
lcall
push
inc
icebp
ret
arpl
jae
iret
jl
insl
lds
push
cmp
popf
sbb
jbe
mov
into
jecxz
test
sar
pop
inc
insl
mov
or
scas
test
push
mov
push
cmp
popa
js
pushf
movd
mov
mov
ss
or
fistpl
popa
mov
add
fmulp
lret
cmp
mov
and
insb
mov
mov
lds
sbb
imul
jg
or
sub
loop
clc
cmp
ljmp
sbbb
mov
fs
push
imul
xchg
mov
movsb
enter
les
xchg
xchg
jl
xor
push
hlt
jge
cmp
in
outsl
mov
and
fists
fdivrs
popa
jge
enter
lcall
cmp
ret
mov
xchg
mov
imul
sbb
inc
or
mov
rcl
lds
fs
and
mov
ret
jl
push
jnp
icebp
fadd
ja
sbb
outsl
lds
into
bound
pushf
jg
pop
push
mov
mov
cmp
aas
xchg
pop
fwait
inc
add
mov
aas
add
repz
mov
loopne
mov
sti
jle
mov
add
adcb
mov
jnp
xchg
mov
cltd
push
pop
aas
fimull
pop
mov
pop
xchg
adc
pushf
mov
repz
pop
sahf
jns
add
xchg
fbstp
sarb
cmpl
push
add
sti
sbb
sahf
jp
scas
dec
pop
sbb
cli
mov
push
cmp
lret
mov
add
sarb
jmp
lahf
cli
hlt
adc
adc
pusha
xchg
cld
mov
pop
icebp
push
cmc
and
addl
addr16
jp
xor
cwtl
xor
mov
mov
fidivrs
add
push
cltd
push
add
ljmp
mov
xchg
and
and
mov
roll
pop
cmp
inc
lds
mov
mov
inc
cmpsb
in
ljmp
lods
outsb
sbb
mov
mov
push
andl
inc
jl
mov
add
lea
mov
lds
repnz
fwait
cmp
cmp
sub
jge
dec
cmp
adc
pop
pop
jmp
xor
pusha
sahf
jle
popa
stc
rclb
cmp
iret
stos
jle
cmp
loope
push
pushf
push
dec
loopne
mov
sbbb
sti
outsb
inc
add
jg
adc
add
push
jle
xor
cmp
sbb
jl
ficompl
bound
popa
push
add
push
mov
pop
je
fidivrs
adc
in
pop
push
pop
adc
adc
js
dec
adcl
add
mov
rorb
cmpl
dec
xchg
push
cli
fdivrl
push
jecxz
jbe
jge
jno
xor
pop
sub
cmp
pop
cwtl
inc
hlt
clc
adc
aas
pop
subb
cmp
sbb
loopne
sbb
jns
fsubs
push
push
ficoms
cmp
pop
and
imul
add
cwtl
jle
lods
bound
and
add
sarb
pop
aaa
popa
push
lahf
out
jo
jge
mov
fcomi
cmp
pop
sub
movsb
pop
aas
pop
rcrb
jle
push
cwtl
inc
pop
mov
mov
xchg
mov
mov
xor
jp
lcall
jle
pop
jg
lock
ficomps
pop
adc
popl
rolb
cwtl
cltd
pop
jge
cmp
mov
test
or
mov
xor
sahf
sbb
add
fmuls
inc
std
push
cmp
jl
jb
sbb
ret
scas
cmpl
xchg
add
dec
loopne
push
push
cli
push
jo
cld
sub
mov
pop
add
cmp
mov
mov
inc
js
add
hlt
sub
rclb
ret
addb
jge
push
cmp
add
push
popa
sbbl
insb
clc
add
sbb
mov
and
adc
rol
insl
pop
inc
ljmp
and
ljmp
cmp
sti
into
mov
in
cmp
subb
sahf
cld
jne
cmp
rcl
rcrl
pop
pop
std
mov
sbbl
dec
cld
stc
cmp
pop
loopne
sub
cmp
dec
add
fistpll
mov
fwait
leave
lret
sti
ret
xchg
pop
dec
xchg
sbbl
adc
sub
mov
fidivs
adc
popa
enter
add
stc
jnp
and
sahf
clc
inc
cwtl
cli
loopne
aas
xor
cld
inc
cmpb
pop
or
pop
cmc
pop
aas
mov
xchg
lcall
push
ljmp
mov
pop
out
dec
cmp
jp
pop
nop
lcall
je
ficompl
repnz
mov
jp
rcrb
cmp
stos
xchg
cmp
call
ds
sbb
mov
sbb
cmp
orl
aam
rcrb
adcl
ficompl
or
jnp
sbb
mov
cld
popl
dec
xchg
xchg
mov
cmp
cmp
pop
xchg
clc
mov
inc
cld
lcall
push
inc
cli
inc
rclb
sahf
or
clc
sbb
fnstenv
mov
popa
xor
cld
cmp
pop
adc
cmpsb
cmc
pop
and
push
mov
mov
loopne
cmp
ret
sbb
mov
je
lcall
int3
dec
cltd
cmp
sbb
addr16
xchg
and
cmp
fcompl
ss
cli
cltd
jge
or
lock
push
dec
fdivrs
mov
call
sub
inc
pop
mov
fstpl
mov
mov
mov
cmp
xorl
jnp
mov
mov
push
mov
and
imul
mov
rcr
mov
mov
call
mov
stc
mov
cmpsb
insb
sub
call
jp
adc
jnp
or
int
cmpb
sbb
cmpsb
outsl
inc
push
fistpll
pushf
pop
lahf
jg
and
adcl
jp
xorl
outsb
inc
jle
mov
jle
jp
pop
sbb
ja
enter
inc
imul
dec
loopne
notl
sti
mov
std
jle
sub
stos
push
leave
lcall
stos
and
xchg
cmp
pop
ds
pop
push
ficomps
jg
jecxz
add
cwtl
loopne
mov
push
cmp
jl
mov
and
lar
cld
pop
cmp
cmp
aaa
jle
in
pop
dec
pop
nop
push
mov
add
fstl
push
jecxz
in
dec
cmpsl
aad
and
pop
and
shlb
adc
mov
cwtl
sahf
repz
dec
jae
cmp
push
out
pop
shrb
xchg
fidivrs
loopne
jp
xchg
in
xchg
cmp
aaa
xchg
enter
lret
fcoml
jp
or
cwtl
cmp
sar
std
pop
out
and
cmp
cld
and
daa
sub
lahf
add
jle
cmp
cmp
sbb
cmp
mov
xor
cmp
jb
mov
sbb
stos
cs
lahf
test
jnp
mov
mov
dec
xchg
cmpl
inc
aad
aas
rorl
dec
inc
cmp
pop
mov
mov
cmpl
out
inc
push
dec
rcrb
inc
xlat
icebp
pop
cmp
pop
xor
push
ficompl
notl
add
inc
fs
pop
jl
sahf
mov
jae
pusha
repz
xchg
or
jle
inc
fistpl
bound
int
mov
xor
sbbb
nop
mov
stos
mov
popa
cwtl
loop
and
adc
fbld
mov
sahf
fisubl
mov
stos
cmp
dec
push
ds
scas
jp
bound
js
jge
jbe
cmp
xchg
sahf
cwtl
fisttpll
pushf
je
xor
pop
sbb
pop
subb
sbb
sbb
and
pop
pop
js
jl
xor
mov
jg
inc
loop
mov
cli
mov
sahf
xchg
cmc
jge
sar
incl
jle
pusha
mov
scas
pop
and
mov
lds
mov
dec
inc
cmp
pusha
mov
pop
dec
jp
jge
xchg
lds
or
lahf
nop
pop
call
cmp
add
mov
popa
leave
jecxz
add
mov
pop
mov
fiadds
or
sbb
lahf
jns
shll
pop
sbb
pop
outsb
sub
cld
adc
jae
idivl
out
inc
cmp
pop
inc
and
scas
cmp
pushf
icebp
push
jle
ret
loop
or
xchg
jo
pop
ds
ret
jb
cmp
sub
repz
pop
pop
sbb
cmp
cmp
mov
dec
xchg
sti
je
hlt
sub
push
fwait
bound
fstpt
ret
andb
ss
cmp
mulb
pushf
stc
gs
lahf
int
rcrl
mov
cmp
mov
aaa
jmp
fistpll
inc
jg
mov
sub
cmc
mov
sbb
pop
cs
scas
repz
sti
cmp
cmp
sahf
aam
cli
in
ljmp
nop
fistps
cmp
dec
cmp
subb
pop
cmpsl
add
sbbb
mov
and
inc
lds
fsubrs
int
pop
adc
clc
mov
mov
inc
push
rcr
scas
dec
pop
cli
sub
pop
jge
pop
sub
lds
sub
xchg
fcompl
cli
jle
jle
sbb
testl
pushf
clc
sbb
addb
loopne
pop
inc
sbb
cli
xchg
push
push
rcr
popa
fistpl
sub
sbbb
jl
loopne
cwtl
dec
notb
sbb
fcomps
cmp
cmp
ret
inc
pop
imul
imull
pop
adc
fs
jb
jnp
dec
inc
sti
mov
dec
adc
repz
std
mov
cmp
lahf
sbb
push
popa
push
fdivrl
sbb
push
sub
push
push
pop
jnp
jno
pushf
lahf
jo
pop
fisubrs
cld
push
or
rorb
arpl
adc
int3
pop
sub
cmp
out
mov
ljmp
sbb
pop
mov
lahf
mov
cmp
cwtl
pop
pop
cmp
cld
dec
sti
data16
cmp
add
outsb
jno
scas
or
mov
sbb
imul
cmp
pop
pop
cmp
lahf
mov
sbb
push
rolb
sbb
cmp
je
mov
push
pop
sbb
aam
repnz
lahf
loopne
sbb
pushf
sbbl
cmp
pop
adc
pop
mov
fadd
mov
lock
pop
mov
lcall
jp
pop
cmp
push
hlt
es
sub
xchg
cwtl
add
xchg
les
xor
mov
mov
pop
mov
xor
mov
cmp
cmpsl
dec
out
ficoml
aas
idiv
sbb
pop
cmp
jb
mov
pop
mov
mov
pop
pop
cmp
and
sbb
pop
sub
outsb
test
sub
call
xor
pop
aas
popa
sbb
xor
stos
inc
cmp
test
je
jle
rclb
aas
push
cmp
pop
mov
xor
sub
lcall
xchg
mov
dec
in
sbb
push
clc
pop
enter
sarl
inc
mov
cld
push
jae
pop
inc
pop
jae
xchg
xchg
cli
inc
xchg
mov
cmpsb
orb
mov
mov
add
push
cmp
sbb
lods
inc
or
jb
cmp
add
lcall
mov
pop
xchg
mov
cld
leave
mov
cld
les
sbb
cltd
incl
xor
pop
add
push
pop
ljmp
fcmovnu
cmpl
pop
cmp
xor
cmpb
cmp
xchg
push
lcall
jns
xor
jnp
popf
cwtl
dec
xchg
mov
and
andl
or
sbb
xor
cld
jnp
pop
cmp
loopne
jno
xchg
jg
pop
pop
clc
mov
sub
push
xor
add
fmuls
popa
popa
lods
rclb
xchg
sbb
add
test
mov
insl
sti
pop
cld
add
mov
andb
dec
not
insb
lds
popf
push
jmp
mov
lea
sub
xchg
add
andl
je
dec
sbb
cmpsb
xchg
cmp
loop
jl
and
xchg
js
dec
add
cmp
mov
test
cld
dec
enter
bound
mov
adc
fsubrs
lcall
pop
ftst
push
ret
rcrb
mov
xchg
cmp
shr
aas
loopne
aas
add
fdivrs
xchg
xchg
sbb
out
jb,pt
inc
xor
jp
pop
pop
jle
cmpb
cmp
decl
pop
cmp
mov
jle
pusha
dec
jmp
cmp
pop
mov
pop
xchg
mov
push
lds
push
add
and
cmp
pop
cld
jl
scas
pop
int
cmc
pop
cmp
mov
sarb
cmp
jg
dec
mov
in
jmp
dec
sbbl
pop
inc
clc
cmp
data16
lret
pop
inc
and
dec
jge
push
lahf
sti
push
adc
cmpsb
mov
cwtl
das
adc
in
mov
bound
cmp
mov
jne
cmp
pop
cwtl
stos
mov
jecxz
or
pop
aaa
sbb
int3
test
cmp
cmp
jb
cli
mov
out
rcrl
xchg
rolb
add
cmp
push
sbb
ror
pusha
inc
mov
add
pop
jge
dec
jo
pop
push
mov
jmp
adc
jle
sti
jge
data16
lcall
mov
jo
stc
js
xor
sti
pop
loopne
fstpt
fcomip
cmc
mov
andl
js
pusha
mov
fsubp
mov
popa
inc
cmp
jge
xchg
je
test
add
jge
sbb
sarb
or
add
mov
fdivrs
shrb
sahf
dec
sbb
add
mov
lds
jnp
cmp
mov
and
jnp
loopne
adc
test
mov
lret
mov
sub
inc
out
fbld
pop
mov
repz
xor
pop
int
mov
or
sti
cld
cmp
push
sbb
fwait
in
mov
popa
mov
cmp
mov
pusha
cs
fwait
xor
cmp
fadds
movsb
mov
adc
cmc
repnz
inc
or
xchg
mov
jb
cmp
aas
faddl
pop
jp
enter
ret
sbbl
mov
cmpsb
in
movswl
inc
and
adcb
je
adc
cmp
popa
stos
xor
or
or
fwait
mov
pop
das
cmp
in
lds
cmp
cwtl
mov
lcall
cli
mov
movl
jle
test
mov
pop
jp
inc
or
ret
movsb
mov
cltd
test
out
out
add
in
lcall
jge
xchg
subb
or
jg
push
xorl
sarb
and
pop
cli
cmp
movb
pushf
inc
es
sbb
mov
notl
movsb
jl
add
js
mov
pop
xor
pusha
mov
mov
pushf
loopne
sbb
sub
sub
test
mov
push
lret
stos
cwtl
js
shlb
xchg
dec
pop
pusha
mov
mov
push
fdivrs
fistpll
sahf
or
inc
and
sbb
xchg
stos
xchg
lcall
mov
test
int
in
inc
cld
fisubs
cmp
call
sti
dec
test
pop
incl
shll
arpl
lret
cmp
jl
pop
sbb
jo
fdivrl
cmc
stc
mov
loopne
lcall
pop
rolb
xchg
sbb
fsub
ret
orb
or
inc
in
mov
sbb
fst
sahf
jle
clc
cld
addr16
sub
inc
jmp
sarb
sbbb
mov
mov
adc
pop
iret
and
nop
std
shlb
rcr
out
sbb
js
fwait
dec
sahf
mov
loope
or
les
pop
mov
js
mov
or
adc
cwtl
sti
add
jle
jge
xor
mov
ds
shlb
lea
loopne
inc
js
clc
inc
mov
cmp
mov
pop
fmull
pop
dec
push
add
dec
jp
mov
jo
xchg
outsb
arpl
push
ss
mov
out
imul
jne
lds
idivb
dec
jno
pop
adc
daa
ss
pop
dec
pop
sbb
and
cmp
push
mov
mov
fisttpll
popa
jl
cli
cmp
aad
push
adc
and
add
or
fcomps
add
jnp
pop
adc
iret
aad
cmp
jle
mov
loopne
add
sbb
pusha
adc
jg
inc
mov
pop
pop
mov
fisubrl
hlt
cmp
aaa
adc
pop
or
jg
nop
out
xchg
lcall
jnp
loopne
push
pusha
divb
pop
sub
jp
jp
push
fsubrs
inc
ficoml
popa
ljmp
inc
je
mov
pop
mov
loop
pusha
sahf
sub
frstor
jle
ret
pop
sbbb
popa
cmp
adc
insl
cli
aaa
dec
fcompl
outsb
pop
mov
aaa
in
pushf
cmpsb
out
aad
fdivrl
xabort
nop
andl
ljmp
adc
fdivrs
rcrb
outsl
jg
sbb
mov
aaa
lods
orb
lahf
cmp
ja
cltd
cmp
and
cld
cmp
fadd
or
xchg
dec
ss
fldenv
jnp
jnp
add
pop
loopne
pop
sbb
cmc
pop
pop
mov
fucom
sbb
push
xchg
sub
or
cli
inc
pop
push
cld
js
cmp
dec
xchg
pop
dec
xor
leave
lds
inc
dec
cmp
cld
fdivrs
pop
cmp
mov
sbb
dec
or
jge
test
lods
cmp
pop
cmp
rcrl
xor
mov
adc
jno
ja
cmp
call
jnp
push
imul
push
aas
rcr
pusha
cwtl
das
and
ror
jl
mov
std
sbb
push
sbbl
jle
dec
fstpl
insl
aas
fcmovu
push
inc
sahf
sbb
je
in
ljmp
xchg
mov
loope
pop
and
dec
cltd
insb
pop
into
or
lds
jl
insb
movsl
mov
jg
sub
test
mov
lds
fidivrs
aam
js
daa
mov
pusha
ret
das
dec
xchg
pop
lcall
cmp
scas
mov
mov
or
sbb
pop
add
push
dec
rolb
icebp
fstps
jns
cld
xor
lds
testb
xchg
popa
sti
cld
rcr
inc
shl
push
aas
add
mov
aas
adc
adcb
popa
xchg
dec
dec
rcr
lds
fidivs
dec
push
inc
pop
jnp
mov
sub
xchg
dec
cmc
imul
ljmp
jmp
adc
fstps
sbb
fdivrl
mov
add
or
addb
ljmp
jnp
pop
xchg
pop
jl
dec
js
cmc
popa
pop
sub
fdivrl
jns
xor
jl
pop
mov
jecxz
fst
xchg
sbb
xorl
sbb
out
sub
xor
pop
pushf
negl
pop
loopne
sahf
mov
in
and
mov
test
addl
adc
in
ljmp
mov
jl
dec
fwait
cmp
sti
and
insb
pop
int
cld
push
pop
jge
mov
fdivp
aad
es
or
pop
out
mov
jp
clc
xor
fbld
sti
cmp
xor
cwtl
sahf
dec
fcomp
mov
mov
cmp
adc
cld
inc
push
pop
pusha
fcmovnbe
fidivl
mov
call
cmp
cwtl
icebp
cmp
mov
xchg
dec
cmp
cmp
jg
mov
jp
outsb
xor
push
fcompl
ficompl
sbb
mov
push
and
loopne
add
sti
pop
dec
jp
mov
sbb
cmp
fwait
mov
push
imul
push
cmp
fdivrs
aaa
addb
hlt
cs
mov
push
pop
psadbw
mov
sbb
inc
mov
jg
add
je
cmp
pop
dec
mov
in
adc
lahf
mov
das
loopne
or
repz
mov
jmp
out
or
outsb
lret
sbb
cwtl
cmp
mov
mov
cmp
pop
lahf
je
mov
mov
inc
ds
mov
xchg
pop
jb
js
fists
sbb
sarb
aas
pop
sti
popa
pusha
fdivrs
fidivrs
pop
dec
andl
xorl
inc
jle
notb
cmc
pop
sub
add
add
shr
pushf
xor
leave
scas
nop
cwtl
cs
jnp
js
mov
and
jge
mov
add
nop
jmp
cmpsb
mov
jp
jg
mov
inc
pop
inc
sbb
inc
sti
jno
pop
push
inc
or
lods
lock
ret
lret
or
pop
shlb
mov
pop
ss
jg
sbb
sbb
inc
in
mov
xor
in
pushf
mov
inc
std
pop
inc
cltd
fadds
pop
js
cmp
mov
inc
out
cltd
inc
jp
sahf
sbb
push
aas
mov
bound
pop
push
lea
in
mov
mov
adc
loopne
lock
add
rcr
inc
cmc
into
push
jg
jle
mov
fcmovb
pop
mov
jp
incl
fistpll
stos
pushf
cmp
cmp
xor
sarb
pop
pop
pop
dec
cmp
lods
scas
mov
pop
adc
fcomi
mov
loopne
ficompl
ja
sahf
mov
sub
pusha
cwtl
ljmp
fistpll
xchg
cmp
sbb
mov
pop
mov
ficoml
mov
lock
inc
jl
lahf
scas
icebp
clc
pop
lock
pop
int
pop
aaa
sbb
sub
fwait
inc
cli
sbb
or
loopne
xchg
xor
pushf
cld
call
int
jge
add
sub
adc
cmp
lcall
fnsave
or
cltd
mov
cld
and
cwtl
or
adc
sbb
push
xchg
sbb
cmp
mov
inc
std
sbb
ret
inc
cmp
inc
cmp
fcmovnu
ljmp
out
pushf
sub
sbb
loope
adc
mov
outsb
js
sbb
sbb
inc
pushf
xchg
mov
sub
fstl
mov
push
aas
pop
fdivrs
jp
jmp
aas
test
pop
rorb
cmp
rcrl
shll
pop
call
fdivrs
leave
cwtl
cmp
and
and
mov
scas
ds
mov
inc
dec
cmp
ffreep
js
mov
pop
pop
sbb
cld
shlb
sahf
mov
and
inc
add
stc
cmc
add
pop
or
and
fwait
mov
hlt
pop
jle
movsl
mov
pop
add
jmp
sub
sub
and
lods
push
ja
filds
xor
xor
scas
sti
cmp
fwait
xor
sbb
xchg
pop
pop
clc
imul
inc
mov
cmp
fnstcw
mov
sahf
pop
addl
and
and
ret
lahf
cmp
or
jg
add
add
mov
jne
pop
addl
mov
mov
fistps
xor
loope
icebp
cmp
cmp
mov
mov
sbb
mov
mov
add
cld
sbb
jle
jge
mov
pop
sbb
mov
and
add
dec
push
sbb
pop
cmp
ds
bound
mov
sub
inc
mov
setle
pop
push
pop
xchg
rclb
push
fstl
and
movsl
sub
scas
ficoml
inc
cld
rcrb
sub
cmc
loop
dec
add
cli
lcall
jns
idivb
and
gs
dec
nop
pop
inc
popl
je
pop
lcall
mov
sbb
jb
rcrb
fcompl
mull
ljmp
sub
adc
sete
aam
fnstcw
dec
dec
jle
jecxz
mov
inc
inc
inc
mov
sbb
mov
out
scas
mov
decb
mov
add
push
pop
cmp
pop
lds
stos
adc
lds
fidivl
in
repz
pushf
faddl
popa
inc
mov
and
jl
dec
leave
aaa
add
mov
xor
jle
addl
adc
sar
mov
clc
xlat
push
cmp
and
pop
sbb
hlt
fnstenv
fsubs
push
or
imulb
rorb
adc
fidivl
jp
pop
push
mov
xchg
pop
popa
fidivrl
and
mov
scas
and
mov
cmc
je
jmp
add
sbb
cmp
das
je
mov
push
mov
mov
inc
cmp
sahf
mov
notb
cmp
dec
fisubrs
mov
lret
fisubs
fcomps
inc
in
inc
xchg
pop
cli
jle
iret
sbbb
mov
mov
inc
mov
xchg
aaa
pusha
js
inc
jge
inc
nop
push
aad
incl
into
ds
mov
add
cld
jl
push
jmp
ljmp
mov
xlat
cli
addb
jmp
imul
rcrb
fimull
jl
mov
cmp
adc
sarb
push
aas
pop
mov
push
out
pop
add
jge
sti
test
mov
sarb
stc
pop
jle
mov
icebp
in
sbb
mov
fisubs
stc
sahf
cltd
add
pop
add
loopne
jle
cmp
jp
dec
call
fidivrs
cmp
insl
push
add
lods
and
add
inc
add
inc
add
push
pop
cmp
sbb
lcall
lds
sbb
jge
jle
jle
pop
dec
push
push
jmp
pushf
out
cmp
xor
pop
mov
jl
fnsave
mov
add
mov
sbb
sub
popa
bound
adc
push
mov
mov
pop
push
js
ss
and
fcomp
call
jge
inc
dec
jns
ds
inc
fcoml
cmp
and
jnp
sahf
mov
dec
or
mov
cmp
mov
xchg
pop
scas
je
shlb
jl
pusha
pop
rcr
int3
cltd
cmp
aam
loopne
jl
iret
xor
popa
pop
sahf
rolb
cld
jp
cmp
cmp
push
pushf
pop
mov
pop
orb
scas
sarb
loopne
popa
ds
jl
jg
jle
cmp
jge
pop
clc
mov
or
dec
fadds
rcr
lcall
out
fwait
mov
xor
test
aaa
clc
dec
push
pop
inc
mov
cmp
push
add
xor
enter
scas
push
aaa
cmp
cmp
sub
pop
ret
clc
jecxz
lcall
ss
cmpb
fstpl
call
mov
sahf
shlb
mov
sbb
inc
push
sahf
mov
and
sbb
call
sub
pop
clc
in
loope
sti
mov
sbb
xchg
inc
sbb
in
push
cld
mov
xlat
sbb
shlb
mov
push
lcall
cmp
fistl
inc
push
sbbb
cmp
pop
or
aad
mov
add
jl
cld
or
iret
popa
lds
add
mov
xchg
and
ljmp
cli
jl
push
mov
pushf
pop
mov
iret
inc
rcrb
mov
jp
fdivrl
and
xchg
adc
pushf
push
pop
fistps
jmp
pop
scas
pop
push
jl
or
or
inc
lret
add
xlat
cld
sub
mov
mov
inc
outsb
ss
scas
lds
pop
pop
sti
dec
nop
dec
fwait
mov
les
clc
pop
dec
je
dec
jno
fcomps
js
loopne
inc
push
mov
mov
sbbb
repnz
sbb
pusha
cld
and
das
sahf
jg
cmp
pop
cmp
mov
mov
jno
repz
pusha
mov
push
fcoms
rolb
sbb
ljmp
or
adc
pop
sti
xor
jnp
les
rolb
xchg
in
sti
aaa
loopne
out
mov
lret
aad
inc
lcall
sahf
pop
mov
inc
mov
add
push
clc
mov
outsl
pop
sbbl
out
xchg
sbbb
pushf
inc
pop
stos
cmp
mov
sbb
jne
push
fcompl
js
mov
jae
cmp
pop
repz
pushf
pop
bound
xchg
inc
lods
mov
xchg
adc
pop
addl
inc
cld
jb
pop
inc
dec
jge
fstpt
mov
cmp
pop
lret
mov
andb
or
loop
pop
bound
pop
mov
cmp
mov
pusha
push
mov
stc
dec
pop
aad
fcmove
sbb
fistps
arpl
pop
mov
ljmp
mov
pop
mov
jle
xchg
sbb
mov
clc
mov
sahf
pusha
jg
push
sbb
inc
push
cmp
call
jle
pop
mov
xor
movsb
adc
mov
or
loope
cltd
fcomp
popa
outsb
mov
sarl
lds
and
inc
jle
jnp
jo
ss
sub
inc
xchg
aas
je
mov
pop
mov
sti
sbb
jg
xorb
sbb
push
mov
lret
inc
jge
or
mov
jne
hlt
xchg
xor
es
mov
cmp
cli
fidivrs
fists
cs
fistl
aam
jecxz
jge
cmp
js
mov
popa
and
dec
xchg
aas
shlb
sti
adc
dec
xchg
pop
mov
movsb
jmp
imul
sbb
aad
pop
mov
jl
pop
pop
std
decb
sahf
cmp
test
dec
pop
mov
sbb
punpckhdq
jle
ss
mov
mov
mov
repz
je
repnz
jge
push
sti
mov
repz
and
mov
push
mov
fisubrl
bound
or
xchg
aas
cli
jge
cmp
in
xlat
je
cmc
call
mov
pop
fidivrs
ss
js
inc
mov
pop
jnp
aaa
cmp
cmp
popa
inc
repz
int
cmp
fstpl
pop
fidivrs
add
ss
inc
adc
inc
cmp
lcall
dec
js
xor
sbb
lock
pop
inc
bound
mov
jnp
dec
xchg
jl
daa
int
into
pusha
adc
cwtl
cmc
cmc
imul
push
cmpsl
and
clc
sbb
xor
fstpt
sbbl
test
dec
pop
pop
push
insb
jg
jnp
test
aam
dec
adc
fsubr
jle
aas
insl
mov
dec
aas
pushf
fwait
mov
sbb
sti
cmp
mov
xchg
clc
adc
sbb
test
hlt
loopne
jge
push
aas
jo,pt
imul
cmp
lods
sbb
lds
mov
repz
sbb
dec
add
loope
imul
sub
sbb
jg
mov
out
loopne
loop
mov
xchg
adc
sub
dec
pushf
mov
lahf
sahf
rorl
inc
lcall
adc
xor
sub
loope
nop
add
pusha
sbb
cmp
fdivrl
pop
and
push
lahf
js
sub
mov
inc
jp
inc
or
mov
rolb
pop
mov
jnp
fcomip
jge
rorb
cli
mov
inc
cmpsl
pop
pop
mov
fildl
pusha
mov
mov
idiv
cmp
popa
cmp
or
cmp
mov
fdivrl
ljmp
and
vpavgb
mov
adc
inc
inc
shr
pusha
in
mov
add
jnp
cmp
insb
pop
jo
in
inc
outsl
cwtl
fistl
inc
sub
mov
loopne
push
inc
push
sti
sbb
iret
mov
mov
arpl
jae
and
sbbb
add
dec
loopne
jp
mov
cmp
pop
lea
das
pop
insb
cmp
aas
mov
cmp
das
add
in
adc
pop
pop
mov
gs
rclb
outsb
push
cwtl
push
adc
mov
adcl
sbb
mov
popa
jge
je
lahf
pop
shll
cmp
int3
mov
lock
pop
cmp
mov
pop
add
mov
mov
pop
or
xor
pop
push
cmp
xchg
outsl
and
xchg
mov
push
mov
or
insl
pop
cmp
pop
mov
shll
pop
js
orb
adcl
loopne
mov
push
xor
lds
add
push
popf
inc
or
cltd
pushf
incb
aaa
push
sbb
imul
bound
clc
mov
xchg
stos
jmp
mov
in
inc
cmp
xchg
out
arpl
pop
andl
cmp
hlt
shlb
cld
mov
sbb
fdivrl
mov
clc
fcomps
scas
xor
adc
insb
jns
in
test
js
cli
cmpb
sti
mov
mov
pop
leave
pop
dec
std
sbb
pusha
pushl
aas
cmpsl
jmp
push
icebp
cltd
dec
lods
cs
sbb
xor
push
mov
cwtl
call
cmp
clc
jnp
add
stos
inc
mov
lahf
std
cmp
pop
add
add
hlt
jns
and
inc
lea
push
sarl
mov
mov
fcompl
dec
push
scas
inc
aas
aam
int
xchg
pop
pop
pop
cmp
mov
jmp
mov
lcall
mov
or
inc
mov
push
sbb
push
cmp
ret
push
les
dec
cwtl
dec
push
jg
xchg
push
lret
inc
stc
xor
pop
mov
cmp
clc
sbb
push
lahf
cmp
lcall
pop
xor
fsubs
sbb
mov
pop
pop
lock
inc
mov
adc
sbb
out
fs
add
mov
fs
sbb
cli
cmp
and
mov
fidivl
pusha
push
inc
cmp
cmp
add
mov
cmp
dec
lret
cmp
adc
sub
out
jb
cltd
outsb
pop
or
lret
sub
and
lcall
add
jp
pop
ds
cmp
jnp
hlt
sbb
sub
js
mov
inc
xchg
jo
aas
fidivrs
cmp
stos
lahf
inc
or
andb
and
pushf
jnp
les
leave
mov
xchg
int3
mov
jle
repz
and
cmp
ret
cmp
mov
ljmp
jp
pop
jp
stos
inc
and
push
loope
fwait
sbbb
fisubrl
lret
push
mov
add
fiadds
mov
cmp
testb
cwtl
dec
and
xor
cmp
pop
mov
jnp
sarb
pop
inc
pop
in
inc
mov
mov
sbb
or
dec
inc
pop
mov
pop
add
jns
iret
cld
and
pop
mov
mov
clc
out
or
in
xor
enter
pop
mov
inc
cli
idivb
add
xchg
inc
shrb
adc
loopne
lret
sub
sti
sbb
hlt
mov
int
fidivrl
loopne
mov
sub
fwait
pop
push
call
pop
into
stos
ja
mov
andl
mov
push
loopne
cmpl
or
inc
dec
sti
js
mov
mov
fidivrs
sub
pop
sbb
stos
and
and
jl
adc
cwtl
sbb
sub
inc
jbe
inc
test
sahf
into
push
pop
sahf
mov
sti
mov
push
cs
sbb
icebp
jle
inc
mov
js
fmull
repz
adc
cmp
sti
dec
mov
xorl
out
int
jne
stos
push
inc
lcall
jle
push
dec
mov
fisubs
or
fcmovnu
mov
pop
mov
add
popa
idivl
push
adc
jle
mov
pusha
jg
mov
sbbb
cmp
js
push
cmp
loop
jg
push
jnp
inc
mov
mov
xchg
rcll
push
pusha
mov
xchg
add
aaa
fimull
dec
mov
in
cmp
adc
mov
orb
arpl
push
and
aas
pop
pop
ficompl
push
out
stc
lea
je
repz
mov
add
testb
aas
pushf
pop
inc
sar
mov
faddl
cmp
cld
pop
cmpb
fs
and
iret
pop
inc
bsf
cwtl
mov
les
fwait
pop
mov
sbbb
rcrb
mov
js
cmp
mov
inc
stc
loopne
cmp
mov
rcrl
dec
mov
mov
ja
cmp
push
clc
add
cmpb
push
in
push
and
outsb
mov
pusha
loop
sar
fisttpll
mov
clc
frstor
gs
inc
pop
xchg
cmp
fwait
push
and
out
cmp
push
les
jecxz
in
xlat
cld
push
orl
pop
sti
sbb
faddl
cmp
ds
jg
pop
dec
cmc
jnp
xchg
shlb
cmp
jb
mov
outsb
lret
bound
adc
fstpt
pop
push
dec
sarl
pop
fsubr
aaa
pop
mulb
cmp
pop
fistpll
pop
push
mov
mov
pop
lahf
adc
fsts
mov
int3
jns
cltd
cwtl
cmp
mov
test
pushf
movsb
mov
cli
pop
mov
sahf
cld
jp
xor
push
mov
pop
arpl
mov
xchg
mov
mov
sahf
dec
icebp
xor
out
xor
inc
cmp
cmpb
add
xchg
jge
aas
icebp
mov
fmuls
andl
pop
ret
push
popa
mov
int
and
lcall
into
pop
push
jg
jnp
cmp
lahf
stos
aad
pop
sub
sti
jnp
fistpll
sbb
push
xchg
mov
pusha
sbb
pusha
or
lcall
inc
loope
push
jp
lcall
sbb
ss
cmpb
fidivs
inc
sub
sbb
popa
mov
or
jl
cwtl
cltd
inc
mov
mov
rcrl
push
mov
shl
sbb
dec
push
pop
dec
jecxz
fcmovnbe
pusha
sbbl
and
pop
mov
fwait
adc
cmp
sarb
decl
vsubss
lahf
pop
add
xchg
adc
mov
sbb
jge
aaa
imul
and
pop
cmpsl
lds
into
pop
xchg
push
mov
int3
jecxz
xchg
int3
stos
or
cmp
mov
aad
cmp
in
push
aam
int3
sti
push
pop
cli
movups
ja
xor
pop
ret
je
jnp
and
fwait
ret
push
push
aaa
push
mov
inc
pop
lcall
cld
in
jnp
pop
pop
add
sahf
sub
ret
xchg
jl
je
mov
fdivr
and
jg
loop
ret
adc
and
or
cmc
rcrb
pop
aas
std
mov
repnz
pop
adcb
insb
hlt
pop
mov
pop
pop
lcall
xor
mov
cmp
mov
add
pop
pop
inc
xor
adc
pop
loopne
push
jb
mov
mov
shlb
mov
popf
and
loopne
jle
inc
and
pop
pop
xor
mov
pop
sbb
mov
or
jns
xchg
loope
dec
leave
dec
leave
xchg
filds
add
adc
aad
push
call
inc
and
sbb
jle
lds
subb
pushf
in
mov
mov
adc
cmp
mov
inc
jg
push
fidivrs
sbb
push
xor
add
lods
add
mov
rorb
and
adc
pop
pop
mov
fsubp
cmp
dec
repnz
sti
mov
mov
data16
mov
dec
les
add
std
pop
mov
cli
pop
cmp
hlt
sbb
jg
fwait
jo
inc
sbb
jl
sbb
ds
clc
mov
sub
pushf
sti
jge
fbld
inc
sbb
mov
sahf
clc
cmp
iret
xchg
push
jge
sbb
lahf
mov
dec
int3
pop
mov
mov
out
scas
inc
mov
adc
fcomps
dec
test
jns
in
fcoml
adc
loopne
mov
jg
pusha
cmp
enter
inc
inc
repz
jl
or
mov
ljmp
das
sbb
data16
mov
fiadds
pop
mov
pop
mov
iret
cld
xchg
loopne
inc
xchg
fiaddl
jge
mov
in
push
add
sbb
mov
mov
scas
xor
dec
xchg
cmp
icebp
mov
pop
scas
stos
mov
test
adc
dec
jns
cmp
dec
int
jle
cltd
jl
pop
cwtl
mov
mov
adc
cmpsl
adc
inc
dec
incl
cmp
incb
fisubl
js
addr16
outsb
mov
mov
int3
pushf
fsts
xchg
fistpl
sbb
inc
pusha
dec
jo
jl
cs
sahf
pop
cmp
icebp
sbb
sti
cmpsl
jne
add
stos
xchg
jge
rolb
push
outsl
cmp
cmp
xchg
cmp
jge
aad
pop
sti
push
mov
sbbb
pop
inc
sarl
pop
sti
mov
cmpsb
cwtl
adc
pop
cmp
sbb
jnp
leave
aaa
jge
push
leave
int
in
int3
jg
adc
pusha
fdivs
pop
cmpl
sub
fwait
xchg
pop
es
ret
cmp
cmp
xor
jb,pn
pop
cmp
popa
and
cli
flds
jle
sbb
iret
jg
adc
out
cmc
pop
inc
or
dec
pcmpeqb
mov
mov
dec
mov
mov
jg
cwtl
fwait
sbb
pop
and
cld
pop
mov
mov
sarb
pop
mov
xchg
and
je
clc
inc
mov
das
aaa
lock
mov
adcl
mov
mov
iretw
cmp
cmp
loope
je
adc
lcall
sbb
fiadds
inc
cmp
pushf
fsubl
bound
jp
inc
pop
sbb
clc
mov
cmp
fists
jnp
int
das
adc
cmp
bound
mov
decl
divps
lcall
icebp
push
mov
mov
sbb
and
mov
mov
inc
fistpll
cmp
pop
in
cmp
dec
enter
adc
cmp
mov
adc
mov
mov
mov
inc
fdivrs
and
dec
cltd
mov
cmc
cmp
cmp
sarl
sbb
or
pop
dec
jp
sub
cmp
fidivrs
cmp
sbbl
lods
in
lods
cld
sbb
test
cmp
pop
stos
inc
cli
jb
jg
dec
cmpb
rcr
push
mov
stos
jl
jo
mov
inc
test
sahf
insl
aad
fcompl
mov
inc
jp
jl
inc
sbbb
push
stos
add
sbb
daa
xchg
sbb
les
cmp
jnp
cmp
lret
dec
mov
pop
lcall
cmc
mov
mov
lahf
clc
dec
fcompl
push
mov
fidivs
orl
mov
cmp
mov
leave
cs
inc
loopne
dec
stos
and
push
filds
jl
sub
and
cld
shll
pop
jae
push
pop
dec
shll
outsb
mov
cmp
test
sbb
hlt
pusha
hlt
stos
mov
lds
pusha
add
sbb
into
cmp
sub
hlt
sbb
out
dec
sub
rcr
pop
jle
mov
jnp
jge
fwait
pop
inc
inc
idiv
cld
sbb
dec
xor
arpl
add
aam
jl
pushf
mov
cmp
sbb
sarb
jae
jnp
adc
popa
inc
pop
xchg
cwtl
cmp
cmp
pop
sti
sarb
pop
lahf
mov
sbbb
lds
rcll
mov
cltd
mov
cmp
ja
cli
fucomi
mov
mov
pusha
jb
adcb
xchg
sahf
sbb
dec
bound
insb
fistpl
sarb
cmp
mov
dec
lds
cli
fwait
shrb
pushf
cmp
sbb
jo
sbb
std
pop
loop
mov
cwtl
ret
jl
and
push
mov
pusha
das
mov
sbb
jge
pop
aas
lret
fadd
cmp
loopne
roll
sbb
pop
lcall
inc
call
loopne
loop
rorb
pop
xchg
mov
mov
jb
sbb
cld
inc
mov
xchg
fmull
mov
loope
push
jp
mov
sbb
jg
aad
rclb
out
stos
lcall
sub
inc
sub
fsubr
jle
jp
lock
lahf
lret
clc
mov
jnp
xlat
jp
mov
jle
mov
loop
sahf
sbb
and
sub
sarb
lock
jg
jb
xchg
mov
mov
fdivr
mov
inc
pop
pop
popa
lea
ds
pusha
dec
cmpsl
mov
jge
jmp
inc
jnp
notl
pop
xchg
jp
mov
dec
repz
xchg
clc
add
add
add
test
pop
pop
pop
inc
iret
and
sub
jmp
enter
add
push
and
add
cmp
jmp
jnp
jns
adc
arpl
outsl
xor
stc
xchg
lods
js
mov
rcrb
mov
inc
mov
cmp
lcall
idivl
mov
cld
daa
inc
pushf
xchg
arpl
jno
mov
lds
cmpsb
testl
and
and
cmp
pop
out
mov
push
pop
dec
in
jle
or
pop
jle
fistpll
cld
fistps
mov
aas
mov
pusha
arpl
dec
xor
and
cli
int
push
pop
xchg
ds
mov
dec
fcmovnb
ret
adc
sbb
xchg
xlat
cmp
fistpl
mov
jge
cwtl
jo
inc
fadds
adc
ficoml
cmp
or
lods
adc
sti
lods
orb
jg
ret
mov
shrb
pop
mov
mov
jb
cld
cmp
js
clc
mov
mov
lea
dec
cmc
test
xor
inc
lahf
pop
add
push
mov
jl
fmul
mov
addb
or
popa
sbb
jge
data16
lds
cmp
aas
fdivrs
mov
mov
mov
cld
sub
outsb
lock
mov
leave
in
mov
sti
jp
mov
adc
pushf
sbb
ss
xorl
incl
movsl
sub
iret
push
mov
aas
lahf
or
pop
mov
pop
inc
mov
popa
fnstcw
cmpb
jo
adc
fidivrl
fildll
or
pop
fcoms
ret
mov
mov
loopne
push
into
mov
cmp
inc
xchg
and
and
mov
push
rcr
mov
cld
or
mov
sahf
shrd
dec
cmp
jge
cmp
inc
sbb
xor
fldcw
sbb
test
fcompl
in
sti
mov
xor
stos
push
outsb
add
mov
aas
push
mov
jge
test
mov
or
mov
sti
jge
fwait
repz
shrb
mov
add
iret
rcll
fs
pop
lcall
out
mov
sbb
rolb
cmp
testl
lret
and
aaa
push
int
imul
jle
add
sub
jne
add
push
pop
mov
lahf
add
push
insl
mov
sti
fnstsw
fwait
cmp
lods
cmp
lea
sahf
dec
out
pushf
inc
rorl
inc
xor
pslld
pop
or
jb
hlt
pop
cmc
scas
js
fisttpl
jg
adc
sbb
xchg
pop
or
adc
jb
sbb
xchg
xchg
pop
xor
sbb
imul
push
rolb
fcoml
loop
or
pop
and
xlat
pop
ret
mov
adc
mov
xchg
jg,pn
loopne
mov
fcmovnu
jns
cmp
outsb
push
popa
sti
faddl
mov
cmpl
sahf
test
mov
in
imul
fld
sarb
mov
popa
sarl
inc
xchg
adc
cld
leave
cltd
test
pop
mov
int3
cmp
inc
dec
mov
pusha
push
test
lret
jae
mov
adc
pushf
mov
lret
shld
mov
in
mov
adc
add
dec
loopne
sti
sbbb
call
push
filds
dec
jmp
dec
adc
adcl
pop
fisttps
je
scas
je
dec
cld
mov
lcall
je
shrb
adc
sbb
or
mov
dec
push
clc
xchg
pop
sbb
xor
jmp
cltd
andb
xchg
pop
mov
cmpsb
add
sbb
mov
pop
push
pop
pushf
jnp
pop
mov
dec
xchg
or
cli
mov
leave
fadd
stc
mov
rorb
mov
cmp
inc
sub
inc
inc
sbb
mov
sbb
js
test
jp
test
testb
push
repz
aas
pushf
lcall
test
mov
and
mov
pop
lds
inc
xchg
mov
adc
jl
dec
mov
cld
mov
pusha
popa
call
aas
subl
adc
arpl
subb
pop
jmp
sbb
ret
dec
mov
pusha
and
scas
cmp
stos
and
insb
pop
mov
pop
inc
int
inc
int3
jo
out
jnp
jge
inc
mov
loope
adc
pop
test
cmc
xor
sbb
dec
pop
jp
hlt
inc
cmp
hlt
test
outsb
cld
clc
add
orl
jnp
jno
addb
dec
cmp
fwait
xchg
jp
fisttpl
repz
jnp
bound
incb
inc
scas
jp,pt
jno
jb
lock
fisttps
cmpsb
int3
aas
mov
shll
jg
jae
pop
mov
lahf
pop
pop
sub
js
ds
pop
hlt
cmpsb
jae
mov
or
hlt
adcb
jge
dec
clc
xlat
pop
mov
inc
pop
mov
pop
lcall
pop
ljmp
fwait
out
or
or
and
cmp
cmp
and
dec
mov
mov
fmuls
pusha
and
pop
fbstp
stc
xchg
pop
mov
pop
add
test
pop
test
fiaddl
sti
mov
movsb
outsl
xor
shlb
inc
xchg
lahf
int3
inc
pop
mov
pop
dec
aaa
sti
mov
cmp
je
mov
dec
add
pop
pushf
jnp
jle
fistl
and
cmp
int3
aas
lahf
sub
bound
cmp
popa
cmp
sub
fsub
xchg
inc
pop
lcall
pop
xor
ja
fsub
mov
dec
xchg
xchg
sti
sub
fidivl
ja
jnp
sbb
push
jge
mov
dec
mov
push
push
inc
jge
cmp
push
outsb
jle
inc
push
lock
pop
shl
xlat
push
sahf
mov
scas
sub
lods
xchg
or
and
pop
add
jns
popf
jg
pop
cmp
sub
adc
mov
push
jle
add
outsb
shr
xchg
lcall
insb
icebp
int
sbb
fwait
cmp
jp
lret
aaa
push
jl
dec
and
sbb
ret
cmp
inc
xchg
inc
fwait
adc
cmpl
push
sarb
rol
stc
add
mov
adcl
ret
popf
push
dec
stc
pop
mov
inc
or
xchg
mov
sbb
pop
and
sub
and
ficoms
popa
mov
jge
push
cmp
inc
fstps
dec
inc
pop
jmp
mov
jb
sbb
pushl
mov
mov
mov
andb
lds
mov
cwtl
add
jbe
pop
sahf
int3
cmp
ret
jbe
pop
cmp
mov
lcall
cs
inc
jp
jmp
jle
imul
sar
fimull
jp
das
pop
mov
sti
fimuls
xor
aas
pop
mov
push
mov
xor
pop
sub
cmp
fidivrs
cmp
js
sbb
add
jp
cmp
jg
mov
mov
jns
pusha
adc
cmp
cltd
pop
mov
add
jns
fidivrs
pop
fwait
data16
mov
sahf
sti
cmp
sub
pop
cmp
rclb
pop
pop
cmp
fbld
cmp
push
and
dec
and
fnstsw
add
cmp
cmp
pop
pop
and
jmp
cmp
sahf
cmc
jnp
push
push
pop
pop
jg
mov
xor
sahf
sahf
jmp
pop
sub
pop
je
hlt
shrb
fucompp
mov
scas
sbb
orb
leave
mov
cli
iret
mov
imull
push
scas
popa
cmp
inc
fdivrl
cmp
xor
push
jle
cmp
mov
dec
push
mov
aas
nop
cmp
sbb
fwait
ja
cs
sbbl
pop
jno
test
lods
push
test
sahf
dec
inc
inc
cmp
lcall
inc
and
jb
sbb
mov
popa
loope
jnp
hlt
divl
in
cmpsl
pop
push
cmp
mov
out
cmp
fstpt
xor
and
outsb
leave
add
pop
cmp
lock
jl
je
hlt
cmp
movsb
ficomps
sbb
mov
xchg
push
lahf
mov
aas
sar
fcomps
pop
mov
add
cwtl
cmp
mov
stos
push
cmp
cli
lret
aas
pop
cmp
xorl
mov
pop
or
sbbl
pop
sbb
pop
insl
pop
out
out
add
mov
xchg
mov
sti
jb
fdivrs
jg
xor
incl
leave
stc
shl
sbb
pusha
fists
sub
cmpb
mov
sti
pop
mov
xchg
mulb
cmpl
insl
xchg
jp
addl
fwait
mov
pop
mov
cwtl
insl
mov
cmp
jge
stos
cmp
sbb
mov
dec
fidivrs
ljmpw
sahf
jge
test
pop
inc
lds
inc
stos
pushf
mov
fcoml
bound
mov
stc
popa
mov
mov
cmc
jp
jg
jns
and
hlt
js
mov
cmp
sahf
pop
cwtl
jmp
mov
popa
cmp
lds
lcall
jle
pop
cld
leave
sub
or
mov
aas
arpl
out
jle
movsl
js
jp
mov
cmp
pusha
cmp
scas
jno
arpl
dec
push
cli
pop
cmp
push
cmp
xlat
mov
add
ss
rcrb
and
outsl
add
cmp
lahf
mov
sahf
xor
and
jo
lcall
dec
js
pop
jns
pop
dec
cmpsl
mov
dec
jns
inc
sahf
mov
inc
ss
cmp
jl
lds
push
fs
sbb
cmp
jnp
mov
xor
push
dec
fwait
adc
xorb
cmp
lret
jae
cli
sbb
xchg
ficomps
mov
movsb
mov
jb
sbb
cmp
mov
dec
sbb
sti
je
aam
aas
mov
sub
pusha
mov
cmp
pop
lcall
fisttps
inc
jg
jg
jg
fwait
sub
mov
and
stos
push
bound
add
or
lret
dec
cwtl
push
cmpl
push
data16
sbb
pop
loopne
add
add
daa
fsubl
sbb
mov
inc
sti
adc
mov
dec
loop
dec
mov
xor
cmpb
sbb
xor
inc
je
adc
fdivr
pop
push
rep
or
sbb
iret
and
fcmovu
push
hlt
pop
jb
jle
cld
and
aas
sti
jp
loopne
rcrl
jne
mov
jg
lcall
mov
mov
or
push
add
pop
aad
out
cmp
fidivrs
popa
call
clc
and
or
pop
jle,pt
or
xchg
cs
je
sbb
fwait
fs
mov
lds
jl
in
cmp
jp
dec
fwait
and
nop
mov
jl
pushf
jecxz
test
loopne
pop
data16
push
shrl
pushf
in
inc
inc
into
cmp
adc
inc
test
xchg
into
fdivp
fcmovnu
and
lcall
pop
inc
jge
pop
mov
sub
mov
sub
pop
movsl
addb
and
mov
jp
lahf
cmp
mov
call
ficoms
shrb
sbb
cmp
cli
mov
lea
mov
js
insb
push
mov
jg
mov
pop
aaa
lcall
add
pop
sti
iret
pop
popa
pushf
ret
sbb
sub
outsl
mov
cld
lcall
and
das
xchg
ficomps
cmpsl
cmp
sahf
or
mov
mov
cmp
push
dec
add
aam
inc
js
incl
loopne
xor
jge
pop
fidivrs
shll
pop
inc
cmp
aad
inc
pop
insb
dec
ss
je
pop
cli
xchg
xchg
jl
mov
pop
sbb
fidivrl
xor
jle
sub
cmp
inc
in
shll
sub
aas
sbb
pop
sbb
mov
jp
pop
fwait
addb
mov
mov
sbb
ljmp
push
stos
fistpll
js
add
sub
cmp
and
mov
cmc
lcall
pop
rorb
jnp
dec
jnp
pop
mov
inc
xor
sbbl
loopne
and
lods
idivl
inc
cwtl
scas
in
inc
mov
sbbl
les
mov
push
cmp
sbb
mov
daa
sub
cwtl
inc
inc
mov
pop
inc
mov
arpl
fiadds
data16
mov
push
loopne
cltd
mov
repnz
je
jb
pop
mov
inc
ret
mov
adc
push
mov
inc
sahf
pushf
xchg
mov
cmp
mov
pop
sbb
fdivrs
inc
cld
cmp
mov
fwait
in
rclb
mov
fldenv
cld
bound
aas
fistpll
xor
lcall
cmp
and
pop
mov
dec
negb
push
pushf
cltd
fwait
push
inc
jmp
cwtl
pop
pop
mov
js
mov
scas
lret
jnp
cmc
cmp
lcall
decl
cmp
jl
scas
push
pop
sbb
pop
jle
pop
inc
ds
sbb
mov
mov
jnp
clc
scas
push
pop
cli
inc
inc
cmpl
cmp
cmp
mov
mov
inc
cmp
ficompl
pop
ffreep
lret
push
fcomps
sarb
clc
outsl
adc
and
cli
pop
mov
ds
push
fistpl
cmp
sarb
pop
and
fsubr
jp
and
push
push
lcall
shlb
aad
mov
sbb
mov
pop
inc
push
mov
and
aas
sbb
cmpsl
jg
out
jbe,pt
je
fcompl
xchg
cmp
mov
mov
nop
inc
ds
aas
push
das
mov
rcl
mov
test
shll
fistpll
jbe
cmp
clc
js
mov
iret
push
xchg
cmp
jb
pop
jl
fistpll
pop
push
hlt
lahf
mov
mov
pusha
fists
cld
jge
lds
xor
sbb
pop
popa
pop
mov
xor
lret
inc
stc
cmp
cmp
pop
dec
leave
lcall
sbb
and
cmp
mov
pushf
push
xor
orl
in
fistpll
push
pop
cli
add
lcall
push
mov
in
mov
sahf
push
sbb
pop
mov
adc
xchg
mov
bound
mov
cmp
pop
aas
add
dec
call
shll
mov
cmp
stos
mov
mov
jb
jae
fwait
dec
cltd
jne
jl
jle
xchg
lahf
sahf
mov
mov
je
sbb
dec
sbb
faddl
outsl
sarl
cmpsb
adc
pop
add
sbb
test
jle
add
xchg
cmp
cmp
cli
lcall
xchg
xchg
cwtl
pushf
xchg
add
pop
cmpl
pop
popa
cmp
pushf
dec
popl
add
scas
pop
ret
inc
jb
hlt
jl
fcoms
mov
pop
ret
insb
lds
cmp
pop
test
adc
fcomps
cmpsb
push
ret
rcrl
pop
js
xor
pop
aas
jle
ficompl
orl
cld
jp
addr16
jb
cmp
cwtl
andb
mov
push
mov
dec
cmp
mov
negl
mov
mov
pop
mov
xchg
fcmovnu
popa
adc
or
push
pushf
jns
mov
stos
mov
inc
sbb
or
push
fistps
push
cmp
mov
pop
ror
popa
lahf
mov
sbb
mov
xchg
inc
pop
push
clc
inc
pushl
pusha
cmp
and
pop
push
lahf
or
xchg
imul
jg
xchg
jp
js
iret
lret
fdivrl
mov
scas
xor
sbb
ljmp
fistpl
dec
cmp
sub
add
inc
mov
pop
jmp
dec
add
cltd
movl
mov
cld
pop
mov
loopne
fidivs
into
hlt
mov
mov
scas
mov
je
xchg
xchg
adc
push
pusha
mov
pop
lds
jae
cmp
adc
pop
lods
pop
sbb
pop
cmpb
sub
decl
sbb
mov
lds
push
xchg
cmp
pusha
pushf
js
adc
jbe
mov
inc
cmp
notl
inc
push
mov
mov
adc
xor
pusha
scas
icebp
popa
or
xchg
dec
adc
xchg
pop
pushf
orl
mov
je
push
pushf
pop
pop
loopne
pop
xchg
add
push
mov
repnz
and
jl
rcrb
sbb
sbbl
mov
mov
pushf
inc
adc
pop
cmp
jns
jge
xor
fwait
add
mov
ljmp
fstpt
scas
sarb
jp
add
jbe
rorb
cmp
into
aas
inc
mov
cmp
test
jo
pop
insb
pop
lcall
add
jl
inc
cmpb
hlt
sahf
cmc
mov
pop
mov
jnp
sbb
outsb
shr
lahf
cmp
clc
pop
dec
popa
mov
sahf
xchg
push
icebp
jmp
inc
pop
js
fcom
ror
xor
cwtl
cmp
loopne
jo
sub
and
sahf
hlt
jmp
std
add
mov
pusha
fwait
dec
add
mov
adc
jge
xchg
pusha
sti
inc
push
adc
das
mov
fbld
inc
jmp
mov
push
repz
lods
mov
mov
push
out
mov
dec
lods
jnp
inc
mov
es
pop
dec
enter
mov
inc
or
inc
mov
mov
mov
jle
or
imul
sbb
dec
adc
cmp
sbb
imul
ret
xchg
arpl
pop
pop
cmp
cli
mov
pusha
mov
cmpsl
mov
out
inc
pop
cli
jnp
hlt
sub
jl
shlb
and
pop
mov
pop
and
and
push
and
scas
add
jns
ficompl
dec
mov
sub
rcrb
pop
sbb
xchg
cmp
cmp
add
sbb
adc
pop
fldt
lds
push
xor
add
pop
lods
mov
push
adc
sbbl
xlat
pop
js
iret
aas
sub
xor
lahf
pusha
clc
inc
jp
adc
mov
mov
fwait
xchg
mov
mov
fldenv
sti
sbbl
dec
push
cmp
mov
xor
call
sti
pop
xchg
cmp
xor
cmp
idivl
adc
jle
insl
jae
add
mov
pushf
ret
mov
scas
dec
or
sbb
xchg
xchg
jge
add
jns
outsl
ljmp
cli
mov
fildl
fwait
pushf
ret
mov
push
cmp
pop
xchg
mov
sbb
xchg
pop
add
shr
pop
pop
leave
push
or
fsubrl
in
add
sbbb
in
mov
sti
daa
push
arpl
mov
sbb
or
xlat
pop
sbb
jle
xor
out
pusha
pop
sbb
add
outsl
ret
js
daa
js
jg
ss
ljmp
outsb
mov
fsubl
cwtl
cmp
cmp
aas
enter
xchg
inc
sub
loopne
cltd
pop
and
pop
push
lcall
sbb
daa
std
sub
inc
mov
mov
std
data16
lea
pop
pop
xchg
pop
mov
lcall
cmp
add
or
pop
addb
jnp
cmp
lahf
scas
rorl
pop
fdivp
pop
sti
mov
repz
addr16
mov
sti
mul
sbb
fwait
push
pushf
mov
fistpl
mov
pop
sbbb
hlt
mov
shlb
mov
and
cmp
pushf
lahf
cmpb
pop
lds
mov
jmp
xorl
mov
pop
add
pop
sbb
test
jle
xchg
inc
mov
mov
loopne
fisubrl
lahf
scas
pusha
daa
rol
loopne
clc
imul
adc
rcrb
cmp
pop
loopne
fistpll
shrl
clc
xchg
ficoml
pop
fists
jp
push
inc
sbb
sbb
add
stos
das
cmp
inc
xor
pop
sbb
cwtl
xchg
pop
clc
sbb
bound
rcrb
pusha
aad
pushf
inc
jo
cmp
pop
pop
push
and
es
arpl
push
jne
aas
mov
pop
pop
inc
fidivrl
int
sbb
push
jg
stos
sub
fistpl
push
cmpl
cmp
cmp
cwtl
mov
incb
cmpsl
inc
cwtl
cmp
lahf
sarb
aas
mov
bound
add
cwtl
lcall
popa
pop
cmp
mov
mov
incl
pop
xor
fcomps
aad
cmp
mov
daa
push
mov
outsl
push
popa
cmpb
mov
or
je
xchg
inc
dec
adc
mov
lds
cmp
ret
push
sub
cld
jge
mov
pop
rclb
mov
jg
xor
cmp
pushf
clc
fisttps
cmp
mov
jne
jns
cmp
dec
lods
inc
inc
pop
cmp
stos
pusha
cld
pop
stos
loopne
ja
ret
mov
adc
fimuls
fidivl
into
jnp
push
cmp
push
dec
mov
sar
jg
js
push
clc
fwait
cmp
fmull
cmp
lods
inc
mov
ljmp
sti
push
pop
aaa
shl
outsl
lcall
insl
sahf
stc
mov
cmp
std
pusha
and
sbb
inc
icebp
pop
and
xchg
or
lahf
mov
fdivs
adc
xchg
pop
cmp
pop
pop
cld
sbb
das
or
cmpsl
sti
sub
lahf
push
pop
jle
int3
pop
in
testl
xor
sti
and
jb
cli
sbb
jge
out
mov
jg
add
sbb
mov
pop
stc
jl
push
std
mov
jne
sbb
inc
stos
in
add
lahf
cli
dec
xor
jecxz
sbb
subl
fadds
clc
jo
mov
cmpsb
ss
stos
inc
inc
mov
pop
jp
loopne
loopne
fsubr
ret
push
jo
mov
cmp
in
cmp
add
sti
inc
mov
push
sbb
push
mov
dec
cs
pop
sbb
push
cwtl
push
push
je
pop
mov
clc
xchg
xchg
dec
aaa
fstpt
cld
pop
cmp
mov
sbb
jp
jle
and
sbb
pop
sbb
fidivs
mov
jmp
inc
or
sahf
clc
cmp
leave
dec
in
xchg
sti
sbb
pop
and
dec
push
pop
fwait
pop
dec
xchg
add
inc
repz
sti
sti
pop
jl
adc
mov
pop
ljmp
sbb
jo
ds
popa
fidivrl
sahf
mov
inc
mov
xchg
mov
mov
xor
in
movsb
push
adc
out
das
in
stos
outsb
pop
roll
pop
cmp
inc
cmc
mov
inc
cs
inc
js
pop
cli
or
pop
test
cld
pop
sti
xchg
inc
negl
aas
mov
pop
inc
mov
pop
cmp
mov
das
ret
sbb
pop
add
loopne
call
cmp
lods
dec
or
pop
add
mov
lds
sbb
sahf
lds
push
mov
cmp
aad
jb
mov
lds
adc
inc
push
add
or
ficompl
aaa
mov
hlt
cli
push
es
mov
vunpcklps
loope
les
xor
popa
cwtl
paddusb
sbb
dec
add
jl
mov
cmp
inc
jnp
pusha
sub
xchg
sbb
push
xchg
mov
inc
cmp
mov
add
jp
mov
or
and
mov
cmp
lds
shll
fidivrs
in
imul
cld
sub
and
mov
push
pushf
sbb
inc
mov
jle
xlat
sub
pop
cmp
test
clc
ficomps
pushf
gs
pop
push
sarl
mov
inc
sahf
pop
lcall
sahf
mov
orb
inc
test
lods
jae
pop
or
jle
mov
mov
jne
jl
jle
dec
and
cmp
fstps
hlt
jl
jl
xor
lret
dec
sbb
and
orb
pop
pusha
push
cmp
dec
sti
jle
sahf
andl
mov
mov
inc
fcoms
push
cld
pop
pop
cmp
dec
incb
inc
mov
dec
daa
sbb
cmp
jle
stos
dec
push
lea
jle
mov
mov
mov
mov
rorl
adc
mov
lock
mov
in
mov
pusha
pop
fwait
mov
cmp
pusha
cmp
jo
pusha
fwait
jp
xor
arpl
sbb
pusha
pop
dec
jge
jg
fisubrl
adc
cld
orl
loopne
cmp
fstpt
loope
or
rorl
outsb
stos
nop
inc
mov
fdiv
and
inc
aas
push
fcmovu
jge
lock
fs
add
mov
fadd
sbb
lret
adc
pop
jae
mov
jle
and
sbb
ds
jge
pop
and
mov
mov
mov
jb
pop
sbbb
pop
pop
pop
push
xchg
pushf
fwait
sahf
and
stos
popa
in
add
cld
inc
ljmp
pusha
lock
cli
pop
push
mov
cmp
pop
dec
jb
inc
lret
stos
sbbl
cmp
sti
jge
data16
popa
pop
in
cs
add
sahf
jl
rorb
jmp
fmuls
sub
in
sub
popa
jg
sbb
inc
pusha
inc
xor
pop
and
pop
mov
sbb
js
xchg
mov
outsb
mov
mov
mov
cmc
clc
cld
in
add
aad
sub
pop
adc
stc
jns
cmp
cmp
jge
ljmp
mov
jne
mov
pop
pop
inc
push
andb
adc
fistpl
push
jge
insb
cmp
jle
jae
sbb
sbb
push
cli
fsubs
push
jg
in
mov
cmp
je
mov
or
cld
lcall
inc
lds
mov
cmp
stc
jl
push
movsb
call
mov
sarb
andl
cmp
sti
mov
and
cmp
push
jl
adc
inc
popa
shlb
mov
cmpl
lret
push
fmul
jp
cwtl
outsb
data16
add
subb
repz
sbb
pop
xor
pop
mov
mov
pop
jno
loopne
mov
loop
pushf
mov
mov
mov
jbe
arpl
and
dec
mov
lret
jle
adc
lods
jp
sbb
pop
mov
xor
shl
mov
xor
pop
lock
push
faddl
cli
cmpb
rolb
loopne
or
mov
divl
mov
repnz
mov
fdivrs
jnp
cmp
popa
cmp
inc
lea
outsl
xchg
jae
mov
cmpsb
lcallw
or
xchg
cli
mov
add
pop
xchg
int
cmp
pop
repz
aas
fwait
lahf
inc
jb
cmp
jge
jo
push
jl
stos
cmp
mov
push
xchg
xchg
loop
adc
push
fmul
add
inc
fisubrs
mov
int3
rcrb
cmp
cmp
cld
or
xchg
lahf
sar
sahf
ljmp
pop
dec
in
ficomps
and
shlb
pop
fildl
mov
sahf
and
imul
popf
fstpt
loopne
sbb
cmc
adc
popa
inc
dec
mov
inc
fstpt
outsb
cltd
faddl
push
lahf
fstpt
mov
pusha
outsb
scas
lcall
xchg
fisubrs
pusha
jo
js
lret
addr16
lds
jp
nop
hlt
sbb
jnp
sbb
cmp
lock
pop
pop
and
orl
pop
pop
clc
lret
mov
jp
xchg
push
int3
inc
xor
negb
sbb
mov
icebp
cmp
test
push
cmp
xchg
mov
lahf
sbb
sbb
xchg
xchg
fwait
lret
jnp
mov
lds
cmp
mov
dec
inc
fdivrs
and
mov
shlb
sahf
xor
mov
imul
mov
aad
adcl
sbb
sar
dec
lock
push
bound
jbe
add
jno
dec
inc
das
adc
ret
mov
fimull
xor
mov
mov
std
pop
sbbl
push
cmp
js
and
cmp
sbb
cmp
cmp
rclb
jne
lds
jp
cmc
js
xchg
jns
jle
aam
cmpsb
lret
inc
lods
and
push
xorl
int3
inc
adc
xor
mov
jp
push
xor
and
cmp
inc
sbb
out
jl
push
fcmovnb
jnp
out
push
test
in
jnp
loope
lds
les
xchg
jg
inc
fcoml
shrb
int
xor
sbb
adc
mov
pop
jnp
pushf
sbb
xor
std
es
daa
insl
cmp
pushf
jge
push
push
mov
pusha
loopne
call
fwait
add
ljmp
test
push
mov
mov
test
imul
imulb
stos
add
out
xchg
jp
and
out
xor
mov
cwtl
dec
fwait
mov
push
adc
cltd
into
sub
and
cmp
bound
pop
mov
inc
lds
push
sti
sub
int3
lods
jns
pop
cwtl
fcmovu
jg
jge
pop
sub
std
cmp
fwait
sarb
call
pushf
sbb
xor
pop
adc
fcompl
mov
inc
xor
mov
mov
mov
cmp
xor
pusha
pop
sbbb
out
int3
push
push
mov
in
mov
cmp
and
mov
popa
mov
cld
inc
in
aas
push
push
inc
ds
cmp
cwtl
js
sbb
adc
inc
push
jg
lcall
mov
push
pop
cld
cmp
mov
aas
fwait
mov
pop
push
jge
jle
ret
mov
lahf
leave
mov
sti
inc
out
cli
cmp
pop
mov
std
jle
inc
test
out
fistpll
pusha
clc
cmp
jl
mov
pop
mov
int
sbb
pop
lcall
stos
ficompl
sbb
xchg
fwait
push
jg
daa
xor
mov
sbb
andb
mov
subl
lahf
lcall
lock
aam
jnp
aas
sbb
fprem
ss
je
pop
sahf
inc
sti
mov
xor
sbb
pop
js
cli
mov
sub
pop
push
faddl
inc
popa
pop
in
and
arpl
xchg
pusha
idivb
cmp
jp
imul
push
xor
stos
xor
decl
andl
rolb
test
cli
lcall
loopne
adc
lahf
lds
fwait
cmp
dec
ficomps
jae
cmp
daa
rcr
js
mov
cld
xor
pop
fistps
push
lret
std
jge
sub
cltd
push
aas
jnp
jae
cltd
cmc
mov
pop
inc
mov
mov
mulb
xor
mov
and
and
and
sbb
movsb
cmpl
dec
cmpb
inc
jp
sbb
jecxz
cld
repnz
sbb
cmp
ficoms
fdivrl
fstpl
lcall
pop
sbb
pop
clc
push
adc
pop
ljmp
stos
jl
iret
fdivs
cmp
mov
cmp
add
filds
and
jge
cmp
loope
stc
loopne
dec
add
popf
sbb
pop
and
pop
cmp
jp
jle
add
fildl
repnz
mov
cmp
jl
cwtl
pushf
jp
js
lahf
mov
sti
mov
dec
orb
inc
fldt
xchg
jge
aas
int
shll
cmp
jno
pop
ss
cmp
pop
inc
push
dec
dec
flds
jge
aaa
cmp
jnp
mov
outsb
pop
pop
pop
sub
stos
push
push
mov
pop
jp
sahf
cmc
lea
sbb
insb
mov
inc
add
jp
mov
in
mov
fcomps
mov
pushf
jge
inc
insb
mov
push
cld
dec
add
sahf
negb
cmp
into
sti
mov
stos
dec
fisttpl
pop
jle
stc
cmp
cmp
cmp
pop
pusha
add
aas
loop
mov
int
cmp
jg
add
pop
addb
mov
pop
add
adc
sub
mov
pop
push
mov
dec
pop
inc
loopne
call
popa
fildll
inc
xchg
std
shlb
daa
and
sbb
mov
and
adc
cmp
or
pop
sti
cmp
and
fdivrp
into
or
aaa
sbb
xorb
js
cwtl
pop
dec
mov
pop
fsts
jns
rcll
pop
adcl
call
cmp
fidivrl
sahf
xchg
lds
test
lcall
shlb
pop
pop
hlt
fistl
jns
lret
mov
dec
imul
testb
pop
lcall
sub
or
bound
inc
sahf
aas
and
cmp
inc
sub
push
push
mov
fdivrp
repz
pop
mov
inc
lcall
lcall
and
lods
jb
mov
lret
fsubrp
pop
pop
mov
lahf
sarb
pop
pop
jp
mov
mov
dec
hlt
jge
adcl
inc
cmpsl
sarb
adc
popa
pop
cmp
movq
cmp
mov
popf
mov
fistps
test
mov
js
cmp
mov
ficompl
lock
pop
dec
pop
mov
pop
cwtl
pop
jb
clc
cld
pop
cmp
stc
fwait
cmp
lcall
jl
hlt
aas
test
cmc
popa
aad
and
sahf
pop
je
cwtl
fwait
mov
lahf
pop
enter
mov
testl
adc
pop
jp
es
sbb
push
jle
and
loope
fnstsw
fistps
pusha
inc
adc
adc
xchg
mov
shlb
mov
mov
mov
pushf
clc
mov
and
loopne
lds
popa
sbb
sub
sti
push
dec
add
mov
pusha
mov
xchg
cld
xorb
sbb
pushf
dec
arpl
inc
fsqrt
mov
cmp
cmp
pop
sbb
rorb
fsubp
cmp
jnp
adc
mov
cwtl
cld
cmp
push
cmp
negb
aas
cmp
pusha
loopne
sti
pop
pop
mov
mov
and
adc
dec
clc
ss
and
call
cmp
jp
fidivrl
cmp
sbb
adc
fwait
pop
adc
test
inc
pop
pop
loopne
sbb
xor
mov
sti
cmp
fsubrl
xor
lret
mov
sti
jo
outsl
pop
mov
insl
ss
repz
mov
xor
jge
cltd
cli
pop
mov
fidivrl
cmc
mov
or
outsl
inc
mov
inc
sbb
cmp
pop
jo
ss
pushf
sub
lret
sahf
xchg
jle
jnp
cmp
pusha
and
js
popa
cmp
inc
mov
popl
repz
cmp
loop
lahf
mov
out
jl
add
mov
sti
sub
mov
xor
adc
out
aad
mov
mov
add
mov
jge
cwtl
test
push
mov
lcall
fmulp
sbb
adc
jns
adc
add
push
push
cli
mov
inc
int
and
fsubs
cmp
pop
pop
sbb
xchg
mov
cmpb
adc
outsl
cli
lods
inc
mov
fcoms
rcl
push
cmp
add
cmp
mov
cmp
cmp
sahf
pop
js
lcall
inc
leave
popa
fwait
xor
inc
pusha
pop
pop
mov
adc
pop
mov
mov
xor
lcall
mov
pop
out
push
cmp
mov
sbb
addb
pop
lds
xorb
sub
push
pop
lea
jnp
outsb
jge
xchg
fsubr
pushf
jo
fimull
loop
mov
or
mov
cmp
filds
fsubs
and
cmp
lahf
cmpsl
adc
mov
fwait
xchg
add
dec
gs
cmp
imul
pop
pop
mov
hlt
hlt
sbb
xchg
cmp
mov
aaa
fsubrl
push
sbb
cmp
out
pop
or
loopne
add
hlt
cmp
jl
adc
sbb
xlat
inc
or
pop
fcoms
mov
sub
test
xor
hlt
mov
jmp
mov
pushf
cwtl
pop
fwait
mov
subb
sti
cmp
sarb
mov
and
sbb
or
sbbb
in
lds
cmp
mov
lret
fstpt
adc
sbb
mov
mov
mov
cmp
sti
jg
test
stc
xor
sbb
movsl
cli
lea
arpl
add
js
aam
push
int3
mov
insb
push
fstpt
inc
or
jnp
mov
jge
outsb
fidivrs
fwait
jg
cmp
mov
mov
cmp
jnp
cmp
jge
cwtl
jmp
inc
mov
rcrb
jge
fdivp
push
inc
orl
mov
inc
mov
and
jp
sbb
pop
inc
neg
pop
hlt
mov
pop
mov
inc
inc
jg
cmp
add
cs
inc
inc
inc
cmp
aaa
fimuls
pop
pop
sub
lcall
ss
clc
sar
inc
fsubs
repz
lahf
jl
push
pop
inc
aas
loopne
pop
mov
pusha
aaa
cmpb
cmpb
int
mov
lock
mov
add
xchg
test
xor
xor
sub
cmp
push
ja
cld
fstps
mov
clc
cwtl
ljmp
jb
cmp
jp
loop
decl
sbb
push
sahf
and
in
dec
ret
cmp
add
popa
pop
flds
sbbb
sbb
sbbb
xor
push
mov
jp
or
dec
lcall
clc
jnp
mov
mov
sahf
sbb
inc
lahf
and
cli
mov
aad
sahf
fistpll
fwait
or
jmp
aaa
pop
pop
and
fwait
rcrb
push
cmp
pop
xchg
or
addb
decb
jp
cli
adc
jmp
or
sbb
mov
jnp
pusha
inc
add
stc
inc
dec
cmp
jg
pusha
dec
mov
hlt
lahf
pop
mov
inc
test
in
fwait
es
jge
and
aad
mov
mov
dec
push
jge
cmp
sti
imul
nop
ljmp
mov
call
scas
xchg
cmpl
xchg
pop
pop
jg
jno
inc
inc
jle
push
inc
pusha
cmp
mov
loopne
and
jnp
adc
mov
out
jp
in
je
push
dec
std
push
adc
inc
fdivr
pop
mov
jg
jb
mov
pop
push
movb
aad
adc
adc
push
or
je
mov
cwtl
sbb
and
mov
bound
cli
mov
pop
jnp
dec
movsb
mov
mov
ljmp
pop
inc
cmp
sahf
pop
popa
xlat
push
cld
inc
sarl
cmp
pop
jnp
sbb
lahf
rol
sbb
dec
mov
jl
popa
mov
ficoms
mov
inc
aas
sbb
imul
mov
sbb
ret
and
sbb
jle
pop
sahf
mov
xchg
ret
lret
mov
xchg
mov
aas
js
fmuls
and
cmc
mov
rcrl
mov
sbb
jp
jb
mov
test
inc
hlt
xchg
rcr
push
mov
ss
push
pop
sbb
and
mov
je
std
lods
push
inc
sbb
popa
cmp
cmpsb
adc
je
xor
cmp
outsb
inc
fiadds
xchg
cli
cmp
cwtl
mov
xchg
mov
mov
cs
jg
test
fmuls
mov
push
xor
scas
and
jo
push
mov
scas
scas
and
dec
ljmp
mov
push
jnp
sbbb
pusha
xlat
sbb
mov
fistpll
jno
inc
fcompl
cmp
cmp
fdivrp
pop
iret
pop
pop
inc
movsb
inc
fistpll
fadd
xchg
lahf
daa
lret
in
dec
inc
iret
jle
fcomi
popa
jl
or
rolb
dec
lds
pop
sbbb
cli
and
shll
in
jb
rcrb
sub
mov
sarl
dec
std
sub
aaa
or
push
sti
fidivrl
lret
fsubp
je
repnz
pushf
pop
or
dec
mov
push
pop
jmp
inc
cs
push
sahf
cld
lds
dec
mov
sbb
test
pushw
sbb
pop
mov
sbb
es
pop
xchg
cli
repz
sbb
pop
into
popa
mov
aaa
scas
mov
jns
push
fistpl
pop
loop
mov
mov
and
daa
loopne
sbb
lcall
jge
mov
sarb
lds
hlt
xchg
jo
cmp
sbb
rolb
shl
jg
jl
popa
fisttpl
js,pt
sbb
sbb
ficoms
out
adc
jnp
mov
jp
and
pop
gs
out
cmp
sbb
lret
js
adc
cmp
sbb
jl
cmp
mov
sti
in
xor
pop
push
sub
and
js
test
add
add
cmp
push
aas
and
mov
xchg
pop
pop
cli
decl
cmp
jle
out
inc
pushf
mov
pop
stos
pop
jb
cmp
mov
cmp
pop
sub
jle
jnp
adc
sbb
cmp
clc
lahf
pop
cmp
mov
jmp
icebp
add
testl
sub
into
fwait
push
fdivrl
jge
aaa
jb
and
sub
bnd
sbb
cmp
fidivrs
or
adcb
pop
andb
sbb
mov
lcall
sbb
add
js
and
xchg
pop
sbb
and
xchg
inc
aas
filds
cwtl
jg
and
inc
lahf
jnp
movsl
push
inc
mov
cmp
dec
push
mov
mov
loopne
sub
cwtl
negl
faddp
es
stos
mov
and
lret
sbb
loop
bound
fadds
sbb
mov
sbb
je
fcmovne
in
cmp
popa
sar
pop
sub
and
pop
pop
fcoms
pop
xchg
jmp
ds
pop
test
aaa
and
jns
mov
ficoms
les
jno
jnp
sahf
cld
jb
aas
dec
es
or
ds
cmp
orl
cld
ja
jnp
data16
jp
jnp
lcall
mov
test
cmp
addb
mov
cmp
cmp
popa
iret
cmp
aad
pop
sbb
dec
cmp
pop
jp
js
cmpb
movsb
iret
int
pusha
jge
popa
js
fistpl
aaa
xlat
jno
cmp
fistps
movsb
lds
xor
aas
push
fsubrs
aas
stos
int
lods
std
lret
ljmp
pop
sahf
add
mov
dec
mov
ret
mov
iret
popl
lcall
push
ret
test
sbb
jge
mov
clc
push
mov
dec
adc
sbb
jle
aad
sub
inc
addr16
and
pushf
push
test
mov
sti
out
mov
mov
insl
xorb
into
xchg
cwtl
daa
je
and
mov
sbbb
pop
clc
adc
lahf
inc
sbb
cmp
popa
lcall
clc
scas
sub
inc
shll
sbb
sub
jb
jge
pop
pusha
jnp
movsl
cs
pop
lcall
in
inc
aas
or
cmp
jnp
js
jg
mov
lds
loopne
mov
push
push
add
mov
jae
sti
daa
or
jp
aaa
mov
insl
notl
and
jae
mov
and
inc
test
cmp
mov
lds
and
icebp
incl
jp
lret
shll
inc
mov
jb
pop
cmp
push
fidivrs
repz
cmp
and
inc
add
jmp
and
push
cmp
xchg
mov
ficompl
sbb
and
inc
gs
mov
dec
pusha
js
fists
cmp
pop
cmp
outsb
sahf
sbb
xchg
mov
add
pop
pop
cli
sbb
orb
call
mov
in
push
aas
or
jnp
jl
cmpsb
dec
pushf
sbb
mov
mov
clc
adc
loopne
jge
jnp
mov
mov
cmp
pop
mov
stos
fcomp
rcl
std
mov
adc
pushf
adc
je
pop
mov
pop
pop
sbb
and
xchg
flds
push
push
incb
rolb
ds
mov
aaa
scas
push
pop
cmp
fists
sub
adcb
aas
idivl
sar
mov
sbb
cmp
fsub
inc
inc
mov
and
dec
or
mov
call
or
mov
cmp
push
lds
ds
std
int
lds
xchg
mov
jecxz
jmp
jge
std
jg
sbb
lds
jl
std
int3
lds
mov
ja
pop
std
push
lds
std
jmp
js
mov
std
pop
mov
pop
fs
test
fidivrs
std
lods
lds
lds
sbb
xchg
ja
jne
add
daa
dec
std
lahf
vzeroall
xchg
sar
lds
jb
sub
loope
jnp
rorb
push
fdivrs
xchg
call
push
pop
popa
mov
jge
loopne
pop
pop
mov
inc
outsl
fwait
pop
cmp
mov
inc
pushf
enter
ljmp
inc
das
std
jg
mov
jle
cmp
and
inc
push
pop
cli
pop
jnp
xchg
into
testl
rclb
pop
pop
cld
pop
cmp
sahf
cmpb
test
inc
pop
mov
mov
pusha
xor
scas
mov
mov
sbb
jo
sahf
xor
pop
mov
sbb
int3
outsl
adc
pop
jl
jp
and
mov
in
repz
cmc
pop
daa
lcall
aas
inc
int3
stc
sbb
mov
sbb
sub
add
pop
mov
lds
cvtdq2ps
cmp
mov
fadds
clc
inc
mov
pusha
mov
ja
adc
mov
xorb
adcb
jge
sbb
cmp
fsub
loopne
lret
sbb
fisubs
push
movsl
fdivrs
loopne
cmp
pop
fidivrl
and
sbb
orb
pop
add
stos
pop
inc
fwait
mov
aad
jle
and
popa
ret
xchg
jnp
fimull
push
ficomps
cs
jl
cmc
xor
mov
jge
mov
xlat
mov
jp
and
push
cmp
insb
lahf
jge
outsl
mov
call
popa
pop
adc
loopne
stc
jp
inc
ficoml
fistps
mov
fistpl
inc
out
pop
push
add
inc
jg
pop
stos
sti
fdivl
test
jnp
pop
cltd
fcomps
sbb
rorb
into
sbb
jp
mov
dec
mov
sbbl
xchg
fdivrs
das
leave
mov
pop
sbbb
xor
jle
adc
push
mov
lds
clc
dec
pop
add
xor
pop
pusha
pop
sbb
inc
or
fmull
fsubrp
inc
ret
filds
fcomp
stos
nop
cwtl
pop
jg
pop
pop
pop
ss
fwait
cmp
jp
push
js
jae
inc
xchg
jnp
mov
mov
jbe
pusha
cmp
sub
ljmp
sub
pop
or
adc
sbb
js
dec
mov
clc
add
mov
loope
call
sbb
xlat
sti
std
inc
je
cmpsl
xor
js
pop
loopne
rcrb
cli
mov
jnp
fdivrl
arpl
jge
dec
fcmovnu
ficoms
lcall
cmc
push
repnz
jp
sbb
negl
fistpll
pop
adc
mov
mov
sbb
sub
stc
xchg
sti
push
pushf
push
imul
cwtl
pop
cs
jg
add
dec
pop
jns
xchg
xor
cmpsl
cmc
sahf
je
mov
js
pop
aaa
cmp
jl
jnp
out
mov
and
mov
js
xchg
sbb
mov
pop
or
sbb
sti
fistpll
cmp
pop
and
mov
adc
bnd
int3
inc
xchg
je
cli
cmp
fsubl
and
fs
ss
rcrb
cli
jg
mov
cld
cwtl
ret
dec
add
fwait
shr
dec
pop
jb
cmp
mov
jp
and
mov
inc
jg
sbb
jp
psubusb
nop
pop
sbb
add
imulb
testb
mov
xor
lahf
sti
jecxz
cmc
pop
test
jo
dec
sbb
fwait
jp
xchg
hlt
jae
iret
add
fdivrs
sbb
mov
pop
insl
fxtract
cld
sbb
push
ljmp
mov
aad
inc
cwtl
mov
test
pop
adcl
cmp
aas
lcall
mov
pop
je
push
push
mov
cmp
inc
xchg
lcall
cwtl
push
inc
jle
pusha
mov
sti
bound
pop
inc
hlt
imul
lock
push
mov
ficomps
pop
decb
pop
mov
inc
jecxz
gs
clc
int3
jge
add
and
in
add
lcall
stos
sub
xchg
push
jl
cmp
fcmovnu
gs
jo
cmpl
mov
bound
cmp
mov
push
cmp
repz
pushf
push
mov
cmp
pop
stos
in
call
ds
jp
addr16
dec
das
xlat
xchg
rorb
sbb
scas
frstor
and
push
inc
push
stc
sahf
mov
cld
lahf
rorb
cmp
xor
adc
sbb
clc
dec
xor
outsl
inc
imul
sub
cmpl
dec
js
repz
mov
dec
cmp
cmp
cmp
sbb
inc
repz
cmpsl
sbb
cmp
cmp
and
cmp
repz
push
push
lods
cmp
clc
ds
sahf
inc
mov
cmp
pop
js
push
iret
cmp
mov
inc
pop
mov
aam
pop
in
push
and
sbb
pushf
jle
sti
lcall
push
fsubs
mov
arpl
sbb
xchg
xchg
and
mov
jl,pt
pop
mov
mov
fcomip
sub
enter
in
adc
xchg
mov
fistps
cli
pop
js
mov
out
xor
int
inc
pop
add
sbb
mov
aad
cld
insl
addl
out
loop
mov
dec
push
sahf
inc
dec
mov
mov
xor
out
adc
ret
test
jno
inc
cmp
cmp
lahf
or
cmp
pop
cwtl
adc
ss
cli
cmp
xchg
mov
jp
ja
pop
into
sub
insb
sbb
sti
cmp
loopne
jl
aas
push
je
sbb
pop
mov
das
je
mov
es
aas
xchg
jg
pop
mov
stos
push
adc
add
rcrb
pop
pop
popf
pop
dec
not
fwait
cmp
or
mov
push
pusha
sub
sub
out
jae
popa
les
cld
mov
nop
jge
mov
pop
jns
movsb
xor
jl
pop
js
fistpl
pop
xchg
popa
negl
jb
and
xor
pop
or
xchg
stos
and
xchg
stos
in
inc
sti
cmp
sub
enter
adc
sbb
movsl
and
sub
pop
cmp
fdivrp
lods
push
aas
pop
and
jb
inc
pop
fisttpl
sbb
lcall
mov
push
xchg
pop
int
mov
jp
add
dec
pop
cmpsb
mov
mov
cld
inc
out
and
mov
pop
cmp
repnz
fimull
and
lods
loopne
fistps
cmp
fdivrs
mov
inc
subb
stc
ljmp
shlb
adc
xchg
xor
mov
mov
cmpl
fwait
pushl
pushf
cmpb
mov
mov
sahf
aam
pop
aad
mov
mov
das
pop
fwait
aas
aaa
outsl
adc
xchg
fsubrs
add
and
inc
mov
pop
push
gs
mov
pop
sbb
xor
pop
inc
pop
cmp
mov
push
mov
int3
mov
nop
stc
lret
aaa
jns
cmp
jb
jp
jle
outsl
mov
xchg
mov
fsts
pop
jp
pushf
push
je
xor
fmuls
cmp
fldl
xor
mov
adc
adcl
or
stc
movsb
sarb
adc
push
pop
pushl
push
sbb
aam
aas
shr
push
fists
jmp
mov
aad
inc
jnp
stos
xchg
std
cmp
in
lahf
xor
add
pop
popf
and
push
inc
pop
scas
dec
xchg
addr16
jbe
jl
push
mov
cmp
fmull
fmulp
sbb
pop
int
mov
ljmp
js
ja
lahf
jge
sbb
adc
fnstcw
fdivrs
shlb
sbb
cmp
xor
jl
cmp
pop
sbb
fstpt
std
jne
cmp
into
scas
fsubrl
sbb
mov
decb
inc
jge
mov
fcomi
inc
cmpsb
lcall
testb
das
in
pop
xor
pushf
popa
inc
sarb
cltd
iret
lahf
mov
mov
push
aas
pop
subl
out
add
cmp
adcb
xchg
jle
jle
sub
mov
jle
pushf
dec
loopne
adc
pop
js
mov
fnstsw
sti
inc
insb
sti
cli
push
push
mov
cmp
pop
dec
call
cld
jl
lahf
cmp
fwait
scas
dec
jge
pop
pop
add
pop
pop
iret
call
push
pusha
mov
add
push
inc
pop
mov
and
je
scas
je
push
sahf
jg
cmc
or
aas
cmp
pop
inc
mull
sbb
pop
data16
shlb
fwait
dec
add
dec
inc
pop
mov
loopne
repz
pop
stos
inc
sti
inc
dec
repnz
mov
cltd
int
loope
lds
sbb
mov
and
je
mov
mov
xchg
loopne
mov
jg
dec
dec
pop
fwait
cmp
jge
pop
mov
lcall
fistl
mov
xchg
repz
pushf
sbb
jl
lds
rcrl
jp
mov
aas
fwait
jl
data16
dec
cmp
adc
push
add
fdivrl
and
gs
fwait
pop
loop
add
das
xor
mov
lods
cli
je
push
js
and
lahf
xor
out
jle
lds
std
pop
mov
mov
jl
adc
cmp
xor
scas
out
push
loop
pop
xorb
jl
lcall
xchg
pop
fidivrl
and
fdivrp
mov
pop
insb
mov
push
dec
mov
dec
in
jl
pop
fcoms
decl
nop
pop
dec
lcall
stos
push
add
mov
pop
mov
sbb
jp
jmp
push
xchg
sbb
cli
cmp
lock
pop
pop
cmpsb
mov
sbb
push
mov
sbbb
dec
mov
inc
in
cltd
popa
and
cmp
sbb
push
pop
loopne
xchg
xchg
cld
stc
fwait
jp
cmp
inc
pop
xchg
incb
jb
pop
inc
pushf
addb
fwait
and
mov
sub
or
inc
lock
addr16
lock
shl
bound
adc
clc
push
mov
ds
xor
aaa
and
std
mov
jg
aaa
pop
cmpsb
cmpsb
pop
jmp
sub
push
fwait
pop
mov
cld
adc
and
pop
mov
push
dec
cmp
mov
pop
xor
fildll
mov
hlt
mov
out
pop
arpl
sahf
clc
jnp
inc
fistpll
cwtl
pop
ficoml
mov
in
pop
inc
dec
jbe
pop
test
cmc
inc
sbb
push
sbb
ljmp
or
and
sahf
pusha
mov
cmp
mov
div
stc
mov
pop
mov
pop
sbb
push
adc
clc
dec
lahf
pop
sbb
mov
fcomps
pusha
inc
ljmp
mov
adc
test
inc
pop
lahf
mov
push
dec
cmp
repz
or
sub
addb
nop
mov
push
pop
idivl
cmpsb
mov
cwtl
pop
pusha
or
call
cltd
rcr
cmp
and
jl
sbb
adc
jnp
mov
mov
movsl
inc
test
add
cld
xor
pusha
inc
pop
loopne
idivl
mov
cli
mov
mov
sti
dec
push
fidivrs
jge
cs
cli
mov
cli
jae
insb
adc
cmp
hlt
pop
sbb
imul
jne
jle
loope
dec
inc
sub
mov
fwait
sti
inc
jb
pop
pop
loope
icebp
fstpt
outsl
cmp
fldenv
movsl
lcall
mov
push
das
mov
and
es
ficomps
or
xchg
mov
pop
test
test
pop
jmp
shrb
push
push
cmp
inc
dec
push
nop
fisttpl
jne
fdivrl
mov
hlt
jge
insb
cltd
jl
pop
call
cmp
fdivrs
inc
ror
decl
xchg
ds
clc
cli
in
pop
inc
sti
add
inc
adc
jge
xchg
mov
adc
xor
negl
aaa
test
idivb
mov
sarb
test
inc
addr16
jecxz
iret
arpl
shlb
push
cmp
pop
js
cmp
push
add
clc
and
pop
sarb
cmp
inc
inc
popa
fisubrl
pop
pop
pop
dec
mov
hlt
sbbl
pop
xchg
in
loopne
adc
outsb
push
lods
and
rolb
jle
fdivrs
cli
test
hlt
in
mov
and
imul
cs
outsb
or
icebp
pop
in
mov
test
mov
pusha
pop
xchg
mov
pop
aas
inc
rclb
lret
cmp
push
je
xor
and
rcrb
pop
pusha
cmp
popa
sbb
push
and
sub
and
fimull
adc
cmp
mov
mov
js
ret
xchg
jnp
dec
sbb
imul
mov
lds
ds
cmp
jb
cmp
cmp
loopne
lcall
cmp
jle
pop
pop
mov
inc
pushf
inc
ret
cmpl
sbb
cmp
mov
lock
ljmp
pop
pop
mov
mov
mov
repz
push
jle
pop
clc
mov
jg
adc
pushf
xchg
jp
fildl
mov
sarb
mov
xor
sbb
int
insl
push
mov
add
inc
sbb
fbld
fadds
cli
sbb
daa
ret
js
adc
adc
cmp
sbb
fdivrs
xchg
cmp
mov
mov
sub
into
xchg
dec
enter
mov
jno
ja
mov
scas
sbb
sahf
sbb
mov
pop
jns
push
jg
sbb
cmp
mov
mov
mov
cmp
and
sbb
sbb
xor
popa
push
cmp
mov
pop
pop
cmp
add
sti
aas
cmp
and
rcrb
fidivrs
hlt
repz
cmp
add
cmp
adc
cli
inc
adc
xchg
adc
ret
xorb
xchg
mov
pushf
add
or
mov
push
lcall
jae,pt
inc
aad
cwtl
xchg
movzwl
fcomps
pop
pop
sarb
mov
jp
les
sahf
sub
adc
xchg
mov
push
cmp
inc
popa
cmp
adc
mov
jl
ljmp
pop
and
mov
fld
mov
dec
dec
pop
pop
and
sub
mov
lcall
iret
clc
fidivrl
sub
fcomp
dec
cmp
mov
cmp
inc
pushf
pusha
sbb
xchg
push
xchg
ss
dec
pop
dec
mov
pop
dec
inc
xchg
sahf
mov
ret
fbstp
mov
in
mov
mov
sbb
bound
cmp
add
adc
cwtl
lahf
in
and
pop
jge
push
cmp
xor
mov
mov
mov
lret
mov
jne
pop
repnz
fnstsw
mov
mov
stc
aas
aam
ret
andb
pop
loope
cmp
jns
popa
cmp
jnp
testl
dec
mov
inc
inc
mov
cld
ffreep
cmp
inc
loope
hlt
cmp
ficoms
pusha
jb
push
inc
sbb
jle
incb
adc
fsubl
mov
pop
dec
add
hlt
cmp
jnp
decl
stos
vcvtdq2pd
xor
adc
leave
pop
jge
aam
daa
jmp
jle
pop
jge
pop
lret
decb
mov
mov
sahf
add
pop
add
push
cmp
jg
dec
push
arpl
sub
out
cmp
mov
pusha
in
lock
cmp
outsl
dec
mov
mov
cmc
pop
idivl
sub
push
stos
adc
fdivrl
cmp
sbb
pop
pop
push
add
add
nop
int
jp
pop
ffree
rcrb
push
mov
mov
inc
lcall
mov
pop
aas
cmpb
mov
inc
dec
imul
mov
clc
push
pop
adc
popa
fwait
aas
xchg
mov
ss
jnp
cmp
pop
sbb
jle
jl
fstps
rol
jnp
rolb
sti
cmp
dec
jp
pop
inc
mov
pop
xchg
mov
xchg
je
movl
scas
adc
mov
repz
sbb
data16
push
int
stos
pushf
and
push
sbb
inc
sbb
ficoml
ds
fbld
add
fwait
in
mov
stos
loop
gs
xchg
dec
sti
inc
dec
jne
fdivrs
jo
pop
fistps
std
sbb
jnp
bound
cld
cltd
jge
adc
mov
pop
mov
cmp
adc
frndint
mov
sbb
sbb
xchg
push
jmp
push
fwait
push
jge
hlt
pop
adc
pop
jnp
push
pop
xchg
mov
push
incl
pop
clc
ret
mov
mov
cmpsb
aas
lret
and
mov
mov
lds
and
mov
cmpb
cli
jb
inc
js
repz
pop
mov
mov
mov
fdivrl
sbbl
cmp
js
pop
dec
lds
fisubs
shr
dec
cli
mov
sbb
fisttps
aas
jp
fcompl
mov
mov
push
mov
ds
add
int
sub
pop
cmp
cmp
fistpl
xchg
mov
or
cli
cmp
sub
iret
dec
inc
dec
pop
cmp
dec
movsl
fwait
push
jge
inc
stos
cmp
cwtl
cmp
cltd
loopne
pop
lcall
push
std
imul
filds
mov
dec
mov
sahf
pop
and
dec
and
jge
mov
push
jle
push
pop
aas
incb
jp
jg
loope
inc
add
cmc
pop
pop
xchg
mov
mov
loopne
popa
test
xor
xorl
adc
jnp
int3
testl
inc
mov
jno
cld
pusha
sbb
call
jg
aas
push
inc
add
dec
pop
lahf
lods
dec
xor
jmp
mov
push
inc
movsl
mov
scas
xchg
daa
mov
and
jl
int3
xchg
cmpl
add
popa
mov
mov
mov
rorb
cmp
rclb
inc
popf
sbb
int3
in
divl
shl
je
sub
sbb
mov
sahf
add
sti
mov
mov
mov
push
popf
cmp
lcall
es
dec
inc
jge
fwait
orb
pop
pop
cli
cmp
ficompl
pop
mov
popa
rol
adc
cli
sub
loopne
lret
mov
sbb
ljmp
sbb
dec
shl
pop
out
or
xchg
jmp
lcall
mov
pop
mov
inc
insl
xchg
pushf
cmp
hlt
xchg
mov
repz
sbb
push
popf
inc
popa
mov
sbb
mov
xchg
ficoml
sub
lahf
jo
sbbb
fdivrl
pop
inc
sbb
neg
cmp
imul
lods
aas
pop
xchg
lds
inc
adc
jbe
xchg
icebp
ss
inc
inc
mov
pushf
sahf
sbb
ljmp
cld
mov
xchg
pushf
jno
push
inc
dec
inc
mov
clc
pop
rcr
rcrb
xor
pop
sbb
jp
shl
fiadds
loop
orb
jle
adc
js
jle
pop
stc
inc
jl
jp
sbb
shlb
cltd
mov
cmp
mov
bound
pop
fistps
clc
inc
insl
aas
xor
sahf
jl
mov
adc
pop
mov
pusha
sub
fidivrl
sahf
inc
sub
popa
ret
xchg
sar
and
jge
pop
adc
pop
lcall
cmc
fidivl
int3
out
mov
sbb
inc
inc
cmp
incl
sahf
pusha
and
stos
sbb
mov
pinsrw
ret
jns
mov
cmc
pop
pop
xchg
push
jge
sbb
mov
cmp
sahf
std
adc
ss
inc
dec
insl
mov
push
cld
dec
arpl
sarb
and
mov
jae
rolb
cmp
cmc
pop
mov
fs
pop
mov
pop
test
xchg
pop
pop
mov
cmc
cmp
sbb
call
js
mov
fs
call
pop
dec
leave
hlt
mov
fwait
inc
inc
and
mov
cmp
pusha
loopne
cltd
push
mov
jl
fidivrl
movsb
fsubrs
pop
cmp
cmp
inc
icebp
lods
push
cmp
incl
mov
mov
pusha
or
sbb
xchg
je
std
int3
div
mov
negb
sbb
mov
cld
fstpt
pop
mov
leave
xchg
pop
popf
fdivl
sbb
push
fsubp
inc
jge
sbb
cmp
cmp
jns
fistpll
inc
idivl
daa
jbe
sbb
decl
mov
fstpt
scas
test
dec
pop
fcomps
sahf
dec
dec
sub
and
pop
mov
rcrl
cmc
mov
fisttps
xchg
js
dec
add
clc
pop
sbb
scas
cmp
movsb
mov
and
cmp
pop
adc
pop
out
sbb
mov
and
cmp
insb
add
lcall
stc
popa
fcoms
std
fidivrs
inc
xor
jnp
pop
sub
fists
pop
std
pop
das
push
cmp
pop
sub
jp
inc
xor
das
loopne
fcmovnb
hlt
cwtl
pop
mov
sarb
pop
adc
cld
js
mov
and
sub
xchg
cli
mov
fwait
imul
add
cmp
xor
jo
inc
mov
ficomps
pop
pop
lahf
mov
les
push
pop
sahf
xchg
mov
lret
loopne
jae
jge
test
cld
jo
xchg
clc
dec
mov
sbb
fidivrl
jge
sbb
pop
enter
dec
sti
mov
adc
fadds
and
sbb
add
stc
add
jle
adc
loopne
or
push
pop
mov
pushf
adc
inc
jp
cmp
dec
rolb
loop
dec
scas
mov
mov
mov
cmp
fnstsw
add
ss
jge
popa
pop
sbb
out
pop
fdivrl
lret
pusha
dec
adc
cmp
mov
pop
sti
cmp
inc
mov
push
popa
sbbl
outsb
cmp
xchg
jp
inc
jp
arpl
arpl
arpl
push
cli
and
fadds
jmp
cmp
mov
push
sti
pop
js
adc
mov
lcall
jle
jae
aas
cmp
push
cmp
jb
pop
xchg
std
cwtl
hlt
pop
pop
mov
sarl
clc
mov
pop
lcall
idivl
push
jp
jnp
pop
ss
dec
pop
cmp
bound
jmp
adc
pop
inc
lcall
notl
jnp
and
test
aas
mov
sbb
push
push
mov
mov
sbb
xchg
mov
push
lahf
mov
push
push
cmp
cmp
cli
fwait
cmc
mov
inc
jl
xor
fidivrs
mov
rcrb
jb
repz
cmpb
and
loop
hlt
repz
cwtl
fildl
sub
inc
push
pop
pop
inc
lcall
mov
xor
imul
in
xor
xchg
adc
mov
adc
fidivrs
testb
or
stos
add
cmp
lcall
outsl
mov
mov
sbb
pop
idivb
xchg
jp
pop
clc
mov
out
fs
inc
into
popa
mov
xchg
fmuls
xchg
mov
mov
pop
sti
iret
cmp
faddl
addr16
es
call
fcomps
mov
ret
add
mov
out
and
xlat
adc
aaa
and
cmp
inc
lret
cmpsl
sub
hlt
jg
adc
sbb
out
in
mov
test
adc
movsb
jb
fbld
dec
dec
and
cmp
mov
pushf
or
xchg
push
inc
fwait
jnp
xor
and
fistps
inc
sarl
cmp
pop
test
push
cmp
pop
adc
pop
jp
sub
jl
adc
aas
dec
sbb
mov
negb
push
jp
and
mov
negl
pop
sti
xor
and
fistps
loop
and
in
into
dec
aas
bound
pop
xorl
mov
pop
loopne
push
xchg
or
jnp
int
push
sti
cmp
hlt
pop
fdivrl
std
sbb
ja
repnz
adc
movsl
xchg
out
popa
dec
xchg
loopne
rorb
jp
xchg
inc
push
mov
pop
inc
out
jl
mov
adc
pop
cmc
push
stos
dec
adc
jg
pop
js
dec
pop
aas
pop
shlb
imul
xchg
adc
mov
cli
jnp
mov
loop
pop
iret
rcl
sbb
xchg
sbb
cmp
push
loopne
mov
push
mov
repz
pop
or
cmp
push
sarb
cmp
sbb
bound
ficoms
pop
sbb
aas
pusha
pop
addl
push
or
mov
xlat
stc
fnstcw
dec
cmc
mov
adc
mov
jg
decb
adc
and
lcall
mov
xor
cmp
cwtl
sub
stc
mov
cld
orl
adc
pop
mov
cmp
rcl
je
push
jae
js
xlat
push
or
cmp
stos
adc
add
xchg
xorl
lds
xchg
adc
adc
cmp
xchg
lret
pop
mov
mov
sbb
scas
loopne
orb
add
and
pop
clc
mov
testb
addr16
pop
xchg
arpl
jle
sub
mov
fs
lahf
push
mov
mov
dec
mov
jmp
cwtl
xorb
jle
push
pop
push
push
dec
fsubr
ja
test
clc
jle
cmp
dec
inc
add
jg
mov
cmp
xchg
mov
cmp
fistl
stos
inc
dec
jnp
jno
lcall
inc
dec
mov
mov
sbb
add
ret
mov
cmp
fimull
les
adc
scas
add
popf
popa
addb
stos
divl
inc
pop
cmp
adc
dec
stc
or
loopne
mov
lret
sbb
pusha
into
lahf
or
jp
pop
pop
mov
cs
pop
and
dec
jge
adcl
and
inc
decl
mov
jge
shll
cmp
push
adc
pop
and
cmp
pop
xchg
cmp
adcl
cltd
push
dec
fisubl
jle
ror
fisttps
push
pop
cmp
sub
mov
push
xchg
sbb
xlat
js
roll
ficomps
call
jge
cmp
pop
pop
and
pop
ds
cld
push
andl
jle
mov
fidivrl
mov
ds
and
ffreep
push
cld
xchg
xor
pop
push
mov
fwait
mov
lcall
repz
test
jge
dec
and
inc
sub
incl
cld
popa
mov
pop
pop
cmpl
scas
cmp
cmp
mov
inc
adc
xchg
inc
popf
dec
test
popa
aas
pandn
clc
inc
and
sbb
shlb
fmuls
mulb
add
or
cld
hlt
pop
aad
jl
cmc
ljmp
jp
pop
mov
pushf
pop
inc
clc
fsubp
jge
sbbb
jl
sbb
add
js
iret
sbb
pop
adc
xchg
ret
mov
and
popa
fistpl
rclb
dec
cld
xchg
pop
pop
sti
add
scas
lahf
loop
pop
xor
mov
jge
mov
pop
ljmp
enter
rolb
fstpt
movsl
pop
sbbb
into
pusha
pop
xchg
adc
push
mov
add
mov
xchg
dec
lock
jl
cmp
pop
mov
mov
popa
sbb
cmp
pop
add
jl
sub
lret
push
mov
pop
xchg
cmp
cwtl
enter
adc
cmp
ret
mov
sahf
enter
loope
inc
test
sbb
add
cmp
jno
mov
push
fistps
pop
xor
adc
push
cmp
pop
fimuls
cmp
sahf
sbb
jb
aas
mov
cmp
lahf
xchg
dec
pop
fisttps
outsl
inc
cltd
sahf
inc
pop
rcrb
jp
pop
inc
int3
dec
lret
pop
addb
or
pop
fs
dec
dec
fbld
sahf
cltd
lcall
jle
in
cmp
mov
pusha
sbb
je
lahf
inc
call
fcomps
and
int3
test
xchg
pop
cmp
xor
pop
pop
test
cmp
cld
push
inc
jge
pusha
mov
dec
shl
sahf
mov
xorb
cmp
inc
pushf
pop
and
rcrl
xor
imul
fisttpl
int
adc
jp
mov
jmp
cmp
fisubl
jns
sbb
ss
inc
lcall
jl
loopne
insl
fcomi
lcall
inc
rcr
test
pop
inc
lea
adc
pop
push
sbb
pop
dec
mov
sbb
adc
aad
mov
xchg
fnstcw
mov
jge
pushf
mov
sbb
pop
andl
insb
jb
fidivrs
push
add
fwait
cli
adc
pop
rcr
and
inc
and
xor
aas
outsl
jp
stos
ret
mov
pop
cmc
pop
call
sbb
mov
out
sbb
ret
orl
sahf
jnp
jg
mov
int3
mov
mov
add
mov
pop
cli
int3
mov
adc
ficoms
mov
mov
clc
data16
mov
mov
add
dec
pop
sub
sbb
mov
imul
lahf
jp
bound
mov
jle
addl
sbb
cwtl
cmpsb
mov
cld
jp
xchg
jp
ficompl
insb
and
fsubl
xor
rcrb
fidivrl
sahf
mov
dec
popa
push
adc
mov
cmp
mov
and
push
rcrb
ljmp
out
mov
push
repz
xor
mov
mov
inc
pop
jle
jbe
shl
cmpsl
mov
sti
cmp
mov
js
shl
mov
mov
rcrb
inc
xchg
cmp
xchg
js
fsubrs
sbb
cmp
ficomps
or
pop
idivl
pop
dec
jb
mov
mov
orl
mov
jg
push
daa
jmp
mov
jle
add
lcall
or
mov
dec
mov
ficoml
lret
mov
sbb
sbb
jb
fsubs
cmp
push
mov
cmc
movsb
mov
cmpl
rcr
neg
mov
cmc
xchg
cld
and
pushf
and
mov
iret
dec
mov
sbb
push
sub
arpl
lock
cli
pusha
jnp
jg
dec
arpl
jae
clc
mov
pop
or
pop
andl
xchg
fsubp
mov
push
pop
jle
jg
data16
cmp
pusha
cltd
sbb
dec
idivl
mov
inc
add
jge
aas
lock
mov
or
sahf
pushf
mov
mov
das
ljmp
mov
sub
jl
das
mov
mov
adc
sti
mov
inc
jle
roll
mov
push
jnp
sbb
lret
and
mov
cwtl
loopne
sub
add
js
mov
gs
cmpb
popf
xchg
mov
sub
adcl
mov
test
sahf
pop
add
test
xchg
cmp
pop
push
and
xor
popa
rcrb
pop
inc
jne
pop
sbb
mov
bound
inc
add
lods
dec
aas
fwait
cld
dec
inc
data16
pusha
nop
pop
jmp
gs
cmp
pop
mov
pop
jg
jle
pop
fstpl
fdivr
jno
sahf
sarb
xlat
push
jl
loope
xchg
and
aad
cli
pop
pop
rolb
inc
inc
js
fwait
inc
ficoms
scas
lcall
sbbl
xchg
js
mov
pop
mov
push
rcrb
mov
and
ljmp
mov
pop
test
bound
adc
cmp
jp
cmp
popf
xchg
loopne
roll
pop
inc
stc
icebp
in
sarb
cmp
lahf
data16
nop
dec
adc
jle
cld
or
pop
aad
and
xchg
lcall
inc
sbb
mov
xchg
fdivrs
mov
sar
cmp
clc
cmpl
pop
mov
loopne
cmp
xchg
lahf
pop
pop
mov
fistl
push
sbb
lods
xor
dec
mov
scas
vpextrw
lds
test
fmuls
movsl
jl
lahf
cli
sti
repnz
scas
sub
and
insl
push
int3
mov
sbb
sub
aas
mov
push
inc
push
pop
add
sbb
fst
inc
lds
das
cmp
ret
rcrb
pop
pop
pop
cmp
adc
fisubs
int3
xchg
sub
sti
jle
leave
lcall
push
sbb
cmp
mov
mov
and
cmp
xchg
mov
stc
loop
push
rcr
mov
pop
push
mov
fwait
sbb
mov
lahf
fistpl
sti
and
inc
jg
mov
pushl
mov
push
fstl
jle
sbb
dec
mov
add
nop
pop
icebp
xor
cmpsl
adc
jnp
xchg
cmp
scas
cmp
and
aad
mov
pop
aas
mov
lret
jg
sbb
sbb
cmp
dec
sarb
stc
cmp
les
js
sahf
jg
sbb
sbb
push
and
pop
lret
jg
cmp
xchg
negl
mov
pop
add
pop
pop
loope
fcmovu
pop
push
and
sbb
fwait
idiv
mov
rcrb
dec
push
loope
cmp
rcrb
pop
dec
call
inc
loopne
cld
cmp
xchg
xchg
sti
lahf
cmp
dec
scas
mov
adc
pop
mov
xchg
lahf
clc
filds
popa
mov
pop
jns
stos
jo,pt
fldenv
cli
sbb
mov
popa
pusha
jge
fcmove
pop
mov
rclb
fildl
push
mov
fdivrl
pusha
jle
pusha
sub
sbb
fcmovu
pop
lcall
mov
repz
adc
sahf
pop
cmp
lcall
xchg
pop
sti
fisttpll
mov
cmp
pop
pop
mov
mov
in
push
push
sar
fcoml
pop
cld
insb
ja
mov
mov
cmp
sbb
je
sbb
pop
loop
das
stos
adc
and
fcoms
jnp
cmc
or
mov
pop
call
mov
jge
pushf
aas
jl
xor
sbb
aad
dec
sbb
loop
je
inc
xchg
loopne
jl
clc
shlb
mov
mov
cmp
jge
idivb
cmpb
pop
fmuls
jg
loope
sbb
xchg
pusha
ret
and
mov
pop
ficompl
jmp
adc
pop
notl
adc
mov
cmp
dec
xchg
inc
jnp
lahf
jg
inc
mov
add
fnstenv
cmp
mov
bound
fstpt
and
mov
dec
lcall
push
xchg
pop
xchg
cli
pop
icebp
mov
and
pop
bound
pop
pop
push
mov
jne
aad
incl
mov
mov
cmp
xchg
jnp
cmp
sbb
and
cmp
jnp
mov
pop
mov
inc
aad
jnp
adc
or
loopne
mov
mov
shl
sti
test
mov
das
jae
aas
arpl
mov
cwtl
add
cli
fcmovnb
mov
jo
mov
inc
pop
fwait
pushf
pop
scas
lahf
rclb
pop
pusha
jo
push
cmp
addb
js
jnp
pushf
pusha
addb
mov
in
fsubrl
mov
dec
movsl
inc
and
scas
sti
mov
inc
sbb
std
lret
add
incb
sbb
bound
cmp
push
push
cmp
cwtl
sbb
adc
cltd
pop
pop
sti
stc
sbb
jg
dec
lahf
sti
jne
pop
pop
fnstenv
daa
inc
and
lds
incb
sbbl
shlb
cmp
fwait
jg
out
ds
mov
aas
negb
pop
jb
xchg
mov
jp
lds
sbb
rolb
add
pushf
jg
add
cmp
pop
out
fistpl
mov
loope
inc
loopne
lcall
jg
repz
sarb
lcall
fwait
jnp
push
push
jl
sbb
sbb
cmp
adc
adc
int3
jge
mov
int
dec
cmpsl
cmp
mov
sarb
jp
test
mov
cmp
sbb
mov
mov
dec
js
sbb
pop
fwait
xlat
adcl
cld
mov
lcall
sarb
cld
jge
sti
fcomp
inc
jl
movsb
pushf
je
mov
lahf
jp
fildll
bnd
ficomps
push
incl
cmp
cwtl
idivl
jge
inc
mov
enter
fwait
push
out
sbb
mov
pop
mov
js
ffreep
sub
sub
fistps
shlb
pop
cmpb
jle
sbb
sbb
cld
jne
dec
jp
inc
and
pop
fwait
mov
mov
rolb
pop
cld
clc
loopne
mov
cmp
mov
sub
mov
sahf
loopne
cmpsl
mov
sbb
jle
std
lcall
mov
inc
jl
fistpll
mov
xchg
add
pop
jge
jp
mov
jnp
lock
aas
pushf
jge
or
nop
repz
xchg
fwait
dec
pop
add
dec
daa
jmp
sub
js
pop
jb
scas
shrb
mov
sbb
jb
mov
pop
popa
lahf
add
cwtl
dec
aam
mov
sbb
les
inc
xchg
inc
pop
fbstp
into
fwait
pop
ljmp
dec
push
jns
sti
cmp
lcall
rcr
stos
scas
cli
push
cmp
cltd
je
and
pop
xchg
add
js
pop
mov
cli
cld
test
aas
lcall
dec
pop
pop
and
jae
clc
mov
imul
pop
xchg
sub
dec
or
cwtl
and
mov
in
dec
ficomps
push
jl
add
sub
cmp
pusha
outsb
shll
sbb
pop
mov
dec
leave
sbb
cmp
fistps
mov
inc
pop
jp
pop
inc
pusha
test
idivb
enter
jp
fistpll
mov
xorb
clc
cmp
mov
outsl
loope
cmp
loope
adc
pop
pminsw
cmp
lcall
pop
push
mov
cmp
fwait
out
stc
sub
test
mov
pop
aas
popa
cli
lahf
cmpb
inc
inc
jb
sarb
fildl
mov
testb
test
call
mov
dec
mov
push
cmp
in
mov
sahf
jae
inc
push
fidivl
test
loope
orl
ljmp
mov
insl
mov
mov
roll
sbb
cmp
inc
jp
mov
mov
cwtl
add
xor
dec
bound
pop
jb
dec
adc
les
loop
cmc
adc
dec
jns
lahf
jnp
xchg
aad
fistl
mov
mov
shl
sbb
cmp
lods
repz
andl
jnp
push
push
cmp
mov
sub
mov
jg
cmp
cmpb
notl
lock
xor
pusha
lea
fwait
adc
push
sbb
sti
jnp
adcl
xor
fbld
fstl
and
sbb
or
push
arpl
mov
mov
cmc
sub
pushl
int
inc
pop
mov
cmp
movsb
sti
loopne
pop
xchg
ret
test
das
xchg
shrl
faddl
sbb
les
push
scas
sbb
cli
mov
jge
mov
mov
cmp
cmp
fdivl
xchg
jp
jg
mov
loope
pop
sbb
ss
push
pop
fimuls
fnstenv
lds
xorb
xor
cmp
mov
orl
cld
mov
xlat
pop
fwait
lret
arpl
lcall
icebp
cmp
or
sbbb
sbb
dec
pop
mov
push
fwait
mov
pop
jbe
scas
pop
mov
test
out
cmp
push
add
mov
jns
popf
pop
iret
mov
in
inc
adc
test
cwtl
mov
pop
ljmp
mov
sub
pop
cmp
mov
pop
test
loope
mov
fdivrs
cmp
push
add
loopne
cld
sbb
cmpl
cli
xor
popa
rcr
lret
dec
push
push
push
pushf
mov
cmpb
jl
add
sub
clc
scas
outsl
fstpt
cmp
mov
push
in
cmpl
cmp
mov
pop
clc
dec
sbb
inc
gs
lea
nop
adcl
out
jno
jo
ds
add
sub
testl
iret
cmp
cmp
or
sub
cmp
sahf
mov
jp
sbb
push
inc
pop
loopne
or
jae
shlb
stos
pop
add
jge
sbb
and
adc
mov
sti
dec
addl
movsb
ret
mov
sbb
pop
in
sub
clc
push
pop
push
xor
fsubr
cwtl
lret
iret
cmp
testl
jge
and
or
jl
lcall
cli
jns
or
bound
dec
jp
mov
jle
pop
pop
push
cmp
or
inc
mov
orl
mov
pop
fbld
xchg
cmp
jb
sbb
js
jp
mov
adc
lcall
and
aas
fcomps
cmp
pop
fistpl
sub
aaa
ljmp
adc
cli
sub
and
nop
cld
pop
mov
sub
jmp
sbb
clc
jp
xchg
cmp
pop
adc
jge
or
fnstcw
incb
pop
inc
fidivrs
jl
cmp
push
pop
push
popa
cmp
pop
jp
fisttpl
pop
dec
push
xor
fadds
mov
ss
and
cmp
and
repz
and
cltd
fmul
and
cmp
push
and
cmc
inc
and
icebp
inc
icebp
fdivrs
cli
call
mov
ss
cltd
sbb
ret
fidivrs
inc
adc
jns
repz
repz
fistpll
sub
jp
in
jle
add
inc
aas
scas
ja
lret
sbb
push
dec
lahf
dec
xor
push
push
jo
sbb
pushf
fdiv
jle
lret
clc
mov
std
inc
pop
push
lds
rcl
js
or
adc
pop
cmp
hlt
mov
pop
xor
popa
loop
fwait
js
lret
jns
into
pushf
stos
repz
inc
push
mov
jl
enter
out
cmp
jp
fisttpl
cmc
mov
push
jnp
pop
aas
ficomps
jp
ret
hlt
hlt
sbbl
adc
sub
xor
sti
daa
pop
dec
jmp
inc
int
mov
bound
fistpl
push
cmp
js
jge
cmp
aam
mov
mov
pop
rcrl
std
popa
shll
lret
into
jge
add
cli
adc
push
dec
rcrb
les
sti
in
pop
mov
cld
sar
sub
data16
icebp
fistpl
jecxz
pop
mov
cmp
dec
addr16
jge
sbb
jae
pop
cmp
jns
cmp
jg
lahf
in
cld
lcall
icebp
leave
add
cmp
mov
pop
cmp
sbb
in
div
adc
popa
mov
or
test
jnp
jle
jg
das
pop
jl
mov
scas
sahf
scas
lahf
repz
mov
ds
ss
cwtl
push
jge
mov
jns
clc
bound
jge
push
mov
xchg
movl
out
sbb
cmp
loopne
pop
aas
mov
or
sub
pop
xchg
xor
pop
jnp
push
xchg
pushf
and
faddl
icebp
divl
repnz
pop
inc
rclb
and
cwtl
jb
mov
cld
mov
pop
leave
push
mov
test
cli
dec
leave
call
push
aas
mov
push
jg
loop
xchg
js
pusha
icebp
jp
cwtl
andl
inc
pushf
fistpll
aas
mov
jns
mov
rcrb
dec
jle
pusha
inc
int
cmp
sbb
jp
mov
into
cmpsl
jge
push
adc
jne
inc
lds
cmc
fwait
movsb
inc
rcrb
push
cmp
mov
pop
pop
mov
pushf
mov
jp
cmp
pop
clc
nop
sbb
cltd
cmp
pop
pop
and
mov
xchg
pop
lcall
xchg
jl
mov
jbe
pop
pop
pusha
pop
push
add
cld
mov
jp
cmp
sahf
js
inc
mov
push
jnp
cmp
sbb
push
jl
sub
pop
dec
or
loopne
fwait
inc
mov
rcrb
inc
pop
pop
adc
mov
pop
mov
popa
pop
jnp
dec
xor
jg
sarb
std
dec
sbb
fadds
mov
and
jge
mov
cld
pushf
ja
imul
and
and
adc
stos
rcrb
dec
fdivrs
sbb
clc
push
add
fidivrl
mov
inc
mov
sbb
pop
sub
jl
pusha
adcl
push
pop
cld
test
fcoml
mov
sti
cld
imul
mov
jbe
loopne
lret
aaa
fisubl
pop
or
mov
inc
arpl
add
test
cld
cli
push
das
xor
adc
push
aas
ss
fdivs
jp
adc
jnp
push
add
shlb
dec
pop
hlt
mov
pop
loope
adc
clc
addr16
fiadds
xlat
sbb
cld
sbb
or
jnp
xchg
fdivrs
push
mov
mov
sahf
push
mov
xor
adc
pop
cmp
mov
fistpl
mov
mov
pop
cld
je
xor
sbbb
icebp
ds
xlat
cld
cmp
cmp
cmp
sub
test
pop
pop
pop
pop
inc
mov
cmp
fists
rcr
pop
fdivrp
add
jns
arpl
and
pop
dec
lcall
int3
mov
xlat
popa
mov
ret
add
or
in
xor
jle
sbbl
sbb
cmp
pop
fistpl
mov
inc
inc
jmp
clc
pop
data16
das
cmp
pushf
mov
xor
xchg
clc
pop
sbb
loope
maxps
push
lret
pop
in
cmpsl
xor
sarb
negb
aad
fisttps
mov
cld
ljmp
rcrb
pop
push
cwtl
mov
fwait
pop
test
rcrb
mov
pop
xchg
gs
sub
push
pop
in
js
adc
add
add
sbb
pop
mov
cmp
sbb
fidivrs
adc
inc
ds
jp
jge
idivb
into
pusha
aas
and
sbb
jne
jp
scas
and
cmp
popa
adc
mov
ret
cwtl
lret
xchg
add
mov
mov
adc
inc
aaa
jge,pt
adc
cmp
out
add
or
clc
cltd
popa
cwtl
daa
mov
pop
fdivrl
test
jle
pusha
sbb
lock
jge
js
sahf
pop
fisubs
mov
sahf
ficompl
loop
xchg
cwtl
fcoml
cld
cmp
jo
xchg
test
call
xchg
cld
mov
testb
jb
loopne
cwtl
jle
push
sti
test
lds
inc
aas
jnp
fisttpl
cmp
dec
jg
sti
add
lahf
dec
iret
jp
inc
dec
into
mov
sbb
mov
mov
aas
mov
jle
into
ja
int3
sbb
dec
popa
mov
adc
pop
inc
push
sbb
mov
cmp
fucomi
lcall
je
mov
rol
inc
mov
push
fldt
cld
push
xor
pop
test
std
inc
lods
aas
test
cmp
jnp
rolb
mov
pop
fcoms
mov
jl
inc
xchg
and
sub
dec
or
mov
inc
push
cmpl
js
insb
cmp
clc
dec
xchg
push
jmp
cmpl
jnp
les
adc
outsb
jge
cwtl
mov
je
pop
mov
pop
jle
ljmp
bnd
shlb
cmp
mov
ss
lcall
mov
sbb
pusha
mov
pop
xor
pop
pop
pop
adc
and
cmp
pop
std
dec
inc
mov
cmp
inc
or
mov
adc
add
mov
fisttps
mov
ret
jle
je
mov
add
outsb
jb
dec
add
sbb
repz
push
pop
pop
nop
xchg
push
mov
clc
push
jmp
cli
out
clc
mull
leave
add
cmp
mov
cmp
aas
mov
xchg
mov
jge
xor
scas
pusha
xchg
fdivrs
and
mov
ret
pop
mov
xchg
add
lds
mov
cli
sbb
pop
outsl
ljmp
sbb
ficomps
les
ss
pop
jnp
gs
mov
int3
mov
adc
sbb
sbb
xchg
xor
push
sti
push
js
cwtl
pushf
adc
adc
xchg
push
sbb
pop
xor
cmp
inc
ror
inc
sti
sbb
addb
add
dec
sbb
adc
pop
nop
push
fildl
xchg
pop
fsubl
ret
fstps
cmp
inc
out
add
arpl
pop
cld
pop
hlt
sahf
outsb
add
pop
nop
cmp
popa
jg
ss
sbb
pop
mov
jge
and
and
cmp
cmp
dec
mov
cmp
pusha
or
fdivrl
mov
adc
cld
sbb
cmp
lods
in
imul
dec
sbb
inc
pop
adc
ja
mov
mov
mov
cltd
jnp
add
clc
mov
add
lcall
test
decl
sti
mov
repz
or
in
je
sbb
fwait
mov
lock
cmpb
push
mov
push
xchg
fistpll
loop
pop
stos
cmpb
and
jo
lcall
sub
sahf
pop
cs
daa
pop
mov
inc
cmpb
pop
mov
sbb
popa
sub
cmp
sbb
inc
mov
cmp
popf
adc
fidivrs
xchg
cmc
cs
adc
jle
js
xlat
fstpt
pop
jns
cmp
add
push
or
cli
cmp
inc
adc
pusha
inc
adc
lcall
cli
inc
cmp
lock
add
fdivr
ljmp
sbb
xchg
les
jp
and
mov
pop
mov
dec
fdivl
insb
fdivrs
sahf
cmp
sbb
xorb
ds
pop
cmp
xchg
pop
pop
xor
inc
xor
cmp
add
jns
pop
pop
je
mov
adc
popa
sahf
pop
std
xor
dec
inc
bound
mov
and
fdivrs
cmpl
testb
cwtl
divb
xor
xchg
fisttpll
loop
hlt
xchg
pushf
inc
cmc
je
mov
sbb
xchg
pop
xchg
sbb
cld
jnp
push
pop
mov
mov
mov
fisubrs
cmp
cmc
sbb
or
rolb
adc
aas
sbb
mov
jp
inc
jle
xchg
js
subl
add
push
js
cmp
faddl
mov
jle
lret
dec
hlt
pop
leave
hlt
xchg
jge
adc
dec
dec
idivl
push
clc
push
jl
dec
pop
mov
xchg
mov
ljmp
jmp
pop
cmp
jnp
hlt
pop
mov
mov
sbb
fiaddl
inc
inc
loopne
adc
cmp
pop
scas
andl
loopne
ret
jg
sub
mov
shlb
pop
cmp
int3
stos
cld
arpl
shl
clc
xchg
xor
inc
sarb
js
orl
pop
shlb
lahf
adc
dec
inc
nop
pushf
sub
jg
inc
mov
jne
inc
sub
in
cmp
cmp
popf
jnp
stc
pop
jl
pop
sub
jns
sub
pop
inc
dec
pop
scas
leave
vpsubusb
mov
push
mov
cmp
pop
int3
into
mov
pop
sbb
sbb
jl
or
sub
add
int
dec
sbb
pop
mov
aas
adc
sbb
xchg
cmp
and
decb
mov
out
inc
push
push
cli
cmp
mov
mov
cmpl
and
adc
imul
fcomp
lahf
mov
sub
ret
jne
cmp
pop
pushf
ja
dec
cli
or
lcall
adc
jnp
sub
lds
cwtl
mov
xor
fistpl
mov
mov
or
je
push
cmp
mov
aas
les
popa
cmp
push
mov
xchg
int
jne
cmp
adc
pop
pop
mov
push
adc
xor
mov
pop
dec
popf
add
aas
outsb
mov
pop
xchg
sbb
dec
mov
pop
pop
repnz
dec
push
adc
fcmovu
mov
inc
cmp
jge
mov
and
int3
sahf
scas
hlt
mov
pop
hlt
xchg
adc
lret
sub
pusha
fwait
mov
cld
cmp
cmp
jl
cmpl
fcomps
mov
sbbl
mov
cmp
rclb
dec
lahf
fwait
mov
stc
xor
js
lcall
scas
pop
enter
lds
add
shrb
ss
mov
sar
pop
mov
cld
je
mov
inc
loopne
jp
mov
pop
push
sbb
sti
in
inc
ss
sub
and
jle
jno
xor
pop
inc
mov
inc
testl
scas
movups
je
mov
pop
mov
or
pusha
sub
loopne
cmp
gs
out
movsl
fnsave
mov
cmp
dec
cmpsl
pusha
imul
fidivrl
insb
fstps
cmp
mov
pop
cmp
ds
pop
push
pushf
mov
lcall
cmp
rcrl
cmp
pop
cmp
fcomps
rorb
mov
sub
loop
fadds
lcall
ljmp
lea
pop
clc
pop
inc
mov
repnz
mov
push
pop
cmp
xchg
sub
push
test
sub
aas
fadds
mov
mov
cwtl
ficompl
rcll
shlb
jmp
mov
push
aaa
ja
push
test
sub
sub
xor
cmp
lods
bound
pushf
mov
popa
repz
pop
inc
pop
nop
adc
sbb
inc
xlat
cmp
and
mov
sbb
sbb
les
cmp
xchg
pusha
mov
clc
outsb
pop
xchg
xor
popa
xor
cmp
rcrl
mov
add
jnp
mov
jmp
inc
leave
fdiv
push
cmp
mov
jno
pop
jge
adc
cmp
push
out
repz
sbbb
pusha
cmp
aaa
sarb
bound
aas
pop
jle
push
inc
xchg
imul
mov
loope
lds
test
ljmp
lahf
push
mov
jp
xchg
push
mov
lock
pop
mov
hlt
mov
rclb
pop
fildl
sahf
xchg
ds
mov
cmp
and
cld
cwtl
in
leave
mov
inc
pop
xchg
pop
lcall
sbb
pop
jge
js
pop
inc
lcall
fdivr
jae
add
add
jbe
lcall
hlt
mov
sbb
or
sbb
loopne
out
sti
rol
fstps
cmp
pushf
sbb
pop
pop
adcb
jp
xchg
lcall
and
sbb
sti
cmp
fnstcw
pop
pop
add
imul
xchg
pop
pop
mov
pushf
jnp
sub
and
mov
pop
push
xchg
adc
fisubs
pusha
loope
mov
lret
push
add
cmp
scas
jl
dec
jnp
push
push
inc
popf
mov
gs
mov
fdivr
mov
jnp
mov
jnp
xor
pop
xchg
pop
push
ficomps
sahf
xchg
loop
and
mov
pop
jl
jle
sbb
pop
les
dec
into
test
cld
mov
adc
cld
pop
xchg
cmc
jo
lock
push
dec
lods
mov
pop
mov
call
inc
icebp
aaa
xor
mov
and
and
es
pop
mov
dec
movsl
jnp
lret
xchg
enter
fcomps
fistpll
push
cmp
fadds
push
jnp
dec
js
jp
stos
xor
or
pop
cmp
popa
sbb
pop
pop
sahf
add
sub
sbbl
cmp
inc
inc
lcall
xchg
push
sbb
or
pop
inc
pushf
mov
sbb
pop
mov
iret
notb
leave
jge
jae
rcrl
lahf
jle
imul
mov
addl
mov
cli
pop
mov
mov
sahf
push
pop
pop
mov
aad
clc
sbb
fisubrs
popa
and
pop
dec
jg
loopne
lahf
sub
xor
mov
fcompl
pop
negb
nop
fldenv
jp
sahf
push
jge
inc
dec
dec
push
cmpl
fmul
test
or
mov
test
inc
lds
pop
imul
shll
add
mov
fwait
push
mov
jge
sbbb
cmp
dec
cmp
add
mov
pushf
shrb
xchg
mov
inc
dec
jle
fwait
imul
push
fisubl
ss
sarb
push
cmc
ret
xlat
cmp
addb
sub
pushf
xchg
mov
ja
fdivrs
jge
xchg
subl
jl
xchg
adc
dec
sub
fwait
pop
and
xchg
cmpb
sti
outsl
lahf
hlt
lret
repz
aas
addr16
rcr
daa
push
sbb
xor
fbld
cmp
dec
dec
push
rolb
mov
lcall
sbb
adc
fidivrs
iret
outsl
sbb
sti
push
sbb
and
jg
dec
fdivrl
sahf
hlt
xchg
inc
pusha
hlt
scas
data16
pop
movsl
shlb
cmp
xchg
movsb
repnz
add
pop
xor
cmp
mov
pop
sti
cmp
pop
lret
repnz
jnp
popf
hlt
popa
mov
es
inc
aas
cld
loop
jge
dec
stos
cld
jecxz
arpl
push
repnz
inc
pop
add
pop
fidivrs
sbbb
mov
orl
pop
repnz
ret
hlt
mov
in
jmp
push
mov
cmp
or
cltd
sbb
jge
push
jg
mov
aam
lret
cmpl
pop
rolb
mov
lea
mov
mov
loopne
dec
in
cmpsl
lock
fmuls
jne
stos
mov
pop
out
shll
xchg
pop
adcb
fistl
add
cmp
fxch
sbb
mov
xlat
adc
adc
rcrb
cli
pop
jl
outsb
jp
add
stos
fimuls
pop
cmpsl
sbbl
cli
cmp
pop
andl
bound
shl
fdivr
lds
cmp
fstpt
in
xchg
cwtl
sahf
cmp
push
outsl
lahf
mov
int
adc
mov
pop
pusha
popa
mov
dec
add
and
mov
jg
xor
sahf
pop
incl
sti
lahf
mov
test
push
fistpl
cwtl
xchg
outsl
mov
popa
mov
pushf
test
stc
xor
pop
jo
bound
jg
clc
pop
push
or
dec
pop
mov
stc
cld
daa
cmp
pushf
incb
mov
adc
cmp
sti
dec
jnp
mov
push
mov
pop
xor
shl
cmp
mov
mov
addr16
cmp
loop
fwait
pop
aas
cli
imul
mov
adc
inc
adc
pop
cmc
sub
cmp
pop
scas
xchg
jmp
adc
cmp
loope
mov
cmp
xchg
std
popa
les
shrl
test
cld
sub
mov
fadd
xchg
sti
mov
les
mov
pop
and
aad
jl
sbb
and
jns
inc
outsb
fidivrl
pop
cli
push
adc
lahf
mov
stos
push
js
cwtl
sbb
inc
jp
fmuls
pop
mov
fisubl
mov
mov
bound
outsb
fcomps
add
sbb
fimuls
sbb
jl
xlat
add
adc
fneni(8087
cmp
xor
mov
loopne
inc
adc
lcall
fwait
pop
mov
outsb
jnp
scas
cmp
pop
js
inc
jle
push
inc
loope
dec
das
rolb
call
sbb
shrl
popa
mov
lcall
mulb
inc
mov
scas
je
pop
push
jo
add
xchg
cwtl
jp
cmp
pop
dec
sbbl
pusha
pushf
push
jae
inc
pop
inc
cld
hlt
clc
fdivrs
adc
mov
xor
aad
fdivs
scas
push
pop
int
outsl
jae
xor
mov
pop
xchg
pusha
inc
push
repnz
clc
pop
mov
add
adc
and
adc
js
fdivr
mov
jp
out
sbb
inc
push
fwait
sti
data16
mov
xchg
adc
mull
sub
fldt
popa
pushf
sahf
aas
jae
jle
sbb
imul
stc
fwait
jl
lds
and
jge
xchg
std
xor
mov
cmp
fwait
idiv
cmp
fdivrl
or
lcall
js
jle
mov
add
test
fwait
pusha
push
lret
mov
jp
sbb
mov
pop
xor
pushl
ss
jg
xor
push
or
sbb
shrb
sbb
pop
mov
in
sbb
aad
xchg
mov
lahf
jle
mov
or
mov
arpl
sub
dec
cmp
xor
mov
inc
out
popa
call
out
les
cli
xchg
jp
pop
iret
xchg
mov
xor
sbb
pop
out
sarb
mov
pop
pop
jl
lock
jge
add
xchg
cli
pop
gs
add
popa
xchg
dec
js
xor
mov
aas
jbe
mov
xchg
dec
pop
lcall
aas
outsb
int
pop
shrb
pop
mov
dec
push
pushf
cmp
and
fsubl
dec
cmp
cmp
fbld
cmp
mov
ss
jmp
sbbb
ret
pop
ret
repnz
lcall
xchg
mov
cwtl
pushf
cld
rolb
mov
cmp
inc
inc
cmp
idivl
lahf
sbb
fcoml
outsl
dec
lcall
mov
pop
in
adc
cs
lahf
push
pop
xchg
fisttpl
mov
loopne
add
sbbl
out
imull
or
jle
xor
test
mov
pop
mov
pop
dec
and
fldenv
cli
pop
out
pop
cmp
add
mov
mov
mov
pop
mov
mov
sub
push
pop
loopne
sbb
jmp
xor
rcrb
jp
shrb
jl
sbb
mov
outsb
add
mov
inc
pusha
ror
sbb
mov
loope
cmp
xchg
mov
xchg
js
adc
cld
xchg
icebp
inc
mov
loopne
inc
inc
lret
pop
popa
rcr
add
data16
xor
inc
jne
mov
cmpl
inc
lret
loop
jl
or
jb
fwait
mov
lock
xchg
sbb
clc
pop
xchg
cmp
rorb
loopne
cmp
inc
add
aad
jmp
cmp
dec
mov
pop
sbb
cmp
out
adcb
pop
sbb
jbe
inc
push
cmovbe
mov
ss
hlt
fidivl
mov
int3
jnp
push
and
lahf
fildl
adc
cmp
pop
cmp
sarb
sbb
mov
sbb
lcall
adc
dec
xchg
push
mov
fwait
cwtl
testl
jl
dec
mov
rorb
xchg
mov
mov
fwait
ss
fstpt
pop
jo
cwtl
or
or
jge
fidivrl
sarb
pushf
add
ficomps
aas
andl
dec
cmpsl
mov
cld
mov
cmp
dec
xchg
sbb
cmp
push
ficomps
sti
rclb
rcrb
pop
pop
inc
pop
and
pop
add
push
mov
lock
mov
inc
mov
aam
fisubs
cmp
lock
adc
fistps
andb
notl
pushf
and
popf
sti
dec
popa
and
add
add
fdivrs
cmp
mov
out
lahf
pop
mov
cmp
mov
cld
into
dec
mov
push
movsl
rcrb
sbbb
jb
mov
lldt
jp
xchg
movsb
sbb
imul
xor
pop
jecxz
mov
mov
mov
mov
mov
enter
adc
cmp
adc
fdivr
mov
push
mov
cmp
mov
pushf
xlat
cmp
xchg
mov
ss
pop
jns
lcall
sahf
fiadds
popa
mov
mov
fdivrl
popf
ficoms
pusha
dec
repnz
xchg
xchg
cwtl
pop
jp
aad
mov
and
adc
daa
mov
cmp
cwtl
lds
and
xor
adc
dec
inc
adc
jl
rorb
fisttpl
or
rolb
xchg
cmp
mov
pop
push
cmp
sbb
loop
pop
inc
fdivrs
cmp
mov
repz
sbb
sti
adc
pop
push
loopne
lret
jns
mov
ret
incl
xor
dec
jp
mov
movsb
je
push
add
clc
mov
mov
cmp
add
movsl
test
jp
outsl
sbb
cmp
cmp
pop
pop
test
mov
add
xlat
mov
mov
pop
js
add
pusha
mov
pop
jge
sbb
pop
jns
nop
pop
cwtl
clc
and
dec
cltd
push
mov
fdivrs
pop
mov
sbb
jnp
pop
sahf
aad
js
sub
stc
test
stc
pop
pop
call
pop
inc
mov
ds
js
xchg
cmpb
cld
inc
loopne
pop
and
rcrb
mov
xchg
js
jbe
push
andb
mov
lret
xchg
mov
movsb
mov
xchg
shr
jnp
rorw
mov
jle
push
mov
inc
sbb
jl
pop
mov
cmp
cltd
mov
dec
sahf
js
xor
cmpl
xchg
lds
adc
push
loopne
jg
mov
jne
inc
clc
xchg
mov
fistpl
faddp
fmull
ja
inc
mov
mov
mov
and
jle
mov
add
decl
sahf
int3
adc
sbbl
ljmp
loop
outsb
mov
sbb
ds
mov
and
mov
push
adc
stos
js
jle
ficomps
xor
outsl
xchg
sub
xlat
clc
push
sub
cmp
andb
adc
pop
cmp
mov
add
jnp
pop
iret
jl
cmp
sbb
push
fistpl
jle
out
pop
push
add
aaa
push
loop
cmpl
mov
dec
jb
sbb
mov
mov
test
icebp
arpl
xor
mov
cmp
cli
sbb
jmp
fldenv
adc
jl
inc
loopne
pop
fdivrs
aad
add
xchg
mov
cmp
jl
cltd
fidivrs
sub
jg
out
fistpll
xchg
lock
sub
insl
pop
add
jnp
sbb
lea
sbb
mov
icebp
mov
and
add
add
filds
sbb
cwtl
xchg
xor
jp
inc
and
pop
loopne
cmp
fcmove
sub
xchg
mov
mov
jp
cmp
pusha
inc
xchg
aad
jl
xchg
push
sarb
mov
lcall
pop
inc
fildl
sbb
cmp
mov
in
xchg
sarb
xor
pop
xor
fsubrl
adc
mov
imul
sub
sbb
jge
fisttps
rcrb
cmp
movntq
hlt
ficomps
xchg
scas
cmp
adc
cwtl
fistpll
inc
pop
pop
popa
sarb
das
aad
rolb
pop
xor
sahf
je
mov
mov
cmp
repnz
add
mov
jo
sub
xor
je
xchg
push
add
out
push
dec
cmp
pop
or
scas
inc
mov
in
mov
sar
jge
mov
lods
je
jg
je
adc
adcl
leave
push
mov
outsl
cmp
jge
pop
outsb
push
mov
sbb
loop
cli
sahf
mov
mov
sbbl
or
lret
daa
cmp
pushaw
cwtl
jl,pt
mov
pop
inc
xchg
cmp
fisubrl
adc
in
jno
adcl
fidivs
push
es
arpl
arpl
repz
outsl
fists
add
add
sbb
inc
fisubrs
dec
xchg
xchg
lcall
jne
cwtl
fdiv
arpl
inc
lcall
push
cmp
pop
stos
sbb
call
sti
xchg
pop
fbld
out
sub
xchg
fcompl
mov
ret
in
je
dec
fdivr
sbb
pop
sbb
ret
stos
or
insb
pop
cmp
cmp
fwait
sbb
hlt
lahf
pop
jge
and
sbb
cli
mov
jp
cld
cld
fcomps
pop
sbb
pushf
cmp
jo
xor
cli
adc
jnp
jno
outsl
inc
scas
test
pop
dec
neg
add
outsb
aad
out
stos
cmp
mov
add
sub
pop
pusha
sti
pushf
mov
repz
jp
xor
sbb
mov
push
cmp
rol
pusha
mov
jb
dec
jnp
jl
inc
filds
js
inc
adc
pop
mov
pop
inc
cmp
sti
cmp
xchg
mov
repz
fldt
sbb
sbb
popf
lahf
xchg
mov
push
mov
popa
cmp
scas
jns
outsl
inc
les
add
jl
lea
mov
add
cmp
mov
dec
mov
adc
mov
jle
sbb
stos
dec
xor
cmpsb
imul
mov
mov
ficomps
dec
test
mov
or
cld
in
loopne
fwait
popa
mov
cmp
fistpl
andb
dec
sbb
sahf
sub
sbbl
std
vmovq
adc
inc
hlt
mov
cltd
stc
stos
pop
pop
add
pop
sbb
pop
push
stc
push
and
ret
or
scas
push
lret
adc
xchg
jge
fidivrs
add
bndldx
sbbb
mov
mov
jg
scas
stos
mov
pop
inc
mov
addr16
test
pop
sti
pop
mov
call
adc
clc
sbb
cmp
mov
push
and
jno
dec
aas
pushf
mov
pop
dec
sbb
jmp
push
jp
fstpt
lret
inc
andl
cmp
jge
xchg
hlt
cli
aad
sub
data16
cmp
std
mov
push
stos
flds
pop
pop
std
add
dec
cmp
sarb
pusha
dec
bound
cwtl
cmpsb
shrl
sbb
leave
push
fisttpl
fistpll
or
push
in
fnstcw
movsb
push
incl
pop
arpl
push
inc
inc
ss
mov
int3
mov
sahf
sbb
adc
dec
aam
int
sub
in
adc
cmp
cmp
pop
add
sbb
fidivrs
add
mov
pop
mov
sbb
pop
jnp
jle
fsub
mov
xor
and
cld
pop
sbb
lahf
sbb
sbb
jnp
cmp
mov
shll
jge
xchg
cltd
jmp
es
mov
pop
pop
cmpsl
ja
fnstsw
loope
je
shll
jg
ja
rcrl
popf
mov
aaa
fwait
js
dec
dec
in
ret
pop
jp
lret
sub
out
mov
fstpt
pop
jle
pop
sub
xchg
arpl
addb
sahf
scas
sub
cmp
sbb
lahf
loope
loopne
jge
jnp
push
int3
mov
sahf
cmp
mov
pop
jg
add
mov
adc
push
das
fwait
xchg
inc
fstpl
sarl
inc
or
jmp
xor
jnp
leave
movhps
pop
test
add
cmp
cwtl
mov
fidivs
xchg
adc
cmpb
pop
mov
pop
jp
cmp
mov
jge
xor
in
fistl
adc
jp
push
cmp
sbb
leave
pop
cld
mov
pop
and
jnp
je
cwtl
sti
ss
iret
jl
fdiv
jbe
add
sahf
out
lret
fisubs
push
inc
xorb
cmp
cmp
fdivrs
and
ss
inc
clc
cld
pop
pop
push
data16
outsl
mov
aad
or
jle
mov
push
popa
in
pop
or
and
jnp
push
stc
push
rcrb
loope
test
js
inc
pop
js
jb
mov
mov
js
xor
dec
add
cmp
pop
push
lock
xorb
lock
adc
pop
jg
fwait
add
xchg
pop
sbb
adc
jbe
inc
loopne
icebp
mov
faddl
sbb
pop
cwtl
ds
cmp
scas
jl
xorb
popa
scas
sahf
push
pop
dec
lahf
sbb
sbb
aaa
fdivrs
sarl
xchg
cwtl
fildl
jle
dec
push
pop
sub
cmp
mov
and
das
ds
fcmovnu
jle
in
ficomps
pop
lcall
out
sbb
fbld
into
shl
cmp
xchg
pop
cmpl
enter
pop
jno
iret
rcrl
pop
pop
les
stos
mov
cmp
jle
pop
sarb
mov
mov
pop
out
dec
daa
pusha
shl
mov
cwtl
mov
dec
aam
fcmovnb
cmp
sar
shll
xchg
les
pop
push
mov
fwait
dec
aam
cld
pop
inc
in
sbb
jg
dec
xchg
sbb
stos
loopne
mov
mov
mov
mov
and
data16
add
pusha
inc
sbb
shll
mov
fwait
xchg
xor
xor
fistps
mov
cli
cld
pop
jl
pushf
roll
rcrb
sub
clc
sbb
cmpsb
inc
or
push
xchg
add
xchg
insb
adc
out
sbb
in
jae
adc
shlb
pop
shlb
cmpb
cmp
fdivs
pop
xor
dec
xor
cmp
jl
pop
or
mov
cmp
mov
pop
pusha
sbb
xor
xor
sub
lcall
hlt
cmp
bound
sbb
inc
mov
pop
fnstsw
popa
sbb
dec
mov
inc
bound
jns
adc
add
pcmpeqb
sub
lret
cmpb
jp
push
lahf
push
mov
dec
pop
mov
cmp
fcompl
mov
inc
mov
adc
mov
cwtl
and
jne
xchg
pop
sbb
push
mov
dec
xchg
pop
sbb
mov
cmp
cmp
mov
cmp
int
mov
fdivrs
push
jle
inc
rcr
push
lcall
jp
pop
mov
pop
and
sahf
jle
sbb
js
fisubl
adc
mov
test
jecxz
inc
ss
repz
lahf
mov
cltd
cmp
in
xchg
sub
ljmp
xchg
jge
jnp
pop
push
cmp
mov
cmp
sti
xchg
fwait
xor
ret
hlt
aad
mov
mov
mov
inc
mov
pop
dec
sahf
aas
sahf
fimuls
and
addl
xchg
and
jnp
rcrb
pop
push
mov
cmp
dec
jp
mov
enter
dec
mov
mov
rclb
inc
mov
jnp
push
jge
sbbl
inc
adcl
int3
mov
leave
repz
ss
mov
sub
pop
lods
mov
jb
inc
repnz
ficompl
adc
jl
stos
mov
fistpl
ds
cwtl
pusha
add
adc
push
sub
data16
push
mov
rorb
mov
sahf
xor
mov
xlat
lcall
dec
scas
push
add
ss
inc
mov
mov
xchg
sub
fistpl
popa
xchg
mov
les
push
adc
push
sbb
adc
jl
out
aas
ret
dec
pop
mov
pop
fmuls
sbb
pop
lahf
rclb
inc
nop
cmpl
sbb
and
subb
sahf
cmp
lea
sub
push
cwtl
inc
or
push
and
cmp
cmc
jl
hlt
inc
xchg
push
je
mov
jg
xchg
mov
pop
pop
mov
fmuls
fidivrl
sbb
loopne
jbe
mov
outsb
lret
push
adc
xor
pushf
fwait
loopne
sahf
sub
push
cld
pop
mov
cmp
mov
inc
jae
sti
aas
adc
shll
cmpsl
bound
jg
into
test
fwait
jp
pop
add
dec
cmp
sbb
mov
xor
rolb
inc
loop
sahf
xor
sarl
add
jb
sbb
push
sti
or
iret
pop
inc
push
btl
cld
pop
lods
sbb
pop
inc
les
jnp
mov
dec
jae
lahf
mov
jns
inc
mov
xchg
jl
insl
pop
mov
lcall
roll
hlt
cmp
clc
pop
inc
inc
dec
sti
jp
jle
push
jae
mov
js
jle
add
cmp
shlb
cli
mov
or
fsubs
fwait
pushf
ss
mov
mov
popa
cmp
inc
adc
scas
jp
stc
xlat
dec
test
push
inc
cmp
adc
stos
fstps
mov
fdivrp
mov
ficompl
jl
mov
pop
sti
or
inc
mov
rorl
andl
xchg
mov
nop
cmp
inc
mov
jp
sahf
and
push
loopne
or
fidivrl
iret
popa
pop
pushf
rclb
adc
mov
xor
push
mov
xchg
insl
popa
pop
jp
fwait
mov
pop
ljmp
ret
or
sbb
push
mov
cmp
pop
scas
nop
mov
adc
jp
xor
int
adc
mov
fstpt
shlb
fmull
sub
mov
lea
pop
sbb
insb
mov
push
cmc
pop
cmp
mov
cmp
pop
push
loopne
pop
inc
push
dec
jmp
dec
jp
adc
inc
outsb
add
sti
pop
int3
fisttps
and
cmp
bnd
cld
cmp
and
lcall
js
sub
mov
adc
dec
mov
sbb
fldl
loopne
jo
in
js
dec
xchg
mov
pop
int3
out
xor
rcrl
inc
pop
adc
pop
cmp
loope
push
mov
fdivrs
jl
loopne
cmp
sahf
mov
cmc
jge
pushf
mov
pop
mov
fcoms
xor
cmp
pop
push
inc
lds
inc
shl
addb
pop
popf
filds
lcall
mov
mov
jp
lahf
jne
mov
clc
pop
adc
mov
dec
aas
pop
pusha
call
pushf
popa
xor
pushf
inc
jge
jnp
mov
mov
js
jp
jp
sahf
push
and
addb
ret
iret
mov
mov
loopne
das
adc
sahf
pop
xchg
inc
jge
cwtl
inc
sub
cmp
js
sbb
stos
lods
clc
mov
inc
std
xchg
cmp
shl
out
andl
aas
push
mov
lea
pushf
inc
repz
mov
inc
mov
loopne
aas
xor
mov
jl
fbld
jp
mov
leave
or
sbb
mov
jle
inc
je
je
fidivrl
popa
pusha
das
je
inc
jo
sti
decl
inc
inc
jns
cmp
push
adc
cmp
ficoml
cmp
inc
fidivrs
jne
test
cltd
pop
repz
mov
outsl
cmp
cmp
pop
popa
mov
inc
aad
pop
jae
lret
pop
pop
jle
add
jns
mov
adc
aas
js
stos
and
xchg
lcall
push
sahf
mov
mov
js
cli
loopne
fwait
dec
pop
hlt
fcompl
push
adc
jae
test
pop
pop
mov
cwtl
sub
cmp
push
ficomps
push
and
inc
faddl
push
mov
jbe
inc
fdivrs
dec
cmpsb
cmp
mov
mov
popa
mov
jp
jl
lret
clc
fadd
gs
pop
cld
lds
lahf
mov
cmp
jg
xor
cmp
jge
cmp
mov
or
inc
sbb
sub
fsub
xchg
sbb
adc
push
into
cmp
cmp
mov
cmc
cvtdq2ps
xchg
sbb
push
or
pop
arpl
repnz
jnp
pop
pop
mov
repz
cmp
mov
lret
cmp
pop
stos
pop
js
add
xchg
xor
push
pop
lahf
aas
mov
mov
fistl
pop
out
out
pop
fidivs
out
in
pop
inc
sti
test
pushf
fcomps
cltd
std
inc
xchg
ljmp
mov
cmpsb
mov
mov
pop
sbb
jb
inc
stos
push
cmp
sbb
mov
cmp
mov
mov
repz
xor
inc
and
sbb
js
xchg
cmp
adc
sub
push
lahf
jp
pop
sbb
pushf
outsl
xor
pop
pop
fcompl
adc
mov
mov
sahf
pusha
mov
and
rclb
xor
pop
pop
inc
mov
push
sub
xchg
jp
pushf
fmulp
sub
jge
sub
pop
mov
cmp
inc
lret
loopne
repnz
sti
cmp
sbb
mov
pop
rcll
movsb
mov
clc
mov
aad
lcall
daa
sub
addl
inc
push
inc
iret
popa
jp
jp
sar
mov
fidivl
push
fwait
mov
lret
je
dec
ss
hlt
inc
mov
loopne
mov
hlt
cmp
mov
pop
sti
xchg
jl
mov
insl
mov
sarb
inc
out
jge
fsubrl
test
aaa
cmp
mov
sub
pusha
lahf
out
faddl
mov
lock
fisttpll
pop
and
inc
sbb
call
cmp
fwait
ds
jge
fcompl
push
mov
and
cli
inc
lcall
or
mov
sbb
cmp
pusha
mov
repz
cwtl
xchg
mov
inc
dec
pop
sbb
xchg
mov
pop
cltd
jle
mov
repz
jl
int
cmp
stc
sarb
mov
cmp
pop
pop
scas
negl
lcall
add
mov
mov
out
pop
call
jle
mov
fistpl
hlt
mov
popa
sbb
aad
jp
cmp
out
scas
hlt
mov
mov
lock
loopne
stc
test
mov
inc
add
inc
mov
mov
ret
adc
dec
inc
push
mov
sarb
ljmp
movsl
fcompl
sti
pop
sbb
sbb
xchg
imul
je
repnz
sbb
inc
dec
pop
int3
aaa
adc
pop
aas
test
dec
call
lcall
xchg
jge
jle
das
fwait
inc
std
pop
mov
adc
cmpsb
xor
jp
ds
ficoms
fstpt
pushf
sarb
or
inc
addl
ds
mov
cli
mov
test
jle
ficompl
sbb
add
ret
xor
pop
pushf
sbb
pop
mov
popa
fwait
mov
mov
lahf
jo
or
dec
push
andl
and
fdivs
mov
loopne
sbb
sub
and
or
orb
movsl
sbb
cmpl
rolb
popf
pop
ljmp
sub
pop
sbb
mov
lds
adc
inc
add
dec
mov
sbb
lods
jg
stos
fimull
rcrb
mov
sub
frndint
mov
jge
pop
adc
adc
popa
out
inc
inc
clc
aas
pushf
pop
pop
push
sbb
fstpt
pop
and
inc
filds
pop
sub
data16
jnp
pop
mov
sub
and
mov
xchg
sbb
cmp
mov
out
inc
xor
cmp
pop
mov
addr16
gs
test
pop
outsb
out
mov
dec
or
sbb
jp
inc
xor
inc
mov
inc
cmp
fcomip
pusha
mov
inc
pop
cwtl
js
cmp
iret
pusha
push
cmp
lret
jle
and
cld
xchg
mov
adc
out
int
push
sti
dec
andl
sahf
dec
sbb
mov
pop
mov
pop
fists
pop
sbb
mov
mov
push
pop
jg
popa
mov
dec
cmp
inc
roll
mov
pop
minps
cwtl
mov
push
int3
mov
inc
inc
clc
push
cld
jnp
or
inc
pop
pop
loopne
pushf
je
jl
xchg
in
ficomps
fdivrs
repnz
pop
cmp
jb
mov
lahf
and
loopne
sbb
stos
push
inc
jge
sub
xor
sbb
mov
pop
pop
in
push
pop
push
jp
sbb
rorl
add
xlat
mov
pop
push
lds
mov
rorl
pop
lds
push
cmp
dec
fwait
mov
pop
cwtl
cld
jbe
stos
mov
push
scas
adcb
aad
and
cwtl
pop
ds
ret
dec
dec
cli
mov
cmp
adc
xchg
mov
mov
add
dec
lds
pop
pop
sahf
test
jnp
fisttpll
add
sbb
loop
jl
ljmp
js
sub
push
arpl
clc
cmc
pop
sbb
clc
je
sub
mov
inc
jno
dec
popa
fistpll
paddd
outsb
mov
lds
jp
mov
cmp
mov
ljmp
push
scas
dec
lock
cwtl
idiv
cmp
jle
xchg
aas
cmp
or
jnp
aad
jp
sub
in
cli
cmpsl
inc
jmp
inc
lahf
mov
mov
mov
iret
mov
push
mov
add
sti
loopne
popa
push
fidivl
pop
lahf
inc
jge
and
pop
hlt
pop
adc
addr16
orb
inc
cmp
cmp
pop
mov
stc
mov
sbb
push
pop
lret
lds
cli
mov
fiaddl
xor
inc
into
or
mov
pop
ja
js
jge
les
xor
add
mov
xor
repz
outsl
jg
arpl
jle
pop
addl
lds
sub
loop
mov
fmul
ret
or
mov
cmp
cwtl
pop
jge
push
jns
and
add
dec
fiaddl
stos
sub
jle
loop
jnp
cmp
cwtl
neg
and
je
xchg
and
mov
adc
cmp
xchg
pop
lock
dec
lods
mov
cmp
sbb
adc
pop
cwtl
adc
pop
sub
sbbl
jmp
ret
dec
xor
xchg
clc
ficomps
cli
cmpl
test
cmp
fcompl
adc
js
ficompl
mov
cli
lcall
scas
push
sarl
xchg
cmp
sti
outsl
fistpll
aaa
sbb
add
dec
std
cmp
push
lahf
mov
int
jnp
imul
jge
add
and
in
outsl
push
add
pop
cwtl
pop
pop
add
insl
jne
int
test
aas
je
cmp
fidivrl
pop
fwait
lcall
mov
sub
sbbl
add
sti
jg
sahf
pushf
push
clc
jge
icebp
mov
lods
rolb
xchg
in
ds
js
jg
mov
inc
xor
mov
fs
rorb
inc
mov
out
xchg
rcr
mov
or
sbb
cmp
push
sub
je
mov
repz
mov
call
mov
cltd
cmp
lret
push
fdivr
inc
sbb
negl
pop
imul
inc
cmp
mov
imul
pop
lret
pushf
loopne
pop
inc
sarl
lods
fmull
inc
test
repnz
popa
mov
int3
lret
pop
push
jne
cmpsl
mov
cmp
test
mov
inc
scas
aas
push
mov
dec
rclb
lcall
jge
clc
sti
dec
sar
jnp
sub
jg
cs
mov
sahf
jmp
fwait
cmp
lahf
jg
dec
pop
mov
stos
push
cmp
jb
pop
mov
loopne
mov
mov
and
cmpsb
add
stc
cmp
jno
nop
cmp
lahf
jl
jmp
and
pop
xchg
mov
xor
mov
pop
inc
movsl
sarb
jo
out
cld
lret
mov
nop
hlt
cmpb
call
pop
mov
inc
pop
data16
sbb
test
adc
sbbb
pop
sub
out
andl
cwtl
rol
fiadds
adcb
mov
push
out
sahf
jp
dec
popa
inc
call
add
mov
cmp
xchg
repnz
cld
roll
cli
push
add
jge
enter
cmp
pop
or
cmp
sub
lret
mov
xchg
inc
pop
nopl
jnp
loopne
fidivs
fwait
js
jns
push
pop
fcomps
cmp
jo
cmp
mov
mov
clc
adc
repnz
mov
dec
int
jge
push
rcrb
pop
pushf
fcmovb
xchg
xor
in
scas
add
xlat
int3
ss
inc
loopne
mov
sbb
mov
pop
std
insl
into
lods
xchg
pop
push
inc
cmp
lret
dec
adc
dec
jmp
inc
shll
cs
mov
mov
cld
scas
mov
and
sti
jge
loopne
lea
inc
mov
js
mov
xchg
mov
or
negb
fisubs
dec
cmpb
in
outsb
inc
xorb
mov
int
xchg
ret
test
jo
bound
inc
ss
in
inc
mov
lahf
and
fisubrs
pop
cmp
dec
test
fcompl
sahf
xor
cld
mov
test
xchg
fdivrs
dec
div
fsubl
xchg
mov
pusha
jg
inc
cmp
roll
and
mov
inc
fsubl
shl
mov
rcrb
popa
clc
rolb
inc
push
mov
jo
in
pop
lret
das
je
push
lahf
shr
imul
pop
addr16
sub
ss
jl
mov
repnz
sarb
clc
test
mov
pusha
push
mov
call
mov
xchg
repnz
repz
pop
rolb
pop
fadds
fdivrl
pop
mov
fidivrs
fcomip
in
mov
fdivrl
sbb
out
mov
int
test
xchg
pop
mov
pop
cmc
cmp
mov
ret
lahf
in
jl
xchg
cmp
les
sbb
pop
mov
jb,pn
test
cli
add
js
lcall
and
test
loope
fwait
mov
jg
pop
sbb
in
pop
lcall
add
stos
inc
cmpb
pop
outsb
fst
addr16
jno
rolb
dec
lds
jb
jnp
cmp
jp
jp
xchg
xor
fwait
scas
movsl
test
int
add
outsl
or
mov
jmp
pop
aas
jge
in
jl
lea
xchg
mov
cmpsl
mov
sahf
sbbb
inc
cmp
jp
lds
loopne
out
lea
sbb
mov
jp
and
in
loope
mov
mov
sarb
ficoms
xor
pop
mov
dec
cld
stos
clc
sbb
sub
adc
shlb
mov
cmpl
je
jne
pushl
and
adcb
jle
lcall
loopne
jnp
pushl
stos
push
inc
pop
adc
pop
sahf
xor
outsb
popf
push
inc
cmpl
mov
pop
loopne
mov
jge
mov
fsts
pop
mov
cmp
cmp
or
sub
outsl
stc
pop
xchg
xor
adc
sbb
xor
inc
cltd
dec
test
mov
lahf
mov
call
sti
ret
jno
iret
fimuls
call
mov
cmp
lcall
roll
add
sahf
out
lret
inc
shrl
dec
and
sub
test
push
ljmp
push
inc
fcmovnb
dec
mov
xor
jg
and
sub
fadd
xchg
fwait
loope
and
mov
fcom
pop
jle
jl
dec
xor
lcall
ss
out
sub
adc
fistpl
pop
js
pop
push
rcrl
repnz
xchg
lahf
jp
jae
sahf
xchg
aas
and
dec
js
fidivrl
mov
popa
pop
int
mov
stos
xor
push
jl
clc
adcb
mov
mov
pop
cmp
adc
mov
aas
iret
adc
cwtl
mov
jnp
ret
pop
ljmp
mov
cmp
jnp
inc
adc
push
sti
mov
aas
adc
mov
and
mov
mov
fidivrs
das
cmp
mov
and
mov
jge
mov
js
sti
adc
xor
cmp
sub
pusha
sbb
jle
in
orb
cmp
mov
and
aaa
jge
jo
jbe
sbb
xchg
inc
mov
push
sbb
out
push
sub
outsb
or
add
mov
int
pop
mov
andb
mov
cmp
add
fistpll
data16
orb
sbb
xor
lock
xorl
inc
cmc
shll
sti
adc
mov
pusha
aas
jae
popa
cmp
jp
fdiv
sbb
leave
js
cmp
mov
mov
fwait
iret
pop
fdivr
enter
cwtl
aas
push
rcr
and
push
sarb
xor
pushf
dec
xor
js
add
sbb
pop
cli
cmp
popa
jle
cmp
fisubrs
adc
js
cmp
cmp
fmulp
jge
add
jle
cmp
adc
icebp
cwtl
cmp
inc
inc
xchg
pushf
cwtl
mov
decl
ds
sahf
sbb
int
add
pusha
inc
sub
pop
cmp
push
and
lcall
jl
fsub
sahf
xchg
inc
fwait
cli
mov
ficomps
clc
cmp
jb
pop
and
stos
sbb
pop
sbb
in
sub
out
pop
scas
nop
mov
inc
pop
sbb
sahf
daa
xor
dec
cmp
mov
lods
pop
daa
sub
xor
mov
or
xchg
mov
xlat
pop
test
push
and
sbb
dec
inc
cmp
add
jmp
mov
fsubs
mov
pushf
sbb
rclb
inc
jl
cld
mov
pop
hlt
pop
push
or
lahf
ss
outsl
ds
mov
rcr
negb
push
scas
and
lret
insb
sbb
js
jae
add
mov
outsl
fnstsw
sbb
out
cmpsl
lds
dec
sbb
jp
out
push
mov
jnp
js
fiaddl
lds
cmpl
and
mov
fcoml
mov
xchg
sub
adc
pop
js
xor
mov
aas
push
push
pop
cmpsb
gs
pop
lret
mov
pop
sti
cmp
and
adc
xor
out
mov
push
mov
fdiv
lahf
jbe
sbb
xlat
mov
pop
mov
push
in
push
mov
ret
pop
and
fisubrl
sub
imul
aam
rcrb
mov
sbb
std
or
pop
lods
xchg
pop
adc
xor
into
jp
out
or
mov
mov
cwtl
sti
inc
or
lods
xchg
js
ja
fsubl
mov
jbe
cwtl
std
sbb
lahf
cmpsl
mov
fisttps
sub
nop
mov
dec
xchg
ret
lcall
out
mov
add
jl
rcrl
inc
lcall
pop
add
shl
dec
into
mov
sbbl
fildl
jg
pop
dec
outsb
cli
sbb
jg
adc
push
add
cwtl
dec
push
push
push
push
pop
repz
jmp
popa
loop
cmpsl
jl
xchg
sub
sbb
jmp
lcall
out
adc
ss
fs
mov
sbb
jg
ss
bound
shll
sti
std
adc
and
mov
mov
aaa
int3
inc
sahf
stos
cmp
pop
in
sbb
imul
movsl
jmp
xor
fs
aaa
jmp
push
mov
lret
fadds
lea
pop
fs
cmp
mov
sbb
arpl
js
pop
pushf
pushf
js
pop
fisubl
sbb
jne
in
out
aaa
negl
mov
cmc
cmp
fs
lds
lcall
jle
inc
dec
and
sbb
and
mov
dec
mov
arpl
cmp
ja
sub
push
push
pop
sbb
adc
mov
jmp
rcr
jecxz
pop
xchg
jbe
mov
pop
push
sahf
sub
cmp
movsb
int3
cmp
test
push
clc
jae
aaa
daa
lods
inc
inc
in
rol
mov
sbb
mov
and
dec
loop
fdivr
clc
fadds
push
mov
enter
cmpsb
lds
jmp
push
test
popa
mov
mov
aad
mov
neg
insl
inc
push
and
ja
stc
adc
lds
push
cmp
icebp
mov
xchg
addr16
and
jae
das
mov
jmp
xor
mov
cli
and
jb
jl
stc
jns
test
and
push
rorl
ja
movsb
popf
fcmovb
inc
mov
lcall
cld
dec
inc
and
sti
orb
mov
rcrl
mov
fbstp
mov
test
jg
out
dec
push
and
xor
sub
and
mov
outsb
add
pop
fbld
adc
test
fadd
sub
cli
mov
and
movsl
sbbl
or
sub
pop
pop
out
adc
xchg
jle
nop
lea
dec
test
cli
out
enter
lds
jnp
out
test
adc
pop
test
scas
add
xor
xorb
cli
cmp
adc
clc
pop
mov
add
iret
sbb
cmp
fidivs
adc
add
xor
xlat
pop
pushf
arpl
inc
mov
test
push
pusha
jl
mov
loopne
and
in
lcall
out
sub
clc
sti
inc
and
pop
les
mov
mov
adc
inc
or
xchg
mov
outsl
or
rolb
pop
lcall
mov
mov
xor
cmp
cmp
rclb
jl
cld
mov
lea
sti
and
scas
dec
mov
jg
pushf
push
pop
lahf
sub
ss
fcoms
insb
mov
cmp
cld
cmp
jg
lcall
mov
push
adc
adc
xchg
inc
lahf
sbb
sbb
lcall
and
pop
jg
stc
lea
cltd
cmc
or
cmc
and
sbb
dec
iret
negl
fnsave
push
xchg
leave
aaa
aaa
ja
pop
sub
lods
dec
cmp
cmp
add
push
push
jno
into
filds
pop
pop
dec
adc
sbb
xchg
or
fistps
add
dec
in
fadds
jo
call
jg
das
mov
cmp
fwait
sbb
sahf
repnz
pop
pop
inc
rcr
loopne
pop
mov
arpl
xchg
cli
pop
xchg
mov
insl
bound
es
xor
pusha
sbbb
sarl
fcompl
xor
pop
lcall
pusha
movsb
jae
fdivrs
xchg
sbb
aad
mov
sahf
mov
jp
mov
pop
cwtl
lret
xlat
frstor
xor
sti
pusha
jbe
pop
lds
xchg
push
loopne
sbb
test
sarb
sahf
jl
xchg
or
jg
sbb
sbb
stos
es
sub
sbbb
les
mov
mov
aas
sub
sbb
cmp
or
cmp
adc
outsb
jle
cmp
stc
ret
dec
cmp
std
jp
fisubrl
pop
popa
inc
loopne
sub
dec
rorl
inc
sub
jecxz
or
fsubrs
orb
rcrb
cwtl
ds
push
jmp
inc
dec
xchg
add
mov
jp
adc
fs
jle
mov
jnp
pop
les
insb
inc
cmp
cmp
dec
cwtl
ficompl
sbb
mov
aas
xchg
cltd
jmp
adc
pop
popa
loop
xor
fcompl
pushf
fisubl
int
xor
cmp
clc
sbb
inc
and
pop
mov
mov
fstpt
std
push
mov
sbb
dec
pop
clc
sub
loopne
data16
mov
cwtl
mov
push
sbb
jle
pop
lcall
sti
pop
fcomps
bound
inc
pushl
adc
cmpl
lahf
add
call
xor
push
sub
stos
and
mov
je
mov
mov
push
sub
cmp
repnz
push
and
dec
fs
push
sbb
jecxz
jp
mov
fcompl
mov
das
sbb
cmp
lcall
ficompl
jge
sbb
inc
das
inc
ficomps
shlb
mov
mov
cld
jg
movsl
js
stos
das
into
inc
loopne
sti
sbb
sahf
cld
add
or
inc
out
lahf
or
mov
sar
sbb
dec
mov
cmp
pop
adc
pop
ret
mov
xor
loop
cmp
sar
jg
xor
sbb
cmp
fwait
sti
jo
sub
lcall
mov
pop
cld
fisttpll
sbbb
cwtl
lcall
dec
popf
xchg
lahf
mov
cli
andb
xor
addr16
int3
cwtl
loopne
mov
mov
push
xchg
xchg
pop
adc
and
dec
dec
mov
cmp
xorb
pop
popa
or
add
fcomps
mov
cmp
and
and
repnz
sbb
add
repz
pop
cmp
cwtl
fwait
call
and
mov
adcl
fdivr
inc
adc
clc
cmp
int
cmp
pusha
mov
adc
cmp
xchg
repnz
mov
subb
jle
pop
and
cmc
mov
push
jns
loope
mov
jge
inc
mov
pop
cmp
mov
js
dec
cmp
cwtl
out
adc
adc
inc
xorl
jnp
xor
mov
mov
ret
cmp
inc
sbb
cwtl
lds
in
cmc
int
jge
cld
pop
cmp
mov
cli
fwait
sbb
loopne
sbb
push
inc
and
xchg
cli
into
dec
sbb
add
or
sarb
mov
pop
mov
pop
stos
xchg
mov
sbb
jb
jp
pop
cmp
jnp
pop
pop
stc
add
sub
mov
xchg
clc
cwtl
pusha
xchg
iret
fiadds
fdivrs
xchg
pop
movsb
mov
jp
mov
negl
jle
jp
xor
sbb
xor
pop
cwtl
pop
mov
cmp
cmc
mov
pop
pop
aas
inc
into
fistps
fdivrs
cmp
pop
cwtl
xor
add
sub
push
jl
mov
push
pop
cmp
adc
cmp
mov
and
cmp
shlb
jg
pop
mov
outsl
cmc
mov
pop
jle
imul
pop
sbb
mov
cmp
rcrb
jg
into
pusha
sahf
inc
mov
pop
fcompl
cmp
pop
jp
fidivrs
imul
je
mov
jl
stos
fiadds
pop
push
insl
cmp
insl
cmp
and
adc
xchg
and
adcl
div
mov
dec
adc
outsb
jmp
jns
xchg
pop
add
fidivl
mov
xchg
mov
jnp
pushf
mov
rclb
mov
pop
push
cmp
sti
add
sub
stc
sahf
fistpll
lahf
ret
cmp
imul
pusha
pop
mov
and
xor
pop
sti
aas
inc
mov
sarb
dec
js
lods
bsf
cmp
jg
adc
mov
cmp
inc
out
and
add
cmp
rclb
shlb
fistpl
cs
jge
xchg
jp
pop
xorb
mull
adc
int3
sti
mov
mov
xchg
je
fwait
cmp
mov
and
cmp
notl
aas
loopne
cs
daa
or
pop
add
adcb
dec
jle
mov
add
mov
mov
fildll
out
sti
sahf
in
ds
adc
mov
jmp
stos
adc
jecxz
pop
mov
std
js
xchg
cmc
bound
jecxz
xchg
jo
sub
and
mov
fisttps
in
lcall
cmp
adc
mov
cmp
fildl
cmpsb
push
push
jp
mov
adc
int3
and
out
repz
fwait
push
fbld
shll
int3
mov
ljmp
jle
fisubl
sti
jo
pop
pop
xor
mov
sti
mov
push
lahf
lcall
out
xchg
inc
movsb
mov
shrb
push
aad
and
pusha
xrelease
mov
xor
inc
outsb
fistpl
pop
jnp
pop
daa
sbb
mov
pop
pop
pop
fists
mov
adc
inc
outsl
js
fidivrs
inc
lock
dec
mov
add
pop
pop
ret
rorb
dec
ret
pop
clc
lahf
gs
cld
mov
pop
addr16
inc
mov
mov
pop
outsb
fcomps
pop
jae
js
xchg
aas
pop
pushf
sti
lret
in
jnp
push
jns
inc
push
pushf
shlb
pop
lret
loop
loop
push
xchg
pop
cmp
push
adc
pop
icebp
pop
push
mov
cmp
leave
and
jp
outsb
xor
mov
ret
ret
nop
pop
jmp
cmp
incb
mov
dec
fwait
mov
sbb
xchg
jo
pusha
mov
jl
arpl
icebp
add
loop
loopne
xor
pusha
inc
pop
fcomps
mov
pop
incb
cwtl
cmp
pop
xchg
mov
mov
mov
cmp
in
shrl
adcl
pop
cld
test
push
cmp
mov
xor
push
dec
xchg
and
test
clc
xchg
pop
push
jge
pop
call
scas
push
int3
and
mov
cli
sub
out
dec
ret
add
jns
fwait
and
pop
adc
jecxz
xchg
push
data16
addl
test
hlt
xor
mov
mov
cmpsb
fisttps
loopne
jl
ficoml
cmp
inc
enter
and
inc
jns
aas
mov
add
inc
xchg
pop
pop
fnstenv
xchg
pushf
sarl
sbb
jg
sub
fdivr
fisubl
jle
jle
lcall
stos
cmp
pop
jl
cmpl
rcr
mov
js
mov
mull
push
fstpt
cmp
add
rcl
inc
je
dec
push
mov
xchg
pop
mov
shl
cmp
test
cli
jb
pop
aas
jp
pop
cltd
lcall
das
hlt
cmc
sahf
test
push
jp
repz
cmp
pop
jg
mov
cmp
pushf
sub
sahf
jns
les
mov
add
loopne
scas
push
xor
push
mov
lcall
int3
cli
dec
test
pop
mov
xchg
lcall
ficomps
mov
push
push
loopne
dec
stc
negb
pop
lods
adc
test
pop
fistpll
pusha
jp
cmp
jge
out
out
inc
add
xor
cmp
cld
sub
add
pop
orb
add
mov
pop
test
decl
push
dec
lahf
sbb
inc
cmp
jge
fistpll
sarb
iret
xorb
pop
lcall
cmp
cli
ret
pusha
aam
push
lahf
inc
cs
lcall
dec
or
sti
jl
rclb
cmp
cmc
inc
cs
sbb
lds
sub
pop
pushf
lock
leave
aaa
and
sbb
subl
hlt
les
jb
pusha
fcompl
sbb
xor
push
addl
sub
mov
push
mov
jo
fimull
inc
clc
xchg
dec
ja
movsb
js
jl
fists
aas
pop
cmp
push
mov
pop
dec
icebp
cmp
subl
into
push
sbbl
mov
and
imull
pop
pop
cmp
pushf
mov
mov
sbb
fmull
lds
sbb
push
movl
pop
fcoms
outsl
cmp
xchg
adc
dec
in
lcall
pop
jb
rolb
add
fcompl
jp
cmpb
mov
fs
jl
and
inc
mov
adc
cwtl
fcmovnbe
scas
sti
je
xor
cmp
jle
pop
in
idivb
fstps
mov
cli
aas
dec
insl
push
cld
test
bound
sub
ss
mov
lcall
js
cld
fistps
jl
jecxz
ficomps
xchg
icebp
inc
pusha
jg
repz
cmp
sbb
fmuls
inc
xchg
pop
mov
add
and
aaa
in
fdivrl
stos
insb
sbb
xchg
push
ficoml
loopne
pusha
rolb
mov
clc
dec
jle
das
lret
js
inc
push
nop
pop
stos
lds
pop
fistpll
and
lcall
xor
mov
jle
mov
jle
mov
cld
loop
xchg
jg
decl
cmp
add
xor
das
in
adc
stos
push
jp
mov
rorl
pop
aaa
lcall
decl
clc
cmc
cmp
pusha
mov
pop
inc
inc
popa
mov
cmp
shl
mov
leave
jp
cmp
cmpsb
pop
mov
mov
rclb
fwait
lahf
cmp
bound
std
clc
inc
mov
shlb
ret
xchg
cli
cld
pushf
mov
mov
push
cwtl
mov
in
aaa
push
cmpsb
xor
pop
push
cwtl
pop
movsb
dec
clc
mov
cld
xchg
inc
int3
js
aas
mov
andl
mov
pop
lcall
sub
cmp
jp
popa
cld
js
sub
pop
cli
jg
aaa
mov
fcomps
ficomps
es
adc
mov
cmp
dec
lcall
pop
sub
push
sarb
xchg
cmp
cmp
popa
mov
pop
pop
cmp
dec
xor
or
adc
inc
dec
aaa
je
rclb
jns
push
cmp
push
je
adc
cmp
push
fiaddl
adc
fcomps
lods
push
pop
clc
sahf
pop
pop
lahf
dec
sub
inc
xor
and
cmp
jbe
sbb
stc
ds
push
jle
push
cltd
test
push
add
lahf
lret
dec
mov
out
and
cmp
sbb
aad
fistpl
adc
pop
pop
cwtl
sahf
sbb
outsb
and
mov
push
pop
mov
pusha
sbbb
push
lret
sbb
mov
inc
outsb
pop
mov
push
pop
mov
xorl
jnp
aad
rcr
add
mov
or
jge
hlt
jnp
lea
adc
jp
push
cmp
xor
js
aad
mov
nop
shl
pop
sbb
push
and
fisubrl
aas
xchg
sahf
lret
push
cld
xor
pushf
popa
lods
lds
sti
adc
fdivs
cmp
stc
pop
dec
xchg
je
sti
bnd
pop
mov
push
mov
jp
or
push
sbbb
jp
in
mov
clc
inc
and
jmp
push
mov
insl
adc
push
sbb
and
aam
or
jo
daa
fildll
lock
sbb
inc
mov
push
fs
sbb
scas
fsubrs
mov
cld
sbb
rcrb
scas
inc
and
sub
mov
cli
and
pushf
lcall
cld
arpl
pop
shlb
sahf
cmp
pop
clc
xor
aaa
mov
xor
dec
xchg
dec
push
cmp
inc
pop
adc
mov
jg
push
pop
rcrb
lds
push
pop
fildl
mov
mov
sub
jne
cmp
lcall
mov
sub
ss
sahf
pop
sbb
add
mov
jp
out
adc
ret
cmp
add
ljmp
push
loopne
shr
je
scas
xchg
mov
fsubl
cmp
jl
xchg
cli
xor
pop
pop
jp
mov
cwtl
out
mov
pop
andb
nop
inc
and
dec
jnp
jp
inc
aaa
xor
loopne
sbb
aam
popa
testl
mov
scas
mov
sub
mov
fidivrl
mov
sbb
mov
sub
xor
sarb
test
pop
rcll
push
and
sbb
add
adc
pop
cmp
cld
in
daa
ljmp
in
and
test
mov
and
adc
sbb
imul
in
testl
fcomps
inc
adc
mov
pop
pop
popa
cmp
cmp
mov
js
addb
mov
in
std
insb
popa
mov
cli
mov
pop
cmp
pop
pusha
pop
fdivrs
mov
addb
fstpt
cmp
add
and
push
pop
xor
aas
pop
clc
pusha
cmp
add
inc
ret
and
sbb
in
xchg
sahf
mov
rcr
xor
xlat
inc
push
cmp
cmp
jp
mov
fwait
sbb
fsubrl
jge
sbbb
or
and
mov
cli
mov
mov
fscale
push
and
push
push
inc
add
push
sbb
xor
xchg
add
fisttpll
sti
lcall
inc
push
pop
rolb
pop
cli
add
mov
dec
or
addr16
fildl
sub
popa
sbb
pop
mov
mov
jbe
cwtl
icebp
adc
and
mov
sbb
mov
lret
jp
fwait
pop
fistps
cmpl
cmc
pop
mov
imul
inc
popa
test
mov
je
mov
ret
sbb
nop
adc
jb
fwait
lcall
sti
push
mov
sbb
mov
sub
js
ljmp
enter
sti
cmp
sahf
jns
neg
repz
lahf
cmp
jp
jns
push
hlt
fdivrl
mov
pop
jl
xor
fimuls
loope
setp
fdivrs
adcl
mov
jl
lahf
fsubr
scas
mov
push
adc
sbb
rcrl
cmp
inc
dec
in
jg
mov
testl
pop
pop
lret
push
inc
inc
sbbl
mov
mov
stos
pop
jle
lret
cmpsb
jnp
sahf
fisubrs
enter
cli
pop
mul
xchg
pusha
push
out
dec
mov
mov
hlt
lcall
sarb
jl
mov
mov
andb
sbb
jb
sti
jp
pop
inc
js
bound
inc
push
sbbb
ss
pop
in
cmp
pop
dec
out
pop
fsubrs
pop
sahf
pop
push
mov
cmp
sub
lcall
shlb
jle
call
idivb
rolb
pop
cmp
sub
cmp
mov
sub
cli
popa
sti
popa
mov
cmp
incb
daa
mov
mov
fcomp
adcb
cmp
js
jnp
mov
xchg
hlt
adc
in
sub
pop
add
inc
add
jecxz
in
arpl
bound
cmp
ja
push
lret
cmp
mov
js
adc
sarb
mov
push
or
and
cmp
pop
sti
xchg
and
arpl
mov
ret
mov
xor
lahf
mov
mov
mov
cmpxchg
aaa
push
inc
xchg
cld
cmp
sbb
lret
pusha
pushf
dec
xor
jp
sahf
pop
xchg
jle
icebp
push
pusha
add
push
cwtl
dec
or
jle
mov
das
push
jb
js
and
jg
adc
inc
adc
jb
jmp
cmp
fmuls
or
lods
je
sahf
pop
cmc
js
cmc
sbb
inc
jl
cltd
cmp
fldl
dec
jle
jp
arpl
outsl
cld
dec
inc
adc
mov
sahf
sbb
rcr
iret
cmp
cwtl
out
iret
ret
lret
fcomps
dec
popf
mov
push
cli
pusha
cmp
int3
cmpl
push
js
lds
loopne
pop
fmull
pop
ljmp
mov
cmp
dec
idivl
jp
mov
je
cmp
sbb
xchg
pushf
adc
inc
mov
cmp
popa
pop
dec
sbb
inc
xor
clc
popa
pop
cmp
jnp
dec
mov
mov
inc
mov
xchg
fcomip
pop
pop
and
std
stos
mov
cmp
into
sub
cmp
mov
fwait
mov
jge
pop
inc
lods
daa
xor
adc
sti
cmp
nop
sbb
and
sti
cmp
sub
cwtl
js
adc
addb
cwtl
das
cmp
iret
jg
test
and
scas
push
push
pop
ljmp
test
cmp
ja
sbb
aaa
xchg
stos
add
ja
xchg
loop
sbb
clc
xchg
xchg
jp
mov
cmp
fdivrs
outsl
pusha
dec
pushf
and
mov
sahf
mov
fsubl
mov
pusha
shl
inc
mov
jne
in
dec
and
inc
je
mov
cmp
pop
ss
lahf
in
jmp
cmp
fwait
repz
jle
pusha
pop
sbb
test
pop
push
cmp
repz
lds
pop
lcall
jb
lret
test
andl
pop
xchg
xchg
cli
mov
lds
loopne
xlat
popa
cmp
mov
mov
sbbb
ss
test
inc
negb
add
jbe
pop
mov
fs
sbb
mov
sbb
fiadds
cmp
pop
mov
arpl
cld
lcall
cmp
mov
mov
sahf
push
mov
sbb
or
inc
fwait
mov
mov
popa
xchg
inc
mov
dec
js
cmp
mov
mov
or
jle
pop
pop
andl
mov
sahf
pop
jge
sub
ljmp
inc
arpl
and
scas
icebp
sbb
lret
sub
jl
mov
inc
mov
sub
adc
fnstsw
stc
jne
pop
and
cli
mov
mov
sti
jl
jecxz
and
ss
add
aaa
cmp
or
push
insb
pop
add
aaa
pop
out
ja
repz
pop
cmp
jo
cmpb
ret
and
jno
push
scas
cmp
mov
xlat
pop
clc
int3
loop
divl
shr
lcall
sti
cli
cmp
adc
stos
mov
cmp
dec
iret
inc
mov
push
rorb
xchg
shl
pop
roll
sbb
sbb
push
cmc
mov
mov
mov
shlb
jle
outsb
mov
int
cmp
imul
mov
jg
pushf
sti
iret
ret
mov
stos
lcall
fwait
jg
rolb
and
jp
jge
mov
xor
jg
clc
jl
dec
lahf
dec
push
pop
cwtl
lds
jae
pop
push
cmp
fidivrl
push
popa
mov
jge
xchg
pop
push
pop
scas
xchg
pop
pop
add
add
out
mov
pop
mov
mov
negb
scas
adc
xchg
hlt
add
xchg
mov
bound
sti
js
adc
lcall
sbb
xor
sbb
icebp
leave
mov
lcall
ljmp
add
pop
mov
cmp
jg
jl
pop
sbb
xchg
icebp
xor
and
and
loop
cmp
subb
sahf
mov
pop
dec
jl
jo
xchg
cmpsb
xchg
subb
fidivl
xor
lcall
pop
je
xchg
stos
js
or
and
and
xchg
jp
jb
mov
pop
nop
add
int
cmp
mov
cli
push
sti
jl
jge
push
pop
mov
js
sahf
xor
cmp
sbb
add
dec
mov
sahf
fisttpl
sbb
clc
dec
dec
inc
inc
mov
or
mov
aaa
ret
faddp
jl
or
xchg
mov
dec
std
cmp
cld
nop
pusha
inc
cmp
aas
cmp
lock
imul
xor
pop
loopne
xchg
cmp
mov
fwait
stos
scas
sahf
shlb
pop
ljmp
ret
ljmp
fsubl
dec
bound
mov
popa
sbb
dec
jge
loopne
mov
cli
sti
xor
cmp
sbb
jbe
inc
lcall
stos
fnstcw
xchg
dec
lds
cmp
xchg
fcompl
pop
xchg
pusha
cmp
pop
or
add
mov
lock
pop
clc
adc
cwtl
mov
cli
imul
repz
fistl
pop
pop
jp
sub
addr16
stos
pop
cmp
lcall
fwait
jge
mov
fs
jp
ds
cmp
xchg
fistpll
faddp
je
gs
and
outsl
cmp
xchg
cmp
sbb
ret
and
cmp
pop
adc
pop
xor
mov
and
lcall
mov
pop
rcrl
jnp
sub
rcl
mov
push
ljmp
pop
scas
shlb
jg
mov
not
xchg
mov
sub
fwait
or
dec
sarl
daa
popa
mov
sbb
cwtl
out
fwait
iret
adcb
fbld
pushf
lods
jge
addl
or
push
xchg
in
fidivrl
cli
inc
decl
jp
mov
jl
pop
ss
testl
cmp
xchg
int3
cli
hlt
fidivs
ss
adc
jp
cld
xor
popa
push
aas
in
inc
mov
sahf
idivb
mov
add
mov
mov
sbb
push
jp
repz
and
or
in
xor
ds
inc
inc
dec
in
xor
repnz
mov
popa
pop
adc
adc
pop
dec
andl
and
ret
inc
xchg
outsl
int
sbb
cmp
out
mov
mov
and
aas
cmpl
pop
cmp
inc
pop
cmp
test
mov
pop
shlb
insl
mov
paddusw
xor
pop
add
imul
fistpl
push
cmp
in
cli
stc
lahf
mov
cmp
jle
sub
sbbb
add
sbbb
lods
pop
loopne
inc
mov
pusha
cmp
pop
loopne
fwait
pusha
sti
mov
ficoml
pop
loopne
cmpsl
add
adc
enter
rcl
ficoml
lock
cmp
sti
int
adc
sbb
ficompl
pusha
pop
mov
insl
and
popf
mov
out
daa
inc
adc
add
xchg
cli
jp
daa
popf
mov
imul
fiadds
push
sbb
push
cmp
add
dec
or
pop
xorb
cmpl
cmp
js
add
movsb
sbbl
pop
sub
xchg
xor
push
mov
jp
ret
and
pop
or
sub
dec
loopne
inc
cli
das
push
cmp
cmp
lcall
jnp
xlat
shrl
incl
push
pop
cmp
pop
cmp
mov
sbbl
cmp
lock
mov
push
mov
push
jmp
cmp
jne
cmp
ljmp
sti
sbb
lret
mov
pop
mov
cmp
rol
neg
push
jle
pop
fdivrs
out
cmp
inc
les
mov
test
scas
inc
sub
jmp
jnp
jl
cmp
cmp
pop
popf
jns
pop
jmp
aaa
mov
fidivs
js
inc
repz
fwait
cli
inc
xor
loope
jmp
xchg
jle
jl
leave
dec
cmpsb
pop
cmpb
jg
adc
hlt
ficomps
adc
inc
cmp
pop
pop
popa
push
sbbl
add
pop
stc
xchg
xchg
jg
movsb
mov
cmp
inc
xchg
imul
daa
or
cmp
pop
cmp
ljmp
inc
mov
cmpsl
cmp
data16
cmp
jnp
cmp
sbb
pop
lds
inc
xchg
mov
stos
int3
pop
icebp
mov
cmp
cmp
mov
sbb
and
js
jge
xchg
jnp
mov
sbb
mov
rcr
popa
in
push
mov
aaa
mov
je
mov
sbb
xor
cmp
xchg
jge
cmp
xor
sbb
jg
ljmp
test
nop
mov
cmp
inc
mov
fistps
ljmp
mov
xchg
loopne
mov
mov
cmp
lahf
ret
or
ss
mov
shlb
repnz
cmp
sti
ss
popa
pop
pop
adc
mov
imul
jl
cli
in
pushf
mov
mov
mov
shlb
sti
pop
fdivrs
test
jge
mov
jecxz
mov
and
std
in
jl
mov
mov
adc
sahf
xchg
fadds
clc
cmp
jns
sbb
aad
inc
stos
mov
cld
dec
dec
jmp
dec
mov
pusha
mov
pop
outsl
jl
push
inc
lahf
loopne
mov
mov
mov
fidivrs
scas
push
cmp
nop
cmpl
call
pop
adc
std
xor
jle
std
sub
jp
push
pushf
cld
jge
sarb
jb
adc
mov
cli
or
push
ss
es
and
add
mov
add
in
es
inc
loopne
cli
ss
leave
mov
cmp
pop
cmpl
cwtl
dec
sti
jle
cmpsl
rolb
inc
and
push
scas
ljmp
leave
and
shlb
mov
cli
dec
sub
fcmovbe
pushf
cmp
popa
mov
mov
fisttps
pop
popa
fiaddl
cli
jle
pop
pusha
mov
test
xchg
mov
and
sbb
shlb
inc
push
mov
sbb
dec
aaa
cmp
call
mov
jl
cmp
sbb
push
pop
cli
outsb
mov
jle
out
pop
lret
out
loopne
cmp
xchg
add
hlt
sbb
mov
sbb
inc
sbb
fmul
lahf
xor
andb
aad
jg
lcall
cwtl
out
lcall
outsl
pop
cld
xor
in
xchg
ret
ret
dec
pusha
lahf
push
test
inc
jne
ficomps
cmp
mov
xchg
fistpll
mov
jge
cmpsb
mov
inc
jle
pop
sbb
dec
xchg
push
fiaddl
cltd
cmp
pop
shl
hlt
aas
xchg
lds
fmull
or
icebp
ss
dec
je
mov
popa
jecxz
lds
ret
stos
shlb
leave
push
pusha
mov
fdiv
cwtl
arpl
pop
fwait
pop
loopne
pop
xchg
mov
popa
mov
movsl
loopne
xor
sub
jae
dec
movl
test
mov
xchg
nop
mov
inc
cmp
loopne
mov
pushf
and
sub
lods
jp
lcall
add
repnz
mov
sbb
aas
or
sbb
fwait
jp
adc
popa
sbb
mov
push
repz
jg
sar
orb
je
sbb
mov
les
ret
fisubrs
loopne
jge
and
jnp
cmp
fstps
sbb
pop
arpl
push
rcl
test
popa
pop
fidivrs
add
sti
push
leave
add
notl
fcompl
jp
loopne
ficoms
pop
ds
rcr
aas
mov
pop
sub
sahf
cli
pop
sub
pusha
fs
jl
cmp
lahf
fidivrs
cmp
cmp
xchg
push
sbb
inc
cmp
sahf
cld
sub
jl
or
sti
push
pop
add
add
loopne
mov
mov
pop
adc
adc
fadds
pop
aam
negl
sti
sahf
popa
jl
cmpsb
fsub
pop
pop
mov
fcomi
int
jge
sbb
fidivs
stos
push
std
pop
add
lds
cld
sub
pop
push
adc
flds
and
cmpsl
mov
mov
mov
mov
dec
push
outsl
cltd
xchg
inc
mov
inc
andl
cmp
int
mov
add
and
je
cmc
inc
or
sbbb
inc
pop
cmp
cmp
inc
mov
fsubs
mov
add
int3
bound
sbb
dec
push
inc
std
dec
in
pop
pop
mov
mov
mov
adc
ljmp
andl
jno
push
push
aad
lahf
mov
inc
sbb
cmp
jg
mov
sbb
jae
js
mov
hlt
fidivs
mov
hlt
inc
orb
inc
popa
xor
popf
jle
repz
stc
mov
pop
jg
pop
stos
jge
insb
mov
shlb
inc
xchg
mov
pushf
fdivrl
mov
cmp
pop
lcall
pop
add
sbb
cmp
loop
mov
sbb
or
rcl
pusha
mov
fisttpl
mov
pop
sbb
mov
xor
sbb
or
pop
sbb
cmpsl
lahf
add
gs
cmpl
negl
cmc
jl
and
inc
inc
fbld
push
pop
xchg
and
out
lods
daa
push
leave
dec
js
gs
lcall
xor
add
mov
ficompl
push
jmp
pop
cmp
pop
inc
pop
cmp
scas
rorb
cmp
in
repnz
pushf
lcall
cmc
rcr
int3
or
cmp
nop
xchg
iret
je
iret
rol
push
mov
add
sub
js
pop
dec
jle
sbb
or
push
dec
mov
sbb
icebp
dec
adc
inc
lcall
stc
lret
xchg
fdivrs
cli
jp
cmp
call
ficomps
add
and
sarl
fistps
xor
xchg
mov
cmpsb
cmp
and
jle
lahf
pop
adc
jg
loop
ret
test
ficompl
adc
into
lahf
sub
mov
pop
pop
jp
pop
cmp
jg
mov
mov
ffreep
js
dec
xor
mov
lds
mov
lcall
pop
xchg
inc
cli
pop
mov
sub
jp
mov
mov
sbb
dec
push
aam
popa
pop
ja
mov
sbb
jle
jnp
cld
push
icebp
lcall
in
xchg
test
cmp
cwtl
mov
cmp
jnp
mov
das
pop
fcmovbe
pusha
inc
dec
inc
inc
stc
and
ficoml
jge
sbb
faddp
js
or
pop
mov
fwait
pushf
inc
aad
shlb
iret
sbb
jnp
sub
popa
aam
pop
or
adc
add
adc
stc
inc
mov
cmp
sahf
jl
and
cmp
loopne
push
dec
pop
jo
cmp
jno
pop
les
or
popa
cmp
inc
addl
sbb
sbb
pusha
pop
sbb
fdivrl
inc
cmpsb
mov
push
mov
cmp
dec
scas
sbb
fistps
push
pop
pop
rcrb
je
ficoml
mov
int
xchg
fists
xchg
arpl
inc
mov
je
mov
fistpl
add
inc
and
lcall
cmp
mov
jge
mov
lahf
stos
vcmppd
inc
repnz
mov
sbb
cmpsb
jg
sbb
xchg
push
sahf
xchg
mov
mov
adcb
inc
jg
and
sub
aad
clc
sub
pop
pop
pusha
pop
sbbb
push
pushf
mov
mov
pop
cmp
mov
enter
cmp
dec
iret
cmp
push
pushf
shlb
and
cmp
jp
mov
sub
cmp
and
imul
cmp
pop
adc
mov
loopne
push
popa
pop
mov
jl
cmc
inc
sbb
sub
js
jbe
and
sahf
cmp
jl
jp
mov
and
addr16
or
jge
mov
inc
push
and
lcall
mov
mov
lea
in
mov
pop
ret
test
mov
orl
push
pop
inc
aaa
adc
pop
decb
cmp
cmpb
jnp
jg
sbb
cmpb
sbb
jg
mov
rcpps
sbb
jg
inc
inc
jp
js
lahf
push
cld
mov
cmc
into
fdivs
push
xchg
jo
mov
sub
xchg
add
les
fstpl
mov
mov
js
fildl
fdivs
xor
sbb
or
or
push
mov
adc
mov
pop
sbb
xor
inc
and
cmp
cmp
sahf
jge
xor
add
inc
push
pop
pop
cmp
std
adc
pop
jl
add
mov
fdivrl
cmp
cli
cmp
fstpt
js
sbb
inc
pushf
pop
cwtl
mov
lds
jge
stos
pusha
rolb
stos
sahf
lea
push
loopne
xchg
lcall
inc
stos
jae
cmp
pop
popa
mov
ret
push
cmp
hlt
mov
aas
scas
fistps
idivl
pop
test
push
mov
ss
fsubr
dec
inc
and
cs
cld
push
nop
mov
pop
sub
pop
fucom
aaa
push
add
push
jae
cmp
cmp
mov
cmp
lcall
inc
push
add
cmp
pop
and
sbb
pop
fwait
jnp
mov
fcompl
ficompl
cmpl
xchg
jnp
clc
rcrb
inc
inc
cmp
mov
fmull
popa
out
rcrl
cld
in
aas
jg
aas
cmp
inc
lcall
je
xchg
repnz
or
insb
sbbb
call
cmp
sub
out
aas
ss
mov
pop
pusha
cmp
pop
sub
loop
orl
fwait
pop
popa
pop
add
push
add
mov
sbb
pop
lahf
push
mov
pop
loopne
cmpsl
cmp
xchg
pop
aas
pop
jl
imul
cld
sbb
cwtl
adc
add
jnp
cmc
pop
and
xchg
cmc
xchg
mov
xchg
loopne
hlt
lcall
pop
fidivs
and
fimull
dec
repz
sti
jle,pt
inc
sarb
pop
cmp
mov
pop
bound
cmp
pop
pusha
ficoml
sbb
mov
rorb
and
mov
addr16
cmp
xor
pop
sbb
lcall
cmp
stos
push
rol
mov
pop
movsb
int
dec
xchg
pop
inc
mov
xchg
mov
adc
cmpl
mov
adc
adc
fcomip
mov
mov
and
cmp
jnp
movl
pop
scas
cmc
cmpsb
aas
data16
mov
mov
mov
or
cmpsb
mov
loopne
aas
jno
inc
shrb
mov
shrl
cwtl
cmp
aaa
pop
in
or
jge
jmp
subl
pop
mov
mov
mov
daa
fidivrs
jb
mov
ds
pushf
cwtl
jge
leave
add
rolb
mov
int3
xchg
pusha
cmp
repnz
lds
pusha
xchg
jnp
rclb
stos
ja,pt
mov
mov
lcall
fistps
mov
lahf
sbb
jl
jne
mov
lcall
pusha
sub
mov
mov
lcall
fiadds
clc
ljmp
cli
mov
fwait
fwait
iret
mov
pop
stc
stc
mov
xor
jno
jnp
adc
inc
imul
aaa
mov
into
fcmovu
adc
pop
mov
fwait
sahf
ljmp
clc
dec
cmp
xchg
rorl
cmp
jnp
cld
fdivrs
clc
fwait
push
sub
insb
mov
or
fidivrs
cmp
xchg
pusha
cmp
sahf
cwtl
fdivrl
xchg
sub
jp
pop
cmp
pusha
mov
aas
sbb
jl
lahf
inc
pop
cld
int
clc
out
rcrl
pop
sub
cmpb
and
sti
and
cli
mov
sahf
out
push
aaa
pop
vrcpss
xchg
pusha
cmp
lock
pusha
cli
sub
mov
shl
xchg
cmp
inc
jnp
xor
pop
adc
popa
cmp
mov
pop
fcmovnu
or
movsl
fwait
outsl
mov
pop
scas
and
adcl
cmp
cltd
shlb
cld
jmp
mov
test
dec
mov
sbb
gs
mov
adc
in
sti
sti
pop
in
inc
incl
adc
arpl
ficompl
push
mov
dec
jg
jmp
lods
aad
sahf
mov
cwtl
ret
jp
mov
cli
push
pop
pop
pop
cmp
shll
mov
pop
mov
pop
dec
mov
pop
aas
pop
xchg
mov
sahf
adc
mov
pop
rcrl
mov
adc
out
int
and
cmp
mov
sbb
fwait
stc
xor
jb
xchg
pusha
fcompl
pop
pop
adc
insb
sbb
mov
int3
mov
inc
pushf
sub
std
fbld
fwait
popa
inc
mov
enter
sbb
rcll
pushf
sbb
lods
in
mov
inc
cmp
inc
dec
sbb
je
pop
pop
push
mov
mov
jp
mov
je
hlt
xchg
inc
shlb
dec
mov
push
cmp
pop
cmp
jp
jns
pop
hlt
pop
ficoml
jg
pop
xorl
sbb
sahf
cli
inc
pop
cld
and
fisubl
pop
xchg
pop
ds
loopne
mov
cmp
cwtl
adc
mov
add
adc
lret
sub
fldt
mov
xchg
sbb
jl
pop
subb
pop
pushf
xchg
cmp
and
pop
js
and
mov
lcall
in
stos
fnstsw
xchg
mov
js
mov
inc
mov
hlt
enter
cmp
jne
fistpl
pop
and
jmp
nop
orl
pop
out
and
test
mov
xchg
test
push
push
pop
mull
fidivs
add
xor
lcall
pop
sbb
inc
inc
inc
mov
jl
pop
and
cmp
mov
negb
adc
shrb
pop
ja
inc
xchg
lock
jmp
sub
cmp
pop
xorb
icebp
faddl
sbb
pushf
mov
or
dec
cmpb
pushf
fwait
cmp
cmp
adcl
jge
je
orpd
pop
pop
jp
jb
cmp
sub
pop
mov
pusha
adc
sarb
and
jb
pusha
cmp
cmp
dec
mov
mov
cmp
add
or
dec
scas
cmpl
or
loopne
fucomip
jge
adcb
loopne
inc
cmp
and
pop
xchg
shlb
sti
rcrb
mov
mov
jns
daa
fidivrs
cmp
cmp
mov
adc
data16
enter
pop
cli
cmpsb
jp
cmp
and
arpl
daa
sub
fistl
addb
sbb
push
mov
ds
xchg
mov
sbb
vdivps
lahf
mov
out
xor
loopne
sbbl
push
ret
shl
inc
cmp
mov
js
adc
adc
pop
push
pop
jb
ficompl
pop
xchg
cmp
jnp
test
daa
cmp
pop
int3
jl
test
lds
cmp
jg
xchg
mov
fwait
jmp
daa
mov
fcomi
cmp
push
pop
fistps
ds
pop
mov
fcomps
pop
mov
fcompl
pop
inc
sbb
cmp
daa
ss
aas
ja
adc
int3
inc
fcmovnbe
cmp
stos
lcall
or
mov
cmp
fld
loopne
inc
xchg
mov
adc
jl
xlat
mov
mov
cmpsb
jle
add
push
cmc
and
sub
mov
mov
push
fwait
lods
pop
aad
pop
mov
lcall
jp
sbb
cmp
pusha
rcrb
aas
inc
cmp
mov
jp
sub
xchg
shlb
fidivrl
cmp
js
daa
sarb
dec
jmp
jo
mov
aas
and
jnp
ret
lret
mov
mov
xchg
mov
pop
dec
ret
mov
add
xchg
inc
mov
dec
inc
incl
pop
pop
jmp
cmp
mov
adc
sbb
imul
cli
sti
pop
subb
fnstsw
push
pop
jp
push
into
arpl
loope
test
mov
sbb
js
sub
sarl
pusha
cmp
mov
dec
movsb
clc
cmp
cmp
mov
jns
jle
jmp
repz
mov
lock
pop
cld
addr16
dec
pusha
fstpt
cs
jmp
dec
sbb
stos
sarb
cmp
jnp
inc
pop
fldt
mov
add
sbb
nop
jle
cli
pop
fdivrs
and
sbb
pusha
xchg
xchg
jge
pop
cmp
lahf
dec
xor
dec
mov
neg
jge
jb
cmp
cmp
cli
push
inc
mov
jl
sbb
mov
dec
lods
pop
sahf
imul
gs
add
jb
cmpl
push
pop
xchg
rcrl
filds
pop
mov
aaa
jnp
fstps
testl
clc
fdivrs
aas
sarb
cli
or
fistpl
pop
mov
call
dec
jo
mov
fistpll
sbb
mov
flds
sahf
pop
mov
stc
pusha
sbb
cmp
jmp
fdivrs
mov
ficomps
jae
inc
aas
cwtl
add
xor
icebp
pusha
imul
ss
inc
cmp
jns
aad
dec
add
and
xchg
js
adc
fcomps
add
pop
test
and
inc
and
ficompl
xor
push
and
push
lahf
test
mov
mov
jg
xchg
cmc
cli
mov
maxps
test
mov
inc
nop
rorb
fwait
adc
sbb
addb
jmp
imul
pop
jmp
push
sbb
rcrb
sbb
xchg
popa
mov
mov
push
cmp
pop
cltd
mov
adc
cmpb
jg
cmp
xchg
xchg
push
mov
cwtl
jle
pop
adcl
xchg
call
imul
cmpsl
jl
rorb
cli
inc
loopne
mov
cmp
and
xlat
xchg
cld
sahf
sarb
cmp
stos
sbb
adc
push
mov
lea
lds
dec
xchg
loop
adc
sbb
dec
pop
fwait
clc
mov
subl
dec
sbb
popa
fdivr
inc
repnz
sahf
push
jnp
mov
jl
mov
mov
pop
je
rclb
pop
inc
inc
sahf
cld
sti
call
cmp
pop
pop
lods
lds
mov
lahf
sbbb
stos
stc
lea
shlb
pop
ret
cmp
inc
pop
addb
pop
or
push
mov
and
jle
cmp
fs
test
popa
pop
sub
loopne
popf
dec
jno
mov
xchg
cwtl
popa
mov
fucomip
pop
cmp
xchg
xchg
sbb
aas
mov
aaa
mov
pop
mov
lahf
or
idivl
xor
jg
inc
sub
sahf
inc
mov
je
dec
lcall
sahf
cmc
xchg
icebp
loop
fcmove
xchg
pop
popa
clc
pop
ja
sub
jg
mov
mov
pusha
fists
and
push
cmc
sbb
sbb
pop
rcrb
fsubs
mov
aas
dec
add
dec
sti
pop
pop
mov
pop
popa
sbb
dec
add
dec
lods
jle
xor
sbb
idivl
mov
jl
in
xchg
clc
add
and
addb
push
pop
jl
aam
cmp
mov
je
push
xor
mov
mov
shl
std
mov
add
pop
sub
pop
sbb
ret
inc
movsl
popf
pop
sub
jp
lcall
icebp
mov
in
aad
iret
cltd
mov
cmpsb
mov
mov
mov
fistps
fwait
popa
jl
outsb
rcrb
pop
cli
repz
mov
sbb
fildl
sbb
mov
das
push
lcall
cmp
xchg
jo
loopne
cmp
lods
aaa
pop
das
adc
cmp
in
popa
into
fwait
dec
sbb
xchg
mov
sti
std
jge
jl
pop
mov
mov
arpl
cmp
xlat
jg
lcall
cmp
xchg
add
pop
pushf
adc
arpl
add
mov
jp
cwtl
fidivrl
jle
pusha
sbb
jl
inc
orl
cmpb
mov
cwtl
cmp
pop
pop
cs
call
addb
pushf
cld
cmp
push
xchg
pushf
dec
xor
jnp
pop
mov
mov
frstor
xchg
stc
inc
xor
std
jnp
cmp
flds
sbb
pop
pop
lret
ss
sti
fdivr
mov
loopne
fistpl
dec
pop
jnp
dec
cmpsb
cmp
repz
lahf
fsubs
dec
pusha
shll
pop
inc
jl
pop
inc
pop
xor
inc
xor
outsb
rcl
fwait
pop
or
pop
jg
popf
testb
popa
insl
cmp
pop
pop
and
sbb
sahf
mov
jp
lcall
cmp
jge
lahf
adc
dec
sub
mov
je
sbb
xchg
inc
mov
adc
add
sub
jg
push
je
xchg
mov
and
mov
ja
leave
sbb
jge
out
pop
adc
cs
jo
pop
add
and
mov
dec
popaw
pop
lret
sti
pushl
mov
push
repnz
inc
aad
jp
xchg
lret
push
neg
inc
bound
mov
fimull
popf
adc
addl
out
inc
cmp
loop
inc
mov
fistpl
and
mov
sar
sahf
sti
pop
loop
adc
jp
cltd
inc
in
clc
loopne
fstpt
and
pop
xchg
pop
xchg
dec
pop
lret
pop
mov
mov
jnp
fdivrs
jae
mov
psubusw
pop
xor
jnp
jge
aad
sbb
je
inc
cmp
sarb
xchg
enter
shl
ds
mov
lahf
aas
fiaddl
lret
xchg
into
cmc
mov
das
add
mov
out
cwtl
sub
push
push
popa
pop
rcrb
pop
pop
mov
dec
outsl
sarb
sbb
cmp
cmp
fwait
xchg
xor
loopne
sbb
mov
fmuls
sbb
dec
inc
cmp
cmp
and
jns
inc
sti
pop
pop
pusha
loopne
xor
or
mov
xlat
xchg
lahf
mov
jge
sbb
in
outsl
shr
ret
ljmp
add
loopne
mov
mov
lcall
rcrl
inc
fiaddl
cmp
cmp
push
pusha
dec
mov
add
mov
test
inc
pop
jnp
iret
xchg
cmp
pop
jns
pop
loopne
inc
jl
lcall
inc
pushf
xchg
pop
sarb
mov
cmp
mov
jmp
std
inc
jno
cmpsb
popa
inc
mov
sbb
mov
mov
and
adc
push
jg
ds
into
sbb
sbbb
adcb
push
sbb
cwtl
jno,pt
cli
loope
aad
fidivrs
sbb
xchg
jl
mov
dec
hlt
jnp
adc
iret
pop
or
mov
sbb
lods
popa
call
ret
xchg
into
pop
fldl
push
mov
aaa
fwait
inc
rcrb
lcall
adc
repnz
pop
fdivrl
push
insl
cmpl
fcmovnu
andl
pop
adc
pop
sbb
lret
pusha
mov
inc
cmp
cmp
pop
faddl
lret
jb
clc
lahf
mov
fs
hlt
jnp
xchg
push
xchg
inc
ss
pushf
lds
mov
pop
push
js
dec
lahf
cmp
ret
mov
clc
dec
icebp
cs
sbbl
and
mov
dec
lcall
lahf
xor
mov
mov
hlt
pop
cmpsl
xchg
or
sub
stos
jae
mov
cmc
adcl
cmc
jp
pusha
mov
ljmp
inc
cmp
xor
sbb
aas
cli
pop
repz
push
push
mov
cld
mov
add
jecxz
mov
push
clc
mov
lcall
adc
fcomps
pop
jg
xchg
mov
rcrl
jmp
cwtl
mov
arpl
in
xor
fildl
clc
inc
dec
or
ljmp
cmpsl
jae,pt
sbb
xchg
pusha
push
fildl
mov
ffreep
nop
xor
inc
xchg
xor
add
jae,pt
dec
ljmp
inc
xchg
push
sbbl
pop
push
iret
mov
bound
cli
pop
push
cld
pop
inc
cmp
sbb
inc
pop
shrb
pusha
hlt
add
push
fdivr
int3
and
and
mov
xor
pop
jnp
inc
fs
jge
mov
jns
jg
pop
jnp
dec
jp
cwtl
dec
add
and
mov
adc
push
inc
pusha
pop
sbb
pusha
push
push
jle
pusha
or
mov
sub
mov
push
jnp
inc
cmp
fsubs
jecxz
repnz
dec
sahf
cmp
and
sub
out
fcoms
mov
ficomps
std
mov
inc
push
shlb
jb
mov
mov
cmp
insb
pop
popa
addb
jns
pop
pop
jbe
test
jne
pop
out
mov
inc
xchg
cld
jle
in
repz
pop
js
fwait
pop
cmp
add
int3
testl
fildll
cmovp
pop
pop
push
pop
sti
jg
mov
cmp
jno
sbb
fisubl
push
into
adc
lahf
aas
mov
test
aad
sbbl
inc
cmpl
pop
lahf
inc
ret
loopne
pushf
popa
fiadds
jge
rcr
dec
daa
negb
jge
imul
lcall
jns
mov
adc
push
clc
test
fwait
cmp
aad
pop
mov
cmp
fidivrl
push
sahf
and
inc
movsb
push
pop
pop
js
pusha
lcall
std
loopne
rolb
fisttpl
dec
sbb
fmuls
mov
jle
lcall
sahf
mov
js
xchg
int3
fwait
inc
pop
cmpsl
divb
fdivrs
adc
pop
pop
pushf
pop
inc
pop
cmp
cmp
pop
filds
faddl
pop
ds
sbb
fwait
mov
xor
sbb
mov
popa
cld
inc
xchg
xchg
xor
sbb
cmc
or
push
and
mov
mov
sbb
js
mov
dec
mov
jg
out
sbb
add
sbb
mov
cld
cwtl
cmpl
sbb
sbbl
push
sti
sahf
arpl
in
push
enter
or
adc
fcomps
cmp
pop
pop
mov
inc
adc
ljmp
jns
mov
push
sbb
sub
shlb
push
inc
fld
mov
xchg
pop
mov
or
fimuls
pop
pop
mov
rclb
xchg
jle
and
sti
lds
inc
inc
pop
lcall
sub
pop
sbb
bound
lcall
lea
lahf
push
or
sti
pop
stos
outsb
clc
movsb
jp
nop
mov
sbb
cmp
jae
aaa
jge
test
cmp
push
fidivrl
xchg
xlat
mov
sbb
icebp
xor
ret
out
sub
ret
ljmp
fistps
pop
inc
mov
pusha
popa
cmp
outsl
fists
cmp
pop
fldt
stos
mov
gs
mov
push
stc
cmp
xlat
dec
idivl
xchg
pop
clc
faddl
cmp
subb
jp
js
sub
roll
aaa
dec
xchg
cwtl
sbb
jb
jle
cli
icebp
jae
jne
inc
hlt
pop
fists
in
pop
fcmovnbe
or
mov
dec
incb
jg
inc
add
inc
push
push
cli
pop
cmp
fidivrl
sbb
inc
daa
inc
fisubs
dec
mov
and
mov
add
and
add
and
call
inc
jmp
jl
jge
pop
sbb
pop
mov
pop
js
pusha
sub
fxch
stc
xchg
dec
xchg
push
addb
and
sti
cmc
mov
xor
push
dec
cmp
cmp
pusha
xchg
jl
aas
movsb
xorl
jp
ds
mov
cmp
lahf
xor
jl
pop
repnz
fwait
paddb
inc
int
sub
and
mov
xchg
jl
adc
lret
ljmp
mov
mov
dec
fwait
lds
dec
rolb
fimull
and
mov
sbb
add
lods
and
lret
mov
mov
jp
cmp
xchg
cmp
jnp
xchg
add
das
cmc
xorl
sbbb
sbb
mov
pop
xchg
mov
pop
pop
add
in
ret
pop
jecxz
ja
fistpl
cltd
push
cli
mov
test
int
scas
fisubrs
out
xchg
adc
fcomps
jo
imul
shrb
jnp
scas
in
mov
fimull
cld
adc
popa
mov
fiaddl
pop
inc
inc
mov
andb
je
leave
in
xchg
jge
sti
add
outsl
loopne
hlt
decl
push
sbb
pop
mov
add
mov
and
pop
mov
and
test
xor
dec
mov
add
push
pop
mov
jp
add
add
bound
sti
aas
xchg
pop
dec
sbb
fdivr
dec
ja
clc
adc
pop
jge
xchg
jno
sbb
push
pop
popf
xchg
repz
jb
cli
pop
dec
nop
clc
cmp
cmp
and
jnp
inc
sti
in
fcoml
scas
outsb
fneni(8087
add
scas
int
mov
ret
add
popa
inc
cmp
inc
sbb
in
and
inc
push
dec
pop
pop
pop
int3
jne
rorb
stos
sbbl
repnz
jp
mov
pop
or
jle
jns
sbb
jle
icebp
loop
popa
dec
outsl
fwait
push
repz
pop
sbb
sti
jnp
es
inc
xchg
icebp
stc
push
in
fndisi(8087
sbb
cmp
mov
mulb
pop
lds
jg
lods
fsubl
jle
push
fcmovnu
jnp
iret
or
cmp
mov
and
mov
cli
xlat
cmp
mov
jp
mov
clc
mov
jl
hlt
call
pop
mov
fdivrl
push
inc
cld
inc
sbb
test
add
sahf
pushl
adc
fcmove
dec
xchg
cld
mov
pop
dec
adc
loopne
mov
ret
inc
jle
in
sahf
pop
outsl
sarb
sbb
stos
aas
push
negl
cmp
mov
inc
cmp
xchg
jg
fwait
inc
cli
mov
pop
out
lcall
pop
inc
push
pop
inc
test
mov
lods
loopne
inc
mov
and
pop
hlt
push
pop
cmp
jg
cld
push
pop
inc
xchg
mov
mov
push
sub
add
bound
pusha
rcrb
fcompl
sub
mov
push
pop
dec
inc
cld
cmpl
cld
insb
jl
lret
xor
outsb
jge
mov
pop
xchg
aaa
fistpll
jp
arpl
xchg
bound
or
xchg
jle
push
mov
rclb
ficomps
jp
inc
aas
pop
mov
js
movsl
jnp
sbb
inc
sub
loopne
call
sti
dec
sub
pop
outsl
ds
dec
shlb
bound
aad
jl
xchg
mov
adc
mov
sbb
dec
fdivrs
cmp
sbb
mov
pop
insb
aaa
mov
insb
fsubrl
jnp,pt
stos
add
sbb
js
dec
cmp
inc
inc
loopne
and
adc
jo
xchg
les
mov
ret
mov
bound
add
and
in
repz
out
mov
movsb
pop
inc
int3
stc
add
inc
pop
lret
loop
adc
mov
cmp
mov
cmp
rorb
test
mov
mov
lret
push
pop
pop
mov
bound
pop
lahf
mov
pop
mulb
cmp
cmp
js
js
cmp
sar
mov
mov
cmp
add
andl
sbbb
repz
cmp
jp
add
dec
cmp
inc
push
mov
mov
sbb
mov
sbb
mov
dec
pusha
inc
jnp
leave
cltd
cmp
leave
mov
xor
scas
ss
cld
or
je
aad
xor
cmp
loope
into
jle
add
push
mov
and
and
pusha
adc
fisubs
inc
movsb
inc
jle
pop
jg
les
cwtl
int
sahf
aad
pushf
sbb
inc
jno
loopne
inc
in
mov
adcl
dec
push
cmpl
jb
sbb
pop
ds
pop
pop
inc
dec
bound
pop
xchg
sbb
in
adcb
mov
dec
je
pop
dec
loop
js
je
ficoml
push
pop
sahf
adc
lds
sub
fidivrs
dec
pop
sbbb
lret
xor
pushf
rcrb
pop
aaa
sbb
jg
rcrb
pop
jo
fdivl
pop
mov
int3
ja
cmp
cmp
mov
fsubs
dec
cmp
jge
jle
jg
jnp
pop
cmp
lahf
dec
aad
mov
sbb
test
ljmp
mov
rolb
xchg
xchg
sbb
data16
pop
jb
lahf
push
cmp
shlb
xchg
addl
pop
lds
lret
pop
ficompl
push
lds
inc
and
dec
jle
sbb
hlt
sub
cmc
mov
pop
fwait
adc
iret
mov
inc
pop
push
and
arpl
insl
mov
mov
push
dec
add
xor
jne
sbb
dec
lahf
clc
pop
rcr
jnp
cli
pop
bound
pusha
lcall
mov
pop
xor
sahf
addb
inc
pop
negb
mov
hlt
mov
stos
fidivrl
sbb
xor
ficomps
or
lds
dec
mov
push
cmp
mov
ficompl
ljmp
movsb
push
sbbb
rolb
je
xor
mov
mov
pop
in
xlat
pop
in
adc
cmp
mov
jge
inc
in
xor
lcall
cmp
xchg
mov
cmp
sbb
call
shr
mov
inc
mov
addb
mov
icebp
stos
fidivl
loopne
andb
aad
in
jg
sub
xchg
pusha
jle
out
imul
and
pop
xor
xchg
clc
pushf
cmp
sbbl
pop
and
sahf
or
lea
push
mov
mov
jg
pop
jae
jl
pop
int
adc
in
mov
inc
stc
mov
sarb
loop
add
icebp
adc
mov
fstpt
fistpll
mov
loopne
pop
dec
clc
cmp
ret
fmul
andb
xor
fcomp
test
scas
mov
dec
and
testl
jo
pop
mov
or
pop
aaa
mov
pushf
scas
xchg
sbb
jb
sbb
dec
sbbb
add
xchg
and
mov
sub
push
loopne
mov
clc
imul
aas
js
push
jle
add
fidivrs
and
dec
aaa
push
push
fsubs
out
pop
into
ds
inc
xorb
js
or
mov
stos
inc
gs
sub
mov
movl
loopne
mov
fcoml
pushf
sbb
sar
jb
pop
popa
jg
fisubrs
icebp
sbb
sbbl
pop
ljmp
mov
cmp
jl
add
adc
pop
adc
je,pt
mov
loopne
cmp
lock
rclb
ficompl
pop
outsl
and
pop
sbb
aaa
jp
out
cltd
mov
fucomi
jb
inc
pop
mov
pop
jmp
nop
jg
and
mov
pushf
fstpt
mov
popa
fisubl
jle
addb
pop
mov
xchg
jge
xchg
cmp
adc
fsubp
mov
inc
push
cmp
cmc
lahf
aas
pop
lods
jge
push
mov
jo
ja
int
cwtl
pop
iret
ss
decb
mul
sbb
mov
fdiv
mov
mov
push
and
cmp
add
lahf
jns
jp
aas
xchg
cmp
pusha
cmp
jle
adc
fildl
sub
aaa
sbb
aaa
sbb
pop
into
mov
jns
cmp
pop
fiadds
into
popa
jle
cmp
jg
pop
xchg
data16
into
bnd
pop
mov
adc
and
pop
aas
pmullw
adc
mov
mov
sbb
xor
mov
xchg
loopne
pop
adc
adc
or
es
cmp
lret
jl
xor
aas
mov
fidivs
mov
and
pop
cld
inc
daa
inc
mov
das
inc
sub
pop
aas
ss
mov
pop
mov
fistpl
sbb
decb
xor
jno
dec
ja
nop
push
cmp
into
mov
pop
sti
adc
mov
add
ljmp
cmp
neg
jg
mov
cmpsb
js
fdivrl
pusha
jae
mov
negb
cmp
mov
pop
popf
add
cli
sub
adc
andl
int3
inc
call
lcall
pop
mov
jle
fwait
in
mov
ds
pop
xchg
pop
test
popa
popa
js
push
mov
add
xchg
jle
jle
sahf
cld
dec
pusha
fcmovnu
dec
mov
dec
cmp
mov
ljmp
push
stos
mov
jg
cltd
aaa
cwtl
or
fwait
mov
mov
jp
cli
fwait
dec
inc
fisubrl
mov
pop
sub
add
sbb
lea
mov
shrl
mov
cmpsb
pop
mov
and
mov
aas
cmp
pop
sbb
pop
inc
pushf
cmp
add
fildl
cmc
pop
dec
inc
add
jnp
pop
lock
dec
cwtl
pop
pop
inc
outsb
rcrb
pop
jge
mov
mov
in
fwait
mov
sbbb
jl
pushf
std
pop
std
pop
sbb
xchg
mov
pusha
jl
push
jle
and
pushf
pop
mov
push
sahf
dec
ss
push
mov
ja
add
pop
sti
dec
push
jp
xor
lahf
dec
mov
inc
mov
jle
xchg
ficomps
les
fcom
sbb
bound
cld
pop
mov
lods
insl
cmp
push
pop
xor
pop
aas
mov
js
adc
fcompl
and
mov
cmp
push
loop
sbb
push
int3
jl
jge
jo
ficoml
push
push
leave
sbb
iret
push
popa
sbb
rorl
gs
cmp
sbbl
bound
push
lahf
pop
sbb
and
and
cmp
ret
mov
xchg
int3
cltd
cmp
hlt
xchg
fdivl
jnp
icebp
into
sbb
xor
cmp
cmp
cltd
inc
jns
add
and
cmp
out
stos
lret
sbb
jg
cmp
pop
jns
sahf
mull
fsts
sarl
push
inc
mov
jge
inc
outsb
inc
mov
mov
push
push
sbb
cmp
sbb
mov
mov
jns
movhlps
popa
sahf
in
xchg
stos
je
dec
pop
jle
in
cmp
loopne
push
cmp
inc
lret
pop
or
pop
cmpl
lret
sarl
sarb
sbb
mov
out
mov
push
push
fwait
clc
jp
push
mov
sub
pusha
sbbl
inc
cmp
dec
pop
or
sarb
jnp
inc
aas
js
mov
push
sarl
pop
into
sbb
jl
aad
sbb
fists
inc
cltd
mov
and
cmp
lods
inc
addr16
sbb
fdivrl
jp
pop
push
push
cmp
jo
or
cmp
dec
mov
push
pop
fs
fdivrp
pusha
or
pop
mov
lcall
pop
mov
jge
mov
pop
xchg
push
jle
pusha
sub
cmp
adcl
pop
pop
fistpll
pop
push
das
pusha
movsl
insl
sahf
insb
lahf
das
push
inc
jp
scas
pusha
jg
sbbb
ret
pop
scas
adc
cmp
out
dec
aad
dec
ds
pushl
inc
cmp
cmp
fcomi
cli
push
cmp
xchg
sbb
inc
mov
sbb
fwait
xchg
mov
sbb
mov
mov
jle
out
push
xor
xchg
jp
cmp
lcall
mov
sahf
popw
test
mov
sbb
jg
dec
ficomps
cli
adcl
push
pop
sub
std
lret
fnstcw
clc
shrl
dec
dec
loopne
pop
pushf
or
sub
pop
add
aas
xchg
jle
pushl
mov
xlat
js
or
bound
sbb
mov
pop
mov
mov
cmpsb
mov
sbb
fimull
cmp
mov
cmp
adc
pushf
or
outsb
pop
push
inc
mov
pop
pop
xchg
js
clc
loopne
sbb
pop
mov
lret
cmp
loopne
cld
data16
mov
js
adc
mov
jge
cmp
inc
xor
jl
cmp
idivl
loopne
cmp
into
mov
sbb
mov
cmp
add
je
fwait
mov
sti
jae
sbb
sub
cmpl
sahf
pop
pop
jle
push
fidivrl
jl
xchg
aad
mov
xor
cmp
pop
mov
push
and
mov
and
aas
sahf
call
scas
in
imul
orb
rcrb
mov
fcomps
cmp
dec
mov
negb
pop
cmovno
sbb
xor
cmp
inc
fcmovbe
push
fsts
cwtl
cmp
mov
jnp
or
inc
inc
je
jge
mov
and
fwait
mov
mov
out
dec
ljmp
inc
pop
cwtl
cmc
movsl
ret
sbbb
dec
fidivs
or
cmp
cmp
pop
mov
cmp
mov
out
in
cli
jo
mov
aad
push
dec
test
andl
icebp
dec
or
xchg
cld
cli
pop
jne
lds
adc
faddl
fwait
popa
pop
mov
and
je
adc
enterw
fistpl
jg
stc
pop
loopne
pop
cmp
jl
push
int3
mov
fdivrl
inc
cld
add
repnz
or
xor
cmp
ficomps
cmp
pushf
test
neg
dec
add
add
dec
pop
cmp
inc
mov
repnz
or
adc
outsb
pop
xor
mov
mov
ss
les
push
pop
rolb
adc
jg
dec
in
stc
fistpl
sbb
pop
mov
mov
loopne
push
cmc
sbb
int
rcrl
dec
es
mov
xor
lahf
mov
mov
cmp
inc
sbb
lds
or
sbb
push
inc
dec
xchg
js
lahf
pop
sub
std
das
jge
jb
lcall
inc
jnp
mov
fbstp
lahf
hlt
and
push
cmp
inc
cmp
mov
popa
dec
mov
sbb
sti
sub
incl
push
adc
and
fwait
sbb
jle
cs
push
sbb
in
addl
xchg
fdivrs
xchg
push
mov
inc
mov
cwtl
pop
mov
out
fistl
mov
fists
lcall
push
sbb
inc
sti
cmp
stos
and
cmp
pop
enter
lret
cmp
mov
je
push
jb
pusha
lods
addb
sbb
sarl
pop
cmp
cmpsl
sbb
addr16
cmp
pop
icebp
jmp
incl
fistpll
movb
dec
or
xor
cmp
sbb
mov
push
adc
rclb
fidivrl
xor
sbbl
ss
inc
popa
mov
jl
cmp
sbb
sbb
aad
pop
into
xor
aaa
push
mov
jg
rolb
xchg
ljmp
jmp
fwait
and
cmp
sbb
adc
clc
pusha
xchg
stos
sahf
fisubrl
pop
cs
mov
dec
mov
cmp
adc
clc
add
mov
sbb
fcomps
pop
mov
jl
outsb
loopne
lods
fmul
xchg
repnz
mov
mov
inc
cld
mov
push
cmp
sti
add
mov
stos
out
pop
aaa
outsl
ja
insl
js
mov
cld
pusha
mov
popa
pop
dec
es
int3
jge
xor
sbb
filds
pusha
pop
out
cmc
xor
xchg
xor
mov
jbe
cli
jmp
cmp
imul
dec
cli
cmpb
adc
mov
fwait
jp
popw
inc
shlb
psrld
cmp
jmp
inc
out
lcall
inc
fistl
inc
shlb
pusha
pop
push
sbb
inc
pop
push
fstpt
jl
mov
inc
dec
adc
rcr
mov
cmp
mov
add
test
dec
sbb
loopne
and
sahf
pop
adc
scas
aad
pop
mov
lock
dec
dec
mov
in
sti
cmp
jp
inc
aaa
jbe
sbb
fmuls
fcmovnb
enter
jg
cmpsb
mov
mov
lahf
loopne
xchg
popa
sbb
pop
adc
pop
xlat
pop
pop
fwait
shrb
jp
pop
mov
mov
les
adc
mov
mov
cmp
int3
hlt
ficoml
cmp
leave
or
cmp
and
pop
jg
idivl
sahf
jge
mov
inc
mov
jp
push
cmp
add
sbb
pop
or
arpl
movsb
daa
jge
push
sbb
icebp
imul
cmpl
insl
sub
inc
sbb
push
popa
mov
adc
jae
fimuls
cli
sbb
incl
addl
rcrb
push
lcall
mov
xor
clc
shlb
pop
pop
lcall
pushf
cli
pop
push
iret
pop
mov
dec
add
call
fistpll
sti
sahf
pop
pop
dec
dec
aas
jge
inc
incl
xchg
pop
push
incb
neg
pushf
into
jp
lret
jb
ret
gs
cmp
loopne
mov
imul
xchg
fiadds
and
popa
pop
pop
cmp
cmp
push
mov
mov
aad
push
or
jae
jl
sbb
je
lcall
popa
fadd
mov
stc
mov
hlt
popa
sbb
adc
jge
cmp
sti
pop
in
mov
js
sub
mov
mov
pop
and
xor
inc
call
mov
or
fstps
pop
adc
ljmp
dec
mov
mov
repz
sahf
mov
jle
sbb
adc
push
sub
pushf
mov
sahf
cmp
shlb
mov
fcmovnu
testb
inc
js
jnp
fisubs
dec
hlt
hlt
inc
hlt
in
stc
fdiv
sub
repz
add
mov
pop
int
sbb
jl
xor
cld
inc
rcr
and
fiadds
pop
push
sti
call
pusha
jbe
je
aas
jno
cmp
push
push
pusha
fistpl
ficompl
lds
jge
cmpsb
scas
jmp
popa
jl
or
pop
ficomps
inc
pop
je
push
fists
pop
mov
repnz
sbb
mov
inc
lahf
pop
pop
andb
pop
xor
mov
das
xorl
stos
cwtl
call
push
fwait
pop
inc
pop
mov
push
mov
mov
xchg
inc
pop
and
fwait
loope
in
mov
mov
jg
bound
mov
mov
pusha
loopne
in
and
cmp
jg
js
cld
mov
lds
mov
lret
mov
pop
cmp
or
dec
loopne
popa
and
dec
jle
orl
fdivrs
js
je
mov
adc
pop
loopne
rolb
js
mov
negl
dec
loope
idiv
pop
and
cwtl
cmp
loopne
push
mov
jne
inc
mov
in
mov
mov
fistpll
lret
int3
pop
inc
cmp
sti
cmpb
pop
dec
in
mov
push
outsl
pop
mov
lret
call
repz
and
dec
sub
stc
mov
sahf
filds
sbb
ss
inc
mov
aas
inc
push
pop
cmp
push
mov
andl
gs
xor
mov
insb
pop
push
les
mov
cmp
mov
pop
cmp
jg
fwait
sbb
pop
jnp
mov
ud0
adcb
outsb
cld
inc
cmp
mov
fistpll
xchg
sub
jge
push
and
sti
mov
stc
jnp
incl
mov
ficomps
pop
test
xchg
pop
xorl
adc
cmp
pop
xchg
mov
adc
adc
dec
popa
and
gs
inc
cmp
add
adcl
fdivr
pop
dec
mov
repz
mov
cmp
pushf
dec
adcl
cli
sbb
jnp
cwtl
sbb
pop
and
sbb
cmp
jl
nopl
cmp
or
jmp
mov
mov
mov
pop
dec
cli
cli
pop
mov
pushf
outsb
je
dec
adc
mov
repnz
je
xchg
add
xchg
pop
or
push
inc
pop
mov
pop
es
mov
aam
pushf
cmpb
fisttps
rol
mov
in
mov
xchg
pop
sti
scas
insb
es
addl
cld
jg
sbb
cli
jge
or
sar
jle
pop
inc
pop
adc
das
push
mov
mov
leave
adc
push
sbb
jmp
adc
sbb
sbb
aad
daa
mov
orps
dec
and
inc
jp
aas
fwait
pop
loope
jae
jg
sahf
or
shll
cmp
lea
push
mov
mov
jmp
add
inc
cmc
jl
sti
lds
add
lahf
sbb
mov
leave
fistl
shrl
mov
cmp
jle
in
add
xchg
idivb
pop
lret
pop
jb
mov
ret
mov
icebp
cmpb
mov
mov
inc
mov
clc
cltd
cmp
pop
xchg
lret
fistps
and
xchg
pop
adcb
and
pop
roll
adc
pop
clc
xchg
push
cmpb
add
cmp
mov
sbb
add
lret
loopne
push
inc
jg
stc
ret
loop
orb
or
push
repz
mov
ljmp
add
inc
fdivrl
clc
sarb
push
jle
dec
jo
sbb
push
in
loop
fsubl
popa
xchg
lds
mov
cmp
pop
inc
pop
es
push
bound
push
pop
jp
mov
pop
push
add
mov
dec
inc
mov
dec
sarl
sbb
pop
mov
inc
inc
sarb
or
mov
jnp
pusha
mov
jne
lds
and
adc
xchg
dec
dec
lret
stos
pusha
push
or
pop
stc
dec
mov
aas
pop
arpl
stos
or
inc
mov
cmp
arpl
jge
mov
mov
lahf
iret
mov
hlt
sbb
sbbb
add
cltd
mov
jge
lock
cmp
adc
jg
jge
adc
aas
inc
leave
js
dec
mov
adcl
shll
or
cmp
nop
xchg
cmp
dec
or
push
jle
pushf
mov
pop
leave
lret
xchg
div
mov
andb
into
pop
rolb
cmp
sti
imul
lock
mov
cld
stos
and
mov
cmpl
pop
cmp
fdivrl
cs
add
adc
mov
cmpsl
out
pop
repnz
jmp
push
dec
sarb
jecxz
rcrl
jno
jg
sbb
js
mov
mov
adc
sub
fnstcw
fwait
ret
hlt
gs
push
pop
cmp
in
in
inc
jo
inc
mov
push
mov
xor
jge
popf
das
pop
inc
xor
in
shlb
shlb
pusha
stos
cmpsl
pop
or
pop
and
xchg
pop
sbb
mov
cli
sahf
out
and
clc
and
cmp
dec
js
sub
pusha
sub
and
mov
ljmp
aas
cmp
mov
enter
mov
sbb
pop
js
clc
cwtl
inc
fadd
cmp
cmp
xchg
sti
jmp
js
inc
dec
jnp
push
fdivs
pop
sbb
adc
je
dec
sbb
ficomps
mov
outsb
jnp
movb
rcrl
shrl
enter
dec
mov
mov
pop
jge
fisttps
pop
dec
sub
mov
and
xchg
cld
jl
adc
lahf
fwait
popa
dec
jns
mov
mov
inc
out
out
insl
sbb
mov
mov
sbb
mov
fadd
add
cmp
push
cmp
sti
mov
add
sub
nop
aaa
gs
pusha
xor
inc
aaa
dec
pusha
pop
rcr
ds
lcall
es
iret
and
std
fistpll
add
push
lods
jg
loopne
and
inc
scas
or
int
inc
in
out
into
sti
cld
mov
mov
adc
xor
and
push
pop
fistpll
sbb
sub
pop
cmp
jge
leave
out
push
pop
cmp
xchg
scas
leave
hlt
pop
jb
inc
dec
sbb
dec
cmp
pop
cmc
pusha
pop
inc
mov
mov
lret
jno
xchg
sti
mov
mov
mov
popa
xor
or
pusha
xor
in
out
jae
cmp
mov
pop
mov
push
sahf
ds
cmp
insl
inc
sar
lcall
inc
cmp
mov
mov
pop
inc
pop
inc
inc
jge
inc
aas
mov
cld
pop
xchg
cwtl
pop
add
js
or
pop
hlt
jb
loopne
jb
jecxz
add
pop
adcb
adc
cmp
cli
sub
iret
fistps
or
and
dec
shr
dec
lret
lcall
pop
mov
inc
lcall
mov
dec
leave
mov
cmp
push
push
pminub
stc
pop
pop
mov
mov
inc
popa
sti
mov
pop
repnz
lahf
fistpll
mov
dec
andl
xorl
cmp
and
push
add
stos
inc
aas
adc
pop
mov
orb
pushf
pop
rcr
pop
pop
fadds
ja,pt
mov
pop
sbb
pushf
jp
ds
push
js
inc
sub
les
bound
pusha
into
enter
push
cmp
dec
cmp
pop
lcall
sub
out
mov
jnp
je
push
add
pop
lahf
dec
cld
jne
cmp
inc
cmp
pop
push
fistps
loopne
test
cli
shlb
pop
sbb
leave
jae
pop
mov
inc
jg
rcrb
std
mov
mov
lods
inc
mov
and
loopne
inc
in
pop
sahf
push
sti
xor
hlt
clc
out
or
adc
mov
cmp
addb
fwait
jg
jp
inc
sti
add
je
pop
mov
icebp
cmp
mov
mov
in
cmp
filds
mov
cld
subb
popf
pop
adc
inc
cmpsb
mov
mov
fcompl
mov
sbb
fdivrs
sbb
loopne
add
mov
movsb
sbbl
hlt
cld
sbb
mov
mov
mov
pop
in
inc
add
mov
fdivrs
inc
mov
inc
add
daa
cmp
cwtl
xchg
rcrl
pop
xor
repz
add
add
dec
fwait
jnp
dec
jl
shll
sbb
cmp
sarb
mov
sub
outsb
inc
pop
cmp
mov
test
jge
adc
pop
leave
cmp
mov
ret
dec
into
sbb
call
or
mov
sbb
hlt
push
shll
cmp
outsb
scas
out
popa
or
ss
jge
inc
pop
dec
mov
pop
je
mov
ljmp
xor
sti
dec
dec
jle
call
sarb
ja
sbb
cmp
jnp
mov
jge
or
cmp
jl
sbb
push
cmp
mov
jo
ds
fldt
jnp
mov
cmp
mov
std
pop
aas
subb
orb
scas
cltd
movsl
jnp
cmp
ret
das
fwait
js
pop
sbb
jnp
sbb
iret
ficomps
mov
repz
ljmp
sub
outsl
test
push
sahf
lea
and
roll
fwait
cmp
xchg
mov
imull
cmp
pop
pushf
cmovo
cmp
out
ja
scas
pop
js
pop
fdivrl
pop
movsb
faddl
xor
ret
cltd
mov
outsb
mov
pusha
push
movd
sahf
cwtl
mov
dec
xchg
add
pop
jbe
adcb
pop
outsb
jo,pt
cmp
mov
pop
jp
jle
icebp
mov
je
out
clc
dec
cmp
scas
inc
inc
sti
add
rcrl
push
mov
mov
cmp
pop
lahf
mov
lds
cmp
xchg
sub
cmpl
jge
jp
jle
cmp
or
mov
mov
incb
mov
or
pop
jl
pusha
sbb
fcomps
pop
push
push
mov
mov
cmp
mov
subl
sarl
xchg
fiadds
repz
mov
ret
jnp
mov
xchg
xchg
inc
pop
fdivs
sbb
inc
ret
mov
nop
sbb
test
ljmp
pop
sbb
mov
xor
or
test
jne
sbb
xchg
pop
test
stos
xor
stc
inc
cmp
adc
xor
push
xchg
rcr
js
sbb
mov
cli
dec
cwtl
pop
pop
into
pop
or
ljmp
mov
rcll
mov
repnz
pop
fidivrl
and
jno
shll
mov
scas
mov
pop
cwtl
sbb
push
aas
fdiv
mov
sahf
roll
mov
xor
add
popl
cs
push
jge
call
xor
mov
adc
mov
cld
popa
mov
sbb
or
nop
sbb
pop
adc
in
or
lds
mov
rcr
lahf
cmp
rcrb
fistpll
cmp
loope
lret
pusha
aad
js
jp
int3
cmpsl
cltd
adc
or
push
mov
pop
jg
pushf
inc
cmp
mov
cmpsb
mov
sbbl
jb
sbb
pop
fs
inc
pop
sbb
cltd
dec
cmp
sarb
sub
pop
cmpb
pop
adc
jnp
cmp
jb
pop
fdivrs
pop
les
insb
inc
jge
cmp
cmp
idivb
aam
cmp
dec
shll
sbb
ljmp
idivb
jge
jp
cmp
mov
pushf
sbb
mov
mov
push
inc
mov
cld
pop
pop
and
lcall
out
adc
fistpll
loope
sarl
xor
xor
pop
sbb
decl
fdivrp
dec
pop
mov
jb
sahf
mov
cmp
fiaddl
mov
out
in
mov
out
push
pop
hlt
ficompl
xchg
sub
sbbb
push
or
fcompl
pop
and
jp
mov
fstpt
jl
jge
lahf
jmp
push
mov
mov
dec
les
pusha
dec
rclb
cmp
adc
je
xchg
jl
stc
jnp
cmp
pop
fcoml
and
sbb
loopne
mov
jle
fdivr
arpl
adc
jle
repnz
sbb
clc
inc
push
sbb
ret
inc
fs
addb
jle
cmp
rorl
push
sbb
dec
fstpt
aad
adc
ret
jb
pop
xchg
cmp
jnp
jg
sbb
sbb
cmp
pop
add
pushf
mov
pop
mov
pop
fistps
cmp
sahf
push
dec
jnp
incl
pushf
mov
je
push
push
cwtl
inc
mov
lcall
fidivl
jp
pop
cmp
inc
mov
mov
xor
jnp
sbb
nop
cmp
cmpsl
adc
ds
popf
and
jp
fistps
popa
ds
int3
or
mov
jnp
sbb
pop
mov
jo
shrb
scas
mov
or
jg
push
lahf
inc
shrb
fdivp
movsb
mov
arpl
adc
inc
sbb
push
jbe
jg
mov
add
dec
and
loope
mov
lcall
add
pusha
sbb
lcall
pop
lahf
cmp
jp
ds
cmp
inc
sub
xchg
add
mov
add
lcall
adc
inc
lret
sbb
lcall
jnp
inc
jno
inc
inc
fsubp
mov
adc
pop
mov
mov
in
sbb
pop
pop
or
jno
cmp
fistps
inc
push
lock
mov
pop
div
or
pop
movsl
idivb
decb
jae
aad
fistpl
jne
jns
sbb
mov
cmpsl
sbb
fstpt
sahf
rcrb
fcmovu
pop
pop
negb
ss
cmp
push
cwtl
adc
fdivp
lds
scas
pop
lds
sbb
lcall
sarb
ds
pop
cmp
adc
pusha
jb
pop
mov
daa
inc
pop
fs
je
je
hlt
test
pop
mov
jg
sbb
js
call
loopne
mov
dec
pop
mov
testb
mov
loopne
shl
shlb
push
pop
sti
ror
cmp
xor
xchg
mov
std
mov
cmp
clc
imull
xchg
cmp
add
adc
movsl
xchg
cld
xor
sbb
lds
cmp
and
lahf
sub
pop
xor
jae
pop
nop
pop
rcrl
mov
loopne
mov
xchg
xchg
aas
ret
cmc
str
and
clc
sbb
imul
cmc
jmp
nop
rcrl
loop
mov
repnz
push
pop
stc
xor
cmpl
in
repz
lret
xor
pusha
xchg
mov
push
adc
mov
fbstp
mov
dec
movl
stos
cmpsb
enter
loop
test
jbe
push
bound
and
std
aad
cwtl
mov
fwait
rcl
fistpl
inc
pop
mov
jg
pop
dec
mov
push
jl
mov
repnz
jne
pop
inc
xchg
mov
push
inc
pop
imul
insl
cld
sbb
andl
push
push
clc
mov
je
shlb
pushf
inc
mov
aas
rorb
pop
jl
sahf
rolb
fcoml
orb
jp
mov
xchg
jge
cmc
ljmp
fisubrl
sbb
lret
cltd
cmp
xor
sbb
add
sbb
mov
fcomp
lcall
rolb
scas
aad
test
hlt
inc
jmp
cmp
push
xorl
jg
jle
loop
pop
xchg
iret
pop
sbb
adc
inc
xchg
icebp
sbb
pusha
nop
pop
out
push
fmull
out
xorl
jnp
je
cmc
test
mov
jle
pop
lds
pop
cmp
dec
pop
pop
pop
cmp
cmp
mov
mov
js
rolb
cmp
cld
push
and
and
ficomps
sbb
mov
jnp
adc
and
mov
mov
cli
bound
jns
dec
dec
or
cltd
mov
fcomps
test
lods
fisubrl
add
loop
bound
sarl
stc
cmp
cmp
js
fmull
and
push
pop
xchg
addr16
fsub
ret
imul
jnp
dec
mov
jg
lret
pushf
fdivrl
or
mov
xchg
jle
pop
mov
and
jl
mov
dec
pop
into
mov
push
pushf
mov
pop
jge
stc
shlb
jnp
mov
xor
jg
fistps
cmp
pushf
rcrb
idivl
lret
pop
xchg
dec
repnz
pop
or
arpl
mov
cmp
xchg
mov
rcrb
push
cmp
mov
mov
sbb
jne
pop
outsb
xor
neg
cwtl
sub
mov
pushf
int3
jnp
and
bound
cmp
sbb
cli
aas
mov
fidivs
fisubl
lahf
sbb
ror
int3
cld
jnp
sub
sbb
mov
cmp
clc
pop
test
pop
xchg
jno
shlb
add
pop
mov
sub
pop
fcompl
inc
cmp
pop
cmp
test
fldt
fistpll
mov
cwtl
jne
mov
pop
mov
pusha
cmp
sbbb
fsubr
stc
roll
fdiv
outsb
fstpt
pop
popa
lods
or
or
sahf
cmp
pushl
into
fwait
jp
sbb
cld
shrl
lea
mov
dec
out
inc
and
add
sbb
sub
sarb
stos
mov
cmp
xchg
adc
jle
pop
fwait
xchg
mov
pop
inc
test
pop
add
mov
test
or
push
pop
dec
pushf
pop
dec
popf
inc
daa
mov
pop
imul
outsb
add
inc
jg
mov
arpl
ficomps
ficompl
or
cmp
mov
xor
sbb
mov
dec
incb
fildl
popf
popa
push
cmp
or
xchg
ljmp
ljmp
jp
pop
add
and
jle
enter
mov
inc
jo
out
adc
imul
add
inc
int3
sub
jge
movsb
adc
cld
mov
out
xor
sub
mov
lret
cli
fiaddl
mov
cmc
sbbb
pop
add
sbbl
pop
rcrb
pop
je
lret
mov
addb
pop
or
xchg
addl
add
lcall
jnp
cmp
lret
add
mov
inc
push
xchg
mov
js
out
cmp
cmp
mov
jle
fistps
cmp
lcall
adc
jnp
xchg
mov
inc
push
sbb
fdivp
or
insb
push
pop
iret
lcall
cmp
fsubrp
adcl
sahf
push
and
mov
sbb
jp
pop
cmp
stc
fdivr
dec
outsl
mov
push
push
decl
cwtl
sub
loopne
cmpl
sarb
ficompl
push
sti
dec
add
js
inc
sarl
jns
dec
cmp
hlt
sbb
adc
mov
pop
enter
fbstp
xchg
je
dec
sbbb
xor
sti
and
xchg
and
pop
shl
call
xchg
fwait
inc
lods
cli
popa
xor
or
clc
jbe
iret
pop
ret
insb
jl
push
ret
fadd
add
sub
mov
jg
jle
cmp
pop
dec
jb
pusha
int
fwait
ret
out
xchg
sbb
adc
aad
jb
mov
cwtl
daa
ljmp
lcall
jmp
ds
mov
or
and
push
and
and
sets
fcmovu
dec
jno
cld
jns
pop
daa
aas
ret
inc
mov
cli
loopne
pop
mov
scas
and
pop
lods
fwait
jbe
jb
mov
fdivs
add
xchg
sub
fwait
jle
xchg
mov
pop
fmuls
jg
and
xchg
pop
mov
add
roll
test
sbb
inc
ljmp
sbb
mov
pop
and
popa
and
stos
cwtl
lahf
out
adc
icebp
push
rcrb
jb
pop
and
jge
mov
mov
leave
sbb
pop
mov
sar
mov
mov
enter
loope
add
lds
inc
dec
sbbl
fdivrs
jle
loopne
aas
arpl
and
jp
popa
or
dec
in
cmp
mov
stc
stc
sbb
lds
repnz
icebp
push
call
adc
cmp
cmpb
sub
inc
jp
jae
fcomp
lcall
ss
push
push
jg
cmp
jecxz
aaa
push
arpl
inc
mov
cmp
and
fcmove
or
repz
aas
outsl
lcall
pop
idiv
sub
fs
cmp
sub
inc
incb
or
xchg
mov
jl
stos
cmp
mov
into
mov
inc
mov
pop
jge
pop
and
push
adc
cmp
pop
jge
mov
gs
mov
repz
roll
add
je
jl
inc
ss
mov
popf
jle
outsb
pop
mov
clc
mov
mov
sub
adc
adcb
pop
bound
mov
pushf
pop
inc
pop
lds
cmp
mov
inc
jmp
jl
cmp
sti
sbb
xchg
arpl
inc
mov
adc
js
xor
inc
sub
aad
loopne
xchg
or
outsb
mov
pop
scas
sbb
test
jno
push
arpl
push
cmp
cmpsb
cmp
pop
cmpb
leave
pop
add
loop
jl
gs
xchg
xor
pop
call
push
sub
test
jp
ljmp
lcall
push
push
dec
lahf
fistps
jg
mov
lock
dec
idivb
inc
adc
rorl
jb
lcall
cli
jo
jp
inc
mov
outsb
cmp
outsb
and
out
mov
cmp
mov
sti
cmp
pop
ret
push
pushf
fcoms
mov
xor
mov
xchg
cli
jle
cmp
pop
lcall
push
sbb
mov
mov
pop
hlt
aas
sbb
leave
jb
loopne
and
aaa
mov
fcomps
mull
lahf
pop
jg
rcrl
lds
adc
pop
ja
into
sbb
inc
sahf
shlb
shlb
pop
mov
push
shl
inc
arpl
sbb
fisubl
pop
mov
out
jae
shll
cmpb
sbb
sbb
sbb
and
cmp
xor
pop
jb
mov
lahf
shlb
jns
jno
cmp
and
cmp
push
pop
sahf
mov
pop
mov
xchg
pusha
ret
stos
jg
push
add
fnsetpm(287
add
jnp
xchg
sbb
mov
bound
pop
das
sub
sahf
fidivs
adc
cmp
jp
mov
clc
and
dec
add
cmp
pop
test
lock
lods
sahf
in
addl
mov
test
in
push
xchg
loopne
scas
pop
mov
lret
mov
mov
sahf
sti
and
ret
pop
roll
xchg
sbb
jl
movsb
cmp
inc
jno
sub
cmp
cmp
fdivl
dec
fcomps
adc
clc
inc
jb
fidivrl
js
add
sarb
inc
mov
dec
cmp
addr16
mov
mov
jg
icebp
and
mov
mov
or
inc
inc
cmpsl
das
stos
dec
sti
fcomps
cmp
pop
xchg
aas
lods
and
mov
aas
rolb
mov
cmp
or
xchg
sub
mov
sbb
jb
pop
pop
sub
std
lcall
xchg
cmp
fdiv
cld
mov
out
pop
xchg
negb
shrb
repz
fstpt
aaa
icebp
scas
out
mov
xor
sahf
pop
pusha
sub
sbb
cmpsl
jecxz
mov
mov
cmpsl
fsubl
rol
pop
popa
in
lahf
sub
sbb
and
fisubrl
je
scas
xor
les
addr16
mov
jge
add
inc
sbb
outsl
and
jp
arpl
dec
rcr
cmc
filds
dec
sar
jg
loopne
icebp
pop
mov
mov
inc
rorb
cmp
fdivrl
dec
call
mov
adc
dec
in
add
mov
and
pop
cmp
adcb
fists
adcb
pop
rcrb
aaa
inc
cmp
adc
xchg
popa
fwait
pop
push
sbb
pop
jl
ret
bound
clc
cmp
mov
push
sbbl
sbb
push
cmp
mov
pop
cli
stc
ja
pop
pop
fadds
pop
xorb
pop
jbe
jp
stos
mov
dec
mov
xlat
mov
dec
jp
cmp
mov
pusha
pop
xor
sbb
shll
sahf
adc
jle
sbb
neg
mov
push
inc
gs
mov
mov
lods
fbld
cmp
mov
jp
mov
jge
popf
mulb
aaa
inc
inc
push
add
cmp
mov
or
mov
adc
pop
fidivrs
jle
pop
cmpl
jg
and
jle
xor
sub
nop
mov
pushf
pop
cmp
pusha
nop
pop
js
mov
out
mov
in
dec
pop
inc
cmp
push
popa
xchg
mov
fistpll
mov
ss
jge
fcmovb
mov
push
pop
sbb
mov
jb
push
sti
jl
pop
mov
cmp
jnp
sbb
mov
cltd
cwtl
mov
pop
cmp
mov
fwait
dec
fsub
inc
mov
aas
pop
push
test
pop
ljmp
dec
jns
pushf
mov
popa
mov
jo
sub
mov
cld
pop
sar
xchg
loopne
aas
pop
lahf
jno
js
sbb
ljmp
push
fsubl
pop
xchg
ficompl
iret
jnp
ljmp
fwait
scas
lret
cmp
dec
adc
add
imul
lods
negl
mov
aad
imul
inc
das
jo
fbld
popa
adc
fsubp
mov
fwait
js
in
adc
inc
xor
pop
mov
mov
xchg
sti
xor
fwait
mov
popa
fistpll
sub
pusha
pop
adc
mov
adc
xchg
mov
pop
xor
fdivrs
inc
jnp
pusha
hlt
jle
je
push
mov
fistps
dec
push
jge
out
cmp
clc
mov
aad
cmp
fadds
sti
cmpsb
shlb
adc
out
jp
push
add
pop
cmp
push
mov
mov
fnstcw
adc
add
int3
adc
nop
dec
mov
sub
inc
cmp
push
cmp
rcrb
mov
scas
xchg
test
xchg
out
inc
cmp
clc
pop
aas
aaa
pop
xchg
xchg
add
jns
mov
jbe
fisubrs
ret
scas
mov
sbb
fildll
jp
cmp
rcrl
cmp
fidivl
add
sbb
fstpt
jl
jne
jmp
pop
push
stc
fiadds
pop
and
jg
out
sahf
or
mov
inc
and
jnp
xchg
mov
and
lcall
adc
pop
js
sbb
mov
add
lret
push
sbb
push
stc
stc
imul
cmp
js
push
mov
mov
pop
hlt
inc
adc
pop
outsb
cld
or
clc
fwait
jnp
sub
push
xchg
xlat
ror
mov
cmp
jl
cmp
inc
and
dec
addb
inc
lock
push
inc
rclb
sbb
ljmp
cmp
dec
sbb
pop
mov
inc
stos
cli
insl
fcompl
pop
adc
pusha
xchg
jp
stos
sbb
push
inc
cmp
pushf
pop
scas
fdivrs
xchg
addr16
xchg
aas
adc
aad
or
test
adc
adc
pop
sbb
sti
pop
cmp
mov
negb
fisttps
xchg
pop
sti
fsubs
pop
pop
popa
push
mov
pop
ficompl
jns
fdiv
lahf
mov
xchg
rcll
sarb
jle
jnp
lret
lahf
jp
in
jge
mov
pop
sti
sub
into
mov
fmull
push
cmp
mov
lcall
xchg
aas
inc
enter
jnp
js
jl
lea
pop
dec
sbb
sti
push
jge
add
jle
rclb
jl
dec
cmp
aas
out
pusha
jg
mov
cmp
jle
xorl
inc
fdiv
fidivrl
fdivrl
sti
xorb
das
mov
jle
mov
pop
cmp
inc
jp
loop
sti
cmp
ss
fisubrl
pop
pop
add
sahf
scas
loop
cwtl
and
xor
mov
mov
cmp
fistpl
outsl
mov
mov
je
shl
pop
popa
bound
addb
and
jnp
std
sahf
negb
pop
cmc
jns
lcall
clc
ss
addb
cmp
push
mov
xchg
mov
pop
mov
jo
lahf
inc
cs
loopne
jbe
orl
push
fcomps
mov
cltd
adc
pushf
fstpt
mov
push
and
add
pop
sub
fists
addb
jae
inc
mov
pop
xchg
ret
enter
cli
int
mov
notb
push
fistpll
je
xor
mov
inc
push
sub
push
sbb
lahf
mov
lds
and
xor
sbb
cwtl
repz
pop
dec
sbb
xor
pop
and
pop
movl
add
cmp
pop
pusha
nop
cld
jl
cmp
dec
mov
adc
inc
cld
xchg
rolb
rol
clc
loope
pop
aad
xchg
fcmovnbe
lret
stc
inc
nop
mov
fwait
mov
jl
xchg
stc
inc
sbb
dec
inc
clc
mov
ljmp
jg
jnp
fwait
ss
jge
dec
pop
lahf
sbb
sub
cwtl
mov
popa
cld
hlt
jnp
sub
push
cmp
sti
aas
pop
or
jno
ficoms
fwait
and
sbbl
cld
aas
cmp
ljmp
sti
or
cmp
mov
mov
lahf
and
and
jmp
cmp
inc
pop
xchg
pop
mov
inc
jp
das
sbb
sbb
mov
cli
js
jo
cmp
fiaddl
mov
loop
cmpsl
push
cmp
mov
mov
lea
cmp
sbb
lret
clc
lods
int3
inc
iret
add
lds
inc
in
in
pop
fs
mov
dec
aaa
xchg
inc
popa
inc
mov
imul
popa
inc
adc
pop
cltd
jle
pop
adc
cmc
mov
push
popa
fistpl
cmpb
push
sarb
pop
and
dec
push
dec
cltd
push
cld
mov
sbb
xor
ret
push
xchg
jl
sbb
cmp
push
int3
iret
or
cmp
cld
mov
pop
sbb
pop
fdivs
out
push
adcb
cmp
stos
into
mov
cmp
test
mov
pop
scas
inc
and
sbb
mov
cmp
pop
aas
mov
jmp
call
inc
xchg
add
fdivr
mov
and
push
and
cwtl
iret
inc
pushf
into
sahf
inc
pop
out
mov
sti
mov
xor
jl
dec
das
pop
subl
rcrb
xchg
mov
repnz
sbb
dec
push
cmp
jmp
pushf
int3
lahf
imul
pusha
mov
adc
rol
cli
mov
inc
cmp
add
adc
xor
pushf
pop
fidivrs
lcall
loopne
sbb
sub
and
outsb
jae
sbb
sbb
and
loop
dec
fcompl
fdivrs
xchg
xor
mov
aas
push
leavew
in
lahf
out
sti
out
cmp
jl
xor
popa
loopne
jnp
cmp
in
push
add
stos
insl
pop
cmp
pop
adc
push
mov
pop
jle
add
cmp
mov
inc
inc
icebp
out
pop
and
fisubrl
shlb
push
sahf
ror
xchg
repnz
fwait
xchg
inc
mov
push
data16
push
dec
sbbl
fdivrl
int3
adc
mov
loopne
pop
add
cmp
sbbl
mov
sub
aas
lahf
addr16
outsb
paddb
pusha
pop
mov
jge
pop
mov
lahf
dec
ljmp
cmp
mov
adc
fdivrs
js
sahf
mov
sbb
mov
jnp
adc
and
jb
sub
cmc
divb
cmp
push
lods
xchg
sti
cli
call
sbb
or
iret
aaa
jle
fdivl
hlt
andl
mov
clc
aas
lret
sbb
outsb
cmp
dec
pop
mov
sbb
idiv
pop
lahf
pushf
push
cli
lcall
mov
jge
and
cmp
pop
xor
jg
cmp
pop
aad
push
inc
sbb
inc
mov
fdivrl
js
xchg
and
mov
jle
jl
std
adc
mov
jg
and
mov
jg
push
lea
jle
dec
mov
push
lahf
mov
pop
or
mov
push
pop
jle
in
add
jp
dec
ficoml
jns
test
pop
sahf
std
hlt
adc
or
lock
out
ds
mov
aas
ljmp
ds
test
inc
mov
fwait
jmp
pop
sti
lcall
pop
fwait
mov
pop
negb
shll
je
and
inc
pop
mov
mov
mov
sahf
mov
jle
subl
inc
mov
cmp
jns
or
push
cwtl
cmp
jg
fcmovnbe
clc
mov
lea
mov
dec
pop
jnp
mov
mov
jp
loop
loop
aad
repz
mov
lods
ret
imul
mov
je
pop
cmp
mov
mov
sti
sbbl
cmpsl
cli
add
pop
rorl
mov
stos
mov
pop
xorb
sub
inc
mov
das
mov
xchg
sbb
decl
cmp
mov
sahf
xor
mov
and
pusha
cli
pop
pop
pop
xchg
or
push
inc
jb
sbb
aas
sahf
cmp
arpl
out
lahf
xor
and
jp
rclb
mov
in
pop
sub
idivl
cmp
mov
aas
lahf
ficoml
pusha
mov
jnp
mov
jecxz
mov
cmp
inc
fbld
adc
pop
cmp
xor
cmp
jle
cmp
xchg
fisubl
shrb
lods
daa
dec
popa
pop
dec
cmp
jge
sbb
pop
fdivr
fistpll
rcl
pop
stc
push
fcomi
cmp
sahf
cmpsl
or
sbb
cmp
push
jo
fmuls
aaa
pushf
pop
out
sub
inc
add
pop
jl
jl
pop
push
orb
dec
or
js
cld
rcrl
adc
pushf
sbb
cmp
pop
ret
aad
lea
adc
aas
xchg
lea
xchg
hlt
mov
jl
lods
fcoms
dec
mov
pop
sahf
aas
filds
ds
fcompl
xchg
inc
jns
mov
mov
inc
add
insl
movb
cmp
mov
dec
jle
inc
cmp
jge
jp
cmp
inc
cltd
cmp
clc
pop
mov
jl
lret
adcb
mov
out
loop
aas
xchg
xor
enter
ret
sub
xlat
jle
cmp
fistpl
cmp
pop
sbbb
daa
jmp
push
ljmp
jge
xorb
fnstsw
and
sahf
xor
add
cmp
fstps
shl
and
xchg
popa
inc
out
push
lcall
push
dec
lret
sbbb
jns
pop
aad
leave
sarl
je
pop
idivb
pop
inc
lcall
xchg
pop
jge
jbe
in
mov
mov
fistps
cmp
popa
dec
cltd
lahf
lahf
mov
cmp
dec
xchg
mov
jae
xorl
inc
and
sub
cld
ss
jp
fwait
pop
pushf
push
jnp
xor
mov
mov
xchg
cmp
pushf
lcall
push
cmp
add
lret
test
jp
cmpsb
adc
push
es
pop
sbbb
adc
push
loopne
cwtl
jnp
cmp
popa
cmpb
jge
pop
sbbb
decl
or
fbstp
rclb
xor
cmp
cmp
xchg
inc
lcall
sbb
cmp
push
imul
pop
mov
xor
pop
loop
fcomp
pop
inc
cwtl
shlb
test
xor
mov
add
mov
and
testb
call
orb
fldl
mov
fdivrp
adc
cmp
sahf
sbb
mov
sti
pop
sbb
push
sahf
icebp
pop
cmp
cld
inc
xchg
pop
mov
jns
dec
clc
sbb
cwtl
mov
pop
cli
test
in
cwtl
sbbl
aas
pop
stos
into
fwait
test
push
mov
stos
faddl
pop
mov
mov
jno
mov
jg
inc
imul
push
or
sbb
lret
hlt
jge
xor
rclb
mull
ret
and
fists
ds
jae
outsb
shrl
push
adc
sbb
sub
sbb
stos
outsb
int
cmp
jle
and
adc
pop
arpl
inc
add
xchg
out
pop
loopne
nop
sbb
mov
sbb
arpl
rcrb
pop
adc
mov
je
fstps
std
lods
mov
je
push
pop
mov
call
mov
jg
cmp
pop
mov
cli
mov
cmp
or
xchg
mov
mov
dec
rcrb
fmulp
sub
clc
mov
push
sbb
pushl
pop
sarl
xchg
loope
jge
daa
xchg
cmp
xor
stos
jg
push
les
xchg
out
mov
pop
pop
ljmp
sbb
pop
pop
shl
pop
dec
mov
inc
rclb
and
dec
sarb
cmp
jns
ret
sbb
ret
sub
ret
and
jl
sbb
ficomps
inc
insb
loopne
cmp
push
jnp
pop
add
and
sbb
nop
pop
pusha
dec
pop
cld
popa
cmp
bound
sub
es
sub
fidivrl
icebp
dec
mov
sbb
cmp
mov
fcoms
lcall
stos
sbb
rcrb
pop
jmp
xchg
add
mov
cmc
mov
aas
push
cmp
xor
enter
je
pop
pop
mov
pop
andl
out
inc
or
repz
add
sbbb
cmp
leave
into
ficomps
xchg
push
ficompl
mov
pop
add
mov
fwait
lcall
and
push
fdivs
pusha
sbb
cmp
pushf
outsl
mov
bound
loopne
pop
fstps
dec
sub
jb
pop
cmp
inc
mov
mov
sahf
mov
movsb
push
movlps
sahf
and
mov
fistps
adc
mov
jo
pop
icebp
pushl
add
mov
aaa
cmp
test
push
pop
lcall
and
cwtl
adc
inc
dec
addb
movsb
adc
rol
sahf
ljmp
clc
pop
adc
cwtl
mov
mov
test
sarl
inc
test
jle
ret
pop
fildll
inc
cmp
inc
mov
or
adcb
dec
inc
call
lahf
cld
lds
aaa
mov
repz
fidivrs
fistps
fsubrl
mov
imul
enter
xor
in
cli
subb
mov
leave
jg
pop
dec
shlb
ds
add
add
dec
cli
jmp
inc
cmp
mov
bnd
jb
cmp
mov
pop
lret
push
clc
fstpt
pop
xchg
cmp
add
jns
cld
xchg
repz
and
dec
jb
pop
pop
cmp
jno
into
jle
inc
jp
push
cmp
call
rcll
rcrb
cli
cwtl
adc
xor
push
orb
outsb
pop
aas
mov
dec
lahf
int3
dec
notb
inc
cmp
sbb
dec
aaa
scas
and
pop
arpl
loop
jle
sub
inc
cwtl
aas
sbb
mov
sti
jae
shr
jle
mov
fs
lcall
rcrl
decb
adc
cmp
loopne
fcomps
mov
data16
call
in
js
sbbl
cs
pop
mov
pop
jo
lahf
sub
pop
mov
call
sub
dec
jo
jge
or
es
cld
shll
cmp
rcrb
cld
xchg
xor
add
cmp
shll
inc
inc
aaa
add
cmc
pop
clc
pop
fnstsw
jne
aas
jp
sbb
bound
push
pop
stos
and
hlt
sti
jl
xchg
cmp
adc
mov
sub
mov
pop
fld
ficoml
fistl
xchg
rcrb
addb
push
sahf
mov
andl
sbb
pop
daa
adc
dec
add
inc
fs
pop
lcall
pop
idivl
dec
pop
fcomps
pop
jnp
xor
rorb
mov
into
out
jo
sbb
loop
xor
sbb
and
clc
mov
aaa
faddl
fwait
sbb
inc
aad
cld
adc
cmp
dec
or
pop
cmp
jle
and
pop
mov
fwait
das
hlt
lea
jnp
jl
mov
lock
and
fwait
jno
popa
orb
add
sub
push
cmp
sub
xor
sbb
pop
sbb
inc
inc
cltd
adc
cld
pusha
ficomps
outsb
lret
add
cmp
cmp
stos
sti
jb
mov
sub
cmpsb
loopne
pop
push
cmp
pushf
push
add
jle
pop
sahf
add
add
jnp
fidivrl
push
aas
inc
ss
cmp
lock
js
inc
aam
pop
mov
ror
mov
pop
neg
inc
sub
and
sbb
adc
add
mov
popa
repnz
clc
lahf
addb
mov
js
lods
pop
mov
lds
ds
jle
mov
mov
mov
fsubs
ret
push
insl
cmp
xorl
sub
ret
pop
pop
cmp
rol
mov
aad
enter
jl
mov
cmc
rclb
push
fidivrl
jg
loopne
pop
inc
inc
push
stc
add
ret
sahf
pop
and
jl
repnz
pop
mov
cmp
negb
mov
add
negl
pop
jl
and
sbb
inc
inc
xchg
mov
pop
cld
cmpb
aad
cmc
dec
in
jnp
clc
cmp
add
mov
inc
push
and
inc
mov
inc
lret
adc
loopne
jp
fwait
jb
rcr
jo
inc
dec
test
fdivrl
repz
movq
pop
test
mov
and
imul
movl
ja
add
sbb
pop
fists
mov
fcomps
cmp
fidivl
int
jle
jle
and
dec
sbb
mov
sti
pop
and
js
movsb
fdivrs
xchg
jl
or
adc
pop
or
pop
fmull
mov
ficompl
pop
pop
mov
mov
xchg
push
mov
ljmp
jae
sti
rcl
add
adc
pop
std
sbb
mov
mov
push
or
js
clc
jle
jecxz
pop
pop
cwtl
xor
ja
ja
mov
fwait
mov
and
jg
jbe
cmp
rcrb
jno
and
jb
jnp
cmp
dec
and
hlt
sbb
loop
jl
sub
jns
pop
pop
mov
inc
mov
sbb
jnp
lahf
sti
int
hlt
cmp
fwait
sub
hlt
jle
mov
mov
pop
and
repnz
push
int3
jno
sbb
mov
rcrl
mov
mov
adc
jb
sbb
jle
xor
fiadds
outsl
mov
and
sub
cmp
or
push
fidivrs
mov
cld
sti
cmp
mov
ret
inc
mov
and
jb
sbb
loop
dec
or
into
cmp
rcrb
sahf
mov
cmp
sbb
fcoms
pop
inc
jne
pop
leave
popa
jge
subps
adc
cltd
dec
nop
pop
mov
cltd
ror
xor
mov
pusha
jge
pop
sahf
sti
sub
bound
mov
cmpsb
pop
or
sub
cmp
repnz
jge
xor
sbb
jle
xor
or
loopne
xor
push
scas
js
pop
stos
ss
and
push
repz
cmp
pop
add
rcrb
int3
lds
and
iret
sbb
jecxz
push
pop
jl
shrb
dec
sub
sbb
sub
inc
ds
pop
and
lahf
xchg
lcall
inc
int3
aaa
dec
xor
les
mov
sub
inc
js
sbb
in
and
adc
orl
insl
pop
test
sbb
out
add
sbb
xlat
push
mov
add
pop
jge
cli
pop
hlt
clc
push
cmp
lcall
fiaddl
dec
in
pop
jnp
sbb
data16
ss
pop
xchg
pop
pop
sub
jp
add
rclb
inc
repz
cli
dec
push
mov
ret
jnp
fists
pop
arpl
push
popa
shlb
loop
bound
inc
fcoms
lret
adc
test
pop
cmc
mov
mov
jg
xchg
and
repz
jp
pop
fistps
sarb
sti
test
jne
sbbl
mov
pusha
sti
leave
xchg
std
notl
inc
sub
mov
fs
pusha
pop
fdivrs
dec
mov
hlt
pop
pop
mov
push
lret
fbld
arpl
aad
rcrb
mov
pop
ficomps
cwtl
dec
sti
clc
pop
and
stos
xchg
adc
sbbl
inc
fidivrs
fwait
dec
add
and
and
fcoml
mov
jnp
jg
xchg
andl
ret
sub
adc
ficoml
inc
and
lahf
dec
lods
xor
ss
and
cmp
mov
xchg
lcall
lds
xor
adc
xchg
cld
pop
cmp
icebp
sbb
mov
cwtl
lahf
jle
stos
push
push
inc
jl
int
or
adc
pop
xorb
or
popa
sahf
pusha
jle
faddl
xchg
and
pop
pusha
dec
adc
jl
mov
adc
mov
mov
adc
jge
daa
xor
mov
insl
cmpsb
jecxz
and
enter
ja
mov
lcall
xchg
aaa
clc
or
fcmovnu
jg
mov
pop
ret
jno
sub
sbb
pop
mov
xchg
pop
cld
jge
pop
cmp
jg
xchg
pop
cli
clc
mov
push
rcrb
push
pushf
aas
into
mov
push
in
and
pop
shll
ss
or
sti
mov
outsl
mov
inc
sub
xchg
in
lcall
sets
xor
dec
adc
jge
xchg
pop
loopne
push
cmp
mov
cmpl
pop
jmp
in
adc
xlat
mov
je
repnz
lcall
add
out
call
dec
mov
pop
dec
push
lahf
pop
mov
sbb
sbb
sahf
sbb
gs
das
cli
xor
xchg
adc
and
iret
test
sahf
cmc
dec
mov
pop
cld
popa
pusha
or
in
js
lock
pop
hlt
sti
cmp
mov
pushf
mov
jno
pop
jns
aas
jmp
ficompl
fadds
cmp
pop
sub
es
adc
fidivs
inc
push
sar
cmp
iret
pusha
pop
icebp
push
leave
lret
pop
loopne
repnz
cwtl
rolb
pop
jae
jnp
sbb
jmp
clc
pop
add
adc
dec
xlat
cmc
mov
jb
inc
xchg
lret
mov
mov
jns
pop
mov
rcr
out
push
fisttps
lcall
cwtl
mov
push
lcall
xchg
cmp
pop
das
adc
pop
pop
dec
ds
add
jg
and
pop
pop
scas
add
mov
mov
fdiv
pop
lcall
add
sahf
pop
add
adc
inc
cwtl
inc
mov
hlt
pusha
sbbb
icebp
mov
cmp
shll
mov
faddl
xor
lahf
popa
cmp
jmp
call
bound
sub
cld
aaa
jg
mov
mov
inc
xorl
ds
lahf
push
jnp
clc
dec
loopne
push
stc
cli
cmp
cwtl
fcoms
xchg
jle
aas
cmp
sbb
add
fdivrs
imul
jnp
js
add
inc
inc
jge
inc
cmp
incb
jl
movl
rcrb
pop
dec
ret
dec
fnstcw
cmp
jb
pop
js
loopne
xor
rcrb
pop
movsb
cmp
pushl
pop
dec
negl
pop
dec
inc
movmskps
dec
add
jnp
sbb
xchg
mov
rcrl
pop
leave
pop
std
pop
jl
loopne
cs
dec
sub
sarb
xor
sbb
and
cmp
sub
inc
stos
je
mov
pop
movl
lcall
push
jno
outsl
pop
sarl
fdivrs
inc
mov
jnp
in
xor
pusha
add
and
jl
pop
mov
loopne
xor
pop
daa
rcrb
je
and
fistpll
cmp
jnp
mov
mov
sbb
mov
mov
mov
sti
nop
pop
pop
popa
outsl
js
sti
sub
jp
lret
stc
shlb
fstpt
lret
xor
inc
and
push
jp
arpl
in
cmp
ljmp
cmp
sti
loopne
xchg
int
pop
sub
and
inc
xor
jo
push
mov
xchg
pop
fdivrs
pushl
and
mov
mov
push
mov
cli
fwait
loopne
mov
xor
inc
iret
mov
cmp
mov
jae
mov
sbb
and
xchg
jl
jl
xor
loopne
mov
fidivrl
imul
jle
je
dec
call
dec
repnz
pusha
std
jp
bound
sub
sbbb
sbb
inc
xchg
mov
lahf
pop
mov
fisttpl
mov
int
neg
out
lods
xchg
inc
pop
xchg
add
mov
mov
rclb
dec
jns
add
dec
push
mov
mov
filds
adc
cmp
cmp
push
rcrl
cli
push
dec
inc
arpl
fcompl
pop
clc
outsl
mov
into
mov
pop
pop
leave
mov
adc
push
test
jb
cmp
push
xchg
sbb
cmpsb
inc
sub
push
jg
ds
inc
mov
aaa
ficomps
pop
les
cwtl
pop
sti
cmp
cmpsl
push
mov
xor
sbb
cmp
fidivrl
je
jge
daa
hlt
sti
push
enter
jae
rcrb
mov
xor
sbb
push
pop
add
pop
fdivrs
sbb
sub
and
mov
and
pop
cmp
mov
icebp
idiv
cmp
pop
mov
repz
xchg
stc
mov
sub
cld
pop
cmp
add
clc
and
jp
in
mov
adc
js
imul
cmc
mov
mov
sahf
cmp
pop
and
neg
xchg
mov
xchg
incb
pop
mov
pop
ficoml
sti
xor
popa
pop
sbb
pop
push
js
sbb
shrb
fwait
jmp
ret
sub
adc
mov
jne
shl
mov
fs
lcall
adc
push
rclb
jl
xchg
ficompl
add
pop
jle
dec
pushf
cmp
jnp
or
jno
push
fstpt
lods
jbe
fdivrl
cmp
es
xchg
lcall
sub
mov
mov
sbb
fwait
lret
arpl
jge
jp
mov
inc
neg
mov
xchg
pop
sbb
mov
inc
pop
xor
subb
andl
inc
pusha
loope
adc
or
push
leave
pusha
add
pop
inc
fwait
xorb
shr
mov
sahf
xor
pusha
xor
pop
cwtl
aas
pop
lcall
sbbb
call
and
std
cli
sbbb
sbb
jle
ficoml
sbbb
and
incb
sub
or
jl
inc
ret
xchg
jge
or
pop
mov
aas
ficoml
pushf
xchg
shll
loopne
adc
add
enter
addb
pushw
into
cmp
in
pop
jg
jg
mov
jb
fcomps
push
cmp
inc
mov
adc
jae
pop
movsl
jne
leave
jp
mov
inc
mov
fistpl
adc
mov
mov
das
cmpb
jp
cmp
popf
dec
cltd
cli
idivl
sbb
lahf
mov
inc
loopne
pop
stc
fcomps
lret
cld
cmp
cmp
sbb
adc
pop
sti
cmp
mov
dec
mov
inc
cld
mov
outsb
adc
and
cltd
jmp
lahf
in
mov
pop
add
pop
mov
and
outsb
fists
mov
arpl
mov
stc
jl
cmp
repnz
adc
fistpl
nop
je
sub
fmuls
int3
decb
xchg
xchg
and
cmp
pop
mov
inc
pop
loopne
pop
jp
jno
mov
int3
lahf
jg
pop
and
sti
push
fwait
push
sbb
pushf
cmp
push
mov
pop
sbb
fistl
and
mov
cli
lahf
sti
adc
mov
pop
pop
adc
sahf
xchg
roll
mov
int
test
pop
dec
andb
cmp
push
cmp
or
or
cli
mov
pop
jg
dec
mov
in
lret
negb
in
stc
mov
aaa
neg
pop
lcall
cmc
and
mov
lahf
hlt
subb
cltd
test
xchg
sbbb
movsb
cmp
je
jle
add
sbb
ret
pop
sub
dec
out
sbb
mov
cmpl
cmp
mov
dec
cmp
mov
sbbb
sbb
ret
dec
call
fcomps
mov
inc
add
cmp
cwtl
sbb
cmp
cmp
std
rorb
sbb
repz
or
dec
push
fisttps
inc
pop
jg
adc
mov
jnp
add
jp
pop
dec
lcall
sub
cmp
mov
cmpsl
dec
jecxz
cld
jl
fistpl
pop
fmuls
pop
fiadds
mov
push
cmp
mov
pop
mov
mov
sub
fnstenv
lret
bound
sub
xchg
jbe
sbb
or
dec
lret
adc
push
mov
lahf
sbb
sub
pusha
inc
or
cmp
push
and
or
rcrb
cld
shll
sub
int
push
pop
stc
fwait
and
cmp
inc
add
cld
incb
jnp
mov
sahf
and
fidivrs
pop
add
add
daa
xor
push
dec
add
dec
aas
inc
imul
std
sbb
hlt
filds
xchg
fidivrl
cmp
mov
sarb
sti
dec
js
call
inc
test
loopne
jnp
pop
enter
cmp
cmpsl
mov
and
mov
fbld
fwait
mov
lds
cmp
cld
jp
and
repnz
fidivrl
push
loopne
mov
lcall
cmp
loop
inc
fwait
cmp
jle
andl
adc
and
lret
dec
popa
dec
lock
ds
cs
pop
adc
sbb
cmpb
push
das
mov
dec
cwtl
pop
pop
les
jnp
push
loope
nop
mov
inc
mov
mov
mov
and
mov
pop
and
mov
xchg
jno
mov
cmp
push
addb
adc
lahf
sti
mov
xchg
pop
pop
pop
imul
cmp
clc
mov
jge
xchg
enter
clc
or
sub
push
pop
fstpt
pop
inc
ficoml
scas
mov
add
call
push
fwait
pop
inc
pop
jb
sarb
mov
andl
xor
sbb
movsl
and
ficoml
inc
inc
or
idivb
cmp
popa
cwtl
adc
mov
xchg
pop
adc
fisubs
inc
arpl
xchg
or
loope
mov
into
idiv
mov
pop
mov
nop
mov
dec
out
xchg
bound
mov
push
cmpb
pop
and
nop
fcompl
pop
pop
ds
aas
fwait
cmp
mov
jl
sahf
idivl
push
cld
out
cmp
inc
dec
std
std
push
fdivrs
jge
jbe
scas
movmskps
cmp
cmp
jnp
gs
repz
rclb
or
pop
and
aas
push
fcomp
into
pop
negl
je
jo
ljmp
jbe
mov
mov
and
icebp
xchg
jbe
popa
cmp
cmp
pop
rcrb
adc
jl
dec
test
fdivrl
mov
add
push
pop
ficomps
sbb
jle
lds
jge
clc
xchg
push
mov
sbb
mov
cmp
call
xor
pushf
lds
adc
jmp
add
sub
sti
pushf
int3
add
pop
cmp
xor
jle
jmp
and
daa
xchg
lcall
dec
mov
inc
mov
inc
xchg
in
mov
int3
fwait
dec
pop
mov
aas
fdivrl
pushl
popa
and
sbb
js
js
stos
push
and
and
paddb
data16
xorl
mov
int3
fdivl
inc
inc
cmp
sbb
sar
popa
adc
cld
sbbb
mov
xor
pusha
mov
sahf
jge
adc
add
mov
in
sahf
outsb
cmp
pushf
push
clc
and
cmp
lcall
sub
jge
js
ds
and
and
outsb
or
and
mov
test
std
push
aam
lds
sti
sahf
sbb
mov
movsl
add
dec
pushf
sbb
das
ds
data16
icebp
ljmp
popa
loopne
popa
and
mov
fildl
mov
aas
shll
and
inc
iret
ljmp
cmp
aas
cwtl
fbld
inc
ljmp
insb
cmp
pop
jmp
ret
jge
mov
call
loope
aaa
sbb
add
pop
cmp
pop
mov
loopne
push
cmp
jg
sbb
ds
pusha
ficomps
pop
pop
cltd
mov
std
aam
add
lcall
pop
repz
fcompl
push
or
cmp
xchg
pop
pushf
jge
pop
push
xchg
add
hlt
cwtl
rcl
sbb
jp
mov
dec
push
outsl
lods
out
adc
dec
mov
mov
in
mov
mov
pop
pop
mov
cmp
pop
pop
xchg
jl
incl
cwtl
push
sar
mov
aad
mov
repnz
sahf
popa
popf
pusha
shlb
rolb
sahf
mov
lea
shl
pop
adc
lret
sub
jo
ss
mov
rolb
fwait
mov
addr16
jle
pusha
call
cmc
jb
jg
dec
js
fistpl
pop
cli
mov
push
insl
sbb
repnz
push
adc
out
sbbl
inc
sub
cld
scas
xchg
pop
cmp
test
jmp
adc
cmp
bound
sahf
mov
ds
push
jp
mov
out
jmp
in
test
jbe
lcall
cmc
cmp
cmp
jge
lods
jl
out
cmp
sub
sti
xor
mov
mov
sub
dec
faddl
sbb
fistpl
add
sar
cmpl
and
pop
push
aas
popa
stos
mov
inc
das
pop
fdivs
sbb
cmp
and
clc
push
sbb
xchg
cmp
xchg
sbb
aaa
mov
addr16
pushf
mov
cs
andb
mov
mov
inc
loopne
cld
call
pop
inc
pop
add
jno
push
ficomps
cld
cmp
pusha
dec
lds
jp
popa
sub
sahf
push
fstps
push
loope
inc
ss
jle
sbb
dec
jle
push
js
or
jp
stc
push
cmp
jb
mov
mov
pop
popa
mulb
pop
sbb
and
dec
xchg
fnstcw
sub
jg
adcl
loopne
inc
add
cmp
cmp
popa
pusha
pusha
mov
xchg
rol
cli
fimuls
bound
loopne
inc
xchg
pop
pop
inc
and
pushf
pop
sbb
leave
and
sbb
xchg
jns
jle,pt
fucomip
dec
pop
inc
test
clc
pop
cli
fldl
popa
push
pop
inc
adcb
lahf
pop
jp
lock
lcall
push
loopne
sub
ss
cmp
pop
add
mov
mov
clc
mov
push
or
add
dec
mov
sbb
enter
mov
pushw
sbb
mov
sbb
loopne
fbstp
in
push
jae
sbb
les
clc
xchg
ffree
es
shl
mov
cmp
pop
loopne
inc
jo
jge
jb
and
push
lcall
jns
mov
pop
lret
mov
pop
jp
arpl
push
pop
mov
push
inc
outsl
mov
js
loopne
jns
cmp
cmp
jle
cmp
mov
push
sbb
pusha
je
jge
je
jb
pushf
pop
lcall
xor
mov
repz
mov
fcomip
test
bound
xor
pop
arpl
cmp
jge
push
pusha
pop
ficompl
jle
mov
pop
cmp
add
shll
jge
fdivs
adc
sbb
andb
nopl
jno
cli
pushf
jmp
test
mov
lret
pop
add
icebp
outsb
mov
mov
aaa
mov
pop
scas
and
pop
mov
fidivrl
cmp
and
xchg
xor
pop
mov
jmp
cmp
sbb
pushf
inc
push
or
xor
int
ja
push
inc
and
pop
lds
aas
sbb
jb
js
lcall
pop
mull
jg
and
lret
push
sti
mov
inc
adc
loopne
xchg
inc
lcall
fistl
in
inc
ds
pop
inc
js
sti
pop
bnd
jl
repnz
fwait
and
mov
dec
xchg
ficomps
pop
mov
push
inc
cld
clc
inc
jle
das
pop
adc
orb
aas
mov
cmp
mov
pop
dec
jmp
fs
call
int
mov
dec
popa
negl
arpl
fsub
popf
mov
cmp
sar
cwtl
lds
inc
cmpsl
jae
out
je
insb
xchg
mov
push
test
xchg
pop
repz
pushf
div
ficomps
outsb
jl
pop
xor
push
sahf
and
aas
pop
and
adc
push
push
das
movl
pop
sub
pop
mov
pop
jb
dec
pop
pop
and
xchg
push
add
sarl
mov
fists
pop
push
inc
mov
lcall
fstpt
popa
push
mov
push
pop
fdivr
pop
xchg
mov
jnp
mov
dec
fadd
pop
in
dec
inc
cmp
jg
lds
and
pop
dec
xlat
testb
dec
mov
outsb
pop
push
aas
out
adc
pop
xchg
sahf
push
test
and
leave
imul
icebp
cltd
imul
and
outsb
pop
jp
lahf
fs
aas
sti
pop
sbb
sub
adc
loope
sub
inc
pusha
cmp
adcb
push
push
incl
fisubs
mov
pop
mov
addb
or
mov
lahf
lea
or
ja
mov
loopne
jae
mov
loop
cmp
mov
sbb
shlb
xchg
fsts
add
jge
sub
mov
sbb
or
pop
js
pop
pushf
ss
cld
and
sbb
pop
sbb
mov
icebp
jle
xchg
pop
inc
mov
lods
push
out
pop
aas
sbb
inc
cmpl
cli
loopne
jnp
mov
sbb
pop
pop
stc
pop
or
xchg
lret
cld
mov
sub
pushf
fistpl
pop
lahf
jp
fstpt
pop
cmp
stos
add
and
mov
aad
repz
inc
inc
xchg
cmp
pop
sbb
fistpl
mov
jae
jne
fwait
sub
jge
pop
sbb
lcall
jae
jg
push
pop
sbb
mov
cmpb
jbe
popa
sub
cmp
inc
les
cs
fisubs
dec
pop
inc
iret
cmp
inc
pop
inc
dec
add
jp
xor
ret
sbb
pop
push
push
pop
xchg
mov
pop
mov
jl
pop
jge
ja
les
rclb
pop
sbb
inc
rcrb
jns
jae
mov
dec
mov
sarb
js
add
jle
jle
sub
mov
ss
rolb
push
sti
clc
push
mov
sbb
lds
jno
mov
adc
xchg
add
pop
pop
cmc
leave
cs
shll
pop
ss
out
push
adc
lods
mov
xchg
ljmp
ret
sub
inc
sarb
orb
or
idivl
xor
fsubs
xchg
cwtl
pop
inc
rorl
sar
rolb
mov
add
aas
jg
hlt
inc
je
xchg
xor
cltd
mov
pop
dec
fnstsw
clc
pop
ret
ret
lcall
lods
or
mov
sarb
cli
dec
mov
cwtl
sbb
mov
fnstcw
xchg
pop
mov
pushf
and
xchg
cmp
cmp
bound
xchg
fidivrs
xchg
mov
ss
nop
inc
mov
inc
push
push
pop
cmpl
jnp
dec
adc
shrb
shl
pop
jg
sub
sbb
jp
sti
mov
fimuls
push
sahf
call
adc
les
scas
mov
sbb
add
lcall
lds
jp
sti
js
sbb
js
cli
jnp
fcmovb
push
aaa
jb
cmp
scas
mov
fsubr
enter
inc
loope
fiadds
cld
and
cli
gs
pop
js
mov
sub
aas
mov
xchg
sbb
pop
xchg
inc
lcall
push
lahf
sti
cwtl
popa
out
pop
ss
inc
addr16
push
pushf
sar
pop
adc
sahf
ficoml
jnp
aas
js
clc
out
cltd
sbb
dec
fcomps
roll
cltd
in
and
add
fistpl
out
sub
xchg
stos
adc
cmp
pop
lcall
mov
pop
dec
outsl
andl
adc
inc
xlat
stos
loope
pop
jecxz
mov
inc
sbb
mov
in
enter
cmp
xchg
pop
mov
sbb
bound
lret
jnp
pop
add
or
rorb
pusha
nopl
lock
rorb
pop
bound
pop
cld
push
test
pop
jl
pop
mov
pushf
cmp
xlat
lds
cmp
adc
mov
iret
push
xchg
mov
lock
dec
lds
loopne
popf
lret
addr16
cmp
inc
jl
dec
lahf
pop
mov
sub
add
and
cmp
inc
popa
inc
dec
mov
out
mov
cmp
mov
cwtl
aas
fcmovnb
outsl
xorb
ds
loopne
pop
daa
pop
aaa
cmp
cmp
shll
pop
push
pusha
fnstenv
leave
aas
push
pop
add
cmp
fwait
into
decl
and
sbb
pop
jp
stos
dec
pop
mov
pusha
ficoms
popf
xchg
sbb
jb
cmp
sub
data16
fwait
mov
cmp
push
cld
jnp
and
lcall
lods
pop
addl
jg
jbe
aas
jnp
scas
xor
mov
mov
sti
mov
pop
sahf
dec
sbb
dec
xchg
jno
push
pop
adc
jle
xor
cmp
cmpb
mov
fdivrs
jmp
sbb
hlt
pop
hlt
adc
popa
rcrb
pop
xor
and
cmp
mov
cmp
xchg
dec
pop
js
mov
xchg
push
fdivrs
rcrb
mov
cmp
je
aas
pop
adc
movsb
sbb
int3
xchg
aam
popa
add
dec
pop
jge
mov
and
lds
mov
pushf
adc
outsb
pop
adc
mov
pop
xor
adc
jb
pusha
jp
lcall
xchg
ficomps
cmp
pop
xor
aas
sahf
add
mov
pop
cltd
jo
jbe
mov
fwait
mov
lods
jp
pop
pop
inc
pop
in
insb
fisubrl
daa
inc
pop
fistpl
push
inc
pusha
mov
mov
xor
jg
sti
dec
or
cmp
adc
aas
sbb
mov
cmp
mov
pushl
mov
ret
adc
je
jb
ficompl
pop
dec
dec
mov
sar
sbbb
mov
icebp
loop
or
cli
cmp
lret
jle
cmp
pop
sahf
mov
cmp
into
sbb
mov
pop
sbb
pop
pusha
mov
xchg
inc
sbb
mov
imul
mov
xlat
repz
and
das
adc
ficoms
xor
ficoml
pop
rolb
pop
pop
mov
cmp
push
sahf
cmp
pop
mov
or
dec
push
mov
jge
out
cmp
lcall
dec
js
jns
xor
pusha
xor
mov
mov
out
pop
add
clc
push
fistps
shlb
push
pop
mov
xchg
xchg
daa
adc
and
mov
lcall
xchg
xchg
les
pop
ss
jo
je
xor
arpl
mov
adc
jge
adc
xchg
int
mov
lock
push
cmp
pop
pop
fisttps
sahf
pop
out
pop
js
and
dec
pop
inc
pop
jno
jnp
pop
inc
xchg
jecxz
dec
pop
shl
fsubrs
pop
push
jmp
fstpt
inc
sbb
jge
stos
adc
jle
pusha
sub
sarb
pop
jge
cld
pop
mov
pop
mov
clc
dec
pop
cmp
imul
fsubs
pop
pop
dec
add
dec
addl
pop
jp
mov
cmp
jl
ficomps
push
mov
mov
cltd
sub
out
cli
jmp
pop
mov
pop
inc
test
stc
fcompl
mov
jge
add
mov
fwait
ds
pushf
aas
into
mov
xlat
dec
pop
addb
jmp
cmp
sbbl
pop
pusha
sar
lahf
outsb
cwtl
lret
mov
mov
adc
ror
arpl
pop
cmp
and
ret
sbb
mov
ret
xor
popa
xchg
mov
rcrl
pop
dec
jmp
jp
mov
pop
int
aaa
je
mov
mov
mov
cld
xlat
mov
sbb
sbb
loop
sbb
insl
sti
lcall
mov
cmp
pop
loopne
adc
push
lcall
jl
sbb
sbb
sti
ljmp
js
push
pop
hlt
xor
sbb
mov
sbb
push
sub
lds
mov
cmp
mov
fwait
pop
pop
int3
pop
xchg
cld
incb
jge
outsb
ret
bound
jle
push
data16
dec
mov
fistps
loop
cmp
nop
dec
mov
cwtl
fcompl
js
repz
jno
inc
xor
inc
xlat
insl
adc
pop
adc
pusha
clc
jnp
dec
and
mov
sahf
jle
loop
mov
aaa
ficomps
dec
ficompl
std
inc
sbb
iret
push
and
dec
mov
cmp
pop
xor
and
in
sub
jae
jp
divb
mov
ds
mov
inc
dec
sbb
out
outsl
mov
cmp
cld
xlat
pop
mov
jp
pusha
lret
dec
inc
fiaddl
sti
mov
shrb
arpl
push
sbb
mov
cmpb
sbb
pop
mov
hlt
orb
rclb
andb
push
cmp
loopne
pop
sti
pusha
pop
into
maskmovq
testl
scas
xchg
mov
stos
adc
ret
jle
sti
ja,pn
xchg
mov
aad
out
cld
cmp
jl
jge
ret
in
add
stos
sub
ret
cmp
lcall
mov
pop
fmull
arpl
push
xchg
test
inc
arpl
stos
and
filds
lahf
jb
lahf
fistpl
mov
ds
jge
mov
orl
or
pushf
push
jg
and
pop
out
pop
push
mov
pop
sbbl
sbb
lahf
js
jb
xchg
mov
mov
fcompl
cmp
add
mov
cmp
clc
add
pop
js
push
jl
pushf
mov
xor
dec
xchg
xchg
mov
je
jle
push
adc
sub
sbb
xorb
pop
test
or
mov
inc
fsubrl
repnz
mov
add
mov
jno
lcall
cmp
pop
mov
mov
aas
je
mov
in
jl
adc
cmp
and
out
cmpb
mov
int3
sbb
jp
push
imul
pop
push
sub
jg
insb
fistpl
pop
push
decl
or
aad
jp
js
mov
jns
jnp
xchg
sbb
cmp
pop
fisubs
and
mov
cmc
data16
hlt
pop
rcr
push
fidivrs
mov
push
sub
cmp
mov
add
bound
cld
pop
stos
adc
xorl
testb
sbb
int3
inc
rcrl
jp
mov
cmpsl
jle
cmp
adc
inc
fbld
cwtl
mov
fdivrl
push
je
mov
cmp
push
popa
dec
mov
pop
jp
lock
ds
testl
jecxz
stc
or
shrb
dec
rcr
mov
mov
push
fnstsw
add
mov
xorb
repz
cwtl
test
int3
ficompl
cmp
inc
mov
nop
fistpll
std
inc
js
cmp
pushf
sbb
loope
inc
cmp
cmp
bnd
lock
xchg
fcoml
sbb
mov
pop
cmp
fidivs
lret
cmp
or
int3
push
sbb
sti
jmp
pop
mov
pop
in
rcr
pop
push
cmp
mov
cmp
sub
mov
xor
or
pop
push
cmp
mov
cmp
adcl
sti
aas
inc
fsts
sbbl
sahf
adc
inc
dec
sbbl
cmp
pop
jge
iret
lea
repz
mov
cmpsb
ficomps
loopne
jp
jg
sub
sbb
fcoml
popa
cli
cmp
sbb
sbb
shlb
pop
mov
sub
push
mov
js
inc
pop
fwait
inc
or
add
inc
popa
push
sbb
fidivrs
mov
xchg
mov
and
lods
xchg
mov
xor
pop
pushw
fidivs
shll
push
xor
mov
mov
aas
jp
add
add
cld
sbb
sub
test
jp
dec
mov
repz
ficomps
scas
mov
cmpl
xor
leave
mov
pop
jl
push
mov
jge
rcrl
jle
clc
pop
and
shll
fcomps
xor
sahf
cmp
mov
jno
sub
aas
jmp
into
stos
outsb
dec
cmp
xchg
inc
lahf
and
fsubs
ljmp
mov
inc
push
rcrl
iret
sub
je
dec
into
mov
fcompl
lods
cmp
add
in
cmp
cmp
cli
fwait
xchg
pop
cmp
cs
cld
cmpsb
lods
push
fistpll
clc
inc
jge
push
push
std
sbb
decb
dec
je
fsubrl
cli
jnp
nop
mov
dec
mov
dec
negl
leave
mov
inc
movl
std
sbb
xchg
lds
mov
push
mov
sbb
rcll
rol
fsubl
push
xchg
jg
or
popa
popa
inc
fdivp
pop
pop
mov
sbb
cld
jg
and
jnp
leave
shl
lret
dec
and
mov
icebp
fsubrp
push
insl
fcoms
push
cld
in
add
std
divl
sub
orb
or
mov
pop
fucomi
adc
mov
pop
in
dec
jg
rcrb
mov
push
fwait
pop
push
mov
mov
cmp
push
pop
jl
push
fidivrl
arpl
dec
pop
mov
pop
cwtl
clc
pop
cmp
lds
inc
jl
pop
testl
inc
je
xor
arpl
cld
xchg
pop
outsb
adc
loop
inc
inc
lcall
rorb
mov
xchg
push
jg
cmp
iret
mov
cmp
sahf
loopne
pop
out
shlb
sbb
sbb
and
sti
push
je
inc
xchg
push
sub
pop
pop
sbb
jg
cmp
dec
idivb
mov
jns
cli
cmp
and
dec
cmp
clc
push
pop
loop
mov
inc
lock
adc
pop
pop
mov
rcr
lahf
xchg
pop
or
dec
dec
pop
jp
cmp
push
pop
fdivrl
push
fwait
sbb
jnp
js
cmp
sub
fdivr
in
mov
mov
sbb
xor
js
jl
insb
inc
fidivrl
inc
outsb
inc
fldl
pop
mov
pusha
bnd
sar
inc
ljmp
inc
iret
sti
cmp
cmp
fs
mov
pop
inc
sub
aas
dec
cmp
xor
lcall
pop
push
xor
jnp
cmp
sarb
cmp
pop
pusha
cli
dec
sbb
dec
xor
xchg
jbe
cmpsb
adc
inc
mov
mov
loopne
scas
and
stc
lahf
mov
cmpb
arpl
xchg
leave
std
negb
ds
sti
xor
lods
adc
fidivs
push
jle
imul
inc
icebp
cmp
inc
sbb
mov
lahf
loopne
cld
lret
sbb
dec
js
pop
lahf
and
loopne
ss
jnp
aam
jl
fcomps
sbbl
pop
fisubrs
mov
push
sub
mov
lods
pop
xchg
loop
dec
push
mov
jno
popa
cmp
cmpl
dec
out
jae
fdivl
push
popa
cmp
mov
jb
pop
jp
and
rcr
pop
xchg
cmpb
decl
bound
cmp
cmp
mov
adc
mov
pop
mov
inc
stos
xor
jbe
sahf
and
dec
pop
das
ds
jle
cwtl
clc
lahf
cmp
sbb
pop
push
jg
or
int
push
mov
cmp
mov
cmp
dec
xchg
rcrb
mov
ret
movsl
pop
mov
sbb
push
jnp
loopne
mov
ljmp
and
cmp
and
push
cmp
clc
add
js
pop
icebp
xchg
xor
hlt
and
and
jl
fdivrs
add
jns
pop
dec
inc
or
sbb
movsl
cmp
pusha
mov
mov
mov
imul
in
fwait
leave
adc
pop
sub
and
cmp
lcall
aas
pop
lcall
sti
pop
inc
fdivs
push
inc
mov
xchg
fidivrs
and
and
stos
push
out
jmp
cmp
and
fistpl
mov
fwait
rcpps
inc
pop
jle
pop
popa
inc
pop
addb
mov
dec
push
sub
loopne
pop
call
jno
gs
pop
faddp
sbb
or
cmp
and
sahf
incl
pop
pop
push
pop
jg
out
mov
or
xchg
push
xchg
add
mov
fdivrs
cmp
mov
out
icebp
pop
jnp
sub
jnp
cmp
and
rcrb
jg
adc
inc
add
inc
lds
pop
mov
mov
sarb
inc
jle
aas
xlat
sahf
jne
pop
cmp
sti
dec
and
fwait
loopne
pop
cmp
fimull
pop
mov
xchg
js
cmpsl
arpl
pop
push
and
lods
jle
xor
iret
push
mov
ss
pop
and
loopne
jb
pop
mov
faddl
ljmp
lock
sarl
push
add
pop
mov
mov
adc
mov
xchg
and
mov
flds
jmp
adc
or
sbb
add
scas
cwtl
sahf
pop
ror
aas
pushf
shl
loop
repz
jg
in
push
mov
repnz
lahf
and
inc
pop
mov
mov
sub
fbld
fiaddl
dec
mov
mov
js
pop
test
aas
xchg
mov
pop
sub
and
mov
add
jne
fdivrs
inc
test
je
xchg
cmp
pop
mov
pusha
cld
stos
aas
lahf
xchg
and
into
sarb
hlt
jns
push
scas
xchg
mov
push
dec
and
sub
cmp
push
pusha
jle
and
sbb
sbb
fistps
inc
int3
cli
inc
lea
popa
clc
pusha
and
fistpl
in
fsubrs
pop
push
cmp
mov
int3
dec
xchg
ret
sub
enter
and
push
xor
lret
js
push
jl
mov
cwtl
xchg
call
and
lods
js
adc
or
xor
pop
loopne
in
jns
cmp
popa
pop
pop
add
int
es
cli
pop
pop
fdiv
cmp
xchg
test
push
inc
clc
sbb
dec
cmp
adc
mov
js
loop
and
bound
fwait
mov
push
mov
scas
mov
insb
aaa
pusha
jno
sti
mov
jmp
fimull
push
pop
pop
out
test
cmc
sar
out
fwait
data16
fwait
cwtl
xchg
lahf
xchg
out
mov
cli
pop
ret
xchg
pop
lahf
and
adc
cmp
lock
sahf
mov
pop
jle
inc
jnp
pop
add
add
mov
lds
push
mov
andb
cmp
sbb
sub
xchg
push
hlt
pusha
mov
dec
mov
cmp
hlt
jp
adc
pop
adc
add
jg
jp
pop
fbld
rcrb
jnp
push
dec
mov
adc
add
mov
loop
dec
mov
sti
jb
loopne
fdivr
pop
outsb
sahf
sbb
sbb
cmc
jl
fisubs
aad
cmp
pop
mov
cmp
sub
int3
add
pop
lock
lock
jle
in
lds
sbb
pop
pop
mov
inc
sbb
loopne
add
pop
inc
or
sbb
inc
jl
sar
test
icebp
dec
je
sbb
mov
imul
insb
sub
dec
lds
mov
cmp
adc
cmp
cmp
sbb
out
add
inc
adc
mov
nop
lcall
mov
in
push
clc
jno
push
and
cmc
pop
ljmp
dec
popf
ret
sub
jg
sti
pop
out
subl
lcall
cmp
sbb
dec
fdivrl
mov
mov
or
push
jp
sub
icebp
pop
push
outsl
shlb
inc
xchg
adc
popa
cmpb
and
loopne
cmp
hlt
lahf
jg
xchg
xor
cs
adc
orl
fadd
push
aas
mov
cmp
inc
pushf
inc
in
je
jle
lret
adc
push
mov
pop
adc
pop
aaa
mov
add
cmp
jl
pop
clc
sbb
mov
loopne
dec
insb
cmp
aas
pop
push
mov
fdivrl
pop
mov
pop
add
sbbb
mov
or
push
pop
inc
pop
pop
push
js
cmp
inc
fstpt
jmp
sahf
lcall
aam
pop
cmp
mov
dec
js
mov
add
test
pop
loopne
loopne
mov
int3
mov
lcall
testb
xchg
mov
jge
bound
pushf
js
lcall
daa
ret
stos
cmp
lods
fimull
add
mov
aad
xchg
pop
fistl
mov
in
call
fdivr
mov
pop
cwtl
jp
sbb
dec
mov
sbb
jmp
lcall
cwtl
bound
sbb
inc
dec
scas
out
fistps
dec
sub
xchg
add
jg
stc
mov
dec
push
and
cmp
xor
mov
sbb
sbb
mov
inc
cmpb
xchg
lahf
cwtl
lret
fiaddl
mov
and
dec
pop
repz
lahf
pop
mov
jg
arpl
fdivrl
fidivrs
insb
pop
ss
sbb
xchg
cli
sbb
xchg
roll
xchg
add
ficoml
inc
mov
cld
lods
andb
sti
inc
mov
jle
lcall
sti
addb
fcomps
loop
pop
inc
jge
xchg
xchg
fidivrs
jl
push
jle
lea
mov
cmp
jge
mov
add
jnp
inc
push
cmc
sbb
aas
lahf
call
scas
push
jg
push
sbb
mov
push
inc
sbbb
fbld
adc
pop
cmp
paddusb
mov
jl
jb
add
mov
xor
inc
or
inc
add
dec
inc
adc
inc
xchg
mov
cmp
mov
iret
aas
cld
add
lret
mov
jg
pop
add
popa
cmp
cmp
mov
sub
pop
iret
xchg
ds
in
ror
pop
dec
mov
sbb
je
lock
je
fistpll
lods
pop
sub
cmp
add
sbbb
xor
sub
cmp
push
push
cmc
push
mov
arpl
lahf
leave
aaa
pop
push
inc
out
popa
mov
ss
stos
pop
lcall
push
pop
pop
xor
add
cmp
sbb
pop
mov
cmc
loop
jg
ljmp
pop
loopne
inc
test
fwait
jnp
aad
rol
inc
add
rolb
cld
fidivs
fstps
push
jle
xchg
out
jb
mov
adc
inc
xchg
test
jne
sbb
push
fstpt
pop
xchg
xor
sti
mov
adcb
inc
add
pop
and
in
adcb
lds
jbe
cwtl
jl
mov
sbb
push
fidivrs
dec
movsb
sbb
fistpll
cmp
pop
adc
cld
inc
daa
pop
and
pushf
cmp
pop
xchg
scas
dec
into
outsl
aas
and
dec
fld1
shlb
test
mov
test
fistps
popa
lret
subb
fs
cmp
shll
and
cmp
jp
pop
fwait
jnp
mov
mov
addb
mov
mov
mov
sbb
cmp
and
and
scas
loop
loopne
lds
inc
fistps
fcmovnu
roll
ficoml
shl
xchg
push
and
jns
pop
jecxz
incl
pop
adc
cmp
add
stos
stos
lcall
pop
cmp
add
cli
fistl
mov
roll
mov
pusha
in
scas
les
mov
mov
iret
aas
xor
jl
pop
pusha
fisttps
xchg
fscale
mov
pop
cmp
lcall
pop
sub
cmp
lods
loopne
mov
sbb
fwait
jge
and
imul
push
pop
mov
js
sub
pop
xchg
and
cmpl
push
sub
jno
aas
cmp
lcall
push
out
lcall
and
mov
enter
cmp
popa
insl
mov
xchg
fwait
inc
aas
mov
aam
push
imul
cmpsl
xchg
lds
sti
jnp
cmp
incw
pop
push
shlb
cmp
cmpsb
cwtl
data16
mov
ret
mov
pushf
test
pushf
shrb
fsub
scas
push
fwait
and
lds
sbb
mov
aas
jl
test
add
dec
pushf
rol
into
add
inc
jnp
icebp
fadd
and
jl
add
cmp
adcl
test
testl
pop
je
mov
or
es
sti
call
push
ret
jl
sahf
clc
movsl
int3
fcmovnb
js
out
mov
add
out
jg
out
popa
lcall
lds
xor
push
fs
andl
addb
xchg
inc
popa
xchg
mov
mov
or
gs
ss
fadd
jge
and
cmpsb
push
mov
fstpt
push
mov
call
fnstcw
sbb
cwtl
out
rclb
jnp
sbb
int3
pop
ljmp
inc
test
cmp
lock
fincstp
mov
mov
stc
pop
fnstsw
imul
inc
inc
movsl
or
push
int3
xor
out
push
lds
hlt
mov
testl
mov
lahf
add
cmp
idivb
dec
pop
mov
push
fadd
stos
jne
mov
jne
mov
mov
mov
std
mov
std
lock
mov
ja
les
and
lahf
xchg
push
and
fwait
lret
pop
mov
imul
cli
sahf
loope
out
pusha
sti
cltd
jl
rcrb
int3
add
and
mov
inc
outsl
jnp
cmp
clc
pushf
lcall
es
dec
jp
push
rcr
sar
pop
cmc
js
fists
add
and
mov
js
fdivrs
pop
popa
xlat
pop
dec
or
outsb
jl
mov
sti
push
mov
jle
fcoms
iret
cld
xor
jge
fistpl
mov
addr16
gs
and
mov
mov
pop
mov
pop
jg
adc
cmp
rolb
pcmpeqb
aas
cmc
cmp
jg
cmp
scas
dec
push
cwtl
mov
dec
or
aas
cld
add
dec
push
sbbl
sbbb
xor
xchg
js
push
push
ss
push
lods
pop
push
popa
inc
pop
fistl
cwtl
fmul
cld
jg
cli
sub
xorb
mov
mov
dec
pop
inc
in
mov
cmpb
pop
add
jnp
clc
add
pop
mov
sbb
pop
jge
pop
and
mov
mov
jns
mov
scas
mov
cmp
into
pushf
mov
xor
loopne
inc
lds
in
cmp
pop
jb
mov
add
jb
cmp
and
scas
mov
std
sahf
incb
sti
or
cmp
outsb
jp
xchg
loopne
cli
int3
pop
mov
cmpsl
lahf
jnp
jg
orb
mov
add
sbb
mov
mov
and
inc
setnp
cmp
jg
push
fwait
xor
sbb
out
enter
push
rorl
pushf
cmp
ss
jnp
bswap
daa
adc
sahf
clc
xchg
aas
pop
jae
mov
xchg
pushf
xchg
popa
mov
repz
mov
mov
fidivrs
in
sti
xchg
push
into
testb
es
mov
mov
addl
out
addr16
fistpll
daa
adc
imul
jg
cmp
cli
jle
xchg
jmp
data16
cmpsl
and
aas
or
mov
dec
cmp
cwtl
out
sub
into
mov
cmp
negb
jge
lods
jbe
fs
or
fimull
add
or
cmp
inc
inc
outsl
sbb
test
shl
out
mov
pusha
pusha
adc
jbe
push
xchg
push
mov
stc
lea
mov
iret
xor
lds
push
pop
xchg
mov
pop
cmovl
ja
lods
pop
or
add
jl
mov
add
xor
lds
addr16
add
inc
fsubr
in
inc
inc
jg
mov
pop
leave
add
sbb
repz
pop
or
lds
pusha
jg
pop
popa
int
xchg
and
and
mov
jp
sbb
adc
popa
jle
xorl
mov
sahf
mov
xchg
fildl
sbbb
sbb
ds
pushf
and
addb
cwtl
jg
lea
sbb
and
mov
cmp
sub
scas
inc
out
outsl
jge
dec
push
jg
cwtl
push
xchg
pop
dec
mov
jp
aad
add
xchg
mov
pusha
cmp
dec
rolb
jle
shll
push
dec
sbbb
in
movsl
mov
mov
popf
sub
mov
insl
sbb
pop
add
cltd
jge
jle
lahf
pop
cmp
jp
or
sbb
mov
jo
mov
popa
jbe
sbb
pop
cmp
lahf
ds
push
jl
fiaddl
sbb
decb
dec
add
push
fstpt
inc
cwtl
rcrb
jae
pop
sar
jge
push
lahf
xchg
inc
inc
mov
mov
js
xorl
mov
lcall
pop
mov
pop
mov
inc
inc
cs
pop
clc
adc
xor
sbb
xor
in
pop
movsl
pop
into
fdivrs
lcall
mov
xchg
pop
js
std
mov
mov
pop
adcl
xchg
fdivrl
adc
lds
lahf
aas
push
fimull
jl
stc
pop
cli
rcr
cmp
cld
repz
aas
and
mov
xchg
mov
inc
aad
cmp
aad
in
js
mov
cmp
jp
fdivrs
jnp
jle
jno
outsb
cmp
lcall
dec
jl
push
fcomip
xchg
and
mov
mov
inc
mov
jge
leave
sti
sbb
sub
adc
addl
mov
cmp
fidivrl
mov
adc
pop
mov
jle
mov
jg
pop
pop
je
sbb
mov
clc
lret
pusha
sbbl
adc
adcl
repz
xchg
mov
rorb
pop
je
cwtl
mov
sarl
jecxz
pop
mov
pushf
xchg
clc
cmp
rcr
cmp
pushf
mov
ja
mov
pop
push
cmp
fisttpl
pop
push
fdivrl
pop
fdivrs
pop
dec
jle
push
mov
cli
mov
dec
xchg
adc
add
lahf
stc
and
or
cmpl
mov
mov
mov
pop
cmc
mov
pushf
sti
mov
jns
cmc
fisttps
js
cmp
sbb
fcmovb
stos
movsl
cmp
cld
pushf
mov
push
mov
sti
rcrl
sahf
jmp
stc
jmp
mov
neg
push
adc
sbb
adc
inc
jne
and
sbb
fdivrl
push
sbb
je
jge
test
jg
xor
xchg
mov
sahf
inc
fisttps
idivb
inc
pop
sbbb
cmp
pop
jnp
mov
cmp
pop
adc
int
mov
sbb
or
add
cmp
pop
dec
pop
mov
neg
sub
fadds
lcall
cmp
sahf
lods
in
fwait
lds
mov
lret
fstpt
mov
adc
push
push
jp
cmp
scas
lea
fcmovnb
adc
nop
mov
mov
cli
push
lcall
sahf
jnp
jl
shr
jg
push
dec
test
loop
jb
addb
add
pop
js
enter
loopne
pop
mov
mov
ret
inc
idiv
xchg
pop
js
pop
mov
fisubrl
jp
dec
inc
in
sbb
dec
sti
cmp
mov
pop
dec
add
fsubr
pop
mov
mov
add
fcmovb
jno
push
idivl
std
fwait
push
aas
dec
sbb
fwait
xchg
mov
repnz
or
jb
cwtl
popa
andb
jle
ds
xchg
sbbl
mov
sbb
push
fwait
pop
sbb
enter
clc
ljmp
sbb
jo
cmc
aas
mov
dec
fistps
das
cmp
hlt
pop
inc
cmp
aad
inc
lods
jns
cmp
sti
mov
movsb
lahf
lods
pop
iret
sub
daa
test
jo
pop
movsb
pop
mov
cmp
sti
push
cmp
pusha
push
or
cld
cmp
mov
cmp
pushf
dec
adc
pop
fdivr
loopne
ljmp
scas
js
incb
sbbb
rcrl
iret
lcall
pop
iret
cmpb
mov
jl
pop
jno
sub
cld
clc
add
cmpl
or
lds
mov
jo
stos
sarb
lcall
test
js
dec
add
pop
sbb
push
mov
pop
cmp
cmp
scas
lret
inc
cmp
loopne
cmp
jle
imulb
xchg
mov
fdivp
xlat
inc
pop
loope
or
xchg
adc
cmp
rcrb
jge
inc
ss
sbb
in
cld
int
shlb
lcall
ret
mov
cmp
out
ss
inc
mov
pop
mov
mov
cmp
or
in
cmp
xor
add
rclb
lret
sbb
mov
pop
out
pop
pusha
loop
pop
paddusw
and
js
sbb
test
pop
xchg
pusha
and
push
pusha
ds
jnp
dec
repnz
js
lret
imul
inc
sbb
xchg
sub
adc
dec
lahf
pop
cwtl
dec
repz
fistpll
xchg
and
loop
loop
sub
xor
adc
cwtl
cmp
pushf
xchg
fcmovnu
cmp
inc
test
adc
js
cmp
fldt
dec
sbb
das
xchg
ficompl
push
cmpsb
pop
aas
inc
ror
sbb
cwtl
aad
pop
jp
mov
aas
fsubs
mov
push
sti
mov
mov
cmc
cmpl
adc
fdivr
shlb
push
mov
adc
pusha
jnp
sbb
pop
and
or
pushf
sahf
and
jge
add
fimull
popa
mov
aas
pop
pop
mov
bound
lcall
mov
cmp
mov
test
fwait
pusha
mov
cld
mov
cwtl
cmp
push
or
fdiv
mov
jge
mov
adc
mov
cmp
or
pop
inc
lret
jle
ds
mov
push
sarl
loope
mov
pusha
mov
mov
shl
mov
mov
dec
cmc
mov
jb
pop
cmp
lret
xchg
pop
cld
fistpll
lcall
inc
mov
xor
mov
fwait
xor
pop
mov
sarb
sbb
aad
mov
sbb
add
cmp
mov
sti
mov
cs
fcomp
das
jne
inc
jp
inc
mov
sbb
aas
sarl
clc
pop
mov
ss
sti
mov
loopne
lea
jle
inc
fdivs
pop
dec
repz
aaa
pop
into
mov
inc
jae
cmp
cmc
mov
pop
and
add
lcall
aas
cld
mov
sbb
cmp
adc
pop
or
pop
fwait
sub
pop
push
mov
fnstsw
xor
mov
pushf
and
insb
xor
js
cmp
test
mov
mov
mov
mov
aam
and
clc
mov
push
hlt
hlt
inc
clc
pusha
fwait
sbb
je
jge
test
sahf
mov
fmull
in
pusha
jl
out
mov
sbbl
fwait
mov
mov
push
xchg
imul
cli
mov
mov
lcall
jae
fadds
into
mov
leave
cmp
inc
es
and
pusha
jle
addr16
adc
or
xor
and
sub
pop
repz
pop
mov
and
mov
mov
pop
hlt
mov
loopne
ret
jle
pop
mov
dec
dec
loopne
pop
pop
cmp
push
pushf
cmp
lds
cmp
sbb
cmpsl
pusha
cmp
pop
pop
xchg
cwtl
cli
fdivrs
adc
cmp
mov
clc
cmp
inc
repz
incb
xor
jl
lahf
mov
out
pusha
fidivrs
and
push
orl
mov
adc
cmp
shrb
ljmp
fidivrs
jmp
out
pop
jge
pop
xor
jg
mov
stos
sbb
jge
mov
jge
loopne
popa
test
sub
jecxz
aaa
inc
inc
xor
pop
inc
sbb
cmpsl
adc
lods
mov
shl
fiadds
pusha
xor
xor
mov
adc
sbb
and
adc
fcomps
mov
mov
push
pop
ret
mov
push
push
and
pop
aas
mov
sbb
inc
dec
xchg
jo
pop
rcrb
outsl
pop
push
aad
mov
orb
stos
fdivr
push
pop
xchg
pusha
pop
fwait
cmp
popa
add
cmp
pop
xchg
sub
bound
mov
mov
mov
stos
pop
cmp
mov
arpl
int3
mov
fcompl
inc
popf
xchg
xlat
in
cmp
lods
in
mov
mov
outsl
cmc
mov
fcomp
and
pop
dec
loopne
push
pop
sub
inc
cmp
add
and
arpl
fdivr
adc
cld
pop
jle
and
ljmp
pop
xlat
cmp
pop
out
fisubrs
sbb
sbb
pop
clc
mov
inc
neg
dec
dec
iret
jnp
xor
int3
mov
insl
pop
inc
arpl
rcrb
jle
and
fidivrs
jp
mov
rcrb
sbbb
movsb
add
enter
idiv
sti
xor
clc
aas
mov
insl
lcall
cmpsl
and
movsb
cmp
gs
filds
and
sub
push
sbb
mov
sbb
pop
push
mov
fdivs
sbb
in
mov
div
cmp
js
repz
jl
sbb
lds
lds
dec
sub
arpl
hlt
fwait
je
jne
xchg
jle
dec
push
pop
aas
cmp
call
loopne
lea
mov
mov
pop
popa
fildl
inc
ds
jle
add
sbb
lds
adc
fistpll
fwait
mov
fcmovu
adc
ret
add
je
cld
mov
inc
inc
fdivrl
mov
pop
mov
mov
lahf
add
push
pop
adc
inc
fidivs
mov
dec
xlat
jle
pop
and
shlb
adc
lahf
xchg
lcall
sahf
fdivr
mov
outsb
inc
cmp
sarb
sbb
cmp
imul
cmp
iret
cli
cmp
loopne
popa
and
mov
pop
lahf
data16
test
pusha
sbb
sbb
lahf
add
cltd
pop
ds
jg
pop
jp
idivb
popa
outsl
mov
jmp
lret
fwait
inc
push
xor
sar
cmp
inc
loopne
aaa
mov
dec
cmp
pop
mov
mov
pop
adc
fcmovb
ss
fs
adc
jb
mov
out
loop
adc
sahf
cli
les
loopne
push
mov
das
int3
ljmp
sbb
or
inc
movsb
adc
add
orl
jne
mov
jge
pop
jnp
fldt
inc
sahf
sbb
sub
pop
jae
or
pop
xor
aas
cmp
mov
mov
pop
inc
inc
sahf
cmp
fildll
dec
and
cmp
hlt
cli
add
xchg
xchg
add
arpl
ljmp
lds
sbb
rcrb
pop
loop
mov
leave
idivl
pop
rcrb
fildl
mov
mov
cld
in
lret
xchg
mov
aad
jnp
pop
fsqrt
xchg
xchg
js
inc
mov
cwtl
mov
sarb
mov
xchg
sbb
add
subl
repz
pop
dec
add
mov
inc
das
in
lahf
loopne
dec
push
in
into
stc
jg
xor
mov
sub
mov
cli
cmp
mov
aaa
in
cmp
sbb
pushf
mov
pop
sbb
dec
jp
adc
pop
pop
mov
cld
pop
ljmp
cmp
movb
mov
cs
jecxz
add
mov
jle
and
adc
push
lcall
or
jg
popf
mov
sbb
repz
sbb
lock
out
mov
cmp
scas
mov
sub
jmp
xor
pop
aam
jne
lods
cmp
sti
push
cmp
cmp
das
jo
sub
cmp
pop
jge
pop
cwtl
pop
cmpl
fadds
sahf
and
out
add
loop
mov
sub
cmp
adc
fsubs
lods
lahf
mov
aas
fbstp
pop
pop
loope
nop
fdivs
mov
mov
xor
jp
add
iretw
fisubrs
sarb
inc
jnp
dec
cmp
jnp
pop
and
cmp
fcmovnb
push
in
rcrb
aas
pop
mov
sbb
mov
ja
jae
data16
push
lock
pusha
cld
ss
test
push
pop
adc
jle
fildl
stos
sar
mov
out
fdivrp
loopne
push
mov
rolb
loope,pn
pop
mov
fs
mov
xchg
ficompl
adc
sub
jl
loopne
jmp
mov
or
jecxz,pt
and
loopne
sub
cld
inc
push
loopne
lahf
mov
pop
inc
sti
pop
mov
dec
and
mov
mov
pop
xor
or
jl
ds
cld
cmpl
adc
mov
dec
frstor
mov
addr16
pop
int3
sbb
mul
shll
xor
js
das
xchg
mov
xlat
divl
repz
cmp
das
push
popa
cmp
and
xor
pop
xchg
cmp
mov
pop
dec
mov
je
clc
xchg
out
aad
mov
cmp
pop
pop
jnp
xchg
mov
xor
shl
add
sbb
cld
sar
cmp
sar
jle
mov
fwait
cmp
mov
popa
clc
mov
scas
outsl
mov
and
cwtl
inc
mov
aas
cmp
jle
in
mov
jmp
outsl
push
mov
sub
mov
jp
cmp
sahf
and
xchg
mov
jmp
lahf
out
cmp
add
lcall
clc
sti
pushl
jp
pop
push
and
test
cwtl
mov
xchg
fcomip
sti
fcoms
mov
fistl
jne
cmp
cli
cld
adc
sub
pop
rcl
loopne
sbb
ss
sbb
jecxz
pop
xchg
mov
jp
imul
rcrb
sbb
xchg
push
jg
mov
xlat
add
push
ret
inc
sbbb
cmp
fdivrs
pop
inc
fimuls
cmp
ss
pusha
mov
mov
push
add
rcll
mov
mov
pop
inc
enter
ficompl
repnz
pusha
mov
and
mov
fs
pop
jmp
movsb
ret
inc
sbb
pop
popa
pop
cmp
lahf
adcb
inc
clc
dec
add
and
pop
sbb
adc
sbb
inc
insl
sti
fiadds
inc
loopne
pushf
sahf
test
lds
sbb
mov
cmp
cmp
mov
sbb
pop
mov
mov
fimull
call
rcrb
mov
arpl
sub
pusha
sti
mov
je
pop
icebp
or
fdivrs
clc
sbb
push
popa
inc
mov
pop
push
add
and
cmp
sti
pop
jle
clc
aas
fiadds
lods
fsubp
vmwrite
ror
icebp
xchg
mov
sub
das
mov
out
mov
sub
iret
cmp
dec
sbb
mov
xchg
pop
mov
cli
fsubr
push
sahf
pop
xor
mov
loop
shl
lcall
inc
stc
leave
mov
popf
mov
pop
cmc
push
xchg
push
aaa
testl
jg
pop
inc
sbb
pop
xor
mov
into
cwtl
mov
cmp
pop
sbb
inc
movq
mov
pop
adc
fistpl
mov
jnp
loopne
pushf
vunpckhpd
into
addr16
inc
and
popa
pop
js
xchg
nop
cmc
pop
cwtl
enter
mov
jp
sahf
movsb
mov
pop
jnp
mov
mov
aad
popa
xchg
dec
mov
aad
jle
mov
mov
and
cmpsb
mov
xchg
fistps
adc
fdivrs
cmpb
or
into
sbb
xor
sar
cmp
mov
cmp
dec
xchg
mov
fmul
mov
dec
mov
pop
ljmp
jle
add
das
cmp
cwtl
inc
sub
pusha
sarb
sarb
mov
hlt
jmp
popa
js
cmp
cmp
aaa
push
dec
pop
fdivrp
xchg
inc
cmp
jnp
mov
or
lcall
push
pop
mov
scas
or
pop
dec
fisubs
imul
jb
mov
mov
push
div
cmp
arpl
inc
mov
fnclex
sbb
cmp
mov
inc
mov
sahf
fsts
xchg
clc
mov
mov
xchg
inc
imul
cs
insl
lock
mov
inc
shll
sbb
or
and
fists
pop
pop
cwtl
repnz
js
fwait
sbb
test
push
cmp
xchg
inc
inc
inc
xor
bound
cmp
mov
push
jl
cmp
mov
mov
adc
scas
cwtl
repnz
pop
pop
xor
aas
sbb
inc
pop
aaa
sahf
sbb
adc
pop
js
bnd
push
mov
pop
adc
popf
test
lea
pop
ss
dec
mov
icebp
xchg
dec
repz
in
add
jb
clc
cld
pop
pop
push
testb
and
rclb
fidivs
inc
pop
bound
add
sbb
mov
mov
push
js
push
fnstenv
fstpt
lahf
xchg
int3
mov
unpcklps
jle
dec
xor
test
fsubrl
lcall
mov
je
cld
xchg
jg
stos
dec
mov
xchg
orb
fidivrs
adc
sti
jg
add
bnd
pop
adc
jge
jg
xchg
clc
shlb
incb
aas
lahf
mov
push
and
leave
mov
sti
xchg
push
pop
mov
adc
xchg
fcmovne
je
adc
xor
cltd
mov
fwait
inc
ret
or
sub
mov
mov
xchg
xchg
cmp
sahf
dec
in
js
enter
dec
clc
mov
sbb
pop
pop
pop
fwait
lahf
or
iret
incb
and
cmp
jg
fsubs
mov
jno
mov
xor
movsb
pop
aad
es
adc
rcrl
push
cltd
mov
inc
pop
out
rolb
sahf
cmp
mov
xchg
mov
pushf
mov
sti
jnp
imul
fcompl
jp
imul
jno
cld
mov
add
fs
and
popa
in
jbe
int3
mov
mov
cmp
and
rorl
hlt
pop
jnp
xchg
cwtl
icebp
mov
cs
out
cmp
popa
pushf
jp
mov
aam
cmp
inc
pusha
fstpt
ja
jp
jnp
dec
outsb
pop
cmp
cmp
fiaddl
imul
test
sahf
fwait
popa
stos
mov
cmp
sbb
mov
jle
mov
pop
mov
jp
sbb
stos
pop
xchg
sarl
push
inc
sbb
in
adc
xchg
jb
sbb
pop
inc
mov
out
push
rolb
inc
mov
jl
hlt
mov
pop
cwtl
pusha
mov
mov
fsubrs
mov
scas
and
inc
lret
cltd
adc
clc
mov
cli
mov
andl
fldt
jae
xchg
mov
pop
cmp
mov
pusha
dec
push
pop
rclb
std
sbb
inc
mulb
inc
and
lcall
icebp
inc
and
mov
pop
fs
add
pusha
loopne
pop
cmpl
xchg
or
pusha
or
sbb
jp
bound
js
cmp
das
imul
pop
cwtl
and
pop
sbb
repnz
jge
mov
jmp
sub
fldt
nop
fistpll
xchg
mov
cmp
pop
inc
hlt
clc
pop
pop
xchg
jno
pop
and
pop
pop
pop
popf
mov
jg
test
or
mov
push
mov
fucomip
lds
jl
pop
lret
data16
idivl
mov
add
inc
xor
pushf
sbb
dec
sub
lds
inc
fnsave
repnz
dec
popf
xchg
pushf
mov
cmp
sub
fiaddl
sbb
xchg
jne
cli
inc
fs
orl
mov
insb
cmpl
mov
mov
mov
jns
lret
nop
clc
int3
pushf
mov
vpackssdw
jp
inc
pop
add
mov
jp
jbe
push
aas
jp
in
jle
adc
das
adc
cmp
js
inc
add
and
xchg
fcoml
ss
mov
pop
pop
pop
lock
lcall
sub
and
cmpl
shr
iret
sarb
mov
sahf
pop
scas
cmp
pop
inc
sub
adc
faddp
jg
out
jecxz
mov
cmpsb
test
loop
pop
out
mov
clc
xchg
fwait
inc
shll
sbb
sbb
loope
shl
rolb
xor
and
test
and
pop
jmp
fistpl
jge
addr16
aaa
arpl
push
enter
mov
jae
push
jno
lds
cwtl
and
xor
cmp
scas
test
push
inc
subl
ds
fwait
enter
fcomps
lcall
lret
fs
inc
cwtl
add
sbbb
cmpsb
pushf
push
fcompl
sbb
mov
sti
mov
xchg
xor
popa
adc
cmp
fcompl
sbb
xchg
pop
xchg
xchg
jecxz
enter
add
inc
xchg
je
loop
adc
pop
dec
push
and
insl
mov
push
jg
cmp
add
sahf
sbb
dec
mov
adc
faddl
and
add
and
add
pslld
fdivr
enter
jp
sub
into
dec
fistpl
jo
scas
jmp
sub
pop
push
fcmovu
mov
and
lahf
adc
push
xchg
sbb
sahf
mov
out
mov
cmp
pop
int3
cwtl
jns
in
jbe
fildl
adc
inc
scas
push
push
cwtl
push
xor
dec
adc
mov
rcr
jmp
imul
into
mov
test
sbb
pop
sub
jge
mov
add
push
inc
fisubs
js
loopne
out
mov
and
call
xor
aaa
addr16
or
popa
jnp
push
and
or
popa
mov
jae
movsb
cld
insb
ret
cmp
in
mov
lcall
push
mov
adc
aas
outsl
fdivrl
sbb
cmp
cld
mov
repz
aas
outsl
jnp
iret
mov
mov
clc
jge
inc
addb
cwtl
cmp
orb
fisubl
pop
inc
mov
cld
pop
sub
fcmovnbe
inc
in
repz
push
jge
xor
and
push
pushf
jge
jbe
popa
jle
mov
jmp
adc
fwait
dec
push
cmp
pop
mov
iret
jge
test
fcomps
jns
dec
mov
jb
jno
push
mov
sbb
minps
pop
fstpl
inc
outsb
mov
cli
fisubs
pop
inc
mov
and
pop
ficomps
or
fistps
sbb
pop
xchg
aas
lds
jae
add
xor
in
xor
mov
sbb
xchg
test
cmc
in
mov
xor
gs
pop
pop
fsubp
pushf
sbb
inc
mov
jp
outsl
cmpsb
jecxz
fcmovnb
repz
jns
push
fucomip
jns
aas
inc
fbld
sti
addl
or
ds
lcall
sbbb
subl
fstp
adc
pop
pop
push
les
sahf
test
add
xor
add
scas
inc
cmp
in
sarl
push
sub
sysret
cmc
cmp
rcrl
jb
pop
jp
push
lds
fidivrl
jl
jmp
movsb
pop
shlb
mov
outsl
push
mov
cmp
idivl
jl
mov
ljmp
jmp
pop
adc
fwait
sahf
sarb
sbb
loopne
imul
pop
mov
filds
pop
push
jge
fmuls
lcall
cmp
mov
loope
pop
cli
sub
push
rorb
xor
in
test
add
and
jmp
pop
sti
dec
fcmovnu
add
push
cld
stos
mov
ss
xor
mov
in
mov
lahf
shl
or
xchg
jo
mov
ret
jae
mov
mov
mov
sbb
xlat
rcrb
and
pop
shlb
inc
cmp
mov
aad
fwait
sbb
repz
cmpl
push
sbb
cwtl
cmp
das
xor
jecxz
jns
pop
repnz
sbb
inc
dec
and
cmp
jge
insl
cld
scas
rcl
lds
add
fsubrl
pop
jae
xchg
jb
cmp
out
sub
decb
inc
dec
cmp
pushf
sbb
cmp
lahf
mov
jg
adc
sti
xchg
fwait
sbb
push
mov
pop
gs
cmp
cmp
xor
popa
mov
push
mov
inc
pushf
hlt
adc
cmp
inc
cmc
cmp
ds
fsubs
mov
or
push
jae
cli
or
push
and
cmp
sbbl
ss
xchg
xchg
cli
pop
pop
ret
hlt
stc
inc
pop
pop
jl
lds
cwtl
sbb
mov
lret
xchg
mov
cmpb
aas
pop
xchg
cmp
mov
repnz
cmp
push
pop
jnp
adc
pop
fdivrp
pop
jo
and
xchg
pop
repz
jge
pop
adc
sbb
adc
inc
addr16
sub
xor
test
sbb
xor
shrb
fiaddl
repnz
and
push
mov
pop
push
int3
stos
stc
das
push
dec
mov
in
xchg
jle
push
xor
jp
mov
pop
sbb
and
jl
mov
dec
xor
popa
jp
out
sbb
cmp
cli
pushw
pop
dec
sahf
cmp
je
push
cld
sbb
scas
push
pop
sarb
pop
cmpl
or
mov
sbbb
push
pop
mov
pop
jb
cld
inc
ljmp
dec
loope
sbbl
sbb
mov
push
pop
fwait
daa
push
jp
push
shlb
sti
dec
dec
jns
pop
xor
pop
mov
subl
ss
jno,pn
xor
pushf
scas
popf
or
adc
fidivrs
push
outsb
push
inc
pop
pusha
pop
test
push
jp
pop
hlt
pop
lahf
loopne
add
sti
hlt
xchg
xchg
sbb
test
cmp
sbb
fisubs
inc
lock
inc
adcb
loopne
test
rcrb
mov
fiaddl
mov
cltd
sbb
cmp
mov
pop
push
xchg
fsubl
pop
pop
pop
rcrb
pop
sti
jno
mov
cs
cmp
jle
loopne
sub
leave
sbb
adc
orl
mov
jle
cmp
sarb
fists
cmp
repnz
jle
jg
dec
inc
mov
sbb
popa
mov
xor
cwtl
jle
xor
mov
ficomps
hlt
and
loopne
jge
ss
pop
mov
sbb
fisubl
sbb
outsb
cmp
xor
cld
add
sub
popa
pushf
sub
or
mov
insb
fcomps
int3
fbld
inc
pushf
pusha
sbb
xlat
mov
inc
cld
movsl
inc
mov
xchg
pop
pop
xor
mov
push
dec
sti
and
clc
jl
popf
pop
iret
idiv
xor
or
jge
cmpb
cmp
pop
jmp
fisubrl
pop
jae
xor
das
push
inc
xchg
shlb
mov
jb
pop
mov
jp
cmpl
and
pop
cmp
dec
cli
jnp
xchg
lcall
pusha
mov
and
mov
sahf
mov
dec
clc
mov
cmp
imul
inc
movsl
stc
cmp
sbb
jp
pop
mul
pusha
jmp
push
lcall
loopne
cmpl
jge
cmp
jl
mov
mov
aad
daa
pop
aaa
push
ds
icebp
pop
fisubrl
add
cmp
retw
and
lahf
sahf
push
test
ds
jle
js
sbb
mov
mov
pop
adc
cli
add
adc
xchg
repz
inc
jle
js
stos
sbb
int3
loopne
inc
mov
in
lcall
iret
inc
sbb
inc
cwtl
movl
mov
cmova
push
popa
jp
lret
call
cmp
cmpb
xchg
sbb
sbb
sub
mov
inc
xor
pushf
clc
mov
sub
cmp
addr16
sub
in
sbb
sbb
cmp
fidivrs
lahf
jge
sbbb
jp
sbb
bound
js
mov
push
out
dec
cli
and
je
int
pop
inc
dec
xlat
mov
rclb
pop
and
idivl
xchg
sbb
jl
mov
lahf
aaa
xchg
int
pusha
das
cmc
fdivrp
fistpl
push
pop
fidivrl
dec
insb
bound
cmp
cmp
pop
lea
int
cmp
inc
lret
lcall
jb
inc
das
jl
sbb
dec
push
subb
add
dec
movsb
clc
mov
sbb
das
pop
jg
pusha
sbb
dec
jl
sti
inc
dec
lods
pop
sbb
pop
cmp
push
cmp
pop
sbb
cmp
in
push
mov
insl
mov
lds
sbb
fidivs
imul
pop
sbb
pushf
jne
and
lcall
decb
mov
mov
adcb
push
mov
pop
fcompl
lock
push
loopne
inc
ficoml
jp
mov
or
fidivrl
jnp
test
sbb
jle
pop
mov
inc
sub
in
testb
jp
dec
test
mov
jae
mov
je
mov
inc
jl
cmp
cmp
and
pop
icebp
adc
pop
xchg
xchg
clc
jg
insb
lcall
shlb
inc
cmp
loop
jae
pop
jo
fcomps
jp
out
adc
cli
xchg
mov
outsl
pop
mov
cwtl
cmp
xor
daa
jae
mov
xorb
mov
xchg
loopne
inc
push
jle
push
mov
stc
into
push
clc
xchg
cmp
mov
rcrb
pop
xor
mov
popa
pop
not
mov
jp
addb
mov
mov
cld
inc
imull
lds
fcomps
mov
cli
add
jb
pop
clc
cmp
arpl
frstor
add
or
mov
arpl
jmp
dec
xor
and
pop
mov
lds
cmp
popa
cmp
lcall
dec
and
sbb
bound
push
scas
out
call
cmp
notl
xchg
and
jmp
incb
inc
dec
jge
lcall
std
cmc
mov
cmp
sbb
pop
mov
cmp
repz
pop
push
rcr
push
mov
jp
cld
jge
arpl
cld
shl
jg
inc
pop
orl
cmp
test
mov
push
jo
sar
inc
pusha
mov
fadds
ret
lahf
mov
cwtl
mov
jp
jp
inc
out
pop
jle
xchg
cmp
loope
movsb
cli
inc
jg
ficompl
inc
and
dec
data16
pop
lahf
or
sarb
adc
js
mov
cmp
les
cmp
mov
cmp
dec
popf
pop
and
cli
loope
xor
pop
pop
push
cmp
adc
shlb
popa
je
push
idivl
mov
add
cmp
aas
xchg
mov
pop
lahf
push
pop
repnz
cmp
out
jb
pop
cmp
mov
popa
jge
dec
adc
mov
jl
insl
push
push
rcr
fisubl
jl
testl
fstps
mov
sbb
popa
scas
push
clc
xchg
sti
loopne
pushf
sub
mov
adc
add
frstor
xchg
test
rep
fidivrl
mov
mov
pop
loop
out
fidivrl
or
movl
jp
in
jecxz
inc
adc
sub
adc
push
maskmovq
mull
inc
adc
adc
adcl
jle
cmp
cmp
in
pop
sbb
and
sahf
inc
and
ret
sub
pushf
popa
loopne
pop
pusha
aas
cmp
cmp
fwait
mov
mov
je
sti
pop
fidivrl
add
shrl
adc
sub
inc
push
dec
pop
mov
fiadds
fildll
sbb
jl
pop
js
mul
mov
dec
sbb
cmp
int3
pusha
jp
sbb
cmp
sub
rolb
or
rcrb
int3
arpl
mov
stos
fldenv
jnp
sbbb
push
pop
jg
sbb
pop
lahf
push
scas
and
mov
into
adc
negb
cmp
jns
jb
sti
cwtl
mov
jns
pop
mov
and
aas
push
movb
inc
cmp
sahf
sbb
push
sub
push
pop
popa
sti
sahf
cmp
sub
pop
addr16
cld
jl
ret
test
fimull
inc
cmp
outsl
jg
loopne
out
push
out
insl
pop
aad
pop
and
pop
aam
xor
pop
jnp
sarb
cwtl
aam
add
pop
pop
jnp
inc
outsl
sbb
inc
mov
popa
loopne
iret
bnd
fmul
jg
dec
inc
sbb
pop
pop
cmp
jnp
loopne
and
push
pop
push
inc
pop
add
pop
lret
cltd
mov
js
loopne
push
rcrb
jns
fmull
es
push
pop
cmp
pop
pusha
mov
outsb
mov
arpl
fstpt
movsl
push
decl
imul
lahf
loope
data16
push
xchg
cld
pop
jbe
jmp
ds
popa
xchg
out
call
sbb
pop
test
push
stos
call
inc
xor
xchg
inc
xchg
pop
cwtl
jge
push
sbb
clc
iret
mov
pop
fcoml
add
and
push
add
popa
sahf
sti
gs
cld
mov
cmpsl
mov
jmp
cmp
mov
push
mov
jbe
sar
mov
sar
inc
jmp
fidivs
jle
fcompl
jg
inc
dec
sbbb
jp
sbb
adc
sbb
jle
jmp
jnp
aas
testb
hlt
clc
out
andb
test
fwait
int3
jle
or
loopne
sti
lcall
outsb
stos
push
js
mov
sbb
adc
mov
mov
pop
jl
mov
and
mov
pop
jnp
xor
js
fwait
mov
sbbl
mov
xlat
push
loopne
movsl
mov
xlat
jp
stos
push
nop
fidivrs
and
sbb
mov
shl
cmp
fwait
sti
add
pop
mov
mov
cli
test
ret
lret
jb
push
jp
pop
mov
pop
pop
imul
xchg
fcmovnu
fidivrl
adc
pop
in
jae
push
or
mov
dec
stc
cld
pop
mov
fidivl
ljmp
cmp
cltd
push
rolb
orl
imul
sti
int3
jecxz
inc
cmp
xchg
mov
adc
loopne
cmp
clc
sbb
aaa
jg
cmp
pop
cmp
fmuls
lods
dec
xchg
xchg
les
sahf
mov
sbb
mov
mov
mov
add
mov
clc
sbb
inc
xchg
sti
pop
loop
scas
xchg
and
and
sbb
pop
clc
jmp
mov
cwtl
inc
sbb
inc
pop
cmp
sahf
sbb
cmp
daa
mov
cmp
arpl
jns
push
shrb
dec
inc
inc
mull
out
mov
hlt
lcall
add
pop
rorl
mov
jp
mov
sarl
clc
jg
in
push
dec
pop
clc
pop
ficomps
dec
inc
cmp
xchg
sbb
and
xchg
outsl
rcrb
sbb
inc
outsb
cmp
inc
adc
pavgb
addl
sbb
fwait
adc
lods
lock
sahf
popa
lret
or
jg
je
test
lret
fdiv
cld
ret
or
lcall
add
cmp
cli
fiadds
jae
inc
aaa
pop
fidivl
sbb
roll
jle
pop
inc
sti
sbb
xchg
imul
inc
push
arpl
push
adc
cmp
dec
mov
fdivrp
pop
sub
pop
loop
clc
pop
sbb
sbb
push
aad
jnp
push
pop
test
add
pop
mov
jg
push
fidivrl
mov
jmp
xchg
lcall
shl
push
arpl
stos
bound
cmp
jnp
and
sbb
pop
cli
lret
sub
cmp
loope
inc
and
jne
inc
rolb
scas
loope
popa
jg
lcall
xor
or
cld
adc
jp
jl
adc
mov
pushf
jmp
dec
jmp
cmp
xchg
pop
inc
arpl
and
pop
jno
dec
mov
mov
sbb
popf
shlb
xchg
cmp
hlt
or
repz
loopne
add
pop
jge
push
imul
popa
pop
mov
arpl
push
mov
xchg
push
popa
sbb
fildll
clc
pop
inc
roll
mov
int3
ja
or
dec
sbb
int
sbb
cld
js
cltd
mov
and
fistl
call
fstps
cmp
jl
dec
sarb
cmp
lds
xor
sbb
fnstcw
ret
out
dec
pop
mov
cmp
inc
inc
lret
mov
pop
sub
cwtl
jge
imul
sub
test
sub
cmp
fisubs
mov
cmp
dec
js
fwait
mov
cli
das
xor
and
popa
fldt
cwtl
ss
pop
jge
mov
jl
or
jl
mov
out
or
mov
jb
mov
push
insb
pop
mov
cmp
cmp
sti
mov
mov
clc
scas
fdivl
cmp
pop
aas
dec
mov
inc
popa
aaa
fmul
sarb
dec
add
sahf
lds
push
mov
dec
popa
mov
inc
xchg
sbb
fdivrs
jmp
outsb
lds
mov
cmp
out
mov
jg
pusha
cmpl
adcb
lahf
popa
inc
dec
push
cmp
mov
mov
adc
fildll
cmp
sbb
jnp
bound
lahf
cmc
mov
pop
js
ja
movsl
mov
andl
jb
pop
mov
lds
shrb
xchg
xorb
aaa
cmpsl
mov
movsb
aad
movsb
cmp
pop
faddl
pop
mov
cmc
loopne
fcmovnu
jg
fdivrp
cmp
sub
dec
pop
pushf
lahf
pop
cmp
jg
cld
mov
mov
jp
cmp
inc
dec
mov
leave
jns
je
mov
mov
decl
fiadds
sbb
lret
fidivrs
inc
test
js
push
mov
inc
inc
pop
or
jp
mov
sbb
add
cmp
js
ja
mov
inc
add
sbb
mov
and
dec
mov
jg
jnp
fimuls
jmp
ficompl
cli
mov
sbb
rcrb
cmp
ret
dec
push
or
lcall
cmp
push
sub
inc
xchg
rcrl
loop
jp
push
loop
add
jl
and
jnp
adc
filds
pop
cmp
js
adc
inc
cmp
push
sti
jp
pop
cmp
pop
fstps
popa
mov
addb
popa
cmp
jo
mov
rcrb
sbb
ljmp
lahf
dec
aam
js
cmpb
sub
cmp
negb
mov
mov
inc
jge
sahf
jnp
pop
xor
fcomps
sub
jle
js
pop
push
sbb
cmp
and
mov
jg
mov
sti
outsb
scas
jl
sti
ds
loopne
pop
pop
mov
mulb
fistl
adc
icebp
arpl
adc
pop
movsb
xchg
pop
mov
ds
pop
cmp
xorb
and
and
shlb
sbb
scas
pop
jne
cld
jl
push
movsb
adc
aas
in
sbb
stos
jle
push
jge
dec
fistpll
pop
pusha
and
cmp
push
ss
jnp
negl
loope
mov
movsb
pop
pop
andb
and
sar
lock
sbb
pop
mov
js
rcrb
sub
pop
ficomps
pop
adc
mov
cwtl
sti
fwait
sbbl
push
sbb
nop
cmp
cmp
cmp
lds
mov
cli
mov
stos
sti
pop
add
cmp
and
or
pusha
jl
push
mov
mov
addl
dec
dec
and
cmp
cwtl
pop
fdivrs
fistps
cltd
sahf
cmp
lock
mov
in
cmc
popa
xlat
or
dec
mov
movsb
sbb
jmp
xor
pop
ds
inc
sbb
hlt
inc
mov
cmp
xchg
mov
pop
lahf
icebp
pop
ret
out
jp
out
pop
sub
idivb
inc
test
cmpsl
arpl
or
ficompl
add
lds
push
or
inc
shr
outsb
aas
xchg
idivl
jo
pusha
cld
add
std
loopne
jl
cmp
clc
dec
dec
mov
sub
mov
fadd
shll
xor
jp
sbb
mov
push
xchg
cli
sahf
push
push
add
mov
jg
lret
pop
push
fwait
clc
dec
xlat
inc
js
add
mov
cmp
cld
sbb
sbb
mov
pop
xor
mov
inc
cmp
pusha
sbb
inc
mov
mov
pop
jp
cwtl
pop
fdivrl
add
aaa
and
inc
enter
push
jns
pop
sbb
fcomp
sbb
inc
jp
dec
jge
test
in
pop
stos
sti
cmp
shrb
xchg
pop
cmp
mov
mov
fwait
dec
cmc
jge
inc
int
and
fistpll
pop
mov
mov
cmp
js
cmp
scas
jb,pt
mov
inc
fidivrl
mov
cwtl
mov
xchg
push
cli
xchg
jnp
sarb
fisubl
sahf
lock
and
ffreep
sbb
lcall
fimuls
lahf
mov
xchg
cmp
ss
das
insl
pop
mov
ror
push
pop
sahf
mov
dec
cmp
jnp
mov
out
xchg
mov
jl
jg
sub
aad
das
sarb
cld
inc
cmp
sbb
push
shll
icebp
pusha
jp
in
mov
xchg
mov
jnp
cmp
lods
inc
shlb
mov
adc
jl
aad
sub
dec
or
sbb
repz
jp
into
add
ds
jle
cltd
cmp
lea
hlt
xchg
xchg
cmp
jb
cwtl
jle
xchg
push
xchg
pop
loop
sbb
int
popa
pop
adc
add
pop
jle
into
pop
adc
jp
aad
movsb
push
aad
into
sbb
mov
das
test
sbb
pop
pop
jl
lea
sbb
lcall
loopne
xchg
filds
xor
jl
fdiv
cwtl
fidivs
pop
cmpl
fisttpl
jge
lcall
repz
inc
cmpb
xchg
sbb
xor
dec
jb
pusha
cmp
mov
repz
loopne
mov
cmp
pop
mov
lahf
loop
bound
sub
jb
cmp
pusha
js
outsl
fcompl
cmp
jns
lahf
cwtl
pop
xchg
add
aad
clc
aas
sti
jge
rcrb
push
pop
mov
lcall
mov
daa
aad
mov
stc
pop
js
popa
mov
add
lea
stc
mov
cmp
push
adc
dec
inc
cmp
aaa
aad
fdivr
aas
push
jo
pop
sbb
aaa
push
adc
sbb
ss
sub
pop
cwtl
rcrb
andl
cmp
aad
dec
cmpl
push
fbld
or
popl
sahf
mov
clc
nop
inc
loopne
jns
pop
and
sbb
bound
fcoms
ds
lcall
pop
loope
pop
dec
sbb
pop
inc
and
sbb
cmp
cmp
push
sbbb
add
ja
pusha
inc
dec
mov
negb
ds
jge
inc
in
sbb
cmp
repnz
cwtl
add
jb
pop
pop
add
mov
addb
push
jg
and
sub
add
cld
add
lcall
mov
addr16
fincstp
decb
xchg
inc
fimuls
std
ret
fnstenv
xchg
arpl
mov
lcall
setb
cwtl
adc
jns
lcall
sub
and
pop
incb
fbld
add
mov
iret
xor
cmp
addb
orl
xor
fcoml
and
mov
cmpsl
pop
jge
je
adc
cwtl
cmp
cmp
mov
xchg
call
repz
stos
jnp
mov
pusha
ds
pop
data16
cltd
inc
mov
cmp
loopne
sarb
pop
cmp
and
sti
sbb
inc
inc
lods
jae
cli
cmp
dec
push
fistpl
jp
stos
mov
outsb
inc
pop
inc
pop
push
jg
pop
cmp
rcrb
mov
push
hlt
pop
enter
cmp
inc
xor
mov
cmp
add
push
loope
pop
mov
or
inc
dec
sbb
fdivr
mov
jge
aad
add
lcall
xchg
jle
sbb
ljmp
pop
dec
cmp
popa
inc
sti
cmp
xor
sub
mov
repz
adc
mov
sahf
sti
pop
pusha
mov
push
xor
xor
daa
xchg
mov
fists
js
sbbl
lds
pop
push
pushf
inc
mov
cmp
adc
cmc
sbb
fiaddl
or
mov
mov
xor
ljmp
inc
je
mov
or
xchg
pop
mov
stos
mov
adc
rolb
repz
adc
outsl
cmp
and
jg
xchg
sub
sbb
mov
aas
jbe
cmp
pop
mov
jecxz
xchg
pop
es
and
push
mov
dec
incb
pop
fcompl
ret
clc
pop
orb
sahf
cmp
je
sbb
cmp
lcall
fcoms
jne
mov
loopne
test
cmp
incb
adc
jns
add
mov
js
sarl
cmp
into
fdivr
ja
pop
popl
ds
incb
fdivrs
mov
xchg
add
dec
lret
jg
xchg
adc
cmp
mov
pop
push
daa
sbb
push
mov
outsl
cmpl
scas
push
dec
mov
fwait
and
inc
pop
pop
pop
mov
dec
jns
push
xchg
subl
stc
scas
jl
xchg
mov
outsb
sub
pop
mov
mov
jbe
sub
and
loopne
andb
roll
push
fildl
add
jb
aas
popa
lahf
inc
aas
nop
pop
ud0
push
mov
fimuls
sbb
pusha
cld
aas
push
mov
lcall
mov
sbb
pop
testb
xchg
iret
rcrb
loopne
xor
pop
cmp
cmp
aam
fcmovb
pop
cmp
mov
mov
cli
pop
sti
cmp
fwait
dec
mov
push
cmp
pop
fildl
pushf
mov
fwait
mov
jne
inc
jmp
add
mov
sbb
js
pop
icebp
jp
mov
pop
mov
push
cwtl
mov
inc
cmp
xchg
lahf
fcmovnb
mov
call
popa
mov
pop
adcl
push
push
mov
data16
pusha
pusha
mov
and
mov
adc
fwait
shlb
jge
bnd
pop
cmp
jle
orb
call
out
pop
adc
cmp
adc
in
cmp
inc
jo
pop
mov
fcomps
loopne
mov
repz
xor
cmp
pop
inc
cmp
mov
fildl
push
mov
cmp
fbstp
outsl
lods
cmp
add
loop
jg
or
xchg
jmp
mov
xor
mov
lods
mov
fiaddl
sub
sbb
into
inc
adc
xor
cwtl
fidivs
js
sti
lahf
dec
cli
mov
popa
jnp
pop
cli
mov
fists
rolb
xchg
jp
push
cmp
sbb
or
mov
sti
inc
cltd
sbb
jb
lahf
pop
dec
push
mov
fdiv
pop
pop
gs
mov
imul
mov
pop
push
pop
xor
xor
xchg
mov
sbb
cwtl
idivl
aas
or
les
cmp
pop
mov
jle
sahf
fldenv
pop
push
mov
sbb
cwtl
push
adc
loopne
adc
add
addl
ss
cs
test
jnp
jp
xor
inc
mov
pusha
aas
lret
ss
mov
sub
fld
fisubs
add
jge
sbbl
fistps
divl
in
pop
mov
sbb
jge
inc
js
fistpl
outsl
cmp
clc
flds
xor
cmp
sub
inc
push
cld
sbb
cmp
add
pop
imul
sbb
sti
mov
lcall
mov
js
fidivs
mov
jnp
dec
adc
dec
sub
pop
pop
repz
subl
mov
cwtl
mov
pop
loopne
aad
add
mov
push
cmp
dec
arpl
inc
pop
add
popa
pop
lcall
fwait
clc
fiadds
pop
dec
cmp
std
dec
repz
cmp
iret
notb
mov
loop
mov
mov
pop
mov
pop
das
pop
sbb
xor
sbb
jge
push
xor
mov
pusha
lcall
orb
dec
scas
dec
mov
js
cmp
inc
cmp
lds
cmpl
fadd
aaa
hlt
push
mov
sbb
aad
aas
jp
mov
mov
or
cwtl
mov
js
mov
push
mov
rclb
sub
mov
xor
fwait
cmp
jg
sbb
and
cs
cmp
pop
cld
in
push
mov
sbb
in
lahf
add
iret
div
sbb
mov
adc
repnz
jl
pop
xchg
bound
lahf
pop
mov
fwait
push
push
or
adc
sti
popa
data16
cmpsl
pop
push
cwtl
inc
push
pop
inc
push
and
add
pushf
mov
pusha
sbb
pop
add
mov
shll
sahf
sbb
fisubs
mov
bound
loopne
mov
pop
jp
mov
ret
sub
cmp
sbbb
fsubl
popa
mov
cmp
inc
bound
sub
rcrb
loopne
cmp
ficomps
jae
int3
xchg
cli
daa
xchg
mov
adcb
cwtl
push
pop
pushf
adcl
shrl
mov
cmp
cmp
mov
cmp
js
cwtl
cmp
aas
cmp
cmp
add
movsb
cmp
leave
iret
sbb
cltd
adc
test
enter
mov
filds
mov
enter
push
pop
xchg
cmp
cli
sbb
sti
scas
mov
clc
dec
inc
pop
dec
out
and
mov
pop
jmp
adc
pop
aas
jge
push
sbb
adc
pop
stc
arpl
mov
jle
sbb
mov
add
inc
pop
aaa
mov
mov
mov
mov
sbb
pop
xchg
xor
pop
fidivrl
sbb
jnp
xchg
mov
ljmp
inc
jg
jge
cs
pop
rorb
aas
mov
xchg
mov
fdivp
jg
popa
mov
aad
minps
add
sbb
jl
mov
cmpsb
jb
jb
shrb
sub
cmp
loopne
inc
shrb
cmp
cmp
add
lret
test
sti
inc
lret
lea
fistps
das
push
jl
popa
aaa
and
cltd
cld
cwtl
lret
lods
idivb
faddl
je
xchg
mov
add
aaa
insl
sbbl
xor
mov
fstpt
pop
jl
jo,pt
push
mov
jnp
je
in
test
adc
push
sub
out
mov
xor
cwtl
fldl
dec
fistpll
pop
sub
sbb
pop
clc
aad
and
inc
cs
cmp
std
mov
loope
add
mov
fstps
mov
add
cmp
pop
sbb
mov
adc
mov
fisubrs
add
cmp
push
mov
xchg
pop
negl
lahf
mov
inc
fcomps
in
add
xchg
fidivrs
mov
cmc
mov
jle
loope
sbb
xorl
cmp
rcrb
imul
pop
mov
cmp
fcmovu
lahf
inc
sub
aas
stos
xchg
lret
leave
inc
cmp
jnp
pop
jp
insb
neg
vpminub
js
xchg
ficoml
clc
incl
andb
flds
mov
add
pop
pushf
pushf
out
rcrb
add
jnp
dec
lea
pop
mov
xchg
loopne
pushf
lcall
sbb
xor
add
out
mov
pop
push
jp
loope
xor
mov
pop
inc
jl
mov
jo
push
mov
jle
pop
inc
fwait
test
lds
fsubl
jae
inc
xchg
cmc
jo
mov
and
fmuls
fwait
cmp
je
mov
loop
cmp
pop
add
mov
xchg
cwtl
rcrb
ljmp
aaa
pop
cmp
popa
ret
stos
js
and
insb
mov
add
xlat
lock
sbb
jnp
pop
and
cmp
test
fwait
fadds
sti
mov
mov
or
mov
mov
aas
fisubs
xor
mov
jae
fdivrl
inc
bnd
and
dec
fwait
mov
je
pop
loopne
cmp
ficompl
sbb
fidivrs
fidivl
push
pop
test
mov
mov
add
adc
dec
fistps
adc
fisubs
subb
fistpl
mov
jp
clc
and
jge
jg
pop
cmp
lret
mov
pop
mov
loope
inc
pop
mov
sub
cmp
cld
fisubl
rcrb
jo
mov
fadds
xchg
mov
add
push
fisubrs
dec
mov
sbb
pop
mov
sbb
push
cmp
fistps
popa
cld
fadd
je
mov
sbb
loop
xchg
gs
loop
loopne
outsb
cmp
cwtl
cmc
inc
mov
mov
mov
pop
pop
rcr
sbbb
mov
lcall
jg
inc
pop
loopne
sbb
cmp
lahf
cld
add
lds
aad
pop
hlt
mov
jb
adc
mov
movswl
clc
add
pop
push
pop
inc
sbb
sahf
push
mov
aas
popa
cmp
outsb
jnp
sarb
mov
cmp
ret
stos
mov
sbb
cmpl
pop
and
mov
pop
adc
add
mov
ficompl
ljmp
stc
cmp
fadd
dec
or
pusha
cmp
pop
das
push
jle
popa
fwait
mov
mov
sahf
sub
inc
jmp
les
sub
xor
scas
mov
pop
notl
daa
hlt
sub
aas
mov
cmp
int
arpl
pop
out
cld
dec
outsb
cmp
fadds
push
es
inc
or
repnz
lcall
into
jl
rcl
mov
sbb
cwtl
cmc
scas
stos
adcl
in
data16
jae,pt
mov
cmp
inc
ret
adc
cmp
mov
sti
fistpl
cmp
xchg
jnp
cwtl
jnp
adc
push
sbb
ffreep
pushf
in
inc
xchg
pop
mov
pushf
jnp
out
inc
dec
pop
das
ds
into
jl
pop
sti
aas
sub
fwait
mov
add
ss
jp
arpl
hlt
cmp
outsl
fwait
dec
in
mov
mov
xchg
testb
inc
and
jnp
lahf
cmp
jg
dec
xchg
pop
xchg
loope
in
fsubrl
loop
ret
push
mov
js
sbb
cmp
mov
adc
movsb
pop
cs
sti
lock
and
and
pop
lahf
jg
inc
fidivs
inc
jb
sbb
pushf
pop
dec
repz
cmp
cli
xor
incb
mov
out
jae
js
jnp
mov
fstpt
cmp
aad
movsb
pop
mov
pop
aas
mov
adc
cmp
pop
pushf
lds
inc
adc
adc
sub
mov
lahf
xchg
jle
sbb
push
stos
pop
pop
or
cs
cmp
fcompl
pop
dec
dec
loope
sbb
pusha
fwait
push
stos
loope
xor
mov
mov
lods
inc
jge
js
lcall
mov
mov
dec
pop
cmp
int
cmc
cmp
sahf
pop
jnp
clc
xchg
and
aaa
cmp
xchg
inc
mov
inc
mov
lcall
ljmp
inc
test
mov
fisubl
dec
adc
pop
mov
mov
and
dec
clc
mov
movsb
push
repz
mov
lahf
mov
pusha
sbb
mov
arpl
pop
cli
adc
outsb
or
or
je
lcall
jle
fists
mov
fldenv
pop
dec
rclb
ficompl
pop
add
jb
sbb
mov
fldl
dec
mov
cmp
inc
cmp
aaa
xchg
mov
addb
or
pusha
xor
out
xchg
xchg
imul
pushf
out
sarb
mov
jns
leave
sti
xchg
pushf
jb
jbe
bound
lahf
aas
push
jg
jnp
dec
lock
jl
add
mov
jb
pop
cld
adc
add
into
mov
pop
sahf
mov
gs
aas
xor
push
sbb
lcall
sahf
and
pop
fwait
ds
adc
loopne
xchg
lods
jl
jg
test
mov
adc
sbb
lds
xchg
test
ficomps
mov
rorb
sbbl
pop
pop
adc
pop
movsl
mov
jbe
and
lea
sub
mov
pop
mov
lahf
jl
or
mov
inc
lds
mov
imul
cli
cmp
push
pop
xchg
es
add
dec
sub
or
adc
mov
push
mov
sahf
cmpsb
addr16
sarb
mov
jg
hlt
mov
sub
fcomps
sbb
js
or
mov
nop
popa
pushf
cmp
jge
cwtl
pop
and
jno
cmpsb
fistpl
cmp
cmp
cli
and
push
dec
out
mov
fnsave
pop
ficomps
pop
fcomp
xchg
jno
cmp
nop
nop
cmp
cmp
jg
je
dec
sahf
inc
loop
mov
push
mov
pop
push
dec
loopne
add
inc
fcmovnu
out
and
lcall
jnp
push
adc
jle
mov
pop
mov
jnp
add
mov
pop
aas
sti
mov
push
sahf
fidivs
jg
repz
sti
mov
jl
pop
cmp
push
sar
pop
mov
decl
sub
sbb
fstpt
inc
cwtl
inc
fcomps
mov
jg
clc
cmp
pop
shl
cmp
scas
xchg
das
jp
mov
xor
loopne
cmp
leave
and
cld
pop
pop
cmp
fisubrs
nop
dec
je
icebp
js
imul
orb
bound
pop
fisubs
cmp
lds
fdiv
mov
enter
ljmp
adc
mov
push
cmp
xchg
sbb
shlb
sub
ret
mov
loopne
hlt
sbb
jno
lcall
hlt
pushf
sub
test
dec
xor
cwtl
int3
sar
pop
insb
arpl
mov
add
idivl
xor
sbb
lahf
sub
mov
adc
add
add
out
fiaddl
jge
xchg
jnp
xchg
mov
es
cmpl
aas
jnp
cmp
jge
xlat
pop
outsb
jns
inc
dec
cmp
mov
sbb
loopne
cmp
inc
mov
cmp
arpl
fldt
stos
mov
sub
push
incl
dec
dec
xor
jp
mov
les
dec
jle
inc
out
mov
setp
stos
mov
or
aam
sti
sbb
idivb
mov
in
cmp
rcrl
insl
jno
pusha
jno
mov
iret
pop
ret
push
mov
mov
mov
addb
js
mov
lcall
hlt
mov
cmp
jl
ficoml
mov
jp
cmp
cld
out
je
pop
xchg
mov
pop
fwait
adc
dec
pop
addb
sarl
clc
jg
jge
cmp
cmp
rcl
mov
fistpl
pop
and
inc
lahf
mov
push
mov
mov
rcl
je
mov
pop
mov
or
mov
add
mov
pop
pop
sbb
jno
lcall
push
inc
inc
lahf
pop
aad
push
mov
cmp
jge
sbb
stos
ficoml
lahf
push
mov
filds
shrb
xchg
mov
push
mov
scas
cmp
aaa
fiadds
pop
lret
inc
testl
jb
sbbb
lahf
or
cwtl
mov
cmp
testb
adc
fsubs
pop
inc
lcall
pop
or
inc
or
sub
or
inc
jae
pop
pop
mov
cltd
loopne
cmp
mov
pop
bound
pushf
jl
inc
pop
push
imul
sti
es
inc
add
lcall
pop
mov
sbb
outsb
push
sub
sbb
rclb
mov
sub
jnp
sub
inc
sahf
cmp
aaa
jle
mov
test
int
cmp
dec
dec
jge
pop
mov
cli
pop
insl
in
lcall
clc
mov
imul
cld
pop
sbb
xchg
leave
mov
cmp
add
dec
add
cli
inc
xchg
xchg
fwait
cs
mov
pop
adc
xchg
xchg
js
mov
addb
cli
dec
mov
pop
xchg
sbb
add
int3
cmp
sub
and
addr16
ss
jp
cmp
xchg
loopne
and
xchg
rcr
insb
fwait
pop
cltd
jo
pop
pop
mov
mov
mov
inc
cmp
jle
and
fstpt
inc
pushf
adc
lea
cwtl
les
clc
pop
mov
pop
mov
inc
cmp
arpl
mov
xchg
and
mov
sbb
push
fimull
pop
xchg
inc
mov
cmp
or
sbbb
aaa
xchg
push
pusha
adc
push
pop
int3
push
je
mov
aas
adcl
lcall
sub
sbbl
std
pop
idivb
and
xchg
cmp
push
js
cmp
loope
mov
jl
adc
popa
mov
sti
mov
fcmovu
sub
and
cmp
sbb
pop
mov
arpl
sub
movsb
test
jne
pushf
cmp
pop
repnz
repnz
nop
lahf
push
mov
xor
sub
clc
shll
stos
lods
pop
xchg
rcrb
cmp
cmp
gs
cmp
aas
cmp
mov
or
xor
cmp
sbb
mov
fcmovu
pop
cli
pop
cmp
add
adc
jg
dec
lods
and
orb
adc
push
jmp
inc
or
pop
dec
jnp
cwtl
pop
and
xchg
sbb
pop
sbb
in
mov
add
pop
mov
popa
sahf
pop
mov
mov
sub
fistpl
fdivs
loopne
fcompl
repz
lahf
sbb
xor
dec
out
adc
fcoml
ret
xchg
hlt
adc
add
clc
sub
stos
mov
loopne
xchg
mov
vmovdqa
cmp
xorl
in
fidivrl
mov
dec
add
xchg
fiadds
out
dec
int
jg
rcrb
pop
faddl
sti
pop
jg
cwtl
jge
dec
in
mov
dec
lds
mov
pushf
add
pop
gs
jmp
mov
sarl
xor
shrb
mov
outsb
imul
pop
sbb
andb
pop
mov
mov
and
les
cmp
sbb
in
pop
cmp
pop
inc
pop
add
jnp
out
fwait
mov
cwtl
mov
dec
mov
inc
shl
sbb
jge
and
mov
pop
mov
cmpb
adc
inc
pushf
adc
fldcw
sub
addr16
pop
bound
pushf
fimuls
pop
pop
sbb
pop
adc
and
and
movsb
jo
dec
sti
pop
fnstcw
inc
sbb
add
cmp
pop
lock
pop
jge
pop
xchg
mov
loop
sbb
cmp
inc
ss
push
mov
sahf
andb
pop
dec
sbb
mov
cmp
testb
out
inc
jno
push
mov
adc
pusha
pushf
xchg
dec
fstpt
fnstenv
jg
sub
push
cli
cmp
push
xchg
mov
jge
rcrl
neg
test
jae
jg
mov
fists
dec
fwait
lcall
test
in
les
dec
jp
mov
mov
pushf
jno
js
mov
pop
pop
xchg
stc
push
test
sbbb
mov
loope
jp
sbb
adc
jle
fsubrl
mov
jnp
mov
jge
test
cwtl
mov
xchg
loopne
or
testb
cld
mov
mov
pop
clc
sti
jle
inc
jno
mov
pop
pop
test
push
ljmp
adcb
cld
fdivl
loop
pop
hlt
enter
jmp
loope
fimull
mov
sub
je
xchg
dec
mov
sahf
cmp
cmc
and
cmc
jle
push
pop
pusha
aaa
negl
jge
pop
jmp
loopne
stos
fxch
scas
stos
pushf
fdivrl
pop
daa
lcall
adcb
pusha
cmp
decb
sbb
cld
mov
mov
dec
fucom
inc
dec
and
test
jae
lahf
mov
js
popa
push
enter
xlat
inc
push
or
add
mov
adc
jg
pop
decb
pushl
and
jge
inc
in
xchg
fbstp
sbb
cld
push
and
dec
sbb
cmp
mov
inc
inc
leavew
xchg
sbb
jp
xor
aas
add
mov
xchg
mov
data16
shll
pop
test
xor
fldl
xchg
sbb
cs
mov
mov
in
arpl
xor
cmp
jae
mov
mov
fwait
cltd
lret
aad
fsubp
lds
pop
cmpsl
jg
cld
sbb
insl
cmp
shl
cmpb
or
jg
inc
sbb
pusha
in
loopne
rcr
adc
mov
mov
stc
ljmp
pop
and
sarl
loopne
jl
cld
scas
push
sahf
pusha
out
xor
idivl
adc
xor
mov
jle
sub
xchg
cwtl
fdivrl
lahf
mov
cmp
jnp
fistpl
dec
rorl
loopne
stc
test
and
mov
dec
outsb
mov
ficoms
test
aas
mov
dec
sbb
popa
fsubs
pop
add
std
cmp
int
rolb
xchg
out
cmc
js
pop
cld
mov
scas
and
push
and
ficomps
adc
test
fdivr
lock
ds
add
aas
sti
mov
fsts
pop
rolb
lods
adc
jg
adc
outsb
sbb
je
push
jnp
jae
cmp
aas
mov
pop
inc
xchg
mov
mov
cwtl
cmp
add
mov
stc
das
dec
pop
mov
cwtl
in
mov
jo
cmc
pusha
cmp
pop
loope
cmp
mov
and
cmpsl
fcoml
push
jg
outsl
int
xor
cltd
sbb
and
cmp
adc
mov
cmp
pop
stc
pop
ficomps
negl
mov
dec
loopne
pop
xor
push
out
mov
ficompl
dec
subb
mov
pop
and
adc
push
outsl
cwtl
pop
out
pop
or
in
test
sahf
ljmp
add
jbe
lcall
loopne
sbb
loope
rolb
inc
or
mov
sti
inc
push
jp
pop
scas
sbb
mov
mov
inc
outsl
hlt
sbb
mov
sbb
mov
dec
sbb
mov
inc
push
into
pop
mov
add
xchg
push
inc
js
jecxz
sarb
jle
push
aas
fistl
pop
xchg
mov
in
movb
pop
je
push
les
push
jnp
pop
mov
addl
pop
loop
pop
push
jge
pop
mov
rol
pop
aaa
pusha
jge
jb
sbb
fcomps
aas
pop
rolb
pop
fistps
mov
sbb
mov
xchg
cmp
cmpb
fcomp
std
ljmp
jns
sti
stos
push
mov
imul
push
loopne
jge
xchg
iret
aas
cmp
dec
mov
xchg
pop
push
xlat
pop
and
xchg
call
mov
mov
mov
repz
stos
js
pop
inc
inc
sub
jge
cmp
push
cwtl
cmp
adc
xchg
mov
push
cmp
out
ds
icebp
lea
or
push
in
inc
rolb
sub
sahf
cmp
sahf
mov
lahf
popa
pop
cmp
rolb
orb
push
mov
mov
pop
push
js
mov
mov
lcall
ret
test
call
jp
sbbb
notb
xchg
jns
pop
xorl
push
sbbb
mov
cmp
pop
jl
cmp
mov
sbb
sarl
rclb
jno
and
sbb
dec
pop
sti
dec
jo
jo
add
mov
xor
and
cld
sbb
xchg
pop
stc
jo
lods
sub
negb
mov
jb
cmp
jle
stos
pop
imul
lock
cmp
fcompl
loope
arpl
rorb
xchg
jp
aam
clc
movsb
lahf
aaa
idivl
xchg
mov
mov
dec
or
push
mov
jge
pop
cmpb
js
add
movsb
dec
lcall
ret
js
cmc
sbb
adc
xchg
test
adc
jge
into
mov
enter
or
adc
lcall
add
int
pop
adc
cmp
push
pop
sbb
negb
sbbl
jo
faddl
aas
jnp
push
mov
daa
jae
dec
ss
sbbb
sbb
xchg
dec
pop
mov
fbstp
xchg
fcoms
cmp
dec
lret
rcrl
pop
cld
jnp
jns
xchg
in
pop
sub
inc
xchg
cmp
lock
or
push
sub
inc
pop
fadds
nop
add
mov
cwtl
js
pop
adc
sti
pushl
jnp
mov
mov
cmp
sub
cmp
add
out
icebp
mov
jb
or
sti
mov
loopne
dec
cmp
pop
or
sti
cli
fdivrs
aaa
lahf
fwait
push
cmp
cmpl
popf
dec
popa
cmp
dec
cli
ljmp
mov
or
je
cwtl
dec
cli
sti
mov
repz
inc
dec
mov
cmp
fdivrl
ljmp
pushf
out
inc
mov
inc
jp
cli
loopne
ljmp
cmp
clc
ljmp
cmp
mov
pop
cwtl
sti
and
lods
mov
fadds
push
jl
inc
or
inc
push
xchg
sub
mov
mov
pop
shl
mov
xor
jno
jmp
hlt
cmp
js
ja
push
or
lds
aas
out
add
sbbb
sbb
dec
sarb
pop
mull
fidivrl
adc
mov
inc
fwait
sbb
int
add
mov
addr16
push
and
loop
jl
fisttps
jmp
inc
pop
jl
jmp
test
rcrb
ficomps
sbb
sbb
cmpb
adcb
pop
xchg
shrb
imul
pusha
jns
mov
jg
cmp
mov
out
inc
mov
dec
insb
shlb
cmpb
rcpps
mov
adc
pop
sti
sbb
pop
loop
add
aam
pop
lds
sub
cmp
xchg
fists
push
xchg
pop
shl
scas
sbb
xchg
jno
addl
faddl
hlt
loopne
adc
dec
pusha
ja
leave
inc
test
pop
stc
cmp
and
push
cmpl
dec
push
inc
xchg
jb
sbb
pop
mov
cmp
add
xchg
cmpsb
mov
js
aas
add
scas
ss
dec
inc
loopne
ficomps
or
mov
icebp
dec
sub
pop
lahf
aas
add
push
mov
pop
mov
inc
cmp
xchg
rcrb
lods
cmp
push
sbbl
cld
mov
xchg
daa
aaa
stos
mull
aas
pushl
sbb
mov
hlt
and
shlb
lahf
inc
dec
idiv
pop
cmc
mov
sbb
cmp
rcrb
jne
lds
mov
mov
jne
repz
repz
cmp
arpl
pop
and
inc
mov
add
push
mov
loopne
sbb
pusha
pushf
loopne
rcr
pop
dec
xchg
jle
mov
out
sbbb
lcall
cmp
push
sbb
jle
arpl
adc
mov
stos
sub
sbb
mov
pop
sar
pop
sbb
dec
ficomps
lahf
movsl
in
cld
aas
pop
popf
push
lods
pop
push
jg
sub
daa
mov
cmp
cmp
cld
fwait
je
lcall
in
pop
pop
mov
orl
mov
popa
lret
fdivrs
xchg
inc
sbb
mov
ficompl
arpl
jne
inc
inc
mov
xor
adc
jge
adc
cmovp
mov
jnp
je
xchg
cmp
cmp
cmp
and
push
scas
rcll
mov
add
and
rcrb
cld
add
fsubl
xchg
imulb
push
mov
mov
inc
mov
sarb
fwait
adc
hlt
pushf
ficomps
jge
sub
mov
rclb
pop
jnp
pop
jne
jl
jmp
dec
lods
faddl
pop
or
notb
aas
sbb
sti
cld
sbb
lahf
push
inc
lcall
decl
pusha
and
js
or
sti
cli
mov
pop
movsl
inc
movb
loop
inc
xlat
dec
push
jnp
pushf
std
jge
vcvtss2sd
movsl
pop
push
jge
mov
inc
push
lret
sbb
mov
pop
sub
sbb
jp
or
jp
ds
fsubl
mov
aad
jnp
sti
out
jp
bound
mov
inc
xchg
cmp
inc
xchg
cmpb
inc
xchg
and
out
idivb
jns
inc
shrb
bound
mov
lds
adc
mov
js
fbld
js
sar
sahf
sbb
fidivrl
inc
fisubs
jno
pop
lahf
cmp
sub
cmp
rolb
fsubl
xor
cwtl
sbb
cmc
sti
fwait
cld
test
jb
loopne
sub
es
jnp
mov
lahf
sbb
cmp
lcall
xor
ljmp
push
pop
pop
mov
add
push
sbb
outsl
jle
call
stos
loop
dec
aas
cld
pop
into
fiaddl
sti
vpacksswb
stos
push
mov
dec
cmpl
dec
movsb
iret
pop
inc
out
inc
std
inc
jl
pop
out
sbb
sbb
bnd
jb
fwait
push
loopne
cld
mov
cmp
xchg
out
repz
adc
sub
addr16
cmpsb
jge
aas
dec
cmp
jbe
andb
sbb
leave
push
cmp
push
call
push
lcall
fisttps
add
jmp
rcrb
adc
cltd
popa
fistpl
jg
pop
repz
fsubs
mov
test
mov
pop
pop
jo
pop
ljmp
les
pop
add
mov
pop
or
sbbl
call
ss
stos
mov
sub
lret
mov
test
fldcw
sti
mov
and
cmp
pop
pusha
popa
cmp
xchg
fadds
mov
fistpll
ss
pop
icebp
pop
jae
mov
pop
imul
fdivrp
loopne
incl
dec
lea
jle
mov
inc
cld
cmp
pop
sti
lea
pop
loopne
sbb
movsb
adc
hlt
ret
dec
test
mov
addl
and
dec
and
jo
sbb
rolb
decl
out
cltd
int
mov
inc
clc
ds
cwtl
cli
or
mov
aaa
daa
add
pop
cwtl
out
lock
fstpt
pop
aaa
inc
int
cwtl
mov
add
pop
sarb
inc
lahf
pop
scas
ss
loopne
jns
sti
sub
popa
push
clc
jnp
lcall
sbb
lcall
lcall
add
pop
pop
mov
lods
cmp
mov
add
dec
cmpsl
inc
test
popa
sar
sbb
mov
sbb
mov
mov
add
test
subb
rcr
std
pop
je
mov
mov
cmp
add
cmp
cli
lcall
inc
cmp
stos
jb
cld
mov
cmp
dec
xchg
scas
inc
mov
mov
mov
fisubl
jne
rolb
std
jle
nop
mov
cmp
add
adc
push
cs
adc
pop
cwtl
or
dec
and
clc
or
mov
jle
or
jb
jg
or
in
and
subl
xchg
fildl
jg
xor
movsb
je
push
cli
xchg
sbb
sahf
loopne
add
mov
adc
cwtl
mov
cmp
lcall
popl
push
rolb
aas
idiv
jl
arpl
test
mov
jp
xchg
scas
lock
mov
rclb
out
mov
leave
icebp
push
push
mov
call
adc
push
add
clc
jle
jge
js
add
fidivrs
cmpb
es
sbb
and
push
scas
into
inc
pop
pop
inc
pushf
dec
loopne
addr16
sahf
pop
sub
nop
sbb
add
ds
inc
adc
aas
add
fbstp
in
cmp
add
sti
aad
push
or
xor
sahf
cmp
pop
orb
inc
dec
fdecstp
jge
mov
lcall
pop
sti
mov
sbb
data16
shlb
xchg
cs
mov
mov
jp
sarb
roll
mov
mov
jle
lahf
xorl
mov
xorl
pop
inc
dec
mov
pop
inc
cmp
cmp
fimuls
out
lock
movsl
push
call
pop
rol
pop
sub
pop
mov
mov
sti
lcall
sbb
pop
sbb
cmp
dec
adc
cmp
mov
dec
push
popf
jge
lret
jg
jns
in
lcall
pushf
pavgw
cmpl
inc
fst
popa
mov
cld
sbb
pop
mov
and
and
mov
stc
xchg
cmp
push
in
cmp
jmp
fisubs
dec
and
pop
cwtl
js
mov
dec
push
sbb
inc
les
lods
into
ljmp
cmpsb
in
fs
ss
shll
jge
cmc
sarl
mov
in
aas
faddp
div
inc
xor
cmp
cli
lahf
mov
shl
and
popa
adc
mov
sti
sbb
negb
mov
dec
std
jg
dec
adc
pusha
inc
jae
ja
cltd
aas
rorl
sahf
fistps
idivl
cmp
add
sti
clc
into
jl
and
aaa
repz
test
into
jge
test
test
ja
or
out
clc
jp
push
dec
xchg
sti
sub
lods
xchg
mov
test
mov
xchg
xchg
sbbl
push
mov
xor
cli
pop
push
mov
rcrl
cmp
dec
mov
jl
xor
push
leave
loope
adc
leave
ljmp
nop
stc
cwtl
fdivl
cmp
mov
and
cmp
aas
jnp
test
xchg
test
jb
sbb
add
into
jbe
pop
rorl
push
mov
inc
mov
xchg
xchg
push
sarl
sub
test
and
xorb
lahf
push
fcmovnb
pop
idivb
jge
cmp
sbb
pop
jg
fidivrl
sahf
sbb
stos
flds
sbb
cmp
je
cmpps
jmp
mov
add
imul
cmp
push
mov
mov
aaa
sub
sahf
aas
je
psrld
cmp
or
mov
push
sub
cwtl
lea
int3
rcl
cmp
xchg
xchg
jp
rcr
xchg
inc
cmc
adc
fcmovnb
mov
inc
add
mov
sar
cld
mov
lods
cmp
clc
fiadds
dec
int3
and
sbb
mov
mov
add
sbb
pop
cmp
lods
xor
rcrb
xor
sahf
fwait
pop
add
inc
fldl
popa
sbb
lahf
jo
jle
fisubl
fidivrl
push
mov
or
jnp
mov
mov
mov
lds
cli
sbb
pushf
push
rclb
inc
jle
fsubr
mov
sbb
call
imul
loopne
dec
inc
push
sahf
inc
mov
xchg
cmp
cmp
mov
push
push
orl
in
repnz
push
jnp
jle
mov
xchg
jp
jmp
adc
dec
push
js
inc
pop
lock
cmp
int
and
outsl
push
pop
xorl
lahf
pop
jl
inc
lea
sbb
jl
pop
lds
adc
cmp
leave
jge
or
fcoms
insb
xchg
mov
shlb
cltd
mov
jp
xchg
cmp
outsl
inc
cli
fsubr
jle
rcrl
add
fwait
dec
cli
mov
and
xchg
jns
in
mov
cltd
jge
mov
add
sar
push
mov
aaa
inc
cmp
cmp
pushf
jg
mov
cld
xchg
aad
dec
push
loopne
lahf
js
and
int
test
xor
cs
mov
stc
dec
mov
pop
ficomps
in
adc
adc
insl
shlb
popa
lret
movsl
les
in
pop
stos
loopne
frstor
mov
sbb
mov
or
pop
data16
adcb
aaa
fsubs
mov
mov
pmaddwd
dec
popa
sti
lahf
enter
sbb
push
cwtl
jp
jnp
mov
cmp
jne
leave
mov
sbb
jae
popa
dec
mov
xchg
pop
sbb
xchg
test
mov
pop
jbe
and
jle
out
shl
inc
or
pusha
sahf
jge
mov
cld
pop
push
cwtl
inc
jp
sbbb
xchg
mov
cwtl
jnp
push
leave
adc
pushf
ljmp
call
push
sub
adc
mov
rcrb
add
fwait
fisttps
xchg
pushf
dec
lods
cmp
xchg
shl
fcompl
js
ret
sub
mov
in
fiadds
inc
push
jle
repnz
adc
fnstcw
cmp
insb
inc
jge
les
adc
xchg
jg
xchg
mov
aas
adc
fidivrl
sub
mov
xor
std
xor
mov
xor
xchg
incl
fimull
dec
cmpsb
int
push
popa
pusha
andl
pushf
add
pop
pop
and
in
xchg
div
icebp
cmp
test
lcall
subb
pop
mov
pop
and
mov
std
js
jae
js
jl
test
sbb
mov
xchg
cwtl
cmpsl
jae
pop
in
jge
test
loopne
jne
push
inc
call
mov
mov
sti
cmp
sarb
cmpsb
or
fidivrs
fistl
cmp
cmp
xchg
sbb
jp
mov
cmpsl
pop
mov
ds
cld
js
pop
shlb
inc
sub
mov
mov
mov
push
je
gs
cmp
ficoms
std
stos
rolb
sahf
decb
int3
cmp
mov
and
scas
icebp
loop
or
je
add
les
and
sbb
xchg
in
jle
push
jp
pop
sub
test
ljmp
iret
test
adc
fstp
lds
sbb
and
mov
pop
add
pop
jle
shll
jmp
mov
fistpl
sbb
cwtl
movsb
inc
iret
xchg
mov
jg
cmc
call
or
jnp
mov
and
xchg
adc
sti
or
push
mov
sarl
jnp
pop
adc
lahf
ljmp
fsubrs
inc
xchg
pop
dec
push
mov
mov
repnz
scas
mov
lcall
jl
fwait
mov
mov
orb
mov
lcall
inc
dec
lret
cli
lret
push
rcrb
cmpsb
cmp
loope
dec
clc
inc
leave
loopne
mulps
push
lock
and
lahf
lea
hlt
mov
pop
shr
push
cmp
jg
lret
stos
mov
cltd
mov
pop
outsb
sub
push
lds
pop
jle
arpl
cwtl
pop
mov
dec
fiaddl
xchg
jl
mov
pop
sbb
jle
test
addr16
pop
jp
jge
lds
lds
lds
fs
jg
xor
push
jge
in
lds
cli
jge
lds
lret
jge
xlat
sti
aad
sbb
lds
cmc
out
pop
or
sub
mov
outsl
jg
sub
lds
mov
add
jns
outsl
and
xchg
fidivs
testl
mov
push
xchg
fcoml
clc
dec
inc
rol
adc
fwait
cwtl
cmp
jg
xor
sub
pop
jl
sbb
sahf
les
dec
pop
sbb
pop
xchg
xchg
pop
sti
pop
fisttps
jl
repz
jg
mov
push
cmp
add
unpcklps
mov
cli
pop
mov
jle
mov
mov
jg
jno
jns,pt
shlb
xchg
cmp
mov
sbb
or
jle
and
inc
js
dec
cmp
jbe
pop
inc
sub
pop
mov
pusha
jp
sbbb
ljmp
outsl
push
xor
lds
xchg
jo
mov
cmp
fisubl
popa
stos
push
loopne
jg
pop
jge
int3
mov
xchg
js
cli
and
inc
sbbl
iret
movsl
pop
or
dec
ficompl
mov
lds
iret
sbb
sbb
fdivrl
cmp
adc
adc
sbb
mov
pop
aam
ss
pop
cmp
pop
dec
sbb
push
jle
cs
mov
inc
cmp
sbb
inc
stos
mov
sbb
xor
mov
mov
mov
dec
jae
or
inc
hlt
rcrl
cmp
xchg
cmp
cmc
pop
sub
mov
fcomp
cmp
pop
lods
icebp
mov
pop
mov
cmpsl
push
pop
push
rcll
pop
and
aam
jecxz
mov
fldcw
filds
mov
aas
lcall
jnp
in
insb
xor
sbb
pop
cltd
jl
mov
fwait
mov
pop
inc
clc
inc
push
add
add
lea
push
aam
ret
aam
popa
pop
cmp
push
fwait
ljmp
jle
lcall
dec
pand
mov
add
mov
pop
clc
mov
pop
mov
add
xor
pop
cld
lea
andl
lcall
outsl
mov
cwtl
cmp
data16
adc
xchg
pop
mov
mov
mov
pop
cmp
leave
incl
inc
sbb
test
fmull
negb
inc
pcmpgtb
fwait
cmp
stc
pushf
mov
mov
jae
and
inc
inc
cli
mov
sbb
jns
pop
add
pop
dec
add
stos
dec
jp
pushf
jnp
loop
je
fimull
js
mov
dec
ss
bound
sar
sbb
push
jg
inc
sbb
sahf
pop
lahf
sahf
push
rclb
fimull
sbb
mov
icebp
dec
xchg
pusha
pop
jne
cld
and
in
inc
add
test
sbb
leave
mov
les
dec
lahf
inc
clc
sbb
jbe
sbb
pop
ficomps
pop
xchg
mov
cwtl
cmpl
fisttpl
fnstcw
popa
outsl
scas
je
sahf
fcomps
pop
and
jge
rclb
cmp
aam
mov
fimuls
in
push
cwtl
cmp
pop
bnd
mov
popf
push
shl
fadd
mov
loopne
mov
pop
add
rorb
push
dec
mov
mov
add
cmp
js
in
into
dec
jnp
data16
subl
pop
push
fidivs
dec
cld
jb
cmp
sbb
movsb
aaa
ffreep
fmull
iret
and
aas
psrld
dec
inc
add
pusha
pop
mov
pop
cmp
cli
bound
push
ret
dec
cmp
pusha
adc
pop
pushf
sub
jle
popa
stos
jp
mov
add
mov
loop
inc
dec
add
int
negl
mov
mull
or
ficompl
cmp
push
cmp
sub
sahf
daa
jp
adc
push
cmpsl
loopne
subl
mov
aam
lds
xchg
jle
cmp
xor
aas
pop
jp
in
ret
cmpsl
mov
xor
lcall
mov
fildl
push
aaa
insb
push
xchg
aad
cld
loopne
pop
mov
pop
push
lods
cmc
lahf
cmp
mov
xchg
sti
fidivrs
cmc
cmp
test
cmp
sbb
cli
loopne
arpl
xchg
sub
mov
cmp
push
cmp
jno
push
ljmp
dec
push
dec
into
jle
fcomps
mov
pop
loope
sbb
stc
ds
inc
lahf
cmpsb
hlt
fcmovnu
pop
inc
xchg
jl
lcall
cld
cmp
lcall
stc
ret
sub
inc
sti
fdivl
mov
cwtl
jnp
inc
stc
mov
mov
addr16
pop
lods
ja
sbb
add
jmp
hlt
cmp
outsb
mov
hlt
push
add
aaa
fistps
hlt
shlb
sbb
inc
ficompl
xor
inc
mov
sti
mov
lds
cmp
dec
mov
ret
xchg
dec
clc
dec
fcoms
push
lahf
fisubrs
mov
in
loop
pop
insb
cmp
cmp
imul
jb
pusha
cmp
dec
jle
mov
mov
fadd
scas
jne
dec
repz
push
mov
xchg
sarl
pusha
icebp
pop
and
xchg
inc
dec
sbb
dec
add
pop
ds
xchg
cwtl
pop
inc
sahf
call
xor
push
xchg
dec
jb
mov
xchg
jb
fisubrl
aas
push
jp
adc
jne
xchg
lahf
sbb
cmp
mulb
pop
hlt
fidivs
lahf
cmpsl
inc
mov
pop
add
pop
cmp
jl
xchg
push
das
sahf
mov
into
cmp
mov
jo
cmp
adc
sbb
dec
jge
cmp
sti
popa
sbb
xor
js
decb
push
mov
outsb
add
pusha
mov
inc
not
sbb
fwait
jo
pop
adc
orl
fwait
sbb
ret
nop
rcrb
mov
xchg
and
mov
out
dec
test
pop
in
sub
dec
jge
inc
push
sarl
mov
pushf
jp
sbbb
dec
cwtl
cmpb
push
js
les
out
jp
sbb
loop
aas
mov
cmp
popa
dec
out
sbb
sub
xchg
out
xabort
xlat
sahf
orl
mov
sbb
shl
inc
mov
mov
lret
xor
cmp
pop
mov
fsubrs
dec
xlat
stos
jg
xchg
lret
xor
stos
xlat
imul
into
mov
inc
sbb
mov
sub
outsl
adc
mov
dec
pop
and
cli
mov
push
sbb
inc
ret
xchg
cld
mov
sbb
sbb
out
jl
lds
aas
xor
sahf
mov
lcall
fadds
fwait
leave
movsb
fistl
mov
aas
pop
fwait
push
adc
aas
pop
gs
popa
movsb
mov
jp
sti
cmp
jle
push
dec
pop
jle
pop
or
pop
push
mov
jnp
sbb
mov
orl
pop
out
xchg
fstl
rol
rorl
mov
mov
cmp
out
dec
jne
mov
jnp
pusha
je
inc
repnz
add
pop
jge
inc
out
clc
sbb
psllw
push
gs
and
push
push
ret
cmp
or
mov
cwtl
mov
aas
lds
ret
or
rolb
add
cmpb
pop
lret
out
inc
loop
cs
imul
sbb
mov
imul
aas
pop
fisubl
jnp
in
xor
xchg
pushf
lcall
adc
xchg
pop
imul
cld
dec
div
ds
sub
in
imul
inc
inc
inc
inc
sub
cwtl
jnp
mov
sbb
and
jp
fucomi
pop
dec
mov
dec
inc
in
mov
mov
pop
mov
mov
in
sahf
pusha
jle
rcrl
fistpl
or
orl
mov
jp
add
fstpt
mov
pop
xchg
decl
popa
leave
mov
pop
adc
dec
mov
jp
dec
add
sti
clc
fdivrl
sti
cmp
jecxz
cmp
fwait
pop
dec
inc
sbb
scas
in
and
cmp
pop
pusha
sarb
jg
dec
jp
pop
clc
cld
cmp
jge
jns
loopne
pop
fwait
lcall
push
push
mov
lods
cli
mov
jg
jle
mov
cwtl
popf
sti
je
adc
shll
in
sarl
sti
pop
adc
dec
outsl
popl
push
cmp
fwait
sbb
lahf
mov
js
mov
sbb
jg
sbb
jl
rcrb
fists
cwtl
pop
mov
sbb
cmp
fwait
and
dec
mov
inc
add
jns
mov
push
jns
dec
mov
cli
or
lret
sbb
cmp
pop
incl
jmp
bound
mov
popf
ret
mov
or
cmp
xchg
lret
fadds
add
mov
jbe
mov
sbb
and
rcrb
jecxz
aaa
nop
loope
mov
jg
adc
sbb
mov
cmp
mov
adc
xchg
jle
xchg
pop
pop
lret
fcmovne
jle
lods
cmp
enter
test
test
mov
sbb
bound
fwait
jp
rcrb
out
and
enter
lahf
xchg
lcall
jne
sti
pop
sbb
fidivl
roll
sbb
mov
cli
pop
cli
pusha
neg
aas
xchg
les
jge
jne
sub
and
xchg
cmp
out
sbb
add
orb
mov
jl
js
mov
pop
push
lcall
or
mov
sbb
ret
add
inc
cmpsl
mov
aam
cwtl
jle
sbb
daa
ss
mov
mov
xchg
lods
mov
dec
ljmp
ret
mov
add
mov
cld
xchg
scas
pop
mov
xchg
pop
xchg
aaa
inc
or
fdivrp
cmpsb
lds
scas
out
dec
jne
faddl
mov
jecxz
test
mov
aas
adcb
inc
cmp
dec
aam
inc
pop
mull
push
nop
cmpl
dec
std
outsb
dec
iret
mov
rolb
jbe
cmp
inc
jl
push
ja
or
lods
xchg
ja
inc
js
cmp
cmp
dec
negb
stc
and
std
and
lods
jge
dec
jp
pop
push
pushf
or
add
lcall
mov
ss
fbld
push
sbb
xchg
fwait
jne
pop
fadd
cmp
or
fsts
jns
adc
adc
cmc
cli
inc
sbb
jns
or
push
jo
pop
js
aas
iret
cmpsl
xor
cmp
xchg
sti
je
xlat
xchg
mov
push
das
mov
sti
pop
jp
xor
js
pop
das
cmp
fistps
inc
lret
dec
mov
sarb
shrb
mov
ret
push
lods
pop
push
pop
adc
mov
jle
loopne
sbb
add
sbb
rorb
inc
xorb
xchg
int3
and
fnstsw
leave
mov
cwtl
sub
mov
je
adc
out
fildl
sub
cmp
popa
aas
pop
mov
cmp
rclb
jnp
jmp
inc
and
scas
xor
pusha
push
js
mov
gs
mov
or
mov
mov
jns
leave
jbe
mov
ds
fwait
mov
hlt
cld
loopne
ficomps
sbb
ds
in
addr16
negb
shlb
pop
cmp
das
cmp
jecxz
fisubs
inc
mov
in
pop
mov
dec
mov
or
jle
jg
clc
fisttpl
pop
and
mov
lds
cli
add
fneni(8087
pop
sub
mov
jo
adc
sbb
mov
rcrl
incb
pusha
js
in
or
clc
lods
push
mov
pop
clc
add
ret
jnp
inc
lea
jg
test
ljmp
mov
and
mov
pushf
lock
pushf
cmp
les
pusha
std
sbb
lods
loope
into
jmp
fadds
loopne
mov
shlb
adc
sti
and
je
mov
sbb
cmp
lahf
push
enter
fists
fidivrs
jle
bound
sbb
and
sbb
mov
adc
inc
sub
inc
push
pop
mov
popa
sahf
cmp
sbb
add
mov
lcall
cld
push
mov
add
add
cmc
fcmove
int
xor
sahf
fdivl
cmp
decl
popa
push
pop
psrld
mov
dec
fistpll
in
inc
fistpl
pop
adc
iret
mov
push
or
fcompl
add
sti
mov
mov
mov
jle
pop
dec
aaa
pop
out
andl
call
ds
pop
mov
cltd
sbb
iret
and
jl
mov
loopne
pushf
ss
loopne
fwait
dec
ljmp
pop
pop
pushf
mov
inc
sbb
imul
push
jp
jl
cmp
dec
xchg
sti
pushf
fdivrl
fisubrl
mov
aam
cmp
outsb
test
cmp
adc
jl
aaa
fcoml
pop
cmc
aas
inc
jnp
mov
sbb
push
pop
and
or
dec
sbb
pushf
cmp
jge
sti
pop
sahf
js
decl
fiaddl
test
pop
pushf
rcl
lcall
adc
ljmp
adc
inc
mov
jl
pop
jge
cld
jns
jp
cmp
fidivrl
inc
cmp
popa
and
and
xor
xchg
rcrb
sbb
inc
outsl
cmp
sti
push
cmp
sahf
pushf
inc
addl
pop
cwtl
rcr
fstpt
inc
lahf
nop
pop
loopne
dec
sbb
sahf
xchg
repz
pop
sbb
shl
popa
cmp
push
add
fcompl
in
daa
lret
push
aad
pop
sbb
mov
scas
lret
mov
jge
dec
fcoms
add
test
sub
sbb
jp
scas
mov
push
fdivr
sti
cmpb
add
xlat
aad
cmp
mov
xchg
sahf
inc
pop
pop
mov
js
test
fistps
cli
nop
arpl
pop
dec
pop
cmpb
pop
fcomp
adc
fwait
mov
jge
inc
push
and
push
mov
mov
mov
push
jp
fcomps
int
pop
popf
jle
fistpl
xchg
dec
xchg
pop
pop
cmp
test
mov
pop
stos
adc
and
cmp
repz
pop
and
adc
or
aam
ret
xor
fwait
dec
and
fisubl
sbb
iret
pop
pusha
jle
jge
in
push
mov
pop
mov
sbb
push
pop
clc
pusha
sbb
dec
mov
pop
and
addb
push
mov
outsb
mov
sbb
pop
stos
lds
loop
sbb
jp
ds
fdivrl
mov
sbb
xchg
cwtl
cmp
pop
adc
fwait
push
adc
mov
push
xchg
and
dec
arpl
add
sahf
pop
adc
aam
ds
pop
pop
cli
pop
inc
daa
cmp
pusha
mov
leave
xchg
push
jnp
pop
jge
addb
popa
sbb
sbbl
cmpb
cmp
or
and
int3
push
jne
inc
jp
pop
add
inc
enter
fsubs
lds
xchg
mov
pop
pop
sbb
aas
sbb
faddl
xchg
and
in
cli
popf
addb
addl
pop
jnp
and
dec
aaa
mov
lahf
mov
inc
add
fdivrl
mov
cmp
sub
imul
adc
sbb
fwait
mov
enter
movsl
mov
jg
pop
adc
jge
inc
push
mov
cmp
jecxz
lret
inc
inc
push
fistpl
mov
popa
pop
mov
dec
inc
inc
mov
dec
jb
sarl
pop
sbb
cmp
fbstp
popa
adc
cmpsl
adc
sbb
hlt
cld
rolb
pop
mov
fdivrs
cltd
push
sbb
pop
fwait
jp
push
mov
mov
insb
cli
pop
inc
cmp
pushf
call
jle
push
pop
jl
dec
fcmovu
inc
push
mov
stc
movb
shll
dec
cmp
mov
jge
adc
mov
cmp
lahf
test
xchg
sbb
shl
pop
sti
xchg
sbb
aaa
mov
jecxz
das
xor
sub
sti
cmp
jl
cmp
dec
mov
dec
inc
lahf
fcom
pop
pop
sbbb
mov
in
mov
loopne
mov
lcall
inc
xor
out
adc
cmp
shll
mov
stos
add
mov
jle
loop
jnp
sbb
mov
jb
cmp
mov
test
and
sbb
adcl
sub
ljmp
sahf
call
jp
subb
mov
lahf
pushf
pop
jle
imul
sbb
stos
repnz
pop
jnp
or
mov
sbb
dec
jmp
cwtl
add
sbb
sbb
cmpsb
or
cmp
cmp
outsl
nop
dec
sarl
cmp
cmp
cmpsb
hlt
push
rcrb
mov
cs
insl
jle
sbb
cmp
inc
out
sbb
add
adc
mov
gs
cmp
dec
mov
clc
bound
mov
sbb
jp
push
mov
cmp
orl
aas
nop
inc
mov
cmp
mov
pop
cmp
cmp
push
jl
sbb
jg
add
fisttps
inc
leave
mov
cmp
mov
inc
lahf
cmp
js
jp
mov
cmp
pop
and
sbb
addr16
sbb
dec
pop
xchg
pop
inc
jne
mov
lret
add
cmp
cld
test
fwait
rcl
push
mov
sbb
and
inc
js
pop
cmc
bound
pop
sbb
scas
mov
adc
subl
sub
push
lret
and
jnp
add
fadd
mov
mov
cmp
addb
jae
orl
pop
pop
pop
inc
cltd
inc
scas
pop
cltd
mov
xchg
movsb
addl
cmp
clc
jb
fcoml
stos
loope
lcall
sbb
rolb
mov
cmp
cli
or
fwait
add
sub
jae
sbb
mov
pop
jo
out
loop
sub
cmp
dec
cmp
mov
mov
xchg
fwait
rep
pushf
int3
jmp
add
add
filds
aas
xchg
ds
mov
cmp
and
clc
je
pop
pop
xor
aaa
mov
cmp
add
pop
cmp
add
pop
fwait
or
scas
outsl
add
mov
dec
pop
je
pop
sti
xchg
jnp
adc
pop
mov
mov
pop
sahf
andb
push
sbb
sbb
cmp
cmp
or
pop
pop
pop
pop
adc
adc
pop
push
lcall
fldenv
mov
test
dec
or
mov
pop
cwtl
xor
sub
dec
adc
sbb
and
push
pop
inc
jp
cli
sub
add
in
inc
push
cmp
clc
aaa
cmp
cmp
aas
sbb
cmp
fdivr
aaa
xchg
std
cmp
push
inc
push
push
pop
ficomps
cmp
lcall
clc
sahf
xchg
pop
cmp
inc
pop
fidivrl
sbb
jno
aas
mov
jns
mov
add
mov
int3
mov
sti
dec
cld
xchg
mov
sbb
sub
fwait
cmp
inc
sarb
pop
mov
jg
aas
jnp
jl
dec
cmp
pop
pop
sub
cmp
mov
loop
lcall
sbb
dec
jle
clc
cli
jnp
and
jl
inc
mov
add
pop
pop
xor
sub
inc
test
sbb
outsb
cmp
push
adc
mov
clc
xor
xchg
mov
xchg
lods
sahf
mov
in
jmp
pause
fwait
mov
cmp
add
cld
adc
cmp
push
cmp
sbb
inc
fiaddl
cwtl
push
sbbl
sub
jae
jg
pushf
aas
mov
dec
sahf
pop
push
pop
cmp
pop
cmp
movsb
xor
fdivr
fwait
mov
icebp
cmpsl
fmuls
nop
adc
inc
aas
pop
daa
cli
pop
jecxz
sbb
inc
test
and
cltd
lock
es
jge
cli
push
sbb
repz
jmp
mov
jge
cmp
jnp
mov
or
fcmovbe
lcall
loopne
flds
xchg
mov
pop
push
adcl
sahf
jns
cmp
pop
cwtl
pop
cmp
xorl
sbb
mov
orb
fwait
pop
push
daa
js
inc
add
cmp
lds
lahf
jl
sub
leave
cwtl
dec
xor
lret
js
out
sub
cmp
aad
pop
adc
add
cmp
fildll
pop
in
pop
nop
push
mov
repz
xor
cli
popa
pop
js
cmpsb
lds
cwtl
pop
mov
sub
stc
sarb
cltd
pusha
pop
mov
inc
cwtl
fistpl
fwait
push
inc
and
jg
mov
sbb
xchg
adcb
inc
pop
inc
inc
mov
sub
sbb
fcoms
inc
jge
scas
cmp
inc
push
pop
push
lcall
pop
mov
pop
sub
sbb
lahf
hlt
mov
rolb
pop
mov
fwait
adcl
jno
rclb
negb
or
mov
stc
xchg
jge
adc
inc
pusha
dec
pop
cmp
mov
push
cmp
jge
rcrb
int3
sbb
mov
and
cmp
mov
in
add
jae
cltd
imulb
cmp
and
test
mov
add
ffreep
pop
mov
xor
add
xlat
mov
cli
xchg
sub
adcb
push
pop
rorb
sahf
xchg
mov
jb
sahf
sbb
add
movq
sbbl
and
stc
icebp
and
xor
or
cmp
cmp
notb
inc
mov
inc
ficompl
sbb
mov
and
pop
icebp
xchg
dec
repz
adc
jg
pop
negb
call
pushf
push
lahf
fidivrs
push
sahf
jno
adc
cmp
sub
cmp
pop
add
mov
sbb
addb
pop
mov
pop
jle
cmp
sbbl
inc
fstpt
mov
fcoms
sahf
inc
adc
pop
mov
pop
stc
dec
add
loopne
dec
jbe
sbb
cmpsl
je
sub
cmp
mov
adc
sbb
jl
aad
popa
mov
add
xchg
and
cmp
mov
push
adc
inc
jmp
mov
cld
clc
mov
sub
lods
cli
loop
cmpsl
lret
mov
js
sbb
mov
fwait
cmp
sti
jl
js
push
xchg
and
adc
xchg
inc
add
push
sbb
hlt
sti
sbb
jg
cmp
jle
bound
popa
mov
sbb
push
mov
inc
jae
sbb
negl
cmp
sbb
sahf
pop
cmp
mov
stc
or
neg
les
call
rcr
mov
int3
insb
cmp
rcrl
popa
lahf
cmp
aas
cmp
test
mov
pop
or
repz
clc
ljmp
sti
jp
jp
sbb
jb
sbb
lcall
mov
push
mov
cld
mov
or
fs
fcmovne
xchg
push
pusha
and
and
jle
sbb
cli
inc
mov
mov
jnp
and
hlt
pop
mov
lahf
bound
sbb
inc
lret
sub
test
ret
loop
mov
push
mov
insl
dec
mov
dec
cmp
pop
dec
pop
xchg
ss
ja
or
xor
pop
addl
mov
sahf
push
jl
in
scas
jb
shlb
cmp
lcall
pop
sub
add
cmp
jae
mov
aas
je
repz
inc
mov
add
dec
sbb
add
inc
out
popa
cld
jp
pop
sub
and
lcall
add
fcomps
sbb
pusha
ret
adc
cli
pop
inc
push
mov
pop
mov
ret
add
loopne
mov
fidivs
mov
mov
repz
rcrb
mov
imul
ret
ljmp
pop
pushf
jp
pop
sar
pop
sbb
cmp
jge
cmp
pop
lea
fwait
cltd
ficomps
js
mov
cmp
lock
sbb
out
mov
pusha
sbb
fnclex
lods
cmpsl
lret
pop
dec
negl
jle
add
mov
pop
mov
jg
loop
adc
cld
and
pusha
push
cld
pop
sbb
lcall
sti
sbbl
std
pushf
mov
aas
les
jge
push
cld
push
fsubrs
jae
fnstsw
lahf
jp
lret
mov
rcll
idivb
loop
mov
cmp
mov
pop
sbb
cmp
sbb
jb
jl
lahf
ret
ret
std
sbb
call
clc
ljmpw
dec
dec
lcall
pusha
sbb
sub
dec
pop
cli
jle
mov
push
pushf
loopne
sub
les
push
sbb
jnp
pop
inc
xchg
lds
sahf
cmp
movl
pop
movsb
pop
in
mov
clc
xchg
sbb
push
inc
cwtl
rol
mov
push
cld
js
push
jo
cmp
sbb
loope
mov
mov
adc
mov
add
inc
jno
pop
fcompl
sbb
and
pop
jge
mov
mov
add
mov
and
mov
sti
iret
je
adc
push
mov
pop
mov
lds
js
pop
xchg
pop
inc
in
mov
pusha
and
aad
ror
and
jg
clc
push
dec
aam
fidivrs
xchg
jbe
js
ljmp
fadds
in
pop
sbb
push
rol
cmp
aaa
aas
push
add
mov
clc
sbb
jb
cld
jl
pop
jp
xchg
iret
mov
sbb
popa
sbb
jg
loopne
sti
pop
outsb
clc
cmp
repz
sahf
rcr
mov
icebp
dec
fdivrp
aas
mov
rcrl
fadd
or
lods
jge
xchg
cmp
pop
jge
sub
mov
ficoml
repnz
sarb
or
mov
lahf
cmp
sub
and
gs
add
add
mov
je
popa
xchg
aas
sahf
bnd
mov
pop
jnp
dec
sbbl
xor
dec
adc
jle
pop
popa
mov
sub
je
adc
adc
push
lcall
insb
mov
icebp
mov
repnz
xor
fists
push
jecxz
clc
mov
mov
fistps
cmpsl
sbb
loop
sbb
js
test
repz
mov
data16
sbb
sti
popf
lcall
fdivr
je
clc
xchg
jno
lahf
js
jnp
outsl
xlat
adc
call
sbb
sbb
pop
fistps
push
clc
pop
lcall
push
dec
jo
and
jnp
inc
adc
pop
push
in
lcall
push
cmc
jge
pop
fcompl
ret
mov
xchg
ds
mov
sbb
adc
lcall
xchg
pop
lods
push
inc
je
pop
fwait
repnz
and
fistpl
cmc
adc
push
push
pop
ret
leave
repnz
pop
adcl
cld
aas
add
jg
cmp
inc
adc
jle
jp
inc
mov
pop
pop
leave
popl
jmp
xor
cmp
fisubrs
repz
icebp
pop
push
jle
sahf
sti
push
add
ror
adc
pop
adc
scas
mov
pop
push
shll
je
push
xchg
jg
xchg
sbb
fidivrs
cmp
sbb
cmc
stos
and
sbb
addr16
xor
cld
pop
inc
inc
cmp
adc
fadds
pushf
mov
faddp
xchg
loopne
enter
push
pop
cltd
data16
gs
mov
cmp
das
add
pop
adc
mov
mov
std
cmp
pop
sarb
adc
pop
jnp
push
sub
and
sahf
jbe
cld
jle
std
cmp
into
jge
mov
sahf
add
push
pushf
mov
and
lds
cmp
dec
mov
popa
shll
pop
add
jg
sbb
add
mov
cli
adc
pop
cmpl
aas
adc
sbb
loop
xor
cmp
xchg
inc
sbb
clc
inc
or
punpckhdq
push
xchg
idiv
fidivs
and
mov
stos
int3
mov
and
inc
sub
dec
jg
loopne
pop
mov
jae
test
sbb
mov
sbbb
xchg
fistpl
pop
cmpsl
xor
pop
scas
ss
pop
inc
inc
repnz
aaa
pushf
inc
lods
lds
dec
lock
jle
inc
lret
filds
clc
sti
aad
pop
mov
into
je
jg
dec
mov
xchg
inc
and
mov
sbb
cli
mov
jecxz
lret
and
test
rcr
jle
mov
inc
mov
aas
inc
repnz
mov
xchg
ficoms
dec
shrb
dec
mov
jg
sahf
ret
cmpb
stos
fstps
sahf
iret
cmp
jae
cltd
cmpb
sbb
in
mov
pop
aaa
idivl
cwtl
stc
pop
push
int
popf
dec
jl
sub
mov
loopne
mov
fcmove
inc
xchg
popa
pop
pusha
jnp
and
pop
arpl
and
fidivl
pop
adc
cmpsl
cmp
xor
pop
sub
inc
and
mov
mov
adc
pop
push
push
arpl
push
xchg
out
jge
push
inc
push
fimuls
mov
xor
inc
jg
sbb
push
cmp
sahf
mov
cli
mov
add
mov
aas
mov
mov
cmovb
sbb
shlb
ficompl
ss
lahf
pop
jl
imul
pop
scas
cmp
ja
and
dec
jg
mov
inc
inc
testb
pusha
inc
lahf
fistps
add
nop
mov
or
mov
and
into
sbb
xor
cmp
std
cmp
sbb
mov
mov
inc
push
mov
mov
bound
pop
add
movsb
fwait
pusha
jae
dec
mov
rclb
enter
mov
mov
cmpsl
clc
sar
pop
jle
cld
fcomps
cli
mov
xor
pop
push
loope
sti
mov
js
clc
sbb
and
cmpsb
dec
enter
sbb
jg
inc
fnstsw
sbb
adc
xor
clc
jg
cmp
notl
push
popa
jl
add
idivb
inc
xlat
in
mov
pusha
mov
aas
dec
nop
cltd
popa
cmp
pop
sbb
shr
mov
lahf
jnp
in
and
lret
test
shl
fcomps
arpl
pop
mov
cwtl
and
test
jle
sub
repz
pop
mov
fdivrl
bound
fdivr
sbbb
popa
adc
pushf
repz
js
pusha
pop
call
mov
jle
mov
sbb
stos
fwait
faddp
dec
push
je
sbbb
into
sub
dec
fisttpl
ficompl
jo
jp
sarb
sbb
rorb
fistps
shll
sbb
iret
mov
adc
outsb
adc
into
and
add
dec
xor
pusha
ret
ljmp
cmpsb
pop
xchg
or
int
jb
movsb
push
arpl
lcall
pop
shlb
out
rcrl
mov
pop
scas
aaa
xchg
and
pop
sub
mov
rcll
cmp
jns
pop
cmp
adc
fidivrs
sbb
push
pop
adc
cmp
sub
cmp
jge
loopne
lahf
cmc
xchg
and
cmp
lods
inc
test
jg
cmp
ljmp
loopne
pusha
pop
ds
iret
pop
inc
xchg
lcall
mov
or
dec
or
aad
hlt
cmp
pop
fwait
ret
mov
rorb
jne
js
fistpll
std
mov
xchg
stos
pop
fistl
pop
mov
nop
stos
or
ja
sub
dec
mov
lahf
dec
xchg
mov
cwtl
fwait
sub
loopne
pop
sub
subb
xor
add
ret
dec
cmp
pop
sub
mov
sti
sbb
lahf
mov
fdivrl
adc
xchg
mov
dec
sbb
jno
ja
or
push
hlt
setl
je
mov
jmp
dec
jne
dec
jp
and
in
jae
add
xchg
mov
jmp
cmp
pusha
lret
stos
cmp
pop
sbb
dec
bound
fadd
pop
or
sbb
sbb
pop
jg
call
sbb
cmp
pop
fdivrl
out
lods
jo
push
add
je
or
sarb
pusha
js
cmp
cltd
mov
cmp
loopne
sbb
lock
sbb
xchg
popa
mulb
fiaddl
mov
pop
push
dec
or
cmp
push
xchg
addr16
mov
adc
xchg
pop
jo
mov
lock
mov
pusha
fadds
jno
push
lcall
iret
pusha
mov
sbb
cmp
push
jl
sar
mov
mov
sbb
and
mov
xor
pop
outsb
sbb
cmpb
push
cmp
jge
adc
lahf
imul
dec
jle
out
bound
sbb
jns
lds
fistpll
std
cwtl
icebp
xor
mov
ret
push
sbb
dec
push
loopne
mov
rcr
jo
mov
inc
fwait
and
xchg
js
mov
lret
cmp
lahf
jo
lcall
fdivs
add
mov
sbb
pop
mov
cli
sbb
addr16
or
dec
test
or
aad
mov
jne
mov
dec
add
push
pop
cli
std
js
and
sbbl
cmpsl
pop
jo
pusha
push
mov
push
fcomps
xchg
pop
lahf
pop
aam
adc
pop
mov
pop
cmp
decb
aas
jns
pop
out
adc
data16
jns
scas
cwtl
push
mov
pushf
pushl
push
mov
dec
and
jge
in
cmpl
ss
loopne
jl
xor
jge
sti
mov
dec
push
cli
pusha
inc
mov
stc
add
push
rcll
fistps
sti
pop
fwait
arpl
inc
jge
push
pusha
sahf
inc
cli
in
pop
int3
inc
mov
pop
xor
mov
mov
cmp
lret
mov
add
add
int
lcall
cmovp
mov
inc
cmp
fwait
pop
mov
pusha
mov
incb
cmp
fs
jb
pop
in
dec
loope
xchg
pop
dec
pop
jns
cmp
pop
jl
ficomps
sahf
xor
pop
ds
cmp
dec
mov
jnp
sti
mov
jns
sarl
dec
jns
xor
pop
in
stc
in
adc
jge
lahf
mov
xchg
push
pop
bound
push
fdivrs
jb
xchg
jge
popa
dec
cwtl
mov
fistps
adc
adc
loopne
mov
dec
sbbb
loope
sub
xchg
adcb
mov
fistpll
addl
cmp
cmp
add
add
sbb
sbbb
xchg
in
dec
rol
pop
xlat
cmp
push
cmp
mov
jge
jl
mov
stc
out
jecxz
or
inc
popa
sti
jge
adc
xlat
cltd
imul
and
mov
sti
dec
mov
xor
hlt
sahf
inc
shrb
add
adc
inc
dec
jl
pop
and
push
pop
jmp
aas
outsl
xchg
loopne
pusha
cmp
jns
inc
xchg
rclb
aaa
xor
lret
in
sarl
push
fcmovb
sbb
mov
mov
loop
jno
ficompl
inc
outsb
lock
data16
cmp
push
loopne
mov
add
mov
je
xchg
ret
repz
pop
sti
jg
pop
jg
push
cwtl
pop
pusha
push
cmpl
ss
mov
repz
xchg
push
js
pop
mov
cmp
pop
jge
rcrl
pop
mov
int3
sti
cmp
jg
pop
cmp
cmp
jp
jl
fwait
xchg
lds
cwtl
pop
pop
ror
pop
push
jp
mov
inc
std
cmp
pusha
bsf
aas
ficomps
jne
sahf
mov
fwait
bound
js
mov
pop
clc
cmp
pop
push
pop
cwtl
or
sbbb
push
inc
fdivrs
add
sbb
pop
pop
sbb
pop
jp
push
cwtl
push
sarb
fsubs
sbbl
dec
sarl
cmp
inc
fdivs
shl
out
cmp
mov
mov
pop
aas
mov
js
cld
fcomps
std
pop
cld
sarb
pop
pop
pop
jnp
mov
mov
and
mov
cmp
push
mov
cmpsb
push
mov
xor
pop
pushf
cmp
cmp
js
fistps
jns
inc
pop
mov
into
adc
push
xchg
mov
lds
cmp
aaa
pop
iret
cmpsb
cmp
data16
imul
push
jp
push
cli
std
dec
mov
or
inc
popf
icebp
fisubrl
push
push
pop
inc
jg
sbb
mov
imul
cli
xor
dec
fidivrl
sahf
ss
pusha
mov
push
cmp
dec
sbbb
inc
pusha
je
fcompl
cmpl
jp
adc
scas
mov
add
clc
mov
stos
inc
shl
cmp
mov
cmc
sbbb
push
daa
ret
ret
cwtl
lods
mov
adc
les
or
and
push
push
pushf
pop
pop
add
mov
xor
mov
inc
punpcklwd
inc
and
iret
mov
inc
pop
das
push
pop
into
sbb
jl
dec
jle
sbb
and
adc
push
or
or
mov
fistps
sarb
leave
cld
jle
ret
inc
sbb
or
sbb
cli
mov
out
dec
sbb
pusha
stos
cmp
sbb
adc
xor
loopne
or
push
pop
pop
fwait
ss
mov
clc
icebp
mov
test
js
xchg
cld
sbb
arpl
push
inc
mov
nop
add
mov
pop
negb
cmp
xchg
jnp
fistpl
cli
xor
pop
and
scas
jo
cmp
inc
push
popa
inc
sbb
negl
adcb
nop
daa
sti
cmpw
pushf
push
loopne
pop
cmpb
jnp
cmp
cltd
data16
cmp
dec
fdivrl
jnp
sbb
bound
sti
cwtl
imul
loope
inc
inc
lods
iret
xor
xchg
jg
mov
mov
jl
cmp
sub
pushf
sub
jp
xchg
rcr
stos
cmp
xchg
repz
sbb
cmp
pusha
mov
stc
dec
sahf
cmp
mov
outsl
xor
js
popa
sub
jle
arpl
pop
fstpt
add
pusha
inc
test
imul
mov
mov
das
cmp
pop
mov
jp
adc
push
sbb
jmp
cmpsl
and
cmp
rcrl
fdivr
sbb
and
xchg
enter
and
sbb
push
mov
inc
jns
testl
ficomps
hlt
ss
cmp
mov
pop
add
rcrb
mov
int
mov
rcrb
inc
adc
xchg
dec
das
sbb
pop
orb
pop
mov
inc
mov
js
xor
jb
and
mov
jle
dec
add
pop
dec
inc
push
fistps
inc
fwait
and
xchg
xchg
mov
mov
pusha
inc
sti
pop
inc
scas
cmpsb
dec
in
mov
stos
mov
fs
cli
inc
or
jle
mov
scas
add
rcrl
cmp
rorb
mov
aas
xchg
push
fistps
sub
scas
jle
cmp
and
pop
sub
xor
cmpl
adc
pop
pop
incb
pop
loopne
sbb
fs
sbb
sbb
addr16
inc
mov
sahf
push
cwtl
cmp
aaa
adcl
sbb
hlt
push
int
jp
in
push
pop
push
inc
bound
stos
and
pop
pop
inc
or
pop
arpl
sti
shlb
fildl
pop
cmp
adc
mov
mov
jl
orb
sahf
push
mov
adc
pusha
pop
cmp
rcrl
cmp
dec
lret
cld
rcrb
loopne
push
pop
cmp
or
sahf
popa
rcrb
fstpt
loopne
adc
xchg
xor
mov
mov
jnp
inc
fcomps
subb
push
cmp
pop
xor
popa
fwait
sti
mov
jg
fcoml
cli
and
out
orl
mov
rclb
popa
add
clc
xchg
cli
pop
push
sbb
adc
sti
lock
insl
mov
sbb
mov
lds
lea
mov
in
push
pop
jns
addb
rclb
pop
rcr
sahf
cmp
rcrl
cmp
fidivrl
aas
pusha
js
xlat
sbb
jo
mov
shll
sti
jno
pop
lahf
rolb
negl
inc
movsb
loopne
pushf
pop
sbb
lcall
inc
jge
rclb
clc
jge
cmp
pushf
mov
rcr
inc
xchg
inc
dec
inc
mov
test
mov
inc
jp
pop
arpl
xchg
mov
xchg
pop
sub
loopne
jno
std
pop
push
or
jns
insb
pop
inc
cld
call
sbb
int3
lods
push
pop
jp
cmp
and
fwait
inc
mov
pop
pop
xor
nop
and
and
js
add
xor
pushf
lcall
push
add
sti
mov
push
pop
loopne
xor
xor
mov
test
mov
fldt
fmull
xchg
inc
decl
xchg
rcrb
push
incb
faddl
dec
cmp
inc
pop
sub
popa
cmp
pop
adc
inc
sbb
cltd
sti
xlat
mov
fsubs
cmp
popa
and
sub
pop
pop
negl
sbb
cltd
bound
fidivl
push
pop
and
loopne
mov
push
inc
sbb
pop
int
lcall
cli
dec
fcompl
sbb
add
popf
orb
fdivrp
repz
pusha
cmp
pop
mov
jg
push
inc
div
cs
xor
popl
mov
push
inc
fildl
rol
pusha
pop
mov
aaa
ficomps
mov
jp
pop
add
rcrb
adc
inc
or
lock
popa
inc
dec
fwait
dec
mov
push
movsb
jo
aam
jo
pop
sbb
mov
cmp
cmpl
or
ret
xchg
push
pop
cli
sahf
sub
sbb
dec
pop
int3
imul
adc
stos
imul
dec
ss
jge
or
add
add
idivl
pop
test
aas
mov
fcompl
clc
addr16
mov
fistps
mov
xor
xchg
cmp
push
sbb
fdivr
pop
push
mov
hlt
mov
aaa
sub
jle
xor
lcall
fidivs
pusha
sbb
jg
shl
pop
jp
nop
inc
xchg
cmpsb
mov
inc
mul
outsb
pop
mov
incl
and
pop
or
fstp
push
aas
cmp
pop
sbb
enter
ficoml
sbb
je
push
call
pop
sahf
jle
lds
sbb
sbb
cmp
mov
dec
rcll
outsl
das
dec
cli
push
fwait
sbbl
push
sbb
lret
fstpt
cld
fdivrl
je
add
xchg
jg
arpl
mov
int
repz
sbb
fcomp
mov
cmp
lcall
mov
pusha
push
jnp
mov
mov
fisubrl
jmp
cli
inc
sub
loopne
pop
or
jle
cmp
movsb
sbb
cmp
andl
lock
and
sarb
sub
js
filds
into
pop
hlt
pop
aas
sbb
sarb
cli
jg
imul
inc
popf
iret
nop
rolb
mov
cmp
inc
fisubrl
popa
mov
adc
test
push
jnp
mov
push
cmpsb
jp
fbld
inc
rolb
and
jmp
push
sbb
pop
xor
ret
loopne
add
or
fistpll
inc
bound
iret
fdiv
pop
pop
in
mov
cwtl
out
jb
pop
cmp
inc
dec
add
jl
xchg
adc
pop
outsb
pop
mov
cli
adc
das
sti
or
cmp
cmp
lcall
rclb
sti
cmp
sbb
jle
adc
sbb
lret
out
scas
repz
sbb
jecxz
xchg
aam
mov
jg
jge
and
xorb
into
sbb
dec
adc
pop
aas
ficoms
add
cmp
mov
arpl
andb
lds
jne
iret
roll
call
lods
stos
pop
jae
ret
push
sbb
xchg
pop
dec
std
inc
negb
cli
mov
cmc
xchg
sub
fsubp
add
ficomps
lahf
pop
mov
aaa
cli
test
inc
nop
cmp
jns
popa
hlt
aas
js
ljmp
mov
adc
pusha
push
out
pop
seto
movsb
xchg
cmp
push
fistpl
loopne
lcall
sbb
aas
popf
movl
aaa
jle
jnp
pop
insl
pop
lret
add
sarl
insb
mov
mov
cli
lahf
sub
fwait
sbb
jnp
sbb
nop
jb
fisubrl
cmp
es
idivl
cltd
loope
add
add
sbb
popa
pop
das
jg
ret
mov
sbb
mov
xor
adc
pusha
sahf
mov
inc
pop
fstpt
fcompl
dec
pop
mov
int
sbb
cmp
cmp
fdivrs
jns
sahf
xchg
pusha
pop
jge
sub
ret
stos
sub
fistps
cmc
mov
unpcklps
jnp
mov
mov
mov
inc
fld
xchg
mov
ljmp
jmp
inc
mov
pop
cmp
and
cwtl
mov
jl
sbb
sbb
leave
dec
mov
inc
mov
fucomi
sar
lcall
pop
sub
andb
fstpl
pop
mov
cli
rcl
dec
inc
adc
or
pushf
lcall
aaa
inc
aad
fwait
in
inc
sub
fadd
add
pop
subb
sahf
loopne
sub
inc
mov
cmp
cli
test
cltd
cmp
sbb
jo
pop
out
inc
andl
cmp
and
or
inc
add
fadd
xor
fdivrl
cld
fisubl
xor
cltd
aas
xchg
icebp
mov
lahf
cmp
sub
sub
sbb
or
sub
mov
imul
pop
pop
jns
cmp
cmpl
xchg
fbstp
or
sarb
mov
add
push
fistl
pop
ret
test
mov
cmp
loopne
dec
aad
fsubs
mov
sub
adc
cmpsl
inc
xor
sahf
cmp
mov
adc
sbb
jp
loop
dec
loopne
push
inc
add
cwtl
mov
sti
addb
push
pop
cmp
mov
add
scas
push
pop
fnclex
mov
cmp
insl
pop
arpl
fwait
pop
and
add
mov
mov
pop
sbb
call
cmc
std
fld
mov
mov
cmp
and
fbstp
fistpll
cmp
shlb
push
mov
cli
ficomps
inc
mov
sbb
pop
sub
cmp
xor
cmp
jb
cwtl
jo
jno
ds
inc
in
dec
aaa
lds
js
dec
cmp
fidivrs
and
xor
mov
popa
add
mov
rolb
jg
lcall
clc
inc
sahf
insl
cli
pop
sbb
and
ss
xchg
mov
pushl
cmp
jg
lcall
fwait
shr
loopne
fidivl
cwtl
cmpl
addb
pop
pusha
cmp
mov
aaa
cmp
mov
sub
sbb
fistps
pushf
mov
cmp
or
jp
fmuls
pusha
sbb
sarb
adc
inc
inc
pusha
pop
jle
pusha
jnp
lcall
out
popa
bound
jl
lea
jle
lods
sti
call
int
mov
fildl
enter
es
sbb
inc
cmp
out
jge
ss
pop
dec
into
jns
pop
pop
cli
jne
pusha
or
push
hlt
jg
mov
icebp
dec
inc
fstps
and
push
jbe
push
int3
insb
aaa
lahf
cmp
popa
dec
loopne
scas
mov
sbb
cwtl
pop
aas
dec
add
sbb
pop
mov
xchg
jp
inc
sbb
lcall
cld
aaa
pop
popa
xchg
jle
fadds
sbb
sti
jp
inc
cmp
out
lcall
fidivrs
popa
outsl
lahf
xchg
pusha
cmc
sbb
add
fistpll
and
outsb
fdivrl
mov
inc
ljmp
push
pop
mov
push
pop
cwtl
push
xchg
sahf
pop
hlt
cmp
mov
mov
pusha
jb
pop
jle
sbb
scas
stos
cltd
add
pop
mov
xor
inc
cld
incl
inc
push
push
ficompl
mov
mov
xchg
inc
addr16
lcall
loop
xchg
inc
lret
iret
xchg
xchg
pop
dec
or
repz
jl
jne
dec
push
pop
mov
lcall
or
pop
ret
inc
ja
cmp
pop
inc
mov
mov
or
fiaddl
sbb
jl
push
pop
xchg
pop
pop
lcall
arpl
push
cmc
mov
cli
mov
adc
cmpb
sbb
subb
or
ds
mov
jno
je
sbb
mov
iret
pop
cmp
popa
jno
cmp
mov
xchg
out
add
faddl
pop
test
es
sub
and
daa
stos
fadds
xor
push
pushf
fwait
scas
icebp
push
outsb
lahf
pop
cld
lahf
hlt
les
sbb
enter
jl
pop
xchg
pop
cltd
sbb
js
hlt
rcrb
cltd
cmp
cmp
xchg
jnp
cmp
js
lahf
dec
cmp
mov
dec
cmp
pop
pop
dec
jno
push
add
or
ret
das
pusha
pop
mov
insl
rorb
fwait
adc
jb
mov
inc
pop
push
clc
pop
xchg
divb
loop
fisubrl
and
pop
jge
jp
cwtl
cmp
out
jmp
cmp
aaa
cmp
mov
xor
leave
mov
xchg
mov
clc
jnp
mov
in
mov
mov
mov
notb
je
push
sub
pop
add
sbb
fnstenv
push
jg
cli
fdivrs
lds
jp
pop
xlat
inc
sarb
pop
sahf
cwtl
cmp
xor
scas
dec
xchg
aas
cmp
inc
call
lahf
popa
ficoms
fwait
and
jnp
dec
negb
pop
ret
mov
mov
je
and
mov
push
cmp
inc
cmpl
lea
and
xchg
test
push
dec
cmp
jp
pop
push
fwait
jns
std
stc
pusha
in
cs
or
seta
push
pusha
cmp
nop
sti
leave
cmp
dec
sbb
push
fldcw
arpl
inc
mov
cmp
fdivrs
subb
shl
cmp
loopne
dec
mov
and
sbb
or
adc
pop
popa
pusha
mov
dec
jg
jmp
sbb
jp
mov
std
loope
cmp
aas
loopne
cmp
push
jbe
pop
shlb
jnp
add
mov
and
mov
cli
adc
add
push
rcr
pop
cld
subl
mov
mov
jnp
xchg
cwtl
adc
pop
jg
imul
fidivrl
sbbb
mov
pusha
xchg
xchg
xor
cmp
sbb
cltd
mov
push
shrl
pop
rcrl
pop
mov
or
and
pop
lcall
inc
or
ss
xchg
inc
sbb
lds
ss
inc
mov
sti
adcb
push
pop
popa
incb
fnstsw
jae
rclb
loopne
inc
in
pop
lahf
test
jae
pop
jnp
pop
sti
ret
and
dec
jg
dec
push
sbb
inc
dec
xchg
lds
pop
iret
jae
clc
sbb
lcall
sbb
mov
mov
sbb
fcomps
push
cld
push
xor
adc
outsl
clc
inc
andb
xchg
ficomps
jb
cld
jl
pop
pop
sbb
pop
pop
and
mov
jg
pop
repz
mov
scas
push
clc
jl
dec
dec
add
sub
pextrw
rcrb
inc
mov
cmp
fistpll
inc
push
imul
mov
in
xchg
jae
rcrl
andb
cmp
fidivrs
repz
or
cmc
mov
shlb
pop
fildl
jge
cmp
lcall
out
or
xorb
and
push
cmp
jb
mov
pushf
fstpt
jb
ds
cld
sti
inc
mov
mov
and
repnz
lahf
mov
inc
stos
sbb
scas
dec
loope
mov
jle
add
orl
push
fisubs
push
fiaddl
ja
out
outsb
call
mov
push
fbstp
jnp
push
lcall
in
jg
aam
mov
xchg
mov
push
mov
mov
lods
fidivrs
dec
rclb
add
and
pop
outsl
jg
xor
sub
push
pop
pop
lcall
adc
pop
sahf
cli
int3
ljmp
jno
push
and
push
sub
inc
dec
jp
jl
inc
nop
fisubl
pop
std
xchg
mov
xor
stos
sahf
sbb
push
sti
andl
inc
neg
data16
adc
pop
lcall
daa
add
in
sahf
pop
or
push
cli
inc
inc
cmovne
inc
and
mov
cmp
rorb
es
pop
adc
adc
and
add
pop
add
sahf
push
clc
sbb
jmp
pop
jl
adc
jge
adc
mov
push
stos
cmp
adc
and
into
mov
test
push
addr16
mov
add
jge
xchg
pop
jb
pushf
inc
outsb
lret
pop
mov
inc
sbb
fldt
inc
push
fdivrs
jnp
sbb
jns
fisttps
cmp
mov
sbb
jmp
es
mov
mov
pusha
pop
shl
fwait
dec
nop
mov
bound
jle
nop
jl
pop
and
pop
mov
jne
or
inc
jne
jno
adc
add
xchg
jnp
lahf
push
jle
repz
fwait
jp
add
loope
push
in
xor
pusha
dec
adc
idivl
divb
mov
inc
push
filds
fiadds
sbb
popa
aas
cmp
sub
inc
mov
sahf
mov
cmp
fcomps
pop
jg
pop
dec
add
mov
xchg
mov
dec
jae
dec
pop
int
daa
mov
pushf
dec
cmpsl
popa
pop
addr16
sbb
jp
subl
mov
inc
sbb
pusha
outsl
push
bound
xor
adc
mov
inc
mov
loopne
jp
jge
repnz
jle
cmp
jg
or
pop
sbb
iret
cld
jl
arpl
and
mov
lods
mov
hlt
rcrb
dec
jp
mov
frstor
xor
mov
push
sbb
and
lret
movl
arpl
and
push
or
mov
mov
out
mov
bound
jge
arpl
mov
xor
fcoml
sahf
mov
leave
adc
xchg
jge
cmp
lahf
dec
push
cli
add
stc
js
cltd
jp
cmp
jge
adc
lcall
add
pop
stos
iret
stos
pop
loopne
sbb
sbb
pop
cmpsl
push
addb
pop
cmp
pop
mov
cli
dec
pop
cmpb
cmp
fisubl
xchg
sbb
shlb
xor
fidivl
jp
mov
and
hlt
aas
outsl
push
mov
and
inc
neg
sbb
cmp
xor
cwtl
stc
jg
dec
xlat
mov
in
mov
add
dec
in
cmp
pop
ficoms
mov
sbbb
lcall
sub
pusha
add
sahf
imull
pop
aam
mov
in
incb
clc
inc
adcb
and
sahf
mov
mov
mov
pop
negl
pop
pop
cmp
rcr
push
mov
xchg
ja
repz
inc
lret
in
movsb
repz
and
cmp
inc
in
lcall
mov
lods
and
mov
dec
mov
fidivl
sahf
sbb
fcompl
imul
cmp
xor
js
cli
cmp
jp
sub
lds
mov
cli
jb
faddl
cmp
mov
rcl
xor
fnstsw
ficompl
cmp
jnp
cld
mov
es
sbb
js
sbb
fcompl
xchg
mov
xor
cmp
add
or
mov
mov
idivb
jns
mov
inc
xor
fistpll
ror
ficomps
bound
pop
pop
jp
cmp
xor
movsl
mov
jns
xchg
mov
decb
cmp
pop
loop
jp
je
xchg
sub
sbb
jnp
loopne
mov
xchg
inc
cmpsb
inc
sub
test
jge
pop
lcall
stos
cmpsl
and
jnp
mov
ret
push
fildl
clc
adc
pop
xchg
sub
pop
push
enter
dec
cmp
roll
cmp
pop
stos
int
leave
ljmp
dec
ss
mov
loopne
cmp
pop
imul
cli
pop
sbb
mov
lcall
fcoml
insl
add
jns
adcb
mov
inc
sbb
inc
hlt
adc
jg
js
sub
mov
mov
jl
fxch
daa
inc
mov
adc
and
mov
sbb
mul
fwait
dec
mov
mov
ret
add
push
mov
pop
cmp
jle
adc
xchg
inc
push
gs
lahf
or
xchg
lahf
int
jle
fwait
mov
mov
addb
inc
popa
mov
sbb
pushf
orl
lds
ja
mov
outsb
pop
ss
jp
mov
push
pop
add
divb
fnstcw
cmp
pop
xchg
sahf
sbb
add
in
test
pop
cs
jl
pop
and
push
mov
pop
dec
out
mov
fwait
sahf
push
pop
sbb
dec
or
fnstcw
sub
cmp
jl
nop
jp
lock
and
shll
mov
out
out
inc
fs
mov
and
ret
js
iretw
sti
pushf
iret
fsubrs
lea
jge
sbb
sahf
sti
fwait
lds
sti
add
mov
mov
aas
and
xchg
mov
pop
inc
jg
filds
mov
mov
loope
pop
fdivrl
mov
cmp
out
mov
mov
cmp
inc
pop
call
fnstcw
mov
cmpsl
repz
push
clc
xor
jecxz
jp
mov
mov
cmc
pop
jb
fcmovnu
pop
lcall
pushf
mov
inc
push
mov
aaa
mov
sahf
inc
pop
loopne
push
mov
cld
xchg
fisubl
stos
mov
je
hlt
jns
lahf
leave
pop
sarb
pop
pop
popf
pop
out
fbstp
mov
cld
sahf
je
inc
insl
cld
sbb
push
jg
mov
pop
add
cs
adc
nop
mov
cmp
mov
push
pop
and
adc
cwtl
push
js
add
xor
fdivrl
mov
fisttpl
fwait
hlt
push
sti
xchg
mov
aas
push
sbb
pushf
inc
push
jle
cmpl
fwait
cltd
jnp
mov
cwtl
dec
mov
loopne
cmp
push
pop
or
cwtl
xor
mov
divps
add
adc
pop
loopne
imul
sub
cmpsl
cwtl
ror
push
leave
in
neg
leave
aad
mov
rcrl
xchg
dec
andb
pop
pop
cmp
mov
push
dec
sub
dec
dec
mov
shrb
ds
push
sbb
mov
lods
cmp
fwait
mov
mov
cmp
cmp
test
cmp
xchg
xchg
mov
adc
lahf
cmp
inc
or
jle
xchg
rcrl
mov
push
fmuls
mov
sbb
xor
sahf
aas
mov
sarb
fcomps
mov
aas
pop
rcrl
mov
mov
loopne
fs
fs
lahf
sub
fildll
rcrb
lock
lret
shlb
addr16
lcall
bound
cmp
mov
pop
jge
adc
das
xchg
scas
clc
jle
loopne
inc
ret
andb
mov
and
mov
xchg
call
scas
clc
fadd
lret
pop
pop
jp
cld
out
aas
fldl
jbe
sahf
cmp
cmp
push
pop
stc
ds
push
mov
cmp
jnp
lahf
loop
mov
xlat
jl
pop
push
pop
pop
mov
out
pop
ds
pop
push
jp
mov
xor
inc
dec
into
pop
push
mov
mov
xor
cmp
cli
iret
sbb
cmp
adc
xor
ret
xchg
andb
mov
jae
pop
or
xlat
lahf
add
pop
mov
adc
pop
mov
mov
dec
shl
pop
add
cmp
pop
sbb
addb
pop
pop
cmp
add
fistps
jne
mov
movsb
inc
sahf
jb
xchg
cmp
dec
jp
sbb
push
push
pop
xchg
pop
mov
out
pop
jl
outsl
pop
mov
mov
int
xchg
cmp
shlb
adc
add
pop
mov
adc
mov
jp
jnp
fcomps
push
xor
fwait
inc
add
mov
or
leave
jl
mov
inc
repz
clc
push
out
fcmovnu
clc
ss
cmp
fcompl
sbb
sbb
or
pop
cmp
fs
pop
pop
mov
lds
jnp
pushf
test
cmpsl
xchg
fcoml
mov
cwtl
dec
push
cmp
cmp
popa
out
test
inc
or
cmp
mov
cmp
mov
xor
pop
mov
mov
mov
cmp
lds
in
aad
jl
iret
sbb
add
mov
xchg
sti
jl
mov
and
js
dec
mov
hlt
pop
sbb
xchg
iret
hlt
adc
nop
add
sahf
xorb
cs
stos
cld
fstl
adc
aam
data16
sbb
push
and
inc
cli
inc
rcr
out
fwait
lret
xchg
pop
aad
popa
mov
imul
sbb
xchg
mov
div
rclb
mov
adc
hlt
cmp
mov
pop
jb
pop
inc
inc
pop
mov
cmp
or
test
pop
jp
pop
outsb
mov
sub
pop
inc
inc
mov
fidivl
sbb
negb
mov
pop
cld
jl
js
dec
sbbl
enter
pop
loopne
dec
gs
push
mov
fadds
fiaddl
add
fdivrp
mov
jne
stc
jae
jo
jge
pushf
cmp
pop
pop
fwait
movsl
xchg
sub
cmp
mov
lahf
test
mov
arpl
xor
mov
cmp
ss
in
mov
dec
jp
pop
loopne
rcrb
sti
pop
sub
xchg
jo
cmp
cld
adcb
ja
dec
xchg
das
dec
jl
cmp
dec
push
cmp
dec
ja
and
pop
cwtl
jge
subb
subl
or
in
imul
lds
leave
pop
std
cmp
xchg
outsb
inc
ss
aaa
sahf
pop
mov
jnp
rcrb
lcall
out
sbb
push
push
pop
fidivrl
xor
cmpsl
inc
aam
fcomp
into
cmp
xchg
sti
mov
mov
xor
sub
and
adc
negb
popa
sahf
push
shl
lret
fmul
aas
push
sbb
lock
cmp
or
push
arpl
addl
rcrb
pop
adc
add
stc
punpcklwd
cmp
fidivrl
cli
jb
dec
aas
jle
xchg
and
and
pushf
outsl
sarb
xchg
loop
cmpsl
push
leave
cmp
pop
outsl
sahf
inc
lods
fwait
sub
mov
mov
ss
jl
js
cld
int
cmp
pop
push
mov
loopne
pop
inc
xchg
cwtl
push
jg
pop
addb
jnp
fidivrl
adc
jb
lcall
xor
inc
scas
imul
dec
xor
add
adc
and
push
cwtl
pop
leave
ds
and
mov
sub
pushf
push
call
xchg
clc
add
mov
sbb
jnp
cmpsl
hlt
clc
fildll
je
adc
xchg
xchg
loope
data16
lcall
sbb
fcoml
pop
push
clc
cmp
scas
and
jno
repnz
ficomps
or
dec
push
cmp
cmpb
cmp
pop
cld
pop
int
mov
or
insl
in
mov
inc
mov
and
push
out
ss
mov
xchg
jae
adcl
jo
add
or
cmp
adcl
cli
inc
in
jg
xchg
cmp
jle
inc
sub
jp
xchg
lret
fsubs
fs
pop
push
jecxz
and
jnp
lret
lahf
cwtl
sbb
in
jl
push
leave
xor
arpl
pop
clc
arpl
shlb
call
mov
push
fisubrs
bound
xchg
cmp
push
mov
sbb
xor
out
sbb
lahf
pop
mov
mov
push
popa
xor
pop
les
outsl
pop
mov
imul
fiaddl
fstpt
jecxz
pop
jmp
aas
xchg
sbb
testb
dec
sbb
pop
int3
aaa
sbb
addl
or
jle
add
das
add
inc
aas
xchg
mov
dec
pusha
inc
add
jg,pn
and
dec
dec
mov
jle
cmpsb
lcall
test
pop
arpl
mov
pop
inc
add
mov
inc
jp
pop
fstpt
andb
sbb
lock
push
xchg
arpl
cld
sahf
loopne
fwait
mov
push
xchg
jnp
pop
ret
das
rol
inc
cmpsl
dec
pop
sub
popa
fisubrs
or
adc
jl
das
jl
add
int3
mov
inc
inc
lock
cmpsb
or
sbb
xchg
inc
jb
mov
cwtl
addl
cmp
mov
jbe
xchg
mov
cmp
pop
pusha
aas
ficomps
inc
cmp
orl
jp
pop
jl
jle
stos
test
jae
dec
hlt
pop
addb
imul
and
lcall
addb
push
add
or
fstps
pop
pop
and
xchg
mov
fdivrl
push
inc
pop
mov
in
cmp
dec
fcoml
cmp
fistl
mov
push
adc
mov
sbb
sub
mov
cli
es
pop
pop
js
inc
lods
jp
cmp
push
cmp
xlat
mov
mov
fcomip
mov
pusha
mov
mov
jae
pop
cmp
cmp
adc
pop
rolb
jg
bound
pop
outsb
loopne
sti
inc
inc
add
dec
dec
and
cmpl
mov
cmp
pop
jp
pop
xlat
jnp
sbb
dec
jle
sahf
xchg
xor
jb
lahf
cmp
je
xor
mov
sbb
mov
pop
inc
sbb
fmul
xor
mov
mov
pop
mov
sbb
cmp
adc
sti
cmpsl
adc
mov
pop
idivb
aaa
or
mov
jnp
xlat
push
cmp
and
mov
sar
jl
push
or
xchg
pusha
jle
mov
lcall
pop
mov
pop
test
jnp
jl
mov
test
rolb
dec
cltd
aad
pop
faddl
inc
pushf
rcrl
cli
mov
mov
xor
cmp
mov
aad
loopne
sub
lret
popa
cmp
pop
jl
mov
mov
insl
rol
push
push
lods
in
lods
jl
dec
xchg
test
sti
mov
aas
dec
add
into
cld
mov
adc
lds
jp
dec
mov
cmp
cmp
dec
push
inc
jne
pop
mov
jle
arpl
dec
pop
jns
clc
dec
int
popf
fwait
inc
pop
sbbb
jecxz
mov
mov
mov
test
and
sub
and
mov
and
and
das
popa
lcall
jnp
daa
push
adc
stc
push
mov
jg
sahf
pop
pop
pop
iret
aas
mov
cmp
dec
sbb
lcall
pop
cmp
jns
push
loop
ret
jp
dec
add
outsb
sub
mov
xor
mov
cld
xchg
aaa
sbb
dec
mov
rcrb
ds
pop
xchg
mov
pop
mov
jp
push
sbb
arpl
pop
push
push
addb
scas
cltd
imul
lea
sbb
fcmovnb
pop
pusha
pop
jecxz
mov
cli
pop
inc
aaa
mov
repz
cwtl
jb
pop
push
js
jns
sbb
cmp
mov
dec
xor
cmp
inc
pop
sub
and
arpl
mov
out
pop
push
ss
hlt
rcrb
mov
and
cld
dec
and
addr16
mov
mov
mov
out
cli
cmp
inc
mov
sub
add
sahf
aad
pop
mov
pop
cmp
lahf
and
arpl
jge
ss
mov
mov
rcrb
pop
jle
pop
jl
push
aad
cld
cmp
sarb
lds
cli
stc
jg
lsl
aad
cmc
jge
cwtl
mov
pop
lcall
sarl
mov
add
mov
fcoml
testb
sti
lahf
sub
pop
fmul
mov
pop
iret
pop
scas
jmp
and
roll
popa
push
mov
cmp
clc
dec
cmp
xchg
mov
adc
fidivs
lods
add
fiaddl
jle
stos
loope
ljmp
aad
cs
in
jp
jns
jno
cli
inc
pop
jno
cmc
cli
sbb
call
popa
sub
jnp
rcrb
xchg
and
xchg
icebp
mov
cmp
push
jle
cmp
inc
ljmp
xor
sti
jl
cmp
cld
inc
nop
fwait
pop
sub
pushf
pop
xchg
add
cmp
js
mov
insb
pop
fimuls
fwait
xchg
inc
add
lretw
cmpsl
add
lds
arpl
cmp
aas
mov
and
sarb
or
inc
lock
or
inc
aaa
js
inc
in
shll
cli
xchg
jb
jl
cmp
mov
sbb
pop
rcrl
jg
and
pusha
add
enter
lods
fdivp
lret
sbb
adc
repz
mov
inc
call
lahf
sub
and
mov
arpl
mov
pop
sarb
fs
cmp
jp
dec
sbb
mov
mov
or
mov
and
aas
dec
cltd
jnp
cmp
cltd
adc
testb
lcall
test
pop
mov
cltd
push
adc
test
dec
dec
jns
pop
pop
push
adc
mov
sub
clc
jge
cmp
repz
pushf
inc
cmpsl
cmc
mov
xchg
xchg
je
push
idivb
fbstp
mov
sbb
fidivl
cmp
sahf
stos
dec
roll
lcall
int3
pop
adc
cmc
loopne
aaa
arpl
jg
pop
aad
pop
repnz
sbb
xchg
sbb
shl
clc
add
add
cmpb
adc
ljmp
loopne
pop
inc
rolb
lret
pusha
cld
and
cmc
dec
out
mov
lcall
and
sbb
jle
cli
jnp
push
mov
mov
mov
and
cli
push
pusha
lcall
jp
pop
cli
jl
mov
mov
pop
mov
das
cmp
sbb
ficoms
jnp
roll
pop
cmp
mov
ret
lea
xor
push
mov
out
inc
add
fcompl
pop
mov
cmp
sahf
ficompl
mov
sub
sbb
ljmp
pop
mov
ss
jg
loopne
jnp
xchg
and
adc
xchg
pop
subb
sbb
adc
fwait
mov
sahf
iret
js
mov
xchg
sbb
cmp
jns
xlat
cli
add
adc
pop
fwait
xor
lcall
rcrl
xchg
adc
xchg
ret
pop
ficoms
mov
sbb
dec
jp
cli
aas
cmpsl
mov
dec
aad
or
clc
pop
sbbl
sti
mov
pop
nop
push
pop
xchg
fisttpl
sahf
mov
scas
jb
pusha
pop
add
adc
jae
jp
pop
pop
jl
ss
out
fimuls
cmp
and
loope
add
inc
pop
arpl
daa
mov
hlt
shrb
out
loopne
gs
frstor
test
adc
outsl
cmp
pop
es
fcoms
push
or
pusha
fldt
pop
addb
xchg
rcr
mov
sbb
cli
jns
pop
and
jb
rcr
pop
cmp
mov
cmp
out
cli
pop
xchg
push
pop
cwtl
arpl
push
jmp
mov
and
jnp
push
sar
sub
pop
fdivs
bound
dec
or
das
mov
addr16
bnd
jge
cwtl
sti
cmp
sti
xchg
lahf
and
pop
xchg
jns
mov
mov
jg
mov
inc
mov
sbb
insl
faddp
mov
pop
push
adc
inc
test
call
sahf
pop
or
lds
mov
jb
jle
js
lcall
cmpsl
mov
imul
and
mov
xchg
arpl
adc
pusha
sub
filds
jmp
sti
sahf
xchg
and
add
cmp
pop
out
test
pop
pop
jge
sahf
jle
aad
inc
fbld
cwtl
clc
pop
xchg
xchg
fistpl
push
jae
inc
je
mov
pushf
orb
jl
sub
xchg
fdivrl
dec
inc
inc
fs
add
push
or
add
pop
mov
xchg
leave
adc
shlb
fdivl
ret
adc
or
cwtl
mov
js
cltd
cmp
scas
sahf
adc
mov
and
lret
lret
dec
std
sarb
jnp
dec
outsl
out
mov
sarb
icebp
js
fwait
pusha
jp,pt
mov
inc
into
inc
sti
outsl
jno
pusha
out
dec
lcall
sbb
out
mov
adc
rcl
incb
cmp
pop
sahf
and
pop
pop
add
testb
scas
jnp
mov
sbb
adc
cmp
cwtl
fdivrp
pop
int3
pop
inc
js
dec
ret
test
jecxz
cwtl
jo
add
jge
cmp
xor
adc
cmp
pop
jnp
sub
in
int3
idiv
push
ficompl
mov
mov
cmp
cmp
sbb
xchg
pop
dec
inc
pop
cmp
inc
and
cmp
shll
xchg
xchg
dec
mov
mov
sbb
pop
clc
adc
add
mov
cwtl
or
sahf
push
push
inc
cmp
aaa
sbb
dec
aad
mov
inc
idivb
das
addr16
push
enter
pop
outsb
mov
pop
mov
loope
mov
pop
lds
inc
inc
jnp
ja
dec
push
sarb
and
imul
push
shll
lds
incl
mov
sub
pop
sahf
jb
pop
fmull
nop
pop
ds
push
insl
add
lea
adc
fcomps
cmp
aas
leave
xlat
adc
mov
fiadds
aad
lahf
pusha
sub
fwait
dec
mov
fadd
dec
mov
or
sbb
cmp
sbb
lret
lcall
mov
aas
pushf
jle
loopne
pop
loop
jge
inc
push
rcrb
add
jp
cmp
add
jle
std
lahf
sbb
add
or
pop
pop
pop
mov
sahf
or
lock
add
cld
xchg
mov
orl
fwait
mov
fidivs
repz
sti
sbb
jnp
test
inc
pop
cmp
shlb
pop
fisubl
aam
cmp
push
pop
stos
ja
xor
mov
pop
cmp
pop
dec
xchg
sbbb
pusha
clc
pop
and
and
cmp
incb
insl
xchg
sti
cmp
mov
outsb
jle
cltd
jge
arpl
lcall
sbb
jns
sbb
cli
mov
sti
mov
js
std
fbstp
mov
mov
or
mov
xchg
or
cmp
push
insl
pop
cmp
cli
enter
mov
roll
test
cwtl
jno
addl
cmp
mov
fwait
ljmp
push
sbb
sti
sti
pushf
add
aas
repz
popa
lahf
ficomps
outsl
int3
cmp
pop
or
cmc
loopne
fdiv
test
jnp
pop
mov
lret
mov
orl
inc
out
dec
std
cmp
pop
jge
xorb
xchg
pop
scas
out
pop
lcall
jg
into
inc
mov
lahf
pop
nop
lds
sbb
idivb
pop
mov
fxch
xorl
pushf
pop
loop
sbb
mov
test
shll
fcoms
add
or
idivl
adc
sbb
jne
sahf
cmc
and
sbb
mov
pop
aas
stos
cmc
dec
lahf
jge
inc
pop
cmp
pop
mov
pushf
mov
inc
add
pop
cmp
xchg
cmp
cmpl
push
xchg
pop
mov
mov
cld
mov
inc
sbb
fcompl
add
popa
cld
pop
addl
xor
mov
mov
je
sahf
pop
xor
pop
mov
nop
add
pop
inc
or
pusha
pop
mov
dec
pop
lcall
aas
inc
pusha
mov
cmpb
jo
in
or
pusha
xor
xor
push
push
sbb
fstpt
inc
cmp
mov
cld
jge
jno
lcall
push
cmp
push
fidivrl
cmp
clc
push
insb
mov
push
pop
ficomps
add
test
jb
push
fcomps
shlb
bound
sbb
pop
mull
jg
xchg
mov
pop
push
pop
repz
mov
insb
popa
mov
jnp
in
daa
ret
adc
pop
inc
cmp
xchg
pop
xchg
insl
popa
pop
cs
pushf
pop
cli
adc
int
push
fistpll
xor
dec
in
out
sarb
stos
cmp
cmp
popa
mov
icebp
add
mov
mov
addl
cmp
pop
xor
clc
lret
mov
sub
mov
sbbl
inc
es
pop
popf
xchg
scas
loopne
pop
and
pop
adc
repnz
cld
sbb
push
inc
call
loopne
push
fsub
pop
push
jle
js
scas
xor
incl
cld
xor
push
call
fwait
mov
mov
sbb
sbb
mov
cmpb
cmp
push
ret
pop
cmp
pop
repnz
filds
mov
ds
jl
cmp
sub
mov
fwait
cmp
aad
jnp
cmp
hlt
lahf
loopne
xchg
jo
mov
pop
ds
pushf
fidivrs
andb
call
pop
inc
add
push
fcmovu
inc
xchg
mov
sbb
lcall
and
arpl
lock
cmp
cld
movlps
flds
push
stos
pop
bound
mov
fdivrs
cmp
cmpsl
inc
cmp
faddl
fcomi
aas
cmp
aad
or
xchg
shlb
repnz
sbb
inc
jge
pop
ficomps
add
lds
inc
or
push
add
fbstp
xchg
dec
insb
fdivrl
fcomps
sbb
sahf
mov
fwait
sarb
inc
and
sbb
sti
pop
cmp
cmp
ror
orb
dec
ret
pusha
cs
aaa
pop
cli
out
pop
fidivrs
xor
and
mov
add
mov
sar
adc
adc
ficomps
xchg
mov
pushf
pop
pop
cmp
mov
push
pop
mov
jb
popa
pop
xor
mov
sbbb
mov
sbb
or
mov
das
ja
pop
adcb
pop
roll
jmp
sbb
lahf
mov
xchg
push
jp
jecxz
cmp
pop
pop
inc
inc
cmp
sbb
or
and
sub
add
fcompl
jl
into
pop
cmp
pusha
cmc
clc
mov
push
je
pop
sbb
push
leave
ljmp
dec
sahf
mov
cltd
inc
in
adc
pop
dec
sbb
enter
jns
cmp
push
xor
pop
xchg
fbld
pop
outsb
inc
jnp
push
cmp
cmp
cmp
orb
and
xchg
pushf
mov
jb
jg
pop
mov
adc
lcall
mov
mov
addl
jge
cmp
fwait
push
fcomp
sbb
sbb
xor
jmp
jge
mov
pop
int3
shll
jb
cli
mov
stos
push
loopne,pn
lret
imul
adc
data16
inc
inc
lds
pop
aaa
adc
cmp
push
pushf
loopne
and
sbb
jnp
sub
sbb
xor
inc
loopne
pop
cwtl
lahf
sti
rcrl
mov
mov
jle
jecxz
inc
cwtl
ror
js
push
mov
mov
lds
mov
xchg
sbb
dec
jo
mov
xor
dec
jecxz
cmp
push
pushf
rcr
pop
push
pusha
int3
lcall
pop
push
sbbb
jp
ja
add
scas
sbb
btc
xchg
loopne
push
push
aas
fbld
loop
cmp
insl
adc
cwtl
test
jp
add
ds
inc
shl
mov
adc
pop
cli
pop
push
pop
cld
jle
dec
pop
mov
int3
addl
xor
mov
push
pop
dec
or
test
clc
sub
ljmp
lea
ss
shl
and
loop
inc
mov
sub
cmpsl
sti
and
mov
add
fdivp
ficomps
inc
pusha
pop
lcall
bound
pop
jle
push
mov
inc
dec
nop
mov
pop
dec
adc
ljmp
push
sbbl
pop
in
sarb
pop
xor
pop
pop
mov
pop
adc
rorb
inc
clc
aaa
mov
inc
adc
lds
dec
add
int3
mov
sbb
mov
pop
mov
fldl
shlb
cltd
loopne
leave
cmp
mov
inc
outsb
xchg
mov
in
jg
push
pop
cmp
sub
cmp
sbb
pop
sbb
dec
loope
pop
idivl
adc
mov
or
cmp
mov
imul
sahf
pop
mov
push
rcr
lea
sub
dec
lcall
sub
mov
xchg
imul
xchg
mov
scas
mov
jle
cmp
pop
subl
and
ret
push
mov
jle
addb
ficompl
sbb
jl
and
lds
cmp
adc
pop
add
js
xchg
ret
sbb
dec
fisubrs
pushf
imul
inc
cmp
mov
push
cmp
inc
push
lock
cmp
bound
pusha
inc
rsm
adc
js
mov
test
jl
std
jp
fidivrl
jae
add
push
and
xchg
adc
bound
pop
lds
dec
jbe
adc
cld
hlt
mov
dec
cmp
xchg
xchg
repnz
push
cmp
pop
pusha
sahf
add
inc
mov
or
mov
fists
lods
jno
cmp
mov
lock
sbbb
repz
rclb
inc
shlb
cmp
inc
add
lcall
mov
lret
mov
inc
jge
repz
push
movzwl
adc
xchg
fildl
fstps
cmp
mov
mov
fstps
mov
and
pop
neg
jg
mov
aad
pmullw
lcall
ret
je
pop
fwait
das
adc
adc
cmp
aad
inc
pop
loopne
mov
xchg
cmp
lcall
daa
mov
mov
push
sbb
inc
jle
xor
cmp
pushf
jnp
cmp
pop
popa
notb
clc
sahf
pop
pop
cld
movd
cld
pop
ss
inc
decl
xlat
push
sbb
cmc
dec
mov
push
push
and
fisubl
scas
and
loop
fwait
pop
cmp
mov
sti
pop
rolb
pop
hlt
push
dec
mov
and
cmp
mov
not
mov
mov
jge
pushf
push
mov
sbb
add
xorl
add
movsb
pusha
lahf
inc
lret
inc
in
jg
adc
mov
cmp
mov
jle
mov
imul
xor
fwait
stos
xor
mov
cld
and
fisttps
out
or
sbb
fistl
push
leave
mov
cmp
rclb
arpl
pop
inc
fiaddl
pop
fistpll
pop
pop
ret
dec
mov
js
cmp
popa
cmp
stos
mov
stos
or
add
aaa
cwtl
pushf
pop
lcall
popw
cld
pop
xor
and
xchg
sti
jge
dec
fwait
sahf
fistpl
rcrb
popa
push
lahf
stc
mov
jge
xchg
scas
loop
and
inc
sbb
push
jge
dec
dec
fcoms
fcmovnbe
lea
mov
shl
pop
pop
dec
or
sbbl
jnp
lcall
cld
inc
push
or
adc
js
sbb
cmp
loopne
xchg
mov
cwtl
filds
mov
popa
fstpt
fwait
sbb
sbb
fstpt
mov
rcrb
ljmp
rolb
sbb
dec
ljmp
iret
mov
inc
xchg
dec
adc
pusha
bound
dec
fildl
lahf
into
cmp
dec
jl
xchg
lcall
inc
inc
movsl
in
lcall
rorb
idivl
xor
pop
pop
xor
pop
lahf
jge
pop
fmull
xchg
mov
js
pop
inc
xchg
fistpl
cmp
andl
pop
cwtl
ss
jle
pop
xor
add
add
loopne
mov
push
fiadds
lahf
mov
sarb
pop
mov
mov
mov
cmp
outsb
xor
repnz
jp
cmc
repz
sbb
ficomps
mov
adc
enter
and
and
call
outsl
sbb
pop
bound
cmp
dec
out
inc
xchg
fwait
js
inc
dec
add
scas
imul
lahf
jp
pusha
push
fisubs
rorl
sar
pop
lcall
mov
outsl
jmp
sub
cltd
neg
pop
lcall
cmp
mov
aas
xchg
push
mov
cmp
sarl
dec
or
fists
inc
ficomps
pop
sbb
stos
jge
cwtl
sahf
adc
repz
jg
xchg
cmpb
subl
fsubrl
addr16
pop
xor
jl
fwait
sbb
cmp
int3
lcall
mov
mov
mov
push
je
pop
jg
adc
mov
loope
sbb
pop
cmp
cmp
outsl
pop
pop
cmc
pop
push
pop
mov
xorl
js
cmp
pop
mov
sbb
inc
aas
pop
push
mov
leave
pop
mov
lcall
pop
cmp
inc
lahf
out
pop
xchg
pop
pop
ljmp
jne
mov
inc
pop
dec
fwait
paddusb
inc
pmaddwd
sar
cmp
out
pusha
pop
lds
pop
pop
pop
inc
or
pop
cli
pop
cmp
cmp
outsb
pop
cmp
fcmove
cli
sub
add
stos
cmp
stos
lahf
pop
mov
leave
jmp
jge
ss
sti
adc
sbb
push
addr16
and
inc
lods
cmp
cld
fiadds
subb
fwait
mov
mov
pop
fidivrl
jp
ljmp
lcall
push
sub
pusha
xchg
pop
add
cmp
clc
push
mov
mov
fdivrs
ret
sbb
cmp
ss
jnp
mov
pop
fildl
out
xchg
sbb
jle
mov
mov
sbb
pop
and
jno
pop
add
or
add
cmp
adcb
flds
mov
rcrl
cld
jmp
pop
mov
mov
dec
pop
scas
push
arpl
mov
add
cwtl
sbb
sub
fwait
xor
jns
fwait
cmpb
cmp
mov
cmpsl
jg
mov
jl
pop
jb
lcall
std
jp
lcall
aas
sbbl
jl
dec
enter
pop
loop
sbb
mov
scas
ror
pop
pushf
rcr
or
dec
std
inc
dec
xorb
aas
sbb
into
aaa
mov
adc
add
and
call
jge
cmp
mov
sbb
pop
aas
mov
scas
fsubrp
dec
push
inc
mov
fdivs
jg
add
lds
cmp
dec
es
pop
les
outsb
jnp
js
cmp
stos
idiv
cltd
fcmovnb
jbe
fidivrs
push
hlt
cmpl
cli
pop
clc
inc
jecxz
pop
dec
mov
xchg
or
mov
ss
jp
and
push
jl
ficomps
loopne
sbb
dec
in
sarb
jge
push
xor
cmp
inc
lds
jnp
pop
mov
mov
cmp
sbb
xor
repz
out
jle
ret
jns
jp
fistps
cwtl
outsl
pop
jo
loopne
aaa
mov
sti
cmp
push
int3
fwait
rorb
dec
sbb
push
sarb
sbb
xorb
out
lcall
hlt
cmp
out
dec
sbbb
lock
dec
push
xlat
cwtl
jle
sarb
cmp
push
sbb
popa
xor
lds
repnz
push
sbb
mov
mov
cmp
pop
mov
pop
clc
cmp
mov
jmp
cmp
jo
shll
call
hlt
lcall
xchg
xor
fs
push
ss
cmp
mov
mov
js
mov
pop
ret
addl
stos
inc
and
fxch
pop
stc
mov
or
add
repz
and
popf
jle
fidivrl
mov
dec
dec
sub
dec
jbe
cmp
mov
subl
jle
pop
stos
jle
bound
sbb
pop
leave
mov
mov
ret
aam
fisttpll
mov
cmp
inc
mov
frstpm(287
scas
lret
jg
in
stos
or
or
fidivrl
mov
lret
mov
loopne
inc
sti
dec
loope
ficoml
cmp
rorb
call
loop
xchg
or
jecxz
push
popf
xchg
cmp
sbb
push
lds
insb
and
jb
jp
scas
and
pusha
fsubs
add
cld
addb
sbb
pusha
inc
jb
xchg
push
fld
mov
jp
adc
mov
push
jge
sbb
pop
lds
cli
pop
call
jns
jp
cmp
pop
aaa
cmp
cmp
mov
rcrl
cmp
std
pop
mov
fidivrl
or
mov
scas
sbb
cltd
adc
xchg
pop
clc
lcall
adc
dec
inc
pusha
aad
pushf
jg
sbb
mov
jne
imul
cmp
and
fstpt
out
jnp
xchg
sbb
cwtl
dec
lret
cmp
adc
fsubp
mov
xchg
dec
push
sahf
mov
lret
je,pt
inc
mov
pusha
aas
jg
xchg
or
enter
add
idivb
xchg
dec
jle
pop
pop
scas
in
inc
out
mov
mov
rorl
mov
inc
xchg
out
jp
sub
and
jge
cwtl
negl
mov
cmp
jb
sti
jg
jp
ret
pop
mov
lds
jns
sbb
inc
cld
lcall
adc
cmp
mov
pusha
inc
loop
adc
pushf
mov
fbld
cld
xchg
ss
cmp
jp
pusha
push
pop
inc
shlb
pop
pop
pop
jg
pusha
cmp
scas
push
cmp
cmp
data16
mov
jbe
mov
dec
pusha
adc
cwtl
mov
pushf
mov
pushf
jge
orb
pop
inc
mov
daa
mov
bound
cmp
sbb
mull
ret
pop
cwtl
testb
jb
sar
adc
sbb
cmp
adc
loop
and
in
aas
fistpll
fdivr
inc
loope
fidivrs
xor
js
cmc
mov
subb
mov
cmp
inc
xor
push
sbb
or
inc
sbb
mov
xchg
jge
and
mov
ds
mov
inc
jg
push
addb
fwait
push
adc
jb
jle
cmp
sbb
call
jge
xchg
pop
ljmp
popa
pushf
dec
dec
xorb
fadd
mov
leave
cwtl
pop
xchg
pop
push
push
ret
cmp
add
pusha
pop
jp
cmp
pop
int3
adc
sbb
pop
insl
daa
shlb
mov
mov
mov
lcall
sbb
cli
sbb
push
pop
pop
push
sti
std
fdivl
pop
sub
outsl
push
pushf
nop
cmp
push
push
call
inc
add
dec
sbb
dec
mov
inc
mov
pop
mov
notb
sti
addb
push
cli
adc
lea
fdivrl
pop
or
mov
mov
sbb
cmp
rcrb
sti
jg
or
sbbl
ss
and
mov
shl
sti
inc
insb
inc
push
nop
jne
cmp
push
inc
mov
dec
add
fstpt
outsb
ficomps
inc
pop
adc
sbbb
pushf
ss
jo
hlt
sbb
cli
fists
pop
fdivrl
inc
pushf
push
jle
cmp
jb
fistpl
jg
sub
sbbl
fisttps
xchg
pushf
loopne
lahf
adc
mov
xchg
xchg
jne
ficomps
outsl
inc
mov
jg
icebp
pushf
cld
cld
cmp
mov
pop
mov
je
lcall
pushf
jnp
ret
sahf
cmp
mov
je
jae
cwtl
test
push
sbbl
arpl
push
loopne
mov
cmp
and
mov
pop
push
sti
jae
ds
fidivrs
dec
mov
dec
push
inc
push
mov
iret
inc
stos
idivl
fistps
push
push
add
jbe
sbb
jb
fmuls
scas
loopne
cwtl
dec
cmpl
jb
sbb
js
test
pop
add
xchg
fidivrl
jge
sbb
rcrb
std
inc
je
jnp
pop
cmc
cmpsl
inc
or
fdivrl
add
add
mov
mov
mov
js
clc
xchg
xlat
addl
lcall
icebp
shlb
ljmp
push
lahf
push
call
fistpll
cwtl
lcall
fisttpl
pop
mov
xor
sbb
mov
fstpt
lds
mov
mov
ss
ss
or
pop
pusha
mov
sti
jg
int
pop
mov
in
lret
dec
lea
push
mov
in
imul
sbb
loop
mov
dec
mov
and
pop
rcrb
inc
jl
pop
mov
pop
jge
push
repnz
cmp
and
rolb
ljmp
es
pop
je
cmp
cwtl
pop
repz
cmp
push
mov
pushf
ljmp
les
nop
cmp
mov
adc
lds
clc
mov
cmp
mov
repnz
sbb
mov
rclb
inc
out
xor
inc
and
add
sahf
fistpll
mov
add
movsl
pop
pop
cmpsb
test
cld
aas
inc
inc
addb
pop
pop
cmp
sarb
cld
mov
push
dec
mov
mov
adc
pop
pop
mov
jge
mov
sti
mov
sbb
pop
clc
mov
mov
mov
adcb
cmp
inc
add
test
sbb
jmp
jle
inc
adc
cwtl
pushl
and
cmp
cmp
cld
nop
pop
fcompl
dec
mov
mov
in
jge
inc
sti
cmp
pop
inc
mov
cmp
out
test
xchg
mov
pop
aas
jmp
repz
pusha
dec
ja
jo
jnp
pop
push
pop
arpl
popa
pop
xor
mov
cmc
cmp
fdivrp
cwtl
inc
xchg
and
cmp
bound
pop
pop
fildl
inc
cld
jns
mov
cmp
stos
sahf
mov
inc
aam
inc
jne
jmp
clc
jecxz
sub
push
mov
mov
dec
cmp
js
push
and
cmp
loopne
mov
lcall
push
sar
jo
jp
stos
scas
insb
pop
popa
ds
dec
les
inc
jl
jle
mov
daa
outsl
mov
ljmp
mov
jnp
inc
xor
cli
dec
out
sbb
sbb
sti
push
xchg
mov
pop
sub
data16
aas
sbb
dec
adc
mov
inc
xchg
inc
shll
pop
call
mov
xor
cmp
mov
mov
sti
add
fimull
mov
pop
mov
dec
test
push
jge
mov
scas
cmp
sti
jno
adc
adcl
push
and
lahf
sbb
pushf
jle
sub
enter
std
adc
xchg
nop
adc
dec
out
lea
or
add
adc
pop
cmp
scas
adc
sbb
fwait
jle
jg
mov
int3
mov
popf
lret
test
add
in
sarw
lods
push
mov
leave
sbb
rolb
cmp
ss
filds
mov
subb
inc
in
loopne
mov
cli
xchg
and
pop
cli
popa
pop
loop
into
push
cmp
aas
pop
dec
xor
lcall
pop
xor
icebp
js
gs
pop
icebp
pop
inc
add
xchg
pop
cmp
add
adc
imul
test
jns
mov
jl
insl
js
dec
push
push
add
pop
jl
mov
adc
lahf
sub
mov
mov
out
xchg
ficompl
ret
test
mov
andl
loopne
inc
mov
mov
mov
push
jnp
jp
fmul
mov
fiadds
gs
adc
jge
fdivrl
sarb
mov
cli
jl
adc
mov
pop
ss
sbb
xchg
sbb
mov
daa
and
clc
js
mov
xchg
sbb
mov
cmpb
lret
clc
cmp
mov
cmp
inc
test
lods
aaa
shrb
pushf
inc
ret
test
imul
int3
cmp
mov
pop
xor
xchg
sar
pop
sti
nop
and
cmpl
dec
ss
mov
rcrb
pop
lret
mov
or
pop
lds
jecxz
dec
pop
push
mov
outsb
cltd
pop
outsb
mov
andb
and
push
adc
pusha
add
cmp
add
pop
and
pop
mov
add
push
cmp
mov
and
inc
fidivs
out
js
lahf
inc
pop
mov
cwtl
arpl
and
cmp
inc
mov
jbe
cmp
jle
fwait
mov
xchg
into
jle
ds
sti
mov
sbb
xor
and
in
or
aas
jle
sub
jnp
pop
and
hlt
add
ret
inc
cmp
and
push
rcrb
add
sti
xchg
add
cld
pop
rol
cli
fwait
and
xor
js
push
fbld
pop
int
jle
pop
mov
jg
xor
fisttps
mov
js
test
lahf
jnp
inc
cmp
mov
cmp
sti
stc
sbb
jecxz
mov
sbb
add
pop
pop
clc
cmp
pop
jnp
push
negl
test
pushf
cmp
adc
pop
inc
sbb
mov
sbb
pop
sbb
test
adc
loopne
stos
pop
aas
outsb
js
jo
xor
pop
pusha
loopne
push
rcl
jmp
jecxz
vmread
sbbb
jo
or
test
sti
mov
mov
push
bound
loopne
rcrb
fidivl
cld
jl
cli
aas
pop
sahf
pusha
data16
iret
lcall
xchg
mov
and
fcomps
mov
aaa
cli
mull
mov
decl
xchg
cli
mov
pop
pop
push
sbb
repz
pusha
das
xchg
lcall
jo
fnstcw
test
fistps
sbb
fstl
pop
pop
lds
js
cmc
cmp
andb
iret
mov
cmp
jge
fdivrs
sbb
xorb
pop
pop
dec
cmp
fmull
mov
sahf
pop
adc
pop
xor
push
fstpt
mov
repz
pop
imul
in
push
pmaxub
and
mov
push
sbb
pop
and
sbb
cli
pop
pushf
push
push
xor
lret
test
aaa
pop
fldt
pop
pusha
mov
jg
inc
testb
add
mov
dec
pop
pop
fsubr
or
lahf
lock
cmp
jge
clc
inc
adc
ffreep
popf
cltd
sub
stos
js
bound
add
xchg
mov
and
jp
cmp
mov
mov
rorb
loopne
dec
adc
je
pop
pop
pop
lret
jle
movsl
fisttpl
fistps
inc
popa
shlb
xchg
lds
fdivrs
adc
cwtl
fdivrl
adc
mov
and
rcr
jge
mov
pop
ss
dec
dec
cmp
jge
xchg
mov
das
in
andb
mov
mov
mov
sti
xor
aaa
inc
mov
cmp
lcall
cltd
add
mov
sbb
cmp
pop
cmp
aas
push
call
push
cld
and
mov
mov
push
jle
push
pop
out
adc
fisubrs
fs
xchg
lcall
cs
sub
jnp
cli
aad
dec
xor
dec
push
mov
mov
fimuls
cwtl
mov
mov
push
out
pop
lret
or
mov
jp
adc
mov
xchg
inc
pop
cmp
cmp
dec
adc
pop
dec
daa
filds
idivb
mov
inc
adc
pop
pop
sti
sub
sbb
loopne
sbb
pushl
fwait
jnp
stos
cld
lahf
xor
inc
and
sbb
push
sbb
ficompl
dec
sahf
cmp
mov
repnz
jl
cld
sbb
mov
adc
mov
aas
jge
xor
inc
adc
idivb
pop
lds
jno
sti
cmp
movsb
repz
jnp
je
repnz
lds
mov
cld
ret
clc
inc
sub
shll
sbb
sub
push
pop
andl
xchg
inc
lahf
dec
sbb
mov
pop
pop
aas
dec
loopne
cmp
or
pusha
xchg
std
mov
adc
sbb
adc
pop
fdivrl
cmp
sub
and
xchg
hlt
lret
jl
test
adc
pop
sbb
testl
pop
jnp
mov
pop
pop
add
stos
int
mov
jno
cwtl
push
jb
fwait
pop
fildl
sbb
pop
sub
push
cwtl
iret
cmp
pusha
mov
mov
or
insl
fdivrl
lret
cld
jge
inc
jmp
or
mov
in
mov
pop
pusha
mov
fidivrl
jno
sub
dec
imul
jg
jnp
cmp
lea
inc
fucomip
divps
mov
xor
inc
push
mov
push
lea
mov
jp
ss
jns
fcmovb
js
cld
inc
mov
mov
sub
pop
xchg
dec
dec
cmp
jp
pop
ror
cmp
cmp
pop
ds
jg
sbb
xor
mov
jo
pop
lcall
cmp
jne
lds
or
xchg
cmp
xchg
jge
inc
sarb
cmp
out
xchg
shlb
cmp
dec
push
push
add
mov
pop
mov
ficompl
je
cmp
mov
pop
sti
mov
jge
pusha
aas
pop
pop
loopne
cmp
cmp
or
fcomps
int3
jg
aaa
sbb
sbb
xor
push
in
fistpl
mov
int
fidivl
cmp
pop
cmp
mov
add
cmp
xor
pop
popa
pop
inc
scas
xor
xchg
pop
fimull
stos
mov
mov
xchg
inc
sbbb
out
sbb
cmp
loopne
lahf
pop
nop
sub
adc
jge
pop
pusha
mov
jb
fcompl
adc
add
sbb
cmpsb
sbb
cmp
mov
pop
pop
pop
std
xor
lcall
bound
sti
inc
in
pop
mov
sbb
cmc
sarb
sbb
aas
mov
outsl
lcall
dec
sahf
cmpb
shlb
sbbb
fidivrs
lahf
hlt
out
lods
test
mov
cmp
je
pusha
je
je
leave
sub
js
mov
cld
or
sub
loope
call
cld
cmp
inc
cmc
push
lods
lds
mov
popa
xor
in
lret
ss
out
inc
data16
fwait
sbbb
jg
cld
xchg
sti
pop
cwtl
pop
mov
cmp
ror
mov
pushf
sahf
loop
cmp
mov
sub
out
push
pop
out
mov
jg
jecxz
pop
inc
ljmp
mov
push
cmp
sahf
daa
lret
mov
cli
pop
outsl
mov
mov
xor
add
lcall
inc
inc
stos
fdivr
leave
mov
sub
clc
jle
pop
inc
mov
enter
fcomi
fwait
js
xor
cmp
sbb
lcall
repnz
jp
dec
mov
clc
and
cld
inc
jge
jae
xchg
fsubs
jb
loopne
popa
loopne
and
jno
mov
mov
push
or
pop
adc
push
adc
stos
js
lahf
je
jge
repz
cwtl
xchg
insb
jle
popf
jl
int
pop
cmpb
sbb
sahf
aas
adc
mov
shl
clc
outsl
adc
test
jmp
inc
pop
pushf
mov
inc
pop
cmp
stos
sbb
dec
mov
stc
pop
push
in
mov
sti
pop
pop
pop
mov
popa
sub
mov
orb
rcrl
pop
adc
pushf
fcoml
xor
pop
cmp
outsb
and
sbb
stc
stc
sbb
fistpll
pop
inc
mov
mov
pop
mov
fdivrs
cmc
imul
popa
sbb
aas
insb
js
lcall
ss
mov
fisubs
cmc
inc
inc
sbb
ljmp
mov
loopne
xor
cmp
jnp
movsb
mov
inc
or
outsl
sti
ss
dec
sbb
push
lea
cmp
cwtl
popa
cmpb
push
jle
xchg
jp
stos
add
and
and
ds
lahf
pop
cmp
jns
adc
mov
mov
cmp
inc
cld
jp
push
pushf
pusha
leave
lcall
sub
pop
aad
adc
mov
data16
cmp
sti
clc
cwtl
js
cmpsl
mov
and
loop
xchg
or
cli
inc
test
inc
xorl
pop
cmp
pop
rcrb
push
cmp
enter
pusha
mov
orb
jmp
mov
inc
cld
sbb
rcr
popa
ds
xchg
cmc
cmp
hlt
cmp
stos
push
add
into
pop
add
jb
mov
lcall
pop
js
xor
lods
mov
and
popa
xchg
lret
outsl
les
pop
js
pop
mov
adc
cmp
cli
pop
fwait
shrl
sbb
cmp
sbb
inc
lcall
dec
cwtl
ficompl
icebp
push
subb
jo
cmp
xor
pop
cwtl
xchg
fwait
xchg
jnp
and
mov
adc
addl
in
sub
fisubl
mov
pop
xchg
int3
mov
xchg
cmpsl
sti
cmp
mov
inc
push
cmp
jo
pop
cmp
mov
sbb
cmpl
adc
mov
adc
xor
inc
pop
sbb
adc
cmp
and
pop
inc
lds
jge
dec
push
negl
push
fistps
dec
cltd
push
ficompl
jnp
aas
sbb
idivl
cmpsb
scas
add
insb
adc
cmp
fadds
cmc
adc
pop
xchg
fadd
pop
mov
test
cmp
lods
repnz
sbb
mov
dec
sti
insb
faddl
sbbb
inc
xor
sahf
pop
dec
addl
mov
jge
fwait
je
mov
cld
js
mov
mov
lahf
push
inc
cmpb
call
sbb
mov
mov
rcrb
sbb
dec
inc
jecxz
pushf
fidivs
mov
add
cmp
fwait
or
cmp
sahf
inc
sbb
mov
pop
pusha
mov
or
fdivrl
sti
lds
cmc
jmp
sbb
mov
cli
pushf
jmp
int
sar
jl
stos
inc
pop
xchg
xchg
ficomps
adc
sti
lahf
mov
sahf
loopne
notb
adc
cld
nop
inc
fbld
inc
and
mov
pop
pushf
sub
add
pop
mov
add
pusha
mov
pop
je
mov
sub
pushf
sbb
fiadds
fwait
pushf
dec
cmc
idivl
cmpsb
aad
sub
and
sbb
pop
pop
adc
inc
iret
jge
sub
insl
lds
data16
fistpl
add
jns
push
mov
ret
mov
inc
fstpt
jo
cltd
mov
sub
cmp
xchg
idivb
imul
cmp
mov
sub
js
mov
push
fistps
sbbb
adc
rcrb
xchg
ret
dec
testl
lcall
pop
mov
loope
inc
pop
pop
negb
jle
add
cwtl
cmp
sahf
sbbl
mov
sbb
sbb
inc
xchg
or
pop
cmp
fistpl
pop
cmp
cmp
arpl
add
int3
push
ret
pop
ficoml
inc
adc
fists
fwait
nop
pushf
xor
jmp
xlat
sbb
int3
jle
sti
pop
cld
dec
push
sbb
inc
pop
clc
cli
xchg
mov
adc
fcoml
pop
jle
jne
or
fdivp
pop
inc
ljmp
aad
push
incb
test
cmp
push
lds
cmp
mov
repz
cli
or
cltd
push
sahf
sti
pop
jle
out
fcomps
jp
into
pop
cmp
pop
jl
add
fdivr
jo
andl
pop
xor
icebp
add
pusha
js
mov
jnp
shll
cmp
inc
inc
or
dec
je
push
iret
cmp
sti
ror
stc
and
adc
cli
xchg
jae
lock
cmp
arpl
and
cmp
shlb
aam
nop
adc
mov
mov
pop
popa
daa
mov
mov
mov
fcompl
add
hlt
sbb
and
arpl
bound
mov
fdivrs
js
mov
loopne
mov
jl
hlt
add
repz
fucom
xor
aas
mov
loope
mov
cmp
sti
fcoml
aas
jnp
inc
cwtl
mov
cmp
inc
je
inc
jle
pop
pop
clc
xchg
mov
inc
fdivrs
jle
inc
flds
jl
jp
pop
xchg
test
inc
xchg
pop
fadds
fwait
jmp
xchg
jp
pop
pop
jl
dec
pop
js
pusha
lods
mov
aad
pop
loopne
inc
cld
sbb
cmp
fdivrl
cmp
pop
dec
cwtl
mov
add
idivb
stc
add
adc
sbb
repz
sarl
mov
dec
das
and
cwtl
dec
push
sarl
repz
cli
adc
icebp
leave
addb
sahf
ficomps
sbb
dec
hlt
mov
cmpb
pushf
jl
leave
or
mov
jge
dec
clc
loopne
mov
xchg
inc
stos
dec
adc
inc
pop
jmp
dec
push
pop
dec
mov
out
cmp
sbb
fcomps
shl
adcb
js
lods
jb
cwtl
mov
pop
rolb
sbb
mov
add
jo
jg
cwtl
push
and
sbb
aas
pusha
add
pop
cmp
mov
mov
fsubrp
pop
jmp
pop
sbb
ret
rcl
jge
xor
outsb
imul
mov
fidivrl
mov
pushf
mov
mov
sbb
lahf
hlt
cmp
cmp
test
pop
loopne
clc
ret
push
jge
and
sbb
xor
push
adc
xchg
pop
mov
or
jo
jmp
jg
enter
shrl
mov
rcr
xchg
push
sbb
pop
iret
rcrb
cwtl
adc
pusha
leave
jecxz
cli
cmp
fcmovbe
fwait
in
cmp
cli
lds
pop
or
push
out
into
inc
out
dec
inc
jmp
sub
fwait
cwtl
repz
mov
pop
dec
push
cmp
xchg
mov
cmp
sbb
adc
insb
cmp
cmp
sbb
dec
sbb
mov
fistps
inc
add
cmp
push
mov
pop
rcrl
js
pushf
add
mov
pop
dec
mov
pop
adc
loopne
bound
call
inc
sahf
adc
fstpt
imul
sbb
rcrl
dec
dec
cld
cmp
mov
pop
out
cmp
pop
inc
sbbb
test
sahf
or
dec
ficompl
jge
push
jle
mov
bound
mov
negb
mov
cwtl
repz
js
fiadds
jge
lret
negb
adc
movsb
leave
xor
rcrb
cmp
pop
fwait
cwtl
or
mov
jg
pop
pop
mov
pop
fidivrl
mov
sub
or
inc
sbb
cmp
pop
adc
imul
fidivrl
enter
sbb
mov
pusha
mov
mov
dec
dec
pop
add
adc
mov
xchg
sbb
call
pop
scas
add
pop
pop
pop
push
lcall
cmp
pop
outsb
pop
insb
cwtl
cltd
addb
cmp
fwait
sbb
mov
popa
sti
add
jns
fistps
ret
xor
pop
cmp
mov
negl
or
cwtl
mov
cmp
sub
dec
add
pop
loopne,pt
fwait
mov
dec
lret
xchg
cmp
in
jno
dec
pop
add
sbb
or
sarb
lahf
mov
les
cmp
je
fwait
mov
inc
cmpl
cld
fcompl
mov
xlat
cmp
cmp
cmp
cmp
sbb
clc
jl
xchg
cmp
in
nop
or
cmp
lds
inc
fdivr
or
mov
cld
sahf
mov
xchg
je
sbb
cmc
add
lcall
js
mov
fisubrl
push
mov
mov
cmp
mov
fmull
pop
pop
cmp
shrb
pop
cmpb
and
sbb
pop
pop
cmpb
mov
sbb
test
jl
nop
pop
fwait
push
fdivr
push
dec
cmp
std
xchg
pop
into
fdivrs
gs
pop
int
adcl
scas
jne
mov
add
mov
inc
jae
pop
pop
jp
or
mov
pop
xchg
mov
pop
shrb
or
cmp
cwtl
adc
loop
cld
loop
loop
aad
adc
fildll
xor
stos
adcb
jnp
mov
rcl
adc
pop
leave
movl
loope
inc
push
fstpt
cmp
mov
cli
jb
js
inc
mov
mov
push
lahf
cld
add
xchg
popa
dec
push
push
push
loopne
xchg
mov
cmp
and
add
dec
jnp
jge
or
jle
push
cmp
sbb
pusha
pushf
loop
decb
jle
mov
pop
repz
stc
jl
xchg
inc
xchg
ret
xchg
repnz
loopne
aas
push
fdivrl
cmp
pop
fidivl
dec
sbb
pop
inc
sti
aas
hlt
inc
cld
sub
push
sub
dec
mov
push
pop
and
dec
pushf
sar
clc
outsb
loop
inc
es
jmp
pushf
ss
inc
xor
dec
pop
add
inc
and
andl
or
jnp
push
mov
mov
pop
lahf
andl
mov
mov
jp
and
jnp
sahf
hlt
fidivrs
lods
cmp
pop
sbb
repz
pop
jp
add
loopne
popf
jle
and
cmp
rorb
dec
push
cmp
ficomps
dec
lahf
lahf
adc
in
bound
mov
cltd
dec
mov
mov
cmp
or
jae
jge
hlt
lcall
mov
test
pop
sbb
add
loopne
sbb
out
pop
or
shlb
xlat
rolb
sbb
jle
ds
cld
mov
jg
je
adc
lret
loopne
pop
pop
lahf
and
add
cmpsb
clc
in
pop
pop
xchg
pushf
fwait
mov
lcall
arpl
fcoml
push
pop
mov
mov
fdiv
and
sbb
sub
push
int3
and
out
pop
lret
cmpb
cltd
dec
and
xchg
mov
rolb
pop
xchg
cld
mov
adc
sahf
mov
inc
sub
adc
cli
pop
push
incl
push
fcomps
mov
jl
aad
mov
sbb
repz
pop
int
cmp
adc
sbb
xor
lcall
repz
and
mov
repz
jge
pop
add
cmpsl
mov
sub
xlat
mov
sti
mov
xor
cmp
fadd
adc
mov
in
jbe
pop
push
fstps
cwtl
inc
xor
ss
cmp
nop
lods
xor
push
mov
mov
loope
and
sbb
rol
cmp
xor
and
loopne
pop
cmp
inc
in
lcall
call
mov
mov
and
sbb
outsb
fdivrs
or
clc
js
hlt
inc
mov
mov
sarb
inc
fcmovu
xchg
in
movb
cmp
mov
mov
xor
pop
ror
pop
cwtl
scas
ds
mov
or
lahf
fisubrs
push
call
dec
jb
mov
push
fidivl
movsl
pushf
sub
mov
lcall
adc
sbb
mov
sbb
rcrl
mov
mov
fidivrs
xchg
sub
pop
fsubl
pop
cld
sbb
push
stos
iret
mov
xor
pop
stos
fdivrs
out
push
pop
js
xchg
leave
push
cmp
adc
ljmp
sub
gs
pop
cmp
jnp
shll
mov
mov
mov
jle
lods
push
pop
lahf
dec
pop
orl
hlt
popa
mov
rorb
out
jl
pusha
cmp
ficomps
adc
cli
adc
inc
mov
push
add
mov
jge
push
adc
out
ret
push
ljmp
aas
je
push
jecxz
jl
popa
pop
mov
mov
pop
or
jmp
mov
jp
in
inc
pop
js
push
pop
inc
cmpsb
cmp
pop
pusha
rclb
mov
sbb
pop
andb
mov
stos
push
loop
push
orb
in
jp
and
dec
clc
cld
jnp
mov
popl
xor
ret
cld
fsubrl
sub
cli
mov
lcall
jg
or
adc
xlat
jle
fnstsw
aaa
add
xchg
jnp
fidivrs
loop
pop
inc
arpl
mov
cmp
pusha
inc
shrb
adc
mov
out
pop
xlat
scas
dec
sbb
dec
and
sbb
xor
jge
pop
sarl
xlat
shlb
adc
and
cltd
and
push
lahf
ficoms
adc
sbb
in
bound
mov
jb
pop
jmp
outsb
fstpt
sub
jne
mov
jb
cmp
pop
fwait
push
pop
pusha
ds
cli
pop
hlt
lcall
push
ficoms
pushf
and
xor
sbb
pop
mov
loopne
mov
sahf
inc
pop
inc
in
jg
cmpsb
test
fbstp
lds
lcall
push
mov
scas
jns
sbb
add
mov
xor
mov
or
cli
shlb
fwait
cmpb
aas
adc
sbb
mov
push
loopne
ljmp
inc
push
sbb
mov
clc
cwtl
ror
in
sbb
inc
push
je
sbb
addr16
jp
pop
jbe
pop
inc
sti
fisttpl
cmpsb
inc
int
mov
setae
jnp
arpl
icebp
sbb
negl
pop
push
add
rclb
js
push
pop
repz
mov
and
pop
sbb
sub
lea
enter
push
jp
jnp
popa
sub
aaa
sbbl
jo
shll
rcl
inc
jl
adc
mov
inc
mov
andl
mov
sbb
sahf
inc
imul
inc
loopne
mov
jg
ficompl
mov
inc
insb
push
add
pop
mov
push
fidivrl
or
jnp
icebp
push
mov
cmp
popa
jle
push
cmp
out
xchg
pushf
pop
mov
xor
pop
adc
pop
pop
sbb
dec
scas
cmp
fsub
cli
add
fistpl
xchg
cmp
iret
cmc
arpl
mov
mov
jle
sar
mov
test
jno
aam
adc
mov
cmp
mov
lds
sub
pop
inc
adc
stos
and
sti
jge
sahf
push
inc
cmp
sbb
decl
mov
add
jle
cwtl
dec
das
pop
mov
int3
jae
or
push
lea
mov
dec
sbb
cmp
pushf
test
and
leave
sub
loopne
mov
mov
mov
add
cmp
sahf
pop
lahf
ja
jg
mov
xchg
pop
sbb
jp
xor
xor
jle
mov
fimuls
jae
imul
lds
arpl
mov
mov
add
adc
imul
std
mov
fwait
aad
fidivrs
cmp
fs
negb
mov
mov
loopne
cmc
lahf
shlb
sbb
mov
xchg
lods
inc
add
sti
pop
sarl
movl
lods
adc
jno
cmp
addl
loop
mov
xchg
pop
mov
lret
sub
cld
jp
and
mov
pop
mov
fbld
adc
sbb
sti
pop
sahf
dec
mov
and
xlat
pop
outsb
lret
inc
push
inc
call
xchg
stos
mov
fimull
sahf
fsub
adc
test
cmp
lds
repz
cmp
cmp
pusha
cmp
enter
mov
das
loop,pt
inc
fsubr
pop
mov
cli
idivl
jmp
pop
arpl
out
xchg
mov
push
pop
push
aas
jbe
idivl
sbb
mov
fwait
jo
std
pop
and
cmp
mov
rcrl
ja
mov
mov
lcall
xor
mov
aas
lds
int
in
and
ljmp
sahf
mov
fnstcw
jg
push
cmp
shlb
or
adc
pop
mov
scas
sbb
iret
lcall
cmp
pop
jle
and
cmp
faddp
mov
lret
mov
add
and
adc
mov
sbb
aas
push
js
sti
mov
daa
and
pop
and
and
pop
add
jns
adc
daa
aad
sbb
cwtl
mov
test
loopne
inc
lcall
js
cli
js
scas
pop
fsubs
sbb
rolb
icebp
lods
mov
inc
mov
cmp
insl
adc
dec
pop
jmp
mov
les
add
sbbb
fneni(8087
bound
sti
cmpsl
push
cli
fdivs
js
mov
adc
sahf
lods
adc
loopne
fists
js
xchg
rol
lret
sbb
rcrb
inc
push
incl
movsb
js
push
push
jnp
and
push
cwtl
cmpl
fmuls
mov
cld
add
dec
sub
pop
loopne
mov
mov
lcall
pop
or
mov
shlb
inc
sbb
rcrl
popa
push
pop
loope
call
mov
mov
sar
pop
jl
fidivrl
dec
jnp
jle
clc
cmp
xlat
popa
cmpsb
jmp
insb
mov
cmp
and
pop
clc
jle
xchg
sub
xor
cmp
pop
inc
aam
jg
pop
pusha
pop
fwait
and
cmpb
stos
out
cmc
in
push
fyl2xp1
mov
jle
jmp
fcomi
imul
mov
mov
lcall
js
pop
andb
insl
sti
jl
or
aas
lods
ret
mov
stos
scas
dec
fcmovu
jge
imul
aaa
lcall
xor
movswl
lahf
loopne
sti
add
cmp
divb
add
mov
lcall
aas
lret
test
leave
sarl
mov
rcr
sahf
ffree
push
pop
ret
das
cmp
andl
aaa
cmp
xchg
pop
cli
loopne
jg
pop
sarl
xchg
sbb
repnz
sbbb
pop
fisubs
imul
cld
iret
pop
dec
add
ds
cmp
mov
ficompl
mov
sbb
push
repnz
js
subb
jb
fnstcw
pop
adcb
ret
cltd
pop
cmp
jge
ljmp
pop
js
inc
fisubrl
sbb
inc
mov
cmc
xor
sbb
dec
xchg
and
jle
jmp
cmp
jnp
movsl
pushf
mov
pop
clc
js
ss
pop
fmuls
mov
jge
dec
aad
mov
rcrb
push
mov
pop
popf
jge
mov
lcall
je
hlt
jecxz
jb
mov
aaa
lcall
ficomps
jg
adc
and
out
or
ss
jge
faddp
push
mul
cmc
fmull
pushf
cmp
dec
add
push
cli
pop
xchg
sbb
loop
ret
cmp
sbb
push
out
stos
xchg
lea
sbb
push
pop
std
fadds
pop
pop
jnp
sbbl
sbbb
loopne
pushf
mov
ficompl
cmp
push
cmp
jl
sub
std
out
push
jb
jno
pop
dec
lea
push
pop
push
cmp
clc
pop
mov
mov
add
call
clc
jge
and
pop
and
cmc
cmp
mov
xor
ss
sbb
adc
xchg
lcall
ret
lret
roll
fwait
sti
inc
pusha
sub
inc
pop
call
leave
cmpb
or
mov
xor
mov
pop
add
pop
xchg
lcall
insl
fidivrl
sbb
jle
test
adc
dec
or
cmp
fistpll
pop
fs
sbb
pop
clc
mov
inc
sbb
fs
pop
pusha
dec
xchg
je
shl
js
mov
pusha
push
scas
bound
jl
pusha
push
mov
loope
cmpsb
jle
pop
mov
sub
movsb
jecxz
aad
data16
rcl
clc
pop
lret
jp
cmp
jnp
outsl
xor
sub
fistps
sbb
mov
adc
add
cwtl
fucom
or
test
mov
sbb
sarb
sub
jmp
adc
ss
jp
loopne
pop
rol
pop
xchg
mov
rolb
push
cmp
ret
insb
cmp
mov
in
loopne
pop
pop
or
popa
fwait
cmpb
mov
jge
pop
jge
int
jmp
push
lds
pop
mov
sbb
arpl
sbb
addb
shlb
and
cmp
xchg
fistps
mov
psrld
les
cwtl
mov
insb
pop
ds
jbe
int3
lcall
popa
cwtl
cmp
and
decb
xor
mov
push
dec
jb
cli
sbb
dec
inc
cmp
pop
adc
cmp
add
cld
pop
out
lds
mov
dec
xchg
mov
mov
js
sbb
fcmovu
cmp
nop
pop
imul
push
ds
sub
fiadds
ja
mov
inc
rcrl
setg
cmp
mov
faddl
sbb
inc
arpl
ds
lcall
lds
sbbl
jno
lcall
out
test
inc
inc
cmp
sti
push
fsubrp
cmp
fwait
pop
leave
mov
arpl
inc
cmp
sbb
cmp
pop
inc
and
push
mov
or
adc
pop
pop
popa
pop
pop
sar
jle
leave
and
or
cwtl
sbb
jl
sbb
cmp
cmc
jns
fadd
xchg
sti
jge
jmp
cs
mov
mov
xchg
sbb
cmp
sbb
repz
mov
rorl
adc
push
aas
cmp
sbb
shl
fdivrs
popa
cmp
pop
fisttps
popa
inc
cmpsb
fldt
dec
mov
push
cli
dec
out
cmc
add
push
popf
mov
cli
cmp
pusha
ficomps
dec
popl
shlb
jnp
out
jle
pop
loopne
push
lock
cmp
cli
pushf
test
fmuls
xor
pushf
sbb
inc
mov
dec
xchg
cmp
and
cmp
aas
nop
or
cltd
lret
add
aad
sbb
jp
pop
dec
pop
imul
adc
sbbb
mov
lahf
sub
enter
xlat
outsb
add
sbbb
inc
inc
add
mov
cmp
pop
je
cmp
popf
imul
inc
mov
xor
mov
mov
mov
out
mov
jle
pop
mov
cmp
pop
xchg
and
sti
pushf
push
mov
fwait
push
cs
xchg
pop
jle
inc
xchg
pop
jl
inc
ret
jle
sbb
data16
mov
inc
push
mov
cli
ja
inc
pop
loopne
in
cmp
fdivrs
test
cmp
cwtl
lds
shrb
andl
cmp
dec
fildl
test
sub
inc
ficompl
sbb
jge
into
push
inc
dec
xchg
lcall
cmp
sbb
stos
mov
ds
jnp
loope
sar
sub
mov
jg
sbb
fmul
cmp
cmp
inc
pusha
loopne
mov
add
pop
lock
jo
inc
pop
lock
fistpl
lcall
sub
pop
cmp
jo
jo
pop
mov
sub
cmp
push
mov
lods
andl
in
outsl
js
je
jmp
daa
std
sbb
mov
xchg
fdivrs
adc
mov
mov
mov
xor
sti
sbb
or
fmul
push
aas
mov
cmp
pop
jl
cmp
xchg
xchg
push
mov
lahf
ljmp
stos
cmp
jp
inc
cmp
mov
clc
js
mov
sub
loopne
sti
sbb
es
inc
inc
dec
mov
pop
pop
xor
mov
mov
cmp
mov
adc
mov
sbb
out
dec
sahf
jle
jge
shlb
mov
pop
bound
pop
loopne
sbb
mov
cmp
pop
aaa
cld
jl
cmp
pusha
cli
fcompl
fwait
std
orl
mov
fiadds
and
and
xor
jnp
dec
in
clc
out
bound
cli
roll
jno,pn
ss
or
cmpl
jnp
cld
mov
inc
bound
and
inc
dec
mov
sub
jns
sub
fs
inc
idivb
mov
fbstp
je
sbb
inc
neg
loope
in
aaa
sahf
psubq
in
sbb
jne
xchg
pop
cli
dec
and
roll
aam
popa
fistps
adc
cwtl
loope
adc
cld
xchg
pop
loopne
inc
cmp
lock
sbb
loopne
xchg
sahf
mov
pop
lahf
das
popf
push
nop
jp
mov
in
ret
dec
xchg
pushf
mov
punpckhdq
push
lds
shll
fwait
mov
fcmovb
sti
into
mov
sbb
notb
push
push
mov
mov
outsb
ljmp
int3
pop
push
xchg
cwtl
fwait
mov
lcall
sub
mov
fidivrl
mov
mov
xchg
pushf
pop
cld
adc
lahf
jl
adc
mov
stos
js
xchg
pop
jge
add
lret
addr16
and
out
adc
inc
inc
pop
pusha
pop
sbb
jo
dec
popf
sub
negb
mov
push
inc
fidivrl
sub
pop
mov
inc
aaa
decb
jle
xor
pop
mov
das
ljmp
pushf
pusha
push
test
xchg
sub
mov
add
dec
push
mov
cmp
mov
cld
fmuls
and
mov
lret
fdivrs
call
out
jl
fistpll
inc
pop
xchg
iret
pop
pop
pop
jmp
inc
and
mov
lcall
adc
fistps
lahf
arpl
loopne
ficompl
push
loop
ret
imul
cmp
pop
cmp
pop
push
pusha
add
lock
sbbl
and
mov
xchg
fisttps
add
jb
dec
sahf
dec
jecxz
rcrb
push
call
sti
or
js
test
loopne
add
jg
iret
dec
inc
fwait
mov
das
inc
arpl
inc
inc
cld
sahf
pop
mov
cmp
dec
loopne
lds
test
ret
jle
pop
and
and
inc
aas
jbe
sbb
jnp
pop
int3
ss
mov
mov
push
push
mov
rol
pop
dec
or
fimull
pop
cmp
repz
imul
jl
pop
sbbb
sbbb
mov
cmp
pop
iret
push
jae
pop
rclb
sbb
cmp
and
pop
and
mov
pop
cld
cmp
pop
sahf
pop
in
dec
pop
pop
cli
adc
cmp
add
lcall
xchg
mov
out
cmp
add
pop
pop
repnz
lahf
cmp
fwait
lea
outsl
jl
jnp
jle
cli
mov
dec
mov
jl
ds
jge
sti
iret
pop
sbbb
mov
pusha
jo
into
push
sahf
sbb
jg
clc
cmp
pop
mov
push
xchg
mov
sahf
movsl
cmp
mov
rcrl
pop
mov
push
mov
or
mov
cld
popa
pusha
inc
inc
in
stc
jl
popa
dec
jne
lds
sub
dec
fidivrl
out
pop
sub
mov
adc
sub
pop
addb
sbb
sub
fwait
and
add
and
sub
sub
and
add
sahf
inc
mov
mov
fdivr
lcall
xor
jg
mov
add
cmp
loop
fwait
dec
pop
std
dec
cmp
mov
stos
mov
pusha
cmp
or
pop
rcrb
push
jge
xchg
mov
insl
adc
mov
test
jle
jp
pop
jge
out
mov
pusha
lret
cmp
mov
jg
fidivrl
or
aad
popa
jp
fistpl
mov
pushf
jge
jle
mov
lcall
cmp
loopne
lahf
sarl
pushf
je
push
sbb
push
sbb
stos
in
mov
addl
cwtl
mov
stc
pop
fisubrs
adc
je
call
fdivr
rolb
pop
in
clc
mov
das
orb
sbb
sti
in
ds
add
add
fcoml
or
push
mov
xchg
pop
fnstsw
pop
and
pushf
jle
inc
mov
push
cmp
lds
xchg
jnp
loopne
in
mov
jmp
dec
push
mov
pop
jge
push
fildl
pop
adcb
or
stc
xchg
je
aas
xchg
push
js
cmp
fsts
push
cmp
ror
pop
pop
sbb
mov
cmp
pushf
pop
fisttpll
or
jo
mov
icebp
idivl
aam
fwait
cmpsb
enter
shlb
sarl
int3
jge
push
or
xchg
loopne
and
push
or
shl
clc
xchg
and
lods
loopne
jae
cld
add
fbstp
and
pop
pop
jl
jnp,pt
pop
arpl
es
xlat
insb
xor
clc
xchg
mov
mov
cmp
xchg
shl
mov
mov
inc
mov
sub
xor
sbb
fildl
pop
lahf
pop
mov
dec
int
mov
gs
mov
pop
sbb
loopne
xchg
cmp
clc
mov
cmp
dec
mov
mov
mov
mov
cmp
lret
scas
add
mov
int3
dec
push
sbb
jle
filds
cmp
imul
bound
fdivrl
fwait
jno
scas
data16
int
sahf
js
jne
sti
sahf
cmpsl
iret
loop
xchg
aas
cwtl
fdivr
dec
jl
sub
xchg
pop
sbb
fstpt
clc
push
testb
jne
lds
jb
mov
hlt
pop
cli
pop
ss
pop
cmp
cmp
pop
push
mov
pop
cld
pop
test
fdivl
cltd
sbb
jge
push
sbbb
jo
pop
xor
cmp
popa
mov
cmp
ds
clc
inc
inc
pop
inc
jl
cmp
cmp
fsts
cmp
pop
cli
pushf
pop
aas
jmp
cli
jno
sti
loopne
ds
push
pop
pop
sub
push
ficomps
mov
jp
filds
lea
inc
jle
cmp
lcall
pop
rclb
pop
push
push
jg
cld
fimuls
jnp
mov
push
jg
xor
leave
mov
cwtl
cmp
or
sti
pop
dec
xor
lock
and
pop
lds
dec
pop
mov
fistpl
ds
sbb
and
mov
adc
jnp
pop
adc
mov
sbb
outsb
and
scas
imul
je
lahf
mov
cld
jl
mov
inc
out
rcr
mov
mov
andb
fdivrs
ret
mov
jle
out
mov
sbb
cwtl
mov
sbb
lcall
js
inc
cmp
jle
jl
in
pop
pop
pop
jp
arpl
call
dec
sbb
add
arpl
adc
sbb
je
pop
mov
lahf
dec
jo
sbb
pop
ret
cld
nop
mov
and
fwait
xchg
cld
shll
pop
inc
pop
fiaddl
test
fwait
cld
int3
mov
inc
mov
pop
adc
sbb
lret
pusha
jb
jg
cmp
loopne
pop
sti
aaa
pop
shr
js
popa
sar
dec
cmp
sbbl
mov
clc
add
jae
pushf
mov
mov
mov
jl
ds
xchg
cmpb
cmp
adc
fcomps
dec
mov
scas
adc
add
jmp
repz
pop
fneni(8087
jnp
test
lahf
js
jns
mov
cmp
xor
lahf
pushf
cmp
std
call
pusha
in
add
js
pop
fistl
insl
cmp
inc
xor
mov
cld
adc
pop
and
lahf
and
sub
movsl
fstl
xchg
cmp
das
mov
sbb
sub
sbb
fistps
fstl
xorb
lcall
inc
inc
lahf
cmp
fiaddl
jl
push
pusha
pop
sti
pop
add
incb
mov
sar
mov
inc
mov
arpl
mov
xor
push
sbb
inc
mov
cmp
jl
aas
loope
cmp
test
or
loopne
fdivl
leave
pop
addl
pusha
cwtl
popf
push
pop
mov
lcall
inc
cmp
sub
push
jo
pop
or
sbb
jp
jp
mov
and
sti
pop
clc
cmpsb
push
pop
cmp
push
lcall
negl
mov
pop
leave
aaa
pop
outsl
sbb
aas
cmpsb
mov
mov
and
enter
js
data16
repnz
inc
orb
fwait
jl
insl
mov
jb
cwtl
sbb
inc
jne
cmp
pop
jb
and
xchg
pop
loopne
adc
dec
dec
adc
push
sahf
inc
sub
and
jmp
lahf
repnz
add
jge
clc
cmpl
xchg
dec
fistl
mov
sub
cmp
sbb
cmp
xchg
jecxz
dec
cmpb
into
pop
sub
push
jl
inc
pop
xor
pusha
dec
lret
pushf
lahf
js
jp
push
push
stc
jo
push
lret
sbb
dec
xor
mov
or
and
fdivr
mov
mov
idivb
and
sahf
dec
aaa
sbb
movd
cld
sarb
orb
cmc
cmp
dec
and
cwtl
scas
cmp
cmp
into
cld
idivb
add
or
aad
adc
adc
in
rclb
cwtl
push
jnp
into
dec
cmp
daa
insl
dec
insl
aas
adc
sbb
inc
mov
jl
jge
std
mov
fcmovnu
mov
adc
in
lds
jb
mov
fimull
aad
ljmp
mov
sbb
andl
cmp
pop
fdivrl
lds
jo
mov
pushf
push
sbb
popa
xchg
add
shl
or
adc
jl
adc
xor
mov
cmc
and
into
jle
push
pusha
xchg
jp
or
cmc
jle
sub
cmp
fwait
push
mov
cmp
subb
cwtl
ds
cld
iret
pop
in
push
xchg
jp
add
movsbl
cmp
arpl
dec
ja
push
pushf
addb
ret
or
lds
push
and
xchg
push
bound
and
pop
js
sbb
jne
ds
mov
decb
and
and
cmp
mov
mov
push
inc
xchg
fwait
mov
cmpsb
lcall
lds
mov
jle
cwtl
dec
and
inc
or
je
cmc
js
jg
cmp
xor
pop
fdivrl
sti
mov
in
aam
sbb
pop
cmp
sbbb
pop
in
popa
pop
jle
stos
repnz
sbbb
in
jecxz
lds
sub
and
cmp
sub
mov
loopne
mov
cli
lret
mov
add
hlt
add
cld
rolb
sbb
or
pop
ficoml
cmc
cld
sar
hlt
mov
mov
mov
cmp
inc
push
inc
lcall
jns
sbb
jae
cmp
faddl
adc
pop
pop
decl
pop
cmp
jge
aas
pusha
mov
lds
mov
sub
pop
add
lock
pop
ds
jge
push
and
jg
fidivrs
fdivrs
sbb
cwtl
mov
fistpl
pusha
insl
ret
or
in
sahf
dec
int3
pop
jg
in
fbld
and
add
and
jle
push
pop
faddp
jbe
sub
int
decb
inc
insl
mov
mov
loopne
fwait
adc
sbb
fisubl
jo
pop
sbb
bound
jg
cmc
inc
inc
cmp
sbbb
jle
inc
imul
aas
sahf
dec
mov
cmp
cmp
jae
mov
xchg
sbb
fistpll
dec
mov
inc
cmp
mov
aaa
jl
pop
rcr
pop
fwait
popa
mov
sbbl
pushf
loope
cmp
sub
mov
mov
mov
lds
aas
xor
subl
cmp
dec
cmp
cmp
cmp
fstps
xor
shlb
mov
pop
lret
cmp
adc
jle
sbb
fistps
xor
mov
mov
jle
cld
cmp
jl
aas
jge
pusha
push
adc
jp
cmp
adc
pop
or
les
mov
push
jl
xchg
imull
sbb
lahf
inc
mov
mov
adc
jbe
lahf
cld
filds
pop
fsts
sub
into
loopne
push
mov
adc
push
pop
cld
cwtl
inc
fisttpl
js
sub
mov
sarb
push
mov
mov
jge
pop
and
mov
mov
jnp
fwait
pop
je
mov
mov
jle
push
jge
pop
add
fidivrs
pop
mov
pop
loopne
lea
inc
jbe
in
jae
and
xchg
jge
jg
inc
mov
fwait
cltd
cmp
les
push
pop
push
mov
mov
xor
pop
sub
flds
mov
int3
in
sbb
dec
cmp
mov
jnp
xchg
cwtl
and
cwtl
sbb
mov
cmp
jmp
cwtl
push
pop
fdivrs
bound
popa
sbb
cmc
cltd
arpl
pop
pop
js
sahf
popf
pop
iret
adc
mov
push
sbb
push
add
loopne
adc
mov
lahf
cmp
mov
add
ss
xorb
cwtl
in
adc
mov
stos
sarb
push
sahf
test
in
pop
test
mov
pushl
push
sbb
fcmovu
ds
cli
fstps
adc
js
int3
orl
sbb
mov
pop
fwait
rclb
push
xchg
popa
ret
setp
push
mov
cmp
test
sub
pop
xor
mov
arpl
sbb
fsubrs
cmp
inc
clc
das
ss
cmp
fwait
sbb
cmp
ss
mov
pop
xor
inc
fimuls
adc
mov
adc
std
push
dec
push
les
mov
addl
jl
shl
cld
pop
hlt
mov
cmp
mov
pop
fidivrs
fdivrs
leave
shl
mov
hlt
add
adc
mov
repnz
lds
xchg
movsb
pop
arpl
mov
mov
cmp
cmp
sbb
repnz
mov
sub
andb
fstpt
idivb
lock
aas
lds
push
add
jp
imul
in
pop
dec
jle
ja
mov
push
jnp
and
inc
xchg
inc
xchg
mov
xor
pop
mov
mov
rol
push
sub
fisttpl
mov
sub
pop
inc
cltd
add
push
and
xchg
pop
clc
xor
addps
cmpb
fbld
pop
sbb
outsl
sbb
bound
clc
add
sbb
push
add
mov
pop
pop
cmp
dec
outsl
push
fmuls
mov
push
inc
pop
sahf
int
gs
mov
stos
nop
pop
jo
and
push
adc
scas
jno
ficoml
rorb
add
cld
fstpt
pop
mov
addl
std
lds
sarb
lret
loop
push
inc
mov
jge
cmp
mov
in
popa
lock
icebp
jp
ja
loope
cld
xchg
xchg
pop
cmp
fadds
xchg
mov
call
xor
ficomps
fidivl
cld
pop
popa
sbb
jecxz
leave
cmp
aas
pop
loopne
sbb
inc
call
fwait
dec
insl
and
xchg
pop
xchg
sbb
sarb
xchg
sbb
fstl
sahf
sbb
jge
in
lods
mov
mov
jnp
rclb
fmull
jp
mov
sbb
clc
pop
mov
rclb
mov
andl
js
jmpw
adc
pusha
mov
jle
cli
aad
cmp
pop
cli
sarb
fimuls
shr
add
mov
inc
hlt
mov
cwtl
cmpb
cmpsl
in
dec
push
push
add
sub
inc
cmp
mov
xor
sbb
push
cmp
mov
pusha
inc
or
lahf
rcrb
jbe
sahf
and
je
ficoml
aad
pop
insl
push
in
sbb
js
arpl
or
sahf
test
mov
and
fwait
outsl
push
out
rol
shrb
out
inc
dec
pop
mov
add
pop
ja
inc
sbb
mov
movsb
cmp
leave
mov
mov
fs
lahf
jo
dec
add
inc
lods
fdivrl
jnp
in
mov
or
mov
pop
decl
mov
rolb
mov
cmp
sbb
mov
jbe
loopne
cwtl
js
aas
sahf
int
fdivrs
cmp
cmp
mov
inc
mov
mov
inc
inc
cmp
dec
sub
sbb
dec
jg
into
jnp
pop
pop
negl
push
and
cld
pusha
lcall
sahf
mov
scas
mov
leave
arpl
xchg
and
fadd
push
mov
dec
sti
clc
pop
rcrl
in
or
test
mov
clc
sub
mov
mov
pop
inc
ljmp
fwait
pushf
jge
xor
test
xor
xchg
inc
shlb
sbb
and
aad
aas
bound
fistpl
push
mov
cmp
mov
pop
pop
push
lret
mov
idivl
cmp
cmp
xchg
push
push
aas
cmpl
cwtl
mov
jb
test
dec
mov
mov
inc
enter
or
repz
cmp
pop
fsubrs
push
pop
ja
nop
cmp
mov
push
mov
xlat
les
jnp
push
add
jo
in
popa
sbb
call
daa
xchg
mov
loopne
mov
fidivrs
cmp
adc
decl
cmp
inc
mov
lcall
cmp
in
das
rclb
mov
das
dec
daa
add
jb
pop
cmp
rolb
sub
pop
std
sbb
pop
push
add
xchg
jmp
imul
lret
test
ja
aas
mov
les
xchg
sahf
dec
mov
pushf
clc
mov
inc
mov
pusha
cmp
push
mov
loop
subb
mov
idiv
jnp
xchg
cli
xchg
or
push
fimuls
cmp
push
lea
adc
js
outsb
in
pop
testl
cpuid
pop
mov
sbb
aad
sbb
or
sbb
sbb
sbb
mov
mov
sbb
pop
sbb
cmp
mov
and
adc
and
sub
fdivrp
lret
and
and
or
cmp
push
rcrb
adc
jnp
push
xchg
enter
cmp
mov
mov
sahf
minps
int
push
neg
push
cli
mov
lret
xor
xchg
in
sarb
xor
sbb
pop
pop
in
cmc
xchg
jl
lahf
sbb
sbb
sbb
je
fwait
inc
dec
negb
lret
arpl
or
pop
jl
insb
pop
xor
fistpll
xchg
incl
dec
or
clc
ficomps
mov
push
out
pop
xchg
bound
mov
push
pop
pop
pop
lcall
adc
sub
adc
xorl
stos
cwtl
lahf
cmp
ret
push
popa
mov
or
aad
lcall
add
inc
popa
cmp
adc
inc
or
fdivrp
cld
sahf
clc
sti
jnp
aam
scas
jb
mov
lods
add
sub
lds
jp
jle
or
in
or
imul
mov
jnp
pusha
imul
mov
shrb
mov
mov
aaa
pop
ret
hlt
lahf
pop
cmp
pusha
and
mov
push
ja
mov
push
and
sbb
pop
and
cmp
pop
js
or
sbb
mov
add
bnd
xor
sub
pop
enter
cmp
pushf
dec
pop
js
cmpl
push
clc
lahf
or
pop
in
jl
lds
fsubl
loopne
sbb
clc
mov
cld
into
mov
inc
repz
push
cmp
cmp
scas
mov
cmp
push
inc
dec
testl
js
push
test
ficomps
add
jae
pop
cld
jge
cmc
mov
inc
lock
shlb
arpl
jg
mov
cmp
pop
mov
ds
mov
mov
cmp
in
dec
xchg
pop
mov
loop
pop
pop
mov
add
vdivss
jae
mov
rcll
idivl
loope
push
stc
xchg
mov
aas
ljmp
mov
outsb
push
loopne
jbe
inc
out
mov
dec
push
mov
inc
insl
flds
sbb
mov
pop
int3
xchg
fdivrl
ret
ret
fidivs
mov
jl
pop
cmp
adc
dec
push
mov
add
aas
loopne
mov
push
cld
lcall
cmp
fistps
sub
pop
jg
rcrl
adc
mov
adc
cmp
jp
push
cmp
fisubs
inc
add
xchg
rclb
hlt
lret
sub
pushf
mov
fwait
jnp
std
fadds
dec
nop
cwtl
fistps
jle
cmp
push
sbb
mov
dec
idivl
pop
xor
ret
pop
dec
cmp
cmp
aas
inc
pop
push
pushf
cld
pop
inc
lea
mov
loope
mov
mov
cld
dec
pushf
cmp
xchg
xchg
fcom
pop
push
cmp
jl
in
jmp
rcrb
mov
inc
imul
dec
mov
int3
pop
jg
jle
ret
jp
or
pop
subl
pop
fidivrs
je
aad
popa
popa
sbb
mov
enter
fistpll
inc
mov
sbb
push
fdivr
cmp
mov
test
shl
add
lret
cwtl
loop
mov
inc
xlat
inc
loope
inc
or
dec
test
push
test
repz
adc
mov
aaa
pop
loope
mov
mov
cwtl
and
push
adc
dec
cld
fistps
mov
fcoml
cli
lahf
loopne
aas
mov
cmp
cmp
pop
dec
loop
fcompl
decb
ret
cmp
outsb
aad
std
pop
jl
mov
xchg
jp
fwait
jp
sarb
mov
dec
xchg
jg
pop
shlb
jl
cmp
mov
sahf
jge
inc
lcall
jnp
sti
xchg
popa
filds
pushf
mov
jnp
stos
in
mov
loopne
hlt
jle
add
roll
mov
incl
mov
gs
pop
xor
mov
lcall
pop
out
or
sbb
and
sbb
add
dec
rolb
inc
cmp
iret
cmpl
cmp
lds
xor
adc
neg
sbb
inc
add
pop
js
cmp
dec
je
cmp
jle
inc
pop
mov
inc
cld
lret
js
int3
xchg
or
repz
add
hlt
push
cmp
jnp
insb
cmp
adcb
dec
enter
xor
pop
cwtl
mov
xchg
xor
test
mov
jge
xchg
and
hlt
pop
lcall
inc
js
clc
dec
test
mov
mov
jle
stos
mov
inc
loop
js
pop
mov
cwtl
aad
mov
lock
mov
outsb
pop
mov
xor
pop
loop
pop
cli
out
fcmove
and
dec
lock
loop
sub
sub
pop
xchg
stos
iret
mov
imul
test
ficomps
inc
adc
lcall
cmp
pop
cld
mov
or
pop
pop
cmp
mov
ret
imul
cmp
adc
icebp
icebp
aad
cli
add
jl
pop
cmp
fistps
scas
push
sti
cld
into
add
fmul
inc
ret
pop
ja
jg
sbb
fstps
inc
pop
imul
loope
inc
sbb
add
or
adc
mov
stos
push
pop
js
mov
loopne
xor
pop
sahf
in
mov
or
int3
faddl
jnp
push
clc
inc
shlb
pop
pop
push
cmp
mov
fwait
push
mov
repz
rcrl
aas
fdivr
inc
lret
add
lds
inc
lret
sahf
jg
jnp
loopne
fcoms
adc
lods
xchg
and
pextrw
push
daa
cli
mov
pop
mov
pop
jnp
lahf
jae
repz
mov
cmp
dec
xorb
fistpl
fistps
mov
jl
pushf
inc
pop
sbb
adc
push
fdivl
ficoms
lock
dec
cmpsl
mov
mov
pop
lock
loopne
ds
cmc
in
and
inc
and
inc
mov
lahf
pop
jne
js
or
cmp
idivb
cmc
mov
pop
xor
test
mov
mov
dec
sarb
cmp
cmp
pushf
dec
xchg
dec
imull
sbb
cli
jl
push
mov
push
jle
clc
push
fisttpl
pop
cld
insl
pop
loop
mov
mov
jp
push
cmp
sahf
pop
inc
aam
sbb
pop
jp
mov
jg
sahf
and
sbb
and
pop
push
scas
fidivrs
cli
jp
jp
int
xchg
pop
cmp
fcoms
xchg
sarl
and
and
pop
int
xlat
or
pop
inc
jb
pushf
cmp
sub
mov
fcomp
sub
pop
mov
pop
cmp
and
mov
cli
ljmp
cwtl
mov
pop
xchg
cmp
pop
icebp
cmp
pusha
int3
sbb
cmp
inc
fistpll
cmp
or
inc
pop
bound
add
je
and
ficoms
jge
xorb
mov
lret
jne
aas
stos
cmp
ficomps
test
lret
lret
scas
mov
and
pusha
mov
add
ss
push
mov
jl
testl
js
mov
or
xchg
cmp
inc
mov
inc
mov
fwait
sbb
mov
mov
pop
mov
mov
xor
mov
stc
idivb
push
js
cld
adc
jbe
sahf
push
loopne
cmp
or
out
inc
push
mov
in
aaa
in
mov
les
mov
repnz
cwtl
mov
inc
iret
lock
push
or
sub
sbb
lret
das
xchg
mov
mov
or
cmp
sti
mov
in
xlat
cmp
shlb
cld
fwait
cli
test
xchg
jle
ret
mov
outsb
mov
push
cmp
flds
popa
fcomps
sarb
mov
daa
js
pushf
fidivrs
mov
lods
pop
mov
les
std
push
mov
jne
bound
in
inc
fldl
cmc
pop
sbb
and
fdivrs
sbb
pop
iret
sbb
rolb
xor
sbb
xor
icebp
push
inc
fstpt
cli
inc
hlt
pop
cmp
cmpb
push
mov
and
xchg
fists
jecxz
xchg
sub
inc
stc
inc
cmp
lcall
mov
mov
jle
inc
pop
popa
jp
cwtl
adc
jnp
xchg
ja
xor
sti
push
jle
aas
inc
mov
jb
popf
xchg
addb
leave
cmp
sti
popa
inc
stos
loopne
nop
inc
mov
adc
popa
mov
mov
mov
jp
pop
stc
into
xchg
pop
add
pop
jae,pt
aaa
sahf
popa
test
sbb
dec
aaa
or
cmp
sti
mov
insl
jb
mov
fmuls
js
cwtl
sbb
jnp
jb
pop
mov
sbbl
cmp
js
pop
cmpl
jl
xor
dec
sub
popf
mov
mov
inc
fs
jl
repz
inc
pop
sti
lahf
mov
iret
push
fidivs
pop
rolb
sbb
cwtl
int
dec
clc
pop
jl
cmp
lahf
xchg
mov
sahf
jg
mov
jle
push
cmpl
cmpsb
jnp
sbb
popf
and
test
inc
xchg
fildl
in
stc
jnp,pt
and
jg
adc
fwait
cmp
mov
mov
scas
out
stc
pop
cwtl
into
pop
nop
push
pop
jbe
ret
jl
dec
inc
jns
fbld
pop
add
xchg
cmp
mov
inc
jge
push
js
sbb
nop
xchg
movsl
hlt
js
push
repz
sahf
outsl
cmp
pop
mov
and
adc
fiaddl
pop
sahf
push
fwait
rol
rorb
rcrb
mov
stc
mov
add
jnp
and
pop
cmp
fcmovb
mov
loopne
and
add
ret
add
pop
rcr
jnp
leave
call
cmp
sti
xor
cmp
push
cmp
inc
sahf
cwtl
cld
push
lahf
rol
or
fdivrs
enter
pop
adcl
icebp
and
or
mov
jnp
xlat
dec
push
jp
xchg
clc
inc
test
ljmp
addr16
sbbb
jl
lods
test
loopne
adc
rcrb
dec
iret
repz
fcomps
adc
js
pop
and
xchg
cmp
xchg
dec
dec
sarl
mov
pop
aas
mov
pop
mov
pop
jle
cmp
ret
xchg
andl
in
js
cmpsb
clc
xorb
mov
jns
add
jnp
mov
xor
sbb
sahf
sbb
fcmovbe
mov
sub
push
ljmp
les
jl
pop
lea
jg
xlat
cmp
repnz
mov
fdivs
sbbl
fisttpl
addb
sbb
inc
xlat
cmpsb
mov
cld
insl
mov
sub
cli
cmp
pop
cmp
jb
sbb
cmp
cmp
ds
pop
dec
push
sbb
push
cmpsl
and
enter
and
pop
pushl
cmp
or
fwait
xor
xchg
inc
adc
fs
rclw
pop
xor
out
inc
idivl
cld
cmp
std
fbstp
lcall
popa
jmp
add
xchg
cmp
mov
and
push
fistpll
cld
jg
sub
pop
lods
sti
adcl
mov
pop
clc
pop
movsb
pop
jg
arpl
jp
add
jb
cmp
cmp
xor
jecxz
cltd
sbb
push
mov
adc
dec
pop
cltd
cli
cmp
mov
inc
cmp
pop
je
outsb
stc
sub
inc
jge
inc
mov
xchg
mov
sbb
cmc
sbb
sub
ficomps
lahf
mov
js
decb
xchg
jg
push
xor
sbb
fildl
jb
mov
mov
hlt
cmp
dec
lcall
out
cld
out
sahf
jp
mov
outsl
mov
pop
mov
push
mov
mov
xchg
fcompl
fbstp
ds
fstl
add
pop
mov
and
sbb
data16
js
mov
sbb
fcomp
xchg
loop
sbb
jne
pop
out
lret
pop
fsubs
xchg
cld
and
lret
sbb
js
orb
fdivrl
sbb
jge
jb
cmp
pop
jle
jle
jle
and
rcrb
mov
push
sahf
pop
dec
pop
sbb
movb
and
xchg
adc
jg
xchg
cmp
inc
stc
add
pop
pop
pusha
adc
mov
jl
fildll
lods
cli
xor
cwtl
rclb
cmp
cmp
jnp
inc
sti
mov
loopne
mov
sbb
mov
pusha
jl
insl
fistps
cld
lahf
negb
aaa
imul
pushf
dec
in
out
ss
inc
mov
sahf
jg
mov
ss
cmp
push
mov
jl
andb
das
inc
pop
sbb
inc
fidivrl
mov
lcall
adc
and
dec
js
pop
cmp
jbe
mov
xor
in
stos
mov
sbb
popa
leave
scas
pop
xchg
aas
cmp
adc
mov
pop
cld
pop
jge
outsb
and
inc
cmp
push
xor
xor
lcall
pop
cmp
cmp
pop
inc
loopne
ficomps
push
cmpb
cmp
push
mov
pop
ret
sahf
dec
cwtl
pop
idivb
gs
addb
dec
pop
and
dec
shlb
scas
cmp
push
sahf
cmp
pushf
sbb
sahf
outsl
std
mov
inc
sbb
mov
xor
and
push
pop
push
lret
popa
pop
negb
decb
push
dec
sbb
fsts
and
pushf
mov
jnp
push
insl
cwtl
jp
cmp
pop
scas
cmp
and
mov
sbb
push
jg
mov
lcall
cmp
pop
inc
mov
cld
sbb
xchg
popa
inc
pop
pop
mov
lahf
fistpll
mov
xorb
inc
lcall
inc
and
mov
insl
clc
jg
pop
sarb
xchg
mov
jns
dec
out
mov
iret
pop
clc
xchg
cli
inc
push
lock
jb
add
push
ficomps
inc
lock
js
inc
cmp
cmp
fwait
mov
ljmp
add
cmpsb
in
push
jmp
and
pop
fmulp
subl
inc
cmp
sub
lahf
mov
mov
leave
xor
rorb
cmp
inc
jp
dec
xchg
cmp
mov
je
ficoml
cmp
jnp
js
pop
cmpl
mov
bound
mov
cli
sbb
fdivrs
inc
jnp
jno
pusha
outsl
iret
fwait
cli
mov
inc
shll
nop
mov
cltd
cmp
inc
dec
repnz
pop
mov
push
mov
dec
pop
sbb
fstpt
scas
pop
ja
mov
cmp
pop
sti
pop
ss
inc
out
scas
leave
cmp
stos
sbb
js
jge
dec
cwtl
sahf
nop/reserved
test
xor
inc
inc
das
mov
sbb
cltd
fwait
scas
mov
sahf
cwtl
push
mov
js
ss
lods
imulb
sbb
fwait
cwtl
cmp
clc
pop
jno
inc
aaa
pop
or
sbb
push
adc
inc
repnz
sti
stc
lock
lds
jp
pusha
fstpt
pop
inc
inc
push
cmp
pop
mov
jp
mov
cmp
push
pusha
pop
xchg
xchg
sbb
std
mov
sbb
mov
xchg
add
pop
mov
leave
fstpl
inc
pop
pop
mov
adcb
mov
sub
fwait
xchg
jb
xchg
cwtl
pop
clc
cmp
push
jl
jge
pop
pushf
mov
cli
js
loope
pop
fstps
sub
ljmp
inc
pop
mov
mov
jns
outsl
jl
inc
cmp
clc
in
scas
lret
mov
dec
test
fidivrl
mov
repz
mov
in
out
je
xchg
aad
push
fdivs
ljmp
cmpb
shr
out
jnp
fstpt
js
lahf
pop
or
push
repz
pop
loopne
xchg
out
pop
scas
aas
cmp
cmp
lock
jecxz
mov
sbb
pop
inc
dec
adc
pop
loope
push
and
jle
cmp
sbb
pop
pop
mov
mov
lcall
and
adc
pop
movsl
lock
push
dec
lds
lds
fistl
pushf
xchg
aas
mov
pop
std
pusha
adc
stos
cmp
dec
xchg
pop
js
mov
sbb
and
cmp
mov
inc
sbb
jo
pop
stos
or
pusha
sarb
call
cmp
pop
imul
mov
mov
lcall
int
pop
outsl
pop
add
inc
ficomps
rcl
imul
adc
je
add
pushf
mov
int
mov
sahf
sub
daa
push
sarb
add
insb
je
pop
mov
cld
loopne
or
lcall
sbb
mov
jp
and
mov
mov
inc
cmp
sbb
fwait
sbb
jl
jb
js
cmpl
rcrb
fisubl
leave
pop
and
and
popa
pusha
cmp
dec
pop
ficomps
pop
add
aaa
pop
cmovs
mov
inc
fcomps
loopne
cwtl
cmp
pop
push
jge
insl
clc
jl
dec
push
lcall
inc
test
or
mov
pop
xchg
fisttpl
in
lds
mov
pop
pop
fdivrl
fwait
add
cwtl
inc
cmp
repnz
sti
pop
clc
dec
xor
pusha
add
dec
insl
adc
fsubs
xchg
inc
daa
popa
cmp
xchg
jl
cli
pop
js
jno
loopne
inc
sbb
lods
pusha
adc
and
loopne
mov
clc
cmp
lret
movsb
arpl
pop
jnp
pop
and
sbb
inc
ljmp
xchg
cwtl
lcall
mov
mov
in
jp
fbstp
or
lods
neg
outsb
repz
shlb
pop
xchg
jle
mov
cli
mov
lds
inc
pop
xchg
mov
push
jl
lcall
fisubrs
or
je
sbb
lcall
sbb
cmc
das
mov
rcrb
fstpt
dec
in
cmp
jnp
pop
and
js
pop
cmp
jle
dec
rorb
cmp
sbb
scas
jno
loop
shrb
adcb
cmp
sahf
ficoml
pop
mov
pushf
mov
pop
pusha
mov
sbb
push
adc
fwait
jo
lahf
cmp
sti
mov
and
and
adc
cmp
cmc
inc
sub
adc
xchg
pop
xor
aas
cmpb
lds
jp
je
iret
and
mov
pop
cwtl
xchg
out
fdivrp
js
push
jl
out
or
xor
sti
mov
scas
xor
lahf
ljmp
mov
adc
loopne
add
cmpsl
mov
sbb
arpl
nop
push
pop
pop
inc
aas
jae
push
aad
pop
fadd
and
push
fs
dec
icebp
jle
cmpsl
shrb
in
jg
jb
mov
xor
lcall
pop
mov
sahf
test
adc
cmpb
int
mov
jo
add
ds
pop
mov
pop
mov
pop
add
and
mov
cwtl
cld
dec
and
sbbb
mov
cmp
xchg
pop
and
and
dec
mov
cmp
add
aas
pusha
popa
jg
inc
cmp
cmpb
rclb
cld
sbb
movsb
xchg
push
ljmp
movsl
inc
xlat
pop
adc
push
add
and
test
or
lret
jb
sbb
push
pushf
in
lds
cmp
dec
js
fistps
cmp
sti
mov
popa
sbb
cmp
cmp
dec
dec
cmp
int3
xor
lahf
out
mov
inc
sahf
sbb
mov
mov
xorl
cmp
daa
lds
fisubs
jg
mov
jno
sbb
popa
pop
inc
inc
cvtdq2ps
cmp
mov
inc
inc
pop
mov
pop
cmp
fwait
sti
and
push
mov
sti
cmp
lock
mov
popa
arpl
adc
das
hlt
mov
push
push
cmp
popa
xorb
cmc
std
in
push
std
out
sbb
cmp
cmc
aas
xor
negb
and
mov
jnp
inc
les
cwtl
fdivl
pop
pushf
sbb
testb
xlat
jp
push
lret
lods
dec
xor
xchg
sarb
cmp
aas
cmp
mov
lret
cmp
popa
inc
pop
pop
push
cmp
mov
iret
mov
pop
xchg
fstpt
cmpsl
ficoml
and
fdivr
mov
imul
fcmovnbe
xchg
lds
cmp
popa
add
pusha
idivb
cmp
xor
pop
xchg
pop
mov
fimuls
mov
dec
ret
popa
fisttps
xor
shlb
pop
mov
repz
stc
arpl
pusha
jl
inc
loop
icebp
dec
add
sbb
and
orl
je
adc
aad
pop
push
out
sub
jge
xchg
mov
xlat
push
sti
sbb
pusha
sbb
inc
jge
cs
xor
jp
cmc
mov
aaa
ds
loopne
mov
pop
nop
xchg
arpl
imulb
lock
lahf
jno
scas
loopne
ds
cwtl
fimull
inc
mov
push
cmp
mov
mov
fsubs
push
inc
pop
pop
fbld
add
mov
popa
and
enter
push
outsb
inc
faddp
cmpb
cmp
popa
cmp
mov
jns
aad
out
pop
js
sub
jle
lds
jle
push
cmpsb
fisubl
pop
ds
cmp
clc
dec
fidivrl
test
in
cwtl
sti
ret
loop
xor
jle
sbb
loopne
push
push
mov
cwtl
ficoml
pop
mov
push
movsb
pop
cmp
call
dec
outsl
and
pusha
sub
dec
cmp
cmp
sarb
sahf
jno
cs
stos
ret
or
cmp
cmp
pushf
aad
cmp
out
ss
jge
pop
jle
fists
cld
jg
inc
jnp
jp
inc
adc
mov
fdivrl
popa
mov
rcrl
cmp
jp
pusha
hlt
clc
push
jne
pop
mov
jmp
lock
imul
add
inc
loope
jg
sti
pushf
fidivl
pop
sbb
nop
iret
mov
jnp
cli
push
fidivrl
rcrb
cmp
jae
cmovs
pop
sub
stc
aas
fsubs
lcall
add
push
aas
mov
mov
cmp
cli
rclb
lahf
ret
or
js
lcall
popa
push
jp
jnp
cmp
test
mov
cmp
pop
dec
sub
inc
jge
ret
in
pop
cmp
outsb
jge
mov
jmp
mov
sahf
mov
pushf
mov
pop
jge
loope
sarb
mov
in
push
adc
cltd
addr16
xchg
lret
inc
pop
or
subb
fwait
sbb
push
loop
cmp
mov
pop
push
cmp
cmp
jb
jge
fsubp
dec
fcompl
mov
fcmovnb
clc
add
mov
loop
test
testl
inc
inc
xlat
lcall
les
dec
cmpb
pop
mov
cmp
faddl
add
add
loopne
leave
push
adc
cs
aas
or
sub
push
inc
push
mov
lcall
ds
mov
cmp
xchg
fwait
sti
lcall
adc
clc
fsubrl
aaa
xor
jo
mov
cltd
mov
ret
ficoms
pusha
pop
mov
test
ss
mov
cmp
xor
cmp
das
mov
daa
mov
xchg
inc
add
mov
pop
mov
and
xchg
stos
or
pop
cmp
jb
andl
jno
lahf
fwait
sarb
and
adc
idivl
cmp
xorl
pop
into
in
lahf
pop
xor
ss
mov
dec
je
idivl
push
jno
dec
xor
cmp
in
popa
inc
or
jb
sti
add
cmp
in
cmp
sarl
mov
cli
imul
cmp
out
mov
push
cmp
lcall
fistpll
stc
jns
push
fcomps
cmp
jp
pushf
and
cwtl
mov
mov
loope,pt
mov
pop
dec
and
mov
inc
imul
mov
adc
pop
lahf
pop
arpl
push
mov
cmp
xchg
jae
add
std
cmc
sbb
clc
mov
add
push
cmpl
mov
hlt
sbb
popa
or
xor
int
fwait
mulb
aas
or
std
imul
pop
jg
pop
cmp
mov
lahf
fsts
pop
mov
inc
xchg
lret
gs
push
fistl
and
dec
mov
mov
cmp
outsb
pop
fwait
pop
or
pop
xchg
imul
push
mov
mov
lret
adc
hlt
dec
repz
pop
add
fdivl
or
cwtl
sbbl
mov
aas
sbb
jl
pop
idivb
stc
mov
mov
cli
sahf
push
and
jmp
pop
into
loopne
aas
inc
pop
sbb
sbb
ds
pop
pop
jnp
movsb
dec
cmp
outsb
pop
popa
add
push
mov
decl
add
cmp
adc
sbb
sahf
fistpl
add
iret
notb
mov
rcrl
mov
sbb
mov
mov
fsub
dec
lods
sarl
xchg
add
fwait
andb
lcall
in
cltd
adc
jg
pop
sahf
arpl
xor
cmp
dec
cmp
mov
pushf
int
mov
mov
into
adc
sub
and
shlb
add
cmp
cmp
mov
jae
inc
stc
pop
js
jp
push
adc
xlat
or
addr16
fidivrl
adc
dec
cmp
mov
repnz
mov
jge
jno
clc
xor
mov
sbb
sbb
xchg
xor
cld
ficompl
rcll
pop
shrb
mov
sarl
pop
imul
bound
sbb
inc
mov
inc
cmc
ficompl
pop
jo
pop
sbb
ret
push
cmp
sti
pop
lret
hlt
push
repz
insl
fmul
mov
fbld
pop
push
pop
cmp
mov
ds
jge
cwtl
pop
push
adc
push
sar
aad
pop
lcall
mov
sbb
jg
pop
popf
pop
mov
dec
cmc
xchg
sbb
sbb
dec
pop
sbb
pop
popf
xchg
cmp
mov
repnz
cmp
xchg
pop
xor
andb
sub
mov
sar
mov
rol
jp
pop
mov
vpsubw
fmull
rcrb
cmp
inc
cmc
pop
pusha
pop
es
pop
in
pop
or
jno
pop
lahf
jns
inc
add
das
ficomps
dec
jecxz
test
inc
sarl
inc
imul
cld
or
adc
pop
add
mov
pop
inc
sbb
and
push
fadd
sarl
pop
pop
pop
dec
ljmp
cmp
rcr
cmpsl
push
fstps
jbe
dec
and
jp
lcall
inc
and
inc
fwait
cmp
mov
add
sub
fidivrs
lahf
cmp
pop
push
and
dec
pusha
jge
cmp
xchg
popa
fstpt
xor
loop
inc
enter
hlt
inc
xchg
lahf
adc
scas
jo
cmp
lcall
pop
sti
inc
xor
jp
shlb
lds
je
jb
push
pusha
cmp
fistpll
add
fidivrs
mov
fdivrs
sti
or
cld
imul
sahf
dec
jnp
mov
pop
jl
pop
hlt
mov
push
add
pop
pop
inc
xchg
dec
enter
bound
mov
xchg
adc
cld
mov
iret
jl
push
pop
cli
lock
pop
or
pusha
loopne
pop
cwtl
sbb
je
pushf
mov
rorl
mov
jne
jmp
and
jge
in
and
mov
add
pop
inc
and
scas
and
adc
dec
cmp
lods
mov
xchg
mov
mov
adc
lahf
pop
mov
nop
inc
jp
inc
mov
inc
sbbb
push
mov
pop
pop
and
lcall
pop
sbb
jns
pushf
cmp
inc
nop
mov
jl
neg
outsl
js
lret
fcoms
sahf
cmp
mov
test
cmp
mov
or
mov
inc
sti
bound
fcoms
lds
jle
pusha
fimull
mov
iret
js
je
std
xor
into
cmpb
adc
adc
adc
push
loope
xorb
shlb
inc
push
push
decl
pop
btl
sbbb
call
inc
bound
cmp
repz
and
shll
xchg
cmp
ljmp
mov
and
incl
jg
cmp
pop
dec
sub
out
or
lock
popa
lds
push
jge
pop
add
push
pusha
inc
das
and
mov
cld
daa
xchg
cwtl
ret
dec
jl
lcall
cmp
inc
fildll
icebp
aas
sbb
pop
cwtl
in
sbb
pop
out
pusha
js
aam
pop
sbb
lds
pop
sub
cmp
sarl
sub
mov
pop
jmp
loope
out
incb
clc
dec
cmp
stc
fwait
int3
xchg
jnp
mov
cwtl
dec
rcll
faddp
aas
outsb
jge
fldl
jnp
and
outsb
cmpl
push
inc
sbb
cmp
mov
xchg
lahf
cmp
push
push
mov
mov
pushf
cmp
mov
stc
mov
testb
cmp
jg
out
int3
mov
push
push
mov
lret
mov
popa
aas
cli
mov
jns
cmp
ja
mov
cmp
jg
int
inc
sbb
int
cs
sub
aam
sub
rcrb
cmpsl
xchg
sbb
dec
frstor
sbb
mov
sahf
mov
ja
pop
dec
jns
mov
sbb
subl
jge
inc
push
cmp
cmp
sti
test
jl
mov
add
jge
sbb
sub
fsqrt
mov
repz
test
pop
add
mov
xchg
add
inc
push
sti
inc
pushf
fcompl
push
fdivrp
rcll
sbb
aaa
pop
iret
xchg
jae
sbb
loopne
adc
and
pusha
dec
pop
jge
inc
mov
and
aas
pop
pop
dec
lahf
push
jmp
ror
cmp
addr16
shl
cmp
inc
fiadds
addb
push
pop
sub
jge
sbb
lods
pushf
lods
cwtl
test
and
fistps
lea
pushf
inc
mov
sbbl
imul
jb
lcall
pop
inc
int3
mov
cwtl
clc
cld
pusha
push
sbb
pusha
jp
js
fcmove
sbb
add
mov
cmp
cmp
loopne
push
dec
inc
ja
lcall
jno
cmp
jno
push
add
clc
mov
cmc
jle
jl
pop
sbb
jo
or
add
add
fmuls
pop
xor
cmp
loopne
cmp
fwait
incb
test
jnp
pop
cmp
push
pushf
mov
cmc
fidivrs
mov
pushf
jge
inc
test
sti
dec
inc
sbb
jl
sar
mov
mov
loopne
mov
sbb
cmp
cmp
pop
pop
rclb
jle
fiaddl
cwtl
pop
jge
mov
cld
cmp
jl
dec
jge
xor
jle
cmpb
sahf
fwait
adc
pop
cld
cli
cmp
js
mov
inc
dec
cmp
jg
xor
push
adc
add
mov
mov
mov
dec
or
pop
sarl
pop
mov
lcall
popa
sbb
pushf
ficompl
cmp
xchg
inc
pop
inc
mov
vdivss
aad
cli
cmpb
in
fwait
scas
in
in
xor
pop
popa
fbstp
pop
pop
rcrb
mov
clc
sahf
mov
sbb
push
cmp
aas
fcom
pop
fistpl
sub
adc
fsubl
cmp
jl
cld
cwtl
and
push
faddl
jle
repz
loop
jg
inc
idivb
mov
pop
fisubrs
inc
mov
jge
inc
cmc
inc
fstpl
pop
pop
addl
inc
loope
rcrb
cmp
cmpsb
xor
pushf
sahf
mov
out
add
sti
rolb
fidivrl
lea
cmp
aas
sti
mov
adc
mov
pop
jle
test
js
and
stos
dec
sbb
adc
cmp
cmp
mov
mov
adc
sbb
data16
lds
aaa
xchg
pop
sarl
cld
jb
push
jg
fdivrl
loop
pop
ret
dec
cs
push
fdivrl
ja
inc
add
adc
lds
fwait
rcr
cwtl
inc
pop
fdivrl
loopne
jbe
rcrl
xor
inc
inc
cltd
mov
inc
std
cmp
mov
ss
cmp
xchg
sbb
cwtl
push
xor
jl
jge
cmp
jb
pop
pop
dec
xchg
fcomps
sub
cmc
pop
pop
ret
dec
add
mov
int
mov
pop
test
pop
jno
insb
mov
mov
pop
pop
push
or
stc
cmp
pop
test
add
mov
cmp
jbe
jl
jge
out
rorl
popa
pop
fadds
sbb
xor
mov
shll
mov
jg
pop
cmp
dec
pop
sti
add
jl
lcall
scas
jb
aas
pop
sahf
and
inc
sbb
js
lcall
jg
add
pop
aas
inc
lds
jmp
mov
inc
jp
sub
add
cmp
cmp
fstps
mov
add
into
xorl
mov
in
ljmp
pusha
pop
fadds
adc
test
pop
inc
dec
mov
pushl
xchg
aam
cmp
loope
cmp
sti
lahf
cli
mov
test
cmp
push
or
dec
sbb
sbb
push
inc
iret
push
adc
ss
in
and
mov
mov
loopne
pop
loop
xor
lahf
filds
fmull
cmp
xor
sbb
mov
push
sti
mov
mov
int
pop
cs
lds
inc
inc
adc
scas
pop
jmp
cmp
pusha
stos
cmp
fistpll
pusha
clc
mov
inc
lds
rcrb
pop
dec
popf
sbb
rorb
add
sub
pop
std
cmp
icebp
mov
mov
jae
ret
sbb
icebp
testl
cmp
js
mov
pushf
inc
lret
clc
jnp
lgs
sbb
fcmovnb
jl
xchg
mov
lcall
mov
cmp
xor
out
jae
push
mov
cmp
fwait
dec
add
arpl
insl
notl
jnp
sbbl
jl
mov
xchg
lret
scas
popa
dec
pop
pop
pop
mov
pusha
cwtl
and
dec
les
out
dec
js
pop
aaa
loopne
mov
and
stos
pop
mov
sahf
pop
inc
mov
nop
sbb
pusha
xchg
jmp
and
cmp
or
loop
cmp
or
xchg
jnp
mov
rol
fadd
js
jl
sahf
pop
and
aaa
lret
jno
icebp
jle
xor
pusha
sbb
pop
cmp
mov
fisubs
jmp
inc
jl
pusha
repz
lahf
pushf
cld
inc
add
popf
clc
data16
jp
jmp
stos
xor
inc
incb
mov
bound
mov
mov
aas
cmp
mov
call
fwait
fs
aad
mov
aaa
pop
cmp
pop
into
pop
jb
clc
sarb
push
cmp
pop
pop
jle
out
ficomps
dec
icebp
mov
cmp
pop
ficomps
lcall
je
jl
mov
arpl
mov
pushf
or
jge
pop
mov
idiv
cwtl
mov
hlt
pop
adc
xchg
and
jnp
mov
pop
stos
lds
test
sbb
adc
push
loopne
mov
add
scas
adc
inc
fnstcw
inc
dec
setg
add
sub
push
notl
fdivrs
decb
dec
pop
sbb
pop
pusha
mov
pop
js
or
ss
push
pop
inc
jmp
mov
fs
fstpt
test
pop
inc
add
jge
lret
jp
inc
push
sub
arpl
sahf
mov
inc
xor
std
cwtl
dec
jo
sbb
ficompl
sub
lahf
sbb
adc
cmp
pop
pop
cld
iret
push
fcompl
jg
adc
cmp
cmp
inc
rcrl
jp
sbb
decl
pop
sbb
lahf
imul
xchg
add
or
and
mov
ficomps
fs
push
xorb
aad
iret
jno
js
mov
stc
daa
mov
fildl
jnp
pusha
das
dec
mov
jge
xchg
mov
cmp
mov
iret
ljmp
push
inc
js
cwtl
fstpt
sbb
cmp
pop
mov
clc
adc
inc
sti
pop
loopne
xchg
in
dec
mov
pop
jge
vmptrld
decb
mov
pusha
popa
adc
idivb
mov
lock
inc
cmp
jnp
mov
cmp
pop
mov
push
call
push
frstor
sbb
or
xchg
lea
jge
cmpsb
cld
dec
mov
popa
dec
test
sbb
pushf
aas
cmpsl
cmp
cmp
add
mov
popa
pop
shrl
push
push
mov
sti
sahf
sbb
fdivr
add
hlt
sbb
jnp
push
inc
jb
lahf
lcall
fdivr
pop
fucomip
xchg
dec
cmp
push
cwtl
sbb
call
pop
cltd
je
fst
mov
push
loopne
xchg
cmp
jnp
pop
dec
rcrl
pop
lcall
and
or
mov
sbb
push
enter
pushf
xchg
push
test
sbb
xchg
call
inc
lcall
loopne
mov
lahf
xor
pop
pop
cmp
inc
sbb
sbb
add
cmp
lds
test
mov
pushf
dec
jle
std
jp
jl
imul
push
lret
xchg
cmp
cmp
pop
inc
clc
mov
inc
rcr
pop
pop
pop
mov
xchg
fmul
jae
fisttps
sahf
lahf
xor
je
push
adc
jl
cmp
push
lret
pusha
cmp
add
repnz
sti
in
add
inc
mov
xchg
jle
std
fwait
aas
pop
xchg
aas
jl
sub
mov
lcall
pop
js
fisubl
push
pop
roll
imul
fdivrp
or
repz
mov
pop
pushf
jge
repz
test
leave
mov
loope
dec
jne
out
shrl
lret
int
xlat
sbb
add
pop
cmp
fidivrl
and
decl
loop
push
test
jl
pop
xlat
sbb
rcrl
adc
and
jl
jb
and
cmp
pop
adcb
test
inc
mov
es
xchg
add
or
xor
mov
sar
pop
rol
imul
clc
cmp
or
movsb
pop
dec
mov
aam
mov
mov
pop
mov
sbb
pop
mov
cld
mov
mov
cmpsl
iret
cmp
pop
ret
test
add
push
inc
dec
lods
pop
adc
xchg
pop
lahf
dec
jle
jnp
mov
jnp
sbb
mov
pop
ret
loop
daa
pop
mov
rcrb
mov
dec
lret
inc
andb
pop
cwtl
sub
sbbl
mov
clc
or
pop
loopne
cli
xor
cli
rolb
add
xchg
mov
aad
sbb
jle
mov
out
dec
pusha
mov
pop
jnp
inc
pop
pop
sub
mov
negb
push
sbb
inc
aam
jle
rcrb
and
jmp
rcr
imull
sub
inc
jp
or
pop
cs
mov
fsincos
jns
mov
pop
int3
xor
mov
mov
jp
cmp
push
cli
inc
pop
cmp
cmpl
xchg
shlb
jnp
jl
inc
sarb
sbb
cld
cmp
mov
adc
pop
pusha
loopne
ret
pop
lods
fcomp
test
sub
pop
fadds
sub
pop
inc
cmp
inc
out
ds
fidivrs
in
pop
loopne
push
sbb
pop
fdivrl
jecxz
xchg
mov
inc
jl
mov
pusha
sbb
dec
inc
mov
inc
jle
mov
cli
into
mov
sbb
mov
sbb
fsubrl
pop
mov
xor
pop
cmp
clc
fisubl
pushf
fwait
pop
ror
leave
push
cltd
pusha
je
push
pop
mov
adc
sahf
mov
popl
inc
add
js
adc
scas
int3
mov
jnp
stc
fdivs
mov
rolb
pushf
xchg
imul
dec
je
xchg
xor
pop
pop
sbbl
cwtl
cli
sahf
xor
mov
mov
and
mov
sahf
cld
or
dec
les
pop
jle
jno
mov
je
inc
adc
cmp
fidivrl
dec
mov
push
mov
cmp
addr16
bound
outsl
sti
pop
dec
mov
push
popa
mov
cs
mov
sub
mov
adc
pop
js
mov
cmp
ds
cmp
in
aas
sti
fdivrl
sub
pop
fwait
inc
test
test
inc
adc
mov
mov
jle
ret
push
loop
sbb
popa
mov
adc
jge
cmp
pop
mov
jg
add
inc
jne
lret
or
xchg
jl
add
xchg
loopne
pop
adc
pop
sbb
jle
add
fmull
cltd
and
pop
inc
pushf
pop
iret
xorl
sti
jge
sbb
fistpl
psubusb
jg
outsb
fs
mov
jnp
xor
push
pushf
pop
sarb
cld
dec
push
mov
push
ret
stc
sbb
lock
mov
lret
clc
mov
fdivs
outsb
sbb
jns
shll
pushf
inc
cmp
fwait
jle
sbbl
lret
mov
sbb
push
sahf
dec
pushf
mov
sub
and
incl
cmp
pop
mov
push
pop
rolb
fidivrl
mov
xor
mov
push
insb
insl
cmp
pop
pop
ljmp
fcmovnu
lds
add
add
js
cld
in
vmovq
aas
inc
roll
jle
mov
in
sahf
add
aas
and
push
sbb
inc
in
into
inc
and
lahf
push
and
iret
sbb
pop
jge
dec
repnz
xchg
lea
pushf
sbb
cmp
fwait
mov
pop
sbb
mov
pop
pop
xchg
fsubl
pop
xchg
mov
sbb
mov
orb
pusha
jle
pop
push
mov
mov
xchg
test
test
dec
shlb
mov
lcall
pop
lahf
daa
mov
out
pop
aas
push
clc
fidivrl
push
cmp
jae
pushl
cmp
mov
mov
into
js
addr16
pop
push
lcall
out
xchg
arpl
jns
loopne
pop
jge
sbb
xchg
jl
data16
xchg
adcb
pop
lods
std
mov
ret
bound
sbb
mov
sarb
arpl
cmp
mov
sbb
mov
cwtl
lcall
pop
stos
pop
fbld
cmp
out
dec
in
pop
inc
mov
fisubrl
fcomp
dec
mov
lcall
cmpl
int3
loopne
cwtl
popa
sbb
lcall
outsl
lock
outsb
mov
loopne
mov
je
adc
jo
cltd
movsb
jp
nop
fwait
pop
mov
mov
shlb
adc
mov
fwait
js
sbb
cmpl
inc
je
shrl
fidivs
xor
mov
icebp
or
adc
pop
rcll
adc
gs
cmpsb
and
fbstp
jns
pop
pop
jnp
fisubl
adc
fisttpll
cmpb
cmpsb
xlat
iret
ret
inc
jnp
mov
loopne
jbe
cvtps2pd
jo
inc
icebp
aas
mov
jl
mov
mov
mov
dec
arpl
pop
cmp
xor
pop
mov
and
bound
fistpll
aas
push
fdiv
mov
movsb
jns
xlat
ret
fstl
fs
jle
mov
sbb
lahf
dec
les
dec
xchg
pop
in
jbe
fstp
fwait
inc
pop
jle
pop
sahf
jp
fdivr
mov
xor
sti
les
pop
or
rcrb
mov
sbb
and
mov
fisubrl
popa
dec
jl
sbb
test
xchg
add
xchg
pop
inc
sbb
scas
jno
inc
or
sti
in
pop
cmp
push
jp
xor
cmp
dec
mov
sub
jge
jp
xchg
lcall
sbb
cmp
pop
aas
ficomps
je
or
loope
out
or
mov
add
pop
clc
fisubrl
mov
adc
pop
icebp
push
mov
leave
div
mov
adc
cld
inc
pop
jb
cmp
add
pop
sub
cmp
loopne
jp
jle
arpl
cli
push
sub
push
or
inc
mov
sarb
es
iret
shl
pop
mov
pusha
lcall
mov
ret
test
and
sahf
adc
jp
inc
cmp
pop
inc
je
js
arpl
jg
pop
sbb
loop
fadds
repnz
stc
xchg
cld
jmp
and
mov
dec
shrb
jo
jmp
jae
mov
int3
aaa
clc
xor
cmp
xchg
ss
in
mov
cld
cmp
mov
dec
jg
hlt
pop
xor
pop
lahf
or
fistl
pop
add
ss
sbb
sarl
cmp
lock
ss
jb
loop
inc
aad
movsb
fcoms
push
jnp
lock
loopne
sbb
pop
aas
sbb
lcall
lret
mov
cmp
mov
mov
jo
cwtl
iret
sti
iret
lcall
jnp
pop
mov
dec
sub
mov
xchg
stc
jle
test
xchg
mov
mov
push
adc
repz
mov
and
pop
cmp
xorb
pop
lcall
decl
mov
pop
inc
fcmovb
and
add
inc
mov
std
cmp
fadd
cmpsl
bound
out
test
sub
mov
sbb
mov
sbb
jl
pop
pop
inc
push
mov
mov
sub
dec
cmc
dec
push
and
ljmp
inc
aam
ss
pop
sbb
out
int3
pop
inc
jp
inc
pop
dec
xchg
aam
sbb
mov
dec
addr16
jp
jnp
jmp
inc
mov
lahf
pop
inc
dec
inc
xchg
push
sbb
jns
jg
fldenv
xchg
push
fidivrl
mov
bound
push
pop
fstpl
mov
loopne
lds
insb
xor
outsb
cmp
mov
xchg
in
add
mov
fwait
add
popa
cmp
mov
test
pop
xchg
pop
lcall
lret
and
das
adc
xor
shll
mov
and
cmp
push
push
in
add
adcb
mov
fwait
shlb
clc
push
je
pop
loopne
pop
pop
adc
fsubs
pop
mov
iret
pop
aas
or
je
dec
mov
jl
mov
clc
push
js
cwtl
lcall
cmp
fcomps
mov
cmp
test
mov
or
into
pusha
adc
push
cli
popa
inc
mov
rolb
test
cmp
dec
movsb
pushl
js
inc
mov
dec
xor
aaa
cwtl
lahf
jno
mov
xchg
addl
sub
cmp
js
shlb
jnp
mov
add
cmp
int3
ss
mov
push
sti
xchg
cmp
cmpl
mov
mov
sub
pop
pop
mov
test
dec
inc
cmp
pop
inc
jg
cli
xchg
push
mov
mov
push
jb
pop
sti
jle
mov
adc
sahf
pop
mov
dec
lahf
fistpll
arpl
ret
sarb
jp
cwtl
pop
and
into
jge
dec
sbb
nop
repz
pop
ds
cwtl
adc
outsb
rorb
cmp
add
pop
jl
lahf
jb
fisubrs
roll
mov
sbb
sbb
aad
test
mov
pusha
sbb
mov
cmp
lods
fstpt
and
pop
leave
mov
sbb
negl
pushf
jns
jnp
popa
xchg
rol
add
pop
xchg
ds
dec
testb
jae
pop
lret
fwait
mov
cmp
push
cmpsb
es
les
out
mov
shl
lret
icebp
cmp
push
push
mov
loopne
pushf
mov
sbb
pop
fsubrl
cltd
jl
sbb
jle
mov
pop
dec
pusha
inc
loopne
mov
pop
or
leave
inc
fsubrs
cmp
pusha
sbb
inc
mov
cmp
cmp
and
jno
dec
mov
jl
popa
in
je
mov
repz
cmp
sbb
jl
mov
ss
inc
push
sbb
mov
dec
popa
sbb
pop
pop
orb
pop
cmp
mov
das
ja
je
call
pop
sbb
notb
repnz
popa
pop
scas
xor
sbb
lcall
icebp
push
in
mov
fwait
std
pop
loop
mov
cmp
addr16
sbb
icebp
pop
inc
lds
js
fdivrl
jl
stos
xchg
pop
push
icebp
popa
cwtl
loopne
ds
sti
je
mov
imul
into
cli
add
jg
pop
pop
popa
int
mov
in
adc
addr16
in
and
add
aas
mov
ret
adcl
mov
subb
pop
fwait
pushf
adc
and
call
int3
stc
sti
pop
shl
fwait
pop
movsl
xchg
mov
hlt
inc
fimull
pop
fs
sub
pop
scas
mov
rcrb
vpandn
lahf
add
pop
mov
cmc
and
int3
sbb
mov
ss
jno
pop
mov
cld
sbb
mov
lahf
mov
fistpl
ss
inc
mov
addb
add
jg
mov
jae
data16
pop
xchg
sbb
inc
xchg
pop
sti
sbb
pop
xor
mov
cmpl
push
inc
mov
fdivrl
add
inc
jnp
mov
gs
cmp
ss
and
dec
popa
sbb
inc
mov
pop
push
loopne
sbb
pop
xchg
mov
rorl
pop
mov
fisubrl
or
je
dec
ds
cwtl
sbb
inc
push
mov
fcomps
subl
push
add
push
or
hlt
mov
sti
cld
pop
mov
jb
jle
cmp
mov
jmp
mov
jp
inc
dec
out
sbbb
push
leave
ja
add
inc
out
adc
sbb
pop
mov
fwait
in
cmpb
xchg
sbb
pushf
aas
sbb
jle
pop
pop
add
cmpl
push
sbb
cmp
sub
popa
push
fcmovnu
mov
mov
xchg
pop
popa
mov
fdivrs
or
pushf
mov
jle
add
pop
cwtl
popa
lds
xchg
mov
js
pushf
fcompl
mov
pop
cmp
outsb
mov
cmp
sbbl
dec
movsl
pop
push
loopne
jb
mov
pop
lcall
mov
cld
add
pop
lds
xchg
pusha
mov
ret
leave
mov
mov
gs
pop
lcall
icebp
pop
leave
push
adc
je
aad
sub
rclb
movsl
jle
mov
push
pushf
fstpl
pop
and
push
adc
pushf
pop
cmpb
popa
outsl
pusha
sbb
pop
adc
pop
add
out
aas
jb
lcall
inc
pop
jnp
mov
sahf
sahf
push
and
aaa
cmpsb
dec
xchg
dec
mov
jg
mov
aad
pop
hlt
ficoms
or
sbb
push
mov
pop
adc
inc
fcompl
mov
cmp
sbb
mov
and
repz
push
mov
pop
ficomps
sahf
pop
gs
mov
bound
cwtl
ja
push
sbb
push
xorl
std
loopne
jp
cmp
movsb
cs
jge
sbb
sbb
inc
cmp
push
fnstsw
cmp
pop
mov
int3
add
jge
sbb
mov
pusha
cmp
hlt
fildl
je
cmpsl
mov
adc
xchg
mov
movsb
ljmp
das
inc
in
aad
mov
hlt
jle
mov
jmp
xchg
add
push
mov
shl
cmp
mov
cmp
cmp
cmp
rclb
fildl
jbe
push
lahf
pop
mov
push
mov
jle
mov
jge
push
mov
cmp
jnp
and
dec
mov
add
jge
xor
mov
cli
out
inc
adc
je
xor
fdivrl
ds
cltd
dec
stos
pop
sahf
dec
pop
aas
pusha
lret
arpl
cmp
dec
repnz
and
jno
pop
sbb
loop
subl
data16
lds
xchg
mov
xor
jl
ret
test
pop
dec
or
fadds
in
fsubl
mov
pop
cmp
xchg
fsubs
inc
jge
push
jno
mov
sbbl
lahf
dec
adc
jle
aad
sbb
mov
mov
outsb
adc
xor
lcall
ret
sub
clc
lret
mov
fcomps
xor
out
cwtl
sbb
xchg
js
add
and
cmc
arpl
and
pop
clc
mov
in
pusha
dec
sbb
stc
jp
mov
lcall
mov
mov
push
cwtl
cmp
gs
daa
mov
sarl
in
add
cld
aas
sbb
cmp
adc
lahf
mov
mov
adc
jp
mov
xchg
pop
pusha
xchg
push
sbb
gs
insl
data16
push
mov
xchg
mov
fbstp
lcall
js
cmp
hlt
pop
push
fwait
ljmp
mov
or
sbb
cltd
mov
ret
push
pop
fcompl
cmp
mov
orb
outsl
mov
fwait
in
lret
xorb
cmp
xchg
inc
inc
push
cmp
sbb
mov
ljmp
and
push
cmp
test
sahf
addl
pop
xlat
pop
stc
adc
push
scas
fbstp
jp
cli
and
cwtl
pop
cwtl
js
lods
jg
dec
ret
mov
and
icebp
inc
sti
dec
mov
jle
fwait
sub
inc
mov
mov
dec
pop
mov
fisubrs
add
mov
lock
in
pop
jle
cmp
mov
pop
neg
orl
cmp
mov
adc
pop
jmp
add
xor
adc
ffreep
cmc
fstp
pushf
hlt
jle
pop
xchg
pop
adc
cld
and
cmp
inc
fistpl
adc
clc
cmp
sbb
cmp
ds
pop
sbb
push
popa
mov
mov
hlt
adc
xor
inc
adc
inc
inc
push
sahf
fdivrs
cwtl
cmp
jl
inc
and
fistps
popa
orl
idivl
data16
sbb
jp
stos
mov
mov
mov
dec
mov
xchg
cmp
loop
sbb
lea
push
clc
jp
mov
fiadds
negb
add
pushf
adc
cltd
cmp
sbb
jnp
mov
test
fists
orb
or
mov
xchg
pop
loopne
pop
in
jmp
loopne
std
adc
jae
mov
cld
pop
in
je
hlt
and
inc
pop
bndldx
call
jns
cmp
ja
cmp
mov
in
mov
sub
insl
jb
fidivrs
es
cmp
cmp
inc
aas
pusha
sahf
jnp
sbbb
je
dec
jle
pop
adc
cmp
xchg
js
ss
sahf
pop
mov
fcoms
daa
dec
mul
lods
xor
pop
cs
pop
cmp
pop
jnp
fwait
mov
cmp
cli
pop
stos
aad
mov
hlt
inc
js
cmp
jecxz
enter
jae
add
hlt
popa
jb
lcall
ljmp
adc
sbb
test
xchg
push
or
incl
jb
inc
cmp
sbb
sub
mov
cmp
lea
stc
dec
inc
or
aas
add
fsubl
mov
mov
je
outsb
sub
cmp
dec
lcall
pop
jns
es
add
sbb
cld
pop
mov
stos
sbb
sub
push
ret
cmp
call
loopne
pop
aaa
mov
mov
pop
cmpb
jp
mov
pop
sti
cmp
push
loope
xor
add
push
and
cltd
adc
idiv
xchg
or
xchg
leave
fptan
pusha
lret
pop
xlat
clc
cld
lods
mov
push
jns
sahf
add
clc
dec
pusha
mov
sbb
popa
inc
or
jnp
sub
inc
mov
push
sbb
and
pop
nop
lcall
and
adc
sbb
int3
xchg
js
mov
push
mov
mov
lds
aas
fdivl
inc
ret
inc
cmp
cmp
add
sbb
adc
mov
sub
ficompl
dec
dec
popa
pop
adc
sub
mov
mov
ja
sti
data16
sbb
ss
rclb
lahf
jg
dec
sbb
cmp
cmp
cli
pop
mov
loope
pop
jle
sarb
push
mov
cmp
aad
js
fwait
stc
call
sbbb
iret
push
sbb
adc
add
popa
cwtl
adc
js
pop
mov
pop
push
lret
loop
push
mov
mov
xchg
xor
cmp
lock
push
iret
fcmovu
scas
xlat
jnp
push
popa
cmp
inc
cmpsl
adc
pusha
jp
adc
lds
jge
mov
loopne
pop
fwait
adc
pop
mov
stc
mull
je
je
xchg
test
cld
pop
add
fcompl
imul
stc
push
mov
pushfw
in
pop
fimull
push
lahf
jle
movsb
mov
pop
in
test
add
jg
mov
lds
sbb
cld
jl
mov
pusha
aas
adc
jp
hlt
call
pop
sbb
cmp
jl
insb
out
mov
inc
aad
mov
cmp
cmp
mov
mov
aas
pop
mov
fnstenv
inc
inc
mov
fidivrs
shlb
push
sbb
filds
pop
jge
into
rorl
mov
mov
and
bound
cmpb
out
pop
ds
and
clc
shrb
clc
ljmp
add
inc
sub
xchg
outsl
xor
mov
pop
or
lahf
fildl
pop
js
mov
cld
cmp
adc
mov
mov
pop
mov
dec
mov
pop
pop
add
aaa
subl
mov
aad
push
sub
push
lahf
mov
jge
pusha
cmp
scas
mov
shlb
sbb
outsl
inc
lahf
jns
sub
fs
mov
sub
xchg
pop
in
lods
mov
add
pop
cwtl
cmp
js
fsubr
mov
mov
sub
pop
int3
cmove
cmp
ret
push
and
or
inc
setge
out
lret
jnp
xchg
pop
push
mov
fcomip
bound
cli
lahf
adc
clc
pop
pop
add
dec
in
mov
cmpsb
rcrb
lcall
sti
push
negb
dec
push
stc
push
jp
jae
cmp
push
jnp
push
pop
sbb
in
cltd
sarb
pop
cmp
pop
cwtl
add
das
rcrl
and
adc
fucomi
inc
mov
mov
and
aad
xchg
fcoml
mov
decb
jl
sahf
data16
inc
push
les
cmp
cmp
jl
inc
pop
scas
mov
pop
shlb
sti
xchg
pop
mov
loopne
pop
adc
dec
jnp
stos
nop
inc
add
mov
mov
sti
mov
lahf
and
mov
sub
sti
pusha
jg
js
sub
cmp
mov
cmpb
cmp
dec
cld
pop
rorb
fsub
mov
push
inc
push
inc
mov
cld
pop
jnp
lods
add
psubq
mov
sbb
dec
jno
mov
out
int3
pop
adc
sbb
fisubl
test
pop
rcll
xchg
adc
cmc
je
adc
jb
cmpb
sbb
inc
inc
xor
pop
sbb
fimuls
inc
shlb
fadd
lret
outsb
sahf
mov
pop
sbb
and
pop
inc
cmp
pop
xchg
jns
ja
mov
sbbb
pop
fidivl
pop
add
int3
call
sti
mov
aad
arpl
mov
scas
stc
icebp
fcmovu
mov
jge
dec
cld
mov
cltd
and
out
sti
ss
pushl
pop
mov
arpl
fnstcw
fwait
sbb
aas
pop
jle
pop
std
rolb
mov
sbb
cmp
test
mov
pop
jl
add
loop
loop
bound
bound
add
sar
or
mov
mov
xchg
pop
sbb
sbb
xor
cmp
add
sbb
mov
pop
jmp
daa
push
dec
push
mov
lcall
bound
xor
jge
xchg
xchg
cmp
push
jbe
sbb
outsb
push
mov
dec
mov
das
addr16
ss
pop
add
cmp
out
pop
cwtl
push
pop
push
jg
push
cld
fidivrl
mov
mov
push
fisubs
int
cwtl
inc
imul
out
jb
pop
mov
popa
rorl
inc
sbb
cmc
pop
sbb
aad
arpl
sarb
clc
mov
pop
mov
xor
fistps
inc
fwait
imul
xchg
fists
jb
pop
sbb
adc
enter
dec
cwtl
pop
jp
xchg
arpl
sarl
push
lcall
mov
or
outsl
cltd
mov
cld
mov
mov
adc
lds
sub
fcomp
pop
push
inc
fwait
sahf
pusha
pop
pop
pop
mov
fmul
xchg
add
std
xchg
jp
cwtl
mov
int3
mov
mov
mov
scas
mov
loopne
mov
fidivrl
mov
fcompl
cmp
pop
fnstcw
dec
es
aas
dec
mov
lahf
sub
pop
mov
pushf
lock
sahf
xrelease
push
imul
adc
iret
icebp
xchg
fwait
pop
xor
gs
jp
aas
adcb
test
mov
mov
mov
incl
mov
cmp
popf
add
pop
jecxz
pop
jle
or
mov
enter
fwait
mov
mov
cs
jb
dec
adc
mov
aas
sbb
inc
pop
rolb
xor
sub
mov
negb
dec
inc
in
fwait
cli
jp
sbb
cmp
lcall
cwtl
mov
mov
adcl
adc
js
int3
jp
mov
in
jb
sbbb
incl
clc
mov
jnp
cli
add
fcomps
insl
cmp
push
cmp
cmp
push
pop
mov
xchg
sub
sbb
xor
cmp
pop
jmp
dec
add
sti
jg
mov
pop
fwait
jns
pop
pop
dec
hlt
mov
jp
ds
pop
mov
sahf
dec
mov
fucom
inc
out
jp
aas
stos
push
cmc
aas
mov
sti
clc
roll
add
push
mov
ficomps
fistpll
sahf
nop
jae
fcompl
stc
adc
inc
pop
aas
pop
jno
mov
and
pusha
fdivl
sbb
cmp
jns
hlt
dec
cld
popa
jge
inc
mov
jge
and
inc
cmp
insb
shll
mov
and
push
ret
cmp
sbb
rorb
jge
adcl
xlat
sarb
mov
je
jno
or
repz
cld
mov
test
rcr
cmpl
xor
sbb
add
test
cli
mov
shll
mov
fstpt
jp
pop
pop
cmp
into
dec
test
mov
test
cmp
sub
mov
add
aas
mov
pop
sahf
pop
jge
arpl
fdivrs
add
inc
add
je
fsubl
int3
sarl
out
pop
lods
leave
and
mov
pop
in
jle
xchg
adc
xchg
or
popa
push
mov
test
jle
lds
stos
aaa
lods
inc
mov
push
push
and
shll
pop
mov
sbb
pop
std
cmc
ud1
push
inc
ror
cmp
cmp
xchg
inc
jge
lcall
aam
bound
ss
in
dec
jnp
inc
cmp
outsl
cmp
test
int3
inc
cmp
and
int
inc
xor
aaa
pop
loopne
subb
mov
xor
daa
and
pop
add
cmp
inc
mov
pop
inc
add
das
xchg
jg
data16
std
pop
cld
rolb
cwtl
mov
cli
dec
cmp
pop
sub
icebp
push
cmp
fs
cli
icebp
pop
cmp
cmp
pop
dec
rclb
arpl
and
lods
ds
sti
pop
shrb
sbb
push
and
cmp
add
sub
sarb
fsub
dec
adc
iret
pop
jge
push
fstpt
jl
addb
mov
lcall
sub
pop
fistpll
cmp
sti
inc
ss
dec
fidivrs
clc
fcmovb
inc
pushf
sbb
test
add
jmp
iret
notb
mov
fstpt
xchg
fdivrl
test
jge
outsb
or
pop
sub
pop
cld
cmc
into
sbb
js
dec
dec
push
cwtl
fsubs
aas
xchg
sub
mov
sti
lcall
inc
jle
sbb
scas
pop
inc
or
inc
cmpsb
xchg
inc
fistps
sti
jp
dec
fs
pusha
inc
faddp
pop
fcomps
mov
xchg
mov
sub
test
push
mov
clc
pop
daa
cmpb
dec
jbe
jl
inc
or
aaa
cmp
lea
cmc
sahf
lcall
cltd
mov
inc
jae
stos
testb
pop
pop
je
xor
shlb
lcallw
mov
fstpt
mov
pop
mov
and
pop
xchg
fistps
mov
mov
cmp
aas
repz
lcall
mov
ficompl
stc
stc
mov
push
xchg
add
and
dec
clc
pop
sarb
jnp
add
sub
pop
lds
stos
rcrb
dec
jb
pop
mov
mov
fidivrl
pop
sti
xchg
fsubl
sub
bound
and
imul
sahf
cmp
pop
cmp
cmp
ret
inc
out
jp
inc
test
fidivrl
and
sub
mov
inc
dec
mov
pop
adc
cmp
and
lcall
xchg
lock
dec
aas
fistps
push
inc
ret
lahf
jnp
dec
shlb
cmp
push
add
leave
mov
jnp
adc
xrelease
or
test
mov
adc
cmp
sar
repz
sbb
mov
pop
sbb
mov
pop
sbb
cmovp
push
jg
jge
lret
dec
fdivrl
add
mov
push
sahf
mov
test
mov
sar
xchg
push
repz
cmp
fimull
lcall
aaa
inc
fcmovnbe
pop
jnp
fiadds
jge
lret
pop
int3
and
ja
inc
pop
push
dec
cld
jnp
dec
jb
fcompl
sbb
clc
mov
jbe
mov
inc
lcall
mov
pop
mov
mov
sbbb
inc
lcall
imul
mov
cwtl
fadds
mov
leave
das
idivb
push
push
mov
pop
insb
adc
imul
jnp
dec
jge
cmp
jp
rcrl
mov
mov
ljmp
mov
jg
jne
and
xor
jge
cld
pop
cmp
loopne
bound
js
cmp
sbb
xor
jge
xchg
loop
cld
aam
loopne
push
xchg
rol
and
lret
jb
xchg
fidivrl
fistpl
aad
loopne
push
fidivrs
cmpl
cmp
sbbb
aas
fcomps
pop
jno
outsb
int3
js
or
add
jge
inc
js
add
cmp
sbb
sbb
mov
fsubr
push
mov
mov
sbb
ficomps
pop
push
cmp
mov
or
ss
mov
loopne
pusha
pusha
inc
cs
jp
pop
push
push
cmc
pushf
in
cli
sbb
scas
adc
outsb
imul
mov
cld
pusha
jbe
out
cmp
arpl
pop
xchg
xor
mov
xchg
xor
loop
shrb
lods
test
mov
movsb
dec
sbb
xlat
pop
mov
mov
in
fstpl
jp
lahf
mov
sbb
inc
jb
fcoml
filds
cmp
adc
push
jl
add
fcompl
ss
hlt
pop
inc
inc
clc
neg
inc
hlt
mov
push
fdivrl
sti
push
mov
ror
pop
fcoml
push
pop
mov
sbb
xchg
add
cmp
cmp
cmc
cld
mov
fnstcw
repnz
pop
addl
jp
scas
fwait
or
cmp
dec
lock
cwtl
test
push
pushf
pop
mov
js
cmp
pop
pop
jle
sbb
aas
cwtl
mov
and
negl
cli
mov
lds
cmp
add
xchg
lret
push
jg
roll
or
cltd
sbb
hlt
pushf
pop
adc
mov
cmp
xor
hlt
inc
xchg
lods
sbbb
and
sub
cld
sbb
inc
mov
call
pop
inc
push
push
push
enter
push
rcrb
scas
fiadds
mov
mov
cmp
jp
and
jmp
stos
push
cld
js
bound
sbb
sahf
cmp
filds
or
or
pop
mov
mov
xchg
jp
inc
jl
cmp
add
pop
pop
sbb
dec
adc
cmp
pop
popa
pop
cmp
cli
dec
push
pop
sbbb
push
ret
jl
pop
cmpl
addr16
jge
sti
push
rolb
pop
cmp
jno
pop
mov
nop
mov
mov
pop
jge
xchg
and
add
sbb
out
push
sub
mov
mov
inc
push
sbb
push
pop
ds
fwait
sub
adc
jp
popa
filds
push
pop
xchg
cld
mov
stos
mov
loopne
or
xor
fwait
cwtl
hlt
mov
es
pusha
outsb
rorl
incl
push
dec
cli
fisubs
test
jl
ret
lahf
sbbb
mov
mov
and
int
jge
or
int
push
and
js
dec
pushl
mov
cltd
pop
jl
and
cmp
mov
pop
sub
mov
push
mov
scas
outsl
outsb
mov
daa
inc
inc
cmp
sbb
mov
pop
sti
sbb
lds
aaa
mov
xchg
pop
inc
and
int3
sbb
pop
pop
jnp
pusha
lds
data16
adc
mov
mov
in
sahf
dec
cmp
rcr
add
into
push
das
pop
inc
cmpl
cld
cmc
sbb
mov
mov
pop
mov
jg
xlat
cmp
mov
call
mov
cmp
xchg
sbb
or
pop
pop
inc
popf
lahf
jle
addb
or
rcrl
sub
mov
scas
adc
lcall
aaa
pop
push
in
fmulp
lds
js
aad
pop
dec
mov
cmp
ds
cmp
aaa
out
decl
repnz
clc
sbb
mov
je
rclb
mov
push
std
ja
jae
adc
cli
adc
sbb
int
pushf
mov
mov
and
mov
js
push
popa
fisubrs
data16
nop
sahf
aas
iret
sub
sub
repz
shl
xchg
sbb
mov
inc
popa
pushl
sbb
jb
pop
sarb
jg
xchg
cmc
loopne
jl
popa
cld
repnz
dec
rcrl
in
adc
mov
test
mov
sub
cmp
xchg
push
idivl
popa
daa
push
pop
pop
push
fcom
pop
fiadds
leave
sahf
aaa
jge
push
in
stos
mov
xchg
out
mov
test
pop
adc
icebp
xor
sahf
fiadds
cmc
fistpll
sub
js
ss
cs
xlat
ficomps
sbb
fcomps
jg
mov
cld
aas
mov
pop
and
aad
sub
push
push
jp
xchg
mov
dec
add
xchg
pop
cli
fidivrl
dec
cmpsl
adc
pop
xchg
ss
pop
and
cli
mov
cmp
pop
lcall
stc
stos
hlt
popf
adc
inc
xor
mov
pop
fisubrl
sbb
mov
xlat
and
or
in
ljmp
mov
pop
jle
subb
arpl
pop
aas
pop
cmp
mov
lret
and
jecxz
mov
in
jle
icebp
dec
daa
cld
inc
stos
dec
pop
xchg
push
jle
in
enter
jg
adc
and
ss
pop
addb
jle
inc
mov
popf
cld
mov
push
pop
dec
dec
xchg
jg
fdivr
inc
mov
pop
loope
mov
daa
mov
cmp
pop
clc
fsubs
mov
mov
jge
sarb
bswap
aaa
dec
loope
mov
pop
inc
ljmp
hlt
rorl
sbb
negb
das
mov
or
mov
clc
fldenv
pop
lahf
push
in
and
fsubrs
pop
pop
mov
pop
js
jnp
fsubl
sbb
xchg
sbb
decl
xchg
xchg
icebp
rclb
hlt
mov
das
cmp
fbld
sbb
cmpl
xchg
push
aas
cmp
loopne
jp
cli
pusha
arpl
inc
pop
mov
xchg
fdivrl
cmpsb
cmp
pop
fcomp
imul
sahf
push
cli
mov
add
inc
sub
cs
mov
sti
ret
and
sbb
push
lahf
sub
push
pop
rolb
mov
jnp
jp
ror
loop
sbb
mov
pusha
inc
setg
lcall
pop
mov
ja
inc
cmc
inc
cld
les
mov
mov
rcr
mov
je
fistps
mov
lcall
cmp
or
jnp
ret
fistps
pop
inc
imul
cmp
sbb
or
xchg
repz
not
je
jae
fsubs
xchg
cwtl
pusha
fidivrs
cmp
mov
xchg
and
lds
sbb
mov
xor
pop
and
mov
or
ret
push
xlat
sti
adc
mov
dec
sahf
push
push
or
inc
loopne
inc
cld
jnp
fists
add
inc
popa
pop
sti
pop
mov
inc
pushf
cli
pop
iret
add
mov
lods
data16
or
out
dec
sub
pop
dec
jb
pop
cmp
cld
sbb
dec
jle
push
lcall
neg
cli
mov
sbb
mov
push
pop
inc
push
aam
jnp
les
add
loopne
or
repz
pop
jnp
lcall
pop
adc
fdivrs
sbb
mov
inc
inc
outsl
test
rcrl
adc
jp
fcomps
pop
sahf
cmp
sti
cmp
mov
jns
pop
ret
imul
cmpsb
jl
sti
adc
mov
js
xor
das
adc
das
cli
repnz
sbb
sti
pop
xchg
loopne
cmp
mov
jne
push
mov
lahf
fcoml
and
pop
mov
mov
dec
mov
cmp
xorl
push
xchg
mov
bound
js
cmp
mul
pop
orl
jl
push
mov
sbbb
cmp
movsl
adc
int3
dec
imul
cmp
inc
cmp
fdivrs
shll
cmp
or
jp
fbld
lcall
adc
jle
negl
xorl
jl
dec
fwait
leave
imulb
data16
inc
xorl
xchg
mov
push
inc
dec
pop
pop
mov
lahf
xchg
loop
add
fbstp
dec
mov
rclb
inc
sbbb
mov
and
pop
mov
aad
mov
aas
leave
mov
mov
pop
pop
negl
push
adc
sbb
inc
aas
sti
pop
push
jge
hlt
jnp
cmp
negl
call
addb
inc
sahf
cwtl
jno
push
jle
into
pop
push
dec
lock
int
fsubrs
jl
inc
into
neg
push
or
aaa
fsubrs
mov
mov
jnp
pusha
mov
js
jno
lcall
inc
ror
cmp
cmp
and
cmp
mov
mov
xchg
scas
aaa
ret
fsubrp
jnp
hlt
daa
mov
aas
idivb
std
cmp
jge
sti
push
cld
and
pop
adc
pushf
das
cmp
sbb
sbb
mov
add
js
xor
lret
xchg
inc
dec
aad
mov
pop
push
call
jnp
mov
mov
mov
movsl
sbb
arpl
lea
pop
jl
sbb
pusha
andb
fistpl
imul
jl
incl
push
push
cmp
inc
pop
pop
fcmovne
rcrb
and
push
pop
and
xchg
sub
loopne
mov
cmp
cmp
jecxz
xchg
pop
sbb
sbb
lahf
clc
sbb
jg
pop
aaa
sahf
lea
push
pop
xor
ror
fistpll
cmp
mov
dec
sarl
xchg
cld
add
ss
popa
fcoms
inc
mov
dec
js
loopne
fcomp
mov
sbb
das
xchg
cmp
mov
cli
push
or
pop
jb
lahf
pop
sahf
xor
ficoms
pop
xchg
pop
iret
jp
sbb
cmp
mov
subl
push
mov
sbb
cmp
mov
pop
jg
pusha
mov
cmp
xor
repnz
pop
mov
or
call
mov
pop
inc
jle
lcall
loope
mov
cmp
inc
jnp
push
cmp
in
adc
xorb
sbbl
cwtl
js
nop
cli
icebp
cmp
sti
mov
jle
mov
div
sbb
testb
iret
bound
xchg
pop
ficomps
mov
fcmovnbe
fmull
cwtl
fwait
cli
jb
sbbl
pop
mov
loope
ficoms
dec
fstps
push
mov
pop
add
stc
jl
je
cmp
cmp
pop
cmp
js
sbb
inc
lahf
dec
inc
lock
inc
loop
jge
loopne
jl
ds
mov
mov
sbb
push
lcall
inc
lcall
popa
dec
xchg
cmp
out
adc
push
or
lcall
push
add
aas
inc
lds
pop
arpl
push
inc
mov
std
cmp
mov
jl
mov
ljmp
xchg
subps
lret
sbb
dec
mov
jo
mov
pop
add
outsb
add
cmp
jp
xor
pusha
cmp
cld
mov
scas
jp
jle
mov
cmc
inc
sbb
pop
and
fcompl
in
mov
mov
fwait
mov
shlb
jmp
push
shlb
sbb
inc
inc
inc
and
push
fcmovu
inc
add
js
mov
aaa
lods
cmp
mov
sbb
add
jne
pushl
pop
aaa
mov
popa
mov
cmp
add
lret
cmp
out
insb
js
rcrl
cld
push
popa
loopne
mov
cmp
aas
rclb
fadds
adc
mov
cmp
cmp
pop
sbb
adcl
inc
dec
fcomps
add
cltd
cltd
cmp
push
and
arpl
cmp
out
xor
jle
clc
jg
sbb
mov
out
jg
lcall
loopne
cli
sarb
and
jp
rcrb
mov
push
cmp
push
out
movsl
sbb
das
push
repnz
pop
fidivl
fwait
push
pop
pop
cmp
dec
mov
pop
mov
inc
adc
and
sbb
xchg
mov
xor
inc
fsqrt
jle
sub
cmp
jne
lcall
pop
adc
and
mov
inc
je
popa
pop
repz
pop
pop
clc
mov
stc
push
xchg
fwait
ljmp
sbb
pop
push
ficompl
mov
ret
fdivrl
pop
lahf
aas
sahf
adc
stc
cmp
daa
push
pop
sarb
pop
add
js
push
mov
sbb
cmp
mov
lahf
pop
fidivl
pop
jl
dec
mov
aaa
fcomp
ljmp
mov
lret
sarl
mov
decl
cmp
sbbl
mov
inc
lds
call
fwait
lahf
jge
icebp
cmp
sbb
rolb
jmp
movsb
mov
cmp
fistpll
aas
das
and
cwtl
mov
xchg
pushf
jle
fnstenv
mov
push
mov
sbb
pop
jo
pop
rcrb
sarb
xchg
jno
adc
jno
or
pop
repnz
loopne
cmp
mov
xchg
dec
sub
fbstp
scas
outsb
ds
fidivrl
pop
out
pop
pusha
xchg
lret
cmp
cmp
pop
inc
fst
mov
mov
cli
cmp
mov
mov
fwait
clc
std
mov
pushf
xchg
and
push
icebp
ljmp
ret
lcall
lds
dec
mov
outsb
push
adc
cli
or
ret
sar
mov
pop
jge
mov
or
xor
sbb
cmp
pop
mov
adc
jp
mov
mov
idivl
sbb
jge
mov
mov
sbb
sti
pop
loopne
and
or
dec
mov
sub
ljmp
out
adcb
sarl
mov
adc
jnp
dec
xor
sbb
pop
mov
js
popa
inc
addl
sub
enter
adc
out
pop
hlt
inc
xchg
xchg
or
aad
xlat
push
pop
adc
fldl
mov
adc
fistpll
jo
sbb
mov
sbb
pop
and
push
cmp
fimull
call
dec
jns
push
ficomps
pop
mov
inc
mov
cmp
mov
pop
inc
jnp
sbb
in
pushf
xlat
in
rcrl
jmp
lret
xchg
clc
sti
popa
dec
cmp
shl
shll
push
adc
pop
arpl
test
nop
pop
push
push
lds
mov
fidivrl
pop
pusha
dec
or
push
mov
das
fdivrs
mov
in
sti
cmpsl
mov
fists
xor
ds
pop
dec
xchg
jnp
dec
dec
loopne
js
push
cmpsl
add
mov
xchg
inc
ret
pop
inc
xchg
push
cld
cmp
cmp
cmp
cmp
sbb
in
fiadds
in
fsincos
push
loop
daa
sub
cmp
mull
adc
fidivrl
nop
mov
sbb
jb
lcall
xchg
jo
xchg
dec
mov
mov
sub
cmp
out
lret
cmp
lcall
sub
xor
xor
cmp
mov
shlb
push
loope
lahf
popa
or
fidivs
out
iret
sbb
cmp
mov
lods
popf
lds
push
popf
lods
fmuls
lea
repz
pop
fiadds
add
enter
rolb
mov
loopne
fistpl
ret
outsb
daa
xchg
ficomps
xchg
outsl
out
cmp
loope
cmp
mov
dec
cmp
mov
int3
mov
pushf
mov
fdivrl
insb
mov
outsb
sbb
inc
push
rorl
sub
jnp
or
enter
sub
sbb
cmp
pop
jl
and
dec
es
sbbl
in
or
mov
je
pop
fisttps
cmp
fidivrl
cmpsl
stos
lods
inc
mov
into
xchg
inc
cmp
fsubs
jl
mov
adc
pop
ffreep
cmp
cmp
jg
sbb
lds
add
cld
xor
mov
jg
fwait
adc
fistl
cwtl
jb
push
sahf
mov
dec
sbb
mov
aad
cmp
jns
popf
push
daa
mov
daa
cmc
out
mov
lahf
jo
pop
adc
idivb
mov
inc
mov
jge
lahf
dec
pop
adc
lcall
add
push
fs
mov
negb
sti
scas
daa
push
clc
cmp
ficomps
pusha
popa
add
sbb
out
pop
ret
outsb
adc
cmp
and
or
inc
fwait
xchg
mov
dec
scas
cmp
inc
std
lock
pop
jecxz
ret
dec
ret
mov
add
fidivs
xchg
and
sarb
xchg
insl
ds
cli
inc
push
or
repnz
pop
std
inc
adc
mov
lcall
orb
pop
loope
rcrl
inc
les
mov
cmp
subl
mov
mov
fadds
scas
mov
push
cli
or
pop
mov
loopne
hlt
add
pusha
add
outsl
mov
pop
es
hlt
pusha
push
dec
mov
xchg
cld
push
cmc
mov
add
das
mov
inc
add
jl
cld
cli
mov
loopne
inc
or
pop
mov
int3
cmp
and
xor
sti
pop
loopne
fstpt
loope
xor
push
mov
scas
cmp
xor
sbb
loopne
mov
inc
jl
lods
cmp
pop
mov
cmc
pop
mov
ficompl
pop
fdivrl
cli
cmp
lret
lret
fidivrs
mov
sbb
xchg
jge
std
pop
push
aam
adc
pop
xorb
add
adc
fdivrl
pop
pop
mov
sbb
and
fidivrs
or
arpl
mov
lds
dec
cmp
mov
pop
pop
pop
ret
inc
rcr
inc
ret
push
cli
mov
std
push
test
cmp
mov
mov
cwtl
popa
inc
lcall
push
mov
xchg
and
fwait
inc
pop
push
jp
test
jg
cmp
add
call
fistpll
leave
xchg
sti
add
fwait
adc
mov
rorl
mov
filds
subb
hlt
mov
into
mov
push
pushf
fdivs
pop
cmp
aas
dec
iret
popa
adc
mov
jo
out
das
xchg
mov
incl
jb
aas
mov
rolb
cmp
jb
mov
stos
pop
mov
and
hlt
pop
pand
fucompp
hlt
pop
xchg
fdivr
add
fistpll
mov
cld
arpl
adc
push
mov
mov
hlt
and
or
inc
cmp
loope
ret
lcall
push
mov
push
jl
cmp
notl
cmp
idivb
aad
mov
sbb
cmp
sbb
sahf
nop
arpl
push
push
loop
lcall
lea
fmull
push
inc
sbb
xchg
sbb
jp
cld
inc
mov
adc
pop
mov
pop
arpl
mov
jge
ds
movsl
cld
fdivrl
rcrl
pop
aam
mov
bound
pop
pushf
pop
insb
fdivrp
xor
sub
inc
sbb
inc
mov
fwait
inc
outsl
out
mov
xchg
jl
xor
sbb
cmpl
shll
ds
inc
lock
fcompl
pusha
cltd
inc
int3
sbb
js
jle
mov
xchg
push
pop
add
fsubl
sub
cmc
dec
lods
inc
push
in
jl
push
sub
or
outsb
inc
inc
adc
sbb
cmp
shlb
std
mov
in
js
jle
mov
pop
cmpsb
stos
fidivs
xchg
pop
inc
pop
jnp
loope
jno
pop
xchg
es
scas
adcb
cmp
fadds
shlb
aas
fcmovu
dec
mov
sahf
xchg
sbb
loopne
lcall
and
scas
cmc
sbb
cmp
xchg
dec
jp
pop
rclb
sbb
js
jge
mov
jp
cld
sbb
sbb
shlb
aad
clc
sti
pusha
sbb
pop
int3
mov
mov
push
mov
sahf
rorb
addr16
pop
push
aas
aad
bswap
je
cmc
push
xor
loopne
data16
pusha
mov
mov
dec
pop
jnp
adc
ficomps
mov
in
in
icebp
pop
push
adc
jle
in
add
mov
jp
out
mov
ja
push
lds
mov
mov
and
mov
mov
jle
aad
fcompl
popa
rolb
or
sahf
mov
cmp
loopne
sti
rcrb
outsl
fisubrs
dec
cmp
and
cmp
hlt
clc
fwait
xchg
dec
jl
sbb
rcl
push
xchg
and
pop
inc
and
cmp
xlat
adc
xchg
cli
cmp
jnp
call
outsb
lahf
cmp
fadd
cmp
mov
pop
rolb
fwait
pushf
mov
mov
jmp
pop
cld
jle
addl
xchg
jnp
sbb
mov
mov
xor
int3
add
jae
lods
rcrb
sbb
pop
adcb
pop
pop
jge
pop
js
loop
cmp
jno
cmp
sub
and
fwait
mov
addl
mov
cwtl
pop
mov
cli
dec
mov
sbb
adc
push
inc
pop
loope
mov
loop
inc
jl
sti
xchg
cmpsb
lods
sub
adcb
mov
sbb
fidivrl
jb
cmp
jle
pusha
fbstp
call
dec
fidivrs
stos
repz
leave
pop
jo
mov
and
inc
sbb
jns
shr
cmp
mov
test
ret
inc
cmp
addl
sbb
pop
jl
popf
mov
add
mov
mov
lahf
xorb
dec
sbb
jno
movsb
cld
adc
adc
push
mov
lret
adc
or
sub
out
vmovntps
or
repz
mov
pusha
pop
sar
rolb
push
push
inc
adc
aas
in
jge
xchg
dec
je
rorb
jnp
add
jge
inc
pop
fiaddl
cwtl
in
mov
test
insb
mov
test
jecxz
mov
mov
pop
inc
arpl
aam
jge
insl
mov
mov
jbe
stc
mov
fcomps
clc
push
pop
sub
add
std
int3
lds
outsl
pop
movsl
movups
and
push
out
prefetchw
lcall
or
cmp
inc
mov
mov
lret
inc
inc
pop
prefetcht2
shll
jnp
icebp
mov
clc
sbb
dec
add
jae
mov
sbb
jmp
jmp
ds
xchg
lcall
and
jae
cmp
fistpll
mov
jno
popf
in
cmp
mov
sbb
mov
push
add
fcmovnb
xchg
add
aas
lds
mov
lds
into
adcl
lds
inc
xchg
xchg
jg
adc
push
xchg
ror
lds
xchg
push
in
push
xchg
out
push
lea
xchg
fcmovnb
and
inc
sbb
mov
cld
mov
lcall
pop
das
or
sub
test
aaa
lcall
sub
jmp
dec
cmpsb
je
mov
out
sub
cmp
addl
add
pop
call
loope
test
and
popa
popf
sbb
inc
mov
mov
loope
daa
or
negl
in
inc
mov
lcall
sbb
nop
pusha
std
dec
nop
add
pushf
dec
xor
fcmovnb
sbb
xchg
fistpll
pop
mov
dec
inc
pop
pop
inc
lahf
cld
ficoms
cld
pop
adc
jb
pop
jl
fmull
cmp
push
movsb
jbe
test
cld
push
sbb
icebp
push
imul
add
jecxz
add
cmp
lock
je
pop
mov
lcall
mov
sbb
int3
cli
das
sub
repz
xor
js
sbb
adc
sahf
dec
xchg
pop
sub
dec
cld
pop
aas
cmp
loope
nop
mov
fistpll
mov
jle
mov
test
cmp
popa
aas
cmp
cmpl
movb
or
loopne
in
fstpt
iret
push
xor
jge
in
jae
cmp
pop
aad
sarb
fisttpl
sub
mov
sbb
xchg
pop
jge
mov
inc
fstpt
sarl
iret
dec
loope
mov
and
inc
xor
and
sti
in
jno
cmpsl
stos
rol
rcll
dec
stos
sti
jae
fisubs
addr16
faddl
jle
adc
sahf
cmp
adc
jg
repnz
sbb
dec
jle
sbb
clc
sbb
lds
mov
cmpsl
sbb
lds
and
hlt
imul
out
lds
fisttps
outsl
mov
jl
inc
mov
xchg
jo
lock
repz
mov
lds
inc
clc
sub
mov
inc
into
pusha
cmp
aas
adc
js
jle
pop
ror
mov
cmp
fwait
neg
adcb
in
pop
sbb
testb
lahf
inc
xor
sbb
pop
pop
std
pop
inc
adc
dec
insb
inc
nop
lock
push
mov
pop
cmp
cli
loopne
sbb
sti
subl
adc
lods
jp
pop
cwtl
outsb
cmp
pop
inc
out
dec
push
jb
inc
jge
pop
cli
dec
sahf
fdivrs
lock
inc
sbb
xchg
mov
mov
cmc
jnp
fldenv
mov
pop
cmp
pop
lcall
sahf
je
push
dec
cmp
sbb
sbb
cmp
lret
in
sub
popa
jecxz
pushw
push
push
ss
pop
add
sarl
pop
add
pop
cmp
pop
jle
cmp
aaa
addb
icebp
mov
jle
jp
lcall
pop
sbb
loopne
das
pusha
lods
jno
jns
pop
dec
jg
repz
jnp
js
cwtl
popa
mov
pop
mov
loopne
pop
les
jp
jle
push
in
xchg
mov
jecxz
add
loope
ds
push
sahf
xor
pop
sbb
and
lcall
fcomi
lds
mov
je
mov
mov
pop
inc
pushf
mov
pop
inc
je
xchg
pop
xchg
jns
icebp
sub
mov
sti
lock
fstpt
push
push
outsl
mov
loop
xchg
add
lahf
xchg
adcb
cmp
adc
std
mov
lret
ret
ljmp
sbb
jp
dec
push
mov
js
and
jecxz
outsl
adc
fsub
jae
ljmp
or
inc
pop
dec
jle
clc
pop
and
sbb
and
cmp
cmp
pop
idivb
lods
into
loop
bound
cmp
and
jb
pop
sbb
mov
aas
out
ss
jge
inc
xchg
cwtl
jp
faddl
mov
dec
sbb
fdivrs
push
sahf
pop
ficoms
loopne
jg
mov
and
fisubl
pusha
pop
cld
fdivrl
jle
stos
sarb
inc
sbb
aas
aaa
lcall
sar
decl
fdivrl
xlat
aad
dec
inc
out
push
leave
pusha
rcrl
xorl
and
dec
mov
mov
pop
pop
or
lahf
std
neg
stc
pop
add
lret
andl
xor
mov
push
ficompl
pop
jg
pop
dec
sahf
popf
mov
pop
pop
mov
in
cmp
jnp
lret
dec
ficomps
fistpll
cli
sbb
bnd
cmp
sbb
mov
sbbb
popf
dec
or
repz
addb
ds
cld
pop
inc
jmp
gs
iret
jnp
sub
lahf
dec
mov
pop
aas
cmp
cli
and
cmp
sub
subb
cmc
js
scas
mov
cmp
clc
jp
fstl
in
push
incb
outsl
sti
pop
mov
pop
cmp
pushf
fwait
cmc
jl
lahf
pop
test
sbb
and
cmp
add
and
pop
mov
sti
fcmovb
or
lcall
inc
mov
jnp
jle
pop
dec
inc
cmp
ljmp
jle
cmp
sbbb
lock
cmp
fstpt
push
adc
xchg
sarb
pushf
pop
fists
cwtl
mov
sub
incl
pusha
stc
cld
inc
mov
jns
mov
push
rcrb
adc
xor
push
fwait
cmp
fcoms
jnp
clc
mov
cmp
push
mov
add
cmpsb
xchg
call
sub
shl
cmp
je
cli
jp
pop
lret
int
pop
lock
and
pop
bound
xchg
mov
cld
mov
fdivrs
pushf
push
dec
lret
into
mov
inc
sub
repz
push
pushf
cmp
dec
adc
leave
divb
sti
push
xchg
arpl
mov
mov
pop
aas
jl
cltd
js
and
mov
xchg
sbb
add
adc
sbb
adc
mov
dec
and
cwtl
pop
pushf
cmp
mov
cmp
mov
or
dec
jl
scas
ljmp
loope
add
push
notb
cmp
pop
push
cmp
dec
popf
or
xchg
lcall
cmp
push
push
stos
push
cmpsb
adc
je
repz
fldt
cmp
stos
in
loop
push
push
sarb
sbb
pop
lahf
clc
sbb
loope
das
dec
jl
mov
sahf
popa
mov
sub
jnp
mov
mov
inc
fdivrl
sbb
pop
in
pop
outsl
push
mov
inc
lds
mov
mov
mov
jp
pushf
fidivrs
push
pusha
fwait
add
popaw
cmp
scas
pushf
adc
and
inc
mov
inc
jg
cld
inc
lods
cmp
imul
jp
hlt
sbbb
bound
pusha
rolb
pop
addr16
mov
lret
shlb
popa
stos
inc
mov
and
cwtl
inc
andl
pop
mov
sti
sarb
jge
cmp
sbb
cmp
js
jle
lahf
inc
cmp
cld
push
jnp
adc
cmp
popa
cmp
dec
addr16
sarb
jns
jg
jge
inc
dec
icebp
sbbb
mov
jl
and
rcrb
jns
add
js
popa
sbb
mov
cwtl
xchg
cli
pop
add
dec
jb
popa
fidivrl
inc
insb
adc
cmp
cmc
sub
pop
cmp
jle
pusha
data16
mov
daa
mov
add
cmp
mov
notl
jl
fiadds
sti
and
inc
mov
xchg
mov
jns
jl
fadds
pop
cwtl
filds
sbb
xchg
jo
add
cli
or
clc
movsb
fwait
pop
jge
mov
or
popa
fiaddl
mov
pop
cmp
push
loopne
pop
jge
stos
cmc
jnp
mov
pop
mov
ss
fildll
loopne
lcall
adc
ret
pop
arpl
loop
and
pop
scas
cli
subb
in
sbb
inc
pop
cld
js
xchg
jnp
cmc
mov
sahf
inc
dec
push
aas
cmp
stos
mov
mov
mov
fistpl
xchg
or
cmp
cli
pop
popa
shll
pop
xchg
loopne
sbb
sbb
ljmp
cltd
cmpsb
int
sbb
pusha
push
cmp
xlat
sub
mov
push
es
dec
cmp
lcall
sti
jge
inc
mov
dec
test
mov
cmp
dec
jb
stc
scas
xor
jp
cwtl
out
paddb
test
xor
addb
rcr
pop
jnp
popa
lret
repnz
inc
mov
faddl
cmpl
xchg
pop
dec
sub
cmp
mov
fildl
shlb
inc
and
loopne
test
adc
jl
jge
arpl
loope
dec
or
jb,pt
pop
pop
mov
insb
sbb
incb
pop
cwtl
fdiv
loopne
ss
fwait
jge
jmp
dec
outsb
jnp
shll
or
and
jp
mov
fdivrl
jbe
rcrl
ds
popa
mov
mov
adc
adc
into
stc
pusha
stc
jge
add
dec
pop
dec
inc
testl
mov
rcrl
pushf
loope
dec
es
leave
lea
mov
dec
ret
fistpl
xor
sub
cmp
pusha
aas
mov
andb
mov
arpl
clc
or
loopne
dec
inc
fcmovnu
mov
jg
mov
fcomps
jnp
pop
sbb
mov
pop
xchg
std
mov
or
sub
aas
inc
sbb
mov
js
fidivrl
stos
push
jge
rcrb
adc
inc
add
sbb
jnp
imul
fstpt
bound
inc
inc
xchg
inc
push
into
and
cmc
pop
fcomps
cmp
loopne
cmp
sbbl
iret
sahf
adc
idivb
and
aas
pop
cmp
fcoml
scas
pop
jge
push
test
inc
int
and
sub
xor
cmp
dec
mov
js
add
fistps
mov
outsb
mov
mov
inc
xor
dec
fisubl
inc
and
sub
mov
pop
cwtl
rorl
inc
test
xor
xchg
xor
mov
loope
ja
pop
cmp
out
jp
xchg
out
inc
jb
cmp
jae
cmpsl
fsin
add
adc
shlb
cwtl
iret
xchg
clc
push
movsb
mov
scas
cmp
subb
pusha
dec
sarb
cmp
loopne
leave
mov
js
inc
das
dec
sbb
cmp
fwait
int
stc
jge
or
fucomi
push
jp
ret
dec
pop
jl
pop
into
loopne
inc
pusha
mov
stos
mov
push
fidivrs
and
jmp
lock
inc
jl
mov
adc
andb
sti
jp
fmuls
jge
nop
fwait
in
mov
pop
cmp
fucom
popa
mov
repz
cmp
xor
bound
mov
cmc
pop
jno
push
scas
cld
xchg
jbe
pop
xor
jns
cwtl
adc
shlb
jge
mov
stos
xchg
scas
mov
mov
push
cmp
jmp
sub
sbb
les
in
fwait
je
adc
jb
xchg
imulb
cmp
mov
roll
pop
hlt
jl
lahf
mov
and
pop
sbb
daa
cmp
pop
mov
adc
lock
dec
leave
sbb
mov
or
movsb
int
dec
mov
inc
cmp
push
loope
jge
ficompl
sbb
adc
aaa
xor
mov
push
xchg
add
sbb
std
push
stc
out
dec
push
jb
fstpt
sbb
jp
in
jae
pop
mov
pop
adc
je
mov
popa
jle
cmpsb
movsb
add
test
lcall
sete
pop
xor
cmp
pop
mov
jge
push
cwtl
fistpll
sahf
pop
in
add
xchg
sbb
bound
les
jbe
cmp
loope
inc
cld
cmpl
mov
add
movl
pop
addr16
adc
lods
jp
ficomps
mov
xchg
cltd
mov
popa
sbb
ja
call
insl
cmp
sahf
pop
mov
mov
pop
mov
inc
inc
cmpsl
adc
inc
adcb
xlat
pop
popa
ds
cwtl
repz
inc
mov
iret
sarb
jmp
push
dec
pop
dec
add
jp
jp
and
xor
or
inc
pop
sahf
ret
inc
imul
js
and
mov
ret
add
outsl
cld
pop
cmp
test
pop
fwait
fwait
add
jns
pop
outsb
push
jns
fwait
rcrl
test
fwait
pop
xchg
pusha
add
shlb
cmp
sahf
mov
shlb
sbb
cld
jp
mov
call
jo
icebp
cli
ret
lea
cld
mov
aas
fistps
negl
dec
fwait
jge
mov
mov
loop
cld
fistpll
popa
mov
lcall
dec
inc
dec
leave
jb
jge
cli
ds
cld
popa
dec
fidivl
lds
add
jp
push
mov
adc
jmp
subl
jae
pop
fadds
int
pusha
jno
adc
and
fbld
fidivrl
call
cmp
dec
data16
fmull
stos
sti
mov
and
ret
push
cmpsb
subb
cs
pop
cmp
enter
cmc
inc
sarl
jnp
cmp
push
fucomi
sbb
clc
cli
cmp
inc
push
sbb
loopne
hlt
pop
fcmovnb
and
and
into
xchg
mov
xor
xchg
loopne
cld
insb
jle
negb
jle
sbb
pop
jg
pusha
inc
addr16
lock
notl
cmp
sub
mov
pop
pusha
enter
lahf
int
pop
imul
sbb
mov
call
lcall
mov
pop
incb
stos
fdivrp
or
add
lret
pop
pop
out
mov
cmp
sub
jno
sbb
mov
jle
xor
xchg
push
jnp
mov
add
loopne
cmpsl
cmc
jno
mov
adc
lcall
pop
aas
call
mov
inc
dec
out
inc
jge
call
fstpt
dec
lret
sbbl
cmp
mov
mov
arpl
ficompl
jnp
inc
inc
pop
inc
mov
xchg
xchg
pop
jl
inc
es
add
jp
pop
sahf
sbb
cmp
mov
xchg
pop
cmp
fdiv
pop
add
sbb
cmpsb
jbe
pusha
shll
scas
add
test
lcall
adc
jg
mov
pusha
pop
lret
jge
pop
push
pop
jge
cmp
loop
mov
aaa
adc
pop
dec
sbb
adc
xchg
pop
pushf
je
mov
sub
fdivr
cwtl
pop
inc
cmp
mov
data16
ficomps
push
cmp
aas
pop
dec
test
adcb
cmp
clc
sahf
jns
cli
sbb
add
and
lahf
cmp
fdivp
jge
pop
loop
mov
adc
jno
pushf
shl
popa
mov
clc
and
aad
pop
mov
fistpll
mov
pop
dec
ret
pusha
mov
cmp
jge
ror
cmp
cmpl
push
jb
jp
fisttps
cmp
and
push
sahf
sbb
sbb
aas
cmp
xchg
xchg
mov
mov
sub
inc
pop
pop
lea
cli
jmp
mov
sbb
into
fdiv
mov
adc
mov
lahf
fidivrl
jl
adc
and
loopne
push
sbb
pushf
js
mov
mov
fwait
mov
mov
xchg
cmp
in
fisubrl
jns
cmp
js
add
and
mov
cmp
pop
and
js
inc
xchg
dec
into
inc
inc
sub
jno
mov
divl
mov
and
mov
pop
fdivrs
or
sub
mov
mov
pop
or
cmp
sbb
dec
inc
fiaddl
aad
sbb
add
mov
mov
sbb
cmp
popa
scas
cltd
inc
and
inc
cwtl
rclb
pop
cmp
mov
pop
ret
jp
jb
inc
lret
inc
push
sarb
or
mov
pop
dec
pop
fadds
adc
cmp
cli
push
notb
mov
pop
aaa
inc
inc
lock
sbb
pop
xchg
sbb
mov
pop
cli
xchg
mov
mov
loopne
mov
fildl
dec
fwait
jge
sbb
push
movsl
shl
je
adc
jg
cld
push
hlt
xorb
and
ret
mov
mov
add
mov
pusha
sbb
lahf
inc
ret
mov
inc
pop
jnp
jl
mov
cmp
dec
xchg
fdiv
fwait
aas
jg
inc
mov
sbb
pop
sbbb
add
lds
sbb
mov
xchg
xor
pop
mov
mov
xchg
jg
lock
add
inc
lahf
mov
lcall
adc
inc
lahf
iret
loop
ret
push
sti
cmp
pavgb
inc
stc
push
icebp
cld
jp
jge
add
pusha
mov
ss
out
jg
cmp
mov
stos
pop
mov
jge
mov
or
jb
sahf
inc
pop
subl
bound
aas
inc
imul
stos
dec
sub
jg
not
mov
dec
dec
scas
cmpl
incl
mov
in
addb
inc
inc
or
into
mov
dec
aaa
dec
call
loopne
lcall
stc
and
sbb
je
jb
pop
pushf
pop
dec
mov
sub
mov
push
rolb
pusha
or
mov
and
mov
jl
pop
xorb
fdiv
cmp
aas
adc
push
repz
jle
sbb
xchg
ret
or
cmp
pop
aas
xchg
mov
cmp
fildl
pop
fwait
inc
cwtl
dec
vdivss
sahf
mov
imul
mov
pop
rcl
andl
push
mov
inc
addr16
lods
fdivrs
pop
pop
and
popa
clc
loope
push
bound
mov
nop
dec
jg
fdivrs
cmp
mov
popa
add
pop
xchg
inc
ret
popf
pop
iret
mov
pushf
adcl
cmp
adc
popa
sbb
lcall
push
bound
cmp
jg
mov
sbb
hlt
mov
xlat
fsub
jb
xor
inc
cwtl
xchg
adc
cwtl
aas
ret
adc
sbb
inc
mov
inc
lcall
jp
and
adc
and
mov
inc
ret
mov
pop
fisubrs
sbb
pop
push
fcompl
out
mov
cmp
pop
pop
add
sbb
add
mov
inc
sbb
push
cli
fistpl
or
cmp
in
push
xchg
push
cmp
testb
mov
xor
cli
icebp
mov
pop
cmp
test
and
jb
pop
pop
inc
mov
jno
nop
loopne
popa
dec
js
js
pop
iret
add
cli
std
adc
sub
testl
mov
mov
mov
fistpl
pop
push
xchg
inc
cmp
mov
pop
bound
mov
aas
sbb
push
inc
cli
fistps
dec
and
pop
insl
lahf
jg
jl
cwtl
into
pop
mov
lock
pop
pushf
dec
jne
fdivrp
pop
js
xchg
ficompl
jnp
mov
mov
clc
mov
pop
sbb
cld
ja
ja
loopne
cld
mov
xchg
stos
sbb
jge
mov
sti
or
cmp
sti
pop
cli
cwtl
xchg
cmpb
mov
mov
cmp
jnp
push
js
mov
loop
xor
mov
adc
jns
icebp
cli
mov
vpsadbw
xchg
inc
mov
cs
lcall
cmp
jmp
loopne
xchg
cltd
mov
sahf
lcall
add
in
pop
push
cld
mov
das
dec
xor
sbb
pop
sarb
lret
adc
pop
inc
sahf
jle
cli
sbb
mov
cld
pop
mov
cmp
adc
cmp
test
add
shr
pop
jno
fimull
inc
popa
aas
std
jl
nop
fstps
fdivrl
cs
push
data16
lcall
cmovge
inc
repz
mov
stos
pop
sub
loopne
sub
mov
mov
pop
cmp
into
jp
dec
pop
jae
xchg
frstor
mov
jnp
or
pop
pop
pop
cmp
pop
fistl
xchg
mov
push
push
jl
arpl
mov
fstpt
sarl
mov
jl
faddp
enter
enter
sbb
js
fcmovnb
dec
loop
mov
cwtl
add
scas
pop
jecxz
pop
loop
mov
pop
push
and
dec
pop
imul
ret
jg
ss
mov
and
push
pushf
inc
push
punpcklbw
roll
idivl
lcall
and
es
clc
dec
loopne
popa
adc
lcall
fiadds
inc
popa
sbb
mov
sbb
add
inc
in
xchg
jecxz
loopne
and
jg
idiv
pop
outsl
rclb
inc
cmp
fnstcw
pop
xchg
aas
sarl
cmp
push
jb
lahf
cmp
sahf
and
sbb
pop
and
push
push
cwtl
cmp
jno
mov
pop
test
jle
bound
mov
into
sarb
shlb
pop
mov
pop
ficoml
mov
cmp
enter
sarb
mov
or
repz
sbbl
dec
jmp
popf
ja
jp
xchg
cmp
jg
mov
mov
mov
or
int3
pop
adc
sbb
out
lahf
mov
mov
cmp
pop
cld
sub
xchg
dec
add
add
pop
jns
cmp
dec
pop
mov
pushf
pop
sub
pop
or
call
negb
ds
add
in
or
mov
jge
movsb
sbb
jns
scas
out
ret
jl
pop
aas
je
sti
add
cmp
in
jp
stos
dec
pop
daa
sbb
push
sbb
cmpsb
imul
pop
xchg
dec
imul
sti
pop
xor
fidivl
sub
mov
gs
pushf
pusha
inc
ljmp
lahf
cld
jecxz
jge
sbb
ss
push
cmp
jp
push
fdivrl
cld
out
pop
pusha
and
pop
push
inc
movsb
jge
or
adc
sbb
out
xchg
adc
lcall
dec
cmp
lahf
push
cmp
outsl
out
jge
and
jl
xchg
fists
pop
cld
mov
lods
jecxz
jge
sbb
adc
jl
pop
inc
pop
pop
aas
jnp
negl
and
cld
jge
jmp
repz
push
pop
loope
sarl
pop
lahf
sahf
pop
into
cli
cld
ret
adc
push
pop
sbb
popa
xchg
jle
dec
cmc
pusha
fisubrs
and
aas
arpl
push
fwait
ss
mov
or
lcall
mov
push
fstpl
jne
pop
cmpb
and
int3
je
cmp
out
adcl
sbb
test
ds
jnp
jb
sbbb
mov
pop
test
inc
pop
cli
jg
sub
mov
ljmp
imul
push
cmp
add
fs
js
mov
adc
aad
mov
pop
lahf
fsub
rorl
inc
repz
pop
fdivs
cmp
mov
lea
lahf
mov
sub
mov
in
lret
pop
and
or
fwait
adc
add
jns
lds
pop
cmp
jp
sbb
dec
aaa
or
jg
iret
pop
inc
outsb
sub
lods
and
imul
push
loop
dec
mov
ffreep
hlt
out
adc
loope
pop
mov
lock
jns
push
movsb
pusha
mov
jecxz
outsl
int3
fs
int3
pop
xor
add
fwait
pusha
cmp
mov
test
fcompl
jp
popa
icebp
inc
cmp
cmpb
jb
int3
subb
jp
jb
mov
pop
andb
inc
rcrb
hlt
sbb
loop
aad
lret
pushf
xchg
shrb
mov
pop
and
sti
dec
and
cmp
cmp
inc
push
ficoms
sub
pop
pop
lret
jge
js
sarb
cli
dec
pop
popa
pushf
sub
xchg
pop
daa
je
das
hlt
repz
aad
stos
pop
sbb
frstor
xor
pushl
push
sbbl
ret
push
sti
stc
adc
adc
test
inc
jae
mov
push
sbb
add
in
dec
pushf
pop
pusha
sbbl
pop
clc
sbb
pushl
cmp
xchg
fimuls
jnp
pop
nop
ficompl
pusha
sbb
push
inc
xchg
mov
fidivs
sbb
pushf
sbbb
nop
loopne
mov
cmp
rolb
dec
pop
mov
pop
jg
fdiv
jle
xchg
adc
inc
adc
fmul
pop
sub
add
push
inc
push
cmp
mov
clc
sbb
mov
out
iret
sti
mov
inc
pop
rcrb
dec
mov
jg
and
pop
add
mov
mov
sbb
in
lahf
or
cmpl
push
or
icebp
mov
jb
mov
xchg
in
pop
mov
add
mov
sbb
push
mov
fidivrs
cmc
lahf
pop
add
add
xor
push
pop
sub
or
lcall
pop
inc
and
ffree
sbbl
jle
pop
std
sbb
cld
lahf
lcall
mov
pop
ljmp
nop
push
cli
addl
adc
adc
fwait
and
xchg
xor
sbb
sbb
dec
lock
mov
ljmp
shlb
ret
inc
mov
cld
lahf
mov
adc
dec
dec
js
cmp
push
or
adc
inc
roll
cmp
jnp
mov
cmp
push
fwait
fs
jnp
inc
js
inc
dec
jae
push
pop
sbb
pop
lds
ljmp
fsub
and
or
push
pop
mov
pop
and
add
and
jl
loopne
xor
and
sbb
inc
ss
jp
out
mov
sbb
inc
mov
sbb
sbb
pop
movsb
add
jno
jg
jo
stos
outsb
sbbl
pop
sub
or
pop
jle
clc
push
pop
sbb
jns
in
adc
mov
pop
and
pop
or
dec
mov
jl
mov
mov
cmp
dec
jp
je
jg
stc
mov
dec
jecxz
lcall
fistps
cwtl
dec
inc
dec
mov
cmp
cld
jle
sbb
leave
test
jno
add
cmp
jae
cmp
inc
xor
loop
faddl
jns
push
jge
sbbl
jle
cmpsb
xchg
lock
jae
pusha
mov
or
push
cmp
fstpt
ficomps
inc
jmp
cli
fistpll
pusha
inc
or
jp
pop
adc
sbb
cmp
fistpl
inc
mov
negb
sbb
mov
inc
sti
rcll
cmp
sti
push
cltd
shl
loopne
daa
cld
int
hlt
js
pop
jb
jle
sbb
nop
sbb
or
mov
jno,pn
fwait
pop
dec
push
jae
cwtl
sbb
xchg
adc
cmp
or
pop
jge
xor
push
add
sub
popa
and
fists
scas
sub
fdiv
and
imul
push
lahf
mov
xor
cmp
inc
push
je
mov
aas
mov
xchg
mov
mov
rcrb
addr16
push
jne
cmp
inc
mov
dec
cmp
add
jnp
mov
aad
js
sbb
into
mov
ja
stos
sbb
and
int
clc
lds
mov
mov
fadds
mov
in
or
mov
sbb
inc
btcl
xor
sbb
sbb
enter
dec
mov
dec
ja
fisttps
sub
or
jl
or
and
fistpl
push
outsl
pop
sub
and
addr16
fld
notb
mov
cmp
push
pusha
adc
sbb
jp
xchg
mov
loop
sbbb
cmp
repnz
cwtl
loopne
das
lcall
and
lret
jns
lret
xchg
sahf
pop
push
cwtl
adc
and
cmc
jge
jbe
adc
mov
loopne
cmp
pop
cld
cmp
cmp
push
add
js
mov
cmp
mov
mov
sahf
aad
fwait
sbb
adc
fdivrs
fistps
cld
lcall
xchg
mov
push
pop
add
mov
and
sub
pop
inc
xor
xor
pop
mov
jns
mov
idiv
mov
pop
mov
sbb
jl
inc
inc
cmp
in
insl
pop
sbb
pop
pop
ret
call
fistpll
dec
fwait
inc
in
sahf
mov
cmpsb
popa
cmp
inc
rorb
inc
mov
mov
or
pop
pop
inc
lret
lds
stos
sbb
pop
mov
loope
sbb
data16
fs
pop
and
cli
shr
aad
mov
xor
mov
mov
leave
je
popa
hlt
repnz
cmp
test
adc
mov
inc
mov
mov
stos
adc
pop
cld
mov
jmp
jg
loop
ret
into
inc
sbb
cwtl
cmp
and
mov
fdivrp
lds
inc
mov
clc
ffree
popa
pusha
mov
sbb
jmp
icebp
sbb
scas
mov
inc
xor
lahf
mov
cmp
inc
imul
pushf
sbb
out
fdivl
push
xchg
jp
into
ss
fcomps
push
sarb
sahf
cmp
and
pop
cmp
mov
jl
loopne
or
aaa
xchg
inc
cwtl
jle
pop
sbb
cli
xorb
mov
mov
int3
test
mov
jns
adc
jb
mov
gs
cld
outsb
sbb
cmp
pop
mov
push
loopne
mov
mov
movsb
lahf
mov
cmp
fdivrs
movsb
inc
or
sbb
lds
add
stc
nopl
jmp
vrcpps
fisttpl
mov
ficomps
xchg
pop
pop
ss
mov
mov
cmc
mov
cmp
sub
cmp
pop
inc
jge
loopne
sbbl
pop
sbb
xchg
and
push
adc
xor
push
aas
lret
mov
lods
repz
je
mov
xchg
cli
mov
dec
sbb
inc
cmp
jle
and
and
dec
sahf
sub
add
jp
lret
loopne
cmp
ret
push
cli
fistps
ljmp
inc
cmp
pop
pop
lds
bound
xchg
inc
cmp
push
stos
mov
loop
or
shlb
cmpl
push
clc
cmpsl
adc
fwait
outsl
pop
add
pop
pop
jg
int3
mov
lahf
adc
cmp
xchg
xchg
xchg
imul
sti
sahf
stos
out
xchg
mulb
jmp
cli
lcall
jnp
pusha
negb
jae
and
sbbb
mov
ret
cmpb
fwait
sahf
mov
add
dec
xor
pop
idivb
mov
sarb
shrb
mov
add
inc
rclb
arpl
repnz
mov
inc
loop
sub
xchg
xchg
hlt
adc
pop
pop
cld
pop
mov
dec
popa
sbb
ficomps
mov
aaa
mov
jle
mov
mov
mov
mov
add
or
call
es
daa
je
xchg
stos
pop
adc
aad
sti
movsl
pop
or
push
jle
cwtl
inc
shll
cmp
adc
push
fcmovnb
cmp
mov
cmp
push
dec
fcompl
inc
pop
jg
add
cmp
jg
popa
mov
sti
jp
xlat
mov
push
je
push
jl
xchg
shl
xchg
rcll
mov
cli
aas
pop
push
insl
xchg
push
sbb
arpl
push
dec
xor
cmp
cmp
and
pop
andb
popa
sbbl
dec
sbb
cli
hlt
repnz
jb
sbb
push
pusha
iret
mov
loopne
adc
cwtl
sti
push
jg
mov
fdivrs
cmp
stos
adc
pop
cmp
push
mov
std
pop
outsb
jno
or
test
jb
pop
sahf
fisubs
loop
sti
sub
sbb
mov
repz
xor
fcomp
pusha
mov
add
movsb
cmp
pushf
cwtl
mov
mov
js
pop
negb
dec
mov
inc
test
into
cli
mov
push
cmp
mov
pop
scas
inc
fmuls
loopne
fists
mov
jns
sti
lret
jo
fstpl
dec
faddl
sbb
mov
mov
fmuls
sbb
mov
pop
fidivrs
xor
loopne
pusha
mov
cmp
fistps
mov
int
iret
sub
xchg
aad
pop
and
jns
and
lahf
hlt
in
lods
pusha
fwait
push
addl
pop
cmp
outsb
pusha
sub
cmp
adc
mov
lcall
pusha
pop
cmp
pop
xchg
xchg
mov
adc
cmp
pusha
adc
add
mov
lahf
cmc
sbb
mov
xchg
lcall
and
mov
popa
repnz
imul
lahf
xor
sbbb
cmp
icebp
loop
xor
iret
neg
pop
aaa
lcall
popa
push
dec
pusha
pop
incl
faddl
fdivs
xor
shl
push
mov
popa
aad
mov
repz
jl
dec
pop
in
push
push
cld
dec
cmp
ficomps
fdivr
jle
js
pop
or
dec
fstpt
mov
xchg
cld
or
add
sbb
lahf
std
adc
cli
jp
jo
addl
pop
mov
mov
jp
je
cld
icebp
iret
push
cmpsl
sbb
in
mov
sbb
sbb
mov
cmp
addl
cld
lds
icebp
xlat
pop
adc
xchg
cmp
mov
jl
jno
fwait
cli
es
pop
imul
adc
fistpl
rclb
adc
lret
gs
push
out
xchg
rcrb
pop
loopne
dec
xchg
pop
cmp
fisubs
ror
pop
ret
xor
clc
dec
jp
and
popa
cmp
fidivrs
adc
sbb
and
and
push
cmp
jl
push
js
mov
push
das
arpl
cmp
mov
xchg
fimull
inc
aad
cmp
sbb
enter
sbb
mov
das
cli
mov
and
or
xlat
pop
loopne
cmp
or
jl
adc
sub
push
pop
fdivrs
fcmovnb
cmp
xchg
loope
jnp
orl
xorb
mov
pop
and
pop
dec
jl
and
pusha
fistps
pop
loopne
je
aad
sbb
push
andl
in
add
mov
mov
dec
xchg
das
inc
or
sarb
cmp
outsb
or
sarb
and
adc
pop
cmp
flds
dec
jb
pop
sbb
push
inc
shlb
push
inc
fwait
ss
fwait
pop
test
sub
loop
push
jl
sbb
pop
lds
cmc
inc
pop
jg
jo,pt
mov
dec
pop
sbb
pop
data16
mov
sbb
scas
aad
pop
cmp
push
hlt
mov
ss
xor
int
mov
lcall
xchg
outsb
and
add
ficompl
loopne
ljmp
mov
and
cmpsb
sarl
ret
pop
fistpll
vmovdqu
sbb
lock
add
cld
adc
pop
mov
sbb
jl
jle
add
cmp
negb
adc
popa
js
aaa
cli
orb
les
stos
xchg
aas
aad
pop
cmp
mov
mov
aad
pop
ds
sahf
jns
sbb
aas
xchg
cld
rolb
mov
ficompl
dec
cmpsl
jg
mov
inc
pop
and
aas
loop
fildl
sub
add
ret
or
ficomps
add
or
mov
addl
mov
push
or
fwait
loopne
lcall
push
lret
imul
data16
sbb
sbb
lcall
int3
mov
sbbb
lcall
ficoml
dec
popf
inc
sub
xor
mov
mov
jle
adc
ss
xchg
lcall
xor
test
cld
pop
jl
int
mov
dec
sbb
mov
shl
test
xchg
mov
mov
int3
inc
outsb
cwtl
sahf
test
add
sahf
adc
nop
push
nop
pusha
in
or
pop
jg
and
lods
hlt
data16
ds
inc
jae
sbb
adc
xchg
imul
inc
les
push
lcall
pop
je
je
hlt
pop
adc
sbb
hlt
adc
push
clc
lcall
jge
mov
mov
cmp
lcall
outsl
lcall
pop
fcompl
jle
mov
or
mov
cmp
push
fmuls
aad
fists
push
addl
adc
adc
jae
pop
mov
xchg
cmp
shrb
xchg
add
xchg
cld
filds
pop
or
mov
aas
sub
sbb
dec
xor
negb
daa
or
sbb
mov
rorb
inc
in
push
adc
jl
rcrb
cmp
pusha
xchg
test
pop
xor
sbb
enter
aaa
lods
imul
aaa
adc
fmulp
orb
aad
push
sbb
sahf
sti
out
sarb
jp
data16
xchg
mov
fcmovnu
inc
cmpsl
pop
cmp
sbb
scas
push
cwtl
loop
pop
ret
lret
cmp
xor
mov
jle
jnp
pop
cmp
clc
adc
jle
mov
cld
cs
jp
cmp
jecxz
aas
sbb
and
and
mov
pop
jge
sbb
fwait
loopne
in
or
cmpsl
mov
cmp
and
fwait
pop
pop
fdivrs
in
jb
xchg
cmp
dec
or
aas
popa
pop
cmpsl
je
xor
pushf
outsl
mov
sbbl
xchg
pusha
in
mov
clc
inc
scas
jmp
push
jne
inc
lods
ljmp
fdivrl
arpl
xchg
addr16
sarl
lahf
fidivrs
addb
int3
lahf
jle
popa
idivl
and
push
sbb
mov
sbbb
cmp
call
add
push
sahf
mov
cmp
arpl
out
jle
sbbb
aas
outsb
mov
cltd
and
sub
icebp
or
sbb
mov
inc
pop
dec
pop
xchg
fdivrs
pop
mov
out
fiaddl
insb
inc
xor
and
mov
sti
mov
fwait
das
test
pop
xchg
dec
cmpl
cmp
mov
jae
fistps
sbb
je
cld
xchg
es
adc
mov
cmc
mov
mov
sbb
in
roll
rol
cmp
mov
mov
jo
mov
and
mov
jnp
mov
sub
pusha
mov
fadds
jb
cli
fwait
scas
and
mov
dec
inc
mov
and
rcrl
adc
inc
aas
cld
mov
inc
js
push
or
xchg
loopne
mov
cmp
test
js
jge
jl
fisttpl
jp
mov
mov
pop
fildl
cmp
mov
stc
je
mov
sbb
jge
stos
xchg
jge
pop
lods
fildl
lods
jbe
lea
pop
xchg
jnp,pn
addb
mov
sub
mov
xor
xchg
mov
xor
data16
jb
jl
sbb
pop
xchg
xchg
cli
pushf
push
push
jnp
cld
out
sarb
xor
loop
xor
lock
jle
xor
mov
inc
sub
fistpl
xor
sbb
lahf
fwait
mov
jae
mov
mov
add
xchg
aad
clc
push
and
jp
jp
cld
in
fwait
jl
cmp
fimuls
stos
add
sahf
sbb
cmp
jnp
xchg
fdivr
rorb
test
pop
repnz
clc
int
sbb
fstpt
jl
shll
add
scas
shl
inc
pushf
clc
je
xchg
jge
lea
outsl
cmp
mov
pop
fiadds
or
pushf
mov
sub
cmp
jle
out
and
fildl
pop
cmp
fwait
pop
mov
jle
mov
pushf
adc
jp
xchg
fldl
pop
pop
shlb
mov
pushf
mov
sub
push
fcmovnbe
sbb
mov
ja,pn
adc
ja
add
pop
pusha
jge
dec
pop
sbb
sbb
inc
outsl
pop
lcall
pushf
mov
adc
or
ficoms
and
mov
fwait
pop
dec
or
dec
xchg
pop
cli
lcall
icebp
lea
push
inc
outsb
aad
mov
push
cmp
lcall
cli
clc
repz
subb
push
fcmovnu
dec
push
cli
lahf
xchg
pop
add
notb
fsub
xor
scas
push
add
cmpsb
mov
addl
inc
icebp
inc
dec
inc
dec
sub
mov
mov
fistps
aas
and
pop
sarb
pop
pusha
test
cmp
pushf
mov
sbb
inc
in
filds
lahf
xlat
cli
aas
int3
scas
mov
jno
dec
inc
pop
mov
mov
jnp
sbb
pop
mov
mov
pop
out
or
xchg
je
mov
pop
and
mov
popa
cmp
sub
pusha
jecxz
cmp
ficoml
jp
clc
cmp
mov
outsb
gs
sbb
cmpsb
outsl
subl
ja
pop
pop
leave
ds
sbb
lahf
out
dec
cld
cmp
fsub
lcall
stos
jmp
pop
cmp
pusha
push
lret
pop
fistpll
adc
inc
orb
cld
cwtl
xor
mov
scas
aam
ficomps
nop
cmp
xchg
and
sarl
int
jb
pop
pop
cmp
cmp
cmp
dec
test
xor
lret
sbb
pop
inc
xor
outsb
mov
clc
mov
mov
mov
fnsave
jl
inc
mov
xchg
xchg
orl
xor
ljmp
cwtl
sub
sbb
push
mov
nop
fidivl
lahf
and
mov
inc
add
cwtl
jge
push
loop
pop
mov
sbb
mov
sbb
cli
icebp
mov
xor
pop
sbb
lds
xorb
mov
divl
hlt
js
and
add
inc
lea
pop
and
test
pop
incb
cmp
mov
pop
jl
or
aad
xchg
popa
aas
mov
jp
ret
dec
fiadds
pop
jl
push
cmc
mov
lcall
fidivrl
push
add
fdivrl
adc
fistps
sbb
cmp
jle
cmpl
jg
pop
mov
lahf
or
mov
orb
mov
inc
sub
sub
cmp
push
inc
iret
sahf
jge
orl
adcl
out
imul
pop
mov
sahf
inc
xchg
add
adc
push
pop
jnp
test
fwait
mov
mov
dec
lods
sarl
pop
loopne
and
push
fcompl
pop
cmpsb
js
jle
jle
xor
sahf
cmp
cmp
sti
mov
ret
or
pop
pushf
cmp
jmp
jmp
jg
clc
pop
call
dec
ja
jmp
pushf
jb
add
push
pop
sub
es
mov
inc
ss
mov
jp
adc
fisubl
pushf
cltd
push
adc
inc
mov
add
dec
jmp
push
push
pop
sbb
fs
mov
negl
pop
and
stos
arpl
rcrl
inc
sbb
dec
jmp
pop
inc
inc
sbb
call
fistps
hlt
push
mov
mov
imul
push
shrl
lahf
lock
inc
inc
lret
mov
mov
jg
sub
or
adc
pop
lds
ds
sti
cmp
cwtl
mov
mov
fiaddl
fwait
stos
iret
ret
arpl
inc
pusha
aas
jnp
loop
cld
leave
arpl
cmp
or
negb
mov
pop
jge
push
rclb
and
xor
fdivrl
sahf
inc
test
negb
inc
adc
adc
pop
js
sbb
sbb
fmuls
mov
xchg
sbb
cmp
xchg
ficomps
cmp
stos
sbb
bound
cs
lret
and
jmp
pop
jmp
mov
orl
adc
cli
mov
ficomps
xor
mov
mov
pop
pusha
inc
cld
pushl
fdivrp
xlat
clc
pop
repz
nop
xchg
dec
pop
xchg
fwait
push
push
data16
sbb
jnp
push
pop
jbe
lahf
mov
movsl
xchg
sub
stos
cmp
mov
jnp
shll
mov
sahf
repz
cmp
fildl
mov
pop
push
stos
push
les
les
pop
mov
xchg
adc
and
sbb
inc
mov
cwtl
pop
or
adc
or
mov
pop
cmc
pop
mov
rcrb
inc
cmp
add
mov
popw
xchg
cmp
push
mov
pop
lcall
cmp
fucomi
mov
jl
xlat
push
pop
mov
or
push
mov
jae
lds
sub
pop
popa
sbb
stos
aam
sbb
lods
cltd
mov
jno
mov
in
sbb
popf
pop
lds
cmp
sti
jmp
pop
mov
cmc
sbb
mov
cmpl
push
sbb
jnp
aad
add
mov
pushf
jo,pt
pop
scas
sub
mov
sarl
sahf
pop
cmp
push
hlt
pop
mov
sbb
fbstp
jg
mov
add
repnz
fdivrl
pop
clc
iret
out
je
shlb
loopne
xchg
mov
adc
jge
sahf
gs
sbb
pop
notb
jle
mov
jb
clc
cld
dec
je
pop
mov
incb
dec
idivb
mov
sub
cmp
mov
cmp
insb
pop
mov
mov
mov
xchg
imull
cmp
inc
xchg
push
pop
jmp
push
add
mov
fcompl
sbb
push
add
adc
repz
pushf
data16
fstpt
ret
fmul
fcompl
popa
jb
cli
pop
and
sbb
js
loopne
cs
cmp
or
notb
sti
arpl
fcmovnb
sarb
sub
sub
and
and
pop
lahf
push
pop
icebp
popa
outsl
sbb
sub
xor
sbb
push
inc
pusha
filds
faddp
nop
xchg
lcall
and
popa
lahf
fwait
lcall
jnp
notb
cld
loop
sahf
ret
ljmp
mov
mov
and
rorb
pusha
inc
xchg
xchg
xchg
and
mov
std
iret
lcall
cmp
xchg
xor
icebp
mov
jg
repz
cld
sti
lahf
pop
push
xchg
add
xchg
xchg
cwtl
repz
loop
inc
pop
fistpll
pop
clc
popa
lcall
pop
repz
pop
pop
popw
mov
pop
mov
mov
jge
out
jb
ficompl
ret
lea
stos
out
mov
cmp
daa
push
push
call
inc
lea
pop
inc
add
jb
cmp
cmc
adc
cmp
ss
add
ds
fidivrs
adc
jnp
dec
rcrb
mov
mov
insl
mov
and
mov
push
rolb
add
sbb
out
daa
mov
orb
sbb
mov
push
mov
aas
loopne
js
jp
xchg
pop
jnp
xor
idivl
fs
mov
fcoms
xchg
pusha
sub
xor
sub
cld
cmp
lahf
inc
pusha
mov
jnp
pop
push
jp
lret
sub
pop
sub
mov
enter
fidivrl
cmp
mov
adc
and
pop
adc
jl
rcll
mov
mov
sbb
jl
lock
aas
xchg
sbb
mov
cmp
pusha
pop
inc
cli
gs
popa
push
fisttps
dec
jge
pop
inc
xchg
popf
add
jge
out
ficomps
add
js
lret
or
clc
inc
je
push
pop
cmpb
sbb
mov
shll
pop
and
test
lods
add
gs
mov
jmp
mov
pop
sbb
cmp
mov
add
inc
mov
clc
sub
fcmovu
lahf
sub
jp
in
mov
push
adc
pusha
pop
push
das
inc
sbb
add
sbb
fisubs
pop
sbb
data16
aad
icebp
xchg
fistpl
cmp
pop
cmpl
mov
lahf
xchg
push
repnz
cmp
adc
push
loopne
out
cmp
pop
subb
cmp
fdivrl
fdivrs
cmpb
stos
sub
jno
js
cmpsb
dec
dec
andb
inc
xchg
push
pop
push
fidivrs
add
cmp
cmp
mov
cmc
push
mov
sti
or
loopne
inc
ret
mov
mov
push
push
dec
cmp
sti
inc
lret
pop
add
mov
xchg
dec
rorl
sbb
pop
sub
jp,pt
test
inc
pop
jno
and
pop
add
ds
popa
inc
movsb
pop
inc
push
sub
inc
bound
idivb
pop
clc
pusha
rcrb
pop
inc
sub
sbb
in
xchg
or
and
xchg
xchg
clc
cwtl
pop
pop
cmp
and
loopne
sbb
add
jge
mov
test
inc
and
cmp
pusha
sbb
and
cwtl
mov
cld
mov
repnz
cmp
or
adc
clc
xchg
cli
sbb
dec
sub
pushf
fdivl
xor
inc
cmp
sub
jl
adc
and
sub
int3
cmpl
cmp
std
ds
in
pop
mov
clc
push
je
sbb
out
sbb
and
and
mov
mov
dec
inc
mov
cmpsb
adc
clc
fcom
daa
aas
sbb
rolb
lea
push
ficoml
fistps
test
mov
cmp
addb
addb
pop
cld
ds
fwait
cwtl
mov
xor
jecxz
push
jle
and
inc
fists
mov
xchg
push
mov
pop
cld
mov
fbstp
pop
fdivrl
flds
pop
xchg
call
add
clc
aas
imul
out
lods
pop
mov
jp
sbb
mov
adc
inc
lcall
jg
fwait
lahf
repnz
pushf
mov
lds
pop
sti
rcr
push
ja
jge
mov
inc
add
cmp
mov
aas
fcoml
pop
mov
and
ficomps
test
int
inc
xlat
lret
fcmovnu
stc
sub
lds
adc
repz
cmp
and
xchg
aas
mov
pusha
pop
pop
adc
cmp
negb
outsl
push
loopne
pushf
sarb
cmp
inc
lcall
and
ds
sbb
jl
stc
popa
mov
dec
push
rcll
mov
jle
sub
clc
loopne
je
sbb
cmp
inc
testb
mov
scas
mov
cmpsb
cwtl
adc
add
pop
push
cmp
fwait
inc
pop
scas
dec
aas
cmp
cwtl
pop
rorb
pop
out
push
filds
aam
lcall
jl
aas
jge
pop
mov
lods
lahf
mov
pop
outsl
or
jns
mov
jbe
pop
fnstsw
mov
jbe
or
sahf
push
mov
sbb
mov
sbb
lret
sub
mov
xchg
sti
cmp
pop
cmpb
dec
mov
cmp
jns
cmp
js
push
ret
mov
xchg
jle
cmp
push
pop
jp
cwtl
loop
pop
scas
adc
arpl
lds
pop
cwtl
pop
lcall
jp
in
inc
enter
fisubrs
pop
loopne
jle
pop
xchg
daa
dec
push
orb
push
sbb
and
xor
iret
jle
filds
push
arpl
dec
dec
js
jl
std
xchg
lcall
cwtl
push
mov
fwait
pop
loopne
in
repnz
pushl
outsb
pop
aas
ds
jle
cld
mov
cmpsl
cmp
cmp
pop
cltd
loop
lcall
and
push
pusha
pop
pop
stc
insl
jl
mov
mov
fs
sti
pop
add
clc
ds
mov
mov
ret
cld
aas
jle
lock
adc
cwtl
pusha
orb
cmp
pop
xor
clc
idivb
mov
bound
js
xchg
test
in
xchg
push
sbbb
fwait
inc
and
cli
out
into
fistpll
mov
sbb
push
fimuls
pop
rolb
jno
shlb
dec
sarl
mov
and
jl
cmp
and
pushf
mov
adc
pusha
popa
pop
push
push
xor
aaa
mov
xor
push
sub
and
fisttpl
fcomps
mov
and
xchg
fiadds
sti
sbb
pop
in
cld
jo
jmp
sub
je
int3
and
cmp
js
push
pusha
dec
and
and
faddl
sti
dec
adc
lahf
push
fiaddl
rcrb
jl
and
mov
pusha
cmp
and
insl
xor
mov
mov
inc
cld
js
add
jle
stos
dec
mov
sbb
pusha
dec
sub
das
sbb
mov
inc
and
lcall
push
ficomps
sbb
cmp
hlt
mov
repnz
lahf
pop
inc
mov
call
fdivrs
sbb
test
and
shlb
sbb
cwtl
jge
cwtl
add
cmp
les
mov
pop
cmp
pusha
pop
and
adc
pop
cmpl
mov
iret
rcll
adc
fisubs
cmp
adc
cld
or
cmp
mov
je
mov
xchg
sbb
mov
mov
and
mov
pushf
inc
inc
sbb
mov
xchg
pusha
lahf
insb
pop
faddl
addb
pop
pop
sahf
jb
add
jp
stos
sahf
je
cmp
xlat
xchg
pop
ficoml
sti
pop
lahf
pushf
cmp
push
mov
inc
jle
pop
dec
inc
je
loopne
leave
lahf
fisttpl
pop
cltd
fwait
daa
cmp
inc
xor
xorb
cmpsl
mov
pop
js
jb
popl
inc
sub
dec
lock
sub
cmp
fdivrl
sub
std
pusha
pop
pop
add
and
sbb
mov
cmpsl
mull
or
pop
pop
xchg
frstor
mov
sbb
mov
or
and
jnp
sbb
loopne
xchg
xor
dec
leave
mov
pop
popa
sti
dec
cltd
sbb
rorb
pop
iret
js
sar
inc
lcall
inc
xor
xchg
jle
fwait
jge
sti
jb
and
cwtl
cmp
fadds
mov
sbbl
cmp
jnp
pop
sub
int
cmp
mov
mov
iret
in
je
xchg
clc
jp
push
mov
pop
outsl
inc
push
jl
xor
aas
inc
mov
mov
rolb
lods
sbb
push
inc
pop
jo
jae
dec
mov
ficomps
jp
mov
pop
sub
hlt
js
inc
push
mov
fsubl
inc
pop
clc
pop
insb
xor
xchg
test
xchg
lock
pop
sub
sahf
loopne
mov
cltd
je
mov
stos
mov
ljmp
mov
cmp
js
ror
cmp
cmp
jo
or
or
mov
pop
sub
fwait
and
dec
adc
sti
pop
mov
negb
pop
xchg
jle
jbe
pop
mov
stos
mov
sbb
cmp
mov
push
hlt
sahf
fadd
jp
pusha
dec
push
cmp
jge
mov
test
pop
add
push
hlt
sti
repz
cmpl
shll
add
pop
mov
cmp
jle
sahf
rolb
test
roll
sub
add
sahf
repz
lcall
mov
icebp
rcr
sbb
add
loopne
fstps
mov
addb
jp
lea
pop
fwait
leave
movsb
sti
minps
jl
mov
incb
mov
repz
xchg
fadds
and
mov
mov
jle
pop
test
icebp
push
adc
pop
jg
push
sar
cmp
sbb
cmp
push
cmp
add
ds
pop
cmp
popa
pop
fistpll
icebp
enter
sub
mov
int3
fistpll
inc
mov
xchg
mov
pop
inc
fwait
xchg
outsb
mov
and
xchg
repz
xchg
in
pop
mov
cmp
js
loopne
add
xchg
and
push
xchg
inc
int
pop
cmp
dec
mov
sbb
dec
cmp
dec
cmpl
std
repz
mov
and
lahf
cmp
cmpsl
mov
jl
cmp
in
imull
mov
in
loopne
jp
pop
adc
addr16
jnp
sbb
clc
ds
loopne
push
inc
pushf
inc
and
pop
sbb
sub
mov
lds
jg
arpl
loope
lcall
pop
xchg
arpl
pop
scas
sbb
jo
mov
xchg
mov
fcomps
mov
add
ljmp
dec
jge
fistpll
jle
dec
sahf
cmp
aad
lcall
cmp
repnz
mov
dec
rcrb
pop
sbb
mov
aas
adc
mov
mov
push
pop
jg
or
popa
pushf
xchg
mov
daa
rcrb
sahf
mov
pusha
and
cld
fdivrs
push
pushf
inc
rol
mov
xchg
pusha
mov
push
gs
pop
loopne
aaa
loope
cmp
jp
inc
jl
xchg
sbb
lret
cmc
mov
xor
or
aas
dec
and
fwait
jl
jg
loopne
mov
out
pusha
out
cmpsl
pop
sub
outsl
cmp
mov
mov
inc
mov
fadds
mov
jle
mov
dec
inc
pushf
mov
mul
cmp
pop
inc
in
pop
mov
ret
fmuls
and
jp
pop
sub
sahf
jle
jp
inc
int3
or
aad
mov
and
les
stos
sbb
movb
popa
mov
sbb
repz
js
sub
mov
lahf
lcall
xchg
je
clc
push
lcall
cmp
add
daa
mov
aas
mov
mov
jp
mov
pop
dec
fiadds
cmp
cmp
or
xchg
xchg
mov
push
outsl
clc
push
pop
out
push
les
pop
sbb
stos
hlt
jl
ljmp
fcomp
fdivrl
sahf
cmp
mov
pop
xchg
ljmp
pushf
js
hlt
inc
dec
push
mov
jge
jae
jnp
sar
lahf
or
cmp
mov
mov
xchg
pusha
sbb
mov
inc
inc
flds
adc
orl
rcr
fistps
or
cwtl
hlt
into
mov
pop
sub
test
cli
pusha
pushf
sbb
and
fstl
lahf
jle
sub
lds
icebp
mov
iret
mov
fimull
adc
popf
xchg
fistpl
push
sarl
sub
idivl
jg
cmc
lcall
test
pop
fadd
ja
lret
jl
inc
push
cmp
xor
mov
arpl
imul
cmp
mov
pop
pop
cwtl
xchg
ret
and
pop
pminsw
adc
fwait
shl
or
idivl
cmp
dec
cmp
je
je
scas
mov
sahf
stc
hlt
push
inc
adcb
mov
adcb
pop
js
mov
cmp
test
xchg
xchg
pop
jl
jb
cmp
push
pop
mov
mov
sbb
and
jp
jecxz
mull
push
and
push
fstpt
jge
add
cwtl
iret
mov
sbbb
jecxz
dec
jg
sbb
sahf
and
je
xor
cmp
cmp
cmpsl
cmp
cmp
pop
js
mov
inc
inc
cmpsw
pop
and
lcall
and
fwait
jge
lret
stos
dec
mov
fsubs
pop
rolb
dec
mov
cmp
sahf
dec
iret
das
out
inc
push
scas
jl
or
cmp
loopne
adc
mov
mov
xchg
pop
pushf
scas
enter
inc
ja
xchg
decb
cmp
sbb
nop
cmp
sti
icebp
sarb
les
lret
dec
cmp
sub
bound
pop
loope
cmp
pop
pop
mov
pop
inc
lea
mov
cmpsl
adc
cld
and
and
add
pop
sbb
jnp
and
mov
lock
bound
cwtl
negb
mov
pop
dec
mov
cmp
mov
pop
mov
inc
xchg
sbb
mov
inc
sub
pop
xchg
sub
clc
je
xchg
sbb
mov
hlt
notb
aas
inc
lods
adc
jnp
fidivrl
pop
es
int
fsub
dec
idivb
sbb
pop
pop
cmc
aas
pop
jge
cwtl
hlt
xorb
xchg
loop
jo
xchg
cmp
cmp
and
mov
int
add
arpl
xor
icebp
xchg
fs
mov
push
out
cmp
mov
adc
sbb
shl
rclb
cmp
addl
inc
xchg
push
pop
bound
cmp
jb
lcall
dec
mov
dec
push
hlt
jl
cmp
pop
jg
mov
adc
mov
in
js
fistps
xor
loopne
cmp
fcmove
bound
xchg
cmp
mov
inc
outsl
not
arpl
xchg
mov
das
ret
mov
xchg
insl
adc
xchg
lock
in
fmuls
std
jno
lds
dec
cli
mov
shlb
lcall
xchg
mov
cli
sub
jp
push
pop
lcall
mov
mov
sbb
clc
fistpll
jle
ds
pop
xor
xchg
lcall
mov
fxch
lock
pop
cmp
mov
push
ret
daa
cmc
jmp
sbb
jmp
and
fwait
rcrb
pop
loop
adcb
push
cmpl
cmp
shll
mov
lds
mov
arpl
pop
cmp
inc
test
pop
add
pop
inc
movsl
in
mov
fucomi
nop
loopne
xlat
ljmp
rcrl
mov
xorl
sub
add
push
andl
jmp
mov
xchg
aas
incb
xchg
cmpl
ror
cltd
push
clc
adc
jno
lds
shll
lds
roll
shll
and
testl
lds
rol
mov
xchg
aas
incb
xchg
cmpl
sbb
push
xchg
inc
mov
mov
call
fistps
into
sbb
cmp
pop
mov
cmp
jg
js
in
cmp
push
sbb
out
fnstcw
lds
ljmp
mov
mov
fwait
sbb
xlat
inc
jl
lds
pop
pop
cmpl
ficomps
sbb
mov
mov
lcall
aas
pop
xor
mov
loopne
xchg
sub
mov
fisubl
aas
sahf
sbbl
mov
cltd
jnp
fisubs
push
sbb
cltd
dec
hlt
xchg
aam
mov
xchg
cs
pop
les
sbb
jb
jge
cwtl
shlb
add
xchg
out
mov
push
stc
cwtl
leave
sti
add
xor
pop
mov
shr
cwtl
aas
mov
or
sbb
popl
rorb
jg
adc
js
xlat
pop
cmp
cmp
insb
pusha
aad
xchg
pop
xchg
xchg
fbld
or
xor
pusha
mov
dec
mov
ret
cmp
loopne
clc
pop
add
xchg
mov
jp
pop
xorb
aam
mov
mov
jno
xor
into
std
loop
aas
outsl
xchg
pop
lds
xchg
into
xchg
pop
jp
pop
lock
enter
into
and
dec
and
jb,pt
js
sbb
cltd
sbbb
jge
aas
cwtl
lcall
ss
lods
sub
mov
dec
inc
lahf
aas
cmp
mov
jl
jp
pop
mov
adc
xchg
adc
jb
jge
cmp
fadds
mov
addr16
push
push
out
or
into
nop
jns
xor
ret
lds
lds
inc
xchg
out
rcl
mov
mov
sbb
je
cmp
mov
enter
enter
mov
cld
jl
mov
adcb
mov
loop
aaa
jb
xchg
and
movb
add
addr16
sbbl
pop
pop
les
or
fs
push
fldt
pop
sbb
cmpl
xchg
out
mov
mov
clc
jmp
jae
movsl
add
out
mov
insb
xchg
divb
into
inc
adc
ffreep
popf
push
mov
stos
pop
cmc
xchg
movsl
fidivrl
std
popf
test
loop
stos
and
lds
subl
lahf
lds
pushaw
scas
in
jmp
js
arpl
sbb
dec
ficomps
sbb
inc
roll
inc
and
pop
adc
fcomps
or
sarb
fistps
mov
fldt
mov
mov
mov
pop
cmp
push
jns
push
xor
pop
pop
xchg
mov
cmp
adc
cmp
ds
inc
loopne
cwtl
fistpl
pushf
ret
loop
das
int3
hlt
in
adc
or
adc
and
adc
xlat
icebp
sbb
pusha
loopne
clc
dec
xlat
inc
orb
jle
sub
dec
add
mov
and
das
cmpsb
fnstenv
inc
xlat
cmp
cmp
mov
bound
mov
mov
adc
sub
leave
movsl
incb
test
push
adc
stc
add
mov
fdivr
addr16
cmp
data16
or
dec
adc
rcr
int3
push
dec
lock
inc
dec
xchg
jbe
js
xchg
jg
mov
and
fadd
clc
loop
sbb
adc
pop
into
test
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
rcrb
push
push
mov
cwtl
ds
cmp
jbe
and
js
mov
pop
fdivs
clc
cld
jp
mov
aam
pop
xchg
repz
addr16
js
aas
jno
xchg
dec
mov
mov
in
inc
sbb
cmp
into
pop
mov
cld
jp
xor
std
jp
shl
dec
push
js
mov
clc
pop
push
sbb
pop
and
les
mov
pop
loop
js
and
mov
clc
xchg
dec
sbb
jp
nop
pop
fmulp
out
cmp
js
dec
cwtl
std
out
xchg
dec
fdivr
jp
nop
sbb
cmp
pop
push
mov
pop
std
jp
nop
cwtl
adc
mov
clc
leave
cmp
out
pop
stos
mov
cmp
adc
mov
cmp
sbb
out
cmp
cld
jp
nop
js
inc
cwtl
leave
mov
push
clc
mov
xchg
ds
cmp
dec
dec
into
push
clc
imul
imul
clc
lret
cmp
pop
mov
imul
jp
jp
mov
mov
outsl
aaa
mov
aaa
cmp
imul
aaa
cli
dec
pop
xchg
jnp
jl
fwait
cmp
lcall
icebp
push
jle
mov
cmpsb
incb
enter
std
out
xchg
in
popaw
pop
mov
outsl
mov
insb
mov
mov
aaa
aas
out
out
mov
aaa
ds
jnp
mov
cld
js
cmc
dec
leave
out
jnp
pop
or
jnp
les
cld
mov
or
fbstp
jle
jne
push
fwait
aam
mov
mov
jb
in
not
mov
ror
gs
into
test
gs
sbb
imul
mov
dec
imul
enter
sbb
imul
lds
mov
adc
sub
popa
cmp
inc
mov
dec
clc
xor
push
pop
popa
pop
jbe
nop
pop
pusha
mov
lods
xlat
mov
decb
xor
push
mov
mov
pushf
lods
nop
mov
mov
fisttps
popf
stos
adc
inc
pop
fdivrl
mov
je
xlat
mov
dec
pop
out
popa
xor
adc
cmp
cmp
into
cmp
ja
cmp
movsb
cmp
cmp
gs
out
xchg
imul
mov
arpl
push
dec
mov
push
daa
pop
adc
stos
mov
xchg
pop
jo
icebp
inc
cmp
cmp
into
cmp
rcrl
into
pop
pop
push
pop
popa
pop
xchg
dec
pop
std
cli
pop
mov
pop
std
outsl
jae
push
cld
add
mov
cmp
fwait
dec
pop
enter
ret
add
out
ret
rol
inc
and
ret
cmpsb
jge
mov
call
push
push
clc
loop
fcoms
push
fsubs
popa
fdivrs
mov
popa
js
jg
inc
mov
add
insl
mov
je
lahf
adc
cld
add
pop
add
push
int3
subb
nop
cld
iret
sbb
js
idivb
std
mov
adc
fcoms
push
fsubrs
cwtl
decl
push
mov
fiadds
xchg
push
cli
add
idivb
into
cltd
inc
xchg
nop
std
loopne
mov
sbb
pop
and
lahf
mov
sarb
adc
fwait
xchg
out
mov
xor
js
std
insb
pop
div
andb
jae
cmp
fistps
add
mov
repz
mov
addl
and
clc
inc
insl
mov
call
testl
loop
enter
inc
cmp
test
sub
enter
jnp
sbbl
imul
xchg
pop
dec
nop
mov
xchg
lock
mov
mov
mov
xchg
xchg
add
roll
xorl
clc
sbb
aaa
sub
push
jns
sti
pushf
dec
sbb
or
cmp
fdivrs
cmp
xchg
xor
jns
bound
fistpll
ret
data16
pop
pop
xchg
mov
bound
out
mov
mov
imul
push
pushf
dec
jo
sbb
cltd
faddl
xchg
aaa
nop
dec
cs
xor
clc
pusha
mov
pushf
cmp
enter
mov
jecxz
jmp
jnp
adc
jge
add
jns
insb
jbe
ficoms
mov
inc
mov
test
popl
and
mov
mov
cmp
jne
push
jmp
fisubrs
add
pop
cmp
pop
loop
shll
lcall
cmp
push
push
fldl
mov
cmp
clc
jns
xor
mov
pop
add
xchg
xchg
leave
ficompl
mov
lcall
outsl
incl
pop
les
mov
add
in
lcall
xor
cmp
sbb
jl
mov
jnp
fadd
ficomps
mov
aas
ds
cmp
sti
lods
inc
mov
loopne
cmp
out
insb
adc
xchg
or
xor
aaa
push
fstpt
negb
iret
dec
cwtl
fs
pop
clc
push
ss
cwtl
mov
sub
add
mov
xchg
sbb
mov
shrb
ds
lods
cld
imul
cmp
movsb
flds
shrb
cmp
call
cmp
mov
mov
jb
cli
ljmp
dec
add
or
lea
loop
sbb
or
inc
dec
inc
fstps
dec
cmp
int3
jg
pop
cmp
push
and
daa
ficoms
cmp
cmp
movsl
adc
cwtl
cmp
mov
adc
fildl
cmc
mov
js
jne
fsubrs
xchg
jp
xorl
aam
js
test
cmp
movsb
jne
mov
and
dec
mov
pop
push
pop
jp
mov
cmp
movsb
mov
fidivrs
cmp
push
xchg
fstpl
imul
xchg
xor
in
aas
add
aaa
insl
add
and
or
inc
add
fisubrl
push
les
xacquire
jp
and
cmp
pop
ret
or
inc
and
pop
jl
inc
and
mov
cmp
lret
idivb
jo
arpl
mov
pushf
ret
js
fsubs
cmp
repnz
mov
xchg
sti
outsb
js
mov
inc
mov
or
imul
cmpsl
push
cmp
ljmp
mov
add
into
in
movb
inc
mov
cmp
fiadds
aas
jle
sbb
in
jp
aaa
hlt
inc
cmp
xchg
loope
mov
mov
out
fisubs
pop
jl
arpl
xor
add
cmp
inc
and
inc
push
ficomps
cmp
je
mov
pop
les
xchg
mov
sarl
out
fdivl
gs
jae
push
shll
in
pusha
fs
xor
popa
jmp
cmp
outsl
aaa
push
jns
dec
cmpsb
iret
data16
scas
cmp
fs
pop
hlt
mov
mov
int
cli
scas
mov
popa
imull
push
xchg
je
add
jns
mov
cmp
clc
mov
xorl
cmp
add
jbe
dec
jns
cmp
inc
jbe
adc
cmp
mov
aaa
mov
mov
pop
or
dec
out
push
testb
mov
add
xlat
inc
mov
jb
mov
jae
xchg
push
aas
pop
cmp
cmp
stos
js
push
sub
arpl
je
mov
ret
or
inc
ja
mov
sub
dec
xor
and
add
sti
jnp
jle
mov
fidivrs
jae
repz
pushf
sbbl
aas
inc
incl
movsb
cwtl
orb
leave
mov
rorb
ret
mov
fidivrs
test
pop
cld
mov
mov
xor
push
push
mov
mov
jne
inc
lds
ljmp
mov
mov
or
cmp
movsl
inc
or
xlat
test
or
stos
sbb
nop
cmp
cwtl
add
negb
push
jp
ret
add
cmp
pop
loopne
sub
add
mov
mov
mov
hlt
aas
insb
cmp
pop
pop
cli
imul
jns
and
filds
mov
loop
mov
mov
lods
ret
inc
inc
mov
add
inc
mov
inc
adcb
jmp
mov
cmp
jecxz
push
popf
jg
cmpb
mov
mov
inc
stc
cltd
jl
daa
popa
xchg
mov
mov
add
subb
repnz
ss
ja
cmp
imul
pushf
call
loopne
lahf
jo
push
rcrb
imul
mov
push
cmp
je
into
adc
mov
pop
xor
jns
inc
cmp
leave
push
sbb
lds
shrb
jge
cmpb
shlb
fs
pop
cs
iret
out
pushl
cmp
dec
lea
lret
pop
ljmp
mov
cmp
sub
jecxz
sti
jo
leave
iret
loope
jns
test
and
mov
leave
psraw
adc
inc
stos
pop
mov
cmp
notb
mov
mov
repz
jns
xchg
jl
setno
ja
push
pusha
leave
pavgb
jb
std
sti
add
or
mov
jle
pop
fisttps
push
pop
add
les
sbbl
clc
adc
add
adc
iret
shlb
clc
cmpsl
mov
aas
and
enter
call
negb
mov
mov
lea
mov
or
mov
xlat
pop
mov
xlat
xchg
lahf
sub
xor
add
hlt
mov
or
jnp
ja
add
push
mov
xor
sbb
dec
and
in
std
mov
adcb
addr16
dec
jl
lds
pusha
add
mov
mov
pop
in
adc
addl
or
jl
mov
test
lcall
inc
leave
test
rolb
or
jae
cmp
cmp
dec
pop
add
mov
into
push
clc
aas
push
mov
or
pop
xchg
adc
repnz
jmp
leave
das
jp
push
shll
pmulhuw
xchg
andl
xchg
sbb
push
sti
aam
push
mov
out
mov
cmp
pop
pop
xlat
pop
stc
mov
add
enter
icebp
inc
mov
or
adc
faddl
cmp
les
mov
sbb
dec
into
js
popf
jb
in
mov
jo
into
pop
int
js
dec
jl
add
jns
jb
mov
inc
push
jo
out
fsubs
int3
xor
popf
inc
into
xor
jle
mov
and
ljmp
les
lea
dec
cmp
inc
rorl
or
sarl
inc
dec
imul
andb
aas
adc
mov
dec
call
hlt
inc
addl
pop
mov
js
repz
iret
jp
mov
test
dec
clc
cli
bound
mov
gs
mov
or
jp
repz
jne
movsl
sbb
inc
popf
cmpb
lods
mov
sbb
mov
mov
sbb
mov
jg
mov
cltd
pushf
cmp
pop
movsl
adc
xor
mov
sbb
jo
inc
popa
int
iret
aas
in
push
popf
enter
fwait
jecxz
int
cmp
ds
int
pop
pusha
mov
outsl
shrb
dec
inc
mov
sahf
int
cld
stc
hlt
jecxz
pop
mov
mov
enter
stc
add
inc
add
mov
cmp
cmp
testl
pushf
jo
adc
cmp
add
rclb
test
add
les
jne
and
add
loop
repz
scas
mov
xlat
ss
mov
fsubs
mov
nop
sti
movsl
jl
lret
filds
movsl
test
mov
mov
lcall
dec
mov
push
and
mov
push
jne
pop
into
sti
mov
out
jns
fcompl
test
jae
adc
add
movsl
mov
into
xchg
dec
mov
fildll
or
add
clc
xor
sbb
sbb
xchg
lods
and
cmp
ss
jge
cmp
pop
or
add
cwtl
iret
je
les
bound
std
shr
nop
xchg
and
std
cld
inc
pop
xchg
outsb
pushl
jle,pn
mov
sar
jne
mov
bound
aaa
jns
hlt
mov
stos
pop
xchg
cmp
roll
add
lea
std
popa
clc
ffree
mov
jns
dec
enter
stc
mov
mov
enter
adc
add
mov
stos
clc
mov
add
mov
and
xchg
add
pop
out
hlt
fidivs
or
inc
sub
popf
stos
mov
mov
xchg
sub
mov
dec
mov
or
mov
rcrl
push
sti
pop
sbb
imul
cmp
mov
cmc
adc
pop
imul
inc
mov
enter
pop
pop
jecxz
lret
dec
mov
push
fidivl
dec
sub
loop
inc
mov
std
std
cltd
int3
sub
ja
adc
add
aaa
or
rol
movl
jnp
pop
int
dec
dec
js
fisubrs
sbb
rorl
jno
lret
lret
and
jns
sti
loope
out
enter
mov
mov
push
cld
adcl
lea
sar
sbb
xchg
xchg
add
sarl
adc
push
in
push
push
js
cmp
fwait
or
je
mov
jecxz
popa
arpl
rolb
js
aad
add
inc
lahf
sti
out
xchg
les
aaa
stos
js
or
je
insl
cmp
cmp
hlt
inc
mov
dec
arpl
add
or
into
fsubs
nop
sti
pop
xor
xor
mov
into
pop
mov
mov
mov
aas
ja
pop
mov
add
push
pop
sbb
std
mov
dec
shlb
mov
jg
or
repz
jle
inc
dec
pop
dec
pop
sbb
or
jl
dec
sti
cwtl
add
je
hlt
dec
cs
in
or
or
mov
enter
sarl
jno
popa
add
xlat
orl
add
add
mov
mov
xlat
mov
mov
push
sar
loope
jl
std
cmp
rorl
and
pushf
push
mov
mov
pop
pop
jb
jns
cmp
add
add
movsl
sti
aas
mov
dec
cvttps2pi
mov
aas
shll
push
add
popf
jnp
fwait
mov
adc
and
mov
jae
ds
mov
ljmp
fs
pop
clc
mov
pushf
loope
mov
sbbb
mov
pop
mov
and
mov
push
inc
jle
add
sub
adc
lret
dec
mov
in
cmpb
pusha
addr16
pop
sbb
mov
lds
pop
jns
inc
movsl
inc
popf
add
es
je
mov
imul
mov
rorl
push
shrb
mov
cmp
push
and
dec
addl
xchg
mov
test
lds
pushf
sbb
lret
or
enter
cli
jl
aas
xchg
and
jl
int3
xor
sbb
mov
iret
xchg
fidivrs
jne
pushl
int
push
pop
xchg
mov
insb
and
pop
test
imul
lods
xor
sti
mov
fistps
fstl
pop
push
mov
xor
cmp
add
pushf
inc
call
lea
jne
bt
pushf
pusha
sub
call
add
movb
lea
jmp
push
call
mov
jmp
call
add
push
cmp
mov
mov
jmp
add
cmc
pushf
mov
cmp
pushf
bt
sub
jmp
jmp
btr
bt
mov
shl
shl
or
add
mov
call
push
call
mov
jmp
pushl
push
jmp
mov
push
pushl
mov
push
push
mov
pushl
pushl
pushf
mov
jmp
movb
mov
call
test
btc
movzww
push
bt
cmc
call
mov
call
adc
bsf
movsbw
mov
call
aaa
rcr
btc
rcr
mov
stc
mov
push
stc
cmc
jmp
mov
pushf
movb
push
pushf
mov
jmp
call
pushf
push
push
mov
mov
call
rol
shl
add
cmc
bswap
rol
lea
jge
movsbl
push
mov
lea
setp
inc
jmp
mov
mov
add
movb
mov
call
call
add
call
call
pusha
movw
mov
mov
push
push
movb
lea
jmp
call
mov
mov
mov
pushf
mov
jmp
push
movl
pushf
push
movb
pusha
lea
jmp
aas
mov
cmp
dec
clc
mov
push
and
xor
cmp
mov
cmc
add
cmp
pushf
pushf
shld
pusha
mov
pushf
mov
lea
jo
pushf
push
pusha
pushl
popl
pushf
movl
lea
jmp
jmp
pushf
div
lea
ja
pushf
push
mov
pusha
pushf
mov
pushf
movw
mov
pushf
popl
pushf
mov
pushf
mov
pushl
popl
pushf
mov
lea
jmp
lea
jne
lea
or
xorb
movzbw
pop
push
pushf
lea
jmp
mov
call
mov
push
lea
jne
pushf
push
pushl
popl
movb
lea
jmp
mov
pushf
pusha
lea
jmp
pusha
jmp
push
call
push
mov
jmp
mov
call
push
shrd
btr
jmp
bt
add
pusha
mov
jmp
mov
pushf
push
push
lea
jmp
rdtsc
mov
bts
xor
mov
cmp
clc
add
call
mov
pusha
movw
movb
lea
jmp
movl
add
test
push
cmpsb
pop
add
stos
pop
add
movsb
pop
add
lods
pop
add
test
pop
add
stos
pop
add
sbbl
movsb
pop
add
pop
add
movsl
pop
add
lods
pop
add
cltd
pop
add
pop
add
cmpsl
pop
add
mov
mov
pop
add
test
sti
test
push
test
adc
cltd
pop
add
movsl
pop
add
stos
pop
add
pop
add
mov
pop
add
pop
add
cltd
pop
add
pop
add
test
pop
add
xchg
pop
add
movsb
pop
add
cltd
pop
add
lods
pop
add
movsl
pop
add
cwtl
pop
add
cltd
pop
add
cltd
pop
add
xchg
pop
mov
stc
stos
pop
add
pop
add
pop
add
lods
pop
add
xchg
pop
add
pop
add
pop
add
stos
pop
add
xchg
pop
add
test
add
pop
add
cwtl
pop
add
lods
pop
add
pop
add
movsb
pop
add
lods
pop
add
lods
pop
add
xchg
pop
add
test
add
test
mov
test
mov
pop
add
cltd
pop
add
sbbl
xchg
pop
add
mov
pop
add
stos
pop
add
pop
add
lods
pop
add
mov
pop
add
test
mov
mov
pop
add
lods
pop
add
lods
pop
add
test
rcrl
pop
add
lods
pop
add
cmpsb
pop
add
pop
add
xchg
pop
add
cmpsl
pop
add
cltd
pop
add
test
pushf
mov
add
test
in
lahf
pop
add
mov
xor
pop
add
mov
movl
add
test
cmc
movsb
pop
add
cwtl
pop
add
stos
pop
add
test
jmp
test
mov
rcrl
pop
add
pop
add
mov
in
pop
add
mov
adc
pop
add
pop
add
mov
pop
add
movsl
pop
add
mov
shrb
add
mov
adc
pop
add
stos
pop
add
mov
mov
test
and
pop
add
test
sbbl
add
mov
imull
pop
add
pop
add
pop
add
test
daa
mov
scas
scas
pop
add
stos
pop
add
mov
mov
xchg
pop
add
lods
pop
add
mov
lcall
add
pop
add
mov
add
xchg
pop
add
xchg
pop
add
mov
pushf
mov
add
scas
pop
add
mov
daa
mov
mov
mov
pop
add
mov
mov
pop
add
lea
daa
mov
push
cmpsb
pop
add
test
pop
add
lods
pop
add
xchg
pop
add
mov
lods
mov
pop
add
lahf
pop
add
test
in
lahf
pop
add
scas
pop
add
lods
pop
add
lods
pop
add
test
add
test
inc
mov
push
scas
pop
add
test
lods
mov
pop
add
pop
add
stos
pop
add
pop
add
pop
add
lea
push
cmpsb
pop
add
test
pushf
mov
add
lods
pop
add
pop
add
test
add
cltd
pop
add
pop
add
cwtl
adc
add
pushf
pusha
mov
push
push
movl
movb
lea
jmp
call
shr
inc
cmp
mov
btc
bsf
add
pushf
call
jmp
pushl
pushf
pushl
popl
mov
push
mov
lea
jmp
call
jmp
movzbw
test
mov
test
mov
call
call
pushf
mov
stc
cmc
call
mov
call
pusha
pushf
popl
pushf
call
push
push
mov
call
mov
add
mov
bswap
setle
not
not
pusha
not
lea
jnp
dec
lea
pushf
and
btc
pop
movsbw
mov
pusha
bt
cmc
pushl
add
call
mov
push
pushf
popl
call
jmp
clc
not
pushf
stc
cmp
bt
and
pushf
pusha
call
bt
cmp
sub
call
stc
rol
jmp
jmp
pusha
mov
pushf
mov
pushl
lea
jmp
mov
call
push
call
jmp
push
push
pushf
popl
pushf
pushl
popl
pushl
push
lea
jmp
mov
movb
pushf
pushl
popl
call
pushf
call
shr
push
pushl
mov
pushl
movb
pushf
popl
call
jmp
shl
call
mov
call
pushf
inc
pushf
shl
movsbw
sbb
lea
push
stc
test
or
add
xor
rol
clc
btr
mov
bt
stc
add
call
call
shr
pushl
movb
mov
mov
call
pushl
mov
pushl
lea
jmp
mov
aas
btc
mov
cmc
cmp
pusha
sub
clc
clc
add
pushf
jmp
add
movl
cmp
shrd
lea
jns
push
pushf
mov
jmp
mov
jmp
pusha
mov
pushl
push
call
cmp
add
pushf
pusha
pushf
mov
movl
movb
pushl
mov
lea
jmp
movb
pushf
popl
pusha
pushl
popl
movb
lea
jmp
jmp
mov
pushf
pushl
lea
jmp
not
call
push
push
pushf
mov
pushl
pushf
pusha
lea
jmp
pushf
pusha
pushl
popl
pushf
push
movb
lea
jmp
pusha
dec
bswap
mov
pushl
call
rol
movzbw
movzbl
or
add
mov
pushf
not
pusha
dec
dec
setnp
rol
rcr
and
setge
mov
bt
sub
pushf
pushf
mov
push
pushf
pushf
mov
lea
jmp
pusha
mov
jmp
pushl
jmp
test
bt
sub
pushf
stc
bt
xor
pushf
movl
call
pushl
repz
popl
call
mov
pusha
lea
jmp
jmp
pushf
popl
mov
pushf
call
shl
xchg
not
mov
shl
neg
movsbw
rcr
add
bt
pushf
sar
neg
pushf
pushl
jmp
mov
jmp
pushl
popl
push
push
mov
movl
movl
lea
jmp
call
mov
mov
pusha
mov
lea
jmp
stc
sub
bt
add
lea
js
pushf
pushf
pushl
popl
mov
mov
push
pushl
lea
jmp
mov
pushl
mov
pushl
ret
pushf
mov
movb
jmp
mov
push
lea
jmp
mov
inc
jmp
call
jmp
cmp
mov
pushf
clc
pusha
mov
sub
jp
cmp
clc
add
call
push
lea
pusha
dec
btc
and
cmp
btr
shrd
movsbl
mov
test
pushl
stc
call
mov
call
jmp
push
jmp
jmp
pushf
movb
mov
mov
jmp
mov
movb
jmp
call
call
jmp
push
jmp
cmc
lea
bt
add
clc
stc
bswap
bt
pushf
test
add
push
mov
clc
bswap
cmp
pushf
push
call
inc
lea
jle
push
inc
mov
cmp
call
call
movl
pushf
popl
jl
pushf
pushf
movb
pushl
popl
pushf
movl
pusha
lea
jmp
jmp
mov
call
add
jmp
jmp
not
dec
lea
neg
dec
add
adc
bt
bt
sub
call
jmp
mov
call
repz
popl
push
mov
dec
not
sub
rcl
push
pushf
stc
bt
mov
stc
mov
push
sar
btc
bt
push
mov
bt
jmp
movb
pushl
mov
movw
mov
mov
mov
call
jmp
jmp
jmp
pushf
call
call
sub
push
cmp
push
sub
pushf
dec
stc
xor
push
pushf
push
rol
movb
pushl
sub
pushf
cwtl
stc
sub
mov
jmp
daa
shl
mov
call
push
pusha
mov
pushf
movb
lea
jmp
jmp
pusha
mov
push
pusha
call
call
push
pusha
mov
mov
push
movb
lea
jmp
movsbw
inc
call
mov
stc
stc
jmp
pushl
popl
push
pushf
push
lea
jmp
call
lea
jnp
push
push
call
mov
pushf
jmp
pushf
mov
pushf
mov
pushf
jmp
pusha
call
push
inc
call
add
pusha
pushf
pushf
lea
jmp
add
bt
sub
pushf
pusha
pushf
mov
push
lea
jmp
pushf
mov
call
mov
pushf
mov
pusha
movb
lea
jmp
call
pushf
add
push
pushf
pushf
jmp
jmp
pusha
mov
mov
call
push
call
jmp
shl
dec
inc
mov
cmc
clc
pushf
add
test
call
mov
push
push
mov
mov
mov
mov
push
mov
jmp
jmp
jmp
call
pushl
popl
movw
pushl
pushf
lea
jmp
push
mov
push
lea
jmp
movw
pushf
cld
jmp
push
mov
pushf
jmp
movzbw
shl
mov
neg
pushf
inc
add
pushf
mov
push
movb
pushl
lea
jnp
mov
push
lea
jmp
push
movl
push
jmp
bswap
lea
sets
pusha
lea
pusha
dec
movzbw
push
bts
add
cmc
lea
movzbl
jmp
lea
cpuid
stc
sub
cmp
stc
push
stc
cmpl
pusha
mov
call
mov
push
lea
ja
push
call
sub
jmp
pushl
divl
movl
mov
push
call
mov
push
call
movl
pushf
push
mov
push
mov
movw
mov
lea
jmp
mov
jmp
jmp
mov
pusha
mov
movw
jmp
mov
push
mov
pushl
popl
call
mov
mov
push
mov
push
lea
jmp
and
bsf
mov
btr
pop
pusha
movzbw
mov
not
aam
rdtsc
not
mov
cld
das
mov
btr
dec
mov
xadd
mov
xadd
mov
inc
cld
cmp
inc
mov
movsbw
cld
mov
cld
mov
btr
cmp
mov
cmp
bt
cmc
bt
pushl
popf
mov
mov
pushf
pushl
ret
lea
pusha
movzbw
mov
call
pushl
popl
push
mov
lea
jmp
mov
pushl
mov
push
lea
jmp
lea
mov
movb
std
xchg
pop
std
movsbw
mov
call
jmp
pushf
mov
push
pushl
popl
push
push
movl
pushl
mov
pushl
mov
lea
jmp
mov
jmp
movw
mov
movl
mov
movb
push
mov
lea
jmp
add
pushf
pushl
mov
mov
mov
lea
jmp
dec
test
pusha
sub
jg
add
call
pushf
mov
jmp
mov
pusha
add
push
push
push
pushf
lea
jmp
jmp
jmp
call
call
jmp
clc
or
mov
cmp
push
test
xor
call
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
movsbw
btc
sar
bt
mov
push
add
mov
mov
lea
jmp
movl
push
mov
pushl
lea
jmp
pushl
popl
push
jmp
jmp
push
mov
movw
mov
pushl
pushl
mov
pushl
movw
jmp
mov
mov
pushf
movw
pushl
ret
not
pusha
pop
mov
lahf
mov
push
movw
call
mov
jmp
push
pushl
popl
pushf
lea
jmp
mov
pushf
pusha
movl
pushl
mov
call
lea
jp
push
jmp
movb
pushf
pushl
mov
push
movb
push
lea
jmp
mov
push
jmp
cwtl
lahf
setl
mov
jmp
movb
pushl
popl
mov
lea
jmp
jmp
pusha
pushf
popl
call
mov
pushf
movl
pushf
movb
pushf
popl
push
call
sub
stc
mov
cmc
add
pusha
pusha
lea
jmp
push
mov
push
call
mov
call
mov
jmp
call
pushl
call
mov
mov
push
movw
pushl
ret
pushl
popl
pushf
call
pushf
popl
call
call
mov
mov
call
sbb
bt
rcr
mov
cmc
cmp
call
not
bsr
sar
mov
rol
not
sbb
bsr
mov
cmp
xor
jmp
pusha
pushf
mov
mov
pushf
call
mov
push
mov
push
call
pushf
dec
jmp
movb
jmp
stc
sub
test
call
popl
pushf
lea
jmp
inc
cbtw
bt
mov
bts
neg
mov
clc
mov
test
stc
pusha
sub
pushf
lea
jne
div
pushf
push
jmp
cltd
shl
mov
push
adc
pop
mov
call
movb
call
push
mov
mov
call
push
pushf
dec
call
clc
call
inc
jmp
mov
call
mov
pushl
call
push
movb
pushl
mov
push
pushf
lea
jmp
push
push
pushl
mov
jmp
pusha
pushf
call
mov
jmp
jmp
and
mov
jmp
cmc
push
xor
push
bsr
shrd
pushl
shl
bt
lea
bswap
push
shl
dec
btc
bt
mov
pusha
add
pop
add
btr
btc
rcr
rol
btr
bt
cmp
lea
bswap
sub
and
lea
shrd
sub
sub
btr
dec
mov
btc
sub
mov
rol
add
cmc
dec
mov
sar
btr
sub
jmp
pushf
pushl
popl
jmp
mov
test
or
add
bsf
xor
shrd
neg
stc
mov
cmc
test
stc
cmp
shl
push
pusha
pushf
pushf
shr
pushf
call
pushf
pushf
mov
call
push
mov
pushf
mov
pusha
mov
jmp
clc
add
pushf
pushl
pushl
pushl
lea
jmp
call
pushf
pushf
movb
mov
pusha
jmp
movw
mov
movw
jmp
lea
jns
pusha
repz
popl
pushf
pushl
jmp
push
pushf
pushf
movl
pushf
pushf
lea
jmp
cmc
or
movzbl
call
mov
mov
movb
mov
movl
movb
lea
jmp
ror
movzww
pusha
sub
lea
jg
pushf
dec
cmp
lea
clc
pusha
bt
clc
xor
pusha
stc
rol
cmc
clc
stc
cmp
sub
pushl
pushf
sub
call
pusha
call
sub
jmp
sub
shld
sbb
lea
movzbl
test
and
cmp
add
sub
movsbw
mov
pusha
pusha
movw
not
pushf
popl
std
pop
movzbw
mov
mov
movsbw
mov
mov
call
jmp
pusha
jmp
push
pushl
popl
call
rep
bt
mov
std
mov
push
pushl
popf
push
push
movw
lea
jmp
mov
push
pushf
clc
pushl
sub
mov
pusha
pushf
lea
jne
push
sub
push
jmp
jmp
cmc
sub
call
movb
jmp
pushl
popl
pushf
movb
call
call
bt
cmp
xor
stc
cmp
cmc
cmp
xchg
cmc
call
movb
pushl
popl
pushf
movb
lea
jmp
push
repz
popl
call
pusha
clc
call
jmp
mov
pushf
mov
mov
jmp
ror
btr
mov
cmp
call
jmp
jmp
mov
call
jmp
push
pushf
call
mov
mov
jmp
movzbl
dec
dec
movsbw
setle
mov
jmp
bsf
mov
rol
mov
stc
test
bt
not
test
not
bt
bt
pusha
sub
clc
cmp
movb
and
pusha
push
mov
push
pushf
popl
pushf
movb
push
pushf
pushl
popl
mov
movb
mov
mov
lea
jmp
mov
mov
pushf
jmp
push
jmp
call
mov
lea
jb
pushf
pusha
mov
mov
pushf
jmp
call
ja
movzbw
mov
push
pushl
movb
pushf
lea
mov
mov
pusha
movb
push
lea
jmp
mov
pushf
pushf
push
pushf
mov
jmp
lea
jp
mov
call
mov
mov
jmp
jmp
push
repz
popl
call
pushf
pusha
mov
mov
mov
jmp
repz
popl
pusha
jmp
rol
jmp
jmp
pushl
call
or
sub
add
test
mov
inc
bt
mov
test
clc
call
pushl
popl
pushf
pushf
push
mov
movl
movw
pushf
movb
pushf
lea
jmp
movl
push
pushf
lea
jmp
jmp
stc
ror
das
sub
mov
cmc
shrd
rcr
btc
mov
pusha
push
add
movw
lea
jg
pushf
movb
mov
movw
pusha
movb
lea
jmp
mov
pushf
mov
call
mov
pushl
popl
pushf
mov
movb
lea
jmp
or
mov
pusha
lea
je
pushf
clc
bt
push
sub
stc
xchg
pushf
pusha
mov
pushl
push
clc
sub
movb
call
bt
inc
aad
mov
adc
rol
or
rcr
mov
call
movb
mov
movl
pushl
popl
pushf
mov
movl
mov
lea
jmp
call
mov
jmp
pushf
mov
pushf
push
movb
mov
call
jmp
push
mov
mov
pusha
pushl
ret
pushf
mov
movl
pushf
lea
jmp
movl
push
lea
jmp
pushf
pushf
push
mov
pushf
mov
pushl
mov
movb
push
call
pushf
mov
jmp
pushf
popl
movb
pushl
call
push
jmp
stc
lea
bt
movb
add
cmc
clc
bt
rol
jmp
mov
pushf
mov
call
mov
jmp
jmp
pushf
popl
call
mov
mov
lea
jnp
pushf
pushf
mov
call
pushf
movl
push
repz
popl
pusha
mov
push
pushf
pushf
mov
movb
jmp
pushf
mov
call
mov
mov
jmp
mov
jmp
lea
je
call
pushf
pushf
pushl
popl
pushf
pushl
movl
pushl
lea
jmp
jmp
bsr
bt
rol
mov
call
mov
pushf
mov
call
push
bt
cmp
pusha
lea
ja
aaa
push
bts
aad
lea
xor
das
stc
lea
jmp
call
mov
cmc
push
add
call
lea
jne
bsr
call
mov
pusha
call
pusha
pushl
popl
push
lea
jmp
pushf
jmp
not
bt
stc
clc
pushf
not
cmc
cmc
pushf
sub
pushf
call
movl
pushl
pushl
popl
push
push
pushl
lea
jmp
mov
mov
mov
call
lea
dec
movw
add
shl
adc
dec
bsr
movzbl
push
call
pushf
pusha
movb
mov
pusha
jmp
lea
mov
clc
call
not
cwtl
lahf
setno
mov
bswap
mov
call
cmp
inc
xadd
stc
mov
push
sub
mov
push
sub
jmp
pushl
popl
movl
push
movl
lea
jmp
call
call
bt
mov
not
cmc
bt
shl
mov
bt
call
pusha
movb
pushl
movl
mov
movb
push
pushl
lea
jmp
repz
popl
movb
mov
mov
movw
mov
jmp
mov
pusha
call
pusha
push
pushl
popl
call
mov
jmp
mov
call
mov
jmp
pushf
mov
pushf
jmp
pusha
pushf
popl
call
pushl
repz
popl
pushf
mov
jmp
xchg
pushf
jmp
push
jmp
pushf
pushf
popl
jmp
push
jmp
mov
movb
lea
jmp
sub
pushl
pushf
jmp
pusha
mov
pushf
pushf
mov
jmp
repz
popl
pusha
mov
push
mov
movw
pushf
mov
jmp
jmp
pushf
call
bt
pushl
popl
clc
jmp
pushf
popl
pushf
movw
call
xor
shr
rol
mov
je
push
push
clc
add
pusha
movb
push
lea
jmp
call
push
repz
popl
jmp
movw
pushl
movl
jmp
pushf
btc
mov
pushf
bt
jmp
pushl
shr
movb
pusha
pushf
mov
jmp
call
movl
jmp
test
mov
call
stc
push
pushl
sub
pushf
pusha
call
shl
mov
push
mov
add
pushf
push
movb
lea
jmp
call
call
mov
sbb
mov
jmp
jmp
movl
pushf
pushf
lea
jmp
setbe
mov
rcl
push
add
btr
inc
pusha
sub
bswap
bts
bsr
stc
xor
bswap
jmp
mov
movb
add
movw
push
stc
add
clc
sub
jb
mov
pushf
bt
jmp
pushf
movl
movb
movw
lea
jmp
push
xchg
movb
call
pusha
jmp
movb
pushl
popl
pushf
movl
pushf
lea
jmp
repz
popl
jmp
sub
pushf
mul
call
pushl
mov
jmp
bt
add
clc
neg
jmp
pushf
bt
cmc
add
cmp
pushf
pusha
sub
pushf
mov
push
mov
pushf
push
lea
jmp
lea
jg
mov
push
mov
pusha
pushf
pushf
pushf
lea
jmp
pusha
add
push
movb
mov
pushf
pushl
push
pushf
lea
jmp
jmp
cmp
neg
pusha
mov
pushf
cmp
movw
mov
add
pushf
push
pushf
push
pushf
popl
push
pushl
popl
push
pushl
pushf
push
lea
jmp
shl
push
mov
push
mov
pushf
pusha
call
pusha
mov
pushf
repz
popl
pushf
mov
lea
jbe
pusha
movw
push
mov
jmp
movl
pushl
lea
jmp
movb
pushl
popl
pushf
push
lea
jmp
movb
mov
mov
pushf
pusha
mov
call
mov
mov
pushf
push
mov
push
lea
jmp
mov
pusha
lea
jmp
xorb
lea
pushf
movsbw
pop
movsbw
pop
push
pushf
lea
jmp
add
stc
bt
cbtw
clc
stc
cwtl
jmp
pushf
not
cwtl
mov
movb
mov
mov
lea
jb
mov
pusha
pushl
lea
jmp
rcr
shld
shl
mov
mov
sbb
cmp
add
jb
not
mov
jge
mov
push
pushf
push
movl
lea
jmp
call
and
cmc
pushf
stc
mov
cmp
call
bt
test
pushf
mov
cmp
push
sub
pushf
inc
call
pushf
pushl
popl
pushf
lea
jmp
push
pushf
popl
jmp
cmp
add
mov
mov
jmp
mov
push
lea
jmp
jmp
mov
mov
pusha
lea
jmp
push
call
push
call
pushf
lea
jne
pushf
lea
mov
pusha
test
call
movl
pushf
lea
jmp
call
mov
pushf
push
pushf
mov
pushf
pusha
movb
push
mov
jmp
push
pusha
mov
inc
bt
pushf
push
call
dec
cmp
lea
pushf
jmp
push
call
pushl
mov
movw
lea
jmp
pushf
movl
mov
pushl
lea
jmp
pushf
pushl
mov
mov
pushf
mov
pusha
mov
push
pushl
popl
mov
pushl
call
movl
pushl
mov
pushf
lea
jmp
mov
pushf
pusha
mov
pushf
pushf
push
pushl
lea
jmp
jmp
jmp
push
jmp
cmc
add
mov
mov
pusha
movb
pushf
pushf
lea
jmp
pushl
mov
mov
pushf
lea
jmp
pusha
pushf
stc
shl
push
push
mov
movl
movw
jmp
decl
push
lea
jne
pushf
pusha
call
btc
pushf
or
movsbw
mov
cmp
add
pushf
lea
jmp
pusha
call
pushf
mov
pushl
popl
call
sub
pushf
pushf
jmp
pushf
call
movw
pushf
mov
pushl
mov
mov
jmp
call
sar
mov
test
add
bt
pusha
stc
add
jb
sub
clc
pusha
xor
mov
jmp
push
mov
call
rol
cmp
not
add
shld
add
shl
mov
not
add
test
bsf
mov
stc
pusha
pushf
test
add
push
push
mov
movw
mov
push
push
lea
jmp
mov
pusha
lea
jmp
pusha
mov
mov
pushf
pushf
movw
lea
jmp
mov
pushl
and
test
bt
pusha
test
cmp
call
mov
pusha
call
bt
shl
cmp
movsbl
mov
cmp
jmp
movl
movw
call
bt
pushf
cmp
clc
add
pusha
call
cmp
mov
push
bts
seta
cmp
mov
pushl
pushf
call
jmp
pushf
bt
sub
clc
stc
pusha
and
pushf
jmp
call
push
movl
push
pushf
lea
jmp
movsbw
push
sub
jle
or
mov
cmc
pusha
mov
movb
call
pushf
jmp
mov
mov
pusha
pushf
pushl
mov
call
bsf
cmp
rdtsc
pusha
cmp
sub
push
pusha
lea
js
push
mov
pushf
pushl
push
pushf
mov
pushf
pushf
lea
jmp
xchg
cwtl
push
xor
mov
xor
mov
movw
sub
push
cmc
jmp
pusha
pusha
repz
popl
call
push
jmp
pushf
push
or
jmp
pushf
pushf
popl
mov
pushf
pushl
popl
movb
push
lea
jmp
movw
jmp
cmc
movw
pusha
shl
call
mov
pusha
mov
jmp
push
jmp
cmp
add
std
push
pushl
popf
pushf
push
lea
jmp
pushf
mov
push
pushf
mov
call
not
btr
aam
aas
mov
test
bsf
push
cmp
mov
call
btr
test
aas
movsbw
lea
jmp
call
pushf
jmp
lea
jne
shrd
lea
call
mov
pushf
jmp
inc
mov
cmp
add
pusha
lea
jmp
pushf
pushf
mov
call
mov
mov
mov
mov
mov
lea
jmp
push
bt
add
pusha
mov
pushl
lea
jmp
add
add
mov
pushf
mov
pushl
pushl
mov
call
pushf
call
call
pushl
popl
lea
jg
pusha
pushf
movl
movw
pushf
pusha
lea
jmp
mov
pushf
mov
pusha
jmp
push
movb
mov
inc
mov
pushf
mov
jmp
sub
pushf
stc
shl
lea
js
pushf
mov
jmp
jmp
pushf
pushl
popl
call
call
call
pusha
repz
popl
jmp
bt
xor
clc
cmc
rol
cmp
clc
sub
bt
cmc
sub
call
mov
movzbl
mov
pusha
lea
pusha
pushf
mov
pushf
pushl
pushf
lea
jmp
mov
push
jmp
jmp
movb
mov
pushl
pusha
pushf
call
movsbw
aam
shl
notl
bsr
aaa
and
push
mov
cmc
call
pushf
add
clc
cmc
cmp
cmp
mov
stc
sub
jmp
mov
pushf
pushf
mov
mov
mov
call
pushl
popl
pushf
movl
call
add
pusha
movb
pushl
push
lea
jmp
push
mov
mov
call
