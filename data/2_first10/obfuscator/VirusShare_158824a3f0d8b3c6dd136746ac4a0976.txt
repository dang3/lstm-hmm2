add
add
sbb
add
in
sbb
add
add
add
adc
add
inc
adc
add
adc
jbe
add
xchg
adc
add
mov
add
into
adc
add
hlt
adc
add
and
add
ss
add
dec
push
add
pop
push
add
push
push
add
xchg
push
add
sahf
push
add
stos
push
add
mov
adc
add
repnz
add
or
add
sbb
add
cs
add
inc
pop
add
pop
pop
add
jbe
add
test
add
xchg
pop
add
mov
pop
add
lret
add
pop
add
clc
pop
add
or
add
sbb
add
sbb
add
add
push
sbb
add
add
add
add
add
into
push
add
in
add
add
add
mov
sbb
add
add
add
add
insb
gs
imul
imul
popa
insb
cmp
push
mov
sub
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movw
movw
mov
mov
mov
mov
movzwl
cmp
jle
movzwl
or
mov
cmpl
je
mov
mov
mov
mov
movzwl
cmp
jle
movzwl
or
mov
cmpl
jbe
movzwl
cmp
je
movzwl
cmp
jne
mov
jmp
movzwl
movzwl
cmp
je
mov
jmp
mov
add
mov
mov
cmp
jne
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
sub
movl
movl
movzbl
cmp
jne
jmp
mov
cmp
jae
mov
mov
lea
mov
mov
movzwl
movzbl
xor
xorl
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
and
cmp
je
movl
jmp
movl
pushl
lea
push
pushl
mov
push
call
mov
andl
cmpl
je
andl
push
call
mov
add
cmp
jne
mov
mov
jmp
mov
add
mov
cmpl
je
mov
mov
cmpl
je
cmp
jae
mov
mov
add
push
mov
cmpl
je
add
mov
mov
mov
cmpl
je
mov
mov
mov
add
mov
movl
jmp
mov
add
cmpl
je
mov
mov
mov
add
mov
cmpl
jne
cmpl
je
mov
mov
cmpl
je
mov
mov
add
mov
mov
cmpl
je
add
mov
cmpl
jne
mov
jmp
mov
cmpl
jne
mov
jmp
mov
mov
add
cmpl
je
cmp
jae
movl
mov
mov
add
mov
lea
mov
mov
add
cmp
jne
movl
jmp
mov
mov
add
andl
mov
movzwl
mov
cmpl
je
jmp
cmpl
je
mov
cmp
jne
mov
mov
orl
jmp
mov
add
mov
mov
sub
mov
addb
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jae
lea
push
lea
push
pushl
call
movl
movl
lea
push
lea
push
pushl
call
cmpl
je
movl
movl
lea
push
lea
cmpl
je
andl
push
cmpl
je
call
add
andw
lea
push
lea
push
cmpl
je
push
orb
pushl
call
movl
movl
lea
push
mov
push
mov
cmpl
je
pushl
call
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
lea
push
pushl
call
movl
movl
lea
push
mov
push
mov
push
call
add
mov
add
mov
orb
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
addl
call
subl
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
lea
push
lea
push
lea
push
mov
push
call
mov
add
cmp
je
jmp
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
cmpl
je
orw
call
mov
mov
cmpl
jne
jmp
movl
mov
movzbl
andl
sub
cmp
jne
mov
add
mov
add
mov
addb
mov
push
mov
push
mov
push
addw
call
add
cmpl
je
push
lea
push
cmpl
je
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
lea
cmpl
je
push
mov
orw
push
call
addl
cmpl
je
call
mov
add
mov
mov
push
mov
push
mov
cmpl
je
push
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
lea
push
lea
push
pushl
mov
push
call
mov
add
mov
cmpl
jne
jmp
movl
pushl
pushl
mov
push
pushl
cmpl
je
mov
mov
push
mov
push
call
mov
mov
cmpl
je
push
mov
push
mov
push
mov
push
pushl
mov
cmpl
je
mov
push
mov
push
mov
cmpl
je
push
mov
push
mov
push
mov
push
pushl
mov
push
andb
call
mov
pop
ret
push
mov
sub
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
mov
pushl
call
mov
push
push
push
pushl
pushl
call
mov
pushl
call
mov
pop
ret
int3
push
mov
sub
push
lea
sub
push
call
add
movb
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
mov
movzwl
mov
mov
mov
add
mov
cmp
jl
cmpl
jg
mov
add
mov
mov
movzbl
mov
mov
mov
add
andw
mov
cmp
jl
cmpl
jg
mov
add
mov
cmpl
je
mov
cmp
je
mov
sub
mov
pop
ret
push
mov
call
sub
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
lea
push
pushl
mov
push
mov
push
call
mov
add
cmp
je
jmp
mov
push
pushl
call
mov
pushl
call
orl
mov
subw
mov
orl
cmpl
jne
jmp
lea
push
mov
push
mov
push
mov
push
call
mov
subl
add
cmp
je
jmp
lea
push
lea
push
mov
push
mov
push
call
add
mov
push
mov
push
orb
mov
push
mov
push
mov
push
lea
cmpl
je
push
cmpl
je
lea
push
mov
push
mov
push
call
mov
add
cmp
je
jmp
mov
mov
mov
mov
mov
mov
movl
cmpl
je
mov
push
pushl
call
mov
pushl
call
cmpl
je
cmpl
je
mov
push
pushl
call
mov
pushl
call
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
cmpl
jne
mov
jmp
mov
movzwl
cmp
je
mov
jmp
mov
mov
add
mov
mov
cmpl
je
mov
jmp
mov
add
mov
mov
add
mov
mov
movzwl
cmp
je
mov
movzwl
cmp
je
mov
jmp
mov
add
mov
cmpl
je
mov
mov
mov
cmpl
je
mov
mov
mov
cmpl
je
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
mov
movzbl
mov
movzbl
sub
mov
cmp
jne
mov
movsbl
cmpl
je
cmp
je
mov
add
mov
mov
add
addw
mov
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
pushl
pushl
push
call
add
pushl
pushl
lea
push
call
add
pushl
pushl
push
call
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
cmpl
jne
mov
mov
xorw
mov
mov
mov
mov
lea
push
mov
push
call
mov
orb
add
mov
cmpl
jne
jmp
mov
mov
add
mov
push
mov
mov
push
call
mov
andb
add
mov
cmpl
jne
jmp
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
cmpl
je
cmpl
jne
or
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
add
orl
mov
cmpl
je
mov
mov
jmp
mov
mov
mov
movl
jmp
mov
add
addl
mov
movzwl
cmp
jae
mov
imul
mov
mov
mov
mov
and
cmp
je
mov
and
cmp
je
mov
and
orb
cmp
je
movl
jmp
mov
and
cmp
je
mov
and
cmp
jne
cmpl
je
cmp
je
addl
mov
and
cmp
jne
movl
jmp
mov
and
cmp
je
mov
and
cmp
jne
mov
and
cmp
jne
movl
mov
imul
add
mov
lea
push
mov
push
cmpl
je
mov
mov
cmp
jae
mov
add
mov
add
cmpl
je
mov
mov
sub
push
mov
cmpl
je
xorb
push
mov
push
call
mov
mov
mov
movl
jmp
mov
add
cmpl
je
orw
mov
add
push
cmpl
je
mov
addw
add
push
call
mov
imul
add
mov
lea
push
orw
mov
push
mov
mov
sub
push
mov
cmpl
je
mov
subb
and
cmp
je
movl
jmp
mov
and
cmp
je
mov
subw
and
cmpl
je
mov
add
mov
mov
movzwl
add
andl
mov
movl
mov
mov
mov
lea
push
pushl
mov
cmpl
je
call
jmp
mov
mov
xorw
add
mov
mov
mov
add
subb
mov
mov
add
pushl
pushl
add
pushl
pushl
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
pushl
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
mov
mov
lea
push
call
add
lea
push
call
mov
mov
cmpl
jne
jmp
lea
push
call
add
lea
push
mov
push
call
mov
mov
addb
cmpl
jne
jmp
lea
push
call
xorb
cmpl
je
mov
mov
cmpl
jne
jmp
mov
push
mov
sub
cmpl
je
pushl
call
mov
mov
cmpl
je
jmp
mov
mov
mov
mov
add
mov
mov
and
cmp
je
mov
and
mov
sub
add
cmpl
je
mov
push
call
mov
mov
cmpl
jne
jmp
mov
push
lea
push
pushl
mov
push
mov
add
push
mov
push
mov
push
cmpl
je
add
lea
push
mov
push
call
mov
mov
cmpl
jne
jmp
movl
movl
lea
push
lea
push
pushl
call
mov
mov
cmpl
je
jmp
mov
push
pushl
mov
push
call
cmpl
je
push
cmpl
je
subl
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
je
mov
push
subl
pushl
cmpl
je
mov
push
call
cmpl
je
cmpl
je
mov
push
pushl
mov
push
call
andw
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
call
mov
mov
lea
push
call
add
lea
push
call
mov
mov
cmpl
jne
jmp
lea
push
call
add
cmpl
je
lea
push
mov
push
call
mov
mov
cmpl
jne
jmp
pushl
pushl
xorw
mov
push
call
mov
mov
cmpl
jne
jmp
mov
mov
mov
subw
lea
push
mov
push
mov
add
push
pushl
mov
push
pushl
call
mov
mov
orw
cmpl
je
jmp
mov
mov
mov
mov
mov
mov
movl
cmpl
je
cmpl
je
mov
push
pushl
mov
push
cmpl
je
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
addw
mov
sub
orw
mov
addl
mov
cmp
jbe
jmp
mov
shr
orw
mov
mov
add
mov
xorl
mov
jmp
mov
pop
ret
push
mov
sub
movl
mov
mov
orw
movl
mov
cmp
jae
mov
mov
mov
add
mov
mov
mov
cmp
jbe
jmp
mov
add
mov
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
mov
mov
cmpl
jbe
mov
sub
mov
mov
add
mov
mov
movzbl
movzbl
add
mov
cmpl
je
mov
add
mov
mov
xorl
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
movb
cmpl
je
cmpl
jne
subw
or
jmp
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
cmpl
je
mov
add
movzbl
movzbl
cmp
je
or
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
add
mov
movl
movl
movl
movl
movl
jmp
mov
add
mov
cmpl
jae
movl
jmp
mov
add
mov
cmpl
jae
pushl
mov
push
lea
push
call
subb
add
mov
push
lea
push
pushl
call
jmp
cmpl
jne
pushl
lea
push
mov
push
call
cmpl
je
addl
add
jmp
mov
mov
add
mov
mov
jmp
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
cmpl
je
add
push
pushl
call
cmpl
je
jmp
movl
mov
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
movl
movl
movl
cmpl
je
cmpl
je
cmpl
jne
orw
or
jmp
mov
mov
mov
cmpl
jne
mov
mov
add
mov
mov
add
cmp
jbe
or
jmp
mov
cmpl
jne
jmp
mov
mov
add
mov
andw
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
add
cmp
jbe
mov
jmp
mov
mov
add
mov
add
subw
cmp
jbe
or
jmp
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
cmpl
jne
jmp
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
mov
xorb
mov
mov
mov
mov
movl
movl
mov
movl
mov
mov
or
mov
cmpl
je
mov
mov
sub
mov
mov
shl
mov
shr
xor
add
orl
mov
mov
and
mov
mov
add
cmpl
je
subb
mov
mov
imul
mov
movl
jmp
mov
add
cmpl
je
mov
mov
cmp
jae
mov
shl
mov
shr
xor
add
mov
mov
shr
and
mov
addl
mov
add
xor
mov
sub
cmpl
je
andb
xor
mov
sub
mov
jmp
mov
mov
mov
mov
addb
mov
mov
subb
mov
pop
ret
push
mov
sub
movl
movl
mov
mov
mov
cmpl
je
mov
mov
mov
cmpl
je
movl
movl
mov
or
mov
movl
mov
xorl
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
shl
mov
shr
xor
cmpl
je
add
mov
mov
and
mov
mov
add
xor
add
mov
mov
add
andb
mov
mov
shl
mov
shr
xor
add
mov
cmpl
je
mov
shr
and
mov
subl
mov
add
xor
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
add
mov
mov
cmpl
jbe
subl
mov
mov
add
mov
jmp
mov
add
mov
mov
cmpl
je
mov
mov
add
push
call
mov
mov
cmp
jne
movl
jmp
mov
cmpl
je
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
orw
add
mov
jmp
mov
add
mov
mov
add
subb
mov
mov
cmpl
je
mov
mov
and
cmp
je
mov
mov
and
push
subw
mov
push
call
mov
mov
mov
cmpl
je
jmp
mov
mov
add
mov
mov
add
push
mov
push
cmpl
je
call
mov
mov
mov
mov
cmpl
jne
movl
jmp
jmp
cmpl
jne
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
movzwl
mov
mov
movzwl
cmp
je
mov
jmp
mov
mov
add
mov
mov
cmpl
je
mov
jmp
cmpl
jne
mov
add
push
mov
add
push
mov
mov
andb
push
mov
sub
push
call
mov
mov
cmpl
jne
mov
jmp
pushl
pushl
call
mov
pushl
call
cmpl
je
call
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
add
cmpl
je
mov
mov
mov
mov
mov
mov
movl
pushl
pushl
mov
mov
push
mov
push
call
mov
mov
pushl
pushl
mov
xorb
mov
cmpl
je
andw
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmpl
je
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
andb
call
mov
add
cmp
jne
jmp
mov
mov
cmpl
je
mov
movl
mov
mov
mov
mov
mov
mov
andb
add
cmpl
je
push
mov
push
call
mov
mov
mov
mov
mov
add
push
mov
push
mov
push
cmpl
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
mov
push
subb
mov
push
orb
call
add
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
movzwl
lea
mov
movl
jmp
mov
add
mov
cmpl
je
mov
add
mov
cmpl
je
mov
mov
movzwl
cmp
jge
mov
mov
mov
pushl
pushl
mov
push
mov
mov
add
push
call
mov
mov
mov
cmpl
je
mov
mov
push
mov
mov
add
push
mov
xorb
push
call
addw
add
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
mov
andw
mov
mov
orb
add
mov
mov
cmpl
jbe
addb
mov
mov
add
mov
mov
cmpl
jbe
mov
mov
add
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
add
mov
mov
mov
sub
shr
cmp
jae
mov
movzwl
sar
mov
mov
movzwl
subb
and
mov
mov
mov
cmpl
je
jmp
jmp
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
mov
mov
cmpl
je
mov
cmpl
je
xorl
mov
mov
mov
mov
add
mov
pushl
pushl
mov
mov
push
call
mov
movl
mov
cmpl
je
pushl
pushl
mov
mov
push
call
orl
mov
push
andl
pushl
call
mov
pushl
call
xorb
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
add
cmp
add
inc
imul
push
cmp
push
gs
pop
add
test
mov
imul
or
outsb
xor
push
adc
pop
cmp
xor
xor
xor
mov
add
add
pop
sub
push
jg
mov
in
dec
out
in
stos
sub
sbb
scas
cwtl
inc
or
push
adc
xlat
cwtl
scas
jne
aad
xchg
icebp
ja
lods
icebp
fisubs
push
ja
mov
imul
jo
loope
test
cmp
dec
push
push
xchg
mov
lahf
mov
pop
and
xor
pop
xchg
in
cmpsb
fcoml
paddq
lea
and
movsl
mov
jne
clc
scas
and
pop
cld
add
stos
mov
hlt
scas
test
test
or
add
aam
mov
andl
test
lret
int3
test
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
loop
add
sti
add
add
mov
cli
cmpsl
xchg
pop
call
pop
in
mov
inc
and
pusha
or
xor
mov
xchg
add
ja
sbb
mov
sbb
push
jno
sti
xor
mov
cmp
imul
add
push
dec
inc
shll
ss
push
dec
inc
shll
ss
pop
or
loopne
push
insl
mov
and
jb
push
sbb
jo
imul
mov
negl
xor
inc
sahf
orb
xor
cs
jecxz
loopne
popf
and
add
dec
xor
insb
adc
lock
dec
fmuls
mov
push
push
jne
add
and
add
dec
xor
enter
or
dec
fmuls
mov
je
push
cmpsb
sbb
andb
add
dec
xor
scas
add
dec
xor
cmp
popf
lret
dec
fmuls
mov
scas
test
iret
and
add
dec
xor
out
dec
mov
dec
fmuls
mov
cs
jecxz
loopne
popf
and
add
dec
xor
insb
adc
lock
dec
fmuls
mov
push
push
jne
add
and
add
dec
xor
enter
or
dec
fmuls
mov
je
push
cmpsb
sbb
andb
add
dec
xor
scas
add
dec
xor
aam
loopne
push
xchg
insl
pop
sub
jge
cmp
fdivrl
enter
cmpsb
sbb
andb
add
dec
xor
scas
add
dec
xor
cmp
popf
lret
dec
fmuls
mov
scas
test
iret
and
add
dec
xor
out
dec
mov
dec
fmuls
mov
cs
jecxz
loopne
popf
and
add
dec
xor
insb
adc
lock
dec
fmuls
mov
push
push
jne
add
and
add
dec
xor
enter
or
dec
fmuls
mov
je
push
cmpsb
sbb
andb
add
dec
xor
scas
add
dec
xor
cmp
popf
lret
dec
fmuls
mov
scas
test
iret
and
add
dec
xor
dec
fwait
pop
sbb
imul
bound
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
xor
xor
xor
xor
xor
xor
xor
xlat
add
add
pusha
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
test
bound
test
fdivs
in
les
push
out
roll
dec
pushf
sub
or
aad
addl
inc
mov
push
test
jg
jbe
xchg
dec
loop
enter
iret
adc
push
lock
lcall
aas
das
xchg
sbb
xor
mov
push
and
xchg
cltd
in
out
pop
out
dec
fwait
pop
jl
xor
movsb
lahf
dec
das
inc
ljmp
cwtl
vmwrite
adcb
out
push
sbb
out
orl
dec
enter
mov
sub
push
inc
mov
dec
pop
inc
jp
pop
aam
add
mov
cmpsl
ljmp
in
out
mov
sub
call
cmc
jno
push
jbe
mov
push
sarl
lret
fstl
cmp
lcall
jne
std
add
xchg
ficomps
pop
in
jae
dec
xchg
ljmp
adc
push
cmp
ss
out
dec
cmpsl
sub
sub
push
loopne
aam
sub
faddl
or
jae
adc
ret
rclb
push
jmp
push
test
fcomp
push
inc
movsl
mov
inc
push
in
call
inc
sbb
test
clc
out
cmp
inc
nop
es
lret
fwait
mov
xchg
in
dec
sahf
mov
inc
and
mov
ret
movsb
shlb
loopne
repnz
lret
ret
jmp
out
inc
nop
mov
jp
cmp
scas
daa
pushf
addr16
sarb
std
xor
add
mov
int
mov
xor
add
in
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
out
sbb
add
xchg
out
adc
add
mov
mov
aas
insb
mov
fmull
imul
adc
inc
pusha
ret
push
or
mov
jae
jb
lock
arpl
xchg
je
jo
push
inc
mov
or
sub
pop
mov
insb
or
incl
js
push
and
jl
sub
cld
lret
mov
dec
inc
push
aad
ss
decl
les
mov
sbb
loop
pushf
xorl
repnz
rclb
mov
sbb
fcmovbe
movsl
cmp
icebp
cli
or
adc
adc
xchg
mov
xchg
pushf
pop
mov
cli
adc
ficompl
xor
cmpb
adc
or
int
inc
xor
rclb
xor
enter
jno
add
scas
sub
test
stos
cmp
lcall
dec
ljmp
add
imul
cmp
push
sub
scas
lock
mov
dec
pop
mov
lock
ret
mov
ja
nopl
jno
stc
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
nop
jmp
sti
les
leave
sbb
fbld
xor
out
dec
test
aam
pop
cmp
cmp
pop
inc
fistl
dec
mov
mov
aam
gs
mov
fisubrs
inc
mov
out
fsubs
shll
out
mov
out
cmp
mov
sbb
push
sub
push
add
adc
adc
mov
cmp
sahf
bnd
mov
xchg
enter
paddusw
or
lods
clc
lods
aam
ljmp
outsl
sbb
sub
xor
cmp
sub
lsl
outsb
cmc
add
sbb
ljmp
test
test
add
test
xchg
mov
xchg
repz
mov
mov
leave
out
dec
jle
sub
or
pushf
ret
push
imul
add
mov
imul
mov
enter
adc
sub
movsb
inc
mov
fcoml
xchg
lods
jbe
cs
outsb
mov
cmp
shlb
mov
pop
push
popf
pusha
icebp
dec
cltd
leave
fucomp
in
lods
fists
testl
cmp
repz
stos
enter
jle
imul
pop
sahf
or
sahf
cs
cmp
xchg
add
loope
inc
sub
dec
jp
cmpsl
push
jnp
lea
leave
loope
aam
dec
xchg
in
add
inc
sbb
out
inc
push
mov
out
loopne
jne
int
loope
sbb
popf
ret
jns
mov
dec
out
lock
mov
repnz
mov
add
adc
mov
sbb
sahf
jl
jb
movsb
orl
add
adc
xchg
ret
loopne
mov
mov
and
clc
xor
icebp
dec
mov
cmp
push
xchg
int3
out
cmp
test
ret
xchg
sub
push
lods
xchg
mov
ret
pop
jle
scas
push
jns
mov
mov
mov
test
jno
mov
mov
add
ja
adc
fsubrs
in
mov
arpl
rorb
jns
add
mov
xor
fcmovnb
jnp
loop
lcall
arpl
lahf
push
fldt
xchg
adc
mov
popa
xor
cli
pop
jns
cli
je
in
mov
lock
and
xchg
push
and
les
sbb
es
sbb
shl
into
aaa
cmpsl
std
push
and
mov
pop
sbb
adc
mov
call
lods
aaa
or
mov
mov
or
pop
cmp
stos
push
std
and
and
lret
pop
cmp
call
ret
test
scas
xchg
pop
jecxz
inc
clc
in
mov
mov
inc
ja
jmp
sarl
fldcw
adc
jge
xor
mov
movsb
sbb
int
mov
jnp
add
push
add
ret
cltd
sbb
pusha
shl
mov
mov
and
or
xchg
fldenv
stos
jbe
inc
pop
stc
daa
or
mov
aam
mov
ret
popf
sub
gs
add
push
test
enter
pushf
stc
xor
ficoml
cld
xor
add
mov
cld
add
into
mov
cmp
loop
inc
stos
cmp
inc
sub
xchg
or
jmp
loop
xor
sti
ficoms
mov
jmp
cmpb
or
fcmovu
jle
mov
out
iret
push
int3
in
fisubs
outsb
stos
shll
xchg
mov
es
pushl
fstpt
adc
adc
xchg
pop
lods
test
daa
inc
scas
add
int
mov
mov
fdivs
in
sub
out
mov
xor
ds
cmpsb
xor
gs
test
cltd
xchg
iret
add
or
or
pop
or
movsl
mov
mov
mov
pop
add
sarb
mov
pop
fnstenv
xor
popf
insb
adc
sbb
stos
sub
adc
sub
mov
push
les
cmpsb
dec
jp
mov
mov
dec
pop
fidivrs
mov
arpl
mov
inc
xchg
or
adc
in
outsl
insb
ja
fstps
fstps
push
arpl
repnz
jg
xchg
cwtl
mov
push
mov
idivb
pop
xchg
mov
xor
push
popa
push
popf
cmp
out
xlat
sbb
cmp
loopne
cmp
rcr
and
cmpsl
out
xor
push
outsb
subl
ja
mov
add
repnz
xchg
pop
pushf
mov
movsl
pushf
jne
xor
fsubl
dec
sbb
mov
addr16
pop
push
fs
xchg
scas
dec
int
dec
fidivs
mov
jecxz
test
jne
fs
mov
mov
out
dec
add
xor
inc
sbb
push
add
mov
rorb
and
adc
mov
in
aaa
stc
movsb
push
mov
enter
das
jmp
push
out
jbe
dec
dec
mov
lods
and
shlb
lods
mov
sbb
fidivrl
insb
jmp
inc
jmp
outsb
push
inc
nop
jl
call
pop
std
jge
test
xchg
cwtl
xchg
jmp
inc
cmp
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
repnz
add
add
mov
mov
inc
iret
pop
arpl
xor
and
xor
ds
and
dec
mov
aaa
mov
outsb
mov
mov
call
cwtl
xchg
lahf
std
push
adc
scas
loop
shrl
bound
aas
push
push
sbbl
neg
mov
mov
jge
rorb
pcmpeqw
cmpsb
and
inc
jmp
das
cmpsl
in
mov
rorb
or
loopne
adc
outsb
leave
test
mov
addr16
iret
adc
add
cmpsl
or
pop
adc
mov
push
or
ss
pop
mov
dec
punpckldq
and
es
xor
imul
mov
sti
mov
shll
xchg
xchg
inc
psrlw
lods
mov
je
lods
and
lods
mov
int
xor
ss
or
xchg
imul
aas
and
fprem1
inc
or
data16
mov
jp
mov
or
adc
xchg
mov
test
pusha
jae
sbb
push
je
ss
lods
repnz
xchg
popa
imul
test
inc
filds
mov
mov
sbb
mov
lret
push
arpl
mov
add
lcall
mov
mov
adc
shr
punpcklwd
jb
mov
mov
mov
fcomps
add
jle
mov
fistl
xchg
and
add
push
out
popa
fldl
ret
cmp
pop
add
mov
mov
into
ljmp
rcr
imul
cmp
adc
xchg
and
ja
xchg
mov
xchg
dec
test
addr16
add
aad
or
sbb
cmp
in
ss
lret
lea
nop
push
sub
push
outsl
mov
fld1
adc
cmp
shrl
push
mov
cwtl
dec
jp
popa
lahf
in
addr16
cld
cld
pop
cld
test
dec
pushf
popa
push
sub
mov
xor
mov
mov
sub
nop
add
inc
jnp
jns
xchg
xor
dec
xchg
mov
sbb
cwtl
pop
mov
cltd
out
mov
fiadds
adc
movsl
es
pop
xchg
jb
nop
gs
inc
aaa
test
jbe
sti
inc
mov
push
mov
mov
xor
jg
mov
xchg
stc
inc
jb
adc
jbe
and
cltd
xchg
jne
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ljmp
add
icebp
push
mov
cmp
js
jg
mov
hlt
xor
fadd
and
addr16
movsb
or
mov
aaa
and
sti
mov
push
call
push
out
enter
lods
xor
cmp
stc
ret
and
pop
shl
mov
jp
jb
pop
or
sbb
add
pop
and
jmp
loope
lahf
fcomip
outsb
out
ja
aam
mov
dec
ds
mov
fsubr
aas
pop
add
lods
es
cwtl
jo
xor
mov
divb
jecxz
mov
push
movsb
in
faddl
jbe
mov
pusha
fcoms
and
sarl
test
adcl
stos
std
push
gs
adc
mov
jecxz
in
inc
test
test
mov
ss
or
fs
mov
dec
mov
inc
cli
shlb
out
out
adc
loope
mov
std
les
mov
jge
scas
jo
call
pop
pusha
out
cmp
jo
das
aam
add
fdiv
sub
jne
cmp
add
sbb
js
push
sub
add
fsub
test
arpl
fwait
add
aas
cwtl
xchg
sbbl
push
popa
pop
add
add
movsb
cmp
testl
adc
fidivrs
sbb
jbe
push
or
jl
daa
pop
les
push
adc
xor
mov
or
lcall
and
dec
push
pop
in
jno
or
stc
loopne
xchg
aas
enter
mov
sub
out
ds
lcall
faddl
push
add
repnz
sbb
cmpl
sbb
popf
lock
jne
popa
mov
lret
fwait
cmp
jecxz
mov
cmpsb
imul
cmp
lock
popa
cmp
and
in
xchg
adc
xor
stos
cwtl
lahf
xor
loopne
mov
movsl
enter
jbe
sahf
sub
fincstp
cmp
lret
dec
pop
fadds
loop
or
cs
jmp
mov
fstl
pop
loope
adc
loope
sub
mov
rorl
adc
scas
push
pop
mov
movsb
add
cs
mov
add
pop
add
cmpsb
sbb
xor
inc
push
imul
jl
bound
mov
jle
push
jnp
cmc
fdivrl
pop
in
mov
inc
orb
test
push
cmp
in
in
mov
cmp
inc
idivb
and
xor
test
rorb
sub
add
jae
cmp
pop
les
movsl
add
test
mov
repnz
add
test
dec
testb
cmpsb
inc
packuswb
imul
mov
aas
pop
dec
jno
cmpl
jl
pop
jg
es
mov
jbe
out
jp
and
pusha
jmp
pop
outsl
or
into
insb
jnp
in
xor
jae
subb
push
inc
jb
in
movb
stos
std
jl
pop
push
popa
bnd
subb
divl
push
adc
inc
out
cbtw
aas
dec
loopne
mov
xor
jecxz
and
dec
aam
popf
xchg
mov
test
or
lock
test
shlb
add
xor
cmp
adc
dec
dec
adc
insb
pop
mov
bnd
xchg
xlat
and
lcall
loopne
xchg
xor
ficoml
push
adc
arpl
aam
popf
sahf
mov
ficoml
inc
push
das
xor
xchg
mov
les
loopne
std
xchg
rorb
dec
and
in
popf
testl
xchg
test
aam
xor
idiv
or
jecxz
inc
fistps
shll
cli
fs
mov
mov
leave
test
push
jl
lds
outsl
cmp
in
push
mov
push
add
icebp
push
and
loop
dec
sub
xchg
inc
dec
rcr
and
in
stos
xchg
mov
jns
icebp
inc
cmp
outsl
xchg
xchg
sub
idivb
push
add
orl
dec
jns
jmp
add
enter
xor
mov
xchg
pusha
gs
xchg
pop
mov
inc
push
pop
xchg
dec
xchg
jbe
cmpsb
mov
lea
ss
mov
sti
mov
sbb
popf
in
loop
xchg
mov
orl
dec
or
pusha
cmp
pop
xlat
fcomps
cmp
adc
pop
push
mov
sahf
lcall
mov
jb
push
and
and
les
jmp
cmp
scas
pop
mov
cmp
fidivrs
cmp
sbb
jge
xchg
pushl
cs
sbb
inc
xchg
loop
inc
rcl
push
mov
xchg
adc
fs
sbb
or
jg
mov
or
mov
pop
bnd
and
dec
in
mov
cs
call
adc
or
cmp
cltd
and
outsl
inc
mov
mov
mov
addl
cmpsl
push
add
pop
mov
xchg
jge
jae
nop
in
movsb
bnd
xchg
push
ret
cs
mov
jno
xchg
das
mov
call
inc
xor
xchg
scas
mov
cmp
cmp
cmp
pop
or
imul
xchg
shll
mov
mov
adc
sbb
into
nop
xor
pop
xorb
pop
stos
xchg
sub
mov
cwtl
outsl
xor
mov
jp
add
pop
mov
aam
lret
mov
dec
dec
xchg
aas
jbe
pushf
and
and
adc
or
icebp
cmpsb
and
cmp
jmp
push
test
adc
jecxz
inc
mov
xlat
jecxz
aas
mov
test
adc
mov
xorps
mov
xchg
adc
aam
aam
sub
dec
call
out
adc
cmp
mov
orb
mov
test
scas
xchg
xlat
inc
lods
jae
dec
mov
mov
add
pop
xor
dec
nop
leave
mov
rdmsr
or
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
lds
add
ljmp
jmp
add
dec
call
movsl
xchg
icebp
pop
hlt
or
inc
sbb
daa
xchg
imul
loope
dec
in
push
fstpt
push
addr16
je
xor
ss
jg
mov
scas
jl
ret
or
rcrl
mov
out
je
inc
mov
and
jmp
adc
dec
fcmovne
ss
or
dec
scas
push
cmp
aas
arpl
sbb
popf
pushf
mov
xor
push
rorb
push
out
mov
push
jb
mov
adc
in
add
aam
mov
adc
adc
pop
imul
fiaddl
lea
pop
mov
arpl
jecxz
loope
or
or
mov
call
bound
mov
cmp
jno
test
xlat
pusha
cmp
testb
in
add
hlt
call
in
lahf
imul
mov
das
mov
cmp
orb
scas
stos
mov
push
outsl
jecxz
jp
repz
out
xor
xchg
aad
push
mov
lret
and
pop
pop
pop
incb
xor
mov
iret
addl
lock
mov
mov
shl
clc
mov
mov
pop
mov
inc
jns
mov
jle
cmpsl
mov
ret
mov
pop
dec
pop
test
lret
push
ja
fimull
ss
xor
xchg
pop
addb
sub
and
cmp
inc
dec
loop
dec
pop
cmpsb
fs
add
jmp
dec
cmp
mov
xchg
std
repz
sbb
scas
dec
sbb
imul
loope
out
mov
xor
sbb
sahf
out
sbb
add
outsb
inc
sub
sarl
icebp
xchg
imul
pusha
in
sub
cmp
lcall
inc
adc
push
sbb
sbb
push
in
add
dec
mov
scas
inc
mov
adc
xor
mov
adc
dec
out
push
in
xchg
mov
mov
aam
data16
call
sahf
repnz
loope
mov
mov
pop
out
inc
jle
cmpsb
in
sbb
push
js
sub
insb
xchg
xchg
shrl
cli
aaa
push
sahf
cmp
outsl
jae
repz
push
cmp
std
or
xchg
mov
pop
rol
cmpsb
inc
outsb
dec
data16
mov
mov
mov
ds
mov
pushf
and
movsb
inc
add
enter
mov
sbb
insl
lea
pop
xchg
cmp
mov
jl
je
loope
xchg
cmp
clc
inc
clc
cmp
adc
cli
pop
jbe
push
mov
popa
js
xchg
out
dec
mov
outsb
dec
fsubrs
add
adc
jecxz
negb
jle
jno
andb
mov
int
rcl
xlat
fisttps
insl
mov
cmpsb
push
or
inc
xchg
jp
filds
test
and
xchg
dec
push
jp
outsb
cmp
dec
popa
lds
xchg
pop
cltd
push
lcall
xchg
pop
mov
and
sub
or
cmp
rorl
dec
cmc
addr16
push
push
add
insl
adc
out
push
xor
inc
std
shl
add
les
movsb
fcmovnu
xor
xor
xor
xor
xor
add
add
add
add
mov
std
mov
add
cmp
mov
sub
cltd
xchg
ljmp
jne,pn
inc
sbb
in
and
push
mov
lods
int3
push
outsb
outsl
jo
xbegin
std
aas
repz
jbe
xchg
push
mov
cld
adcb
call
popa
test
jg
jl
loopne
push
lods
stos
push
cmpsl
adc
dec
ljmp
xchg
loopne
pop
jno
pusha
xchg
push
or
dec
adc
sti
jbe
push
mov
into
dec
cmc
cs
jnp
stc
xchg
xchg
mov
ss
xor
mov
dec
lret
lods
sbb
lahf
cmp
xor
pusha
cld
xor
lret
pop
test
inc
or
push
lock
aam
sbb
dec
jle
psraw
and
hlt
mov
push
aaa
xchg
mov
and
and
push
sub
pop
jp
and
rclb
pop
test
inc
pop
outsb
or
iret
sbb
and
sbb
and
or
stos
ja
mov
jmp
ret
xchg
jle
scas
movsl
fcompp
add
or
test
sub
mov
les
jno
popf
mov
sbb
movsl
push
jp
ret
icebp
add
roll
std
push
cltd
into
je
sub
loop
push
loop
sub
in
cmpsb
jl
push
out
xchg
dec
js
test
mov
fidivs
icebp
xchg
dec
push
jmp
decb
xor
ss
fdivs
sahf
dec
pop
rcrl
jl
inc
fbstp
les
fs
and
cli
mov
cmp
cmpsb
inc
and
into
pop
movsb
mov
leave
pop
xlat
pop
int
arpl
addr16
and
es
ret
pop
dec
inc
movsl
scas
es
lret
repz
enter
pop
mov
jne
out
loopne
lds
adc
mov
jl
mov
pop
jae
imul
mov
rcrl
push
pop
repz
inc
mov
cmp
cmpsl
ss
or
lods
add
test
std
mov
xchg
dec
push
pop
mov
cmp
int3
xchg
pop
pop
mov
les
inc
xlat
fwait
mov
ret
cmp
pop
inc
sbb
stc
not
shll
rcrl
xor
sub
push
repz
cld
cli
push
arpl
cmp
mov
pop
cld
or
repz
pop
mov
test
pop
call
cmpb
jbe
jo
inc
out
pusha
xchg
and
xor
cmp
stos
ret
ret
call
mov
out
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
mov
fnsave
mov
dec
shl
call
push
dec
sarb
mov
sbb
icebp
test
repnz
nop
lret
cli
sub
cltd
mov
push
insl
push
mov
or
scas
into
pop
stc
cmpsb
mov
jecxz
pop
scas
pop
mov
mov
sbb
push
xchg
bound
out
out
xor
ljmp
int
test
popf
int
mov
iret
ja
mov
dec
scas
or
pop
cli
insl
dec
out
rcl
inc
push
frstor
xorb
or
jge
scas
movl
test
and
jl
mov
and
pop
pop
scas
sahf
xor
test
mov
dec
sub
jbe
ja
mov
roll
xlat
mov
and
sahf
test
add
adc
sbb
inc
jl
mov
cmp
aad
cmp
adc
inc
inc
xor
mov
mov
mov
xchg
adc
adc
dec
gs
pop
lds
cmp
and
mov
call
ret
sub
cmc
pop
mov
out
xchg
lock
mov
stos
sbb
repz
dec
push
call
sub
insb
ret
mov
shll
jo
loope
lock
push
lea
or
repz
arpl
dec
fstl
mov
pop
out
push
nop
jb
push
leave
outsb
sub
lock
or
mov
adc
adc
and
cli
shlb
cmpsl
mov
dec
lods
sub
sub
movsl
mov
js
test
fiaddl
pop
cli
lods
mov
fisubrs
insb
and
dec
pop
push
ret
xor
test
jmp
jmp
sub
push
outsb
pusha
mov
jmp
xchg
mov
daa
ljmp
mov
mov
mov
xchg
push
cmpsb
cmp
subb
cmp
fs
inc
and
and
scas
mov
out
aam
and
xchg
pop
aaa
icebp
lcall
xor
dec
xor
push
sub
loopne
jns
es
cwtl
shll
loope
or
icebp
mov
loop
sub
adc
xlat
ljmp
push
cmpl
scas
jge
sti
mov
push
xlat
cwtl
pop
into
leave
imul
adc
push
jmp
outsb
cmpsl
ficoms
xor
pop
cmc
mov
sti
jnp
lcall
push
cli
jg
in
adc
test
jmp
mov
xor
filds
lcall
bound
push
xchg
dec
lds
shlb
lds
jg
aaa
xor
mov
adc
sar
in
roll
add
out
mov
and
cmpsb
mov
xor
stos
aam
sub
cmp
movsb
inc
sti
and
int
add
lea
imul
cs
fsubs
dec
dec
iret
hlt
jae
push
jl
imul
out
mov
dec
pop
xchg
pop
sub
aam
andl
jle
adc
or
sbb
rcrl
lods
es
pop
addr16
pop
lock
lret
sbb
inc
mov
push
ljmp
cmp
or
mov
dec
inc
cltd
xlat
data16
mov
xchg
mov
in
sub
in
mov
jmp
push
jno
aam
cmp
sbb
cmp
imul
or
popa
pop
push
and
and
mov
loop
ret
jmp
jns
pop
xchg
sarb
mov
lods
cli
sbb
loopne
cmp
addr16
fdivs
clc
jmp
adc
out
xor
shr
out
push
xchg
out
cs
adc
inc
std
stos
and
sbb
mov
xor
aam
imul
mov
into
dec
push
xor
sbb
dec
imul
fiaddl
jae
icebp
lret
in
mov
call
and
fsubrs
ret
or
js
mov
or
pop
mov
inc
lods
or
mov
sub
aad
les
jne
mov
push
pop
cmp
repz
aad
lcall
xchg
push
popf
pushf
imul
inc
jae
outsl
sahf
loopne
xor
mov
ds
sbb
lds
jmp
lds
pop
pop
in
push
pop
push
and
dec
xchg
xchg
inc
notl
or
jnp
scas
iret
cmc
adc
ficompl
ljmp
sub
mov
inc
jne
movsl
mov
ret
cli
out
movsl
rcrl
imul
je
adc
lods
clc
lcall
sti
pop
add
nop
cld
lds
cmpb
sbb
and
xor
mov
dec
xchg
loopne
push
xchg
lock
pop
pop
insb
dec
inc
and
and
ljmp
xchg
inc
and
mov
pop
out
add
es
repnz
jne
mov
mov
loopne
xchg
cmp
stos
lcall
jae
xchg
pop
mov
xchg
mov
inc
jns
aad
mov
xor
pop
icebp
enter
xchg
lods
imul
mov
sahf
stos
loopne
jmp
repz
inc
xlat
icebp
in
push
insb
dec
mov
mov
adc
pop
sub
insl
dec
sti
daa
mov
inc
xchg
popa
sub
push
fsubl
outsb
lahf
cltd
jl
and
popa
nop
adc
add
mov
push
sti
mov
mov
add
bound
in
dec
or
fwait
int3
in
popa
mov
lods
lea
push
jo
scas
adc
sub
cmp
xchg
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
add
jnp
add
insl
ror
iret
mov
dec
aad
cli
daa
movsb
add
sti
add
mov
loope
cli
push
ja
xchg
inc
dec
mov
xchg
insl
lret
xor
or
sti
xchg
cli
push
hlt
call
mov
mov
ljmp
push
jp
push
sbb
aas
fisubl
sbb
mov
and
add
das
mov
rcrl
add
movsb
pop
adc
into
lret
test
pop
sarl
cmpsl
xchg
fmulp
push
lock
mov
xor
dec
ljmp
test
ds
push
mov
dec
cld
mov
adc
push
loopne
and
arpl
int3
out
push
mov
sub
adc
push
cmpsb
mov
mov
stc
insb
js
ret
addr16
lahf
or
adc
push
xchg
fmul
push
adc
ss
or
xchg
shlb
lods
mov
mov
mov
lods
cmp
cmpsl
in
mov
popf
pop
xchg
iret
mov
imul
inc
dec
add
add
fdivs
add
sbb
dec
cmpsb
out
jmp
adc
rorb
aas
aad
inc
nop
inc
stos
push
and
ficompl
sahf
jmp
sub
push
mov
sbb
xchg
inc
add
insl
cmpsb
cmp
rorb
jp
sbb
test
or
in
jle
addb
fsubrp
xchg
jmp
cmpsb
int3
mov
and
subl
mov
mov
in
cmp
bound
push
adc
jnp
lea
loopne
ljmp
push
stos
imull
es
in
inc
aaa
js
faddl
call
jo
sahf
inc
or
aam
lcall
testl
sbb
sub
test
adc
in
inc
push
add
aad
xchg
loopne
fcmovnb
fwait
sub
adc
fbld
push
sarl
pop
dec
sbb
addb
mov
mov
mov
dec
jle
push
dec
cwtl
push
jmp
es
into
fimull
and
add
xchg
mov
repz
call
and
push
jl
jecxz
dec
jmp
xchg
add
leave
xlat
adc
cld
adc
add
scas
into
fwait
xchg
ja
xlat
les
sahf
inc
aas
stos
mov
out
mov
test
inc
push
jo
cmp
jbe
mov
loope
jp
stos
adc
in
daa
jb
popa
cmp
pusha
xor
mov
fisttpl
jbe
mov
or
divb
lahf
std
push
stos
sub
roll
cltd
sbb
and
mov
mov
cmp
insl
push
dec
mov
pushf
push
xlat
cld
mov
sbbl
out
gs
jl
push
pop
sahf
mov
inc
jmp
xchg
cli
mov
inc
xchg
pop
xchg
pushf
cmp
pop
sub
pusha
sub
shll
loope
mov
testl
fidivl
and
fidivs
mov
stos
call
xor
ss
mov
xchg
movsl
data16
jle
xor
out
mov
pop
movhps
dec
fisubrl
neg
test
cmp
adc
pop
and
xchg
insb
push
and
jecxz
inc
fwait
or
adc
jp
mov
and
out
mov
out
lahf
rolb
ret
js
test
and
pop
pop
aas
sbb
in
aam
add
inc
cmp
mov
add
mov
push
aas
push
mov
adc
adc
add
stos
out
lret
and
sbb
flds
sbb
inc
push
mov
int
jp
mov
lea
ret
push
les
mov
xchg
call
mov
pushf
or
dec
in
mov
jp
pop
clc
push
jb
add
jne
sbb
xlat
out
mov
cwtl
pop
negl
scas
pop
pop
fimull
lock
out
lcall
int
popf
mov
rcrb
pushf
pop
sbbb
xchg
test
push
sbbl
push
xchg
jge
sbb
nop
xchg
xchg
mov
mov
loope
inc
jp
mov
lret
in
enter
pop
in
mov
movsl
adc
fst
jae
mov
fdivrs
cmpsb
and
lds
push
loop
fsubrs
sbb
and
xchg
xchg
dec
stos
xchg
subl
cmp
dec
add
lretw
mov
xor
popf
cltd
push
repnz
mov
jmp
adc
jmp
pop
cltd
jle
jns,pn
ljmp
mov
xor
cmp
xor
push
jl
add
jp
fucomp
pop
and
adc
test
movsb
fwait
js
mov
lods
inc
xchg
stos
push
mov
scas
pop
mov
xchg
arpl
jne
mov
cmpsl
or
mov
xchg
aaa
sub
mov
fs
fiaddl
lea
pop
mov
xlat
xor
pop
sbb
fmull
out
subl
in
mov
shll
rol
xchg
jb
es
cld
hlt
add
sub
mov
shll
sub
mov
pop
outsb
js
into
mov
mov
fstpt
js
dec
adc
dec
mov
ss
lcall
ljmp
inc
int
jae
jmp
into
sahf
fs
push
and
mov
xchg
int3
xor
popf
xchg
pop
cs
mov
popa
xchg
or
sub
loope
dec
dec
sbb
scas
mov
jnp
cld
testb
adc
push
loopne
push
lahf
leave
inc
addr16
call
loop
int3
xchg
add
dec
loopne
xchg
sbb
in
cmp
xor
in
aad
ret
loopne
sbb
sarb
jo
lods
mov
lahf
insl
sub
lea
test
addr16
cld
fcomps
jbe
sbb
das
dec
jge
ljmp
mov
xor
outsl
cltd
cmc
xor
insb
dec
pop
push
sub
out
mov
mov
cmp
in
push
push
iret
push
inc
fwait
es
jecxz
mov
adc
lahf
push
jo
aaa
mov
packuswb
fisttpll
inc
add
mov
ffree
jmp
cltd
stos
cmp
fdiv
jae
mov
or
jns
push
pop
mov
push
hlt
popl
xor
movsb
inc
ja
xchg
dec
lods
in
cwtl
or
imul
mov
sub
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
add
add
jbe
lods
lret
mov
cmp
jle
fldz
pop
cmc
xchg
in
mov
ja
in
adc
es
or
mov
pop
dec
sub
lret
pusha
inc
push
pop
inc
xor
dec
dec
xchg
xchg
pop
jl
pop
pop
inc
imulb
ja
lahf
enter
fldt
scas
sti
iret
jge
int
lods
and
mov
iret
enter
shr
sbb
inc
jecxz
aam
sub
out
mov
notb
pop
push
rorl
cmp
mov
movsb
mov
sub
pop
mov
pusha
mov
sub
mov
aam
into
outsb
add
push
mov
xor
jl
add
sbb
das
add
adcb
fwait
inc
pop
add
cli
push
inc
push
or
std
and
xchg
divl
pop
icebp
cmp
stos
movsl
xchg
jne
jno
rcrl
push
lds
popa
stos
push
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
add
add
add
or
and
and
gs
es
jno
adc
int
push
aaa
jns
addr16
arpl
and
stos
lock
lods
and
aas
pop
mov
push
dec
xchg
aam
fdivrl
push
fistpll
jns
divb
push
rcrb
lea
loopne
jo
cmc
mov
add
shr
out
jne
xchg
and
pop
mov
push
push
or
mov
sub
pop
bound
rolb
jo
pop
jnp
mov
add
xchg
push
cli
ret
cmpsl
adc
pusha
test
mov
mov
daa
push
pop
repnz
xchg
xor
out
lahf
jnp
inc
cmc
add
fisttpl
cmp
out
fisubl
fmul
std
sbb
lods
cmp
imull
cmpsl
loop
imul
pop
mov
xchg
adc
orl
mov
sbb
outsl
and
and
or
push
test
cwtl
movsb
mov
inc
cmpsb
fsubrs
sbb
push
cs
sahf
outsl
jno
pop
rorb
mov
daa
adc
push
sub
push
stos
inc
insb
bound
into
icebp
jno
push
out
fcmovb
pop
xor
insl
mov
xlat
mov
out
idivl
fdivr
jae
mov
push
out
pusha
mov
pop
cmpsb
test
shr
loope
scas
daa
aaa
sub
repnz
aad
bound
adc
in
test
in
popa
out
call
test
sub
pop
xchg
sub
lahf
in
mov
adc
sbb
mov
pop
push
test
sub
xor
sub
push
add
mov
ret
or
inc
sub
out
jp
dec
dec
jmp
mov
icebp
stos
test
fwait
push
pop
stos
int
pop
jl
jle
xor
pop
idivl
or
ss
cmpsb
mov
mov
adc
outsl
pop
dec
cmp
scas
shr
jecxz
cmpsb
in
dec
ds
fldt
sbb
mov
fcompl
cli
cmpsl
out
xorl
imul
int
outsb
adcb
cmp
rclb
add
jmp
or
and
jl
nop
jecxz
pop
inc
xlat
push
xor
nop
cmc
popf
mov
sbb
sub
mov
fs
add
rorl
mov
aas
fdivs
mov
mov
leave
xor
lods
rcl
stos
out
or
xchg
aad
and
rcr
sbb
out
je
jmp
push
adc
into
fstl
or
gs
rol
shll
loopne
outsb
call
and
xchg
mov
inc
into
clc
int
cwtl
out
sahf
jp
sti
jle
lahf
adc
xor
xchg
imul
mov
notl
out
mov
jle
dec
mov
in
dec
inc
jae
addr16
cmp
fwait
icebp
jmp
stos
jo
out
mov
enter
dec
insb
mov
enter
inc
cltd
or
shrb
popf
xor
aad
adc
sbb
inc
fsubs
outsb
mov
cli
mov
mov
jg
dec
sbb
jno
rcll
mov
call
dec
andb
inc
test
dec
fstp
negb
mov
inc
lcall
enter
rol
mov
in
pushf
repnz
pop
cld
test
scas
or
imul
adc
xlat
mov
cmc
lcall
mov
mov
hlt
shr
pop
push
insl
adc
fstps
xor
fnstsw
xor
ss
das
mov
lds
cmp
and
lahf
inc
or
ss
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
inc
sub
popa
in
stc
jle
and
sub
inc
ljmp
shl
fisttpl
fbld
xchg
test
fisubrl
mov
outsl
mov
dec
push
mov
or
cmp
jge
iret
xchg
mov
repz
fnstsw
pop
stc
cld
popa
shlb
or
js
rorl
adc
in
test
jecxz
push
jp
add
scas
adc
mov
pop
loop
lahf
cmc
mov
mov
dec
or
adc
scas
rcll
jmp
and
ljmp
dec
mov
loope
mov
insb
leave
dec
mov
and
jno
mov
xchg
fsqrt
dec
ja
fmuls
hlt
or
mov
xchg
push
sti
aaa
inc
push
daa
or
xchg
loope
sbb
sahf
cmp
int3
loope
nop
add
mov
push
push
sub
mov
xor
push
cmpsb
decl
inc
ja
js
fidivrs
pop
outsb
pop
jge
rclb
mov
jae
xlat
movsl
pusha
int3
mov
mov
test
shlb
subb
push
inc
sbb
cmp
inc
push
sub
push
repz
lcall
jge
outsl
stc
cltd
shr
mov
fdivp
xchg
mov
test
ds
adc
fsubrp
stos
xorb
mov
in
stos
ja
out
in
mov
sbb
test
test
in
mov
xlat
lea
mov
loope
push
xchg
xor
jmp
mov
out
fcmovnb
insb
ljmp
push
mov
insb
mov
nop
test
xchg
add
fbstp
sub
cmp
xchg
jns
ja
lcall
stc
push
in
jnp
xchg
nop
movsl
loopne
push
daa
adc
push
imul
xchg
in
cmp
jl
pop
mov
and
imul
xchg
popf
jmp
ja
xor
xchg
int3
mov
shl
aas
xlat
xchg
je
push
mov
push
jne
pusha
insb
gs
add
aad
popa
cmp
cmp
arpl
ret
movsl
jnp
jp
jle
mov
in
fbld
pop
or
pushf
lret
inc
push
dec
pop
adc
and
push
cmp
lret
inc
xchg
es
cmp
sub
lds
jp
lea
jle
scas
dec
cmp
test
aaa
adc
and
mov
idivl
scas
ds
out
mov
lock
mov
les
pop
xchg
lods
iret
ja
xchg
dec
aaa
fsubrl
insl
cmp
fsts
test
lods
rcrb
cmp
cmp
mov
push
cmc
lods
inc
push
sahf
adc
add
stos
je
jns
in
fdivr
sub
in
icebp
je
and
lods
arpl
loope
add
sub
lret
add
jno
mov
rcrl
in
dec
fs
and
xor
xchg
sbb
popa
fsubr
pop
int3
xchg
pop
jb
inc
aaa
stos
add
in
xchg
daa
or
shl
sbb
jns
popa
and
outsl
jo
cs
cmp
aam
pop
cmp
roll
int
mov
popf
daa
cld
push
add
loopne
mov
add
add
mov
addb
movsl
sub
cmp
sbb
andl
jb
push
test
out
stos
mov
incb
sti
adc
bnd
pop
sub
or
push
aad
int
mov
jecxz
iret
ret
repz
divl
sbb
adc
push
jecxz
dec
lahf
pop
ret
cmc
rorb
leave
xchg
xchg
in
xor
es
xchg
nop
sbb
mov
sub
add
inc
cmc
cmp
repz
movsl
cmp
shr
sbb
dec
outsb
lea
sarl
sub
es
das
test
outsl
mov
sbb
fcomps
mov
ds
jno
dec
movsb
popa
es
or
daa
enter
fisttpll
adc
and
ficomps
stos
mov
imul
es
push
pop
cmp
sbb
jo
push
jmp
lods
add
in
mov
insb
xchg
dec
mov
mov
pop
ljmp
adc
pop
mov
test
cmp
xchg
mull
int3
test
mov
mov
pop
push
insb
fmulp
or
out
ret
or
cwtl
inc
pop
in
arpl
addr16
xchg
jmp
pop
roll
and
dec
sub
xor
cmp
fcmovb
xor
xor
xor
dec
add
add
insb
iret
pop
arpl
mov
outsb
les
rcll
cmp
push
lock
dec
xor
mov
lock
fildl
or
jle
cs
loopne
ja
shr
fmul
cltd
fldenv
mov
mov
jns
mov
das
and
mov
ja
mov
and
jmp
sahf
mov
rcr
mov
lret
sbb
outsl
cwtl
jecxz
movl
pop
jb
subl
jbe
arpl
pushf
jo
repz
mov
and
or
int3
fstpt
add
mov
into
xor
arpl
xor
sub
xchg
add
push
add
and
jmp
mov
ss
mov
shll
adc
fsubrs
fsts
adc
into
xlat
aam
sbb
movsb
mov
xor
adc
pop
mov
or
sbb
leave
add
call
pop
sub
outsb
mov
pop
cmp
jg
es
imul
jne
repz
cs
fcmove
dec
jecxz
loop
mov
fs
pop
mov
pop
rcrb
aam
scas
mov
jno
sbb
scas
insb
mov
inc
sarb
push
jne
mov
cmp
outsl
enter
aas
lods
in
icebp
adc
mov
dec
rclb
repz
jl
aad
mov
push
add
mov
iret
pusha
mov
mov
jne
jle
jle
movsl
xor
icebp
push
jbe
inc
push
lret
mov
data16
ret
icebp
push
and
pop
pop
sub
cmp
add
aad
mov
push
pop
jo
scas
push
cmp
inc
div
jl
push
adcl
adc
nop
dec
lret
out
lcall
add
xor
mov
sarl
or
nop
adc
jecxz
not
ljmp
rclb
aaa
ja
push
mov
in
cmpsb
push
adc
stos
adc
mov
enter
sbb
push
dec
daa
gs
scas
mov
mov
cmp
cmp
jge
in
sahf
cs
jl
and
push
les
xchg
ljmp
xchg
out
data16
add
adc
dec
dec
add
ljmp
iret
fmull
jno
inc
nop
inc
dec
mov
jb
inc
insl
jno
and
into
lret
mov
push
int
stc
mov
stc
sub
cld
xorl
ret
jns
out
repz
data16
ret
xchg
in
cmp
sub
pop
pushf
inc
push
sbbl
xchg
lahf
clc
or
call
stos
mov
mov
and
movsl
aam
mov
repz
jbe
fwait
jl
stos
pop
or
xchg
or
and
sbb
inc
ss
inc
sbb
cmp
cmp
xchg
addb
lret
jnp
scas
enter
jmp
cmpsl
cmp
pusha
das
adc
jg
mov
mov
inc
pop
daa
or
stc
xor
adc
mov
ret
es
cmc
or
pop
push
iret
mov
arpl
push
add
subl
mov
shlb
pusha
aas
xor
fs
leave
push
pop
cmp
mov
pop
xchg
pop
lea
popf
cltd
cmp
jmp
sub
popa
ss
aam
gs
jp
sub
stos
ud2
js
sbb
push
aas
lcall
pop
pushf
sbb
sub
push
xchg
dec
iret
mov
push
inc
enter
addb
in
xchg
test
mov
sub
and
jp
fsubl
movsl
mov
int
adc
jle
aad
filds
dec
subl
mov
in
xchg
stos
lods
sbb
out
mov
cli
xchg
outsl
dec
aaa
mov
inc
xor
lret
clc
cmp
sbb
ret
lahf
add
mov
scas
or
lcall
jae
sbb
lea
xchg
fcomps
jmp
and
lock
ficompl
lcall
out
pop
arpl
push
jecxz
adc
lea
inc
fcoml
cld
xchg
xor
fisttps
adc
int
sbb
mov
lea
xchg
rcl
push
mov
or
xor
mov
adc
and
aas
aad
repnz
cmp
out
jnp
xorb
sbb
icebp
xchg
into
mov
imul
fs
jno
push
mov
out
mov
push
xor
cmp
mov
xor
movl
xor
add
mov
movsl
inc
insl
dec
jle
outsb
test
or
shlb
dec
stos
xchg
insb
loopne
inc
int3
jl
mov
jb
jg
mov
ret
dec
scas
push
sub
add
lea
clc
mov
or
sbb
ljmp
add
sub
lcall
pop
mov
int
jo
pop
xlat
push
xchg
movsl
loop
jo
lret
lret
sbb
push
add
mov
pop
lods
push
in
hlt
pop
xchg
jle
cmp
or
bound
sbb
and
icebp
adc
jns
mov
pop
aam
sbb
or
in
fstpt
pop
push
enter
andb
js
loopne
inc
sub
pop
je
pop
mov
add
stc
jbe
xchg
je
adc
pop
inc
add
fnstcw
sti
dec
fstps
loop
decl
fimuls
sti
dec
xlat
loop
and
jecxz
lock
or
aas
jb
jmp
sub
dec
jns
jmp
pop
icebp
and
js
xchg
bsf
pusha
es
hlt
sub
clc
or
or
mov
lea
and
lds
test
fcmovnu
sub
mov
pushf
or
cmpsb
nop
mov
jns
mov
aas
dec
inc
bound
adc
mov
bswap
jbe
add
xor
aas
pop
dec
mov
sarl
mov
dec
js
sub
daa
int3
jbe
xor
xor
xor
xor
xor
xor
xor
add
insl
pop
add
sbb
sbb
pushf
idivb
into
insb
jb
xor
dec
mov
in
sub
inc
call
pop
push
fwait
push
int3
or
lahf
lods
cmp
andl
je
mov
lea
out
mov
adc
rorl
repnz
rclb
cmpsl
mov
dec
inc
cmp
inc
push
pop
pop
arpl
cmp
or
jg
dec
scas
push
jge
xchg
mov
fdivl
xchg
jb
and
fisubrs
xchg
out
lret
cli
xor
jp
in
daa
sub
punpcklbw
int3
pop
enter
inc
adc
jmp
and
ja
adc
sub
std
lods
xchg
data16
fs
leave
xchg
pusha
dec
push
jne
dec
mov
inc
jp
jno
cmp
ja
pop
enter
roll
mov
sbb
fcomps
mov
jmp
ror
scas
inc
sarb
arpl
mov
test
pusha
mov
test
sub
mov
dec
add
pop
or
mov
incb
ss
shlb
xchg
sbb
loop
cmp
sub
fistl
mov
xchg
xchg
js
ljmp
mov
test
pusha
push
aad
mov
push
sub
sbb
loope
ja
mov
pop
daa
rcrb
rep
jnp
xchg
inc
xchg
and
or
lret
jmp
mov
xchg
int
cmp
inc
out
jno
rorb
jmp
inc
mov
push
mov
rorl
cmp
inc
xchg
imull
dec
inc
clc
push
dec
push
jecxz
push
fdivs
gs
inc
aaa
cmpsb
dec
adc
stos
lea
xor
pop
mov
mov
in
pop
adc
divb
xor
xchg
in
jb
or
push
sbb
or
rclb
mov
sub
inc
dec
jmp
jle
ja
mov
pop
sbb
push
sub
mov
adc
cld
inc
mov
add
sbb
pop
push
fucomip
and
xor
cmp
sbb
sub
push
mov
jl
push
stos
push
andl
insl
roll
rorb
repnz
inc
xor
icebp
repz
cmpsl
stc
push
add
and
sahf
mov
js
test
xlat
outsb
xchg
sub
dec
popf
test
test
mov
cwtl
rol
push
rcrb
adc
and
sub
stos
inc
fisttpl
or
lret
and
out
aaa
dec
pop
in
das
xchg
int3
pop
adc
xchg
sub
jbe
movsl
into
cmp
dec
in
adc
icebp
js
cmp
lds
int3
or
xchg
imul
je
clc
mov
outsb
add
sbb
ret
add
sub
mov
les
fsts
cltd
rorb
push
jno
sbb
out
andl
cmpb
out
lcall
push
cmpl
scas
dec
mov
xor
mov
mov
lods
pop
cmp
es
pop
jbe
call
lods
xor
mov
mov
gs
movsl
aas
repnz
fcmovbe
xor
mov
in
sub
aam
sbbl
xlat
inc
dec
outsl
inc
and
pop
es
mov
pop
das
mov
scas
jl
pop
jg
and
rcrb
fwait
or
dec
dec
fwait
movsl
mov
dec
xchg
sbb
xor
push
stc
loope
and
sahf
cwtl
popa
out
and
test
cli
lahf
push
hlt
aam
sbb
add
icebp
fs
lret
adc
nop
sbbb
fs
pop
cs
cmp
or
cmp
mov
idivl
cmp
fistps
out
shrb
xchg
in
push
pusha
or
mov
mov
mov
ret
cmp
dec
lahf
sbb
pop
xchg
sarl
cli
sub
and
faddl
ficoms
add
sbb
cmpsb
adc
sub
sbb
je
and
pop
jb
std
push
adc
add
shr
pusha
inc
push
mov
fisubrs
mov
jmp
push
cmpsb
xor
mov
jl
sbb
xchg
and
popl
pop
add
push
jmp
dec
push
pop
dec
enter
rol
adc
and
or
jb
pop
ja
test
jno
mov
loope
orb
iret
sbb
dec
imul
or
jp
jmp
pop
xor
lds
dec
jb
mov
imull
mov
clc
or
call
push
cmpsl
int3
lods
das
loopne
or
out
xchg
push
sbb
mov
mov
in
xchg
fcmovnu
sub
xchg
mov
xchg
cmpsl
inc
pop
mov
push
cwtl
leave
pop
pop
mov
popf
inc
mov
in
andl
and
lods
mov
fidivrs
push
or
xchg
xchg
push
rorl
fcmovbe
mov
ja
in
in
mov
das
mov
lods
dec
pop
ds
inc
js
sub
dec
je
xchg
fsubr
cwtl
notl
icebp
out
fdivrl
cs
loope
aaa
push
in
push
lods
cmp
or
outsl
insl
mov
mov
sbb
nop
sbb
movsl
movsb
push
fs
aaa
mov
dec
rcrb
sbb
sbb
js
inc
inc
xchg
mov
xchg
stc
dec
cmpsl
xchg
mov
ficoml
mov
and
outsb
jae
add
fsubl
mov
mov
xchg
adc
cmp
xlat
xchg
push
add
in
mov
and
shr
mulb
fwait
and
lds
add
nop
cmp
sub
cs
push
pushf
dec
pop
dec
add
mov
ljmp
bnd
ret
popa
pop
pop
daa
into
testb
cmp
fchs
test
mov
adc
popf
cmpb
push
lock
std
insl
mov
out
lods
mov
xor
sbb
xchg
hlt
inc
push
push
push
mov
fidivrl
inc
mov
and
and
xor
pop
add
sub
int3
push
in
fidivs
sub
jle
push
inc
pop
xchg
mov
ror
rcll
adc
mov
in
sbb
sub
in
lret
cmpsl
lods
dec
sbb
jne
or
outsl
test
daa
or
sub
ret
imul
rorl
test
push
inc
dec
sbb
mov
and
push
pop
adc
iret
rcrb
xor
pusha
in
pop
loope
adc
pushl
insl
stos
test
dec
fs
cmp
jle
jbe
rcl
add
pusha
enter
xchg
jmp
lret
dec
ret
les
fs
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
stc
cmp
push
cs
xchg
pop
xchg
xor
out
jl
stc
lods
aad
and
adc
or
cld
mov
or
jge
push
pusha
pop
aaa
ljmp
cmp
imul
cmp
lahf
hlt
mov
pop
stos
test
and
mov
or
lods
jo
jb
je
dec
cld
xrelease
shlb
lea
in
nop
dec
data16
int3
mov
fwait
sarb
sbb
ja
inc
std
add
cltd
int
inc
cmpsb
sbb
sbbb
sbb
adc
cmp
lea
les
popf
out
or
mov
mov
sbb
ja
out
fiaddl
pop
jp
ret
mov
das
cmp
rorb
mov
push
notl
out
movsb
adc
and
xchg
pxor
arpl
mov
das
fwait
out
sbb
andl
popa
mov
enter
jbe
cltd
push
push
adc
jb
push
mov
call
dec
and
lea
mov
arpl
gs
cwtl
sbb
test
rol
lret
push
fldcw
mov
sbb
aam
bound
jbe
dec
push
test
cmp
movsb
adc
lret
in
push
and
lock
mov
arpl
imul
dec
sub
add
xchg
incl
jle
jnp
sub
xchg
imul
roll
data16
sbb
hlt
addl
xchg
ret
enter
scas
xchg
mov
push
or
cwtl
scas
jne
xor
call
nopl
sbb
push
gs
jns
jp
lahf
adc
push
inc
add
adcl
push
cwtl
pmulhuw
or
cmpsb
pusha
add
and
shrb
imul
cmp
pop
mov
dec
mov
cmp
fisttpl
xor
repnz
jbe
sbb
push
sbb
icebp
icebp
push
loopne
movsb
js
js
xor
pop
insl
mov
outsb
fistl
push
push
push
jecxz
inc
cwtl
adc
test
aaa
inc
mov
cmp
sbb
int
push
dec
lahf
mov
inc
mov
aad
repnz
inc
jne
into
sub
jnp
test
pop
loopne
lods
mov
and
mov
fdivrs
pop
int
sbb
add
and
pop
xchg
ja
ljmp
cmp
pop
adc
xchg
mov
sarb
into
lock
inc
or
inc
jle
leave
cld
loopne
cmpsl
les
js
xchg
js
cmp
pushf
xor
mov
dec
daa
and
popf
in
pop
mov
and
mov
cmc
push
rolb
xor
pushf
insl
stc
ret
outsb
xchg
jo
paddb
mov
push
je
dec
enter
xchg
mov
or
or
into
lret
notl
movsl
cmp
push
aam
mov
pop
mov
mov
fadds
cwtl
sbb
mov
enter
ja
jne
cmpb
inc
add
mov
negb
xor
dec
in
out
cmp
lea
cmp
scas
sub
out
sub
test
jle
jmp
lods
orb
adc
outsl
sahf
popa
out
push
mov
add
and
rorb
jo
add
mov
icebp
push
repz
lds
outsl
les
dec
popa
push
inc
out
in
ja
pop
aad
cs
mov
rclb
mov
arpl
dec
das
in
jno
xchg
sbb
push
outsl
pop
in
lcall
in
addb
cmpsb
push
in
add
jmp
mov
shlb
mov
movsb
mov
leave
xor
or
mov
cmc
inc
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
xchg
add
add
clc
xor
add
aas
and
std
dec
push
fsts
xor
enter
cltd
push
mov
daa
test
mov
in
ret
aam
int3
pop
jecxz
sti
mov
xchg
repz
loop
dec
out
int3
fistpl
inc
cltd
add
xchg
aam
sub
ds
icebp
fmul
xor
in
test
inc
mov
shl
fbld
cmp
xchg
xor
or
int
push
pop
rcrl
push
mov
xchg
mov
mov
mov
sub
dec
rorl
xor
mov
gs
fdivrl
sub
dec
and
les
cs
gs
push
mov
mov
add
sub
and
pop
and
imul
mov
es
sub
enter
mov
sbb
adc
xchg
in
insb
dec
pop
scas
xor
xchg
insl
cs
dec
push
adc
ret
int3
fwait
pusha
mov
jmp
add
loopne
popa
mov
fidivrl
icebp
mull
xor
inc
cmc
loop
dec
cwtl
or
movsb
dec
lock
mov
lcall
mov
inc
insl
movsl
outsl
mov
xchg
push
cwtl
test
insb
jne
sub
adcl
movsb
and
pop
jmp
out
and
push
ror
mov
mov
clc
mov
jl
or
mov
xchg
out
pop
insb
lods
in
in
clc
test
push
jl
adc
fisubl
pop
in
push
add
sub
gs
pop
dec
lret
jmp
pop
and
idivb
sub
cs
das
test
xchg
aam
push
nop
push
in
add
into
mov
repnz
shll
adc
mov
insl
add
xor
lods
lahf
mov
sbb
cmpsl
out
push
ficompl
push
movb
mov
sub
testl
adc
fstpt
push
sbb
ja
shrb
lcall
scas
push
xchg
bound
mov
mov
inc
ss
xchg
xchg
aaa
repz
cmpsb
in
ret
mov
fidivrs
cmc
mov
stos
push
xor
jae
jo
aad
inc
ds
decb
in
add
lea
loope
mov
push
mov
xchg
xor
add
add
add
lods
dec
enter
out
rcr
test
les
push
mov
aad
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
add
add
dec
pop
mov
adc
cmp
shlb
int
jle
lods
hlt
add
pushf
dec
jg
mov
inc
push
pop
inc
add
pop
cld
into
fs
testl
push
dec
add
xchg
jbe
push
test
fs
dec
imul
push
test
lds
mov
xchg
dec
xor
ss
rep
sub
popa
icebp
pop
mov
xchg
fildll
mov
mov
repnz
into
repz
dec
xchg
add
out
jmp
loop
xchg
ds
push
stos
and
sar
lret
cmpl
add
pushf
jnp
add
mov
outsb
loop
jb
ljmp
popf
mov
dec
aad
imul
xor
pop
mov
push
daa
dec
xchg
pop
add
loopne
cmp
jle
sbb
push
mov
pop
push
js
pusha
mov
mov
imul
mov
cmp
out
mov
xchg
and
pop
test
mov
fldcw
aaa
push
jbe
and
mov
jecxz
sbb
inc
mov
pop
and
ret
movsb
mov
jl
adc
and
test
lds
push
adc
lcall
loopne
test
push
js
sub
xchg
ljmp
and
xchg
push
push
pop
mov
ret
mov
imul
fidivrs
push
cmovle
xlat
and
maskmovq
mov
sub
int
cmp
mov
push
fsubp
pop
lds
out
ret
add
xchg
call
shl
push
sub
shr
mov
ret
pop
mov
out
dec
xlat
mov
popa
xchg
and
fcoml
dec
and
adc
xchg
insl
movsl
addr16
mov
je
mov
ss
cmp
inc
adc
popa
cmp
add
ficomps
stos
in
call
push
add
sbb
lret
sub
test
cltd
shrb
ror
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
mov
pop
and
aaa
mov
sbb
icebp
imul
notl
scas
fnsave
adc
mov
idivl
xor
inc
cmp
stos
loop
push
pop
pop
xor
cmp
jmp
test
outsb
push
jge
and
xor
dec
push
xchg
xchg
shrb
mov
mov
aam
addr16
shlb
in
lahf
mov
stos
pop
push
incl
psrlq
mov
dec
jmp
push
dec
fs
mov
dec
rcll
xchg
in
xlat
outsb
push
cwtl
cmpsl
sarb
in
mov
adc
scas
push
xor
mov
dec
ds
jge
ljmp
push
into
sub
aad
cwtl
lcall
mov
sub
mov
jge
sar
mov
addr16
dec
push
loope
cmpsb
adc
fcmovu
rcr
cmc
push
ret
cli
jle
shrb
push
dec
and
inc
iret
testb
and
xor
pop
pushf
cmp
lds
jecxz
jnp
scas
push
scas
sbb
jne
shlb
push
popf
jl
push
adc
xchg
sub
push
cmp
and
dec
xor
adc
in
sbb
int3
mov
jb
nop
inc
and
and
or
or
push
pusha
hlt
mov
out
sub
and
mov
pop
jnp
cmpsb
int
int
xchg
inc
xor
adc
fisttps
push
in
je
ret
dec
std
leave
mov
fwait
loopne
or
in
sub
rcrb
dec
mov
imulb
inc
aam
xchg
lds
add
orps
lret
lcall
mov
sub
mov
pop
movsb
loopne
push
into
sub
mov
and
ds
and
cmpsl
lods
pushf
pushf
pop
roll
fildll
sbb
xchg
cmp
inc
add
dec
xchg
mov
fnstcw
add
inc
lcall
push
dec
lods
adc
into
stos
mov
or
movsl
fildl
je
andl
cmp
cmp
cwtl
dec
stos
mov
lret
leave
xchg
mov
outsl
adc
lods
add
out
push
insb
hlt
jns
leave
dec
test
add
mov
pop
frndint
push
or
cmpsl
adc
sbb
andl
pop
xchg
xchg
jb
dec
xchg
cmp
xor
or
insb
xor
addr16
cmp
test
test
jecxz
stos
mov
rcll
xor
aam
mov
aaa
stc
lods
jnp
xor
mov
mov
lret
lcall
fdivs
mov
jmp
xchg
imul
push
fiadds
outsl
notb
mov
inc
testb
push
daa
int
js
dec
xor
sbb
sbb
jb
adc
stos
jo
cld
jb
and
out
cmp
jo
xor
lahf
test
jmp
jge
mov
scas
inc
mov
xchg
mov
jg
mov
out
test
sbb
mul
xor
xor
lds
jnp
and
sbb
ds
pushf
or
sysexit
push
and
stc
and
or
je
jb
int3
jb
loop
test
rclb
fisubs
jg
cmp
push
jns
leave
and
test
cld
adc
sti
leave
leave
cmp
sbb
mov
mov
push
pop
mov
pop
jae
mov
insl
shrb
xchg
jmp
rcrb
ja
dec
mov
inc
mov
adcb
lds
pushf
bound
in
clc
sti
cmc
jmp
loopne
rclb
and
jbe
insl
cltd
add
stos
dec
push
inc
xchg
ds
jle
ficompl
xrelease
test
mov
loope
loopne
lods
xor
jb
jno
dec
lds
cwtl
rorl
pop
mov
xor
mov
xor
push
inc
out
push
scas
es
jae
hlt
mov
push
xor
cmp
xor
imul
pop
mov
push
mov
clc
jnp
dec
ss
adc
shll
bound
dec
cltd
jnp
sbb
dec
cmp
inc
pop
pusha
test
insl
popa
cltd
ja
xchg
push
dec
mov
cmp
test
repz
imul
pop
xor
sbb
mov
movsl
dec
xor
out
lods
push
push
loop
inc
inc
dec
add
dec
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
xor
jle
push
int
cli
sbb
and
push
inc
data16
int
or
clc
imul
mov
jle
sub
fidivl
or
xchg
push
pop
dec
shrb
xchg
mov
int3
movsl
out
cmc
push
insb
stos
mov
push
push
jge
lret
sbb
pop
mull
pop
jecxz
shl
adc
or
push
sub
stos
loopne
push
test
pop
push
lods
add
or
sbb
cmpb
sub
or
fs
or
ja
xorb
inc
pop
xchg
stos
adc
cmpl
jg
stos
xchg
and
aad
and
lret
xor
xchg
and
lock
sub
xor
and
adc
pop
imul
popf
test
cmp
xchg
cmp
push
sar
inc
lret
sti
jb
mov
lret
stc
out
and
rcll
sub
push
mov
lret
mov
in
and
pop
mov
mov
imulb
scas
popf
or
test
xchg
test
pop
cs
jge
mov
pop
les
sub
call
cli
and
jne
mov
into
jl
lock
xorl
std
clc
and
jmp
mov
sub
popf
sbb
and
movsl
mov
nop
pop
fsts
cmpsb
dec
je
mov
jb
lods
mov
xchg
mov
cwtl
ret
xchg
push
fdivl
pop
std
stc
stc
push
pop
mov
add
divb
dec
xchg
sub
enter
sbb
inc
movsb
or
pop
sti
jno
jo
cmpsl
lock
dec
das
sub
or
mov
sahf
sub
xchg
rcrl
das
push
lds
outsl
jns
add
sbb
sub
test
push
iret
cmpsb
test
pop
and
adc
std
fbld
xlat
sub
push
add
or
adc
xchg
dec
pop
fwait
popa
insl
nop
loop
in
jns
mov
push
loopne
jb
sub
push
xor
cwtl
mov
push
sbb
pop
xor
sub
addr16
jnp
adc
mov
cmp
fldcw
mov
gs
xor
pushf
out
jl
add
dec
adc
push
mov
out
dec
cli
out
xchg
mov
sub
mov
xor
ficompl
mov
dec
cld
mov
into
lret
cmp
lea
aas
test
add
stos
mov
xorl
cmp
inc
out
jbe
aas
or
das
mov
lret
ljmp
fstpt
arpl
imul
mov
and
jle
fsubp
hlt
fsubp
scas
xor
jno
int
rol
jno
cmpsb
push
nop
movsb
lods
cmp
imul
pop
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
push
add
mov
add
movsl
loop
fs
in
les
std
xchg
int3
clc
add
sbb
out
jnp
xlat
jno
imul
scas
xor
dec
mov
xchg
mov
imul
sbb
ljmp
fucomi
cmp
mov
in
xor
ljmp
mov
xor
cmpsb
cltd
sarb
sti
daa
adc
cltd
cmp
ss
aad
repz
mov
ss
sbb
bound
out
cld
repz
test
rclb
enter
and
cli
aam
pop
mov
cmpsl
xchg
gs
mov
mov
cmc
mov
into
loop
jnp
xchg
mov
pop
and
jae
scas
iret
cmovge
lds
jmp
in
sub
mov
shl
jmp
mov
pop
adc
shlb
loopne
arpl
movsb
mov
xchg
lret
int
addr16
inc
inc
test
cwtl
xor
push
push
nop
rcr
mov
sbb
in
pop
push
xor
or
pop
cmp
xor
dec
xor
dec
imulb
pusha
sbb
cltd
or
xchg
lods
adc
rol
cwtl
pop
mov
test
mov
enter
shlb
dec
movb
shr
mov
cmpl
add
loop
xlat
int
add
and
mov
push
jecxz
ret
inc
mov
xlat
mov
mov
orl
adc
in
mov
ljmp
xchg
clc
int
insl
pop
sarb
mov
das
popfw
xor
fdivr
imul
addr16
iret
pop
call
fstp
adc
pop
movsl
inc
push
add
leave
stc
aad
addr16
xorb
xchg
rcrl
sub
cmp
loop
jecxz
push
inc
in
and
mov
xchg
or
adc
mov
popa
or
xor
dec
mov
pop
adc
mov
cmpsb
int3
and
jle
inc
jl
mov
cmp
mov
bnd
ret
in
ret
daa
js
cmpsl
mov
in
xor
mov
pop
sbb
jb
lds
repz
or
lret
repz
jl
dec
add
inc
cmp
into
outsl
add
sbb
adc
mov
hlt
inc
aaa
push
lds
sbb
xor
ss
inc
mov
sbb
xchg
cli
push
pop
rorl
jae
jnp
es
outsl
les
push
xchg
js
inc
dec
daa
test
fs
loop
lret
mov
out
pop
push
fstpl
jmp
dec
ds
insl
pop
mov
jne
je
fidivs
inc
es
test
inc
jecxz
in
test
jl
mov
push
int3
ficompl
lahf
inc
call
insb
loope
xchg
push
pop
push
xchg
dec
je
mov
outsb
add
hlt
push
addr16
jl
jns
cmp
test
or
mov
in
out
aas
repnz
lret
push
stos
lret
stos
jb
mov
cmp
xor
xchg
stos
sub
or
and
cli
inc
ss
aam
pop
sbb
movb
add
in
sbb
cwtl
loope
sbb
push
jbe
jg
mov
adc
mov
or
stc
fidivrl
outsb
mov
inc
adc
adc
xchg
loop
push
mov
sarl
das
push
icebp
cmpsl
xor
pop
mov
cmp
push
cmpsb
jno
stos
sarl
stos
lods
pusha
sbb
orl
out
inc
pop
add
sub
insl
lea
push
and
lret
lods
and
mov
out
scas
jecxz
pop
push
mov
sbb
xchg
idivl
imul
scas
sbb
cmpsl
lods
cs
and
loopne
pop
mov
outsb
push
jle
test
adc
xor
push
cmp
push
in
stos
pop
popa
pop
jae,pt
sub
hlt
cwtl
mov
test
shlb
in
mov
pusha
ret
loopne
addr16
out
sbb
cmp
adc
xor
aam
inc
sub
mov
inc
test
push
inc
loope
int
scas
inc
sub
cmp
sub
popf
dec
pop
icebp
xchg
js
pop
sbb
pop
lret
sbb
stos
leave
cmp
pop
push
pop
push
xchg
ficoms
lock
dec
call
fcomip
xchg
inc
push
jp
fwait
adcb
pop
inc
aas
pop
cltd
cmc
andb
xchg
push
or
ds
js
outsl
idivb
cmp
cmp
xchg
mov
out
push
adc
lds
aaa
dec
push
test
mov
push
in
neg
push
call
out
cmc
jnp
mov
fisubs
mov
out
pushf
adc
mov
mov
mov
inc
fcompl
jbe
cltd
cld
rolb
insb
add
in
lret
iret
mov
cmpsl
push
sub
add
movsb
xchg
mov
xchg
add
xchg
xchg
aas
pop
xchg
mov
and
jb
add
cmp
mov
outsl
sahf
sar
jo
or
sbb
pop
enter
pop
push
pop
jbe
mov
dec
or
ds
shll
mov
cmp
notl
ret
inc
lods
push
inc
mov
test
sbb
out
and
cltd
push
dec
cld
hlt
insl
adc
mov
cmpsl
adc
pop
jmp
xchg
ljmp
aad
cs
mov
xchg
inc
bound
je
cmpsb
mov
push
out
jbe
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
xor
std
lock
fmul
cmp
jmp
push
mov
shrl
out
cld
mov
decb
ret
repnz
sahf
cmp
jno
inc
pushf
shll
repz
addb
mov
iret
ja
repz
dec
adc
pop
popa
sub
xchg
and
jno
sahf
lock
or
cld
nop
pop
sub
and
mov
push
int
stc
jl
and
aam
icebp
or
sub
js
pop
imull
cmp
jns
ljmp
xor
cmc
sub
cmc
cmpsl
jbe
fisubl
pushf
data16
push
clc
in
insb
test
fcoml
sbb
in
jnp
dec
adc
or
add
mov
lods
leave
fwait
data16
adc
xchg
cli
and
or
leave
dec
and
xchg
xchg
cmp
movsl
fsubs
lock
fbld
icebp
add
mov
and
xorl
push
cmp
add
shrb
pop
hlt
jbe
es
sub
or
fsub
int
pusha
xchg
shrb
imul
sub
in
xchg
pop
or
adc
sti
jle
dec
xchg
ror
jne
xor
sub
in
jmp
dec
es
cmpsb
js
mov
inc
adc
aad
mov
or
adc
sti
lahf
adc
out
xor
sbb
mull
sub
pop
mov
sahf
cltd
jae
mov
pusha
rolb
inc
das
add
test
xchg
sub
pop
xlat
inc
sbb
cmp
mov
cmp
popf
fists
mov
add
into
jle
pop
sbb
out
arpl
stos
into
xchg
cmc
in
push
jae
mov
mov
lock
ud1
mov
mov
mov
push
or
es
mov
imul
and
pop
mov
mov
dec
push
enter
xchg
push
repz
jo
int3
sbb
jno
inc
jnp
loopne
push
aas
sbb
push
xchg
test
loop
xor
pop
cmpsb
and
jo
jne
pusha
cmp
je
mov
arpl
push
sub
std
mov
sbb
mov
rorl
mov
icebp
push
inc
test
mov
pop
arpl
aad
inc
push
xor
cmp
sbb
pop
jnp
add
push
loop
jmp
das
repnz
pop
mov
shlb
pop
ret
push
sti
sub
mov
cmp
iret
add
int3
jl
stc
mov
cltd
push
mov
inc
shll
mov
mov
cmp
in
cmp
in
push
dec
sbb
insl
inc
and
imul
popf
xchg
sbb
out
sarl
adcb
inc
and
mov
push
jno
loopne
sbb
movl
and
aas
mov
jg
sti
jl
fcompl
hlt
icebp
pop
sbb
movsl
and
data16
cs
fimuls
push
and
iret
push
mov
cmp
inc
fnstcw
xchg
inc
add
inc
test
jne
sub
movsl
adc
mov
loope
cltd
xchg
dec
in
xor
and
imul
iret
sbb
xchg
add
pusha
mov
mov
pop
and
mov
pop
push
adc
pop
je
sub
and
xor
imul
mov
xor
pop
add
ja
and
test
daa
sub
jne
add
xchg
sbb
lock
push
out
or
clc
aam
dec
push
ljmp
in
xor
cmp
das
sub
call
mov
push
cld
mov
mov
and
inc
sub
js
xchg
adc
pushf
mov
imul
stos
orb
push
push
fidivrs
in
xchg
pop
sbb
add
adc
add
inc
lods
mov
lret
adc
in
sbbl
pop
jl
or
mov
ja
xchg
lods
movsb
inc
daa
daa
aad
icebp
jl
scas
sbb
lods
shlb
jno
adc
dec
adc
imul
fisttps
test
sub
test
std
push
pop
mov
pop
out
mov
mov
aas
das
jle
ret
daa
arpl
jbe
mov
enter
icebp
and
jno
cmp
pop
adc
dec
int3
je
dec
fs
jo
cmp
xchg
imul
inc
loope
jbe
mov
iret
cmpsb
jmp
cmpsl
pop
fwait
sarb
xchg
bound
or
xlat
sysret
sahf
adc
xchg
mov
cwtl
sarb
ljmp
imul
fisubs
xor
popa
movl
pop
adc
push
imul
fsubrs
or
pop
mov
pop
clc
jno
mov
mov
jnp
outsl
jmp
movsl
cmp
push
iret
fisttps
cmp
inc
dec
mov
inc
dec
stos
inc
outsb
stc
cmc
xchg
movsl
lret
mov
pop
arpl
dec
or
sbb
pop
test
lods
fstps
xor
xor
inc
push
loope
mov
lahf
addr16
scas
mov
les
inc
pop
jmp
icebp
nop
adc
call
imul
cmpsb
in
mov
pop
dec
scas
add
cmp
filds
loope
xor
cmp
repnz
movsl
sbb
fldcw
std
scas
cmp
inc
into
aas
out
fsubr
out
xchg
xchg
or
jl
xlat
mov
pop
xchg
out
cmp
mov
mov
and
or
cltd
std
xchg
pop
mov
mov
mov
jecxz
pop
mov
mov
scas
and
jne
in
add
aaa
sbb
mov
ds
test
mov
pusha
xor
cmpsb
pushf
lods
adc
ret
mov
mov
fiaddl
popfw
push
sub
mov
mov
pop
mov
fsubp
xchg
xchg
inc
push
imul
pop
push
fdivrl
dec
xchg
mov
es
fsubr
pop
fstl
sub
add
add
pop
aaa
data16
or
push
lods
inc
scas
cmc
jns
add
aas
jg
cld
cmp
cmp
je
push
fsubs
insl
ret
andl
in
push
fs
cmp
aaa
mov
gs
insb
iret
cmpsl
pop
cmp
movl
punpckhwd
negb
dec
xor
sub
xchg
jmp
xchg
je
dec
mov
pop
and
scas
jg
fs
mov
dec
mov
push
inc
cmp
add
and
ss
add
mov
test
jo
or
xor
dec
pop
lds
jl
adc
add
add
jg
xor
das
adc
lcall
lcall
ss
call
pusha
sub
or
cltd
mov
mov
pop
push
rolb
xlat
jno
scas
cmp
dec
or
pop
jecxz
push
cmp
xor
sar
test
jle
scas
rol
lods
sub
es
movsl
inc
popa
imul
test
sub
pop
out
sbb
dec
jne
fwait
cmp
rcrl
xor
stc
mov
pop
out
cs
loope
sub
inc
andb
std
es
sahf
jns
mov
add
cwtl
loop
repz
mov
mov
sbb
add
jle
std
push
push
sahf
jae
pop
dec
test
and
mov
jns
mov
sbb
jp
je
mov
jge
stc
leave
cli
fcompl
mov
stos
lcall
rorb
or
pop
jnp
scas
dec
mov
add
rolb
and
cmp
out
subl
and
in
push
fs
lods
cmp
mov
pop
inc
dec
cmpb
out
mov
jle
movsl
or
or
mov
mov
jmp
lahf
insb
je
pop
mov
dec
into
ja
cmp
scas
rolb
inc
cmp
jle
mov
jb
js
mov
sub
cmp
div
push
add
cmp
inc
inc
push
or
xor
and
and
push
aad
lea
fcoml
dec
pop
ret
mov
mov
lods
sahf
movsl
or
push
and
sub
dec
cmp
jo
sub
gs
cmpsb
pop
popf
popl
outsb
clc
lods
jo
mov
in
add
pushf
lods
popf
sbb
inc
jp
in
dec
lods
and
push
cmp
ret
aad
nop
inc
jne
jmp
sbb
inc
jb
sti
loopne
ja
sahf
lret
adc
cmpsb
popa
mov
sbb
mov
sbb
lcall
inc
cmp
popf
mov
push
fstpt
sub
or
sbb
out
mov
in
lret
mov
sub
ds
pop
adc
mov
lcall
and
mov
out
sub
lds
sub
sub
push
mov
iret
inc
outsb
cmc
into
sbb
inc
in
cmp
push
test
and
jg
bound
fistps
xchg
add
sbb
push
and
mov
nop
pop
fidivs
xor
lock
sbb
je
pop
mov
std
mov
repnz
jl
xchg
mov
roll
fstl
adc
xchg
fcomps
sub
mov
lea
xchg
adc
push
mov
cmpsl
hlt
push
push
shlb
cmp
mov
in
cmp
sub
sub
and
fs
out
mov
lea
lock
lahf
cmp
xchg
xchg
stc
mov
mulb
sub
arpl
repz
test
dec
and
sub
inc
insb
push
int3
and
cltd
lods
cmpsl
stos
cmp
lds
push
add
popa
adc
xchg
out
cmp
push
or
inc
int3
mov
scas
into
inc
xor
sub
xor
xor
cmp
rolb
pushf
mov
sbb
frstor
loopne
mov
and
les
fs
outsb
lret
aas
xchg
xor
xor
xor
xor
xor
xor
xor
xor
add
push
push
add
mov
fmulp
scas
inc
sub
push
loope
xchg
xor
adc
push
call
sahf
xor
xchg
cmp
lret
lret
test
mov
lcall
je
mov
insl
shlb
and
popl
sub
mull
jmp
cmp
or
xchg
ret
pop
loope
fsubrp
shll
dec
pop
mov
loop
lods
inc
or
into
clc
sbb
mov
out
out
dec
test
test
and
or
add
push
call
sub
leave
cs
divb
lret
jbe
ss
jecxz
mov
mov
fsubr
mov
int
iret
xor
test
in
sbb
sahf
testb
pop
nop
divl
cli
in
lods
lsl
add
shll
xor
imul
push
dec
cmp
inc
enter
shr
push
fidivs
push
stos
push
out
cmc
mov
fstpl
xchg
stos
dec
loopne
pop
bound
mov
into
push
repnz
xor
or
insl
pop
jl
jno
lahf
scas
sub
push
mov
dec
lahf
lret
sbb
xchg
cmp
mov
addr16
js
adc
dec
xchg
lret
sbb
xor
jnp
ret
test
xchg
loopne
inc
fistps
das
add
movsb
mov
push
push
shrl
pusha
out
cltd
and
inc
adc
aaa
jo
xchg
in
out
push
add
repz
rolb
pop
or
jbe
test
lret
lds
and
pop
leave
nop
enter
outsl
inc
mov
or
inc
jmp
jge
stc
aad
dec
loopne
jp
push
and
popa
mov
out
jge
mov
daa
dec
dec
xchg
adc
mov
mov
inc
fbstp
arpl
insb
cmp
aad
jl
lret
push
ss
mov
cmp
xchg
jecxz
divb
bound
out
or
push
stc
setbe
scas
jmp
in
bound
in
rorb
xchg
mov
jmp
jb
mov
jb
jg
mov
add
outsb
es
loopne
sub
jne
and
mov
loopne
cmpsb
push
add
jecxz
fcomp
xchg
loope
ss
sbb
jle
fcmove
aad
inc
dec
mov
stc
and
xchg
add
mov
inc
dec
imull
xlat
das
add
stc
sti
mov
fimuls
mov
cmp
cwtl
imul
mov
sbb
xor
rolb
jmp
loopne
jle
out
jns
nop
ficoms
mov
push
sbb
inc
mov
test
cmc
stc
mov
fsubrl
loope
mov
enter
int3
fdivrs
rol
inc
arpl
or
sub
or
lock
in
std
subl
test
jne
xchg
subb
out
push
cltd
iret
xor
push
inc
lods
pop
outsb
push
push
sbb
xchg
mov
shufps
mov
or
insl
repz
aad
xchg
jmp
pop
std
in
dec
mov
sbb
mov
enter
or
sub
gs
sub
pusha
cld
push
sub
inc
mov
insl
sub
out
loope
shll
add
jecxz
or
sahf
dec
mov
lahf
js
aad
shl
cltd
outsl
jmp
sub
int3
dec
lods
leave
adc
call
icebp
jb
sbb
pop
lds
adc
sub
and
mov
stc
pop
leave
add
imul
xchg
cmp
jecxz
and
mov
into
inc
imul
and
test
test
pop
inc
ret
xchg
mov
jnp
inc
cmp
add
pop
mov
lock
lods
test
pop
decb
pop
imul
mov
xor
xchg
add
test
in
xchg
dec
int3
out
movsb
cmp
lahf
jbe
icebp
xchg
mov
pop
dec
hlt
mov
pusha
hlt
sbb
adc
dec
and
movsl
clc
popf
bound
insb
or
out
adcl
sbb
fisttpll
mov
xor
mov
jae,pt
fdivrs
pop
jo,pn
sbb
mov
or
pop
movsb
rcll
test
lods
or
out
sbb
in
sub
subl
sub
push
mov
xchg
mov
in
lds
push
enter
test
subl
ret
ret
stos
sbb
sbb
scas
sub
cmp
aaa
add
insl
mov
mov
icebp
mov
test
sub
mov
push
test
fwait
or
movsl
imul
dec
shl
or
int
dec
outsb
test
inc
sub
loope
sub
dec
mov
fcmove
aaa
xchg
fcoml
lods
sahf
hlt
cmpsw
inc
mov
in
or
pop
lea
test
cltd
mov
cmp
mov
iret
xor
mov
test
and
out
frstor
xorb
or
mov
lahf
fistpll
xlat
subl
pop
pop
lea
fcoms
push
mov
jp
fcomps
das
hlt
lcall
sub
shlb
mov
pop
cmp
xchg
jl
out
mov
call
out
out
mov
jns
in
inc
mov
pop
dec
test
in
pusha
in
mov
jg
jl
or
idivb
xchg
pop
sbb
dec
jmp
mov
or
cmp
mov
mov
imul
in
or
jg
mov
sub
icebp
pop
or
dec
imul
xor
xor
xor
xor
add
push
add
add
ds
inc
jne
shr
push
jae
cli
pop
fistpll
push
jns
cli
lcall
les
cmp
or
inc
ss
fmulp
add
enter
shlb
or
cmpsl
jb
mov
xchg
mov
fisubs
mov
testb
or
data16
push
xchg
push
outsl
mov
pop
negb
push
jns
addb
cmp
xchg
sub
enter
je
rol
decl
cmp
icebp
shlb
jmp
adc
in
mov
cwtl
loopne
dec
bound
aaa
int3
jmp
push
mov
inc
shlb
loop
test
pop
ret
sbb
loope
mov
push
cmp
add
inc
adc
add
sub
jge
mov
sbb
ja
insl
inc
jge
sbb
adc
pop
mov
out
or
inc
aas
mov
and
fdivrl
jle
or
pop
lock
dec
cmc
popf
mov
cmp
jo
insb
aad
add
lcall
aam
sbb
xchg
push
xor
fstps
jle
in
add
xor
and
xor
mov
adc
inc
and
ja
adc
xor
loope
lods
or
push
pop
mov
cmp
mov
pop
sahf
js
mov
cmp
lret
mov
test
sahf
outsl
out
xchg
ret
add
outsl
mov
mov
arpl
inc
sahf
jecxz
mov
pushl
insl
xor
movsb
inc
adc
imul
adc
cld
ljmp
imul
dec
iret
xor
jns
push
mov
push
lcall
jle
shll
in
lahf
adc
push
or
cmp
jle
add
aaa
xchg
ja
lods
cmp
mov
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
roll
add
montmul
cmpsb
dec
add
add
jo
mov
lret
lods
mov
and
xchg
push
cmpsb
test
jle
xchg
aaa
hlt
outsb
mov
insl
mov
push
or
push
ret
cs
std
fsts
jp
daa
xchg
mov
or
adc
sbb
pushf
mov
std
jge
inc
stc
sub
mov
jbe
mov
aas
fs
cli
ja
mov
into
adc
das
lret
mov
jno
insl
into
and
into
dec
pop
aad
or
je
idiv
xor
cmp
aad
mov
imul
push
dec
pop
dec
mov
mov
pop
jle
fisttpl
dec
jo
dec
inc
bound
mov
popf
imul
enter
mov
outsb
add
sub
in
bswap
xchg
pop
movsl
inc
in
jb
xlat
jb
or
push
out
ja
test
sbb
das
xchg
adcl
cmc
adcl
add
dec
add
test
call
iret
ret
dec
lret
xor
test
arpl
mov
xor
in
and
add
sbb
dec
in
xor
mov
inc
mov
aam
inc
jmp
popf
dec
in
mov
cld
sbb
add
dec
ds
pop
daa
movups
hlt
lret
xchg
adc
and
lahf
push
cmp
fldl
std
rcl
and
mov
enter
dec
mov
filds
xor
pop
test
cld
jecxz
nop
mov
pushf
js
data16
mov
pop
ja
xor
add
cmp
fsts
mov
mov
int3
xchg
or
sbbl
mov
out
xor
jg
pop
sahf
lret
inc
std
or
pop
into
out
sub
outsb
lcall
and
mov
pusha
out
push
fwait
aam
rclb
mov
inc
test
hlt
pusha
cmp
jmp
sub
hlt
pusha
xlat
bnd
jmp
int
xchg
add
insb
xchg
out
popf
mov
rcrb
enter
and
sub
xchg
insb
into
add
lret
imul
pop
jp
daa
in
add
in
insb
push
je
or
jle
mov
xor
mov
lret
mov
dec
mov
pusha
push
push
dec
mov
mov
or
out
lret
popf
ret
rcll
add
in
loope
xlat
fcoms
insb
xchg
cld
mov
test
test
pushf
cmp
and
push
xchg
ds
mov
inc
dec
adc
xor
pop
push
insb
push
inc
cmp
lcall
pusha
pop
or
fs
ljmp
call
mov
pop
and
push
out
subl
iret
out
or
fcom
pop
loopne
fstl
xchg
int
sti
je
lahf
mov
loop
push
cmc
mov
sbb
dec
loopne
pop
std
or
sub
mov
inc
cmpl
popa
mov
in
mov
or
aas
iret
mov
mov
sub
cld
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
aas
popf
js
lret
mov
mov
push
xchg
cmp
jnp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
add
scas
adcl
mov
aam
jae
lret
dec
dec
sub
into
push
dec
xor
cmp
andl
or
cmp
loopne
mov
sub
pop
jmp
sbb
jo
popf
jmp
ja
xor
imul
sbb
fdivrl
pop
push
loope
rol
inc
jo
addb
repz
nop
push
in
aaa
inc
add
inc
xchg
loope
push
mov
in
dec
dec
data16
and
mov
enter
outsb
dec
xlat
shr
add
sub
testb
ss
cmc
push
push
ret
cltd
mov
add
sub
pop
mov
mov
adc
and
jge
adc
aaa
sarb
ss
sub
mov
jns
in
mov
sub
xor
sbb
imul
shll
mov
inc
popa
adc
inc
lock
fisttpll
xchg
push
sub
addl
mov
or
out
inc
jecxz
popf
mov
and
jg
add
mov
int
xchg
sub
cmp
scas
mov
jmp
push
sbb
pushf
pop
jae
fdivp
out
xor
sub
into
pop
xor
sbb
filds
pop
shlb
xor
inc
cs
imul
pop
or
or
jae
fstps
ljmp
lds
fdivr
jl
pusha
sub
add
push
in
jb
jne
out
jb
inc
or
jnp
mov
or
kxnorw
cmp
sub
mov
adc
int
mov
sub
nop
inc
lret
xchg
inc
hlt
dec
je
jmp
jne
popf
hlt
fldcw
push
scas
xor
scas
jno
push
movsb
sbb
inc
les
clc
rcrb
or
xor
mov
mov
jae
xchg
rcl
setg
jno
pop
xchg
addr16
sti
jmp
clc
dec
scas
lock
pop
fisttps
jp
jae
stos
sbb
inc
int
xor
sub
mov
out
popa
push
xor
or
lcall
jp
scas
xchg
inc
imul
daa
lret
or
out
into
stc
imul
cli
and
or
jno
or
repnz
out
fmull
movsb
ret
jle
lahf
add
pop
add
dec
ss
sub
sub
daa
sbbb
es
lds
mov
cmp
test
and
lds
dec
xlat
mov
adc
xchg
movsb
mov
mov
sti
cmc
mov
lcall
imulb
scas
mov
push
jmp
imul
mov
popa
adc
lods
lret
fstpt
leave
and
mov
es
fldl
lds
sub
fbld
scas
mov
bound
mov
test
ret
xor
ret
xor
jmp
je
xor
jo
repz
nop
cmc
aaa
out
pop
pop
addr16
push
mov
dec
mov
in
outsb
xor
sti
decb
cmp
jl
pop
jge
popf
mov
pop
jle
or
call
loope
xchg
in
pop
xor
sbbl
fiadds
mov
xor
rcll
push
mov
add
and
sti
test
cmc
fistpl
xchg
test
cmpb
inc
je
inc
rolb
xor
mov
ja
jmp
inc
repz
xchg
sub
cmp
push
ror
out
lahf
pop
push
pop
stos
test
pop
jmp
jp
in
jno
xor
fmuls
call
mov
insb
jg
and
pop
ss
pop
sub
xor
push
adc
shrl
jmp
sbb
fsubrl
jb
insb
test
pop
inc
mov
into
popl
mov
js
repz
insl
je
call
pop
inc
aaa
cmpsl
pop
jbe
out
lahf
dec
jp
dec
mov
fldcw
mov
xchg
outsb
inc
sbb
mov
push
mov
xchg
outsl
sub
aas
inc
imul
push
cmp
dec
ret
stc
sub
test
or
jae
int
pop
push
addr16
pop
cmp
jg
pop
sub
sbb
test
out
pop
jne
inc
jae
fwait
dec
mov
or
xlat
xchg
lock
sbb
pop
jle
mov
jle
xlat
and
xor
push
jecxz
fdivr
aaa
imul
sub
loop
sbb
xchg
inc
loopne
les
andb
ss
cmp
sarb
clc
iret
cld
popf
ret
pusha
xor
outsb
cli
inc
imul
push
jecxz
movsl
aam
shl
rcrb
loope
shl
fldenv
or
lods
fmuls
in
lret
cmpsb
sbb
adc
mov
aad
ja
cmc
pop
pusha
jg
add
mov
mov
xchg
pop
jns
inc
out
xor
test
dec
imul
sbb
xor
aaa
mov
and
mov
mov
inc
cmp
mov
jbe
inc
insb
mov
pop
incb
xchg
popf
jae
jo
cli
fbld
mov
sbbb
data16
dec
daa
stos
adc
test
ret
gs
push
insl
ja
push
fnstcw
jo
std
xchg
adc
xor
push
cmp
jbe
or
mov
add
int
sbb
movsl
ja
loope
push
sbb
lret
bound
cmp
dec
add
xor
and
adc
mov
jg
mov
and
loop
lods
aaa
rcrl
repz
jbe
and
cld
xchg
and
xchg
pop
add
std
dec
rcl
aas
inc
push
lds
lods
addr16
add
mov
mov
fidivl
mov
fisubrs
push
fbstp
mov
rcrb
cmp
mov
das
xchg
push
inc
je
mov
cld
xor
mov
push
or
xor
xor
and
add
cmp
add
ret
add
fdiv
aas
and
and
xchg
jl
popf
add
movsb
scas
fs
out
and
xchg
inc
pusha
push
xchg
jns
dec
xchg
shl
pop
cmpsb
cmpsl
xchg
add
add
inc
insb
das
mov
ljmp
aad
insb
cmp
sbb
aad
faddl
dec
jmp
popf
xchg
dec
cmpsl
popa
mov
and
or
mov
pop
testb
mov
jno
mull
hlt
in
icebp
mov
enter
loopne
or
repnz
es
ss
push
bound
cmp
dec
pop
test
xor
dec
mov
fdivr
mov
daa
js
addb
cmp
add
shrl
cmp
dec
pop
rolb
sbb
sbb
cs
cmpsl
xchg
jae
pop
je
xor
gs
ljmp
inc
lahf
sbb
cmp
sub
or
add
cs
scas
int
mov
mov
xor
sti
repnz
stos
out
inc
in
mov
data16
loop
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sahf
add
add
adc
add
mov
fwait
mov
pop
push
loop
mov
adc
sahf
push
push
aad
aad
aam
mov
inc
shl
scas
arpl
xchg
inc
ss
jb
pop
movsb
xchg
sub
push
mov
fnsave
stos
lea
push
aas
mov
and
cltd
lahf
ds
sub
cs
xor
movsl
push
fldt
adc
daa
fldl
xor
dec
adc
mov
dec
test
xor
or
int
aad
stos
test
sbb
stos
int
or
js
and
xor
push
sub
fdivr
test
cld
fsubl
pop
sub
cmpsl
mov
sbb
dec
imul
orl
lret
dec
in
dec
dec
jns
fs
out
add
imulb
sbb
shll
inc
jmp
nop
mov
enter
shlb
mov
mov
imul
sub
jns
imul
ret
arpl
outsl
push
movsb
sahf
jbe
shlb
mov
adc
fmul
test
test
mov
mov
test
inc
push
inc
inc
insl
jns
cltd
pop
xor
mov
cs
out
mov
sarb
cld
sub
push
jo
out
aas
adc
cmp
int
push
xchg
enter
fldl
cmp
mov
push
or
in
std
sub
lds
sbb
cmp
ds
in
imul
call
push
in
ficomps
pop
dec
sub
popa
out
sti
inc
push
fisttps
popa
jno
inc
adc
inc
xchg
das
jb
push
mov
loope
in
inc
int
jge
push
dec
dec
xlat
sbb
loope
or
push
push
loopne
dec
or
push
jo
jmp
mov
popa
sub
repz
mov
divb
aaa
xor
mov
test
jle
mov
dec
inc
inc
out
xor
enter
ret
call
je
nop
in
aas
imul
faddl
add
shl
cmp
add
ljmp
in
xor
insb
add
sub
in
shll
inc
cmp
add
cmc
pop
rcr
hlt
mov
push
daa
stos
jecxz
and
int
pop
mov
sbb
sbb
aam
mov
dec
pop
fisttpll
mov
xchg
pop
bound
inc
push
pop
sbb
iret
lods
sbb
adc
mov
mov
inc
movsb
push
js
dec
pushf
mov
ret
pop
jle
xchg
pop
mov
sub
notl
cmp
int3
cmp
and
push
add
pop
out
sub
aam
mov
fwait
xor
sbbl
shlb
xchg
ror
xchg
es
outsb
popa
lret
mov
icebp
sbb
pop
or
xor
inc
or
imul
outsl
lods
inc
out
inc
sub
xchg
mov
xchg
jecxz
enter
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
add
add
in
pop
or
push
out
rorl
test
ja
lcall
xor
xchg
xor
push
push
dec
jle
jns
popa
push
or
ficomps
testb
push
mov
out
insb
ds
repz
mov
cmp
sbb
mov
pop
fwait
inc
mov
add
mov
jns
mov
movsl
mov
lret
xor
jl
fstpl
test
loopne
mov
push
in
in
loope
pop
or
stos
pop
fmull
dec
les
mov
rcr
mov
lret
aas
pop
in
loopne
sub
sub
cmpsl
dec
mov
pop
nop
ds
inc
pop
mov
pop
shlb
sbb
cmp
lea
or
push
dec
dec
jns
add
scas
jo
popf
std
lcall
outsl
lcall
and
adc
std
cs
pop
mov
in
outsb
fisubrs
sub
mov
adc
cmp
cmp
filds
shrb
push
popf
iret
mov
fisubrs
into
mov
mov
or
shl
dec
and
cmp
push
lahf
pop
pop
outsb
pop
add
fstps
dec
or
cmp
daa
pushf
in
push
xchg
sti
les
push
mov
jno
fistl
and
loopne
sub
push
insb
pop
add
jmp
int3
stc
adc
ljmp
call
pushf
rcrb
testb
frstor
mov
fsts
pop
xor
cld
lcall
lea
repnz
inc
cmp
shl
xchg
int
sbb
dec
mulb
cmp
repz
rolb
xor
inc
mov
push
pop
inc
inc
or
cmp
inc
rep
sbb
fwait
daa
lret
jns
mov
cld
inc
adc
loopne
shrl
mov
fwait
cmpsl
xorl
jbe
adc
inc
divl
inc
aam
mov
push
outsl
lcall
xor
pop
lahf
pop
inc
pop
jbe
adc
pop
arpl
scas
in
pop
xor
pop
sahf
pop
pop
mov
or
sbb
jbe
into
loop
xor
addr16
idivl
or
mov
push
sbb
xorl
mov
popf
outsl
add
xor
mov
pop
dec
or
test
cmp
cmp
andb
sbb
hlt
pop
inc
int3
inc
cmp
sub
sbb
mov
not
out
dec
dec
sbb
test
sub
mov
data16
das
icebp
jne
ds
out
je
mov
cli
test
popa
sub
imul
push
leave
sub
mov
adc
and
mov
add
jne
xchg
pop
cli
jle
jp
sub
pop
cmp
pop
shlb
xor
xor
aaa
add
add
add
enter
out
lock
pop
aaa
jae
mov
adc
lods
or
and
mov
in
sub
mov
lahf
pusha
cmc
mov
adc
jmp
repz
aas
call
call
pop
add
scas
and
jnp
test
mov
adc
mov
out
mov
jge
rcr
inc
lret
stc
dec
and
ja
out
loop
sub
push
jbe
sbbl
mov
jp
add
and
jge
ljmp
mov
rcl
rorb
std
xchg
stos
inc
xor
imul
push
stos
cmp
lret
sti
jmp
push
addr16
mov
or
add
dec
lahf
push
lds
mov
inc
mov
aaa
cmp
in
or
out
sbb
mov
cmp
std
xchg
push
sub
xor
inc
pop
and
sub
insb
cmp
jno
shll
xor
cwtl
ja
dec
inc
sub
jle
outsl
fsubl
inc
pusha
nop
push
cwtl
add
cmp
iret
out
fadd
jecxz
cmp
dec
std
mov
out
les
xchg
repz
mov
cmp
cmpsb
cmp
mov
mov
insb
cltd
mov
je,pt
adc
xchg
popa
sub
rorl
dec
in
mov
xchg
dec
sbb
cwtl
sub
sub
in
inc
lea
outsb
fsts
fimuls
xor
push
push
test
inc
cmp
mov
pop
mov
mov
pop
lret
jmp
es
jb
call
iret
mov
cmp
cmp
xchg
ret
data16
add
jge
dec
jae
fs
and
cmp
sbb
pop
push
inc
lahf
push
sbbb
and
and
lret
mov
insl
sbb
ret
push
clc
jnp
dec
sub
pushf
pop
cmp
fs
popa
sbb
loopne
in
jge
test
clc
clc
addr16
mov
and
cmp
jbe
mov
js
outsb
add
cmp
jge
insb
iret
lcall
addl
sbb
mov
xchg
mov
sbb
ud2
dec
dec
inc
sub
lock
or
or
hlt
inc
clc
test
push
adc
loopne
pop
and
aaa
jg
and
test
in
xchg
push
test
fidivrl
xor
mov
add
and
xor
rclb
cmp
add
out
repnz
mov
xchg
xor
or
adc
orb
mov
sti
imull
lea
lahf
lock
insb
cmp
xlat
les
ds
aad
xchg
scas
je
push
hlt
aad
es
mov
pop
fldl
call
sub
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
add
jg
add
inc
adc
sbb
and
lret
in
mov
popf
cs
xchg
sbb
outsl
push
jle
mov
mov
lret
sub
jl
jmp
adc
mov
loopne
xlat
in
push
cwtl
adc
jp
mov
sti
cltd
pop
vpmaddwd
xor
aas
fisubrs
sbb
fisttpll
inc
loope
es
cmc
push
push
stos
insb
push
add
test
ror
in
out
sbb
scas
mov
jo
cs
dec
inc
mov
push
movsb
into
lods
mov
pusha
inc
add
and
jnp
insl
jl
cmp
sahf
push
sti
sub
pop
pop
xchg
sbb
push
std
scas
fisubrl
mov
and
sub
popa
push
or
push
xlat
adc
cmp
jns
push
push
jb
dec
or
rolb
dec
dec
shl
outsb
dec
cmp
cmp
mov
push
ss
adc
out
loop
fdivl
sub
jecxz
sarl
pop
leave
dec
test
inc
cmp
push
mov
fistl
add
mov
xchg
test
testl
push
lds
sbb
inc
mov
std
ret
add
add
inc
adc
iret
rcrb
xor
in
shl
cmpsl
jg
fcoml
int3
sub
rclb
push
inc
mov
sub
and
bound
test
enter
shll
shlb
push
sbb
cwtl
mov
lods
jno
pop
push
out
cmp
cmp
xchg
xchg
sub
pop
jo
pusha
movsl
ja
repz
rorb
enter
incb
rorb
adc
sub
add
mov
cmp
inc
aad
xchg
xchg
cmc
loop
test
shll
ret
jecxz
in
jg
and
inc
cs
inc
leave
jbe
or
mov
sahf
push
movups
test
insl
test
jnp
sbb
imul
mov
sbb
out
or
mov
xchg
pushf
stc
sahf
dec
test
jmp
orl
shll
push
xor
jle
imul
push
loope
lea
jns
fidivl
stos
lret
in
adc
mov
int
push
ret
sbb
out
stc
jl
aad
out
sub
icebp
or
bound
add
adc
mov
or
cmp
sub
std
push
ljmp
in
mov
push
fwait
ljmp
pop
lret
icebp
mov
fwait
pushf
stc
in
mov
pop
push
lods
xchg
rcll
addr16
into
data16
imul
and
ljmp
nop
mov
jecxz
iret
inc
nop
push
das
insl
sarb
adc
inc
xor
clc
shrl
xor
dec
xchg
loope
jmp
or
jp
repnz
popf
xor
ss
xchg
mov
inc
xor
stos
test
and
ret
aas
mov
mov
iret
mov
sbb
push
cmp
insl
add
sbb
jae
test
adc
sti
decb
add
and
ret
adc
cs
nop
loop
xchg
sub
sbb
daa
jle
add
mov
fldcw
xchg
test
dec
int
mov
jg
fsubrl
jp
dec
aad
fiaddl
les
jns
lret
pushf
movsb
enter
in
pop
pop
and
aaa
ds
popf
xlat
xorb
or
xlat
mov
lea
sarb
pop
add
inc
lret
lock
mov
mov
fildl
popa
int3
addl
inc
mov
push
mov
mov
decb
aam
mov
test
repnz
repnz
cli
test
pusha
and
mov
xchg
stos
mov
inc
push
leave
out
lods
inc
jecxz
and
and
test
sbb
jae
fmull
xchg
flds
lcall
pop
inc
movsb
jae
call
jne
fildll
mov
mov
pop
stos
ljmp
outsl
or
nop
pushf
ret
sbb
adc
mov
mov
insb
arpl
push
adc
outsb
lret
mov
paddsb
add
mov
lret
nop
sti
aaa
mov
rclb
js
lea
sbb
leave
sub
mov
gs
sub
pop
loop
cmc
add
pop
out
sbb
jle
jns
cmpsb
adcl
ret
dec
dec
mov
cli
idivl
inc
daa
jae
cmpsb
mov
or
lret
or
out
rclb
pop
in
into
xchg
sub
sbb
or
sbb
je
push
mulb
mov
push
in
mov
mov
pop
mov
es
cmp
shll
mov
sbb
sarl
push
andb
mov
pop
dec
jno
pop
or
mov
cwtl
insb
pop
and
pop
aam
pushf
cmp
xchg
roll
jp
mov
into
pop
xor
stos
push
jnp
sbb
inc
push
and
in
and
jo
adc
fdivrl
push
mov
in
xchg
add
mov
jl
push
sub
dec
inc
cmp
stos
clc
sti
rolb
shr
push
testl
push
scas
push
sub
or
mov
jne
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
add
outsb
pop
add
cli
mov
inc
movsl
sarb
jmp
xchg
push
lahf
push
pop
ret
mov
leave
pop
imul
xchg
fdivrs
cmp
lret
inc
ljmp
les
in
test
popa
lods
push
cld
sub
int3
movsl
fwait
mov
sub
xor
add
mov
lock
jnp
adc
mov
inc
ret
push
mov
fs
jns
test
test
xchg
add
inc
xor
dec
mov
out
lret
mov
arpl
xchg
dec
icebp
lods
or
je
dec
orl
cmp
jecxz
and
dec
imul
adc
dec
dec
scas
repz
cmp
pop
lods
sbb
jp
inc
in
sti
xchg
fbld
and
arpl
aaa
cmovs
dec
inc
loop
inc
mov
loop
xchg
cmc
jge
sbb
push
pop
adc
push
loope
xchg
popa
imul
cmpsb
and
pushf
inc
xor
lods
cli
adc
adc
popf
adcl
sbb
mov
cli
loopne
repz
in
inc
hlt
xchg
inc
repz
aaa
xchg
adc
jl
pop
jl
mov
dec
pushf
aad
jmp
sbb
push
call
jle
xchg
jne
pop
imul
sbb
inc
mov
aam
xchg
movntq
out
fldz
cld
jge
ja
mov
jnp
into
push
aam
and
push
mov
inc
lods
and
cmp
add
cmp
test
jne
mov
pop
add
js
xchg
xlat
insl
nop
pop
push
inc
jns,pt
xchg
xor
xorb
push
jb
jg
fwait
shrl
or
or
mov
sub
mov
into
xchg
adc
add
sbb
and
mov
cmp
jb
xor
out
pop
cmp
xor
add
imul
bound
mov
xor
inc
and
cli
inc
jl
fldt
cmp
lret
dec
or
dec
rcl
bound
jnp
pop
pop
in
cld
loope
cmpsl
jg
loop
cmp
mov
mov
imul
sbb
adc
sub
pop
fs
movsl
adc
imul
mov
xor
cmpl
loope
pop
fcomp
dec
adc
or
out
jb
imul
cmp
iret
dec
jbe
sti
mov
jmp
jnp
push
dec
aad
test
mov
mov
into
stos
xor
push
ja
bound
mov
aaa
fwait
test
pop
pop
roll
and
pop
xor
xchg
sub
mov
loopne
push
jno
xor
movsb
leave
std
xchg
jne
out
mov
faddl
ljmp
push
push
add
cmp
sub
out
mov
xchg
jecxz
fnstcw
rclb
cli
popf
pop
adc
mov
mov
and
push
inc
pop
mov
sbb
sbb
mov
fisubl
aas
xchg
and
fs
cmp
les
jle
jb
outsb
mov
jmp
pop
jge
mov
mov
inc
mov
pop
mov
mov
cmp
jo
out
jns
roll
push
bound
and
subb
ljmp
iret
add
push
mov
mov
iret
cmp
sbb
adc
and
mov
push
mov
callw
aam
add
jne
mov
add
fs
jg
add
xchg
mov
fldcw
jge
mov
cmpsb
adc
xchg
xor
sbb
xchg
jb
mov
loope
inc
popf
std
adc
push
enter
push
enter
ficomps
loop
adc
xor
sub
push
inc
lcall
adc
xchg
xor
cmpsl
lods
popa
popf
addr16
leave
xchg
mov
mov
mov
in
push
mov
scas
cmp
and
jne
lock
aaa
jno
mov
cmc
sub
mov
xor
shl
mov
bnd
bound
push
and
cmp
fcmovb
js
rorb
out
inc
gs
lret
pop
adc
mull
xor
aam
cltd
mov
in
push
fdiv
inc
pop
sbb
scas
sbbb
mov
or
sub
dec
xchg
movsl
ss
mov
call
cmp
test
ret
mov
mov
inc
les
xchg
mov
popf
icebp
push
jb
jge
adc
adc
push
rolb
imul
icebp
or
pushf
and
mov
jle
xor
pop
int3
mov
dec
cmp
mov
and
subb
shl
pop
pop
insb
fsubrl
adc
sbb
fwait
push
mov
xchg
sbb
adc
mov
dec
lret
push
inc
push
sbb
sub
std
or
sub
cmp
outsl
inc
je
loope
mov
and
pop
loop
cmp
mov
push
das
and
mov
fists
pop
gs
cmp
dec
loope
dec
mov
inc
ficoms
icebp
pop
fists
lods
stc
aas
icebp
xlat
mov
out
shl
dec
je
das
lret
dec
mov
enter
mov
or
lcall
test
jb
int
dec
mov
lock
sub
mov
jns
lcall
and
or
aas
fcoml
aaa
fsubs
movsl
insl
sub
jae
mov
push
cmp
pop
mov
idivb
sub
not
fnstsw
cmp
or
loope
repnz
lret
push
hlt
stc
aas
lret
inc
sbb
xor
or
in
scas
insl
hlt
dec
mov
je
leave
ja
push
enter
nop
push
mov
aad
add
out
movsb
jns
sub
mov
movsb
xchg
sub
popf
in
pop
leave
test
int
jbe
push
in
clc
nop
iret
push
push
in
loopne
jg
movsl
jge
insl
push
jae
aam
dec
push
add
jp
and
scas
sbb
and
pop
or
mov
add
leave
fdivl
cmpsb
pop
jp
jbe
rolb
ftst
xor
adc
enter
lea
xor
lds
cmc
pop
pop
dec
scas
mov
sbb
xor
mov
push
push
add
cs
and
js
inc
mov
cwtl
inc
dec
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
pushf
push
fnstcw
mov
push
or
cld
dec
add
sub
les
je
and
jae
mov
mov
lds
sahf
push
testl
aad
jbe
mov
out
aas
push
aad
push
cmpl
sub
test
pop
add
faddl
push
sbb
inc
mov
mov
inc
iret
jle
fisttps
xor
mov
sub
mov
gs
repnz
js
idiv
dec
frstor
scas
mov
mov
sub
xor
mov
add
sbb
xchg
lods
push
adc
rep
sub
aaa
mov
push
add
rcrl
jmp
stos
sbb
lcall
inc
push
inc
push
hlt
jo
out
movl
and
mov
mov
mov
imul
sbb
ss
mov
push
pop
popf
cmpb
jne
cmp
mov
mov
lahf
outsb
cmp
lcall
cmpsb
rol
inc
je
stos
or
or
jno
lret
or
outsb
push
xchg
imul
add
pop
jnp
insl
jo
mov
cmp
pusha
adc
test
in
or
jb
js
out
and
mov
and
dec
subb
pop
mov
gs
dec
and
xchg
ret
xchg
xor
cmp
test
xchg
std
addb
sub
jecxz
xchg
mov
mov
or
idivl
dec
or
dec
or
add
loopne
mov
or
jle
lret
adc
xor
cli
and
push
sbbb
adc
pop
lahf
xor
out
inc
outsb
stos
mov
mov
or
incb
mov
dec
jns
repnz
bound
jmp
aad
lods
cmpl
adcl
xchg
jns
aas
jne
call
cmp
pop
push
mov
sub
ss
lcall
push
sbb
in
in
fldl
rcrl
sahf
inc
gs
jno
in
pusha
and
fstpt
int
stos
test
sbb
clc
and
cmc
cwtl
mov
int3
adc
iret
andb
sub
rolb
or
xor
add
push
sub
adc
fstps
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
pop
add
mov
scas
add
in
cmp
stos
icebp
jle
dec
sti
scas
adc
insb
fwait
lret
ret
outsb
jns
pop
rcr
adc
andl
jge
shll
jle
lods
cwtl
ljmp
loop
pop
ror
add
xchg
movsb
fwait
mov
mov
mov
rorl
lret
notl
push
sub
cmp
flds
dec
loope
daa
push
mov
inc
stos
xchg
int
arpl
mov
loop
cmp
call
sub
cmc
lods
pmuludq
push
mov
mov
pop
cmp
dec
pop
sarb
jne
adc
dec
enter
out
stos
cmp
sub
push
pop
jbe
lret
xor
sbb
call
mov
mov
push
jg
test
filds
adcb
hlt
das
mov
std
jecxz
push
dec
xchg
xchg
loop
fwait
jl
in
in
add
ljmp
ds
mov
or
stc
ret
sub
mov
lods
in
and
les
or
add
inc
jne
pop
dec
xor
cmp
dec
rorb
sahf
cmp
in
das
dec
push
add
rorb
or
and
xchg
sub
push
insl
ret
dec
pop
ss
push
scas
xor
jbe
and
adc
xchg
leave
rorl
adcb
sub
hlt
add
inc
mov
ret
data16
in
mov
sub
sti
inc
mov
scas
fists
mov
jb
mov
iret
roll
xor
sbb
adc
pusha
inc
dec
xor
xor
fsubrs
xlat
or
ds
inc
mov
test
cli
push
cmpsl
and
xlat
pushf
rorb
mov
js
std
test
mov
arpl
ss
push
and
add
cmc
lahf
lret
fdivl
sub
xorl
into
pushf
push
xchg
popa
and
lahf
mov
js
jmp
sbb
pushf
xchg
pop
das
mov
inc
scas
jo
dec
sub
add
mov
mov
insl
pop
fldenv
ret
push
sub
add
jg
cltd
pop
jge
repz
shl
icebp
sbb
push
jae
jno
sahf
jmp
leave
stc
divl
js
mov
lret
or
test
fisubrs
dec
mov
mov
insl
in
jecxz
movsl
fisubl
xchg
mov
sbb
add
mov
mov
xchg
sbb
pop
pop
mov
nop
dec
fisttpll
clc
enter
pushf
push
pop
lods
mov
xchg
scas
push
dec
les
fs
and
xchg
mov
cltd
xchg
mov
pop
dec
and
mov
icebp
jp
inc
sbb
sub
push
xor
repz
das
mov
push
dec
arpl
test
pop
jno
jae
cld
mov
clc
mov
sub
jns
adc
cltd
xor
mov
adc
sahf
cmpsb
icebp
data16
adc
pop
popf
loope
call
inc
outsb
mov
cs
dec
mov
cs
int3
cmp
fcmovbe
sbb
rclb
dec
push
lret
cs
mov
stos
inc
mov
mov
cli
lds
inc
mov
fstl
addb
js
loope
out
and
push
aaa
jl
pop
loope
and
into
xor
sahf
sbb
fdivrs
daa
mov
sub
insb
xchg
xchg
mov
xor
sbbl
lods
or
cmp
add
xor
xchg
js
xlat
rcll
cmpb
sub
pslld
loop
xor
mov
and
js
out
add
sbb
ror
inc
int
loope
stos
jmp
mov
sbb
shrl
cmp
and
push
gs
cmpsb
dec
add
jo
sbb
cmp
out
pushf
xorb
test
lea
or
mov
shlb
push
push
pushf
mov
divl
in
out
xchg
mov
lret
xchg
les
mov
out
and
rcr
pop
call
jns
or
sbb
cmp
add
jle
adc
jge
lahf
inc
push
add
in
cltd
mov
or
push
mov
pop
xorb
xchg
int3
popa
movsl
sub
aas
test
sub
xchg
sub
sub
out
and
push
inc
xchg
or
inc
notl
jbe
sbb
cmc
notb
int
pop
int3
xor
inc
and
mov
lret
int
ljmp
cmpsb
inc
xor
mov
fisubrs
hlt
cmp
cmpsl
leave
lret
push
mov
xchg
or
mov
sahf
xchg
xlat
lods
ja
adc
push
add
shrl
enter
jge
lds
and
enter
bound
xlat
in
xchg
imul
mov
daa
inc
dec
iret
mov
add
xchg
cmp
leave
mov
adc
or
js
sbb
mov
mov
lods
push
fwait
add
shlb
dec
into
inc
mov
dec
push
aas
and
inc
cmc
mov
inc
inc
fwait
cmp
cli
cmp
push
jo
test
xlat
dec
outsb
aam
sub
fdivrl
cwtl
addl
mov
xor
dec
sub
cmp
ds
pop
mov
cltd
xor
int3
hlt
test
mov
inc
rcl
dec
lock
hlt
ret
aas
mov
mov
dec
enter
inc
mov
fcomp
sbb
cmpb
and
sbb
call
sub
mov
and
sbb
pop
sbbl
push
xor
je
jo
push
cmp
push
fwait
pxor
in
sarl
mov
mov
int3
js
mov
push
stos
jmp
cmp
nop
dec
push
add
and
pop
jecxz
icebp
jmp
repz
pushf
sahf
scas
adc
dec
cmpsb
gs
cmpsb
lock
es
inc
sbb
clc
cli
cld
xchg
incb
mov
jne
cmpsl
stos
sub
insb
test
pop
lret
or
stos
cmp
push
sbb
sbb
sub
call
sbb
mov
mov
mov
test
pusha
mov
in
fcomps
cltd
repz
bound
insb
sti
sbbl
cs
and
and
das
xchg
cmp
pop
dec
lcall
or
mov
and
insl
incb
push
sub
add
inc
cmp
or
jp
adc
mov
dec
dec
shrb
cmp
xchg
push
stos
into
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
cwtl
xor
and
pop
add
adc
mov
fidivs
or
pusha
sub
pop
adc
pop
jmp
jmp
cwtl
push
mov
out
push
stos
outsb
into
out
mov
bound
es
sub
sbb
imul
fildll
or
pop
xchg
sub
lods
fstps
loope
mov
fstps
push
and
pushf
ret
mov
push
adc
popa
ljmp
mov
or
adc
lock
xor
xchg
insb
jmp
scas
shl
dec
cmpsb
lret
and
aaa
stos
inc
sub
jmp
push
mov
lret
dec
fnstsw
aad
ret
pop
push
inc
cmpsl
sahf
cli
sub
push
jne
hlt
cmpsl
dec
lret
inc
jno
add
jmp
cs
inc
inc
int
std
mov
mov
enter
pop
xor
lret
sub
push
mov
icebp
fcoms
jp
loopne
sbb
lods
scas
loopne
sbb
jb
inc
and
aad
out
mov
jge
push
iret
cmpsb
mov
movb
adc
cli
mov
lahf
movsb
push
push
push
mov
clc
outsl
xchg
test
pop
mov
adcl
iret
lock
add
push
mov
aaa
mov
outsl
xor
rclb
adc
arpl
adc
fsubrl
push
inc
xchg
xor
outsb
fsubrs
push
mov
dec
cmpsl
and
dec
mov
pop
cmp
mov
inc
mov
pushf
ss
sub
imul
cwtl
add
adc
add
mov
and
inc
lret
int3
mov
add
xchg
filds
sub
movsl
add
pop
dec
pop
lret
push
xor
push
stc
mov
mov
and
dec
imul
mov
push
xor
rolb
cmc
insl
inc
movnti
and
and
sar
iret
ss
and
mov
sub
shlb
xchg
sti
shrb
mov
cld
dec
loop
mov
imul
push
std
xor
jl
mov
add
push
xor
data16
mov
aam
rcrb
sbb
sub
orl
jno
mov
pop
repz
push
sub
xchg
sbb
push
shrl
lock
adc
cmc
fidivs
mov
test
push
push
mov
sbb
addr16
xor
sbb
and
aad
dec
mov
xchg
pop
jbe
dec
mov
lahf
jp
sbb
mov
loop
adc
andb
cmp
addl
std
xorps
ret
mov
sbb
and
mov
pop
test
mov
dec
xchg
rcll
cmc
int3
ss
and
hlt
mov
cmp
lret
push
addl
jp
push
pop
sbb
push
adc
dec
jns
cmc
daa
cmp
pusha
out
push
cmpsb
and
orl
or
enterw
jmp
sub
xlat
jge
lret
test
leave
pushf
dec
xlat
movsb
xchg
xlat
fildll
repnz
sub
les
enter
lds
and
jg
outsb
jnp
mov
hlt
fildl
repnz
js
or
sub
inc
arpl
cmp
fdivl
or
inc
pop
xlat
push
xchg
push
mov
mov
xchg
shrb
mov
ljmp
push
outsl
and
dec
fnstcw
push
loopne
pop
sbb
cmp
rorl
dec
ror
mov
out
xchg
fsincos
jo
repnz
std
out
scas
mov
inc
aas
sar
jbe
insl
scas
jg,pn
mov
jmp
stos
in
cli
movsb
inc
lret
fstps
xor
ja
pop
aaa
push
lahf
scas
movsl
hlt
sbb
ja
hlt
pop
cmpsb
leave
push
mov
lret
into
dec
mov
and
or
fdivrl
std
pop
and
andl
cmp
dec
scas
in
mov
or
jle
mov
sar
scas
and
dec
lods
push
xchg
inc
inc
and
mov
jne
loopne
fildll
out
and
jg
js
xchg
xlat
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
push
add
in
int
test
cmp
test
inc
sub
xchg
and
push
mov
push
test
es
xor
addr16
sarl
xor
repnz
leave
sbb
push
mov
stc
sub
call
dec
mov
xor
test
jp,pt
mov
add
sahf
imulb
and
fs
mov
sbb
pop
xchg
pusha
lods
js
ss
add
adc
cmpsb
sub
mov
cltd
inc
mov
mov
adc
mov
push
mov
bound
rclb
push
xchg
ficomps
inc
dec
sub
mov
and
and
adc
ds
xor
push
mov
shlb
dec
out
subb
cld
scas
jae
pop
add
sahf
jns
dec
xor
cmp
push
add
fisubs
repnz
gs
push
inc
enter
cmc
add
adc
out
jl
cmp
dec
jbe
shrb
pop
scas
mov
sbb
mov
sbb
scas
or
push
lock
xor
jne
xor
or
jecxz
ficomps
cmp
and
pop
imul
or
enter
fdivl
insb
xlat
sub
jne
dec
ds
mov
fmul
push
ret
dec
cmp
dec
and
movsb
mov
pop
mov
mov
insb
jle
sbb
movsb
mov
arpl
mov
cmc
pop
jl
je
push
jns
dec
aam
faddl
cmc
or
mov
insl
xchg
inc
mov
ret
xchg
test
les
mov
jo
push
enter
lock
adc
dec
lea
pop
in
pop
rolb
movsb
xchg
out
cmp
xchg
in
out
lahf
push
popa
addl
fildll
cltd
adc
stc
stc
inc
jae
add
iret
lret
out
lcall
or
js
stos
cmpb
fbld
jno
push
or
ficoml
dec
push
fdivrs
dec
lahf
push
pop
add
loope
dec
imul
mov
inc
and
mov
nop
push
sahf
es
mov
push
gs
push
inc
sar
sarb
inc
imul
mov
or
ret
lds
or
mov
pusha
stos
sarl
jg
cs
adc
lds
lods
push
jne
ljmp
stos
addr16
cmp
xor
adc
test
pop
adc
sahf
xchg
inc
sbb
daa
or
dec
call
ret
jno
cwtl
addl
je
dec
dec
out
mov
jno
mov
mov
js
jne
push
push
outsb
xchg
insl
and
sub
push
cmp
fldenv
out
inc
outsl
add
xchg
sbb
jb
cmc
test
push
iret
and
or
enter
mov
in
ret
cmp
mov
in
mov
sub
lea
xchg
mov
lret
movsl
mov
andl
inc
int3
into
fldcw
fistpl
pop
sbb
mov
nop
inc
call
fisubrl
jmp
mov
repnz
pusha
push
mov
nop
lcall
dec
jnp
outsl
stc
fsubs
and
in
mov
cmp
mov
dec
iret
jmp
test
scas
add
jmp
cmp
dec
jmp
mov
inc
mov
lock
loopne
xchg
dec
inc
or
cmp
mov
mov
jno
xchg
mov
testb
or
xchg
lock
mov
xchg
mov
bound
jb
inc
inc
and
idivl
cmpsb
cmpsb
adc
popf
in
loope
imulb
pushf
mov
jb
sub
push
push
stos
rorl
cltd
faddl
arpl
pop
fistl
or
dec
je
or
cs
repnz
mov
loopne
int3
or
shl
repnz
inc
cmp
jmp
inc
ret
push
xchg
ret
jne
lds
xor
sti
or
inc
inc
jnp
xor
sbb
sub
icebp
jne
jge
xor
or
mov
sub
fs
cmp
movsb
sbb
and
push
mov
fcmovnbe
cli
add
sub
in
clc
daa
test
fwait
inc
jne
xor
and
jbe
das
push
mov
pop
xor
xlat
mov
out
mov
pop
fdivr
lret
ror
shl
sub
pop
das
jne
mov
xchg
or
or
pop
push
ret
push
shl
lods
loopne
push
sub
push
shll
pop
call
in
dec
xchg
lahf
mov
loopne
cmc
cltd
inc
jb
push
loope
scas
into
cmc
push
les
insb
aad
sub
lock
push
bound
mov
sbb
push
push
in
and
mov
push
and
mov
mov
in
add
and
in
cmc
xor
mov
decb
xchg
pop
movsl
cmpsl
clc
pop
mov
mov
jmp
outsb
adc
push
bound
sahf
push
or
nop
out
dec
enter
push
xlat
pop
ljmp
in
jge
js
cwtl
stos
adc
lea
mov
dec
orps
mov
jle
xor
movsl
xchg
test
imul
xchg
cld
jp
push
mov
xchg
sub
sbb
inc
out
stos
divb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
add
add
jbe
popa
push
xchg
cmpsb
sbb
and
jno
jns
adc
add
sbb
stc
jmp
dec
lock
xchg
push
jg
or
add
clc
popa
sbb
in
les
inc
call
sahf
aaa
push
cwtl
fimuls
mov
lcall
jecxz
stos
dec
pop
xchg
mov
lds
dec
fdivs
out
cwtl
mov
xor
sbb
fistpl
out
nop
mov
loopne
jae
movsl
cs
jae
or
repz
xchg
or
and
std
call
sub
shlb
imul
incb
mov
pusha
jnp
leave
lea
inc
das
xchg
fildl
leave
iret
cmp
cmp
add
orl
adc
adc
jae
orl
addl
xchg
mov
movsl
cmp
imul
mov
and
mov
lods
xchg
loope
xor
popf
mov
fdivrl
and
loopne
outsl
adc
dec
cmpsb
lret
mov
push
dec
bound
popf
les
xor
xor
xor
add
nop
add
add
mov
mov
fisubrl
mov
aaa
leave
or
xor
mov
fstl
cmp
add
lcall
notl
addb
in
inc
adc
mov
fisubrs
push
cmpsl
jbe
fwait
jne
bound
jnp
sbb
enter
inc
addr16
in
lock
sti
adc
outsb
inc
outsl
out
scas
test
in
adc
or
jl
inc
pop
pop
pop
cli
or
cltd
in
roll
psadbw
int
mov
test
fnstsw
sub
inc
fwait
dec
or
xor
fdivr
ficoms
daa
cmc
ficompl
movsl
ret
mov
movsb
ss
sbb
xchg
or
stos
movsl
leave
sbb
popa
dec
lret
xor
loop
out
cmpsb
out
sbb
mov
mov
movsl
or
shll
xor
or
cmc
imul
xchg
cli
jae
out
outsb
into
outsb
dec
jle
and
mov
in
mov
in
inc
loope
sbb
add
mov
push
stc
cli
mov
pop
dec
dec
out
shrl
add
std
leave
gs
lods
dec
enter
sub
fidivrs
scas
pop
sarl
dec
pop
std
aam
push
ret
sub
xchg
iret
push
mov
outsl
fidivs
cld
mov
in
inc
inc
daa
cld
inc
push
inc
xchg
rcl
lds
mov
stos
jmp
out
scas
xchg
movsl
pop
dec
pusha
fucomi
lahf
addr16
push
sub
pushf
ja
gs
lcall
daa
jb
enter
sub
inc
dec
mov
lods
shll
cmpb
xchg
pop
sbb
push
lods
cmpsb
xchg
nop
mov
cmpsl
addb
mov
xchg
out
fidivrs
out
adc
adc
push
fbld
xchg
bound
aad
in
mov
data16
sbb
xor
push
push
dec
subb
pop
xor
mov
lea
sub
ljmp
rcrl
sarl
xor
or
aad
insb
imul
rol
inc
adc
sub
sub
jb
mov
jg
fdivrl
data16
and
and
or
add
push
repz
mov
loop
mov
call
fs
je
pop
xor
sub
cs
add
imul
mov
repnz
test
lds
fbld
sub
stos
push
mov
dec
xchg
sbb
dec
imull
jecxz
dec
jmp
mov
jl
dec
pop
sahf
sub
jb
sub
mov
cmpsb
pop
stos
int3
repnz
pop
in
mov
aam
int3
popf
jmp
add
lods
stc
xchg
adc
outsb
fidivrs
sarb
fwait
insb
cmp
inc
sbb
jmp
into
ljmp
scas
pop
cmc
fstpl
out
cli
xor
daa
push
lods
int3
lret
adc
ret
add
repz
pop
xchg
jns
xchg
xchg
jl
mov
or
mov
lock
ljmp
iret
push
andb
pop
mov
jnp
sub
rclb
or
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insb
push
add
roll
add
and
sbb
std
lret
adc
mov
pop
jnp
stc
movsl
jb
sub
jnp
fidivrl
lcall
xlat
mov
cmp
sub
sarb
std
iret
sbb
mov
stos
xchg
adc
pop
cmp
dec
sub
popf
and
mov
jmp
jge
sub
imul
stos
push
mov
cmp
push
in
pop
sbb
push
add
pop
or
dec
fidivl
mov
imul
pop
mov
cmc
std
xor
ja
sbb
push
lret
inc
xchg
xor
aad
cmp
jg
cmp
jp
add
jne
adc
xchg
outsb
enter
mov
push
sarl
lret
lds
fsub
or
jecxz
xchg
sub
out
or
push
mov
mov
cmpsb
inc
dec
and
mov
pop
popa
fdivs
andl
dec
and
out
sahf
mov
xor
shlb
fldenv
xchg
jle
mov
out
or
push
int
jmp
lea
lods
cmp
xlat
aas
mov
mov
imul
mov
push
mov
cmc
aas
and
xchg
mov
lock
call
je
lcall
dec
leave
orb
mov
lret
sub
mov
pop
sbb
rclb
jb
jnp,pn
jmp
jbe
sarb
add
out
mov
push
dec
push
jo
jb
notrack
mov
mov
push
sbb
hlt
mov
imul
sbb
sbb
push
test
rol
adc
xor
cmovb
add
shll
fisubs
repz
ss
cwtl
in
ja
xchg
cld
mov
add
sbb
adc
cmc
inc
cmpsb
inc
pop
out
test
mov
add
cmpsl
or
dec
test
leave
cld
leave
mov
adc
dec
rcrb
inc
inc
loop
in
jmp
xchg
fcmovnb
push
dec
loop
jmp
pop
mov
in
loop
cmp
out
mov
sahf
and
sbb
sbb
inc
popa
sbb
loop
xor
cvtdq2ps
mov
ficompl
fdivrs
sub
adc
cmp
movsb
mov
sbb
test
push
nop
fisubs
test
mov
cmp
addr16
imul
pusha
pop
cmp
in
adc
test
dec
pop
ret
ja
sahf
cli
mov
lock
mov
es
icebp
rorl
mov
les
push
test
mov
inc
dec
fstpt
and
in
sbb
das
fistpll
push
adc
jno
stos
add
test
fstp
add
mov
add
daa
jnp
push
arpl
out
cmc
ret
inc
sarl
test
out
add
push
and
pop
ss
xlat
ljmp
inc
lret
jnp
daa
push
into
imul
idivl
lods
cmp
out
sub
mov
fcomps
push
mov
test
ror
jmp
xchg
fdivs
movsl
fwait
push
sub
cld
mov
sti
cmp
sub
repnz
out
mov
mov
cmpb
jge
cs
xchg
into
repnz
mov
sub
movsb
mov
inc
call
inc
sahf
adc
mov
mov
inc
lahf
push
mov
and
inc
inc
mov
inc
push
fsubrl
jae
in
xchg
inc
inc
andl
and
ret
mov
test
lds
stos
loope
dec
out
dec
jno
dec
ds
xchg
call
ja
fmulp
jmp
vpaddsb
push
rcll
cmp
sbb
push
int
xor
pop
out
fwait
sbb
pop
inc
gs
xchg
sti
ds
sub
add
pusha
or
pop
lock
jecxz
shld
sub
add
mov
mov
fsts
mov
outsb
mov
pop
stos
aad
cmpb
mov
dec
mov
int3
aad
in
popf
fnstcw
cltd
pop
sbb
aad
lcall
push
fcmovbe
push
jo
push
mov
out
in
cltd
and
cmp
cmp
jne
adc
cmp
jns
sti
aam
fimull
rcll
loop
lods
fdivrs
aas
test
sub
mov
sub
scas
xchg
leave
mov
cwtl
test
add
cwtl
sahf
ljmp
sub
and
push
jmp
dec
les
push
imul
dec
mulb
out
xlat
and
inc
jp
pop
sti
sub
subb
mov
xchg
cli
jmp
mov
or
leave
and
inc
rcr
inc
or
in
sbb
add
pusha
jle
pop
das
gs
lds
daa
movsb
fs
dec
mov
lea
loopne
fnstcw
ret
pop
lds
push
push
jbe
or
f2xm1
mov
xchg
aam
fadds
sbb
add
push
mov
daa
ljmp
add
scas
mov
cmpsb
loopne
int3
rcll
inc
dec
enter
shll
push
jnp
pop
mov
or
repz
pop
fisubrl
sar
lds
repnz
shlb
mov
aad
mov
subb
dec
push
mov
bound
xor
mov
xor
cmp
mov
sbb
js
xor
clc
call
xor
add
mov
push
cltd
les
xchg
push
inc
xor
insl
int3
push
push
arpl
jb
xchg
pushf
into
cmp
cmp
pop
insl
jnp
fnstsw
cmpsl
and
pop
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
loope
or
sbb
and
pop
jle
bound
ss
inc
add
iret
stos
sub
add
pop
sbb
or
add
mov
mov
in
incl
es
pop
leave
mov
jl
add
jle
pop
and
inc
fnstsw
test
sbbb
sahf
push
pop
lahf
fstpt
test
and
adc
or
scas
mulb
push
jnp
lea
outsl
jmp
xlat
aas
and
ret
and
xor
sbb
dec
xchg
fcompl
or
clc
das
or
pop
fwait
add
cmp
subb
out
loopne
adc
test
xor
push
or
test
add
push
and
inc
or
fcoml
cltd
lea
pop
movsb
push
add
pop
out
push
notb
pop
cmp
das
add
mov
xor
idivl
mov
pop
jle
cmp
jp
mov
test
negb
fs
sub
inc
rolb
jecxz
pop
or
rcr
cmp
clc
mov
outsb
push
mov
cmpsb
jg
fdivrl
je
mov
push
push
jno
xchg
jl
cmp
mov
mov
push
lods
arpl
push
repnz
aam
movsl
popa
or
sbb
fcompl
and
jle
test
jecxz
jge
jp
dec
or
into
lea
pushf
push
pop
add
add
jecxz
fldenv
insl
xor
dec
popf
push
stos
mov
adc
xor
fsubrl
in
jo
outsb
inc
jno
mov
adc
add
jae
das
xor
lds
into
sub
dec
sbb
lea
adc
push
fsts
call
dec
mul
mov
rcrl
jns
call
fsubrs
xor
xchg
mov
push
out
mov
sti
or
sub
xor
add
cmp
fcomi
shlb
jo
cmp
push
jno
push
cmpsl
lds
pop
pop
dec
test
jg
dec
jb
dec
and
add
nop
idiv
shrb
cmp
xor
mov
add
pop
lahf
mov
pusha
mov
loop
ss
mov
dec
loop
mov
fcmovnbe
sbb
xor
aad
ret
xchg
push
js
bound
iret
add
test
jmp
testb
push
and
out
insl
dec
repz
ss
add
xchg
xchg
add
out
xor
mov
mov
call
mov
dec
ftst
jbe
xchg
cmpsb
add
out
lret
xor
lea
mov
stc
shll
pop
and
fildll
cmp
cli
mov
incb
fst
ds
dec
subb
scas
cmp
or
inc
jnp
jo
andl
push
fs
mov
add
mov
popa
cmp
cmp
cmp
push
add
mov
adc
filds
scas
loopne
mov
add
xchg
lea
flds
cmp
cmp
loopne
sub
cmc
add
jbe
or
sub
gs
fldt
hlt
fs
out
mov
insb
pop
mov
test
push
int3
sub
and
push
fnsave
add
enter
inc
mov
pop
mov
mov
dec
clc
lock
pushf
inc
and
and
loope
sbb
jbe
pop
rorb
push
lock
in
popf
popf
inc
add
cmp
movl
enter
or
xchg
mov
push
add
mov
dec
scas
cmp
mov
jb
jo
imul
mov
xchg
test
sahf
dec
cmp
push
push
push
inc
loop
mov
push
inc
pop
stc
sub
mov
test
icebp
mov
jo
sub
xchg
outsb
sub
data16
int
and
das
inc
aam
or
ret
dec
out
cltd
adc
psrlw
cwtl
mov
add
pop
jns
push
mov
arpl
adc
in
pushl
cmp
dec
leave
clc
lds
mov
in
mov
inc
bnd
xchg
jg
mov
aaa
mov
int
add
popa
mov
sbb
push
mov
mov
adc
jno
cmp
aam
loop,pt
xchg
or
push
push
dec
daa
jbe
cmp
or
clc
shlb
jne
das
mov
cmp
jb
inc
jo
ret
gs
imul
push
test
sahf
push
inc
add
jae
or
dec
xlat
sbb
fchs
orl
mov
lcall
push
sbb
adc
mov
jge
ret
lret
lcall
fcoml
rcll
push
enter
gs
in
ret
mov
es
mov
dec
call
cld
test
xchg
pushf
pop
adc
sub
iret
or
lods
push
stos
dec
cmc
aam
je
xchg
fwait
sbb
aad
test
inc
sub
sbb
ja
inc
dec
mov
pop
mov
nop
in
out
jecxz
pop
sbb
jno
js
imul
mov
jl
mov
pop
mov
or
add
mov
cmp
iret
nop
mov
stos
jmp
inc
xor
jo
shrl
jle
and
xchg
push
pop
fnstsw
jno
xor
adc
dec
test
gs
push
clc
insl
imul
jno
leave
and
mov
sub
dec
cmp
or
cli
lcall
inc
lds
jno
cmp
mov
ret
lock
xor
mov
xorl
push
adc
sub
or
repnz
or
xlat
in
push
lcall
and
stos
imul
es
inc
rcr
xchg
outsl
repz
cmp
fsubs
push
sub
cmpsl
or
es
pop
cmp
fcmovne
adc
or
mov
in
mov
mov
pop
and
jle
mov
insb
lcall
lcall
mov
test
aas
jl
shll
mov
mov
pop
das
dec
int
cmc
and
mov
sbb
jns
mov
adc
andl
aad
gs
sub
xlat
push
or
jg
ss
cwtl
push
inc
negb
enter
arpl
in
xor
sbb
addr16
test
mov
ljmp
adcl
xchg
xchg
ds
pop
jbe
lea
sbb
dec
ds
mov
adc
push
push
pop
xor
std
and
xlat
mov
mov
push
popa
pushf
mov
aaa
adcb
out
call
adc
loop,pt
shll
push
pusha
inc
out
popa
or
leave
inc
inc
pop
dec
push
sub
jmp
sti
mov
mov
mov
push
adc
addr16
nop
fs
dec
test
or
dec
mov
ficomps
shlb
and
loop
jmp
mov
lcall
and
sbb
mov
cmp
int3
mov
xor
xor
xor
xor
xor
xor
xor
xor
testl
add
lret
pop
mov
inc
dec
rcrl
loope
xor
dec
inc
loopne
inc
data16
icebp
adc
jecxz
add
stos
in
cmp
adc
push
pop
xor
fimull
pmullw
pop
aas
mov
or
mull
out
popf
lods
in
das
ljmp
xchg
jae
nop
in
jbe
jl
mov
jge
xor
mov
fisttpll
lds
sbb
shl
jne
fdivp
popa
rcll
pop
jo
push
daa
test
sub
add
cmpsb
pop
push
leave
ror
jg
popf
stos
and
push
jp
sbb
cmp
and
xor
and
inc
push
or
dec
loopne
stc
orb
xchg
pop
mov
fmuls
sarl
sbb
inc
fdivrs
out
add
fdivrp
pop
jp
push
push
in
outsb
mov
dec
divb
mov
fsubl
rcll
fdivrl
cltd
in
xchg
test
icebp
lahf
mov
cmp
lods
xchg
jnp
clc
push
lahf
dec
cli
cmpsb
js
lret
sahf
gs
inc
xor
jns
leave
adc
lods
sti
ret
repnz
pop
add
mov
scas
adc
mov
bound
push
lret
mov
stc
mov
add
imul
test
arpl
shrb
popl
mov
fs
pusha
test
cmp
fmulp
push
dec
xchg
pop
lret
add
imul
int
adc
mov
hlt
jmp
inc
mov
push
cld
push
pop
mov
nop
and
sahf
sahf
pop
xor
lret
test
dec
lret
movsl
js
mov
bound
pop
in
jecxz
icebp
add
jg
mov
aad
jge
into
out
dec
cmpsb
out
sub
pop
insb
sahf
and
inc
or
sbbb
dec
sbb
sub
aaa
scas
mov
jns
cmpw
fiaddl
lock
mov
in
fdivr
lds
ja
jns
or
mov
out
insl
sub
inc
push
iret
mov
test
xchg
ds
popa
into
xchg
push
mov
cmp
cltd
fwait
movsl
scas
nop
mov
jne
mov
or
cmp
push
mov
mov
loope
ret
or
cmovge
push
popl
sti
mov
adc
jp
aad
mov
mov
lds
or
loopne
clc
into
sti
cld
xchg
lcall
test
xor
jae
out
pop
mov
adc
or
push
incl
call
imul
lock
popf
or
leave
mov
imul
and
jecxz
ds
push
mov
inc
push
adc
push
mov
fidivl
int3
cmpsb
rcrl
xchg
xchg
mov
mov
xchg
xor
mov
into
fidivl
push
pop
fwait
sbb
add
adc
or
testl
notl
sbbl
pop
sub
shll
shrl
push
test
add
adc
xor
pop
pusha
jl
jno
int3
lods
cmp
cmp
xor
xchg
je
rcll
jp,pt
mov
or
cmp
aaa
into
mov
and
push
sti
pushf
dec
jp
fstps
out
aas
cwtl
jle
aaa
cmp
in
pop
xchg
add
les
inc
jl
cmp
dec
fs
lods
inc
outsb
push
xchg
insb
das
fsub
jge
clc
sbb
cmp
int
andl
dec
cmp
xor
popa
mov
inc
xchg
in
stc
cld
xchg
pop
or
es
xor
xchg
push
xchg
xchg
pop
jle
mov
mov
outsb
addl
in
outsl
shlb
dec
adcb
xor
in
cld
sbb
popa
adc
addr16
popw
shlb
out
jl
cmp
leave
ficomps
sub
xchg
xchg
pop
loope
fisubl
mov
mov
mov
call
outsb
cltd
ret
pop
subb
push
pushf
cmp
outsl
mov
aam
pop
outsl
ret
pop
xchg
lock
xlat
and
ss
sarb
add
mov
mov
mov
mov
lcall
dec
xor
mov
mov
xchg
dec
mov
xchg
push
mov
shlb
stc
dec
jbe
jmp
popa
test
sti
out
and
repnz
jne
pushf
js
cmp
mov
jnp
mov
push
out
fiadds
bound
jmp
mov
dec
xchg
cmp
ret
leave
pop
arpl
out
repnz
pop
mov
jne
ret
jo
dec
cli
imul
cmpb
add
jp
lret
insl
dec
xchg
fbld
push
or
test
sbb
inc
bound
jle
jg
pop
cs
xchg
add
outsl
in
cmpsb
pushf
inc
aas
scas
xlat
fbstp
mov
popa
adc
add
mov
dec
stos
movsb
imul
inc
adc
dec
sub
pop
mov
adc
push
into
dec
or
insb
insb
ljmp
push
mov
rorl
jge
repz
add
dec
les
xchg
push
pop
inc
push
pop
cmp
faddp
lds
shrl
mov
inc
rcr
leave
negl
sub
dec
dec
add
inc
sub
into
inc
gs
jns
ret
in
inc
jg
cmp
or
pop
je
add
loop
pop
shl
adc
adc
jns
dec
pop
push
cmc
mov
push
cmpsb
stos
aas
cmpsl
add
das
pop
sbb
fwait
xchg
mov
movsl
inc
push
outsb
push
jp
adc
xlat
shl
into
and
test
cmp
enter
add
maxps
add
lahf
insb
dec
cmp
es
cwtl
imul
out
add
push
mov
loope
dec
adc
mov
adcb
inc
inc
stos
dec
or
add
arpl
dec
out
jp
sbb
cmpsl
sbb
xchg
orb
call
pop
popf
cmc
xorl
and
jp
cmp
fdivrs
out
and
mov
ja
pop
imul
dec
pusha
cmp
xchg
jg
rclb
mov
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
lret
testb
add
mov
jmp
lahf
mov
test
sub
mov
adc
jbe
jp
cmpsl
leave
push
dec
sub
std
test
std
ret
or
cmp
mov
mov
push
sub
mov
adc
dec
dec
gs
fistps
mov
pop
adc
mov
or
ljmp
ds
out
push
mov
int
lock
adc
mov
push
daa
xor
push
loopne
inc
xchg
pop
push
lret
out
daa
pop
stc
fistps
mov
dec
leave
js
mov
dec
xchg
repnz
out
std
mov
inc
mov
fcompl
bound
lods
in
add
jecxz
jg
adc
add
sub
lahf
cmc
mov
jno
test
outsb
les
mov
fwait
xchg
bound
cmpb
pop
mov
sub
inc
sub
cli
jae
subb
popa
jno
inc
fdivr
lret
and
push
inc
jl
ror
add
pop
mov
ja
loop
pop
and
pop
xchg
dec
mov
pop
inc
scas
xchg
push
fwait
loope
jl
je
pop
out
jmp
xchg
lret
sub
sub
add
enter
adc
mov
test
pop
lret
sahf
inc
popa
orl
xor
xor
xor
xor
xor
xor
xor
xor
loop
add
lock
add
rol
dec
icebp
and
jno
fistpll
mov
insl
daa
jne
xor
in
jecxz
bound
sub
inc
xchg
pop
xor
xchg
add
lahf
pop
fdivl
cld
pop
and
clc
sbb
bound
cmp
push
lcall
cltd
pop
cs
inc
mov
addr16
pop
in
pop
xor
in
test
mov
cld
rol
jno
cwtl
or
cmp
out
cli
pop
sub
dec
add
jae
loope
push
dec
fwait
psubusb
imul
fwait
ljmp
hlt
dec
jo
imul
aaa
ss
je
fcoml
stos
dec
or
aam
and
test
push
lods
imul
jo
int
imul
mov
std
push
loopne
xchg
nop
rcrl
mov
cld
cmp
insl
lds
sub
pop
loopne
xor
loopne
sbb
insb
cmp
sar
xorl
mov
or
dec
cmp
push
nop
mulb
push
dec
test
sbb
add
or
sbb
rol
and
loopne
outsb
rsqrtps
fistps
data16
xchg
out
sarl
call
in
rclb
pop
dec
mov
or
ret
out
and
cmp
xor
repnz
movsl
xor
pop
sbb
icebp
ss
loop
jae
sbb
ljmp
push
push
rolb
xchg
mov
mov
push
push
bound
lods
mov
push
add
std
mov
pop
call
lock
or
mov
push
add
mov
jge
aas
lods
out
jae
push
andl
daa
mov
mov
test
in
ds
shrb
lret
and
sub
rorl
and
ss
push
push
hlt
hlt
in
xor
popf
dec
push
pop
jp
and
sti
xchg
ljmp
or
dec
fildll
and
inc
sbb
pop
aam
movsb
mov
cmp
inc
push
sti
ror
popa
pop
dec
cmpsl
dec
xor
into
dec
mov
pop
sti
addr16
sahf
shll
sbb
and
fdivrs
pop
xor
adc
xor
push
or
pop
lds
xchg
push
call
mov
inc
add
jg
sub
inc
pop
pop
add
outsb
popa
js
rclb
mov
xorb
mov
dec
xlat
sub
jo
in
das
xchg
sub
push
mov
inc
xor
xor
xor
and
add
ja
add
lds
fnstsw
sub
push
dec
mov
aaa
jo
cld
xchg
mov
lret
mov
mov
sub
aas
negl
mov
mov
dec
add
xchg
xlat
jmp
jae
je
mov
push
repz
loope
test
dec
js
mov
cmp
jo
insb
mov
dec
adcb
loopne
neg
pop
sahf
jo
imul
lods
push
adc
push
inc
movsb
sub
shrl
bound
xchg
repnz
dec
data16
bound
jg
jmp
ja
push
push
outsb
mov
mov
add
jp
iret
lock
push
push
push
pusha
sub
fisubrl
and
sub
cmp
adc
jae
mov
and
mov
sarb
push
sub
out
out
jg
andl
xorb
into
in
xchg
out
jge
call
pop
loop
mov
sar
dec
je
jmp
pop
xor
sbb
jp
popf
pop
lcall
push
and
popl
mov
adc
aas
mov
lock
pop
jmp
sarb
xor
cld
hlt
jecxz
lock
and
and
imul
or
mov
pop
mov
cmp
jae
or
cmp
jb
incl
mov
push
push
push
mov
lds
cmp
incl
lea
push
lods
icebp
sub
pop
sbbl
push
jle
js
test
lcall
pop
cmp
xchg
ret
cltd
in
cmp
in
test
mov
fcomps
ret
cltd
jnp
adc
mov
add
stos
imulb
pop
rcrb
push
jge
call
jle
dec
xchg
fmulp
xor
jbe
mov
das
and
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
insl
inc
push
lcall
push
popf
mov
xchg
mov
ds
lock
and
jno
jle
stos
int
jmp
dec
mov
sbb
jle
xor
and
dec
lods
xchg
and
adcb
call
cs
scas
imul
aam
stos
cmp
dec
dec
stos
rcrb
xchg
mov
pop
xchg
ss
sbb
fcoml
bound
divb
stos
or
push
cmp
jmp
adc
cmp
inc
fucomip
lock
push
cmp
or
jo
xchg
addr16
sti
lods
jno
pushf
insb
and
pop
pop
rcrb
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
ret
loope
fidivs
outsb
mov
xchg
popa
dec
mov
mov
shr
jecxz
lods
and
movsl
outsl
xor
mov
dec
lea
mov
mov
ljmp
int3
mov
sahf
shlb
movsl
inc
xor
js
mov
dec
out
mov
inc
lock
movsl
dec
popa
out
lods
das
or
jp
jnp
inc
pop
and
push
and
arpl
pop
cmp
lods
pop
mov
test
dec
jae
daa
fwait
sub
xor
mov
sub
mov
inc
incb
fdivr
jne
adc
mov
loopnew
pop
push
mov
adc
movsl
insl
jmp
popa
push
addr16
jb
dec
aaa
xlat
stos
leave
inc
adc
mov
xor
pushf
inc
arpl
cmpsb
add
repz
adc
cmp
in
sbb
fcomps
cmp
out
sbb
mov
pushf
and
sbb
pop
iret
push
test
ds
inc
ljmp
mov
sub
sub
pop
inc
push
es
out
pusha
cmpl
std
xchg
add
dec
mov
inc
faddl
cmp
lea
fcmovnu
faddl
in
jmp
imul
mov
inc
adc
pop
lahf
mov
in
xchg
lods
adc
adc
push
xor
je
mov
and
xchg
imul
mov
adc
fs
xchg
mov
jmp
pop
jge
adc
iret
mov
movsb
inc
aam
mov
push
xor
jp
mov
pop
adc
icebp
divb
and
cmp
mov
popa
mov
lret
or
cmp
push
cs
adc
sub
xchg
shrl
les
adc
or
pop
imul
push
je
dec
push
pop
ret
xchg
inc
in
inc
mov
repz
sub
mov
pop
adc
mov
les
pop
rclb
adc
push
pop
cmpsb
call
inc
jb
mov
pop
aas
xchg
xor
sahf
pop
fnop
in
fmul
dec
cmp
ret
std
cmc
inc
negl
rcrb
jp
and
lret
and
addl
iret
gs
cwtl
cli
dec
movsl
sbbb
mov
and
cld
es
popf
mov
fwait
bound
leave
cmp
push
lds
add
imul
jg
adc
pop
sub
lock
adc
dec
or
add
lret
xchg
lea
or
fiaddl
dec
inc
sub
stc
mov
lods
aad
test
dec
sbb
mov
push
mov
outsb
xlat
lods
insb
mov
lcall
mov
adc
lock
cmp
sbb
cwtl
int3
ljmp
xor
hlt
xor
ja
cmc
dec
mov
add
jmp
aaa
outsb
shll
nop
dec
and
jmp
insl
ds
xchg
das
and
rcrb
or
adcl
enter
test
add
or
fiaddl
repnz
call
push
fs
jle
dec
fmuls
mov
push
push
jne
add
and
add
dec
xor
enter
or
dec
fmuls
mov
xor
inc
cmpsb
and
add
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
mov
add
adc
add
rclb
add
sbb
add
adc
add
adc
add
sbb
add
adc
add
add
sbb
add
in
sbb
add
add
add
adc
add
inc
adc
add
adc
jbe
add
xchg
adc
add
mov
add
into
adc
add
hlt
adc
add
and
add
ss
add
dec
push
add
pop
push
add
push
push
add
xchg
push
add
sahf
push
add
stos
push
add
mov
adc
add
repnz
add
or
add
sbb
add
cs
add
inc
pop
add
pop
pop
add
jbe
add
test
add
xchg
pop
add
mov
pop
add
lret
add
pop
add
clc
pop
add
or
add
sbb
add
sbb
add
add
push
sbb
add
add
add
add
add
into
push
add
in
add
add
add
mov
sbb
add
add
add
add
xchg
add
je
jb
outsl
jb
outsl
fs
in
add
popa
insb
inc
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sub
inc
gs
imul
sub
inc
outsl
jo
inc
imul
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
je
jne
jb
outsb
je
jb
arpl
jae
add
add
gs
je
inc
imul
imul
inc
imul
outsb
push
gs
js
gs
imul
gs
add
add
gs
das
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
jp
inc
gs
jns
je
insl
push
imul
insb
gs
imul
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
gs
imul
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
add
insl
outsl
jbe
inc
imul
jns
add
loop
push
outsb
insl
popa
jo
imul
insb
add
inc
gs
jb
arpl
fs
jae
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
imul
bound
gs
add
addb
gs
gs
jo
imul
add
mov
fs
insb
outsl
jae
add
jo
insb
insb
outsl
arpl
stc
add
jo
imul
insb
gs
add
insl
imul
outsl
arpl
jae
add
inc
gs
imul
bound
gs
add
jmp
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
jne
jb
outsb
je
push
dec
add
jecxz
dec
outsl
popa
fs
imul
add
sbb
dec
jne
jo
je
bound
push
je
imul
add
outsb
fs
imul
gs
js
add
and
inc
imul
bound
gs
js
add
xchg
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
inc
imul
gs
gs
jo
popa
je
inc
add
movl
dec
imul
adc
push
jb
je
inc
imul
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
imul
gs
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
popa
jae
inc
jb
outsl
jb
add
outsb
push
gs
js
gs
imul
gs
aas
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
mov
jo
jb
add
adc
outsb
push
jb
arpl
jae
nop
add
je
outsb
fs
inc
imul
gs
jb
arpl
jae
gs
jo
add
jne
jb
outsb
je
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pusha
add
je
imul
arpl
add
outsb
fs
imul
inc
add
inc
gs
imul
popa
arpl
outsb
je
add
add
outsb
fs
imul
push
push
inc
push
xor
cs
insb
add
sbb
inc
fs
jae
push
outsl
imul
jb
jbe
insb
gs
push
add
imul
jb
jbe
insb
gs
popa
insb
jne
inc
add
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
add
push
inc
push
dec
xor
cs
insb
