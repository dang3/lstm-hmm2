push
call
jmp
add
stc
push
shld
mov
call
mov
call
pushl
call
push
pushl
popl
mov
pushf
lea
jmp
bts
cmc
notl
call
call
jmp
jmp
lea
jb
ja
rol
push
lea
cmc
shr
lea
call
push
pushf
popl
lea
jl
popl
pusha
pusha
mov
lea
jmp
movsbw
mov
movsbw
movsbw
movsbw
mov
movzbw
xchg
mov
call
mov
movb
movw
mov
mov
mov
jmp
dec
lea
jno
mov
pusha
lea
jmp
cmp
rcr
ror
push
mov
jmp
add
lea
je
pusha
pusha
mov
mov
pushf
pushl
lea
jmp
mov
pusha
pushl
call
sub
stc
movb
not
pushf
test
cmp
xchg
mov
xor
pushf
call
lea
pushf
movb
push
call
movb
movb
mov
call
jmp
xor
bt
sbb
mov
clc
bts
neg
cmc
mov
clc
jmp
pushf
pushf
popl
push
pushl
mov
push
mov
lea
jmp
push
jmp
mov
add
pop
add
add
addb
add
mov
add
enter
add
add
addb
add
and
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
subb
add
loopne
add
clc
add
addb
push
add
add
add
add
sbb
add
sub
add
inc
add
subb
add
jo
add
mov
add
add
push
add
add
add
add
add
add
add
add
addb
add
add
addb
add
sbb
add
add
add
mov
add
xor
add
add
add
add
add
dec
add
addb
add
pusha
add
addb
add
addb
addb
add
add
add
add
addb
add
outsb
add
add
add
addb
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
or
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
or
add
add
add
inc
add
add
or
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
xor
add
sbb
vunpcklpd
pop
mov
add
push
fcompl
add
add
and
add
or
fimull
add
dec
push
add
adc
push
add
or
fiaddl
add
add
add
nop
sub
add
mov
or
mov
add
les
add
in
push
xor
push
add
add
add
add
add
add
add
xor
test
add
in
xor
push
add
add
add
add
add
add
add
add
add
add
add
repnz
adc
add
lock
xor
push
add
add
xor
sahf
add
add
clc
xor
dec
add
add
out
xor
mov
add
mov
add
add
add
add
cmp
add
add
dec
cmp
add
or
inc
add
dec
add
inc
add
push
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
adc
add
dec
cmp
add
inc
add
push
bound
pusha
arpl
cmpb
js
jo
xchg
cltd
jno
push
addl
jp
add
xlat
add
add
std
mov
jbe
mov
cmpsb
mov
pop
imul
add
int3
int3
lret
repnz
int3
int3
int3
adc
lock
int3
int3
into
loopne
rcrb
out
lods
int3
into
loop
mov
out
or
into
call
pop
lret
pop
loopne
out
in
int3
out
loope
icebp
or
out
into
out
nop
paddw
fsubrp
out
jmp
imul
push
bound
adc
call
movsb
adc
std
out
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
push
ltr
sbb
add
and
adc
add
sub
cmp
sub
cs
xor
xor
xor
add
inc
sub
cmp
add
cmp
push
pop
cmp
add
inc
add
inc
dec
add
insl
jl
inc
inc
inc
add
dec
add
dec
add
inc
add
add
dec
add
dec
add
pop
add
push
add
inc
add
push
add
push
add
add
bound
pusha
pop
data16
add
pusha
add
bound
arpl
add
popa
add
add
add
jo
jo
jb
js
js
js
js
jp
jnp
cmpb
jle
push
jb
jbe
adcb
add
jnp
aas
js
add
addb
jns
add
add
sahf
add
test
jge
scas
add
mov
add
mov
pop
scas
roll
mov
out
add
les
jns
ret
aam
addr16
fldl
ja
roll
js
filds
push
out
imul
add
add
in
outsl
xlat
lock
testb
stc
add
cld
add
repnz
clc
add
mov
add
cltd
cltd
add
scas
mov
xchg
mov
add
mov
mov
add
lods
lods
add
mov
xchg
add
lds
add
scas
add
fldenv
add
fisubrl
add
out
add
mov
cmpsl
jmp
add
into
into
rolb
aad
add
fcmovu
add
jecxz
add
out
out
add
hlt
hlt
add
incl
incl
jle
jle
jl
push
sub
jle
jle
jle
jle
das
and
and
js
jle
jle
sbb
sbb
cmp
sub
jle
jp
adc
push
dec
sub
add
jle
add
dec
push
push
dec
dec
push
push
dec
sbb
or
jnp
add
push
inc
inc
push
dec
inc
data16
gs
add
jb
push
inc
outsb
jne
add
add
jae
outsb
push
push
adc
and
sub
je
es
dec
cmp
jae
add
ja
or
imul
inc
push
je
add
or
xor
je
aas
imul
pop
add
outsl
jo
pop
add
jle
jle
push
sub
data16
outsb
addr16
jle
jle
xor
sbb
and
sbb
or
jnp
jle
jle
jle
sub
adc
or
pop
jle
jle
jle
jle
jle
jp
fs
jle
jle
jle
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
ljmp
add
add
add
add
add
add
add
add
add
addb
add
sub
add
xchg
xchg
xchg
imul
js
add
loope
cwtl
mov
lods
add
leave
movl
mov
mov
mov
mov
mov
adc
mov
mov
add
cltd
push
push
push
mov
mov
pop
jno
xor
mov
add
adc
ja
fwait
mov
xor
push
xor
sbb
jae
jp
data16
adc
mov
xor
data16
mov
data16
or
data16
add
data16
add
mov
data16
mov
add
data16
mov
add
mov
add
mov
arpl
mov
or
adc
mov
sbb
mov
push
adc
add
mov
adc
mov
cmp
mov
add
mov
cmp
mov
add
mov
mov
mov
add
data16
add
adc
dec
mov
mov
mov
mov
mov
nop
add
mov
mov
and
or
sub
test
add
sbb
push
dec
mov
add
mov
aaa
xor
dec
mov
or
adc
xor
inc
xor
push
xor
mov
xor
push
adc
mov
xor
jne
adc
adc
mov
mov
adc
mov
mov
xchg
xor
mov
mov
mov
mov
add
add
add
add
add
add
add
add
or
add
add
addb
or
add
add
or
push
add
adc
add
adc
add
sbb
add
adc
add
push
adc
add
pop
sbb
add
sbb
sub
add
adc
xor
sbb
cmp
sbb
add
and
add
cmp
add
and
add
and
cs
cmp
add
xor
add
xor
add
xor
add
and
dec
inc
daa
add
add
sub
push
dec
sub
dec
inc
xor
push
dec
xor
push
push
xor
pop
push
xor
bound
add
cmp
inc
add
dec
add
dec
push
add
push
push
add
pop
add
add
dec
add
dec
add
inc
add
inc
add
add
pop
add
push
add
push
add
add
pop
add
pop
add
add
inc
add
inc
add
dec
add
pop
add
push
add
push
add
pusha
add
arpl
popa
arpl
fs
insb
add
jo
push
jne
imul
jb
add
jl
jb
jb
jb
jl
jne
jl
jnp
jl
fwait
jbe
add
jle
add
jle
add
pop
add
pusha
add
jbe
imul
add
andl
xchg
arpl
adcb
add
cmpsl
je
lcall
add
mov
jbe,pt
add
test
jns
xchg
jge
lea
jle
xchg
add
xchg
add
xchg
add
test
insl
movsb
xchg
add
xchg
add
xchg
add
scas
add
mov
push
mov
mov
add
stos
add
mov
popa
mov
add
mov
pop
mov
add
lds
pusha
mov
aam
arpl
call
add
in
add
fiaddl
push
out
imul
out
add
out
add
icebp
add
testb
add
repnz
stc
add
add
orb
test
xchg
add
sahf
popf
add
mov
add
test
add
mov
add
mov
add
mov
lcall
add
mov
mov
add
movsb
movsb
add
stos
mov
mov
mov
mov
mov
mov
xchg
lcall
les
add
les
add
shrb
lcall
add
shll
movsl
aam
add
stos
add
loope
add
call
rolb
lods
rolb
mov
mov
add
mov
add
rcl
add
fcom
add
add
jecxz
add
in
in
add
repz
clc
clc
add
incb
incl
rcl
rcl
rcl
rcl
rcl
rcl
into
int3
stos
cmpsb
cmpsb
stos
int3
into
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
xchg
cmp
adc
adc
cmp
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcll
popf
popf
xor
les
addr16
cmp
rcl
rcl
rcl
rcl
rcl
int
ss
sahf
addr16
lds
addr16
sahf
ss
push
iret
rcl
rcl
rcl
rcl
rcl
ror
adc
cmp
inc
inc
and
xor
adc
dec
xchg
cmpsl
lahf
lret
rcl
rcl
rcl
ror
cmp
dec
mov
cltd
jns
jns
push
sub
mov
rcl
rcl
rcl
ror
sbb
xchg
dec
sbb
pop
movl
pop
adc
sub
add
iret
rcl
rcl
rcl
dec
add
inc
add
mov
test
mov
add
rcl
rcl
lret
add
and
mov
xchg
test
add
leave
rcl
rcl
cmp
mov
test
test
xchg
push
add
add
add
add
inc
jbe
orl
jg
xchg
cwtl
inc
add
add
add
adc
mov
xchg
shrl
rcl
inc
add
add
mov
insb
test
mov
sarl
rcl
sub
add
pop
rol
mov
cltd
jae
orl
sarb
add
ror
adc
sarl
add
jnp
add
mov
mov
push
add
adc
add
sarl
add
jb
add
data16
mov
pop
add
adc
add
sarl
xor
or
shll
add
add
sarl
xchg
mov
add
sarl
mov
mov
lcall
mov
mov
add
add
rcl
xchg
add
add
mov
mov
mov
mov
add
add
add
pop
bound
mov
jp
mov
mov
add
rcl
shrl
add
add
mov
mov
mov
mov
mov
add
add
rcl
rcl
test
pop
mov
mov
pushf
mov
push
add
add
test
shll
add
add
pop
mov
mov
mov
push
add
add
rcl
rcl
rcl
int3
or
add
push
aas
mov
sarl
mov
add
add
int3
rcl
rcl
rcl
shrl
dec
pop
pop
lods
mov
mov
sub
add
test
rcl
rcl
shll
push
adc
inc
pop
pop
inc
ds
cmp
rcl
rcl
rcl
rcl
shrl
lea
sub
cmp
enter
rcl
rcl
rcl
rcl
rcl
int
pop
add
xor
cmp
inc
int
rcl
rcl
rcl
rcl
rcl
rcl
rcl
ror
dec
sbb
or
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
iret
stos
dec
inc
cmp
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
roll
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sbb
add
fs
add
jns
add
jg
cwtl
pushf
imul
jp
add
filds
fwait
mov
xchg
sahf
fsubrl
add
std
std
add
add
add
out
out
out
out
out
out
out
out
out
out
out
into
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
xchg
jno
adc
into
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
xchg
xchg
add
sahf
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
pop
int3
sbb
pop
scas
out
out
out
out
out
out
out
out
out
out
out
ljmp
int3
jns
rcll
out
out
out
out
out
out
out
out
out
out
jo
int3
jl
jno
lds
jno
sbb
out
out
out
out
out
out
out
out
loope
int3
xchg
xchg
push
pop
adc
leave
cltd
sahf
out
out
out
out
out
out
out
out
jo
jns
push
adc
adc
sbb
pushf
add
out
out
out
out
out
out
loope
ja
jo
imul
mov
xchg
adc
out
out
out
out
out
jo
cltd
adc
popf
mov
mov
jo
pop
out
out
out
out
out
jmp
stos
mov
mov
add
loopne
pop
adc
fmuls
mov
add
push
out
out
out
out
jo
add
mov
mov
mov
add
pop
out
out
out
in
add
add
mov
mov
popa
add
add
out
out
out
add
insl
mov
mov
xchg
add
jle
out
loope
add
push
mov
mov
push
out
out
nop
add
push
mov
mov
mov
popa
add
or
out
jo
add
mov
mov
pop
mov
pop
out
out
adc
add
mov
mov
mov
add
out
add
add
mov
mov
mov
add
in
add
add
sbbl
test
add
into
jmp
mov
add
mov
add
sahf
jmp
mov
add
mov
add
sahf
jmp
mov
add
mov
add
outsb
jmp
mov
pop
mov
mov
add
mov
adc
push
sbb
add
sahf
in
add
add
imul
mov
mov
out
add
add
mov
mov
mov
add
out
adc
add
mov
mov
mov
add
out
jo
add
mov
pop
mov
mov
out
out
nop
add
push
mov
mov
mov
add
or
out
loope
add
stos
mov
mov
mov
add
out
out
out
add
imul
mov
mov
jle
out
out
add
add
mov
mov
mov
add
out
out
out
jo
add
stos
mov
mov
and
add
pop
out
out
out
out
loope
add
sbb
mov
data16
add
out
out
out
out
in
add
pop
jbe
mov
mov
add
add
out
jo
sbb
push
stos
mov
mov
add
out
out
out
out
out
out
out
cltd
pop
cltd
push
cmpsb
mov
popa
adc
adc
push
out
out
out
out
out
out
out
adc
data16
stos
cmpsb
popa
adc
jno
pop
out
out
out
out
out
out
out
out
out
loope
jno
jo
adc
adc
pop
popa
adc
out
out
out
out
out
out
out
out
xchg
sbb
pop
push
xchg
ja
adc
out
out
out
out
out
out
out
out
out
out
in
adc
sbb
popa
xchg
adc
popa
jno
add
out
out
out
out
out
out
out
out
out
out
out
jmp
popa
xchg
jno
add
into
out
out
out
out
out
out
out
out
out
out
out
out
out
in
jo
add
adc
pop
sahf
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jno
add
jl
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
ljmp
add
add
add
add
add
add
or
add
add
orb
add
add
add
or
add
add
adc
add
pop
or
add
adc
add
pop
sbb
sbb
sbb
and
add
pop
sbb
daa
and
add
adc
sub
add
sbb
sub
add
sbb
cmp
sbb
adc
and
push
push
and
push
and
add
sub
cmp
sub
daa
add
sub
add
cmp
add
xor
add
cmp
add
cmp
inc
ss
add
and
xor
dec
inc
sub
push
inc
add
add
sub
add
add
xor
pop
push
xor
fs
cmp
popaw
cmp
imul
outsl
imul
add
dec
pop
add
imul
inc
inc
add
inc
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
add
pop
add
pop
add
push
add
inc
add
inc
add
add
dec
add
pop
add
push
add
add
imul
push
jle
add
arpl
imul
add
push
add
je
outsl
outsb
jp
outsb
jno
add
jae
jbe
jg
jl
jge
lock
in
data16
jg
addl
add
mov
mov
insb
add
cmpl
popf
mov
jbe
lcall
add
test
jne
mov
mov
inc
jns
add
addb
jnp
add
xchg
add
xchg
pop
xchg
mov
inc
test
add
fwait
add
addb
addb
xchg
test
jno
addb
test
test
push
cwtl
cmpsb
add
mov
add
roll
arpl
add
call
add
ljmp
rol
addr16
fiaddl
jge
roll
ja
fildl
jp
flds
jns
fildl
push
aad
add
in
js
in
jo
out
add
out
add
icebp
add
hlt
add
cld
add
add
mov
add
mov
xchg
xchg
xchg
mov
cwtl
add
xchg
xchg
add
xchg
xchg
add
xchg
lahf
add
pushf
fwait
add
stos
test
mov
test
mov
cmpsl
add
popf
test
add
mov
movsb
add
mov
add
stos
mov
movsl
cmpsb
mov
add
mov
add
mov
addl
cmpsb
mov
cmpsb
les
xchg
int3
mov
add
fidivs
add
fidivs
add
mov
movb
test
add
lret
add
mov
add
mov
roll
mov
flds
test
les
test
rolb
lret
add
add
xlat
fadds
faddl
jecxz
jecxz
out
jmp
add
hlt
repz
div
add
incb
incl
scas
push
dec
and
or
sbb
dec
push
mov
frstor
add
add
add
and
lods
lods
push
lret
ror
shrb
leave
stos
xor
fistpll
sahf
outsb
cmp
into
int3
int
popf
stos
dec
lret
pop
and
fists
mov
int3
iret
cmp
ror
dec
pop
lret
int3
into
cmp
and
sahf
aaa
scas
fnstsw
add
rcrl
inc
inc
cmp
and
or
mov
ja
mov
cmp
add
cmp
pop
fs
pop
inc
inc
daa
or
push
sbb
add
fstp
fistpll
cmp
cmp
mov
add
fs
mov
aam
fs
and
sub
add
fstp
fists
dec
movsl
lcall
aam
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
aam
inc
or
mov
add
fbstp
or
add
pusha
ret
xchg
xchg
nop
nop
xchg
nop
nop
xchg
nop
nop
xchg
nop
xchg
nop
ret
or
add
add
add
or
add
xchg
sbb
sub
xchg
xchg
nop
nop
nop
nop
xchg
nop
nop
nop
xchg
nop
nop
nop
nop
xchg
xchg
xchg
mov
add
add
add
or
push
add
add
add
daa
cmpsl
mov
xchg
nop
xchg
nop
xchg
nop
xchg
xchg
nop
nop
xchg
nop
xchg
nop
xchg
mov
add
add
add
add
add
adc
mov
nop
nop
xchg
nop
nop
xchg
nop
nop
xchg
nop
nop
xchg
nop
nop
xchg
xchg
xchg
mov
add
add
add
dec
add
add
add
pusha
aad
xchg
xchg
xchg
nop
xchg
nop
nop
xchg
nop
nop
nop
nop
nop
xchg
xchg
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
push
or
add
add
das
bound
xchg
xchg
xchg
xchg
xchg
nop
xchg
xchg
test
nop
xchg
nop
xchg
xchg
xchg
mov
jne
sub
add
fcmovnu
fbstp
add
pusha
test
jo
orb
addl
je
jns
ret
lds
add
add
add
dec
add
add
add
enter
js
jl
xchg
mov
xchg
adcl
rol
mov
add
add
fstpl
add
add
add
rol
mov
xchg
xchg
xchg
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
je
mov
pop
add
add
add
fstp
add
add
add
arpl
mov
ret
js
jle
xchg
xchg
nop
nop
xchg
jge
nop
xchg
xchg
jno
mov
arpl
add
add
add
add
add
add
mov
mov
xchg
jb
nop
xchg
mov
mov
push
add
add
add
add
add
sub
rol
mov
insb
or
xor
or
ret
rol
mov
add
add
add
add
das
mov
mov
mov
xor
add
xor
mov
das
add
add
add
add
add
inc
mov
rol
sbb
add
jge
jl
add
add
test
mov
mov
add
cltd
mov
add
enter
rol
enter
xor
xchg
nop
xchg
nop
jae
add
dec
rol
rol
rol
add
add
add
add
add
sub
mov
mov
xchg
xchg
nop
xchg
nop
xchg
mov
and
mov
mov
add
scas
add
add
add
test
mov
lds
xchg
xchg
nop
xchg
nop
xchg
xchg
je
test
mov
test
add
flds
add
add
adc
mov
rol
jns
xchg
xchg
xchg
nop
xchg
nop
xchg
jo
rol
mov
mov
adc
add
add
and
add
add
mov
mov
pop
mov
jge
mov
rol
pop
add
add
add
fstp
dec
add
add
add
mov
mov
mov
enter
xchg
xchg
xchg
mov
mov
mov
sub
add
mov
add
add
adc
ret
ret
ret
rol
mov
rol
jae
xchg
mov
mov
mov
add
add
mov
pop
add
add
add
ret
ret
mov
mov
test
jae
test
mov
mov
inc
add
add
add
fcmovnu
push
add
add
add
pusha
rol
mov
rol
mov
mov
mov
mov
add
add
push
fimull
add
add
add
push
ret
ret
mov
rol
mov
mov
stos
ret
stos
pop
pop
imul
add
push
add
add
add
xor
rol
ret
ret
ret
rol
mov
stos
stos
stos
mov
add
add
add
push
fistl
add
add
add
das
push
ret
ret
ret
ret
mov
mov
mov
mov
imul
add
add
pop
fcmovnu
mov
add
add
dec
popa
inc
arpl
ret
ret
ret
rol
mov
mov
mov
mov
add
add
add
fists
add
push
xchg
mov
mov
mov
mov
sub
add
add
xchg
filds
mov
mov
dec
mov
sub
rol
mov
pop
sub
push
or
add
add
cmp
cltd
push
inc
scas
add
arpl
push
arpl
and
pop
xchg
inc
add
fstp
fisttps
fstps
add
cmp
sbb
sbb
push
xchg
sbb
sub
mov
push
dec
scas
cltd
push
mov
xor
jbe
cmp
cmp
or
add
and
add
cmp
mov
mov
sub
cmp
add
sub
mov
add
inc
mov
sub
add
add
push
mov
fistpll
add
inc
dec
sub
sbb
add
pop
dec
mov
fnstsw
or
sbb
cmp
fcmovnu
filds
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
xor
add
add
push
add
xor
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
or
add
add
aas
add
add
add
add
add
add
add
dec
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
add
add
add
add
add
add
add
add
bound
xor
add
sub
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
xor
inc
add
add
data16
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
xor
inc
add
and
inc
add
imul
bound
jns
and
xor
inc
add
sub
ja
ja
ja
add
add
add
add
add
jb
sub
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
and
xor
sub
and
xor
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
push
add
add
add
push
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
sub
arpl
sub
and
xor
cmp
cmp
cmp
jle
xor
xor
xor
cmp
and
bound
jns
and
xor
inc
add
add
inc
add
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
xor
inc
add
pop
add
push
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
xor
inc
add
and
inc
add
imul
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
and
xor
sub
and
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
mov
add
add
add
add
inc
xor
add
add
fldl
add
add
add
inc
xor
add
add
incb
add
add
add
xor
add
add
sbb
xor
add
add
add
add
das
inc
xor
push
inc
xor
in
add
add
pusha
inc
xor
dec
inc
xor
imul
push
inc
xor
jne
xor
pop
inc
xor
addb
bound
add
inc
xor
fwait
inc
xor
jb
xor
movsl
inc
xor
jp
xor
mov
xor
addb
add
jb
gs
xor
cs
insb
add
inc
push
xor
cs
insb
add
dec
xor
cs
insb
add
insl
fs
xor
cs
insb
add
push
inc
push
dec
xor
cs
insb
add
inc
dec
dec
xor
cs
insb
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
push
push
push
inc
push
dec
cs
insb
add
add
fs
imul
add
add
outsb
fs
gs
popa
addr16
add
add
gs
je
inc
outsl
outsb
je
add
add
je
popa
jbe
inc
imul
add
add
addr16
jo
outsb
dec
gs
add
add
gs
insb
inc
js
arpl
gs
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
push
gs
jo
imul
inc
gs
arpl
outsb
outsw
dec
imul
push
push
push
mov
xor
lea
movb
repz
inc
push
push
stos
lcall
adc
shlb
adc
push
pop
add
ret
sbb
dec
xor
inc
push
ret
adc
add
push
xchg
sub
aaa
add
mov
pop
or
push
enter
test
jne
pop
adc
ss
jmp
or
mov
dec
int
push
das
leave
push
inc
push
clc
lds
mov
mov
aas
insb
pop
add
repnz
not
sub
jne
in
call
fmul
dec
rorl
cld
loope
cmp
rorb
outsb
push
incb
enter
sbb
cmp
add
lock
call
rcrb
sbb
shufps
cmp
jmp
add
and
adc
clc
dec
or
pop
ret
and
sbb
mov
xchg
sbb
out
jp
and
or
add
mov
add
jmp
data16
or
add
push
mov
aaa
push
push
test
sbb
inc
or
push
scas
sbb
inc
stos
ret
mov
lret
gs
sub
test
inc
imul
jl
sub
je
inc
push
xchg
mov
jns
inc
push
nop
jle
sbb
and
jae
add
xor
mov
bound
sbb
push
push
adc
test
adc
sbbb
add
loopne
cmp
mov
adc
or
call
jae
jmp
adc
mov
movsb
xchg
cmp
adc
and
and
arpl
or
insb
sbb
cmp
xchg
addl
and
add
pushf
mov
ret
ljmp
fidivs
push
push
mov
cmp
pop
jne
and
test
lods
xchg
stc
inc
jmp
fsubl
xadd
mov
or
enter
shl
cltd
push
push
fcoml
lods
hlt
push
idivb
add
mov
outsb
pop
ljmp
adc
jle
push
mov
adc
ds
jne
sbb
nop
mov
ljmp
in
or
movsb
fisubl
jo
fmuls
stc
fmuls
loope
rcrb
fmull
fcoml
mov
xchg
pop
lock
stos
outsb
and
pop
and
jl
xchg
movsb
and
movsb
push
push
push
pop
sbb
cmp
inc
sub
je
nop
add
add
sarb
movl
sub
push
and
jno
mov
mov
insb
out
adc
cmp
xor
in
pusha
repnz
pop
mov
pusha
inc
out
nop
xor
jne
sbb
ds
jle
insb
adc
push
js
xchg
lea
jb
xchg
and
insb
ret
mov
cmc
testl
popaw
and
add
or
push
and
rclb
cmp
out
xchg
loopne
or
leave
push
add
mov
inc
fdivs
sbb
pop
push
sub
repnz
push
lods
add
or
cmp
mov
or
fsubr
sub
jns
stos
or
inc
and
adc
cmpsl
adc
outsl
xor
sbb
push
push
int
push
mov
xor
push
fcoms
mov
cmp
push
xchg
xor
subl
cwtl
xchg
or
or
popa
or
and
or
test
mov
xchg
or
outsl
sbb
mov
mov
push
push
das
add
repnz
sub
add
movl
push
xchg
adc
pop
xor
dec
jo
leave
or
push
mov
and
adc
notb
inc
cli
mov
imul
inc
lea
push
dec
xor
lea
std
pop
pop
cld
test
jle
push
sbb
cltd
dec
and
or
in
cmp
jl
jmp
sub
sub
mov
push
mov
popf
scas
mov
mov
rcr
inc
sub
sahf
xorb
mov
sub
pushf
xchg
inc
push
push
add
negl
or
rolb
or
loopne
mov
jne
or
mov
lock
ret
cmp
and
sbb
cmp
mov
xchg
loopne
push
mov
push
push
cmpsb
sbb
inc
or
dec
push
fmull
int
and
push
clc
gs
push
inc
sbb
or
mov
or
add
dec
lock
fs
in
ret
mov
jb
and
inc
shlb
gs
push
in
cld
dec
test
xchg
push
lds
pop
in
mov
pusha
cld
enter
adcb
inc
or
mov
daa
pushf
ljmp
or
or
or
or
adc
push
and
sbb
or
xchg
jnp
cmp
and
adc
xor
test
adc
das
mov
cld
orps
push
or
inc
lahf
movb
je
inc
mov
add
adc
cwtl
dec
sbb
loope
dec
sub
mov
jmp
dec
dec
push
add
leave
je
mov
fmuls
out
dec
in
push
sbb
mov
orb
ja
test
push
fcomp
fsubr
inc
mov
adc
mov
lea
aam
xor
dec
push
mov
orb
inc
mov
sbb
mov
or
push
fcoml
pop
add
push
add
aaa
cmp
incb
sbb
rcr
inc
movsl
call
jno
jns
jno
mov
add
mov
add
cmp
mov
add
jo
aas
out
pop
pusha
sbb
call
stos
and
out
jmp
mov
cmp
mov
fisttps
fiaddl
xor
in
enter
daa
and
dec
inc
push
adc
push
mov
cmp
or
inc
or
insb
inc
mov
pop
dec
cmpsl
cli
dec
mov
sub
xor
or
rolb
aam
loopne
xchg
in
sub
and
xchg
push
sbb
cmp
enter
mov
adc
iret
add
inc
rol
call
jmp
inc
testl
jle
push
xor
add
xor
push
js
fcoms
fsubl
loopne
in
jne
call
push
fs
es
aam
mov
and
loopne
in
or
push
adc
mov
outsb
jp
push
push
and
push
push
mov
or
mov
add
add
mov
enter
shlb
push
aam
fsubl
sarb
dec
pop
mov
lods
xchg
pop
sub
jmp
rclb
sti
push
ja
jmp
mov
jmp
pop
sbb
inc
inc
orl
into
stos
xchg
test
inc
or
mov
jge
sbb
sbb
and
int
ret
into
out
xor
mov
or
sbb
mov
sahf
mov
fmul
ret
ljmp
mov
in
and
jns
pop
cli
or
xor
cmp
adc
stc
add
mov
dec
push
adc
and
pusha
inc
int
orl
sbb
stc
ss
sub
mov
mov
bound
add
sahf
or
test
cmp
pushf
mov
lock
adc
sub
jbe
mov
adc
ret
xchg
and
cli
and
dec
mov
or
add
loopne
push
pop
out
mov
lock
dec
adc
ds
cmp
mov
mov
and
adc
push
jo
push
and
adc
daa
add
mov
outsb
xchg
pop
or
out
adc
stc
sbb
test
and
xor
adc
and
sbb
sbb
and
imul
dec
or
cwtl
fisttpll
cmp
mov
pop
inc
sbb
out
xchg
xor
orb
aam
lds
push
xlat
sub
xlat
xor
je
add
dec
jge
popw
sbb
mov
in
or
sbb
cmp
adc
adc
sub
and
mov
inc
push
ret
add
cltd
adc
inc
or
xor
mov
pop
sbb
jl
jo
imul
mov
and
xchg
outsb
cmp
and
or
sbb
and
xor
and
cmp
pop
adc
adc
sub
add
popa
and
adc
mov
or
inc
mov
pop
imul
jmp
call
adc
and
cmp
fs
xchg
xchg
cmpsl
xor
and
js
subb
and
push
add
add
iret
or
add
repnz
mov
or
add
clts
adc
adc
adc
adc
mov
inc
add
cmp
adc
sbb
bound
inc
or
sbb
dec
push
lret
sbb
imul
cwtl
push
dec
adcb
add
xchg
ds
movsb
add
jmp
ret
push
xorb
movhps
addr16
sbb
xor
xor
mov
cmp
xchg
lret
push
adc
add
xor
call
fwait
push
clc
sub
xchg
xchg
cwtl
pusha
mov
cli
fsave
pusha
rclb
call
fildll
push
enter
or
push
stc
loope
int3
inc
inc
push
cmp
add
fdivrl
or
into
inc
or
pop
add
enter
adc
or
into
mov
cmpsb
push
pop
fwait
cmp
lock
shlb
jl
test
jg
or
cmp
pop
cmp
sahf
ror
test
jae
loopne
xor
in
pushf
addl
add
test
iret
mov
mov
andb
dec
xorb
call
inc
movsb
lods
das
and
or
adc
inc
adc
ficoml
jmp
daa
cmp
fimuls
shlb
cmc
lahf
dec
movsl
inc
rcl
and
jae
cld
mov
popa
dec
cmovs
scas
mov
in
repz
aam
out
dec
dec
push
rcrl
out
insb
xor
push
ss
rolb
int3
inc
and
mov
ss
mov
rclb
push
enter
mov
lods
pop
add
lea
lock
push
or
add
cli
mov
sub
or
adc
inc
mov
cmp
add
push
shr
adc
enter
sarb
fcoms
fsubl
pop
js
push
xor
add
push
mov
pop
sbb
or
les
fs
enter
add
or
aam
je
fdivrs
faddl
jl
mov
mov
inc
movb
sub
or
fidivs
cmp
out
sub
test
jl
in
in
aas
test
and
outsb
je
xor
pop
movl
xchg
daa
sub
xchg
push
pop
stc
arpl
xchg
mov
mov
sub
std
sub
add
add
and
xchg
hlt
bound
cmp
fsubs
add
and
xchg
jmp
in
sbb
dec
inc
enter
xor
daa
inc
in
sahf
cmp
adc
or
and
or
test
inc
cwtl
bnd
nop
insb
mov
mov
and
inc
mov
das
and
jns
or
adc
clc
popf
ljmp
bound
popf
or
or
loope
mov
enter
xor
hlt
pushf
or
test
shlb
pushf
and
xorb
jne
jo
mov
out
lret
and
push
pop
mov
xchg
adcl
lret
mov
push
test
out
inc
data16
fwait
sub
pop
and
fwait
jae,pn
adc
lods
das
and
clc
mov
es
inc
cmpsl
sub
pop
adc
cld
lcall
sbb
inc
lcall
enter
mov
je
mov
nop
cmp
and
fucomi
cmp
fs
adc
mov
cltd
pop
decl
enter
or
mov
inc
pushf
xchg
and
adc
add
adc
pop
mov
xor
jae
sub
rolb
test
arpl
sbb
xchg
cwtl
pop
inc
xchg
cwtl
sub
and
les
inc
mov
dec
unpcklps
sbb
pushf
sub
scas
sub
nop
dec
cltd
lret
push
push
subb
xor
out
and
imul
cmp
xchg
adc
xor
sbb
out
adc
repnz
and
xchg
jo
xchg
test
lods
xchg
jno
jno
mov
xchg
mov
jge
mov
pop
lods
pop
sub
add
adc
lods
cmp
nop
lret
add
mov
mov
or
ss
aaa
sbb
push
cltd
adc
in
clc
mov
mov
sbb
mov
enter
add
dec
pop
xchg
or
and
pop
outsl
mov
xchg
adcl
xchg
or
push
int3
mov
inc
dec
add
adc
or
adcl
or
shll
es
fs
xor
xchg
scas
and
insb
orb
inc
adc
dec
cmp
push
mov
clc
adc
int3
and
into
adc
and
mov
cmp
add
mov
sub
inc
push
ja
cmp
push
jo
cmp
inc
and
adcb
and
mov
push
mov
push
and
mov
rcll
push
mov
cli
sub
aam
sbb
pop
cld
jno
and
jne
adc
stos
lock
adc
push
fdivr
push
jbe
jge
push
in
sbb
push
push
push
nop
or
jo
shlb
sbb
push
sub
out
shr
push
fdivl
inc
adc
xorl
ljmp
adc
mov
xchg
push
repz
pop
xchg
lret
test
or
call
sub
xchg
cmp
lea
data16
sbb
adc
fisttpl
dec
mov
xor
sub
adc
cmp
jl
jg
lretw
xor
scas
xor
jp
and
inc
fisubl
lock
icebp
and
mov
mov
je
push
aad
lods
adc
fs
test
push
push
push
inc
outsl
fsts
xor
mov
dec
mov
sub
push
inc
or
xor
inc
ljmp
cmpsl
dec
push
cmpsl
cmp
aad
inc
movsb
inc
les
mov
cmp
lret
mov
and
xor
nop
pop
call
fsubl
adc
jmp
mov
mov
pop
push
inc
pop
xor
faddl
cmp
les
and
push
xchg
and
adc
aam
or
int3
push
test
add
pop
nop
adc
les
outsb
rorb
sbb
mov
and
jns
or
inc
push
shll
lahf
sub
mov
mul
adc
call
push
and
nop
or
inc
adc
jb
mov
movsb
in
and
stos
inc
cmp
test
pushf
xchg
pushf
jb
dec
inc
pusha
xchg
test
pop
and
or
adc
push
movsb
xchg
xchg
pop
int
wrmsr
push
pop
pop
inc
mov
movl
mov
inc
lods
pop
aad
cmp
mov
mov
lock
push
mov
xorl
xchg
push
pop
mov
cld
push
push
xchg
xchg
push
rcrl
lret
pop
mov
push
sub
nop
fs
pop
adc
pop
xchg
pusha
sub
mov
mov
dec
mov
and
pop
add
mov
dec
pop
adc
cs
adc
adc
rcrl
adc
jno
pop
rclb
push
xor
push
push
mov
xor
jb
mov
adc
aad
out
adc
mov
dec
iret
xor
pop
aam
xchg
inc
pushf
sub
mov
aad
xchg
jle
push
mov
pop
aam
xor
push
loopne
lahf
rcr
adc
popa
xchg
out
or
jle
sub
mov
out
push
test
xchg
sbb
mov
lret
shlb
rcrb
pop
xor
adc
sbb
xor
adc
jle
out
mov
mov
stc
loopne
sub
dec
lock
sar
cmpsb
test
jb
inc
inc
mov
push
push
pop
push
call
out
fs
push
adc
in
push
enter
sub
xchg
or
arpl
add
mov
or
cmp
adc
xchg
mov
faddl
push
push
nop
sar
fcoms
pop
add
paddsb
in
xchg
addl
jmp
mov
push
cmp
sahf
adc
jmp
adc
mov
mov
imul
shrl
push
or
aad
or
mov
mov
andl
add
je
rcll
and
add
xor
cmp
xchg
ret
xchg
lock
push
jae
cmp
lret
scas
mov
push
incl
dec
dec
cmp
loop
aas
int3
repz
pop
push
mov
ja
out
rorl
push
mov
adc
mov
shlb
lea
adc
cmp
jmp
jl
adc
cs
rolb
cmp
aas
jge
sbb
testb
dec
insb
mov
adc
dec
mov
or
inc
add
pop
add
inc
cmp
jl
pop
rcrl
int
xor
push
push
aam
ljmp
testb
dec
aam
mov
cmp
sbb
jp
sbb
lret
jne
loopne
push
mov
dec
push
mov
pushf
mov
sbb
mov
out
loop
mov
lds
push
and
cld
dec
xor
cwtl
and
dec
sub
pop
cmp
test
pop
mov
pop
out
sti
xchg
fisttpl
stos
push
movsb
sub
or
sub
adc
jno
adc
inc
push
add
fst
inc
ljmp
mov
rep
jb
adc
mov
xor
add
addr16
jmp
mov
outsb
cmc
sbb
dec
inc
aad
or
adc
addb
cmp
sub
mov
outsb
mov
idivb
cli
shll
adc
xor
xor
and
pushf
mov
lret
sub
and
sbb
mov
fstps
cmp
inc
out
frstor
sbb
jmp
movsb
and
pop
adc
xor
jae
pop
sub
xchg
inc
inc
and
cmp
mov
les
and
adcb
push
rclb
ds
mov
in
mov
imul
sbb
jnp
jp
or
add
mov
stc
or
mov
mov
xlat
xchg
or
or
outsb
sarb
jmp
mov
xlat
xchg
adc
adc
pop
loop
mov
cmp
xlat
xchg
adc
adc
loope
in
mov
mov
xchg
cmpsb
daa
inc
ret
mov
inc
in
fadds
mov
add
cmp
mov
fmull
adc
xor
sub
mov
stos
das
mov
xchg
cmpsl
sti
xchg
push
rolb
or
adc
rcll
xchg
push
adc
jmp
mov
xor
mov
dec
aas
adc
ds
cmp
mov
inc
rcrb
mov
rcll
xchg
call
cmpsl
es
fwait
push
fiaddl
mov
sub
push
mov
scas
repnz
add
cli
push
sbb
leave
sub
push
dec
or
sbb
cwtl
push
xchg
sbb
jne
mov
movsl
adc
xchg
js
rclb
mov
jb
sub
sub
popf
outsl
xor
loopne
sbb
push
lds
adc
or
fmuls
popf
aam
loope
pop
call
push
adc
push
push
and
aas
inc
adc
aam
inc
divb
dec
mov
and
inc
inc
andb
sub
adc
push
jl
sub
or
lcall
or
andb
inc
or
out
outsb
sbb
cmp
mov
add
jb
sti
and
lcall
fcoms
aaa
aam
xchg
icebp
aad
enter
sub
movsl
das
mov
cwtl
jle
iret
jb
add
test
dec
adc
pop
pusha
repz
sub
mov
sub
movsb
cmpl
sbb
push
xor
xor
sbb
lea
inc
rorl
add
cs
push
ret
fs
xor
cmpsb
xchg
add
inc
mov
inc
and
dec
lcall
adc
mov
nop
jmp
or
or
inc
aas
test
cli
inc
adc
popa
sub
xchg
fs
cmp
mov
mov
or
neg
adc
xor
add
jne
nop
leave
pop
cmpb
pop
adc
inc
or
adc
mov
inc
rclb
inc
add
add
lock
bound
adc
cwtl
aas
mov
movl
rorb
mov
jns
mov
jnp
aas
xor
sti
push
ss
sar
push
push
es
lea
sub
adc
mov
roll
inc
jg
push
jmp
jl
stc
das
jb
jne
daa
push
inc
out
sbb
push
jo
xchg
xchg
add
or
jno
pop
or
mov
inc
or
dec
cmp
push
or
push
stos
and
pop
add
mov
lahf
shll
jmp
cmpsl
int
or
add
es
pop
inc
std
ss
in
xchg
and
add
pop
jg
and
xchg
add
aas
fsub
push
insb
nop
fs
jo
mov
jmp
lods
inc
cld
pop
dec
mov
jl
shlb
nop
jnp
push
inc
pop
insb
nop
cli
add
shr
lret
aas
ja
add
jmp
dec
out
aas
mov
and
gs
push
xor
adc
mov
and
pusha
loop
sbb
jge
int
xor
mov
outsb
test
nop
fistpl
mov
sub
lea
push
sbb
xchg
loop
or
jns
and
push
jg
add
test
cmp
adc
cmp
xchg
mov
je
test
fnstcw
and
dec
cmp
and
or
pushl
xor
push
fucom
xor
lea
push
mov
insl
test
mov
int3
xchg
call
jne
mov
jmp
mov
mov
inc
xchg
test
ucomiss
xchg
test
xchg
jns
xchg
inc
inc
enter
js
xchg
add
aam
jno
jne
sbb
push
gs
or
sub
out
pusha
lea
push
cmpsl
icebp
xchg
and
mov
add
jge
push
movsl
adc
sbb
adc
jno
mov
jae
nop
mov
cs
and
jl
call
xor
call
int
jns
pop
cmpsb
jge
sub
push
push
fbld
ss
or
mov
fmull
cmp
jae
mov
jne
push
pop
inc
push
andb
inc
dec
mov
out
decl
jbe
sub
xchg
xor
test
mov
push
ret
dec
andb
push
fstl
lods
xchg
and
cwtl
andl
add
and
push
int
loop
lods
popa
jo
les
xchg
adc
call
sbb
lods
or
sbb
shll
movsl
sbb
sub
scas
dec
mov
shr
sub
arpl
mov
push
jecxz
dec
jl
adc
mov
add
lods
test
repnz
push
lea
cs
add
ja
and
ret
push
test
jl
not
andl
movsl
or
pop
and
popa
jg
leave
jl
mov
xchg
pop
xor
or
mov
stc
dec
sbb
pop
outsb
dec
xor
call
sar
sub
xchg
lock
leave
fidivs
lea
shl
arpl
dec
pop
sub
ret
fimull
inc
sub
mov
xchg
adc
push
adc
adc
push
lret
sbb
das
inc
sub
cmp
mov
ds
cmc
inc
mov
sbb
push
sbb
adc
adc
dec
push
out
push
add
push
push
cmp
and
pop
fdivs
adc
daa
mov
sub
gs
inc
js
addr16
sti
call
fsubs
sti
cmc
or
pop
mov
das
xchg
dec
aam
jmp
dec
push
aad
add
mov
ja
adc
mov
pop
and
fcoms
mov
pop
inc
leave
xor
mov
add
roll
sbb
inc
jne
push
les
and
push
sub
inc
out
jg
or
fldenv
dec
or
sub
add
push
das
cmp
adc
xor
mov
cltd
and
xor
sub
jns
daa
push
mov
mov
fiadds
jb
mov
inc
hlt
push
enter
cmp
popa
fsub
mov
mov
inc
fsubrl
sub
dec
das
cmpsb
daa
movsb
and
je
mov
mov
ja
test
repnz
push
pop
jle
sbb
sbb
negl
je
push
sbb
test
ret
mov
mov
sarl
and
push
pop
push
push
test
pop
test
lds
inc
push
add
add
push
fildl
inc
test
xchg
shrb
mov
aaa
push
push
scas
push
sbb
add
inc
add
add
lahf
jmp
push
mov
out
in
rolb
and
test
scas
pop
sbb
inc
add
or
test
scas
push
add
mov
xchg
popl
lret
sub
aas
jl
les
xchg
sbb
or
jno
jmp
push
xor
cwtl
int3
add
jmp
mov
sub
fs
adc
dec
push
lock
and
fildl
sbb
push
mov
pop
add
and
and
pusha
cmpsb
pushf
adc
cmp
pusha
orl
mov
movsb
int
and
imul
scas
nop
or
sarb
add
mov
cs
fldcw
dec
testb
push
cwtl
xchg
mov
push
push
push
pop
push
push
lock
push
add
add
mov
push
dec
or
add
sbb
adc
in
push
sbbb
iret
rorb
jg
and
adc
dec
cld
inc
mov
and
loopne
mov
nop
fmul
dec
out
or
sub
nop
dec
mov
inc
sub
jmp
leave
or
icebp
xor
jl
nop
fmull
mov
inc
lret
pop
in
push
inc
push
xchg
sbb
aas
mov
cmpxchg
xchg
dec
clc
sub
mov
shl
add
or
sarl
or
fistl
enter
ds
push
test
ret
adc
mov
or
out
or
fsubr
xchg
testl
mov
jb
push
push
mov
je
repz
cmp
lahf
push
mov
pusha
adc
stc
add
lea
lret
dec
nop
xor
mov
in
es
insb
daa
nop
test
or
or
repnz
repz
roll
mov
mov
stc
cmp
sub
mov
jle
adc
dec
pop
es
adc
xor
xor
inc
icebp
inc
push
inc
push
mov
out
cmp
lea
cmp
mov
xchg
shrl
adc
loope
jge
dec
repnz
xor
cmpsb
or
push
dec
mov
jns
sbb
sub
fucomi
push
cmpsb
ds
ljmp
and
or
mov
cmp
pop
dec
jmp
dec
lods
inc
and
cwtl
inc
sbb
jge
call
out
aad
ds
js
pop
rolb
loope
push
insl
mov
push
clc
jno
or
loope
or
testl
cmpsb
cwtl
inc
add
test
fldl
ficomps
or
or
adc
xor
xor
cmp
mov
mov
sub
xor
xor
dec
jmp
cmp
sbb
fsub
adc
cmp
jb
mov
jnp
adc
js
inc
jg
negl
cmp
jmp
cmp
in
or
add
add
cmp
jae
mov
imull
jb
dec
push
push
pusha
loop
or
push
adc
call
aas
dec
xchg
dec
and
hlt
and
cmovp
pop
mov
adc
adc
pop
and
nop
or
sti
inc
push
mov
inc
pusha
and
jne
or
pop
mov
mov
cmp
sbb
adcb
adc
fiaddl
xor
xor
sbb
mov
and
inc
aam
mov
mov
jmp
into
out
xor
push
push
nop
mov
cmp
pop
adc
dec
loope
jno
roll
push
add
jge
push
mov
add
jbe
lcall
sub
jb
cmp
inc
out
xor
or
mov
js
push
in
push
inc
and
or
movsl
adc
cmp
mov
testb
dec
fisttps
idivb
cmpsl
xor
aaa
dec
and
or
jo
inc
hlt
enter
or
or
sub
enter
push
xlat
popl
imul
adc
lea
add
loop
bound
xor
sub
push
arpl
xor
adc
pop
and
pop
leave
sbb
in
push
or
dec
sbb
sbb
add
pop
adc
mov
fists
mov
imul
out
jo
and
pop
fs
and
or
and
adc
and
xor
push
xor
shl
push
sbb
nop
or
inc
mov
pop
add
lahf
in
dec
and
or
add
leave
lea
rcll
adc
adc
jne
push
movb
fs
cmp
into
jl
repz
xor
sbb
inc
add
sbb
jne
sbb
sbb
pop
xlat
push
pusha
loop
pop
outsl
shr
adc
cmp
fadd
cwtl
cld
push
loopne
in
out
ret
inc
push
mov
rcrl
in
adc
push
push
or
cmp
je
inc
scas
aaa
aas
jne
xor
jmp
cmc
mov
scas
out
imul
sub
adc
sar
pop
or
xor
out
sub
adc
sbb
sub
scas
xchg
sbb
inc
cmp
jge
mov
test
adc
clc
jl
xor
xor
push
jmp
mov
adc
add
inc
mov
adc
add
popf
cmp
jl
or
jp
add
mov
mov
xchg
sub
test
data16
inc
push
or
rorb
and
rcl
adc
or
cmp
add
push
cli
arpl
fs
hlt
aad
mov
mov
insb
adcl
int3
lds
xchg
inc
and
add
sbb
cmpsl
cmpsb
outsl
mov
push
popa
sarl
xor
xor
push
out
sub
xchg
push
je
dec
add
or
mov
sub
inc
fs
push
in
push
jo
dec
repnz
inc
push
mov
jb
add
test
cmpb
or
sub
into
imul
sar
popf
movsl
and
xchg
adc
or
in
jmp
rcl
mov
pop
shr
push
rclb
or
xor
dec
sbb
es
adc
stc
xchg
push
popf
rorb
jbe
and
cld
stos
and
inc
add
add
les
loopne
sub
mov
fs
pop
xchg
mov
insb
and
add
mov
fnstcw
jbe
fcmovnu
push
cs
std
push
or
cmp
das
add
add
adc
out
sbb
ja
rcll
mov
sbb
stc
or
sbb
sbb
xchg
and
xchg
xchg
or
fdivs
xor
push
push
nop
int
call
push
call
sbb
loopne
loope
fadds
mov
xchg
dec
decb
push
adc
cmovo
sub
xchg
adc
sbbl
lcall
orb
xor
add
shll
xchg
test
push
and
push
adc
fsubl
inc
loopne
or
mov
sbb
push
stos
xchg
push
jecxz
fisubs
mov
pushl
dec
cmp
mov
jo
sbb
sbb
cltd
xor
icebp
lret
sub
nop
dec
or
pop
imul
loop,pt
add
xor
pop
cmp
push
xchg
cmp
adc
ret
push
push
shll
sub
inc
xor
push
push
xchg
leave
push
dec
jne
xor
sbb
shlb
pop
gs
and
cmc
inc
mov
or
rcll
push
jecxz
mov
or
sbb
push
xlat
jl
pop
sub
sbb
push
fwait
bound
lock
push
xchg
daa
mov
push
mov
jg
jp
stos
comiss
inc
test
or
push
and
pop
vpaddsw
xchg
mov
sbb
aad
cld
sbb
or
js
jo
xor
push
dec
or
push
push
fldenv
sub
xchg
ljmp
jl
cmovl
mov
and
mulb
cmp
inc
fwait
push
cltd
or
adc
testb
add
lcall
or
mov
dec
fs
push
movsl
imul
or
or
lock
sbb
or
push
mov
dec
popa
pop
push
cmp
cli
clc
and
sahf
and
sub
movsb
pop
add
push
push
outsl
mov
adc
and
pop
inc
andb
or
popf
cld
jns
pusha
or
or
incb
and
sub
and
or
pushf
data16
dec
adc
sub
push
pop
pop
xchg
add
pusha
mov
push
pop
filds
adcb
push
xchg
scas
adc
dec
adc
inc
out
movsl
jb
out
insl
and
daa
das
mov
lcall
mov
sub
push
add
sbb
movl
je
js
data16
push
out
sub
stos
mov
xchg
icebp
adc
movsl
inc
lods
pop
pop
in
add
pop
xchg
sbb
mov
or
rep
mov
xchg
imul
push
cmp
imulb
push
or
and
outsb
pusha
cmpsl
es
insb
inc
lcall
dec
push
push
push
xchg
test
inc
jns
sti
cmpsb
jnp
adc
and
or
push
stos
aaa
out
fcmovnbe
ds
pop
add
or
cmp
mov
lods
or
adc
es
fcoms
insb
push
or
sub
jb
dec
jne
pop
pop
mov
dec
ret
xchg
sbb
push
cwtl
cmp
mov
test
push
sub
shlb
or
dec
jmp
sub
xor
cltd
inc
pop
mov
aaa
ss
mov
adc
dec
dec
sbb
lds
divb
lea
jnp
pop
sbb
pop
push
les
xlat
popl
push
pop
and
xchg
dec
dec
ret
or
push
xchg
repnz
popf
out
mov
lea
mov
dec
aas
shll
add
std
jae
mov
dec
mov
dec
aaa
or
mov
hlt
inc
cmp
xchg
sar
rcrb
push
xor
lods
addb
jo
lret
add
lds
sbb
bound
clc
movsl
and
xlat
les
and
adc
ret
ficompl
mov
cmp
push
insb
cld
xor
or
call
les
sbb
dec
push
push
lret
pop
mov
cmp
cmp
and
or
lea
inc
xor
cmp
push
mov
jb
lahf
dec
add
rcrb
or
cmp
xchg
add
jbe
mov
repz
popf
test
iret
je
sbb
mov
xchg
push
mov
decb
inc
xor
lea
repz
jbe
add
mov
fsubrl
ljmp
popa
push
cs
fcompl
aad
jecxz
pop
out
incb
push
cmp
lea
mov
repnz
sub
inc
adc
fsts
pop
add
xor
and
push
xchg
push
in
mov
inc
inc
and
push
imul
add
sub
mov
mov
inc
sub
and
leave
jno
dec
inc
fbstp
ret
out
sub
pop
cld
cli
leave
pop
sbb
dec
add
mov
mov
sub
outsb
mov
xchg
sub
sub
mov
push
push
jmp
pop
and
adc
andb
xchg
inc
adc
add
cpuid
sub
pop
mov
in
jl
push
xor
les
mov
and
and
inc
mov
sub
addr16
movsb
pushf
push
lods
and
sbb
lds
or
mov
dec
push
inc
push
or
xor
clc
mov
cmp
adc
adc
jg
push
and
sbb
test
icebp
mov
inc
ret
mov
dec
and
mov
sub
cwtl
insl
push
pushf
sub
lds
cwtl
repz
ljmp
leave
xor
fsubl
mov
fistl
in
pop
int
xchg
sub
sub
cmp
jne
and
cmp
adc
push
cmp
mov
add
orb
push
jl
mov
mov
std
sbb
sub
sahf
xor
push
xchg
adc
push
or
test
out
adc
or
push
and
jb
pop
mov
cmp
xchg
and
cmp
add
cmpw
mov
pop
mov
sbb
vpunpckhbw
mov
or
push
push
xor
add
cld
test
gs
ja
es
mov
sbb
add
add
scas
fistpl
shl
push
sub
add
push
add
movl
divb
add
adc
mov
add
or
stos
jecxz
cltd
mov
movsl
sbb
xor
ret
fdivl
push
mov
test
mov
push
test
sub
or
sbb
scas
lods
mov
in
cmpsl
push
fsubrl
fbld
or
mov
shll
adc
sub
nop
insb
movsl
and
add
test
mov
cmp
cmpsl
pop
or
sub
sub
rcr
lea
je
mov
mov
jne
cmp
mov
sbb
sub
shrl
out
push
outsl
sub
and
or
xor
cwtl
imul
xor
dec
xor
or
push
in
and
xlat
scas
imul
sub
adcl
jecxz
xchg
in
dec
cmp
adc
adc
inc
test
jbe
leave
pop
inc
sub
or
jbe
sbb
cmpsb
sahf
mov
or
pop
sub
das
dec
fldenv
or
mov
mov
rcll
pop
cli
mov
shll
jb
add
hlt
mov
leave
inc
maskmovq
add
ret
daa
pop
and
cmpsl
bound
mov
and
je
inc
inc
jne
mov
fsts
rclb
out
xor
aam
adc
and
in
enter
pop
mov
sub
xchg
push
pop
sub
sti
dec
xchg
mov
xchg
lret
test
enter
insb
pop
repz
ja
jne
pop
mov
cmp
js
test
add
or
sub
or
int3
push
mov
test
sub
and
loopne
repz
cld
test
sub
data16
rorl
push
insl
leave
loopne
push
pop
push
push
in
rcll
xchg
mov
frstor
sub
xor
fs
dec
inc
or
into
dec
je
mov
aad
push
sub
add
and
dec
adc
xchg
cli
dec
push
and
iret
mov
pop
and
aas
and
cmp
xchg
cmp
stos
pop
adc
sub
mov
jnp
jnp
mov
cmp
pop
out
or
xchg
shll
add
mov
jnp
adc
repnz
jno
adc
mov
in
lock
in
aaa
mov
insl
stos
adc
cs
cmp
xor
push
sub
stc
movsl
mov
dec
jb
mov
xchg
test
or
stos
jb
fsub
test
sub
push
add
and
fsubrs
jmp
int3
jns
add
ds
jp
add
mov
mov
pop
cmc
repz
pop
cld
mov
xor
cld
cmp
dec
jne
or
movsb
add
jle
inc
cmp
add
push
adc
loopne
mov
mov
or
dec
mov
cwtl
xchg
rclb
push
movsb
push
pop
lea
xchg
movsb
dec
pop
cmp
push
xor
add
sub
pop
mov
xchg
shlb
mov
mov
sbb
adc
jo
mov
cwtl
dec
test
push
mov
inc
xchg
or
mov
outsb
push
lock
andb
dec
push
push
mov
call
mov
mov
mov
repnz
enter
mov
jl
xchg
and
cmp
or
shll
jmp
sti
lock
pusha
pop
pop
adc
or
mov
push
ja
add
mov
cmp
sbb
cmp
sahf
push
inc
jne
lea
hlt
fildl
inc
and
lods
les
mov
in
and
mov
jne
inc
dec
test
jge
push
or
lcall
iret
push
xchg
popf
enter
mov
pop
and
adc
pop
jo
jns
adc
insl
test
dec
fiadds
jmp
cmp
aam
and
push
adc
cld
xor
das
inc
inc
popa
cmp
and
mov
adc
push
mov
xor
pushf
ljmp
push
popa
jo
sbb
in
push
fcmovnu
sub
xchg
shl
or
clc
cmp
dec
mov
xlat
and
or
sbb
jne
mov
sub
inc
dec
aam
jl
outsb
mulb
xchg
test
adc
jbe,pn
inc
xchg
add
stc
fisubs
in
sbb
scas
pmaxub
add
pop
das
ficomps
mov
sub
pop
mov
lods
and
adc
movl
push
adc
fwait
sbb
or
pop
sub
add
push
or
adc
test
add
mov
fisubrs
mov
sbb
divb
enter
push
mov
bound
dec
vmovaps
mov
inc
movsb
pop
jecxz,pt
test
out
iret
cld
lods
push
xchg
dec
orb
add
sub
ret
sbb
fisttps
inc
shll
and
jge
roll
insb
mov
push
sbb
cmovb
add
mov
inc
loopne
stos
loop
loopne
mov
lods
adc
push
mov
out
mov
ds
xor
rcrb
inc
in
mov
push
and
pushf
xor
mov
push
pop
xchg
out
dec
push
adc
push
aam
imul
sub
and
pop
mov
push
mov
inc
shlb
sbb
adc
dec
mov
jg
mov
incb
and
cmp
add
test
xchg
mov
dec
push
xor
data16
xor
push
and
rolb
sbb
mov
xchg
lahf
adc
inc
subb
push
mov
mov
shrl
enter
pusha
and
inc
aam
xor
mov
std
mov
cld
lcall
cmp
xor
bound
jbe
and
push
and
jb
cmpsb
sbb
adc
jae
int3
arpl
pusha
adc
clc
xor
int3
inc
and
fisubrl
dec
inc
dec
loopne
pop
sbbb
roll
lea
cmp
xchg
or
jo
rorl
mov
idivb
pusha
push
push
mov
or
push
add
rcrl
mov
mov
xor
lock
add
dec
xchg
cli
xchg
in
in
pop
dec
xor
stos
or
or
nop
cmp
adc
cmpsb
cltd
jmp
and
out
mov
js
lods
lea
push
inc
push
add
xchg
cmp
pop
test
and
jbe
mov
jbe
in
test
mov
adc
xchg
stc
or
cmp
loopne
mov
mov
jbe
sub
or
push
inc
adc
adc
addb
or
mov
push
lahf
adc
xor
stos
push
test
stos
jp
push
unpcklps
xorb
and
fistl
mov
les
or
mov
push
mov
enter
mov
sbb
mov
pusha
sub
std
repnz
and
and
sti
and
push
roll
popa
add
test
cmc
jno
sbb
adc
call
enter
pushf
inc
jbe
pushf
pop
fsubrp
js
repnz
or
mov
mov
dec
js
and
jmp
mov
push
mov
test
xchg
mov
sbbb
sbb
sti
pusha
test
mov
or
subl
mov
and
cmp
cmp
add
test
jle
sbb
push
adcb
arpl
mov
mov
stos
push
cli
hlt
or
sbb
and
xor
xor
lds
test
add
cld
xchg
inc
adc
jmp
sbb
nop
push
loop
xchg
adc
shrb
inc
or
or
add
adc
adc
mov
or
pop
lock
daa
test
pusha
mov
push
dec
andb
push
or
movsb
jns
subb
clc
jnp
popa
mov
jns
push
and
roll
push
and
jns
cwtl
sub
xorl
lea
push
lahf
jb
fwait
out
jo
jo
movsb
push
mov
fcompl
cmp
jae
je
fwait
mov
adc
stc
sbb
pop
mov
jne
pop
pusha
mov
cwtl
jmp
sbb
sarb
bound
js
pop
ret
je
dec
lcall
push
push
cwtl
pop
lahf
mov
in
dec
sub
jle
insb
sub
or
fs
push
movsb
dec
fcompl
xor
dec
pop
cmp
nop
pop
int3
xorl
repz
sbb
adc
dec
add
add
xor
je
enter
and
add
lods
add
sbb
mov
fcmovb
or
or
mov
adc
adc
and
and
inc
repz
lahf
testl
movsl
push
or
add
add
add
inc
add
add
add
pop
sub
test
inc
or
or
or
les
mov
and
dec
ljmp
bound
add
add
add
lock
pop
inc
les
xor
lods
add
sub
cwtl
iret
dec
aad
push
sub
popa
inc
push
filds
sarb
push
mov
push
pop
xor
cs
mov
ret
das
inc
push
push
mov
aas
inc
sub
jg
adc
or
mov
jl
sub
xor
lods
mov
add
test
das
scas
daa
or
mov
pusha
scas
xchg
adc
popf
add
xchg
mov
or
decl
cmc
sbb
and
mov
jnp
nop
lea
out
cmp
push
mov
mov
xor
mov
push
push
sti
aas
jge
fiaddl
jbe
jne
nop
adc
lcall
sbb
in
or
push
in
pusha
mov
dec
sub
mov
and
sbb
sbb
testl
inc
jne
outsl
enter
insl
sbb
insl
sbb
mov
pop
xor
adc
add
jmp
ljmp
lahf
sub
and
dec
sbb
decl
jb
mov
and
inc
inc
scas
jns
mov
adc
das
mov
dec
test
cmp
out
jne
lea
scas
cmp
jne
cmp
inc
and
hlt
xor
dec
pop
pop
pop
inc
add
push
popa
xor
pop
enter
aas
test
and
ret
or
inc
mov
int
xchg
mov
sub
enter
add
nop
and
sahf
je
sub
insl
fisubs
pop
dec
lcall
push
inc
mov
xor
mov
push
dec
pop
and
mov
mov
fiadds
scas
adc
loopne
mov
mov
xchg
pop
inc
test
cld
das
mov
xchg
mov
das
push
sbb
dec
sbb
pop
dec
cltd
fsts
sbb
jno
fs
mov
in
sbb
inc
sbb
and
cmpsl
fistps
adc
in
rorl
pop
movsb
pop
sub
sub
lock
fadd
and
and
fs
cli
or
mov
icebp
fmuls
dec
nop
mov
cs
pop
push
cmp
je
mov
cmova
or
ljmp
loop
test
mov
call
cmpb
sbb
adc
nop
and
cs
and
movsl
loope
in
mov
pop
inc
or
stos
fldcw
stc
add
sbb
push
outsl
mov
jle
xchg
lock
lea
push
loopne
adc
dec
and
test
xor
int3
pop
adc
sahf
loope
sti
ret
dec
mov
mov
lods
cmp
popf
fidivrl
insl
dec
push
sbb
sti
dec
enter
push
cmp
push
das
pop
imul
fsub
aaa
or
in
and
in
fsub
ret
xor
ret
adc
mov
jno
push
xor
aas
outsl
je
mulb
das
pop
and
jmp
hlt
sarl
lods
pop
and
enter
lcall
xor
cmp
je
push
push
enter
mov
push
push
adc
cmp
bound
jne
dec
les
mov
push
inc
fiadds
fsubrs
push
cmpsl
stc
push
inc
fsubl
pusha
adc
adc
mov
dec
loopne
sub
clc
add
mov
push
sbb
mov
jo
push
push
xor
lods
cmpsb
pop
and
je
inc
xor
rcr
fcmovbe
dec
loopne
push
in
testb
mov
test
add
leave
adcb
push
ffree
sbb
sbbl
sbb
adc
in
mov
stc
push
add
aam
cmp
mov
out
dec
jb
sub
pop
add
cmp
inc
or
pop
ss
sar
pop
loope
cmpb
dec
mov
inc
mov
imul
sar
stos
fdivrs
dec
insl
mov
fstps
jbe
pusha
fisttpll
mov
or
mov
push
mov
outsl
lea
dec
aam
push
adc
cli
jge
int
inc
inc
mov
jmp
xor
pop
fld
lea
decb
ljmp
jl
ljmp
mov
inc
pop
sub
jo
pop
xchg
sbb
sbb
push
mov
push
stos
cltd
outsb
pop
adcb
fcoms
pop
aas
int3
inc
imul
add
ja
mov
sub
imul
in
enter
adc
adc
mov
lret
xchg
push
sub
push
int3
mov
inc
push
mov
and
test
or
jg
stos
mov
adc
adc
push
int3
loopne
push
dec
and
adc
or
sarb
sbb
bound
jg
pop
or
cmc
mov
cwtl
jo
jno
mov
jno
push
adcb
je
push
sbb
dec
jae
dec
mov
nop
sti
inc
mov
mov
and
add
popf
aam
aam
and
adc
mov
mov
scas
push
xchg
add
mov
cmp
mov
pop
test
jne
mov
xchg
jbe
mov
push
fimull
cmp
ret
lods
or
dec
bound
xlat
gs
jge
leave
incb
lea
mov
sub
push
loopne
add
and
fidivl
jle
mov
mov
test
dec
ret
dec
xchg
push
std
cmp
call
hlt
scas
pop
and
scas
inc
push
decb
scas
adcb
cmp
mov
lods
sbb
and
adc
out
insb
mov
adc
mov
inc
jmp
pop
sbb
push
hlt
pop
adc
add
pop
scas
cltd
bound
mov
out
shr
das
pusha
cmpb
mov
mull
add
out
ljmp
mov
sub
dec
mov
push
push
js
mov
gs
rorl
mov
cmc
in
cs
imul
xchg
cli
mov
mov
cs
push
adc
in
mov
jmp
cmp
push
pop
push
popf
sbb
test
jmp
mov
ja
mov
cmpsb
in
dec
sub
fmul
cmp
cmp
aas
mov
std
cmpsl
push
adc
or
test
int3
inc
fdivrp
and
nop
jne
jne
mov
daa
dec
mov
xchg
mov
jge
lret
jle
scas
mov
mov
jb
mov
lret
or
sti
lret
adcl
jmp
fmull
insb
cmp
sbb
test
and
push
ljmp
hlt
fistpll
rcll
and
push
xor
mov
cmpsl
mov
js
adc
push
call
jmp
push
sbb
je
jae
push
or
sub
mov
leave
pop
dec
hlt
cmp
jg
push
ja
push
cmp
inc
xor
and
mov
cmp
sbb
and
js
jle
push
push
bound
push
mov
fmull
mov
push
sbb
xchg
lret
push
bound
enter
xchg
les
mov
push
or
or
pop
jnp
mov
jg
hlt
push
loope
repz
or
rcll
imul
fstps
das
cmc
add
mov
add
cmp
jae
jnp
in
sbb
xlat
rcrb
inc
and
std
jb,pt
mov
inc
mov
sub
and
icebp
jo
lea
sti
in
and
mov
hlt
adc
cmp
loop
push
pop
ss
xor
push
rorb
fidivl
test
or
sbb
pop
sub
jae
cld
dec
mov
shlb
ret
jne
test
xchg
hlt
jbe
dec
and
popa
mov
cs
sub
adc
xchg
push
xor
mov
loope
add
cmp
fnstcw
loopne,pn
cmp
rorl
add
dec
jo
xchg
mov
imul
fwait
je
dec
inc
pop
enter
scas
out
sti
dec
jl
adc
fbstp
inc
mov
in
dec
xchg
jne
adc
jecxz
in
mov
sahf
dec
or
push
inc
and
inc
and
jo
imul
and
lea
shl
add
stc
push
lret
movsb
das
js
subl
sub
daa
inc
push
mov
cmp
shrb
filds
pop
hlt
pop
iret
dec
mov
shll
sarb
pop
fs
adc
mov
shl
je
cmp
out
cmp
sbb
mov
nop
sahf
dec
xor
push
inc
pop
ret
or
dec
jne
push
xor
dec
mov
push
sbb
pop
sbb
pop
adc
jecxz
sahf
sbb
insl
sub
jbe
pop
jbe
jno
out
sub
out
xor
inc
ret
add
mov
lock
enter
jbe
jae
loope
push
mov
clc
les
xlat
sub
cli
rcrb
fldcw
push
dec
adcl
mov
xor
jmp
pop
pop
outsl
or
cmpl
xchg
mov
sub
mov
cwtl
pop
mov
test
mov
xchg
mov
cmp
and
mov
dec
bound
mov
xor
jmp
icebp
xor
adc
mov
aad
roll
adc
pop
add
sub
sub
scas
lea
adc
pop
scas
ret
jb
mov
xchg
lea
and
adc
push
dec
and
xor
cmp
and
cmpsl
lea
xchg
jns
es
fstps
mov
inc
mov
sbbb
ja
mov
dec
adc
mov
push
cmp
push
push
fidivs
dec
pusha
push
bound
pop
ljmp
mov
dec
push
push
and
mov
push
test
mov
sub
mov
fadds
inc
dec
adc
cmp
pushf
ss
jo
cli
cmp
push
test
cmc
cltd
or
push
push
and
xor
xor
cmp
adc
dec
cld
repnz
and
xor
pusha
fistps
sbb
clc
push
test
dec
mov
xchg
fildll
cmpb
xchg
daa
push
xor
xchg
and
adc
adc
jge
and
inc
fstl
cld
xor
and
xor
stc
aad
fsts
subb
jns
xor
dec
sub
dec
mov
aam
outsl
inc
adc
dec
cmc
je
push
idivb
pop
mov
dec
push
insb
push
mov
mov
adc
shll
leave
mov
mov
lods
push
push
out
pop
inc
fmulp
sub
push
xchg
pop
dec
inc
lods
ja
loopne
iret
or
fs
ljmp
roll
push
lods
movsl
or
or
sub
add
adc
loopne
jbe
sub
push
mov
or
data16
xchg
arpl
mov
dec
shlb
adc
xchg
cmpb
xor
or
es
pushf
adcb
xchg
test
adc
daa
sbb
xchg
adc
add
or
xchg
sbb
sbb
enter
add
call
adc
push
in
stos
lahf
popf
xor
pop
sub
jne
dec
pop
nop
and
push
jnp
pop
popa
jns
add
pop
nop
sub
sbb
pushf
icebp
gs
and
pop
dec
mov
outsl
jo
fiaddl
imul
mov
push
dec
out
push
and
cltd
jg
mov
mov
pop
push
or
inc
push
and
sub
push
test
addr16
or
dec
adc
or
or
push
push
xchg
push
pop
pop
xor
lea
mov
mov
inc
imul
add
ret
and
inc
dec
sbb
or
dec
fcoms
push
fs
xor
jecxz
je
adc
nop
adc
adc
nop
sbb
or
sbb
or
pop
nop
and
pop
push
lods
cld
arpl
mov
add
adc
mov
jp
jae
pop
push
pop
push
pop
repnz
or
add
cmp
nop
xchg
inc
add
sbb
xor
cmovns
in
mov
xor
sbb
fs
int3
out
scas
sub
sbb
sbb
in
dec
sub
test
jbe
dec
cmp
dec
nop
and
and
lods
inc
call
or
sub
and
jns
add
outsl
fimuls
inc
cmp
mov
fists
or
adc
fdivl
mov
push
or
adc
dec
or
test
jle
push
loopne
push
push
push
test
jo
cmp
mov
sub
add
sub
inc
or
insl
add
daa
xchg
push
add
fdivr
scas
adc
xor
jl
xchg
xor
pop
test
mov
cs
dec
or
popa
sbb
pop
pop
push
jo
ljmp
andl
pop
cmc
fs
dec
jne
dec
xchg
push
cmp
or
cmp
adc
cmp
add
inc
mov
data16
pop
call
bsf
add
cmpb
jne
sarb
bnd
inc
jmp
lock
testl
xchg
xor
push
mov
add
xchg
ret
xor
xor
test
test
pop
pop
fisubrs
mov
jg
and
lahf
stc
rclb
jecxz
fistpl
inc
mov
xchg
mov
ret
cmp
clc
or
jb
mov
lods
je
in
das
and
sub
mov
inc
cwtl
xor
mov
jge
icebp
pop
inc
xor
inc
dec
ret
repz
mov
fs
popf
js
ss
push
jae
sub
mov
inc
ret
sbb
icebp
push
xchg
push
sbb
mov
jne
jl
xor
imull
dec
enter
data16
jle
xor
test
dec
loopne
jne
mov
mov
lcall
xor
push
mov
cmpsl
and
addb
movsl
sbb
lahf
aam
into
dec
leave
shr
xor
jae
add
call
jle
push
fdivrs
dec
pop
mov
js
dec
add
push
jg
or
neg
jge
inc
cmp
sarl
push
fs
or
das
jge
adc
dec
xor
out
outsl
dec
imul
test
test
pop
pop
fsubs
in
dec
pop
dec
mov
cmp
adc
mov
sbb
push
movsl
dec
addr16
add
sub
adc
xor
sub
or
mov
inc
push
dec
loope
das
push
movl
adc
mov
or
push
nop
sbb
mov
lret
adc
popf
adc
int3
outsl
jo
inc
xchg
shr
or
lds
xchg
push
repnz
adc
test
test
inc
add
adc
inc
dec
push
fnsave
fildl
and
adc
jbe
fucomi
mov
dec
jnp
xor
mov
repnz
jge
les
inc
add
or
sub
paddsw
shlb
cmp
cmp
adc
aad
or
or
inc
or
leave
pop
repz
mov
in
push
inc
mov
dec
movsb
leave
xchg
jb
lods
adc
xchg
sahf
pop
mov
and
test
je
ds
pop
int3
scas
push
cmpsl
out
shr
cli
inc
cs
xlat
jmp
jmp
pop
ds
roll
jbe
imulb
pop
popf
xchg
nop
push
or
dec
mov
and
fnstcw
loope
movsb
or
mov
mov
les
and
jno
cmp
mov
sub
or
cmp
add
or
cmp
sub
add
insb
inc
jmp
pushf
pop
nop
into
adc
pop
sub
movsb
sub
adc
adc
mov
cmp
test
mov
dec
inc
jb
ret
jp
outsl
sbb
jb
sti
sub
add
lsl
out
rorl
cmp
scas
add
leave
pop
or
repz
fadd
xchg
or
and
and
xchg
inc
je
pop
ret
mov
in
pop
pop
add
push
loop
push
inc
lcall
divps
add
and
mov
add
inc
jmp
sub
fiaddl
stc
add
add
adc
or
xor
sbb
push
mov
adc
xor
shlb
jmp
iret
cmp
ret
jne
add
fcomps
fwait
and
addb
call
mov
inc
cmp
jne
sub
in
jg
adc
cs
in
or
or
andb
jmp
dec
push
push
adc
pushl
jecxz
cmp
mov
xor
nop
pop
or
repnz
jge
jae
cmp
cld
shlb
cltd
mov
dec
das
sub
inc
sbb
add
inc
xchg
sti
inc
xor
addl
enter
xchg
or
mov
cltd
cwtl
pop
push
jne,pt
push
sub
ficompl
xor
xchg
mov
add
mov
inc
jo
das
and
pop
flds
jne
cmp
push
cld
pop
xlat
into
cli
mov
fwait
testl
lds
adc
imul
sbb
xor
andl
ret
xor
imul
cmp
jbe
sub
xor
dec
iret
xor
nop
sti
push
pop
add
jl
lcall
jmp
ret
popl
jmp
out
adc
jns
imul
xlat
cmp
test
add
mov
xchg
xchg
repnz
fs
push
inc
clc
xor
or
cli
dec
aaa
int3
das
push
mov
ds
xor
or
insl
and
notl
in
jne
clc
inc
mov
mov
inc
jae
jnp
xchg
ret
adc
mov
hlt
inc
ds
push
cs
push
sbb
leave
test
addl
inc
je
mov
push
movsb
or
sub
adc
pop
add
lods
or
jns
jnp
sbb
das
leave
sub
stc
adc
pop
inc
pop
stos
pop
xchg
xchg
pop
push
scas
dec
inc
sub
sbb
cmp
sbb
inc
loop
fcoms
xchg
dec
inc
pop
cmp
aad
inc
xor
adc
or
and
adc
sarl
insl
cltd
jmp
lahf
leave
insb
out
pop
pop
xchg
inc
sbb
inc
inc
add
or
jp
fildl
fsubs
xchg
and
flds
std
loope
movsb
shlb
and
xor
cli
sbb
sub
add
cld
mov
inc
gs
adc
fwait
xchg
pushf
add
lret
fisttps
sbb
mov
gs
hlt
xor
faddl
das
int
into
mov
lea
loope
mov
stos
lock
clc
mov
leave
push
and
jo
out
movsb
rcl
adc
scas
repnz
test
faddl
sub
sbb
call
gs
hlt
mov
adc
adc
aaa
mov
xor
xchg
sahf
inc
fmul
push
les
cltd
xchg
aam
sub
and
pop
xor
xchg
xchg
int3
enter
je
push
mov
sbb
or
int
int3
gs
ret
cltd
les
fmull
dec
xchg
and
data16
push
and
dec
js
pop
jmp
lods
jge
add
adc
push
adc
add
and
and
pop
or
dec
push
xor
sbb
imul
mov
fs
jmp
and
es
test
jae
ja
inc
pop
lcall
jl
cmp
bound
mov
add
cmp
push
rcrb
dec
or
inc
pop
leave
jne
dec
xor
lret
lds
inc
mov
aam
jb
add
inc
or
add
lock
dec
fisttpl
xchg
and
cltd
icebp
and
jo
int
call
ret
mov
call
imul
lock
test
adc
mov
adc
adc
sbb
inc
mov
add
hlt
fstcw
mov
or
mov
push
fistpll
or
es
push
clc
out
int3
mov
inc
inc
mov
sar
add
push
cmp
jbe
add
jb
sub
inc
and
aad
pop
jb
rep
xchg
lock
mov
mov
add
andl
enter
rcr
stos
adc
fs
adc
xor
or
xor
or
rorl
inc
add
inc
out
or
scas
adc
int3
mov
dec
dec
sub
fimull
sarb
inc
cmpsb
lret
inc
inc
inc
push
inc
sbb
pushf
xchg
or
mov
sub
rorb
and
call
xchg
and
jmp
and
jmp
sbb
cmpsb
scas
inc
add
xchg
clc
inc
or
icebp
xor
or
and
push
inc
or
nop
xchg
sahf
sbb
mov
xchg
mov
sub
je
xor
push
js
jb
and
sub
icebp
push
loope
neg
xchg
data16
lcall
sub
pop
and
sbb
faddl
xchg
loopne
dec
lret
push
adc
cmpsl
movsb
sbb
push
out
and
mov
gs
sub
lods
out
scas
dec
add
push
or
adc
sbb
and
sub
xor
inc
push
push
inc
sbb
and
pop
and
shlb
pop
and
shlb
pop
and
repnz
pusha
cltd
or
mov
mov
mov
adc
mov
push
int3
add
mov
push
or
jge
inc
call
fidivl
insb
mov
inc
sbb
sbb
xor
icebp
jp
sub
shrb
inc
adc
sbb
jmp
sbb
pushf
cmpsl
sbb
shr
popf
fstps
popf
inc
lock
enter
out
shll
push
shlb
jecxz
pop
jbe
dec
lcall
adc
pop
mov
out
inc
dec
push
or
or
and
data16
push
or
jg
mov
loope
rcrl
aaa
sbb
das
or
push
sub
pop
test
in
ss
push
or
mov
sbb
add
lea
sub
inc
add
je
std
sub
inc
sbb
and
xor
scas
jno
inc
jp
push
hlt
lock
cmp
adcl
loopne
ja
mov
sarl
int3
xchg
pop
hlt
cmp
adc
add
xor
fwait
imul
rclb
adc
and
dec
test
pusha
mov
ret
movsb
lahf
dec
sub
add
lock
add
pop
pop
dec
inc
xlat
pop
nop
aaa
adc
call
xor
push
push
push
das
jmp
mov
inc
add
inc
sub
mov
insb
and
sub
push
lock
or
fld
stc
adc
mov
mov
andb
mov
mov
je
push
push
push
sub
sbb
pop
add
push
and
je
movsb
and
cmp
and
push
mov
mov
or
pop
je
adc
cmp
cli
push
adc
push
pop
mov
loope
or
mov
mov
aas
add
mov
hlt
or
test
je
test
inc
sub
add
push
test
or
or
xor
je
movsb
int3
adc
scas
adc
push
pop
fwait
lods
or
loop
andb
scas
mov
test
or
or
imul
dec
div
xor
inc
cmp
stos
adc
add
or
loopne
scas
adc
or
lea
mov
xor
loop
loopne
jns
xor
sbb
shll
fucomip
mov
pusha
imul
lea
inc
lcall
ret
loop
clts
scas
inc
mov
stc
jl
fs
push
mov
rcrl
or
ret
adc
fldpi
shll
adc
adc
push
add
push
js
and
mov
pop
xor
inc
inc
stc
xor
and
iret
cmp
and
sbb
dec
rcrl
pop
out
cmp
mov
add
ret
mov
daa
dec
shl
xchg
es
fsubl
push
inc
aam
xchg
inc
pop
mov
push
std
mov
dec
sbb
test
mov
enter
out
les
data16
adc
mov
jbe
adc
dec
mov
mov
popa
jmp
adc
xchg
or
arpl
data16
test
xor
pop
ret
repz
lahf
jge
imul
cld
test
jmp
adc
push
push
xlat
inc
out
rclb
neg
ljmp
sbb
or
or
pushl
mov
and
cs
mov
shlb
push
mov
add
ds
ds
cmpb
inc
cmp
jne
mov
push
or
cmpl
jmp
mov
subb
jmp
xchg
cmp
inc
call
cmp
jb
xorl
push
movsbl
push
sub
mov
cs
inc
movsl
sub
lret
test
dec
push
adc
inc
mov
cld
int
sub
in
out
rcll
xchg
pop
mov
aas
add
das
adc
inc
lret
add
pop
push
xchg
std
fsubs
xchg
dec
mov
js
sbb
mov
push
stc
sub
fimuls
inc
loop
jecxz
sub
mov
scas
ret
jle
sub
jb
jo
xor
test
lock
sbb
cmp
les
sub
push
pop
mov
adc
xchg
pop
mov
cmp
jge
loope
mov
xchg
punpcklbw
mov
and
adc
mov
push
xchg
adc
shlb
leave
mov
adc
adc
sub
rclb
inc
adc
and
rorl
out
sub
loopne
frstor
shl
and
cmc
push
or
and
stc
repz
aam
dec
aad
ret
cmp
xor
jno
and
or
leave
mov
or
pop
enter
or
shr
xchg
fcmovne
leave
leave
mov
or
xchg
enter
jb
pop
test
inc
or
sbb
andb
in
adc
and
push
pop
sbb
ret
or
inc
movsl
pushf
push
stc
cltd
in
clc
or
add
add
and
xchg
es
or
nop
adc
dec
testb
repz
dec
mov
test
mov
pushf
adc
add
insl
hlt
js
lock
arpl
or
sbb
cmp
inc
lods
movsb
jl
adc
pop
push
loope
mul
shlb
jp
aam
scas
or
dec
pushf
push
fisttpll
insl
jge
dec
push
mov
mov
add
scas
mov
push
sti
cmp
test
jne
cld
sbb
cmp
cmc
int3
aam
lahf
pushf
inc
iret
sub
dec
mov
and
pop
pop
jo
fs
xchg
mov
lea
sbb
push
adc
ja
mov
inc
movsb
add
jmp
push
daa
dec
loope
add
rcr
movzbl
testb
pop
je
call
mov
rolb
add
or
sbb
idiv
enter
dec
or
aaa
fcomps
loope
sub
jne
stos
and
and
and
and
cwtl
inc
push
pop
adc
repz
xchg
adc
mov
push
or
add
adc
xor
movsl
clc
sbb
push
std
sbb
push
sbb
out
iret
add
mov
sub
jo
fmull
adc
push
icebp
and
inc
lock
mov
push
mov
sbb
xchg
push
lock
les
fadds
xchg
rcl
jb
xchg
sbbl
xor
das
sub
lret
bound
loope
lea
jmp
orb
and
ljmp
mov
dec
int
aam
adc
clc
js
push
pop
push
xchg
jge
pop
test
mov
jmp
pshufw
out
sbb
rclb
movsl
jns
sbb
mull
mov
or
mov
inc
or
adc
iret
push
rcr
sub
mov
mov
dec
les
jge
pop
push
pusha
sub
sti
and
or
loopne
mov
in
push
and
dec
mov
test
cmp
mov
cwtl
les
ret
fists
or
dec
clc
bound
pop
inc
adc
and
inc
cld
aam
pop
or
xchg
xchg
adcl
cmp
or
test
push
or
adc
lds
pop
sub
add
and
nop
xorb
inc
add
sub
test
outsb
test
pop
dec
inc
add
div
cmc
sub
mov
mov
out
sbb
jmp
stc
inc
push
faddl
push
clc
or
push
ret
lcall
or
mov
adc
ja
and
add
mov
and
push
ds
mov
push
inc
movb
and
les
aam
js
ret
testb
je
xchg
das
in
sub
mov
or
add
sbb
jbe
adc
jns
gs
xchg
loope
xchg
pop
and
in
adc
adc
sbb
call
test
insb
and
test
inc
add
flds
xor
jne
add
and
add
mov
cmpsb
inc
cmp
and
or
lret
push
inc
hlt
mov
popf
test
clc
xor
mov
mov
xchg
xchg
sti
ror
dec
xor
sbb
out
adc
inc
rolb
and
inc
ror
add
mov
mov
dec
int
bound
push
sub
mov
nop
jp
jns
mov
adc
mov
push
pop
xchg
lock
jle
add
sub
pop
pop
je
or
test
add
sub
xchg
mov
cmp
dec
sub
and
daa
dec
add
aad
lret
push
pop
syscall
sbb
call
out
xor
paddb
lcall
fnstcw
sti
stos
ds
xchg
push
xor
add
cmp
adc
pop
add
fstp
jbe
je
mov
xchg
pmaddwd
es
lahf
or
dec
inc
or
xor
dec
mov
sti
ds
adc
mov
stos
cmp
jbe
and
push
inc
pop
nop
and
pop
mov
adc
lea
sub
fs
fistl
inc
cmc
pop
dec
ret
loop
inc
xor
mov
adc
js
pop
je
mov
ds
xor
and
mov
add
testb
rcl
stos
dec
dec
sbb
dec
adc
je
and
sub
and
pop
mov
adcb
mov
xabort
sbb
add
and
add
inc
dec
and
test
cmp
push
fs
sub
mov
or
pushf
call
add
fcomp
jecxz
cltd
jb
jns
test
or
cmp
sub
inc
xor
inc
gs
or
xchg
xlat
add
xor
out
bnd
or
jmp
movsb
or
xor
sbb
je
jecxz
jg
jl
sub
cs
data16
gs
in
push
push
jne
cmp
mov
push
bound
es
not
call
daa
lahf
loopne
push
sub
fdivl
ljmp
or
mov
sbb
lock
clc
cli
mov
jmp
and
dec
mov
ret
push
xor
jp
leave
sti
push
cmp
mov
pop
int3
or
sbb
jmp
scas
sub
push
xchg
xchg
add
or
mov
adcb
xor
out
or
movb
shlb
scas
sub
inc
mov
test
in
es
cmp
push
movsb
sub
and
sub
or
add
add
xchg
fsubrs
aas
pop
push
lock
xor
adc
push
push
xchg
cmp
add
or
das
and
faddl
insl
ss
sub
add
xor
add
shll
or
or
cmp
hlt
adc
add
je
in
jae
dec
sbb
les
ret
add
inc
jns
sbb
sub
dec
fcoml
jmp
pop
flds
lock
mov
je
cmpsb
mov
shlb
call
dec
lahf
mov
insl
adc
mov
in
xchg
in
inc
pop
mov
or
mov
cltd
sbb
pop
adc
and
cmovns
push
dec
adc
lock
dec
mov
sub
lods
sub
iret
lahf
adc
testb
pop
ret
fisttps
popa
mov
xchg
sbb
or
fwait
jnp,pt
test
jg
xchg
or
xlat
dec
pushl
jb
gs
lret
insl
adc
mov
nop
aas
fwait
push
and
jns
mov
and
ljmp
es
sbb
cmc
icebp
inc
sbb
pop
lret
jmp
dec
imul
adc
xor
mov
push
ror
xor
adc
jp
pop
pop
call
leave
xchg
test
daa
inc
clc
stos
and
test
sub
mov
repz
daa
ss
mov
push
mov
add
dec
cmp
sub
push
lods
jl
ljmp
xchg
je
sbb
inc
sarl
pop
adc
and
xchg
bound
lahf
stos
and
inc
cmp
jne
cmpl
dec
push
fstl
lcall
cmpsl
inc
jp
icebp
lods
sub
pushf
ds
divb
test
adc
scas
pop
inc
aad
or
add
add
sub
inc
pushf
dec
nop
cmpsl
jae
mov
inc
out
add
sub
shll
mov
je
and
xor
push
pop
daa
xor
jle
and
mov
je
jno
push
sbb
xor
and
inc
inc
pop
mov
cmpsl
sbb
pop
and
sbb
xor
imul
movhps
adc
jl
popa
mov
je
pusha
shrb
and
push
and
sub
les
decb
je
loope
sub
out
or
push
and
cmp
adc
or
in
sbb
jl
sbb
sub
inc
adc
cmp
sbb
stos
adc
add
lea
mov
push
push
cwtl
adc
and
jae
pop
push
test
inc
xor
hlt
or
adc
mov
popf
cltd
and
or
add
in
mov
add
mov
cmp
cld
shlb
sbb
cmp
daa
movsb
add
or
cmpsb
clc
scas
loope
in
jmp
adc
push
aam
insl
ret
cmp
sbb
and
je,pt
adc
lock
cmpl
mov
mov
imul
cwtl
daa
jmp
jecxz
jne
xchg
jle
add
push
cmpl
add
cmp
jbe
mov
push
dec
or
push
and
pop
and
push
sbb
stos
sub
pushf
rorl
je
jmp
sbb
movsl
sbb
cmp
out
das
or
inc
or
inc
testb
cmp
add
stos
pop
inc
and
mov
push
popa
cmpb
xchg
adc
comiss
xchg
adc
out
mov
rclb
mov
sbb
mov
jo
cmp
movsl
in
push
jae
int3
adc
pushf
and
sbb
inc
pop
inc
and
enter
add
push
cmpsb
jecxz
sbb
jns
jns
aas
xor
cmp
sbb
jl
jnp
ljmp
mov
sub
adc
dec
jle
xchg
inc
movsb
lea
mov
and
jbe
daa
dec
aaa
xor
xchg
inc
leave
sbb
inc
jle
daa
add
loope
push
hlt
jmp
bt
jmp
and
in
push
mov
push
test
subl
movsl
mov
adc
lds
dec
sbb
je
lods
add
lock
movsb
data16
adc
adc
loope
fisubs
lds
aad
lock
xor
add
je
mov
sbb
sahf
inc
adc
push
jecxz
aaa
jae
jns
movsl
and
inc
lock
clc
jae
mov
ret
jl
mov
adc
adc
push
push
scas
aam
fwait
es
add
and
xchg
outsl
and
mov
jmp
test
leave
jecxz
das
or
pop
add
js
mov
push
je
dec
pinsrw
sbb
and
and
testb
sbb
fmulp
dec
pushf
or
or
xor
add
jo
rcrb
lods
popf
xor
jne
push
mov
xchg
in
pushf
jae
fiaddl
fdivrl
cmp
andl
ja
int
pop
mov
inc
lock
orb
imul
jmp
xchg
fiadds
push
adc
aaa
xor
lock
cmpsb
scas
mov
mov
add
fsubs
fisubrl
mov
hlt
sub
mov
es
push
out
dec
mov
adc
push
call
push
outsl
lds
or
inc
out
es
and
sub
test
jae
or
adc
push
sub
jmp
dec
adc
cltd
push
das
mov
dec
aam
jge
mov
cmp
dec
cld
in
addb
enter
aam
loopne
pop
cli
cmp
dec
and
mov
int3
xchg
push
xchg
mov
xlat
imul
cmp
popf
inc
fdivrs
pop
fs
inc
push
jns
aad
inc
stos
dec
stos
and
push
sub
push
iret
xchg
or
mov
cld
or
mov
adc
adc
cmpl
and
adc
lds
adc
aam
push
inc
dec
ljmp
xorl
js
insl
adc
imul
lods
subl
movsl
push
pop
clc
add
jmp
mov
inc
adc
andl
movsb
enter
xor
inc
xchg
inc
xor
push
pop
mov
sub
push
adc
and
mov
dec
pop
ret
sub
cmp
and
in
sub
adc
es
dec
jae
cmp
inc
mov
adc
pop
push
stos
scas
aaa
jle
add
xchg
adc
jmp
xor
sbb
mov
jle
xor
pushl
push
mov
cmp
je
ss
jb
addl
cmp
cli
or
inc
stos
pusha
lret
dec
jmp
cmpsl
sbb
jmp
les
mov
shl
or
les
sub
jle
int3
sbb
dec
inc
add
pop
pop
cmp
jo
sbb
add
or
addr16
push
test
ret
dec
daa
push
lahf
fmulp
push
add
addl
or
dec
in
dec
pop
mov
xchg
stc
decl
and
push
mov
insl
mov
xchg
rcl
cld
pop
jmp
cwtl
and
cmp
bound
orb
pop
xchg
std
jo
mov
inc
push
mov
adc
lret
ds
mov
xchg
and
push
fmuls
mov
mov
push
or
add
inc
add
or
call
divb
fldl
in
clc
adc
jne
jl
mov
int
fwait
push
insl
sbb
call
repz
add
or
notb
and
xor
or
push
push
sub
push
adc
stos
and
in
ds
pop
je
inc
ds
andl
add
pushf
adc
call
jne
inc
or
addr16
inc
test
or
repz
jae
jg
adc
je
cmp
rol
mov
cmp
push
sub
or
xor
or
int
mov
jnp
je
pop
adc
jp
mov
inc
inc
push
mov
dec
fucom
inc
jmp
jbe
jb
mov
push
lods
cmp
aam
inc
leave
sub
aad
mov
sub
mov
add
sub
cli
or
sub
adcb
daa
add
adc
push
in
sub
adc
cmpl
das
xchg
and
dec
or
pop
and
daa
push
xchg
cmp
out
mov
and
ss
insl
pop
pop
push
enter
push
loope
ds
mov
rolb
xorl
xor
ret
ret
inc
pop
cmp
push
or
adc
stos
insl
push
jo
push
pop
loop
or
enter
or
pusha
cli
loop
mov
cld
inc
sahf
mov
inc
and
cmp
pop
add
or
add
nop
xchg
add
mov
idiv
nop
mov
neg
das
inc
or
mov
stos
lea
pop
push
jns
adc
mov
xor
xor
sub
inc
dec
or
push
aam
adc
addb
pop
or
xor
or
shl
and
sar
jne
movb
xor
add
sub
mov
jmp
add
sbb
mov
and
test
sub
scas
lahf
je
neg
jmp
cmp
cmp
jl
mov
sub
adc
add
lock
out
popf
insb
in
clc
jge
mov
pop
mov
xchg
adc
mov
repz
jmp
mov
push
mov
ss
push
daa
setl
jns
push
in
cmp
sub
mov
and
jge
movsl
lret
pop
test
rcll
fsin
sub
xchg
test
mov
lock
sub
nop
mov
jp
inc
sbb
add
xor
repz
andb
or
sub
jg
sub
jge
push
inc
xor
or
jmp
dec
jge
push
sbb
ret
adc
pop
push
and
pop
popf
das
inc
lods
pop
addb
add
jb
les
dec
pop
fldcw
popa
dec
cmc
es
add
cmp
push
cwtl
cs
sub
or
sbb
stos
or
lods
adc
mov
std
nop
pop
push
push
push
or
fwait
push
sbb
add
adc
jb
ljmp
aam
in
push
pop
pop
pop
loopne
cmp
test
ret
xor
lea
adc
mov
pushf
mov
inc
cmp
jne
and
push
xchg
jle
inc
mov
jo
or
jmp
dec
adc
leave
add
xor
cmp
mov
or
std
add
push
xchg
inc
ja
xor
je
push
push
or
repz
jg
movsl
cmp
add
mov
jmp
cmp
test
push
xchg
in
sbb
je
or
aad
add
pop
aam
xchg
jg
dec
cmp
jge
push
pop
sbb
dec
add
mov
mov
cld
xor
xor
jns
cld
mov
push
fstpl
jo
or
ret
nop
loope
add
ja
or
adc
mov
sbb
add
adc
ret
and
adc
mov
daa
push
add
pop
jo
nop
mov
addb
shll
mov
xorl
add
adc
call
test
addr16
mov
cld
sub
shr
loope
imul
lea
jp
femms
dec
test
adc
getsec
test
xor
adc
lea
cld
push
hlt
repnz
addr16
or
cld
adc
pusha
ret
or
jle
sar
dec
addl
add
pop
mov
cmp
pop
jae
mov
lret
lea
inc
mov
inc
decb
jne
pop
and
aas
or
pop
xchg
push
inc
pop
add
or
add
push
add
push
jle
pop
pop
ljmp
push
or
jg
sub
or
jle
and
sti
sub
or
ss
add
ret
jbe
nop
lcall
je
in
fidivl
adc
mov
cmp
sbb
or
out
not
and
dec
or
add
es
loopne
adc
inc
mov
insl
add
mov
or
pop
loopne
and
iret
inc
pop
mov
dec
ljmp
or
or
insl
push
pop
jo
orw
adc
mov
push
add
scas
sbb
jae
test
in
push
mov
in
or
inc
outsb
adc
scas
jg
sbb
adc
push
enter
ljmp
mov
sbb
mov
add
decl
cmp
testl
cmpsl
cld
jg
sbb
inc
loope
lsl
cmpsb
jp
scas
or
inc
adc
adc
pop
or
push
or
mov
andl
decb
xchg
or
mov
jns
add
stos
adc
js
rorb
push
and
or
mov
mov
shlb
testb
add
or
enter
out
pop
adc
push
push
dec
adc
test
inc
pop
and
cmp
dec
insl
or
lea
xor
inc
mov
push
test
inc
rcrl
xor
push
sarb
popf
inc
je
mov
fs
push
stc
add
mov
in
inc
or
jmp
test
scas
add
xor
shr
movsl
pop
loope
mov
fistps
sbb
cmp
decb
iret
cmp
popa
ret
adc
pop
cld
sbb
jb
adc
aas
mov
test
daa
inc
adc
out
in
dec
jae
les
inc
sub
push
jmp
or
es
or
out
movsl
dec
ja
repz
test
push
je
in
out
pop
iret
mov
test
cmpl
mov
add
cmpsb
sub
xchg
cs
jmp
stos
pop
cli
mov
mov
fnstsw
mov
jo
and
sbb
mov
arpl
jle
jne
pop
xchg
aam
mov
and
js
pop
cmp
xlat
je
lea
jmp
orl
mov
jne
arpl
add
pop
test
jl
shl
or
jmp
mov
stc
mov
sub
pop
icebp
cmpsb
pop
pop
decb
addl
enter
or
and
add
jmp
test
mov
push
iret
and
decl
jno
test
hlt
add
and
filds
decb
jne
jmp
and
jmp
lret
adc
and
push
outsl
mov
xchg
jp
repnz
cmp
or
adc
rolb
jl
rolb
inc
out
push
sub
fimuls
sahf
xchg
fs
push
adc
or
jge
or
mov
mov
shr
or
je
pop
nop
xchg
jl
adc
das
sub
loopne
xchg
push
jnp
pop
lea
push
or
leave
sub
fsubrl
or
cld
dec
xor
xor
mov
adc
cld
mov
lea
and
les
cmp
mov
adc
cltd
jo
and
add
xor
int3
add
push
mov
pop
mov
jo
inc
sub
adc
xlat
jp
mov
mov
cltd
movsl
inc
or
mov
mov
inc
adc
leave
xor
sub
fisubrl
jo
daa
sub
dec
and
pop
imul
sbb
mov
push
cli
rcrb
es
dec
adc
pop
mov
arpl
hlt
and
inc
loope
push
dec
jno
adc
dec
push
loopne
mov
xor
imul
stc
adc
xor
or
dec
dec
pop
sub
xchg
shl
pop
jns
push
or
push
xchg
and
cmp
cmp
ja
cmp
inc
lock
xchg
inc
mov
sysexit
cmc
sti
mov
inc
xchg
lock
inc
xchg
push
out
mov
movl
sub
dec
adc
test
pop
dec
out
lods
lea
fstl
mov
addr16
xchg
jae
dec
enter
rolb
dec
leave
je
add
add
mov
add
not
and
retw
jae
mov
or
inc
adc
and
jo
sub
ljmp
mov
cltd
sbbl
sub
cmp
sub
pop
cmp
daa
pusha
and
cmp
cwtl
test
add
cmp
inc
cmpsb
sbb
icebp
aas
mov
push
dec
xor
mov
in
push
dec
sub
and
sub
clc
adc
nop
test
and
clc
pushf
nop
pushf
cmc
icebp
dec
fldt
cmpsl
mov
xchg
rorl
jns
xchg
sub
add
pushf
stos
ret
loopne,pt
or
incl
dec
mov
xor
cmp
mov
hlt
enter
int3
push
pop
inc
mov
or
mov
int3
dec
cmp
jne
pop
mov
pop
inc
call
pushf
dec
mov
sub
mov
iretw
jmp
and
xchg
dec
icebp
test
movsl
cs
push
or
inc
inc
xor
inc
popa
je
bound
aas
fwait
inc
and
sub
aas
xchg
add
pusha
jge
or
shll
pop
pop
xor
jmp
dec
fcomps
fsubrl
jne
cltd
add
cmp
xchg
lret
into
and
push
jp
push
push
dec
push
ja
test
and
shl
sbb
out
or
jbe
out
jno
add
jnp
dec
jno
cmpsb
sti
cs
out
pop
jno
xor
scas
arpl
aam
and
bound
or
test
jns
bound
scas
push
cltd
dec
add
cld
test
sar
sbb
stos
sbb
shrl
jmp
sbb
pop
xchg
push
push
mov
sub
adc
sub
aad
loopne
test
iret
xor
sub
add
push
aad
add
mov
jne
in
or
arpl
xchg
mov
mov
mov
sub
sub
insb
cwtl
xchg
xor
ljmp
dec
dec
add
mov
sub
std
orl
ror
inc
mov
xor
xchg
cmp
jl
or
pop
imul
cmp
jae
sbb
jbe
inc
addl
lock
fmull
mov
shll
mov
test
pop
or
pop
mov
xor
cmp
test
inc
and
mov
cmpsb
stos
and
pop
xchg
adc
lods
pop
sbb
push
jle
xor
sub
jmp
lock
scas
into
nop
mov
mov
inc
add
jp
push
test
jge
rorl
inc
or
and
push
cmp
js
out
es
or
cmpl
test
jge
xchg
and
pop
shlb
call
xor
inc
cmp
inc
push
mov
gs
and
test
mov
pop
cmp
fcompl
insl
clc
add
inc
mov
lret
adc
jbe
or
inc
testl
jmp
adc
cmpl
fucom
xor
enter
mov
sub
rcrl
ret
clc
pusha
into
inc
or
das
mov
inc
test
stc
or
cs
movzbl
adc
adc
adc
pop
or
incl
push
pop
and
notl
ret
pushl
or
shlb
jle
pusha
push
and
adc
sub
sub
movsl
negb
je
adc
cmp
shl
cmp
add
jl
cmp
pop
jbe
push
nop
daa
add
gs
sbb
cs
mov
cmp
roll
nop
inc
sub
test
jle
mov
inc
add
mov
enter
mov
lret
dec
es
cmpl
jge
jb
movsb
inc
jl
cmpsb
mov
je
add
push
imul
aad
frstor
push
pusha
xor
lds
lret
xor
test
jmp
mov
ret
repz
sub
dec
out
loopne
and
dec
ja
xor
adc
iret
xor
xchg
jmp
add
cmp
xlat
mov
xor
push
mov
jne
jne
pop
push
pop
test
lret
jle
mov
mov
hlt
mov
fcompl
movsb
mov
adc
inc
and
adc
add
test
and
aaa
cmp
jae
mov
cmp
bnd
shlb
push
inc
or
shrl
add
pop
mov
cltd
ds
or
xor
sub
je
push
rdtsc
mov
push
sbb
jbe
fidivl
sub
les
pusha
sub
lea
xor
aam
mov
dec
push
icebp
mov
and
cmp
lea
ret
add
pop
pop
and
push
cmpsb
jae
xor
sub
scas
or
pop
mov
cmc
dec
inc
jb
or
testl
xor
cmp
jae
mov
xchg
rcrb
pop
mov
cmp
mov
inc
jmp
movsb
jae
dec
nop
dec
mov
xchg
and
dec
sbb
leave
cmp
mov
cltd
jae
add
mov
jne
mov
divl
jle
push
push
dec
push
subl
pop
inc
mov
imul
mov
sub
cltd
dec
xor
xor
shlb
jae
sub
inc
imul
scas
sarb
lock
jo
xor
adc
shrl
mov
inc
cmpsl
imul
cmpxchg
xor
and
and
in
push
xchg
jle
movsb
inc
imul
dec
adc
jl
sbb
nop
mov
mov
add
aam
mov
jmp
pusha
jae
sub
roll
xor
mov
ja
rorl
add
push
les
int
mov
push
mov
inc
jbe
daa
sub
jae
decb
sbb
cmp
pop
es
adc
stos
mov
rolb
sub
sarb
lods
insl
lcall
sbb
call
jl
pop
cmp
orb
push
xchg
in
mov
hlt
mov
out
stos
push
pop
inc
testb
and
sub
jl
inc
cmp
mov
jmp
pop
stos
mov
adc
push
mov
inc
sbb
sub
add
adc
or
mov
stos
dec
inc
push
in
push
push
ret
mov
andb
pusha
lahf
add
fists
pop
jmp
orb
nop
sbb
add
dec
loop
call
add
add
pushl
xor
or
jbe
mov
loop,pt
adc
pop
sub
loope
or
pop
lods
and
jo
jle
dec
and
push
inc
or
xor
neg
cmpsb
inc
push
cs
inc
push
or
fistl
lahf
jns
or
test
repz
jle
es
push
cld
sahf
loop
fisttps
clc
cltd
inc
xorb
jl
push
jmp
mov
jmp
push
pop
cltd
es
sbb
daa
xor
test
cmp
dec
mov
mov
lods
pop
cmp
in
xor
add
add
push
inc
xor
inc
jns
sbb
and
sbb
inc
add
out
sbb
mov
mov
roll
jno
or
das
and
cmp
repnz
cmp
and
jno
adc
roll
jge,pn
cmp
fisubl
or
je
add
sub
popa
call
xor
mov
enter
jbe
mov
sti
leave
cld
cld
mov
scas
pop
dec
or
stos
adc
or
lea
lea
std
fs
or
clc
cmp
sub
and
test
mov
xor
inc
jge
shll
out
hlt
add
xor
sub
jb
inc
mov
test
addl
xor
push
pop
adc
dec
and
mov
fnsave
mov
adc
dec
hlt
fmull
add
mov
mov
mov
sub
jnp
mov
push
dec
or
insb
cmp
push
sub
insb
sbb
mov
inc
mov
pop
std
inc
movsb
stos
fildl
xchg
push
inc
or
pop
xchg
pop
or
or
sbbb
pop
inc
sub
cmp
inc
pop
mov
sbb
or
or
add
test
in
dec
lods
subb
icebp
inc
push
or
mov
adcb
and
sbb
aam
fcomps
inc
nop
sub
or
insl
andb
inc
or
shlb
inc
xchg
sbb
jl
and
dec
lods
xchg
mov
xchg
pop
sbbb
sbb
or
pop
or
and
inc
enter
inc
jge
pop
es
clc
push
mov
pop
pop
cmp
je
inc
jb
jns
dec
inc
mov
leave
or
fisttpll
mov
push
pop
mov
or
jecxz
js
jp
xor
mov
push
jg
pusha
out
call
or
movsb
ss
out
dec
lcall
adc
leave
adc
and
testb
xlat
rcrb
mov
cld
mov
addb
cmp
les
jmp
imul
mov
sbb
push
jne
test
ljmp
lahf
enter
mov
mov
pop
sub
xchg
sub
pop
mov
stos
call
test
push
push
jbe
adc
pusha
ret
test
popf
imul
setb
ficompl
int
or
push
add
xchg
adc
xor
add
sarb
push
jle
pop
mov
paddd
xor
adc
or
fmuls
por
mov
push
shl
movb
mov
add
sbb
call
shrl
dec
adc
aaa
mov
cmp
or
imul
ja
sbb
jnp
mov
sahf
in
and
jne
cmpl
lea
test
pop
mov
sahf
adcl
add
or
lock
add
push
pop
aas
pop
pop
adc
fwait
es
orw
adc
xor
scas
pop
mov
je
cmc
cmp
pop
cmp
outsl
or
out
sbb
sub
dec
pop
mov
push
fsubs
sub
inc
scas
je
out
mov
sub
push
icebp
scas
mov
add
xor
or
in
orl
movb
or
aad
int
loop
aad
hlt
sub
push
popf
mov
fdivr
movsl
jmp
xor
push
or
sbb
xor
cmp
mov
jb
pop
cmp
lea
adc
andb
inc
inc
inc
ljmp
in
inc
dec
pop
jl
scas
adc
or
call
pop
jle
pop
add
inc
or
mov
rorl
or
jne
push
cmpsb
loopne
popa
xchg
push
ret
std
ds
or
mov
popa
mov
inc
pusha
je
cwtl
inc
push
jl
adc
in
cmpb
lea
jne
dec
test
pop
add
addb
mov
dec
dec
scas
xchg
ret
mov
in
cld
cli
call
or
mov
inc
enter
subb
mov
pop
adc
or
or
in
or
sti
add
ss
loop
inc
jg
out
pcmpeqb
loopne
mov
ja
fildl
ja
push
lds
es
add
cs
pop
mov
jne
sub
pop
adcb
mov
lret
lods
and
push
push
mov
outsl
mov
push
in
sbb
mov
scas
cwtl
pop
sub
in
or
add
xchg
pop
insb
inc
inc
leave
das
mov
xchg
aad
insb
pop
mov
lock
adc
jg
xor
adc
or
test
xchg
in
mov
or
int3
xchg
sbb
pop
inc
dec
add
and
leave
pop
and
push
div
cli
or
adc
shrl
or
mov
clc
rorl
aam
add
rcll
lret
add
dec
sub
or
movb
dec
jne
mov
xor
pop
rcl
sbb
sub
cmp
test
pop
cmp
dec
cmp
inc
aaa
cmp
add
cmp
adc
cmp
mov
mov
xchg
rcll
stos
or
jmp
sti
xor
mov
scas
or
adc
scas
and
or
fadds
mov
dec
in
mov
mov
xor
push
jne
lea
mov
mov
adc
ds
sub
cld
cmp
repnz
pop
mov
cmp
jne
loope
lret
dec
adc
pusha
mov
pop
in
imul
sbb
jmp
cmpb
or
and
mov
in
je
add
jmp
xor
push
sbb
pop
mov
add
ret
je
cmp
xor
pop
mov
sbb
jmp
or
push
lret
cmp
or
cwtl
or
inc
xor
cmp
bound
xchg
and
xor
and
inc
push
scas
enter
pusha
jp
movb
std
jo
adc
pop
incl
mov
adc
mov
sub
cltd
sti
or
cmc
stos
int3
int3
push
xchg
insb
push
dec
mov
mov
fdivs
pop
clc
mov
cmp
mov
cmp
ljmp
mov
mov
aad
ss
mov
movsb
sub
cs
mov
out
adc
cwtl
lcall
test
adc
cmpb
pushf
inc
testl
cmpb
and
loope
nop
add
mov
mov
mov
inc
inc
or
aad
jmp
push
or
sub
cmp
inc
dec
adc
aas
mov
and
mov
inc
int
in
or
dec
adc
jne
add
dec
xor
push
pop
sbb
sahf
push
cmp
mov
sub
mov
sbb
mov
adc
add
xchg
add
mov
jne
inc
clc
sub
das
sub
incb
push
dec
test
pop
or
in
cmp
ret
add
movsb
movsl
rcrb
add
or
adc
dec
jge
push
inc
dec
mov
adc
pop
inc
mov
test
inc
adcl
cmpb
and
ljmp
push
sbb
and
cmova
add
sbb
unpckhps
or
andl
aad
cltd
push
or
popf
pusha
pop
sub
scas
fistpl
push
fs
les
orb
pop
dec
inc
jl
jmp
ret
pop
insl
or
sti
add
ljmp
sbb
sub
or
inc
and
push
cmp
adc
inc
loope
sbb
dec
pop
repnz
xor
rcrb
imul
mov
lcall
ss
mov
imul
or
cmp
std
mov
fimull
pop
insb
adc
lods
mov
adc
or
ret
jmp
xchg
ja
dec
cmpsb
inc
xchg
mov
je
dec
jecxz
inc
mov
add
ret
into
mov
cmp
and
cwtl
mov
aam
mov
fmuls
mov
div
add
xor
cmc
add
jo
aam
mov
enter
lahf
jns
sbbb
adc
pop
jp
mov
mov
pop
das
xor
rolb
loopne
dec
fsubs
jmp
enter
ret
icebp
push
pop
cmpsb
add
add
xchg
mov
dec
sbb
xor
inc
call
aas
xor
cmp
icebp
lea
test
inc
push
mov
sub
sbb
mov
cmp
adc
push
clc
push
mov
pop
ret
jbe
xchg
sbb
mov
addl
push
pop
cmpsb
push
rcl
mov
ljmp
push
test
push
and
aas
jo
mov
aam
pop
inc
adc
push
fmulp
clc
js
inc
cmp
or
cmp
pushl
sub
jns
mov
loop
pushf
push
jns
sahf
sti
test
fcoms
in
rol
push
das
rolb
add
sub
dec
test
mov
xchg
push
pop
mov
sub
add
mov
lret
dec
mov
xchg
adc
pop
sbb
xor
jl
sub
sub
mov
icebp
mov
and
scas
je
sub
lea
inc
dec
mov
and
cmp
mov
shl
jmp
lret
arpl
cld
dec
movsb
dec
mulb
movsl
dec
cmpsl
xor
xchg
loopne
dec
pusha
mov
and
or
leave
adc
lea
int3
mov
loopne
cmp
cli
enter
stc
lahf
adc
cmp
adc
psadbw
and
push
push
insl
das
sub
jmp
dec
in
jnp
push
sbb
or
jnp
mov
jno
jge
popf
adc
mov
push
sbb
in
dec
jnp
ret
fisubrl
mov
out
mov
xchg
pop
in
mov
sbb
push
sbb
jmp
sbb
adc
lea
mov
xor
fnsave
sub
loopne
loopne
stos
ffreep
or
fmull
and
xchg
dec
popa
push
test
adc
add
xor
movsb
sysenter
jne
mov
pop
add
popa
pop
int3
pop
ljmp
loopne
popf
pop
xor
in
add
leave
pop
adc
jmp
cwtl
jg
push
sub
fs
adc
sub
test
scas
inc
int
add
clc
and
adc
inc
mov
ja
add
mov
pop
mov
lea
mov
aad
push
bound
jo
imul
fcomp
push
xchg
cmp
push
sub
push
cmp
mov
adc
cwtl
or
xchg
jns
adc
and
or
enter
or
xchg
jnp
adc
mov
or
sbb
mov
jae
movsl
fmul
sub
out
and
push
cmpsl
dec
pop
jo
mov
adc
xor
and
mov
sub
leave
decl
in
sti
outsb
testl
xor
push
push
push
ljmp
adc
mulb
lock
mov
sbb
mov
jg
inc
cmp
add
jbe
xor
or
ret
popa
cmp
and
hlt
or
cs
sub
sbb
adc
fisubl
mov
jmp
shrl
sbb
arpl
jmp
sub
inc
test
push
shlb
lret
xor
xchg
adcl
cmp
pop
jecxz
mov
rcrb
push
ja
idiv
jg
push
and
ja
cmp
or
aas
adc
faddl
cmpsl
pop
mov
call
mov
xor
dec
lods
push
inc
mov
push
cmp
ja
outsb
cmp
shrb
push
je
push
mov
or
push
jno
adcl
and
mov
push
add
mov
inc
fcmovnbe
mov
mov
mov
pop
pop
cmp
mov
or
jmp
aad
rolb
andb
iret
pop
je
cmp
mov
mov
dec
subb
test
pop
stos
pop
inc
js
mov
das
jb
test
adc
cli
xchg
lea
mov
mov
lret
sbb
adc
into
arpl
lret
ret
clc
or
or
movsb
xchg
pop
push
jl
pop
je
mov
push
jne
or
push
inc
addl
dec
dec
adc
xchg
or
rorl
mov
pop
sub
and
add
mov
cmp
pop
jge
cmp
add
mov
in
hlt
push
pop
and
push
stc
dec
or
mov
clc
jg
enter
dec
mov
arpl
mov
mov
adc
pop
sti
pop
cmp
push
push
sub
adc
adc
cli
pop
cmp
fsubs
push
xor
xchg
shl
dec
and
push
cmpsl
mov
or
pop
jmp
sbb
movsb
cmpsl
clc
jnp
andb
pop
idiv
in
pop
lahf
je
lahf
adc
push
ljmp
call
loop
rolb
sbb
sar
add
cmp
push
ret
jp
and
jae
cmpsl
push
ds
movsl
sub
mov
inc
lea
sbb
pop
pop
push
adc
pushf
mov
sbb
cmp
pop
pop
mov
jge
mov
xchg
push
leave
mov
pop
add
iret
ret
pop
cltd
mov
enter
cld
push
imul
repnz
mov
mov
and
shrl
insb
fldenv
gs
add
cmpsb
mov
inc
ds
and
push
clc
inc
das
cmp
sub
call
popf
das
cmpb
ret
sub
cmp
add
dec
cmp
and
stos
leave
add
insb
mov
stos
aad
flds
repnz
xchg
es
or
mov
jge
dec
pop
mov
cltd
cwtl
je
pop
xchg
and
xchg
icebp
repz
cmpsl
dec
loopne
out
sub
cmp
sub
in
and
fcmovnb
and
or
cmc
mov
icebp
mov
adc
sbb
cwtl
hlt
xor
pop
in
imul
or
mov
jl
ret
fwait
ja
add
push
stc
sbb
addr16
mov
jp
sub
jmp
negl
shll
lea
dec
or
adcb
mov
dec
push
mov
flds
mov
adc
adc
jbe
push
aas
push
clc
cwtl
cmp
rclb
popf
bnd
xchg
mov
sub
mov
cmc
add
sub
sub
mov
ja
bound
or
mov
inc
mov
iret
add
push
cmpb
cmp
jg
sub
push
sub
xchg
adc
or
cmp
xchg
and
cld
sbb
cmp
jl
push
in
bound
orb
daa
test
add
push
inc
sub
imul
jg
and
rep
and
movsb
shll
test
sbb
leave
sub
or
lret
int3
incl
or
clc
aad
pop
mov
and
pop
shlb
xor
fbstp
data16
mov
dec
and
jmp
xor
ds
xor
rcrb
leave
dec
sub
lock
scas
mov
push
mov
in
repnz
cmp
and
sbb
push
jecxz
std
push
jp
inc
or
incb
xorb
or
or
mov
sbb
pop
inc
cwtl
arpl
jmp
add
push
adc
popa
je
js
dec
daa
test
xlat
shll
xor
xchg
or
inc
jo
scas
or
push
movsl
jae
lods
jne
orb
dec
jle
movb
xor
pop
shr
jns
mov
movsbl
xor
adc
inc
and
jmp
cmp
adc
cmp
pop
or
xlat
cmc
add
cmc
inc
loope
xor
ret
fbstp
jns
fnsave
xchg
dec
push
xchg
mov
das
inc
push
jb
adc
cld
movsl
lds
push
cmp
mov
sbb
std
inc
lahf
or
mov
iret
or
insb
dec
or
cmp
sarb
add
push
mov
enter
mov
add
and
jmp
js
out
mov
dec
fptan
lock
push
out
iret
popf
js
push
je
cmp
xchg
push
mov
pop
mov
mov
shll
xorb
nop
sub
add
lcall
or
enter
cmovs
jae
orb
push
add
fcmovb
jmp
add
inc
add
sub
fisttps
mov
iret
lcall
fcoms
mov
or
inc
mov
add
sub
and
add
clc
xlat
add
adc
das
lret
imul
sub
insb
dec
dec
mov
daa
inc
fcoml
daa
jle
lock
test
pop
mov
add
dec
sbb
fstl
ret
movsb
jmp
fisubrs
add
or
insl
enter
dec
adc
sbb
xor
mov
mov
add
cs
ret
pop
or
cwtl
push
pop
jne
sbbl
or
and
xor
js
or
or
cmp
jne
pop
push
pushf
and
inc
add
call
fs
out
rcr
mov
inc
je
or
scas
fmuls
lret
xor
xor
sub
or
sub
sbb
and
leave
push
dec
xlat
sbb
inc
pop
mov
mov
adc
dec
int
jb
push
or
xchg
cld
mov
scas
outsb
adc
mov
fcom
xchg
in
dec
sbb
pop
sub
mov
mov
rclb
adc
push
jmp
xchg
add
incl
sbb
sbb
add
ds
inc
fimull
jne
cmp
ja
push
pop
dec
sub
rorb
daa
div
mov
int
and
clc
xchg
mov
andb
xchg
and
add
sbb
add
popa
or
clc
neg
das
repnz
loopne
or
aam
cmp
pop
push
push
xchg
adc
es
fnstcw
jmp
xchg
lret
mov
cmpsb
mov
push
leave
cmp
ja
cmpl
sarl
cmpl
add
push
cmp
adc
andl
inc
sbb
sub
les
mov
add
jp
movsb
inc
das
mov
mov
or
add
fidivrl
stc
adc
sbb
add
movsb
push
push
mov
arpl
lret
inc
or
or
or
mov
lods
xlat
mov
hlt
test
lea
jae
adc
jmp
call
jecxz
mov
pop
mov
push
mov
and
mov
and
call
mov
cmp
adc
call
sbb
insl
mov
mov
in
jmp
xor
aam
andl
call
nop
enter
push
push
push
jmp
or
stos
add
idiv
adc
pop
mov
lock
xchg
lahf
inc
test
xor
into
or
adc
adc
aaa
fdivrp
xchg
xor
xor
hlt
dec
pop
cmp
push
popf
popa
cmp
xor
jp
pop
jp
mov
ja
testb
cli
mov
cli
adc
and
or
pop
aas
in
add
jne
addl
fldt
adc
cli
lea
clc
fs
xchg
outsb
or
insb
adcb
in
and
in
adc
jp
cli
add
xor
stos
adc
lds
sarb
pushf
repnz
call
push
add
pop
and
sub
std
sub
push
adc
sbb
xor
adc
and
add
je
das
or
ficoml
xor
les
jmp
inc
lods
mov
in
mov
lahf
loope
pop
dec
popl
and
dec
mov
xor
shrl
jmp
add
cmp
inc
add
and
outsl
clc
dec
dec
aaa
adc
pop
cs
jle
sub
push
inc
sbb
rcll
stc
pushf
sub
lods
xor
mov
scas
gs
xchg
cs
je
loope
mov
addb
loop
stos
cmp
adc
test
mov
or
jmp
mov
lods
cmp
or
lret
or
and
inc
enter
es
dec
sub
sbb
stos
loope
cmp
jle
dec
push
mov
pushf
cmp
and
jne
std
xor
mov
jbe
leave
jg
gs
adc
jne
xchg
pushf
or
push
lcall
jl
fistpl
or
dec
repz
jge
mov
add
jp
repz
dec
mov
ja
loop
idiv
sbb
pushf
xchg
out
sub
les
mov
je
jmp
outsb
pop
adc
add
inc
pushf
jg
lds
outsb
cmp
or
mov
mov
ja
push
jne
inc
push
or
sarl
jp
mov
or
and
fs
lea
cli
pop
out
mov
call
movzbl
sub
jne
pop
adcl
test
shll
ds
or
cld
sbb
mov
std
fwait
les
adc
repnz
inc
pop
stos
push
jo
push
push
or
and
cmp
xchg
jb
lret
cmp
pop
push
mov
test
xchg
out
mov
inc
enter
loopne
add
mov
dec
stos
stos
add
in
add
xchg
xor
sbb
adc
mov
out
push
outsl
mov
inc
outsl
decl
cmpsl
cmp
xacquire
push
lods
adc
push
cmpsb
xchg
push
lea
test
mov
and
push
add
add
cmp
shr
cmp
sub
and
mov
jbe
cmpb
sbb
in
rcll
jb
test
xlat
pop
fcom
push
and
push
ss
shlb
movsl
mov
dec
mov
cmpl
dec
dec
sub
mov
std
jnp
adc
push
test
push
adc
or
ret
adc
lods
sbb
jmp
cmp
add
jno
add
mov
cwtl
adc
push
repnz
mov
and
pop
adc
cld
jne
fcompl
sbb
dec
sub
pop
xchg
cmc
aad
sahf
or
adc
mov
adc
adc
and
test
jecxz
insl
stos
scas
mov
sbb
dec
or
cli
xor
or
add
call
push
movsl
jl
sub
adc
orl
jb
pop
jbe
test
push
out
dec
xorb
xchg
adc
popa
mov
push
cli
cmp
shll
addr16
imul
pop
adc
or
stos
inc
mov
jne
pop
daa
pop
push
pop
inc
cli
mov
or
push
xchg
push
pushl
and
dec
push
adc
xor
and
or
sub
sub
jae
mov
ret
pop
pusha
sti
adc
hlt
nop
loopne
jmp
or
adc
inc
and
mov
inc
sbb
inc
add
popf
es
sbb
pop
cwtl
stos
mov
cmp
dec
pop
xchg
popa
jb
or
cltd
cmp
aam
loopne
dec
ret
pop
leave
push
xchg
adc
test
cmp
enter
repnz
push
das
pop
enter
xor
cwtl
pop
das
add
adc
je
push
mov
js
inc
or
jbe
mov
lcall
cmc
or
mov
adc
push
adc
xchg
xchg
add
and
jmp
xor
rol
lods
shll
pop
or
lea
add
cmp
or
add
sti
sbb
negb
adc
in
pushf
xor
xor
sbb
inc
nop
jne
dec
sbb
insb
cmp
mov
jo
cmp
stos
and
test
add
int3
mov
push
mov
adc
adc
stc
sbbl
stos
rorb
and
jne
inc
mov
xchg
or
or
outsl
xchg
sub
cmp
or
push
lea
adc
mov
cwtl
xchg
pusha
and
ret
jne
mov
or
inc
dec
push
pop
xchg
and
movsb
push
mov
stos
js
adc
sub
mov
push
and
lds
pop
sbb
push
mov
nop
hlt
jbe
fiaddl
adc
add
out
or
movsl
pop
fwait
and
cwtl
cs
jne
shl
jne
pop
push
leave
or
shrb
out
inc
test
and
and
push
adc
xchg
sub
stos
pusha
idivb
jge
das
jle
out
lahf
and
mov
std
sub
sbb
mov
cmpsb
or
sbb
push
inc
and
and
das
mov
and
in
cmp
cmc
sbb
push
push
mov
les
mov
mov
out
mov
paddsw
mov
push
cmpsb
les
fdivrs
or
testb
gs
jle
sbb
mov
cmp
or
fcmovne
xor
scas
and
fistps
mov
xchg
scas
mov
sub
mov
adc
or
je
push
lret
in
push
mov
or
push
pop
lea
ljmp
aaa
add
movsb
lea
imul
push
lea
mov
aas
in
push
icebp
dec
fs
into
sbb
add
ret
not
lret
xor
lret
or
jae
jbe
xor
pop
mov
outsb
mov
dec
mov
cmp
fnstsw
jp
push
xchg
sub
xor
add
inc
or
sbb
ja
das
xor
leave
inc
xor
js
fmul
add
mov
or
jmp
dec
cmpps
jo
xlat
ljmp
out
inc
and
aaa
push
ss
pop
repnz
stc
xor
out
jmp
sbb
cld
ljmp
pop
xchg
repz
lods
inc
xchg
test
xor
jnp
xchg
cltd
and
cmp
push
or
push
sub
inc
inc
repz
lock
lcall
mov
fxch
in
push
cmpsb
adc
pop
mov
sarb
lea
sbb
lods
adc
mov
sbb
mov
dec
add
loope
shrb
call
add
das
sarl
push
adc
cmp
pop
data16
pop
scas
sbbb
rcrb
sbb
out
movsb
outsb
push
std
mov
or
and
xlat
inc
jl
lock
shl
add
aas
push
in
loopne
mov
cmp
and
stos
or
jle
add
add
mov
mov
or
ja
test
sti
xor
or
jg
push
and
inc
adc
icebp
or
movlhps
mov
push
xchg
out
push
dec
clc
jecxz
aam
xor
or
into
inc
pop
jmp
jnp
jge
and
sahf
inc
lahf
mov
movsl
jle
dec
dec
and
xor
sub
xor
mov
mov
adc
sbb
addr16
jb
adc
jle
dec
sub
or
push
push
icebp
pop
lea
mov
add
jge
das
cmp
xor
jmp
adc
jmp
ftst
jmp
nop
adc
xor
sbb
sub
jmp
cmpsl
or
dec
cltd
add
clc
and
or
popa
insl
mov
pop
insb
mov
or
movsl
sub
cmp
sbb
adc
mov
or
sub
aam
or
sub
out
aas
rcrb
in
popa
push
mov
stos
leave
or
jmp
adc
test
enter
sbb
jmp
lret
int
add
jl
insb
xor
mov
jl
and
or
pop
dec
xor
add
inc
jmp
ja
xor
mov
pushl
ror
mov
pusha
jecxz
or
push
pop
das
mov
xor
xchg
mov
fists
inc
dec
sahf
dec
aas
loopne
sub
idivb
roll
popf
and
clc
mov
push
adc
jg
ret
jno
imul
jne
cmp
rorb
add
xor
sbb
jle
movsb
inc
fldcw
sbb
add
mov
jge
je
inc
hlt
dec
imul
adc
push
or
repnz
inc
test
icebp
in
pop
push
in
ss
adc
or
add
adc
or
adc
sbb
cmp
xor
jne
sbb
out
and
and
lods
inc
jmp
in
add
pop
cmp
aad
ja
or
jge
in
dec
mov
jp
xchg
ret
sbb
sti
jmp
fdivl
shrb
fs
add
adc
rolb
shl
mov
jno
xchg
pop
add
lcall
adc
sbb
or
dec
andl
add
dec
mov
xchg
adc
push
jo
int3
movsl
sbb
xchg
pop
inc
xlat
stos
js
enter
das
fs
nop
mov
push
nop
and
in
out
out
call
jmp
in
and
inc
out
sti
add
and
inc
add
sub
jbe
or
shlb
push
mov
sub
and
mov
or
inc
add
andl
jnp
hlt
fsubrl
aas
aas
clc
dec
mov
pop
maskmovq
sub
sti
push
jmp
xchg
xorl
dec
sub
cs
and
cmp
shll
sub
push
push
add
xchg
iret
sub
add
sbb
adc
mov
pop
lods
lcall
pop
add
imul
mov
div
mov
in
dec
mov
loopne
repnz
mov
and
sub
add
jge
aas
jb
and
dec
xchg
ret
arpl
nop
xor
jge
insl
cmp
inc
roll
and
adc
pop
xchg
cli
sub
sti
cmpsl
rorb
cmp
sbb
jne
push
stos
add
neg
and
or
ss
repz
fimull
jle
cmp
jmp
adc
mov
or
or
push
mov
sti
mov
lret
imul
or
cmp
mov
jne
push
repnz
mov
mov
lea
jl
xor
shll
pushf
and
push
dec
jmp
test
decl
mov
sub
sub
mov
fldl
add
lds
xor
add
decb
pop
fstps
andb
repnz
pop
out
popa
or
dec
stos
add
nop
or
cmp
push
push
flds
push
adc
jnp
adc
push
test
mov
and
xchg
scas
push
cmp
pop
test
jmp
jb
lods
fstl
add
adc
cmpsl
mov
xchg
cmp
fiadds
lock
lahf
ss
add
add
and
lahf
lret
nop
cmp
push
lcall
sub
and
adc
or
xchg
lds
repz
push
movsb
sub
push
mov
inc
dec
sbb
xlat
in
clc
jae
add
pop
push
or
inc
arpl
cld
inc
inc
adc
add
xor
lods
mov
pop
pop
xchg
and
andl
adc
imul
ds
or
clc
adcb
imul
stos
and
cmp
mov
clc
dec
stos
aas
jl
das
inc
mov
push
icebp
aas
inc
sbb
pop
dec
push
sub
ja
inc
test
je
xchg
add
or
add
or
dec
adc
lods
xor
les
std
jle
movb
mov
cld
mov
nop
mov
push
push
pop
lds
lods
test
dec
mov
iret
mov
rcrl
xchg
clc
icebp
arpl
pop
addb
and
cmp
jmp
and
mov
xorl
mov
lret
and
and
fiadds
jge
lahf
sub
pop
jb
mov
sub
inc
arpl
xchg
push
andl
or
jae
ss
adc
roll
adc
cmp
push
and
mov
mov
mov
pop
inc
andb
jne,pt
xorb
jmp
mov
xchg
adc
shlb
rclb
jb
jmp
pop
push
je
push
sub
mov
sub
xchg
in
lods
lods
dec
mulb
pop
dec
test
pop
or
into
popa
arpl
es
or
pop
xor
and
and
and
cmp
add
push
push
aaa
mov
fldenv
push
lods
or
cmp
mov
rcrb
mov
cmp
add
sub
call
push
pop
dec
mov
lds
or
push
push
push
cmp
jne
jns
dec
or
push
and
sub
add
add
call
nop
jle
xor
in
std
outsl
mov
cmp
in
sbb
cs
push
mov
cmp
xor
gs
das
shrl
je
cmp
dec
cmpsb
or
jne
sbb
fistl
mov
sbb
adc
pushf
adcl
aas
and
lds
fcompl
or
and
jg
xchg
pop
cmp
pop
push
xor
movswl
or
iret
jl
adc
inc
xor
xor
dec
in
hlt
ja
cmp
xlat
jne
inc
push
jnp
incl
jne
aas
inc
fidivs
sub
jbe
nop
adc
and
out
xchg
or
in
cmp
lret
jge
pop
loop
fimuls
sbb
inc
sti
rorl
loope
push
test
cmp
dec
add
push
push
push
mov
neg
mov
push
sub
xlat
daa
cs
or
imul
mov
or
pusha
aas
or
pop
gs
imul
cli
jl
push
pop
adc
adc
jno
call
push
or
sbb
add
daa
lea
pop
cmpl
jb
cmc
addl
push
add
inc
aaa
jg
ret
insb
mov
ret
cmp
push
ret
cld
arpl
stos
push
add
xchg
repz
pop
inc
and
or
aaa
vmovdqa
jecxz
jl
push
shlb
nop
inc
dec
in
inc
jb
or
ret
mov
sub
jnp
int
dec
or
sub
push
cmp
jle
xchg
dec
pop
pusha
pop
pop
jmp
and
cmp
outsl
and
mov
fsubl
sbb
sbb
cmp
jno
and
fsubl
sbb
sbb
cmp
dec
dec
popa
xor
pusha
mov
test
and
and
inc
dec
jne
pop
movsb
loopne
stos
int3
cmp
push
hlt
mov
popf
pusha
push
inc
or
popa
push
jle
mov
in
push
das
or
adc
push
push
mov
xlat
in
cwtl
sbb
lods
addl
push
inc
sti
mov
xor
rcll
dec
bound
and
xor
mov
mov
mov
das
add
and
and
jle
insl
rclb
add
dec
push
push
scas
xchg
test
pop
mov
test
inc
leave
sub
mov
lock
or
pop
push
mov
dec
or
cmp
mov
xor
cmp
cmpl
test
cmp
mov
xor
adc
cld
jmp
adc
cld
loop
ret
movsb
sub
test
insl
add
jne
sbb
cmp
push
push
mov
dec
adc
add
xor
arpl
or
cmp
pcmpeqb
mov
cmpsl
dec
imul
jbe
rep
dec
inc
inc
cmpsb
and
xor
push
push
cmpb
cs
push
lods
inc
lahf
sub
xchg
hlt
cmp
sub
push
and
fildll
mov
mov
daa
lock
int
sbb
lods
pop
cli
cmp
pop
mov
jne
pop
push
ja
push
adc
loopne
pop
mov
inc
push
mov
gs
pop
cmp
ret
data16
sub
lcall
or
iret
add
push
scas
out
inc
push
jne
fadd
push
in
outsl
adc
movsl
jmp
repnz
cmp
sbb
inc
lcall
aam
cmp
aas
xchg
outsb
lock
mov
xor
jle
xchg
push
ja
mov
mov
pop
js
aad
dec
lods
adc
lods
loope
pop
stos
or
jbe
adc
mov
icebp
aaa
testb
jnp
pop
cmpsb
push
pop
sbb
in
mov
inc
inc
or
push
xchg
ret
inc
outsl
inc
sbb
lret
cmc
imulb
popa
mov
hlt
imul
adc
adc
inc
or
jecxz
or
mov
xor
jnp
and
sbb
push
je
mov
stc
and
mov
call
dec
shr
outsb
dec
addr16
fs
mov
mov
mov
scas
nop
inc
es
call
jo
add
jb
rcr
ja
add
fs
adc
les
dec
int
popa
push
adcl
dec
mov
inc
neg
jmp
or
or
sti
push
or
push
pop
je
fistpll
jbe
adcb
das
and
xlat
sub
les
or
sub
mov
xchg
int3
adc
or
aad
push
nop
jl
jmp
jo
jno
roll
ljmp
sub
mov
or
aad
xor
jmp
jne
push
jle
push
fimull
subl
dec
add
add
mov
or
mov
dec
inc
fistpl
ja
fsubl
pop
dec
mov
daa
add
adc
pop
nop
inc
cmp
jb
repnz
movl
scas
mov
pop
dec
push
xor
cwtl
insl
push
inc
inc
movsl
decb
xor
sbb
jge
jge
loop
jnp
and
scas
xor
jle
aam
stos
scas
out
fcomps
movsb
pop
sbb
mov
sbb
mov
inc
or
shll
cmp
dec
in
daa
sub
sub
dec
lahf
loope
jne
mov
jns
lds
ja
mov
add
mov
add
add
adc
rorl
adc
and
cmp
roll
mov
popa
and
int
sub
outsl
inc
and
jmp
loop
bound
push
popa
or
mov
add
or
out
rcll
xor
sub
jmp
sbb
sbb
xchg
adc
bnd
xchg
mov
sbb
cmp
or
jo
inc
cmp
dec
je
lods
lods
and
dec
je
movsb
or
rorb
mov
stos
dec
je
mov
xchg
push
je
mov
adcl
pop
je
movsl
pop
sbb
sbb
les
fcom
movsb
xor
pop
add
bound
pop
add
movsb
popa
dec
bound
push
movsb
popa
push
add
adc
add
movsl
sub
inc
insb
push
jmp
insl
cmp
inc
test
or
add
jge
adc
pop
dec
pop
inc
sub
je
movsb
or
movsl
mov
je
mov
sub
dec
dec
xchg
adc
or
push
lods
cmp
and
cmp
inc
adc
mov
adc
xchg
test
test
mov
sarb
nop
ljmp
add
adc
add
cli
add
add
inc
add
push
ret
sub
loopne
pop
jo
cmp
xor
push
pop
aam
push
jo
js
add
inc
aaa
cmp
sbb
out
orb
pop
or
les
add
sub
jge
out
dec
sub
dec
cld
je
xchg
cmp
or
sar
adc
adc
or
imul
sub
sbb
xchg
mov
adc
or
in
jb
and
xor
aas
or
jle
pop
push
cmp
push
inc
loopne
jae
jb
outsl
arpl
cmc
out
inc
in
popa
je,pt
sti
sbb
outsb
inc
push
dec
inc
push
dec
bound
int
push
sub
add
adc
inc
dec
dec
inc
inc
jmp
push
cli
push
fisttpll
inc
push
dec
inc
sbb
dec
pop
push
fists
dec
cmp
jne
imul
push
cmp
push
sbb
dec
inc
movsl
or
pushf
adc
adc
xor
adc
bound
outsl
cmpsl
imul
mov
add
aaa
adc
insb
je
or
addr16
loop
mov
icebp
insb
mov
inc
lock
jecxz
shll
enter
xchg
cmp
imul
repz
rclb
lret
jle
pop
push
sub
mov
inc
fisttpll
jecxz
pusha
xor
clc
pushf
popf
jo
mov
mov
outsl
call
xor
dec
cmpb
sbb
rolb
aaa
jl
cwtl
fwait
subl
sbb
xor
sbb
xor
pop
push
andl
add
addr16
inc
fists
into
sub
push
jle
and
push
insl
sbbb
cmp
fidivrs
call
sub
pusha
dec
popa
and
retw
outsb
cmpl
or
cmp
daa
cmp
and
cs
sub
cmc
fiadds
inc
sub
dec
push
popf
into
dec
stos
bound
push
inc
mov
and
and
aad
cmp
xor
enter
loope
int3
pop
imul
idivb
pushf
or
and
outsl
sbb
or
adc
pop
dec
sbb
cmp
inc
sub
push
mov
mov
addr16
jne
aad
cmpl
dec
inc
inc
dec
dec
jmp
adc
pop
or
and
scas
pop
xor
ret
cs
test
or
mov
rol
insb
mov
in
sbb
add
out
xor
nop
out
pusha
xchg
jo
adc
dec
fdivr
incl
jg
iret
adc
or
cmp
dec
imul
scas
cmpsb
xorb
cltd
or
xchg
mov
xor
mov
js
sub
pusha
loope
jns
sbb
xlat
into
pusha
push
dec
mov
lods
inc
cld
call
jl
adc
mov
adc
add
jae
jno
add
dec
lcall
sbb
loope
jmp
xor
inc
mov
sahf
les
mov
pop
add
addl
call
mov
jge
cltd
sar
nop
ret
clc
jns
pusha
mov
and
mov
cmp
mov
cwtl
ljmpw
and
adc
mov
lcall
dec
jo
std
add
scas
insl
aaa
cs
mov
xabort
data16
push
push
mov
push
sbb
lock
push
rolb
cmpsb
stc
sbb
or
adc
cmp
and
sbb
cwtl
es
daa
xor
mov
mov
data16
jae
insl
loopne
sub
add
rcr
fsubrl
cmp
adc
cmp
adc
loopne
dec
and
cmp
cmpsb
adc
pushf
andl
rcr
sub
adc
jge
mov
mov
testb
jo
pop
dec
push
xor
and
inc
xor
sub
adc
xor
mov
jnp
or
ficoms
xor
fwait
or
mov
sarl
sbb
xorb
adc
popa
mov
mov
jle
inc
aaa
xor
cwtl
adc
jns
mov
cwtl
or
sub
scas
movsb
stos
lods
data16
fs
add
or
and
inc
out
or
xchg
mov
mov
je
or
push
inc
dec
sub
sbb
mov
mov
push
push
popa
or
dec
insl
inc
je
outsl
jle
jnp
cmpsb
push
mov
popa
xchg
scas
pop
sub
adc
jmp
outsl
inc
cmp
outsl
addr16
mov
push
dec
inc
push
push
xor
insb
adc
or
inc
push
outsb
movsb
push
loope
xchg
adc
lret
or
inc
divl
outsl
cmp
rclb
mov
inc
outsb
aas
arpl
cmp
sub
rclb
push
jp
jo
dec
outsb
or
aad
dec
popa
repz
cli
push
pop
push
cmp
inc
push
jne
push
jns
subl
pop
jecxz
dec
mov
add
inc
inc
lcall
arpl
cmp
lods
adc
sub
rcrl
inc
outsb
push
jne
inc
js
pop
dec
jg
rolb
sbb
or
adc
sub
mov
adc
mov
adc
adc
and
sub
nop
push
sbb
mov
test
push
mov
dec
jns
addb
or
and
push
pop
lock
push
jae
dec
inc
fstl
add
lods
addb
add
add
ret
add
adc
jnp
inc
loope
sbb
fldenv
mul
or
dec
sub
sub
sbb
call
xor
inc
inc
push
loopne
sbb
jbe
jb
imul
push
lahf
iret
addr16
addr16
jecxz
jb
sbb
push
push
cmp
sub
popa
xor
iret
test
nop
and
xor
push
inc
and
xor
dec
adc
mov
inc
xchg
data16
jne
push
xor
jno
inc
pusha
rorb
and
push
loopne
outsb
bound
push
adc
xor
pusha
xchg
sbb
push
das
sbb
pop
cwtl
add
push
jl
aas
cmp
leave
adc
cmp
arpl
jne
cmp
outsb
je
insb
ss
adc
popa
push
incl
pop
test
push
aas
add
push
xchg
enter
xor
cli
subb
stc
pop
or
pop
adc
xor
or
push
enter
jb
sbb
mov
and
add
add
dec
cmp
imul
xorl
jle
test
shlb
add
xchg
adc
test
adc
test
push
pop
rolb
fmull
push
and
add
cmp
mov
rclb
jnp
mov
mov
cmp
arpl
into
or
jae
cmp
lahf
cmp
xor
sbb
sbb
in
mov
sbb
jg
mov
or
sbb
ficomps
loop
jae
xor
push
sbb
rorb
repnz
xor
loopne
mov
xchg
stc
push
icebp
push
adc
rolb
inc
repnz
lock
dec
mov
or
xor
sbb
and
sub
sbb
pop
dec
js
and
fsubrl
push
or
xchg
or
test
mov
dec
or
test
push
cwtl
popa
rcr
inc
push
and
scas
cltd
add
ja
dec
cs
dec
outsl
insl
xor
popa
fisubrl
and
cmpsl
pop
inc
outsb
out
outsl
cmp
lret
je
jo,pt
push
pop
pop
mov
pop
outsb
mov
jl
sbb
imul
jmp
arpl
xchg
inc
test
jmp
mov
mov
inc
pop
jne
movsl
popa
ret
test
cmp
sbb
push
inc
mov
adc
cmp
push
inc
sbb
cmp
xchg
outsl
cmp
cmpsl
xchg
int
iret
xchg
dec
outsb
dec
leave
inc
outsl
fs
inc
jns
dec
push
push
inc
dec
push
bound
jae
inc
add
pop
and
jne
jne
push
dec
js
inc
jae
push
jge
lods
add
adc
popa
jne
dec
adc
insb
jae
sub
lret
call
jns
js
dec
cmpsb
ret
mov
and
push
inc
cmp
repz
push
push
inc
jne
push
xor
adc
inc
and
orb
mov
xor
adc
or
inc
pop
outsb
jb
xchg
jo
and
insl
imul
js
aad
addr16
adc
push
push
adc
fdivl
int3
jg
fnstenv
inc
or
sbb
push
enter
dec
mov
add
pop
movb
sub
insl
jb
xor
rcr
adc
cltd
sub
inc
sub
cmp
sbb
inc
push
dec
sub
cmp
dec
add
and
inc
xor
sub
gs
adc
inc
pop
xor
push
sbb
push
inc
adc
mov
xor
and
and
adc
dec
xchg
pop
orl
enter
orps
mov
fs
fs
loop
dec
xchg
push
pop
je
je
mov
xor
push
sub
and
cwtl
push
in
cmp
adc
add
sub
rolb
movsl
in
imulb
sarb
clc
xor
xchg
push
nop
sub
dec
adc
push
mov
jne
outsl
xor
xor
xor
gs
xchg
pop
xor
xchg
cwtl
lods
or
xchg
sbb
cmp
xor
lret
es
adc
push
inc
movsl
or
sbb
sub
repnz
jmp
push
and
and
sbb
adc
xor
lret
shll
sub
xor
rcrb
and
sub
cmp
cmp
movb
push
push
xor
inc
adc
xor
mov
push
rdpmc
loop
test
xor
pop
cmp
sbb
dec
aaa
aad
sbb
ret
std
cs
addr16
jb
stos
fstpt
bound
xchg
sub
test
in
stc
sahf
inc
sub
lcall
mov
out
adc
stos
dec
jne
pop
gs
imul
inc
push
pop
dec
test
sbb
and
push
roll
cmp
push
xchg
push
inc
imul
xor
call
inc
push
inc
push
xchg
push
loopne
arpl
clc
mov
out
sub
call
fs
movsb
sub
jl
xchg
and
jle
leave
and
push
dec
dec
xchg
jbe
or
adc
sub
dec
jne
and
push
cmp
pop
dec
cmp
push
mov
repnz
inc
test
rclb
sbb
cmp
movsl
sub
xor
xor
xor
clc
xor
and
xor
mov
ret
dec
sbb
add
pop
and
sbb
adc
push
pop
xor
dec
dec
xchg
and
xor
jecxz
das
xor
cmp
add
sbb
push
addb
shll
testb
sbb
sub
adc
adc
inc
mov
adc
nop
or
lahf
sbb
xor
pop
xor
and
inc
mov
sbb
inc
cwtl
or
mov
inc
or
push
nop
inc
fsubl
xchg
or
mov
stos
scas
cmp
sbb
ds
jne
das
lea
xor
adc
jp
mov
js
adc
inc
mov
dec
je
pop
sbb
sub
sbb
adc
enter
js
test
sbb
je
out
bound
retw
popa
jno
dec
cwtl
imul
mov
insl
jns
in
jae
ss
jb
sbb
pop
enter
sbb
add
mov
int3
mov
mov
arpl
icebp
mov
or
pop
fiaddl
sbb
jne
xchg
sbb
inc
and
dec
sub
xchg
call
or
cltd
imul
mov
aaa
and
hlt
inc
cwtl
lock
mov
inc
dec
xor
and
inc
js
push
dec
inc
inc
cld
into
dec
dec
pop
fldcw
je
lea
push
arpl
inc
pop
and
or
mov
test
sub
add
ret
test
adc
inc
inc
push
push
push
or
clc
icebp
test
inc
push
mov
imul
and
adc
fbstp
push
and
mov
and
insl
popa
jae
imul
jnp
xor
xchg
adc
fadds
and
or
adc
push
adc
movsb
sbb
sarb
int3
adc
int
add
mov
xchg
addl
adc
mov
inc
fwait
arpl
or
or
dec
popf
and
jo
bound
or
fucomp
adc
mov
and
or
insb
add
or
movups
or
shrb
pop
adc
inc
mov
jb
sbb
mov
adc
or
or
push
pop
xor
adcb
inc
jecxz
test
mov
loope
adc
xor
and
mov
and
jp
in
test
or
dec
inc
rcrb
mov
inc
pop
inc
in
mov
or
loopne
mov
dec
push
mov
lock
ficompl
stc
adc
sub
lds
mov
push
adc
inc
dec
dec
push
roll
adcb
cs
arpl
das
or
adc
popa
bound
mov
mov
mov
cmp
out
add
repnz
insb
int3
enter
and
inc
notl
es
xlat
imul
data16
xor
xor
jo
adc
fistpl
ficoms
adc
cmp
sub
and
stos
adc
push
and
sar
sbb
iret
xchg
pop
inc
push
popa
jbe
int3
push
and
outsl
test
bound
inc
dec
push
push
inc
fwait
and
pop
adc
xor
outsl
xchg
cs
push
sbb
popa
outsb
jno
addr16
or
insb
adc
mov
xchg
movsb
jl
jl
mov
cmpsl
sbb
aam
dec
in
jns
dec
sub
out
frstor
sub
cmp
and
mov
gs
lcall
dec
pop
jl
push
jns
js
and
push
popa
insb
mov
cmp
test
addl
push
sbb
int3
pop
jnp
movsb
pop
push
in
dec
inc
scas
xchg
mov
mov
imul
adc
jo
dec
jae
add
and
or
cmp
fisubrl
jb
ds
fs
fists
jmp
jno
cmp
sbbl
push
push
xor
or
cmp
bound
sub
push
jno
push
push
sub
js
dec
inc
xor
push
and
add
lods
cmp
and
xchg
dec
sbb
arpl
xchg
inc
push
dec
iret
inc
or
sarb
insb
jnp
hlt
pop
cmpsb
or
dec
sub
shll
int
dec
xor
je
or
int
inc
pop
ds
jo
les
rcrb
nop
sar
jns
inc
adc
inc
sbb
mov
adc
add
movsb
inc
mov
bound
cmpps
push
xor
sub
inc
inc
inc
fidivl
call
clc
dec
aad
mov
xor
xchg
adc
test
mov
ljmp
inc
adcb
dec
cmp
push
add
cmc
xor
adc
and
xchg
xchg
lcall
jbe
inc
sub
sub
push
test
mov
mov
push
cs
je
cmpsb
rcll
mov
mov
push
push
dec
inc
pop
push
dec
rorb
arpl
jae
in
adc
in
jg
push
inc
sbbb
xchg
push
jns
hlt
lret
gs
dec
push
mov
or
push
jo
test
ljmp
sub
adc
gs
imul
mov
mulb
dec
inc
xchg
xchg
mov
xor
sbb
dec
sub
push
in
f2xm1
lret
push
inc
jno
push
mov
fcompl
les
add
sti
in
clc
mov
xor
in
sub
jl
out
dec
iret
xor
xor
aas
gs
or
and
mov
mov
and
scas
cmp
and
and
push
dec
test
push
push
mov
mov
out
arpl
and
cmpsb
sbb
mov
pop
xchg
call
or
push
outsb
enter
cmc
jns
jmp
imul
mov
jg
jae
cmp
jo
jb
iret
inc
jge
or
aaa
adc
pop
jae
sub
push
stc
sbb
js
mov
insl
iret
push
and
sbb
cmpsb
adc
or
jg
sub
cmp
sub
xor
sub
mov
mov
out
mov
or
cmp
leave
arpl
pop
push
adc
rorl
adc
xchg
sarl
movsb
cli
in
and
cmp
mov
std
sub
jecxz
dec
data16
mov
sbbb
stc
in
cltd
jge
inc
andb
les
jp
cltd
cld
cmp
lock
ret
inc
jl
sbb
adc
mov
adc
sbb
les
and
or
mov
sub
cmc
cs
or
xor
xor
mov
mov
xor
or
inc
add
imul
aaa
shlb
and
je
push
sub
shrb
daa
dec
dec
pusha
jb
xchg
leave
aad
int3
aam
xor
add
mov
mov
outsl
xor
push
int3
leave
mov
jmp
mov
decb
fs
cmp
mov
xchg
sub
test
and
dec
mov
ficomps
push
iret
jl
dec
mov
insb
dec
das
push
cli
cmp
xor
adc
mov
or
and
aam
imul
sub
aas
inc
movsl
push
in
cmp
mov
mov
insb
mov
sub
fs
pop
mov
add
sbb
mov
pop
sbb
mov
xchg
mov
inc
bound
sub
dec
stos
test
xor
loope
and
pop
sub
pop
adcl
adc
dec
push
pop
or
jp
les
pop
fs
imul
daa
inc
outsb
jbe
notl
scas
jmp
movsl
addr16
and
bound
imul
jo
xor
push
adc
lea
add
jbe
push
cmp
mov
mov
add
and
mov
out
cld
mov
add
or
into
sbb
adc
inc
cld
mov
fs
mov
mov
sub
out
aas
mov
scas
inc
push
push
js
lret
and
push
sub
shll
je
jmp
sub
bound
test
insb
insl
test
pop
dec
inc
test
add
xchg
dec
inc
dec
push
decl
sbb
sbb
stos
repnz
popa
push
imulb
add
dec
nop
cmp
pop
das
push
test
into
and
sbb
add
add
lret
adc
and
add
cwtl
or
hlt
fldl
or
sbb
add
testb
add
adc
add
add
leave
lods
sbb
mov
add
add
add
testl
inc
add
ret
nop
sub
adc
in
test
dec
add
add
inc
adc
add
les
lret
and
or
cwtl
adc
pusha
or
xor
test
in
addb
dec
cmp
sub
push
sub
cmp
push
lock
test
add
sbb
add
aam
add
sbb
sbb
push
inc
lea
mov
enter
mov
in
cmp
xchg
or
dec
add
and
or
andl
loopne
xchg
adc
adc
ja
adc
mov
dec
sbb
adc
mov
jbe
sbb
mov
js
mov
inc
jp
mov
adc
mov
and
push
std
add
sti
sti
xor
inc
std
push
mov
and
cmpl
and
jg
add
scas
enter
repnz
push
sub
add
or
cmpsb
inc
icebp
dec
adc
dec
adc
je
sbb
push
cmp
or
pop
sub
adc
adc
adc
sbb
sub
inc
in
xor
cltd
sbb
or
pusha
push
pop
jl
insb
sbb
xchg
sbb
jb
xchg
push
xor
xorb
and
inc
xchg
sub
scas
nop
push
movsb
jo
cmpsl
xchg
mov
lret
xlat
jno
pop
es
add
add
inc
movsb
and
pusha
cmp
loop
fists
or
inc
jle
or
ret
popa
shll
adc
decb
mov
mov
xor
inc
in
inc
iret
mov
in
call
or
or
pop
into
rcrb
or
pop
add
fcomp
loopne
push
xor
xchg
test
enter
cli
or
adc
cmpxchg
adc
push
adc
and
leave
sbb
mov
mov
ret
clc
and
lock
mov
sub
imul
in
mov
dec
sbb
addl
add
add
loopne
mov
adcl
out
cmp
cmpsb
iret
or
jp
outsl
movb
mov
or
mov
mov
cmp
divl
jl
loopne
mov
add
popf
sti
jmp
stos
push
inc
add
repnz
add
pop
stos
cmp
scas
xchg
shr
aam
jne
add
dec
jp
iret
inc
gs
add
xchg
push
cmpsb
scas
mov
inc
or
addl
in
xchg
cmp
cmp
out
mov
out
mov
mov
push
movsl
mov
popa
rcrl
and
add
xchg
clc
repz
mov
fldl
xchg
and
mov
push
pusha
les
push
sti
aas
jno
or
xlat
mov
add
cmp
dec
lea
xchg
outsb
adc
sub
add
loop
pop
mov
icebp
lock
push
and
cmpsl
out
lock
cmpsb
add
mov
add
cmp
aad
pop
mov
std
and
popa
test
ja
int3
stos
in
das
dec
pop
loope
les
mov
xchg
adcb
inc
aas
int
pop
lcall
cmp
lods
push
mov
incl
and
loop
cld
cmp
pop
popa
mov
add
sarl
jl
adc
das
lea
mov
sti
inc
dec
cld
movsl
cmp
cmp
sub
jge
mov
jl
rcr
push
add
arpl
int3
and
cmp
cmpl
inc
xor
lods
cmp
add
xchg
mov
cmp
mov
sbb
cmpsb
add
pop
add
cmp
sbb
and
xor
dec
nop
pop
add
cmpsb
xchg
js
add
mov
cmpsl
add
inc
pop
mov
sub
and
add
scas
into
imul
pop
add
rcr
jge
call
out
pop
push
xchg
add
push
andl
dec
dec
push
gs
std
add
adc
pop
ficomps
add
cmpsb
fcoms
adc
enter
push
dec
pop
mov
jno
inc
pushf
mov
and
mov
adc
jmp
dec
mov
mov
pop
mov
adc
add
adc
xchg
or
and
and
pop
inc
loop
mov
and
add
add
add
movsl
add
add
call
adc
mov
adc
push
dec
and
push
push
mov
and
es
adc
sub
clc
jge
cltd
int3
leave
or
fstl
inc
inc
sub
inc
adc
push
dec
mov
mov
add
shlb
add
inc
call
mov
sbb
mov
or
add
adc
pusha
adc
dec
pop
mov
mov
and
jnp
dec
call
jg
dec
sbb
repnz
nop
inc
mov
xor
pusha
pop
inc
adc
dec
cmpb
nop
stc
mov
jbe
shl
pop
nop
loopne
lock
or
and
add
cld
push
mov
adc
pusha
enter
sbb
and
or
mov
jo
lret
adc
jmp
sbb
negl
inc
add
push
fcompl
popa
xchg
dec
adc
and
pop
dec
outsb
jo
adc
dec
push
mov
jecxz
lea
jecxz
popa
mov
dec
adc
mov
inc
mov
sbb
sub
push
nop
mov
mov
add
mov
inc
dec
fs
cmp
loope
loop
sbb
cmp
test
adc
push
lock
and
cmp
inc
hlt
sahf
movsl
xor
add
adc
orl
test
loope
cmc
or
fbld
pop
xchg
insb
pop
inc
fadd
sbb
addl
push
push
or
int3
sub
xchg
test
push
sbb
or
or
mov
into
rcrb
ds
sub
xor
or
jge
mov
push
in
and
pop
pop
lods
mov
lods
scas
loop
jno
inc
cmp
jge
push
push
cmp
stos
adc
cmp
sub
outsl
shrl
inc
incb
leave
push
movsb
add
xor
add
stos
or
mov
add
nop
andl
mov
push
or
jmp
cld
cmc
add
imull
outsl
mov
je
push
sbb
daa
int3
or
pop
sbb
adc
insl
adc
cmp
and
shrl
inc
mov
addl
inc
lds
mov
bound
jg
add
stos
and
pusha
femms
pop
daa
sbb
adc
rclb
sbb
sbb
clc
add
add
push
daa
sbb
cwtl
and
flds
lea
mov
div
sti
repz
hlt
cli
ja
jae
ljmp
out
pop
push
cmc
sbb
add
repz
dec
idiv
clc
jbe
dec
cli
sti
fiaddl
adc
mul
clc
fcomip
cmc
jp
testb
mov
jnp
jl
sbb
inc
add
inc
les
add
adc
pop
jo
cmp
mov
bound
jge
imul
cmp
sbb
or
pop
add
or
ljmp
ljmp
fstps
mov
or
psrlw
fsub
loope
xchg
sub
stos
scas
in
jb
popf
mov
mov
icebp
fnstcw
fwait
dec
lahf
aaa
mov
scas
test
jecxz
mov
mov
mov
mov
mov
or
cmc
mov
add
mov
adc
or
or
add
and
inc
xchg
push
lcall
sarl
js
fnstcw
fidivrl
aad
leave
rorb
outsl
add
push
dec
daa
or
dec
pop
jle
enter
xchg
jmp
add
stos
add
cli
repz
call
jg
xchg
mov
stos
shll
out
sarb
xchg
lcall
mov
rorl
sub
mov
rol
out
mov
call
movb
mov
mov
cs
pop
scas
pop
in
mov
fiadds
out
ja
scas
cld
mov
add
loope
or
pop
add
cmp
mov
ret
jmp
int3
imull
fdiv
imul
adc
daa
addr16
div
jne
in
xchg
rolb
movsb
jns
dec
sub
jae
decb
jno
inc
pop
sbb
test
add
mov
fstps
cmpsb
mov
cwtl
call
jp
inc
mov
loope
jb
mov
nop
push
cmp
mov
loopne
mov
cs
lea
cmc
pop
or
or
aam
pop
out
cli
bnd
decb
add
inc
sbb
adc
inc
xchg
shll
push
repz
xor
outsb
push
insl
xchg
push
push
insb
or
ss
jb
f2xm1
xchg
les
adc
repz
jb
push
lret
lret
std
test
lock
or
fdivs
hlt
repz
in
add
mov
sarb
loop
ss
rorb
into
pusha
mov
test
fildll
cmc
rol
rolb
lret
xchg
fisubs
sar
in
into
add
xchg
in
stc
lock
mov
sbb
add
or
addb
add
mov
ret
push
stc
pop
imul
or
mov
add
repz
mov
adc
lods
cmp
add
or
and
in
shlb
dec
ja
mov
jo
test
jo
std
or
int
fsubr
sbb
repnz
int
jo
push
mov
shll
pop
leave
in
shll
add
cli
fidivrs
aad
mov
addl
add
inc
mov
mov
icebp
sub
insb
xlat
mov
and
mov
add
inc
push
pop
dec
ret
cmp
ret
pushf
insl
insb
insl
add
stos
cmc
mov
jno
mov
add
pusha
sub
sub
aad
adcl
outsb
jecxz
pop
push
mov
fadd
insb
sbb
xlat
xor
repz
push
mov
or
add
sbb
jno
scas
out
push
out
hlt
in
std
jmp
mov
adc
adc
sub
hlt
arpl
icebp
leave
out
icebp
cli
push
cli
xor
aad
incb
inc
xchg
inc
add
and
pop
adc
mov
lds
pop
repnz
sbb
out
xchg
lods
fwait
pop
outsl
daa
mov
push
add
dec
xchg
int3
pusha
mov
flds
jecxz
add
icebp
arpl
ficomps
mov
je
nop
sahf
lcall
sub
add
shlb
out
pop
push
xchg
icebp
add
adc
ljmp
nop
out
imul
xor
jge
sub
lock
jns
add
inc
aas
test
mov
stc
movsb
xor
pop
cwtl
add
aaa
sub
clc
jb
stos
test
jg
xor
mov
leave
subb
cmp
pop
push
xor
add
lcall
fsubrl
lds
gs
in
dec
xchg
jmp
imul
dec
sub
mov
popf
enter
pop
movsb
lods
push
xchg
lret
mov
jge
sbb
mov
and
out
push
push
mov
pop
push
call
out
jno
jmp
sub
add
dec
mov
push
imul
andps
lds
cmp
out
pop
jp
hlt
jnp
stos
int3
icebp
add
add
ljmp
add
loop
mov
fidivs
mov
add
xchg
insl
fildl
repnz
repz
fwait
jo
or
nop
imul
repnz
into
out
xchg
mov
add
mov
add
mov
nop
pusha
adc
sbb
aad
lret
pop
and
inc
mov
mov
jns
add
cmpsb
add
cmp
rclb
push
outsb
jmp
idiv
frstor
jl,pt
and
fstl
add
lahf
adc
pusha
pop
xor
movsl
add
pushf
jecxz
cwtl
fbstp
in
movsl
loope
stos
push
out
pop
shl
outsl
arpl
icebp
leave
aad
lock
add
in
imul
popf
les
lds
sbb
jb
pop
mov
mov
mov
cmp
add
adc
in
mov
add
sub
stc
mov
push
push
xchg
push
mov
outsl
movsb
pop
repz
pop
jmp
popf
repnz
out
popa
lcall
mov
pop
jg
ffree
cltd
lds
out
maskmovq
jno
leave
dec
daa
adc
in
lds
lds
lea
addr16
push
push
cmp
adc
cmp
test
jnp
rorl
adc
loop
roll
test
lock
adc
andb
mov
pusha
push
pop
and
loope
cmc
pop
imulb
outsl
jp
mov
xor
ds
inc
lock
add
mov
pop
inc
fiadds
push
rclb
lds
push
add
xor
ja
subb
add
sub
dec
add
mov
cld
insl
fdivl
add
stc
cmp
xor
daa
outsl
fld
adc
pop
add
mov
mov
mov
stos
iret
cltd
pop
xor
scas
push
mov
stos
nop
add
sbb
call
outsb
mov
mov
repz
inc
mov
stc
rcll
cwtl
lods
lret
data16
shlb
sub
dec
cmp
loopne
mov
jmp
xorl
lret
xor
cwtl
xchg
cltd
in
repnz
add
fisubrs
jnp
test
in
fwait
rcrl
mov
mov
push
pop
mov
aas
lods
jno
lods
sarb
iret
mov
outsb
sarb
hlt
fs
inc
outsb
imul
loope
xchg
mov
inc
or
add
aad
dec
ja
jbe
push
or
mov
rorb
ljmp
add
dec
mov
pop
stos
mov
nop
xchg
mov
aaa
mov
shrb
inc
pop
sbb
add
adc
mov
sbb
aad
call
jg
push
repz
add
pop
xchg
icebp
xor
jo
add
add
fsqrt
push
fs
icebp
mov
adc
stc
adc
jl
push
fistpl
cmp
imul
pop
out
fidivrl
sbb
insl
ss
data16
inc
aas
push
shr
cmpsb
inc
ret
fcmovb
clc
mov
fwait
mov
jmp
xor
add
int
shl
cmpsb
rclb
inc
iret
out
xchg
cld
xchg
mov
mov
inc
int3
lcall
add
or
jns
je
cmpsb
fimull
test
loopne
xchg
mov
jmp
nop
xor
sub
cs
orl
adc
fistpl
cmpsb
add
mov
mov
pusha
mov
mov
add
add
lods
and
lock
sbb
insl
jmp
cmp
js
in
repnz
mov
daa
jbe
pop
stos
cmpsl
pusha
loope
pop
pop
ljmp
jnp
hlt
sarb
sahf
repnz
sbb
mov
adc
sub
sub
jmp
je
push
int3
lds
xchg
mov
cs
jecxz
pusha
aaa
rolb
imul
xor
addl
ss
xor
mov
inc
mov
addr16
data16
pop
sbb
js
sahf
lock
insb
dec
cmc
cmpsl
mov
inc
sub
xor
push
pusha
mov
cmpsb
fsubl
or
cwtl
test
dec
sub
push
fdiv
imul
inc
outsl
or
adc
sub
mov
and
pop
scas
and
stos
fldcw
test
mov
add
xor
fildl
outsl
out
push
nop
lock
pop
out
push
add
mov
lods
and
dec
in
rcll
push
popf
or
dec
push
push
pop
call
mov
mov
aam
pop
inc
addr16
xor
sbb
clc
shl
sti
fwait
add
dec
or
add
daa
sub
jmp
dec
or
shrl
ficompl
scas
xor
cmp
push
imul
mov
sahf
aam
mov
lret
jb
enter
dec
xchg
sub
out
lock
or
je
insl
dec
cmpsb
xlat
test
ja
mov
inc
jl
fldl
test
mov
les
add
outsb
shl
jo
sti
lahf
push
ret
stc
pcmpgtd
or
add
push
jno
movsl
jmp
jne
cmp
mov
add
cmpsb
sub
scas
xor
mov
fadd
testl
cltd
icebp
adc
stc
sti
mov
push
pop
xchg
icebp
sub
repnz
leave
clc
pop
lock
push
dec
andb
cmc
das
push
xchg
loopne
repz
dec
out
and
pop
push
fists
pop
jge
or
loop
lcall
dec
js
mov
mov
movsl
lcall
mov
in
mov
stc
push
add
mov
dec
push
xor
push
scas
test
push
pop
mov
ljmp
xchg
shlb
cmpl
popf
loopne
pusha
fbstp
fwait
jge
rclb
divl
mov
jo
clc
jne
mov
add
lcall
cmp
cld
arpl
pop
xor
inc
hlt
decl
rclb
dec
mov
mov
fadds
dec
mov
push
sbb
lea
repz
imul
sub
imul
push
and
sub
jb
and
pop
cmp
cld
bnd
add
dec
dec
iret
imul
lea
push
pop
fs
sbb
inc
inc
cmp
test
jecxz
mov
add
shrb
lahf
lretw
in
fptan
push
insb
dec
mov
xor
xchg
xchg
sahf
and
pop
mov
mov
loop
test
and
mov
ljmp
xchg
push
in
insl
lret
bound
fstl
cmpsb
and
fisubl
push
xchg
pushf
call
test
cmpsb
aad
in
daa
push
lcall
fisubl
pusha
into
cmp
insb
out
jbe
fidivrs
nop
mov
fidivs
pop
jae
in
mov
and
add
cmpsb
leave
mov
lock
pop
inc
xchg
lahf
push
dec
int
or
mov
push
mov
mov
addl
movsb
jno
loope
mov
xor
sahf
loope
mov
mov
insb
fmull
mov
fiadds
stc
pop
stos
mov
xor
mov
test
repnz
outsb
push
sbb
scas
pop
imul
add
push
popf
and
and
and
cmp
jmp
sbb
jb
cli
int
push
sbb
push
pop
outsb
pop
pop
scas
add
inc
test
repnz
inc
dec
mov
in
jl
fwait
push
mov
movsb
mov
insb
add
sti
popa
xchg
add
loopne
outsb
jno
mov
xorb
stos
fldenv
add
xchg
incl
stos
sti
pop
inc
adc
fldl
mov
jecxz
fisubl
adc
loop
sbb
lcall
push
xlat
loopne
xor
popf
inc
mov
xchg
mov
mov
loopne
jl
movsb
mov
popf
pop
test
push
lret
cmp
mov
and
cmp
popa
stos
mov
rcll
xchg
mov
ds
xchg
jp
out
xchg
sub
out
out
pop
and
into
add
add
inc
lods
push
rcrl
loop
xchg
pusha
enter
xchg
adcl
xchg
mov
lea
loop
jecxz
mov
mov
call
fldcw
leave
cltd
jae
inc
add
jbe
push
add
sbb
mov
fmuls
cld
and
pop
sbb
daa
or
or
mov
or
pop
adc
and
push
test
mov
pop
sti
sbb
addl
or
fisubrl
repz
mov
mov
movsb
shrl
dec
and
cwtl
loopne
add
jnp
fwait
lcall
loope
js
xchg
insb
lret
inc
xchg
lret
faddl
xor
and
jo
ss
jmp
xchg
aad
add
ja
test
sub
inc
insl
xor
dec
mov
pop
stos
ss
clc
cmp
fimull
sbb
pop
jb
push
fwait
test
lea
mov
add
sbb
loopne
sub
lcall
fwait
loop
popf
pushf
repz
mov
mov
fadd
xchg
cltd
mov
ret
mov
fildl
add
push
push
or
add
or
insl
and
mov
jbe
pop
mov
ficompl
cmp
cmp
or
shrb
pop
mov
cmp
jae
pop
mov
popf
mov
sbb
dec
popf
adc
mov
fwait
loopne
mov
mov
jg
xchg
mov
adc
subb
shll
xor
inc
xchg
adc
repz
or
arpl
adc
lods
cmpsl
leave
out
popf
or
or
dec
xor
push
pop
lods
xor
inc
xor
mov
shld
xor
and
and
test
insl
xor
xor
std
jecxz
out
testl
pusha
cltd
and
arpl
stos
lods
mov
xor
mov
cs
loope
jo
mov
inc
add
push
mov
xchg
jecxz
mov
lret
xchg
xchg
sbb
sub
pop
jno
cmp
sti
sarl
push
and
sbb
out
xlat
dec
adc
lock
inc
insl
adc
or
rorb
fwait
xor
dec
push
add
es
or
fimull
enter
aaa
cmp
xor
lcall
punpckhwd
pushf
mov
mov
test
mov
add
fbstp
add
mov
sub
stos
sbb
pop
sub
xor
cmp
mov
pushf
shll
sbb
lret
enter
xor
popf
pop
sarb
lods
mov
xlat
lods
mov
loopne
cmp
mov
lret
cwtl
pop
pop
insl
subl
mov
push
dec
sysexit
jbe
push
orb
lcall
shrb
mov
arpl
inc
inc
daa
mov
adc
adc
push
pop
pop
jns
les
jbe
ja
jno
sbb
sub
push
mov
rcrb
outsl
mov
loop
inc
push
inc
inc
or
daa
scas
mov
pop
adc
add
push
pop
and
mov
add
cmp
int3
and
bndldx
cmp
pop
pop
pop
pop
dec
dec
push
xor
aas
push
push
les
loop
jno
inc
sbb
andb
fbstp
inc
mov
les
testb
sbb
popa
or
add
jl
ljmp
pop
dec
dec
push
inc
add
rcll
lock
xchg
add
insl
outsb
les
loop
sbbl
or
or
repz
test
popf
pop
clc
incb
rol
inc
inc
dec
test
and
sbb
enter
and
je
jae
subl
add
and
and
jno
sbb
push
ljmp
mov
clc
jge
mov
push
pop
and
jg
dec
dec
dec
mov
xorl
mov
jo
mov
loopne
sbb
pushf
mov
push
aad
cmc
addr16
and
in
inc
mov
loop
push
push
push
inc
inc
sub
push
dec
mov
mov
mov
add
push
adc
scas
fidivl
decb
xor
sbb
fisttpll
xor
add
into
mov
mov
fcmovb
mov
loope
scas
pop
mov
addl
add
jb
out
ljmp
adc
cmp
add
inc
sub
push
xor
push
xor
in
xlat
cld
add
sbb
inc
das
aam
dec
sbb
push
mov
mov
jbe
xor
cmp
or
or
inc
inc
daa
pop
inc
cmp
imul
mov
jne
xchg
fs
push
mov
andb
or
dec
and
cmp
repnz
add
adc
or
sbb
inc
add
dec
sbbb
andl
js
movsb
pop
enter
int3
xchg
pop
rorb
push
pop
or
push
adc
and
mov
add
sub
cmp
pop
or
push
jo
jae
fwait
enter
iret
add
pop
fsubs
push
aam
sbb
adc
inc
loopne
mov
pop
xor
mov
or
inc
mov
aad
data16
mov
inc
or
mov
and
add
add
cmp
or
or
jge
pop
lods
add
add
or
add
bnd
adc
sbbl
pop
add
or
cmp
inc
incl
bound
bound
movsl
inc
cmp
adc
push
fimull
mov
adc
or
and
push
pop
or
into
pop
loop
andl
fs
jmp
push
in
sarb
adcb
imul
shll
push
mov
sbb
mov
sahf
jle
sbb
add
jl
mov
jmp
enter
outsl
push
jge
mov
cs
push
shlb
sub
popa
push
ds
mov
add
out
cmp
add
out
in
mov
pop
push
stos
push
push
dec
daa
lcall
xor
push
imul
sub
cmpsl
mov
js
sub
fbld
wrmsr
sbb
pop
cmp
popa
push
inc
dec
xchg
add
out
cmp
outsl
int
add
jb
mov
push
es
push
aas
xchg
int
pop
movsb
sub
jno
jno
sbb
mov
add
cmp
and
daa
pop
aas
push
dec
andl
pusha
or
mov
stos
add
jl
mov
imul
jns
cli
clc
loopne
js
mov
stos
or
sbb
sbb
andl
clc
push
pop
cmp
and
dec
jnp
jbe
js
stc
add
mov
cmpsb
pop
mov
andl
addb
xor
pop
mov
xlat
dec
sub
pop
lods
push
push
mov
add
push
add
das
sub
add
dec
jno
stos
or
adc
add
out
jle
lcall
test
xchg
or
cmp
mov
daa
mov
push
dec
push
mov
int
lcall
adc
call
add
or
or
sub
xor
inc
arpl
fwait
in
xorb
push
xchg
jp
mov
jns
push
dec
pop
test
std
das
fneni(8087
mov
add
and
mov
mov
push
add
pop
and
pop
jo
pop
js
jge
outsb
imul
xorb
push
lcall
jb
add
and
std
jbe
pop
add
pop
add
sbb
pop
xor
ss
imul
dec
xor
arpl
pop
sub
pop
jne
test
popf
add
mov
push
add
mov
jmp
mov
stc
jle
pop
stc
and
in
jle
pop
scas
mov
jecxz
test
movsb
jmp
jae
xlat
out
cmp
into
add
cmp
mov
pop
fstpl
ja
out
add
sti
stos
vpmacsdql
lods
mov
frstor
mov
dec
push
fwait
pop
inc
pop
dec
mov
cli
lahf
pop
in
aam
int
data16
pop
ds
and
pop
pop
dec
dec
and
mov
iret
xchg
imul
xchg
jns
xchg
imul
xchg
pop
dec
xlat
sbb
std
sub
jno
in
insb
mov
xor
lcall
jl
lds
cltd
sbb
inc
rorb
push
xchg
pop
jae
dec
jg
mov
pop
push
mov
jns
push
pop
mov
mov
fisubrl
pop
push
movsb
popf
rclb
sti
imul
mov
mov
mov
mov
inc
repnz
mov
add
jp
data16
jbe
push
mov
xchg
lcall
ljmp
aam
ljmp
sahf
lahf
jns
jmp
daa
xchg
push
or
dec
sub
and
mov
sbb
mov
mov
mov
cmc
mov
lcall
and
aam
cmp
dec
mov
and
movsl
adc
mov
inc
jns
lret
cmc
aaa
pop
push
test
push
rclb
add
push
push
dec
or
cltd
cmpsb
movsl
or
cld
fisubl
cmp
lahf
rcrl
cmc
cli
dec
dec
cli
iret
push
stos
lds
push
xchg
cmp
xchg
fldenv
pop
rcrb
add
mov
lahf
icebp
xchg
jg
std
dec
pop
aam
popf
aad
out
ja
xor
mov
sbb
mov
add
mov
mov
mov
fst
dec
dec
repnz
sub
lret
add
mov
and
pop
dec
insl
inc
lret
add
ljmp
arpl
mov
js
sub
lods
mov
repnz
sbb
inc
int3
mov
imul
in
jmp
daa
dec
std
xor
ror
jne
xor
idivb
bound
inc
ljmp
test
xchg
cli
dec
jns
lods
mov
pop
cld
popf
cmp
aad
xchg
pop
mov
pop
gs
call
stos
and
in
mov
mov
scas
movsb
lahf
dec
hlt
bnd
cmp
pop
mov
cmp
and
int3
push
in
pop
mov
dec
pop
lret
pop
lods
aad
std
dec
pop
repz
add
sub
xor
lret
pop
in
jle
push
ljmp
imul
dec
stos
dec
pop
mov
out
mov
fcmovb
mov
mov
daa
stc
and
cs
dec
fwait
repz
mov
std
outsl
pop
cli
pop
xchg
mov
lods
jl
add
add
cmp
mov
ljmp
cmpsl
mov
stc
arpl
sub
mov
das
aam
add
and
push
jb
sahf
mov
loop
mov
xchg
out
lods
mov
jae
jl
lret
fldl2e
xlat
ljmp
xchg
sub
pop
out
js,pt
inc
add
pop
mov
cli
pop
test
ljmp
stc
in
cld
add
aas
pop
mov
pop
rcr
cld
xchg
push
mov
add
clc
pop
loope
ljmp
out
das
adc
inc
or
mov
rcrl
fwait
inc
or
ficompl
lds
add
in
mov
jle
sub
lods
fdivrl
data16
mov
add
sbb
in
jmp
mov
adc
sbb
in
dec
or
popf
sahf
ds
pop
aad
add
add
or
xchg
cmp
cmpsl
sbb
hlt
repz
dec
insl
cwtl
mov
or
add
std
gs
sarl
dec
push
cmp
aam
lret
cmpsl
pop
popf
movsb
lods
into
jmp
lds
cmp
loope
mov
mov
pop
mov
pop
aas
push
mulps
mov
mov
adc
int
imull
shlb
add
xchg
js
add
mov
add
mov
add
cmp
add
leave
push
jl
lods
add
and
cmc
fimull
das
or
testb
adc
test
test
xchg
sub
imul
pop
sbb
test
negb
sahf
test
ss
mov
iret
nop
xchg
les
cmpsl
dec
mov
push
lret
jecxz
xchg
mov
lahf
je
mov
fisttpl
daa
mov
mov
add
or
add
mov
mov
out
cwtl
xchg
xor
mov
and
popf
mov
cmpsl
mov
push
pop
push
dec
pop
into
xor
xchg
or
lahf
add
pop
mov
add
inc
or
mov
lret
xor
mov
aas
pop
mov
lret
rolb
insb
cmp
cwtl
filds
out
out
sub
push
das
or
jecxz
shrl
mov
aaa
ss
adc
repz
mov
xchg
loop
fucomip
mov
lcall
add
jns
addr16
repnz
mov
add
pop
repnz
xlat
out
ja
shr
add
mov
mov
ja
pushf
outsl
ljmp
cmp
jge
ret
sarb
aas
mov
pop
movsl
add
sbb
and
push
jmp
push
push
add
mov
cmp
cli
out
rcl
push
mov
out
mov
insl
or
fistl
mov
or
mov
and
push
mov
add
out
loop
mov
repz
xor
test
movsl
int
aam
adc
iret
in
idiv
pop
cld
clc
cmp
add
ja
dec
popf
outsl
outsb
jns
outsb
insl
pop
cmp
hlt
sti
sub
das
int
jl
sti
test
lret
arpl
mov
or
and
popf
mov
jnp
daa
lcall
les
jb
add
cwtl
dec
cmp
xchg
into
add
call
mov
jnp
cmp
popf
xchg
inc
add
aas
shll
out
lahf
outsl
cmp
int
inc
or
mov
fimull
or
push
pop
add
lds
mov
pop
imul
sahf
xchg
jae
mov
movsl
cltd
int
or
add
push
fmull
lret
repz
aam
push
cmp
jle
sar
pop
ds
addb
xchg
mov
iret
sahf
pop
ret
mov
xchg
or
add
ja
lret
jg
mov
pop
fincstp
add
xlat
pusha
mov
rcl
or
mov
xlat
popf
fcompl
sub
fwait
rorb
clc
imul
pop
jbe
in
adc
into
das
jge
ss
or
sahf
cltd
jnp
adc
and
popf
insb
gs
in
xor
adc
or
mov
sti
adc
inc
cmp
stos
in
mov
mov
imul
in
add
mov
xlat
les
pop
sub
mov
cmp
enter
je
dec
cmp
or
mov
mov
cmc
xchg
xor
sahf
fs
iret
inc
jg
lahf
push
mov
stc
mov
int
sub
pushf
pop
iret
out
xlat
repz
mov
repz
xchg
mov
imul
loope
add
mov
or
addr16
clc
sarb
push
sbb
sbb
push
sub
mov
pusha
or
add
push
push
add
imul
je
push
testb
lock
xacquire
xchg
push
fidivl
lret
sahf
lcall
dec
fwait
pop
out
outsb
dec
in
xchg
add
push
mov
insl
clc
add
jle
pop
add
shrl
ficomps
jbe
jae
or
mov
arpl
int3
adc
xchg
mov
fbld
incl
lea
cli
iret
mov
push
cmovae
xchg
shrd
dec
ficoml
adc
lds
xchg
gs
int3
orb
ds
and
ljmp
cmp
fstp
lea
dec
jne
add
dec
sub
or
imul
addl
mov
and
push
addb
cmp
mov
repz
filds
ret
movsb
in
and
push
fimuls
mov
add
lods
loopne
sub
fwait
push
mov
add
pop
sahf
cwtl
pop
call
addr16
cmp
and
mov
movsb
mull
inc
pop
mov
mov
mov
seto
in
cmovbe
cmp
bound
movsb
and
or
cli
in
roll
add
cld
ljmp
jns
jb
sbb
mov
cs
pop
fisubrl
pop
and
xor
lds
pop
jge
mov
insb
movsl
mov
mov
cmp
add
pop
or
rcrb
repnz
add
dec
mov
cwtl
or
adc
je
push
int3
lods
addr16
xchg
cmp
push
pop
dec
jae
mov
and
sbb
jne
imul
outsb
add
rcrb
push
or
sbb
ret
sahf
aas
fnsave
pop
pop
imul
mov
mov
push
or
adc
pop
cs
or
imul
mov
mov
call
mov
in
push
sbbb
xchg
mov
test
sub
lods
je
mov
sbb
inc
inc
adc
popa
out
andl
add
xor
jl
lret
and
add
add
imul
lods
sbb
add
add
aad
scas
imul
dec
in
pushf
dec
add
ficoms
pop
repnz
addb
pop
sarb
jns
jmp
loope
pop
add
lahf
xchg
shlb
popf
inc
outsb
lods
sbb
arpl
popa
mov
dec
push
xor
sahf
js
sub
fidivs
or
add
out
shlb
mov
jae
mov
movsl
pop
add
xchg
push
pop
test
call
aad
xchg
mov
rcrb
push
ds
adc
lret
jle
bound
js
xchg
add
push
jg
fdivs
sbb
add
pusha
int
fs
add
pop
pop
sub
mov
xchg
add
push
or
add
ljmp
test
cmp
xor
stos
inc
cltd
daa
fstpt
loope
pop
int
sbb
mov
std
adcb
into
xorl
and
dec
je
push
xlat
adc
pushl
imul
movsb
mov
push
int
jmp
xor
sub
fidivs
jb
add
sahf
js
push
xchg
or
mov
pop
add
into
aaa
jno
je
pop
push
dec
sbb
call
jg
push
mov
push
xchg
fwait
cwtl
test
xor
pop
mov
xchg
addr16
leave
lret
jp
mov
add
sub
mov
shlb
xor
cmp
push
push
cmp
fs
ljmp
sbb
popa
jnp
add
inc
or
jne
imul
daa
dec
or
pushf
hlt
xor
imul
int
jnp
lahf
and
adc
and
dec
clc
sarb
mov
xchg
mov
inc
mov
js
mov
push
jnp
jb
lock
lea
or
sbb
or
push
mov
and
sahf
outsl
cmp
test
lock
pop
dec
and
xor
add
cmpl
adc
mov
add
loopne
cmp
mov
gs
gs
out
xor
mov
push
xchg
jno
mov
add
pop
sbb
or
or
into
addr16
sub
lret
push
dec
cs
sub
mov
cmp
lods
inc
out
jl
rol
loopne
pop
add
dec
in
and
inc
lret
inc
imul
outsb
push
inc
push
add
jg
shrl
add
jb
shll
dec
test
das
pop
imul
mov
stc
push
dec
sub
cmpsb
sbb
test
stos
pop
mov
xor
pop
adc
pop
lret
or
push
xor
mov
mov
pop
popf
sub
or
int3
mov
adc
jno
dec
push
rclb
test
inc
sbb
pop
pop
adc
leave
add
or
outsl
imul
push
mov
add
addr16
push
mov
ret
and
add
pop
pushf
daa
fistpll
mov
mov
pop
pushf
movl
adc
mov
lahf
sub
lods
mov
push
pop
sub
adc
sbb
imul
dec
cmp
mov
mov
sbb
bound
hlt
call
test
lar
add
push
add
jb
mov
dec
lock
sarb
fwait
mov
in
loop
mov
popa
or
or
orb
mov
test
clc
sub
pop
xchg
leave
xlat
or
outsl
xchg
add
add
popf
je
ljmp
jge
lods
add
mov
sub
push
push
sbb
jg
xor
test
orb
xor
push
lods
shlb
cmpsl
insb
xchg
in
sub
sbb
negb
dec
pop
lahf
outsb
cmp
push
rorl
mov
mov
adc
add
pop
jmp
or
bound
into
int3
aam
lret
cmc
ds
cmpl
xlat
out
aam
rcrb
pop
pop
dec
adcl
mov
cmpsl
rclb
pop
js
xchg
loop
jge
stos
pop
mov
or
aas
les
add
sub
xor
lret
pop
dec
adc
int
dec
sub
cmpsl
cwtl
nop
add
fdivrs
lds
in
lahf
lods
int
jge
cmp
push
fbld
in
sub
add
not
mov
addl
or
fcmove
ret
leave
out
fcoms
cmp
cld
dec
test
xchg
sahf
xchg
mov
cmp
and
mov
xchg
lock
jb
mov
rcr
out
cmp
xchg
rcll
jbe
ljmp
cld
xor
sub
pushf
mov
movsl
inc
pop
aas
fistpll
rcrl
out
aaa
pushf
clc
push
incb
xchg
inc
mov
sub
mov
pop
jmp
mov
jns
int
arpl
adc
out
add
xchg
pop
imul
add
test
sub
outsb
add
pop
jno
stos
adc
lret
or
sub
iret
mov
and
iret
testb
xlat
cmp
pop
or
dec
cmp
add
insb
std
sbb
cmp
flds
outsl
fcmove
inc
or
aam
push
int3
sub
mov
add
leave
rcll
sbb
dec
icebp
out
xchg
out
push
adc
lods
and
push
popf
ret
aad
jns
outsb
jae
jae
add
leave
mov
test
aam
jge
sub
jle
pushf
push
jmp
lret
rclb
or
fdivrp
pop
add
iret
shrl
in
scas
fwait
xor
test
cmc
sti
lcall
and
jno
pop
fsubr
sahf
mov
dec
in
inc
in
mov
out
in
mov
les
lret
mov
xchg
sahf
xchg
jmp
xor
mov
ss
pop
mov
adc
jge
xor
or
addr16
xor
push
jae
add
or
dec
sub
or
xchg
mov
iret
into
mov
jbe
push
xchg
xchg
bound
cmp
int
stos
imul
mov
out
xchg
jae
jmp
ror
and
decl
out
mov
gs
cld
mov
hlt
mov
aas
fildll
mov
sbb
jmp
imul
roll
icebp
inc
or
lods
push
fs
fnstenv
idivl
sub
sahf
pop
lret
int
cmp
xlat
adc
rolb
or
cltd
sub
or
push
dec
int
add
repnz
cmpsb
or
fwait
in
sub
pop
ret
pop
loop
in
aad
loop
pop
clc
into
movsb
jmp
stos
adc
retw
pop
test
in
pop
mov
fistpll
das
add
pushf
jmp
adc
jg
shl
sbb
jp
insb
shr
mov
lahf
loope
dec
cld
shlb
adc
or
sub
fidivrl
and
mov
imul
push
fs
xor
pushf
test
movsb
scas
jns
fsubrs
divb
jb
cwtl
aas
fidivl
sbb
shl
jae
hlt
cmc
xchg
cmp
mov
xor
mov
add
lods
fisttpl
in
cmp
adc
sahf
pop
dec
add
jmp
rclb
mov
movsl
mov
xlat
stos
sub
xlat
out
jge
lods
pop
jl
rcrl
clc
loope
lret
add
leave
jg
shll
jo
xchg
push
lret
xor
add
add
add
adc
fld
out
lret
mov
repnz
shll
mov
mov
imul
dec
nop
ror
pushf
pop
enter
shlb
neg
mov
jecxz
sub
pop
xchg
push
je
pop
into
cmpsl
mov
popf
mov
imul
lret
sub
movsl
inc
outsl
lods
insb
negl
mov
in
or
dec
outsl
jmp
bsr
jmp
rol
ret
mov
mov
push
or
test
add
jne
adc
outsl
das
lods
mov
jp
mov
mov
push
adc
inc
or
xchg
and
into
push
rcr
cmp
cmpsl
insl
das
sub
imul
sub
xor
pop
push
int
ljmp
pop
dec
or
sub
ds
aam
jmp
dec
out
pushf
jmp
sti
jae
pushf
out
outsl
leave
std
xchg
adc
mov
rorl
pop
int3
shlb
loop
cmc
mov
inc
or
in
jo
add
sarl
stos
insl
imul
movsb
scas
jbe
push
rep
mov
imul
jmp
jg
sub
mov
xchg
lds
add
ret
cmp
xchg
xor
adc
rclb
pop
out
jmp
rcll
test
xchg
sub
push
lahf
lds
and
fs
jnp
mov
lret
roll
mov
dec
pop
cmp
sub
or
adc
leave
out
dec
jno
imul
pop
push
fcmovbe
dec
lret
sub
push
movsl
pop
stc
jecxz
out
das
lcall
js
or
lret
aad
add
repnz
shrb
fmull
sar
cld
sar
rclb
xlat
adc
aas
or
xor
mov
dec
sbb
scas
cld
push
rolb
add
or
insl
add
in
shrl
push
int
sub
imul
mov
movsb
in
xor
mov
xchg
jge
sar
lret
movl
add
fdivr
repnz
xchg
fwait
pushl
cltd
sbb
sub
aas
xchg
fisttpll
dec
sbb
jne
jo
xor
lahf
insb
xor
jb
mov
cmpsl
sti
popf
enter
insb
in
or
jbe
pop
mov
arpl
xchg
stos
lret
mov
rcl
lds
add
lret
hlt
scas
cmpsb
jle
or
jbe
add
cmp
sti
fisttpl
xchg
mov
rcrl
das
mov
jne
pop
jae
inc
add
int
ret
arpl
push
fstpl
lods
shrl
mov
lret
adc
mov
std
sahf
xchg
dec
push
lret
lahf
cltd
pop
mov
mov
pop
lahf
aam
add
push
in
cs
pushf
cli
dec
je
xchg
imul
cmpsl
ljmp
mov
in
cmpsl
push
mov
add
inc
adc
scas
sub
mov
mov
push
lret
fstl
pop
fiaddl
pop
mov
xchg
leave
cltd
sub
jmp
movsb
fimull
std
or
aad
sahf
cmpsl
dec
test
cmpsb
add
sub
out
xor
ljmp
pop
mov
jne
mov
in
mov
into
inc
push
cmp
ficoml
push
addr16
test
mov
lods
sarl
push
cmp
cmp
lahf
push
xor
imul
sub
lret
jae
in
add
fistpl
mov
pop
stc
movsl
cld
aad
ljmp
sub
js
or
inc
aas
lret
jg
fxch
add
cltd
mov
int3
push
mov
movsl
cli
jg
add
repnz
dec
in
xchg
jbe
jbe
jae
scas
mov
cmc
out
into
inc
dec
sub
add
iret
inc
xchg
add
in
fcmove
icebp
movsb
repz
outsb
lret
negl
mov
into
test
pop
and
xchg
into
mov
ds
fucomip
into
sarb
movsl
dec
fs
das
jmp
dec
or
add
insl
add
pop
into
movsl
stc
aad
adc
imulb
jnp
cmp
shrb
pop
lahf
push
sahf
xchg
cmpsl
push
jno
imul
push
add
jmp
lcall
jbe
or
sub
sub
pop
dec
fnstenv
pop
xchg
mov
jno
pop
aad
std
xor
sti
imul
add
lcall
jg,pt
jnp
imul
cmp
clc
std
gs
jle
iret
cmpsb
arpl
lcall
mov
cs
adc
push
gs
sahf
cwtl
pop
xchg
adc
jecxz
dec
stos
jp
mov
add
add
sti
call
and
aas
clc
lea
jb
ret
into
lds
push
mov
movsb
cmp
add
lods
lds
dec
add
inc
stc
lret
hlt
test
mov
mov
pop
push
pushf
pushf
rorl
cmp
iret
lock
addr16
sti
jno
repz
pop
leave
negl
fidivl
or
fstps
shlb
pop
adc
out
cld
cmp
pop
jle
mov
dec
sti
sub
out
into
sub
jle
adc
mov
lret
add
lds
into
xor
sub
push
mov
jb
adc
xlat
or
insl
ficoml
lcall
cli
cmpsl
insb
pop
shlb
mov
add
inc
add
pop
divl
add
int3
jns
jb
lcall
xor
sub
cli
fdiv
jmp
push
jbe
push
jne
imul
cmpsl
cmp
aad
into
fwait
mov
aaa
call
rcll
or
lods
lds
lret
ljmp
add
jne
push
pop
or
push
addr16
pop
lret
sarb
pop
push
out
mov
mov
jae
in
out
jg
icebp
cmp
cld
clc
sub
lcall
imul
mov
pop
pop
cmpsl
xor
notl
cmpsl
mov
xchg
aam
jle
shrl
jle
mov
sbb
loop
mov
iret
stos
mov
or
lds
xchg
sbb
pop
adc
pop
mov
push
popa
fidivl
lods
into
shrl
push
adc
inc
jb
add
outsb
xor
push
mov
xchg
or
push
jo
adc
mov
lret
cmpsl
clc
push
xchg
push
insb
xchg
imul
aam
adc
lcall
scas
fildl
or
pop
or
or
les
cli
into
outsl
imul
sti
hlt
xchg
mov
xchg
jne
mov
xor
in
xchg
mov
dec
shrl
in
popf
scas
jbe
jae
lods
fs
popf
xchg
xor
scas
add
loopne
test
xlat
mov
popf
mov
aad
mov
pop
mov
hlt
push
add
shrb
add
outsb
shr
jmp
fidivl
popf
pushf
cmp
pop
dec
and
test
repz
std
int
clc
pop
xchg
stc
je
jb
mov
pushf
xchg
push
shrb
inc
clc
shlb
addb
sbb
push
cmp
mov
iret
stc
rcrb
fwait
xchg
push
ret
xlat
jecxz
pop
sahf
add
rorl
stos
push
xor
cmpsl
push
pop
dec
into
inc
dec
mov
mov
lahf
out
cmp
mov
std
push
roll
mov
xchg
out
xlat
jecxz
nop
or
mov
mov
xlat
xchg
and
ljmp
mov
mov
sti
sub
inc
out
pop
or
mov
popf
lahf
cmp
lods
mov
inc
or
push
add
fwait
push
mov
negl
dec
in
xchg
fimull
adc
inc
cwtl
pop
jecxz
push
jnp
push
or
push
gs
add
in
xor
ljmp
add
add
bswap
adc
push
jns
adc
inc
lcall
push
adc
xchg
dec
jne
sub
lcall
adc
out
jne
insl
lahf
push
jb
pop
int
adc
push
in
les
addr16
or
push
pop
imul
cmpsl
fnstcw
int3
dec
or
xor
add
inc
add
ficompl
idiv
dec
cltd
int
cmp
mov
cmp
cmp
ffree
adc
test
mov
or
cmpsl
cmpsl
stc
cld
xor
push
jge
mov
pop
sbb
sbb
cmp
lret
lret
mov
sub
into
or
aam
in
xor
stc
imul
push
add
xchg
cmp
sbb
int
aam
pop
sahf
cltd
cli
jbe
outsb
fucom
jmp
lret
lret
jnp
movsb
pop
jecxz
insb
pop
roll
mov
loop
testb
iret
add
push
jno
hlt
add
or
addr16
mov
leavew
aam
jmp
imul
add
fidivrl
lret
push
push
cmp
mov
add
jns
lret
xor
negl
mov
lret
add
les
sub
pop
dec
out
jmp
aas
sahf
xor
bnd
push
lret
pop
cli
cmc
jp
mov
popa
scas
mov
xchg
sbb
shll
ja
clc
push
jns
lret
sub
cmp
cmc
mov
jle
leave
loop
in
imul
int
cmp
xor
shlb
outsl
add
mov
cmpsl
sti
hlt
xchg
push
or
add
rcrb
in
push
outsl
sahf
aad
mov
mov
std
fidivs
mov
pop
fsqrt
adc
mov
iret
iret
lock
jne
clc
leave
mov
lods
jno
repnz
decl
pop
pop
xor
sahf
xchg
shl
imul
in
scas
add
add
ja
adc
sbb
lcall
push
rorb
xchg
cmp
sub
mov
xchg
icebp
jecxz
jg
loopne
push
push
inc
push
fisubl
mov
sbb
adc
or
rcll
rcrl
ror
pushf
pop
rcl
mov
fsubl
mov
mov
dec
or
fnstcw
push
pop
add
imul
enter
cmp
fcmovne
or
imul
pop
adc
rcll
std
adc
add
cmp
adc
dec
fisubs
and
incb
cmp
leave
push
bound
lahf
int
daa
push
push
repnz
jl
or
pop
dec
mov
iret
outsl
div
iret
sub
pop
lods
add
ds
pop
fistl
iret
mov
cmp
shlb
adc
mov
cmp
lods
sub
xchg
jg
lds
imul
pop
aam
into
lret
jns
jmp
lods
mov
or
push
inc
pop
arpl
lahf
loope
fisubrl
lahf
rolb
push
lcall
icebp
js
je
in
xor
shrl
sahf
lahf
jnp
mov
lcall
outsb
sub
rcrl
xor
adc
mov
push
pop
mov
movsl
clc
cmpsl
sti
hlt
lahf
pop
rorb
mov
icebp
inc
jb
xor
jg
xor
push
sahf
mov
out
daa
push
push
sub
mov
sbb
adc
shrb
add
fidivl
dec
mov
shll
mov
sti
insl
xor
rclb
xor
mov
movsl
or
pushf
in
pop
jnp
cmp
movsb
scas
mov
lahf
in
shlb
test
pop
in
leave
xlat
cmp
stos
cmp
vpunpckhwd
pop
inc
ja
les
xor
pop
add
mov
sbb
iret
sub
and
cmp
mov
add
xchg
xchg
jns
out
aaa
repnz
out
lds
or
rcll
or
int
jl
jns
xlat
pushf
push
xchg
in
popf
das
int3
into
popf
inc
push
adc
aad
pop
sahf
popf
cli
lret
test
lret
mov
fs
xor
lret
imul
mov
rcll
scas
insl
mov
imul
sub
sahf
push
loop
xchg
add
mov
lods
mov
gs
xlat
rolb
xchg
out
cmp
aas
pop
into
mov
clc
cli
jp
lahf
push
out
repz
push
mov
aad
xchg
cld
inc
shlb
imul
push
pop
ljmp
std
jle
jle
pop
mov
sub
jp
xchg
lahf
lods
stos
movsl
dec
jne
int
lds
cmp
lret
or
int3
push
movsl
jg
mov
add
and
icebp
js
pushf
hlt
cmc
xchg
cmpsl
or
xor
divl
push
jg
cmp
adc
lret
mov
and
aam
test
in
add
notl
icebp
cmp
adc
jle
sahf
dec
mov
repz
dec
fstpt
imul
push
or
sahf
pop
dec
test
test
add
xchg
xor
icebp
shl
or
cmp
scas
adc
outsl
xor
cmpsl
stc
pop
xor
xchg
jae
outsb
jae
lret
test
lods
movsl
adc
or
js
xchg
repz
fldcw
in
fimull
sbb
xor
mov
into
into
popf
rcll
add
jns
repnz
jae
mov
lds
jns
jb
jno
leave
jg
fst
push
sti
outsb
inc
pop
rcr
notl
outsl
xlat
sub
add
pop
leave
ror
ret
mov
xor
lret
in
dec
adc
dec
sbb
popa
cmpsl
or
sarb
mov
lcall
into
imul
int3
pop
jne
ljmpw
mov
xchg
leave
pushf
arpl
xchg
in
cmp
xchg
cmp
popf
cmpsl
mov
test
mov
repz
jnp
inc
bts
or
aad
pop
sub
sbb
fucom
test
cmc
pop
insl
daa
addr16
mov
dec
aam
repnz
mov
cmp
adc
aas
jmp
cs
pop
sar
push
popf
shll
push
mov
stos
push
in
das
jns
jb
int3
mov
scas
fidivrs
ds
cli
sub
lret
cli
sub
out
xor
or
gs
lods
dec
ja
sahf
mov
xlat
dec
push
imul
dec
xor
add
add
testl
mov
into
leave
test
sahf
lcall
xchg
push
push
js
fisubl
add
mov
repz
iret
out
rolb
sbb
mov
adc
lahf
gs
cmpsl
mov
lea
jnp
mov
mov
jmp
ret
push
adc
into
cli
pop
adc
and
dec
cmc
jo,pt
ljmp
or
jl
push
mov
sub
ret
scas
push
imul
jmp
sbb
mov
mov
xlat
loop
mov
out
dec
std
xchg
cmp
mov
pushf
leave
push
mov
iret
mov
imul
std
std
shll
dec
mov
outsl
lret
iret
pop
loop
dec
lahf
fs
iret
pop
repz
fiaddl
jns
pop
std
scas
into
imul
inc
je
add
xor
or
ds
addr16
scas
xchg
imul
mov
sub
mov
mov
int3
and
addb
xchg
cmpsl
xchg
mov
into
in
pop
out
xchg
add
mov
sarb
out
jle
or
dec
push
cltd
int
xlat
pop
mov
xchg
ficomps
push
dec
add
outsb
push
mov
rcrl
dec
mull
pop
lods
lds
lahf
adc
pop
xchg
lods
enter
jge
xor
sub
lret
aas
into
jmp
std
cmp
cltd
xlat
out
xchg
stos
sub
sub
jnp
jmp
insb
jae
addb
add
imul
dec
in
inc
mov
filds
insl
or
addr16
mov
inc
or
pmaddwd
out
mov
cmp
inc
mov
iret
mov
dec
test
mov
jne
push
jbe
add
sarl
imul
shrb
mov
and
or
mov
pop
adc
jns
dec
push
addr16
imull
ljmp
cltd
rorl
add
sarb
lods
sbb
ror
bnd
xchg
mov
xchg
cmp
pop
push
fwait
sahf
mov
sbb
mov
movsb
in
cmp
fstpl
gs
mov
mov
dec
test
in
sub
scas
lret
xor
outsl
mov
inc
imul
mov
push
scas
cs
mov
out
and
scas
ret
jmp
lret
jb
dec
add
xchg
mov
pop
clc
rclb
insb
sub
ror
test
sub
addr16
mov
mov
sub
test
movsb
push
or
jg
out
int
aas
mov
ficoml
lret
imul
imul
ror
add
repnz
das
out
cmpsl
aam
xchg
push
cmp
stos
stc
dec
test
movq
ja
and
add
std
jae
pop
into
addr16
je,pn
roll
jbe
adc
mov
popf
pushf
xor
imul
cmp
shll
daa
cmp
ret
xchg
les
lret
xor
sbb
ds
xchg
mov
in
sub
out
pop
mov
out
cmp
adc
repz
jno
lret
imul
push
in
mov
jg
rcrl
gs
imul
ds
pop
les
sarl
mov
ds
das
mov
or
lahf
movsl
pop
xor
mov
sahf
jmp
rcrl
fs
inc
addr16
jb
repz
testb
stc
or
mov
movsb
in
xor
sub
cmp
add
test
xlat
std
jnp
ds
iret
mov
cmp
xchg
insl
aam
pop
in
add
add
cmp
add
jnp
cmp
add
repnz
fcomps
lods
pop
adc
dec
or
mov
and
add
add
and
and
int
sbb
push
xor
add
cmp
sub
test
push
das
mov
xor
xor
jns
add
and
bndldx
and
sahf
cmp
movsl
stc
into
xchg
mov
cltd
sbb
push
adc
std
mov
insb
icebp
xchg
cmp
imul
cld
xor
pushf
shll
cmp
xchg
insl
lret
push
cmp
lods
cld
cmc
stos
sub
push
int
daa
fnstenv
lret
sbb
adc
cmp
gs
aas
mov
movsl
mov
imul
xor
ljmp
mov
pop
xchg
sub
test
add
jns
cmc
outsl
cmpsl
xor
xor
xchg
sbb
fidivrl
sub
sbb
sti
jp
outsl
movsl
cltd
lret
sub
mov
imul
hlt
repnz
jg
push
jbe
add
cmp
add
jmp
cmp
out
xor
jle
or
sti
jge
adc
adc
or
push
popa
jb
or
xchg
movsl
mov
je
flds
jmp
mov
push
add
aad
push
or
pusha
rcll
lea
loope
pop
outsl
or
cmp
popa
divb
outsb
or
pop
pop
jo
xor
add
jo
cmp
sbb
mov
jbe
pop
push
xchg
add
addl
xor
arpl
xor
jno
in
dec
cwtl
imul
sub
pop
or
xor
mov
pop
popf
leave
xlat
mov
data16
rcl
jbe
push
cmp
ficompl
sahf
rcl
sbb
mov
aas
lods
sbb
xchg
ljmp
cld
pop
out
fsubl
or
pop
aas
lret
dec
in
jecxz,pn
xchg
and
scas
repnz
scas
leave
or
cmp
xlat
pop
add
fmulp
pop
shll
mov
jmp
leave
jg
aad
sub
and
test
push
push
mov
mov
push
jmp
jl
jae
scas
insb
push
add
mov
addb
popf
rcr
push
xor
cmc
mov
jnp
ds
sub
stc
mov
daa
jne
test
mov
pop
pushf
jo
cmp
pop
inc
pop
cmpsl
xchg
xchg
bswap
cltd
add
xor
mov
les
imul
xor
push
sub
movb
subb
mov
sbb
je
jne
push
mov
dec
xchg
push
pusha
jp
js
aas
jge
add
stc
int3
fiaddl
add
mov
movsb
cmc
xchg
rcl
xor
sti
cmp
stc
cld
cmp
lret
jne
rorb
stos
jns
ds
mov
dec
fldl
lret
cmp
cmpsl
push
sahf
cltd
mov
pop
leave
out
lods
mov
pop
jns
lods
lds
or
or
test
pushf
or
jo
or
mov
push
push
push
js
xlat
repnz
mov
jle
push
xlat
add
imul
mov
fnstenv
pop
faddl
int
insl
add
xchg
cmpsl
stc
cmc
pushf
arpl
mov
add
adc
push
daa
enter
pop
mov
in
xchg
push
andl
imul
jb
cmp
mov
jecxz
mov
dec
movl
cmp
idivb
mov
cmp
test
or
subb
dec
add
xchg
mov
xchg
out
jnp
cmovle
adc
lods
pusha
rcll
aaa
pop
adc
cmpsl
mov
icebp
cmp
lods
sarl
sbb
cmp
cmova
stc
je
fidivrl
aas
lahf
in
insb
cmp
mov
lods
mov
jmp
mov
add
test
stos
mov
in
mov
pop
lds
or
jge
std
adc
ds
and
stos
mov
xlat
or
into
mov
dec
scas
cmp
aad
jne
jne
add
add
call
rcl
or
cs
sub
mov
add
and
stos
into
jno
sti
sahf
adc
movsb
jmp
cli
jg
cmp
fdivrp
cmp
stos
sub
out
shrb
stc
iret
insl
mov
lcall
lods
lds
lods
push
shll
lret
fadds
dec
test
ljmp
ja
push
jno
nop
popl
scas
lods
cs
xchg
adc
xchg
loopne
jo
jno
loopne
jo
jno
loopne
jecxz
add
popl
cmp
aas
loopne
jo
xor
cmp
mov
add
repnz
sub
jg
add
sbb
cld
into
shlb
push
add
loope
das
inc
jp
shll
push
add
ljmp
cli
add
push
pop
mov
adc
gs
int
xlat
icebp
popf
mov
mov
dec
adc
mov
in
sub
cmp
idivl
fcomps
bound
sti
pop
pop
or
sub
in
push
mov
pop
cmpsl
cmpsl
pop
cmc
adc
dec
ja
fsubrl
cmpsl
aam
fisttpl
test
test
push
std
sarb
add
jp
mov
repnz
mov
pop
jo
in
in
adc
in
inc
movsl
scas
aas
add
sub
in
mov
pop
mov
push
jns
mov
movsb
mov
sub
inc
hlt
repz
movsb
scas
in
dec
movsb
stos
imull
cmp
sub
add
add
dec
add
test
in
or
pop
xor
mov
push
sbb
dec
xchg
xorb
insb
les
loopne
clc
xchg
loopne
jo
cmp
jno
into
push
and
inc
cmp
sbb
xchg
push
cmp
push
jp
or
cmpl
inc
stc
lds
or
pop
ds
or
pop
mov
outsl
mull
add
sbb
sub
cwtl
dec
mov
sub
aam
or
clc
sub
adc
rcll
adc
loope
add
push
dec
xchg
rcrb
daa
fnstcw
jae
dec
dec
sub
aad
cmp
mov
adc
inc
fcomps
faddl
pop
or
aam
pop
aas
out
fucomip
jl
jp
dec
imul
xlat
xor
mov
or
inc
je
or
outsb
popa
dec
stc
enter
sarb
addr16
sub
fisubrl
push
adc
fucom
lfs
scas
lret
in
pop
xchg
mov
dec
sti
jge
jnp
lahf
pop
rclb
in
dec
imul
jg
shlb
aad
push
gs
pop
arpl
mov
cwtl
enter
rcrl
pop
add
outsl
lods
xor
mov
pop
mov
push
aaa
outsb
sarl
pop
push
addr16
push
inc
mov
jo
xor
sarl
fisttpll
sbb
xchg
sub
popf
xor
add
push
cmc
lds
push
das
inc
sbb
cmp
jne
data16
je
scas
sub
adc
xlat
xor
sahf
xchg
inc
or
pop
and
sub
rclb
pop
lret
inc
aam
inc
jns
lret
adc
pop
imul
hlt
mov
cld
sbb
shrl
xor
sti
addr16
clc
movsl
fmull
rcl
push
fcoms
lock
xor
scas
sarl
fcomi
aam
stos
das
push
sti
ds
loop
jge
insl
movsl
jbe
ficoml
or
add
dec
jbe
or
jmp
outsl
mov
popf
dec
test
movsb
in
xor
xlat
mov
daa
pop
mov
movsl
inc
insb
sub
leave
jae
sbb
outsl
cmc
clc
sarl
jp
adc
mov
das
dec
das
add
into
mov
jmp
repz
dec
jl
jae
lret
mov
push
add
add
add
xchg
scas
add
adcb
test
mov
bound
data16
xchg
push
cmp
jb
popa
pushf
xor
pop
pop
sbb
sarl
subl
sarl
or
sbb
push
xchg
jle
sub
repz
pop
jae
add
add
pop
dec
fisttpll
loope
push
add
or
dec
mov
adc
inc
or
and
pop
xor
stc
callw
and
xor
movsb
shl
into
lods
jae
mov
cmpsb
add
loop
sbb
fisttps
scas
mov
dec
les
lcall
or
mov
aad
push
into
pop
sbb
sub
xchg
and
xchg
repz
rcl
fcoms
jl
jb
add
inc
fcomps
pop
movsb
pop
mov
lods
shll
movsl
jbe
push
out
jg
jecxz
clc
into
testb
push
imul
mov
orb
jno
jp
mov
imul
sub
aam
add
shrl
push
push
xchg
lahf
cmpsl
test
insl
or
stc
int
scas
jns
div
cmp
xlat
push
pop
cmp
cs
fcomip
jmp
inc
cmpsl
sub
cmpsb
sar
mov
xor
popf
adc
push
pop
jno
jns
dec
jg
into
sti
or
lcall
or
xor
sub
imul
mov
sahf
loopne
jo
jg
cmpsl
cmpsb
daa
sbbl
sbbl
lds
jne
mov
jo
rcrl
loopne
jo
data16
mov
cmpsl
xor
cmp
lret
data16
xchg
pop
adc
mov
inc
or
mov
cmp
sub
cmp
xor
pusha
les
dec
mov
xchg
add
add
cmpsl
stc
cmp
rcrb
mov
or
cmpsb
loop
faddl
jmp
xorb
or
mov
add
sbb
cmp
pop
out
pushf
mov
inc
xchg
xchg
stos
jne
scas
mov
xor
jne
fdivs
aam
into
idiv
shl
stc
popa
jb
int
adc
xchg
mov
jge
cmp
lods
cmp
das
lods
and
lahf
rcr
add
add
fisubs
mov
cwtl
or
jae
xchg
mov
shlb
mov
cmpsl
sti
jge
cmpsb
mov
popf
fmull
into
ds
and
imul
mov
pushl
sahf
movsl
dec
jl
je
jnp
push
push
lahf
push
insl
out
mov
fwait
mov
sti
pop
add
cmpb
add
pop
or
ror
popa
push
insl
jp
mov
mov
pop
mov
popf
xor
dec
pop
mov
xchg
xchg
or
mov
add
pop
jecxz
loopne
mov
pop
mov
dec
jne
inc
imul
bound
push
add
mov
into
movsl
add
imul
adc
ret
inc
outsb
sub
shll
push
push
cmpsl
jne
fnstenv
cmp
shll
arpl
and
cmpsb
cltd
or
ds
stos
imul
jl
bnd
cmpsl
add
xor
mov
cwtl
movsb
ljmp
or
fstps
nopl
shrb
add
mov
mov
aam
push
fidivrl
cmp
xchg
lahf
or
imul
pop
or
aas
jnp
fcmovne
dec
ljmp
insl
jns
add
cmp
jg
aam
stc
icebp
xor
out
testl
dec
scas
cmp
pop
cld
ss
notl
aaa
xlat
push
mov
cmp
jbe
fnstcw
mov
push
out
imul
jb
dec
mov
jl
jb
icebp
cmc
jns
outsl
testb
add
mov
mov
add
add
lds
add
insb
jnp
scas
jmp
imul
push
lea
ret
or
jecxz
mov
add
dec
add
dec
inc
add
push
xchg
ja
stos
stos
pop
jge
or
jae
push
mov
lods
stos
inc
sbbb
xchg
and
out
add
xor
sub
add
sbb
and
mov
lret
sbb
insl
sub
and
icebp
test
popf
into
outsl
int3
inc
add
push
aas
insb
or
cli
outsl
sahf
shrb
imul
popf
pushf
das
lahf
cmp
lretw
popa
push
mov
push
idivl
stos
mov
mov
outsl
or
mov
mov
jns
sti
cld
scas
out
shrl
int
stc
pop
int
adc
mov
lret
or
shll
pop
vcvttss2si
imul
arpl
mov
xlat
cmpsb
or
mov
cmp
xor
out
lahf
in
ss
rorb
mov
xchg
sti
fisubrl
lret
aad
mov
imul
loop
rcl
sub
inc
xchg
mov
andb
pop
mov
sub
or
mov
mov
pop
dec
mov
cs
mov
dec
in
cltd
test
mov
xchg
xchg
movsb
jno
xor
push
sbb
sbbl
mov
loopne
jo
ljmp
mov
mov
test
arpl
sub
int3
das
shrb
add
fstl
popf
push
test
inc
outsl
jmp
imul
pop
cs
jge
clc
sbb
dec
pusha
fldcw
add
push
test
and
xor
add
sbb
cli
mov
in
enter
lahf
lods
add
xor
mov
and
mov
xchg
mov
mov
stc
je
jb
lret
fcoms
jge
xor
insb
aas
mov
fcoms
adc
repz
or
dec
imul
mov
cmp
stos
cmp
mov
lret
cmp
xchg
lds
push
mov
jecxz
xchg
sti
lret
in
aam
jne
inc
push
push
imul
inc
jnp
push
mov
into
imul
roll
ljmp
mov
xchg
or
roll
gs
cs
loope
add
jl
je
add
cmp
fyl2x
xor
xlat
xchg
mov
inc
or
call
push
sub
add
add
gs
imul
xor
cmp
lock
mov
fwait
dec
addr16
jle
cmp
mov
adc
jo
pop
je
ja
push
push
sahf
push
mov
push
nop
dec
push
jns
fcmovbe
das
sub
aam
mov
adc
sbb
popf
push
jnp
cmpsl
lcall
add
sub
into
lret
push
jg
mov
or
and
sub
test
dec
lods
popa
jecxz
dec
test
pop
in
xchg
test
dec
andb
nop
test
std
imul
mov
pop
pop
push
bnd
xor
fiaddl
ja
fidivrl
push
fisubl
stos
mov
xlat
xchg
push
imul
aad
adc
mov
sti
mov
roll
dec
mov
or
add
sti
jns
imul
int
insb
cmp
gs
scas
vpunpckhwd
inc
jb
or
lret
push
mov
fwait
jg
dec
popf
and
sahf
dec
xchg
jl
push
out
fisubrl
stos
sub
cmpsl
add
iret
cmp
dec
scas
movsb
pop
iret
in
add
scas
push
dec
mov
mov
add
push
mov
mov
mov
mov
arpl
mov
sbb
inc
test
mov
push
jle
mov
pop
movsl
ret
pusha
mov
lea
push
add
ds
xchg
and
fdivl
pop
mov
cmp
sub
sar
enter
xor
repnz
in
xchg
daa
xor
add
push
incl
rcl
stc
aam
out
lret
pop
in
and
pop
cmp
movsl
clc
fimull
and
xor
into
dec
sahf
movsl
jl
repz
mov
divb
pop
pop
daa
dec
xor
mov
mov
sub
mov
cli
xlat
iret
fsubs
or
jae
cld
scas
sahf
ss
out
clc
rcrb
movsb
jmp
outsl
mov
pop
mov
loop
stos
mull
push
mov
iret
mov
out
xchg
jecxz
lahf
movsl
jg
cmp
inc
xor
sti
sub
pop
lret
sti
jg
dec
lahf
movsl
inc
imul
lret
adc
sub
push
jp
outsb
out
mov
pop
ficoml
movsb
jp
pop
jmp
leave
jge
ss
cmpsb
mov
push
sub
push
mov
push
xor
in
push
add
lahf
or
mov
cli
inc
mov
int
cs
popl
pusha
xchg
in
mov
lea
jo
push
gs
jb
push
cmpsb
mov
xchg
pop
pop
push
jo
mov
js
mov
into
movsl
outsb
push
les
in
loopne
and
mov
add
mov
sub
cmpsl
xchg
mov
pop
xchg
lret
lahf
jg
repnz
xlat
mov
insl
jle
xchg
call
pop
sti
aas
and
mov
int
or
sahf
xor
mov
lahf
loop,pt
mov
pushf
xchg
icebp
ror
aad
insb
xlat
frstor
pop
xchg
cmp
insl
add
pop
xchg
scas
jns
cmpsl
push
ja
push
movsl
inc
push
movsl
add
sahf
lods
jle
add
ja
lahf
dec
push
insb
sub
pushf
xchg
mov
scas
cld
rcll
fsubr
add
insl
xor
into
stos
sub
out
jns
cli
rcl
out
repz
icebp
into
cli
lret
outsl
das
xor
pushl
aam
test
movsl
mov
rcrb
dec
sti
cmp
outsb
jne
lcall
addl
aad
inc
add
pusha
xorb
fwait
or
mov
sahf
sbb
test
dec
inc
add
int3
pusha
shl
jo
and
mov
or
ljmp
movsb
bound
cmpb
test
xor
lret
imul
dec
sub
push
jb
into
sti
cmp
insl
pop
int3
fisubs
or
cmp
or
xor
mov
xor
push
lret
mov
xchg
in
ss
shlb
cmp
ficomps
mov
pop
das
neg
xchg
stos
cmp
mov
stc
cmp
scas
push
pushf
mov
xor
fidivl
jns
das
loop
xlat
mov
push
je
or
ds
add
insl
ds
imul
or
jnp
lret
sub
pop
gs
scas
push
addr16
ljmp
testl
jg
cld
inc
jns
cs
cmpsb
sbb
lret
adc
fsts
add
add
mov
in
mov
sahf
cmp
filds
or
call
cli
dec
divl
or
iret
pop
test
jmp
inc
mov
into
lahf
pop
rcl
sti
into
stos
fucomp
fbstp
sti
mov
add
mov
push
in
int
push
fisubrs
mov
add
add
xchg
mov
dec
shlb
push
pop
lea
pushf
add
ret
dec
iret
enter
lock
mov
cmp
or
adc
add
jp
aas
aas
fs
arpl
arpl
outsl
cmp
push
sti
cwtl
mov
jp
add
rcrl
sub
push
fnstcw
pop
clc
and
or
iret
pop
add
push
add
add
movsb
repz
xchg
in
cmp
popa
cmpsl
mov
cld
or
lret
shll
lret
mov
sti
imul
test
in
jl
and
jnp
cwtl
inc
add
shlb
mov
imul
lahf
push
popf
dec
jo
cli
pop
into
lret
popf
jns
push
cld
insl
outsl
fwait
into
pop
repnz
jne
repz
jge
mov
cmp
dec
ljmp
mov
cmp
cmc
scas
lcall
pop
adc
stc
sub
inc
hlt
cli
mov
mov
cmpsb
shr
cmp
adc
adc
xchg
dec
push
enter
movsl
in
jecxz
mov
rorb
ds
stos
cltd
or
in
aam
pop
mov
push
je
je
jae
stc
xor
lea
arpl
xchg
stos
mov
push
cmp
pop
push
fisttpl
in
cmp
sbb
repnz
add
lret
pop
ds
mov
cld
iret
fcmove
mov
xor
pop
ret
pop
lret
mov
add
cltd
dec
or
cwtl
jg
mov
in
cmp
testl
add
addr16
sahf
inc
add
lret
outsl
repz
xor
test
movsb
repnz
lahf
sub
into
xor
lcall
sub
push
push
insl
popf
mov
push
imul
into
ljmp
mov
sti
shrb
insl
jb
int
and
and
lods
jne
lcall
or
into
jp
push
in
cs
inc
xchg
and
aas
fcomi
into
xchg
fsts
fcmovbe
sbb
pop
jne
pushl
mov
dec
push
adc
imul
cmpsl
daa
mov
mov
cmp
mov
aas
dec
pop
out
push
mull
adc
scas
mov
clc
aam
jle
push
jle
inc
popf
dec
aad
jnp
std
mov
in
cmp
lret
iret
rcl
sti
fildll
lods
add
adc
jnp
daa
cmc
adc
aas
daa
jg
fnstenv
fsubp
pop
fs
jecxz
in
loop
xchg
scas
mov
xchg
sub
insl
jbe
pop
out
imul
jge
scas
lods
enter
mov
jp
mov
xor
xor
arpl
xor
jg
fwait
call
shrl
fs
das
pop
cmp
add
je
daa
add
sub
iret
fists
je
negb
out
and
jnp
inc
sub
inc
cltd
and
lret
sbb
push
mov
addr16
sub
aam
add
rcl
or
aaa
in
jge
imul
mov
lret
repz
push
and
stos
ja
jmp
fs
push
or
or
cli
sub
dec
sahf
addr16
test
cltd
dec
ja
add
les
loop
xlat
insl
fldcw
xlat
or
cmp
jne
je
or
mov
xchg
fcos
jle
push
sar
cmp
push
push
test
bnd
outsl
repz
xchg
loop
xchg
and
stos
rep
xchg
out
outsb
sahf
pop
test
or
add
push
lret
cltd
lahf
out
enter
jbe
int3
push
xchg
pop
or
aas
jb
out
imul
jae
aam
cli
jns
int
arpl
mov
fstpl
xchg
pop
imul
addr16
mov
inc
repnz
jne
imul
mov
xor
pop
xchg
cli
xor
iret
cmc
cltd
lret
cmpsl
push
xchg
cltd
mov
lret
push
enter
mov
sahf
lahf
jmp
lret
imul
xor
shll
lret
xor
inc
or
ror
xchg
sub
imul
cmp
sbb
arpl
xchg
cmpsl
imul
je
ud2
and
outsb
into
cli
js
popf
mov
adc
out
sbb
jecxz
shlb
in
sub
imul
dec
add
mov
into
out
fidivrl
jg
mov
repnz
aad
push
sub
pop
hlt
imul
in
pop
add
and
sub
dec
cmp
roll
mov
fstl
or
nop
scas
mov
imul
std
leave
out
cltd
mov
xchg
mov
shll
fstp
dec
insl
push
aas
test
test
scas
cmp
mov
jp
rcrl
cltd
or
imul
jge
jo
adc
stc
aam
sti
hlt
lcall
dec
leave
push
fstl
test
pop
mov
xor
mov
mov
or
mov
xor
or
jbe
xchg
je
add
int3
in
insl
nop
add
pause
inc
or
add
fimull
jns
dec
sub
in
cltd
lods
mov
out
lock
lods
add
jno
dec
or
into
addr16
stos
es
push
mov
imul
pop
mov
popf
pushf
das
mov
scas
aam
inc
jo
pushf
sahf
rorl
sub
iret
mov
cmpsl
jmp
add
les
sar
shll
jae
xchg
in
xor
cmpsl
insb
leave
pop
insb
rorb
push
fisubs
dec
jo
jbe
jbe
dec
push
in
test
jge
cmp
or
sub
xlat
sbb
das
or
xlat
testb
jbe
push
mov
dec
js
add
lahf
jae
mov
jmp
aam
into
dec
pop
std
push
xlat
jns
imul
cmp
leave
push
in
mov
test
std
or
or
jle
jnp
imul
pop
lcall
ja
or
jp
jo
mov
pop
mov
imul
push
rcrl
add
or
xor
xchg
in
dec
push
jp
mov
gs
iret
mov
outsl
cltd
shrl
imul
std
mov
add
mov
or
pop
fistl
ljmp
xchg
js
xor
std
sub
negl
aam
dec
add
cwtl
or
dec
cmpsl
addr16
pop
pop
int
sti
inc
xchg
daa
insb
xor
pop
cs
loop
xchg
rcll
leave
cmpsb
pop
mov
insb
lret
sub
outsl
sub
push
mov
lret
icebp
lret
xor
cld
into
mov
fnstsw
lods
pop
jl
fidivl
in
fcmovnbe
jle
sub
ds
out
sub
xor
gs
xchg
in
int3
pop
aad
test
in
mov
pop
into
mov
xchg
jle
into
sbb
stc
fsubr
lcall
jno
mov
aam
div
add
scas
mov
jg
sbb
in
inc
mov
mov
xchg
out
mov
jle
lret
scas
jbe
push
sahf
lahf
push
jge
stos
push
adc
adc
push
mov
xchg
pop
adc
adc
xchg
and
cmpsl
jne
out
xor
cmp
jecxz
lods
jae
pushl
mov
stc
in
or
mov
mov
aad
imul
cli
fstp
aas
push
dec
add
jge
stos
jmp
fucomi
movsl
cmpsl
jmp
add
shlb
mov
push
jnp
std
mov
icebp
xlat
jb
lret
xchg
out
leave
jne
fstl
mov
add
pushf
lret
xor
in
xchg
xor
popa
pop
int3
mov
out
cltd
fwait
xor
pushf
stc
xor
mov
lahf
mov
in
cmp
fwait
jb
pushf
out
jmp
xchg
xchg
adc
jg
mov
stc
sub
addr16
push
push
sahf
xchg
mov
dec
sbb
fwait
rolb
mov
dec
mov
cltd
rcr
pop
shll
outsb
cmp
sub
gs
jmp
in
aas
xchg
push
ret
mov
imul
push
rolb
push
in
mull
jmp
adc
cmp
push
rcrl
sahf
cmp
dec
sub
int3
ljmp
mov
cmp
xchg
imul
jp,pt
adc
sub
pushf
dec
lret
xor
jns
or
mov
rcr
mov
stos
repnz
lahf
in
pop
lahf
sbb
insl
negl
inc
cmpsb
or
jno
cld
into
je
add
int
jbe
pop
mov
popf
fmull
pop
pop
push
ljmp
sti
notl
hlt
mov
dec
pop
scas
jns
sbb
stos
cmp
mov
add
jle
add
push
cmp
rcl
popf
imul
addr16
lret
push
add
iret
popa
jge
push
push
mov
pop
jnp
lods
int3
enter
data16
xchg
sahf
in
gs
imul
enter
lods
ret
fwait
imul
push
insl
sahf
pushf
movsl
inc
lods
leave
out
fwait
rcrb
imul
jns
mov
fstpt
dec
cmpsb
push
push
imul
cwtl
jge
xor
outsb
je
negl
push
add
add
and
repnz
out
dec
mov
inc
scas
jbe
fistpl
mov
jle
lret
iretw
xchg
out
cmp
sbb
gs
aas
iret
stc
ds
pop
lds
sbb
fists
cld
cmpsl
mov
push
or
es
rolb
dec
sti
cs
dec
scas
sub
imul
movsl
mov
jle
or
decl
xchg
fidivrl
jno
dec
xor
popf
xchg
xor
lret
jmp
jbe
mov
pop
mov
in
sub
je
int
das
jbe
pop
xlat
add
mov
pop
mov
shlb
mov
enter
lods
cmp
mov
fidivrl
mov
lcall
or
rolb
adc
push
aaa
add
adc
cmpsb
pushf
push
out
lret
lods
lds
add
imul
aam
lret
adc
xor
cmp
repz
enter
into
sub
lahf
scas
jne
out
jns
pop
push
pushf
mov
leave
aam
leave
jmp
nop
aas
into
jg
sbb
pushl
cmc
scas
sub
jb
cmp
jbe
pop
adc
mov
mov
cli
popf
inc
fs
into
call
test
lcall
fimull
leave
fimull
rcll
and
jg
jae
fisubrl
into
pop
push
mov
shrl
sub
lahf
pop
in
cmp
cmp
xlat
xchg
cmpsl
daa
xlat
xchg
mov
sbb
lcall
push
jbe
mov
mov
lret
cmpsb
add
pop
mov
movsb
stos
repnz
int
cmp
push
outsb
lret
pop
cli
movsl
fists
pop
scas
sub
test
test
and
sarl
or
scas
jge
sub
int
or
jmp
notl
insl
jecxz
mov
nop
add
movsb
stc
lds
fstps
cmc
lcall
call
add
pushl
xchg
fistpl
into
pop
push
push
xor
rorl
int
leave
jg
lret
sub
xchg
dec
add
add
xchg
mov
imul
repz
mov
push
std
cli
cmp
sub
shlb
cli
jbe
pop
enter
push
test
lds
insl
in
fs
scas
mov
dec
iret
xor
aam
imul
mov
or
cld
aam
out
ds
popl
dec
cmpsb
push
in
xor
cmp
pop
mov
test
aad
or
repnz
mov
repnz
xchg
mov
cmp
int3
ror
xchg
ds
in
push
xchg
xcrypt-ctr
cmpsl
pop
mov
xchg
pop
or
insl
shrb
test
cmp
adc
in
xor
in
xor
dec
mov
ljmp
push
popf
xchg
xor
iret
cmpsb
or
or
cmp
xor
pop
xchg
aaa
aas
pop
cld
int
scas
mov
ss
jle
repz
adc
or
push
stc
scas
or
std
ljmp
mov
sbb
cmp
jbe
ficoms
mov
into
int3
aad
add
nop
mov
jg
fwait
insl
or
jg
cmp
insl
jge
push
sub
jg
rcrb
dec
negl
into
xchg
out
mov
lret
jnp
mov
cli
gs
sub
ror
mov
popf
mov
nop
cmp
sarl
iret
popf
ss
dec
lcall
rolb
rolb
pop
fwait
lret
imul
xor
lahf
cmp
fst
in
or
lods
and
lds
xor
and
xor
fbld
sarb
pop
lret
arpl
and
jmp
aas
shll
das
mov
mov
ss
cmp
lahf
leave
jge
stos
mov
mov
js
hlt
lods
pop
xlat
jnp
imul
jge
test
aad
jo
lods
push
das
add
stos
sti
jge
or
xchg
clc
ds
outsl
out
xchg
mov
fiaddl
xlat
jns
out
xlat
mov
xor
pushf
scas
jg
popf
push
insb
push
cld
mov
sahf
fisubrs
std
inc
je
mov
std
das
jmp
push
gs
stos
mov
test
scas
loop
movsb
mov
cmc
jns
push
xlat
push
add
sbb
push
fadd
xchg
push
sub
add
lds
sub
jne
mov
pop
xlat
mov
inc
addr16
jns
dec
xor
xor
aas
pop
xor
lret
into
dec
cmp
mov
add
pop
popf
inc
push
adc
add
lret
nop
iret
testb
add
xor
imul
out
rcr
xchg
jg
pushl
lahf
in
xchg
mov
es
cmpsl
fstpt
inc
and
xchg
stc
ss
pop
xchg
fidivl
add
add
push
push
imul
xor
sahf
lahf
pop
int3
iret
mov
add
into
call
bound
sarb
sbb
mov
popf
mov
imul
pop
sbb
decl
mov
jne
push
dec
mov
inc
pop
lcall
stc
dec
inc
adc
into
adc
xchg
or
ret
ficompl
xlat
jmp
lahf
repz
jmp
imul
stc
pop
aaa
sub
lods
insb
in
cmp
adc
leave
xlat
pushf
movsb
mov
dec
sar
jns
imul
fdivrs
sbb
mov
sub
or
aam
cmp
push
mov
lret
lret
lds
mov
aas
fmul
lods
lods
add
jae
or
xlat
rol
lret
mov
add
adc
push
sahf
lahf
sahf
popf
rcrl
mov
push
sbb
jbe
repz
mov
sub
sarb
or
aam
cs
mov
gs
into
int3
pushl
dec
je
in
das
cmc
clc
iret
hlt
test
icebp
xlat
imul
push
push
popf
xchg
xor
sbb
daa
es
ds
pop
push
mov
and
sar
outsb
sub
pop
into
pop
jg
xor
fbstp
shl
outsl
jns
addr16
imul
jmp
fs
push
std
sbb
add
movl
jae
leave
push
pop
dec
div
iret
popf
outsl
fimuls
adc
cmp
or
xlat
insl
ds
lret
or
iret
in
stos
repnz
mov
mov
sub
popf
outsl
rcrl
leave
push
imul
pop
gs
adc
incl
mov
imul
or
push
cmp
push
dec
sub
out
mov
jmp
push
pop
add
jmp
lret
jg
cmp
add
xor
or
mov
outsl
pop
add
sbb
add
push
mov
addr16
xchg
or
cmp
leave
fstpt
sub
imul
int
daa
mov
ss
lret
icebp
into
enter
lods
outsb
sahf
daa
pop
insl
jmp
std
outsl
imul
notl
ds
aaa
xchg
out
jg
cltd
repnz
xor
sub
rcll
push
mov
in
xor
xchg
push
lret
repnz
lahf
rolb
pop
xchg
mov
mov
push
xchg
insl
dec
and
xchg
jne
xchg
rcl
or
sahf
or
mov
pop
jb
int
scas
int
daa
fnstcw
repz
cmp
cmpsb
push
cmpsl
cld
aaa
pop
ljmp
or
xlat
xchg
push
leave
cmp
dec
out
xor
scas
cmpsb
jbe
sbb
int
cmp
les
jmp
inc
jg
xchg
idivl
loopne
aam
mov
xlat
leave
adc
pushf
jp
xchg
sti
cld
lods
push
adc
mov
fsubrl
lret
pop
mov
adc
roll
out
lret
inc
nop
add
aaa
std
scas
add
leave
ffreep
aam
fisubs
je
sar
stos
ficoml
xchg
pop
outsl
imul
fnstenv
mov
lahf
mov
mov
lret
int3
inc
or
xchg
jbe
add
int
mov
repnz
xchg
sub
push
out
fbld
sub
push
xor
out
rcll
push
enter
add
out
xor
iret
xor
daa
mov
mov
stc
pop
imul
std
cmp
popf
inc
cmpsl
fnstcw
outsl
mov
sahf
jl
jp
insl
inc
lods
ret
mov
jge
movsl
or
test
sbb
mov
and
and
push
xchg
jae
das
into
into
xchg
jae
imul
ds
sahf
xchg
das
push
push
faddl
stc
pop
rcrl
dec
push
sub
push
lret
daa
cmc
cmp
mov
ror
ja
fstpt
movsl
pop
xlat
cmp
lahf
aam
pop
pop
sbb
add
rcl
xor
fistpl
daa
push
push
jns
adc
outsl
div
add
jle
out
cmp
repz
add
push
out
icebp
xor
or
push
push
push
push
outsl
fcmove
dec
lret
imul
in
outsl
push
sti
lret
push
pop
mov
out
xchg
daa
jg
fstl
jae
rolb
push
cmp
aas
add
xor
shrl
cmp
ja
inc
push
repnz
add
in
xchg
jg
or
rolb
push
movsl
test
push
or
ja
jmp
enter
dec
lahf
xchg
ss
and
ljmp
jns
lods
push
jno
int3
adc
jecxz
lret
aam
in
xor
or
push
push
xlat
dec
add
sub
test
movsl
fmull
int3
lret
lahf
cwtl
dec
lret
add
lret
jl
jmp
add
daa
das
ss
es
insl
iret
xchg
and
sarl
aam
mov
add
jl
pop
dec
and
ds
scas
and
test
mov
cmpsl
js
sti
iret
movsl
jle
sbb
ja
or
std
std
into
hlt
mov
out
jecxz
movsl
mov
jg
push
cmp
add
lea
cmp
rcl
test
mov
xor
fcomip
in
adc
jg
aam
and
mov
push
les
pop
icebp
xlat
pop
mov
jg
popf
push
outsb
rcrl
repnz
mov
into
das
mov
pop
test
aas
inc
pop
scas
sub
mov
cmc
out
fnsave
mov
ds
js
cmp
xchg
cmpsl
cltd
jg
shrl
insl
lret
sub
add
cltd
pop
dec
jns
lret
cwtl
sahf
lcall
push
insb
jnp
push
mov
pop
shll
in
into
dec
fldcw
ret
cmp
idiv
in
add
cmpsl
jo
xor
rorl
mov
popa
ljmp
mov
jge
mov
add
int
aas
into
mov
cmpsb
push
mov
into
movsl
fmull
mov
lcall
add
add
dec
lahf
scas
jns
in
sbb
sub
fwait
pop
mov
leave
push
push
insl
jmp
mov
mov
sub
jo
add
push
jae,pt
jnp
imul
or
fs
push
outsb
mov
aam
jno
push
pop
or
lahf
dec
scas
cmp
mov
repz
push
push
ds
pop
lcall
adc
stos
movsl
fmull
bnd
fwait
and
std
push
dec
mov
out
jg
jl
pop
add
fimull
jne
inc
push
lret
out
mov
gs
or
leave
pop
scas
aas
adc
pop
scas
sub
inc
xchg
add
add
add
shl
or
add
or
in
rorb
mov
mov
pop
test
in
xor
cltd
lret
jl
enter
in
xor
lds
aas
ret
dec
mov
xchg
pop
mov
iret
repz
sarb
cmp
into
cmp
movsl
clc
xlat
movsb
scas
fstpt
and
lods
movl
std
shl
das
aam
push
bound
push
aam
ficomps
fldl
fiadds
fisttpl
mov
dec
and
cld
rcrl
cwtl
push
faddl
pop
push
inc
push
ret
iret
xor
fwait
pop
or
xlat
cmpsl
pop
imul
lahf
fnstcw
push
jg
xchg
imul
mov
mov
jp
rol
lret
imul
cld
rclb
icebp
fmulp
jge
movsb
cmpsl
cmc
pop
jae
fmul
cmc
xchg
iret
mov
imul
jecxz
mov
or
jmp
sbb
pop
cmc
int3
jg
scas
mov
sti
out
ror
xchg
xchg
mov
pop
xchg
push
ja
les
scas
xchg
out
aas
pop
scas
sub
imul
iret
adc
push
imul
cmpsl
insl
xor
aam
inc
add
or
or
lcall
in
int3
sub
jmp
sub
cmpsl
sahf
cltd
jmp
jae
std
aad
lods
rcr
lahf
cmp
scas
je
scas
cmp
push
faddl
jmp
mov
mov
pop
mov
pop
mov
insl
into
outsl
fwait
iret
and
vunpckhps
add
xor
sarb
dec
adc
std
lods
or
pushl
movsl
push
push
outsb
bnd
and
push
xchg
pushf
pushf
decl
movsb
scas
sub
stc
xlat
fiaddl
pop
int
cmpsl
aam
jae
or
mov
jge
test
ja
lcall
sarb
shrb
jl
pop
sahf
mov
out
xor
sub
gs
cmp
jl
jnp
add
pushf
dec
repnz
dec
test
mov
scas
cs
pop
scas
sub
dec
stc
into
movsl
lods
std
testb
das
push
mov
lahf
adc
sahf
xchg
stos
lret
or
adc
pop
or
add
xchg
dec
div
adc
push
aad
push
movsl
jne
mov
movsl
push
outsl
jae
jne
jns
nop
dec
jne
jns
or
imul
sub
inc
fildl
jg
mov
cld
gs
int
lahf
xchg
mov
lahf
sarl
add
js
push
push
out
pop
dec
jno
cmp
jae
call
xchg
in
mov
rcrl
pushf
pop
lea
sub
pushf
pop
mov
jecxz
dec
pop
pushf
out
xchg
mov
lahf
and
push
cltd
xchg
cmp
mov
pop
imul
in
cltd
lahf
out
rcll
gs
daa
push
insl
les
lods
cmpsl
stc
fnsave
jmp
filds
daa
gs
lods
shrb
mov
xchg
mov
add
sub
pop
std
leave
idivb
push
std
lret
or
imul
mov
pop
mov
or
add
cli
and
roll
pop
repnz
xchg
jbe
or
push
imul
lds
imul
negb
into
imul
push
roll
mov
pop
mov
inc
cmc
mov
dec
ljmp
mov
pushl
dec
ja
sti
push
in
imul
mov
add
addr16
cmp
push
dec
pushf
xor
ljmp
cmp
out
xlat
daa
addr16
cmpsl
sti
cmc
in
in
or
adc
jns
push
cld
enter
in
jne
bound
repz
xor
inc
fildl
jne
in
mov
push
adc
and
mov
test
cmpsl
mov
lret
lret
jno
dec
fnstenv
scas
into
mov
ds
into
cmp
dec
mov
dec
mov
cmpsl
sbb
in
or
cli
std
adc
xchg
xchg
fstpt
lret
jno
and
scas
cmp
out
insl
or
mov
iret
jo
lahf
xor
push
lds
scas
cmp
rcl
or
ja
mov
sti
mov
out
jmp
xlat
mov
aam
jno
dec
push
cld
mov
jae
fs
mov
mov
mov
call
push
xchg
int
outsl
lahf
rorl
imul
pop
insl
jmp
ror
xchg
lods
imul
jae
shrl
pop
jbe
dec
pop
mov
cmc
xchg
jbe
repz
insb
aas
mov
and
push
pop
sbb
cmp
arpl
enter
iret
dec
push
lods
iret
dec
xlat
gs
lret
ja
inc
mov
in
cmp
lret
outsl
sahf
jp
adc
cmp
imul
stos
sub
dec
aas
dec
imul
mov
mov
out
cmp
mov
shrl
cmp
inc
in
inc
pop
or
add
inc
mov
repz
xchg
sub
cltd
fiaddl
int
adc
loop
push
jg
jge
cmpsl
push
addr16
aas
fidivrl
pushf
arpl
cmp
stc
cmp
in
cmpsl
fstpt
dec
sub
jno
pop
dec
or
lahf
shll
xchg
into
jae
cmp
mov
stc
das
cmpsl
stc
pop
cmp
mov
mov
in
add
pushf
jecxz
mov
jns
jle
aam
lahf
xlat
jg
inc
pushf
lods
pop
or
push
or
add
mov
xor
mov
mov
mov
aam
push
xchg
jae
insl
push
outsb
repnz
lahf
push
clc
aad
stos
adc
cwtl
sti
insl
xor
imul
dec
fldcw
lret
adc
fbstp
rcrb
imul
or
into
mov
lahf
cmpsl
add
insl
shr
sub
adc
fisubrs
popf
mov
mov
pushf
jle
imul
lahf
inc
add
mov
flds
jne
jne
add
lret
xchg
mov
rcrl
dec
or
cmp
dec
outsl
mov
iret
or
jb
mov
push
stos
out
fildll
add
flds
inc
jbe
pop
enter
push
cmp
cmp
in
lds
fiaddl
lret
push
add
cmc
xchg
enter
mov
sbb
xchg
adc
pushl
cmp
rorl
add
mov
cli
fistpll
aam
pop
mov
lret
dec
idivb
ficoml
pop
outsb
dec
jmp
pop
setg
dec
in
xor
out
or
jae
in
add
fmul
imull
std
and
xor
sub
das
sbbl
sarb
add
mov
xor
clc
shl
mov
fisubrs
into
bnd
insl
sub
icebp
xor
mov
push
lret
jmp
outsl
ds
movsl
negl
into
fistps
xchg
xchg
lahf
fstpt
imul
push
xchg
xchg
lods
jl
pop
pop
xchg
mov
pop
push
mov
addps
out
pop
push
test
testb
dec
imul
repz
xchg
test
mov
cmpsl
mov
dec
sbb
imul
pop
dec
or
sub
in
shrb
add
addr16
and
mov
clc
frstor
push
or
lcall
or
mov
shrl
xor
xor
inc
add
into
iret
out
inc
mov
xchg
cmp
inc
lcall
addl
clc
xor
jmp
lret
addr16
out
xor
divb
fidivrl
xor
inc
push
fs
mov
add
push
insl
leave
push
pop
das
jnp
mov
mov
jg
sahf
aam
iret
and
shll
xlat
pushf
add
outsl
fcmovne
dec
mov
xor
pop
repz
jmp
add
sbb
push
lahf
outsl
xor
imul
sub
popf
sub
mov
roll
scas
sub
sub
jg
cmp
repz
rcr
cltd
dec
mulb
pushf
jl
add
imul
sbb
mov
dec
adc
loop
sar
sub
add
dec
mov
movsb
in
aaa
mov
xchg
int
sub
pop
jecxz
mov
jle
jb
add
sbb
cmp
gs
xor
sbb
dec
xor
cmp
addr16
sub
jnp
ds
pop
mov
mov
pop
rcll
icebp
cmp
pop
lods
cli
cld
int3
sar
scas
mov
movsl
mov
shrb
mov
cld
shl
inc
fisubrl
aam
inc
dec
repz
jg
lret
jns
mov
gs
out
lret
mov
cmpsl
mov
cmp
add
shll
inc
push
pop
lret
dec
into
xor
lahf
pop
lret
into
pop
jbe
lret
or
cltd
shr
cmp
int
enter
push
sub
cmp
cmp
cmpsl
dec
sti
lret
lret
cmp
rcrb
mov
outsb
cmp
aas
jecxz
fs
jmp
mov
lahf
rcrb
inc
add
mov
jle
sti
shr
icebp
aam
repz
jg
aam
sub
push
xor
dec
lret
outsb
dec
mov
fstpt
cmp
lahf
dec
notb
aam
lret
lahf
add
ljmp
sahf
cltd
push
dec
or
mov
jge
adc
aaa
mov
add
in
push
cwtl
mov
daa
testb
lea
addr16
dec
fisubrs
gs
sub
lret
cmp
xchg
jg
jecxz
cli
push
mov
jbe
push
push
jge
xlat
push
add
lret
in
sti
dec
aam
imul
lret
push
jmp
cmp
dec
or
ficoms
cld
dec
pop
adc
testl
mov
mov
pop
aaa
add
inc
sti
pushf
enter
int3
in
add
add
push
lds
pop
lret
js
xchg
xlat
ljmp
lret
dec
cmp
or
aas
lret
mov
dec
xor
in
cmp
pop
cmp
xlat
cmpsl
stos
inc
lahf
mov
test
in
sahf
and
add
in
and
dec
in
xchg
cmp
sub
lahf
fbstp
pop
lahf
push
lret
add
pop
jg
mov
into
aas
fdivrp
inc
mov
xlat
jnp
lahf
imul
mov
sahf
lahf
jmp
add
xlat
fisubrl
stos
fwait
or
xor
popf
jns
push
sub
insl
mov
daa
pop
lahf
push
es
add
jne
lods
std
movsb
scas
insl
cwtl
sub
outsb
cmp
and
jmp
push
test
insl
jne
xchg
push
dec
push
mov
shlb
call
pop
test
test
loopne
aam
cli
sbb
insl
lret
cmp
ret
ljmp
das
ljmp
cmp
out
mov
imul
es
xchg
cmc
pop
jl
mov
dec
sbb
dec
dec
add
lret
xchg
jne
xchg
into
mov
pop
xlat
mov
dec
lahf
test
xchg
inc
cmp
inc
mov
out
xor
cmp
inc
rcll
lret
enter
dec
jbe
add
push
movsl
xchg
pushf
jp
lret
mov
pushf
js
cmp
rcrl
inc
add
cmp
into
pop
cltd
push
cmp
cmp
lods
sub
jmp
lahf
pop
les
mov
lcall
adc
ljmp
in
sahf
push
xchg
fildl
push
xor
popf
dec
push
push
lret
xchg
mov
mov
test
sti
cmp
daa
sub
push
add
sub
fidivl
lea
or
rcrl
xlat
aas
jg
push
pop
rcrl
testl
sub
pop
int3
dec
mov
movsl
mov
out
out
lcall
ds
std
xchg
cmp
inc
data16
pop
rcrb
push
mov
add
cmp
cmpsl
stos
popf
pushl
mov
daa
cmp
jp
insl
sar
stc
xor
hlt
sbb
cmp
scas
jge
inc
movsl
cld
fdivs
out
lret
aad
stos
leave
pop
pushf
xor
mov
jns
cmp
xchg
jge
outsb
in
inc
cmpsb
or
dec
into
mov
inc
dec
xchg
push
ret
or
dec
adc
in
leave
idiv
in
cld
dec
add
dec
push
dec
pop
imul
gs
jno
pop
enter
cwtl
mov
xchg
shrl
cltd
pop
add
push
jo
dec
outsl
int3
inc
pop
pop
imul
insl
fs
push
cmpsl
fwait
xchg
cld
lods
fs
push
pushf
mov
into
jb
xor
cltd
fistps
in
out
mov
movsl
push
enter
jle
aam
mov
sti
aad
sarb
out
lcall
or
pushl
fstps
std
lahf
cmp
pushl
imul
cmp
out
stc
aam
int
scas
faddl
rclb
cmp
gs
push
mov
popf
jns
dec
xlat
mov
std
repz
jg
int
fisubrs
aas
into
mov
xlat
out
push
mov
sbb
sarb
jmp
mov
pop
dec
dec
fstl
jge
imul
imul
push
jbe
jb
push
insl
imul
adc
outsb
mov
aam
dec
fldl
sub
adc
dec
jae
mov
or
cmp
xor
aaa
cmp
dec
jecxz
loope
inc
and
inc
jmp
sub
push
xor
inc
mov
and
xor
pop
pop
outsb
push
fistps
cmp
fsubl
leave
stos
push
lret
push
sub
jne
pop
das
out
mov
lods
into
push
ljmp
sub
pop
push
addr16
fnstenv
movl
push
mov
dec
pushf
mov
popf
inc
lods
shll
jle
into
add
xchg
ds
cmp
rorl
aad
mov
jmp
mov
push
jns
jp
xchg
fnstenv
lds
aas
lret
mov
cmp
es
xlat
cmpsl
jmp
popf
aad
fdivrp
cmp
xchg
pop
push
popa
movsl
negl
idivl
mov
or
scas
ror
mov
sub
ds
rcl
pop
dec
in
cmp
out
cld
rcr
xlat
push
add
push
mov
pop
outsl
inc
lods
rclb
push
jbe
jae
push
repnz
and
dec
pop
stos
mov
sarb
xor
mov
mov
push
add
add
int3
cli
dec
in
xor
inc
push
push
xchg
cmpsl
mov
pop
aas
arpl
dec
cmp
cmp
mov
bound
cmp
adcb
jg
nop
mov
inc
cmp
add
sub
xor
mov
xor
aaa
sub
pop
pop
push
pop
outsb
insb
or
repnz
out
pop
sbb
dec
pop
xor
cs
cmp
pop
or
gs
fnsave
lahf
jb
fwait
leave
divb
cltd
add
into
pushf
rcr
lcall
stos
jl
and
pop
cwtl
ret
jge
cmp
pop
add
fsubrs
jle
aam
mov
arpl
mov
out
push
push
jnp
imul
dec
add
lret
jbe
out
cltd
sub
dec
xlat
mov
mov
das
push
jno
mov
add
inc
insl
cmpsl
insl
cs
and
inc
test
or
jnp
dec
mov
fs
pop
stc
fnsetpm(287
mov
lods
outsb
cmp
outsb
rep
xchg
mov
pop
sbb
or
lods
call
sbb
pop
push
ljmp
into
jg
xlat
movsb
mull
sbb
jnp
std
into
negl
push
imul
push
imul
jmp
divl
xchg
push
ja
mov
push
ror
mov
aaa
popa
mov
push
inc
cmp
outsl
jo
push
je
jb
js
in
add
push
dec
dec
pop
pop
push
adc
cs
adc
jne
sbb
dec
pop
dec
pop
pop
sub
lods
xor
and
sub
loopne
sbb
into
xor
dec
pusha
adc
lahf
pop
sahf
push
popa
and
rcll
shll
mov
push
cmp
push
mov
xor
cs
cmpsb
lret
jp
aam
into
int3
addb
outsb
in
cmp
lcall
cmp
sub
popf
mov
add
push
fcoms
jl
repnz
movsl
lods
jl
jmp
sub
lret
into
and
cltd
sub
jmp
sahf
insl
xchg
idivb
jb
push
ja
popf
roll
setae
or
sbb
push
dec
or
cs
jg
mov
push
mov
pop
stc
aam
repz
xchg
mov
jg
inc
mov
or
inc
jb
negl
mov
or
pop
mov
rorl
scas
cmp
aas
jmp
pop
sbb
mov
add
outsb
pop
leave
js
push
lea
aam
pop
cld
dec
push
jg
mov
lcall
stos
test
add
lea
addl
cltd
movsb
outsw
sbb
sub
lock
sbb
mov
push
daa
sub
add
cmp
pusha
push
loop
cmp
add
sub
inc
jne
aas
dec
dec
cmp
push
cmp
dec
cmp
mov
inc
movlps
pop
into
je
in
mov
push
mov
sub
pop
retw
xlat
outsb
insl
add
cwtl
insl
aaa
add
or
sub
scas
push
in
das
fidivl
lret
ficompl
movl
push
jne
push
shr
cmp
add
lcall
addr16
adc
push
sahf
adc
stos
cmp
cmc
ds
outsl
in
in
mov
aam
ljmp
scas
sub
push
imul
out
sub
dec
jae
dec
adc
sahf
repnz
adc
add
sub
or
or
cmp
jns
movsl
dec
push
adc
cmpsb
je
add
add
xchg
enter
out
mov
add
in
mov
push
mov
or
or
push
mov
notl
pop
fucom
movsb
imul
neg
fucomip
push
jae
popf
mov
jo
xchg
sti
rorl
jmp
loopne
cli
mov
sti
imul
sbb
xorb
test
mov
inc
dec
add
mov
lahf
stc
mov
mov
test
dec
dec
cli
add
and
add
mov
insl
lds
xor
pusha
xchg
pop
pop
add
mov
stos
out
repnz
pop
mov
stos
adc
mov
jp
je
mov
and
pop
pusha
or
or
adc
into
pop
adc
mov
pop
sbb
mov
rcrl
fmul
movsb
add
dec
imul
dec
out
fs
jecxz
fwait
add
adc
mov
dec
and
push
jbe
jl
sti
lock
push
or
repnz
mov
and
jnp
in
or
out
xchg
gs
cmpb
cmp
scas
mov
aam
scas
mov
fnstcw
movsl
pop
jnp
leave
push
out
sub
ds
inc
jb
fildl
push
enter
into
pop
jns
imul
repnz
jno
push
std
imul
lret
sahf
pushf
jb
xchg
das
cld
xlat
cli
js
xchg
pop
lahf
repnz
inc
jb
jae
lods
lds
enter
imul
xlat
jns
in
jmp
cmp
in
add
mov
add
push
repnz
xor
imul
mov
or
push
flds
push
sahf
sahf
ljmp
cld
aad
xchg
leave
stos
lahf
insl
pop
enter
mov
stc
fbld
push
add
add
xor
arpl
dec
lea
add
add
dec
dec
cmp
cmpsb
and
xorb
mov
les
outsl
test
imul
fdivrp
inc
stc
cli
jnp
cld
ss
xor
jmp
decl
jp
or
or
sbb
fimuls
sub
add
xchg
or
lret
mov
xchg
or
pusha
gs
insl
ficoml
cmp
mov
mov
cs
cmpl
insl
les
sub
or
lahf
sbb
adc
int
dec
pop
nop
shlb
cmp
dec
pop
out
cmpsl
mov
dec
sbb
cmp
fdivrs
scas
mov
cmp
ds
mov
mov
mov
movl
bnd
cmp
mov
movzwl
aam
dec
lods
insl
testb
in
dec
idivb
push
xlat
xlat
xchg
and
insl
shrl
or
lret
jg
xchg
add
outsl
pop
enter
inc
gs
jo
sahf
sarl
repz
adc
xchg
icebp
aam
pop
or
ljmp
or
aas
in
popa
pop
scas
cs
jae
rcl
js
xchg
fisubrs
ja
jp
lret
cmpsl
pop
mov
mov
int
addr16
push
jp
sub
add
daa
addl
add
addl
pop
scas
test
lret
bswap
mov
jbe
je
out
ss
add
dec
aam
fldl2t
mov
and
xor
push
loop
add
outsb
gs
pushw
cs
add
or
cld
and
int3
dec
repnz
mov
sub
xchg
shrb
sbb
adc
dec
popa
call
xor
das
push
dec
test
ds
inc
inc
dec
push
push
into
stos
mov
popa
js
inc
add
inc
int
cmp
fbld
pop
inc
out
rcrl
push
not
push
mov
jbe
sub
pop
mov
fcoms
cmp
xchg
stc
shrl
mov
add
adc
aaa
movsb
adc
in
cmp
pop
sub
sub
pop
shrl
jae
lea
gs
in
mov
mov
pop
out
cmp
fidivrl
dec
stos
cmp
or
aam
lret
mov
add
gs
or
cmp
test
popf
rcrl
icebp
fxch
xlat
out
jns
loop
inc
movsl
dec
sub
fstpl
jb
jnp
jmp
cmpsl
std
mov
xchg
movsl
jge
inc
daa
pop
lahf
dec
jne
sbb
pop
mov
icebp
sub
cmp
out
dec
in
cmp
mov
lcall
pop
out
add
stos
add
adc
call
sbb
orb
xchg
mov
pop
imul
add
jnp
sbb
arpl
sub
dec
xor
jns
jge
shll
cmpb
push
dec
push
pop
pop
push
add
pop
pusha
pop
and
sub
sub
pop
mov
sub
gs
bound
in
ja
jae
add
lock
pop
sahf
shlb
add
shll
lret
xor
sahf
jbe
push
mov
cmpsl
fnstcw
jmp
lret
mov
mov
bound
xor
in
mov
mov
dec
in
fildll
dec
and
cltd
xchg
das
loop
xchg
mov
imul
inc
fcomps
jl
rcrl
ljmp
out
iret
cmp
dec
test
out
aad
je
idivb
pop
jg,pn
xlat
fildll
lods
jae
push
or
dec
mov
cltd
repz
out
fwait
cmp
ds
lret
sub
imul
rcll
push
stc
pop
push
or
enter
lahf
xchg
and
mov
lds
jne
stos
loop
movsb
mov
xlat
mov
orb
xchg
jmp
push
mov
sarb
or
imul
add
rcrl
push
divl
fldl
or
into
lret
lcall
inc
push
push
push
dec
push
popa
sub
cs
and
js
jl
orl
jo
xor
xor
inc
cmp
add
outsl
nop
xchg
mov
insb
inc
pop
xor
push
pop
js
pop
jo
imul
jae
adc
imul
adc
mov
mov
push
and
dec
push
sub
adc
arpl
insl
fistl
push
pop
push
push
fs
adc
ds
or
dec
push
inc
cltd
mov
mov
jb
xorl
and
inc
test
repnz
rolb
roll
pop
mov
or
xchg
or
inc
fcomps
lods
jae
sub
xchg
jl
repz
or
jns
in
into
xchg
das
ljmp
push
mov
lcall
xor
sub
std
shlb
aas
loop
movsb
in
xor
scas
sub
pop
enter
shlb
hlt
mov
cld
inc
jnp
xor
imul
mov
lret
mov
leave
fists
outsb
mov
sub
jne
dec
push
push
xchg
mov
push
addr16
xchg
sbb
mov
mov
fstpt
icebp
xor
movsl
jmp
mov
cmp
adc
cld
pop
mov
orl
pop
pushf
jb
inc
mov
mov
insb
jo
sbb
sub
add
shlb
lods
mov
subb
mov
insl
data16
cmp
sub
out
inc
sub
add
and
in
aam
sbb
pop
push
cs
dec
mov
loopne
imul
push
outsl
or
xchg
ret
push
call
xchg
repnz
stc
into
lahf
out
cmp
inc
adc
fstl
pop
rorl
cmp
inc
inc
pushf
xlat
or
call
scas
inc
add
bound
push
push
jne
std
call
scas
mov
cltd
dec
test
cmc
scas
mov
jns
outsl
mov
jg
push
jae
dec
add
insl
mov
pop
loop
lahf
fildll
in
adc
in
add
enter
lcall
sti
cmpsl
cmpsl
xchg
mov
stc
ficoml
cmp
insl
icebp
xor
add
add
jnp
jmp
adc
xchg
in
out
mov
mov
imul
popf
movsl
maskmovq
notl
insl
ljmp
testb
loop
je
fcmovbe
int
adc
add
ljmp
repz
push
pop
loope
fldt
lret
idivl
push
lret
mov
add
inc
push
shl
lret
mov
add
leave
inc
jo
adc
push
adc
inc
aas
pop
insb
imul
pop
push
push
int3
pop
addl
dec
push
cmpsb
mov
les
mov
jbe
js
jg
jnp
dec
pop
or
or
and
jge
xorl
in
daa
pop
push
mov
sarb
jno
daa
pop
xchg
pop
addr16
sub
sbb
ljmp
push
fs
bnd
add
mov
into
xchg
xor
enter
push
jp
jmp
pushf
pop
sti
inc
mov
adc
pop
ds
xchg
jns
enter
xor
lret
mov
mov
add
dec
pop
and
pushf
imul
jl
leave
xlat
xchg
mov
mov
add
stos
in
out
lahf
out
rcrl
dec
clc
iret
cmpsb
adc
push
jo
iret
das
jbe
cli
push
jns
dec
add
mov
cmpsb
push
mov
in
and
out
xchg
push
xlat
add
sub
lahf
in
hlt
movsl
jns
imul
jmp
xchg
jg
jle
sti
pop
push
aam
and
lods
fs
mov
sub
and
mov
inc
ja
jnp
in
add
xlat
out
pop
add
pop
push
stc
sbb
insl
lahf
aam
cli
jge
mov
mov
mov
jge
jg
dec
add
int
inc
push
adc
or
mov
arpl
add
imul
dec
push
nop
lret
add
es
inc
inc
aas
inc
add
pop
pop
pop
gs
add
outsb
mov
add
jb
mov
jbe
mov
fs
popa
jp
sbbl
enter
adc
ss
ds
inc
sub
in
sub
jle
into
or
dec
mov
movd
xor
cmp
insl
cmp
pop
add
push
jl
dec
push
sar
ss
add
inc
push
bound
addr16
jo
es
sahf
pop
inc
dec
push
repz
xlat
out
imul
push
sub
inc
test
push
movsl
pop
fmull
out
xchg
mov
lds
cmp
in
pop
lods
ficomps
flds
push
push
imul
shrl
xchg
pushf
cmp
mov
sub
xchg
imul
cmp
cmp
ja
test
jns
insl
sbb
xlat
clc
int3
mov
or
hlt
lcall
mov
repz
push
sbb
daa
daa
fstl
stos
pop
es
imul
pop
push
daa
xchg
sahf
jecxz
lcall
xor
scas
cmpsb
jno
sti
cmp
dec
sti
cmp
jnp
movsl
pop
int
test
fs
test
out
xchg
jg
out
pop
add
movsl
mov
clc
jp
xchg
pushl
in
add
inc
push
push
add
sub
jmp
or
lock
and
mov
ret
push
add
cmp
sub
inc
repz
pop
ds
inc
jg
and
dec
add
dec
push
dec
pop
arpl
push
outsl
inc
insl
push
pop
xchg
out
adcb
jecxz
test
inc
dec
add
and
jb
pop
cmp
cmp
ds
and
outsb
mov
push
movsl
pushf
jle
xlat
scas
sub
pop
cmp
jge
cmp
pushf
pop
out
pop
enter
lds
insl
or
or
sub
lahf
dec
xor
scas
sub
inc
lahf
lds
jbe
cmpsl
mov
imul
mov
sub
cmp
out
imul
or
in
mov
scas
sahf
aam
and
dec
in
cmp
shr
iret
test
stc
shl
mov
fisubs
mov
lods
std
mov
cmpsl
jbe
in
cmp
test
test
daa
pop
lret
sub
jae
leave
divb
pop
roll
cli
mov
cld
cmp
pop
jno
lret
jl
push
mov
movsl
dec
idivb
cli
lret
push
ja
and
pushf
shll
into
xchg
sti
mov
lahf
in
cmp
pop
sbb
push
mov
std
insl
jl
add
lds
add
or
xor
push
sbb
push
dec
dec
push
push
jae
add
or
repnz
fwait
popa
sbb
gs
xchg
arpl
add
je
aas
cmp
inc
test
xor
add
adc
adc
push
js
dec
pop
sbb
call
inc
dec
inc
dec
pop
push
push
dec
add
cmp
jecxz
mov
xchg
ljmp
aad
ret
sahf
xchg
dec
divb
in
add
jl
out
jmp
mov
rcrl
aaa
fistl
sahf
lahf
movsl
jnp
insl
or
rorl
jns
iret
xchg
xor
jmp
cltd
jecxz,pn
xchg
push
into
clc
iret
idiv
inc
cltd
mov
mov
push
push
insl
cli
pop
int
scas
pop
lret
add
dec
mov
xchg
ljmp
scas
jns
dec
std
xchg
cmp
jnp
jmp
fstpt
in
je
cli
mov
test
jno
mov
jo
lods
call
xchg
jae
ja
adc
int3
sub
pop
pop
int
xchg
xor
sahf
xchg
jl
rorl
ljmp
push
hlt
test
mov
popf
inc
push
or
mov
sahf
sub
pop
lods
insl
add
enter
cmpsb
lahf
fnstcw
imul
push
jnp
dec
add
mulb
out
loop
movsb
notl
jmp
imul
scas
xlat
ss
cmp
hlt
in
cmp
pop
pop
rcrl
lcall
adc
mov
pop
popf
add
mov
jecxz
lret
movsl
add
jmp
rcl
andb
bound
xchg
push
dec
xorb
jg
cmp
sbb
lret
rcrl
push
or
adc
leave
movups
push
stos
or
movl
ficompl
scas
outsb
push
sub
das
sub
enter
mov
jmp
lret
mov
dec
addr16
pushf
into
mov
outsb
mov
shlb
lods
movb
aam
fisubrl
cltd
arpl
xchg
push
lcall
hlt
dec
dec
cli
or
pop
push
std
cld
into
movsb
adc
fists
ljmp
roll
scas
insl
sahf
gs
outsb
cmp
cmp
or
aam
ljmp
pop
inc
mov
inc
jae
faddl
push
cld
out
mov
ficompl
aam
faddl
pop
std
fxch
scas
add
fnstsw
int
adc
push
fiaddl
push
pop
jge
mov
or
aaa
xchg
into
mov
mov
xor
adc
repnz
or
mov
or
js
popf
cld
fst
xlat
iret
shll
roll
xchg
into
lahf
dec
cmp
jecxz
fcomi
aam
pushl
stos
lahf
push
imul
or
mov
xor
scas
cmp
insl
jp
rcll
mov
mov
adc
xlat
add
insb
aas
jge
aas
test
lods
pop
jecxz
mov
jmp
cmovp
pushf
mov
cmpsl
jae
test
cmp
pop
pop
add
mov
jne
pushf
into
cmp
aas
inc
dec
push
push
xchg
lahf
mov
push
pop
pop
js
pop
pop
pop
dec
and
push
jae
and
idivl
shl
sbb
push
and
lahf
lods
cmp
cmp
sub
pop
pop
push
push
push
mov
push
cld
into
jp
adc
repz
adc
xchg
out
repz
xor
mov
dec
mov
sub
xor
mov
or
xchg
push
cld
mov
ret
dec
insl
out
add
add
leave
adc
mov
ljmp
add
cmpsl
pushf
pushf
xchg
lods
ret
movsl
push
jo
push
xchg
xchg
int
aas
dec
out
je
sub
cmp
inc
mov
push
in
lret
lahf
inc
push
push
add
pushl
cmp
cmp
or
out
xor
stos
repnz
add
sub
cmp
sub
inc
push
int3
mov
pop
jo
imull
enter
in
das
cld
aam
cld
ljmp
movsl
jo
int3
xchg
mov
push
jp
jae
sub
cltd
mov
ljmp
popf
jbe
stc
sub
scas
cmpsb
jo
sub
sub
jns
outsb
mulb
cmp
jns
leave
push
push
xlat
mov
push
in
mov
rolb
mov
scas
jns
ds
cmp
call
cli
pop
jns
imul
pop
dec
jo
das
call
mov
mov
push
push
push
mov
add
int
mov
sahf
cltd
out
aas
jg
imul
lods
idivl
add
add
add
jg
arpl
mov
into
mov
dec
fs
test
jge
int
mov
addr16
cmpsl
push
add
imul
lods
or
add
repnz
fidivrl
cmpsb
pushf
jg
hlt
pop
in
push
xchg
dec
dec
jmp
out
pop
enter
push
ficoml
push
inc
sub
mov
xchg
push
push
aam
jp
in
lahf
push
inc
add
repz
out
sub
stos
cmpsb
cmpsb
xlat
mov
cld
sarl
stos
cmp
xor
jmp
sahf
pop
clc
cmp
lods
addr16
push
or
mov
dec
test
lret
rorb
cmpsb
fbld
xor
leave
xor
lds
daa
cltd
lahf
xor
xchg
jmp
insb
cli
jl
fisttpl
scas
jns
cmp
outsl
outsb
sub
push
pop
insl
cmpsl
fnstcw
jmp
out
mov
add
xor
jecxz
stc
aas
fiadds
jnp
or
or
dec
jne
cmovg
out
lcall
mov
push
stos
into
movsl
inc
add
enter
lcall
jns
jmp
idivb
pop
dec
push
xchg
cs
sub
inc
push
gs
mov
add
inc
add
jg
mov
and
gs
dec
sub
mov
dec
lds
mov
sub
cs
xchg
pop
add
push
fxch
mov
add
add
mov
push
cmpsl
fidivrl
or
lret
sti
inc
cltd
daa
gs
cmpsl
pushf
mov
jbe
jbe
lahf
in
addr16
dec
mov
faddl
push
faddl
lret
xor
sahf
xchg
jb
enter
jg
cmp
ret
push
inc
out
cmp
cmp
cli
push
data16
xchg
mov
dec
mov
outsl
push
jo
jbe
jp
iret
or
add
or
cli
filds
dec
push
push
fmull
jno
jb
xlat
mov
or
xchg
hlt
test
std
dec
aam
mov
test
lret
mov
ja
fnstsw
mov
add
scas
lret
aam
add
cmp
mov
ja
adc
scas
cld
xlat
je
xor
add
xor
jbe
xor
push
jns
jbe
leave
pop
xchg
push
std
mov
xlat
push
add
loop
lcall
gs
cmp
sub
jno
cli
rcrl
xchg
cltd
jg
cmpsl
push
pop
je
fmul
testb
aam
fcmovu
push
push
pop
and
or
out
imul
or
or
rcr
lds
lret
sbb
ljmp
clc
cmp
xchg
push
cmp
pop
pop
inc
or
pop
stc
jg
or
add
pop
stos
pop
mov
fs
addr16
lret
shll
xchg
cld
stc
xor
popf
mov
cld
lret
push
inc
addr16
leave
mov
fdivs
push
sti
popf
out
in
into
or
dec
push
xchg
clc
shl
or
add
jae
gs
fiaddl
push
xchg
lahf
mov
iret
lret
xor
cmp
dec
push
lahf
mov
xchg
push
ret
aam
adc
fcmovbe
ret
aam
shlb
pop
pop
add
mov
mov
ljmp
movsb
shlb
mov
or
ja
mov
int3
rcrl
fwait
cmp
out
mov
mov
add
add
loop
pop
shll
cmp
stos
add
mov
movsl
push
ja
adc
jae
jmp
xlat
iret
aas
fmul
hlt
mov
mov
mov
fisubl
sbb
xor
stos
neg
jg
push
jbe
xor
cmp
into
ficompl
add
jmp
inc
xor
stos
mov
mov
stos
iret
insl
imul
xchg
mov
into
stos
push
or
sub
sub
imul
mov
mov
dec
stos
imul
std
iret
idivb
repz
out
repz
jecxz
mov
pop
call
or
cmp
mov
lea
pusha
mov
filds
scas
lret
sar
sub
lcall
xchg
pop
cltd
xchg
gs
cmp
lods
lret
sub
push
push
lret
mov
lods
lds
lret
rcll
dec
fidivrl
dec
ja
fwait
pushf
int3
xchg
push
addr16
in
mov
scas
cmp
movsb
mov
mov
lret
inc
or
jns
mov
movsb
test
lcall
lea
cmp
push
popa
jnp
mov
shll
add
jp
outsb
ds
neg
xchg
mov
xchg
out
inc
add
jns
lods
adc
pop
cld
lret
pop
std
cld
into
mov
mov
add
lret
lods
cli
push
jns
lret
divl
or
mov
movsl
jg
push
jno
inc
loopne
push
jne
cmpsl
pop
jnp
outsb
ss
cwtl
jge
stc
inc
jns
push
fs
popf
jmp
mov
movsb
insl
push
cs
jle
into
outsl
mov
pop
mov
mov
iret
inc
daa
xor
fucom
mov
ss
test
inc
sub
mov
add
cmpsb
popf
jns
sub
or
lret
mov
test
jmp
cmc
iret
enter
jns
pop
cmp
pop
pop
sub
or
pop
enter
or
dec
setge
or
idivl
pop
mov
insl
push
sbb
dec
cltd
addr16
fiadds
fnstenv
pop
int3
enter
rcrl
pop
mov
shll
push
pop
add
mov
mov
mov
insb
popf
dec
popa
lcall
fidivrs
pop
enter
out
sbb
or
xor
push
push
repz
pop
pop
out
imull
lret
cmp
fiaddl
cmc
dec
push
fnstcw
outsb
mov
jbe
push
int
daa
xchg
cltd
int
fwait
test
sti
sub
inc
in
cmpsl
or
das
aas
pop
std
aam
scas
cmpsl
jo
lret
fucomip
sub
enter
ja
adc
repnz
jmp
test
xchg
je
jae
out
repnz
out
imul
ss
jg
popf
push
jo
std
or
aam
repz
sarl
add
cltd
decl
or
rcr
add
jbe
add
mov
scas
in
mov
mulb
cmp
mov
ror
sub
jg
rcll
sub
scas
cld
xlat
jae
pop
repz
adc
sti
jge
cmc
gs
xlat
popf
lahf
sub
cmpsl
push
insl
shlb
pop
popf
push
jae
int
outsb
sub
push
xchg
add
pop
xlat
add
adc
rcrl
lods
lds
cmpsl
cltd
jle
dec
pop
aad
lods
rcr
lahf
cmp
lods
push
pushl
jg
sahf
addb
cmp
add
insb
cmp
add
pop
lret
xchg
mov
pop
ret
nop
push
xchg
push
aam
std
fiaddl
push
rclb
cli
dec
jl
jb
sarl
jmp
imul
mov
push
pushf
cmpsl
pop
push
out
xchg
adc
sahf
mov
xchg
daa
push
push
pop
mov
xor
add
or
jo
inc
iret
addr16
into
mov
jo
mov
push
mov
mov
xchg
je
push
add
lret
pushf
dec
mov
mov
fiaddl
push
rorl
mov
lret
cmp
decb
rcrl
idiv
xlat
into
inc
popf
mov
cmc
in
test
aam
pop
ja
fimull
mov
cld
ds
mov
insl
add
cmp
scas
or
pop
icebp
fimull
mov
mov
xor
lcall
movsl
cmpsl
add
xor
mov
fnsave
fsts
sub
adc
mov
jmp
int
xchg
sub
sti
xlat
iret
bnd
or
jmp
adc
into
pop
mov
add
mov
test
sbb
push
sbb
lahf
fnstenv
pop
sti
mov
push
pop
pusha
cmp
outsl
pop
or
mov
jb
fucomip
into
iret
lock
negb
call
popf
pushf
xor
mov
add
or
push
stc
sbb
hlt
dec
push
lahf
jecxz
aam
repz
cmpsl
gs
icebp
aam
push
cmp
mov
div
enter
xor
mov
movsl
jbe
ror
into
rcrl
cld
imul
lret
faddl
in
add
cmpsb
jo
loope
jae
insl
mov
jns
cmp
scas
std
lret
fidivrl
ds
add
ljmp
into
imul
lahf
bnd
cmp
add
ljmp
add
cmp
sti
sub
insl
aas
lret
cli
jl
aas
ljmp
lahf
dec
mov
xchg
stos
sub
in
lret
xchg
test
hlt
ljmp
xchg
fisubrs
jae
cmp
add
imul
in
popf
imul
aas
xor
mov
add
cmpsl
sbb
jg
jns
and
fmull
lahf
pop
test
push
xchg
cltd
jnp
dec
add
cs
jecxz
dec
stc
aam
sub
mov
dec
fcmovb
into
mov
cmpsl
mov
push
jne
lahf
and
push
insl
imul
lahf
mov
lret
je
scas
cmp
pop
stc
aam
mov
leave
ficoml
vcvttsd2si
add
add
pop
int3
jmp
cltd
ret
ret
jae
mov
stc
pop
mov
div
add
frstor
cmpsl
clc
fcmovb
mov
cmp
jmp
cmp
push
out
int3
orb
mov
xchg
mov
sub
stc
lret
out
xchg
fnstcw
dec
adc
jge
cmp
pop
lret
movsl
clc
shll
aam
mov
sbb
imul
sarl
push
xchg
lods
push
add
add
mov
pushf
loope
into
pop
jne
ljmp
add
std
sbb
incb
mov
lret
enter
cmp
xchg
push
popa
std
push
pop
mov
sub
cltd
dec
sub
mov
ja
pxor
cmp
cmp
cmp
cmp
lahf
dec
add
push
fstpt
leave
ljmp
daa
pop
pushf
dec
aad
ja
inc
addr16
push
push
xchg
stos
cmc
jbe
out
lret
inc
fimull
fistpll
mov
xchg
fstpt
xor
das
out
fiaddl
jbe
sti
xchg
out
out
in
mov
sub
inc
scas
add
pop
js
pop
decl
shll
add
cld
mov
sub
leave
aam
push
std
mov
out
dec
icebp
into
lods
mov
lea
lods
or
jmp
into
imull
xchg
jge
push
and
insl
in
add
enter
scas
int3
into
jmp
sub
xor
lahf
daa
push
fs
add
mov
or
add
das
dec
in
lahf
xchg
jae
dec
add
rcrl
xchg
lds
into
call
ds
test
in
xor
in
xor
test
sub
cmp
sahf
scas
out
das
jnp
imul
pop
test
std
cld
shl
cltd
lret
push
cmp
int
das
int
daa
xchg
cltd
sahf
pushf
push
jns,pt
cmpsl
add
outsb
jmp
jl
jnp
inc
sti
lret
aas
repnz
pop
pushf
aam
mov
add
lahf
cmp
ljmp
std
xlat
movsb
cmp
std
cmp
stc
inc
shlb
sbb
lahf
testb
jbe
lret
cmp
scas
sub
je
mull
adc
stos
cmp
mov
iret
inc
xchg
xor
sub
por
rclb
mov
in
imul
jb
cwtl
jmp
mov
cmpsb
daa
jg
fcmovbe
adc
outsl
cmp
in
pop
add
aam
in
mov
xchg
xor
jnp
enter
outsb
sti
cld
out
notl
pop
mov
movsl
add
popa
add
add
pusha
in
mov
imull
shll
xchg
push
ret
pop
shll
dec
add
mov
or
mov
push
pop
test
repnz
sub
cmp
add
fists
lret
mov
imul
add
aas
lcall
push
push
scas
imul
add
cmp
movsl
push
jnp
lods
int
jnp
dec
pop
xchg
cmp
cmp
popa
dec
mov
stc
icebp
xor
divl
mov
movsb
in
sub
or
lcall
mov
mov
jb
mov
fucomp
lahf
sub
repnz
iret
out
xchg
fs
sub
arpl
fucomip
fimuls
xchg
sbb
mov
jecxz
fucomip
ss
in
lahf
dec
sub
push
fstpt
leave
push
arpl
pop
out
xor
repz
jg
cmp
addr16
stos
sub
scas
imul
lods
call
mov
cld
lods
loopw
jmp
mov
inc
mov
in
inc
test
push
fwait
stc
aam
mov
into
sti
mov
imul
outsl
inc
mov
sub
ret
jne
je
or
mov
imul
sub
mov
pop
mov
mov
push
xchg
lret
xchg
pop
shll
cli
or
out
sbb
hlt
push
push
roll
test
xor
out
icebp
das
pop
in
aam
enter
scas
into
iret
ljmp
sub
out
shlb
jle
lahf
insl
ds
int
and
cmpsl
test
add
fnstenv
push
push
addr16
or
popf
xchg
scas
ja
sti
jle
push
dec
adc
testb
push
leave
mov
xchg
mov
mov
rcrl
cmpsb
imul
sar
lret
cmp
lds
jno
in
or
fidivrl
dec
scas
daa
push
imul
xlat
rclb
pop
add
lret
fs
jge
cmp
aam
scas
fmull
xchg
addr16
aad
insl
mov
scas
cmp
mov
add
stc
testl
mov
test
aas
pop
mov
enter
dec
negb
into
sahf
lcall
ds
push
mov
stos
jp
fildl
jge
ud0
test
jmp
lret
out
repz
jns
scas
or
shlb
out
jecxz
lcall
add
or
jl
pop
das
sbb
xlat
mov
repnz
xor
daa
test
cmpsl
push
insb
lds
cmp
arpl
inc
add
or
shlb
xchg
sbb
repz
xchg
iret
pushf
dec
cltd
jo
rcll
lret
iret
lock
dec
shlb
mov
or
into
outsl
jbe
add
ror
pushf
jg
cld
xlat
push
push
mov
adc
shrl
add
rcll
testb
sbb
jle
pushf
pop
aam
test
sarl
or
add
into
dec
movsl
addr16
lret
inc
add
mov
out
xchg
and
sub
dec
in
xor
lret
dec
fists
shrb
sub
iret
dec
scas
cmp
jle
leave
ror
pushf
pop
popf
xlat
cmp
push
gs
movsl
jge
inc
mov
xlat
movsl
jp
mov
aam
enter
cvtps2pi
rorl
cmp
test
clc
xlat
out
icebp
xor
hlt
in
xor
stc
cld
cmp
cmp
pushf
jecxz
xor
xor
lods
aam
pop
or
xor
jecxz
movsb
push
or
out
lahf
in
in
lret
push
lds
imul
sub
shlb
mov
mov
xlat
sub
movsl
push
shrb
or
pop
int
inc
adc
movsl
sbb
cmp
jg
add
int
ljmp
fs
mov
jae
mov
popf
lret
div
sub
push
sbb
mov
enter
inc
or
fnstenv
imul
jbe
movsl
inc
push
mov
pop
bound
repz
mov
gs
imul
fisttpl
dec
jl
jb
xor
xor
into
into
mov
iret
repnz
cmp
ds
jmp
shlb
scas
lret
lret
std
cli
sub
ficompl
into
mov
leave
fnstcw
leave
aam
jp
insb
ds
add
daa
addr16
lret
lds
dec
adc
xor
fnstcw
insl
push
cmp
cmp
jmp
cltd
xor
xor
sahf
pushf
stc
ds
aas
idiv
xlat
int
daa
cmp
cmp
pop
ss
popf
jbe
pop
pop
cmp
pop
iret
cmp
in
pop
sub
imul
lcall
insl
sub
stos
fwait
adc
sub
pop
shll
lahf
aam
jp
push
jbe
out
rolb
mov
lahf
out
in
into
aas
lret
in
or
shll
push
xchg
movsl
aas
cmp
lods
add
mov
dec
pop
mov
lcall
lods
pop
or
push
inc
jo
daa
mov
ss
add
push
or
or
or
pop
or
movsb
repz
jl
cltd
jmp
aas
lret
inc
push
lret
dec
fstpt
jg
xchg
outsl
testb
push
jo
push
pushf
xchg
push
sub
rclb
pushf
pushl
ror
mov
out
shrl
push
data16
mov
in
lods
leave
imul
ss
loope
jns
dec
sub
in
lahf
scas
enter
cmp
aam
cmp
and
enter
imul
ret
mov
lret
xor
ljmp
lahf
insl
cmp
jp
aam
stos
mov
loop
movsl
scas
mov
xor
xlat
xchg
push
lahf
insl
cmp
dec
push
cwtl
shl
mov
lahf
dec
ljmp
jecxz
shrl
fisubrs
fs
jno
jmp
jg
xlat
mov
or
sahf
lahf
imul
rcll
sbb
insl
into
sar
mov
icebp
ss
repnz
xchg
lret
mov
sub
imul
xor
fstpt
stos
cmpsb
jg
xor
cmp
add
out
xchg
test
mov
fistps
cmp
lret
mov
lcall
add
das
jbe
sti
pop
push
lret
test
jne
mov
mov
add
add
or
gs
or
add
xchg
mov
lahf
loope
jecxz
mov
addr16
lods
xor
dec
and
lret
call
mov
cld
into
jp
mov
popf
dec
addr16
ret
pop
rcrl
out
stc
int
jno
sub
cltd
ljmp
xchg
out
xlat
mov
jo
fldcw
daa
push
insl
leave
pop
cltd
pop
pop
add
cmpsb
adc
insl
pop
iret
push
daa
xchg
pushf
xchg
jno
jmp
fwait
pushf
std
mov
lahf
cmp
gs
cmp
mov
lret
aas
lret
lods
cmp
xor
lret
jmp
xlat
bnd
push
push
push
cmc
pop
push
fmul
cmpsb
adc
lret
jo
iret
shll
imul
sti
sub
jnp
mov
shl
pushl
push
inc
mov
shlb
sti
insl
ds
in
inc
jmp
insl
in
iret
repz
pushf
jg
push
pop
arpl
pop
out
sub
or
push
pop
jns
jmp
into
rclb
dec
jb
xchg
xchg
in
lods
fstl
mov
js
xor
jnp
inc
mov
cmpsb
jns
add
ds
jmp
mov
push
enter
pop
jecxz
mov
push
ljmp
mov
inc
jb
mov
cmp
xchg
daa
enter
pop
jbe
add
dec
add
imul
std
add
or
dec
lret
mov
lret
xor
popa
out
incl
fstpt
in
ret
jnp
dec
adc
sbb
jg
mov
push
mov
outsl
fs
aas
testb
in
movsb
pop
pop
lds
cs
pushf
imul
mov
cld
jmp
push
mov
add
fbld
lcall
scas
push
or
mov
push
mov
lahf
movsl
mov
aam
fmull
jb
aam
dec
push
push
jo
divl
pop
imul
sub
cmpsl
push
push
adc
push
mov
jg
sahf
xor
ljmp
inc
jmp
iret
cmp
repz
lcall
in
shl
dec
sbb
imul
push
add
repz
daa
clc
sub
aas
mov
jg
xchg
rcll
out
xchg
mov
xor
out
jecxz
in
xor
mov
daa
fstpt
out
jo
mov
lahf
jns
inc
xchg
aas
push
das
jge
ds
ljmp
add
repz
jg
ljmp
pop
mov
add
fstpt
dec
or
add
je
repnz
cltd
mov
lret
arpl
xchg
add
push
sahf
pushf
jnp
cmp
addr16
outsl
cmp
dec
mov
clc
aam
pop
mov
repnz
into
push
pop
mov
leave
jmp
jne
jo
pop
std
push
sbb
mov
scas
imul
gs
aas
mov
xchg
out
cmp
addr16
pop
mov
mov
shll
stc
cmp
insl
pushf
cmp
sahf
out
test
jge
jo
mov
dec
adc
cmp
pop
iret
add
dec
xchg
cmp
imul
fistps
xchg
lcall
push
fs
into
push
out
aas
lcall
jno
push
push
push
jae
aas
sub
cmp
loopne
test
fstl
fiaddl
les
ja,pn
lds
cmp
cmp
movsl
mov
repz
lcall
mov
and
push
stos
mov
shr
cmp
cmp
push
or
lcall
xor
lahf
lahf
sti
ret
shl
sub
jns
jae
into
into
imul
imul
sti
push
or
mov
mov
lret
cmp
pop
add
lahf
xchg
gs
dec
xor
in
xor
pop
into
mov
lret
iret
lahf
dec
and
rolb
into
roll
xchg
loope
iret
movsl
fcmovne
dec
xchg
cmp
aas
inc
inc
add
pop
testb
rcll
cmp
dec
pop
pushf
push
jns
daa
bound
jge
cmp
cmp
cmp
mov
lcall
mov
cld
clc
das
idiv
jns
int3
push
push
xchg
stc
aam
jno
dec
imulb
imul
or
push
xchg
loop
dec
mov
lahf
in
push
push
inc
movsl
jns
jmp
lahf
push
mov
mov
cmp
cmp
lahf
rorb
sti
jno
iret
repz
lret
repnz
cmpsl
sti
jle
in
movd
arpl
pop
popl
pop
test
clc
das
in
mov
xchg
push
iret
sub
push
fidivl
inc
lret
jl
cli
dec
out
cmp
push
int
cmpsl
push
fs
inc
addr16
std
mov
jns
hlt
mov
adc
cmp
pop
sbb
sti
adc
xlat
shrl
xor
sub
arpl
mov
jno
push
fstp
dec
gs
sarb
insl
movsb
pop
push
mov
fnstcw
aad
stos
out
lret
das
push
out
aas
into
out
imul
jg
sub
push
out
in
shrl
aam
mov
ret
or
mov
int
gs
or
pop
mov
rcl
mov
mov
enter
js
iret
popf
xor
cmp
lds
mov
fsubl
sbb
out
in
and
int
sub
add
cltd
mov
out
jne
scas
xor
lea
xor
out
cltd
rorb
mov
xlat
loop
cmp
push
addr16
aam
jp
rcll
mov
xchg
ficoml
add
mov
test
cmp
divl
lret
cltd
jmp
lds
push
push
jo
or
sahf
insl
jg
pop
push
add
mov
sahf
enter
sub
inc
dec
je
sti
cmp
into
xlat
out
mov
scas
cmp
xchg
stos
lahf
or
pop
stos
fwait
push
out
mov
ljmp
cmp
cmp
idivb
shr
adc
mov
mov
cmp
arpl
xlat
stos
lret
mov
mov
push
roll
test
out
jle
jae
jmp
inc
mov
fucomip
fisttpll
cmp
rorl
std
imul
in
enter
fiaddl
cld
xlat
pop
xor
aad
loope
std
stos
cmp
cmc
in
pop
std
fdivs
jg
stos
mov
stc
into
pop
mov
pop
ss
mov
pop
imul
into
cmpsb
add
filds
mov
imul
fs
xchg
addr16
mov
iret
mov
pop
int3
jne
mov
mov
cli
lahf
out
xor
push
jae
and
inc
pop
mov
pop
lahf
xchg
dec
mov
jb
add
jae
lcall
ss
in
cs
movsb
sti
insl
das
fistpll
dec
in
cmp
push
adc
test
pop
popf
xlat
cmc
push
outsl
cmp
or
pop
push
jecxz
mov
pop
push
vpackssdw
or
cltd
push
jg
inc
sbb
aam
mov
jmp
idivb
aas
sahf
cmp
pop
aam
test
push
dec
inc
cltd
mov
mov
xlat
jecxz
xchg
fistpl
fstpl
push
addr16
push
repnz
pushf
add
or
sub
mov
jl
push
dec
aas
cli
imul
or
icebp
cmp
jge
movswl
call
lahf
dec
out
sub
cmc
shrl
das
fists
repz
lahf
in
jle
sti
pop
bswap
mov
stc
fbld
jnp
jns
jnp
sahf
pop
scas
stos
sbb
jp
maskmovq
negl
xchg
jg
loopne
jne
jl
jl
fcmove
int
ret
aam
insb
push
insl
add
add
lret
roll
aaa
imul
pushf
enter
dec
mov
xchg
lahf
lods
or
lret
push
cmpsl
xor
jbe,pt
push
mov
sub
arpl
outsb
sub
add
pusha
xor
stos
addr16
inc
pushf
mov
pop
aad
add
dec
adc
rcr
push
fists
xchg
adc
sub
rcll
aam
jb
lahf
cmp
cltd
in
adc
pushf
imul
cld
pop
loope
or
pop
stc
sbb
lret
movsl
pop
dec
addr16
xchg
cltd
pop
sbb
xchg
mov
jnp
dec
repz
dec
imull
imul
cmp
sar
push
aam
sub
pop
rcrl
lods
jle
enter
lods
push
mov
ds
movsl
mov
lods
cmp
dec
mov
mov
mov
cmp
in
mov
cltd
outsb
test
test
xchg
repz
mov
mov
insl
jo
dec
cmc
in
jmp
into
push
sahf
pushf
jae
add
cmp
inc
mov
repnz
notl
loop
xor
inc
pop
in
xor
pop
mov
in
lahf
pop
xor
cltd
jg
cs
pop
mov
pop
into
xchg
push
sub
aaa
outsb
insb
or
lcall
push
imul
pushf
push
jp
movsl
dec
data16
lods
fs
cmp
push
mov
mov
test
and
inc
sbb
jns
imul
mov
fisubrl
popa
into
mov
out
xchg
mov
iret
add
pop
xchg
jns
repz
int3
lret
pop
mov
imul
dec
jl
push
jg
cmp
jae
jg
data16
outsl
fcmovnbe
dec
test
dec
test
cmc
scas
sub
cmp
or
mov
test
mov
cltd
push
out
fucom
dec
fdivr
inc
lahf
inc
das
mov
clc
in
xor
mov
cmp
jmp
pushf
imul
or
shll
xchg
mov
dec
insl
sub
mov
lcall
outsl
lahf
rorl
lahf
iret
inc
mov
xlat
mov
addr16
movsl
stc
shll
pop
popa
leave
pop
mov
xlat
jnp
pop
sti
cmp
scas
cmp
xchg
sti
fildll
lahf
lods
jnp
imul
ja
sbb
cmp
faddl
jns
call
push
fbld
add
stc
frstor
dec
test
pop
icebp
ficoml
jns
dec
xlat
push
xor
outsl
jbe
cmpsb
add
or
imul
into
jge
repz
xor
cltd
fwait
pop
inc
add
xchg
cmp
ljmp
lods
add
ficoml
cltd
cld
jmp
addr16
shrl
push
cmp
xchg
iret
xchg
imul
mov
insl
add
pushf
mov
insl
xlat
mov
pushf
pop
lret
sbb
jns
mov
lods
std
lahf
gs
fs
out
lahf
pop
out
insl
fcmovnu
mov
in
sub
out
push
dec
stc
shll
cmpsl
or
jmp
scas
mov
dec
mov
mov
imul
mov
jae
stc
aam
std
xchg
cmp
aam
jp
enter
and
mov
cmp
mov
insl
xlat
lods
rorl
addr16
cmp
mov
shll
pop
insl
dec
divb
dec
adc
sub
dec
scas
jns
lahf
push
inc
and
dec
jg
aam
fcomi
rcrl
sbbb
add
jae
or
aad
jae
call
push
addr16
mov
shl
cmp
jae
adc
mull
or
fldt
mov
out
cmp
jbe
fistpl
mov
xchg
cmp
addr16
push
ljmp
mov
ficoml
std
scas
lret
aam
mov
mov
jo
mov
and
push
add
push
push
xor
or
jg
orl
jp
mov
xorl
xchg
lea
sti
andb
insl
js,pn
popa
add
pop
pop
xchg
sub
andl
jb
scas
repz
lahf
ds
pop
into
fsubrl
cltd
stc
cs
lahf
ja
shll
cmpsb
cltd
jle
or
push
jg
in
lods
aam
jnp
xor
scas
and
imul
push
popa
and
lahf
addr16
pop
pop
ds
mov
lret
adc
fists
into
xchg
repz
imul
add
ljmp
jns
imul
outsb
xlat
sub
dec
mov
icebp
xchg
push
int3
in
xor
repz
pop
loop
mov
sti
into
das
ret
mov
push
mov
scas
vpaddsw
sbb
dec
in
ds
loop
fsubrp
push
jo
imulb
movsl
decl
mov
test
push
jns
iret
div
add
inc
jg
aam
jbe
repz
repnz
ds
push
les
fidivs
mov
jecxz
cmc
mov
fisubrs
gs
stos
mov
stc
aad
out
and
negb
sti
ja
mov
jne
insl
jg
mov
add
cmp
negl
adc
sarb
test
sti
imul
mov
into
cmpsb
pop
mov
push
jo
roll
iret
outsb
fdivrl
out
in
mov
lods
loop
add
dec
xchg
push
ja
push
aaa
sahf
pop
pop
pop
jge
mov
rcll
xchg
cmp
push
adcb
fwait
cmp
orl
int3
insb
pop
add
mov
test
mov
sub
add
mov
xchg
ret
xor
int
iret
push
mov
jnp
pushf
sti
stc
aam
adc
jo
arpl
pushf
dec
clc
lods
jle
aam
addr16
cld
xor
jg
into
push
pop
push
xlat
cmp
push
addr16
or
shl
out
sub
rcrl
cmp
cmc
lahf
push
fbld
xchg
ljmp
or
in
cmp
mov
xlat
mov
xor
cmc
jle
or
add
out
movsl
sub
ud1
hlt
sti
push
into
sub
aam
idiv
imul
mov
sarl
scas
jns
les
xlat
pop
ret
into
jg
cmp
jno
imul
in
sub
jmp
scas
sub
negb
add
mov
lahf
insl
dec
cmpsb
addr16
mov
pop
mov
mov
addr16
stc
lcall
cmp
cmp
lret
bnd
cmp
cmp
out
call
insl
sbb
cmp
shlb
dec
insl
sbb
jg
lahf
lds
jmp
jnp
mov
jecxz
jbe
mov
adc
add
outsb
xchg
or
cwtl
addl
mov
xchg
lods
pop
pushw
je
cmp
negl
jnp
test
add
jae
aaa
ja
cmp
cmp
jle
cmp
jbe
shlb
push
mov
adcb
insl
push
mov
mov
mov
xchg
sbb
std
cs
lahf
cmp
test
sub
jmp
dec
add
nop
ljmp
sub
jae
imul
cld
rcr
push
inc
insl
and
lret
push
push
mov
push
imul
fstpl
dec
mov
push
outsb
repz
xor
addr16
push
mov
mull
sub
aam
ror
int3
jge
push
add
sub
pushf
imul
push
addr16
out
movsl
lods
lds
inc
dec
push
pop
mov
fmull
std
jmp
stos
lahf
std
inc
lahf
out
lahf
repnz
jns
jae
stos
cmpsl
mov
pop
or
fildll
sub
movsl
jnp
fs
outsl
mov
jnp
jns
cli
mov
cmp
sbb
lret
pop
std
jns
pop
add
jb
cmp
xor
sahf
xchg
jae
mov
sahf
cmpsl
fiaddl
pop
pop
sbb
jnp
xor
jno
push
jns
jo
jnp
xor
fiaddl
call
add
mov
pusha
mov
xchg
dec
test
add
mov
fs
jbe
pop
pop
mov
inc
xchg
inc
andl
mov
dec
test
inc
jge
cmp
xchg
xchg
leave
lock
mov
in
add
rcll
xor
cltd
decl
jg
clc
jae
pushw
add
dec
fdivr
sti
dec
add
pushf
xchg
loop
pop
push
dec
fs
ds
test
sahf
add
lds
ds
dec
fidivrl
dec
mov
mov
popf
add
mov
cmpsl
xchg
fldl
cmp
mov
scas
lret
int
cmp
inc
imul
ja
inc
daa
pop
lahf
pop
ret
mov
push
into
fsubp
cmp
dec
push
xchg
or
inc
jns
jp
jae
movsl
jl
repnz
xlat
mov
ljmp
add
jnp
out
jecxz
cmp
dec
sti
jbe
push
inc
cmp
inc
fucomip
lret
jb
xor
repz
dec
ja
pop
xchg
pop
xchg
dec
lods
mov
lret
mov
stos
cmp
das
das
push
xchg
mov
shll
mov
cmp
lcall
lret
into
mov
xor
jae
pop
add
pop
push
sbbb
jge
jns
push
shll
jb
push
lock
movl
sysenter
outsl
shlb
pushf
xor
addr16
xor
pop
jl
xor
insl
imul
inc
imul
add
mov
push
addr16
pop
lahf
sarb
mov
sub
push
mov
cmp
cld
jmp
addr16
fists
and
xor
mov
dec
data16
bound
ljmp
fdivs
pop
mov
inc
fcomps
fmull
push
popf
xchg
cmp
pushf
popf
mov
xor
stos
mulb
jg
push
enter
lret
xchg
pop
fs
ficomps
cmp
into
pusha
pop
jecxz
shrl
or
aam
jl
pop
cld
out
testl
subps
jnp
out
mov
addl
pop
or
mov
aaa
mov
std
stc
loopne
push
push
jl
std
mov
mov
and
int
lods
int3
dec
repz
testb
jecxz
dec
pop
stc
iret
mov
mov
add
dec
push
fidivrl
sahf
aam
push
or
je
in
in
iret
xlat
fwait
lcall
or
enter
ja
jne
add
xchg
xchg
orb
jle
xchg
pusha
test
cmp
cmp
add
mov
add
ja
out
xchg
loope
aas
test
cmpb
test
ret
xchg
call
xlat
imul
xlat
loop
nop
push
shr
xor
inc
outsb
ds
imul
shll
sbb
push
pop
imul
sub
xorb
imul
jbe
iret
rep
insl
leave
fs
push
fnstenv
pusha
cmp
mov
arpl
int
neg
add
pop
aas
shrl
stos
mov
rorl
lahf
cmc
scas
mov
rcrl
dec
add
sarb
in
pop
or
push
jnp
mov
stc
cmc
mov
mov
dec
aad
insl
popf
mov
jp
mov
pushf
cmp
add
add
out
xchg
mov
inc
inc
enter
ss
leave
mov
or
scas
insl
or
mov
xlat
pop
lret
dec
scas
fs
fiaddl
fmull
repnz
jno
jmp
das
scas
repz
mov
push
dec
mov
insl
cmpsl
sbb
cmp
push
jbe
rcr
cmp
cld
xor
in
dec
out
pop
mov
mov
popf
dec
addr16
decl
iret
xor
cs
jl
mov
movsb
in
aaa
movsl
sahf
mov
mov
and
mov
mov
in
clc
push
sbbb
lds
int3
add
mov
je
cltd
test
jl
stos
clc
jle
lcall
mov
in
mov
mov
test
popa
imul
insl
out
sub
jne
pop
or
mov
cmp
movsl
xchg
ds
xor
pop
loope
push
jne
cmp
movsw
pop
inc
addr16
push
fwait
and
rcrl
ds
movsb
jmp
xor
lcall
mov
lahf
push
imul
mov
mov
shrl
lods
jne
fdivs
jno
cmp
mov
fsubrs
jnp
cltd
pop
clc
fidivl
jns
sti
loopne
lret
push
jns
imul
push
push
outsl
dec
stos
lret
or
push
mov
jg
mov
cld
jmp
fs
mov
push
sub
rcr
lret
sahf
cmpsl
push
fs
idivb
push
xchg
out
mov
movsl
push
jns
jb
out
pushf
inc
jg
cmp
sub
cltd
out
mov
sarb
dec
repnz
xchg
cwtl
or
test
push
mov
xchg
pushl
push
scas
imul
jecxz
fucomp
cmpsl
lods
pop
in
inc
test
mov
jmp
cs
dec
scas
lcall
lret
sub
jbe
addl
sti
jg
add
int
test
cmp
cmp
je
jne
inc
dec
jae
add
fwait
popf
lea
mov
jns
mov
aam
inc
add
push
pop
sahf
insl
imul
je
pop
xchg
test
clc
lcall
dec
push
nop
add
data16
js
addr16
ret
or
test
and
into
xor
xor
sub
fbstp
add
jb
dec
insb
xchg
sub
mov
sbb
jb
dec
and
xor
adc
push
mov
insb
leave
mov
and
stos
lcall
pop
jecxz
lret
add
pop
mov
clc
aam
cs
xchg
mov
mov
scas
cmp
cmpsl
pop
push
push
jae
aam
jp
xor
mov
dec
mov
aam
repnz
push
hlt
dec
cmp
aad
insl
sahf
xchg
int
sbb
aas
inc
mov
lret
sti
sub
out
fists
jecxz
lods
js
stc
pop
int
mov
gs
movsl
adc
std
jae
imul
jp
jnp
cmpsl
pop
pushf
ficoml
std
jnp
lahf
dec
mov
mov
daa
cmp
cmp
cld
lret
mov
imul
adc
in
xor
lcall
push
push
lcall
dec
add
jle
add
jae
pop
orb
test
in
xchg
lcall
pop
imul
xchg
add
jae
mov
cmp
xlat
arpl
jne
push
jbe
add
imul
push
lods
dec
in
das
int3
lret
xlat
or
enter
jno
pop
jne
jmp
jne
addr16
xlat
inc
int
jne
sahf
adc
outsb
aam
mov
sub
add
cld
cmp
mov
adcb
sbb
js
mov
xchg
aas
outsb
cmpsb
ljmp
mov
sub
push
aaa
outsl
scas
std
into
fnsave
add
ret
push
test
fisubl
inc
fcomps
jbe
repnz
push
fcoms
push
mov
into
jne
insl
cld
sub
test
repnz
pop
out
xlat
xchg
aam
pop
push
push
xor
popf
fnstsw
xchg
stos
push
jbe
mov
mov
jo
iret
dec
stc
shr
sub
xchg
insl
jnp
cmp
loope
dec
push
mov
pop
jae
or
mov
cmpsl
outsb
repnz
xchg
test
xchg
mov
jnp
movsl
dec
push
inc
out
inc
pop
mov
aam
aad
outsb
mov
lahf
iret
std
jg
mov
in
aas
lret
scas
sub
lahf
push
std
pop
xlat
push
push
mov
or
ds
sub
pop
jnp
jmp
les
fwait
ljmp
mov
int
cmpsl
fnstcw
dec
pop
lcall
mov
mov
divb
or
into
ds
ret
fmul
rorb
mov
mov
add
imul
adc
pop
mov
inc
outsl
test
insl
adcb
sbb
xchg
dec
ret
ljmp
lea
sbbl
add
pop
fists
pop
lds
xchg
pusha
sti
cmpl
pop
cmpsl
mov
mov
dec
call
mov
or
aam
in
xor
dec
outsl
sahf
popa
mov
xchg
or
mov
fdivr
aam
ret
inc
outsl
popf
push
or
das
dec
outsb
xchg
out
out
sub
lahf
inc
ret
je
xchg
add
iret
jb
insl
aaa
outsb
scas
xlat
lcall
gs
imul
pop
loop
pop
ljmp
mov
sub
cli
adc
jae
cmpsl
fstpt
dec
pop
or
mov
push
insl
jmp
jg
rorl
enter
repz
mov
sbb
fstpt
in
add
jecxz
fiadds
pop
cld
ljmp
sbb
dec
dec
icebp
xchg
cmp
cli
jg
cmp
push
scas
imul
shll
jne
insl
jp
scas
mov
jns
pop
cld
mov
sub
mov
dec
pop
jns
dec
fisttpll
pop
scas
sub
inc
dec
cmp
lret
scas
cmp
outsb
dec
aas
in
jle
repz
dec
fstpl
mov
fwait
mov
jbe
lds
out
add
lea
enter
mov
add
dec
dec
pop
add
mov
cmpb
push
outsb
mov
mov
pop
insb
enter
inc
stos
stos
aaa
sarl
mov
daa
bound
imull
push
scas
into
aam
int3
mov
lea
cmp
inc
jb
or
xchg
test
mov
jbe
push
cmpsl
fistl
jae
dec
lock
xchg
into
cmpb
pushf
xchg
or
ds
add
pushf
dec
test
pop
sarw
addr16
test
jne
fdivs
pop
test
in
scas
mov
scas
shr
cltd
or
mov
xlat
sub
mov
dec
out
cmp
sbb
jl
sti
cmc
scas
jge
lret
xchg
stos
jb
dec
aad
or
out
cltd
movsl
cs
loop
rcrl
ret
mov
add
xchg
xchg
xor
lahf
pop
test
fists
into
ljmp
or
ja
lahf
mov
scas
pop
push
fs
jp
xor
rcrl
lahf
jo
and
and
mov
popf
inc
fs
mov
popf
or
lret
cmp
cmp
mov
hlt
test
js
jns
add
mov
lret
add
dec
jae
xchg
cwtl
mov
orl
aas
cmp
push
test
xchg
mov
pop
jl
mov
xchg
pushf
mov
jno
popw
je
pop
cmpsl
xchg
insb
nop
push
test
add
imul
push
jno
dec
insl
add
ficompl
pop
lretw
pop
mov
stos
sub
loop
push
pusha
popa
push
je
sub
scas
into
cli
insb
mov
push
loop
xlat
push
rclb
jo
mov
pop
fwait
lret
jg
sub
push
dec
push
push
loop
into
sar
imul
dec
gs
scas
mov
iret
test
pop
pop
jmp
fsubr
pop
lods
add
mov
ror
pop
push
rcrl
shll
jmp
movsl
dec
push
fwait
add
push
test
lret
cli
imul
mov
jp
sahf
cmp
insl
jmp
ja
lret
push
int
xor
push
insl
das
lret
xchg
dec
ljmp
and
add
lret
xor
jbe
into
jmp
inc
jl
jbe
shlb
movsl
push
imul
jmp
cmp
aam
push
out
jmp
jl
fistps
stos
lcall
jo
cmp
jae
add
cmp
jp
sub
or
lds
mov
add
imul
roll
inc
dec
dec
mov
data16
sbb
shll
test
jo
lods
popa
imul
jns
xchg
mov
pusha
xchg
fisttpl
lods
push
test
repz
enter
mov
stc
jb
loopne
jne
popf
outsb
push
jo
sub
jae
lock
sbb
push
lea
addr16
pop
mull
mov
jl
jae
cmpsb
pushf
pop
sbb
xchg
insb
add
sahf
add
popa
testb
lds
cltd
fisttps
lret
addr16
jo
imul
scas
lret
popa
negl
mov
mov
add
fisubrl
int3
xlat
orl
lahf
loope
push
adc
ljmp
rcrl
fimull
push
mov
push
pop
idiv
insl
xlat
cli
jl
jp
addr16
fucom
mov
mov
sub
mov
sub
sub
pushf
jmp
repnz
filds
jns
add
jge
shll
dec
fisubs
or
pop
inc
jmp
mov
xchg
mov
add
push
rcll
imul
xchg
out
mov
xchg
mov
sarl
out
cmp
add
xor
lcall
pop
add
add
pop
mov
dec
or
imul
leave
jnp
add
dec
push
jl
inc
adcl
orb
add
jns
push
add
jnp
dec
jne
sub
outsl
pusha
sub
xchg
or
or
add
pop
cltd
out
xlat
not
dec
adc
pushf
jnp
gs
sub
xchg
inc
pop
mov
aas
and
imul
ret
fbstp
popf
enter
cmc
lahf
bound
sahf
and
and
insb
lods
imul
push
aam
in
push
fs
int
or
xor
mov
rcll
lret
xor
xlat
pop
add
aad
pop
jl
jno
mov
mov
lds
or
ficompl
aam
push
mov
lcall
fistpl
into
jmp
jmp
mov
xchg
mov
cld
loopne
jp
mov
imul
xchg
aam
jmp
jp
shlb
pop
loop
testb
push
push
sysexit
adc
lahf
shll
pop
sahf
inc
sahf
lahf
lods
into
jnp
cli
xlat
mov
lahf
mov
out
and
insl
inc
lods
into
add
or
jle
jecxz
pop
shrl
cli
cmpsl
jl
push
cmpsb
data16
push
xor
push
test
cmc
out
xor
mov
hlt
jbe
mov
add
xchg
xchg
pushf
mov
mov
cmp
pusha
loopne
push
pop
mov
pop
cmpsl
dec
push
popf
jp
add
jge
int
cld
jns
jl
add
jnp
push
ja
dec
out
jns
pop
je
jp
or
cmp
push
mov
std
cld
into
mov
enter
iret
xlat
aaa
ret
stc
pop
addr16
cmp
inc
je
stos
pop
jne
test
mov
into
cmp
fmul
mov
iret
xlat
mov
gs
xor
mov
dec
fisubrl
popf
xchg
xor
jg
pop
jbe
dec
test
out
pop
lds
or
mov
mov
cmp
icebp
ror
pop
cmpsb
jo
in
ds
rorl
scas
cmp
leave
xlat
sahf
mov
in
test
add
add
imul
movsl
jge
inc
sahf
xchg
jb
xchg
dec
fdivs
dec
stc
pop
addr16
push
into
adc
iret
movsb
out
repnz
hlt
dec
mov
fiadds
push
jne
je
push
pop
jo
fmull
movsl
cld
shl
lret
mov
lcall
sbb
ljmp
mov
shr
push
insl
loop
lahf
daa
fnstsw
stos
mov
lahf
lret
pop
adc
pop
repz
inc
jmp
pushf
insb
addb
jmp
lret
xchg
ja
pop
sahf
xchg
jp
gs
mov
rcrb
leave
pop
lret
pop
into
mov
sar
xor
js
mov
addr16
jge
popf
divl
mov
enter
pop
jb
pop
mov
andb
movsw
xchg
xchg
sahf
pop
bound
andb
jo
popl
xchg
jns
test
pop
jl
push
jnp
adcl
mov
add
ret
pop
cltd
into
movsl
pop
jns
out
jmp
rcrl
mov
sub
mov
cli
clc
shll
lahf
sub
dec
int
sub
dec
jecxz
inc
push
cmpsl
and
cmp
cltd
jg
lds
mov
hlt
mov
cmpsl
divb
jb
or
push
mov
mov
fiaddl
pop
jae
jmp
mov
xchg
lds
jbe
cmc
pushf
push
push
inc
mov
repnz
add
pop
pushf
pop
dec
pop
scas
cmp
jl
add
jns
jmp
add
fiadds
push
popf
jns
iret
idivb
out
fists
cmp
push
frstor
lcall
fiadds
mov
jg
ficoms
cmp
cmp
aad
ficoml
gs
popf
xchg
cmp
cmp
dec
add
pop
ret
pop
xor
into
into
testl
lret
add
mov
xchg
ret
jbe
pop
mov
repz
lods
je
scas
imul
out
pop
into
jb
add
mov
jnp
hlt
imul
pop
pusha
xchg
cmp
push
pop
cmp
or
lahf
dec
sub
add
mov
pushf
lds
lret
jg
sti
cld
cmp
jle
enter
je
lods
ror
pop
mov
mov
aas
rorl
cli
adc
mov
into
lret
pop
or
cltd
sub
dec
jl
mov
sti
sub
testb
xchg
xor
push
mov
icebp
shrl
aam
idivl
mov
add
in
lret
mov
xor
sti
aad
push
push
insl
dec
cmc
jo,pt
jle
or
out
data16
xchg
fisubs
mov
movsb
sub
sti
pop
daa
add
mov
lcall
jne
das
ret
fcmovu
dec
lea
rcll
push
jmp
mov
enter
fsubl
rcll
enter
or
lds
and
insl
ds
push
mov
out
cmp
lods
les
mov
cltd
dec
jmp
dec
dec
mov
add
jns
push
jge
lds
jge
jnp
mov
out
xor
cmp
ja
jae
imul
out
xchg
stos
sahf
adc
inc
pop
sbb
rolb
scas
jecxz
mov
push
mov
xchg
testb
mov
lods
pop
mov
sub
decb
add
dec
xor
xchg
adc
movsl
daa
xchg
pushf
sahf
xchg
dec
push
fs
fildl
faddl
pop
cld
rcrl
push
xlat
repnz
add
pop
add
jne
xchg
out
imull
or
arpl
jg
sub
out
imull
lret
imul
or
outsl
cmp
jmp
jno
jmp
lahf
movsl
cld
sarl
addr16
jge
push
incb
add
cmp
dec
lcall
in
mov
out
xor
sahf
xchg
addr16
pop
insl
lret
pop
push
shll
mov
fwait
push
dec
arpl
aam
jg
fimull
popf
in
mov
scas
addr16
jecxz
add
in
lret
mov
insl
iret
repz
out
cmc
fidivrl
test
lods
sti
clc
pop
in
lret
into
jg
pop
insl
fcmovb
rcrl
pop
stc
dec
mov
jae
push
je
jmp
lahf
imul
dec
fs
fwait
push
sahf
or
scas
mov
cmp
push
jg
into
jg
lret
out
sti
stc
into
out
rorb
jbe
test
mov
mov
jmp
lcall
out
out
xchg
mov
xchg
mov
cmp
mov
jle
lret
sti
pop
add
xlat
jnp
push
jge
test
inc
jo
add
mov
jg
ljmp
jl
xchg
sahf
pushf
push
dec
add
out
das
jmp
add
xor
xor
cmp
jl
sub
rclb
lahf
daa
test
jne
mov
daa
mov
pop
or
jg
ljmp
rorl
push
mov
lcall
sub
mov
cmp
gs
mov
rcrl
stc
xor
fwait
cmp
iret
into
sahf
in
hlt
mov
outsb
repz
dec
stc
xlat
jecxz
fdivrl
pop
jo
sub
jg
into
mov
lret
mov
xchg
push
insl
cmp
stos
repz
xor
repz
lret
pop
call
mov
xlat
aas
jg
or
movsl
out
aam
stos
mulb
dec
out
gs
mov
dec
stos
xor
cmc
xchg
cs
or
sti
cmp
pop
popf
jns
iret
cmp
into
push
push
xchg
pushf
mov
lahf
insl
cmp
scas
push
fimuls
jne
rolb
out
sahf
xlat
dec
in
cmp
clc
aam
stos
mulb
repnz
lcall
stos
cmpsb
cmpsb
lahf
in
pop
add
sbb
jg
jo
jg
jbe
aam
dec
call
inc
std
shl
mov
into
pop
fistps
mov
movsl
xlat
xor
idivl
insl
xchg
mov
out
xchg
or
aas
aad
lods
adc
fsubrl
add
adcb
inc
add
mov
cmp
adc
jl
cltd
inc
jnp
push
notb
shll
pop
lds
dec
add
rcrl
xor
push
popa
jns
dec
push
cmp
xor
into
out
sti
hlt
pushf
out
sarb
adc
ljmp
lcall
shl
xor
cmpsb
insl
pop
mov
inc
addr16
cmp
idiv
outsl
imull
insl
mov
xor
xor
cs
lahf
out
insl
out
repnz
jns
fcmovbe
in
or
sahf
ds
lea
xchg
icebp
aam
adc
aad
push
leave
jne
setne
lret
jb
xchg
dec
adc
movsl
ljmp
stos
mov
into
inc
jp
insl
sarl
lcall
in
movsl
cmpsl
pop
mov
lahf
aam
jb
or
xlat
cmp
cld
mov
lahf
out
into
pop
mov
push
insl
push
out
jmp
mov
je
push
or
ficomps
idivb
jmp
leave
mov
jle
int3
out
add
std
stos
fisttpl
pop
stc
xlat
movsl
mov
pop
shl
add
dec
pop
ss
lahf
aam
jb
addr16
daa
mov
clc
inc
ljmp
movsl
mov
xchg
mov
adc
mov
scas
repnz
rolb
cmpsl
push
xchg
jae
mov
xchg
push
sub
call
lods
adc
jle
std
imul
fisubl
insl
movsl
lcall
fs
enter
xchg
enter
pop
test
push
fs
lock
sub
cmp
lods
sub
fs
push
addr16
outsb
cmp
jg
sarl
push
std
aaa
lret
imul
repz
xchg
mov
aas
mov
ror
xchg
pop
into
mov
pop
ds
xchg
push
insl
jecxz
push
lds
daa
gs
imul
aam
in
xor
fucom
movsl
lods
lret
dec
std
xchg
cmp
cld
inc
jns
pop
jb
ss
cmp
lock
loop
lahf
in
push
pushf
jecxz
mov
shll
into
xor
pop
rcrl
loop
ja
or
fisubrs
idivb
ror
mov
lret
lds
mov
dec
cmc
pushf
cs
cmc
popf
lret
jae
out
imul
out
pop
scas
push
jg
push
stc
movsl
xchg
ret
repnz
mov
cmp
xchg
stos
imul
fucomip
shll
and
jmp
mov
mov
fs
cmp
add
jbe
fiaddl
push
push
jg
inc
outsl
std
jecxz
scas
mov
mov
in
out
mov
hlt
inc
mov
mov
push
pop
push
lret
sub
roll
enter
into
jno
adc
cltd
jge
jl
dec
fidivs
pop
cltd
add
inc
pop
popl
pop
jns
int3
cmp
cs
cltd
stc
js
add
in
daa
fnstenv
dec
add
mov
insl
pop
adc
test
mov
enter
xor
cltd
dec
jno
push
jnp
mov
dec
adc
xchg
mov
add
sub
ljmp
lret
imul
dec
pop
sub
xchg
pop
mov
or
xlat
mov
jge
insb
mov
scas
fidivrs
dec
push
xchg
push
sahf
cmpsl
into
das
mov
xlat
outsl
repnz
mov
inc
bound
add
mov
push
mov
clc
xor
dec
test
xor
mov
aam
push
xor
dec
mov
xchg
xlat
xchg
mov
cmp
enter
lcall
add
push
sbb
push
jge,pt
mov
pop
inc
aam
div
rcll
add
cmpsl
repz
int3
jge
adc
in
mov
xchg
loop
fucomip
in
mov
repz
cmp
sbb
pop
int
das
jge
inc
xchg
fisubrs
jecxz
jns
cmpsl
pop
xchg
inc
movsl
fmull
mov
movsb
jmp
inc
mov
imul
mov
adc
add
orb
xlat
push
lret
cmp
mov
into
imul
cli
jl
into
divl
add
add
cld
lret
mov
push
sub
dec
mulb
and
cmc
lahf
xlat
mov
mov
into
das
jp
pushl
xchg
mov
or
pop
flds
xchg
mov
jge
jae
or
adc
cmp
fs
pop
mov
pop
mov
push
lret
mov
ret
out
lret
sub
aam
repnz
insb
imul
loop
std
in
mov
push
cld
clc
xor
pushl
mov
dec
data16
insl
inc
cmp
xchg
out
jge
add
test
test
jne
ds
cld
into
jb
shr
sub
push
push
ficomps
or
xchg
jmp
enter
jo
out
sarl
jns
out
icebp
xchg
ja
hlt
pop
jmp
inc
mov
lret
cmp
imul
popf
stos
repnz
iret
cmp
cmp
pop
cs
xlat
testb
xchg
jnp
add
test
push
dec
cld
aam
cmp
sub
jg,pn
pop
insl
jecxz
test
jne
jo
or
lret
mov
push
stos
mov
mov
fwait
or
push
iret
lahf
nop
or
cmp
in
cmp
sti
mov
sbb
dec
addl
mov
lods
pop
shrb
repnz
lret
lahf
incl
xchg
fucomip
lret
jp
pushf
aas
movsl
jge
addr16
popf
into
cmp
lahf
mov
inc
xchg
ds
xchg
test
xchg
imul
xchg
push
sahf
xchg
imul
pop
cld
stos
lahf
xchg
fistpl
sti
lret
dec
icebp
imul
mov
enter
add
or
mov
mov
mov
push
cmp
xor
outsb
stos
sub
movsl
lret
xor
jle
mov
add
mov
pop
add
pop
mov
dec
negl
mov
cli
imul
lret
jno
mov
movsl
lcall
jbe
jns
imul
insl
xchg
in
mov
xchg
xchg
insl
mov
mov
sbb
into
aas
lret
cmpsb
pushf
ficoml
pop
jns
jae
mov
xlat
jg
je
bnd
or
adc
push
stc
fstl
out
rolb
jge
hlt
cmpsl
pop
dec
add
xlat
out
jbe
push
popf
jbe
repz
fs
adc
movsl
xchg
push
cld
shl
push
std
scas
insl
push
jle
ror
rcrl
dec
or
insl
movsl
xchg
ret
jne
sub
idiv
fisubrl
inc
dec
leave
repz
add
cmp
adc
push
adc
in
xor
jns
xor
push
add
pop
bound
idivb
call
fs
enter
mov
cmp
push
cmpsl
mov
popa
xchg
ljmp
jnp
pop
icebp
cmpsl
call
out
xchg
mov
lcall
lods
lret
rol
shrl
cltd
fnstenv
fucomip
rcrl
push
insl
lods
ret
xchg
cmp
aas
sahf
cmp
sbb
mov
lret
lahf
adc
jns
fstpt
daa
imul
bnd
and
push
jo
pop
add
mov
xor
dec
movsl
das
push
jae
mov
hlt
jmp
inc
xchg
test
mov
lret
cltd
cmp
movsl
and
emms
icebp
xlat
insl
sbb
aam
jmp
or
xchg
dec
pushf
jg
shr
push
addr16
fstpt
daa
pop
xchg
inc
daa
idivb
mov
scas
mov
leave
pop
xlat
int3
inc
add
popf
adc
scas
movsl
out
jge
outsb
test
in
cld
lahf
in
in
dec
pop
xchg
cmp
insl
and
mov
out
out
shrl
cmp
dec
mov
scas
cmp
jns
in
inc
loop
mov
dec
add
cltd
lds
aam
repnz
xchg
scas
mov
pop
enter
pop
mov
jg
cld
inc
push
int3
enter
cli
ret
mov
push
mov
mov
mov
pop
leave
fistpll
roll
pop
ret
cmp
adc
fimull
pushf
fiaddl
lahf
mov
lcall
cmc
sarb
into
adc
jl
or
jne
fs
jp
jnp
sub
push
out
pop
popf
lret
dec
clc
jae
dec
sub
bnd
imul
dec
mov
out
and
std
cs
pushf
out
push
cmp
mov
jo
into
dec
mov
outsl
je
push
std
into
lret
jno
rorl
out
cld
lods
addr16
pop
imul
push
imul
xchg
idivb
pop
ljmp
add
push
fs
lret
addr16
cltd
xchg
idivb
repnz
mov
lahf
pop
mov
dec
lret
mov
cmp
mov
stos
cmpsb
mov
enter
stos
jle
enter
lret
aam
out
lahf
in
pop
mov
mov
call
sub
inc
mov
test
movsl
lret
jnp
push
jbe
jge
xor
or
in
inc
pop
negb
mov
push
xchg
scas
iret
cmp
lahf
lds
gs
mov
std
push
scas
mov
sub
aam
dec
push
push
into
xchg
pop
cmpsl
jb
leave
mov
gs
mov
decl
stos
jge
std
dec
das
mov
jnp
out
icebp
dec
in
xor
sti
in
mov
lcall
add
pop
lret
inc
add
cltd
dec
in
lahf
test
xchg
cs
in
cmpsb
or
sbb
mov
shl
out
mov
mov
daa
mov
jge
sub
dec
mov
dec
negl
int3
xlat
rorl
test
loop
mov
mov
cmp
lahf
jge
inc
in
lahf
daa
ja
cmp
ds
jne
movsl
sahf
cmpsl
lds
lahf
je
jns
imul
mov
xlat
push
xlat
push
add
stos
imul
push
leave
fstpt
movsl
jnp
leave
idivb
jno
cmp
test
ljmp
pop
xchg
in
cmp
push
push
in
cmp
in
xor
cmp
sub
lret
pop
push
sarl
jmp
or
jns
imul
xlat
dec
or
pushf
imul
xor
popf
dec
insl
dec
pusha
loop
xchg
test
fucom
iret
cmp
out
out
push
leave
cmpsb
push
lret
mov
add
imul
cs
xlat
out
lahf
pop
movsl
jae
adc
out
lahf
push
loope
jmp
lods
movl
inc
sub
ds
mov
das
repnz
repnz
mov
pop
iret
mov
mov
sub
repz
imul
je
xchg
out
imul
mov
push
jns
jb
shl
std
jno
jb
push
arpl
mov
mov
push
add
movsl
add
cmpsl
xchg
cltd
ljmp
lahf
mov
call
cmpsl
outsl
cmp
lret
out
xchg
fs
pushf
iret
jmp
clc
mov
sti
lret
cld
je
cmp
xlat
xchg
add
into
adc
xor
cli
push
cld
ror
idivb
movsl
push
push
cld
lret
ficoml
add
les
test
jg
aam
mov
pop
mov
mov
test
cmpsl
ds
in
jg
xor
lret
jp
ret
iret
aam
xchg
add
sbb
mov
vpsrlw
add
or
cmp
fiadds
jp
push
push
fs
fs
negl
or
in
xor
clc
aam
addr16
push
lds
aam
out
sub
lret
popf
inc
jo
iret
add
and
ja
xchg
popa
lcall
in
jge
popa
mov
popf
imul
in
test
pop
mulps
dec
stos
jns
adc
ret
addr16
inc
pop
scas
jge
cmp
mov
imul
mov
outsl
mov
dec
cmpsb
insl
mov
cmp
stos
into
insl
dec
ljmp
jg
xlat
lahf
scas
xlat
sahf
sbb
add
mov
add
hlt
cli
mov
mov
lods
jae
mov
gs
push
in
test
sub
xchg
test
push
test
jae
jg
adc
lds
pushf
jmp
test
in
enter
xorb
cmc
int
pop
push
clc
mov
insl
mov
lret
pop
int
cld
push
cmp
sub
clc
xlat
fimull
jge
xor
or
insl
mov
ss
mov
pop
mov
pop
loope
or
imul
add
lahf
in
jnp
iret
xchg
call
add
push
sub
pushf
mov
repz
xchg
mov
jg
cltd
jnp
ja
icebp
cmp
pop
mov
sarl
jle
jno
sbb
out
into
mov
jecxz
imul
mov
mov
push
scas
cmp
imul
int3
dec
pop
or
xchg
dec
repz
jo
lret
jle
lret
xchg
in
xor
addr16
testb
cltd
mov
push
imul
add
popl
pop
clc
ficoml
maxps
insl
rorb
iret
movsl
dec
mov
add
jbe
mov
into
mov
jecxz
push
out
daa
std
mov
dec
pop
lods
insl
hlt
sti
cmp
add
mov
sbb
lahf
sti
mov
jle
std
mov
push
jecxz
mov
mov
or
adc
fistps
fidivl
mov
cmp
inc
into
xchg
stos
fstl
imul
xor
push
sahf
xchg
cmpsl
push
push
or
mov
pop
add
out
mov
test
int3
shll
in
add
dec
or
addr16
cmpl
mov
clc
into
roll
dec
xchg
pop
lods
std
cmpsb
or
ror
or
out
enter
insl
mov
leave
jg
xchg
aam
jns
lret
pop
cmc
std
lret
xlat
add
xchg
dec
lahf
sub
out
rep
addr16
sub
sub
gs
cmp
cmp
mov
jmp
aam
or
pushf
xlat
mov
cmp
cmp
sub
or
out
jg
cltd
jmp
lds
xlat
sbb
lret
addr16
adc
cltd
fiaddl
push
fs
or
push
push
jo
jae
out
jmp
lret
shrl
jge
mov
testb
daa
push
push
pop
or
stc
xor
cmp
sar
popf
jbe
adc
or
or
cmp
sub
lahf
dec
out
imul
in
inc
test
insl
shll
insl
adc
mov
repz
lret
aad
scas
xchg
fisubrs
sub
push
lea
iret
clc
cmp
imul
int
jle
out
mov
enter
leave
in
cmp
pop
out
cmp
or
jmp
jg
fcmovbe
ds
adc
mov
adc
mov
mov
add
fst
or
pop
mov
sub
lods
aam
sub
push
fs
jo
cwtl
add
or
orl
lret
dec
pop
nop
push
std
daa
stc
pop
push
cld
pop
stc
pop
fcmovne
dec
fnstenv
gs
cmp
mov
fs
pop
imul
mov
jp
vxorps
mov
xlat
out
iret
js
stos
sub
mov
pop
jecxz
shrl
cs
xchg
mov
lret
mov
lahf
cs
pop
mov
jg
icebp
cmp
std
aam
stc
pop
jo
push
push
push
sahf
lahf
stc
push
lahf
mov
sbb
mov
mov
dec
pop
sahf
roll
movsl
xchg
mov
jns
popa
mov
push
inc
addr16
fs
dec
xlat
jg
sbb
or
dec
sti
das
dec
pop
jecxz
shr
xor
sti
in
stos
repz
mov
iret
add
mov
aad
jns
or
jecxz
jmp
push
fstpt
imul
dec
jbe
iret
sbb
pop
dec
jae
das
shll
pop
jecxz
xchg
out
popf
jecxz
movsl
jmp
scas
xchg
into
pushf
pop
lds
push
pop
scas
insl
adc
cmp
mov
add
out
xchg
push
out
fiaddl
fcomip
loopne
xchg
mov
pop
stos
cmp
cmp
shrb
rcll
mov
add
xchg
mov
call
lret
aaa
test
dec
dec
cltd
xchg
das
insl
mov
cltd
jle
push
push
repz
fiaddl
imul
cmpsl
cltd
pop
xchg
add
popf
mov
sahf
lcall
mov
arpl
dec
adc
ficomps
add
fs
popa
jmp
rorl
cmp
or
pop
cltd
lret
push
mov
mov
mov
jp
inc
insl
lahf
outsl
cmp
jbe
stc
rcll
xchg
push
push
negl
mov
dec
testb
pop
out
leave
jno
mov
push
xchg
je
in
sub
or
xor
std
jbe
out
xchg
mov
sarl
or
or
push
std
loop
insl
jo
into
pop
dec
psubq
cmp
je
ljmp
outsl
lret
xlat
jnp
cltd
pop
clc
jae
stos
mov
jno
jmp
aam
nop
and
das
jmp
pop
repnz
stc
shll
addr16
or
add
pop
lret
hlt
mov
imul
sub
rclw
rcrl
xchg
fiaddl
mov
popa
cmpsb
fs
in
cmp
lahf
shlb
insl
push
jecxz
call
dec
in
cmp
pop
repz
dec
mov
movsl
in
add
pushf
xchg
in
xor
xor
mov
mov
add
xchg
aaa
lret
js
mov
add
rorl
das
rcr
lahf
cmp
jg
cltd
sar
rcll
cmp
repnz
ret
shll
push
imul
sbb
mov
dec
rcll
add
or
in
cmp
cld
lods
addr16
sub
pop
ret
jns
dec
icebp
enter
js
cmp
iret
into
cmp
mov
pop
repz
xchg
sub
pop
jecxz
imul
dec
pop
mov
mov
jl
in
pushf
sarb
rorl
xor
xchg
push
int
daa
fldt
mov
xor
lahf
loope
repnz
mov
icebp
ds
push
cmp
ds
cli
repz
sahf
and
insl
xor
pushf
inc
mov
gs
fnsave
jg
xlat
sar
scas
mov
xchg
push
enter
stos
das
jbe
out
imul
jo
lcall
sub
cmpsl
adc
fstps
std
mov
loopw,pn
mov
pop
jmp
scas
sahf
out
addr16
push
jno
iret
xlat
test
out
out
push
push
pushf
jae
imul
outsl
sbb
mov
cld
rcrl
xlat
xchg
icebp
rcll
xchg
cmpsl
xchg
cltd
xchg
aam
dec
sbb
adc
mov
dec
xor
pop
push
mov
add
add
popf
and
ja
shll
fs
cltd
push
sub
outsb
push
push
jge
iret
cld
pop
inc
xchg
out
xchg
loop
xor
and
dec
mov
jg
mov
or
lcall
pop
jge
lret
outsb
cmp
push
jns
and
jmp
xchg
or
push
jns
jbe
adc
sub
lods
add
add
fstpt
sub
dec
jae
leave
ja
or
adc
xor
lahf
in
cmp
jle
cltd
xchg
jns
jnp
lahf
cmp
mov
or
loop
jbe
fcmovu
push
repnz
pop
insb
insl
lret
sub
scas
lret
xor
in
cs
clc
aam
jecxz
push
movsl
lahf
in
push
xlat
stos
mov
testb
push
jecxz
fists
arpl
stos
sub
sti
sti
pushf
insl
cli
std
ss
mov
cli
repz
shr
movzwl
or
std
shl
fincstp
inc
test
negl
pop
xchg
dec
lahf
mov
cli
jecxz
pop
repnz
cli
dec
jmp
jbe
out
mov
lods
and
cmpsl
ja
setge
sub
movsl
xlat
iret
jmp
jns
cmp
xchg
hlt
test
cmc
inc
jbe
push
mov
ja
psubsw
movsl
stos
out
dec
stos
lret
mov
out
cltd
add
adc
jecxz
in
xor
into
mov
lahf
xchg
adc
mov
cmpsl
mov
scas
int3
into
pop
jns
sub
addr16
cltd
jg
popf
inc
lods
lret
shl
addr16
jmp
ror
lock
jle
push
dec
repnz
into
xorb
aam
cltd
xchg
mov
stc
jle
out
pop
loop
mov
sub
push
add
shl
in
cmp
les
add
cltd
cmp
lods
add
pop
std
cld
into
mov
icebp
cmp
add
add
gs
into
roll
push
lret
ficomps
cmp
xchg
leave
cltd
shrl
rcrl
idivl
pop
add
fistpll
popf
mov
mov
add
or
or
popf
dec
addr16
xchg
xor
insl
in
je
stos
mov
test
in
iret
mov
test
ds
or
push
out
cmpsl
std
xchg
ds
pop
stos
jb
ret
jae
idivb
cmp
repz
lret
repnz
or
iret
xor
push
ja
fcmove
jl
dec
jb
notl
pop
pop
inc
mov
add
out
xchg
stos
sub
movsb
mov
adc
mov
out
mov
movsb
stos
in
inc
xchg
out
popf
mov
mov
aas
in
dec
test
mov
mov
mov
jne
repnz
enter
ret
aas
fadd
fucomip
xor
sahf
xchg
cmpsl
xchg
cltd
and
movsl
inc
addr16
xchg
roll
lret
or
add
xchg
mov
xchg
cmpsb
addr16
push
mov
imul
lret
xchg
out
popf
inc
push
pop
lahf
imul
xchg
pop
sahf
or
aam
repnz
dec
push
fs
jge
mov
sti
dec
lahf
aas
add
mov
repnz
xchg
jge
cmpsl
push
pop
pushf
repz
push
mov
xchg
mov
iret
aam
push
push
jns
movsl
inc
push
je
enter
push
into
jmp
mov
std
in
das
lret
mov
mov
cs
mov
fiaddl
jnp
lret
fisubs
addb
pop
xchg
cmp
cmp
fucom
popf
sar
jne
inc
jae
mov
stc
jl
jmp
add
aas
lods
jae
lods
call
test
inc
test
jbe
jb
sub
mov
mov
adc
vpmulhw
add
addr16
lods
sarl
fnstcw
leave
fnstenv
push
jge
test
add
stos
imul
xlat
out
xchg
int
ja
xlat
jmp
vpsrlw
imul
mov
fucom
paddsw
outsl
mov
movsl
mov
in
xor
jmp
lahf
jg
shll
mov
pop
jmp
das
jle
inc
fildll
add
mov
pop
fbld
imul
lea
in
ds
ret
cmp
mov
fs
mov
into
pop
or
xchg
cmp
in
ds
out
shlb
mov
out
push
bnd
mov
leave
ljmp
add
negb
aad
mov
sahf
movsl
addr16
out
insl
lahf
fcomi
clc
jb
iret
shll
add
cmp
std
scas
sub
cmpsl
or
outsb
daa
gs
ljmp
loop
xchg
mov
xchg
loop
lcall
lods
movl
xor
adc
mov
outsl
hlt
test
dec
or
imul
lahf
lods
or
or
insb
std
xlat
mov
mov
cmpsl
xchg
mov
aam
adc
jle
aam
mov
xchg
popf
dec
insl
cmp
cmp
jge
scas
xor
mov
push
div
popa
daa
sti
jne
jbe
iret
dec
div
aam
aad
mov
imul
jmp
scas
push
fwait
scas
lcall
inc
test
fists
jg
rcrl
push
mov
mov
popf
jns
dec
repz
cmp
mov
inc
sub
ds
mov
pushl
cmpsl
push
push
out
pushl
mov
mov
insl
or
ljmp
rcr
dec
push
pop
popf
scas
aam
adc
pop
adc
mov
push
cltd
cld
xchg
lret
test
aas
scas
xchg
je
jg
into
fnstcw
cmp
repnz
aas
pop
not
xchg
ja
stc
cld
cmp
push
fs
lahf
xchg
imul
or
jle
xchg
sar
jg
lret
aas
mov
jl
jmp
xchg
mov
add
cmp
in
cld
shl
xchg
rcrl
push
popf
dec
push
mov
pushf
daa
push
movsl
push
mov
lahf
cmp
ds
push
sarb
lahf
jae
pop
insl
dec
jo
xchg
jae
dec
icebp
into
imul
mov
into
aas
fisttpl
mov
aam
push
jo
jne
mov
insb
notb
std
outsb
cmp
sti
clc
in
and
je
ljmp
shrb
das
insl
dec
push
xchg
test
add
or
into
cmp
call
jae
in
xor
jnp
jns
in
addr16
jg
fidivrl
pop
cld
shl
stc
pop
imul
fistpll
mov
movsl
push
dec
jl
push
lahf
aam
rcrb
aam
into
pop
pop
pop
ljmp
pop
ljmp
int3
lret
mov
das
loop
negl
cld
out
std
sbb
mov
fcmovu
cld
jmp
ds
sti
sub
push
pushl
mov
or
mov
mov
repz
pop
or
movsb
icebp
xchg
jmp
sub
test
pop
lret
movsb
icebp
js
lds
popf
xchg
xor
push
jle
ljmp
add
popaw
sbb
leave
pop
pushf
iret
mul
std
xchg
push
lret
add
insb
into
cmp
popf
cmp
lds
xchg
lahf
sahf
xchg
repz
ja
pop
ss
adc
out
fimull
iret
push
dec
sub
aas
dec
lret
push
out
repz
test
jg
jns
lret
adc
ljmp
mov
out
das
jbe
aam
iret
loop
popf
and
cmp
std
or
pop
push
jl
push
fstpt
ror
lret
inc
jmp
ret
push
mov
or
cmc
in
test
jae
cmp
test
dec
aad
insl
daa
xchg
xchg
repz
cmp
pushf
in
add
test
imul
cltd
scas
cs
pop
aam
data16
ds
insl
shl
pop
push
xchg
mov
add
mov
sti
mov
lret
jl
repz
lods
push
stc
cld
ss
in
fcmovnu
pop
mov
scas
pmuludq
cld
sub
push
jg
std
icebp
jecxz
aad
stos
mov
jle
mov
xchg
ja
sbb
adc
jp
movsl
fucomip
fistps
adc
mov
jecxz
int
inc
mov
fistl
add
stc
dec
add
pop
lds
mov
pushf
dec
pop
nop
ljmp
mov
sub
or
out
aas
dec
aad
mov
push
dec
repz
into
cmp
lret
push
push
imul
or
out
jg
dec
pushf
aas
iret
xor
out
dec
mov
lahf
in
add
dec
add
push
aas
repz
or
cmp
mov
xchg
mov
ja
stos
dec
lahf
sub
mov
xor
jns
mov
shl
add
or
lahf
repnz
shr
fidivl
out
mov
add
fwait
pushf
jle
jns
imul
outsl
xchg
test
addr16
or
repnz
cmpsl
ds
inc
xlat
mov
jl
repnz
mov
mov
fdivrl
cmc
lret
pop
out
das
ret
or
push
or
fs
imul
pop
lds
mov
jge
stos
mov
mov
sub
add
repz
mov
jno
mov
cvttps2pi
jns
sub
fs
clc
out
cli
dec
scas
dec
fisttpl
push
cmp
popf
inc
addr16
fdivrp
inc
mov
mov
movsl
scas
sub
movsl
adc
addl
cli
notb
mov
push
pop
ret
or
xchg
pop
adc
lret
jle
cltd
iret
aas
mov
or
pop
xchg
loop
dec
push
js
mov
into
outsb
jno
push
push
insl
ror
shrl
out
leave
xchg
cmpsl
xchg
lahf
mov
add
into
cmc
ret
icebp
rcrl
clc
dec
lock
mov
shlb
testb
add
sarl
push
fnstenv
push
lahf
xchg
mov
jo
jbe
outsl
mov
jge
gs
add
icebp
fwait
cmpsb
push
pusha
mov
xlat
popf
mov
mov
add
lahf
das
push
insl
jp
outsb
xor
push
lahf
fstpt
iret
shl
sub
or
hlt
mov
das
mov
xor
cmpsl
sti
divl
sahf
xor
ficoml
sahf
cltd
repz
mov
inc
fsub
das
cld
aam
jmp
das
ret
ds
and
push
push
mov
insl
pop
repnz
pop
mov
push
cs
xchg
mov
fidivrl
xchg
cmp
pop
out
daa
mov
mov
aam
arpl
lret
or
imull
daa
bound
pop
into
sar
push
push
jo
pop
sbb
das
fistps
mov
add
pop
notl
pop
inc
out
shr
repz
xchg
imul
rclb
xchg
testb
scas
clc
inc
idiv
ja
add
fidivrl
mov
xchg
pop
ret
lret
lahf
in
sbb
lds
into
imul
aam
xchg
dec
push
imul
cltd
ficoml
xchg
lahf
jg
mov
iret
xor
mov
cld
cmp
fildll
into
push
call
add
test
dec
fstpt
and
mov
sub
xor
mov
insl
fs
lods
or
add
scas
sub
dec
in
ds
cmc
xchg
push
push
jae
in
dec
lock
jmp
fcmove
cmp
fistps
pop
js
cltd
sub
pop
into
movsb
mov
jle
push
lahf
out
pushf
push
mov
push
mov
or
repnz
jns
jp
jo
in
cmp
lahf
movsbl
in
xor
jg
ds
jo
mov
std
outsl
into
into
dec
cmpsb
jo
mov
xlat
xchg
mov
mov
jmp
enter
shrl
divb
sar
jmp
addr16
lret
ficompl
pop
mov
fistpll
dec
jae
mov
rcrl
jecxz
lret
pushf
xchg
mov
mov
stc
jecxz
push
xchg
jae
out
repnz
mov
jo
sti
jnp
jl
push
push
fcompl
rcrl
sub
out
cmp
push
mov
push
mov
push
nop
lds
mov
bt
add
mov
sti
lds
adc
push
mov
in
pop
mov
sahf
cltd
lret
repz
into
pop
rcll
xchg
fstps
mov
dec
push
popa
sub
int
cmp
or
pop
push
aas
hlt
mov
lahf
jb
popa
mov
test
mov
xor
ds
iret
xorb
xor
icebp
xchg
push
iret
cmp
add
ds
cmc
xchg
sarb
scas
fldl
fstpl
repz
icebp
xchg
push
int3
mov
or
pop
jae
lock
pop
push
or
or
mov
dec
xlat
lods
lret
fcmove
shll
mov
sub
cmc
gs
xlat
imul
inc
xchg
icebp
aam
insb
fnstcw
shll
fnstcw
jmp
mov
mov
lods
mov
cld
sahf
out
imul
pusha
mov
aas
out
shlb
sbb
aas
icebp
cmpsl
call
movsb
cli
ljmp
xor
xchg
out
into
or
xlat
pop
jmp
sar
ficoms
cmp
sbb
movsl
push
dec
inc
cmp
or
pop
sti
ds
jle
mov
pop
movsl
cld
lods
loopne
mov
mov
scas
fistpll
push
add
add
adc
imull
lds
les
cltd
lahf
xor
je
outsl
jge
push
add
pop
adc
inc
gs
ffreep
insb
jno
jne
stc
jg
cmpb
mov
lea
data16
pop
lret
mov
je
iret
push
lcall
jb
sarl
inc
pop
mov
pop
mov
push
inc
xchg
xchg
xlat
daa
cmp
cmp
or
rcr
in
add
aaa
into
lods
lock
popf
inc
fs
xor
std
into
enter
repnz
mov
xchg
pop
lahf
into
pop
out
imul
xor
push
mov
out
lods
gs
pop
clc
aam
in
das
cmpsl
sti
dec
xchg
and
lahf
imul
ja
fisubrl
data16
leave
jbe
cmp
add
hlt
scas
leave
inc
jle
into
imul
outsl
xor
or
xchg
mov
repz
push
popa
sub
push
clc
xchg
lds
ret
push
mov
icebp
sub
in
imul
and
pop
insl
jmp
sub
dec
adc
nop
lods
sarb
mov
mov
addr16
mov
jmp
fwait
xchg
pop
push
mov
push
pop
add
mov
push
push
out
pop
pop
mov
adc
push
push
push
pop
xlat
add
or
cmpsl
add
scas
rolb
scas
stos
jmp
movsl
pop
xchg
mov
mov
mov
int
pop
or
fldl
and
mov
js
outsb
jno
int3
add
mov
fisubrs
leave
fdivl
cwtl
push
arpl
dec
pop
popa
cmp
xchg
sbbl
pop
addr16
lea
mov
daa
mov
cmp
fs
or
in
xchg
fbld
push
mov
jno
int
sub
into
roll
ficompl
stos
cmp
pop
add
rorl
cltd
mov
aaa
shrl
mov
test
in
ret
dec
stos
mov
aam
xor
lahf
cmpsl
bound
cmp
imul
insb
xor
fbld
push
jnp
xor
test
out
xchg
repz
ficomps
test
pop
mov
mov
mov
jg
xchg
lods
push
push
pop
ror
imulb
sahf
cmc
or
cmp
in
out
sar
sbb
mov
jmp
jge
in
dec
lods
nop
enter
dec
scas
sub
mov
or
cmp
jbe
pop
pop
je
push
pop
aam
push
xchg
jbe
jbe
jbe
jmp
repz
stos
stc
mov
pop
rolb
popf
lcall
push
mov
xchg
add
xchg
ja
mov
ja
jg
roll
call
jns
mov
mov
mov
mov
fmull
scas
aad
ret
pusha
rolb
shll
lret
xchg
popa
jo
jns
outsl
xor
xchg
mov
shll
pop
lds
aam
in
scas
sub
rcrl
in
xor
pop
xor
cmp
cmp
lods
addr16
scas
jbe
or
lret
xor
popf
dec
push
mov
clc
shl
pop
add
pop
push
movsl
xlat
add
jge
inc
aas
fidivrl
fwait
push
xcrypt-ofb
jb
outsl
cmp
mov
in
xor
pushf
jg
pop
cmpsl
mov
aad
adc
loope
int
lret
lret
fucomp
je
shl
xor
pop
mov
mov
sahf
mov
xchg
loop
sbbl
out
std
and
pop
daa
fwait
movsl
int
add
jnp
pushf
cs
enter
mov
fnstsw
fsubrs
mov
rorl
in
sahf
mov
cmp
sbbb
mov
pop
cmc
loopne
jg
test
mov
xor
xchg
pop
xor
sbb
cmp
into
mov
popa
mov
js
mov
add
sub
mov
or
dec
clc
into
cmc
scas
mov
or
add
sub
in
jle
xlat
clc
shll
daa
mov
pop
or
shlb
rcll
aam
fildl
mov
dec
in
cmp
fs
insl
xor
fstl
add
enter
jno
cmp
jns
ret
roll
out
mov
enter
loop
jno
cmp
call
xchg
jle
test
insb
cmp
out
mov
xchg
cli
xchg
or
into
fsubrl
and
lcall
fwait
cmpsl
stos
xlat
jae
xor
cmpsl
fwait
nop
mov
rcrl
test
rolb
shll
subl
fwait
fdivr
pop
fmull
fnstenv
sarb
adc
inc
cltd
jp
mov
mov
pushf
add
jns
xchg
xchg
mov
outsl
xchg
ret
xchg
leave
pop
fisubrl
sbb
vpaddsw
xlat
jb
enter
sbb
in
adc
pushf
xor
or
mov
mov
jp
enter
push
imul
faddl
sar
jbe
lds
das
jp
lahf
fnstcw
pop
jne
insl
std
cmp
or
add
in
cmp
sti
aaa
inc
jmp
push
cmp
aas
push
mov
xorl
sbb
mov
mov
imul
aad
inc
adc
adc
push
je
gs
insl
pop
xor
mov
scas
xor
pop
add
or
mov
incb
enter
xorb
mov
test
pop
stos
ret
or
pop
mov
aaa
mov
dec
adc
lahf
pusha
lods
ret
xlat
test
mov
or
test
add
es
dec
add
mov
push
inc
mov
xchg
inc
lods
cmp
sub
mov
xchg
repnz
jg
cs
mov
pushf
jg
pop
insl
imul
jns
pop
pop
add
xchg
cmp
fdivr
sarb
xor
push
cmp
pop
scas
cld
xlat
jb
hlt
sub
xchg
sub
adc
jg
into
daa
xchg
pushf
mov
pushf
fucomp
lahf
and
lds
mov
mov
aam
je
mov
mov
jno
cmp
lahf
add
ja
mov
pushf
ret
rcr
and
pop
push
or
mov
add
movsl
xchg
lods
mov
lds
xor
lret
add
jae
xchg
sahf
movsl
mov
int
mov
mov
push
mov
pop
cmpsl
and
enter
adc
xchg
mov
add
jge
lahf
shrb
mov
push
clc
mov
pop
push
in
lea
fnsave
aaa
pop
test
adc
and
int
das
int3
xlat
mov
add
mov
cmp
cmp
jmp
mov
xlat
push
fcoms
push
cmp
mov
fcoms
push
insl
xor
pop
clc
rcr
or
int
mov
xlat
stos
cmp
xor
stos
lea
fwait
aam
notl
sub
pop
repnz
fimull
jbe
call
daa
lret
adc
enter
cmp
mov
lods
mov
jg
cmp
xchg
xor
sub
inc
and
and
xchg
xchg
push
jle
iret
lods
pop
notb
sub
jmp
into
pop
ja
insl
jp
fwait
mov
mov
mov
out
lahf
rol
mov
ret
adc
in
jno
orb
mov
into
inc
push
push
mov
cmpsl
xchg
xchg
jne
jae
cmp
sbb
movsl
mov
jae
lret
lea
in
push
push
and
xlat
xor
notl
mov
cmp
test
lret
lcall
ja
sti
mov
pop
mov
cmp
mov
fcoms
jne
addr16
fnsave
add
push
adc
rorl
lahf
add
lahf
mov
pop
push
addr16
repnz
into
das
jnp
push
xchg
lcall
mov
push
sub
xchg
jecxz
mov
mov
loop
jno
add
xor
inc
sub
pop
and
add
mov
test
pop
sbb
in
lret
jle
pop
jae
js
lcall
ret
mov
les
mov
adc
and
popf
sahf
out
shll
jb
jg
gs
mov
adc
pushf
sahf
std
std
or
adc
xchg
cmp
shll
mov
out
mov
sar
sub
dec
repz
xchg
push
mov
cld
into
jnp
cmp
sub
outsb
add
lahf
ja
imul
test
lds
fsubrs
imul
cmp
add
repnz
lcall
lret
xchg
xor
mov
xchg
sbb
decl
pop
mov
es
popf
push
mov
adc
lds
mov
mov
mov
mov
sti
mov
mov
cmp
mov
out
in
repz
inc
push
cli
or
enter
add
lds
mov
pushf
mov
leave
cltd
mov
pop
cwtl
add
xchg
test
repnz
shl
cltd
xchg
scas
fsubrs
pop
jb
inc
add
dec
xor
scas
addr16
mov
pop
push
add
js
imul
sub
mov
mov
into
jl
mov
push
jmp
enter
sub
cli
fistps
stos
fnsave
xchg
nop
add
push
pop
fcomps
fmull
pop
mov
aam
push
fdivrs
cld
cmp
jge
jo
repz
push
movsl
push
insl
sarb
daa
idivb
fistpl
clc
sarl
sti
cmp
sub
ds
sub
mov
rclb
loop
mov
mov
add
cmp
dec
enter
loope
mov
mov
or
adc
ljmp
rol
mov
ja
xlat
arpl
jg
mov
lock
jae
add
xchg
xchg
mov
xchg
jno
int3
stos
mov
movsb
mov
mov
popa
mov
cmpsb
mov
test
jae
cs
lret
mov
jo
daa
jge
pop
dec
test
repnz
xchg
mov
xchg
adc
orb
enter
sbb
dec
adc
jp,pt
push
mov
aam
enter
pushf
aas
lret
mov
mov
mov
call
push
cmp
fcomps
jo
lahf
gs
imul
imul
into
je
jns
daa
pushf
pushf
pop
jp
xlat
lahf
out
xchg
jbe
jns
or
out
sub
shl
push
xlat
mov
sub
shll
add
movsb
mov
sub
loop
jno
arpl
adc
lds
lods
mov
lds
aaa
jle
inc
add
pop
xchg
or
ret
movsl
inc
pop
sub
push
lock
jb
imul
mov
pop
test
out
out
mov
mov
inc
gs
lods
jo
mov
test
adc
jg
mov
jmp
popa
and
xchg
jmp
xor
shll
xchg
cmp
lret
push
push
xchg
das
xlat
sub
add
add
xchg
pop
rcll
aam
jae
pop
test
lods
aam
ds
rorb
insl
fldl
scas
into
test
stos
imul
out
imul
ja
sti
xchg
rcrl
mov
mov
jmp
mov
aad
loopne
jmp
cld
mov
cmpsb
lea
push
mov
adc
rorb
ret
jno
fs
sbb
shlb
aam
sbb
add
add
dec
cmc
add
pop
lret
out
xlat
pop
enter
arpl
test
mov
movsb
shrb
sahf
add
stos
cmp
popf
sbb
enter
dec
lea
int
push
add
jle
repnz
xchg
das
fwait
xchg
in
push
inc
or
lods
xchg
add
je
test
mov
addr16
mov
xor
nop
jns
push
gs
cltd
shll
push
notl
mov
movsb
sti
xor
sub
sub
jge
lds
adc
cmp
jg
icebp
cmp
repnz
push
sar
fildl
clc
fisubrl
lods
jle
pop
pop
sbb
inc
in
lret
test
dec
xor
adc
frstor
into
rcll
enter
loopne
ret
sarl
xchg
mov
aas
mov
lahf
mov
lods
pop
rorl
decl
enter
outsl
repz
sub
push
or
ret
sbb
xchg
xchg
movsl
add
push
lock
add
cmp
ret
les
fsub
jecxz
mov
pop
lcall
cli
out
lods
mov
pop
or
into
jnp
add
arpl
add
nop
mov
adcl
cwtl
test
xchg
jbe
cs
cmpsl
mov
stos
xor
js
movsb
sarl
shll
lahf
in
mov
jb
popf
dec
addr16
xor
mov
sbb
cld
stc
das
testb
in
xchg
daa
gs
shrl
mov
xlat
loop,pn
jg
stc
shr
nop
pop
icebp
xor
scas
lds
pop
mov
mov
push
movsl
faddl
repnz
push
jo
jl
iret
or
rcl
sti
frstor
insl
pop
les
mov
daa
xchg
lahf
push
js
cmp
or
xchg
faddp
leave
and
jg
pop
stos
lea
mov
les
cltd
mov
xor
sub
cmpb
ret
adc
ret
mov
xor
mov
cmpsl
or
add
inc
xchg
lret
sub
sbb
lods
xchg
sub
mov
popa
rolb
jmp
xor
mov
mov
jo
sub
movsb
sbb
sahf
lods
rclb
pop
sti
mov
fadd
add
inc
push
xchg
aam
fsubp
jecxz
mov
cltd
rorb
fwait
or
push
add
cwtl
mov
pushf
and
push
push
imul
inc
cwtl
mov
test
mov
stos
mov
mov
mov
mov
sbb
add
push
sub
in
inc
pop
lcall
push
lret
lret
cltd
jle
std
jb
ficoml
jne
push
xchg
cmpsb
add
out
pushf
jae
cmp
pop
pop
mov
clc
lret
shrl
push
lea
sub
mov
out
addr16
mov
out
pop
repz
fildll
mov
add
flds
fisubl
stos
cltd
push
xor
mov
sti
lret
sti
sub
cmp
cmp
xor
mov
mov
addl
aam
mov
add
int
icebp
xchg
jo
enter
cld
or
movsb
orb
mov
xor
pop
mov
lahf
js
lcall
cmp
inc
dec
pop
sbb
add
mov
ret
stc
ret
mov
mov
mov
test
dec
loope
cmpsl
mov
rorb
inc
jns
add
sub
roll
add
rorb
jmp
pop
add
int
enter
in
pop
cwtl
gs
xchg
mov
rclb
das
inc
jne
add
sbbb
jnp
stos
jne
add
mov
adcb
cmp
dec
popf
aas
dec
push
xchg
mov
mov
dec
int
outsb
push
push
push
lds
hlt
testb
cltd
cld
cmp
or
shll
pop
loop
xlat
out
shll
shll
lcall
clc
into
in
into
dec
lahf
pop
jnp
pushf
addr16
xchg
sub
lahf
leave
pop
pushf
push
sti
or
dec
test
lods
cmp
xchg
out
jg
push
iret
cmp
xlat
cli
or
or
stc
pop
gs
imul
lahf
int
sub
cli
sub
int3
into
addb
jnp
daa
aam
leave
pop
push
cmc
dec
jo
jnp
jmp
mov
jg
aam
fnstcw
iret
repnz
pop
jmp
ds
jmp
aas
lret
cld
into
test
jbe
fbld
jae
in
enter
int3
lods
mov
aam
iret
rorb
ret
adc
or
lods
xchg
pop
adc
adc
mov
cmova
mov
xor
mov
adc
mov
mov
jnp
adc
jo
cmpsb
test
push
or
add
inc
test
pop
inc
movsb
mov
jo
cld
movsl
or
add
mov
shll
or
into
iret
adc
aad
fcmovu
jbe
mov
mov
or
jg
cltd
lds
aam
pushf
rorb
jge
and
add
bound
pop
dec
inc
cmp
inc
out
into
inc
int3
dec
adc
repz
aas
dec
cld
inc
push
out
push
decb
xor
pusha
xchg
sbb
daa
outsb
inc
rolb
in
lds
mov
mov
fucomp
push
addb
xor
outsb
jbe
add
lret
add
aam
into
imul
movsl
jbe
fsts
mulb
scas
imul
push
in
cmp
movsl
jnp
lods
jl
push
dec
or
xor
pop
into
lods
jle
iret
mov
xor
in
cmp
std
in
cmp
das
repz
hlt
stos
imull
mov
sbb
push
cmp
ret
pop
ror
call
fnsave
lahf
mov
ficomps
jnp
xor
adc
fimuls
dec
aaa
nop
sti
xchg
aam
pop
mov
std
mov
cwtl
daa
ret
leave
adc
call
sarl
aam
cmp
rorl
xchg
pop
roll
lret
scas
xchg
dec
or
or
into
shlb
ret
shlb
cwtl
insl
dec
aaa
pop
mov
jnp
and
popf
jb
xor
inc
popf
inc
or
fwait
decl
fistl
jns
add
push
or
or
iret
push
mov
mov
mov
mov
xor
test
test
ficoml
pop
cld
cmpsl
or
or
add
mov
and
movsb
cmp
in
fnstsw
mov
adc
jnp
sub
push
push
pop
enter
leave
in
popf
mov
jmp
add
cmpsl
call
mov
fwait
cmp
mov
dec
in
lahf
sub
movsl
dec
jo
xchg
push
lods
fst
jnp
cltd
sbb
jnp
cltd
dec
in
cmp
push
fnstsw
cmp
xor
popf
cmp
movsl
mov
lea
pushf
sub
xchg
lods
or
in
or
mov
out
jmp
leave
xlat
pushf
xchg
mov
outsl
rep
testb
repz
cmc
sti
fwait
or
sbb
jae
xchg
imul
movsl
daa
idivb
or
jge
stos
mov
ljmp
ljmp
jmp
lret
jne
adc
test
aas
pop
std
fidivl
pop
jns
pop
sbb
test
sub
xchg
fiadds
aam
nop
scas
ror
shlb
les
lahf
ret
inc
or
int3
stos
mov
cltd
push
mov
pop
sub
add
push
dec
fiaddl
aaa
adc
or
add
xchg
inc
mov
movsl
xchg
mov
or
lahf
jae
dec
stos
sbb
pop
xor
push
inc
insl
adc
int
xchg
test
fisubs
stos
pop
loope
adc
mov
test
adc
pop
xchg
mov
or
xor
push
xor
add
ffree
loopne
loop
jno
mov
popf
mov
filds
je
adc
fisttpll
add
pushf
mov
and
push
aam
rorl
cmp
add
popa
aas
fisubrl
pushf
pop
jecxz
xchg
sub
xchg
pushl
dec
mov
jecxz
xchg
frstor
mov
notl
push
sarb
movsl
jbe
sti
cld
out
mov
adc
push
mov
mov
in
daa
fstpt
xchg
mov
fimull
pop
pushf
jnp
cli
iret
jae
in
xor
sahf
addr16
in
fidivrs
push
xor
inc
fs
push
xchg
fisubs
into
jmp
cmpsl
mov
out
into
fimull
push
mov
cltd
pop
rcll
popf
jl
jnp
lret
rcr
scas
xlat
push
mov
and
imul
inc
jb
enter
adc
les
call
stos
loope
mov
rcrl
jo
into
add
sarl
push
flds
int3
pop
ret
mov
test
adc
mov
adc
mov
int3
cmpsl
adc
add
and
aaa
rolb
sbb
lods
mov
pop
nop
or
shrb
dec
inc
mov
aaa
adc
leave
lcall
test
lods
add
push
scas
mov
sbb
mov
mov
or
stos
add
lock
mov
add
xchg
lret
cmc
sbb
dec
xor
push
add
enter
mov
std
push
or
jo
addr16
fiaddl
jmp
mov
std
mov
lea
add
rclw
sahf
pushf
shl
sub
xor
push
mov
insl
add
lahf
out
rcrl
into
leave
push
addr16
add
rorl
in
and
fs
cld
aaa
imul
shrl
sbb
xchg
out
pushf
mov
gs
cmp
xor
mov
pop
ret
mov
cmp
cmpsl
adc
rol
mov
cmp
mulb
bnd
fisttpl
mov
call
mov
rcl
sar
lret
pop
mov
mov
movsl
dec
xorb
scas
mov
testb
in
cs
dec
jecxz
daa
loope
adc
xor
fldl
pusha
add
ret
scas
add
push
aam
movsb
cld
aaa
loopne
cmp
pop
enter
xor
mov
jb
sbb
popa
lret
and
fiaddl
pop
sbb
fsts
add
fldl
test
pop
ret
rol
mov
roll
jp
lahf
sbb
add
mov
in
add
lret
adc
or
js
in
aas
jbe
mov
fidivs
cmp
jecxz
mov
in
icebp
outsb
mov
cmp
push
add
sub
fwait
mov
in
lods
addr16
cltd
enter
movsl
mov
sub
push
fs
jbe
leave
pop
pushf
jb
sarb
xor
mov
aam
mov
push
xchg
add
std
jg
out
mov
add
push
rolb
add
mov
lods
cmp
mov
lds
std
clc
outsl
jmp
and
sub
scas
aam
dec
cmpsb
pushf
ror
pushf
cmp
adc
outsl
lock
inc
fimull
push
jo
dec
push
scas
insl
lahf
arpl
jg
jae
xchg
ljmp
mov
aad
lret
mov
cmpsb
lahf
inc
add
pop
xor
popf
jbe
push
sahf
lahf
movsl
xlat
xor
inc
test
push
cmp
mov
cmpb
dec
jae
lret
push
dec
or
jns
cmp
xlat
fucomip
mov
mov
pop
in
add
ljmp
aad
cmpsb
add
js
add
aam
fwait
decl
add
aad
sub
sub
fst
lret
inc
inc
pop
daa
mulb
xor
xchg
inc
pop
ss
add
insl
pop
sbb
je
inc
pushf
into
movsb
js
cmp
lahf
jno
nop
add
into
jg
xchg
insb
xchg
icebp
jp
out
mov
mov
mov
jecxz
mov
and
sahf
mov
jne
pop
aam
lret
cmpsl
sti
mov
jg
xor
test
mov
lcall
loop
cmp
mov
gs
lret
jbe
bnd
lret
jl
pop
shrl
into
lret
mov
jns
jne
popa
push
cmp
xchg
lret
lcall
jne
mov
fwait
into
mov
insl
lcall
xchg
adc
ljmp
cmp
add
fmull
lods
das
cmp
fisubs
push
mov
sbb
adc
shll
pop
lahf
icebp
xchg
pop
shll
rcr
push
pop
repz
lret
icebp
rorl
xor
xchg
fisubs
stc
fidivrl
add
cs
js
ret
add
xlat
mov
adc
jmp
add
push
adc
rol
adc
test
cmp
int
mov
std
adc
movsb
adc
stos
out
cld
ds
add
mov
fidivrl
push
popf
xlat
lahf
fs
adc
mov
mov
sub
lret
adc
jnp
dec
push
addr16
cmp
adc
cli
into
xlat
popf
xchg
xor
pop
lret
mov
jns
pop
jp
sahf
pushf
pop
mov
imul
fbstp
xlat
pop
add
in
mov
jb
lcall
imul
fbld
xchg
cltd
aas
das
xchg
in
mov
ljmp
xlat
cmp
mov
int3
movsb
ljmp
lahf
add
pop
mov
addr16
cmpsl
popa
imul
pop
std
movsl
jbe
ficoml
pushf
cld
aam
mov
mov
push
jnp
pop
scas
sub
rol
mov
jg
repz
push
pushf
pop
mov
or
xlat
pop
into
mov
daa
mov
inc
push
mov
cmp
aad
xchg
out
dec
scas
in
popf
pop
in
cmp
jmp
sub
jecxz
mov
mov
mov
add
pop
jnp
sub
dec
xor
dec
or
lea
pop
lcall
iret
xlat
repnz
xchg
test
lahf
out
popa
imul
mov
std
mov
and
cltd
daa
test
add
push
xchg
pushf
movsl
push
fs
leave
jg
into
sahf
pushf
cmpsl
xor
iret
jecxz
fiaddl
jns
pop
push
pushf
lahf
lahf
push
insl
pop
lret
std
sti
std
ljmp
lret
out
xor
pushf
scas
jbe
jns
or
fists
idivl
cmp
or
or
cltd
cmpsl
cwtl
jp
xchg
dec
push
insl
inc
mov
popf
jo
std
scas
fcmovnbe
jl
jl
sti
hlt
clc
xor
cld
test
enter
out
cli
jnp
lods
mov
cmp
mov
pushf
fsubp
dec
repz
xor
mov
add
xor
aaa
jge
in
and
test
hlt
mul
jbe
mov
add
xchg
sub
xchg
popf
add
in
xchg
lcall
lret
cmp
xor
mov
lret
fucomip
out
and
leave
aam
push
jne
push
ret
pop
lahf
pop
xchg
or
cmp
push
or
push
ret
push
into
sar
sti
out
mov
out
pop
loope
lds
ds
dec
lret
das
dec
mov
lret
ror
cltd
pop
mov
jle
jnp
dec
push
addr16
mov
pop
nop
into
fiaddl
cltd
dec
inc
jg
mov
out
jge
cmp
cli
push
pop
imul
repz
aad
xlat
jl
aam
ficoml
xchg
cld
mov
cmp
addr16
scas
fnstsw
insl
scas
or
fisubl
pop
xlat
xlat
mov
xchg
shr
xor
addw
ja
mov
idiv
lods
repnz
repnz
mov
lock
mov
sub
cmp
cmc
pushf
idiv
outsb
mov
add
lret
sahf
xchg
into
repz
xchg
or
jns
stc
popf
push
add
mov
lret
pop
shll
aas
pop
fisttpll
push
mov
leave
cltd
je
jb
ret
add
notl
mov
rolb
mov
cmp
mov
jle
push
cld
xlat
outsl
div
lret
lcall
cmpsl
push
pop
imul
notl
xor
mov
std
imul
outsl
xor
cmp
nop
fbld
inc
pop
jns
push
mov
sub
stos
imul
xchg
sub
mov
jmp
jo
add
jae
cs
sti
fwait
or
add
sbb
xchg
push
js
cmp
call
mov
jmp
add
pop
add
jl
hlt
cmc
andb
mov
cmp
mov
adc
push
mov
cmp
xchg
insl
lret
sub
rep
pop
leave
fiaddl
int
and
pop
pushf
scas
in
sub
jnp
fwait
lcall
or
mov
stc
into
imul
lods
aam
sub
idivb
in
sbb
fdivrl
div
xchg
mov
push
sahf
nop
dec
cmpsl
sbb
dec
push
stos
imul
jg
add
movsl
push
jo
mov
push
sahf
pushf
repnz
faddl
push
xchg
push
popa
mov
ficoml
pop
lret
std
cmp
stc
into
mov
into
test
mov
jmp
jo
mov
xchg
mov
lds
out
fists
jne
jae
xchg
repz
in
and
xor
mov
sahf
es
fistpll
out
clc
pop
enter
testb
add
testl
cli
sti
fnstsw
fistps
lds
add
mov
mov
xchg
aaa
pop
jmp
push
dec
sbb
pushf
mov
jae
scas
addr16
fwait
cld
into
movsb
negl
lahf
hlt
repz
dec
mov
xchg
jns
lretw
lahf
lods
sbb
mov
enter
sub
or
mov
mov
adc
cmpsl
cmp
push
in
inc
out
xchg
sub
stc
shr
sub
fisttpl
mov
xchg
add
iret
cmp
bt
dec
iret
xor
cli
jne
jo
add
into
pop
enter
mov
out
xchg
aam
testb
jns
lret
fisubs
into
jle
enter
and
shl
outsb
push
test
mov
cltd
mov
jno
out
jecxz
sub
cli
add
add
add
stos
mov
cld
inc
out
mov
push
jmp
ret
mov
lret
jg
mov
iret
xor
sar
or
dec
popf
push
add
mov
lods
fisubl
jb
into
mov
imul
sahf
lahf
sar
into
pop
xlat
adc
jns
dec
lret
push
lret
mov
add
test
mov
mov
xchg
daa
ret
enter
xchg
popf
gs
dec
addr16
cmp
repz
push
mov
jno
out
push
pop
ficompl
mov
jp
adc
or
xchg
ljmp
cld
sub
xchg
dec
repnz
fiaddl
into
xchg
mov
aam
out
enter
lret
cmovp
xor
stc
aam
mov
mov
dec
pushfw
or
movl
ljmp
sbb
mov
rcll
rorl
popf
dec
add
pop
push
add
enter
mov
sub
shrl
mov
std
push
push
sbb
std
sbb
pop
ret
shlb
pushf
mov
sub
pop
sti
jnp
imul
ffreep
pop
aam
lret
cmp
sarb
or
lahf
in
add
mov
sbb
inc
xchg
sti
pop
push
push
hlt
out
mov
cmp
or
inc
movsl
mov
dec
test
lret
inc
imul
fistps
mov
xor
ficompl
xlat
sub
scas
into
aas
fmul
mov
jge
sub
mov
into
dec
cmpsb
push
in
cmp
sub
push
inc
dec
out
sub
or
out
fiaddl
fbld
and
mov
add
adc
and
pop
std
pop
add
rolb
xchg
scas
aas
mov
mov
add
adc
mov
push
cltd
lret
cmp
mov
rcrl
std
xor
test
in
cli
fiadds
push
jbe
iret
idivl
cmp
ficoml
into
int3
stc
outsl
sub
sub
mov
aam
sub
and
xchg
push
push
jae
sbb
mov
mov
jmp
enter
notl
jnp
lds
fs
stc
shll
mov
lret
ficomps
cmp
lret
add
add
push
push
xchg
cltd
lahf
fnstenv
xor
xchg
push
push
stos
idivl
mov
jmp
lret
jp
mov
fbld
cltd
mov
add
sub
outsb
or
push
out
out
add
in
lea
out
in
nop
in
mov
fmuls
in
out
and
fsts
out
out
xor
xor
jmp
fidivs
inc
fbld
loopne
fisubrs
mov
pop
adc
jmp
aas
test
cmc
in
loop
insb
hlt
inc
pop
testl
jno
push
and
xorl
xor
out
pop
add
nop
or
inc
add
jmp
dec
adc
xlat
jg
dec
mov
nop
xor
lock
pop
add
pop
xchg
xor
cs
inc
aaa
ljmp
loope
iret
fcmovbe
leave
ror
roll
lds
mov
cmpsl
lods
test
sahf
add
xchg
mov
mov
jnp
cmpb
js
fdivs
jge
jbe
xor
push
push
jne
lcall
ja
jle
inc
test
jp
test
test
cmpl
xchg
xchg
mov
movsb
bound
jge
add
xchg
and
dec
mov
pop
cmpsl
jns
lahf
addr16
in
fidivrl
inc
loop
scas
adc
scas
lea
loopne
les
lds
les
and
arpl
cld
pusha
fcmovnb
stos
mov
cs
lods
add
adc
add
out
mov
call
sarb
jmp
adc
add
mov
aam
mov
aad
mov
add
and
call
sarl
mov
inc
cltd
or
iret
in
adc
sub
ret
test
adc
int3
mov
jecxz
mov
and
lret
sbb
inc
mov
enter
and
mov
loopne
scas
mov
test
lods
fidivrs
ffree
lods
xchg
ja
pop
fsubrl
shrb
sbb
cmpsl
xchg
adc
loop
lret
test
pop
jmp
ljmp
int
adc
int
pop
xchg
pop
out
inc
add
lods
add
in
mov
jecxz
out
lock
mov
lods
mov
movsb
lret
mov
lds
lods
cltd
mov
pusha
pushf
mov
andb
popf
add
lcall
lahf
cltd
shll
cwtl
jno
mov
mov
popf
mov
mov
and
addl
xchg
test
bound
roll
or
mov
decb
mov
lods
sahf
mov
add
add
adc
movl
lods
pop
stos
xor
and
sub
xchg
stos
sbb
jae
cld
dec
fisttpll
scas
add
leave
mov
in
mov
out
inc
mov
adc
add
inc
add
test
or
and
mov
lods
cmpsl
adc
fcom
mov
mov
cmc
fcompl
cmpsl
add
and
adc
inc
pop
iret
mov
add
fmuls
add
lret
sbb
leave
fiaddl
loopne
scas
mov
push
stos
mov
ret
pop
stos
adc
and
test
ret
ds
cmpsl
in
mov
cwtl
scas
add
fimull
fadds
jbe
mov
inc
into
ret
mov
mov
sub
in
lret
add
and
mov
out
lock
repz
mov
or
xchg
push
xchg
movsl
add
mov
leave
mov
lds
xchg
shlb
mov
mov
add
mov
int3
add
sbb
mov
mov
adc
add
cmpsb
inc
xchg
or
stos
cwtl
xor
test
mov
adc
inc
popf
mov
sahf
les
inc
mov
mov
ret
sbb
ret
mov
mov
or
mov
shrb
or
mov
dec
cmp
cli
push
add
dec
sub
sub
sub
and
insb
pop
pop
fimuls
mov
in
int3
mov
in
test
pop
out
imul
mov
insb
leave
sbb
and
sarb
add
js
test
sarl
inc
test
ds
adc
mov
bound
mov
mov
mov
mov
popa
mov
add
loope
inc
mov
leave
mov
cltd
mov
xor
xor
lods
pop
faddp
or
lods
ffree
push
inc
stos
faddl
mov
test
adc
sub
xchg
sbb
inc
in
sub
jmp
call
fstps
dec
add
inc
int3
or
lret
mov
in
mov
mov
push
scas
test
push
loop
mov
loope
dec
mov
out
in
mov
mov
mov
inc
sahf
iret
sub
add
scas
lcall
lret
add
scas
cltd
adc
enter
lret
mov
lahf
ss
mov
nop
ss
cmpsl
add
test
stos
adc
mov
add
aam
lods
mov
push
inc
loop
aaa
xchg
xlat
call
mov
in
outsl
and
faddl
test
les
inc
mov
mov
mov
and
fstpt
lret
in
adc
pop
popa
daa
lods
mov
add
sbb
push
jno
cmp
orb
jbe
dec
dec
repnz
and
xor
int3
jb
movsb
add
enter
fistpl
add
lods
pop
not
pop
les
dec
sub
jmp
sarl
addr16
add
jb
in
mov
shrl
mov
js
add
jns
sub
shl
ret
add
and
adc
leave
sbb
inc
push
jae
and
test
adc
mov
cmp
mov
sub
add
xor
sahf
imul
adc
push
mov
imul
add
xchg
and
fisubl
mov
jno
into
in
xor
loop
mov
enter
inc
stc
ja
popa
pop
ffreep
lods
adc
loope
adc
rolb
mov
dec
add
and
mov
mov
add
std
cmpsb
pop
flds
scas
dec
add
add
mov
sub
lret
mov
fadd
lods
xlat
in
and
xor
flds
lret
mov
add
subb
mov
les
jp
rcrb
sarl
rol
rol
pop
mov
rcll
mov
and
add
lock
adc
mov
lods
and
loopne
sbb
or
cmp
pop
aas
js
xchg
orb
arpl
cmp
xchg
insb
js
fs
sbb
out
stos
je
call
dec
adc
test
mov
jecxz
add
push
mov
daa
inc
sbb
mov
and
imul
xor
pop
jmp
mov
fcmovne
arpl
js
stos
xchg
daa
dec
aad
in
mov
lds
stos
push
mov
xlat
int3
xor
push
mov
adc
scas
or
lds
loope
ret
lods
or
jb
mov
xchg
add
mov
inc
inc
sub
test
pop
out
xor
andb
xchg
add
inc
loope
rcrb
add
call
out
testb
xchg
mov
add
mov
lock
roll
push
and
mov
and
fdivrs
xchg
mov
add
lds
pop
mov
out
push
aam
fisubrl
mov
inc
in
mov
xchg
jo
pop
outsl
jae
out
int
mov
mov
add
pop
jo
mov
jbe
push
pop
or
add
je
pusha
xchg
mov
sbb
mov
add
in
in
insb
aad
in
test
aas
add
pop
mov
popl
out
hlt
les
lds
fmuls
xchg
adc
xor
hlt
adc
fsubrl
mov
add
xor
movups
xor
jns
jge
jne
je
push
dec
add
js
popf
xchg
mov
xchg
pusha
pop
jns
dec
dec
cmp
insl
pop
inc
cltd
sahf
and
and
mov
icebp
imul
fld
jb
jb
push
mov
pop
adc
scas
xchg
or
cmpsl
aad
mov
add
or
ljmp
shll
jb
and
subl
rolb
cmpsb
mov
pop
fs
sub
into
adc
mov
into
push
pop
jnp
mov
add
mov
lret
sahf
in
xor
enter
and
in
adc
pop
jns
jmp
adc
leave
out
insb
adc
mov
test
pushf
icebp
push
stc
xlat
cmpsl
lcall
mov
jns
xor
mov
adc
inc
add
sbb
add
sti
arpl
inc
push
shufps
push
inc
add
stos
mov
test
icebp
mov
fadds
sub
cs
jno
pop
repz
out
mov
test
sarb
sarb
xorl
pop
mov
or
inc
rcl
sbb
or
inc
cwtl
mov
xor
add
push
push
mov
sub
cmp
sarl
mov
mov
fcmovb
cmpsl
aaa
sbb
mov
mov
add
pop
aaa
cwtl
push
add
sbb
dec
add
inc
inc
data16
iret
fnstenv
divb
pusha
stc
pop
jne
clc
jp
fadds
data16
sub
pop
xor
int
xor
sub
cmp
imul
fs
fcoms
inc
add
mov
and
xor
popf
sbb
aad
dec
movsl
push
xchg
or
lods
sbb
fidivs
scas
pop
test
bound
pop
cmp
mov
push
jns
addr16
lret
loope
lret
cmp
fldt
mov
stos
cmpsl
add
mov
jb
add
sti
shrl
leave
push
pop
pop
popf
cmp
test
mov
inc
mov
add
cmp
enter
lods
mov
push
adc
add
frstor
lds
inc
mov
mov
adc
inc
add
and
or
dec
lds
fwait
or
jo
data16
inc
cmc
incb
mov
and
cmpsl
add
add
or
data16
movsl
cmpsl
ret
mov
and
iret
imul
loop
clc
repnz
pop
cli
repz
shl
jmp
push
div
in
dec
add
and
ljmp
call
add
add
jl
pop
sarl
mov
add
or
add
jge
or
std
outsb
fiaddl
xlat
flds
or
clc
js
loop
pop
jl
inc
or
mov
outsl
js
xchg
or
pop
lods
es
cwtl
daa
js
fldt
cltd
jp
pop
and
xor
or
adc
sub
add
inc
jge
or
sarl
test
gs
mov
pop
mov
jle
inc
cmpsb
gs
sbb
movsl
ss
and
push
sub
mov
addr16
mov
cmp
repnz
mov
mov
adc
aad
xor
sahf
dec
inc
int
lcall
add
mov
fisubrs
mov
pop
addr16
lret
rclb
adc
cmp
push
popf
cmp
popf
or
rcl
sub
jp
mov
int
cmp
mov
in
fcomps
mov
add
mov
mov
pop
jecxz
mov
in
mov
xchg
mov
sti
movsl
cmp
or
mov
addl
mov
inc
in
xorl
and
mov
mov
lods
add
imul
pop
mov
movsb
test
mov
out
jecxz
stos
mov
push
pop
push
xchg
add
add
pop
push
push
xchg
push
pop
push
jbe
jae
and
fsubrl
lret
add
pusha
pop
cli
bound
pop
push
insb
jle
subb
xor
push
pop
pop
rclb
push
and
push
sbb
sbb
sbb
sbb
push
stc
adc
std
adc
push
and
push
pop
adc
and
push
xor
and
insb
push
adc
xchg
sbb
inc
sbb
mov
lret
cmp
addr16
aaa
inc
adc
gs
loope
lock
out
add
in
ret
mov
lock
scas
dec
dec
xor
mov
add
or
fstps
mov
int
jnp
sbb
mov
xchg
cmp
pusha
sub
sbb
enter
mov
pop
or
and
dec
pop
cmp
xor
jae
xor
mov
es
movsb
fchs
add
fs
flds
mov
enter
mov
pushf
push
test
mov
imul
inc
and
test
adc
enter
popa
push
mov
ret
mov
adc
lods
jp
out
imul
iret
mov
rclb
mov
add
test
mov
daa
pop
inc
lods
mov
pop
cmp
ror
imul
popl
dec
add
or
adc
and
movb
pop
lods
xor
or
pop
mov
stos
repnz
mov
out
shlb
pop
mov
vaddsubpd
out
in
cmpsl
add
lret
in
mov
add
ficompl
test
inc
xchg
idivb
pushl
cmp
jb
jne
push
xchg
sbb
cmpsl
lret
repz
cmpsb
out
cwtl
cltd
lock
fptan
xchg
push
hlt
or
xchg
stos
stc
and
lods
pop
cwtl
lods
sub
cmp
push
decb
push
repz
sbb
sbb
mov
mov
add
mov
mov
sahf
jo
loop
add
icebp
jno
imull
outsl
xlat
pop
cmc
insl
aad
lock
cmpsl
ljmp
dec
data16
std
ret
movsl
mov
mov
add
dec
dec
das
sub
stos
xchg
xor
pop
cmpsl
mov
dec
int3
stos
mov
je
push
sub
mov
sub
ret
scas
xchg
push
pop
push
js
addl
pop
cmp
push
mov
pushf
jge
ret
stos
xchg
in
mov
inc
and
ret
xchg
ja
sbb
mov
cs
pop
and
dec
out
inc
loop
outsb
push
dec
sbb
mov
mov
pop
aas
xchg
fs
call
jmp
test
and
daa
xchg
outsl
cmpsl
xchg
imul
add
ret
lods
adc
mov
pop
loope
popa
pop
in
mov
out
mov
mov
push
dec
pop
xorl
dec
mov
aam
mov
aad
movsl
adc
xchg
subl
add
jns
lret
cmp
mov
xchg
loopne
fstpt
leave
mov
fcmovb
or
or
mov
push
js
jecxz
xlat
into
xorb
mov
lds
les
mov
fdiv
mov
rclb
ljmp
ficoms
push
imul
push
imul
dec
insb
out
add
dec
outsb
cmc
dec
outsl
jae
sbb
sti
dec
fdivr
fdivl
dec
scas
inc
sub
js
fwait
insl
repz
mov
add
push
insl
loopne
je
xchg
xchg
out
mov
mov
mov
push
sahf
leave
cltd
mov
out
xchg
mov
push
mov
inc
adcb
xlat
cmpsl
aaa
add
or
fcmovnbe
inc
adcb
pop
cmp
push
push
jl
cmp
idivb
cmp
mov
xchg
jnp
leave
scas
xchg
mov
mov
pushf
mull
xchg
js
mov
mov
mov
mov
mov
pop
cltd
lods
inc
and
sbb
pop
sub
xor
sub
sub
cld
pushf
mov
lods
or
push
pop
mov
pop
mov
xchg
jmp
imul
mov
jb
mov
or
mov
dec
push
pop
fisubrl
add
ret
mov
mov
and
inc
lret
mov
in
pop
add
sbb
inc
cmovle
stos
or
jg
loopne
mov
mov
icebp
out
insb
gs
iret
mov
add
mov
shll
shr
mov
sarb
iret
int
adc
mov
or
ss
inc
sarl
leave
add
push
loopne
inc
pop
add
mov
push
mov
pop
aad
mov
inc
int3
adc
pushf
add
fiaddl
faddl
fildl
inc
pop
inc
in
sbb
pop
jmp
pop
lock
pusha
repz
popf
stc
mov
adc
ds
add
popa
push
cmp
fwait
pop
repz
mov
mov
fstl
sbb
mov
lods
and
xorb
and
lahf
loop
movsl
call
or
push
sbb
test
adc
mov
loop
pusha
iret
sahf
and
stc
mov
bound
pusha
int3
xchg
gs
pop
push
and
lock
stos
xchg
cld
lea
mov
mov
cwtl
rorl
pusha
sub
and
fs
popf
das
or
xchg
in
add
jle
inc
outsb
xor
lods
dec
lea
popf
dec
xor
jb
sub
bound
mov
mov
jge
popa
stos
adc
lahf
or
mov
iret
into
insl
fwait
sub
pop
int
pusha
mov
and
or
adc
pop
pop
sub
imul
cmp
sahf
mov
xchg
sahf
jb
lods
lods
cmpsl
dec
fcmovnu
faddp
inc
lods
lods
or
stos
ss
fiaddl
sbb
mov
jle
push
cld
inc
leave
push
pop
pop
mov
in
push
mov
push
mov
enter
call
and
add
or
inc
mov
test
int3
mov
add
pop
pop
fcmovnbe
push
lret
scas
int
iret
pop
into
sub
push
lea
lret
stos
adc
jns
or
in
sbb
lret
int
adc
mov
jne
scas
add
mov
pop
enter
popf
xchg
mov
and
dec
and
cmp
xor
in
out
push
jmp
push
in
xor
sbb
cmc
das
ret
stc
cs
lcall
xchg
adc
sbbl
fldenv
xor
repnz
jle
int3
push
in
pushf
ljmp
mov
sarl
loopne
adcl
stc
loope
sub
xor
add
mov
loop
jp
subb
cwtl
jo
idivl
lcall
mov
push
jnp
in
mov
add
mov
pop
out
sub
add
lods
mov
push
insb
adc
xchg
push
adc
and
in
pop
pop
mov
pop
push
test
outsl
mov
and
jns
lret
mov
data16
push
dec
push
sub
xor
test
mov
loop
xchg
push
mov
stos
cmp
pop
xchg
adc
pop
fcomps
dec
sub
push
int
sbb
cmp
sub
add
mov
cld
inc
ja
push
pop
and
enter
mov
mov
in
jle
lods
cmpsl
shrl
lds
adc
add
fcoml
xchg
out
mov
imull
test
cmp
mov
pop
jecxz
mov
lret
mov
lods
jl
pop
aas
mov
mov
pop
pop
mov
mov
mov
add
inc
pop
mov
sbb
and
mov
lods
add
push
in
or
aam
leave
jno
push
add
outsl
add
lds
add
insb
fs
fcmovbe
adc
add
mov
inc
pop
in
sub
add
pop
fwait
lea
mov
aas
jae
sbb
fldt
shl
shl
inc
in
and
inc
mulb
inc
stc
and
jns
out
mov
add
sbb
cwtl
mov
fimull
or
insl
and
inc
clc
jle
sbb
jmp
or
sub
int3
fcmovnu
rcr
jbe
pop
loop
push
sub
lds
ret
add
jno
jae
ljmp
mov
mov
stos
insb
mov
cmc
outsb
rol
rcrb
loope
mov
cltd
outsl
add
fwait
jne
lcall
push
pop
add
mov
add
mov
mov
and
xor
adc
pop
repz
xor
outsb
sahf
xor
scas
iret
push
and
lods
mov
sub
adc
popf
popf
push
fcom
pop
mov
hlt
pop
mov
mov
xchg
loopne
xchg
dec
addr16
cmp
add
mov
xchg
jbe
push
xchg
nop
jne
pop
ret
lock
adc
mov
pop
jge
sbb
out
int3
mov
mov
imul
ljmp
shlb
xchg
pop
fsts
mov
xchg
mov
mov
xchg
movsb
mov
ror
imul
and
cmpsl
imul
cmp
lock
subl
add
flds
mov
and
stos
adcb
mov
add
subb
loop
sbb
out
movsl
fisttpll
fdivrl
inc
ret
mov
mov
cmpsb
adc
int3
clc
je
or
pop
or
pusha
frstor
fwait
mov
mov
mov
push
stos
add
fcmove
movb
and
rcrl
fxch
push
fadd
cmp
push
loopne
sbb
mov
lahf
clc
sbb
std
sti
push
sbb
cmp
aas
inc
cltd
shll
add
or
cmp
cltd
pop
jb
fwait
jle
mov
mov
mov
outsb
jge
add
jne
lahf
mov
sbb
inc
es
sub
adc
mov
mov
cmpsl
js
add
mov
fldcw
cmp
lcall
lret
test
push
pop
shrb
mov
mov
cmp
mov
repnz
xor
cwtl
add
les
test
or
cmpsl
inc
ror
lods
lret
mov
cltd
adc
imul
js
add
or
mov
sarb
scas
stc
cmp
jno
sbb
dec
xchg
mov
lcall
xchg
das
jae
shll
cmp
iret
int3
mov
xlat
mov
loope
mov
insl
push
push
imul
gs
mov
das
lret
jecxz
hlt
ljmp
cmp
fisubrl
mov
add
test
mov
mov
addr16
int
add
or
add
jmp
mov
push
or
inc
jmp
pop
lret
mov
add
roll
stos
sbbb
mov
mov
cmp
les
gs
mov
inc
shll
rorb
add
ret
popa
loopne
rcr
and
mov
add
mov
fidivrl
sbb
mov
test
sarb
sbb
xlat
pop
jbe
or
sbb
faddl
jecxz
xor
add
push
xor
jae
or
adc
sti
ud0
nop
fsts
adc
shll
add
and
pop
pop
xor
jns
clc
xor
repz
das
outsb
out
mov
loop
rol
fildll
in
or
lahf
movsl
ror
test
add
push
cmpsl
in
mov
cmp
scas
lods
shlb
call
cmp
add
shll
add
fwait
repz
jnp
lds
mov
test
lods
push
mov
dec
jmp
push
jle
pop
sub
jle
aas
lret
cwtl
mov
mov
mov
dec
and
hlt
fcmovu
mov
mov
iret
insb
pop
mov
mov
or
adc
loop
sub
add
mov
dec
and
cwtl
leave
jp
pop
cmp
lods
mov
xchg
fnsave
cmp
fisttpl
cli
stc
sub
add
stc
cmp
out
pop
pop
repnz
lods
push
jge
imul
jle
out
sub
sar
je
sub
mov
xchg
mov
fs
add
xor
sbb
mov
and
or
adc
rolb
adc
orb
icebp
pop
add
into
sbb
mov
cmpb
jg
addr16
push
sub
add
stos
int3
mov
sbb
lds
gs
aad
mov
pop
dec
ret
popl
push
sbb
mov
sar
adcb
sbbl
sub
pop
pop
repnz
push
loop,pn
addr16
arpl
adc
lock
notb
std
cmp
or
mov
out
fwait
sbb
sbb
sub
xor
hlt
xchg
insb
mov
push
fsubrl
jbe
rorl
mov
outsb
lret
aad
and
xor
sbb
and
mov
xchg
mov
mov
movsl
call
sahf
enter
xchg
adc
sub
test
shll
stos
das
push
pop
testb
jbe
xchg
negl
fisubrl
dec
jmp
and
mov
pop
in
int3
mov
mov
divl
xchg
stos
fwait
lods
pop
mov
xchg
call
pop
xchg
push
mov
mov
int
cmp
fsubrs
incb
pop
mov
dec
fistpl
mov
or
shrl
lods
pop
call
add
shr
jno
or
cmp
in
jnp
and
lds
jno
data16
jle
leave
add
xor
std
or
adc
and
inc
call
cltd
xchg
mov
adc
int3
mov
test
ja
out
out
mov
int3
fbld
lret
push
mov
leave
pop
inc
push
add
fcoml
sbb
loope
cmpl
xor
in
ficomps
cwtl
xchg
fcompl
pop
push
lret
add
jmp
cmp
jnp
test
jb
pop
lock
jae
pop
xchg
cmc
xor
pop
icebp
call
pop
cld
and
cmp
ljmp
and
xor
add
xchg
mov
xor
repz
sbb
cltd
movsl
pop
out
sbb
and
pop
jmp
int3
xor
inc
jno
mov
inc
outsb
imul
jb
jo
arpl
js
clc
dec
inc
cmp
inc
inc
cmp
idivb
mov
int3
mov
mov
mov
das
out
mov
ret
cmp
push
and
movsl
repz
rol
mov
sub
rol
mov
mov
shl
scas
sbb
cmp
movsl
cltd
mov
sub
xchg
xor
imull
test
aad
and
adc
mov
loopne
enter
out
in
add
or
adc
and
inc
mov
lcall
cld
add
or
std
lock
mov
push
mov
sarl
push
out
ljmp
shl
push
fildl
test
jecxz
rorb
roll
add
inc
wbinvd
in
out
filds
je
and
mov
inc
loope
adc
push
aad
add
out
call
mov
mov
xor
imul
or
jg
inc
clc
in
jnp
ljmp
cmp
mov
add
jb
sub
add
fwait
xor
sub
xor
ss
xchg
adcl
mov
jns
and
mov
add
fcmovnbe
enter
add
cs
jno
add
jle
test
cmp
cmp
push
xor
cmp
and
pop
and
jo
divl
mov
mov
jmp
mov
subb
jge
jb
mov
cld
scas
mov
dec
sahf
fcomps
dec
mov
xchg
mov
push
xchg
lods
pop
shl
pop
push
popf
add
pop
popf
sbb
xchg
imul
mov
jmp
loop
jmp
dec
addr16
mov
push
mov
outsl
xchg
cmpsl
fcmovnbe
cld
mov
loop
mov
imul
mov
shlb
sbb
xchg
sbb
and
mov
filds
aad
rorb
loopne
fsubl
aam
ljmp
loop
repnz
pushf
sub
jp
in
daa
arpl
mov
sbb
jae
loope
les
aaa
lock
out
jmp
pop
ljmp
fldenv
call
sbb
enter
cmp
mov
in
aas
xchg
dec
popf
andl
mov
mov
in
loop
cmp
jmp
repnz
cmpsb
mov
hlt
je
icebp
mov
jae
cli
jb
and
jno
or
xchg
cmp
mov
or
cmp
ss
fwait
inc
xchg
mov
stc
dec
fildll
cs
mov
jge
inc
pushf
sub
adc
pop
and
and
loop
jno
mov
add
sbb
jne
cltd
or
dec
sahf
and
jp
add
mov
popf
mov
mov
pop
sbb
mov
mov
inc
loope
data16
mov
dec
mov
cmc
clc
inc
jmp
sahf
mov
ljmp
in
add
xlat
loop
in
add
lods
and
pop
das
int
sub
imul
pop
mov
mov
jns
xorl
mov
jae
jge
out
jne
and
sbb
push
subl
xchg
or
test
in
jno
or
or
out
out
out
movsb
add
fsubrp
jbe
mov
push
adc
xor
sbb
out
pop
xor
fists
cmpsl
lahf
sahf
jno
inc
jmp
call
out
ljmp
hlt
jg
jae
jle
jae
cmp
jl
testb
cmp
decl
jns
cld
jae
pop
sbb
sbb
pushf
mov
push
js
fisubrs
ss
mov
rcr
cmp
mov
out
int3
sbb
pop
or
aas
repz
mov
cmc
stos
mov
dec
mov
stos
imul
dec
sbb
xchg
add
inc
enter
or
jg
inc
shll
repnz
addl
sbb
cmp
mov
add
test
inc
add
pop
mov
movsb
divl
cmp
pop
cmpsb
xor
add
sub
jg
mov
sub
movsl
stc
mov
in
pop
call
movsb
pop
mov
test
xchg
add
mov
iret
pushf
dec
mov
dec
jne
mov
lock
jb
sar
cmp
repnz
pop
mov
scas
sub
inc
add
jmp
imul
outsb
aad
mov
cmp
jnp
jb
add
and
faddl
icebp
xlat
les
enter
fadd
imul
divb
icebp
xor
jecxz
lock
jae
outsb
out
shrb
lock
or
hlt
hlt
jmp
mov
mov
add
test
inc
sub
in
addr16
in
inc
push
movsb
add
cmc
xchg
xchg
cli
jl
aas
std
andl
icebp
enter
data16
sti
sub
adc
inc
int
dec
or
inc
aas
push
rol
imul
dec
xor
lock
fldl
aam
push
or
lret
mov
add
mov
imul
push
rcl
pop
jne
test
and
stos
into
call
add
mov
rorl
repz
jne
and
dec
out
inc
rcrb
cli
iret
out
mov
fs
xor
sbb
mov
mov
cli
aas
test
mov
loop
test
pushf
jb
loope
and
test
lods
and
fistps
gs
dec
imull
roll
sub
push
add
push
jge
imul
jg
mov
jae
sahf
mov
xchg
lods
movsl
mov
sub
movsl
scas
int
push
ljmp
scas
stc
dec
jmp
jae
add
push
pop
imul
inc
ffreep
mov
mov
addr16
cmpsb
in
loope
das
fbld
mov
mov
mov
mov
xchg
movsl
mov
mov
mov
mov
mov
ret
clc
mov
pushf
incb
mov
incl
and
popf
std
or
xchg
inc
mov
mov
mov
mov
leave
sbb
fcom
outsb
cli
lahf
cli
mov
sbbb
mov
adc
iret
mov
jne
test
ss
test
mov
mov
call
lea
mov
pop
bound
mov
dec
jne
lods
cmp
je
rcl
dec
inc
xchg
push
stos
push
jns
pop
lret
arpl
mov
add
fs
jae
cld
dec
fadd
shrl
inc
stos
outsb
mov
xchg
mov
pop
repnz
cmc
cltd
es
sahf
pop
imul
mov
mov
jle
mov
mov
add
adc
add
ljmp
dec
jge
arpl
mov
xlat
jns
lsl
and
sti
sub
mov
and
out
lret
fsts
lods
jae
aad
add
arpl
mov
jne
fadds
test
inc
lods
sub
sbb
loope
jmp
adcb
add
popf
add
adc
in
cmpb
int
xchg
mov
mov
call
nop
inc
popl
mov
push
adc
jmp
push
or
mov
cmp
movsb
and
std
and
cld
mov
std
movsl
add
add
mov
cld
jmp
add
and
push
arpl
movsb
cmp
adc
pop
dec
outsl
mov
push
xchg
push
fmull
inc
cld
js
mov
sub
xchg
adc
xchg
das
add
cld
insb
ficoml
mov
movsl
jle
push
ret
mov
add
dec
mov
jle
jo
decl
test
adc
sti
sti
xorl
cmp
and
cmp
sub
inc
cmp
mov
dec
add
insl
roll
cmp
sub
nop
cmp
cmp
dec
and
out
call
adc
rcrb
jg
add
dec
or
ds
adc
stos
jmp
sub
xor
push
adc
test
or
adc
and
mov
loopne
cmpsl
sbb
lcall
jmp
call
lea
mov
imul
add
insl
or
seto
das
lahf
rorl
pusha
stc
sbb
rcrb
xlat
inc
pushf
jmp
aam
jge
push
lahf
push
pushf
push
adc
insl
or
sbb
fidivl
cmpsl
fst
sbb
aam
inc
stos
inc
pushf
mov
adc
pop
aas
inc
xor
outsl
pushf
aad
test
or
xor
aam
mov
jge
mov
add
das
add
ret
ss
mov
inc
jg
push
xor
or
mov
dec
ss
add
or
push
push
sub
xor
dec
inc
mov
test
pop
xor
fs
mov
lcall
and
mov
and
test
push
push
cmp
and
and
cmp
sbb
ss
andb
sbb
xchg
push
insb
push
je
insl
adc
push
adc
movsl
xor
sub
jl
and
adc
sub
movsb
xchg
data16
and
sub
or
pusha
push
or
adc
mov
nop
mov
rclb
xor
or
xchg
nop
cmp
cli
inc
or
adc
push
dec
or
adc
rorb
cmp
hlt
aam
or
push
xor
scas
inc
and
dec
add
je
nop
or
dec
inc
push
or
or
inc
pop
xchg
sub
inc
or
fs
pop
dec
or
cmpsb
js
pop
shlb
mov
fisubrs
popf
stos
and
roll
mov
jbe
add
sbb
add
push
movsb
lods
cwtl
mov
dec
push
test
add
inc
ljmp
enter
and
inc
add
add
sbb
nop
add
and
mov
scas
mov
lret
mov
mov
cwtl
lea
int
add
sub
pop
dec
call
dec
mov
sub
inc
add
cld
or
add
imul
or
sbb
fldt
pop
add
call
test
rol
or
lods
out
enter
xor
push
inc
or
adcl
xchg
adc
and
sbb
push
add
or
adc
mov
and
clc
icebp
aas
aam
in
in
out
lods
lods
scas
mov
andb
add
jno
pop
xor
inc
inc
inc
ret
sbb
add
pop
pop
pop
inc
aas
xchg
mov
or
scas
outsb
popl
andb
push
jno
sbb
and
mov
add
or
and
dec
add
sbb
inc
sbb
jnp
mov
add
sbb
adc
inc
add
jge
subb
xor
es
test
and
sbb
xor
xor
int3
mov
pushf
lcall
cld
shll
icebp
and
addl
dec
cwtl
cltd
lea
dec
add
adc
jno
xor
xchg
ss
or
adc
and
loopne
test
shlb
dec
clc
sbb
jmp
adc
pop
add
in
mov
mov
mov
add
mov
stos
bound
jno
cmp
mov
stos
in
push
or
push
push
push
dec
dec
loop
cs
xchg
mov
jle
jl
mov
mov
cmp
fstl
pop
out
ficompl
cmp
cmp
scas
outsb
cmp
sbb
pop
inc
inc
inc
dec
fildl
push
popa
inc
jno
movsb
add
jae
pusha
cmp
bound
jo
insl
je
push
mov
pop
or
fwait
dec
cs
push
inc
pop
dec
dec
dec
sbb
ss
aas
mov
test
mov
cmp
xor
xor
add
fdivs
jg
mov
cld
lahf
mov
adcl
adcb
and
jle
mov
pop
push
add
adc
fwait
sbbl
push
add
idiv
clc
aaa
repnz
imull
adc
cli
repnz
cmp
cld
jmp
sbb
cld
mul
enter
std
cli
cmp
jmp
out
pop
test
jle
out
xor
push
imul
stos
lods
div
jnp
in
jno
mov
je
push
mov
lock
xchg
push
jbe
pop
mov
sub
test
ja
mov
push
imul
cmpsl
pop
cltd
jno
push
cmp
sub
es
int
cmp
and
push
sbb
andl
xor
or
jne
mov
test
pop
jg
pop
lods
arpl
mov
imul
adc
mov
les
push
sbb
or
pop
push
push
stos
mov
dec
push
mov
mov
cmp
insl
pop
sub
push
insb
test
daa
cmpl
mov
jp
push
mov
fs
add
mov
or
dec
dec
mov
push
push
and
addb
adc
fisttpll
lea
add
push
xor
add
pop
or
and
aaa
push
aam
pop
in
repnz
dec
imul
add
add
rorl
jne
lea
rolb
add
test
jmp
push
out
cmp
test
cltd
sbb
dec
or
add
jecxz
lret
ja
mov
and
cmc
jecxz
ss
shll
int3
scas
pop
sbb
lock
push
lret
add
dec
xor
push
jle
push
ss
lock
mov
mov
adc
ljmp
xor
sbb
je
adc
rcr
adc
sub
pop
xor
pop
jmp
sbb
jecxz
aam
lods
pop
out
jecxz
daa
fidivl
pop
js
sahf
int3
lods
subb
clc
leave
in
xor
fisubl
cmp
adc
push
cmp
dec
push
test
push
mov
out
and
test
test
lods
rclb
test
mov
sub
adc
mov
mov
add
or
loope
add
pop
or
mov
inc
lea
pushf
add
inc
nop
mov
jae
and
inc
push
add
push
push
loopne
sub
jge
filds
loopne
mov
inc
cli
add
jno
add
aad
into
jg
in
int
iret
add
jae
mov
ja
ljmp
ficompl
movsl
loop
xchg
fisubs
mov
xchg
cmpsl
adc
pop
add
js
in
repz
cmc
or
frstor
mov
xchg
insl
cmpsb
xor
out
roll
dec
movsl
ret
add
call
rcll
dec
ljmp
adc
and
inc
add
sbb
dec
add
gs
push
sub
or
loope
cmp
fisttpl
xchg
insl
pop
and
mov
or
adc
pop
adc
je
sub
pop
pop
test
fimull
inc
lds
adc
adc
mov
pop
mov
cltd
xchg
adc
loop
jno
movsb
add
sbb
cmp
popf
mov
add
aas
or
push
push
adc
or
inc
test
insb
xlat
into
imul
push
sbb
adc
lmsw
jg,pt
adc
xor
pop
fiaddl
popf
push
jo
jecxz
lahf
std
ret
jno
mov
clc
in
arpl
jge
cmp
push
fisubs
insl
roll
xchg
frstor
bound
lods
sti
sub
sbb
sbb
fwait
jo
mov
xchg
gs
mov
outsl
shrl
sbb
rcrb
mov
add
mov
jecxz
add
push
fsubs
ror
sbb
adc
jecxz
push
or
push
pop
inc
inc
lret
js
pop
mov
mov
mov
sub
lret
sub
mov
fxch
push
stc
mov
movsb
das
fwait
clc
inc
sbb
imul
xchg
mov
imul
cmp
roll
nop
dec
adc
ja
xor
push
cwtl
push
xchg
push
je
lret
cmpsl
push
int
mov
sbb
arpl
mov
mov
andl
add
jo
stc
pop
insl
push
movsb
push
add
and
xor
add
pop
int3
scas
or
push
orl
jecxz
mov
insb
rolb
frstor
dec
hlt
rcr
icebp
fistpl
cs
repnz
cmc
or
ljmp
jbe
jo
aad
xchg
mov
js
mov
pop
test
arpl
sbb
outsb
sbb
sbb
scas
mov
add
add
int
inc
dec
ret
or
pushf
mov
stos
jecxz
dec
pop
adc
test
xchg
ret
icebp
subl
fstl
roll
les
repz
dec
ss
pop
sahf
xchg
pushf
sahf
jle
add
nop
dec
pop
xchg
rolb
sub
and
jbe
mov
cli
push
lods
cltd
sbb
aam
rcl
push
sub
add
mov
inc
or
adc
lods
inc
mov
lldt
dec
sahf
lds
jmp
iret
mov
add
aas
fiaddl
sbb
adc
mov
outsb
fmuls
fs
jne
loopne
cwtl
fisttps
stos
fpatan
loopne
in
xchg
or
cmp
shr
shr
adc
movsl
jecxz
xchg
add
in
mov
xchg
subl
pop
loopne
mov
mov
push
or
adc
aam
gs
into
les
xchg
and
pop
sahf
xchg
iret
jnp
jp
adc
sub
stc
inc
daa
mov
pop
xchg
loop
clc
into
mov
loop
arpl
mov
pop
and
daa
mov
jle
jns
xchg
gs
in
in
addl
rorl
lahf
push
aad
mov
adc
insl
mov
push
scas
push
dec
rorb
push
pop
mov
fdivrs
enter
or
push
adc
add
jne
add
pop
cmp
test
sbb
pop
daa
push
std
pop
add
or
loopne
hlt
in
lret
mov
sti
mov
stc
mov
sbb
adc
and
add
fisttps
push
push
xadd
scas
xchg
dec
movsb
push
add
sub
fcmovnu
lret
xchg
mov
mov
or
arpl
cmp
jb
negb
sub
xchg
mov
dec
lret
add
aaa
lret
mov
push
dec
xchg
push
test
push
sahf
sub
mov
scas
faddl
jecxz
lea
test
add
mov
jb
aad
xor
add
add
adc
dec
lahf
ret
mov
iret
mov
iret
jg
pop
int
jmp
push
test
int
add
sarl
inc
add
cmp
mov
jmp
out
shrb
scas
insl
iret
or
lds
pusha
in
jne
mov
mov
sub
or
fsubl
or
adc
popa
pop
dec
fisubs
sub
sbb
fstpt
call
negb
or
fidivl
add
pushf
or
ret
dec
daa
inc
nop
je
adc
add
xor
test
add
inc
movlhps
ljmp
adc
nop
add
mov
lahf
inc
xor
pop
sub
adc
adc
inc
sbb
lcall
fisttpll
popf
push
fisubrs
add
jp
lea
xor
pop
inc
pop
fs
xchg
inc
aad
stos
cltd
pop
push
dec
and
add
negb
clc
or
pop
dec
ret
imul
js
push
movsl
aad
push
sub
add
or
xchg
mov
mov
lods
gs
bound
pop
loope
pop
bound
loopne
stos
gs
xchg
je
test
rcrl
aas
aaa
adc
test
movsb
mov
xor
push
mov
pop
movl
fstp
leave
xchg
insl
add
pop
jl
pop
adc
call
clc
push
pop
imul
add
and
out
in
imul
in
imul
sub
fists
push
cmp
test
lahf
aas
aaa
xor
pop
andb
fs
cmp
inc
xchg
mov
insb
xlat
mov
std
push
cmp
push
stos
repz
movsb
icebp
dec
add
sti
mov
cmp
add
dec
insl
push
jge
xchg
adc
pop
inc
ds
push
sbb
popl
add
sbb
out
and
aad
rcl
jl
hlt
cmp
imulb
cmp
add
scas
int3
clc
movsl
js
cli
stos
lret
into
and
std
outsb
aaa
add
lods
lret
imulb
out
fisttpll
idiv
out
shl
test
push
mov
cli
adc
cmc
cmp
xchg
jns
ja
cli
bnd
sbb
sub
scas
xlat
and
pop
pop
xor
icebp
xchg
sub
inc
shlb
sub
clc
test
and
inc
nop/reserved
xor
adc
js
mov
xchg
ret
fsubs
inc
in
lret
add
dec
add
int
lods
add
fildll
pop
adc
inc
or
call
lds
mov
movsl
mov
jecxz
push
add
in
out
out
lret
arpl
adc
add
push
cmc
mov
xorb
jne
add
push
sub
andb
shl
mov
or
push
lods
cmc
pop
iret
imulb
push
mov
cmp
add
movsl
call
mov
or
push
xchg
xchg
cltd
mov
add
add
jp
pop
lock
jo
add
push
pop
jmp
add
repz
adc
rorb
push
mov
adc
call
std
xchg
add
in
cld
or
rorb
mov
gs
popa
mov
leave
imul
mov
push
out
sbb
pop
les
test
imul
clc
xlat
pop
pop
lds
lods
jns
sub
enter
xchg
leave
out
in
adc
in
mov
pop
andl
add
cmp
sbb
in
cmpsl
mov
adc
sbb
int3
lahf
inc
loopne
pushf
movsl
jmp
cmp
add
mov
dec
jae
fcom
shrl
dec
xcrypt-cbc
cmpsl
adc
add
jl
out
mov
pushf
fsubrl
mov
cmp
xchg
and
and
call
xorb
sub
pop
add
dec
mov
adc
add
xchg
push
icebp
and
push
xchg
sarl
or
pusha
jmp
push
aad
popf
lds
mov
mov
add
out
add
push
xchg
mov
cmp
dec
or
adc
sbb
inc
or
push
dec
stos
adc
into
imul
pop
mov
arpl
dec
fwait
jbe
adc
mov
xchg
mov
cltd
ljmp
jmp
aam
mov
shlb
mov
inc
add
mov
xchg
aas
add
hlt
dec
nop
repnz
ret
repz
pop
add
mov
ret
cmp
sbb
lods
pop
xor
mov
andb
cmpsl
pusha
daa
push
aaa
xchg
or
adc
mov
lock
xor
mov
mov
hlt
jg
out
int3
clc
mov
inc
sub
in
std
or
or
repz
cld
inc
std
loope
frstor
adc
out
lods
dec
cmp
adc
in
mov
lea
lcall
cmp
inc
stc
fidivrs
mov
xor
out
sbb
push
into
jb
nop
push
push
inc
xchg
movsl
bound
mov
out
int
xor
jns
sbb
cmpsl
js
fdivr
cmp
cmc
mov
push
or
push
shr
out
test
adc
ss
or
xchg
mov
mov
int
iret
mov
ss
imull
les
int3
lret
lds
sub
and
xor
sub
or
sub
testb
sbb
adc
out
lock
mov
js
jnp
pusha
cmpsb
ljmp
lods
lcall
andb
push
xchg
loopne
pop
push
mov
and
rcl
mov
xor
mov
cmp
xchg
inc
mov
repz
sti
dec
fiadds
dec
out
aaa
popf
repnz
lods
ror
scas
cmc
dec
and
lahf
repnz
add
imul
adc
add
pop
xchg
icebp
getsec
pop
jmp
repz
data16
pop
ret
lds
ret
jae
dec
push
cmc
mov
insl
xor
cmc
imul
xor
sub
pusha
lcall
insl
dec
add
xor
inc
aas
or
pop
into
mov
imul
in
mov
inc
lock
pop
icebp
les
in
mov
repz
inc
add
daa
sbb
inc
pop
cltd
enter
les
mov
inc
test
outsl
fldcw
cmp
lods
cmp
imul
aam
daa
bound
jb
add
rolb
mov
pusha
lcall
js
pop
movsb
call
add
adc
push
scas
fistl
and
add
sub
repz
jo
pop
or
aam
pop
xor
jno
pusha
outsb
or
loope
decl
std
adc
call
repnz
popa
push
xchg
lock
jmp
loope
btcl
aaa
sub
adc
dec
jl
mov
mov
fimuls
aaa
cltd
dec
cmp
sub
mov
sub
cmp
hlt
insl
aas
mov
arpl
daa
push
rcll
xchg
das
mov
iret
mov
arpl
add
mov
pop
mov
push
and
sahf
xchg
mov
xchg
jp
adc
inc
add
add
push
dec
xor
lds
jb
sbb
xlat
mov
xchg
mov
add
pop
push
imulb
fsubr
xchg
dec
test
mov
in
lods
test
mov
js
test
jge
and
and
and
add
jle
or
xor
mov
xchg
push
mov
cmc
out
mov
lcall
add
sbb
movb
sarl
addr16
lock
cwtl
icebp
add
arpl
ds
jmp
loop
prefetch
in
std
push
xor
mov
lods
imul
dec
mov
shlb
lcall
mov
popf
and
jae
add
test
fdivs
dec
rcrl
fimull
xchg
insl
dec
mov
and
push
popf
adc
jmp
cmp
xchg
dec
fsts
dec
pusha
cmp
test
scas
pop
les
dec
add
jle
xor
sub
js
out
mov
pushf
jmp
inc
xor
mov
jp
and
sarl
sarl
add
xor
enter
leave
sbb
ret
dec
subl
in
jbe
sbb
add
push
xchg
jle
push
mov
test
test
mov
dec
push
add
add
bound
ret
icebp
js
add
repz
xchg
or
inc
sbb
add
sub
imul
mov
xlat
add
sbb
addr16
pop
pop
jmp
stc
pop
and
outsb
dec
mov
add
outsb
in
fdiv
cld
ret
cmp
and
pop
push
add
xor
xor
rcll
movsl
je
cmp
test
daa
popa
cmpsl
xor
xchg
push
cmpl
cmpsl
and
dec
test
fisubrl
jbe
sarb
enter
daa
xor
mov
jp
cwtl
mov
mov
cltd
lea
pop
and
cmc
push
mov
mov
jge
adc
imul
fcoms
in
gs
or
movsl
dec
inc
xor
cmpsl
or
jl
and
lods
push
fidivl
sub
mov
aaa
cmp
aaa
inc
xor
dec
pop
xor
adc
inc
mov
xor
imul
push
cmp
lcall
mov
dec
sub
xor
sahf
fisubrs
pop
and
push
popl
sub
outsb
ljmp
mov
fbld
lcall
jmp
cs
jo
add
or
lahf
call
or
jo
jb
cld
jecxz
inc
decb
inc
add
ljmp
andb
in
sbb
popl
and
pop
cltd
icebp
fsubrp
mov
ret
jecxz
enter
mov
xchg
leave
fdivr
pop
xor
int3
pop
sbb
add
in
adc
or
mov
insl
js
or
add
dec
stc
mov
mov
int
sub
inc
stos
arpl
mov
inc
sbb
push
inc
jp
lods
sub
mov
push
dec
dec
lcall
sub
xlat
dec
mov
roll
and
ficoml
mov
pop
push
lahf
inc
mov
int
jno
sbb
shr
not
test
pop
mov
test
ljmp
mov
loope
ftst
lods
mov
es
test
mov
sub
pop
dec
jns
test
imul
imul
push
jl
sub
cmpsl
bound
xchg
sarl
dec
and
add
push
push
push
ja
out
andb
jnp
push
inc
xchg
shll
xchg
mov
inc
pop
enter
rorb
adc
mov
push
inc
cmp
xchg
push
js
pop
pusha
mov
add
cmp
stc
bound
push
out
fistl
add
lret
cmc
inc
and
lahf
pop
xor
and
jecxz
cmp
loopne
repnz
mov
jge
lods
adc
jb
mov
sbb
push
sbb
pop
dec
js
cmp
mov
dec
jge
in
mov
jl
mov
sarb
lods
imul
inc
mov
mov
mov
enter
mov
pop
popf
pop
lock
hlt
xchg
lds
ficompl
les
mov
pop
xor
repz
add
sbb
xchg
mov
and
inc
lods
dec
mov
pushf
fbld
inc
pusha
cld
bound
movsl
clc
fidivl
jge
xchg
icebp
xchg
fnstenv
pop
cli
push
testl
vcmppd
subl
and
sbb
inc
adc
arpl
sub
pop
int
imul
lcall
je
mov
lar
inc
aaa
mov
popf
fimuls
scas
mov
lcall
ret
xchg
sub
push
enter
cmc
clc
je
aas
jle
ja
mov
mov
js
ss
cmp
aas
and
call
mov
push
cmp
fisubl
mov
xor
gs
mul
imul
mov
cmp
cmp
or
imul
ja
cmp
je
je
dec
test
scas
cmp
sbb
orb
lock
leave
shl
in
and
pop
pop
mov
mov
imul
mov
rorl
sbb
adc
lods
test
mov
je
sahf
andl
inc
jp
pop
clc
dec
sahf
cmpsb
movsl
mov
push
dec
mov
mov
adc
xchg
mov
adc
lds
xor
test
mov
pop
mov
shlb
adc
cmp
adc
inc
popf
add
ud2
or
or
shlb
jecxz
cli
fnsetpm(287
mov
imul
xchg
or
push
mov
ss
dec
lahf
aam
mov
mov
or
cmpsb
add
out
cmc
test
add
mov
jns
mov
ljmp
loop
jno
mov
out
xor
xchg
inc
xchg
mov
test
sahf
or
xlat
mov
sub
pop
mov
lock
fisubrl
dec
cmp
out
roll
cltd
fs
mov
xor
clc
outsl
shrb
sub
mull
negl
gs
daa
lcall
sbb
jle
inc
adc
xor
jmp
and
dec
push
jne
lods
lcall
xor
flds
inc
or
push
add
cmpsl
jmp
ljmp
mov
fs
add
push
cmpsl
call
pop
jns
cmpsl
jge
sahf
insb
mov
andl
mov
sub
cmpsl
inc
out
add
pop
int3
jae
mov
addr16
pop
and
mov
dec
and
test
rolb
insb
cmp
push
loopne
mov
in
popf
or
stc
mov
dec
cmp
mov
dec
aaa
push
in
cs
sbb
out
lret
mov
jmp
xlat
inc
adc
stc
add
lcall
out
mov
dec
adc
imul
jp
sub
pop
cmpsb
or
jne
bound
jae
add
cli
pop
mov
add
push
add
sub
fisubrl
mov
lcall
add
inc
xchg
ret
sub
nop
mov
jecxz
mov
iret
mov
sbb
add
jp
psubq
loope
sar
cmc
lret
ja
in
lds
aam
ss
test
in
js
xchg
int
rclb
xor
sahf
sub
xlat
cld
mov
jp
adc
mov
xchg
push
icebp
push
cmp
pop
repz
dec
call
enter
xor
ret
mov
xchg
xor
call
fwait
xlat
sub
sub
subb
xor
jns
cwtl
sub
bound
jbe
imul
xor
push
clc
fwait
mov
les
xor
stos
int3
mov
pop
push
jmp
adc
lahf
js
popf
jno
inc
inc
sub
cmc
xchg
mov
jp
insl
ret
ljmp
sahf
cld
and
add
ret
stos
pop
sub
loop
jl
test
push
jne
cmpsl
pop
in
push
pop
mov
outsl
popf
jbe
pop
addr16
mov
mov
loopne
fisubrs
jecxz
mov
imul
cld
jmp
jo
mov
out
subb
test
in
scas
sbb
mov
or
sub
or
pop
fldl
divl
pop
repnz
jle
test
jns
je
test
add
cld
insl
adc
ret
mov
push
xchg
push
rcrl
int
gs
cmc
lods
sub
int
data16
imul
imul
mov
ds
adc
pop
mov
xlat
push
pop
sub
jbe
adc
std
mov
inc
lahf
mov
icebp
dec
sub
and
mov
adc
out
sub
pop
lret
lds
and
insl
sub
arpl
inc
inc
js
popf
mov
stc
xchg
or
mov
mov
jb
mov
mov
ds
sbb
jecxz
add
jo
jl
mov
das
movb
stos
mov
lods
xchg
jecxz
cwtl
loop
mov
in
sahf
fldcw
popa
adc
or
cmpsb
xchg
loopne
mov
adc
shl
std
xor
es
cwtl
mov
enter
sub
ret
loopne
int
pop
sti
cmp
negb
arpl
push
ljmp
repnz
movsb
or
imull
inc
inc
dec
mov
shrb
stc
adc
push
sub
aad
mov
sbb
loopne
lcall
jnp
jb
cmpsl
pop
pop
imul
and
jp
outsb
and
xor
add
push
mov
push
xchg
aas
xor
or
iret
pop
mov
push
jp
mov
mov
icebp
int3
jnp
fistl
or
fistps
loopne
jns
movsl
inc
dec
lds
std
movsb
add
stc
cmpsl
sbb
push
xor
scas
jmp
dec
push
xor
xchg
int
sub
jge
nop
add
adc
fwait
outsl
mov
ret
pop
cmpsb
mov
xchg
jnp
cmpsl
xchg
mov
xorb
adc
jns
lcall
add
out
insb
lret
sbb
sti
stc
mov
mov
or
jb
jl
and
push
mov
movsl
xchg
fimull
outsb
int3
jae
ja
cmc
xor
out
out
xor
mov
repnz
in
out
loopne
std
decb
mov
xchg
lock
jb
mov
dec
mov
je
imul
out
xchg
js
mov
scas
ss
cmp
mov
push
imul
gs
xor
in
add
pop
and
lret
mov
push
xchg
jp
xchg
cld
push
cmc
cs
fwait
lahf
imul
push
push
or
push
xor
js
mov
loop
int3
mov
mov
pop
aam
pop
mov
add
outsl
mov
aaa
gs
jns
push
inc
jae
inc
sub
sar
jp
inc
stc
xchg
adc
sub
daa
mov
repnz
jne
and
and
sbb
pop
adc
das
pop
dec
mov
pop
adc
jle
inc
and
fstpl
add
shll
mov
popf
les
cmp
or
dec
int3
es
cmp
sub
and
in
inc
and
xchg
mov
xchg
add
mov
leave
fstl
imul
jp
repz
jmp
pop
repz
out
add
arpl
mov
add
jo
aaa
and
mov
stc
xor
pop
push
mov
dec
mov
cld
mov
lock
loopne
sti
inc
xchg
jle
add
repz
xchg
cli
inc
push
mov
push
rcl
dec
pop
call
lahf
jns
dec
hlt
sub
xchg
jne
sub
dec
cmp
scas
pop
jecxz
imul
cmp
inc
mov
cmpsb
xchg
test
lea
fistps
push
jo
xchg
loop
js
pushf
imull
cmpsl
lcall
stos
das
mov
add
pop
sub
xchg
stos
cmpsl
jae
sbb
lcall
pop
jns
leave
push
xor
aam
daa
fcoms
mov
cmpsb
mov
in
push
pop
pop
ret
and
cmpsl
int3
add
addl
insb
push
cwtl
xlat
test
ret
js
sub
pop
leave
sub
mov
push
inc
int
add
lods
loopne
mov
mov
xchg
mov
mov
rolb
mov
add
mov
adc
and
cmpsl
testl
push
nop
in
jo
hlt
add
jbe,pn
scas
adc
sub
add
mov
enter
mov
pushf
mov
std
cltd
in
scas
jo
shrl
mov
cmpsb
shrl
sarb
hlt
loope
icebp
push
cmc
subb
mov
jb
repz
mov
adc
out
scas
pop
mov
xor
mov
jp
mov
fwait
call
ret
push
inc
sbb
push
sub
pop
decl
add
imul
adcl
mov
inc
stc
sub
push
sbb
jnp
or
pop
dec
scas
xor
test
pop
mov
std
outsb
xchg
mov
stc
cs
movsl
imul
imul
jg
xchg
mov
sub
test
mov
jmp
loop
aaa
mov
sbb
add
pop
test
cmpsl
rep
das
or
mov
pushf
jne
or
fnstenv
pop
fwait
add
inc
push
fcmovu
jb
pusha
je
nop
mov
lahf
js
add
out
jg
adc
shl
mov
lret
cwtl
cmpb
icebp
add
mov
ds
xchg
add
outsb
in
mov
mov
int3
mov
xchg
ret
push
scas
mov
mov
je
repz
mov
sub
cmp
sar
mov
cmp
idiv
das
mov
int
das
lds
adcb
push
mov
xor
scas
add
sub
mov
imul
jnp
mov
inc
sbb
outsb
adc
sub
sub
daa
mov
or
call
push
and
mov
push
push
or
cmp
push
imul
push
js
adc
lock
or
push
add
add
and
jb
mov
clc
rol
xchg
loop
int3
xchg
sub
pop
jae
lods
int
sti
xchg
add
or
sub
andl
into
add
jge
mov
dec
clc
iret
cld
in
fadds
rcll
mov
fmuls
jle
insb
mov
mov
sub
adc
in
jl
push
stos
leave
adc
push
nop
loopne
ljmpw
sbb
inc
test
push
xor
ja
sub
mov
cmp
sub
mov
mov
mov
mov
add
pop
insl
xor
jnp
mov
xchg
dec
mov
aaa
fcomi
dec
and
pop
pop
test
jmp
xchg
pop
out
sahf
js
pop
and
sti
in
fcmovbe
xchg
pop
lods
cli
jnp
lret
aaa
mov
push
sbb
push
nop
or
xchg
inc
push
lock
sub
mov
mov
jo
call
hlt
in
sub
push
cmp
lods
adc
xor
loopne
lcall
inc
push
jl
mov
pop
push
sub
std
push
pop
or
mov
lahf
and
imul
and
test
and
aam
add
std
pop
inc
sub
mov
cmpsb
repz
je
add
lock
cld
xchg
mov
out
int3
ficomps
daa
mov
inc
push
lds
fbld
jge
cltd
shl
mov
mov
mov
mov
sahf
imul
pop
pop
sub
cmp
imul
imul
gs
lahf
cmc
pop
movsl
lds
int
lods
pop
ret
jne
out
sti
dec
pop
outsb
mov
outsb
dec
dec
cmp
cmp
cmp
adc
cli
pop
mov
test
repz
push
pop
xchg
icebp
xchg
sub
popf
shl
mov
or
xchg
shl
jne
xchg
sbbb
lock
inc
mov
push
xchg
insl
test
inc
xor
sub
lds
lds
mov
in
mov
js
mov
cmp
xchg
lods
aaa
movsb
and
mov
dec
int
cmp
pop
outsb
dec
test
sbb
cwtl
jl
pop
lds
lea
pop
push
cs
pop
dec
xlat
pop
mov
jnp
dec
push
xorl
jg
mov
adc
push
cld
adc
repnz
or
adc
mov
and
lcall
idivb
jg
add
sti
cld
pop
cmpsb
pop
push
fbld
mul
mov
xor
outsb
sub
bound
xchg
mov
rorb
dec
pop
movsl
loope
cmp
lret
int3
ret
mov
scas
fisttps
out
mov
cwtl
ret
cs
lds
mov
out
rcr
add
rclb
lcall
xlat
push
lods
pop
adc
cmp
mov
xor
add
mov
sub
xchg
and
aad
aad
sahf
pop
pop
das
cli
outsb
mov
lea
std
and
test
dec
shl
jmp
loopne
mov
jo
into
pop
enter
ror
les
lea
mov
pop
shrb
add
dec
mov
jmp
push
out
cmpsb
xor
pop
in
add
ffreep
in
dec
pop
cltd
aad
xchg
add
sub
and
inc
and
lret
or
pop
jne
mov
shll
mov
and
and
xchg
test
addb
test
pop
mov
aaa
add
dec
inc
aam
and
push
and
pop
mov
jns
or
or
daa
adc
xchg
daa
lods
sbb
push
stos
aam
add
roll
movsl
add
hlt
add
fldcw
add
int3
mov
hlt
aad
cs
movsl
lcall
mov
in
bound
ja
lods
mov
add
fmull
aam
add
ja
or
add
push
cmp
pop
or
push
push
xor
push
xor
jmp
mov
sbb
inc
das
ljmp
inc
jle
push
mov
xchg
pop
jbe
mov
rolb
pop
test
aam
add
or
inc
mov
cmp
pop
xorb
add
mov
push
add
pushf
pop
sbb
dec
and
xlat
insb
dec
add
test
and
inc
fstpl
xchg
lret
in
add
adc
or
sbb
inc
sub
or
dec
addb
mov
add
movsb
pop
enter
cmp
lds
xor
outsl
mov
in
mov
jae
mov
adc
adc
out
lods
add
push
add
adc
cmp
or
or
xor
fwait
add
iret
or
pop
pop
fsubs
aam
jge
jae
add
inc
mov
lea
or
enter
inc
mov
or
repz
or
imul
pop
add
das
sbb
or
and
inc
sub
pop
jnp
sbb
lods
add
add
add
add
bnd
adc
sbbl
pop
add
or
rclb
add
lods
mov
mov
add
or
add
or
mov
mov
jne
aam
jmp
pop
in
mov
movb
mov
xor
adc
test
in
dec
cmc
xchg
lret
in
sub
xchg
andb
add
out
sbb
push
dec
cs
clc
bound
popa
ds
mov
enter
out
and
inc
incl
cmp
push
or
lock
mov
orl
pop
push
sub
loop
lds
out
js
xor
pop
cmp
and
dec
xchg
nop
add
and
inc
sti
incl
inc
mov
add
push
test
test
mov
xchg
adc
lds
sub
mov
mov
or
adc
cmp
and
daa
pop
aas
dec
sbbl
js
or
mov
stos
push
mov
jnp
mov
add
sbb
cltd
hlt
popf
adc
imul
mov
pop
jp
cld
push
hlt
test
jmp
jne
and
test
mov
sahf
mov
add
sub
pop
cmp
and
dec
jnp
jbe
js
stc
add
mov
cmpsb
pop
mov
andl
addb
daa
sbb
and
mov
cmp
adc
cmp
imul
jnp
in
js
push
pop
mov
lods
jg
add
adc
sbb
das
add
cmp
pop
stos
add
add
add
out
jle
pop
lcall
jno
xchg
pop
mov
or
adc
push
cmpb
lds
xor
mov
in
adc
fbld
in
add
sbb
add
sub
dec
aaa
inc
arpl
lcall
mov
pop
mov
jae
xchg
mov
or
push
pop
inc
movsl
lds
dec
push
xor
in
jp
jecxz
sahf
lcall
push
xchg
cmpsl
lock
stc
sbb
push
add
pop
and
pop
jo
pop
js
jge
outsb
imul
xorb
push
lcall
enter
lahf
mov
lods
mov
iret
mov
add
xor
aas
imul
jb
xor
pmaxsw
mov
pop
mov
gs
bound
in
sar
add
addr16
push
add
ja
pop
add
std
inc
pop
jg
pop
inc
dec
jge
std
dec
pop
jg
adc
and
pushf
and
jno
dec
notl
xor
std
cli
lds
fildll
xor
cmpsb
movsl
pop
pop
push
scas
jl
jne
mov
mov
inc
ss
or
mov
mov
int
imul
mov
sub
nop
mov
and
mov
fwait
pop
stc
sub
stos
add
adc
mov
es
add
fisubrl
js
sub
mov
mov
movsb
jb
ja
xor
dec
or
pop
cmc
mov
mov
pop
push
and
sub
stos
fwait
pop
jle
pop
mov
sub
test
and
sbb
jmp
cli
std
lds
cli
cwtl
popl
leave
sub
mov
pop
xor
bound
xchg
sub
jne
mov
stos
rclb
inc
int
jmp
mov
xchg
insl
jp
mov
scas
xchg
scas
cmp
scas
ror
js
xchg
add
xchg
mov
fwait
insb
xchg
sub
jne
mov
outsl
sub
std
jp
mov
mov
lods
out
add
push
inc
add
sub
ja
lods
stos
mov
add
xchg
cltd
add
sub
std
jp
mov
pop
mov
sbb
std
lods
inc
lods
mov
negl
xchg
xchg
xchg
inc
push
shlb
lods
imul
mov
and
in
push
sti
fwait
mov
js
xor
mov
dec
sub
xchg
sub
jge
mov
js
stos
enter
xchg
aaa
sahf
js
xchg
add
mov
mull
lods
std
jp
test
hlt
stos
xor
mov
mov
sub
insl
pop
jnp
scas
mov
pop
stos
dec
mov
icebp
call
test
add
movsb
insl
jbe
xchg
mov
mov
daa
dec
std
addr16
mov
arpl
pop
mov
xor
imul
jmp
test
stos
xlat
out
xchg
sarl
je
dec
push
xor
js
mov
fbld
aad
aas
dec
leave
out
pop
xchg
leave
inc
scas
pop
jle
push
fistpl
mov
scas
out
cmc
xchg
pop
jb
mov
lods
outsl
lods
repnz
lods
lods
mov
js
push
add
lods
ret
in
lock
lcall
ljmp
aam
stos
sahf
js
xchg
cmp
jp
dec
pop
jle
add
sbb
add
pop
jge
xchg
dec
ja
rcrl
xor
pop
push
aam
push
dec
add
lcall
pop
dec
frstor
push
inc
adc
daa
lcall
jle
pop
out
inc
add
movsl
cli
mov
mov
in
sahf
in
dec
add
mov
adc
cmc
lret
mov
int
jmp
enter
int
pop
push
mov
add
lret
test
mov
mov
push
pop
or
insl
pop
cmp
mov
or
push
std
call
or
mov
call
fdivrl
pushf
aas
fdivrl
add
scas
pop
mov
and
in
sbb
fucomip
lret
push
rorl
into
lods
jo
rorl
ds
mov
add
or
dec
push
arpl
lcall
cwtl
dec
xor
negb
fildl
sbb
or
mov
shll
int
aam
lret
ficompl
jns
fcmove
into
mov
mov
repz
movsb
test
mov
loope
sub
movsl
lcall
ficoml
fwait
lret
pop
mov
adc
push
pushl
mov
adc
xor
test
pop
lret
nop
or
cmpsl
sti
xchg
mov
add
inc
add
add
leave
aaa
and
int
or
insl
cmc
mov
data16
jg
iret
scas
cmp
mov
xchg
mov
xor
and
sbb
test
leave
imul
or
dec
and
test
mov
lret
or
lahf
dec
mov
adc
orb
cltd
std
fidivs
push
add
or
lahf
mov
add
imul
push
bound
push
fldt
pop
jnp
and
in
xor
jmp
or
adc
xor
pop
mov
scas
add
imul
leave
mov
dec
xor
cmc
cmpsb
mov
lret
in
add
sub
outsl
int
add
dec
jb
repz
in
and
ds
dec
mov
mov
jg
adc
cmp
sub
out
mov
pop
lods
or
in
adc
add
add
dec
sub
mov
rorl
sub
jnp
rcl
add
das
jns
outsl
iret
repnz
xchg
cmpsl
imul
xchg
popf
cld
jnp
push
sub
add
add
sub
enter
mov
sahf
fwait
repnz
das
mov
xor
mov
in
push
imul
imul
iret
rorb
mov
pop
mov
or
mov
pop
lea
xor
mov
outsb
add
cs
dec
cmp
mov
int
data16
mov
out
pop
jg
mov
add
je
test
xchg
out
shrl
xchg
dec
mov
fisubrs
cltd
cld
int
mov
aam
pop
sub
mov
or
pop
mov
ficoml
adc
jns
lods
iret
push
xchg
cmp
add
ja
sti
stc
into
insl
add
jge
sub
movsb
pop
out
repz
flds
add
add
fnstsw
cmp
pop
mov
imul
or
or
lds
push
add
sub
dec
mov
mov
mov
mov
leave
out
cmp
lret
int
or
add
shrl
aam
inc
outsl
repz
xchg
out
rcrl
xchg
jnp
cli
imul
push
repnz
or
mov
add
pop
push
lret
pop
sti
inc
xchg
sbb
leave
xlat
sbb
enter
pusha
rorb
add
in
mov
dec
sub
cmp
inc
add
inc
cmp
imul
daa
imul
stc
xor
or
cmp
sub
xchg
mov
mov
shll
or
sub
add
sti
clc
mov
stos
xchg
cs
add
add
xchg
xchg
pop
jp
mov
xlat
adc
sub
lock
cmp
enter
add
cmp
pop
mov
mov
mov
xlat
xchg
clc
int
sub
cmp
roll
imul
imul
xor
clc
cmp
iret
sub
cmc
add
adc
jno
adc
add
adc
jbe
add
adc
sbb
push
sti
inc
or
inc
push
bound
and
int
sub
imul
xchg
gs
ret
adc
rcrb
add
and
push
test
adc
add
jp
xchg
dec
pop
mov
or
leave
lahf
jecxz
ds
push
sbb
sbb
pop
push
sub
call
orb
cmp
fwait
mov
push
push
jbe
add
xchg
ja
imul
jecxz
fimull
sbb
xchg
enter
clc
xchg
push
pop
jl
push
push
lods
lret
aam
lcall
add
add
jne
arpl
sbb
add
cwtl
xchg
pop
js
cmp
xchg
sub
mov
or
inc
mov
loopne
pop
iret
xchg
mov
xchg
adc
pop
adc
xchg
push
ret
int
inc
repnz
movsb
sub
aaa
inc
push
jl
jl
aam
mov
pop
add
test
fcompl
lret
imul
out
repnz
pop
add
repnz
add
jmp
jmp
xor
or
fldl
or
incl
or
sbb
ja
aaa
daa
nop
sbb
add
add
inc
test
ds
cmp
push
push
mov
test
inc
inc
sub
orl
push
jnp
push
aas
lcall
test
mov
jb
push
bound
out
out
mov
in
push
dec
lds
ds
mov
push
add
or
ds
push
and
dec
sub
and
dec
cmp
fisttpll
fisttpl
add
inc
ss
sub
push
sub
push
pop
ss
fdivrs
push
sub
mov
sub
xchg
add
loopne
mov
cmp
fwait
push
stos
add
inc
mov
cmp
mov
in
mov
adc
repnz
and
fists
mov
mov
xchg
add
dec
pop
cwtl
sub
sub
jmp
outsb
out
mov
mov
and
sahf
shl
std
aam
mov
mov
xchg
frstor
fdiv
decl
fidivl
mov
mov
imul
push
test
cmpb
mov
in
mov
lods
mov
push
mov
insl
xchg
cmp
add
mov
push
bound
andl
mov
adc
mov
pop
fwait
test
or
lretw
insl
sbb
aaa
cld
push
mov
popa
ret
jb
fiaddl
mov
lea
lsl
js
fidivl
loope
scas
mov
mov
mov
add
in
roll
add
cld
ljmp
jns
jb
sbb
mov
cs
pop
fisubrl
pop
and
xor
lds
pop
jge
mov
insb
movsl
mov
mov
cmp
add
pop
or
rorb
add
mov
outsb
add
pop
mov
sbb
xor
jnp
sub
sub
into
gs
mov
out
cltd
or
xchg
sbb
mov
shlb
pushf
gs
xor
sbb
fbstp
push
push
mov
out
inc
add
mov
or
or
add
aaa
bound
mov
mov
fcomps
or
lea
mov
push
pusha
pop
lds
cmpsl
adc
shlb
mov
mov
ja
fcmovnbe
or
mov
pop
push
imul
mov
adc
and
jle
ret
pop
shlb
rcl
pop
xor
xor
mov
insl
pop
add
xor
ss
mov
sbb
adc
lods
cmp
push
jmp
and
mov
pop
fs
or
or
or
mov
rcrb
in
hlt
sarb
in
hlt
pop
add
js
mov
test
pop
mov
je
mov
sbb
add
inc
adc
out
fstps
push
popa
sbb
add
into
jae
cmp
push
pop
sub
mov
pop
pushf
pop
push
sbb
pushf
aaa
add
cmp
or
pop
mov
jae
pop
and
and
enter
xchg
test
add
stos
rorb
aad
add
cmp
add
or
nop
mov
out
rcrl
mov
imul
mov
mov
jb
adc
imul
stos
sti
repz
push
daa
xchg
js
xlat
mov
adc
inc
lods
fwait
mov
repz
popa
cmp
data16
xchg
xchg
cmp
daa
sbb
lods
add
sbb
mov
loope
test
fmuls
dec
xor
mov
inc
out
cmp
mov
sub
inc
push
pop
xor
ds
sahf
adc
ss
mov
shlb
out
sub
inc
stos
scas
inc
dec
xor
sub
xchg
sbb
js
decl
or
xchg
add
shr
xor
in
mov
xchg
cmp
jp
pop
jnp
xchg
insb
push
test
dec
test
in
or
pop
mov
pop
sbb
push
or
adc
sub
cmpsl
lcall
push
pop
pop
cmp
neg
inc
add
loopne
add
lods
pop
pop
shlb
pusha
into
mov
dec
or
aam
lahf
lds
cmp
or
pop
add
or
mov
xchg
xor
and
dec
sub
addr16
jle
mov
or
mov
rolb
fs
lret
imul
sub
push
sahf
jne
dec
or
jmp
mov
adc
repnz
daa
lcall
dec
dec
scas
mov
and
test
out
dec
mov
or
outsl
int
daa
inc
iret
mov
xchg
xchg
not
cmp
enter
cmpsb
mov
gs
mov
sbb
add
push
rcrb
adc
mov
or
push
int
xor
mov
push
cmp
xor
cld
sbb
rorl
dec
sub
mov
popf
sahf
or
push
incl
bound
or
mov
cmp
mov
lods
je
rorb
mov
es
cmp
sbb
outsl
loop
je
push
pop
insl
and
xchg
or
pop
int3
mov
push
pop
sbb
xchg
addr16
leave
les
lret
xchg
push
add
ja
jno
xchg
dec
cwtl
xor
add
mov
sbb
sahf
push
sub
in
xor
adc
adc
addb
in
lret
pusha
fwait
sub
push
sahf
lahf
sbb
push
or
je
adc
rol
into
mov
lahf
sbb
fimuls
jnp
cld
ret
in
jns
data16
imul
push
sbb
mov
mov
mov
mov
mov
inc
mov
jle
pop
push
bound
int
cmp
std
push
add
dec
iret
das
inc
add
push
lcall
js
rol
fstpt
dec
and
popa
ret
movsb
call
mov
xchg
mov
negl
jbe
pusha
cmp
mov
imul
inc
ret
insl
scas
adc
cmp
in
push
je
repnz
rorl
rorb
daa
shlb
loope
dec
lret
imul
push
in
sub
push
push
push
or
add
push
data16
inc
push
cmp
jae
mov
lock
pop
and
pop
cmpl
adc
adc
add
sarb
cmp
lret
out
inc
xor
pusha
pop
sbb
and
jecxz
imul
pop
cmp
imul
popf
je
add
mov
add
jnp
gs
lods
stc
movsl
cwtl
out
push
pushl
pop
fldenv
pop
icebp
cmp
sub
sub
arpl
aad
cmp
dec
dec
adc
aaa
cmc
scas
addr16
push
lahf
jno
add
dec
pop
pop
pop
mov
cmp
mov
popf
aaa
lock
daa
mov
cmp
cmp
int3
xchg
popf
mov
or
mov
jne
mov
scas
bound
cmp
adc
mov
mov
leave
lds
test
cmc
dec
mov
pusha
insl
push
sub
push
lods
dec
mov
fisubl
lahf
lock
lea
sub
mov
fidivl
push
dec
pop
adc
int
xor
dec
jns
jb
mov
sub
int3
cmovp
repz
push
inc
mov
mov
pop
add
or
in
imul
in
jecxz
mov
test
imul
sahf
jne
mov
aaa
inc
push
adc
lods
push
or
pop
addr16
mov
add
stos
push
jge
or
outsl
imul
push
aaa
lea
sbb
dec
mov
xor
pop
adc
std
bswap
mov
add
in
ja
lea
cmp
adc
jle
jb
scas
cmpsl
mov
mov
leave
add
sub
mov
sbb
pop
or
lods
mov
js
jle
dec
mov
lods
add
sub
push
mov
jp
jno
test
pop
lea
pop
lds
jmp
pop
cwtl
lea
adc
fs
and
test
repnz
fidivl
jns
imul
jb
mov
dec
sub
imul
orl
fstpl
mov
dec
mov
adc
mov
mov
pop
and
xlat
repnz
xchg
mov
lcall
mov
xchg
add
add
enter
inc
add
jb
mov
xor
add
lea
pop
loopne
mov
in
imul
icebp
push
or
or
dec
add
repnz
mov
test
mov
xchg
leave
mov
mov
popa
add
or
and
pop
fs
mov
cs
daa
pop
es
in
lea
test
repnz
mov
mov
lret
adc
pop
push
pop
add
jbe
mov
xchg
jecxz
call
popf
mov
mov
insl
or
movsl
lcall
xchg
mov
pop
push
movsl
xchg
mov
mov
dec
repz
cmp
repz
sub
xchg
mov
lcall
xlat
xor
xchg
out
mov
mov
loope
pop
imul
jb
imul
adc
into
cmpsl
pushf
scas
dec
pop
push
lret
sbb
out
sub
std
insl
add
cmpsb
or
mov
subl
mov
pop
or
xchg
push
sub
dec
mov
inc
bound
dec
add
jae
pop
mov
sub
lock
into
int3
aam
lret
aam
push
jne
mov
dec
loopne
mov
lahf
inc
lahf
pop
sbb
or
in
mov
mov
lcall
imul
pop
mov
or
add
pop
sbb
push
or
jge
into
mov
popa
pop
sub
xchg
mov
add
inc
sub
cmp
pop
into
push
add
mov
mov
pushf
mov
sub
push
jl
outsl
out
ljmp
jp
mov
shl
mov
push
cmc
cmpsl
sarl
push
push
mov
lahf
inc
stc
adc
jnp
pop
push
cmp
icebp
ret
cmp
dec
outsl
js
cmp
test
sub
lahf
and
pop
dec
out
mov
sarb
dec
pop
test
cld
pop
push
lret
mov
xchg
mov
lods
lods
mov
and
pop
mov
sub
push
rorb
jb
pop
test
sbb
dec
sub
mov
xor
imul
fwait
rcrb
or
out
inc
cmp
mov
push
aaa
mov
mov
mov
or
and
mov
xchg
sahf
xchg
push
push
ret
rcr
out
mov
shll
dec
jbe
cmp
rcrl
push
add
test
mov
rolb
pop
or
cmp
lret
or
sbb
sbb
push
jge
xor
fistps
int3
inc
or
adc
mov
inc
ret
or
dec
pop
sbb
popa
xor
mov
gs
movsl
pop
dec
jns
inc
push
or
add
pop
loop
scas
mov
ss
cmp
scas
adc
shl
aam
adc
cmp
stc
test
ror
int3
push
xchg
pop
mov
cmpsb
iret
xchg
stos
jmp
test
adc
inc
sbb
or
rcr
add
iret
jmp
lret
sbb
sahf
xchg
js
sbb
sbb
or
ficoms
popf
lret
inc
pop
sub
mov
out
cmp
pop
or
add
mov
lahf
aam
int3
pop
mov
aaa
arpl
xchg
adc
pop
push
sbb
iret
leave
in
aas
pushf
cli
dec
popf
mov
or
xchg
push
xchg
jbe
push
mov
dec
adc
xchg
in
mov
add
shrl
xor
jae
push
mov
aam
and
sub
aam
pop
sub
ja
add
hlt
xorb
xchg
icebp
rclb
mov
push
movsl
cld
jbe
cli
jge
sub
push
out
cmp
cmpsb
outsb
loope
aas
mov
xchg
out
das
or
xlat
mov
rcrb
or
mov
sub
xchg
out
das
or
adc
push
adc
sub
cli
in
shrl
jb
add
movsl
dec
push
mov
mov
mov
adc
lds
fiaddl
jns
jmp
dec
divb
mov
or
xchg
adc
push
jae
icebp
mov
repnz
fildll
xchg
or
cmp
stc
into
hlt
je
jmp
pushf
iret
push
repnz
rcl
pushf
in
xor
pop
pushf
int
dec
div
add
fwait
rcrl
loop
pop
in
and
ss
inc
in
pop
push
jae
psubw
movsb
scas
mov
xchg
out
sub
aad
push
cli
insl
mov
out
xchg
das
mov
adc
mov
lds
inc
pop
pop
leave
idiv
mov
ljmp
fs
xor
sti
mov
sub
dec
xor
xchg
push
pop
sti
pop
add
or
or
mov
cltd
sub
or
push
dec
int
add
repnz
cmpsb
or
fwait
in
push
bound
outsl
jbe
push
mov
mov
iret
mov
sub
cmp
stos
inc
or
iret
imul
shlb
pop
imul
jl
add
ds
stc
lret
fucomip
rcrl
imul
jae
aaa
or
rolb
push
adc
enter
add
push
or
lds
fs
xchg
mov
xchg
loop
fildll
pushf
sub
push
adc
xchg
out
pushf
sub
in
or
into
ss
addr16
sti
dec
mov
pop
jecxz
sahf
out
sarb
xchg
cmpsl
xchg
xchg
and
outsl
mov
int
sbb
gs
cmp
popf
in
mov
imul
xor
imul
sub
imul
xlat
imul
addr16
lret
push
test
lret
pop
xlat
int
xor
and
imul
sbb
xchg
icebp
sarl
or
out
or
jne
mov
push
adc
fldl
std
pop
add
adc
lahf
out
lret
sti
dec
push
sub
lret
out
jmp
ss
jne
imul
mov
dec
lea
insl
imul
dec
xor
cmp
or
sbb
mov
jp
mov
loop
sbb
popf
mov
in
ficompl
shlb
dec
cmp
push
mov
cli
fwait
outsl
scas
insl
cmpsl
outsb
clc
aad
scas
cmpsl
js
mov
push
or
ja
add
das
cli
lret
insl
inc
cmpsl
stos
cmpsl
fstl
mov
mov
or
pop
rcl
insl
into
sarb
adc
fidivl
rol
ret
xchg
push
jb
adc
lret
inc
push
iret
int
cmpsb
push
int3
mov
mov
popf
mov
or
repz
sub
lret
jae
jmp
outsl
dec
mov
negl
jge
ret
sub
ds
lods
imul
pusha
cmc
scas
xor
arpl
xchg
or
mov
mov
outsl
lock
xchg
mov
mov
sbb
lret
dec
cmp
adc
pop
adc
push
pop
jg
fnstcw
push
jg
add
adc
in
lahf
xchg
xor
mov
lods
xlat
int
lretw
nop
pop
lahf
jg
sahf
xor
rcrl
dec
sub
adc
mov
fs
sub
sub
arpl
and
fisubs
ss
lea
pop
or
shll
scas
sub
adc
shrl
popf
cltd
lods
lds
cmpsl
lcall
imul
jge
movsl
imul
xchg
loop
mov
or
xlat
or
lret
push
mov
shr
cmp
fucomip
out
into
nop
mov
mov
stc
movsl
lcall
out
add
outsl
add
imul
fwait
shlb
imul
xchg
push
imul
mov
popf
xchg
aas
mov
out
xchg
repnz
cmp
jns
pop
das
add
out
xchg
mov
enter
pop
sbb
sahf
in
adc
cmp
pop
int
test
hlt
test
xor
xchg
iret
cmpsl
gs
fmul
jmp
and
roll
mov
in
add
sub
imul
mov
or
cli
jbe
push
mov
mov
fisttpl
mov
push
sub
jno
imul
push
movsl
inc
pusha
sub
mov
fldcw
jae
daa
mov
out
popl
jmp
ret
lret
lods
les
sub
addr16
imul
xchg
xchg
sub
cltd
mov
add
adc
mov
mov
cmp
xchg
shlb
insb
dec
aam
repz
jno
dec
push
imul
dec
push
mov
or
sub
mov
jb
inc
xchg
sub
cmp
sahf
cltd
push
cmc
pop
push
jnp
ss
mov
jnp
jnp
dec
icebp
into
push
jns
and
popf
stos
cmp
hlt
movsb
pop
pop
or
cltd
dec
aad
out
fiadds
add
xor
in
ds
jge
mov
or
pop
lahf
or
xchg
imul
sarb
insl
or
dec
ss
adc
sbb
rcrl
cmp
cmp
adc
xor
pop
xlat
sbb
push
imul
negb
dec
mov
push
stc
imul
popa
pop
sahf
shrl
fildl
repnz
lahf
out
fnstenv
add
cltd
dec
cmpsl
addr16
int3
mov
mov
mov
idivl
std
decl
pop
mov
daa
add
cld
in
stc
pop
outsl
jbe
and
faddl
aam
mov
inc
push
add
jg
aas
inc
add
fidivl
imul
xlat
lods
mov
sbb
gs
in
lods
enter
sti
mov
sahf
lahf
jmp
out
jg
clc
sarb
or
fwait
add
sub
jle
aad
jecxz
cmpsb
cmpsb
pop
mov
push
jge
das
aas
mov
pop
rcr
or
lahf
daa
test
mov
notl
imul
aaa
movsl
cltd
mov
push
jmpw
lods
lds
mov
or
pop
push
jbe
push
in
mov
push
mov
std
dec
push
fidivl
fiaddl
fucom
lcall
ds
in
jno
out
xlat
repz
xchg
cli
mov
sub
mov
iret
cmpsb
arpl
lcall
mov
cs
adc
push
gs
sahf
cwtl
pop
xchg
adc
jecxz
dec
stos
jp
mov
add
add
sti
call
and
aas
clc
lea
jb
ret
into
lds
push
mov
movsb
cmp
add
lods
lds
dec
add
inc
stc
lret
hlt
test
mov
mov
pop
push
pushf
pushf
rorl
cmp
iret
lock
addr16
sti
jno
repz
pop
leave
negl
fidivl
ss
xchg
mov
sbb
cmpsl
imul
cld
cmp
pop
jle
mov
dec
clc
leave
mov
mov
mov
sti
mov
fstpt
cs
pop
cmp
iret
fwait
sub
push
jl
push
pop
or
fidivl
add
add
js
iret
jmp
jae
popf
insb
xchg
cmpsb
addr16
mov
mov
in
int3
or
aas
pop
fiaddl
into
imul
cmpsl
jmp
mull
jmp
imul
pusha
jb
mov
cmp
pop
adc
mov
cmp
pushf
lahf
in
stc
rcll
or
ss
mov
dec
imull
lret
dec
test
or
aam
push
jbe
repz
je
test
mov
std
jg
sar
jg
ss
xchg
movsl
push
sahf
cltd
std
jbe
lcall
std
iret
rcll
push
cmp
loop
nop
or
cmpsb
js
push
xlat
xchg
mov
xchg
mov
inc
cmpsl
int
cmp
in
jmp
movsl
or
jno
icebp
shr
adc
jne
addr16
lods
mov
sub
push
sub
jae
cmp
lods
add
mov
lds
inc
addr16
adc
push
mov
mov
popf
stos
xor
adc
pop
or
ss
jle
mov
leave
mov
scas
aas
add
in
leave
aam
jae
adc
adc
dec
imul
cmpsb
bound
sub
movb
int
lods
lds
mov
fwait
aas
push
fbld
rcrl
mov
adc
xor
cmc
ds
lods
or
push
sahf
popf
fcmove
leave
cmp
or
xor
xlat
add
jns
ret
fisttpll
jmp
cmovle
xor
push
sub
add
and
sub
jp
add
rcl
adc
int
add
pop
lods
push
in
ss
into
cmp
push
pop
daa
xchg
lcall
sarb
dec
repz
sub
mov
xchg
inc
pushf
dec
sub
push
pop
cmpsl
flds
jl
pop
movq
add
outsl
mov
xchg
xor
stos
sahf
outsb
pop
cltd
shrb
das
jnp
dec
sub
icebp
iret
jmp
int3
lods
iret
add
fst
cmpsl
stc
push
mov
dec
or
xor
inc
or
sub
inc
leave
push
arpl
jae
clc
cmp
das
xor
imul
imul
inc
or
cmp
pop
out
dec
mov
xchg
test
idiv
pop
fists
mov
in
scas
popl
sub
fidivl
jg
mov
push
sbb
in
and
jns
into
outsb
push
rcl
fstpl
daa
mov
imul
pop
lea
or
movsl
xchg
leave
adc
xor
test
cwtl
adc
mov
dec
push
imul
jns
adc
pop
lcall
push
adc
xchg
and
jno
jmp
ror
int
rclb
dec
insl
jp
inc
jb
adc
adcb
int
add
mov
aaa
enter
push
stos
ja
stc
pop
pop
out
push
call
lds
inc
add
daa
xchg
lcall
fistpl
imul
sbb
adc
ja
add
mov
push
fs
aas
mov
xchg
mov
imul
sbb
pop
ret
pop
lret
mov
adc
cmp
mov
xchg
popf
mov
imul
push
add
sti
dec
xchg
cmpsl
cmp
mov
cmp
dec
int
fstpt
clc
lret
add
dec
pop
pop
jnp
lods
pop
lcall
pop
or
jno
popf
add
or
cmp
lods
or
cli
lret
xchg
popf
ljmp
jns
cmp
cmp
iret
mov
mov
jmp
cmpsl
outsl
xchg
mov
cwtl
not
in
in
mov
movsl
lcall
icebp
loope
add
lret
lahf
push
shlb
jmp
lods
jg
xor
jae
in
jecxz
xchg
mov
ljmp
pop
ret
scas
inc
pop
add
shll
add
sbb
out
lock
repz
xchg
push
ja
jmp
push
jbe
jb
leave
push
vpextrw
lds
lret
jecxz
lcall
out
icebp
movsb
ljmp
push
push
inc
outsw
jmp
dec
imul
xchg
lods
lods
or
add
addr16
idiv
sarb
fistpll
movsl
dec
push
std
jae
out
mov
mov
cli
sub
jnp
lret
iret
lahf
loope
aam
icebp
leave
jae
cli
lret
gs
jecxz
in
lret
rolb
mov
cmpsl
jmp
push
jno
pop
xchg
cli
lret
fnstcw
jmp
or
push
pop
outsl
pushf
add
ja
adc
and
inc
in
lret
rclb
dec
in
cmp
and
repz
adc
xchg
push
push
ficompl
out
call
sbb
xchg
jg
mov
jmp
xlat
jno
mov
pop
pop
pop
lret
mov
pushf
xchg
je
in
ss
int
outsb
das
add
xor
lret
push
or
idivb
push
add
add
out
pop
out
jle
pushf
pop
mov
iret
cmc
push
into
adc
repnz
add
add
adc
shl
xchg
iret
mov
jg
adc
add
mov
adc
mov
pushf
mov
pop
xchg
xor
xchg
mov
aam
mov
out
repnz
lahf
cmpsl
repz
dec
aam
jae
stos
fildll
or
xchg
idivb
push
mov
outsl
shr
fcmovu
cs
pop
std
cld
iret
mov
xlat
sub
add
jnp
or
fucomi
xor
sub
mov
rol
xchg
das
pop
inc
mov
jmp
lahf
dec
mov
mov
cmp
movsl
jbe
cli
or
pop
push
fistpll
lret
out
cmpsl
aam
pop
mov
push
pop
or
pop
mov
jg
ljmp
mov
sahf
lahf
pop
dec
add
lcall
rol
js
call
mov
cmp
mov
mov
dec
adc
jns
out
testb
mov
xchg
mov
fwait
cmpsl
test
adc
hlt
in
cmp
test
xchg
loop
lahf
out
rcrl
cmp
leave
std
sahf
xor
adc
cmp
addr16
or
dec
push
mov
lret
leave
jae
adc
in
add
sti
imul
stc
jg
mov
rorl
add
aad
adc
out
cmp
imul
xchg
sbb
leave
fiaddl
fistps
std
scas
outsl
add
add
cld
fidivrl
push
addr16
cmp
mov
les
xor
inc
add
push
mull
sbb
gs
push
test
xor
repz
aad
cld
enter
lods
les
mov
enter
addr16
stc
push
xchg
xor
jns
mov
adc
repz
xchg
mov
xchg
test
lods
adc
fistps
test
stc
pop
cmp
psllw
out
imull
imul
in
mov
in
pushf
daa
xchg
xchg
ljmp
loop
loop
in
lods
enter
lret
jl
push
sub
xlat
popf
mov
xchg
insb
rorl
mov
pop
xchg
xor
or
outsl
into
dec
stos
sub
or
iret
leave
cmc
sbb
aas
clc
inc
stc
xlat
shll
aad
pushl
jmp
sti
pop
std
shl
stos
repnz
mov
lahf
mov
jne
int
cs
and
add
inc
add
mov
or
movsl
sbb
fisubrs
add
aam
shll
mov
pushf
cmpsl
lods
xchg
or
je
in
cmp
jmp
cmp
jae
stc
cmp
adc
xchg
add
sub
movsl
inc
push
movl
mov
pop
lret
cmpsl
sti
hlt
sahf
fidivl
lahf
inc
adc
cmp
gs
cli
mov
or
pop
repnz
inc
dec
repz
add
in
xor
mov
pop
push
fnstenv
dec
adc
sahf
jns
shll
lret
movsb
mov
push
js
popf
inc
push
adc
out
xchg
les
iret
sub
sbb
out
rcrb
dec
stos
jns
gs
jle
add
je
mov
add
ss
xchg
repz
lahf
insl
out
add
dec
sub
stos
xchg
mov
fucom
push
lahf
fildl
into
rcl
mov
mov
or
push
ret
in
jb
fucomip
add
enter
dec
sbb
cltd
pop
shll
or
add
cmp
xor
out
into
sti
pop
jp
out
push
xchg
push
pushf
dec
sbb
lahf
cmp
push
or
in
cmp
push
in
cmp
sahf
xchg
push
jge
insl
jmp
sar
aas
sahf
cmp
pop
or
pop
push
aad
pop
push
outsl
fcmovbe
pop
rcl
out
aas
test
test
mov
pcmpgtw
int
outsl
lcall
dec
repz
fucomip
hlt
mov
xor
in
aas
mov
stc
aam
pop
xlat
out
in
out
mov
push
out
lret
inc
fidivrs
mov
shll
inc
mov
int3
ds
cli
sub
lret
cli
sub
out
xor
or
gs
lods
dec
ja
sahf
mov
xlat
dec
push
imul
dec
xor
add
add
testl
mov
into
leave
test
sahf
lcall
xchg
push
push
js
fisubl
add
mov
repz
iret
out
rolb
sbb
mov
adc
lahf
gs
cmpsl
mov
lea
jnp
mov
mov
jmp
ret
push
adc
into
cli
pop
adc
and
dec
cmc
jo,pt
ljmp
or
jl
push
mov
sub
ret
scas
push
imul
jmp
sbb
mov
mov
xlat
loop
mov
out
dec
std
xchg
cmp
mov
pushf
leave
push
and
outsl
mov
imul
std
std
shll
dec
mov
outsl
lret
iret
dec
ljmp
mov
mov
cwtl
push
ljmp
lcall
ds
xor
or
lret
cmc
iret
or
pop
into
jmp
lcall
lret
or
movl
and
push
sahf
xchg
jmp
mov
pop
jnp
add
sbb
lods
gs
xor
jne
mov
jg
jmp
sti
dec
cltd
repz
lods
movsb
negl
roll
outsb
cmc
xchg
mov
rcl
push
iret
mov
mov
jno
addr16
inc
xchg
jmp
enter
xor
shll
push
mov
mov
fs
mov
in
mov
popf
gs
ja
cmpsl
cmp
insb
fsub
and
mov
add
push
imul
icebp
icebp
xchg
sti
insb
inc
or
or
shll
jmp
lret
icebp
jb
cmp
pop
add
ja
sti
jge
lahf
sub
push
je
push
data16
or
jbe
add
les
push
imul
cmpsb
lods
shlb
or
scas
add
and
or
shl
push
repnz
xchg
cmpsb
addr16
out
into
fcmovnbe
fst
cmp
dec
sub
int
shl
jns
pop
sbb
rcrl
out
sub
jae
mov
dec
jl
sbb
sub
gs
push
gs
dec
fstpt
mov
ficomps
lcallw
mov
xchg
xor
fildll
or
mov
lods
pop
add
or
lret
jmp
into
or
data16
or
lret
jb
add
pop
pop
daa
cmp
stos
into
insb
pop
int3
cmpsl
lahf
push
jecxz
fiaddl
push
addr16
mov
popf
inc
insb
imul
adc
cli
into
int
outsl
iret
aam
push
jg
ss
mov
shll
imul
xchg
jb
pop
rcrb
pop
iret
fisttpll
jb
sub
repz
push
notl
fcos
jbe
out
lret
jno
cli
out
mov
lods
into
pop
jmp
in
adc
cmp
sti
jbe
dec
cmp
rcrl
rcll
outsb
insl
pop
les
cmp
daa
mov
lret
lods
shrb
or
sbb
jl
pop
push
add
leave
fldt
lods
into
add
imul
jns
das
repz
jno
lret
push
add
leave
jg
sar
cmp
dec
lret
sub
mov
mov
js
setg
sahf
mov
pushf
or
aas
dec
mov
sahf
clc
sarl
mov
stos
imul
push
mov
or
outsl
dec
out
push
clc
cmp
push
mov
icebp
xlat
cli
mull
daa
sahf
mov
jns
das
cld
aam
cld
mov
loopne
add
test
repnz
jecxz
std
cli
cmp
fdivrs
dec
mov
adc
push
mov
push
and
add
add
or
fmul
sbb
cmp
push
imul
rolb
cmp
sub
test
das
sbb
jmp
pop
xor
cmpsl
repnz
xor
add
xchg
or
push
pop
and
dec
repz
daa
insl
xor
sbb
rcrl
addr16
into
cmpsl
sti
inc
cltd
jmp
xchg
jns
out
sar
xor
pushf
cmpsl
cmp
sub
scas
cmp
pop
lods
sbb
jmp
push
cld
scas
lcall
fsts
xor
into
jg
cmp
leave
roll
ficoms
sbb
gs
or
add
or
vmptrld
insb
ljmp
test
add
std
ljmp
negl
cmp
test
sub
cmp
div
outsl
dec
or
fcomps
or
sub
shlb
imul
mov
ja
incb
mov
in
add
adc
out
leave
aam
pop
mull
jg
lret
pop
scas
cmp
adc
mov
ficomps
push
fsts
loopne
or
test
pop
ss
mov
int
addr16
cmc
and
or
pop
jne
add
loope
pop
sbb
or
or
pushf
pop
pop
or
sbbl
add
jnp
pop
test
ja
add
adcl
dec
sbb
add
je
pop
jno
xor
or
cmp
push
jnp
dec
imul
sub
pop
or
int
jle
ret
in
cmp
out
pop
ret
or
cs
and
lcall
int
cmp
insl
push
cli
sbb
xchg
out
idivb
add
ja
mov
lret
pop
cld
scas
mov
cmp
dec
out
sub
xchg
xchg
pusha
sub
add
aam
in
rcrl
out
sti
dec
lahf
movsl
jg
cmp
imulb
pop
pop
or
dec
lcall
cmpsl
fnstenv
lret
sub
jns
push
xlat
aas
push
lret
push
push
jns
int
mov
sbb
decl
ja
jns
push
xor
add
fidivrl
pop
into
scas
in
mov
push
adc
add
pop
pop
pushf
lds
mov
cmp
pop
inc
cmpsl
sbb
xchg
aas
cmp
dec
push
mov
cmp
imul
mov
add
addl
jne
cmp
addl
add
push
cmp
into
xchg
out
push
syscall
dec
xchg
push
gs
shl
adc
xchg
fdivrl
fmuls
inc
pop
xchg
pop
loop
add
sub
cmp
add
cmp
cmp
push
sbb
iret
imul
fs
xor
mov
mov
mov
push
cs
mov
or
test
or
sub
or
jns
mov
scas
lcall
mov
adc
sti
das
repz
hlt
push
push
mov
shll
push
push
jge
ss
cltd
lods
lds
scas
faddl
xlat
add
mov
cmp
leave
aam
out
imull
mov
add
inc
push
enter
test
in
rclb
lds
jb
xchg
or
mov
sbb
sbb
js
xor
outsb
aaa
loopne
jecxz
scas
imul
subl
push
jo
test
shlb
lods
push
or
nop
addr16
flds
cmp
sbb
imul
cmp
lahf
mov
mov
dec
lcall
and
adc
lds
push
sub
adc
or
popf
notb
ret
sbb
mov
xor
sub
or
cli
sbb
shll
insl
das
mov
scas
mov
xchg
mov
or
or
xor
sti
hlt
mov
jo
xchg
stos
sub
pop
or
into
pop
clc
shrb
lods
idiv
jg
aad
aam
jb
add
add
cld
rcrb
or
mov
add
xor
mov
pop
jno
fbstp
lret
ja
movsb
xor
dec
in
cmp
sti
ffreep
dec
dec
push
in
xor
dec
mov
in
mov
std
mov
sub
mov
mov
int3
lret
popa
add
ljmp
cmp
push
jno
nop
scas
lods
push
cs
xchg
adc
xchg
andl
movl
adc
into
aas
movl
jp
addl
orb
add
lret
rcrl
lret
and
xor
cwtl
icebp
into
outsb
data16
add
daa
xor
pop
mov
gs
shll
add
jo
or
pusha
push
sbb
ds
popf
gs
clc
aam
addl
xor
push
sbb
idiv
ss
lahf
xor
rclb
mov
sbb
int
cmp
mov
push
imul
or
push
out
imul
lcall
dec
pop
xchg
push
pop
repz
mov
or
sub
rcll
pop
mov
hlt
scas
mov
add
scas
imul
jnp
adc
sub
popl
xlat
mov
jo
das
loop
out
sub
inc
dec
mov
aam
pop
in
sub
inc
hlt
repz
movsb
scas
in
dec
movsb
stos
imull
cmp
sub
add
add
dec
add
test
in
pop
popa
jge
pop
pop
bound
xchg
lret
or
xchg
xorb
insb
les
loopne
clc
xchg
loopne
jo
cmp
jno
into
push
and
inc
cmp
sbb
xchg
push
cmp
push
jp
or
cmpl
inc
stc
lds
or
inc
movsb
or
mov
rorb
lret
xor
mov
sub
movsl
fcom
push
cs
xor
ret
es
or
push
es
push
xor
into
addr16
nop
add
dec
xchg
cmovge
lock
sbb
iret
pop
ss
shlb
div
into
xchg
and
sti
cmp
add
dec
push
popa
imul
pop
xchg
adc
mov
sub
jo,pn
lahf
repz
idivl
imul
in
dec
add
push
pop
clc
aad
mov
je
or
popa
and
aas
jmp
push
addr16
packssdw
stc
frstor
mov
int
outsl
sahf
lret
fimuls
jnp
or
ss
pushf
scas
loop
mov
mov
xlat
mov
sub
cltd
sarb
stc
shl
push
idivb
pop
aad
ds
pop
cmp
inc
add
xorl
roll
loopne
loopne
dec
outsl
ret
loope
cmp
test
mov
push
aaa
outsb
sbb
pop
fwait
push
addr16
sub
push
xor
dec
mov
jl
or
cmpl
mov
add
in
pop
lds
add
je
adc
pop
pop
adc
dec
mov
push
cmpsl
xor
mov
les
je
add
loope
sub
shlb
in
xchg
add
xor
mov
push
sbb
mov
sarl
pop
jge
push
cmp
mov
or
pop
test
sti
sub
adc
psubw
fistps
jnp
fprem1
xchg
insb
adc
sub
shlb
add
sbb
jnp
mov
ljmp
sub
dec
jge
pop
daa
pop
popf
cli
push
inc
addr16
gs
cmc
mov
cmp
inc
lods
sub
insb
cmp
xchg
test
std
loop
shll
push
outsl
jp
rcrl
out
cmp
out
fiadds
out
jg
dec
xchg
add
into
rorb
pop
stc
xlat
hlt
mov
movsl
mov
mov
push
add
add
add
dec
mov
xchg
shrb
add
test
mov
bound
pushf
fwait
xchg
sbb
cmp
popa
dec
xor
pop
pop
sbb
loopne
cmp
sub
pushf
or
push
jb
pop
xchg
jle
xchg
add
jecxz
cmpsl
add
sbbb
sub
lock
add
or
pusha
lds
gs
mov
sub
adc
jne
cmp
aas
insb
out
out
sub
sbb
inc
or
adc
jp
jmp
in
and
sbb
aas
push
sbb
das
pop
or
mov
popf
cwtl
cmp
xor
shlb
insl
stc
aas
fwait
xor
cltd
dec
gs
mov
mov
pusha
jmp
mov
cmp
add
scas
shrl
push
sar
lods
xchg
push
lret
mov
sti
jecxz
jl
jnp
or
push
mov
or
mov
sub
imul
xchg
lahf
adc
add
rcl
mov
mov
lahf
rcl
mov
popf
cld
int
xlat
cmp
jnp
cmp
imul
fcmovb
mov
jne
inc
push
xchg
cli
imul
pop
into
adc
sub
movsb
mov
repnz
inc
sub
jp
sbb
sbb
sub
xchg
push
imul
mov
push
sahf
cmp
or
daa
rcrb
pop
add
aad
add
daa
jne
mov
jl
lahf
jo
cmp
mov
inc
test
push
lret
mov
lds
push
adc
mov
popa
adc
mov
lea
sub
jno
mov
add
mov
xchg
dec
add
adc
or
xor
pushf
sub
mov
sbb
pop
mov
add
sti
je
sti
cmp
enter
sbb
xchg
icebp
xlat
imul
daa
fnstenv
jb
lds
sub
jno
popf
shrl
fsubrs
ja
out
sarl
into
mov
xchg
out
push
fcoml
pop
push
jnp
jmp
cmp
fldcw
int
outsb
negb
add
mov
mov
cwtl
xor
sti
pushf
lret
popf
cld
sarb
lret
shrb
int
aas
fucomi
cmpsb
std
out
xor
out
loop
mov
popf
jbe
je
mov
dec
push
test
lods
arpl
repnz
pop
jecxz
movsl
mov
fists
jnp
mov
std
cmpsb
xlat
add
lahf
fisttpl
sbbb
sub
add
pop
or
mov
sbb
push
insl
mov
mov
mov
popf
div
xor
dec
pop
inc
mov
xchg
or
in
enter
pop
fsub
cs
inc
jns
orl
imul
cmp
outsb
lods
cld
into
imul
mov
icebp
sbb
jmp
addr16
xchg
mov
mov
fadds
mov
adc
rol
xchg
cltd
fs
sub
adc
fs
in
sub
pop
iret
das
jnp
dec
aam
pop
pop
push
shlb
xor
in
jge
xlat
pop
fcoms
push
xor
or
mov
xchg
mov
lahf
fimull
xlat
add
test
dec
xchg
jmp
or
cwtl
sarb
iret
imul
jne
jns
add
sub
scas
or
aam
ds
xor
fimuls
cli
xlat
vpsubsw
cmpsl
daa
idivb
push
jmp
mov
pop
repnz
aaa
fiaddl
notl
imul
sub
dec
aam
filds
mov
stos
rep
mov
mov
cmpsl
jb
movsl
pop
in
push
mov
mov
jp
cmpsl
mov
inc
lcall
fisubs
xchg
movsb
add
loop
or
dec
testl
scas
jo
cmp
pop
push
lea
or
or
add
addl
popa
jmp
shlb
add
push
xchg
ja
stos
stos
add
test
stos
jno
push
jae
push
mov
lods
stos
inc
subb
sub
enter
lds
pop
aam
roll
repz
jo
mov
dec
or
push
add
mov
test
dec
aaa
cltd
imul
inc
push
add
sub
sub
sub
push
and
mov
jns
dec
push
arpl
xchg
xor
clc
xlat
mov
mov
push
rcrl
cmc
scas
mov
scas
shr
cmp
mov
fsubr
cs
fldenv
out
repnz
cmp
int
in
xor
dec
or
sub
cs
fcmove
enter
imul
frstor
jle
lcall
mov
jo
adc
mov
repnz
call
mov
pop
mov
jno
xchg
sti
fsubr
add
mov
inc
sub
outsl
cmp
lods
sbb
push
aas
mov
cld
xlat
sub
inc
test
stos
sub
add
add
or
sub
jmp
rorb
add
mov
enter
insl
shlb
mov
xchg
daa
xchg
movsb
push
xor
xchg
and
rorb
mov
scas
jle
pop
push
sub
cmp
add
inc
add
sub
add
add
insb
loop
mov
roll
pusha
cmpsl
test
mov
pop
push
xor
jle
leave
fnstenv
movsl
sub
insl
and
std
push
xchg
test
and
imul
add
push
jns,pt
arpl
pop
ljmp
jnp
aas
pop
ljmp
or
or
imul
aam
mov
test
and
stos
sahf
cltd
pop
mull
enter
mov
dec
jbe
test
mov
fmul
jge
popf
outsb
jb
cmp
cmp
inc
test
imul
pop
cmpsb
pop
xlat
or
into
mov
mov
imul
fldcw
leave
pop
stos
jnp
mov
cmp
add
mov
xchg
jl
push
dec
add
cmp
and
in
clc
xor
jmp
mov
and
mov
jmp
mov
mov
add
add
add
imul
data16
loopne
sbb
xchg
popf
mov
add
faddl
fwait
shll
sbb
js
cmpb
outsb
mov
or
jle
sub
sub
push
imul
push
nop
dec
push
cmp
in
rcll
sub
adc
mov
out
pushf
add
rorl
fwait
add
into
or
push
test
mov
sbb
pop
inc
pop
jge
imul
and
and
inc
sub
inc
je
in
sub
and
adc
xchg
push
addr16
dec
outsb
imull
mov
sub
loop
jl
ror
ret
mov
in
cmpsb
insb
fildll
lahf
outsb
xor
pop
adc
aam
add
push
ja
fimull
mov
int
movsl
push
imul
aad
adc
mov
jle
or
pop
or
mov
fidivrs
jge
int
fstpt
das
jns
ficoml
inc
imul
pop
jne
jb
or
cmp
xchg
mov
rcrl
push
addr16
movsl
fists
imul
outsl
lahf
iret
dec
iret
das
dec
in
xor
xchg
jns
lsl
fisubrl
xchg
outsb
mov
add
push
sub
lods
les
or
test
jo
lea
add
pusha
mov
push
jle
push
mov
test
cmp
push
shrl
mov
popa
stos
shrb
add
pop
mov
pusha
movsb
out
add
pop
pop
sub
sarl
enter
adc
cmp
dec
pop
jg
inc
add
or
jg
cmp
ret
pop
adc
lods
sub
and
daa
mov
ficoml
add
or
or
fucomi
fcmovb
dec
in
cmp
xchg
repz
mov
dec
add
adc
pop
icebp
pushf
push
add
in
fistpll
pop
stc
fsub
mov
dec
ljmp
lret
pop
std
mov
out
cmp
lahf
lods
hlt
mov
negl
loop
pop
mov
loop
fbstp
iret
popf
cld
xlat
sar
ret
jae
scas
loop
repz
gs
dec
pop
sti
outsl
bnd
dec
sub
adc
inc
or
scas
push
push
outsb
jl
pop
stos
fwait
pop
dec
scas
das
movsb
pop
popf
pop
arpl
dec
mov
mov
add
push
movsl
mov
xchg
push
sbb
xor
das
imull
push
inc
sbb
or
rorb
mov
lea
cmp
cmp
push
cmpsb
sbb
lods
pop
and
insb
push
js
inc
mov
sub
mov
dec
fsub
lods
lock
and
mov
add
adc
or
xchg
ss
or
sub
pop
jbe
dec
fnstcw
leave
loop
fists
xlat
mov
insl
pop
cmc
fld
cmp
jns
gs
das
out
jg
into
jmp
int
or
sahf
imul
pop
lret
adc
insb
dec
jge,pt
bound
das
jecxz
xchg
stos
jne
scas
mov
dec
mov
mov
dec
fsubs
repz
push
out
sub
dec
mov
mov
rorl
scas
cmp
add
out
mov
mov
xchg
xlat
pop
clc
shrl
add
fidivl
jg
push
jb
mov
movsl
repz
std
shll
daa
xor
das
jecxz
cmc
xchg
ret
das
imul
pop
sbb
xchg
push
imul
dec
jl
jp
rcrb
lahf
divb
jb
or
xor
roll
add
xor
test
pusha
jo
in
mov
mov
push
mov
pop
hlt
lcall
outsb
push
cmpl
rol
lods
loopne
dec
mov
push
int3
ljmp
movsb
sbb
cmpb
or
xor
inc
add
loop
xchg
push
lret
push
in
into
divb
insl
mov
mov
sub
clc
cmp
sahf
mov
icebp
rorl
int3
mov
lret
scas
iret
ds
fs
sti
cmp
and
into
lret
shll
leave
xlat
mov
inc
pop
mov
mov
das
not
frstor
repz
jl
cli
aad
add
dec
lahf
and
xchg
lahf
mov
push
outsb
popf
popa
dec
std
xchg
ds
jbe
sti
dec
add
cmpsb
or
jle
or
out
jns
gs
sub
inc
mov
mov
in
add
jg
jae
repz
xchg
or
out
jns
arpl
dec
out
push
pop
fsts
add
add
jbe
pop
mov
push
push
fwait
jnp
out
sbb
movsb
decl
pop
leave
cli
jle
or
sub
jbe
push
mov
lahf
lret
sbb
pop
jns
fstpt
rcll
insb
imul
pop
fsts
xlat
lcall
add
fidivrs
lods
add
add
in
or
or
rcrl
pop
lea
xchg
dec
lahf
xchg
xor
loopne
ja
mov
cmp
or
adc
aas
cli
fs
jno
cld
imul
outsl
cmp
push
negl
add
sbbl
sub
push
mov
pop
icebp
and
or
sub
xchg
iret
das
add
xchg
hlt
sbb
add
add
daa
fstpt
mov
clc
dec
or
lcall
pushf
xchg
push
mov
cmpsl
or
cmp
outsb
sub
dec
push
pop
add
xor
into
xchg
sbb
mov
sub
pop
std
std
shll
shrl
out
dec
mov
xor
mov
into
scas
jns
pop
sbb
lods
jne
stc
ds
push
jae
jge
cmp
jns
inc
imul
lods
jae
in
push
aas
popf
push
push
xlat
int
das
jbe
outsl
repz
mov
xchg
cld
inc
cli
jge
js
pop
xor
fucom
cmpsb
jmp
adc
mov
enter
movsl
jb
jno
rorl
in
shlb
fnstcw
jmp
int3
or
jbe
in
cmp
push
cmp
cmp
push
pop
imul
ror
aad
cmpb
scas
sub
popf
fiadds
fmull
scas
insl
push
movsl
push
jbe
jl
add
jl,pt
add
notl
mov
xchg
cmp
stc
iret
mov
mov
lods
add
add
cltd
into
xchg
or
int3
cwtl
das
incl
push
dec
fstpt
lods
cs
add
ja
mov
xchg
in
test
aas
into
mov
pop
lret
icebp
xor
push
gs
in
aas
lods
sub
dec
in
cltd
popf
pushf
xor
lret
xchg
push
ret
stos
cmp
test
dec
cmpsl
jo
and
repnz
fbld
insb
fisttpl
lret
mov
and
xchg
mov
shr
cmp
test
movsb
sti
sub
enter
std
into
movsb
notb
lahf
mov
pop
xchg
icebp
lret
push
pop
ljmp
pop
fucomp
mov
aad
pcmpgtw
fcmovbe
imul
insl
jae
or
aas
rcll
mov
jmp
inc
xchg
mov
push
fbld
push
jnp
ljmp
cmp
test
jmp
lret
jae
je
imull
imul
sahf
stos
leave
std
inc
outsb
dec
xlat
gs
dec
ffreep
fldcw
loopne
lcall
stc
cs
loope
mov
imul
lahf
icebp
cmp
pop
jns
jmp
enter
gs
pop
pop
jp
faddl
jmp
mov
push
add
orb
add
lcall
fwait
daa
add
xchg
rcll
push
sahf
imul
cmp
adc
cli
sub
iret
outsl
stos
sub
sarl
dec
out
pushl
xchg
cmpsl
popa
inc
pop
cmp
mov
notl
movsb
test
loop
push
arpl
mov
cmc
cltd
shll
adc
add
add
push
jns
out
std
mov
and
mov
or
dec
push
mov
mov
dec
mov
xchg
push
sti
push
add
push
out
loop
mov
add
xlat
push
out
ds
or
sbb
cmp
fmull
repz
dec
fnstcw
jns
imul
push
push
push
scas
jns
cmp
sub
icebp
das
lret
jno
dec
adc
ja
sahf
das
push
insb
repnz
sbb
test
jmp
in
iret
imull
enter
pop
out
dec
scas
sub
pop
mov
mov
dec
ljmp
mov
out
mov
loop
shrl
hlt
mov
jbe
stc
add
cmp
jo
mov
mov
mov
std
sbb
roll
lret
int
int
dec
add
lea
mov
dec
or
push
pop
leave
xchg
test
mov
xchg
xchg
pop
imul
bound
gs
in
das
movsl
leave
jl
iret
out
and
outsb
into
cli
js
popf
mov
adc
out
sbb
rcll
mov
movsl
mov
xchg
xlat
push
sub
jnp
ds
adc
xchg
icebp
fcmovbe
adc
aad
push
sub
pop
hlt
imul
in
pop
add
and
sub
dec
cmp
roll
mov
fstl
or
nop
scas
mov
imul
std
leave
out
cltd
mov
xchg
mov
shll
fstp
dec
insl
push
aas
test
test
scas
cmp
mov
jp
rcrl
cltd
or
imul
jge
jo
adc
stc
aam
sti
hlt
lcall
dec
leave
push
fstl
test
pop
mov
xor
mov
mov
or
mov
xor
or
jbe
xchg
je
add
int3
in
insl
nop
add
pause
inc
or
add
fimull
jns
dec
sub
in
cltd
lods
mov
out
lock
lods
add
jno
dec
or
into
addr16
stos
es
push
mov
imul
pop
mov
popf
pushf
das
mov
lods
enter
dec
in
dec
or
cmp
mov
or
jle
xchg
add
test
and
xor
pop
dec
jns
ds
xor
ljmp
and
mov
push
scas
jbe
mov
dec
push
in
test
jge
cmp
or
sub
xlat
sbb
das
or
xlat
testb
jbe
push
mov
dec
js
add
lahf
jae
mov
jmp
aam
into
dec
pop
std
push
xlat
jns
imul
cmp
leave
push
in
mov
test
std
or
or
jle
jnp
imul
pop
lcall
ja
or
jp
jo
mov
pop
mov
imul
push
rcrl
add
mov
xlat
cmp
pop
rcrb
mov
mov
repz
pop
out
pop
out
lcall
outsl
cmp
fiadds
fcmove
mov
or
sub
call
xchg
sahf
into
cs
pop
into
int
ja
dec
mov
fwait
in
sahf
jp
sahf
aam
add
cwtl
inc
add
test
pop
sub
rcll
pop
mov
xchg
clc
shll
sub
scas
pop
int3
mov
fwait
lret
aas
sub
lret
pop
jl
xchg
add
cld
lret
xchg
xor
jg
into
aas
mov
imul
ss
mov
fbld
sahf
fucom
test
iret
rorl
test
in
fdivrp
in
fldcw
pop
push
fs
or
pop
jp
mov
cld
fdiv
decl
cld
aam
sti
jns
jp
sarb
mov
pop
aad
push
dec
ja
xlat
aas
pop
lret
pop
mov
lahf
ds
js
push
adc
pop
int
scas
push
dec
adc
jg
jne
repz
cltd
inc
out
push
jno
mov
jae
jg
dec
jmp
out
popf
cld
repnz
jge
adc
ljmp
mov
aas
test
pop
or
jmp
add
insl
hlt
movsl
shl
jmp
jp
sub
data16
or
insl
jnp
jnp
fdiv
jnp
sbb
xlat
mov
pushf
in
clc
cmp
add
lcall
aad
repnz
leave
xor
popa
sub
pop
xor
out
lret
repz
addr16
mov
cmp
dec
add
fwait
cmp
lret
mov
sub
jl
xchg
ljmp
sub
pop
xchg
out
int3
jns
movsl
sbb
push
and
imul
pop
int3
out
imull
outsb
jns
cmp
adc
jbe
pop
ret
das
pop
fsin
sub
push
sbb
popf
mov
xlat
or
jge
aas
mov
imul
pop
into
aas
dec
mov
cltd
stc
repz
sub
in
imul
popf
push
jbe
rcrl
idivb
out
repnz
movsb
cmpsl
jp
adc
and
xor
jns
or
icebp
fstpl
mov
xchg
pop
mov
jae
mov
mov
pop
xor
rorb
mov
jno
mov
lcall
into
int
lret
xor
push
iret
mov
fldl
jmp
pushf
mov
cmpsl
pop
mov
cmc
out
lods
and
mov
insb
dec
aaa
mov
add
lods
or
dec
aam
fiaddl
into
cmp
popf
cmp
cmpsl
cmp
lret
xor
inc
pop
add
xor
out
mov
lret
dec
jne
cltd
int3
add
test
jl
sub
lods
jae
inc
jne,pn
xchg
enter
mov
cmp
lods
addr16
xchg
stos
push
insl
aam
test
cmc
cltd
cmp
int
cmp
imul
cmp
push
xlat
sub
lods
push
mov
leave
loop
jge
xor
outsb
je
negl
push
add
add
and
testb
repnz
jg
xlat
mov
fisubs
cmp
mov
dec
ja
mov
mov
sar
cmp
push
icebp
inc
push
sbb
test
jno
jmp
lods
or
adc
dec
inc
xchg
stos
lret
ljmp
sahf
cwtl
inc
adc
stc
jg
aam
mov
push
insb
jbe
fmull
int
daa
xor
lret
out
imul
mov
dec
mov
cmpsl
insl
popf
daa
repz
dec
fstl
jecxz
xchg
loop
mov
fs
in
xor
sub
cltd
imul
dec
push
mov
cmp
sahf
or
ret
test
adc
add
imul
adc
faddl
rclb
popf
dec
repnz
fwait
adc
xor
cld
cmp
jecxz
fidivl
outsl
into
into
dec
cmc
lahf
sub
pushf
jnp
lahf
jg
inc
pushf
lods
shl
jne
push
cmp
push
insl
pop
jns
dec
div
into
xor
fmul
mov
mov
xor
add
cli
ljmp
scas
jmp
jne
push
out
rorl
cmpsl
dec
xchg
leave
rorb
mov
addr16
pop
cmp
outsb
jb
mov
cmp
sub
cmp
in
test
cmpsl
test
clc
pop
xlat
cmc
sbb
sarb
cld
dec
rcll
divb
addr16
lahf
aam
bnd
ss
add
popf
popf
aaa
and
cmp
arpl
out
mov
outsb
pop
int
cs
fstpt
jb
jno
imul
dec
jl
sar
and
int
pop
or
jnp
jmp
icebp
int
or
das
je
scas
cmp
test
imul
add
out
lret
sub
jl
rol
leave
lods
mov
addr16
out
adc
into
cmpsl
sti
xchg
int3
sahf
pushf
ficoml
ss
shlb
or
enter
xor
outsb
leave
jae
aam
in
sub
repnz
imul
add
xlat
xchg
in
xchg
mov
add
mov
xchg
lahf
out
shll
shll
xchg
mov
shll
stc
pop
push
int
jl
push
lds
or
dec
lods
jl
jb
xor
into
aam
fisttpl
add
lret
call
xor
xchg
jecxz
shrl
xor
ljmp
push
pop
sahf
aad
test
gs
xchg
popf
movsl
notl
or
aam
sti
loop
out
int3
sahf
xchg
dec
divb
push
ljmp
bsr
in
aas
movsb
mov
mov
mov
imul
cmp
adc
sub
or
push
jne
dec
dec
push
daa
push
addr16
push
in
xor
or
or
cmp
mov
lret
aaa
test
movsl
jne
jae
fnstenv
and
mov
std
int
dec
jmp
jge
push
int
jp
insl
fucomip
push
imul
lret
xor
cmp
push
add
adc
out
sbb
into
xchg
addr16
sub
pop
jnp
sub
pop
std
mov
int
leave
rclb
push
in
clc
sub
cmp
shrb
rclb
push
mov
cmc
xchg
into
scas
jns
jle
shll
fbld
cli
lret
sub
push
push
jo
xchg
cmp
xchg
in
popf
cmpsl
test
jg
rol
jl
jmp
push
insl
ror
lret
xor
cld
lret
fistpl
stc
xlat
movsb
sti
cmp
out
shll
or
cmp
dec
mov
psllq
in
mov
xor
imul
and
ror
repz
dec
std
sahf
aas
mov
sub
push
xchg
fisubs
lret
sahf
ss
outsb
repnz
in
repnz
ficompl
cli
sub
mov
int
imulb
push
push
pop
add
mov
cld
jb,pt
outsl
imul
push
popa
scas
jnp
insl
push
imul
mov
into
scas
aas
bswap
stos
sub
in
imul
xor
mov
cli
lcall
dec
add
gs
jmp
push
cmpsl
jno
or
movsl
scas
sub
pop
mov
add
mov
cmp
lds
lahf
push
mov
inc
aaa
lret
mov
lea
add
into
or
jle
mov
jp
into
xchg
adc
cmp
sub
imul
add
clc
xor
nop
lahf
in
sbb
mov
sub
cmp
xor
jne
outsl
mov
shlb
out
int3
aas
lret
cmpsl
xchg
js
dec
pushf
push
testl
and
daa
rep
mov
std
outsb
cmp
add
push
mov
xchg
imul
iret
outsb
add
shll
fbstp
lds
call
fcmovu
dec
fidivs
pop
mov
iret
sbb
scas
mov
sbb
enter
mov
daa
pop
push
inc
sahf
and
int
sub
sbb
jmp
inc
mov
lret
or
jmp
push
xchg
insl
ret
cs
xlat
cmc
out
jns
lret
imul
aaa
xchg
mov
sahf
in
insb
jb
push
shrb
mov
xor
jmp
movsb
pop
mov
mov
sti
aas
xor
movsl
sbb
orb
movl
or
mov
inc
push
push
inc
add
ljmp
pop
rcrb
add
lret
cmpsl
or
imul
mov
mov
sub
lahf
dec
imul
sub
gs
ret
cmp
fiadds
ss
pop
add
lcall
fists
addr16
jg
into
daa
mov
cld
iret
jp
rcrl
clc
xlat
mov
xchg
dec
movsl
imul
push
lret
test
add
inc
push
into
aas
lods
and
shl
faddl
push
mov
mov
cld
cld
cmp
add
fiadds
bnd
lahf
xor
push
fidivrl
nop
add
insb
mov
int
jle
sti
sahf
push
dec
lcall
jle
or
adc
cmp
add
imul
pop
or
xchg
fstpl
imul
cltd
xchg
stos
sahf
jl
mov
jge
jmp
jae
adc
cli
sub
scas
pop
pop
push
out
mov
fucomp
adc
jns
imul
rorl
insl
cmp
iret
dec
sub
repz
outsl
repz
cmp
adc
in
xor
ds
add
sbb
add
add
lret
imul
hlt
aaa
clc
pop
cmp
dec
fnstcw
arpl
pop
lret
xchg
imul
add
ss
pop
mov
inc
or
cmp
insl
dec
jae
xor
jmp
add
into
xlat
or
leave
divb
pop
mov
cltd
nop
add
xor
out
xor
dec
negb
push
sub
sub
pop
mov
addr16
sub
lahf
out
xchg
adc
mov
or
lods
insl
mov
sahf
xchg
pop
lods
cld
shll
bnd
addr16
jle
pop
xchg
sub
jle
rorl
cmp
cwtl
jp
sbb
dec
push
dec
clc
aaa
mov
mov
xlat
sub
cmpsl
fnstcw
rcr
xor
cld
scas
mov
mov
jns
int
cmp
les
jmp
inc
jg
xchg
idivl
loopne
aam
mov
xlat
leave
adc
pushf
jp
xchg
sti
cld
lods
push
adc
mov
fsubrl
lret
pop
mov
adc
roll
out
lret
inc
nop
add
aaa
std
scas
add
leave
ffreep
aam
fisubs
je
sar
stos
ficoml
xchg
pop
outsl
imul
fnstenv
mov
lahf
mov
mov
lret
int3
inc
or
xchg
jbe
add
int
mov
repnz
xchg
sub
push
out
fbld
sub
push
xor
out
rcll
push
enter
add
out
xor
iret
xor
daa
mov
mov
stc
pop
imul
std
cmp
popf
inc
cmpsl
fnstcw
outsl
mov
sahf
jl
jp
insl
inc
lods
ret
mov
jge
call
fs
cmc
test
jns
iret
dec
mov
sub
pop
popf
into
cs
rcr
cltd
shl
push
jge
cmp
pop
mov
dec
mov
repz
mov
mov
dec
push
stos
sub
arpl
xchg
cli
sahf
jns
loop
in
loop
push
jo
rolb
jmp
or
sub
add
ror
ret
xchg
in
lcall
mov
adc
mov
jnp
lret
pop
sti
and
mov
inc
push
jmp
add
clc
xor
out
out
xchg
test
dec
iret
xor
in
int3
daa
gs
scas
repnz
mov
jge
push
lods
fstl
xchg
xchg
mov
das
mov
add
mov
add
ret
xchg
cmp
sahf
int3
push
cmp
into
mov
cs
jb
xchg
mov
rorl
push
push
mov
stos
or
cmp
lret
enter
cmpsb
lahf
enter
mov
adc
xlat
cmp
push
mov
xor
xor
mov
push
jecxz
movsb
pop
add
pop
adc
add
cmpsl
imul
lret
dec
cwtl
cmpsl
gs
in
jne
mov
pop
ss
lods
insl
out
out
jmp
lret
add
aam
pop
mov
mov
add
pop
mov
movsl
mov
jl
cli
push
xchg
cltd
push
outsb
pop
jg
js
jge
movsl
cmpsl
xlat
lea
sarl
mov
dec
pop
popf
cld
fdivl
dec
repz
lret
jmp
cmp
pop
repz
cmp
jne
gs
xor
aas
mov
adc
das
not
lcall
les
or
pop
mov
cmc
stos
loop
psllq
ficomps
negl
lret
test
inc
jmp
in
imul
push
jbe
pop
mov
jno
out
inc
push
add
movsb
add
sbb
jb
cltd
out
divl
mov
inc
add
insl
gs
add
cltd
imul
out
pushf
cmp
adc
cmp
imul
add
push
shll
mov
dec
fldt
ret
cmpsl
mov
lcall
in
mov
sub
inc
insl
sub
imul
iret
or
mov
add
stc
into
cmpsl
stc
fs
xlat
push
mov
into
mov
into
dec
testb
into
push
jmp
cltd
movsl
sbb
mov
jmp
fwait
xchg
cmp
sub
test
mov
iret
mov
add
ljmp
outsl
lcall
add
cmp
outsb
clc
aam
out
sub
imul
add
in
jmp
push
outsl
fcmovbe
jnp
dec
movd
sub
push
stos
lret
repz
dec
xlat
cmp
dec
mov
stos
hlt
mov
fwait
in
add
mov
pop
add
imul
mov
add
pop
add
fisttpl
mov
pop
mov
xchg
in
cmp
push
adc
sub
aad
mov
mov
sub
mov
mov
sub
loope
push
sbb
mov
jp
push
mov
imul
pushf
xor
xor
add
popf
xchg
xor
or
cmpsl
clc
imul
std
fmulp
jle
ss
and
cmpsl
fstpt
jmp
into
daa
cmp
mov
mov
cmp
mov
jg
mov
aam
mov
push
cmp
add
push
ja
push
and
dec
in
pop
sub
push
pop
mov
ror
cwtl
pop
mov
dec
test
cmpsl
cwtl
pop
cld
stc
xor
test
mov
fwait
pop
mov
dec
notl
cmpsl
xchg
xchg
jg
cmp
push
imul
jle
shlb
enter
sub
adc
icebp
rorb
fisubs
aam
pop
pushl
push
iret
sti
fwait
or
mov
out
lahf
dec
out
jns
outsl
lahf
int
scas
jns
cs
xor
in
cmpsb
jge
out
lahf
jecxz
ds
pop
loop
jge
xchg
inc
ja
adc
fcomip
loopne
lret
pushf
test
push
adc
adc
push
imul
icebp
xlat
lret
push
fstps
push
inc
push
add
cli
add
shl
ja
xchg
pop
int3
stos
add
mov
sahf
cltd
jnp
scas
jno
cmp
push
ret
dec
je
negl
mov
imul
jns
dec
jae
movsl
jnp
aas
fisubrl
cltd
je
sbb
xor
add
cmp
mov
jns
imul
xor
xor
in
xor
or
outsb
call
adc
aam
push
xchg
push
outsb
leave
in
xchg
jae
inc
sub
stc
dec
push
int3
sahf
pushf
dec
jae
cmp
cmpsb
insb
xchg
mov
cmp
popa
pop
aam
pop
jns
jmp
mov
shrl
sarl
insl
push
data16
jo
mov
pop
int3
xchg
stos
das
jne
and
aas
pop
daa
push
pop
jg
rolb
stos
mull
sub
xlat
mov
cltd
mov
movsl
mov
adc
into
xchg
mov
fiaddl
or
adc
jnp
outsl
imulb
repz
loop
add
mov
lds
adc
test
xorps
mov
push
xchg
mov
cli
jns
sub
or
pop
imul
add
or
in
lods
shr
icebp
xchg
push
int
lahf
dec
mov
add
inc
ds
js
pop
push
mov
sbb
insl
iret
std
mov
push
xchg
lcall
cltd
mov
scas
cmp
scas
sub
outsl
into
cmp
pop
lcall
cmp
xor
fisubl
xchg
imul
xchg
lret
mov
cmp
insl
adc
mov
lahf
out
pushf
shrl
popf
xchg
das
mov
mov
jecxz
shr
jbe
or
lods
outsl
std
daa
fnstcw
dec
imull
lret
inc
or
mov
pop
jge
insl
es
lods
or
add
cmpsl
and
xor
addr16
or
push
imul
push
push
add
or
int
into
mov
mov
add
cmp
stos
jecxz
xchg
filds
ret
mov
cmp
dec
push
sti
jns
lret
mov
out
jg
jle
push
mov
inc
jnp
mov
push
shlb
push
cli
push
mov
rcrl
sti
insl
dec
outsb
test
div
adc
shrb
xlat
bnd
jns
jle
popf
jg
pop
adc
mov
lret
adc
movsl
xchg
xlat
xchg
mov
enter
in
push
bound
repz
cmp
mov
push
inc
lds
inc
mov
add
push
adc
add
rorb
push
sub
add
cltd
jmp
leave
sbb
mov
add
jnp
out
call
arpl
rcl
xchg
mov
aaa
sti
cmp
jno
out
or
or
repnz
fildll
imul
push
cmp
pop
repz
scas
cs
jp
fisttpll
dec
lods
jo
leave
cld
xor
sbb
pop
xor
push
fucomip
stc
shr
or
das
je
push
std
lret
lret
aam
icebp
ds
addr16
in
jnp
cmpsl
mov
sbb
outsl
in
aas
lret
mov
ss
dec
sub
fwait
mov
xor
pushf
mov
jno
jmp
shrd
cmp
xlat
stos
sub
add
jno
and
or
daa
pop
imul
push
jmp
out
cmpsl
pop
mov
push
aad
adc
repz
lret
stc
shll
mov
pop
mov
inc
push
sub
mov
in
cmp
movsb
out
out
and
jmp
inc
in
mov
fiaddl
jbe
push
sahf
cltd
push
mov
mov
cmp
cmpsb
popf
cld
pop
mov
add
aad
imul
sahf
mov
das
fcoml
fcmove
xlat
fstp
inc
jb
push
jl
jmp
negl
vpunpckhwd
bound
mov
repnz
mov
pop
or
xchg
lret
push
into
mov
jns
insl
push
data16
mov
icebp
jg
js
shr
aas
lods
ds
roll
mov
lahf
in
sbb
mov
cmp
cld
cmp
icebp
flds
cmp
shr
cmp
lods
movsl
or
jmp
ror
out
cld
cmp
fidivl
jl
sar
scas
sahf
xor
xchg
inc
lahf
mov
add
pushf
icebp
xor
jg
xor
xlat
mov
scas
sub
adc
mov
add
popf
jae
or
movsl
push
jbe
ficoml
jo
sub
pop
xor
rorl
mov
jns
pop
popf
dec
push
cld
aad
aad
adc
xor
mov
cwtl
mov
add
mov
outsl
fwait
rorb
and
test
lods
push
or
out
mov
adc
sbb
sub
sbb
push
jae
aad
cld
xchg
push
insb
insl
push
jnp
jnp
cmp
std
cmpsl
divps
jnp
int
aas
mov
ljmp
sub
xchg
xchg
fs
lret
mov
sbb
or
push
push
fbstp
jnp
add
sti
mov
in
jge
or
and
mov
cmpsb
add
in
into
mov
outsl
enter
jb
cltd
lret
xor
add
lcall
lock
mov
cmp
sub
mov
jmp
mov
jmp
jo
jne
mov
push
fs
jbe
xchg
in
cmp
mov
shll
mov
add
ret
fimuls
jle
imul
jg
into
out
pop
cli
inc
leave
xor
insl
pop
das
pop
ds
fwait
imul
jno
leave
ja
or
shr
pop
into
mov
stc
into
in
mov
sub
jecxz
fbld
pop
mov
sub
jp
sbb
lahf
fstpt
lret
sub
and
repz
daa
push
jo
in
cmpsl
idivb
fcmovb
aad
in
jmp
pop
aam
movsl
pop
insl
bound
push
call
setbe
sti
xlat
inc
test
std
mov
imul
rcl
mov
outsb
sbb
popf
xchg
sbb
pop
push
inc
rorl
ljmp
inc
mov
rcrb
add
movsl
mov
outsl
clc
fsubrp
sub
sub
scas
sbb
xchg
scas
xor
xchg
ljmp
lcall
pop
jbe
cli
int
inc
inc
inc
mov
add
add
xor
sti
inc
in
mov
fadds
cmpsb
mov
arpl
add
std
inc
ds
iret
shlb
xor
jge
xor
push
pop
std
das
jns
imul
insl
jb
pop
dec
ficomps
out
out
lods
icebp
iret
leave
pop
mov
divb
pop
jg
mov
add
fcomi
int3
shr
sub
jg
push
xor
faddl
shll
pop
in
cmpsl
fiaddl
jbe
jae
sub
popf
dec
jl
shlb
pushf
mov
jmp
mov
sub
clc
xor
movsl
xchg
lahf
sub
imul
loopne
rcl
pop
adc
push
mov
mov
inc
pop
jnp
cmp
in
cmp
or
repz
push
scas
insl
movsl
cmp
xchg
mov
pushf
roll
stos
inc
sbb
lret
xor
sub
jae
icebp
ds
mov
cmp
in
lret
pop
in
lods
std
pop
cs
dec
mov
and
stos
test
out
cld
cmp
mov
ljmp
test
clc
aad
outsl
mov
sub
add
fimull
mov
call
fucomip
lret
enter
xchg
lcall
sub
jmp
lahf
xor
daa
add
divl
in
ss
rolb
push
lret
mov
popf
insl
push
lahf
mov
mov
cmp
mov
shl
imul
jae
jb
add
adc
xor
cltd
scas
imul
int
shlb
mov
fstpt
mov
cltd
iret
cmp
mov
cmpsl
divb
rclb
mov
lahf
lods
jle
cli
cld
aam
cld
shl
pop
iret
aam
sub
inc
mov
icebp
xor
shlb
push
imul
sahf
decb
mov
sarb
repz
jl
pop
mov
mov
lcall
jns
dec
or
jge
das
jecxz
dec
scas
jge
outsl
sahf
shlb
roll
int
pop
out
sub
mov
imul
in
mov
movsl
out
cmp
cmpsl
xchg
mov
in
int
mov
or
cmp
jge
popl
pop
mov
iret
adc
std
movsb
ljmp
mov
lcall
outsl
push
cmp
sub
adc
movsl
lcall
add
sbb
sti
inc
std
into
enter
jbe
add
add
movsl
outsb
imul
mov
xlat
jg
sub
insl
popf
in
cmpsl
sahf
cltd
sahf
pushf
shrl
or
in
das
lcall
cmp
sub
aad
lahf
fiaddl
fisttpl
negb
xchg
add
repnz
xchg
add
xor
fcmove
dec
in
movsb
scas
sub
add
hlt
sti
sub
repnz
lahf
out
jl
fcmove
xlat
mov
ljmp
scas
fidivrl
dec
je
cmc
xchg
imul
cli
imul
xchg
push
mov
int
mov
mov
pop
insl
push
daa
cs
xchg
scas
sub
mov
push
mov
xchg
xor
mov
add
lods
jo
stc
cmc
mov
xchg
aam
rclb
insl
cmp
lret
cmpsl
push
push
out
xchg
ja
sti
hlt
lahf
pop
sahf
cwtl
dec
ffreep
fisttpll
out
iret
loopne
ljmp
dec
jg
loopne
ss
cmp
icebp
shll
ret
cmc
dec
insl
mov
jne
insb
lods
lret
imul
cmp
repz
sub
imul
dec
push
cli
mov
fwait
mov
mov
jmp
add
add
lret
lret
cmp
lret
lret
pop
std
cmpsl
lahf
inc
add
inc
pushf
int
inc
ja
cltd
repz
in
lahf
inc
jecxz
mov
xchg
dec
aam
rol
mov
into
xchg
call
jg
in
dec
push
push
push
mov
in
lods
mov
das
in
sub
fs
or
adc
in
lahf
sub
lods
int3
fcmovbe
int
das
push
mov
jg
xchg
jb
dec
push
or
inc
in
lcall
xor
cmp
int
lods
fisubrs
popf
inc
outsb
adc
jge
add
jge
jo
inc
ficoml
or
sub
lahf
mov
scas
push
jbe
les
sub
cmp
xchg
stos
lahf
adc
lahf
sti
sub
pop
mov
pop
stc
aam
mov
xchg
stos
fldenv
cmp
repnz
push
aad
push
imul
in
mov
sahf
popf
scas
cld
fcmovbe
cmp
insl
dec
repz
out
sbb
cmp
mov
icebp
fmul
xlat
lahf
mov
and
or
shr
out
sarb
pop
shl
mov
int
dec
pop
mov
dec
push
pop
ret
pop
push
dec
adc
mov
xchg
xchg
lock
push
pop
add
orb
gs
jbe
jno
pop
and
mov
push
popl
push
jo
dec
outsl
xor
imul
cmp
xchg
mov
xchg
sbb
mov
push
sahf
xchg
outsl
repnz
cmpsl
sti
jns
imul
imul
pop
into
in
xor
pop
cmp
call
aam
jns
daa
xchg
pushf
mov
enter
mov
aam
pop
mov
in
aad
dec
cli
sub
lcall
pop
lods
leave
das
cld
jnp
enter
cmp
scas
cld
fxch
add
lahf
cmpsl
ss
cltd
pop
loop
in
xchg
lahf
out
in
imul
mov
mov
imul
mov
daa
pop
lahf
repnz
rorl
iret
frstor
jnp
imul
cmp
addr16
fwait
int
mov
sub
push
dec
out
lahf
lods
mov
inc
pop
sbb
dec
das
jbe
push
mov
scas
cmp
imul
insl
movsl
inc
out
cmc
lds
pop
mov
out
add
pop
stos
push
pop
adc
lea
into
sub
cmp
cmp
xor
cmp
arpl
dec
cmp
scas
pusha
sub
xor
inc
inc
fsubs
xor
xchg
add
inc
pop
pop
push
mov
imul
xchg
leave
stos
push
cs
sub
inc
cmc
mov
js
mov
out
sarb
pop
sub
push
lods
push
mov
push
aas
inc
push
lea
popa
lahf
shlb
lcall
cmp
sub
aas
cmc
cli
rcrl
inc
adc
xchg
ljmp
cltd
testb
into
pop
add
mov
dec
xchg
lahf
cmp
and
mov
fcomi
scas
mov
scas
ror
xchg
jp
jns
aam
scas
lret
push
vmovaps
mov
pop
pop
sub
pop
lods
or
jmp
mov
cld
pop
lcall
sbb
imul
jnp
cmp
adc
adc
xchg
fisubrs
aaa
cmpsl
addr16
pop
pushf
rorl
push
or
pop
jne
sub
jmp
add
push
sahf
scas
mov
pushf
int3
or
jb
inc
xchg
push
addr16
cmp
jmp
cmp
mov
insl
shrl
add
cld
push
lea
add
rclb
xor
outsb
add
or
out
mov
push
xchg
scas
add
iret
dec
jbe
cs
lcall
xor
mov
add
dec
add
rcll
add
push
add
dec
sti
dec
mov
ret
dec
imul
outsb
ja
mov
addb
nop
mov
loopne
das
sub
xor
test
cmp
inc
je
add
pop
push
outsb
insb
addr16
cmp
pop
and
sbb
lahf
xor
dec
fdivrs
add
lahf
pop
add
insb
fisubrl
cmpsl
push
xchg
lahf
clc
inc
popa
dec
inc
or
sbb
ss
jg
mov
repnz
pushf
in
jle
iret
sti
hlt
xchg
pop
dec
add
adc
pop
in
cmp
push
jmp
inc
fcomps
jbe
jmp
aam
jne
fdivs
sub
xchg
cmp
ret
fldt
loop
fs
lret
icebp
jbe
pop
and
pop
sub
xchg
imul
jno
pop
test
add
fs
add
or
icebp
mov
into
test
test
out
outsb
pop
add
enter
fs
pop
pop
add
nop
or
adc
loop
or
or
loopne
jns
lret
ja
movsl
xchg
idivb
cli
repz
dec
out
mov
test
add
por
frstor
scas
iret
into
sub
scas
cld
xlat
je
mov
push
add
scas
fwait
jmp
mov
out
jp
stc
fucomi
sub
ja
movsb
mov
push
sarl
ret
enter
in
iret
jp
push
outsb
mov
ljmp
mov
inc
inc
cmpl
push
push
je
jbe
outsb
jecxz
bound
push
dec
dec
pop
pop
push
sub
lock
adc
or
sub
cwtl
push
cmp
scas
pop
lods
rdtsc
inc
jl
sub
inc
adc
cmovns
sbb
push
xadd
dec
insb
das
push
push
test
xchg
pop
mov
cs
cmpl
dec
push
sbb
xchg
inc
jmp
pop
or
mov
add
pop
add
push
pop
cmpsl
adc
fstps
and
cmpsb
ret
dec
addr16
jae
stos
aam
stc
int3
rolb
in
or
out
jg
pushf
jae
dec
cmp
dec
pop
inc
fcomps
bound
sbb
mov
fcoms
fistpll
mov
movsl
jmp
cmp
push
sahf
mov
xchg
push
add
mov
outsl
pop
addr16
pop
sub
push
add
cmp
add
fnstsw
bound
push
icebp
dec
sub
rcrb
xor
sbb
pop
pop
outsb
ret
push
lret
push
clc
mov
and
jns,pt
cmc
xchg
popf
add
jo
xchg
xor
push
aas
out
mov
jae
add
movl
imul
inc
jmp
push
mov
out
cwtl
jno
lea
repz
or
pushf
fwait
adc
jge
sbb
pop
aad
lcall
adc
add
dec
add
xchg
sub
sub
cmp
scas
push
notl
dec
pop
add
jne
or
rorl
add
subl
jno
andb
pop
sbb
bound
sub
ror
sub
ret
sbb
inc
dec
subb
sub
cmp
cmp
lahf
dec
dec
pushf
sbbl
cmp
sbb
push
push
inc
and
and
adc
sub
cmp
jb
inc
int
fisubrs
dec
inc
xchg
enter
mov
pop
adc
inc
outsb
cmp
rcrl
pop
add
shrl
and
test
pop
lds
inc
mov
cltd
mov
sub
lods
xlat
mov
dec
je
pushf
jp
push
push
or
data16
xchg
jae
inc
ds
fs
aam
test
stos
mov
add
pop
fcomps
cld
shll
pop
ja
or
sub
push
jnp
lods
mov
ffree
insl
sbb
jno
mov
mov
sub
mov
lds
lods
sub
mov
mov
je
scas
push
add
outsl
lods
enter
pop
xor
jbe
add
add
pop
add
leave
mov
push
and
aam
pop
int3
shlb
sbb
dec
xchg
gs
fisubrs
and
insl
push
add
push
and
std
ss
ror
leave
xchg
outsb
repnz
negl
dec
gs
add
mov
insl
add
xor
shrb
cmpsl
add
sbb
or
push
add
aad
adc
sbb
push
push
pushf
sbb
adc
mov
jecxz
add
aaa
push
int
rorb
aam
mov
cmp
lret
hlt
scas
into
cmp
daa
insb
xor
add
add
or
cmp
mov
test
inc
dec
dec
inc
gs
and
jb
jl
xchg
outsb
cmp
scas
push
xchg
add
push
sahf
mov
stos
add
repnz
mov
push
inc
dec
inc
mov
jp
jns
hlt
sbb
pop
pop
movsl
shr
or
add
or
adc
fmull
and
inc
inc
sbb
shr
ret
test
outsb
and
addl
pop
pop
mov
test
add
pop
cmp
pushf
int
arpl
bound
xor
shrb
and
dec
jno
imul
or
aam
mov
jg
shll
push
pop
dec
pop
inc
fcomps
repz
pop
inc
fcomps
jge
cmp
negl
pop
loop
xchg
jae
cmp
add
jl
lods
sub
fadds
push
call
cwtl
test
dec
mov
into
cmpsl
adc
arpl
mov
loope
push
cmpsl
add
pop
leave
fisubl
push
js
pushw
imul
lods
int
cmpsl
or
xlat
sti
mov
pushl
sub
push
addr16
enter
mov
aaa
cmp
xor
add
dec
add
lret
xor
in
xchg
pop
decl
mov
int
gs
movsb
add
pop
mov
add
mov
push
inc
repz
adc
pop
sbb
shll
daa
data16
lret
subl
mov
push
sub
in
xor
sbb
rcrb
out
mov
dec
les
stos
lahf
insl
pop
enter
mov
stc
fbld
push
add
add
xor
arpl
dec
lea
add
add
dec
dec
cmp
xchg
loopne
imul
les
outsl
gs
push
xor
and
in
cld
adc
sti
inc
push
stc
cli
arpl
or
xor
imul
decl
ret
loope
or
or
sub
fmull
imul
cld
mov
jo
push
insl
fisubl
rcrl
imul
dec
push
xchg
mov
push
sub
xchg
test
outsl
out
jns
lods
ret
addr16
fucomip
out
mov
scas
cmp
rcll
shl
cmp
jmp
inc
fcomps
push
imul
push
fcoms
cmc
sbb
out
pop
pop
xchg
scas
cmp
outsl
flds
mov
push
flds
ja
mov
add
sbbl
popa
popf
bound
pop
xchg
push
mov
xchg
lods
mov
pandn
add
sarl
int3
imul
adc
rcrb
imul
cmp
in
adc
sbb
pushf
lods
pop
mov
xchg
enter
xchg
dec
out
cmp
lahf
rolb
icebp
movsl
jnp
inc
imul
lods
loope
cmpsl
mov
into
mov
decb
dec
pop
jmp
adc
popf
add
or
adc
push
push
jg
jno
imul
add
pushf
add
pop
loop
jge
aaa
dec
fwait
aam
push
push
sub
inc
fwait
jecxz
sub
add
add
jp
lret
popf
jbe
shrb
or
call
mov
dec
sub
adc
sahf
test
inc
dec
loopne
popa
data16
lds
ret
jnp
xorb
push
jg
add
scas
test
lret
lret
imul
jb
ss
push
push
dec
aam
fldl2t
mov
aaa
cmp
mov
add
addr16
cs
add
or
sbb
lahf
push
dec
or
mov
sbb
test
je
xor
push
xchg
stos
xor
inc
or
cmp
push
insl
and
or
cltd
fs
cmpsl
adc
or
aam
mov
jae
jbe
int3
cmp
loop
pushf
insl
decl
dec
cmc
sahf
cmp
xor
fwait
clc
into
jmp
sub
in
cmp
rcl
mov
out
imul
add
cmp
jne
fs
mov
out
icebp
repz
xchg
mov
popf
push
jnp
loop
test
dec
popf
sub
pop
lret
mov
inc
xchg
and
lods
and
mov
sub
into
lret
das
lret
lret
dec
add
aam
cmp
repnz
lods
dec
sbb
pop
scas
pop
lds
clc
rclb
fxch
jnp
jnp
add
test
add
lds
shr
mov
scas
push
aam
cltd
cmp
pop
lds
sbb
or
cmp
movsl
sub
mov
sti
or
xchg
outsb
repnz
movsb
icebp
nop
jnp
aas
out
pop
jns
enter
or
jno
inc
mov
mov
int
cmp
sub
fimuls
add
xchg
xchg
push
mov
push
add
xchg
aas
das
fmull
push
mov
sub
jo
jecxz
sbb
fidivrl
aam
pop
repz
imul
xchg
sub
pop
lds
pop
enter
sbb
aam
sbbb
inc
jge
xchg
jo
push
add
imul
lods
add
jnp
pop
dec
arpl
xor
jns
jge
rorl
add
push
push
dec
pop
sub
push
inc
add
and
push
push
sub
sub
push
cld
into
push
int
fst
xorb
xchg
pop
xchg
cmpsb
enter
fildl
push
or
mov
xor
decb
push
inc
adc
gs
dec
lds
xchg
shrl
mov
out
dec
icebp
mov
lret
rcl
sub
scas
or
pop
add
fmul
in
mov
imul
fdivs
inc
push
cmp
aam
jae
ljmp
adcl
jl
test
leave
shrl
mov
fadds
bound
mov
andl
movsl
sbb
mov
mov
imul
dec
add
pop
adc
and
in
adc
fsts
mov
fcomps
insl
xor
sub
ja
push
sti
adc
imul
sub
add
test
add
sarl
mov
mov
std
pop
mov
adc
ror
ds
jo
or
xchg
sub
lods
mov
mov
push
mov
pop
and
xor
lods
arpl
dec
or
jae
pop
in
fisubrs
in
cmp
aam
push
addb
testb
push
enter
jnp
fwait
mov
xor
lds
pop
jno
mov
mov
imul
jnp
out
jmp
negl
mov
add
or
into
mov
push
dec
push
inc
push
push
cmp
test
xor
pop
sbbb
jl
pop
orl
rolb
cmp
pushw
outsl
nop
xchg
mov
pop
rcrb
js
jo
cwtl
shll
inc
hlt
jae
jnp
jbe
imul
adc
push
push
jno
or
mov
pushf
push
fistpll
into
mov
push
outsl
call
stos
mov
out
jo
xchg
shll
sbb
lahf
popl
mov
cmp
xor
js
pop
es
loope
notb
imul
dec
or
int
repnz
fimull
fists
mov
xchg
fstpt
push
cld
mov
sub
in
fnsave
imul
mov
out
lcall
insb
into
das
andb
movsb
add
push
mov
jne
or
bound
stos
mov
loop
rolb
jmp
or
fistps
cld
rcll
aam
lret
iret
or
movsl
sub
mov
mov
std
lcall
push
aam
mov
xchg
into
xchg
adc
out
jmp
gs
bound
or
xor
ja
ljmp
jg
ficompl
std
jp
popf
popf
mov
aad
outsb
sub
imul
movsb
xchg
pop
or
jp
mov
lcall
adc
mov
lea
mov
push
enter
and
xchg
adc
xchg
cmp
data16
pop
xor
push
sub
xor
fincstp
leave
fucomip
aam
push
pushf
lods
sahf
pushf
repnz
leave
sub
jecxz
addr16
cwtl
lret
sbb
scas
clc
mov
movl
push
nop
mov
jb
xorb
add
sbb
sub
dec
or
jne
xorb
lods
mov
add
xchg
mov
insl
data16
js
pop
dec
loope
pusha
out
dec
sub
or
and
push
fcom
dec
icebp
out
jo
dec
pop
add
push
jl
pop
mov
pop
add
ret
cmp
movsl
xor
mov
arpl
sub
push
xchg
aaa
pop
adc
imul
into
out
sahf
xchg
push
das
mov
mov
mov
sahf
rcrl
mov
mov
lret
xchg
jmp
std
stos
push
pop
inc
fcomps
js
xchg
push
data16
inc
fcomps
pop
or
fistps
cmp
fstp
mulb
fs
add
xchg
cmpsl
int
ljmp
and
mov
push
add
xchg
mov
jbe
add
popa
aam
xor
movsl
outsb
inc
lret
push
push
imul
jp
jnp
cmp
lea
or
cs
fisubrl
leave
mov
roll
rorl
adc
ljmp
add
jb
jnp
mov
sahf
lea
mov
mov
arpl
enter
push
jbe
xor
lcall
pushf
pop
scas
enter
add
movsl
imul
mov
add
add
test
ficoml
lret
into
or
jg
mov
or
mov
or
xor
jns
fisttpl
in
out
repz
xlat
out
jne
xchg
les
push
add
push
mov
or
ss
add
inc
loopne
adc
add
inc
aas
pop
insb
imul
push
push
cwtl
pop
adcl
movsl
add
mov
mov
popf
cmp
jno
add
jg
jnp
and
pop
or
pop
and
jge
xorl
xor
les
add
pop
adc
pushf
orb
fistpl
gs
xor
sub
and
outsb
or
fs
inc
dec
push
inc
or
adc
sub
xor
lods
or
lahf
popf
cld
cli
xchg
cmp
or
arpl
lcall
rcll
fcoms
fucom
test
aam
push
ficompl
or
imul
pushf
out
notl
jmp
add
lahf
cmpsb
and
jle
and
xor
add
or
sub
js
pop
xlat
xchg
add
and
stos
imull
enter
jnp
mov
or
and
or
imul
lret
pop
mov
pop
popa
lds
dec
adc
int3
mov
cld
mov
imul
push
shl
add
aam
loopne
ja
xchg
dec
or
cmp
and
pop
add
adc
pop
ret
stos
das
xchg
jno
xchg
cmp
mov
pop
add
mov
cmpsl
sub
cmpsb
lods
sbb
lret
xor
ss
push
or
test
mov
mov
sbb
movl
lods
movsl
add
in
shll
test
aad
inc
or
push
add
imul
pop
ljmp
inc
dec
push
add
and
and
inc
add
inc
inc
push
pop
pop
pop
add
dec
push
push
addr16
mov
xchg
pop
loopne
lahf
fwait
js
push
jb
mov
lea
addr16
popa
jp
lock
and
pop
sbb
adc
cmp
ds
clc
pushf
sub
scas
in
sbb
sbb
les
lods
sub
xor
mov
pop
dec
push
pop
dec
add
adc
fstps
arpl
pop
jecxz
popf
scas
daa
add
push
jnp
cs
xchg
cwtl
addl
adc
mov
push
xchg
add
out
aaa
mov
xchg
jae
sub
jmp
push
into
mov
adc
ret
aas
pop
into
mov
ss
adc
cmp
cmp
push
repnz
lahf
sub
cmpsl
pop
xchg
inc
movsl
jne
imul
push
popf
dec
add
out
and
cli
imul
add
fucomp
test
fisubs
xlat
mov
sub
or
nop
push
bound
insl
ds
cmp
into
mov
movsl
add
loop
imul
sbb
xlat
xchg
out
cmp
ret
or
mov
lcall
xchg
cmp
xchg
sub
int
push
outsl
inc
pop
clc
leave
pop
push
jnp
fisubs
and
xor
xchg
stos
sahf
jns
xchg
push
int
imul
pop
mov
fwait
add
and
aas
ret
sub
aaa
cmp
sub
repz
ds
inc
jg
in
mov
dec
push
dec
add
pusha
push
outsl
enterw
pop
std
rclb
sbb
dec
inc
dec
dec
and
add
sbb
cmp
hlt
cmp
ds
cmp
and
outsl
and
pop
sub
dec
aam
dec
xchg
pop
roll
mov
cmp
sbb
xlat
cmp
or
ret
fs
jl
iret
lock
xor
sti
jnp
add
add
movsl
rcrl
dec
inc
loop
sarb
rcll
aam
sub
add
scas
into
xor
or
sub
push
stc
aam
repnz
pop
stc
xlat
movsb
fidivrl
dec
in
cmp
test
mov
cmp
ja
or
cmp
push
je
jbe
jge
cmp
push
mov
stos
jae
mov
addr16
daa
pushf
pop
mov
mov
add
or
dec
clc
cmp
mov
sub
pop
mov
jo
mov
and
scas
push
jae
cld
into
dec
push
iret
jbe
jae
sti
fimuls
das
sbb
inc
push
rcll
movsb
push
add
mov
inc
push
push
out
out
push
lock
dec
dec
add
jae
mov
or
xchg
or
sbbb
bound
push
arpl
jbe
cmp
cmp
sub
adc
adc
cmpsl
push
push
adc
minps
sbb
addb
dec
push
push
dec
mov
cmp
push
lahf
mov
ss
or
aaa
fiaddl
into
lret
mov
ret
pop
jecxz
inc
add
ss
xchg
out
lahf
lods
int
std
dec
cs
aas
decb
jno
lret
sub
jl
jnp
mov
repnz
shlb
xor
iret
xlat
loop
lahf
lods
in
cmpsl
fstpt
mov
clc
into
in
ja
pop
aad
jo
jns
dec
std
xchg
cmp
jnp
jmp
fstpt
in
je
cli
mov
test
jno
mov
jo
lods
call
xchg
jae
ja
adc
int3
sub
pop
pop
int
xchg
xor
sahf
xchg
jl
rorl
ljmp
push
hlt
stos
repnz
lcall
fidivrl
js
stc
xlat
pop
cmc
jns
mov
lahf
enter
cmpsb
fidivrl
cmp
lds
mov
roll
insl
mov
sub
dec
in
xor
sti
xchg
mov
stc
aam
out
sahf
sti
add
xchg
outsb
in
inc
in
mov
js
jl
jl
sti
std
ljmp
pop
mov
das
jnp
leave
jg
adc
sub
dec
pop
dec
insl
xchg
sbb
push
and
xlat
sbb
add
mov
xor
pusha
shlb
jo
add
jo
jge
inc
inc
cmp
sbb
rcrl
mov
rcll
jns
movups
mov
or
add
or
out
fildl
add
sub
sub
sub
repnz
push
add
ja
jns
push
mov
idivl
into
int3
fiaddl
jns
dec
idiv
rcll
hlt
addr16
inc
cltd
sub
jb
push
pop
push
int3
mov
add
push
int3
cmp
or
into
jg
mov
sti
in
add
cmp
cmc
stc
shll
add
std
xlat
testb
push
xlat
cmp
cmp
push
jae
gs
loop
jg
cmp
lds
mov
inc
dec
push
lods
add
aaa
pop
fistpl
out
sub
aaa
mov
jns
sbb
xor
fidivl
add
mov
not
out
dec
push
or
mov
jl
sti
pop
push
scas
insl
or
push
cmp
in
cltd
xchg
mov
in
mov
jge
aad
mov
dec
cmpsb
xchg
sub
cs
push
cld
addr16
xor
iret
stc
ds
cmp
jnp
mov
hlt
mov
xchg
and
mov
into
and
scas
into
xlat
imul
pop
lret
mov
cmpsl
jge
pop
xor
cs
sbb
rcll
clc
addr16
pop
add
xchg
es
or
ja
pop
rcl
jo
cmp
inc
add
push
xchg
lahf
mov
cmp
loope
pop
pop
dec
jo
es
push
iret
les
test
sti
push
int3
in
sarb
sbb
push
and
jle
cmp
cmp
add
pop
push
push
push
fiadds
imul
jmp
clc
push
jnp
mov
fwait
sahf
lret
mov
mov
push
dec
testl
roll
arpl
fucomip
lret
push
dec
or
xchg
pop
in
xlat
pushf
dec
popa
outsl
mull
jb
inc
jl
leave
push
fs
or
cmc
push
push
push
push
lret
inc
add
inc
push
imull
sub
icebp
into
iret
mov
scas
imul
ds
cld
lret
xchg
mov
rcrl
fistpll
mov
add
aad
jo
cmp
cmp
int3
mull
aas
into
stos
sub
in
insl
sbb
mov
aam
popf
push
jb
jnp
das
push
jo
int3
shlb
fisubrl
jae
sbb
cltd
testb
int3
shrl
push
xchg
ja
aam
fcmovb
shll
mov
fisubs
out
movsl
dec
jae
xchg
jb
push
cmc
out
inc
pop
push
jnp
outsl
aas
ret
add
out
sbb
sahf
pop
dec
push
movsl
mov
ja
int3
popf
push
jae
inc
cmp
frstor
push
test
mov
push
addl
es
outsl
pop
add
xchg
int
sahf
mov
cltd
pop
mov
cmp
fildll
test
push
push
add
lock
sub
inc
push
sti
xchg
int3
std
jbe
pop
aam
negb
cld
cmp
lret
rorl
sub
in
xor
scas
jbe
or
jecxz
add
cmp
pushf
clc
aas
inc
rcll
std
dec
jmp
aas
fbld
cmp
inc
in
lods
ret
cmpsl
xchg
mov
add
push
jne
push
in
lahf
push
inc
add
repz
out
sub
stos
cmpsb
cmpsb
xlat
mov
cld
sarl
stos
cmp
xor
jmp
sahf
pop
clc
cmp
lods
addr16
push
or
mov
dec
test
lret
rorb
cmpsb
fbld
xor
leave
xor
lds
daa
cltd
lahf
xor
xchg
jmp
insb
cli
jl
fisttpl
scas
jns
cmp
outsl
outsb
sub
push
pop
insl
cmpsl
fnstcw
jmp
out
mov
add
xor
jecxz
stc
aas
fiadds
jnp
or
or
dec
jne
cmovge
mov
insl
jne
dec
out
cmp
arpl
xchg
stos
fisubl
jle
aas
movsl
and
mov
mov
add
mov
sti
aas
jecxz
mov
jo
test
adc
push
sub
sarl
movsl
add
mov
add
push
in
push
inc
jmp
rcrl
dec
pop
cld
lods
shll
outsl
addr16
stc
je
call
lret
jecxz
add
push
insl
fs
xor
pop
cmp
lret
ljmp
in
das
mov
mov
imul
repnz
lret
dec
inc
movsl
ds
rcl
out
sub
outsb
add
gs
pop
jg
cmp
lds
cld
cmp
cmp
cli
push
data16
xchg
mov
scas
cmp
jae
jmp
push
add
rcrl
ja
or
mov
lret
xor
movsl
std
push
test
jg
aam
scas
xor
mov
das
lahf
jecxz
add
repz
cmpsl
push
sbb
ljmp
aam
add
out
sub
gs
movsl
mov
fucom
adc
lret
lcall
fisttpll
sbb
in
mov
gs
dec
push
popf
mov
push
mov
push
cmp
shlb
jno
xchg
hlt
movsb
call
scas
mov
sub
dec
lcall
std
sahf
ds
push
je
pushl
fimull
jg
jno
jno
push
and
repz
jmp
test
push
shll
and
mov
lcall
xlat
in
sarl
cmp
push
icebp
cmp
sub
aam
popa
cmc
pop
mov
or
xlat
lcall
scas
pop
rcrl
xchg
mov
lret
mov
iret
repz
xchg
sbb
jno
dec
icebp
lret
dec
push
enter
rorl
mov
arpl
push
out
ja
int3
mov
add
fimull
add
push
insl
push
pop
movl
dec
lcall
std
fmulp
dec
and
je
repnz
dec
push
lahf
mov
xchg
push
ret
aam
adc
fcmovbe
add
add
movsb
in
xor
outsl
xlat
imul
movsl
inc
addr16
fs
stos
iret
jo
test
cli
fwait
jo
add
xor
jbe
imul
jae
jmp
add
push
mov
cmp
mov
imul
adc
ds
mov
lods
repz
iret
lret
push
mov
enter
fidivl
lahf
xor
fidivrl
addr16
xor
scas
int
mov
cmp
test
mov
cmp
mov
cld
ljmp
or
sub
testl
out
jge
outsb
test
mov
push
in
fidivrs
jae
stos
mov
adc
cmp
lahf
fstpt
iret
mov
iret
or
mov
sub
dec
or
cmp
push
mov
out
mov
add
mov
in
mov
mov
imul
xchg
xchg
int3
repnz
mov
push
cld
lods
popa
roll
dec
sub
sahf
pushf
mov
xchg
push
ljmp
sub
rorl
xchg
gs
cmp
cmp
jb
addr16
xchg
cltd
rorb
mov
into
lods
movl
rol
lret
dec
or
outsl
xor
jns
dec
add
add
cltd
hlt
scas
fnstcw
cmp
xchg
lds
add
stc
fsubrs
ret
cmp
add
mov
mov
xchg
mov
movsl
mov
sahf
imul
into
mov
sub
add
lret
mov
jb
int
xchg
cmp
movsl
lahf
out
mov
mov
push
jne
fiadds
fisttpl
jle
push
jg
jns
aam
repnz
pop
popf
cli
les
movsb
pop
dec
push
scas
jge
pop
lcall
cs
das
iret
shll
scas
cmp
iret
rep
lret
or
addr16
sub
into
popf
dec
insl
mov
mov
inc
fucomi
daa
mov
lret
repz
imulb
xlat
jnp
dec
sbb
push
jp
scas
mov
cmc
iret
enter
jns
pop
cmp
call
and
addb
enter
gs
fimull
push
pop
call
mov
in
mov
rclb
div
add
lret
addr16
popf
lahf
cld
popw
xchg
adc
mov
int
mov
push
jb
lcall
sub
xor
test
mov
addr16
clc
push
iret
into
cmp
decl
cmp
mov
int3
movsl
or
cld
clc
xor
cmp
cmp
rcl
dec
add
xor
lahf
mov
dec
mov
roll
in
xor
in
rep
cmpsb
test
mov
imul
jge
sub
xchg
ja
sti
dec
nop
cld
rcrb
enter
fucom
adc
mov
test
in
sbb
jecxz
mov
fimull
std
int
lahf
aaa
out
mov
int
das
jecxz
sarb
pop
shll
add
lds
jmp
or
roll
xchg
aam
pop
dec
add
enter
lret
sub
insl
into
repz
cmp
in
xor
jmp
in
fisubrs
cld
xlat
push
xchg
pop
push
jnp
mov
imul
mov
dec
and
out
out
mov
push
xor
push
mov
test
dec
sub
aam
je
xchg
xor
push
xor
mov
pop
aad
mov
inc
add
pop
add
add
sti
dec
lahf
mov
xchg
mov
out
negb
sub
mov
dec
je
repnz
mov
std
fld
push
addr16
add
cmp
jo
popf
mov
jnp
mov
jmp
stc
aaa
lret
sbb
dec
sub
pop
std
in
add
imul
cmp
jle
ror
jne
imul
faddl
into
push
lods
push
repz
dec
mov
test
movsb
test
or
adc
jno
cmpsl
add
outsb
sub
jno
imul
jo
xchg
sahf
addr16
add
into
push
std
cmp
push
fidivl
pop
iret
roll
dec
sub
cli
mov
negl
adc
lret
xor
xor
pop
cmp
cmp
xlat
mov
xchg
in
cmpsl
push
imul
fidivrl
dec
out
imul
push
add
shl
or
xchg
mov
mov
aas
xor
imul
aam
rcr
icebp
fst
pop
icebp
sub
adc
negl
dec
aas
lods
fbstp
dec
dec
sub
cmp
xlat
aas
lret
scas
sub
scas
sub
into
jle
or
mov
cli
negb
xchg
lret
stos
sahf
adc
stos
sahf
adc
aad
push
pop
stos
and
mov
or
jg
lret
outsl
mull
clc
jp
cltd
sub
jae
je
add
pushf
dec
into
xor
lahf
arpl
pop
lahf
add
in
jl
cli
daa
push
iret
icebp
jne
stc
lret
shll
mov
cltd
pop
sti
stc
enter
lcall
cmp
xlat
sub
jmp
movsl
cmpsl
sbb
xchg
xor
push
cmp
insl
pop
into
and
mov
movsb
in
cmp
add
shll
or
lahf
daa
fnstcw
in
add
fisubrs
mov
lret
iret
mov
fs
push
insl
jae
mov
bnd
cmp
dec
mov
aas
cmp
cmp
xlat
out
and
push
pushf
stc
cmp
ficoml
dec
fnstsw
pop
ss
aas
test
movsb
out
jecxz
iret
xor
lods
jns
iret
imull
fstpl
leave
pop
cwtl
dec
ja
fcmove
notl
test
in
sahf
pushf
rolb
cs
mov
xlat
xchg
imul
mov
into
int3
cmp
mov
dec
negl
lods
push
pop
jecxz,pt
add
vcvtsd2si
adc
xchg
lahf
xor
pop
lret
movsl
lcall
jns
iret
movsl
xor
pop
jne
xchg
sub
cmpsl
pushf
cltd
mov
fcoml
in
ds
jno
scas
add
arpl
std
mov
dec
push
xchg
imul
dec
fiadds
push
pop
imul
mov
mov
in
mov
mov
dec
test
xlat
in
jle
lret
movsl
or
push
lds
xchg
sub
jle
sar
dec
in
lods
outsb
std
mov
sub
pop
fistps
rcll
jns
scas
add
shrl
jmp
add
into
shrl
add
call
std
into
sahf
cmp
mov
push
cld
inc
popf
rcrl
adc
cltd
sahf
cltd
push
popf
inc
insl
push
aas
mov
cmp
aaa
sti
fists
adc
dec
ljmp
sub
ds
mov
xchg
scas
and
ljmp
lods
push
lahf
xlat
push
stos
lret
mov
inc
in
or
rcrb
dec
in
cmp
mov
xchg
repz
in
pop
cmp
lret
dec
repnz
pop
sub
sub
cmpsl
add
jns
add
pop
inc
aad
pop
add
xor
aam
bnd
xchg
push
jns,pt
cmc
adc
mov
cmpsl
push
dec
div
add
or
into
mov
push
popa
pop
add
pusha
pop
or
frstor
call
xchg
cmpsl
insl
xchg
out
dec
imul
into
cmpsl
hlt
test
cmpsl
stc
icebp
xor
iret
test
daa
addr16
daa
mov
lret
ret
or
add
das
dec
in
lahf
xchg
jae
dec
add
rcrl
xchg
lds
into
call
ds
test
in
xor
in
xor
test
sub
cmp
sahf
scas
out
das
jnp
imul
pop
test
std
cld
shl
cltd
lret
push
cmp
int
das
int
daa
xchg
cltd
sahf
pushf
push
jns,pt
cmpsl
add
outsb
jmp
jl
jnp
inc
sti
fisttps
mov
cld
aam
ds
into
add
aaa
cmp
out
ja
xlat
and
iret
jmp
xchg
sub
jbe
pushl
jbe
cmp
loop
jns
imul
cmpsl
mov
xor
xor
push
out
mov
xor
jno
outsb
mov
fisttps
pop
shlb
idivl
pop
mov
ficompl
jns
gs
cmpsb
movsb
out
out
xchg
jecxz
xlat
mov
mov
mov
push
sahf
sbbb
iret
addb
dec
outsb
mov
lcall
mov
jp
pusha
into
mov
add
in
sub
push
lret
sahf
dec
push
rcll
mov
rcrl
or
pushf
jle
shl
jne
push
pop
sahf
incb
cmpsl
lds
daa
push
adc
aas
mov
pop
loop
sub
push
mov
add
out
cmp
fs
inc
push
ss
int
ds
popf
sti
cmpsl
add
lret
xor
scas
jne
mov
pop
into
mov
imul
dec
mov
stc
icebp
xor
divl
mov
movsb
in
sub
or
lcall
mov
mov
jb
in
lods
jno
das
int
lods
rclb
outsb
mov
cmp
cltd
aam
lret
lahf
fnstcw
repnz
addr16
fisubs
std
rcrl
repnz
lahf
out
in
into
movsl
jge
ds
arpl
or
fucomp
rep
addr16
mov
test
jmp
bswap
xor
icebp
ficomps
jns
jmp
lret
das
xor
push
scas
insl
punpckhdq
inc
xchg
out
sar
lret
test
outsl
lahf
aam
scas
sub
mov
jbe
cli
jbe
lods
fnstsw
sub
jne
je
or
mov
imul
sub
mov
pop
mov
mov
push
xchg
lret
xchg
pop
shll
cli
or
out
sbb
hlt
push
push
roll
test
xor
out
icebp
das
pop
in
aam
enter
scas
into
iret
ljmp
sub
out
shlb
jle
lahf
insl
ds
int
and
cmpsl
test
add
fnstenv
push
push
addr16
or
popf
xchg
scas
ja
sti
jle
push
dec
adc
testb
push
leave
mov
xchg
mov
mov
rcrl
cmpsb
imul
sar
lret
cmp
lds
jno
out
repnz
cs
outsb
push
xchg
push
push
fnstcw
imul
fidivrl
cmp
aam
scas
fmull
xchg
addr16
aad
insl
mov
scas
cmp
mov
add
stc
testl
mov
test
aas
pop
mov
enter
dec
negb
into
sahf
lcall
ds
push
mov
stos
jp
fildl
jge
ud0
test
jmp
lret
out
repz
jns
scas
or
shlb
out
jecxz
lcall
add
or
faddl
pop
das
sbb
xlat
mov
repnz
xor
das
rolb
push
ljmp
mov
arpl
mov
xor
in
lods
aam
ret
mov
or
popf
jb
pushf
jmp
jb
lcall
dec
push
lret
xor
push
popa
call
or
sub
push
decl
jecxz
jns
iret
lock
mov
ss
pop
adc
cltd
addb
rcll
lret
ror
pop
rolb
mov
pushf
lret
pop
std
xchg
cmp
add
shr
jmp
dec
ja
add
into
leave
aam
lods
lret
dec
add
push
mov
into
rol
lret
mov
aam
push
push
jge
xor
dec
or
dec
clc
aam
iret
and
push
int3
mov
daa
mov
mov
lret
icebp
lret
cmpsl
xchg
pushf
mov
insl
cmpsl
mov
cld
stos
lret
insb
dec
sti
sub
lcall
outsl
sahf
aam
enter
cvtdq2ps
rcrl
dec
fnstenv
sub
loop
imul
jns
jmp
stc
cmp
into
cmp
clc
imul
pop
mov
addr16
aam
mov
aaa
mov
xor
repz
dec
or
mov
aam
fcmovne
push
xchg
stos
mov
shlb
jbe
push
mov
fstl
movsb
inc
sub
jge
das
sub
cmpsb
addr16
or
pop
push
cmp
data16
in
fidivs
sbb
std
push
add
aam
push
addr16
lods
movsl
popf
into
not
pushf
mov
push
push
push
lret
out
mov
inc
pop
sbb
jmp
into
aam
pop
lret
push
sub
xor
lret
xor
cltd
notl
cmp
lahf
cmp
ljmp
outsl
fwait
shrl
add
sub
pop
add
out
fdivrl
add
pop
jecxz
xchg
mov
dec
mov
xchg
jne
sahf
enter
shr
xor
aas
cmp
xchg
mov
jle
lret
out
rcrl
add
jne
mov
dec
into
cmp
insl
xlat
mov
in
xlat
outsb
imul
stc
fcoms
add
adc
mov
repz
mov
popf
lods
xor
cmp
pop
je
repz
lcall
lret
pushf
cmp
inc
mov
lahf
cmp
lret
pop
aam
cmp
cmp
addps
fisubrl
int
lods
push
adc
mov
imul
mov
movsl
add
pop
xlat
aas
into
jg
pop
push
or
inc
mov
jmp
mov
mov
stc
add
out
sub
scas
cmp
js
push
mov
push
mov
mov
xchg
push
push
adc
gs
push
add
mov
fs
rorl
xchg
lret
dec
cltd
sahf
pushf
cmpsl
mov
cld
lods
push
push
push
and
in
cmp
push
inc
sub
sub
xchg
jg
adc
pushf
jg
into
jmp
mov
push
int
pushf
mov
xchg
push
mov
repnz
xor
ljmp
lock
lahf
xlat
jecxz
jg
push
cmp
add
push
mov
std
in
push
test
push
aam
loope
or
lret
lcall
mov
test
aam
aad
mov
imul
lret
dec
or
lret
mov
xchg
out
fwait
aam
cmpsb
push
imul
rolb
pop
aam
inc
pop
stc
fucomp
ljmp
lret
lds
fs
scas
cmp
mov
out
xchg
out
das
cmp
lahf
int
rcl
insb
xlat
cmp
jb
cltd
or
cmp
insl
pop
lcall
aaa
sub
push
sarb
dec
ja
int3
notb
cmp
ds
inc
addb
push
jg
lahf
gs
cmpsl
jg
fnstsw
out
cmp
cmp
shlb
int
adc
stos
out
xchg
stos
iret
test
fwait
pop
imul
iret
sub
arpl
pop
mov
sbb
dec
add
les
lret
add
inc
push
inc
or
xchg
push
ret
les
push
js
in
sub
jmp
cltd
jecxz
out
shll
call
cmpsl
in
fmulp
inc
or
cmp
pop
dec
cmpsb
addr16
loope
pop
call
cld
int
mov
mov
cltd
jg
xchg
lret
repz
ficomps
in
sub
sub
rorl
fstpt
dec
mov
xchg
lret
pushf
dec
mov
cmp
int
fiadds
shl
xchg
lahf
popf
mov
mov
popf
jns
lret
sbb
jne
lahf
dec
lahf
in
xor
pop
dec
lret
cmc
mov
cmp
xor
cli
mov
out
leave
push
fbstp
rcrl
jne
mov
rorl
push
scas
rcl
jne
jae
imulb
push
notl
stc
ror
jmp
mov
outsl
mov
imul
into
xchg
idivb
fidivrl
inc
rcl
int3
add
xchg
fxch
out
idivl
jns
push
lret
mov
add
push
or
aam
mov
into
movsb
stos
in
dec
in
xchg
sub
pushf
pop
mov
push
js
xor
div
inc
imul
mov
loopne
jge
stos
dec
jmp
xlat
dec
mov
enter
je
movl
ljmp
outsb
in
inc
in
mov
ja
sub
dec
cmc
add
xchg
in
add
lcall
push
or
cli
xchg
xchg
push
adc
xor
int
decb
push
iret
xchg
xor
jnp
aam
adc
dec
add
cltd
xchg
and
cmp
pop
ljmp
push
inc
add
fbld
aas
mov
or
movsb
pop
mov
stc
negb
pushf
rorl
in
cmp
scas
addr16
stc
push
out
sub
jg
inc
lahf
cmp
mov
add
scas
jns
iret
negl
movsl
popf
enter
movsl
imul
outsl
shrb
rcrl
std
std
aam
mov
cmp
mov
imul
cmp
jo
enter
sub
dec
in
xor
cmp
cmp
mov
in
mov
jmp
iret
cmp
sti
or
popf
jl
jae
cmp
rcl
sbb
ficompl
sbb
cmp
mov
or
loopne
dec
loop
fucomip
in
movsl
push
imul
stc
xor
ds
xor
sti
jecxz
idiv
pop
ss
enter
sti
pushf
cmp
shrl
lahf
fisubs
xchg
iret
idivb
dec
mov
ds
js
add
icebp
fucomp
push
into
loopne
cmp
movsl
lcall
or
or
cmpsw
cltd
dec
sub
lret
cltd
pop
lret
cmp
sbb
popa
mov
out
mov
loop
push
outsb
div
add
test
hlt
ljmp
aam
pop
dec
pushf
sub
icebp
pop
push
pop
into
leave
mov
daa
push
jo
pop
call
mov
xchg
fisttpl
negb
sar
lret
push
lret
sti
imul
push
jne
addr16
fstpt
leave
push
cmp
cld
into
cmc
mov
dec
mov
fwait
cmp
inc
pop
negb
dec
test
aam
jb
xchg
xor
test
cmp
faddl
repz
add
lahf
enter
stos
into
jp
push
xchg
out
lahf
nop
inc
or
jns
dec
notl
mov
lahf
in
fs
faddl
out
repz
cmp
xlat
adc
jae
aas
mov
shrl
insl
loopne
lcall
mov
in
inc
movsl
xchg
mov
jmp
cmp
fiaddl
cmp
aaa
cmp
cmp
push
imul
push
push
jp
pop
push
mov
cmp
cmp
stc
fnsave
mov
mov
and
notl
in
enter
mov
push
popf
aaa
add
push
sar
and
iret
lret
lret
adc
cld
gs
adc
jns
cmpsl
outsb
xor
or
jp
cltd
sub
jp
rclb
pop
push
call
jae
jbe
shlb
dec
rcl
add
pop
lea
clc
shl
stos
popf
insl
jnp
lahf
lcall
pushf
sahf
sahf
dec
fdivs
lahf
cmp
mov
dec
sub
xchg
add
jmp
ds
jae
push
push
aam
fmull
push
jge
das
jne
insl
ss
aad
clc
aam
in
cmp
xchg
push
addr16
xchg
lahf
das
jns
ds
in
push
dec
into
cmp
xchg
cmp
out
dec
sub
cld
out
mov
cltd
test
pop
setnp
pop
lret
add
stos
push
cmp
cmp
inc
in
lret
adc
into
inc
pop
out
fsubl
adc
popf
cld
fstp
aad
fisubrl
cmpsl
push
addr16
jg
cmp
cmp
jne
jns
cs
cmp
cmp
xor
add
cmc
scas
add
mov
adc
dec
fnstenv
rcrb
insl
test
jl
xor
cmc
lahf
push
loopne
das
aad
repz
js
sub
mov
sub
cmp
ror
mov
pop
mov
mov
or
mov
push
movl
shrl
xor
shll
enter
jecxz
cld
stc
xor
mov
add
sub
sub
and
out
lret
push
push
mov
and
xchg
sahf
cltd
pop
pop
or
push
pop
into
mov
add
jecxz
pop
cltd
in
or
lret
out
sahf
daa
int
and
imul
jns
cmp
out
mov
das
dec
add
repz
scas
jnp
imul
sub
cmpsl
mov
push
push
cmc
sbb
lods
addr16
lahf
push
push
add
mov
sahf
enter
sub
inc
dec
je
sti
cmp
into
xlat
out
mov
scas
cmp
xchg
stos
lahf
or
pop
stos
fwait
push
out
mov
ljmp
cmp
cmp
idivb
shr
adc
mov
mov
cmp
arpl
xlat
stos
lret
mov
mov
push
roll
test
out
jle
jae
jmp
inc
mov
fucomip
fisttpll
cmp
rorl
std
imul
in
enter
fiaddl
cld
xlat
pop
xor
aad
loope
std
stos
cmp
cmc
in
pop
std
fdivs
jns
repnz
jns
imul
mov
or
or
mov
mov
mov
add
mov
aas
cmp
xchg
mov
arpl
and
imul
int3
lods
into
jmp
add
cli
aas
iret
popf
xor
push
out
mov
push
mov
aas
lods
pop
ds
popf
inc
addr16
fmul
in
add
add
pushf
roll
xchg
insl
into
ficompl
push
dec
imulb
fidivrl
cmp
push
adc
or
fistpl
ljmp
mov
aam
repnz
pop
mov
scas
imul
inc
lods
sbb
aam
jg
xlat
jge
dec
in
jns
jg
cmp
icebp
or
jle
lods
leave
scas
jnp
imul
daa
mov
mov
or
mov
rolb
mov
in
cmp
adc
push
insl
aaa
scas
jnp
fs
clc
cmp
rclb
xchg
jnp
jmp
push
or
aas
jecxz
xchg
sti
mov
jg
shll
popf
fmull
push
std
jmp
stos
xchg
mov
sub
imul
shl
cmpxchg
jb
xchg
xor
add
mov
repnz
into
ss
int
sti
inc
xchg
and
pop
loopne
jne
jl
jl
fcmove
int
ret
aam
insb
push
insl
add
add
lret
roll
aaa
imul
pushf
enter
dec
mov
xchg
lahf
lods
or
lret
push
cmpsl
xor
jbe,pt
push
mov
sub
arpl
outsb
sub
add
pusha
xor
stos
addr16
inc
pushf
mov
pop
aad
add
dec
adc
rcr
push
fists
xchg
adc
sub
rcll
aam
jb
lahf
cmp
cltd
in
adc
pushf
imul
cld
pop
loope
or
pop
stc
sbb
lret
movsl
pop
dec
addr16
xchg
cltd
pop
sbb
xchg
mov
jnp
dec
repz
dec
imull
imul
cmp
sar
push
aam
sub
pop
rcrl
lods
jle
enter
lods
push
mov
ds
movsl
mov
lods
cmp
dec
mov
mov
mov
cmp
in
mov
cltd
outsb
test
test
xchg
repz
mov
mov
insl
jo
dec
cmc
in
jmp
into
push
sahf
pushf
jae
add
cmp
inc
mov
repnz
notl
loop
xor
inc
pop
in
xor
pop
mov
in
lahf
pop
xor
cltd
jg
cs
pop
mov
pop
into
xchg
push
sub
aaa
outsb
insb
or
lcall
push
imul
pushf
push
jp
movsl
dec
data16
lods
fs
cmp
push
mov
mov
test
and
inc
sbb
jns
imul
mov
fisubrl
popa
into
mov
out
xchg
mov
iret
add
pop
xchg
jns
repz
int3
lret
pop
mov
imul
dec
jl
push
jg
cmp
jae
jg
data16
outsl
fcmovnbe
dec
test
dec
test
cmc
scas
sub
cmp
or
mov
test
mov
cltd
push
out
fucom
dec
fdivr
inc
lahf
inc
das
mov
clc
in
xor
mov
cmp
jmp
pushf
jb
pushf
rcr
add
clc
cs
sub
lcall
ja
movsl
sahf
lcall
insl
fistpll
rcll
imul
jnp
dec
aam
fidivrl
dec
repz
add
mov
xchg
mov
stos
mov
cmp
pop
push
cmp
stos
xchg
pop
xchg
dec
aas
pop
testb
jns
sub
cmp
outsl
popf
lret
sub
repz
aad
push
mov
imul
fisttpll
outsb
iret
imul
fidivrl
xchg
sti
aam
ja
fimull
in
aas
pop
mov
or
lcall
cmp
mov
add
add
idivb
iret
scas
jo
into
cltd
insl
pop
add
add
out
icebp
xor
cvtpi2ps
add
out
rep
addr16
shl
scas
fs
repnz
dec
cmp
xchg
lahf
add
pushf
shlb
rcrl
imul
std
jge
mov
push
sahf
mov
insl
outsl
jbe
shll
popf
pushw
jns
das
out
xchg
lds
sahf
pushf
jb
lret
cmpsl
push
push
repnz
or
loop
mov
enter
mov
into
xlat
in
cmpsl
idivb
pop
lret
int
push
insl
jmp
enter
xchg
jno
outsl
loope
push
push
jecxz
dec
pop
mov
push
xlat
mov
daa
push
addr16
lock
add
adc
insl
xlat
ficoms
insl
daa
fnstenv
lods
cs
inc
xchg
inc
pushf
mov
and
outsl
lret
or
jl
pop
jo
rep
mov
aad
jae
call
push
addr16
mov
shl
cmp
jae
adc
mull
or
fldt
mov
out
cmp
jbe
fistpl
mov
xchg
cmp
addr16
push
ljmp
mov
ficoml
std
scas
lret
aam
mov
mov
jo
mov
and
push
add
push
push
xor
or
jg
orl
jp
mov
xorl
xchg
lea
sti
andb
insl
js,pn
popa
add
pop
pop
xchg
sub
andl
jb
scas
repz
lahf
ds
pop
into
fsubrl
cltd
stc
cs
lahf
ja
shll
cmpsb
cltd
jle
or
push
jg
in
lods
aam
jnp
xor
scas
and
imul
push
popa
and
lahf
addr16
pop
pop
ds
mov
lret
adc
fists
into
xchg
repz
imul
add
ljmp
jns
imul
outsb
xlat
sub
dec
mov
icebp
xchg
push
int3
in
xor
repz
pop
loop
mov
sti
into
das
ret
mov
push
mov
scas
vpaddsw
sbb
dec
in
ds
loop
fsubrp
push
jo
imulb
movsl
decl
cltd
and
cmp
roll
into
cltd
jg
sahf
add
cld
aam
jmp
out
cvtps2pi
fidivl
push
mov
mov
into
repz
dec
push
mov
repnz
sub
push
ss
pop
or
das
lret
shll
mov
add
fstpt
test
dec
xlat
fiaddl
neg
inc
int
outsl
mov
arpl
xor
sub
pop
dec
outsl
sub
adc
mov
mov
jle
in
mov
das
lds
lret
shl
enter
lods
adc
push
dec
xchg
push
dec
mov
pop
jge
cmp
test
scas
and
stos
push
in
push
add
bound
test
pusha
insb
pop
pop
jne
add
test
sub
xchg
lods
movb
add
mov
gs
jge
xor
add
ficomps
adc
jo
arpl
repnz
ds
and
loop
mov
sti
into
dec
repnz
xchg
mov
mov
iret
shrl
jns
imul
cmp
das
cmp
pop
iret
lods
push
std
cmp
ljmp
out
push
xchg
or
push
jge
xor
lcall
divl
movsl
outsb
repz
add
cld
into
test
out
jg
sti
aam
shr
gs
out
jne
mov
dec
lahf
movsl
jnp
lret
sub
icebp
xlat
push
outsl
repz
cmp
add
inc
scas
sub
rorb
cmp
aad
adc
out
cmp
xchg
inc
cmpsl
aam
cli
jne
addr16
adc
cltd
jp
out
aas
ret
shll
iret
clc
cmp
stos
mov
mov
xchg
out
xchg
sti
push
cmp
aam
jg
fisubrs
jae
sbb
out
cltd
movsl
inc
push
cmp
rolb
stos
push
pushf
das
cmp
cmp
mov
mov
or
adc
into
outsb
cld
or
test
add
push
cmp
fisttpl
jo
cmpb
test
mov
mov
aaa
ja
cmp
cmp
mov
jbe,pt
add
sub
mov
js
xchg
bound
insl
popf
push
in
add
sbb
movsl
adc
mov
std
and
popa
sti
jae
and
std
aas
pusha
stos
jno
ss
or
mov
shll
push
jo
lds
test
sahf
nop
dec
repnz
lcall
das
int
movsl
push
insl
jb
pop
mov
push
push
jbe
into
mov
sub
je
push
out
aas
lcall
jnp
push
mov
jbe
dec
jb
popf
dec
push
int3
cmpsl
aam
repnz
into
or
push
clc
xlat
hlt
test
in
lret
cmp
dec
mov
mull
leave
cld
push
push
addr16
mov
in
cmp
ljmp
cmp
mov
jne
mov
jle
je
in
add
inc
movsl
xchg
lret
scas
insb
lahf
cmp
lods
divl
mov
das
jne
jns
push
jne
cmp
into
imul
sub
add
or
leave
cmp
cmpsb
insl
xchg
into
xchg
jle
stc
aam
loop
push
addr16
dec
pop
stos
fwait
sbb
xchg
adc
jecxz
cmp
jo
or
pop
add
mov
add
mov
xchg
add
mov
mov
pop
fs
add
pop
mov
enter
add
mov
dec
test
inc
jge
mov
sahf
jne
lea
inc
jecxz
fistpll
cld
mov
mov
dec
int
and
jle
add
adc
mov
cmp
inc
jle
aaa
outsl
scas
sti
fwait
pop
or
outsb
scas
inc
xchg
inc
push
add
inc
push
repz
push
sub
cwtl
add
inc
add
push
out
in
jmp
push
dec
jae
les
fiaddl
pop
mov
daa
pop
sub
jbe
shlb
insl
xchg
in
movsl
faddl
jmp
push
outsb
shrl
mov
imul
btc
cmp
dec
mov
lahf
xchg
dec
call
pop
lahf
rol
mov
push
into
fsubp
cmp
dec
push
xchg
or
inc
jns
jp
jae
movsl
jl
repnz
xlat
mov
ljmp
add
jnp
out
jecxz
cmp
dec
sti
jbe
push
inc
cmp
inc
fucomip
lret
jb
xor
repz
dec
ja
pop
xchg
pop
xchg
dec
lods
mov
lret
mov
stos
cmp
das
das
push
xchg
mov
shll
mov
cmp
lcall
lret
into
mov
xor
jae
pop
add
pop
push
sbbb
jge
jns
push
shll
jb
push
lock
movl
sysenter
outsl
shlb
pushf
xor
addr16
xor
pop
jl
xor
insl
imul
inc
imul
add
jae
rolb
add
jo
adc
adc
inc
push
insl
pushf
pop
imul
fwait
push
lcall
lds
insb
lcall
imul
pop
mov
dec
into
xor
fcomi
into
lcall
mov
pop
fistpll
fsubrs
dec
lret
aad
mov
xor
push
push
jnp
imul
mov
in
dec
in
aas
lret
in
cmp
popf
in
pusha
sub
sahf
mov
inc
jmp
mov
xor
jmp
clflush
inc
ds
inc
mov
pop
dec
add
aaa
pop
jle,pt
loopne
sub
inc
pop
int
jns
das
out
and
sti
inc
pushf
mov
jecxz
pop
cld
iret
ficoml
jo
add
push
insl
pop
add
std
dec
aam
mov
mov
out
mov
int
sbb
or
enter
ja
jne
jbe
mov
sbbb
jle
xchg
mov
outsl
sbb
pusha
insb
out
ficompl
mov
js
in
adcb
xchg
loope
addl
test
ret
ret
xor
xchg
leave
data16
ja
jne
in
cmp
pop
cs
stos
or
push
push
xor
jno
inc
outsl
cmpsl
or
adc
mov
sub
fiaddl
add
jae
lret
nop
shll
jno
iret
test
insb
nop
int
into
fiadds
push
jbe
pop
inc
sbb
push
jnp
in
or
insl
and
pop
lret
movsl
mov
dec
addr16
sti
jnp
mov
mov
sarl
repz
mov
mov
ja
pop
insl
in
add
mov
repz
jg
jnp
jmp
sub
push
int
das
push
insl
pop
jbe
cmc
insl
scas
jbe
jae
add
dec
ljmp
mov
scas
adc
lret
int
mov
stos
mov
imul
mov
imul
lret
push
imul
fidivrl
and
cmc
stos
testb
and
repz
dec
dec
dec
jg
sti
xlat
imul
aam
rcrl
sti
cmp
cmc
xchg
shr
xor
adc
jmp
or
popf
jl
mov
stos
sub
fidivl
pop
mov
add
ret
sub
or
lds
xchg
dec
pop
incl
sbbb
cwtl
lds
int3
jae
mov
jbe
cltd
test
mov
jle
xchg
mov
in
jae
add
lds
cwtl
les
add
insl
ffree
cmp
xchg
xorl
mov
mov
lds
push
frstor
insb
mov
dec
fucom
sahf
mov
inc
outsl
pushf
mov
push
add
jno
push
insb
mov
cmpsb
test
xlat
scas
pop
ret
outsl
dec
scas
test
mov
jl
idivb
ds
pop
addr16
mov
or
pop
mov
pop
arpl
push
dec
mov
pop
ljmp
jne
jns
dec
pop
inc
fcomps
testb
xchg
cltd
mov
fisubrl
push
xchg
aam
jg
loopne
xchg
push
repnz
and
scas
cmpsb
outsl
lahf
lods
push
xchg
or
sub
stc
fs
xchg
jae
leave
jne
push
lods
lret
std
shll
dec
mov
test
mov
push
repnz
in
iret
movsl
cmp
xlat
jb
mov
jbe
fidivl
xchg
in
daa
lods
cwtl
or
or
mov
ds
imul
pop
cltd
shrl
out
jo
cmp
flds
sbb
jecxz
mov
data16
jl
jp
rclb
mov
push
push
jbe
pop
add
lcall
jns
jg
mov
sbb
jl
push
xchg
ja
mov
insl
jne
inc
cmp
sbbb
popf
lea
mov
jns
mov
ljmp
pop
sahf
insl
imul
movsl
push
jb
xchg
mov
clc
int
add
push
sub
lds
mov
xor
mov
sbb
cmpsl
pop
lret
xchg
add
outsl
popf
jb
je
jne
xor
loopne
insb
sub
dec
mov
int
xchg
add
sub
jo
rcrl
hlt
ja
jb
decl
xor
mov
fcoms
pop
fists
xchg
fdivs
jno
push
ficompl
or
jo
push
jns
jmp
add
pop
stos
sub
hlt
in
xor
imul
push
fstpl
std
aam
stc
pop
pop
xor
jg
cmp
dec
xchg
adc
into
fcmove
lret
jge
aaa
iret
push
inc
imul
lret
jecxz
mov
popf
push
js
cld
scas
out
shrl
popl
ds
mov
out
xlat
mov
mov
mov
cmpsl
sti
pushl
xchg
push
addr16
or
stc
cmp
clc
lret
jns
jg
aam
stos
sub
aaa
mov
adc
xor
add
push
push
xor
jmp
sar
inc
add
jae
pop
orb
test
fadds
add
mov
mov
ss
js
xchg
mov
pusha
jae
mov
push
xlat
arpl
jne
push
sub
jae
mov
cwtl
pop
dec
lret
cltd
lret
mov
add
jne
lods
popa
fiaddl
int3
mov
sub
or
mov
cli
cmpb
jg
out
cmpsl
adc
sbb
jg
lds
aam
imul
mov
sbb
test
sti
out
add
insb
mov
js
adc
jo
out
sub
insl
sub
mov
gs
cmp
jg
into
imul
cmp
sub
in
push
mov
test
into
mov
jg
movsl
push
test
dec
push
std
xlat
sarb
push
xchg
xchg
cmc
dec
jbe
push
jns
divl
or
jo
sub
jg
shll
ds
fucomip
jl
pop
cld
sub
push
icebp
outsl
imull
jbe
push
in
ficoms
push
jne
xlat
cld
shr
jb
push
inc
jae
cs
pop
stc
aam
ljmp
push
add
push
dec
clc
xlat
movsl
out
insl
lahf
imul
test
in
movsl
xchg
les
xchg
cmc
mov
sub
fwait
jg
stc
fnstsw
out
out
shr
movsb
scas
int
mov
pop
add
jne
data16
lahf
cs
out
lret
pusha
mov
mov
mov
test
and
data16
stos
and
lahf
mov
pop
inc
subb
xchg
fwait
cmp
jl
test
jge
xchg
dec
ret
ljmp
lea
sbbl
jb
das
mov
cmp
mov
stc
out
push
push
jne
lea
adc
lret
into
jbe
push
pop
or
push
jae
insl
mov
inc
outsl
sahf
rclb
adc
test
ret
xlat
xchg
or
rcrl
rorl
cmpsb
fiaddl
jne
lahf
das
ret
mov
mov
test
mov
and
scas
shrb
aam
pop
hlt
lcall
xchg
mov
mov
mov
cmpsl
insl
shrl
sar
dec
jb
shrl
push
mov
push
mov
aas
mov
fiaddl
into
mov
stc
aad
jae
std
std
out
inc
dec
lahf
jecxz
aad
jl
insl
cmp
movsl
jge
ds
xlat
mov
sbb
jno
popf
gs
das
fmull
lret
add
testl
gs
mov
push
or
repz
daa
pop
movsl
push
rorb
mov
pop
xchg
jecxz
pop
mov
outsb
pushf
jg
std
xlat
out
xchg
mov
imul
adc
add
fimuls
adc
test
sbb
enter
mov
lea
mov
subb
pop
jns
ja
mov
div
push
outsb
mov
mov
insb
ds
inc
stos
stos
aaa
rcr
js
jno
sbb
lods
jnp
sub
dec
lds
not
out
inc
add
test
dec
xor
je
int
iret
adc
push
xchg
cld
cmp
jo
mov
fldl
outsb
jecxz
inc
adc
xor
sub
pop
out
pop
negb
pop
movl
ja
cltd
add
push
lds
aam
push
ficoml
test
mov
lret
dec
scas
or
xlat
mov
fnstenv
lretw
xchg
out
add
in
mulb
mov
pop
test
mov
xchg
push
insl
into
xchg
mov
push
mov
lods
pop
or
lret
add
add
repz
xchg
push
push
jge
test
jl
pop
std
stos
fimuls
and
ficomps
mov
inc
idivl
sub
pop
rorl
imul
xchg
pushf
aad
or
into
pop
jno
pop
dec
push
mov
jno
jmp
sbb
sub
mov
mov
popf
jns
pop
pop
fcompl
push
data16
mov
jns
bound
gs
pop
add
mov
jae
cwtl
mov
add
insb
insl
test
test
int3
pop
jl
orb
pushf
mov
add
data16
pop
cmpsl
repnz
cmp
push
test
das
imul
aas
push
jno
int3
into
push
xor
flds
repz
pop
mov
jecxz
je
mov
adc
or
xchg
add
fnstenv
fnsave
pop
mov
pusha
pop
cmp
sbb
sahf
pop
outsb
sbb
insw
cmc
and
movsl
cmp
cmpsb
or
mov
or
ficoml
push
repz
lcall
fcoms
push
out
lahf
pop
lods
jne
fdivs
idivb
mov
mov
pop
clc
shl
mov
shll
jp
popl
pop
push
mov
pop
shrl
das
push
jae
cmc
mov
cmc
lcall
dec
test
mov
lret
xchg
imul
iret
repnz
cmp
push
into
ficoml
sub
jne
jo
lret
xor
fnsave
pop
mov
cmp
inc
movsb
in
xor
sti
incl
adc
clc
cmp
scas
test
test
repnz
xchg
push
xor
lahf
push
imul
jo
cmp
mov
jp
push
add
pushl
inc
push
addr16
add
imul
roll
inc
dec
mov
and
sbb
push
add
arpl
xchg
add
lods
popa
imul
jns
xchg
mov
pusha
into
xchg
dec
push
lods
test
xchg
jb
or
into
cmp
jbe
xor
jne
mov
pop
pop
jecxz
imul
pop
jb
pop
inc
sub
pop
xor
cmp
scas
mov
push
dec
pop
push
mov
adc
loop
dec
jns
cltd
aas
mov
mov
enter
iret
dec
push
inc
test
cmp
jns
gs
lret
aas
movsb
push
or
lds
inc
fcomps
popa
out
cmp
adc
into
xor
out
loop
shr
cltd
xlat
add
push
ja
or
ret
dec
stos
sub
fistps
or
push
jns
iret
icebp
into
push
aas
out
xlat
fcomi
clc
das
hlt
test
mov
lret
mov
imul
sub
add
push
jo
or
cmpsl
jmp
add
ds
push
jnp
call
fucomi
mov
lcall
fimuls
rolb
movsl
and
mov
add
shl
stos
repnz
cmpsl
sti
pop
xchg
aam
jl
push
xchg
fnstcw
lret
icebp
ror
out
ds
cmp
and
xor
addr16
jns
add
add
mov
into
pop
mov
dec
imul
leave
jnp
rorl
jl
inc
xchg
push
cmp
push
nop
orb
nop
scas
je
pop
mov
add
dec
add
sub
sub
xchg
jb
mov
loope
sbb
sub
cltd
mov
or
call
shll
xor
jns
inc
movsl
ja
pop
mov
imul
sbb
mov
ds
gs
ret
rcrl
xchg
jns
cltd
sub
jb
stos
pop
fmull
insl
and
pop
lea
lret
pushf
scas
mov
pop
mov
xchg
inc
cltd
and
testb
add
imul
mov
add
xlat
push
add
mov
fcoms
aad
push
in
sbb
inc
push
vmovaps
push
mov
mov
dec
push
jmp
jge
dec
push
int3
ud0
std
mov
arpl
cmpsb
push
mov
or
jb
lahf
movsl
mov
dec
repnz
fimull
ja
loopne
dec
ljmp
push
push
jo
data16
jmp
rcl
or
sub
fiaddl
jge
push
ja
adc
add
cmc
out
mov
xchg
and
jg
sbb
orb
cmp
pop
inc
mov
out
and
insl
inc
lods
into
add
or
jle
jecxz
pop
shrl
cli
cmpsl
jl
push
cmpsb
data16
push
xor
push
test
cmc
out
xor
mov
hlt
jbe
mov
add
xchg
xchg
pushf
mov
mov
cmp
pusha
loopne
push
pop
mov
pop
cmpsl
dec
push
popf
jp
add
jge
int
cld
jns
jl
add
jnp
push
ja
dec
out
jns
pop
je
jp
or
cmp
push
mov
std
std
into
iret
insb
jmp
fwait
enter
imul
pop
xchg
gs
push
jnp
mov
lahf
iret
inc
leave
stos
icebp
das
lods
lds
add
jmp
int
lret
sahf
pop
push
lret
xchg
push
repnz
or
lret
jo
mov
lret
std
rcr
or
or
imul
cmp
cmp
xor
cltd
push
mov
pop
jecxz
fimull
notl
or
dec
jmp
cmp
cmc
xor
out
sub
inc
testb
jns
iret
repnz
into
xlat
dec
mov
dec
out
imul
inc
pop
popf
lret
sub
inc
mov
xchg
xchg
lret
lds
dec
lret
pop
scas
ja
jge
ja
movsl
dec
xlat
xchg
maskmovq
imull
repnz
xchg
stos
popf
je
test
mov
out
xchg
cmp
das
push
push
dec
push
mov
rolb
out
push
mov
lahf
push
insl
mov
add
ds
lahf
pop
clc
loopne
inc
rorb
inc
pop
lods
insb
in
add
das
insl
dec
iret
xor
mov
sarb
mov
ds
add
jp
dec
adc
lret
into
lods
sarb
xorl
sahf
mov
inc
nop
push
pop
jb
lds
cmpb
imul
xchg
push
pusha
xchg
nop
subl
arpl
jnp
jl
push
out
addl
outsl
daa
add
imul
xor
scas
cmp
jae
in
cmpsb
lahf
jg
gs
mov
push
popf
scas
jge
into
ss
loop
outsl
xlat
call
ds
adc
push
fs
mov
mov
sarl
repz
fiaddl
jge
xor
jne
fsubrs
mov
or
sub
scas
cmp
mov
fnstsw
lahf
or
imul
push
lods
lds
inc
jbe
scas
pushf
repnz
fists
imul
call
repnz
fiaddl
push
jns
iret
push
outsl
jne
jl
add
iret
movsl
dec
mov
mov
cs
movsb
jmp
mov
daa
addr16
mov
dec
push
in
frstor
jl
shl
mov
dec
fisubl
pop
xchg
ds
inc
mov
addr16
in
cmp
fisubrl
lret
cmp
cmp
cmpb
pop
sbb
addr16
jnp
push
mov
pushl
add
mov
xchg
ret
mov
pushf
lea
xchg
lods
je
scas
jg
jae
jge,pn
jb
add
mov
gs
imul
pusha
xchg
cmp
pushf
stos
cwtl
push
popf
repnz
lahf
movsl
xchg
enter
mov
bound
jge
sbb
dec
or
adc
lahf
out
pop
int3
rclb
vmovups
lahf
mov
push
fistps
incl
pushf
cmp
in
sar
into
lahf
fildl
or
scas
mov
pop
mov
or
fstpl
iret
mov
scas
sub
cmp
cmp
das
jecxz
pop
mov
xor
ljmp
cli
lahf
jo
mov
xor
dec
adc
insl
movsl
das
out
fsubp
jg,pt
rclb
pop
jecxz
std
pop
xchg
add
pop
add
fisubrs
fucomip
frstor
xchg
hlt
test
in
and
jne
lahf
outsb
xor
sub
gs
or
cmp
test
jmp
ja
or
jb
loop
pop
rep
xchg
mov
mov
fists
imul
mov
ja
bsr
mov
xlat
cltd
pop
push
cmp
cld
mov
push
mov
stos
notl
leave
inc
xlat
movl
add
out
xlat
insl
into
sub
mov
mov
pop
mov
into
aas
roll
xchg
mov
repnz
xchg
leave
xchg
sub
cmp
lods
icebp
pop
popl
pop
mov
pop
mov
inc
push
cli
aam
jg
jmp
add
jne
popf
xchg
in
into
and
sub
outsl
lock
popf
enter
insl
push
sub
sub
mov
leave
ja
or
sahf
pushf
jno
sahf
add
outsl
jmp
cltd
sub
add
cmp
iret
shrl
jae
lcall
cmpsl
adc
int3
int
push
gs
cmp
insl
push
arpl
repnz
lcall
xchg
push
mov
mov
mov
add
lds
jecxz
xchg
push
lret
sti
fldt
aas
into
jmp
mov
jae
out
jmp
outsl
mov
into
jge
insl
imul
pop
in
cld
ljmp
shrl
jne
jae
xor
mov
movsl
out
push
insl
pop
or
movlps
lret
ja
into
jecxz
std
cld
into
jmp
dec
out
out
mov
jmp
jbe
cmpsb
shlb
or
iret
cmpsl
gs
test
dec
jae
xchg
mov
das
adc
shll
lret
mov
cmp
xchg
fstpt
add
add
inc
xchg
aad
test
push
jo
test
mov
pop
jle
xor
add
push
or
jl
push
imul
xchg
sahf
loop
jp
push
xor
add
into
jecxz
roll
daa
js
cmp
shll
lea
cli
sub
sub
bnd
xor
idiv
outsl
idiv
shl
stos
cltd
push
fldenv
push
into
movsl
push
insl
ror
lret
or
push
push
lds
mov
inc
add
adc
ds
xor
in
cmpsl
data16
jae
out
jge
mov
mov
lahf
xchg
lds
into
gs
lret
into
fucomip
hlt
mov
dec
add
lahf
lret
adc
push
jns
jmp
pushf
out
push
cli
mov
push
pop
clc
xlat
test
jbe
movsl
push
mov
xchg
jl
jp
jae
das
cld
fstl
push
jae
test
dec
jne
or
outsl
inc
mov
jmp
cltd
jns
jb
xchg
mov
sti
imul
or
test
mov
xchg
jl
repnz
gs
std
mov
mov
aam
push
mov
pop
dec
testl
cli
lahf
jns
dec
pop
xor
ljmp
add
sbb
cltd
daa
pop
popf
jae
scas
mov
xchg
cli
lcall
xlat
test
out
shrb
into
clc
into
in
shrl
mov
xchg
insl
xchg
in
pushf
and
cmp
lods
add
mov
mov
or
jge
mov
enter
lcall
xchg
aam
jp
mov
int3
enter
outsl
negb
ja
add
jbe
mov
imul
into
aas
je
cmpsl
pushf
jle
hlt
clc
xor
dec
add
xor
xor
mov
imul
jg
into
inc
insl
dec
in
xor
xor
imul
aam
movsl
sbb
push
push
out
imul
in
cltd
lods
jno
sub
jmp
adc
roll
sti
cmp
lods
add
xchg
pop
psubsw
lret
pushl
fadd
lret
daa
xchg
xchg
adc
into
pop
test
cli
js
pop
popf
jl
out
imull
mov
movsl
adc
inc
xchg
pop
movsl
fidivl
ds
or
pop
jae
mov
in
enter
insl
dec
jb
fwait
mov
xchg
inc
xchg
and
mov
sbb
lahf
outsb
cmp
jecxz
xlat
in
jle
into
rcr
mov
mov
add
fidivrl
xlat
pop
jecxz
and
add
cld
in
xchg
imul
inc
jb
xchg
outsl
popl
cli
jge
imul
xchg
pop
pop
scas
imul
adc
pop
push
out
sub
jne
jae
int
movb
scas
add
jp
adc
lret
call
out
enter
sbb
std
cmpsb
cltd
dec
mov
lret
movsb
repnz
enter
imul
in
lcall
decl
sub
lret
mov
jo
jbe
jmp
leave
pop
push
popl
pop
ret
std
movsl
ret
push
jmp
into
sahf
xchg
in
or
test
data16
adc
xchg
sub
pop
jns
mov
scas
addr16
clc
jmp
cmp
cli
mov
mov
aam
sub
cmpsb
or
jns
imul
jg
cmp
aas
mov
outsl
push
jb
lea
insb
cmp
cli
cmp
sub
sti
inc
pushf
mov
pop
xchg
je
fcmovb
lds
mov
lret
cmp
pop
or
out
or
negl
std
mov
mov
popf
jbe
pop
mov
xlat
push
jecxz
xchg
mov
movd
ljmp
negl
jmp
adc
imul
lods
outsl
into
dec
test
in
lcall
idiv
hlt
movsb
pop
pop
add
mov
lds
mull
loop
fnstcw
das
into
into
inc
dec
dec
fnstenv
jae
mov
mov
jg
pop
cvtps2pd
mov
mov
add
mov
cmp
inc
pop
shrl
mov
addl
lds
mov
imul
pop
add
fiaddl
jmp
stos
jl
daa
outsl
xor
jecxz
xchg
mov
jns
out
jg
dec
cltd
cld
js
add
into
mov
ja
aam
in
xor
lods
iret
add
jnp
jbe
sahf
cltd
pop
enter
cmp
cmp
movsl
mov
roll
rcr
cltd
cmpsl
or
mov
imul
dec
cmp
cmc
xchg
cmpsb
pop
xchg
out
das
faddl
shl
pop
or
in
mov
addr16
xlat
xchg
add
jg
rcl
mov
inc
push
jp
cmp
xlat
lret
lahf
test
pop
int3
dec
mov
ret
cmc
inc
jae
shl
xor
sub
addr16
shlb
mov
dec
sti
jns
gs
sub
push
push
vcvtsi2ss
dec
les
or
imul
add
push
addr16
ds
push
not
xchg
imul
aam
rorl
push
jecxz
jle
int
lods
int3
lods
notl
adc
xchg
scas
sub
pop
mov
jg
xchg
add
punpckhwd
ja
frstor
add
xor
lahf
aam
push
pushf
mov
clc
jecxz
jnp
mov
loop,pn
movsl
mov
or
or
pop
add
jge
cmp
lret
mov
sbbb
add
sub
xlat
fwait
into
pop
lret
imul
out
ja
lret
mov
in
xor
out
in
movsl
dec
push
into
pop
push
mov
jge
ds
daa
scas
lahf
idivb
into
jnp
lahf
sti
pushf
rcll
sub
cli
fiadds
lret
adc
popf
mov
clc
dec
or
rcll
imul
in
and
push
mov
xchg
in
pushf
lods
ret
insl
ds
pop
ret
addr16
add
lret
mov
push
push
sub
mov
lahf
out
xor
std
mov
cld
stc
xor
mov
mov
addr16
add
xchg
scas
lret
ds
push
lahf
cmpsb
push
jecxz
xchg
out
pop
lret
dec
lahf
push
negb
xchg
idivb
push
in
xchg
pop
enter
sahf
jo
jg
rcl
mov
mov
mov
inc
scas
jbe
pop
ja
adc
adc
ja
fcmove
cld
in
push
xchg
comiss
jp
push
push
pop
jmp
or
xchg
fiaddl
aaa
cmp
dec
mov
aam
ffree
or
rorl
push
jg
lret
repz
push
mov
shrl
repnz
push
mov
jmp
lahf
repnz
std
mov
mov
xlat
and
jbe
mov
inc
add
add
add
lahf
cmc
pop
xchg
rorb
ficomps
repz
call
iret
lret
dec
addr16
hlt
jge
testb
into
cmpsl
mov
popf
mov
idivl
dec
lahf
imull
cmpsl
enter
fs
aas
pop
repnz
xchg
int
jnp
mov
cmpsl
mov
jnp
imul
lret
sub
pop
mov
enter
add
jno
insl
shrl
lds
cmpsl
bound
outsb
cmc
gs
push
insl
dec
sar
xor
cmp
out
mov
push
mov
lahf
and
or
push
jne
lcall
aam
mov
into
mov
pushl
pop
mov
insl
dec
repnz
jg
aas
lret
fiaddl
pop
icebp
ficoml
or
rcrl
mov
inc
xlat
mov
cmp
adc
sub
lret
jl
jb
jae
push
sub
push
icebp
into
imul
or
mov
push
mov
movsl
lret
push
jle
jns
xlat
mov
mov
popf
cmc
scas
mov
movsl
or
insl
ror
ret
cmp
mov
pop
movsl
pop
pop
icebp
xlat
sti
cld
out
repz
and
out
jecxz
mov
cmpsb
add
aam
inc
push
or
divb
jns
lcall
mov
ret
jg
pop
jnp
into
mov
jg
sub
cmp
jle
enter
into
sbb
popa
xor
cmp
lds
popa
inc
or
cmc
pop
add
jp
mov
hlt
pop
cli
imul
lret
dec
fnstcw
dec
or
cltd
in
push
pushf
imul
add
mov
cld
cmp
imul
pushf
hlt
sbb
or
into
decl
pop
mov
mov
push
cmc
mov
bound
movl
imul
movsl
imul
pop
xchg
cmp
imul
jbe
jns
sbb
sub
cmpsl
insl
dec
lret
gs
mov
jae
in
adc
pop
sbb
popf
inc
lods
lret
cltd
cmp
call
jae
adc
mov
pushl
aam
pop
or
in
mov
shr
jb
addr16
mov
inc
test
pop
jge
cmp
mov
fcoml
jmp
in
scas
das
jnp
jmp
inc
jbe
fs
ljmp
add
cmp
insl
or
setge
cli
jge
cmp
ret
mov
or
pop
push
jns
xlat
addr16
adc
jns
lret
adc
pop
int
cmpsl
xchg
xchg
mov
fstl
enter
std
stos
add
stc
pop
lds
leave
aad
jae
mov
push
mov
mov
lcall
leave
repz
xor
pop
or
adc
lds
cmp
cltd
testb
mov
std
iret
into
pop
rcl
out
xchg
add
push
fs
lods
into
pop
jno
mov
or
rorl
mov
lret
incl
xor
shll
mov
xchg
cmp
mov
xor
call
pushf
fsubp
jl
jp
addr16
push
test
jo
je
test
mov
aas
fmul
out
dec
or
adc
dec
iret
addr16
mov
push
sahf
cltd
push
mov
lahf
dec
fstpt
lret
jno
imul
addr16
scas
mov
mov
dec
lahf
aas
dec
jmp
jae
lret
lahf
pop
mov
dec
lret
mov
cmp
mov
stos
cmpsb
mov
enter
stos
jle
enter
lret
aam
out
lahf
in
pop
mov
mov
call
sub
inc
mov
test
movsl
lret
jnp
push
jbe
jge
xor
or
in
inc
pop
negb
mov
push
xchg
scas
iret
cmp
lahf
lds
gs
mov
std
push
scas
mov
sub
aam
dec
push
push
into
xchg
pop
cmpsl
jb
leave
xlat
or
fisubrl
inc
cmpsl
insl
xor
jae
cli
dec
pop
jl
jnp
push
negl
xor
neg
inc
lcall
test
or
test
sub
xor
repnz
xchg
fstps
push
leave
push
addr16
or
ss
pushf
imul
mov
lcall
push
lahf
insb
cmp
gs
cltd
xlat
cmpsl
or
lds
add
sub
stc
fs
mov
inc
lret
dec
lahf
dec
ja
cmp
lret
cmp
jne
movsl
cmp
je
mov
ljmp
push
insl
movsl
inc
push
jno
xlat
movsl
scas
cmp
scas
push
push
insl
sarb
iret
jbe
push
xchg
mov
dec
negl
insb
mov
test
aam
scas
sub
cmp
push
cmpsl
fstpt
leave
cld
xlat
push
push
add
cltd
gs
fs
movsl
fisttpl
dec
or
imul
jg
xlat
xchg
test
cmp
cmp
push
pop
jb
cmp
or
insl
loopne
leave
sub
cmp
cmpsl
sti
pop
add
adc
or
imul
adc
push
push
popf
fstp
faddl
jae
scas
out
sarb
dec
mov
sar
das
rorl
mov
xlat
mov
iret
jg
outsl
mov
dec
fbstp
inc
xchg
aam
push
push
push
je
out
xchg
ljmp
inc
test
movsl
das
iret
shrl
xlat
pop
adc
xchg
adc
jns
jmp
mov
ss
add
jmp
aaa
or
add
enter
negb
in
test
daa
push
jbe
repnz
fs
lods
cmpsl
out
jo
retw
pushf
jl
cli
xor
lret
aas
decl
jl
mov
lahf
sarl
in
jns
dec
cld
loope
jae
sub
rcrl
push
int
mov
jns
outsl
mov
aam
clc
aam
xchg
mov
dec
or
pop
repz
lret
lods
ret
cld
aam
mov
imul
push
or
lds
stc
pop
push
insb
mov
push
jle
push
push
push
fs
fs
negl
jae
and
cmpsb
push
icebp
outsl
insl
push
cs
aam
mov
jl
fidivl
jo
cmp
mov
xlat
xchg
cmp
xchg
ficomps
dec
popa
fs
pushl
cmc
xchg
lods
add
test
pop
pcmpgtw
cmp
addr16
pop
mov
add
pop
mov
shr
xor
mov
mov
mov
insl
daa
push
cld
cmp
jae
iret
repnz
cmp
test
mov
lcall
sbb
add
imul
aas
out
shr
sub
jp
jae
jecxz
fsubrl
push
mov
popf
lcall
xchg
test
push
test
int
cld
push
jbe
add
movsl
inc
pop
rclb
mov
dec
or
out
xlat
xor
pop
push
loop
imul
cli
push
pop
into
in
popa
xlat
jecxz
imul
or
insl
shll
jle
shrl
lds
cltd
in
add
fwait
push
repnz
jg
out
add
dec
mov
add
add
into
xchg
dec
int
rcrl
lds
and
sar
cli
pop
jno
outsb
lock
sub
cs
push
push
jbe
aam
sbb
mov
cs
lret
daa
mov
jno
leave
in
aas
iret
lods
jo
and
mov
dec
mov
lahf
pusha
xchg
adc
fildl
loop
aad
push
lods
fs
mov
lods
movl
pop
lahf
ror
imul
lret
mov
or
out
cmpsl
push
fs
idivb
fs
aad
jbe
push
outsl
dec
div
into
pop
fs
rep
xchg
fiaddl
pop
push
insl
jp
sahf
cmp
or
push
push
jae
xlat
adc
jge
adc
inc
rcrl
push
xchg
inc
fwait
sub
add
mov
adc
rolb
out
ficompl
add
pop
cmp
ud0
clc
inc
out
push
out
adc
pop
xlat
add
xchg
test
mov
mov
jecxz
lret
flds
test
rcrw
mov
fs
add
ret
into
cmpsb
or
cmpl
cmp
cld
addr16
pop
std
push
pop
or
out
mov
add
ja
imul
xchg
cli
mov
mov
jns
sub
in
add
add
fcmovu
dec
cmpsl
lahf
xchg
ja
stc
addr16
push
add
or
xchg
aam
int
pushf
ds
inc
fs
jne
mov
scas
or
imul
cmp
lret
xchg
stos
fisubl
ljmp
dec
cltd
mov
mov
add
push
popf
cltd
movsl
add
lods
int3
or
ljmp
jo
add
or
pop
inc
insl
movsl
jge
inc
dec
or
mov
enter
mov
cltd
dec
mov
jbe
adc
push
or
or
mov
dec
negl
pop
mov
dec
sti
sub
shrl
je
pushf
pop
dec
adc
cmp
repnz
jns
movsl
notl
adc
add
push
imul
int3
out
repz
sub
or
aam
repz
or
cmp
out
and
pushf
dec
jo
sti
into
mov
lds
jns
cli
jne
inc
leave
ffreep
fidivl
test
or
jns
outsl
mov
jo
mov
add
xchg
std
ja
inc
add
lret
lret
sub
cmp
lret
fs
jp
sahf
movsl
push
fmull
or
mov
push
or
lret
xchg
nop
push
mov
std
decl
push
push
incl
push
test
mov
pop
lret
dec
sub
fs
pop
jecxz
leave
jnp
addr16
ss
iret
jp
xor
sub
stc
shll
push
jecxz
xchg
clc
shl
ljmp
push
movsb
scas
sub
test
mov
lret
mov
lahf
in
cmp
mov
jo
push
push
push
out
mov
enter
jae
push
popa
jmp
adc
inc
add
mov
bnd
mov
push
mov
decl
dec
mov
mov
pop
data16
push
into
dec
dec
clc
aam
sti
ja
stc
push
mov
loopne
scas
leave
loop
pop
jnp
dec
add
push
push
jg
into
sub
ds
lahf
cmp
out
xchg
pop
movsl
mov
xchg
mov
icebp
cmp
test
shrl
lds
sbb
xlat
mov
lcall
clc
push
add
test
push
jae
insl
push
outsl
clc
loopne
dec
pop
xor
mov
sub
push
lret
xchg
fnstenv
out
bnd
mov
popl
hlt
xor
out
fwait
test
movsl
cmpsb
cltd
dec
xchg
insl
fildl
mov
cltd
in
push
into
shll
lods
lret
add
fidivl
dec
aaa
lcall
xor
xchg
cs
mov
xchg
out
lahf
push
jle
mov
ljmp
xor
sbb
outsb
xor
scas
insl
cltd
jle
lret
pop
enter
xor
cmp
dec
mov
mov
jl
leave
pop
pushf
repz
adc
pushf
sub
sti
inc
cltd
and
sub
lods
jae
fs
filds
jg
jns
lret
cmp
jbe
dec
or
cmp
mov
dec
fisubs
leave
ffree
or
or
sub
cmpsl
paddw
jne,pt
insl
push
js
gs
xlat
mov
cld
cmp
push
shll
push
cmc
aam
adc
xchg
hlt
mov
jns
imul
iret
jne
addr16
add
lods
lret
jp
aam
std
mov
xchg
fnstenv
leave
jg
fdivs
mov
shrl
and
sub
fs
repnz
push
push
sbb
jno
mov
lds
stc
icebp
xor
movsl
repnz
in
dec
divb
pop
pop
jno
leave
fnstenv
mov
mov
mov
out
sbb
lds
dec
lahf
fs
les
fldcw
jmp
aas
fisubrl
jle
sarl
and
jns
gs
rcll
test
dec
mov
mov
pop
lret
movsl
fwait
shrl
jle
cmp
test
cmp
jl
sub
ficoml
nop
mov
push
lods
ret
mov
mov
shl
js
lcall
out
push
jns
leave
jg
into
sub
mov
xlat
stos
sub
sahf
pop
std
sti
fiaddl
jb,pt
mov
jmp
adc
into
mov
out
xchg
in
das
adc
cltd
test
lret
rolb
mov
ljmp
pop
addr16
jg
roll
scas
fistpll
dec
scas
cmp
mov
sar
into
inc
dec
sti
adc
mov
and
aad
jecxz
scas
cld
xlat
mov
push
lret
lret
imul
jmp
in
stos
daa
fnstenv
push
jo
repz
into
leave
xlat
gs
notl
pop
pushl
addr16
pop
mov
jmp
addr16
cmp
jg
cmp
icebp
out
push
ljmp
in
sbb
rcrl
or
sub
dec
je
repnz
xchg
mov
sub
insl
adc
sub
mov
mov
inc
mov
or
add
movsb
pop
out
into
cli
jbe
out
repnz
xchg
int
sbb
into
sub
mov
repnz
enter
pop
aam
cmp
fiaddl
insl
iret
jg
mov
pop
test
in
xor
sub
mov
dec
and
scas
cmp
pushf
ljmp
repnz
push
das
jns
rcr
adc
insl
addr16
mov
aam
mov
outsb
jns
cs
das
loop
mov
icebp
xor
xor
cld
scas
mov
fsubr
rcrl
jnp
cmpsl
pop
mov
jne
push
nop
daa
insl
xor
shrl
shrb
dec
in
xor
dec
fldcw
outsl
mov
outsb
cmp
mov
push
popf
jp
mov
gs
xor
stc
fs
arpl
bound
rcrl
cmp
into
rcrb
or
pop
mov
je
jb
jno
iret
div
ror
pop
je
fistpl
scas
cmp
sub
mov
xchg
out
insl
add
add
jb
push
push
ficomps
fidivl
psubsw
addr16
lret
jl
pop
cld
mov
shlb
inc
test
push
jbe
pop
push
out
jge
loop
jnp
outsb
xchg
mov
ljmp
mov
lahf
mov
mov
mov
ds
add
sub
xchg
leave
push
addr16
cmp
js
xchg
sbb
into
int
addr16
xchg
mov
clc
imul
aas
push
push
jle
pushf
sar
or
in
fs
scas
sub
and
aam
sub
add
xchg
jle
jne
mov
lahf
mov
push
add
rorl
cmp
add
push
das
and
out
push
cltd
mov
fiaddl
into
jl
adc
stc
pop
add
lahf
jne
in
mov
ds
cmp
lret
cmp
xor
leave
rcrw
shl
imul
xlat
mov
daa
insl
cmp
jmp
lahf
imul
insl
jne
addb
lret
dec
insl
xchg
push
insl
cmpsb
push
push
notl
mov
test
into
cmp
in
mov
shr
into
stos
pop
ret
cmp
add
scas
cmp
ja
stc
fucomp
or
pop
fiadds
pop
jecxz
lcall
fnstenv
dec
push
cmp
outsl
mov
into
push
ficoms
pop
imul
mov
mov
inc
jae
jne
jl
jae
lods
notl
adc
cmp
testb
testb
pop
xchg
inc
cld
lret
repz
divl
std
xchg
dec
sub
pop
cmc
fidivrl
sbb
inc
xchg
xor
push
push
daa
ret
sti
fwait
mov
cltd
movsb
xor
test
loop
scas
add
mov
fiaddl
jns
dec
or
add
xchg
jbe
push
push
addr16
mov
fs
addr16
xchg
mov
mov
sahf
addr16
xchg
lret
jae
int
cmp
dec
lahf
fs
ja
push
ljmp
cmpsl
sti
pop
add
icebp
testb
cltd
push
iret
into
mov
jmp
pushf
imul
mov
dec
sbb
aam
stos
lahf
push
xor
test
bnd
enter
push
sbb
mov
idivb
shl
sti
lret
lret
imul
pop
out
sub
negl
add
roll
fistpl
icebp
ror
out
repz
mov
in
stc
shr
imulb
lret
pop
loop
mov
std
gs
outsb
lcall
mov
cmp
lahf
mov
loop
xlat
out
dec
sub
dec
mov
shrl
xor
add
jl
rcrb
mov
outsl
repz
pop
mov
lret
push
pop
dec
scas
mov
imul
iret
imul
shrl
mov
pop
lahf
sar
mov
xchg
imul
icebp
jnp
repnz
std
dec
or
lsl
mov
idiv
pop
dec
xchg
dec
xchg
lods
fs
ljmp
jg
xchg
imul
jg
repnz
cmpsl
data16
jmp
cld
je
jne
stc
into
lcall
push
addr16
outsb
ds
push
xchg
sbb
mov
sarl
into
mov
lahf
xchg
jle
into
xlat
loop
daa
leave
sti
jnp
imul
jp
std
lods
rcll
cmp
lahf
outsb
fistpll
rorl
add
fucomip
jns
dec
or
cltd
outsb
cmp
xor
stc
pop
adc
mov
aam
in
mov
mov
outsb
cmp
xor
imul
aas
cltd
cmp
push
cmp
add
insl
je
in
or
or
mov
xlat
mov
popf
ret
xchg
sti
fisubl
loopne
adc
addr16
icebp
aam
inc
data16
push
jne
pushf
daa
fstpt
out
jae
cltd
scas
movsl
add
add
mov
stos
jns
iret
jg
xchg
aam
mov
cs
jg
pop
ljmp
jp
scas
iret
mov
addr16
cld
pop
popf
std
mov
data16
mov
xlat
iret
test
xlat
out
nop
hlt
jmp
mov
daa
cmc
push
jae
flds
sbb
xchg
idivb
cli
faddl
dec
std
mov
cmp
sti
mov
mov
add
push
xchg
push
ret
cmp
push
jp
std
jae
rolb
lcall
ljmp
mul
xchg
iret
pop
lret
movsb
sub
std
xchg
cmpsl
cmp
into
leave
idivb
leave
dec
xchg
cmp
cli
fistpll
out
shlb
jg
xchg
sti
dec
or
mov
cmc
cld
shll
std
mov
dec
lahf
daa
fs
faddl
daa
push
jo
lahf
outsl
out
lods
shrl
push
ljmp
mov
sub
in
xor
ds
out
xchg
fcompl
pop
test
mov
into
pop
stc
xlat
in
sub
fdivr
pop
cld
into
sub
jb
xchg
mov
mov
insb
mov
jmp
std
lret
aad
jbe
push
addr16
or
push
imul
pop
insl
jp
xchg
popf
dec
addr16
or
cs
mov
jecxz
sub
jmp
mov
push
shlb
cmc
scas
iret
sarl
xchg
addr16
or
repz
sbb
push
push
jl
or
std
dec
js
cld
aam
pop
out
mov
dec
mov
mov
jecxz
lret
lret
fisttpll
rorb
dec
call
stos
lret
aad
jo
int
mov
scas
mov
push
imull
daa
aad
repz
jl
pop
or
sub
cmp
jg
sbb
in
xlat
mov
imul
cmp
pop
lds
fisubrl
mov
dec
cltd
popa
cmpsl
sbb
push
mov
std
mov
jne
fwait
into
aas
or
cmp
out
lods
vminpd
mov
push
int
mov
cmp
mov
push
mov
xchg
jno
out
repz
ror
cltd
jg
into
iret
shlb
mov
loopw
lahf
out
fimuls
lret
mov
mov
ror
jbe
aam
repz
xor
cld
decl
jg
sahf
cmpsl
push
fists
jecxz
fiadds
je
lret
inc
jp
ret
push
sub
jnp
dec
pop
push
iret
aas
mov
push
insl
leave
in
mov
cmpsl
imul
add
insb
test
mov
add
push
push
xchg
push
ds
push
out
jne
fwait
sarl
inc
xchg
scas
push
mov
rolb
mov
sarl
xor
cmp
sti
sub
push
jg
ss
imul
out
insl
movsl
push
pmaddwd
jge
sub
or
mov
jnp
outsb
pop
in
out
pop
push
scas
out
into
lods
lret
lds
scas
fistps
loopne
lds
aas
fidivrs
out
lahf
push
daa
lds
sub
mov
jno
mov
mov
shll
out
pushf
sahf
nop
mov
mov
adc
into
cltd
jg
popf
stos
jb,pt
mov
mov
mov
imul
jne
call
xchg
mov
push
push
xlat
adc
and
scas
into
enter
pushf
jg
push
xor
into
aam
jno
jmp
lret
aas
lret
mov
dec
insl
in
sub
jg
sarb
xchg
adc
lods
or
sbb
arpl
jnp
out
push
lcall
mov
xor
repz
jg
xchg
aam
ror
add
pushf
pop
loop
xchg
mov
xlat
mov
add
pop
jae
add
add
out
lahf
in
ss
mov
lahf
outsb
cmp
cmp
addr16
or
sub
insl
jnp
cmp
aas
fidivl
mov
xchg
push
insl
iret
fdivrl
cmc
lret
pop
out
das
ret
or
push
or
fs
imul
pop
mov
sti
push
jp
outsl
ds
push
insl
dec
divb
pop
std
scas
sub
jg
sub
jecxz
lret
in
loop
pop
lret
repnz
push
fs
push
hlt
xchg
pop
mov
xchg
std
mov
push
jns
cmp
inc
imul
add
add
adc
pushf
pop
add
in
adc
mov
lods
push
ret
sbbb
lret
ret
ljmp
push
std
imul
dec
pop
sub
sub
lods
sarl
cld
into
fsub
xor
test
pop
lret
fists
sub
scas
add
mov
jmp
ret
loop
mov
lock
loope
gs
sub
imul
movsl
inc
fs
add
sar
cmp
rolb
jg
inc
lahf
and
lods
jo
in
xor
fiadds
cli
lret
add
fwait
jge
push
shrl
cmp
imul
lods
insl
hlt
scas
fnsave
test
cmpsl
lds
or
fucomi
movsl
cmpsl
jmp
addr16
lods
jl
shlb
pop
jbe
pop
lahf
dec
imul
insl
or
sti
cmp
jo
jle
int
cmp
aam
jg
inc
mov
sar
lret
test
scas
jge
lods
and
ficompl
in
cmp
jne
insl
mov
mov
pop
int
and
rorl
in
daa
cltd
mov
xlat
daa
mov
mov
aam
arpl
lret
or
imull
daa
bound
pop
into
sar
push
push
jo
pop
sbb
das
fistps
mov
add
pop
notl
pop
inc
out
shr
repz
xchg
imul
rclb
xchg
testb
scas
clc
inc
idiv
ja
add
fidivrl
mov
xchg
pop
ret
lret
lahf
in
sbb
lds
into
imul
aam
xchg
dec
push
imul
cltd
ficoml
xchg
lahf
jg
mov
iret
xor
mov
cld
cmp
fildll
into
push
call
add
test
dec
fstpt
and
mov
sub
xor
mov
insl
fs
lods
or
add
scas
sub
dec
in
ds
cmc
xchg
push
push
jae
in
dec
lock
jmp
fcmove
cmp
fistps
pop
js
cltd
sub
pop
into
movsb
mov
jle
push
lahf
out
pushf
push
mov
push
mov
or
repnz
jns
jp
jo
in
cmp
lahf
movsbl
in
xor
jg
ds
test
ja
push
in
sbb
popf
dec
jo
jae
rcrb
xlat
and
jmp
jo
out
sub
push
roll
in
xor
cld
lret
cmp
mov
mov
ret
notb
sahf
out
sbb
mov
mov
xchg
pushf
sub
das
imul
out
filds
movsl
push
jo
pop
div
pop
jl
push
stos
mov
js
mov
fcompl
jno
imul
mov
mov
mov
cmovbe
add
mov
sub
adc
adc
pop
fdivrs
lcall
inc
addr16
fnstenv
mov
xchg
mov
jg
lcall
cs
jg
sbb
repnz
in
popa
jge
out
add
add
cmp
fnstenv
insl
or
popf
lret
jge
insl
lahf
andb
fidivrl
imul
sahf
cmp
dec
test
out
jge
jmp
shlb
mov
dec
pop
mov
cmpsl
clc
outsl
repz
lahf
jecxz
int3
scas
jns
imul
jae
loope
shlb
in
movsl
lods
jae
lret
ja
lahf
xor
pop
lret
mov
rorl
into
negl
push
sahf
push
push
addr16
or
mov
sub
xlat
pop
in
inc
hlt
mov
lret
cld
sarl
mov
gs
out
ja
inc
pusha
out
push
cld
cwtl
idiv
add
mov
lea
inc
lahf
in
cs
sar
sub
xor
repnz
mov
or
pop
mov
xchg
lahf
out
xchg
repnz
adc
sar
mov
stos
imul
add
sbb
icebp
mov
stos
lods
add
mov
aam
scas
bound
xchg
add
or
mov
and
lret
and
lahf
xor
jbe
outsl
jge
dec
push
sahf
and
xlat
adc
gs
cmp
jne
add
addb
push
push
mov
imul
in
mov
test
add
xchg
cmp
cli
xor
mov
pop
mov
add
imul
sub
idiv
xlat
test
fidivs
dec
mov
imul
ljmp
testl
test
ljmp
enter
daa
xchg
pushf
cmpsl
mov
cld
into
cli
xlat
xor
dec
add
xchg
mov
arpl
xlat
xlat
aam
gs
aas
fisubrl
sub
pop
int3
dec
mov
ss
dec
jbe
cmp
add
int
cmpsl
xor
dec
icebp
into
jae
push
ljmp
data16
mov
jmp
add
or
cld
lcall
push
push
fiaddl
xlat
fisubrl
mov
scas
sahf
mov
mov
leave
push
int
mov
ljmp
mov
scas
mov
dec
stos
fildll
out
ficoml
jg
nop
outsb
xchg
in
mov
test
pop
insl
divl
xchg
hlt
xchg
bnd
imul
xchg
xlat
mov
mov
gs
cmpb
lds
repnz
push
repnz
repnz
testb
call
mov
stos
jmp
pop
pop
mov
popf
or
add
mov
out
pop
jmp
imul
mov
loopne
lret
stos
fldcw
lea
pop
popa
cmp
dec
add
movsl
addl
cmpsb
data16
pop
addr16
push
lea
sub
cmp
mov
sub
sub
mov
add
sub
fldt
std
sbb
mov
imul
xchg
cmpsb
push
sahf
cltd
shl
xchg
mov
jo
mov
cltd
lods
icebp
sarl
xchg
hlt
dec
push
inc
jbe
ret
in
pop
lods
aam
outsl
xor
lahf
cmp
xor
addr16
dec
add
jge
cmp
stc
push
dec
movsl
std
sbb
stos
fldenv
xor
mov
lahf
lret
and
push
or
scas
mov
pop
lods
mov
not
jg
addr16
lods
sahf
cmpsl
test
cmc
stc
adc
jne
in
push
ss
xchg
out
sbb
in
dec
repz
lods
ficoms
cmc
jns
pop
std
fistpl
mov
xor
stos
mov
sar
mov
frstor
mov
dec
mov
in
int
ss
add
mov
jbe
xchg
pop
push
mov
mov
ficoml
xchg
nop
sti
mov
aas
popl
subb
mov
out
mov
mov
mov
jae
add
rolb
push
shll
int3
mov
cmp
jo
jns
jns
lods
movl
roll
xchg
ret
add
push
cmpl
xor
and
xchg
sbb
outsb
xchg
add
enter
outsb
test
orb
mov
dec
into
xor
cmp
jne
addr16
mov
or
or
enter
bound
stos
pop
fcomps
jbe
push
pushf
push
jne
jg
je
pop
pop
add
cmp
adc
push
setg
ljmp
sahf
cltd
jb
sbb
es
imul
pushf
icebp
insl
cld
cmpsl
mov
mov
out
shl
daa
int
adc
stos
je
shl
leave
andb
sbbb
data16
pop
dec
mov
push
jge
ret
into
mov
pop
sahf
movsl
outsl
xor
add
jnp
pushf
test
scas
enter
mov
fucom
lods
sarb
stos
push
pusha
mov
shl
lea
popf
xchg
cmp
test
mov
jge
test
pop
pop
test
lds
or
cmpsl
xor
syscall
pop
xorl
in
js
mov
add
sub
mov
or
dec
clc
into
cmc
scas
mov
or
add
sub
in
jle
xlat
clc
shll
daa
mov
pop
or
shlb
rcll
aam
fildl
mov
dec
in
cmp
fs
insl
xor
fstl
add
enter
jno
cmp
jns
ret
roll
out
mov
enter
loop
jno
cmp
call
xchg
jle
test
insb
cmp
out
mov
xchg
cli
xchg
or
into
fsubrl
and
lcall
fwait
cmpsl
stos
xlat
jae
xor
cmpsl
fwait
nop
mov
rcrl
test
rolb
shll
subl
fwait
fdivr
pop
fmull
fnstenv
shlb
rclb
xchg
pop
test
mov
xchg
pop
jecxz
ffreep
cmp
int3
xlat
mov
orb
add
mov
fnstsw
lds
lcall
lcall
cmp
xor
or
insl
mov
mov
ja
test
enter
fdivs
mov
lret
int
aas
scas
jbe
ds
imull
cmpsl
push
insl
iret
sarl
or
adc
mov
inc
jle
icebp
cmp
sub
push
stos
cwtl
push
jge
addb
adc
mov
mov
lahf
add
cmp
aam
in
push
push
push
je
inc
insl
pop
pop
xor
scas
inc
push
add
int
or
mov
call
addr16
ja
add
test
jo
ret
rorb
iret
movsl
mov
adc
mov
testb
ret
xlat
test
jno
mov
sub
jle
dec
rcrb
add
fnstcw
mov
sti
sub
push
lret
movsl
sub
sub
pushf
pop
cld
stos
fldt
mov
mov
clc
enter
cmp
lahf
in
int
daa
fnstenv
dec
pop
inc
fcomps
jbe
pop
mov
xlat
sub
aam
loop
fbstp
xchg
jno
pop
js
xchg
icebp
into
jb
pushf
imul
cmp
repnz
push
jae
cmp
dec
push
sti
cmp
fcomps
enter
mov
iret
cmpsl
lods
scas
adc
sub
negl
ja
mov
rcr
loop
add
pop
push
xor
mov
add
add
pop
ret
xchg
imul
push
popa
sub
pusha
bound
pop
xchg
sahf
movsl
mov
test
fsubs
mov
leave
in
in
lods
and
aas
pusha
adc
jle
mov
fildl
jle
popl
dec
cs
jno
push
test
mov
aam
mov
cs
ret
jb
movsl
mov
add
push
or
ljmp
loopw
push
popa
outsl
repz
cmp
add
jno,pt
cmp
or
xor
push
fs
push
fcoms
push
cmp
mov
fcoms
push
insl
xor
pop
clc
rcr
or
int
mov
xlat
stos
cmp
xor
stos
lea
fwait
aam
notl
sub
pop
repnz
fimull
jbe
call
daa
lret
adc
enter
cmp
mov
lods
mov
jg
cmp
xchg
xor
sub
inc
and
and
xchg
xchg
push
jle
iret
lods
pop
notb
sub
jmp
into
pop
ja
insl
jp
fwait
mov
mov
mov
out
lahf
rol
mov
ret
adc
in
jno
orb
mov
into
inc
push
inc
cs
test
mov
shll
pop
inc
xorb
stos
clc
jbe
imul
mov
pop
ficompl
mov
push
mov
enter
add
das
dec
sub
lret
out
sahf
cltd
shr
cli
frstor
in
lret
xor
scas
lret
cmpl
jne
fdivs
inc
addr16
cmp
cmp
adc
rcll
push
insl
cli
jnp
outsl
repz
cmpsb
pop
xchg
cmp
mov
into
dec
ficomps
iret
vpsrad
ret
sub
lods
std
js
mov
mov
lret
fiadds
xor
inc
sub
dec
cmp
xchg
xchg
stos
add
jmp
sub
push
cmp
pop
lret
lahf
sbbb
js
lcall
ret
outsb
mov
pushf
iret
les
mov
cwtl
mov
out
insl
rclb
nop
and
cmp
jb
dec
jg
xor
adc
mov
in
jg
shlb
lea
mov
jecxz
dec
pop
sbb
pop
mov
into
lds
lret
cltd
lret
addr16
cmp
jns
lret
sub
jle
into
negb
xor
push
pushf
pushf
popf
jnp
cmp
mov
fcoms
subb
fsubp
mov
fcoms
idivl
jae
imul
pop
jns
dec
or
mov
aam
lret
stos
sub
mov
xchg
cltd
xchg
popl
popf
mov
mov
pusha
cmp
mov
mov
std
shll
cmp
int
aam
outsb
mov
cwtl
jmp
ret
std
push
add
add
add
loop
pop
loopne
jbe
in
pushf
push
mov
cltd
mov
pop
add
mov
xchg
jns
popa
mov
jno
int3
xchg
scas
in
push
mov
pop
test
or
adc
mov
xchg
xchg
lea
xchg
mov
adc
cmp
mov
jg
into
retw
pop
push
incl
mov
repnz
pop
shl
mov
mov
add
rolb
iret
mov
mov
mov
imul
sub
cmp
ficoml
insl
movsb
repnz
cmp
jb
movl
push
fnstcw
push
fdivl
addr16
mov
dec
mov
pop
adcl
mov
mov
mov
push
jo
clc
mov
mov
enter
loope
imul
push
sub
rcll
out
xlat
jp
vmovntps
loopne
jae
jb
xchg
jecxz
cltd
stos
mov
movsb
mov
xor
mov
sbb
mov
data16
mov
jbe
adc
cld
into
loop
jl
dec
pop
imul
sahf
pushf
leave
push
push
test
cwtl
push
adc
lock
pop
xor
mov
add
or
mov
mov
aam
in
pop
repnz
lahf
in
cmp
mov
push
insl
imul
je
je
aas
mov
pop
enter
fsubrs
mov
lahf
cmp
fcoms
pop
jnp
mov
mov
lahf
xchg
into
pushf
sub
rep
lret
jns
or
notl
push
mov
sub
jnp
clc
jmp
lahf
push
lret
xchg
xor
in
jae
nop
add
mov
shll
cmp
int
rcll
xorl
add
cmpsb
loope
cmpb
pop
mov
loopne
stos
shrl
insb
in
pop
xchg
mov
mov
cmp
rcrl
addl
or
xchg
or
ret
dec
mov
xlat
cmpsl
loopne
jb
imul
cmpsl
lea
lahf
scas
sbbb
pop
mov
pop
mov
or
mov
cld
mov
pop
jo
jae
inc
bound
xor
adc
mov
jns
mov
popa
mov
mov
lods
pop
shrl
jge
mov
pusha
mov
and
push
movl
rcrl
shrl
fildll
into
testb
repz
sub
jno
mov
inc
fcomps
jnp
dec
fnsave
popf
jnp
mov
xchg
into
movsl
popf
lcall
pop
mov
loopne
pop
in
cmp
jmp
mov
fistpl
daa
rol
mov
add
sarb
xor
test
push
sbb
mov
push
sarb
cmp
mov
mov
sahf
jl
mov
hlt
add
adcb
in
verw
repnz
adc
fldt
test
jae
xlat
ds
pop
mov
sarb
aam
fidivrl
add
push
xchg
daa
into
cli
add
cs
ja
xlat
arpl
sbbb
arpl
add
scas
leave
movsb
pusha
stos
xchg
mov
sbbb
sbbl
daa
jb
xor
int
push
mov
stos
mov
imul
roll
fidivl
les
pop
lahf
adc
popa
add
cmpsb
sbb
xor
pop
mov
mov
xlat
mov
dec
xchg
jecxz
inc
add
lahf
in
push
push
notl
mov
movsb
sti
xor
mov
jae
xchg
daa
fistpl
fcomps
jle
cmp
jg
icebp
cmp
repnz
push
sar
fildl
clc
fisubrl
lods
jle
pop
pop
sbb
inc
in
lret
test
dec
xor
adc
frstor
into
rcll
enter
loopne
ret
ror
rcl
xchg
roll
add
test
movsb
xchg
push
xor
dec
mov
push
push
adc
mov
lods
daa
movsb
add
jne
mov
pushf
outsb
scas
dec
ret
xor
sbbb
push
pusha
idiv
sbb
push
decl
mov
les
sub
loop
dec
insb
addr16
mov
mov
pushf
fsub
outsb
mov
add
mov
cmc
mov
std
iret
into
jb
push
outsb
add
jns
andl
jl
test
mov
cwtl
push
test
xchg
cmpsb
lds
out
sbb
movsb
cmp
popa
das
jno
out
lods
enter
mov
pushf
inc
ret
into
or
insb
mov
xchg
push
cltd
popa
push
ret
nop
lcall
aaa
cmp
or
rclb
or
lds
shr
adc
ljmp
mov
movsl
faddl
dec
repnz
cmp
xor
sub
adc
ret
in
xlat
das
jno
push
leave
ja
or
or
cmp
mov
xchg
aam
jns
jle
or
je
mov
jp
insl
push
les
pushf
leave
in
xchg
js
jno
pushf
lahf
vhaddpd
sbb
iret
push
enter
push
lds
inc
les
test
mov
insb
int
andb
xor
adc
mov
jns
pop
mov
stc
dec
add
mov
pop
test
test
ret
dec
imul
test
add
pop
rcll
add
mov
ja
adc
push
jg
pop
push
adc
inc
dec
lock
mov
mov
into
inc
xchg
aam
adc
out
fidivrl
dec
cmp
icebp
inc
add
sbb
pushf
pop
rcll
imul
add
int3
nop
stos
push
mov
mov
mov
aaa
sbb
mov
add
cltd
push
gs
lods
shll
imul
lahf
pop
lret
dec
sub
shll
fldt
into
mov
fists
mov
xchg
out
imul
mov
sbb
jne
addr16
inc
push
push
addr16
mov
in
mov
dec
add
mov
lret
xchg
mov
imul
fstpl
repz
ljmp
fnstsw
jle
or
dec
xor
cmp
ljmp
jbe
cmpl
fisttps
fsubrs
iret
add
int
lret
leave
add
ret
mov
or
test
mov
test
fadd
nop
sub
add
mov
mov
ss
cmpb
les
mov
xchg
test
pop
mov
pop
aaa
mov
int
fs
push
int3
rorl
aaa
cmpsl
add
faddl
mov
iret
cld
xor
clc
jp
fsubrp
ja
adc
lock
mov
mov
dec
fsubs
hlt
dec
inc
push
xchg
xor
fmull
mov
fwait
xchg
enter
std
lret
cwtl
lret
lret
sub
lret
adcb
das
inc
inc
ljmp
sbbb
jnp
stos
jne
movsl
add
mov
mov
popf
adcb
xor
cmp
dec
movsl
xchg
gs
lods
data16
popf
lcall
add
in
jmp
aam
xor
cmp
leave
mov
or
addr16
mov
gs
mov
sar
ss
icebp
into
lret
sbb
xchg
ds
imull
cmp
and
negl
notb
or
push
jo
jne
jo
push
push
into
lret
push
cld
scas
sahf
cmp
lahf
mov
adc
sub
iret
xchg
mov
or
mov
dec
insl
mov
push
inc
or
pop
cltd
into
add
mov
jae
mov
jo
mull
cmp
sar
cmp
lahf
in
xchg
jbe
or
gs
jg
ret
stc
into
push
in
lret
mov
pop
jae
in
fneni(8087
mov
fld
rcl
loop
jno
cmp
into
repz
shll
mov
enter
xchg
lret
and
outsl
loopne
ret
jo
or
popa
xchg
push
cmpsb
test
sub
add
jns
mov
ret
mov
mov
sbb
mov
cltd
inc
pop
inc
mov
nop
mov
rclb
cld
gs
jmp
sbb
add
mov
andb
loopne
pop
adc
cmp
push
jp
cmp
pop
push
dec
dec
sub
mov
jae
fcmovu
pushf
jecxz
outsb
mov
gs
or
dec
jmp
xchg
jp
aam
pushf
jnp
pop
push
popa
jge
jae
cmp
push
add
ss
inc
cmp
inc
std
flds
dec
sahf
adc
jns
aas
dec
pushf
inc
push
std
pop
push
rorb
je
xchg
jecxz
fs
inc
fiaddl
add
leave
divb
jnp
push
push
add
xor
add
inc
cltd
or
xlat
jecxz
pop
into
lods
jle
aam
fstpt
and
mov
xlat
mov
sahf
nop
int
jnp
pushf
cmpsl
push
idivb
decl
mov
push
xlat
lods
into
push
xlat
add
xor
in
cmp
std
in
cmp
das
repz
hlt
stos
imull
mov
sbb
push
cmp
ret
pop
ror
call
fnsave
lahf
mov
ficomps
jnp
xor
adc
fimuls
dec
aaa
nop
sti
xchg
aam
pop
mov
std
mov
cwtl
daa
ret
leave
adc
call
loop
jno
arpl
add
rorl
lret
scas
xchg
ret
cmp
mov
adc
test
xor
add
adc
ret
cmp
mov
mov
es
cmp
add
pop
ss
shlb
ror
jl
or
cmp
jbe
insl
test
ret
add
pop
adcb
and
sbb
jecxz
lea
ljmp
cmpsb
loopne
add
ficoml
pop
push
cld
add
jb
xchg
out
adc
adc
insl
sbb
adc
pop
fwait
scas
frstor
cmp
fld
dec
movsb
in
jecxz
mov
les
cli
add
in
nop
mov
dec
push
pop
and
popl
daa
xchg
xchg
jbe
cli
faddl
jnp
push
add
add
inc
lahf
mov
rol
fwait
repnz
fbld
mov
xor
xchg
dec
mov
shr
xor
gs
jge
sub
lret
in
xchg
imul
mov
int
repz
cmpsb
add
lea
out
xchg
or
lds
clc
sub
out
jns
cmp
pop
aam
stc
fs
add
shll
or
jae
xchg
sub
outsb
rep
xchg
sti
je
xor
mov
fimuls
cli
cmc
dec
addr16
pushf
and
cmp
xchg
lret
mov
xchg
mov
jle
ficoml
ds
or
mov
test
adc
cmpsl
pop
push
fisubs
adc
lds
int
xchg
push
lods
mov
add
adc
jno
mov
into
mov
pop
sbb
add
ret
dec
ror
mov
and
add
pop
popa
xchg
or
dec
pop
mov
adc
popf
pop
push
xchg
sarb
mov
xchg
notl
lret
je
fs
fs
and
lds
lret
and
stos
mov
add
fildl
pop
je
xchg
jmp
push
sahf
mov
mov
and
imul
pop
adc
daa
int3
or
pop
xchg
test
xor
adc
pushf
add
mov
jmp
mov
push
fwait
add
add
mov
mov
mov
add
mov
mov
mov
mov
pop
jbe
dec
or
or
add
jae
jmp
popa
rcrl
into
inc
xchg
sti
mov
xlat
sbb
sahf
movsl
out
shrb
mov
add
sub
cltd
jb
into
sarb
popf
xchg
cmp
or
cltd
in
xlat
cmc
clc
into
mov
imull
sarl
fdivrl
mov
fiaddl
aaa
push
out
xor
pushf
cmpsl
jmp
cmp
mov
in
gs
cmpsb
push
xchg
mov
lahf
and
outsb
adc
popf
inc
push
jbe
jp
in
cltd
mov
and
cmp
inc
idivl
xchg
sarl
bound
popf
add
enter
cmp
or
popf
push
loope
mov
fisttpll
scas
add
dec
aam
mov
pop
ret
iret
insl
pop
or
fildl
flds
rol
mov
push
lret
mov
ror
insb
pop
and
mov
cmpsl
subb
adc
bound
pop
dec
and
test
adc
mov
and
pop
or
sbb
mov
adc
filds
mov
sbb
or
dec
jle
xorb
pop
xchg
lods
out
bound
insl
aaa
dec
addl
sbb
insb
testl
lea
jne,pt
pop
test
fisttpl
inc
pop
daa
cmp
fs
jnp
mov
imul
or
lret
mov
or
adc
clc
mov
jle
stos
or
mov
jne
xchg
mov
std
rolb
lahf
in
sbb
xor
dec
adc
cli
jg
cmp
mov
insl
add
fiadds
push
cld
lods
addr16
mov
dec
imul
pushf
test
into
in
addr16
in
jns
push
lret
cmp
dec
or
lahf
xchg
stos
insl
push
sub
mov
xor
aam
push
pop
lea
fimuls
cli
jnp
mov
gs
mov
pop
ret
mov
cmp
cmpsl
adc
rol
mov
cmp
mulb
bnd
fisttpl
mov
call
mov
rcl
sar
lret
pop
mov
mov
movsl
dec
xorb
scas
mov
testb
in
cs
dec
jecxz
daa
loope
adc
xor
fldl
shrb
dec
add
push
xlat
leave
mov
cmp
flds
int3
mov
sbb
rcrb
gs
adc
frstor
insl
sahf
push
mov
jbe
inc
adc
pushf
imul
pop
sbb
test
add
fwait
mov
inc
test
subb
jle
popa
sbb
cmp
sub
shlb
and
test
jae
fwait
and
aaa
inc
pop
leave
nop
add
ud2
js
in
xchg
pop
add
insl
clc
mov
in
aam
fistps
sub
in
aaa
pop
xor
out
ret
pop
dec
xor
pop
adc
xchg
movsl
jmp
or
aaa
pop
pop
mov
dec
loopne
jbe
pop
push
mov
loop
xor
in
icebp
sbb
into
hlt
push
inc
or
add
fwait
daa
stos
nop
sbb
sti
sub
or
sub
lret
mov
push
fs
popf
mov
push
pushf
pushf
xchg
xor
lahf
fs
mov
lret
insl
cmp
lahf
in
stc
shr
jb
push
add
xor
test
sarb
cltd
lds
std
sbb
enter
sub
icebp
aam
xchg
jmp
dec
mov
lds
dec
aam
pop
cld
daa
push
mov
mov
jo
rolb
stos
fistpl
fmul
out
jae
ds
cld
xlat
mov
push
lods
jle
push
xchg
je
push
jmp
add
stc
frstor
lahf
cs
cld
clc
cmp
xchg
sarb
inc
inc
or
dec
pop
xchg
stos
insl
jae
pop
push
or
fstpt
leave
xlat
pushl
dec
pop
jae
mov
in
roll
shrl
dec
lods
in
xor
loope
int3
popf
insb
shlb
popa
mov
pop
adc
lds
mov
add
ficoms
adc
ljmp
loope
add
fst
lret
sub
ss
aad
adcb
stos
test
xchg
add
sbb
jae
sbb
cmp
int
scas
adc
pop
lea
xchg
shlb
aam
fwait
test
xchg
pop
inc
sbb
push
daa
and
scas
mov
add
cmc
jp
out
inc
ja
negl
pop
push
and
imul
rcl
jecxz
or
mov
cmpsl
in
sbb
repz
outsb
stc
sub
sbb
adc
pop
in
push
mov
sbb
lahf
push
sahf
or
adc
lret
aas
idiv
mov
push
inc
push
test
das
popl
adc
cmp
xchg
sub
sub
fs
add
xchg
mov
xchg
mov
pop
loop
cmp
jle
lret
out
aaa
cltd
sti
sti
into
iret
rep
popa
xchg
mov
xchg
sub
push
addr16
xlat
add
rcl
add
adc
nop
into
frstor
mov
rol
xchg
test
cmpsl
stc
pop
push
idivb
popf
addr16
cmp
mov
icebp
repnz
pop
mov
dec
mov
jmp
scas
fistpll
pop
cltd
sarl
negl
mov
rcl
push
out
sahf
xlat
pop
mov
pop
test
movsl
div
subb
mov
ret
mov
jmp
mov
jmp
stc
add
add
inc
pop
add
jecxz
lods
push
xchg
add
xlat
int
rol
dec
or
sub
test
mov
movsb
adc
pop
adc
mov
xchg
bound
adc
or
insl
fcmovne
mov
jle
inc
outsl
inc
add
jae
and
rorl
mov
pop
or
test
iret
movsl
jp
dec
inc
adc
inc
xchg
lods
add
out
xchg
repz
sbb
ljmp
mov
pop
or
pop
and
fdivs
test
pusha
pop
mov
or
xor
dec
inc
pop
fwait
scas
clc
xchg
hlt
call
mov
fwait
mov
adc
push
cmp
dec
adc
data16
xchg
and
negb
ja
sti
mov
pop
adc
cmc
popf
xlat
cmp
xor
mov
outsl
div
add
aam
aad
mov
xlat
add
jnp
movsl
lret
in
xor
scas
cs
jg
xlat
adc
jg
popf
insl
fs
scas
sub
enter
addr16
aam
sbb
jns
imul
dec
aam
pop
mov
add
add
dec
adc
iret
aam
dec
popa
rcrb
out
cmp
dec
in
cmp
repnz
lahf
daa
xchg
xchg
lcall
sub
dec
adc
into
jg
ds
out
xchg
mov
into
out
mov
and
inc
dec
bound
es
negl
jne
in
ljmp
ds
add
fimull
je
adc
outsl
insb
sti
sub
jg
mov
imul
repz
mov
adc
ret
clc
insl
add
rcr
mov
lcall
mov
movsl
inc
pop
rclb
mov
jle
xchg
xlat
popf
dec
movsl
inc
popa
cmp
popa
pop
into
cmc
stos
xor
or
jo
jnp
cltd
cmp
mov
fs
sahf
lret
dec
clc
into
movsb
cmc
pushf
cmp
xor
jg
cmp
add
xchg
sarb
push
lds
fs
aam
jmp
sub
dec
sub
enter
fs
mov
aam
or
insl
or
in
cmp
ror
xchg
dec
mov
mov
in
jle
fnsetpm(287
jmp
inc
fbld
stc
ds
test
enter
ds
rcr
jnp
mov
cmp
loop
jno
cwtl
cmc
ljmp
out
and
in
xchg
in
mov
add
sbb
mov
mov
outsl
idivl
popf
mov
xchg
clc
lret
push
shll
push
fnstenv
mov
lret
jbe
jg
into
sub
mov
test
repnz
hlt
test
dec
test
or
xchg
movsl
push
ja
aas
std
aas
jb
or
add
cmp
pop
push
insl
dec
push
lret
sahf
cltd
pop
cld
rcll
stos
fimull
dec
mov
insl
mov
or
ficompl
cld
sub
jmp
mov
outsl
sahf
aam
scas
push
ljmp
repz
in
cmpsb
insl
sarb
ds
popf
mov
popf
jbe
out
insl
or
fiaddl
mov
shll
repz
aaa
addl
cmp
dec
idiv
cs
popf
data16
add
enter
inc
icebp
push
ret
idiv
jecxz
mov
add
cmpsl
lahf
aam
lcall
add
mov
lret
fcmovb
shrl
fimuls
sub
mov
xchg
push
insl
dec
cltd
mov
mov
xchg
push
ret
mov
cmp
xchg
cmpsb
add
mov
fbld
xchg
repnz
xchg
jecxz
jg
mov
or
cmp
pop
rcll
into
imul
xchg
std
rcrl
mov
movsb
scas
fbstp
pop
out
dec
lret
cmp
and
dec
test
xchg
mov
int3
lret
ljmp
repz
out
jbe
add
fnstcw
outsl
std
out
jo
add
test
out
ja
fisubrl
add
sbb
push
xor
mov
push
sar
call
ret
mov
dec
mov
hlt
repz
inc
pop
add
loop
add
adc
outsb
mov
mov
push
pop
or
or
cmc
mov
rclb
fs
lcall
lds
or
rcr
xchg
fwait
add
sub
gs
xor
iret
into
mov
lds
cmp
ds
in
xchg
or
into
mov
stc
jb
mov
nop
dec
fidivl
in
sbb
cmp
pop
rcl
jns
jle
into
mov
push
addr16
into
std
jb
lahf
in
out
push
cmpsl
mov
adc
out
icebp
jg
stc
mov
add
push
sarl
lret
dec
xor
cmp
test
out
mov
jno
cmp
jo
loop
movsl
scas
mov
jne
inc
jae
stc
xor
jmp
xchg
cld
xor
jns
dec
push
sub
loop
mov
leave
pop
sahf
dec
stc
fbstp
add
pop
nop
add
int
pop
sbb
dec
notl
clc
push
aam
jno
mov
mov
mov
ffree
arpl
push
lahf
mov
jg
dec
and
shlb
sbb
ja
cltd
pop
jae
pop
test
imul
mov
movsl
jns
jmp
insl
cmpsl
outsl
xor
lret
aas
pop
cmp
mov
sub
or
shll
sbb
insl
adc
lahf
insl
dec
into
cmp
flds
call
mov
push
mov
mov
xchg
sbb
decl
mov
nop
in
mov
xor
cli
jne
jo
add
into
pop
enter
mov
out
xchg
aam
testb
jns
lret
fisubs
into
jle
enter
and
shl
outsb
push
test
mov
cltd
mov
jno
out
jecxz
sub
cli
add
add
add
stos
mov
cld
inc
out
mov
push
jmp
ret
mov
lret
jg
mov
iret
xor
sar
or
dec
popf
push
add
mov
lods
fisubl
jb
into
mov
imul
sahf
lahf
sar
into
pop
xlat
adc
jns
dec
lret
push
lret
mov
add
test
mov
mov
xchg
daa
ret
enter
xchg
popf
gs
dec
addr16
cmp
repz
push
mov
jno
out
push
pop
ficompl
mov
jp
adc
or
xchg
ljmp
cld
sub
xchg
dec
repnz
fiaddl
into
xchg
mov
aam
out
enter
lret
cmovp
xor
stc
aam
mov
mov
dec
pushfw
or
movl
ljmp
sbb
mov
rcll
rorl
popf
dec
add
pop
push
add
enter
mov
sub
shrl
mov
std
push
push
sbb
std
sbb
pop
ret
shlb
pushf
mov
sub
pop
sti
jnp
imul
ffreep
pop
aam
lret
cmp
sarb
or
lahf
in
add
mov
sbb
inc
xchg
sti
pop
push
push
hlt
out
mov
cmp
or
inc
movsl
mov
dec
test
lret
inc
imul
fistps
mov
xor
fisttpl
flds
pushf
cmpsl
clc
imul
mov
cmp
das
rcrl
sub
aam
fidivrl
cmp
mov
lret
test
mov
jmp
lret
mov
pop
fmull
sti
pop
push
lret
mov
hlt
cltd
pop
in
pop
imul
add
sub
std
add
ficoml
add
out
out
pop
mov
lods
push
mov
push
mov
dec
xchg
aaa
aam
imul
into
mov
shrl
std
jp
rcll
add
xor
out
aam
fwait
lea
int3
fildll
mov
scas
shl
mov
cmp
cmp
mov
outsl
repnz
in
lea
sbb
push
jbe
movsl
outsl
popf
enter
repnz
cmpsl
ljmp
lret
cld
lods
negb
mov
mov
cmp
jnp
lahf
cmpsl
adc
and
outsl
xchg
repnz
push
repnz
xchg
sti
cmp
jo
mov
outsl
mov
cmp
dec
cmp
fucomi
rorl
and
inc
repnz
add
outsb
gs
jge
or
sub
ficoms
adc
fsubl
fistl
in
adc
jmp
fsts
and
cmp
inc
out
out
xor
call
adc
jmp
dec
repz
sub
lea
hlt
dec
ret
jmp
daa
idiv
loop
jmp
loop
hlt
inc
nop
pop
imul
testb
add
faddp
fists
sub
add
inc
shrb
add
sub
add
in
adc
add
in
or
add
dec
jmp
inc
add
cli
adc
inc
nop
pop
adc
jmp
add
out
rcrb
out
test
fimull
ljmp
loope
iret
fcmovbe
leave
add
int
lret
sarb
lods
test
cwtl
sahf
lcall
mov
push
jle
cmpb
cmp
mov
cmpl
push
jne
jae
aaa
add
jle
mov
test
mov
int
push
add
mov
and
jge
mov
jb
xor
jne
aam
outsb
repz
jb
cld
push
mov
mov
add
and
scas
adc
scas
mov
mov
lds
les
test
mov
fcmovnb
stos
cmp
jg
int3
pop
lods
movsb
add
xchg
scas
pop
add
inc
mov
and
mov
call
mov
jmp
sub
roll
jl
adc
aam
or
aad
enter
add
add
mov
push
sarl
mov
add
sbb
mov
mov
in
ret
add
jecxz
push
inc
mov
inc
lret
mov
mov
enter
mov
and
mov
loopne
scas
mov
rol
lods
mov
sbb
lods
adc
fcmovnb
stos
cmp
or
adc
adc
frndint
pop
out
test
adc
int3
mov
ljmp
int
call
pop
out
repz
xchg
in
and
mov
jecxz
in
jmp
jb
loope
int3
call
mov
lret
add
mov
in
pushf
mov
lods
xchg
test
xchg
andb
jl
mov
mov
lcall
cltd
cli
jbe
cwtl
outsb
xor
data16
lcall
jl
mov
nop
addl
xchg
inc
test
xchg
test
lods
xchg
inc
xchg
movsl
cli
xchg
fs
aas
mov
mov
xor
cwtl
pop
lahf
cmpsb
rorb
mov
sahf
jg
pop
adc
add
or
lods
fld
push
enter
stos
stos
pop
jbe
inc
test
call
mov
mov
jno
test
loopne
scas
pusha
jecxz
mov
in
inc
mov
out
mov
adc
add
mov
jmp
shrl
sarb
add
mov
and
xchg
mov
sbb
mov
and
mov
mov
push
mov
mov
fsubs
add
lret
and
mov
adc
sbb
mov
add
loopne
scas
push
outsb
scas
aam
push
stos
adc
ret
or
stos
xchg
and
test
add
inc
ror
pop
lods
mov
cwtl
scas
dec
add
inc
fmuls
add
mov
out
fsub
int
mov
mov
fisttpll
jecxz
mov
adc
lock
repz
push
sub
rol
or
mov
mov
leave
mov
popf
lds
clc
cmpsl
xchg
or
mov
or
jns
jno
push
add
mov
mov
jle
movsb
add
mov
cmpsb
xchg
sarl
cwtl
xchg
and
jno
sbb
shrl
jp
popf
push
adc
mov
xchg
enter
sbb
ret
inc
ret
mov
and
cmpsb
shrb
scas
adc
add
dec
aas
arpl
rorb
dec
lods
add
sub
push
pop
push
movsb
xchg
adc
test
insb
lret
pop
fimuls
mov
in
mov
push
in
add
popa
mov
insb
pop
sbb
mov
jmp
xchg
inc
ljmp
dec
adc
lcall
test
out
les
and
mov
out
mov
or
into
mov
in
mov
and
stos
push
mov
or
lret
leave
mov
mov
sub
push
sar
xchg
lds
lods
sub
inc
ret
enter
ret
repnz
test
stos
cmp
fnstcw
jecxz
dec
insl
out
imul
mov
gs
call
pop
sub
add
out
inc
in
mov
in
mov
adc
mov
lock
loope
or
or
add
pop
imul
in
mov
aam
movsl
sarb
or
in
fwait
add
scas
lcall
cltd
push
dec
add
scas
cltd
and
adc
mov
or
mov
iret
mov
push
or
cmpsl
add
sbb
stos
pop
mov
add
add
shrl
scas
repnz
cmp
ret
in
cmp
fs
mov
fs
fcmove
mov
stgi
lret
mov
and
dec
pop
daa
aaa
lods
pop
or
les
or
sbb
push
push
daa
pop
inc
adc
addr16
dec
dec
dec
inc
aas
inc
sub
jns
xchg
faddl
mov
push
mov
or
dec
push
clc
lods
pop
pop
pop
addl
pop
jmp
sarl
mov
add
jb
out
xchg
mov
shr
jb
idivb
add
mov
jb
inc
rcrb
mov
jb
test
add
inc
leave
xchg
mov
fs
inc
dec
adc
add
jp
aas
shll
jne
mov
push
test
push
xchg
sub
add
sbb
pusha
pop
push
mov
in
cmp
mov
pop
jg
inc
mov
enter
stc
lods
in
pop
fbld
les
dec
rol
mov
movsl
add
enter
shlb
movsb
and
pop
fsts
sub
mov
test
mov
lret
mov
ret
sbb
test
and
mov
les
fcmovnb
sbb
lock
mov
jl
sub
add
mov
popl
mov
mov
inc
shl
rcll
adc
jmp
pop
and
popa
lock
adc
mov
lods
pop
loopne
and
or
add
jb
addb
mov
mov
lcall
imul
jno
adcl
stos
scas
add
imul
stos
pop
shl
dec
add
push
xlat
lea
jl
movsb
call
cmp
add
mov
dec
add
jb
and
pop
inc
jmp
cmp
mov
arpl
push
stos
add
jmp
in
mov
push
mov
or
xor
scas
and
lds
add
and
lods
jno
and
add
inc
add
fidivrl
dec
inc
in
sbb
nop
and
add
ljmp
adc
int
mov
add
push
jecxz
lock
rcl
add
push
out
iret
in
add
nop
rclb
movsb
add
faddp
scas
push
jge
aam
mov
out
push
pop
test
mov
inc
in
add
jp
jo
gs
outsl
fs
mov
pop
lahf
xchg
or
jo
jo
data16
xor
pop
or
add
push
xchg
add
ljmp
pop
add
in
cld
rorl
incl
xchg
adc
add
in
inc
xchg
and
xchg
fptan
and
fidivrl
inc
movl
cmc
iret
push
fidivrl
xor
psrad
add
jns
xorb
add
dec
outsb
xchg
popf
jbe
add
dec
dec
cmp
insl
jecxz
cltd
sahf
pop
and
and
mov
imul
fld
push
dec
sub
mov
ret
scas
xor
mov
cmpsb
pop
fistpl
mov
pop
sbb
aad
mov
pop
add
jbe
mov
sbb
je
cli
je
pusha
stos
lea
jo
push
mov
jb
xor
mov
in
pop
test
inc
into
pop
mov
mov
iret
pop
jg
mov
lret
inc
mov
lret
fsubl
cmpsb
add
mull
dec
popf
pop
cmp
mov
or
imul
insb
loop
xor
sarb
xchg
mov
pop
xor
repz
dec
jge
decb
testb
add
add
popf
sbb
add
gs
push
mov
sti
push
rcll
add
pop
les
cmp
add
dec
sub
scas
add
sbb
out
mov
je
sarb
js
push
mov
pop
mov
cmpl
and
inc
int
orl
push
cmpsl
add
xchg
adcb
push
mov
mov
mov
shrl
aam
xlat
mov
ret
jns
sbb
out
pushl
or
cmp
mov
add
inc
pop
repz
sbb
sbb
inc
dec
push
push
inc
inc
add
jo
iret
fnstenv
or
jno
stc
pop
jne
loopne
jp
fsubs
imul
add
bound
sbb
lds
cmp
imul
fcom
xlat
jmp
sbb
jb
jae
aaa
mov
mov
sahf
and
data16
xchg
mov
movsl
mov
sarl
mov
push
faddp
scas
pop
xchg
xor
push
adc
mov
pop
cmp
sbb
mov
insb
mov
add
and
mov
inc
shrb
adc
xchg
stos
add
xchg
mov
add
outsb
fildl
hlt
jne
mov
cwtl
sub
pop
shll
sub
inc
fdivrs
in
jne
mov
test
lods
test
ffree
scas
push
push
mov
mov
pop
bound
sti
and
xor
dec
scas
dec
fwait
cltd
addb
add
int3
or
adc
and
inc
in
xorl
and
mov
data16
hlt
cmpsl
mov
mov
add
out
loop
repnz
loopne
repz
sbb
and
jmp
cmc
push
or
imull
repnz
add
int
adc
hlt
jg
mov
mov
rcrl
jno
pusha
cs
or
add
mov
in
outsb
fidivl
fcomps
out
jo
push
cmp
incl
js
stc
pop
jl
inc
inc
inc
data16
iret
outsl
add
pop
jne
test
cwtl
js
in
fisttpl
or
sbb
jno
dec
xor
and
adc
sub
add
jae
push
inc
add
sarl
test
pop
xorl
enter
mov
dec
push
jb
aas
movsb
aas
sbb
or
add
pop
mov
dec
add
ds
dec
pop
lds
sub
xor
dec
enter
mov
stc
loopne
aaa
sbb
pop
int
mov
cltd
shlb
mov
inc
pop
sub
pop
push
xchg
cmpsl
sarb
gs
mov
fimuls
repz
mov
mov
stos
mov
popa
mov
jecxz
mov
in
mov
jb
xchg
sti
hlt
cmpsl
int3
xorl
inc
das
sbb
sti
or
adc
and
lahf
add
mov
lods
subb
imul
mov
cmpsl
xchg
pop
add
jmp
shr
jecxz
add
push
pop
push
push
add
pusha
pusha
pop
push
pop
push
push
push
push
push
in
pop
into
push
pop
into
dec
fs
dec
pop
sub
pop
pusha
pop
inc
bound
sub
add
and
arpl
push
adc
push
popa
and
push
or
adc
sbb
pop
or
sbb
push
aas
adc
mov
pop
and
push
and
sbb
adc
or
and
pushw
pop
sub
and
in
cltd
push
adc
sbb
or
jg
pop
aas
dec
cmpsb
pusha
mov
add
cld
insb
sbb
aaa
inc
loop
add
mov
sbb
push
rcrb
mov
icebp
jns
mov
scas
dec
dec
xor
adc
fnstcw
push
sub
andl
mov
sub
xorl
xchg
insb
dec
lahf
mov
lods
xchg
out
jno
lods
mov
sbb
mov
or
add
cmp
jae
jae
imul
sbb
es
movsb
mov
jg
mov
xor
jno
lods
xchg
mov
pushf
mov
imul
inc
and
test
adc
mov
addr16
pop
ret
ret
in
data16
bound
cltd
jp
imul
repz
mov
lret
mov
add
and
pop
fs
xor
pop
lcall
add
add
dec
andl
xor
add
or
sahf
subl
pushf
test
mov
pop
add
jne
leave
mov
stos
mov
in
out
shlb
add
xchg
int3
vpsubd
adc
in
add
in
fsubr
sbb
jno
sbb
fcmovbe
sbb
test
jne
icebp
fcomip
push
lea
xor
outsb
add
lahf
ljmp
lret
cltd
cmpsb
out
jae
cmp
xchg
xor
push
hlt
and
xchg
stos
inc
stc
xchg
and
repz
test
daa
inc
pusha
cmp
decb
cwtl
push
repz
pushf
mov
sbb
ffree
mov
mov
add
add
mov
ret
sbb
jo
inc
imul
cmp
outsl
xlat
cmc
insl
aad
lahf
add
ja
lods
dec
mov
pop
mov
test
mov
jnp
or
jno
das
mov
movsl
xor
lods
mov
xor
mov
xchg
mov
jae
sub
lds
jmp
mov
cwtl
or
sbb
scas
dec
xchg
lret
adc
jns
test
cmp
push
mov
mov
popa
test
stos
pop
xchg
mov
test
dec
sbb
scas
xchg
dec
ja
sbb
cs
andl
test
sub
std
inc
cld
outsb
dec
push
sbb
mov
pop
adc
int3
inc
popf
adc
xchg
sbb
xor
mov
repnz
mov
imul
and
lods
adc
mov
loope
mov
in
int
adc
iret
mov
stc
and
xorl
leave
mov
and
inc
mov
andl
and
mov
lods
add
jns
daa
lret
pushf
insb
push
cmc
add
frstor
orl
pop
fcmovne
mov
and
movb
or
lods
push
popl
add
xlat
into
xorb
mov
lds
les
test
push
mov
adc
scas
ljmp
push
int3
loopne
sbb
loop
out
imul
insb
out
add
dec
outsb
push
cmc
dec
outsl
stc
arpl
dec
fwait
lcall
call
addr16
js
xor
insl
mov
sarb
add
xchg
out
mov
push
mov
mov
sahf
leave
cltd
mov
out
xchg
mov
push
mov
inc
add
pushf
xlat
cmpsl
shlb
enter
dec
or
fisttpl
inc
add
cmp
push
jl
cmp
mulb
xchg
jnp
pop
leave
scas
xchg
push
mov
xor
mov
mov
xchg
dec
ds
mov
mov
aas
mov
adc
flds
inc
pop
shlb
cmpsb
mov
jge
lcall
pushf
or
popa
int3
mov
lods
pop
or
fcmovne
ds
aaa
mov
xchg
imul
movsl
mov
mov
popa
mov
mov
push
mov
mov
cmp
inc
add
mov
add
bound
lea
mov
add
or
adc
or
dec
and
mov
adc
addb
jno
or
sar
out
insb
push
gs
iret
add
mov
aam
mov
adc
mov
sarb
mov
mov
scas
push
nop
or
shll
mov
leave
jge
push
loopne
ficompl
add
sarb
mov
loopne
ret
call
pushf
sahf
test
inc
pop
inc
fcmovu
adc
fstpt
fidivrs
inc
pop
in
out
pop
jmp
pop
lock
pop
pusha
repz
clc
xor
mov
std
add
daa
cmp
add
cmc
xor
insb
mov
in
sbb
push
gs
xchg
popf
fsts
enter
xchg
and
xor
and
lahf
loop
movsl
call
jge
push
sbb
test
adc
lea
mov
iret
sahf
pop
and
xor
iret
xchg
sub
int3
add
pop
and
lock
stos
pop
xchg
test
imul
jns
jmp
and
mov
and
mov
mov
pop
mov
xchg
mov
inc
test
lods
push
addr16
test
inc
lahf
gs
subl
test
adc
mov
xchg
jns
in
fwait
cmpsl
sub
mov
and
sub
adc
arpl
mov
in
call
cmc
lcall
push
xchg
xchg
lods
jmp
les
pop
jbe
stos
pop
fiaddl
xor
enter
lret
cltd
inc
sub
pop
xchg
jge
xchg
push
mov
popf
mov
add
add
or
adc
and
add
cmpl
mov
mov
add
add
ror
iret
mov
pop
into
in
adc
pop
push
mov
lret
and
lds
in
xchg
sbb
lret
mov
popf
xchg
mov
test
and
or
mov
fiadds
ror
or
popf
xchg
mov
ss
add
fiaddl
in
out
push
jmp
xor
add
xor
das
cwtl
stc
cs
jae
jae
add
xchg
pop
dec
xorl
adc
dec
fistl
cmp
xor
push
in
cltd
pushf
ljmp
sarl
flds
lods
lods
xor
stc
cmp
faddp
jae
ret
stos
pop
xorb
adc
add
mov
test
subb
jo
idivl
call
push
jnp
movsb
in
cmpb
xchg
pop
push
adc
gs
gs
popf
in
and
rcl
popf
jb
xchg
mov
insb
int3
adc
pop
mov
js
mov
push
mov
pop
test
outsl
xlat
cmp
sahf
js
pop
adc
jns
mov
data16
push
sub
sub
je
sub
pop
pop
test
xorb
fsubrl
xchg
in
daa
mov
pop
xchg
int
mov
cmp
cwtl
sbb
and
lods
or
mov
mov
stos
inc
push
sub
pop
push
stc
push
pop
cmp
or
data16
jge
cmp
scas
xor
cli
cmp
mov
andb
add
xchg
repnz
mov
sahf
outsl
hlt
push
test
pop
mov
pop
adc
int3
mov
mov
mov
lods
lcall
add
insl
bound
mov
aaa
sbb
add
add
add
ss
mov
and
mov
fs
cs
leave
xchg
add
push
push
xlat
lods
add
inc
lds
cmpsl
jo
fxch
lds
jne
fs
aam
adc
test
sub
in
out
lods
cmp
faddl
ror
add
fwait
lea
push
sub
fisubl
fldt
lcall
in
and
mulb
inc
or
and
ud0
cmp
mov
add
cwtl
adc
dec
inc
push
add
jle
repz
daa
mov
popa
mov
fwait
int3
fcmovnbe
add
jbe
loop
push
in
inc
test
stos
stc
inc
mov
add
add
cs
jno
jmp
mov
in
popf
flds
stos
insb
mov
outsb
sbb
lds
mov
outsl
add
dec
gs
push
dec
shlb
pop
cmpsl
mov
inc
mov
mov
mov
sarl
and
mov
mov
dec
push
outsb
les
xchg
jg
push
in
jae
mov
sub
shll
mov
cmpb
sbb
inc
add
out
add
pop
cmp
pusha
adc
pop
mov
jbe
push
repnz
popa
jne
ret
ds
adc
mov
loope
movsl
inc
pop
cli
iret
mov
sbb
int3
mov
mov
in
repz
ljmp
adc
test
pop
mov
add
mov
xchg
xchg
xchg
loop
pop
mov
jmp
add
xor
in
fdivrl
jge
jno
gs
insb
testl
ljmp
mov
add
sbb
rcll
mov
lods
mov
mov
pop
push
je
inc
ret
mov
movsl
add
cmpsb
aas
int3
add
loop
shll
sbb
loopne
xchg
fwait
or
inc
or
stos
add
fcmove
jo
daa
adc
pusha
jnp
ss
sbb
xlat
and
flds
cmp
jl
pop
out
ss
repz
sbb
std
lahf
arpl
sbb
lcall
cltd
mov
fadds
inc
or
cmp
pusha
pop
xor
jle
insb
mov
in
pop
data16
outsb
or
add
mov
mov
jmp
mov
sbb
and
inc
inc
sub
sti
stos
push
aaa
sbb
subb
adc
nop
daa
pop
fldcw
inc
sub
mov
dec
mov
inc
add
dec
push
test
sub
push
sahf
push
fwait
sub
out
mov
pop
mov
addr16
push
or
mov
or
mov
xor
call
lret
mov
inc
insb
push
xor
adc
and
sbb
dec
xor
push
add
mov
lods
leave
ror
ret
jl
push
pop
add
or
js
jo
dec
das
pusha
iret
int3
mov
cltd
xlat
mov
loope
mov
insl
push
adc
push
popf
cmp
mov
xchg
popf
sbb
mov
and
inc
jle
inc
mov
inc
cmc
cmp
mov
add
shrl
push
shll
int
xchg
add
dec
or
jb
cmpsl
push
sbb
cwtl
mov
cmp
stc
add
or
xor
fildl
scas
pop
ret
les
or
xchg
xchg
loopne
mov
sub
mov
je
fwait
cmpsl
aam
and
pop
or
mov
add
pop
aad
ret
popa
sbb
fcmovbe
and
mov
xchg
pop
adc
add
or
mov
add
fxch
mov
test
into
pop
sbb
fistpl
das
faddl
jecxz
xor
call
adc
hlt
adc
sti
add
adc
sbb
adc
push
cmp
lcall
add
adc
xor
test
out
or
mov
loop
fcom
fildll
pop
in
or
mov
mov
imul
in
mov
jecxz
xchg
fildll
stos
mov
push
cmp
shll
sarl
add
jnp
mov
mov
pop
lret
sub
jb
ljmp
sub
or
lret
stos
mov
mov
icebp
mov
mov
scas
cmp
pop
mov
daa
mov
insb
jmp
mov
mov
jnp
loop
inc
ds
xlat
mov
das
and
adc
mov
mov
add
pop
cmp
mov
jmp
xchg
xchg
cmpsl
inc
fisttpl
cli
pop
and
mov
pushf
outsl
in
sub
pop
pop
mov
imul
lods
dec
push
cmpsb
imul
pop
pop
lds
out
inc
int3
jp
popf
je
jae
lods
dec
push
mov
xchg
dec
adc
xor
sbb
mov
and
lret
add
adc
xor
adc
mov
movsb
mov
pop
add
into
enter
pop
mov
lods
mov
addr16
push
test
jle
les
mov
lcall
into
add
je
gs
aad
mov
stos
dec
cwtl
popl
mov
or
or
scas
mov
aas
fcmovnbe
jo
adc
sub
sahf
pop
pop
inc
ficoms
loop,pn
int3
in
in
jmp
adc
notb
sar
and
inc
push
and
pop
cmp
mov
add
and
sqrtps
cmp
stc
mov
insl
xchg
mov
push
fmull
push
or
imul
imul
mov
mov
out
movsl
call
mov
enter
dec
push
adc
sub
push
sbb
mov
push
jmp
inc
xlat
mov
jle
repnz
das
dec
pop
or
lcall
xchg
int3
mov
jmp
mov
lods
imul
jge
imul
jns
cmpsl
inc
fmuls
jg
inc
imul
lahf
mov
rcr
jmp
lods
mov
je
add
and
test
lods
pop
popf
sbb
loopne
and
ljmp
daa
popf
insb
scas
jae
push
je
lock
jno
adc
jle
enter
xor
xor
std
xor
or
push
iret
into
and
add
movl
into
mov
jno
or
int3
pop
lret
lea
fst
lret
xor
ror
or
add
or
out
fiaddl
jmp
movsl
inc
add
fldt
adc
int
add
jmp
mov
popa
jno
test
add
pusha
jae
pop
repnz
xchg
std
pop
and
jg
test
aas
std
pop
fwait
mov
mov
fistl
hlt
pusha
jno
movl
in
dec
movsb
into
pop
jge
cli
dec
sub
inc
inc
aaa
inc
dec
pusha
test
imul
nop
jb
subb
addb
inc
cmp
aaa
pop
xlat
dec
loopne
add
repz
mov
jnp
lret
mov
out
pop
mov
rolb
dec
mov
dec
mov
mov
out
xchg
lods
pop
in
mov
mov
sahf
mov
loope
scas
push
in
fcmovnu
jp
mov
xchg
aad
mov
lds
imul
xor
add
shll
ss
loop
push
enter
add
icebp
xor
or
inc
jmp
cld
inc
sti
mov
std
lock
mov
push
push
popa
add
mov
mov
les
shl
dec
fildl
mov
jecxz
rolb
rorb
loop
psraw
out
cmp
mov
out
call
push
mov
loope
adc
sbb
out
fst
add
call
mov
jl
out
cmp
imul
cmc
imul
jnp
push
xor
sbb
pop
mov
mov
xor
inc
dec
data16
inc
rclb
or
fbld
leave
mov
add
mov
or
push
movl
das
and
jle
test
mov
cmp
push
pop
xor
and
pop
and
out
in
imul
sti
jns
das
mov
movsl
mov
imul
push
pop
jb
pop
mov
mov
inc
xchg
mov
mov
add
mov
sub
imul
pop
jge
fmull
ljmp
lret
outsl
push
je
cli
pop
cltd
mov
jno
lods
pop
bound
pop
pop
movsl
dec
sbb
rcrb
mov
fcmovbe
push
lock
push
mov
add
rolb
aam
ljmp
loop
ds
xor
sub
push
in
mov
push
jbe
add
mov
les
ljmp
pop
ljmp
loope
call
sbb
add
adc
pusha
icebp
loope
mov
cmc
mov
dec
mov
popf
pushf
jno
push
in
mov
pop
in
in
add
jmp
repnz
cmp
mov
hlt
je
test
push
call
test
jb
pushl
loope
jo
cmp
pop
fs
and
or
cmp
cmp
inc
insb
xchg
mov
stc
dec
sbb
repz
jb,pn
mov
movsb
inc
roll
pop
and
and
dec
cmp
aaa
push
lret
add
sbb
mov
or
leave
push
and
pop
inc
add
cmp
adc
push
xchg
push
mov
arpl
mov
mov
add
sub
lret
sbb
dec
rcl
pop
mov
pop
mov
mov
and
sub
fistpl
lods
mov
popl
lods
fs
lods
pop
movsl
stc
inc
movsl
mov
mov
lret
sbb
add
jg
jb
jo
insb
jbe
out
sbb
jge
into
mov
jle
mov
mov
pusha
pop
jp
fsubl
sbb
or
test
cltd
in
movsb
and
jp
mov
lock
out
aam
add
or
add
lsl
mov
lods
outsb
orl
inc
pop
add
fisttps
cmpsl
lahf
sahf
ljmp
call
repz
ljmp
hlt
jg
icebp
outsl
into
jge
clc
jl
testb
adc
pop
jp
adc
mov
sbb
mov
imul
pop
int
inc
pop
shll
rol
fildll
mov
out
int3
sbb
fsubrs
pop
inc
ffreep
scas
cmpsl
pop
cmp
push
mov
jne
mov
push
ds
testl
imul
arpl
add
inc
or
das
stc
inc
pop
je
push
push
mov
out
int
and
daa
jle
and
nop
lret
xchg
ljmp
sub
jb
mov
add
xor
sbb
lds
iret
notl
mov
in
imul
mov
orl
call
movsb
sub
movsb
mov
mov
push
mov
pop
mov
mov
mov
mov
lock
pop
scas
pop
pop
addr16
daa
jle
push
jg
jnp
xor
xchg
in
dec
add
cltd
daa
repz
mov
fldl
pop
adc
leave
mov
in
aad
mov
inc
add
imul
cmp
fld
sbb
fadd
sub
jno
icebp
ljmp
xchg
push
loope,pt
out
ficoml
f2xm1
mov
sub
jno
mov
sarb
gs
mul
insb
add
cli
in
add
rol
xchg
xchg
cli
test
popa
adcb
imul
mov
sbb
jns
mov
insl
push
sbb
or
fidivs
xor
lock
into
pop
mov
lret
mov
mov
negl
pop
cmp
rcr
pop
into
add
jns
shl
std
mov
sub
cmp
mov
sarl
fistpl
dec
mov
add
enter
pop
sbb
out
mov
add
xchg
adc
mov
mov
xor
lret
mov
adc
lret
jb
loope
lea
pop
xor
lods
movsb
add
dec
test
jg
roll
lds
lret
stos
dec
push
cmpsb
imul
cmpsl
xchg
jb
into
dec
call
jns
rorl
mov
test
jae
scas
jmp
mov
mov
fisubs
lcall
imul
add
sub
mov
pop
cwtl
sub
je
ficompl
sti
cmpsl
jmp
shr
rol
mov
mov
xor
mov
lret
adc
mov
push
sub
ss
mov
mov
in
dec
add
leave
clc
mov
lea
decl
or
mov
and
scas
xor
std
and
imulb
xor
mov
leave
sbb
pop
fsubr
cli
sar
cli
mov
xchg
in
mov
pop
in
mov
into
or
out
cmp
dec
sub
mov
lea
sub
lods
pop
mov
rclb
in
add
lods
inc
add
loope
test
aad
dec
sub
mov
sub
mov
add
in
stos
mov
mov
sbb
test
shrb
lret
mov
mov
sub
mov
add
movsl
push
adc
mov
dec
add
adc
add
xorb
mov
jge
enter
or
out
outsl
lods
mov
dec
push
std
mov
sahf
and
repnz
mov
mov
lahf
js
aam
mov
mov
mov
fistl
mov
enter
jbe
jmp
xchg
cs
fdivs
cli
lods
inc
push
cmpsb
js
jmp
adc
mov
loopne
xchg
lea
ficompl
in
mov
add
dec
pop
movsl
int
xchg
xor
cli
cmp
xchg
add
sub
lea
add
sbb
sub
and
rcr
add
cmp
mov
adc
add
cld
aaa
cwtl
push
add
inc
lcall
add
and
sarb
hlt
xchg
adc
pop
jmp
push
stc
sbb
add
cld
adc
jle
dec
cmp
adc
fiadds
insb
inc
js
notrack
lahf
jmp
push
scas
push
lret
aaa
and
add
leave
mov
scas
xlat
out
pop
ret
jne
dec
pop
movsb
sti
aas
jo
cmp
popl
out
and
popa
cmp
sub
cmp
xor
sub
cld
fisubrl
xor
cmp
pushf
and
fbstp
repnz
cmp
lcall
jmp
and
xchg
add
sub
jo
push
add
shlb
add
dec
in
rcrb
jo
sbb
aas
inc
pop
cs
bound
pusha
arpl
cmpb
sbb
mov
xchg
cltd
jno
push
addl
jp
add
xlat
rcrb
jo
imul
mov
cmp
nop
pop
out
add
cmpsb
mov
pop
imul
insb
int3
loop
loopne
cmp
add
add
pop
lock
bswap
loopne
rcrb
xor
lods
adc
pop
mov
cs
xor
call
lret
pop
loopne
push
cmp
or
or
paddw
pop
scas
jmp
in
xchg
add
adc
rcl
movsb
je
repz
jmp
sahf
inc
fs
jl
or
add
push
test
sbb
sbb
sbb
and
and
or
and
xor
xor
xor
ss
and
ret
sub
xor
inc
dec
jo
and
pop
push
dec
sbb
insl
jl
and
addr16
cmp
push
dec
scas
inc
add
xchg
push
sbb
push
pop
sub
pop
or
push
push
push
pop
bound
imul
je
sbb
fsts
movsb
pop
jo
cmp
jns
fisttps
aas
out
arpl
push
popa
jae
add
ret
mov
outsl
scas
or
jb
les
enter
jp
xor
aam
xchg
xchg
test
cmp
jae
mov
cmpsb
xchg
aas
js
add
add
push
or
add
sahf
sbb
xchg
test
jge
scas
nop
cmp
mov
lds
jg
jo
jg
arpl
fdivrs
sbb
ret
adc
pushf
js
fstpl
ja
rcr
lcall
imul
mov
jne
in
cmp
lock
test
stc
add
cld
andl
xor
loop
loopne
rolb
mov
xchg
in
jecxz
cwtl
cltd
jecxz
sahf
mov
mov
xchg
mov
loope
lahf
rorb
jo
sub
stos
ret
lret
jo
inc
mov
cmp
mov
pushf
xlat
test
lahf
fbstp
add
fmuls
mov
sub
scas
aaa
out
ret
call
or
jno
loopne
loop
loopne
jno
loopne
jb
loopne
faddl
adc
sbb
sbb
add
lds
add
jle
jl
sbb
sub
inc
add
and
and
js
pcmpgtb
xor
xor
add
adc
sub
pop
jp
and
cltd
dec
sub
jo
dec
sub
push
loop
mov
sbb
or
jnp
add
inc
push
inc
jns
dec
inc
data16
cwtl
mov
or
push
inc
outsb
cmp
pop
push
pop
pop
xchg
jae
movsl
push
scas
pop
das
inc
insb
xchg
and
sub
les
cmovl
cmp
jae
add
ja
mov
jno
push
inc
push
inc
push
je
mov
or
xor
adc
aas
das
loopne
cmp
add
jle
pop
add
jge
jno
sbb
pop
adc
push
sub
data16
les
adc
jge
call
xor
sbb
or
jnp
rorl
arpl
cs
or
adc
pop
jns
imul
pop
nop
ret
inc
jo
sub
add
xchg
loopne
xchg
mov
mov
pop
lret
sbb
nop
lahf
faddl
jl
leave
loope
mov
cmp
mov
int3
cmp
out
movsl
femms
add
cltd
jge
push
shlb
js
adc
xchg
push
adc
lds
shll
fwait
or
dec
cmpsb
push
xor
inc
sbb
in
push
jp
add
arpl
adc
ds
dec
jg
add
and
adc
or
xor
sbb
cmp
add
gs
mov
mov
scas
push
push
jno
jnp
mov
adc
js
mov
sub
adc
xchg
mov
push
adc
inc
into
and
mov
adcb
mov
xchg
jle
xor
adc
push
sbb
gs
cmp
shlb
push
push
pop
pop
and
adc
addr16
and
rclb
adc
add
aaa
mov
sbbb
add
xchg
xchg
and
xchg
loopne
ret
adc
test
pop
xchg
and
roll
xchg
mov
nop
aaa
xor
aas
and
adc
or
adc
and
jae
dec
jnp
xchg
xor
push
adc
shlb
jne
adc
std
add
mov
mov
adc
xor
ror
js
dec
call
jb
mov
rorl
push
push
push
adc
or
or
sbb
add
adc
sbb
test
pop
sbb
and
sbb
xlat
out
add
adc
cmp
xor
fucomi
push
sbb
cmp
sbb
pop
and
sub
and
add
aas
cmp
adc
xor
lahf
pop
pop
xor
cmp
inc
iret
push
cmp
push
push
dec
sub
push
dec
fisttps
sbb
push
dec
adcb
xor
jo
sbb
ds
cmp
inc
js
pop
dec
cwtl
pop
dec
push
or
push
push
adc
pop
gs
lds
dec
push
in
pop
push
cwtl
pop
xor
or
test
out
adc
push
push
sbb
push
pop
jno
pop
pop
rcrl
push
push
jne
pop
dec
aam
fs
jo
pusha
jp
jge
sbb
pop
mov
jl
shll
shlb
cmp
clc
pusha
jmp
pusha
mov
sbb
jns
add
fisttps
fnstcw
out
or
jne
cmp
jnp
fwait
push
jbe
xorl
push
or
push
fadds
bound
addb
fimuls
adc
xchg
rolb
mov
cmpsl
je
lcall
jp
mov
sbb
jae
cmp
jae
ja
pop
add
add
lea
dec
mov
xchg
sub
movsb
xchg
or
add
lock
scas
add
mov
xor
stos
mov
lods
jo
je
push
mov
mov
mov
sbb
lds
sub
adc
mov
jmp
mov
and
int3
out
imul
out
nop
or
cmp
and
cmp
negb
into
jo
jno
add
xorb
adcl
mov
sbb
add
xchg
xchg
popf
mov
fldcw
jo
mov
add
mov
xchg
mov
lcall
cwtl
stos
sub
test
jo
mov
pushf
push
xor
xlat
cs
mov
pop
fldenv
cmpsl
stos
cmpl
mov
mov
lock
mov
xchg
int
movsb
les
or
cmp
add
shrb
aam
sbb
cmpsl
or
lods
loopne
dec
shll
stos
lret
mov
aam
shlb
xor
mov
shll
jecxz
movsl
call
sarb
rcr
mov
inc
sub
lret
js
repz
loopne
jb
loopne
jb
loopne
sub
out
in
jecxz
repz
add
jl
cmpsl
add
push
aam
roll
ror
stos
cmpsb
lds
add
or
les
jnp
push
iret
push
mov
imul
push
dec
cmp
add
cmp
nop
sahf
addr16
je
sbb
jne
clc
dec
push
cmpsl
and
lret
adc
add
xor
and
xor
movups
dec
xchg
ret
lret
int3
cmp
and
cltd
cmp
repz
pop
sub
ret
adc
sbb
and
xchg
notb
sbb
sub
push
sbb
dec
or
and
sub
test
aaa
adc
and
sub
dec
pop
push
lret
sub
jl
call
leave
adc
popf
cmp
andl
mov
das
cmp
adc
jge
sbb
jg
addl
add
inc
cmpsb
rclb
lods
mov
insb
add
mov
je
clc
scas
or
shrl
inc
cmpl
mov
test
mov
mov
jge
fcompl
mov
inc
sub
ret
jae
cmpl
mov
push
std
sbb
aas
mov
das
fldcw
jnp
clc
push
mov
scas
mov
adcb
pop
lds
cmp
nopl
mov
and
and
push
inc
arpl
insl
xor
rolb
jp
or
gs
fs
inc
rcrl
push
add
inc
pop
jne
pop
cmp
imul
ret
add
push
jo
push
mov
lcall
sbb
add
xchg
inc
es
dec
outsb
add
sub
cld
mov
bound
popa
jg
bound
add
outsb
jno
out
sbb
lret
mov
sub
lods
xchg
ljmp
das
sub
int
test
add
push
inc
out
ds
mov
push
sub
inc
xor
sub
les
pushf
gs
pop
adc
jae
or
xor
xchg
gs
sbbb
inc
or
aas
or
test
cmp
mov
mov
sub
mov
add
cmpsb
push
sub
push
adc
inc
pop
pop
out
add
cmp
subb
lea
sub
add
pop
enter
inc
mov
dec
xor
sbb
push
std
int
popa
mov
xor
adc
outsl
imul
mov
dec
inc
inc
test
enter
add
xor
cmp
and
sbb
xor
mov
jecxz
addr16
pop
xchg
cwtl
pushf
imul
jp
test
enter
fwait
mov
xchg
sahf
fsubrl
add
roll
cmp
out
add
fcomps
xchg
add
push
jmp
xchg
mov
ljmp
pushf
jl
int3
sbb
aad
wrmsr
ljmp
mov
dec
dec
aas
jo
push
jl
sbb
leave
sbb
loope
test
adc
sub
cltd
arpl
push
adc
adc
sbb
pushf
add
jo
imul
jge
add
adc
pop
repz
push
mov
lock
pop
movsb
jo
sbb
sub
loopne
clc
sbb
sbb
mov
stos
inc
mov
xchg
adc
push
dec
in
dec
cmp
push
out
insl
dec
sbb
xchg
loope
push
push
push
dec
popa
nop
mov
push
ret
test
ja
sbb
lock
pop
mov
or
mov
mov
sbb
mov
xor
insl
mov
xor
ss
test
cmpsl
jl
mov
sub
into
push
jmp
push
add
mov
sbb
nop
fcompl
adc
pusha
nop
sbb
imul
mov
scas
sbb
pop
xor
in
push
or
mov
popl
or
add
mov
fiaddl
push
xchg
nop
test
xor
push
insl
xor
xor
push
and
xchg
ja
mov
cli
lcall
sub
push
push
inc
das
mov
scas
jns
add
sub
sbb
sbb
int3
mov
adc
lds
dec
mov
jbe
ret
mov
mov
mov
inc
and
pop
jbe
bound
jbe
jo
xchg
add
rcll
cmp
es
or
inc
pop
stos
popa
adc
xchg
xor
popf
lods
jno
jns
sub
stos
mov
pop
in
bound
aas
loope
mov
jecxz
ss
dec
xchg
sbb
xchg
jp
shll
mov
aad
sbb
xchg
popa
in
pop
cmp
lods
add
lock
lods
imul
repnz
in
push
testb
mov
pop
jl
add
or
xchg
orb
push
or
pop
or
shufps
adc
jo
dec
sbb
in
sub
jno
sbb
and
or
xlat
andl
subps
sbb
sbb
out
cmp
sub
xor
popf
inc
cmp
cmp
push
and
inc
and
xor
xor
daa
js
sub
or
cmp
pop
xor
cmp
jno
jo
jns
jo
ja
ret
jo
inc
aaa
orb
loopne
cmp
push
push
dec
sub
pop
cmp
inc
jo
testb
sbb
dec
xor
pop
pop
xor
fs
cmp
popaw
cmp
arpl
jo
imul
mov
pusha
imul
faddl
dec
inc
or
mov
pop
inc
pop
in
test
push
rcll
mov
cmc
mov
and
in
dec
arpl
and
xorb
imul
popa
ja
bound
jno
out
xor
pop
cmp
imul
je
arpl
xchg
pushw
push
sub
sbb
pusha
outsl
insb
loopne
jo
outsl
outsb
jp
mov
dec
jae
push
push
sarb
loop
pushf
mov
cmp
orl
push
loopne
addr16
mov
sub
mov
cmpl
mov
mov
jne
dec
stos
push
or
test
sbb
mov
adc
and
xorb
jl
pop
les
mov
inc
test
mov
xchg
fwait
add
addb
cld
shlb
popf
and
push
dec
xchg
test
cmp
mov
sbb
mov
or
xchg
out
push
fwait
call
xor
js
ret
xchg
add
iret
fneni(8087
rcr
sarb
adc
pop
sub
aad
push
jbe
pop
js
or
enter
cmp
fdiv
or
fs
je
sti
push
addb
fmuls
or
or
xchg
sub
xor
mov
mov
or
xchg
mov
xor
jnp
hlt
pushf
jo
add
scas
lds
stos
add
mov
and
cmpsl
sub
popf
test
add
mov
cmp
stos
stos
shlb
xchg
cltd
or
mov
shrb
aas
and
clc
sahf
and
xor
cltd
or
jmp
fidivrl
xor
mov
fidivs
shlb
js
loopne
mov
sub
ljmp
pusha
push
rolb
scas
les
mov
iret
sbb
mov
mov
mov
xchg
mov
movb
into
rorb
lret
dec
faddl
sbb
pop
fcoms
fmull
inc
out
jmp
loope
sub
dec
divl
stos
mov
adc
filds
jo
fcompl
fcmovnu
fucom
jl
xlat
scas
push
dec
and
or
cmp
push
sub
mov
repnz
or
push
push
or
pushf
fsubrl
mov
aas
lods
mov
aaa
in
shlb
jbe
call
ds
xor
pop
sbb
pusha
sahf
outsb
cmp
into
int3
int
ja
stos
dec
lret
mov
adcb
lret
int3
push
iret
cmp
cmp
into
hlt
mov
and
xor
scas
xchg
mov
jno
add
inc
call
sub
cmp
outsl
mov
adc
fstl
jbe
scas
pop
add
or
pop
fs
cmova
or
push
sbb
mov
cmp
fdivrs
cmp
mov
dec
add
fs
mov
jg
mov
lcall
repnz
ror
lcall
cmpsl
aam
cmc
mov
subl
and
sub
inc
bound
mov
and
nop
mov
ret
pusha
and
and
add
data16
add
leave
adc
addr16
xor
add
daa
cmpsl
mov
add
xchg
popa
mov
lret
add
pop
pop
dec
ljmp
gs
mov
xor
inc
push
push
pusha
aad
jecxz
je
pop
popa
or
add
lds
inc
or
xchg
push
xchg
xor
test
pusha
add
sub
or
pusha
test
jo
jl
lea
pop
cmp
add
ret
lds
pusha
or
xchg
dec
xchg
dec
or
sub
enter
js
jne
mov
andl
icebp
cmpsb
rol
add
repnz
or
or
add
jp
rol
xchg
shrl
popa
ret
arpl
pop
add
sbb
fsts
pop
mov
add
js
adc
adcb
out
jno
xchg
popa
flds
mov
pop
add
or
xor
xchg
cmp
je
nop
push
js
pop
sbb
and
or
add
sbb
insb
or
xor
jb
loope
xchg
pusha
out
inc
sub
mov
pusha
pop
popa
popf
cmp
inc
add
xchg
jge
enter
test
xor
inc
les
mov
sbb
jl
sub
sarb
stc
mov
in
cmpsb
sbb
mov
mov
inc
adc
mov
add
or
jne
mov
and
push
inc
xor
mov
and
add
inc
xor
cmp
test
jo
cwtl
dec
xchg
xchg
je,pt
test
bound
inc
orb
dec
add
and
lds
jge
push
xor
jo
xchg
pop
shll
mov
or
out
fildl
popa
cwtl
or
mov
and
add
push
dec
iret
and
mov
lods
push
or
enter
lds
mov
mov
popf
aaa
jle
cmpsb
jae
mov
hlt
ret
arpl
mov
loopne
sub
rorb
pop
stos
jae
dec
in
push
mov
pop
fstpt
lds
hlt
shlb
lds
mov
push
pusha
mov
or
push
dec
dec
bound
les
into
pop
daa
imul
popa
cmp
xor
xchg
gs
sub
push
mov
ret
test
test
das
push
das
movb
stos
mov
les
mov
rcll
adc
adc
popa
inc
sub
pop
sub
fs
lret
cmp
and
push
cmp
test
mov
add
push
das
and
inc
jle
mov
dec
ljmp
jne
lahf
jg
sub
push
or
test
lock
add
pop
mov
lahf
push
pop
das
fmuls
push
pop
xchg
pushf
cmp
or
sbb
cltd
inc
cmp
and
pop
ss
sbb
pop
push
xchg
test
sub
mov
or
mov
push
dec
scas
je
adc
inc
cmp
xor
cmp
jmp
call
movsl
cmp
mov
mov
sbb
cmp
or
jmp
jno
cli
or
flds
adc
mov
sbb
mov
loope
mov
inc
ja
mov
cmp
mov
or
sbb
repnz
cld
sub
test
std
sub
push
pop
sub
push
mov
push
push
adc
out
jp
rcrb
mov
sbb
push
xchg
push
mov
in
add
push
sbb
sbb
inc
rcll
dec
sbb
sbb
or
pusha
mov
ds
add
lahf
imul
aas
dec
fistl
add
lahf
lds
sbb
mov
imul
popf
adc
addr16
pushw
outsl
dec
inc
sub
add
cwtl
sub
insl
sbb
sbb
jns
mov
roll
adc
inc
or
arpl
or
outsb
dec
xor
and
shll
cmpsb
sbb
fdivl
pushf
cs
adc
xchg
or
xchg
push
sub
loopne
movsl
push
jae
pusha
cmp
sub
popf
xor
xchg
xor
xor
xchg
add
lret
mov
lret
nop
add
pusha
inc
xor
xchg
addr16
push
xchg
xor
int
push
mov
sub
xor
push
jle
in
mov
inc
orl
push
xchg
inc
fcompl
sub
int
js
psubusb
mov
mov
stc
je
mov
cmp
xor
dec
test
shrl
xor
add
int
cmp
sub
mov
mov
mov
arpl
pushf
cltd
gs
enter
or
loope
leave
jle,pn
push
or
xchg
or
dec
xor
and
or
insb
filds
addr16
dec
push
push
mov
fldlg2
addb
sub
jb
cmp
int
mov
roll
pop
ret
cmp
cmp
sub
pop
push
sub
fldenv
or
nop
imul
imul
jp
push
jae
daa
sbb
adc
mov
adc
scas
sbb
std
dec
into
shlb
mov
adc
xor
add
jge
mov
adc
or
push
xlat
jmp
mov
lods
scas
pushf
inc
dec
push
cmp
insl
inc
jge
sbbl
xor
add
sub
and
outsb
dec
outsl
shrl
rclb
add
leave
lds
and
js
stos
add
mov
mov
add
cmpsb
pop
ds
or
jmp
clc
cmc
testb
imul
add
je
mov
or
pop
adc
rcrb
adc
and
sub
cmpsb
lods
sbb
inc
pop
mov
rolb
addl
dec
test
mov
icebp
sbb
bound
jg
add
stos
inc
stos
sub
push
adc
femms
pop
daa
and
adc
adcl
adc
add
faddl
push
dec
sbb
cwtl
add
rolb
in
fstpt
div
sti
repz
hlt
cli
std
out
stc
out
clc
fldt
cmc
mov
fwait
repz
dec
idiv
clc
cmp
dec
cmc
sti
mov
and
test
popa
cmc
std
testb
and
iret
mov
jecxz
sbb
enter
fs
mov
pop
pop
adc
pop
jo
cmp
mov
bound
jge
imul
cmp
sbb
or
or
pop
add
adc
ljmp
ljmp
fstps
mov
mov
pop
shl
fadd
loope
xchg
cmp
fiaddl
cltd
fildll
pop
xlat
xchg
mov
popf
mov
mov
or
push
dec
lahf
aaa
adc
scas
test
add
fcomps
xchg
scas
mov
lret
pop
cmc
jp
dec
in
cmpsl
xorl
add
and
inc
xchg
lcall
lret
into
add
fnstcw
fidivrl
aad
leave
rorb
clc
jo
inc
push
dec
daa
or
aam
lret
pop
mov
enter
es
int3
push
add
cli
repz
call
jg
xchg
mov
stos
xorb
out
sarb
xchg
lcall
mov
rorl
in
mov
roll
and
imul
xabort
add
out
out
pop
ljmp
pop
lock
repz
out
out
mov
add
ret
pop
add
jp
cmp
add
ret
jmp
cwtl
imull
sbb
imul
adc
fldt
loopne
xchg
rclb
sub
mov
mov
fstl
jmp
lcall
sbb
test
add
mov
fstps
cmpsb
mov
cwtl
call
jp
inc
mov
loope
jb
mov
nop
push
cmp
mov
loopne
mov
cs
lea
cmc
pop
or
or
aam
pop
out
cli
bnd
decb
add
inc
sbb
adc
inc
xchg
shll
push
repz
xor
outsb
push
insl
xchg
push
push
insb
or
ss
jb
f2xm1
xchg
les
adc
or
ja
jo
jb
push
lret
lret
inc
xchg
frstor
pop
aam
fildl
iret
lock
cli
repz
add
lret
mov
sarb
loop
ss
dec
and
rcrb
into
xor
add
call
lds
xchg
fisubs
loopne
ret
in
add
jnp
xchg
in
stc
lock
scas
lods
jle
adc
add
addl
jge
mov
ret
push
cs
imul
or
mov
imul
mov
add
orps
add
add
adc
in
rclb
popf
or
sarb
testl
repnz
out
mov
out
xor
xor
movsl
jecxz
sbb
stos
in
clc
std
cli
out
mov
add
and
push
sub
pop
add
inc
mov
mov
icebp
xchg
sahf
stc
pop
or
mov
pop
lock
jne
inc
pop
dec
loope
adc
ret
dec
insl
insb
ss
xchg
add
cli
lds
jno
mov
add
xor
push
push
sub
lcall
mov
shll
outsb
icebp
fldt
sbb
loop
mov
jae
arpl
xor
repz
push
mov
jno
xor
inc
add
or
and
ljmp
in
std
jmp
fstpt
ljmp
jmp
clc
cli
mov
jae
cmc
std
pop
xor
mov
inc
inc
les
and
adc
mov
cs
or
outsb
mov
outsl
xchg
mov
add
push
fwait
call
jl
and
out
mov
ficomps
add
mov
push
sub
addl
xchg
adc
jmp
push
xchg
icebp
adcb
add
outsl
mov
nop
ja
negl
xor
sub
push
lock
dec
add
and
test
mov
push
stc
xor
pop
cwtl
add
aaa
sub
clc
mov
xchg
rcrb
jne
stc
add
lods
jb
inc
outsb
mov
xor
mov
pop
lcall
fcompl
lds
gs
dec
xchg
jmp
imul
dec
shr
mov
into
in
add
pop
movsb
lods
push
xchg
lret
mov
stos
rorl
enter
movsl
sbb
jno
out
pop
push
mov
add
sbbl
pop
out
movsb
hlt
das
repz
mov
mov
push
aaa
imul
pop
push
rolb
jmp
cmp
out
xor
hlt
mov
add
xorb
adc
mov
xchg
pop
movsb
loop
mov
fidivs
mov
xchg
imul
add
repnz
repz
int
enter
or
repnz
jbe
add
out
xchg
mov
out
sahf
loop
pushf
loope
add
pusha
adc
pop
scas
stc
add
sbb
ljmp
or
and
mov
xlat
mov
jns
add
add
add
push
add
push
outsb
jmp
idiv
out
sarb
dec
mov
imul
stos
xor
add
lahf
or
xor
xor
add
mov
jno
int3
fbstp
in
movsl
add
stos
push
out
insb
shl
outsl
mov
icebp
in
out
clc
flds
rep
xlat
in
imul
into
loop
je
push
lds
enter
mov
mov
mov
cmp
add
adc
in
pop
sbb
mov
add
sub
pop
stc
mov
push
xchg
sub
cli
outsl
movsb
repz
sar
gs
pop
repnz
popa
lcall
mov
pop
mov
cltd
bound
out
maskmovq
cmp
fsubrp
loop
fcomps
xor
mov
sbb
sbb
adc
cmp
cmp
into
loop
push
pop
inc
out
xchg
cltd
and
int
or
cmovnp
cmpsb
mov
sub
and
jo
cmc
lods
divb
aam
inc
dec
lcall
outsl
sub
rol
js
sub
call
jle
push
bound
push
inc
add
stos
int
pop
pushf
ja
adc
mov
bound
dec
dec
orl
loopne
cmp
xor
dec
outsl
fchs
adc
add
int3
jle
mov
mov
cmp
fwait
jecxz
stos
iret
cltd
sbb
xor
enter
scas
and
out
add
in
std
outsb
mov
ljmp
sar
jb
mov
push
adcl
data16
pusha
cmp
dec
dec
popf
xor
cltd
mov
cmc
test
dec
jnp
lcall
cmc
rolb
xchg
xor
iret
jnp
test
dec
shrl
mov
mov
aas
push
mov
mov
or
mov
pop
mov
pop
mov
mov
mov
imul
loope
sub
add
cwtl
aad
dec
ja
push
add
inc
dec
mov
cmp
loopne
add
push
dec
mov
pop
stos
mov
and
cmp
mov
push
push
add
and
jge
xor
std
sbb
aad
call
push
inc
repz
mov
xchg
icebp
pusha
jg
hlt
loopne
add
add
fsqrt
fs
scas
int3
sub
adc
clc
push
dec
mov
cli
xchg
push
push
je
cltd
push
cltd
lock
or
iret
in
cmp
sbb
data16
push
mov
rol
montmul
cltd
in
push
dec
inc
ret
mov
clc
imul
jmp
scas
imul
sahf
mov
xchg
mov
cmpsb
mov
int
cmovne
pf2iw
lret
int3
xor
int3
loope
xchg
orl
cmpsb
fisubrl
sub
add
inc
and
and
add
mov
and
nop
unpckhps
push
imul
nop
add
mov
mov
sarb
add
mov
add
or
fisttps
dec
sbb
jmp
cmp
js
pop
repnz
mov
cmp
in
aas
stos
dec
shl
pop
ljmp
or
hlt
mov
and
sbb
outsl
fistl
ljmp
je
push
cwtl
sub
ficomps
jecxz
pusha
outsb
rolb
xchg
mov
orl
push
lea
adc
inc
mov
addr16
fdivp
js
cmp
dec
jmp
mov
add
sub
pop
aam
xchg
add
sarb
cmpsb
and
cmpsl
inc
mov
mov
lahf
jns
add
pop
add
inc
dec
push
fdiv
imul
inc
outsl
jp
adc
sub
mov
popf
loopne
xor
mov
fldcw
or
enter
or
cli
push
push
nop
lock
rorb
mov
and
jo
lods
adc
push
rcrb
dec
rolb
call
fdivs
aam
xchg
cmpsb
inc
dec
xor
pop
sbb
or
loope
mov
aam
push
sahf
add
bound
into
sbb
mov
popf
push
sub
cmpsb
sbb
out
test
ss
js
mov
mov
push
stc
aam
pop
mov
jbe
cmp
enter
dec
jmp
idiv
incl
popl
or
shlb
xlat
pop
test
pop
mov
xlat
inc
fstl
sbb
jb
inc
add
dec
dec
outsb
rorl
out
loop
imulb
stc
mov
add
or
or
pop
pop
movsl
jmp
push
mov
xor
cmpsb
mov
mov
or
fwait
lahf
jge
shl
xchg
lock
xor
sub
incb
pop
xchg
imul
lahf
add
lock
push
in
add
push
xchg
incb
lret
aaa
add
and
and
push
lods
adc
test
or
sub
mov
repz
inc
mov
pop
add
fsubrp
sub
nop
add
cmp
mov
dec
and
ljmp
clc
out
lods
push
aaa
lods
add
js
pop
or
stos
shlb
push
mov
loopne
out
add
jge
cld
xchg
add
mov
sbb
jo
clc
jne
mov
xchg
lcall
mov
stos
ret
xor
add
or
aad
mov
in
adc
movsb
fsubrs
sbb
je
test
xchg
sbb
lret
nop
pop
sahf
shlb
imulb
cs
xor
in
push
jb
xor
addb
mov
das
iret
push
add
mov
lods
dec
add
or
mov
inc
or
adc
inc
cmp
test
pop
mov
cmp
push
fbstp
xchg
shrb
fldl
stos
popa
lea
and
lret
jl
add
lock
xchg
xchg
sahf
repnz
pop
mov
mov
loop
test
ds
mov
push
pop
sub
imul
sub
imul
ret
xchg
imul
in
sbb
push
in
jno
insl
shlb
jge
lods
mov
cmp
in
scas
insb
jbe
inc
ficoms
pop
push
sarb
and
or
xchg
mov
sbb
out
in
inc
imul
mov
mov
add
cmp
and
adc
loope
xchg
xchg
sahf
loope
fldl
mov
cmpsb
insb
fdivr
ljmp
stc
pop
stos
mov
mov
popf
push
js
push
mov
outsb
push
sbb
pop
out
add
pop
movsl
jns
rcrl
and
xchg
test
std
sub
and
loop
lcall
mov
pop
std
addr16
inc
test
repnz
popf
dec
in
clc
fwait
rolb
in
js
add
outsb
add
sti
popa
xchg
xchg
lahf
fsubrl
fsub
mov
add
mov
fldenv
in
xchg
icebp
dec
dec
leave
decl
scas
mov
inc
mov
cmp
shr
pushf
out
pop
outsb
lret
pop
mov
jge
movsl
lea
loop
outsl
sbb
stos
call
push
xlat
add
xor
je
filds
gs
cmp
loopne
jl
mov
popf
pop
add
xchg
lret
shrl
fnsave
mov
fwait
mov
and
stos
mov
adc
test
xchg
inc
add
out
adc
and
jns
inc
lods
rcrl
jle
cmp
or
sbb
xchg
mov
scas
rclb
mov
push
loopne
pop
fistpll
fldcw
leave
cltd
jae
sub
fs
add
sbb
int3
fisttps
sti
mov
fwait
or
cld
and
pop
rcrb
daa
nop
adc
nop
and
push
xor
inc
ss
test
mov
cmc
pushl
test
add
adc
stos
mov
ss
addl
sbb
mov
rcrl
stos
lahf
fldenv
dec
and
jnp
push
lcall
sbb
js
insb
sub
movsl
aam
sub
cmpsl
add
xor
and
jae
adc
pop
jmp
xchg
sub
ja
repz
daa
push
push
dec
addr16
xor
dec
mov
pop
stos
leave
clc
insl
cmp
mov
sbb
or
push
mov
xor
dec
imul
cmp
add
ret
xor
sbb
or
lds
sub
scas
ja
pop
mov
mov
add
push
scas
lea
and
jno
push
ret
sbb
pushw
adc
cmp
pop
sub
push
mov
or
fwait
add
dec
sub
setp
adc
mov
mov
mov
sbb
jno
push
popa
cmpsb
mov
loopne
mov
jmp
lods
mov
mov
lahf
adc
mov
add
cmp
ret
inc
xchg
push
jnp
xor
repnz
int
cmpsl
adc
test
shlb
sbb
adc
adc
xchg
mov
xor
xor
mov
sub
inc
sub
jle
mov
push
inc
inc
dec
xchg
xor
shrl
mov
mov
in
pop
pop
pusha
and
add
gs
lods
mov
add
xor
xchg
cmp
out
push
sbb
ja
lods
mov
add
mov
mov
xchg
mov
mov
lret
xchg
xchg
adcb
sbb
jb
pop
pop
adc
sti
lea
jnp
and
rcl
push
xor
jl
pop
dec
push
jb
inc
lock
sahf
sbb
fimull
dec
dec
or
mov
popa
es
sbb
inc
xor
test
int3
add
xorb
loop
sbbb
push
push
adc
outsb
pushf
cli
cwtl
cmp
sbbb
test
mov
lods
cmp
add
pop
fbstp
rorb
dec
sub
mov
sub
pusha
inc
cmp
popf
jae
lret
sub
jno
lods
mov
pop
mov
sub
frstor
lcall
mov
loopne
cmp
pushf
push
push
mov
sbb
jl
mov
or
xor
mov
push
xchg
sahf
push
stos
jns
sbb
outsb
mov
inc
cmp
andb
adc
push
pop
sbb
jns
inc
xor
aaa
addr16
and
and
xchg
cmp
cvtps2pd
mov
loope
and
inc
or
loop
jno
jno
and
inc
mov
pop
sbb
mov
inc
inc
cmp
xor
or
add
cmp
pop
dec
dec
push
jns
sbb
push
push
dec
inc
inc
daa
jno
adc
or
push
arpl
fnstsw
adc
sub
mov
mov
jnp
push
jge
sbb
popa
aas
xorb
jl
mov
push
add
dec
dec
push
add
add
xchg
cwtl
pop
pop
sbb
insl
outsb
dec
imul
or
jb
ret
add
push
jge
aad
clc
loopne
lds
inc
dec
dec
mov
xor
enter
loop
sbb
dec
je
jae
adc
pop
pop
push
cmp
pop
inc
and
add
dec
adc
out
stc
cmp
mov
pop
cmpb
mov
and
sub
dec
dec
dec
cmp
mov
xor
loopne
mov
mov
sti
incl
sub
xor
in
add
or
push
push
push
inc
inc
loop
orl
xchg
in
add
test
loope
ljmp
mov
cs
in
xor
div
aad
fcomp
movsl
add
aam
mov
sub
lods
mov
loope,pn
cmc
sahf
mov
sbb
or
cs
jo
sbb
pop
or
push
pop
push
xor
xor
or
pop
jg
add
or
popf
inc
das
inc
push
dec
push
push
enter
mov
jge
xchg
jbe
mov
clc
inc
adc
cmp
mov
or
je
add
pop
inc
cmp
pop
addb
jno
mov
xchg
add
cmp
or
addl
repz
add
pop
or
xor
inc
sub
push
add
arpl
andl
js
movsb
add
popf
ds
xchg
pop
int3
mov
lds
push
loope
cld
adc
adc
rolb
add
cmp
or
ja
or
jae
fwait
add
push
pop
fsubs
aam
sbb
jge
ret
adc
inc
or
inc
jnp
xor
inc
mov
ja
test
enter
addr16
mov
inc
adc
std
jno
scas
push
and
pop
add
add
das
sbb
cmp
and
inc
sub
pop
cmp
jge
lods
add
or
adc
add
bnd
add
sbbl
pop
add
or
stos
or
es
xor
xchg
rcrl
mov
cmp
and
or
mov
daa
addr16
or
inc
sbb
sbb
pop
lds
andl
aam
add
adc
and
cmp
movb
mov
xorl
cmp
inc
cmp
mov
movsl
stc
fs
push
enter
ficoms
cmc
mov
push
mov
sub
popa
ds
mov
add
sub
or
add
out
in
mov
pop
push
stos
push
push
daa
xchg
xor
mov
xor
push
push
into
push
cwtl
test
pop
orb
fisubrs
sub
mov
add
add
and
popa
inc
or
xchg
add
sub
pusha
pusha
outsl
int
inc
add
push
es
cmpsl
aas
das
lcall
lods
addr16
loop
loop
xor
incl
xor
and
daa
pop
aas
dec
sub
rorb
mov
stos
push
add
mov
adc
sbb
aas
in
js
icebp
loopne
js
add
out
sub
flds
and
or
mov
add
sub
pop
cmp
and
das
add
cmp
jnp
in
lock
cmc
add
jg
mov
cmpb
push
add
push
cmpb
cmp
mov
stc
scas
dec
and
js
lods
stos
stos
pusha
add
push
sbb
inc
das
sub
cmp
dec
jno
stos
adc
and
add
out
jle
lcall
test
xchg
jae
or
adc
dec
pop
cmp
push
dec
scas
insl
mov
xchg
mov
std
xchg
mov
add
or
or
sub
add
inc
arpl
fwait
leave
mov
mov
mov
push
xchg
mov
sbb
push
fwait
cli
pop
mov
push
jl
mov
loopne
add
jbe
int
jo
push
add
and
pop
jo
add
jge
outsb
imul
push
add
adc
scas
in
add
inc
add
in
cs
clc
add
xor
add
imul
dec
xor
xor
pop
push
add
cmp
test
pop
pop
add
std
inc
pop
jg
pop
inc
dec
jge
std
inc
pop
push
inc
dec
jg
fisttpl
repnz
inc
pop
jp
dec
fstpl
int3
add
out
xchg
ljmp
sbb
mov
ss
jmp
sahf
dec
mov
cmp
xor
scas
or
or
ja
push
jno
in
mov
sbb
mov
repnz
popa
fmull
lret
cmc
adc
add
and
pushf
stos
jns
add
fisttpll
inc
in
mov
mov
fisubrl
cmp
mov
jns
sub
mov
in
adc
dec
popf
dec
push
dec
xor
mov
dec
movsl
push
xchg
xchg
xchg
imul
and
add
mov
push
xchg
add
push
and
clc
and
cmpsl
scas
push
ss
gs
xor
scas
call
test
mov
jns
mov
stos
xchg
xchg
mov
je
push
cmp
dec
rcrb
add
in
or
cmp
jo
mov
jae
dec
mov
jae
inc
test
xor
daa
hlt
sbb
xchg
dec
cld
mov
push
test
sbb
je
or
cmc
sahf
outsl
mov
call
bound
leave
sub
jge
sti
xchg
xor
sub
and
sbb
mov
ljmp
sub
pop
push
fwait
lcall
cmp
cmc
dec
sub
lret
xor
lcall
sbb
jae
push
sub
jecxz
stos
in
dec
cmc
cltd
dec
gs
gs
movsl
mov
imul
sub
out
xchg
mov
lods
hlt
ret
jae
idivb
sbb
jno
leave
sub
lea
aaa
std
pop
add
ljmp
insl
scas
ds
dec
dec
lcall
xchg
push
and
mov
pop
mov
pop
cs
inc
jae
mov
movsl
cmp
mov
lcall
test
cmc
aaa
pop
push
stos
enter
sub
pop
test
mov
xchg
fsubs
xchg
js
popf
sbb
dec
lock
xchg
jg
xchg
int
cs
js
lcall
shl
ds
lea
adc
insl
pop
repz
ja
add
push
test
sbb
pop
mov
fildll
xchg
js
sub
push
cmpsl
inc
lock
xchg
daa
dec
lock
push
dec
inc
in
jp
les
ficompl
mov
mov
aam
pop
aaa
jns
and
cmpsl
sub
lods
gs
xor
sub
movsb
mov
pop
mov
jnp
int
movsb
insl
add
stos
xlat
ljmp
pop
shrb
out
mov
push
push
sti
imul
aam
lods
jne
xchg
dec
mov
lods
in
daa
sbb
pop
and
filds
sar
push
mov
and
lahf
lahf
movsl
push
test
xor
jbe
popf
lods
jne
aam
pushl
scas
xor
mov
movsl
pop
inc
xor
pop
add
in
jno
xchg
out
pop
leave
aas
dec
lret
sub
cltd
in
leave
dec
lock
popf
and
cmp
pop
call
pop
lret
mov
xchg
mov
std
lidtl
fdivl
xchg
dec
hlt
mov
inc
addr16
scas
jo
idivb
add
xchg
dec
xlat
jmp
pop
aad
test
mov
add
rolb
aad
std
inc
pop
cli
inc
dec
jg
std
inc
pop
push
fiaddl
jge
in
jmp
add
fldcw
or
cli
in
fists
out
cmc
out
in
push
or
pop
jg
add
in
aas
ret
or
push
cs
ds
js
push
das
or
fwait
pop
sbb
push
pop
sbb
mov
add
cmp
hlt
jns
lret
fsubl
xor
repz
lahf
out
mov
pop
add
iret
push
das
pop
mov
adc
sbb
les
sub
imul
shll
out
test
add
or
cmp
cwtl
cmpsl
lcall
insl
cwtl
add
test
add
test
cs
push
int
leave
inc
push
out
aam
lret
insl
pop
cmp
in
addr16
pop
vmovshdup
rclb
loope
adc
mov
mov
dec
pop
cli
mov
int
lods
mov
adc
mov
adc
rcrb
or
lcall
sub
dec
or
sar
lret
cld
add
and
in
fxch
sbb
leave
fwait
and
int
or
mov
mov
cmc
rorl
or
mov
dec
adc
mov
popf
inc
jb
mov
inc
pop
pop
lcall
mov
pop
leave
mov
lret
sahf
js
xchg
cmpsl
push
gs
mov
mov
setne
lahf
xor
repz
movsb
xor
or
mov
add
or
add
in
iret
sarl
mov
add
movsl
mov
sub
sub
pop
lcall
or
dec
pop
add
ljmp
push
add
leave
pop
int3
movsl
cltd
cli
shll
jbe
add
push
insb
ds
cmp
cwtl
add
jg
leave
imul
xchg
or
lahf
push
cmp
push
cmpsl
fnstenv
mov
sbb
mov
add
ja
out
std
or
pop
or
adc
and
lret
cmp
xchg
cwtl
lods
lds
aas
fisubrl
cmpsl
pop
xchg
pushf
mov
shrl
aam
jbe
mov
mov
pop
pusha
leave
push
imul
leave
popf
cmp
adc
add
push
or
pushf
jg
inc
or
fwait
bound
das
fucomip
or
xor
insl
outsl
xlat
jbe
push
mov
xor
or
fdivl
faddl
fisubl
inc
push
lcall
mov
or
jbe
add
mov
movsl
inc
pusha
sub
imul
pop
adc
imull
jg
ret
cmp
add
mov
jae
lret
jae
imul
xchg
cmpsl
fnstenv
jle
int
out
fsubrl
out
lret
arpl
mov
fst
and
pop
sub
push
adc
add
xor
imul
jb
add
cmp
add
mov
sub
repz
cmp
in
inc
mov
mov
add
jl
pop
lahf
outsb
aas
popf
mov
sub
sti
jp
scas
push
or
or
loop
stos
add
adc
and
xchg
sahf
in
in
dec
in
sub
enter
jb
xchg
out
pop
sahf
aam
mov
cmp
repz
bnd
mov
xor
sahf
sahf
jp
ret
mov
or
add
ja
lret
pop
std
mov
leave
or
pusha
mov
rcl
or
mov
xlat
popf
fsubr
rcll
xchg
fwait
test
ret
dec
fnsave
cmp
imul
stc
xor
mov
repz
ficoml
jbe
pop
push
insb
jmp
mov
insl
xor
push
mov
mov
cmp
mov
lock
push
sub
pop
xlat
or
add
or
dec
sub
lret
dec
push
mov
cmp
enter
inc
add
cmp
pop
mov
fwait
mov
scas
xchg
icebp
lcall
jnp
mov
movsl
mov
imul
iret
cmp
mov
orb
pushf
xchg
xchg
fnstenv
leave
divb
jnp
xor
inc
mov
iret
testl
mov
jg
mov
push
or
leave
aas
movb
dec
push
sbb
sbb
shll
or
xchg
cmp
xchg
mov
jnp
ja
imul
jecxz
mov
daa
sbb
dec
icebp
xchg
push
pop
jnp
push
ficompl
popf
scas
out
pop
add
add
mov
jb
add
adcl
out
insl
sbb
sbb
xor
fldenv
inc
add
xchg
cmp
inc
mov
xor
addr16
faddp
cmpsl
jmp
or
adc
dec
imul
aas
add
push
mov
adc
xchg
mov
pop
std
adc
mov
pop
push
out
jmp
or
push
add
or
ds
push
and
dec
sub
and
dec
cmp
fisttpll
fisttpl
add
inc
ss
sub
push
sub
push
pop
ss
fdivrs
push
sub
mov
sub
xchg
add
loopne
mov
cmp
add
jp
push
subl
lcall
add
in
in
adc
lcall
or
dec
fwait
jle
pop
pop
or
mov
pop
add
outsb
inc
xor
xor
xor
xorps
lea
cld
add
aas
mov
jmp
repnz
adc
mov
mov
in
call
scas
loope
adc
pop
ret
or
jmp
sub
iret
sbb
push
imul
test
movsl
pushf
xor
in
repz
inc
enter
nop
push
fcompl
mov
sarl
lret
xor
cmp
repnz
or
fsubrp
lret
rol
call
jecxz
mov
add
jb
test
mov
pop
pop
push
ficompl
aaa
add
and
xor
lds
pop
add
jp
insb
movsl
mov
lcall
add
pop
or
sarb
fnstsw
lcall
lret
lods
mov
mov
mov
ja
imul
add
mov
ja
mov
in
rolb
mov
xor
scas
into
inc
jnp
cltd
jp
lret
mov
fisubrl
jmp
imul
push
pop
mov
xchg
cmpsl
xchg
mov
inc
adc
insb
insl
pop
bound
jne
mov
fcoms
lret
mov
fwait
mov
mov
mov
sub
cli
lret
mov
push
xchg
or
push
dec
and
bswap
cmp
or
add
or
xchg
mov
imul
or
mov
in
icebp
call
je
js
mov
jb
mov
add
lret
add
sbb
add
inc
adc
xor
fstps
test
xor
add
xor
or
pop
mov
mov
pop
cltd
aad
mov
popa
add
xchg
xchg
and
mov
cmpsl
fnstcw
imul
adc
pop
sbb
add
mov
pop
add
pop
les
notl
sub
repz
lods
and
sahf
cltd
push
inc
pop
dec
xchg
cs
mov
sub
lods
mov
xchg
xor
js
sahf
jle
popa
cmp
jmp
inc
xor
clc
or
fldl
ja
or
fst
lretw
cs
cmp
out
mov
movsl
pop
jnp
xchg
xchg
or
shr
popf
mov
ret
mov
pop
sbb
pop
or
adc
lods
cmp
shll
sbbb
cs
pop
pop
mov
pop
pop
sub
jne
into
roll
pushf
add
push
sub
or
pop
adc
push
lret
or
nop
popf
lcall
daa
imul
insl
mov
or
dec
sbb
cmp
sbb
mov
add
sahf
fs
repnz
cmpsl
sti
xchg
mov
jne
arpl
out
ljmp
xor
xchg
cs
fwait
insl
adc
cmpb
pop
dec
mov
push
dec
xor
mov
mov
or
add
push
add
mov
int
loopne
pop
pop
data16
pop
test
mov
call
jg
push
mov
push
xchg
fwait
cwtl
test
xor
pop
mov
xchg
addr16
leave
lret
jp
mov
add
sub
mov
mov
mov
push
add
xor
js
jo
add
mov
sbb
mov
gs
adc
mov
cld
adc
les
hlt
jge
add
shll
mov
out
or
dec
daa
sbb
sbb
xchg
sub
cltd
dec
ficomps
ss
mov
aam
mov
mov
cmp
sub
xor
popa
lcall
or
insb
inc
int3
lds
push
or
or
sub
sub
enter
outsl
jae
test
lock
pop
and
cmpl
or
in
cmp
js
adc
cmp
lods
push
pop
into
pop
ret
out
xor
sbb
and
outsl
in
xor
cmp
mov
add
popf
sub
mov
pusha
into
pop
push
adc
dec
push
bound
mov
push
lods
lahf
xor
sub
imul
nop
mov
daa
pop
in
dec
mull
adc
push
fisttps
sub
mov
pop
mov
mov
and
mov
je
insl
mov
shlb
dec
mov
fs
in
pop
dec
xor
inc
pop
cmp
sti
movsb
arpl
or
or
in
imul
in
jecxz
mov
test
imul
sahf
jne
mov
aaa
inc
push
adc
lods
push
or
pop
addr16
mov
mov
stos
push
push
jge
or
testb
push
mov
sbb
orb
xor
lea
add
push
lret
pop
add
lcall
div
lret
xchg
test
shrb
iret
aas
mov
clc
aam
sub
inc
call
or
imul
mov
pop
and
dec
ficomps
lods
push
sub
lret
sub
movsl
inc
xor
xlat
sub
jmp
mov
add
add
mov
loop
int3
mov
xor
lea
pop
rcrb
mov
test
rorb
int3
repnz
mov
or
jle
and
or
out
jp
jmp
add
jne
mov
push
sub
das
push
mov
int
or
cs
imul
rcl
xor
jge
xor
nop
pop
aam
or
and
jns
mov
jmp
mov
movl
lods
test
push
lret
and
repz
icebp
jnp
lret
loopne
mov
mov
popf
sub
lcall
into
int3
pop
aam
lret
push
in
jne
mov
bound
cmp
aam
or
pop
dec
mov
mov
mov
lcall
test
in
daa
shrb
or
ficoml
xchg
cld
aaa
stc
gs
lahf
push
into
mov
xchg
je
test
cmpsb
setle
repnz
ds
iret
in
lret
xor
in
dec
ficomps
clc
in
sub
pop
pop
not
mov
addl
or
fcmove
ret
leave
out
fcoms
cmp
cld
dec
test
xchg
sahf
xchg
mov
cmp
and
mov
xchg
lock
jb
mov
rcr
out
cmp
xchg
rcll
jbe
ljmp
cld
xor
sub
pushf
mov
lods
into
pop
std
scas
insl
sti
cld
push
pop
pop
jecxz
ror
nop
pop
negl
je
jae
lods
jo
stos
ds
or
mov
mov
xchg
jp
mov
pop
add
adc
sti
jmp
adc
add
into
pop
pop
loope
or
cmpsb
add
xchg
stos
jmp
fstpl
mov
outsb
add
movl
adc
dec
jns
scas
iret
lods
lret
enter
mov
sbb
popf
mov
lahf
dec
daa
xchg
ljmp
int3
hlt
ljmp
push
mov
lahf
aam
int3
pop
mov
aaa
arpl
xchg
adc
pop
push
sbb
iret
leave
in
aas
pushf
cli
dec
popf
mov
or
xchg
push
xchg
jbe
push
mov
dec
adc
xchg
in
mov
add
shrl
xor
and
aam
and
pop
popf
mov
cmp
xchg
xchg
jo
adc
add
push
adc
pop
pop
int
daa
outsl
aaa
cmpsl
bound
jne
pushf
mov
xor
aad
jo
jae
pop
dec
or
iret
xchg
out
sub
jnp
shll
imul
jge
mov
pop
adc
pop
push
mov
mov
shll
nop
add
fstl
xor
adc
pop
sub
sub
mov
pop
dec
mov
jg
gs
or
rorl
jae
cli
std
adc
sti
dec
or
mov
mov
add
pop
lret
push
jg
xor
bound
into
mov
int
mov
lahf
in
in
leave
jne
cli
shlb
out
jge
aas
mov
cmp
lods
and
icebp
in
push
sbb
xlat
paddd
sub
sub
jg
stc
aad
test
cld
aas
jnp
lret
mov
adc
pop
rcl
pop
jge
sub
daa
xchg
nop
mov
cs
out
shlb
lret
and
add
or
pop
imul
sbb
insl
adc
sahf
test
fnstenv
mov
or
sarb
mov
push
neg
inc
mov
out
pop
xchg
into
popf
jnp
mov
lods
ret
lret
aad
jo
lcall
out
cmp
add
cmc
sahf
outsb
mov
lret
jg
shl
sbb
jp
insb
shr
mov
lahf
loope
dec
cld
shlb
adc
or
sub
fidivrl
and
mov
imul
push
fs
xor
pushf
test
movsb
scas
jns
fsubrs
divb
jb
cwtl
aas
fidivl
sbb
shl
jae
hlt
cmc
xchg
cmp
mov
out
lds
int
mov
xchg
push
mov
cmpsl
add
cmp
push
mov
push
cmp
lods
cmpsl
add
test
sub
push
jge
aaa
sub
dec
imul
sub
imul
xor
adc
xchg
out
imul
jb
vpaddsw
loop
fsubl
int
inc
adc
jne
movsb
push
mov
cmc
jl
adc
jbe
jg
lret
in
push
cmp
cmpsl
jmp
sub
arpl
lahf
jecxz
lods
enter
imul
repz
xchg
cmp
sub
test
or
iret
mov
imul
jb
into
jmp
cmp
or
int3
lods
pop
repnz
push
outsl
imulb
testb
gs
or
sub
scas
insl
cmpsl
outsb
clc
aad
scas
mov
in
sub
iret
test
add
das
cli
lret
insl
inc
cmpsl
stos
cmpsl
fstl
mov
mov
or
pop
rcl
insl
into
sarb
adc
fidivl
rol
ret
xchg
push
jb
adc
lret
inc
push
iret
int
cmpsb
push
int3
mov
mov
popf
mov
or
repz
sub
lret
jae
cld
aam
mov
sahf
pushf
out
popf
rcrl
into
jne
outsl
lahf
fnstcw
push
pop
sub
cmp
cmpsl
sti
jns
jp
and
jb
jo
add
jmp
mov
sbb
jb
xchg
iret
ss
sub
mov
pop
test
cmp
adc
scas
incl
pop
lds
adc
sub
pop
ret
rcr
lahf
sub
arpl
pop
xlat
lcall
lahf
cmp
mov
cmp
pop
mov
xchg
push
ret
ror
push
cld
cmp
insl
rol
roll
xlat
jecxz
xchg
mov
jle
lret
sbb
cs
pop
push
pop
rep
mov
mov
pop
or
add
icebp
rcll
pushf
mov
push
add
gs
std
movsb
in
sub
scas
lcall
cmpsb
push
xchg
aam
jae
or
add
std
iret
rorl
pop
cmc
sti
movq
ficoml
std
or
repz
xchg
imul
lcall
or
shll
fwait
dec
cltd
bound
lds
imul
push
popf
xchg
xor
jbe
push
iret
lret
mov
mov
xchg
leave
in
push
decl
fucomip
enter
or
jnp
mov
in
xor
arpl
dec
mov
xchg
in
xor
out
iret
push
popf
xchg
pushl
cmpsl
sti
aad
insb
mov
dec
push
lret
xor
add
mov
jns
lret
push
roll
pop
add
sahf
fimull
jle
in
cmpsl
addr16
fmull
flds
sub
adc
or
mov
rcrl
das
mov
jne
pop
jae
inc
add
int
ret
arpl
push
fstpl
lods
shrl
mov
lret
adc
mov
std
sahf
xchg
dec
push
lret
lahf
cltd
pop
mov
mov
pop
lahf
aam
add
push
in
cs
pushf
cli
dec
je
xchg
imul
cmpsl
ljmp
mov
in
cmpsl
push
mov
add
inc
adc
scas
sub
mov
mov
push
lret
fstl
pop
fiaddl
pop
mov
xchg
leave
cltd
sub
jmp
movsb
fimull
std
or
aad
sahf
cmpsl
dec
test
cmpsb
add
sub
out
xor
ljmp
pop
mov
jne
mov
in
mov
into
inc
push
cmp
ficoml
push
addr16
test
mov
lods
sarl
push
cmp
cmp
lahf
push
xor
imul
sub
lret
jae
in
add
fistpl
mov
pop
stc
movsl
cld
aad
ljmp
sub
js
or
inc
aas
lret
jg
fxch
add
cltd
mov
int3
push
mov
movsl
cli
jg
add
repnz
dec
in
xchg
jbe
jbe
jb
int
dec
out
daa
cmp
push
sub
jg
aas
inc
add
fidivl
imul
xlat
lods
mov
sbb
gs
in
lods
enter
sti
mov
sahf
lahf
jmp
out
jg
clc
sarb
or
fwait
add
sub
jle
aad
jecxz
cmpsb
cmpsb
pop
mov
push
jge
das
aas
mov
pop
rcr
or
lahf
daa
test
mov
notl
imul
aaa
movsl
cltd
mov
push
jmpw
lods
lds
mov
or
pop
push
jbe
push
in
mov
push
xchg
push
dec
push
fidivl
fiaddl
fucom
lcall
ds
in
jno
out
xlat
repz
mov
icebp
cmp
icebp
cli
lret
iret
jb
cmpsb
into
xor
xchg
push
mov
cs
and
test
lods
cmp
mov
cld
and
jbe
jle
mov
mov
lods
int
idiv
rcrb
push
jg
sbb
xor
in
ret
popf
lds
lods
push
decb
jnp
sti
jns
gs
int
lds
xchg
mov
adc
popf
stos
inc
repz
jmp
int3
mov
cmp
dec
push
mov
lahf
loope
testb
jecxz
out
mov
out
mov
adc
int
in
aaa
repnz
or
add
lcall
dec
pop
add
into
sub
jle
adc
mov
lret
add
lds
into
xor
sub
push
mov
jb
adc
xlat
or
insl
ficoml
lcall
cli
cmpsl
insb
pop
shlb
mov
add
inc
add
pop
divl
add
int3
jns
jb
lcall
xor
sub
cli
fdiv
jmp
push
jbe
push
jne
imul
cmpsl
cmp
aad
into
fwait
mov
aaa
call
rcll
or
lods
lds
lret
ljmp
add
jne
push
pop
or
push
addr16
pop
lret
sarb
pop
push
out
mov
mov
shrb
imul
jbe
push
adc
push
xchg
aam
int
cmp
mov
push
push
mov
std
sub
cmpsl
stc
cmpsl
add
mov
xor
scas
mov
shll
dec
cmpsb
addr16
lcall
and
xchg
pop
shl
ds
or
jne
popf
lret
sub
test
loop
shll
mov
mov
shll
or
inc
add
iret
adc
repz
xor
mov
add
idivb
imul
lret
aas
ret
insb
hlt
test
imul
cmp
add
jb
rolb
mov
decl
outsl
jae
push
imul
rcrl
mov
adc
xor
cmc
ds
lods
or
push
sahf
popf
fcmove
mov
pop
dec
or
xor
xlat
add
jns
ret
fisttpll
jmp
cmovle
xor
push
sub
add
and
sub
jp
add
rcl
adc
int
add
pop
lods
push
in
ss
into
cmp
push
pop
daa
xchg
lcall
sarb
dec
repz
sub
mov
xchg
inc
pushf
dec
sub
push
pop
cmpsl
flds
jl
pop
movq
add
outsl
mov
xchg
xor
stos
sahf
outsb
pop
cltd
shrb
das
jnp
dec
sub
icebp
iret
jmp
int3
lods
iret
add
fst
cmpsl
stc
push
mov
dec
or
xor
shrl
addr16
and
dec
repz
hlt
in
aaa
shr
xor
std
xor
mov
mov
into
and
sbb
and
mov
aam
jnp
out
icebp
lods
outsl
mov
push
movl
scas
insl
lea
aas
cmp
pop
mov
adcb
cmp
mov
aaa
push
push
or
or
adc
xor
xchg
push
idiv
test
push
push
lret
or
xor
aam
cli
push
xchg
cwtl
mov
faddl
push
rcll
setbe
test
jns
adc
mov
xchg
xchg
push
adc
xchg
xchg
jmp
pop
mov
cmc
shlb
sub
iret
movsb
jmp
insl
cmpsl
jb
sbb
scas
cmp
imul
enter
push
stos
popf
jne
push
pop
sti
xchg
mov
jno
push
add
dec
in
mov
out
loop
mov
cltd
out
sahf
xchg
pop
fistps
rcrl
in
cmp
out
loop
fimull
push
in
mov
aas
iret
loop
movsb
out
jecxz
out
mov
mov
add
sbb
add
roll
push
ret
sub
repz
imul
push
xchg
cmpsl
outsl
xor
cmpsl
icebp
sub
push
adc
rcll
lock
pop
xlat
out
dec
mov
shll
pop
jecxz
sar
cmp
imul
movsb
push
xlat
push
pop
ljmp
pop
add
add
sub
inc
or
into
add
ds
in
mov
cmpsl
push
mov
iret
in
add
fcmovbe
cmp
dec
mov
test
add
into
cwtl
jge
jns
jns
cs
mov
mov
mov
outsb
rorl
cmp
adc
insl
dec
arpl
pop
stc
cmp
cli
mov
xchg
add
roll
lret
sbb
sbb
cltd
in
popf
into
cli
rclb
xor
jno
jb
mov
shl
or
xor
imul
jl
aam
push
pop
clc
push
std
cli
sub
push
addr16
std
mov
xchg
push
mov
aad
mov
pop
movsl
push
aad
std
out
cmp
leave
lods
insb
cli
mov
lret
sahf
aas
pushl
out
imul
cld
leave
pop
ds
mov
jmp
inc
dec
imul
fwait
cli
out
lret
adc
movsb
movsl
or
jno
popf
ficoms
repnz
lret
pushf
xchg
in
cmpsl
fildl
add
rcrb
pop
aad
fyl2x
cmp
add
aaa
rcrb
jecxz
pushl
mov
dec
push
sbb
ljmp
cld
fidivl
push
add
pop
jmp
addr16
dec
xchg
mov
inc
sbb
inc
sahf
mov
mov
dec
sub
jb
adc
add
in
xor
or
outsb
sub
scas
addr16
inc
pushf
lret
sbb
lcall
jecxz
sub
jns
push
arpl
into
rcrl
pop
fdivl
movsb
test
out
mov
das
jns
leave
aam
push
xchg
fnstenv
stc
sbb
imul
xchg
shll
sub
jg
das
popf
inc
push
lret
repnz
mov
imul
std
cs
iret
pop
xlat
mov
mov
lret
mov
dec
lret
xor
cmp
ds
sub
lods
cmp
pop
iret
mov
xchg
fisubs
aas
into
call
cmp
xchg
lahf
out
xor
outsl
cmp
sub
sahf
lahf
jp
inc
je
imul
mov
int
clc
dec
testb
mov
test
out
inc
lcall
cmp
pop
cmp
sbb
adc
mov
daa
sahf
lahf
ljmp
lods
sub
lcall
pop
mov
jg
fidivrl
popf
pushf
xor
adc
rorb
cmp
pop
in
xor
jle
std
pop
lahf
mov
scas
fidivrl
daa
adc
inc
pop
popf
mov
lahf
fnstenv
in
adc
lret
cmp
lods
or
aam
cli
lret
xchg
mov
leave
xor
popl
dec
mov
xchg
out
das
or
hlt
mov
in
or
sub
pop
lret
adc
xor
mov
or
out
pushf
cmpsl
push
imul
mov
icebp
rcr
aam
add
add
lret
in
fs
jp
mov
mov
les
mov
pushl
pop
lret
mov
rcrl
sbb
dec
popf
popa
jl
jp
mov
dec
and
repz
fsubrl
aad
iret
enter
fmull
dec
cmp
mov
std
cmpsb
xchg
jg
insl
push
xor
negl
repz
scas
cmp
sub
popf
pop
cltd
into
cmp
aad
pop
cmp
sub
test
xchg
repz
fs
cli
movq
xor
jbe
mov
dec
imul
sahf
pushf
sarb
dec
repnz
lret
pop
enter
mov
lret
and
popf
jns
ror
or
xlat
mov
jbe
add
int
insl
pop
cmp
fsubs
lahf
push
out
repz
push
mov
aad
sti
sub
xchg
mov
int
aas
pop
mov
xchg
cmp
push
stos
cmpsl
jne
cmp
mov
add
int3
mov
and
repnz
aas
sbb
imul
adc
js
sahf
pushf
jp
xchg
rorl
xor
cmp
negl
pushl
push
aas
iret
sahf
cmp
ss
in
xchg
rolb
pop
mov
xchg
stos
cmp
ljmp
jnp
adc
clc
cmp
mov
jg
dec
sahf
cmpsl
pop
lahf
je
adc
inc
movsb
in
cmp
push
or
iret
pop
and
cmp
add
lret
xor
clc
shl
or
sahf
push
xchg
xlat
adc
adc
mov
push
cld
scas
lcall
aad
js
aam
push
rclb
out
imul
shl
in
sub
sbb
mov
sti
jns
addr16
or
mov
xchg
mov
sarl
stc
outsl
cmp
neg
add
dec
sarb
in
mov
imul
shr
jnp
jno
jmp
mov
test
pop
imul
pop
xlat
sub
lret
lret
repnz
movsl
mov
and
or
mov
pop
mov
push
cmp
mov
clc
int3
lods
cmp
push
in
mov
leave
idivb
push
xchg
sub
push
les
mov
aam
pop
mov
out
repz
cmp
cmp
out
or
push
push
std
shll
test
cli
mov
mov
lcall
stc
xlat
movsb
ljmp
xchg
fisttps
movsl
jbe
jae
adc
mov
fstpt
jne
xchg
aam
pop
out
push
daa
push
je
jp
lahf
mov
pop
repz
mov
inc
lods
int3
roll
not
shrl
lret
shll
aas
xor
sar
sub
mov
xlat
dec
lea
rcrl
jb
pop
mov
add
aaa
add
outsl
aad
xchg
je
and
repnz
test
mov
js
shll
lds
jg
das
xchg
sbb
lods
adc
repz
mov
cmp
sahf
pushf
fcmovu
add
mov
movsl
lahf
rcrl
xchg
mov
mov
sti
into
outsl
shr
cltd
test
add
jo
lahf
push
mov
or
shll
test
popf
jnp
inc
or
lahf
bound
fsub
stc
int3
idiv
cmc
sahf
insb
mov
add
mov
cmpsl
add
insb
gs
into
hlt
scas
ds
dec
xchg
data16
sahf
add
outsl
bnd
xchg
aas
rorl
xchg
sti
je
mov
ss
iret
mov
and
test
cmc
out
cmp
cwtl
mov
or
add
xor
std
jae
out
push
repnz
stc
mov
cmp
mov
and
push
lret
lret
cs
push
sub
push
daa
mov
in
mov
pop
sahf
jmp
pushf
lret
insl
gs
sahf
xchg
fisttpll
lock
jp
push
cltd
cmp
xlat
mov
sub
cmp
gs
ljmp
clc
shl
xchg
iret
scas
ja
mov
mov
adc
rcll
or
xor
xor
adc
inc
mov
out
lcall
sub
sub
data16
out
mov
cmp
add
xor
adc
jnp
fs
fildl
or
test
xlat
or
notl
out
das
mulps
jle
dec
fstpt
mov
cmpsb
lahf
movsl
stos
loop
shr
imul
dec
jne
aam
je
add
hlt
out
out
xchg
stos
sub
scas
jne
mov
imul
mov
and
loope
or
pop
rcr
in
push
nop
test
sahf
pushf
push
push
addr16
fcmovne
jp
shlb
xor
gs
dec
sub
mov
in
jmp
mov
jg
inc
fwait
cmpsl
test
sbb
addr16
lret
test
cltd
pop
fscale
jnp
fwait
into
mov
call
ljmp
sub
mov
je
pop
cmc
scas
cmp
imul
push
xchg
stos
lret
add
das
out
or
push
addr16
ret
aam
pop
roll
scas
cmp
in
cmp
xchg
pop
insb
lret
xor
repz
addr16
push
mov
insb
in
ds
sub
sub
jno
or
fucomip
stc
aam
dec
push
in
notb
mov
fidivl
jp
inc
imul
sub
xchg
pop
loop
repz
stc
fucomp
cmc
xor
jb
sub
popf
nop
cvtdq2ps
out
mov
add
and
jne
cltd
lret
popf
xor
jne
popf
movsl
adc
pop
and
leave
out
daa
xor
pop
je
test
out
stc
shll
ret
mov
lods
int
lods
les
cmp
in
jle
lret
shrb
or
sbb
mov
inc
add
and
in
xor
mov
sti
sub
and
cld
cli
lret
jno
lret
pop
jecxz
xor
das
loop
je
pop
jns
leave
fldcw
jae
sti
iret
push
xchg
push
in
push
xchg
lret
mov
or
cmpsl
jmp
ficomps
daa
push
cmpsl
push
addr16
cmc
dec
jb
cld
fdivrp
std
mov
cmp
or
lret
cmp
add
push
pop
mov
ds
mov
dec
and
jg
jnp
dec
pop
cmp
rolb
mov
fdivrp
cmp
jl
in
mov
stc
fsub
leave
push
jnp
imul
rorb
push
sub
fimull
and
xor
fs
push
int
imul
adc
pushf
mov
lahf
ret
xor
or
xor
inc
and
out
sbb
and
cmpsb
sahf
dec
sub
cmpsb
sbb
cmp
imul
push
insb
cmp
dec
cmp
xor
hlt
in
cmp
fwait
fwait
lret
jg
icebp
cmp
push
pop
mov
stos
cmp
jg
repz
xor
mov
pop
into
dec
in
cmp
leave
lcall
int
cmp
test
or
in
into
dec
in
ss
in
hlt
test
dec
add
outsl
jmp
pushf
cli
dec
fsubl
ss
lahf
gs
leave
fisubrs
fsubrs
ds
outsl
fcmovbe
dec
cmpsb
imul
cmp
ljmp
lcall
fnstcw
dec
idivb
in
fnstcw
lret
pop
scas
cmp
adc
mov
ficomps
push
fsts
loopne
or
test
pop
ss
mov
int
addr16
cmc
and
or
pop
jne
add
loope
pop
sbb
or
or
pushf
pop
pop
or
sbbl
add
jnp
pop
test
ja
add
adcl
dec
sbb
add
je
pop
jno
xor
or
cmp
push
jnp
dec
imul
sub
pop
or
int
jle
ret
in
cmp
out
jne
sub
sti
mov
popf
xchg
xor
out
mov
ljmp
dec
jmp
inc
xchg
mov
mov
push
mov
lret
dec
repnz
mov
sub
pusha
push
mov
enter
jmp
push
aam
ja
xchg
sub
outsl
mov
lahf
out
in
cmp
cld
cmp
cmpsl
fldcw
insl
or
or
mov
adc
lahf
addr16
lods
pop
push
jp
in
dec
pop
sbb
ljmp
push
sub
add
out
xor
cli
jbe
sub
sub
fucom
jl
jnp
add
outsl
mov
adc
into
mov
es
ja
pop
dec
add
and
pop
pop
pushf
lds
insb
lcall
roll
xchg
jo
cld
cltd
loopne
sbb
xor
cmp
cmp
push
xor
imul
xor
push
loop
faddl
aaa
ss
andl
xchg
je
jne
loopne
loopne
xchg
push
jp
add
cmp
jge
stc
cmp
into
pop
lds
pop
es
push
cmp
shll
pop
sub
add
pop
call
jbe
cmp
xchg
sub
sub
xor
sub
sbb
mov
into
sti
cmp
sbb
sbb
cmp
and
ja
jp
adc
xor
and
int
sub
jmp
or
pop
cld
adc
jbe
and
adc
in
sbb
pop
into
lret
mov
pop
leave
out
lods
mov
pop
jns
lods
lds
or
or
test
pushf
or
jo
or
mov
push
jne
sub
shlb
jno
dec
mov
aas
inc
push
imul
loop
std
xor
xchg
fildl
ja
test
faddl
pop
dec
add
xor
out
xlat
out
imul
add
mov
popf
xchg
aas
iret
lods
arpl
ljmp
aaa
sub
add
mov
push
add
pop
mov
loopne
andl
bound
push
jb
xchg
push
mov
sbb
or
pusha
sbb
aaa
jno
loope
mov
sbb
shrl
push
jo
test
loopne
outsb
lahf
or
add
dec
dec
addr16
mov
mov
jo
aad
repnz
cmovle
pop
mov
inc
push
shlb
sbbl
andb
jns
lahf
xor
adc
js
lds
sub
sbb
fisttpl
sbb
pop
mov
pop
or
inc
push
shrl
inc
xchg
or
lret
sbb
pop
adc
sbb
imul
xor
push
mov
sahf
mov
imull
mov
imul
icebp
inc
dec
or
fbstp
jg
inc
mov
cmc
mov
sub
std
into
mov
mov
push
mov
xchg
sti
aad
pop
inc
jne
add
or
pop
gs
add
add
dec
stc
aad
stc
push
popf
jno
idivl
mov
movsb
rcrl
out
hlt
dec
cmp
cld
dec
je
jl
jae
or
ljmp
paddsw
mov
imul
sub
add
add
test
add
imul
ja
push
jo
add
xchg
xchg
adc
rorb
cmp
sbb
js
mov
js
cmp
add
jecxz
cmp
aas
js
xchg
rorl
push
xchg
cmp
xor
add
add
cld
shll
add
jp
sub
pop
cs
imul
xor
sub
pop
les
sahf
push
xlat
or
adc
mov
add
imul
add
sub
pop
rclb
cmp
xor
je
pop
pop
add
add
adc
ja
push
dec
xchg
sbb
sub
adc
mov
cmp
and
jp
pop
dec
mov
aaa
je
test
ret
test
adc
mov
cmpsl
jmp
lahf
sub
lods
jne
fdivs
mov
sti
insl
or
fsubrs
jbe
insl
xor
or
mov
jns
xchg
in
and
mov
or
mov
adc
dec
ljmp
ljmp
gs
xchg
cltd
mov
scas
mov
xchg
mov
test
sub
xchg
and
pushl
push
imul
inc
jl
sarb
fwait
dec
dec
dec
dec
scas
jne
cltd
fidivrs
ds
sub
sub
test
pop
dec
test
add
pop
xor
sarb
sbb
xchg
into
xorb
insb
dec
push
lods
movhps
add
pop
xor
xor
sbb
gs
shll
sarl
jp
rolb
subl
push
icebp
pop
or
int3
add
add
cwtl
or
mov
cmpsl
pop
xchg
push
adc
data16
loope
mov
pop
mov
pop
mov
xor
mov
sahf
jp
add
pushf
adcl
push
push
sub
adc
or
inc
rclb
das
dec
inc
fisttpl
movsl
in
cmc
pop
fwait
mov
or
or
inc
lahf
sahf
nop
push
dec
adc
aad
xor
lret
adc
push
fcoms
notl
push
addb
pop
jo
iret
stc
cmp
sti
fistps
aaa
lahf
push
imul
lret
cmpsb
add
aad
fmull
push
push
push
je
or
je
in
aas
hlt
scas
mov
mov
cmpsb
iret
push
sub
dec
jl
shl
out
sahf
inc
pop
int3
out
mov
lret
out
cmp
ss
ljmp
mov
pop
push
fstpt
jmp
lahf
pop
int3
rclb
addr16
mov
sub
sub
lahf
imul
mov
mov
lods
enter
rol
nop
loopne
jo
jo
and
adc
ljmp
insb
xchg
push
aaa
outsb
or
or
int
addr16
sub
xorl
or
mov
jl
or
sarb
push
cmp
xor
add
outsl
mov
lret
sbb
movsb
js
cs
jnp
xchg
push
adc
inc
pop
sbb
pop
aam
insl
inc
gs
out
sbbb
loopne
sub
xor
xor
call
mov
adc
xchg
aaa
lods
or
or
mov
sbb
lods
repz
shr
ja
or
cld
aam
fnstenv
insl
add
fsubrs
into
push
ss
aam
stos
mov
ds
lods
insb
mov
imul
pop
or
add
cmpsl
or
iret
sarl
pop
out
cmp
cmp
popf
shrb
xor
out
fiaddl
cld
rcl
ljmp
repz
mov
out
lcall
inc
outsl
scas
adc
xchg
jecxz
pop
in
inc
in
div
dec
jns
jg
into
add
dec
mov
pop
jecxz
lahf
out
mov
push
push
add
add
add
dec
cmp
push
xchg
sarb
add
test
cmp
add
xchg
push
cmp
popa
les
data16
addr16
sbb
or
cmp
outsb
sub
or
shlb
xchg
imul
lea
jo
jae
add
add
dec
fimuls
out
or
mov
and
inc
pop
push
push
cmpsl
inc
jge
pop
mov
lret
pop
out
mov
and
shrl
test
lcall
lds
sarb
mov
jno
xchg
adc
mov
test
shrl
dec
shrb
movsl
pop
pop
into
or
xor
cmp
aam
jns
lret
icebp
shr
xor
fcoms
fistps
addb
fcoms
xlat
xchg
movsb
lods
int
sub
jge
lods
dec
sub
pop
xchg
das
cmp
std
jecxz
mov
push
pop
jnp
imul
ffree
adc
pop
mov
xchg
adc
lret
lahf
imul
mov
mov
lahf
imul
pop
dec
or
insl
int
sahf
or
cld
cmp
mov
pop
mov
bound
cmp
inc
test
ljmp
into
xor
xchg
jno
sahf
nop
push
pop
int
ds
mov
cmp
or
movsb
add
adc
jne
xchg
xlat
jo
mov
push
sahf
sbb
jl
mov
daa
loopne
pusha
sbb
addb
rol
daa
pop
jne
mov
daa
roll
jl
cmp
sbb
mov
mov
push
cmc
lret
sbb
lds
sub
addb
lock
mov
jl
add
inc
or
lds
push
icebp
xchg
gs
mov
pop
push
sbb
dec
test
daa
xor
dec
jbe
xchg
imul
mov
pop
mov
and
sub
mov
sbb
sub
push
cmp
pop
xchg
scas
lods
mov
adc
push
push
ss
and
adc
push
ss
xchg
jno
dec
pop
inc
fcomps
push
addr16
jae
add
sub
in
sub
ror
rep
popa
in
lcall
adc
cltd
mov
das
jae
and
fiaddl
mov
scas
jbe
je
cwtl
int
outsb
jge
out
daa
jg
sar
jb
lret
pop
inc
lcall
aas
cmpsb
jg
lret
cmp
pop
popf
ds
dec
pushl
fst
push
stos
sub
mov
imul
shr
outsb
in
dec
testb
push
insl
sti
das
jmp
dec
cmpsb
mov
sti
out
sarb
mov
sub
or
in
roll
or
add
sbbl
hlt
cwtl
adc
pop
mov
xchg
cmp
enter
aaa
or
xor
mov
lahf
add
bound
je
in
or
cmp
outsb
jmp
sbb
add
lcall
icebp
and
dec
inc
mov
outsl
pop
jbe
jnp
jecxz
add
and
inc
rorb
pop
xor
push
inc
jl
mov
adc
dec
mov
cmp
adc
cmp
fdivrs
roll
outsl
mov
or
shll
mov
dec
add
pop
pop
gs
imul
xchg
sbb
mov
mov
push
cmp
lahf
lahf
in
jne
fdivs
jae
dec
or
fsubrs
sub
lahf
lods
or
jmp
mov
cmp
or
cwtl
sub
aas
test
gs
pushf
mov
jns
dec
add
repz
idiv
fucomp
or
pop
cmpsl
jb
gs
mov
ss
sub
aaa
scas
push
jne
jne
fnstcw
jb
xchg
xor
adc
int3
cmpsl
das
idiv
cmp
popf
movsb
cmpsl
aam
pop
jne
jb
sub
insl
push
lods
or
ror
ffreep
fucomp
aad
cmpsl
mov
loope
cmp
mulb
cmp
daa
add
adc
mov
jnp
scas
sbb
lea
pop
add
mov
loopne
add
xchg
cmpl
jno
or
jo
xchg
jo
cmp
cs
cltd
jno
jae
push
push
mov
sbb
outsb
sbb
xchg
sub
enter
gs
lahf
cmp
imul
into
outsb
xor
pop
jo
and
xor
outsb
and
popf
pop
and
or
adc
push
xor
pop
pop
cs
and
jle
pop
push
std
inc
movsl
pop
dec
jo
shrb
mov
test
and
shlb
push
es
jg
xor
daa
int
push
push
sbb
dec
xchg
and
movsl
push
push
idivl
stos
mov
mov
outsl
or
mov
mov
jns
sti
cld
scas
out
shrl
int
stc
pop
int
adc
mov
lret
or
shll
pop
vcvttss2si
imul
arpl
mov
xlat
cmpsb
or
mov
cmp
xor
out
lahf
in
ss
rorb
mov
xchg
sti
fisubrl
leave
ljmp
lret
jg
sub
cld
scas
sub
jns
flds
xlat
cmp
pop
push
adcb
jno
lret
xor
sub
or
push
add
or
dec
mov
ret
jge
cltd
xchg
insl
xchg
mov
jno
fs
xchg
out
mov
sbb
dec
cwtl
orl
pop
jle
pop
push
sub
jo
cmp
add
sub
int3
push
push
mov
push
test
daa
cmp
imul
xor
cmp
loop
roll
jns
mov
push
inc
mov
pop
lds
jnp
mov
pusha
inc
pop
and
xor
and
in
pop
add
pop
or
movsl
xor
xor
fcomps
scas
jbe
lret
pop
inc
fcomps
adc
cmp
imul
dec
aam
push
mov
jb
push
stos
lret
cltd
pop
in
cmp
mov
jbe
cmc
mov
mov
popf
lods
into
pop
out
daa
pop
xchg
inc
sub
push
jne
imul
jmp
cmpsb
fimull
cld
into
jbe
icebp
aad
add
mov
sub
iret
stos
jg
jns
push
fucom
mov
add
push
scas
out
mov
leave
add
stos
movsl
xlat
fiadds
cmp
push
xor
push
lds
mov
mov
or
add
add
inc
imul
insl
mov
xchg
xchg
mov
pusha
xchg
jno
pop
xchg
pop
test
addr16
add
ret
mov
subl
scas
sbb
gs
push
int
imul
dec
push
out
std
shll
cmp
or
sbb
je
leave
aam
daa
mov
inc
imul
xchg
mov
ja
outsb
repz
pop
mov
xchg
cmp
adc
test
sahf
in
outsb
fcmovb
shrl
jp
lcall
lret
in
daa
rcrl
std
imul
cmp
scas
adc
aam
dec
add
das
fiaddl
cmp
fisubl
shrb
lcall
outsl
mov
add
add
pop
jg
cmp
hlt
in
cmp
in
inc
mov
shrl
or
mov
fwait
out
bnd
xchg
stos
mov
shr
mov
fsub
pop
imul
add
iret
cmpsl
addr16
movsl
jbe
imul
xchg
cmpsl
push
in
scas
dec
xlat
push
mov
aaa
mov
push
add
xchg
push
ret
add
mov
mov
mov
dec
add
mov
push
jle
push
mov
aam
lods
lahf
sub
sbb
or
stos
pop
test
mov
sbb
add
pop
daa
mov
push
out
cmp
mov
inc
or
sub
dec
movsl
addr16
mov
out
rolb
mov
int
fisubrl
mov
subb
xor
sarl
mov
sub
sub
aad
jp
adc
xor
pop
cmp
hlt
jmp
lahf
imul
mov
aad
add
push
outsl
cmp
jns
enter
adc
ss
std
decl
xchg
fstpt
iret
cli
sub
mov
sarl
jge
data16
icebp
mov
iret
dec
imul
test
call
inc
cmpsl
pop
fnstcw
push
lret
push
js
or
out
lahf
out
fidivl
lret
enter
sbb
outsb
lcall
in
jmp
pop
lods
leave
imul
xchg
je
rcr
push
push
mov
push
int
inc
xor
xchg
push
addl
or
in
push
enter
jecxz
orl
pusha
xchg
mov
xorb
mov
or
adc
cmp
gs
jb
push
cmpsb
sbb
lods
ret
inc
insb
js
push
mov
into
movsl
mov
ss
push
cmc
in
subl
jle
lret
push
add
cld
fucomp
sub
add
or
das
int3
sahf
lahf
pop
cli
fists
movsl
push
insl
pop
cmc
cmpsl
xchg
inc
or
add
dec
stc
into
fucomip
into
jp
int
or
sahf
lcall
stos
hlt
cli
mov
out
sub
pushf
jmp
push
insb
lods
jl
jb
fnstcw
dec
pop
and
add
pop
cmp
xchg
lcall
push
lcall
out
cmp
jecxz,pn
fbld
lahf
je
adc
cmpsl
scas
jns
lret
cmp
inc
rorl
into
fadds
sar
ljmp
lahf
scas
in
sarl
out
cmp
cmp
xor
jg
into
lods
ret
das
repz
adc
sub
pop
clc
aam
stos
fwait
imul
pop
jecxz
xlat
loop
in
int3
pushl
pop
mov
mov
push
adc
or
push
add
addb
mov
rcrl
mov
mov
sbb
into
pusha
rolb
lods
add
xor
loopne
fsubrl
add
ljmp
movsb
sbb
pop
xor
xor
add
adc
mov
xchg
sub
outsl
mov
insl
mov
int3
out
jg
jno
lahf
lds
and
pop
rcl
into
jle
rorl
mov
pop
lret
cmpsl
mov
jge
ss
and
mov
add
pop
loop
shlb
jmp
mov
addr16
cld
fidivrl
out
dec
lock
add
sub
imul
mov
cmpsl
dec
lahf
and
xchg
lahf
mov
push
outsb
popf
popa
dec
std
xchg
ds
jbe
sti
dec
add
cmpsb
or
jle
or
out
jns
gs
sub
inc
mov
mov
in
add
jg
jae
repz
xchg
or
out
jns
arpl
dec
out
push
pop
fsts
add
add
jbe
pop
mov
push
push
fwait
jnp
out
sbb
movsb
decl
pop
leave
cli
jle
or
sub
jbe
push
mov
lahf
lret
sbb
pop
jns
fstpt
rcll
insb
imul
pop
fsts
xlat
lcall
add
fidivrs
lods
add
add
in
or
or
rcrl
pop
lea
xchg
dec
lahf
xchg
xor
loopne
ja
mov
cmp
or
adc
aas
cli
fs
jno
cld
imul
outsl
cmp
push
negl
add
sbbl
sub
push
mov
pop
icebp
and
or
sub
xchg
iret
das
add
xchg
hlt
sbb
add
add
daa
fstpt
mov
clc
dec
or
xchg
xor
shrl
jb
pushf
jmp
mov
xor
ds
mov
jmp
xchg
cld
aam
and
loop
lcall
xor
push
insl
pop
lret
imul
cli
int3
aam
ret
into
lret
popf
jns
push
cld
insl
arpl
xchg
mov
inc
insl
imul
ds
cli
mov
in
cmp
mov
sub
imul
insb
jae
sub
aas
hlt
ljmp
jnp
cmp
jl
push
in
out
shr
js,pn
stc
fcoms
test
call
push
sbb
cld
sti
mov
or
sarb
iret
ds
scas
addr16
mov
and
outsb
jns
sarb
cmpsb
iret
jae
xor
shlb
cmp
push
cld
out
testb
pop
pop
jnp
insl
push
sub
ljmp
jbe
jne
ja
fistpl
repz
lcall
test
lret
add
sub
ss
mov
cltd
jmp
iret
das
hlt
or
add
fiadds
call
mov
jnp
int
ret
sahf
dec
add
jmp
insb
lret
jg
xor
push
cli
sub
xchg
add
lret
xor
pop
sbb
movsl
cltd
into
gs
sub
jg
xchg
rcll
repnz
dec
sub
fisttpl
lret
mov
scas
lret
cmp
shll
xchg
out
pushf
in
hlt
cmpsb
jp
inc
push
pop
pushf
pop
std
mov
sbb
xor
xchg
dec
pop
add
imul
dec
stc
lret
cmc
stos
popl
clc
aam
mov
mov
lret
pop
pushl
cmpsl
xchg
ficompl
or
aas
mov
cmpsl
jae,pn
cmp
mov
xlat
movl
jae
mov
ljmp
jbe
shrl
out
jmp
aad
jp
add
mov
fstl
mov
scas
lret
mov
mov
ja
loopne
pushl
fnsave
fdivp
pop
jno
dec
push
loope
push
lret
rolb
cmp
pop
ja
add
aas
jecxz
in
repz
sub
imul
push
jp
faddl
jmp
mov
push
add
orb
add
lcall
fwait
daa
add
xchg
rcll
push
sahf
imul
cmp
adc
cli
sub
iret
outsl
stos
sub
sarl
dec
out
pushl
xchg
cmpsl
popa
inc
pop
cmp
mov
lret
addr16
mov
add
cmp
out
rcll
add
aaa
sub
push
pop
add
add
out
mov
push
and
testb
sub
fst
sar
ja
jmp
pushf
xchg
push
pop
ljmp
jns
outsl
lcall
add
mov
add
pop
push
mov
faddl
jae
ljmp
or
ja
sub
push
cmpsl
idivb
jb
jno
push
pop
push
mov
das
sub
dec
push
out
sub
push
insb
lret
pop
or
add
fmul
movsl
clc
aad
imul
outsb
in
aas
in
into
mov
sub
lcall
cmp
mov
dec
cmpsb
addr16
ja
mov
fildl
add
ljmp
mov
mov
xor
jmp
data16
dec
push
sub
enter
insl
add
add
or
mov
leave
dec
cmpsl
imul
push
imul
sub
jp
bound
push
into
and
mov
lcall
and
hlt
icebp
xchg
cmp
gs
sub
push
fnstenv
xchg
xchg
xor
ljmp
imul
push
popa
imul
jo
into
mov
mov
xlat
jge
imul
lcall
pop
hlt
imul
in
pop
add
and
sub
dec
cmp
roll
mov
fstl
or
nop
scas
mov
imul
std
leave
out
cltd
mov
xchg
mov
shll
fstp
dec
insl
push
aas
test
test
scas
cmp
mov
jp
rcrl
cltd
or
imul
jge
jo
adc
stc
aam
sti
hlt
lcall
dec
leave
push
fstl
test
pop
mov
xor
mov
mov
or
mov
xor
or
jbe
xchg
je
add
int3
in
insl
nop
add
pause
inc
or
add
fimull
jns
dec
sub
in
cltd
lods
mov
out
lock
lods
add
jno
dec
or
into
addr16
stos
es
push
mov
imul
pop
mov
popf
pushf
das
mov
scas
aam
inc
jo
pushf
sahf
rorl
sub
iret
mov
in
add
sub
dec
push
cwtl
lret
and
xor
lret
pop
and
sarb
into
xor
out
fimuls
ror
enter
pushl
fucomip
push
popf
sahf
fwait
jmp
lahf
aaa
lods
rclb
test
pop
outsl
cmp
in
sub
cmc
sbb
lret
or
jge
cmpsl
pop
pop
xchg
inc
scas
fmull
pop
jg
js
add
jae
insl
cmp
rcl
std
push
mov
test
push
mov
pop
add
cmp
repnz
jnp
inc
adc
inc
movsb
jmp
inc
rorl
xchg
pop
mov
lret
xchg
lcall
popf
fimuls
rcrl
test
in
arpl
xchg
jecxz
lcall
push
or
add
in
inc
cmc
decl
stos
into
mov
push
mov
mov
stc
rcll
pop
adc
add
mov
mov
push
aaa
addl
jge
leave
dec
cmp
das
add
cltd
xchg
addr16
mov
xchg
shll
shlb
cmp
aam
add
cwtl
rolb
mov
ja
mov
mov
jb
xor
pop
int
mov
pop
lds
movsw
mov
imul
int3
in
or
lret
iret
sub
repnz
fildll
dec
sbb
mov
xor
into
dec
in
cmp
pop
xlat
int
cmpsl
outsb
xor
jmp
sahf
mov
test
xor
add
notl
aad
mov
or
rcl
xchg
stc
into
mov
jmp
fsubrl
xlat
in
mov
mov
adc
mov
scas
sub
dec
mov
lret
mov
lahf
dec
cmc
in
inc
adc
adc
push
lret
jae
inc
adc
pop
aad
cli
sahf
jne
popf
jl
iret
jo
adc
fisttps
out
xor
out
out
nop
or
sub
das
push
push
imul
leave
push
out
jmp
gs
dec
add
or
dec
stos
movsl
xlat
ds
outsl
cmpsb
movsl
lahf
cmpsl
pop
jp
jno
dec
xor
aad
or
mov
out
iret
idiv
sahf
test
scas
cmp
ds
dec
scas
mov
xchg
imul
imul
xor
fwait
xor
mov
xor
out
ss
cltd
xor
adc
into
xor
sub
cmp
add
jg
cs
movsb
test
mov
cld
addr16
pop
addr16
repnz
movsb
cmc
xchg
out
lcall
add
add
fs
cmpsb
cltd
xchg
test
dec
fwait
addr16
leave
sub
cmpsb
xchg
in
das
dec
mull
xchg
ret
mov
lcall
xor
add
cmp
pop
or
scas
adc
into
aas
dec
mov
cltd
stc
repz
sub
in
imul
popf
push
jbe
rcrl
idivb
out
repnz
movsb
cmpsl
jp
adc
and
xor
jns
or
icebp
fstpl
mov
xchg
pop
mov
jae
mov
mov
pop
xor
rorb
mov
jno
mov
lcall
into
int
lret
xor
push
iret
mov
fldl
jmp
pushf
mov
cmpsl
pop
mov
cmc
out
lods
and
mov
insb
dec
aaa
mov
add
lods
or
dec
aam
fiaddl
into
cmp
popf
cmp
cmpsl
cmp
lret
xor
inc
pop
add
xor
out
mov
lret
dec
jne
cltd
int3
add
test
jl
sub
lods
jae
inc
jne,pn
xchg
enter
mov
cmp
lods
addr16
xchg
stos
push
insl
aam
test
cmc
cltd
cmp
int
cmp
imul
cmp
push
push
sub
lods
cmp
dec
mov
fucomip
into
sti
sahf
pushf
cli
cld
lret
call
jae
fs
cmp
pop
xlat
push
jge
jg
xlat
mov
fisubs
cmp
mov
dec
ja
mov
mov
stos
iret
stos
pop
mov
aas
sbb
cmp
cld
cmp
mov
xchg
cld
addb
flds
push
jns
dec
std
dec
jl
into
mov
xchg
enter
sub
dec
negl
or
cld
aam
imull
fidivl
mov
movsb
in
xor
pop
jbe
std
int
xor
stos
mull
imul
movsb
imul
mov
or
xor
xor
imul
into
imul
movsb
lods
push
mov
repz
or
push
add
adc
or
add
inc
adc
mov
lds
add
imul
jmp
adc
fwait
cmp
pushf
xor
push
add
lahf
in
stc
into
leave
pop
lahf
movsl
jnp
scas
jnp
iret
bnd
dec
cmpsb
push
out
dec
mov
sub
cld
clc
xor
sti
xchg
into
lods
jno
push
xchg
stc
cmp
mov
rolb
movsl
xchg
stos
je
ljmp
scas
jmp
jne
push
out
rorl
cmpsl
dec
xchg
leave
and
mov
xchg
sub
outsb
jb
mov
cmp
mov
mov
lods
sti
in
aam
cs
scas
sub
push
cmc
std
sbb
sahf
out
xor
jge
popf
lods
lds
addr16
dec
add
fisubrs
dec
push
in
mov
add
mov
scas
cmpsl
outsb
xchg
mov
dec
mov
ficomps
aad
loope
fbstp
decl
lods
and
sarl
jae
inc
or
pop
push
cli
push
outsl
cmp
or
push
pop
out
sub
js
jle
fcmovu
sbb
jns
repnz
xor
mov
jmp
mov
ret
jnp
add
into
in
daa
mov
xchg
sbb
pop
ss
mov
push
xor
iret
rcll
xor
fwait
pushf
leave
pushl
cmp
add
add
xlat
and
add
shl
cmp
mov
cmpsl
sti
hlt
mov
rcrl
movsb
in
cmp
mov
push
push
int
fists
mov
sub
push
mov
or
push
imul
popf
sahf
xor
rcr
add
div
int3
xchg
fs
sub
ja
push
xor
cmpsl
push
push
divb
stc
fiadds
pop
mov
fcomps
rcll
enter
xchg
fisubrs
or
push
push
mov
mov
fnstenv
pop
std
stos
repnz
jmp
aas
xchg
jmp
or
jp
shlb
idivb
pop
adc
or
or
inc
push
xlat
insl
dec
and
popf
dec
lods
pop
adc
rcll
mov
cmpsl
mov
out
lahf
gs
divb
repz
sbb
jmp
jmp
xchg
int
aam
jl
fs
repz
out
imul
or
lahf
push
xor
jg
pop
imul
repz
mov
cmp
push
add
adc
mov
pop
aad
and
mov
outsl
testb
mull
dec
pop
insl
dec
mov
sub
out
in
shlb
leave
pop
pushf
in
add
push
into
mov
in
lret
jle
dec
cltd
sub
movsl
push
jo
jbe
pop
jns
lret
sbb
push
mov
sahf
nop
cmpsl
mov
cmpsl
sbb
lods
dec
push
insl
dec
sub
divb
pop
repz
insl
or
xlat
xchg
in
cmp
sti
mov
add
push
lds
sub
pop
movzwl
rcll
or
xor
push
push
shll
into
movsb
jmp
aas
shll
das
mov
mov
ss
jge
cmpsl
in
push
outsb
repnz
in
repnz
ficompl
cli
sub
mov
int
imulb
push
push
pop
add
mov
cld
jb,pt
outsl
imul
push
popa
scas
jnp
insl
push
imul
mov
into
scas
aas
bswap
stos
sub
in
imul
xor
mov
cli
lcall
dec
add
gs
jmp
push
jno
push
pop
icebp
fucomi
sbb
scas
test
mov
xchg
outsb
mov
add
lds
xchg
cmp
sub
xchg
add
mov
jb
xchg
mov
inc
add
into
sbb
lahf
pop
xor
in
cmpsl
sahf
sahf
mov
and
cmp
cmp
push
mov
fiaddl
faddl
sar
sub
out
inc
xchg
sub
dec
jno
dec
fnstcw
dec
fnstenv
jmp
popf
dec
outsl
sub
xchg
mov
iret
bnd
pushf
inc
es
mov
cmpsl
leave
cld
ss
scas
lret
ficompl
std
pop
mov
add
push
test
in
movsb
mov
lahf
iretw
pop
mov
popf
addr16
push
xchg
adc
sahf
cmpsb
imul
sbb
fcmovu
dec
fidivs
dec
sub
cmp
repz
stos
mov
xchg
sbb
enter
mov
lds
popl
jae
adc
aas
stc
inc
mov
iret
mov
or
cli
loop
in
ret
dec
mov
lahf
jb
imul
aaa
in
std
out
push
pushf
insb
popf
inc
fs
scas
mov
stc
cmp
movsb
xchg
out
fimull
out
sub
shr
fsubrs
push
adc
jno
rclb
gs
cmp
push
xchg
add
jg
lds
add
sti
xchg
int
add
nop
xor
lret
mov
push
ss
add
dec
repz
rcr
popf
jae
push
cmp
arpl
dec
fidivrs
jg
xchg
add
push
push
add
out
mov
mov
into
aas
lret
pop
int3
fucomip
into
leave
out
lahf
popf
sahf
das
mov
fs
add
xchg
test
xchg
mov
xchg
stos
insl
insl
mov
cmp
xchg
push
push
icebp
into
iret
jmp
jle
jl
adc
outsb
cld
aas
xor
outsl
fwait
shlb
mov
cld
ficompl
pop
mov
out
sbb
stos
mov
mov
mov
stc
jg
mov
or
adc
cmp
add
imul
pop
or
xchg
fstpl
imul
cltd
xchg
stos
sahf
jl
mov
jge
jmp
jae
adc
cli
sub
scas
pop
pop
push
out
mov
fucomp
adc
jns
imul
rorl
insl
cmp
iret
dec
sub
repz
outsl
repz
cmp
adc
in
xor
ds
add
sbb
add
add
lret
imul
hlt
aaa
clc
pop
cmp
dec
fnstcw
arpl
pop
lret
xchg
imul
add
ss
pop
mov
inc
or
cmp
insl
dec
jae
xor
jmp
add
into
xlat
or
leave
divb
pop
mov
cltd
nop
add
xor
out
xor
dec
negb
push
sub
sub
pop
mov
addr16
sub
lahf
out
xchg
adc
mov
or
lods
insl
mov
sahf
xchg
pop
lods
cld
shll
jmp
sti
into
pop
dec
mov
movsb
sti
cmp
cmpsl
push
push
push
push
xchg
decl
or
jl
jb
leave
jge
ds
jmp
jbe
mov
pop
roll
mov
jl
pop
dec
sbb
sub
ds
loopne
mov
fnstsw
xlat
adc
out
lods
pop
sti
aas
lret
mov
je
jnp
clc
xor
in
mov
adc
in
inc
mov
aaa
fiaddl
negl
mov
or
dec
mov
fidivrl
mov
mov
shrl
xchg
xor
push
pop
pop
mov
adc
int3
mov
sub
addr16
push
lods
rcr
dec
add
push
repnz
shlb
insl
sar
pop
push
xchg
rclb
mov
add
in
push
xchg
mov
sub
outsb
cmp
jnp
clc
xor
bnd
cmpsl
push
push
cld
jmp
insb
jg
mov
std
aas
jecxz
lahf
out
shll
jge
cmp
imul
dec
repz
cmp
ret
sbb
pop
daa
cmpsl
sahf
fimull
push
jnp
dec
icebp
aam
adc
pop
iret
add
ja
or
into
jmp
cltd
out
lahf
mov
xchg
cld
fistl
adc
lods
ret
imul
test
jp
mov
dec
sbb
lahf
aam
repnz
shlb
sub
pop
or
jg
jne
sbb
imul
rcl
fs
scas
insb
lcall
jns
pop
adc
mov
fsincos
add
movsb
ljmp
jmp
add
xor
dec
push
dec
push
mov
lods
emms
xchg
stos
mov
outsb
in
inc
lods
cmpsl
add
pop
jns
jnp
iret
aad
add
test
loop
movsl
add
add
sarl
negb
into
pop
push
lret
cmp
xchg
int
pushl
or
inc
add
xchg
adc
push
or
fildll
in
ss
inc
ss
mov
test
test
add
push
mov
add
mov
xor
out
cmp
push
fistps
push
rorl
clc
ds
push
imul
cwtl
cmp
xor
sub
add
daa
clc
ss
ds
jg
and
shl
add
cmp
popf
xchg
xor
and
out
sarb
cli
lahf
js
out
cmp
imul
pushf
jbe
fmull
std
std
into
hlt
mov
out
jecxz
movsl
mov
jg
push
cmp
add
lea
cmp
rcl
test
mov
xor
fcomip
in
adc
jg
aam
and
mov
push
les
pop
icebp
xlat
pop
mov
jg
popf
push
outsb
rcrl
repnz
mov
into
das
mov
pop
test
aas
inc
pop
scas
sub
mov
cmc
out
fnsave
mov
ds
js
cmp
xchg
cmpsl
cltd
jg
shrl
insl
lret
sub
add
cltd
pop
dec
jns
lret
cwtl
sahf
lcall
push
insb
jnp
push
mov
pop
shll
in
into
dec
fldcw
ret
cmp
idiv
in
add
cmpsl
jo
xor
rorl
mov
popa
ljmp
mov
jge
mov
add
int
aas
into
mov
cmpsb
push
mov
into
movsl
fmull
mov
lcall
add
add
dec
lahf
scas
jns
in
sbb
sub
fwait
pop
mov
leave
push
push
insl
jmp
mov
mov
sub
jo
add
push
jae,pt
jnp
imul
or
fs
push
outsb
mov
aam
jno
push
pop
or
lahf
dec
scas
cmp
mov
repz
push
push
ds
pop
lcall
adc
stos
movsl
fmull
bnd
fwait
and
std
push
dec
mov
out
jg
jl
pop
add
fimull
jne
inc
push
lret
out
mov
gs
or
leave
pop
scas
aas
adc
pop
scas
sub
inc
xchg
add
add
add
shl
or
add
or
in
rorb
mov
mov
pop
test
in
xor
cltd
lret
jl
enter
in
xor
lds
aas
ret
dec
mov
xchg
pop
mov
iret
repz
sarb
cmp
into
cmp
movsl
clc
xlat
movsb
scas
fstpt
and
lods
movl
std
shl
das
aam
push
bound
push
aam
ficomps
fldl
fiadds
fisttpl
mov
dec
and
cld
rcrl
cwtl
push
faddl
pop
push
inc
push
ret
iret
xor
fwait
pop
or
xlat
cmpsl
pop
imul
lahf
fnstcw
push
jg
xchg
imul
mov
mov
jp
rol
lret
imul
cld
rclb
icebp
fmulp
jge
movsb
cmpsl
cmc
pop
jae
fmul
cmc
xchg
iret
mov
imul
jecxz
mov
or
jmp
sbb
pop
cmc
int3
jg
scas
mov
sti
out
ror
xchg
xchg
mov
pop
xchg
push
ja
les
scas
xchg
out
aas
pop
scas
sub
imul
iret
adc
push
imul
cmpsl
insl
xor
aam
inc
add
or
or
lcall
in
int3
sub
jmp
sub
cmpsl
sahf
cltd
jmp
jae
std
aad
lods
rcr
lahf
cmp
scas
je
scas
cmp
push
faddl
jmp
mov
mov
pop
mov
pop
mov
insl
into
outsl
fwait
iret
and
vunpckhps
add
xor
sarb
dec
adc
std
lods
or
pushl
movsl
push
push
outsb
bnd
and
push
xchg
pushf
pushf
decl
movsb
scas
sub
stc
xlat
fiaddl
pop
int
cmpsl
aam
jae
or
mov
jge
test
ja
lcall
shrb
xor
jne
and
pop
popf
jae
add
ficompl
xlat
mov
stos
fwait
jbe
repz
hlt
scas
and
cli
mov
mov
pop
in
loop
xchg
and
mov
std
imul
jns
aad
sbb
in
xchg
mov
adc
cmp
loop
adc
lds
aas
dec
jg
adc
sub
push
pop
mov
cli
push
push
jae
notl
jmp
jns
jno
popf
outsl
imul
add
sti
xchg
into
mov
mov
sub
add
lahf
adc
dec
sbb
mov
or
mov
std
mov
jns
imul
pop
push
cltd
rolb
add
mov
in
cmp
pushf
jle
enter
sti
sub
repnz
xor
imul
push
out
cs
dec
sub
popf
mov
jne
insl
dec
das
lret
popf
rcrl
push
jbe
pop
sar
sub
imul
or
jmp
int
mov
aas
fmul
test
imul
in
pushf
adc
sti
lods
or
add
cmpsl
and
xor
addr16
or
push
imul
push
push
add
or
int
into
mov
mov
add
cmp
stos
jecxz
xchg
filds
ret
mov
cmp
dec
push
sti
jns
lret
mov
out
jg
jle
push
mov
inc
jnp
mov
push
shlb
push
cli
push
mov
rcrl
sti
insl
dec
outsb
test
div
adc
shrb
xlat
bnd
jns
jle
popf
jg
pop
adc
mov
lret
adc
movsl
xchg
xlat
xchg
mov
enter
in
push
bound
repz
cmp
mov
push
inc
lds
inc
mov
add
push
adc
add
rorb
push
sub
add
cltd
jmp
leave
sbb
mov
add
jnp
out
call
arpl
rcl
xchg
mov
aaa
sti
cmp
jno
out
or
or
repnz
fildll
imul
push
cmp
pop
repz
scas
cs
jp
fisttpll
dec
lods
jo
leave
cld
xor
sbb
pop
xor
push
fucomip
stc
shr
or
das
je
push
std
lret
lret
aam
icebp
ds
addr16
in
jnp
cmpsl
mov
sbb
outsl
in
aas
lret
mov
ss
dec
sub
fwait
mov
xor
pushf
mov
jno
jmp
shrd
cmp
stc
shl
ljmp
mov
lret
loop
cmpsl
pop
xlat
cmp
fucom
aam
mov
adc
cld
mov
xchg
insl
shrl
loop
in
aas
mov
lds
ja
adc
enter
iret
dec
push
lods
iret
dec
xlat
gs
lret
ja
inc
mov
in
cmp
lret
outsl
sahf
jp
adc
cmp
imul
stos
sub
dec
aas
dec
imul
mov
mov
out
cmp
mov
shrl
cmp
inc
in
inc
pop
or
add
inc
mov
repz
xchg
sub
cltd
fiaddl
int
adc
loop
push
jg
jge
cmpsl
push
addr16
aas
fidivrl
pushf
arpl
cmp
stc
cmp
in
cmpsl
fstpt
dec
sub
jno
pop
dec
or
lahf
shll
xchg
into
jae
cmp
mov
stc
das
cmpsl
stc
pop
cmp
mov
mov
in
add
pushf
jecxz
mov
jns
jle
aam
lahf
xlat
jg
inc
pushf
lods
pop
or
push
or
add
mov
xor
mov
mov
mov
aam
push
xchg
jae
insl
push
outsb
repnz
lahf
push
clc
aad
stos
adc
cwtl
sti
insl
xor
imul
dec
fldcw
lret
adc
fbstp
rorb
lods
push
or
in
out
mov
addr16
xlat
jnp
cmpsl
pop
cltd
bnd
out
lock
notl
pop
jns
sti
dec
bsf
imull
inc
lods
aad
jne
add
jle
jecxz
cs
jmp
scas
jg
inc
lcall
test
hlt
stos
in
dec
movsl
mov
mov
or
dec
lret
ficomps
push
scas
fwait
inc
jle
mov
lds
inc
fxch
enter
pop
shl
repz
xchg
lds
lds
lret
adc
lahf
pop
enter
mov
push
std
aam
in
xor
fildl
add
cli
jmp
aam
pop
sub
daa
fstpt
imul
popf
outsb
aas
cmpsl
xor
outsb
jge
sub
stc
ja
or
into
xlat
mov
pushl
fdivrl
lods
insl
mov
push
jge
push
out
fstpt
dec
repnz
push
iret
jecxz
xchg
out
insl
or
mov
xchg
jecxz
das
into
js
out
push
sub
adc
xor
adc
enter
leave
std
mov
fisubs
cmp
jb
adc
sahf
xchg
pop
jg
cmp
mov
aam
cli
pop
push
lahf
jge
icebp
inc
imul
jne
aad
test
std
mov
imul
rcl
mov
outsb
sbb
popf
lahf
sbb
jg
loopne
sub
aam
push
mov
xchg
flds
faddl
ds
addr16
adc
fcomip
push
cld
fstl
sbb
sub
in
aad
adc
or
pop
xor
jmp
call
push
cmc
lcall
add
add
addr16
testl
mov
inc
dec
mov
movb
cmp
jl
jnp
stc
das
lahf
movsl
gs
repz
shrl
xor
mov
mov
pop
repnz
mov
in
pop
xchg
mov
sarl
aam
jecxz
xchg
mov
shr
ss
add
in
int3
movsl
faddl
push
ds
into
cmc
mov
mov
xor
mov
in
xor
cmc
sub
popf
xchg
stc
shll
xlat
xchg
mov
jecxz
loop
out
icebp
xor
cltd
movsl
jnp
dec
sub
out
ds
add
jb
icebp
jecxz
xor
xlat
adc
sub
nop
pop
pop
in
cmp
sti
sub
dec
lret
aaa
imul
pop
out
ror
xchg
imul
enter
jnp
fs
xchg
lret
movsl
cli
loop
cmpsl
cmp
adc
cmp
xchg
sub
addr16
lret
movsl
out
lret
rclb
jmp
clc
iret
in
mov
dec
stos
mov
lahf
lds
dec
pop
jnp
jmp
int3
dec
idivb
aad
sti
lcall
dec
idivl
lret
repz
call
mov
push
inc
dec
jecxz
lea
or
mov
out
adc
imul
mov
cmp
add
pushl
dec
lret
ss
popf
gs
cmp
rcrl
into
imul
ror
push
lahf
cltd
dec
mov
lahf
bound
and
adc
pop
aam
in
xor
popf
das
out
lret
sub
jmp
sarb
insl
lods
mov
std
mov
cmp
xchg
scas
das
mov
jg
xor
shlb
sbb
fscale
cli
xlat
out
shrl
shlb
call
std
sub
xchg
mov
out
mov
sub
xchg
imul
ds
sub
lahf
in
push
test
test
jns
dec
or
jge
cmp
lcall
out
into
fisubrl
idivb
repnz
xchg
mov
cwtl
lods
rorl
mov
sahf
lea
flds
sahf
test
sub
and
iret
int
pop
jecxz
jle
lods
aad
jbe
push
xor
mov
add
lret
sti
jle
shlb
outsb
pop
rorl
mov
dec
or
jg
dec
dec
adc
int
inc
dec
add
add
or
out
daa
stos
lea
int3
inc
add
pop
int
das
add
mov
pop
and
icebp
js
in
aas
cli
xchg
mov
repnz
ror
cltd
dec
imul
int
cmp
or
cld
xlat
test
add
insl
movsl
push
jnp
dec
pop
mov
jns
dec
add
jnp
aas
iret
mov
dec
repz
jg
in
enter
push
push
xchg
lahf
mov
mov
add
filds
in
stc
into
dec
idivl
pop
negl
addr16
insl
cmp
mov
int
mov
mov
fcmove
sub
out
fbld
lahf
push
pop
sub
pop
leave
xlat
xchg
lahf
push
add
cmp
imul
lcall
push
jo
cld
cli
fisubrl
ljmp
gs
push
push
push
repz
sub
xchg
aad
ljmp
stc
push
mov
push
mov
pop
das
loopne
lret
fidivrs
pop
mov
xchg
push
ret
stos
insl
insl
add
in
das
shrl
pop
in
cmp
jg
shll
imul
rcrb
pop
sahf
fwait
jmp
mov
pop
add
and
rcl
push
into
sub
xlat
fucomip
cmp
int
inc
shll
inc
mov
enter
cmp
mov
xchg
pop
mov
je
inc
pushf
jmp
sub
dec
mov
mov
cmp
shll
sbb
stc
jg
into
outsb
fs
ljmp
jecxz
aam
test
xchg
scas
imul
jle
iret
lods
push
int
std
mov
push
push
outsl
inc
and
ss
push
lret
xchg
rcrb
insl
iret
outsb
repz
in
xor
ljmp
call
imul
fs
xchg
icebp
shrl
sbb
std
in
cmp
jp
jbe
and
std
sub
aas
test
cmp
mov
add
mov
popl
gs
pop
cld
shlb
pop
xlat
add
lods
int
cmpsl
stos
popf
pushl
mov
daa
cmp
jp
insl
sar
stc
xor
hlt
sbb
cmp
scas
jge
inc
movsl
cld
fdivs
out
lret
aad
stos
leave
pop
pushf
xor
mov
jns
cmp
xchg
jge
outsb
in
inc
cmpsb
or
dec
into
mov
inc
dec
xchg
push
ret
or
dec
adc
in
leave
idiv
in
cld
dec
add
dec
push
dec
pop
imul
gs
jno
pop
enter
cwtl
mov
xchg
shrl
cltd
pop
add
push
jo
dec
outsl
int3
inc
pop
pop
imul
insl
fs
push
cmpsl
fwait
xchg
cld
lods
fs
push
pushf
mov
into
jb
xor
cltd
fistps
in
out
mov
movsl
push
enter
jle
aam
mov
sti
aad
sarb
out
lcall
or
pushl
fstps
std
lahf
cmp
pushl
imul
cmp
out
stc
aam
int
scas
faddl
rclb
cmp
gs
push
mov
popf
jns
dec
xlat
mov
std
repz
jg
int
fisubrs
aas
into
mov
xlat
out
push
mov
sbb
sarb
jmp
mov
pop
dec
dec
fstl
jge
imul
imul
push
jbe
jb
push
insl
imul
adc
outsb
mov
aam
dec
fldl
sub
adc
dec
jae
mov
or
cmp
xor
aaa
cmp
dec
jecxz
loope
inc
and
inc
jmp
sub
push
xor
inc
mov
and
xor
pop
pop
outsb
push
fistps
cmp
fsubl
leave
stos
push
lret
push
sub
jne
pop
das
out
rcrl
add
aas
inc
push
popf
outsb
fiadds
jg
inc
sarl
xlat
dec
pop
les
inc
cmp
sub
cmp
fdivl
dec
arpl
data16
stc
je
fimull
add
xchg
inc
pop
aaa
inc
cmp
push
cmp
dec
sub
or
add
adc
cmc
jb
faddp
xor
das
pop
push
dec
shr
lahf
jecxz
mov
stos
cmc
out
fstpt
dec
ljmp
xchg
pop
xchg
xor
push
push
cld
mov
cmp
daa
xlat
xchg
push
xchg
es
xchg
aad
mov
stc
aad
std
out
fwait
cmp
ja
jns
leave
fnstenv
pushf
pop
mov
pop
imul
scas
sub
cmpsl
addr16
sbb
cmp
pop
scas
lret
cmp
cli
pop
int
lods
jno
insl
push
jnp
cmp
add
int
and
addr16
xor
dec
mov
gs
pop
mov
add
add
fnstenv
mov
dec
aad
sub
mov
aas
scas
dec
rcll
add
push
add
dec
sti
dec
mov
ret
dec
imul
outsb
ja
mov
addb
adc
das
sub
xor
test
cmp
inc
je
add
pop
push
outsb
insb
addr16
cmp
pop
and
sbb
lahf
xor
dec
fdivrs
aaa
sub
mov
ficoml
int3
or
add
out
leave
std
or
jae
sbb
shrb
rcr
sbb
pusha
pop
or
jecxz
lret
or
cmp
pop
je
call
das
dec
jae
loopne
outsl
in
jb
aaa
lds
add
repnz
shll
sbb
push
imul
sbb
pop
movsb
xor
adc
mov
push
test
mov
and
aam
jne
fdivs
sub
xchg
cmp
ret
fldt
add
sarb
cltd
enter
mov
sarl
jno
scas
sub
sub
xchg
push
and
cmp
ficompl
pop
cmpsl
push
fs
adc
xlat
iret
add
add
ja
movsl
xchg
idivb
cli
repz
dec
out
mov
test
cli
push
notl
imul
lret
sub
lcall
xchg
stos
mov
rep
fildll
movsl
faddl
push
pop
add
fcomi
xchg
enter
pop
mov
out
add
jg
enter
repnz
outsb
mov
mov
aaa
or
jg
jb
add
push
je
jbe
outsb
and
bound
dec
dec
pop
pop
push
sub
lock
adc
jne
sub
pop
loop
jno
pop
pop
lods
push
xor
sbb
sub
sbb
jbe
jae
pop
test
sbbb
aad
pop
pop
jb
dec
add
xor
dec
push
lods
and
fwait
add
sub
clc
xor
dec
adc
add
push
cmp
mov
sbb
sahf
mov
push
push
cmp
adc
dec
addr16
loopne
and
lcall
or
jp
adc
mov
mov
pop
jno
dec
add
mov
push
push
lods
insl
dec
fnstsw
mov
aam
push
shlb
and
lret
pop
inc
fcomps
repz
lret
ja
movsl
mov
shlb
sub
xchg
push
imul
push
insl
jp
fnstcw
enter
popf
pop
inc
add
dec
mov
or
in
inc
mov
dec
jp
movsl
les
aam
into
pushf
pop
jg
cld
inc
rcl
lds
dec
aad
jb
faddl
aad
or
movsl
jbe
rorl
mov
pop
aas
cmpsl
xchg
pushf
push
sbb
rolb
test
mov
loop
xor
aam
push
mov
and
insl
cld
xor
push
sub
push
dec
scas
lds
rol
or
subl
jno
jno
cmp
inc
mov
sbb
in
daa
sub
add
push
mov
dec
in
add
inc
cmp
dec
dec
cld
and
addb
push
push
dec
cmp
push
cmp
or
adc
popa
into
and
xchg
inc
fiadds
outsb
icebp
dec
hlt
xchg
adc
imul
jo
mov
sub
pop
ret
adc
mov
shll
inc
push
sub
jb
arpl
sbb
adc
shll
mov
inc
lods
subb
mov
aas
xchg
mov
leave
loop
lret
pushf
mov
into
mov
dec
mov
fildl
adc
sbb
test
push
mov
sub
push
mov
cltd
pop
out
xchg
mov
mov
sub
cltd
jle
fcoms
pop
sarl
jne
jns
lret
adc
into
daa
mov
outsb
mov
pushf
xchg
add
orb
mov
push
push
adc
test
out
jns
gs
mov
dec
pop
mov
push
adc
xor
outsl
cld
loopne
bsr
jns
mov
movsb
pop
jg
xor
sti
aad
jae
outsb
das
ds
lahf
in
rcl
hlt
mov
test
cmc
leave
fidivrl
jg
xchg
jp
lret
dec
jge
orb
ljmp
xchg
add
add
or
ja
sarl
cli
pop
mov
sahf
test
ds
dec
andb
sub
jb
jl
xchg
loop
jno
pop
push
xchg
add
push
sahf
mov
stos
out
add
dec
les
mov
jp
jae
call
dec
sbbb
or
or
adc
mov
pop
push
add
push
test
popa
pop
stos
lds
int
cs
xchg
mov
pop
pushf
gs
shll
sub
pop
addr16
mov
adc
push
cmp
xchg
and
jle
mov
test
cmp
clc
xor
push
mov
movsb
test
pop
mov
mov
cmp
or
aaa
outsb
xor
aaa
inc
jb
dec
pop
mov
je
test
xchg
mov
out
xchg
mov
sti
cmp
xchg
out
lahf
and
vcomisd
psubd
inc
leave
pop
outsl
inc
sub
jns
repz
cmp
adc
fstpt
leave
jg
mov
add
jge
lods
add
sarb
leave
in
mov
xchg
push
jnp
lret
aad
jb
into
push
mov
sub
jb
int
pushf
and
cmp
dec
negb
imul
add
push
xchg
mov
jl
fisttpl
lret
push
mov
add
iret
inc
xchg
mov
in
lods
leave
movsl
push
insl
cli
lret
adc
fistpll
fnstsw
add
push
or
imul
inc
mov
inc
dec
dec
push
pop
lds
fdivl
add
mov
mov
jo
push
clc
outsl
pop
gs
push
push
add
cld
loop
add
inc
stc
cli
arpl
loope
xor
fs
pop
mov
decl
jp
jo
or
or
push
sbb
icebp
or
or
hlt
daa
cs
sahf
mov
push
jns
adc
push
xlat
inc
mov
xchg
adc
mov
pop
inc
ror
pop
outsl
mov
dec
mov
or
pusha
test
test
dec
mov
gs
aad
xchg
shrl
sbb
or
dec
inc
mov
add
imul
adc
add
cmp
dec
mov
sub
pop
jge
cmp
fdivrs
scas
mov
cmp
ds
mov
mov
mov
movl
bnd
cmp
mov
movzwl
aam
dec
lods
insl
testb
in
dec
idivb
push
xlat
xlat
lahf
and
fbstp
loope
jno
dec
fnstcw
dec
sub
adc
add
out
int
enter
inc
mov
popf
dec
jo
iret
sarl
dec
stc
cmp
mov
dec
clc
aam
scas
or
ret
or
popa
push
in
movq
xchg
mov
dec
mov
scas
test
cmp
inc
movsb
push
or
cmp
rorl
push
inc
add
xchg
push
ret
cmp
pop
inc
dec
rcrb
jnp
and
hlt
push
dec
push
add
test
lret
lret
jns
pop
jl
push
sbb
push
dec
push
aam
flds
fcoml
aaa
cmp
push
add
xorb
gs
xchg
or
mov
and
int3
movsl
jns
inc
adc
adc
push
inc
enter
call
xchg
shrl
sub
sub
push
insl
outsb
push
insl
or
pop
mov
pusha
inc
and
dec
ror
fs
cmp
sub
cli
add
loop
or
idivb
into
ss
sub
addr16
lahf
aaa
dec
cmp
mov
movb
add
nop
mov
subb
ficomps
movsl
inc
popa
fists
into
mov
fistpl
fcomps
cmp
leave
cmp
rcl
push
fcoms
pop
add
adc
fidivl
inc
add
fstpt
jg
jns
push
sub
pushf
sub
std
adc
cmp
adc
xchg
sbb
sahf
cltd
dec
ja
mov
mov
int3
in
cmp
pop
int
lods
lret
dec
pop
add
rorl
mov
shrl
fstpl
fistps
std
jle
or
sub
lds
jmp
or
iret
jg
hlt
movsl
jb
xor
pushl
xchg
scas
mov
in
leave
lahf
cs
jns
sub
cmp
cld
int
pop
sahf
cmp
push
jae
xor
pop
jmp
lds
add
enter
sbb
push
js
mov
jno
pop
jge
xchg
rorb
push
pop
add
ja
subl
jnp
pop
arpl
sub
aaa
dec
xor
jns
jge
shll
sub
add
push
push
dec
pop
pop
push
mov
add
pop
pusha
pop
and
sub
sub
inc
dec
pop
push
xchg
sub
mov
sbb
ret
pop
sub
xor
addr16
pop
repz
into
mov
or
and
fcmovbe
inc
cs
push
enter
mov
mov
daa
pusha
inc
icebp
cmp
and
dec
push
std
cmp
push
sub
mov
das
sub
mov
or
sub
jg
aam
sti
pushf
and
add
stc
shll
push
fidivl
push
sahf
cmp
iret
rep
lret
je
in
cmp
mov
push
pop
jae
aad
or
push
sub
sub
cltd
out
fbstp
cmp
jge,pt
lret
pop
stc
xlat
cmpsl
pop
shlb
pop
shrl
repnz
fimull
sbb
dec
loope
daa
and
sbb
popl
lods
lds
push
and
das
repz
mov
enter
xchg
in
cltd
popf
fmull
push
in
sub
ds
mov
push
mov
add
xchg
mov
cltd
lahf
pop
lods
jno
imul
lea
add
into
sub
mov
dec
push
inc
push
push
dec
push
out
adc
cs
add
js
jge
mov
mov
pop
inc
add
cmp
test
outsl
nop
cs
mov
pop
sbb
add
pop
js
jo
shll
lds
shll
les
add
push
adc
mov
mov
pop
push
dec
dec
je
xor
notl
or
lret
sub
inc
dec
push
call
lahf
add
bound
mov
insl
push
ds
popa
outsb
dec
jbe
add
out
cmp
std
jg
leave
mov
add
xchg
out
mov
or
push
test
cmp
pop
int
int3
aas
inc
pop
push
rcr
jb
push
nop
add
dec
dec
pop
mov
dec
pop
lahf
lds
repnz
xchg
icebp
cmp
shll
jge
xor
xor
imul
out
lahf
out
into
fldcw
jg
fcmovnbe
jge
gs
mov
movsb
in
xor
and
sub
fidivs
pop
loop
movsl
xchg
enter
sub
dec
clc
into
mov
ffreep
inc
mov
xchg
sub
pop
test
movsb
in
xor
fidivl
pop
cmc
ljmp
mov
mov
lcall
and
fs
push
jbe
jns
push
push
xchg
stos
fbld
or
into
mov
lahf
push
xor
movsl
popf
dec
bound
add
jg
cli
adc
sar
cmpl
movsl
inc
push
push
jecxz
mov
les
cmpsl
insb
jo
add
sub
dec
pop
pop
jne
lea
mov
mov
clc
outsl
xchg
add
insb
insl
shrw
pushf
add
inc
sub
nop
and
cmp
xchg
mov
cmpsb
push
aam
add
cmp
fistpl
ffreep
inc
dec
pop
inc
xor
xor
aam
ljmp
xchg
mov
add
xor
in
into
aas
decl
mov
popf
mov
inc
pop
dec
int
sub
cltd
notl
dec
idivb
pop
adc
cmp
pop
enter
out
seta
outsl
cmc
push
pop
ljmp
stos
pop
ljmp
xchg
clc
shl
stc
aad
jae
add
out
sar
lret
and
std
cs
fdivr
push
pop
adc
add
fucom
mov
cmp
in
fnstsw
iret
mov
xor
ficoml
daa
lods
insl
mov
xor
adc
jae
scas
push
mov
dec
pop
lahf
pop
jmp
mov
out
xchg
mov
dec
test
jns
push
push
push
insl
outsl
repnz
imul
ja
lcall
add
test
mov
cmp
popf
mov
lods
les
push
add
push
pop
cs
pop
cld
push
or
cwtl
mov
leave
inc
add
inc
add
pop
insb
imul
push
push
rcrb
xchg
dec
push
add
addr16
movsl
cmpsb
mov
mov
mov
popf
xchg
jbe
js
jg
jnp
dec
add
or
pop
and
jge
cmpl
xor
loop
push
mov
add
sub
das
pop
xchg
jne
cmp
add
xchg
mov
lret
pop
lahf
ret
cmp
mov
lret
out
aas
mov
cmp
dec
sti
jle
pushf
jg
ret
into
pop
std
mov
out
xor
popf
pop
scas
daa
nop
imul
shrl
fisttpl
push
pushf
out
dec
fnsave
mov
push
repnz
test
gs
pop
and
jle
pushf
jno
jns
push
pop
adc
lret
test
cmc
mov
jnp
cmp
stos
lret
add
or
lds
xor
dec
scas
sub
sub
add
mov
pushl
ljmp
movsl
lret
daa
pop
call
int
daa
pop
xchg
push
cld
mov
iret
aam
and
gs
sti
mov
imul
testb
fwait
outsl
repz
into
ja
negl
xlat
iret
idivb
pushw
mov
stos
cmp
test
mov
jg
sbb
xchg
outsl
sar
mov
mov
xchg
jg
in
add
sub
mov
add
imul
mov
bound
xor
push
and
and
es
inc
inc
aas
inc
inc
add
pop
pop
gs
push
or
jno
jo
clc
pop
lcall
sahf
mov
jbe
mov
in
aas
jp
add
and
sbb
xor
xor
ds
decl
aam
cld
into
push
sbb
dec
jbe
pop
leave
xchg
lds
push
jae
sub
pop
add
jbe
jmp
rolb
add
add
sub
push
out
sub
pop
inc
or
dec
test
into
pop
in
cmp
out
mov
pop
fs
mov
xchg
lahf
mov
popf
jbe
pop
xchg
aam
jp
sbb
jne
pushf
dec
jg
aam
dec
add
xor
imull
movsl
inc
popa
mov
in
test
fisubs
xlat
mov
sub
std
push
lcall
fidivrl
jg
jl
roll
add
daa
testl
lcall
sahf
mov
int3
xchg
fstpt
int
sub
cmp
mov
movsl
xchg
push
int
push
sub
cmp
push
pop
int
cmp
add
imul
jns
push
mov
and
add
push
push
inc
add
dec
push
add
rorl
outsl
add
aaa
and
and
aas
ret
sub
aaa
cmp
sub
nop
repz
ds
inc
jg
enter
test
dec
push
dec
pop
add
push
outsl
xchg
insl
push
pop
in
mov
push
dec
orb
dec
and
sbb
sbb
cwtl
ds
and
jmp
fiadds
push
mov
dec
repnz
pop
push
sub
cmp
mov
int3
lret
xor
std
int
arpl
pop
lret
lcall
dec
push
insl
pop
jne
insb
popf
mov
insl
cmp
push
jnp
int
das
out
xchg
sub
push
stc
ss
push
cmp
fst
add
imul
cmp
sahf
fwait
dec
pop
xor
lahf
fstpt
dec
pop
xchg
cmp
test
repz
std
inc
jo
addr16
mov
std
imul
cmp
mov
jno
mov
fldt
mov
xchg
push
addr16
jne
push
daa
pop
xchg
push
lret
xchg
in
aaa
mov
je
dec
clc
cmp
mov
lret
test
in
cmp
xchg
mov
mov
pop
jnp
out
pushf
cmpsl
cmp
adc
dec
aas
fidivrl
sbb
xchg
push
adc
cli
fstpt
mov
mov
add
or
imul
into
sti
push
cld
ss
add
push
push
jae
mov
movsl
or
pop
or
in
adc
loopne
popa
push
bound
adc
je
aas
cmp
mov
loopne
test
pusha
push
add
adc
jmp
seta
mov
push
cs
dec
in
add
mov
pop
sub
lahf
scas
cmp
cmp
xchg
in
aaa
fildl
stc
lret
dec
je
push
pop
clc
shll
sar
push
gs
imul
lahf
dec
mov
dec
dec
mov
shlb
cltd
xchg
jno
lret
sub
jl
jnp
mov
repnz
shlb
xor
iret
fbstp
gs
paddsw
cmpsl
out
std
and
or
xor
idivb
push
popf
jnp
leave
pop
pushf
xor
je
cli
mov
test
jno
mov
jo
lods
call
xchg
jae
ja
adc
int3
sub
pop
pop
int
xchg
xor
sahf
xchg
jl
rorl
ljmp
push
hlt
test
mov
popf
inc
push
or
mov
sahf
sub
pop
lods
insl
add
enter
cmpsb
lahf
fnstcw
imul
push
jnp
dec
add
mulb
out
loop
movsb
notl
jmp
imul
lods
jae
imul
push
and
scas
aas
push
dec
lret
dec
pop
mov
out
cs
in
add
mov
mov
sub
push
push
cmp
lds
shll
add
cmp
push
bound
mov
push
je
mov
jae
jg
cmp
inc
sbb
scas
js
push
sbb
fsts
adc
adc
jp
or
add
jb
idiv
in
mov
sub
sub
sbb
add
scas
add
push
inc
dec
jg
into
lret
push
int3
roll
lret
mov
shll
mov
arpl
xchg
push
lcall
hlt
dec
dec
cli
or
pop
push
cld
and
push
notl
cli
fwait
push
pop
out
mov
jmp
sahf
pop
leave
pop
popl
jge
icebp
cmp
pop
sbb
or
jge
aad
add
sti
fisttpll
cmpsl
pop
aam
jp
lds
aas
into
call
int
movsl
cld
aam
pop
lds
mov
inc
dec
push
lods
add
aaa
pop
fistpl
out
sub
aaa
mov
jns
sbb
xor
fidivl
add
mov
not
out
dec
push
or
mov
jl
sti
pop
push
scas
insl
or
push
cmp
in
cltd
xchg
mov
in
mov
jge
aad
mov
in
insl
or
cmp
test
aas
fwait
xor
dec
fisubrs
dec
repz
fiaddl
jge
insl
scas
idiv
cmp
lret
adc
cmp
and
sbb
push
push
insb
push
std
scas
cmpsl
test
into
pop
xor
cs
pushf
dec
ljmp
mov
pop
dec
add
or
rcrb
sarb
dec
push
add
lahf
mov
pop
pop
out
xor
dec
ret
inc
push
aas
adc
lods
sub
test
push
xor
and
adc
push
ss
es
fistpll
cmp
inc
sub
or
push
jns
scas
into
cmpsl
push
push
aas
loope
out
xchg
aas
mov
cmp
pop
dec
fldl
add
xchg
add
cmp
push
std
mov
xlat
push
decb
outsl
jbe
add
leave
mov
and
lahf
push
push
xchg
mov
cmp
in
add
jnp
aas
fisubl
sti
mov
std
call
fs
xchg
outsb
repz
cmp
cmp
lahf
rolb
inc
add
lret
das
jbe
ficompl
shll
mov
sub
add
stos
mov
cmp
jne
xchg
int3
out
lret
popf
push
jo
std
lret
sbb
lahf
dec
lcall
aam
cmp
pop
test
out
loop
pop
mov
pop
test
mov
enter
cltd
in
or
mov
int3
cmpsl
pop
mov
sub
mov
shll
push
push
add
movsl
mov
lea
or
push
cmc
out
inc
pop
push
jnp
outsl
aas
ret
add
out
sbb
sahf
pop
dec
mov
lcall
mov
iret
movsb
pop
stos
cmp
mov
shrl
xor
pop
push
inc
popw
pop
add
pop
int
imul
mov
aas
push
pop
idivl
pop
mov
add
add
add
cld
pop
cwtl
xlat
push
pushl
fildll
sahf
fwait
leave
push
push
aas
fwait
cmp
shrl
addr16
xor
pushf
imul
in
lahf
jecxz
add
or
fstps
xchg
pop
dec
outsb
sub
mov
imul
inc
mov
mov
adc
push
inc
mov
lret
vxorps
pushf
out
fimuls
mov
jnp
inc
leave
ds
int
adc
mov
pushf
dec
or
fnstsw
cmp
iret
addr16
scas
or
movsb
cli
cwtl
jo
mov
insl
addr16
pop
sti
fisubrl
xor
xor
cld
ds
jns
pushf
xor
jmp
cmpsl
int
mov
cli
imull
mov
lahf
in
mov
xchg
idivb
lret
ficomps
imul
dec
xor
out
mov
mov
cmp
lods
or
xchg
pop
andps
outsb
jns
cmpsl
push
cmc
ss
cmp
sub
enter
lcall
xlat
sahf
or
gs
cld
loope
push
fs
repnz
cmpsl
jmp
mov
test
and
jmp
aam
add
shl
test
repnz
fwait
push
lds
xor
in
cmp
loop
fiadds
iret
bnd
pop
push
lret
inc
add
xchg
test
mov
sbb
cmp
lret
jg
cltd
jb
das
pop
jns
int
cmp
mov
add
dec
mov
jmp
xor
int
daa
pushf
xchg
mov
mov
add
ret
inc
mov
pushf
cmp
xchg
pushf
xchg
in
aas
incl
sub
pushf
jg
cltd
icebp
inc
ds
roll
dec
lret
scas
cmp
std
outsl
mov
or
lret
lahf
cs
gs
sar
stc
aam
jge
scas
xchg
fisubrs
cld
fs
add
jae
cmp
scas
je
ljmp
pop
imul
sub
lods
fisubs
adc
xlat
mov
mov
jl
xor
jbe
test
jns
mov
dec
repnz
lahf
in
fistps
adc
adc
xlat
or
das
jmp
scas
imul
int
cmp
xchg
sti
cmp
mov
or
cmpsb
jno
loop
mov
scas
jnp
dec
adc
ljmp
mov
imul
ss
ds
pop
int
stc
pop
cmp
mov
push
pop
les
fiaddl
or
add
or
pop
pop
pop
mov
addr16
lret
popf
xchg
xor
imul
in
ss
loop
xchg
loop
xchg
sub
rcrl
push
fsubr
int3
out
jg
into
enter
xchg
mov
shll
mov
dec
repz
lahf
mov
cld
xchg
add
sti
mov
jns
leave
ljmp
mov
mov
aam
adc
mov
xchg
add
add
pop
lret
mov
mov
ljmp
movsb
shlb
mov
or
lret
cmp
pushf
lret
pop
xor
jge
jo
fnstcw
dec
or
jbe
imul
jae
jmp
add
push
mov
cmp
mov
imul
adc
ds
mov
lods
repz
iret
lret
push
mov
enter
fidivl
lahf
xor
fidivrl
addr16
xor
scas
int
mov
cmp
test
mov
cmp
mov
cld
ljmp
or
sub
testl
out
jge
outsb
test
mov
push
in
fidivrs
jae
stos
cmp
pslld
cmp
into
out
cmp
and
fistpll
pop
jecxz
xlat
out
pop
mov
pop
mov
push
mov
add
in
lret
aas
ret
lds
xchg
fstps
xchg
xchg
push
int3
lret
mov
inc
push
cmp
cmpsl
sti
xchg
int
pushf
jp
lds
cld
lods
imul
xchg
leave
in
cmp
leave
push
addr16
or
pushf
xchg
in
cmp
in
rcrb
hlt
adc
mov
xchg
ljmp
mov
add
cltd
mov
pshufw
push
mov
cltd
mov
mov
aam
inc
sbb
pop
inc
cli
xor
into
mov
pop
in
aas
lods
lret
xchg
out
inc
add
jns
lods
adc
pop
cld
lret
pop
std
cld
into
mov
mov
add
movsl
push
mov
jb
int
xchg
cmp
movsl
lahf
out
mov
mov
push
jne
fiadds
fisttpl
jle
push
jg
jns
aam
repnz
pop
popf
cli
les
movsb
pop
dec
push
scas
jge
pop
lcall
cs
das
iret
shll
scas
cmp
leave
divb
int3
into
mov
mov
dec
insl
mov
mov
imul
pop
mov
dec
or
repnz
stos
cmp
mov
jae
sar
mov
xchg
dec
cltd
pushl
mov
push
add
push
add
enter
sub
push
rcl
xcrypt-ctr
cmpsl
pop
inc
or
cltd
out
in
aam
pop
sbb
cmpsb
addr16
mov
mov
aas
jg
lahf
out
aas
jecxz
pop
test
movsl
mov
mov
rcl
add
push
xlat
loope
outsb
sub
add
into
movsl
inc
insb
cmpsl
push
popa
aas
ret
into
idiv
jns
in
lods
int3
int
sub
out
xor
push
jns
in
or
mov
ja
rorl
outsl
into
dec
mov
dec
push
lahf
imul
repz
lcall
jns
cmp
sahf
insl
hlt
test
push
flds
inc
insl
or
cmp
cli
out
aam
jne
jo
mov
imul
cmp
fwait
notl
push
cld
stos
mov
xchg
adc
mov
ljmp
movsl
or
aam
push
sahf
mov
push
rcrl
add
cltd
mov
out
pop
jno
scas
into
rcl
add
aam
push
std
jg
enter
and
sub
insl
ffreep
cli
sub
rorl
lods
sub
mov
or
jecxz
lcall
mov
lahf
cmpsl
adc
xor
jno
mov
cmp
in
cmpsb
jae
imul
jl
add
mov
adc
negb
push
arpl
fucomip
cmp
lods
outsb
sahf
lahf
jmp
sti
mov
cld
lods
addr16
adc
cmp
loope
cmp
lahf
jp
xchg
add
int3
lret
popf
mov
push
mov
mov
std
rolb
cmpsb
fs
cmpsb
addr16
dec
jecxz
xchg
jecxz
fsubl
xchg
dec
in
out
sub
into
push
ss
add
insl
sbb
popf
dec
push
fnstenv
pushf
add
or
jo
inc
push
addr16
add
enter
push
mov
xchg
je
push
add
lret
pushf
dec
mov
mov
sarb
rorl
mov
lret
cmp
decb
rcrl
idiv
xlat
into
inc
popf
mov
cmc
in
test
aam
pop
ja
fimull
mov
cld
ds
mov
insl
add
cmp
scas
or
pop
icebp
fimull
mov
mov
xor
lcall
movsl
cmpsl
add
xor
mov
fnsave
fsts
sub
adc
mov
jmp
int
xchg
sub
sti
xlat
iret
bnd
or
jmp
adc
into
pop
mov
add
mov
test
sbb
push
sbb
lahf
fnstenv
pop
sti
mov
push
pop
pusha
cmp
outsl
pop
or
mov
jb
fucomip
into
iret
lock
negb
call
popf
pushf
xor
mov
add
or
push
stc
sbb
hlt
dec
push
lahf
jecxz
aam
repz
cmpsl
gs
icebp
aam
push
cmp
mov
div
enter
xor
mov
movsl
jbe
ror
into
rcrl
cld
imul
lret
faddl
in
add
cmpsb
jo
loope
jae
insl
mov
into
repnz
adc
ljmp
imul
aam
push
pushf
lahf
dec
dec
lods
jb
sti
jle
pop
dec
or
pushf
pop
negl
add
insl
jo
fiadds
repz
add
out
pop
outsl
imull
shll
lahf
jp
pushf
cmp
cmp
test
hlt
ljmp
xchg
fisubrs
jae
cmp
add
imul
in
popf
imul
aas
xor
mov
add
cmpsl
sbb
jg
jns
and
fmull
lahf
pop
test
push
xchg
cltd
jnp
dec
add
cs
jecxz
dec
stc
aam
sub
mov
dec
fcmovb
into
mov
cmpsl
mov
push
jne
lahf
and
push
insl
imul
lahf
mov
lret
je
scas
cmp
pop
stc
aam
mov
leave
ficoml
vcvttsd2si
add
add
pop
int3
jmp
cltd
ret
ret
jae
mov
stc
pop
mov
div
add
frstor
cmpsl
clc
fcmovb
mov
cmp
jmp
cmp
push
out
int3
orb
mov
xchg
mov
sub
stc
lret
out
xchg
fnstcw
dec
adc
jge
cmp
pop
lret
movsl
clc
shll
aam
mov
sbb
imul
sarl
push
xchg
lods
push
add
add
mov
pushf
loope
into
pop
jne
ljmp
add
std
sbb
incb
mov
lret
enter
adc
into
sub
pushf
sub
adc
push
mov
add
cmp
sti
fisubs
jg
cmp
push
ja
adc
cmp
jae
cli
push
add
mov
imul
ja
cmp
in
push
jp
stos
cmpsl
stos
mov
mov
inc
pop
or
shl
xchg
iret
scas
fstpt
sub
sub
jg
xlat
roll
mov
fsubrl
aad
jbe
les
mov
lahf
flds
add
test
mov
jbe
movb
pushf
xor
push
add
in
aam
out
or
dec
mov
add
imulb
into
mov
mov
insl
pusha
pop
or
pop
into
idivl
out
jmp
int3
add
enter
jle
into
dec
mov
dec
repz
movsb
scas
jns
cmp
sub
pop
ret
or
add
das
dec
fs
mov
testb
dec
adc
fistps
into
iret
or
cld
lods
cmp
inc
insl
and
xor
and
insb
imul
shl
pushf
pushf
cmc
jg
aam
fistpl
test
out
out
sub
iret
repnz
into
jle
lret
movsb
repnz
cmpsl
stc
repz
lret
pushl
pushf
mov
cmp
std
in
inc
aas
stc
pop
bound
mov
iret
cmp
jg
jle
rcrb
cmp
popa
roll
stos
mov
sti
imul
sahf
and
stos
xor
mov
daa
adc
pop
mov
inc
leave
xor
movsb
das
xlat
push
sbb
cmp
dec
scas
cmp
adc
push
repnz
cmp
cwtl
cmc
xchg
mov
cmpsb
xchg
mov
pop
mov
jno
mov
push
ljmp
in
lods
add
aam
repnz
popa
jg
mov
adc
stos
jge
ja
adc
arpl
lea
or
into
fisubrs
xchg
shll
in
sub
pop
push
fs
adc
daa
add
sbb
and
lds
push
inc
pop
jnp
push
jle
adc
popf
test
add
sub
outsl
mov
pop
shll
dec
add
xor
push
lcall
fs
push
push
xlat
xor
stc
outsb
jbe
add
sbb
rclb
mov
into
sarb
cmp
or
movsl
out
mov
int
jnp
mov
jge
xor
mul
call
mov
xchg
mov
xchg
mov
shrb
cmc
mov
jne
iret
cmp
leave
idivb
push
mov
movsl
shlb
mov
std
cmpsb
pushf
fsubrl
xchg
aas
into
dec
sti
jns
sub
imul
cld
out
repz
out
addr16
in
test
xlat
pop
setb
loop
mov
repz
jg
pushf
addr16
xor
push
xchg
pop
pminub
jno
jmp
int
cmpsl
std
xchg
inc
daa
push
push
ljmp
pop
pop
lret
jno
int
outsb
in
inc
idivl
xchg
movhps
ljmp
test
lods
adc
lea
aam
sub
arpl
add
popa
or
pop
ja
clc
iret
lock
sbb
xchg
imul
jbe
push
cwtl
mov
pop
jecxz
jle
lret
push
push
pop
popf
sahf
xor
and
and
stc
iret
gs
imul
insl
jb
popa
outsl
rclb
aam
je
cmc
xchg
sub
add
sti
sub
dec
mov
or
popf
rcl
into
push
ljmp
into
imul
cmp
leave
jbe
repnz
xchg
pushf
mov
mov
dec
jg
ficoml
dec
sub
pop
iret
mov
ret
lret
cmp
push
lds
cmp
aam
xlat
adc
push
dec
insl
xor
test
movsl
jg
xor
fdivrs
mov
xor
jae
div
into
lahf
out
xchg
insl
rolb
mov
test
jecxz
fstl
movsl
mov
ficoml
std
jle
cltd
imul
sub
pushf
pop
enter
cli
jns
and
insl
ds
faddl
push
xlat
jns
jmp
idivl
paddw
cmpsb
test
scas
out
mov
or
cmp
xchg
icebp
rorl
mov
aam
cli
pop
lds
movsl
xlat
push
or
icebp
xlat
insb
sbb
mov
push
jns
sub
xor
sahf
cwtl
cmpsl
idivb
jbe
or
mov
arpl
inc
add
or
shlb
xchg
sbb
repz
xchg
iret
pushf
dec
cltd
jo
rcll
lret
iret
lock
dec
shlb
mov
or
into
outsl
jbe
add
ror
pushf
jg
cld
xlat
push
push
mov
adc
shrl
add
rcll
testb
sbb
jle
pushf
pop
aam
test
sarl
or
add
into
dec
movsl
addr16
lret
inc
add
mov
out
xchg
and
sub
dec
in
xor
lret
dec
das
not
lahf
outsb
rcl
push
addr16
iret
xchg
pop
cld
int3
jp
rcrl
pop
shrl
lret
sahf
pushf
pop
cld
xlat
jmp
lahf
iret
repnz
sub
mov
ja
stc
xlat
int
mov
sub
dec
cvtps2pi
rorl
cmp
test
clc
xlat
out
icebp
xor
hlt
in
xor
stc
cld
cmp
cmp
pushf
jecxz
xor
xor
lods
aam
pop
or
xor
jecxz
movsb
push
or
out
lahf
in
in
lret
push
lds
imul
sub
shlb
mov
mov
xlat
sub
movsl
push
shrb
or
pop
int
inc
adc
movsl
sbb
cmp
jg
add
int
ljmp
fs
mov
jae
mov
popf
lret
div
sub
push
sbb
mov
enter
inc
or
fnstenv
imul
jbe
movsl
inc
push
mov
pop
bound
repz
mov
gs
imul
fisttpl
dec
jl
jb
xor
xor
into
into
mov
iret
repnz
cmp
ds
jmp
shlb
scas
lret
lret
std
cli
sub
ficompl
into
mov
leave
fnstcw
leave
aam
jp
insb
cmp
lods
int
daa
addr16
lret
lds
dec
adc
xor
fnstcw
insl
push
cmp
cmp
jmp
cltd
xor
xor
sahf
pushf
stc
ds
aas
idiv
xlat
int
daa
cmp
jg
fidivl
popf
jl
je
cmp
pop
iret
cmp
in
pop
sub
imul
lcall
insl
sub
stos
fwait
adc
sub
pop
shll
lahf
aam
jp
push
jbe
out
rolb
mov
lahf
out
in
into
aas
lret
in
or
shll
push
xchg
movsl
aas
cmp
lods
add
mov
dec
pop
mov
lcall
lods
pop
or
push
inc
jo
daa
mov
ss
add
push
or
or
or
pop
or
movsb
repz
jl
cltd
jmp
aas
lret
inc
push
lret
dec
fstpt
jg
xchg
outsl
testb
push
jo
push
pushf
xchg
push
sub
rclb
pushf
pushl
ror
mov
out
shrl
push
data16
mov
in
lods
leave
imul
ss
loope
jns
dec
sub
in
lahf
scas
enter
cmp
aam
cmp
and
enter
imul
ret
mov
lret
xor
ljmp
lahf
insl
cmp
jp
aam
stos
mov
loop
movsb
scas
lret
imul
mov
fidivrl
dec
mov
push
cwtl
movsl
out
ja
stc
jg
movsl
decl
arpl
leave
inc
ja
frstor
repnz
lret
out
push
mov
mov
cli
mulb
pop
pushf
or
dec
lahf
xor
stc
xlat
mov
lret
or
jmp
insl
jle
into
pop
stc
xlat
in
clc
cmpsl
stc
pop
fs
in
cmp
pop
adc
rep
xor
insl
fistpll
inc
or
push
push
jg
xor
jecxz
lcall
pop
std
out
cmp
cmp
shlb
int
adc
stos
out
xchg
mov
lret
push
mov
cmp
mov
mov
xor
nop
add
push
les
pop
test
mov
test
mov
shrl
mov
fnstenv
js
push
addr16
cltd
cltd
std
int
cmpsl
and
je
pop
add
into
push
pop
push
inc
or
cmp
pop
dec
cmpsb
addr16
loope
pop
call
cld
int
mov
mov
cltd
jg
xchg
lret
repz
ficomps
in
sub
sub
rorl
fstpt
dec
mov
xchg
lret
pushf
dec
mov
cmp
int
fiadds
shl
xchg
lahf
popf
mov
mov
popf
jns
lret
sbb
jne
lahf
dec
lahf
in
xor
pop
dec
lret
cmc
mov
dec
lcall
in
sub
cmpsl
fwait
dec
test
in
shl
ljmp
push
sbb
lahf
gs
das
jns
addr16
sti
stc
leave
dec
ljmp
mov
outsl
mov
imul
into
mov
test
jg
inc
rcl
int3
add
xchg
fxch
out
idivl
jns
push
lret
mov
add
push
or
aam
mov
into
movsb
stos
in
dec
in
xchg
sub
pushf
pop
mov
push
js
xor
div
inc
imul
mov
loopne
jge
stos
dec
jmp
xlat
dec
mov
enter
je
movl
ljmp
outsb
in
inc
in
mov
ja
sub
dec
cmc
add
xchg
in
add
lcall
push
or
cli
xchg
xchg
push
adc
xor
int
decb
push
iret
xchg
xor
jnp
aam
adc
dec
add
cltd
xchg
and
cmp
pop
ljmp
push
inc
add
fbld
aas
mov
or
movsb
pop
mov
stc
negb
pushf
rorl
in
cmp
scas
addr16
stc
push
out
sub
jg
inc
lahf
cmp
mov
add
scas
jns
iret
negl
movsl
popf
enter
movsl
imul
outsl
shrb
rcrl
std
std
aam
mov
cmp
mov
add
clc
das
in
enter
pop
enter
sub
dec
in
xor
cmp
cmp
xchg
aam
jmp
inc
dec
lahf
cmp
out
xor
jmp
inc
pushf
mov
sbb
pop
lahf
sarb
insl
dec
push
leave
aam
sti
dec
add
lock
mov
push
cmp
jg
shrl
cmpsb
imul
sub
divb
scas
fistps
jecxz
lret
mov
shrb
cmp
loope
jl
dec
ja
lahf
repz
mov
cli
jge
xor
adc
out
decl
loopne
aad
jae
pushl
xlat
mov
push
push
mov
push
adc
addr16
or
dec
add
cltd
jmp
mov
imul
into
and
sub
daa
lea
cmp
idivl
pushf
dec
lea
fiadds
jp
push
addr16
inc
imul
in
into
sub
dec
add
fs
ljmp
cltd
iret
scas
pop
ss
xchg
imul
mov
rcrl
lret
jg
cmp
push
mov
cmp
cmpsl
push
mov
imul
repz
mov
ficomps
jmp
jo
xchg
adc
clc
cmp
mov
ficomps
add
pop
dec
lods
insb
mov
jo
sti
dec
pushf
aas
ffree
dec
fidivs
mov
mov
mov
sub
pop
pop
push
lahf
aam
fucomi
mov
addr16
pushl
loopne
dec
outsb
daa
jg
fstpl
inc
ror
les
ja
lret
fnstcw
leave
aam
dec
ljmp
sub
aaa
popf
jl
rolb
cltd
shrl
stos
insl
jp
push
pop
or
cmp
xor
push
sbb
mov
fstp
dec
add
xor
push
ficoms
sub
lret
scas
lahf
out
into
jae
add
cs
std
jbe
mov
aaa
add
push
sar
and
iret
lret
lret
adc
cld
gs
adc
jns
cmpsl
outsb
xor
or
jp
cltd
sub
jp
rclb
into
mov
mov
push
jge
lret
ficoml
fisubrl
cli
cmp
add
mov
or
fistps
xchg
push
insl
scas
jns
rcrl
mov
dec
repnz
xchg
leave
sahf
cmp
xor
cmp
icebp
cmp
in
cmpsl
aam
shlb
sub
das
mov
push
push
mov
or
das
dec
movsl
insl
out
or
jp
mov
cmp
sub
addr16
lahf
pop
repnz
movsl
out
daa
pushf
mov
in
xchg
cmpsl
pushf
cltd
decb
mov
popf
rcrl
xchg
cltd
aas
fcomi
shrl
repz
lret
jp
dec
jo
inc
out
das
daa
pop
mov
dec
repnz
shrl
rcl
sub
ljmp
pop
mov
fs
cmp
out
mov
lahf
movsl
rcrl
cmp
call
cmp
xor
dec
push
shll
stos
mov
xchg
out
fisttpl
xor
jmp
adc
aam
rcrb
fxch
pop
lahf
lods
pop
loopne,pt
das
mov
jnp
dec
push
iret
adc
aam
cli
sub
sahf
push
jg
shll
movsl
cmpl
add
aad
pop
mov
movl
rcll
mov
jne
xchg
lret
jl
jmp
into
jmp
outsb
sub
dec
insl
jecxz
sbb
mov
ja
lret
sub
lahf
pop
loop
xchg
add
dec
sub
cltd
lods
jno
lods
into
fcmovu
add
movsb
scas
jbe
or
xlat
iret
adc
cmp
imul
mov
mov
std
jae
add
das
movsb
and
mov
xchg
push
fistps
push
cli
lea
or
insl
repz
cli
fldt
add
testb
movsl
dec
packssdw
cmpsl
fnstenv
jbe
cmp
frstor
addr16
or
push
pop
xchg
push
push
jl
bnd
popa
push
xor
xchg
fnstcw
outsl
bnd
add
aad
ja
mov
inc
stos
cmpsl
cmc
cmp
popf
mov
aad
mov
push
addr16
imull
into
imul
mov
repz
inc
cmp
neg
inc
or
fstpl
ss
sahf
xor
jb
enter
in
add
xlat
xor
push
loope
aad
mov
fwait
sbb
das
fcomp
hlt
bound
push
mov
pop
scas
pop
cld
into
lods
pop
or
or
lods
imul
out
add
adc
rcrb
xor
test
shlb
addr16
xor
out
cmp
imul
faddl
outsl
shlb
repz
jno
cmc
mov
rcll
popa
mov
sahf
mov
xor
xchg
cmpsl
push
addr16
idivl
iret
outsb
das
add
lret
int
cmp
mov
push
fwait
into
jbe
jns
push
jge
das
lahf
outsl
cmp
push
adc
dec
negb
cli
push
mov
push
xlat
sbb
insl
or
cld
lods
push
loop
mov
lcall
inc
imul
jb
dec
jg
sti
push
jg
iret
cmp
scas
aam
inc
gs
dec
mov
sub
ficomps
icebp
into
leave
in
cltd
lods
jae
dec
out
pushf
incb
aas
lods
jbe
mov
in
cmp
adc
push
insl
aaa
scas
jnp
fs
clc
cmp
mov
stos
icebp
cmp
jge
movswl
call
lahf
dec
out
sub
cmc
shrl
das
fists
repz
lahf
in
jle
sti
pop
bswap
mov
stc
fbld
jnp
jns
jnp
sahf
pop
scas
stos
sbb
jp
maskmovq
negl
xchg
jg
loopne
jne
jl
jl
fcmove
int
ret
aam
insb
push
insl
add
add
lret
roll
aaa
imul
pushf
enter
dec
mov
xchg
lahf
lods
or
lret
push
cmpsl
xor
jbe,pt
push
mov
sub
arpl
outsb
sub
add
pusha
xor
stos
addr16
inc
pushf
mov
pop
aad
add
dec
adc
rcr
push
fists
xchg
adc
sub
rcll
aam
jb
lahf
cmp
cltd
in
adc
pushf
imul
cld
pop
loope
or
pop
stc
sbb
lret
movsl
pop
dec
addr16
xchg
cltd
pop
sbb
xchg
mov
jnp
dec
repz
dec
imull
imul
cmp
sar
push
aam
sub
pop
rcrl
lods
jle
enter
lods
push
mov
ds
movsl
mov
lods
cmp
dec
mov
mov
mov
cmp
in
mov
cltd
outsb
test
test
xchg
repz
mov
mov
insl
jo
dec
cmc
in
jmp
into
push
sahf
pushf
jae
add
cmp
inc
mov
repnz
notl
loop
xor
inc
pop
in
xor
pop
mov
in
lahf
pop
xor
cltd
jg
cs
pop
mov
pop
into
xchg
push
sub
aaa
outsb
insb
or
lcall
push
imul
pushf
push
jp
movsl
dec
data16
lods
fs
cmp
push
mov
mov
test
and
inc
sbb
jns
imul
mov
fisubrl
popa
into
mov
out
xchg
mov
iret
add
pop
xchg
jns
repz
int3
lret
pop
mov
imul
dec
jl
push
jg
cmp
jae
jg
data16
outsl
fcmovnbe
dec
test
dec
test
cmc
scas
sub
cmp
or
mov
test
mov
cltd
push
out
fucom
dec
fdivr
inc
lahf
inc
das
mov
clc
in
xor
mov
cmp
jmp
pushf
imul
or
mov
sahf
pushf
rclb
insl
sub
mov
lcall
outsl
lahf
rorl
lahf
iret
inc
mov
xlat
mov
addr16
movsl
stc
shll
pop
popa
leave
pop
mov
xlat
jnp
pop
sti
cmp
scas
cmp
xchg
sti
fildll
lahf
lods
jnp
imul
ja
sbb
cmp
faddl
jns
call
push
fbld
add
stc
frstor
dec
test
pop
icebp
ficoml
jns
dec
xlat
push
xor
outsl
jbe
cmpsb
add
or
imul
into
jge
repz
xor
cltd
fwait
pop
inc
add
xchg
cmp
ljmp
lods
add
ficoml
cltd
cld
jmp
addr16
shrl
push
cmp
xchg
iret
xchg
imul
mov
insl
add
pushf
mov
insl
xlat
mov
pushf
pop
lret
sbb
jns
mov
lods
std
lahf
gs
fs
out
lahf
pop
out
insl
fcmovnu
mov
in
sub
out
push
dec
stc
shll
cmpsl
or
jmp
scas
mov
dec
mov
mov
imul
mov
jae
stc
aam
std
xchg
cmp
aam
jp
enter
and
mov
cmp
mov
insl
xlat
lods
rorl
addr16
cmp
add
mov
pop
insl
dec
divb
dec
adc
sub
and
incb
mov
mov
fisttpll
stc
ds
lcall
ljmp
lahf
or
cmp
mov
cli
lret
adc
mov
outsb
or
das
scas
add
lahf
iret
notl
stos
mov
fiaddl
cld
lret
push
mov
lret
cmp
mov
lahf
push
jae
pop
pushf
jnp
cmpsb
lahf
shlb
aam
int
out
push
pop
mov
add
or
mov
and
mov
and
mov
lods
aam
or
add
orl
jp
mov
xorl
stos
jo
test
orb
fsubl
jl
insl
js
jo
xchg
add
mov
xchg
shrb
add
pop
movsl
jb
scas
mov
stc
divb
into
jecxz
cltd
test
lret
shrl
clc
pop
xlat
cmp
std
mov
xchg
fstps
sub
add
push
cmp
add
sti
cmp
pop
xor
lahf
cmc
mov
pop
rcll
xlat
dec
in
cmp
lahf
push
insl
jmp
lret
rcll
lret
pushf
dec
into
xor
mov
push
aas
jg
mov
lahf
outsl
xor
lcall
fxch
jle
lret
mov
add
gs
push
add
jg
cmpsl
ja
or
jp
jo
mov
or
dec
incb
mov
jns
sub
push
mov
cltd
jae
mov
out
mov
push
fisubl
ds
les
mov
push
adc
scas
imull
pop
enter
mov
jecxz
xchg
out
imul
shl
mov
cmp
add
mov
pop
aaa
out
xlat
pop
xlat
add
jge
adc
rcrb
xor
dec
push
fidivrl
dec
ljmp
clc
into
test
xor
outsl
add
add
das
hlt
add
jnp
lret
outsb
xchg
cmp
xchg
lods
subb
sbb
aaa
sahf
add
jge
mov
cmp
gs
stos
push
and
push
xchg
fwait
bound
dec
je
jl
insb
pop
pop
jne
pop
push
adc
xchg
fs
jns
gs
push
xor
out
icebp
xchg
out
pop
icebp
pushf
aam
dec
adc
pushf
xchg
bound
aam
jge
jg
xor
xchg
xchg
pop
mov
or
xchg
sbb
rorb
jns
jnp
mov
mov
jmp
cmp
jns
idivb
push
imul
cltd
out
inc
xchg
aas
fidivrl
dec
cmpsb
push
in
xor
jl
rcr
out
cmp
add
jnp
lret
ja
mov
add
fidivrl
das
dec
in
dec
jno
imul
std
fcmovbe
jle
jnp
das
jnp
lods
icebp
shr
jae
insl
lahf
sub
pushf
pop
les
xlat
xchg
and
lahf
icebp
cmp
add
xchg
fwait
incb
jns
dec
cmp
jge
cmp
movsl
xchg
fisubs
jbe
push
lahf
push
insl
jmp
insl
dec
in
jmp
pushf
mov
inc
movsl
movsl
dec
popa
aas
jecxz
shrb
cmp
lret
dec
in
cmp
aam
std
std
or
int
cmpsl
adc
push
addr16
add
jae
cmp
out
ja
jmp
mov
or
add
outsl
adc
iret
outsb
lock
jns
addb
add
sahf
je
out
jns
repz
test
mov
ja
mov
jle
cmp
clc
jbe
fdivs
add
mov
orb
bound
insl
ja
mov
add
gs
mov
xor
mov
lahf
cmpsl
xchg
cltd
xor
mov
and
lret
jmp
lahf
in
fs
into
pop
fwait
rorl
insl
in
pop
inc
pop
pop
enter
shll
dec
in
popa
into
jnp
ds
in
cltd
call
xor
inc
dec
dec
in
cmp
push
mov
mov
inc
xchg
in
cmp
test
pop
psubusw
insl
cmp
jmp
or
inc
dec
pop
movsl
push
mov
mov
dec
jmp
inc
inc
cmp
cmp
cmp
push
push
cld
clc
xor
mov
stos
pop
ljmp
jmp
push
addb
fildl
lret
pop
lahf
fnstcw
pop
out
imul
jns
mov
jnp
lret
xor
std
pop
push
aaa
add
or
xchg
cmp
insl
daa
pushf
xchg
std
das
repnz
les
xchg
push
sbb
mov
sahf
or
fimuls
mov
into
orb
out
or
lea
mov
mov
fs
pop
mov
nop
xchg
inc
andl
mov
dec
test
inc
jge
cmp
sahf
jne
lea
bnd
das
into
mov
bnd
into
repz
clc
xor
je
xchg
lahf
incb
insl
fwait
mov
popa
sbb
jae
rcrb
push
ss
inc
jb
xchg
inc
cltd
jle
pop
jnp
push
pop
hlt
jno
or
movsl
pop
jns
int
icebp
pop
cld
outsl
pop
cld
jp
push
push
repnz
pop
les
pop
push
outsb
inc
imul
pop
lret
aas
pop
stc
mov
pop
popa
lret
push
fs
addl
mov
stos
hlt
negl
mov
push
jmp
insl
pop
push
xchg
lcall
stos
popf
inc
addr16
xlat
dec
mov
push
outsl
fisttpl
in
cmp
mov
jnp
pushf
lcall
xor
jg
inc
mov
push
inc
jg
xlat
xchg
stos
cmp
inc
das
cld
xlat
jnp
add
into
imul
xchg
cmp
movsb
scas
mov
fs
cmp
mov
lret
daa
outsb
xor
xor
xchg
jae
imul
pop
mov
shrb
jbe
repnz
jns
push
shrl
aam
jb
repz
enter
into
mov
jge
mov
xor
jae
pop
push
xchg
pop
push
add
jle
sarb
push
gs
pop
jb
push
add
cmp
movl
lret
xor
shlb
stc
int3
xor
iret
jl
jae
add
pop
jl
cltd
mov
insl
insb
add
ja
pop
lock
jmp
enter
jo
xor
outsl
cmpsb
clc
je
je
dec
pop
insl
xchg
pop
jne
add
aas
pop
pop
jle,pn
xchg
and
mov
pusha
mov
sub
outsb
movsl
daa
aaa
gs
es
sub
push
ret
shll
loopne
lret
jp
rorb
mov
or
xchg
outsb
adc
jae
adc
jb
or
ror
bound
mov
mov
aad
dec
sub
mov
rcl
push
fcoms
notl
sub
pushf
cmpsl
outsl
xor
push
sub
cmpsl
cmc
xchg
enter
repnz
lahf
in
fs
sahf
lahf
mov
mov
xchg
clc
aam
jmp
mov
inc
cmc
scas
jg
push
xor
jne
lahf
int
push
or
scas
jl
push
in
inc
inc
nop
mov
mov
lds
xchg
ds
into
loopne
stos
cmpsb
jl
in
inc
movsl
mov
das
out
xchg
insl
shll
pop
lahf
sarl
pushf
pop
mov
lcall
jo
xlat
add
in
add
aam
clc
mov
lcall
daa
mov
enter
es
or
add
enter
ja
jne
stos
mov
xchg
orb
cmp
add
insb
into
loope
enter
push
mov
xchg
in
orb
out
ja
cmp
xchg
loope
test
cld
jnp
add
ret
jl
cmp
into
sarl
mov
outsl
pop
xchg
adc
sbb
inc
lds
je
xor
pop
sarl
or
ss
into
enter
jb,pn
enter
fs
adc
pop
pop
sub
mov
push
push
inc
insl
lcall
or
mov
xchg
and
lahf
xlat
gs
xor
mov
fcomps
jno
cmp
loopne
ss
push
lods
or
test
xor
adc
xchg
mov
push
scas
mov
sarl
repz
mov
mov
ja
pop
insl
in
add
mov
repz
jg
jnp
jmp
sub
push
int
das
push
insl
pop
jbe
cmc
insl
scas
jbe
jae
add
add
test
idivl
enter
je
sub
push
ss
push
or
stos
sub
pushf
clc
xor
stc
fnstsw
mov
outsb
jns
jle
adc
call
pop
les
stos
cmpsb
mov
insl
rcrl
sti
imul
outsl
popf
lret
push
testb
scas
fcmovnbe
pop
rorl
lcall
fildll
add
aam
out
frstor
jbe
ror
mov
add
xchg
or
inc
or
xchg
jb
cld
push
sbbb
lds
add
jae
mov
add
mov
cmpl
lcall
mov
in
mov
cmpsb
test
popa
imul
cmp
add
jmp
mov
in
cmp
jno
mov
ret
ja
jo
pop
sub
pop
sahf
jbe
insb
mov
mov
fs
subl
les
lock
pop
mov
js
mov
add
aas
outsl
cmpsb
inc
outsb
shrb
push
push
xlat
test
pusha
jmp
imul
xchg
pop
imul
and
ret
data16
xchg
mov
sahf
cltd
sub
dec
push
cmpsl
adc
jns
rorl
jecxz
sub
stos
mov
mov
aad
or
lahf
fildl
ficomps
mov
int
jle
push
lret
push
pop
lret
xchg
mov
pop
or
push
jge
sub
out
fs
pop
iret
or
lret
not
push
cmp
movsb
scas
cmp
jl
push
sub
pushf
xchg
scas
cmp
inc
jecxz
ja
xlat
leave
pop
cltd
das
jge
inc
xchg
fstpt
push
cltd
sahf
cwtl
mov
stos
mov
jg
mov
mov
xchg
fildl
ds
stc
dec
movsl
scas
cmp
movsl
push
jnp
dec
add
idivl
mov
mov
movsl
scas
cmp
std
jnp
outsl
rep
data16
clc
jecxz
mov
cs
movsl
xchg
add
pop
add
in
add
jns
or
mov
mov
into
hlt
ja
mov
je
jne
inc
dec
mov
pop
enter
lea
pop
dec
jns
mov
push
rolb
mov
insl
imul
xchg
hlt
xchg
pop
test
fisubrs
negl
dec
adc
je,pn
mov
sahf
jns
imul
ret
pop
dec
or
sbb
or
dec
or
sub
inc
xor
push
cmpsb
ljmp
insl
pop
pushf
mov
lret
jno
mov
mov
scas
cmp
pop
and
push
sbb
dec
shlb
ret
aaa
cmp
mov
insb
mov
imul
pop
lea
pop
jmp
fsubr
push
add
add
mov
push
jp
jo
stos
repz
pop
popf
push
jae
push
push
jae
or
sti
aam
repnz
push
hlt
dec
cmp
aad
insl
sahf
xchg
int
sbb
aas
inc
mov
lret
sti
sub
out
fists
jecxz
lods
js
stc
pop
int
cmpsl
push
insl
lods
movl
xchg
pop
push
cmc
int
scas
jns
jmp
out
mov
jnp
imul
xlat
out
imul
repz
icebp
lret
mov
movsl
push
insb
pop
aaa
push
adc
mov
xchg
push
sbb
add
push
push
imul
mov
shr
and
popl
ljmp
xchg
xchg
mov
lea
jnp
jge
jo
mov
mov
add
js
xchg
mov
pusha
jae
mov
arpl
jne
push
sbb
jae
mov
testb
push
mov
pusha
scas
andb
sub
filds
cmp
and
jno
adc
sbbl
data16
mov
mov
and
xchg
sub
addb
dec
outsl
popf
xchg
mov
ret
sbb
cmp
and
into
repz
popl
ret
outsl
mov
divl
in
cmp
sbb
and
xchg
pop
jno
cmp
outsl
pop
outsl
data16
ss
inc
xchg
or
std
pop
cmp
loop
mov
in
cmp
scas
mov
jge
test
jmp
insl
clc
pop
push
jp
xchg
push
jae
push
mov
jae
call
fnstsw
das
push
jbe
push
sbb
mov
jo
mov
xchg
repz
push
inc
insl
dec
push
jmp
insl
test
dec
jmp
jg
ds
jp
jae
or
cmp
in
imul
aad
pop
into
shl
sub
idivl
loop
in
lcall
ficomps
pop
inc
scas
sub
pop
jns
insl
adc
lahf
xchg
mov
mov
dec
fidivrl
pop
les
lret
fists
fwait
idiv
pop
xchg
fnstsw
lret
in
xor
push
xor
ja
mov
push
or
repnz
dec
out
add
mov
jle
jno
add
push
fdivs
nop
mov
pop
inc
cmp
test
in
add
subl
xchg
add
into
xor
lcall
xchg
pop
lea
sbbl
jb
mov
xorl
jae
push
cltd
loop
pop
rorb
ret
lock
push
add
mov
mov
xchg
sub
mov
push
into
imul
insw
ja
pop
dec
outsl
xchg
jmp
push
adc
outsb
mov
pushf
xchg
mov
xor
push
mov
or
pop
insb
jle
xchg
lret
inc
push
pop
jle
or
into
lds
imul
popf
mov
lcall
outsl
mov
outsb
bound
xlat
mov
xlat
push
fcoms
cmc
push
jbe
les
mov
fcoms
push
jns
imul
sub
out
dec
mov
xchg
mov
mov
mov
cmpsl
insl
shrl
sar
dec
jb
shrl
push
mov
push
mov
aas
mov
fiaddl
into
mov
stc
aad
jae
std
std
out
inc
dec
lahf
jecxz
cld
xlat
jae
insl
cmp
sub
cmpsl
pop
mov
pop
shl
inc
mov
sub
loop
push
loop
mov
ja
or
notb
gs
repz
insl
lcall
cltd
jns
pop
pop
movsl
push
rorb
mov
pop
xchg
jecxz
pop
mov
outsb
pushf
jg
std
xlat
out
xchg
mov
imul
adc
add
fimuls
adc
test
sbb
enter
mov
lea
mov
subb
pop
jns
ja
mov
div
push
outsb
mov
mov
insb
ds
inc
stos
stos
aaa
rcr
js
jno
sbb
lods
jnp
sub
dec
lds
not
out
jl
bound
jp
es
test
lds
sub
lret
mov
mov
rcrl
inc
jb
adc
addps
fmuls
js
cld
cmp
mov
pushf
lcall
jle
into
sub
popa
adc
mov
rclb
data16
push
test
imul
mov
adc
sbb
sub
cmpsl
fnstcw
dec
sub
pop
inc
fcomps
push
mov
sti
imul
dec
scas
gs
fwait
xlat
dec
in
aaa
xchg
imul
rcll
out
imul
add
movsl
ljmp
dec
push
sbb
jmp
mov
pushf
pop
aad
or
mov
daa
jg
fstpl
daa
xlat
xchg
test
fidivrl
push
aas
iret
mov
jae
shll
mov
sar
cmp
popf
push
jo
jns
sub
into
and
push
ljmp
adc
jnp
cmp
push
sti
sub
imul
std
iret
sbb
dec
data16
inc
js
jns
add
push
push
add
push
int3
add
jnp
addb
xchg
cwtl
mov
jle
imul
pop
test
xchg
add
orb
pushf
add
je
pop
cmp
cmpsl
filds
jae
pop
outsl
dec
fldt
pop
imul
push
jno
in
sarb
jbe
jg
pop
cwtl
xor
mov
lret
imul
rorb
xlat
xor
lds
sti
pusha
ljmp
adcb
mov
into
js
iret
sbb
cmp
jl
data16
ja
into
std
cmp
das
js
sahf
mov
ret
sbb
push
sbb
popa
dec
test
cmpsb
push
pop
jle
xchg
std
push
cmp
or
jae
movsb
xchg
movsl
mov
iret
jbe
lret
dec
scas
cmp
pop
std
imul
push
push
or
add
shrl
push
jl
jg
rcl
pop
scas
jns
cmp
push
fists
jno
ljmp
jmp
aam
stos
sub
jmp
int3
xlat
popf
dec
insl
movsl
push
push
dec
stc
fucomip
fldcw
xor
xlat
or
shl
stc
push
pushf
insl
mov
daa
std
mov
xchg
pop
xchg
inc
rolb
mov
xchg
mov
stc
fstp
into
lods
ret
das
aam
jbe
shlb
movsl
push
imul
jmp
cmp
aam
push
out
jmp
jl
fistps
stos
lcall
jo
cmp
jae
add
cmp
jp
sub
or
lds
mov
add
imul
roll
inc
dec
dec
mov
data16
sbb
shll
test
jo
lods
popa
imul
jns
xchg
mov
pusha
xchg
fisttpl
lods
push
test
repz
enter
fs
lret
stos
int3
lret
sahf
lea
push
push
cwtl
lea
popf
push
jo
lret
or
lahf
xor
outsl
adc
leave
mov
sarl
int
gs
jle
shll
push
dec
hlt
mov
mov
scas
mov
pop
iret
push
leave
mov
popa
jge
xor
cmp
cmp
lret
enter
lret
pop
xlat
fisubrs
push
aas
outsb
cmpsb
repz
enter
fsubr
popa
mov
imul
into
cmpsl
add
ficoml
adc
sbb
jbe
idiv
shl
lret
cmpsl
or
push
into
add
jno
jg
xlat
fbld
lods
fisubs
lret
pop
loop
xlat
sub
pop
movb
mov
xchg
mov
std
outsl
sub
hlt
stos
mull
push
mov
jge
mov
mov
mov
mov
fidivl
or
add
shr
push
in
dec
idivb
jecxz
xchg
into
cwtl
jl
cmp
dec
scas
sub
mov
jns
add
add
imul
into
mov
orb
dec
add
fwait
lods
mov
leave
jnp
rorl
sub
xchg
sbb
cmp
push
and
jge
mov
add
mov
push
test
add
data16
sub
xchg
cmp
mov
jo
mov
xchg
in
cltd
jbe
aas
jge
pop
push
xlat
cltd
pop
enter
lahf
xor
mov
mov
addr16
fs
add
popa
ljmp
nop
faddl
into
aas
outsl
rcrl
outsb
add
fisubs
cmp
jb
xor
into
insb
sub
aas
sarb
into
das
imull
pop
out
lods
ret
mov
push
jge
pushf
jl
bound
pop
sub
add
stc
push
push
jbe
mov
lds
iret
push
push
or
mov
fcmovnbe
daa
push
jg
ds
out
jg
xor
iret
mov
rcrl
repz
shr
ja
mov
into
and
cmp
loopne
dec
cmc
pop
out
scas
imul
mov
pop
into
cmc
mov
imul
push
or
add
cmpsb
push
mov
push
xlat
lods
jno
sub
stc
inc
sub
insl
cmp
inc
hlt
cmc
lahf
arpl
fsubrl
out
mov
sbb
dec
inc
cmp
das
out
xlat
mov
add
popf
dec
push
mov
cld
mov
push
and
movsl
dec
data16
mov
or
jmp
gs
mov
call
arpl
push
xchg
pushf
mov
ficomps
lods
push
pop
mov
pop
cmpsl
dec
push
popf
dec
hlt
lods
add
xchg
js
mov
sbbb
jbe
ja
dec
int3
outsb
push
bnd
pop
jp
push
pushf
mov
je
scas
addr16
sti
stc
into
imul
dec
sbb
pushf
cli
push
pop
dec
repnz
xchg
jb
jno
dec
in
mov
ret
mov
mov
cmp
fmul
mov
int3
jnp
lahf
sub
cs
xchg
into
pushf
pop
mov
imul
imul
lahf
jecxz
push
into
sub
and
cmp
out
popf
sahf
jnp
cmp
shl
pop
lahf
push
jo
repnz
xlat
pushf
lahf
ljmp
cld
xlat
in
iret
mov
imulb
push
push
sub
inc
mov
lret
sarb
xchg
cmp
movsb
in
xor
dec
cld
lods
addr16
out
jg
shlb
rcpps
dec
pop
jns
dec
jb
sub
cmp
jo
out
push
or
jns
arpl
fsubrp
shll
dec
push
push
sti
sub
xchg
pop
addr16
dec
xchg
out
lahf
stos
pop
mov
loopne
inc
or
inc
cmc
ljmp
insl
hlt
in
xor
mov
xchg
sub
cmp
dec
add
push
mov
sub
lods
into
pop
lret
sar
add
js
add
jg
sti
cltd
mov
in
push
cs
jb
add
andb
movsw
xchg
xchg
sahf
pop
bound
xchg
push
pusha
xchg
inc
subl
arpl
xorps
mov
sarl
inc
jne
add
rolb
mov
iret
rorl
fs
add
xchg
mov
cld
insl
or
sarl
outsl
pop
mov
ds
mov
xor
mov
ret
cmpsl
and
test
add
push
imul
mov
aad
or
dec
xor
or
stos
mull
ds
dec
push
scas
jge
sub
jmp
in
mov
adc
jbe
pushf
mov
pop
push
call
out
push
scas
jge
sub
pushf
imul
jns
jl
dec
add
cmp
hlt
adc
out
cmp
lret
scas
cmp
popf
pushf
xor
in
lcall
xchg
fnstenv
dec
ficomps
popf
jbe
push
dec
inc
cmp
sub
jnp
cmp
jne
stos
loop
movsb
test
test
cmp
xchg
or
mov
or
ret
mov
fmul
js
xorb
mov
cli
lea
out
push
xchg
mov
jnp
imul
int3
jge
mov
jae
orb
call
add
xchg
cmp
hlt
pop
out
jno
pop
popf
lret
popl
dec
repnz
xchg
push
enter
mov
pushf
mov
lret
lcall
jns
leave
push
popa
cmp
cmpsl
lahf
popf
and
rclb
cmp
dec
cltd
addr16
in
sub
dec
adc
out
into
leave
std
mov
or
clc
xor
imul
or
cmp
fnstcw
das
jecxz
cltd
add
xchg
mov
xlat
out
cmp
aam
jmp
lahf
jg
pop
push
ja
or
ds
fucomip
fimuls
pop
int3
add
adc
mov
test
jl
pop
movsb
add
push
add
ja
sub
ret
sti
fisttpll
pop
mov
addr16
popf
jns
dec
push
addr16
popf
jns
fisttpl
inc
or
push
fs
scas
sub
jp
jno
pop
out
mov
add
imul
in
mov
sub
dec
outsl
insl
lods
lds
iret
imul
fs
mov
loopne
inc
jg
cmp
out
repz
out
shrl
adc
fists
daa
inc
pop
sbb
xchg
pop
sbb
popl
lahf
inc
out
push
xlat
insl
into
sub
mov
mov
pop
mov
into
aas
roll
xchg
mov
repnz
xchg
leave
xchg
sub
cmp
lods
icebp
pop
popl
pop
mov
pop
mov
inc
push
cli
aam
jg
jmp
add
jne
popf
xchg
in
into
and
sub
outsl
lock
popf
enter
insl
push
sub
sub
mov
leave
ja
or
sahf
pushf
jno
sahf
add
outsl
jmp
out
add
push
in
enter
movsl
movsl
cld
shl
int3
cmp
movsb
push
hlt
mov
and
cmp
lcall
jg
gs
test
ss
mov
arpl
aam
cld
fucompp
xlat
pushf
popf
mov
mov
mov
std
fstpt
jg
aam
lret
xchg
fisubrs
insl
ja
mov
fisubl
jg
or
into
outsl
repz
insl
pop
shll
out
scas
push
jae
lret
aam
jns
insl
pop
sub
movsl
mov
push
or
scas
cmp
push
xchg
ja
into
pop
push
out
out
dec
idivl
dec
jg
into
cli
adc
jg
jbe
jne
addr16
ss
or
outsl
mov
test
push
dec
cmp
cmp
adc
fwait
rorl
cmp
xchg
cli
push
repz
leave
pop
mov
pop
add
xlat
jnp
push
jge
test
inc
jo
add
mov
jg
ljmp
jl
xchg
sahf
pushf
push
dec
add
out
das
jmp
add
xor
xor
cmp
jl
sub
rclb
lahf
daa
test
jne
mov
daa
mov
pop
or
fucomip
rcrl
xchg
stos
gs
mov
lret
dec
insl
pop
jo
rcl
cmpsl
push
sub
sub
push
adc
jno
stos
push
dec
adc
stc
repz
sub
sti
lahf
into
cmp
pop
push
push
fucom
pushf
xchg
repz
addr16
jo
push
lret
das
into
jg
shll
add
mov
ja
lahf
sub
dec
push
out
movsl
cld
shrl
pushf
xchg
pop
ljmp
fisubl
aas
pop
jb
push
sub
jle
into
adc
into
dec
and
fmull
lret
call
ljmp
jae
cmpsl
divb
in
pop
cmp
cltd
sahf
jns
into
movsb
scas
sub
fidivrl
jg
push
mov
movsl
add
cmp
xchg
fnstcw
jb
insl
xor
in
movsl
push
dec
mov
lcall
dec
cmpsb
aas
fidivrl
cltd
dec
xlat
pushf
popf
ljmp
lods
jo
cmpsb
jbe
test
xchg
sub
outsl
or
inc
sti
shr
jl
rcrl
into
mov
cmp
arpl
dec
scas
imul
and
aas
into
out
sub
stos
add
mov
or
add
arpl
cmpsb
cltd
mov
dec
in
xchg
mov
in
mov
add
bnd
add
cmpsb
lahf
jl
sbb
imul
jbe
test
bnd
push
jbe
insl
or
into
iret
je
jmp
sub
pop
xor
add
xor
dec
insl
mov
mov
dec
add
xchg
out
lock
into
shrl
xlat
xchg
sti
xor
sub
fildl
add
rcrb
stos
cmp
rcr
out
daa
mov
lahf
fnstcw
sub
jmp
adc
roll
sti
cmp
lods
add
xchg
pop
psubsw
lret
pushl
fadd
lret
daa
xchg
xchg
adc
into
pop
test
cli
js
pop
popf
jl
out
imull
mov
movsl
adc
inc
xchg
pop
movsl
fidivl
ds
or
pop
jae
mov
in
enter
insl
dec
jb
fwait
mov
xchg
inc
xchg
and
mov
sbb
lahf
outsb
cmp
jecxz
xlat
in
jle
into
rcr
mov
mov
add
fidivrl
xlat
pop
jecxz
and
add
cld
in
xchg
imul
inc
jb
xchg
outsl
popl
cli
jge
imul
xchg
pop
pop
scas
imul
adc
pop
push
out
sub
jne
jae
int
movb
scas
add
jp
adc
lret
call
out
enter
sbb
std
cmpsb
cltd
dec
mov
lret
movsb
repnz
enter
imul
in
lcall
decl
sub
lret
mov
jo
jbe
out
xlat
not
pop
mov
jno,pt
cmp
cld
lods
jge
movsl
add
leave
pop
xchg
imul
jmp
pop
insb
cs
xchg
dec
mov
fiadds
jmp
cmp
cli
mov
add
push
in
xor
fucom
movsl
lods
lret
dec
std
xchg
cmp
cld
inc
jns
pop
jb
ss
cmp
lock
loop
lahf
in
push
pushf
jecxz
mov
shll
into
xor
pop
rcrl
loop
ja
or
fisubrs
idivb
ror
mov
lret
lds
mov
dec
cmc
pushf
cs
cmc
popf
lret
jae
out
imul
out
pop
scas
push
jg
push
stc
movsl
xchg
ret
repnz
mov
cmp
xchg
stos
imul
fucomip
shll
and
jmp
mov
mov
fs
cmp
add
jbe
sar
fisttpll
aad
punpckhbw
push
lret
add
fdivrp
cmp
jg
inc
cli
sub
mov
jne
lods
push
mov
adc
arpl
imul
enter
mov
adc
fs
in
xor
mov
into
jb
pop
dec
add
jns
jl
iret
bnd
add
roll
ja,pn
push
jge
xor
mov
adc
xchg
jl
roll
cltd
pop
enter
xor
xchg
cltd
mov
push
daa
mov
cltd
mov
in
xor
leave
push
addr16
or
xchg
cmpsl
pop
jmp
xchg
push
addr16
mov
push
xchg
xchg
mov
imul
mov
mov
xlat
addr16
dec
shrl
pop
inc
insl
adc
push
jp
cmp
xlat
lret
lahf
test
pop
int3
dec
mov
ret
cmc
inc
jae
shl
xor
sub
addr16
shlb
mov
dec
sti
jns
gs
sub
push
push
vcvtsi2ss
dec
les
or
imul
add
push
addr16
ds
push
not
xchg
imul
aam
rorl
push
jecxz
jle
int
lods
int3
lods
notl
adc
xchg
scas
sub
pop
mov
jg
xchg
add
punpckhwd
ja
frstor
add
xor
std
jnp
jl
mov
clc
jecxz
jnp
mov
loop,pn
movsl
mov
or
or
pop
add
jge
cmp
lret
mov
sbbb
add
sub
xlat
fwait
into
pop
lret
imul
out
ja
lret
mov
in
xor
out
in
movsl
dec
push
into
pop
push
mov
jge
ds
daa
scas
lahf
idivb
into
jnp
lahf
sti
pushf
rcll
sub
cli
fiadds
lret
adc
popf
mov
clc
dec
or
rcll
imul
in
and
push
mov
xchg
in
pushf
lods
ret
insl
ds
pop
ret
addr16
add
lret
mov
push
push
sub
mov
lahf
out
xor
std
mov
std
into
mov
imul
call
dec
add
xchg
scas
lret
ds
push
lahf
cmpsb
push
jecxz
xchg
out
pop
lret
dec
lahf
push
negb
xchg
idivb
push
in
xchg
pop
enter
sahf
jo
jg
rcl
mov
mov
mov
inc
scas
jbe
pop
ja
adc
adc
ja
fcmove
cld
in
push
xchg
comiss
jp
push
push
pop
jmp
or
xchg
fiaddl
aaa
cmp
dec
mov
aam
ffree
or
rorl
push
jg
lret
repz
push
mov
shrl
repnz
repz
xlat
out
or
push
iret
lahf
nop
or
cmp
in
cmp
sti
mov
sbb
dec
addl
mov
lods
pop
shrb
repnz
lret
lahf
incl
xchg
fucomip
lret
jp
pushf
aas
movsl
jge
addr16
popf
into
cmp
lahf
mov
inc
xchg
ds
xchg
test
xchg
imul
xchg
push
sahf
xchg
imul
pop
cld
stos
lahf
xchg
fistpl
sti
lret
dec
icebp
imul
sub
aad
enter
add
sbb
and
aam
insl
add
loop
shll
stc
outsb
aas
mov
dec
mov
xor
add
mov
std
int
scas
jnp
leave
pop
pushf
pop
fmull
push
into
enter
lahf
cmc
sti
or
icebp
pushf
outsb
sub
sbb
gs
sub
rol
mov
leave
ret
or
stos
cmp
lret
cltd
jg
adc
sub
insl
imul
pop
xor
dec
pushf
mov
mov
je
imul
xlat
ljmp
jmp
or
mov
stos
cmpsb
push
mov
into
leave
or
push
sti
imul
mov
popf
inc
push
fmull
in
push
cmp
ds
leave
pop
pushf
daa
xchg
lahf
idivl
movsl
sub
push
sti
pop
push
rcrl
mov
rorl
ret
add
sbb
push
jns
imul
iret
ficompl
xchg
mov
xchg
out
lcall
aam
inc
pop
push
add
jns
imul
mov
pushl
in
jb
out
outsl
shll
rolb
bnd
enter
sbb
jno
test
or
hlt
test
cmp
cmp
aad
add
jp
into
imul
mov
jmp
daa
cmp
negl
lret
movsl
mov
pop
mov
dec
push
cltd
mov
fbld
mov
xor
cld
stos
iret
insl
pop
ret
sub
out
jg
cmp
fidivrl
outsl
jg
lret
xlat
xchg
push
sub
imul
imul
cld
sub
mov
add
test
in
add
daa
test
gs
push
jae
mov
hlt
jmp
inc
xchg
test
mov
lret
cltd
cmp
movsl
and
emms
icebp
xlat
insl
sbb
aam
jmp
or
xchg
dec
pushf
jg
shr
push
addr16
fstpt
daa
pop
xchg
inc
daa
idivb
mov
scas
mov
leave
pop
xlat
int3
inc
add
popf
adc
scas
movsl
out
jge
outsb
test
in
cld
lahf
in
in
dec
pop
xchg
cmp
insl
and
mov
out
out
shrl
cmp
dec
mov
scas
cmp
jns
in
inc
loop
mov
dec
add
cltd
lds
aam
repnz
xchg
scas
mov
pop
enter
pop
mov
jg
cld
inc
push
int3
enter
cli
ret
mov
push
mov
mov
mov
pop
leave
fistpll
roll
pop
ret
cmp
adc
fimull
pushf
fiaddl
lahf
mov
lcall
cmc
sarb
into
adc
jl
or
jne
fs
jp
jnp
sub
push
out
pop
popf
lret
dec
clc
jae
dec
sub
bnd
imul
dec
mov
out
and
std
cs
pushf
out
push
cmp
mov
jo
into
dec
mov
outsl
je
push
std
into
lret
jno
rorl
out
cld
lods
addr16
pop
imul
push
imul
xchg
idivb
pop
ljmp
add
push
fs
lret
addr16
cltd
xchg
idivb
icebp
data16
lahf
out
pop
gs
jns
imul
imul
xlat
imul
cmp
lahf
jg
xchg
je
fidivl
inc
sub
push
pop
jnp
scas
into
enter
jns
dec
sbb
cld
into
sar
stos
not
rorl
mov
jmp
pop
pop
loope
aad
jns
lret
out
jae
lret
mov
lahf
loope
pop
stos
inc
ficomps
mov
icebp
xor
fnstcw
out
pop
repz
cmp
fdivrl
into
stos
jecxz
clc
aam
test
shrb
lcall
cmp
inc
mov
xor
fbstp
dec
dec
out
push
imul
cltd
sti
cld
push
mov
mov
movsl
popf
shll
mov
add
or
lret
add
cltd
push
jnp
and
and
sub
lods
or
rcrb
aad
mov
lcall
cmp
in
cmp
int3
lret
mov
xor
ljmp
in
scas
into
xlat
cmp
fs
dec
lahf
lahf
inc
stc
imul
data16
jno
push
cmp
pushl
xchg
dec
inc
dec
in
ds
push
jno
xchg
xlat
mov
add
ljmp
fiadds
jb
ds
pushf
cmp
mov
pushf
xchg
in
gs
pop
sti
cmp
adc
sti
jns
cmp
cmc
ds
cmp
pop
shrl
mov
jo
fs
hlt
movsl
in
or
repz
mov
repnz
mov
mov
insl
in
sub
cmp
jl
repz
or
insl
loopne
leave
sub
cmp
cmpsl
sti
pop
add
adc
or
imul
adc
push
push
popf
fstp
faddl
jae
scas
out
sarb
dec
mov
sar
das
rorl
mov
xlat
mov
iret
jg
outsl
mov
dec
fbstp
inc
xchg
aam
push
push
push
je
out
xchg
ljmp
inc
test
movsl
das
iret
shrl
xlat
pop
adc
xchg
adc
jns
jmp
mov
ss
add
jmp
aaa
or
add
enter
negb
in
test
daa
push
jbe
repnz
fs
lods
cmpsl
out
jo
retw
pushf
jl
cli
xor
lret
aas
decl
jl
mov
lahf
sarl
in
jns
dec
cld
loope
jae
sub
rcrl
push
int
mov
jns
outsl
mov
aam
clc
aam
xchg
mov
dec
or
pop
repz
lret
lods
ret
cld
aam
mov
imul
push
or
lds
stc
pop
push
insb
mov
outsl
cmp
sub
in
xor
push
jno
imul
push
addr16
push
loop
push
ficompl
aam
notl
or
outsl
fcmovne
dec
mov
xchg
clc
xlat
jb
nop
fnstsw
int3
inc
lahf
testb
shll
lret
mov
scas
imulb
lret
cmp
decl
pop
ret
addr16
xchg
pop
repnz
sahf
cltd
pop
jge
xor
push
push
xchg
fisubs
mov
shll
decl
paddd
insl
and
ja
test
repz
dec
xlat
jmp
sbb
fisttpll
ds
pop
loop
cld
xor
mov
jae
pop
add
mov
imulb
mov
out
roll
jle
mov
into
into
add
test
lcall
jmp
cmp
addl
pop
in
xor
lret
lods
data16
decb
sbb
xchg
cmp
xlat
insl
or
fidivl
imul
leave
fnstcw
das
lock
cmp
push
pop
pushf
dec
idivb
cltd
pop
std
mov
xchg
out
xchg
mov
xchg
leave
fldcw
mov
cmp
clc
cmp
lahf
mov
ficomps
into
fbld
cltd
dec
jno
mov
ljmp
pop
sbb
push
xlat
sbb
pop
imul
negl
cmp
cmp
movsl
stc
aam
stos
xlat
mov
adc
lahf
insl
xor
scas
mov
rol
cltd
cli
repnz
xchg
mov
pop
lret
jecxz
xlat
and
scas
imul
imul
pop
insl
in
or
mov
fs
xlat
mov
cmp
outsl
dec
jmp
int3
jecxz
pop
movsl
jb
fildl
pop
stos
iret
insl
dec
mov
frstor
xor
ljmp
cli
loop
movsb
icebp
lahf
outsl
mov
fisubrl
cltd
data16
push
xor
fwait
movsl
stos
fwait
push
pop
popl
jno
mov
ds
add
sub
cmp
cli
jecxz
pop
sbb
jmp
mov
dec
lret
xor
add
gs
dec
ljmp
push
and
cmpsl
add
push
test
lret
push
into
xchg
cs
add
imul
lret
sub
xorl
xor
or
imul
or
enter
mov
mov
xchg
ja
sti
stc
aam
jns
in
mov
add
jmp
stc
je
repnz
enter
addr16
loop
jb
xchg
push
int
ds
test
xchg
mov
or
sub
xchg
loop
lahf
out
lret
repnz
jnp
dec
mov
xchg
stc
shr
push
jle
cltd
mov
mov
add
push
popf
cltd
movsl
add
lods
int3
or
ljmp
jo
add
or
pop
inc
insl
movsl
jge
inc
dec
or
mov
repz
push
jne
inc
cmpsl
cmc
cmp
lahf
cmpsl
jg
loopne
jl
push
push
mov
rcr
add
flds
int3
popf
inc
insl
cmpsl
imul
mov
jns
lds
out
xchg
stos
int
das
mov
pop
adc
add
push
sbb
in
int3
jg
icebp
cmp
shr
fimuls
dec
cmpsl
addr16
add
idivl
enter
xchg
lret
xchg
lds
or
shrl
and
ljmp
lret
jge
adc
int
outsb
sub
xchg
lahf
jmp
rcll
mov
xor
les
push
shlb
repnz
sahf
loopne
cwtl
add
fs
pop
or
adc
sahf
nop
mov
lods
std
mov
dec
repnz
cmpsl
clc
aas
repnz
xor
lret
jns
outsl
shrl
or
mov
jns
sahf
push
jg
mov
jns
imul
js
push
push
mov
shll
jp
int
and
lret
and
lahf
push
pop
into
or
loop
lahf
in
sti
aam
repnz
xchg
cmpsl
push
scas
cmp
push
jne
lahf
mov
cli
popf
jo
sbb
inc
mov
stos
lcall
push
lds
jl
bnd
mov
push
mov
decl
dec
mov
pushf
xchg
in
pushf
push
data16
aam
xchg
into
pushl
aam
fnsave
mov
sub
add
js
xchg
fisubs
insl
or
jecxz
ds
out
out
into
movsl
jge
ds
lahf
daa
ja
maskmovq
imull
sbb
pop
xor
xor
cld
shll
fildl
cmp
jle
jecxz
cli
pop
mov
in
lds
jecxz
mov
aad
notb
movsl
jns
lret
pop
push
fimull
xchg
fisubrs
std
lods
push
call
jmp
and
xchg
jecxz
sarb
cmp
xchg
mov
push
mov
mov
mov
xchg
mov
into
xchg
xchg
repz
cltd
leave
push
insl
sti
push
push
dec
cmp
pop
jbe
mov
add
dec
out
dec
rcrl
xchg
movsl
arpl
shll
adc
add
popa
popf
mov
sbb
pushf
lahf
lods
sti
lret
sub
cltd
scas
cmp
cld
clc
xor
inc
push
aam
dec
idivb
icebp
jbe
scas
cltd
shrl
ficomps
scas
jns
movsl
jbe
jnp
or
push
xchg
lret
scas
insb
add
jnp
out
repnz
cmp
addr16
dec
leave
sub
or
xor
xlat
insl
into
outsb
imul
rcr
cld
cmp
mov
jae
dec
fisubs
into
mov
pushl
ds
movsl
insl
ljmp
mov
inc
cltd
mov
fs
cmp
addr16
fs
fidivrl
and
lret
adc
add
xor
mov
popf
inc
addr16
sub
push
lret
xchg
icebp
aam
ljmp
and
rcl
jns
sub
enter
dec
ja
fisubl
sar
shll
push
push
inc
insl
sbb
outsl
pop
adc
pop
mov
xor
cmp
addb
pushf
push
jge
xor
xor
mov
jne
out
into
ljmp
lret
out
sbb
rolb
xchg
cmpsl
fs
pop
les
das
jp
lahf
cmpsl
push
negb
dec
leave
cmp
add
jg
shll
sub
push
pusha
mov
xchg
sub
ror
jle
dec
jmp
pop
jl
or
mov
xchg
in
lods
jno
imul
outsl
sub
jle
enter
js
aas
out
pop
into
out
push
ficomps
dec
pop
add
lret
mov
mov
pop
xlat
xchg
sahf
jle
push
jb
lods
cmp
shrl
xor
mov
movsl
stc
aam
sti
ja
clc
inc
insl
mov
hlt
sub
insb
dec
push
addr16
pop
ds
jmp
ds
into
scas
pop
xchg
enter
jl
dec
pushf
scas
jnp
jmp
jno
les
sub
je
cli
icebp
test
cld
scas
mov
xchg
push
enter
stos
das
jbe
out
imul
jo
lcall
sub
cmpsl
adc
fstps
std
mov
loopw,pn
mov
pop
jmp
scas
sahf
out
addr16
push
jno
iret
xlat
test
out
out
push
push
pushf
jae
imul
outsl
sbb
mov
cld
rcrl
xlat
xchg
icebp
rcll
xchg
cmpsl
xchg
cltd
xchg
aam
dec
sbb
adc
mov
dec
xor
pop
push
mov
add
add
popf
and
ja
shll
fs
cltd
push
sub
outsb
push
push
jge
iret
cld
pop
inc
xchg
out
xchg
loop
xor
and
dec
mov
jg
mov
or
lcall
pop
jge
lret
outsb
cmp
push
jns
and
jmp
xchg
or
push
jns
jbe
adc
sub
lods
add
add
fstpt
sub
dec
jae
leave
ja
or
adc
xor
lahf
in
cmp
jle
cltd
xchg
jns
jnp
lahf
cmp
mov
or
loop
jbe
fcmovu
push
repnz
pop
insb
insl
lret
sub
scas
lret
xor
in
cs
stc
aam
loop
push
movsl
lahf
in
push
lahf
in
sbb
xchg
fnstcw
dec
fisubs
dec
cmpsb
push
xor
stos
mov
out
jle
dec
lahf
lods
push
cld
aam
cmp
ja
shrd
or
idivb
test
jge
adc
and
push
jle
sbb
xchg
mov
cli
fidivs
mov
add
lods
leave
push
push
jnp
imul
addr16
sub
jne
out
repz
iret
jns
mov
push
std
push
test
push
jbe
push
outsl
mov
in
pop
sub
stos
repnz
push
sbb
mov
cmpsb
add
cmpsb
add
adc
rorl
enter
xchg
jmp
addr16
jmp
imul
xor
test
cltd
cmpsl
push
imul
pop
push
cli
shll
daa
pop
mov
xchg
mov
cmp
movsl
out
jge
or
jle
jle
cmp
clc
aam
sub
lahf
and
push
add
cmp
das
pop
les
cltd
dec
fbstp
jg
into
bnd
push
in
add
bnd
xchg
add
sbb
add
pop
into
hlt
jne
xchg
lret
negl
cmp
gs
rcrw
shl
imul
xlat
mov
daa
insl
cmp
jmp
lahf
imul
insl
jne
addb
lret
dec
insl
xchg
push
insl
cmpsb
push
push
notl
or
out
lock
clc
into
ror
pushf
dec
sti
sub
in
ret
jae
in
jnp
mov
out
out
jg
fimuls
xchg
mov
into
lods
or
mov
das
jnp
xor
out
jecxz
xchg
clc
rcrl
lahf
pop
mov
test
pop
notl
dec
ja
pop
fbstp
outsl
push
mov
lahf
imul
gs
dec
push
flds
iret
lret
cmp
jnp
imul
jg
dec
push
pop
mov
mov
vmovaps
inc
push
mov
xchg
dec
sub
sub
sub
cltd
xchg
mov
add
daa
cmp
movsl
dec
fs
sbb
sub
cltd
cmp
shrl
xchg
mov
or
push
test
push
fs
adc
xchg
jae
iret
negb
add
pop
imul
sti
dec
push
mov
outsl
xor
mov
push
repz
dec
enter
lahf
push
popf
shll
jl
frstpm(287
sti
lret
lret
imul
pop
out
sub
negl
add
roll
fistpl
icebp
ror
out
repz
mov
in
stc
shr
imulb
lret
pop
loop
mov
std
gs
outsb
lcall
mov
cmp
lahf
mov
loop
xlat
out
dec
sub
dec
mov
shrl
xor
add
jl
rcrb
mov
outsl
repz
pop
mov
lret
push
pop
dec
scas
mov
imul
iret
imul
shrl
mov
pop
lahf
sar
mov
xchg
imul
icebp
jnp
repnz
std
dec
or
lsl
mov
idiv
pop
dec
xchg
dec
xchg
lods
fs
ljmp
jg
xchg
imul
jg
repnz
cmpsl
data16
jmp
cld
je
jne
stc
into
lcall
push
addr16
outsb
ds
push
xchg
sbb
mov
sarl
into
mov
lahf
xchg
jle
into
xlat
loop
daa
leave
sti
jnp
imul
jp
std
lods
rcll
cmp
lahf
outsb
fistpll
rorl
add
fucomip
jns
dec
or
cltd
outsb
cmp
xor
stc
pop
adc
mov
aam
in
mov
mov
outsb
cmp
xor
imul
outsl
mov
push
insl
xchg
jae
dec
jmp
or
or
mov
xlat
mov
popf
ret
aam
shlb
push
shrl
push
addr16
loop
out
hlt
movsl
cli
jns
imul
cmpsb
or
mov
jae
dec
add
sar
popa
test
outsb
lods
jbe
mov
aam
jp
mov
int
aas
in
inc
mov
loopne
ljmp
test
jnp
pop
ja
idiv
cmp
push
xlat
xlat
movsl
push
shll
shrl
sbb
lahf
aam
pop
mull
movsl
push
insl
jb
fstpt
jmp
add
idiv
sub
lahf
hlt
ljmp
mov
in
or
pop
shrl
jmp
cmc
iret
aam
add
pop
into
daa
fwait
xchg
std
mov
pop
mov
lretw
nop
add
pushf
out
out
into
daa
fstpt
daa
insl
xor
pop
enter
aam
into
enter
cmp
fs
xchg
in
or
sub
iret
jle
repnz
out
in
lret
cmpsl
idivb
icebp
jl
pop
xor
popf
xchg
xor
jo
popf
inc
jo
jge
sahf
shll
jb
roll
test
jb
pushf
in
xor
stos
mull
in
cmp
scas
mov
imul
cld
jmp
insl
outsb
adc
out
imul
out
xchg
clc
into
cmpsl
sti
jno
imul
mov
mov
dec
mov
mov
or
insb
ret
std
das
push
jbe
jge
addr16
add
into
or
inc
movsl
push
addr16
push
ljmp
lret
or
stc
cmp
scas
cmp
jecxz
sub
jmp
mov
push
shlb
cmc
scas
iret
sarl
xchg
addr16
or
repz
sbb
push
push
jl
or
std
dec
js
cld
aam
pop
out
mov
dec
mov
mov
jecxz
lret
lret
fisttpll
rorb
dec
call
stos
lret
aad
jo
int
mov
scas
mov
push
imull
and
ret
pop
xor
pop
xchg
cli
inc
jg
xlat
outsl
repnz
dec
lcall
dec
pop
js
lds
fnstenv
dec
testb
outsl
div
add
cmpsb
popa
imul
popa
xchg
in
pushf
ljmp
std
gs
sbb
xor
cmp
sbb
jmp
lds
cmp
jns
dec
out
xchg
aas
jg
repz
loope
dec
pop
sub
movsl
or
add
mov
fucomip
into
jae
lods
push
out
jb
cmp
clc
cmpsl
sti
negl
call
xchg
jle
shll
aam
cld
sub
rcrb
sar
aas
jecxz
ja
lahf
shlb
mov
into
cmp
mov
push
sub
cmpsl
pop
sahf
inc
mov
mov
push
lret
push
adc
lahf
pop
test
xlat
xor
iret
call
push
insl
bnd
outsl
xor
cmp
push
sahf
pushf
add
out
add
pop
cmp
in
aam
data16
ds
aam
fldl
rcr
rcll
xor
scas
imul
iret
sarl
lret
jg
lds
ds
std
fidivl
scas
cmp
stos
lahf
cmovp
ret
jne
jg
fists
jecxz
pop
stos
fistl
push
jmp
into
jmp
lret
sbb
loopne
jno
dec
imull
stc
push
leave
icebp
das
dec
jg
jecxz
mov
scas
insl
pop
adc
add
xchg
rcll
je
cmc
nop
imulb
negb
and
sahf
cltd
jae
je
ds
xchg
setge
adc
scas
xor
into
shrl
lods
mov
dec
push
push
mov
lret
sbb
stc
je
repz
clc
xor
mov
push
pop
cltd
lret
pop
in
add
ljmp
ds
out
fsubl
push
fs
or
or
imul
jp
lahf
rcr
add
sahf
lahf
push
jbe
push
mov
cltd
std
cld
aam
mov
imul
pushf
push
xlat
adc
xchg
out
lahf
sub
outsb
mov
ljmp
jmp
imul
sbb
xchg
insl
jmp
or
sub
insl
jnp
cmp
aas
fidivl
mov
xchg
push
insl
leave
jge
test
icebp
aam
sbb
cld
mov
lret
stos
lahf
xchg
out
cmp
pushf
or
sbb
mov
imull
insl
imul
sub
jg
sub
jecxz
lret
in
loop
pop
lret
repnz
push
fs
push
hlt
xchg
pop
mov
xchg
std
mov
push
jns
cmp
inc
imul
add
add
adc
pushf
pop
add
in
adc
mov
lods
push
ret
sbbb
lret
ret
ljmp
push
std
imul
dec
pop
sub
sub
lods
sarl
cld
into
fsub
xor
test
pop
lret
fists
sub
scas
add
mov
jmp
ret
loop
mov
lock
loope
gs
sub
imul
movsl
inc
fs
add
sar
cmp
rolb
jg
inc
lahf
and
lods
jo
in
xor
fiadds
cli
lret
add
fwait
jge
push
shrl
cmp
imul
lods
insl
hlt
scas
fnsave
test
cmpsl
lds
or
fucomi
movsl
cmpsl
jmp
addr16
lods
jl
shlb
pop
jbe
pop
lahf
dec
imul
insl
or
sti
cmp
jo
jle
int
cmp
aam
jg
inc
mov
sar
lret
test
scas
jge
lods
and
ficompl
movsl
dec
insl
xlat
iret
xlat
scas
jns
sub
int3
push
xchg
jae
dec
pop
cltd
dec
jl
rorb
or
mov
out
daa
mov
mov
aam
arpl
lret
or
imull
daa
bound
pop
into
sar
push
push
jo
pop
sbb
das
fistps
mov
add
pop
notl
pop
inc
out
shr
repz
xchg
imul
rclb
xchg
testb
scas
clc
inc
idiv
ja
add
fidivrl
mov
xchg
pop
ret
lret
lahf
in
sbb
lds
into
imul
aam
xchg
dec
push
imul
cltd
ficoml
xchg
lahf
jg
mov
iret
xor
mov
cld
cmp
fildll
into
push
call
add
test
dec
fstpt
and
mov
sub
xor
mov
insl
fs
lods
or
add
scas
sub
dec
in
ds
cmc
xchg
push
push
jae
in
dec
lock
jmp
fcmove
cmp
fistps
pop
js
cltd
sub
pop
into
movsb
mov
jle
push
lahf
out
pushf
push
mov
push
mov
or
repnz
jns
jp
jo
in
cmp
lahf
movsbl
in
xor
jg
ds
jo
mov
std
outsl
into
into
dec
cmpsb
jo
mov
xlat
xchg
mov
mov
jmp
enter
shrl
divb
sar
jmp
addr16
lret
ficompl
pop
mov
fistpll
dec
jae
mov
rcrl
jecxz
lret
pushf
xchg
mov
mov
stc
jecxz
push
xchg
jae
out
repnz
mov
jo
sti
jnp
jl
push
push
fcompl
rcrl
sub
out
cmp
push
mov
push
mov
push
nop
lds
mov
bt
add
mov
sti
lds
adc
push
mov
in
pop
mov
sahf
cltd
lret
repz
into
pop
rcll
xchg
fstps
mov
dec
push
popa
sub
int
cmp
or
pop
push
aas
hlt
mov
lahf
jb
popa
mov
test
mov
xor
ds
iret
xorb
xor
icebp
xchg
push
iret
cmp
add
ds
cmc
xchg
sarb
scas
fldl
fstpl
repz
icebp
xchg
push
int3
mov
or
pop
jae
lock
pop
push
or
or
mov
dec
xlat
lods
lret
fcmove
shll
stos
iret
push
test
fcmovnbe
xchg
jo
xlat
scas
jbe
cli
pop
aam
insb
gs
rcrl
cmp
int
mov
repz
mov
mov
jnp
lcall
jg
pop
outsl
cld
inc
lahf
mov
xchg
jmp
xchg
test
cmc
stc
xchg
pop
mov
pop
cmpsl
imul
xchg
jnp
adc
jmp
cwtl
xchg
push
xor
in
cld
sub
in
movsb
jnp
sbb
movsl
stc
mov
jg
pop
xchg
rep
add
mov
xlat
mov
aam
bound
lds
nop
xchg
pop
add
add
or
mov
imul
lret
lret
call
ja
lahf
add
je
jge
adcb
pop
or
push
pcmpgtw
jg
insb
jno
jne
stc
jg
addb
push
push
fstpt
cmc
jb
fsubp
rcrl
das
dec
jno
lret
sbb
std
sbb
sub
testb
mov
push
push
xchg
push
popf
xchg
cmp
xor
fstpt
xor
sarl
jnp
lods
into
fidivs
fs
iret
idivl
enter
lret
fsts
cltd
push
movsl
add
and
cltd
fistpl
or
aam
mov
lahf
in
xor
xchg
fnstcw
pop
jns
lods
int3
movsl
fists
into
daa
jbe
cmp
add
or
mov
sarb
mov
jo
mov
pop
or
cmc
scas
sub
dec
out
sub
cmp
push
insl
push
imul
xchg
push
lds
xlat
jecxz
pop
mov
fs
stos
out
fiaddl
call
jp
lds
movsl
aad
insl
lods
repz
aas
mov
mov
inc
das
aas
ret
mov
lcall
jmp
cli
insl
xchg
jge
dec
jmp
push
push
shll
sbb
push
inc
out
bound
jns
inc
push
stc
push
stc
push
jnp
add
or
add
add
leave
movsl
pop
mov
into
test
pop
add
jmp
cmp
je
test
add
outsb
jno
int3
loopne
add
fisubrs
faddl
ja
cwtl
push
arpl
pop
push
popa
cmp
xchg
sbbl
sub
add
insb
cmp
repnz
xor
pop
xlat
sbb
cmpsl
out
xchg
xchg
jge
insl
push
decl
xor
stos
fwait
jo
xchg
push
dec
push
imul
add
sarl
repnz
clc
rcr
movsl
shll
dec
in
jp
jbe
and
scas
repnz
scas
push
aam
xor
lahf
popf
mov
jmp
movsl
add
ds
mov
cld
stos
cmpsl
movsl
jle
xchg
fnstcw
leave
push
in
mov
lcall
lahf
in
adc
mov
push
or
lds
pop
xchg
push
mov
jnp
aas
fidivl
sahf
push
aam
jp
adc
mov
fwait
inc
dec
negl
shr
mov
jp
jmp
stc
hlt
in
aad
lods
jg
nop
and
rorl
mov
lahf
mov
mov
jecxz
stc
push
jge
or
jg
fstl
fldcw
movsl
pop
mov
scas
out
fwait
pop
add
mov
jbe
cs
push
mov
pop
add
xchg
sbb
push
std
inc
push
nop
std
in
pop
mov
jns
mov
out
mov
mov
mov
aad
ret
rolb
fidivs
shl
mov
jns
mov
push
mov
rcll
lds
jo
mov
push
movsb
sti
insl
xor
dec
sbb
stc
je
leave
fnstenv
leave
pop
xchg
cmp
cmp
dec
mov
iret
test
mov
lds
dec
sub
jne
push
mov
jecxz
nop
add
xchg
je
pop
pop
add
cmp
adc
push
setg
ljmp
sahf
cltd
jb
sbb
es
imul
pushf
icebp
insl
cld
cmpsl
mov
mov
out
shl
daa
int
adc
stos
je
shl
leave
andb
sbbb
data16
pop
dec
mov
push
jge
ret
into
mov
pop
sahf
movsl
outsl
xor
add
jnp
pushf
test
scas
enter
mov
fucom
lods
sarb
stos
push
pusha
mov
shl
lea
popf
xchg
cmp
sbb
add
jbe
add
jl
jo
mov
daa
xor
ds
sahf
lahf
imul
cmp
shll
xor
mov
pushf
into
xchg
push
popa
lahf
outsl
cmp
mov
xacquire
cld
fisubl
leave
push
addr16
mov
jg
into
mov
push
jmp
or
adc
xlat
jl
push
xchg
out
repz
mov
dec
scas
jge
arpl
pop
into
cmc
scas
xchg
rorl
mov
pop
in
push
sub
movsl
jbe
jmp
fdivrs
xor
out
xchg
ljmp
add
enter
ror
mov
cmp
ret
imul
loop
jno
cmp
fstpl
addr16
jle
pop
test
mov
pop
add
into
out
adc
or
int
sub
add
fwait
cmpsl
stos
cmp
lods
lcall
enter
shrl
mov
in
aad
mov
fmull
sub
in
xor
call
ret
mov
jg
mov
das
aam
mov
roll
jns
jo
movsb
mov
fwait
sbb
call
xor
outsb
xor
call
jl
outsl
nop
ficoml
xor
dec
or
mov
in
jg
shrl
inc
fcomps
insb
xor
push
dec
jmp
fists
mov
ds
fwait
lahf
dec
scas
sub
add
inc
fildll
xlat
dec
push
test
std
push
push
add
xorl
mov
mov
jno
cmpsl
add
dec
into
mov
sbb
in
push
push
push
je
inc
pop
insl
pop
xor
pusha
mov
push
add
inc
or
mov
cli
adc
shl
cltd
enter
add
xchg
mov
pop
shrl
cmpsl
mov
int
mov
daa
adc
subb
sbb
fmull
outsl
mov
sahf
stos
mov
dec
add
shll
add
js
pop
test
lds
orl
stc
out
sub
insl
lods
les
xchg
in
insl
add
enter
pop
enter
std
dec
divb
push
xlat
push
fcoms
pop
xchg
cmp
fdivs
icebp
xlat
lret
pop
hlt
mov
aam
js
mov
shll
mov
sahf
pushf
pop
mull
cmpsl
stos
pushf
ja
lahf
xchg
aam
fcmove
mov
cltd
add
sarl
repz
lods
jecxz
mov
test
mov
loop
pop
lret
ds
addb
push
xor
mov
add
add
lcall
popa
lret
sbb
bound
jle
sahf
movsl
mov
ss
movsb
or
movsb
mov
mov
mov
enter
adc
jle
nop
mov
popl
or
mov
mov
fiadds
jb
cltd
sub
or
pop
sbb
jle
test
mov
mov
faddl
jns
mov
sbb
cmp
std
mov
loop
negl
cld
cmp
cmp
scas
xchg
shl
xor
test
in
mov
jns
imul
xor
mov
shll
jle
jge
insl
scas
push
insl
je
xchg
imul
xchg
out
xchg
and
xchg
pop
or
pushf
mov
in
xor
pop
sbb
movsb
dec
lret
daa
ror
mov
cmp
mov
lods
jne
nop
add
scas
cmp
rcr
inc
aaa
xor
pop
push
inc
and
inc
add
xchg
push
std
pop
lahf
pop
pop
in
sub
xchg
push
pop
xlat
pusha
into
pop
ja
add
fwait
mov
sbb
mov
int3
setg
xchg
mov
lret
add
int3
js
test
xor
das
out
into
addb
xchg
jp
push
scas
stc
rorl
xchg
fists
scas
mov
ror
jb
cmpsb
xchg
mov
dec
cwtl
popa
push
lahf
jnp
mov
or
imul
pop
repnz
fucomip
enter
add
outsl
testb
lret
stc
cmpsl
sbb
jg
lret
dec
pop
imul
xchg
xlat
cmc
pop
fistpl
fcomps
push
addr16
cld
fstpl
add
dec
push
adc
shl
repz
imul
ds
sahf
lahf
clc
xor
ljmp
not
pushf
xchg
lcall
int
mov
sub
lods
jg
cmp
dec
ret
lret
ficoms
xor
das
inc
add
and
mov
add
clc
dec
adc
mov
xor
daa
lret
loopne
jae
js
lea
mov
fwait
mov
pushf
mov
enter
cmp
adc
popf
push
sahf
insb
ss
adc
jg
xor
adc
mov
jp
rorl
nop
ja
add
mov
jmp
push
jb
cmpsb
pop
lret
adc
and
out
jl
mov
out
imull
into
sub
xchg
mov
mov
fimull
cld
into
jnp
cmp
sub
outsb
add
lahf
ja
imul
test
lds
fsubrs
imul
cmp
add
repnz
lcall
lret
xchg
xor
mov
xchg
sbb
decl
pop
mov
es
popf
push
mov
adc
lds
mov
mov
mov
mov
sti
mov
mov
cmp
mov
out
in
repz
inc
push
cli
or
enter
add
lds
mov
pushf
mov
leave
cltd
mov
pop
cwtl
add
xchg
test
repnz
shl
cltd
xchg
scas
fsubrs
pop
jb
inc
add
jp
cmp
add
ja
pop
lret
mov
lahf
adc
cmpsl
pop
mov
sub
xor
lahf
int
jnp
ds
outsb
and
cltd
ret
gs
std
or
mov
addr16
clc
fcmovu
in
jo
in
xchg
addl
push
aas
mov
sub
in
jle
xor
scas
les
out
xchg
ljmp
in
sub
aas
mov
fiaddl
inc
ror
negl
lahf
fnstcw
leave
pop
gs
jno
out
addr16
sarl
push
int
adc
rclb
mov
mov
jns
sti
loope
mov
enter
aad
fnstsw
adc
pop
push
lret
cmpsl
sti
inc
nop
sahf
mov
jae
xlat
jmp
fs
sbbb
jb
xchg
or
lods
stos
mov
movsb
mov
mov
mov
cmpsb
mov
test
nop
cltd
mov
sub
dec
repz
test
or
jg
fcmovne
xchg
es
jle
mov
aaa
daa
fwait
xchg
or
mov
adc
in
add
aam
adc
repnz
sub
mov
cmp
enter
fcoms
pop
add
fnstcw
dec
popf
cmp
jmp
fsubr
das
mov
sbb
dec
out
push
jp
xlat
stc
aad
jbe
jns
or
sti
mov
pop
les
jne
sub
fs
ror
add
mov
repnz
lcall
pop
rcll
mov
fs
sbb
mov
sbb
dec
fsub
aaa
jle
inc
add
pop
xchg
or
ret
movsl
inc
pop
sub
push
lock
jb
imul
mov
pop
test
out
out
mov
mov
inc
gs
lods
jo
mov
mov
xor
mov
mov
sbbb
test
les
cmc
jge
mov
or
das
xchg
mov
cmp
cmpsl
add
mov
lea
mov
pop
add
aam
into
in
or
out
rolb
pop
ljmp
mov
xchg
mov
mulb
sti
cltd
or
negl
xchg
cmp
decl
cltd
push
mov
mov
sahf
lea
sar
lea
mov
fstpt
lret
rcrb
daa
mov
inc
mov
sarl
pop
mov
cld
ret
pop
mov
add
xchg
std
cmp
in
dec
add
pop
and
add
leave
dec
inc
rcrb
mov
aam
in
mov
or
sub
std
jne
xchg
lret
cmp
pop
jo
arpl
jl
subb
movsb
mov
pop
xchg
sbbb
sbbl
arpl
jecxz
jno
das
int
push
or
sti
aam
xchg
fcomip
jle
xchg
cmpsl
mov
jg
mov
xor
int3
add
neg
mov
and
jbe
jg
mov
roll
ficoms
jecxz
xchg
in
xor
push
stos
in
fdivrl
xchg
or
xlat
adc
clc
inc
hlt
mov
cmp
sti
popl
dec
sti
insl
inc
imul
movsb
mov
stc
aam
sbb
inc
xchg
mov
jo
sub
cmp
leave
xchg
mov
push
adc
fstpl
sub
add
ret
mov
and
shlb
stc
cmpb
mov
test
add
mov
fwait
pop
jecxz
adcb
repnz
movsl
pop
loope
adcb
imul
out
pop
mov
les
inc
rcl
adc
out
fidivrl
jbe
outsl
or
ja
jmp
shll
xchg
or
mov
push
outsb
arpl
xchg
nop
mov
andl
cmpsb
fcoms
stos
ret
sub
movsb
add
fs
shl
mov
jg
inc
mov
enter
cmc
xchg
fxch
sub
mov
push
xchg
inc
add
lods
repz
lock
repz
xlat
loop
xchg
test
clc
fcmove
xlat
jecxz
cmp
xor
jecxz
pop
rcr
sub
mov
pushl
sbbb
out
cmp
sub
in
shrl
negl
idivl
push
insl
mov
popf
jnp
outsl
jbe
pushf
dec
sub
js
pop
push
pushf
lahf
daa
leave
rcrl
test
add
les
ret
jbe
sub
psllw
add
or
cmp
test
xor
ret
mov
dec
cmova
jbe
popf
shlb
xchg
pop
mov
xchg
push
sbb
pop
lret
xchg
imul
xor
mov
or
sub
inc
dec
or
inc
ja
and
push
pusha
negl
stos
mov
int3
sub
bswap
inc
imul
jnp
pop
push
cwtl
movl
jno
cmp
out
mov
je
andl
cwtl
push
pushf
mov
shll
push
push
imul
push
xchg
mov
test
int3
nop
stos
push
mov
mov
mov
aaa
sbb
mov
add
cltd
push
gs
lods
shll
imul
lahf
pop
lret
dec
sub
lret
lret
imul
xchg
fwait
add
cltd
jae
cld
into
jmp
fcmovbe
pop
jecxz
dec
cmpsl
shrl
stos
xor
test
movsb
mull
mov
popf
jmp
jb
sahf
pushf
stc
jb
mov
jg
fstl
jns
cmp
movsl
decl
or
lahf
fnstenv
dec
fnstcw
iret
rcrl
mov
cmp
fcmovnu
fisttps
mov
push
mov
mov
and
scas
xchg
orb
stos
lret
bswap
adc
add
movsb
add
ret
xchg
fs
js
jne
sbbb
push
insl
pop
sbb
rcrb
xor
repnz
mov
push
xchg
sbb
test
bound
fistps
cmpsb
cmp
dec
pop
scas
inc
add
loope
sbb
jno
pop
add
scas
mov
insl
add
pusha
mov
ret
and
sbb
sbb
push
sbb
lret
dec
iret
shlb
xlat
fcoml
loopne
fstpt
sub
sti
cld
addr16
xchg
rcrl
lret
xchg
pop
mov
add
popa
das
inc
inc
aam
fwait
add
sbbl
add
insl
mov
pop
js
xor
aas
jne
dec
xchg
lret
insl
pop
int
cmp
lds
rcr
inc
std
aam
addr16
cmp
or
in
imul
lea
lret
shll
clc
dec
sbb
in
shll
into
and
into
addr16
leave
sub
lahf
in
sub
aam
push
popf
inc
jo
push
push
repz
mov
cmp
fwait
xlat
jg
add
mov
pop
in
ds
scas
mov
mov
scas
aam
scas
data16
or
push
insl
outsl
jmp
jge
test
or
xchg
out
inc
push
das
mov
jae
mov
jp
jo
mov
movsl
dec
xor
mov
cmp
stc
pop
gs
inc
pop
jne
jae,pt
push
lahf
in
into
push
mov
aas
repz
push
outsb
xorl
loop
jno
mov
outsb
into
and
mov
mov
add
mov
adc
lods
mov
les
pop
sub
or
fwait
or
cmpsb
test
cmp
adc
ret
inc
leave
mov
pop
mov
or
mov
xor
xchg
gs
scas
mov
lea
pushf
mov
scas
sbb
mov
sub
mov
inc
or
outsl
xchg
in
add
clc
xchg
stos
ficompl
cmp
icebp
push
sub
test
jl
loopne
mov
shll
and
push
into
iret
adc
aad
fcmovu
jbe
mov
mov
or
jg
cltd
lds
aam
pushf
rorb
jge
and
add
bound
pop
dec
inc
cmp
inc
out
into
inc
int3
dec
adc
repz
aas
dec
cld
inc
push
out
push
decb
xor
pusha
xchg
sbb
daa
outsb
inc
rolb
in
lds
mov
mov
fucomp
push
addb
xor
outsb
jbe
add
leave
or
aam
into
push
std
inc
or
cmp
jg
sbb
xor
jmp
mov
mov
sti
insl
cmp
jg
cmp
mov
rorl
mov
lds
pop
xchg
iret
scas
lret
in
xor
sti
sub
jg
jns
dec
lahf
dec
cld
into
std
sub
cmp
sbb
mov
lahf
movsl
jne
push
or
ret
xchg
icebp
shl
inc
fstpl
dec
ja
pushf
xlat
mov
adc
mov
nop
in
imul
cltd
out
xchg
cwtl
mov
leave
fnsave
cmp
fcompl
add
jb
mov
or
into
push
shlb
int3
mov
pop
sub
roll
ret
push
lds
cwtl
addr16
or
mov
punpckhbw
push
call
lret
scas
xchg
mov
mov
xor
pop
mov
lahf
xchg
xchg
push
call
wbinvd
xor
scas
inc
jb
ret
and
test
rcl
and
jecxz
dec
jl
xor
in
fcomps
or
pop
sub
sub
jae
ret
push
push
rcl
daa
xlat
fstps
and
mov
adc
lahf
jmp
daa
mov
dec
pop
addb
add
jmp
push
out
xchg
add
mov
std
or
cmp
push
adc
sahf
lahf
ror
mov
jo
in
cmp
rcl
mov
mov
cmp
addr16
xchg
fsts
lods
mov
cld
fisubrl
das
rorl
negl
lret
scas
or
cltd
dec
adc
imul
sub
jne
rolb
insl
sar
ds
jecxz
aad
jae
xchg
dec
ljmp
mov
cmp
or
mov
mov
mov
pushf
leave
pop
inc
jbe
into
jge
gs
cs
cs
mov
xchg
idivb
push
dec
or
add
mov
int
add
push
xlat
fmuls
addb
mov
lret
fistpl
and
and
push
sub
adc
dec
and
xor
sbb
or
push
dec
pop
sbb
in
xchg
mov
xchg
pop
addr16
mov
mov
adc
adc
pop
ror
pop
or
mov
data16
inc
push
xchg
lea
movb
nop
test
das
imul
int3
fsubrs
sahf
xor
fstpl
and
xor
inc
mov
out
dec
movzbl
xchg
jmp
pop
push
arpl
add
fisttpll
out
jecxz
mov
jne
cmpsb
add
mov
lods
into
call
in
leave
fisttpll
add
cltd
add
cmp
dec
sub
add
aam
rcll
xchg
cmp
mov
add
cmp
popa
jg
pushf
push
mov
add
push
xchg
out
mov
movl
pop
mull
into
imul
xchg
jg
into
cmp
cltd
xchg
out
xchg
les
xchg
out
cltd
das
xlat
scas
mov
in
lods
insl
cmc
scas
lcall
push
sahf
pushf
std
sub
sarb
sub
ds
std
mov
xlat
push
push
push
xchg
fcomip
cwtl
iret
repz
test
mov
repz
iret
cmp
cltd
xchg
and
stos
repnz
inc
out
shl
jmp
xchg
xlat
sub
dec
push
pop
ja
add
mov
mov
xchg
adc
les
shrl
fstps
subl
int3
ret
fld
add
mov
loope
push
out
add
fxch
mov
daa
jl
int3
cmpsl
enter
push
into
xor
mov
pop
fisubl
adc
mov
lods
jg
ror
fdivl
xor
cmc
fadds
adc
add
test
fistpl
fsubp
dec
jecxz
daa
ljmp
or
fwait
in
cmp
int
add
cld
pop
scas
shl
cltd
mov
fsubl
push
lret
std
push
lea
shll
aas
mov
pop
enter
pop
ss
add
outsl
sub
push
addr16
pop
add
cmpsl
sti
hlt
pushf
push
xchg
adc
mov
jb
addr16
bnd
outsl
fst
movsl
or
lahf
dec
push
ss
adc
decl
cmc
xor
ljmp
and
into
xlat
add
sub
mov
loop
push
ret
in
mov
fidivl
mov
scas
fidivrs
dec
mov
mov
rolb
out
mov
jle
jmp
sub
scas
or
or
shll
mov
xchg
mov
xlat
out
cmp
sub
insl
pop
mov
pusha
jbe
lods
scas
mov
add
jmp
push
jecxz
mov
loop
shll
dec
int3
mov
addr16
ret
scas
fnsave
shlb
push
and
add
pushf
imul
push
shrl
jbe
sbb
mov
leave
adc
sarb
mov
cmp
add
in
and
add
iret
aam
pop
aas
jbe
repz
ret
mov
jecxz
dec
mov
icebp
jecxz
mov
fimuls
fs
fs
nop
arpl
lahf
addr16
enter
inc
gs
jno
pop
add
dec
mov
cmp
pushf
xchg
cmpsb
fs
in
xor
je
push
xchg
ja
pop
aam
in
cmp
xchg
std
std
mov
push
add
add
cmp
cltd
lods
vmulsd
mov
jmp
ret
icebp
aam
xchg
jmp
dec
mov
lds
dec
aam
pop
cld
sbb
xchg
cmp
sub
ljmp
insl
fildll
push
push
mov
push
push
hlt
out
cltd
lahf
or
lods
add
jne
cmp
lahf
xchg
pop
or
test
lret
out
movsl
cmp
inc
mov
mov
push
or
in
ds
out
jg
mov
mov
in
pusha
add
jmp
in
push
in
lcall
mov
mov
pop
jecxz
stos
movsb
cs
mov
repz
push
pop
scas
xor
add
aam
lret
jg
into
out
divl
clc
rorl
mov
push
lcall
and
jns
sub
pop
test
mov
daa
outsl
xor
shll
lret
jmp
cltd
outsl
div
into
lahf
out
popa
and
xchg
sub
push
cld
lods
addr16
mov
pop
cld
sub
fldcw
and
xchg
push
insl
dec
repnz
fucomip
jns
jb
lds
iret
loop
hlt
sti
insl
loop,pt
in
dec
mov
mov
arpl
shll
mov
jne
lahf
pop
xchg
add
popf
shll
mov
insl
dec
jge
movsl
out
jmp
pop
xchg
fisubrl
jmp
mov
jmp
mov
jmp
repnz
push
in
lea
jg
out
stos
call
mov
hlt
in
mov
popf
push
dec
jmp
mov
adc
pop
adc
mov
cmp
movsl
popf
mov
adc
xlat
dec
lret
cltd
pop
lods
lret
mov
dec
das
pushf
pop
aam
cmc
mov
cltd
xlat
scas
add
into
mov
pop
lret
mov
lret
xchg
lahf
loop
les
filds
out
outsl
shll
or
lret
xchg
xchg
repnz
ss
sahf
pushf
pop
cld
int3
push
jne
addr16
add
shll
mov
mov
std
sarb
pushf
jle
aam
popf
rcrl
push
movsl
pop
push
xchg
lahf
xchg
repz
imul
iret
into
aas
iret
stc
cmpsl
stos
inc
pushf
scas
fmull
bnd
or
xlat
lods
into
pop
xlat
add
xlat
xchg
les
sub
bound
aad
ret
imul
cmpsl
push
in
dec
scas
in
popf
pop
jmp
ljmp
adc
jno
mov
add
rorl
jg
add
and
or
lea
aam
pop
dec
adc
sub
jmp
xlat
dec
aam
cli
push
popa
dec
rep
popa
mov
into
pop
mov
pop
int3
xchg
or
jo
mov
jge
sub
pushf
shrb
in
mov
dec
push
pushf
mov
lahf
out
cmp
add
lods
outsl
rcrl
add
stc
std
nop
sbb
lea
lret
out
xor
pushf
scas
jbe
jns
or
fists
idivl
cmp
or
or
cltd
cmpsl
cwtl
jp
xchg
dec
push
insl
inc
mov
popf
jo
std
scas
fcmovnbe
jl
jl
sti
hlt
clc
xor
cld
test
enter
out
cli
jnp
lods
mov
cmp
mov
pushf
fsubp
dec
repz
xor
mov
add
xor
aaa
jge
in
and
test
hlt
mul
jbe
mov
add
xchg
sub
xchg
popf
add
in
xchg
lcall
lret
cmp
xor
mov
lret
fucomip
out
and
leave
aam
push
jne
push
ret
pop
lahf
pop
xchg
or
cmp
push
or
push
ret
push
into
sar
sti
out
mov
out
pop
loope
lds
ds
dec
lret
das
dec
mov
lret
ror
cltd
pop
mov
jle
jnp
dec
push
addr16
mov
pop
nop
into
fiaddl
cltd
dec
inc
jg
mov
out
jge
cmp
cli
push
pop
imul
repz
aad
xlat
jl
aam
ficoml
xchg
cld
mov
cmp
addr16
scas
fnstsw
insl
scas
or
fisubl
pop
xlat
xlat
mov
xchg
shr
xor
addw
ja
mov
idiv
lods
repnz
repnz
mov
lock
mov
sub
cmp
cmc
pushf
idiv
outsb
mov
add
lret
sahf
xchg
into
repz
xchg
or
jns
stc
popf
push
add
mov
lret
pop
shll
aas
pop
fisttpll
push
mov
leave
cltd
je
jb
ret
add
notl
mov
rolb
mov
cmp
mov
jle
push
cld
xlat
outsl
div
lret
lcall
cmpsl
push
pop
imul
notl
xor
mov
std
imul
outsl
xor
cmp
nop
fbld
inc
pop
jns
push
mov
sub
stos
imul
xchg
sub
mov
jmp
jo
add
jae
cs
sti
fwait
or
add
sbb
xchg
push
js
cmp
call
mov
jmp
add
pop
add
jl
hlt
cmc
andb
mov
cmp
mov
adc
push
mov
cmp
xchg
insl
lret
sub
rep
pop
leave
fiaddl
int
and
pop
pushf
scas
in
sub
jnp
fwait
lcall
or
mov
stc
into
imul
lods
aam
sub
idivb
in
sbb
fdivrl
div
xchg
mov
push
sahf
nop
dec
cmpsl
sbb
dec
push
stos
imul
jg
add
movsl
push
jo
mov
push
sahf
pushf
repnz
faddl
push
xchg
push
popa
mov
ficoml
pop
lret
std
cmp
stc
into
mov
into
test
mov
jmp
jo
mov
xchg
mov
lds
out
fists
jne
jae
xchg
repz
in
and
xor
mov
sahf
stc
xor
iret
ss
pop
add
xor
pop
outsl
add
and
inc
clc
inc
aam
sti
in
mov
push
cld
out
mov
ret
add
and
mov
sub
mov
enter
xchg
inc
pushf
std
fcmovu
gs
jnp
cmp
daa
mov
out
cmpsl
lcall
xor
lret
std
push
pushf
in
movsl
jbe
push
or
adc
pop
addr16
ljmp
push
addr16
aas
mov
ljmp
rcrl
inc
push
ds
cmp
push
push
popa
jae
aaa
clc
and
int
pop
nop
insl
stc
rcll
xor
iret
shrl
jp
enter
mov
aas
pop
aam
scas
mov
cmc
mov
mov
lret
icebp
enter
xor
jmp
sarb
xchg
cltd
sbb
dec
mov
std
aaa
cld
push
flds
cli
dec
add
add
xchg
add
mov
adc
push
out
mov
push
pop
fwait
ret
mov
lret
lahf
std
cmpsb
cltd
jns
or
or
cmpsl
clc
pop
lret
push
add
jge
cmp
and
fidivs
lahf
xchg
loop
mov
jle
push
fidivs
out
lods
ret
das
ficompl
add
rcll
aas
fmul
in
popa
cmpsl
hlt
xchg
jmp
jo
pop
loopew
sar
cmpsl
cltd
push
mov
into
rcrl
popl
jb
lret
lds
clc
shrl
push
pop
scas
ja
iret
pop
loope
testb
xchg
add
mov
into
aam
ja
lahf
lods
pop
cvtps2pd
mov
aam
popf
jl
push
jnp
xor
out
out
scas
cmp
mul
enter
imul
loop
loop
mov
cmp
add
pop
add
fiadds
inc
in
mov
scas
mov
mov
ljmp
enter
into
ret
xchg
sbb
or
pushf
cmpsl
fs
push
fcmovnu
add
popa
lods
cli
lahf
out
aam
cld
lret
imul
xchg
in
lea
add
add
mov
cwtl
in
pop
outsl
lcall
lahf
cmpsl
je
pop
dec
adc
cmp
sub
jb
pop
and
or
cld
aam
sti
inc
lahf
cmpsl
xor
into
xchg
sar
imul
into
in
scas
jnp
jmp
cli
sub
into
cmp
movsb
ljmp
sub
jns
pop
repnz
xchg
or
sub
cltd
sti
pop
pop
imul
or
std
add
testb
lds
imul
mov
lods
ret
int
ljmp
mov
call
sbb
std
pop
mov
movsl
inc
outsl
repnz
aam
out
adc
lret
jns
pop
fwait
outsl
fcmovbe
jg
jmp
jge
mov
pop
mov
mov
lods
push
sub
xor
frstor
pop
aam
mov
add
das
xor
fs
sbb
shll
in
xor
lahf
imul
cltd
push
sbb
in
add
cmpsb
push
mov
xor
jo
test
cmc
lods
negl
into
mov
rcrl
lret
ror
mov
sti
xor
mov
repnz
push
push
add
pop
jge
pop
or
add
in
out
or
in
push
inc
fucomi
test
jmp
fldenv
in
in
in
popa
out
out
adc
out
mov
lock
bnd
adc
mov
sbb
or
fisubs
cmp
mov
pop
clc
jmp
mov
cmp
jmp
loop
hlt
fs
pop
idivl
and
dec
and
testl
fists
mov
add
icebp
rorb
add
in
test
jb
in
inc
and
add
test
and
xlat
incb
pop
lock
add
add
aaa
add
jecxz
out
shl
clc
iret
fiaddl
aad
ror
ror
mov
mov
cmpsl
lods
test
cwtl
sahf
lcall
mov
aad
faddl
jns
outsl
js
ret
ja
jge
jns
xchg
shlb
add
and
and
andb
xchg
mov
cmpl
xchg
aas
mov
jge
test
xchg
sbb
lea
mov
jne
cmp
outsb
sti
aas
jb
cs
mov
mov
or
enter
scas
push
lods
adc
icebp
lds
les
test
jecxz
fcmovnb
stos
dec
fcmovu
loope
sub
add
xchg
scas
inc
pop
test
lret
mov
out
mov
call
mov
jmp
or
adc
mov
aam
inc
in
aad
xor
psubsw
mov
mov
mov
mov
add
sub
scas
addb
mov
in
ret
and
in
mov
jecxz
test
mov
enter
mov
loope
mov
loopne
scas
fbstp
ret
lods
adc
loopne
ret
mov
inc
fcmovnb
stos
push
adc
mov
test
push
loop
pop
push
out
test
jmp
into
mov
int
sbb
xchg
pop
out
repz
and
in
mov
jecxz
in
cmp
push
inc
pop
jb
loope
int3
cmp
cmpsl
sarb
sahf
lds
mulb
mov
mov
mov
jns
pop
mov
xchg
xchg
cltd
jbe
cwtl
sbb
lcall
jl
mov
nop
adcl
adc
test
movsl
incb
call
in
mov
hlt
mov
add
lea
lods
pop
sahf
mov
loope
leave
scas
add
lods
ss
mov
xor
stos
stos
popf
pop
fstl
ret
cmp
ret
jecxz
ret
loop
popa
pop
loopne
scas
sbb
and
mov
in
mov
out
mov
or
inc
mov
jmp
shrl
mov
popa
ljmp
add
mov
aam
dec
ljmp
sbb
mov
or
mov
sub
sbb
and
jecxz
fadds
jns
or
in
mov
inc
leave
aam
sub
scas
push
outsb
xor
lods
add
inc
stos
faddl
enter
and
dec
add
fld
repnz
pop
sub
add
rcr
inc
add
ss
int
enter
in
addl
add
push
lock
mov
push
dec
xor
mov
fsubs
into
mov
add
mov
lds
xchg
add
mov
add
sahf
add
inc
add
mov
sbb
add
movsb
nop
inc
mov
test
stos
cwtl
xchg
cltd
enter
and
sbb
lcall
rcrl
scas
push
sahf
and
mov
inc
mov
ret
rol
mov
mov
mov
cmpsb
shrb
daa
push
mov
pop
inc
ror
arpl
add
insb
sub
sub
push
movsb
les
test
mov
pop
faddp
lea
pop
loope
mov
in
mov
aam
and
out
stos
pop
pop
mov
push
insb
dec
sbb
or
sarb
add
inc
add
cmp
fiaddl
sbb
mov
sbb
out
adc
and
add
stos
adc
add
and
mov
mov
adc
mov
popa
ffreep
lods
mov
faddp
pop
lods
or
ffree
mov
and
ret
repnz
stos
mov
and
mov
int
mov
in
and
sub
fsubrs
add
call
lret
add
int3
adc
lret
inc
mov
and
mov
mov
test
lock
loope
pop
lods
inc
add
pop
idivb
in
and
aam
movsl
sarb
orb
push
inc
add
and
push
cwtl
add
test
mov
test
mov
inc
lret
mov
xor
mov
push
xorb
xchg
add
sarl
add
aam
lods
test
aad
lods
or
mov
sub
jns
push
loop
xor
xlat
sbb
mov
fcmove
mov
fcmovnb
fmul
mov
mov
roll
or
mov
add
add
sbb
push
push
mov
les
pop
addr16
dec
dec
xchg
aas
inc
sub
sahf
jb
fsubl
add
ss
fisubl
add
clc
lods
mov
testl
and
inc
jmp
sarl
cmp
out
gs
cmp
pop
mov
mov
and
cmp
leave
push
rclb
in
jb
mov
xchg
adc
leave
in
inc
xchg
cltd
jbe
inc
rolb
movsl
push
cmp
aas
pop
rorl
mov
lret
mov
aam
add
mov
in
mov
add
cld
pusha
push
cmp
mov
pop
in
mov
sub
mov
enter
or
mov
les
push
xor
fdivrs
movsl
add
mov
mov
mov
dec
add
cmpsb
and
fldenv
xor
add
add
dec
add
mov
pop
loopne
rcr
mov
ret
xlat
and
fdivrs
sub
aad
pop
fcmovnb
and
lret
add
add
adc
mov
rcl
or
roll
repnz
rol
mov
test
aad
dec
ljmp
pop
adc
mov
jbe
sbb
sbb
rolb
cmp
xchg
orb
add
jo
les
cmp
and
aam
out
sub
das
sbb
add
lret
push
mov
push
lods
add
push
jecxz
pop
sub
xor
popf
fisttpl
add
shll
mov
imul
xchg
into
jb
and
xchg
pop
jmp
adc
inc
js
stos
cmp
cmp
sbb
in
mov
push
sub
subb
mov
add
scas
mov
lds
dec
ret
inc
add
faddp
lods
pop
dec
fstpl
add
xchg
xchg
cmp
fisubl
mov
cmp
inc
test
push
out
movsb
pop
and
add
pop
xchg
add
int
cs
testb
cmpsl
xchg
push
jecxz
mov
shll
fs
inc
out
cmp
adc
add
fsub
shlb
fldt
ret
add
lds
pop
or
push
pop
mov
jmp
int
les
outsb
jo
pop
outsl
fs
jle
pop
pop
out
xor
pusha
subps
sbb
xor
pop
mov
push
pusha
xchg
mov
shrb
jmp
xchg
in
jg
shll
jmp
and
stc
sbb
test
jg
aas
in
mov
fsubs
mov
fimull
mov
faddl
jbe
xchg
push
mov
out
cmp
jo
jge
jne
jae
push
push
dec
outsb
xchg
jo
xchg
sbbb
aas
dec
cmp
sahf
and
and
mov
mov
leave
dec
push
flds
xchg
lret
mov
stos
pop
ffreep
scas
mov
xchg
mov
xchg
xchg
sbb
add
cmp
add
pop
nop
mov
imul
mov
lea
inc
and
orl
lods
add
mov
mov
push
rolb
push
mov
jb
pop
mov
adc
mov
lret
mull
mov
nop
enter
shlb
stos
scas
add
ror
imul
js
rorb
and
loop
xchg
int
cmp
rcr
arpl
std
mov
nop
add
cwtl
mov
subb
mov
push
cmpsl
sbb
add
arpl
push
jg
mov
pop
adc
stos
sbb
cmp
les
push
or
jno
mov
scas
xchg
add
cwtl
cmp
into
push
mov
jmp
sub
sahf
js
mov
pop
mov
mov
mov
rolb
or
adc
and
mov
cwtl
add
sbb
nop
add
push
push
mov
mov
mov
rorl
cmc
adc
test
test
fadd
push
inc
cmp
inc
add
sub
pop
sub
fildl
lods
mov
pop
mov
sbb
dec
push
push
inc
add
data16
flds
jae
divb
stc
pop
pop
jne
clc
jp
fsubs
imul
and
xor
mov
adc
aam
push
aam
imul
dec
fdivs
sbb
mov
jae
mov
in
jb
fwait
and
movsb
call
movsl
insb
push
mov
inc
jae
pop
inc
loope
add
push
sub
scas
movsl
pop
dec
and
mov
add
mov
jns
leave
cmp
mov
or
lret
rcl
jmp
mov
sub
lds
cmp
gs
add
fistl
bound
cwtl
dec
mov
hlt
jmp
mov
rcr
out
aam
mov
arpl
test
popa
lods
pop
ffree
scas
adc
xor
out
adc
jle
repnz
or
dec
sub
fwait
addb
jo
or
or
adc
and
cmpsb
add
adc
and
inc
mov
cmp
mov
mov
imul
loop
repnz
clc
cli
repz
ljmp
or
out
jmp
cmc
inc
push
sbb
div
in
add
lock
add
cmc
hlt
pop
add
icebp
and
lret
shl
mov
sub
push
add
data16
in
outsb
pop
fidivrl
xlat
push
iret
or
clc
js
stc
pop
js
rolb
pop
mov
rep
shlb
pop
es
pop
cwtl
js
cmp
fildl
cltd
jp
inc
and
xor
and
adc
sub
add
jae
inc
sarb
sarl
test
andb
mov
pop
xchg
mov
repnz
sub
jb
sub
aas
push
push
sub
test
imul
lods
pop
mov
add
cmp
xchg
rolb
icebp
test
or
jo
adc
repnz
mov
lods
ret
mov
sbb
rep
das
mov
aas
mov
rcrb
push
rolb
sub
jmp
hlt
call
arpl
imul
int
jmp
mov
stos
and
mov
jecxz
inc
mov
in
cmp
mov
jge
sub
loopne
mov
push
or
das
and
inc
mov
in
rorb
adc
xchg
adcl
and
mov
cmpsl
and
out
add
fldt
push
popa
pop
push
add
adc
push
push
push
cmp
pop
push
pop
mov
cltd
push
dec
push
sub
pop
push
push
add
pusha
pop
shll
push
or
adc
jns
push
sbb
push
test
push
or
push
aam
or
orl
sbb
or
sbb
push
iret
adc
in
adc
insb
and
pop
sbbb
test
or
and
sbb
mov
and
cmp
adc
push
sbb
pop
sbb
fdivrs
add
aas
mov
aaa
inc
subb
loope
outsb
lock
xor
pusha
cs
jg
mov
dec
dec
inc
xor
xor
mov
push
sub
pop
andl
mov
fwait
subl
int
jnp
sbb
lahf
mov
xchg
mov
mov
sbb
mov
addb
mov
pop
cmp
xchg
jae
jae
xor
mov
aam
mov
or
mov
data16
enter
mov
pushf
test
mov
imul
inc
pop
and
test
pop
inc
mov
addr16
push
ret
cmp
pop
mov
pop
mov
xchg
sub
jp
xchg
cs
mov
rclb
dec
test
push
cld
pop
mov
mov
int
data16
pop
out
sahf
imul
subb
push
adc
ss
and
cmpl
or
pushf
and
js
jne
leave
mov
stos
scas
xchg
clc
add
in
out
rolb
pop
pop
mov
fsubrp
in
cmp
in
fsubr
xchg
inc
add
sbb
add
xchg
div
idiv
push
mov
sbb
xchg
jne
cli
xchg
lret
cltd
sbb
out
cwtl
into
lock
int3
repnz
hlt
mov
adc
stos
decl
and
pusha
cmp
pushf
cli
mov
popf
lods
icebp
pushf
mov
sbb
fnsave
lret
sub
add
mov
mov
sahf
jo
adc
icebp
jno
insb
rol
outsl
xlat
cmc
insl
aas
aad
sbbb
ja
push
dec
xor
xchg
out
ret
mov
inc
cwtl
mov
mov
jno
das
push
pusha
xor
jmp
mov
stos
mov
xchg
arpl
xchg
addr16
stos
mov
je
inc
outsl
mov
imul
mov
sub
sbb
leave
scas
xchg
mov
xchg
les
sahf
imul
xchg
sub
sub
xchg
stos
xchg
imul
xchg
ja
sbb
mov
mov
and
pop
jg
inc
adc
cs
mov
mov
daa
inc
xchg
and
mov
test
in
pop
jmp
lods
cmp
stos
jbe
mov
push
stos
add
fcmovnb
lods
test
mov
loope
mov
pop
in
mov
out
mov
mov
dec
mov
je
mov
mov
fs
add
or
adc
addl
and
jge
or
lret
pushf
fildl
push
cmc
jmp
xchg
add
loopne
icebp
fcmovne
mov
or
pusha
lds
sub
jecxz
into
adcb
insl
in
pop
mov
lds
pop
fmulp
sarb
fcoml
adc
scas
ljmp
jae
pop
loopne
imul
imul
dec
insb
inc
out
repz
cmc
dec
outsl
stc
cwtl
jo
dec
out
out
out
test
sub
data16
js
int3
insl
repz
push
mov
loopne
je
xchg
inc
dec
xchg
aam
test
rcrb
sahf
leave
add
out
xchg
shll
in
dec
add
adcb
xlat
cmpsl
aaa
popf
enter
adc
adc
rclb
rclb
cmp
imulb
shl
mov
jnp
and
mov
xor
lods
gs
xchg
push
dec
push
mov
adc
iret
mov
pop
cltd
push
and
rorb
roll
rcrb
cmpsb
mov
sub
sub
pushf
inc
mov
lods
int3
mov
lcall
iret
mov
int
repz
jae
xchg
pop
imul
scas
dec
fistl
inc
pop
mov
mov
xchg
mov
mov
mov
roll
pop
mov
sbb
arpl
mov
add
add
or
adc
or
add
add
or
inc
mov
adc
mov
jmp
inc
add
sti
icebp
out
jb
gs
iret
sbbb
lret
add
mov
add
shlb
cmp
iret
push
scas
and
or
push
mov
or
mov
leave
jge
push
jmp
add
mov
add
ret
loop
int3
adc
pushf
sahf
test
adc
fiaddl
inc
pop
fisttpl
add
inc
pop
in
out
pop
jmp
pop
add
inc
pusha
repz
clc
int3
stc
in
arpl
decl
inc
add
push
js
int3
pop
repz
pop
in
push
arpl
add
fstl
pop
cmpl
push
xor
add
adc
loop
push
movsl
call
or
sbb
xchg
test
and
lea
jae
add
adc
mov
int
imul
mov
lret
rolb
int3
xchg
jo
and
lock
stos
xchg
loope
jl
pop
mov
ss
or
pusha
dec
push
and
fs
sub
call
xchg
in
in
test
or
inc
jno
lods
mov
insl
popf
sub
jb
lahf
pop
mov
subl
rorb
fwait
jge
call
or
sahf
xchg
jnp
imul
cltd
fs
or
sub
adc
jp
sub
call
data16
jb
cld
mov
xchg
xchg
divb
lods
cmp
ret
lods
adc
pop
pop
cltd
stos
pop
fidivl
scas
mov
mov
bnd
out
dec
mov
in
mov
push
mov
out
out
add
ret
add
add
or
add
sub
lods
subl
mov
add
pop
add
pop
fcmovnbe
lret
ss
int
pop
jns
inc
scas
mov
js
pop
push
outsl
add
stos
or
lds
in
gs
sbb
lret
push
popf
xchg
mov
mov
add
ror
or
popf
xchg
add
ss
add
add
xor
dec
in
out
push
jmp
push
in
add
xor
das
out
sbb
push
fcoml
dec
xchg
pop
dec
orl
popa
iret
pop
xor
jle
out
data16
pushf
ljmp
lahf
sarl
add
adcl
vphaddwd
ret
stos
pusha
pop
xor
adc
xchg
mov
mov
jp
subb
jo
add
js
lcall
leave
push
xchg
jnp
in
mov
xchg
push
adc
fnstenv
jns
dec
xor
shlb
mov
insb
mov
xor
test
repnz
js
bound
lds
test
outsl
mov
and
add
jns
pop
mov
lretw
xchg
xor
test
mov
adc
mov
test
loop
xchg
xor
mov
pop
cwtl
sbb
xchg
sub
lods
ret
push
jbe
push
mov
roll
push
dec
jo
push
mov
jecxz
mov
add
pop
mov
lahf
mov
sub
lea
sub
and
cmpsl
add
fsubl
pop
mov
xchg
mov
test
jecxz
mov
push
mov
mov
lods
out
mov
sti
std
std
add
insl
bound
mov
push
aaa
fiaddl
inc
mov
add
pop
or
add
or
mov
fs
aam
leave
mov
sub
add
inc
lds
add
add
lds
fs
aam
adc
test
sarb
shr
dec
add
enter
lea
out
inc
inc
sub
ficompl
loopne
pop
out
inc
in
and
testb
inc
stc
and
add
and
cmp
add
adc
mov
rclb
insl
and
clc
cwtl
jle
mov
daa
in
jmp
mov
fcmovnbe
rcr
test
push
push
mov
inc
adc
bound
addl
add
pushf
jno
add
mov
in
add
mov
outsb
rol
sbb
sahf
loope
mov
xor
add
fnstenv
push
shrb
mov
insl
push
mov
test
outsb
inc
mov
mov
sub
push
inc
xor
mov
cltd
push
mov
dec
aam
icebp
xor
and
cmp
adc
popf
call
out
add
cmp
xchg
mov
inc
xchg
addr16
mov
cmp
pop
adc
fdivrs
jbe
push
cmp
nop
jne
ret
mov
popf
sbb
mov
call
loope
int3
mov
bound
stc
or
xchg
ljmp
inc
shrb
outsb
sub
fnstcw
xchg
mov
lods
xchg
out
mov
imul
sub
repnz
cmp
cmp
jge
data16
pop
cld
push
or
adc
and
test
aaa
roll
add
movsl
stc
sub
xor
das
pop
adc
fistpll
inc
fdiv
inc
adc
mov
je
fldt
pop
add
frstor
fwait
mov
mov
and
mov
sbb
iret
or
fdivrs
and
rol
aaa
xlat
and
flds
jbe
pop
cmp
push
add
sbb
jmp
icebp
sbb
clc
sbb
std
out
sbb
jmp
cmp
aas
cs
cltd
mov
add
dec
daa
insb
pusha
pop
dec
jb
jle
fisttpl
scas
in
mov
outsb
jge
add
mov
lods
mov
mov
cmp
inc
sub
sti
stos
xchg
xchg
sahf
bound
iret
xor
mov
pop
fldcw
inc
sub
dec
lods
jecxz
mov
push
mov
test
dec
jecxz
gs
lods
aad
xchg
fwait
mov
lret
mov
xchg
mov
cltd
mov
adc
add
sbb
or
lods
lret
mov
shrb
xor
adc
cmp
enter
pop
mov
add
cmp
mov
leave
xor
sbbl
or
sahf
orb
dec
das
fmul
add
mov
xlat
mov
loope
mov
insl
push
inc
insb
push
jns
push
cmpsl
dec
fldt
fisttpl
mov
mov
jle
push
mov
mov
shl
into
roll
or
and
mov
mov
cmp
popf
cmp
xchg
or
add
xchg
mov
mov
into
push
or
jmp
pop
gs
cltd
adc
add
roll
mov
xchg
xchg
loopne
dec
mov
mov
lds
mov
je
fwait
cmc
or
add
ret
mov
mov
or
aad
ret
push
loopne
shll
jecxz
xor
ret
xchg
nop
xchg
pop
inc
adc
rcrl
ret
test
into
mov
nop
call
pop
sbb
fsub
adc
xor
add
push
xor
adc
hlt
adc
inc
sti
jl
xchg
adc
push
cmp
ds
out
fnstenv
cmp
fldt
cmp
das
out
jae
fnstenv
filds
or
mov
cs
and
imul
cmpsl
in
mov
mov
add
movsl
stos
scas
aad
cmpl
roll
and
shrl
shrl
mov
add
mov
mov
push
mov
xchg
mov
mov
pop
dec
dec
jb
push
push
lret
lock
mov
add
aas
lret
ljmp
mov
sub
je
stos
into
hlt
in
aad
mov
insb
jp
mov
mov
pop
loop
push
ds
xlat
mov
das
and
sub
xchg
leave
sarl
sub
bound
lods
jmp
xchg
imul
cli
leave
pop
add
mov
out
cmp
pop
xchg
sub
roll
jmp
aad
mov
xchg
jno
dec
out
ror
pop
xchg
out
imul
mov
and
inc
inc
xor
mov
or
inc
lret
mov
add
or
adc
pusha
rcll
mov
mov
mov
mov
into
enter
pop
mov
lods
mov
and
imul
add
mov
jbe
mov
mov
test
add
into
lds
loope
ja
and
dec
out
sbb
test
adc
inc
sbb
add
adc
sub
fadds
pop
nop
ficoms
loop,pn
adc
jmp
xchg
adc
std
or
xchg
push
mov
inc
cmp
mov
add
sbb
andps
dec
cmp
mov
fistl
loopne
push
fsubrl
jbe
or
xchg
mov
jbe
pop
data16
xor
jns
jno
add
mov
xchg
mov
mov
call
mov
enter
dec
push
xor
push
inc
inc
fwait
push
lods
pop
push
jp
mov
out
jmp
mov
lahf
mov
push
dec
or
lcall
gs
lods
mov
pop
mov
sub
lods
lods
fcmovbe
mov
dec
push
pop
pop
mov
mov
push
sahf
imul
testb
and
shlb
int
call
pop
and
xchg
sbb
jmp
adc
lods
cmpsl
pop
inc
fildl
or
data16
ljmp
leave
out
imul
aam
cmp
or
mov
inc
add
data16
jle
leave
add
add
or
adc
jmp
loop
call
cltd
xchg
mov
mov
mov
mov
stos
test
mov
loopne
int3
and
lret
inc
fst
lret
int3
inc
leave
ficompl
push
add
cwtl
sbb
loope
fiaddl
in
insl
fsubrp
inc
inc
mov
fcmovnu
pop
adc
sbb
shr
add
jno
and
add
pusha
jae
repz
mov
mov
lahf
pop
loope
pop
and
call
jge
mov
mov
add
hlt
pusha
jno
mov
cltd
movsl
out
sbb
jmp
cli
xchg
sub
arpl
inc
inc
push
dec
pusha
ljmp
jb
sbb
pop
js
rorl
inc
inc
shll
xlat
mov
loopne
dec
add
xchg
gs
mov
lods
push
out
mov
adc
mov
mov
std
das
sahf
ret
xchg
cmp
mov
sub
cmp
or
scas
aad
in
jbe
fidivs
mov
aad
mov
icebp
inc
dec
in
imul
jmp
mov
lea
mov
and
inc
cmc
testl
dec
cld
adc
arpl
std
lock
sbb
push
xchg
add
ret
shll
movsl
add
xor
push
shl
adc
lods
push
push
jecxz
fcmovbe
inc
shl
and
rcl
sbb
mov
sbb
paddsb
dec
loope
mov
lock
call
mov
loope
adc
add
or
fst
add
out
call
mov
cmp
jnp
imul
arpl
imul
jnp
push
data16
enter
pusha
pop
xchg
mov
and
dec
pop
xor
sbb
inc
mov
stos
leave
and
jb
jno
cmp
add
lret
insl
mov
sbb
push
add
xor
fwait
das
mov
jle
xchg
cmp
cmp
push
push
xor
and
pop
and
add
test
mov
scas
pop
mov
and
mov
jb
arpl
pop
je
repnz
pop
pop
mov
mov
xchg
in
pop
outsb
lcall
mov
mov
fucomi
or
xchg
dec
mov
lahf
pop
pop
notl
mov
call
cld
push
je
mov
outsl
push
popf
fistl
mov
pop
pop
mov
pop
imul
lods
jbe
mov
mov
nop
add
and
inc
loopne
adc
or
adc
and
dec
nop
int3
out
out
aad
jno
cmp
movsl
mov
mov
lock
jecxz
adc
ljmp
fld1
loopne
fsubrs
adc
pusha
icebp
mov
out
in
movsb
aas
mov
movsl
sbb
pushf
out
in
lods
xchg
inc
in
adc
add
jmp
repnz
cmp
mov
or
push
cli
rdtsc
add
test
jb
pushl
clc
inc
jo
rdtsc
lds
mov
or
cmp
ss
fistl
mov
fildll
cs
push
jmp
add
adc
pop
and
and
adc
cmp
mov
sbb
sub
and
lods
or
xor
mov
mov
mov
jne
out
dec
mov
xchg
mov
pop
mov
imul
mov
add
loope
xor
pusha
push
je
push
scas
movl
cmc
lods
mov
ljmp
add
mov
add
lods
sbb
xor
jle
inc
outsb
fcmovne
dec
outsb
imul
mov
mov
jg
jb
je
insb
jbe
mov
ja
mov
adc
fsts
mov
movb
test
js
or
mov
cltd
in
mov
lds
cmc
lock
out
out
xor
in
adc
mov
inc
fstl
rclb
sub
and
mov
pop
add
sahf
ljmp
call
repz
ljmp
hlt
jg
icebp
fwait
repz
clc
jl
testb
add
pop
jp
inc
jns
jecxz
js
lret
mov
adc
mov
xchg
xor
pop
inc
mov
mov
mov
fildll
mov
out
int3
sbb
pop
pop
rcr
imul
inc
mov
push
ds
jge
adcb
jge
imul
fnsave
add
inc
inc
punpckhbw
dec
incb
popf
adc
xchg
out
add
mov
aad
fisttps
and
mov
lret
mov
mov
xor
add
sar
les
gs
in
pop
call
movsb
lret
mov
add
push
mov
jl
push
mov
dec
test
pop
xchg
scas
xchg
fstps
fists
int
and
add
hlt
cltd
leave
cld
jmp
in
imul
mov
mov
push
mov
rcr
imul
pop
mov
testb
fadd
or
mov
xorl
lock
loope
out
push
test
loopne
adc
push
xor
mov
pop
clc
mov
mov
flds
in
add
testb
cmc
adc
and
std
lcall
addb
mov
imul
adcb
push
push
sbb
inc
push
push
data16
subl
mov
clc
sub
into
pop
out
loope
push
in
lret
mov
mov
mov
clc
shl
pop
mov
lods
or
add
out
mov
mov
mov
fwait
ljmp
scas
sub
mov
xor
rclb
xlat
inc
cli
jl
push
mov
and
nop
int
int3
mov
scas
cltd
cli
std
mov
add
inc
mov
loop
sub
loop
push
mov
sub
sub
dec
mov
rcrl
mov
add
imul
into
push
cli
sub
hlt
mov
jge
xchg
insl
mov
sbb
in
scas
xlat
in
jbe
jbe
push
cmpsb
cs
scas
dec
iret
dec
pop
les
add
pop
pop
mov
mov
pop
or
mov
ss
or
jle
cli
jne
lds
mov
mov
int
sub
jb
xchg
sub
push
mov
int
lods
mov
bound
mov
ret
mov
add
sti
lea
decl
add
call
add
scas
int
std
or
mov
mov
sbb
push
fdivrs
cli
test
movsb
sti
mov
pop
in
mov
mov
lods
xchg
add
out
mov
dec
sub
rclb
mov
mov
ret
push
addr16
pop
adc
je
adc
push
in
pop
lods
lods
xchg
add
cmpsb
loope
stos
push
inc
mov
mov
push
lret
push
mov
arpl
stos
lahf
ret
fsubl
roll
sub
lods
popf
repnz
inc
lods
es
fildl
dec
push
mov
lods
mov
inc
jle
lods
push
or
add
pusha
mov
movsb
add
push
enter
addb
outsl
jmp
mov
push
mov
aas
jbe
sahf
enter
lcall
add
fisubrs
xor
add
push
mov
mov
iret
repnz
inc
arpl
mov
sub
movsl
mov
inc
fld
ds
lods
push
imul
add
pop
cmpb
lea
pop
jmp
lods
mov
movsl
int
clc
xchg
mov
mov
inc
call
aas
mov
test
orl
dec
pusha
insl
rolb
xor
jb
mov
and
sbb
push
cld
or
vucomisd
inc
add
jmp
dec
push
lret
pop
mov
rorb
and
push
into
fsts
mov
aaa
push
ds
push
in
add
mov
push
and
cli
pop
mov
adc
xchg
insb
sarb
ud0
aad
push
repnz
dec
and
add
mov
fs
sub
sti
xchg
cli
add
dec
pop
movsb
sti
fcompl
cmp
and
sbb
push
sub
and
dec
sub
jg
insl
push
mov
dec
cmpl
sub
xor
pop
cmp
cmpsb
pop
addl
ds
and
movsl
add
sub
xor
push
pushf
add
add
xchg
add
jmp
jmp
orl
jae
pop
sbb
imul
arpl
and
addr16
or
and
sub
xor
fisubl
xchg
pop
and
push
mov
xor
je
push
sbb
aaa
aam
push
fnsave
ret
sbb
push
orb
push
test
push
mov
xor
push
aam
cmp
xchg
push
pop
mov
xor
push
inc
or
nop
jbe
shrb
adc
adc
xor
sbb
aas
lods
or
es
adc
hlt
or
and
adc
xchg
sub
in
push
push
cmp
sbb
xchg
cmp
jbe
movsb
movsb
adc
add
add
jmp
sbb
or
adc
xor
lahf
pop
cmpb
pop
into
xchg
sahf
and
out
add
std
notl
divl
cmc
scas
or
inc
push
dec
dec
sahf
ljmp
cmpsb
repnz
daa
callw
cmp
inc
daa
sbb
lds
out
bt
aas
push
inc
jg
or
xor
inc
xchg
push
adc
lahf
js
jmp
mov
nopl
mov
pop
push
jmp
xchg
mov
mov
mov
jg
push
mov
daa
push
ficomps
xchg
xchg
add
xchg
cmovg
mov
jb
lock
inc
dec
pop
cli
add
stc
xchg
jle
dec
inc
xchg
arpl
bswap
cmp
aas
scas
xchg
adc
pmulhuw
fs
fwait
movups
xcrypt-ecb
cmpsl
leave
mov
jecxz
inc
fmull
fdivl
sbb
scas
std
jnp
jg
js
inc
cs
adc
cli
fstps
movsl
push
movsb
sub
pmulhuw
mov
sbb
stc
in
pop
adc
hlt
fs
fisubs
dec
jle
imul
stos
pop
cmovs
add
add
sub
inc
mov
movsl
movlps
pop
jg
jg
movsl
shlb
inc
push
mov
bswap
js
mov
xchg
sbb
push
lret
rcpps
mov
mov
jp
sub
push
insl
push
lahf
cmp
and
xchg
fwait
cmpsl
movaps
xor
cmc
mov
push
imul
jmp
push
xor
andb
jl
pop
xchg
push
adcl
je
jb
movsl
or
rdseed
mov
dec
cmovo
shlb
imul
dec
pop
cwtl
jmp
adc
sub
mov
lret
sub
pop
cmova
push
jb
subl
fstps
rorb
dec
cmovs
mov
pop
popf
hlt
cmp
or
test
sub
xchg
cmp
sbb
cltd
adc
lock
jg
cmp
icebp
jg
movsl
push
mov
push
xchg
psubq
test
pop
pop
mov
mov
xchg
cmp
push
push
sub
bswap
mov
adc
cmp
xchg
xchg
inc
shlb
dec
imul
rclb
push
rorb
imul
add
and
cmpsl
mov
push
xor
nop
xchg
leave
bswap
xchg
adc
pmulhuw
xchg
clc
jp
decb
rsqrtps
add
pushf
jno
movsl
test
inc
shlb
movsl
movlps
jb
push
xchg
pop
jg
mov
insl
push
mov
out
push
cmp
xchg
jns
sarb
movsl
cmp
sarb
movsl
cmp
sar
lahf
movsl
sub
xchg
jae
push
push
out
sub
dec
cmp
push
mov
dec
push
push
push
push
mov
mov
push
cmpsl
pavgw
btr
cmpsb
je
cmpsl
rdmsr
cmp
xor
mov
sub
in
rolb
sub
push
push
cld
scas
movsl
push
test
push
sete
sub
bswap
push
adc
pmulhw
push
add
jb
xchg
pushf
cmp
and
rcll
setbe
into
bound
pop
movsl
dec
cli
cmp
add
xchg
pushf
jno
inc
lock
mov
lock
bswap
lock
pmulhuw
lock
mov
sub
out
xor
gs
sarl
sete
jg
cltd
cmp
inc
cmp
pushf
push
mov
push
cmp
sete
aas
xchg
int3
cmpsb
pop
mov
pop
xor
sub
sub
pushf
jno
inc
movsl
cmp
lahf
ficompl
add
andl
mov
jg
movsl
xchg
mov
xor
push
fsubrs
out
mov
rorb
hlt
ret
mov
sub
xchg
aad
pcmpgtw
movsl
add
jae
mov
bswap
sub
lret
or
push
pop
movsl
sbb
adc
das
out
sub
sbb
addr16
mov
in
addr16
pushf
bswap
xchg
loopne
jb
sarb
push
shlb
jb
popl
pushf
bswap
xchg
fisttpll
push
lea
je
jb
xchg
or
ljmp
xchg
stc
push
xchg
call
and
jl
mov
imul
cmove
xor
lock
or
push
movsl
push
movsl
push
seto
or
mov
in
xchg
test
jae
pop
sbb
cmc
cltd
mov
push
push
pop
pop
test
sub
push
sub
push
outsb
jg
or
movsl
rolb
cmp
inc
ret
rol
es
push
mov
xchg
dec
sub
cmpsb
xchg
cmc
stc
push
sbb
and
push
inc
cs
stc
push
push
xchg
push
test
mov
xchg
and
ss
inc
ds
enter
push
and
mov
cmp
push
inc
movsl
and
mov
dec
sub
push
pop
sub
js
inc
adc
dec
pop
aam
cwtl
cmp
mov
pop
inc
cmp
test
jp
movsl
cmp
xchg
jl
rdmsr
js
xchg
cmovge
leave
add
ja
xchg
seto
push
push
setl
dec
mov
aad
leave
pop
cmp
dec
dec
add
push
paddd
cmc
sub
pushf
bswap
lock
jae
lock
leave
pop
mov
rcrl
add
push
add
push
xchg
js
mov
push
ret
jecxz
cli
call
xchg
push
setg
mov
dec
pmulhw
push
out
jl
cmovo
adc
stos
movsl
xchg
xor
push
inc
loope
cmpsl
mov
sub
cmpsb
cmovns
std
xlat
clc
push
inc
pop
movsl
add
mov
xchg
dec
pop
add
sbb
sbb
stc
jle
dec
push
inc
xchg
adc
push
lods
seto
xchg
adc
pmulhw
ja
inc
or
mov
cmp
movsb
rorl
jnp
std
push
rcrb
pop
add
xchg
dec
sub
sub
pop
jecxz
xor
movsl
push
mov
dec
mov
nop
ret
sub
sub
in
xchg
rorb
into
inc
xchg
dec
cmovo
pop
dec
mulps
sub
pop
adc
and
loope
xor
fwait
pop
adc
pop
sarl
cmovae
push
sub
pmulhuw
dec
sub
negb
and
movsl
setns
gs
cmp
xchg
mov
js
pop
fbstp
xchg
xchg
jg
mov
nop
loope
and
imul
gs
lock
sbbb
mov
adc
dec
cmp
xchg
or
mov
cmp
xchg
mov
mov
or
lret
adc
pmulhw
push
push
sub
bswap
cmp
inc
add
cmovno
into
xchg
mov
sub
int
les
loope
xchg
dec
movmskps
sub
pop
sub
sbb
jbe
pop
mov
jg
mov
dec
pop
mov
sub
adc
pmulhuw
mov
cvtps2pd
nop
xchg
dec
idiv
adc
idiv
adc
shr
adc
test
inc
rolb
in
ja
movsb
push
movsl
bsr
rclb
cld
mov
insb
pop
cmp
test
cmp
cmp
cmp
sarb
cmovb
imul
cld
aaa
sub
push
iret
jns
sti
adc
fstps
shl
dec
push
jb
mov
jno
dec
push
lock
sete
mov
aas
cmp
xlat
stc
push
sar
imul
popf
push
pop
rclb
setns
andps
arpl
push
mov
aas
decl
aaa
adc
inc
lfs
mov
hlt
sub
aas
lock
jbe
pop
jg
push
loop
rorl
jns
pop
imul
inc
dec
sbb
add
pushf
bswap
shlb
popf
outsl
scas
push
sub
push
sbb
mov
sub
setl
cs
mov
pop
push
clc
xchg
mov
cmp
nop
movsl
sub
bswap
mov
cmpsl
mov
cli
gs
pop
jg
test
add
mov
lock
bswap
lock
mov
mov
mulps
mov
out
repnz
inc
mov
dec
rdmsr
or
nop
mov
idiv
pop
push
insl
psubusw
mov
mov
sub
mov
movups
push
in
mov
and
mov
enter
hlt
mov
sub
jo
rorb
lock
cmp
gs
sub
mov
inc
add
sarl
sub
pcmpgtb
movd
pop
scas
sub
sbb
sub
shld
rclb
cmp
bswap
xchg
push
jno
xor
in
lods
movups
jne
cvtps2pd
mov
divps
inc
cmpsb
loope
sub
push
js
mov
sbb
lods
adc
shld
or
inc
sahf
adc
mov
jo
push
or
xlat
orb
mov
movsl
shld
or
pavgw
add
mov
jg
cltd
jns
sub
and
scas
divps
sub
jnp
decl
push
mov
add
sahf
mov
in
cmp
pop
pop
mov
fs
into
adc
push
and
enter
jecxz
and
jmp
sbb
pop
xchg
test
xchg
lret
sqrtps
and
dec
scas
paddb
pop
scas
add
fistpll
adc
out
call
inc
cmp
and
inc
dec
push
scas
push
or
xchg
shrl
mov
cmp
cld
mulb
outsl
popf
testb
push
mulps
sbb
movsl
aas
int
push
sbb
inc
xchg
cmpsl
rdmsr
js
sbb
movsl
push
ret
inc
push
pop
pushf
pop
pop
icebp
dec
decb
daa
movsl
mov
movsl
gs
sub
cmp
mov
test
inc
sahf
sbb
xchg
or
unpckhps
dec
mov
add
and
bswap
add
pop
xchg
imull
inc
psrlw
add
ja
sub
pushf
jno
dec
xchg
sub
xchg
and
test
pop
mov
or
pop
into
aas
clc
sub
cwtl
jmp
outsb
aad
gs
add
aam
test
ret
adc
in
mov
fs
daa
pop
in
rorb
pop
adc
sub
cmc
sub
out
sbbl
sahf
sbbb
xchg
ret
ret
test
mov
mov
xchg
pandn
aam
pmulhuw
andl
fimull
xchg
movups
or
mov
mov
push
pop
adc
scas
mov
outsb
jns
sbb
and
dec
mov
push
dec
pcmpgtb
cmp
out
inc
sbb
and
pfacc
sub
and
dec
lock
push
xchg
movaps
mov
lds
loope
xchg
rcrb
xchg
dec
hlt
xchg
seta
pop
int3
push
and
mov
push
cmp
and
jmp
orb
ss
cmp
mov
push
xchg
scas
jb
lock
cmp
add
sbb
rorl
mov
or
pop
dec
out
mov
pop
xchg
cwtl
push
out
add
pop
xchg
jno
aas
sbb
hlt
cmp
movaps
sub
xchg
or
pop
dec
divps
aad
in
aad
cmovo
and
mov
push
bswap
add
sub
adc
lfs
xchg
push
add
add
xchg
in
cmovo
lock
jb
sub
cmp
inc
sub
std
out
mov
pop
sbb
movsl
mov
insb
xchg
rcl
mov
push
outsb
seto
ret
pmulhuw
xchg
xor
jb
xchg
int3
cmp
inc
cmp
xor
and
xchg
and
out
lock
out
repnz
pop
test
lock
jl
sub
ret
adc
pmulhuw
ret
mov
cwtl
xchg
push
test
nop
shrb
sbb
enter
pmulhuw
rorb
jb
shl
cmp
cli
jns
sahf
stos
xchg
adc
in
loope
add
inc
jl
mov
aas
test
jbe
movaps
push
or
mov
inc
cmp
loopne
aam
loopne
imul
inc
add
adc
pmulhw
dec
leave
popa
sbb
pop
clc
cmpsl
nop
adc
dec
pop
cmpsl
movaps
sete
pop
bswap
dec
adc
pmulhw
dec
mov
pop
loope
and
inc
loope
cmpsl
bound
jno
dec
or
and
out
lock
mov
sbb
sbb
pop
call
lods
cmp
inc
sbb
sbb
sbb
jbe
or
in
sub
xchg
stc
push
mov
sarl
punpckhdq
xor
push
xchg
out
adc
pmulhuw
shlb
push
shlb
bswap
pop
rolb
sbb
xchg
mov
add
add
ret
pushf
jno
inc
ret
repnz
shld
mov
dec
cmovo
xchg
xchg
jno
inc
movsl
pushf
jno
inc
movsl
mov
mov
push
dec
sete
in
leave
pop
rolb
adc
xlat
or
stos
add
jnp
and
in
xchg
jo
loopne
shld
ret
xchg
cmovo
insl
pushf
pop
sub
dec
cmovo
sbb
mov
push
sbb
sbb
sbb
sbb
or
rcrb
sbb
add
pushf
movzwl
adc
and
mov
sbb
in
add
jo
sbb
push
sahf
push
adc
pmulhuw
lock
pop
jg
push
js
cwtl
js
mov
daa
add
jo
inc
cmpsl
rdmsr
js
pushf
bswap
js
jp
inc
or
cmovo
xchg
dec
into
rorl
jae
mov
out
lock
jmp
into
cltd
cmp
add
adc
pmulhw
addr16
decl
jae
shlb
pushf
movzwl
rcrb
shl
cmpsl
or
lock
and
adc
sbb
add
cmp
movaps
and
iret
lock
dec
pmulhuw
xchg
out
jb
xchg
jge
mov
adc
movaps
push
lods
seto
rcr
mov
jb
mov
adc
lss
lar
cmp
cvtdq2ps
push
int3
xchg
movzwl
xor
lret
add
add
fs
jno
dec
or
xchg
bswap
xchg
sub
cmp
fisubrs
bswap
mov
lea
cmp
daa
aam
push
adc
pmulhw
cmp
jb
cmp
cmp
inc
cmp
adc
pmulhuw
mov
add
lret
cli
jecxz
add
mov
push
cmovo
test
push
inc
setb
shrl
fmull
push
in
lock
add
add
aad
setne
add
add
cmovo
xor
lret
movsl
sub
lret
stc
lgs
les
cmp
xchg
mov
pmulhw
push
testb
sub
lea
lret
and
in
mov
push
cmp
ds
lds
orb
movsl
cld
sbb
lar
dec
movq
jg
xchg
cld
xchg
push
pmulhuw
ret
scas
add
add
fstpl
cmovo
or
mov
cmp
lret
rorb
mov
subb
and
loope
cmovo
cwtl
cmpsl
mov
and
hlt
lret
pop
fsts
setb
mov
inc
xchg
decb
out
push
xchg
setns
les
bswap
cli
pop
xor
mov
rolb
inc
sbb
sbb
sbb
sbb
add
cmovb
pushf
pop
sub
dec
cmovge
sub
enter
pmulhuw
sarb
add
add
stos
pushf
pop
cmp
cmovo
fisubl
jno
xchg
or
lock
aas
add
dec
iret
sub
bswap
rclb
pmulhuw
rolb
iret
popf
cmpsl
mov
push
xor
cltd
mov
dec
dec
arpl
sbb
sub
sub
xchg
seto
pop
idiv
call
pmulhuw
lar
xchg
loop
pushf
pop
shr
dec
cmovo
call
jns
cmp
add
loop
movmskps
jns
movaps
push
adc
nop
ret
sub
inc
adc
lds
jbe
cltd
rorb
icebp
cmp
xchg
lock
out
push
aam
nop
ljmp
imul
sub
add
in
sub
cvtps2pd
xor
fs
cmp
mov
push
clc
jl
push
pop
push
cs
arpl
cmpsl
incl
shrl
icebp
fisttpl
cmovo
xchg
push
mov
push
bswap
movsl
adc
pmulhuw
movsl
orl
sbb
xchg
sbb
push
cmp
mov
cmp
add
xchg
adc
lods
cmpsl
mov
push
inc
seto
push
mov
bswap
xchg
adc
pmulhuw
xchg
mov
cmp
dec
ret
pushf
bswap
pop
push
test
addr16
sub
mov
cmovo
into
cmpsl
mov
push
gs
sub
bswap
pop
adc
cpuid
dec
pop
cmc
cmp
add
ret
pushf
jno
inc
movsl
repnz
mov
push
mov
xchg
ja
and
enter
pmulhuw
wrmsr
mov
ret
shrl
sbb
mov
cmovo
dec
cmpsl
mov
push
in
nop
xchg
sub
enter
pmulhuw
xchg
inc
rolb
shl
cmp
rdtsc
mov
cmp
jg
xchg
cmpsl
divb
in
out
dec
and
cvtdq2ps
add
cvtps2pd
push
pushf
xchg
cvtps2pd
push
jp
push
lret
seto
ret
xchg
cli
pandn
pushf
xchg
pop
xchg
sub
bswap
pop
rolb
inc
aas
sub
jecxz
mov
push
pushf
jno
cmp
pop
xchg
rcll
push
rolb
cli
pop
enter
push
imul
push
mov
pcmpgtb
push
push
jg
pop
push
jmp
adc
pop
sub
scas
in
sbb
daa
out
or
cmp
movsb
mov
jg
lea
cmp
add
add
insb
cltd
cmpsl
dec
adc
lock
enter
addr16
stos
adc
pmulhuw
mov
imul
push
nop
test
jg
push
adcl
lods
bswap
ret
pop
inc
in
cld
xor
mov
mov
nop
xchg
fs
mov
jnp
pop
xchg
xorb
xchg
lgs
xor
inc
add
xchg
pop
adc
in
xchg
test
lock
pop
setle
test
push
scas
mov
sahf
push
scas
lret
and
out
lock
adc
pmulhuw
xchg
fwait
add
inc
out
lret
andl
repnz
rolb
fnstsw
and
mov
lock
pcmpgtd
cltd
js
dec
pcmpgtb
cmp
sbb
adcl
jg
orb
and
inc
mov
loopne
dec
fnstsw
inc
loopne
xor
cld
or
sub
bswap
js
movsl
movhlps
dec
mov
sub
bswap
fisubs
and
inc
or
cs
push
outsl
lock
int
ret
enter
cli
xchg
add
fwait
xchg
bswap
js
aas
js
into
mov
insb
pop
js
cmpsl
push
das
bound
bsr
push
sarb
push
inc
cs
xchg
cmpsl
mov
push
mov
cltd
rorb
pcmpgtw
in
punpcklbw
movsl
rsm
push
push
adc
cltd
lock
dec
pcmpgtb
inc
daa
test
lock
call
in
jnp
movsl
imul
xchg
cmp
outsb
xchg
or
add
popf
pushf
lock
mov
cmp
cmovns
enter
pmulhw
adc
cpuid
sub
and
sub
push
lcall
mov
push
cltd
xchg
sbb
in
xor
mov
movsl
std
sub
push
cmp
cld
sub
cvtdq2ps
mov
packssdw
lods
cmp
inc
xchg
pop
cld
mov
hlt
sbb
mov
jg
sub
fldt
pmulhw
push
push
dec
jo
movzwl
pavgw
cmpsl
add
add
insl
dec
pcmpgtb
sub
inc
push
jg
mov
xchg
shlb
sahf
fmuls
movsb
repz
out
dec
leave
push
jmp
sti
popf
int
adc
movzwl
adc
cmp
lret
jmp
inc
hlt
orb
mov
or
sbb
mov
xor
movsl
lss
sbb
adc
mov
fiaddl
rorl
test
sub
cmp
rcr
icebp
outsl
or
xchg
jns
fs
cmp
or
mov
inc
cld
fnstsw
inc
xchg
enter
idiv
adc
loope
xchg
pop
pushf
bswap
cmp
jns
add
adc
and
cmp
push
dec
rorb
test
mov
cmpsl
rdmsr
cmp
push
in
dec
push
incl
jecxz
std
add
incl
adc
cli
scas
mov
wrmsr
test
rsm
movsb
push
fmuls
adc
sbb
gs
push
cmp
xor
cmpsl
rdmsr
mov
pushf
cmpxchg
push
aad
xchg
or
insb
rsqrtps
push
add
inc
add
mov
insb
ja
inc
adc
je
push
mov
pop
or
mov
or
pop
pop
stc
arpl
cmp
roll
mov
in
das
sbb
les
inc
pop
dec
dec
and
and
mov
mov
sbb
test
sbb
dec
mov
repnz
pop
cmpsl
ret
fisubl
lods
cwtl
xchg
cwtl
adc
and
lds
and
insb
cli
test
ss
and
je
bound
sub
test
adc
sahf
push
and
inc
dec
icebp
adc
inc
pop
jnp
and
jb
fidivrs
inc
adc
sub
push
xchg
enter
scas
jb
xor
test
test
xchg
je
xor
sub
adc
or
mov
stc
rorl
push
mov
jle
outsl
das
ja
sbb
cmp
ja
es
rcrl
pop
data16
movsl
test
fcomi
dec
jg
movsb
scas
aad
xchg
add
mov
dec
outsb
sub
push
cmpsb
pop
jb
dec
xchg
xor
lods
movsb
adc
and
test
into
or
and
sbb
inc
or
lahf
sbb
aam
inc
lret
adc
enter
cmpsl
push
cwtl
or
jb
loope
xchg
sbb
push
adcb
mov
daa
scas
orb
inc
inc
and
bound
mov
jl
clc
inc
pop
mov
mov
scas
mov
mov
cmpsb
mov
xchg
mov
sarb
xchg
inc
test
cmp
xor
int3
mov
xchg
out
ret
sbb
or
xchg
cwtl
xchg
adc
push
sbb
sub
enter
pushf
or
out
pop
test
mov
filds
and
push
gs
adc
adc
outsl
out
test
xchg
into
xchg
adc
adcb
out
or
or
jae
xchg
xor
mov
sub
popa
rcll
cld
pushl
enter
mov
call
dec
imull
push
jl
push
push
rcrl
es
push
movsb
lret
jge
pop
push
loope
sbb
movsb
es
or
loop
and
jge
inc
push
mov
adc
es
cmc
and
aam
mov
nop
adc
cs
sub
cs
jmp
or
ss
pop
test
push
inc
adc
notl
and
xchg
ljmp
add
jmp
xchg
jl
movsb
push
or
pop
mov
nop
push
adc
dec
sub
mov
push
pop
es
push
lods
stc
movsl
adc
pop
in
gs
or
test
xlat
cwtd
daa
push
lret
adc
es
mov
pop
cmp
sub
adc
test
sub
mov
inc
push
jbe
jle
fs
xchg
cmp
test
insb
push
jae
mov
push
js
sub
jb
mov
xchg
adc
ds
pop
xchg
cmpsb
arpl
mov
push
adc
popf
sub
mov
adc
adc
sahf
sbb
mov
lods
sahf
stos
loope
cmpsb
push
adc
adc
movsl
cwtl
and
mov
adc
pop
mov
and
pop
mov
js
sbb
xchg
push
and
scas
pop
cmp
rcrl
cmp
mov
shll
movsl
es
lock
in
pop
loop
jns
push
sbb
inc
notl
push
into
cmp
movsl
adc
push
pop
cmp
mov
push
mov
adc
adc
sub
lods
mov
adc
ret
inc
push
fildl
adc
out
cmp
test
mov
mov
pop
scas
testb
add
mov
stos
push
pushf
decb
mov
add
add
scas
inc
or
cmp
adc
test
mov
sbb
in
mov
xchg
sbb
loop
sbb
mov
inc
lds
fs
cmpsl
sub
sub
adc
xor
in
cmp
jnp
and
cmp
inc
xchg
scas
xchg
lock
aam
jns
outsb
xor
xchg
call
and
sub
movsb
adc
mov
movsl
mov
test
dec
sub
cltd
inc
add
mov
push
or
mov
lahf
mov
push
sbb
dec
xchg
and
push
and
flds
lcall
js
and
or
bound
cmp
or
insl
cltd
cltd
pop
inc
insl
test
dec
mov
gs
mov
shll
lcall
cmp
test
push
jge
les
sub
dec
test
rcll
lea
sub
in
pop
mov
xchg
test
xchg
inc
imul
gs
adc
lods
adc
test
test
cmp
lods
mov
cmp
mov
out
fdivl
mov
in
mov
mov
mov
lds
test
gs
and
scas
fldcw
or
mov
orl
aad
aas
sbb
sbb
cmp
outsl
fldl
dec
mov
fisttpll
mov
daa
push
sub
in
inc
inc
xor
adc
adcb
mov
cmc
dec
test
repnz
repnz
mov
mov
std
sub
lods
add
dec
xchg
les
test
test
xchg
or
daa
mov
or
cmp
mov
das
sbb
lods
pushf
dec
sbb
lods
fldenv
mov
sbb
mov
adc
stc
ljmp
mov
es
pop
inc
xor
stos
push
leave
xor
inc
cs
mov
mov
adc
and
cmp
push
cmpsl
inc
sub
mov
xchg
roll
adc
and
out
nop
mov
dec
xchg
scas
in
es
or
dec
push
sub
push
pop
in
jne
sub
fimuls
sbb
dec
lods
outsl
push
fs
sbb
mov
pusha
fs
adc
adcb
or
jb
mov
jns
push
mov
adc
dec
mov
adc
jns
test
in
sub
adc
mov
roll
test
push
and
cltd
mov
nop
pop
xor
sbb
pushf
lahf
adc
decb
movsb
iret
rorl
sahf
fsubs
lods
test
dec
hlt
dec
lods
fucomp
nop
daa
mov
cwtl
pop
push
test
inc
mov
pop
mov
mov
jns
dec
xchg
movsb
dec
les
push
sub
int3
adc
fisttpll
lods
ljmp
jl
dec
test
push
push
and
mov
and
pop
loope
adc
push
mov
rclb
into
xor
cld
push
clc
or
jae
cld
mov
pop
add
adc
test
and
add
or
or
sub
in
cmp
adc
dec
fdivl
and
sub
inc
adc
scas
loop
sbb
push
into
sub
adc
dec
and
and
shrb
adc
in
lods
repnz
gs
cwtl
xchg
pop
xor
cs
xor
push
daa
js
xchg
call
stc
ljmp
xor
xchg
dec
mov
mov
fcoml
les
dec
hlt
dec
jnp
sub
inc
into
jbe
inc
insb
push
pop
cs
sub
push
test
pop
scas
adc
mov
and
mov
outsl
mov
test
pusha
test
or
imul
adc
adc
jno
jae
add
rcll
jnp
arpl
sahf
mov
or
movsb
xchg
sbb
andl
or
pop
adc
and
nop
movsl
adc
mov
cmpsl
out
and
popf
fwait
pop
lcall
add
repz
sub
cmp
das
fwait
adc
rcrl
mov
sub
xor
mov
lret
or
enter
stos
push
push
xchg
dec
adc
adc
sbb
scas
sahf
or
push
inc
bound
inc
push
cmp
adc
fdivs
test
roll
ret
dec
sahf
mov
dec
ret
sub
repz
push
push
inc
lret
sub
push
fs
cmp
lcall
pop
test
shrl
adc
jmp
cmp
aam
mov
sbb
imul
lds
repnz
mov
and
push
cmp
cs
in
dec
repz
inc
mov
mov
adc
mov
sti
cmp
jbe
jns
push
fildl
movsl
test
or
insb
or
or
inc
int3
and
clc
mov
fcompl
mov
pushf
mov
mov
mov
push
and
pop
and
xchg
std
mov
xor
fs
enter
nop
push
mov
cs
cmp
push
das
mov
sti
inc
pop
inc
push
inc
dec
xchg
sbb
mov
pop
and
push
enter
adc
test
push
pop
dec
les
mov
mov
movsb
mov
adc
mov
popa
imulb
adc
cmp
xchg
xchg
ja
ret
stc
gs
adc
cmp
or
xor
shll
mov
sbb
je
pushw
adc
xor
mov
ljmp
xchg
test
push
xchg
xchg
fldt
lds
adc
rclb
lcall
lret
dec
adc
jle
push
xchg
jb
sbb
stos
or
xchg
pop
repnz
pop
jg
mov
xor
mov
pop
adc
mov
lods
adc
mov
arpl
lods
rorb
cmp
ret
sarb
in
out
dec
aam
jle
cwtl
outsl
hlt
adc
mov
pop
or
lret
mov
pop
cmpsb
scas
mov
adc
xchg
lcall
add
mov
adc
loop
mov
cmp
loop
cltd
enter
imul
dec
ljmp
ljmp
cld
bnd
mov
jl
cmp
xchg
cltd
mov
push
and
push
out
scas
adc
ret
jp
inc
adc
lods
xchg
cmpsb
test
shl
lret
pop
sbb
in
into
and
lods
push
sub
adc
mov
rclb
xchg
xor
test
pop
xor
xchg
adc
mov
adc
cmp
ret
xchg
testl
mov
dec
negl
scas
xchg
sbb
sub
pop
mov
push
sahf
dec
test
lcall
dec
pop
fldt
sub
pop
push
push
and
gs
jecxz
adc
imul
dec
jge
push
imul
mov
stos
xor
pop
scas
sub
lea
mov
cmpsb
sarl
jb
lahf
stos
or
push
jg
in
adc
mov
mov
les
out
sbb
or
mov
das
mov
lods
adc
sub
adc
mov
or
dec
cltd
fstpl
in
test
es
test
mov
outsb
test
sub
scas
std
sub
and
mov
xchg
std
push
mov
adc
sbb
int
push
mov
mov
cs
call
or
pop
rorl
cltd
rorl
out
mov
sub
leave
xor
xchg
popf
xor
rorb
pop
xchg
inc
and
adc
xchg
pusha
mov
fstps
loope
bound
adc
and
jmp
bound
icebp
push
out
stc
test
stc
adc
mov
jo
add
jbe
addr16
or
aas
aam
pop
or
add
mov
inc
and
sub
adc
ja
sbb
mov
sbb
pop
mov
cwtl
sbb
lret
mov
dec
and
sub
loope
pop
xchg
stos
mov
sub
mov
push
es
xor
cld
xor
cmpsb
cmp
push
pop
test
and
mov
leave
cmp
fs
xor
inc
and
inc
sub
das
inc
dec
mov
dec
bound
int
mov
dec
sub
sub
pop
xor
cmp
and
jb
mov
scas
pusha
mov
pop
cwtl
pusha
xchg
out
xchg
das
enter
push
and
cmp
inc
xchg
sub
test
bound
mov
test
pop
bound
xchg
jne
jo
mov
push
sbbb
test
dec
popa
and
push
repz
adc
mov
enter
mov
std
lods
or
add
cmp
and
in
add
push
cwtl
sub
es
int3
sarl
sub
cwtl
jecxz
cmp
mov
stos
mov
cmp
or
test
cld
jnp
mov
adc
into
mov
aam
rolb
jb
mov
es
adc
xchg
mov
enter
or
cmc
shrb
rorb
jl
jbe
adc
stos
inc
push
rclb
inc
daa
in
sarb
movsl
adc
fmul
rol
arpl
sub
fdivs
jae
cwtl
sti
fstpl
mov
loopne
daa
movsb
jae
sahf
call
mov
push
mov
mov
addr16
sub
lock
push
es
lock
pop
inc
out
inc
clc
lret
mov
push
jp
clc
fsubl
iret
in
sub
js
lret
movsb
adc
cmp
xchg
sbb
cmpps
adc
cmpb
unpckhps
mov
andps
out
push
or
daa
xor
inc
push
pop
das
jne
or
add
sub
and
adc
sbb
inc
and
inc
adc
imul
fsubs
cmp
jb
xchg
xor
popa
cmpsl
es
xcrypt-ofb
cmpsl
lods
int
es
mov
push
pop
adc
lahf
insb
and
push
test
mov
adc
rol
sub
adc
daa
xor
lods
dec
adc
and
les
ja
push
data16
push
es
push
test
in
jg
sbb
or
pop
xchg
xor
inc
xchg
testl
xor
dec
popl
arpl
lods
mov
gs
shrb
adc
negl
cmp
pop
cmp
pop
sbb
movsb
ret
jge
add
inc
andnps
push
adc
cmpsl
sub
in
outsb
scas
xchg
pusha
mov
push
xchg
jmp
mov
push
inc
je
and
push
mov
xchg
push
mov
mov
mov
push
shll
xor
mov
int
leave
mov
mov
sub
cwtl
dec
jl
push
add
lods
xchg
clc
pop
lods
les
mov
pop
iret
lcall
adc
cmp
ret
ficomps
adc
stos
mov
pop
flds
sbb
push
xor
jl
clc
out
out
pop
nop
xor
inc
lods
push
pop
adc
scas
or
mov
adc
xchg
cmp
mov
divl
mov
lcall
adc
out
push
pop
adc
adc
dec
inc
xchg
mov
xchg
mov
adc
cmpsb
adc
push
push
adc
mov
adc
push
sub
sub
adc
mov
test
es
push
pop
cs
mov
lds
mov
inc
les
dec
fdivrs
scas
inc
dec
sahf
int3
pop
icebp
push
ss
and
ds
in
je
sahf
adc
mov
push
add
jae
and
xor
push
xchg
dec
shrd
and
rolb
lahf
ret
push
mov
xor
pmullw
push
jle
data16
mov
enter
inc
and
in
bound
inc
mov
movsl
jbe
mov
es
ret
int3
cltd
lods
lods
out
adc
ljmp
popl
mov
cmp
ret
cmp
fdivs
push
xchg
adc
and
int3
mov
mov
dec
or
into
jg
lods
movsb
inc
cmpsb
mov
movsb
sub
scas
lods
pop
jmp
lods
aam
mov
add
sub
gs
mov
or
inc
nop
lods
push
into
or
ljmp
test
cmp
lcall
push
test
sub
adc
fisubrs
cmp
cmp
push
scas
out
cmp
iret
enter
dec
loope
testb
fwait
pop
inc
rcl
mov
pop
adc
sub
adc
add
mov
add
sub
inc
or
les
adc
les
and
mov
movsb
sub
test
sub
enter
inc
xor
les
lods
gs
inc
mov
inc
or
mov
dec
lods
jo
dec
mov
push
or
cli
push
sub
es
lods
dec
inc
pop
mov
pop
bound
in
or
or
jae
ss
mov
mov
inc
lahf
and
stc
test
mov
pop
and
pop
rorb
push
test
and
xor
push
nop
mov
mov
pushf
xor
lea
cmp
lods
in
mov
dec
xchg
cmp
ret
push
mov
scas
call
popa
pop
sub
sbb
cmp
test
inc
popf
rcrl
push
movsl
es
shll
xchg
es
movsb
out
lret
pop
jge
mov
xor
adc
mov
scas
loop
sbb
les
mov
sbb
mov
lds
and
lds
es
and
or
xchg
int
sti
ljmp
inc
and
or
push
sub
and
in
sub
and
mov
test
adc
adc
stos
pop
sar
mov
rcrl
add
adc
pop
out
or
dec
insb
outsb
mov
adc
ret
adc
out
mov
es
sbb
push
or
push
sub
adc
pushf
and
or
test
sub
sub
push
lahf
xor
les
xor
in
sub
adc
jno
xor
and
cwtl
jge
lods
mov
inc
es
call
inc
dec
pop
adc
cltd
addr16
or
mov
adc
jns
push
movsb
pop
mov
fs
cli
popa
xor
pop
sub
inc
fs
lcall
insb
adc
cmp
rcll
je
cwtl
adc
outsb
jl
les
adc
test
enter
adc
out
pop
stc
sbb
test
sub
mov
or
bound
sub
das
pushf
adc
popf
mov
adc
addr16
push
movsb
cmp
cmpsb
sub
xchg
popa
mov
sub
mov
lods
sbb
mov
out
xchg
push
in
stos
adc
mov
test
mov
mov
or
stos
inc
xchg
adc
les
les
sub
adc
pop
adc
lret
push
mov
aam
ljmp
lcall
testl
sbb
rorb
dec
xchg
fdivl
lods
adc
cwtl
push
add
fdivrs
cmpsl
jl
mov
inc
inc
inc
test
adc
test
hlt
pop
adc
xchg
mov
cmp
hlt
xchg
mov
inc
adc
xchg
es
add
push
pop
adc
or
scas
jb
bound
int3
insb
ss
adc
bound
call
cmp
and
mov
lods
or
adc
insl
popf
sub
cmpsb
cs
mov
push
sub
sub
cwtl
adc
sub
mov
xor
enter
dec
cwtl
les
sub
and
les
cmpsl
adc
nop
dec
adc
dec
adc
jae
xor
xor
cmpsb
adc
in
bound
push
and
pop
xor
sbb
inc
pop
mov
pop
cmp
test
inc
arpl
mov
imul
jb
cmp
jae
cmp
adc
test
test
dec
jnp
lods
repnz
jnp
xchg
adc
subl
push
mov
in
mov
fisttpll
mov
dec
or
xchg
xchg
or
add
fwait
jl
faddl
xchg
add
sbbb
mov
imul
dec
stos
cmp
test
pop
lahf
mov
je
aam
movsl
cwtl
bound
mov
imul
inc
cmc
sbb
xchg
mov
add
ret
mov
mov
xchg
inc
push
repnz
mov
shrl
adc
hlt
fcoms
inc
shll
xor
cmp
xchg
jecxz
push
sub
adc
xor
push
jmp
sub
cmp
adc
scas
cmpsb
jle
jno
fs
addr16
sub
sahf
mov
repz
mov
das
sti
notl
fs
pop
cltd
sti
xchg
add
mov
adc
scas
stos
adc
adc
test
push
adc
push
and
ficoml
cmp
scas
xchg
and
mov
sbb
push
xor
rclb
sub
dec
adc
dec
push
fcoms
pushf
loope
adc
notl
dec
xor
cmp
cmp
clc
mov
test
inc
adc
fadds
xor
or
push
adc
jae
inc
mov
or
sub
lds
lret
sti
lret
inc
push
adc
ss
jb
push
and
jb
push
sub
cmp
repz
mov
adc
aam
mov
push
mov
lret
push
and
or
jae
mov
in
inc
repz
jb
jae
jo
push
cld
adc
xchg
enter
es
adc
mov
in
inc
mov
sub
mov
ret
sti
ret
aam
inc
into
add
lret
lds
shll
adc
push
rcl
mov
lea
test
adcl
cwtl
sub
loop
leave
gs
sub
or
stc
sti
dec
adc
pushf
repnz
cwtl
icebp
repnz
in
fsub
cli
scas
jb
sbb
test
inc
add
sub
or
dec
clc
mov
scas
adc
lea
sub
adc
pop
cs
and
and
sub
jns
push
lret
and
mov
sub
cmp
in
and
xchg
inc
es
sub
and
jo
dec
xchg
fstl
dec
in
push
cltd
dec
pop
and
mov
cmp
dec
mov
and
daa
pop
xor
mov
and
test
jns
and
push
mov
pop
or
stos
push
sub
es
mov
daa
push
xchg
test
mov
sub
adc
mov
sbb
mov
cmp
or
mov
cmp
jae
push
test
je
mov
pop
inc
adc
sarl
test
push
roll
mov
xchg
adc
xor
pop
adc
mov
mov
flds
lret
push
sub
loope
pop
xor
xchg
dec
push
bnd
adc
aam
push
jl
sahf
call
imul
into
es
es
mov
xchg
jmp
out
cmpsb
daa
out
jg
or
push
sbb
hlt
adc
and
push
in
adc
pop
test
sub
sbb
and
bound
dec
imull
dec
xlat
and
dec
and
dec
cmp
adc
out
lds
and
jp
push
sub
loop
xor
adc
mov
lds
push
and
cmpsb
sbb
dec
xchg
xor
xor
cs
lds
daa
test
fstpl
cmp
pop
adc
cld
adc
stos
adc
jecxz
test
pop
push
adc
jnp
scas
cmpsb
into
sbb
or
jo
shlb
roll
dec
sbb
mov
es
and
les
sub
mov
adc
mov
dec
clc
cmove
mov
sub
pop
in
xor
adc
fcoml
or
cwtl
mov
es
dec
loop
mov
mov
je
fs
push
mov
sbb
test
and
sbb
mov
dec
popl
cmpsl
adc
ret
adc
sub
hlt
sub
mov
dec
das
push
mov
sub
sbb
cmpsb
mov
sub
shrb
fmull
sub
push
scas
adc
sub
xor
sbb
pushf
xchg
into
cmpsb
or
loopne
sub
mov
loopne
or
rclb
and
in
popa
adc
push
inc
dec
adc
sub
push
adc
incb
pop
es
rclb
test
clc
stos
sub
xchg
and
adc
mov
inc
mov
cltd
mov
mov
enter
sarl
and
adc
test
jg
and
stos
out
es
cmp
inc
sbb
inc
mov
xchg
es
cmpsb
adc
sahf
cld
arpl
and
xchg
cmp
mov
cmp
push
mov
adc
out
in
es
sbb
aas
pop
or
sbb
inc
inc
or
lds
adc
xchg
inc
cmp
mov
pop
xchg
mov
stos
pop
adc
pusha
es
jle
cmp
daa
scas
nop
dec
xchg
insb
jle
push
cmp
sub
adc
inc
jl
ljmp
pop
mov
push
outsl
pop
jb
test
repnz
sbb
movsl
test
or
sbb
bound
fstpt
out
es
insl
clc
movb
jmp
cmp
scas
icebp
inc
pop
jb
xor
adc
cwtl
pusha
xchg
inc
bound
xchg
scas
dec
enter
or
les
fnsave
in
lahf
mov
sub
cmp
pushw
inc
adc
into
sub
inc
scas
movsb
movsb
adc
and
sub
or
je
out
and
pop
addl
pop
mov
inc
push
sub
cmpsl
movl
mov
push
sbb
iret
mov
nop
and
mov
pop
sbb
xlat
gs
or
neg
cmp
adc
cmp
out
sub
pop
aam
es
adc
dec
push
and
inc
add
jb
dec
std
fdivs
cltd
pusha
pop
pushf
imull
adc
pop
out
sub
mov
scas
push
mov
push
push
pop
bnd
mov
cmpsb
into
mov
push
cltd
daa
dec
jno
sbb
fbstp
cltd
mov
popf
push
fmuls
test
shrl
pusha
stos
into
icebp
fimull
pop
jb
xor
out
push
pop
sub
cmp
mov
repz
inc
adc
sub
or
add
cwtl
in
push
mov
pop
les
mov
scas
je
out
mov
lods
cmc
icebp
pop
cs
daa
in
mov
pop
adc
in
loop
shll
ss
idivb
stc
rorl
add
pop
jl
clc
cmpb
fistpl
inc
dec
pop
fbld
jl
pop
movsl
adc
dec
mov
pop
and
bound
mov
fisttpll
lcall
iret
and
and
pop
mov
pop
mov
or
adc
sub
icebp
adc
sbb
pushw
dec
sbb
fistl
adc
loope
mov
dec
adc
pop
or
xchg
outsb
adc
fdivp
dec
fimull
scas
mov
adc
jbe
mov
sbb
sahf
nop
xor
push
push
jle
pop
repnz
out
roll
dec
xor
scas
lret
test
sub
jmp
pop
mov
pop
repz
cmp
xchg
push
mov
enter
ja
inc
pop
enter
insb
pop
test
ret
pop
adc
cmpsb
test
cmpsb
xchg
test
imul
xor
jne
movsb
mov
fucomip
adc
xchg
xchg
into
sbb
mov
inc
es
addb
cmpsl
adc
sahf
movsb
adc
enter
cmp
out
test
pop
mov
push
mov
adc
loop
xor
xchg
mov
mov
inc
sbb
out
lock
out
and
daa
stos
mov
pop
mov
cmp
xchg
test
out
cmp
test
loop
notb
movsl
es
mov
es
cmp
push
add
adc
adc
cmp
adc
or
rorb
adc
pop
adc
sbb
adc
and
and
mov
adc
sub
fisubl
mov
dec
mov
sbb
jb
jae
or
xor
into
fs
or
inc
cmp
mov
push
mov
inc
and
hlt
nop
mov
sbb
lret
mov
push
lds
push
fisttps
andb
pop
push
cld
xchg
xchg
mov
mov
stc
jnp
call
xchg
cmp
xchg
and
out
lock
ja
ljmp
mov
mov
pop
pop
inc
jne
loop
fisubl
jne
push
cltd
and
cmp
jge
cmp
or
xor
test
push
push
lea
and
xchg
mov
xchg
test
adc
dec
mov
xchg
xor
xor
or
inc
movsl
enter
sub
loop
lods
gs
sbb
adc
jle
xor
cmpsb
cs
sub
mov
adc
or
cmp
sbb
scas
daa
cltd
xor
and
lds
sub
push
push
xchg
fmuls
mov
mov
sub
sar
in
sub
push
push
mov
cmp
loop
mov
bound
or
mov
adc
adc
ret
adc
test
or
adc
fsub
add
stos
gs
sub
adc
cld
adc
and
imul
sbb
sub
mov
xchg
mov
adc
and
lods
push
push
and
mov
sub
adc
sub
xchg
push
xor
enter
lock
cltd
lods
and
es
cwtl
and
flds
es
dec
dec
push
sub
dec
es
push
xchg
rcll
pop
cmp
jl
sub
shll
push
inc
movsl
test
fs
sub
ss
loop
xchg
or
popa
cmp
je
sbb
adc
mov
lods
xor
stos
mov
test
adc
test
lods
jg
mov
hlt
mov
inc
popf
xchg
inc
or
xchg
mov
cwtl
repz
adc
sub
xor
xchg
cwtl
xchg
sbb
test
dec
mov
mov
push
mov
push
mov
lret
sarb
mov
out
int3
test
adc
sub
lods
adcb
mov
fcompl
adc
scas
in
in
and
sub
sbb
pop
cmp
nop
in
sub
adc
jno
xor
mov
cld
pop
es
cld
stos
lods
fists
adc
cmp
jo
ret
adc
loope
adc
and
jo
sbb
movsl
mov
push
lods
and
mov
icebp
mov
xor
cmp
xor
push
sbb
movsl
cwtl
bound
cmp
inc
mov
insl
inc
scas
mov
inc
dec
sti
lret
adc
loope
push
or
in
inc
mov
mov
and
jl
cltd
push
pop
les
arpl
xchg
arpl
xor
fsubrs
push
sub
jae
push
push
imul
cltd
mov
jnp
mov
es
adc
or
sub
adc
xchg
adc
fmuls
in
adc
or
repnz
adc
stos
cwtl
lods
pop
pop
mov
sbb
pop
mov
push
leave
adc
mov
mov
cmp
pop
sub
and
jo
lret
scas
dec
mov
and
dec
rcll
pop
fldt
xor
mov
jecxz
adc
es
insl
jmp
adc
repz
repz
sti
jl
movsb
test
sbb
adc
inc
movsb
les
inc
or
jg
push
adc
sub
push
lock
push
mov
sbb
pop
cmpsb
xchg
pop
adc
pop
sub
mov
adc
and
xchg
movsb
push
sub
cmp
dec
clc
inc
inc
mov
jno
and
mov
xchg
adc
and
test
sbb
dec
adc
jno
or
mov
sbb
mov
push
pushl
shll
jb
pop
and
jb
bnd
jl
or
mov
sub
jnp
push
cmpb
push
mov
test
les
xchg
mov
mov
mov
lcall
bound
mov
push
sub
stos
adc
mov
and
dec
inc
mov
xor
int3
bound
xchg
mov
mov
pop
ret
ret
mov
adc
in
sbb
lret
add
sarb
les
fisubl
icebp
lret
pusha
mov
loop
fdivl
jg
ljmp
push
adc
repnz
jno
test
dec
cli
lret
xchg
mov
or
sub
push
js
sub
repnz
or
loope
sbb
enter
sbb
je
xchg
and
fcomps
sub
ret
xchg
testl
mov
jno
adc
jo
dec
test
mov
es
push
pusha
push
sub
pop
scas
adc
ret
adc
fcoms
imul
je
pop
jno
xchg
pop
jno
jb
sub
jns
out
xlat
sbbl
nop
or
jo
xchg
movsl
in
xor
adc
mov
lods
xor
test
inc
mov
test
xchg
test
mov
adc
xor
push
cwtl
or
std
mov
inc
bound
cmp
test
leave
sub
imul
mov
adc
mov
dec
loop
fnstenv
push
and
loope
push
push
sub
mov
jmp
movsl
stos
bound
add
test
sub
int3
adc
or
repnz
adc
mov
das
adc
lret
push
inc
jmp
sbb
mov
dec
arpl
test
daa
dec
sub
xor
test
push
cmp
les
cmp
sub
push
aad
test
adc
ret
xchg
test
xchg
stc
adc
lret
push
and
pusha
pop
imul
lea
push
cmp
mov
jo
shll
js
adc
and
and
in
lods
push
sub
es
mov
mov
mov
adc
inc
cwtl
mov
pop
adc
mov
adc
lods
mov
inc
cmp
lock
cs
rclb
adc
les
mov
lods
mov
adc
jle
enter
push
enter
shrb
test
mov
fdivs
and
sub
loopne
push
sub
call
call
sub
adc
lock
jns
lock
les
jp
jl
cld
pop
scas
adc
jnp
cmp
addb
stc
inc
leave
or
in
mov
mov
pop
int
aad
arpl
cmp
pop
into
lahf
mov
icebp
inc
daa
adc
and
inc
add
dec
daa
dec
cmp
enter
dec
pop
sbb
pop
sub
das
pop
fs
stos
daa
cld
xchg
aaa
pop
cmp
repz
es
cmp
aas
and
fs
adc
inc
fisubrs
mov
lock
sub
pop
jb
xchg
imull
roll
es
arpl
fnsave
movb
fsubl
adc
and
push
cltd
daa
scas
or
and
lcall
inc
test
adc
cmpsb
adc
sub
inc
sbb
scas
mov
cmp
xchg
fbstp
jno
es
pop
es
adc
or
dec
test
adc
jl
jno
pop
dec
loope
adc
movb
xchg
lods
outsl
inc
lods
mov
ret
adc
and
sub
lahf
mov
fnsave
and
adc
sub
cmpsl
pop
jae
in
or
inc
out
push
enter
ja
bound
xchg
xchg
mov
scas
xchg
sbb
out
mov
stos
lds
jl
js
adc
mov
in
fsubrs
mov
adc
into
inc
iret
xor
nop
add
and
int
add
insl
xor
es
adc
mov
fistpll
nop
jecxz
add
xchg
and
call
xchg
mov
dec
fs
xor
adc
lret
out
movsl
mov
mov
out
fisubl
xor
push
and
neg
popa
nop
push
mov
or
jnp
sub
cmp
inc
adc
ret
or
push
push
inc
aam
std
and
push
rcll
xor
push
lods
push
and
mov
bound
mov
rorb
and
es
sub
outsb
cs
in
enter
sbb
lods
ss
adc
inc
adc
xchg
mov
stos
xor
jae
mov
adc
mov
and
movsb
adc
dec
movsl
mov
cwtl
push
sahf
jb
push
push
negl
or
dec
into
sbb
test
pop
push
mov
sub
and
dec
daa
sbb
inc
dec
adc
outsb
sub
cli
es
lds
lret
arpl
imul
mov
popf
jl
mov
inc
xchg
iret
dec
push
and
sbb
in
ss
or
test
adc
xchg
push
and
pop
sub
fisttpll
push
es
sahf
xchg
loope
dec
loop
cmpsb
mov
pop
scas
or
and
inc
xor
std
bound
mov
nop
xor
or
adc
push
or
cmp
push
adc
push
popa
adc
sub
push
jo
sbb
adc
xchg
pop
or
and
mov
scas
out
aad
orl
scas
out
push
in
dec
test
movsb
mov
out
test
sub
pusha
adc
stos
decb
or
xorb
into
xchg
dec
adc
add
inc
mov
add
pop
sub
or
sbb
nop
jp
shl
xchg
adc
adc
xchg
adc
out
sbb
adc
mov
sbb
call
dec
and
and
sub
sub
divb
adc
mov
mov
dec
cld
shlb
cmpsb
and
push
and
mov
pop
clc
inc
inc
mov
push
sub
and
negl
les
push
mov
insb
add
pop
pop
pop
push
jo
lret
cmc
gs
push
mov
pop
loope
insl
pop
jle
out
dec
insl
enter
jne
sti
mov
xchg
movsb
lret
nop
mov
xor
rorb
into
sbb
test
sbb
jb
jb
mov
sbb
push
into
clc
cs
movsl
adc
xchg
mov
pop
test
pushf
nop
xor
fs
aam
enter
pop
sub
mov
or
dec
movsl
mov
in
mov
inc
push
lods
in
in
out
inc
adc
test
divl
popa
stos
add
mov
dec
or
es
mov
inc
mov
lds
sbb
test
jb
mov
and
mov
ret
mov
or
adc
aad
scas
enter
stos
pop
neg
mov
out
mov
sub
es
in
cltd
bound
lea
test
add
inc
fists
xor
xor
xchg
into
mov
mov
mov
and
bound
add
push
cltd
mov
inc
mov
mov
pop
push
xchg
test
clc
add
es
stc
or
jno
inc
sub
stc
ret
adc
adc
jno
pop
adc
mov
nop
adc
es
inc
jb
mov
push
sub
cmpsb
xchg
mov
sbb
xchg
or
inc
cmp
into
fs
or
in
xor
xor
sbb
and
clc
lret
jae
xor
and
push
movsl
push
pop
adc
xchg
in
pop
fs
xchg
mov
bound
es
arpl
ljmp
cld
bound
das
je
fimuls
out
int3
je
mov
adc
out
adc
or
xor
dec
scas
push
push
jmp
sbb
addr16
sub
dec
test
push
and
or
adc
test
dec
xchg
sub
xchg
pushf
xchg
lret
and
adc
xor
adc
enter
mov
cmpsb
dec
mov
pop
cmpsb
addr16
mov
fimull
dec
push
pop
les
adc
pop
and
or
adc
pop
in
dec
adc
xchg
nop
jo
clc
movsl
mov
orl
sarl
dec
xchg
fsubl
push
in
xchg
xchg
xor
adc
in
in
xchg
inc
in
mov
in
push
dec
push
lds
test
cmpsl
adc
ret
jne
cld
sbb
mov
add
lret
jae
xor
push
dec
mov
adc
inc
xor
sub
mov
out
mov
pop
mov
test
dec
adc
push
scas
cmc
cmp
jnp
lods
es
es
lock
and
adc
nop
test
sub
inc
xchg
shrl
cwtl
push
xor
adc
cmp
xor
adc
js
inc
mov
test
inc
mov
dec
lret
adc
push
adc
mov
mov
pop
das
sub
adc
arpl
adc
sub
push
push
popf
jae
repnz
jnp
cmovne
sub
and
cmp
cmpl
test
mov
test
test
push
xchg
cmp
adcb
and
mov
pop
and
push
test
lods
pop
adc
mov
sub
mov
cltd
dec
pop
rorl
test
ret
jl
insb
movsl
adc
mov
and
sbb
adc
sbb
cmp
push
adcb
in
clc
mov
fstpt
sub
daa
jecxz
xchg
adc
adc
cmp
adc
mov
inc
add
subl
aam
xchg
pop
sub
fs
and
and
or
in
mov
sbb
pop
jle
and
pop
sbb
dec
fstpl
xlat
lret
jecxz
leave
mov
shr
xor
xlat
rclb
sbb
pop
std
aam
and
push
pop
cmp
dec
je
jle
das
dec
clc
mov
aas
outsl
aam
push
std
cmp
jp
adc
xlat
or
or
dec
arpl
insl
jl
pop
fs
movsb
int3
add
and
repz
lds
or
hlt
fstps
pop
insb
xor
je
xor
mov
push
ret
inc
pop
adc
cmpsb
or
dec
push
or
sub
insb
das
pop
push
dec
and
test
mov
ret
gs
add
push
cmp
lock
addr16
rorb
je
popf
imul
adc
int3
movsb
insb
inc
test
jge
dec
loopne
cli
shrl
mov
mov
jl
cmpsb
lea
scas
xchg
xor
idivl
cmp
rcr
push
xchg
imul
inc
test
lods
fs
nop
mov
inc
mov
push
or
mov
aad
fcmovne
mov
ljmp
xchg
insl
ret
jle
dec
adc
jnp
pop
ljmp
sbb
push
movsl
and
lock
movsb
fstp
sub
fs
adc
xchg
aas
jae
lret
rcr
dec
xchg
jle
outsl
mov
cmp
ds
icebp
int
jmp
xchg
imul
rolb
push
cmpsb
pushf
pop
jbe
push
jb
sbb
lods
xor
pop
test
scas
shrb
imul
cmpsb
arpl
popf
sub
insb
inc
into
test
aam
insb
sub
push
lahf
pusha
fidivl
push
fs
sub
lret
adc
stos
cmp
adc
xchg
sbb
dec
fadd
dec
aam
cmp
scas
pop
popa
jge
iret
hlt
or
movsl
mov
fimuls
cmpsb
fidivl
movsb
jnp
push
int3
jae
pop
xchg
mov
movsl
imul
rorl
push
hlt
and
adc
lcall
mov
cli
xchg
fwait
jge
jp
test
sub
mov
outsb
mov
insl
lahf
mov
push
or
push
and
mov
leave
lods
xor
lret
call
cmpsb
movsb
cli
push
je
pop
rcl
mov
stos
out
sub
mov
xchg
jle
fistl
jecxz
lea
movsb
stos
sub
adc
gs
addl
cmp
inc
imul
mov
fcomi
imul
mov
loopne
dec
popf
lods
gs
mov
dec
imul
shl
sub
sbb
sub
jg
dec
lds
xchg
aas
popa
cmc
mov
imul
mull
ja
cmpsl
xchg
jb
mov
shrb
imul
mov
xchg
hlt
incb
lock
xchg
mov
test
je
xchg
dec
mov
mov
xor
popa
sbb
dec
cmp
pusha
pop
scas
imul
push
cmpsb
cmpsb
out
sbb
xor
inc
mov
add
faddl
xchg
add
jnp
xchg
cmp
xchg
mov
out
aam
adc
lods
int
sbb
scas
inc
lret
xchg
inc
insl
repz
inc
outsb
outsb
in
xchg
movsb
add
mov
call
cmp
push
shrb
pop
push
jmp
dec
lret
ja
fwait
popa
fisubl
inc
jge
jae
pop
fs
pop
cmp
je
mov
xlat
push
and
push
xlat
imul
int3
loopne
movsl
popf
sbb
fistpll
mov
ret
or
popf
nop
cmpsb
sub
insb
icebp
lds
lahf
fldenv
mov
fidivl
push
xor
mov
dec
sub
outsb
repz
aad
sbb
iret
sahf
lods
jg
jg
movsl
push
pushf
fucomp
sahf
inc
lods
mov
pushf
test
inc
dec
jle
icebp
movsl
sub
cmp
sub
movsl
outsb
xchg
adc
sbb
inc
mov
out
cmp
sub
dec
rcll
xor
inc
sbb
imul
xor
jecxz
mov
stos
inc
fs
xchg
jmp
int
cmp
mov
outsb
insl
mov
stos
dec
testb
push
mov
fldt
insl
mov
ror
addr16
inc
cli
xchg
mov
int
or
cld
cmp
popa
jns
lock
movsb
out
mull
ficoms
pop
xchg
mov
xchg
outsb
mov
add
xor
pushf
add
imul
hlt
imul
imul
mov
mov
popa
ja
push
into
into
std
cmp
imul
lret
add
lods
es
inc
imul
jbe
mov
scas
stc
lret
stos
shll
test
mov
and
repz
out
ljmp
sbb
lods
aas
mov
adc
sahf
cmpsl
insl
pop
insb
dec
imul
xor
and
jmp
repnz
movsb
outsb
imul
in
pop
std
lcall
ljmp
gs
scas
and
aad
gs
sti
ficompl
int
jbe
iret
aam
jns
fldenv
push
mov
fsubs
test
cwtl
push
mov
mov
dec
int
loop
gs
imul
xor
movsl
and
insl
mov
xchg
cmpsb
andb
mov
fwait
add
mov
push
inc
arpl
inc
outsb
jmp
call
movsl
jmp
les
sbb
mov
cmp
or
jg
loopne
imul
pushf
mov
push
std
daa
and
stos
xchg
mov
xlat
rcl
pop
jp
inc
and
mov
rol
pop
cmp
inc
arpl
mov
ja
iret
jbe
addr16
xchg
or
mov
cmp
xchg
dec
sbb
fsubl
std
lret
mov
jle
mov
movsl
xchg
outsl
jle
xor
inc
roll
outsb
lods
hlt
icebp
fsts
outsb
dec
negl
aad
push
adc
test
iret
push
imul
ds
xchg
outsl
out
and
mov
mov
stc
sub
add
je
xor
test
out
inc
in
stc
jle
fs
loope
sbb
dec
ss
hlt
jb
cmpsl
pop
pop
insl
fadd
insb
mov
mov
lods
fstl
xor
jmp
xor
push
dec
ja
inc
mov
outsl
push
push
and
mov
pop
xchg
push
call
outsb
repnz
insl
test
and
and
shrl
outsl
push
out
enter
mov
mov
mov
and
shrb
and
decb
xor
cmp
push
mov
out
mov
es
aam
mov
movsb
mov
sbb
mov
xor
lahf
insb
sarb
push
lock
jp
outsl
mov
lcall
pop
push
push
and
push
scas
mov
mov
jp
iret
pop
push
xchg
mov
sbbl
subl
or
lods
std
mov
mov
jne
jl
dec
loop
sbb
popa
les
insl
or
test
mov
adc
sub
hlt
mov
mov
pop
adc
jne
xchg
sbb
push
mov
push
sub
lods
je
mov
dec
insb
lods
pushf
cmpsl
imul
stc
pop
pop
movd
and
mov
xchg
xor
stc
and
push
xchg
and
or
add
dec
jl
mov
pop
pop
or
xor
lea
sub
jae
fisttpl
push
movsb
aas
push
mov
call
test
jns
xchg
mov
aad
mov
es
push
test
xchg
lret
xchg
mov
mov
cmc
mov
mov
mov
fs
enter
test
push
in
outsb
mov
bound
lods
insb
sarl
pop
sbb
into
jecxz
jbe
out
jle
popf
lret
mov
fidivl
xchg
testb
andl
mov
pop
pop
jle
mov
fdivr
cmpsb
gs
jge
int3
xchg
lods
cmp
sub
imul
popf
xor
jne
popf
cmp
test
dec
pop
stos
mov
stos
scas
dec
inc
mov
lcall
popf
cmc
movsl
adc
mov
lods
inc
loopne
mov
sahf
jmp
inc
insb
mov
scas
nop
rolb
mov
lret
adc
arpl
ret
jmp
out
jnp
movsb
bound
aaa
shll
mov
pushl
push
pop
enter
jmp
mov
pop
pop
clc
adc
imul
dec
sti
insl
mov
pop
stc
inc
ljmp
pmaxsw
stos
shrb
jnp
aam
pop
push
xchg
sbb
aam
ljmp
adc
loop
ss
cli
pop
xchg
scas
hlt
mov
ss
shlb
in
out
hlt
jecxz
mov
pop
mov
adc
xchg
not
dec
aad
imul
mov
xchg
push
scas
mov
mov
mov
adc
scas
xchg
push
xchg
dec
popf
loop
push
push
push
sub
popf
or
mov
insl
mov
mov
mov
popa
cli
bound
or
xchg
insb
into
pop
push
cmpsb
xchg
jle
lea
jmp
inc
stos
cmc
outsl
xor
cmp
cmc
jmp
cmp
rcrl
jmp
mov
fs
xchg
stc
imul
testl
loope
dec
leave
jge
lods
call
js
add
lods
fs
xlat
mov
aam
sub
fnstsw
xchg
movsb
mov
or
mov
xchg
inc
jb
sub
mov
dec
sbb
xor
dec
mov
mov
sub
insl
mov
mov
aas
cmpsb
adc
popa
sub
in
insl
and
aad
jae
dec
int
pop
ds
insb
xchg
scas
movsl
addr16
push
rcr
lds
and
push
dec
scas
imul
inc
push
dec
scas
mov
push
out
lahf
pop
xchg
imul
jg
incl
lods
push
cmp
push
cmp
popf
sub
outsl
aam
outsb
dec
lods
xchg
mov
xchg
pop
adc
movd
pop
aam
icebp
fidivrl
jmp
cmc
jmp
testb
hlt
jecxz
sti
dec
outsl
cmp
test
call
gs
mov
inc
cmp
sub
jl
jno
push
jb
jae
inc
xchg
in
in
push
add
jg
movsb
sahf
lahf
lods
pop
dec
mov
push
cmpb
sti
jge
push
hlt
mov
imul
not
in
movd
std
jle
lret
sahf
jge
fstpt
lds
mov
cli
pop
fdivrs
insl
sub
push
dec
dec
repnz
lea
pop
mov
sub
push
mov
push
cmc
ljmp
popf
and
pop
out
fsts
xor
dec
hlt
loope
fcmovu
fldenv
mov
insl
xor
mov
mov
gs
pop
sti
outsl
mov
shl
popa
jbe
cli
dec
ljmp
cmpsb
mov
xlat
jmp
out
fidivrs
xlat
cmpsl
mov
cs
inc
aam
mov
inc
mov
xlat
fdivrp
lcall
lock
mov
scas
sar
xchg
scas
iret
push
scas
mov
xlat
imul
sub
insl
ja
negl
movsb
repnz
gs
mov
mov
mov
stc
and
mov
jge
pop
dec
push
adc
js
icebp
aas
jge
jg
imul
jg
or
fnstenv
ja
out
scas
mov
mov
shll
xchg
mov
ret
ljmp
mov
cmp
xchg
aam
mov
mov
stos
imul
mov
aaa
out
sar
pop
shll
push
dec
addr16
pop
fwait
stos
pop
daa
pushf
fisttpl
stos
mov
ljmp
jmp
scas
mov
fwait
push
mov
out
sub
cwtl
push
mov
mov
lret
push
mov
rorb
shll
repnz
mov
gs
jbe
inc
imul
negb
mov
lcall
mov
clc
jle
aad
push
fidivs
out
cltd
inc
std
scas
cmp
and
inc
fucomp
outsb
and
and
push
jmp
push
daa
pop
xor
mov
stos
push
pop
scas
std
shrl
frstor
in
xlat
mov
gs
aad
adc
mov
mov
jp
aam
std
insl
sarb
imul
sub
dec
xlat
cs
dec
mov
xchg
stos
cmp
imul
adc
pop
jg
movsb
insb
imul
mul
repnz
inc
outsb
mov
ds
jmp
mov
gs
loop
pop
divb
push
shll
test
inc
xchg
mov
push
mov
test
xchg
mov
jbe
mov
scas
aas
mov
aad
mov
jmp
lahf
mov
pop
in
adc
mov
ficoml
std
lods
xlat
push
or
int
imul
imul
lcall
dec
sbb
ds
adc
aas
hlt
push
jmp
mov
shrl
shr
jne
fcmovbe
lahf
movsl
negb
sub
xchg
cli
inc
fdivrl
xor
in
jb
mov
repz
or
testl
cli
inc
jp
insl
div
sub
mov
mov
xchg
sahf
jo
push
pop
into
scas
lods
gs
iret
rcrl
inc
scas
mov
fildl
sbb
cmp
jnp
mov
lcall
mov
fsubrs
imul
scas
outsb
scas
loop
push
iret
pop
and
cmpsl
push
push
jne
xchg
mov
mov
cli
imul
jb
jle
insl
dec
out
fistl
jge
xchg
scas
xchg
or
xchg
mov
rclb
scas
cld
jge
sahf
and
in
imul
dec
mov
fisubrl
in
cmp
leave
into
push
jae
push
mov
sub
jne
cmp
mov
mov
pop
jmp
addr16
hlt
cltd
ds
int
jl
cli
xchg
movsl
add
mov
ret
push
dec
daa
ds
scas
mov
es
pop
mov
lea
xchg
and
stos
and
rolb
aam
lea
in
mov
sar
mov
scas
dec
scas
mov
push
das
sahf
mov
rcrb
mov
cli
out
mov
jg
pop
pop
jge
inc
jbe
aaa
xchg
fldenv
inc
jae
fildll
dec
insl
or
dec
sub
sahf
mov
pop
into
cmpsb
fnstsw
rcrl
addr16
pop
mov
adc
rolb
pop
into
negb
lcall
xor
mov
dec
repz
pop
xchg
sahf
stos
xchg
loope
mov
push
push
out
pop
imul
mov
aaa
rorb
ljmp
xchg
scas
lcall
mov
jg
jae
jge
fdivrl
mov
adc
shr
adc
scas
mov
insl
adc
lea
test
loop
movsl
push
mov
stc
mov
fwait
push
mov
cld
inc
mov
add
imul
adc
add
call
leave
mov
mov
mov
sti
dec
lret
adc
notb
mov
icebp
es
pop
subb
and
fildll
adc
dec
fdiv
ja
pop
scas
scas
lret
scas
jnp
ja
scas
arpl
jno
loop
scas
inc
mov
pushf
cmpsb
stos
jo
test
cltd
dec
decl
pop
insb
scas
lea
cmp
scas
mov
and
jnp
into
xor
rcrl
xchg
or
dec
sbb
pushf
jo
jge
mov
inc
loopne
mov
pop
pop
sbb
je
mov
pop
movsl
pushf
sub
cmp
gs
loop
aad
xchg
and
sub
sub
fnstenv
scas
mov
movsl
insl
pop
sbb
push
pop
push
sub
insl
test
mov
cmpsb
xchg
imul
sbb
data16
and
imul
in
and
sbbl
aam
sub
mov
insb
jnp
jo
cmp
cmpsb
movb
stos
xor
mov
imul
jbe
jmp
outsb
hlt
adc
outsb
jb
test
or
imul
adc
cmpsl
outsb
jno
pop
hlt
fwait
sub
mov
enter
and
movb
mov
in
lock
inc
call
je
sub
jns
mov
jp
nop
outsl
sarl
and
outsb
fsub
push
icebp
adc
push
insl
into
push
inc
jns
xchg
mov
outsb
test
fs
scas
enter
std
and
outsb
pop
mov
pop
icebp
in
lods
xchg
repnz
dec
out
jne
pop
dec
fs
leave
les
fstps
out
jbe
cli
xchg
pop
mov
das
adc
cmc
int3
ret
jno
popf
outsb
add
mov
mov
insb
sbb
dec
gs
rcl
jmp
xchg
fsubl
cmpsb
outsb
mov
push
xchg
sahf
mov
jno
dec
cs
sub
movsb
test
int3
adc
into
aad
cmpsl
and
push
movsb
xor
cmp
lret
mov
jp
movsl
xchg
sub
decl
mov
sahf
sbb
xchg
mov
sbb
dec
std
xchg
sub
std
mov
addr16
dec
sbb
adc
xchg
pop
repnz
cltd
jecxz
test
or
or
rcll
into
in
inc
inc
imul
mov
xchg
std
ljmp
stos
lods
sbb
les
aam
cmpsb
cmp
sbb
pop
aad
mov
aas
out
les
sahf
jmp
cmp
jl
sub
push
test
cmc
jmp
and
daa
mov
xor
imul
sti
add
mov
jp
inc
fadd
test
repz
xor
lods
dec
dec
into
icebp
test
mov
outsb
mov
jb
jle
scas
mov
pop
and
and
insl
inc
je
cmpsb
test
dec
imul
fsubrl
ja
mov
test
xchg
push
adc
popa
push
lds
jo
adc
les
inc
sahf
sbb
lods
fistl
fs
dec
and
adc
scas
lods
adc
into
sahf
sbb
in
or
ds
scas
xchg
stos
imul
jb
outsb
pop
adc
ljmp
sbb
xor
insb
je
aad
push
mov
leave
jnp
frstor
in
xlat
jmp
or
test
repz
incl
ja
cmp
cld
insb
stos
sub
shrb
stos
shll
arpl
lds
jl
xchg
pushf
outsb
inc
dec
sbb
jle
xchg
lods
out
or
sbb
pushf
rorb
sub
stos
inc
mov
outsl
out
jp
xchg
fdivrs
inc
fdivr
push
outsb
push
cmp
insb
fsubr
imul
mov
adc
scas
pop
fiaddl
mov
stos
mov
fidivrl
outsl
lock
outsl
xlat
push
scas
aaa
cs
and
stc
push
fnstsw
xchg
imul
outsb
stos
cmpsl
jae
and
ljmp
dec
les
out
mov
out
mov
popf
mov
push
sub
cld
pushf
push
dec
jl
add
jg
mov
mov
ljmp
inc
fsubr
dec
fsubr
dec
inc
adc
fsubs
lods
ja
jp
cli
cmp
and
aad
cli
in
gs
sub
dec
jnp
mov
clc
gs
test
xchg
insb
xor
imul
xor
mov
cmpsb
scas
hlt
lea
test
inc
sub
dec
notb
jge
test
add
mov
js
scas
inc
mov
pop
push
outsb
or
bound
push
push
js
scas
mov
in
push
stos
push
inc
mov
dec
adc
dec
sbb
mov
cmpsb
lcall
mov
jg
popf
fimuls
leave
testb
testl
xchg
cmpsl
dec
cld
cmpsb
xorl
cli
add
mov
sbb
and
push
and
push
mov
lcall
ja
jle
xor
xor
sub
into
call
dec
xor
outsb
ret
xlat
push
xchg
jecxz
inc
es
push
sub
call
cmp
shlb
lcall
add
arpl
and
sbb
ss
mov
das
dec
adc
pop
pop
je
and
repnz
sub
fst
jmp
jmp
in
jnp
in
fildl
outsb
test
xor
aas
adc
imul
fs
loopne
xchg
or
outsb
fistl
mov
clc
and
mov
cmc
test
shlb
jb
mov
xchg
inc
push
xchg
xchg
or
outsb
gs
sub
out
push
inc
cli
dec
cld
mov
scas
push
jns
leave
testb
jg
test
cmp
inc
dec
jbe
xchg
or
jbe
mov
xor
and
sbb
jecxz
lea
lea
popf
mov
clc
test
sub
outsb
ljmp
jae
mov
daa
in
movsl
jge
cmp
enter
sub
jne
dec
cmpsb
push
sbb
sarb
pop
es
jae
push
popf
dec
sub
cli
or
or
sbb
xchg
and
adc
stos
push
das
pusha
fsubl
mov
cs
das
inc
dec
scas
es
push
fisttpll
xchg
xchg
or
xchg
cmp
scas
add
sbb
fisubs
movsb
jb
outsb
jmp
or
cmp
test
mov
jl
xchg
jne
daa
or
int3
fisubs
decl
popf
test
inc
pop
fs
cmp
push
adc
rcrl
stc
subl
popf
lcall
cmp
jb
repnz
bound
mov
jl
cmpsl
popa
sbb
dec
or
ja
sbbb
push
sub
test
cmp
xchg
insl
lret
jmp
sbb
pop
test
inc
mov
int
jo
mov
outsb
popf
and
pop
fiadds
test
inc
scas
mov
xchg
sub
pop
rol
inc
sub
int3
mov
rcll
sub
ret
scas
sbb
and
push
pushf
xlat
je
psubsw
arpl
mov
out
ss
cmp
mov
mov
push
fdivr
sahf
xchg
mov
lds
frstor
mov
cmc
sbb
in
jne
push
sub
insl
clc
xchg
sub
cmp
pop
xchg
insb
pop
scas
sub
inc
cld
sahf
movsl
pop
ja
or
and
out
fisubrl
mov
cmp
sbb
in
inc
cmp
dec
pop
inc
into
je
std
jns
or
adc
les
inc
das
inc
jno
sbb
loopne
sub
cmp
pop
int3
movsl
mov
lods
push
inc
xchg
sahf
cli
push
sahf
outsb
jp
xchg
or
and
in
xchg
orb
and
movb
mov
test
movsl
insl
push
test
xchg
lds
lret
int3
cli
jl
dec
ja
pop
or
lret
jbe
xchg
sbb
jge
dec
push
gs
sub
jns
and
fdivr
es
inc
fidivs
out
pushf
jecxz
insl
mov
movsl
outsl
fildll
sahf
push
and
cli
dec
xor
jp
or
outsb
jge
sub
cmc
dec
jbe
rclb
stos
fucomp
push
or
scas
xchg
pop
daa
xchg
pop
pop
cli
frstor
nop
sbb
pop
dec
mov
fiadds
mov
scas
mov
push
mov
push
sti
push
lock
lods
pushf
push
inc
dec
mov
sub
push
jmp
pusha
das
jne
das
push
jg
movsw
mov
aaa
js
adc
outsb
cmpsl
imul
insl
mov
cmp
shrl
xchg
hlt
aam
into
fimuls
mov
insl
jae
nop
insl
mov
repnz
shrb
jmp
lret
movsl
mov
push
and
mov
movsl
adc
jl
sbb
pop
aaa
out
sbb
imul
and
fadd
dec
inc
mov
push
pop
mov
pop
xchg
sub
cli
ret
jl
test
mov
inc
mov
ror
mov
clc
insb
xchg
lret
arpl
xchg
je
xchg
and
dec
cmp
outsb
fidivrl
cmp
shrb
outsl
pop
sahf
fistl
outsl
std
es
cmpsb
clc
xlat
dec
ja
pop
mov
sti
andl
fsubp
lock
pop
push
mov
jecxz
jp
inc
xchg
xchg
clc
pop
pop
imul
scas
rorl
ficompl
or
adc
imul
test
movsb
inc
out
scas
cli
and
jl
pop
cld
stos
inc
subl
stos
popf
mov
mov
push
iret
or
jl
jb
insb
ja
gs
outsl
loop
aaa
shl
outsl
call
ret
lea
push
lds
mov
outsl
mov
imul
sub
gs
loop
cli
popf
sub
insl
push
mov
jo
or
push
insl
adc
cltd
cld
mov
inc
fcmovb
inc
cmpsl
jno
and
cmpsl
adc
mov
je
idiv
rcrl
jne
jbe
dec
jge
fidivs
and
enter
test
jno
inc
sahf
rcll
pop
in
das
dec
mov
push
adc
sti
pop
jge
aaa
fwait
ss
mov
shlb
fcom
gs
in
lock
lock
imul
bound
pop
jns
push
xchg
addb
mov
xchg
out
movsb
out
int
jp
imull
sahf
dec
push
idiv
cmpsb
lods
jo
mov
in
lea
lahf
shrl
pop
movsl
mov
xchg
push
out
jge
outsl
jne
mov
jle
mov
pop
iret
jns
mov
adc
xchg
jle
sub
sahf
ja
dec
outsb
adc
dec
mov
lds
mov
sub
aaa
les
xchg
lds
out
fcmovu
insl
in
jle
xor
sbb
jno
xchg
mov
pop
scas
mov
jbe
cmpsb
fwait
adc
dec
add
popf
jle
cmp
dec
imul
mov
pop
inc
mov
aaa
mov
outsb
outsl
loope
sub
dec
sub
cli
lods
xchg
sub
scas
fdivrl
lcall
jb
push
cmpsb
outsl
jp
outsb
dec
in
leave
cmp
aas
lods
out
jno
adc
stos
xchg
scas
movsb
mov
lds
mov
outsb
mov
lret
outsb
popf
sub
negl
mov
push
popf
sbb
xor
cmp
cmpsb
fdivrl
jmp
das
decl
imul
lods
dec
push
xchg
push
dec
cli
sub
push
fildll
pop
xlat
daa
loope
lcall
cmc
inc
xchg
jp
hlt
out
adc
outsb
mov
push
xor
gs
fcmovnbe
stc
inc
mov
jmp
sbb
dec
mov
sahf
xor
scas
scas
sub
ds
loope
ds
jb
loopne
insl
pop
inc
popf
out
dec
mov
movsl
sub
fs
sbb
in
dec
scas
test
imul
std
jmp
mov
icebp
push
cmp
inc
inc
insb
mov
inc
fsubs
popf
pop
sub
mov
sti
sub
ljmp
cmp
insl
in
mov
mov
stc
inc
inc
imul
push
insl
inc
cmp
mov
test
push
mov
das
out
sbb
outsb
pop
scas
jp
push
cmpsl
mov
sbb
jne
clc
movsl
mov
xchg
test
outsb
push
mov
insl
jne
mov
iret
insb
mov
mov
push
fsub
lock
addr16
out
jmp
sbb
mov
outsl
shrl
scas
outsb
adc
mov
scas
aaa
icebp
xchg
aad
push
mov
std
outsb
outsl
jne
fs
push
inc
out
aas
cmp
into
hlt
xchg
lods
pop
sbb
xlat
out
out
fs
scas
fcmovnb
mov
into
movsl
push
jge
mov
jle
scas
lds
insl
out
mov
fisubrs
jae
lcall
imul
popf
mov
push
mov
lods
outsb
adc
out
out
jno
inc
ja
jle
imull
mov
scas
fdivr
ffree
sahf
outsb
fdiv
cmpsl
aad
inc
fdivrs
jp
movsb
xor
lds
mov
pop
fldcw
sub
inc
mov
in
test
outsl
fwait
in
jecxz,pn
push
mov
inc
jb
xchg
cmpsb
lahf
cli
dec
test
adc
scas
shrb
movsb
outsb
imul
sti
pop
and
shl
jmp
gs
mov
movsb
push
fildll
outsl
dec
push
pop
xchg
aaa
mov
je
outsb
test
fwait
cmp
dec
jecxz
xchg
lret
xchg
cld
in
dec
pop
xchg
enter
sahf
js
sahf
lods
jb
inc
mov
adc
into
scas
in
out
movsl
lods
jb
in
push
mov
sti
adc
hlt
dec
mov
cmp
js
sub
mov
pop
repnz
imul
mov
aad
mov
je
sti
fistpl
jno
mov
mov
cmpsl
in
push
popf
int
sub
mov
sub
mov
and
test
cmp
pop
fdivp
jge
and
pop
mov
sarl
mov
mov
je
push
ds
aas
fwait
dec
mov
scas
ljmp
and
xchg
scas
sbb
mov
or
in
popf
jbe
mov
or
jp
mov
sbb
insl
xchg
mov
popa
xlat
jmp
cmp
shl
fldcw
nop
sahf
jmp
sub
mov
mov
insl
mov
xchg
jnp
jne
mov
outsb
inc
loope
sub
test
lret
mov
jle
cmpsb
jp
mov
sub
mov
imul
insl
outsl
ja
sahf
stos
xchg
lret
cmpsb
ja
into
sahf
cmp
xchg
jnp
pop
or
push
aam
insl
fcoml
inc
scas
xchg
insb
mov
xchg
scas
les
insb
pushf
leave
movsb
les
jae
or
xchg
fs
loope
scas
push
lods
mov
stos
ret
mov
mov
mov
sbb
mov
mov
lea
inc
sahf
stos
dec
mov
test
mov
xchg
dec
inc
fists
into
mov
jge
mov
movsl
lds
rol
pop
fwait
clc
jne
into
js
and
mov
aas
imul
aaa
jne
fsubs
scas
dec
jmp
or
add
mov
aam
movsl
lcall
into
scas
inc
fucom
cmpsb
mov
inc
mov
mov
ss
xchg
dec
test
xchg
aaa
lds
pop
aad
into
sahf
inc
sub
ret
mov
movsl
ljmp
popf
adc
xchg
stc
lea
cli
js
shll
outsb
repnz
push
out
xchg
mov
imul
mov
in
repnz
fildl
sub
xchg
xchg
les
jl
xchg
mov
aam
mov
in
imul
or
pop
adc
mov
inc
jae
scas
ja
dec
imul
outsb
lea
sarb
clc
mov
dec
dec
out
imul
outsl
cmpsl
mov
jle
mov
imul
punpckhwd
aad
out
pusha
fidivs
fildll
sti
repnz
xchg
mov
imul
sbb
sub
lret
pushf
sahf
dec
fisubrs
sbb
test
and
aad
xor
jae
inc
jo
into
xor
insl
mov
out
shll
aad
out
nop
sub
jmp
loope
movsb
lret
mov
push
ja
cmp
push
push
xor
subl
dec
push
mov
lods
push
adc
jne
mov
and
enter
dec
jle
mov
mov
movsl
inc
fidivs
cmp
repnz
fsubrl
xchg
mov
in
fs
mov
stc
xchg
mov
push
loope
dec
stos
xchg
stos
mov
scas
das
inc
enter
pusha
gs
das
popa
enter
adc
or
pushf
inc
mov
push
pop
mov
movsl
cmp
add
jae
test
jmp
in
pop
aaa
fucomip
mov
xor
idiv
aas
out
iret
outsl
jae
adc
push
pop
mov
cmp
mov
je
shrl
cmp
out
xor
int
jns
sub
inc
push
push
dec
test
inc
js
xchg
push
stos
jl
hlt
outsl
hlt
mov
fs
repnz
in
div
in
aas
popa
cmc
mov
and
xor
xor
es
scas
js
es
inc
push
scas
jle
lock
jne
adc
mov
mov
jo
sub
jno
ret
scas
xchg
arpl
scas
outsl
scas
sbb
int3
sbb
ds
fidivrl
hlt
dec
scas
idiv
push
mov
sub
xchg
lret
pop
insl
gs
pop
lea
gs
les
leave
scas
mov
stos
adc
insb
in
mov
jo
sahf
and
or
jne
sbb
xchg
icebp
aam
xchg
push
xchg
or
jl
pop
cmpsb
xor
lds
cmp
pop
in
xchg
mov
dec
pushf
decl
push
jge
ds
movsl
jle
scas
push
dec
cmpsl
mov
xchg
movsb
cmp
or
imul
jno
je
imul
rcl
push
cmpsb
sarb
inc
sub
imul
gs
jp
or
je
xchg
in
popf
sub
sub
inc
dec
jp
fs
scas
movsl
lea
out
xlat
hlt
ds
sbb
es
aad
aas
and
insl
mov
jno
dec
ret
std
cmp
jg
or
aas
leave
mov
xor
jge
int3
cmp
movntps
mov
mov
stos
loope
scas
sub
sub
popf
ret
dec
xchg
jl
pop
jb
mov
sub
dec
leave
push
xor
arpl
imul
jb
pop
jbe
push
xor
mov
cli
dec
lret
mov
push
adc
xchg
lods
enter
scas
popa
jg
mov
mov
fdivr
out
pusha
popa
xor
and
ret
sbb
sbb
movsb
jmp
cltd
outsl
pop
movsb
jl
leave
inc
fisttps
ret
incl
mov
les
jae
into
cmp
adc
pop
sub
in
outsl
in
xchg
dec
jl
ljmp
dec
aam
hlt
movsl
mov
scas
outsl
scas
pop
and
popf
pop
cli
xchg
xchg
dec
xchg
loope
inc
sub
repnz
jmp
pushf
insb
cld
xchg
pop
jge
sbb
popf
imul
imul
push
jp
outsl
push
xchg
fisubrs
mov
cli
insl
xorb
outsl
ffree
outsl
in
lret
js
lahf
shl
scas
push
inc
jg
out
aaa
outsl
jb
push
push
jbe
aad
rcll
mov
les
lods
mov
outsb
and
mov
ret
int3
push
push
cmpsb
mull
dec
xchg
cmp
jmp
and
pop
movsb
mov
sbb
out
push
in
push
bound
xchg
pop
jge
mov
jle
push
pop
bound
jl
dec
enter
out
xor
mov
mov
sbb
ja
stos
push
fcoml
lds
sti
std
or
lahf
push
xchg
stos
lds
sub
push
in
fwait
inc
push
mov
xchg
mov
bound
sti
push
mov
sti
dec
inc
mov
xchg
jle
lds
cmpsl
popa
aam
and
mov
movsb
lds
mov
dec
jb
and
enterw
add
cmpsl
arpl
jnp
jl
cmpsl
notb
xchg
sbb
mov
cmp
cltd
cmpsl
jle
shlb
pop
cmc
adc
pop
mov
adc
sbb
rclb
std
neg
outsb
mov
shrl
je,pt
in
fwait
sub
push
scas
stc
cwtl
jb
hlt
pop
adc
cld
mov
lcall
jb
mov
inc
shrl
cli
xchg
xor
insl
lds
push
xor
pusha
inc
scas
scas
push
movsl
jl
xor
cmp
cmp
cmp
sbb
pop
ficoms
ficomps
mov
shll
vunpcklps
mov
insl
push
movsl
shlb
pop
test
xchg
xlat
push
into
rclb
scas
pop
or
mov
sub
pushf
push
push
jg
inc
adc
imul
aad
pop
aaa
outsb
jns
sbb
outsl
mov
mov
fisubrl
jo
mov
shrb
call
lods
dec
push
aaa
or
sbb
ja
sub
neg
jl
movsl
mov
jle
into
hlt
out
shlb
pop
insl
shll
addr16
pop
mov
das
inc
imul
pushf
lahf
lods
movsb
imul
out
or
lds
out
sub
xlat
subl
mov
test
movsl
in
jge
insb
call
hlt
jp
mov
cmp
aas
push
mov
xlat
sbb
sub
scas
pop
and
mov
jb
jns
aam
jbe
mov
stos
data16
js
cmpsb
cmp
fs
in
cmc
arpl
insl
je
jbe
sub
in
fisttps
je
xchg
call
xchg
xchg
test
movsb
mov
aad
inc
sti
sub
dec
push
call
mov
outsl
loop
mov
loope
mov
mov
jp
stc
and
sti
cmpsl
push
cli
mov
outsb
fstpl
jnp
test
cmp
std
fidivl
out
outsl
outsl
mov
enter
mov
in
fsin
testb
jb
pop
cmpsb
mov
jle
scas
dec
pop
adc
jno
mov
sti
outsl
fisubl
movsl
outsl
jo
pop
adc
mov
push
jno
jp
lods
scas
fwait
cmpsb
jg
xlat
cmc
pop
mov
cmc
inc
scas
jp
sub
in
daa
xor
jle
or
in
fcmovnu
std
sbb
outsl
int
jle
mov
mov
pushf
pop
dec
jecxz
aam
shrl
outsb
jne
jl
jle
lahf
and
aam
jnp
sahf
dec
add
sub
decb
dec
sub
out
aam
inc
lret
push
das
and
repnz
in
add
popf
sub
mov
test
xchg
fs
into
das
call
pop
data16
xchg
xchg
scas
jmp
hlt
mov
fdivrl
push
scas
scas
aad
scas
movsb
imul
mov
mov
push
jmp
jl
xchg
das
jne
jp
jbe
lea
mov
mov
jle
or
inc
and
xlat
push
push
into
decl
cmp
jnp
pop
scas
insb
or
fildll
xor
inc
aam
xchg
or
stc
sahf
cmp
lahf
cmpsb
sub
rclb
out
jo
add
jo
pextrw
or
sub
roll
insb
inc
testl
dec
inc
or
jne
mov
or
cli
xchg
std
js
ret
into
incb
or
jg
and
das
jle
xchg
pop
loope
unpckhps
pop
rorb
adc
pop
xchg
and
adc
and
dec
inc
or
sti
xchg
push
and
lahf
aas
push
daa
xlat
add
enter
bound
sahf
xchg
lahf
cmpsl
nopl
mov
hlt
cmp
pop
pop
aam
js
xchg
setns
dec
xchg
cmpsl
nopl
inc
out
adc
push
or
xor
mov
push
unpcklps
shrb
out
bswap
js
lods
movups
into
lret
and
in
mov
test
inc
adc
inc
movsl
inc
cmpsl
mov
inc
jmp
sub
or
mov
xor
cmp
dec
sbb
std
insl
je
pushl
sahf
pop
inc
pushf
les
xchg
cmovo
or
sqrtps
jno
inc
shrb
movsl
setns
pop
pop
push
pop
js
xchg
jmp
cmove
gs
mov
push
out
nop
in
mov
loope
pushf
jno
push
cmp
dec
ret
pop
cmpsb
add
push
jecxz
js
addl
jns
scas
setbe
xchg
inc
cvtdq2ps
xchg
fimuls
int3
cmp
lea
xchg
setb
out
movsb
test
sub
pushf
jno
push
cmp
cmpsl
rdmsr
rcrb
push
incl
enter
addr16
push
jno
decl
rclb
sub
lds
pop
mov
jmp
lar
sbb
js
cmp
jno
inc
ret
andb
aaa
js
cmpsl
rdmsr
js
xchg
jns
gs
lar
adc
cmovb
ret
or
lods
mov
sub
lret
add
add
push
or
and
inc
mov
movsb
or
mov
aas
mov
rolb
seto
gs
or
test
mov
inc
xchg
shll
mov
cld
insb
ret
aas
pop
fsts
mov
inc
data16
hlt
push
imul
cmp
out
sub
outsb
xor
mov
pop
dec
xchg
punpckhdq
or
test
dec
pcmpgtb
enter
push
dec
cmovle
mov
cmp
xchg
setp
insb
seto
sub
xsaves
xchg
xor
sete
lret
xchg
inc
popa
fcomip
js
push
fs
nop
cmp
out
das
push
xchg
sbb
pop
pop
cmpsl
rdmsr
xchg
notb
lea
sub
std
or
jmp
mov
xchg
mov
mov
test
ret
dec
dec
loopne
sub
jg
outsl
in
xor
and
mov
adc
pmulhuw
xchg
sub
or
int3
lock
cmp
std
rorb
push
rolb
loope
pushf
paddusb
in
or
cmp
mov
inc
ret
cmpsw
mov
push
decb
nop
ret
sub
sub
in
ret
les
jb
ret
pop
cmp
add
repz
pop
ja
dec
pcmpgtb
imul
and
adc
pavgw
sbb
cmp
mov
mov
nopl
in
jl
cmp
inc
mov
lea
lock
sbb
mov
pop
sbb
in
pop
or
jb
dec
mov
aas
inc
ja
or
xchg
and
outsb
xchg
movaps
jnp
dec
pcmpgtb
cmp
enter
scas
add
xorl
pop
shrb
repnz
test
ret
pop
pushf
pop
ja
sbb
pop
stc
jg
pcmpgtw
es
mov
and
sub
packssdw
sub
sub
packssdw
mov
xchg
dec
jp
stc
push
loop
xchg
shlb
cmp
enter
std
rclb
into
inc
inc
xchg
xchg
sub
bswap
rclb
bt
int3
js
xchg
test
mov
cmp
rcll
push
or
add
mov
cli
xor
leave
sub
sub
pusha
rsqrtps
clc
seto
sahf
adc
repnz
push
push
movsb
orb
cmc
xchg
xchg
sbb
pushf
jno
inc
xchg
push
movsl
or
and
andl
mov
mov
or
or
xchg
or
or
rorl
mov
xchg
push
fmull
enter
repnz
add
imul
mov
xchg
aad
sub
lret
test
aas
push
sete
movsl
sbb
add
imul
sbb
sbb
sbb
sbb
mov
pop
repnz
bswap
pop
mov
jae
shlb
punpckhwd
add
push
cmpsl
or
movsl
cmp
out
sete
jae
mov
push
sbb
mov
jno
inc
cmpsl
std
in
sbb
fs
cmp
subl
cmp
jmp
mov
and
scas
iret
shlb
cmpsl
dec
loope
ds
sar
xchg
andps
sub
add
xchg
or
and
dec
mov
xchg
mov
dec
test
addps
mov
cltd
xchg
rorb
xchg
adc
mov
movsb
xchg
xchg
notl
mov
fwait
mov
and
mov
sub
and
and
andl
lss
montmul
cmpsb
inc
sbb
loope
loope
push
in
ret
pop
mov
scas
xchg
jns
dec
push
sub
bswap
mov
jne
movsb
enter
xsha256
cmpsb
push
xchg
movsb
lfs
cmp
jb
call
sub
xchg
jns
inc
lcall
push
xor
jge
dec
enter
ljmp
addr16
cmovs
xchg
decl
mov
ljmp
bswap
lock
lfs
lds
pop
and
adc
hlt
pushf
jno
inc
ljmp
and
push
mov
call
jb
mov
sub
xchg
js
mov
push
mov
sar
sub
xchg
bndldx
lret
cmove
sub
out
inc
lods
fsubl
adc
repnz
add
cmp
xchg
or
dec
les
cmp
cli
rcrb
les
or
sub
scas
test
gs
xor
int
lss
pop
cld
jp
cmp
sub
ret
or
pop
cvtps2pd
jge
icebp
bswap
mov
loopne
fildll
sub
xchg
xor
push
inc
into
test
sub
and
xchg
dec
cmp
cs
cmp
push
mov
xchg
js
js
inc
sete
sub
packssdw
cltd
ja
movsl
lss
xchg
pcmpgtw
mov
sub
cmp
sti
push
daa
push
insb
psrlw
sub
punpckhbw
xchg
fwait
lss
or
popa
xchg
cmpsb
or
das
out
push
aaa
inc
sub
inc
mov
add
xchg
push
sub
punpckhdq
xchg
lea
mov
loope
inc
sarl
setb
movsbl
sub
cmpsl
movaps
or
dec
cvtps2pd
adc
gs
push
cmp
xchg
xchg
scas
lgs
inc
and
dec
jns
push
jae
call
sbb
mov
shrb
adc
lods
icebp
test
aam
sub
daa
test
adc
and
fs
add
in
mov
sbb
mov
aas
test
inc
adc
jecxz
fnstsw
test
pop
push
adc
push
push
inc
adc
ss
ret
outsl
and
insb
sbb
jl
test
lds
jl
jo
adc
int3
xchg
and
inc
lock
test
sub
xchg
stos
lods
mov
outsb
lahf
dec
rcr
inc
dec
adc
adc
mov
scas
or
inc
mov
and
inc
mov
mov
add
mov
inc
ret
cmp
fadds
dec
fcoms
fildll
adc
adc
and
bound
hlt
insb
pop
test
push
mull
insb
mov
adc
js
test
and
fs
movsl
mov
dec
adc
push
or
test
cs
sub
inc
push
sub
or
stc
js
adc
sub
stos
pop
xchg
test
sub
adc
mov
lds
mov
push
pop
pop
or
jo
outsb
movsl
mull
outsb
adc
clc
push
cmp
inc
pusha
cmp
insb
mov
sbb
inc
mov
lds
xchg
jl
loop
inc
repz
jl
test
adc
cmpsb
and
insb
ds
scas
shll
ss
out
mov
or
sti
bound
arpl
inc
stos
les
add
and
xorl
ficomps
adc
fmulp
scas
test
out
cmp
adc
lret
test
mov
lds
sub
adc
dec
aam
sub
mov
cmpsl
xchg
add
add
or
or
jl
and
imul
or
test
sub
xor
xchg
adc
popf
cmp
mov
push
inc
adc
inc
ret
bound
or
movsl
inc
dec
pop
xchg
test
mov
adc
push
insl
lods
addb
push
mov
mov
sub
push
lea
jb
and
mov
xchg
pop
adc
and
popf
mov
scas
adc
lods
mov
pop
or
mov
and
mov
mov
int
add
adc
aad
enter
fldl
bound
andl
mov
adc
adc
adc
std
lods
roll
and
or
push
sub
es
adc
adc
loope
sbb
dec
adc
add
or
sub
push
push
rclb
mov
mov
cmp
dec
sub
push
pop
inc
mov
sbb
push
dec
insb
jmp
cmp
mov
sub
scas
fs
imul
cmp
push
pop
adc
ss
enter
or
aas
test
repnz
lahf
mov
pop
clc
inc
xchg
test
xchg
mov
adc
test
dec
movsb
sub
adc
mov
adc
dec
mov
mov
cmp
mov
or
les
push
sbb
mov
mov
test
int3
sub
repnz
fcoml
pop
es
in
cmp
sahf
in
mov
or
lret
adc
loop
mov
adc
xlat
add
add
mov
or
lret
push
sub
adc
loop
adc
stc
mov
test
adc
sub
adc
xor
iret
pop
lock
inc
dec
cmp
lods
push
push
inc
lds
inc
jge
leave
dec
xor
adc
push
lods
cmp
xchg
in
icebp
pop
push
and
pop
pusha
arpl
xchg
rclb
test
inc
jae
aaa
jnp
test
stos
jnp
adc
subl
or
mov
xchg
sub
adcl
les
sub
xchg
sub
mov
in
cs
jmp
ret
stc
les
ret
movsl
stos
bound
lret
adc
sub
fistl
push
inc
jecxz
xchg
pop
or
jmp
clc
add
test
repz
lds
mov
inc
jae
jl
add
lret
push
and
or
adc
es
sbb
les
and
jno
and
mov
sub
and
jo
xor
test
cmp
adc
js
sub
test
push
dec
cmp
rsqrtps
sub
push
pop
xchg
xchg
lds
bound
or
loop
inc
or
jb
es
jp
pop
push
jp
mov
xorb
pop
mov
les
xchg
lods
sbb
mov
lcall
into
mov
dec
stos
sub
mov
sub
jmp
inc
push
and
test
lret
mov
pop
push
rolb
sbb
cmpsb
ficompl
test
loop
xchg
jno
test
inc
ljmp
mov
and
iret
cli
xchg
rcll
add
adc
das
adc
sub
push
jae
mov
mov
mov
jnp
xor
cltd
and
adc
sub
test
add
adc
cmp
jl
fildl
nop
mov
lahf
adc
pop
mov
test
jmp
clc
es
adc
mov
pop
adc
adc
jns
shlb
jb
dec
or
sub
test
mov
mov
sub
pop
sub
adc
push
test
test
mov
lods
mov
in
lret
dec
mov
ror
leave
leave
icebp
adc
leave
mov
xchg
or
pop
jb
in
fincstp
lods
push
les
imul
dec
icebp
pop
mov
idiv
sub
adc
stc
cwtl
lods
mov
inc
test
dec
or
call
adc
stc
repz
adc
stc
cmp
pop
or
pop
repnz
mov
pop
je
push
push
stos
loope
in
lods
adc
sub
insb
adc
outsb
arpl
int
es
mov
sub
sbbb
pushf
sahf
popa
jne
mov
push
stc
xchg
daa
mov
adc
stos
loopne
lds
fcomps
mov
call
pushf
jmp
push
and
lods
scas
lea
xchg
scas
mov
lds
add
push
scas
mov
sahf
sbb
test
xchg
xchg
das
out
sub
in
or
je
xchg
fildll
cld
insb
movsb
addl
fdivl
test
mov
dec
adc
je
inc
outsb
xor
sahf
fstpl
sysenter
das
jg
mov
sahf
jle
idivb
lods
mov
fs
jg
mov
popf
xor
das
pushf
xchg
ss
cltd
lods
sub
cmp
insl
xchg
fnsave
sub
pop
insl
inc
and
xchg
or
scas
xorl
dec
clc
cmc
dec
and
decl
mov
xchg
adc
push
mov
js
movb
jnp
push
cmp
aas
gs
dec
mov
hlt
cmpsb
mov
jle
and
mov
repz
xchg
ja
cltd
movsb
sbb
xor
fs
dec
xchg
or
mov
movb
rclb
stc
and
pop
sub
inc
movsb
inc
dec
xor
adc
movsl
and
and
dec
rolb
test
movsb
adc
lret
sahf
or
xchg
pop
stos
enter
fldcw
jne
cmpsb
push
xchg
cmc
adc
mov
leave
out
inc
cltd
mov
clc
ds
sahf
test
mov
xchg
sahf
pop
test
test
cwtl
mov
inc
cmpsb
jp
les
and
mov
pop
sbb
outsl
movsl
repz
subl
sbb
mov
sbb
sbb
pop
jmp
cmpsb
out
mov
or
fisttpl
mov
xchg
sbb
sahf
pop
jg
sahf
test
scas
out
mov
mov
mov
cmpsb
cmpsl
andb
les
push
and
dec
scas
mov
loope
push
in
movsb
out
andl
push
insb
inc
add
mov
push
jg
jb
imul
inc
into
jnp
into
sbb
fwait
cmp
xchg
mov
cmp
ficoml
jg
sahf
fists
sahf
cmpl
xor
test
les
jg
and
scas
in
jnp
mov
push
clc
mov
scas
xchg
mov
pushf
popa
inc
xor
push
jns
and
xor
mov
mov
add
or
lock
xchg
mov
popf
xor
mov
xchg
dec
sbb
sbb
cmc
or
inc
xchg
pop
sbb
movsl
lcall
dec
mov
in
sub
movsl
lcall
push
inc
mov
cltd
sti
inc
nop
aas
sub
cmp
out
inc
je
pop
jne
outsb
mov
cs
aam
pop
cmp
sub
stos
mov
orb
cmp
xchg
xor
pop
pop
and
cmpsb
mov
ljmp
in
sub
stos
movsb
scas
outsb
test
imul
scas
cmpl
repnz
jbe
xchg
in
dec
pushf
push
pop
fwait
std
inc
xchg
insb
pop
pop
sbb
movsl
das
mov
xchg
into
cmp
aas
xchg
push
mov
insl
hlt
cmp
in
sbb
dec
and
cli
mov
ja
mov
shr
pop
movsl
lods
mov
mov
aam
add
pop
fidivrs
push
or
addr16
add
xchg
enter
xchg
xor
add
mov
enter
sahf
sub
jle
ss
shll
adc
adc
inc
adc
into
out
enter
scas
cmp
enter
mov
xchg
cmpsl
movsb
lods
das
test
leave
sub
inc
mov
stos
cmpsb
push
mov
inc
cmpsb
lds
mov
cmc
push
dec
cwtl
stos
fsubrl
jno
or
in
push
xchg
lea
jmp
das
push
stc
dec
mov
inc
out
xchg
cmpsl
loope
inc
out
movsb
ljmp
sub
addb
lret
mov
lcall
cmpsb
sahf
sbb
inc
mov
call
scas
popf
dec
push
ficoml
sbb
xor
scas
into
dec
lret
mov
popl
cli
icebp
mov
or
xchg
fwait
pop
and
push
dec
dec
jg
sub
incl
sti
mov
test
jae
sbb
pop
push
movsb
jecxz
scas
aam
mov
pop
jle
mov
lret
sub
icebp
ss
sub
push
xchg
push
lahf
sti
movsb
out
test
bnd
push
test
cmpsl
notl
std
cmp
xchg
mov
jmp
daa
sarl
mov
cmp
xor
out
hlt
jmp
push
mov
adc
or
xchg
push
movsb
cwtl
and
pop
movsb
mov
movsb
pop
sub
sti
or
pop
cmp
insl
inc
jmp
pop
insb
push
movl
clc
push
mov
enter
outsl
mov
fsubl
test
std
in
sub
movsl
out
adc
cli
mov
lods
jp
sub
into
hlt
inc
into
inc
xchg
clc
fmuls
negl
mov
movsl
jge
lret
jle
not
fldt
setb
jl
sub
xor
mov
movsl
dec
in
lods
movsb
addl
jbe
or
std
lahf
push
mov
mov
jle
mov
les
jmp
mov
movsl
mov
testl
mov
scas
cwtl
jle
movsb
mov
into
xchg
loop
xchg
aad
jmp
sti
enter
test
iret
mov
jnp
rep
lods
test
push
xor
mov
sti
adcb
xchg
push
lds
outsb
into
mov
fwait
cmc
mov
js
xchg
test
into
nop
sahf
mov
roll
and
notl
mov
out
idivl
xchg
fs
lock
jle
insl
xchg
std
call
mov
dec
mov
pop
mov
imull
call
into
iret
mov
cmp
mov
mov
lds
xchg
movsl
xchg
ja
pop
nop
mov
ret
push
and
das
xchg
jno
push
push
pop
sub
sti
enter
lret
cmp
lahf
lret
cld
lahf
aaa
int3
push
lods
lds
sti
leave
cmpsb
repz
ficoms
orl
jmp
sub
pop
lods
addr16
push
xchg
pop
push
loope
xchg
repz
in
stos
out
cmpsb
sti
sahf
pop
int3
adc
bound
pop
lahf
or
movsl
stc
lret
cli
fscale
movsb
and
repz
das
decb
push
cli
mov
push
enter
notl
sbb
push
sti
lds
movsl
mov
aas
push
jb
ret
jne
jne
cmpsb
mov
jne
nop
mov
lds
les
mov
dec
push
movsb
mov
pop
cli
test
movsb
ljmp
cmpsb
int
jle
cmp
dec
lahf
or
or
inc
jne
jp
daa
in
pop
mov
xchg
daa
mov
dec
insb
and
aas
rol
das
sub
imull
xchg
and
jl,pt
adc
fnstsw
pop
aam
push
cli
jle
xlat
pop
sub
jge
dec
pop
push
jno
push
cli
pop
jp
push
xchg
inc
mov
jmp
sbb
dec
adc
xlat
aad
roll
hlt
xchg
ljmp
jge
cmpsb
cmp
dec
ljmp
xor
pop
outsl
aam
std
sub
mov
scas
stos
jle
pop
sub
inc
int
repz
mov
test
insl
popf
push
test
movsl
xchg
pop
movsb
in
jne
cmpsb
xchg
cmp
xor
push
dec
xchg
mov
scas
mov
je
insl
test
push
aad
jmp
cltd
push
push
rcr
lea
xchg
sbb
jge
scas
mov
or
mov
mov
sub
mov
mov
mov
sub
pop
clc
xchg
test
dec
gs
mov
pop
sbb
lret
sub
jmp
adc
adc
cli
and
test
in
rolb
mov
jecxz
pop
pushf
and
and
testl
sub
xchg
ja
les
xchg
testb
mov
push
or
xchg
mov
in
les
and
aad
and
in
jg
mov
inc
test
and
pop
loop
repnz
xchg
lret
jge
into
xchg
fcmovnbe
add
push
sti
and
push
cltd
inc
sub
mov
sbb
cmpsb
or
mov
loop
push
xchg
inc
cs
adc
sahf
inc
or
and
shlb
stc
mov
jb
insl
cmp
nop
cmp
push
setle
into
xchg
inc
sub
xchg
lahf
je
jle
icebp
cmp
dec
xchg
cmp
and
and
jns
out
mov
out
jg
sbb
jno
fsubl
lds
mov
sti
lret
and
xor
mov
xchg
in
push
test
push
mov
fwait
cli
jg
insb
hlt
icebp
insl
sub
xchg
cld
cmp
rcll
frstor
outsb
test
mov
rorl
jmp
pop
sahf
xchg
insl
jle
cmp
nop
test
nop
mov
or
pop
sub
mov
and
xchg
pop
mov
sahf
xchg
jb
cmc
jg
pusha
or
pop
mov
mov
and
nop
mov
sahf
sbb
adc
hlt
gs
jle
out
out
jb
les
mov
call
decb
push
clc
unpckhps
aam
or
xchg
ja
inc
gs
add
or
or
inc
mov
clc
out
clc
inc
sahf
into
cli
testl
dec
push
pop
adc
adc
clc
pop
fimuls
mov
and
pandn
inc
push
aas
and
add
mov
push
push
into
sbb
bound
pop
xchg
pcmpgtw
sahf
in
xchg
mov
andnps
xchg
or
or
jb
stc
mov
pop
mov
and
out
ljmp
mov
hlt
mov
into
mov
loope
aas
and
xchg
ljmp
push
cwtl
push
pop
xchg
push
pushf
popf
xchg
add
mov
push
ss
dec
cmp
jg
dec
pcmpgtb
and
sbb
cmp
jns
pop
setl
mov
aad
clc
push
mov
sub
int3
xchg
fldcw
xchg
jo
pop
inc
ret
pop
sub
scas
cmpsl
lea
mov
mov
fs
pop
insl
cmp
movq
std
xor
aas
mov
out
cmc
loope
cli
mov
inc
xchg
mov
pop
inc
xchg
sahf
inc
movsl
rcrb
leave
psrlw
testl
cmpsb
pop
jg
cmpsl
pop
xchg
mov
cwtl
push
rcrb
lods
idiv
js
and
daa
movsb
setne
cwtl
or
fstpl
jnp
cmc
je
pcmpgtw
out
and
push
mov
shll
or
cs
pop
sub
movlps
repz
into
scas
xor
data16
pop
call
mov
cmpsb
pop
jg
inc
stos
inc
dec
movsb
pop
xchg
cmp
push
and
jno
int
xchg
mov
btr
add
std
popf
sbb
mov
hlt
int3
cmp
mov
fs
cmp
nop
shrl
mov
sbb
decb
sub
dec
sub
push
cmp
xchg
xchg
in
pavgw
xchg
sbb
xchg
mov
mov
jg
loop
jg
jns
xchg
adc
clc
adc
xchg
or
sbb
lock
push
movsl
jg
into
inc
movsl
aam
pmulhw
imul
lock
incb
cmp
or
jg
lock
dec
cmovp
iret
pop
jg
sbb
push
bswap
and
cltd
xor
orl
adc
pop
push
push
jg
arpl
cli
sbbl
dec
mov
out
cltd
xor
rcrb
mov
dec
pop
add
ret
test
pop
jae
cli
and
dec
xchg
or
cmpsl
adc
fcompl
jmp
aas
mov
adc
push
push
pushl
lret
out
and
cli
lods
push
adc
sbb
mov
inc
pop
and
or
and
and
daa
mov
add
inc
lahf
pop
and
cld
jp
push
mov
and
cmp
xchg
setp
push
push
mov
adc
mov
cmp
jp
ret
sbb
push
sarb
sub
scas
sub
pop
xchg
or
aaa
cs
std
sub
pushf
pop
and
ljmp
cmp
add
jno
inc
push
xor
add
push
inc
sbb
and
xchg
decl
dec
or
in
push
push
ljmp
push
ficompl
add
add
movsl
jns
push
andl
xchg
jmp
leave
cli
js
inc
ja
test
cmp
and
lods
push
movsl
push
mov
xchg
pop
sub
cmpsl
mov
push
mov
out
addps
adc
pushw
mov
mov
ja
dec
cmovo
jmp
sbb
mov
rclb
loope
sbb
sub
mov
mov
insb
lock
jmp
sbb
pushf
bswap
lock
sub
packuswb
mov
out
xor
sbb
xor
xchg
bound
cli
setl
xchg
dec
xchg
adc
pmulhw
xchg
rorb
jo
push
jle
sar
aas
and
xchg
cli
xchg
jb
pop
sti
inc
lods
cmp
ljmp
lock
int3
lock
decl
jg
cmp
lock
cmovb
pushf
cmp
xchg
xor
enter
shlb
dec
mov
bsr
pop
sarb
xor
sub
xchg
push
mov
jg
cltd
mov
inc
scas
sahf
xchg
push
mov
push
mov
push
sbb
mov
mov
decl
jg
test
addr16
cli
movsl
jb
pop
push
test
adc
cmp
mov
push
aam
jb
mov
push
cmp
aad
cmp
aas
mov
xor
in
ret
stc
mulps
cvtdq2ps
mov
bswap
mov
decl
dec
mov
repnz
push
adc
cmp
jg
punpckhbw
outsb
aas
aam
pmulhw
sbb
ja
stc
pushf
test
push
js
in
adc
pmulhw
sub
add
add
rclb
xchg
imul
pop
jl
jae
bts
in
jmp
xchg
shl
or
or
or
adc
xchg
mov
roll
and
jb
push
mov
dec
cmovs
cmp
dec
xchg
daa
cmp
push
out
lock
mov
adc
pop
xchg
push
adc
xor
fs
push
push
in
xchg
rolb
mov
mov
rdtsc
rcl
push
dec
punpckldq
call
cmp
cmp
push
bswap
xchg
mov
xchg
mov
push
prefetchw
hlt
shl
shll
pop
lock
add
push
xchg
aas
sti
shrl
pushf
in
xchg
pop
stos
mov
nop
push
sub
adc
push
and
inc
movsl
leave
adc
add
cmc
xchg
dec
inc
loop
add
cmpsb
add
dec
adc
adc
xchg
scas
nop
xchg
sbb
pop
adc
adc
sub
mov
push
enter
push
addl
push
push
dec
sub
mov
jb
mov
inc
lret
sub
ja
das
in
sbb
adc
ficoms
and
mov
adc
adc
out
clc
pop
aas
mov
shl
adc
fs
bound
push
sbb
xor
jb
and
push
repz
and
insb
mov
pop
adc
cmp
dec
ss
in
inc
mov
dec
pop
shll
adc
in
push
pop
es
ja
inc
inc
les
adc
sbb
jbe
sub
adc
test
enter
insb
or
adc
push
sub
mov
ss
and
insb
lea
sbb
lahf
mov
or
fisttps
mov
mov
inc
out
cmp
adc
mov
cmp
push
sahf
adc
or
cmpsl
adc
or
adc
mov
mov
cmp
mov
xchg
mov
mov
nop
enter
cwtl
ds
mov
aas
sbb
sbb
cmp
in
cwtl
mov
push
cmp
xchg
cwtl
test
cmp
push
xor
call
mov
xor
xchg
xor
out
mov
push
adc
mov
mov
xor
mov
cwtl
aas
incl
adc
xor
scas
xor
mov
adc
inc
sbb
xor
xchg
cmp
jae
xchg
cmp
call
adc
stos
cmp
sahf
xor
ds
cs
push
ss
adc
sbb
sbb
into
mov
cmp
cmpsb
repnz
cli
sahf
pop
jbe
test
cmp
adc
adc
fimuls
adc
mov
inc
mov
mov
scas
adc
cmp
enter
xor
pop
fwait
push
mov
sahf
cwtl
imul
loope
mov
and
or
lea
sbb
and
sub
xchg
ljmp
inc
cwtl
push
or
lea
stos
or
xchg
jae
bound
cwtl
push
rclb
xchg
cwtl
test
cmp
xor
adc
enter
cwtl
sbb
sbb
adc
adc
stos
adc
xchg
sub
enter
mov
xchg
dec
adc
clc
addr16
jp
stos
sbb
jno
inc
adcb
mov
push
push
adc
cmp
lret
ret
sbb
mov
cwtl
lds
adc
cwtl
lds
xchg
cmc
or
mov
adc
dec
mov
push
inc
clc
mov
out
in
inc
inc
idiv
mov
xor
cs
push
cli
in
jno
adc
je
push
jecxz
xchg
add
mov
push
xchg
adc
sahf
dec
fmuls
adc
adc
repnz
xor
and
jp
mov
lods
test
ret
adc
push
adc
and
adc
enter
sbb
pop
adc
add
and
sbb
and
lds
pop
pop
pop
adc
and
sub
std
mov
jbe
imul
inc
dec
push
pop
xor
cmp
fs
adc
rcll
scas
adc
and
je
sub
sub
xchg
mov
cwtl
xchg
dec
or
and
jb
inc
sahf
adc
push
pusha
lods
lahf
push
pop
rcll
lock
cld
pop
mov
or
vpcmpgtw
mov
in
lahf
push
insl
es
push
inc
pop
loope
jne
enter
stc
loope
jge
sub
test
adc
lea
fisttps
lods
or
dec
lea
notl
jo
mov
sub
jb
dec
xchg
push
push
xor
pop
popf
scas
es
popf
pop
clc
loop
scas
cmp
pushf
dec
adc
lods
scas
adc
lea
divb
adc
popf
mov
mov
push
pop
adc
xchg
jb
push
int
adc
cld
jno
or
and
subb
adc
lods
push
test
lds
jl
and
adc
adc
int3
xchg
adc
mov
movsl
fcomps
scas
dec
xchg
cmp
test
test
std
mov
lds
sbb
test
adc
cmpsb
mov
jns
or
xchg
or
adc
int
adc
mov
xchg
cmpsl
sbb
adc
cmpsl
inc
and
push
aad
adc
pop
mov
xchg
xlat
sbb
jo
lods
rcll
mov
push
out
xor
adc
sub
sub
mov
pop
sub
shll
sbb
and
test
xor
and
push
sbb
scas
xchg
adc
push
test
std
inc
dec
loop
inc
inc
push
mov
adc
or
lea
or
dec
es
movsl
pop
or
or
in
adc
movsb
xchg
xor
adc
jb
jle
adc
pop
inc
dec
adc
adc
arpl
fs
pop
inc
dec
stos
sub
sub
xchg
adc
xor
repnz
or
stos
sub
adc
jb
mov
pop
push
jl
or
adc
inc
xchg
test
aam
inc
dec
sub
adc
xchg
mov
lea
icebp
inc
push
xchg
push
lret
xchg
scas
cmp
push
cld
pushf
xchg
imul
cld
rorl
out
xor
mov
pushf
ljmp
push
clts
cmpsb
sbb
mov
outsb
daa
push
les
or
lock
inc
lods
adc
push
sahf
adc
aaa
mov
pop
dec
leave
inc
adc
mov
pop
adc
pop
add
sub
inc
sbb
outsb
jnp
cmp
mov
adc
dec
ljmp
lret
adc
xabort
sub
cwtl
dec
loopne
xchg
test
int3
sub
adc
or
rolb
cmpsl
aam
xchg
cld
mov
daa
lods
push
aam
imul
or
fimuls
xchg
stc
lret
aas
inc
fdiv
sbb
fstl
sti
fcoml
mov
into
mov
lock
fadd
cmpsb
daa
inc
mov
sbb
and
in
push
add
pop
in
pushf
lock
sti
dec
lea
in
cmp
daa
sbb
add
xchg
or
inc
hlt
std
test
xchg
jno
sti
hlt
sub
and
sub
push
jmp
cld
pop
sti
sahf
mov
jmp
daa
cmpsb
xor
adc
scas
or
test
sub
jns
dec
fwait
and
or
or
mov
pop
jb
daa
adc
xchg
and
inc
into
in
std
xchg
mov
aaa
cmpsb
daa
inc
sahf
adc
sbb
xchg
pop
sub
mov
cmc
into
xchg
jecxz
adc
test
and
insb
and
and
cmp
sub
adc
ffree
cmpsb
xchg
sbb
sub
mov
outsb
or
sub
adc
and
nop
xchg
les
inc
xor
mov
test
movsl
stos
adc
adc
cmp
stos
into
loop
cmp
ljmp
sbb
jl
cmovae
pusha
fs
sbb
sbb
inc
jl
popa
pop
dec
xor
mov
sbb
and
cmpsb
mov
push
rcrl
or
mov
xor
mov
pop
pop
pushf
stos
mov
and
adc
inc
es
adc
cmpsb
or
test
and
les
imul
push
pop
sbb
daa
cmpsb
xchg
and
mov
mov
movsb
sub
mov
mov
sub
mov
mov
dec
or
xchg
jnp
xor
xchg
scas
mov
cltd
daa
mov
std
mov
pop
mov
adc
lods
ds
xchg
mov
xchg
or
mov
fwait
lods
pop
inc
fwait
mov
mov
sub
inc
mov
adc
test
stos
mov
or
icebp
test
push
enter
mov
cs
push
mov
in
or
jae
scas
mov
mov
ret
jno
sbb
cmpsb
bound
adc
and
test
rcll
xchg
aaa
inc
fstpt
add
dec
fildl
xchg
add
inc
dec
push
adc
es
jnp
sbb
mov
sub
lds
hlt
popa
test
sub
test
sbb
sahf
clc
jmp
sti
push
jle
dec
es
push
sti
notl
cltd
inc
fstpl
sub
xor
lds
iret
adc
es
sub
pop
lret
push
add
sub
es
pop
pop
adc
sub
or
adc
mov
sbb
les
sbb
mov
in
aaa
and
xchg
adc
sub
push
sub
gs
cmp
or
xor
push
push
aaa
xor
xor
mov
sbb
sub
mov
cmp
out
lds
push
or
test
cmp
sub
dec
adc
mov
fs
sbb
jg
mov
push
and
sub
mov
mov
xchg
mov
xchg
adc
ljmp
and
cmp
mov
inc
pop
pop
jb
fldt
push
dec
es
es
add
xchg
nop
leave
je
mov
xchg
pop
insb
lock
test
push
sub
mov
pop
mov
stc
mov
jb
es
in
adc
mov
inc
mov
adc
lea
test
out
mov
pop
sbbb
nop
jecxz
dec
iret
jmp
cwtl
shll
mov
sbb
mov
and
or
loope
lods
xchg
inc
push
and
into
nop
jnp
in
or
mov
lcall
repz
dec
cmc
je
daa
adc
popf
pop
inc
fistl
mov
mov
mov
ret
roll
inc
in
shl
dec
lret
stos
push
jo
ss
xchg
addr16
adc
mov
ja
add
mov
mov
icebp
xlat
xchg
loop
ret
dec
inc
outsl
mov
cmp
lret
sub
cmpsl
pop
push
daa
out
lret
mov
sti
lret
cmp
mov
cmpsb
adc
rclb
mov
cmp
xor
xchg
es
mov
xchg
scas
lcall
adc
sbb
repnz
in
loop
dec
dec
dec
inc
popl
loop
jl
xchg
adc
ljmp
in
imul
or
pop
repnz
adc
pop
rclb
mov
pop
cmp
xchg
dec
jmp
es
test
adc
add
adc
add
loope
sahf
or
scas
adc
gs
out
mov
mov
push
leave
inc
pop
rorl
in
movsb
adc
adc
pop
adc
adc
sahf
scas
or
dec
adc
hlt
and
xor
xchg
sbb
sbb
mov
and
shlb
adc
adc
gs
xchg
dec
mov
xchg
dec
xor
pop
dec
xor
test
pop
test
and
push
es
les
dec
sbb
push
inc
jb
daa
mov
inc
dec
inc
decb
es
mov
dec
adc
cwtl
jp
cmp
push
cmpsl
test
icebp
xchg
pop
xchg
out
call
adc
adc
or
inc
popa
mov
ljmp
push
inc
mov
inc
imul
jno
mov
jno
es
loop
inc
push
pop
push
jns
lds
mov
jae
into
sbb
mov
pop
sbbl
adcl
ficoml
adc
adc
xchg
cwtl
lods
dec
push
xchg
mov
xchg
and
enter
cltd
add
cltd
lods
cmpl
mov
mov
cmp
rclb
out
adc
mov
cwtl
test
mov
xchg
xchg
bound
adc
and
gs
ds
or
in
mov
bound
rcll
scas
adc
scas
inc
sahf
and
into
scas
cmp
subl
and
inc
roll
inc
adc
bound
in
adc
and
inc
or
pop
out
test
into
adc
push
into
mov
xchg
in
loop
jmp
push
and
into
mov
and
out
cmovb
sub
adc
pop
lret
out
clc
loop
stc
adc
push
dec
adc
sub
pop
lret
and
sub
adc
les
pusha
adc
xchg
adc
arpl
iret
cmp
es
adc
mov
ret
pop
add
xchg
test
and
add
xchg
mov
xor
sub
aam
inc
cmp
mov
in
scas
xor
add
mov
mov
lds
mov
cmp
and
daa
faddl
add
test
adc
addl
ret
dec
dec
mov
and
pop
ficoml
clc
leave
dec
bound
mov
xor
jmp
pusha
in
fs
and
push
jno
or
jo
js
out
ljmp
xchg
nop
cmp
scas
inc
insl
das
add
adc
scas
rclb
loop
mov
sahf
mov
lahf
nop
dec
test
cmpsb
and
mov
test
iret
lock
pop
lea
adc
sbb
xchg
adc
cmpsb
mov
rcrl
mov
pop
jl
sbb
push
movsl
test
inc
ljmp
fists
pop
or
xchg
mov
sub
rclb
sbb
and
jo
enter
mov
ret
pop
adc
sub
cmp
xchg
rolb
sarb
mov
pop
sbb
dec
or
je
and
sbb
dec
xor
loopne
icebp
aam
and
mov
xchg
adc
pop
adc
sub
jae
cmp
jb
mov
in
outsb
xor
sbb
or
aas
and
into
bound
and
movzwl
les
jne
es
in
es
push
shlb
lds
inc
pop
daa
lods
and
pop
pop
bt
sbb
test
xchg
in
es
daa
push
mov
cmpsb
adc
jne
or
out
imul
cmpsb
mov
aaa
adc
xchg
xchg
rorl
aaa
cmp
aas
lahf
shrb
into
cmpsb
xchg
rorl
inc
push
js
aam
es
xchg
fcmovne
loope
push
mov
fsubrl
sbb
add
sub
int3
cltd
aad
push
adc
sub
into
bound
inc
sub
pop
xchg
fs
sbb
pop
push
shll
xor
dec
add
outsl
mov
mov
ja
inc
jp
xchg
inc
lret
jno
or
jg
pushf
test
arpl
repnz
adc
cmp
mov
in
mov
xchg
or
adc
inc
popl
mov
mov
or
xchg
xchg
dec
cmp
push
lds
mov
lahf
adc
xor
pushf
pop
cmp
mov
xchg
cmp
test
cmpsl
and
loop
jno
dec
inc
daa
adc
cs
dec
adc
mov
in
lods
pop
sub
icebp
mov
sahf
jbe
sub
adc
sub
mov
and
enter
iret
inc
lods
lds
into
je
adc
cmp
lods
test
shll
or
fbld
jne
scas
adc
daa
out
pop
xchg
or
lea
ret
and
cmpsb
xor
and
mov
sub
sbb
jmp
popa
or
in
xor
cmpsb
sbb
insl
es
mov
or
push
or
es
and
jle
paddsw
icebp
mov
cmp
lock
dec
in
fsub
push
movsl
adc
inc
and
push
mov
xor
sub
jb
inc
es
and
dec
pop
dec
xchg
mov
xor
ljmp
bound
out
movsl
jp
push
ds
cltd
shl
jp
adc
adc
inc
lea
adc
inc
jb
popa
roll
cwtl
inc
rcll
sub
cs
mov
popa
out
xchg
push
dec
es
xchg
or
and
inc
int
adc
es
sbb
and
dec
nop
sub
pop
enter
rcll
outsb
cmp
mov
adc
sbb
stos
shr
jbe
adc
loope
or
mov
jb
cmpsb
adc
movsb
es
sti
adc
sub
scas
mov
xchg
scas
mov
adc
int
call
mov
mov
xchg
adc
mov
sub
std
adc
ret
adc
sahf
pmulhw
movsl
inc
sub
pop
xchg
in
xor
pushl
add
mov
xor
jl
and
test
scas
sub
cmpsb
xchg
and
mov
add
loope
xchg
loope
mov
sbb
in
lahf
mov
and
clc
or
in
push
adc
fbld
lret
xchg
cmp
sbb
dec
in
adc
into
movsl
es
mov
cmp
adc
or
psrlw
cmpl
adc
rorl
enter
cmp
movsb
cmp
jmp
ret
sbb
dec
adc
xor
push
inc
nop
add
xchg
mov
fistl
mov
notb
xchg
test
inc
sub
es
testb
xchg
bound
in
aaa
daa
cmp
mov
adc
xor
scas
and
inc
mov
insl
or
dec
or
mov
enter
adc
test
sahf
je
jbe
dec
es
je
dec
adc
ja
adc
cmpsb
loop
and
mov
adc
xor
xchg
xchg
mov
xor
nop
into
enter
or
inc
cmp
cmc
lea
stos
adc
adc
sbb
inc
push
inc
scas
and
enter
or
inc
dec
mov
mov
es
ds
test
and
push
cmp
cmp
repz
pop
rcrb
pop
mov
lods
pop
lea
push
es
in
push
adc
sbb
je
adc
loop
adc
es
jne
xchg
xchg
sub
cmp
scas
xchg
mov
outsb
test
jae
mov
sahf
ret
and
and
jle
or
lea
jb
call
ror
subb
xchg
adc
xchg
xor
xchg
inc
jnp
xor
pushf
adc
pop
lcall
sub
sub
sub
adc
xor
movsl
pop
dec
xor
mov
lods
pop
test
pop
movsl
sub
lods
xlat
adc
ret
mov
xchg
test
cmpsl
mov
clc
test
push
in
cltd
adc
sahf
into
xchg
sub
mov
scas
jge
add
lret
aam
into
jo
pop
rcll
enter
push
aad
scas
xor
jl
aad
mov
es
outsb
out
push
adcl
popa
mov
in
adc
dec
adc
sub
adc
jg
movsl
in
adc
enter
pop
xchg
cmc
sbb
sahf
sub
adc
pop
inc
std
pushf
mov
std
loop
xor
dec
adc
adc
cmpsb
xor
dec
adc
sub
pop
inc
scas
popa
loop
push
and
scas
sbb
cmpsl
adc
pop
or
jno
sbb
movsl
adc
scas
adc
sbb
and
sub
xor
shl
bound
adc
fsubl
fsub
xchg
int3
mov
inc
in
fldl
ret
gs
out
xchg
test
and
cmpsl
push
adc
enter
test
dec
adc
adc
pop
adc
inc
scas
adc
hlt
push
shll
gs
dec
adc
inc
lcall
xor
cwtl
sub
enter
jl
inc
xchg
sub
out
test
loop
mov
aad
xor
pusha
adc
cwtl
movsl
mov
loop
in
cwtl
es
dec
adc
sub
iret
lock
cwtl
in
movsl
adc
xor
data16
push
jecxz
mov
loopne
in
cwtl
and
push
and
clc
bound
and
inc
daa
mov
inc
mov
in
cmp
into
sbb
xchg
pop
ds
mov
mov
mov
ret
adc
aam
bound
pop
cwtl
sbb
mov
cmp
xchg
enter
xchg
adc
cmpsb
fs
imul
aas
ret
adc
in
hlt
popa
cwtl
sti
in
and
pop
hlt
cmp
rolb
adc
jb
dec
adc
leave
cld
pop
push
inc
xchg
fsubl
push
cld
es
jb
jno
adc
xor
or
sub
adc
dec
lret
dec
adc
scas
nop
test
aad
lock
cwtl
bound
inc
sbb
cwtl
and
test
repnz
mov
and
sub
or
adc
pop
adc
cwtl
lds
cmp
sbb
es
xor
adc
mov
adc
adc
cmp
mov
dec
xchg
cmp
and
push
and
stos
xchg
or
mov
xor
dec
dec
maskmovq
negl
es
or
mov
adc
bound
dec
pop
xchg
adc
pop
loop
pop
sbb
sbb
arpl
push
xor
push
push
pop
testb
sbb
cmc
notb
sbb
outsb
inc
fidivl
mov
xor
fnstsw
and
in
popf
adc
push
inc
dec
rclb
ja
sub
test
pushf
ljmp
pop
mov
dec
ss
mov
dec
lods
push
pop
stc
push
push
mov
paddusb
xor
push
mov
mov
movsl
data16
jle
ret
lods
xchg
lods
insb
out
fbld
jno
movb
loopne
dec
into
ljmp
fiaddl
xchg
push
jns
jnp
lods
jo
dec
sbb
imul
mov
ja
fs
or
mov
push
jne
movsb
les
inc
inc
cmp
dec
adcl
inc
test
push
mov
jae
pop
movsl
sub
cmp
cld
scas
iret
adc
mov
or
scas
adc
insl
adc
scas
inc
fmuls
xchg
stc
add
insl
jle
movsl
dec
jl
adc
jne
dec
cmc
shrd
xor
inc
jge
jne
adcl
pushf
mov
popa
push
lds
xchg
sub
movsb
shl
fisubrl
sbb
movsl
gs
repnz
or
outsb
sub
cs
test
dec
push
les
jle
or
xchg
repz
dec
movsl
sti
movsb
cmp
sbb
cmp
sub
mov
or
push
push
xor
movsb
cs
jne
mov
add
mov
shlb
ljmp
bound
mov
sub
movsb
xor
mov
test
outsb
cmp
push
push
mov
gs
int3
xchg
test
movsl
outsb
cmp
je,pt
mov
xchg
xor
data16
leave
xor
mov
xchg
ficoml
push
aaa
jo
push
pushf
xchg
scas
ret
insl
push
fbld
push
cmpsl
repz
and
outsl
fcmovu
lods
sbb
stc
sub
aad
into
jmp
test
sub
out
mov
shrb
in
jle
imul
mov
popa
jmp
sbb
cmp
lods
dec
lret
or
daa
xchg
popf
mov
arpl
adc
rclb
mov
xor
imulb
lock
push
outsb
mov
repnz
lea
mov
push
movsb
daa
data16
sub
and
popf
pop
outsb
xlat
loope
test
hlt
cmp
jb
jl
xchg
push
mov
mov
adc
pop
cli
fistpll
sbb
insb
push
mov
pop
aam
iret
mov
ja
scas
fdivrs
xor
and
push
imul
xor
sahf
das
lods
push
jb
xchg
aaa
test
fisttps
scas
rcr
add
jae
adc
jecxz
mov
mov
jne
fstl
and
xlat
cwtl
adc
mov
jb
push
mov
mov
inc
repnz
xchg
push
into
addr16
insl
lahf
ljmp
test
jecxz
pop
lods
mov
and
fsub
std
adc
jb,pt
xchg
xchg
mov
pop
addr16
or
sub
inc
mov
inc
xchg
xlat
push
push
lea
xchg
push
jb
fcomi
sarb
cmpsb
push
in
add
lahf
mov
movb
hlt
test
mov
or
pusha
jge
cmpsb
imull
lahf
loop
xchg
int
lret
negl
in
cmp
jo
fcoml
es
mov
nop
xor
frstor
xchg
xchg
pop
cli
enter
push
sti
fsubl
xchg
into
iret
enter
leave
mull
incb
loope
fadd
mov
pop
fsubr
dec
pop
mov
jg
sbbl
idiv
rclb
inc
mov
and
xchg
mov
dec
and
adc
loopne,pt
gs
jne
je
cli
fstl
pop
out
test
rcrl
lcall
ljmp
mov
cmp
shlb
addr16
dec
push
xor
jae
fistpll
ret
cmp
lock
sarb
insb
pushf
lods
clc
cmp
inc
leave
decb
dec
ljmp
outsl
jle
mov
inc
and
mov
cmp
push
jl
cmpsb
sbb
mov
movsl
sbb
jg
xchg
or
or
adc
dec
into
jecxz
xchg
scas
idiv
push
out
xor
xchg
sti
push
std
pop
ljmp
ja
pop
ret
adc
in
scas
outsb
dec
lods
sbb
out
out
jo
jecxz
inc
push
pop
ja
mov
data16
mov
xchg
lret
hlt
mov
mov
pop
frstor
add
pushf
mov
cmp
popf
mov
pop
cli
cmp
and
sbb
push
push
or
stos
dec
inc
mov
jl
jmp
xchg
mov
fmull
cs
jl
fs
dec
and
adc
rcrb
incb
ljmp
dec
insb
lods
sub
cli
test
mov
ljmp
loopne
push
mov
scas
push
bound
test
dec
fisubrs
fldt
jl
shrl
push
std
sbb
jg
iret
popf
shrb
shrb
push
arpl
lea
push
sbb
aam
stos
enter
lret
enter
sub
dec
movsl
sub
stc
cmpsb
mov
xor
jne
ds
testb
outsl
int3
sub
push
orb
jp
pop
cli
xchg
pop
pop
insl
popf
dec
dec
test
jmp
int
mov
mov
and
xchg
cld
stc
pop
pop
mov
or
les
xchg
shrl
pop
mov
lcall
into
lock
and
lds
xchg
stos
sub
jg
cmp
pop
popf
sti
dec
jle
repz
out
mov
mov
outsb
aam
xchg
gs
mov
or
jb
out
inc
push
shrb
cmp
sub
popf
lods
pushf
test
dec
pop
out
mov
jge
mov
sub
mov
cld
mov
pop
pop
cmp
fcmovnb
cs
test
dec
and
pop
pop
roll
out
and
jno
adc
icebp
js
mov
pop
mov
jle
adc
lods
and
movsl
cwtl
sub
stos
mov
xchg
ud0
movsl
cmp
mov
leave
je
sbb
in
out
jmp
sarb
shlb
dec
cmp
imul
push
dec
jg
jge
sub
scas
xchg
push
mov
cld
incb
mov
stc
sbb
cmp
ss
pusha
jge
into
filds
push
enter
sbb
popf
lret
inc
jne
dec
gs
enter
and
pop
inc
test
popa
movsl
in
cmpsl
in
loopne
dec
mov
fldenv
gs
fstps
xor
rcl
jne
sub
sahf
repnz
inc
xchg
shlb
ret
out
jle
rcrl
loope
aam
in
jnp
push
fisubrs
mov
ds
ja
das
das
push
in
rclb
scas
xchg
out
mov
fsubrl
or
std
push
cmp
popf
inc
test
and
cli
in
fmull
jne
iret
xchg
jg
sbb
push
ljmp
in
and
loop
ljmp
mov
cwtl
mov
test
dec
or
dec
push
lods
or
pop
stos
dec
lret
movsb
stc
or
dec
iret
mov
mov
pop
loope
jle
sbb
in
in
call
sub
mov
sub
icebp
movsb
loop
lret
fcomi
call
lods
jb
ljmp
sub
cmp
imul
jle
movsl
push
repnz
fcmovb
sbb
cltd
rcr
lods
popf
mov
jns
ljmp
sbb
jge
lds
shrd
sbb
sub
mov
lds
dec
xchg
mov
inc
insb
xchg
test
stos
xchg
jns
sub
sbb
push
inc
sbb
outsb
inc
cmpsl
rclb
mov
in
push
scas
push
dec
popf
cmp
hlt
repnz
es
aad
xchg
shrb
cmp
lcall
and
mov
sub
je
mov
mov
mov
jae
ret
inc
je
sub
mov
in
hlt
outsb
je
dec
imul
outsb
push
out
xor
sub
nop
pop
xor
adc
loopne
push
ja
xchg
and
jae
or
icebp
mov
adc
cmpsb
jne
mov
xchg
stos
inc
imul
and
neg
je
lret
sahf
outsb
mov
push
inc
jbe
jne
jge
pcmpgtb
pusha
add
mov
sub
jne
in
mov
push
dec
bound
pop
pop
add
or
test
test
ficompl
inc
inc
lds
add
dec
ds
mov
mov
dec
jb
cmpsl
rcrl
jmp
push
scas
and
xchg
mov
jmp
cmpsb
ds
jne
xchg
repz
inc
jo
mov
dec
mov
xor
jmp
pop
jle
shll
pushf
mov
push
and
push
push
push
jle
and
or
cmpsb
mov
mov
xchg
xchg
push
inc
loope
dec
or
jge
and
jbe
sar
les
je
sub
xchg
fucomip
fsubs
je
outsl
jno
sbb
lret
adc
repnz
stc
sub
je
xor
mov
fwait
and
mov
push
xor
insl
ror
adcb
pop
xchg
dec
ret
mov
movsl
pop
jl
adc
rclb
adc
lret
cmpsl
addr16
inc
movsl
mov
push
xchg
cmpsb
mov
push
jle
lods
push
mov
jg
adc
sar
lds
aam
inc
pop
mov
pop
mov
dec
xchg
mov
xor
mov
cwtl
mov
jge
xchg
cmp
das
xchg
scas
test
sbb
mov
pop
cli
push
sarb
outsb
sti
nop
pop
mov
sahf
cld
mov
aaa
out
fdivs
and
hlt
outsl
addr16
xor
aas
xchg
stc
cmp
mov
insl
xchg
pop
mov
mov
dec
xlat
xlat
jmp
data16
dec
push
lods
or
sarb
sub
cmp
mov
out
rcrb
sbb
pop
jmp
xchg
jg
fstp
inc
sahf
cltd
aad
addr16
push
xor
es
push
je
insl
mov
pop
sarl
xor
std
sbb
or
adc
adc
push
pop
jmp
pushf
sub
popf
jecxz
sub
sbb
sub
dec
jne
rcrb
insl
test
sub
js
mov
int
adc
push
sahf
adc
pusha
inc
sbb
xor
test
or
incb
fldenv
adc
les
shlb
adc
jg
xchg
mov
jmp
adc
mov
insl
enter
cmp
hlt
push
mov
sbb
jmp
lods
xor
sbb
imull
insl
sub
jle
pop
xlat
aaa
mov
fdivr
xlat
outsl
xor
pop
mov
stc
or
mov
data16
adc
ljmp
lahf
cld
mov
pop
cli
ja
jge
and
ja
push
push
cmp
cs
imul
das
data16
daa
cmp
push
cli
sahf
push
movsl
repz
sti
dec
iret
mov
xor
ds
cmp
adc
aam
aad
aad
insl
xor
cli
inc
pop
mov
mov
je,pt
sub
mov
dec
jle
leave
or
orb
cmpsl
jp
cmc
and
pop
test
jle
gs
push
jge
pop
ja
jg
rcll
sbb
sti
fidivrl
pop
mov
push
mov
iret
mov
and
jmp
lods
mov
cmp
je,pn
leave
xchg
sarl
jg
mov
jb
mov
push
aaa
popa
rclb
jp
xchg
pop
leave
xor
je
cmp
mov
cmp
sub
rcr
pushf
mov
mov
cmp
out
stos
inc
arpl
in
int
lods
icebp
mov
adc
bound
std
mov
push
xchg
sahf
mov
test
lds
popf
xchg
repz
mov
inc
in
aaa
in
sub
sbb
das
movsb
cvtps2pi
test
ljmp
mov
cltd
aam
bound
ja
dec
movsl
mov
outsb
ds
cli
cmp
cli
leave
adc
inc
movsl
lds
pop
shll
adc
outsb
adc
lods
adc
mov
push
inc
mov
lods
dec
add
push
jne
fdivl
aad
jns
xchg
dec
imul
loop
bsr
ficomps
enter
inc
in
pop
movsb
cmp
movsl
je
mov
xchg
cmp
mov
cld
xchg
cmp
dec
scas
jle
push
xchg
push
inc
push
in
loope
dec
mov
cvtdq2ps
sbb
in
dec
fs
dec
add
imul
jge
cmp
mov
push
jl
popf
pop
pop
fstl
out
inc
pop
stos
xchg
xchg
jmp
cmp
mov
mov
or
adc
and
cmpsl
stos
inc
pop
jmp
pop
addr16
mov
dec
add
cmpsb
mov
adc
mov
leave
cld
push
jg
stos
punpcklwd
sub
push
es
jge
cmp
in
jmp
lods
push
and
xchg
pop
scas
lret
jne
or
movsl
lds
lea
mov
dec
aas
xor
imul
idiv
jl
hlt
test
jge
pop
cld
in
fs
imul
mov
mov
jmp
pop
cli
in
pop
scas
loop
pop
out
inc
mov
jne
pop
mov
jns
shrd
push
fimull
push
xchg
push
mov
lret
lcall
jg
test
and
inc
into
imulb
mov
pop
jge
shrl
cvtps2pi
int3
cmp
sub
lahf
mov
fbld
shr
push
sbb
iret
sarl
cmpsb
stos
shlb
in
fiaddl
xchg
and
leave
aad
mov
aaa
jo
sahf
into
cmpsb
scas
or
ficoml
mov
hlt
mov
jno
or
pop
shll
xor
daa
cmpsb
jnp
cmp
jne
xlat
aad
fs
call
jne
stos
mov
jb
test
adc
push
mov
push
jae
cli
lret
and
insl
sub
pop
sahf
leave
xchg
jmp
mov
cmp
add
jo
xchg
mov
into
adc
scas
sbbb
mov
sub
dec
addb
dec
mov
lods
dec
jmp
push
jg
push
push
or
cmc
dec
setbe
mov
cmp
mov
iret
into
call
pop
adc
addr16
pop
sub
rorb
ja
gs
inc
and
mov
aas
aas
sbb
pandn
int3
sbb
adc
mov
inc
inc
aas
adc
inc
int
jg
and
inc
inc
js
xchg
scas
cmp
repnz
aaa
hlt
mov
fstps
or
mov
mov
push
push
ja
cmp
std
sub
xchg
std
jae
cmpsb
jg
jg
scas
pop
xor
scas
sub
fistps
dec
sbb
jg
push
dec
and
cmpsb
and
sahf
test
sub
pop
xchg
divl
adc
cmp
xchg
in
add
cmp
es
adc
outsl
mov
and
xchg
cmp
xchg
dec
movzbl
movsbl
and
xlat
and
pushf
inc
push
cmp
nop
rcll
bswap
inc
pop
jb
xor
adc
movsb
push
into
rorl
pop
nop
dec
push
rorl
sahf
test
pop
ja
out
pop
mov
lock
movq
lods
or
cmpsl
rdmsr
cmp
xor
rclb
pop
mov
inc
test
loopne
sbb
loopne
mov
xchg
adc
cld
pop
loop
cltd
sahf
cmp
or
sub
seto
cmovae
inc
mov
jle
and
addl
movntps
dec
or
push
push
test
js
push
xor
aad
mov
std
and
cmp
insl
or
jg
push
add
nop
xchg
sub
lret
push
call
ret
mov
xchg
xadd
sbb
lcall
xor
enter
pmulhuw
loope
add
mov
adc
cvtdq2ps
mov
bswap
add
and
push
cmc
pmullw
sub
lgs
mov
push
jmp
sbb
mov
xchg
sub
sbb
cltd
mov
pop
sub
out
push
ljmp
std
lods
dec
push
dec
test
inc
setb
or
inc
addr16
or
inc
ja
test
mov
mov
lock
sub
bswap
movsl
adc
lss
jge
pop
push
jo
mov
sti
inc
or
add
aam
fs
pop
dec
push
push
ja
movsl
setns
pop
popf
inc
cmovo
and
les
inc
sub
inc
pop
sbb
adc
cmp
push
push
mov
push
xchg
shll
sub
aas
dec
cmc
enter
gs
jg
scas
cmp
sub
bswap
xor
sbb
lock
pushf
bswap
mov
rsqrtps
movups
imul
out
repnz
ja
xchg
jae
bswap
pop
rcrl
setb
test
enter
jo
push
nop
jl
add
fstps
dec
pcmpgtw
cmp
and
mulb
cmp
and
iret
hlt
jecxz
push
push
push
fnstsw
inc
sbbb
mov
cmp
push
and
or
push
loope
push
xchg
cmp
cmp
xchg
rolb
pop
repnz
sub
aas
addr16
out
xchg
sub
es
in
lahf
in
jmp
decl
lock
and
and
cmp
jnp
mov
cmovae
sahf
sub
pcmpgtb
movsl
mov
rclb
seto
mov
test
cmpl
dec
cmovs
mov
lahf
sahf
mov
out
pop
and
arpl
adc
or
rolb
mov
xchg
dec
aas
mov
cmc
test
sub
test
sbbl
lcall
sub
mov
lock
jl
rolb
in
stos
cmovge
daa
lret
loop
leave
data16
dec
cmp
mov
cmp
mov
push
push
xchg
and
lcall
imull
xchg
int3
pcmpgtw
psrld
dec
inc
xchg
sub
cmpxchg
lcall
mov
gs
dec
add
faddl
gs
cmp
pop
lock
loope
ss
cmp
in
dec
addr16
dec
push
mov
adc
sub
push
int3
mov
cltd
icebp
insl
pushf
ret
xchg
ss
pushf
jmp
xor
enter
jmp
sub
dec
mov
inc
sub
roll
incb
push
stc
push
aaa
scas
jnp
cltd
sub
xor
sub
xorps
pop
cmp
test
test
adc
mov
repz
fwait
shrb
push
inc
out
lods
out
mov
and
imul
jb
js
cmp
nop
xchg
jb
lds
jnp
cwtl
mov
sub
shld
xchg
pmaxsw
push
mov
cmp
rcr
dec
packuswb
fistps
cmpsb
jbe
push
cmp
inc
sahf
pop
jg
xchg
xchg
leave
movsl
data16
mov
mov
clc
aas
dec
sahf
cmp
xlat
psubusw
pop
push
and
orb
inc
shll
sub
push
and
lds
sti
test
xchg
pmulhw
push
sub
out
pop
inc
lods
cmp
pop
mov
inc
pop
sub
push
inc
push
sahf
cmovb
shlb
shll
stos
in
push
test
mov
test
je
or
mov
daa
outsb
xor
xor
adc
enterw
dec
pop
add
pop
xor
inc
inc
movsl
and
mov
ds
or
pop
js
das
jge
iret
repnz
fistps
jp
push
sbb
fildll
sbb
push
cmp
xchg
push
push
mov
test
aaa
vmread
adc
and
inc
pop
xchg
jbe
cwtl
mov
orl
repz
sahf
sub
mov
psubd
fstpt
sbb
paddw
or
and
sarb
mov
es
push
mov
lcall
mov
nop
movsl
sub
bswap
movsl
adc
pmulhuw
movd
xchg
lock
in
pushf
jmp
inc
pmulhw
out
jno
pop
imul
xchg
xlat
inc
iret
lahf
loopne
add
push
cmovo
xchg
push
xchg
seto
xchg
adc
pmulhuw
xlat
cmp
add
lds
test
enter
pmulhuw
xchg
loop
jb
xchg
adc
lgdtl
xorl
cmpsl
mov
push
aam
nop
xchg
sub
bswap
xchg
adc
lfs
les
adc
bswap
mov
cmc
pmulhw
add
cmovo
push
orl
fbstp
adc
inc
setns
sub
xchg
jg
ss
maxps
imul
sub
bswap
js
xchg
or
adc
out
adc
js
mov
xchg
push
sub
bswap
push
adc
movntq
call
jo
cmp
cmp
pop
push
xchg
adc
mov
cmpsb
ja
cld
leave
mov
and
pop
sahf
loopne
mov
push
lahf
loope
mov
imul
inc
xchg
and
mov
bound
cmp
stos
push
xchg
es
fisubrs
lret
jno
fisubl
fwait
daa
scas
cmp
call
cmp
das
push
or
mov
adc
push
inc
xor
adc
ja
xchg
mov
xchg
gs
in
xor
push
ret
enter
push
mov
cmc
push
push
inc
into
and
or
jg
inc
jecxz
mov
and
sub
or
inc
outsl
test
mov
sahf
bound
pushf
adc
mov
sahf
mov
adc
xor
mov
mov
adc
adc
out
xchg
xchg
and
or
adc
dec
xchg
and
adc
in
sub
mov
and
in
xchg
mov
jge
adc
rclb
rclb
mov
sub
dec
ss
or
push
jnp
nop
test
scas
cmp
or
sub
es
mov
dec
adc
mov
adc
out
sub
adc
stc
mov
adc
ret
mov
fiaddl
cmpsb
cld
testl
push
test
jns
inc
in
pop
adc
and
push
adc
test
jns
shl
daa
out
pop
jb
je
dec
imul
test
push
bound
adcl
adc
in
stc
push
or
mov
xor
adc
add
inc
push
push
aas
cmpsb
scas
movsl
or
adc
mov
and
or
or
xor
push
push
subl
jecxz
sbb
mov
dec
xchg
dec
adc
mov
adc
les
add
cmpsb
adc
adc
enter
cs
add
mov
push
ss
add
xor
sub
or
mov
ds
jb
xchg
nop
into
inc
cmp
inc
into
adc
inc
push
push
jae
in
shll
dec
dec
adc
or
stc
xchg
dec
adc
dec
pop
stc
loope
adc
mov
daa
scas
fs
mov
and
pop
in
xor
sbb
aas
and
push
and
pop
adc
daa
push
adc
mov
xchg
xchg
inc
outsb
out
jo
xchg
pop
test
add
daa
test
and
sub
adc
les
andb
adc
xchg
xor
jle
and
sbb
xchg
mov
adc
xor
adc
or
pushf
xor
xchg
cmovb
sub
dec
xor
lret
jb
es
into
sbb
dec
push
inc
adc
sub
xchg
cwtl
push
jecxz
nop
test
scas
cmp
test
shl
xchg
xor
sub
dec
mov
adc
mov
jb
pushf
adc
add
in
add
imul
push
jle
mov
lock
cmp
adc
adc
mov
scas
adc
and
adc
out
lock
cwtl
mov
cltd
test
dec
adc
inc
adc
out
xchg
aam
int3
fadd
inc
out
xchg
aam
inc
adc
divb
and
imul
push
jb
sbb
movsl
or
adc
out
mov
add
inc
push
clc
shrb
sti
add
das
aad
or
es
cmpsl
adc
ret
and
enter
adc
mov
andb
sbb
sub
movsb
or
js
cmpsb
or
push
and
sbb
lds
cmp
pushf
adc
rcpps
pop
adc
mov
test
cmpsb
dec
xchg
push
sub
es
into
add
adc
test
shr
or
test
and
in
lcall
and
fisttpll
aas
mov
sub
mov
es
dec
adc
push
xchg
aam
int3
or
sub
hlt
and
push
pop
adc
scas
mov
push
mov
mov
cmp
xor
fldenv
xchg
push
adc
xchg
aam
and
xchg
adc
adc
mov
cmp
aad
and
adc
jge
cwtl
push
cmp
sbb
enter
imul
nop
mov
lret
sarl
enter
imul
adc
or
xor
inc
sahf
adc
cld
mov
dec
dec
lock
ljmp
mov
test
or
daa
or
mov
test
mov
sar
mov
and
xchg
or
lea
sahf
les
cmp
xchg
mov
xchg
insl
aad
lock
or
inc
into
fs
cmp
adc
sub
cmpsl
adc
mov
push
adc
cmp
cmc
movsl
adc
push
and
in
loope
pushf
xor
into
lret
adc
or
xchg
add
xchg
xchg
cmp
adc
fcompl
adc
jae
nop
mov
adc
data16
fwait
jae
mov
mov
sbb
adc
into
xchg
adc
popf
xor
and
test
and
test
pop
in
test
sub
mov
xor
es
bound
adc
and
pop
popa
dec
adc
mov
mov
enter
push
push
in
xor
imul
mov
adc
repz
xor
mov
cmpsb
or
lea
scas
aad
cmp
xchg
aad
das
nop
gs
mov
sbb
adc
loop
adc
pushf
sbb
sub
sub
sub
add
sbb
inc
xchg
insb
repz
sub
adc
out
sub
les
jae
inc
loop
mov
ss
push
push
sahf
dec
sub
sarb
adc
sbb
xchg
in
inc
lods
adc
and
pop
mov
adc
push
mov
adc
sub
fcoml
sub
cwtl
sub
push
int3
adc
mov
pop
repz
and
pop
repz
bound
mov
pushf
adc
jb
icebp
adc
es
in
scas
cmp
in
imul
adc
and
test
hlt
adc
sar
test
add
out
mov
roll
dec
lds
or
push
adc
push
xchg
into
pop
scas
and
mov
xchg
les
mov
push
inc
xor
aas
test
cmp
and
pop
fisttpl
mov
pop
push
shll
leave
adcl
mov
and
cmp
push
enter
lret
adc
mov
xchg
mov
push
push
mov
xchg
pushf
push
push
inc
dec
mov
dec
or
mov
push
lods
inc
inc
push
mov
pop
or
jecxz
sub
aaa
arpl
arpl
les
imul
or
pusha
jae
adc
jnp
insl
or
adc
enter
xor
xor
and
sub
xor
inc
add
xor
fwait
cmp
xchg
mov
xchg
jne
dec
in
or
mov
adc
push
das
mov
gs
xchg
xchg
es
and
mov
mov
pop
push
push
mov
mov
sub
mov
or
add
ror
push
stos
dec
adc
int3
call
or
ffreep
adc
stos
test
xchg
rclb
cmpsb
or
roll
inc
cmc
fistl
sahf
inc
fistl
jno
test
jmp
mov
pop
and
repz
and
sti
pop
pusha
sti
test
add
and
pop
mov
sub
xor
inc
adc
mov
mov
mov
pop
scas
adc
adc
add
adc
xchg
test
mov
or
gs
inc
jne
adc
and
xor
xor
mov
push
push
push
adc
scas
divb
out
inc
movsb
push
repz
sahf
lret
sbb
inc
loope
push
ret
bound
jp
in
in
adc
inc
xchg
adc
xor
lret
lds
adc
bound
and
jb
sbb
or
sub
into
xchg
es
inc
adc
xor
scas
and
pusha
imul
adc
dec
cmp
icebp
jp
xchg
mov
inc
daa
sub
mov
into
movsl
push
mov
xchg
xchg
xchg
int3
int
inc
mov
and
lods
ret
inc
lcall
mov
lods
add
stos
or
cmpsl
mov
adc
mov
inc
movsl
adc
xchg
mov
push
ljmp
mov
ret
lret
jns
adc
and
shlb
adc
or
popa
cmp
dec
adc
xchg
xchg
mov
sbb
cmpsb
mov
in
inc
stos
loop
pop
push
and
ljmp
ljmp
cmp
pop
stos
cli
adc
and
add
add
dec
adc
xchg
mov
push
inc
cmpsb
adc
or
pop
popa
mov
or
lods
sbb
adc
sbb
and
call
sub
xor
les
xor
adc
cmp
mov
xchg
mov
inc
jb
sbb
mov
les
mov
pop
or
dec
pop
mov
mov
pop
jae
or
std
push
xchg
adc
push
in
test
pop
adc
and
bound
adc
jno
inc
cwtl
adc
jno
mov
mov
sub
add
push
inc
xorl
inc
mov
xchg
or
xor
lods
aam
cltd
mov
cltd
or
jne
sub
ret
push
inc
test
les
mov
push
inc
mov
inc
mov
lods
inc
inc
shll
shrl
xor
adc
or
shll
dec
or
rcll
js
pop
int
test
fsts
and
test
jmp
push
and
icebp
pop
dec
pop
adc
out
lahf
stc
sub
mov
adc
outsl
adc
adc
and
sub
or
push
mov
xchg
mov
adc
xor
xchg
mov
adc
adc
es
jl
icebp
sbb
pop
popa
into
mov
outsb
sub
and
and
cmc
sub
sub
jecxz
lods
aaa
dec
cmp
sub
sarl
lods
and
inc
or
dec
sub
adc
pusha
inc
dec
mov
push
or
add
adc
lods
mov
pop
or
inc
pusha
sub
xchg
pusha
lods
out
push
lds
cwtl
aam
jo
test
and
adc
lods
ret
mov
orb
arpl
lods
add
mov
cmpsb
nop
sub
pause
mov
or
xchg
cwtl
test
lods
cwtl
test
mov
test
sub
adc
test
jo
adc
cmp
adc
push
and
adc
and
test
sub
decl
pop
shrb
mov
in
lods
xor
mov
fmuls
rcr
sub
es
jae
loopne
shl
les
sub
popa
call
lock
add
lods
push
inc
clc
mov
clc
or
icebp
clc
sub
inc
and
push
xchg
stc
xchg
nop
sahf
mov
wrmsr
test
jno
test
pop
andb
unpckhps
pop
cvtpi2ps
ret
pop
andps
pop
daa
push
and
mov
inc
push
add
push
das
andb
aaa
cvtpi2ps
inc
aaa
andps
xchg
aas
push
loop
aas
ss
inc
push
addl
inc
rolb
or
jnp
inc
xcrypt-cfb
cmpsl
and
adc
sub
addr16
andps
mov
pop
rcrb
inc
push
addr16
andb
outsl
cvtpi2ps
inc
outsl
andps
adc
mov
inc
xor
or
add
jg
sub
daa
xchg
push
adc
test
and
inc
push
bound
xchg
addb
unpckhps
xchg
cvtpi2ps
movsl
lahf
andps
repnz
push
inc
and
out
es
inc
push
xor
jne
or
add
mov
sub
ja
andps
les
mov
pop
push
mov
push
iret
pop
aas
push
and
mov
cmc
xlat
jne
or
jecxz
push
aaa
and
test
inc
push
shl
jne
or
add
jne
adc
jne
or
add
decl
sub
push
push
andps
mov
and
inc
push
inc
push
xchg
push
jne
or
lock
jne
or
add
repz
es
int
mov
repz
adc
sahf
mov
push
scas
ja
adc
dec
sahf
jbe
xor
lret
adc
enter
and
inc
or
add
loope
dec
or
inc
pop
cli
push
test
and
fs
and
jo
mov
mov
outsb
adc
popa
ljmp
adc
icebp
movswl
sahf
dec
dec
les
dec
sub
leave
fcoml
cmp
lcall
jle
pop
and
push
cli
adc
xchg
pop
dec
lods
sub
hlt
adc
push
sub
xchg
mov
mov
call
in
sbb
jmp
imul
jae
and
adc
mov
js
push
xchg
int
das
movsl
jns
leave
leave
cmpsb
dec
mov
inc
inc
scas
adc
push
out
fsubs
int3
sbb
mov
sbb
add
sbb
or
mov
repz
negl
lret
repnz
mov
jmp
lods
push
adc
and
xchg
call
outsb
cwtl
mov
inc
xor
jmp
icebp
gs
adc
or
popa
jns
cmp
mov
and
lret
notb
mov
repnz
sbb
inc
push
addl
dec
cmp
mov
cmpsl
daa
shrl
add
mov
or
insb
or
cltd
sub
imul
dec
bswap
push
dec
xchg
or
es
addr16
sbb
mov
les
into
mov
push
cmpsb
pop
sub
adc
xchg
xor
sub
mov
into
test
sub
xchg
pop
repnz
push
jns
into
cmp
sbb
xchg
out
adc
inc
adc
mov
dec
and
adc
loop
or
stos
sub
xchg
sub
adc
inc
dec
mov
xchg
in
pop
in
xor
xor
or
inc
gs
cmp
and
dec
xor
das
insl
cmp
inc
jb
leave
adc
jb
sbb
and
push
movb
xor
push
stos
push
xchg
sahf
cld
pop
cmpsl
adc
mov
sahf
in
mov
mov
or
mov
fwait
sub
sbb
add
call
cmp
xchg
enter
push
popf
in
xor
xor
or
adc
xchg
mov
inc
sub
xor
mov
aas
and
mov
test
inc
xchg
adc
mov
push
xchg
mov
aas
inc
int
mov
xchg
mov
bound
jp
pushf
xor
jp
cwtl
sbb
dec
test
adc
adc
in
adc
loop
sbb
xchg
ret
adc
push
xchg
push
out
std
cmp
xchg
lret
ret
sbb
scas
sub
adc
mov
sbb
mov
adc
rcll
push
adc
sbb
adc
or
inc
sbb
xor
decl
inc
and
mov
xchg
xchg
sub
nop
sahf
enter
xor
push
push
adc
loop
xor
fistpll
cmpsb
fwait
daa
xchg
sub
movsb
in
add
lret
jno
or
inc
inc
enter
push
xchg
xchg
xor
push
mov
xchg
pop
mov
jg
and
pop
in
xor
dec
mov
lahf
fs
sbb
xchg
xchg
cmp
xchg
xor
xchg
lock
jb
dec
adc
and
call
adc
cld
xor
stc
or
roll
adc
cld
lods
cmpsl
adc
mov
stc
jno
daa
fistl
sbb
out
pushf
jns
or
lea
cmpsb
enter
or
inc
movsb
enter
push
lods
out
lock
or
inc
mov
out
or
pop
xchg
bound
adc
pop
imul
nop
and
or
lea
xor
mov
or
lea
ret
adc
aam
xchg
sbb
fsubs
xchg
xor
into
in
adc
mov
adc
loope
into
or
inc
in
test
push
aas
mov
adc
jecxz
xchg
xor
mov
cld
jns
or
inc
cld
enter
sub
xchg
out
in
inc
add
mov
sbb
and
inc
cmpsb
xor
adc
and
pop
or
unpckhps
sbb
test
and
mov
or
jne
or
add
sub
sub
dec
xor
push
push
fwait
adc
cmpsb
jo
call
inc
cmp
xchg
mov
xchg
fiadds
xor
sub
scas
or
inc
dec
enter
push
mov
bound
push
inc
into
and
pop
sbb
mov
adc
mov
and
sub
xor
mov
or
mov
and
pop
push
adc
adc
scas
xchg
insb
add
adc
sbb
push
and
or
xchg
inc
and
lret
fwait
push
out
cltd
lea
testl
adc
xchg
cmp
hlt
xor
push
scas
adc
lea
mov
sub
add
mov
mov
push
lret
sbb
inc
sub
xor
and
out
jo
pop
rorl
sahf
xchg
sti
movsb
addr16
push
mov
enter
or
inc
fcmovne
or
sbb
jecxz
mov
in
in
xchg
adc
xchg
int
in
xor
push
dec
cmpsb
mov
adc
repz
mov
cmpsb
and
adc
and
incb
push
pop
xchg
testb
dec
adc
test
adc
sub
push
sub
adc
in
and
adc
sub
pushf
adc
adc
sbb
scas
sbb
jb
inc
enter
nop
sbb
mov
push
imul
outsl
or
adc
or
adc
clc
bound
sbb
lcall
stc
rcll
int3
or
adc
adc
add
out
inc
sub
xchg
cmp
mov
sahf
xor
jle
mov
xchg
jnp
es
push
in
sub
push
cmp
xchg
mov
inc
and
mov
add
and
or
clc
pop
lahf
xchg
pop
adc
nop
inc
scas
push
adc
rclb
cld
inc
mov
dec
sbb
into
dec
dec
mov
daa
stc
and
outsl
sub
jp
dec
je
dec
gs
mov
adc
sbb
sbb
xchg
mov
jns
or
lea
ret
ja
mov
sbb
adc
sbb
xchg
adc
mov
or
test
pop
lcall
add
mov
movsb
mov
enter
xor
in
stos
imull
cmp
xchg
mov
nop
into
enter
or
or
or
leave
test
aas
mov
aaa
imul
mov
mov
jb
cmp
pop
movsl
es
loope
rorb
or
add
fimull
sub
fimull
push
and
ficompl
loop
mov
adc
dec
mov
fsubrp
dec
shlb
sub
cmpsb
dec
lahf
insb
movsb
dec
repnz
mov
sbb
sub
insl
cli
lods
mov
add
les
sub
test
lods
std
inc
or
xchg
adc
mov
sbb
fstps
sub
sub
and
sbb
push
mov
sub
mov
xor
les
scas
sub
stos
adc
adc
xor
sbb
outsb
addr16
inc
sub
xchg
mov
out
dec
push
jb
inc
cmp
mov
sub
into
inc
xchg
fmul
enter
cmp
jecxz
jge
pop
into
into
push
mov
pop
sub
int
push
popa
adc
mov
mov
test
adc
lods
pop
inc
imul
xchg
aam
scas
xlat
cmc
jns
adc
test
lds
cmp
test
adc
mov
pop
iret
pop
test
mov
sub
js
andps
int
push
sbb
xchg
outsb
cltd
inc
push
mov
pop
xchg
sub
pop
mov
mov
test
inc
push
lahf
mov
test
mov
xchg
aaa
or
mov
xchg
mov
fimull
dec
in
mov
cs
rcll
mov
cli
xchg
cmp
dec
adc
adc
leave
iret
xchg
cld
popa
xchg
imul
or
pop
and
sar
pushf
adc
outsl
lock
or
inc
jmp
push
shll
dec
adc
cmpsb
and
dec
stos
ret
sbb
sbb
cmpsl
adc
stos
sbb
and
sub
gs
cmp
sbb
les
inc
pop
nop
pop
test
or
cmpsl
adc
ret
and
or
inc
imull
ljmp
and
mov
mov
fcoms
xchg
lds
sub
push
and
pop
into
xor
mov
xor
outsl
cmp
aas
or
mov
xchg
adc
or
sub
inc
xchg
adc
and
dec
mov
xchg
dec
cmpsl
clc
fs
imul
nop
adc
or
inc
test
pop
sub
das
pusha
lods
jl
pusha
mov
pusha
or
sbb
push
test
movsl
adc
pop
xchg
push
cli
js
bound
adc
and
sbbb
test
mov
mov
in
cmp
sbb
xchg
jb
int3
adc
clc
sbb
test
pop
mov
mov
push
test
adc
xchg
mov
inc
sub
xor
inc
and
inc
mov
aas
rorb
lods
cwtl
push
mov
xchg
cwtl
mov
adc
xor
sub
enter
rcrb
adc
adc
or
inc
fcom
cwtl
mov
adc
cwtl
pop
loopne
adc
cwtl
adc
cwtl
stc
call
sub
out
lock
in
adc
lock
stos
or
and
lea
pop
sub
adc
xor
repnz
sbb
into
and
out
mov
inc
mov
mov
mov
push
test
mov
fsubr
xchg
adc
addr16
insb
lcall
das
pop
pop
lahf
dec
or
das
pop
push
adc
pop
test
and
pop
push
sbb
inc
pop
mov
inc
mov
cmova
adc
sub
test
pop
pop
cmpsl
int
dec
es
push
pop
pop
cmpsl
xchg
int
es
xor
es
pop
xchg
loop,pt
ficoml
lcall
addr16
pop
fbstp
push
adc
addr16
test
and
push
imul
pop
test
ja
or
sbb
jg
pop
mov
inc
lcall
pop
adc
sub
mov
xchg
pop
test
and
inc
pop
mov
data16
cmpsl
pop
push
adc
test
and
inc
pop
mov
inc
scas
mov
or
push
dec
and
inc
pop
mov
inc
ds
mov
jb
mov
dec
in
add
pop
sub
sub
pop
push
imul
repz
mov
adc
or
inc
or
cmpsb
mov
inc
pop
out
or
add
out
pop
not
int
es
jl
cwtl
out
pop
push
adc
notl
test
and
pop
push
test
pop
adc
sub
jl
pop
push
imul
sbb
push
out
ret
pop
adc
dec
loope
push
pop
or
je
and
inc
es
push
mov
mov
daa
cs
inc
push
enter
push
pushf
bound
xchg
test
aad
and
inc
adc
lret
adc
imul
push
sahf
adc
inc
enter
push
dec
imul
adc
nop
dec
mov
in
cmp
test
cmp
jbe
in
xor
pop
dec
es
movsw
adc
adc
lcall
xor
outsb
cvttps2pi
adc
jbe
adc
test
jbe
dec
mov
jbe
fidivrs
inc
jle
mov
in
cli
and
or
cmc
jmp
push
test
cmp
cmp
movl
sbb
cmpsb
es
es
jl
sbb
cmp
or
icebp
push
dec
cwtl
or
xchg
pop
adc
scas
xchg
ds
xchg
dec
push
adc
ljmp
fs
cmp
mov
mov
pop
ja
in
sub
adc
and
popf
int3
xchg
adc
xor
into
sbb
nop
cmp
nop
xchg
enter
les
adc
cmpsb
xchg
dec
mov
daa
mov
add
in
out
push
adc
and
out
fbld
out
sub
out
cwtl
insb
es
lret
insb
cmp
cmp
mov
testb
xor
fwait
loop
xchg
cmp
mov
lahf
pop
add
adc
pushf
adc
add
into
popf
shl
into
sub
sbb
adc
mov
fdivs
sahf
adc
cmp
inc
movb
adc
inc
sbb
cmp
adc
clc
or
sbb
xchg
loop
sbb
cmp
dec
inc
and
sub
bound
sarb
enter
cwtl
das
push
xchg
fistpl
jl
mov
cld
xor
xor
or
inc
pop
rorb
adc
push
and
and
or
xor
inc
imull
lods
insl
adc
es
cli
adc
popa
stos
dec
jne
adc
scas
xchg
fwait
mov
and
or
lea
into
fiadds
sub
push
inc
sbb
xor
xor
xor
out
bound
mov
push
inc
popf
pushf
imul
pop
adc
test
adc
adc
movsl
hlt
in
pushf
adc
cmpsb
and
adc
mov
pop
inc
es
adc
dec
adc
adc
jb
adc
lds
inc
scas
and
loop
sahf
sbb
inc
cmp
mov
loop
xor
dec
adc
xor
cmp
clc
mov
adc
adc
and
xchg
sahf
mov
rcrb
and
in
negb
daa
and
in
push
cli
mov
xor
jb
es
cmc
xchg
mov
mov
and
std
cmovns
dec
adc
or
xchg
add
mov
lea
xchg
les
fistpl
inc
pop
adc
adc
cmpsb
cmc
bound
leave
mov
mov
and
push
adc
adc
and
mov
sbb
cmovg
xor
mov
jl
bound
cmp
dec
adc
adc
out
xchg
dec
cmp
call
cmp
pushf
xor
jb
into
lock
mov
adc
hlt
popf
daa
push
adc
sub
popa
mov
jb
inc
stos
xchg
xor
pop
or
mov
and
cwtl
lds
ret
shl
cmp
mov
and
imul
sbb
inc
insb
fucomip
es
pop
je
in
inc
insb
sub
mov
mov
xchg
add
dec
push
ljmp
int3
repz
sub
in
sub
cmpsb
lods
mov
clc
std
mov
jge
test
lret
shll
stc
mov
push
dec
xchg
mov
or
xchg
fldenv
or
inc
pushf
lahf
shlb
or
mov
dec
pop
lods
movq
xchg
jo
test
mov
sbb
popa
xchg
cmp
loop
sbb
adc
adc
bound
mov
pop
or
lea
mov
sahf
sbb
movsl
adc
popa
mov
cmpsb
adc
adc
popa
mov
cmpsb
adc
adc
bound
mov
scas
bound
test
mov
add
xchg
scas
mov
xor
test
and
push
adc
adc
cld
cmp
out
inc
lea
mov
mov
shlb
push
adc
adc
ret
and
cmc
sbb
dec
mov
sbb
inc
sbb
xor
filds
xlat
sub
test
sub
or
add
xor
sub
adc
pop
push
adc
pop
test
and
pop
push
jmp
push
inc
pop
adc
sub
testb
adc
pop
test
and
push
in
inc
pop
mov
inc
test
or
add
arpl
sub
jae
pop
push
adc
arpl
test
and
push
popa
imul
mov
pop
test
jae
or
add
jnp
sub
icebp
jnp
push
adc
pop
test
and
inc
pop
mov
inc
orb
pop
adc
sub
jbe
pop
push
adc
fwait
pop
test
jb
test
mov
mov
stos
pop
sub
push
stos
pop
push
adc
and
es
int3
loope
mov
mov
ret
pop
sub
add
push
push
rclb
ret
adc
repnz
jno
and
sahf
or
lea
cmpsb
les
cmp
and
bound
push
inc
and
jmp
and
fs
imul
nop
and
or
xor
pushf
xor
add
and
sbb
sbb
sahf
mov
xor
inc
scas
adc
add
xchg
mov
bound
and
inc
or
jg
inc
xchg
pushf
mov
sbb
xchg
xor
mov
jo
and
mov
inc
cmp
xchg
les
xchg
mov
inc
scas
and
dec
or
and
dec
or
dec
adc
in
inc
adc
pop
push
mov
ret
xchg
es
movsl
adc
loop
sbb
sbb
adc
in
add
jbe
into
dec
push
pop
adc
adc
rcll
inc
jb
xor
xchg
adc
cmp
sbb
in
mov
and
out
lods
dec
jnp
or
andb
sahf
sbb
adc
scas
mov
mov
or
lea
xchg
out
mov
outsb
mov
and
mov
es
into
jge
dec
or
lcall
and
dec
arpl
icebp
xchg
mov
lret
icebp
xabort
stos
cmpsl
js
lea
cltd
xchg
cwtl
mov
adc
std
push
mov
rolb
sahf
adc
adc
shrl
rcll
scas
loop
ret
mov
fs
adc
test
lret
cmpl
xchg
mov
or
test
mov
pop
mov
scas
or
adc
mov
mov
mov
mov
or
fs
add
cwtl
loopne
adc
lds
cmp
jno
adc
jle
mov
in
pop
adc
add
insl
adc
or
in
adc
xchg
jae
mov
bound
inc
xchg
cld
dec
sbb
mov
repz
insl
es
out
xchg
and
dec
xor
fisubl
imul
or
cmp
imul
xor
push
or
adc
in
cmp
push
sbb
sbb
push
in
in
adc
leave
lods
dec
pop
adc
or
out
cmp
add
mov
pop
adc
aad
pop
popf
mov
mov
push
add
pop
imul
fs
mov
adc
mov
xchg
or
repnz
xchg
hlt
scas
adc
mov
mov
xchg
add
mov
xchg
push
adcl
or
adc
add
adc
rorl
mov
adc
add
add
inc
mov
mov
rcll
nop
rcll
or
bound
repnz
scas
mov
adc
nop
mov
mov
scas
add
mov
rorl
enter
adc
add
in
leave
js
xorl
jle
rorl
mulb
filds
mov
fsts
fiaddl
add
cltd
mov
loope
adc
nop
rcll
or
mov
adc
dec
icebp
insl
adc
rcll
sub
stc
adc
adc
mov
mov
or
adc
add
add
rcrb
inc
mov
mov
inc
fsubrl
mov
mov
xchg
sub
adc
add
adc
pop
pop
adc
cmpsl
inc
xor
in
mov
fdivrl
lods
adc
bound
dec
or
repnz
add
aas
and
push
lahf
loop
push
ds
ret
adc
cli
pop
xchg
and
sub
xor
jle
push
and
xchg
mov
mov
in
adc
mov
jo
jge
pop
jb
lods
adc
adc
xor
pusha
adc
xlat
fisubs
lods
or
sbb
adc
sbb
and
xchg
xor
cmp
orl
and
daa
push
jae
test
add
das
test
adc
repnz
and
xchg
cmpsb
sahf
or
pushf
or
sbbb
mov
jecxz
adc
inc
dec
add
aaa
mov
ja
mov
rcll
lcall
cld
push
cmpsl
sbbb
mov
xor
clc
sub
adc
mov
into
or
inc
in
fcomps
xor
fdivrs
jnp
or
push
and
scas
repnz
cmpsb
and
loopne
jno
sbb
xchg
scas
adc
scas
adc
test
insl
adc
icebp
pop
push
adc
aad
ds
pop
and
leave
jecxz
repnz
mov
sahf
pop
and
leave
loope
cvtdq2ps
dec
adc
loop
cltd
shll
xor
adc
jno
or
inc
pop
xchg
mov
adc
fwait
push
es
push
push
loopne
mov
jp
push
jns
adc
and
das
dec
cmp
push
jo
dec
pop
aaa
cmp
adc
push
sub
mov
popa
in
aas
dec
adc
push
xor
sbb
or
sbb
das
xor
jb
inc
fbld
out
mov
insb
dec
adc
mov
adc
popa
xor
dec
adc
push
test
push
sub
imul
pop
jb
xchg
jmp
movsb
sarl
push
pop
pop
dec
push
adc
popf
push
addr16
dec
loop
adc
and
imul
pop
frstor
aas
sub
es
hlt
jbe
push
ja
lcall
fcomi
scas
jg
pop
adc
adc
pop
cwtl
aad
adc
inc
clc
jmp
cmp
enter
lret
xchg
adc
adc
out
int
movsl
loop
cmp
jle
and
ljmp
lret
pop
adc
pop
test
nop
test
mov
jne
dec
pop
adc
jb
lods
adc
popf
aas
and
push
xorb
cmp
add
mov
iret
cmp
jnp
adc
incb
movsl
add
sbb
jns
add
xor
sahf
orl
pop
inc
out
mov
or
adc
xorb
out
cmp
sahf
lcall
test
repnz
mov
jnp
jb
mov
mov
push
xor
push
mov
scas
or
push
adc
test
insb
jns
inc
xor
cwtl
or
adc
cwtl
scas
push
js
cmp
dec
scas
adc
cwtl
and
ljmp
cmp
or
sub
and
adc
jns
adc
pop
adc
sbb
inc
adc
in
pop
adc
or
mov
pop
dec
cli
inc
adc
pop
adc
inc
push
aam
sub
lret
pop
sub
in
pop
adc
adc
adc
adc
xchg
jl
das
outsb
adc
fcmove
je
pop
adc
aad
pop
pop
loope
push
adc
mov
push
or
xchg
xor
pop
adc
xor
lods
xchg
lods
or
adc
pop
push
adc
or
call
cmp
repz
or
ficomps
mov
cmpsb
adc
call
insl
scas
pop
jno
mov
mov
adc
fnstcw
inc
xor
jb
insl
adc
dec
mov
sub
aam
sub
adc
xor
aas
and
sahf
or
jns
inc
xor
js
cmpl
mov
fsubrp
pop
aaa
es
adc
pop
or
or
ljmp
mov
mov
dec
adc
mov
adc
add
add
pop
adc
adc
add
adc
cwtl
je
adc
inc
cwtl
add
push
dec
adc
out
adc
cwtl
and
repnz
cwtl
insl
push
rcll
sbb
xor
insb
ret
movsb
ret
movsb
adc
cmp
sub
bound
adc
jge
xor
inc
xor
mov
xor
dec
cwtl
inc
adc
jle
cmp
ret
adc
rorl
cmovne
fiaddl
shl
cltd
adc
dec
adc
xor
jns
xor
ja
push
adc
shrl
mov
adc
adc
hlt
or
xchg
adc
popa
jbe
insl
sub
fbld
adc
cli
sbb
add
js
adc
or
or
inc
notl
lods
adc
les
jne
xchg
xchg
mov
cmp
dec
shll
adc
push
adc
clc
dec
sub
test
dec
cltd
dec
and
pop
pop
adc
lea
mov
adc
orb
test
cmp
lcall
sub
popf
adc
adc
push
mov
xchg
mov
out
cltd
push
sub
aam
lds
cmp
mov
adc
cli
clc
into
adc
test
mov
inc
or
sahf
jb
mov
lahf
lds
add
add
cmp
fs
add
int
xchg
jb
adc
aad
shll
enter
sub
sub
es
test
shrl
add
dec
js
push
in
lea
pop
fisubl
test
jmp
xor
dec
jp
adc
into
shll
std
into
movb
xchg
pusha
std
cmp
daa
lock
cmp
les
or
mov
mov
adc
mov
gs
imul
sbb
adc
popf
bound
pop
and
dec
fdivp
movsb
in
movsb
adc
in
sub
adc
mov
sub
lock
cld
jbe
xor
repz
push
mov
pop
into
xchg
cli
loop
cmp
cwtl
shlb
adc
xorb
adc
dec
push
lea
cmpsl
sbb
push
repnz
adc
rorl
loopne
repnz
xor
mov
lret
adc
adc
push
adc
adc
add
adc
in
mov
adc
roll
fcompl
dec
jle
mov
inc
jae
es
je
adc
stos
inc
pushf
adc
and
mov
fcmovu
and
aad
adc
mov
jns
mov
test
fiaddl
stos
pop
adc
lock
adc
mov
lret
adc
adc
add
mov
adc
cwtl
movsb
adc
sub
xor
add
cmp
lods
cmp
sbb
pusha
adc
movsl
out
mov
adc
xchg
xchg
lds
inc
adc
sub
mov
les
adc
and
adc
adc
repnz
mov
lahf
ret
adc
fsubl
push
bound
pushf
rcll
sub
fs
adc
lods
adc
and
daa
in
push
daa
mov
insb
in
addr16
adc
cmpsb
adc
inc
pusha
adcb
hlt
movsb
push
adc
mov
push
mov
lock
add
lahf
mov
xchg
dec
adc
fsubs
out
cmpsl
test
or
sbb
inc
adc
outsl
ds
sub
dec
xchg
mov
jae
xor
dec
adc
xchg
es
dec
adc
dec
enter
and
push
cmpsb
adc
inc
sub
cmp
je
repnz
sbb
dec
sub
push
jns
or
inc
cmp
mov
jnp
xor
xor
or
inc
inc
enter
inc
push
decl
inc
dec
pushf
nop
xchg
imul
fnsave
xchg
adc
push
repnz
sbb
and
scas
xor
xor
mov
pop
arpl
mull
in
test
imulb
mov
adc
mov
xchg
lods
repnz
int3
daa
jle
pop
mov
adc
cmp
jnp
sti
jp
or
or
adcl
out
xor
push
test
mov
inc
mov
adc
dec
adc
fstl
shl
jecxz
mov
adc
fwait
adc
and
sbb
enter
or
inc
stos
enter
imul
dec
lds
sbb
sbb
adc
out
lds
lock
adc
mov
cld
bound
and
lret
iret
icebp
mov
adc
xor
lret
jae
xor
xor
or
inc
fcmovnbe
mov
xor
xchg
mov
jb
mov
mov
xchg
xor
adc
and
adc
sbb
cltd
dec
lret
jl
ret
xchg
es
cmpsb
and
jmp
lahf
ret
xchg
adc
popa
mov
cld
dec
adc
sub
enter
adc
rclb
lahf
loope
push
sbb
xor
arpl
jae
inc
test
mov
scas
mov
adc
loop
xor
dec
adc
adc
xor
scas
xor
inc
mov
lock
out
cmp
outsl
cwtl
fdivs
movsl
adc
mov
adc
sbb
dec
sub
cmpsl
adc
in
push
push
adc
in
dec
adc
sub
std
pop
xchg
adc
loope
sahf
bound
aaa
mov
mov
mov
add
push
adc
sti
sarb
mov
rorl
inc
jb
sahf
fs
bound
sbb
ret
and
and
adc
mov
movsl
cmpb
cltd
xor
mov
push
into
cmp
lods
adc
sub
mov
sub
sbb
in
xor
adc
push
mov
dec
adc
mov
mov
xchg
adc
mov
adc
xchg
sahf
xchg
xchg
add
push
mov
xchg
jo
clc
jp
mov
es
xor
mov
enter
xor
and
xchg
sub
dec
adc
dec
call
sub
lds
mov
dec
in
not
sarb
adc
test
cmp
in
cltd
adc
pop
sbb
xor
ja
lods
adc
scas
and
iret
sahf
repnz
int3
mov
push
ljmp
push
imul
repnz
mov
push
sub
mov
jnp
inc
adc
cli
sub
cmpsb
xchg
adc
in
xor
cmpsl
es
mov
pop
mov
call
lds
xor
mov
adcl
adc
and
pushf
xor
mov
xchg
les
and
xchg
adc
lds
adc
or
lea
ret
adc
xor
pushf
pusha
inc
cmpsl
adc
inc
adc
jecxz
jne
rol
xor
inc
movsl
adc
jle
mov
test
sub
and
test
jb
movsl
adc
push
push
test
sahf
sub
movsl
adc
testb
cmp
movsl
pop
mov
movsl
adc
cmpsb
sahf
push
mov
pop
lcall
push
cwtl
sbb
nop
adc
sbb
enter
push
jno
into
ljmp
mov
mov
jo
outsl
jns
pop
sahf
push
cmp
sub
stc
movsl
adc
inc
subl
xlat
mov
or
xchg
and
push
and
and
push
sub
sbbl
pop
shlb
pop
sbb
dec
adc
sub
enter
test
repz
sbb
mov
es
xchg
adc
mov
loope
and
or
test
shl
dec
inc
xchg
adc
mov
mov
mov
std
shrb
stos
adc
jno
clc
rorl
and
outsb
push
enter
or
inc
loope
jb
sbb
sub
inc
cmpsb
adc
mov
faddl
ret
and
call
push
cltd
push
inc
stos
icebp
adc
lea
outsl
idivb
pop
cmp
dec
jne
add
fdivp
cmp
pop
ds
or
xchg
fistl
mov
sub
inc
adc
aas
adc
lret
pop
mov
adc
dec
inc
mov
push
or
lret
lds
adc
mov
lods
inc
sub
mov
aam
lret
push
mov
and
cld
xor
fiadds
xor
adc
jae
jg
sub
xchg
es
pop
adc
xchg
out
or
dec
pop
out
clc
loop
push
xchg
adc
and
pop
mov
xchg
cmp
jae
and
pusha
in
xor
xor
adc
idiv
mov
call
xor
jo
mov
xor
sub
adc
mov
lcall
pushf
cmpsl
adc
mov
popa
mov
mov
adc
mov
adc
nop
adc
jecxz
dec
lea
mov
xchg
sbb
cmpsl
adc
mov
xchg
sbb
adc
mov
popa
mov
xchg
adc
adc
adc
and
xchg
rcll
mov
nop
cmp
mov
adc
adc
mov
rcl
jmp
orl
lahf
enter
in
aas
enter
cmp
pop
cld
jl
aas
rcrb
mov
jl
aas
fcomps
mov
jl
aas
fcomps
mov
jl
aas
loopne
mov
jl
aas
call
lock
cld
jl
aas
lock
mov
jl
aas
clc
pop
lret
pop
inc
shlb
mov
fistl
cmp
and
fisttpll
push
popf
stc
push
xchg
sub
and
add
pop
daa
hlt
test
es
movsl
adc
adc
mov
inc
or
xchg
daa
xchg
sub
adc
clc
bound
das
mov
jnp
das
shr
fdivr
enter
ret
and
aaa
cmp
dec
cmp
sahf
pop
aas
es
pop
cltd
or
pop
inc
es
pop
lods
lods
sub
testb
stc
adc
mov
dec
mov
xchg
push
fs
mov
sub
fs
mov
adc
pop
sahf
pop
stos
sbb
adc
or
scas
in
mov
bound
outsl
pushf
adc
daa
aad
sbb
push
outsl
daa
clc
clc
dec
ja
daa
popl
clc
cmp
movsl
adc
xchg
xor
push
jno
inc
and
in
sbb
sub
xchg
sbb
out
xchg
test
adc
adc
mov
mov
mov
pop
inc
loop
pop
fldcw
popa
aam
cmpsl
dec
adc
scas
xlat
adc
jp
lods
dec
mov
je
mov
scas
jns
or
xchg
and
or
push
mov
fsub
xchg
ljmp
inc
mov
adc
or
lea
pop
or
jno
sbb
daa
jmp
pop
jae
iret
daa
ret
mov
sti
iret
sub
xor
or
mov
pop
lcall
fwait
inc
fbld
icebp
lock
fbld
lcall
cmp
rclb
lahf
nop
into
enter
imul
push
jecxz
fucomp
dec
es
insb
imul
out
daa
mov
jnp
adc
es
decl
jle
xchg
fs
mov
jmp
mov
jl
aas
push
daa
mov
jl
aas
push
daa
mov
cmp
push
adc
cmp
loop
dec
cmp
ss
jns
push
xorl
mov
and
adc
es
adc
fbld
repnz
adc
inc
xor
push
clc
addr16
dec
adc
nop
pop
test
adc
dec
push
dec
adc
scas
cwtl
inc
inc
inc
mov
in
aaa
dec
cmp
sub
adc
push
stos
mov
pop
adc
adc
scas
sbb
push
dec
test
mov
adc
pop
adc
xchg
xor
scas
hlt
adc
mov
dec
ret
adc
jb
ljmp
jbe
loope
mov
out
push
fdivs
xor
ret
jle
adc
scas
mov
sbb
mov
popa
iret
cld
ljmp
into
nop
fsub
in
cwtl
xor
in
and
lret
mov
movsl
adc
nop
les
sahf
cmp
and
frstor
and
into
cwtl
inc
outsb
imul
clc
loop
mov
ljmp
push
inc
adc
sbb
xchg
cmpsb
or
lea
scas
les
inc
in
sahf
nop
enter
dec
adc
xchg
shlb
and
clc
movb
and
adc
adc
xor
inc
or
sahf
sub
xor
jbe
sub
sub
inc
not
out
cwtl
xchg
xchg
aas
mulb
mov
sub
adc
mov
push
es
lods
mov
dec
add
dec
aad
es
iret
fwait
push
es
loop
loopne
jb
loope
sub
adc
es
adc
mov
cwtl
add
std
and
xchg
sbb
adc
sbb
and
nop
les
cld
movq
jb
insb
sub
xchg
cmp
or
cmp
ret
xchg
adc
or
lea
sahf
enter
or
inc
dec
enter
push
xchg
or
inc
pop
nop
insb
hlt
mov
fstps
shll
push
mov
cld
mov
adc
cwtl
cmpsl
push
insl
adc
and
xchg
cwtl
inc
adc
cwtl
and
loop
repz
mov
adc
shrb
sub
scas
adc
jb
lea
aas
xor
jle
or
adc
add
sahf
inc
mov
jecxz,pt
jb
popf
adc
sub
fs
mull
test
adc
add
adc
fs
xor
mov
adc
roll
mov
je
out
ret
sarl
daa
lcall
rsqrtps
daa
icebp
lock
int
lcall
pmulhuw
daa
icebp
repnz
xor
adc
sbb
test
test
shlb
cmpsb
xchg
mov
push
or
es
sbb
ret
in
es
mov
adc
mov
cmp
mov
xchg
rcll
out
bound
cmc
xchg
cmp
or
movsl
adc
jo
movsb
adc
std
mov
adc
out
mov
cmpsl
add
mov
out
fs
push
or
jo
loop
sbb
test
and
sub
loope
or
jo
mov
mov
jo
sahf
xchg
adc
sub
dec
and
scas
adc
adc
sub
jno
xor
xor
adc
in
jae
jb
pushf
popa
mov
cmp
xchg
or
lea
sahf
enter
or
inc
inc
xchg
bound
cmpsb
adc
sbb
and
xor
and
popa
out
lods
fimuls
daa
popl
clc
aam
jg
popl
clc
jne
jg
popl
clc
push
je
daa
lcall
mov
movsb
sti
adc
dec
adc
inc
push
daa
jnp
mov
hlt
or
repz
push
es
mov
inc
es
inc
mov
aas
mov
mov
jl
aas
xchg
daa
mov
jl
aas
pushf
daa
mov
jl
aas
movsb
daa
lret
jno
add
and
lods
adc
xor
scas
mov
mov
mov
mov
jl
push
mov
ficoml
adc
xchg
sbb
jb
in
adc
sahf
xchg
xchg
xor
push
mov
rcll
ror
mov
adc
xchg
aam
xor
sahf
sbb
add
dec
adc
cmpsb
nop
push
imul
inc
lock
enter
or
inc
in
enter
push
mov
inc
mov
orb
xlat
cld
cmp
xchg
mov
fs
or
in
xor
xor
or
inc
or
and
xchg
adc
jns
lret
sbb
mov
xor
inc
sahf
adc
in
and
sbb
and
inc
xor
xor
and
xchg
jae
or
adc
pushf
xor
inc
and
sub
xor
sahf
lret
sbb
mov
inc
push
xchg
cmpsb
xor
pop
mov
xchg
xor
jg
and
arpl
xor
xor
into
adc
repnz
adc
pushf
xor
and
xor
nop
push
repz
mov
cmpsl
orl
cwtl
sub
adc
cwtl
lds
adc
cwtl
xchg
inc
mov
adc
cwtl
ss
xchg
mov
lds
shlb
bound
push
inc
sahf
and
cmpsb
xor
mov
adc
sub
stos
push
inc
mov
mov
lock
inc
xor
mov
nop
mov
idivl
inc
movsb
nop
pushf
adc
and
mov
and
cld
xor
rorl
inc
mov
mov
mov
lock
fcmovne
mov
scas
jecxz
adc
rorl
rcrl
rcll
adc
popa
sarl
repz
adc
inc
mov
jb
shrl
xchg
movsb
lds
adc
mov
and
and
sbb
minps
lret
sbb
and
sbb
sahf
xor
inc
cmpsb
and
and
and
outsl
or
jns
or
lea
into
les
xor
adc
sbb
cmp
inc
and
xor
nop
or
fsubs
adc
cli
sbb
and
in
xor
call
pop
movq
fisubs
inc
into
and
inc
or
and
sbb
xchg
insl
jb
sub
xor
sahf
outsb
pusha
sub
jp
pop
sahf
aaa
pusha
sub
in
cmpb
cmpsb
mov
jns
or
lea
mov
setb
sbb
xchg
cltd
movsb
popa
cwtl
out
dec
adc
sub
adc
cwtl
ret
xchg
adc
or
lea
cwtl
cmp
xchg
cwtl
test
sub
mulps
sub
sbb
sub
enter
mov
cli
adc
xor
ret
lret
gs
cmp
or
cmpsl
adc
pop
or
adc
pop
orl
shr
test
sbb
xchg
into
or
lea
or
adc
loope
push
ljmp
xor
lods
sub
repnz
inc
xor
or
sahf
xchg
jecxz
cmpsb
sbb
add
inc
mov
shll
or
inc
or
fs
into
xchg
adc
or
adc
les
inc
add
sbb
stc
xchg
mov
lock
xchg
mov
mov
xchg
xor
cmpsb
adc
xor
sub
mov
and
aam
or
lea
into
les
cmp
xchg
mov
out
arpl
shll
xchg
fdiv
push
cmpsl
adc
testl
sbb
cmpsl
adc
inc
adc
loope
or
ret
and
dec
jo
xor
andb
jno
sbb
xor
mov
in
dec
adc
adc
loop
xor
cli
mov
shll
ret
adc
xchg
repnz
sbb
and
mov
in
adc
xor
xchg
shlb
push
inc
xor
xchg
rcrb
mov
or
lea
sahf
les
inc
add
push
rcll
xor
movsb
rclb
pop
icebp
dec
adc
adc
leave
adc
inc
scas
adc
shl
sub
sbb
aad
jns
or
lea
or
adc
loope
pop
jmp
lea
xor
mov
add
xor
jecxz
cmpsl
inc
stc
enter
push
mov
xchg
xor
xor
or
inc
or
subl
inc
rorb
push
inc
adc
sbb
xor
mov
loop
sbb
sub
xor
mov
inc
xor
scas
fs
imul
xchg
in
in
xor
xor
into
adc
rcrl
and
pushf
xor
and
xor
sbb
bound
les
dec
jl
adc
test
push
adc
into
xor
or
lea
xchg
les
cmp
xchg
xor
mov
xchg
dec
adc
cmpsb
scas
popa
mov
jo
adc
xorl
inc
js
xor
sahf
adc
pop
andb
in
or
xor
jmp
pop
mov
or
dec
adc
cwtl
repnz
and
outsb
mov
and
test
mov
cmp
jbe
mov
movsb
xlat
mov
or
inc
push
shl
lcall
jg
xlat
adc
enter
or
inc
pop
enter
int
inc
or
mov
and
fnop
inc
out
movsl
push
nop
subl
jb
daa
clc
clc
mov
xchg
add
out
fs
push
call
xor
into
adc
lock
pushf
xor
dec
sahf
scas
and
dec
mov
clc
test
jmp
pop
daa
inc
or
leave
xchg
je
inc
cmpsb
shl
das
jne
lret
mov
out
pshufw
sahf
sub
mov
dec
std
dec
adc
loope
fistps
das
test
out
ficoms
xlat
mov
das
lcall
movhps
das
icebp
lock
daa
das
lcall
pop
daa
das
icebp
icebp
out
das
cld
jl
jno
lcall
movq
das
icebp
lock
das
lcall
invd
aaa
das
icebp
icebp
push
aas
scas
es
lock
inc
das
clc
clc
sub
das
popl
stc
mov
jnp
jg
popl
clc
xchg
push
jg
popl
clc
and
xlat
es
pop
das
ret
mov
gs
es
lock
jg
popl
clc
push
outsl
jg
popl
clc
cmc
ja
das
popl
clc
xchg
jg
das
popl
clc
aaa
xchg
lret
jae
xor
adc
inc
cmpsb
adc
sbb
bound
inc
add
cld
stos
ret
outsl
xchg
das
cld
sub
mov
sahf
dec
mov
xchg
nop
or
xchg
inc
fistpl
lahf
push
push
pop
in
sbb
push
out
mov
sahf
cmpsl
das
sub
es
fildll
aas
scas
das
pop
cli
sahf
sbb
aam
stos
xchg
fst
mov
in
inc
das
mov
xchg
adc
cld
sbb
scas
xchg
inc
mov
xchg
dec
loopne
push
or
iret
das
push
je,pt
imul
sar
mov
xchg
xlat
adc
and
pushf
xor
xor
scas
dec
xchg
das
das
jnp
loope
out
or
add
out
das
sub
mov
insl
dec
sub
cmp
out
in
sub
jnp
mov
sub
das
push
pop
jge
das
mov
das
test
push
mov
fists
test
and
das
push
std
push
inc
das
mov
inc
xchg
push
das
or
add
push
das
sub
test
das
push
adc
push
das
test
and
das
push
jb
inc
das
mov
inc
adc
das
or
add
ss
sub
add
das
push
adc
das
test
and
das
push
lock
das
mov
inc
xchg
inc
das
or
sbb
fnstsw
adc
mov
mov
mov
test
dec
insb
mov
lret
pop
scas
into
sub
adc
mov
jo
aas
outsb
das
test
dec
adc
nop
ftst
cli
jo
sub
jb
lahf
dec
roll
xchg
adc
pushf
adc
pop
test
push
das
test
repnz
test
test
sub
es
sbb
inc
sbb
das
sub
popa
xchg
das
push
in
sahf
inc
das
mov
inc
aas
push
das
sub
das
lahf
adc
shll
inc
das
mov
add
mov
sub
adc
inc
das
mov
inc
add
adc
sub
adc
xchg
mov
ds
enter
lea
lock
das
test
and
loope
into
das
or
lods
stc
mov
rorl
jg
das
push
adc
fisubrs
test
and
das
push
push
out
das
mov
into
inc
out
das
or
lcall
adc
imulb
push
sbb
das
test
add
add
add
xlat
dec
lahf
push
or
rclb
mov
scas
enter
adc
mov
int
cmp
mov
std
sbb
inc
sbb
and
adc
and
mov
xor
push
and
test
cmp
push
and
test
dec
adc
and
push
pop
sbb
bound
adc
and
pop
pop
cmp
test
test
insl
adc
and
pop
les
bound
jne
mov
push
and
test
test
or
daa
idivl
pop
cmc
lea
loope
sahf
jecxz
adc
loope
sahf
or
and
sbb
popf
xchg
aad
inc
push
leave
adc
outsb
cmpsl
and
pop
mov
test
lods
adc
and
mov
dec
xor
dec
adc
scas
xchg
mov
pop
sub
sub
lds
mov
int
and
insb
loopne
xchg
inc
aad
push
outsb
daa
dec
fstpl
into
js
jb
js
test
inc
in
mov
adc
mov
pusha
pop
scas
cmp
adc
and
cld
xor
lock
into
xor
sbb
out
or
xor
adc
aam
or
adc
movsl
shrl
adc
sub
mov
adc
push
sbb
les
sub
mov
and
cmp
fstl
out
dec
daa
out
insb
negl
aas
xor
mov
jl
aas
xor
fisttpll
pop
cmp
lcall
imul
lock
inc
das
lcall
cmovs
repz
sti
das
cld
jl
das
lcall
push
das
icebp
lock
pop
psubusb
lock
das
lcall
vmwrite
lock
fs
lcall
bndldx
lock
insb
das
lcall
bsf
lock
pop
adc
mov
sub
leave
mov
jmp
stc
dec
inc
adc
inc
mov
or
test
push
ds
test
mov
scas
data16
mov
xchg
das
sub
jecxz
jae
test
outsl
es
mov
das
mov
inc
mov
das
or
add
movsb
das
sub
lea
fiadds
std
push
and
pop
mov
test
mov
push
and
test
int3
adc
and
int3
pop
adc
aam
mov
fcompl
faddl
sti
inc
jb
add
ret
adc
pop
in
or
test
sub
std
hlt
lods
dec
inc
hlt
mov
cld
or
jmp
sub
aas
add
cmpunordps
das
adc
test
and
das
push
iret
adc
mov
inc
push
and
test
and
pop
out
addr16
and
enter
sub
mov
xor
and
sbb
xchg
cld
xor
xor
or
adc
in
icebp
sub
jo
sbb
loop
sbb
dec
pushf
push
mov
push
or
dec
pop
sub
xchg
pop
lods
fadds
mov
arpl
les
sub
mov
mov
inc
ss
repz
lds
es
mov
or
mov
jae
testb
aad
orb
pop
subl
and
sti
fcmovnu
sub
adc
imul
adc
sbbb
bound
xchg
push
mov
adc
and
fwait
pop
mov
adc
push
stos
test
stos
adc
push
inc
adc
or
cmp
xchg
mov
xchg
test
in
xor
xor
scas
adc
lret
repnz
jae
and
sbb
xchg
mov
mov
movq
mov
jns
or
lea
sub
or
dec
jmp
mov
out
adc
or
lea
adc
or
inc
sti
pushf
mov
jo
jbe
cmp
xchg
lahf
loope
pop
or
pop
or
or
mov
adc
leave
dec
out
hlt
adc
inc
dec
adc
into
mov
loop
aas
ret
adc
sub
sub
and
sub
inc
xor
xchg
cmp
out
adc
inc
cmp
xchg
mov
sbb
xchg
mov
enter
imul
xchg
in
inc
xchg
movb
adc
roll
sbb
je
bound
mov
xchg
adc
push
cli
fmull
lret
push
cli
pop
jne
adc
bound
xchg
inc
or
jp
push
jp
bound
loop
adcb
and
pop
xchg
mov
mov
pop
adcl
push
and
pop
les
adc
and
xchg
mov
push
dec
adc
xchg
nop
mov
cmc
mov
mov
ret
jecxz
sub
aaa
lret
inc
lret
lret
and
shrb
xchg
scas
sbb
fiaddl
pusha
daa
popf
push
daa
ret
push
sbb
adc
nop
cmpsb
les
sub
cmpsb
cmp
mov
mov
loope
inc
bnd
cmpsb
xchg
les
or
push
xor
lret
xchg
sub
aam
in
repz
adc
cmpsb
sbb
test
or
or
adc
adc
cmp
into
xchg
add
leave
push
push
adc
pop
cmpsb
and
cmp
test
push
adc
pop
mov
shlb
sub
daa
out
out
ret
xlat
cmp
cld
jl
movsl
adc
scas
mov
sub
das
adc
sub
dec
das
push
adc
push
das
test
push
das
or
add
pop
das
sub
inc
pop
mov
sub
dec
xor
es
lahf
inc
or
popa
das
push
adc
and
push
es
das
mov
inc
shlb
adcb
adc
dec
pop
mov
add
subl
das
mov
imul
into
xor
or
xor
cli
xchg
cmpsl
adc
mov
cltd
cmp
xchg
mov
xlat
aad
sub
and
pop
test
shrl
push
or
jge
mov
mov
gs
pushf
mov
gs
jns
mov
or
lea
xchg
repnz
mov
js
sub
int
lods
sbb
mov
rorl
les
fldcw
loope
adc
lods
lahf
inc
jmp
les
jmp
lods
fiaddl
mov
stc
or
jnp
sub
enter
loope
into
imul
mov
or
les
sub
lods
adc
sbb
les
and
and
sub
sub
lods
jle
xor
inc
das
lret
xor
pop
inc
cmp
pop
mov
push
cmp
xchg
jle
mov
dec
inc
pop
gs
adc
adc
dec
test
push
cld
adc
dec
jecxz
std
test
inc
push
mov
push
or
ds
repnz
and
lds
pusha
test
test
inc
pusha
mov
push
lods
outsl
inc
jo
mov
jo
adc
lods
stos
inc
js
incl
sub
cwtl
subb
or
push
nop
lods
fildl
mov
cwtl
mov
mov
and
cwtl
pop
ret
adc
xchg
xor
nop
or
pop
test
pop
test
inc
mov
cli
mov
les
sub
fwait
mov
mov
rorb
mov
sub
fmulp
mov
sbb
and
sub
xchg
adc
push
and
rcrb
rolb
mov
loopne
pop
loopne
bound
std
dec
call
call
mov
lock
aas
clc
sub
mov
lods
flds
mov
repnz
adc
test
and
aaa
push
sbb
push
and
aaa
push
or
inc
aaa
mov
inc
stos
pop
aaa
or
aas
adc
aaa
test
and
aaa
push
out
das
inc
aaa
mov
inc
aaa
mov
xlat
daa
ljmp
daa
std
mov
aaa
cmpsl
add
aas
aaa
adc
in
xor
inc
or
subb
mov
sub
xchg
push
aaa
or
add
pop
aaa
sub
mov
push
adc
pop
aaa
test
and
push
jp
adc
into
adc
outsl
sub
movsl
adc
and
ja
adc
sub
dec
jg
push
adc
and
push
cmp
inc
aaa
mov
sbb
jae
sub
adc
sbb
test
inc
aaa
mov
inc
insl
lahf
aaa
or
add
cmpsl
aaa
sub
pop
cmpsl
aaa
push
adc
and
inc
aaa
mov
inc
jmp
aaa
or
add
mov
mov
aaa
test
and
aaa
push
iret
lds
or
add
iret
aaa
sub
mov
or
aaa
test
and
aaa
push
stos
filds
mov
dec
out
sub
cltd
out
push
adc
out
aaa
test
and
aaa
push
testl
test
divl
or
add
pushl
sub
push
push
aaa
push
adc
aaa
test
and
aaa
push
or
inc
aaa
mov
dec
fs
aaa
sub
repnz
dec
and
aaa
push
xchg
push
inc
aaa
mov
inc
and
aaa
or
sbb
stc
cs
test
and
aaa
push
mov
jle
out
and
adc
mov
pop
sub
pusha
ds
daa
lret
inc
xchg
cld
xor
mov
xchg
mov
sbb
mov
inc
push
pop
ja
mov
mov
inc
and
or
add
data16
sub
or
push
adc
aaa
test
and
push
out
inc
aaa
mov
inc
jo
aaa
or
add
jle
sub
xchg
jmp
dec
aaa
push
jbe
inc
aaa
mov
es
adc
jmp
aaa
test
sahf
aaa
or
add
sahf
aaa
sub
sbb
bound
aaa
test
inc
aaa
sub
push
and
push
movsl
mov
aaa
mov
inc
inc
mov
mov
mov
aaa
jae
loope
aaa
or
add
into
aaa
sub
ja
aaa
push
adc
aaa
test
and
aaa
push
fiadds
mov
inc
push
out
or
in
mov
mov
test
pop
sbb
cmp
inc
es
dec
cmp
xchg
mov
idivb
push
adc
decb
and
mov
xchg
adc
mov
fimull
adc
pop
add
or
adc
std
shrb
or
sahf
inc
push
aaa
test
repz
jb
or
push
inc
xchg
adc
sbb
imul
inc
mov
scas
std
and
inc
dec
ror
or
adc
rcl
dec
adc
and
xor
adc
dec
sbb
xor
push
cwtl
xlat
cmp
enter
or
inc
inc
enter
push
mov
decl
lea
inc
adc
push
repnz
sub
sbb
imul
gs
sub
or
push
adc
aaa
test
and
push
stc
insl
inc
aaa
mov
mov
cld
dec
clc
out
jge
aaa
mov
cmpsb
cmc
js
mov
test
aas
fbld
adc
lea
test
and
adc
aaa
test
sub
aas
pushf
dec
push
popf
adc
mov
cmpsb
mov
movsl
adc
or
lea
adc
push
lods
mov
jnp
enter
push
stos
dec
daa
mov
xchg
xor
push
xchg
adc
adc
aaa
test
and
inc
aaa
mov
inc
add
or
add
int
sub
jno
inc
mov
aad
fucomip
lahf
sbb
idivl
inc
adc
aaa
test
and
aaa
push
icebp
fldl
mov
inc
xchg
in
or
add
in
aaa
sub
sub
push
adc
cmc
aaa
test
and
aaa
push
jbe
inc
aaa
mov
inc
pop
add
or
add
add
sub
add
push
or
test
and
push
hlt
adc
aaa
mov
inc
xchg
sbb
adc
loop
jg
mov
aad
mov
rolb
jecxz
sub
iret
lock
shlb
adc
pop
mov
in
movsl
add
mov
and
xor
pop
cmp
bound
and
sub
std
aaa
ds
xchg
inc
aaa
jecxz
out
jns
push
xor
adc
xchg
aad
cmovb
and
dec
pop
or
jns
push
ret
pop
test
fs
pop
stos
lods
adc
es
mov
cmpsb
bound
es
insb
xchg
cmp
je
and
add
xchg
jl
aas
fcompl
and
test
mov
inc
mov
add
aaa
adc
sub
xchg
xchg
aaa
push
adc
xchg
aaa
mov
sub
pushf
adc
jl
inc
and
sahf
xor
sahf
fs
cmpsb
xchg
mov
or
adc
ret
push
mov
add
cli
mov
movsb
and
inc
mov
xchg
mov
in
cmpsl
adc
ret
adc
repnz
sbb
dec
mov
jae
int3
mov
int3
push
dec
notb
pop
sub
xchg
aam
or
icebp
inc
xor
jp
aaa
adc
jmp
dec
adc
fs
mov
adc
in
adc
and
push
xchg
hlt
test
hlt
adc
and
test
add
and
or
or
adc
mov
gs
inc
push
sbb
in
sbb
mov
adc
xor
and
and
pop
es
jno
or
mov
and
dec
xor
pop
xor
xchg
mov
mov
out
cmp
adc
stos
movb
mov
aam
mov
je
and
jg
pop
adc
aaa
test
mov
scas
push
mov
movlps
and
xor
repz
pop
pop
mov
jno
movsb
pop
dec
pop
push
or
cmp
sbb
cmp
andb
xlat
imul
or
jo
sub
lds
adc
mov
jnp
les
xorl
subl
testb
push
inc
mov
xchg
xchg
repnz
sbb
xchg
xchg
cmp
xchg
test
fwait
das
sub
mov
mov
mov
sub
popa
stos
lods
mov
mov
add
sub
movsb
mov
lret
inc
ret
mov
mov
test
in
xor
sbb
cmp
js
test
rcll
xchg
mov
xchg
fmuls
outsb
fistl
mov
test
jecxz
mov
jmp
dec
jmp
bound
repz
and
repz
sti
test
sti
adc
and
pop
enter
sbb
adc
and
xchg
sti
adc
cmp
or
jns
push
adc
sbb
xchg
jb
mov
popa
sahf
mov
cmpsb
sahf
adc
sub
mov
mov
cli
pop
adc
mov
dec
cmp
fwait
es
mov
aaa
test
and
push
mov
aaa
mov
inc
sub
or
add
push
aaa
sub
es
jl
insl
and
push
mov
push
bound
test
bound
or
add
push
sub
dec
push
leave
jb
jmp
sub
aas
jp
mov
mov
jp
les
subb
or
push
xchg
lods
or
mov
lcall
mov
mov
cmpsl
lahf
nop
mov
mov
stos
or
cmp
lods
faddl
enter
mov
inc
push
and
out
lock
sbb
arpl
sub
loope
mov
dec
rclb
adc
lods
push
push
pop
lret
jae
shrb
push
pop
jmp
mov
test
fisubrl
adc
inc
fidivl
sahf
mov
adc
ljmp
ljmp
add
lods
push
inc
cli
mov
cli
or
lock
sub
inc
add
add
xor
sub
xchg
lods
aam
adc
jne
sub
ret
push
inc
and
mov
sub
add
mov
sub
xor
and
push
popf
push
and
cmp
cmp
stc
cmp
pop
fcomps
mov
xlat
dec
sub
sbb
pusha
inc
dec
mov
push
or
repnz
sub
ds
lods
andl
pop
vmulps
in
mov
adc
sahf
xchg
imul
test
in
adc
sbb
mov
ret
fsubl
js
test
dec
jno
mov
cmpb
iret
subl
mov
adc
mov
xchg
or
rclb
push
inc
cltd
mov
mov
sub
das
test
mov
test
sub
dec
mov
xchg
inc
mov
les
mov
lods
lret
mov
leave
or
imul
adc
shll
rcr
lods
sti
inc
fnstenv
pushf
loope
jmp
jmp
sub
fcomip
lods
sub
mov
icebp
or
int
repnz
mov
stc
sub
outsb
sub
pushf
xchg
mov
mov
dec
call
dec
adc
mov
dec
jb
sbb
cvtps2pi
adc
sub
and
in
xor
aad
aaa
decl
inc
jb
icebp
adc
sbb
or
mov
nop
cmp
sub
inc
pop
cmp
fs
xor
inc
adc
cmpsb
sbb
enter
or
lea
mov
inc
test
test
inc
inc
mov
dec
or
jae
sub
rorb
inc
push
mov
push
or
mov
sub
add
push
inc
pusha
mov
pusha
or
icebp
pusha
sub
inc
push
mov
jo
and
mov
jo
loope
xorb
xchg
and
js
and
xchg
orb
adcb
sbbb
test
mov
xchg
mov
pop
inc
out
adc
and
inc
aam
adc
and
pop
ret
bound
test
mov
push
and
test
mov
xchg
mov
push
and
rcrb
test
rclb
jp
pop
iret
rolb
mov
push
and
test
loopne
mov
loopne
bnd
push
and
lock
cmp
test
clc
adc
xchg
push
sub
xchg
adc
aas
test
cld
aas
test
or
lock
add
aas
jle
mov
pop
aas
push
cmpsb
pop
inc
aas
mov
jbe
inc
daa
aas
push
adc
daa
test
das
aas
push
adc
aas
test
and
aas
push
sbb
inc
aas
movsl
addb
aas
jecxz
xchg
aas
sbb
inc
aas
test
and
push
clc
inc
inc
aas
cmpsl
out
push
inc
aas
mov
inc
sbb
or
add
pop
aas
sub
icebp
pop
aas
jno
or
push
adc
enter
or
inc
outsl
shlb
aas
push
adc
aas
test
and
push
adc
data16
sub
stos
jg
push
adc
jg
test
inc
xchg
xchg
or
leave
push
in
and
aas
push
outsl
xchg
inc
aas
mov
inc
or
lahf
aas
adc
sub
jmp
cmpsl
aas
test
and
dec
aas
lahf
adc
cmp
dec
aas
fucomip
or
mov
push
pop
das
mov
popa
test
sub
sarl
daa
test
lcall
iret
aas
sub
xor
aas
push
adc
and
aas
push
and
inc
aas
mov
inc
ret
fistpll
or
add
out
sub
mov
aas
push
adc
daa
jmp
inc
or
loope
idivl
or
add
aas
sub
loop
aas
push
adc
push
aas
test
and
aas
push
rolb
inc
aas
mov
inc
jno
aas
or
add
push
aas
sub
addr16
aas
push
adc
aas
test
es
or
add
jl
inc
and
aas
push
nop
cs
aas
mov
inc
xor
mov
aas
or
dec
daa
and
push
je
inc
aas
mov
dec
inc
dec
aas
sub
bound
push
adc
and
push
push
push
inc
aas
mov
inc
repnz
aas
or
add
data16
sub
loopne
aas
push
adc
aas
test
and
push
jbe
aas
jl
and
jbe
push
ja
pop
aas
negl
les
jno
or
test
xchg
aas
sub
mov
aas
or
jbe
inc
aas
mov
pop
clc
inc
xchg
inc
aas
mov
sbb
sarb
test
repnz
test
cmpsb
aas
or
push
and
es
iret
dec
aas
push
jp
inc
aas
mov
add
mov
mov
aas
test
and
aas
push
lock
inc
into
aas
test
into
aas
or
add
aas
sub
xchg
aas
push
adc
fidivrs
test
and
aas
push
jne
inc
aas
mov
inc
push
out
aas
or
sbb
pop
add
aas
lahf
pop
xor
stos
sar
aas
test
lods
es
aas
cmpsl
push
ret
aas
adc
sub
xor
addb
xlat
adc
adc
adc
sbb
inc
ret
aas
adc
sub
stos
and
and
sub
cltd
pop
fildll
cmp
das
aas
jae
loope
xor
cmp
cmp
cmp
push
and
pop
aas
lahf
bound
pop
dec
aas
push
imul
push
scas
adc
dec
push
sbb
xchg
sub
mov
sahf
inc
xchg
aaa
repnz
test
and
sbb
and
pop
jne
bound
jne
mov
push
and
test
test
in
mov
mov
test
inc
inc
lea
adc
xchg
mov
mov
aam
sub
shll
popf
aas
push
jne
inc
aas
mov
inc
push
lods
icebp
and
push
les
sub
test
out
scas
test
mov
sub
dec
adc
les
jge
jecxz
xchg
mov
lds
ds
add
jecxz
jle
aas
ds
jb
pushf
mov
mov
push
test
cmp
push
aas
push
call
xchg
lock
mov
inc
aas
mov
ds
das
sub
xchg
sub
jg
push
and
cmc
pop
sbb
test
std
adc
and
add
pop
add
bound
or
and
pop
mov
jmp
test
sbb
mov
pop
sub
and
mov
sub
and
sub
push
xor
mov
xor
and
pop
stos
cmp
clc
cmp
mov
dec
adc
adc
and
xor
push
mov
test
imul
push
lret
jge
sub
lret
push
inc
sarb
es
xlat
repz
loopne
insb
aas
lcall
sub
les
mov
outsl
call
pushf
xchg
cmp
jmp
test
push
out
les
fisttps
push
and
pop
int
test
xchg
adc
and
test
movsb
adc
pushf
xor
lods
sub
adc
dec
lods
lods
lahf
inc
mov
in
mov
les
mov
adc
mov
les
popa
ror
les
dec
cld
push
mov
inc
imul
aam
adc
sub
pop
fdivrl
push
push
lods
adc
stc
adc
mov
dec
in
sub
lcall
cmp
or
mov
sub
lods
sub
mov
cld
or
lret
cld
sub
pop
add
push
fnstcw
mov
mov
mov
bound
and
adc
adc
mov
sbb
and
and
mov
push
and
pop
into
xor
cmpsl
daa
jbe
lock
cmp
popl
clc
or
jg
popl
clc
stos
inc
jg
popl
stc
dec
lds
ds
cwtl
dec
aas
jecxz
in
push
aas
ds
cmp
jecxz
cmpsl
pop
aas
clc
clc
fistpl
adc
push
and
inc
leave
arpl
and
pop
mov
jae
mov
push
and
data16
es
sti
gs
adcl
fwait
sbbl
xchg
dec
xchg
adc
es
mov
push
and
xchg
hlt
mov
fwait
pop
adc
push
hlt
push
das
mov
inc
mov
mov
ficoml
mull
js
lock
aas
or
add
mov
sub
out
aas
push
adc
mov
ret
aas
push
aam
inc
aas
mov
inc
jne
aas
or
add
sarl
sub
arpl
aas
push
adc
and
aas
push
push
fildl
mov
inc
repz
or
add
jmp
sub
fisttpl
xor
mov
xor
test
and
aas
push
and
inc
aas
mov
inc
lds
aas
or
add
or
sub
mov
aas
push
cli
adc
mov
inc
mov
negb
aas
adc
adc
mov
and
xchg
in
sbb
sbb
into
mov
rolb
xor
mov
inc
shlb
or
add
cmp
sub
inc
aas
push
add
aas
mov
push
int3
arpl
inc
adc
inc
icebp
rcll
les
sub
mov
fs
and
bound
or
je
bound
xchg
aad
repnz
adc
mov
adc
scas
dec
xchg
xchg
adc
xchg
pop
or
adcb
loope
mov
enter
adc
xchg
xchg
or
adc
lcall
aas
adc
xchg
mov
mov
nop
es
adc
xchg
xor
or
push
cmpsb
push
or
es
mov
mov
pushf
pop
inc
sbb
inc
das
lock
mov
adc
adc
rolb
adc
mov
fimull
jl
push
add
lret
and
aaa
hlt
loop
cmp
inc
adc
int3
adc
mov
cmpsb
or
push
ljmp
adc
repnz
fs
out
testb
inc
into
and
or
add
sub
sbb
mov
push
adc
sahf
mov
sahf
sbb
dec
adc
inc
loopne
cmp
adc
adc
cmpsb
xchg
xor
xchg
adc
adc
sbb
cmpsb
jo
cmp
sbb
test
and
shll
inc
test
sub
mov
sbb
sub
cwtl
adc
xor
les
popa
xchg
mov
xchg
xchg
mov
into
fsubs
pop
or
cwtl
nop
adc
inc
mov
notl
dec
sub
or
imull
or
adc
inc
jmp
adc
cmp
mull
or
scas
popa
shll
gs
adc
das
imul
adc
and
sub
push
hlt
jno
cmp
sbb
jns
in
xchg
xor
in
jns
push
xor
std
xorl
mov
inc
push
mov
xchg
sti
orl
mov
mov
and
dec
rol
test
mov
std
sub
xchg
sbb
mov
fs
sub
mov
fdivrl
inc
adc
sahf
jge
shrb
adc
fcomps
push
mov
xor
xor
xchg
and
xor
or
jmp
shrl
pop
leave
stc
in
xor
mov
cld
popa
shll
cmp
rcl
cmpsl
lret
inc
fnstenv
pop
leave
push
add
push
movsl
adc
mov
les
movsl
daa
pop
mov
sub
icebp
leave
push
cmp
sti
or
outsl
stc
push
inc
fsubl
push
xor
cmc
ss
test
adc
or
dec
xor
mov
cwtl
adc
adc
cmpsb
adc
adc
gs
je
xchg
sub
mov
movsl
es
lcall
jecxz
dec
adc
into
cmp
std
and
ret
mov
jno
test
cmpsb
sub
dec
lock
cmp
xchg
mov
fs
into
xchg
xor
sbbb
push
sbb
xlat
inc
movsl
adc
stos
sub
adc
test
sbb
test
lds
or
adc
idivl
xor
test
aam
call
xchg
and
mov
sub
sub
jno
test
popf
pusha
test
ljmp
cmp
out
mov
shrl
enter
imul
and
adc
adc
cmpb
inc
mov
imul
lahf
mov
sbb
nop
test
adc
inc
cmp
in
cwtl
jecxz
cld
xor
xchg
adc
xchg
mov
fildl
das
test
jno
inc
jl
cmpsb
fs
push
mov
test
inc
mov
bound
or
xchg
jp
mov
mov
mov
inc
mov
mov
inc
mov
xor
cmp
adc
ret
adc
in
lods
int3
cmpsl
adc
mov
popa
mov
adc
adc
popa
mov
adc
adc
arpl
dec
hlt
sti
enter
mov
notl
rcrl
and
sbb
adcl
nop
out
pop
xorps
sub
xor
pop
cmp
push
adc
dec
scas
bound
pop
and
aaa
sbb
aam
push
jecxz
and
loopne
jne
scas
pop
lahf
jne
inc
dec
daa
scas
sub
das
es
scas
pop
les
sub
test
dec
push
vcvtsd2si
push
push
mov
add
adc
lahf
in
cli
test
nop
and
stc
or
dec
pop
inc
cwtl
push
in
rcll
adc
cmpsb
xchg
notb
scas
xor
pop
mov
and
inc
jb
in
dec
inc
push
xor
push
xor
shl
xchg
rclb
loop
sbb
outsl
xchg
imull
in
adc
inc
or
outsl
adc
aad
pop
movsb
ja
sub
daa
sbb
ja
mov
xchg
mov
jg
jg
and
xchg
dec
adc
adc
cwtl
pop
and
cmpsb
nop
in
nop
mov
adc
dec
jns
inc
fidivl
leave
pop
cmp
nop
mov
jnp
xchg
or
lea
sahf
les
cmp
xchg
pushf
loope
mov
or
mov
movb
enter
xor
cmovbe
adc
aad
rcrb
out
movl
inc
movups
mov
nop
dec
loopne
sahf
xchg
adc
gs
sub
into
pop
sahf
mov
mov
lds
cmp
or
mov
bound
inc
or
adc
and
sbb
pop
lret
push
sbb
enter
sub
dec
xchg
jne
test
cwtl
cmp
inc
push
lcall
and
push
xchg
es
addr16
push
enter
push
sbb
mov
xchg
mov
in
dec
fstpl
push
adc
cmp
idivl
bound
xchg
es
cmp
rclb
enter
cmp
fbstp
out
jo
mov
pop
inc
sahf
sub
sbb
ljmp
adc
scas
dec
push
push
sub
shlb
les
cmp
in
stos
je
out
idivb
adc
dec
adc
sti
insb
addr16
aas
push
inc
mov
jl
aas
pop
inc
mov
jl
and
loope
inc
or
call
xchg
push
outsb
rcll
pop
jbe
movsb
jmp
in
aad
adc
test
jle
or
pop
push
icebp
pop
adc
cli
sub
adc
xor
cmc
mov
xchg
gs
sub
and
adc
adc
sti
mov
jmp
test
sub
adc
sub
and
fs
dec
loopne
movsl
adc
sahf
or
lea
cmpsb
les
add
ds
push
loope
repnz
stos
adc
or
push
pop
sarl
xchg
push
adc
sbb
xchg
xchg
xchg
cmpsb
or
inc
enter
push
mov
inc
and
dec
lock
out
xchg
mov
adc
mov
in
xor
inc
into
adc
push
dec
xchg
add
mov
movsl
adc
scas
xor
sbb
mov
mov
pop
hlt
jb
sbb
cmp
xor
ljmp
es
ret
shrl
xor
mov
loop
sbb
and
fs
or
lea
into
les
cmp
adc
ret
adc
hlt
pushf
adc
mov
mov
test
inc
cmp
xchg
mov
xor
xchg
mov
push
in
pushf
jl
push
push
adc
mov
xor
mov
in
mov
mov
mov
in
mov
inc
mov
jl
nop
je
out
jmp
movsl
fnstsw
push
inc
push
jge
es
mov
pop
pop
jge
jecxz
cmpsl
test
ds
in
test
loope
test
ds
jge
inc
jecxz
ret
ds
push
xchg
inc
jecxz
push
cmp
sub
and
pop
adc
popf
adc
cmp
imul
xchg
icebp
imul
out
mov
lods
jns
push
adc
sub
data16
or
jns
adc
adc
adc
push
test
adc
nop
mov
dec
pop
popf
inc
lds
ljmp
int
pop
push
je
inc
mov
adc
fcoms
mov
inc
xchg
and
pop
stc
jp
push
std
loop
fldl
xchg
mov
in
mov
shlb
adc
jl
in
dec
xchg
cltd
xchg
std
inc
dec
lcall
out
cmc
in
dec
pop
xor
pop
repnz
movsl
cmp
adc
xchg
mov
or
in
loop
adc
add
mov
add
adc
cmp
xor
push
jg
cltd
mov
and
into
adc
inc
or
aas
adc
sbb
xchg
fs
mov
loope
and
adc
dec
adc
sbb
cmp
cmpsb
fs
cmp
adc
in
mov
xchg
xor
test
cwtl
xor
lods
adc
push
and
or
inc
adc
jl
dec
adc
scas
nop
shl
mov
adc
sbb
xchg
mov
in
xor
push
push
mov
sub
les
cmp
loop
leave
aad
cmp
into
sbb
enter
adc
imul
jno
jg
adc
stc
push
add
rolb
cmc
jl
adc
xchg
jl
jge
mov
jl
mov
test
pop
and
testl
xor
sub
adc
scas
or
inc
xchg
xchg
jb
sbb
pushf
repnz
xchg
adc
shld
sub
rol
test
inc
adc
lods
cmp
adc
cmp
lahf
mov
xor
adc
mov
cmp
push
and
and
fidivl
mov
test
pushf
es
or
popa
rcrl
dec
and
xor
repz
lods
shlb
mov
mov
adc
xchg
fiaddl
and
xor
and
in
sbb
sbb
cmpsl
adc
pop
adc
adc
inc
adc
mov
sub
rol
into
cwtl
or
cld
mov
sbb
sbb
scas
out
adc
es
mov
test
mov
or
ja
sub
adc
pop
inc
jg
push
mov
dec
pop
lock
sub
adc
and
insl
sbb
jmp
or
popa
pop
push
and
pop
mov
adc
and
mov
mov
mov
sub
rorl
inc
adc
mov
xchg
xor
inc
sahf
xor
cmp
and
bound
div
adc
adc
pop
scas
dec
inc
out
ret
inc
adc
sub
popf
push
inc
push
adc
push
inc
test
and
push
mov
jno
inc
fcomps
jb
pushf
sarl
or
adc
imul
and
push
mov
or
xchg
xchg
les
mov
pop
fsubrl
xchg
mov
sbb
orl
fdivrs
cmpl
xchg
int
jg
popl
clc
pop
xchg
jg
popl
clc
call
xchg
inc
clc
clc
jns
jg
adc
mov
addb
stos
inc
push
adc
stos
inc
test
and
inc
inc
mov
inc
cmp
mov
ret
adc
into
sbb
or
mov
ret
jbe
inc
cld
jl
aas
lret
inc
fisttps
inc
icebp
lock
roll
pop
setno
inc
icebp
lock
inc
lcall
mov
inc
icebp
lock
jecxz
lcall
sub
stc
jecxz
sub
dec
jmp
push
adc
and
inc
push
cmp
inc
inc
mov
inc
inc
or
add
add
or
add
adc
or
insb
and
inc
push
mov
adcb
adc
sub
scas
sbb
adc
sbb
dec
and
inc
push
popf
and
mov
jbe
sarl
inc
adc
sub
movsl
jge
loope
xchg
adc
cmp
sbb
sbb
xchg
mov
jns
or
lea
cmpsb
les
inc
cmp
xchg
mov
xchg
add
in
xor
inc
into
adc
repz
and
out
push
enter
or
lea
sub
negb
orb
xchg
ret
adc
push
mov
and
jno
inc
jo
sahf
lds
inc
cmpsb
and
inc
scas
xor
push
pop
mov
or
addb
push
addb
mov
testb
inc
sub
xchg
xchg
inc
push
adc
xchg
inc
test
and
movsl
adc
loope
shlb
xchg
sahf
or
lea
ret
adc
repnz
sbb
and
mov
adc
repnz
sbb
cmpsl
clc
bound
push
in
xchg
lea
and
sub
xor
out
aad
ror
mov
xchg
xchg
jbe
in
xor
xor
cmpsb
adc
loop
xor
scas
xchg
mov
mov
add
enter
into
sbb
adc
adc
inc
adc
cli
or
or
or
inc
add
sahf
subl
in
rolb
stc
push
push
jl
loop
or
sbb
test
sub
xchg
xchg
ja
jecxz
dec
adc
xor
movsl
pop
aas
repz
add
xchg
sahf
scas
adc
or
xchg
sbb
sub
inc
mov
xor
xor
adc
cmpsb
cwtl
lret
pop
mov
xchg
les
push
adc
adc
sbb
inc
rorb
adc
sahf
xchg
pop
dec
ret
sbb
and
mov
xchg
and
jmp
sbb
das
mov
xchg
adc
push
pop
es
movsl
sarb
jmp
adc
mov
adc
mov
dec
adc
adc
cmpsl
adc
aad
loope
dec
adc
repz
adc
aam
inc
inc
jno
mov
sub
repnz
dec
push
subb
and
adc
and
xor
mov
inc
dec
adc
sub
adc
es
adc
or
jnp
dec
adc
or
lea
sub
outsb
bound
inc
pushf
adc
or
inc
test
imul
scas
mov
rorb
mov
cmpsl
adc
in
rclb
clc
bound
push
mov
push
popa
adc
push
inc
xor
aam
push
shll
sub
stos
mov
pushf
adc
or
xchg
fsts
push
sub
lods
into
push
fimuls
xlat
jnp
sbb
daa
jne
aad
andb
jbe
fmul
jmp
bound
pushf
adc
adc
repnz
xchg
psubw
lock
ss
adc
cmp
or
or
lea
ret
adc
in
pushf
adc
mov
sahf
mov
adc
cld
xor
and
cmp
and
mov
mov
cmpsb
mov
adc
cmp
mov
sbb
xchg
push
sub
pop
pushf
xor
xor
xchg
and
dec
mov
xchg
sub
push
inc
mov
lret
inc
mov
jb
inc
insb
lahf
loope
mov
or
inc
pop
pusha
inc
loope
push
and
push
in
inc
adc
popa
in
jo
adc
sub
adc
in
push
js
adc
cwtl
mov
cmc
orb
xchg
xchg
out
fmuls
imul
jecxz
pop
nop
mov
and
cmp
cmp
cwtl
es
rcr
bound
xchg
dec
mov
sub
adc
in
cmpsl
adc
in
test
rcrb
xchg
xchg
xchg
sub
enter
cmp
sbb
sarl
mov
mov
xchg
xchg
mov
scas
mov
adc
pushf
xchg
rclb
fsub
xchg
xchg
movsb
popa
mov
mov
xor
in
mov
mov
mov
and
call
pushf
adc
or
inc
lock
idivb
adc
stos
mov
xor
daa
scas
cmpsb
inc
lds
cmpsb
jmp
push
clc
inc
lock
mov
lahf
rcrl
clc
push
mov
int3
sbb
cmpsl
adc
scas
enter
or
inc
bswap
sbb
xchg
cs
in
xor
inc
xor
mov
push
lret
push
imul
scas
xchg
into
movsb
adc
and
cmpsb
mov
addr16
das
adc
mov
mov
adc
pop
daa
push
or
jno
or
inc
aaa
mov
mov
aas
imul
dec
sub
cwtl
outsb
ss
pop
jg
xor
inc
movsl
adc
scas
or
mov
fistpl
sahf
dec
pop
xor
adc
scas
adc
lret
and
leave
adc
mov
push
arpl
adc
mov
mov
mov
icebp
push
addr16
jl
jl
decl
push
enter
push
ja
dec
ja
jae
movsb
or
mov
jg
adc
dec
push
jg
enter
xchg
sub
mov
in
dec
dec
jl
jno
or
lea
adc
sbb
pop
sub
in
xor
push
jb
xchg
shll
out
add
adc
test
sub
into
xchg
and
or
in
testb
cld
inc
into
add
mov
mov
bound
sbb
dec
adc
mov
sahf
sub
xor
xchg
adc
idivl
fs
out
push
xlat
adc
cmp
out
mov
fisttps
inc
cmp
sub
iret
lock
sub
xchg
mov
lret
dec
adc
adc
out
adc
push
subb
adc
je
bound
sahf
and
fsubl
mov
xchg
xor
test
push
imul
ljmp
test
mov
mov
fdivrs
xchg
movsl
jecxz
dec
dec
adc
push
adc
das
mov
adc
mov
adc
adc
mov
adc
and
pushl
dec
adc
adc
dec
pushf
adc
adc
in
ds
xor
xor
into
jne
inc
enter
cmp
dec
xchg
adc
jbe
leave
dec
mov
insb
dec
adc
mov
enter
sbb
adc
or
xchg
jnp
xor
xor
xchg
adc
outsb
repnz
sbb
fsubs
push
inc
mov
jns
mov
inc
in
sbb
into
xor
sub
xchg
sbb
clc
les
cmp
in
xor
pop
push
adc
fs
jns
hlt
movsl
jl
mov
sbb
dec
push
xchg
push
dec
mov
sub
cmc
xor
sti
mov
cmp
cld
decl
dec
rcrb
jl
jmp
adc
aas
cmc
mov
sahf
mov
cmp
test
daa
pop
out
bswap
mov
mov
dec
adc
mov
lret
into
jbe
ret
xchg
in
into
imulb
pop
shlb
leave
cmpsb
sbb
out
cmc
sbb
cmpsl
adc
pop
or
lret
testl
sub
inc
out
xchg
adc
xor
xchg
jmp
out
dec
adc
mov
or
inc
out
jmp
sub
out
repz
jbe
test
and
test
push
sbb
jge
je
mov
adc
imul
ds
jg
mov
fildl
jg
jecxz
jl
out
stc
leave
clc
stc
sbb
js
push
adc
sbb
sbb
sbb
jl
lcall
pop
cli
and
sub
sub
jl
lcall
pop
cmp
aas
mov
icebp
fidivrs
lret
jno
or
inc
inc
lret
out
daa
popf
push
mov
clc
clc
insl
dec
movsl
adc
xlat
cltd
ss
jae
out
push
push
adc
jno
pop
push
lahf
loope
mov
dec
popa
pushf
cmc
pop
dec
adc
mov
sahf
aaa
push
gs
inc
mov
insl
es
cmpsb
xchg
sbb
sbb
push
push
mov
or
sub
enter
jge
adc
xchg
and
mov
push
or
in
popf
test
in
outsl
ds
inc
lea
fwait
push
lea
arpl
dec
daa
mov
xchg
pop
xchg
jb
jns
adc
or
inc
popf
nop
sbb
movsl
xchg
adc
sbb
sbb
daa
pop
push
dec
bound
mov
lcall
test
mov
hlt
scas
movb
mov
dec
adc
adc
int
hlt
sbb
mov
fimuls
int
adc
adc
subb
aad
sub
lods
jl
lahf
movsl
adc
scas
cwtl
pop
cmp
decb
scas
pushf
out
shlb
adc
in
cmp
xchg
mov
sbb
push
inc
mov
cmp
xor
cmp
xchg
mov
inc
adc
sbb
xchg
out
or
sub
or
inc
adc
movb
and
adc
fmull
jecxz
sbb
sub
push
sbb
push
dec
and
adc
shrl
inc
and
push
std
xor
sub
adc
leave
in
cmp
mov
cmp
sub
adc
xchg
xor
cwtl
and
lret
cmp
outsb
inc
movsl
es
mov
or
sbb
push
cmp
sbb
and
inc
sub
les
cmp
es
mov
in
sbb
lods
inc
fs
imul
xor
cmc
insb
movsl
pop
cmp
mov
stos
into
push
dec
pop
xor
adc
jl
fcomp
movsl
adc
dec
sub
cmp
test
and
out
adc
mov
movsb
xor
pop
pop
nop
es
addr16
adc
xchg
adc
xchg
daa
mov
pushf
adc
or
lea
sahf
enter
imul
into
mov
into
jecxz
jle
lods
es
jno
ret
lods
or
or
ficoms
mov
adc
mov
fs
sti
idivb
test
idivb
mov
les
mov
or
les
or
jne
es
dec
mov
int3
dec
cmp
xor
mov
pushf
jmp
fwait
and
rcl
mov
mov
lods
push
mov
jae
xor
mov
outsb
imul
sub
adc
dec
mov
xor
or
inc
hlt
xchg
jmp
outsb
xchg
hlt
repz
jl
imul
pop
mov
jg
xchg
js
mov
into
or
imul
sbb
jg
outsb
or
dec
daa
lods
and
jg
xchg
ds
adc
jecxz
sbb
clc
clc
dec
sbb
ds
and
in
and
out
clc
lea
stc
ds
jg
xor
out
clc
enter
sub
adc
sub
adc
scas
inc
pushf
rolb
jg
pushf
adc
add
push
mov
cli
dec
mov
and
repz
adc
dec
xchg
push
mov
insl
sub
lret
sbb
and
nop
xchg
adc
arpl
clc
push
xchg
test
lahf
jecxz
ret
imul
clc
stc
ds
jae
cltd
jae
jecxz
out
out
stc
sub
jno
mov
ja
movsl
mov
cmp
dec
daa
mov
adc
into
cmpsb
and
mov
adc
adc
into
jae
mov
xchg
jb
xchg
stos
jno
push
xchg
dec
and
push
mov
ds
fwait
dec
lods
xchg
repnz
pushf
adc
adc
mov
cmp
mov
bound
stos
sbb
sahf
mov
cmpsb
mov
rorl
mov
scas
inc
xchg
and
push
rcrb
iret
mov
push
sbb
mov
pop
mov
mov
adc
lret
lret
xchg
negl
mov
jge
adc
rcll
mov
sbb
out
mov
mov
pushf
adc
adc
aam
sahf
xchg
into
sahf
push
les
cmp
and
scas
or
lea
rcll
adc
or
or
or
fldl
push
jl
mov
and
adc
cmovb
sub
shlb
test
cmpsb
cmpb
movb
cmp
and
stc
ds
cmp
mov
adc
jb
sub
call
imulb
lahf
jecxz
cmp
lahf
icebp
in
dec
popl
sar
and
xor
push
and
xchg
jecxz
sbb
call
arpl
incl
ds
inc
jg
xchg
mov
out
es
dec
jns
push
adc
xor
sbb
sub
xor
push
cmp
leave
pop
mov
inc
mov
inc
stos
sub
adc
inc
jg
sbb
mov
es
lahf
xchg
pop
sbb
push
insl
jb
or
ds
jp
mov
sbb
arpl
and
clc
inc
cmp
ds
ds
rcll
xlat
out
int3
xchg
pop
push
xchg
pop
xchg
adc
repnz
repnz
adc
adc
pop
xchg
sahf
mov
mov
gs
xor
add
movsb
sbb
std
repz
xchg
stos
mov
fiaddl
enter
mov
adc
test
daa
xchg
sbb
push
jle
xchg
pop
adc
mov
cmp
movsl
es
jp
adc
ret
sahf
and
inc
cmpsb
xor
mov
xchg
mov
mov
test
xchg
push
ror
jl
lds
and
fcmove
jbe
lds
adc
dec
nop
cmpsl
adc
mov
loop
sbb
sbb
call
mov
iret
fisttpl
daa
repnz
jecxz
je
out
clc
shl
ds
cli
lahf
jecxz
mov
out
clc
add
stc
ds
push
adc
in
mov
adc
adc
push
inc
sahf
and
xor
scas
adc
repnz
sbbl
and
or
lea
into
les
cmp
fcomps
les
adc
ret
sbb
mov
mov
enter
cmp
mov
push
adc
mov
sbb
mov
inc
cmp
sbb
mov
adc
imul
add
shrl
xchg
and
adc
adc
cmpsb
mov
mov
mov
sub
lret
jno
or
inc
imul
hlt
mov
xlat
dec
leave
bt
jecxz
lock
clc
clc
inc
jns
ds
jns
adc
mov
lods
daa
je
lock
aam
jg
and
xchg
out
jmp
dec
adc
into
mov
cltd
jb
into
adc
adc
adc
or
inc
mov
push
test
rorl
mov
xchg
cmpsl
clc
fs
movb
xor
xlat
shl
sbb
sbb
inc
jo
and
inc
sub
xor
push
cmp
mov
aam
cmp
xchg
mov
xchg
mul
in
xor
jecxz
xchg
inc
jmp
mov
and
mov
rorb
stc
cmp
and
sbb
push
inc
xor
mov
mov
lea
xchg
les
cmp
xchg
mov
xchg
inc
sbb
mov
xchg
xor
or
inc
and
xor
xchg
mov
inc
adc
les
cmp
xchg
mov
inc
xor
mov
sbb
enter
or
inc
dec
enter
push
mov
decl
xchg
pop
push
decl
lea
enter
or
inc
pusha
fsubl
jno
adc
mov
and
and
sbb
push
js
pop
xchg
xor
testl
nop
cmpsl
sbb
mov
inc
mov
xor
les
inc
rorl
push
inc
or
xor
xor
or
inc
mov
push
test
xor
out
push
adc
sub
mov
inc
xchg
and
inc
sahf
xor
mov
xchg
xchg
mov
jno
and
out
lock
or
inc
enter
and
xchg
ja
in
xor
xor
or
lea
and
sub
xor
mov
xchg
push
adc
sub
xchg
xchg
cmc
call
xor
cmpsb
je
lock
push
clc
out
lock
or
lea
into
iret
and
or
lea
adc
into
sbb
sbb
and
sbb
enter
cmpsb
inc
xchg
push
pop
and
enter
or
lea
inc
adc
negl
fs
scas
xchg
das
xchg
cld
xor
xchg
aaa
push
ds
fnstenv
push
jecxz
and
pop
push
push
jecxz
mov
push
ds
cld
inc
push
jecxz
inc
inc
push
jnp,pt
jg
sahf
rcr
push
jecxz
push
push
clc
clc
arpl
cmp
cmc
pop
adc
scas
cmpsb
pop
or
pop
push
push
scas
sbb
inc
pop
sub
adc
pop
inc
das
outsl
xchg
adc
mov
notl
sbb
and
mov
or
rcll
fsub
xchg
cli
mov
xchg
in
or
call
cmp
push
inc
xchg
and
lahf
mov
xchg
sub
push
jecxz
int3
lea
ret
and
inc
xor
mov
xchg
mov
mov
nop
adc
xor
std
mov
mulps
lds
xchg
mov
inc
sahf
and
in
sub
fs
sbb
filds
ror
or
lea
or
adc
loope
pop
out
jns
or
lea
xor
int3
aas
sub
adc
cltd
xor
xchg
adc
push
sahf
sbb
sbb
cmpsb
mov
fdivl
mov
sub
les
cmp
jae
xor
push
mov
xchg
imul
xchg
or
in
xor
out
loope
mov
xchg
sti
mov
push
inc
xor
and
pushf
adc
or
inc
fsubl
mov
and
sub
adc
xchg
xchg
mov
inc
cmpsb
and
adc
push
adc
test
test
pop
sub
cmpsl
adc
ret
adc
in
imul
mov
fimull
jbe
adc
loope
enter
sbb
xchg
in
imul
xchg
adc
and
inc
xchg
xor
cmp
xchg
mov
xchg
xchg
lock
out
sahf
cmp
xchg
mov
mov
xchg
frstor
xor
or
inc
scas
enter
push
xchg
imul
cmp
mov
imul
cmpsb
les
inc
cld
pushf
mov
addr16
dec
jns
or
lea
inc
adc
repnz
adc
bound
push
inc
and
aaa
xor
sub
mov
pushf
adc
adc
repnz
sbb
mov
xor
pop
es
notb
adc
cmpsb
mov
dec
inc
jmp
adc
xchg
xor
add
mov
flds
or
jp
push
push
daa
test
push
lcall
xor
es
es
lods
sbb
sti
cmpsb
adc
adc
jl
or
and
xchg
mov
loope
pop
mov
xchg
mov
dec
imul
mov
adc
inc
adc
xor
fmul
adc
cmp
mov
sub
xchg
leave
clc
mov
jne
dec
les
dec
push
adc
push
xchg
sbb
sub
push
sub
push
adc
pushf
es
pop
mov
imul
std
fadds
mov
or
sahf
cld
jmp
lea
fs
repnz
and
push
mov
repz
dec
mov
stos
xchg
pusha
pop
sbb
test
mov
pop
adc
icebp
lods
adc
adc
add
adc
xchg
mov
pop
mov
aas
or
xlat
mov
xor
negl
xchg
popf
adc
push
and
movsl
or
es
lods
xchg
movsl
pop
movsb
sbb
jns
sub
lods
jb
pop
loop
xor
sbb
sub
scas
jbe
inc
scas
in
rclb
mov
loop
add
jl
mov
adc
adc
fnstenv
jae
add
ds
mov
jecxz
dec
test
adc
mov
adc
les
ret
mov
bound
inc
sub
scas
adc
sub
adc
xor
or
fcmovb
popa
adc
imul
adc
mov
fisttps
incl
sub
into
or
jne
add
shrl
sbb
ja
sub
xchg
cmp
test
push
sub
mov
and
xchg
dec
inc
xchg
xchg
adc
push
sbb
clc
add
jb
je
push
and
inc
outsl
shlb
push
or
sbb
cmpsb
loope
adc
sub
rcrb
sub
out
pop
divl
xchg
xor
jae
es
int
push
clc
pop
cmp
adc
gs
mov
adc
or
push
cmp
popl
cmc
inc
dec
adc
or
pusha
xor
into
and
add
rorb
les
sub
shll
xchg
pop
and
adc
jb
clc
loop
adc
loopne
lret
mov
xchg
cmpsb
sub
and
imul
insb
pop
adc
scas
adc
sbb
movsl
xor
insl
adc
jle
pop
adc
bndstx
inc
cli
clc
iret
test
mov
jb
mov
into
addb
mov
push
pop
or
jns
inc
push
pushf
dec
xchg
lret
rcll
adc
dec
mov
push
iret
inc
movsb
in
cmp
out
jbe
lock
les
push
lret
add
push
and
jb
mov
in
mov
enter
decl
mov
jb
jbe
cmp
insb
out
mov
pop
repz
cwtl
in
int3
shlb
stos
fwait
std
adc
int3
movsb
xor
mov
xor
aam
mov
dec
clc
pop
fmull
fsubr
stos
push
or
sub
adc
aas
in
in
daa
cmp
adc
or
adc
in
xor
decl
fs
sub
jb
jae
hlt
mov
dec
adc
hlt
push
dec
mov
cld
enter
imul
nop
cmpsb
enter
or
inc
or
mov
cld
push
pushf
loope
std
adc
or
lea
testl
adc
mov
jecxz
jnp
adc
or
mov
sub
add
es
xor
sub
bound
and
sub
ja
push
cmp
fsub
mov
inc
adc
enter
ret
cmc
icebp
sbb
mov
cmp
sahf
lret
jb
mov
jb
push
mov
inc
mov
fnsave
outsb
ret
push
lods
cmp
pop
mov
inc
pusha
mov
stos
push
fucom
or
arpl
mov
mov
lds
lret
subl
jae
lea
jnp
mov
and
in
aas
orl
and
jo
inc
je
in
mov
lret
stc
sub
or
cmpsl
stos
xchg
sub
cmp
into
push
enter
aas
negb
adc
or
cmovnp
jnp
out
adc
adc
inc
adc
cmp
mov
dec
or
pop
and
adc
mov
mov
and
sti
and
pop
adc
ljmp
xor
sub
dec
insb
dec
mov
lret
pop
cmp
mov
lret
cmp
or
mov
mov
push
adc
xchg
cmpsl
and
cmpsb
jge
mov
mov
sbb
enter
or
inc
jmp
fs
mov
or
inc
repz
imul
xchg
xchg
roll
push
xchg
adc
push
mov
fs
sbb
rorl
adc
adc
xor
and
jp
cmp
dec
adc
jb
xchg
sbb
jae
hlt
adc
push
sub
mov
adc
and
xor
adc
sbb
inc
xor
add
and
icebp
xor
xchg
dec
mov
nop
or
inc
adc
mov
inc
adc
mov
movb
xor
lahf
fldt
sbb
cmp
jae
xchg
xlat
mov
xchg
jae
and
daa
sti
imul
sub
icebp
outsb
dec
ja
xchg
sub
fbstp
into
and
es
out
dec
sbbb
cwtl
stos
push
xchg
cmpsl
aam
mov
or
fnstenv
test
or
stc
bound
fists
jp
and
adc
cmpb
or
test
or
xchg
xor
sub
adc
sbb
dec
adc
or
clc
imul
lcall
and
imul
mov
cwtl
push
jg
xchg
and
mov
repnz
sbb
or
inc
dec
enter
mov
cmpsb
inc
lods
or
adc
mov
dec
stos
das
inc
ret
xchg
mov
ret
sahf
xchg
mov
sbb
sub
ret
lret
insl
loopne
ror
inc
ret
lret
add
mov
mov
iret
icebp
pop
sarb
lret
test
dec
lods
sub
icebp
xor
mov
pop
inc
or
repnz
int
xchg
adc
xchg
repnz
lods
cli
jl
popa
test
lds
push
add
les
or
sub
lea
and
adc
std
sbb
jl
gs
and
and
adc
mov
out
mov
adc
test
test
xor
out
mov
dec
movsl
sti
fmuls
xchg
out
bound
into
and
rorl
adc
xchg
mov
adc
and
adc
nop
mov
inc
push
xchg
adc
sub
adc
cltd
adc
jnp
xor
push
loop
xchg
inc
popa
in
xor
in
push
inc
xchg
sub
or
adc
jb
test
dec
es
into
dec
pop
add
jns
sbb
adc
and
jns
or
xchg
xchg
lods
sti
test
loop
mov
cmp
sahf
test
orb
xchg
cmp
xchg
adc
push
inc
mov
xor
mov
stos
cmc
stos
popa
sti
aas
test
inc
int3
pushf
mov
stos
in
mov
dec
call
mov
xchg
aas
aam
inc
mov
mov
mov
dec
xchg
adc
daa
push
sub
adc
push
les
xchg
int3
lea
adc
jno
rorl
jae
inc
sbb
jns
or
lea
adc
iret
loope
push
mov
xchg
adc
and
jg
adc
pop
push
xchg
adc
sbb
movd
or
xchg
stc
adc
or
mov
in
push
xchg
in
js
sahf
sbb
es
fs
xchg
or
scas
xchg
imul
adc
imul
out
inc
sbb
jb
sbb
data16
loop
pop
xor
mov
jno
iret
lds
jl
stos
dec
fdivrs
xchg
adc
clc
push
jecxz
mov
pop
nop
jecxz
jae
loopne
sub
es
cmp
cmp
adc
inc
es
mov
adc
or
inc
dec
xchg
in
mov
xor
mov
dec
imul
inc
adc
pusha
rcrb
lods
jb
dec
mov
lahf
movsl
cmp
loopne
adc
sahf
mov
jns
or
xchg
xchg
adc
mov
mov
movsl
fdiv
dec
cmpsl
adc
ret
adc
cli
cmpsl
adc
into
les
cmp
pusha
jg
shrl
cmpsb
dec
mov
adc
push
inc
sub
and
inc
rorb
push
imul
inc
nop
inc
push
xor
mov
aad
xchg
jb
popa
cwtl
pop
sahf
scas
dec
xchg
cltd
les
scas
es
mov
adc
inc
pop
bound
lret
divl
adc
insb
into
sub
jb
and
pushf
adc
adc
shl
fs
push
mov
inc
inc
and
xchg
clc
bound
sub
rclb
bound
test
fsubrs
scas
mov
push
mov
mov
xchg
adc
cwtl
test
sbb
adc
push
cld
jl
push
lock
lock
cmpsb
cs
push
icebp
repnz
adc
xchg
jl
sub
jb
mov
lret
lret
add
jno
or
inc
setb
mov
pop
mov
out
inc
pop
pop
es
inc
xor
pop
or
adc
lret
adc
test
shlb
stos
fwait
sbb
das
pop
mov
jge
aaa
pop
lcall
setp
pop
lock
sbb
xchg
and
dec
push
test
mov
leave
movl
sbb
pop
xchg
int
adc
inc
mov
pushf
xchg
movsl
adc
push
or
adc
xor
adc
into
sbb
adc
mov
and
outsl
adc
outsl
adc
mov
xlat
adc
sub
into
jecxz
testb
or
nop
ja
leave
fstps
es
mov
jns
adc
cmp
xor
mov
outsl
daa
lock
mov
sahf
xchg
mov
scas
mov
test
cmp
xchg
adc
mov
sbb
out
sarl
scas
adc
into
subb
mov
cld
jl
mov
dec
hlt
mov
sub
imul
add
pop
sub
rol
pop
push
adc
pop
test
and
pop
push
xchg
inc
pop
mov
pop
loope
xlat
pop
or
adc
and
out
push
sahf
adc
jns
int3
mov
or
and
pop
push
mov
pushf
jbe
shlb
fbld
push
imul
fdivr
pop
sub
xchg
push
pop
jp
stos
dec
push
test
daa
mov
fisttpll
xchg
pop
mov
pop
pop
insb
test
cmp
push
or
pop
outsb
push
pop
test
push
pop
or
add
es
sub
scas
cs
push
adc
jb
pushf
inc
clc
xor
inc
pop
mov
and
es
pop
test
and
push
leave
inc
inc
pop
mov
adc
mov
pop
pushf
or
cli
push
and
or
pop
jnp
xor
pop
sub
test
inc
data16
data16
mov
outsb
lods
lods
inc
jbe
mov
jle
jb
test
dec
xor
shrb
xchg
pop
aam
stc
cmp
push
in
ja
jg
test
sub
pop
icebp
push
gs
dec
adc
inc
cmpsb
enter
push
scas
in
xor
xor
and
sub
xor
loop
sub
bound
call
pop
cld
sub
fisubl
adc
and
mov
into
xor
stos
repz
testb
adc
push
dec
lods
push
and
xor
cli
es
mov
mov
or
fiadds
cmp
sub
adc
or
or
mov
les
xor
out
dec
adc
adc
out
test
scas
mov
fdecstp
push
jl
sahf
or
xchg
pushl
xor
dec
push
inc
test
xor
loop
mov
mov
xchg
imul
add
ret
sbb
cmp
xchg
cmp
mov
adc
loop
xor
sbb
xchg
xchg
adc
mov
and
and
adc
inc
and
adc
sahf
sub
sub
adc
inc
xor
sbb
sahf
xchg
loope
cmpsb
sbb
arpl
sbb
inc
movsl
adc
and
pop
mov
inc
inc
test
dec
adc
call
and
sti
sub
push
es
sub
or
data16
test
push
and
adc
mov
inc
sbb
sbb
test
push
insl
sub
and
ljmp
mov
bound
imul
movb
sbb
mov
mov
ja
cmovb
int3
adc
and
fldenv
mov
enter
cmp
decl
inc
popf
enter
cmp
movsb
dec
push
mov
into
xor
jg
cmpsb
and
scas
xor
sub
adc
cltd
adc
nop
bound
mov
jmp
adc
and
lds
pop
mov
sub
lds
cmp
sub
and
int
and
sub
jnp
inc
cmp
aad
sub
fnsave
pop
mov
xchg
mov
jle
rcr
mov
clc
bound
and
push
push
iret
in
adc
and
jno
or
lea
sbb
sahf
decl
lea
in
mov
aaa
add
cmc
popa
testl
fldenv
xchg
jbe
fsubrs
mov
or
mov
adc
lahf
icebp
call
or
adc
inc
adc
cvtps2pd
lods
repnz
adc
and
in
xor
loopne
and
jp
cmpl
xor
adc
xchg
jecxz
adc
cmp
hlt
or
les
jb
mov
adc
add
gs
push
pop
cwtl
lret
adc
es
xchg
dec
adc
push
cmpsl
adc
xchg
mov
pop
adc
es
adc
dec
inc
aaa
fs
adc
push
mov
or
jb
adc
es
je
push
lret
rolb
pusha
push
jl
call
in
enter
adc
mov
adc
es
mov
xchg
adc
in
enter
andb
pushf
xchg
dec
adc
mov
cmpsl
adc
xchg
jl
push
lods
cmp
pushf
adc
adc
imull
gs
imul
cmp
popa
sbb
mov
inc
iret
les
jae,pn
sbb
jmp
mov
movsl
adc
lret
dec
mov
nop
or
mov
aam
enter
push
lahf
loope
and
iret
call
or
inc
in
jmp
mov
pushf
xor
xchg
fsubl
sahf
xchg
jge
call
adc
rcrl
inc
cld
mov
outsl
fdivs
mov
or
jno
sbb
add
jae
sti
pushf
adc
mov
in
mov
or
inc
sbb
mov
xor
scas
mov
adc
xor
jae
xchg
int
call
adc
mov
mov
mov
cmovae
mov
sbb
sbb
inc
es
pop
ss
dec
inc
pop
ds
lahf
dec
pop
jecxz
in
dec
pop
ds
cmp
jecxz
lea
ds
ficoml
jecxz
cs
pop
ds
jnp
pop
jecxz
enter
ds
fisttpl
punpckhwd
icebp
lock
sub
adc
cmpsb
xor
mov
xchg
lods
mov
and
mov
jp
or
lcall
out
in
dec
adc
rcll
sbb
sbb
sbb
sub
xor
insb
cwtl
sub
fwait
adc
enter
or
lea
sahf
les
orb
mov
jno
xchg
stos
pop
clc
push
xchg
mov
es
sbb
mov
sub
ret
sbb
xchg
push
imul
push
and
shlb
sub
and
mov
mov
sub
xchg
mov
out
inc
rcrl
sub
adc
enter
or
inc
jecxz
scas
mov
xchg
mov
sub
mov
sub
fdivp
adc
xor
mov
jg
test
loop
sti
adc
mov
adc
cmpsb
xchg
in
add
scas
xor
xor
or
mov
bound
adc
decl
xchg
imul
mov
in
mov
mov
bound
mov
mov
and
mov
mov
cmpsl
cmp
cmp
mov
mov
xor
dec
adc
adc
out
adc
mov
inc
adc
idiv
fs
push
inc
pop
xlat
out
jo
pop
pop
pop
lcall
sub
inc
cmc
bound
test
push
push
xchg
cli
int3
adc
fwait
es
sbb
jb
or
dec
cmp
sbb
mov
std
push
mov
mov
dec
rorl
gs
cltd
lods
stos
pop
adc
repnz
stos
inc
cmp
mov
mov
xchg
or
xor
and
and
and
xchg
mov
adc
inc
mov
adc
imull
mov
out
stos
sahf
sbb
movb
ljmp
mov
jl
push
mov
jl
movsl
dec
mov
mov
test
cmpsb
xchg
cltd
ret
movsl
xor
sahf
shll
test
rorb
rol
aam
xchg
dec
inc
mov
sub
lds
cmp
mov
es
dec
loop
jb
in
fwait
adc
xchg
sbb
sbb
and
in
xor
xchg
gs
rcr
mov
adc
inc
cwtl
adc
cli
cmp
fildl
sub
add
les
sbb
into
sbb
dec
adc
adc
or
mov
fs
stc
xor
sahf
inc
push
fistl
movsl
stos
mov
mov
sbb
mov
ljmp
scas
lahf
push
int3
or
adc
shlb
mov
or
sub
inc
sub
adc
mov
inc
enter
mov
adc
sti
push
mov
xor
test
pop
pop
cli
call
cmp
insl
cmp
pop
mov
lea
shl
adc
inc
adc
inc
sub
loop
sbb
xchg
adc
jnp
xor
push
mov
mov
pop
test
cmpsb
mov
sub
adc
and
stos
and
imul
lret
scas
sbb
imul
mov
adc
sub
bound
push
adc
popf
dec
cmp
dec
adc
adc
fnstsw
mov
and
push
sahf
jecxz
mov
xchg
dec
adcl
popa
mov
pop
fsubrs
sti
push
mov
push
xchg
sub
xchg
in
stos
sub
xchg
mov
jb
cmc
xor
push
pop
inc
test
mov
mov
jno
lret
pop
cli
lds
fildll
mov
sub
mov
movsb
es
jne
clc
mov
es
mov
outsb
pop
ljmp
rcll
adc
or
push
mov
push
push
ret
push
inc
adc
mov
sbb
and
in
xor
xor
gs
adc
xor
xor
or
xchg
mov
mov
jmp
nop
adc
test
imul
loop
mov
cmp
pop
stc
sub
scas
mov
movsl
adc
inc
xchg
jo
push
or
iret
or
push
loope
adc
insl
pop
adc
sub
movsl
out
fcompl
push
imul
cmc
mov
pop
jecxz
test
pop
ds
and
dec
cmp
cmc
rol
or
mov
xorl
cld
jl
aas
xor
sarb
test
xor
sbb
pusha
xlat
daa
jmp
inc
mov
cmp
mov
adc
outsb
pusha
sub
adc
mov
lock
cs
adc
es
xchg
enter
aam
push
push
pop
decl
xchg
clc
push
push
pop
adc
dec
test
pop
sub
inc
push
hlt
sub
xlat
daa
ljmp
mov
jl
aas
push
jo
cld
jl
aas
jo
mov
jl
aas
js
int
daa
jle
xchg
jl
aas
sbbb
mov
jl
aas
mov
fmull
mov
lock
nop
pop
lcall
xor
popa
maskmovq
negl
cwtl
pop
lcall
sub
dec
in
and
mov
repnz
sbb
cmp
hlt
das
and
or
imulb
jno
or
cmpsl
adc
scas
jne
push
pop
adc
dec
inc
or
rep
xchg
rcrb
cmc
mov
rcrb
pop
and
inc
jb
adc
gs
or
rclb
mov
test
fcoms
and
test
mov
mov
inc
mov
addr16
xchg
ud0
add
jne
dec
fisubl
mov
clc
mov
push
clc
dec
lcall
sub
inc
mov
pop
cmpxchg8b
addr16
repz
sti
je
and
dec
mov
dec
cmp
les
dec
xor
pop
addr16
insl
add
mov
inc
inc
daa
xchg
cwtl
add
mov
sbb
pop
popa
add
pop
mov
test
dec
dec
es
xor
movsl
aas
dec
adc
xor
jecxz
push
inc
dec
movsl
cmpsb
sub
inc
movsl
cmpsb
sub
clc
adc
mov
dec
sub
adc
cmp
je
enter
es
pop
mov
into
lret
pop
into
into
sbb
push
dec
test
and
addr16
adc
sbb
pushf
mov
aad
aaa
mov
cwtl
pop
into
jg
adc
outsl
cwtl
mov
inc
and
xchg
ja
push
mov
mov
dec
aam
aam
dec
adc
sbb
movsl
adc
xor
mov
add
pop
push
jg
cli
popa
test
xchg
jb
in
jb
lahf
or
mov
adc
movsl
adc
movsl
cmpsl
test
jns
mov
lea
and
scas
mov
ja
adc
pushl
push
mov
xchg
xchg
adc
mov
lds
adc
cmp
int3
pop
push
shll
adc
and
sbb
and
dec
jo
dec
fists
sti
js
xchg
aas
fbld
ret
fcomp
addr16
jl
aas
out
int
daa
jp
dec
mov
out
lcall
xor
aas
xorps
addr16
lock
mull
pop
sub
adc
push
mov
dec
dec
cmpsb
jmp
jb
cmpsb
push
dec
pushf
xor
sahf
int
or
lods
aam
push
push
push
jg
lea
loop
movsl
push
add
push
mov
mov
jb
notl
xchg
mov
push
push
sub
gs
std
inc
mov
jns
mov
adc
sub
mov
pushf
lock
mov
and
lock
push
ss
mov
sbb
xchg
lock
sub
adc
and
inc
stos
sub
decb
adc
xor
lret
sub
push
sbb
pop
push
addr16
lock
pop
lcall
pminsw
icebp
lock
data16
lock
pop
outsb
addr16
lock
outsb
lcall
setle
icebp
lock
lcall
comiss
icebp
lock
lcall
sub
push
add
lcall
xchg
insl
es
addr16
jl
shll
clc
shll
stos
iret
mov
mov
mov
fcmovne
or
jno
adc
adc
sub
aas
xrelease
xlat
mov
mov
popf
scas
test
jg
xchg
repnz
es
dec
and
mov
sar
inc
adc
lcall
xchg
aam
bound
mov
adc
push
jg
pop
cltd
and
adc
xchg
xchg
mov
xor
scas
push
or
or
test
adc
sahf
sbb
xchg
scas
or
inc
mov
sbb
xchg
into
or
jp
push
out
adc
enter
mov
mov
mov
mov
mov
cmpsl
loop
dec
add
add
push
mov
arpl
dec
dec
sub
mov
rcr
or
adc
or
push
push
and
cwtl
adc
adc
xor
sbb
cltd
mov
repnz
inc
cmpsl
sub
adc
dec
es
adc
or
and
sub
jge
pushf
adc
ljmp
popa
in
inc
push
jg
sub
pushf
into
gs
sbb
es
in
sbb
push
sub
and
cmp
push
scas
push
push
adc
xchg
fs
push
xchg
scas
xor
xor
mov
cmp
xor
adc
xor
xchg
repnz
xorb
addr16
xlat
mov
pop
push
or
jne
mov
mov
adc
cmp
jge
fstps
xchg
sub
testl
bound
int3
xchg
adc
sub
aam
push
addr16
xchg
jno
inc
lea
pop
mov
pop
xchg
xchg
fldl
sub
shll
out
ret
addr16
sub
es
in
test
movsl
or
addr16
mov
addr16
addr16
ds
adc
addr16
decb
and
mov
push
lds
andb
sub
inc
int
push
adc
and
addr16
xor
inc
addr16
test
frstor
andb
addr16
sub
ret
in
push
adc
in
addr16
and
addr16
mov
inc
addr16
test
cmc
or
addr16
sub
daa
scas
mov
ret
addr16
clc
loop
inc
addr16
test
or
or
add
adc
sub
sbb
push
mov
adc
adc
mov
sbb
sbb
daa
lahf
cld
rcr
stc
sub
ds
pushf
sub
jecxz
jmp
fdivrs
xchg
fistpll
adc
cwtl
sub
adc
shrb
js
leave
jno
mov
inc
push
mov
sbb
aam
clc
jbe
inc
addr16
sub
lahf
adc
push
mov
roll
fidivrs
mov
xchg
pop
es
pop
addr16
ds
scas
fs
cld
fs
ds
dec
fs
popf
insb
addr16
ds
ljmp
addr16
ds
mov
out
daa
mov
jl
imul
cmp
pop
into
test
in
jb
sbb
or
dec
movsb
enter
inc
sub
xchg
or
insb
es
cmpsl
test
mov
outsb
adc
out
nop
sub
mov
xchg
es
movsb
adc
push
push
xchg
popa
mov
lahf
pop
add
add
lods
cmp
scas
adc
mov
scas
mov
fs
mov
sub
adc
or
adc
mov
pop
inc
fisubrl
loope
sub
les
sub
adc
das
hlt
mov
sub
xor
xor
and
dec
ror
andb
mov
add
add
xchg
dec
sahf
xor
clc
cmp
mov
xchg
adc
mov
adc
cmp
pop
hlt
add
ljmp
sahf
scas
sbb
dec
es
cmp
and
in
dec
es
jno
or
inc
add
xor
jecxz
addr16
or
testl
popa
in
adc
jle
ds
testl
inc
cmp
xchg
xchg
les
push
dec
lods
xor
int3
lods
repnz
xor
mov
xchg
adc
and
in
stos
mov
cmpsl
adc
cmp
scas
movsb
adc
sub
push
mov
mov
stos
sub
inc
es
nop
pusha
in
mov
adc
sbb
lret
cli
sahf
adc
xchg
adc
and
lock
arpl
loope
pusha
xchg
cmp
push
inc
sub
into
xor
xchg
loop
adc
nop
sbb
or
inc
sbbl
push
pop
and
sub
push
iret
ret
inc
or
jmp
adc
add
into
and
into
sbb
enter
cwtl
mov
movsl
adc
sahf
xchg
or
sbb
inc
test
mov
adc
jg
and
call
pushf
mull
or
sbb
sub
les
adc
cmpsb
xchg
enter
je
stos
mov
push
and
clc
bound
push
mov
cmpsb
adc
adc
fstpt
cmpsb
mov
jecxz
sbb
loope
cld
adc
bound
sahf
adc
jmp
and
jmp
jb
scas
pop
or
jno
sbb
push
repz
sub
inc
sti
mov
and
loop
sbb
or
jp
push
adc
std
popa
stos
add
push
adc
mov
lcall
sub
or
imul
hlt
xor
adc
jmp
sub
int3
out
push
mov
nop
cmp
mov
sub
enter
cmp
sbb
jmp
addr16
push
xor
nop
pop
test
dec
cmp
adc
and
sbb
xchg
movsl
push
outsb
xor
repnz
sub
xchg
xor
cmpsl
cwtl
xchg
loop
test
bound
shll
scas
les
jae
adc
push
mov
push
imul
jb
pop
into
or
xchg
jp
inc
scas
and
dec
lock
jge
movsl
adc
mov
nop
scas
enter
cmp
xor
mov
dec
and
sahf
lock
cmp
xchg
pushf
mov
mov
inc
xor
rcll
adc
sub
or
adc
sbb
and
sbb
je
adc
in
rcll
cmpsb
cld
xor
test
cmp
lret
fsubs
inc
lret
xor
pusha
dec
and
dec
jae
or
mov
inc
mov
mov
loop
inc
cmpsb
sub
scas
clc
fs
sbb
scas
stos
lds
adc
in
xor
xor
or
lea
mov
xchg
cli
cmp
xchg
xor
add
inc
jb
adcl
mov
add
sub
sbb
mov
jns
lds
cmp
xchg
and
lds
push
sub
jo
sub
sub
mov
sbb
cmpsl
adc
cmpsb
les
sub
xchg
xchg
test
or
inc
xor
popa
xchg
push
movsb
popa
mull
in
repz
adc
adc
or
ffree
jmp
pop
bound
mov
mov
test
adc
push
sub
jg
pop
movsl
dec
scas
or
insb
pop
xchg
es
gs
cmp
scas
xchg
pop
popa
inc
cld
sub
popa
test
adc
sub
dec
lret
loop
jno
es
sahf
adc
hlt
popa
cwtl
jns,pt
and
test
cmp
cmp
cmc
aam
sahf
adc
cmp
dec
mov
adc
or
movsl
adc
mov
dec
std
cltd
cmp
cltd
push
jg
xchg
xor
inc
mov
es
mov
adc
cmp
push
clc
shrl
pop
sub
mov
fs
xor
xor
sahf
adc
mov
jb
and
push
mov
cwtl
call
mov
cwtl
in
inc
leave
leave
scas
insb
push
sub
rcll
fs
sub
cmpsb
xchg
push
pop
in
jno
test
adc
push
inc
xor
sahf
sbb
xchg
mov
inc
jmp
push
test
jmp
xor
inc
icebp
leave
mov
icebp
das
cmp
lds
imul
and
pushf
cs
cld
loope
jnp
cmpsb
sbb
sbb
das
sbb
imul
sub
cmp
inc
adc
sbb
jl
aas
sbb
ret
jmp
xor
ret
jp
addr16
jl
aas
sub
ret
or
addr16
jl
aas
sub
popf
xor
xchg
xlat
ss
pop
loop
jcxz
cmp
ds
jae
jcxz
mov
pop
add
jcxz
dec
inc
addr16
ds
xchg
dec
jcxz
fisttpl
ds
daa
push
jcxz
insb
sub
mov
or
test
pop
or
addr16
sub
hlt
pusha
addr16
adc
addr16
and
dec
push
insb
enter
push
insl
inc
mov
jo
pop
mov
sbbl
push
lret
or
jo
pop
adc
sbb
sub
scas
out
popa
test
cmp
mov
sub
sbb
and
sub
xor
into
sbb
xchg
xchg
xor
cwtl
mov
xchg
xor
and
mov
and
test
movb
pop
mov
inc
or
enter
xor
xchg
push
mov
xchg
sahf
mov
inc
inc
xchg
mov
sahf
mov
loop
les
and
sahf
sbb
jecxz
and
sahf
sbb
fmuls
sbb
sahf
adc
loopne
cmpsb
pushf
xor
push
adc
jno
or
adc
negl
mov
idiv
in
xor
inc
mov
xor
repnz
sbb
into
and
inc
or
sbb
sbb
and
pop
in
xor
sub
aaa
and
sub
bound
jae
jns
add
daa
outsl
cmp
sbb
daa
movsl
es
xchg
enter
push
test
pushf
or
das
outsl
rolb
cmp
aaa
push
push
sahf
es
aaa
enter
imul
cmp
sub
lds
cmp
xchg
adc
cmp
inc
mov
jb
mov
dec
mov
and
stc
and
sub
in
es
filds
mov
or
inc
addr16
addr16
call
mov
imulb
xchg
adc
pop
jnp
or
or
lea
sahf
enter
sub
mov
lahf
or
add
xchg
jle
inc
mov
insl
adc
cmp
pop
adc
xchg
insl
adc
cmpsl
clc
out
xchg
lods
adc
adc
adc
stos
cmp
adc
xor
dec
mov
lahf
dec
in
mov
popf
cmpsl
in
mov
dec
or
scas
jns
or
lods
adc
es
fmuls
sub
and
xchg
adc
jno
adc
jle
mov
stos
add
repz
in
sub
fldcw
and
in
sub
mov
adc
jns
add
test
sub
adc
test
push
out
scas
add
adc
push
inc
cmc
inc
out
mov
dec
ficoms
mul
mov
mov
sub
cld
pop
push
call
sarb
mov
sbb
mov
mov
mov
mov
hlt
mov
dec
lods
adc
push
adc
add
sbbl
and
push
adc
cmp
adc
adc
add
adc
mov
mov
mov
mov
add
incl
mov
inc
mov
mov
mov
insb
adc
adc
nop
mov
sbb
mov
mov
add
adc
cmp
or
pop
adc
sti
jle
lods
jbe
or
jbe
clc
das
jb
cld
inc
push
jle
mov
lods
jp
cld
shrb
sbb
adc
pushf
out
clc
cmp
repz
cld
aas
inc
xchg
iret
sub
xor
or
adc
pop
scas
adc
mov
push
sarb
sbb
cmp
pop
cmc
stc
xor
jo
fcmovbe
mov
cs
and
mov
enter
or
jp
sub
dec
imul
ljmp
pop
push
into
adc
cwtl
lods
pop
adc
sub
adc
lahf
mov
cli
test
stos
out
ficomps
inc
mov
sahf
mov
sub
fucom
xchg
adc
mov
adc
es
cmp
test
pop
notb
pop
adc
adc
sbb
shlb
enter
sub
cmpsb
inc
xchg
adc
inc
dec
in
add
and
popf
or
ljmp
jb
das
jg
ss
jnp
adc
shrb
sbb
push
and
pop
adc
imul
xchg
xor
sub
cmpsb
movsb
sub
push
icebp
es
pushl
stos
dec
xor
sub
xchg
cmp
and
mov
test
inc
mov
adc
dec
adc
mov
fiaddl
inc
mov
gs
repnz
pop
adc
or
adc
cmpb
adc
inc
sbb
repz
loop
insl
ds
or
xchg
jl
pop
jne
mov
repnz
adc
adc
and
mov
inc
push
push
cltd
adc
sbb
mov
xchg
xor
and
lea
jl
and
xchg
jl
insl
xchg
adc
xchg
ret
mov
mov
push
jl
scas
adc
jl
aad
adc
xchg
jle
sbb
mulb
adc
js
push
mov
xchg
dec
mov
stos
mov
adc
lods
adc
sub
jae
cmpsl
lds
insb
dec
sub
adc
inc
sub
inc
adc
int
adc
int3
loop
int
pop
mov
adc
frstor
shlb
dec
xor
xchg
mov
sub
adc
in
adc
es
in
into
xchg
mov
or
test
ret
aas
push
stos
adc
cmc
mov
pushf
add
dec
std
repnz
sub
sahf
xchg
mov
sbb
xchg
pop
sub
or
adc
out
mov
test
inc
adc
xchg
and
sub
cli
insb
push
jle
sbb
mov
je
mov
and
es
fs
sbb
pop
repnz
xor
mov
xchg
dec
and
sbb
adc
mov
xor
push
pop
cwtl
xor
out
fsubs
xchg
jl
popf
pop
out
ror
outsl
jg,pt
jg
lahf
push
outsl
jecxz
mov
pop
or
loope
push
outsl
ds
lods
pop
outsl
jecxz
cli
pop
outsl
ds
dec
outsl
jecxz
fwait
insl
adc
call
mov
sbb
mov
mov
adc
mov
les
jno
and
jl
xor
ret
cmp
adc
mov
sbb
jecxz
mov
mov
mov
xchg
push
jno
and
repz
cmp
xor
xchg
in
cmp
scas
xchg
test
mov
lods
xor
shrl
outsl
lcall
sbb
jb
pop
insl
xor
push
mov
push
mov
lds
adc
aam
mov
les
enter
cmp
sbb
int3
dec
stos
gs
xor
cmp
outsl
aam
inc
into
mov
dec
adc
xchg
or
push
sti
jb
and
daa
mov
outsl
lcall
sub
into
xor
mov
in
test
dec
adc
mov
jecxz
into
or
inc
cld
xchg
push
push
enter
lret
fstpl
xor
sub
cmpsl
es
enter
xchg
enter
dec
sub
adc
mov
stos
or
adc
adc
fists
dec
adc
ret
adc
sbb
enter
or
push
and
xchg
sub
in
adc
mov
and
call
xchg
adc
or
xchg
movsb
and
cmp
jae
inc
inc
mov
inc
sbb
ret
sbb
sahf
jb
fs
jb
test
notb
in
sahf
lds
adc
sbb
mov
adc
mov
xor
pushf
xor
nop
shlb
imul
mov
cmp
pop
mov
add
pop
es
insb
cmovns
xchg
jnp
mov
inc
fisttpl
sbb
xor
insb
test
pop
jb
sbb
sbb
into
mov
lds
orb
jb
sub
xchg
es
mov
mov
into
or
test
fwait
adc
push
mov
push
and
leave
push
and
xchg
nop
inc
xchg
es
cmp
out
lock
mov
xchg
mov
add
pushf
adc
jae
mov
adc
fdivrl
adc
out
fdivrl
js
shll
adc
adc
or
mov
rorl
add
outsl
sbb
test
adc
into
sbb
enter
or
inc
jecxz
test
jae
xor
jmp
inc
test
insb
adc
test
sarl
sbb
enter
test
sti
xchg
divl
jo
adc
adc
add
jno
sbb
or
icebp
outsb
or
pop
xchg
xor
inc
scas
adc
adc
mov
daa
scas
jae
sahf
cld
xor
in
add
pushf
nop
mov
scas
into
sbb
sbb
push
and
and
in
add
mov
sub
test
sub
outsb
mov
test
adc
movsb
inc
fwait
and
cmp
das
fxam
adc
adc
cmp
xchg
mov
mov
adc
push
in
push
lea
ficoms
out
xchg
in
movsl
adc
push
cmp
adc
sbb
and
inc
andb
push
inc
iret
bound
hlt
out
lods
ja
sbb
sub
inc
bound
bound
mov
or
adc
mov
adc
or
xchg
jp
xchg
cltd
dec
movsb
dec
adc
faddl
pop
repnz
xchg
andb
jl
cmp
dec
mov
outsl
icebp
rcll
adc
jp
xchg
xor
xchg
or
leave
xor
je
and
inc
outsl
mov
xchg
and
ret
xchg
adc
and
rsm
outsl
push
dec
lcall
test
mov
dec
push
bound
dec
xchg
adc
mov
mov
jle
sti
arpl
cmp
bound
and
ret
mov
ds
and
jae
loopne
adc
lock
pop
into
xchg
movb
adc
loop
mov
xor
lds
loop
cmp
ljmp
ljmp
lcall
xor
daa
mov
cli
outsl
xchg
jae
loope
cli
outsl
or
add
add
or
or
and
or
ja
inc
outsl
mov
inc
adc
or
outsl
pop
jp
inc
xchg
mov
es
jl
push
and
outsl
push
push
and
mov
inc
cmc
sub
addb
adc
sub
jecxz
inc
mov
cmp
mov
mov
stos
fisttps
sarl
outsl
push
adc
daa
mov
dec
sub
idivb
popf
push
cmp
mov
pushf
clc
rsqrtps
fsubl
xchg
lea
inc
adc
pop
mov
fadd
dec
movsl
adc
int
lds
int3
mov
cmpsl
adc
sahf
enter
xor
nop
xchg
nop
pop
jno,pn
mov
adc
inc
mov
stos
pushf
pop
or
jns
pop
inc
sti
cmpl
outsl
adc
xchg
sbb
mov
inc
xor
xchg
push
jno
or
xchg
push
int
movsl
stos
and
lods
stc
loop
sbb
mov
and
mov
inc
sub
pop
cmp
xchg
mov
shll
adc
dec
test
mov
cwtl
mov
adc
test
mov
inc
addl
into
xchg
rclb
loop
mov
es
outsl
lcall
paddd
outsl
icebp
repnz
pushf
adc
adc
aam
out
fwait
cli
xor
inc
lds
jne
push
jnp
adc
fnstenv
loope
les
jmp
es
ret
xchg
es
lds
adc
xchg
icebp
xchg
jb
mov
pop
fnstenv
mov
sub
adc
xor
jge
hlt
bound
cwtl
and
or
insb
mov
or
test
adc
adc
or
xor
out
adc
enter
jmp
and
sub
adc
es
mov
mov
push
push
sub
pushf
mov
sub
test
inc
es
inc
xor
cmp
mov
push
dec
dec
test
cmp
dec
sbb
cmp
lret
xchg
pop
out
cmp
int
inc
test
inc
adc
dec
bound
es
cmpsb
jae
and
push
dec
daa
xchg
xchg
mov
inc
test
les
pop
sbb
sub
xor
jl
out
daa
mov
stc
fcoms
xchg
push
jo
outsl
popl
clc
mov
jg
popl
stc
inc
cmpsl
daa
jl
rep
adcb
push
fistl
mov
cmpb
jno
inc
leave
xchg
mov
dec
adc
mov
nop
cmp
bound
cmp
adc
gs
daa
adc
sahf
stos
or
jb
inc
mov
daa
popa
daa
cmpsl
mov
es
cwtl
mov
push
mov
mov
out
sub
mov
mov
inc
rcrb
and
or
xchg
enter
orl
inc
and
sbb
cmpsb
xor
stos
adc
or
bnd
gs
cld
jl
movsl
adc
shlb
call
sbb
call
sbb
mov
xchg
lock
or
rorb
sub
lret
jno
mov
clc
test
adc
mov
jns
lcall
cmp
ret
enter
nopl
test
mov
out
pop
shll
js
cmp
pop
ja
ret
xchg
ja
jl
aas
pop
ja
ret
adc
ja
jl
aas
daa
ja
xlat
xor
mov
popa
ret
dec
adc
xchg
xchg
inc
in
mov
inc
sub
aaa
adc
ret
push
lahf
push
add
jecxz
lret
aas
ja
ds
testb
das
out
insb
mov
iret
out
outsl
ja
jmp
add
scas
les
cmp
xchg
mov
sarb
rcrl
es
sbb
xchg
inc
shll
repz
mov
outsl
ja
call
shll
push
adc
jg
test
and
push
sarl
mov
inc
bound
adc
outsl
mov
adc
loope
add
ja
lea
movsl
xchg
ja
mov
repnz
mov
adc
or
jnp
dec
adc
mov
hlt
scas
jg
ret
push
sub
daa
sbb
mov
adc
mov
aam
mov
in
dec
adc
shlb
test
test
daa
sbb
movsl
dec
xchg
into
adc
adc
es
or
adc
aaa
or
cld
xor
xlat
mov
nop
icebp
nop
pop
into
mov
int
cmp
fbld
dec
fnsave
mov
ljmp
out
jns
or
lea
ret
and
inc
scas
xor
mov
xchg
jns
clc
outsb
push
sbb
push
cmp
xchg
mov
sbb
xchg
sub
enter
cmp
in
cwtl
lea
mov
in
push
cmp
xchg
mov
cmpsb
or
lea
scas
les
cs
xchg
lahf
loope
leave
in
xlat
jns
ss
inc
mov
jno
or
inc
ds
xchg
and
pop
popa
aad
dec
adc
inc
sub
loop
xor
dec
adc
and
push
in
xor
adc
jno
cmp
xchg
mov
in
stos
fbld
dec
mov
es
popl
adc
outsb
repnz
sbb
sbb
mov
jbe
out
lock
or
inc
jle
into
fs
mov
out
push
lea
and
sub
xor
xchg
sbb
sbb
dec
xor
movsl
es
inc
adc
adc
enter
cmpsb
xchg
xchg
mov
loope
movq
stos
jecxz
mov
es
cmc
loopne
mov
lcall
ud1
fwait
ja
jl
out
lcall
seta
ja
lock
ja
pop
mov
ja
rep
mov
call
call
ja
lock
ja
pop
sub
in
inc
fmulp
scas
in
cmp
or
push
out
rcrb
ret
adc
xor
out
xchg
xchg
testl
and
xchg
push
mov
xchg
adc
ret
adc
loop
and
in
jle
adcl
mov
xchg
xchg
and
in
xor
inc
cmpsb
ja
xchg
mov
decl
lea
ret
jo
adc
les
cmp
xchg
mov
out
inc
lea
and
or
inc
cmp
cmp
inc
adc
shll
xchg
adc
dec
repnz
sbb
xchg
mov
in
bound
pop
repnz
sbb
sbb
into
xchg
push
mov
xchg
pushf
xor
mov
xchg
xchg
mov
daa
and
jne
adc
sub
repnz
mov
ret
outsl
test
jl
aas
test
ret
stc
test
je
pushf
movsb
dec
and
push
lcall
xchg
jo
xchg
adc
pop
addl
popf
push
jg
pop
cltd
sahf
mov
movsl
shlb
mov
adc
inc
jbe
orb
adc
aad
sub
stc
lods
ja
clc
inc
mov
ja
xchg
mov
movsb
mov
es
mov
shlb
mov
lds
adc
lds
inc
int
daa
jbe
rorl
fcoms
mov
aad
adc
mov
lods
xor
fisttpll
jle
push
pop
ret
test
push
in
mov
xchg
arpl
jg
and
push
adc
push
es
cmp
xchg
dec
stos
repz
adc
std
loop
ja
inc
push
xchg
adc
inc
adc
add
lahf
push
ss
inc
into
mov
xor
mov
fdivrl
aaa
adc
inc
mov
cmpsl
adc
xchg
lds
sbb
dec
jp
inc
jl
dec
test
jmp
hlt
enter
and
inc
cmpsb
adc
and
mov
pop
sub
pop
cmpsb
or
lea
ret
adc
xor
mov
sbb
mov
sbb
pop
je
or
es
xchg
inc
adc
inc
mov
dec
movhps
mov
stos
pop
dec
push
sub
loop
sbb
xchg
les
and
in
or
jae
xor
inc
sahf
adc
cli
sbb
scas
mov
jnp
xor
inc
call
je
xchg
xor
fidivrs
bound
pushf
adc
adc
repnz
sbb
sbb
into
nop
sbb
stc
pop
fs
insl
mov
xchg
cmp
into
sti
xor
std
sub
into
push
mov
mov
cli
adc
inc
pushf
mov
adc
movsb
sar
jo
dec
movsb
ja
sub
xchg
lods
pop
pop
outsb
mov
jecxz
imul
mov
popa
sbb
lret
sahf
cmp
js
movsl
dec
es
loop
mov
jne
sbb
jno
or
inc
enter
push
int3
in
xor
or
xor
aam
jno
inc
dec
mov
inc
sub
xor
push
jg
xchg
in
mov
fidivl
xchg
adc
in
imull
fs
cmpsb
xchg
mov
inc
mov
imul
xchg
mov
bound
sbb
sub
sub
sbb
mov
or
mov
mov
push
adc
jb
cmpsl
adc
jle
aad
xchg
dec
inc
or
adc
or
adc
out
xor
pop
rcll
adc
xor
scas
mov
dec
dec
adc
adc
in
dec
adc
sub
adc
mov
lea
es
loop
inc
pushf
testl
cmp
lods
mull
imul
sbb
and
sub
xor
into
decl
lea
mov
shlb
xchg
sbb
cmpsl
sub
imul
sbb
stos
fbstp
dec
leave
lret
pop
dec
jae
js
mov
jnp
adc
and
inc
xchg
xor
mov
xchg
mov
mov
inc
mov
test
xchg
idiv
fs
push
fwait
les
adc
ret
and
inc
xchg
xor
xchg
fisubl
xchg
xchg
sbb
sbb
adc
loop
xor
adc
adc
inc
or
adc
pop
ret
pop
add
fdivr
push
movsl
adc
lret
cmp
cmp
les
pop
ret
rcll
pop
mov
lea
xchg
cmp
xchg
mov
xchg
int
in
xor
xor
mov
clc
fs
psllq
aad
rcrb
jg
sub
daa
aad
mov
jecxz
cmp
ja
ds
xchg
ja
loope
add
ds
adc
ja
loope
or
ds
mov
out
adc
ds
xor
ja
loope
adc
ds
lds
ja
loope
sbb
ds
push
and
loope
and
ds
loopne
ja
loope
sub
ds
jno
ja
loope
xor
ds
add
ja
ljmp
xchg
cmp
sbb
mov
mov
push
adc
mov
mov
cld
movsl
adc
adc
inc
dec
bound
iret
sbb
cmp
lret
daa
fs
or
sub
and
in
xor
xor
xor
cmp
push
jecxz
mov
push
jb
sahf
xchg
mov
xchg
std
jp
test
mov
sahf
and
or
inc
addb
adc
cmp
mov
xchg
cmp
xchg
jp
in
xor
lcall
mov
pushf
xor
inc
mov
mov
or
xchg
pop
stos
in
xor
clc
loop
mov
repnz
inc
mov
xor
mov
cmp
xchg
push
enter
or
inc
lret
fs
xchg
push
rol
cmpsb
cmp
mov
bound
push
inc
sahf
and
xor
shl
neg
fs
push
xchg
or
lea
into
les
inc
mov
mov
fildll
es
or
sub
ja
loope
cli
ja
ds
int
ja
loope
add
ds
or
scas
test
daa
mov
cmpsl
es
or
in
push
adc
lret
xchg
mov
sbb
lods
inc
mov
andb
and
in
adc
xor
adc
hlt
or
rclb
jno
or
inc
xor
and
add
and
xor
xchg
repz
pop
cmp
inc
repnz
sbb
inc
xchg
cmp
xchg
mov
cmpsb
mov
mov
sbb
push
xchg
sub
in
xor
pop
cvtpi2ps
cwtl
test
repnz
adc
sbb
sub
and
xchg
imul
cvtpi2ps
xchg
push
enter
xor
xchg
mov
mov
push
imul
mov
xchg
or
in
xor
inc
or
clc
fs
push
xchg
mov
mov
jmp
cmp
xor
pushf
adc
cmpsb
bound
pushf
adc
sub
mov
inc
sbb
loop
adc
sbb
mov
mov
fdivl
out
mov
dec
fcomi
or
push
jge
loop,pn
leave
mov
push
adc
xchg
roll
es
fldenv
mov
xchg
fstps
mov
loope
xor
mull
sub
loope
cmpsl
mov
std
push
jmp
sbb
pushf
adc
adc
icebp
repnz
sbb
jb
inc
enter
les
cmp
inc
jb
loope
dec
in
ja
or
ja
adc
ja
mov
sub
sti
icebp
xchg
adc
adc
jmp
dec
adc
sahf
mov
sbb
or
lea
scas
enter
xor
nop
repnz
mov
sub
xchg
sub
mov
inc
xor
ja
addb
cmp
sbb
jl
ja
inc
test
inc
ja
adcb
ja
add
dec
ja
or
push
push
ja
push
and
push
mov
cmc
pop
ja
inc
inc
pop
ja
adcb
pusha
ja
or
push
push
push
inc
ja
mov
ja
inc
mov
or
adc
cmp
adcb
call
andb
mov
mov
out
bound
fsub
mov
imul
mov
or
xchg
xor
scas
mov
enter
aaa
hlt
test
call
fsubrp
cmp
das
stos
and
mov
or
daa
or
lea
into
les
adc
mov
jle
jl
xchg
sub
je
or
movsl
adc
aad
xchg
xor
dec
stos
dec
out
cwtl
mov
push
rclb
enter
push
fsub
mov
and
and
push
loopne
shl
cli
push
loopne
fisubl
fisubrs
bound
mov
ds
mov
adc
xchg
sub
in
xchg
and
lock
inc
adc
clc
cmp
inc
into
xor
jg
test
imul
cmpsb
xchg
cmp
mov
sbb
push
dec
sti
test
pop
jg
or
jg
adc
and
jg
adc
daa
inc
jg
call
jg
inc
das
jg
mov
adc
cltd
sub
das
dec
imul
es
sahf
jbe
popa
adc
cwtl
ret
xchg
adc
call
sub
ret
inc
sub
xchg
xchg
mov
sbb
adc
cmpsb
je
xchg
fidivrl
cmpsb
jb
test
sub
adc
push
cmp
xchg
pop
sub
cmpsb
xchg
aam
push
es
jnp
loop
addr16
adc
repnz
adc
mov
outsl
cmp
jle
gs
sub
sub
push
scas
mov
or
adc
jle
divl
ja
jg
xchg
fimull
inc
rclb
xchg
pop
rorl
cmpsl
adc
xchg
cli
adc
adc
jb
and
in
xor
push
xchg
out
test
push
cmp
or
and
imul
jne
cmpsl
adc
dec
push
stc
fisttpl
aas
mov
es
push
scas
dec
and
stc
je
adc
pushf
jg
mov
es
nop
or
cmp
pop
adc
test
xchg
cld
leave
push
mov
aas
mov
idivl
divl
insl
mov
xchg
iret
jg
adc
iret
jg
xor
xlat
jg
clc
adc
fistpll
inc
and
jg
test
ja
stc
mov
and
adc
xchg
push
xchg
loop
out
mov
in
mov
enter
movsl
adc
sahf
or
inc
dec
cmpsb
fs
push
test
mov
mov
adc
into
sbb
push
dec
lods
push
ret
jg
add
push
jg
or
jg
adc
and
jg
pop
es
jg
test
jg,pn
orb
adc
sub
in
ss
adc
ss
lea
clc
fidivrl
inc
jg
cs
jg
inc
jnp
jg
or
jg
add
dec
jg
or
jg
adc
and
push
pop
pop
dec
jg
lock
pop
jg
inc
stc
pop
jg
orb
cmp
pop
out
daa
xchg
pop
cmpsl
fdiv
outsb
scas
es
sub
jg
mov
mov
dec
hlt
adc
fnsave
es
aam
lds
cmp
sbb
xchg
mov
clc
xchg
xchg
pop
and
mov
loop
sbb
ficoml
xchg
fistpl
popf
sbb
outsl
cmp
push
xchg
bound
xchg
sbb
gs
sahf
es
mov
xchg
pop
sub
push
xor
cmp
xchg
es
mov
jg
jmp
scas
jg
pop
sahf
out
les
scas
inc
xchg
cmp
push
iret
and
scas
or
out
push
jno
es
adc
lahf
stos
testl
mov
push
dec
es
jg
stc
dec
sbb
mov
fisubs
push
xchg
stos
testl
fidivrs
adcb
out
sub
ds
jg
adc
mov
cmp
xchg
xor
dec
dec
dec
fsubrs
add
xor
aam
rcrl
stos
mov
jae
inc
dec
addr16
scas
dec
lods
inc
add
psubw
sbb
shlb
stos
divb
lcall
adc
cmp
adc
mov
ret
xchg
stc
nop
xchg
sbb
ja
sub
and
lret
and
sub
insb
sub
sub
or
pop
xor
scas
cmp
cmp
dec
cmp
inc
jg
push
inc
mov
fistl
inc
dec
mov
fstl
mov
call
sub
lret
cmc
sbb
adc
pop
jg
cmp
pop
jg
xchg
jg
int3
gs
inc
adc
or
add
insl
jg
or
jne
pop
xchg
push
sbb
je
mov
xlat
std
dec
sbb
jg
enter
cmc
and
jle
push
adc
lret
adc
bound
lea
xor
inc
mov
rcll
fsubl
pop
sahf
or
cmpsl
adc
jb
mov
or
lea
notl
adc
popa
mov
jg
inc
cli
mov
inc
sbb
xor
push
and
jae
cmpsb
sbb
fidivrs
cmp
sbb
push
lret
jae
xor
push
and
jns
or
lea
pop
or
aad
cmpsb
lret
aad
push
in
daa
sbb
movsl
es
les
adc
scas
xchg
xor
out
repnz
test
jg
or
cmc
adc
fists
sub
xchg
and
pop
mov
cmp
cmpsl
mov
dec
push
in
es
jno
jp
cwtl
lcall
aad
movsl
daa
push
int
test
jg
fbld
xor
xchg
lock
jb
jg
cmpb
daa
pop
repz
popa
dec
sub
ds
popf
xor
jecxz
ljmp
cmp
jecxz
jnp
xchg
push
inc
loope
cmp
or
jg
inc
jg
xchg
mov
sahf
dec
dec
adc
scas
nop
jecxz
mov
out
and
push
imul
mov
vmovapd
into
cmpsb
cmp
and
mov
jb
loop
sbb
xchg
or
lea
ret
adc
add
xchg
push
je
sbb
int3
adc
es
movsb
adc
test
and
out
inc
jg
xor
jg
adc
jg
add
mov
or
jg
sub
adc
push
pushf
or
jb
arpl
adc
cmpsb
xchg
shr
xor
rep
popa
rep
jg
ds
inc
mov
jecxz
xchg
cmp
sub
mov
push
sub
jns
or
lea
mov
int
cmp
and
test
mov
push
mov
mov
ss
or
jg
mov
pop
xchg
adc
mov
adc
or
in
xor
lea
and
sub
xor
jb
xchg
mov
in
cwtl
int3
cmpsl
adc
cwtl
adc
adc
cmp
add
mov
cwtl
test
or
lret
dec
adc
push
xor
add
xchg
cmc
adc
push
adc
cwtl
fstpl
dec
adc
inc
lret
xchg
cwtl
test
and
cmpsl
adc
cwtl
sbb
sub
sub
push
adc
stos
jg
xor
shrl
xor
fstpt
test
jg
or
out
jg
sub
inc
jg
jo
inc
jg
jno
mov
xchg
or
in
stos
pop
push
dec
adc
sub
clc
shll
and
sbb
arpl
sub
xor
imul
fsubrl
sbb
sbb
adc
loop
xor
pop
adc
push
jnp
push
sub
adc
insb
enter
cmp
xchg
xchg
cmp
adc
xchg
adc
mov
fs
xor
sub
adc
adc
adc
fwait
repnz
sbb
aas
mov
adc
mov
and
sbb
cmp
xchg
pushf
loope
insl
mov
xor
repz
or
mov
xchg
xor
xchg
adc
mov
cmp
movsl
stos
mov
lret
es
lret
jg
lcall
rcrl
mov
int
daa
cs
dec
adc
and
ss
jno
pop
xor
cmp
adc
jecxz
std
cli
repz
out
ret
jg
add
jmp
sub
repz
push
repz
jg
mov
idiv
jg
addb
adc
sub
in
jg
imul
test
dec
jg
jecxz
shlb
das
lahf
adc
lods
sahf
lds
clc
mov
movsl
test
call
adc
repz
pop
mov
add
cmp
movsb
push
mov
sub
and
test
cmp
imul
xchg
jg
clc
mov
jg
xchg
dec
jg
clc
sub
jg
mov
pop
jecxz
int3
push
jg
ds
sbb
jecxz
insl
pop
jg
ds
mov
push
bound
ds
pop
bound
loope
bound
ds
std
push
jecxz
dec
push
ds
sahf
jb
jecxz
jmp
jg
sub
jp
dec
pop
popa
or
jp
bound
adcb
mov
popa
lcall
push
pop
mov
or
pop
lcall
ds
mov
mov
ret
cltd
mov
imul
jecxz
mov
sahf
push
fdivl
adc
and
mov
bound
adc
and
pop
pop
lret
push
and
mov
test
ficoml
add
ficoml
push
movsb
adc
jmp
loop
jl
sub
ljmp
fs
and
es
xchg
pop
repnz
lcall
jge
outsb
pushf
dec
adc
mov
nop
cmp
mov
fstp
jp
popf
cli
adc
sbb
or
mov
push
add
and
pop
xchg
sub
or
or
adc
popf
jns
cmpsl
rolb
lods
adc
adc
xor
and
xchg
adc
es
and
push
sahf
movb
cmp
rorb
jb
and
sahf
xor
push
and
test
sub
gs
out
adc
cmp
mov
sbb
cmovno
lods
ss
cltd
push
or
shr
int3
pop
imul
stos
adc
sbb
push
xchg
mov
fsts
repz
mov
mov
pusha
jg
pop
jg
adc
jno
push
adc
sbb
xchg
mov
adc
ljmp
jno
mov
cmpsl
adc
dec
adc
adc
sbb
sbb
mov
into
orl
sbb
mov
out
sub
mov
or
push
cwtl
mov
dec
jg
shll
sbb
cltd
xchg
adc
jb
and
in
xor
hlt
sbb
xchg
pop
test
cmp
sbb
xchg
loop
sbb
loope
xor
adc
hlt
popa
mov
and
pop
sub
jb
iret
shll
sbb
cmpsl
adc
inc
adc
fnstenv
or
flds
push
adc
lret
clc
jle
cmpsb
mov
push
and
popa
sbb
jg
adc
pop
and
icebp
in
xor
xor
into
adc
loope
mov
cmp
and
and
movl
sub
in
push
dec
cmpsb
mov
mov
sbbl
adc
adc
adc
or
inc
sbb
or
movsb
jb
cmp
lret
and
and
sub
xchg
into
or
lea
or
adc
sbb
nop
dec
mov
or
and
push
loop
inc
push
dec
scas
ljmp
inc
and
dec
stos
ret
push
and
mov
ret
xchg
adc
push
cmp
out
dec
lea
mov
mov
pop
test
dec
adc
dec
pusha
sub
mov
pusha
pop
pop
push
lahf
push
mov
mov
lea
xchg
les
inc
fimull
sbb
xchg
into
xchg
jbe
dec
adc
sahf
cmpsb
enter
into
sbb
xchg
xchg
lahf
adc
adc
mov
or
xchg
stos
test
sub
cmpsl
adc
stos
adc
adc
cwtl
sub
into
sub
cmpsb
push
bound
push
lret
movb
into
cmpsb
pushf
xor
dec
cmp
adc
jb
jnp
or
test
jmp
cmp
and
jg
ffreep
or
jg
adc
mov
mov
lret
daa
pushf
faddp
rolb
rolb
push
pushf
adc
adc
repnz
mov
jp
mov
or
bound
push
in
orl
inc
and
sbb
sahf
xchg
mov
xchg
gs
xor
mov
cmpsb
or
inc
clc
enter
push
mov
jmp
xchg
sub
jecxz
xchg
pop
xchg
push
rcll
inc
xchg
inc
jb
mov
daa
xchg
or
daa
xchg
daa
xchg
push
add
inc
xchg
inc
mov
lock
xchg
sub
xchg
aas
xchg
inc
xchg
in
xor
test
add
out
in
aam
xchg
inc
jne
xchg
jae
push
ret
push
sahf
les
pop
cmp
adc
cmp
xchg
pop
xor
test
repz
xor
inc
ja
movb
loope
cmp
push
jg
shrl
adc
mov
das
and
xchg
adc
xchg
adc
jo
xchg
out
xor
dec
adc
sub
xchg
or
inc
xchg
enter
push
xchg
dec
rcrb
push
pop
mov
or
cmpsl
xchg
adc
scas
xor
xchg
scas
cmp
adc
xor
sbb
xor
or
test
jp
jecxz
inc
add
adc
shrl
dec
es
mov
sub
lea
es
insl
test
jb
mov
xlat
scas
es
jnp
xchg
lcall
fistpll
pop
div
sub
cmc
test
adc
sbb
cvtdq2ps
cmc
adc
out
adc
mov
testl
incl
xchg
sub
in
int
outsl
adc
addr16
cmp
adc
mov
or
inc
push
cmpsl
push
imul
mov
loop
or
out
bound
push
test
es
clc
stc
es
xchg
inc
lcall
xchg
sub
mov
xchg
adc
cltd
inc
sub
jle
xchg
adc
imul
jl
jmp
inc
and
daa
dec
xchg
and
xchg
daa
enter
cmp
sbb
xchg
in
mov
inc
mov
pop
pop
pop
cmp
xchg
mov
or
cmpsb
and
enter
outsb
push
inc
mov
jmp
lds
xchg
lahf
loope
fistpll
mov
adc
jl
int
adc
pop
sarb
and
scas
icebp
outsb
lcall
lds
movsb
call
sub
cli
sub
jb
jp
scas
dec
mov
mov
sub
xchg
mov
sahf
es
cmpsb
push
sahf
cli
pop
roll
jnp
xchg
adc
daa
xor
xor
popa
push
scas
dec
cmp
cmp
dec
es
or
inc
pop
adc
mov
daa
lods
inc
enter
push
jo
adc
dec
es
js
cmpsl
stos
adc
adc
cmpsl
mov
cmp
sub
adc
mov
xor
icebp
fimuls
inc
pop
outsl
ret
xchg
adc
out
jo
adc
ret
adc
negl
mov
imul
inc
cmpsb
mov
es
add
cmpsl
adc
push
jne
mov
xor
pop
mov
nop
shl
hlt
xchg
stos
rorl
pop
adc
xchg
push
sbb
jbe
rcll
scas
scas
lea
test
sub
mov
and
or
and
in
jb
xchg
adc
sbb
xchg
outsb
pop
pop
adc
xchg
scas
ret
xchg
test
and
inc
xchg
inc
icebp
sub
xchg
adc
push
inc
mov
inc
into
in
insb
and
xchg
aad
xor
cmp
inc
xchg
andb
xchg
sub
ret
adc
loop
push
push
lcall
xlat
es
ret
xchg
sub
push
pop
xchg
imul
cmpsl
gs
inc
into
and
jmp
push
add
xchg
or
loop
xchg
push
xorl
mov
inc
and
xchg
sti
jno
jge
push
roll
xchg
sub
mov
xchg
stos
pushf
sub
bound
test
xchg
adc
les
sahf
or
adc
jno
or
inc
movsl
xchg
out
sub
xor
test
ljmp
xchg
dec
adc
mov
mov
sahf
test
mov
sub
mov
fdivrl
xchg
adc
and
lds
fucom
int3
push
and
into
mov
les
cmp
sahf
or
xchg
int
inc
mov
js
fst
adc
je
in
cmp
or
xchg
js
mov
xor
xor
mov
dec
es
sub
in
sbb
mov
in
dec
adc
mov
and
loop
cmpsb
sbb
dec
sbb
push
cmc
xchg
into
jo
repz
or
xchg
adc
leave
or
jb
mov
lods
or
es
or
clc
clc
notb
xchg
es
jl
ds
sbb
dec
mov
add
iret
and
jb
lcall
sub
pop
and
in
adc
lret
sbb
or
adc
mov
out
cmp
adc
xor
mov
fldl
or
xor
cmp
lret
push
sti
loope
push
xchg
lea
stos
insb
or
lock
pop
xchg
or
sub
jbe
in
adc
adc
xchg
mov
inc
insb
sarb
adc
adc
je
mov
xchg
enter
sbb
sbb
in
and
mov
mov
inc
or
cmpsb
mov
pop
mov
inc
sub
xor
or
inc
xchg
shl
test
hlt
out
and
xchg
inc
frstor
xchg
sub
lret
lods
xchg
mov
test
movsl
adc
mov
or
pop
mov
les
xchg
sub
popf
int3
xchg
int3
xchg
lahf
lods
out
lds
pop
pop
fcom
frstor
es
mov
mov
mov
scas
adc
in
into
sbb
or
scas
inc
les
mov
sahf
sub
adc
cmp
sub
out
and
mov
xor
adc
jb
push
cld
adc
or
xchg
es
xor
dec
mov
adc
mov
nop
xor
ficoms
xchg
ror
mov
xchg
xchg
jg
in
xor
xor
cmpsb
and
dec
push
les
cmp
xchg
lahf
loope
push
sub
or
lea
into
enter
or
inc
xor
test
dec
adc
xor
sahf
cmp
jmp
in
sarl
inc
dec
adc
sub
fldcw
pop
sub
adc
adc
and
push
push
jno
push
sbb
mov
xchg
mov
or
xchg
xor
mov
xchg
stos
mov
and
jo
cltd
shll
enter
push
jnp
call
mov
bound
push
inc
sahf
and
inc
cmpsb
xor
mov
and
push
push
mov
mov
enter
adc
xchg
lock
pushf
adc
adc
sti
push
xchg
scas
or
lea
ret
adc
mov
and
mov
mov
into
or
xchg
adc
sbb
mov
xchg
sahf
xchg
outsb
ret
mov
xor
enter
ret
xchg
jl
and
lret
push
push
negb
push
es
dec
in
mov
xor
fiadds
inc
adc
dec
lds
repnz
pop
es
xor
es
pop
jecxz
pushf
mov
jecxz
or
roll
jmp
mov
adc
sub
and
mov
into
into
jb
xor
test
fdivl
int3
sti
pop
cmp
sti
es
or
add
adc
sbb
mov
xchg
adc
and
and
and
push
push
adc
repz
sahf
daa
cmpsb
into
adc
xlat
sbb
or
pop
gs
sub
mov
push
jge,pt
and
jg
lret
or
sbb
sub
xchg
and
sub
fisubl
adc
call
mov
xchg
push
mov
jne
jmp
pop
int3
jne
push
cmp
mov
push
les
jb
std
filds
adc
lods
mov
adc
clc
jb
mov
mov
fstpt
xor
push
pop
dec
pop
es
repz
push
sahf
sbb
or
mov
adc
pop
and
mov
pop
scas
cmp
dec
xchg
adc
scas
xchg
mov
xchg
popa
push
bound
cmp
push
push
lcall
xchg
psrad
xor
mov
mov
jns
inc
jl
push
mull
jp
adc
je
cmp
lret
out
adc
sub
or
push
andb
mov
sub
jmp
enter
cmp
cli
mov
mov
sub
xor
lods
cmp
and
lcall
adc
adc
clc
bound
xchg
cwtl
lea
movsl
test
sub
clc
push
stos
lods
mov
fsubrl
mov
inc
sahf
adc
mov
cmpsb
mov
adc
mov
mov
sub
dec
mov
mov
dec
cmpsl
push
in
adc
or
sub
outsl
ret
or
gs
lret
add
dec
lret
xchg
cmpsb
in
iret
push
rclb
enter
and
cmp
andb
into
xchg
add
push
and
cmp
clc
push
leave
daa
xor
loop
outsb
mov
loop
cmp
jecxz
call
or
adc
mov
jg
pop
ljmp
cmp
loop
repnz
mov
cli
data16
out
mov
jnp
mov
pop
sbb
adc
or
inc
or
scas
xchg
mov
mov
mov
lret
aad
adc
adc
fmuls
cmpsb
test
sbb
bound
xor
cli
mov
out
sub
fcomip
sub
out
ret
xchg
ljmp
xchg
add
adc
or
or
xchg
lret
cmp
xchg
sti
es
jge
cld
dec
xchg
outsl
mov
jmp
lock
lret
sub
cmp
push
and
push
sub
dec
testl
int
xchg
xor
sbb
negl
ret
xchg
sub
xchg
jno
test
and
push
jns
xchg
inc
lahf
addl
cmp
mov
daa
bound
and
cs
sbb
mov
nop
jnp
sahf
xchg
xor
push
popf
int3
lods
adc
xchg
push
shll
xchg
sub
lods
test
test
mov
jnp
loope
mov
or
add
mov
mov
roll
js
jle
leave
xchg
loope
leave
xchg
sbbb
xchg
sub
mov
add
flds
xchg
loope
test
and
xchg
loope
xchg
inc
ljmp
xchg
sub
fdiv
xchg
stc
xchg
push
into
roll
push
adc
xchg
push
or
xchg
sbbb
adc
sub
lcall
lods
dec
inc
sbb
in
and
adc
and
fldt
sub
das
xor
xor
ficoms
cmp
inc
or
or
adc
lods
lods
inc
dec
mov
dec
or
dec
push
sub
fwait
push
lods
call
pop
or
mov
adc
pusha
lods
sub
mov
push
int3
adc
push
enter
pop
insl
jo
adc
xchg
xchg
push
js
cmp
xchg
pop
mov
and
xchg
sbbb
popf
in
inc
jmp
adc
dec
aas
inc
nop
mov
xchg
cltd
or
nop
fimuls
daa
sub
jp
test
mov
push
and
pop
mov
test
mov
push
and
popf
in
dec
enter
cltd
mov
bound
rclb
fcoml
xor
xor
jge
test
sub
cmp
lods
fcmovnb
imul
adc
loopne
pop
loopne
inc
dec
adc
sti
stos
adc
out
lock
lds
pushf
lock
xor
jmp
clc
pop
mov
jno
mov
fbld
jae
in
sub
js
adc
lods
cwtl
lock
popl
adc
adc
scas
mov
nopl
dec
cmpsb
dec
or
pop
cmpsb
sbb
lock
daa
popl
sbb
in
xor
xor
sub
mov
adc
adc
sbb
and
jnp
movsb
mov
adc
adc
movsb
mov
es
xchg
hlt
cld
rorl
iret
or
push
adc
push
push
stc
push
inc
mov
out
test
out
addr16
push
adc
addr16
addr16
into
push
vmovdqa
sbb
mov
pop
pop
cmp
xchg
loope
jg
das
fistps
insb
jg
push
adc
and
inc
mov
push
cld
xor
inc
popf
xchg
xchg
adc
sub
mov
adc
frstor
sub
dec
adc
mov
in
into
mov
sbb
mov
test
and
inc
mov
inc
stos
mov
adc
sub
cwtl
push
adc
iret
loop
sbb
dec
adc
xchg
mov
test
fldt
cmp
std
test
jl
popl
or
add
out
sub
mov
or
out
push
lods
testl
out
ret
adc
out
sub
adc
sub
mov
push
adc
push
std
dec
lock
popl
jg
das
fistps
int3
push
push
push
sbb
lahf
jecxz
insl
push
jp
pop
mov
and
imul
dec
mov
jae
cltd
sbb
adc
mov
leave
jl
rcrl
ss
adc
scas
lahf
scas
or
adc
lcall
adc
dec
adc
and
and
or
dec
or
push
push
jno
inc
mov
es
cmovnp
pop
jle
data16
push
cltd
cmpsl
daa
aam
lock
outsb
jg
xchg
cmp
mov
enter
sub
mov
xchg
xchg
arpl
jbe
dec
loop
cmpb
pop
notrack
adc
mov
sub
call
inc
and
or
sti
in
or
mov
pushf
sahf
sahf
push
cmp
mov
fisttps
push
sub
scas
popl
or
add
mov
mov
adc
mov
pop
sbb
sub
jo
clc
fs
imul
daa
mov
in
movsl
es
loope
fimuls
out
push
adc
out
push
sbb
inc
mov
inc
mov
or
adc
sub
lods
decb
ficoml
push
xchg
outsb
call
lcall
push
cmp
or
movsb
and
mov
inc
pop
and
or
push
imul
jl
pop
and
inc
mov
inc
dec
xor
cmp
cmp
inc
push
adc
and
push
sub
inc
mov
dec
fs
push
push
adc
mov
or
adc
outsl
stos
mov
imul
mov
inc
cwtl
insl
jne
adc
sub
mov
push
adc
jge
test
and
inc
mov
inc
sbb
push
adc
sub
or
movsl
jns
inc
pop
es
out
sbb
into
cli
mov
iret
movsl
lods
pushf
test
and
xchg
xchg
dec
xor
or
lods
ja
lds
popa
adc
stos
and
out
es
jnp
sub
add
test
inc
mov
mov
hlt
movsl
push
xor
mov
movsl
cwtl
mov
lds
test
mov
pop
mov
xchg
mov
xor
adc
sbb
aad
sar
xor
push
aad
xchg
lods
mov
xchg
cmp
lds
xor
xchg
adc
mov
ret
adc
mov
xor
dec
mov
in
dec
cmpsl
ja
ljmp
es
dec
clc
pop
cmc
xchg
push
les
cld
insl
adc
jb
scas
cmp
mov
lds
sti
mov
xchg
bnd
mov
out
imulb
lock
cld
jl
aas
adc
ret
enter
adc
lret
mov
jno
sub
mov
pop
and
or
and
mov
aaa
xor
sub
bound
and
push
and
adc
push
jle
lds
cmp
es
dec
pop
inc
adc
es
inc
push
pop
adc
adc
cmp
pop
dec
cld
ja
and
adc
sbb
pop
or
pop
in
int
daa
sub
insb
rolb
lret
jmp
out
add
fs
xchg
adc
add
clc
jmp
push
insb
pop
aaa
daa
cmp
sbb
je
inc
mov
fmul
fisttpll
mov
jecxz
inc
jl
es
fldcw
cltd
adc
rorl
sub
cmp
adc
jb
mov
jp
shll
mov
daa
xchg
std
ss
pop
push
pushf
jecxz
sti
pushf
ds
movsb
adc
cmp
movsb
jno
sbb
lods
xchg
daa
xlat
out
sub
notl
mov
lea
mov
lret
jmp
adc
scas
jmp
lcall
icebp
lock
int3
decl
and
cmp
lds
sti
adc
jne
stos
fxch
sahf
adc
pop
adc
in
dec
in
or
sub
sub
push
hlt
lods
jmp
hlt
mov
cld
or
stos
cld
sub
popl
lods
imul
hlt
or
adc
or
adc
enter
lods
sbb
sbb
mov
push
and
pop
or
test
xor
and
test
inc
adc
and
test
push
adc
and
test
arpl
and
imul
test
jae
mov
jae
and
test
adcl
das
mov
mov
int3
xchg
lods
test
xchg
mov
fwait
or
push
mov
mov
stos
or
jmp
mov
test
mov
sub
dec
ret
lods
sub
mov
lret
or
ljmp
stos
inc
shll
push
sub
dec
jecxz
sub
mov
jmp
into
jmp
lods
iret
inc
repz
repz
sti
sub
imul
std
add
les
add
adc
or
pop
or
pop
insb
sbb
mov
push
and
and
sub
mov
xor
cmp
mov
inc
pop
out
dec
test
dec
adc
and
test
pop
adc
and
bound
push
lret
push
mov
jb
outsl
jp
bound
adc
and
sbbb
test
mov
adc
xchg
mov
mov
aas
add
sbb
je
mov
push
or
or
xchg
and
or
mov
hlt
jbe
test
pop
jle
sahf
and
pop
sbb
dec
ja
pop
das
decb
inc
out
xor
pop
inc
adc
sbb
std
popf
bound
sub
js
lds
sbb
mov
cli
cmp
stos
arpl
jl
jbe,pt
xor
outsw
push
mov
mov
dec
push
popf
jl
push
je
insl
xchg
lds
xor
inc
push
sbbl
or
test
push
insb
xor
cli
inc
shr
shrl
mov
xchg
imul
out
scas
shll
aas
cmp
nop
imul
hlt
stc
mov
call
and
cld
add
adc
mov
mov
cmp
jmp
decl
mov
mov
jp
das
jno
pop
xlat
fidivrl
jne
and
cli
dec
sbb
fcoms
dec
push
pop
and
push
pop
sti
mov
xchg
jg
push
icebp
nop
push
lcall
push
pop
sbb
or
ljmp
std
sbb
push
insb
mov
sbbb
dec
xchg
dec
jbe
sarb
scas
mov
jmp
cmpsl
mov
jmp
mov
cli
mov
lock
cli
clc
inc
push
and
and
lods
dec
add
dec
cmp
js
push
sub
dec
out
or
jl
mov
out
xchg
les
inc
movsb
or
jecxz
ja
pop
gs
push
inc
movsb
push
dec
push
cmc
push
and
sbb
mov
jge
loopne
pop
jo
and
clc
fldcw
cltd
xchg
jbe
mov
adc
mov
sbb
lods
pushf
fbld
cmp
sbb
repz
inc
insb
iret
inc
fistps
or
cmpsb
xchg
sahf
arpl
jle
adc
mov
leave
push
xchg
fstpl
clc
out
pop
addr16
xchg
fs
dec
push
xor
test
out
inc
cwtl
loopne
xchg
mov
mov
out
push
jmp
fisubrs
jl
ja
cmp
movsl
inc
mov
lds
pop
sbb
adc
mov
push
cmc
jnp
inc
xchg
popf
rcll
pop
inc
inc
push
scas
jbe
pop
fwait
pmullw
xor
std
mov
cld
std
cmpsb
mov
lods
push
test
sbb
movsb
dec
mov
dec
jecxz
mov
cmp
in
xchg
lret
mov
or
test
outsb
mulb
jl
hlt
mull
fildll
daa
insl
and
push
and
xlat
mov
and
jns
jg
sbb
jg
xchg
xchg
mov
mulb
scas
xchg
adc
jmp
push
mov
cs
das
movsb
pop
lahf
push
repnz
and
jle
lds
inc
fdivrs
bound
mov
push
add
les
cmp
and
fimuls
ja
scas
push
popf
dec
in
cld
add
mov
mov
and
pop
xchg
fidivl
outsl
fstpl
cmp
test
addr16
mov
imul
js
in
shrl
out
xchg
mov
mov
push
cmp
stc
lods
ds
mov
mov
out
xchg
repnz
cli
scas
xchg
mov
stc
jb
stos
std
imul
sti
cmc
in
mov
stc
das
out
ljmp
mov
push
jmp
cmp
outsb
sbb
stos
xchg
out
into
sbb
hlt
stos
mov
scas
cli
xchg
ljmp
mov
jmp
dec
jecxz
cli
scas
pop
idiv
jmp
pushl
loopne
dec
or
je
fs
cmp
sahf
call
dec
pop
scas
mov
stc
sbb
mov
lret
in
lret
xchg
movsb
cmpsl
inc
decb
stos
stos
pop
cli
das
xchg
decb
movswl
scas
sti
in
lret
popa
stos
mov
in
lods
out
decb
xchg
mov
ljmp
jle
jo
mov
in
mov
movsb
lods
mov
scas
pop
scas
sub
stos
stos
sub
scas
jmp
mov
aas
stos
stos
in
fwait
imul
stos
into
scas
hlt
out
lods
pop
out
stos
pop
loop
ljmp
ljmp
lahf
sub
mov
cli
mov
mov
scas
scas
xchg
scas
cmp
mov
scas
xchg
in
mov
cs
jmp
cmc
stos
cmpsb
lret
ljmp
inc
sti
mov
idivb
xchg
scas
outsl
out
pushl
xchg
mov
pop
jmp
xor
mov
mov
dec
mov
xchg
mov
scas
scas
xchg
stos
mov
mov
ljmp
in
sub
outsl
add
sarl
mov
mov
test
mov
mov
shrl
jmp
jno
xchg
clc
inc
stos
stos
cmc
mov
clc
jp
stos
dec
mov
mov
dec
scas
fwait
push
mov
call
movsb
out
mov
out
dec
scas
outsb
mov
fsincos
in
sub
jnp
out
std
outsb
in
cmp
mov
jmp
jmp
pop
cli
hlt
ljmp
test
scas
jg
mov
scas
cli
mov
loop
mov
mov
mov
mov
jno
call
lods
lods
cmp
jl
inc
push
int
insb
xchg
inc
cmpsl
ja
jae
and
or
ds
cmpsl
pop
inc
adc
sbb
dec
imul
outsb
mov
sub
sub
cmp
fiadds
jg
and
jp
inc
push
outsb
lds
jmp
or
es
lret
push
adc
dec
hlt
pop
popf
mov
xchg
mov
push
dec
cmp
movsb
out
imull
les
inc
pop
sbb
sbb
dec
fs
sbb
adc
mov
iret
cld
dec
aas
je
rcr
inc
cmp
insl
lret
mov
push
iret
std
cvtps2pd
stc
sbb
or
outsb
adc
out
xlat
in
lcall
gs
imul
mov
div
xchg
mul
mov
jle
test
out
pop
cli
inc
or
mov
jnp
outsb
sub
sbb
adc
cmpsb
fists
dec
insb
adc
xor
cmp
cmc
scas
repnz
ljmp
jmp
pop
jmp
dec
in
movsl
stos
cli
hlt
out
mov
sub
lret
jl
xor
aas
jne
fists
push
cld
mov
insb
not
scas
xchg
inc
pop
fdivrs
inc
leave
cld
mov
jns
jg
inc
sbb
pushf
push
gs
repnz
inc
std
cmc
int3
icebp
movsb
lods
xchg
pusha
aaa
popf
cmpsb
daa
xchg
into
roll
xor
jp
sub
jne
scas
pop
cli
cs
hlt
scas
mov
mov
in
sti
jne
cmpsl
movsl
cmc
pop
push
in
jne
cmpsl
cmc
aas
sbb
jp
pop
push
pop
lea
imul
xlat
notb
imul
ja
pop
fnstsw
stc
add
movsl
fmull
pop
mov
lret
cld
dec
ja
jmp
inc
and
and
outsl
cs
jecxz
sbb
pop
jo
push
addr16
sub
orl
push
xchg
pop
insl
in
mov
mov
clc
or
enter
loopw
lea
cmpsb
cltd
ljmp
mov
scas
jnp
cmpsb
inc
jge
jmp
out
out
inc
push
mov
jnp
inc
jge
lock
sub
dec
mov
sarb
cmp
dec
mov
inc
insl
sbb
push
xor
lret
jg
sbb
jle
fdiv
cmc
repnz
xchg
jg
lods
pushl
mov
sub
jle
push
jg
lcall
lds
jp
notl
jl
out
mov
sti
scas
dec
sub
ljmp
mov
stos
scas
dec
outsb
lcall
xchg
stos
mov
mov
stos
stos
pop
test
cld
jbe
and
int3
or
cmp
movsb
lods
mov
jne
cmp
call
cltd
pop
movsl
ja
push
std
cli
pop
jns
cmc
fucomp
jg
push
jge
fildll
xlat
jb
jno
pop
xlat
jp
sti
sbb
jne
insl
sub
jbe
sahf
mov
jmp
mov
inc
push
orb
push
inc
pop
popf
dec
cmp
or
sub
dec
out
rclb
xor
movsl
xchg
les
shll
pushf
inc
inc
movsb
or
cli
mov
je
je
mov
jmp
mov
mov
jmp
out
pop
fildll
mov
cmpsl
push
lahf
and
push
fists
stc
and
jmp
daa
push
fs
sahf
dec
aad
test
movsl
inc
jae
xlat
cli
pop
hlt
int3
div
dec
je
ja
jb
ret
jg
pop
pop
pop
rcl
sti
adc
and
scas
jl
push
sbb
outsl
fcompl
decl
jge
cmpsb
out
mov
int3
fisubrl
cli
push
inc
ja
fstpl
push
pop
testb
cli
push
scas
xchg
mov
fcmovu
cmp
sti
sbb
filds
das
mov
xor
or
fistpll
ret
incl
test
lea
push
push
pop
int3
mov
rorl
pop
lea
sahf
scas
movsl
jbe
fidivrs
xchg
mov
iret
mov
movsl
sub
push
cli
add
outsl
jo
sub
in
outsl
repnz
aaa
stc
into
sbb
mov
divb
inc
xchg
and
enter
mov
ss
enter
adc
fwait
sar
loopne
mov
fcomip
insl
cmp
into
sti
pop
jno
mov
sbb
into
xchg
sbb
je
mov
push
sbb
repnz
and
mov
ss
sbb
cmp
xor
push
pop
outsl
incb
fnstcw
mov
and
cmpsb
mov
jmp
jb
inc
xchg
scas
sbb
cmp
sbb
pop
pop
xchg
xchg
mov
scas
jbe
cmc
jge
insl
cmp
adc
sub
or
sub
jo
repnz
icebp
test
dec
scas
and
xchg
iret
enter
jp
mov
pop
add
sahf
aaa
rcrb
inc
xchg
out
dec
dec
mov
xchg
in
outsb
xor
movsb
jae
into
xchg
adc
js
mov
dec
sahf
mov
mov
jns
movsl
sbb
pushf
stos
cmc
imul
sahf
pop
daa
xchg
sbb
mov
iret
push
jbe
xorl
jl
xlat
call
sbb
inc
mov
pop
cli
iret
ret
jbe
sahf
jbe
jp
adc
dec
jae
cwtl
xlat
lret
call
push
lret
imul
jp
je
popa
sub
xchg
divb
test
jecxz
psubd
imul
loope
js
and
xchg
xchg
cmp
xchg
std
in
ficoms
stos
nop
jne
sahf
notl
fcmovnbe
in
test
xchg
jl
mov
jecxz
mov
sahf
scas
lea
mov
jl
lret
outsb
xor
les
out
and
fs
push
int3
jno
push
ss
je
movsl
sarb
outsb
mov
lret
mov
inc
cmp
mov
push
lods
mov
pop
jg
xchg
pop
out
adc
movsb
push
hlt
sub
mov
test
inc
xchg
mov
jno
jmp
and
out
imull
mov
xor
movsb
sub
pop
test
cmc
dec
ja
dec
dec
shlb
mov
xor
imul
fisttps
cmp
push
dec
jae
lret
sbb
xchg
sbb
mov
push
cmp
fildll
icebp
or
pop
mov
faddl
mov
into
sahf
cmpsl
insl
pop
jp
std
nop
scas
cli
shrl
and
imul
testl
xor
push
scas
je
je
int3
shll
xchg
push
insl
sbb
lahf
dec
lods
pushf
add
jl
lret
add
mov
push
mov
into
vmovdqa
sub
sbb
mov
in
movsb
stos
mov
mov
out
inc
imul
jle
in
push
stc
aas
clc
jno
in
jle,pt
mov
jnp
dec
shr
sbb
mov
outsb
gs
lock
inc
lock
repz
and
stos
inc
andb
jmp
mov
repnz
ljmp
nop
mov
jmp
or
mov
mov
std
jg
or
inc
jnp
in
cmp
dec
sarb
out
dec
repz
mov
in
mov
mov
xchg
pop
jg
xchg
inc
mov
cmp
xchg
mov
hlt
scas
sahf
cli
mov
ljmp
dec
test
std
push
mov
ljmp
mov
out
shrb
sub
insl
out
dec
outsb
sbb
mov
mov
movsl
mov
mov
add
cli
xlat
lods
fnstsw
stos
decb
fsubr
lods
sub
out
ljmp
push
mov
lods
sub
fsubrl
sbb
in
mov
les
mov
shrl
pop
test
fisubs
scas
jmp
sub
jp
ljmp
dec
stc
push
mov
xchg
call
jnp
push
mov
movsb
stos
ds
push
jmp
mov
stos
mov
test
push
xchg
stos
mov
ljmp
jnp
push
in
mov
cld
scas
in
loop
cmc
test
stos
stos
sar
test
scas
mov
hlt
in
jo
shlb
in
jae
jmp
in
cmp
or
movsl
ljmp
sbb
xor
sarl
cmpsb
mov
decb
xchg
out
shrl
sub
call
xchg
aad
push
jg
pop
pop
cld
aad
push
fmull
jmp
enter
mov
xchg
lcall
pop
and
scas
ror
jne
pop
imul
lret
call
lods
jg
mov
out
jl
shll
dec
ja
jno
mov
jge
call
jns
jg
mov
jge
xlat
imul
cs
test
jg
popf
aam
fstpl
push
cmp
pop
mov
pop
lret
jne
aad
pushf
les
xchg
imul
out
push
mov
push
addr16
lods
std
cmp
mov
jo
jg
sub
std
and
mov
jnp
mov
in
mov
xchg
stc
cmpsl
clc
adc
pop
loope
je
enter
pusha
les
xchg
and
sub
sub
fnstenv
scas
mov
movsl
pop
sbb
xchg
jl
rol
aaa
sbb
mov
loop
dec
dec
mov
dec
mov
mov
push
mov
fcompl
in
adc
aaa
stc
cmpsb
push
lods
sbb
imul
test
shrb
loope
scas
vmovlps
dec
pop
jns
fcoml
scas
sub
sbb
in
das
in
or
mov
je
mov
inc
jg
mov
mov
mov
cld
jecxz
jo
push
push
cli
inc
je
scas
cs
das
out
pcmpeqw
stc
lret
in
xlat
jb
dec
ja
fiadds
push
packsswb
sub
movsb
xchg
jl
xchg
fldcw
and
xor
daa
mov
fwait
dec
jb
nop
fisubrs
jp
jae
test
fistpll
push
ss
adc
cmp
push
mov
push
stos
inc
fimull
movsb
sbb
push
loope
ljmp
out
push
mov
les
mov
mov
popf
jne
and
dec
and
repnz
push
adc
xchg
outsb
xchg
jb
jle
sbb
or
in
sbb
ret
popa
mov
pop
ja
dec
push
jno
cmp
dec
mov
clc
popf
sub
inc
dec
scas
out
int3
movsb
sbb
xchg
pusha
sub
je
int3
and
and
xor
or
inc
mov
sti
dec
insl
dec
xchg
jbe
dec
imul
and
mov
mulb
adc
sbb
ss
mov
test
push
jne
inc
popf
jle
data16
movzbl
jbe
adc
sbb
fdivl
aad
out
aam
xchg
movsb
andl
xchg
mov
test
sarl
mov
jns
sbb
dec
xor
mov
adc
xchg
dec
xchg
arpl
mov
sub
cmpsl
movsb
inc
loopne
jbe
test
xchg
xchg
xchg
stc
sahf
dec
test
mov
mov
repnz
leave
xchg
sti
popf
mov
push
push
xchg
dec
je
lods
imull
sub
and
cmp
movsb
or
jecxz
jbe
repnz
mov
push
popf
cmp
les
movsb
ret
leave
xchg
clc
sbb
mov
popf
mov
push
adc
enter
stc
ficompl
xchg
aad
mov
and
mov
fs
nop
data16
lods
pop
cmpsb
addr16
pop
mov
ljmp
inc
xchg
movsb
sub
mov
push
pop
insl
adcb
jecxz
mov
aad
mov
imul
mov
inc
rep
push
imul
inc
jge
shrb
xchg
sub
outsb
dec
insl
shrl
cmpsb
dec
jle
repz
or
cs
cmpl
lds
insb
test
push
adc
mov
insb
stos
stos
js
mov
inc
imul
and
aad
inc
mov
sbbl
div
mov
jp
lds
ss
mov
adc
addr16
int3
cmp
je
push
and
push
jl
or
mov
jl
or
dec
xor
pop
inc
jp
dec
jnp
in
aam
pusha
testl
test
mov
fs
adc
ljmp
xchg
roll
push
fwait
sarl
jbe
dec
sbb
je
enter
data16
jge
xchg
fbld
mov
jmp
cmpsb
mov
mov
or
stos
xchg
cmpsb
and
mov
cmpsl
lods
pushw
push
sub
jle
mov
ret
jl
popf
xor
fsubrs
scas
jl
sbb
mov
dec
out
jle
call
push
inc
jl
je
movsb
imul
mov
mov
fs
cwtl
movsw
inc
popf
inc
repnz
pop
jns
cmp
xchg
push
imul
pop
sbb
daa
insl
mov
and
or
mov
jbe
jge
jl
jno
scas
jnp
jno
pop
pushf
pop
jb
jge
popf
repz
sub
mov
jle
bound
xlat
xchg
imul
popf
stos
test
jns
or
scas
test
pop
int3
jge
adc
pushf
lods
jle
insl
outsb
in
dec
inc
and
scas
mov
jge
pop
push
test
push
cmp
xor
movsl
dec
jle
adc
sahf
inc
jp
sbb
outsb
repz
insl
outsl
int
aaa
imul
mov
mov
repnz
adc
in
iret
sahf
sti
pop
mov
nop
fs
mov
dec
imul
inc
xchg
push
aad
addr16
dec
dec
gs
fiaddl
int3
insb
mov
jg
inc
dec
imul
sarb
sbb
ret
mov
idivl
or
cmp
aad
ja
popf
insl
sbb
dec
and
jle
mov
ja
cmp
jo
fstl
movnti
cmp
jns
inc
push
in
push
dec
cmpl
sbb
test
jmp
jmp
popa
loopne
mov
jns
test
sub
xor
pop
test
cmc
shl
out
push
mov
pop
and
test
inc
dec
pushf
scas
stos
xchg
jae
xor
or
cmp
add
cmp
mov
push
dec
xchg
loop
pop
pushf
or
inc
fistps
or
stos
xchg
into
std
movb
xor
scas
out
lods
fnstsw
lock
xchg
mov
mov
jb
popa
repnz
aas
movsb
scas
jmp
sti
xchg
pushl
imul
cs
hlt
test
dec
aad
xchg
jp
jb
popf
dec
jg
jb
cld
mov
jg
xchg
mov
std
enter
lods
out
rcrl
rclb
mov
scas
fstpl
ja
arpl
ljmp
mov
movsl
jecxz
out
test
inc
imul
pop
outsb
sar
emms
stos
xlat
out
sti
xchg
out
ljmp
pop
mov
mov
sub
add
lahf
in
mov
lods
xchg
ud1
jg
aas
fcoms
cmpsb
mulb
scas
xchg
adc
jmp
repnz
std
hlt
xchg
insl
sarl
jle
jge
dec
push
ss
leave
std
cs
orl
cltd
stc
out
mov
lcall
std
dec
push
sbb
jne
push
xchg
lds
pop
aad
add
dec
decb
ja
lahf
lds
lods
pop
push
iret
xchg
daa
jae
jg
xchg
scas
jne
xchg
out
push
jmp
pop
fiaddl
adc
insl
cld
fdivrp
xlat
jmp
mov
fidivrl
iret
jb
pop
int
imull
pushf
inc
imul
std
in
cmc
dec
ror
xlat
cli
insl
frstor
std
aas
or
push
pop
jnp
aad
pop
mov
jp
rcrl
mov
pop
lcall
cmp
in
fildll
xlat
jp
adc
push
and
push
out
push
repnz
fcoml
stc
jne
pop
pushl
insl
mov
shlb
jbe
xlat
aam
cmc
popf
and
pop
das
jae
xlat
dec
fnstsw
push
push
pop
loopne
jg
idivl
loop
dec
pop
lahf
bound
addr16
std
repnz
jnp
mov
scas
pop
aad
das
push
daa
xlat
push
lahf
push
rcr
jb
dec
adc
cmpsl
push
out
push
cmpsb
mov
je
repz
jne
mov
pop
mov
gs
rclb
out
ficompl
xor
push
icebp
popa
jne
jmp
push
lret
cmc
sbb
rcr
push
jae
ja
rol
pop
jb
jae
push
push
test
jle
not
dec
cmp
mov
mov
les
sbb
daa
pop
aas
stos
pop
aas
divb
movsl
pop
and
xlat
lret
jnp
jne
pop
xor
movsl
cmp
ja
push
dec
push
fildll
negl
jp
dec
aad
loop
jb
jns
jg
fcoml
xlat
jmp
push
cmc
daa
movl
shlb
sub
pop
mov
jp
jmp
clc
mov
lahf
cmpsl
outsl
scas
push
lods
jne
sbbb
std
lret
pop
lds
leave
jge
xchg
pop
das
flds
push
ja
push
xchg
cmp
popf
rcll
xchg
xor
fists
pop
pop
pop
lahf
pop
push
mov
xchg
xor
jb
hlt
xchg
jge
mov
lods
pop
jg
push
pop
xchg
imull
stos
jg
mov
mov
cld
mov
push
std
je
popa
idiv
and
fbld
fimuls
rclb
jo
inc
sbb
jno
std
jbe
pop
inc
fstl
inc
outsl
xlat
pop
lea
jne
not
push
sbb
popa
imull
cmc
pop
test
ss
fdivl
in
push
cli
fcmovbe
push
repnz
fstp
push
je
pop
imul
sti
dec
std
jmp
cld
mov
je
jno
jo
adc
or
mov
loop
scas
test
stos
jnp
test
jg
pop
mov
repnz
scas
ljmp
ljmp
call
in
mov
ja
movsl
lods
push
out
lods
imul
xorl
ljmp
jmp
mov
out
mov
jmp
mov
mov
mov
mov
out
xchg
scas
xchg
jmp
mov
hlt
scas
call
call
cli
repnz
pushl
lods
in
stos
jmp
scas
xchg
gs
imul
fnstsw
loopw
ljmp
imul
mov
jle
pop
std
lods
pop
rcl
xchg
jle
pop
aad
std
insl
mov
jbe
mov
lret
daa
jne
lods
jge
cmpsl
jge
mov
scas
ja
sbb
and
push
aad
cmpsb
jne
jl
cmc
cli
push
rcll
aas
aad
jmp
gs
jle
addr16
pop
ja
shrl
in
jge
je
pop
fimuls
mov
or
int3
fs
imul
inc
push
movsl
pop
pop
insl
sub
leave
jne
ja
ficoms
imul
dec
jo
dec
lret
sarb
lods
outsb
mov
fwait
inc
stos
hlt
mov
pop
scas
sub
xchg
mov
iret
jae
shrb
mov
das
sbb
dec
call
std
push
out
mov
mov
mov
push
mov
aad
mov
scas
mov
mov
das
cmpsl
sti
dec
mov
mov
scas
test
movsb
cmpsl
mov
xchg
ljmp
sbb
xlat
scas
das
sub
sarl
mov
jle
cmp
or
cmpsl
push
sbb
pop
insb
hlt
mov
les
xchg
jge
mov
scas
pop
mov
jge
push
fnstenv
jne
scas
push
adc
jae
testl
sub
xchg
ret
jg
out
xlat
and
inc
icebp
cmc
aam
inc
jne
mov
arpl
std
adc
push
sahf
outsl
sub
cltd
ja
aad
xor
pop
xchg
or
lcall
jno
cmc
fisttpll
pcmpeqw
push
out
jg
xchg
jge
jbe
xchg
scas
jg
and
arpl
mov
ljmp
imul
scas
jp
std
outsb
das
push
ljmp
sub
mov
sti
mov
dec
inc
push
cmp
xor
imul
push
jg
jle
test
sbb
xchg
fcoml
fnstsw
jne,pn
cmpsl
push
xchg
pushf
std
lret
cld
outsb
pop
std
movsl
jle
notl
jmp
cmc
notb
sub
push
roll
jne
pop
shrl
jg
mov
int
push
rcl
icebp
jne
push
mov
repnz
outsb
rcrb
decl
dec
les
fmull
negl
into
jb
je
fcoml
movl
pop
jb
fcmovnb
ja
scas
fistps
dec
xlat
pop
ja
test
aad
pop
pop
in
ja
lahf
lds
lods
je
pop
cmp
push
dec
das
jo
in
jb
pop
xchg
xchg
out
sub
add
sub
sub
fwait
sub
mov
stc
cs
ljmp
xchg
insl
lahf
sbbb
push
push
fs
xchg
mov
dec
sbb
std
outsb
fwait
add
in
sub
scas
das
cmpsb
sti
dec
out
outsb
xchg
ljmp
xor
adc
dec
mov
and
loop
hlt
lods
cs
mov
ds
dec
cmpsl
jmp
jmp
push
jmp
stos
mov
mov
mov
out
xchg
in
js
stos
in
fwait
pop
scas
pop
imul
stos
rcl
stos
call
out
stos
sti
dec
scas
das
push
sti
cmc
out
fidivrs
xlat
fwait
inc
xchg
stos
mov
stos
inc
jb
xchg
lret
int3
cmc
out
div
jmp
ljmp
xchg
mov
dec
out
jmp
ljmp
scas
pop
test
scas
mov
mov
scas
shr
cmpsl
add
mov
pop
sti
decb
inc
scas
scas
dec
in
sti
ljmp
in
loope
jmp
sub
xchg
ljmp
pop
cli
test
mov
mov
scas
pushl
dec
sahf
add
inc
ja
stc
sub
mov
out
xchg
sti
mov
stos
mov
xchg
mov
mov
in
call
dec
scas
mov
out
pop
mov
stos
jmp
das
lcall
outsb
cmp
pop
mov
jmp
mov
inc
out
pop
stos
sub
mov
mov
imul
mov
mov
outsb
sub
shr
stos
xchg
stos
iret
adc
mov
scas
scas
cli
dec
test
imul
lret
xlat
stos
jnp
in
loop
or
in
lret
lods
sub
outsl
mov
scas
scas
movsb
sti
mov
push
sti
mov
jl
mov
jle
arpl
xchg
nop
xchg
nopl
mov
jg
or
es
xor
scas
mov
xchg
insl
fistpll
jg
outsl
in
inc
imul
mov
mov
in
into
pop
dec
movsb
jnp
loopne
gs
sbb
push
js
mov
pop
call
and
xlat
filds
sbb
mov
lods
mov
das
sub
addr16
jb
mov
pop
jl
adc
push
gs
xchg
std
pushl
adc
mov
in
sub
mov
das
imul
stos
das
inc
cli
stos
jnp
lods
xor
cli
stc
and
out
mov
loop
xchg
stos
cmp
in
insb
lds
scas
mov
jae
xlat
cld
es
jbe
ljmp
test
outsb
push
call
les
ret
xlat
outsb
gs
loope
inc
loope
out
sahf
and
sbb
mov
insl
out
mov
lods
sbb
mov
jb
loop
xor
jnp
repnz
fisttpl
dec
jne
adc
and
jne
cmc
jns
cmc
repnz
out
pushl
xchg
shlb
jg
jns
fists
aad
fcompl
mov
jno
ja
movsl
xchg
imul
insl
jle
mov
jne
and
pop
cmp
jne
imul
popa
aad
jl
jge
jb
push
rcrb
divl
xchg
mov
dec
adc
jp
cmp
aad
fistpl
aad
pop
dec
cmp
xchg
pop
ss
popf
cmc
xchg
jns
rcr
jno
cmc
jne
dec
pop
ja
xlat
jmp
push
in
pop
jp
push
std
sub
mov
fnsave
test
inc
pushf
push
clc
adc
imul
gs
cmpsl
je
mov
dec
jbe
outsl
test
divl
cld
inc
sahf
ljmp
int3
xchg
inc
xchg
stc
dec
push
mov
cs
stos
nop
addr16
mov
mov
mov
es
cmc
fadds
and
rorb
xchg
mov
sarb
mov
test
out
hlt
cmpsb
dec
out
and
jl
shlb
jne
xor
cli
lret
push
loopne
pop
rcrl
jmp
mov
mov
movsb
jle
mov
xor
insl
into
mov
dec
jle
mov
mov
addr16
and
mov
sub
push
jle
jne
popf
mov
push
xchg
aaa
movsb
bnd
pop
notb
adc
pop
out
xchg
ficompl
xchg
stos
cmpsb
xchg
incb
sti
pop
sti
jg
stos
mov
decb
and
insl
repz
mov
push
pop
decl
push
cmpsb
negl
and
adc
mov
scas
fidivrl
lods
xor
xchg
mov
fwait
or
sbb
test
std
xchg
data16
and
xchg
out
push
jmp
lahf
cld
jne
inc
mov
jne
gs
cmp
dec
std
aaa
aad
lahf
into
push
dec
dec
lods
xchg
cltd
dec
jbe
stos
rcrl
xchg
sub
sub
dec
imul
in
xchg
and
stc
push
mov
sbb
pushf
push
push
gs
push
sbb
jle
int3
clc
movsb
dec
or
pushf
popf
cmpsb
xchg
into
imul
dec
mov
sbb
xchg
cmpsb
dec
xchg
push
mov
std
imul
jnp
sub
test
fdivr
pop
jle
roll
mov
je
std
push
or
fbld
mov
push
jnp
jo
sub
imul
push
sub
jnp
sarb
pop
jno
mov
incl
mov
xchg
movsl
clc
lcall
arpl
mov
mov
jg
mov
mov
pop
fmulp
lcall
mov
jp
test
out
add
ljmp
aaa
dec
adc
sub
loope
lahf
add
push
xor
push
ja
jg
cmpsb
mov
push
jg
int
cmovo
cmp
push
dec
out
mov
or
idiv
pop
inc
clc
lea
pop
mov
std
fimuls
mov
adc
pushf
or
and
and
xchg
sahf
cmp
adc
inc
cmove
and
nop
fmulp
sbb
cmc
cmp
mov
cmc
xchg
or
xor
xor
jae
sub
inc
xor
and
cmp
push
add
aam
mov
xchg
sahf
inc
push
xlat
daa
sub
std
cmp
xor
xor
int
scas
or
adc
mov
sahf
xchg
and
cmp
sbb
xchg
jne
add
pop
sub
sub
xchg
sarb
push
add
les
xchg
or
dec
scas
sbb
pcmpgtb
inc
dec
gs
cmovo
std
xchg
pop
shrl
or
push
addb
lret
mov
bswap
add
movb
hlt
and
mov
aas
sbb
repnz
mov
scas
shrl
push
mov
shl
mov
push
dec
test
pop
push
and
push
or
sub
push
stos
sub
inc
out
cli
fnstenv
nop
pop
push
jns
sahf
movsl
nop
rclb
push
mov
pop
mov
insl
test
inc
pushf
sub
push
mov
cmp
lret
lret
adc
pmulhuw
fdivrp
xchg
setp
shrb
push
and
imul
rorl
xchg
rclb
seto
je
sbb
and
sarl
cmpsb
mov
in
scas
paddb
in
xchg
sbbl
shlb
rorb
cmovo
dec
sub
insb
pop
pop
push
daa
xchg
scas
mulps
test
add
xchg
mov
cmp
or
sub
cmpsl
rdmsr
lock
push
sahf
jmp
mov
les
xchg
sub
bswap
jg
enter
addr16
dec
cmovs
hlt
xchg
rclb
bswap
sahf
adc
pushf
pop
push
mov
scas
arpl
and
jns
dec
movd
pop
jmp
and
fcomps
aaa
lea
dec
sti
push
cmp
in
xchg
jge
in
sub
cvtps2pd
add
fisttpl
xchg
or
sub
sbb
push
mov
adc
outsl
aas
push
repnz
pushf
bswap
cmp
icebp
xor
lock
int
fwait
xchg
sub
pcmpgtb
cmp
xchg
sub
push
mov
pop
addr16
setb
xor
cmp
inc
adc
xchg
adc
adc
sub
mov
fs
and
jb
inc
pop
and
mov
sbb
lods
ret
cmp
xor
jl
in
das
mov
adc
and
aaa
inc
dec
lds
aaa
jl
mov
inc
les
adc
into
inc
xor
adc
lret
pop
push
ss
mov
adc
ss
xchg
mov
ss
push
pop
push
or
notl
cmpsb
pop
lods
and
imul
stc
push
adc
es
cmp
fsubrl
in
adc
and
xor
adc
pop
jg
lods
fs
and
xor
int3
bound
adc
loope
mov
jl
xor
dec
cmc
fdivs
mov
pop
lahf
xchg
stos
xchg
add
and
and
and
adc
scas
dec
stos
lret
adc
adc
push
adc
fistpll
mov
mov
scas
dec
mov
push
push
mov
mov
mov
iret
bound
lock
xor
add
adc
sub
pop
loop
fbld
lds
and
dec
sti
mov
sub
jmp
or
movsl
adc
mull
gs
sub
and
mov
daa
mov
decl
les
mov
dec
je
add
movsl
mov
cmp
and
cwtl
pop
dec
push
scas
jb
iret
push
xchg
adc
in
dec
test
jbe
push
mov
es
rcr
test
es
mov
es
cs
or
mov
pop
lcall
test
outsb
in
add
and
or
and
xchg
or
cmp
mov
popl
cmpsl
xchg
fs
adcl
jns
pushf
mov
jbe
adc
popf
movsb
lods
outsb
ljmp
in
xchg
adc
pop
adc
or
dec
outsb
notb
scas
cmpsb
or
adc
or
or
movsb
shlb
mov
mov
or
adc
sub
push
xchg
sub
sub
cli
and
popf
pop
jns
mov
pop
sbb
mov
sbb
pop
ret
fldt
pop
inc
jle
mov
push
and
inc
push
repz
lods
sbb
insl
dec
xchg
jge
push
call
dec
pop
ljmp
mov
std
inc
ffree
sahf
sub
movsb
cmp
ja
mov
sub
in
push
pushf
mov
cmp
in
popf
pop
insl
sbb
cmpsl
jl
adc
movsb
out
mov
inc
aam
cmpb
xchg
sub
xchg
mov
lds
jl
mov
insl
mul
das
push
in
or
push
outsb
xor
or
lods
mov
pusha
pop
push
pusha
test
gs
daa
mov
cmp
adc
push
jge
push
jg
or
int3
mov
jl
push
in
int3
and
adc
addb
jb
int3
jg
bound
cmp
insb
mov
into
stc
bound
lods
add
mov
or
and
mov
outsl
sbb
push
xor
stos
fiaddl
stos
int
fildll
fidivs
imul
push
mov
dec
mov
jno
jge
xchg
push
add
sub
jp
insb
push
mov
dec
test
sub
lods
xchg
in
jl
roll
imul
ficoml
adc
pop
ljmp
pop
les
gs
lods
pop
jl
or
inc
dec
lcall
jno
xchg
loop
dec
or
xchg
iret
jle
add
xchg
xor
das
movsb
xchg
mov
mov
xor
outsb
mov
xchg
outsb
jg
insb
in
jne
push
cmp
je
sbb
scas
push
cmpsb
jo
cmp
xchg
fldcw
popa
insb
dec
cmp
adc
pop
jnp
test
rcrb
nop
scas
dec
lret
or
mov
cmpsl
outsl
push
sbb
pop
pop
in
incb
dec
pop
adc
inc
lcall
push
push
arpl
jne
mov
dec
popa
mov
nop
ss
cmpsl
ret
cmp
xchg
cs
sbb
push
shlb
cmp
push
pop
mov
add
addb
mov
sahf
test
jg
fs
test
les
pop
cmp
gs
outsl
sbb
sahf
call
mov
shlb
or
inc
mov
sub
movsb
xchg
iret
push
dec
adc
pop
mov
aam
mov
inc
xor
inc
fidivl
insb
pop
pusha
or
or
mov
mov
outsb
push
xchg
jae
inc
lds
outsb
xchg
cmpsb
mov
dec
or
dec
inc
sub
mov
mov
dec
lret
in
inc
xor
pop
test
pop
adc
fbld
test
mov
sub
mov
movsl
mov
mov
adc
movsl
add
mov
xchg
jge
sub
xchg
pushf
jge
pusha
jg
int
aam
movsb
mov
into
push
in
dec
repnz
xchg
repz
mov
mov
mov
test
or
xor
xchg
movsb
mov
inc
rorl
repz
repz
xchg
jle
jle
jle
jle
jle
jo
loopew
mov
jae
leave
repz
loopne
pop
orl
jle
jle
data16
xchg
jl
int
stos
and
jb
repz
cld
or
int
ret
vmovaps
scas
push
xchg
pcmpgtb
imul
mov
sub
sbb
cmp
mov
pusha
repz
cmp
cmp
cmp
cmp
or
movsb
stc
aad
test
mov
out
mov
aam
aas
test
mov
cmp
xor
imul
inc
fldlg2
sbb
mov
rol
lahf
loopne
inc
push
dec
push
dec
lock
test
je
fsubs
std
mov
rcll
inc
dec
dec
xor
inc
mov
shll
movl
inc
sbb
sbb
sbb
adc
push
addr16
inc
jle
mov
xchg
xlat
ljmp
sub
sub
add
cmpb
lret
mov
cld
int3
cmp
or
jle
je
sbb
std
addb
arpl
movsb
jg
dec
sub
loopne
push
jo
dec
xor
add
in
mov
aas
push
sub
jle
cmpsw
inc
scas
and
jo
xchg
and
outsb
gs
cld
jo
inc
addr16
or
pop
ret
dec
xor
shrl
lods
stos
enter
mov
insl
lods
fs
pop
adc
adc
sub
stc
dec
mov
or
movsl
pop
into
or
lods
leave
rolb
ret
rcr
mov
loopne
inc
lods
aaa
add
js
cmpl
mov
sbb
rclb
lds
setns
xor
je
jb
insb
subl
jbe
sub
popa
aad
cld
enter
sub
or
movsb
mov
sbb
enter
cmp
leave
les
mov
xchg
cmp
mov
movl
aad
fmull
lds
in
cmp
or
mov
dec
mov
push
cwtl
mov
shrl
into
push
adcl
bound
xchg
or
dec
dec
inc
dec
mov
sahf
stc
xchg
and
fnstenv
dec
push
loop
lcall
nop
addr16
adc
fidivl
add
imul
mov
push
imul
sub
inc
inc
jbe
sub
push
xchg
es
aad
call
and
ret
pop
popa
shrl
je
sarb
mov
enter
push
dec
sbb
add
push
pop
test
dec
insl
in
mov
mov
and
cltd
mov
adc
pop
int
push
and
xor
je
lds
mov
dec
sbb
mov
fwait
jno,pn
push
shlb
adc
lcall
mov
push
adcb
xchg
dec
sahf
xchg
movsl
or
inc
add
push
push
xchg
mov
inc
mov
mov
push
adcb
lods
adc
andb
jl
loopne
add
pushf
pusha
mov
mov
std
and
add
and
push
mov
std
or
sub
ss
hlt
xchg
and
dec
test
pushf
test
sbb
push
xor
cwtl
mov
or
shlb
sub
fildl
push
inc
or
mov
fs
or
outsl
or
push
imul
or
adc
data16
insl
fwait
jge
and
and
jne
addr16
inc
jo
and
cmp
pop
lret
cmp
bound
inc
insb
pop
cs
adcl
orb
in
cltd
or
sub
adc
jo
jo
push
je
enter
push
and
fsubrl
int
bound
pushf
rcll
sahf
sub
cltd
outsl
adc
sahf
fistl
hlt
lea
add
inc
cmp
sub
out
pop
push
add
mov
ss
stc
dec
push
cmp
pop
stc
dec
sbb
adc
sti
xor
js
jae
sbb
xor
ja
loopne
dec
lods
xchg
sub
xchg
and
scas
add
add
mov
shll
mov
pop
aad
movsl
push
mov
es
push
repnz
and
cli
sub
popa
pop
lret
data16
lret
je
xchg
dec
and
mov
cmp
aaa
sbbb
roll
jns
shrb
insl
shrb
mov
xchg
cli
scas
add
jo
jo
cmp
sbb
inc
jb
aam
pushw
faddl
push
shlb
push
ds
xchg
inc
jbe
ret
jne
fs
movsb
or
inc
mov
adc
xor
pop
imul
sub
add
out
xor
insb
xor
inc
or
rolb
call
scas
imul
push
and
mov
xchg
hlt
addl
push
xchg
je
sub
mov
sbb
fnstsw
repnz
sub
data16
ret
pop
sub
je
adc
imul
push
shl
outsb
xor
sarb
lret
push
mov
sub
data16
imul
stos
xchg
js
and
jle
subb
lods
js
cmp
popl
jg
add
add
add
mov
scas
js
pusha
pop
sub
xchg
jp
addr16
fstl
dec
sub
push
jo
sti
mov
xchg
jno
out
in
add
jmp
andl
adc
jmp
out
xor
les
stc
insl
cltd
sahf
addl
lods
pop
cmpl
sahf
es
scas
dec
in
lds
dec
pusha
call
add
mov
call
call
call
cmpl
jne
mov
mov
jmp
mov
mov
call
jmp
and
add
add
add
lea
lea
xor
jmp
cmp
sub
mov
pushl
add
pushl
add
call
add
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
call
mov
or
je
add
call
cmpl
jne
mov
jmp
add
cmpl
jne
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pushl
push
call
add
jmp
add
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
add
mov
call
call
call
call
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
call
push
pushl
call
test
je
jmp
add
call
add
mov
mov
addl
mov
cmpl
jne
jmp
inc
cmpb
jne
inc
add
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
movl
add
mov
cmpb
jne
call
push
push
pushl
call
jmp
and
add
int3
xor
add
fisttps
add
call
cmpl
je
jmp
jmp
popa
jmp
nop
pusha
push
push
push
push
call
mov
push
lea
lea
push
push
call
add
add
jmp
dec
cmpb
je
sub
inc
mov
mov
lea
rep
pop
push
push
push
call
popa
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
filds
cmp
imul
gs
xor
cs
insb
add
push
cmp
sub
cmp
cmp
cmp
inc
push
cmp
push
push
cmp
or
cmp
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
push
jb
je
arpl
push
imul
jb
add
add
add
or
add
ret
loope
add
mov
mov
cmpl
or
mov
jbe
pusha
jle
pop
ret
push
adcl
or
mov
popf
mov
pusha
mov
ja
mov
sbb
movl
jmp
repz
nop
inc
add
and
push
call
xor
addl
or
cmp
mov
cmp
loopne
adc
add
xchg
ret
mov
addl
add
cmp
sbb
pop
sbb
shll
and
sbb
inc
dec
jb
mov
add
popa
dec
test
add
mov
pop
pop
decb
mov
mov
xor
sub
add
pop
lea
sub
test
testb
mov
bswap
sub
add
sub
mov
jge
jae
lock
lock
loopne
push
shr
sub
adc
sub
daa
js
sub
stc
jbe
cmp
mov
dec
or
das
mov
pop
or
mov
pop
and
push
dec
cmp
push
sub
lcall
cltd
xor
sbb
jne
mov
push
push
push
push
and
scas
sbb
add
add
data16
add
mov
or
iret
and
push
push
dec
aaa
jg
xchg
dec
mov
mov
jne
xchg
pop
pusha
ficoms
nop
sub
pop
nop
xor
push
or
jo
out
out
lea
adcb
jne
or
jmp
clc
adc
jne
adc
inc
or
sub
add
scas
mov
push
mov
subb
add
cmp
notb
mov
pop
ljmp
jnp
orb
cmp
xorb
enter
sarl
jbe
mov
out
add
lock
mov
sbb
push
mov
std
add
jno
cmpl
jne
pop
pushl
inc
call
ret
into
inc
xlat
lock
or
sbb
ds
adc
add
jne
push
lea
mov
sbb
add
jmp
scas
rolb
pop
push
enter
dec
das
pop
add
jmp
or
int3
and
push
push
xor
fnstsw
popf
add
popa
xor
decl
jns
sbb
sbbl
mov
mov
xchg
add
sbb
nop
call
shll
or
addr16
mov
out
sub
filds
incl
and
and
xchg
popl
popa
ret
push
mov
enter
push
mov
fs
jns
call
mov
mov
sbb
test
and
mov
adc
adc
jbe
mov
dec
xchg
jecxz
pop
or
frstor
cmp
pop
test
leave
xchg
cmp
add
or
or
addb
inc
xchg
cmc
data16
adc
pop
shlb
cmc
jg
ret
mov
hlt
ds
in
in
mov
pushl
or
xchg
dec
or
into
push
cmp
inc
rorb
popf
adc
push
rcll
or
jne
push
in
jno
cmpsb
adc
movsb
and
mov
fmuls
cmpl
popf
out
xor
push
adc
inc
push
add
cmp
xor
dec
push
pop
fincstp
inc
lock
clts
mov
mov
inc
xor
ds
movsb
inc
xchg
mov
inc
and
sbb
int3
jne
add
adc
jnp
test
xchg
mov
push
stos
syscall
call
popf
sarl
cmpsl
and
sahf
xchg
cmpsl
insb
sahf
daa
ret
mov
inc
pusha
pushf
pop
test
data16
cltd
incl
adc
adc
lods
jge
xor
sub
add
lods
ror
xor
stos
jne
add
ret
pusha
and
call
pop
push
xchg
call
clc
add
or
adc
sahf
or
call
cmp
mov
negl
or
aaa
leave
sbb
iret
nop
mov
jne
sbb
adc
cmp
push
rcll
mov
cmpsl
scas
js
sub
lret
jo
inc
mov
xor
popf
lahf
sub
pusha
mov
dec
movl
and
dec
mov
jbe
xor
por
mov
clc
and
or
out
add
call
ror
jb
nop
cmp
imul
push
add
bnd
sub
in
fisubrs
dec
sbb
lea
jmp
cmp
js
jne
test
fs
inc
lahf
je
callw
enter
subb
push
mov
call
sbb
jmp
push
mov
sub
ret
sub
mov
lcall
mov
or
aad
pop
mov
add
dec
loop
sub
sbbl
push
cmp
stos
mov
nop
dec
gs
jg
and
jno
xor
aaa
sbb
adc
std
ss
add
xor
je
pop
inc
mov
mov
sbb
adc
inc
sub
pushf
roll
xor
adc
push
push
call
cmpl
dec
imul
adc
cli
mov
cmpsb
mov
fwait
clc
and
add
lods
push
inc
push
call
clc
add
jmp
jmp
dec
sbb
xchg
sbb
jo
daa
jg
or
and
push
cld
adc
psubq
or
gs
pop
sbb
and
movsl
xor
ret
stos
add
adc
or
rcrb
mov
push
inc
inc
roll
adc
je
hlt
sar
movb
call
pop
cmp
cli
lahf
mov
cmp
lret
mov
xor
lea
inc
push
data16
jns
mov
popa
pop
jle
mov
into
inc
lea
fwait
xlat
cli
popf
inc
mov
and
movl
cwtl
je
flds
mov
mov
adcl
or
bnd
arpl
lahf
mov
pusha
sbb
add
sbb
pop
push
orl
push
pop
pop
mov
orl
sti
dec
xor
push
jmp
ss
ljmp
inc
les
cmp
pop
arpl
push
add
call
inc
cmp
pop
sbb
push
ret
je
cpuid
pop
inc
dec
jne
sub
push
add
fcomps
add
pop
add
push
push
outsb
or
adc
cmpb
jne
movl
shlb
jmp
cmp
aaa
jne
add
nop
pop
test
das
leave
xor
mov
pusha
xor
test
add
push
aam
mov
push
mov
pop
into
cmp
das
sub
push
inc
rcr
dec
inc
in
jbe
fstl
hlt
or
adc
or
add
jmp
mov
int
lea
mov
testb
loopne
mov
call
faddl
dec
test
cmp
adc
lcall
sti
add
seta
insl
in
xor
or
sub
xor
insl
sub
adc
xor
pop
cmp
cltd
rolb
je
push
fcom
cwtl
xor
push
xor
xchg
and
cmovs
xor
sbb
sbb
cmp
adc
cwtl
mov
push
test
push
cmp
jb
cmp
daa
enter
push
inc
pop
adc
push
stc
add
lea
call
sbb
jecxz
add
or
or
in
push
not
rcr
shl
inc
sarb
or
xor
movsb
inc
orb
sub
inc
dec
and
inc
sub
inc
jle
mov
mov
or
add
rol
xor
inc
in
jecxz
out
cmp
shlb
or
fsubrs
pop
les
mov
sbb
push
add
mov
loope
cmp
movsb
pop
inc
adc
xchg
test
aad
stc
and
push
cmp
push
fisubl
inc
mov
cmp
mov
mov
jbe
push
xchg
add
xchg
in
adc
mov
rolb
jmp
shr
dec
push
cmpl
dec
adc
pop
cmpsl
adc
test
add
mov
jbe
dec
jle
stc
mov
gs
xchg
imul
push
adc
shll
inc
test
or
fldenv
mov
pop
lea
push
pop
mov
pop
or
enter
mov
jbe
inc
testb
xor
rcrb
cmove
xor
push
adc
pushf
aas
mov
addl
inc
cli
adc
cltd
jmp
cwtl
xor
sub
lea
mov
jmp
xor
sbb
add
mov
hlt
lea
cmpsb
iret
outsb
xor
push
inc
fisttps
enter
sub
sbb
outsb
repz
adc
or
add
add
pop
sub
sbb
jnp
jne
cmp
inc
rolb
push
jae
adc
mov
xor
rol
inc
pusha
mov
mov
pop
sbb
pop
and
mov
dec
add
pushl
or
inc
int3
or
mov
jmp
sub
pop
les
add
and
xor
add
xor
mov
cpuid
xor
adc
repz
and
sub
push
sbb
and
push
push
push
push
or
cwtl
push
or
xor
adc
jbe
push
add
roll
inc
dec
pop
xchg
imul
adc
pop
xor
xchg
nop
xlat
sbb
lea
rclb
sbb
or
jae
call
mov
pop
pop
das
das
test
mov
and
cmc
ror
add
cmp
jbe
jle
cmp
xor
lea
std
adc
shl
rolb
cmp
dec
cmc
cmp
out
mov
loopne
jmp
cmp
and
inc
movzwl
sub
daa
shl
nop
inc
or
push
mov
inc
adc
add
add
mov
adc
mov
jp
mov
stc
jo
jbe
push
and
rorl
and
xor
inc
adc
imul
mov
incl
sbb
mov
clc
repnz
sbb
cmpsl
stc
pop
je
insb
adc
incb
push
inc
inc
push
jmp
aad
sub
movsb
cs
test
dec
add
sarl
add
pop
test
or
jecxz
or
add
out
or
mov
leave
sub
push
push
xchg
sti
insl
and
jmp
pcmpeqw
fldcw
xor
add
sub
and
ffreep
sti
push
test
jne
or
add
dec
lea
dec
psubq
int
and
je
ljmp
push
insl
push
mov
test
repz
xor
add
adc
or
popa
adc
nop
cmpsb
or
jb
or
ja
and
xchg
and
jb
rorb
ja
and
fbstp
mov
or
or
or
add
test
andl
adc
add
push
add
or
adc
or
cmpsb
push
and
push
ret
test
test
jb
out
xchg
push
adc
sub
cmp
jl
lds
mov
adc
xor
nop
mov
mov
jo
pusha
pushf
push
or
xchg
test
shlb
nop
add
xchg
cmp
adc
inc
push
std
lock
cmpsl
jb
ss
jnp
jbe
inc
cs
ja
icebp
clc
or
loope
dec
ror
scas
aad
ds
jb
cmp
js
mov
ljmp
xor
cs
push
cmovne
lahf
outsl
arpl
inc
imul
fcmovnb
and
cld
outsb
data16
sbb
sti
jbe
jb
bound
sbb
and
je
mov
and
fs
bound
and
fdivs
push
xor
jle
sbb
jo
je
lods
jae
sub
jle
data16
popa
insb
dec
cmp
inc
jo
sbb
je
outsl
outsb
fistpl
adc
jb
lods
inc
les
ret
push
addr16
inc
dec
fldcw
outsl
out
push
int3
jns
jae
ja
sub
cmc
jbe
mov
outsb
neg
push
adc
pop
sbb
inc
fisttpll
ja
cmp
sub
push
gs
icebp
push
cmp
outsb
xchg
push
add
pop
imul
outsb
xchg
ficomps
fwait
testb
ljmp
mov
sub
sub
leave
cmp
add
push
push
pop
lahf
mov
fucom
in
enter
rcrl
xor
or
insb
imul
insb
jbe
push
xor
xor
push
sbb
jae
add
in
fisubrs
add
sbb
sarl
imulb
test
addr16
sub
jbe
dec
push
ja
adc
movsb
lcall
pushf
sub
fs
dec
sub
or
mov
aad
mov
dec
mov
imul
inc
mov
fs
bound
hlt
mov
push
mov
or
push
xchg
call
dec
pushf
cmp
dec
and
inc
inc
ret
sub
lcall
adc
cmp
pop
das
add
cmp
aaa
sub
mov
cwtl
push
dec
inc
push
inc
or
push
push
adc
push
adc
push
pop
xchg
popa
or
cli
sbb
jge
cmpsl
or
dec
or
push
push
push
or
add
bound
jecxz
bound
int3
sub
xchg
sbb
leave
sbb
jmp
cmp
out
push
test
out
cmp
fists
out
mov
out
mov
dec
shlb
fistl
jl
cmp
mov
jae
insl
push
jns
bound
push
movsb
sub
movsl
aas
lods
in
test
push
in
addr16
push
push
insl
mov
ficompl
cmpb
sbb
pop
imul
shll
aam
loopne
cmp
or
inc
cld
call
mov
cltd
and
lock
faddl
pop
or
inc
or
test
cmp
sbb
jbe
dec
imul
ja
insb
inc
jecxz
push
out
arpl
ljmp
imul
scas
cmovo
enter
sbb
push
cmp
sbb
cmp
dec
sti
sbb
jge
arpl
pop
fistpl
xor
movsb
enter
stos
mov
jo
frstor
inc
inc
inc
push
jo
cmp
push
add
scas
xor
or
roll
pop
ret
xor
adc
lahf
in
nop
adc
xor
xlat
daa
xchg
push
jbe
dec
sub
sub
add
inc
pop
and
cmp
dec
and
or
fs
jns
sub
inc
add
ficoms
push
jnp
mov
popa
add
inc
insb
jno
loope
dec
ret
add
add
dec
push
je
pushf
sbb
rcl
jmp
leave
nop
add
fstps
stc
sub
push
xor
sbb
xor
testb
mov
cmpsl
fs
add
clc
insb
es
add
cld
mov
enter
dec
lcall
add
fisttps
loop
add
imulb
push
movsb
rorb
dec
add
call
rep
outsb
jo
ljmp
cmp
or
cmpb
or
pop
sbbb
pop
in
aaa
add
inc
dec
push
push
pop
dec
add
adc
loop
push
jg
shrl
mov
jge
fstpl
cmp
repnz
jns
xchg
sbb
add
loop
lcall
rcrb
adc
sbb
mov
inc
xor
fistpl
or
out
lea
cmp
push
addb
adc
fiaddl
cmp
mov
int
and
adc
lock
adc
xchg
mov
and
insl
mov
jp
call
fs
add
shr
fdivrs
out
nop
jo
push
cmpsl
imul
or
clc
lea
pushf
push
insl
push
shr
add
stc
pop
ret
mov
iret
addl
inc
mov
dec
sub
pop
add
add
test
nop
into
dec
add
mov
cld
add
shrb
or
insb
adc
cwtl
addb
adc
ljmp
push
push
lret
das
add
je
mov
inc
or
rcl
xchg
jp
add
in
in
cmc
mov
pop
jb
inc
cmp
xchg
filds
fmulp
mov
je
call
pusha
sbbb
outsb
sbb
fimull
lcall
imul
mov
nop
and
push
pop
out
mov
loope
pop
xor
dec
rcl
sbb
add
ljmp
add
adc
das
add
stc
repz
out
lods
push
jno
jge
mov
std
pop
fcoms
cmp
int3
and
aaa
ja
add
add
dec
jnp
clc
fisubs
cmp
xor
dec
add
add
sub
pop
pusha
or
iret
ffreep
push
loopne
pusha
push
sbb
cmpsb
test
add
inc
out
bound
pop
xor
push
sub
mov
sub
es
cmp
std
xchg
cmp
les
xor
ds
adcb
or
lret
ljmp
inc
sbb
add
data16
call
pusha
pushf
mov
pushf
pushf
popl
jmp
dec
sbb
adc
cmc
mov
cmc
clc
sub
stc
shr
call
pushf
pusha
pushf
pushf
mov
call
pushf
pushf
mov
pusha
mov
pusha
pushf
mov
pushl
mov
lea
jle
pushf
pusha
mov
mov
movl
mov
push
jmp
pushf
call
neg
shrd
mov
test
clc
xor
cmp
mov
clc
pushf
call
jmp
push
not
pusha
mov
call
mov
push
mov
pushf
lea
jmp
jmp
push
sub
bts
bt
btc
ror
setns
push
dec
mov
sub
ror
cmp
add
shr
or
btr
mov
push
test
test
add
mov
call
bts
neg
test
sub
and
shrd
neg
mov
pusha
cmp
test
add
jmp
add
stc
test
bt
xor
cmp
cmp
sub
call
rol
xor
mov
dec
rcr
rcr
jmp
add
pushl
shrd
call
call
mov
pushf
call
mov
movw
pushl
mov
push
pushl
call
add
pusha
push
call
test
pusha
clc
cmp
pusha
jmp
rcr
mov
inc
adc
shl
mov
clc
push
sub
call
mov
jmp
mov
call
test
btc
shl
mov
pushf
clc
stc
sub
push
movl
mov
push
movb
lea
jmp
call
xor
cmc
sub
mov
jmp
mov
jmp
mov
call
pusha
mov
lea
jo
pusha
pushf
pusha
mov
call
clc
sub
btr
push
shld
test
lea
cmp
mov
push
and
shld
cmc
btc
pusha
sub
push
mov
call
movw
jmp
call
mov
sub
add
setge
neg
xor
btc
clc
movzbl
bts
movzbw
lea
lea
jnp
mov
jmp
lahf
jmp
pushl
popl
pushl
lea
jmp
mov
pushl
pushf
mov
mov
lea
jmp
movsbw
mov
push
bt
add
call
mov
pushf
lea
jmp
pusha
pushf
popl
push
pushf
pushl
popl
pushf
push
lea
jmp
push
mov
pushf
movb
movb
call
pushf
pushf
mov
jmp
mov
pushf
mov
jmp
pusha
pushl
pushf
pushf
popl
push
call
pusha
mov
push
mov
call
pushf
pusha
xchg
jmp
daa
popf
bswap
not
bswap
lahf
pop
cwtl
pop
setp
setno
pop
bswap
pop
pusha
call
add
bt
pusha
jmp
pushf
pushl
popl
push
pushl
mov
movb
lea
jmp
push
jmp
shr
cmc
mov
cmc
cmc
add
call
clc
cmp
shl
mov
jmp
jmp
mov
pushf
call
pusha
add
test
stc
xor
cmc
jmp
cmp
bswap
cmc
mov
test
or
call
shr
movw
mov
mov
pusha
call
sbb
bsr
mov
inc
neg
xor
ror
add
call
pushf
mov
pushl
shr
xor
mov
clc
pusha
jmp
adc
sbb
setg
mov
pusha
pushf
bt
cmc
add
pushf
jmp
and
sub
dec
movzbl
shl
sub
shrd
rol
add
jmp
call
lea
jg
mov
push
pushf
jmp
call
pushf
mov
mov
movl
jmp
mov
movw
mov
jmp
push
mov
push
call
cmc
pusha
xor
call
mov
mov
pushf
pushl
push
lea
jmp
call
push
mov
stc
bt
movb
push
sub
pushf
mov
pushf
mov
pushf
pushf
movw
lea
jmp
mov
pusha
mov
push
lea
jmp
mov
pusha
call
call
bswap
mov
pop
mov
pushf
mov
mov
pushl
pushl
ret
pushf
call
pushf
popl
jmp
mov
jmp
pushf
pushf
popl
push
call
not
mov
call
and
add
test
push
mov
rcl
mov
call
push
add
movb
pushf
lea
jle
pushf
pushf
call
mov
mov
jmp
movsbw
mov
pushl
call
call
movb
mov
call
call
mov
pushl
popl
pushf
push
push
pushl
lea
jmp
cmp
pusha
sbb
jb
sldt
cs
das
push
sbb
ltr
sub
add
sub
inc
icebp
das
sldt
cs
das
cmovo
xor
inc
add
xadd
sub
pusha
subl
mov
jo,pn
add
xadd
das
push
jne
jo
sbb
ltr
xor
pusha
imulb
pavgb
sub
addb
sub
cmovo
mov
sub
icebp
das
verr
jo,pn
das
mov
das
push
pop
sub
xadd
mov
cs
pavgb
xor
shrb
cmovo
add
pusha
add
mov
pavgb
punpcklbw
jo,pn
subl
push
cvttps2pi
inc
and
pavgb
das
ltr
xor
pusha
xor
or
cmp
pusha
or
or
xor
inc
pop
sub
cmovo
pavgb
sub
add
sub
and
das
push
pop
sub
xadd
sub
add
add
pusha
into
das
cmovo
sub
inc
sub
cmovo
sub
mov
sub
jo
loop
jo
shrl
punpcklbw
xor
add
sub
andb
cmovo
das
pavgb
xor
inc
pop
sub
sar
mov
das
str
das
str
add
pusha
xor
or
lds
push
xchg
pavgb
cs
jo,pn
add
mov
cs
sub
cmovo
sub
inc
add
mov
sub
pavgb
rol
jo
lds
push
pop
das
jo
xchg
das
cmovo
xadd
jo
jne
jo
pop
sub
rorb
cmovo
add
pusha
pop
sub
punpcklbw
das
push
or
das
xadd
das
verr
sub
or
into
das
cmovo
xor
inc
cwtl
sub
add
jo
xor
or
jb
ltr
xor
add
jo
sbb
str
das
lldt
das
cmovo
jo,pn
pop
cmovo
sub
jo
add
xadd
das
mov
das
push
cvttps2pi
inc
shrl
and
pavgb
das
mov
sub
add
das
xadd
das
cmovo
xor
inc
shrl
loop
punpcklbw
sub
punpcklbw
das
mov
sub
rol
push
imulb
pavgb
shl
sldt
punpcklbw
pavgb
xor
inc
pop
sub
rolb
cmp
das
pavgb
sub
push
jne
jo
inc
xor
rolb
mov
xor
pusha
xchg
das
cmovo
jo
pop
cs
jo,pn
imull
str
cs
sub
push
mov
add
xor
add
das
mov
sub
inc
pop
das
jo
pop
cs
xor
inc
loop
jo
icebp
das
sldt
sub
punpcklbw
das
push
loop
punpcklbw
jo,pn
pop
sub
xadd
sub
cmovo
mov
add
pusha
pop
das
jo
add
xadd
sub
adcb
push
imulb
pavgb
sub
jo
loop
punpcklbw
sub
and
das
mov
sub
shrb
cmovo
xchg
add
add
inc
add
repnz
lcall
popf
imul
pushf
movw
lea
jmp
call
clc
sar
daa
mov
jmp
bt
movzbl
clc
bt
bt
add
pusha
pushf
jmp
mov
pushf
mov
pusha
pushf
popl
movb
jmp
clc
shr
lea
jno
mov
call
pushf
mov
push
movb
call
pusha
pushf
mov
pushf
jmp
mov
call
neg
add
test
mov
pusha
cmc
jmp
jmp
movb
pushf
popl
pushf
mov
push
lea
jmp
pushf
push
mov
mov
mov
pushl
lea
jmp
pushl
pushl
popl
push
mov
movw
lea
jmp
call
adc
movzbl
call
daa
lea
call
mov
lea
dec
push
mov
jmp
push
movl
pushf
popl
jmp
jmp
add
add
not
bt
push
sub
cmp
movb
pushf
and
push
pushf
mov
jmp
xchg
cmp
xor
jmp
shl
pusha
movzbl
jmp
sbb
xchg
pusha
shl
mov
pushl
shl
cmp
mov
cmp
stc
bt
sub
jmp
neg
mov
test
sub
test
mov
mov
cmc
and
push
movw
pushf
popl
pushf
pusha
pushl
popl
push
pushf
pushf
lea
jmp
pushf
mov
call
pushf
pushf
pusha
jmp
movb
rcl
movb
call
pushl
call
pushl
popl
pushf
lea
jmp
jmp
jmp
mov
pusha
jmp
test
mov
jmp
call
push
mov
call
call
jmp
push
mov
push
jmp
push
jmp
not
cmc
cmc
add
jmp
add
inc
mov
bt
cmp
cmp
bt
add
pushf
push
lea
jmp
push
mov
pushl
mov
pusha
movl
mov
call
push
mov
pusha
call
pusha
jmp
mov
stc
sub
call
call
push
mov
pusha
mov
pushf
push
lea
jmp
not
mov
cmc
and
pusha
pushl
mov
call
jmp
push
pushf
popl
jmp
pushf
pushf
dec
cmp
cmp
test
cmc
add
clc
push
mov
stc
sub
jmp
jmp
pushf
popl
push
jmp
mov
pushf
pushf
mov
push
push
pushl
pushl
ret
mov
jmp
cmp
pushf
sub
movl
jmp
pushl
mov
push
mov
movb
mov
lea
jmp
pushf
push
mov
jmp
pushf
pusha
jmp
sub
call
call
mov
jmp
pushf
jmp
sub
cmp
sub
jo
bt
not
test
call
lea
je
push
push
pusha
pusha
pushf
lea
jmp
mov
pusha
push
pushf
lea
jmp
clc
call
mov
mov
push
mov
lea
jmp
call
lea
jg
pusha
mov
mov
lea
jmp
shl
btr
neg
xadd
mov
call
call
pushf
popl
pushf
push
movw
pushl
pushl
popl
pushf
push
movw
movb
lea
jmp
push
mov
mov
push
mov
push
lea
jmp
push
dec
pushf
lea
jmp
jmp
pusha
mov
movb
lea
jmp
sub
mov
shr
pusha
jmp
rcl
mov
bsr
adc
rol
mov
stc
clc
pushl
popf
mov
mov
mov
mov
lea
jmp
push
pushf
popl
mov
push
jmp
push
pushl
call
jb
sbb
mov
push
call
pushf
popl
push
pushf
jmp
pushf
mov
jmp
mov
pushf
popl
movb
jmp
mov
push
mov
jmp
movb
mov
call
mov
mov
movb
push
lea
jmp
call
mov
lea
jns
pusha
movw
pushf
popl
pushf
mov
pusha
lea
jmp
bswap
pop
mov
pusha
pusha
mov
jmp
call
jmp
mov
pushf
mov
pushf
mov
movw
pushf
pushl
push
pushf
popl
pushf
mov
pushf
lea
jmp
pushf
mov
jmp
pushf
mov
jmp
pushf
popl
call
jmp
jmp
push
pushf
mov
movb
jmp
mov
mov
mov
pushf
jmp
mov
mov
mov
mov
pushl
lea
jmp
mov
pushf
popl
call
mov
pushf
lea
jmp
cmp
cmp
sub
jmp
mov
pushf
popl
movb
pushl
popl
movb
push
movb
lea
jmp
jmp
movw
call
cmp
not
test
stc
pusha
call
mov
call
pusha
mov
pushf
movl
movb
pushl
lea
jmp
movb
pushl
popf
pushf
pushf
pushf
mov
lea
jmp
pushf
movb
lea
ja
bsr
not
bsf
bswap
mov
inc
not
and
cwtl
lea
xor
sub
shld
cwtl
call
call
mov
test
cwtl
call
jmp
mov
call
mov
pusha
mov
pushf
pushf
push
pushf
pushl
ret
rol
stc
sets
lea
mov
bt
stc
rol
bt
push
pushl
pusha
add
stc
add
jmp
pushf
lea
jle
push
mov
pushl
movb
lea
jmp
jmp
movb
mov
jmp
aaa
neg
mov
call
push
mov
push
push
jmp
aas
bt
dec
mov
shl
daa
lahf
movzbw
pop
aas
pop
sar
movsbl
cmp
pop
xadd
bsr
pop
js
bswap
popf
push
bswap
setl
lea
mov
mov
mov
movw
jmp
push
mov
pusha
pushf
lea
jmp
pushf
pushf
mov
lea
je
push
pushf
pushf
mov
jmp
call
jmp
pusha
push
pushf
mov
pushf
pushf
pushf
movb
lea
jmp
sub
stc
stc
clc
mov
ror
jmp
pushl
pushf
mov
pushf
jmp
jmp
movsbl
aam
mov
clc
call
shrd
mov
test
bt
push
add
pushf
pusha
mov
mov
pushf
pushf
push
movb
lea
jmp
pushl
popl
push
pushf
pushf
lea
jmp
jmp
add
mov
mov
pusha
pusha
mov
pushf
push
pushl
pushf
mov
mov
movw
mov
lea
jmp
call
pushf
pushl
test
shl
pushl
jmp
pusha
mov
pushf
lea
jmp
cmc
rcl
btr
sar
mov
dec
lea
inc
xor
mov
call
xchg
cld
mov
std
std
lea
pusha
pusha
xchg
movzbl
lea
not
mov
pushl
cld
jmp
sub
jmp
mov
pushl
pushf
pusha
lea
jmp
movsbw
mov
dec
bt
mov
pusha
mov
call
mov
push
mov
pushf
lea
jmp
pushf
mov
pusha
mov
mov
pushf
mov
jmp
pushf
popl
push
call
pushf
popl
mov
jmp
push
std
mov
pushl
not
call
pushl
call
pushf
pushf
mov
mov
push
push
lea
jmp
mov
call
pushl
pushf
popl
call
shl
btc
bsf
cmc
mov
movsbw
movzbw
dec
xor
setae
sub
rcl
add
inc
dec
inc
bts
or
not
add
pushf
push
rcl
add
sar
rcl
bt
xor
setl
dec
mov
mov
pusha
mov
add
movl
push
mov
push
pushf
lea
jmp
mov
pushl
mov
lea
jge
push
jmp
pushf
pushf
popl
call
pushf
popl
push
jmp
add
cmc
pusha
pushf
stc
sub
pushf
movb
mov
pushl
mov
mov
movb
lea
jmp
mov
pusha
lea
jb
mov
push
lea
jmp
jmp
pushl
pushf
mov
pusha
pushf
popl
pushf
pushf
pushl
push
pushl
popl
mov
pushf
lea
jmp
xor
pusha
pushf
rol
jmp
pushf
lea
mov
movb
pushf
lea
jmp
jmp
mov
pushf
mov
call
call
pushf
pushf
popl
call
lahf
cmc
mov
shrd
bt
mov
cmp
not
jmp
and
stc
mov
rcl
stc
cmp
mov
push
cmp
mov
sub
pusha
bt
pushl
shl
jmp
pushf
pusha
call
pushl
popl
pushf
movb
pushl
lea
jmp
pushf
call
mov
movb
mov
push
push
call
pushf
mov
mov
mov
movw
lea
ja
push
pushf
pushf
popl
jmp
pushf
movl
mov
call
ja
neg
lea
mov
bswap
ror
rcl
call
call
bswap
test
mov
bt
pusha
lea
pushf
add
jle
stc
cmc
add
push
pusha
xor
cmc
bt
cmp
jmp
and
shl
mov
shl
cmp
movsbw
and
mov
shr
mov
call
push
pushf
not
mov
jmp
mov
jmp
and
mov
bsr
mov
test
cmc
sub
clc
shr
pushf
rcr
pushf
pusha
push
mov
movl
call
pushf
pushf
rep
bsr
jmp
call
pushf
pushl
popl
mov
lea
jmp
mov
jmp
pushl
popl
pushl
pushf
movw
pushf
lea
jmp
jmp
mov
bswap
lea
bswap
xchg
pushf
popl
sete
pop
pushf
call
inc
add
jl
cmc
bt
cmp
not
stc
clc
clc
add
clc
bt
xor
jmp
call
test
sbb
sbb
mov
cmc
sub
clc
test
clc
pushf
add
pusha
jmp
mov
pushf
popl
call
mov
movb
lea
jnp
pusha
sub
pushl
pushf
pushf
shr
push
pushf
rcr
pushf
mov
call
push
movb
mov
jmp
pushl
popl
push
pushf
movw
lea
jmp
call
pushl
pushl
popl
pushf
movw
mov
lea
jmp
movb
call
stc
sub
pusha
add
push
pushf
popl
call
pushl
popl
pusha
pushf
lea
jmp
mov
push
pushl
push
call
pushl
movb
movw
mov
jmp
jmp
mov
push
movl
pushf
pushf
lea
jmp
pushl
popl
push
movw
mov
movw
lea
jmp
pushf
popl
lea
jge
push
push
lea
jmp
push
mov
mov
movb
push
lea
jmp
pushl
popl
push
pushf
push
lea
jmp
pusha
sub
jmp
pusha
mov
pusha
jmp
push
mov
movw
pushl
mov
lea
jmp
pushf
pusha
mov
push
pusha
movb
lea
jmp
call
jmp
pushf
clc
xor
push
cbtw
pushf
test
cwtl
jmp
pushf
pushf
popl
jmp
pushf
lea
pop
mov
pusha
xchg
pop
pop
jmp
movw
mov
movb
call
pushf
mov
pushl
mov
pusha
pushf
pushf
pushf
mov
call
sub
clc
call
jmp
lea
pusha
mov
pop
movzbw
lea
pop
mov
cld
cld
push
jmp
mov
call
cmp
mov
jge
pusha
shl
inc
mov
clc
clc
call
test
sub
cmc
cmc
cmc
push
imul
mov
call
pushf
popl
movb
pushl
popl
push
mov
pushf
pushf
lea
jmp
movb
pushf
popl
mov
mov
mov
pushf
pushf
mov
lea
jmp
xor
movzww
cmp
cmc
call
push
call
push
mov
pushl
pushf
popl
pushf
mov
mov
movw
mov
movw
push
movw
lea
jmp
movb
rcr
jmp
mov
mov
push
mov
lea
jmp
mov
lea
jle
pushf
pushl
dec
mov
lea
jmp
mov
call
mov
pushf
pushf
lea
jmp
movsbw
call
pushl
movw
lea
jne
pushf
call
sub
pushf
mov
lea
jns
mov
pushf
mov
movl
mov
lea
jmp
mov
call
dec
bt
add
pushf
neg
lea
js
cmc
xor
stc
cbtw
pusha
cwtl
stc
cmp
sub
pusha
mov
pushl
lea
jmp
add
pusha
mov
push
pushf
lea
jmp
pushl
popl
push
movl
lea
jmp
pushl
mov
push
pushf
popl
pushl
call
mov
mov
pushl
pushf
popl
pushf
mov
mov
mov
pushf
lea
jmp
push
call
mov
not
call
rep
mov
mov
rol
call
pusha
pushf
sub
bt
cmp
shr
mov
jmp
sub
pushl
call
lea
btr
clc
and
shl
and
bsr
ror
sub
jmp
jmp
jmp
stc
shr
push
pushf
pushf
mov
call
bts
rcr
pusha
rol
sbb
shrd
bt
lea
not
rol
btc
bswap
neg
not
and
mov
shr
mov
push
push
clc
sub
call
sar
pushf
movzbl
jmp
pusha
push
pusha
pushf
popl
jmp
pushf
mov
pusha
call
sub
ror
movzbw
mov
shrd
movzbw
shr
sub
mov
test
stc
call
push
mov
movb
pushf
pushf
push
lea
jmp
push
movzbw
pushl
popl
xchg
push
push
bsr
movzbw
mov
bswap
movsbw
push
pop
dec
clc
rcr
btc
not
or
shl
stc
bswap
sar
bswap
clc
movw
lea
rcr
movsbw
xor
xadd
sub
add
mov
btc
bswap
mov
shr
shrd
add
xor
setns
mov
push
xor
pop
cmp
sub
rol
adc
test
mov
neg
and
call
jmp
pushf
jmp
cmc
mov
add
shl
cmp
sar
mov
test
bt
pusha
mov
sub
jmp
jmp
call
test
pushl
xor
cmc
rol
cmp
clc
test
cmc
add
clc
neg
pusha
cmp
clc
jmp
push
mov
jmp
lahf
pusha
seta
call
pusha
mov
movb
push
lea
jmp
clc
push
xor
pusha
lea
call
mov
push
mov
pushf
pushf
call
pushf
mov
pusha
pusha
mov
jmp
add
push
mov
mov
movl
lea
jmp
call
movb
jmp
cwtl
pushf
mov
cmc
mov
movl
bt
not
call
call
call
movw
mov
pushl
mov
jmp
pushf
jmp
cmp
pusha
clc
xor
test
lea
cmp
sub
pusha
not
push
jmp
call
pushf
pusha
mov
push
mov
pushf
movb
lea
jmp
pushf
popl
call
mov
pushl
mov
mov
pushf
pusha
pushf
pushf
lea
jmp
mov
jbe
sub
jmp
aad
aaa
mov
and
jmp
mov
jmp
lea
pushf
movsbw
pop
rol
ror
lea
lea
not
cmp
pushf
call
push
mov
call
pushf
call
pushf
mov
mov
pushf
pushl
ret
pushf
popl
jmp
pusha
mov
pushf
pusha
pushl
mov
pushf
mov
call
jmp
add
pusha
jmp
pushf
call
pushl
popl
mov
movl
mov
pusha
lea
jmp
pushf
pushl
popl
mov
movl
pushf
push
lea
jmp
rol
pusha
clc
add
stc
add
call
sub
pushf
jmp
shld
rcr
push
das
movzww
clc
test
stc
xchg
call
jmp
mov
push
lea
jmp
xchg
jmp
bsf
push
call
push
fsubrp
and
adc
lret
inc
sub
shr
xor
pop
sub
hlt
jns
cmp
divl
addl
jmp
into
loop
int3
sub
adc
repnz
push
idivl
repnz
cli
rorl
sbb
xor
inc
pop
adc
or
pop
loopne
jecxz
imul
or
clc
jge
setg
in
popf
or
jae
push
std
inc
bound
inc
cmp
enter
insb
mov
mov
jp
call
push
xchg
push
adc
jbe
addr16
outsl
out
pop
ret
jno
andb
bound
pushf
mov
pop
movsb
ss
dec
std
jge
stc
in
push
ss
pop
movb
xlat
das
adc
test
cmp
scas
icebp
add
aam
in
xchg
push
push
lods
aam
or
and
lods
sbb
inc
lods
data16
jb
mov
push
ror
leave
dec
jb
fadds
mov
daa
arpl
aad
int3
jb
scas
aas
data16
pop
inc
sbb
or
dec
test
xchg
mov
push
stos
xchg
imul
mov
ljmp
jns
flds
outsb
cli
mov
popa
out
xor
add
ljmp
aad
dec
pop
xchg
xor
shlb
inc
icebp
lret
sbbl
pop
adc
pop
adc
push
stos
xchg
pop
outsb
or
out
ret
jp
test
test
cmp
sub
loop
or
movsl
xchg
les
or
movsb
ficompl
call
or
inc
data16
in
bsf
push
call
movsl
outsl
inc
dec
push
rclb
dec
std
xorb
and
inc
fldenv
and
pushf
mov
pop
adc
xor
dec
jg
pop
jge
stc
in
enter
and
aam
pop
ret
add
in
fldcw
out
xchg
repz
push
xchg
add
push
mov
in
xchg
push
imulb
lcall
data16
jmp
adc
inc
bsr
push
call
jecxz
mov
aas
adc
push
mov
push
xor
lcall
sbb
clc
aam
add
je
test
jnp
xchg
push
xchg
adc
rcll
addr16
xchg
sbb
push
rcll
fmull
mov
push
jp
push
sub
add
scas
sti
fistpll
rolb
xor
aam
pushf
xor
inc
dec
mov
test
bound
outsb
cmp
out
pop
jle
sahf
sbb
fld
add
iret
xchg
iret
jecxz
mov
xor
pop
jecxz
add
cwtl
jo
cmp
dec
daa
imulb
out
mov
pop
insl
scas
or
in
outsb
cmc
mov
fs
xchg
dec
popw
mov
repz
imul
fwait
dec
pop
xchg
das
das
jecxz
mov
mov
stos
lcall
into
or
jge
lock
and
mov
mov
dec
push
jge
dec
lcall
xchg
mov
popf
or
cmpsl
adcl
mov
and
je
inc
outsb
mov
jmp
add
xorb
and
int3
sbb
jmp
jae
fld
mov
jge
xchg
inc
pop
jbe
jbe
stos
xchg
out
in
mov
cmp
dec
cs
mov
add
push
data16
jns
leave
inc
in
outsb
sti
mov
addr16
ds
add
xor
out
mov
aad
dec
pop
and
in
pop
and
test
cmp
imul
add
or
lods
push
xchg
rolb
dec
add
xchg
in
orl
mov
mov
stc
cwtl
popf
cmp
adc
or
pop
fiadds
or
movsb
sar
call
enter
fs
mov
ja
call
pop
aam
mov
mov
jnp
call
push
shlb
ret
divb
xchg
adc
or
je
pop
sbb
mov
jg
loop
fcomp
ret
fbstp
push
push
adc
sbb
mov
outsl
xor
mov
mov
adc
pusha
sbb
fadds
shrl
pop
xchg
cmc
xchg
clc
cltd
cmpsb
push
mov
sarl
mov
hlt
xor
mov
dec
into
push
fdivl
std
shll
pop
scas
popf
rcr
push
fisubs
outsl
dec
sbb
and
xchg
call
mov
mov
xchg
push
push
mov
xchg
repnz
xor
xchg
out
fildll
test
push
stos
xchg
mov
popf
cmc
mov
inc
test
call
sbb
xor
and
dec
push
lret
jp
dec
mov
lret
popf
clc
enter
loope
shl
insl
std
ds
fadd
arpl
sub
call
push
cmp
mov
aaa
adc
jge
sbb
and
int
lret
stos
aad
pop
arpl
movsl
mov
cmp
adc
xlat
or
mov
fwait
mov
xor
cmpb
xor
cli
es
or
stos
testb
fs
cltd
push
adcb
std
adc
bound
jp
mov
std
sub
or
ss
dec
lcall
popa
test
inc
jp
jle
push
push
enter
fisubrl
adc
test
icebp
mov
push
test
xchg
arpl
xchg
push
mov
repnz
sbb
inc
bsf
push
call
adc
jbe
mov
fnstenv
dec
ret
out
iret
iret
push
cltd
adc
pop
imul
inc
ja
sub
jge
cmp
mov
dec
dec
arpl
aam
pop
enter
fbld
adc
test
fmul
xchg
shl
out
add
xchg
in
xchg
push
mov
fs
shl
inc
nop
mov
sub
xor
or
jl
fimull
jne
push
jno
and
sti
mov
pushf
cld
mov
sub
jo
movl
fnstsw
outsl
repnz
cld
jo
mov
xor
xchg
adc
xor
leave
aad
push
mov
or
jl
leave
lods
int
shl
flds
pop
sti
ds
ror
pop
mov
les
lods
jg
push
xorb
std
lcall
fdivrs
push
adc
adc
and
stos
or
clc
push
adc
cltd
icebp
repnz
outsl
sub
add
lea
sub
inc
test
add
outsl
xorb
ret
sbb
int3
shlb
pop
clc
pop
imul
push
out
and
sbb
aas
jp
dec
out
and
mov
push
sub
pop
jp
push
dec
xlat
lahf
xor
pushf
fcomp
ljmp
mov
popa
fs
int3
lcall
cli
xchg
push
or
push
cmc
iret
out
xchg
flds
fs
and
je
dec
mov
mov
pop
jno
sub
mov
mov
pop
mov
nop
xchg
lahf
cwtl
loope
repnz
scas
ljmp
cmp
out
and
fwait
jecxz
call
jnp
and
loope
mov
pop
cmp
aad
adc
hlt
sbb
mov
outsl
fwait
xchg
adc
sub
and
dec
stos
out
inc
fisubl
hlt
lret
pop
lret
inc
stos
hlt
nop
push
sahf
sbbl
inc
or
mov
call
lret
xchg
fstpl
pop
dec
mov
push
repnz
fscale
popf
aad
es
adcl
aam
hlt
mov
sbb
add
mov
add
inc
aaa
cmp
cltd
int3
iret
rorb
add
fwait
iret
and
xchg
mov
lret
out
out
ljmp
sbb
xor
mov
out
out
and
mov
sbb
sbb
cmpsl
dec
loop
sub
insl
call
inc
push
pop
fs
repnz
xchg
mov
push
es
mov
and
push
jbe
sub
ljmp
call
or
adc
pop
dec
cmp
rolb
xor
xor
jg
add
jnp
pop
inc
push
mull
sbb
negl
sahf
lcall
call
and
inc
inc
fucom
int3
stc
andl
mov
xchg
sub
cmp
pop
hlt
pop
xor
pop
sbb
pusha
addb
pushf
cmpsb
scas
cmp
pop
cmp
dec
or
xorb
sbb
or
sub
fs
movswl
add
lock
mov
inc
cmc
and
push
push
or
jns
push
adc
xchg
sbb
aam
scas
mov
and
xchg
lock
add
js
loopne
testb
in
jo
or
add
xlat
dec
inc
adc
sbb
pushf
test
loop
std
lds
dec
lods
xor
into
mov
xchg
gs
sub
push
push
mov
and
dec
pop
and
lea
cltd
aam
sub
dec
cmp
or
mov
je
dec
xor
inc
xchg
invd
xor
pushf
enter
aaa
inc
mov
sbb
clc
xchg
mov
loopne
adc
sbb
push
repz
xchg
lds
inc
cmp
ss
lret
iret
cmpsb
add
or
jl
mov
rcr
stos
xchg
pusha
or
das
shlb
mov
rcl
ss
push
jns
stc
inc
in
outsb
divb
or
lds
or
insl
pushf
xchg
xlat
pop
inc
pop
in
das
out
arpl
jp
xlat
aaa
push
sub
fsubs
mov
or
lea
repnz
dec
add
daa
pop
clc
or
sbbl
repz
dec
xchg
cwtl
in
cmc
sub
loop
or
pop
pop
xor
add
jmp
andl
mov
jmp
bsf
push
call
fs
nop
adc
std
mov
gs
jp
loopne
lret
jge
popa
inc
pushf
mov
pop
in
ss
or
pop
popf
jge
imul
daa
and
aam
pop
int
mov
dec
xchg
mov
test
shrl
neg
les
aaa
arpl
xchg
push
xchg
stos
je
int
bound
and
pusha
enter
aam
push
inc
adc
std
adc
sbb
mov
jae
mov
enter
and
xor
pop
push
ss
stos
das
pushf
jge
jg
in
clc
dec
inc
xchg
and
aam
pop
roll
fisubl
adc
test
insb
or
rolb
lods
fnsetpm(287
inc
push
mov
cmpsb
adc
pop
cmp
into
mov
push
enter
fmull
mov
imul
pop
xchg
popa
sbb
push
jns
inc
add
lret
pop
pop
sub
pushf
mov
pop
xchg
ss
fxch
cld
jge
jae
in
mov
dec
aam
pop
ret
add
out
shrl
adc
test
in
jge
popa
mov
add
xchg
pop
arpl
xchg
push
scas
je
bound
jo
fsubs
inc
stos
mov
jmp
sbb
dec
xchg
lahf
jmp
sbb
sti
scas
or
jg
aaa
sti
jne
xchg
out
cmp
dec
adc
rol
push
out
sahf
mov
fdivrp
adc
test
fstpt
outsb
popa
in
in
jecxz
cmc
mov
mov
icebp
and
sub
fcom
shlb
pushf
mov
aad
and
outsb
cli
in
xchg
testb
sbb
std
mov
inc
add
jg
das
and
add
jnp
sbb
add
push
lock
nop
xor
mov
iret
subl
icebp
mov
mov
cmp
sub
xor
push
and
push
adc
dec
fsts
pop
and
cmp
push
jae
insb
nop
stos
xchg
pop
pop
lcall
cld
dec
mov
enter
sbb
movsb
mov
loop
aad
sub
cmp
rorb
mov
pop
or
pop
dec
shlb
push
push
and
leave
daa
leave
cmp
xchg
popl
push
das
and
pusha
stos
xchg
pop
jne
xorb
lret
dec
cs
pop
inc
pop
lds
outsb
clc
mov
push
cmp
add
sub
push
fcomps
pop
mov
pop
mov
js
sub
mov
sbb
xor
je
sbb
rcl
and
lds
pop
imul
fwait
into
xchg
jle
mov
dec
fnstsw
xchg
sub
loop
or
pop
icebp
add
sarb
mov
lret
and
push
mov
inc
insl
mov
push
mov
bound
arpl
mov
movsb
or
fmull
ds
mov
mov
ret
enter
sub
clc
mov
in
mov
or
fnstcw
loope
and
mov
loop
mov
pop
jnp
sbb
mov
jp
call
and
test
sbb
mov
xchg
outsl
repnz
ret
jnp
xchg
fwait
iret
mov
pushf
mov
pop
add
xor
orb
in
sub
jge
inc
aam
push
int3
add
in
sub
test
xor
les
enter
push
push
movsb
push
lds
push
push
test
fadd
add
push
enter
fimuls
add
adc
xor
cmp
pushf
pop
adc
adc
test
or
or
pop
xchg
test
cmp
cmp
dec
push
jl
and
adc
inc
dec
dec
xchg
inc
hlt
mov
outsl
mov
daa
and
std
mov
sub
enter
ljmp
jmp
loop
cli
push
sbb
hlt
xchg
or
mov
jg
pop
rcr
fcomps
sbb
inc
push
adc
icebp
and
mov
add
loopne
sbb
popa
dec
sub
stos
pushf
loope
sbb
add
out
xchg
mov
sahf
ret
lret
repz
mov
lahf
mov
mov
push
das
stos
xchg
pop
fcomps
test
add
pusha
pop
mov
ret
js
jg
int
popa
pushf
mov
pop
lcall
add
std
jge
cmp
icebp
clc
dec
inc
dec
and
aam
pop
rolb
aam
adc
test
jnp
cltd
xor
std
je
mov
and
xchg
push
inc
cmpsb
in
popa
test
mov
enter
loopne
jmp
sbb
dec
ljmp
lret
sbb
and
fnstcw
mov
outsb
shrb
stos
xchg
pop
xor
sbb
mov
popa
push
mov
ret
js
icebp
in
jg
and
mov
pop
ss
mov
ja
in
enter
and
aam
push
ret
add
loopne
sub
testl
call
xchg
xchg
push
jbe
push
jne
push
jno
mov
sub
scas
or
jl
flds
ss
adc
ret
inc
push
data16
int
cmpsb
cli
scas
addr16
mov
adc
pop
enter
add
shr
push
ljmp
aas
stos
mov
fisubl
xchg
cltd
into
mov
lods
scas
jp
mov
push
jae
jne
dec
push
xlat
out
cmp
out
inc
mov
shlb
mov
xlat
outsl
or
push
mov
movzwl
test
add
push
lea
test
mov
leave
inc
dec
fsubrs
imul
mov
ret
sbb
cmp
dec
loope
aam
cld
ret
pop
stos
add
sbb
sbb
mov
mov
sbb
stos
xchg
pop
cmp
push
call
sub
inc
jno
lret
dec
and
xchg
jmp
aad
push
sahf
sub
or
pushl
pop
or
cwtl
xor
call
sbb
fisubrs
jmp
negb
test
rorb
sbb
xor
je
sbb
dec
and
shlb
pop
jecxz
arpl
fwait
mov
cmp
cmp
or
xchg
mov
add
pushl
or
inc
addr16
call
lret
dec
and
stos
sahf
or
jmp
mov
pusha
inc
cmc
dec
adc
in
lahf
sub
cmp
mov
pmaxsw
xlat
iret
jmp
sbb
xor
inc
dec
adc
in
and
aad
pop
jmp
dec
pop
enter
push
dec
test
cmp
aad
or
pop
xchg
popf
hlt
mov
addr16
jno
insl
mov
out
bsf
push
call
and
xchg
cmp
dec
daa
xor
loop
aad
or
jns
jmp
mov
imul
in
repz
fbstp
scas
jmp
inc
mov
or
sbb
xor
movsb
dec
adc
roll
cmpsl
pop
cs
mov
mov
dec
fnstsw
push
sub
int
aam
rcrl
out
add
mov
jne
inc
arpl
lret
dec
and
aam
push
aad
inc
incb
in
outsb
stc
mov
popa
nop
outsb
cli
mov
loope
stos
and
dec
xlat
lahf
dec
pop
bound
pop
in
sbb
mov
mov
inc
sbb
xor
test
adc
and
push
ja
das
or
ret
ja
dec
neg
pop
cmp
aad
push
ljmp
sub
add
movsb
jno
inc
push
mov
out
bsr
push
call
.byte
cli
