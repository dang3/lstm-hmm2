or
and
pushl
jmp
sbb
hlt
aaa
cmp
dec
dec
imul
orl
pop
sub
popf
or
movsl
popa
add
lcall
bound
mov
or
arpl
lods
dec
jle
inc
sbb
push
repnz
mov
mov
icebp
aam
int
repnz
jge
pop
and
fisttps
pop
enter
pop
add
aaa
push
pop
xchg
aaa
push
shll
stc
test
sbb
cltd
out
les
pop
or
mov
loop
xor
aaa
das
dec
jns
sub
cltd
sbb
arpl
cmp
and
js
cld
popf
push
movl
jno
dec
xlat
push
mov
or
mov
sub
into
data16
sub
fsubrs
xor
les
dec
popa
filds
lea
jle
cmpb
cmp
mov
sbb
mov
shrl
cld
test
icebp
mov
pop
mov
jle
shll
cmpsb
cs
push
push
stos
scas
loope
push
fs
test
adc
int
mov
pushf
xchg
das
and
lret
mov
insl
int3
fcmovne
sub
lcall
sti
fmull
fistps
push
ja
nop
push
cltd
popa
nop
sbb
outsl
stc
ds
xchg
fildl
xor
sub
mov
mov
cmp
push
sbb
mov
add
adc
aaa
cld
sti
andb
les
mov
in
rol
push
pop
movsl
ds
ficoml
inc
fxch
inc
gs
bound
test
mov
push
xor
movsb
push
leave
stos
pop
xchg
xorb
pop
push
into
in
popf
clc
pop
mov
hlt
lds
fmuls
shrl
cmp
adc
pop
jnp
add
sbb
test
lock
pushf
packssdw
bound
test
je
movq
pop
inc
pushf
push
test
mov
push
repz
jae
mov
imul
or
vpmaxsw
xchg
lods
scas
iret
push
xchg
addr16
xchg
jmp
add
fstps
testb
out
pusha
mov
call
inc
es
fcmovnb
inc
and
or
aaa
or
mov
cmp
cmp
push
call
pusha
pushl
popl
movb
pusha
pushl
ret
cmp
jle
jnp
add
mov
jmp
inc
and
jo
cmp
iret
pop
sub
pop
bound
ror
xor
adc
cmpsl
inc
outsl
pop
mov
cmc
mov
mov
fldcw
and
lods
popf
cmp
in
stos
shlb
mov
xchg
pusha
push
fwait
push
add
repz
add
rorl
daa
jb
jle
mov
repz
and
dec
or
fidivrl
call
inc
adc
dec
fucomp
jmp
repz
mov
fucomi
push
insb
dec
jmp
pushaw
pop
mov
out
fidivrl
and
das
xchg
sub
jp
lods
idivb
fistpl
not
sub
outsl
shlb
push
dec
dec
inc
dec
xchg
push
push
lods
mov
cmp
mov
adc
rol
jae
inc
sbb
xor
mov
push
jno
sub
adc
mov
add
iret
call
lea
jne
push
stos
pushf
push
lea
jmp
fists
inc
sti
loope
clc
add
jne
inc
cmpsb
out
rcr
jmp
adc
clc
cmp
shlb
mov
outsb
cmp
or
popf
outsb
icebp
xchg
idiv
cmp
ss
rcrl
pop
sub
in
in
jmp
jae
mov
sub
add
ljmp
std
sub
je
ja
inc
cmc
pop
mov
lret
jo
lods
or
pop
lcall
fwait
loopne
test
pop
mov
ret
dec
stos
xor
int
call
fs
mov
fwait
mov
stc
mov
fistps
mov
inc
xchg
lods
mov
sahf
mov
push
adc
out
outsl
cmpsb
sbb
inc
sub
insl
push
or
xor
and
ret
xor
outsb
sbb
sbb
mov
xor
xchg
push
test
js
std
into
and
loope
push
ja
rcll
inc
pop
sbb
cs
lock
pop
or
stos
ljmp
aas
lahf
jno
js
cmp
or
mov
out
imul
lods
sub
inc
into
sub
jg
enter
inc
enter
fadd
xchg
adc
pop
sbb
mov
jp
jae
test
add
cmc
bt
call
jmp
stc
pushl
neg
stc
test
cmp
jmp
add
cmc
call
call
lods
lods
cwtl
xor
fistl
ret
sarb
xor
movsb
jmp
dec
adc
sub
xor
call
jmp
sub
gs
mov
scas
enter
decb
sbb
add
or
data16
mov
cmpsl
sub
add
fwait
mov
and
inc
clc
out
idivb
test
push
lcall
sbb
sti
lahf
sbb
or
test
pop
lods
stc
cltd
cmpsl
leave
cli
mov
jne
fidivrl
nop
ja
insb
lea
in
cmc
sub
xchg
xor
mov
sub
into
and
out
pop
add
lods
xchg
negb
and
ja
or
pop
xchg
call
jl
clc
cmp
xchg
mov
sbb
mov
int3
mov
add
or
jb
mov
xchg
mov
mov
mov
shlb
and
dec
addr16
ja
test
mov
sub
into
rorl
cltd
popa
xchg
outsb
xchg
mov
cltd
rolb
stos
pop
xchg
mov
out
push
push
mov
lea
ja
pushf
jmp
sub
inc
out
jbe
inc
push
lock
mov
xchg
leave
popa
xor
arpl
rol
mov
mov
cmp
stc
pop
pop
cmp
mov
mov
pop
add
mov
fsts
xchg
add
leave
push
jl
inc
and
sbb
popa
arpl
pushf
rorl
lock
add
daa
add
loop
pushw
adc
rorb
test
jns
and
pop
jb
add
pop
out
or
mov
sub
lahf
loop
mov
insb
add
scas
je
xchg
mov
jecxz
add
dec
das
icebp
add
jl
add
sub
sbb
or
out
fcoml
mov
push
adc
cli
dec
stos
or
push
lret
dec
dec
aad
repz
inc
ror
mov
sarl
pop
mov
pop
sbb
out
add
popa
xor
sub
pop
cmp
dec
bound
fidivrl
ljmp
jge
bound
sbb
inc
jae
repnz
dec
test
nop
movl
fldcw
sahf
add
inc
adc
lret
into
xchg
mov
or
and
dec
pop
inc
sub
jmp
ficoms
enter
and
add
add
cwtl
lea
call
mov
pusha
movb
test
pusha
test
movb
pushf
lea
je
bt
sub
pusha
bt
cmp
pushf
call
je
jp
scas
push
jb
insb
inc
dec
hlt
ss
js
push
xor
mov
fdivr
sub
cld
cmp
mov
out
jne
sub
fmuls
mov
jp
gs
mov
xlat
aas
adc
jno
sbb
sbbb
rol
pushf
nop
cltd
jns
mov
mov
pop
or
xor
inc
repz
lock
mov
cmp
cmpsl
mov
iret
idivb
out
jle
icebp
jb
adc
cmp
clc
dec
push
cld
in
xchg
xlat
push
fimuls
xor
stos
in
jno
outsl
or
dec
jbe
adc
out
es
push
enter
hlt
add
and
mov
push
push
push
insl
test
cmp
leave
mov
sub
adc
mov
xchg
sarl
mov
inc
cs
outsb
pop
mov
in
fstps
mov
loope
cld
mov
test
xlat
sbb
ljmp
cwtl
fwait
jge
adc
push
dec
xlat
dec
inc
pop
jge
call
mov
push
pop
cmp
mov
cmc
mov
inc
mov
leave
ds
lea
adc
das
sub
push
adc
lds
fistl
jp
test
ja
mov
and
shr
ret
push
mov
xchg
mov
cwtl
mov
jmp
push
and
shll
adcb
ficompl
pop
aas
mov
notl
adc
lods
fiadds
dec
out
fdivrl
cmp
push
inc
testb
leave
mov
jae
ret
adc
ss
xchg
mov
nop
pop
mov
les
mov
fnsave
aas
out
inc
jle
adc
jmp
daa
xchg
mov
mov
xlat
outsl
xor
sbb
sbbb
xchg
sub
lods
outsb
ljmp
jno
jae
cli
or
mov
sub
lock
jle
cs
lcall
inc
std
lods
cmpl
sbb
stos
daa
push
xor
xchg
xlat
mov
push
dec
nop
and
cmp
js
dec
mov
stc
lahf
pop
add
popf
dec
adc
mov
xlat
lods
xchg
jnp
sbb
mov
stos
pop
sub
cmpsl
dec
aaa
into
movb
add
add
inc
xchg
psllw
stc
cmp
push
sbb
fidivrs
out
fdivs
andl
mov
lods
insb
adc
inc
bound
mov
mov
jl
dec
popa
xchg
insl
leave
test
ss
pushf
mov
xchg
jp
mov
sti
adc
das
inc
out
jb
pusha
mov
mov
cmp
cmc
test
mov
mov
mov
test
pushf
pushf
lea
je
test
clc
push
pushf
add
cmc
cmp
jmp
push
pusha
mov
movl
jmp
push
repz
and
cmp
call
dec
mov
push
sbbl
sti
insl
btr
insb
cld
sarl
and
inc
not
insl
ljmp
xor
arpl
je
or
mov
ljmp
and
pusha
push
push
pushl
ret
push
push
pusha
pushl
ret
push
or
push
pop
mov
xor
shrb
sbb
lods
xor
xchg
repnz
lcall
xchg
rep
scas
hlt
push
fistl
sti
dec
shl
roll
mov
leave
or
pop
and
pop
popf
cmpsl
test
mov
sub
std
test
into
xchg
sti
fwait
cmp
mov
lock
xchg
inc
xor
jb
sahf
pop
cmp
outsb
cmp
cmp
add
mov
push
lods
das
pop
push
fdiv
cwtl
xor
add
jmp
mov
les
loop
push
sbb
and
je
push
cmp
movb
pusha
lea
jne
jmp
lea
ja
call
sbb
in
stc
xchg
call
decl
ja
pop
stos
adc
add
sarb
or
sbb
or
add
es
sub
nop
mov
loopne
jns
sbbb
mov
xor
sbb
movsl
cmpsl
and
xchg
jns
mov
mov
jne
xchg
mov
add
and
clc
sti
push
movsl
popa
bound
lods
inc
mov
pop
dec
cwtl
lret
push
push
iret
stc
jge
inc
out
mov
insl
or
jnp
cmp
or
adc
add
cmp
nop
lock
aas
add
jnp
pop
cli
cmp
sbb
mov
lahf
sbb
mov
mov
mov
divb
stc
in
in
sbb
mov
fnstenv
inc
adc
pop
aam
push
sub
loop
mov
gs
movsb
jo
sub
push
aad
cmp
add
pop
out
icebp
adc
sti
imul
adc
arpl
pop
fs
int
adc
outsl
mov
mov
mov
enter
mov
lods
dec
repz
dec
test
fs
fwait
loopne
out
mov
pop
pop
cld
aad
mov
add
push
bound
scas
jmp
jno
cmc
mov
mov
pop
pusha
or
or
lret
add
aas
adc
cmp
stos
mov
mov
mov
pushf
mov
push
pushf
lea
jmp
jmp
stos
pop
scas
fimull
sar
jnp
mov
jae
data16
and
out
fildl
stos
inc
repnz
sahf
xor
sub
popf
shlb
mov
call
mov
inc
loope
push
or
aam
dec
mov
jmp
and
mov
xor
lea
jmp
lea
jb
cmp
clc
cmpb
jmp
lea
je
lea
movzbw
mov
cwtl
push
lea
push
bswap
lea
pusha
push
mov
movl
jmp
mov
push
pusha
pushl
push
lea
jmp
call
lea
jne
lahf
cwtl
movb
cwtl
pusha
not
setp
mov
lahf
lea
pusha
pushf
movl
mov
pushf
jmp
cmp
aad
add
mov
push
and
xchg
jne
xchg
test
and
insb
jmp
hlt
lea
inc
repz
xchg
lret
sub
sbb
adc
cmc
push
sbb
movl
mov
xor
jp
imul
dec
sub
data16
push
call
call
jne
rcr
fs
call
push
push
mov
pusha
lea
jb
pushf
pushf
pushl
ret
xor
jo
mov
jge
pop
and
push
push
xchg
aaa
outsl
ficoml
add
xor
cltd
mov
jbe
mov
stos
or
xor
adc
push
and
sarb
addr16
stc
pop
rcrb
push
push
dec
push
repnz
jmp
sbb
inc
mov
mov
bound
xor
mov
mov
fists
scas
movb
scas
out
add
inc
xor
nop
adc
add
or
jmp
movw
call
pusha
lea
ja
bt
sub
shrd
neg
add
shrd
mov
bt
rcr
mov
stc
bt
test
pusha
repnz
jmp
add
push
push
mov
pushf
lea
jmp
test
neg
push
sub
jmp
outsl
stos
roll
adc
xor
add
xchg
mov
jne
enter
pop
xor
test
sub
iret
or
std
clc
dec
dec
pushf
push
pop
push
sub
mov
popa
jns
cbtw
mov
inc
jl
int3
mov
mov
push
mov
mov
xor
aam
push
dec
in
mov
mov
jp
dec
sbb
scas
mov
sbb
mov
sbb
inc
push
xor
cs
sbbl
xchg
sbb
hlt
aad
clc
gs
xchg
mov
push
in
pop
push
call
xor
inc
mov
adc
or
or
or
js
push
xor
sbb
in
dec
lock
rorb
jge
cmp
inc
es
ja
aaa
orb
jnp
sub
jae
jge
sub
out
pop
xlat
aam
aad
sarb
pop
xchg
gs
incb
cmp
inc
jns
jecxz
xchg
pop
push
fisttps
xor
pop
cmp
les
insb
data16
mov
pop
jo
jmp
add
xor
sbb
insl
int
add
sbb
cmp
sbb
imul
sbb
inc
xlat
sbb
add
sbb
push
fcomps
add
adc
add
leave
pop
dec
into
xchg
pop
inc
and
sub
cmova
cmp
dec
into
lock
sub
and
test
sub
push
mov
jne
out
push
test
xchg
lret
jg
mov
mov
bound
lea
call
pusha
push
jmp
rol
not
mov
bt
jb
pusha
test
cmp
pushf
pusha
lea
jb
clc
clc
cmp
cmc
cmp
pusha
lea
ja
ror
xor
pushf
add
lea
rcl
call
pusha
pushf
movl
push
jmp
jmp
pusha
lea
call
jmp
pop
sub
mov
push
xor
push
pop
mov
add
test
fwait
ret
jle
loope
or
out
rorl
cli
xchg
jecxz
add
sbb
stos
insb
clc
sbb
inc
imul
push
push
push
pop
mov
cmc
int3
data16
inc
mov
jmp
sbb
and
jae
jmp
lret
mov
test
lcall
cwtl
pop
push
div
and
cli
aad
xchg
test
cmp
testl
iret
cmp
mov
inc
dec
xchg
dec
and
negb
leave
fmuls
ds
pop
xor
popf
dec
jge
cs
in
lods
jne
sub
dec
ja
sbb
dec
mov
dec
das
push
inc
sbb
cmp
mov
sbb
outsb
fildll
das
mov
push
stos
lret
lcall
out
das
mov
pop
adc
lea
sub
or
lcall
shl
repz
xchg
scas
fcmove
mov
mov
push
mov
sub
dec
mov
cmp
shl
scas
scas
push
into
xchg
int
fwait
into
cmp
repz
cmp
cmp
pop
into
lea
enter
sub
dec
fdivrl
jge
dec
push
aas
fbld
popf
sub
sti
ret
mov
sub
sub
into
out
jb
xchg
bound
int
fstpl
mov
xchg
mov
cld
inc
addr16
mov
sub
cmp
jge
testb
fmull
pop
mov
mov
loop
notb
jge
mov
lods
cmp
mov
mov
lcall
pop
loopne
testb
repz
stos
cmp
ja
mov
idiv
mov
fdivp
aad
lods
fstl
jge
ja
into
in
ja
jmp
sbb
fmul
shrl
push
pop
and
dec
sbb
stos
loope
jp
jmp
dec
and
pop
das
aas
ret
push
push
and
neg
inc
sub
mov
mov
subl
popf
cmpsb
inc
mov
dec
test
push
mul
xchg
lea
sbb
sub
xor
out
mov
dec
fs
int
add
sti
pop
mov
cmp
pop
and
lods
lret
jmp
dec
mov
ljmp
aad
dec
jmp
or
push
shrb
add
jg
aas
mov
pop
jmp
xlat
jmp
jmp
cs
dec
into
pushf
pop
cmp
sub
dec
mov
xlat
scas
aas
notb
jp
jmp
sbb
xchg
aas
cmpsb
cmpsb
and
mov
insl
xchg
jge
dec
lea
push
mov
int
cmp
mov
cmp
negb
cmp
xchg
push
ljmp
push
dec
mull
divb
mov
jp
xor
imulb
dec
jg
sarb
push
push
jno
int
add
test
pavgb
sub
ret
aas
jg
iret
ja
add
xlat
jmp
scas
divb
pop
daa
ja
jmp
sbb
pop
sbb
jmp
notb
test
and
idiv
mov
aad
and
outsl
negb
in
idivb
in
mov
fnstsw
dec
imulb
call
sub
mov
lcall
jg
lcall
int
aas
mov
rolb
lcall
fistpll
jno
xlat
xor
stos
cmp
lock
mov
dec
ja
sti
sbb
jmp
cmp
jmp
cmp
mov
mov
jae
pop
fmulp
ds
les
ljmp
fsubrl
loop
push
cs
imul
out
test
lods
sub
mov
fdivp
xlat
inc
mov
xlat
push
stos
and
mov
in
inc
jnp
sbb
cmpsl
jnp
negb
shll
in
add
jnp
mov
aas
outsb
cli
xchg
jnp
sub
ret
shlb
imul
lcall
lcall
pop
divb
sbb
cmpsl
aad
ror
ja
cmp
stos
movsl
xlat
push
xor
ror
pop
sti
cmpsl
ja
dec
scas
jnp
out
xchg
ss
stos
or
int
push
dec
scas
imulb
dec
lods
cmpsl
jnp
add
jnp
dec
test
imulb
in
test
notb
sti
dec
jnp
mulb
stos
lcall
sarl
jle
out
fstp
outsb
mov
jnp
ror
jns
iret
jecxz
lock
sbb
jge
fucomp
pop
sbb
dec
ss
insl
into
ja
iret
out
or
ror
jl
es
and
stos
in
dec
std
dec
stos
test
movsl
cmp
out
pushl
enter
cs
repz
out
scas
and
imul
mov
in
dec
sub
lret
mov
das
mov
es
fcmove
js
jp
lret
out
mov
lret
cmpsl
outsb
ja
sbb
cmp
idivb
testb
ds
pop
jge
push
das
icebp
cmpl
push
inc
mov
cli
xchg
ret
out
fisttpll
cmp
shrl
out
fstp
xor
lcall
jno
lret
cmp
jecxz
aaa
cmp
sub
out
push
push
divb
cs
lods
imul
popf
out
fisttpll
dec
call
fnstsw
mov
mov
imulb
popf
jge
das
aaa
jnp
cmp
aaa
fmull
ffree
pop
mov
jno
frstor
jno
stos
cmp
repz
leave
call
imul
shlb
dec
push
fnstsw
scas
ja
jmp
mov
jmp
mov
sbb
ss
mov
cmp
xchg
fucom
loopne
jl
jnp
test
inc
popf
mov
mov
insl
in
daa
mov
fstp
insl
imul
test
dec
mov
mov
pop
mov
aaa
scas
jg
fldpi
sarb
xchg
frstor
daa
jmp
sub
mov
das
dec
mov
mov
sbb
es
xchg
ret
lcall
sbb
cmp
ret
mov
cmp
ss
fnsave
inc
into
sub
fnstsw
cmp
jg
xor
fstpl
lret
and
mov
cmpsl
mov
aaa
dec
push
mov
std
rcrl
ljmp
dec
mov
aas
int
rolb
pop
aaa
cmp
frstor
dec
lods
push
push
sub
int
imul
push
aad
into
and
imulb
in
popf
int
push
sbb
cmp
inc
in
jnp
mov
and
cmp
fwait
mov
mulb
jge
lcall
aas
enter
adc
pop
push
cmc
out
fldl
xchg
jmp
mov
fisttpll
outsb
cmc
lcall
outsl
lock
test
divb
xor
imulb
mov
cli
out
divb
jge
fnstsw
push
out
fisttpll
mov
jg
and
mov
dec
cmpsl
fisttpll
ss
and
stos
jmp
fstl
lods
sti
and
dec
sbb
es
out
xor
frstor
and
mov
fldl
pop
and
sub
popf
movsl
popf
insl
dec
inc
mov
cmp
daa
jnp
dec
mov
int
cmc
loope
sbb
out
cmc
mov
in
cmc
mov
mov
jmp
dec
pop
out
push
fnstsw
sub
into
loopne
call
pop
dec
das
pop
cmp
fnstsw
jecxz
lods
xchg
jnp
mov
cmc
jge
and
mov
mov
cmpsl
testb
or
cmc
in
cmp
in
sub
imul
roll
fstpl
jnp
cmp
jnp
sub
ja
xor
lret
es
pop
test
inc
or
decb
call
push
or
jnp
lea
mov
pop
and
out
rol
into
dec
pop
fstpl
and
cmpsl
jnp
mov
out
push
mov
or
mov
sti
imul
pop
mov
xchg
mov
jnp
cs
out
testb
mov
mov
mov
cmc
aaa
lods
push
sbb
cmp
jecxz
dec
lcall
push
fldl
aaa
dec
mov
aaa
lea
lcall
pop
sbb
in
dec
mov
sub
dec
mov
insl
mulb
mov
test
pop
lods
pushf
lds
mov
out
mov
jl
xor
daa
fucomp
lea
and
mov
insb
mov
mov
clc
popf
mov
cmp
enter
ja
stos
cmpsb
hlt
aam
cmp
testl
or
enter
sub
adc
jae
dec
insl
xor
cmpsl
in
std
lret
cmpsb
or
enter
mov
jb
in
cmp
repnz
or
and
xorb
outsb
lods
jle
mov
and
sub
sub
cmp
sub
out
and
and
or
mov
ljmp
int3
sbb
or
sti
push
aam
xchg
cmpl
sub
ja
ret
mov
xlat
jmp
add
mov
fs
cmp
fnstenv
mov
outsb
push
icebp
sub
out
xlat
or
mov
xchg
insb
sbb
and
fldl2t
in
mov
out
aas
sub
adc
inc
inc
sub
daa
inc
fsubs
pop
in
call
mov
mov
enter
dec
call
and
loop
sbb
cmpsl
inc
push
test
xchg
aas
test
leave
mov
bound
push
loopne
stc
mov
inc
sbb
mov
push
cwtl
imul
clc
and
sub
in
sti
lods
add
arpl
mov
sub
int3
orb
push
aaa
fs
xor
ja
xchg
xchg
stos
sbb
test
andl
int3
fsubrl
int
arpl
add
outsl
int3
mov
scas
es
or
and
insl
into
cld
aas
test
loope
in
xlat
lods
cmp
mov
repz
ffree
lcall
mov
addr16
pop
adc
movsb
sub
loope
std
cmc
and
stos
lds
sbb
stc
outsb
and
mov
dec
inc
stos
aad
insl
sbb
data16
or
out
jge
ljmp
mov
imul
cmp
pop
sub
sub
mov
decl
cmp
in
add
adc
xchg
add
fsubs
dec
or
jge
imul
mov
push
mov
mov
and
sub
in
push
push
push
cwtl
ja
stos
pop
jmp
addb
jns
adcl
daa
lret
mov
cmpsb
inc
sub
jecxz
test
lcall
lret
enter
shlb
jae
arpl
lcall
and
mov
loope
stos
rorl
and
call
mov
js
jge
out
in
inc
popa
and
fsubs
mov
mov
xchg
ret
imul
incb
test
test
int
pop
jge
test
push
pop
inc
dec
mov
push
adc
mov
cltd
cmp
add
xchg
inc
cs
push
cs
push
sub
and
frstor
add
cmp
push
jo
pop
pushf
pushf
in
dec
es
jae
add
icebp
jp
incl
shll
cmp
cld
movsl
inc
adc
aad
cmp
ss
sub
dec
cmpsb
out
sbb
ds
and
sbb
xchg
into
xchg
out
sbb
adc
call
sub
das
cmpsb
mov
jecxz
repnz
mov
fsts
or
mov
aas
sub
ljmp
inc
add
xchg
ficompl
cmp
pop
gs
push
pop
sub
leave
sar
arpl
sub
and
ficoml
jp
fwait
jl
test
jo
in
mov
add
stos
jp
push
test
dec
les
pop
mov
in
std
and
xchg
std
inc
inc
dec
lea
mov
mov
inc
in
mov
lret
and
lock
inc
test
cmp
ret
movsb
std
push
and
leave
sbb
lock
fidivl
mov
mov
lds
aad
outsb
push
sub
test
push
aaa
push
popa
add
aad
add
stos
cmp
jmp
nop
cltd
jns
orb
mov
push
fwait
ja
mov
divb
ss
mov
sub
pop
xchg
add
xor
rcrl
mov
jle
xor
mov
scas
xchg
out
clc
out
in
test
push
insl
out
movsl
mov
inc
mov
cld
ret
jge
aas
cmp
sub
lahf
movsl
inc
lock
push
test
and
push
jmp
movsl
and
mov
into
push
mov
aaa
loopne
or
push
cmc
call
mov
lret
xchg
add
lret
std
aaa
scas
stos
call
test
add
sarl
push
mov
cmp
lcall
mov
andl
mov
fndisi(8087
xlat
out
dec
ljmp
es
mov
sti
adc
mov
aad
loope
push
in
jns
in
xlat
mov
cmpsl
das
lahf
lret
xchg
mov
int
leave
jne
aaa
cmp
mov
es
out
sbb
xchg
es
fmuls
imul
sub
das
push
repz
mov
jmp
aam
std
xchg
sub
fiaddl
lret
jbe
and
pop
dec
into
and
cmp
imul
xchg
inc
and
jl
movsb
and
ja
stos
dec
pop
pop
jl
pop
mov
xor
lds
add
or
ja
pushf
in
add
bound
popa
lods
push
jg
mov
adc
push
and
adc
aad
scas
jno
sbb
or
std
mov
leave
jns
sub
sub
sub
push
lds
out
gs
mov
cld
jmp
sub
jb
stos
and
push
xor
test
sub
shlb
in
add
mov
lret
cs
fdivrl
std
push
pushf
jmp
xor
and
mov
xlat
dec
cmp
sti
pop
call
mov
xor
xor
out
xorl
mov
loope
mov
inc
lret
inc
ficomps
inc
cmc
leave
aam
cmp
mov
popa
insl
mov
xor
jmp
mov
push
push
out
mov
xor
jnp
push
cmpsb
mov
inc
fidivs
test
out
sub
test
mov
enter
xor
mov
sti
fldenv
cmpsb
and
das
mov
outsb
mov
insl
out
ja
jg
cmp
aas
sbb
arpl
sub
inc
mov
js
dec
data16
push
mov
or
pop
pop
jns
fdivs
jnp
in
cmpsb
jp
push
push
cli
shlb
imul
lcall
jns
stos
sub
jmp
fisubl
sub
xor
and
inc
es
mov
in
add
movsl
lods
mov
call
shrl
cmp
push
and
push
mov
test
mov
stos
jae
inc
cld
xchg
in
shll
sahf
inc
mov
mov
and
aas
shlb
test
lods
dec
lds
mov
imul
cmp
or
mov
out
push
sub
xor
mov
jmp
or
fisttps
xchg
and
cmp
out
lret
or
and
dec
add
das
dec
js
cmp
jp
jmp
aam
cmp
movsb
fdiv
shll
das
inc
mov
mov
adc
and
mov
mov
cwtl
push
inc
mov
roll
jecxz
stc
fs
int3
add
cs
push
mov
shll
cmp
mov
jecxz
sub
fisttpll
scas
mov
pusha
addr16
push
movsl
lods
loopne
fnsave
aaa
sub
add
and
adc
sub
das
and
pop
test
cmp
lock
daa
sub
dec
cwtl
jecxz
xchg
xchg
lret
notl
cmpsb
mov
shlb
mov
sub
sti
popf
into
popa
jl
call
out
iret
sub
mov
or
and
inc
sbb
mov
lret
imul
push
cmp
xchg
jge
je
push
jecxz
cmp
inc
push
mov
mov
push
sub
inc
leave
insb
pop
push
lahf
push
mov
xchg
cmc
cmp
cltd
cwtl
and
mov
ss
push
in
cmpsb
and
or
pop
mov
and
adc
and
jmp
pop
inc
stos
xchg
leave
int
stos
scas
in
jmp
inc
and
sub
and
lea
sahf
pop
sbb
lea
gs
xor
mov
cli
or
mulb
sbb
leave
push
xlat
lret
xchg
and
mov
jno
fsubrs
aam
adc
or
push
xchg
push
out
in
dec
push
insl
jp
imulb
xchg
inc
cmpsb
jecxz
jmp
fdivrs
bound
outsb
jae
cmc
xor
hlt
stc
popf
out
mov
mov
rclb
inc
adc
sarl
dec
outsb
sub
andl
test
and
dec
dec
xor
push
mov
sbb
pop
jmp
and
loop
xlat
and
scas
cwtl
pop
ljmp
jne
sub
push
cli
mov
push
cmp
xchg
cmp
cmp
js
stc
out
push
sbbb
sub
cmp
jnp
into
push
aad
rcr
lcall
int
inc
sarl
stos
enter
dec
rolb
sti
into
stos
rcl
addb
in
ror
outsb
aad
daa
in
push
inc
and
and
and
jge
movsb
cmp
cmc
and
pop
mull
adc
sub
push
stc
fcomps
mov
out
xor
dec
test
mov
lcall
cmc
push
pop
xchg
xchg
adc
push
cmpsl
ss
pop
daa
add
pushf
push
sub
pushf
inc
mov
cmp
lcall
mov
repnz
jmp
jbe
cmc
imul
psubsb
sbb
xchg
add
sub
leave
roll
push
adc
push
daa
jg
push
adc
cs
jns
fdivs
std
in
dec
adc
mov
cltd
cld
and
xchg
jmp
mov
cmp
cmpsl
mov
mov
mov
cmpsl
xor
xor
add
cmpb
pop
jl
out
push
add
dec
mov
cld
push
inc
jmp
outsb
xchg
xchg
xlat
bound
and
imul
mov
aam
mov
adc
test
inc
int
mov
and
push
lahf
mov
add
push
cld
pop
mov
add
adc
cmpsl
mov
cmp
mov
dec
pusha
cmp
cltd
push
jg
cmpsl
test
xchg
movsb
or
pop
push
jb
mov
ret
and
dec
adc
sbb
fs
test
dec
xor
lret
adc
and
mov
cli
aad
and
ret
fcmove
cwtl
mov
fstpl
inc
movsb
in
test
add
xor
inc
ret
inc
mov
xchg
push
inc
inc
push
xchg
xchg
adc
inc
jne
cmp
mov
int3
movsb
jne
ss
mov
mov
negl
cmp
pop
in
aaa
lods
gs
test
add
test
lea
loope
shll
stc
mov
in
loop
sub
scas
sub
mov
fsts
mov
ffree
cmp
jle
add
negb
xor
mov
xor
lds
xchg
or
push
in
mov
ljmp
cmpsl
aas
inc
cmpsb
xchg
shrl
mov
push
and
lret
jge
fldenv
in
xor
xor
dec
or
mov
out
movsb
js
movsb
sub
stos
pop
icebp
es
mov
mov
mov
dec
sub
pop
lcall
push
mov
jp
mov
or
mov
push
mov
add
arpl
mov
rcrl
mov
sbb
rol
and
sahf
and
cmpsb
sub
call
sub
sub
mov
cmp
fsubs
lods
dec
add
push
hlt
ljmp
ret
cli
sub
test
test
int
sahf
call
xlat
fstl
push
sub
and
in
push
es
mov
pop
xchg
in
mov
leave
test
mov
rorl
ret
sub
fildl
fwait
sub
int3
test
jmp
in
insl
mov
jmp
aad
movb
or
ljmp
dec
cmc
cmp
jl
mov
dec
xor
in
inc
mov
cmc
addr16
mov
and
fucomi
xchg
adcb
mov
and
aad
push
stos
mov
cmp
out
push
ds
sbb
jbe
insl
aad
out
sub
jl
jmp
inc
cmp
push
insb
sub
xchg
dec
outsb
mov
sbb
fistps
mov
dec
data16
cmp
xchg
mov
cmp
push
insl
mov
lds
add
pop
pop
jnp
mov
clc
jo
loop
push
sub
xor
jle
stos
inc
dec
xor
jns
sbb
out
push
movsl
clc
sub
push
xchg
imul
std
xchg
ljmp
aad
cmc
push
xchg
push
aaa
push
sub
mov
add
call
int3
stos
test
sub
xor
sub
mov
sti
rorb
fwait
idiv
test
mov
out
imul
sti
sub
pop
and
mov
add
in
aas
outsl
les
dec
jecxz
fnstsw
sub
das
jb
std
neg
cmp
inc
aam
scas
insb
dec
mov
enter
cmpsl
rcl
call
lods
ss
test
xor
aas
js
nop
cmp
daa
daa
mov
xorb
push
data16
cmc
xchg
in
imull
cmp
xlat
and
cmp
jne
mov
and
int
into
sbb
inc
pop
jns
mov
fistpll
cmpsb
push
dec
adc
fists
cmp
bound
out
xchg
leavew
sbb
shll
push
in
insl
out
jmp
xchg
push
in
aad
out
xchg
addr16
outsb
sbb
decb
xlat
xchg
push
mov
xchg
sub
push
std
dec
and
rcll
in
aas
fbld
ljmp
sub
inc
push
jbe
arpl
push
jge
fwait
jae
lret
cmpsl
aad
push
into
fldcw
xlat
aas
cmp
and
cmc
imul
call
shrl
aam
flds
cmp
sub
add
fildll
sub
les
stos
jge
mov
imul
cwtl
pop
filds
stos
ficoms
sub
shlb
sbb
aas
out
xchg
jge
pop
std
mov
daa
lock
sub
movsb
cmp
fldenv
jmp
cmp
out
and
scas
pop
jge
adcl
inc
mov
mov
xchg
imul
jg
mov
lret
mov
cld
mov
mov
sub
fimull
mov
pop
leave
aaa
push
daa
xchg
mov
pop
mov
cwtl
rclb
cmp
jp
and
lods
pop
divl
sub
mov
aad
jno
sbb
mov
int3
xor
jge
jae
es
movsl
jne
gs
push
in
test
pop
ss
ret
and
inc
jne
xor
insl
xchg
mull
sub
mov
test
in
loope
xorb
pop
sbb
lret
xchg
jae
sahf
xchg
es
sub
addr16
aas
pop
sbb
or
test
pop
cmpl
dec
cmp
lret
ficompl
sbb
mov
test
cmpsb
adc
or
fcoms
push
sub
xchg
xor
cwtl
shll
mov
fisubl
jbe
inc
dec
add
mov
pop
shll
in
inc
std
mov
fstl
jbe
mov
jae
xor
leave
es
mov
xor
and
sub
and
scas
push
aaa
pop
cmp
clc
imul
loopne
dec
sub
lea
and
cmc
int3
aaa
cmp
pushf
mov
add
mov
push
xor
cmp
fwait
push
mov
out
pop
xor
sub
aam
cs
movsl
imul
mov
push
cmp
xor
fdivs
pop
xor
xchg
push
cmp
cmp
sbb
incb
mov
mov
xchg
push
bound
call
jle
outsb
fnsave
aas
movsb
stos
jbe
mov
push
mov
push
cs
jp
cmc
movsb
adc
adc
inc
dec
cmc
push
dec
int3
lods
push
or
imul
xlat
inc
xor
sbb
pop
aad
sub
push
xchg
les
pop
test
insb
rolb
movsl
loop
adc
dec
xchg
cmp
roll
cmp
jg
cmpsb
pop
push
pop
ja
lret
add
cmp
mov
xlat
dec
adc
mov
in
jne
in
mov
and
adc
aad
std
aas
xchg
cwtl
mov
movsl
jns
sub
and
inc
movsl
cli
push
shll
test
fbstp
and
iret
ds
xor
fldenv
add
mov
xchg
fs
mov
rol
mov
std
mov
pop
lret
sbb
cmp
mov
dec
stc
std
scas
cmp
das
xchg
mov
into
jecxz
xchg
shrb
mov
movsl
jl
cmpsb
imul
sub
stc
mov
sub
fs
imull
call
inc
dec
push
ss
push
pop
xchg
pop
mov
push
cli
gs
or
mov
and
push
sahf
lret
sub
mov
adc
stos
pop
push
sub
sub
sub
ja
in
pusha
pop
sub
in
cld
inc
ljmp
cmp
loope
jmpw
xor
stos
fldenv
push
je
iret
not
test
and
jbe
mov
push
add
push
push
xor
stos
sub
add
push
push
cmc
sub
mov
xor
outsb
xlat
iret
scas
rcrl
in
mov
pop
stos
mov
fldt
mov
cmc
push
dec
aaa
and
mov
dec
adc
jle
xchg
repz
jl
jecxz
sbb
and
mov
add
xor
jo
mull
mov
js
test
aad
sarw
mov
cmp
ss
push
fldt
lea
and
xor
xchg
add
popa
insl
test
sub
sub
movsb
cmp
xorl
adc
cli
jne
clc
lds
das
xchg
clc
inc
push
mov
repnz
cld
frstor
mov
jmp
mov
ret
mull
pop
gs
push
xor
cmp
push
aad
fnstenv
fstpl
jg
mov
adc
fisubl
push
loope
or
popa
aam
stos
aam
iret
daa
cli
mov
xchg
jmp
push
mov
sub
lret
push
sbb
fwait
sahf
xchg
test
and
dec
into
xchg
lock
mov
xchg
fdivr
push
lcall
xor
test
or
lds
fcoms
dec
cmp
push
ret
enter
push
cmp
aad
mov
sub
mov
pop
mov
push
int
mov
popf
imul
insb
mov
incb
mov
pop
and
das
push
repnz
jl
mov
push
add
in
mov
mov
jmp
fdivrl
dec
and
mov
sbb
jns
pop
stos
xchg
sbb
xor
aad
in
add
or
add
push
mov
sbb
ss
imul
mov
cmp
es
les
xor
add
mov
call
push
mov
push
mov
lret
lahf
xchg
rorl
stos
insb
fdivrs
arpl
xchg
cs
jns
mov
sub
fdivrs
sub
xchg
add
fwait
pop
mov
dec
aad
les
push
scas
inc
scas
xor
pop
mov
cmpsl
and
mov
aas
xchg
gs
xor
in
lcall
pop
aad
cmp
loope
fadds
xchg
and
mov
or
fisttps
xchg
addb
push
aad
mov
jp
iret
xchg
push
mov
shll
imul
rcll
mov
imul
inc
mov
ret
loope
xor
les
xor
rorb
jbe
mov
addr16
jmp
or
push
insl
jp
imul
xor
insb
pop
xchg
xchg
in
xchg
jne
sub
xchg
cmp
in
insb
arpl
test
sbb
jecxz
out
mov
cmp
add
push
xchg
mov
push
adc
jge
std
jmp
pusha
push
out
adc
fcoms
push
mov
mov
and
and
fs
mov
aad
cmpsb
push
sbb
or
mov
es
sbb
pop
push
hlt
lahf
jne
int
jl
in
xchg
loopne
fucomip
xchg
cmpsb
pop
pop
arpl
xlat
cmp
jle
bound
arpl
mov
lret
xor
cmp
cmpsl
jne
sub
mov
fdivl
fs
gs
pop
and
rcll
test
or
cmp
and
cs
cmpsb
in
mov
mov
test
mov
addr16
sub
cld
fisttpll
mov
xchg
shl
push
jb
orl
ja
and
xlat
adc
aad
inc
inc
pop
lods
xor
cmp
and
popf
mov
mov
lds
outsb
xor
push
data16
dec
rcrl
imul
jl
popa
sbb
dec
and
add
fstpl
mov
and
lds
imul
adc
fcompl
test
rolb
out
jmp
ljmp
xchg
loop
mov
lds
lcall
out
jecxz
fchs
aaa
bound
fldenv
mov
jmp
jmp
add
imul
sbb
aam
gs
sub
xchg
cmc
stc
std
outsl
movb
sub
push
mov
not
cld
or
xchg
or
inc
xchg
jle
out
dec
pop
lds
shl
ret
out
lock
xor
lods
ds
mov
popa
imul
std
fwait
ja
xchg
mov
mov
sub
push
dec
mov
mov
movsl
xor
push
lods
adc
push
cs
fidivrl
jo
pop
in
daa
dec
add
dec
rcll
stos
xlat
pushf
subb
sub
stos
pop
notb
imul
xor
dec
test
aad
movsl
fdivr
out
sbb
add
arpl
push
loopne
fnstsw
dec
test
and
mov
dec
and
mov
dec
xor
dec
in
dec
mov
lds
mov
fs
adc
sub
or
daa
sbb
cmp
xlat
mov
xor
inc
sub
and
pop
add
fsubp
add
lret
cmp
mov
into
out
sub
and
jmp
mov
cwtl
cmp
xchg
test
mov
mov
mov
sub
stos
scas
jmp
xchg
pushf
in
fistl
sub
xchg
imul
jmp
out
std
mov
push
and
movsb
andnps
stc
daa
sub
sub
call
pop
adc
push
add
out
fsubs
daa
enter
out
das
enter
jmp
out
aas
xchg
mov
xor
jo
lods
xor
jg
push
es
idivb
aaa
jp
xor
mulb
dec
xchg
enter
in
aaa
pop
jge
aad
lock
sbb
jg
ds
in
stos
adc
xchg
inc
aaa
mov
test
movsb
out
xchg
lcall
daa
sub
sarb
pop
movsl
xchg
das
imul
push
pop
jge
testl
cwtl
adc
jle
ljmp
andl
outsl
mov
push
push
xchg
mov
lods
out
loop
aam
std
test
cld
lret
mov
mov
mov
mov
push
lret
das
ss
sub
bound
nop
ret
out
ljmp
mov
cmp
scas
out
arpl
stos
xchg
std
fcmovne
in
sub
gs
in
pusha
mov
lret
cmp
in
push
inc
push
push
push
enter
lods
outsl
cmpsl
mov
or
cmp
lret
aad
xor
inc
test
movsb
std
fs
adc
fistps
nop
out
les
icebp
fisubs
inc
outsb
cmc
repz
xchg
movsb
addr16
into
mov
adc
pop
ret
pop
sub
push
and
sti
mov
fwait
les
mov
or
movsl
mov
push
enter
sbb
lret
nop
xchg
aaa
in
cmp
or
cli
pop
cwtl
loopne
mov
rol
ljmp
cmp
cmp
dec
test
out
xchg
inc
dec
outsb
cmpsb
divb
sub
fucomi
mov
scas
es
xor
jmp
push
mov
lcall
inc
cld
stos
bound
sti
sbb
iret
push
or
arpl
and
or
pop
ljmp
mov
sub
mov
mov
pusha
cli
scas
jp
leave
sbb
pop
pop
mov
sbb
fadds
lods
jo
sar
ss
or
mov
mov
push
cltd
jge
enter
clc
and
test
mov
mov
xchg
lret
lret
imul
pop
cmp
cld
xchg
imul
jmp
sub
arpl
icebp
out
mov
pop
addr16
out
mov
mov
add
push
in
nop
int
mov
push
fsubl
lods
mov
jmp
fcoml
mov
ss
mov
aad
lea
and
jmp
stc
test
dec
std
pop
dec
xlat
mov
test
mov
outsb
aam
rcll
js
mov
out
fadd
dec
out
inc
pop
sbbb
sub
fsubl
xchg
mov
inc
mov
cs
cld
sub
fnstsw
arpl
add
int
subl
inc
shrl
daa
lock
sbb
cli
pop
inc
sbb
cmc
push
in
mov
mov
mov
push
jmp
int3
xlat
mov
arpl
into
dec
lds
or
jo
stc
aam
orl
mov
and
sub
add
pusha
push
sub
andl
mov
push
in
fdivr
imul
xor
mov
xor
mov
inc
int3
push
xchg
enter
jle
movsl
sub
push
xchg
sbb
outsl
gs
jl
jl
mov
push
and
pop
lods
addb
mov
test
cld
xchg
mov
pop
dec
movsb
xor
hlt
xchg
mov
repnz
pop
pushf
das
cli
mov
ss
mov
aad
ss
ja
leave
xchg
jo
dec
sub
in
mov
lock
sub
pop
fwait
in
jmp
scas
sbb
pop
scas
mov
mov
mov
or
mul
mov
mov
lock
push
mov
add
pusha
out
int
sub
dec
inc
sbb
insb
dec
outsl
daa
in
es
loope
in
pusha
push
in
and
movsl
mov
sbb
call
mov
xchg
lods
es
daa
in
push
out
enter
dec
and
inc
int3
andl
stc
testb
int3
imulb
adc
xchg
jmp
dec
mov
cmpsb
dec
adc
jle
out
pusha
cwtl
or
cmp
dec
xchg
sub
dec
sub
andb
adc
adc
fildll
movsb
jl
jge
sub
push
sub
imul
adc
push
test
call
pop
gs
cmp
andb
jl
lods
iret
mov
in
stc
and
test
mov
pop
mov
add
pop
incl
and
mov
pop
sub
push
ficompl
ds
imul
into
daa
mov
daa
fcom
sub
fisubrs
test
out
sub
lds
ret
mov
push
jle
pusha
aaa
mov
and
std
inc
adc
xor
cmp
push
fwait
bound
outsb
shlb
pop
pushf
in
ljmp
insb
jle
and
xchg
sub
call
fsub
mov
rolb
xor
test
jo
adc
xchg
fldpi
fisttpll
insb
fisubs
popf
pop
aam
leave
clc
lcall
mov
cmpsb
push
int3
sub
in
test
test
leave
xor
push
lret
out
f2xm1
in
cmpsl
sbb
or
ds
mov
ja
je
lods
inc
xchg
in
cli
cwtl
into
das
adcb
add
push
lds
ds
and
stos
lahf
sti
es
sub
testb
pop
mull
add
or
sbb
test
mov
push
bound
movsb
int3
mov
mov
idiv
in
sub
and
mov
sbbl
mov
and
xrelease
lds
mov
out
sub
cld
test
xor
test
jbe
insb
mov
pop
jns
fidivs
mov
call
sbb
xchg
je
dec
mov
lret
cwtl
mov
fildl
dec
cmp
ret
xor
xchg
cmc
dec
mov
ja
mov
pop
xor
mov
add
outsb
mov
cmp
dec
frstor
adc
test
dec
data16
scas
ja
jp
jge
movsb
fcoms
gs
mov
movsb
negl
jne
xchg
movsl
lcall
inc
das
adcl
test
push
sti
outsl
lret
int3
fstpl
jmp
daa
std
xlat
xchg
jle
push
sub
pop
mov
notl
mov
cmp
je
popa
loope
pop
add
std
push
jecxz
fstl
fsub
das
mov
es
adc
sub
mov
out
jl
lds
test
imul
lds
cmp
sbb
lock
ret
mov
add
mov
and
pop
lock
adc
mov
leave
test
jae
mov
leave
imull
aaa
out
mov
sar
jmp
pop
mov
test
mov
cmc
xchg
je
add
push
push
enter
push
inc
mov
insl
mov
mov
mov
add
shll
mov
dec
pop
gs
pop
loopne
int3
xchg
jmp
jge
xchg
and
push
outsl
push
or
add
xor
dec
mov
mov
fidivl
les
adc
scas
jnp
push
das
cmpsl
nop
or
mov
in
cld
push
fstl
aad
ss
dec
testb
pop
and
insl
push
imul
mov
enter
push
lret
xchg
mov
sbb
sub
lods
aaa
dec
xor
leave
add
and
dec
push
mov
imul
pushf
mov
insl
push
scas
xor
sbb
push
push
repz
jne
movsl
sub
and
in
gs
mov
and
ja
xchg
xchg
adc
loop
loop
push
enter
cmpsb
jle
mov
push
mov
add
and
and
test
push
or
pop
lret
lds
stos
dec
mov
das
xchg
dec
pop
jns
jns
scas
in
bound
in
mov
mov
jno
std
sub
loopne
subb
lahf
inc
jp
xlat
jge
pop
stos
enter
cmpsl
cmp
adc
cmp
in
repz
andl
mov
push
sbbb
jbe
xchg
jno
and
decb
sbb
aad
cmc
xchg
popf
stc
movsl
xor
ss
xchg
jmp
cld
adc
dec
or
fwait
or
mov
push
daa
ljmp
in
cmpsl
pop
xchg
xor
stos
incl
mov
repz
inc
mov
jns
shll
cmp
call
xchg
pop
addl
xlat
and
inc
stos
lret
xchg
daa
leave
fnstenv
and
pop
mov
inc
mov
sub
dec
xchg
testb
outsl
out
imul
mov
mov
fucomp
notl
adc
arpl
push
fnstcw
lret
mov
or
in
cli
sub
inc
aas
es
insl
in
in
das
fdivr
mov
test
rcr
gs
sahf
and
gs
sub
jge
das
and
gs
jge
and
leave
sub
enter
pusha
les
jmp
lret
sub
dec
push
pop
push
leave
mov
push
or
insl
dec
cmp
pop
leave
add
cmp
scas
sbb
cmpsl
sub
push
stos
js
jno
stos
push
inc
sbb
stc
cld
leave
fs
popa
adc
mov
xor
push
mov
pop
ss
cmpsl
jbe
jnp
mov
cmp
mov
jle
xor
add
ja
jp
pop
lods
mov
aaa
out
and
fsubrs
push
cmpsl
push
inc
cld
jecxz
ljmp
jmp
sub
movsl
fsubp
ret
scas
jmp
sbb
mov
mov
movsl
mov
cmp
mov
fwait
insl
out
pusha
fs
jmp
stc
movsb
stc
repnz
ss
jge
hlt
inc
adc
or
std
testb
inc
aaa
xchg
gs
popf
ss
adc
fnsave
or
dec
clc
loope
jmp
lcall
or
ss
adc
leave
xchg
inc
fs
lret
fisubl
or
cmpl
pop
aam
xchg
test
call
push
in
mov
sbb
jo
or
daa
mov
mulb
insl
dec
mov
ror
dec
cmc
cmp
mov
fdivr
testb
popf
gs
out
cld
dec
mov
popf
mov
rcrl
xor
rclb
or
sub
inc
cmp
inc
fadds
lret
pop
mov
jge
mov
push
pushf
daa
call
xor
aas
rcrb
frstor
dec
out
mov
adc
lahf
inc
js
rcl
in
and
mov
cmc
adcl
aaa
adc
mov
daa
xchg
push
dec
sub
push
cmc
ds
sub
dec
fmull
rolb
cmc
cld
and
dec
xor
jle
pop
and
stos
incb
mov
std
dec
out
dec
adc
out
mov
orb
leave
xor
pop
xor
lahf
int
mov
in
flds
mov
xrelease
scas
adc
pop
xchg
lds
in
sbb
push
pop
xchg
divb
sti
in
xor
mov
and
sbb
into
es
ss
adc
outsb
or
shlb
rcll
sub
inc
and
push
dec
mov
jnp
push
das
lret
ja
mov
das
outsb
test
and
adc
fisttpll
test
leave
lret
sarb
mov
inc
cmpl
and
movsl
push
inc
sti
and
sub
dec
shrb
push
jns
lahf
xor
sub
add
mov
jle
rcrl
in
or
rorl
ficomps
imul
cmc
stos
loop
dec
sbb
mov
out
sahf
idivb
aam
test
out
mov
cmp
ja
test
in
jg
lret
inc
and
sbb
std
fldcw
in
lret
ret
pop
sub
sub
jge
xlat
or
xchg
jmp
or
mov
mov
rcrl
lret
les
pop
aam
lods
stos
ds
lret
cli
lds
adc
lea
in
leave
lds
imul
push
push
sbb
and
jl
mov
inc
push
nop
mov
push
cmp
xchg
xchg
mov
or
das
mov
icebp
ss
mov
idiv
jl
fisubrs
mov
cmp
push
inc
sarb
mov
mov
dec
test
jne
lea
das
jno
add
outsb
and
mov
push
imul
mov
mov
es
push
mov
cmpsb
xchg
in
mov
ficompl
xor
xchg
int3
cmp
pop
rcl
imul
movsl
aaa
dec
lods
xchg
adc
inc
js
and
jecxz
xor
in
mov
call
xor
test
lret
add
lods
dec
jmp
xchg
int3
xchg
fnstcw
dec
stc
stos
push
or
inc
xor
jae
mov
mov
insl
cmp
jmp
sub
mov
stos
cmp
inc
sti
js
push
aam
cmp
sbb
dec
mov
in
mov
cmc
xchg
jle
sub
mov
xchg
call
js
aam
mov
sti
xchg
cmp
cmp
cmp
decb
mov
pop
adc
dec
mov
cmpsb
xchg
xlat
shl
ds
jb
pop
sub
xchg
jbe
xchg
pop
test
pop
adc
out
inc
mov
mov
pop
jmp
aam
out
cmc
mov
or
xchg
cld
pop
movq
lahf
dec
icebp
adc
inc
push
pop
push
pop
out
mov
push
sbbl
aaa
push
pop
shr
das
cmp
popa
mov
mov
in
push
or
jl
xchg
sub
push
sub
rcrb
jo
adc
sbb
pop
pop
aaa
ja
add
shlb
sbb
jmp
test
repnz
test
sbb
es
fs
in
test
cmp
push
push
mov
pushf
rcrb
insb
bnd
ret
fs
dec
std
inc
scas
mov
sbb
and
pop
mov
clc
cld
xchg
mov
js
and
lds
dec
aad
hlt
xchg
push
sti
fs
cmc
mov
loope
and
je
add
cmp
xchg
out
int3
jbe
cld
cwtl
fisttpl
mov
cld
xor
jbe
mov
fwait
je
addr16
inc
std
mulb
inc
out
xbegin
or
push
icebp
fsubrs
nop
arpl
xchg
aas
inc
clc
xchg
pop
jo
test
inc
or
movsl
push
xor
jmp
cmp
mov
movsb
mov
in
push
mov
ljmp
call
loope
and
movb
and
lock
mov
push
outsl
sbb
and
xchg
and
in
mov
pop
pop
inc
pop
rclb
popf
int
xor
popf
stc
movsl
jge
mov
or
lea
in
sub
daa
mov
push
cld
xchg
push
fmul
sub
and
push
or
push
rol
data16
or
add
aad
xor
or
lds
stc
xor
scas
adc
jb
fs
movsb
out
xchg
je
mov
xchg
rolb
jl
xor
jbe
push
fnsave
jae
mov
push
out
push
outsl
and
cmc
jle
pop
dec
aad
loopne
and
jg
sub
test
mov
scas
push
loopne
or
movsb
xor
and
xchg
lock
dec
loopne
pop
mov
xchg
add
mov
out
pop
push
popf
pushf
or
pop
adc
sbb
arpl
or
rcrl
mov
adc
push
pop
ss
insb
jno
test
ds
movb
mov
in
mov
lea
lcall
and
stos
int
test
mov
bound
ss
jmp
inc
stos
xchg
fnstsw
test
or
mov
fadd
movsl
leave
mov
add
test
or
mov
mov
dec
dec
ds
push
jbe
lods
lea
sub
pop
pop
and
stc
mov
push
in
fmul
pop
and
ljmp
ss
stc
lcall
bound
jo
or
push
xor
lret
jmp
in
lret
movsb
daa
aas
sub
sub
ja
out
inc
inc
sub
xchg
push
xor
mov
inc
int
jae
scas
mov
sub
mov
sarl
cmc
mov
jg
xor
add
jbe
sub
lods
loopne
lods
ss
imul
fisttps
daa
daa
insb
in
or
push
sahf
idivb
add
gs
cmpsl
aas
jmp
out
pop
jmp
icebp
xchg
aaa
xchg
cwtl
jmp
les
imul
rcr
mov
sub
jb
addr16
xlat
jns
pop
popw
adc
mov
andl
xchg
jecxz
stc
fs
je
cmp
jne
and
cs
dec
movsl
insb
imul
movsb
pop
xor
add
stc
mov
or
hlt
ficoml
popa
pushf
pop
in
out
das
stc
out
cs
push
mov
push
pop
outsl
adc
mov
or
movsl
mov
andl
ds
sahf
or
mov
push
mov
push
mov
icebp
pop
pop
pop
es
cmc
jge
scas
jl
repnz
je
jle
mov
stos
cmp
out
mov
sub
dec
movsl
faddp
imul
in
movsb
daa
adc
mov
sub
push
push
cmp
xchg
call
push
loope
lret
jmp
mov
js
push
aad
push
out
pop
push
ret
pop
or
mov
out
shl
insl
cmc
roll
in
dec
lcall
imul
or
mov
xchg
inc
xchg
mov
xchg
sub
fcompl
xor
mov
mov
jbe
pop
mov
or
xchg
xor
add
sbb
mov
xchg
pop
ret
cld
xchg
push
lock
inc
push
jns
push
or
push
mov
pop
out
lods
lea
shll
icebp
jp
add
inc
add
pop
pop
repnz
clc
jmp
sub
stos
scas
sbb
lcall
imul
lods
mov
aaa
and
sub
cmp
shll
dec
ljmp
into
addb
mov
adcb
sar
push
ror
sahf
jb
loop
pop
out
push
popa
pop
push
rol
xor
lods
negb
js
dec
ja
daa
xchg
dec
mov
xchg
sub
fscale
daa
stos
push
ljmp
sbb
mov
in
sti
stos
mov
cmp
out
or
out
std
stos
test
push
call
cmp
mov
jp
push
test
repz
sbb
gs
lret
int
subl
push
mov
xlat
out
pop
lods
jge
inc
mov
dec
jp
lret
inc
xor
jp
stc
pop
sub
cmp
xor
jne
iret
rorl
lea
andb
std
pop
in
ja
mov
cmp
das
ljmp
jo
dec
lcall
pop
sub
nop
shrb
inc
addr16
pushf
dec
jl
add
mov
loopne
les
and
mov
lods
in
add
mov
in
gs
xor
daa
sub
dec
xlat
or
out
outsb
imul
or
in
popa
fnsave
pop
lret
int3
and
loopne
int3
repnz
jae
mov
push
int3
arpl
mov
int
stos
fstl
mov
xor
mov
imul
pop
stos
inc
inc
aas
fidivrs
stos
push
enter
adc
xchg
aad
ljmp
stc
jl
rorl
xchg
test
sahf
xor
mov
sbb
loope
int
push
dec
out
cmp
push
flds
mov
xchg
mov
dec
shlb
xchg
pushf
xor
enter
sbb
xor
mov
mov
imul
mov
sub
fldl
aad
cmpsb
pop
xchg
int3
lcall
in
jae
inc
dec
or
leave
push
pushf
insb
mov
dec
xchg
cli
sti
push
sub
jns
push
cmp
scas
mov
dec
mulb
in
jne
or
push
int
push
push
stos
insb
fists
sub
inc
mov
in
leave
push
sub
adc
push
int
je
mov
mov
mov
fs
fs
push
or
mov
int3
inc
push
ljmp
or
imul
mov
dec
mov
lahf
lcall
cmpsb
loope
adc
lret
iret
cmc
mov
in
cmp
stos
ljmp
test
mov
jmp
in
mov
clc
dec
insl
scas
in
lock
aaa
das
cmc
push
lea
inc
xlat
js
jge
cmc
mov
sbb
ret
pop
js
sub
lret
cs
ficoml
leave
lret
mov
push
mov
xchg
cmp
dec
ret
pop
in
or
lcall
ret
shll
aam
int3
scas
mov
sub
mov
out
fsubr
xchg
jl
sbb
out
inc
call
xlat
lcall
jecxz
cmp
sub
cli
push
xchg
cmp
in
movsl
mov
repnz
push
clc
ss
mov
cld
pop
xor
shrb
out
sub
aas
pop
ret
and
inc
push
jno
mov
add
cmp
out
test
push
xor
lods
and
in
push
in
enter
and
pop
cmp
movsl
scas
push
aad
test
adc
je
inc
pop
loope
mov
sub
cwtl
or
adc
cmpsb
and
mov
mov
stos
lcall
xchg
xor
in
lret
test
test
and
test
aaa
inc
lods
and
inc
scas
xchg
xchg
icebp
iret
loope
xor
jl
xor
inc
cld
xor
dec
loope
in
mov
xchg
fstl
pop
fs
sub
cmpb
add
or
ljmp
inc
icebp
and
jnp
cwtl
dec
and
or
sub
ds
push
mov
inc
inc
and
pop
push
inc
push
test
pop
mov
mov
ja
movsl
xchg
and
xlat
in
push
lahf
sub
icebp
movsl
add
lods
data16
pop
aaa
mov
xlat
aas
mov
mov
das
push
test
cld
lds
fdivrp
outsl
scas
jne
sub
js
jl
mov
out
js
jae
fmull
cmp
leave
adc
jge
or
fwait
mov
sbb
sub
in
cmpsl
sbb
cmp
fists
stos
cmp
cmpsl
or
xor
push
push
aas
cli
das
mov
out
leave
pop
or
sbb
ja
and
push
daa
into
pop
fildll
mov
lret
fstl
dec
xor
push
in
leave
pop
movsb
mov
mov
mov
mov
inc
xchg
xchg
sub
in
mov
test
aaa
bound
xchg
cmpb
lcall
mov
mov
xchg
pop
inc
out
xchg
jecxz
mov
test
cld
filds
xchg
in
repz
addr16
jbe
mov
jp
call
pop
and
push
push
dec
xor
int
imull
and
cmp
into
jmp
sub
push
in
test
mov
iret
push
push
xchg
pop
scas
jge
stc
pop
scas
xor
mulb
call
xor
jbe
in
lcall
test
int3
stos
xor
imull
movsb
jle
les
ret
push
mov
inc
and
lods
fucomip
pop
fwait
pop
sahf
xor
sub
lock
or
lcall
cmpb
xlat
or
and
mov
insl
sub
fs
and
xchg
or
fstps
mov
dec
enter
sbb
add
outsl
cmp
or
scas
les
sbb
mov
data16
mov
mov
inc
fidivrl
cs
in
test
push
fnsave
sub
inc
pop
push
or
add
and
shll
mov
mov
pop
sub
pop
loopne
push
mov
jmp
mov
imul
xchg
mov
mov
add
in
sub
jnp
dec
loope
in
adc
int
mov
cmp
mov
sub
pop
in
jl
pop
mov
and
je
mov
push
popw
leave
lds
scas
ds
shl
insb
ret
divl
js
adc
mov
cs
lods
cmp
mov
in
aad
js
xchg
std
in
push
ja
jge
int
jbe
leave
sbb
js
xchg
test
add
mov
push
lret
call
pop
insb
mov
popf
mov
mov
shll
jg
mov
inc
mov
push
mov
or
jle
dec
in
std
sub
sub
aad
push
sub
jmp
push
ds
mov
xchg
enter
pop
sub
adc
mov
pop
xchg
fstl
sbb
lock
inc
std
aam
push
push
ret
push
sub
cmp
mov
push
bound
in
xchg
mov
pop
sbb
outsb
push
cli
movsl
idivb
int3
jne
xor
sbb
mov
out
mov
inc
aad
data16
pop
inc
xor
shll
leave
jne
xchg
aaa
push
cmpsb
inc
ffree
push
mov
inc
cmc
enter
mov
xchg
inc
movsl
insl
rcrl
shll
push
iret
shrb
out
add
inc
xor
mov
sbb
xor
add
shr
mov
jecxz
popf
nop
or
xor
insb
xchg
or
xchg
adc
fsubrl
adc
jg
scas
das
cltd
push
push
push
add
inc
sub
sahf
mov
adc
jmp
jge
adc
aad
sub
out
test
daa
fists
sub
gs
push
push
mov
add
insb
ret
cmp
cmp
fidivl
mov
adc
pop
inc
mov
sub
fisttpll
add
shlb
in
in
cmpsb
sti
xchg
and
pushl
movsl
mov
cld
lds
leave
pop
pop
cmpl
in
push
mov
inc
xor
mov
out
mov
push
dec
pop
dec
jbe
dec
test
test
inc
dec
sub
xor
mov
xchg
push
or
stos
xlat
shlb
movb
pop
bswap
xor
mov
sub
push
call
push
adc
push
xchg
push
icebp
cld
mov
adc
jp
inc
test
push
int3
xor
ret
inc
loope
lret
push
frstor
int
sub
push
xor
out
jle
mov
aam
mov
dec
test
stc
push
sub
jp
lods
addl
and
mov
mov
cwtl
mov
out
and
jmp
dec
mov
mov
mov
je
int
mov
mov
jne
test
sub
lret
in
xchg
inc
roll
and
xor
in
cltd
test
mull
mov
jb
out
xor
es
mov
lcall
and
xor
mov
sbb
xor
push
push
jbe
mov
movsl
mov
data16
cmc
mov
mov
and
push
jmp
lds
aaa
push
lcall
inc
push
inc
shrb
aad
pop
xor
aad
sub
ficoms
cld
test
js
jnp
mov
imul
sub
sti
lods
arpl
pop
aad
stc
mull
stos
data16
inc
cmp
pop
ror
cmp
aaa
in
mov
movsb
gs
lret
xor
jns
in
mov
test
pop
cmpsl
lods
mov
mov
aad
push
adc
mov
lds
and
xchg
push
jmp
xor
or
in
testb
dec
ret
cmp
aaa
mov
stos
add
mov
mov
mov
aad
lods
in
mov
mov
arpl
inc
and
jbe
mov
jnp
and
and
mov
push
cmp
sbb
mov
std
mov
dec
inc
roll
jge
sub
add
sbb
cmp
cmp
rol
mov
test
pop
jecxz
xor
sbb
xchg
ret
lods
fstps
cltd
and
stc
push
fisttps
call
cmpsl
sbb
notb
push
enter
sahf
and
xchg
mov
dec
mov
imul
and
daa
lods
jns
mov
jno
into
jne
adc
dec
popf
outsl
push
add
mov
or
dec
and
adc
lcall
dec
jo
fwait
cmpsb
in
das
ds
in
jns
cmp
int
inc
add
fs
xchg
int3
cmp
mov
xchg
inc
cmp
push
pop
xchg
xor
rcr
test
es
cmpsb
rolb
adc
cmp
dec
mov
xlat
int
inc
fstpl
xchg
dec
and
in
movsl
and
push
loope
xor
xchg
in
jmp
cmpsl
mov
xor
cmp
xor
push
in
and
jb
aad
xchg
movsl
jno
xor
shrb
imull
test
mov
mov
mov
mov
push
mov
jmp
inc
mov
in
into
ss
push
clc
mov
jne
cld
aad
sub
mov
add
adc
jno
testl
test
mov
lea
mov
stc
imul
xor
xchg
push
add
hlt
es
and
pop
xlat
or
mov
call
xor
mov
sub
push
cs
cmpsl
cld
mov
scas
shlb
in
mov
xchg
lret
adc
mov
int3
sub
fldenv
in
push
out
popf
xor
shl
insb
push
in
mov
js
inc
flds
daa
inc
mov
xchg
ss
mov
jmp
and
arpl
cld
push
fcmove
sbbl
in
cmp
fwait
xchg
fiadds
mov
add
mov
sub
js
hlt
daa
push
dec
subl
push
icebp
rep
adc
push
rolb
addr16
xlat
adc
add
xor
sub
dec
adc
mov
and
test
inc
lods
xchg
test
je
cld
daa
test
jb
cmp
pop
jo
int
pop
pop
jp
fimull
adc
jns
cmp
mov
lock
stc
jg
mov
lcall
pop
adcb
stos
subb
in
mov
movsl
mov
push
mov
sbb
stos
or
inc
aad
pop
rcll
stos
es
mov
call
xchg
pop
add
loop
jne
adc
movsl
sbb
mov
add
es
insl
adc
push
jmp
pop
out
ret
cmp
push
fs
stc
push
pop
bound
jecxz
in
mov
in
inc
pop
cltd
xchg
pop
rcrb
or
ror
jge
lods
dec
jecxz
in
xchg
mov
mov
sarb
popa
and
iret
cwtl
cmp
sub
cmpsl
ds
idivl
lcall
sub
push
mov
xor
mov
lds
in
ss
and
or
subl
mov
test
jno
out
mov
jns
sub
gs
cmpsb
and
ja
sbb
shlb
jne
xlat
mov
sbb
push
jnp
sbb
jmp
xchg
mov
in
jno
push
mov
mov
xchg
xor
xor
jno
mov
sub
inc
and
filds
dec
ss
xchg
sar
in
push
dec
xchg
xor
imul
fsubrs
sbb
cmc
pop
sub
int3
push
gs
ss
cmc
push
vmovq
cmpsb
xchg
test
gs
pushf
cmp
sub
push
xor
push
in
gs
enter
inc
fucomp
pop
cld
popl
push
stos
aas
cltd
bswap
push
fs
test
or
xchg
and
lea
ret
or
adc
add
insb
lea
push
test
mov
in
movsl
loop
inc
test
loope
pushf
inc
scas
mov
and
loope
xchg
je
out
fs
and
jmp
mov
mov
add
and
out
cmp
mov
dec
lret
inc
lret
lds
jle
sub
stc
and
jno
mov
in
push
jnp
push
mov
ds
les
xchg
sar
push
mov
in
lret
sub
jbe
fdivs
or
pop
mov
dec
xor
cld
aad
dec
push
push
scas
outsl
and
pop
jne
adcl
pop
xor
dec
imulb
jmp
mov
stos
rorl
xchg
movsl
mov
in
out
cmpsb
sub
fists
aaa
in
mov
dec
push
mov
add
sahf
inc
fbld
mov
jb
movsl
xor
pop
cmp
fs
xchg
or
out
in
push
inc
pop
lea
cmpsl
push
sub
xor
int3
and
cmp
fs
dec
jne
cmp
push
cmpsl
ljmp
les
mov
sahf
mov
mov
and
mov
jl
cmp
xor
xchg
adc
inc
testl
or
or
sbb
jg
cmp
nop
cmp
cmp
mov
lcall
mov
add
mov
movsl
das
imul
test
popf
sub
adc
mov
push
xchg
xchg
test
mov
stos
pusha
fsubr
mov
xchg
or
imul
sub
cmp
xor
imulb
and
fucomp
jle
or
and
scas
and
push
adc
dec
mov
into
mov
jl
xor
sub
jp
sahf
xor
cmp
ss
aad
jmp
and
xchg
lret
xlat
lea
sbb
fnstcw
adc
cmpsl
and
push
or
xlat
jns
mov
test
repnz
je
sbb
mov
and
mov
xchg
pop
cmp
pop
rcll
jmp
imul
sbb
jmp
push
cmp
and
cs
lret
and
jae
ja
jo
inc
enter
imul
or
cli
cmp
stos
mov
shll
pop
rorb
outsl
jle
or
jge
xor
out
add
push
mov
inc
push
movsl
in
mov
mov
pop
stos
add
mov
push
movsl
addr16
cmpsl
js
into
or
mov
xchg
dec
shll
cli
ss
xor
xchg
es
jo
in
test
fstpt
push
mov
jae
mov
push
icebp
mov
cmc
push
sub
push
or
or
inc
pop
mov
mov
dec
movhps
pop
inc
add
das
mov
and
xchg
jge
cmpsl
mov
xchg
mov
add
dec
into
addr16
int
mov
dec
sbb
push
lds
fstl
in
std
add
lcall
push
jge
jle
std
pop
xor
pop
loop
test
xor
in
out
gs
dec
pop
xchg
arpl
mov
push
dec
mov
insb
mov
mov
mov
imul
addr16
lcall
mov
jmp
inc
les
test
stc
negb
jne
imul
sub
lcall
aas
pop
movsl
jle
lods
add
pop
cmp
lcall
mov
push
ds
push
in
mov
scas
push
pop
das
cmc
jge
sub
lds
push
cmpsb
pushf
push
mov
jb
fs
add
mov
ljmp
stos
cmp
int3
shll
pop
push
push
test
es
pop
test
jno
ss
movsb
aas
adc
cltd
sub
jne
fstpl
data16
pop
pushf
stos
sbb
or
mov
lret
and
mov
in
gs
add
daa
mov
cld
out
clc
add
mov
mov
shrl
push
repnz
cltd
stos
cli
pop
ja
sbb
daa
push
or
movsb
mov
xchg
mov
sub
push
dec
mov
sub
cmp
inc
ja
test
and
sub
mov
es
push
ja,pn
or
sub
data16
push
loope
mov
mov
insb
pop
sbb
leave
jmp
adc
sub
xor
mov
mov
jle
mov
add
test
pop
rcl
sub
mov
int3
xchg
cmp
enter
xchg
mov
jmp
movsl
cwtl
xchg
movsb
mov
dec
into
enter
cmp
fcomp
sub
jge
push
push
shll
ret
fistps
push
sbb
loopne
sub
adc
out
cld
adc
shlb
idivl
mov
ficompl
ss
sbb
inc
and
and
outsb
lds
dec
mov
stos
xchg
cwtl
dec
or
sbb
dec
sub
jmp
pushf
cltd
mulb
bound
mov
and
jno
mov
int
int3
mov
xchg
divps
sti
sbb
mov
push
xchg
sub
ds
mov
in
cmp
movsb
xor
mov
nop
adc
shrb
data16
inc
cmpsb
xor
cmp
repnz
in
fnstenv
add
xor
mov
xor
mov
enter
inc
data16
rclb
dec
pop
xchg
push
ss
mov
lret
stos
xor
mov
outsb
pop
and
stos
test
lea
js
and
xlat
loope
mov
pop
fs
sbb
je
lock
jecxz
push
lcall
mov
xchg
addr16
ja
pushf
lret
push
aam
ffree
fcmovu
mov
mov
pop
dec
fsubs
cld
dec
mov
sbb
xlat
fstpl
ret
mov
js
div
xchg
cmp
xor
stos
in
outsb
shlb
inc
sbb
push
pop
and
xchg
daa
push
push
es
cmp
jl
sub
imul
mov
ljmp
jl
dec
imul
mov
in
rol
xchg
lret
scas
test
stos
in
push
adcl
nop
mov
mov
jne
pushw
test
add
xor
addr16
shll
ja
xor
mov
mov
gs
call
add
xor
xor
ss
je
mov
mov
mov
ret
lea
push
lcall
or
push
stos
xchg
and
inc
add
cmpsb
dec
push
mov
or
aam
sbbb
imul
ret
jl
daa
mov
notl
fsubl
es
xlat
addr16
lods
lods
inc
and
aaa
popa
aaa
adc
mov
jne
pop
daa
dec
and
xchg
jge
loop
pop
test
stos
stc
jp
insl
scas
ds
dec
in
fldt
jmp
sub
jge
sub
lret
dec
xchg
sub
dec
jno
mov
fldl
insl
out
int
pop
push
popa
imul
iret
pop
push
fstl
xchg
test
cmp
stos
ficomps
int
clc
pop
fdivl
lahf
stos
lret
out
adc
mov
mov
daa
sarl
sahf
mov
pop
lds
fstpl
loop
in
pop
lret
push
rcrl
aaa
fucom
cmp
fidivrl
addr16
pop
lcall
push
sahf
mov
aam
shll
adc
jb
sbb
xor
mov
les
sub
scas
shll
loopne
and
lahf
lods
add
and
imul
mov
aaa
fucomp
or
xchg
mov
fdivrl
scas
es
and
orl
in
fldenv
jns
shlb
es
aaa
dec
out
sub
or
or
mov
xchg
mov
and
pop
and
dec
mov
shrl
ja
mov
repz
jno
jmp
lret
jne
mov
jns
notb
lods
xor
out
mov
mov
lret
in
sbb
or
xchg
jmp
arpl
mov
lods
mov
pusha
jl
orl
jge
and
inc
movsb
mov
aad
xchg
lcall
fisubs
pop
or
push
mov
repz
push
jp
fiadds
cmpsb
jb
pop
sbb
hlt
test
stc
fldt
out
dec
cs
cld
lods
pop
push
divb
stos
lcall
idivb
movsl
int3
xchg
push
repnz
sbb
or
xlat
nop
scas
into
lahf
cmp
xchg
insb
data16
adc
xchg
int3
jae
inc
ljmp
mov
imulb
iret
pop
pop
fwait
lds
in
ds
and
lret
idiv
adc
xlat
pop
test
pop
and
or
and
and
fadds
xor
or
cmpsb
pop
cmp
xor
nop
or
addb
jno
cmp
mov
add
je
fs
mov
sbb
mov
mov
outsl
stc
scas
xor
xchg
xlat
sbb
fistl
mov
pop
push
fs
push
lea
push
pop
push
mov
lock
stos
push
add
add
out
ret
mov
aaa
in
add
mov
sbb
mov
push
jae
xchg
call
mov
negl
aaa
mov
dec
aas
pop
xor
jnp
lods
mov
add
out
cmpsb
dec
adc
lcall
ss
ret
jecxz
pop
xchg
pop
mov
mov
in
pop
adc
push
mov
add
call
aaa
fstsw
lea
aas
es
xchg
cmp
out
push
lcall
xor
cmp
lret
fdivl
lods
int
cmp
add
jg
sbb
pop
cmp
cli
das
scas
incb
mov
inc
sub
push
cmpsb
mov
ret
andl
mov
mov
lds
push
cltd
fsubs
ljmp
mov
mov
xchg
aam
sub
pop
stc
jmp
int3
jne
jbe
pushf
xchg
xlat
push
sub
inc
fadds
imul
leave
push
xchg
inc
je
neg
jne
inc
or
dec
mov
xchg
psadbw
mov
push
cmp
sub
xor
mov
cmp
mov
gs
push
lcall
xchg
add
or
sbb
push
arpl
enter
ffree
adc
mov
fidivs
xchg
ljmp
inc
sub
int3
inc
dec
xchg
xor
in
enter
xchg
jne
jmp
pop
sbb
mov
out
movsl
mov
xor
fcompl
shlb
and
dec
sbb
loop
push
ja
and
lret
stos
mov
pop
pop
xchg
adc
jmp
test
sub
xchg
push
ss
mov
test
enter
ds
arpl
aaa
in
movsb
ja
aaa
mov
cwtl
jne
and
movsb
jnp
xchg
div
mov
jmp
pop
clc
jl
pop
xlat
iret
mov
ss
jnp
ljmp
xchg
and
mov
gs
cmp
cs
xchg
mov
shlb
out
lods
mov
inc
daa
in
push
and
cs
inc
xchg
movsl
sub
lds
mov
out
test
sti
shlb
aas
xlat
cmpsl
outsl
addl
jbe
pop
xchg
dec
pop
loopne
add
pusha
adc
into
mov
out
add
ds
aaa
loope
popa
loop
xchg
out
imul
es
jp
stc
ret
jp
stc
push
ret
jp
stc
aad
sbb
xlat
test
ds
movsl
xchg
xlat
push
ljmp
insl
xor
lcall
fwait
cmp
nop
dec
push
frstor
or
inc
stos
ja
aad
leave
loope
lods
imul
dec
mov
imul
ret
push
mov
shl
lods
insl
inc
pop
cmp
pushf
popa
std
cltd
std
mov
test
mulb
stos
leave
int3
int
mov
out
jbe
lods
inc
xchg
pop
lea
or
pop
cmp
addr16
mov
in
add
stos
inc
pop
rolb
fadds
aaa
aad
lret
mov
icebp
mov
xchg
adc
pop
shrl
sbb
sbb
xchg
lods
mov
stos
test
push
and
add
imul
movsb
popf
lea
lods
lahf
xchg
jmp
dec
mov
inc
adc
mov
pop
xchg
push
in
sub
test
popf
ds
les
mov
sub
std
iret
jmp
mov
or
idiv
fs
and
mov
inc
call
pop
vshufps
mov
push
xchg
test
sbb
hlt
in
test
mov
sub
divl
popa
loope
push
loopne
mov
nop
lods
in
xor
lock
or
loopne
in
mov
adc
sub
rcl
pop
mov
xchg
fistpl
cld
push
push
and
mov
mov
sbb
fisttpll
xchg
subb
fstps
xchg
inc
and
push
dec
outsb
imul
aaa
es
fucompp
xchg
pop
gs
stos
cmp
push
es
sahf
add
es
mov
inc
cmp
fsub
out
hlt
les
iret
mov
dec
in
test
jns
xchg
sbb
xchg
pushf
pop
xor
adc
jne
sub
aad
lret
pop
movsl
mov
jge
sbb
cmpsb
insb
cmp
push
hlt
pop
cmc
lods
xchg
mov
std
pop
nop
iret
pop
dec
sub
rcll
or
loopne
and
xor
imul
int3
pop
xchg
into
add
sub
in
inc
movsb
mov
cmpsb
inc
pop
mov
cmp
cmp
mov
lret
rcl
mov
repz
adc
xchg
rorb
push
fbld
aaa
fmull
scas
enter
jp
mov
push
xlat
and
fisubrs
movaps
jns
mov
push
cmc
aad
fidivl
or
ss
push
aaa
push
push
repnz
movsb
in
iret
addr16
pusha
popa
lock
jns
push
xor
jmp
sahf
jmp
mov
loope
mov
stos
sub
out
clc
dec
loop
mov
xor
das
mov
in
inc
in
push
insb
popa
cmp
pop
rcl
test
nop
jmp
orb
push
pusha
mov
test
sti
cmc
and
inc
push
adc
pop
push
pop
frstor
inc
daa
sbb
mov
jle
jp
sub
inc
dec
sarl
push
mov
test
dec
scas
xchg
mov
push
xor
add
sub
aad
loop
jp
lods
call
mov
ret
xchg
xchg
aaa
aas
inc
mov
pop
cmpsl
add
out
sub
ljmp
dec
push
cs
xchg
sub
mov
gs
xchg
xor
fidivl
lcall
lret
cld
jns
mov
dec
fidivs
rorb
addr16
dec
lods
mov
das
cmp
mov
test
mov
mov
inc
fimull
loope
lods
xlat
aaa
stos
or
dec
cli
outsl
loope
loop
or
sarb
ss
mov
out
jge
test
cltd
les
testl
cmpsb
pusha
mov
in
leave
cltd
adc
push
loop
xor
aas
cmp
and
jecxz
pop
mov
mov
sbb
sub
xor
and
jle
pop
test
cmp
mov
push
in
mov
es
fcmovu
les
js
sbb
pushf
xchg
mov
outsl
jl
mov
xchg
dec
jg
call
nop
lods
mov
mov
fld
outsl
sbb
sub
fnsave
xchg
loop
add
movsl
xchg
mov
push
add
jge
or
sub
popw
push
sbb
xchg
stos
xchg
inc
sahf
sbb
repnz
inc
pusha
sbb
loop
xchg
inc
pop
dec
and
inc
pop
mov
out
mov
lods
jne
sbb
inc
jmp
int
pusha
hlt
scas
dec
in
jl
cld
push
lods
outsl
jmp
movsl
and
shrb
inc
ja
jae
lret
cmp
mov
int
jmp
pop
ss
and
inc
idiv
in
imul
mov
fmul
jge,pn
jmp
aad
jp
sub
ret
out
push
inc
push
ljmp
jl
xchg
inc
mov
movsl
daa
aad
xor
jl
sahf
rcr
ds
and
pop
xor
jecxz
aas
leave
pop
push
cmp
push
movsl
frstor
pop
and
push
lock
rorl
test
jae
fwait
push
icebp
add
mov
xor
mov
mov
lcall
lret
lea
mov
sub
shlb
fcomp
jge
cmp
mov
fs
sbb
push
mov
dec
frstor
sbb
pop
pop
or
leave
push
mov
fsubl
push
jge
xor
push
jmp
cmp
test
outsb
mov
cmc
push
mov
scas
ficompl
push
dec
mov
cli
xlat
gs
xchg
stos
sub
jecxz
cmp
cs
pop
sbb
xor
xor
mov
pop
add
out
mov
mov
inc
in
imul
and
loopne
push
add
push
rolb
xchg
out
daa
in
and
dec
sub
push
mov
mov
and
cwtl
and
cmp
mov
and
push
mov
xchg
lds
push
jl
js
shlb
movsb
cmp
pop
xor
inc
jp
mov
jp
gs
negl
ss
sub
out
jns
add
push
mov
sub
cs
lcall
push
fimull
xchg
jmp
cmpsl
mov
inc
imull
daa
inc
lea
in
mov
rcll
jmp
adc
adc
aam
aas
pop
mov
aas
pop
gs
mov
loopne
stos
push
test
add
push
add
cmp
adcb
fcoms
movsl
mov
xchg
add
data16
out
lods
inc
fsubrs
flds
push
sbb
test
add
pusha
lahf
lods
stos
xor
jge
push
xor
xchg
ja
hlt
ret
cmp
sbb
inc
outsl
and
arpl
inc
test
xchg
jmp
push
inc
adc
push
mov
or
xchg
jbe
fbld
faddp
lods
jmp
out
fcomip
jecxz
clc
aas
loop
scas
pushf
pop
loope
fcomps
adc
mov
shr
imul
out
lcall
sbb
lods
fnstsw
in
add
jl
test
cmp
lock
xor
outsb
fsubr
mov
mov
outsl
out
mov
push
lahf
ss
mov
add
sub
fisttpll
sub
inc
ljmp
pop
in
pop
data16
into
xorl
jmp
lret
fucomi
mov
jl
mov
sarl
sub
repnz
sub
and
dec
cld
in
negb
fs
xor
add
cld
jge
mov
aaa
bnd
leave
sub
dec
sub
adc
cmpsl
inc
negl
xor
push
cmp
test
arpl
fs
add
out
pop
push
sub
and
jbe
aad
sub
in
stos
mov
or
mov
xlat
push
pop
inc
mov
das
sub
jmp
imull
cmp
fnstenv
sub
lods
or
aad
fisttpl
movsl
inc
xchg
ret
fwait
roll
jbe
jp
add
jnp
xor
jbe
inc
cmp
ret
xor
inc
adcb
and
mov
hlt
push
call
aas
mov
test
xchg
stc
lds
sbb
xor
pushf
mov
icebp
xchg
popf
fildll
mov
mov
stos
movsb
scas
dec
push
xor
push
fnsave
dec
data16
jecxz,pn
sbb
jle
movsl
adc
sbb
dec
mov
add
cmp
ret
sbb
cmpsb
adc
sbb
pusha
sub
mov
push
push
jbe
cli
pop
sub
push
push
sub
add
gs
xchg
lcall
sub
adc
fucom
aaa
adc
and
loopne
xlat
cli
pop
push
leave
jno
adc
in
lock
ja
jmp
out
sti
fs
sub
andb
adc
enter
aaa
mov
mov
ja
dec
and
testb
popa
cmpsl
popa
lock
pop
xchg
or
mov
aad
stos
or
fucomp
shl
or
fisttps
insl
cmpsb
mov
cmp
add
add
in
cmc
stc
sub
jne
cmp
or
cmc
pop
jnp
bound
pushf
iret
jnp
aam
jg
das
dec
sbb
bound
jbe
cs
data16
xor
mov
jge
xchg
jecxz
mov
fidivrl
xor
ds
fidivrl
add
jmp
aaa
mov
daa
add
into
mov
into
stc
movsl
icebp
lds
repz
pop
inc
add
mov
in
cmpsb
pop
lcall
aas
jmp
in
mov
add
add
imul
inc
add
call
andl
gs
xlat
popa
add
or
adc
int3
mov
pop
pushw
mov
lahf
ret
pop
push
xor
dec
and
cmp
lahf
push
ds
jmp
mov
mov
xchg
push
pop
stc
rcrb
fcmovu
aas
jno
in
repz
jmp
hlt
mov
push
fisttpll
imul
aaa
or
jns
cs
dec
cmpsl
ret
lds
mov
cmp
ds
addb
xchg
or
mov
xor
pop
mov
sbb
test
cltd
fdivr
pop
xlat
cltd
ljmp
movsb
xor
add
ss
adc
pusha
and
xor
imul
notb
xlat
cmpsl
fs
test
das
mov
lods
jmp
add
and
sub
xchg
insl
lods
call
xor
sti
cld
inc
pop
sbb
scas
or
andl
add
cmp
dec
mov
cmp
push
scas
mov
xor
aad
mov
fists
ds
movsl
pop
adc
sbb
mov
imul
es
pusha
cmpsb
ja,pn
roll
cwtl
inc
mov
or
inc
mov
imul
mov
xchg
aas
fnstenv
mov
mov
stos
dec
sbb
scas
xchg
into
push
sub
inc
lcall
repz
pop
lcall
push
fdivrl
pop
jge
pop
jecxz
jge
push
push
sbb
pop
cld
clc
sbb
cmpsl
insb
push
add
jbe
mov
movsb
pop
test
fimull
push
insl
mov
fisttps
mov
adc
insb
into
clc
test
inc
test
in
cli
pop
and
scas
cwtl
sbb
sub
movsb
push
pop
push
insb
pop
psubusw
pop
and
mov
mov
mov
mul
in
clc
mov
ss
inc
and
mov
inc
fstl
xor
push
out
push
jne
ret
testb
daa
std
movsl
pop
jp
xchg
and
iret
and
adc
shlb
fidivs
fcoml
ja
sbb
lret
cld
xlat
mov
pushw
xchg
pop
lret
fstl
pop
out
dec
das
mov
mov
aaa
aam
xchg
jae
push
xchg
cld
sarb
cmc
mov
dec
dec
mov
addr16
sarl
pop
loopne
cld
sti
lds
dec
int3
scas
sub
mov
jp
aam
iret
pop
inc
jge
test
xchg
enter
jo
mov
jno
xchg
cmpl
iret
xchg
aad
jmp
out
loopne
je
movsl
mov
xchg
cmpsl
stos
xchg
mov
fs
test
add
call
shr
inc
in
ss
cmp
out
pop
insl
leave
and
add
ljmp
lret
lods
mov
inc
xlat
push
push
sub
rorb
mov
jne
inc
call
adc
mov
shlb
inc
fldl
mov
shl
icebp
mov
cmp
addl
mov
or
in
sub
jecxz
leave
xor
inc
mov
cmp
mov
lea
jo
loopne
mov
es
faddl
xor
xchg
aas
nop
call
loop
dec
xor
sub
mov
insb
jle
xlat
lods
sub
dec
iret
stos
div
stc
xor
mov
dec
pop
pop
test
outsb
jae
test
std
call
mov
mov
iret
cmc
jl
movsl
xchg
loop
xchg
jae
lods
push
mov
lcall
shl
sub
xchg
dec
lds
push
aaa
add
gs
mov
add
and
xchg
xor
lcall
movl
xor
sub
scas
cld
xlat
out
jmp
loop
imul
fsts
test
test
mulb
sub
movsl
test
lret
xchg
xor
jge
scas
push
adc
in
xchg
mov
cmp
dec
not
cmp
xlat
sub
jle
ja
cmp
enter
pushf
and
or
dec
test
push
mov
and
sbb
inc
pop
test
mov
fwait
cmc
lcall
and
inc
out
sub
dec
jge
jns
add
das
bnd
mov
add
mov
dec
xchg
pop
jge
and
test
sub
lods
inc
jmp
cmp
out
sbb
pop
loopne
fsts
mov
iret
leave
out
test
out
sub
dec
cs
inc
jns
cmp
dec
xlat
push
xchg
sbb
clc
push
mov
jge
lret
sub
fdivp
nop
movsl
push
sbb
arpl
mov
ljmp
xor
aaa
test
add
jo
pop
shrl
and
fsqrt
insl
adcl
mov
and
fildll
movsl
stos
pop
out
in
fstps
and
xor
nop
fsubs
mov
mov
fldcw
divl
xchg
fldenv
mov
mov
dec
xor
stos
stos
jmp
and
stos
sub
js
ret
into
lods
xchg
addr16
sub
sub
dec
lret
cmc
lods
ljmp
jl
mov
fdivr
test
notl
jg
xor
int3
xchg
inc
xchg
xlat
or
jns
pop
fwait
push
jns
dec
out
push
xchg
cmp
pop
xor
push
sub
and
push
dec
ss
sub
das
or
scas
push
lods
ficoml
movsl
ss
sbb
pop
mov
mov
push
dec
fidivl
mov
leave
jns
xor
or
mov
dec
das
cld
fiaddl
push
pop
insl
int
mov
push
pop
xor
aad
xor
shlb
subl
shlb
repnz
xor
xchg
notb
sub
sub
test
notl
push
and
movb
f2xm1
mov
dec
fsubl
sbb
insb
cltd
std
mov
cs
test
popa
push
lock
movsl
lds
push
mov
or
adcl
stos
aaa
rol
cmc
out
setge
stos
cli
gs
jg
aaa
push
and
xchg
add
xor
mov
mov
mov
cmpsb
adc
pop
roll
andl
lds
lock
popf
int3
sbb
push
push
mov
out
jg
divl
mov
push
sbb
out
lock
out
lcall
sub
push
jnp
push
cld
imul
xlat
xchg
addr16
or
mov
jbe
ret
mov
stos
push
push
mov
mov
add
mov
pop
xchg
xlat
mov
xchg
cmp
mov
pop
sbb
dec
or
out
sbb
ret
sbb
mov
xor
in
adc
fnstcw
jl
mov
rol
ja
xchg
lcall
idiv
leave
fildl
repnz
cld
or
jne
lret
sbb
cmp
enter
xlat
and
fprem1
sbb
stos
loop
in
push
push
pop
shll
mov
mov
and
jno
and
jne
xorl
cmp
sbb
movsb
or
orb
jg,pn
mov
cmpsl
fdivrs
pop
loope
or
cmp
imul
mov
pop
hlt
inc
outsb
and
out
clc
popa
xchg
pushf
aaa
push
aad
arpl
fildl
dec
fstpt
fwait
mov
sbb
lret
sub
popf
mov
js
or
ffree
adc
xchg
les
lcall
mov
fnstcw
and
mov
std
test
jbe
sub
mov
sbb
fadds
stc
enter
loope
imulb
and
cmp
sbb
stos
push
xchg
mov
mull
aaa
scas
cltd
in
shl
sahf
movsl
insb
sbb
add
daa
orb
stos
jle
cwtl
test
push
arpl
dec
pushf
fs
lock
sub
jns
adcb
jle
lahf
cmp
sbb
sub
adc
mov
int
repnz
add
xor
mov
jno
mov
jnp
cmpsb
pushf
mov
pop
mov
stc
sbb
in
push
jmp
daa
icebp
popl
xchg
cmpsb
adc
sbb
mov
cmp
xchg
movsl
mov
mov
xor
push
sahf
fldcw
fsubp
push
add
sti
sub
roll
iret
xor
fsubrs
es
es
inc
enter
iret
xchg
in
cmc
into
xlat
jb
dec
sub
xchg
sub
aaa
ja
jl
fidivs
mov
popa
and
jmp
push
ds
xchg
nop
fcomip
shlb
inc
mov
dec
shlb
ss
aam
sbb
xor
and
mov
mov
or
lods
mov
movsl
dec
in
clc
mov
pop
out
xchg
lods
test
dec
dec
jmp
pop
outsb
test
mov
push
jl
hlt
xchg
xchg
mov
out
cmc
out
pop
in
xor
xchg
scas
ljmp
lods
aaa
jns
sahf
iret
ja
in
dec
xlat
xor
cmp
in
mov
sbb
ss
lcall
scas
clc
cs
in
mov
lcall
dec
ret
loope
push
nop
inc
and
imul
fldcw
cmc
push
sbb
cmp
or
cmp
dec
std
cmp
mov
pop
mov
jno
lret
movsl
mov
adc
mov
xchg
insb
push
pop
sub
fsubrl
aam
in
dec
movsl
fwait
ret
push
push
icebp
mov
stos
loope
test
fcoml
adc
xchg
cltd
or
xchg
enter
sahf
push
mov
pop
in
inc
mov
lods
out
rcl
push
jge
inc
mov
pop
add
push
inc
aam
push
xlat
lds
bound
pop
and
test
push
ret
out
pop
pusha
jmp
pop
push
je
ljmp
fstl
int3
dec
add
pushf
pop
mov
mov
cmpsl
cld
in
call
mov
gs
mov
jmp
and
insl
cmp
sub
imul
ficoml
test
xchg
pushf
and
cmp
jle
inc
lods
cmp
in
in
and
out
icebp
fcomi
stos
ds
push
cmp
jb
movsl
aad
scas
test
ret
sub
lea
test
stc
mov
pop
xchg
lds
imul
mov
jl
in
jmp
sub
push
cmp
pop
pop
data16
xlat
arpl
pop
pusha
add
loop
out
push
push
les
aad
cs
xchg
dec
in
jnp
fldlg2
push
xlat
fstl
push
mov
std
call
cld
xor
mov
repz
ret
xchg
aad
daa
ja
insb
in
jmp
inc
out
xchg
push
fistpll
mov
dec
push
mov
pushf
ja
lcall
add
rcll
sbb
lret
adc
sbb
cmp
add
jge
or
and
int3
pushf
add
add
jb
std
fsubrl
sbbl
inc
add
mov
test
enter
pop
push
in
xlat
cmp
loopne
jb
scas
mov
into
std
jmp
mov
inc
es
cmpsb
push
stc
xchg
jnp
dec
mov
aam
adc
jo
aas
mov
ja
pop
in
out
stos
fs
mul
in
out
inc
bound
jg
mov
insl
mov
decl
push
fwait
nop
dec
lcall
icebp
addb
fimull
pop
sub
dec
loop
dec
std
and
inc
push
icebp
lods
mov
sbb
lret
or
into
inc
jmp
mov
inc
jmp
in
movsl
inc
cmpsl
xor
sbb
xor
std
aad
pop
test
and
and
cmp
arpl
mov
jns
or
push
jg
or
mov
jmp
outsl
push
pop
daa
outsl
inc
dec
cld
lcall
push
inc
sbb
imul
xchg
ss
cld
jmp
push
pop
xchg
or
daa
aas
in
push
adc
shlb
and
jg
gs
push
dec
out
jecxz
add
add
inc
test
sbb
adc
das
or
push
ds
aas
cltd
in
testb
out
in
insb
mov
test
stos
adc
push
mov
lods
xchg
mul
and
pop
cld
test
xchg
jecxz
stos
outsb
dec
rorb
inc
push
in
push
shll
aad
cld
inc
pop
sbb
cltd
jnp
mov
cs
jmp
and
movsl
ss
pop
jno
mov
lods
adc
inc
mov
dec
mov
arpl
es
sub
push
push
mov
sahf
cmp
mov
add
gs
push
stos
pop
repnz
pop
add
arpl
aad
xchg
sarb
es
cmpsb
cmc
mulb
xor
push
ss
mov
adc
add
adc
pusha
jmp
add
xor
cld
xchg
andl
cmp
add
jnp
enter
mov
xchg
sub
cld
push
flds
aad
cmpsb
push
inc
inc
xor
mov
inc
sbb
aam
lret
mov
mov
adc
xor
fs
mov
pushf
les
push
aad
dec
cli
in
sub
push
mov
jae
stc
push
jle
das
addr16
jg
test
sbb
mov
fs
or
aad
xor
cli
xlat
inc
mov
lds
add
mov
out
lods
insb
in
pop
lods
sub
sub
sub
sub
mov
mov
lcall
and
inc
lock
movsl
test
push
push
ffree
sbb
cmp
addl
into
or
roll
rol
adc
mov
scas
dec
push
insl
aam
mov
adc
xchg
shrb
xchg
test
inc
and
xor
out
imul
and
popa
cmp
mov
xor
push
lcall
push
scas
test
dec
jae
xor
cmp
or
xor
xchg
mov
push
addr16
cmc
in
movsb
cmc
outsb
stos
pop
mov
sub
jle
dec
inc
xor
push
cmp
xor
jp
std
push
arpl
mov
mov
mov
jne
push
xchg
push
xor
mov
add
icebp
lock
lds
add
push
lcall
xor
scas
xor
xchg
push
or
add
imul
dec
xchg
xchg
mov
hlt
into
pushf
cmp
daa
jnp
dec
push
fcmovb
mov
pushf
and
scas
in
fs
pop
push
mov
mov
test
dec
aaa
lods
sub
add
mov
and
pop
dec
jge
add
int3
xorl
jmp
pop
dec
push
cmp
jbe
mov
lods
mov
mov
cmp
inc
pop
lahf
rcll
xorl
push
mov
aas
mov
mov
mov
rorb
sahf
cmpsb
bound
repz
lods
push
das
add
xor
push
push
sbb
movsl
pop
sbbl
test
xchg
xor
rcrl
cwtl
aas
pusha
cmc
in
fstps
xlat
xor
mov
mov
movl
pusha
lods
repnz
add
sbb
fcom
repnz
and
in
ficompl
cmp
pop
and
mov
push
lea
adc
mov
mov
sub
aad
int3
out
adc
int
cmp
ret
xchg
orb
in
mov
sbb
sar
test
mov
in
add
dec
ffree
jmp
add
mov
cld
inc
shrb
push
jle
aaa
inc
in
jo
sbbl
in
adc
pop
fimull
pop
fs
inc
sub
aam
call
test
lret
fidivl
sbb
sbb
pushf
pop
out
cmc
outsl
cmp
fldl
jle
sti
jmp
mov
pop
shll
mov
xchg
test
cli
dec
add
adc
and
int
nop
fwait
cmp
call
mov
clc
sub
xchg
cmp
add
mov
cmp
jae
mov
xchg
aad
or
cmpsl
mov
sbb
push
dec
cmp
sub
mov
xchg
mov
aaa
adc
and
dec
sub
and
inc
movsb
lods
stc
add
push
and
cmp
mov
pop
xchg
and
ret
add
call
in
mov
pushl
cmpsb
cld
and
xor
mov
lret
ret
bound
lds
jle
ret
or
mov
mov
sub
ds
xlat
xchg
jbe
stos
aad
test
mov
in
mov
lret
fs
test
aad
in
lods
dec
mov
movsl
imul
call
mov
in
test
add
in
or
imul
or
and
pop
out
cld
xlat
out
mov
aaa
cmpsb
es
pop
fcmovb
lds
mov
or
xor
test
push
daa
mov
xor
sub
xchg
push
or
test
cmpsb
sub
xor
jno
divb
and
mov
sub
xchg
pop
jbe
mov
mov
icebp
out
dec
pop
in
add
imul
or
cmovbe
push
and
cmp
jp
push
or
and
add
pop
xchg
lock
pop
bound
dec
lds
lods
inc
jnp
adc
mov
mov
mov
add
stc
fnstsw
sbbl
sub
lahf
adc
xchg
stos
mov
iret
movb
in
push
out
add
call
push
xchg
imul
int
dec
xchg
stos
out
add
sub
jecxz
push
subb
dec
and
daa
ret
cmpsl
jmp
dec
inc
xor
jmp
push
pop
and
int3
jne
and
mov
push
and
mov
inc
std
cmpb
mov
push
dec
cmp
add
cmpsl
sub
into
xor
jnp
int3
mov
cmp
dec
mov
addl
ss
mov
int
adc
data16
mov
jno
cmpsl
push
pop
mov
std
or
lods
mov
cld
icebp
jmp
mov
lds
loop
arpl
pop
jmp
jbe
lock
std
xor
ret
testb
inc
xor
and
scas
imul
idivb
jne
mov
or
daa
adc
fwait
enter
mov
mov
mul
cs
xchg
mov
dec
sub
xlat
mov
loopne
addl
add
into
jbe
mov
xor
and
js
loop
mov
in
jmp
xlat
xor
movsb
pop
daa
pop
cs
fists
inc
inc
shlb
in
xchg
movsl
mov
out
subl
enter
addr16
mov
je
stc
fsincos
fldcw
inc
sbb
ss
xchg
fprem1
sbb
sub
mov
mov
into
bound
pop
subl
std
cmp
add
sub
sub
mov
stc
push
div
pop
or
push
es
dec
push
xchg
fwait
xor
cmp
add
test
push
add
xchg
sahf
xchg
or
cmp
mov
fmulp
popf
mov
mov
mov
das
xor
aaa
div
push
and
xchg
bound
mov
test
push
push
or
xor
cmp
or
mov
vpmaddubsw
imul
inc
arpl
lahf
test
nop
jmp
loopne
mov
pop
in
mov
push
pop
scas
xchg
inc
lret
fwait
inc
push
test
sti
sar
xorb
sbb
ja
push
sub
mov
mov
fs
push
push
mov
sub
and
jbe
nop
and
js
lret
mov
and
and
cmp
and
mov
imul
out
gs
lahf
daa
loope
adc
gs
test
xlat
leave
out
and
in
pop
jp
jg
xor
sbb
mov
push
sub
inc
lock
jmp
jae
movsl
mov
repnz
adc
mov
mov
cmp
xor
mov
js
test
in
push
add
dec
and
mov
xchg
mov
xchg
fstps
lock
lret
repz
jbe
shrb
in
jmp
cli
adcl
push
add
rclb
pop
adc
test
mov
inc
daa
in
fcmovnu
fbld
jno
rclb
stc
mov
pop
mov
cld
xor
ret
cs
cmp
xchg
jmp
clc
repnz
out
test
cmp
test
mov
xor
addb
dec
dec
cmp
fisubs
or
lcall
pop
fs
loop
in
dec
push
loop
add
lret
cmp
dec
sub
push
add
divl
push
daa
aaa
adc
push
pop
mov
aad
and
int3
rcll
hlt
sub
imul
inc
dec
jmp
call
and
nop
cmc
sub
adc
filds
insl
arpl
dec
mov
and
movsl
inc
xor
mov
frstor
jb
pusha
jp
cwtl
call
sahf
outsl
jb
add
out
xor
lods
call
roll
mov
int3
push
fimull
dec
jle
adc
mov
out
xchg
out
mov
in
xchg
or
pmuludq
xchg
dec
sub
cld
xchg
scas
push
test
aas
js
and
rorb
inc
lods
pop
out
sbb
bound
or
enter
adc
add
push
or
outsb
add
xlat
pop
pusha
insb
pop
pop
int3
cmp
push
notb
cld
inc
movsl
aaa
insl
sbb
leave
rcrl
int3
cwtl
cmp
sti
mov
mov
loope
in
imul
jo
sahf
aaa
insb
jecxz
xchg
leave
push
and
inc
notl
insl
iret
or
icebp
arpl
imul
sub
das
sahf
out
int
ss
jmp
or
fiaddl
xchg
stc
push
fstpl
pop
scas
push
out
jns
ss
cmc
xchg
lahf
dec
xchg
sub
in
or
test
cltd
movsl
xchg
mulb
jne
xchg
cmc
out
adc
or
inc
shl
idivl
fidivrl
loop
test
cmp
loopne
into
cld
aad
jne
cmc
mov
or
xchg
dec
mov
mov
xor
push
mov
pop
mov
xor
test
mov
jae
cmpsl
pop
mov
pop
mov
xor
cmp
stos
subl
aas
cmp
in
in
loop
cmp
mov
or
dec
xchg
scas
mov
int
or
dec
and
es
ja
dec
in
jb
test
add
movsb
imul
lock
repnz
aaa
ljmp
ss
out
data16
pop
jns
sub
and
cmpsb
adc
lahf
xor
adcb
mov
arpl
jp
fsubr
sbb
xor
sub
xor
and
dec
push
mov
aas
scas
movb
mov
push
inc
and
mov
or
pop
push
xlat
scas
or
lret
xchg
icebp
ljmp
insl
rcrb
mov
addr16
inc
sbb
arpl
xor
insl
xchg
call
insl
imul
and
cltd
test
cltd
aaa
xchg
flds
dec
fsts
xchg
cmp
push
iret
mov
mov
in
and
mov
push
je
mov
cmp
sbb
lcall
pop
loop
mov
adc
loopne
mov
rcll
cli
scas
insw
jo
inc
addb
cmp
mov
sbb
adc
divl
jmp
mov
enter
or
cmp
addb
js
mov
adc
aad
push
bound
loope
cmp
xlat
mov
lods
testb
dec
pop
mov
mov
and
mov
jmp
mov
sti
mov
sbb
in
ss
push
mov
lds
fstl
push
xchg
push
push
adc
shr
sub
rcrb
xchg
call
out
xchg
push
push
sub
je
and
lods
jmp
and
lea
cs
push
stos
and
lea
daa
sub
jmp
stos
jb
daa
sub
imul
adc
test
cmpsb
insb
xor
and
adc
in
inc
push
enter
push
insl
in
fldenv
int
out
aaa
aam
scas
movsl
les
leave
das
daa
ret
lods
xchg
jmp
aaa
pusha
push
movsb
push
xlat
or
and
clc
inc
cmc
movsl
pop
in
or
dec
cld
dec
loop
ljmp
mov
dec
sub
int
mov
jmp
stos
push
xchg
push
fcmovu
mov
cmp
jmp
pop
lods
xchg
es
mov
imul
lret
pop
aad
cmp
cmp
or
jbe
stc
nop
rcr
fs
mov
loope
ljmp
and
sbb
xchg
xor
lods
pop
mov
sbb
push
cs
addr16
ljmp
cmp
mov
and
and
xor
ja
lods
and
xor
ds
mov
cmc
inc
adcl
pop
xor
push
or
mov
scas
ss
or
mov
sub
shlb
pop
test
jbe
inc
cmpsb
mov
xor
pushf
popf
add
sub
lret
aaa
push
cmpsb
push
add
jnp
add
iret
mov
adc
call
dec
sub
mov
lods
jmp
fcmovb
aad
int
ss
scas
imul
dec
and
not
cmp
out
and
xor
mov
cmpsb
cmpsb
inc
es
lahf
or
pop
idiv
and
cs
inc
jbe
and
jbe
pushf
lods
test
sub
sbb
pop
bound
xor
pop
fdivrs
add
in
sub
imul
test
and
mov
jge
adc
dec
lahf
jp
outsl
xchg
push
add
pop
jns
leave
addr16
mov
test
push
es
inc
aad
adc
int
es
pop
outsl
hlt
push
aad
mov
xor
hlt
loope
icebp
mov
add
lret
mov
sbb
jno
mov
loope
lret
mov
rol
cmp
in
ds
mov
push
pusha
mov
cmp
xlat
sbb
mov
sahf
addb
fnsave
xchg
stos
and
mov
or
pop
movsl
pop
fsubrs
mov
and
cltd
push
xchg
sub
or
jns
pop
fwait
in
inc
add
popa
add
or
xchg
leave
mov
mov
mov
sub
mov
lahf
xor
push
stos
out
xchg
daa
daa
push
mov
or
shrl
cld
sbb
jne
aad
adc
cltd
mov
xor
push
ret
mov
push
or
add
fnsave
outsl
and
xor
cmp
sub
cmpsb
cmpl
pop
inc
mov
in
fsubl
fstpl
xchg
pop
inc
mov
push
xor
les
sbb
jne
popa
loop
pop
lods
js
les
add
lds
pop
sbb
movsb
xlat
js
xor
loopne
sub
inc
mov
and
iret
and
xlat
inc
fs
push
add
stos
xor
sbbl
loop
fists
jnp
std
jne
push
xchg
lret
xlat
sub
bound
ljmp
leave
mov
test
mov
movsl
mov
mov
cmp
lcall
jge
sub
mov
or
inc
mov
pop
or
sub
lcall
or
test
sub
fwait
inc
cmpsl
push
pop
ret
add
sub
jmp
adc
movsb
aam
mov
or
cs
sarw
fadds
jecxz
xchg
xor
inc
xor
sbb
lea
add
sbb
lock
inc
mov
ret
add
pop
or
xchg
pushf
xchg
das
mov
in
rolb
arpl
lock
pop
inc
sbb
aam
ficoml
pop
aad
cld
clc
xchg
mov
add
mov
add
aaa
or
push
and
lret
lcall
cwtl
in
lds
dec
and
cli
out
xlat
aas
shrl
in
add
icebp
stos
ror
aad
fldenv
out
inc
push
mov
pop
stos
stos
sahf
jno
xor
shrb
sub
and
dec
xchg
push
fidivs
movsb
scas
jp
addl
movsb
sbb
cmp
dec
and
cmp
sub
xor
xlat
into
std
push
test
movups
inc
push
add
scas
mov
cmp
in
in
pop
sti
pop
fildll
mov
hlt
jns
sti
sarl
lds
pop
xchg
and
xchg
movsl
roll
xchg
mov
push
es
and
sub
inc
jns
in
pop
in
cmc
loopne
cwtl
cmc
insl
xchg
ss
fwait
and
push
mov
aad
add
rep
fisubl
push
mov
cld
sbb
ds
jecxz
xchg
mov
es
mov
add
dec
sub
test
hlt
add
xchg
mov
add
mov
mov
shl
pop
jne
cmpsl
jmp
out
out
jae
xchg
fstps
movsl
dec
or
pop
outsl
adc
xchg
xchg
cld
mov
cld
jle
sbb
xor
das
in
push
mov
fdivr
push
dec
pop
xchg
sbb
dec
fidivl
enter
mov
daa
mov
ja
jmp
or
push
mov
pop
cmc
pop
or
rcl
sub
jge
jne
fdivrl
gs
jb
jl
xchg
lods
je
add
lds
sti
testl
sbb
test
jmp
cmp
test
fisttpll
cmp
out
lahf
push
xchg
xchg
xor
call
ret
adc
push
xchg
loope
cmp
cmp
mov
mov
insl
sub
std
arpl
in
call
jmp
add
sub
shrl
jecxz
call
jmp
ret
mov
lret
test
cs
in
dec
mov
sti
cltd
lock
xlat
push
ss
out
scas
dec
sahf
add
pop
add
cmpsl
xchg
jb
pop
push
in
cmp
ret
xchg
xchg
fsubrs
mov
daa
in
ret
in
in
ret
ret
pop
mov
ss
sub
xchg
jle
pop
jp
in
ret
test
jmp
jnp
mov
push
jecxz
and
clc
lods
rorl
lods
jecxz
mov
pop
nop
pop
aas
push
jecxz
aas
push
jecxz
out
enter
in
popa
movsl
jmp
ss
in
test
add
hlt
fcmovnbe
pop
enter
test
imul
mov
in
cs
in
sbb
add
and
jmp
sub
sbb
insb
add
xchg
add
out
mov
dec
fwait
dec
test
out
inc
movsb
movsl
xor
mov
adc
addr16
push
test
pop
xchg
rcrb
or
call
and
sub
fimull
pop
add
add
xchg
cmp
fiaddl
mov
movsl
cmp
xlat
jno
push
test
and
cmp
out
insb
out
pop
push
int3
mov
dec
mov
xor
addr16
or
out
jp
jmp
repnz
repnz
imulb
dec
pop
test
aad
daa
dec
popa
add
nop
or
cmp
xchg
sub
lock
in
inc
pop
neg
fs
ljmp
out
pop
stc
or
ficompl
xchg
xor
dec
mov
cmp
addr16
addr16
fistl
xor
lods
cltd
insl
jmp
outsl
ret
mov
sub
mov
fildll
fs
scas
faddl
out
inc
movsb
fmuls
addr16
sub
mov
mov
fistps
es
sub
outsb
loope
in
enter
push
xchg
mov
mov
sbb
mov
jno
sbb
cltd
dec
cmp
adc
jne
mov
pop
inc
mov
in
push
cltd
jg
xchg
fs
movsb
rcr
aad
loop
fldl
ss
test
sar
cmp
adc
stos
sti
sub
jb
jnp
out
jg
cmp
push
aas
das
test
in
movsb
enter
mov
scas
xchg
sbb
aam
scas
fsts
adc
inc
jns
cs
frstor
or
mov
rcl
aas
jb
dec
or
xchg
test
gs
mov
mov
stc
or
dec
and
mov
pusha
adc
sub
popf
dec
testb
dec
int
inc
inc
cli
cltd
cltd
in
sub
stc
cmpl
jns
lock
pop
sub
sub
dec
outsl
arpl
adc
jmp
xor
dec
cli
xchg
xchg
shll
sub
sub
cltd
dec
dec
inc
sub
jae
mov
popa
bound
jl
test
into
out
jb
xlat
lock
aam
xchg
outsb
inc
sahf
andl
add
xchg
sbb
cmp
icebp
nop
jecxz
xchg
cmp
aad
mov
pusha
imul
mov
es
mov
cmp
xchg
fbstp
cmp
mov
pusha
mov
je
mov
lret
lea
xor
xor
cmp
lret
sbb
or
daa
ljmp
push
jns
inc
sarl
into
pushf
push
mov
test
addr16
or
mov
xchg
fimull
in
add
mov
push
nop
aad
rorb
pop
out
in
dec
mov
movsl
test
xchg
cltd
test
int3
cmc
cmp
pushf
xor
out
roll
adc
xor
das
idivb
mov
xchg
movsl
mov
xor
push
push
push
jecxz
les
stos
aad
lret
and
mov
mov
xchg
mov
rorl
lret
call
rorl
jns
andb
and
push
mov
dec
test
popa
enter
loop
mov
sbb
cmpsl
or
jg
add
popw
cmp
in
or
arpl
dec
mov
stc
cs
bound
fldl
rcll
mov
push
mov
or
cmp
fisubl
mov
pop
mov
in
test
addr16
sbb
rorb
fwait
movsb
pop
divl
xchg
or
stos
xchg
jecxz
jl
mov
jge
mov
stc
mov
mov
cmpsb
sbb
mov
popa
add
push
fidivl
pop
or
sti
xchg
lret
adc
cmp
add
loop
sub
lea
xchg
in
push
out
mov
out
cltd
sub
xlat
jo
mull
mov
cli
push
daa
adc
cmp
and
xor
sti
and
or
push
call
xchg
sahf
sub
mov
rolb
dec
int3
testb
dec
mov
mov
test
lds
dec
bound
jb
les
or
rorb
xchg
clc
or
xorb
or
jge
leave
pushf
pop
lock
lds
jmp
pop
xlat
loope
and
ljmp
mov
in
push
inc
xchg
cmp
jb
mov
mov
roll
pusha
divb
sub
loopne
in
fnsave
pop
mov
or
cmp
pop
lock
ds
test
shlb
ljmp
shl
xchg
ds
leave
fs
cmp
iret
adc
fcmovu
sti
loope
xor
xorb
test
mov
loopne
insb
cmp
leave
fs
out
xchg
adc
add
xchg
in
gs
sub
mov
mov
mov
pusha
addr16
and
lods
movsb
es
mov
add
pop
pop
movsl
mov
inc
incb
lods
shrb
aad
mov
ret
neg
mov
int
mov
movsl
add
mov
xor
pushf
jecxz
inc
sub
cld
ljmp
and
stc
pusha
jecxz
dec
int3
cmc
mov
sarl
sub
test
mov
sti
mov
fsubrl
in
sahf
leave
mov
les
out
mov
mov
jno
sub
pop
mov
test
mov
arpl
stc
outsl
mov
adc
test
inc
std
or
xchg
xor
and
leave
sub
mov
mov
push
bound
loope
dec
jb
xor
lock
push
cmpsb
mov
sbbl
dec
insb
cld
sub
push
addb
test
fists
ror
add
adc
sbb
cmp
pop
xchg
cli
cmp
push
pop
mov
xchg
divb
or
xor
add
fistpll
lods
icebp
ret
sbb
pop
mov
scas
aad
mov
rcrb
scas
cltd
push
push
dec
dec
adc
stos
ljmp
movsb
movsl
bound
dec
mov
mov
push
or
adc
movsl
inc
ret
or
push
inc
imul
adc
push
push
nop
sub
nop
lret
movsb
lds
out
push
mov
test
sbb
aam
cmc
sbbl
xchg
xrelease
and
fdivr
jle
mov
not
sub
test
xchg
jb
dec
jl
jmp
addr16
cmp
inc
add
inc
jp,pn
pushf
popa
mov
mov
pop
xchg
sti
test
jge
xor
xor
sahf
movsb
insl
ja
aad
test
xchg
mull
cs
dec
cmp
je
shll
cld
or
in
shlb
sub
push
jle
and
push
test
jg
ss
rolb
inc
outsl
nop
ljmp
test
or
sub
sub
stc
mov
subl
push
popa
test
sbb
ret
rorl
mov
lret
jl
lods
dec
inc
repz
pop
aad
jne
and
pop
rolb
lds
cwtl
sbb
sahf
in
aad
lods
push
push
cmpsb
inc
daa
jnp
fiaddl
fnstenv
and
mov
push
mov
ja
pop
mov
scas
out
in
or
imul
pop
sub
mov
pop
lds
cmpsb
sub
mov
es
cwtl
cwtl
cld
dec
aad
mov
lds
jl
stos
notl
inc
xor
in
sbb
adc
ret
lds
lret
neg
movl
std
cs
pop
mov
stc
mov
and
out
add
adc
push
xchg
xor
inc
insb
pop
xchg
sbb
out
dec
mov
dec
shll
lods
sub
xor
repz
mov
mov
sub
mov
loope
stos
imul
add
sub
sub
ljmp
sbb
mov
inc
mov
jp
iret
lret
or
and
inc
out
shl
or
ds
xchg
ret
xor
daa
pop
cmp
in
enter
jle
xchg
pusha
push
ss
gs
pop
cmp
mov
sbb
aaa
push
push
add
imul
or
lds
lock
cli
les
lret
and
jns
xchg
mov
in
cmp
add
mov
cmp
or
mov
xor
sbb
fs
aad
popf
imul
fwait
jns
push
mov
scas
gs
cmp
movsb
xor
sbb
jle
in
mov
in
in
mov
pop
and
imulb
xchg
xchg
lret
out
dec
stos
loope
movsl
add
mov
adc
pop
sahf
test
in
push
dec
lods
out
pop
ret
insb
inc
push
fildl
inc
xor
test
or
sub
test
std
mov
mul
sub
rolb
or
in
inc
xor
int3
add
inc
mov
out
cmp
inc
pop
mov
aad
xlat
mov
mov
mov
fidivrl
lret
fistpll
clc
adc
pop
jns
inc
adc
jbe
in
lcall
mov
mov
imull
push
int
int3
xchg
ja
jg
lods
inc
int
popf
mov
inc
mov
jo
pop
push
ret
jl
test
in
or
mov
cmc
std
xchg
mov
fcompl
rcl
mov
mov
fcmovnu
movsl
adcl
sarl
into
pop
int3
icebp
mov
dec
cli
std
daa
add
popf
xlat
pop
xchg
fidivrs
adc
add
xlat
add
gs
mov
lods
icebp
push
scas
push
dec
and
popa
jmp
inc
mov
mov
test
mov
hlt
xchg
mov
shrb
sub
xor
in
js
rcrl
dec
icebp
inc
mov
or
lds
cmp
inc
fldt
mov
sahf
cmp
pop
adc
int3
stc
std
or
aam
dec
sub
movb
popf
insb
dec
push
loope
int3
mov
dec
aam
adc
push
push
test
nop
enter
mov
jno
mov
roll
out
loop
iret
lret
daa
and
mov
xor
loop
leave
cmp
mov
sbb
cwtl
push
mov
adc
fs
addr16
pop
addr16
and
cltd
bound
mov
fucom
pop
add
ljmp
subl
leave
xchg
xchg
cmp
movsb
sti
in
sbb
hlt
sub
pop
cld
ss
mov
xchg
mov
je
xchg
loope
push
mov
fisubl
div
aaa
push
sub
cmpsb
lods
pushf
mov
xchg
pop
movsb
push
inc
clc
loope
dec
shlb
pop
sub
ret
xor
test
insl
xchg
sub
or
xchg
jb
jmp
xchg
pop
movsb
call
stc
popf
cmp
imul
adc
jg
xlat
fsub
enter
stos
cmp
pop
adc
sub
cwtl
push
sbb
adc
and
shll
and
and
andl
cmp
mov
xor
inc
fdivs
xor
test
jp
aam
pop
fs
insl
addr16
insb
or
enter
adc
dec
int
rol
movsl
mov
ds
lcall
xchg
sbb
fcoml
enter
fnsave
dec
sub
inc
sahf
dec
push
xchg
es
xor
dec
lds
xor
aad
push
mov
stos
inc
shlb
call
mov
inc
daa
jmp
lods
push
movsl
jl
adc
notb
sbb
out
push
mov
mov
aas
sbb
or
jle
push
mov
xlat
das
xor
or
repz
pushf
jne
lcall
sub
sbb
dec
add
add
out
mov
dec
sbb
sub
mov
dec
sbb
loopne
mov
xchg
arpl
add
cmp
adc
leave
popa
out
movsl
es
xchg
or
shll
js
jne
adcb
leave
cmc
fisubl
mov
movsl
jmp
adc
sub
out
push
cld
fs
adc
or
test
ja
push
xchg
or
add
cld
ss
dec
xchg
aaa
mov
push
xchg
inc
xor
push
imul
xor
add
xchg
mov
add
scas
cmp
add
lds
ret
xor
bound
dec
loope
sub
xor
filds
gs
sub
pop
arpl
lock
xchg
in
aad
and
jnp
mov
mov
xchg
cmc
lret
or
ljmp
andl
fnstenv
stc
xorb
adc
imul
and
enter
add
test
push
or
ror
push
push
rol
fdivrp
cs
cli
fadds
jae
scas
idivl
cltd
stc
lcall
ffree
jge
inc
ret
ds
push
pop
rcrl
push
sbb
or
es
jmp
push
xchg
or
mov
aad
xlat
aaa
into
mov
jecxz
jmp
push
daa
xchg
jmp
int3
push
cmp
push
jns
or
mov
inc
jp
sbb
sub
fwait
out
pop
mov
rolb
popf
cmp
xor
in
inc
rcll
push
dec
addr16
imul
mov
cmp
loope
inc
xchg
enter
inc
cmpxchg
push
inc
stos
fwait
jae
inc
pop
and
push
mov
out
outsl
push
aad
mov
cmc
push
in
mov
stc
mov
nop
stos
icebp
nop
test
mov
xor
jo
jns
int
cmc
pop
push
and
xor
mov
mov
mov
das
push
pop
enter
jecxz
aaa
mov
adc
xchg
scas
mov
pop
sub
mov
pop
ret
dec
test
and
dec
xor
shll
xchg
int
cmp
insl
push
loop
xor
cmp
mov
cli
sub
push
lds
cmp
and
stc
in
adc
and
jge
addl
rcl
test
mov
cmc
ret
xchg
ret
mov
mov
fidivl
jmp
inc
or
dec
mov
xor
dec
cmp
or
xchg
and
pop
pop
leave
subl
sub
jne
int3
cld
aaa
dec
cli
out
inc
movsb
clc
cmp
movb
xor
and
mov
add
faddl
test
es
mov
pop
out
mov
inc
sub
fnstsw
iret
mov
sub
cmp
jecxz
test
add
dec
mov
testl
arpl
add
cmp
cwtl
mov
dec
xorl
aas
in
cli
cli
rcr
or
xchg
mov
cli
bound
jle
push
fdiv
add
fnstsw
and
add
push
negl
adc
orl
into
sub
xchg
in
insb
icebp
roll
xchg
test
and
mov
pop
jmp
outsl
xorb
std
ret
sbb
inc
cmovp
scas
inc
pop
push
push
xchg
mov
cli
pop
pusha
mov
sahf
pop
nop
lret
push
aad
inc
lods
push
xchg
in
mov
add
shlb
pop
pop
mov
sub
pop
adc
repz
lds
ret
out
cmp
js
or
dec
xchg
dec
and
cmp
jg
pop
push
pop
cmp
inc
shrb
in
dec
push
outsb
out
push
mov
jb
das
push
cmp
daa
outsl
pusha
add
flds
sti
insb
jge
outsl
adc
add
dec
adc
out
pusha
pop
cmp
dec
ret
lods
bound
fisubl
sbb
xlat
pop
dec
stos
fcmovnbe
shrl
mov
mov
fiadds
in
xchg
and
and
sub
dec
into
loopne
and
mov
push
mov
pop
cld
in
inc
cmpsb
hlt
pop
jg
jmp
in
cltd
fs
sub
sub
aad
inc
adc
movsb
lods
aad
cld
lret
push
out
jmp
xchg
loop
pop
push
xchg
sub
jns
pusha
jg
push
add
lods
xchg
push
mov
lcall
mov
enter
scas
aad
xchg
das
push
outsb
pop
and
out
xor
daa
mov
jb
jb
inc
outsb
dec
or
cmc
mov
mov
push
dec
movsl
push
insb
test
shrb
sub
mov
inc
add
loop
mov
push
jge
dec
mov
mov
negl
jb
rcl
pop
movsl
fiaddl
dec
std
mov
insl
mov
test
dec
lds
int
push
fnstcw
add
mov
daa
les
scas
pop
inc
mov
sbb
xor
xlat
sbb
push
mov
flds
stc
or
enter
es
sub
xchg
and
dec
cmc
push
cmp
mov
xchg
aas
dec
cmp
lcall
push
push
mov
vmovdqa
push
jne
push
hlt
loopne
fdivl
shl
lods
test
xlat
and
or
test
mov
inc
inc
mov
inc
notl
xor
insb
test
xchg
lock
jbe
jl
push
push
aaa
scas
fstsw
or
das
pop
hlt
xchg
mov
add
jge
push
sub
ds
cmp
pop
pop
sbb
pop
daa
push
out
pop
fcoms
fnstsw
testb
mov
add
mov
and
jmp
push
cmp
mov
xchg
cli
push
pop
pop
ja
jo
sahf
int
in
cltd
fisubrs
rcll
push
lret
outsb
testb
cmp
aad
rorl
adc
lds
mov
xlat
push
mov
dec
sub
stc
push
mov
test
jg
sbb
add
sbb
add
and
cmc
and
inc
sbb
adc
shl
mov
outsb
jns
lret
pop
scas
xor
xor
repz
cmpsl
loopne
xor
in
jmp
cmp
loopne
je
push
push
sub
outsb
neg
ret
and
xchg
mov
das
cmpsb
rcll
xor
push
js
imul
push
mov
push
xlat
sub
ja
mov
inc
jge
nop
jg
add
rcrl
gs
ja
cmp
inc
or
xchg
mov
popa
imulb
cmpl
xor
fldl
andl
test
inc
and
xor
pop
mov
mov
aam
incl
cmp
jecxz
nop
enter
mov
cmc
mov
mov
out
test
mov
xor
jge
push
ret
cmp
jo
adc
xchg
cltd
adc
xchg
push
ja
data16
in
sbbb
mov
pop
shll
xchg
xorl
out
mov
mov
incl
repnz
and
daa
loope
fsts
sbb
cld
ss
popa
cmc
cmp
inc
scas
std
mov
in
negl
jmp
js
lds
or
jge
jmp
adc
lea
pop
or
xchg
cmc
ss
mov
sbb
and
and
loopne
fadds
test
jnp
dec
push
das
ja
xor
push
cltd
xchg
add
movsb
ds
scas
adc
pop
jl
add
lods
inc
scas
cld
mov
sti
xchg
mov
test
repz
adc
jbe
in
pusha
xor
sti
sbb
in
jns
sub
daa
rcll
lret
test
and
out
bound
outsb
das
jns
xor
xor
push
and
inc
movsb
add
xor
mov
sahf
inc
xchg
cld
mov
cwtl
and
in
and
loop
add
sbb
subl
sbb
ljmp
sub
mov
push
sub
ret
pushf
std
leave
push
jne
hlt
jne
xchg
ja
inc
push
andb
int3
pop
rol
mov
lret
orl
mov
dec
mov
push
pop
mov
lret
inc
cli
cs
hlt
enter
mov
inc
pop
movsl
cli
add
mov
add
inc
test
mov
test
pop
cs
dec
push
in
jns
cld
mov
xlat
movsl
push
pop
xor
popf
test
sub
pop
xor
pop
pop
xlat
cmp
das
enter
stc
insl
inc
add
outsb
out
pop
push
xor
inc
jno
les
int
jae
lods
je
mov
sahf
test
es
aaa
pop
jmp
push
cmp
cmpsb
lret
movsb
in
adc
mov
cld
xchg
scas
or
and
fcmovnbe
pop
jle
inc
int
mov
out
lds
xchg
xor
ret
loop
repnz
subb
pop
inc
push
out
sbb
jns
in
sub
addr16
sti
aad
pop
adc
and
cs
filds
or
insl
fs
std
gs
cmc
add
lods
sub
jo
test
mov
mov
fs
lret
sbb
push
test
imul
sti
mov
pusha
in
add
sub
sub
mov
cmpsl
dec
lea
sub
sbb
push
iret
test
jge
dec
mulb
repz
pop
test
push
and
xor
stos
sub
push
daa
sbbb
addr16
mov
cmp
dec
iret
and
mov
jns
divb
push
pushf
aaa
imul
in
fs
lds
arpl
movsb
push
mov
adc
push
cmpsl
xchg
push
out
inc
jmp
xor
subl
ret
xor
loop
dec
icebp
in
mov
stc
mov
cmp
ljmp
push
aaa
xchg
fwait
push
cmp
outsb
xor
loop
mov
out
xchg
int3
xor
int
inc
xor
add
dec
lea
test
xchg
in
test
xor
push
xor
cmp
movl
mov
add
imul
xor
add
mov
test
jecxz
and
inc
add
jecxz
cltd
and
cmp
lods
test
mov
scas
sub
loopne
daa
imul
movsl
nop
add
dec
mov
jo
jge
and
mov
scas
cmpsl
cmp
mov
mov
enter
test
test
sarl
xor
mov
cmc
xchg
out
ds
pop
and
mov
scas
mov
or
pop
adc
xchg
jp
shrl
in
outsb
xor
adc
data16
inc
mov
inc
adc
mov
adcl
inc
in
out
xchg
xchg
xor
loope
movsb
test
and
xlat
or
enter
popa
xor
cmpsl
mov
add
adc
pop
inc
test
jge
lret
pop
popf
add
cld
std
jmp
test
jmp
cwtl
jmp
cwtl
mov
dec
jb
ljmp
xchg
jecxz
and
inc
fdivrl
insl
pop
int3
push
dec
mov
add
idiv
mov
push
dec
loopne
mov
mov
cmp
xor
flds
shrl
and
movsb
sub
stos
enter
lods
imul
push
and
clc
je
xor
cmp
pop
pop
mov
les
mov
cs
ret
pop
movsb
jmp
pop
jl
cli
mov
jno
aad
std
xor
addb
sub
mov
jbe
sbb
imul
mov
imul
fldenv
mov
out
in
mov
jl
test
jns
shll
mov
adc
jne
ret
mov
pusha
xor
sub
lcall
inc
cs
pusha
add
sbb
sarb
test
sub
and
mov
mov
sbb
loopne
rorl
jge
test
xor
jo
jge
and
and
inc
mov
jl
push
and
mov
and
xor
pop
mov
and
xchg
inc
cmpsb
xor
jecxz
es
mov
push
ljmp
xor
lds
jge
inc
sbb
sub
stc
movsl
or
push
lods
pop
xor
xchg
into
mov
cld
pop
inc
dec
out
shll
sub
jns
mov
xchg
out
scas
movsl
jp
or
mov
inc
lods
sub
lds
in
jp
call
loop
mov
cld
mov
add
or
fstps
dec
mov
push
call
jge
and
pop
and
jp
and
leave
int3
cli
mov
xchg
mov
adc
in
loope
loop
and
insb
xorb
movsl
pop
sahf
fmul
ss
inc
adc
pop
mov
jge
xor
fidivrs
imul
leave
sbb
pop
sub
sub
mov
pusha
pop
sbb
xlat
lds
mov
sbb
dec
leave
xchg
stc
add
test
xor
fsubrl
popa
xchg
jecxz
cmp
push
mov
push
cmp
push
jmp
movsl
xorl
enter
das
int
aad
fcomi
sub
mov
sub
jmp
insl
loopne
sub
in
shrl
in
mov
test
jne
xor
mov
cli
cmp
add
sub
xchg
xor
gs
or
test
push
add
repz
xchg
sub
bound
xor
and
in
push
xchg
mov
cmc
xor
adc
add
cwtl
in
aam
jno
and
pop
insb
add
inc
push
cli
xchg
ljmp
in
aad
stos
ds
imul
and
cld
cmc
inc
testb
stos
push
aad
jns
push
mov
cmp
hlt
mov
push
sub
xlat
cmpsb
dec
ljmp
adc
xor
xchg
dec
and
int
je
out
dec
mov
pop
inc
add
stos
ds
pop
adc
sub
sub
lds
or
inc
sti
xchg
testb
and
xor
xlat
add
jne
sub
mov
out
push
lods
pop
mov
insl
rclb
dec
xlat
push
dec
dec
loope
push
xor
dec
push
pop
shll
daa
lret
ret
into
ffreep
cmp
lods
test
inc
in
xlat
push
or
xchg
xchg
push
inc
dec
sub
mov
pop
das
cwtl
mov
push
ret
ss
push
mov
and
in
sbb
aad
and
out
push
mov
lahf
mov
mull
mov
fs
inc
adcl
xor
outsl
pusha
mov
push
stos
neg
cmpb
fcmovb
xor
xchg
mov
shll
push
or
push
xchg
imul
jp
inc
sbb
mov
add
or
insl
dec
xor
and
ljmp
push
imul
mov
fcoms
fisubrl
and
push
cltd
add
aad
xchg
frstor
and
gs
cmpsb
ja
mov
ja
jns
iret
xor
inc
insl
fistpll
inc
cmpb
sub
and
testb
push
mov
cmp
and
xchg
xor
scas
std
xor
ret
mov
call
or
add
ljmp
cmpsb
cmpsb
adc
int3
sbb
subb
mov
data16
cmp
inc
or
jb
dec
inc
mov
jmp
pop
jmp
sub
jge
cmp
nop
lcall
mov
addr16
xchg
lret
lea
push
stc
stos
aad
das
add
lret
stos
push
inc
inc
xor
out
mov
add
jecxz
sub
rorl
inc
xor
out
test
test
jbe
xor
sub
mov
mov
test
jp
in
mov
idivb
rcrb
push
fxch
std
mov
sti
add
push
es
rcr
mov
inc
pop
fldenv
jae
jne
sub
insb
jge
sbb
dec
jmp
in
insl
ret
test
inc
add
cmp
add
call
cs
les
fucomp
ror
aad
jge
loopne
adc
loop
fstps
xlat
mov
ss
add
sub
cmp
inc
push
mov
inc
dec
xor
fs
adc
ret
cmp
cmp
and
inc
mov
in
repnz
ret
std
or
cmc
jge
stc
adc
cli
and
mov
addr16
out
dec
mov
and
data16
enter
test
xchg
and
and
int3
es
sub
in
dec
in
mov
lods
push
jecxz
jo
shrl
ja
adc
out
sub
adc
push
hlt
cmp
mov
cmpsl
and
or
ss
xlat
add
aad
push
jmp
iret
aaa
movsl
loopne
mov
cmp
mov
in
jmp
ss
xlat
mov
aaa
mov
xlat
ja
mov
mov
or
outsl
jmp
es
sub
push
jmp
mov
arpl
movsb
mov
test
xlat
stos
test
dec
jmp
mov
lods
jne
es
call
dec
jmp
ds
or
vpmacsww
inc
pop
ret
xchg
pop
xor
movsb
push
jne
ret
outsl
pop
shlb
xchg
movsl
scas
clc
and
push
fldl
pushf
movsl
and
and
gs
cmp
and
mov
notb
lea
ljmp
arpl
sahf
inc
lds
inc
xor
xor
jmp
test
stos
test
mov
aam
sbb
rol
or
lds
lods
sub
lds
xor
movsb
adc
adc
jmp
in
sub
daa
pop
xlat
fucomip
fisttpll
ja
imul
enter
cs
push
push
mov
fs
xchg
fsts
cmp
push
cltd
push
fstpt
push
jne
mov
sti
outsb
pop
jnp
mov
push
rcrl
mov
popa
jmp
movsb
movsl
and
push
ds
aad
mov
jge
xchg
int3
or
cs
jecxz
push
aad
cmc
sub
adc
push
es
adc
xchg
cmpsb
mov
adc
pop
daa
aaa
adc
xchg
cmpsl
mov
adc
sub
enter
clc
mov
adc
sub
leave
fldcw
adcl
adc
lret
cli
and
dec
pop
push
sub
test
fwait
stos
mov
jnp
sbb
int3
fsubr
dec
cld
push
xor
dec
pop
inc
adc
std
push
test
mov
sarb
lds
mov
mov
daa
ret
fiaddl
cli
xor
sub
lods
adcb
test
out
lods
add
rcrl
xor
and
pushf
pop
cmc
mov
lock
mov
je
gs
ljmp
cmp
cltd
popf
scas
and
sbb
not
ss
lret
xor
cmp
pop
cmp
pusha
imul
xchg
stos
xchg
fcompl
mov
cmp
xor
sub
adc
mov
inc
shrb
lret
add
pusha
mov
scas
test
imul
mov
xchg
add
push
test
lods
test
or
mov
or
adc
jnp
mov
sbb
mov
cmpsb
das
andl
jns
mov
sarl
jnp
xchg
mov
loop
cmp
int3
scas
fwait
adc
sahf
cmpsl
mov
negl
shll
sbb
lret
cwtl
sti
cld
xor
cld
fwait
pusha
daa
dec
mov
jl
jnp
sbbl
mov
sti
pusha
mov
xchg
psrlw
rcl
sbb
jnp
mov
out
addr16
mov
xchg
pop
add
int3
cmpsl
push
cmpsl
lods
ds
jle
mov
mov
leave
cmc
data16
out
jns
into
scas
ja
scas
enter
sbb
sti
mov
push
stos
cmp
mov
dec
cmp
stos
sub
sbb
scas
jo
mov
addr16
scas
ja
push
outsb
lahf
xchg
jns
gs
mov
cmpsl
jmp
lods
enter
testl
das
int
das
dec
test
enter
sbbl
cmp
leave
lcall
sub
jmp
cmp
lret
lret
call
mov
test
ror
xchg
jb
test
pusha
movsb
and
loop
arpl
in
lea
test
or
jmp
mov
outsl
test
jnp
pushf
xchg
arpl
cmc
out
sub
or
mov
aam
hlt
mov
jl
ret
lret
iret
mov
divl
adc
in
addr16
adc
cltd
pushf
push
xchg
dec
ja
xchg
mov
stos
mov
mov
mov
mov
fmull
stos
leave
enter
mov
aaa
xor
in
sahf
das
fnstenv
xchg
xor
sbb
push
mov
cmp
push
sahf
imul
jp
bound
or
imul
pop
adc
pushf
jnp
and
fdivr
ds
cmpsb
daa
push
test
jmp
xor
pusha
test
in
pop
mov
dec
cmp
in
sub
pushl
push
mov
xor
xor
xor
xor
xor
push
daa
repz
ret
xor
jbe
sbb
cmp
subl
adc
or
into
fsubrp
decb
dec
pop
outsb
jle
push
das
aas
adc
lahf
scas
mov
jg
pop
and
adc
adcb
pusha
jo
adc
xor
adcl
adc
xor
adcb
bound
adc
xor
adcl
arpl
adc
adc
test
fs
adc
cmpsl
cli
pop
clc
movsl
pop
xchg
lock
jge
dec
sub
dec
jnp
add
shlb
xchg
inc
mov
pop
adc
in
or
and
ret
pusha
lods
and
mov
and
sbb
lods
mov
fiaddl
sub
out
cmp
fwait
cmpsl
insl
cmp
dec
and
pop
jmp
sub
imul
stos
mov
lret
lahf
cld
xor
xor
mov
int
xchg
stos
ljmp
cmp
iret
jmp
call
sbb
loop
mov
add
fsubrl
lcall
ljmp
scas
es
xchg
and
sub
xchg
xlat
cmp
xor
lcall
imul
xchg
cli
faddl
inc
sbb
dec
xor
imul
popf
mov
push
imul
xor
sub
repz
xchg
cmp
jmp
cli
lret
ja
cmp
out
xor
cmp
aam
inc
cli
and
idiv
data16
cli
inc
fcmove
jmp
add
push
cli
ljmp
pop
ds
jno
ja
adc
pop
sti
or
push
in
in
test
or
popa
mull
mov
adc
mov
in
xlat
sub
and
and
and
jle
subb
pop
gs
daa
mov
cmc
icebp
jmp
xlat
mov
leave
test
mov
test
aas
outsb
sub
mov
outsb
fwait
je
or
xor
rcr
sub
cmp
or
stc
mov
repnz
clc
inc
xor
loop
test
sub
xlat
and
adc
cltd
xor
adc
push
test
ret
stc
pop
fstp
or
outsl
mov
mov
inc
xchg
lods
mov
jmp
test
xchg
and
and
int3
jmp
dec
push
dec
les
adc
notb
mov
mov
lods
fistpll
push
test
or
pushf
lcall
stos
in
mov
jbe
jp
out
push
in
sub
xchg
cmp
cmp
jl
fsubl
xchg
mov
push
rorl
pop
xchg
mov
movl
jbe
pop
iret
and
loope
push
mov
sub
sub
dec
mov
mov
das
dec
enter
mov
jp
cmp
push
inc
mov
push
lret
inc
mov
pop
mov
movsb
mov
sbb
sub
push
insb
add
stos
mov
sbb
sub
and
std
pop
sub
cwtl
mov
scas
xor
push
add
jne
and
bound
sbb
mov
rclb
in
xchg
loopne
and
sbb
lods
addl
and
sub
js
insl
dec
mov
lcall
std
sub
jae
mov
mov
pop
loop
pop
cmp
push
dec
aas
aad
movsl
xchg
pop
xor
sti
push
mov
cmp
xchg
sub
aaa
sub
adc
xchg
lcall
lret
in
cmp
jne
in
or
xchg
mov
frndint
sub
or
dec
jno
dec
aad
mov
cmp
inc
in
cwtl
leave
mov
or
int
int3
lret
lcall
pop
jg
jne
mov
aas
idivb
jns
jnp
mov
fistpl
inc
cld
int3
xor
leave
cmp
lret
sahf
sub
daa
aad
hlt
sub
mov
mov
sbb
iret
ljmp
and
adc
and
mov
cli
push
pop
addr16
fsubrl
and
push
cmp
test
sub
dec
fnstcw
in
jns
js
xor
xlat
jg
dec
ss
imul
div
cmp
dec
mov
or
ljmp
or
jg
stc
test
imul
sub
sub
lods
jp
cli
aad
add
jne
addr16
lods
add
mov
push
popa
mov
lea
or
dec
mov
adc
pop
xchg
xor
test
jl
int
mov
jb
test
ds
out
pop
xchg
and
ljmp
cmp
inc
je
js
and
xor
andl
std
cs
xor
mov
cs
int
cmpsb
cld
les
test
and
cmp
sbb
daa
test
xchg
push
ret
jmp
clc
xchg
or
lods
fcoms
and
xchg
enter
mov
jnp
cmp
inc
dec
cmpsl
pusha
xchg
xchg
jmp
adc
mov
in
out
jne
aaa
cmpb
dec
and
int3
lock
mov
sub
enter
xor
ret
push
insl
push
daa
push
das
das
mov
int
lcall
lds
add
mov
hlt
mov
and
xor
mov
in
in
or
jmp
jnp
cmp
ror
xchg
add
lock
les
inc
les
fnop
ret
mov
mov
jmp
and
push
cmp
in
stc
jns
push
push
pop
mov
mov
testl
lret
cmp
jle
repnz
jecxz
mov
out
cli
push
in
aaa
add
rcrb
in
mov
mov
push
dec
outsl
jno
cmp
cs
add
aas
ja
xor
imul
pop
testb
adc
rcl
out
lds
jno
stc
icebp
and
mov
movsl
xor
imul
jbe,pn
xor
mov
popa
aas
rcrl
js
in
adc
ss
mov
imul
add
aaa
mov
cld
stos
sub
stc
insl
js
into
into
pop
mov
ljmp
pop
and
outsl
xchg
call
cs
scas
cmpsb
pop
inc
pop
sub
xor
lods
mov
bnd
mov
jmp
aas
and
cltd
movsl
xor
test
inc
lds
in
test
cmc
enter
xlat
push
dec
xchg
xchg
jmp
int3
mov
push
inc
add
xchg
fiaddl
ds
ss
xchg
cltd
daa
cmpsl
clc
push
cmp
call
imul
xchg
jnp,pt
pop
jmp
push
cmc
loopne
cmp
mov
test
push
push
sti
aas
int3
cs
mov
comiss
add
xchg
into
xchg
mov
dec
pop
adc
push
cwtl
xchg
pop
xor
int3
aad
and
out
inc
and
cli
mov
sub
adc
xchg
fldz
jge
test
dec
and
stos
lcall
jae
pop
sub
pop
jecxz
and
sub
jge
mov
loopne
or
jp
jnp
stos
pop
pop
pop
jg
jnp
pushf
xlat
aad
ljmp
lods
test
xor
lds
int
into
daa
scas
xchg
adc
xchg
aas
pushl
push
sub
sub
filds
divl
cmp
xchg
lret
arpl
or
iret
jecxz
mov
repz
in
aas
mov
inc
or
in
enter
mov
cmp
dec
fs
dec
and
popa
sbb
jp
icebp
xchg
fdiv
pop
outsl
sub
xlat
aas
movsb
mov
xchg
sub
xchg
jp,pn
and
arpl
lcall
sub
call
test
push
ss
xlat
ss
loope,pt
xchg
jmp
ss
push
test
es
aaa
popa
jmp
ss
jmp
aaa
lods
lods
xlat
fucomp
test
stos
jmp
ss
outsl
sbb
lret
and
xor
jns
xchg
inc
push
xchg
xchg
fsubs
push
xlat
xchg
test
pop
in
jmp
and
mov
loope
and
pusha
test
and
outsl
scas
mov
outsb
test
sub
sub
stos
sub
sub
push
jmp
jmp
test
imul
aad
sbb
and
ret
push
cs
sub
and
adcl
or
icebp
sub
or
pop
and
loope
sar
repz
in
push
add
sahf
mov
pop
movsl
dec
aam
es
aaa
lock
fidivl
stc
jnp
call
pushf
xlat
mov
jmp
ss
scas
aaa
xchg
fmull
fs
test
sub
sub
xchg
aaa
xchg
jmp
in
xor
in
push
inc
xchg
nop
into
outsb
push
notb
sub
add
std
xor
xchg
pop
pusha
add
inc
daa
or
popa
add
pop
adc
inc
scas
jg
or
adc
repz
add
sub
fld
jne
jge
pop
push
and
cmp
mov
and
adc
mov
sbb
sub
adc
pop
cli
xchg
and
jb
add
or
cmp
adc
popa
les
notl
movsb
cmovae
push
icebp
loope
and
xchg
loop
dec
adc
sti
popa
xchg
ds
cmpsb
rcr
mov
xchg
cmp
test
jecxz
fidivrs
shlb
jp
icebp
push
and
into
dec
dec
adc
and
pop
and
ljmp
cwtl
cmp
je
dec
mov
mov
fwait
dec
movsb
aam
xchg
iret
mov
imul
loope
out
push
gs
aad
and
js
xchg
fildll
in
and
pop
adc
or
movsb
rcll
ret
stos
xchg
and
mov
add
imul
add
sub
dec
out
adc
loope
cmp
in
es
popa
pop
jecxz
pop
imul
out
incb
fiaddl
rorl
and
fwait
inc
and
jbe
adc
and
movl
dec
xchg
sub
mov
fisubrl
sbb
xchg
add
adc
std
out
jmp
mov
sub
mov
jl
aas
jecxz
jmp
mov
fistpl
adc
adc
cmp
dec
cmpsb
dec
fnstcw
and
xor
mov
bound
xor
and
in
adc
mov
ja
fdivrs
ret
enter
cs
mov
add
adc
stos
adc
push
jmp
adc
mov
sbb
jbe
add
sbb
add
xorl
lcall
aaa
xchg
or
lret
je
sbb
jl
push
adc
aad
mov
push
push
scas
nop
add
mov
jp
sbb
sti
mov
xchg
ret
xor
test
cs
dec
adc
jecxz
cmpsb
int
adc
out
lods
inc
or
jle
jno
stos
xchg
jle
addr16
repz
orb
aaa
sub
pop
shr
mov
mov
cmp
xchg
in
cmp
sub
gs
inc
push
scas
dec
or
fsubrs
fldt
push
lock
xchg
pop
sub
mov
stos
fwait
mov
mov
sbbb
imul
fcomip
stos
les
popf
sbb
sbb
sub
cld
push
mov
or
and
loopne
jl
jg
jns
inc
outsl
stos
jbe
pop
dec
daa
push
sub
mov
cmp
jmp
stos
movsl
sbb
pop
in
popf
test
push
xchg
cld
fwait
or
pop
lahf
les
mov
sbb
int3
push
in
jbe
push
lods
fisttpl
cmp
lods
or
or
or
or
or
or
push
mov
je
call
ret
fwait
jae
inc
clc
fnstenv
mov
cmp
bnd
mov
ret
cwtl
add
lahf
add
xchg
mov
sbb
sbb
in
cltd
fmulp
fistps
mov
dec
lock
mov
mov
fs
mov
fs
movsb
fs
pop
aad
xchg
mov
in
movsb
inc
fs
fs
cmp
ljmp
fbld
mov
mov
fs
pop
pop
push
inc
jne
or
out
shl
pop
fldcw
sub
jecxz
jne
fcom
or
jne
fld
clc
insl
js,pn
leave
jecxz
mov
das
in
movsb
arpl
gs
pop
cmp
loope
xor
sbb
pop
push
in
sbb
into
sbb
sbb
mov
ret
or
or
or
or
or
or
push
aad
push
jle
out
mov
sub
mov
imul
in
popf
mov
xchg
lods
fwait
sbb
sahf
lahf
rcll
out
leave
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
lret
lahf
mov
out
lahf
jle
xor
inc
or
in
push
mov
lods
jecxz
adc
es
sbb
mov
sbb
sbb
xlat
enter
in
push
push
test
call
mov
mov
popf
xchg
cwtl
ja
or
cmp
cmp
xacquire
mov
in
pusha
mov
lods
loope
mov
or
or
push
push
enter
pop
push
fbstp
push
jae
out
ja
sbb
mov
xor
jnp
scas
clc
fmul
or
mov
ret
test
repz
lret
push
push
jbe
push
xor
inc
popf
jbe
jns
scas
dec
push
mov
xor
mov
xor
mov
xor
mov
xor
mov
xlat
and
xchg
pop
addr16
sbb
loope
xlat
mov
ret
rcl
adc
repnz
aam
aam
and
js
jecxz
mov
mov
insl
movsb
popa
fs
fs
mov
push
lds
pop
or
mov
lahf
xor
jno
ret
xchg
and
push
lods
push
sub
mov
xor
jmp
adc
adc
adc
adc
adc
sbb
adc
adc
adc
adc
repnz
repz
hlt
adc
cmp
fiadds
xchg
shrb
sarl
aam
aam
aam
aam
and
enter
int
arpl
and
in
movsb
push
rorb
in
mov
insb
rorb
and
or
or
or
push
and
inc
push
stc
jbe
push
mov
push
add
push
push
hlt
push
inc
popf
in
mov
xchg
cltd
loopne
xor
push
mov
mov
xor
mov
and
test
mov
fwait
mov
int3
dec
lods
mov
mov
ja
pop
js
or
gs
testl
xor
mov
xor
mov
mov
xlat
dec
shll
shr
sub
in
add
push
xchg
jno
adc
push
add
in
xor
mov
rolb
roll
es
mov
xor
mov
mov
mov
mov
mov
movsb
cmc
sbb
push
in
out
xchg
lods
imul
add
cmpsb
mov
mov
in
or
mov
fmuls
push
inc
jecxz
mov
xchg
in
movsb
mov
jbe
pop
mov
lds
or
data16
cmp
jo
int3
fwait
mov
popf
fs
cmpsl
sbb
inc
xor
dec
jmp
cld
negl
iret
push
xorl
test
cltd
mov
lahf
dec
xchg
xor
mov
dec
jecxz
jae
inc
mov
and
enter
cmp
lea
or
or
or
cmp
push
inc
out
sub
push
inc
test
mov
xor
mov
xor
scas
dec
mov
push
std
insl
push
fisubrs
imul
mov
mov
mov
mov
mov
mov
mov
lcall
fucomip
shrb
roll
aam
aam
les
sub
outsl
dec
cmp
jl
in
xor
mov
mov
mov
clc
sub
ljmp
fs
dec
mov
addr16
popa
push
out
add
mov
lods
xchg
dec
scas
test
mov
dec
cltd
fstpl
test
adc
gs
mov
xor
sub
sahf
mov
icebp
in
movsb
push
andl
mov
pop
aaa
push
jns
ficompl
or
fcmovnbe
pop
add
pop
push
int
mov
sbb
xlat
xor
push
jo
or
loop
mov
sub
loope
push
push
fcoms
push
push
test
call
cmpl
mov
cmp
cmp
nop
push
addr16
or
mov
out
inc
add
sub
sub
and
sarb
rcll
int3
pop
sbb
push
xlat
xlat
mov
inc
ds
push
and
mov
jle
test
cmp
out
js
in
fisttps
inc
shll
push
fcoms
dec
sub
sbb
ljmp
js
clc
in
imul
in
stos
jns
or
ja
ret
jle
inc
dec
in
lods
enterw
leave
jbe
push
popf
push
pop
into
loop
mov
xlat
sub
dec
or
jle
sbb
test
mov
stos
push
and
pop
jne
mov
jbe
jbe
push
sti
push
outsl
into
xor
test
pop
push
ds
inc
js
xchg
mov
push
mov
mov
dec
loop
mov
int3
fidivs
inc
and
fdivrs
jecxz
mov
ja
pop
faddp
push
dec
jle
data16
into
push
leave
ss
dec
sub
cmp
push
loopne
and
movsb
gs
jecxz
mov
push
stc
and
push
out
test
or
lods
fisubrs
fistps
mov
movsb
mov
movb
or
push
add
adc
test
mov
adcb
dec
fstp
inc
out
and
push
mov
xchg
sub
cmp
lods
xor
popf
xor
cs
mov
mov
movsb
and
push
add
sbb
pop
adc
mov
xchg
sub
test
fadd
mov
popf
cmp
out
xchg
scas
xchg
outsl
xchg
and
pusha
xchg
and
pusha
push
xchg
cltd
xchg
fwait
push
popf
or
ds
pop
xchg
mov
shl
and
mov
adc
ljmp
adc
mov
jle
data16
js
cli
sahf
pop
test
sbb
adc
adc
mov
dec
cmp
push
add
mov
arpl
repz
xlat
outsl
mov
push
ret
js
movsl
and
lahf
arpl
fwait
repz
hlt
push
mov
adc
lds
xchg
xchg
ss
popa
mull
add
mov
xchg
xlat
ljmp
adc
stos
mov
lea
jbe
popf
cmc
dec
xorps
cltd
pop
sbb
bound
stc
pop
or
int3
mov
pusha
in
xor
clc
mov
cwtl
int3
nop
sbb
mov
aas
out
pop
inc
push
mov
mov
or
test
movsl
stos
in
xchg
push
in
mov
push
pop
push
sbb
fstps
cltd
mov
into
mov
sub
push
jl
dec
jle
mov
shrl
sub
shl
stos
shr
and
xor
inc
or
loope
push
and
jecxz
mov
xlat
xchg
out
test
lods
lods
loopne
loopne
sbb
cwtl
xlat
or
dec
imul
and
xchg
lods
stc
sub
int
in
movsb
and
jns
dec
push
xchg
push
mov
push
mov
sbb
stos
xor
out
xor
stos
into
outsb
cmpsb
sub
jne
sub
ds
dec
es
test
add
js
or
sbb
sbb
push
scas
sub
and
aam
aam
aam
les
stos
or
or
or
or
or
or
jne
or
and
aam
xor
ljmp
sbb
adc
xchg
out
fwait
scas
popf
outsb
lahf
das
xchg
out
jecxz
and
mov
loope
mov
loop
mov
or
or
or
or
jp
arpl
or
inc
fiaddl
push
rcl
and
xlat
test
adc
mov
cmp
push
rcrl
out
cmp
sub
jmp
outsl
jns
mov
int3
aaa
dec
pop
xchg
gs
in
sti
mov
addr16
into
dec
add
xchg
push
xchg
insb
enter
pop
lret
sbb
adc
aaa
lds
lock
cmp
jmp
cmp
add
sub
outsb
vpavgb
loope
sbb
mov
xchg
pusha
add
movsb
sbb
shlb
fildll
rolb
lds
jmp
pop
xchg
mov
mov
lock
adc
pop
cwtl
inc
xchg
xlat
or
jecxz
and
les
and
push
mov
shlb
mov
shl
push
fmuls
jmp
and
pop
pop
stos
sbb
dec
in
xchg
cmp
imul
stos
xchg
sub
jb
lahf
mov
imul
mov
shlb
mov
mov
pop
add
cmp
fcomps
ja
add
or
cmp
mov
sbb
mov
jbe
cmp
jmp
lea
int3
push
push
add
adc
pop
enter
cmp
fildl
std
loopne
movsl
mov
inc
test
jmp
dec
mov
jmp
mov
fwait
inc
sbb
jno
test
std
sti
call
xchg
pushf
int
jmp
fcoms
sub
mov
adc
dec
fwait
movsb
ljmp
addr16
imul
aas
adc
out
jnp
ret
inc
pop
std
fsubs
mov
dec
in
gs
stos
incl
push
pop
push
cltd
imul
iret
gs
lcall
les
xchg
cltd
lahf
sub
popf
cmp
sub
movsl
push
les
cmp
test
imul
mov
sub
addr16
mov
jmp
stos
movsl
fcompl
dec
cli
push
cli
push
xor
in
add
ljmp
cmp
jnp
jmp
jne
mov
jp
pop
inc
mov
push
mov
pop
lret
xchg
daa
lret
add
les
add
cwtl
jmp
push
pop
adc
pop
jmp
test
lcall
or
push
lock
xchg
fidivl
pop
jne
sbb
cmp
call
xchg
push
fdivr
lahf
mov
cwtl
stc
mov
icebp
test
cs
push
sub
mov
aad
cmp
sub
fisubrl
fwait
adc
out
sahf
aaa
in
mov
andl
push
fimuls
mov
ljmp
and
sbb
cld
xchg
stos
mov
xchg
xchg
mov
pop
jno
insb
insl
pushf
mov
outsb
cmc
or
mov
js
std
pop
aas
cmp
lret
xor
xor
enter
aas
jbe
ljmp
dec
or
sub
lea
lock
ja
fidivs
ljmp
push
dec
leave
lret
pop
cs
aam
iret
mov
cmp
aaa
test
scas
xchg
stos
cmp
cmp
daa
fidivrs
inc
xchg
test
add
pushf
aad
cmp
mov
lods
mov
xchg
xor
mov
leave
rcrl
call
scas
scas
mov
jg
push
aas
mov
xor
add
jl
cmpsb
xchg
mov
mov
jno
loope
mov
movb
cltd
mov
mov
mov
mov
sub
inc
pop
xor
rorb
jmp
cltd
or
jmp
imul
arpl
leave
nop
sub
stos
pop
pop
pop
mov
inc
dec
enter
sub
cmp
adcb
loop
or
sub
sbb
jns
stos
ljmp
fxch
and
je
imul
cmp
jge
pop
inc
test
stos
ret
lods
test
mov
or
dec
inc
enter
push
lods
mov
call
mov
imul
add
inc
pop
daa
mov
mov
cmpsl
lods
js
loop
jmp
int3
lret
sbb
inc
mov
std
add
imul
scas
in
fcmove
es
hlt
cmpsl
push
xor
mov
mov
fidivl
or
stos
fistpl
bound
loop
lods
cmp
out
aaa
shlb
loope
dec
fwait
mov
jmp
rolb
lods
notl
sub
jmp
dec
loope
mov
fwait
stos
adc
xor
xor
inc
cmp
or
lcall
cmpsl
fcoml
fimull
stos
ja
lret
or
sti
imul
jmp
xor
scas
inc
mov
cmp
mov
cmp
xchg
popa
aas
sub
inc
mov
mov
out
push
and
jge
push
adc
lahf
mov
cli
out
push
inc
fcoms
xor
fisubrl
popf
fcoml
jmp
mov
cli
cmp
pop
testl
rcrb
push
mov
daa
cmp
pop
mov
mov
js
in
push
mov
cmp
dec
pop
addr16
cld
mov
gs
add
xchg
dec
inc
pop
pop
dec
jbe
sub
enter
mov
push
xor
addr16
dec
jne
out
cwtl
loopne
xchg
call
fisttps
mov
jbe
cmp
jge
dec
mov
mov
data16
ljmp
dec
push
mov
test
subl
adc
call
pop
add
or
repz
clc
adc
push
sub
jns
or
test
cmp
cmpsl
mov
pushf
mov
xor
dec
aaa
sbbl
sbb
fucomi
jne
addr16
cmp
andl
cmpsb
dec
lock
ret
rcrb
mov
dec
or
push
inc
je
xor
ret
pushf
leave
push
pop
bound
lcall
xor
and
clc
ffreep
inc
inc
lret
dec
sahf
dec
mov
cmp
lret
sbb
ljmp
cmp
out
leave
adc
stc
ljmp
mov
pop
mov
pusha
jp
sub
sub
pusha
sti
dec
push
in
xor
mov
addb
mov
add
idivl
jb
mov
sbb
orl
cmp
lea
clc
mov
movsl
pop
test
rorl
cwtl
mov
shrl
sub
fwait
popf
dec
cmp
call
in
or
data16
mov
push
insl
cmpsl
mov
xchg
aad
imul
leave
xbegin
or
dec
mov
stc
sahf
repnz
stc
xchg
imul
add
adc
test
loopne
aad
insl
xchg
stos
stos
lret
adc
ret
mov
inc
scas
fmul
mov
xchg
aad
pop
and
sub
aam
cwtl
mov
test
mov
xbegin
outsb
jbe
inc
inc
fisubrl
mov
cmp
loopne
jne
imul
pop
dec
lods
leave
ss
add
cmp
mov
mov
std
test
jmp
fisubrs
xchg
adc
mov
idiv
cwtl
mov
repz
adc
mov
addr16
call
repnz
mov
dec
push
dec
xor
cmp
outsb
test
fdivl
mov
lret
pop
movsl
test
rorb
xchg
daa
dec
inc
cmp
push
cmp
xchg
ret
xlat
icebp
jmp
mov
dec
out
mov
call
xchg
sahf
nop
jl
mov
stos
movsb
jo
shll
addr16
adc
jg
nop
imulb
sub
fwait
cld
xor
mov
jecxz
mov
xlat
sbb
jecxz
mov
dec
xchg
pop
sub
or
or
call
and
dec
enter
jb
sbb
add
xchg
fldt
fmull
ss
mov
cwtl
pusha
xchg
clc
test
mov
cmpsl
jp
test
push
inc
inc
stc
jge
clc
push
insb
push
inc
cmpsl
dec
pop
out
mov
pop
mov
mov
sahf
mov
repnz
insl
or
stc
or
ficoml
jne
mov
pop
mov
bound
lret
lret
iret
lcall
sbb
shll
add
lret
cwtl
sub
ret
or
jle
mov
xchg
push
roll
into
out
lret
pop
pop
stc
fnstsw
sbb
cwtl
clc
add
outsl
insb
out
sbbb
jl
in
mov
push
sbb
push
pop
sbb
lods
jns
test
and
repz
mov
pop
ja
jp
sub
sub
rep
adc
imul
shl
mov
sti
iret
fisttpl
divl
incb
mov
pop
xlat
add
call
push
into
dec
push
mov
sti
lods
mov
imul
jmp
popa
jge
daa
std
sti
cmp
xchg
popf
or
sub
or
movsl
mov
call
js
jnp
sub
out
cmp
sub
in
leave
data16
daa
mov
jbe
sbb
push
and
dec
jge
inc
pop
dec
aad
into
mov
std
ret
test
mov
imul
jg
xlat
jno
loope
pop
mov
int3
cld
lock
xor
test
mov
push
ret
dec
ljmp
out
jno
daa
int3
mov
dec
sbb
xchg
xor
mov
inc
mov
sub
cltd
int3
dec
shlb
jmp
dec
sti
daa
data16
mov
jae
add
scas
aam
icebp
sbb
pushf
lret
sbb
inc
push
out
pop
int3
clc
ss
cwtl
and
clc
sub
enter
sub
lock
pusha
mov
dec
fistl
ds
fwait
pusha
cmp
sub
popa
xlat
andl
ds
jecxz
cmp
scas
je
fiaddl
add
mov
popf
arpl
fisttps
int
aam
mov
sub
cwtl
fstpt
pop
scas
sub
dec
add
js
clc
loop
sub
test
pushf
arpl
in
adc
xchg
xchg
fdivrs
out
inc
dec
cmpsl
or
insb
std
xor
xchg
stos
push
call
iret
cmp
fists
stc
loop
pop
push
ja
ret
lret
pop
or
adc
lret
aaa
pop
pop
flds
or
stos
icebp
ljmp
ljmp
in
cltd
clc
jge
adc
fcomip
jge
mov
xlat
icebp
jnp
xchg
xchg
test
mov
xchg
pop
out
scas
js
push
icebp
adc
std
in
cs
imul
lcall
jg
decl
les
inc
ret
push
dec
int3
push
leave
loope
ficomps
push
jg
cmp
mov
imul
mov
int3
call
aam
sarb
cmp
sti
cmpsb
add
xchg
inc
das
push
hlt
cli
push
mov
cwtl
push
pop
in
test
xchg
lret
sub
adc
cli
mov
push
mov
dec
mov
fimull
push
fcmovu
call
mov
xor
andb
lock
add
loopne
mov
out
pop
dec
clc
mov
sbb
push
or
pop
lret
jnp
sbb
clc
enter
adc
push
call
sbb
cld
imul
jno
add
jle
or
jo
inc
dec
mov
push
xchg
daa
pop
addr16
loop
rcll
test
test
add
enter
ja
popf
push
ja
mov
stc
fmul
xor
mov
iret
add
pop
movsb
xor
enter
and
out
pop
and
cwtl
sbb
mov
mov
push
ret
mov
stos
shl
dec
mov
fidivrs
mov
jle
push
stc
in
adc
sub
push
fidivrl
jmp
pop
lds
xchg
mov
adc
ret
mov
in
imul
mov
cmp
imul
int3
jne
sub
push
cwtl
fsubs
outsb
jge
into
in
sub
mov
xlat
fimull
mov
lea
cwtl
inc
jle
dec
out
or
jl
lock
ret
lahf
lods
jp
lret
cmpb
mov
xchg
xchg
inc
mov
pushl
lret
sbb
mov
xchg
jmp
inc
into
repnz
arpl
test
roll
clc
add
add
mov
js
sub
pop
lock
add
scas
mov
xor
mov
mov
mov
loopne
ret
push
jecxz
xor
aam
stos
pop
dec
lret
call
orl
mov
cmp
jle
stos
rclb
push
popf
ljmp
pop
ret
dec
inc
in
jnp
pop
jnp
out
cs
jl
rolb
pushf
mov
dec
push
xchg
clc
cmpsl
mov
leave
adc
jo
adc
repz
mov
adc
jge
sbb
in
mov
mov
out
mov
faddl
pop
outsb
add
lcall
loopne
out
aas
push
js
mov
push
pop
jns
ret
in
hlt
adc
test
push
cld
bound
out
fs
nop
ss
sbbb
ja
gs
popf
dec
pop
mov
cmpsb
pop
sahf
sbb
adc
test
xchg
xchg
mov
enter
out
or
daa
loopne
mov
pop
mov
rcrb
xchg
pop
jmp
sahf
cmpsl
outsl
cmp
xchg
cmpsl
push
cmp
sub
mov
jbe
nop
inc
xor
shrl
sub
test
mov
or
cmc
in
sarl
sbb
aaa
test
clc
push
and
or
mov
adc
cwtl
jmp
sub
xor
xor
and
sbb
sub
stos
jle
or
or
nop
cmc
loope
std
rol
mov
in
fiadds
dec
dec
jecxz
aam
sbb
fidivs
out
or
mov
fidivs
test
mov
mov
or
test
loope
push
xor
mov
jle
sbb
pop
mov
inc
out
pop
dec
loopne
xchg
mov
mov
sarb
cld
dec
clc
sarb
mov
pop
xchg
jg
int
push
sub
lret
dec
jle
repnz
sub
clc
hlt
insb
mov
mov
dec
stc
jne
mov
cld
sbb
mov
inc
cld
or
loope
push
leave
repnz
pop
pop
lods
mov
push
mov
dec
int3
mov
dec
sub
sbb
pushl
xchg
inc
shll
aaa
fcmovbe
lahf
jle
movsb
nop
dec
jge
scas
into
rcrb
xchg
fcompl
les
adc
and
iret
jle
mov
call
mov
scas
mov
mov
mov
mov
mov
sbb
dec
jp
sub
sbb
pop
sbb
adc
xchg
jno
out
out
adcl
fistpl
shl
test
sbb
lcall
mov
push
adc
sub
push
dec
out
test
xchg
adc
clc
push
movsl
xchg
mov
pop
pushl
iret
iret
imul
cs
mov
cwtl
add
clc
mov
cmp
dec
repnz
cli
loopne
push
or
sub
sahf
clc
addb
or
stos
test
xchg
js
inc
fstpt
sahf
mov
push
push
loopne
inc
sub
insb
mov
add
inc
dec
xor
sahf
clc
mov
fwait
add
or
sahf
dec
pop
call
cmp
jecxz
or
ss
pop
mov
jle
jmp
lcall
cmp
push
lea
or
inc
dec
test
rcrl
xchg
add
repz
ljmp
pop
xor
or
out
jle
xchg
pop
mulb
push
sti
ret
les
cli
das
add
popf
dec
ss
xor
mov
mov
or
adc
lcall
out
ficompl
adc
or
mov
xchg
mov
ja
lret
mov
jle
stos
dec
dec
xchg
pusha
fistps
mov
or
mov
jmp
clc
mov
sub
sbb
in
pushf
push
mov
mov
pop
sub
and
sbb
pop
push
leave
sbb
pushf
push
sub
insl
sbb
lds
jne
cli
stos
stc
sbb
out
pushf
popf
inc
jmp
es
ljmp
stos
insl
mov
sub
fisttpl
and
mov
sti
popa
cwtl
in
xchg
outsb
mov
sub
test
add
pop
cli
cld
sub
mov
test
pop
mov
sub
pushf
lds
ja
sub
jmp
cltd
xor
dec
push
dec
push
jnp
sbb
or
movsb
cltd
cmp
enter
test
inc
xchg
std
enter
int3
cmp
jmp
add
mov
cmp
stos
xchg
mov
rcll
int3
sbb
sub
pushf
or
cmc
fldcw
loopne
in
adc
dec
sbb
sub
fcmovnu
sub
cmp
jecxz
les
jns
mov
mov
jae
pop
mov
mov
dec
test
sub
cli
inc
pushf
xchg
sub
inc
sahf
push
cmp
imul
and
fdivrs
and
pop
fistpl
sub
mov
jns
sbb
roll
and
pop
cmp
popa
mov
jecxz
les
fdivrs
or
adc
stos
cltd
das
lcall
jns
imul
mov
inc
fisttps
adc
fdivrl
adc
jns
ljmp
sub
dec
sub
cmp
enter
pop
mov
pop
fldl2t
or
sub
stos
dec
mov
fmul
clc
mov
ljmp
outsb
inc
push
mov
cmp
and
or
test
cwtl
mov
mov
or
jmp
dec
adc
stc
sbb
arpl
dec
mov
inc
cli
sub
or
mov
frstor
mov
mov
sbb
and
xchg
std
test
sub
stos
ljmp
sbb
test
dec
dec
test
cmp
adc
fcmove
pop
cmp
cmp
ss
lcall
add
jl
imul
sub
jae
cltd
pand
mov
dec
mov
lcall
dec
enter
fldcw
adc
cli
mov
jns
inc
lret
ret
xor
or
jmp
pop
sti
inc
fldt
movsl
lcall
fwait
cmp
hlt
fisubl
sub
lods
stos
lret
cmc
imul
jmp
mov
dec
push
in
cli
dec
dec
cmp
sahf
leave
movsl
cmp
fisubrl
test
cmp
push
test
das
push
fdivr
cmp
inc
mov
repnz
sub
pop
fmull
xchg
jmp
dec
mov
mov
test
cld
mov
mov
lcall
ljmp
stos
mov
stos
sub
mov
mov
pop
cmp
add
pushf
les
jns
test
icebp
cmp
dec
xor
int3
cltd
adc
dec
imul
fmuls
call
ljmp
push
jecxz
movsl
lret
test
or
sub
jnp
cli
test
xchg
aad
jmp
sbb
and
lods
mov
sub
or
mov
or
test
push
hlt
scas
add
leave
lods
jns
pop
aaa
inc
scas
add
stos
and
lods
dec
cltd
test
outsl
jmp
xchg
adc
sbb
arpl
loop
xchg
lret
jg
in
pop
in
jns
nop
mov
rcr
sahf
dec
leave
xlat
dec
mov
fprem1
mov
test
shr
inc
cmp
stos
push
adc
ljmp
lcall
sbb
cltd
lret
movsb
fstps
jmp
lds
xchg
sahf
or
scas
ss
stos
lods
pop
test
pushf
or
sti
enter
or
cmp
mov
repnz
sub
mov
sub
dec
lea
stos
cs
sub
stos
je
push
flds
sbb
fists
testl
sub
cmp
mov
inc
imul
out
cld
shll
loopne
out
out
xchg
jbe
stc
dec
sbb
push
mov
jmp
jns
in
xchg
pop
ljmp
in
cmp
mov
sub
int3
fwait
pop
mov
mov
imul
lret
cld
stos
push
pushf
fisttpll
jnp
mov
int3
lret
scas
testb
inc
push
leave
fisttpl
inc
or
leave
sbb
enter
sub
pop
fcomps
ljmp
pop
pop
jmp
cli
scas
outsb
push
adc
jmp
out
scas
aad
dec
scas
pop
and
test
adc
cltd
mov
in
jecxz
sub
fistps
mov
cmp
fcoml
imul
movsl
enter
orl
insb
lds
lret
enter
xchg
rorb
fldt
clc
cmp
cli
pop
adc
lods
jns
fwait
test
sub
lret
xchg
cmp
fld
mov
jmp
xorl
fdivr
imul
int3
push
mov
mov
ret
mov
test
cs
push
cmp
in
stos
leave
fidivrl
daa
cmp
mov
inc
mov
movsb
clc
test
xchg
mov
or
movsl
lods
or
movsl
cmp
lret
push
mov
fsubrl
mov
cmp
jbe
fstps
outsb
ret
jnp
sti
cli
push
aad
fsubrl
int3
clc
imul
mov
aad
jecxz
inc
push
or
lds
xlat
fld
dec
pushf
ret
aam
dec
and
add
test
mov
cmpsl
nop
aad
cmp
pop
and
aaa
dec
lret
scas
ljmp
clc
fsqrt
mov
xlat
int3
add
test
lret
push
sub
test
inc
mov
fcomp
test
call
inc
sub
jnp
lret
outsb
mov
mov
stos
ss
sti
xlat
lods
stos
and
stc
fsubrl
test
cmp
rorb
imul
or
cmc
lret
mov
dec
mov
ja
call
or
or
or
call
cmp
cmp
outsl
ficomps
sub
cld
test
cmp
fisubrl
enter
sub
mov
mov
sti
mov
cmp
fisubs
lret
or
mov
mov
mov
in
cwtl
lret
int
or
aam
mov
stos
dec
xchg
adc
jmp
scas
fisubrl
mov
stos
mov
push
xor
insb
pop
dec
mov
xchg
cmp
hlt
test
jo
test
mov
pop
push
cld
fldt
xor
in
movsb
cmp
stos
mov
jne
cwtl
mov
mov
lret
sbb
add
cmp
jnp
mov
adc
jne
jmp
fcom
mov
and
sub
jmp
push
xchg
ljmp
pushf
popa
push
fldenv
pushf
fcompl
cmp
xor
mov
sub
fcmovnb
adc
sub
sub
xchg
scas
cmp
in
stos
ljmp
dec
mov
ftst
dec
xchg
pop
mov
sub
in
mov
out
cmp
cmp
push
mov
mov
cmp
mov
scas
out
faddl
sub
lods
ss
pop
pop
inc
stos
push
sub
and
sti
das
movsb
dec
ret
pop
jnp
mov
aas
mov
or
sub
cmp
push
rcrb
fistpll
pushf
pop
std
mov
inc
mov
push
push
imul
cmp
mov
clc
stos
xor
shlb
push
add
sti
enter
test
xchg
xlat
jns
mov
addr16
movsl
dec
jmp
push
stos
clc
enter
mov
add
mov
cmp
clc
pop
mov
cli
int
sub
cltd
testl
call
shrl
jmp
pop
jmp
movsl
sub
fcom
xor
lret
adc
in
icebp
std
or
cwtl
cmp
mov
jecxz,pn
sbbl
testl
mov
jb
add
cwtl
cmp
inc
out
cmp
lret
sbb
fwait
clc
pop
inc
stos
mov
sub
stos
test
inc
cmp
data16
push
mov
enter
cmp
sub
mov
inc
mov
fmull
inc
cmp
xchg
shrb
jns
jnp
lret
jg
ja
into
jle
imul
cmp
xchg
pushf
mov
outsb
cmp
mov
cmp
ffree
cmp
cmp
test
mov
test
sub
cwtl
dec
dec
mov
ja
rorl
fsubrs
sub
movsb
fstps
xor
mov
adc
cmp
jns
imul
call
mov
mov
sbb
sub
or
dec
cli
sbbl
aad
sti
mov
jae
adc
mov
ret
sub
enter
fcomps
mov
cmp
cmp
cmp
mov
data16
adc
xlat
lret
jnp
out
jae
or
jecxz
and
movsl
jmp
fwait
clc
and
in
add
mov
inc
leave
or
jbe
imul
xlat
lods
outsb
inc
mov
mov
imul
enter
sub
sbb
sub
mov
cmp
and
leave
cmp
xchg
iret
dec
ret
mov
sbb
sbb
popa
shl
clc
imul
stos
cmp
in
lret
sbb
cmp
mov
cltd
dec
pop
push
jmp
outsb
adc
cltd
rcll
cmp
cmp
ss
lret
int3
push
leave
push
or
fcomi
mov
data16
or
loop
sti
into
cmp
mov
in
aam
inc
xchg
movsl
outsb
int3
fwait
dec
sbb
mov
lods
mov
jp
pusha
scas
test
xchg
jnp
mov
dec
sbb
add
fsubl
inc
roll
cmp
lods
adc
mov
mov
inc
int3
cs
cwtl
mov
lret
or
sub
mov
shrl
cli
mov
mov
clc
cltd
enter
sbb
push
out
lret
fsubrs
mov
cmp
inc
cmp
inc
mov
xlat
xchg
ret
sbb
cs
sub
call
test
mov
or
movsb
or
fldcw
push
pushf
mov
lret
mov
sub
ret
js
stos
push
enter
loopne
das
loopne
push
imul
pop
xor
pop
jecxz
inc
cli
jmp
mov
dec
pop
in
out
insb
pop
idivl
mov
in
mov
stc
movsb
fldt
mov
or
dec
sbb
push
xor
inc
mov
cmp
jo
or
stc
fcmovb
sub
stos
sti
test
rorl
aas
xor
mov
pop
cmp
cmpsl
push
lcall
int3
cltd
cmp
test
in
popf
test
clc
cld
cld
ss
sub
cmc
lock
cmp
outsb
jmp
mov
dec
lret
scas
cwtl
or
lret
mov
dec
adc
int
enter
push
int3
test
sbb
pop
jns
clc
sub
shl
mov
lret
das
adc
xor
sub
fnstcw
lahf
mov
jmp
imul
pop
dec
dec
int3
inc
sbb
or
xor
test
pop
stc
or
mov
mov
inc
add
mov
mov
fidivrl
mov
mov
inc
dec
outsb
cltd
inc
lret
popf
sub
stos
test
jmp
test
cmp
test
lahf
fbld
dec
int3
push
cmp
enter
cmpsl
cmp
inc
imul
test
adc
fwait
dec
stos
cmp
or
cltd
cmp
test
and
aas
loop
jae
pusha
xchg
inc
imul
in
in
mov
scas
xchg
sti
lret
pop
imul
in
xorl
add
stos
pop
lea
cltd
sub
imul
ljmp
stos
pop
jmp
sti
push
cld
lods
sub
mov
push
imul
loopne
cmpsl
cmp
fwait
pushf
mov
lret
jmp
test
ficompl
dec
mov
jns
adc
sbb
in
cmp
scas
sub
fldt
imul
pop
push
cmp
or
fwait
cld
jecxz
aad
mov
rorl
mov
or
jno
sub
mov
dec
dec
sub
shlb
sbb
ss
jnp
pop
jns
mov
lea
dec
dec
sbb
mov
stc
inc
ljmp
sub
shr
scas
cmp
mov
hlt
cld
je
pusha
mov
in
mov
pop
pop
dec
jbe
mov
test
mov
call
and
ljmp
sti
pushf
call
sub
sub
jmp
mov
stos
into
mov
sbb
jne
cltd
pop
call
inc
leave
fnstcw
cmp
movsl
mov
std
es
jmp
mov
cmp
cwtl
cld
lods
mov
stos
test
sbb
jmp
push
adc
mov
das
das
mov
xor
cld
sbb
stos
mov
imul
xchg
fildl
mov
dec
lret
cmp
jo
ja
pop
xchg
sarl
imul
sub
lret
cmp
sbbb
enter
mov
lods
mov
jno
stos
bound
jecxz
xchg
adc
cwtl
lret
mov
cmp
xlat
sbb
lcall
ljmp
cld
imul
sub
dec
int3
xchg
inc
and
enter
lret
mov
fdivrl
jns
cmp
sub
push
and
sub
icebp
dec
jnp
outsb
imul
sti
mov
test
dec
loop
fsubl
sub
mov
xor
cmp
and
pop
cmp
sbb
mov
jnp
xor
sub
mov
mov
lcall
sti
cli
pop
outsb
sub
sbb
std
enter
lds
fcoml
cmp
sbb
mov
lret
ret
add
add
adc
enter
and
enter
movsl
mov
imul
or
pop
dec
cmp
fisubrl
cs
mov
sbb
pop
fwait
test
imul
and
sbb
ja
mov
clc
mov
sbb
cwtl
stc
imul
sub
add
pop
mov
xchg
or
sbb
mov
mov
sub
test
mov
push
lods
stos
shll
dec
cwtl
movsb
stos
or
loop
xor
lret
sub
daa
addr16
pusha
clc
imul
mov
clc
movsb
cltd
jne
jp
mov
xchg
dec
inc
sahf
and
mov
xchg
lret
cmp
mov
rolb
dec
mov
scas
stos
or
cwtl
xchg
or
jnp
and
ja
scas
jle
fbld
in
sub
mov
sub
fimull
loope
and
sbb
fldt
mov
add
adc
cmp
subl
cmp
or
dec
mov
popa
sbb
pmaxsw
imul
pop
lret
or
ljmp
sbb
fstpl
sub
clc
add
movsl
mov
cltd
sbb
pop
fimull
adc
mov
sbb
mov
adc
mov
enter
xor
sub
jns
dec
stos
mov
inc
cli
fwait
clc
fiaddl
into
sub
pusha
and
imul
and
and
stos
fwait
or
cmp
in
in
stos
das
pusha
pushf
and
push
jmp
jmp
jnp
mov
xlat
xlat
xchg
xlat
inc
movsl
pop
clc
out
mov
lret
test
inc
stos
test
daa
cltd
jecxz
ficompl
fs
push
lret
mov
or
stos
fsubr
or
dec
cmp
xor
xchg
mov
add
stos
and
fdivl
and
lret
test
mov
test
lret
mov
in
cmp
xor
cld
xor
or
ljmp
pop
test
and
lcall
pushf
jl
scas
or
mov
imul
int
cld
xor
xchg
dec
inc
movsl
sub
test
pop
into
mov
xor
sub
cmp
jnp
sub
jne
cmp
sbb
daa
push
in
ljmp
mov
xor
cwtl
ret
jecxz
lods
cmp
out
mov
dec
outsw
dec
push
mov
pop
fcmove
aad
fsubl
xlat
mov
sub
in
xchg
push
lret
in
mov
loope
test
pop
repz
sbb
sub
jmp
movsl
or
arpl
loop
mov
dec
outsl
pop
loop
mov
pop
cmp
mov
stos
sub
ja
popa
pop
les
mov
or
mov
lods
add
jnp
dec
pop
jmp
jmp
add
jnp
fmuls
dec
imul
cmp
lods
leave
pop
rol
scas
pusha
repnz
fidivrl
sub
pop
mov
inc
dec
jmp
sub
xchg
test
cld
push
and
lahf
pop
sbb
pop
call
pop
in
or
jns
cmp
dec
dec
lock
lods
push
lret
jmp
sub
adc
add
lds
or
xlat
out
jmp
xchg
jg
int3
dec
adc
sbb
test
xchg
scas
cs
adcb
mov
test
fcoml
sub
test
pushf
scas
into
sbb
dec
in
cmp
cwtl
lods
add
insl
fldt
pop
cmp
or
cmp
add
inc
and
mov
mov
pop
push
sti
stos
lret
xor
subl
int3
ljmp
adc
cli
fsubrl
jae
and
mov
roll
dec
imul
mov
push
clc
fildl
and
fcomps
jnp
in
int3
cwtl
into
cmp
push
movsl
std
enter
fsubrl
mov
mov
rcl
xor
cld
orl
xor
roll
mov
mov
cli
ljmp
mov
inc
jecxz
call
stos
cmp
jnp
pop
test
fidivrl
and
mov
pushf
enter
test
and
inc
and
pop
lods
stc
in
call
sarl
imul
addr16
dec
movsl
pop
xchg
daa
inc
add
fwait
adc
fdivl
pop
sbb
sti
mov
aam
or
jne
movsl
shrl
sbb
stos
push
or
cmp
sub
test
je
fcomi
pop
sbb
sub
icebp
sbb
test
cld
inc
or
call
js
lcall
add
and
sbb
ss
mov
mov
neg
pop
sti
in
int3
cld
sarl
lods
mov
mov
neg
in
jnp
fstl
and
stos
ja
jmp
adc
xchg
stc
dec
mov
dec
jecxz
mov
dec
fidivl
sub
dec
aas
mov
or
xchg
mov
or
roll
dec
popf
sbbl
pop
lret
clc
mov
pusha
mov
mov
fmulp
cmpsl
outsb
fwait
int
cld
leave
jo
pop
pushf
jecxz
sti
in
fsubrl
inc
mov
mov
std
ja
popf
push
sub
pushf
stc
dec
cmp
cs
imul
aaa
dec
xchg
lret
lea
xor
hlt
cld
cmp
icebp
jne
sub
shrl
imul
lods
push
sub
xchg
cwtl
sti
push
bound
sbb
sbbb
orl
sti
push
fdivl
mov
fisttpl
call
ret
jnp
les
pop
hlt
fadd
jne
pop
aaa
and
call
sub
mov
and
push
cmp
cwtl
pusha
imul
xchg
ret
xor
cs
jmp
stos
lods
fnstsw
shl
cwtl
pop
push
call
mov
xlat
imul
mov
pop
in
fwait
loope
mov
xchg
outsb
dec
inc
mov
cmp
imul
test
call
lcall
sub
lods
stc
xor
lds
mov
test
xchg
xchg
push
cmp
xor
dec
mov
or
mov
or
stos
pushf
or
test
sbb
mov
cmp
sub
imul
push
aad
cltd
fs
test
jnp
aam
stc
sub
mov
das
pop
mov
mov
emms
outsb
sahf
ss
and
mov
stos
jbe
jmp
movsl
test
push
pusha
xlat
cmp
mov
sub
clc
loope
enter
fwait
jns
in
mov
cmp
mov
inc
or
cmp
dec
into
ffreep
orl
jg
repz
or
or
jb
je
cmp
movsb
fwait
scas
sbb
das
jge
push
mov
and
and
ljmp
pop
mov
stos
mov
dec
fisttpl
mov
sub
cmp
sub
gs
stc
adc
aad
inc
decb
xchg
jge
sarb
sbb
sub
stos
subl
cs
or
das
push
jns
leave
jmp
pop
jmp
stc
neg
pop
jecxz
mov
sub
sbb
or
test
pop
fwait
mov
dec
lods
stos
dec
mov
scas
movsl
and
jne
cld
dec
lret
cbtw
mov
clc
mov
mov
icebp
add
fdivr
test
or
stos
cltd
leave
dec
sub
cmp
cmp
or
dec
mov
jl
test
test
fstps
jmp
mov
jmp
scas
push
movsl
sbb
imul
in
pop
sub
lret
lds
mov
int
sub
sub
lret
test
xor
sub
out
in
mov
xlat
or
fldpi
gs
out
add
movsl
imul
call
dec
fbld
dec
leave
std
ds
sub
add
sub
je
and
cld
dec
cs
jb
xchg
xor
mov
out
jne
mov
sbb
movsb
cmp
push
ss
dec
inc
sub
in
and
js
test
loop
pop
dec
hlt
daa
xchg
mov
jnp
xorl
movsl
lret
fwait
mov
sub
cld
cmp
testb
fsubrl
or
addr16
cmp
sbb
cmp
lock
ss
imul
rorl
pop
sti
jns
mov
or
dec
punpckhbw
lds
mov
fisttpl
lock
call
das
sub
outsb
lods
xor
push
sub
lret
jle
mov
call
loopne
aad
mov
dec
data16
lods
cmc
movsl
fcompl
cmp
dec
cmp
adcl
cmp
or
stos
sub
int3
mov
mov
and
fcomp
scas
adc
push
pop
test
addr16
lret
or
out
pusha
cmp
mov
dec
cmp
push
int3
stos
enter
mov
dec
pop
das
data16
lcall
sub
rcrl
add
ja
cmp
xchg
stc
xchg
xor
imul
cltd
scas
stos
fstpt
lret
pop
cli
jns
outsl
gs
push
scas
dec
icebp
and
or
fstpt
push
stos
jmp
xchg
mov
cli
lret
lret
sub
adc
push
cmp
mov
scas
or
clc
js
mov
and
or
cli
inc
or
jbe
jl
add
cmp
dec
aas
cmp
xor
ljmp
dec
sub
stos
mov
sub
cmp
push
dec
or
int
lret
fildl
or
jmp
movsb
mov
pop
push
stos
cmp
out
mov
cmp
adc
mov
sbb
std
sbb
in
les
cmpsb
mov
lret
pushf
scas
lcall
adc
lret
pop
shrl
push
fcoml
test
aad
xchg
or
xchg
addr16
arpl
and
mov
stos
mov
xchg
mov
sub
add
int3
shrl
lret
imul
cmp
fiaddl
fcmovne
dec
fnstenv
adc
jns
push
mov
aad
test
xchg
cmp
jmp
fs
jge
leave
sbb
mov
or
or
fadd
idivb
rcll
lahf
and
test
imul
sti
mov
pushl
int3
jl
and
mov
dec
popa
cmpl
popa
in
lret
push
mov
outsl
pop
inc
movsl
clc
mov
icebp
and
jnp
gs
mov
xchg
leave
in
cmp
movsb
jnp
cmp
cli
jl
clc
jmp
insb
std
adc
sarb
dec
stos
cltd
pop
push
addl
adc
lret
sub
and
imul
inc
push
adc
jns
pop
aad
pop
popf
and
or
mov
cmp
cld
pushf
cmp
cs
into
sub
sub
pop
imul
cltd
sti
loopne
ss
jbe
ljmp
mov
adc
mov
lods
sbb
aaa
pop
cltd
in
negb
pop
mov
sub
test
clc
cli
cld
shr
ret
pop
lret
mov
and
mov
dec
cmp
pop
adc
fwait
mov
cmpb
sub
mov
arpl
jns
stc
dec
push
roll
stos
in
into
jmp
ljmp
cmp
pushf
sbb
mov
jne
or
ljmp
fwait
test
lcall
jmp
xor
dec
xlat
insl
jnp
sbb
stos
mov
mov
cmp
test
cs
add
inc
ja
pusha
out
daa
cmp
dec
jmp
sbb
push
in
pop
ret
in
int3
sub
add
imul
enter
cmp
pop
sbb
testl
lret
sti
rol
mov
imul
sub
or
aam
push
lods
xchg
and
enter
outsl
fsubrl
mov
mov
mov
movsl
xchg
sub
test
dec
enter
dec
and
cmp
dec
ss
ljmp
popf
sub
lods
outsl
loop
push
in
xor
sti
sub
fwait
xor
lret
dec
lods
push
ja
pushf
mov
pop
xlat
scas
clc
jbe
mov
and
cmp
stos
scas
ss
imul
push
or
add
cmp
mov
popf
inc
ljmp
sub
test
sti
cmp
mov
pop
lds
call
ljmp
int3
and
lods
or
arpl
push
int
pop
imul
push
or
fsubrl
loope
xor
sub
dec
mov
stos
int3
test
movsb
inc
enter
mov
test
or
mov
aad
cmp
outsb
lret
stos
mov
push
dec
push
jmp
enter
pusha
popf
imulb
pop
fisubrl
scas
shrl
fsubr
mov
outsb
sbb
mov
mov
dec
add
dec
and
outsl
cmp
fistpl
aad
mov
popf
aad
stos
sub
dec
sub
mov
adc
sti
cltd
fistpl
test
fisubrl
cmp
mov
lret
pop
pushf
cmp
jmp
pop
dec
xchg
mov
lods
popf
sub
out
mov
ljmp
cmp
adc
fdivl
imul
jnp
lcall
clc
mov
test
fxch
lcall
mov
sbb
enter
fldt
xchg
mov
clc
imul
xor
sbb
inc
xchg
test
xor
iret
fucomp
push
pop
and
cmp
jmp
popa
in
divb
cmp
stc
mov
fnstcw
add
roll
jmp
adc
fisubrl
rcll
add
jbe
ljmp
cld
xor
pop
adc
cmp
mov
jmp
sub
leave
inc
jnp
pop
jbe
lret
arpl
out
push
lret
nop
adc
gs
mov
mov
stc
push
fdivr
shll
and
inc
imul
aad
mov
mov
sub
imul
pop
cmp
test
adc
jnp
cmp
daa
jo
jne
cmp
cmp
lcall
cmp
pop
stos
mov
test
adc
pushf
dec
clc
leave
sub
pop
leave
test
lock
push
je
dec
cmc
adc
cmp
sub
stos
imul
fmull
push
sub
cwtl
scas
fidivrs
jnp
lods
mov
cli
sub
inc
or
fstpt
dec
inc
imul
sbb
clc
pop
jmp
stc
dec
mov
hlt
lods
ret
mov
in
mov
aaa
imul
inc
cs
movsb
dec
push
mov
fidivrs
addr16
and
or
cmp
xchg
lret
or
ror
cs
sub
aaa
cs
cltd
out
ljmp
cmp
imul
lods
mov
ljmp
test
mov
cmp
adc
cmp
lret
cmp
sub
pop
sub
or
mov
sub
std
les
ljmp
icebp
fwait
sub
outsb
popf
mov
push
pop
inc
movsl
cmp
test
icebp
mov
mov
clc
cmp
gs
inc
das
mov
test
pushf
int3
test
ljmp
dec
or
fmull
jbe
ja
mov
call
xchg
dec
mov
and
call
pop
mov
inc
jae
scas
movsb
mov
lods
mov
movsb
pusha
ficoml
mov
cli
clc
sti
test
sub
testb
imul
pop
stos
movsl
push
mov
call
jbe
ljmp
cltd
cld
cmp
jns
and
jmp
fwait
sub
and
pop
or
lahf
test
lds
call
int3
cmp
imul
scas
in
cmp
xchg
fisttps
lea
cmp
dec
test
jmp
loopne
fdivs
test
cmp
add
in
add
pop
aad
cmp
loope
popf
pop
or
push
mov
mov
in
cwtl
or
mov
mov
mov
shrl
test
aas
mov
imul
popf
adc
cld
lcall
dec
imul
xchg
negb
lods
adc
mov
and
leave
cwtl
lcall
rol
ret
adc
xor
test
cld
stos
cmp
jmp
stc
sub
lea
jp
hlt
test
bound
int3
sub
mov
sub
adc
adc
dec
lcall
and
xor
fxch
adc
mov
xor
sub
call
sub
or
cmp
push
orl
jbe
das
pop
in
add
cs
dec
mov
lret
int3
movsb
repz
popa
cli
cmp
in
sub
sub
cwtl
fdivrl
pop
push
cld
mov
and
cs
sbb
ss
out
aad
ret
push
and
jnp
dec
mov
popa
pushf
fimull
jmp
add
cld
cmp
sub
enter
jle
stc
sub
dec
lcall
outsl
cmpsb
fisubl
sti
fsubrs
call
or
js
fwait
imul
lods
dec
cmp
lret
int
mov
push
stc
sub
fiaddl
mov
push
pushf
sub
ljmp
fldcw
cmp
pusha
push
fyl2xp1
or
lret
clc
sub
out
outsb
mov
or
int3
or
dec
inc
out
pop
adc
mov
cmp
lods
mov
or
jmp
hlt
mov
int
lods
mov
mov
xchg
pop
imul
mov
loop
mov
xlat
mov
movb
jmp
sub
adc
inc
cmp
sub
stc
int3
or
aad
and
jmp
and
sbb
lods
sbb
add
inc
sub
dec
xor
sti
popa
jmp
enter
int
ficompl
jae
shll
mov
jnp
rorl
inc
sbb
in
cmc
js
mov
enter
cmp
cs
fwait
push
js
into
fstpt
xor
sti
shr
rorb
subb
rcrl
xchg
popf
hlt
mov
and
sti
push
jns
popf
cmp
mov
enter
mov
test
sarl
or
lea
in
aad
int3
or
loope
jbe
jp
int
sbb
test
jmp
jb
mov
sbb
das
mov
or
cwtl
jns
rcrl
push
imul
fwait
test
sbb
cmp
popf
cli
xchg
xchg
lods
xor
stc
arpl
jbe
stos
sub
cmp
pop
fdivl
add
jmp
in
mov
repnz
movsb
sub
cld
jns
and
xchg
dec
imul
scas
add
mov
add
testb
leave
mov
mov
cltd
or
push
mov
in
shrl
pop
fwait
int3
push
pop
lods
dec
jbe
cmp
inc
cmpsl
mov
out
cmp
cmovp
mov
pop
sub
cmp
dec
push
or
cmpsb
xchg
dec
jmp
out
rol
mov
mov
sbbb
hlt
out
sub
test
lods
test
stc
xchg
dec
or
stos
xchg
les
adc
cmp
and
push
mov
jmp
lcall
lea
dec
dec
fwait
inc
ja
imul
cltd
inc
loope
or
sub
mov
pop
or
jnp
inc
pusha
and
cltd
ret
push
stos
xchg
pop
mov
inc
xchg
xchg
or
mov
sti
lret
jne
mov
ret
mov
adc
mov
sbb
and
jns
cmp
pop
mov
mov
cltd
xchg
shlb
test
in
mov
pop
inc
mov
sysenter
adc
int
jle
fisubl
mov
cld
cmp
pop
in
sbb
mov
clc
inc
dec
loop
clc
imul
mov
sub
and
pop
lds
pop
call
sub
jns
jmp
and
imul
enter
or
adc
shr
xchg
mov
cs
sub
in
pop
dec
fcompl
call
mov
leave
mov
jne
dec
push
cmp
pop
push
or
stos
fs
lods
in
cmp
sub
sub
jmp
sbb
imul
clc
pushf
ljmp
mov
dec
in
ljmp
xor
and
fdivrl
mov
cli
enter
lods
pop
fmull
and
sub
cli
mov
mov
cli
jnp
dec
pop
jns
and
inc
cmp
cmp
adcl
frndint
cltd
or
xor
pusha
icebp
daa
std
push
push
loope
dec
outsl
fldt
push
ja
imul
jns
cmp
xor
pop
or
or
cld
mov
cmp
imul
ss
adc
stos
lret
ja
stos
mov
mov
js
popf
pop
cmp
in
cmp
mov
stos
rcrl
dec
sbb
cwtl
sbb
cmp
lret
insb
popf
lcall
dec
clc
sub
stos
test
test
fwait
cli
testb
test
add
mov
and
push
in
mov
and
cmp
sub
fstps
out
mov
jne
je
cmc
mov
ljmp
int
jns
xor
or
adc
mov
cmpl
fcomps
pushf
stos
and
cli
jns
or
sub
mov
cld
int3
mov
mov
insb
fstps
rcrl
lcall
cmp
mov
jnp
and
cli
cmp
cmp
cmp
mov
xor
hlt
push
adcl
test
int
stos
leave
aad
mov
cli
or
inc
mov
jmp
fmul
cmp
mov
mov
fsubrl
dec
pop
stos
inc
pop
sub
jl
ret
idivb
sbb
stc
cmp
push
adc
sub
lods
adc
test
popa
pop
jb
xchg
test
fucomip
jmp
sbb
push
fcmovbe
mov
sti
frstor
xlat
ljmp
xlat
and
mov
or
outsb
in
aam
pop
xor
leave
setns
sbb
mov
out
or
and
test
lret
cltd
in
fadd
test
cs
cmp
xor
mov
sub
imul
fcomps
mov
mov
dec
stos
in
fwait
mov
movsl
sarl
pop
mov
mov
add
mov
loopne
ret
jle
jns
sub
mov
fsqrt
imul
imul
mov
sti
scas
or
mov
imul
mov
out
adc
sub
mov
lret
jns
and
lcall
sub
mov
popf
dec
pop
ret
lods
test
clc
mov
lods
imul
cmp
dec
fildl
lea
mov
test
or
jns
lcall
flds
mov
jmp
xor
cmp
mov
lret
shll
cli
test
sub
dec
jmp
pop
and
out
jnp
push
and
test
sbb
stos
imul
rorb
int3
sub
mov
sub
call
clc
daa
dec
and
mov
lods
mov
cltd
sbb
dec
push
bound
cmp
std
jae
lea
adc
add
lcall
call
adc
jmp
rclb
pop
cmp
movsb
lret
insb
cmp
cmp
outsb
test
jnp
stc
lcall
cltd
movsb
inc
les
aad
sti
fwait
sub
shrl
sarl
stos
in
push
push
mov
ss
movsl
imul
sub
mov
pop
faddl
in
pop
mov
mov
imul
lcall
ror
pop
mov
stos
mov
cltd
dec
sbb
lret
fdivrl
dec
fistpl
jg
xor
sub
mov
jl
mov
cmp
pop
movsl
pop
mov
cmp
ret
lcall
in
cld
sar
cmp
or
insb
notl
or
sub
adc
stos
mov
hlt
xor
or
cmp
cltd
mov
mov
loope
int
cmp
icebp
pushf
mov
dec
in
lods
fbstp
fs
jae
outsb
ljmp
dec
dec
ror
mov
movsl
sbb
jnp
sub
mov
fsubrs
sbb
ljmp
cwtl
cmp
cmp
inc
jns
in
jmp
cltd
push
in
dec
mov
jnp
cmp
test
jne
or
fwait
outsl
pop
dec
fimull
cmp
mov
stc
stos
clc
jg
clc
xor
loope
sbb
movsb
mov
mov
push
inc
jno
cs
push
xor
cmp
pop
dec
sti
imull
cmp
push
mov
cmp
add
mov
lret
fcomps
cmp
push
jmp
dec
and
ljmp
xor
mov
pushf
imul
ss
sti
inc
push
int
push
mov
unpckhps
dec
jmp
push
and
mov
adc
sbb
add
int3
lods
cmp
shlb
dec
mov
imul
mov
lcall
mov
cmp
dec
pushf
enter
jns
call
xor
cmp
add
mov
or
mov
lcall
or
xchg
mov
test
cmp
fwait
sbb
or
jbe
xchg
or
lcall
jbe
cmp
mov
jbe
int
sub
flds
push
jnp
sub
stos
daa
cli
cmp
fldenv
enter
out
fbld
fistpl
mov
fsts
xchg
jbe
sbb
test
int3
sbb
jbe
imul
or
mov
cmp
test
lcall
call
mov
xor
jl
pushf
imul
jns
jmp
or
sbb
xchg
enter
shrl
imul
sbb
in
loope
cmp
sub
cs
mov
stos
fldt
sbb
xor
sub
sub
cwtl
lods
inc
idiv
lods
pop
mov
dec
dec
xchg
mov
or
mov
repz
sub
int3
and
pusha
sbb
flds
jae
xchg
ljmp
imul
mov
bound
pushf
test
sbb
add
fisttpl
ljmp
mov
fmuls
jge
int3
cmp
sub
test
arpl
pop
jmp
iret
sbb
aas
movsl
ror
test
push
or
pop
fldt
icebp
ss
lods
xchg
xor
xor
cmp
mov
push
popf
sbb
fstpt
lret
pop
leave
faddl
mov
jmp
pop
cmp
into
xchg
pop
fwait
iret
mov
in
and
dec
dec
sub
mov
mov
pop
xlat
sti
dec
xlat
aad
lret
sub
mov
pushf
and
pop
add
push
int3
idivb
or
xor
xor
in
sahf
lret
xor
sub
lock
inc
add
sbb
enter
imul
outsb
cld
mov
loopne
ror
rcll
sbb
dec
xor
mov
and
flds
stc
pop
mov
int3
cld
pop
and
sub
pusha
or
mov
lods
xor
jne
dec
fisubrl
dec
mov
stos
leave
lret
mov
mov
sti
sbb
pop
dec
mov
jne
or
and
dec
sub
loope
outsl
and
cltd
xor
jno
daa
fs
dec
ror
mov
mov
cmp
fsts
sub
sbb
or
sub
scas
rorb
sub
cmp
mov
ljmp
cmp
fdivl
jo
push
aad
mov
cmp
js
ljmp
fcompl
outsb
sbb
sbb
pop
mov
xor
mov
or
mov
sub
cwtl
ret
pop
test
xor
fadds
arpl
stos
imul
imul
sub
jae
dec
mov
sar
mov
outsb
imul
sbb
std
std
add
rcll
dec
stc
cmp
movsb
stos
cwtl
push
fidivrl
inc
cmp
xor
and
stos
jmp
test
pop
call
mov
fmul
fnstcw
mov
in
dec
pushf
popf
xchg
jns
outsb
cwtl
test
scas
test
jne
mov
pop
les
lret
sub
mov
cmp
jmp
push
sub
and
add
or
jae
dec
sub
leave
mov
cmpsb
add
mov
dec
or
cmp
pop
popf
sbb
push
cmp
js
mov
inc
mov
repnz
cwtl
addr16
stos
cmp
mov
gs
pop
lret
fadd
dec
push
or
xor
inc
aas
imul
fistpl
pop
ljmp
jbe
xor
mov
cmp
test
dec
stos
or
sub
mov
cs
enter
rcr
jne
inc
roll
inc
or
sub
lods
incb
and
and
cmp
mov
orl
sbb
mov
mov
test
popa
xlat
test
lods
pop
stos
mov
test
mov
or
aaa
movsl
sahf
in
adc
mov
cmp
ljmp
std
xor
xor
push
cmp
cmp
sub
mov
pop
xor
stos
jne
cld
jmp
test
enter
xlat
jns
mov
or
cmp
cwtl
decl
cmp
jne
and
cltd
cmp
dec
lret
mov
xchg
scas
idivb
call
xchg
sub
cmp
imul
in
xchg
das
mov
or
stos
int3
or
inc
int3
add
pop
mov
clc
lods
mov
pop
dec
cmc
push
sbb
mov
repz
xor
pop
add
mov
bound
lret
or
idivb
dec
std
adc
fs
stc
inc
in
mov
clc
icebp
lea
jnp
lret
inc
leave
pop
pop
dec
xor
sub
test
fdivrl
mov
add
xchg
int3
clc
or
jns
cli
std
inc
lcall
mov
add
int3
leave
mov
in
mov
or
xchg
sub
inc
fmuls
jnp
inc
and
inc
lods
or
xchg
sub
fists
mov
imul
mov
cmp
lds
ljmp
or
roll
cli
xchg
mov
mov
dec
mov
mov
jmp
cmp
sbb
ja
into
leave
fcoms
pusha
push
std
jno
xor
ljmp
mov
cmp
dec
mov
negl
imul
dec
mov
cmp
cli
cwtl
sti
or
push
test
stos
xorb
mov
push
push
mov
sbb
idivb
ss
push
cmc
mov
mov
call
sub
enter
out
sti
sub
cmp
cmp
movsl
mov
sbb
and
loop
or
pop
sbb
mov
imul
dec
pop
inc
and
jmp
call
jmp
xchg
enter
mov
loop
mov
cmp
jmp
push
clc
xchg
inc
mov
ljmp
mov
fcmovnbe
cwtl
inc
sub
push
call
clc
mov
fildl
dec
inc
ffree
in
lock
arpl
stos
clc
stc
cltd
or
adc
add
xchg
rolb
mov
lcall
stos
pop
lods
cmp
cld
imul
cmp
and
lret
sub
cli
daa
stos
sub
stos
or
xlat
cld
movsl
cmp
lea
lret
sbb
movsb
jne
faddl
rclb
mov
cmp
cld
enter
mov
push
dec
ss
stos
aad
mov
cmp
shll
push
stos
pop
fwait
pop
imul
mov
icebp
push
pop
test
stc
jnp
cmp
sbb
mov
test
sub
je
cmp
lret
cmp
icebp
pextrw
jnp
push
pop
jmp
outsb
cli
and
dec
out
inc
fistpl
dec
mov
int
jmp
sub
lcall
sbb
call
call
stos
stc
ljmp
outsl
popa
and
test
or
dec
xor
test
pop
cs
imul
stos
mov
fsubrs
jmp
cltd
jno
imul
scas
lds
add
sbb
stos
adc
fs
ror
jecxz
mov
into
mov
fnstcw
leave
cmp
jmp
sub
ficompl
and
inc
push
std
mov
cmp
sbb
or
jle
mov
in
cmp
mov
sar
push
or
test
sub
cmp
add
adc
xchg
stc
pop
pop
jmp
xchg
roll
ss
dec
lcall
cmpsl
sbb
mov
mov
lret
fwait
mov
sub
testl
cwtl
jns
jp
dec
fcmove
lcall
ljmp
sbb
js
in
int3
sbb
xchg
cmp
and
sbb
cwtl
pushf
dec
mov
test
enter
and
dec
ljmp
pop
jmp
or
pop
stc
xor
pop
xchg
cmp
mov
imul
mov
push
mov
test
clc
inc
adc
jne
pop
or
test
adc
cmp
cmp
data16
xor
cmp
inc
dec
xor
imul
sub
idiv
and
mov
or
pushf
sbb
pop
leave
cs
imul
data16
in
or
xchg
in
scas
mov
int3
adc
imul
and
and
inc
fnstcw
push
test
lods
test
imul
sti
inc
fmull
inc
ljmp
mov
inc
and
dec
fldcw
or
ss
mov
adc
leave
jnp
mov
les
sub
mov
fldcw
xor
cli
pop
test
or
movsl
test
mov
dec
sbb
sub
pop
cmp
imul
test
dec
imul
stos
lods
adc
movsb
xor
jmp
mov
cmp
ljmp
ss
cld
fwait
inc
leave
or
or
int
cmp
movsb
dec
scas
xor
jmp
sarl
cmp
adc
and
arpl
cld
fdivrl
fisubrs
imul
pop
sub
shlb
fcomps
imul
ljmp
inc
and
cmp
sub
cmp
pushf
imul
jo
add
ficompl
fsubr
iret
hlt
sub
lret
cli
arpl
clc
test
ss
fidivrs
sub
lods
in
add
test
or
mov
aad
stos
xchg
pop
lcall
pop
pop
test
xor
dec
lret
sub
stos
and
je
cmp
mov
cwtl
cld
clc
push
addr16
lods
std
jne
sub
xchg
mov
inc
sarb
cmp
leave
adc
mov
sbb
lret
sbb
je
shrl
xchg
leave
sbb
mov
sbb
cmp
cwtl
sti
test
cmp
add
adc
fcomps
pop
mov
or
enter
xchg
sbb
call
cmp
mov
pop
pushf
leave
imul
int
mov
dec
dec
sub
pop
aam
sbb
cmp
hlt
testl
add
sbb
or
fsts
fsubrs
xchg
fwait
pop
clc
icebp
mov
or
pop
and
aas
pusha
in
dec
adc
cltd
jmp
pop
stos
pushf
cld
mov
sub
call
and
mov
cli
scas
ds
jle
push
dec
fs
fmull
jns
in
shr
cmp
cld
lods
jbe
jnp
mov
dec
push
stos
pop
testb
push
cmp
or
fmul
stos
sub
pop
sub
dec
push
cltd
fadds
cld
lods
sub
ss
std
mov
in
ljmp
shr
and
or
sub
cmp
std
insl
imul
add
inc
cwtl
jmp
cmp
xor
cmp
dec
test
cmp
mov
or
mov
lret
stos
arpl
test
pop
fnstcw
cmp
sub
in
jnp
cmpl
cmpsb
xlat
cmp
cmpsl
xchg
outsl
in
mov
pushf
mov
and
or
adc
mov
test
mov
sub
cltd
clc
jmp
mov
cmp
pop
jne
sti
lret
and
xor
xchg
fcomps
fistpl
and
mov
and
stc
push
mov
mov
or
sbb
lods
sbb
addr16
pop
and
fadds
test
cwtl
pop
push
scas
jmp
dec
or
lret
pop
pop
pushf
xor
in
jecxz
jb
xchg
aad
popf
cs
outsl
mov
and
sub
int
fsubrs
pop
mov
push
xchg
scas
push
sbb
mov
cmp
enter
mov
imul
pop
das
movsb
in
jns
cmp
pop
dec
in
mov
pop
int
mov
add
mov
cmp
fdivrl
test
in
dec
and
mov
sarl
mov
dec
mov
fisubrl
cs
mov
rclb
dec
sub
cmp
lret
and
lods
sub
fucomip
imul
lret
gs
mov
sub
jmp
cmc
stos
cmp
cmp
dec
xchg
int3
push
mov
add
inc
cwtl
stc
mov
xor
lret
and
dec
enter
dec
mov
imul
mov
adc
push
dec
sti
pop
arpl
lret
mov
aas
mov
stos
xor
sub
lds
or
pop
mov
test
stc
xchg
hlt
cmp
mov
fwait
push
mov
ljmp
mov
sbb
pushf
mov
fisubl
addr16
lds
pop
lcall
inc
stos
jb,pn
stos
aam
fldenv
fs
cs
adc
cwtl
lret
and
idivb
cmp
dec
add
ljmp
pushf
jnp
mov
mov
ret
mov
cli
pop
mov
mov
lret
stos
scas
stc
sbb
push
movsl
inc
fstps
mov
mov
cmp
jae
adc
jmp
and
test
aad
cmp
divl
cmp
test
inc
cmp
loopne
pop
push
movsl
push
xchg
sub
fistpll
sti
flds
dec
sub
lret
sub
push
cs
movsl
cmp
jecxz
dec
xchg
out
mov
jns
ss
sti
jbe
mov
pop
aad
dec
pop
sub
stos
cli
adc
lret
stos
test
testb
pushf
movsb
jg
inc
mov
jmp
cltd
xchg
pop
outsb
sbb
insl
lret
cli
lcall
in
push
iret
jb
fldt
andb
leave
test
mov
hlt
pop
cmp
mov
sbb
rcr
sti
outsl
mov
sar
sub
in
fstpt
int3
cmp
dec
int
lret
dec
call
cmp
mov
cli
test
fdivrl
fwait
pop
cmp
jle
in
lahf
popf
ja
leave
push
mov
sbb
and
imul
movsl
lock
or
jbe
leave
stos
sub
test
je
repz
enter
lods
fcomps
dec
and
mov
popf
rorb
push
imul
dec
in
or
int
fisubrl
cmp
sti
dec
cs
adc
jae
subl
push
cltd
mov
test
frndint
dec
or
or
mov
mov
test
inc
lods
jnp
insb
xor
dec
push
mov
dec
lcall
fucom
in
pop
xchg
int3
dec
test
sub
into
xchg
mov
jne
fwait
inc
clc
add
mov
pushf
imul
mov
mov
stc
cmp
imul
inc
add
pop
es
mov
pop
inc
mov
sub
pushf
dec
leave
sarb
dec
lret
out
mov
or
pop
xor
ljmp
loopne
mov
jns
repz
mov
jnp
push
outsb
std
in
pop
dec
shrl
in
cmp
test
and
lret
stos
mov
cld
pop
inc
cmp
iret
pop
xchg
cmp
test
mov
cmp
or
push
fstpt
and
lret
cmp
jecxz
test
cmp
dec
or
popf
fcomi
iret
lds
xor
shll
scas
nop
xchg
ljmp
mov
cltd
test
fsubrs
adc
imul
adc
fnstcw
sub
mov
dec
pop
ss
xchg
jns
pop
test
xor
mov
xor
mov
cmp
clc
pop
adc
mov
stc
cltd
scas
and
ljmp
cmp
pop
lds
cmp
rcrl
and
jmp
leave
dec
jecxz
daa
mov
repz
movsb
or
stos
and
test
es
and
xchg
stos
dec
test
add
cwtl
clc
fsubs
lret
enter
cli
cmp
ljmp
lcall
aad
sbb
stos
xor
test
xchg
adc
sub
jbe
lcall
lahf
mov
fstpt
loopne
jbe
notl
mov
loop
push
add
mov
adc
ror
mov
jecxz
pop
and
stos
jmp
mov
dec
cmp
pop
add
sbb
jecxz
call
leave
cwtl
enter
cmp
aad
jne
and
jns
call
loope,pn
lcall
stos
adc
mov
or
sub
push
loop
lahf
movsl
ljmp
mov
decl
cmp
sbb
mov
lret
mov
fdivl
ja
jnp
dec
test
mov
leave
in
arpl
dec
popf
mov
jns
lret
shr
push
data16
movsl
cmp
test
movsb
ss
stos
lcall
cmp
imul
jns
aad
push
stos
mov
mov
cmp
imul
push
leave
cltd
pop
or
cli
jns
stc
in
sbb
mov
or
dec
cmp
lret
icebp
mull
fistps
adc
pop
cltd
mov
stc
cmp
fmull
push
dec
xor
stos
xchg
push
cld
mov
xchg
push
movsl
inc
fwait
jne
push
xchg
cmp
cmp
mov
cmp
pop
sbb
movsl
dec
or
sti
push
add
aam
std
push
sbb
push
popf
xor
dec
leave
mov
outsb
aad
dec
add
mov
mov
push
jl
jmp
or
lret
pop
int3
ljmp
cld
sub
dec
test
mov
imul
jecxz
cmp
and
sbb
push
push
cmp
imul
fwait
stos
push
sbb
push
xchg
mov
and
mov
cmp
stos
inc
jmp
mov
sbb
xor
and
fildll
push
xor
push
mov
sahf
or
jne
pop
jmp
mov
mov
and
dec
dec
in
mov
ljmp
and
push
decl
popa
addl
or
and
stos
sbb
xor
clc
test
outsb
sbb
mov
loope
lret
stos
sub
push
nop
xchg
in
cli
call
xor
stos
pop
test
stos
mov
mov
fsub
add
in
data16
push
popa
inc
or
inc
mov
dec
test
sub
mov
cmp
sbb
ret
mov
stos
rcll
cmp
pop
sub
sub
lods
mov
fsubrl
sub
call
dec
push
enter
inc
sub
movsb
les
xchg
rcrl
push
xor
sub
cmp
dec
testb
xchg
repz
cmp
stc
jmp
or
movsl
dec
leave
ljmp
adc
inc
cltd
cmp
cmp
and
cmp
inc
int3
in
xchg
jne
out
outsl
or
cwtl
fwait
sti
pop
clc
pop
dec
loopne
jne
dec
pop
bound
in
sub
pop
in
test
int3
lcall
popf
faddl
addb
lods
in
fisubl
mov
cmp
scas
pop
js
test
sbb
or
cmp
pop
mov
fcmovne
pusha
push
sti
fdivrs
mov
jecxz
adc
jns
mov
stos
iret
cmp
insl
es
lds
or
sbb
in
ljmp
in
les
stos
in
and
xchg
adc
pop
ja
mov
scas
out
xor
dec
imul
call
test
cmp
in
cli
cwtl
loopne
mov
icebp
and
fwait
push
jb
outsb
stos
idivb
clc
leave
outsl
test
mov
sub
pop
test
jl
nop
push
inc
dec
jmp
jnp
jnp
mov
mov
sub
stos
stc
negl
xor
aaa
cld
test
cs
stos
dec
mov
sub
lods
enter
sti
dec
jmp
or
call
repnz
mov
adc
in
cmpl
stc
fsubrl
into
imul
pop
push
add
dec
inc
testb
jmp
jns
imul
pop
test
mov
cmp
dec
aad
clc
jmp
lcall
fwait
cmp
sarl
mov
jmp
stos
dec
ljmp
mov
mov
sti
lret
test
fdivrs
mov
sbb
jbe
mov
mov
push
sub
pop
pop
mov
pushf
in
jo
leave
cmp
fdivrl
push
les
xor
pushf
dec
push
xorl
or
iret
sub
xor
outsb
dec
cwtl
dec
mov
mov
testb
es
sub
push
repnz
cwtl
lods
mov
adc
fidivrl
mov
subb
or
sub
or
pop
movsl
pop
or
cmp
or
cs
lods
xor
cmp
test
add
cmp
cmp
adc
or
cmp
lods
stos
lret
scas
push
out
aas
inc
cmp
rcr
fsts
pop
in
xchg
jbe
test
roll
inc
repnz
or
cmc
add
iret
jae
add
mul
xchg
movsl
test
pop
push
inc
or
cmp
movsb
mov
pop
adc
lcall
xor
lret
jns
push
xchg
out
lods
clc
cmp
or
outsl
cmp
jns
jmp
pushf
inc
xor
jmp
leave
and
pop
into
mov
sti
add
dec
std
out
or
stos
sub
cmp
pop
mov
stc
dec
repz
or
test
fsubrl
cmp
cmp
pop
or
movsl
dec
xchg
loope
test
inc
ljmp
inc
popf
sbb
in
cmp
xor
loop
sbb
xor
stos
scas
stos
sbb
out
insb
push
mov
fcmovne
or
aad
or
inc
inc
in
clc
sti
cmp
inc
cmp
mov
fmuls
inc
or
in
sub
lcall
dec
test
ja
mov
ss
testb
rorl
leave
and
stc
sbb
dec
push
scas
cmp
xlat
sub
sahf
push
idivl
push
mov
xchg
sti
ss
push
test
das
outsl
sub
movsl
cmp
pusha
push
mov
leave
sbb
shrl
add
mov
cltd
test
sub
mov
rcrb
or
mov
pushf
xor
add
mov
sbb
or
stos
lcall
push
clc
dec
mov
dec
les
or
mov
pushf
ret
jnp
in
add
scas
dec
hlt
cmp
mov
sbb
sbb
fwait
les
xchg
cs
sti
imul
leave
sub
pushf
xchg
sbb
inc
fldt
call
mov
test
sub
xlat
pushf
in
sbb
and
lret
push
shrl
xlat
test
in
cwtl
jmp
cltd
cmp
jns
insl
mov
clc
bound
and
sti
stos
adc
outsb
pop
leave
test
lcall
add
cmp
sbb
mov
cmp
out
imul
or
mov
stos
cmp
dec
xor
ror
push
xchg
push
test
mov
inc
sarb
outsb
mov
dec
int3
jmp
sti
add
adc
js
cmp
jns
lcall
cwtl
xchg
aas
cwtl
test
jmp
repnz
and
inc
stos
sub
pop
sbb
and
cmp
fdivrs
in
sahf
jle
jmp
cld
shlb
aas
dec
dec
mov
push
pushf
mov
in
jbe
icebp
mov
clc
mov
popf
mov
das
sub
push
arpl
sbb
mov
cwtl
and
test
pop
movsl
sahf
xchg
aaa
and
clc
pop
push
fsubrl
movsl
mov
dec
mov
fstpt
fisubl
pop
sub
dec
ja
enter
dec
jmp
sub
test
mov
add
sub
loopne
jbe
dec
mov
cld
fsubrs
out
cmp
and
imul
ljmp
std
aas
mov
in
lret
push
add
aas
fimull
xor
cmp
sub
stos
dec
lods
mov
fcomi
pop
pop
arpl
inc
arpl
dec
lcall
cli
scas
in
stos
mov
lcall
pop
add
dec
pop
pop
xor
leave
add
cwtl
or
insl
stos
jmp
mov
loopne
stc
aaa
sub
fsubl
in
mov
mov
dec
ja
jmp
clc
pop
fimull
cld
shrb
mov
in
lret
cmp
addb
xor
jp
clc
addr16
mov
lds
ss
cmp
das
xchg
pop
cmp
int3
inc
int
ljmp
adc
sbb
cs
test
cltd
aad
ljmp
iret
mov
dec
leave
cmp
in
sbb
sub
adc
subl
xlat
scas
push
and
mov
dec
push
stc
ljmp
mov
in
add
inc
lret
popa
idivl
or
call
cld
sub
in
sub
mov
mov
clc
popf
adcl
repnz
aad
cmp
jns
int
pop
jb
xor
aam
mov
outsb
xor
daa
mov
sahf
mov
imul
insb
stos
test
dec
jmp
xor
fsubs
mov
cli
adc
jnp
in
mov
add
pop
xchg
negb
cmp
mov
clc
lret
fnstsw
int3
ja
cltd
aaa
pop
stos
cs
cmp
call
sub
sub
outsl
mov
pop
sbb
call
and
fstpt
fldcw
xchg
cmp
mov
cmp
xor
mov
push
fdivrs
mov
cmp
mov
add
add
mov
jnp
pop
lcall
outsb
mov
sbb
imul
cltd
cwtl
cmp
imul
dec
sub
lods
inc
cwtl
imul
jns
mov
pop
lret
clc
nopl
xchg
mov
fs
mov
cltd
cli
or
call
dec
lret
call
mov
xchg
sub
test
pop
cwtl
mov
dec
add
call
cli
inc
idiv
xlat
ret
or
mov
sub
aam
rorl
lds
sub
in
test
cmp
pop
inc
dec
sub
xlat
xor
pop
mov
cwtl
fldenv
mov
mov
inc
and
pop
dec
incl
sub
sub
sbb
xor
mov
or
sar
xor
mov
ss
jbe
xchg
mov
fwait
stos
cwtl
cld
cmp
popa
push
cmp
xchg
stos
push
negb
sub
or
push
sub
aam
cmp
sub
out
cwtl
add
jbe
in
cmp
movsl
popa
cmp
inc
jo
movsb
or
mov
test
jo
adc
stos
add
pop
mov
sub
lcall
mov
ss
stos
ss
inc
dec
roll
mov
xor
pop
dec
xor
xor
mov
fdivr
jns
lds
mov
or
or
xchg
fwait
lret
dec
inc
jnp
in
sub
scas
test
arpl
and
mov
jo
cltd
stos
fdivrs
imull
into
or
pop
cmp
aad
rcrl
cmp
sub
fnstcw
lret
and
fisttpl
fwait
push
testb
imul
jnp
mov
cmp
in
inc
sub
popf
test
add
cmp
cmp
pop
cwtl
in
cmp
pushf
cmp
lea
lods
sbb
stos
in
sti
adc
pushf
repz
sub
dec
pop
ret
aas
shrb
cld
dec
fwait
aad
aas
pushf
xchg
push
leave
lret
cs
pop
adc
movsl
sbb
mov
rcr
cmp
cmp
sbb
into
test
enter
fxch
mov
mov
xor
cmp
enter
stos
or
sub
cmp
or
inc
mov
int3
cmp
test
cli
push
test
mov
decl
jmp
enter
shll
dec
sbb
xor
pushf
inc
int
jmp
mov
and
stos
xchg
and
dec
cld
mov
shlb
ljmp
push
test
sbb
cmp
jle
fadd
gs
cmp
xor
pop
int
ljmp
scas
mov
mov
or
imul
int3
jnp
xlat
fidivrl
mov
cltd
int
fs
sbb
lret
mov
sbb
fwait
mov
ja
mov
xabort
xchg
jmp
inc
insl
mov
dec
push
mov
ja,pn
clc
jmp
mov
imul
test
pop
stc
adc
int
cmp
out
lods
aam
sti
ljmp
in
test
int
cmp
push
sub
fmul
scas
push
xchg
mov
sub
fisubrl
sti
xchg
test
mov
cli
mov
jne
int3
cmpsl
imul
cmp
inc
cmp
aad
mov
stos
cld
xlat
stos
jmp
mov
popf
dec
dec
lret
cmp
cmp
xchg
movsb
mov
sbb
jb
sbb
push
jns
adc
lcall
imul
xchg
add
sbb
jmp
movsl
imul
lock
add
test
sub
dec
data16
sti
jbe
add
lret
test
call
cli
push
pushf
fisttpl
mov
jmp
mov
mov
ljmp
jl
bound
xchg
jae
outsb
jnp
push
fdivrl
clc
rorl
iret
mov
sub
xchg
sub
add
dec
clc
xor
inc
das
test
shl
mov
stc
movsb
dec
movsl
out
sbb
fsubs
mov
xlat
outsl
cmp
mov
dec
sub
push
pop
sbb
jle
out
and
jns
pop
stos
gs
clc
pushf
test
daa
movsb
adc
add
ret
cmp
imul
fidivl
push
leave
pop
add
mov
sbb
fdivrp
lcall
sti
popf
sub
mov
ficomps
outsl
jns
mov
ret
insb
lret
ljmp
aad
or
push
mov
xor
shll
lret
cmp
out
in
stos
loope
in
cld
cmp
insb
stos
mov
leave
cs
and
adc
cltd
pushf
imul
test
dec
bound
adc
dec
test
or
push
std
sub
ret
mov
mov
dec
xor
fdivrs
jne
cmp
cs
movsb
mov
lcall
sbb
fcompl
cmp
imul
int
adc
int3
call
sub
aad
imul
and
mov
dec
add
mov
or
sbb
andb
cltd
int
clc
mov
adc
adc
test
xor
dec
cwtl
push
test
test
mov
mov
clc
imul
cld
mov
cmp
cli
xor
xor
adc
in
cmp
cmp
out
test
adc
int
stos
pushf
mov
jbe
fldcw
fidivrs
or
xchg
adc
dec
loope
mov
mov
imul
mov
push
fcmovnb
jmp
enter
mov
fimuls
lds
pop
in
mov
cmc
or
cmp
push
enter
aaa
std
dec
popf
pop
adc
ljmp
add
sub
xchg
leave
cmp
or
outsb
das
ljmp
jmp
test
mov
dec
sub
sbb
movsb
out
push
sub
mov
sbb
fisubs
lret
ja
mov
xchg
cmp
xchg
pop
pushf
adc
sub
outsb
movsb
scas
fdivl
out
loop
leave
repnz
lret
lret
or
xor
jno
imulb
fldlg2
icebp
dec
cmp
loope
movsl
leave
sub
xlat
push
mov
xor
daa
mov
dec
sbb
sub
cmp
fsubrl
and
mov
xchg
test
or
test
dec
jmp
push
lcall
mov
sub
dec
call
fldt
jo
scas
sub
xchg
roll
outsb
stos
mov
lcall
fwait
cli
xor
and
pop
enter
or
data16
sub
pop
xlat
cwtl
ret
data16
xchg
push
ljmp
test
fisttpl
stos
les
ret
lret
sub
enter
outsb
dec
lock
js
xchg
xchg
cmp
push
sub
cltd
jbe
mov
sti
ror
mov
psraw
mov
stos
lret
adc
cmp
or
int3
fisubl
movsl
cli
lret
jns
outsl
xlat
or
mov
dec
pop
cmp
jle
pop
fisttpll
out
std
jp
xor
dec
mov
push
xlat
mov
lods
mov
pop
mov
xchg
cwtl
or
stos
sbb
sbb
out
push
xor
stos
stos
pop
cld
dec
dec
and
fstpt
outsb
leave
scas
dec
xchg
stc
aad
cwtl
clc
icebp
outsl
mov
js
fsubrs
cmpsb
jbe
ja
pop
pop
or
shrl
scas
lods
mov
cs
dec
cwtl
das
push
sti
inc
pop
push
cltd
stos
jnp
je
inc
test
mov
popf
sbb
int3
adc
lret
imul
mov
or
imul
pop
cmp
add
arpl
lret
lods
dec
jnp
jno
push
push
repnz
fsincos
cmc
imul
call
cltd
insl
mov
sub
inc
imul
jbe
stos
cld
fildll
icebp
cs
and
cli
xlat
fwait
mov
sub
mov
xchg
pop
shll
stos
int3
and
cmp
aaa
dec
inc
inc
jmp
mov
cmp
xor
cmp
xlat
aaa
test
enter
cmp
sub
sbb
mov
clc
sti
mov
roll
pop
fwait
aam
cwtl
in
and
cmpsb
fsubr
mov
or
daa
shlb
pop
shll
xchg
sahf
mov
movsl
es
fst
mov
loope
inc
push
xlat
mov
or
dec
and
jne
cmp
sbb
sub
in
cmp
push
sub
call
rcll
jp
dec
scas
and
cwtl
sub
pop
sbb
dec
das
push
mov
or
cmp
cmp
mov
js
add
cltd
mov
in
lret
pushf
leave
je
lods
mov
cltd
lret
imul
adc
lret
mov
enter
sti
imul
sub
rorl
aad
dec
test
cmp
sbb
pop
fnstcw
push
lcall
int3
dec
jbe
into
cmp
cmp
ret
pop
sub
sbb
clc
add
cwtl
fisubs
int3
sub
sti
inc
cld
sub
outsl
in
pop
dec
sbb
sbb
imul
and
dec
mov
or
mov
ret
pop
sub
mov
iret
test
sub
jns
test
ljmp
je
sub
enter
cmp
hlt
and
xor
inc
outsb
pop
lret
push
pop
imul
stos
or
mov
xchg
pop
xchg
cltd
in
pop
or
test
dec
cmc
sti
dec
lret
and
xor
cmp
inc
leave
add
sbb
fcmovu
rol
lret
jbe
nop
add
fmuls
scas
rclb
fs
mov
test
lcall
cld
dec
dec
dec
cmp
cwtl
ret
cmc
pop
test
leave
sub
sub
push
sub
int3
push
sbb
sub
mov
test
cs
mov
pop
xchg
imul
fsubrl
dec
mov
push
bnd
cld
and
lret
lods
sbb
dec
dec
clc
cmp
xor
out
mov
push
call
stos
ret
dec
shl
sub
cmp
push
clc
jns
movsl
cmc
cli
jb
inc
cltd
dec
sbb
test
loope
sub
xlat
lcall
mov
lret
ja
fxch
pop
cld
je
mov
inc
dec
insb
imul
jns
imul
and
mov
jle
stos
insl
int3
xlat
sub
xor
rcl
imul
leave
fsubrp
loop
test
or
mov
leave
adc
inc
dec
xor
inc
mov
sub
jmp
or
fwait
loope
xor
sub
in
mov
mov
or
add
jae
mov
lret
test
and
movl
xchg
sub
sbb
lret
or
and
stos
stc
xlat
cwtl
imul
hlt
mov
movsl
lret
enter
icebp
mov
push
cmp
lcall
mov
dec
call
shrb
rorl
test
mov
jnp
test
pushf
jae
cwtl
mov
jl
lcall
dec
pop
or
pushf
cmp
sub
inc
sbb
cld
stc
mov
dec
mov
mov
fimuls
pop
sbb
sub
inc
push
sub
ljmp
shl
pop
outsl
popf
xchg
sub
xor
pop
inc
mov
int3
stos
jne
insb
mov
mov
out
push
jmp
sub
mov
jns
cmp
and
inc
jmp
aam
fimull
add
or
sub
sub
push
leave
insl
or
pop
adc
mov
cs
imul
xchg
fwait
pushf
int3
and
jmp
dec
adc
cmp
sbb
push
mov
xchg
mov
in
fiaddl
imul
sub
imul
lret
in
mov
sti
cld
add
ss
adc
dec
cli
aam
sub
sub
cld
sbb
cwtl
pop
dec
add
xchg
cmp
movsb
inc
jne
sti
call
aam
xor
add
out
cltd
incb
dec
sti
stc
mov
sub
cmp
shl
and
pop
xor
xchg
or
sub
cli
stc
lods
cmp
sub
sub
stc
cmp
lret
mov
test
test
mov
outsb
sbb
push
stc
push
movsl
dec
pushf
fnstcw
mov
sbb
mov
xlat
dec
lods
sub
fistpl
stos
jmp
and
leave
dec
dec
clc
add
scas
cmp
xlat
fsubr
or
sub
pop
and
sbb
mov
mov
idiv
xlat
les
enter
xor
stc
sub
pop
push
test
inc
or
aad
sbb
adc
fdivl
je
mov
sbb
ljmp
and
cmp
jnp
mov
cmp
outsb
and
dec
mov
xlat
lcall
mov
inc
sub
jbe
sbb
movsl
mov
sub
sub
mov
cmc
fcompl
sbb
push
stos
mov
add
in
jnp
dec
mov
imul
or
test
lret
stos
dec
dec
lods
and
lret
inc
mov
sbb
jmp
push
lret
pop
sbb
mov
movsl
cmp
iret
cmc
and
mov
mov
mov
shrb
adc
jne
fwait
cmpsl
jmp
fwait
outsb
sub
fdivrs
mov
stc
push
xor
stc
stos
cli
or
jnp
mov
stos
and
fbld
outsb
push
rol
mov
xor
jbe
pop
hlt
cmp
cmp
mov
add
mov
and
cli
in
sub
fyl2x
pop
and
pop
lods
loop
dec
xor
pop
sub
mov
fcoml
or
int3
in
test
sub
adc
and
fwait
call
das
lods
adc
jmp
cld
stos
jl
cmp
fwait
call
lcall
mov
movb
sbb
ss
sub
aas
push
ljmp
dec
cmp
inc
push
testl
fimull
sbb
imul
sbb
jge
aad
or
push
xor
mov
jmp
inc
in
ljmp
add
mov
pop
popf
cmp
test
inc
popf
and
cltd
xchg
test
cmp
lods
imul
fmuls
add
cmp
and
scas
jne
loopne
jmp
cmp
dec
or
fidivrl
dec
leave
outsb
jne
sti
fcompl
movsl
mov
inc
push
movsl
dec
test
lds
sub
cmp
or
push
mov
in
cwtl
lret
lret
cmp
js
xor
sub
jns
sub
push
pushf
jnp
jbe
repz
cmp
lcall
add
mov
leave
mov
popa
cmp
aas
lods
pushf
imul
jne
mov
and
sbb
movsl
in
pop
pushf
int
cmp
jmp
lret
stc
jnp
cmp
add
fimull
and
xchg
cmp
flds
cltd
fcmovnb
cmp
xor
cmp
mov
push
xorb
jmp
or
jns
jmp
push
fwait
pusha
sub
call
jl
mov
pop
test
lret
cwtl
imul
lods
ljmp
cli
clc
fsubrl
lret
leave
jo
mov
pop
mov
cltd
pop
movsb
imul
dec
add
loopne
pop
scas
nop
das
aam
stc
adc
inc
flds
movsl
insb
outsb
in
test
mov
mov
or
shr
lret
cmp
stos
jb
stc
inc
cmp
inc
cli
stos
mov
lods
aad
fidivl
sti
test
push
scas
negb
and
aad
cmp
je
mov
pop
das
sub
lret
fwait
dec
mov
inc
stos
sub
pop
repz
push
ja
jnp
fstps
aad
sub
fisttpll
cs
leave
cmp
out
ret
xlat
fldenv
dec
cmp
xchg
loopne
sti
nop
jne
mov
fdivr
test
les
cmp
int3
lods
and
pop
stos
mov
or
testb
cld
mov
jbe
jb
mov
sti
cmp
lret
jmp
xchg
jbe
jbe
add
lcall
lret
scas
lea
ljmp
test
lods
test
pop
sti
mov
in
fldt
ljmp
or
cmp
stos
test
cmp
sti
imul
scas
adc
sub
inc
rcrb
sub
stos
ret
fnstcw
mov
and
test
mov
cmp
stc
sub
lea
nop
shlb
cwtl
cmp
jne
call
sbb
xchg
dec
xor
pop
mov
fcomps
enter
dec
sti
cmp
push
xor
push
test
stos
test
aas
lods
dec
das
lahf
mov
mov
sub
mov
loop
push
sar
enter
int3
mov
loopne
lcall
cmp
lret
and
add
or
dec
in
movsl
stc
lret
add
cmp
rcrb
adc
jmp
cli
sub
ja
mov
adc
std
fxch
mov
sub
xor
mov
sbb
lcall
jmp
inc
sub
cli
jne
in
lods
jecxz
rcrl
mov
mov
jmp
es
mov
jae
pop
addr16
inc
jnp
cmp
in
jg
dec
lcall
cmp
movsb
mov
lods
movsl
mov
mov
scas
sub
cltd
dec
cmp
into
in
sbb
lcall
aam
sbb
sub
cmp
add
mov
cld
movsb
pop
pop
in
inc
icebp
sub
or
test
xor
lock
inc
cmp
dec
or
aad
stos
sub
lea
push
lret
and
les
fldt
xor
ret
sti
sub
fwait
ljmp
mov
test
ficompl
add
mov
in
cmp
andb
stos
leave
mov
fnsave
dec
cltd
lods
int3
imul
mov
subb
imul
ss
fwait
call
cmc
push
push
jbe
test
test
jbe
out
repz
leave
xor
adc
push
push
lret
ja
fmul
mov
mov
mov
lret
je
sub
sbb
stos
and
push
ss
jmp
aaa
out
faddl
stc
cmp
sub
cmp
dec
jns
fldcw
push
out
stos
or
cs
adc
ljmp
mov
jbe
sub
push
aad
fistpl
stos
sub
dec
in
mov
ljmp
xchg
mov
or
icebp
add
lea
out
and
fwait
lret
mov
mov
outsb
sbb
in
inc
pop
roll
int3
sub
mov
pop
sub
inc
scas
sub
fsubp
lcall
jae
stos
mov
stc
imull
movsl
jmp
cmp
fcom
clc
pushf
pop
outsb
jne
sti
mov
mov
stc
and
mov
lcall
dec
sub
outsb
fists
clc
sbb
jns
fwait
stos
imul
or
imul
push
dec
leave
cltd
lcall
enter
cmp
fwait
mov
dec
call
test
ljmp
dec
or
pop
mov
fistl
pusha
mov
dec
jmp
out
jmp
rorl
push
sbb
test
or
loopw
add
jl
in
in
jns
loop
in
mov
ficomps
sahf
cmp
dec
pop
inc
mov
cs
imul
fcmovne
ja
pop
inc
pop
je
xchg
sub
jns
xchg
inc
or
ljmp
mov
mov
xor
and
scas
icebp
cmp
out
pop
sub
repz
ljmp
xchg
fs
scas
push
push
mov
pop
xor
fwait
xor
sub
aas
nop
cmp
sub
repz
and
jl
testl
or
jo
fs
sub
mov
sbb
pushf
gs
jnp
mov
scas
sbb
sbb
clc
or
aad
stc
imul
mov
test
cmp
lret
mov
sub
popa
push
emms
fimull
mov
jmp
test
dec
in
jns
std
mov
mov
lret
pop
mov
stc
cmp
jne
out
cli
imul
test
arpl
dec
adc
lods
mov
sub
xor
aad
fmull
pop
cwtl
sbb
das
adc
movsl
lahf
cwtl
adc
inc
or
dec
stos
sub
test
test
pushf
or
repz
add
sahf
add
sub
lret
sub
push
ss
xchg
jmp
lcall
or
and
stos
or
cmp
xor
fsubrs
cmpsl
sub
or
out
mov
add
jbe
test
je
sub
dec
jns
stc
test
jmp
add
mov
iret
or
mov
mulb
pop
sub
sub
inc
clc
movsb
pop
les
mov
idivb
stc
movsb
test
call
mov
push
aas
xor
stos
mov
sub
pop
xor
mov
add
stos
out
mov
mov
ljmp
push
cmp
sub
rolb
call
add
mov
lret
clc
leave
xor
sbb
or
cmp
dec
lock
dec
mov
ret
imul
inc
mov
mov
sub
aas
xchg
mov
test
fwait
cmp
sub
fcmovnbe
jecxz
inc
popa
test
jnp
mov
outsb
xchg
cmp
repz
loop
lret
cs
enter
test
imul
in
imul
imul
stos
enter
sbb
lret
leave
cmp
mov
ja
or
fisttpl
jmp
push
stos
sbb
cmp
inc
cmc
dec
mov
cmp
push
stos
out
push
stos
int3
add
add
fs
cmp
loope
push
int
dec
xor
sub
jmp
scas
push
fcmovnb
cltd
mov
dec
xchg
mov
mov
je
or
cs
insb
in
dec
lahf
insb
dec
js
mov
inc
dec
sti
lods
xchg
insl
push
enter
push
mov
mov
sbb
xlat
dec
int3
arpl
imul
cmp
sbb
call
xchg
dec
mov
mov
scas
and
fwait
movsb
aam
dec
add
cmp
or
dec
add
lcall
fidivrl
mov
loope
xchg
push
inc
cmp
push
daa
cmp
xor
out
jecxz
fmuls
jne
mov
ja
fildll
add
sarl
sbb
fisttpll
roll
dec
sub
mov
push
and
nop
inc
stos
jl
lea
fnstenv
or
insb
test
jbe
test
jmp
cmp
outsb
in
daa
mov
nop
fcmovnbe
lods
int3
fmuls
sbb
sub
mov
xlat
mov
test
lret
cmp
sbb
movsl
stc
mov
dec
sub
lcall
ret
inc
sub
cs
push
sbb
stos
push
imul
aas
in
lret
scas
rcr
cwtl
and
and
js
mov
jl
push
xor
sub
imul
pop
cmp
sbb
cs
and
imul
scas
add
pop
xor
scas
mov
sbb
fildll
add
test
cwtl
mov
cmp
xor
addr16
push
maskmovq
jnp
aad
cli
enter
inc
bound
jmp
sub
mov
fs
push
cmp
mov
ficompl
cmpsl
dec
push
aas
xor
jmp
inc
jmp
je
cwtl
ffree
mov
fcmovnu
mov
dec
lret
pop
enter
into
fs
dec
js
cltd
stc
add
hlt
jnp
push
or
test
jns
jnp
sub
int
pusha
adc
or
lods
call
arpl
inc
rorl
nop
dec
mov
cmp
fldl2t
leave
clc
sub
idivb
aaa
jmp
clc
cld
out
test
out
xchg
stos
mov
sub
sub
mov
mov
pop
stos
cmpsl
test
fistpll
pop
add
fwait
test
fsubl
lock
stos
mov
mov
push
jne
shl
movb
hlt
dec
mov
push
pop
test
scas
jnp
sub
aam
stos
ficompl
je
fdivr
in
fmulp
cld
inc
xor
in
outsl
jmp
enter
push
sbb
adc
xchg
sbb
add
or
enter
popa
jnp
jns
pop
dec
dec
pusha
out
pop
mov
cmp
xor
call
fimuls
or
mov
xchg
and
lret
in
mov
fldenv
cmp
pusha
cmp
cmp
lret
dec
cld
jnp
cmp
mov
outsb
and
mov
or
pop
pusha
jbe
fcmove
in
pushf
cwtl
sarl
pop
clc
ret
lds
in
inc
mov
loop
sbb
call
mov
xor
mov
movl
lds
fmuls
inc
ljmp
cmp
xchg
jae
test
test
mov
or
xchg
xchg
div
test
xchg
jle
aaa
sub
mov
xor
jnp
out
mov
sub
dec
lds
mov
imul
xchg
clc
out
stos
and
mov
xor
test
orl
in
es
lds
cld
pop
leave
cmp
testb
xchg
jne
adc
fdiv
movsb
push
or
scas
jns
iret
scas
repnz
sbb
mov
les
imul
stos
mov
mov
dec
pusha
or
mov
cs
je
sub
cmp
sbb
sbb
mov
mov
roll
stos
mov
mov
or
ljmp
sub
in
test
fmull
aam
cmp
inc
jmp
pop
cld
cs
in
je
stos
mov
dec
lcall
lods
cmp
and
fsubrs
pop
sti
scas
outsb
and
ss
fldt
pop
and
xchg
pop
mov
push
mov
les
or
fsubrs
imul
sbb
sarb
fisttps
stos
stos
imul
xchg
jmp
inc
jp
lret
ljmp
fdiv
or
push
fmull
in
and
imul
push
push
lcall
pop
int3
ljmp
push
lds
sub
scas
imul
pop
cmp
ljmp
loope
mov
cld
mov
ja
in
pop
in
stc
xor
enter
pop
or
xlat
cltd
sbb
dec
or
mov
sub
int3
mov
call
imul
arpl
inc
cmp
sub
popf
xchg
leave
enter
cmp
imul
cli
loop
jo
cwtl
fwait
mov
and
pushf
imul
mov
mov
push
sub
pushf
pop
lods
jnp
mov
movsb
jmp
ljmp
pushf
sbb
mov
imul
sbb
lods
or
sub
xor
mov
pop
mov
push
hlt
cltd
cmp
add
sub
repz
shll
xchg
xchg
jp
sub
dec
insb
cmp
sub
cmp
sbb
fldt
lret
ljmp
movsb
orb
dec
cli
imul
sub
dec
movsl
cmp
ficompl
lcall
cld
sahf
lods
push
test
leave
dec
push
jns
ds
xchg
dec
pop
jecxz
sbb
inc
in
psllw
mov
dec
cltd
sbb
test
or
xchg
pop
testb
inc
add
jbe
test
aas
cwtl
fidivrl
test
pop
adc
mov
call
sbb
jmp
adc
stos
sub
cmpsb
fsubs
xchg
movsb
jecxz
dec
cltd
jnp
call
mov
sub
int
stos
std
adc
sbb
lods
scas
add
inc
sbb
enter
enter
mov
cli
cmp
or
addb
test
mov
mov
fistpl
dec
fnstsw
repz
or
mov
out
pop
out
iret
fwait
pop
call
pushf
jnp
sti
test
and
stc
mov
add
pop
pop
movsl
repnz
or
notl
or
pop
leave
sub
cmp
add
pop
cmp
or
cltd
lahf
mov
mov
testl
add
jmp
mov
sbb
mov
xlat
cmp
push
mov
stc
or
cmc
sbb
out
call
mov
jmp
out
fmuls
xchg
popa
mov
push
jo
push
inc
pushf
mov
cltd
dec
pop
popf
push
mov
clc
dec
pop
or
sub
aad
sbb
push
sub
lret
jmp
outsl
mov
cld
lret
pop
cmp
out
in
stos
mov
sbb
dec
lret
cmp
mov
in
dec
int
call
fldenv
xlat
mov
push
fwait
stc
mov
mov
imul
add
int
cmp
nop
jb
mov
test
jg
dec
das
push
dec
and
xchg
sub
ss
and
adc
dec
sar
pop
andl
sbbb
jle
popf
lods
or
jne
xchg
mov
mov
inc
cmp
ja
jo
aam
in
lret
mov
add
fsubrl
ja
sbb
mov
mull
xchg
mov
lea
jnp
clc
mov
call
dec
fwait
mov
jmp
mov
xor
test
pop
call
mov
mov
dec
fadds
enter
pop
das
jne
test
fimull
add
lret
ret
dec
mov
lret
cmpsl
adc
xor
imul
mov
pop
cmp
mov
and
sbb
cld
push
jnp
xchg
mov
mov
andb
pusha
cli
push
cmp
mov
rcl
inc
or
movsl
clc
pop
dec
shr
sub
ljmp
dec
jmp
mov
clc
hlt
xor
fptan
mov
inc
xor
in
mov
jns
test
cmp
cli
cmp
jl
inc
sub
and
jo
jns
jle
mov
sbb
jecxz
or
in
aad
enter
adc
cmp
jbe
out
mov
in
fdivrs
mov
lret
mov
in
sub
and
cld
mov
shll
test
cwtl
sub
test
jmp
fsts
cli
fsubl
imul
jmp
cmpsb
int3
pusha
imul
ss
movsl
mov
and
rol
stos
xlat
hlt
inc
fnstcw
pop
jp
pop
ss
cld
lds
mov
sti
cmp
cmp
xlat
test
pop
stc
or
leave
mov
mov
ja
je
sti
int3
xchg
jnp
push
js
fcoms
sub
cmp
jmp
in
sti
mulb
adc
fidivrl
pop
mov
lea
lret
ljmp
ja
jbe
add
push
repz
cwtl
cmp
or
sub
inc
clc
movsl
sbb
cld
sbb
xlat
mov
testb
or
lcall
mov
enter
dec
mov
enter
and
push
movsb
outsl
arpl
ljmp
mov
std
imul
jp
mov
stos
sub
icebp
dec
int
call
jle
pop
imul
jbe
fnstsw
mov
jb
loope
xchg
pusha
add
call
mov
dec
jne
jmp
mov
ret
mov
pop
outsl
imul
pop
xchg
pushf
dec
and
jnp
fld1
test
cwtl
leave
lods
adc
cmc
mov
pop
sbb
enter
push
cmp
cmp
add
xor
lret
cld
cli
test
movsb
cmp
in
jmp
int
dec
lods
hlt
xlat
sbb
cli
mov
in
or
cmp
icebp
cwtl
jns
in
outsl
popl
test
pop
and
sbb
ljmp
jmp
pop
inc
pop
mov
cwtl
test
imul
repnz
fldl
and
cmp
int
leave
inc
and
hlt
xor
sbb
test
cld
cmp
fxch
adc
call
test
fmuls
clc
fsubrs
fsubrl
or
sbb
lret
dec
jmp
or
aad
sub
subl
xor
xor
inc
jne
pop
jp
or
mov
cli
sbb
in
sub
mov
fsubr
xchg
leave
cmp
jecxz
mov
pushf
enter
sar
mov
mov
mov
jnp
fmuls
stos
cmp
shll
push
pop
sub
sub
iret
cld
movsb
or
pop
rcrl
pop
in
and
movsb
call
leave
sub
cmp
pavgw
imulb
lcall
mov
push
pop
scas
inc
fistpll
jmp
pminub
push
repnz
lcall
std
movsl
sub
adc
stos
repz
push
cmp
sbb
dec
cmp
stc
ss
lahf
movsl
cmp
cld
cltd
scas
sub
add
mov
sub
sti
fldt
or
inc
or
pushf
icebp
sub
cmp
or
cld
cwtl
mov
out
cmp
cli
cltd
outsb
mov
int
pop
enter
imul
mov
stos
pop
lret
dec
cmp
inc
add
sbb
mov
fidivl
cmp
cli
inc
xor
stos
in
sub
mov
xor
stc
pop
test
jmp
in
fsub
inc
push
pop
lret
call
sub
or
mov
mov
or
mov
jmp
outsb
or
xchg
fxam
loope
in
mov
iret
int3
cli
cmp
fisttps
test
inc
dec
fcmovbe
out
mov
cmp
mov
imul
push
sbb
pop
push
and
cld
jae
xor
fidivrs
jb
pop
fbld
mov
adc
mov
clc
insb
sbb
sbb
jbe
jmp
ja
jl
sbb
shld
mov
sbb
mov
orl
shll
les
jg
cmp
dec
mov
xor
xor
sub
out
mov
imul
clc
inc
and
test
mov
stc
mov
pop
ret
test
stos
sub
leave
pop
cmp
mov
cld
mov
sub
adc
popa
xor
cltd
in
push
jns
test
cwtl
jnp
imul
or
jmp
mov
dec
jle
sub
push
stos
pushf
sub
mov
pop
pusha
nop
int3
sbb
inc
in
mov
sub
sub
cwtl
sub
jb
sbb
pop
in
xor
cmp
pop
clc
or
stos
and
mov
repz
iret
je
jne
xor
dec
imul
bound
enter
push
imul
fwait
outsb
or
jns
mov
sbb
jmp
sub
fincstp
fs
movsb
shlb
lcall
mov
xchg
stos
movsb
aad
mov
rcl
and
mov
lods
push
lea
mov
cmp
cmp
stos
jo
fstpl
fldl2t
out
sub
pop
adc
out
jns
push
mov
cmp
sub
int
mov
pop
stos
xchg
in
or
xor
jmp
mov
daa
popa
jno
mov
out
lret
mov
popf
repz
xchg
pop
cli
imul
fbld
not
imul
jae
lret
clc
fldcw
add
jne
mov
mov
mov
add
add
fcmove
and
clc
pop
inc
mov
jns
inc
mov
test
mov
outsb
inc
mov
mov
mov
negb
cs
mov
xchg
into
mov
stos
sub
cld
sub
cs
imul
or
inc
data16
sbb
jb
test
push
enter
dec
cli
mov
or
jnp
or
ljmp
or
stos
sti
jbe
pop
jmp
add
lods
adc
stos
mov
mov
cmp
sbb
ficoml
adc
int3
ljmp
push
pop
xor
sub
sub
ss
lods
add
xor
int3
stos
cwtl
fsubl
sub
in
pop
xor
fldcw
aas
jmp
xor
int3
lcall
fcoms
mov
or
int
and
mov
outsb
add
stos
and
test
jg
mov
xor
xchg
sub
add
mov
mov
mov
outsl
cltd
add
movsb
cmpl
and
bound
leave
sbb
fmull
bound
lret
inc
or
rcrb
fsubr
push
dec
jo
dec
and
test
lcall
loope
sbb
cmp
dec
fwait
into
inc
imul
and
sub
pop
shl
jns
or
pop
pop
push
sbb
push
test
enter
scas
mov
cs
cmp
imul
or
fcompl
pusha
and
int3
mov
sub
imul
lods
jo
cltd
cli
cmp
jnp
popa
movsl
pushf
test
cmp
int3
arpl
loop
jns
dec
and
test
pop
xor
pop
or
int3
mov
pop
pop
or
call
inc
test
fnstsw
pop
mov
mov
mov
jle
leave
test
dec
add
in
cli
movsb
aas
sub
sub
pop
pop
sub
xlat
mov
jbe
call
mov
mov
sti
jne
daa
inc
test
dec
sbb
fsubrl
ss
sahf
lret
fldcw
sub
jmp
fsubrs
pop
dec
adc
mov
push
cltd
sub
dec
jmp
pushf
lret
adc
cmp
addr16
sbb
mov
subl
lret
add
ss
mov
call
pop
inc
push
pusha
jo
fldcw
lods
dec
test
mov
sub
mov
mov
inc
jns
std
sbb
aas
daa
or
sub
call
ljmp
arpl
stc
jmp
loope
scas
push
loope
mov
fsubs
and
scas
jle
fnstenv
imul
mov
in
cmp
inc
inc
loope
xor
repz
push
stos
dec
clc
add
mov
in
leave
test
iret
push
sbbl
lods
mov
aam
adc
inc
iret
and
sub
or
xchg
scas
or
outsb
dec
push
jp
clc
lret
cld
push
loope
inc
xor
cwtl
sub
mov
jbe
test
movsl
fs
mov
mov
pushf
jns
flds
and
pop
cmp
cltd
cmp
in
fsubrl
call
cmc
cmp
mov
fs
lods
xor
cltd
push
push
int
leave
mov
cmp
fs
or
cmp
daa
or
mov
jmp
mov
mov
add
add
imul
in
cmp
mov
enter
fsubrl
jnp
inc
or
daa
fsubrs
fucomp
lcall
mov
sbb
fsubr
pushf
das
mov
scas
out
mov
adc
mov
mov
jns
frstor
call
sbb
xchg
outsb
lods
cmp
inc
test
push
mov
stos
nop
leave
jp
mov
sub
call
inc
adc
dec
in
stc
dec
loope
and
cmp
int3
or
stos
imul
call
or
dec
jle
loop
and
fstpt
stos
sbb
cmp
or
pusha
and
jmp
arpl
jmp
leave
add
je
movsb
enter
or
fwait
cmp
push
test
rcll
dec
jmp
cwtl
mov
xchg
sbb
ss
add
ss
nop
roll
and
mov
dec
or
jmp
in
or
loop
xchg
mov
int3
cltd
mov
push
push
inc
scas
sub
xchg
mov
jmp
sub
je
sahf
jecxz
sub
dec
jnp
enter
fsubr
mov
adc
loopne
add
push
mov
mov
cmp
dec
pop
imulb
mov
movsl
jns
cmc
or
enter
call
leave
fidivrl
add
cmpsl
leave
push
mov
test
pop
scas
cmp
mov
jnp
ljmp
fnsetpm(287
jb
icebp
and
aas
inc
shll
jnp
into
cmp
and
stos
inc
fldl2e
pop
mov
mov
jl
lret
push
cli
pop
cmp
fwait
adc
sub
in
int
xor
sbb
lret
mov
frstor
or
dec
aaa
and
out
cld
lods
ret
dec
and
jne
dec
leave
enter
cltd
inc
cmp
lcall
lock
loop
sahf
andb
leave
mov
sbb
movsb
sub
pop
in
cmp
sti
popa
dec
nopl
stos
aas
pop
pushf
mov
ljmp
mov
pop
pop
icebp
jle
push
ret
xor
fiaddl
insb
xchg
fstpt
sbb
imul
mov
fiaddl
dec
sbb
jbe
cmp
ss
mov
mov
imul
cmp
inc
fdivrl
leave
pop
shl
and
fistl
sahf
and
sub
cmp
loop
or
or
add
push
lret
lcall
pop
scas
push
cltd
dec
push
imul
cmc
ja
sbb
cmp
fwait
push
jmp
or
mov
xor
imul
hlt
sub
test
cwtl
sub
lret
in
stos
jl
push
lcall
xor
mov
rorl
pop
popf
cmp
dec
sti
cltd
stos
int
sbb
cli
mov
mov
mov
in
add
lret
add
test
jo
sub
or
inc
sub
mulb
loope
clc
icebp
gs
std
mov
int3
jmp
or
push
push
push
pushf
orl
dec
dec
les
imul
das
cmc
jmp
enter
dec
pushf
idivb
pop
pop
push
mov
jo
push
imul
test
lock
add
pop
lret
mov
outsb
popa
pushf
dec
test
dec
and
pop
cmp
inc
xor
clc
aam
or
push
cmp
sahf
in
leave
pop
ss
push
xchg
jg
scas
mov
int3
loope
mov
ss
cmp
aas
pop
xor
add
aam
push
aad
outsl
mov
or
pop
jmp
in
mov
ja
pop
cmp
add
in
or
inc
stos
lret
into
inc
lret
mov
movsl
jno
mov
xor
test
cli
leave
mov
fadd
pop
aad
clc
jns
sbb
push
jne
dec
xchg
xchg
imul
int
fstps
push
xchg
or
jle
rcrb
outsl
icebp
adc
sub
fwait
dec
mov
cmp
or
faddl
outsb
mov
dec
fimull
out
lods
outsl
push
sub
xchg
mov
inc
sub
sub
int
lret
enter
mov
mov
sbb
mov
xchg
lods
out
adc
sub
jne
cmpsl
imul
jmp
lret
call
sub
xor
test
cmp
or
mov
mov
mov
inc
adc
jmp
jns
mov
stc
orl
test
cmp
inc
outsb
popa
sbb
and
jns
jge
stc
enter
cmp
test
dec
sub
or
stc
fs
xchg
in
testb
aam
or
adc
mov
sub
lret
scas
loop
mov
sahf
sub
ljmp
sub
popf
orb
inc
and
cld
cmp
adc
in
sub
sbb
mov
sbb
test
cs
cld
fsubs
insb
and
or
enter
pop
imul
sub
movsl
cltd
or
fisttpl
outsb
jmp
rcl
neg
sbb
fsubrs
dec
fldl
stos
mov
pop
sub
or
sbb
dec
in
ja
dec
or
cmp
xor
fcomps
jnp
int3
out
ja
lret
mov
dec
cmp
sub
call
aad
sbb
test
fs
cmpsb
stc
mov
pushf
ret
or
cmc
data16
mov
mov
mov
lcallw
cmp
cld
add
dec
xor
call
lods
mov
lcall
enter
dec
sbb
sbb
flds
xchg
mov
ja
mov
push
or
sub
sub
jmp
push
cmp
push
adc
and
stos
stos
xor
inc
cmp
lods
mov
jne
sub
cli
cmp
adc
pop
inc
lods
mov
mov
mov
sti
leave
sub
jae
fmuls
fsubrl
insl
mov
inc
jmp
mov
pop
mov
sbb
sbb
jecxz
int
std
jp
push
add
and
dec
mov
fnstcw
inc
cmp
and
stos
cli
test
mov
ss
push
mov
fcomps
lcall
hlt
pop
popa
mov
fwait
outsb
jmp
cltd
mov
cs
data16
call
and
pop
pop
mov
leave
cld
dec
mov
arpl
in
imulb
or
xchg
cmp
xor
xchg
jo
aaa
cltd
dec
in
testl
sub
jmp
mov
sub
rcl
mov
cwtl
test
dec
jns
int3
test
test
cwtl
fabs
jmp
cmp
cmp
test
aam
mov
ja
jns
cmp
dec
roll
xor
cmp
sub
sahf
lds
cwtl
sar
repz
or
inc
add
cmp
mov
pop
lret
cmp
or
sbb
cltd
and
pop
fwait
dec
out
mov
or
addl
ret
ljmp
jmp
cmp
rorb
ljmp
jns
and
mov
adc
jmp
fsubl
sbb
pop
dec
and
cmp
pop
ja
jnp
addr16
sub
sbb
mov
inc
clc
cmp
stos
push
mov
sub
push
mov
dec
ffree
fistpl
sub
nop
dec
in
fldcw
xor
dec
scas
dec
daa
loop
mov
mov
fstpt
xchg
hlt
cmp
jle
test
sbb
and
inc
sub
rcrl
mov
lods
inc
adc
and
hlt
adc
or
enter
add
shrl
bound
in
imul
xchg
sbb
cmpsl
icebp
test
mov
int3
sti
test
enter
fisubrl
mov
repnz
cmp
cmp
cwtl
nop
inc
cmp
int
mov
lret
shrl
cli
pop
cmc
sbb
mov
mov
sub
mov
shll
das
mov
ret
sbb
stos
std
mov
cld
outsb
adc
pop
loope
and
sub
or
call
mov
inc
lcall
push
pop
ja
inc
fucomi
mov
and
sub
int3
outsl
adc
or
enter
pop
ss
mov
leave
jmp
sub
pop
pop
jmp
add
stos
mov
pop
sub
mov
pop
stos
fisubrl
mov
movsl
adc
jbe
inc
int
mov
cld
cmp
test
sub
lret
clc
or
and
sub
or
scas
addr16
stos
and
das
xor
dec
js
pushf
in
jo
daa
sub
adc
mov
fmuls
mov
push
xchg
cmp
mov
imul
mov
ror
pop
in
cmp
ljmp
dec
imul
fidivl
cwtl
lret
xchg
cltd
leave
cmp
lret
fstps
cmp
xor
mov
fdivrl
dec
jb
sub
ret
or
outsl
out
stos
js
scas
mov
inc
ljmp
hlt
int
dec
dec
arpl
mov
or
xchg
dec
xchg
mov
scas
imulb
fsubrs
out
xchg
insl
xchg
mov
lcall
cld
lcall
outsl
cmp
xchg
pop
mov
pushf
scas
mov
sbb
in
jg
adc
cs
mov
neg
pop
mov
cmp
dec
lods
stc
adc
fmuls
fwait
inc
mov
xchg
pop
int3
adc
inc
leave
fisubl
incb
jb
mov
adc
movsl
mov
pop
inc
ret
fistl
movsl
ficomps
xchg
push
scas
sub
and
iret
into
fistpl
xor
push
adc
mov
mov
mov
xor
cmp
sub
roll
sub
stos
add
dec
sbb
test
call
push
mov
pop
inc
fwait
int3
dec
cld
push
fadds
cmp
mov
pop
roll
int3
vphadduwq
out
sub
leave
imul
popa
lret
dec
jne
mov
adc
stc
nop
and
mov
add
xchg
sbb
inc
mov
test
rcr
repnz
imul
inc
jne
jns
outsb
pop
xor
sub
inc
imul
mov
sbb
sub
push
loope
cmp
bound
sub
jmp
cli
mov
ficoml
adc
lret
pushf
dec
pop
add
subb
pop
cwtl
sti
fnstsw
pop
or
sub
cltd
push
test
dec
loop,pn
imul
mov
fstpl
popa
mov
mov
cwtl
mov
je
cmp
push
cmp
xor
mov
pop
mov
jl
pop
iret
mov
adc
mov
stos
lcall
jns
xor
in
fxch
dec
jo
xor
mov
xchg
adc
xor
pop
pushf
xchg
subb
mov
cld
mov
xlat
sbb
cmp
aad
mov
outsl
inc
ja
ljmp
sub
sbb
mov
fnsave
adc
pop
aas
test
add
jmp
cld
cltd
das
push
and
add
or
inc
dec
repz
inc
fs
outsb
cmp
cmc
mov
inc
dec
test
pop
push
cmp
test
xchg
lods
xor
jo
mov
mov
insb
jne
and
in
ljmp
push
and
jns
mov
pushf
fwait
mov
xchg
push
mov
pop
rcrb
xor
fnstcw
cmp
inc
imul
mov
fstpt
stos
in
mov
mov
xchg
enter
jnp
jle
and
movsl
or
clc
pop
cmp
jmp
ljmp
lcall
lahf
data16
push
sub
pushf
jb
lcall
adc
add
mov
test
mov
rclb
shrb
jecxz
xor
enter
lcall
mov
in
pop
fadds
psubsw
test
dec
jo
orb
jmp
or
out
stos
and
fwait
mov
mov
mov
dec
fcom
test
xor
mov
pushf
hlt
sbb
in
cmp
stos
jmp
cmpsl
cmp
pop
ret
or
stos
fsubrl
fsubrl
sti
cltd
shl
jmp
pusha
dec
or
adc
pop
dec
je,pn
out
pop
mov
fcmovb
push
hlt
cmp
mov
adcl
pop
mov
xlat
enter
inc
mov
fcomps
and
lret
push
fnstenv
fs
les
sub
in
push
call
cmp
jno
in
xchg
push
xor
cmp
push
imul
push
sub
cmp
adcl
repnz
repnz
sub
jmp
fs
jo
in
dec
sti
int
mov
sub
flds
cmp
ror
jns
and
push
test
lods
sti
fsubr
pushf
mov
cmp
xor
push
inc
cmp
flds
test
std
test
sbb
insb
add
jns
jge
test
cwtl
clc
in
movsl
lea
test
out
sbb
rolb
shr
cmp
sub
xchg
sub
mov
cmpsb
sub
stos
iret
add
pop
lcall
mov
and
fisubrl
dec
mov
dec
stc
xchg
dec
aaa
sbb
and
sub
lods
pop
stos
fisubl
repz
mov
ret
pushf
stc
mov
ret
dec
pop
and
cmp
xchg
outsl
scas
aad
cli
fwait
hlt
lods
daa
lret
or
pop
pop
inc
and
push
das
mov
imul
inc
out
test
xor
call
ljmp
popf
repnz
ret
and
or
cwtl
call
add
lods
and
mov
call
sub
sarl
movb
cmp
or
scas
jge
decb
imul
int3
aad
fdivrl
mov
pop
leave
orb
lods
idiv
jnp
pop
jg
pop
lret
cwtl
flds
sbb
cmc
enter
scas
and
inc
sti
pop
cmp
jae
test
mov
lret
inc
jnp
or
mov
in
cbtw
dec
mov
jne
cltd
jge
outsb
leave
fisttpl
repz
push
sahf
movsb
mov
je
movsl
enter
rcr
or
mov
and
mov
enter
fisubrs
adc
stos
dec
pop
pushf
hlt
sub
cli
in
mov
mov
jo
fwait
outsb
cmp
adc
lcall
insb
imul
mov
inc
mov
ret
jp
in
jmp
mov
and
mov
mov
dec
jmp
dec
shrl
xor
ret
cmp
fidivrl
cld
dec
cmp
inc
jmp
fwait
lret
push
adc
adc
fld1
adc
sub
pop
mov
loope
icebp
out
les
leave
xorb
jne
dec
mov
xor
cmp
jbe
movsb
cmp
mov
xchg
pop
outsb
enter
cmp
jmp
call
test
aam
push
mov
sarb
lods
jmp
movsl
mov
hlt
out
mov
xor
jmp
lret
fistpl
cmp
stc
imul
test
adc
repz
lock
adc
lods
dec
pop
int3
ljmp
ficompl
cmp
stc
add
inc
cmp
cmc
and
test
mov
movsb
scas
les
shr
push
scas
or
arpl
or
movsl
mov
sarl
mov
sub
jnp
pop
sbb
mov
popf
movsl
popf
fidivl
outsl
or
cwtl
sub
call
add
cli
jns
mov
pop
mov
mov
outsb
push
mov
insl
add
sbb
aad
outsb
mov
aad
mov
mov
jne
cld
adc
ds
pop
dec
cmp
pop
test
orl
add
orl
mov
add
xchg
outsb
das
push
aaa
in
lret
stc
insl
pushf
sub
mov
or
mov
lds
lret
std
cli
xchg
mov
loope
push
cmp
jp
aaa
mov
pushf
popf
xor
fmull
dec
test
fwait
inc
int
stos
xor
lods
push
test
fsubr
inc
xlat
mov
popf
repz
jmp
int
sub
shrl
stos
dec
push
sub
xor
ret
cmp
sub
out
shll
in
pop
shrl
cltd
incl
rolb
xchg
popf
jbe
jmp
outsb
cwtl
mov
mov
shr
fstpl
mov
and
pop
lahf
dec
add
or
dec
enter
scas
imul
mov
or
fadds
or
stc
out
inc
loop
xchg
lahf
sbb
movsl
adc
pop
jmp
rorb
push
lods
call
outsb
mov
xor
leave
cmc
lret
and
mov
inc
pop
fxam
arpl
cmp
hlt
imul
sbb
jp
push
xlat
jnp
das
mov
dec
cli
in
hlt
push
stc
lret
fldt
outsb
test
jmp
mov
pop
cltd
sub
stos
aam
test
sbb
mov
mov
or
mov
sub
shll
sbb
dec
lret
sbb
mov
mov
sbb
imul
lahf
xchg
fstpt
and
pop
ja
shr
stos
loop
cmp
push
mov
dec
xchg
nop
out
sbb
adcl
sbb
dec
loopne
enter
cli
enter
int3
or
cltd
xor
xchg
mov
push
test
mov
cmpsb
mov
cld
lea
cwtl
dec
xchg
fbld
adc
shl
xor
lret
sahf
sub
push
jecxz
mov
outsb
lods
sbb
push
ljmp
dec
sbb
jle
sub
test
fstpl
icebp
aaa
cmp
lods
xchg
leave
sub
call
sbb
sbb
lods
arpl
pop
push
and
lahf
enter
dec
push
stc
dec
cmp
cwtl
fsubrl
outsl
sbb
ljmp
stos
mov
sub
stos
in
cltd
stos
imul
cmp
jns
into
dec
data16
or
mov
jle
mov
fcompl
bound
pop
cmp
inc
pop
dec
and
imul
push
mov
push
mov
mov
inc
das
lretw
inc
fisubrl
jle
out
pop
xchg
xchg
loop
adc
lahf
mov
push
dec
mov
mov
ss
jns
pop
ss
stos
negb
xor
les
lock
shlb
xlat
sti
daa
movsl
mov
fldcw
enter
lods
mov
cmp
fidivl
xor
lods
fsubrl
cld
test
sbb
jns
jp
cmp
mov
push
mull
pushf
cld
sbb
lret
cli
mov
je
cmp
cwtl
sub
mov
cmp
sub
pop
inc
and
inc
xlat
fldt
outsb
pop
or
mov
and
mov
add
jge,pn
mov
jae
fstps
mov
scas
das
adc
jmp
lret
popa
sub
push
stos
mov
dec
jcxz
mov
dec
push
xor
fsts
cmp
cmp
cmc
pop
ljmp
jg
add
inc
mov
jne
imul
ja
addl
int
dec
imul
cmp
pop
arpl
push
mov
mov
pop
pop
lcall
hlt
and
jge
push
mov
sti
push
or
xor
sbb
imull
and
pop
jae
dec
xchg
dec
mov
lret
test
out
ljmp
add
cmp
sub
mov
mov
dec
das
sahf
sti
loopne
ljmp
push
fiaddl
push
aam
outsb
ss
jmp
out
aas
mov
mov
scas
dec
mov
les
std
lods
mov
ljmp
mov
int
xchg
mov
test
add
mov
xchg
inc
outsl
pop
les
clc
stos
daa
out
dec
or
aaa
mov
lret
and
stos
dec
dec
clc
lret
mov
push
pushf
subb
jnp
clc
push
cmp
out
mov
sub
inc
fsincos
xor
sbb
cltd
insl
ret
out
jg
cmpsl
stos
mov
push
push
div
inc
cltd
out
add
pop
int
stc
push
outsl
in
inc
outsb
push
ds
push
cmp
jnp
jbe
lret
outsb
incl
outsb
mov
lcall
jle
cmp
jmp
int3
pop
pusha
call
test
fsubrs
mov
jmp
stos
mov
jne
sbb
arpl
lods
test
ljmp
cld
pop
imul
and
lcall
cld
cmp
sahf
pop
and
inc
pop
movsb
dec
cmp
test
fucompp
and
sub
jne
mov
fisttpl
lea
lret
fdivrl
in
dec
mov
cmp
or
or
push
mov
call
movsb
sub
test
jae
jnp
test
pushf
pop
mov
add
test
dec
cmp
cmp
mov
outsb
dec
sub
lret
stc
ficompl
mov
jb
adc
notl
pop
test
sub
movsl
in
enter
orl
sub
sub
jmp
jmp
mov
outsb
imul
add
in
fbstp
and
mov
mov
xchg
dec
popf
sbb
xchg
cmp
sub
mov
mov
leave
cli
add
xlat
lods
outsb
fstps
imul
pop
int3
mov
sbb
lods
mov
test
mov
stc
cmp
lret
or
imul
pusha
sbb
lret
or
mov
jl
daa
fisubl
xchg
stos
fsts
int
stos
or
cs
dec
mov
sub
call
jmp
mov
lret
pop
ficompl
push
sbb
mov
fistl
xchg
and
mov
mov
test
lret
cltd
cwtl
int
mov
mov
enter
dec
inc
stos
xchg
cli
jnp
into
sub
int3
outsb
mov
or
and
in
movsb
cld
and
movsl
mov
call
fwait
jge
aaa
je
daa
mov
adc
push
inc
test
sub
cmp
sbb
cmp
lods
testb
int3
adc
mov
int
sub
cwtl
sbb
in
in
dec
mov
fadd
imul
inc
pop
cld
and
push
push
clc
cmp
fmul
mov
cld
mov
popf
jp
xchg
in
imul
cli
cmp
insl
pop
out
sub
dec
dec
pop
stos
scas
outsb
sbb
test
fidivrs
stos
cmp
cmp
ret
and
mov
in
and
sub
sub
mov
mov
fldenv
push
in
imul
hlt
test
push
xchg
pop
inc
inc
sub
or
pop
mov
ret
out
xlat
ljmp
sti
mov
subb
dec
enter
lods
mov
cwtl
sub
mov
clc
ret
roll
scas
or
xor
rorl
ss
leave
jo
out
cld
dec
movsl
mov
adc
xor
aad
cmp
stos
test
aad
fsubl
jl
imul
fcomi
xchg
add
cmpsb
sti
in
je
int3
lea
test
or
dec
cwtl
negb
cmp
mov
mov
lods
dec
pushf
sbb
aaa
test
or
mov
in
in
cmp
aad
dec
mov
pushf
in
out
or
in
adc
and
call
cmp
int
sub
shr
fisttpl
outsb
sub
pop
in
in
gs
jmp
dec
mov
fwait
and
pop
pop
in
mov
stos
jl
mov
jnp
imul
pusha
loope
mov
in
test
inc
cmp
inc
dec
ficoml
sub
je
sbb
pop
adc
mov
fldcw
cmp
jns
and
stos
mov
enter
mov
insb
mov
outsl
or
sbb
fisttpl
lret
stos
adc
das
add
pop
mov
int3
leave
fdivrs
lods
mov
mov
outsl
fldcw
cmp
loop
xor
pop
scas
dec
icebp
fildl
jmp
fstl
sub
add
pop
clc
and
cmp
lods
stc
mov
cwtl
imul
cltd
sub
mov
lock
pop
dec
sub
mov
sti
ljmp
sti
stos
rorl
xlat
cmp
inc
out
mov
add
and
dec
int3
jb
movsl
sti
dec
and
pop
and
mov
mov
dec
fisubl
or
inc
mov
jmp
mov
rorb
pop
jnp
clc
lods
mov
test
fildl
movsb
adc
cwtl
jnp
push
dec
sub
sbb
in
add
mov
stc
jnp
cmp
or
pandn
sahf
leave
movsb
push
push
xchg
cld
add
insl
sbb
ss
test
pop
loop
pop
stos
xor
inc
lcall
js
ret
shr
xor
je
cmp
pop
inc
mov
jns
sbb
shll
xlat
mov
lock
mov
xor
cwtl
cltd
xor
jae
ret
xor
mov
fwait
test
cltd
sbb
dec
fsubrs
mov
ljmp
leave
pushf
sbb
cmp
jmp
in
cli
sbb
loop
nop
movsb
shlb
lock
sub
cmp
lods
or
pop
xchg
mov
fwait
or
leave
dec
push
fiadds
fadds
push
or
cmpsb
int3
ljmp
cltd
sub
outsl
mov
fwait
pop
jnp
adc
pop
pop
dec
stc
push
lret
sbb
lea
rorl
leave
test
clc
sub
lret
xor
lret
movsl
leave
or
das
loopne
in
cli
cs
ljmp
push
or
lret
mov
daa
push
daa
pusha
flds
cld
icebp
in
gs
rcrl
addr16
sarb
sti
fwait
dec
mov
mov
fdivr
cs
ret
or
fsubr
lret
daa
rolb
push
fldenv
mov
and
mov
stos
mov
push
inc
mov
cltd
jle
and
pop
sbb
lcall
lods
in
xlat
stc
imul
xchg
fcmovnu
lods
pop
lcall
fwait
jae
in
out
clc
push
jp
popa
cld
fwait
leave
lret
in
sub
xchg
loopne
mov
cli
pop
leave
push
xorb
in
or
or
stos
scas
outsb
out
outsl
test
mov
pop
adc
or
mov
fisubrl
adc
test
sub
jns
cmp
cmp
xchg
add
mov
inc
dec
inc
aad
imul
inc
dec
sub
lods
sub
lods
imul
rcrl
cmp
mov
dec
stc
push
cld
dec
imul
aas
dec
pushf
jae
andl
cmp
xor
adc
xor
ja
dec
mov
cmp
cld
fucomi
incb
cmp
jne
mov
adc
xchg
scas
jns
mov
iret
dec
sub
cmp
ret
ret
ret
lret
shll
push
les
push
aad
mov
inc
in
mov
push
sub
adc
imul
cmp
sbb
pop
inc
mov
sbb
jle
leave
nop
cmp
mov
aaa
push
fdivrs
xchg
fidivl
std
adc
mov
push
jnp
sbb
leave
clc
call
shll
or
lret
lds
pop
in
ja
stos
aaa
in
sbb
sub
std
push
rorl
dec
cli
fildl
mov
int
test
lret
imul
sarl
pushf
adc
pop
mov
push
add
cmc
cs
pop
cmp
leave
sub
mov
sub
lock
adc
test
outsl
sub
jns
data16
fs
insl
mov
sub
subl
mov
pop
dec
stos
gs
sbb
nop
enter
insb
mov
ja
jg
lods
sub
lods
push
sub
fidivl
mov
pop
add
movsb
cltd
inc
xor
cmp
push
icebp
in
mov
nop
movsb
fdivl
pop
cmp
mov
lret
shrl
or
and
nop
ss
add
fwait
sub
or
cmp
sub
test
negl
bound
mov
cltd
xlat
bound
sbb
pop
call
xchg
sbb
loope
dec
sub
sbb
jne
xchg
or
rorl
js
fdivl
jnp
add
mov
xchg
mov
cmp
fisubrs
jne
sub
adc
pusha
push
lret
lret
test
pop
scas
jno
sub
cli
cmp
xchg
bound
add
leave
imul
sub
fwait
fs
shll
cmp
cld
cmp
dec
add
adc
cmp
fadds
lret
fxch
xchg
sbb
cmp
and
sbb
lcall
dec
or
stos
pop
sub
movsb
cli
movsl
pushf
mov
insb
stc
lds
cmp
mov
cld
cmp
mov
cmp
cltd
dec
test
lods
mov
in
add
lods
cmp
mov
add
fsubr
outsb
int
leave
adc
lods
or
loopne,pn
inc
and
cmp
lret
or
je
scas
insb
outsl
stos
cld
add
pop
out
pushf
movsb
mov
cltd
lret
cmpsl
nop
or
mov
mov
popl
sbb
and
mov
xlat
test
mov
fnsave
sub
push
dec
pop
lds
stos
fdivrs
cmp
push
inc
and
mov
shrl
mov
mov
mov
roll
xchg
lcall
or
int3
in
jnp
jmp
cltd
test
in
mov
sbb
fcmovne
testl
sbb
mov
adc
sbb
cltd
adc
clc
imul
test
ljmp
mov
cli
in
aam
hlt
xchg
pop
ja
fsubr
pop
mov
pop
pop
mov
sti
int3
stc
fistl
mov
xor
movsb
negb
imul
or
out
das
sub
mov
sbb
push
push
outsb
test
push
dec
adc
call
test
jae
pop
stos
testl
cmp
jmp
rorb
cmp
sbb
dec
outsb
pop
xor
outsb
adc
add
cmc
mov
stos
mov
adc
cmp
sub
into
test
mov
inc
stos
xor
test
leave
sarl
mov
and
nop
push
fnstcw
enter
lds
ljmp
imul
and
stos
sbb
pop
push
rorb
lods
pop
mov
movb
or
push
int3
or
imul
cmp
outsb
mov
ficoml
add
xor
fld
inc
sub
jns
push
pop
inc
jmp
mov
cmp
out
xlat
es
imul
int
dec
leave
adc
cmp
daa
mov
jmp
dec
stos
push
dec
mov
sub
adc
sub
nop
cld
test
jnp
pop
movsb
sbb
adc
push
dec
mov
and
fdivr
cmp
cmp
pop
dec
pushf
sbb
dec
dec
cltd
lahf
adc
mov
mov
inc
dec
mov
test
imul
or
es
lret
lea
clc
add
lcall
push
mov
and
mov
push
int
sub
sub
jno
rcrl
fcmovne
inc
sbb
sub
inc
mov
dec
adc
cmp
or
idivl
filds
jnp
fs
pusha
mov
dec
inc
enter
or
dec
fists
mov
outsl
loopne
les
fdivrs
imul
enter
mov
ret
mov
lds
sub
scas
stos
or
dec
inc
lcall
adc
pop
leave
or
cmp
jmp
ljmp
test
jnp
ret
in
mov
cmp
into
mov
mov
lret
mov
mov
sahf
stos
pop
hlt
cmpb
mov
inc
ret
outsb
enter
movsb
sbb
inc
mov
cmp
cmp
lcall
mov
in
cli
test
sbb
iret
dec
and
jmp
jns
icebp
ss
and
sub
scas
inc
mov
mov
aas
cmp
and
dec
stos
xchg
movsb
xchg
mov
fcoms
push
cmp
pop
stc
in
cmp
push
lret
mov
test
ret
mov
add
es
and
xchg
sbb
outsb
mov
push
xchg
loope
sub
mov
pushf
mov
fwait
jae
lcall
fs
or
xchg
sub
add
popa
cmp
push
adc
and
mov
in
lea
dec
out
loopne
lcall
jnp
fcmovnu
mov
jmp
dec
xor
xor
or
sub
mov
mov
sub
jbe
cli
dec
pop
nop
ret
dec
cmp
mov
cmp
insb
sti
cld
js
call
mov
enter
ss
dec
jne
leave
in
jmp
dec
outsl
add
mov
aad
mov
sub
jle
push
xchg
add
add
mov
mov
fcomps
push
in
lcall
stc
pushf
jnp
cld
ret
xchg
dec
mov
fs
popa
push
cltd
adc
lahf
sub
aas
and
aad
jne
xchg
ret
push
bound
std
in
fwait
pusha
add
and
ja
mov
cwtl
pop
repnz
mov
sub
faddl
fistpl
xchg
mov
mov
jae
imul
jbe
sbb
lods
add
push
movsb
stos
push
jns
fmul
sub
add
mov
fnstcw
insl
add
dec
pop
fldt
push
outsb
add
jg
sbb
inc
cltd
lcall
rcrl
bound
in
mov
subb
loope
faddp
leave
ss
lret
pop
jmp
mov
test
rcrb
mov
fsubr
fisttpll
mov
sub
fcmove
mov
outsl
dec
pop
sub
jmp
mov
into
cli
jmp
cmp
adc
insl
sbbl
jg
repz
jle
fldenv
dec
xor
inc
int3
shrl
pop
f2xm1
push
sbbb
fwait
dec
mov
filds
pop
in
stos
std
or
lret
cmp
rol
sub
mov
jmp
mov
lret
xor
mov
stos
sbb
mov
jmp
mov
xchg
pop
in
lcall
enter
and
cmp
fwait
jmp
pop
jecxz
movsl
clc
sub
jnp
xchg
add
mov
aad
mov
lcall
jbe
cld
mov
cmp
movsl
out
jns
dec
add
dec
jle
scas
mov
mov
fsubrl
pushf
or
or
mov
out
imul
lcall
jbe
imul
ss
or
std
mov
lods
and
mov
sbb
jle
int
fcmovne
pusha
jmp
insb
imul
movsl
jmp
fdivrl
jp
fcmovne
mov
xchg
pushf
jno,pn
in
dec
sub
int
mov
sbb
call
pushf
mov
xor
out
in
jg
cltd
clc
enter
fucomi
test
sub
sub
out
imul
ret
sub
inc
enter
add
stos
stos
push
pushf
fmuls
dec
in
cmp
mov
outsl
xchg
imul
sub
call
in
sti
leave
cmp
cmp
enter
lods
ret
mov
movsb
mov
mov
icebp
outsb
cmp
and
mov
iret
mov
out
leave
test
xor
aad
into
dec
dec
imul
mov
push
out
jae
lock
outsb
xchg
sub
enter
in
push
fstpt
arpl
pop
add
pushf
ret
and
movsl
jbe
imul
cmp
fwait
enter
and
mov
push
ss
leave
pop
cmpsl
test
mov
cs
std
das
or
test
pop
add
in
lret
ljmp
xchg
xchg
dec
or
stos
cli
fldl
pop
cmp
mov
inc
push
add
jmp
mov
inc
imul
adc
xchg
add
sbb
jmp
shll
repz
fsts
sub
mov
adc
cmp
leave
leavew
call
clc
push
out
mov
push
inc
loope
pop
mov
pop
push
add
mov
mov
cmp
xchg
mov
pop
insl
mov
test
stos
mov
movsb
dec
cmp
mov
xchg
mov
jl
xor
jmp
xchg
xchg
fcmovu
repz
test
mov
les
jb
icebp
lret
cmp
ret
insb
jmp
insl
xor
cmp
mov
leave
mov
outsb
loopne
shl
ror
and
xchg
pop
test
mov
pop
sub
sub
clc
outsl
add
ficompl
xchg
pop
stos
lret
push
cld
jl
lahf
dec
fisttpl
lea
cld
mov
jbe
cmp
mov
loope
jp
sbb
pop
jns
and
loopne
adc
ds
cmp
call
mov
outsb
mov
mov
clc
imul
sub
lods
in
pop
cltd
test
sti
mov
dec
push
imul
or
mov
cmp
rcll
mov
sub
das
lock
mov
pusha
inc
xor
inc
push
stos
in
cmp
adc
cs
fisttpll
dec
sti
cli
xchg
inc
cmpsl
or
and
inc
mov
stc
cli
xor
dec
jno
sub
sbb
add
dec
mov
shl
leave
jl
cmp
jecxz
xor
outsb
xor
shr
ret
inc
leave
mov
jo
cmp
lret
outsb
dec
inc
movsl
rcrb
call
xchg
jmp
enter
adc
iret
lret
mov
pop
inc
je
sub
jmp
cwtl
xchg
sbb
mov
test
movsb
mov
in
stos
jbe
cwtl
je
cmp
out
outsb
cwtl
testl
push
lods
in
daa
stos
mov
popa
enter
add
push
movsb
lahf
push
jbe
mov
jns
pop
sbb
pop
sar
ds
stos
mov
dec
xchg
jmp
fsubrs
adc
jbe
shrb
mov
icebp
imul
idivb
sbb
call
push
cmp
imul
jmp
icebp
jg
shr
mov
cmp
and
enter
mov
dec
xor
adc
jge
lret
jmp
adc
sarl
jp
inc
lcall
cltd
sub
jae
xchg
ljmp
fidivl
sbb
test
cmp
pushf
fucomi
sbb
pop
and
pushf
inc
stc
lock
mov
push
inc
push
adc
mov
add
icebp
lods
std
or
jg
pop
clc
sub
sbb
dec
mov
sti
fimull
pushf
mov
cli
mov
jmp
in
icebp
sti
ja
out
lahf
mov
ss
cli
in
leave
mov
pop
mov
sbb
fcomp
cmp
stc
fsubl
xchg
push
int3
in
test
mov
push
pop
das
or
push
dec
js
lock
cmc
add
lret
fdivs
ljmp
jl
inc
mov
dec
pminsw
call
movsb
cli
fldcw
out
das
jmp
cmp
cltd
mov
popf
lcall
fimull
leave
or
lods
jl
test
sub
pop
jmp
inc
mov
xorl
int
jmp
int
leave
idiv
aaa
cmp
xchg
push
cmc
jns
or
nop
and
or
cwtl
lcall
and
mov
mov
out
imul
in
movsb
push
sbb
lret
leave
lret
and
cld
fiaddl
outsb
shrb
scas
invd
cmp
cli
push
fcmovu
lcall
loope
in
lcall
or
pop
sub
call
sub
fcompl
cmpl
sub
xlat
mov
xor
test
jmp
test
stos
mov
stos
mov
sub
test
mov
xor
jl
lret
fcomip
add
mov
mov
dec
in
xchg
in
ficoml
pusha
inc
rol
fcoms
cld
imul
lcall
mov
fmuls
stc
adc
or
sbb
push
dec
fwait
imul
fldt
das
lcall
daa
scas
or
hlt
leave
sub
js
loope
sahf
add
cmp
pop
sub
repnz
xor
sbb
mov
sub
xchg
ret
lcall
fiaddl
sti
sbb
scas
pop
clc
dec
sub
sub
outsl
imul
in
imul
movsb
stos
imul
leave
mov
xorl
xlat
lret
push
enter
cld
cs
cmp
jbe
and
ftst
fwait
stc
in
pop
aad
leave
lods
or
in
push
adc
jnp
rcr
sub
cld
adc
call
sub
cmp
mov
jne
jl
fisubrl
mov
fldt
pop
stos
lcall
cmp
icebp
mov
ss
in
test
adc
or
mov
pusha
mov
lret
mov
fxtract
fsubrs
je
cmp
mov
icebp
mov
lcall
cwtl
jmp
mov
lret
add
mov
imul
inc
lds
cmp
sbb
mov
adc
imul
sub
fstps
jp
add
push
jnp
sbb
test
inc
sbb
or
rcrb
cs
enter
scas
sub
fdivrs
dec
insl
jg
ficoml
leave
cld
sbb
lods
iret
mov
mov
shll
loope
jo
and
enter
lcall
clc
xchg
sbb
sbb
fmull
sub
xlat
fidivl
lds
leave
ljmp
ficomps
test
sti
cmp
jns
insb
push
testl
test
fsubrs
sti
pushf
jns
jmp
xor
inc
clc
shrl
sbb
mov
lret
ljmp
test
jnp
enter
mov
in
xchg
adc
loopne
iret
pusha
mov
stos
ret
cmp
jbe
jmp
cmp
inc
in
add
popf
push
mov
push
ljmp
idivb
lret
scas
pop
imul
push
jae
pop
in
push
in
cmp
xchg
dec
pop
xchg
jb
dec
in
push
and
daa
xchg
or
xchg
xchg
push
or
pop
adc
inc
mov
sbb
pop
xor
mov
push
add
dec
sub
cmp
stos
fdivr
sub
pushf
test
sub
mov
dec
mov
mov
adc
lret
cmp
imul
pop
adcb
or
sub
movsb
push
ret
cwtl
fwait
call
jmp
lret
int3
out
jb
cltd
inc
lret
ror
inc
dec
dec
rclb
fdivrl
push
mov
lods
push
mov
sub
sub
iret
xor
or
pop
daa
xlat
pop
adc
scas
push
cs
add
movsl
jns
fwait
sbb
inc
cld
adc
into
fstpt
int
test
sar
and
fisttpl
adc
mov
mov
data16
push
out
add
sbb
call
pushf
in
cmp
les
scas
inc
scas
pop
ss
mov
cltd
mov
sbb
mov
in
pop
cli
lret
mull
add
pop
scas
jge
int3
ja
test
negb
icebp
push
jg
sbb
jnp
or
pop
js
xchg
call
jge,pn
fdivl
lods
cs
mov
cs
sbb
push
leave
ljmp
ret
mov
lods
mov
xchg
mov
outsb
xor
outsb
sbb
push
aam
lods
jne
dec
into
in
lret
mov
cmp
pushf
leave
test
xchg
dec
out
pop
in
pop
sub
add
lret
inc
dec
int3
dec
ja
enter
fiaddl
fdivl
xlat
ljmp
movsl
fldt
cld
aad
cltd
pop
idivb
or
sti
std
clc
popf
daa
add
negl
mov
xlat
dec
pop
ljmp
sub
scas
inc
mov
sahf
mov
int
outsl
push
sbb
lods
jmp
das
sbb
push
jbe
dec
jno
mov
mov
and
insb
adc
or
add
das
test
mull
sti
xchg
jmp
popa
jnp
sti
fcoml
ficoml
out
push
lods
jb,pn
inc
mov
int3
fstpt
nop
pop
std
jle
cmp
cs
xchg
cmp
shrl
dec
mov
les
jecxz
and
mov
jb
mov
dec
and
mov
icebp
mov
in
addr16
into
inc
cmp
sub
sub
mov
movsb
cmp
fldcw
ret
xabort
and
or
xor
in
jmp
mov
leave
movsl
stos
cmp
daa
jae
or
dec
cmp
jmp
xchg
inc
stos
in
or
lret
int3
fsubrl
jb
xchg
inc
stos
xor
or
pop
lea
or
cld
cmp
ljmp
leave
mov
sbb
mov
cld
push
push
sbb
or
pop
lods
dec
in
addr16
and
stos
inc
sub
fnstenv
test
mov
sbb
inc
lret
cmp
cmp
fwait
daa
out
jo
mov
jmp
repz
aad
dec
test
imul
js
lods
jmp
lret
lcall
or
pop
cltd
mov
mov
inc
jb
add
xor
cmp
fidivrl
mov
lock
mov
das
and
sub
lcall
mov
xchg
dec
fcmovnu
imul
add
mov
push
inc
sbb
in
aad
fidivl
lret
cmp
loop
test
sbb
inc
arpl
in
scas
daa
testl
xchg
scas
hlt
movsl
fidivrl
mov
sub
cld
mov
imul
mov
dec
dec
cmp
es
out
test
dec
and
iret
jnp
lret
scas
gs
fnstcw
lds
dec
push
inc
outsb
out
into
jmp
xchg
mov
scas
push
negb
mov
mov
pushf
push
xchg
test
push
stc
cmpsb
sub
xchg
idivl
jge
or
and
in
int3
test
jp
or
mov
cmp
imul
sahf
frstpm(287
lahf
pop
mov
xchg
sub
fcmovnu
fisubrl
testl
stc
lock
push
xchg
mov
jle
jl
or
or
fldcw
cmp
xor
lret
sbb
in
xlat
std
and
mov
adc
clc
fwait
int3
mov
pop
adcb
mov
cld
lret
add
leave
rorl
cmp
icebp
add
movnti
mov
cmp
sub
cmp
cs
jnp
dec
xor
cli
sub
movb
mov
rcrl
xor
clc
add
mov
fxch
pop
mov
loope
rorl
sub
aas
push
lods
xor
jmp
cs
jae
out
fcmovu
cmpsb
inc
sub
cmp
or
mov
lret
faddl
push
and
cld
imull
fs
adc
mov
sahf
cmp
fisttpl
test
gs
sbb
push
sub
lods
xchg
push
fisttpl
fyl2x
sub
test
outsb
add
leave
cmp
adc
jnp
and
sub
clc
and
lods
or
shll
pop
into
dec
sub
sub
sti
jns
push
fstpt
sub
imul
sbb
repz
in
cmp
shrl
mov
or
cli
fsubr
cmp
mov
mov
idivb
push
cmp
mov
push
imul
push
test
dec
sub
xor
dec
int3
jns
cltd
mov
dec
imulb
loope
std
jecxz
fmul
sbb
dec
lret
sbb
mov
xlat
mov
or
jecxz
test
cmp
inc
inc
xor
or
outsb
xlat
mov
pushf
imul
inc
lcall
mov
stos
fstpt
mov
cmp
cmpsb
test
or
or
cmp
in
jl
cwtl
push
neg
test
inc
orb
out
mov
dec
sbb
in
insl
cmp
dec
xchg
xor
pop
sub
sub
stos
ss
fnstsw
fsubrs
cmp
int3
xor
push
sbb
inc
sbb
cld
test
das
orb
add
cli
mov
testb
add
stc
stos
mov
mov
test
dec
fimull
movsb
out
jge
dec
xchg
sub
cwtl
sub
enter
cmp
stc
mov
lock
stos
in
cmp
push
fiadds
sbb
dec
mov
outsb
fidivs
mov
mov
int3
dec
imul
jmp
stos
mov
dec
fldt
dec
sarb
and
aad
cltd
cmp
ljmp
inc
or
inc
imul
jne
ljmp
fdivs
jp
test
or
lret
test
pushf
sbb
dec
push
cmp
ljmp
add
add
inc
stos
mov
test
enter
repnz
jbe
sbb
mov
cmp
pop
jmp
mov
hlt
cs
sub
test
stos
mov
jne
sub
jp
mov
push
dec
aad
cwtl
loope
fstl
lret
add
cli
fsts
sub
xor
jns
mov
mov
and
mov
hlt
imul
in
lods
cmp
lret
cld
jecxz
add
jbe
cmp
xchg
cmpsl
lcall
adc
mov
mov
dec
cltd
cmp
call
mov
inc
dec
repz
sub
test
xchg
clc
repz
cmp
stos
ficompl
push
rcl
mov
stos
arpl
push
fsubr
cmp
add
mov
add
pop
fwait
stos
sub
int3
stos
mov
sub
insl
mov
jmp
cmp
fidivl
stos
lcall
inc
in
jl
mov
mov
xor
cmp
dec
cs
fistps
or
cld
sbb
daa
xor
inc
cmpsl
lcall
or
pop
fldt
cmp
flds
push
jle
add
imul
cmp
nop
cmp
cs
sub
ljmp
fwait
pop
enter
jmp
adc
lods
leave
jns
add
test
jecxz,pn
cmp
hlt
mov
jnp
dec
lcall
cs
scas
sub
aad
cmc
mov
jns
cmp
jbe
cld
dec
xlat
jmp
mov
fdivrl
or
stos
out
sti
inc
dec
dec
imul
sub
or
sbb
cld
or
push
ret
sbb
in
cmp
repz
stos
in
sti
pop
dec
enter
cmp
jle
das
mov
jns
fldt
cld
lret
or
arpl
imul
mov
aad
ficompl
int
fwait
sub
int
repnz
sub
jmp
mov
xor
fcompl
cs
scas
daa
sub
ljmp
in
daa
mov
daa
test
leave
adc
addr16
mov
pop
cs
cltd
mov
pushf
or
or
fcompl
cmp
daa
mov
lret
push
hlt
xor
sub
sub
aad
mov
imul
bound
adc
fidivrl
fwait
sub
inc
mov
mov
jmp
daa
push
add
lcall
stos
pusha
ret
sbb
sbb
adc
enter
lods
imul
cmp
cld
aad
cmpsl
push
fildll
mov
pop
lods
addl
enter
ljmp
int3
mov
test
cmp
fisttpll
iret
shll
outsb
xchg
xor
test
dec
lcall
fstp
test
fidivrs
in
add
in
adc
inc
mov
cmc
cltd
sbb
enter
ljmp
shl
rcll
jno
push
mov
call
dec
imul
mov
call
mov
lcall
and
cwtl
jnp
or
xchg
adc
pop
aas
and
xchg
jmp
shl
sbb
mov
call
fdiv
jmp
dec
sub
mov
mov
push
scas
jmp
pop
or
inc
mov
push
dec
mov
testb
subl
daa
clc
daa
fs
xchg
ret
out
ljmp
mov
out
testl
sub
xlat
lcall
das
jmp
orb
outsb
stc
fsubrs
sbb
jns
cwtl
test
sub
cmp
dec
rolb
inc
js
loope
push
lods
or
cmp
imul
cmc
lods
sub
cwtl
xor
xor
sub
movsb
pop
push
adc
sbb
mov
scas
inc
leave
incl
xor
dec
ds
mov
pop
outsb
stos
jbe
sub
outsb
mov
push
dec
fcoms
and
stc
xlat
pushf
enter
fwait
sub
mov
jmp
sub
mov
cmp
rolb
outsb
adc
jae
lret
pop
xor
andl
fnstcw
jecxz
xor
push
cmp
cmp
push
lcall
stos
xchg
push
sub
or
lods
iret
pop
xor
stos
sti
stos
mov
leave
xchg
xchg
dec
push
pop
lods
xorl
push
jnp
inc
fimull
out
stos
pusha
imul
aad
lret
mov
cmp
sub
in
jae
inc
sub
jmp
icebp
add
dec
leave
xor
leave
mov
mov
jl
pop
int3
sbb
clc
fdivrl
mov
or
sti
mov
or
imull
push
lods
fnstsw
adc
jmp
sbb
pop
dec
and
imul
je
ret
adc
stos
cwtl
ja
jns
sbb
and
cs
cmp
mov
arpl
jns
jmp
jae
sbbl
out
push
je
mov
test
in
xlat
mov
scas
push
cld
jmp
cmp
or
jo
call
bound
sahf
cmc
cld
cmp
cmp
xchg
adc
orl
lds
shll
or
jb
cmp
mov
dec
leave
sbbb
outsb
dec
loope
cld
scas
in
mov
sub
sti
lret
adc
daa
in
cwtl
fildl
sbb
int3
popf
push
fsubrl
sub
lret
mov
or
cs
sub
cltd
cs
fninit
stc
and
fldt
jns
and
ljmp
sti
or
sub
sub
xchg
enter
cwtl
dec
sahf
std
jne
test
dec
sbb
sub
dec
sahf
xchg
dec
adc
lcall
mov
es
or
movsb
mov
mov
jns
mov
cmp
imul
leave
sti
mov
add
jmp
add
mov
dec
pop
fcmovne
sbb
sub
enter
xor
movsb
dec
mov
mov
add
fwait
cmp
dec
ret
inc
or
cli
xchg
stc
shll
jnp
mov
decb
xchg
mov
inc
cld
int
ljmp
popf
enter
sbb
mov
inc
inc
loop
push
cmp
stos
jne
dec
aam
mov
dec
sbb
lretw
stos
fidivrl
fisttpll
test
fsubrl
mov
jge
xchg
mov
mov
fcomp
inc
clc
and
fwait
pop
mov
cs
cmp
in
call
enter
push
xchg
cmp
sub
cld
imull
imul
stos
enter
jmp
leave
repz
mov
stos
cld
adc
cmp
outsb
cmp
or
movsb
pushf
sub
xor
or
jp
inc
xlat
cltd
mov
cld
cmp
ljmp
lods
mov
fwait
sbb
xor
dec
inc
jge
outsb
testl
inc
cmp
lcall
aas
test
mov
fnstcw
and
push
and
leave
in
cmp
xor
pushf
mov
cmp
mov
push
fwait
jns
test
and
insb
lret
cmp
clc
jo
out
cmp
pushf
sub
test
subl
scas
rol
out
pop
test
add
mov
add
sub
cmp
and
mov
fsubrp
fsubs
push
in
fisttpl
lret
cld
sub
mov
add
in
sbb
gs
mov
inc
outsb
shll
je
loope
push
pop
scas
sub
int3
push
ja
cld
movsl
aas
or
stos
je
lods
clc
rcrb
and
imul
insl
xor
sub
cmp
stc
xor
pop
pushf
add
scas
adc
mov
movsb
dec
decl
test
aas
imul
sbb
dec
and
cmp
pop
mov
sub
cmpsb
jmp
cmp
add
mov
dec
sub
sti
and
in
and
or
idiv
cltd
int3
enter
xchg
dec
sub
scas
xchg
sbb
and
cmp
pop
sub
add
dec
fildl
insb
mov
sub
pop
in
test
or
movsb
mov
in
dec
mov
inc
xchg
and
test
leave
cli
or
test
dec
outsb
mov
xchg
or
push
test
test
outsb
out
xchg
xchg
mov
popa
out
inc
lahf
cmp
cmp
push
fsub
xchg
mov
mov
outsb
loop
enter
orb
pop
or
sub
shrw
stos
std
cmpsb
out
loop
xor
mov
test
paddsw
and
stos
dec
pop
pushf
int3
ret
xor
add
cmpsb
xor
and
pop
jle
xchg
ljmp
fisubl
dec
mov
lret
sbb
adc
add
jns
inc
lret
lods
mov
or
mov
in
pop
sbb
push
mov
jmp
jbe
fisubl
dec
mov
push
mov
cmc
stc
fldt
aaa
adc
int3
leave
dec
cmc
sbb
fwait
xor
cmp
mov
fnstcw
lea
dec
bound
sub
lea
icebp
push
or
cli
cmp
scas
adc
cltd
pop
mov
test
mov
jns
lret
cmp
sbb
sbb
aad
pop
outsb
data16
cld
leave
lret
test
pushf
xor
cmp
stos
cmp
stos
fsub
ja
push
xchg
jl
and
pusha
inc
jnp
cltd
imul
mov
or
lock
je
sub
mov
mov
lods
inc
int
fcomp
repnz
ret
movsl
pusha
inc
movsl
add
fdivrl
mov
sti
push
lcall
dec
rorb
push
sbbl
test
xchg
mov
pop
pop
cmp
imul
sub
and
cwtl
lcall
imul
xor
cld
push
inc
dec
sbb
out
int3
cmp
or
fstl
mov
sub
xor
pop
sub
jns
lret
ret
fwait
popf
into
sub
fmul
adc
adc
or
jnp
or
cwtl
mov
scas
pop
fisttpl
and
pop
call
and
mov
dec
imul
lcall
jnp
xor
test
clc
sbb
dec
int3
mov
test
jmp
cmp
or
dec
mov
mov
jne
sbb
cld
mov
ret
sbbb
xor
push
mov
mov
shll
lods
cwtl
cmp
dec
in
dec
sarb
arpl
mov
das
inc
stc
mov
rcl
jb
mov
cltd
lods
push
or
jo
mov
cmp
ja
inc
mov
int3
je
outsl
pop
push
rcll
mul
cmp
into
enter
cld
and
sub
mov
pop
lret
fcom
mov
add
pop
xchg
sub
or
jmp
int3
xchg
div
jnp
aas
jmp
cmp
sbb
fstp
push
fnclex
sarl
inc
jns
sbb
cmp
xor
lret
mov
leave
je
ss
sbb
pop
mov
or
or
mov
dec
in
lods
cmp
jns
sub
mov
xchg
sub
test
data16
pop
or
pop
out
and
jnp
fstpt
sbb
ljmp
test
cmp
clc
lcall
mov
inc
pusha
bound
outsb
jbe
loop
arpl
mov
and
xchg
andb
inc
cmp
insl
sub
mov
push
jge
xor
fidivl
sbb
int
or
lret
or
xor
mov
inc
jae
pop
lods
add
inc
jnp
mov
jmp
add
pop
sbb
pop
mov
stos
sbb
adc
cltd
dec
test
pushf
ljmp
mov
out
push
sub
jge
pminsw
sahf
push
popf
in
mov
adc
sbbl
adc
test
inc
fwait
jmp
cltd
mov
imul
arpl
jl
inc
mov
repz
cmp
loope
and
lcall
jmp
cli
pushf
cmp
scas
mov
stos
mov
jnp
lcall
icebp
adc
push
mov
fsubrs
pop
push
sbb
lret
ret
cld
or
mov
cmp
je
ret
and
jmp
sbb
enter
in
ret
cmp
or
sub
jb
jmp
and
mov
test
inc
jne
mov
lret
jnp
fcompl
in
imul
pop
sub
imul
ss
inc
and
or
test
jbe
mov
insb
lret
sbb
or
stc
xorl
sub
lcall
jecxz
dec
sub
dec
cwtl
imul
fwait
xchg
rorb
sub
dec
test
mov
int
stc
insb
clc
cld
fwait
aam
ror
repnz
pop
lds
cmp
sub
or
mov
add
sbb
xlat
out
lods
leave
scas
lret
int
cmp
int
cmp
lcall
sub
sub
out
inc
pop
loope
and
movsl
imul
imul
lret
cmp
and
clc
pushf
jns
inc
jbe
js
fisubrl
rcrl
cli
fcoms
lcall
and
mov
push
ljmp
inc
stos
imul
scas
lods
cld
jmp
rcrl
fwait
jnp
lret
bound
push
pushf
sbb
cmp
mov
cmpsb
pop
mov
out
push
xor
scas
push
or
cmp
into
mov
sarl
not
shlb
cmp
push
sub
jecxz
pop
out
in
xchg
inc
mov
mov
pop
sbb
xchg
mov
cmc
in
pop
lret
dec
push
nop
dec
xchg
jns
dec
inc
pop
mov
mov
movsb
sahf
and
iret
mov
test
movsl
out
lret
ret
les
pop
int3
movsb
cmp
add
stos
dec
ret
cltd
dec
pop
pop
mov
or
dec
test
cmp
in
mov
mov
outsb
call
fs
pop
scas
ljmp
jne
jmp
cmp
sbb
loope
int
jns
pop
jns
dec
adc
push
inc
cmp
xor
fdivr
and
sbb
xor
shl
lret
mov
mov
cmp
pop
in
xor
pushf
fisubrl
mov
std
xor
outsl
cltd
leave
test
sbb
out
stc
cmp
fsubrs
clc
sbb
jmp
dec
and
cmp
adc
sbb
lds
insb
cwtl
fisttpl
mov
cli
in
sub
cld
cs
scas
xchg
xchg
sti
cmp
into
stc
mov
in
cld
jnp
movsl
in
pop
dec
pcmpgtw
dec
aam
clc
dec
mov
stos
mov
dec
ret
cwtl
int3
jmp
sahf
ljmp
cli
and
mov
clc
ljmp
dec
xchg
add
fcmovnbe
fsts
and
cmp
pop
cli
jo
stc
leave
div
aad
pop
loope
loope
pusha
dec
cmp
mov
pop
lret
pop
jmp
xor
enter
lcall
in
lret
mov
xor
imul
mov
or
mov
mov
mov
and
mov
cmp
data16
dec
jmp
xchg
and
mov
fstl
clc
pop
and
sti
sub
dec
outsb
stos
push
lods
das
mov
dec
jmp
cmp
aas
mov
adc
sub
adc
jno
loopne
sahf
mov
pushf
test
dec
mov
mov
outsb
mov
std
lret
imul
ror
push
inc
jnp
mov
push
push
enter
mov
mov
leave
mov
inc
mov
scas
fcmove
add
call
outsb
cmp
fbstp
movsl
dec
pop
int3
or
sub
pushf
stos
cs
fsubrs
pop
mov
out
jle
pop
mov
mov
push
jnp
mov
jmp
cmp
jmp
mov
xchg
and
adc
pushf
lret
mov
cmpsb
cmp
inc
sub
ljmp
in
in
sub
test
dec
clc
lea
add
sub
jmp
cld
sub
dec
sbb
xor
sub
dec
lods
mov
stc
push
mov
mov
inc
sbb
lret
pop
or
cmpl
in
inc
mov
imul
xchg
cmp
push
or
mov
enter
cmp
rcl
sbb
sbb
ficompl
outsl
testl
lods
pop
sbb
mov
jmp
or
int3
lret
loope
ljmp
add
insl
jnp
sbb
dec
and
jnp
shrl
cmc
stos
sub
int3
cmp
dec
stos
xchg
clc
dec
and
inc
pop
xor
stos
pop
das
js
xchg
sub
out
test
shll
subl
mov
test
fnstenv
insb
fwait
pop
xchg
fisttpl
clc
flds
repz
pop
adc
mov
push
mov
jmp
dec
fmuls
or
mov
mov
add
jnp
add
cmp
adc
popw
stos
in
movsb
icebp
push
jmp
in
push
cld
jae
jecxz
fnstenv
sarl
nop
sbb
loop
arpl
movsl
in
cli
mov
jecxz
add
ret
fildl
push
cmp
sub
dec
test
lods
or
int
enter
fnstcw
sbb
sub
cld
cli
sbb
in
and
add
scas
xchg
stos
fiaddl
pushf
sahf
roll
dec
adc
stos
movsl
jmp
dec
cmp
cs
jmp
dec
test
orb
dec
pop
jne
rolb
dec
sbb
outsb
imul
das
mov
std
mov
mov
cwtl
jmp
inc
mov
in
cs
or
xor
sti
sub
popa
dec
jg
xchg
movsl
bound
test
lret
lret
xchg
add
push
sti
cld
cmp
cmpl
fsubl
test
and
or
pop
cmp
jae
scas
insb
add
lods
int3
div
add
mov
arpl
fidivs
push
enter
inc
stos
test
cwtl
imul
pop
xchg
xor
leave
lret
dec
std
lds
sub
push
add
adc
lds
test
ucomiss
repz
daa
sub
push
cmp
les
mov
inc
xchg
dec
std
cld
mov
fs
and
jns
dec
call
and
or
scas
cltd
push
push
sub
dec
push
sti
int
mov
xor
fwait
ret
push
ljmp
jno
in
out
stos
repnz
add
or
movb
mov
pop
into
fwait
cmp
shl
test
push
cmp
dec
cwtl
popa
mov
aam
push
test
call
loope
mov
stos
imul
dec
cmp
test
xchg
stc
and
or
int3
lcall
cli
xor
jnp
mov
jno
and
cs
jle
lea
jnp
pop
ss
mov
sbb
punpckhwd
sbb
push
in
sub
popf
inc
add
mov
stos
and
enter
or
sbb
jno
pop
int3
cmp
call
fisttps
repnz
lcall
mov
test
xlat
sbbb
jb
xorl
pusha
cli
outsb
or
lret
jns
ret
dec
int3
xor
and
repz
int
fwait
lods
scas
cltd
mov
lcall
pop
imul
fincstp
add
fwait
jne
stos
fcmovu
mov
cmp
hlt
ret
insl
popf
repz
xchg
sub
call
lret
fnsave
ljmp
lock
dec
xchg
pop
cwtl
clc
pop
test
int3
inc
mov
fistpl
test
dec
pop
mov
xchg
push
test
sub
pushf
cltd
xor
imul
scas
fildll
dec
fs
leave
lods
call
jl
test
or
in
fildl
stc
mov
dec
and
leave
test
lods
sub
testb
fwait
mov
push
outsl
sub
lcall
dec
lds
mov
int3
mov
and
cld
pop
iret
lods
dec
leave
in
xorb
aam
sub
mov
fmuls
sub
sub
mov
hlt
pop
mov
xor
pop
in
xlat
fs
dec
pushl
pop
cmp
nop
cwtl
shll
sub
sti
lods
xchg
mov
imul
mov
test
jle
dec
sub
mov
mov
cltd
sub
lods
cmp
std
or
dec
scas
lea
or
fnstenv
rcrb
adc
popa
add
pushf
jne
pop
stos
mov
ljmp
mov
mov
mov
cmp
push
outsl
mov
mov
mov
int3
pusha
mov
ss
jp
mov
popf
in
faddl
mov
pop
loop
xorps
mov
xlat
sbb
stos
mov
mov
add
arpl
lret
add
pushf
popf
inc
sbb
stos
pop
adc
mov
aaa
ret
sub
xchg
xlat
cli
incl
cmp
adc
mov
cli
cld
frstor
cmp
and
inc
or
stos
stc
xchg
leave
dec
stos
sbb
jbe
fwait
dec
pop
xlat
pop
and
out
and
mov
xor
inc
das
and
jbe
in
cld
insb
addr16
fs
xchg
addr16
inc
add
sub
adc
testl
insb
sub
adc
add
pop
lret
adc
in
repnz
or
cmp
xor
cltd
sbb
sahf
mov
sbb
mov
insl
test
subb
test
es
test
sbb
and
or
call
lods
insb
out
inc
or
mov
cltd
dec
inc
fstpt
mov
dec
in
fld
pop
fwait
and
sbb
mov
add
scas
pop
inc
push
cwtl
stc
mov
loope
xchg
inc
xor
pushf
cltd
sahf
aaa
sti
inc
cmp
call
or
dec
lret
xor
clc
sub
mov
jo
adc
cmp
mov
jns
dec
out
js
or
or
sub
jg
dec
sub
cltd
int3
sbb
outsb
inc
lcallw
fmuls
out
test
in
mov
aaa
movsl
sbb
lret
inc
dec
sub
pop
push
cmp
inc
cs
outsb
jno
lret
jb
testb
stc
add
cmp
cmp
or
mov
mov
call
movsl
aas
jmp
cmp
jns
sti
imul
cmp
fimull
cmp
imul
outsb
stos
push
fdivrs
dec
add
dec
dec
into
cmp
fs
adc
and
imul
jnp
pop
aas
aaa
jns
stos
inc
sub
sbb
jecxz
test
in
mov
pushf
sub
popf
lods
imul
pop
jnp
or
sub
int3
jmp
xchg
mov
dec
and
or
jbe
mov
movsb
mov
dec
push
addr16
jo
filds
cmp
xor
sbb
lods
mul
xor
stc
jo
and
dec
stos
rcrl
int
fnstenv
ds
dec
mov
mov
call
xor
and
das
cli
test
push
lods
in
mov
lret
movsl
sub
mov
and
add
test
and
mov
cmp
shlb
scas
sub
dec
fstps
pusha
scas
out
lods
je
mov
dec
and
dec
or
ja
mov
pop
cmp
pop
sti
in
or
lea
out
scas
jmp
test
sarl
adc
insl
popf
imul
leave
imul
lea
dec
mov
lock
cli
cmp
lret
insl
imulb
mov
or
frstor
xor
pop
imul
in
mov
clc
cwtl
mov
pushf
insl
push
dec
adc
imul
fistl
stos
push
pushf
fisubl
sub
mov
out
imul
lret
dec
mov
cmp
jg
repz
inc
scas
fadds
test
test
or
add
in
cld
lcallw
sub
xor
test
ljmp
sub
pushf
dec
dec
in
mov
out
ljmp
sub
push
leave
sbb
push
fdivs
cld
sub
dec
cs
stos
pop
int
sub
ljmp
and
test
icebp
sub
jnp
out
dec
add
cmp
in
outsb
and
cs
cmp
xchg
orb
imul
push
test
gs
cwtl
dec
loope
or
enter
cmpsb
or
test
jo
scas
xchg
inc
xor
out
jmp
stos
or
in
push
outsb
fsubrs
mov
mov
fldl
mov
loope
mov
cwtl
stos
mov
lret
and
cld
leave
test
or
shll
fwait
mov
test
mov
mov
inc
cltd
imul
mov
pushf
and
or
xchg
sub
jbe
or
idiv
mov
popf
icebp
xor
fxch
loop
mov
cmp
enter
sbb
mov
icebp
sub
fcmovnbe
clc
lods
pop
test
outsb
int
mov
push
movsl
ds
lcall
dec
cmp
stc
adc
movsl
and
out
push
les
stos
and
mov
mov
icebp
inc
sti
mov
inc
cli
int
xlat
cltd
xor
sub
push
mov
push
and
xor
stos
imul
cmp
cld
inc
adc
fyl2xp1
cmc
cmp
das
dec
mov
dec
aas
pop
adc
sbb
imul
jns
leave
mov
xor
cmp
jmp
or
add
and
and
clc
sub
dec
and
aas
hlt
dec
mov
loop
cld
iret
or
add
pop
cli
mov
mov
add
add
push
addr16
out
std
and
ret
stos
mov
fcoml
clc
inc
int3
jmp
jle
fistpl
mov
mov
mov
pop
add
fidivl
fwait
mov
pushf
cmp
idivb
xor
sahf
lds
sub
mov
ljmp
sbb
dec
adc
pop
xor
in
lods
jnp
lea
imul
int3
sub
mov
aam
lock
mov
sub
cmp
sbb
xchg
push
lds
ss
lcall
outsb
jmp
push
xchg
lret
sub
cltd
addr16
pushf
lods
call
fmul
jge
dec
clc
cld
in
cmp
fdivrl
and
imul
das
jecxz
jnp
mov
sti
jbe
clc
pushf
fprem
dec
xor
mov
scas
dec
xor
dec
dec
xchg
sub
push
stos
xchg
or
imul
mov
dec
leave
stos
pop
test
imul
dec
push
inc
push
movsl
mov
xchg
cwtl
dec
jne
sub
jns
mov
mov
jnp
pop
imul
dec
insb
mov
fsubrs
xor
xchg
or
into
push
sub
or
in
mov
push
pop
lret
aad
mov
int
pop
in
js
jnp
ret
inc
sti
cmp
pop
sub
add
cmp
inc
pop
stos
pop
ja
mov
jnp
or
out
cs
int
add
cld
lret
inc
imul
dec
movsb
mov
sub
lret
sub
xor
inc
mov
test
cltd
pop
sbb
out
call
adc
adc
test
lods
jle
fs
stos
sbb
cmpsb
test
sub
cmp
imul
int
or
sbb
pop
adc
ljmp
cmpsl
jne
enter
nop
push
sub
mov
cltd
cmp
inc
mov
mov
dec
cmp
cs
sub
xor
cwtl
fs
cmp
pushf
sub
fcom
jle
scas
ljmp
in
cmp
cmp
out
imul
test
mov
in
sarl
fsubrs
sub
in
xlat
int3
mov
sub
dec
subl
test
cld
aad
fsubl
shrb
xorb
inc
jns
in
sbb
call
test
xchg
or
fiaddl
push
lret
sub
ljmp
aaa
clc
test
popa
ljmp
incb
in
add
push
add
adc
mov
dec
lds
sti
fldcw
xlat
test
punpckhwd
inc
mov
and
sbb
jnp
ficompl
fwait
sub
mov
pop
xor
fisubl
jbe
lret
int3
fyl2x
sbb
push
inc
adc
mov
mov
lret
and
cltd
sar
xchg
jne
cmp
cld
sbb
mov
inc
fsubr
mov
cmp
enter
test
stos
sub
fsubrl
cmp
push
sbb
add
fldcw
dec
int3
fnstsw
jnp
popa
xor
mov
mov
cmp
sti
stos
sub
cwtl
stos
mov
dec
jmp
sbb
dec
sbb
jno
mov
xchg
mov
imul
int
or
data16
jmp
stos
in
sbb
test
xor
aas
push
cmp
sub
sub
sub
fnstenv
jmp
sub
push
gs
leave
faddl
lds
les
mov
rcrl
cmp
ficoml
mov
sbb
jnp
les
push
test
int3
mov
mov
fcomp
arpl
ljmp
cmp
pushf
faddp
lcall
imul
jnp
sti
mov
outsb
pop
inc
fucomi
test
cltd
int
mov
sub
cs
lock
lods
cmp
xlat
mov
leave
mov
and
cmp
xor
cwtl
xor
and
enter
dec
dec
inc
int3
js
loop
xlat
jnp
ss
mov
enter
mov
fs
push
aam
dec
jle
imul
jb
or
cmp
adc
mov
add
jns
loope
std
cmc
inc
fdivr
popf
outsb
test
pop
cmp
or
test
sbb
add
push
xchg
inc
and
lcall
shrl
mov
or
mov
lret
stos
iret
nop
pop
fcmovnb
or
cmp
ss
jns
sbb
imul
stos
test
push
mov
adc
cmp
or
dec
dec
lret
pop
mov
inc
sub
test
sub
outsl
in
stc
cld
dec
scas
imul
lds
into
jmp
mov
inc
sub
cmp
xor
clc
mov
call
cmp
outsb
cwtl
stos
lods
sahf
imul
mov
sbb
xor
sbb
fcomp
or
das
xchg
sub
adc
cmp
dec
shr
or
inc
mov
dec
mov
sbb
int
pushf
lcall
jns
daa
roll
call
imul
sub
enter
push
lods
test
stc
mov
sub
add
jnp
mov
and
dec
ss
push
jmp
sub
les
fdivrs
sub
and
dec
cmp
cmp
popa
or
loope
mov
or
lods
sbb
mov
test
pushf
push
sbb
sub
mov
add
mov
rorb
sti
fwait
dec
add
leave
jmp
int3
cmp
inc
test
xlat
mov
int3
das
or
cmp
stos
jge
ljmp
inc
and
mov
xchg
lea
jo
xor
cs
pop
outsl
lea
xchg
mov
rcll
push
fimuls
jecxz
push
movsl
inc
mov
inc
or
inc
movb
jl
xor
call
adc
lret
cli
sbb
mov
int
or
mov
insb
pop
out
or
idivl
imul
imul
stos
dec
and
cmp
enter
mov
xchg
jl
sbb
and
pop
jns
pop
test
xchg
inc
fldt
xlat
push
push
sahf
push
mov
fcomps
xchg
cli
mov
cmp
je
or
and
iret
inc
sbb
dec
ret
js
test
aad
ss
movsl
fidivrl
lds
call
cmc
adc
cmp
imul
into
cld
mov
cltd
jns
fisttpl
clc
lret
loope
push
call
fisubrl
cwtl
dec
and
adc
mov
push
arpl
push
pushf
and
test
cs
push
in
or
fistps
aam
pop
aaa
imul
mov
stos
lods
rorl
in
rorb
fnstcw
or
lea
lret
int3
push
jp
or
inc
adc
lcall
sub
mov
outsl
mov
call
je
pop
inc
movsl
cltd
sub
clc
fs
loopne
adc
lcall
adc
mov
divb
or
pop
mov
mov
pop
inc
cmp
sub
add
mov
nop
jnp
jno,pn
or
movsb
push
mov
test
cld
xor
ljmp
sub
pushf
dec
cltd
hlt
and
add
ret
lods
jmp
mov
ljmp
fcompl
add
mov
dec
inc
jmp
aad
lret
fiaddl
lds
lods
stos
mov
cmp
mov
nop
stos
mov
in
pushf
mov
sbb
sbb
outsb
divb
mov
cmp
clc
push
or
push
add
mov
fsincos
or
sub
mov
notb
test
imul
out
mov
out
sbb
and
fs
or
dec
pop
stc
mov
lods
adc
or
into
mov
sbb
cwtl
int
mov
stos
test
pop
push
stos
dec
les
test
out
cltd
cld
lret
cmpsl
adc
or
in
jbe
mov
push
orl
in
sbb
mov
enter
adc
add
cmp
sub
cmp
mov
jb
push
mov
xor
pop
inc
xlat
mov
int3
sbb
mov
inc
daa
and
mov
adc
xchg
sub
inc
or
mov
pop
push
test
lcall
lret
sbb
imul
xor
push
in
shll
insl
push
stos
lds
pop
mov
mov
popf
mov
leave
scas
ljmp
dec
pop
cmp
or
in
jno
push
sub
lods
or
mov
iret
jmp
iret
das
leave
sbb
mov
stos
aad
cli
mov
repnz
mov
divl
sub
mov
cmpsl
mov
shr
pop
cmp
cwtl
lcall
cltd
repz
xchg
cmp
inc
sbb
mov
es
enter
lea
pop
dec
test
pusha
jmp
cli
cmp
fsubrs
movsl
mov
stos
stos
loopne
mov
fbstp
mov
pop
pop
cmp
cmp
test
mov
outsb
pop
or
pushf
int3
lret
test
repnz
and
cmp
mov
adc
inc
jae
lea
sub
push
testl
lret
test
nop
pop
shll
mov
ljmp
mov
xchg
pop
mov
dec
xchg
or
sbb
pop
xor
fcmovb
xor
jns
aas
push
bnd
cmp
add
int3
pop
sub
mov
test
in
insb
notb
stc
fdivl
cmp
loope
pop
int3
dec
push
inc
cmp
cmp
cmp
or
cmp
pop
fcmove
inc
xor
cmp
ret
cmp
lret
aad
dec
lret
mov
ljmp
sub
in
cmp
mov
sarb
cwtl
push
mov
cmp
cmp
ljmp
adc
mov
call
les
jnp
sbb
scas
daa
cs
xlat
mov
rcll
test
in
lret
sub
lcall
sbb
mov
mov
sub
pushf
sub
adc
mov
stos
cmp
test
fcomps
mov
push
nop
movsb
sarb
and
mov
xlat
pushf
test
xlat
jmp
push
fcoms
mov
inc
sbb
or
enter
xchg
add
hlt
cmp
leave
push
sub
fcomp
pop
or
enter
test
add
adc
aad
or
inc
cld
enter
rcr
clc
fidivrl
cbtw
stos
push
out
lret
pop
movsb
stc
je
iret
pushf
sti
mov
std
push
dec
imul
fiadds
jns
and
sbb
scas
outsb
mov
clc
lcall
xchg
pop
mov
dec
mov
push
clc
fsubrl
push
repz
mov
stos
test
mov
dec
cwtl
stos
push
dec
jns
push
sub
adc
cmp
sbb
inc
in
in
jmp
lret
test
adc
leave
idiv
aad
fcmovne
mov
test
enter
xchg
adc
fmull
jmp
in
dec
sub
sub
push
mov
mov
mov
sub
mov
dec
imul
xor
insb
jl
mov
sub
sti
mov
dec
mov
or
mov
jg
or
lods
je
sbb
and
add
dec
xlat
jne
clc
pop
test
mov
mov
adc
xchg
out
pop
xor
mov
jle
ja
xor
pop
leave
dec
dec
stos
xchg
test
xor
dec
and
jmp
sahf
mov
pop
ja
cltd
xchg
push
and
or
mov
cltd
sti
sub
sub
push
or
cltd
into
push
outsb
fucomi
lahf
dec
xchg
add
dec
mov
jno
ljmp
pop
mov
sub
leave
lcall
jb
iret
cmp
xor
push
inc
stos
das
movsl
sub
repnz
cld
mov
sub
sub
sbb
outsb
ljmp
and
lcall
stos
cmp
ss
pop
xchg
jns
push
popf
jbe
mov
mov
pop
cwtl
push
jno
sub
jmp
lcall
dec
enter
cld
jo
dec
cmp
lods
int3
arpl
mov
pusha
mov
in
pushf
sub
cmp
and
dec
in
push
jne
enter
lret
imul
pop
movsl
fstpl
and
mov
fildl
cld
cwtl
xor
sub
mov
xchg
lds
mov
ljmp
sbb
loop
inc
push
jmp
std
adc
xchg
lret
mov
dec
addr16
lods
sub
repnz
cmp
mov
ljmp
fisubrl
enter
add
dec
sub
mov
or
ja
movsl
lcall
sub
stos
stc
pop
cmp
aad
fwait
clc
adc
inc
int
lods
sub
mov
adc
ljmp
int3
add
ja
mov
sub
add
outsb
adc
mov
int3
repz
insb
cmpsl
aad
sub
imul
aaa
xchg
mov
xchg
push
fdivp
mov
xchg
cmp
pop
lahf
sub
scas
cltd
mov
cld
xchg
jmp
push
add
enter
pop
mov
xchg
leave
enter
cli
sbb
cs
lret
mov
cmp
sub
cltd
dec
jns
vmovntps
lock
xchg
repz
leave
push
add
adc
rcrl
insb
sbb
push
jp
inc
outsb
add
sti
sub
std
mov
fadds
sub
mov
and
pushf
imul
and
sbb
mov
adc
sub
fcoms
mov
test
fwait
fs
clc
loopne
or
fstpt
stos
stos
jmp
pop
xchg
lods
into
add
cmp
sbb
insl
lret
or
or
mov
imul
outsb
jns
lret
cltd
and
cwtl
mov
dec
lea
pusha
js
clc
test
lret
xchg
loope
jns
sbb
gs
int3
or
cmp
pushf
or
fcompl
or
xor
dec
fstpt
sub
push
jmp
inc
or
clc
pop
movsl
mov
mov
bound
fidivrs
sarl
dec
and
lcall
fmul
fcmovbe
and
imul
imul
popf
adc
cmp
imul
xchg
imul
adc
fstpt
pop
call
outsl
sub
sub
leave
jmp
inc
das
ret
dec
fcompl
dec
mov
stc
adc
mov
sub
sbb
push
imul
xor
jns
pop
and
jmp
imul
mov
push
pop
pop
sub
je
mov
stc
clc
dec
cmp
mov
xchg
lcall
cmp
cltd
and
lret
jmp
mov
pop
sbb
and
aas
fcomp
jmp
frstor
insl
adc
mov
jmp
pop
fistpl
or
dec
or
inc
jmp
int
cmp
pop
stos
sbb
mov
cmp
test
cs
sub
sarb
adc
adc
mov
clc
and
sub
sub
sbb
add
xchg
cmp
cmp
aas
cmp
scas
jle
inc
test
ja
enter
pop
in
mov
xor
add
and
fwait
call
jbe
mov
mov
sahf
sub
mov
mov
add
and
dec
or
loopne
jno
xor
mov
outsb
or
pop
ret
sbb
xchg
jns
movsl
cmp
daa
dec
shll
and
imul
dec
add
cmp
sbb
jns
sar
lahf
xchg
repnz
sub
ss
jb
and
cld
pop
subl
pop
stc
mov
mov
lret
fsubrs
movsl
fimuls
in
sbb
movsl
fisttpl
mov
cltd
or
sub
imul
lret
sub
mov
cltd
int
jmp
dec
enter
inc
pushf
popa
xor
clc
loop
stc
fdivs
aas
sub
or
sub
cwtl
jnp
adc
outsb
ficompl
cmp
mov
ret
mov
cld
cmp
mov
test
std
insl
fcmovu
xor
adc
aad
aaa
imul
imul
mov
fwait
push
loope
jb
cwtl
test
mov
sbb
lret
jae
cmp
pop
xlat
pop
stos
push
out
cld
pop
imul
cmp
cltd
xor
cli
mov
cs
jo
fildl
mov
icebp
cmp
pushl
push
cmp
mov
add
jecxz
fsubs
test
lods
scas
inc
inc
sti
xchg
dec
leave
mov
inc
in
pop
int3
add
mov
and
and
aas
or
cli
fistl
test
stc
mov
aad
ljmp
mov
lds
test
test
aam
dec
sbb
das
xor
sarl
rorb
xor
daa
lret
sub
cld
mov
inc
inc
std
mov
and
bound
sub
xor
jmp
loop
cmp
call
mov
iret
lds
mov
fcomi
adc
jmp
mov
popf
int3
ljmp
mov
aam
enter
sbb
aad
sub
add
mov
leave
push
stos
lcall
mov
mov
scas
fwait
and
jns
jl
inc
aaa
pop
sbb
rcr
out
adc
insb
aam
sti
xor
cmp
cmp
cmp
xchg
inc
mov
bound
out
sbb
adc
cwtl
sub
cli
jnp
hlt
xor
mov
insb
dec
mov
mov
imul
outsb
ja
leave
and
push
enter
push
sub
push
jns
stos
sbb
xchg
inc
sbb
and
xchg
jne
adcb
pop
sbb
inc
pop
loope
add
repz
xlat
mov
outsb
inc
or
insb
inc
jmp
and
rol
dec
cli
xlat
loopne
xchg
xchg
test
adc
call
jnp
mov
in
mov
jmp
mov
mov
mov
aaa
lods
cwtl
inc
ja
subb
or
hlt
scas
xchg
jecxz
rorl
xlat
aaa
js
jae
das
adc
shr
shlb
mov
aam
rorl
and
inc
or
dec
fldt
cltd
mov
enter
aad
stos
lock
sub
cwtl
stos
sub
inc
stos
in
jmp
push
enter
out
aas
int
dec
lret
add
test
das
rcrb
pop
aas
test
xor
ret
or
test
inc
dec
ret
sub
outsb
xor
pop
loopne
dec
dec
sub
lret
mov
ljmp
outsb
dec
scas
decl
dec
outsb
scas
dec
jl
outsb
mov
out
popl
scas
cli
cmpsl
in
outsb
pop
or
cld
dec
jns
mov
fucomip
sub
ficompl
adc
lahf
stc
in
mov
pop
leave
ljmp
xor
icebp
pop
push
loop
cld
push
lock
sbb
pop
mov
int
pop
lret
dec
icebp
xor
sahf
sub
lds
fcomps
ja
cmp
or
sbb
push
sbb
scas
insl
out
out
notl
sub
push
mov
cld
js
data16
pop
mov
mov
cmp
add
pop
jecxz
enter
imul
sbb
push
cmp
arpl
lret
sub
and
adc
sub
dec
cmp
mov
test
pop
in
lret
lcall
outsl
xchg
js
add
clc
cli
mov
sub
sub
fmuls
pushf
inc
mov
pop
sub
cmp
int3
cmp
pop
jae
jnp
movsl
fwait
call
repnz
cltd
mov
jmp
cmp
cmp
lods
jb
daa
cmpsb
sub
fmul
cld
sbb
add
sub
lcall
dec
cmp
fsubrs
pop
fwait
mov
leave
dec
cmp
stos
pop
ret
sbb
fcmovne
fldln2
fmuls
js
mov
cld
pop
mov
or
cmp
cmp
aad
sub
into
add
mov
lret
cmp
imul
mov
icebp
push
or
pop
lods
cmp
loope
inc
lds
dec
jmp
xchg
jmp
call
cmp
cmp
leave
pop
cwtl
cmp
mov
scas
stc
jne
fstps
pop
leave
jb
hlt
dec
shrb
dec
cli
ss
das
or
sbb
dec
inc
xchg
jmp
and
lcall
pushf
adc
gs
cmp
cli
or
ret
sbb
mov
cmp
dec
sahf
test
jae
and
jno
adc
fmuls
add
push
lret
cmp
dec
in
push
add
fstps
mov
inc
add
mov
cmp
shlb
fisubrl
stc
enter
call
jnp
cmp
ljmp
mov
stos
dec
inc
mov
pop
jbe
sbb
in
fidivrl
sub
enter
jmp
jnp
idivl
subl
pushf
imul
fimuls
inc
sti
jl
int3
stos
clc
scas
leave
dec
lcall
cwtl
cltd
andb
fimull
lods
enter
sub
jp
stc
movsl
lret
fnstcw
push
sbb
add
stc
mov
icebp
lods
add
sub
jbe
lret
clc
xor
stos
mov
dec
sub
xchg
sub
cmp
jecxz
enter
mov
out
setl
mov
cltd
leave
cmp
and
lods
mov
in
aad
sub
fcomp
leave
cli
enter
pushf
sbb
or
lods
test
loope
int
fimull
jns
lds
stos
bound
mov
sub
or
push
imul
pop
inc
cmp
xor
jb
mov
dec
scas
xchg
stos
in
neg
dec
subl
fnstenv
adc
ret
xchg
push
fwait
xor
jmp
leave
cli
pop
lcall
mov
pop
jmp
ss
cmp
mov
and
dec
fsubrs
clc
add
sbb
mov
fcomp
cs
scas
sub
jecxz
call
shll
lret
or
test
sbb
cld
stos
std
lahf
fsubl
dec
out
bound
sti
sbb
nopl
stc
mov
fimull
cld
adc
loopne
sub
mov
fstpt
cltd
lock
jnp
lods
or
adc
pop
pushf
lret
mov
sub
pop
dec
add
out
and
add
lea
cld
subb
or
pushf
nop
js
sti
or
add
scas
push
cmp
cltd
pop
icebp
push
cli
int3
push
fwait
cld
lret
imul
ljmp
les
xchg
gs
adc
sti
scas
lock
test
inc
stos
pop
jmp
mov
stos
fcmovnb
outsb
sub
imul
notb
psadbw
sbb
loope
mov
sbb
mov
jnp
int3
test
cmp
dec
mov
jp
cli
adc
adcb
mov
sbb
fsubrl
mov
scas
adc
fwait
ljmp
jne
cmp
sub
out
fld1
or
pusha
cmp
into
mov
add
imul
mov
xor
cmp
inc
push
mov
stos
push
sbb
leave
insl
ret
cld
rcl
enter
testb
inc
xlat
xchg
sub
cs
in
jmp
in
cmp
add
sub
push
pop
pop
imul
test
jnp
jo
sbb
into
clc
icebp
enter
test
jmp
sub
stc
sbb
cmp
mov
scas
pop
cmp
mov
pop
sub
sub
mov
pop
test
fdecstp
mov
lret
stos
push
push
lret
outsl
lock
or
mov
or
lcall
outsl
loopne
aam
ret
xor
ja
push
int3
add
fmull
lahf
sbb
push
rcrl
adc
mov
ljmp
jnp
and
cs
add
inc
aam
in
pop
sahf
clc
jb
aad
fnstsw
arpl
fimull
cld
xchg
outsb
and
adc
cs
insb
jmp
cmp
dec
je
and
int3
xor
stc
fisubl
mov
fdivl
test
mov
sti
jg
testl
and
jmp
jmp
test
inc
fwait
stos
sub
sbb
aad
jmp
roll
sbb
call
mov
mov
mov
cmp
cmp
leave
pop
stc
leave
adc
or
int
add
shrl
cmp
test
mov
lcall
dec
call
mov
xchg
xchg
stc
mov
fcomp
jmp
lods
clc
jmp
mov
sub
pop
sbb
mov
lods
out
and
lcall
push
or
inc
jbe
fnstenv
cmp
pop
mov
ret
mov
cltd
clc
int
in
cmp
pop
pop
ficoml
inc
fldenv
pusha
and
inc
lret
mov
test
push
enter
pop
lods
aam
inc
mov
pop
stc
test
clc
pop
fisttpll
and
xor
call
or
cmp
icebp
jae
cwtl
shl
dec
cmp
ja
fwait
cs
pop
fmuls
pop
bound
or
mov
cmp
aad
scas
add
call
and
mov
mov
ljmp
adc
pop
cmp
fwait
int3
enter
jne
mov
das
xlat
fcomps
and
in
addr16
fwait
sub
or
xor
pop
sub
insl
adc
clc
sub
cmp
stos
or
mov
pop
xchg
xchg
scas
cmp
mov
test
ret
cmc
jmp
xchg
sbb
pop
jmp
sub
rep
sub
cltd
lret
mov
pop
imul
mov
cmp
stc
outsb
fwait
int
imul
pop
dec
leave
xor
cli
icebp
fidivl
stc
mov
popf
add
pop
sti
lods
or
dec
cli
and
push
xchg
lret
push
or
xlat
and
inc
jmp
lahf
push
pop
pop
xchg
sub
pop
dec
loop
lret
and
sbb
cmp
call
div
sbb
clc
mov
fldcw
movsl
lcall
cmpb
cld
jns
int3
imulb
cmc
add
lret
mov
rorb
cld
cmp
pop
imul
shl
xchg
mov
and
dec
jno
jmp
shl
mov
fucom
test
mov
nop
mov
imul
pusha
andb
cltd
or
cwtl
mov
pop
test
xchg
cli
popa
jns
xchg
test
and
dec
sbb
int
sub
fdivr
xor
cwtl
sub
or
into
outsl
or
pop
sbb
push
mov
inc
sahf
pop
mov
pop
enter
xchg
inc
divl
movsl
jns
das
add
imul
movsb
mov
xor
sub
xchg
int3
mov
xlat
daa
ss
mov
sub
dec
jmp
jo
jge
mov
dec
cltd
in
sub
sti
hlt
movsb
sub
and
hlt
imul
xor
fcompl
lea
not
dec
mov
cmp
scas
dec
mov
dec
ljmp
cs
and
mov
aam
cmp
in
sub
mov
pop
lret
mov
pop
push
cmp
mov
int3
push
fdivrs
in
bound
les
push
xor
leave
inc
dec
test
adc
stc
aas
xchg
sbb
rcr
lret
push
and
arpl
cmp
or
cmpsb
es
xor
adc
mov
nop
or
mov
sub
jns
repnz
sub
mov
int
fstpt
lcall
mov
adc
cmp
jnp
mov
daa
mov
stos
testl
mov
clc
jmp
and
cltd
das
int
pop
sahf
and
push
sub
fcmovnu
jnp
sub
or
mov
lret
xchg
mov
in
fsubs
loop
fsts
movsl
sub
pop
lds
ret
repz
mov
add
lret
mov
outsb
jo
inc
stos
sti
add
or
sar
lcall
and
mov
mov
aas
dec
or
mov
cmp
sub
fildll
pusha
negb
outsl
call
cs
add
pop
lahf
ljmp
sahf
mov
fsubrs
cltd
test
cmp
daa
dec
arpl
or
icebp
cmp
fsubr
cwtl
call
lea
dec
cmp
push
jecxz
inc
mov
in
clc
lods
scas
lret
xchg
cmpsb
das
cmp
lods
or
fldcw
mov
leave
pop
call
or
ficoml
fcomps
leave
cmc
bnd
and
and
fwait
cs
mov
xlat
dec
dec
outsl
xor
xor
cmp
out
mov
cmp
cmpl
fsubr
scas
movb
imul
mov
push
dec
inc
imul
sbb
fdivrl
mov
fdivl
jle
jbe
push
fwait
and
sub
push
fistpl
mov
sub
cltd
xchg
pop
in
insl
mov
push
lret
push
mov
dec
lods
out
cli
scas
inc
stos
cltd
jge,pn
mov
call
dec
jmp
lcall
sbb
dec
lret
sbb
fldt
test
push
pop
dec
lcall
jns
ljmp
enter
cmp
push
mov
adc
fs
fcmovne
stc
cmp
and
insb
jle
dec
mov
in
cli
sti
and
dec
cmp
inc
and
cwtl
into
std
sub
call
push
xchg
xlat
fnstenv
cmp
shlb
cwtl
stos
mov
add
shlb
lcall
fsubl
aaa
test
mov
test
cmp
sarl
and
or
into
in
clc
mov
adc
dec
sbb
sbb
xor
and
dec
rcl
sbb
mov
xchg
push
mov
aaa
popf
test
int
repz
aam
jnp
leave
mov
mov
sti
mov
fisubrs
imul
mov
cli
out
pop
pop
loope
cmpl
jns,pn
mov
cmp
clc
and
mov
cs
jns
popf
dec
ret
shll
push
mov
into
in
pop
in
lods
lods
pop
xchg
xchg
xchg
ljmp
enter
or
or
dec
jmp
xor
outsl
sti
cld
mov
add
sbb
movsb
pop
jo
dec
and
fisttpl
or
sbb
clc
jg
ret
xor
jnp
neg
cltd
jae
jo
outsb
idivl
lcall
mov
dec
mov
std
fdiv
xor
sub
fstps
stos
cmp
sub
cld
into
sbb
pop
inc
int3
mov
mov
adc
in
xor
cwtl
lock
outsb
shl
call
xor
sub
inc
insb
jne
dec
mov
ret
cmp
sub
mov
in
sbb
sti
push
repz
sub
fdivl
in
sub
out
fimull
push
jo
cmp
insl
dec
jnp
dec
outsl
jne
enter
sub
test
lret
xlat
pop
or
adc
xor
cltd
xchg
push
fiadds
jmp
es
fcmove
rcll
sbb
cs
dec
and
lret
imul
test
out
pop
fnstenv
sbb
dec
arpl
cmp
outsl
mov
add
pop
pop
dec
stos
sub
in
or
fwait
repz
fcmovu
push
cmp
xor
pop
mov
cmp
cmp
sub
imul
movsl
fstl
sub
and
push
scas
jbe
or
ja
fstps
movb
lods
jecxz
xchg
jmp
jb
out
insl
xchg
xor
out
jne
lods
aad
lret
cmp
fdivrp
ljmp
sbb
push
cmp
in
cmp
fdivrl
jle
test
shll
in
xchg
pop
cwtl
pusha
mov
sub
inc
cmp
pop
lahf
lds
stos
jnp
mov
dec
xor
test
pop
dec
fwait
pop
lods
fdivl
mov
cmp
or
out
push
inc
aad
cld
sub
push
sub
sbb
insl
lahf
mov
rcll
pushf
psraw
sbb
std
adc
inc
dec
inc
add
sti
jp
mov
mov
test
imull
or
cmp
dec
loope
repz
or
test
mov
in
cwtl
cmp
mov
lods
inc
xchg
pushf
mov
or
lcall
ficompl
lahf
sub
out
mov
dec
pop
outsl
fisttpl
and
push
test
sub
outsl
mov
dec
ret
jnp
dec
lock
mov
dec
lret
aas
adc
orl
stc
lret
cs
jmp
cmc
int3
sub
xchg
sbb
sub
mov
xchg
sub
jp
mov
sti
push
dec
cmp
adc
test
stos
fnstcw
leave
jmp
mov
imul
arpl
cmp
lds
mov
mov
stos
xchg
ficompl
jnp
fwait
mov
xchg
or
fs
and
mov
stos
push
bound
or
shlb
jl
fisttpl
call
mov
jnp
cmp
jmp
call
out
mov
in
fdivrs
dec
mov
aas
cmp
arpl
js
mov
lret
pop
mov
lods
mov
fidivl
adc
popf
mov
shrl
outsb
lock
or
insb
imul
mov
ss
scas
into
jecxz
inc
sbb
fcomps
imul
int
cwtl
bound
add
pop
call
sbb
mov
mov
inc
mov
mov
jnp
sub
test
fsubl
stc
imul
xchg
cmp
fxch
pop
jp
stos
cltd
jle
scas
stos
add
testl
jne
rorl
enter
jmp
xor
outsb
rorl
mov
imul
dec
outsb
iret
aaa
add
jmp
mov
or
add
pop
inc
push
cmp
pushf
mov
fsts
xchg
push
or
jle
scas
sub
stos
stos
jns
imul
test
sahf
popf
je
or
leave
jns
add
sub
outsb
xor
stos
jmp
sti
dec
loop
jns
inc
test
sub
dec
jo
stos
inc
dec
pushf
jle
sub
inc
fadd
cld
jnp
cmp
cltd
les
sbb
pop
mov
dec
mov
inc
jnp
and
test
je
fistpl
cli
lcall
mov
lods
mov
inc
outsb
cmp
xchg
call
jb
stos
add
fbld
ficompl
fistl
pop
sarb
cld
ljmp
imul
int3
push
mov
ret
and
cli
insb
gs
or
cmp
rolb
add
ss
mov
dec
icebp
js
or
in
scas
arpl
sub
xchg
shll
mov
lahf
dec
jb
int3
mov
add
mov
nop
gs
mov
orl
scas
imul
xlat
imul
or
push
mov
sti
push
lahf
out
faddl
stos
mov
pop
or
or
outsb
add
or
jge
jno
dec
push
out
or
dec
outsb
dec
cli
test
dec
dec
dec
outsb
decb
or
outsb
dec
dec
or
popf
or
outsb
mov
out
mov
lcall
inc
mov
mov
fmuls
imul
outsb
sti
lret
or
outsb
inc
lret
or
mov
das
or
mov
outsb
repz
fisttpll
push
mov
and
pop
outsb
mov
or
mov
pop
mov
add
sbb
enter
pop
and
test
or
xor
mov
pushf
dec
leave
cld
enter
jp
mov
cmp
cwtl
imul
pop
lods
lods
into
mov
adc
dec
mov
stos
in
mov
movsl
cmp
jecxz
and
inc
lret
in
test
sbb
mov
enter
sub
js
dec
jmp
cmp
inc
aaa
mov
cmp
ljmp
cmp
pop
xor
fistl
pop
cli
negb
fadds
add
test
cmp
sti
leave
pusha
sahf
sbb
and
or
pop
fldenv
pop
dec
inc
add
lods
loop
sbb
call
sbb
adc
jmp
lahf
outsb
and
add
push
cmp
pop
popf
movsl
or
stc
cmp
enter
lret
jl
fdivl
in
int3
mov
sub
add
cmp
stos
mov
mov
jle
pop
popa
cwtl
mov
pop
fmuls
pop
clc
lret
sbb
mov
stc
lret
cmc
sbb
push
lcall
lret
test
roll
das
pop
jmp
test
lret
cltd
pushf
mov
sub
mov
fwait
mov
cli
lret
xchg
xor
or
imul
imul
bound
leave
push
cltd
xchg
inc
mov
pop
das
inc
dec
lock
jbe
mov
jmp
imul
mov
add
mov
sbb
and
dec
stc
sbb
or
pop
rorb
cld
mov
stos
int3
idiv
call
jecxz
cs
pop
imul
jmp
dec
fisttpl
inc
sub
inc
clc
ljmp
pusha
push
popf
mov
ret
push
xor
test
cmpsb
jmp
outsb
enter
mov
cmp
lcall
sti
lock
stc
rol
fdivrs
mov
movsl
pushf
sub
and
or
enter
das
lds
jmp
cs
jns
xchg
dec
cmp
fdivrs
test
in
inc
nop
pop
pop
loope
in
cwtl
pop
fldl
sbb
add
jl
adc
fsubs
push
fwait
xchg
ljmp
cwtl
add
adc
leave
or
or
cwtl
enter
jbe
mov
sub
cli
imul
test
test
jns
sti
add
sbb
xorl
imul
lcall
adc
jmp
jmp
jl
push
jns
mov
stos
aam
sbb
or
xchg
and
mov
xchg
push
dec
lcall
popf
xchg
fcompl
repnz
fcoms
enter
sub
push
subl
mov
jmp
enter
fdivrl
mov
cmp
inc
mov
xlat
dec
cwtl
lds
mov
or
stc
sub
mov
pusha
test
cmc
lret
scas
inc
or
cli
dec
mov
jmp
pop
std
lret
in
cmp
jns
mov
aad
mov
in
add
and
out
cmp
icebp
mov
pop
call
leave
imul
imul
add
xchg
les
dec
icebp
mulb
not
mov
inc
scas
rcll
test
jge
jbe
dec
sub
and
sahf
ja
outsb
in
test
sub
divb
clc
jmp
dec
int3
stos
sbb
testb
loope
icebp
cmp
popf
mov
and
data16
sbb
and
and
ljmp
sub
xlat
dec
mov
imul
das
inc
flds
jnp
test
dec
fcomps
call
or
divb
xchg
xor
mov
fwait
aad
sti
cmp
cmp
cmp
test
mov
or
push
mov
mov
mov
xor
xchg
cld
inc
popf
jns
mov
dec
lret
fwait
jmp
add
push
cmp
dec
sub
imul
jne
pop
fisubl
mov
cld
mov
sub
or
and
addr16
in
add
jp
adc
and
scas
es
jmp
mov
roll
xor
test
lret
xchg
push
mov
sti
sbb
scas
or
leave
clc
mov
adc
mov
sub
stc
cld
inc
movsl
adc
and
sub
pop
cli
pop
arpl
idiv
and
pop
or
int3
cltd
imulb
sub
sub
sub
push
sub
lcall
mov
sub
fldt
push
cmp
add
arpl
cs
inc
imul
pop
or
int3
cld
mov
lret
aad
fldcw
sti
xor
pop
add
sbb
nop
negb
cmp
fsubrl
lret
imul
lcall
ja
mul
inc
cmp
fcompl
orl
fisubl
mov
enter
or
mov
test
cmp
sub
mov
orl
mov
dec
or
icebp
lret
push
aam
and
sub
bound
push
cwtl
jae
popf
in
lcall
pop
mov
sub
cwtl
stos
push
push
inc
adc
dec
aad
mov
fidivl
pop
mov
test
pop
mov
inc
mov
lcall
lret
movsb
ss
cltd
arpl
enter
stos
incb
or
shrl
leave
int3
mov
cltd
dec
cmp
pop
sub
clc
push
jne
cmp
cld
nop
int
clc
rol
repz
mov
out
int3
loop
les
jmp
sbb
ficoms
jne
mov
enter
mov
or
mov
cltd
mov
sbb
rcrl
jle
scas
or
test
mov
test
inc
cmp
or
mov
test
and
sbb
mov
movsl
stos
mov
xlat
lods
pop
jns
mov
xor
fldcw
mov
fs
inc
cmp
aad
leave
rorb
jmp
stos
jle
inc
cmp
pushf
fs
mov
cmp
cmc
fnstcw
mov
stc
inc
cbtw
aad
pushf
mov
jnp
jno
xchg
data16
clc
jmp
sarl
lret
aas
mov
icebp
cmp
in
ss
mov
xchg
faddl
subl
stos
cs
and
pop
cltd
mov
or
xor
imul
push
out
mov
sub
pop
lds
mov
inc
dec
pop
mov
roll
mov
ds
imul
ljmp
mov
and
repz
sub
xor
pop
sbb
sub
xlat
sbb
or
dec
or
jnp
jns
jmp
fsubrl
ja
js
cmp
mov
cmpsb
ss
adc
stc
clc
mov
push
stos
mov
std
jnp
fistl
fldcw
or
pushf
dec
add
add
xlat
lcall
jns
es
dec
jb
test
fistpll
lcall
ljmp
movsb
jnp
leave
jmp
xchg
and
call
cmp
stos
mov
pop
adc
mov
dec
popf
nop
cmp
dec
or
clc
fwait
sub
push
and
ret
out
shll
mov
test
movsl
imul
cli
inc
pop
idivb
mov
icebp
lret
push
pop
add
or
adc
lods
cwtl
mov
lret
vmread
clc
imul
xchg
sbb
pop
outsb
dec
cwtl
dec
dec
test
sbb
or
cmp
mov
test
mov
fdivr
shl
sar
adc
or
test
int3
sbb
sbb
cs
rcll
jns
sub
stos
push
cld
imull
cmp
fidivrl
pop
arpl
sahf
and
inc
imul
dec
mov
fsubrl
fdivl
and
test
int
imul
jo
popf
imul
fisubl
sbb
push
rcrb
jmp
or
or
sbb
xor
mov
jns
test
sbb
lock
cwtl
fistl
test
mov
push
cmp
and
mov
lcall
xor
pushf
xchg
rolb
fwait
rcll
dec
movsl
fisttpl
inc
jbe
mov
in
mov
mov
cmp
dec
popf
in
cltd
sub
mov
scas
pop
push
jb
sub
mov
das
or
cmc
or
divb
and
mov
stos
sbb
stc
cltd
mov
mov
ss
cmc
rorl
loope
cld
sti
jmp
xor
and
mov
dec
fsubrs
pop
cs
lret
fstps
sbb
popf
adc
jns
fsub
idivl
inc
jne
ljmp
sbb
lret
mov
leave
insb
imul
lret
leave
and
xchg
mov
incb
fst
cli
enter
mov
std
test
imul
movsl
movsl
enter
or
push
mov
lret
insl
outsb
cmp
or
imul
lret
subb
adc
stos
sarl
and
pop
ror
push
inc
mov
sbb
pushf
and
sti
mov
lcall
leave
and
ret
in
and
lret
clc
add
mov
and
sub
sub
push
or
ljmp
jmp
sub
pushf
jo
clc
jns
iret
imul
sub
arpl
cmp
ret
adc
int
fsubrl
movsl
and
cwtl
jmp
mov
mov
out
lcall
sub
leave
lea
scas
pop
inc
sti
jnp
int3
in
lret
adc
int
cmp
sahf
and
insb
mov
orl
sub
hlt
flds
xchg
sbb
mov
in
cmp
stos
add
mov
push
xchg
cli
test
in
xchg
pushf
dec
cmp
xchg
dec
mov
fisttps
jo
or
add
leave
sbb
sub
test
dec
and
pop
dec
aam
hlt
cmp
mov
lret
push
testb
stos
jp
in
fisttpl
jnp
ljmp
sub
mov
and
sub
cs
mov
fstps
sub
xor
cmp
js
test
fisubs
adc
mov
push
fadd
mov
cmp
fsubr
fsubrl
mov
jmp
xchg
and
sub
mov
and
outsl
add
test
imul
pop
mov
mov
sbb
int3
int
test
dec
call
fwait
mov
mov
mov
test
or
int
stos
sub
stc
test
mov
dec
enter
sbb
lret
dec
fldt
call
or
das
and
scas
pop
cs
xchg
cmp
mov
cs
cli
pop
add
pop
mov
into
pushf
aad
or
cmp
dec
xor
fisttpl
push
xor
pop
jb
test
in
cli
dec
in
shll
mov
push
negl
sub
dec
cmp
jl
je
sub
mov
outsb
hlt
std
pop
cmp
aam
sahf
add
fmuls
mov
aad
cmp
push
in
or
fwait
dec
mov
mov
dec
mov
cli
test
ljmp
xor
mov
or
jb
popf
clc
stos
cld
cmovbe
sub
arpl
or
lds
stos
mov
or
dec
leave
lds
out
jle
ljmp
pop
lret
add
xchg
dec
scas
push
test
in
int3
sub
adc
enter
cli
cwtl
cs
mov
pop
lods
cmp
subl
cmp
add
cs
int3
jge
cmp
lret
imul
stc
xchg
cmp
pop
and
testb
push
mov
pop
jb
daa
xchg
xor
stc
push
dec
jle
mov
xor
lret
mov
dec
aad
int3
dec
add
jb
rcrl
mov
jmp
xchg
or
xorb
mov
jnp
rorb
lret
test
inc
call
mov
in
test
xor
sbb
daa
ss
adc
les
fwait
push
fsts
cmp
mov
movsb
sbb
mov
dec
scas
popf
ja
roll
add
test
or
test
dec
cmp
sbb
in
jbe,pn
outsl
jmp
xchg
sub
xor
lcall
fldenv
mov
mov
mov
insl
dec
imul
jns
in
shrl
xchg
flds
jo
xor
dec
mov
jmp
imul
int3
fst
cld
jne
fwait
lret
ljmp
cmpsb
dec
ret
test
cld
test
jns
jmp
sub
dec
mov
dec
mov
pop
subb
adc
out
mov
insl
out
outsb
mov
dec
scas
inc
sub
mov
cltd
insl
pop
in
out
enter
testl
sti
call
enter
sbb
lret
and
jmp
xchg
ret
pop
stos
sbb
inc
or
add
mov
repnz
mov
push
stos
roll
lods
pop
cwtl
mov
fistpl
testb
dec
mov
cmp
sub
call
lcall
ret
test
push
and
mov
outsl
cltd
mov
repz
xchg
lods
imul
mov
call
mov
imul
cmp
icebp
in
sti
stos
divb
pop
adc
leave
cmc
sub
mov
test
flds
test
xchg
push
adc
bsr
mov
inc
imul
sbb
loope
pop
add
test
xchg
sub
mov
mov
scas
neg
inc
add
and
pop
adc
lret
cmp
lret
jmp
fimull
fnstcw
adc
hlt
dec
push
add
ljmp
dec
mov
sbb
mov
fadds
inc
fsubrp
lret
leave
je
sub
mov
js
mov
and
adc
inc
jl
data16
jns
sub
mov
ja
idiv
stc
and
lret
fidivrl
cmp
daa
inc
pop
xchg
cli
and
jmp
cmp
push
sub
sti
jnp
leave
dec
fnsave
rcrl
leave
int3
sub
fidivrl
or
out
add
pop
mov
jle
jnp
sahf
in
or
xor
stos
lret
push
repz
adc
dec
jmp
imul
ljmp
std
shll
jnp
push
xchg
push
test
stos
out
in
pop
fsubl
jl
test
sub
dec
xchg
ja
dec
cmp
sbb
cs
ljmp
mov
imulb
icebp
stos
dec
cmp
mov
std
sub
lret
sbb
cli
fldl
pop
mov
stos
and
or
dec
leave
adc
in
dec
add
xchg
dec
mul
add
xor
popa
mov
xchg
enter
sub
cld
sbb
fisttpl
mov
test
dec
dec
and
ret
jmp
lods
stc
imul
cmp
mov
int3
scas
dec
and
sub
jbe
ja
xchg
test
cmp
cli
stos
push
rcr
and
sbb
cmp
cld
and
jns
les
leave
jo
jp
in
fwait
inc
call
jmp
jne
and
jne
imul
push
into
sub
mov
jmp
test
in
pop
stos
inc
imul
and
sub
mov
lret
js
add
out
dec
int3
in
or
and
fdivrs
lods
push
cli
cmp
cs
je
ss
mov
push
mov
mov
pop
imul
sbb
fbld
bound
push
ficompl
and
arpl
shrl
sarl
mov
mov
std
jns
cmp
or
fdivrl
imul
fisttpl
sbb
cltd
test
add
int3
mov
pop
test
ljmp
cs
xchg
sub
add
imul
sbb
add
lods
push
or
or
test
cmp
test
dec
inc
xor
cmp
test
mov
jmp
fildll
pop
cmpsl
test
call
outsb
fstp
mov
enter
push
dec
int3
ljmp
mov
jne
mov
adc
fnsave
mov
imul
jb
pop
sub
fmull
fistl
jmp
and
sti
pushf
in
repz
mov
int3
stc
ret
jbe
push
cli
imul
jne
sub
mov
pop
das
dec
cwtl
enter
lret
lret
sub
sub
dec
lret
mov
add
mov
inc
movsl
mov
mov
and
pop
pop
xor
dec
stc
sub
sub
pop
cld
popf
sbb
pop
mov
test
mov
jne
in
jmp
jns
or
leave
fildl
sahf
sub
popf
jnp
cli
rorb
lret
push
mov
leave
test
lret
push
mov
cmp
dec
int3
ja
imul
push
adc
push
xor
add
and
loop
and
call
ljmp
mov
stc
test
ss
cmc
dec
enter
fcompl
ds
and
pop
shlb
push
jnp
dec
jl
jne
fnstcw
and
pop
imul
pop
push
push
pushf
or
ret
dec
dec
mov
mov
ss
imul
or
and
ret
cwtl
mov
test
jbe
inc
cli
lcall
insb
cmpsb
xchg
jle
ja
xchg
mulb
sbb
sub
or
mov
sbb
push
pop
jmp
fwait
pop
sub
cmp
leave
lahf
cmp
scas
dec
inc
pop
int3
mov
mov
xor
pop
or
mov
jbe
or
out
outsl
test
cmp
push
cld
sbb
mov
mov
std
jb
mov
in
mov
add
jno
or
cltd
pop
fsubrl
mov
fisubrl
push
jne
or
mov
negl
stc
test
or
fmul
fsubrs
pop
lds
cltd
mov
mov
mov
fldcw
mov
popf
stc
shrb
sub
lea
cs
je
std
cld
scas
sub
mov
stos
fcmovu
sbb
fldl2t
out
icebp
repnz
mov
enter
ljmp
mov
daa
and
ljmp
outsl
xchg
cmp
lcall
mov
lods
int
cmp
imul
lret
fstps
int3
inc
mov
pop
call
stos
stos
xchg
mov
cmp
cmp
sbb
sub
fcmovne
cli
ljmp
fwait
mov
ljmp
cli
fldt
fsubl
sbb
inc
add
mov
mov
stos
jbe
push
in
jmp
pop
loop
sub
sbb
lods
sub
lret
test
shrl
fstpt
aad
sbb
fsub
ljmp
in
add
aas
stos
divl
cmp
dec
int
mov
stos
jmp
iret
xchg
or
and
inc
or
lret
fsubr
imul
sbb
fistl
leave
dec
es
mov
loopne
call
cmp
dec
pop
inc
sbb
jmp
sbb
paddusb
cmp
sbb
lret
lock
xlat
call
ds
and
mov
fcompl
sub
popf
sbb
sub
pop
clc
stos
scas
xchg
fstps
jmp
fcmovb
lret
stos
fdivrp
adc
pushf
xor
mov
sbb
lods
je
xor
repnz
fadd
lods
sub
cmp
in
inc
ss
or
divl
negl
mov
fimull
mov
leave
sub
cmp
jns
das
pusha
inc
cmp
xor
sbb
aas
and
cld
cs
stos
cwtl
imull
dec
stc
jnp
lods
stos
jnp
das
ja
pop
aaa
mov
cli
or
imul
mov
psubb
pop
sbb
or
mov
pushf
sub
cld
inc
in
sbb
pushf
or
jnp
outsl
test
mov
pushf
mov
lcall
dec
sbb
imul
mov
stos
fiadds
cld
cmp
sbb
lret
sbb
shlb
push
jmp
cmp
stc
fnop
test
mov
call
fdivrs
and
adc
mov
pop
pushf
dec
mov
rdpmc
jnp
sub
or
adc
call
mov
pop
leave
clc
scas
adc
sub
in
neg
mov
cmp
dec
cmp
dec
in
cwtl
sub
or
mov
sbb
imul
repnz
fldcw
rolb
test
xor
sub
stc
sti
mov
imul
and
stos
push
test
fildl
fisttpl
jmp
hlt
mov
dec
test
xchg
mov
inc
mov
push
test
test
sti
out
cltd
xor
pop
loopne
jle
and
jmp
test
sub
pushf
xor
out
cwtl
or
mov
test
fdivr
push
adcb
pop
xlat
fiaddl
cmp
mov
add
pop
and
iret
fadd
cmp
std
cmp
lods
mov
mov
jbe
stos
or
or
adcl
cmp
imul
xchg
cmp
sub
repnz
clc
test
lret
push
sbb
test
aaa
lods
imul
adc
push
dec
or
push
lret
xor
daa
inc
leave
jno
leave
movsl
mov
hlt
movsl
mov
test
pushf
jmp
dec
ret
ljmp
test
addl
lret
out
mov
stos
sub
sub
mov
fdiv
pop
cmp
cmp
cli
cmp
mov
mov
and
dec
mov
leave
cmp
cmp
cltd
stc
mov
lods
scas
mov
mov
adc
pop
mov
imull
mov
fwait
les
or
test
dec
mov
test
lea
outsb
stos
call
movsl
movsb
aad
jmp
jp
aas
cltd
in
inc
shll
pop
aam
and
test
jns
fisttpll
lods
lret
js
lret
call
in
sbb
xor
int
cmp
std
sub
jne
or
jns
xchg
push
imul
cmp
lods
sbb
jnp
into
into
mov
push
mov
mov
xchg
adc
sub
fwait
inc
dec
nop
add
sarl
fbstp
inc
sbbl
push
or
in
inc
cmp
test
cmc
and
lret
sbb
imul
fldl
jns
mov
push
lret
mov
incl
and
jecxz
imul
call
aad
sbb
arpl
aad
cli
int3
pushf
push
popf
push
mov
lods
inc
pcmpgtd
cltd
imul
cmp
adc
lea
fdiv
inc
push
popf
jg
sbb
cmpsb
test
xchg
popf
jae
mov
scas
loope
sub
adc
test
sbb
push
mov
loopne
stc
pop
leave
add
jnp
cltd
and
pushf
sub
push
push
fiaddl
pop
pop
add
inc
movsb
lods
pop
dec
notb
cmp
sub
test
sub
leave
or
push
xchg
jb
pop
stos
and
test
inc
mov
jecxz
lcall
mov
or
scas
jne
fisttpl
or
popf
insl
jnp
inc
call
pushf
mov
jle
jecxz
stos
cmp
sarl
adc
cmp
pop
icebp
inc
push
push
mov
dec
mov
mov
dec
and
fwait
or
or
imul
hlt
mov
fsubrs
sbb
dec
mov
cmc
push
adc
inc
repz
in
ljmp
mov
scas
jg
lret
jno,pn
movsb
add
shll
sbb
outsl
enter
stos
mov
and
nop
mov
mov
inc
test
int
dec
cmp
mov
lret
in
sbb
outsb
xchg
mov
sbb
imul
call
jne
cmp
cmp
sub
cli
enter
or
in
iret
les
vcvtsi2ssl
outsb
cmp
or
lods
xchg
loop
xchg
or
cmpb
or
inc
and
adc
leave
pushf
test
rolb
ljmp
lret
mov
test
pop
outsb
cmp
mov
movsb
mov
or
mov
dec
sbbb
or
add
sub
pushf
insb
out
ss
mov
enter
add
fadds
test
push
faddp
cltd
inc
dec
push
sti
push
cmc
lods
lret
adc
mov
jnp
jecxz
iret
imul
in
mov
cmp
sar
test
mov
mov
stos
lret
testl
idivb
lret
and
imul
int3
mov
lods
pop
and
leave
jecxz
shr
mov
aas
ljmp
neg
int3
push
jnp
call
movsl
cmp
and
jae
lea
and
pop
sub
dec
cld
jmp
sub
cltd
rorb
enter
mov
and
fld
std
push
jmp
outsb
sub
ljmp
push
xchg
popf
cwtl
pop
fidivrl
inc
aas
insl
jmp
or
xor
cmp
mov
add
test
mov
int
test
ja
pop
push
cmp
sub
test
lret
add
and
add
cvttps2pi
lret
mov
cmp
xchg
int3
stc
mov
pusha
lret
leave
sarb
jnp
shlb
aaa
dec
and
dec
pop
jns
jmp
pushf
or
and
imul
cmp
fisubrl
or
test
push
mov
jmp
mov
jns
cwtl
lods
dec
and
enter
stc
cmp
jecxz
jnp
adc
movsl
pop
sub
adc
icebp
mov
inc
lcall
cmp
sti
mov
dec
call
xchg
mov
stc
mov
pop
or
movnti
lret
cli
push
or
imul
sub
sbb
movsl
mov
adc
pop
xor
jge
fdivr
cs
lret
sub
aas
jne
sub
dec
cmp
lret
fsubrs
out
mov
dec
cmp
sbb
insb
push
test
add
cltd
jns
scas
add
inc
sub
mov
cli
stos
add
mov
and
clc
mov
add
or
lret
icebp
mov
sub
les
pop
dec
sbb
test
pop
sub
sti
std
dec
ror
cmp
int
fcomps
cs
enter
stos
sbb
cmp
sub
jmp
add
shlb
sub
or
mov
pop
std
pop
movhps
cld
dec
sti
aad
sbb
cli
jbe
sbb
dec
loopne
sbb
int
mov
mov
jecxz
add
mov
push
sbb
mov
push
sub
mov
pop
mov
sub
pop
jmp
jmp
fldt
test
lods
ja
push
js
cwtl
mov
jmp
add
lcall
leave
cmp
inc
sub
fsub
movl
mov
loopne
cmp
jl
cs
and
lcall
stos
int3
or
mov
mov
inc
fldcw
movsb
jnp
mov
xor
sbb
sub
pop
sti
mov
mov
fistpl
jno
jmp
ret
mov
or
daa
jecxz
aas
mov
mov
pop
fldt
imul
loop
loope
cmp
les
add
out
sbb
cmp
sbb
and
fistpl
int3
int
test
test
mov
jne
cmp
cmc
ss
lods
lock
cli
xchg
sbb
inc
mov
xchg
xchg
stos
pop
xchg
cltd
mov
dec
sub
cmp
dec
movsl
leave
fxch
pop
pop
test
sahf
mov
dec
xor
inc
or
pop
jns
bound
add
insb
jo
dec
test
test
mov
fsubr
push
jmp
fwait
pop
imul
mov
mov
mov
je
pop
mov
sub
clc
lea
sbb
inc
push
mov
lret
stos
mov
cmp
xlat
mov
push
xlat
fadd
js
jns
out
ljmp
cmp
aas
pmaddwd
xor
cmpsb
or
xchg
mov
ljmp
sub
shrl
sub
mov
inc
cld
cwtl
imul
mov
repz
sub
dec
roll
rsqrtps
scas
sbb
dec
and
aam
loop
test
int3
mov
imul
mov
imul
cwtl
sti
pop
push
fcompl
fadd
mov
lea
mov
cmp
cli
cltd
cmp
shll
loope
int
dec
sar
enter
ja
test
scas
lret
jns
cs
fdivrl
stos
movsb
lcall
leave
inc
stc
fwait
xor
mov
in
sbb
stc
jmp
fcmovnb
imul
mov
adc
mov
les
loope
sub
mov
and
lret
in
in
sti
cmp
fyl2xp1
and
cmp
jne
push
cmc
push
inc
imul
cld
in
je
pop
jmp
fsubrl
or
rclb
faddl
stc
xchg
imul
inc
enter
or
push
sub
ror
cmp
jecxz
mov
xor
clc
cwtl
push
insb
dec
rorb
scas
cmpsl
imul
jo
ret
adc
sbb
jnp
pop
les
les
cwtl
ljmp
inc
cmp
cmp
cmp
cltd
pop
jnp
or
cmp
mov
fsubr
add
jbe
ljmp
sti
or
daa
jns
fs
jnp
ja
stos
xor
inc
mov
imul
mov
inc
fwait
adc
mov
sbb
dec
ja
jns
mov
mov
ret
pop
mov
dec
pop
leave
xlat
mov
data16
push
sti
cld
inc
stos
ret
stos
xor
sbb
cmpb
jnp
sub
popa
and
out
or
mov
hlt
dec
xchg
ret
mov
fcmovnu
inc
lret
sti
shrl
or
int3
adc
fisttpll
adc
pop
jmp
xchg
or
scas
add
lret
int3
insb
mov
xor
loope
std
pop
popf
xchg
ret
cli
fdivr
lods
nop
in
mov
add
shrl
ljmp
xchg
jmp
inc
adc
jne
dec
pop
divl
and
cwtl
cmp
add
mov
mov
test
cmp
in
ficompl
fnstcw
cltd
mov
and
lods
mov
push
and
aas
repz
cmp
push
fdivrs
or
out
dec
xor
mov
dec
lretw
dec
sbb
push
cli
or
fwait
lret
cmp
add
imul
in
mov
pushf
pop
cs
imul
fxch
fldl
dec
cmp
push
or
push
mov
inc
xchg
and
sub
data16
and
cmp
ljmp
jmp
movsl
pop
mov
xor
test
sub
sbb
stos
test
clc
lea
sub
je
in
sub
sub
les
push
stos
mov
add
mov
rol
cltd
sub
mov
dec
sub
xlat
sti
leave
fadds
dec
push
pop
or
inc
test
call
sbb
popf
pushf
fwait
cld
mov
cli
iret
cmp
pop
mov
and
or
stos
fwait
cwtl
and
push
xchg
stos
hlt
mov
mov
outsb
or
xlat
enter
xlat
lods
mov
lea
pop
mov
cmp
cmc
fldenv
sub
nop
pop
stc
and
xchg
push
xchg
sbb
les
sub
cmp
cltd
jp
scas
outsb
sub
sub
insl
in
stos
cli
adc
test
test
repnz
loop
xchg
scas
or
xchg
in
sub
movsl
cwtl
cmp
sub
mov
xlat
sub
iret
pop
push
test
and
pop
or
cmp
cmp
dec
mov
pop
cltd
andb
stc
outsb
pop
jns
stos
or
lods
dec
cmp
pop
mov
in
in
daa
xlat
xchg
ror
sbb
and
stc
or
les
test
mov
pushf
jnp
fwait
push
lret
cmp
das
loope
adc
int3
stc
lods
sub
or
mov
test
cld
dec
js
fsubl
xchg
fwait
push
cmp
popa
dec
cmp
mov
ja
ljmp
fdivrs
mov
cmp
pushf
lret
sbb
testl
leave
mov
inc
and
imul
lock
call
mov
pop
stos
and
push
out
and
push
test
mov
pop
cmp
push
xor
cmp
push
sub
js
mov
cmp
cmp
jecxz
cmp
sbb
test
stos
mov
sub
xor
inc
cmp
fstpt
sub
fisubl
stc
js
fnstenv
xchg
ret
ds
jmp
sub
test
mov
inc
mov
movsb
cltd
das
ret
fstps
inc
lods
dec
sub
movsl
xlat
int
mov
xor
lods
xor
xor
movsl
in
cli
lds
ret
cmp
mov
fldt
pusha
sbb
xor
test
jns
xchg
dec
mov
into
cmp
inc
mov
pusha
inc
imul
leave
dec
lcall
pop
cltd
lret
data16
outsb
stc
jmp
lahf
sub
stos
mov
sbb
cs
sub
mov
dec
or
sub
cs
inc
sub
jl
lcall
add
adc
fidivrl
stos
jmp
cmp
mov
cmp
push
sub
cmp
pop
and
scas
mov
sub
jmp
push
and
dec
mov
dec
sbb
mov
xlat
inc
test
jb
popa
jmp
inc
and
cmp
das
mov
call
lret
adc
adc
fnstenv
pop
add
mov
call
sahf
cmp
sbb
add
shlb
lcall
push
mov
popa
inc
out
lret
sub
cltd
repz
push
push
cwtl
fldcw
cltd
popf
dec
sub
jmp
roll
scas
bound
push
lods
pop
cmp
andl
stos
dec
pop
fs
into
add
fcoml
mov
stos
mov
mov
inc
or
fnsave
dec
test
call
cmp
cmp
pop
in
daa
mov
daa
movsl
sub
sbb
dec
enter
fidivrl
pop
repnz
sarl
int3
stos
sub
cld
mov
imul
nop
rorl
imul
sbb
loope
mov
sti
mov
mov
sbb
stos
sub
scas
xor
bound
fmuls
int
lods
inc
add
or
pop
sti
sbb
aad
imul
bound
in
mov
sub
dec
outsb
int3
sti
cwtl
jne
dec
mov
jnp
popf
lock
xor
mov
negl
std
or
cmp
lret
leave
fldt
outsb
and
aad
sbb
sub
sub
dec
xor
repz
das
mov
mov
dec
jl
lods
cld
test
or
and
stos
mov
in
in
stos
mov
adc
nop
xor
and
cld
and
sbb
lods
outsl
sub
sbb
pop
add
outsb
loop
cmp
int
and
mov
sub
imul
push
into
mov
into
test
jl
pushf
imul
and
mov
dec
add
pop
add
jmp
in
cld
fldln2
push
xor
sub
mov
or
js
lret
fidivl
test
sub
leave
sarl
lcall
sti
cmp
into
pop
popf
sub
fdivs
clc
sahf
or
dec
fwait
das
inc
sub
loopne
test
sbb
pop
jmp
push
and
fsubrl
clc
mov
enter
outsb
adc
xchg
push
jnp
in
cmp
mov
sbb
out
leave
out
popf
bswap
adc
mov
mov
idivl
inc
or
das
cmpb
in
inc
jmp
push
pop
adc
rcrl
fsubrs
sbb
jbe
jns
inc
or
inc
dec
jne
lcall
jnp
mov
inc
mov
mov
leave
fucomip
cmp
dec
call
fimull
add
ljmp
and
or
nop
cmp
xor
inc
push
sti
lcall
lret
xchg
cmp
and
imul
faddl
sbb
out
inc
ljmp
sbb
fisubrl
icebp
xor
stos
pushf
stos
mov
popa
or
sbb
test
cmp
jp
push
rorl
stos
mov
dec
pushf
movsl
xor
ret
xchg
stos
ljmp
mov
mov
dec
stos
fsts
call
cmp
mov
jns
testb
mov
cmp
jb
mov
mov
aam
sbb
dec
cmp
mov
fcmovnb
and
xchg
pop
or
insb
lret
sub
cmp
gs
lods
aam
cmp
add
mov
sbb
mov
jnp
rcr
mov
cmp
movsl
cmp
push
mov
arpl
imull
leave
cltd
jnp
shrl
mov
push
mov
sub
les
fidivl
clc
jl
push
or
lcall
hlt
cmp
dec
dec
fnstenv
jmp
mov
imul
outsb
push
sbb
dec
xchg
mov
lahf
scas
sahf
xor
pop
int3
leave
jbe
lods
sub
jne
imul
jns
in
add
ret
loope
int
cltd
add
push
into
push
clc
mov
fadds
and
shlb
stos
repnz
fildl
xor
cs
das
jl
dec
and
fnstsw
fldcw
fs
push
mov
mov
inc
sub
cmp
clc
sbb
inc
leave
ljmp
mov
or
mov
je
or
mov
pop
xor
lods
out
fwait
std
mov
cwtl
pushf
mov
movsb
inc
data16
ret
sub
cwtl
mov
test
dec
pop
fisubl
outsb
popa
inc
pushf
fs
scas
addl
cmc
and
flds
lret
dec
dec
cli
test
aas
int3
stos
clc
ja
enter
hlt
rcll
cmp
cs
movsb
cwtl
add
add
adc
jbe
jnp
push
test
and
sbbl
mov
mov
dec
push
mov
or
or
mull
sub
ficompl
dec
lcall
insl
push
cmp
iret
sti
insb
xor
cli
lods
dec
inc
lcall
stos
and
jns
xchg
mov
out
imul
inc
les
test
dec
cli
push
aas
inc
leave
icebp
dec
jno
ja
out
jl
mov
or
js
mov
fiaddl
int
sti
and
leave
test
movsl
fisttpll
pop
bound
mov
sbb
cmpsl
sub
stc
fstps
scas
sub
jl
je
lods
jnp
call
pop
pop
sub
fisttps
cwtl
mov
scas
negb
push
out
cmp
sti
sarl
inc
adc
fsubrs
jns
incl
pop
or
fsubl
push
sub
pop
jmp
jmp
repnz
insb
sub
mov
in
fnstcw
icebp
lock
outsb
pusha
xchg
dec
xchg
cmpsb
cmp
enter
dec
sub
mov
ljmp
dec
jns
push
ror
sub
inc
sbb
pop
jecxz,pn
dec
call
fucomi
cmp
mov
dec
mov
leave
in
and
pop
ljmp
fisttps
or
mov
mov
sub
sub
pushf
fimull
leave
pop
daa
out
ljmp
push
cmp
lods
mov
les
out
fsts
dec
outsb
repz
mov
ja
fisubl
xchg
xor
adc
movsl
pop
dec
xchg
mov
aas
push
lcall
subb
push
out
mov
add
lcall
cmp
aam
or
xchg
pop
fsubrp
pop
and
leave
sbb
cmp
xchg
movsl
push
mov
pop
clc
repnz
in
fisubl
mov
pop
xchg
pop
aad
pop
mov
subl
pop
mov
xlat
add
sub
cmp
leave
int3
aad
lret
cld
cmp
xor
lahf
lods
jmp
dec
inc
push
pop
test
jns
mov
inc
stos
sbb
mov
test
ljmp
add
fldenv
dec
mov
or
sbbl
js
or
int
imul
pop
les
adc
adc
dec
and
leave
cld
dec
inc
icebp
call
mov
addb
push
mov
dec
or
sub
test
fwait
mov
bnd
ljmp
adc
test
jmp
jp
mov
sbb
xchg
jecxz
dec
adc
fisttpl
jnp
pop
clc
arpl
and
xor
and
cltd
repz
je,pn
stos
mov
and
ja
jmp
out
call
jnp
leave
inc
sti
dec
loope
add
dec
in
jne
jecxz
cltd
mov
xchg
rorb
test
dec
pushf
leave
and
lret
out
in
sub
shll
sbb
jne
cmp
pop
and
cli
clc
add
cltd
arpl
cli
ja
test
js
mov
dec
mov
scas
mov
in
enter
pop
push
cmpb
sbb
not
cli
cmp
pop
enter
sti
jecxz
shll
das
stos
sub
push
lret
loopne
mov
lock
push
jns
outsb
fmull
outsb
sub
and
movsb
dec
xor
cmp
leave
jge
push
ljmp
dec
leave
in
xchg
adc
xchg
cmp
jo
or
mov
mov
scas
bound
ljmp
cwtl
jns
cmp
and
pop
push
or
mov
stc
dec
cld
test
out
jmp
imul
fs
popa
jecxz
jno
mov
xorb
xor
jnp
xchg
or
fdivrl
in
nop
in
lcall
xchg
mov
cmp
mov
mov
dec
dec
lcall
dec
push
js
js
repnz
cmp
xchg
pop
jl
je
cld
stos
lret
int3
cmp
cltd
adc
inc
divl
ljmp
xor
jmp
das
cld
dec
and
adc
adc
rcr
rcrl
rcrl
test
imul
cmpsb
fadds
rorl
sbb
sub
sbbb
fistpll
inc
lock
repz
stos
sbb
call
push
add
or
xchg
outsb
cmp
imul
cli
or
ja
push
jb
mov
cmp
dec
dec
popf
pop
or
fdivs
sbb
mov
sbb
pop
pop
adc
dec
into
pop
jns
push
lock
stos
imul
cmpb
dec
ja
call
test
fmuls
adc
stos
call
dec
imul
sbb
sub
cltd
mov
leave
jmp
leave
jecxz
dec
push
push
or
in
inc
mov
lods
sub
jbe
fisubrs
stos
mov
mov
pop
cmp
call
fiaddl
leave
lret
sub
sahf
and
int3
cs
mov
cmp
daa
xchg
lds
flds
jecxz
cmp
pop
aad
aaa
pushf
mov
movsb
mov
push
mov
fcmovne
mov
test
stos
adc
dec
jns
imul
cmp
xor
mov
xor
sub
ss
mov
bound
pushf
pop
sbb
sbb
dec
cmp
xchg
orl
test
sbb
clc
push
mov
cld
pop
sub
or
mov
inc
and
mov
mov
das
popf
push
xchg
psubsw
add
cltd
mov
aam
lret
and
lea
push
lock
sub
jo
cs
cmp
cmp
enter
movsl
and
out
cmp
inc
imul
frstor
jmp
test
loope
adc
mov
je
cmp
lods
mov
into
xchg
int3
jne
add
xor
stos
pop
sub
xchg
leave
jns
add
dec
cwtl
and
cmp
shll
psadbw
cmp
jl
add
jnp
sti
int3
push
in
mov
mov
xchg
pop
add
dec
in
clc
call
subl
lret
mov
fistpl
and
jmp
cmp
sub
dec
inc
lcall
fsubrl
mov
cmp
lds
cli
fdivrs
sub
lods
inc
fbld
mov
sti
stos
cs
bound
xchg
hlt
into
lret
dec
cmp
pushf
sub
jnp
call
sti
mov
mov
sti
lods
dec
fnstsw
arpl
into
bnd
cs
inc
cltd
addr16
mov
leave
or
add
stos
push
repnz
dec
sbb
sub
sub
pop
xor
inc
mov
test
lods
jo
inc
pop
lods
mov
aas
pushf
pop
adc
xchg
fsubl
sbb
outsb
jl
add
xchg
mov
cmp
in
leave
stos
dec
idivl
sub
mov
in
jb
fwait
mov
inc
mov
jg
sbb
stos
pop
mov
xchg
mov
mov
mov
sbb
jle
enter
jmp
mov
fistpl
imul
sbb
dec
dec
int
fwait
sub
jle
leave
dec
dec
mov
jmp
jecxz
stos
popf
test
fldcw
rcrl
loope
das
xlat
sub
mov
clc
push
fsubrl
popa
jmp
fsub
popf
ffree
mov
mov
inc
push
stos
leave
jge
lods
xchg
sub
push
fisubrl
fisubrl
mov
stos
push
jbe
adc
add
pop
mov
mov
pop
cli
sub
cli
lret
test
sbb
or
sub
or
enter
sti
cmp
pop
push
mov
fdivr
inc
xor
mov
mov
lods
stos
scas
pusha
lock
imul
mov
lods
notl
fmul
fidivl
pop
or
dec
outsb
xor
sub
dec
add
or
and
or
ljmp
and
push
jmp
mov
shll
aas
loop
pusha
mov
shlb
outsb
mov
scas
push
and
cltd
or
daa
jns
fsts
adc
addr16
jmp
in
in
or
cli
scas
jge
jns
in
mov
mov
fildl
test
lods
xchg
in
int
add
push
and
out
xlat
inc
jnp
clc
inc
xor
sub
imul
lret
inc
sbb
push
movsl
pop
mov
lods
lret
xor
ljmp
jmp
xor
adc
cld
dec
lret
jl
pop
sub
add
call
popa
test
or
imul
push
xor
lret
or
xor
and
dec
push
in
mov
fdivrl
pop
stc
inc
pop
adc
push
imul
mov
pop
sub
push
cld
cmp
pop
adc
mov
mov
mov
cltd
mov
or
scas
stc
ja
sbb
push
cwtl
test
push
push
push
cmp
call
cs
push
or
inc
jnp
push
ljmp
aad
xchg
or
dec
in
stos
mov
clc
xor
lcall
cmp
dec
movsb
jmp
fnstcw
mov
rorl
mov
mov
repz
imul
and
imul
enter
push
add
cmp
fisttpll
push
jmp
cmp
pop
clc
imul
push
xor
push
ss
mov
outsb
into
call
jmp
sub
ja
mov
mov
xlat
jno
lods
mov
cmp
sbbb
pop
mov
imul
adc
dec
loop
sub
mov
sbb
int3
pop
cltd
xlat
dec
inc
cmp
xchg
sbb
sub
movsb
or
test
cwtl
xor
dec
idiv
push
jne
test
lods
or
movsl
enter
mov
jmp
sti
push
sbb
mov
mov
cli
cmp
insl
js
lock
sub
pop
mov
mov
xor
mov
dec
push
pop
inc
sbb
cmp
mov
fwait
dec
int3
popf
mov
sahf
lret
sub
test
fldenv
imul
cli
dec
std
imul
filds
inc
test
sarb
mov
xor
sbb
mov
lret
mov
cld
jmp
popa
mov
or
xorl
jns
stos
fnstcw
xchg
mov
mov
test
pushf
cld
jne
int3
fistps
jb
sbbb
hlt
mov
daa
xlat
pusha
cmpsb
inc
mov
std
or
popf
loopne
mov
sub
jb
fisttpl
xchg
lcall
fwait
stos
scas
int3
enter
sarl
sahf
je
or
call
or
xchg
test
cltd
int3
jne
stos
cmp
jbe
mov
push
movsb
adc
test
jns
jge
mov
clc
int3
or
lea
cmpsb
add
scas
test
sub
cmp
add
fsincos
push
sub
sub
cli
mov
dec
cwtl
int3
aad
cmp
leave
repz
call
cmp
lods
or
cli
xchg
xor
cmp
xor
imul
mov
fldt
dec
stc
inc
leave
xchg
cli
int
lret
jmp
mov
or
mov
lret
enter
xchg
ret
sub
mov
dec
sbb
outsl
cmp
inc
call
test
mov
lahf
mov
jmp
popf
fwait
pop
pop
clc
sub
stc
pop
mov
imull
ss
mov
push
ficompl
mov
or
iret
movsl
sub
lods
jbe
cmp
stos
adc
inc
cmp
jnp
dec
lds
lret
stc
fisttpll
leave
test
rorl
sbb
xor
cmp
mov
jbe
sbb
mov
mov
add
cmc
stos
lcall
leave
pushf
sub
and
enter
stos
jecxz
popf
push
mov
fmul
push
stos
shr
ss
paddusw
mov
lret
loope
cmp
iret
xchg
cli
mov
xchg
mov
movsl
mov
movsl
mov
push
jns
push
or
int3
mov
mov
fwait
dec
mov
mov
ljmp
test
mov
cmp
mov
xchg
jmp
lea
vmulpd
dec
fwait
cli
in
out
inc
aaa
cmc
and
aad
and
ss
cmp
pop
loop
mov
inc
xchg
inc
outsb
mov
scas
in
enter
dec
mov
pop
and
test
pop
test
dec
dec
dec
adc
scas
push
jle
stc
sub
test
sbb
dec
cs
pop
dec
mov
sbb
repnz
jecxz
das
and
clc
dec
int
lods
or
and
stc
pushf
mov
sub
push
jne
cltd
call
out
sbb
les
add
idivb
bound
loope
xor
cmp
sub
jnp
stos
test
sbb
add
addl
rep
xor
add
out
xor
mov
xor
fsubrl
fadds
frstor
enter
icebp
xchg
popf
or
clc
cli
pop
call
xchg
mov
insl
mov
stos
and
jmp
fidivl
popf
or
dec
sub
out
stos
ljmp
fwait
inc
fnstcw
cmp
xor
pop
rcl
popf
fcmovu
mov
leave
fwait
sub
ret
mov
inc
cld
pushf
stos
out
xor
sub
movsl
aam
lds
cli
js
mov
test
mov
push
les
lahf
idivl
adc
cli
imul
pop
mov
inc
sti
stos
stc
divl
jmp
sbb
inc
cwtl
pop
ss
mov
push
pop
jns
mov
and
mov
jnp
jge
test
push
outsl
push
pop
dec
in
push
negl
notb
mov
out
xchg
pop
popa
nop
idivb
aad
mov
leave
test
sub
xor
clc
mov
cli
in
jmp
test
sub
and
mov
pop
sbb
test
enter
mov
movsb
dec
sub
cmp
pop
mov
test
lods
mov
jnp
fxam
shr
gs
pop
inc
call
in
cmp
pusha
adc
dec
mov
stos
push
jne
mov
in
or
call
cmp
cmpsb
lcall
sub
shll
cmpsb
test
xchg
inc
jg
je
scas
push
mov
dec
lods
ja
push
fprem
pop
roll
add
ss
jmp
subb
int3
jb
cld
imull
ret
pop
jp
into
xlat
sub
push
mov
sbb
push
imul
mov
cmp
xor
outsl
test
stos
imul
das
push
or
stos
sbb
xchg
pop
fs
test
clc
cwtl
jnp
in
mov
inc
ljmp
std
mov
mov
cmp
push
stos
inc
lret
mov
mov
scas
ret
ja
fsubr
lods
inc
movsl
cmp
mov
mov
outsb
xchg
les
clc
sub
inc
jne
nop
pushw
sub
stc
pop
cwtl
cmp
fs
fldpi
cld
ror
xchg
cmc
or
fdivrl
xchg
mov
fwait
push
fs
lret
adc
dec
test
sbb
pop
fcmovu
sti
jge
stos
mov
mov
iret
jmp
cltd
lret
push
lods
addr16
and
sbb
mov
out
lods
mov
pop
lds
int3
stos
xor
adc
cmp
call
movsl
pop
lcall
imul
fwait
sub
lods
sti
cli
rcrl
int
mov
mov
insb
stos
cltd
pushf
repz
stc
int3
sbb
cmp
test
cwtl
or
cmp
lret
push
daa
sub
jne
cmp
mov
cmpl
out
in
sbb
icebp
out
mov
leave
iret
ss
and
test
xor
jmp
call
imulb
fcmove
inc
in
pop
mov
iret
sub
cmp
or
pushf
sbb
push
and
ljmp
sarl
mov
cmp
enter
or
sub
mov
divb
fstps
cwtl
test
xchg
push
not
lcall
ljmp
cmp
ficompl
vmulsd
and
inc
fxch
cwtl
test
xchg
and
pushf
js
mov
divl
cmp
pop
cmp
shll
inc
mov
rorb
sbb
mov
movb
dec
ret
sbb
lret
popa
or
es
aas
sub
push
lret
dec
push
xchg
sub
xchg
mov
xchg
aad
or
jns
scas
lret
dec
dec
ret
xchg
xchg
sub
inc
mov
fdivrs
lret
fildl
popf
aam
xchg
sub
lret
sahf
int
or
and
clc
mov
mov
add
cmp
cmp
arpl
mov
and
imul
icebp
or
xchg
adc
fcompl
dec
iret
scas
ficompl
scas
lahf
cmp
adc
sub
mov
inc
add
loopne
stos
in
mov
lret
dec
fnsave
mov
and
sub
enter
rcll
add
arpl
sub
or
hlt
sub
fidivl
imul
stos
mov
leave
xlat
sub
fldcw
fwait
clc
mov
cmpsl
addb
dec
jb
xor
rorb
testl
sbb
pop
mov
insb
fidivl
mov
dec
int3
insb
pop
sbb
movsl
mov
cltd
ljmp
out
jmp
jbe
push
call
push
mov
sub
lret
mov
mov
cld
add
jns
enter
cli
mov
les
fcmove
adc
cmp
and
pop
in
cli
loope
popf
setge
adc
cmp
mov
iret
pop
cmp
movsl
insl
scas
outsb
dec
sbb
mov
mov
sub
fs
mov
lods
out
and
push
pop
movsl
fcompl
outsb
int3
fwait
jo
cmp
test
push
mov
in
shrl
ss
jmp
sub
lret
lcall
test
es
cmp
out
pop
out
in
lret
fwait
jbe
sub
movsl
adc
fiaddl
fidivl
clc
leave
lret
dec
push
daa
fs
jmp
cmp
mov
push
inc
add
and
push
imul
dec
xor
int3
sub
popa
jne
mov
mov
xor
xor
sbb
lods
push
stos
jnp
stos
lret
jmp
dec
mov
ret
stos
fisttpll
int
fldcw
int3
dec
mov
clc
cltd
cli
test
sti
imul
mov
push
das
int3
popf
js
fwait
lcall
int3
dec
shlb
cli
sub
testb
not
aas
ret
pop
stos
fdivrs
test
inc
fdivp
sub
fdivr
call
xchg
cmp
cmc
ss
shlb
or
or
cmc
sti
jg
mov
enter
lahf
jmp
in
outsb
fisubrl
dec
iret
and
jge
mov
mov
cmp
enter
dec
ret
add
push
test
ret
fdiv
std
loop
sbb
call
in
push
loope
fstl
push
fdivrs
or
sub
sbbb
test
fstpt
inc
xlat
pop
out
loope
and
jbe
cmp
fcoml
inc
dec
je
sbb
jge,pt
data16
aad
push
pop
hlt
adc
inc
or
mov
sub
imul
ljmp
pop
dec
inc
cmp
and
sbb
pusha
sbb
mov
add
in
push
add
daa
mov
lret
leave
mov
and
cmp
mov
mov
dec
sahf
sub
cmp
ja
cli
mov
sbb
xor
js
sub
cwtl
fcomp
sub
fidivrl
fcoml
or
add
ljmp
sarl
dec
aaa
lcall
mov
mov
dec
ficoml
dec
imul
jmp
fstpt
div
in
gs
inc
mov
push
movsb
lret
jnp
push
stos
fimull
cld
or
stos
sbb
cmp
mov
mov
or
fimull
stc
imul
stc
sub
imul
ljmp
cltd
in
cld
test
xor
jmp
mov
std
test
stos
mov
mov
mov
test
sub
mov
test
cmp
test
jl
jmp
sub
inc
or
mov
sub
jns
adc
bound
mov
push
lods
out
dec
test
mov
adc
roll
data16
xor
int
dec
lods
xor
jp
mov
pop
gs
and
or
cmp
push
xchg
stc
fdiv
jo
jmp
or
sub
fmul
mov
cltd
cmp
sti
adcb
mov
mov
sbb
push
sbb
cltd
jns
add
subb
adc
sbb
cld
mov
pop
cmp
pop
cli
int3
xor
push
sub
mov
in
movsb
lods
jl
mov
mov
loope
or
cmp
mov
imul
sub
neg
fs
cmp
push
fidivrl
movsl
xor
or
fmul
loope
or
push
inc
cmp
and
lret
lods
mov
mov
stos
pop
movsl
jle
add
xchg
clc
outsb
fwait
or
mov
xchg
push
fwait
mov
movsb
xchg
cli
ret
cmp
xor
fisttpl
mov
fcompl
cs
mov
pushf
jmp
call
lcall
int
cmp
sub
cmp
dec
cmpsb
jae
clc
ja
lret
sub
xor
fcmovu
stos
mov
lret
xlat
lcall
or
lret
test
cmp
dec
nop
inc
or
jns
sub
out
cmpsb
or
sub
imul
mov
dec
cmp
in
call
or
and
stos
mov
movsl
loope
cmc
aam
leave
fcompl
cmc
pop
adc
xchg
cmp
mov
mov
sti
fwait
add
dec
adc
xchg
xchg
push
stos
push
jecxz
imul
pop
mov
cltd
jae
jnp
jmp
sub
cmp
xchg
lods
icebp
roll
lret
cld
ret
pushf
mov
test
lret
jmp
test
mov
lock
test
outsl
sbb
imul
jnp
lods
cld
cwtl
aas
dec
mov
call
sbb
lret
imul
inc
int
cmp
cmp
mov
xchg
mov
aaa
xchg
push
filds
cmp
lcall
mov
int3
cmp
shll
or
sbb
jne
dec
sti
and
in
lods
popf
sub
mov
shl
out
pushf
int3
push
jnp,pn
inc
fbld
ret
push
ret
ja
sbb
lahf
int3
sbb
in
leave
jmp
in
push
jg
add
imul
filds
movsb
fcmovnb
ljmp
cs
or
jle
ja
and
sub
and
mov
or
push
sub
call
jmp
out
repnz
es
aas
jp
jmp
cld
jnp
sub
mov
xor
hlt
lret
xor
int
lcall
sub
dec
cmp
inc
sub
cmp
pushf
mov
jae
sub
pop
jge
insb
stos
aam
sbb
ljmp
cwtl
xchg
outsb
xor
cld
mov
test
jno
adc
mov
hlt
in
lret
stos
imul
mov
mov
stc
ljmp
test
leave
jge
jl
stos
lret
lods
inc
ljmp
lcall
imul
scas
scas
popa
jns
cmp
jnp
push
ret
or
ljmp
call
out
iret
lret
enter
pop
imul
inc
sbb
in
fsubr
je
cld
arpl
cmp
int3
jo
ljmp
scas
xlat
adc
stos
sub
clc
das
jg
int3
movsl
ljmp
popf
je
fsubrl
add
pushf
call
pop
xlat
fdecstp
stc
push
mov
test
dec
hlt
movsl
pushf
lcall
jmp
sub
mov
mov
daa
jmp
sbb
iret
out
push
clc
cmc
movsl
cltd
stos
flds
movsb
mov
or
inc
movsl
imul
stos
mov
mov
add
jmp
rcrb
fdivl
vmwrite
add
dec
stos
stc
lret
int3
in
lret
sbb
mov
dec
pushf
leave
rcr
je
pop
ret
mov
int
test
mov
adc
mov
sub
or
and
lret
in
cmp
sub
push
testl
scas
jo
pop
std
cltd
sbb
out
sti
cmp
test
add
fsubr
leave
leave
aad
ja
ficompl
push
movsl
mov
pop
or
scas
inc
push
dec
mul
movsl
clc
ljmp
mov
cmp
cmp
shlb
imul
jecxz
imul
dec
movsb
pop
in
dec
int3
cltd
and
or
add
inc
ficomps
fdivs
dec
push
mov
mov
xchg
lcall
jb
outsl
ret
mov
ljmp
popf
mov
xchg
lret
leave
test
clc
mov
ljmp
xor
inc
pop
mov
stos
ret
dec
hlt
and
in
mov
push
mov
mov
fldt
sub
mov
dec
call
cli
jmp
adc
movsb
popa
cmp
cmc
and
fdivrs
imul
push
xchg
pop
clc
cmp
push
mov
fadds
dec
or
fcmovu
test
stos
sub
mov
and
lret
ret
fs
cmp
loope
aaa
push
add
pop
sub
adc
fwait
sub
std
fstpt
test
shr
xchg
lock
jne
push
mov
fs
cmp
add
mov
inc
pushf
cmp
mov
imull
dec
dec
jno
sahf
adc
cmp
leave
mov
leave
fidivs
and
mov
cmp
mov
lahf
or
pop
into
sti
ljmp
mov
test
sub
push
mov
lods
pop
mov
rcrl
ret
stos
mov
sub
cmp
or
adc
insl
outsl
mov
fmuls
and
sahf
and
fsubrl
sti
int3
fdivr
leave
cmp
push
pop
cltd
jb
pop
mov
cli
adc
fisttpll
mov
jmp
outsl
sub
enter
dec
mov
and
push
sub
sub
mov
inc
enter
aaa
sbb
sub
xor
aam
loope
ss
push
push
fisubrs
mov
aad
ja
jo
fstpt
mov
jmp
lret
cmp
stos
cld
cmp
imul
in
pop
call
mov
dec
jmp
cmp
aaa
lahf
repnz
ret
lahf
sahf
mov
dec
stos
fdivrl
icebp
inc
xor
lds
pop
outsb
xchg
aad
jns
imul
cli
xorl
mov
imul
scas
lcall
stos
lret
cli
shrb
mov
mov
fbld
fnclex
push
xchg
out
inc
dec
cwtl
push
mov
sbb
pop
sar
xor
pop
and
sbb
mov
ljmp
dec
pop
daa
push
test
and
enter
sti
sbb
fdivrs
mov
cmp
loope
mov
stos
sar
cmp
xor
inc
dec
sbb
sub
fdivs
lcall
mov
out
xor
std
mov
test
imul
mulb
mov
stos
mov
and
icebp
cmp
into
cli
je
adcl
pop
test
dec
mov
mov
enter
ljmp
mov
sbb
fisttpll
pop
cli
adc
stos
lret
sti
stos
jne
adc
int3
dec
dec
mov
inc
hlt
rcr
in
test
adc
mov
mov
push
mov
clc
mov
push
inc
sbb
cwtl
add
fwait
lcall
mov
pushf
in
mov
jnp
cmp
inc
xchg
lret
ret
leave
stos
das
popf
imul
pop
add
xchg
dec
leave
ficoml
sbb
call
leave
subb
cmp
lds
lret
movsb
in
rclb
sub
or
lods
push
lcall
pop
int
fsubrs
kunpckwd
or
mov
add
inc
imul
mov
xor
sub
mov
pop
clc
dec
sbb
in
mov
test
add
idiv
cltd
inc
push
sub
jnp,pt
mov
pop
cs
imul
adc
pop
cltd
fsubrl
inc
ret
pop
outsb
or
add
lret
mov
xchg
pop
cmp
arpl
cld
push
ss
cmpsb
mov
sbb
shl
and
sub
cmp
fdivrl
sar
or
jmp
mov
ss
dec
sub
xchg
push
mov
imul
lret
aas
pusha
daa
imul
stos
daa
pop
adc
dec
cmp
xor
mov
push
mov
pop
and
jmp
sub
test
mov
and
pop
test
aas
cmp
sub
sbb
mov
sub
sub
stc
xchg
test
fnstcw
pop
icebp
mov
dec
inc
and
pusha
mov
push
mov
mov
mov
fcompl
sub
mov
lds
call
or
clc
cltd
cmp
scas
sti
mov
mov
in
sub
lret
fdivr
ja
popf
sub
ficoml
push
cwtl
fstpl
enter
or
cmp
mov
outsb
adc
adc
mov
cli
mov
dec
mov
and
mov
pop
mov
jmp
or
xor
stos
imul
cmp
sub
lcall
popf
sub
lret
cltd
out
stc
leave
sub
jecxz
sbb
inc
in
int3
fisubrl
push
xor
adc
imul
push
rorb
and
mov
mov
cmpsb
shrl
fs
xchg
jecxz
cld
mov
and
imul
cwtl
jmp
iret
lret
test
leave
xchg
pop
mov
ss
sub
in
in
outsb
cmp
cwtl
popf
ret
insl
xor
lret
jnp
or
sub
or
ljmp
test
inc
or
pop
fmuls
push
cld
xlat
fidivl
enter
jbe
fisubrs
call
fstps
inc
jmp
and
push
mov
mov
push
lcall
enter
xchg
or
neg
fimull
add
push
fldenv
ljmp
lret
jmp
dec
mov
lret
or
mov
std
fstl
cmp
out
and
call
int3
loope
mov
cld
pop
pop
mov
mov
jns
add
push
sub
push
dec
sbb
push
imul
movsb
dec
lcall
outsb
std
lret
sub
fcompl
std
dec
int3
pop
or
sbb
test
pop
jle
leave
pop
imul
jmp
add
dec
enter
dec
xchg
sti
dec
dec
mov
outsb
insb
add
insb
int3
sbb
imul
dec
lcall
sub
mov
fmull
mov
iret
pop
cmp
cmp
imul
imul
mov
and
test
dec
jmp
sub
stc
or
sbb
push
mov
mov
and
mov
cld
push
pop
cmp
mov
cltd
jns
je
popa
lods
dec
sahf
lods
int3
push
mov
testb
aas
cwtl
cmp
sub
or
jns
and
cmp
or
dec
call
cld
in
ljmp
cmp
cmp
adc
add
push
negb
xor
xor
mov
jns
fdivrs
dec
cwtl
sarb
add
addr16
js
int3
fisubs
dec
sub
and
cmp
fsubl
cs
lock
jmp
test
jmp
out
lcall
bound
xchg
mov
mov
cmp
sti
dec
loop
addr16
sub
cmp
mov
xor
test
sub
mov
cli
jle
cmp
popf
cmp
mov
cltd
cld
cwtl
add
ljmp
clc
dec
int
pop
or
lahf
xchg
add
mov
cli
pop
mov
jp
mov
scas
gs
or
out
mov
insb
ficoml
cmp
gs
ret
and
mov
and
mov
call
repz
fldt
jns
mov
fsubl
adc
daa
mov
leave
sub
imul
imul
cmp
fistl
inc
fists
dec
sbb
shld
pop
jl
cld
in
mov
fwait
loop
inc
adc
sub
xlat
mov
or
pop
xchg
adc
movsl
out
jp
sub
adc
add
ja
or
stc
fisttpl
pop
dec
fstpt
jnp
dec
pop
fadds
ss
cmp
stc
int3
lret
imul
sub
jl
pop
sbb
in
pop
out
lods
xchg
movsl
pop
jb
xchg
push
push
call
daa
stos
mov
in
sbb
sahf
or
ss
fmuls
pop
sub
arpl
jbe
hlt
aaa
in
cld
sub
stos
lock
lods
int
mov
clc
dec
mov
xchg
mov
cmp
aad
data16
cmp
mov
ljmp
out
sub
or
inc
sarb
enter
fsubrl
ljmp
rcll
pop
xchg
and
jmp
ss
mov
fdiv
dec
test
test
sbb
mov
insb
shr
and
sbb
loop
fcmovne
cmp
aaa
mov
ljmp
or
fbstp
xor
mov
sub
mov
fwait
mov
xlat
cmp
sbb
stos
or
incl
jns
and
sbb
fwait
mov
sub
ljmp
adc
cmp
lret
pushf
jle
sti
cltd
pop
mov
inc
jnp
outsb
imul
mov
ja
inc
loopne
and
cmp
cmp
daa
repnz
shrl
or
out
lret
xchg
in
leave
ds
in
fmull
push
lret
jnp
jae
pop
cmp
ja
jmp
or
outsb
fadd
leave
stos
and
or
test
in
or
fs
ss
fadds
out
push
pop
arpl
idivl
std
sbb
out
mov
xor
sub
and
cwtl
cwtl
mov
shr
pop
hlt
fnsave
jle
mov
push
push
push
pop
jl
aas
mov
dec
fsubs
subl
push
pop
inc
mov
jns
and
mov
nop
mov
cltd
fisttpl
rcll
mov
jns
scas
add
movd
stc
dec
lret
xor
int
in
sbb
sbb
mov
add
cwtl
in
pushf
stos
cmp
push
pop
adc
leave
int3
sub
mov
imul
push
daa
cmp
lret
add
outsb
add
jb
jmp
cmp
int
xchg
push
scas
nop
movsl
fcmovu
lcall
sub
in
cmp
pushf
sbb
cmp
mov
insb
cmp
dec
sub
iret
fldcw
cmp
add
mov
mov
dec
add
xor
xchg
cmp
or
leave
mov
pop
and
ficompl
lock
imul
push
inc
call
dec
scas
out
mov
lods
pop
jecxz
fcomps
cmp
int
cltd
stos
cmp
adc
mov
sub
mov
sub
cltd
dec
imul
clc
dec
out
movsl
lret
sub
in
gs
xor
fldcw
leave
in
mov
mov
sahf
cs
lcall
pushf
test
sbb
fldenv
popa
lods
pop
fdivs
pop
les
and
mov
fwait
mov
lds
jae
mov
sbb
dec
cmp
mov
jmp
test
int3
inc
or
adc
in
in
mulb
aam
inc
push
lcall
fsubrl
push
cmp
fldt
stos
xlat
cmp
xchg
imul
add
iret
sbb
movsb
push
ss
mov
leave
aad
jmp
dec
mov
loopne
hlt
mov
fistpl
imul
in
sub
mov
orl
cltd
fists
pusha
adc
enter
mov
mov
shlb
push
call
sti
pop
dec
or
fdivrl
jmp
push
push
aam
mov
stc
mov
lret
rcrl
mov
jns
sub
add
mov
xchg
xor
imul
inc
or
push
push
pop
fistl
sbb
or
fwait
int3
outsl
jnp
dec
pushf
lods
jmp
stos
sub
dec
inc
inc
nop
call
jns
mov
inc
dec
mov
negb
lret
stos
in
mov
mov
cmp
shll
pop
in
and
dec
sub
cmp
push
in
jnp
mov
test
sub
adc
mov
xchg
fsubrs
lods
inc
sbb
scas
stos
and
ret
inc
lret
das
es
aad
dec
lret
popf
mov
jge
clc
cmp
sub
mov
icebp
mov
and
int3
mov
pop
inc
cld
fistl
adc
leave
and
mov
imul
test
test
or
jno
cmp
pop
pop
cmp
jecxz
add
pop
cmp
push
or
pop
ficompl
sub
fmul
sbb
dec
adc
mov
scas
std
in
fistl
insb
call
movsl
or
xor
in
adc
arpl
sub
add
mov
cmp
cltd
inc
ret
dec
cmp
mov
in
and
cmpsb
sbb
ljmp
and
mov
neg
push
int
fs
negb
xor
cmp
test
jmp
enter
or
dec
imul
mov
call
add
sub
ficoml
push
in
fdivrl
lret
imul
mov
mov
add
addr16
stos
cli
inc
fwait
sub
hlt
xchg
js
and
sti
or
andb
cmp
mov
mov
pop
or
icebp
in
cmp
inc
clc
jecxz
or
cmp
jae
inc
test
cli
les
shrl
fistpl
mov
leave
inc
stc
sub
dec
jl
arpl
lret
stos
xchg
pop
stc
add
cwtl
jmp
adc
mov
or
int
mov
mov
mov
cmp
cmp
add
and
mov
ljmp
sub
out
inc
xchg
lahf
bound
int3
push
mov
jmp
jns
stos
in
adc
cli
sarl
mov
xchg
adc
mov
xorb
enter
stos
and
inc
fwait
sub
cmpl
mov
scas
xor
popf
outsb
cmp
mov
or
dec
fmuls
lcall
or
jl
mov
icebp
aam
mov
jmp
pop
jle
sbb
mov
and
cld
aas
xor
jle
enter
jmp
mov
outsl
mov
stc
fs
add
fdivs
aas
clc
imul
and
inc
test
fldt
arpl
cld
jbe
sbb
imul
and
imul
cmpsb
fcoml
mov
scas
outsb
subb
cld
int3
das
mov
sub
out
or
jmp
test
jns
mov
leave
sbbl
imul
test
stos
lret
or
ljmp
cmp
movsb
pop
bound
fidivrl
cli
dec
fstl
jmp
xor
leave
push
sbb
fcmovne
insl
arpl
mov
pop
inc
cltd
cld
lret
adc
addr16
cmp
cltd
scas
dec
push
fsubrs
adc
sub
enter
rcll
push
push
pop
imul
in
cld
sub
mov
mov
stos
movsl
fmull
dec
and
scas
jne
and
stos
sub
mov
out
adc
imul
fmull
cmp
pop
push
negb
mov
or
mov
stos
stc
test
cmp
shrb
mov
lods
or
test
fwait
add
test
leave
stc
push
sub
movsl
sub
jns
sti
ljmp
pop
dec
std
pop
cmp
sub
rcl
lcall
lds
cmp
data16
mov
mov
mov
dec
and
sub
stos
enter
dec
adc
cli
mov
or
imul
jl
imul
inc
cltd
dec
inc
enter
xchg
pop
mov
stos
arpl
and
mov
mov
rolb
inc
pusha
xchg
fcoms
push
and
pushf
fisttpl
cli
into
sub
pop
pushf
arpl
adc
sti
sub
enter
sub
jbe
jmp
xlat
or
jne
fucompp
mov
in
mov
outsb
cmp
repnz
les
insb
stos
cli
test
add
add
cltd
sub
lcall
cwtl
enter
pop
jnp
pop
cmp
sub
xchg
pop
push
outsb
int3
mov
inc
inc
sbb
push
outsb
addb
clc
mov
dec
dec
stos
mov
sub
test
pop
jmp
loope
push
cmp
stos
mov
xchg
push
jne
popa
pop
cmpsb
mov
sbb
inc
cmp
mov
jg
repz
stos
sti
xchg
repz
pop
lods
or
pushf
popf
push
sbb
sub
icebp
out
mov
arpl
imul
fnsave
add
cld
pop
test
mov
lods
out
xchg
sbb
cmp
lret
imul
jae
and
jne
adc
mov
pushf
mov
test
inc
std
cli
sub
sti
adc
pop
leave
imul
and
test
fidivl
and
cmp
mov
fwait
inc
ret
outsb
fstpt
mov
in
adc
ljmp
nop
imul
enter
xchg
pop
mov
jb
arpl
mov
lcall
mov
test
aas
hlt
and
xlat
fwait
pop
gs
leave
outsl
ss
ficomps
and
jle
in
mov
fwait
aad
fidivrl
pop
xchg
rolb
enter
int
call
int3
clc
cs
arpl
or
ljmp
and
fdiv
sbb
loope
xor
sbb
pop
mov
adc
mov
clc
fwait
xor
stos
add
mov
lret
pop
jmpw
push
js
lret
sub
mov
push
xchg
outsl
stos
dec
xchg
test
por
push
ds
fnstcw
repz
sub
jmp
idivb
hlt
pop
jp
sub
pushf
stos
jmp
sbb
int3
sub
cmp
lock
mov
cli
pop
lret
loope
jmp
leave
in
mov
mov
mov
lcall
inc
and
mov
jecxz
imul
mov
lods
fadds
xor
mov
rorb
pop
lret
fldt
outsl
cld
push
jne
sub
fs
imull
orl
dec
das
rcr
cli
and
mov
idivl
cmp
ja
out
das
nop
pop
lea
or
imul
sti
cltd
lcall
xchg
ljmp
testl
loop
cmp
cwtl
adc
sub
mov
jg
shl
sar
push
lds
jmp
cld
call
arpl
lret
sub
scas
push
sbb
cmpsl
mov
pop
in
sub
jl
imulb
fcomps
fwait
or
imul
in
jmp
dec
icebp
mov
pop
cli
fwait
or
sbb
imul
repnz
cmc
fisttps
mov
mov
mov
pop
stos
push
pushf
test
dec
mov
xchg
fldenv
test
dec
test
and
pop
or
jmp
add
cmp
pushf
sbb
leave
push
sub
add
adc
pop
ror
dec
add
mov
or
sub
jmp
mov
stc
cmp
stc
cmp
push
popf
ficomps
sahf
mov
inc
cmp
cltd
cs
mov
imul
push
xor
int
sbb
cmp
mov
sub
cld
clc
mov
call
cld
push
cltd
sti
adc
sahf
popf
adcl
shll
leave
xchg
mov
push
dec
sub
or
cmp
xchg
imul
mov
js
mov
movsl
lret
enter
in
pop
mov
pop
je
sbb
adc
stc
add
mov
inc
sahf
adc
xlat
mov
cld
push
sub
dec
or
xchg
add
lods
sub
mov
jns
idivb
jmp
jnp,pn
cmp
aas
sub
aam
inc
dec
sub
push
jmp
cwtl
jno
pop
sbb
sub
ljmp
xchg
test
add
push
mov
dec
pop
cmp
jg
lret
outsb
or
cltd
jl
stos
sub
fsubrl
push
pop
lods
test
idivl
repz
sbb
sub
stos
in
fwait
and
cmp
test
inc
pushf
inc
mov
sbb
mov
mov
and
sbb
xchg
mov
out
and
lcall
mov
add
int
sti
clc
pop
subl
xchg
mov
push
mov
sub
enter
or
cmp
mov
sbb
cmp
cs
xchg
pop
cwtl
sub
cld
cli
fidivl
fmul
int3
sti
cmp
jnp
cmp
sub
xor
shll
cld
rcrb
cmp
jb
xchg
fldcw
lcall
stos
mov
cmp
sbbb
pop
fimull
jl
ljmp
outsb
enter
add
or
outsb
pop
movsl
sub
jg,pn
mov
dec
push
ljmp
fwait
push
int
mov
jmp
ljmp
cmp
sub
jle
cltd
insl
and
xor
lret
dec
test
cmp
push
call
outsb
fidivrl
cmp
dec
ljmp
dec
lea
jne
and
dec
cltd
fisubl
xchg
dec
imul
dec
or
test
push
in
fstpl
xchg
jbe
mov
jmp
mov
lcall
push
lods
mov
and
and
mov
mov
xor
adc
leave
in
jmp
nop
out
stos
in
push
mov
xlat
sbb
std
xlat
push
in
loope
adcl
dec
jmp
das
add
test
dec
mov
nop
test
mov
jo
fcomp
sahf
sub
aam
ljmp
lret
arpl
loop
inc
imul
dec
dec
mov
and
dec
inc
roll
mov
cmp
dec
cs
idivb
push
cmpsb
dec
out
dec
mov
cld
cs
xchg
das
mov
mov
ljmp
movsb
mov
mov
sub
stc
scas
xchg
adc
fsubrs
jecxz
and
push
in
mov
dec
or
ljmp
test
iret
jmp
adc
jne
mov
mov
out
lret
mov
in
pop
pushf
into
lds
fsub
push
fsqrt
std
aaa
push
mov
jecxz
add
sub
dec
cld
movsl
dec
cwtl
popf
popf
mov
sub
inc
stos
lret
aas
std
and
shrl
fdivs
push
dec
outsl
enter
inc
sahf
fadd
out
add
jmp
hlt
pop
and
imul
sbb
add
dec
lcall
jo
push
dec
stos
in
xchg
adc
fwait
mov
sub
pusha
pop
into
dec
mov
movsl
cli
fsubrs
dec
and
cld
stc
pop
scas
iret
or
icebp
roll
cmp
or
cld
or
and
loope
or
fdivrl
out
dec
arpl
dec
cli
dec
mov
jle
mov
or
cmp
jmp
add
outsl
stos
ss
test
stc
dec
xor
lret
fsts
inc
sbb
hlt
test
pop
xchg
ljmp
dec
cmp
mov
or
fcmovnu
and
dec
clc
je
or
in
jnp
inc
jle
sub
test
clc
dec
icebp
inc
movsl
pushf
sub
mov
fisttps
in
add
shll
push
jg
inc
in
call
add
lret
movsl
adc
or
insb
pop
daa
adc
pushf
les
push
cwtl
imul
xor
lock
cs
pop
inc
and
fstpl
cmp
cwtl
pop
xor
sub
mov
ljmp
hlt
add
inc
jns
fdivs
pop
les
popa
jle
scas
sub
cs
inc
pop
jmp
inc
cmc
movsb
mov
dec
loop
cmp
fwait
mov
pop
aad
test
fcompl
daa
xlat
dec
and
inc
cli
int3
int
fxch
ds
sahf
sub
or
lcall
cmp
cmpsb
fstp
stos
fstpt
sub
and
fmull
imull
cmp
pop
mov
ss
and
mov
sbb
fisttps
mov
imul
mov
test
pop
outsb
cmc
or
mov
xor
mov
out
loope
xchg
int
cltd
rcrl
mov
in
shll
dec
xor
repz
enter
test
mov
icebp
test
mov
sbbl
sub
fidivrl
mov
mov
jae
fcompl
add
lods
sbb
fs
sti
lods
fxch
add
call
fcmovne
cli
and
imul
test
cmp
lods
scas
cmc
xchg
jno
insb
or
mov
das
and
loopne
xchg
mov
lcall
loope
sti
imul
mov
arpl
cltd
dec
and
ljmp
sbb
clc
fmul
inc
mov
xchg
jns
xor
stos
lret
dec
sbb
push
scas
pop
fcom
mov
mov
and
dec
and
in
inc
int
or
rorl
aad
cs
loop
inc
stos
das
in
lcall
sbb
mov
push
mov
loope
inc
call
aad
and
lods
fs
mov
pop
mov
push
sbb
cmp
stos
inc
inc
lret
mov
inc
and
imul
jae
rcrb
or
sbb
fisttps
int3
lret
adc
popf
xor
lods
int
lret
sub
stos
bound
in
xchg
lea
xor
cmp
test
jle
lods
aad
pop
pushf
or
xor
push
cli
pop
aad
inc
cld
fistl
add
cld
enter
or
jb
push
clc
rorl
sbb
and
cmc
cli
mov
jne
pop
cmp
cmpsl
lods
sub
mov
shrl
jg
jmp
pop
cmp
int
ret
mov
out
cs
imul
mov
fwait
mov
ss
and
in
lock
mov
jg
mov
sub
add
fisttps
cmc
pop
or
lods
mov
mov
test
fdivrs
push
imul
cmp
mov
leave
pushf
pop
inc
cmc
mov
push
in
sub
sub
cli
imul
mov
dec
test
jnp
sub
imul
cmpl
hlt
pop
in
or
sub
imul
test
out
pop
in
fstl
addb
inc
out
adc
cli
dec
mov
push
sub
enter
call
enter
repz
lcall
mov
push
out
sub
imul
fstps
loope
stc
push
das
int3
push
aad
mov
rdpmc
jp
mov
outsb
sti
jo
lea
and
push
xor
mov
adc
in
sarb
dec
mov
leave
lret
pop
rcrl
mov
mov
mov
pop
dec
inc
adc
push
sbb
sbb
cmp
inc
inc
addl
xlat
in
int3
fmuls
add
fwait
sub
lods
leave
or
adc
mov
and
cwtl
mov
inc
jecxz
fwait
pushf
or
jl
call
aas
ret
data16
dec
imul
cmp
enter
mov
cltd
adc
dec
and
fdivl
leave
dec
rorl
add
gs
mov
or
int3
and
xchg
sub
jbe
jb
and
cld
mov
or
inc
popf
push
xchg
xor
sub
push
stc
fdivl
dec
fs
and
cld
mov
xlat
cmp
sbb
dec
jl
mov
sub
cmpb
inc
xchg
in
or
xor
cmp
dec
cltd
in
pop
fdivrl
imul
movsb
xchg
repz
dec
and
lock
cli
int3
mov
mov
fldcw
dec
insb
lods
mov
repz
push
cs
sahf
cli
adc
pop
and
enter
jo
jns,pn
and
fsubr
nop
adc
pushf
repz
lods
and
clc
in
inc
pop
jl
push
test
imul
jmp
lret
std
mov
std
mov
cmp
cmp
fsts
cmp
xchg
mov
and
enter
insb
cmp
pop
leave
cmp
stos
popf
in
and
sti
stc
sub
mov
test
xchg
pop
bound
lret
int
or
ret
mov
aam
cmp
pop
test
push
or
pop
adc
dec
mov
fnstsw
cld
pop
cmp
aaa
outsl
sub
and
dec
test
add
in
movsl
or
imul
mov
jge
mov
loop
icebp
ret
jbe
sbb
stos
adc
or
ljmp
into
jl
xchg
xchg
enter
mov
and
fcoml
cmpsb
sub
inc
cmp
cmp
mov
ret
push
sar
sub
add
movsb
xchg
dec
in
xor
aaa
sbbl
mov
ret
es
outsb
repz
xchg
ss
jge
adcb
rclb
bound
inc
in
imul
pushf
cltd
call
sub
sub
mov
mov
lock
xchg
cltd
push
imul
push
rcll
filds
jbe
push
mov
add
cmp
mov
mov
jnp
js
clc
jbe
add
enter
imul
pop
arpl
aam
fsubrs
pushf
pop
add
in
ret
xchg
jnp
and
fmul
orl
mov
mov
add
sub
jecxz
sub
sti
arpl
push
xchg
jne
mov
outsl
test
add
stos
cld
repz
scas
das
inc
fcmovu
fmull
sarb
dec
sub
ja
dec
or
xor
enter
bound
jmp
sub
mov
sbb
sbb
lret
sbb
neg
fsubrs
lcall
fcmovnb
lods
pop
mov
xor
cmp
mov
jnp
mov
lods
sub
cltd
and
jle
adc
int3
imul
pop
mov
push
in
lods
mov
clc
pop
fistpl
xchg
sub
mov
rcrb
pop
xchg
aam
jmp
fwait
cwtl
pushf
inc
inc
pop
add
sahf
or
ret
jne
mov
and
cwtl
fwait
sbb
mov
dec
int3
jo
push
jmp
mov
call
ficompl
sbb
push
or
lret
imul
jns
testb
cmpl
imul
neg
pop
fcomi
ds
sbb
xor
mov
mov
fcmovu
outsb
mov
cwtl
test
outsb
inc
push
loop
and
mov
xor
call
dec
mov
outsb
sub
xchg
sub
loope
add
nop
cltd
test
test
pop
enter
dec
fdivrl
dec
inc
stos
fwait
and
fistpll
loope
pop
jmp
cmp
stos
jmp
fwait
add
ss
mov
int
pop
xor
xor
cli
jbe
aaa
cmp
xchg
addr16
pop
stos
jnp
imul
movsl
pop
push
pop
jle
setl
push
lea
pop
sbb
push
xchg
out
in
or
add
or
add
sbb
push
fsub
leave
in
jae
and
jmp
fmuls
sub
or
enter
cli
aas
imul
jmp
sub
lret
fmuls
sbb
pop
pop
shlb
ret
jmp
test
insl
fnstcw
lcall
jno
stos
lret
pop
dec
cmp
sub
and
je
push
jbe
leave
into
in
notb
jecxz
sub
cmp
fwait
arpl
orb
and
mov
cmp
sub
loope
movsl
push
add
jl
fsubs
sbb
dec
or
mov
add
pop
clc
imul
mov
subl
dec
lret
dec
insl
cmp
xchg
ret
test
out
and
cs
dec
test
cs
out
gs
xor
or
arpl
sbb
sub
imul
loop
fistl
xor
mov
mov
xchg
pop
or
fwait
stos
ds
xchg
jno
cmpsb
call
loope
cli
clc
cmovb
test
sbbb
mov
mov
and
fcmovu
enter
ds
imul
movsl
sub
test
and
xchg
ja
aam
jbe
cmp
outsb
dec
lret
fld
loopne
sahf
fdivrl
xchg
scas
and
lcall
imul
lods
fs
mov
adc
cmpsb
mov
xor
sbb
movsb
mov
jo
inc
mov
fs
jge
outsb
jbe
mov
fstps
cmpsl
fistl
dec
jmp
adc
cmpsl
mov
sub
outsb
and
sti
outsl
push
sahf
jo
std
cmp
or
imul
jae
loopne
addr16
outsb
movsb
dec
jo
ret
jmp
test
outsb
mov
fdivrl
out
sbb
idivl
lods
out
es
fidivrs
or
test
enter
clc
rcrl
inc
mov
jmp
adc
repz
les
xchg
sahf
dec
shlb
sahf
lret
dec
sahf
into
or
or
std
ficomps
outsl
sub
test
stos
outsb
imul
mov
or
int
ss
fnstcw
leave
push
fimuls
xlat
jo
pop
test
pushf
dec
lcall
sbb
or
mov
push
fwait
xor
fcompl
pop
mov
lods
add
or
jns
outsb
dec
jo
outsl
shlb
push
into
push
js
ret
xlat
subl
mov
dec
add
ljmp
fildl
daa
les
mov
call
outsl
mov
outsb
int
lock
dec
in
pushl
outsb
push
test
mov
test
add
outsb
or
lds
in
push
stc
jmp
mov
pop
mov
sbb
fidivl
mov
xchg
add
imul
adc
call
fidivrl
mov
sub
cld
int3
push
push
sbb
repnz
stos
cld
dec
inc
jae
sub
or
int3
jle
cmp
out
mov
inc
outsb
test
mov
imul
enter
in
fisttps
mov
rorl
push
dec
jmp
jnp
and
ljmp
mov
out
lret
push
test
or
xchg
fimull
cmp
xchg
clc
pop
xor
inc
movsb
mov
adc
call
sub
int3
mov
stos
mov
imul
pop
popf
es
cmp
pop
lcall
jns
sub
sbb
or
cmpl
add
jnp
arpl
aaa
jne
stos
cwtl
jp
mov
xchg
mov
mov
fwait
js
mov
enter
or
in
mov
mov
jecxz
lods
fdivrs
enter
cwtl
pop
lds
sti
jnp
adc
repnz
dec
and
add
xor
lock
sbb
imul
or
pop
sbb
xchg
int3
fcomi
lds
mov
cld
stos
sbb
mov
iret
fsubrs
mov
test
sub
or
cmp
sbb
fs
mov
fnstcw
cmp
mov
clc
stos
sbb
lcall
fldlg2
fisttpl
aad
mov
out
addr16
push
mov
mov
mov
js
cmp
into
stc
in
push
sahf
cmp
inc
fcmovne
lods
movl
dec
cmp
aad
fisubrl
mov
rcrl
int3
pop
fstps
lock
out
adc
sub
cmp
sub
insb
lds
cld
sub
add
push
pop
call
xor
mov
lods
or
test
or
sbb
adc
cmp
cmp
mov
sub
in
mov
mov
arpl
push
imul
int
jns
fsubrs
loope
sub
iret
xchg
xor
movsb
jmp
gs
leave
lods
push
aad
cltd
mov
shll
mov
sub
jmp
cmp
cs
jle
cmp
cmp
mov
test
sub
stos
inc
pop
or
jmp
imul
mov
adc
fcomp
stc
sahf
stos
movsl
out
mov
adc
mov
xor
adc
or
jmp
lret
daa
xchg
jbe
adc
dec
or
jbe
pop
sbb
outsb
cld
sahf
aas
subb
imul
in
and
mov
mov
clc
cmp
dec
mov
jle
lods
or
stos
outsb
xor
pop
mov
fwait
xchg
pushf
push
sbb
adc
pop
cmp
sbb
movsb
xchg
mov
lret
pop
out
sub
dec
fcmovnu
cld
enter
pushf
leave
sbbl
movsl
int3
mov
cwtl
leave
and
jae
cli
pop
xor
loope
jmp
adc
rsm
aaa
dec
sti
lcall
sbb
mov
outsb
sub
sub
mov
pop
cli
push
dec
inc
movsl
lret
mov
pop
enter
jecxz
cld
sbb
outsl
fisttpl
sub
pop
add
faddl
out
in
cwtl
mov
pop
cld
xchg
mov
mov
sub
adc
std
or
dec
ljmp
sbb
xor
xchg
test
push
mov
stc
sub
cmp
int
fildl
out
ftst
pop
dec
cld
xchg
or
pop
aad
mov
popf
adc
cmp
mov
lcall
cmp
data16
jnp
mov
jb
mov
cltd
pop
mov
or
aad
stos
cmp
dec
cs
pushf
leave
jb
inc
lcall
sub
pop
lock
cltd
pushf
xor
ljmp
clc
mov
mov
mov
cmp
cmp
sbb
arpl
xchg
add
mov
fildll
jmp
ror
iret
cmp
jbe
xor
stc
pop
daa
dec
inc
jl
aam
dec
cltd
sub
int3
dec
dec
xlat
mov
lret
pop
addr16
mov
test
add
pop
add
cmp
mov
xchg
sub
mov
mov
add
test
sar
lods
lcall
dec
jns
sbb
sub
movsl
or
cmp
cld
or
lods
popf
push
sbb
dec
mov
mov
lcall
push
cmc
in
jmp
cltd
inc
sbb
mov
xlat
outsb
lcall
sub
mov
call
push
fstpl
cs
fdivrs
clc
jmp
inc
pop
cmc
dec
sub
fistpl
lret
cli
leave
sub
stos
adc
pop
fdivrs
mov
fstp
pop
ljmp
jnp
pop
clc
call
sub
psubusb
mov
xchg
push
xlat
or
push
push
xor
add
jmp
stos
shrb
test
inc
jns
sub
imul
jbe
adc
test
pop
or
fbstp
push
cltd
imul
cmp
fldcw
dec
mov
jbe
cli
mov
mov
mov
rcl
jno
clc
aad
lret
sti
sub
cmp
stos
sti
mov
daa
mov
push
pushf
adc
ror
ljmp
inc
daa
jnp
mov
div
sub
push
xor
jno
dec
xor
cmp
sub
cmp
cs
call
dec
leave
in
xor
mov
push
push
fisubrs
mov
cmp
fstpt
pop
in
ljmp
mov
cmp
pop
push
aad
xchg
pushf
push
jnp
adc
stos
lods
imul
sub
ljmp
sahf
dec
cltd
test
jmp
stos
inc
mov
pushf
in
mov
sbb
xor
pop
cmpsb
jns
pushf
mov
cmp
inc
and
leave
xchg
int3
push
shr
js,pn
ja,pt
sti
add
cwtl
pop
loop
fcompl
sbb
pop
fmuls
fstps
push
out
dec
mov
imul
in
or
cld
fcoml
pop
mov
int
or
mov
jb
movsb
mov
push
call
jnp
iret
jmp
sub
pop
pop
lds
roll
fsubrl
pop
pop
sbb
enter
ss
jmp
jbe
fimull
jge
inc
xor
adc
call
inc
jnp
dec
cmp
jb
jg
mov
mov
test
fdivl
loope
enter
scas
fcmovu
fwait
pop
cli
data16
enter
push
imul
pop
cmpsl
jnp
mov
mov
scas
cmp
sub
roll
lret
imul
cmp
adc
testb
dec
aad
fwait
pop
cmp
and
sub
inc
scas
mov
fisttpll
adc
data16
cmp
inc
cmp
sbb
or
in
das
xor
jb
dec
cld
mov
or
sbb
pop
pop
mov
leave
inc
test
add
sub
enter
lods
hlt
test
or
jmp
dec
int3
outsl
sbb
sbb
mov
mov
or
cmpl
stc
push
mov
xor
fwait
sbb
stos
cmp
or
pop
and
lret
xor
sub
dec
sbb
pop
pop
loope
paddw
std
jecxz
inc
mov
lahf
add
cmp
je
and
cld
int3
pop
mov
out
stos
movsb
mov
in
pusha
sahf
leave
cmp
adc
fwait
imul
push
jbe
stos
int
mov
mov
xchg
mov
nop
mov
pop
mov
dec
lds
cmp
nop
sbb
test
cmp
std
mov
pop
adc
mov
push
enter
stos
aad
jmp
mov
cli
test
sub
mov
fs
sbb
lret
dec
test
mov
int3
dec
xor
sub
imul
cmp
pop
fwait
and
out
fcmovb
in
mov
push
into
sbb
inc
mov
and
test
movsb
loop
jl
test
adc
in
cmp
or
dec
mov
sti
cmp
test
inc
movsl
aas
mov
scas
dec
push
mov
enter
in
notb
ret
mov
jnp
fadds
and
stc
daa
movaps
adc
pushf
sti
sub
cld
and
iret
sahf
jp
pop
leave
pushf
cmp
js
inc
fisubrl
mov
adc
das
adc
push
clc
mov
sbb
cmp
inc
lret
push
sub
cmp
addr16
test
in
call
enter
outsb
fcompl
ja
enter
sbb
stos
pop
movsl
mov
cmp
ss
mov
imul
insb
jne
sub
mov
xor
jle
pop
fchs
mov
std
sub
adc
out
jbe
into
or
test
mov
sub
push
test
adc
jmp
dec
ss
cltd
imul
cwtl
dec
jmp
rcrl
leave
cmp
enter
mov
and
imul
cmp
sti
pop
mov
mov
lret
and
negl
push
adc
jnp
xor
sub
shll
das
or
lret
mov
cmp
mov
fsubl
scas
insb
mov
int
dec
add
mov
test
cmp
add
cs
mov
dec
stos
jnp
jmp
dec
sub
mov
stos
scas
mov
fwait
mov
out
xor
pop
lods
xchg
fxch
imul
add
lret
add
xchg
ljmp
outsb
test
or
xchg
sbb
cwtl
cmp
outsb
enter
adc
ret
cwtl
hlt
adc
fisubrl
xor
lret
imul
xchg
sub
mov
stc
and
and
adc
call
mov
test
imul
dec
xchg
mov
daa
xchg
jecxz
dec
cmp
shlb
pop
sub
pusha
popf
addr16
dec
and
sub
fisubrl
sub
dec
enter
ja
inc
sbb
sbb
sub
and
mov
mov
pop
in
jns
movl
cltd
cmp
dec
mov
xchg
cli
cmp
sub
leave
pop
leave
imul
fwait
lret
ds
pop
sahf
stc
cs
scas
add
fcomps
rorl
adcb
mov
mov
sbb
pop
mov
mov
lock
pop
xchg
fnstsw
fdivr
pop
pop
push
mov
fldt
cltd
outsb
sbbb
enter
jnp
mov
cltd
jge
sti
cwtl
iret
dec
stos
mov
dec
jne
sub
fsubrs
inc
das
inc
cmp
fcmovne
jl
mov
icebp
pushf
loope
cmp
xor
movsb
inc
movsb
stc
and
cld
imul
ss
sbb
popa
enter
les
shrl
lret
leave
insb
mov
jnp
test
cld
mov
cmp
dec
add
inc
or
cmp
imul
int3
pushf
add
mov
test
xor
mov
std
arpl
dec
scas
or
sub
fucomi
xchg
mov
adc
flds
cs
mov
fcompl
dec
inc
out
add
cli
xor
pop
or
lds
loope
cmp
sub
cs
mov
sbb
imul
mov
leave
xor
pop
outsb
mov
pusha
push
push
sub
out
in
cld
stos
pop
sub
cmp
push
cmp
mov
dec
lds
mov
xchg
fdivrl
xchg
xchg
cmpsb
fists
cmp
sbb
mov
inc
loop,pn
cmp
sub
mov
and
sti
mov
arpl
dec
imul
mov
test
xchg
xlat
data16
pop
out
mov
lahf
dec
fs
fwait
incl
sbbl
test
jns
mov
stc
cmp
dec
sub
mov
test
stos
test
and
mov
and
pop
cmpb
lret
scas
and
div
data16
pop
dec
pop
xchg
push
xor
mov
jns
xor
push
fwait
cmp
pop
and
enter
lods
push
into
push
push
sub
test
xor
sub
xchg
movsb
pop
into
cmp
and
mov
nop
andl
pushf
sub
jns
imul
dec
sub
fistpl
inc
mov
sub
cmp
flds
int3
mov
out
fmull
enter
pop
xor
imul
pop
xchg
dec
xor
andl
sbb
jns
call
dec
lcall
add
out
leave
pop
movsb
sub
cmp
in
data16
cmp
insb
jl
sbb
in
rorl
and
rorl
movsb
mov
sbb
mov
or
enter
mov
inc
ss
or
ss
fwait
aad
leave
icebp
sbbb
test
dec
repnz
std
inc
in
jp
push
mov
pushf
scas
into
jo
js
mov
or
xchg
push
out
addb
mov
aaa
lret
shl
rcrl
mov
stc
movsl
fnstcw
and
xchg
call
mov
call
pop
in
sub
xor
shrl
pushf
sub
adc
dec
in
pop
mov
push
mov
cmp
fucomp
dec
rcrl
mov
xchg
inc
cld
adc
and
and
pop
test
jbe
inc
dec
inc
daa
cmp
cmp
outsb
push
sbb
mov
jns
aaa
push
jmp
fcoms
enter
ret
cmp
pop
mov
mov
cld
movsb
dec
test
jmp
dec
mov
inc
pop
jne
fstpt
lcall
push
ss
add
push
xchg
imul
sub
mov
jns
test
inc
mov
pop
fs
cmp
push
sti
cli
mov
lret
mov
leave
dec
xlat
cld
fdivs
jmp
les
sub
mov
or
add
ficompl
mov
ja
enter
jg
cmp
shrb
push
out
pop
stc
lret
dec
sbb
int3
repz
lret
mov
icebp
mov
fdivr
in
cmp
lea
test
adc
sbb
mov
pop
icebp
aam
xor
jl
jb
lret
into
in
cwtl
popf
adc
ljmp
mov
or
jb
cmp
stc
mov
mov
mov
gs
stos
pop
adc
imulb
outsb
int
sbb
ljmp
or
mov
jge
mov
dec
jmp
adc
cmp
clc
test
aad
jns
lea
shlb
sbb
loope
cmp
sub
mov
cltd
mov
fcmovnu
in
or
xchg
xchg
lods
sub
leave
shr
cmp
jo
lcall
and
int3
fwait
call
dec
imul
imul
or
lods
dec
in
test
cltd
xchg
sub
mov
shll
jmp
flds
sub
inc
mov
scas
decb
mov
idivl
pop
xchg
cwtl
xor
shrb
adc
jmp
stc
mov
aaa
rcr
add
pop
cli
push
jb
dec
dec
aam
loope
inc
leave
mov
lahf
mov
leave
call
jbe
jmp
dec
sbb
inc
addr16
dec
inc
push
clc
test
push
pusha
ss
push
insl
sbb
les
jns
sbbb
jae
bound
push
cmp
inc
push
jne
push
cwtl
xchg
fmulp
icebp
arpl
cltd
add
or
mov
dec
inc
ja
jne
adc
add
lret
dec
sbb
out
imul
not
in
cmp
fiaddl
rcrl
mov
sub
clc
test
push
inc
jp
pop
int
imul
dec
lret
pop
cli
repz
imul
sti
mov
sbb
inc
jbe
xchg
frstor
or
pop
lods
mov
push
fsubrl
ja
stc
sub
cmp
mov
and
or
sbb
test
jae
add
hlt
loope
and
dec
jnp
pop
sti
xchg
loopne
int3
movsl
mov
ja
inc
cmp
pushl
ljmp
dec
ss
popf
loopne
jmp
ficoml
lret
xlat
inc
scas
xchg
push
js
fsubl
movsl
sti
jmp
pop
test
jecxz
leave
mov
cs
cmp
clc
cmp
or
jle
sub
cmp
repz
out
fstpt
xor
and
jns
aaa
cmp
and
adc
mov
test
dec
lods
in
std
adc
mov
stos
scas
bound
cltd
mov
sub
mov
dec
fsub
sub
sti
dec
int
mov
aad
clc
jnp
cmpsl
sub
sub
enter
jmp
iret
push
mov
adc
inc
test
sub
push
cs
fldl
mov
lret
cwtl
mov
es
lcall
push
arpl
fstpl
add
pushf
outsb
sub
xchg
mov
mov
in
ds
jmp
inc
neg
adc
lret
imul
sti
xchg
not
pop
add
xchg
fwait
scas
inc
or
fcomps
mov
fstpt
je
cmp
outsb
pop
stos
xor
out
fldt
enter
dec
pop
test
sub
icebp
test
pop
xor
sbb
sbb
or
clc
rcrl
xor
fstpt
mov
cmp
lods
lret
sub
xor
pop
mov
mov
mov
push
call
jne
sbb
sub
in
cmp
clc
cltd
and
inc
xor
loop
dec
cmp
jb
sub
lcall
push
test
mov
mov
icebp
sti
pushf
cli
ss
aad
test
dec
mov
mov
rcrl
sub
push
mov
add
mov
push
push
lods
push
movsl
stos
pushf
fmull
and
pop
mov
xchg
sub
cmp
test
inc
push
fmull
pop
aad
or
stos
inc
das
xlat
cwtl
inc
jnp
mov
push
imul
in
cmp
jecxz
cmp
cltd
test
xchg
push
stos
pop
call
dec
cmp
scas
rcrb
push
popa
add
or
les
lret
pushf
call
or
add
mov
jmp
push
ficoml
cmp
mov
adc
dec
arpl
dec
scas
imul
icebp
sub
call
movsl
int3
sub
icebp
cltd
or
mov
mov
rorl
aas
mov
fwait
inc
leave
jmp
clc
sub
mov
mov
das
push
jnp
jle
jmp
aad
clc
cli
fstpl
mov
mov
lods
call
mov
jle
and
jmp
jbe
cmp
cmp
mov
dec
sub
mov
or
lcall
clc
jne
outsb
pop
mov
sub
cmp
rcll
xor
dec
pushf
imul
dec
mov
inc
inc
mov
outsb
cmp
stos
cmpb
ljmp
jmp
popa
int3
mov
pop
sub
into
stc
scas
idivl
cmp
xlat
ds
mov
mov
sti
mov
repz
mov
fprem
mov
test
jmp
jmp
sbb
aad
sbb
cs
aad
jmp
mov
mov
and
sub
lret
imul
lret
xchg
mov
fdiv
jnp
xlat
mov
in
cmp
lcall
sub
jmp
push
sub
push
je
pop
loope
jbe
arpl
inc
jmp
sub
ret
outsl
xchg
dec
push
add
ss
iret
setge
call
jmp
cmpsl
mov
jge
push
cmp
pop
pop
pop
int3
insb
lret
xchg
sub
sbb
xor
mov
xchg
mov
or
cmp
xor
int3
sub
in
mov
and
push
sub
fwait
dec
sub
cmp
ja
xchg
insb
lock
inc
add
mov
add
fadds
int3
add
arpl
push
shlb
nop
sbb
imul
or
pop
movsl
mov
in
lret
pop
xor
xor
bound
sub
lahf
mov
fcmovu
or
movsl
lret
test
mov
cmp
cli
in
cmp
jo
popf
inc
into
sbb
test
add
inc
and
movsb
mov
jmp
mov
mov
sub
sub
sbb
mov
cli
jae
cmpl
test
and
in
cmp
cwtl
testb
test
fcompl
dec
arpl
cmp
testl
or
les
in
xor
clc
je
ljmp
pop
loope
sub
icebp
inc
push
and
cltd
aad
stos
mov
testl
and
call
sbb
cmp
std
outsb
sub
ror
fldt
ds
mov
inc
filds
adc
fnstcw
lret
std
inc
ror
mov
xor
imul
inc
leave
mov
loop
cli
lcall
bound
outsb
imul
adc
pop
mov
xchg
stos
sub
test
dec
in
cmp
ljmp
mov
sub
sbb
mov
mov
add
xlat
sub
notl
in
lret
cli
iret
repz
and
test
mov
cmp
sub
lret
mov
test
mov
and
mov
mov
pop
imul
in
mov
int
stc
ret
cmpsb
in
push
enter
popf
ret
cli
mov
jmp
xor
dec
pop
cld
frstor
or
cltd
ljmp
cmp
mov
sarl
stos
inc
mov
inc
dec
cmp
call
cmp
sub
xorl
hlt
test
cmpsb
mov
push
mov
jns
scas
add
cs
cmp
pop
adc
ret
je
mov
jecxz
mov
mov
int3
sub
jmp
mov
ds
jecxz
lcall
dec
test
sti
in
ss
mov
stos
aaa
pop
sub
lds
sub
sbb
stos
jecxz
stc
inc
mov
mov
sub
mov
js
mov
push
push
or
jle
pop
stc
sbb
dec
fcoms
test
test
mov
push
test
gs
stos
mov
mov
pop
int3
loope
and
jmp
mov
push
inc
cltd
dec
sbb
jb
fdivr
fcomps
int
sub
fcmovbe
dec
dec
dec
mov
add
daa
inc
jle
stc
leave
sbb
lds
lcall
fwait
cmp
enter
jns
sub
inc
jne
mov
pop
ljmp
xor
pop
cli
test
push
fdivrl
call
fcomi
dec
test
push
mov
pop
push
loopne
in
xlat
pop
cwtl
cmp
jne
imul
mov
test
mov
xchg
cmc
cmp
mov
movsl
pop
mov
inc
fxch
ljmp
jns
mov
lods
dec
stos
mov
dec
lcall
jg
ljmp
mov
and
dec
leave
inc
sub
cmp
mov
enter
aad
fmuls
mov
pushf
mov
add
subl
mov
push
sbb
mov
xor
cmp
or
imul
enter
lret
mov
fwait
add
and
int3
mov
cld
test
aam
cmp
mov
or
stc
test
incb
jecxz
out
stc
test
dec
or
dec
or
test
dec
clc
ljmp
cmp
leave
cmp
push
adc
lret
imul
cltd
iret
jg
pop
sub
dec
scas
or
inc
mov
lret
aam
mov
sbb
sti
mov
or
stc
mov
int3
xor
stos
lret
mov
xchg
ficomps
fimuls
adc
mov
shrl
cmp
aad
leave
mov
push
pop
sahf
xchg
andb
and
test
adc
divb
pop
stos
imul
sub
ljmp
addr16
orb
ja
pop
sub
fimull
cmp
ljmp
mov
cmp
hlt
in
outsb
pop
jmp
xor
cmp
mov
mov
dec
or
int
sub
and
icebp
fldcw
or
jmp
popa
fmul
mov
js
call
sub
fwait
lret
test
clc
enter
test
in
adc
sub
cmp
inc
daa
rol
shrl
cmp
jo
stos
stc
test
lret
cmp
sub
mov
jo
lcall
xchg
mov
xor
enter
fistpl
lods
xchg
jnp
dec
add
and
imul
lret
and
cmp
leave
ss
imul
idiv
sbb
mov
cmp
imul
sbb
inc
inc
dec
out
pusha
int
sub
inc
scas
inc
mov
cmp
add
and
mov
cwtl
mov
mov
mov
mov
sub
sub
pop
test
bndldx
imul
lods
aad
push
loop
je
inc
int3
mov
test
outsb
mov
xchg
pushf
sbb
enter
inc
dec
stos
pop
pop
and
cmp
push
xchg
aas
call
mov
pop
xchg
ljmp
call
lcall
mov
mov
or
test
roll
cli
sbb
stos
out
dec
mov
movsl
mov
or
sarb
out
shll
sub
inc
das
aad
jnp
icebp
es
jmp
stos
push
mov
cltd
call
test
in
mov
imul
mov
or
dec
jmp
mov
rolb
cmc
lret
pop
in
xor
sbb
mov
push
sub
jns
call
test
in
push
das
cmp
pop
clc
sub
inc
inc
jmp
sbb
mov
and
xor
and
mov
dec
ficomps
test
cmp
mov
dec
ss
mov
scas
shrl
fld
arpl
mov
mov
call
cmp
rcr
or
lret
mov
out
pop
cld
xor
cmp
sub
jmp
sbb
sub
xchg
sti
stos
shll
push
fs
mov
fstl
nop
lock
call
push
mov
cli
or
lret
mov
imul
push
xor
int3
adc
mov
std
lahf
cmp
add
xchg
ss
inc
mov
lahf
out
cld
jmp
pop
mov
adc
or
call
pop
inc
int3
xchg
fmuls
pop
in
imul
ds
fldenv
push
icebp
test
mov
imul
jns
sub
mov
fisubrl
stos
mov
add
mov
push
cli
cmp
lcall
fnstsw
je
jmp
out
inc
ljmp
cwtl
aam
mov
in
mov
fsubrl
stos
mov
roll
cmp
inc
jmp
and
sub
cwtl
fwait
xchg
mov
imul
das
leave
lret
or
loope
and
mov
mov
int3
add
into
sub
cltd
adc
mov
ja
lods
lcall
pop
jns
cmp
popf
mov
dec
xor
hlt
sub
repz
mov
mov
mov
mov
mov
cltd
cmp
fisubrl
add
loope
icebp
pop
pusha
or
dec
stos
aad
dec
loope
aad
lods
lret
roll
leave
and
stc
scas
push
pop
stos
cld
imul
outsb
test
rcll
daa
je
adc
loopne
neg
data16
sub
jge
outsb
test
in
cwtl
pusha
and
push
aas
cmpsb
mov
neg
mov
inc
cmp
cld
cwtl
cmp
pop
sub
cwtl
fsubr
sbbl
adc
inc
mov
pop
jnp
mov
xchg
xchg
into
lods
imul
or
cmpsb
cmp
pop
call
sub
cld
lret
jmp
mov
cmpsl
push
daa
pop
mov
fsts
pushf
fistpl
cld
cmc
jmp
sub
ret
test
sbb
add
pop
leave
fiaddl
or
jnp
pop
dec
movsl
jne
jne
sbb
dec
pusha
in
int3
mov
lcall
sti
push
sub
in
dec
dec
cmp
sbb
lret
cmp
cmp
in
push
sub
sti
push
cmp
mov
sub
cli
cmp
sti
cmpsl
mov
sub
sub
stc
stos
fdivrl
xor
xchg
or
mov
addr16
dec
sub
movsl
lcall
lret
fisttpl
int
mov
cli
fsubs
push
and
or
fisttpl
rorl
sub
and
inc
stos
mov
cwtl
dec
test
int3
xor
pop
ja
and
fstpt
sbb
call
jns
ljmp
loop
push
movsl
or
lea
outsb
pop
ljmp
mov
js
push
mov
ljmp
fdivr
pop
adc
test
xchg
push
sub
mov
test
imul
clc
jbe
sub
int3
pop
fcomi
mov
dec
test
imulb
clc
popf
pop
pop
in
jns
mov
loop
push
lcall
and
pop
cmp
pop
ss
push
mov
pop
sti
ljmp
cmp
call
fwait
data16
pop
faddl
jp
xlat
stc
and
imul
cmp
dec
shr
lret
xor
mov
or
jo
sub
sti
push
fwait
pop
test
mov
and
lods
mov
fmuls
lret
jne
int3
cld
idivb
xlat
fnstcw
dec
lcall
mov
cs
jmp
cs
xchg
cli
lret
inc
push
test
mov
sahf
sbb
sub
daa
or
insb
std
popa
ljmp
iret
iret
fisubrl
cmp
imul
fsubr
call
cwtl
mov
fidivl
or
lret
pushf
cmp
inc
and
sub
clc
cmp
cmp
pop
rol
pop
sub
jnp
dec
push
mov
sbb
pushf
or
pusha
and
pop
mov
notb
mov
inc
jnp
cmp
and
enter
mov
push
in
ret
pop
sub
lret
lea
fldl2e
stos
emms
pop
add
sti
mov
test
ss
arpl
out
xor
jmp
mov
adc
mov
mov
fsubrs
pushf
std
cmpl
mov
outsb
scas
fldcw
adc
popa
inc
clc
imul
mov
mov
mov
pushf
xchg
insb
call
mov
movsl
pop
adc
lret
or
jns
xchg
lds
jg
outsb
sub
mov
add
aad
jmp
dec
test
lds
stc
fadds
pop
roll
test
call
mov
mov
stos
sbb
jnp
enter
mov
sub
shrl
mov
mov
sub
cmp
lret
stc
push
sbb
cltd
ret
stc
lcall
pop
mov
shll
dec
pop
mov
cld
scas
fdivr
xchg
inc
push
imulb
fsubr
cwtl
pop
test
test
adc
mov
cmp
fs
and
scas
or
int
or
clc
and
in
enter
cmp
fisubrl
pushf
mov
xchg
dec
cmp
out
mov
mov
test
cwtl
mov
sub
dec
stos
cli
popl
fcmovne
and
jmp
dec
inc
cmpsl
and
xor
sub
mov
mov
fildl
dec
dec
cli
pop
lock
sti
stc
dec
scas
popf
xor
cmp
sub
cli
enter
rcll
ss
sub
mov
dec
mov
pop
lret
mov
xchg
and
movsl
push
inc
mov
icebp
shrb
sub
testb
popf
jnp
mov
imul
rcrl
fsubs
mov
cmc
nop
sub
lcall
push
movsl
cmp
sti
jp
push
dec
jmp
int3
inc
lods
sbb
push
sbb
mov
pop
mulb
int3
jo
mov
cmp
sbb
or
xor
xor
repz
sub
fnstsw
cmp
out
jns
mov
and
sti
movsl
pushf
fistpl
stos
stos
ret
cmp
lods
imul
loope
xchg
daa
in
rcrl
sub
out
ljmp
add
das
cld
sti
fwait
mov
stos
jbe
cwtl
fdivs
add
jl
jnp
or
dec
popf
popa
fldt
cld
lret
cwtl
imul
out
mov
pop
ljmp
sbb
sarl
stos
test
imul
aaa
or
push
fsubrs
inc
sub
hlt
cmp
cltd
cmp
mov
shll
add
outsb
or
sbb
sub
sbb
mov
mov
int3
sub
sbb
sbb
enter
cwtl
dec
clc
movsb
adc
sti
fcompl
sub
add
pop
in
fmull
lods
lods
leave
test
pushf
pop
cmpsb
mov
cmp
mov
ss
mulb
mov
cltd
or
cli
out
test
or
adc
mov
push
dec
imul
sub
xchg
sbb
add
cli
clc
cmp
xchg
xchg
aad
mov
outsb
mov
cs
mov
sbb
cltd
mov
outsb
ss
movsl
sysret
stos
push
test
or
clc
or
cld
ljmp
pushf
mov
leave
test
pop
mov
fcmovnbe
sbb
enter
lods
fidivrl
enter
shrl
dec
dec
cmp
cmp
push
mov
fildl
xor
push
inc
fchs
scas
and
sub
shll
pop
mov
jmp
jns
stos
sub
imul
dec
lcall
mov
cmp
outsb
stc
je
daa
clc
icebp
mov
xchg
mov
call
setno
sbb
xchg
fwait
int
mov
mov
imul
call
mov
inc
stos
pushf
sub
sub
pop
popf
adc
call
call
mov
fcmovnu
loopne
sub
mov
js
jns
pop
mov
dec
cmp
in
imul
sub
dec
int3
inc
mov
adc
cli
and
mov
test
sub
add
cs
cmc
testb
push
icebp
sbb
int3
cmp
lock
and
mov
stos
pop
ds
addr16
cmp
insb
mov
dec
and
pop
cmp
enter
dec
dec
jmp
pop
and
mov
dec
pop
aaa
cmp
stos
cmp
lods
mov
sbb
int3
mov
shlb
sbb
push
fiaddl
adc
jnp
in
cmp
lret
in
jnp
add
jne
mov
cmp
sub
dec
sub
dec
pop
cmp
lret
mov
sub
test
or
testb
and
pushf
loope
inc
jle
and
push
pushf
movsl
inc
sub
mov
or
fsubrs
outsb
ljmp
bound
and
mov
jne
test
cli
ljmp
in
or
jno
cmp
testl
imul
pushf
push
or
lret
out
test
imul
mov
fwait
pop
pop
enter
fildll
mov
lret
imul
lods
imul
adc
pop
cld
sub
in
xchg
dec
jmp
and
and
call
stos
adc
mov
scas
adc
cmp
dec
dec
shll
cmp
xchg
dec
xor
cmp
push
ljmp
fistpl
pop
sti
call
xor
loopne
sub
fcmovu
dec
cmp
test
mov
loop
cmp
dec
in
cmc
clc
mov
outsb
push
sti
dec
mov
in
and
iret
push
sub
cli
lret
dec
fnstcw
out
hlt
cmp
jnp
aas
imul
cwtl
pop
lcall
dec
mov
test
movsl
sub
fldt
xor
popa
xchg
icebp
fnstenv
and
je,pn
mov
fcomp
push
enter
ljmp
arpl
ja
or
push
sti
push
sbb
add
ja
lock
lods
mov
addr16
pop
and
lcall
test
lret
or
push
push
sbb
jnp
stos
clc
cltd
lods
or
rolb
mov
clc
test
out
xchg
xchg
xor
cli
ret
sub
dec
inc
cmp
dec
xchg
or
enter
xor
sub
imul
lret
scas
cmp
sub
movsb
mov
adc
testb
xor
rcrl
xchg
cmp
movsl
cmp
hlt
add
xchg
movsl
popf
xor
sub
sub
pop
xchg
mov
std
aad
mov
insb
pop
pop
mov
xchg
cwtl
rcll
and
mov
xlat
sub
inc
pop
in
xchg
fimull
leave
push
mov
push
sub
rorl
and
or
mov
xchg
push
cld
add
sub
or
or
mov
mov
fisttpll
and
or
pop
test
fucomi
sbb
add
fsubrs
sub
mov
mov
sub
call
inc
mov
push
cmp
int
mov
cmp
xlat
pop
cli
pop
inc
push
gs
cwtl
repz
rolb
or
dec
sbb
pop
mov
xchg
inc
imul
cmp
dec
loopnew
xor
std
aad
stos
imul
ret
aad
sub
out
xchg
jmp
pop
jnp
imul
push
loopne
pop
std
sbb
gs
cltd
test
repnz
pop
mov
mov
sbb
and
or
mov
jle
jl
cmp
inc
scas
in
ss
cmp
call
movsl
test
shr
scas
dec
mov
mov
push
xchg
mov
in
dec
je
dec
xor
sub
cmp
pushf
mov
sub
cmp
movsb
cld
jl
mov
lcall
jns
push
inc
lea
leave
shlb
jns
pop
cmp
mov
movsl
mov
cmp
rcr
lretw
cmp
inc
test
mov
enter
sbb
outsb
cmp
shll
jb
jp
mov
xor
into
jle
push
sub
cltd
mul
inc
js
sub
jmp
fsubs
inc
cmp
sbb
or
les
ror
mov
scas
sbb
or
jl
or
push
arpl
xchg
dec
andl
test
mov
or
add
sbb
aam
lret
popf
subl
fimull
imul
mov
add
cmp
sub
and
dec
or
jnp
adc
test
add
int3
mov
dec
je
sub
ljmp
inc
mov
sub
adc
sbb
mov
mov
lret
enter
add
ror
jmp
mov
nop
fwait
mov
int3
cmp
push
ljmp
sbb
aam
dec
cmp
adc
je
fcoml
call
lret
leave
add
push
or
and
dec
imul
neg
sbb
sub
jns
cld
fs
dec
cli
int3
add
cld
jmp
test
fistpl
inc
in
pop
inc
or
fisubrl
pop
mov
ljmp
dec
cli
pop
sti
push
inc
jns
stos
jg
or
stos
data16
push
test
add
sbb
iret
mov
test
mov
pop
mov
xchg
mov
pop
cmp
mov
repnz
ljmp
inc
imul
lret
cmp
pushf
mov
out
xlat
call
xchg
inc
jae
add
leave
sbb
lods
test
movsb
xlat
enter
add
xor
inc
sub
stos
dec
sub
pop
test
cld
xchg
cmp
loop
sbb
fsubrl
push
sub
lret
lds
mov
pop
fcompl
sub
fwait
cmp
movsl
sub
cmp
leave
sub
mov
mov
cmp
sti
in
sbb
jle
fisubrs
loop
jns
sub
fsubrs
outsb
push
fscale
or
test
sbbb
pop
cmp
sub
mov
cld
test
dec
push
add
or
jmp
inc
shll
lret
sti
int
jmp
jnp
xlat
lods
adc
mov
jns
pop
mov
sbbb
mov
xchg
ror
xor
xor
daa
or
jge
in
fsubrs
lret
and
leave
ficoms
in
cmp
dec
sub
sub
scas
pop
in
sub
jo
fnstsw
cmp
jl
dec
ss
pushf
cmp
mov
xchg
cmp
add
roll
ljmp
and
push
jnp
lret
dec
cmp
scas
call
and
or
xchg
push
jnp
sbb
jo
shrl
imul
sub
dec
faddl
cltd
mov
stos
aam
mov
mov
cmc
in
cld
jp
dec
movsl
cmp
cmp
jl
ja
aaa
push
in
xlat
ret
sub
enter
fs
test
std
ja
and
mov
cmp
sbb
mov
lret
mov
push
gs
dec
sbb
dec
hlt
add
imul
and
push
xchg
pop
or
and
dec
in
shl
sub
lods
cmp
xchg
rcrl
negb
inc
in
jbe
jne
lret
jp
cmp
imul
scas
push
xchg
leave
mov
cmp
mov
test
mov
jns
pop
and
mov
stos
idiv
dec
mov
jmp
mov
jle
inc
shrl
cwtl
jns
int
or
and
cmp
xor
orl
stos
sbb
lds
jnp
sti
cld
cmp
test
ficoms
jns
fs
ja
mov
scas
or
outsb
stc
pop
mov
dec
pop
stos
in
movsl
dec
mov
imul
cmp
cmp
push
stc
lock
clc
cpuid
xor
call
jnp
sbb
adc
mov
dec
enter
into
sub
inc
fstpt
mov
cmp
or
arpl
int3
jo
in
js
test
movb
mov
sub
clc
xchg
xor
cmp
jge
sub
hlt
dec
inc
imul
sbb
jl
enter
adc
mov
sbb
push
imul
lods
popf
mov
int
pusha
movsl
pushf
cmp
inc
enter
imul
mov
mov
inc
jbe
jmp
ss
mov
sub
dec
jmp
outsl
in
mov
imul
int3
lods
test
add
mov
stos
popf
in
jno
daa
lcall
pop
inc
mov
sbb
xor
dec
xor
and
mov
fdivr
test
rcrl
mov
inc
inc
movsb
rorl
jbe
fmul
cmp
sahf
mov
mov
cmp
lret
and
sbb
sbb
bound
addr16
mov
in
sub
notb
mov
rcrl
test
inc
pop
cmp
fdivrl
clc
sub
std
lcall
inc
dec
adc
lcall
pop
fistpl
lret
lcall
fimuls
and
int3
sbb
lock
lcall
mov
outsb
inc
in
mov
int
dec
rorl
xchg
inc
xor
in
mov
xor
sub
scas
mov
add
mov
sbbb
dec
pop
lret
call
cmp
mov
cld
adc
mov
jmp
inc
fdivrs
jnp
mov
inc
cwtl
or
mov
fmull
in
pop
xorl
xchg
inc
cmp
adc
fldt
and
das
mov
dec
cld
lret
iret
xchg
stc
loope
aas
iret
cmp
cwtl
dec
add
xchg
mov
push
imul
or
add
cltd
mov
in
clc
mov
mov
and
mov
ljmp
and
dec
xchg
pop
cmp
cmp
xchg
jbe
pop
imul
imul
pushf
mov
int3
scas
lods
ljmp
stos
test
mov
xchg
inc
sbb
movsl
adc
sub
or
or
je
adc
loope
cwtl
pop
add
nop
mov
pop
pop
cmp
fxam
cmp
test
je
xchg
repnz
arpl
jmp
fmull
fstpl
cld
imul
cmp
pop
mov
in
fwait
daa
mov
ret
test
cmp
mov
jb
xor
mov
lds
cld
lret
test
adc
test
pop
and
jns
inc
push
dec
or
dec
sbb
test
mov
repnz
stc
mov
dec
mov
xchg
adc
mov
inc
mov
sbb
fiaddl
mov
push
loopne
sub
pop
fdivr
imul
in
lret
xchg
cmp
test
test
in
imul
outsb
fsubrs
cmp
and
mov
int3
int
jns
jb
fimull
lods
popf
movsb
fidivrl
and
xchg
cmp
jmp
jp
inc
or
push
mov
fwait
js
lcall
pop
inc
or
mov
or
cmp
test
sbb
and
test
clc
lahf
mov
mov
sub
stos
clc
cmp
in
pop
mov
jbe
mov
rolb
mov
pop
mov
cli
sbb
fsts
push
lret
sub
and
jmp
mov
out
in
imul
das
jmp
ficompl
mov
jmp
adc
ss
inc
ret
jb
push
pop
mov
movsb
shlb
mov
pusha
cwtl
lods
fimull
incl
cmp
cmp
cmp
je
adc
mov
in
imul
aas
mov
push
enter
imul
cmc
sahf
cmp
inc
popa
idiv
scas
cmp
lret
dec
mov
stc
shll
cmp
dec
mov
mov
scas
sub
std
je
push
imul
sbb
bound
or
std
sbb
sub
jns
sub
ja
sahf
jbe
mov
loope
outsb
mov
pushf
imul
imul
pop
and
or
testl
sbb
in
dec
mov
lcall
xchg
test
pop
in
ljmp
cmp
fs
sub
jnp
pop
pusha
or
stos
stc
sub
loope
pop
jecxz
aad
adc
cmp
cmp
dec
icebp
out
decl
fcoms
cmp
cwtl
mov
cmp
mov
dec
cli
sub
or
xchg
dec
and
fcompl
mov
sub
jae
sbb
cmp
dec
xor
test
sbb
inc
pop
imul
fwait
cltd
pop
jle
mov
lock
sub
out
mov
pop
pop
leave
inc
adc
ret
hlt
mov
das
stos
mov
scas
stc
das
stos
pushf
dec
hlt
nop
sub
cmp
imul
rcl
test
scas
mov
arpl
sub
pushf
adc
dec
leave
paddb
scas
lret
cltd
scas
fiaddl
in
test
sub
xlat
lret
jno
or
scas
push
movsl
cwtl
dec
mov
dec
push
pushf
imul
imul
fstps
jecxz
sub
cmp
dec
int
lods
mov
lcall
jl
imul
sti
inc
cs
lret
sub
bt
dec
test
cmp
test
lcall
pop
std
insl
inc
jecxz
jp
faddl
dec
sbb
outsl
xchg
pop
das
in
cltd
or
cld
test
cli
ljmp
mov
call
jbe
cmp
jnp
sahf
ds
jne
loope
idivb
enter
das
test
jnp
in
cmp
dec
shrl
clc
loope
arpl
loop
dec
mov
out
testb
int3
jbe
jmp
add
sub
sahf
and
outsb
frstpm(287
sbb
mov
enter
sub
stos
insl
fmul
and
mov
fcomi
sub
ljmp
gs
inc
or
out
pop
xchg
aas
stos
jmp
push
idivb
pop
inc
add
or
xchg
or
xlat
pop
jbe
mov
aam
je
jbe
xor
int3
cmp
ljmp
lds
test
int3
sub
dec
sbb
and
pcmpeqw
stc
sbbl
mov
stos
aad
and
loope
outsl
jge
jmp
orl
cmp
sbb
mov
imul
cmp
jo
mov
mov
mov
mov
jns
mov
add
pop
sub
adc
jns
ja
dec
jnp
les
cld
sub
nop
xchg
and
sub
pop
dec
sbb
add
movb
scas
sarl
lcall
movsb
arpl
inc
cmp
and
pop
scas
test
jmp
xor
xor
int3
cmp
ret
leave
fmul
popa
xchg
or
sahf
pop
sbb
les
dec
dec
das
mov
stos
bound
dec
sub
cmp
out
leave
fsubs
or
pushf
aas
sbb
sub
test
push
and
cmp
or
cmp
sub
imul
lcall
sub
fcmovnb
mov
cmp
fldt
mov
clc
and
cld
and
imul
xor
es
imul
and
mov
dec
dec
popa
cmp
aaa
lds
add
scas
mov
mov
fldt
bnd
or
enter
sub
mov
ja
cld
dec
add
cmp
leave
add
clc
mov
dec
loope
in
sub
mov
lcall
ficompl
fisttpll
test
into
fnstcw
idiv
icebp
data16
sbb
dec
imul
sub
cld
lods
fidivrl
fs
mov
testb
adc
fnstenv
and
imul
ljmp
mov
mov
pop
pop
test
mov
imul
sub
or
fisubrl
clc
scas
fisubs
mov
pop
fdivr
pop
mov
in
push
mov
sub
jecxz
mov
fs
mov
mov
jne
enter
pop
lods
cmp
fmull
lcall
cmp
mov
sub
cmp
lret
cli
int3
fbstp
mov
cmp
pop
leave
cwtl
sbb
xchg
adc
clc
in
push
dec
fmull
std
pop
mov
adc
popf
jbe
adc
test
push
int3
sti
cmp
popf
push
mov
and
lcall
mov
sbb
xchg
jnp
lret
dec
dec
rorl
dec
cwtl
ja
in
test
repnz
add
mov
mov
sbb
xor
shll
xor
or
push
push
add
mov
mov
push
sub
call
inc
cmp
push
lock
add
frstor
cmp
test
stos
jns
in
das
or
xlat
cmp
fstps
fcoml
mov
fwait
inc
xor
daa
adcb
pop
shll
mov
leave
test
fdivl
lods
jae
cmp
dec
dec
dec
xchg
test
repnz
sub
dec
dec
fldenv
jmp
and
sub
lret
je
jecxz
pop
in
incl
lret
mov
das
int
dec
sub
fdivs
cs
jbe
cltd
cmp
sub
mov
test
push
int
dec
clc
rcr
les
rcrl
mov
outsb
daa
or
test
dec
sub
mov
sub
jo
int3
int3
xor
leave
fistl
ja
sub
xchg
and
fmuls
sbb
push
lret
fisttpl
addr16
enter
jb
jns
add
dec
pop
add
pop
nop
addr16
and
mov
lods
and
sub
sar
jmp
pop
pop
sbb
sbb
add
sti
mov
mov
leave
sub
cmp
or
dec
movsb
stos
inc
mov
pop
jns
jo
into
adc
lret
dec
mov
aad
mov
aad
mov
or
mov
dec
dec
movsl
int
cmp
sbb
jmp
xchg
cmp
daa
mov
mov
ja
cmp
lret
fimuls
push
imul
imul
sub
pop
adc
scas
or
cmp
inc
stos
pop
mov
scas
bound
adc
fsubl
icebp
lret
out
sahf
std
icebp
inc
aad
cmp
jnp
jmp
and
test
in
das
xchg
jmp
out
jne
sub
push
imul
xlat
mov
rcrb
lods
or
loope
int
sub
fldenv
or
inc
sub
pop
ljmp
add
jbe
mov
outsb
int
or
dec
test
rorl
adc
cmp
sti
int
mov
jns
push
pop
xor
cmp
shrb
pop
sar
xchg
adc
enter
leave
sbb
sbb
mov
pop
imul
xchg
dec
pop
sar
mov
lods
stc
shrl
mov
stc
int
and
push
pop
cs
mov
sahf
push
gs
leave
or
testb
xor
cli
pop
dec
je
fidivrl
jp
in
imul
mov
cmp
adc
push
mov
jns
mov
or
adc
movsl
test
stos
inc
cmp
lcall
mov
lds
out
push
es
xor
les
sub
pushf
fs
imull
push
mov
jns
mov
push
bound
jmp
in
lods
push
lea
mov
dec
popf
imul
and
cmp
loop
loope
inc
aad
cmp
cmc
mov
mov
lret
sbb
insb
lret
sub
lcall
mov
loop
fsubr
jne
fwait
mov
and
stc
scas
je
and
jns
sbb
int
dec
ret
mov
negl
sar
mov
jns
dec
mov
imul
sbb
or
test
lods
pop
int3
and
imul
cld
lret
or
hlt
test
das
mov
outsb
mov
xchg
or
js
stc
popa
and
mov
movsl
sbb
xchg
inc
push
mov
push
jns
out
lret
mov
in
sub
cltd
orb
stos
movsl
ja
and
jmp
stos
call
dec
inc
inc
dec
lret
pop
sub
mov
mov
je
cmp
pop
or
cmp
jns
pushf
pop
sti
sub
cld
xchg
lods
call
sbb
jo
imul
negb
jg
fwait
mov
fnstcw
cmp
mov
mov
jns
cmp
cmp
and
cltd
nop
cmp
imul
dec
push
sub
lcall
lret
test
dec
xchg
xlat
lret
cmp
xchg
jnp
imul
lret
mov
test
or
jg
rdtsc
mov
mov
movsl
cltd
cmp
flds
mov
jae
imul
pop
dec
and
mov
sbb
sub
add
sbb
and
or
xchg
scas
mov
and
sahf
cmpb
sub
ret
mov
cwtl
lret
or
clc
call
sub
cwtl
imul
add
xor
xor
sub
push
dec
in
push
or
test
je
mov
pushf
fsubl
scas
xor
inc
out
mov
mov
cmp
out
cmp
aad
cmp
jne
repz
mov
and
fidivrs
aad
fdivrs
sub
loope
adc
das
add
pop
dec
xor
mov
sub
in
shll
in
mov
mov
cmpsl
in
aam
loope
cs
dec
pop
sub
add
out
test
sub
sub
test
inc
inc
gs
stos
jmp
stos
test
mov
dec
jns
outsb
or
sub
std
or
xor
sub
das
movsb
jmp
jmp
cli
addr16
push
jbe
fdivr
fstp
mov
xlat
mov
sub
test
xlat
into
ss
xchg
enter
push
pop
jp
data16
test
jecxz
and
mov
pushf
or
movsl
sarb
fdivrl
fcompl
fisubrs
mov
dec
fldz
cmp
fsubs
ficompl
lods
mov
cld
xchg
sub
jmp
dec
out
dec
test
and
and
push
stos
xor
mov
scas
and
lcall
lcall
lahf
mov
std
mov
stc
inc
or
sub
outsb
fdivrs
enter
sti
sub
mov
pop
loope
icebp
mov
cmp
xchg
movsb
clc
imul
xor
cli
xlat
ljmp
cli
out
loop
sub
mov
dec
imul
lea
lret
and
mov
data16
sub
dec
lds
cld
clc
icebp
psllw
scas
jmp
in
int3
inc
mov
sbb
jmp
lret
or
push
cld
cmp
adc
dec
lods
in
cmp
outsb
mov
sbb
mov
lcall
imul
nop
sub
jbe
mov
stos
cmp
fisubs
xchg
cmpsl
inc
mov
cmpsb
outsl
call
movsb
mov
mov
mov
sbb
and
mov
mov
add
imul
xchg
lods
sub
jmp
int3
iret
lock
pop
clc
repz
pop
imul
jbe
jo
push
inc
stc
lret
or
lcall
mov
ss
movsl
test
or
stc
cwtl
icebp
les
fisubs
in
dec
in
lock
aas
adc
cmpsl
adc
cld
mov
cmp
dec
addr16
push
insl
mov
jp
lret
outsb
or
mov
or
cmp
inc
fwait
iret
mov
jmp
mulb
adc
std
push
lea
inc
push
cmp
mov
jmp
je
stc
xchg
cld
fwait
int
jmp
sub
jns
push
subb
lret
or
stos
sahf
lret
and
fisubrl
or
xor
scas
push
fildl
mov
movsb
call
imul
pop
test
cmp
bound
mov
jle
ljmp
imul
add
or
js
imul
int3
lods
sub
cmp
jns
dec
jnp
mov
cltd
cld
fdivrl
and
lods
sub
cmp
or
loope
popf
adcb
push
jmp
mov
int3
or
fs
pushf
cmp
scas
loop
scas
ja
mov
ficoml
sbb
negl
xor
int3
mov
lret
cmc
inc
pushf
test
dec
xchg
lret
outsb
jnp
movsb
cld
pop
push
out
decl
stos
enter
mov
outsl
pushf
movsb
xlat
and
mov
cmp
sub
cs
sub
enter
jmp
mov
shrl
or
shll
imul
mov
outsl
into
jbe
sbb
add
sub
cld
adc
cmp
cli
movsb
sbb
lcall
mov
lret
je
test
xor
mov
std
cli
sub
scas
sub
lret
adc
xor
cmp
imul
cld
test
dec
sti
hlt
and
add
cltd
cmp
mov
out
cwtl
lods
jno
leave
sub
fdivrl
repz
cwtl
imul
and
or
mov
stos
test
dec
dec
imul
stc
sbb
push
int
dec
sti
sub
mov
rolb
call
mov
sbb
jbe
stos
cmp
dec
aad
jmp
arpl
xor
mov
bound
cmp
pusha
mov
pop
ja
cwtl
xchg
test
fldpi
jmp
pop
xchg
hlt
jmp
aad
popf
cmp
jns
pop
sub
dec
dec
leave
add
cmp
loop
adc
pop
add
pop
jns
test
mov
fcoml
lods
xchg
sbb
std
xchg
lcall
mov
dec
les
sub
jecxz
mov
adc
adc
icebp
dec
test
or
cmc
dec
int
jmp
push
cmp
test
push
xchg
stc
add
mov
xchg
push
sbb
lcall
push
sub
push
cmp
adcb
popf
test
mov
xor
stos
ljmp
outsl
ljmp
push
sub
mov
outsb
in
mov
pop
das
imul
sub
leave
xlat
cmp
lods
adc
jmp
jns
cltd
jbe
ret
sbb
cmp
mov
and
cli
int3
pop
mov
jmp
inc
cmp
or
mov
jmp
int
sub
sub
in
push
sub
cli
leave
inc
cmp
dec
jmp
idivl
dec
cltd
lret
sti
in
sub
test
add
clc
mov
push
dec
loop
lock
jb
mov
push
fwait
or
lret
dec
pop
ss
mov
adc
push
mov
push
mov
sub
flds
loopne
dec
lret
out
mov
push
nop
and
stos
ljmp
movsl
xor
pop
push
and
push
stc
dec
or
xlat
pop
jmp
imul
mov
fnstcw
xchg
je
lcall
sub
into
fistl
push
fs
xchg
jne
or
cmp
dec
lret
cmp
ret
and
sub
sub
fadds
mov
rcrb
mov
dec
les
hlt
push
and
cmp
mov
mov
jle
pop
pop
mov
sbb
or
lcall
fwait
cmp
leave
and
lcall
mov
cmp
jmp
dec
cmc
mov
push
test
dec
fs
int
dec
pop
mov
imul
lods
out
inc
push
mov
mov
call
insl
frndint
push
mov
mov
cmp
xlat
fwait
enter
ljmp
mov
mov
std
inc
cltd
shrl
loop
mov
stc
inc
inc
icebp
jmp
xor
pusha
cwtl
cmp
arpl
sarl
sub
dec
fstps
jg
xor
scas
int
inc
ljmp
lcall
mov
mov
ret
xchg
inc
loop
sub
add
sbb
sbb
cltd
sub
cs
or
out
mov
aad
call
cld
dec
xor
mov
ja
mov
fsubr
insb
test
movsl
sub
fs
stos
scas
xor
ret
or
cmpsb
cwtl
adc
call
push
push
cmp
dec
testb
arpl
fisubl
cmp
dec
dec
sub
cld
push
dec
mov
test
cmp
andb
test
dec
mov
js
push
call
jmp
mov
imul
push
xorl
and
dec
fwait
inc
or
xor
je
pop
fcmovne
sub
out
mov
in
dec
jnp
dec
sub
ljmp
sub
lret
fcompl
sub
fmull
jae
imull
dec
mov
sbb
stos
leave
lcall
mov
pop
and
scas
push
mov
xor
cmp
push
enter
cmp
popf
fnstcw
idivl
push
dec
roll
mov
inc
xor
in
stos
call
inc
int3
test
pop
cmp
mov
mov
xor
fwait
sub
in
and
cmp
dec
int
fcmovb
cmp
insl
mov
or
pushw
and
aam
or
sub
fdivrs
mov
dec
inc
cltd
fdivrs
cli
mov
sbb
push
fmull
sub
imul
movsb
xchg
pushf
mov
adc
fsubrs
pop
pop
in
jmp
dec
lret
pop
fstpt
sbb
in
imul
sti
cwtl
outsb
in
xor
or
mov
adc
or
imul
adc
and
cmp
fiaddl
pushf
adc
and
mov
lret
jns
push
push
mov
mov
addr16
movsl
jnp
cmp
pop
dec
leave
imul
call
lret
int3
icebp
and
push
fwait
cmp
ret
cli
add
stos
stos
xor
lret
add
xor
sbb
out
outsl
pop
mov
outsl
cltd
in
cwtl
loope
insl
test
aas
cld
and
sti
movsl
mov
fcompl
dec
pop
dec
sub
scas
xchg
in
xchg
mov
ja
cld
ret
mov
ja
call
cwtl
leave
pop
sarl
mov
adc
fadd
repnz
or
xchg
pop
dec
stos
jns
pushf
and
cmp
ss
lret
data16
sub
cmp
pushf
ljmp
add
int3
sub
lock
xor
shl
mov
enter
in
fsqrt
bound
xchg
sub
clc
mov
jmp
negl
cmc
dec
mov
cltd
mov
int3
idivb
fisttpl
data16
js
movsb
fsubrs
fdivl
sub
sub
ss
enter
cld
lods
pop
aad
ljmp
icebp
cltd
mov
movsb
in
lods
cmp
jbe
insl
int3
cmp
mov
sti
cmp
ljmp
jmp
js
pop
sbb
inc
jmp
mov
xor
pop
pop
cmp
cmc
dec
and
push
or
or
dec
sbb
je
add
mov
dec
sub
mov
cmp
pop
push
lret
aas
loopne
cmp
dec
cli
or
cmpsb
lret
loop
stc
inc
and
lods
mov
iret
cmc
inc
mov
sbbl
fcmove
idiv
stc
or
or
cwtl
sbb
ret
cmp
ljmp
pop
xchg
cwtl
lret
cmc
sti
ficoml
adcb
mov
sti
fnstenv
mov
leave
mov
inc
cmp
fsubr
mov
or
in
push
outsb
das
das
pusha
dec
mov
frndint
sbb
push
cltd
call
cmp
dec
mov
insl
imul
jl
imulb
and
dec
shrb
lret
mov
fsubr
and
daa
sti
loope
clc
scas
sbb
imul
cltd
mov
fwait
or
and
dec
sub
js
mov
test
cld
or
dec
or
mov
sub
mov
sti
adc
negb
xor
arpl
add
lock
mov
vphsubdq
mov
into
outsl
xchg
mov
cld
stc
cli
test
sub
mov
repz
pop
xchg
fisubl
add
dec
lea
clc
lret
stos
dec
std
fnsave
or
dec
cmp
push
mov
pusha
repz
mov
fildll
mov
mov
and
test
dec
push
push
and
mov
loopne
lret
das
loope
sub
inc
aam
sbb
or
stos
xchg
int3
subb
adc
clc
call
mov
lcall
je
mov
jnp
cltd
xor
scas
and
jae
dec
fldt
or
iret
dec
fstps
popa
mov
imul
sub
hlt
cmp
pop
rorl
scas
and
jmp
cltd
test
mov
xchg
movsb
xlat
mov
int3
inc
icebp
bound
or
jo
enter
sbb
clc
sub
cwtl
lods
mov
cmp
rcr
stc
mov
mov
pop
por
mov
into
push
imull
test
fcmovnb
ljmp
test
ret
int
dec
mov
std
push
call
mov
scas
lret
cld
fsts
loope
std
cmc
movsl
ret
imul
call
mov
std
xchg
shl
cmp
enter
xchg
mov
mov
lahf
jmp
cmp
dec
test
xchg
jmp
inc
add
lods
fistpll
repz
incl
ljmp
mov
das
leave
sub
dec
fwait
enter
int3
jmp
sub
push
and
leave
lea
sbb
in
imul
aas
cmp
xchg
jno
sub
cltd
aas
push
lret
sub
inc
cs
cmp
cmp
cmpsb
cwtl
int3
leave
popa
test
jns
flds
inc
das
lret
sub
stc
fadd
mov
stos
aas
nop
leave
sbb
dec
lret
and
in
cld
rcrl
sub
mov
adc
imul
and
and
imul
test
xchg
aaa
inc
sbb
in
inc
loopne
sub
dec
pop
ffreep
mov
cmp
pop
cld
faddl
lcall
mov
pop
lret
je
jno
leave
fstpt
jmp
cmp
jb
out
inc
rcl
testl
test
inc
idiv
push
lods
dec
aad
stos
clc
cmp
andb
stos
mov
or
stos
jmp
dec
and
stc
sub
lret
leave
test
dec
mov
cmp
lret
or
dec
xor
ds
jmp
pop
dec
push
test
adc
bound
cmp
cltd
pop
fistps
jle
es
fsts
push
pusha
idiv
push
or
cmp
dec
or
mov
pushf
imul
xor
fstps
sbb
sbb
adc
clc
mov
pushf
pop
cmp
or
and
mov
and
cmp
stos
and
push
mov
mov
ss
lods
in
inc
cmp
leave
movsl
loope
shll
mov
cld
mov
pop
and
stc
sti
das
and
mov
lret
pop
cmp
arpl
ja
jns
sub
addl
cwtl
mov
test
mov
in
push
or
sub
mov
dec
pop
int3
mov
aad
enter
cli
fsts
imul
test
jns
cwtl
das
lock
or
enter
cmp
cs
ret
cmp
jmp
mov
sbb
stos
fucomi
mov
mov
mov
aad
fwait
xchg
dec
sbb
test
in
in
inc
mov
mov
mov
pop
jg
cs
sti
sbb
idiv
aas
or
jbe
sub
mov
sbb
cs
push
bound
in
lret
dec
mov
scas
in
pushf
or
or
daa
incl
scas
jnp
aaa
sub
pop
mov
fwait
movsl
cmp
fldcw
fildl
mov
push
or
outsb
sub
clc
mov
ss
fwait
jnp
ds
int
mov
cs
mov
inc
jns
cmp
fwait
pushf
rcll
dec
xchg
lock
sahf
rcr
or
pop
cmp
mov
jne
pop
inc
lods
mov
test
sub
imul
dec
cmp
xor
xchg
std
jg
cmpl
or
and
sub
mov
scas
inc
fwait
stos
outsb
stos
pop
jb
push
dec
loope
push
shl
stos
adc
cld
addr16
pop
sub
add
jbe
mov
jmp
push
push
imul
test
in
int3
pop
aas
xlat
adc
leave
pop
in
in
das
ja
out
cld
and
jl
testl
sar
lods
out
xlat
push
mov
scas
rorl
fnstsw
xchg
mov
adc
leave
shl
sbb
test
pop
cmp
and
cmp
daa
stos
mov
loope
jmp
xor
ss
cli
mov
pop
mov
dec
push
push
lods
fstpt
lcall
stos
movsl
cmp
inc
fwait
imul
sbb
pop
inc
imul
nop
insb
xchg
sbb
orl
out
das
insb
jmp
addr16
or
stos
jnp
idivb
test
stos
sti
cmp
dec
cmp
sbb
and
call
add
int
jnp
cli
int
mov
xor
ljmp
jne
inc
adc
frstor
ret
mov
in
aam
or
or
pop
ja
clc
icebp
iret
cmp
repz
pop
mov
sti
inc
pushf
jmp
xchg
push
cmp
mov
out
lret
sub
sub
dec
out
inc
mov
lret
leave
pushf
clc
mov
or
mov
dec
fadd
fmul
enter
imul
mov
mov
and
cltd
mov
mov
stos
imul
cmp
sub
fwait
scas
insb
test
stc
push
jmp
ja
adc
cwtl
in
push
pop
and
fidivl
imul
cmp
jmp
cli
shl
shrl
lds
xchg
and
dec
mov
cmp
imul
fcmove
imul
jnp
outsb
pop
sub
enter
iret
idivl
or
xor
jle
out
and
dec
daa
sbb
enter
faddl
lret
cli
mov
adc
pop
and
cmp
test
sbb
popa
inc
jno
add
lcall
sub
add
mov
and
cld
lcall
pop
cmp
pushf
mov
dec
cmpb
stos
lods
cld
cs
adc
pusha
mov
mov
lods
jbe
push
or
test
pop
fimull
dec
leave
pusha
jns
lods
fs
imul
or
lret
jnp
or
cli
and
imull
sbb
push
fdivrl
hlt
sbb
in
rcrb
je
push
stos
test
mov
pcmpgtd
cmp
stos
mov
mov
loope
cltd
jnp
sbb
push
inc
cmp
pop
sub
sbb
fs
push
imul
mov
lds
lret
outsl
or
fucomip
sub
sbb
loope
imul
jne
in
mov
mov
daa
jne
push
cmp
rcrl
xchg
nop
xor
mov
stos
sub
or
or
mov
std
xlat
cli
cmp
mov
shrl
rcrl
cmp
mov
xor
bnd
mov
fsubl
scas
ljmp
dec
cld
outsl
cltd
cmpsb
fwait
cmp
jmp
sub
in
push
std
mov
test
clc
dec
cmp
call
mov
outsb
pop
dec
lods
mov
xchg
inc
and
loope
xchg
sarl
outsl
adc
cmp
mov
cmp
pop
roll
sub
push
mov
frstor
pop
mov
aad
pop
arpl
and
imul
pop
fisttpl
or
mov
imul
dec
sub
int3
pop
jl
jmp
dec
cltd
xchg
test
in
add
aas
jns
leave
stos
das
pusha
enter
xchg
dec
pop
test
cmp
xlat
mov
ss
test
and
fcmovb
lds
loope
dec
divl
lock
fnstsw
cmp
in
int3
jmp
lcall
call
lret
dec
daa
loopne
cmp
add
rcrl
test
pop
dec
imul
fcompl
cli
sub
mov
sub
cld
pop
push
pop
jg
cmp
push
jo
testl
fisubrl
cltd
insb
pop
and
pop
sbb
enter
fsubl
sbb
outsb
or
xchg
in
or
mov
idivb
fcompl
call
lods
imul
cld
sub
fistl
cmp
shr
sahf
jmp
inc
in
dec
cmp
pop
mov
sbb
sub
mov
jg
sbb
lods
xor
mov
xor
enter
movaps
pop
cmp
movsl
ficompl
decb
inc
stc
stos
stos
push
cmp
loopne
cmp
cmc
scas
sbb
cmp
insb
mov
sub
outsb
test
xchg
sub
or
mov
enter
dec
sti
or
rcrl
adc
dec
jnp
test
enter
ss
and
jmp
xor
out
dec
das
xlat
mov
imul
test
outsl
push
sub
call
aad
mov
push
jns
cmp
popl
pushf
mov
or
sub
pop
mov
fdivrs
jecxz
imul
or
sub
das
fcmovu
push
out
test
cmp
outsl
outsb
push
push
jle
cli
outsl
lea
mov
or
mov
adc
cli
ljmp
cmp
outsl
sub
in
jnp
sub
scas
scas
movsb
fldenv
sub
mov
lahf
sub
repz
pop
in
sbbl
jnp
and
sti
movsl
push
dec
cmp
enter
scas
bound
bound
lods
repnz
mov
adc
incl
cmp
ficompl
lret
adc
test
jae
mov
cmp
inc
push
pusha
idivb
xor
lods
cli
and
sbb
cmp
mov
xor
or
and
mov
inc
or
sbb
mov
sub
in
pop
mov
add
pop
inc
mov
dec
sbb
in
mov
sub
test
mov
add
das
movsb
mov
cmp
adc
xlat
sbb
sub
stos
dec
orb
mov
fs
jns
aaa
fsubrl
fcmovu
out
cmp
ret
sub
sti
scas
stos
push
sbb
or
orb
divb
lret
jge
lea
call
mov
or
cmp
add
sbb
lcall
mov
mov
cmp
or
adc
enter
xchg
pop
mov
das
and
add
mov
outsl
in
and
fstps
scas
cs
in
ljmp
fcompl
dec
cmp
mov
and
test
ljmp
shrb
pushf
sub
fwait
or
test
sbb
test
mov
in
jns
cmp
lret
mov
cltd
mov
int
fcmove
push
aad
fwait
enter
or
test
cmp
loopne
das
pop
xor
sub
mov
push
mov
test
jae
fmull
or
int
pop
and
xchg
cld
ret
sub
xchg
cld
or
mov
cmp
scas
cmp
mov
dec
in
cmp
add
ljmp
dec
loope
shrb
sbb
movsl
cmp
fwait
or
jae
lret
add
jmp
mov
mov
stc
pop
dec
cltd
leave
out
or
es
scas
push
mov
push
mov
pop
jnp
pop
fsubrl
push
cmp
pop
cmp
jmp
fucomip
and
fistpl
cli
cwtl
ret
cmp
lcall
sub
das
push
dec
pop
mov
sarb
dec
jns
mov
stos
pushf
testb
test
jnp
scas
inc
jno
sbb
stc
lret
mov
sub
clc
push
lret
dec
in
rorl
xchg
or
fdivrs
das
mov
inc
insb
sbb
xchg
inc
dec
jne
mov
jmp
mov
and
aas
and
test
pushf
sbb
mov
call
sub
nop
frstpm(287
or
xor
mov
jmp
fmulp
jne
movb
mulb
cmp
sub
in
ljmp
mov
outsb
inc
add
aad
lcall
add
shrl
enter
mov
sahf
sbb
cs
xchg
and
mov
imul
xlat
cmp
push
cltd
inc
or
and
inc
lock
imul
dec
cmp
mov
dec
js
jmp
stc
test
insl
xchg
movsb
sub
jnp
leave
imul
sub
cmp
xchg
sub
jge
pop
xor
sub
jns
sub
sbb
ret
mov
and
sbb
int3
ret
test
dec
in
test
imul
mov
pop
enter
stc
dec
imul
in
arpl
mov
xor
mov
pop
test
xor
adc
js
or
imul
insb
into
idiv
ds
test
dec
inc
dec
jmp
sub
fiaddl
sub
sub
repz
push
cmp
xchg
outsl
cli
test
fdivrp
mov
pop
insl
pop
jmp
or
pushl
push
cltd
cmp
add
mov
push
adc
and
mov
mov
dec
ljmp
xor
test
stos
cmp
leave
mov
mov
mov
cmp
shrl
lock
pop
mov
pop
dec
movsb
ljmp
std
stos
inc
stos
dec
dec
das
pusha
mov
gs
outsb
adc
dec
or
xor
xor
mov
sahf
ret
mov
dec
test
scas
add
imul
pop
mov
mov
inc
cmp
pushf
cmp
inc
and
cmp
and
dec
xlat
packssdw
mov
sub
dec
dec
mov
cmp
daa
lds
imul
inc
sti
mov
into
and
enter
cmp
sub
in
ljmp
sub
clc
push
sbb
xor
jbe
in
imul
push
jmp
movsl
xchg
add
fistpll
cmp
add
jl
ficoml
je
mov
mov
hlt
scas
or
sub
int3
xchg
call
sub
lcall
sbb
scas
dec
call
mov
fdivrs
add
icebp
jge
lret
cmp
cmp
dec
leave
inc
leave
fs
imul
mov
mov
fs
cmc
xlat
push
xlat
mov
inc
into
cmp
stos
clc
ja
nop
cmp
or
imul
insb
cs
jnp
or
std
mov
xchg
mov
sub
inc
jns
popa
call
add
push
sti
scas
and
mov
cmp
add
xchg
mov
xchg
sub
leave
into
imul
jns
dec
or
pop
and
in
mov
lds
jmp
stos
jno
negl
pop
popa
cmp
fcmovne
adc
repz
pop
test
mov
and
int3
adc
jmp
sbb
fisubrl
clc
mov
mov
ss
mov
repnz
test
leave
adc
cmp
mov
movsb
cmp
adc
negl
mov
add
inc
scas
sub
cwtl
xor
lods
cmp
cmp
out
sbb
das
dec
cld
sub
test
and
dec
mov
sbb
push
mov
adc
and
cmp
stos
mov
pop
ficompl
add
fisttpll
inc
pop
aam
movsb
cs
aam
sti
mov
fxch
sbb
fisubrs
jne
enter
insb
dec
cmpsb
pop
xchg
mov
lods
sbb
lcall
and
pop
shll
mov
stos
ja
daa
out
mov
jae
fsubrl
call
cmp
stc
cmp
cli
int
fdivrl
jg
adc
pushf
cltd
leave
stos
call
jns
lret
stos
pop
jo
int
stos
sbb
gs
pop
mov
cmp
in
push
push
movsl
stos
enter
out
xchg
ss
xor
lret
dec
cmp
pop
mov
sbb
fs
lods
cld
std
push
popf
lret
int
mov
lret
mov
push
cmp
pop
add
lcall
scas
ret
mov
lret
insb
and
sbb
pusha
push
lret
mov
ficomps
mov
cmp
mov
xor
and
dec
sbb
ss
dec
fcomps
sub
pop
or
push
repnz
int3
sbb
cmp
sbb
jnp
sub
test
and
or
imul
mov
or
scas
inc
mov
fsts
xlat
fmul
shlb
stc
xor
leave
push
mov
insb
or
imul
aam
adc
cltd
loope
test
scas
pop
push
cmp
int3
sahf
rcrl
or
jnp
mov
loop
mov
loop
sbb
mov
pop
xlat
jnp
sub
push
xchg
shr
mov
or
add
lods
in
sti
neg
push
xor
pushf
xchg
mov
dec
cld
pop
int
mov
sub
sbb
jl
push
jnp
mov
lcall
push
sub
aas
leave
cmp
call
xor
pop
sub
nop
push
cmp
mov
or
lcall
cmp
xchg
pop
sbb
mov
jmp
cld
js
fldenv
dec
dec
int3
sub
mov
fdivl
test
test
mov
push
cmp
or
mov
mov
sub
jnp
cltd
sub
hlt
pop
fs
cmp
cmp
xorb
pop
testl
fstpt
mov
sub
cld
mov
dec
arpl
dec
push
popf
pop
sbb
imul
in
add
in
imul
mov
pop
stos
mov
fadds
stos
data16
sti
imulb
adc
cmp
rorl
outsb
les
test
mov
test
jle
mov
call
fdivr
leave
lods
sub
lods
pop
movsb
sub
inc
test
mov
jl
sub
xlat
cwtl
dec
stos
sbb
jmp
enter
cmp
pop
int3
outsb
adc
leave
cs
testl
mov
jmp
pusha
sub
xchg
lds
stc
lods
inc
imul
imul
pop
or
sub
or
sarl
pusha
pop
inc
mov
aam
subl
and
lret
push
push
mov
xchg
pop
nop
int
jmp
inc
sbb
add
les
mov
mov
cld
push
shll
out
jbe
mov
pushf
cwtl
mov
jb
mov
jbe
jge
mov
fldt
sbb
dec
std
lcall
mov
add
or
lret
aaa
je
inc
mov
jne
sti
popa
xchg
ljmp
mov
movsl
xchg
sbb
outsb
stc
cltd
imul
outsl
sub
xor
fnstsw
dec
loope
std
mov
jnp
xor
pop
cmpl
popf
or
or
outsl
or
fcoms
fs
fyl2xp1
sub
mov
jecxz
mov
jns
ljmp
stc
mov
fistl
popa
loop
fstl
mov
xor
ja
outsl
mov
sbb
stos
fcomps
outsl
movsb
ss
sahf
cltd
fisubrl
and
fnsetpm(287
int
mov
xor
cmpb
leave
minps
mov
jbe
mov
int
fwait
stc
xor
cltd
cmp
loope
pushf
pop
dec
or
fldcw
scas
mov
stos
test
cli
or
mov
scas
lret
jns
pushf
imulb
test
lods
or
jl
dec
xor
lret
std
lods
mov
hlt
xor
sbb
icebp
lods
dec
pushf
je
ja
les
and
adc
fmull
ss
cmp
ret
outsb
sub
sbb
mov
mov
sub
jmp
pop
in
sub
enter
mov
fldenv
pushf
cmp
popf
mov
lock
sub
enter
test
ljmp
and
cmp
and
sbb
jmp
imul
cmp
push
int
sub
push
stc
nop
int3
in
mov
pop
cmp
imul
mov
stos
stos
and
cmp
mov
add
movsl
mov
jge
ret
mov
outsb
test
xor
dec
lds
cli
leave
dec
int3
pusha
out
cmpsl
mov
cwtl
cmp
add
data16
push
cmp
pop
scas
jnp
lret
lods
mov
ljmp
sbb
or
push
mov
dec
je
das
and
fsts
mov
std
jmp
mov
fsub
xlat
xchg
pop
inc
mov
adc
stos
mov
mov
mov
inc
rcll
in
or
inc
sub
ret
rorl
xor
ja
fcoms
jne
dec
int
lret
dec
push
popf
test
sub
test
mov
test
pushf
pop
sbb
push
icebp
nop
in
loope
cmp
xchg
mov
sub
cs
pop
mov
mov
in
fsubrl
mov
stos
fwait
into
mov
fstpt
cli
mov
sub
or
imul
jnp
mov
stos
imul
lret
cmp
loop
sub
int3
mov
or
pushf
clc
ja
jns
mov
mov
cmp
fwait
and
adc
xchg
jecxz
leave
cltd
mov
cmp
inc
mov
mov
dec
das
popf
jbe
ljmp
cmp
ja
adc
rcr
sbb
cld
stos
mov
test
mov
mov
outsl
cmp
dec
and
xchg
mov
mov
sti
outsb
cmpsl
test
dec
sbbb
mov
imul
mov
xor
sub
adc
cmp
test
xor
adc
sbb
scas
mov
ljmp
cs
fsubr
pop
mov
movsb
dec
jecxz
in
inc
icebp
outsl
cmp
dec
pushf
cltd
or
or
cmpsb
popf
repz
pop
loopne
stos
fisubrl
pop
and
lods
xor
repz
mov
or
movsl
leave
sub
adc
xchg
and
cltd
xchg
inc
pop
clc
cmc
push
imul
pop
mov
scas
mov
xor
mov
pop
xor
mov
lret
dec
mov
sub
in
cmp
cmp
lcall
int3
mov
loope
add
cmp
mov
push
pop
imulb
pushf
dec
in
sub
out
loope
or
data16
xchg
jmp
scas
movsl
iret
cli
pop
aaa
and
jae
out
outsb
leave
xchg
sub
imul
cli
jnp
loop
xchg
subb
leave
push
cmp
call
jns
movsb
lcall
xor
arpl
or
mov
dec
sti
jo
xchg
inc
fistpl
cltd
stos
outsb
iret
idivb
leave
push
pop
test
cli
or
mov
ljmp
and
push
xchg
adc
test
in
imul
stc
fcmovnu
fsubs
cmp
enter
jmp
dec
cmc
mov
ret
aaa
mov
loopne
add
jnp
iret
sub
push
fisttpl
fsubs
and
xchg
test
mov
out
mov
insb
imulb
pop
inc
pop
lods
push
mov
enter
arpl
in
jmp
xor
shlb
stos
xchg
cmp
popf
subb
imul
sub
bound
cmp
enter
sar
dec
iret
inc
adc
dec
pop
sbb
xchg
test
std
xchg
fcomps
icebp
aas
push
xor
fyl2xp1
mov
jno
sub
lcall
or
or
test
sahf
lds
add
cmp
mov
pop
stos
in
jae
sub
movsl
cmp
test
jne
rcrb
call
sub
cld
clc
push
sti
dec
adc
dec
sub
jns
pop
lret
add
push
sbb
or
rcll
iret
cmp
sbb
sub
cld
and
push
sub
rorb
sbb
je
scas
or
xchg
ficoms
popf
cmpsb
test
popf
aas
dec
rcr
pop
jg
push
sub
movsl
in
sbb
jbe
stos
dec
dec
fdivr
pop
pop
push
ret
cltd
test
dec
in
xlat
pop
push
mov
inc
fs
jl
mov
mov
outsb
enter
dec
cmp
sub
leave
or
cld
movsl
or
dec
sbb
add
xlat
inc
or
lcall
sub
movsb
clc
xchg
and
lret
mov
mov
in
jnp
int
sub
pusha
in
movsl
fwait
dec
enter
dec
xchg
daa
mov
aad
test
pushf
sbb
loope
std
jne
stos
add
fldcw
leave
inc
push
mov
cld
or
std
lret
sub
push
dec
cmp
xchg
pop
lret
outsb
sub
dec
outsl
add
iret
lds
fldl
cmp
stos
jnp
call
pop
add
push
pop
scas
jmp
cmp
mov
in
push
push
sbb
fstpt
jnp
mov
jne
clc
lcall
ret
ss
pop
scas
pop
stos
dec
testl
lret
mov
sbb
inc
and
lret
in
imul
filds
inc
int
enter
in
mov
cmp
cmp
test
sub
sahf
mov
lret
stos
fcoms
sti
or
cli
rolb
sub
cs
add
lret
mov
leave
inc
aas
add
xor
mov
cmp
cltd
adc
pop
loopne
std
mov
fwait
mov
mov
test
cmp
jmp
xor
push
outsl
push
adc
std
mov
pop
sbb
fcomp
mov
aad
int3
icebp
add
in
aad
leave
mov
sbb
push
pushf
jnp
mov
ss
and
enter
cmp
mov
fdivr
mov
in
subb
add
inc
xor
or
and
xor
leave
imul
repz
loope
xchg
add
mov
sub
mov
push
daa
dec
ret
sub
adc
lret
fwait
sub
fnstcw
lret
rcrl
dec
push
sbb
mov
xor
or
pusha
xor
rcrl
jbe
cltd
stos
clc
fistpl
pop
pop
sbb
int
cmp
out
mov
add
std
pop
mov
jecxz
sub
pushf
sbb
inc
sub
movsl
in
lods
mov
stc
mov
pop
ss
mov
dec
mov
push
or
dec
mov
sub
pop
xlat
test
clc
mov
inc
mov
sub
cmp
pop
in
sub
scas
rorl
mov
test
test
xchg
push
in
cmp
jmp
pop
push
inc
cmp
adc
rorl
or
jns
or
sbb
push
ja
lods
mov
adc
pop
test
dec
leave
fsubrp
adc
pushf
cmp
push
pop
jns
lds
stos
cmp
push
lret
cmp
ret
mov
xchg
dec
int
test
mov
mov
into
mov
xacquire
hlt
roll
inc
jmp
loope
push
push
enter
stc
imul
mov
inc
push
mov
xor
test
cmp
fldenv
mov
adc
test
jl
cli
mov
and
cwtl
xchg
stc
test
and
in
test
pop
cmc
mov
jmp
pushf
rorb
je
sub
fidivrl
mov
leave
cmp
sbb
lods
cs
adc
or
fmuls
cmp
xchg
leave
int3
cmp
rcrb
lods
js
imul
test
cmp
call
sbb
xor
cmp
orl
inc
test
mov
es
fwait
repz
roll
dec
ret
jne
jns
enter
push
jae
cltd
pusha
push
pusha
xchg
outsb
fstpt
imul
rcrl
popf
aam
imul
sbb
in
out
push
pop
mov
ficompl
mov
jne
mov
push
sub
mov
add
mov
cs
inc
cmp
fwait
mov
test
jbe
int3
mov
mov
cld
jg
cmp
sub
and
cli
test
lock
cmp
cwtl
mov
lods
sti
and
stc
jmp
pushf
dec
sub
sbb
int3
ljmp
in
fldpi
or
lock
lods
test
lahf
imul
mov
ljmp
cmp
add
lods
fwait
xor
dec
mov
sbb
xlat
call
imul
cmp
clc
dec
jno
sbb
mov
test
cmp
aaa
cmp
xchg
shr
stos
out
lcall
sbb
das
pop
pop
mov
leave
test
pushf
imul
cmp
adc
cmp
imul
xchg
lret
dec
cltd
xchg
out
stc
rorl
call
xchg
aad
fmull
jnp
cmp
jmp
leave
pop
fmul
stos
pushf
sub
mov
and
out
int3
xor
imul
test
sti
dec
sbb
iret
cmp
push
pop
lcall
int
stos
lret
dec
xchg
fstpt
sub
call
fidivrl
mov
dec
shll
xchg
push
mov
mov
fwait
mov
pop
dec
cli
jnp
std
inc
push
fnstsw
pop
pop
scas
dec
ljmp
fs
cmp
mov
and
fcompl
int3
push
or
jnp
cmp
out
jmp
fadd
lret
inc
cmp
push
mov
call
cmp
cli
cld
scas
imul
pop
and
mov
mov
mov
cld
fcmovu
in
jmp
cmp
aam
xor
int3
bnd
gs
cld
stc
stos
cmp
or
add
and
sub
sub
jbe
jo
cli
sbb
inc
stc
fistl
cmp
shlb
icebp
fs
shrl
pop
push
pop
shll
mov
mov
push
sti
mov
scas
fsubl
shlb
pop
inc
xchg
sbb
adc
jnp
in
mov
sbb
jle
inc
adc
enter
jae
xchg
stos
test
jo
into
pop
xlat
xor
or
in
imul
jnp
jne
mov
xor
imul
inc
jmp
xchg
test
ror
mov
dec
mov
ss
push
cmpl
and
test
cmp
sub
outsb
stc
or
das
push
fistpll
in
mov
daa
push
inc
rorl
dec
leave
inc
and
sub
daa
imul
sub
imul
cltd
loop
les
aaa
push
push
les
arpl
jle
outsl
stos
int3
jb
scas
stos
fnstcw
pop
cltd
movsb
sub
in
mov
lock
push
push
inc
into
jmp
push
push
clc
lds
sub
test
xchg
cmp
jmp
dec
dec
fdivl
xorb
sti
xchg
insl
shr
mov
flds
push
jnp
or
fisubrs
mov
dec
sbb
popa
dec
inc
stc
mov
mov
inc
cwtl
cmp
jns
das
lret
cmp
cmp
sub
sti
scas
xchg
cmp
fildl
out
or
test
stc
call
flds
adc
mov
add
mov
fldl
mov
cwtl
or
xor
and
sti
out
or
js
mov
adc
test
sub
movsl
push
outsl
push
mov
lahf
xor
sbb
mov
mov
pop
dec
ljmp
arpl
sub
test
and
stos
mov
jns
int
pop
lods
hlt
and
dec
imul
aad
fstps
sub
test
mov
xchg
enter
rorl
xchg
leave
in
cltd
andl
sar
jmp
pop
movb
add
data16
add
cwtl
xchg
cmp
dec
fdivrl
daa
xor
jae
negl
jnp
outsb
popa
or
or
cmp
daa
rcll
mov
sbb
fidivrl
popa
loopne
dec
mov
add
fs
in
ljmp
lret
fmull
popa
pop
leave
mov
faddl
or
mov
inc
mov
outsb
xor
or
outsl
loopne
lds
lcall
mov
mov
cmpsb
dec
lods
mov
stos
mov
enter
pop
lret
test
cmp
inc
jmp
sub
jns
mov
mov
jbe
ljmp
leave
mov
jmp
mov
push
in
inc
pop
xor
fsubrl
stos
pop
pop
sub
aad
test
fcoml
cmp
xchg
mov
fcomps
cltd
pop
ljmp
call
test
xchg
movsb
xor
cwtl
pop
mov
negl
ss
jge
mov
sub
int3
scas
packuswb
dec
cmp
fcomi
sbb
lret
cmp
int3
fnstcw
in
mov
icebp
dec
stos
cmp
int3
sub
push
sub
dec
leave
lcall
mov
das
xchg
jmp
cld
enter
and
and
call
sbb
pop
test
and
leave
in
fwait
call
xchg
pop
adc
sub
cmc
sarl
int
xchg
shll
cmp
dec
in
cmpsl
shl
xor
mov
fdivrl
cld
and
pop
or
dec
clc
ss
adc
in
fldcw
cmpsb
adc
adc
mov
les
mov
enter
in
mov
cli
xchg
inc
mov
cwtl
cmp
fdivs
cmp
clc
mov
mov
stos
push
idivl
cmp
cmp
mov
lret
aam
fdivl
stos
sbb
push
clc
cmp
inc
in
sub
cmp
outsb
pusha
mov
mov
fs
or
cmp
mov
call
cmp
pop
and
push
cld
or
and
pop
pop
or
and
pop
js
lcall
cwtl
jns
in
mov
xchg
mov
fs
add
test
sbb
and
dec
cmp
adc
mov
stos
test
icebp
inc
mov
or
jnp
dec
cmp
popf
or
stos
sub
cmp
pop
cmp
push
loopne
scas
leave
adc
imul
jmp
cmp
pop
xor
sub
stc
scas
test
or
in
jns
jmp
mov
xchg
test
fisubrl
sub
cmpsb
jnp
cmp
test
test
fsubrs
loop
arpl
and
push
das
jmp
call
mov
cs
ja
mov
cmp
lret
outsl
mov
fmull
aad
mov
pop
fcomps
scas
movsl
in
test
sbb
sub
xor
xor
mov
mov
xchg
fstpl
mov
lret
shrb
xor
arpl
subb
stos
mov
fcompl
sbb
icebp
sbb
push
test
xorps
xchg
pusha
popa
sub
jns
sub
pop
jne
sub
and
mov
mov
sub
scas
sub
stos
jmp
cmp
fidivl
roll
mov
dec
and
clc
or
ss
sahf
pop
fsubs
fldt
mov
das
dec
or
lods
mov
mov
adc
dec
adc
and
jmp
lods
inc
push
ret
mov
sub
sbb
loop
mov
stos
cmp
or
in
mov
sub
adc
call
fnstenv
jg
push
lcall
adc
ret
pop
xor
clc
pushf
pop
std
sub
cli
cmp
clc
enter
add
and
jb
repz
sub
imul
dec
fwait
stos
fs
gs
or
fs
mov
sub
jbe
sbb
xor
test
jp
sbb
jbe
pop
jne
mov
test
push
ds
lods
je
cmp
push
outsb
or
cmp
add
frstpm(287
loop
cmc
add
pop
inc
lods
push
in
xor
or
or
cwtl
mov
jbe
int3
fs
sub
test
stos
cmp
pop
sbb
adc
inc
out
pop
mov
mov
add
cmp
sbb
mov
shr
and
fcomp
cs
scas
sbb
cli
shrb
enter
sbb
fmull
fwait
push
gs
pop
add
dec
push
scas
mov
jnp
loopne
jbe
xor
int3
mov
push
inc
or
dec
add
lret
ljmp
cli
mov
testb
das
popf
pop
jmp
es
sub
stos
loope
pop
sbb
cmp
psubsb
xchg
mov
pushf
sub
mov
pop
fiaddl
and
cltd
test
fcomps
leave
mov
jne
fsubr
pop
cmp
xchg
adc
ret
dec
jns
cli
test
jmp
pop
mov
lods
lret
xchg
fwait
dec
or
imul
inc
xlat
inc
in
mov
lret
mov
xor
mov
ljmp
decb
mov
cli
in
xor
or
push
pop
imul
sub
jmp
stos
icebp
std
jbe
repz
sub
into
cmpsb
pop
sub
jg
and
pop
jo
add
test
or
or
push
sbb
lds
pop
call
mov
in
enter
pushf
sub
cmp
inc
xchg
pop
bnd
imul
shrb
xchg
adc
dec
enter
cmp
dec
cmp
leave
js
xor
sub
sub
jns
mov
inc
xchg
aam
and
dec
xchg
pop
mov
pop
cmp
or
jne
fsubr
lret
shr
jmp
mov
stos
in
ljmp
pop
test
das
jmp
dec
sbb
rcll
pop
mov
xlat
in
push
aad
cmp
adc
adc
fmull
outsl
mov
and
pop
or
sahf
test
cmp
dec
fistl
xlat
cmp
adc
sbb
les
add
daa
je
xor
cs
sbb
fnstenv
push
mov
fimuls
movsl
loop
popf
js
mov
repnz
dec
xor
ljmp
int3
aad
stos
mov
and
cmp
lcall
in
jns
xchg
add
sbb
sub
pushf
test
mov
unpcklps
test
sbb
add
inc
cmp
int3
cli
stc
aad
jns
xchg
jecxz
pop
and
mov
dec
dec
imul
mov
mov
stos
sti
jb
stc
fistpl
and
test
clc
and
adc
call
mov
lret
fwait
int3
inc
inc
std
test
scas
mov
dec
cmp
dec
mov
cmp
test
sbb
stos
jns
test
imul
mov
or
clc
inc
sbb
mov
sub
inc
lods
dec
xchg
leave
mov
cmpsl
cmp
mov
imul
and
lret
stos
dec
in
cwtl
sub
scas
pop
sub
inc
xor
cwtl
mov
push
cmp
popa
int
or
fadd
cmpb
inc
rorl
cltd
xchg
mov
call
add
dec
xchg
addr16
mov
mov
sub
enter
mov
loope
icebp
insb
scas
out
orb
aad
jmp
enter
fistl
mov
sub
idiv
pushf
or
lods
jg
xor
push
jmp
xchg
popa
int3
fmuls
fiaddl
dec
inc
pcmpgtd
insb
dec
imul
lcall
and
dec
cmp
daa
decb
loopne
cltd
jnp
in
xlat
test
mov
ljmp
sarl
inc
imul
dec
mov
pop
das
dec
stos
sub
cmp
xchg
xor
pop
cmp
negl
fisubl
xor
push
xlat
in
test
fcmovu
xor
imul
sub
fisttpl
xor
cli
filds
mov
ljmp
dec
popa
outsl
fwait
cld
push
fmuls
sub
int3
sub
xor
cli
or
cli
roll
pusha
jnp
inc
mov
push
in
cmp
imul
lcall
sub
ss
xor
sub
xchg
in
lret
or
mov
cmp
adc
fsubr
adc
dec
call
xchg
pop
bswap
cwtl
pop
cld
xchg
mov
lea
pushf
sahf
jg
add
or
scas
jp
ret
push
stc
sti
or
fistpl
pushf
imul
sbb
hlt
daa
repz
fcmovb
cmp
pop
in
mov
mov
sbb
shlb
jle
fmuls
fsub
cmp
stos
pop
shl
pop
xchg
dec
rcrl
xlat
mov
jns
mov
nop
cmpsb
sbb
add
inc
mov
fmull
lods
mov
sub
xlat
cli
insl
xchg
movsl
cmpb
dec
mov
test
pop
cli
mov
pushf
popf
adcb
mov
xor
rclb
mov
jbe
movsl
test
stc
shll
bound
sbb
ss
stos
fwait
test
dec
mov
mov
ds
jae
cld
into
les
xor
or
sub
mov
xchg
mov
xor
sub
cmp
jmp
outsl
push
out
fs
xchg
imul
leave
dec
int
pushf
lcall
pop
jns
cmp
stos
fmuls
cmc
call
inc
imul
pop
sti
arpl
stos
xchg
or
mov
sub
push
jl
outsl
dec
cld
pop
inc
sub
loopne
stos
int3
jne
rorl
fwait
out
int
cwtl
ret
xor
repz
jmp
test
call
cmp
mov
and
in
cwtl
jmp
sub
imul
cltd
mov
cmpsl
fstl
cmp
lret
ljmp
cmp
test
xor
dec
sbb
les
cmp
sbb
stos
xchg
jmp
lahf
loope
ljmp
lret
jae
je
imul
sub
shr
cli
popf
idiv
push
xchg
mov
push
cltd
pushf
in
mov
sar
cmp
cld
and
inc
or
divb
fsubr
ljmp
xchg
cmp
loopne
stc
xchg
ss
mov
dec
popf
xchg
cmp
incl
scas
add
mov
mov
int3
cmp
pusha
jecxz
cmp
xor
xchg
xlat
ret
fsubrl
mov
dec
pop
fnstcw
stos
pushf
enter
out
stos
mov
cwtl
mov
mov
test
call
cld
cmp
mov
adc
leave
flds
sub
test
xchg
add
fistl
ficomps
fistpl
mov
repz
imul
je
pop
lea
jmp
pop
push
bound
sti
mov
xor
flds
loope
mov
mov
or
scas
xor
aas
mov
xchg
in
fisttpl
xchg
mov
loopne
fadd
test
or
in
fimull
frstor
sub
cs
lret
sub
jnp
popf
sub
add
push
call
mov
lock
sbbb
cmp
sti
imul
fxch
push
leave
push
cli
rolb
cmp
test
stos
inc
dec
adc
loopne
push
push
xchg
sbb
fwait
and
int3
shll
jmp
pusha
dec
push
cmp
lock
sub
mov
mov
inc
and
sub
test
cmp
cmc
dec
imul
cmp
inc
push
in
cltd
mov
loope
cmp
insl
mov
ljmp
leave
mov
sub
inc
inc
dec
xchg
dec
and
jge
scas
jecxz
jns
leave
cs
out
call
in
mov
add
das
jmp
fstl
fdivl
pop
stos
ret
je
inc
mov
push
test
jmp
sub
mov
les
mov
xor
cltd
clc
push
xchg
ja
or
lret
dec
pop
xor
and
jbe
cmp
mov
xchg
test
ss
clc
cmp
ljmp
imul
cwtl
dec
lock
out
push
push
jb
or
enter
rorl
cmp
je
shll
mov
or
adc
sti
add
mov
stos
test
call
dec
mov
shl
arpl
pop
leave
sub
xchg
mov
sub
sbb
add
cmp
mov
or
stos
inc
int3
mov
add
mov
fwait
enter
add
pop
cmp
dec
mov
pushf
jns
fdivs
jl
inc
inc
in
mov
xor
cli
add
mov
mov
frstor
sbb
cwtl
mov
lret
cld
cs
mov
or
shll
cmp
and
clc
fldt
dec
xchg
xchg
rorb
in
jle
in
mov
cmp
std
sbb
pop
call
mov
adcl
outsl
cs
mov
mov
pop
das
sub
and
fsubrl
fcoms
negb
testb
dec
int
sub
xor
test
or
pop
mov
mov
dec
fdivl
lea
sub
sbb
adc
lret
lods
leave
mov
pop
test
lret
sbb
popa
mov
nop
or
ljmp
aad
or
mov
fwait
mov
imul
pop
fisttpl
mov
xchg
jnp
aad
sub
lret
dec
xor
stos
xchg
or
movsb
hlt
and
test
jmp
test
inc
in
push
sbb
idiv
sub
inc
or
iret
ljmp
int3
mov
bsf
mov
mov
cld
push
mov
dec
enter
inc
cmp
outsb
fistpl
xor
in
sub
push
cs
imul
clc
popf
in
in
mov
mov
cli
dec
xchg
inc
mov
mov
in
lock
mov
loopne
shll
test
or
in
pop
sti
xor
sub
cmp
out
pop
xchg
fstpt
cmc
les
ljmp
iret
pop
out
negl
cs
xchg
mov
shll
sbb
xchg
sbb
lcall
fsubs
js
mov
test
and
or
dec
push
or
push
cmp
stc
movsl
pushf
fdivrs
imul
add
leave
inc
pop
xor
xor
lods
and
xor
mov
mov
add
cmp
imul
test
stos
outsl
dec
pop
cltd
dec
push
imul
lds
dec
lods
js
lcall
and
sub
lret
cwtl
lret
scas
sbb
mov
ljmp
int
or
imul
sub
cs
add
jp
icebp
fstpt
cli
add
jne
cmp
xchg
inc
mov
ret
cwtl
inc
xor
dec
mov
setae
ss
rorl
in
mov
add
jns
data16
or
out
call
ljmp
mov
inc
mov
pop
jge
adc
adc
mov
imul
stos
movsb
pop
inc
jmp
pushf
or
aaa
lods
sub
in
pop
dec
jnp
mov
pushf
scas
les
mov
dec
dec
mov
movsl
aad
xor
xor
or
mov
ss
lods
sbb
sbb
or
pop
or
imulb
sbb
int3
jo
test
push
cmp
cld
jmp
sbb
cwtl
dec
mov
loop
mov
scas
cmp
sbb
xlat
lods
pop
jecxz
in
push
mov
xor
mov
jbe
pop
sub
cmp
scas
insb
adc
mov
mov
or
andb
sub
sub
mov
in
jae
lods
call
pushf
cmp
xor
sbb
xchg
jecxz
imul
sti
inc
in
pop
pop
xor
addr16
fistl
sub
mov
insl
sbb
mov
pusha
mov
dec
outsl
test
and
cmp
insb
stos
inc
pop
in
loopne
xchg
std
push
inc
cmp
fisttpl
xchg
pop
cmp
leave
std
mov
cld
into
cmp
pushf
test
sbb
and
cld
sbb
jnp
call
shlb
fisttpll
xchg
cmp
and
rcll
xor
jne
call
sub
pushf
imul
mov
pushf
popf
or
sbb
adc
and
fwait
mov
add
adc
cmp
test
lcall
inc
sub
inc
fld1
fisttpl
jmp
xchg
mov
inc
ljmp
popa
test
dec
cwtl
outsb
jle
sbb
int
mov
in
cmp
into
cmc
cltd
inc
stos
cmp
lcall
test
dec
das
mov
dec
aaa
xor
or
or
dec
and
dec
outsb
sbb
inc
cmp
les
mov
dec
dec
leave
movsb
lea
in
push
or
rep
push
jne,pn
mov
aam
in
push
jnp
fnstsw
in
sbb
pop
cmp
mov
fcomp
test
into
add
jbe
fstps
dec
sub
flds
pop
mov
mov
leave
sub
jnp
sbb
cmp
push
loope
std
jp
push
stc
dec
pop
sub
cmp
adc
test
push
jmp
mov
sbb
sub
mov
or
imul
clc
sub
idivb
sbb
out
mov
sub
mov
in
jmp
test
cmpl
jmp
in
and
or
roll
test
loope
sub
mov
mov
lcall
fmull
inc
dec
lahf
enter
in
or
ljmp
mov
mov
pop
adc
in
stos
sub
insb
fsubrl
fldcw
in
imul
test
stos
sub
stos
mov
sbb
and
roll
shll
scas
lret
push
xchg
add
dec
les
in
cmp
inc
js
fstpt
mov
nop
popf
fistpl
cmpsb
outsb
cmp
test
pop
lret
cmp
loop
jns
fdivr
mov
cwtl
imul
jmp
xor
test
mov
jge
popf
adc
mov
jmp
push
push
dec
out
fldcw
movsb
inc
xchg
mov
add
ret
call
sbb
and
xor
sbb
dec
mov
lds
sbb
inc
cmp
mov
fldt
enter
sbb
jecxz
aas
xchg
imul
jns
sbb
and
loopne
or
outsb
sub
mov
cmc
jno
or
fldcw
mov
push
roll
roll
inc
std
push
adc
test
dec
test
pop
cld
cmp
das
fmulp
leave
push
mov
add
xlat
pop
jnp
test
test
dec
stos
dec
lock
jnp
cmc
mov
cmp
sti
repz
xlat
cli
pop
and
inc
jmp
sbb
dec
dec
fistpl
pop
xor
and
cli
adc
inc
or
popa
add
arpl
test
call
cmp
jl
cmp
enter
dec
fnsave
test
mov
fdivrl
jbe
dec
push
stos
jo
les
and
pop
clc
mov
mov
lahf
outsb
in
test
sub
push
or
cmpsb
in
test
or
cmp
arpl
je
out
pusha
popa
paddb
cmc
sub
fsub
iret
xor
mov
mov
dec
mov
test
mov
jbe
fld
cwtl
sbb
loope
iret
jmp
inc
add
mov
push
cmp
push
in
jae
jnp
lcall
push
fsubr
fisubrs
and
inc
sub
rol
cmp
add
and
sub
or
and
push
jne
add
dec
xor
jnp
cmp
mov
fldcw
sahf
pop
pop
shl
lret
cli
jne
fldlg2
stc
pop
dec
in
or
mov
mov
dec
mov
scas
ret
idivb
pop
mov
lcall
mov
sub
insb
mov
stos
ret
in
int
in
leave
ret
adc
add
test
sub
lods
pop
inc
aas
cmp
fldt
lret
mov
mov
jb
scas
jge
iret
lods
dec
adc
mov
jnp
and
dec
aaa
mov
cld
imul
jg
add
fdivr
add
test
testl
pop
clc
sub
ljmp
sbb
dec
mov
lret
scas
dec
stos
jmp
mov
mov
js
dec
or
stc
repnz
inc
xor
cld
in
xchg
out
pop
sub
sbb
fmulp
mov
or
cmp
das
add
mov
cltd
stos
pop
enter
imul
aas
push
pusha
cmp
cmp
test
leave
xchg
nop
in
ljmp
adc
lcall
imul
cltd
push
idivb
fadds
int
ljmp
dec
es
mov
insb
imul
sub
repnz
enter
sti
dec
jmp
pop
push
out
cmp
dec
mov
ljmp
adc
cmp
pop
in
cmp
clc
xlat
push
xchg
push
jnp
cmp
cwtl
xor
dec
push
xlat
or
jae
sbb
lahf
inc
adc
test
push
or
cmp
or
in
leave
mov
in
jns
inc
loope
rcll
jg
sub
lcall
jb
test
push
dec
fdivrl
pop
or
sub
mov
nop
jne
pop
sub
fs
and
mov
lret
or
mov
orb
push
and
inc
mov
push
xchg
das
mov
pusha
sub
jmp
push
xlat
stos
mov
imul
pushf
push
mov
lret
aaa
adc
dec
cld
adc
cmp
stc
sub
adc
mov
sbb
and
cmp
leave
in
cmp
jbe
jne
ficoml
xchg
mov
inc
call
out
cmp
and
sub
jns
test
mov
idiv
jg
push
inc
sub
inc
or
pop
int
aas
adc
and
sub
dec
fmull
jmp
jnp
ljmp
in
daa
cmp
daa
mov
cli
cmp
cmp
enter
leave
shrl
btc
add
loop
push
lcall
test
sbb
lods
xchg
mov
in
sub
cmp
inc
loop
sti
sbb
out
jmp
fdivrs
or
popa
pop
movsl
ret
mov
jle
lret
pop
cmp
int3
sbb
pop
testb
loopne
inc
pop
mov
in
mov
mov
cltd
pusha
fwait
cmp
cwtl
leave
je
into
fsubrs
aam
pushf
loop
sbb
imul
cltd
sbb
test
ror
cld
cmp
stc
lds
imul
call
mov
sub
mov
dec
leave
sbb
test
or
popa
jne
jbe
cmp
xor
cmp
sub
stos
sbb
jnp
inc
addr16
ret
cltd
mov
imul
psubw
mov
xor
enter
sbb
adc
lret
in
xor
subb
out
imul
mov
lods
dec
loope
mov
fs
mov
ds
fldenv
cmp
adc
outsb
fwait
in
test
call
add
lret
mov
sbb
loope
ss
jne
jns
out
sub
test
lahf
shlb
in
cli
jmp
enterw
lahf
in
in
fnstenv
mov
adc
pushf
jge
adc
lea
popa
mov
leave
cld
fsubl
fcomp
dec
lods
idiv
jmp
mov
cwtl
int3
push
mov
sub
adc
lret
dec
fstl
stos
push
sbb
scas
cmp
imul
xorb
cmp
add
in
add
fcompl
lret
insb
cmp
inc
dec
test
lret
pop
fsubrs
loopne
aaa
sbb
jae
mov
xor
jmp
int3
pop
and
sub
xor
test
cltd
sub
xchg
push
sub
icebp
pop
int
call
enter
mov
sti
mov
imul
sahf
jbe
push
pop
sub
mov
cmc
loopne
cmp
int3
int
mov
mov
xor
jecxz
mov
sub
push
mov
cltd
lcall
imul
ret
cmp
pop
mov
pusha
leave
mov
sub
lods
int3
jns
flds
test
int
fdivr
std
push
call
adc
into
lret
test
sub
and
ja
in
cli
pop
call
sub
or
cwtl
popa
mov
sub
lcall
sub
call
and
mov
push
fcmovbe
jnp
push
fmull
lret
sbb
sub
pop
jo
add
sbb
sub
in
jmp
or
inc
int
cld
xor
jnp
ret
mov
jp
adcl
arpl
sub
mov
mov
adc
push
fistpl
inc
pushf
test
aaa
das
adc
push
lahf
stos
rorb
outsb
cmp
or
fsubrl
das
int3
hlt
loop
dec
test
xor
daa
lcall
cmp
shlb
cmp
cmp
loopne
cmp
and
imul
cmpsb
push
cmp
add
fcmovne
or
adc
dec
cmp
into
mov
mov
sub
or
add
pushf
dec
ds
or
daa
cmovnp
and
and
popa
idivl
bound
sti
pop
fldcw
lods
inc
outsb
jne
pushf
sbb
ljmp
int
cmp
fstps
sub
inc
int3
or
cmp
stos
cli
inc
pop
sub
dec
lret
scas
negl
jnp
xchg
aas
cmp
xchg
lret
and
dec
std
ljmp
xlat
cmp
xchg
adc
or
lahf
leave
inc
imul
sbb
mov
pop
dec
lahf
popf
test
and
cli
mov
jle
cs
mov
mov
imul
push
fdiv
dec
add
sub
lahf
or
inc
sub
std
jne
lds
mov
cld
sbb
je
and
sbb
test
lcall
dec
fisttpll
and
mov
adc
in
aam
in
pop
and
mov
xchg
jns
repz
mov
dec
inc
cld
stos
mov
in
loope
fwait
test
ret
or
adc
pop
clc
push
xlat
mov
call
cmp
sbb
adc
add
aaa
in
cltd
loopne
popf
and
add
mov
mov
cmp
mov
jns
in
dec
fildl
add
pop
push
stos
inc
sub
push
xchg
in
daa
mov
pop
imul
mov
sbb
mov
in
adc
aas
cli
scas
mov
gs
outsb
jae
add
sbb
inc
stc
sti
sub
or
lods
pop
push
xor
stos
scas
mov
lret
js
mov
idivb
aad
stc
call
test
imul
push
sbb
jmp
or
jns
stos
lods
das
into
in
cld
lret
dec
push
loopne
iret
cli
test
fcomps
sbb
mov
and
jnp
cltd
jmp
test
cld
sbb
scas
aas
mov
lret
mov
push
neg
xlat
mov
dec
jle
cld
das
inc
mov
push
cmp
js
dec
or
sti
mov
outsl
pop
sub
lret
ljmp
outsl
test
lcall
mov
xchg
mov
dec
test
imul
mov
nop
and
mov
fcomps
cmp
inc
mul
xor
jl
xlat
mov
cld
jmp
sbb
xchg
movsl
push
leave
cmp
ljmp
mov
sar
insl
int3
in
fsubs
add
xor
mov
outsb
stos
lcall
cmp
loopne
adc
mov
int
ljmp
mov
stc
add
rorb
movsl
pop
mov
in
test
mov
inc
adc
lret
rcll
mov
pop
cli
fsubl
lods
add
imull
imul
fadds
lods
adc
mov
mov
xor
jl
aad
jecxz
mov
push
cmp
les
jnp
pop
jno
arpl
cs
movsl
int3
stos
cmp
sbb
les
cmp
mov
inc
dec
sub
sti
xchg
es
cmpsl
mov
adc
clc
lret
dec
ret
roll
and
sub
dec
mov
jle
call
in
mov
gs
sbb
cmp
test
xchg
icebp
int3
cmp
fwait
or
aaa
adc
lods
jp
xchg
pushf
sbb
loopne
jne
test
and
test
fwait
cmp
fwait
ret
lret
into
mov
enter
push
adc
inc
stc
mov
fdivrs
sub
fmul
jns
ljmp
lret
mov
aad
lcall
ss
mov
add
out
roll
outsb
adc
dec
mov
cmp
mov
inc
sbb
call
lods
test
add
mov
scas
pop
aam
or
and
or
fs
inc
jle
push
movsl
loop
mov
cli
dec
outsb
or
mov
mov
repz
sbb
add
dec
adc
imul
or
aad
jns
lahf
sub
xrelease
test
pop
adc
inc
test
xchg
or
rcl
xchg
sub
fisubl
pushf
sbb
fstps
rcrl
mov
sti
enter
mov
rorl
xor
pushf
add
add
dec
sarl
push
mov
cmp
or
lcall
lahf
pop
or
ljmp
sub
or
xchg
cmp
je
sub
ljmp
pushf
mov
or
sti
stos
fs
push
scas
outsl
arpl
roll
pop
mov
pusha
stos
fdivrs
sub
outsb
jmp
setge
jno
insl
dec
dec
ljmp
mov
pop
jl
xchg
lcall
xchg
cmc
stos
cmp
cld
enter
and
data16
or
fdivrs
mov
push
cmpsl
out
out
mov
fwait
jecxz
test
stos
das
cmp
cli
sbb
pushf
test
fimull
mov
dec
cmp
clc
neg
gs
xchg
leave
pop
call
mov
adc
mov
jmp
or
ret
ljmp
push
pushf
lahf
xchg
mov
dec
imul
lret
dec
adc
fwait
in
or
nop
data16
pop
fstpt
lods
in
int
cwtl
and
mov
fwait
ss
movsl
inc
stos
in
cmp
sets
xchg
popa
nop
int3
in
jmp
lods
xor
pop
aad
push
mov
xchg
jne
jmp
mov
lock
icebp
arpl
sahf
dec
add
mov
dec
mov
mov
mov
test
dec
cmp
cld
or
insl
lods
adc
fdivrs
sub
sub
or
test
mov
sub
stc
sti
fwait
leave
dec
call
repz
xor
xor
sub
jns
lds
jno
decl
or
mov
xchg
ljmp
sub
fistl
mov
stos
inc
mov
ds
jmp
daa
stos
xor
sbb
lods
shl
cmp
mov
mov
push
stos
fnstenv
add
mov
cwtl
jbe
stos
or
dec
fmull
adc
cltd
lods
and
fisubrl
test
int
data16
cmp
xor
pop
cmp
lods
cld
js
or
sbb
or
mov
cmpsl
jns
adc
cmp
mov
cmpl
mov
imul
cs
cs
imul
lret
dec
xor
test
mov
into
pop
inc
and
mov
cwtl
sub
jnp
inc
js
cmp
popf
jbe
sub
dec
add
mov
lret
stc
test
cmp
push
outsb
idivl
sti
add
das
dec
or
imul
sbb
jne
sub
bound
lret
fnstcw
mov
mov
mov
xchg
outsb
les
mov
imul
sbb
enter
sub
test
pop
jle
sub
daa
adc
push
pop
jmp
lods
xchg
stos
mov
xlat
filds
or
and
stos
push
mov
or
and
pop
mov
loopne
mov
aas
sbbl
and
sbb
mov
fcmovnb
cld
bound
sbb
or
mov
cltd
inc
cmc
mov
fsubrl
mov
mov
insb
lahf
daa
in
cld
inc
jmp
imul
pop
cld
dec
cs
dec
nop
xor
aad
pop
xor
sti
sub
jmp
lret
mov
mov
in
psubsw
lret
xor
daa
das
mov
je
sub
pop
cld
cli
dec
fldcw
push
dec
ret
jp
ds
imul
icebp
cmp
adc
stos
cmp
sub
pop
ss
xor
add
inc
or
add
stos
mov
adc
ret
enter
testb
fxch
je
mov
cmpsl
lcall
cltd
fwait
cmp
stc
pop
jns
lods
ret
lret
lret
jmp
cmp
fwait
mov
pushf
and
cs
push
or
push
clc
xlat
call
and
cwtl
lods
ror
cld
sub
and
mov
mov
jo
pop
cmp
mov
loope
sbb
xor
test
addr16
jmp
adc
fnstsw
push
push
jnp
sub
stc
test
pushf
dec
cld
cmp
push
fmuls
push
mov
mov
pop
filds
enter
jno
sub
cli
cwtl
cmp
fisubrl
hlt
mov
movsb
lods
pushf
cmpl
pop
xor
nop
les
sub
mov
jbe
js
or
sub
clc
cld
fiaddl
fxam
mov
and
inc
repnz
and
cs
cmc
lret
lcall
pushf
out
push
dec
and
cltd
cmp
repz
mov
pop
adc
test
mov
stos
imul
mov
mov
and
test
stos
ds
pop
mov
movsl
dec
mov
shl
std
pop
faddl
jmp
sub
mov
outsb
test
imul
or
dec
fiaddl
cwtl
sbb
fisubrl
idiv
mov
outsl
pop
adc
clc
stos
sbb
sti
in
cmp
das
fwait
clc
sti
lcall
ljmp
sti
out
cmp
xchg
daa
popf
fisttpll
push
xor
cmpsb
lods
or
jno
or
mov
test
push
add
or
aas
cmpsb
cmp
or
mov
hlt
dec
sbb
imul
or
sub
sub
sbb
addr16
inc
mov
cmp
mov
push
jmp
pusha
mov
lods
adc
loop
outsl
popf
test
pop
ds
cwtl
stc
nop
in
sbb
xchg
fdivrs
jns
cmp
test
movsl
or
cmp
dec
cmp
dec
push
fstpt
push
loopne
inc
sub
jns
mov
ret
clc
cld
mov
scas
std
push
pop
sub
pushf
cmp
sub
sub
or
mov
js
jle
and
ljmp
dec
xchg
mov
push
add
icebp
sbbb
leave
fwait
sbb
pop
arpl
cmp
cwtl
or
outsb
jno
and
inc
cmp
icebp
push
and
in
sub
imul
jmp
mov
jecxz
imul
or
cltd
xchg
cmp
and
loope
ljmp
adc
fidivrl
leave
insl
jns
dec
fnstenv
mov
lea
push
mov
mov
jne
or
sti
fwait
sub
inc
sub
cmp
int3
mov
adc
mov
sti
mov
mov
pop
xchg
sub
dec
ret
cmp
sti
push
xor
call
mov
mov
mov
test
lcall
aaa
dec
mov
push
scas
out
test
pushf
and
arpl
fsubrl
dec
cmp
jno
jo
movsl
sub
xchg
inc
ljmp
int3
stos
adc
mov
out
stos
sbb
mov
in
pop
aas
sets
sub
sbb
jmp
jbe
addr16
mov
in
out
cld
cmp
ret
lret
add
pop
sub
push
mov
imul
jnp
ficompl
inc
or
cltd
ja
imul
in
fdivr
jge
push
xchg
mov
mov
mov
daa
test
fstps
lahf
push
aad
inc
icebp
xor
in
cwtl
leave
adc
jmp
ret
andb
sub
adc
sub
fdivrs
cs
int3
mov
leave
fwait
or
mov
dec
inc
imulb
and
adc
mov
cmp
mov
test
in
mov
in
shlb
pop
mov
push
add
lcall
in
dec
mov
mov
sbb
cltd
jnp
pop
push
lods
push
js
or
imul
mov
sbb
fnstenv
movsl
mov
mov
inc
imul
push
aam
push
les
push
lods
lcall
xlat
dec
std
and
je
mov
xchg
xchg
in
cmp
adc
or
mov
mov
lret
lret
add
shrl
xlat
stos
push
sbb
jo
mov
fnstcw
shrb
push
leave
mov
sub
imul
sub
pop
jns
cmp
push
inc
mov
loopne
mov
jmp
inc
loope
push
popf
enter
lds
lea
adc
js
mov
fstpt
int3
jns
iret
inc
je
scas
sbb
in
cmp
jae
pop
push
dec
pop
cld
sub
stos
mov
adc
in
mov
inc
jecxz
test
mov
pop
sbb
mov
pop
repnz
mov
loop
aad
mov
mov
mov
enter
stos
mov
and
cmp
fwait
or
inc
jnp
sub
cmp
pop
inc
xchg
sarl
jge
rorl
and
dec
loopne
xchg
inc
sub
ljmp
cmp
and
mov
or
or
cmp
lcall
mov
cmp
dec
loope
lret
push
mov
cmp
outsb
pop
test
rorl
and
jb
hlt
call
and
push
enter
test
ret
lods
lret
pop
cmp
in
sub
in
movsl
cmp
adc
stos
ret
push
movsl
lret
lods
mov
mov
shrl
aad
fsubrs
xchg
mov
sti
cld
push
cmp
cmp
stc
and
insb
pushf
xchg
cmp
stos
cmpl
or
adc
test
pop
jecxz
add
lret
cmp
and
ljmp
lds
stos
adc
sbb
std
push
cmp
aas
mov
pop
ret
push
mov
movsb
mov
popf
pop
repnz
flds
sub
sbb
sbb
aaa
stos
dec
fcoml
mov
ljmp
sub
add
mov
es
adc
dec
jnp
aad
clc
jmp
in
dec
sub
jbe
mov
test
movsb
enter
cmp
sub
enter
inc
mov
mov
cmpsb
clc
imul
fstpt
test
loop
pop
sub
add
pop
ficomps
sub
icebp
inc
aam
cld
mov
outsb
cmp
jmp
push
in
fiaddl
test
inc
jmp
xor
xor
xchg
cli
pop
aad
sti
ficoml
xlat
jmp
adc
stos
cmp
pushf
dec
push
stos
push
test
xor
out
cmp
cmp
adc
aas
cmp
xor
adc
sub
jns
sub
or
jmp
ret
jge
and
dec
test
sub
cltd
adc
jmp
inc
mov
out
aad
insl
xchg
sbb
mov
inc
mov
in
mov
int3
sbb
mov
je
xor
xor
test
lret
push
stos
mov
in
std
mov
add
imul
dec
aaa
and
dec
mov
jmp
mov
std
dec
push
pusha
addr16
pushf
lret
adc
push
sti
movsb
sbb
mov
cmp
push
pop
test
sub
mov
leave
and
mov
pop
jg
sub
testb
dec
cltd
int3
idivb
mov
jmp
repz
cmpsl
jnp
movsl
in
and
fsubr
mov
pop
add
sahf
cmp
test
mov
jmp
std
rorb
outsl
inc
out
mov
xor
ss
adc
mov
cld
dec
sub
xchg
gs
bound
sbb
in
mov
mov
jnp
ret
repz
mov
lods
cmp
dec
jl
aad
cmp
jle
clc
adc
sub
insb
cwtl
cs
push
push
sub
imul
out
adc
pop
jmp
sub
enter
into
mov
test
in
cmc
leave
mov
mov
sti
mov
push
and
in
mov
sub
ficoms
test
mov
sub
dec
int3
test
imul
pop
leave
lods
pop
lds
push
fwait
sub
cmp
lret
mov
cmp
inc
inc
testl
nop
mov
jno
cmp
test
sarb
into
lea
cli
pop
test
sbb
push
push
or
int3
inc
pop
sub
stos
jecxz
xchg
ljmp
mov
jo
pop
or
sub
dec
cwtl
inc
stos
and
mov
xor
loope
jmp
mov
arpl
xchg
sbb
sbb
jmp
xor
in
xor
adc
sarb
int
mov
jno
leave
imul
bound
jne
dec
les
push
cld
mov
push
sbb
pop
inc
mov
cwtl
adc
in
call
xor
and
addr16
roll
mov
adc
call
cld
popf
mov
fwait
cmp
sub
fistpl
sub
imul
cli
xor
pop
xor
ss
stc
push
push
pop
pop
cmp
mov
push
call
xor
dec
jmp
stos
fwait
pop
pop
push
lret
mov
lcall
jnp
test
cmp
cwtl
cmp
fdivr
mov
imul
mov
mov
sub
jns
addr16
push
cmp
or
mov
mov
and
jp
dec
sub
sub
lret
lock
je
mov
imul
dec
push
cmp
stc
fldcw
aas
sub
xchg
arpl
pushf
mov
and
pusha
mov
and
cmp
sbb
mov
mov
push
mov
cld
leave
mov
push
add
shrl
inc
imul
mov
mov
jg
or
stos
sub
sbb
ljmp
cmp
jmp
int3
pop
outsb
push
test
jmp
pop
movsl
lcall
mov
cmp
ljmp
sbb
pop
push
shl
mov
pop
pop
out
icebp
popf
int3
pop
in
and
xor
mov
mov
outsl
add
inc
js
insb
test
iret
outsl
shrl
roll
lret
and
xchg
mov
inc
imul
scas
jae
stos
push
imul
lea
repnz
in
or
rcll
test
and
ret
mov
shl
sbb
into
dec
sbb
movsl
into
lods
mov
stc
cmc
sbb
fwait
jnp
pop
pop
xor
sub
xor
sub
stc
insl
jmp
ljmp
dec
dec
popf
adc
and
pop
and
cltd
mov
ret
mov
and
fwait
jo
pop
push
mov
cli
fmuls
cmp
fistpll
sub
mov
push
cmp
cmp
enter
lret
ret
ror
and
xchg
int
pop
fdivr
and
lcall
push
test
cmpsb
xchg
adc
mov
sbb
push
imul
xchg
cmp
adc
mov
adc
xchg
mov
fstps
lock
test
call
aam
stos
fldt
sbb
and
lret
sub
sub
pushf
jne
stc
int
fnstcw
xor
pop
cltd
lret
loop
mov
pop
movsb
mov
cmp
adcl
dec
fidivl
jns
cmp
cmp
je
outsb
data16
fmul
test
and
sti
dec
pop
dec
pushf
inc
sbb
stos
jmp
sti
mov
lods
mov
xlat
repz
ljmp
inc
movsl
dec
cmp
inc
test
sub
cmp
test
mov
jmp
testl
imull
or
cs
add
aad
pop
lret
inc
sub
cmp
add
push
cli
test
ss
xor
test
imul
inc
stos
xor
sub
cld
ja
mov
jge
outsl
or
in
clc
cld
jmp
roll
push
pop
jp
mov
cld
int3
push
pop
scas
jne
or
push
inc
mov
mov
stc
mov
jae
or
ljmp
leave
and
sub
data16
fwait
dec
cmc
cmp
sbb
jl
sub
sub
mov
neg
mov
fisttpl
cld
cmp
sar
push
stc
movsl
loope
or
lahf
sbb
loop
sbb
wbinvd
jo
pop
push
fsubrs
insb
sti
fildl
xor
dec
inc
jl
jmp
int3
mov
adc
inc
jbe
adc
aas
cmp
sub
jnp
mov
cli
test
leave
stos
int3
enter
js
dec
mov
fcmovnu
test
in
adc
sub
inc
dec
lods
mov
bound
dec
imul
cmp
fcompl
dec
pop
jmp
push
leave
mov
xchg
test
jnp
and
mov
sti
inc
cltd
mov
sbb
jmp
xchg
sub
leave
pop
enter
pop
sub
fcmovnu
mov
mov
dec
lods
mov
push
aad
arpl
ss
inc
inc
jmp
pushf
fbstp
cmp
sbb
adc
push
scas
mov
xchg
insb
xchg
clc
xor
ss
fdivrl
mov
pop
xlat
in
stos
leave
pop
push
test
lret
mov
fcom
xchg
inc
insl
xchg
mov
and
mov
sub
or
lcall
dec
adc
pusha
rcrb
sub
cmp
cwtl
and
inc
lcall
sbb
leave
mov
popf
daa
loop
pushf
clc
cmp
fldt
lock
cmp
cmp
push
out
xor
inc
scas
pop
sbb
and
sti
int3
fdiv
fwait
mov
test
pop
movsl
cmp
arpl
stos
shr
into
ss
jecxz
fldcw
stc
cli
cmp
clc
mov
iret
mov
pop
dec
pop
cmp
mov
push
and
lret
mov
xlat
daa
xchg
sbb
int3
add
mov
stos
cli
mov
mov
les
mov
pop
mov
fnstenv
sbb
cmp
aam
scas
outsl
into
aad
cld
cmp
test
or
xchg
sub
outsb
mov
movsl
enter
jmp
adc
ficompl
cmp
in
push
cli
aas
ja
inc
dec
adc
ljmp
mov
add
mov
sbb
in
loope
aad
pushf
pop
dec
xor
cmp
mov
daa
sbb
in
outsl
ja
nop
push
mov
inc
shrl
mov
sub
sbb
mov
xchg
ret
jle
mov
dec
mov
ret
xor
sbb
jmp
movsl
mov
dec
cli
mov
ljmp
cmp
outsb
dec
lds
stos
into
dec
btsl
pop
mov
pop
xor
std
lret
or
in
mov
dec
mov
movsl
dec
mov
push
xor
fistpll
repz
leave
cwtl
je
xchg
movsl
push
or
fwait
xchg
and
dec
mov
jnp
test
inc
mov
sub
std
or
int3
scas
hlt
push
mov
mov
sti
pop
iret
adc
add
mov
push
cmp
mov
sbb
mov
dec
cmp
fldcw
adc
mov
stos
push
adc
fcompl
cmp
scas
enter
xor
stc
enter
scas
jp
insl
sbb
inc
pop
js
cmp
dec
cmp
or
icebp
pop
enter
dec
das
arpl
test
lret
mov
push
call
mov
and
das
push
pop
cli
js
cwtl
imul
test
cmp
sub
mov
xchg
pop
into
mov
inc
filds
add
adc
ret
cld
jne
pushf
arpl
pop
jmp
std
lds
aas
in
mov
negl
ret
dec
stc
out
sti
xlat
lret
cmp
mov
dec
dec
push
lods
sbb
ljmp
cmp
pop
ljmp
pop
pop
pushf
andb
xor
out
lret
mov
lock
mov
sti
xchg
push
pop
and
ja
aad
cmp
mov
xchg
push
enter
mov
je
dec
test
orb
cli
aad
ljmp
xlat
mov
xor
sbb
xor
out
in
cmp
int3
call
pop
or
xor
cmp
rclb
dec
call
push
fdivs
cmp
jo
rcll
pushf
sub
cs
movsl
fmuls
dec
cli
cmp
daa
dec
addb
data16
add
sub
cmc
pop
xchg
test
cltd
sti
ret
sub
test
mov
movsl
dec
mov
cld
popf
push
or
pop
pushf
call
movsl
sub
mov
cmpb
loope
negb
pop
clc
leave
xchg
or
dec
clc
pop
mov
sti
scas
and
push
adc
jns
stos
mov
lods
imul
lods
stos
imul
adc
aas
push
sub
test
in
mov
adc
sub
xlat
dec
cltd
mov
cs
lret
push
movsb
fidivrs
sbb
inc
jo
sbb
xor
inc
sbb
or
jmp
sub
mov
cmp
daa
lea
mov
fldcw
push
mov
mov
mov
sbb
stos
test
or
xorb
or
movsb
inc
push
pop
popf
jecxz
ljmp
stos
cmp
pop
lret
pusha
jg
je
dec
adcb
sub
fadds
sbb
jns
cmp
test
mov
out
das
mov
lods
outsb
enter
push
fstp
shr
out
sub
or
pop
cs
pusha
stos
test
sbb
sti
pop
cld
cmp
jl
add
mov
enter
aad
loope
xchg
pop
cmpsb
popf
scas
sbb
movsb
xchg
sbb
mov
cmp
pop
cmp
pushf
dec
test
mov
jp
dec
aad
imul
loopne
mov
imul
mov
mov
call
pop
fcomps
sbb
mov
lods
inc
enter
fwait
jo
outsl
sub
add
popf
jmp
cwtl
lret
or
mov
idiv
push
jne
test
dec
dec
pop
repnz
imul
leave
loopne,pn
mov
sbb
push
mov
jbe
test
aaa
adc
popf
dec
into
mov
sub
mov
nop
mov
in
and
stos
imul
cmp
xchg
push
popf
jb
jns
iret
inc
mov
clc
lret
push
sub
pushf
dec
scas
xorb
inc
stos
in
dec
jmp
aad
cmp
shrl
imul
in
sub
testb
push
inc
push
fldenv
or
cld
movsl
cmp
mov
aas
mov
loop
scas
inc
movsl
pop
mov
jns
inc
repnz
rclb
fstps
movsb
pop
test
pop
addb
inc
insl
xchg
mov
pushf
cld
daa
xchg
add
sub
fadd
lock
cmp
add
enter
pop
mov
sub
cmp
cwtl
mov
sub
cmc
test
mov
bound
call
clc
je
pop
ljmp
lret
jb
sub
sub
mov
or
mov
mov
cld
std
xchg
fsub
ljmp
cltd
dec
push
out
xor
jmp
jno
stc
inc
lret
outsb
sti
lods
xor
cmp
pop
sar
jbe
mov
ljmp
aas
fisubrl
lods
test
pop
fadd
pop
jae
sbb
inc
mov
cmp
cmp
repz
and
mov
stos
pop
lea
mov
aas
dec
outsb
rcr
bnd
es
fstl
inc
stos
out
test
fwait
sbb
stos
lret
cmp
xchg
cmpsl
idivb
sbbb
push
dec
test
cmp
or
or
cmp
repz
and
jnp
sub
dec
test
mov
xchg
or
mov
mov
xor
or
sbb
jbe
test
sbb
mov
cmpb
adc
or
mov
hlt
cmp
mov
outsb
mov
cmp
cmp
fwait
mov
sub
mov
cwtl
sub
fcoms
sbb
jmp
and
cmp
movsl
cmp
sub
ret
or
outsb
fsts
and
popa
imul
xchg
add
sub
stos
sbb
sub
mov
or
sbb
enter
pop
cld
fsts
cmp
das
or
dec
and
mov
mov
in
pop
popf
mov
xchg
das
sub
lret
repz
xchg
test
sub
mov
fldt
stc
cwtl
mov
dec
sti
test
push
cmp
out
add
movsb
leave
jnp
adc
xor
pop
aad
mov
in
cs
test
mov
fs
sbb
dec
cld
inc
test
negb
mov
adc
ljmp
dec
and
mov
outsb
xor
stos
ljmp
pop
fisubrl
jb
fcmovne
clc
loope
ret
xor
imul
sub
mov
lods
imul
lcall
cwtl
mov
xchg
clc
shll
and
test
fwait
jmp
cmp
cmp
and
mov
inc
mov
cmp
jmp
cmp
xor
sub
pop
xchg
mov
mov
jo
push
int
mov
fldcw
jmp
outsb
fdiv
lods
mov
mov
shrl
mov
or
cld
int3
cld
cmp
jmp
jne
sti
fldcw
dec
testl
pop
ret
in
cmp
fld
sti
dec
aaa
sbb
adc
test
int
stc
mov
dec
data16
jns
push
call
jne
push
push
cli
mov
insb
test
fmul
add
in
int3
sbb
jo
dec
mov
cs
in
mov
sub
cmp
fsubrl
mov
and
lods
nop
mov
dec
sub
imul
sti
test
and
or
ja
sbb
lock
sub
cs
stos
enter
leave
inc
pop
fsub
les
sub
sub
jne
pop
cmp
pop
test
dec
pop
outsb
or
mov
dec
mov
stos
xor
or
mov
sub
stc
and
pop
sarl
ror
pop
sahf
or
sub
frndint
inc
cmp
cmp
or
int
sbb
jb
dec
mov
mov
sub
popf
and
sub
pusha
mov
xor
push
clc
dec
in
xor
scas
jbe
ficoml
stos
pop
lock
outsb
cs
shll
cwtl
xor
sbb
ljmp
int3
mov
cmp
test
sbb
shrb
add
int3
cwtl
sbb
sub
lret
lret
mov
and
sub
cmpsb
cwtl
sub
cmp
fsubs
inc
ljmp
scas
push
pop
cmp
je
arpl
mov
cli
outsb
call
mov
sub
scas
nop
push
inc
lret
es
repz
into
cmp
sub
jb
pusha
out
and
cwtl
sbb
inc
cs
sbb
icebp
in
inc
rcl
mov
mov
int3
mov
lds
inc
fsubrs
or
fwait
call
mov
xchg
cmp
xlat
pop
mov
pop
sub
out
leave
sub
xor
mov
sbb
mov
cmpsl
nop
popf
cmp
pop
add
dec
mov
add
sub
cld
jns
into
ja
dec
cs
sub
jle
decl
sub
out
jg
xor
lcall
into
dec
xorl
inc
xchg
pop
outsb
xor
fmull
dec
and
lcall
mov
int3
daa
xchg
loopne
pop
aaa
dec
fmul
je
adc
sub
cmpsl
sti
enter
sbb
jnp
pop
inc
cmp
sub
mov
lret
or
jmp
cmp
fisubrl
imul
mov
cmp
mov
repnz
punpcklbw
jg
lret
jmp
dec
jp
push
jl
aad
jnp
lcall
icebp
gs
mov
ds
cmp
sub
fcomps
cltd
pushf
leave
xor
pop
dec
sub
lcall
sub
int3
sub
test
jmp
push
inc
push
insl
sbb
stos
or
in
sbb
inc
popf
jg
std
push
cld
mov
lret
jnp
jns
fs
mov
xor
hlt
dec
and
jge
or
jb
push
cmp
lret
or
stc
mov
rcl
fsts
leave
cmp
push
andl
ljmp
loop
call
mov
shr
adc
enter
enter
cmp
jle
inc
cmp
ret
adc
int3
dec
add
cltd
xchg
js
inc
sahf
mov
sub
call
xchg
jle
inc
jl
cmp
push
cld
arpl
cmp
cwtl
stos
pop
dec
sbb
stos
out
mov
xor
fs
out
pushf
stos
fistps
mov
lock
es
fisttps
xor
mov
stos
sub
out
imul
mov
add
dec
into
pop
mov
cmp
mov
outsb
inc
pop
scas
stos
xlat
cli
out
mov
cmp
push
inc
pop
iret
loopne
fucomi
imul
popf
aas
or
cmp
in
scas
sub
ds
pop
repnz
or
aas
repnz
hlt
in
mov
pop
int3
fimull
inc
enter
in
push
jle
mov
jg
pop
sahf
dec
outsb
mov
inc
stos
lret
sahf
dec
fdivrs
mov
mov
inc
jecxz
push
mov
je
outsb
pushf
scas
scas
lret
jmp
xchg
cmp
dec
sahf
fwait
ja
cmp
xor
cmp
cltd
sbb
or
aam
imull
lret
mov
jns
enter
lret
mov
out
jae
or
push
iret
leave
outsb
mov
push
outsl
cmp
iret
mov
sub
mov
mov
outsb
loope
jge
cmpb
sub
pop
mov
outsb
dec
js
mov
inc
lock
mov
and
jns
movsl
aam
lock
sub
sbb
mov
in
movsl
repnz
mov
sarb
cmp
in
les
int
or
push
dec
test
imul
dec
mov
imul
ljmp
movsb
jnp
iret
mov
loop
outsb
pop
sahf
das
lods
pop
orb
inc
jae
outsb
add
aam
mov
outsb
out
inc
ljmp
aam
insl
push
imul
inc
outsb
repz
cmp
and
cmpsl
cmp
push
mov
jmp
mov
jmp
ret
adc
jmp
or
or
pop
outsb
dec
lahf
mov
out
jmp
dec
jge
pop
iret
ja
pushf
clc
inc
pop
loope
dec
mov
sub
lret
lcall
or
mov
mov
or
scas
jb
ja
cmp
mov
dec
sub
rorl
add
lahf
mov
in
jns
in
mov
add
sub
in
faddl
adc
dec
stos
mov
and
fmull
lret
loopne
xor
in
dec
fdivrl
xor
clc
inc
je
mov
arpl
test
pop
mov
sub
mov
iret
loop
dec
mov
add
sbb
push
imul
cmp
mov
pop
in
bndldx
ss
stos
jbe
ss
jnp
xchg
push
and
fsubr
enter
mov
mov
add
xchg
mov
movsl
dec
cltd
lods
adc
add
mov
xor
enter
pop
jmp
in
mov
push
mov
cmp
cli
fdivr
loopne
dec
mov
sti
in
int3
mov
notb
ljmp
das
repnz
int3
cld
jne
test
mov
movsl
mov
mov
or
nop
cmp
cmp
ljmp
dec
pop
inc
jmp
push
imul
testb
loope
cmp
jecxz
jmp
insb
fadds
push
mov
outsb
lret
cld
repnz
jmp
orl
xor
or
inc
mov
sub
pushf
popf
push
fmull
fisttpl
stos
add
sub
leave
aas
dec
lret
cld
sub
clc
jge
pop
pop
dec
cmp
int3
add
adc
cmp
or
outsb
or
in
imul
mov
sbb
loope
and
popf
dec
pop
pop
cltd
in
jg
loopne
jno
gs
cli
pop
fcmovu
test
dec
mov
loop
add
stos
cmp
fimull
mov
enter
push
cmp
sbb
jmp
repnz
and
popf
outsl
das
push
lahf
mov
adc
pmulhw
cmp
mov
jle
lcall
pop
test
mov
movsb
dec
out
stos
ljmp
iret
cmp
jo
mov
mov
outsb
jp
int3
mov
sahf
or
fadds
push
fdivr
mov
lret
scas
lahf
test
inc
loop
dec
jnp
aaa
loop
pop
add
rcr
sub
or
loope
pop
lods
or
sbb
stos
mov
into
movsl
pop
in
divb
cmp
add
mov
jmp
outsb
decl
inc
or
stos
aad
arpl
outsb
mov
daa
mov
popf
push
xlat
mov
cmp
mov
mov
imul
ret
sub
mov
outsb
push
out
pop
arpl
mov
insb
xlat
sub
lock
ja
jle
sub
lret
pop
xchg
fwait
cmp
dec
jbe
jns
jne
cmp
test
and
cmp
lcall
pushf
pop
lods
stc
adc
sahf
push
xlat
int
sub
inc
sub
mov
adc
call
mov
cmp
lds
sub
mov
sub
in
ficompl
mov
dec
addl
or
stc
sarl
test
sub
mov
or
and
mov
dec
sti
sbb
imul
fs
mov
int3
dec
push
loope
lods
imul
dec
fcomp
cmp
cli
mov
lret
sub
push
and
ficoml
push
jb
aad
jmp
pop
xchg
sarb
int3
inc
in
call
mov
scas
add
test
test
iret
sub
jmp
ret
test
scas
pop
inc
mov
stos
cmp
test
sub
mov
cltd
stc
sub
cltd
sti
mov
add
and
test
imul
add
mov
dec
sub
push
xchg
aam
enter
mov
mov
jns
test
call
pop
call
lods
cs
pop
cmp
stc
imul
imul
inc
repnz
jecxz
imul
ret
xlat
test
mov
imul
ljmp
jl
or
mov
cmp
mull
jmp
movsl
lods
call
lret
xlat
out
pop
stos
fwait
stc
and
mov
sti
sub
jne
stos
sbb
push
sub
push
stos
cmp
xlat
add
jb
xchg
add
or
cmc
clc
test
mov
xor
lcall
cmpsl
jnp
lds
test
stos
sub
mov
cs
dec
sub
adc
lods
pop
jo
fs
jmp
test
pushf
cmp
add
jecxz
mov
cmp
adc
dec
in
fucomi
test
test
cmp
sub
imul
dec
cmp
je
jmp
inc
jmp
in
and
fcomp
movsl
dec
jnp
gs
cmp
outsb
loop
cmp
jle
fiaddl
stos
fstps
fisubl
test
mov
fcompl
push
in
mov
add
clc
dec
cmp
mov
imul
mov
sti
pop
or
jae
das
sub
lret
fimull
cwtl
pop
inc
in
imul
add
pop
xlat
jmp
sbb
jnp
cld
dec
fimull
fstpl
iret
jbe
and
enter
cwtl
mov
stc
out
rcrl
lods
call
fwait
push
testb
pop
leave
outsb
mov
lcall
imul
clc
popl
inc
scas
mov
int
sub
mov
movsb
cwtl
fstps
dec
clc
push
inc
pop
stos
mov
dec
adc
mov
sub
lods
jnp
pop
testl
stos
stos
cmp
jmp
dec
je
xchg
xor
dec
sub
add
scas
test
cmp
mov
pop
sbb
cmp
jg
xor
mov
leave
sub
adc
inc
stos
jb
cmp
test
sti
fcmovnbe
jle
pop
outsb
aas
icebp
jmp
in
stos
pop
popa
jns
push
cmp
mov
and
mov
dec
pop
push
inc
sahf
aaa
jns
add
popf
sbb
pop
ret
mov
xlat
or
dec
outsb
lret
jb
mov
and
push
stos
outsb
xchg
lods
cmp
loopne
imul
dec
mov
dec
ret
cmc
insl
das
ja
inc
mov
scas
stc
rcr
cld
adc
leave
lds
pop
xor
cmp
jmp
mov
jae
pop
mov
int
fmull
sub
stc
insb
mov
es
or
stos
and
or
inc
fdivrl
or
push
dec
xchg
xor
stos
or
lret
mov
dec
mov
cltd
push
sbbb
movsl
pop
cmp
or
stc
loopne
test
and
cwtl
sub
jbe
call
and
shll
rorb
mov
lret
sbb
scas
push
dec
mov
ljmp
cmp
pop
pop
push
addb
xor
sbb
outsb
jg
sub
dec
fs
or
daa
test
cmp
cmp
cmpl
dec
push
imul
fisubl
add
cmp
mov
or
mov
ror
lods
mov
int3
mov
cmp
lods
arpl
lock
iret
and
mov
cli
dec
and
imul
mov
jns
mov
dec
call
mov
insb
outsb
sub
ret
cli
xor
shl
imul
and
mov
dec
dec
js
mov
mov
roll
cmp
sub
pop
push
popa
lods
sub
stos
imul
adc
scas
pushf
sbb
ljmp
cmp
outsb
lds
or
es
dec
cmp
das
sbb
jg
jb
fsubr
push
imul
inc
sbb
clc
leave
sub
stos
aam
sub
sub
mov
repnz
fistpl
mov
sub
mov
or
cmp
cmp
xor
repz
cmp
pushf
movsb
sub
dec
cwtl
jbe
cmp
cmp
jge
fwait
cmp
daa
dec
stc
and
adc
loope
shlb
and
sub
lret
iret
loop
xor
pop
mov
jnp
xor
leave
jns
pushf
sub
std
pusha
std
add
jo
adc
add
fsubrs
jns
stos
jbe
scas
rorb
dec
imul
jns
xor
adc
stc
mov
stos
sub
int3
lcall
mov
jne
clc
push
adc
ljmp
fsubrl
xchg
jnp
sub
jbe
imul
cwtl
scas
fwait
int
pop
xchg
clc
mov
pop
cmp
sub
or
test
cmp
add
cltd
jns
pushf
leave
inc
int
cltd
fcmovu
sub
mov
test
sarl
fmul
cld
stos
lds
mov
cmp
push
scas
jns
leave
mov
sbb
mov
lods
neg
mull
pop
cmp
sahf
popf
inc
mov
inc
fsubrs
sbb
imul
jnp
and
dec
ss
push
data16
add
lods
loope
jns
int
mov
sub
gs
and
xlat
cmp
mov
sub
push
xor
sub
sub
sbb
mov
imul
scas
xlat
cs
popa
xlat
stc
pop
adc
enter
in
lret
pop
cltd
jbe
mov
xlat
popf
xchg
pop
sbb
cld
push
lret
mov
or
cmp
imul
fdivr
sti
adc
sub
stos
insb
test
mov
imul
or
aas
int3
cmp
add
das
lret
pop
scas
clc
ss
imul
fdivrl
pop
jno
mov
or
int3
jns
mov
fstps
sub
negl
out
test
jl
call
inc
dec
lret
pop
nop
leave
mov
stos
sub
jmp
leave
mov
xor
mov
movsb
sub
push
mov
imul
jo
dec
jmp
adc
cmpsl
jnp
out
sbb
add
cmpsb
or
idivb
mov
cwtl
movsb
dec
ss
dec
scas
dec
cmp
fcmovnb
lret
sub
and
push
repz
ret
dec
lcall
ljmp
inc
cmp
daa
iret
mov
push
add
pusha
inc
shl
sbb
mov
inc
clc
lods
sub
dec
sub
mov
dec
icebp
cmp
mov
std
sbbb
aam
lods
sbb
jno
mov
adc
jmp
lret
xor
neg
mov
in
cld
ljmp
imul
cld
sbb
daa
fisubrl
dec
fcomps
stc
hlt
cmp
cmp
dec
sbb
leave
inc
ficoms
pop
cmp
mov
sub
push
add
stos
fdivl
imul
movsl
mov
insl
lods
jne
mov
mov
cmp
leave
fldl2e
jg,pn
cmp
stos
mov
ret
test
jne
stos
test
out
cltd
icebp
or
cwtl
sti
test
push
clc
cmp
mov
or
dec
cmp
jns
add
rcrl
cmp
lret
iret
cli
lret
dec
mov
lds
dec
pop
fsts
push
mov
xchg
das
scas
xchg
test
cmp
add
rclb
in
std
or
dec
leave
sti
inc
inc
cmp
inc
sub
clc
mov
fdivl
add
pop
test
test
jmp
hlt
pop
push
fcmovnbe
lods
es
xchg
sub
jnp
sbbl
aas
sub
mov
out
cwtl
mov
in
fwait
rol
cmp
inc
inc
scas
scas
scas
adc
sar
mov
pop
pop
stos
ss
mov
aad
icebp
cwtl
in
cmp
jae
jle
sub
int3
sub
fsts
cmp
dec
fwait
inc
inc
mov
cmp
ret
sub
cwtl
lods
pop
inc
addr16
sub
shl
shr
and
or
mov
imul
clc
jp
hlt
cmp
cld
fistpl
lods
sub
push
lret
push
push
sbb
pop
fcomps
mov
test
cli
or
popf
in
or
lods
dec
cmp
incl
sti
push
dec
mov
loope
sub
cwtl
and
mov
cmpsl
clc
sub
jns
and
sahf
xchg
mov
loop
stos
cltd
test
sub
lret
in
cwtl
sti
dec
out
leave
pop
fsubl
xchg
in
int3
pop
sub
fistpll
mov
push
pop
gs
or
push
or
mov
mov
out
inc
or
stos
push
outsb
add
fisubrs
mov
sarl
fistpl
inc
enter
sub
test
sub
std
cmp
cltd
pop
sbb
mov
cmp
loopne
xchg
sbb
jle
fdivrl
mov
bound
test
enter
mov
ds
enter
shrl
cli
dec
leave
shll
loop
xchg
mov
and
lock
dec
inc
lret
inc
sar
lcall
jl
call
pop
mov
sub
and
cmp
outsb
sbb
mov
movsl
jns
mov
mov
cmp
das
sub
push
std
addr16
jecxz
pusha
push
xchg
mov
aad
jmp
mov
lret
cld
mov
cwtl
inc
subl
fsincos
lret
lea
or
into
pop
xor
push
pusha
in
sub
outsl
cltd
clc
test
lods
scas
mov
dec
sub
arpl
cli
cld
push
mov
loop
int
mov
aam
and
or
ljmp
stos
stos
fs
mov
cmp
scas
imull
jno
popa
pop
scas
xor
xor
aad
in
or
pushf
xchg
imul
test
cmp
sbb
adc
imul
or
stc
in
pop
jbe
data16
add
xor
fldlg2
jg
std
lret
add
mov
cld
test
out
icebp
push
cltd
mov
bound
lods
fiadds
dec
add
dec
imul
add
mov
mov
test
stos
test
imul
cmc
call
mov
sti
repz
jnp
and
sub
testb
scas
push
mov
lcall
cltd
push
xchg
movsl
dec
in
sbb
jne
cld
int3
pusha
ja
mov
inc
int
fstps
jne
mov
test
mov
or
inc
jmp
or
mov
or
cmp
inc
cmp
fadds
sub
dec
cltd
pusha
in
enter
jp
pop
add
lcall
dec
push
data16
mov
pop
dec
mov
mov
sub
scas
pushf
adc
pop
cld
sub
xchg
jecxz
dec
jnp
cmp
fdivr
in
pop
mov
cli
cwtl
mov
mov
mov
loopne
jb
and
jl
fisubrl
and
sub
clc
or
cmp
push
test
inc
popf
std
enter
out
sub
pop
lahf
shll
jmp
jge
push
gs
sub
jmp
lret
mov
insb
scas
xchg
jbe
stos
fstps
xor
cmp
add
int3
sub
pop
call
cltd
lock
les
lods
out
or
jns
sub
cmp
imul
fsts
insl
out
roll
xchg
popa
jno
adc
sbb
out
out
outsb
mov
mov
shrb
sub
call
xor
adc
lcall
dec
das
sbb
mov
cwtl
stos
cmp
add
int
xchg
jnp
fistpl
test
lret
call
adc
xor
clc
sahf
test
pop
push
sti
push
stos
jnp
push
xlat
rcrb
clc
xchg
jne
fucomi
imul
sbb
push
xchg
leave
mov
arpl
push
ret
cmp
in
dec
or
lods
dec
fsubs
fmull
mov
xchg
jns
movsb
jle
in
jne
cmp
mov
in
sbb
mov
mov
aas
test
mov
pop
ljmp
fwait
jbe
jns
imul
jb
insb
or
scas
push
sti
mov
test
mov
lret
scas
add
or
in
stos
mov
push
shrb
sbb
mov
fwait
add
lret
leave
jno
ret
rcrl
pop
add
jne
add
sub
pushf
pusha
cld
xlat
nop
xchg
pop
mov
je
in
lods
or
cmp
pusha
mov
pop
imul
bound
pop
adc
sbb
les
ljmp
call
cld
dec
test
push
test
xor
pop
cwtl
and
jmp
lods
stos
mov
sbb
xor
cld
insb
mov
cmp
inc
ljmp
pop
jne
test
mov
and
sub
mov
inc
test
icebp
fildl
and
or
dec
push
sti
jmp
div
enterw
das
sub
mov
fsubrl
push
in
cld
call
sbb
insb
or
lret
jns
imulb
xchg
ret
mov
mov
in
add
dec
scas
popf
xchg
fsubrs
and
lret
jbe
rcl
dec
mov
dec
ljmp
aad
fs
mov
cli
cltd
leave
cld
test
popf
inc
jmp
xor
jnp
pop
jae
pop
mov
fnstcw
cmp
or
test
movsl
push
jns
leave
push
pushf
lret
mov
inc
sti
scas
or
or
add
data16
add
test
jmp
fimuls
inc
jb
xchg
jnp
in
fs
sbb
cwtl
push
dec
fwait
stc
sbb
mov
jmp
sbb
add
xchg
jmp
lods
add
and
das
int3
mov
clc
sub
and
push
or
mov
pop
imul
push
add
sbb
cmp
cmp
in
loop
sub
stc
pop
pop
out
or
cmc
or
xchg
int3
fwait
popf
test
dec
cmp
cmp
fsubrp
mov
sub
mov
lret
insb
pop
int3
and
mov
pushf
pop
mov
ljmp
sti
scas
enter
fcmovu
sarb
fsts
push
out
dec
and
pop
mov
sub
push
push
cmp
fcomp
push
inc
jmp
push
idiv
stc
and
add
mov
mov
adc
or
lcall
je
or
xor
mov
das
imul
or
negl
inc
jmp
pop
or
lret
push
pop
fisubrs
add
in
pusha
imul
xchg
mov
push
inc
jg
inc
jmp
cmp
nop
sub
arpl
rcrl
xor
pop
fwait
ss
dec
and
cmp
cltd
mov
repz
fstpt
std
cmp
je
fsincos
xor
or
mov
xlat
fdivrs
jbe
inc
xor
lods
cmp
xchg
ja
add
test
dec
push
cmp
fcompl
xlat
fisubrl
mov
mov
das
add
mov
cld
mov
stc
pop
sti
int3
faddl
sub
fisubrl
push
or
mov
add
les
fsub
fnstenv
push
jmp
stos
cmp
ljmp
sbb
pop
lret
fcmovbe
arpl
cld
pushf
dec
fildll
or
ljmp
clc
call
int
mov
sbb
test
imul
and
sub
inc
imul
push
inc
psllw
lods
or
aas
lret
cmp
pop
cld
fsubrs
dec
dec
in
dec
imul
mov
stos
pop
lcall
or
push
jmp
fwait
mov
scas
test
cmp
dec
ljmp
imul
mov
cmp
daa
or
and
scas
loope
ds
mov
mov
or
fyl2xp1
ret
jo
cwtl
mov
stos
cmp
lret
or
in
sub
std
sbb
fcmovne
test
inc
imul
mov
scas
fstpt
test
mov
aaa
jnp
shlb
jb
scas
mov
mov
xchg
mov
aam
outsb
outsb
push
out
insb
push
stos
mov
cwtl
fwait
add
mov
enter
test
sbbb
inc
scas
cs
xchg
lods
call
sub
dec
cmp
and
mov
cld
sub
imul
imul
loopne
fdiv
test
idivl
mov
cwtl
pop
pop
sti
sub
lcall
cmc
shll
pop
syscall
mov
jbe
inc
cmp
dec
dec
and
cli
je
and
aas
and
dec
ficoml
xor
cmp
test
sub
xchg
fwait
sti
push
pop
mov
adc
push
int3
or
cwtl
movsl
adc
mov
pop
imul
lods
movsl
js
jns
jns
mov
push
pop
add
and
or
cli
push
stos
stc
xchg
xchg
fwait
sub
testl
ret
mov
mov
and
and
mov
dec
ss
xor
insb
xlat
cmc
leave
mov
dec
cmp
in
pop
pop
popf
roll
and
pop
aam
fwait
pushf
into
das
xchg
mov
pop
pusha
call
or
dec
movsl
movsb
cmp
cmp
pop
and
cwtl
test
inc
call
jns
ss
push
mov
dec
jmp
xlat
fcompl
rclb
pop
lods
insl
andb
lcall
clc
inc
iret
cli
stos
adc
in
or
mov
lcall
jns
inc
cltd
or
mov
pusha
arpl
and
xlat
repz
in
mov
cmpsb
imul
xchg
ficomps
data16
mov
lods
mov
daa
pop
call
sub
jae
into
mov
push
es
and
jbe
ret
mov
dec
pop
stos
outsb
ss
cmp
jmp
adc
push
mov
mov
xchg
lret
mov
mov
sbb
mov
jnp
jl
loop
jecxz
shlb
int
mov
fbstp
inc
lcall
sbb
fdivs
test
sub
lds
xlat
inc
imul
test
sub
pop
and
mov
stc
lods
cld
mov
dec
sbb
xor
ret
mov
cmp
test
lret
jae
stos
mov
movsl
add
outsb
mov
stos
leave
xlat
sbb
fcmovnbe
push
cmp
test
lods
lcall
xor
lods
jmp
in
mov
cs
pop
lret
push
cmc
pop
fdivrs
pop
mov
int3
inc
imul
adc
cmp
imul
adc
popf
dec
or
clc
xor
test
and
xor
lock
scas
dec
jns
mov
inc
jmp
mov
dec
mov
cmp
xchg
in
les
mov
and
mov
pop
test
pop
dec
push
mov
in
pushf
frstor
adc
cmp
cmp
mov
aaa
out
lock
add
add
inc
leave
int3
cmp
pop
rcrl
inc
and
inc
cmp
pushf
jmp
cmp
fdivs
push
insl
cmc
int3
lret
and
mov
imul
les
pop
icebp
inc
push
inc
inc
sub
mov
cmp
mov
cmp
push
lret
dec
sbb
movsl
lods
sti
fwait
jmp
jp
jnp
outsb
fsubs
xlat
cmp
scas
sub
out
ja
rorl
data16
bound
and
sub
cld
mov
or
outsb
aaa
ret
lods
jp
cmc
flds
cmp
icebp
pop
mov
js
imul
enter
xchg
or
cs
dec
cwtl
fbstp
test
mov
jle
pop
mov
dec
lret
push
stos
jb
cmp
outsb
push
or
jne
mov
jns
les
outsb
jl
ja
lds
movsl
enter
pusha
fwait
stos
leave
sbb
lret
xchg
add
add
enter
loopne
leave
fimull
inc
cli
idivb
jnp
mov
hlt
iret
inc
xchg
sbb
inc
mov
clc
testb
push
sub
jmp
cmp
pop
xor
lock
and
fstpt
shrl
inc
sub
pushf
cld
test
outsl
dec
pop
fistpll
imul
into
test
mov
jo
dec
pushf
pop
sub
pop
kaddb
cwtl
jns
jg
xchg
gs
sub
out
mov
dec
outsb
push
push
fistpll
jns
daa
and
or
mov
outsl
cmp
imul
xor
fildll
int3
sahf
mov
test
cmp
ljmp
xor
je
cmp
sub
pop
loopne
js
clc
cwtl
fstps
test
cmovp
je
ds
sub
push
loop
lods
jmp
sbb
pop
mov
imul
jmp
or
jbe
adc
sbb
jp
cmpsb
popf
jno
cli
ficoml
sbb
inc
cmp
popa
inc
jge
loopne
fstps
hlt
scas
ss
std
pop
add
fdivrl
mov
push
stc
mov
sub
cltd
lds
clc
test
mov
nop
push
jmp
pop
imul
out
sahf
stos
or
mov
mov
dec
ljmp
jecxz
jns
sub
shll
xchg
idivb
sbb
push
sbb
sti
pop
add
inc
fwait
lds
inc
fimuls
jg
inc
dec
clc
sub
ss
stos
aaa
out
jns
nop
test
push
movsl
fdivs
call
inc
xor
imul
mov
outsb
cmp
lret
sbb
pop
ss
push
dec
outsb
sbb
nop
test
pop
jnp
lock
dec
outsb
imul
enter
jg
out
jmp
push
inc
sbb
outsb
pop
fxch
push
pop
xchg
mov
mov
jnp
fistpll
vmwrite
dec
mov
fimuls
stos
push
test
jbe
in
push
xchg
jg
addr16
cmp
mov
push
push
mov
xchg
mov
stos
mov
lret
arpl
dec
imul
fdivrl
dec
aam
mov
test
adc
int3
add
mov
mov
sub
mov
ss
jle,pn
jne
fwait
dec
int3
xchg
pop
mov
jno
push
mov
clc
or
dec
je
jbe
lret
out
call
jo
xchg
test
pop
aas
mov
call
arpl
into
stos
clc
pop
cmp
ret
and
and
test
sarb
lcall
jp
mov
jns
clc
dec
ficoms
xor
cltd
mov
sti
pop
cltd
ja
mov
pop
xchg
sbb
mov
add
sbb
jno
inc
stos
outsb
mov
cs
and
cwtl
fimull
jle
int3
jbe
fisttpll
jae
dec
outsb
jbe
push
das
adc
mov
out
sti
cld
ficompl
hlt
cs
outsb
mov
dec
mov
outsb
mov
das
jns
jne
out
dec
dec
daa
jnp
outsb
jbe
out
dec
das
stos
outsb
mov
dec
mov
xor
inc
sub
xor
int3
cwtl
pushf
dec
adc
push
stos
mov
test
stos
pop
fidivrs
stc
fcmovne
mov
inc
mov
insb
shrl
sub
and
daa
outsb
lods
inc
and
cld
add
jbe
adc
loopne
cltd
insb
fcomps
testl
fimuls
in
test
stc
leave
fcmove
outsb
or
das
subb
in
call
mov
call
test
sub
call
lret
push
ja
mov
mov
mov
cmp
pop
frstpm(287
test
mov
mov
in
ljmp
mov
sarl
je
aad
insb
pushf
sub
aad
jl
cmp
add
pop
fcompl
repnz
pop
or
push
mov
mov
or
orl
insb
pop
popa
xchg
mov
or
jle
aam
pop
in
call
subb
insl
mov
aad
ljmp
mov
enter
cmp
mov
mov
es
jne
and
dec
stos
leave
imul
fwait
lcall
push
sub
dec
enter
sbb
clc
add
jmp
lcall
data16
inc
stos
sahf
stc
jbe
push
cli
mov
cmp
jnp
stos
fnstsw
nop
mov
out
test
mov
cltd
push
rcrl
test
js
jmp
dec
lcall
sbb
jmp
lahf
mov
cmp
ficompl
stos
leave
test
adc
pushf
mov
mull
ljmp
testb
sub
sub
scas
jbe
dec
jle
mov
mov
lods
cmp
testl
movsb
mov
mov
ss
push
mov
stos
shll
outsb
jnp
fsubrs
sbb
pusha
movsl
cmp
pop
pushf
sti
inc
inc
mov
lods
mov
dec
and
enter
popf
and
stos
cmp
sub
imul
in
test
sub
mov
sbb
mov
xor
popf
and
leave
inc
mov
cld
mov
syscall
xchg
sub
mov
push
push
pushf
scas
cmp
cltd
xchg
xchg
pop
and
into
call
notl
stc
pmaddwd
mov
and
int3
mov
or
and
ljmp
iret
push
rcr
mov
sub
pop
cmp
jo
lock
push
mov
push
fsubrl
ja
aas
cmpl
enter
movsl
mov
cmp
jmp
and
dec
enter
or
sbbb
divb
clc
int3
fisubrl
lds
cmp
and
jmp
mov
mov
lret
cld
dec
cmp
gs
cmp
mov
stos
xor
pop
or
mov
and
lret
add
dec
shr
clc
push
loope
incl
xchg
mov
xchg
mov
ficoml
andb
jne
sti
jmp
xor
fwait
lods
cmp
into
sub
sbb
idivb
hlt
or
lds
rorb
out
cwtl
push
adc
cmp
sti
mov
dec
sub
les
inc
cld
lret
into
sbb
mov
pop
lret
sbb
pop
in
mov
sub
lret
pop
test
cmp
and
stos
mov
dec
int3
ds
cmp
mov
ret
sub
xor
lret
xchg
popf
pusha
cltd
adc
stc
dec
and
cmp
imul
cmp
in
dec
or
jnp
sti
test
cmc
cmp
lods
dec
and
sub
int3
mov
test
stos
fmul
rclb
ret
mov
or
pop
stos
mov
xchg
sbb
or
sbb
xor
inc
xchg
mov
dec
jb
mov
mov
add
jmp
jle
xor
clc
cmp
loop
sahf
pushf
sub
sub
fcmovne
bound
push
testb
adc
fdivr
scas
and
or
pop
mov
int3
imulb
add
test
sub
rorl
mov
mov
movsl
scas
inc
in
push
pop
imul
cmp
call
leave
movsl
dec
dec
jnp
loop
xor
leave
pusha
lds
sbb
sbb
outsb
aas
push
sbb
push
sub
inc
push
insl
fldt
sbb
and
test
inc
cmp
pop
or
lcall
cmp
pop
je
call
mov
ja
sub
dec
lret
test
dec
pop
cmp
je
stc
adc
roll
or
sbbb
imul
dec
inc
int
imul
sub
lret
call
imul
fdivrl
insl
mov
sub
mov
cmp
int3
rcrl
sub
sub
inc
or
jbe
test
arpl
outsl
sub
pop
cltd
fs
xlat
lret
rcrl
mov
inc
lock
loope
stos
stos
iret
sbb
int3
dec
lret
fiaddl
mov
lcall
sub
sbb
inc
ret
mov
push
lods
subl
stos
cli
cmp
leave
mov
jle
sbb
adcb
pop
dec
clc
int3
cltd
addl
leave
in
cwtl
dec
cld
cmp
je
cmp
daa
repz
fbstp
andl
mov
insl
fsubrp
lds
cmp
ja
ficompl
cltd
call
lret
and
bound
sti
or
fisubl
sub
and
sub
sub
mov
bound
test
or
jne
mov
fsubrl
clc
mov
and
or
fimuls
or
mov
xor
dec
and
cld
or
rolb
cwtl
ljmp
test
sbb
in
fwait
int
inc
lret
mov
mov
mov
cmp
and
outsb
fbstp
jnp
adc
cltd
test
dec
jle
int3
xor
mov
mov
pop
cmp
cmp
cmp
hlt
mov
cltd
lods
stc
movsl
call
lds
cmp
fisttpll
sub
fbstp
cwtl
adc
cmp
push
hlt
sbb
scas
xchg
mov
pop
add
xchg
dec
mov
pop
xlat
inc
fadds
xchg
and
jns
dec
icebp
dec
inc
sub
outsb
sub
test
mov
sti
xor
mov
dec
das
test
pop
std
jbe
add
xor
clc
pop
jmp
cmp
leave
sub
sti
test
mov
mov
cmp
or
and
push
inc
pop
mov
ljmp
xlat
mov
pop
mov
addr16
cld
enter
xor
push
xor
mov
jecxz
mov
imul
cmp
pop
sbb
in
cmp
push
pop
out
adc
mov
bound
leave
sbb
scas
mov
aad
imul
pop
sub
sub
mov
int3
sti
xchg
mov
xor
dec
cmp
jp
mov
xlat
mov
lods
jo
pop
orl
sbb
xor
mov
shrb
test
int3
push
cmp
fsts
jae
mov
int3
mov
hlt
cltd
imul
mov
fwait
sarl
lock
lods
imul
iret
cmp
scas
xor
mov
int3
jbe
mov
jbe
sub
cwtl
lret
mov
cli
test
jne
mov
movsb
jmp
push
cltd
leave
cmp
dec
inc
mov
pop
mov
decb
das
mov
and
inc
sub
shrb
scas
and
sub
mov
in
stc
cltd
pop
shll
lock
add
and
test
fimuls
fwait
cs
pushf
cmp
pop
add
test
cli
int
stc
sub
jb
sub
out
fstps
stos
mov
lods
test
xchg
or
test
pushf
mov
xchg
iret
cmc
fcmovne
jb
out
pop
xor
cmp
xchg
in
xchg
inc
test
mov
mov
sub
popa
dec
stc
ss
pushf
cmp
mov
push
cltd
adc
jmp
or
pop
cmc
and
mov
popf
sbb
repnz
mov
mov
add
lret
movsl
movsl
insb
cli
pop
out
stc
fdivp
push
test
lret
int
sub
movsb
dec
sub
leave
js
jns
mov
imul
loope
push
xchg
cld
dec
ficoml
push
sub
mov
mov
std
xchg
push
pop
push
lods
jmp
inc
mov
jp
adc
cli
jne
stc
jmp
imul
stos
out
or
dec
in
adcb
lods
sbb
jmp
test
adc
push
mov
cld
lock
ja
test
xchg
test
int
mov
mov
jns
lret
mov
jb
cltd
rcll
mov
popf
jmp
fldt
sbb
in
orb
scas
mov
mov
mov
jmp
cs
fucomi
cmc
clc
sbb
stc
dec
adc
inc
outsb
cmp
lods
and
cmp
pop
mov
and
jnp
lcall
enter
imul
or
cwtl
mov
sub
popl
and
mov
fcoms
sbb
mov
dec
cli
test
in
add
cmp
loop
jnp
cmp
pop
or
cltd
dec
pop
int
mov
fidivrl
cmp
rcrl
insl
jecxz
fs
neg
inc
clc
xor
stos
sbb
jmp
or
push
cmp
cmp
pushf
pop
pop
lret
stos
fwait
out
pop
sub
dec
cmp
cwtl
ljmp
xchg
sub
test
fistl
pop
and
xor
lret
std
sub
je
subb
pushf
mov
dec
cld
fdiv
daa
jg
mov
mov
cmp
out
xchg
ret
enter
dec
cmp
lret
sahf
lock
scas
push
mov
cmp
dec
jns
mov
push
inc
cld
xor
sub
xlat
cmp
mov
ss
cli
jecxz
ljmp
sti
cmp
mov
dec
cmp
movhps
fwait
mov
adc
popa
pop
fcompl
push
cld
lcall
sbb
mov
test
insb
mov
push
adc
pushf
jns
pop
mov
or
call
xchg
jl
aas
into
or
push
jo
punpckhbw
sub
lods
or
sub
lods
push
or
outsb
sub
iret
out
sub
cmp
cld
mov
popf
mov
cli
inc
fmulp
cltd
rorb
mov
mov
mov
imul
mov
sub
imul
adc
das
in
mov
jmp
mov
cs
sti
xlat
cltd
dec
jp
lret
imul
stos
dec
xor
leave
lcall
fwait
cwtl
xchg
imul
stos
mull
jg
int3
aas
and
loop
lahf
add
cwtl
lock
lods
or
jae
xor
enter
lcall
pushf
dec
pop
sahf
inc
cwtl
mov
add
mov
adc
enter
incl
popa
mov
out
and
sbb
mov
sbb
movsl
mov
in
movsb
sti
sub
fldt
in
sub
data16
pop
or
xchg
xor
jmp
mov
push
in
ljmp
xor
cmp
mov
clc
dec
aad
xchg
shlb
stc
imul
jle
mov
cmpsl
adcb
jmp
mov
in
push
or
stos
pop
movsl
in
int3
mov
dec
mov
aad
cld
in
out
or
jge
sub
sub
push
data16
mov
sbb
cmp
and
shlb
std
mov
jmp
cltd
sub
mov
jecxz
xlat
cmp
jmp
imul
cltd
ljmp
lds
mov
push
pop
in
dec
fstps
mov
mov
xlat
sbb
push
dec
scas
mov
sbb
sub
pop
ljmp
mov
fwait
in
xor
ja
lret
lcall
jo
fldl2e
xor
lea
push
ror
push
dec
fs
jbe
mov
outsl
xchg
out
mov
and
lods
inc
lcall
sbb
and
scas
xor
scas
push
cmp
sub
cld
cmp
dec
lods
out
cmp
scas
sbb
or
pop
stc
cld
dec
shl
mov
xchg
fstpt
dec
fs
dec
mov
cli
testb
insl
fs
mov
pop
outsb
lods
sub
stos
cmp
mov
lods
xchg
mov
fldcw
in
lret
fdivrs
dec
cmp
out
loope
ljmp
sbb
stc
and
lods
sti
or
std
cltd
mov
mov
dec
clc
xor
push
pop
frstor
mov
dec
movsl
stc
sub
imul
out
flds
pusha
ret
gs
mov
push
cmp
out
sbb
fstpl
loope
xchg
cmpsl
out
sub
ss
mov
scas
in
mov
pop
adcb
mov
aam
fisttpll
out
adc
push
or
or
hlt
lret
int
mov
fsubl
dec
cmp
jno
mov
add
iret
jp
lods
mov
mov
and
ljmp
sub
pop
in
xchg
outsb
imul
sbbl
notl
movsl
cld
mov
fsubs
lret
sti
int
mov
sub
movsb
inc
and
cmp
movsl
mov
lods
imul
mov
sbb
push
pop
loop
jmp
cmc
and
stos
cwtl
mov
sub
ja
enter
aad
pop
dec
push
xchg
xchg
outsl
inc
jns
lock
iret
mov
sub
lret
in
mov
test
push
stc
cwtl
dec
outsb
mov
cmp
xchg
js
push
mov
cmp
mov
inc
clc
test
mov
jmp
cmp
cmp
mov
adc
sbb
xchg
dec
call
sub
jl
ret
inc
test
in
sub
sub
push
mov
adc
mov
fsts
pop
lret
fildl
dec
dec
ret
inc
add
in
loope
shlb
outsl
outsb
loop
mov
enter
xor
jmp
test
rorb
call
jmp
sbb
push
cli
aam
icebp
das
ljmp
cmp
mov
cli
arpl
leave
fdivr
mov
sbb
outsb
dec
sbb
fstpt
aad
fdivrl
lret
rolb
fcmove
sub
sbb
adc
mov
hlt
fstps
xor
push
test
dec
sub
enter
imul
mov
and
push
jg
cmp
sti
add
jmp
mov
mov
dec
dec
cmp
stos
pop
jbe
jo
lret
jne
enter
pop
push
dec
cld
das
mov
xor
arpl
push
js
push
in
outsb
leave
dec
test
pop
push
fisubs
fisubrs
mov
jbe
cmp
lds
loope
jnp
xor
mov
pop
xchg
dec
and
ficompl
stos
fwait
xchg
sub
mov
imul
sub
sub
fdiv
dec
mov
dec
pop
ss
call
fstl
push
or
sbb
scas
stos
sti
scas
mov
daa
xor
imul
dec
lret
dec
sbb
and
lret
mov
out
pop
leave
ss
lcall
dec
mov
xlat
fisubrl
push
mov
inc
scas
mov
push
ret
les
jmp
mov
mov
sti
and
cltd
or
cmp
aad
cmp
mov
adc
sub
sbb
in
jns
dec
adc
insb
loope
movsb
subb
sub
pop
clc
pop
jns
sbb
cmp
ret
lods
inc
insb
cmp
push
std
mov
mov
fstps
or
cld
jmp
xlat
cld
xchg
fcmove
je
or
leave
lcall
sbb
cmp
mov
testb
inc
out
outsb
dec
in
lcall
out
mov
out
enter
sub
jne
mov
stos
and
ljmp
imul
dec
test
adc
clc
mov
scas
enter
cwtl
imul
mov
imul
push
ljmp
ror
cmp
sub
cld
xlat
mov
push
sbb
fcompl
mov
test
push
sub
mov
adc
jmp
sbb
outsb
dec
loope
sub
pop
test
sbb
xor
sarl
mov
mov
and
repnz
push
dec
mov
cmp
lds
cltd
mov
int3
daa
pop
and
ja
lret
add
cmp
jl
push
fiadds
mov
jno
lret
pushf
sub
hlt
daa
sbb
cmp
cmp
imul
enter
adc
sub
or
sbb
icebp
cltd
sub
dec
sbb
clc
push
xor
pop
cltd
scas
sub
jne
pop
outsb
lods
fcom
inc
mov
jnp
jg
rorl
cmp
or
push
and
lret
in
sub
ljmp
addb
and
push
rorl
mov
sub
pop
fldt
hlt
jmp
outsb
ljmp
mov
fnsave
cmp
pop
and
sbb
and
adc
mov
cltd
call
mov
lods
aad
test
inc
ljmp
je
in
mov
aas
jg
leave
jne
mov
stos
sub
cwtl
pop
mov
fwait
dec
outsl
mov
test
add
scas
cmp
xor
stos
inc
ja
pop
ja
xlat
xor
cmp
mov
mov
cld
imul
mov
popf
cmp
outsb
fs
adc
cwtl
mov
test
js
inc
mov
movsl
daa
or
in
dec
and
xchg
and
enter
in
jmp
push
test
test
mov
jecxz
imul
mov
enter
test
pushf
add
stos
sbb
rorl
leave
mov
cmp
leave
rorb
pushf
repz
loopne
jo
es
or
cmp
ljmp
clc
clc
sbb
sub
jnp
dec
cltd
jle
cmp
test
in
stc
in
xchg
and
sub
dec
push
outsb
pop
and
sbb
sti
push
shr
mov
sub
inc
cld
stos
lret
and
sub
sub
or
ljmp
cmp
dec
mov
dec
test
pop
sub
adc
popf
idivb
cltd
mov
flds
loope
inc
data16
sti
roll
pop
ljmp
or
sbb
mov
ret
in
loope
fwait
pop
fucomi
sub
adc
pushf
mov
sub
cmp
je
jp
jmp
sub
movsl
sub
call
and
mov
gs
adc
ret
outsl
mov
arpl
in
mov
lods
in
mov
loope
scas
dec
xchg
lret
test
test
test
int
int3
inc
mov
mov
stos
bound
sub
sub
inc
inc
test
xor
inc
movsl
inc
pop
std
fcompl
jne
dec
mov
syscall
or
mov
ficomps
jmp
push
outsb
inc
or
into
xchg
sbb
imul
cltd
push
push
popa
sti
fldenv
or
repz
jnp
adc
sbb
cmp
ja
sti
xlat
test
inc
mov
dec
sub
callw
add
fnstenv
mov
jne
call
lods
int3
test
cltd
mov
mov
cli
jmp
pop
jne
cld
mov
inc
lret
sub
cmp
adc
jb
std
mov
cmp
test
sub
dec
sub
mov
imul
mov
fstps
mov
enter
stos
jns
or
sub
add
or
mov
cmpsb
lret
or
inc
int3
cmp
push
test
jnp
test
mov
lock
and
mov
clc
mov
lcall
push
dec
imull
and
fldln2
fwait
test
dec
cmp
clc
int3
cmp
xor
pop
and
dec
cmp
ljmp
pop
sbb
dec
lods
jno
xlat
fistl
mov
scas
cld
imul
and
xchg
clc
add
or
cmp
cmp
and
sbb
sbb
dec
jp
mov
int3
fldenv
into
jmp
pop
cmp
mov
push
idivl
movl
aas
jb
adc
mov
xchg
pop
cmp
int3
ret
sarl
adc
sbb
nop
stos
fwait
or
std
push
in
mov
call
mov
dec
mov
mov
movsl
jbe
mov
pop
or
mov
pop
inc
mov
cmp
ret
add
sub
dec
dec
or
icebp
daa
adc
jbe
inc
pushf
scas
mov
scas
mov
insb
aam
arpl
or
pop
inc
sbb
int3
sub
inc
dec
sarl
test
adc
cli
xchg
pushf
cld
inc
in
pop
dec
adc
mov
inc
mov
test
inc
test
push
sbb
lock
in
out
jne
push
push
dec
cmp
pushf
cmp
sub
pop
sub
dec
test
sub
and
cmp
sbb
dec
or
pop
mov
cs
mov
mov
mov
rorl
lods
cmp
mov
cltd
mov
fwait
idivb
loopne
fnsave
scas
mov
cs
stos
sub
jl
cmp
dec
add
mov
or
sbb
pop
or
mov
test
test
iret
fmuls
sbb
int
cmp
stos
sub
test
stos
mov
xchg
or
daa
push
adc
stc
dec
sbb
aas
jne
add
in
lods
add
xor
sbb
sub
or
mov
adc
pop
vpunpckhwd
cmp
and
cltd
dec
or
or
mov
sbb
push
mov
jmp
and
xchg
jbe
mov
or
popa
inc
ja
fucom
mov
icebp
pop
xchg
movsl
aas
mov
call
add
movsb
div
cmovo
jae
inc
or
in
or
add
lods
add
sti
mov
and
pushf
jmp
sbb
adc
cld
sub
cwtl
jb
sbb
aaa
mov
sub
jge,pn
inc
cmp
xor
sub
mov
stos
mov
xor
outsb
insl
mov
pop
cli
fisubrl
ss
fdivrs
mov
mov
add
mov
cmp
stc
into
in
stos
mov
sbbl
lods
out
aad
enter
pop
test
mov
cmp
jae
fcomps
mov
fcmovu
jo
sub
iret
cmp
mov
dec
fwait
inc
add
dec
pop
out
rcll
mov
fwait
pop
std
sbb
lahf
xchg
stos
shll
cld
stos
xchg
push
and
ljmp
pop
pushf
pop
das
cmp
sub
and
fwait
inc
dec
adc
ror
mov
adc
xorl
cmp
ljmp
nop
mov
mov
push
mov
fs
dec
xor
into
jl
or
or
fisttpl
js
mov
cmp
or
cld
mov
shlb
jecxz
cmp
stos
xor
pop
cmp
fsts
push
ljmp
mov
cmpsb
cltd
mov
in
mov
adc
sbb
out
stc
in
mov
mov
fsubr
lretw
cmp
and
mov
or
pushf
movsl
sub
mov
in
fisubrl
jge
cld
pop
push
mov
jo,pn
cmp
inc
sbb
outsb
mov
dec
mov
xlat
shll
sub
xchg
inc
mov
aam
lock
nop
sbb
mov
sbb
cmp
and
ss
mov
fcompl
aas
stc
cmp
cmp
call
push
ret
mov
mov
sbb
xor
cmc
xor
lret
mov
xor
or
cmp
out
out
stos
dec
jbe
add
xchg
jle
sub
cs
mov
aad
mov
and
pop
jne,pn
cwtl
adc
sub
xchg
mov
test
jmp
fcmovb
lret
out
cli
loop
xchg
ljmp
rcrb
cwtl
inc
jno
out
add
mov
fmull
or
lods
pop
mov
into
test
cltd
adc
adc
mov
lods
test
fdivr
mov
enter
and
jmp
mov
test
lcall
inc
leave
jmp
push
push
in
sub
das
pop
cwtl
lock
movsl
jmp
push
and
mov
cmp
pop
jmp
mov
sete
or
jmp
lcall
outsl
jns
pushf
and
mov
popf
sbb
jmp
call
fstpt
sub
imul
mov
mov
dec
lods
dec
pcmpgtd
push
xchg
jnp
icebp
xchg
adc
dec
pop
leave
pop
adc
leave
inc
pop
cmp
popa
pop
mov
jecxz
lods
sub
sti
pop
test
fidivrl
ss
mov
cmp
mov
fcoms
call
je
sbb
fstpt
mov
popf
mov
ficoml
fsubrs
nop
movsl
inc
sub
in
mov
xchg
enter
or
xor
jmp
xlat
outsl
adc
imul
sti
xlat
stos
mov
sbb
loop
pop
and
cmp
jne
dec
push
loope
xchg
jmp
roll
sbb
adc
mov
jg
stos
dec
js
add
mov
sub
outsb
adc
cld
adc
mov
mov
insb
or
jne
mov
push
arpl
inc
sub
lcall
scas
inc
sub
mov
jae
adc
mov
xor
inc
dec
mov
or
ljmp
test
sbb
inc
or
repz
sbb
lods
sub
sub
mov
mov
dec
test
cli
insl
xchg
mulb
xor
cmp
cmp
pushf
sbb
adc
push
sub
pushf
fdivrl
lods
or
clc
and
sbb
sub
ret
sti
adc
dec
pushf
cwtl
in
sbb
xchg
fstps
int
sbb
mov
fwait
imul
or
pop
lea
negl
sbb
negl
testl
leave
sub
enter
ljmp
ja
fwait
pop
cmpsb
addl
sub
fildll
pop
cmp
scas
fwait
out
cmp
mov
jmp
stos
sub
cltd
pop
add
mov
mov
sub
lods
add
lcall
leave
fldl
in
les
lcall
mov
test
rcll
sbb
pop
stos
lret
stos
int3
sbb
cli
popf
out
mov
pop
mov
cmpsl
test
inc
insb
and
scas
mov
movsl
test
sti
sbb
pop
lds
call
mov
fsubs
dec
pop
fs
jmp
test
jecxz
dec
rorl
mov
stos
or
nop
imul
xchg
imul
pop
fmull
mov
push
leave
or
jmp
scas
stos
fucomip
loopne
imul
cmp
jmp
sub
sti
in
push
push
push
mov
sub
mov
ret
dec
and
cmp
push
sub
cwtl
clc
test
cmp
or
mov
mov
and
mov
inc
iret
lea
xchg
rcl
in
test
call
push
es
loop
cmp
jle
stc
imul
dec
test
cmp
fnstsw
pop
lods
dec
dec
dec
xor
sarl
imul
or
fmul
ss
cltd
sti
testb
aam
dec
add
adc
arpl
dec
dec
insb
fbstp
mov
adc
shrb
inc
stos
sbb
cli
aad
or
mov
mov
lcall
and
sub
movsb
lret
xchg
pushf
lods
xor
fsubs
imull
xchg
dec
inc
cli
mov
ss
faddl
bound
lcall
cli
xor
xchg
adc
and
mov
enter
cmp
test
pop
into
subb
movsb
adc
jae
pushf
xchg
je
jp
daa
popf
cmp
mov
xchg
mov
lret
int3
cwtl
sbb
stos
scas
xchg
xchg
sub
jmp
jl
or
imul
inc
shrl
jns
cmp
ret
ss
add
sub
sti
nop
mov
stos
nop
or
imul
push
cmp
mov
cmp
sub
adc
sti
dec
inc
rolb
loopne
add
loop
pop
jl
lcall
cltd
test
in
fisubrl
and
fdivs
sbb
pop
ljmp
or
cli
pop
lods
adc
fwait
stos
mov
inc
popa
pusha
lods
stos
orl
sti
outsb
jo
push
enter
inc
mov
or
push
clc
cwtl
inc
js
inc
call
iret
cmp
mov
addr16
fidivrl
in
in
sub
cmp
mov
sbb
stc
adc
or
test
mov
lcall
cmp
jmp
rcll
shrl
ljmp
fdivrs
xor
daa
jmp
lret
arpl
sub
ftst
xchg
jbe
cli
mov
mov
push
inc
in
push
jns
mov
add
stc
out
insb
and
mov
fiaddl
dec
std
fsubrl
loop
in
fsubr
mov
jns
test
je
mov
xchg
ret
ror
pop
sbb
mov
jp
hlt
in
lcall
dec
mov
cmp
adc
into
inc
dec
jbe
imul
sbb
fdivl
test
add
xchg
mov
inc
stos
sti
popf
xchg
cltd
imul
lret
jmp
sub
inc
mov
in
mov
enter
cmp
mov
or
lods
rcrl
in
scas
stc
aam
das
cs
loopne
jmp
inc
mov
xchg
popa
test
std
movsl
ss
push
ret
sti
mov
test
dec
mov
mov
mov
adc
push
test
idivl
cmp
mov
outsb
shr
ss
fwait
lret
fsubr
mov
sbb
sub
inc
imul
stc
movsb
sti
xchg
or
cmp
imull
or
jnp
add
mov
outsb
ss
jmp
sbb
aas
dec
ljmp
std
hlt
cld
movsb
xor
call
call
cmp
push
imul
mov
in
cli
ljmp
test
cmp
or
cld
dec
lcall
hlt
outsb
inc
mov
mov
cltd
stos
xor
imul
stos
and
inc
int3
mov
test
mov
xor
in
jmp
sub
in
int
roll
imul
stc
push
mov
enter
imul
add
aad
stc
cwtl
icebp
jae
mov
test
mov
dec
xor
mov
mov
dec
ljmp
adc
aad
mov
mov
jnp
jmp
pop
ja
loope
notb
adc
sub
test
cli
bound
repnz
xor
iret
xor
lahf
pop
lods
and
sub
inc
push
in
jecxz
push
in
sub
or
dec
sbb
push
dec
pop
pop
mov
or
mov
aam
sub
xchg
stos
movsl
movsl
mov
sub
sbb
jns
or
scas
fmuls
xchg
and
push
sbb
jle
cs
cmp
fimull
rep
and
jecxz
adc
or
ret
push
or
push
int
dec
lret
pop
leave
mov
or
fcomip
test
pop
mov
sub
fldenv
stos
in
jle
sbb
fmull
pop
sub
dec
xor
jl
aad
cli
adc
cmpsl
in
subb
lcall
cmp
jmp
dec
xchg
add
fimuls
xchg
call
or
and
pop
dec
cmp
xor
inc
xor
fsubrs
mov
jne
stos
lret
and
mov
sub
mov
enter
aad
jns
mov
outsl
data16
cmp
cs
roll
xor
sub
int3
cwtl
xor
cmpb
pop
xor
daa
mov
mov
stos
dec
xchg
je
pop
cli
cmp
mov
sbb
lock
pop
cmp
movsb
push
jl
adc
fisttpll
lods
imul
push
popa
shrb
and
jns
sti
inc
sbb
dec
lods
fisubl
ljmp
test
in
jbe
int3
and
cmp
sbb
mov
loope
popf
xchg
stos
imul
sbb
imul
cmp
call
flds
lcall
loop
lret
dec
pop
jmp
stc
mov
cmp
idivl
pushf
int3
int
dec
iret
mov
push
sbb
fwait
jne
pop
ret
imul
pop
fdivl
inc
add
mov
add
fildll
or
adcb
test
mov
and
jnp
pushf
inc
lcall
dec
sbb
outsl
in
stc
fwait
cmp
jnp
jb
int
cmp
test
add
lods
call
scas
push
mov
pop
dec
cwtl
andl
cmp
inc
dec
lahf
mov
call
sub
fsubrl
sub
iret
ret
fnstenv
adc
mov
stos
and
mov
clc
mov
jo
or
cmp
in
sti
mov
jecxz
aad
cmp
push
outsl
mov
sti
and
and
f2xm1
or
pop
fcomp
popf
push
cmp
int3
in
mov
lds
cltd
dec
nop
into
fmul
and
pop
imul
mov
mov
inc
push
and
mov
inc
push
and
mov
xor
ret
test
test
fldt
ja
sbb
add
pop
xlat
es
push
sahf
push
inc
xor
dec
stc
jmp
dec
mov
jns
in
lea
fcmovnbe
stos
mov
sbb
mov
daa
pop
lds
xchg
or
addl
rcll
in
cltd
push
popa
imul
notb
adc
dec
fldcw
mov
enter
lds
xchg
les
cmp
dec
cli
fcomps
popf
add
cmp
sub
mov
lods
leave
push
sub
jg
ljmp
xor
xor
clc
stc
inc
mov
stos
addb
xchg
test
dec
movsb
ss
mov
call
fwait
imul
js
mov
pushl
fst
test
mov
lret
fwait
pop
jne
leave
sbb
ljmp
push
lods
push
bound
call
aad
mov
sub
jne
pop
sub
mov
xchg
and
dec
mov
call
add
imulb
jns
jp
fsubrs
fcmovu
movsb
stc
xchg
mov
cmp
in
stos
fcmovb
or
roll
leave
stos
fdivl
adc
xchg
adc
sti
out
mov
mov
mov
cmp
pop
sti
mov
les
mov
subb
scas
lret
sbb
mov
xchg
mov
cmp
cli
imul
or
xchg
loopne
sbb
icebp
or
xchg
das
insl
pop
xchg
jmp
ss
cmpsb
test
inc
cwtl
lret
mov
in
or
cltd
cmc
mov
fldcw
and
ficoml
pop
mov
dec
sbb
in
or
mov
fnstcw
lcall
ja
mov
jb
ret
mov
add
ljmp
mov
jae
dec
cld
and
inc
dec
in
inc
call
lahf
sub
and
sub
mov
dec
addr16
mov
stc
call
outsl
jp
cld
mov
sub
stos
sub
out
mov
popf
jns
movsl
shr
insl
dec
adc
xor
lods
imul
movsl
out
lods
sub
and
mov
ficoms
rcll
subb
test
test
cmp
cmp
lahf
sar
cmp
frstor
push
pop
jmp
jg
dec
fsubr
imul
aad
enter
icebp
pop
xor
sub
imul
mov
stc
les
dec
cmp
jecxz
js
mov
push
inc
mov
and
int3
cs
das
or
dec
push
test
or
in
aad
jns
mov
fdivr
sub
stos
and
pop
imul
cmpsl
pop
imul
pusha
lret
ret
sbb
cld
fcompl
xor
mov
fxch
inc
bound
lods
pop
mov
mov
dec
imul
pop
and
pushf
pop
mov
jnp
cmp
pop
outsl
in
mov
inc
push
das
movsb
imul
arpl
mov
inc
js
jns
xor
pop
add
mov
jp
test
gs
add
mov
test
adc
fwait
sbb
out
adc
addb
mov
mov
scas
clc
pop
cld
push
int3
mov
jns
ljmpw
lret
pop
fwait
mov
test
or
fldl2e
clc
stos
cli
les
pop
aad
cwtl
ja
fwait
xchg
mov
sbb
mov
in
pop
rcll
nop
das
imul
inc
xchg
inc
test
lret
cmp
add
outsb
mov
stos
inc
xchg
cmp
and
cmp
imul
cmp
cmp
loope
imul
fisttpll
inc
pusha
imul
sbb
lcall
inc
inc
pop
xchg
cmp
test
stc
mov
enter
lods
sub
int3
sub
mov
cltd
lcall
sbb
mov
aad
leave
stos
int3
or
mov
popf
xchg
in
clc
xchg
xor
sub
mov
pop
push
mov
jmp
inc
sub
leave
pushf
jne
jmp
sub
lret
fsubr
lcall
adc
stos
fwait
test
push
mov
xlat
xor
pop
icebp
call
sti
idivb
mulb
and
pop
scas
jl
gs
pushf
adcb
cmp
cmp
mov
mov
push
shrb
sub
cmp
iret
lods
fstpt
adc
or
imul
in
jbe
ret
cmc
sub
pop
sub
enter
mov
jns
inc
test
mov
xor
cmp
stc
cli
xchg
xor
cmp
test
mov
dec
lret
mov
push
xchg
out
push
mov
fisubrl
and
int3
cmp
cmc
push
in
les
outsb
in
call
push
add
dec
xchg
fsubrp
rcl
mov
mov
test
or
dec
stos
test
dec
push
cli
sbb
lock
cmp
fsubr
sbb
imul
cmp
stos
mov
stos
scas
xchg
dec
cltd
and
stc
push
popf
fldt
mov
movsl
or
dec
dec
mov
mov
mov
jb
adc
jmp
fisttpl
jmp
sub
dec
ljmp
fisubrl
clc
push
lock
cld
xlat
cli
lcall
xchg
aad
jns
mov
add
testb
mov
cld
mov
sub
rcrb
cld
cmp
jmp
outsb
fs
imul
stos
dec
push
sub
je
ljmp
or
cltd
add
mov
sub
jmp
xor
pop
aas
sub
or
dec
aad
dec
fldenv
dec
imul
mov
and
fdivrs
sub
mov
leave
mov
jno
call
insb
imul
clc
in
fcmovnb
mov
xchg
xchg
rorl
pop
xchg
lahf
int3
fisttps
test
enter
sbb
cmp
sub
mov
iret
in
cmp
idivb
pop
jmp
cld
add
fcom
mov
ja
cwtl
dec
xchg
sahf
fildl
lret
movsb
fmuls
aad
int3
lret
adc
push
clc
outsb
push
and
push
rclb
mov
mov
jmp
mov
int
or
adc
xor
mov
fiaddl
cli
sub
pop
sbb
mov
test
aas
hlt
movsb
sbb
cmp
push
mov
sub
fdivrs
pop
sub
sub
test
mov
cltd
pop
fsubrl
sti
pop
test
xchg
jg
lods
mov
and
add
test
cmp
lds
jns
push
js
cltd
dec
pop
xchg
xchg
xor
pop
sarb
stos
mov
dec
ljmp
pop
dec
mov
mov
ja
rclb
fcompl
and
and
cmp
lods
jle
out
adc
leave
sbb
mov
and
imul
mov
enter
jmp
inc
mov
push
fiaddl
das
int
pop
or
inc
lret
cmp
leave
cmp
cmp
lret
cmc
cli
push
add
jbe
fsubrl
lret
pop
lods
dec
in
xlat
mov
imul
data16
inc
cld
clc
dec
loop
testl
inc
test
mov
lret
call
fwait
inc
sub
mov
sub
test
add
fwait
imul
std
pop
psadbw
ss
lret
push
stos
shr
scas
push
stos
dec
xchg
cmp
adc
shll
jns
test
fldt
mov
fucompp
imulb
mov
lret
jle
sbb
ja
sbb
mov
jnp
js
push
rcr
cli
imul
fldcw
sbb
test
cmp
stc
mov
jmp
test
das
or
and
lods
mov
sti
mov
pop
ret
cwtl
mov
lds
addl
jecxz
repnz
xlat
or
push
add
push
fwait
sub
cwtl
call
out
xchg
jnp
pop
add
sbb
mov
mov
insl
pop
int
inc
clc
lods
aas
pusha
lds
lea
mov
imul
in
gs
cmp
ljmp
mov
lcall
shll
repnz
test
mov
mov
daa
pop
pop
loope
dec
data16
jge
stos
cmp
movsl
mov
in
mov
cmp
in
int
lret
stos
adc
xchg
xor
dec
pop
sub
cmp
and
daa
xchg
push
or
dec
in
or
lock
loop
sub
insb
stos
arpl
sub
cld
pop
lret
shll
xchg
sub
add
xchg
sbb
push
adc
push
or
int3
adc
out
fdivr
sub
pop
push
stos
out
test
mov
lret
sbbl
cld
jb
into
ficoml
in
mov
pushf
adc
or
sti
cmpsl
dec
push
call
jmp
mov
test
mov
lcall
in
dec
ljmp
jbe
sub
fsubl
rcrl
xor
xor
or
sti
pop
leave
inc
lret
push
xchg
mov
sub
mov
ljmp
mov
pop
enter
cmp
add
xor
adc
fsubl
sub
imul
cmp
inc
fnsave
xor
or
test
jne
leave
adc
hlt
xchg
or
and
ljmp
cmp
cmp
jbe
stos
sti
cld
sub
jl
test
jmp
sub
mov
cltd
outsl
mov
xchg
xchg
cmp
stos
clc
pop
sbb
sti
test
test
dec
jmp
add
test
push
cmp
mov
ja
fsubrl
imul
sbb
stc
fcomps
xor
jg
sar
sbb
xor
test
dec
or
lock
fdivrs
jae
add
outsb
mov
sti
fstpt
icebp
or
lea
divl
movsl
or
test
cmp
pushf
lcall
mov
dec
or
sbbl
leave
and
push
cltd
or
loope
and
scas
mov
cwtl
jmp
test
mov
xor
in
and
cmp
cs
mov
lds
pmulhw
mov
cmp
ficompl
inc
inc
push
mov
out
dec
jp
cmpl
out
dec
stos
or
dec
stos
mov
xchg
sub
mov
loop
jmp
inc
xor
in
cmp
mov
fildl
pop
in
lods
stc
les
out
sbb
cli
lcall
rolb
cmpsb
into
int3
test
clc
sti
or
cmp
pop
in
int
mov
push
out
xor
clc
cmp
push
adc
int
in
sbb
movsl
out
shlb
arpl
fsubr
dec
push
fs
cmp
clc
ror
enter
mov
mov
inc
imul
popf
xchg
jmp
jne
mov
enter
sub
jmp
repnz
sub
push
fstpt
mov
cmp
ljmp
je
add
idiv
push
add
or
add
jb
in
cwtl
lret
int3
xor
clc
fucomi
add
mov
pop
mov
lea
fwait
stc
je
imul
bound
imul
push
incb
jne
push
xlat
movsb
jnp
or
mov
insl
int3
cmp
call
cmp
cmp
sub
jnp
test
leave
lds
lret
dec
push
lret
gs
cltd
in
out
cmp
and
sbb
xor
xor
lea
test
xlat
sbb
mov
pop
enter
mov
adc
cmp
imul
mov
cwtl
lret
push
pop
daa
hlt
xchg
cs
and
jl
mov
dec
sahf
sub
leave
fucom
lcall
xchg
iret
neg
xchg
sbb
dec
mov
add
and
int3
lret
dec
int
stos
enter
fisubs
fstps
fcoms
in
lret
repz
or
mov
sar
xchg
mov
dec
mul
inc
loopne
cli
sub
adc
fxch
sti
cld
in
add
test
pop
cltd
pop
neg
arpl
rcll
bound
xor
inc
cli
lods
test
stos
dec
dec
daa
pop
ss
xchg
xchg
pop
mov
and
das
int3
cwtl
mov
pmovmskb
jnp
xabort
mov
and
test
and
cmp
push
mov
aas
jb
adc
mov
inc
sub
cltd
adc
aam
ljmp
push
mov
inc
cmp
dec
xchg
pop
cmc
adc
lcall
jne
enter
mov
xchg
or
dec
mov
or
lods
or
lods
or
cltd
mov
jae
jmp
icebp
ret
jbe
adc
outsl
out
xlat
sub
push
cld
lret
and
inc
cmp
outsl
or
pop
pop
fdivr
dec
dec
inc
xchg
pop
and
icebp
ss
leave
test
dec
call
add
fsubs
mov
imul
enter
sub
imul
inc
lds
or
lret
jecxz
sub
sbb
dec
lods
ret
leave
mov
int3
mov
adc
sbb
sub
sub
call
pop
fmuls
pushf
cmp
clc
int
fldt
movsl
lret
sbbb
test
adc
andb
stc
inc
frstor
clc
xlat
inc
mov
fsubrl
loopne
xchg
fs
or
imulb
lret
and
leave
outsb
mov
stos
ljmp
cs
aas
int3
cmp
inc
cltd
loope
in
jmp
push
stc
jmp
sub
popf
test
ljmp
cwtl
mov
lcall
mov
std
cld
lret
and
jo
adc
sub
push
movsl
in
cltd
cmp
xlat
nop
cwtl
cmp
sbb
jmp
pop
fcmovne
test
and
dec
mov
in
int
test
dec
mov
xor
cmp
ret
repz
and
mov
leave
imul
test
dec
xchg
sub
mov
cmp
jbe
ja
cmpsb
mov
test
cmp
cwtl
jno
jnp
movsb
iret
or
cltd
scas
pop
dec
lcall
push
push
push
leave
in
dec
test
cld
int3
xchg
mov
scas
into
mov
int3
push
pop
sub
xor
dec
dec
xor
inc
mulb
bound
push
mov
fildll
push
vpmacswd
rcll
xor
cwtl
pop
sti
fdivrs
mov
cltd
jnp
inc
test
mov
stos
mov
pop
xlat
fwait
pop
jns
movsb
cmp
outsb
lods
stos
cmp
and
inc
in
aas
push
sub
xor
cs
iret
lahf
dec
cmp
mov
mov
xchg
shll
lret
addb
push
fdivp
pushf
pop
in
leave
pop
scas
mov
call
aas
sbb
mov
outsb
jmp
xchg
out
xor
xlat
int
imul
fiadds
test
sub
mov
sub
stos
lods
push
mov
fcompl
arpl
mov
push
in
cmp
lret
xchg
cmp
int
fimull
in
mov
sbb
mov
sahf
mov
jnp
add
inc
cld
rcll
lret
sub
lods
inc
pop
scas
push
dec
pop
in
or
mov
jle
mov
cmp
lock
push
mov
sub
fldcw
fnstcw
mov
mov
dec
mov
cmp
mov
inc
sub
lcall
scas
imul
jmp
cs
push
out
inc
and
dec
enter
and
test
dec
sbb
cmpsl
dec
pop
ss
sub
in
test
andl
push
insb
push
aad
imul
mov
fdivr
mov
sahf
dec
in
mov
push
mov
notl
fdecstp
enter
push
dec
lods
call
in
imul
push
push
nop/reserved
stc
mov
int
mov
mov
inc
sar
cmp
mov
mov
lret
cmp
dec
cmp
sub
or
add
testl
stos
cwtl
call
or
scas
fstps
sbb
pushf
or
les
fdivr
imul
pop
enter
xlat
mul
or
sub
mov
mov
std
jmp
and
fimull
dec
sbb
cmp
dec
inc
push
cmp
daa
popa
cltd
stos
mov
lret
cmp
call
cwtl
sub
leave
in
mov
clc
cli
mov
sub
cmp
jmp
pushfw
dec
cmp
pushl
mov
mov
dec
dec
jl
popf
jnp
dec
sub
dec
or
int3
imul
iret
mov
jae
sub
scas
in
cmp
mov
cltd
lret
cmp
daa
test
cld
enter
or
insb
mov
lret
call
mov
mov
stos
jno
imul
stos
imul
cmp
int3
lret
pop
cli
mov
fcomps
mov
movsl
ja
xor
dec
stos
push
negl
mov
sbb
test
fldcw
sub
or
pop
imul
mov
lret
pop
lock
mov
std
ljmp
cs
or
mov
test
dec
test
cmp
lret
repz
dec
sar
lcall
pop
fwait
cld
fisttpl
jno
pop
cmp
or
dec
jne
fadds
lods
mov
int3
pop
sti
xchg
mov
stos
mov
mov
gs
xchg
cmp
daa
pusha
daa
sub
or
mov
js
jnp
or
mov
cltd
dec
jo
insl
jmp
aad
pop
int3
fildl
pop
xor
pop
orl
jne
adc
cmp
push
jae
call
xor
cmp
cmp
sbb
mov
sbb
cltd
out
sbb
push
notl
cwtl
jmp
mov
cmp
or
int3
pop
xor
push
dec
adc
fcmove
ffree
int3
pop
cmp
sarl
or
cmp
jl
mov
cmp
stos
xchg
dec
sbb
divb
mov
test
insl
cmp
sub
push
or
mov
pop
sti
mov
lods
or
out
mov
jbe
jae
sub
clc
cmp
inc
adc
cld
sbb
imulb
dec
jnp
mov
pop
xlat
push
js
sub
sub
sbb
int
lret
add
cwtl
sbb
or
pop
bound
out
lods
mov
push
ficompl
and
mov
pop
or
xchg
sbb
repz
pop
jns
cmp
mov
rcr
repnz
ljmp
cmp
leave
sbb
das
pop
mov
scas
dec
dec
or
dec
sub
mov
mov
cmp
psubq
mov
pop
jmp
ror
mov
out
jnp
pop
cs
arpl
push
mov
popa
push
jne
lods
mov
jae
ret
jmp
dec
or
into
push
ljmp
pop
fs
mov
jmp
test
jb
dec
push
mov
mov
sbb
cltd
std
aas
sub
lods
stc
shll
fstpt
test
shrl
int3
cwtl
inc
sar
pushf
mov
in
dec
stos
and
or
or
mov
jle
dec
or
xchg
push
in
jo
add
and
inc
mov
ret
mov
andl
inc
xor
int3
pop
jle
adc
jns
dec
cli
xchg
repz
sti
movsl
out
lds
mov
push
in
dec
orl
add
pusha
int3
xor
or
clc
sub
jmp
int3
pop
jle
outsl
xor
in
stos
testl
cltd
mov
xlat
into
pop
rorl
aad
imul
js
mov
call
pusha
je
fwait
jmp
or
lret
testl
movsl
dec
mov
mov
push
sti
sub
imul
add
mov
sar
xor
fwait
push
jecxz
cmp
sub
mov
inc
fstpt
enter
decb
mov
xchg
ss
jnp
sbb
test
mov
pop
addl
stos
mov
lea
stc
fldt
and
jmp
mov
imul
fsubrs
or
stc
sbb
aas
lret
clc
mov
xchg
test
jmp
ljmp
in
dec
mov
insb
cs
sub
enter
lret
lahf
pop
dec
mov
ljmp
xchg
dec
adc
mov
inc
push
imul
imul
push
and
inc
pop
movsl
lock
sbb
insl
mov
fsubrl
outsb
sbb
push
or
xor
cli
inc
add
cltd
ljmp
push
in
and
popa
jg
cltd
imul
dec
lcall
fiaddl
jge
dec
sub
jp
mov
outsl
mov
jp
xlat
fcompl
dec
cmp
inc
clc
cmp
iret
mov
sti
and
push
sti
cmp
mov
sub
fmul
stos
fcompl
sbb
fisubl
and
and
scas
out
sahf
rcll
icebp
leave
stos
loop
cld
clc
fcomip
ds
sbbb
leave
dec
cmp
jmp
movsl
mov
push
xor
cmp
xchg
stos
test
mov
jg
std
lods
popf
cltd
mov
lret
cmp
push
idivl
and
dec
mov
mov
pop
stos
fs
jnp
sbb
mov
jnp
ja
sub
shll
or
sub
leave
xchg
jne
mov
inc
push
cltd
or
jecxz
mov
mov
add
repz
loope
and
in
or
lret
enter
xor
shll
sbb
push
loop
pop
xor
pop
shlb
adc
mov
pop
mov
sub
enter
fsubl
xchg
sub
mov
xchg
mov
sbb
stc
les
fdivr
mov
test
fcoms
test
or
into
stc
xor
or
negb
gs
lret
into
and
outsl
das
push
cmp
fwait
fs
adc
inc
inc
aad
int3
adc
pop
xor
insb
mov
mov
sub
lcall
out
sbb
push
js
stos
jns
sbb
pop
stc
fdivs
ds
dec
pushw
jmp
out
dec
test
or
mov
aam
dec
lret
xor
and
sbb
ss
add
sbb
fidivl
js
inc
flds
fwait
imul
cs
insb
fadds
jle
in
sub
inc
iret
push
rcrl
mov
cs
scas
jbe
dec
dec
jns
call
lods
mov
xlat
push
in
mov
jg
and
lret
xlat
mov
dec
data16
stos
outsl
and
sbb
sub
int3
sub
add
adc
mov
push
xchg
test
in
mov
sbb
pop
cmp
sub
scas
loope
cltd
fsubs
xor
lret
dec
stc
ds
dec
movsb
int3
cld
adc
aam
add
cmp
imul
sub
in
inc
int3
insb
dec
push
in
lret
jnp
icebp
pop
scas
push
sub
cmp
lock
shr
mov
mov
xor
scas
jmp
mov
mov
or
inc
cmpsb
xchg
cltd
call
out
dec
popf
lret
imul
cwtl
jno
add
and
cmp
test
les
dec
push
mov
fldl
inc
pop
cmp
call
cwtl
jmp
fdivrl
lret
outsb
inc
in
lret
imul
pusha
dec
and
cmp
test
mov
mov
enter
sub
out
test
and
repz
inc
fldt
xlat
xor
mov
in
pushf
dec
test
call
pop
dec
shr
and
pop
cwtl
or
add
and
mov
lea
stos
pop
push
sub
mov
and
dec
sahf
fldz
into
rcrb
inc
in
xchg
and
dec
or
push
pop
cmp
pop
jmp
xchg
test
cmp
mov
popf
mov
out
dec
jnp
lret
cld
fdivrl
shr
stos
imul
sbb
sub
pushf
sti
cmp
aas
test
aaa
cli
movsl
push
xlat
xchg
clc
pop
shrl
jbe
addr16
mov
pop
loopne
sub
cltd
imul
fmul
mov
add
sub
stos
pop
jnp
adc
jne
ret
mov
test
lds
lcall
dec
call
mov
jmp
std
mov
fisttpl
aad
mov
movsb
jnp
fsubrs
imul
fdivr
or
fmuls
movsb
pusha
test
dec
cmp
icebp
fistpl
lock
mov
roll
in
cmp
jbe
pusha
push
pop
mov
push
inc
fisubl
in
jne
cli
pop
stos
lret
enter
xchg
nop
adc
aad
mov
mov
lret
and
popf
add
js
cltd
sbb
in
cltd
stos
std
in
in
lods
dec
adc
and
test
fcompl
push
lret
stos
add
push
mov
xlat
jnp
xchg
or
push
xchg
push
sbb
cs
stc
ret
mov
pop
fbld
xor
cmp
fsubl
lret
jl
cmp
push
lods
adc
stos
mov
fucom
cli
jle
ja
je
fisttpl
fmuls
sub
ss
stos
imul
clc
leave
nop
cmp
lret
sti
mov
pop
loop
or
and
leave
into
mov
stos
push
dec
testb
cmp
dec
push
rol
cld
in
mov
es
or
call
inc
dec
xor
test
in
stos
filds
or
sub
shrb
cli
inc
cltd
sti
leave
movsl
push
pop
pop
push
clc
sub
js
enter
ljmp
xlat
mov
push
push
ds
mov
test
push
in
fisttpl
popa
loop
jp
cs
adc
sbb
ficoms
std
cmp
jns
inc
mov
dec
cli
cmp
inc
xchg
xor
jmp
fidivrl
cltd
movsb
jmp
jnp
inc
mov
add
xchg
cmp
mov
enter
into
rorl
clc
jp
outsb
push
leave
xor
pushf
or
stc
scas
mov
lret
out
insb
pop
or
xor
sbb
daa
mov
fisubrs
dec
dec
mov
testl
test
call
popf
mov
lret
or
gs
ret
mov
ljmp
xchg
sub
mov
call
cmc
push
mov
aad
fldcw
lret
shl
cmp
pop
stos
xchg
push
jmp
flds
sub
mov
fmuls
std
in
cwtl
sub
test
mov
mov
mov
mov
imul
dec
notb
mov
mov
popa
push
push
push
pop
aam
mov
outsb
cmp
cmp
sub
mov
dec
jb
ret
and
or
lret
xchg
cmp
repz
into
arpl
lret
sbb
pop
dec
fldcw
ds
add
outsb
push
sbb
outsb
mov
ds
cmovnp
jp
dec
insb
repnz
dec
dec
mov
outsb
pop
loope
push
jbe
addr16
data16
lcall
adcb
fmul
sahf
shll
xor
inc
jnp
lea
pushf
pop
dec
or
xchg
stos
stos
fisttpl
jmp
lods
add
in
inc
cli
inc
and
stos
inc
mov
scas
fs
add
cmc
pop
fsubrs
testb
push
jo
ljmp
adc
lret
pushf
fucomi
lods
pop
and
cwtl
fwait
mov
mov
lret
clc
dec
stc
dec
fwait
ljmp
int3
mov
xchg
sbb
cwtl
jnp
push
inc
add
loopne
xorb
mov
pushf
cli
lds
imul
adc
add
sub
cmp
and
cmp
xchg
inc
cmp
mov
int3
cmp
or
mov
out
cmpsl
push
fildll
mov
jmp
stos
fimull
loope
fmull
xchg
cmp
lret
cmp
loop
jns
clc
cli
inc
enter
sub
mov
arpl
add
pop
stc
cmp
aam
outsb
mov
pop
mov
add
and
addl
ljmp
leave
sbb
push
pop
xchg
int
sub
mov
xchg
lret
pop
xchg
cmp
xchg
das
sub
sbb
ljmp
mov
sub
fdivr
xor
jmp
mov
andl
pusha
popl
sub
shrl
sti
or
xchg
fstpt
adc
ret
jno
jns
cmp
aam
sbb
ja
int3
sbb
cmp
adc
je
popf
cmp
out
jge
ljmp
ljmp
fsubrl
mov
mov
stos
jle
xor
lcall
sub
addb
sub
or
push
sbb
lret
test
out
mov
jge
fwait
pop
icebp
and
and
or
sbb
imul
dec
mov
call
mov
jmp
imul
test
aas
stos
dec
mov
inc
stos
out
jns
mov
popf
std
mov
mov
test
aas
in
cld
push
add
adc
mov
sub
int3
sub
callw
aad
cmp
dec
test
dec
shlb
cli
inc
stc
mov
in
sbb
fnstcw
lret
or
xlat
test
sti
mov
sahf
pop
lods
mov
dec
jbe
cwtl
mov
lcall
pop
cmp
lea
fimull
std
clc
ss
stc
add
fcmovnu
xchg
pop
cmpsl
mov
and
in
cltd
movsb
dec
and
sbb
sbb
fildl
pop
fildl
inc
in
test
sti
ljmp
inc
cmp
mov
mov
push
mov
mov
jmp
lret
pusha
imul
cmp
pop
lods
mov
icebp
aaa
fcomps
cmp
imul
dec
ljmp
push
cltd
fwait
jns
mov
mov
ss
mov
add
in
xchg
cwtl
outsb
push
subb
out
fmul
outsb
enter
mov
xor
stos
cmp
sub
stc
imul
in
clc
in
sarl
mov
lods
fs
fidivrl
mov
in
mov
jmp
jmp
mov
add
js,pt
daa
jmp
sub
dec
inc
aas
push
or
adc
int
sbb
and
pop
mov
sub
lcall
and
popf
mov
stos
add
pop
test
sub
push
fmuls
pop
fnstsw
jmp
add
movsl
cmp
mov
inc
and
sub
sbb
nop
xor
ror
xchg
ret
or
push
inc
inc
aad
int
fmul
std
inc
lods
mov
ja
pushf
and
mov
stos
jmp
mov
pop
mov
cmp
adc
jnp
pop
leave
fiaddl
and
cld
mov
cltd
pop
sub
jmp
rorb
pushf
outsb
in
fsts
sub
lods
xchg
lret
cmp
stos
mov
jb
pop
fstpl
dec
xchg
sbb
xchg
jns
stc
sub
insb
movsb
xchg
xor
ss
push
jbe
sub
imul
cmp
popa
add
mov
mov
cwtl
inc
pop
leave
jecxz
cld
cmp
lds
stc
dec
pop
add
pop
imul
dec
pop
mov
xchg
dec
clc
int3
add
and
outsb
mov
mov
jl
sbb
cli
ljmp
pop
fcomip
jns
cmp
lret
mov
or
and
pop
sbb
sub
cli
push
cld
scas
adc
ret
and
sti
fmuls
sub
sbb
fmull
push
mov
and
stos
or
int3
cmp
mov
test
imulb
int3
sti
pusha
ret
add
test
xlat
dec
mov
in
push
lock
enter
pop
pushf
dec
mov
fcoms
ss
push
mov
sub
test
call
sub
mov
mov
scas
imul
std
or
jmp
add
sub
pop
pusha
xor
jnp
test
lret
mov
js
imul
outsb
push
mov
mov
shlb
mov
je
sbb
inc
das
mov
sub
ljmp
dec
inc
fdivrs
in
dec
lock
pop
lods
int3
iret
popl
xor
test
inc
xor
stos
or
test
cltd
fisttpl
loopne
mov
cmp
sti
push
pop
stos
inc
xor
scas
xlat
loope
lea
dec
stc
das
cmp
lret
movsl
adc
fisttpll
sub
xchg
mov
xor
stos
dec
jne
test
xchg
cmp
xchg
or
ss
fmull
dec
mov
cmp
cmp
fstpt
mov
fcmovu
mov
outsb
insb
pop
xor
cmp
stc
jne
lods
pop
cltd
cmpsl
imul
cs
sbb
xchg
sub
stos
stos
pushf
popa
fmull
push
inc
jg,pn
sbb
cmp
bnd
movsb
fs
xchg
pop
xor
mov
leave
scas
int3
fstpt
and
int3
lret
push
xor
cwtl
inc
mov
xor
and
xchg
std
imul
lea
outsb
inc
repz
mov
outsb
in
fisttpl
lret
leave
pop
scas
rcll
fwait
fs
das
ret
mov
push
ljmp
mov
mov
addr16
push
dec
stc
inc
loope
sub
nop
shll
call
mov
cmp
jecxz
nop
inc
adc
jns
test
pop
call
xchg
out
mov
pop
rolb
mov
xor
cltd
mov
lods
insl
inc
mov
test
cli
cwtl
push
cmp
or
cltd
cmp
push
outsb
cwtl
stos
xchg
jecxz
shl
cmp
clc
dec
mov
xlat
jmp
jg
mov
mov
stos
cmp
test
stos
cmp
stc
leave
aaa
or
mov
pop
and
cmp
enter
mov
and
sub
iret
pop
push
sbb
jp
outsl
shrb
mov
dec
dec
test
pop
jae
mov
jmp
sar
dec
jns
ss
scas
cmc
xor
mov
dec
and
pop
push
test
out
daa
in
cmp
int3
or
push
push
fsubrs
test
fistpll
orl
dec
mov
imul
int3
stos
imul
mov
clc
xor
cmp
sub
pop
xchg
mov
dec
sub
inc
stos
cmp
aas
fwait
dec
add
jmp
test
jne
ljmp
cmp
cmp
fmuls
push
imul
cmp
mov
mov
scas
cs
fmuls
mov
cwtl
pop
sbb
sub
sub
cmp
xlat
into
and
test
mov
sbb
mov
imul
cmp
fstpt
sub
lds
cmp
pop
jns
or
movsb
fs
add
cld
mov
outsb
leave
xor
sub
je
fstp
cmp
and
mov
add
push
stos
or
and
int3
mov
mov
cli
imul
sbb
or
jge
sub
cld
pop
imul
fs
jle
pushf
imul
sub
sub
mov
cld
dec
cmp
mov
pusha
jmp
dec
in
dec
jbe
pop
fxch
cltd
cwtl
jmp
imul
dec
cwtl
lret
fisubrl
pop
stc
sti
fcomps
addb
inc
decl
push
repz
mov
mov
mov
test
cmpsb
sbb
imul
cmp
popf
sbb
sbb
sub
cmpsb
or
mov
leave
cwtl
cmp
test
and
fmul
pop
lods
lea
inc
jns
dec
stc
ljmp
lcall
mov
xchg
loope
mov
insl
shrb
dec
mov
daa
pop
jno
cmp
ficomps
pop
cmp
jo
xorb
cmp
lds
or
dec
test
push
ja
lret
aaa
push
push
fwait
sbb
dec
cmp
das
in
mov
xchg
les
mov
hlt
scas
dec
add
xchg
fstpl
fcom
enter
pushf
test
outsb
inc
lret
pop
inc
mov
lret
mov
sub
loopne
scas
mov
fmuls
xlat
fwait
jmp
mov
and
pop
leave
movsb
in
cmp
loopne
mov
fnstcw
out
in
mov
or
cmp
sub
testl
sbb
fmull
sub
jns
stos
inc
out
pop
push
out
mov
dec
fidivl
jne
call
sub
sbb
sub
mov
xchg
lcall
sub
loopne
xor
mov
mov
lcall
sub
pop
ret
hlt
out
fmul
outsb
cwtl
leave
loop
pop
xchg
push
fisttpll
mov
mov
mov
sub
and
lret
mov
sarl
imul
inc
xchg
cs
ret
mov
arpl
mov
cli
das
stos
call
jge
push
sub
sahf
sub
stos
int3
les
test
inc
mov
popa
out
scas
mov
les
loopne
outsb
cmpsb
and
xor
mov
movsl
fldt
clc
lcall
mov
xor
das
enter
sub
idivl
or
jle
outsb
cli
out
push
cmp
dec
adc
leave
test
mov
iret
fidivrl
lcall
xchg
arpl
inc
cmp
out
add
xchg
fwait
lcall
cli
in
sub
inc
fimull
test
push
jbe
scas
sbb
xor
test
pop
daa
xor
mov
pop
xchg
or
or
sti
sub
or
movsb
addr16
out
outsb
fs
adc
or
lods
mov
adc
jnp
lods
loope
inc
mov
push
in
shl
sbb
cmp
aam
in
js
out
sarb
xor
mov
inc
notl
lret
imul
cwtl
lods
add
negl
loopne
stos
rcrb
cwtl
leave
ss
jne
dec
dec
pusha
aad
fcoms
dec
mov
add
jmp
in
jbe
in
test
cmp
daa
movsl
imul
dec
mov
int3
scas
pushf
adc
inc
lret
sub
jmp
loop
jle
mov
and
sub
repnz
fst
int3
dec
loop
aaa
mov
cmp
cmp
sub
lret
xor
jbe
testb
dec
clc
cmp
mov
mov
in
test
mov
sub
sub
insb
cs
int3
stos
jne
mov
cmp
and
mov
mov
imul
cld
cmp
xor
test
xor
fidivs
or
cmp
loope
mov
cmp
aas
decb
outsb
addr16
movsl
inc
pop
gs
mov
mov
mov
jbe
in
fwait
inc
dec
push
das
inc
mov
dec
sub
cmp
mov
jns
rorb
mov
sahf
movsb
push
out
hlt
or
adc
fldlg2
out
push
cmp
lcall
out
mov
jmp
in
xlat
fidivrl
push
mov
sahf
mov
rolb
mov
std
xor
xchg
mov
fstpt
pop
sti
stos
mov
pop
cmp
sbb
add
lret
pop
sbb
call
push
clts
mov
into
out
mov
mov
lods
movsb
out
cmp
cmp
fldt
mov
dec
test
or
dec
stos
testb
sbb
pusha
bound
adc
cli
push
int3
pushf
ficompl
mov
mov
dec
mov
clc
fsubr
in
movb
jnp
fidivrl
sub
lods
mov
mov
add
or
mov
imul
pop
inc
sbb
int3
lret
icebp
mov
dec
popf
mov
sti
shl
sub
cmp
sub
stc
inc
arpl
xchg
or
cld
sub
pop
and
or
icebp
clc
push
inc
cmp
inc
dec
das
pusha
test
sub
or
mov
sub
movsb
sbb
and
or
cli
stos
stc
xchg
aam
out
sub
repnz
push
es
sub
lret
xchg
cli
mov
cmp
sub
cli
fdivr
dec
cwtl
test
mov
popf
cmp
push
aad
pop
lods
and
mov
dec
or
mov
and
stc
lods
stos
into
stos
out
out
dec
xchg
jl
and
cmp
icebp
push
push
movsb
inc
mov
jmp
lret
dec
fwait
mov
leave
mov
and
imul
jnp
sub
inc
sub
sbb
nop
sub
cmp
dec
jne
cwtl
cltd
or
stos
xchg
ja
ljmp
sti
fcmovnu
lods
dec
mov
mov
cmp
fsubs
sub
les
push
das
xchg
enter
jne
lods
dec
mov
mov
mov
cli
fstps
imul
dec
and
cli
inc
cld
shll
jne
xchg
test
dec
fbstp
xchg
aas
lret
leave
cmp
jmp
cmpsb
cli
or
int3
imul
cld
lret
imul
ljmp
sub
pop
fcompl
xchg
push
enter
jnp
mov
lods
cmp
mov
jmp
add
in
imul
dec
scas
movsl
popf
xchg
cli
call
push
pushf
xor
leave
cmp
pop
pop
mov
pop
lret
xor
xor
aam
inc
and
pop
cmp
pop
dec
cld
xlat
stos
mov
pushf
and
test
mov
mov
in
insb
mov
fwait
cwtl
dec
stc
or
sahf
fbld
movsl
arpl
cmp
test
mov
ljmp
scas
xor
dec
pop
and
pop
inc
ljmp
stc
int3
dec
movsl
cld
mov
xor
or
dec
stos
lcall
cmpsb
bound
cmp
stos
mov
add
dec
cli
test
sbb
stos
cmp
popf
mov
cmp
test
add
ds
mov
and
sbb
jne
imul
xchg
cmp
sbb
sub
cmp
mov
lods
pop
test
sti
aam
imul
cmp
int3
mov
enter
pop
cmp
jmp
shrb
add
ret
sahf
mov
das
leave
cmpl
or
cmp
insl
clc
cmp
outsb
add
dec
popf
push
or
sbb
cltd
mov
cli
or
repnz
das
mov
dec
lods
xchg
aad
dec
ljmp
jns
pop
test
lods
or
dec
cli
lret
jmp
dec
xor
or
xchg
mov
test
shl
pop
push
push
dec
ret
inc
mov
and
fsubl
mov
popa
sub
cmpl
pop
sub
lea
call
and
imul
movsb
fsubs
test
or
cmp
dec
sub
jnp
pop
cmp
mov
pushf
testb
or
dec
nop
pop
fwait
sbb
mov
pop
inc
fnstcw
cmp
loopne
lock
jae
rdtsc
sarb
lret
stc
jns
movsb
fsub
nop
divl
lods
rcrl
pushf
sub
std
cmp
dec
clc
add
lahf
adc
ljmp
push
sub
cld
sub
or
sbb
adc
xchg
mov
ret
lods
lret
push
mov
sarl
in
mov
mov
rcrl
repnz
jl
loopne
mov
in
fmull
cmp
or
jae
sbb
or
test
jnp
cmp
cmp
rorl
call
aas
lret
mov
dec
loop
std
push
pop
xor
leave
ret
pop
mov
and
sub
ljmp
push
icebp
jl
lds
lock
loope
shl
and
ljmp
lret
sub
repz
dec
mov
shl
fnstcw
test
fmull
sbb
xorb
xor
and
fmuls
sbb
fstl
mov
adcl
mov
and
cmp
out
loop
negb
loope
popf
rcll
lcall
cwtl
cmp
mov
mov
test
cli
mov
mov
push
pop
dec
sbb
ds
xchg
fwait
push
cmp
stos
imul
pop
cld
pop
mov
mov
test
test
stos
sbb
jns
fdivrl
push
lods
pusha
imul
add
and
sub
leave
scas
push
mov
push
mov
test
mov
xor
jmp
pop
cs
jmp
or
push
test
jnp
push
cli
fnsave
test
sbb
cltd
add
jbe
sbb
int3
clc
or
imul
adc
test
mov
ss
adc
mov
dec
xor
xchg
sub
stos
test
out
cltd
cli
in
fsubrl
call
or
leave
inc
pop
int
sub
insb
fwait
add
cmp
in
mov
cmp
pop
das
push
mov
xor
fimuls
inc
fwait
rcrl
mov
mov
pop
xorl
test
mov
in
lods
fldt
or
in
pop
push
loopne
dec
pusha
adc
sbb
pusha
or
cs
and
std
nop
outsl
xchg
imul
sub
mov
stos
rorb
xchg
mov
push
cmp
mov
mov
xor
sbb
inc
sub
fdivrl
test
sbb
xchg
jno
fwait
stos
fnstenv
test
add
add
sbb
leave
enter
in
sub
jmp
cmp
cltd
mov
test
insl
cmp
int3
mov
sub
test
sub
mov
add
mov
fstps
js
cs
lcall
cltd
and
aam
push
jnp
fmull
cmp
mov
pop
and
lahf
movsb
cmp
leave
dec
mov
mov
cmp
sub
sub
stos
sbb
ja
or
jmp
cmp
pop
imul
ljmp
fldcw
hlt
dec
leave
fisttpll
mov
jmp
call
sbb
fucomi
pop
mov
stos
imul
pop
mov
int3
fstl
ret
loop
pop
jmp
push
loopne
and
jns
cmp
sub
fs
sbb
stos
dec
shl
lods
and
cmp
mov
rcrl
in
mov
lret
jmp
mov
sbb
dec
lret
push
aam
pop
leave
sub
adc
xchg
mov
lcall
cltd
movsl
add
imul
xchg
fcmove
sub
imul
ficoml
inc
rcr
fldl
xchg
jle
or
push
fdivs
jne
pop
aam
sub
or
sub
sub
dec
fdivrl
test
shrl
aaa
scas
pushf
cs
das
std
fmuls
pop
mov
pop
mov
dec
adc
lret
and
pop
and
stos
imul
dec
mov
mov
or
or
lods
je
clc
and
les
cs
cmp
mov
jge
sbb
sahf
stos
adc
sbb
pop
hlt
test
add
dec
ud2
mov
loope
fucomp
sub
leave
dec
repnz
xor
mov
pop
stc
out
test
movsb
movsl
dec
cltd
cld
adc
call
mov
clc
and
test
sub
dec
xor
mov
outsl
sbb
inc
ljmp
dec
lret
sbb
mov
cmp
insb
mov
leave
push
xor
loope
lret
sub
pusha
fsubs
xchg
add
enter
push
stos
idiv
call
xchg
mov
xor
xor
imul
sub
mov
mov
cltd
fistl
xor
cmp
pop
cmp
fsubrl
push
sub
fdivrs
inc
pop
movsl
scas
mov
imul
inc
int3
inc
dec
pop
icebp
lods
enter
das
push
jmp
sbb
clc
int
clc
mov
sub
stos
imul
jecxz
cmp
mov
testb
dec
and
jns
cmp
mov
dec
inc
pushf
sbb
neg
rorb
lcall
cmp
lods
cmp
cmp
pop
imul
jmp
mov
mov
dec
cwtl
in
test
sbb
data16
mov
mov
mov
pop
divl
xchg
dec
push
dec
fnstsw
xor
loop
mov
jnp
sbb
pop
stos
enter
stos
mov
addr16
orb
orl
mov
fildl
divl
sub
lea
mov
sbb
orl
xchg
sub
sbb
out
sub
test
scas
push
lods
stc
pop
push
sbb
mov
fnstenv
je
imul
stos
cmp
imul
and
sti
sub
imul
call
sub
cmp
test
sbb
cmp
mov
int3
mov
cli
cmp
xchg
test
adc
call
leave
clc
add
scas
xchg
push
jmp
or
mov
add
ss
xchg
mov
ljmp
or
fs
mov
imul
stos
pop
inc
pushf
popf
test
cwtl
dec
pop
fwait
add
jo
leave
inc
cld
mov
mov
push
mov
pop
pop
loope
loope
outsl
fdiv
cld
enter
xchg
imul
sub
lret
enter
sub
inc
pushf
pop
add
lret
inc
lds
cltd
inc
inc
dec
xchg
stos
testb
cs
push
dec
clc
test
cmp
shll
popf
lcall
dec
cwtl
mov
and
or
cltd
sub
fildl
test
or
add
add
cli
out
xchg
lock
fstpt
xor
fsubrl
cmp
loop
sub
cmp
pushf
movsb
test
push
adc
inc
push
sbb
dec
adc
sbb
in
leave
push
leave
and
sbb
imul
push
ret
fwait
ret
sbb
add
xchg
lcall
loope
fwait
cmp
pop
mov
movsl
int
lret
sub
imul
xchg
jns
dec
fwait
pushf
cld
idivb
ljmp
pushf
cwtl
cmp
lods
loope
adc
inc
imul
pop
leave
std
cmp
xchg
xchg
scas
cltd
xorl
sti
mov
fisttpll
outsl
dec
inc
mov
subb
pop
mov
movsb
test
fmul
xchg
imul
cmp
shll
or
in
add
int
cmp
pop
mov
loope
mov
stos
and
ljmp
lret
jne
in
out
mov
mov
mov
dec
or
scas
jg
mov
xchg
popa
push
sbb
ret
out
insb
dec
mov
add
or
pop
sub
cmp
add
dec
ret
cmp
imul
fcompl
cmp
mov
sti
push
inc
pop
test
pop
sub
inc
mov
mov
outsl
mov
dec
in
jnp
icebp
lcall
fcmove
or
insb
mov
cwtl
push
push
push
mov
mov
inc
rcll
dec
mov
sti
cmp
test
cld
rorb
hlt
sub
lcall
cwtl
sbb
rcrb
lret
and
je
pusha
and
int3
cli
mov
mov
sbb
aam
pop
mov
cmp
mov
test
and
movsl
or
and
or
push
stos
out
leave
rorl
out
dec
mov
clc
push
icebp
push
add
clc
mov
pop
leave
pop
outsl
loope
sahf
stos
jns
fs
mov
imul
sbb
clc
ljmp
cmp
cmp
inc
stos
pop
xchg
or
cltd
dec
testb
in
pop
in
or
or
mov
icebp
dec
pop
icebp
enter
or
cld
sub
inc
jbe
cmp
nop
adc
inc
test
jns
cmp
imul
out
mov
lcall
outsb
mov
xchg
and
imul
mov
imul
iret
cmc
lcall
call
cmpsb
mov
cmp
xor
sub
pop
stos
mov
imul
pop
lret
jmp
add
cwtl
mov
mov
pop
cli
cmp
lcall
dec
pop
cmp
cmp
jo
movsb
jecxz
dec
scas
pop
pop
push
fldcw
pushf
mov
mov
ss
cmp
mov
lret
outsb
or
lock
sub
jmp
mov
add
mov
insb
bound
pushf
test
mov
test
sti
stos
jmp
aaa
sub
fs
sub
jne
mov
dec
xor
cmp
mov
sbb
xchg
test
movsb
or
sbb
mov
dec
mov
pop
mov
aad
sbb
aas
lcall
dec
mov
xor
cmp
in
jnp
imul
sti
or
adc
cmp
shll
mov
aad
push
xor
cmp
and
mov
call
in
test
cmp
add
negb
faddp
les
mov
xchg
imul
mov
stos
fcomi
mov
jmp
pop
dec
enter
hlt
cmp
and
lret
cmp
nop
sub
les
test
icebp
or
xor
dec
fiaddl
sub
sbb
negb
jmp
test
inc
lret
and
sub
int3
subl
sub
jnp
xor
roll
cwtl
cmp
int
lret
cmpl
pop
sbb
mov
cli
mov
cmp
inc
mov
pop
enter
mov
add
cli
lock
xlat
cwtl
dec
and
inc
sub
fsts
test
and
mov
push
dec
dec
mov
push
mov
xor
sbb
data16
pop
mov
dec
jbe
xchg
mov
xchg
jmp
cmpsl
test
sub
jns
push
pushf
lcall
ljmp
mov
ss
sbb
dec
lcall
insb
jbe
cld
movsl
movsl
mov
cmc
push
test
test
mov
add
mov
mov
mov
cld
lods
aad
sbb
popf
mov
mov
mov
or
mov
pusha
xchg
mov
mov
rcr
int3
pop
test
mov
leave
xlat
and
sbb
lea
stos
cld
rcrl
cmp
sbb
or
cmp
mov
loopne
mov
aad
sti
in
inc
cld
fucom
imul
pop
aas
cld
lods
mov
int3
jmp
sub
jmp
enter
int
dec
sub
add
rcrl
dec
cmp
jmp
test
test
cmp
fwait
xchg
in
add
aaa
sbb
cwtl
jecxz
fs
fisttpl
std
mov
outsb
mov
mov
sbb
cwtl
mov
push
lret
mov
dec
stc
into
push
stos
test
int
mov
scas
cwtl
or
or
xor
inc
ja
sti
xchg
and
cwtl
cmp
outsb
push
loop
xchg
in
iret
adc
insl
loopne
cmp
cmp
stos
jae
int3
mov
into
imul
xchg
sbb
test
in
jns
cmp
adc
clc
mov
sbb
out
scas
aas
cs
jp
mov
xchg
mov
aad
lret
mov
jnp
push
mov
stos
mov
lret
jecxz
jns
ss
jl
lods
sahf
or
push
lcall
loope
int
test
rorl
stos
lret
jmp
dec
lods
rcr
cwtl
pop
xlat
stos
sub
test
inc
in
lods
out
and
mov
mov
fmull
fucomi
jmp
int
mov
sarl
das
add
inc
mov
pop
int3
leave
or
stos
or
ja
into
fmuls
pop
fwait
int
and
jmp
mov
add
xor
enter
mov
inc
mov
sahf
imul
stc
push
lcall
pop
stos
lea
pop
xchg
scas
js
sbb
cmp
or
mov
jb
scas
shr
fnstenv
mov
rcll
fidivrl
les
push
test
addl
mov
xor
pop
stos
mov
loop
in
push
jae
cltd
lods
dec
cld
cwtl
lret
daa
sub
fcmovnbe
mov
lods
mov
sbb
stos
imul
add
jbe
cmp
stc
sbb
sbb
lret
leave
adc
sbb
cmp
pop
mov
sub
imull
pop
jnp
out
or
stos
les
jne
je
mov
lods
mov
loop
test
jecxz
lods
outsl
inc
adc
call
test
xlat
push
imulb
aas
int3
dec
scas
xlat
cmp
in
cli
inc
cmp
call
ficomps
mov
or
call
in
les
imul
test
sbb
pushf
lret
pop
mov
mov
lret
xlat
mov
fsubs
sbb
stos
sbb
fcoml
aaa
mov
lods
sub
popf
mov
sbb
mov
sub
jmp
inc
cmp
lcall
aas
adc
cltd
test
sbb
jmp
mov
mov
and
ljmp
sub
sbb
mov
inc
pop
lcall
cmp
inc
push
test
xchg
loope
arpl
in
clc
cmp
mov
or
popf
jae
mov
jge
mov
jmp
shll
cmp
fwait
imul
stos
cmp
lock
mov
test
call
push
pop
inc
sti
insl
mov
ss
cmp
jecxz
ss
jns
call
xor
leave
sub
jmp
jmp
fistpll
jnp
sbb
sbb
ljmp
or
dec
or
jecxz
jae
push
leave
in
pop
stc
mov
lret
imul
stc
pusha
jmp
mov
fnsave
jmp
inc
jp
fxch
add
pop
in
rep
mov
mov
xchg
inc
sbb
test
adc
or
or
dec
enter
and
dec
sub
stos
dec
sub
and
add
stos
mov
xlat
fistl
js
inc
dec
ss
ficompl
iret
xchg
popf
loope
mov
push
sub
push
in
fmuls
sub
icebp
ficoms
and
mov
lods
inc
fnstcw
aaa
push
call
mov
mov
sub
cmp
inc
mov
mov
push
xlat
cmp
jnp
mov
fucom
inc
sbb
jns
loop
fdivr
jmp
cmp
roll
enter
and
outsb
pop
mov
aad
fcomps
pop
inc
mov
idiv
cmp
out
or
xor
test
mov
pop
and
leave
imul
scas
fld
sar
imul
mov
mov
subb
ss
cmpsl
jno
and
push
movsl
mov
dec
or
ficompl
call
cmp
push
stos
xor
test
insb
mov
inc
aad
jns
sbb
dec
outsb
or
jne
fistpl
mov
push
xor
fwait
push
testl
add
in
lret
dec
cmp
sbb
cmp
pushf
pop
jmp
push
pop
sub
test
fcompl
int3
hlt
test
pop
mov
pop
ljmp
daa
and
dec
ficompl
das
inc
pop
incb
rol
cmp
imul
jns
inc
sti
cmp
scas
xchg
mov
es
cwtl
mov
cmp
mov
mov
sub
lret
mov
sti
sub
jmp
inc
sbb
dec
imul
cmp
cltd
mov
mov
sub
push
fdecstp
mov
pop
mov
fsubrl
cltd
mov
cmp
dec
adc
jmp
fdivs
fsub
xchg
sbbl
mov
cs
sbb
stc
push
xor
push
sub
enter
mov
mov
test
xor
inc
fldenv
mov
fwait
sub
clc
push
dec
or
decl
cltd
pop
rorl
jg
sarl
cmp
mov
or
arpl
repnz
push
add
mov
mov
enter
lret
dec
fwait
fstps
xor
cmp
push
cmpsl
or
mov
pop
sbb
imul
mov
xchg
mov
cmp
test
testb
fsubs
int3
jnp
cwtl
fimull
xlat
sbb
out
mov
sar
and
xor
cmp
jb
sbb
inc
adc
inc
dec
or
jns
sub
mov
pop
idiv
pushf
push
or
leave
cmp
fs
ja
sbb
jmp
mov
cs
sti
movsb
cmp
cs
rcrl
loop
jmp
cmp
arpl
inc
stos
dec
sti
mov
mov
jns
cmp
jnp
bound
or
cmp
popa
add
movsb
stos
imul
xlat
cli
lods
sub
movsl
pop
sbb
jmp
xlat
mov
pop
stc
neg
sub
xchg
xor
and
jno
and
dec
sbb
adc
add
lret
fstpt
nop
ror
fistl
mov
int3
and
inc
dec
push
ljmp
and
xchg
imul
mov
jb
push
int
dec
pop
ljmp
cmp
clc
test
sub
or
das
inc
jnp
adc
add
cmp
aam
int3
cltd
pop
jl
adc
fwait
sahf
addr16
int3
push
push
stos
out
inc
imul
ljmp
or
cmp
add
into
xchg
or
adc
pop
int3
cmp
into
inc
repnz
cmp
mov
aas
fsubrs
dec
jmp
mov
mov
jge
add
mov
outsl
addr16
mov
mov
or
mov
and
jmp
lcall
pushf
neg
lods
in
push
movsl
sahf
mov
rolb
push
mov
lret
mov
jo
push
clc
call
mov
pop
iret
mov
dec
dec
shrd
inc
dec
jmp
cmp
xchg
scas
insb
sub
in
lcall
sarl
stc
cmp
dec
in
mov
dec
jmp
negb
cltd
mov
adc
lods
adc
in
ss
insl
jne
in
cmp
dec
inc
mov
pop
cmp
dec
sub
pop
push
pop
ja
push
mov
xorl
test
inc
xor
jle
enter
sub
mov
stos
fcmovne
outsb
or
dec
xor
out
cmp
xor
sub
or
dec
stos
mov
fsubrl
lret
inc
outsb
inc
movb
fdivrs
cmp
popa
cwtl
sbb
in
pop
sub
add
push
pop
cwtl
cmp
jo
mov
call
cmp
xlat
int
mov
pop
fadds
mov
fwait
sub
sub
dec
js
sti
sbb
xor
leave
pop
movsb
fsubs
popf
dec
fiaddl
sbb
gs
jo
aam
das
les
repz
test
stos
imul
cmp
cmp
jmp
cmp
pop
mov
call
pushf
mov
pop
sbb
xor
inc
sbb
ljmp
fstl
dec
mov
and
dec
enter
mov
cmp
mov
xchg
int3
imul
nop
xchg
cmp
test
out
aas
dec
mov
sti
fwait
leave
jo
mov
mov
scas
pop
je
adc
lret
cwtl
dec
inc
iret
adc
ret
mov
int
mov
je
mov
imul
stos
xor
test
pushf
and
lcall
cli
pop
jne
mov
push
and
leave
enter
push
push
ja
jmp
mov
cld
dec
fwait
sub
fs
sbb
jbe
mov
in
or
in
adc
fcoms
loopne
or
test
ja
int
imul
mov
cmp
ljmp
add
lods
pushf
sbb
xchg
cli
inc
iret
cs
cltd
cmp
lret
lret
lcall
and
ljmp
cwtl
in
sub
pusha
mov
outsb
in
repz
sbb
sbb
sub
lcall
cltd
jmp
sbb
test
test
push
xchg
jne
sti
add
pop
mov
fmuls
or
push
outsb
dec
pop
test
loop
mov
lods
fnstsw
stos
ret
adc
idivl
fs
test
dec
jns
mov
in
mov
xor
test
cs
cmp
cmpsb
stos
dec
lcall
aas
dec
enter
fidivl
in
cld
mov
fmuls
sub
aas
mov
sub
lret
jnp
and
mov
fisubl
sbb
fdivs
scas
lods
shlb
popf
fidivrl
dec
dec
jmp
rorl
mov
ficoml
dec
outsl
leave
dec
inc
in
stc
std
shrl
movb
sahf
outsl
stos
mov
jmp
or
out
jmp
mov
imul
xlat
inc
lret
lods
mov
cmp
jns
fimull
dec
adc
stos
dec
subl
sub
cmp
leave
add
test
pop
sbb
mov
imul
clc
mov
loopne
test
fwait
call
dec
inc
lods
dec
scas
ja
loope
pop
cmpb
pop
jns
dec
cmp
pop
loop
lcall
sub
fdivrs
adc
fisubrl
in
pop
push
call
test
cmpsl
inc
jns
inc
and
sbb
sti
in
fmuls
adc
push
leave
lods
fdivrl
scas
adc
shll
pop
xchg
inc
stc
lret
shlb
cwtl
cmp
xchg
sub
sahf
xor
inc
fstpl
sub
inc
or
lret
push
cmp
or
jb
aaa
fcmovbe
call
ds
mov
stos
cmp
lret
call
cmc
rorl
push
test
int3
sbb
lods
in
xorl
mul
inc
stos
inc
and
jmp
lret
jmp
add
sbb
arpl
dec
call
jmp
mov
cmp
sarl
xor
mov
imul
mov
loop
xchg
dec
test
fwait
jnp
sbb
or
imul
movsl
jmp
cmp
pop
cmpsl
sub
mov
popf
movsb
cltd
cmp
orb
mov
arpl
in
mov
in
jns
cmp
fwait
add
lea
jno
call
push
dec
lret
add
popa
pop
int3
in
cmp
int3
mov
dec
pushf
sub
cmp
dec
mov
mov
cmp
sub
push
pop
and
into
adc
mov
jns
and
ss
cld
sub
jmp
pop
add
sub
cmp
int3
nop
and
inc
sub
mov
sub
add
push
mov
cli
cmpsb
into
mov
ret
xchg
sub
test
cltd
in
pop
lea
mov
cmp
mov
or
movsb
mov
popa
sbb
jmp
mov
inc
leave
pop
shll
mov
stos
in
mov
test
and
test
add
cmp
in
mov
sub
out
cmp
or
pop
cmp
fdivrp
movsl
fidivrl
adc
stos
mov
sub
inc
in
lcall
test
cmp
imul
cs
das
and
rclb
inc
dec
out
imul
leave
cltd
mov
enter
inc
seto
cld
cwtl
mov
or
xchg
cmp
mov
sub
ror
imul
and
dec
out
inc
mov
and
imul
push
les
dec
in
add
divl
cmp
fwait
mov
or
fs
test
daa
mov
hlt
adc
cmp
xor
cli
subb
lods
or
insl
imul
mov
sub
sbb
fwait
adc
sub
or
xchg
cltd
push
or
and
or
cwtl
add
in
fcompl
loope
xor
sbb
test
loope
cmp
cmp
pop
and
pushf
call
cld
pop
xlat
mov
enter
bound
fnstcw
mov
cli
sbb
test
fcomp
sti
mov
or
popf
mov
rorl
cmpsb
lods
divl
push
leave
inc
or
dec
int3
in
arpl
imul
cmp
out
popa
lret
fcoml
sub
sbb
and
sub
pop
xchg
cwtl
add
scas
add
mov
and
xor
out
xor
sbb
xor
sub
dec
call
mov
in
out
out
in
out
test
fwait
sbb
popf
jnp
and
loop
jns
test
shll
pop
ljmp
add
ja
jb
add
into
stos
outsl
fmul
inc
stos
imul
cmp
mov
lret
cmp
call
push
pop
inc
stos
cmp
cwtl
into
inc
int
enter
sbb
test
imul
jbe
xchg
adc
sub
lret
push
adc
mov
sti
push
pop
add
xchg
call
dec
inc
insb
ja
cmp
sbb
cs
fucomip
mov
ja
xor
mov
pop
pop
cmp
sub
movsb
pushf
adc
subb
cli
movsl
stos
sub
pop
lcall
xchg
and
lret
in
outsb
jmp
int
mov
lret
push
mov
sub
bound
inc
popf
and
test
adc
mov
add
pushf
loop
pop
xor
lret
mov
loope
jns
sbb
testl
aaa
lret
push
or
inc
dec
lods
mov
movsl
arpl
jne
mov
enter
lcall
mov
pushf
enter
dec
sti
dec
test
push
push
ja
mov
jno
mov
xchg
push
cld
mov
sbbb
ficomps
xor
sub
imul
and
push
cwtl
push
loope
in
or
lods
fsub
mov
jne
dec
rorl
stos
sbb
imulb
arpl
in
jnp
jmp
in
das
stc
xor
js
stos
or
test
pop
dec
cmp
in
daa
cmc
cmp
pop
sub
sbb
in
push
pushf
in
jo
pop
add
mov
dec
cld
popa
lea
and
outsb
jnp
push
cmp
ja
pop
gs
fdiv
xor
or
sub
mov
fildl
sti
mov
fsubl
test
cmp
ret
mov
adc
add
ljmp
fcmovne
shll
or
in
sti
mov
and
cwtl
test
lcall
int3
cld
cmpsl
cwtl
or
test
sub
stos
stos
dec
mov
popf
mov
xor
sbb
and
dec
bts
inc
mov
adc
cmp
fisubrl
int3
faddl
aam
xchg
jmp
dec
ss
jbe
orb
push
push
mov
cwtl
fldcw
pop
and
sub
mov
jbe
adc
call
adc
xor
mov
dec
or
les
mov
icebp
adc
mov
lock
dec
aas
jmp
jae
add
sub
inc
test
jle
jns
cld
mov
fcoml
mov
addr16
sti
add
inc
xchg
lret
in
je
mov
popa
mov
movl
cmpl
xchg
lret
pop
cltd
and
enter
push
stc
xor
ja
cmp
pop
jl
mov
sbb
negl
mov
mov
cmp
cmc
ljmp
outsb
adc
jb
popa
outsb
add
cmc
cmp
xlat
lds
inc
and
mov
adc
test
mov
fildl
cmp
xchg
lcall
push
pop
mov
in
dec
std
roll
xchg
rorl
mov
inc
inc
cmp
mov
iret
fistl
imul
int
cltd
xchg
xor
scas
pop
inc
sahf
movsb
cmp
pushf
mov
jbe
sub
or
imul
push
dec
jns
in
fnstcw
ss
arpl
adc
mov
fwait
jns
mov
xchg
xor
ret
mov
fs
mov
dec
mov
xor
fldln2
cmpsl
xor
data16
jb
adc
sbb
fstpt
lret
sbb
stc
cld
xchg
adc
imul
pop
stos
jns
jne
sbb
inc
cmp
sub
cmp
mov
jae
cli
and
mov
outsl
adc
imul
ret
stos
xchg
dec
cld
pop
stos
inc
je
ljmp
test
mov
nop
int3
cmp
push
sbb
dec
dec
add
cwtl
lods
imul
push
in
mov
mov
mov
cmp
dec
test
cmp
sbb
push
call
add
jmp
cld
fucompp
jb
scas
insl
push
outsb
test
fsubl
inc
inc
push
inc
and
sub
mov
push
clc
cmp
fisttpll
mov
jge
lods
adc
fcomp
sub
fisubrl
mov
mov
or
sub
pop
and
imul
imul
int3
sub
sub
inc
test
pop
jns
ljmp
jne
int
mov
mov
pop
mov
jmp
faddl
cwtl
pop
mov
jae
dec
jbe
js
jmp
dec
aad
stos
dec
mov
add
bound
call
jnp
sub
in
popf
cmp
jmp
mov
sbb
push
int3
or
cltd
cmp
sub
dec
ja
pop
mov
test
xor
mov
sub
fsubrl
jb
xchg
outsb
arpl
mov
enter
in
sti
test
ret
or
mov
ret
lcall
xor
dec
cmp
into
mov
cmp
sbb
repz
sub
inc
call
or
test
dec
and
outsb
cmp
pop
gs
jmp
aam
inc
sarl
dec
imul
loop
mov
cmp
mov
popa
imul
mov
jmp
sbb
test
jnp
fcmovb
cmp
sub
sbb
add
add
mov
int3
in
test
add
lods
sub
cmp
ja
mov
test
dec
enter
sbb
faddl
imul
push
or
pop
bound
aad
jns
fnstsw
inc
jbe
lahf
loopne
xor
sub
pop
or
cmp
dec
cmp
jecxz
mov
mov
cmp
stos
push
cmp
dec
add
pop
je
lods
js
mov
pushf
inc
cmp
aaa
mov
pop
test
mov
push
sub
loope
and
cmp
fdivrl
push
inc
leave
popa
das
cltd
fcomps
sahf
and
pop
stos
mov
iret
mov
xor
cltd
lret
xchg
or
ljmp
pop
jae
cmp
cli
sti
stos
mov
roll
mov
inc
cmp
cltd
femms
jmp
cmp
jnp
add
ja
jge
xor
jmp
pop
idiv
ret
fsubl
sbb
scas
icebp
mov
pop
and
push
mov
jmp
mov
stos
inc
sub
cmp
cmp
test
push
cld
cmp
faddl
lret
ficompl
push
cmp
dec
cmp
mov
pop
lods
mov
scas
insb
andl
icebp
pop
test
sub
sbb
sub
mov
sbb
movsb
loope,pn
icebp
arpl
iret
movsl
or
mov
jne
sbb
int3
mov
mov
pusha
fldcw
push
stos
fs
sbb
das
mov
test
pop
scas
pop
ja
test
test
lods
dec
cwtl
or
mov
inc
sbb
call
mov
pop
imul
cli
or
cmp
sub
imul
movsl
imul
pop
fsubl
test
jae
in
mov
ret
test
in
lret
cli
sub
cmp
lahf
imul
or
popf
jmp
mov
clc
pushl
sbb
pop
shll
pop
cmp
push
and
imul
aam
and
imul
pop
cwtl
jmp
out
enter
lcall
stos
cmp
pop
sub
mov
lret
sub
das
imul
fwait
and
cmp
and
add
in
adc
imul
inc
and
cltd
mov
dec
or
imul
xchg
std
into
stc
shl
sbb
mov
dec
mov
inc
fsubrs
dec
jae
outsb
test
or
xchg
test
aas
inc
cli
adc
pusha
push
mov
movsl
xor
jnp
push
xlat
cmp
testl
cmp
sbb
int3
mov
js
and
stos
lret
ljmp
mov
sub
xchg
lret
fcoml
inc
stos
sub
or
push
stos
lock
sti
inc
sub
sahf
movsb
dec
cs
cwtl
cmp
jno
or
cli
popf
test
fdivl
test
push
inc
aad
test
loope
popf
ds
fcoms
mov
add
call
scas
or
cmp
xchg
mov
outsl
and
test
sub
imul
cmpl
xchg
in
mov
sbb
outsb
clc
stos
pop
jmp
test
imul
sar
lock
imul
popf
js
lcall
mov
mov
jno
sbb
leave
cmp
push
xchg
sub
or
push
cwtl
fwait
out
aaa
sbb
dec
or
mov
cmp
mov
stos
add
in
jns
mov
sbb
mov
test
fadds
mov
stos
stc
call
int3
mov
insl
outsb
sub
pop
push
mov
add
lcall
cmp
cmp
ljmp
lcall
cmp
loopne
and
sub
stos
pop
std
push
sub
dec
int3
add
stos
pop
pop
jecxz
xchg
scas
xlat
or
int
enter
repz
int3
push
pop
lcall
in
fdivrs
jle
cmp
xchg
mov
mov
in
icebp
sbb
and
and
iret
stos
adc
cmp
lret
cmp
lcall
movsl
daa
sbb
jmp
icebp
repnz
xor
xor
mov
and
cmp
lods
xor
cmp
cltd
cmp
pushf
sti
xlat
int3
dec
gs
jne
pop
in
in
mov
mov
aad
mov
or
outsb
fs
sbb
call
fwait
mov
jns
cmp
shl
inc
mov
insb
mov
sub
sub
enter
stos
xorb
inc
jbe
mov
push
call
jns
sbb
mov
inc
inc
pop
mov
xchg
dec
lods
xchg
int3
aaa
jns
popf
ret
sbb
cmp
fsubr
xchg
lds
jns
xchg
pop
gs
push
outsl
imul
cmc
cmc
mov
cs
scas
lods
push
out
lcall
iret
loopne
mov
cld
dec
rcr
mov
inc
jb
jo
pop
sti
fdivp
dec
jbe
stos
xor
stos
pop
push
mov
mov
cld
xor
cltd
movsb
pop
mov
int
cmp
cmp
jnp
dec
clc
movsl
imul
dec
push
out
jmp
lods
mov
imul
sbb
mov
das
sar
sub
in
mov
out
pop
lcall
sub
xor
mov
outsl
outsb
mov
pop
ljmp
loop
pop
std
push
in
push
lret
daa
pushf
sub
pop
and
mov
and
call
stc
mov
imul
rcr
sbb
movsb
or
cltd
stos
fsubrl
add
cmp
dec
outsb
push
xlat
loope
pop
or
sbb
fstpt
add
cmpsl
mov
sahf
jl
mov
cmp
xlat
in
add
fwait
cmp
sbb
jle
cmc
sbb
cltd
cwtl
or
test
push
dec
cli
add
inc
into
iret
adc
cmpsb
or
shll
cmp
out
pushfw
call
jecxz
dec
sti
cli
into
cwtl
movsl
mov
call
dec
das
mov
stc
cld
xor
jmp
scas
lcall
in
and
dec
fwait
mov
cwtl
sub
dec
inc
out
and
cmc
sahf
call
or
add
leave
push
push
inc
lahf
das
imul
pop
movsl
cmp
in
std
cmc
pop
mov
das
pop
lret
pop
lret
push
flds
pop
mov
mov
std
pop
mov
subb
call
or
and
dec
test
or
jne
pop
leave
cli
or
sarb
repnz
test
pop
ja
pop
notl
jnp
xchg
sti
dec
outsb
sub
lret
daa
mov
xchg
add
cmp
imul
insl
stos
in
xchg
or
clc
cltd
sbb
cmp
shrl
pop
hlt
cli
inc
call
mov
bound
push
pop
test
fisubl
pop
mov
ret
dec
mov
xlat
push
xor
call
cmp
daa
cmp
cltd
adc
enter
fcoml
inc
in
sbb
mov
cld
int
pop
dec
lcall
sbb
addb
int3
lods
pop
arpl
sbb
rcl
pushf
mul
pop
fcomp
mov
mov
jp
adc
cmp
fdiv
xor
fwait
cltd
xor
sahf
inc
loope
xor
cmp
mov
add
stos
fsubrl
dec
into
pop
cmp
fmulp
repz
xchg
cld
cmpsl
movsl
cmp
mov
inc
faddl
sar
fldt
lret
out
movsl
pusha
add
test
pop
cmp
mov
leave
scas
stos
pop
mov
lcall
in
fnstenv
inc
pop
roll
test
mov
mov
lcall
pop
jns
aad
cmp
jmp
mov
sub
sub
sbb
dec
stc
sbb
in
pushf
push
adc
pop
mov
xor
leave
cmp
in
int3
push
cld
mov
imulb
fisttpl
sahf
xlat
idivl
inc
dec
leave
dec
lods
test
mov
dec
fmuls
dec
fsubl
jns
outsl
repnz
push
adcb
incb
sti
test
mov
stos
fldenv
cli
mov
mov
cmp
pusha
call
repnz
ret
das
int
call
adcl
sahf
cmp
dec
xor
popf
jbe
cmp
fisttpll
jns
daa
in
mov
jne
mov
cs
jle
fidivs
pop
fwait
mov
sub
dec
test
cmc
mov
pushf
push
int
enter
and
jmp
stc
xor
cli
mov
sbb
stos
mov
adc
sub
leave
outsl
xchg
cmp
jle
stos
imul
add
xor
test
hlt
shrl
dec
fucomi
out
xchg
sub
stc
sbb
inc
mov
pop
mov
sbb
enter
pop
cli
fprem
push
aad
imul
push
test
lds
sti
mov
and
call
ljmp
lahf
imull
lcall
enter
sti
mov
cmp
outsl
test
xlat
inc
dec
sbb
jmp
dec
cld
enter
test
sahf
leave
pop
ss
adc
jbe
std
dec
and
cltd
imul
scas
fildll
push
dec
add
xor
cmp
inc
mov
in
pop
pushf
mov
mov
mov
inc
jns
mov
add
mov
mov
enter
lret
stos
or
loope
shll
pusha
icebp
dec
xor
and
leave
cmp
clc
and
mov
mov
and
fimull
test
test
pop
jle
nop
sbb
test
nop
mov
addr16
mov
inc
test
fdivrl
jns
outsb
jo
testb
adc
in
pushf
mov
int
lret
sbb
movsl
lret
loope
sub
mov
dec
fistps
das
call
and
ja
pop
and
and
inc
mov
sbb
fistpl
sub
mov
test
jmp
dec
imulb
repz
pop
xor
pop
bound
mov
xchg
sbb
movsl
jns
lods
mov
pushf
sbb
enter
stc
fimull
xlat
test
clc
outsb
int
pop
ljmp
cmp
xor
pop
lock
test
cmpsb
pop
or
notl
and
sub
cmovne
cwtl
jne
jl
mov
cmp
lret
pushf
fsubr
mov
mov
inc
cmp
and
repz
sahf
push
mov
fs
fcomp
mov
adc
sub
lret
leave
pusha
hlt
jbe
inc
icebp
fdecstp
dec
gs
out
ja
ljmp
sub
stos
shll
mov
or
push
lret
imul
or
arpl
xchg
inc
xchg
test
sbb
fisttpl
pop
outsb
sub
sbb
jbe
sti
fisttpll
test
stos
sbb
push
pushf
fdivs
push
dec
mov
scas
sub
shrb
sarl
cli
jmp
outsb
pop
ljmp
pop
imul
jmp
push
and
clc
arpl
sbb
xchg
lods
cmp
add
lock
push
popf
sub
pop
jne
fwait
mov
icebp
jge
leave
test
dec
jbe
xor
fldenv
sbb
dec
fwait
das
and
sbb
lret
mov
ljmp
stc
sahf
fcmovnbe
out
in
pop
ss
dec
ss
pusha
outsl
mov
pop
cmp
repz
pop
leave
addr16
pop
cs
lcall
sub
mov
add
test
fdivl
cld
imul
inc
nop
test
fwait
mov
xchg
test
dec
dec
push
inc
jns
pop
negb
stos
cmpsb
int3
sti
outsb
fisubrl
mov
mov
rolb
pop
pop
dec
dec
push
fisubs
ljmp
sbb
xor
lret
std
sub
or
xchg
add
sub
push
sti
push
sub
sub
cmp
or
or
adc
fstpt
xchg
ja
pusha
callw
jmp
stos
gs
sub
int3
lahf
sub
and
mov
ds
lock
call
in
lcall
popf
xlat
fdivl
mov
aas
pop
inc
cmp
in
sub
stc
cmp
lods
iret
cmp
fucomi
aam
loop
sub
lret
fld
fs
call
daa
clc
add
or
leave
add
sbb
stos
xlat
sub
dec
stos
clc
cwtl
fmull
pop
stos
pop
insb
fildl
mov
into
cld
sarl
fdivrs
mov
rcrl
stos
or
mov
loope
loope
fnsave
mov
mov
or
fldcw
mov
test
ljmp
mov
rorl
scas
in
iret
pushf
int
stc
rorl
or
loope
popf
cmp
leave
cli
mov
stos
pop
jp
jb
xor
stos
mov
dec
fnstcw
lods
jnp
movsl
outsl
ljmp
dec
xchg
xchg
jno
or
addr16
movsb
pop
cmp
enter
sub
xchg
cli
leave
cmp
jecxz
stc
call
mov
sbb
adc
cmp
pop
add
inc
int3
pushf
in
stos
mov
cmp
push
popf
lods
ds
mov
aas
cmp
test
mov
sbb
call
imul
movsl
mov
cmp
sbb
scas
mov
pop
out
jns
aas
push
sub
lcall
fwait
lods
fisubrs
mov
ret
cmovne
test
jg
cmp
fnstenv
push
push
mov
inc
test
push
mov
mov
pop
push
idivl
emms
adc
clc
cmp
daa
adc
fstpt
in
pop
sub
xchg
cmp
cmp
sahf
inc
pop
movsb
das
jne
lods
fmull
sti
mov
sbb
stos
cmp
sub
sbb
cmp
ds
mov
insb
dec
sub
push
enter
pop
mov
cli
add
cmpsl
test
sbb
sti
mov
add
mov
push
stos
enter
inc
fidivrl
mov
cltd
cmp
lret
fsubl
pmulhuw
cwtl
outsb
ret
pop
cmp
loopne
cs
sbb
jnp
test
mov
insb
push
sub
lret
dec
popf
lret
loop
and
imul
lods
cmp
add
les
stc
cltd
xchg
pop
push
mov
add
out
aas
xlat
movsb
sbb
movsl
pushf
test
mov
das
in
stc
clc
jae
popa
inc
cmp
mov
dec
mov
mov
cwtl
pushf
iret
or
cmc
inc
ja
in
pop
adc
cwtl
xchg
imulb
dec
mov
sub
jmp
pop
in
and
add
add
outsl
dec
xor
mov
and
cmp
cs
mov
xlat
gs
insl
cltd
roll
call
sbb
and
sub
int3
loopne
fnsave
cld
in
mov
jmp
clc
mov
scas
or
xchg
or
dec
out
fisubrl
mov
adc
push
out
sti
lds
pop
dec
cmp
inc
cmp
jno
cwtl
inc
imul
mov
jns
cmp
sub
jbe
fdivrs
cld
enter
or
xchg
sub
inc
xor
sub
xchg
mov
pop
stos
mov
mov
lret
dec
jns
and
lods
mov
mov
pushf
mov
mov
sub
int
add
addr16
and
jno
stos
pusha
cmp
sub
mov
xchg
fstpt
in
pop
lds
pop
or
nop
lahf
dec
mov
sub
xor
stc
stos
daa
shll
xchg
outsb
pop
sub
jecxz
and
inc
or
mov
dec
cmp
pop
scas
cwtl
and
ds
lods
test
movsl
in
cld
aad
fcoms
xor
hlt
out
ret
dec
jo
testb
adc
mov
lea
test
mov
or
mov
jp
stc
dec
jnp
add
sarl
mov
stos
lret
fmul
adc
shrb
jne
sbb
mov
sub
iret
pop
and
mov
pop
nop
movsb
sub
lcall
cld
enter
cli
stos
mov
call
out
jns
cld
movsl
cmp
cmp
in
dec
out
sub
cmp
sbb
pop
int
jmp
dec
mov
push
sub
jae
test
add
ss
pusha
sub
dec
mov
jmp
adc
in
mov
std
pop
test
mov
fwait
mov
push
adc
pop
testb
incl
jl
aas
fcmovnu
mov
lcall
mov
pop
push
ds
enter
cmc
cmp
or
xchg
mov
stos
pop
cmp
jnp
mov
bound
adc
lret
mov
aad
sub
mov
adc
push
adc
pop
cmp
fwait
mov
mov
stc
jmp
lods
sub
inc
ljmp
mov
test
sub
mov
mov
jle
dec
add
mov
mov
adc
cld
leave
inc
popa
clc
pushf
ds
mov
mov
call
fcomps
sti
jb
aam
pusha
adc
int3
mov
pop
mov
fsubr
aas
xchg
lock
scas
leave
shrl
dec
jne
mov
int3
dec
int
test
lcall
int
stos
insb
dec
pop
mov
jmp
cmp
sbb
mov
mov
jmp
cmp
leave
pop
lret
mov
in
add
das
xchg
or
pop
jo
mov
lcall
ljmp
cltd
inc
mov
pop
add
xlat
aaa
data16
adc
or
adc
stos
mov
lods
dec
mov
mov
xchg
dec
stos
pushf
mov
mov
and
sub
mov
push
mov
test
sbb
cli
xor
pop
divl
addb
cs
in
cmp
add
stc
xchg
sbb
hlt
cli
jbe
jge
mov
mov
xor
cmp
int3
fwait
inc
dec
jmp
cmp
insb
in
nop
sub
mov
popa
mov
add
adc
leave
lea
ret
arpl
filds
dec
cltd
rcll
xchg
pop
dec
dec
mov
call
fmuls
inc
test
push
jmp
sbb
ljmp
and
pop
leave
cmp
sub
xor
leave
fwait
cmp
or
repnz
into
divl
int
imul
sub
stc
pushf
leave
push
jl
jo
lret
int
enter
mov
xchg
subl
cmp
outsb
mov
inc
jmp
cli
dec
fldenv
daa
cmc
adc
lea
outsb
mov
clc
sbb
xor
jecxz
add
rcrb
in
sub
mov
lahf
into
mov
sub
leave
push
xchg
addr16
add
or
cmp
imul
jecxz
xlat
or
mov
pop
outsb
out
add
stos
adc
jmp
sti
cmp
cld
fimuls
sub
or
jbe
stos
mov
test
cmp
sub
addr16
sub
fcmovne
fiaddl
fwait
xor
ss
and
jns
lods
lret
sbb
sti
stos
jne
call
sbb
loope
pusha
push
push
fsubr
push
fnstcw
mov
adc
cltd
in
test
push
fwait
cli
lods
orb
push
inc
js
inc
xlat
lret
mov
mov
cld
xor
sub
sub
dec
cmp
xlat
and
mov
lods
movsl
add
xchg
dec
xchg
xlat
inc
cmp
dec
push
sbb
sub
and
jmp
ljmp
mov
imul
in
aas
in
dec
fldt
mov
data16
mov
sbb
scas
fisubrl
cmp
sbb
and
dec
cmp
and
test
stos
mov
sbb
lret
adc
call
popa
mov
lret
cmp
pop
clc
imul
adc
in
xchg
and
lret
lds
test
and
mov
xchg
clc
cmp
aas
and
mov
call
sub
subl
lret
mov
mov
cmp
pop
cs
sbb
jge
push
cmp
stc
pop
in
ret
adc
push
mov
dec
test
test
cltd
lret
popf
cld
pushf
fsts
inc
dec
adc
cwtl
dec
fcompl
movsl
add
jmp
movsb
push
dec
sub
cmp
stos
imul
stos
fwait
cltd
sbb
fldl2t
dec
add
or
hlt
daa
dec
in
std
ja
movsb
and
sub
lea
xor
outsb
jne
xchg
mov
into
sub
mov
pushf
in
fld
sub
cmp
mov
inc
push
or
push
lahf
leave
loop
fstps
fcompl
movsl
movsb
int
dec
stos
rcrl
mov
in
push
pop
jns
sbb
jge
jmp
mov
cs
imul
jne
or
xor
sub
lcall
xchg
sub
cld
and
jecxz
scas
sti
scas
pop
nop
inc
int
andl
cmc
daa
mov
push
clc
incl
cmp
in
sbb
inc
mov
fsubrs
xor
lods
popa
mov
ja
cmp
jg
mov
cmp
xchg
sub
jl
data16
imul
cltd
xchg
cmp
test
out
pop
pushf
and
mov
mov
pop
mov
mov
and
lret
movsb
mov
mov
pop
jecxz
call
mov
dec
mov
or
dec
mov
jmp
add
pop
cmp
mov
fsubl
cld
dec
je
mov
inc
or
ljmp
lret
sbb
pop
adc
push
mov
test
arpl
push
jo
and
lret
popf
icebp
fs
mov
mov
add
mov
pop
dec
add
push
or
imul
jnp
rcl
jl
icebp
cld
in
cmp
dec
lock
and
jp
orb
push
mov
mov
jbe
cltd
dec
lcall
mov
in
fwait
inc
popf
popa
inc
je
lods
test
movsb
lret
out
cmp
mov
jnp
cs
adc
imul
sbb
das
les
adc
mov
or
insb
subb
mov
sbb
enter
shll
mov
inc
das
or
aas
loope
cmp
jne
enter
stos
sbb
inc
inc
cmp
in
stos
adc
mov
and
in
scas
hlt
sahf
and
mov
mov
mov
lret
stos
shr
loope
push
sbb
leave
xchg
ficomps
fildl
test
cmp
adc
roll
popa
lcall
push
sub
call
adc
sbb
pushf
or
cmpsl
stos
mov
mov
hlt
pop
das
fsubrs
ljmp
mov
test
mov
lcall
call
pop
dec
das
out
dec
lods
test
in
jnp
mov
mov
push
test
or
push
adc
jmp
pop
movsb
test
mov
cmp
cwtl
mov
stc
icebp
test
jnp
dec
data16
sub
jbe
xchg
lds
lret
ljmp
ss
pushf
imul
cltd
stc
push
imul
mov
fcmovnbe
mov
inc
dec
lret
lods
adc
cmp
sub
fcoml
lods
dec
aam
pop
pop
cmc
jmp
lret
sub
and
cwtl
add
jbe
mov
int3
dec
imul
pop
sbb
stos
mov
pop
cmp
mov
imul
stos
in
imul
inc
mov
and
cmp
dec
inc
sbb
out
fldcw
and
pop
dec
mov
movsl
cmp
push
add
cmp
pop
push
cmp
ret
xor
stos
stos
stos
cld
lcall
lret
sti
and
dec
inc
fs
movsl
cmp
cwtl
fldl
icebp
in
mov
mov
cmp
outsl
outsb
pop
pop
jg
sub
cmp
cmp
and
mov
add
jnp
inc
pop
cmp
inc
xlat
clc
nop
in
xor
and
int3
mov
dec
push
inc
pushf
subb
jg
je
mov
mov
sub
test
adcb
cmp
lods
imul
sub
mov
test
cmp
mov
pushf
sub
cmp
fs
call
xchg
cmp
pop
jmp
cwtl
mov
mov
and
xchg
add
rsm
mov
cmp
sub
or
push
sub
repz
cmpl
jns
fcmovnb
insl
push
xor
sbb
sub
mov
leave
lea
ds
sti
ret
cmp
mov
or
sahf
lods
jl
mov
sub
mov
imul
xchg
dec
repz
sarl
arpl
dec
scas
cld
add
mov
push
jns
enter
mov
jnp
and
adc
xor
mov
inc
in
imul
cwtl
int
jmp
popf
bound
pusha
call
or
sub
loop
cmpsb
mov
mov
fdivrs
lret
ror
push
pushf
in
scas
enter
insb
mov
adc
lret
dec
stos
lcall
xchg
cmp
pop
and
in
fsubs
mov
enter
fmuls
test
pop
pushf
sub
cmp
in
imul
mov
push
sub
mov
xor
push
mov
das
rorb
fstpt
test
xchg
lret
dec
enter
inc
in
shl
pop
imul
push
sub
fldcw
pushf
cmp
xlat
test
mov
adc
or
or
inc
pushf
mov
ljmp
sub
test
fcmovne
jbe
mov
test
mov
mov
inc
iret
clc
jns
inc
fwait
mov
lods
ss
aad
fcmove
inc
mov
sub
jl
mov
cli
imul
sub
mov
daa
add
push
sub
out
fptan
in
cmp
add
in
fcoml
lret
lods
cli
push
fcos
mov
ljmp
pushf
and
fcoms
enter
push
cmp
test
sahf
and
ss
loope
data16
xor
or
dec
testl
outsl
outsb
call
stos
cwtl
je
hlt
pop
cmp
leave
jns
shll
or
and
sub
cld
xchg
cwtl
lret
pushl
add
xchg
in
mov
pop
cmp
pushf
add
cmpsb
sub
mov
dec
pmaxsw
adc
ficomps
test
pop
xor
loop
das
enter
dec
xchg
jo
fbld
jge
fdivs
or
sub
xchg
lret
add
imul
push
adc
imul
jmp
out
testl
lcall
jp
lds
mov
mov
cltd
lcall
cmp
outsl
jmp
stos
test
fs
sub
and
mov
sub
cld
sbb
test
jmp
fadds
lret
ret
fildl
add
data16
jmp
testl
pop
cmp
mov
aas
mov
adc
push
mov
xor
or
mov
mov
and
ljmp
int3
dec
mov
stos
mov
outsb
enter
js
fldl2e
cmp
adc
or
sahf
inc
cmp
xor
jns
les
sub
daa
mov
mov
inc
sbb
in
clc
mov
sub
icebp
stos
pusha
out
test
xchg
aad
sti
scas
jecxz
fcompl
xchg
leave
mov
cli
mov
push
mov
mov
inc
inc
sub
cwtl
sbb
push
fstp
test
dec
imul
lret
or
test
movsb
in
cmp
mov
imul
lret
xor
mov
int
cmp
cmp
xor
sub
hlt
cmp
cmc
and
sbb
outsb
dec
add
mov
pop
jmp
sti
mov
jne
xchg
or
fcmovne
xorl
push
in
sbb
cmp
pop
out
stos
dec
scas
add
and
shll
jmp
jmp
mov
sub
sbb
cmp
or
stos
ljmp
inc
or
cmp
shrb
clc
sub
lret
leave
pop
dec
test
lea
enter
cltd
fcmovbe
cltd
dec
mov
mov
xchg
enter
push
sub
cli
push
in
jns
add
push
inc
xchg
movsl
fldl
pop
cmp
lret
cld
xchg
mov
loope
stos
mov
sub
movsl
mov
stos
test
mov
jbe
or
mov
lods
adc
into
dec
loop
mov
dec
sub
inc
push
adc
pop
icebp
push
in
clc
mov
fmull
or
fimull
lods
mov
mov
cmp
loop
and
mov
push
cli
not
testl
cli
dec
popa
dec
dec
mov
sub
fldcw
stos
jmp
dec
add
push
dec
shll
mov
mov
push
fwait
inc
cmp
mov
pop
jecxz
push
dec
pop
cmp
outsb
mov
or
sbb
js
dec
xlat
pushf
js
jmp
fidivrl
push
jbe
rep
pop
idiv
inc
cmpsb
dec
mov
jne
or
ja
xchg
inc
push
xchg
loope
dec
lcall
mov
mov
stos
push
jbe
pop
dec
mov
jle
stos
mov
ret
fldcw
loop
mov
test
iret
imull
int3
cwtl
test
test
imull
sbb
pushf
sahf
stos
mov
popa
test
sub
dec
sub
fidivrl
sub
test
mov
fwait
and
mov
jecxz
and
push
imul
test
inc
fdivl
mov
cli
cmp
sub
mov
scas
adcb
pop
rol
and
fldcw
insb
cltd
and
cmp
sbb
lahf
stos
int3
leave
and
pop
repnz
push
sub
leave
cmp
push
pop
jns
add
insb
fsubrl
add
add
dec
adc
or
out
subb
movsl
stc
jmp
add
data16
fwait
xor
mov
insb
or
call
dec
test
cmp
dec
dec
cltd
mov
pushf
dec
mov
push
ljmp
jmp
xor
dec
loope
pop
in
add
push
jmp
pop
mov
int
cld
inc
cmp
aam
sub
xchg
fidivrl
cwtl
add
xchg
push
adc
and
and
sub
push
mov
int3
je
dec
sbb
push
dec
negl
mov
xchg
pop
lret
mov
push
call
adc
fcomi
dec
mov
jae
pop
lds
test
pushf
cmp
cmp
jnp
ss
cmc
and
lock
cmpsb
clc
cld
mov
ret
rcll
imul
pop
fdivrl
cwtl
mov
lcall
aad
int3
jmp
and
fdivrl
fidivrl
in
popf
dec
cli
out
int
imul
cmp
ljmp
inc
cmp
cmp
clc
sub
adc
inc
mov
mov
mov
cmp
pop
cld
ljmp
push
xor
sub
enter
fwait
lock
scas
mov
mov
xchg
clc
lods
aas
leave
dec
fcomps
adc
mov
mov
mov
mov
mov
cltd
pop
das
inc
cmp
clc
test
sub
fmuls
cmp
ja
sub
inc
in
shlb
sbb
fisttpl
fcoml
aas
or
mull
xchg
sub
sub
or
enter
cli
dec
ja
cmp
sbb
fcmovnbe
adc
mov
imull
adc
sub
cmp
add
and
xchg
imul
xchg
cmp
jle
mov
sbb
push
or
in
call
in
or
push
cwtl
dec
pop
add
clc
sti
sbb
fmul
test
mov
push
xchg
lea
push
mov
mov
adc
pushf
sar
sbb
out
stc
orb
inc
scas
movsl
adc
sti
mov
jmp
cltd
insl
pop
ljmp
mov
sub
pop
cmp
lods
stos
test
fmuls
mov
popf
mov
xlat
sub
fwait
cli
fdivrs
pushf
jecxz
sub
sub
cmp
pop
push
cmp
lcall
inc
jbe
lahf
and
call
pop
sub
mov
ljmp
mov
leave
dec
mov
orb
mov
jnp
flds
xor
mov
punpckhwd
xchg
int3
mov
inc
fisubrl
hlt
xlat
inc
xor
cmp
cmp
cmp
pop
fldl
add
jae
dec
into
lea
xchg
jb
pop
sub
lods
cmpl
clc
cli
sbb
jo
cmp
mov
sub
ss
aam
xor
jmp
sbb
mov
xchg
mov
dec
push
xchg
lods
outsb
sbb
xchg
push
das
dec
test
lods
movsl
mov
sbb
push
fnstcw
push
xchg
push
out
sub
and
fcomps
insb
pop
sarl
jmp
scas
imul
jge
scas
fsubr
loop
enter
jecxz
leave
ret
adc
jmp
inc
add
dec
stos
jns
mov
mov
int3
mov
mov
and
mov
or
fldcw
jmp
dec
loope
fsubs
leave
test
push
sbb
inc
cld
scas
movsl
movsl
stos
jnp
int3
std
repnz
mov
sub
leave
rorl
jle
shrb
daa
cmp
ljmp
lods
mov
mov
daa
es
and
cltd
dec
sbb
cld
mov
inc
sub
imul
fadd
in
pushf
int
cmp
cmp
frstor
or
sbb
jmp
sub
sub
or
cmc
sti
mov
fnstcw
addr16
clc
cmp
sub
jmp
mov
lods
mov
mov
sbb
dec
cwtl
lcall
pushf
cmp
dec
dec
cmp
mov
cmp
cmp
in
mov
sahf
test
mov
cltd
das
add
sub
dec
jmp
enter
inc
cmp
movsb
dec
sbb
int
cmp
jmp
jp
in
push
cmp
mov
pusha
sub
push
pop
sub
inc
call
jb
mov
sbb
test
lcall
sub
test
mov
mov
leave
stos
push
int
cld
dec
fstpt
out
in
cmp
test
adc
sbb
fstps
int3
jno
inc
or
mov
movsb
addl
or
subb
lret
stos
sub
add
dec
xchg
push
adc
in
in
in
inc
sub
jmp
lret
leave
int
sti
popf
inc
stc
cwtl
lcall
mov
outsb
scas
stos
sub
cmp
enter
lcall
push
data16
imul
imul
hlt
repz
lods
add
inc
xchg
mov
add
pop
or
pushf
imul
dec
push
test
or
lods
stc
ljmp
repnz
enter
je
or
outsb
cwtl
mov
leave
testb
dec
fwait
inc
cmc
imul
pusha
cmpsl
stos
jb
leave
mov
stos
clc
shrl
js
mov
and
call
pop
fcompl
daa
dec
xchg
hlt
fisttpll
jbe
int3
fcmovne
mov
dec
push
cs
fwait
mov
out
in
and
add
in
sub
cltd
subb
in
stc
in
ljmp
lods
dec
je
test
add
test
fisubrl
lcall
cmp
leave
js
test
mov
xlat
call
fisttpll
movsl
sbbb
ja
dec
xlat
lcall
stos
inc
mov
fstpt
jns
in
xchg
inc
jbe
cmp
jmp
cli
sub
sbb
scas
lcall
rcrb
or
inc
push
mov
adc
adc
cltd
sub
adc
dec
dec
stos
mov
or
mov
fstpt
mov
mov
lret
inc
cmp
mov
addr16
lcall
mov
jl
sahf
and
pushf
fcoml
jnp
std
cli
pop
mov
imul
test
cmp
scas
xchg
divb
pusha
and
popf
sbb
movsb
mul
call
fsubrl
adc
cltd
ljmp
dec
or
dec
push
fisubs
inc
or
mov
add
fidivrs
cs
das
jb
call
lea
cli
arpl
stos
scas
inc
stos
stc
push
xlat
lret
and
dec
mov
mov
adc
inc
xor
rcll
jmp
scas
fsub
mov
fmuls
add
add
inc
lret
sub
pop
and
or
stos
test
pop
scas
in
stos
nop
push
adc
sub
cmp
movsl
sbb
in
push
and
inc
enter
mov
or
jmp
sar
roll
xchg
fcomp
ud2
mov
or
add
or
and
jns
in
ljmp
pop
or
stc
dec
fwait
dec
in
push
std
mov
enter
and
dec
sti
and
pop
mov
inc
cmp
das
in
sbb
cmp
dec
cld
fld
and
scas
and
cmp
test
sbb
test
out
cmp
push
stos
fdivrs
imul
mov
lds
lcall
test
jns
insb
loop
inc
jmp
in
mov
jne
mov
sahf
mov
test
jns
inc
sub
add
xor
jns
and
test
lret
fldcw
jmp
scas
scas
pop
jle
fsts
ds
loope
mov
gs
xchg
cmp
imul
adc
mov
cli
or
in
mov
sbb
fdivrl
sub
push
ljmp
dec
popf
xchg
imul
pop
lret
cmp
mov
dec
xor
rcll
cmpl
sti
mov
call
test
xchg
xor
xor
sub
jne
cwtl
mov
mov
adc
test
in
sbb
dec
xchg
lods
pushf
stos
outsb
fwait
mov
lock
cmp
push
mov
mov
cmp
cmp
pop
enter
or
mov
lret
aad
pop
orl
mov
sbb
adc
dec
mov
mov
leave
fptan
pop
outsb
mov
ja
mov
mov
imul
inc
cmpsl
aad
stos
xor
cmp
and
ja
jnp
lods
sti
pop
or
inc
sbb
sub
fildl
xchg
cmc
jne
dec
mov
stos
mov
aaa
scas
enter
inc
fcomp
jl
shll
adc
lea
mov
mov
mov
fidivl
leave
stos
pop
loop
cs
pop
inc
scas
xchg
cli
faddl
sub
pop
and
mov
pop
bound
movsl
push
test
sbb
cmpsb
dec
cmp
mov
sbb
xor
jl
mov
ss
clc
mov
adc
mov
cmp
and
lret
fsts
imul
jae
cmp
lret
call
sarl
sub
and
cli
test
frstpm(287
mov
cmp
outsb
and
mov
aam
mov
stos
jb
std
shrl
in
arpl
xchg
adc
rcrl
aam
pusha
jo
cmpsb
lret
imul
cli
lcall
dec
and
test
int
mov
cwtl
imul
pop
stc
lret
leave
clc
or
or
add
adcl
cmp
cmp
cmpsb
aam
imul
pop
and
stos
cmp
fisubl
sbb
repnz
dec
roll
addr16
dec
mov
ss
push
cmpsb
pop
jecxz
push
sbb
mov
sahf
daa
mov
mov
stos
lea
push
sub
fwait
pushf
cmp
mov
mov
lcall
mov
test
roll
pop
test
push
stos
or
sbb
fdivr
pop
xchg
dec
divb
int3
lret
repnz
jmp
je
sbbl
movsl
sub
fwait
mov
shr
iret
xor
adc
stos
dec
fadds
mov
adc
imul
sub
cmp
std
mov
popf
mov
pop
push
fs
fisubl
popa
mov
push
jns
dec
add
jecxz
jmp
test
shll
lret
test
cmp
cmp
mov
sub
hlt
cmp
sar
icebp
and
lods
call
clc
xchg
dec
fimull
pop
test
in
cwtl
sbb
and
xor
enter
imul
mov
jns
aaa
lods
sti
test
sub
dec
lret
sub
cltd
cmp
ret
add
dec
and
rclb
movsl
leave
enter
lret
cltd
cld
into
cltd
mov
stos
xchg
sub
sub
push
jne
jnp
outsb
ret
inc
popa
stc
dec
push
xlat
pop
call
stos
call
cmp
mov
lret
or
jbe
dec
addr16
xor
mov
mov
xor
cld
into
xchg
aad
or
movsl
loop
in
xchg
add
sbb
sub
stc
dec
int
fsub
pushl
lcall
mov
cli
hlt
shll
xor
inc
sub
lret
fnsetpm(287
enter
cmp
cmp
fwait
cltd
sub
mov
dec
add
nop
and
sbb
shll
xor
pop
xor
pop
xchg
sarl
lahf
sub
pop
pop
imul
idivb
cmp
or
jo
sbb
sbb
cmp
lock
stos
neg
call
testb
and
dec
xchg
loope
ljmp
enter
insl
dec
cs
or
cmp
shrl
mov
bound
or
sbb
imul
clc
sahf
das
pop
lret
idiv
jmp
ljmp
nop
sub
and
scas
test
loop
sub
dec
rcll
into
or
lret
stos
mov
sbbb
and
jmp
out
in
fld
out
jp
popa
push
add
xor
imul
lret
add
icebp
and
imul
jmp
cld
int3
lods
or
jl
stc
add
inc
in
ret
inc
pop
fldt
lock
jns
movb
pop
inc
stos
or
mov
jnp
outsb
inc
sub
xor
lret
push
sbb
or
sahf
and
das
sahf
dec
sbb
mov
jle
inc
movsl
js
inc
fscale
test
pop
jmp
movsl
dec
ja
fsubr
cli
scas
movsl
sbb
pop
mov
or
add
leave
pop
sub
ljmp
stos
dec
enter
test
in
gs
int3
or
lods
add
xorb
sbb
mov
pop
xchg
push
cwtl
movsb
cmp
and
dec
test
or
mov
ja
stos
mov
shrl
imul
dec
and
cld
fsubs
pushf
push
sbb
cld
ljmp
fldt
scas
js
popa
sub
dec
lods
fldl
xor
dec
dec
inc
addl
jmp
mov
imul
cmp
lret
std
sbb
repz
insb
mov
in
scas
lds
leave
cmp
xchg
pushf
sub
mov
ja
call
sub
xor
stos
leave
xchg
in
in
pop
mov
cmp
fstps
test
sbb
add
adc
std
adc
mov
out
jnp
popf
mov
arpl
leave
cmpb
sub
or
dec
and
sbb
sahf
sti
jno
sub
and
aas
jp
sub
aaa
xchg
inc
imul
jmp
lret
imul
jmp
dec
mov
cmp
sub
xlat
add
lcall
mov
fdiv
add
xor
add
mov
mov
std
and
dec
fs
mov
jl
sti
lret
mov
jbe
out
imull
inc
aad
test
sub
sbb
dec
call
sbb
sbb
cltd
jb
jecxz
dec
mov
dec
and
fcmovbe
into
sbb
push
mov
pop
xlat
cld
sub
pop
and
scas
pushf
xchg
pop
addl
add
adc
fcmovne
fsubrl
cmp
dec
clc
ljmp
movsl
rorl
popf
inc
mov
xchg
push
cld
mov
push
imul
outsb
fdivl
int3
call
cmp
cmp
rorb
pop
cs
cmp
inc
leave
enter
cmp
add
mov
in
pop
outsb
call
fnsave
test
pop
mov
fwait
mov
cwtl
mov
cmpsl
cmp
and
or
mov
cmp
test
mov
scas
fstpt
sbb
and
mov
jno
cs
cmp
mov
and
imul
cmp
int
mov
movsb
mov
add
ss
test
imul
fcoml
cltd
mov
xor
roll
or
add
push
stc
enter
pop
jle
and
sbb
cmp
xor
xor
mov
mov
sub
lret
xchg
xchg
mov
stos
jns
test
sti
fcomps
in
sub
cmp
jmp
inc
mov
cmc
sub
ficoml
sbb
sub
jnp
cmp
ljmp
fidivl
fwait
lret
mov
jns
leave
dec
mov
fstpt
stos
loop
lods
jnp
inc
ljmp
inc
mov
sub
mov
fdivs
cli
fmull
je
mov
cmp
ja
cmp
fcmovnu
loop
stc
mov
mov
stos
sti
movsb
in
push
ljmp
mov
fmuls
sbb
mov
sub
jmp
cmp
mov
pushf
lods
shrl
ss
mov
sub
jnp
dec
inc
and
aaa
dec
mov
lods
movsl
ljmp
shll
jnp
xchg
push
xchg
out
es
insl
sbb
inc
inc
or
fsubs
dec
dec
lret
push
adc
lcall
or
gs
stc
jmp
dec
mov
imul
ss
pop
sub
clc
mov
mov
dec
loope
lea
inc
call
ret
call
enter
addr16
or
sbb
fprem
dec
sbb
adc
dec
add
rcll
sub
jecxz
imul
lods
lcall
adc
cltd
inc
mov
xchg
push
sbb
ret
push
inc
jns
outsb
dec
mov
cwtl
and
jmp
mov
pop
sbb
outsb
dec
fs
bound
scas
mov
inc
xchg
and
stc
ja
mov
lds
fimull
sbb
jns
fldcw
ret
lock
fcoml
xor
int3
lcall
fdiv
mov
mov
popf
push
cli
cmp
mov
out
pushf
std
in
icebp
xchg
dec
rcrl
lahf
enter
in
sub
fdivrs
jne
stos
mov
frstor
fstpt
sub
pusha
inc
out
sbb
sub
jmp
test
and
sti
imul
mov
sub
jmp
cmc
movsl
cwtl
jmp
or
mov
inc
mov
adc
mov
jnp
scas
push
iret
push
xor
pop
sbb
fists
adc
stos
sub
int3
push
xlat
jbe
lds
cmp
in
sub
mov
pop
xlat
enter
push
or
add
mov
jle
dec
in
ljmp
ror
ficomps
mov
pop
orb
imul
mov
sub
test
mov
fcmovne
aas
loope
sbb
and
xchg
and
xchg
mov
mov
cmp
cmp
ret
mov
dec
xlat
lods
or
pop
scas
outsl
imul
outsb
jg
into
xlat
pop
mov
movsb
iret
xchg
mov
stos
dec
mov
idivb
mov
sbb
xor
dec
mov
sbb
lods
insb
mov
pop
ljmp
adc
inc
sahf
cmp
stos
outsb
mov
fnstcw
dec
inc
rorb
lret
cmp
fcmovnbe
hlt
scas
out
lods
mov
jo
loop
mov
adc
popa
push
movsl
pop
cmp
fsubrl
mov
and
stos
jnp
jmp
cld
push
push
xchg
imul
mov
sbb
pusha
sub
stos
in
xor
leave
mov
mov
out
pushf
sub
cltd
lret
clc
jmp
mov
mov
das
jnp
jae
aaa
mov
aad
outsb
jns
dec
ljmp
sbb
mov
inc
fmul
jnp
test
xchg
or
mov
stos
cltd
sahf
push
jp
repnz
add
outsl
outsb
lods
loope
jmp
push
fnstcw
lock
cwtl
sub
mov
cmp
cmp
test
outsl
test
ljmp
mov
imul
addb
cmp
or
sarb
movsl
dec
cwtl
or
dec
shrl
scas
shrl
insb
xchg
leave
cmpsb
and
pop
fcmove
adc
lcall
jle
or
mov
mov
xlat
add
push
imul
mov
pop
xor
push
add
lret
rorl
xor
imul
loope
loope
xchg
push
mov
aas
insb
enter
movsb
jmp
pusha
cltd
cmp
dec
fucomp
or
aas
aad
xor
cli
call
int3
push
sbb
repnz
loope
repnz
dec
or
cmpsb
fildl
mov
test
in
pop
and
test
sub
inc
push
mov
je
cmp
das
mov
pop
test
xlat
mov
xchg
mov
mov
cltd
cmp
adc
push
cwtl
clc
lret
enter
xor
lret
cmpsb
fcmovu
out
arpl
lret
ror
test
jg
cli
jmp
jbe
lret
jmp
inc
stc
cmp
push
movsl
dec
lods
sub
dec
mov
in
cld
cmp
ja
xlat
test
clc
arpl
inc
lods
imul
mov
lret
mov
test
adc
dec
test
sub
jmp
xchg
sub
inc
fimull
mov
mov
mov
sti
sbb
scas
ljmp
dec
imul
sbb
mov
cwtl
call
inc
sbb
cmp
mov
fucompp
and
fucomi
sub
xchg
in
shll
int3
sub
sub
mov
in
push
sub
cwtl
scas
loop
clc
in
pop
ljmp
pop
test
dec
xor
jmp
stos
inc
lret
insb
mov
or
push
les
or
enter
mov
cli
fsubrs
stos
jle
in
mov
rorl
bound
pop
and
xor
pop
mov
std
xor
pop
imul
push
lds
sub
lret
stos
fimull
jmp
lds
sbb
fmull
sub
out
inc
xchg
pop
sub
test
shrb
cmp
mov
pop
repz
pop
jmp
mov
lret
popf
lock
in
xor
mov
mov
jnp
push
pop
iret
cmp
jecxz
sub
or
lods
enter
xchg
and
lcall
ljmp
imul
enter
pushf
dec
nop
fildl
insl
jns
ret
pop
cwtl
dec
stc
test
in
cmp
mov
dec
insl
sub
mov
pop
pushf
lea
loop
cmp
cmp
inc
lret
cwtl
cmp
sbb
adc
sub
mov
jmp
test
mov
pop
dec
test
sub
bound
stos
in
or
or
sbb
sbb
pop
cwtl
inc
idivb
and
sub
movsl
ja
in
imul
loope
test
lods
cwtl
jmp
jnp
lret
sub
dec
cmp
cmp
dec
loope
push
push
loope
mov
mov
cmp
test
cmp
pop
and
mov
enter
mov
cmpb
sbb
dec
inc
data16
cmp
lcall
jmp
stos
cmp
cmp
xchg
dec
cmp
mov
stc
inc
imul
xchg
insb
clc
cmp
fnsave
push
sub
enter
or
or
sbb
push
jne
fmul
sub
mov
fxch
mov
sub
pop
js
pop
mov
in
imul
xor
fstps
xchg
mov
cmp
xor
fdivr
cmp
int3
cmp
lods
loop
popf
sub
insb
cwtl
test
cmp
test
test
mov
sub
imul
clc
inc
fwait
cmp
sub
mov
int3
lods
shll
mov
push
jl
fstps
in
mov
jmp
mov
pop
jns
adc
fldcw
mov
lret
xchg
ret
adc
mov
cmp
pop
hlt
sti
cmp
mov
xchg
jnp
pop
pop
adc
lods
in
enter
or
loope
xlat
mov
hlt
stos
adc
and
jbe
cmp
pop
movsl
mov
in
cld
icebp
and
cmp
fstps
mov
sub
int
mov
push
lods
pusha
add
push
dec
enter
test
fdivr
sub
inc
mov
pop
test
sbb
dec
in
stc
mov
inc
aas
test
pop
xor
and
pop
test
stos
testl
jb
fdivrl
test
xor
push
jns
xor
cmp
xchg
pop
loop
movsb
xchg
sub
std
and
imul
pop
lea
jmp
pop
sub
dec
fldt
pop
pop
or
stos
movsl
lock
sbb
shll
fcompl
loope
or
xor
cmp
test
xchg
sbb
pop
inc
fldcw
jge
or
xchg
push
pushf
xchg
push
dec
xchg
mov
or
xchg
cmp
jns
cmpsl
ret
mov
stos
mov
or
jmp
adc
fsubrl
imul
roll
pusha
mov
in
cltd
jle
in
inc
scas
cmp
mov
add
jnp
mov
negl
test
sbb
in
or
mov
push
mov
in
pushf
stos
mov
cwtl
fcmovu
int3
push
scas
call
cltd
dec
and
sub
cmp
mov
inc
testl
adc
lcall
xchg
jmp
stos
dec
sub
fsubrl
in
test
cmp
test
or
ss
sub
imul
fisttpll
push
insb
adc
jnp
stos
sti
jb
mov
in
inc
cld
push
xor
fldcw
pop
and
pop
mov
test
lret
adc
cmp
or
shr
jl
popf
sbb
jmp
add
mov
cmp
pop
push
shrl
adc
jg
dec
pushf
int
cmp
fildl
popa
lret
mov
mov
add
jnp
cmp
jmp
data16
movsl
mov
cmpsl
test
out
stc
shll
pop
mov
icebp
mov
fsubs
nopl
fsubs
mov
cmp
mov
negb
add
mov
das
jo
cltd
test
fsubr
dec
jne,pn
add
cmp
outsb
stc
stos
out
cmp
mov
nop
add
mov
mov
call
inc
pop
inc
pop
test
scas
jnp
add
shrb
adc
je
xor
shll
and
pop
xor
dec
cltd
stc
in
enter
inc
aas
inc
int
cmp
leave
adc
add
inc
and
sbb
leave
jmp
arpl
test
btsl
dec
ja
enter
or
jmp
xchg
dec
mov
cld
test
dec
xlat
stos
pop
mov
outsb
push
mov
cmpb
mov
inc
dec
sbb
out
call
test
hlt
pop
add
xchg
cmp
sub
xchg
movsb
mov
in
push
call
test
or
cmp
call
dec
jno
stos
sbb
cld
ret
test
fiaddl
add
dec
leave
xchg
sbb
or
mov
jb
cmp
inc
cmp
sub
cmp
sub
xchg
lcall
mov
mov
out
outsb
test
addb
jmp
stos
sbb
push
xor
int3
cmp
lret
jno
cmp
cmp
test
dec
mov
imul
mov
xor
mov
pop
push
in
outsl
mov
sbb
jb
stos
and
sbb
cli
sub
xor
stos
inc
cmp
inc
or
sbb
ljmp
mov
pxor
stos
lret
jmp
sbb
enter
jmp
mov
xor
push
mov
imul
int3
push
gs
imul
inc
ficoml
cmp
pop
idiv
xchg
divb
fcmovnu
fsts
push
adc
ss
stos
and
enter
cltd
xchg
cld
mov
loop
adc
cmpsl
jmp
lods
data16
mov
lret
jbe
push
outsb
jmp
jmp
pop
mov
popa
pop
mov
repz
mov
int3
fidivrl
outsb
or
stc
mov
mov
mov
insb
loopne
aam
fcmovu
std
ljmp
dec
int3
bnd
lcall
scas
mov
cmp
icebp
sub
call
test
popa
fsubrl
sbb
or
testb
cmp
push
mov
fldenv
cmp
push
test
inc
pop
scas
faddl
jmp
loopne
shrb
negl
pop
adc
cwtl
dec
stos
ljmp
mov
and
mov
pop
mov
sub
je
stc
inc
clc
sbb
mov
jns
dec
sub
cmp
mov
in
out
test
daa
add
cmp
ror
and
ljmp
inc
xor
std
pop
lret
lret
cmp
sub
imul
mov
mov
stos
xor
mov
mov
add
outsb
fwait
gs
into
daa
push
or
daa
jmp
cmp
call
cli
movsl
lods
cmp
mov
shll
mov
mov
cmp
cmp
mov
mov
inc
jns
or
fldt
lret
dec
mov
inc
imull
adc
fwait
mov
and
popf
jae
sub
mov
mov
xlat
cmp
sub
scas
lods
test
enter
mov
js
push
pop
jge
xlat
jmp
pop
jbe
out
mov
int3
cli
ljmp
xor
cltd
add
cld
fcoml
mov
jns
or
or
sub
fwait
inc
leave
insl
sub
scas
mov
push
inc
leave
add
mov
push
faddl
mov
movsb
pop
mov
imul
imul
test
lret
lods
or
fidivrl
imul
push
mov
cltd
aas
sub
fmul
insb
out
pop
fisttpll
imul
std
mov
add
mov
into
clc
sub
aad
cmp
sbb
mov
cmp
cmpsb
stos
xchg
out
jbe
loopne
mov
dec
pop
push
int
dec
insb
jno
ljmp
mov
mov
sub
stos
imulb
aad
jnp
jne
sbb
or
xor
inc
fsqrt
sub
enter
add
mov
cmp
dec
adc
mov
cmp
in
ret
stc
add
sbb
test
mov
cmp
rcr
aas
sub
push
or
mov
fnstcw
mov
fmuls
int3
mov
cmp
test
dec
sbb
inc
pop
inc
dec
mov
test
mov
leave
jmp
mov
stc
sahf
mov
rcl
cs
imul
subl
xor
mov
fwait
lcall
stc
call
test
dec
and
cmp
pushf
or
scas
outsb
fsubrs
pop
pop
dec
cmpsb
pop
sub
and
stc
mov
cltd
jl
jmp
popf
xchg
push
mov
sub
clc
dec
stos
cltd
dec
imul
pextrw
mov
ds
dec
test
shl
and
in
jmp
ljmp
sub
int3
sbb
mov
pop
and
imul
pop
ss
aad
mov
in
fucomp
sahf
in
or
jge
xor
lock
ljmp
sub
movsl
imul
xor
cmp
cltd
loope
sub
aad
dec
clc
test
int
or
adc
cmp
sub
fldt
xor
ljmp
and
das
insb
jae
or
mov
jns
lds
sbb
arpl
cwtl
jmp
in
lret
scas
pop
movb
mov
pop
aam
cmp
xchg
call
les
popf
sub
negl
ficoml
adc
pop
cmp
sbb
or
xor
imulb
ss
push
movsl
xchg
pop
ficompl
movsl
mov
fidivrl
mov
fbld
adc
sbb
clc
mov
xchg
sub
inc
sarb
mov
sub
aas
in
mov
jns
decb
dec
ljmp
insl
call
scas
jns
sti
cld
fdiv
xor
pop
push
bound
cmp
mov
mov
movsl
adc
mov
aam
adc
loop
inc
jmp
mov
sub
cmp
scas
in
jnp
shll
add
xchg
dec
dec
dec
push
in
inc
insl
mov
into
cwtl
dec
fsubs
ja
pop
mov
xchg
jl
sub
mov
lret
add
fisttpl
rolb
clc
sbb
lods
inc
add
xlat
popf
adc
lods
jns
pop
mov
and
test
xchg
mov
inc
das
test
jnp
pop
ficoml
jno
addr16
or
sub
push
out
scas
inc
test
stos
pop
add
imul
mov
xorb
sti
hlt
cmp
out
icebp
cmp
inc
xor
mov
sub
outsb
pop
cmpsb
push
or
sub
jmp
jmp
in
mov
pushf
enter
and
sub
clc
sbb
inc
jecxz
sub
mov
cli
or
dec
cmp
pop
je
or
imul
aaa
popl
dec
pushf
insb
push
iret
jmp
movsb
cmp
scas
sub
push
cmp
cld
mull
fsubs
insb
arpl
or
mov
hlt
iret
out
test
mov
stos
or
pushf
sub
lock
mov
out
les
flds
jns
leave
ljmp
pop
ret
mov
and
inc
test
pushf
negb
in
test
popf
out
int
in
pop
repnz
sub
clc
push
cmp
jge
push
ret
sbb
cmp
daa
lret
mov
jne
jp
xchg
sub
stos
imul
mov
jae
dec
mov
cli
and
sub
pop
cli
fldt
test
lock
mov
cli
ljmp
lods
sub
dec
stc
pusha
stos
or
mov
iret
sahf
push
imul
lcall
pop
jo
mov
imul
lret
mov
enter
fsubrl
mov
dec
cmp
xor
sarb
hlt
sub
cli
imul
mov
fcom
sbb
or
adc
outsb
sbb
push
dec
sahf
mov
jmp
and
pushf
mov
mov
dec
stos
sbb
int3
data16
pusha
int3
push
ficompl
cmp
sti
fldt
popf
arpl
add
fsubs
pop
fcmove
cmp
and
add
test
mov
stos
call
inc
cs
and
rorl
rcrb
and
in
mov
sbb
inc
inc
lds
lret
fwait
cmc
push
enter
jmp
imul
in
sub
out
cltd
and
jmp
mov
fdivl
fcmovnu
and
sub
lcall
jmp
fsubrs
and
or
lock
cmp
or
lods
inc
in
dec
sub
hlt
call
push
shrl
cmp
or
add
cmp
test
sbb
into
call
out
cld
loope
in
inc
das
cmpsb
dec
imul
adc
cwtl
xor
sub
pushf
add
xchg
negb
test
scas
jno
dec
shl
sbb
das
sub
cli
inc
movsb
lcall
jl
inc
fadds
pusha
jge
mov
out
stc
fs
lods
sub
stos
or
pop
add
jae
lods
jae
jo,pn
test
cmpsl
cs
fcomps
jne
call
sbb
cmpsb
test
inc
imul
test
push
mov
jae
cmp
xchg
and
push
jnp
lods
or
inc
push
sub
daa
jmp
pop
sub
sbb
enter
ss
stos
outsl
cmpsb
idivl
mov
lret
cld
movsl
cmp
fsubrl
das
fildl
sti
jns
add
sti
in
sbb
jno
mov
sub
push
pop
cmp
test
sub
lods
int3
pop
shll
mov
loopne
mov
dec
test
cmp
sbb
ret
movsb
leave
cmp
call
and
aas
sti
mov
loope
int3
neg
mov
testl
adc
in
xchg
sub
pop
fadds
dec
push
mov
imul
call
stc
or
pop
sub
je
lcall
sbb
sub
in
stc
jmp
loope
loope
test
fstpt
xchg
imul
and
stc
cld
imul
pop
cmp
icebp
or
sub
rorl
sbb
cmp
repnz
mov
cmp
fcomps
int3
cmp
inc
idivb
xor
cwtl
mov
jns
sbb
mov
sub
out
imul
mov
fcom
push
and
cmp
cld
jnp
pop
das
cmp
xchg
and
xchg
push
inc
test
inc
sub
and
mov
push
sbb
add
subl
sub
rorb
out
cmp
into
stos
neg
scas
dec
push
or
std
lret
mov
sbb
ss
addr16
stos
pop
imul
lcall
sub
stos
les
cs
adc
clc
mov
xchg
mov
or
ss
jbe
sub
imul
leave
fisubl
pmovmskb
stc
push
xlat
popa
push
pop
and
mov
or
cs
scas
dec
frstor
and
pop
stos
mov
nop
sub
dec
sbb
inc
sbb
cmp
int
dec
test
or
shlb
add
mov
sub
lret
mov
movsl
and
sub
inc
mov
sbb
mov
sub
fdivr
pop
insl
into
pop
push
mov
xlat
cmp
or
nop
cwtl
rol
int3
or
leave
mov
cld
outsl
ret
pop
pop
jmp
cmp
call
leave
add
ljmp
jp
adc
std
sub
push
data16
sbb
push
loope
int3
xchg
dec
and
sbb
lret
or
mov
ficompl
test
and
leave
in
imul
popa
cmp
sub
and
pop
mov
stos
inc
mov
cld
lods
inc
fcompl
cld
in
sub
setge
mov
add
sub
movsb
insb
sbb
add
std
mov
jmp
pop
jne
or
fadds
inc
in
mov
inc
cmc
xchg
lret
idiv
stc
stos
cmpsb
cli
jmp
stos
jl
or
cmc
mov
imulb
and
sub
fcompl
stos
scas
movsb
pop
push
and
xor
and
insb
or
mov
std
pop
das
lahf
cmp
push
ficoml
mov
or
pop
or
or
mov
cmp
inc
sbb
movl
dec
ljmp
ror
mov
push
dec
aad
leave
cmp
dec
dec
mov
lods
outsl
loop
shrb
jne
cmp
stc
or
pop
lret
jne
cli
sub
and
stos
stos
dec
imul
sti
sbb
pop
pop
test
sub
cmp
cwtl
cmp
mov
push
test
sub
add
xchg
neg
push
and
lret
dec
fwait
cmp
push
sub
jecxz
push
jae
cmpl
mov
loop
addr16
xlat
loope
mov
sub
dec
ss
add
jmp
cld
test
mov
cmp
out
fisttps
ficompl
push
ret
stc
jns
or
mov
mov
cli
jne
mov
jmp
loop
in
repz
loope
xor
sub
and
mov
cmp
mov
jno
and
fucomi
inc
adc
ds
decb
xchg
int
mov
xor
or
aad
lret
cmpsl
inc
adc
add
jne
sbb
sub
add
sbb
lods
fsts
sbb
test
popf
cmp
popa
adc
sub
sbb
push
adc
jge
mov
fadds
ljmp
test
xchg
push
jb
ss
sbb
cmpl
fsubrs
stos
stos
pushw
ror
divb
aas
dec
jmp
cltd
lock
xchg
lcall
scas
and
ljmp
scas
jle
fldenv
mov
fld
int3
lock
mov
call
popf
mov
sbb
cmp
xor
dec
roll
push
ss
or
scas
push
mov
stos
cmp
jnp
xchg
repnz
lods
jmp
sub
jbe
fwait
ret
add
enter
sub
icebp
cltd
int
imul
in
pop
sti
xchg
cmpsb
lock
imul
stc
xor
pop
ficoml
pop
ljmp
mov
movsl
pop
lcall
lcall
pushf
dec
ljmp
sti
stos
lds
cmp
push
arpl
adc
dec
cmp
dec
xchg
incl
mov
movsl
sub
push
mulb
adc
nop
push
roll
mov
mov
sti
dec
pop
fs
pop
cmp
call
ret
pop
mov
shlb
dec
and
pop
stc
fwait
idivb
in
rorl
lret
test
lods
filds
sti
cmp
test
xchg
adc
sub
xchg
jmp
movsl
push
jns
ljmp
inc
pusha
mov
dec
test
mov
lret
mov
insl
and
xchg
jns
stos
cmp
mov
test
jmp
mov
outsb
jo
fmul
stos
imul
jle
lods
cmp
sub
sti
cmp
sub
mov
dec
int3
mov
imul
xchg
lock
movsl
inc
std
sbb
leave
add
mov
aas
call
cmp
cmp
sub
mov
xor
repnz
pop
mov
das
int
push
push
cmp
pop
mov
sbb
mov
xlat
xchg
addr16
mov
xchg
mov
jo
aas
inc
dec
dec
sti
test
mov
stc
or
sub
lods
in
adc
cmp
mov
popf
sub
inc
dec
jmp
dec
dec
sub
fs
addr16
push
test
pushf
fimull
pop
pushf
sub
cmp
lcall
mov
pop
outsb
mov
or
cmp
mov
call
xor
xchg
cmp
out
cmp
les
int3
movsl
ds
movsl
sti
movsb
sbb
pushf
test
cli
cltd
pushf
mov
test
fldt
sub
sarb
outsb
cmp
mov
inc
fsubs
rorl
out
and
mov
inc
pop
adc
dec
aam
add
mov
aam
stc
xchg
out
pop
int
stos
dec
and
adc
sbb
icebp
or
in
scas
inc
sub
dec
outsb
lds
jle
sbb
movsb
sub
leave
fwait
cmp
or
adc
sub
add
dec
popf
mov
sbb
sbb
mov
lods
stos
in
daa
adc
enter
jne
cmp
pushf
test
lret
mov
inc
push
or
push
inc
add
lods
cld
fisubl
leave
int
mov
dec
pop
nop
cmp
test
xor
insb
pop
sbb
data16
mov
pop
popa
in
dec
xlat
inc
imul
fisttpll
psubw
nop
and
lcall
cmp
xor
scas
cld
mov
stc
pop
fisubrs
and
test
xor
sar
nop
dec
cmp
addl
xchg
inc
sub
test
lcall
fidivrl
call
push
stc
sbb
xor
push
sub
clc
decb
frstor
mov
mov
dec
inc
test
jns
or
pop
push
test
mov
fsubl
or
pop
and
mov
cmc
lods
xchg
cmpsb
cmc
sbb
cwtl
mov
dec
pop
fistpl
mov
add
add
inc
mov
je
lods
fsubs
lock
dec
loop
inc
subl
and
stos
call
mov
leave
xchg
xor
sub
xor
sub
sbb
pushf
cmp
or
mov
mov
cmp
popf
dec
and
fwait
cli
add
cmp
xchg
mov
cld
lret
jnp
push
or
test
inc
rclb
mov
ja
outsb
cmp
mov
shr
or
fmuls
mov
sbb
jmp
mov
into
pop
data16
stos
mov
inc
test
mov
fcomi
fistl
aam
enter
adc
dec
dec
cld
ret
jbe
in
ds
pop
cltd
cltd
mov
push
push
inc
push
lods
mov
mov
xchg
inc
cwtl
cli
add
xchg
test
sub
stos
sub
inc
aad
inc
mov
inc
loope
adc
cmpsb
mov
leave
jns
out
loope
inc
imul
push
fdivrs
test
cmp
inc
jnp
xchg
cmp
loope
lret
scas
and
test
cmp
jbe
ret
fimull
stos
outsb
push
stc
add
mov
test
shrb
cmp
xchg
sub
sub
cmp
sbb
dec
loopne
or
test
sub
call
push
enter
ja
std
jo
mov
add
mov
push
aam
enter
mov
aaa
ja
and
aas
lcall
or
fcomi
loop,pn
pop
mov
cmp
mov
inc
sbb
loop
fisubrl
xchg
add
das
inc
stos
outsb
iret
test
addr16
in
outsb
inc
fstp
pop
mov
or
ja
cmp
sbb
mov
imul
add
in
push
dec
jge
jmp
sbb
jne
or
fwait
popf
pushf
sub
sti
in
out
in
loopne
testb
stos
pop
dec
sbb
test
fmul
fmull
push
lret
or
enter
shr
and
iret
pop
popf
cmpsb
cwtl
mov
cmp
cmp
rcrl
mov
jmp
jmp
rcrb
pop
lret
enter
enter
clc
popf
sbb
in
dec
daa
lcall
call
sub
imul
sub
jo
pop
push
cld
jmp
je
xor
leave
xchg
mov
out
cmp
in
or
pop
mov
pop
enter
test
fisttpl
lock
add
push
inc
in
outsb
pop
loope
sub
push
sub
pop
sub
fmulp
stos
movsb
movsl
dec
scas
push
add
fmuls
xor
clc
and
leave
imul
in
mov
pop
cld
test
xor
fldl2t
jns
lret
mov
cltd
in
pushf
jns
lcall
jl
lock
jb
or
scas
adc
jmp
clc
xor
lret
sub
dec
aad
mov
mov
call
sub
in
mov
int3
inc
xchg
pop
mov
push
enter
scas
out
dec
inc
mov
aam
push
add
int
mov
repz
sti
and
or
cmp
and
lret
jecxz
jo
cmp
std
jns
mov
sub
popa
ljmp
or
xor
imul
fdivl
jne
xor
add
imul
test
sbb
push
mov
mov
pop
lods
add
mov
cmp
pop
add
pop
cld
xchg
mov
xchg
mov
dec
jnp
in
fstps
ljmp
cld
into
shl
lahf
jl
insb
push
mov
or
sti
dec
fstpt
es
enter
sub
xchg
test
stc
add
cld
int3
dec
sahf
sbb
out
insb
sbb
cmp
ljmp
cltd
cli
mov
outsb
imul
sub
test
cmp
and
stc
sbb
lret
ret
shll
push
cmp
sub
xor
int
lcall
rcrl
test
dec
imul
outsb
mov
scas
stc
nop
sbb
arpl
imull
clc
jbe
or
cli
jl
and
sbb
cmp
xorl
in
dec
aas
pop
ficompl
pop
stos
mov
imul
sub
cmp
add
cs
mov
sbb
jnp
mov
ljmp
dec
out
ret
dec
and
test
ja
stc
xorb
idivb
xor
test
dec
call
sub
dec
mov
add
arpl
sti
in
xchg
cld
jbe
and
sub
and
mov
inc
lcall
test
daa
jg
push
movb
mov
movsb
sbb
clc
das
adc
mov
pusha
pop
int
jmp
cmp
push
dec
push
xor
mov
movsl
sub
inc
fwait
inc
or
xchg
cmp
fwait
sub
mov
xlat
lcall
push
and
stos
or
sbb
cmp
sub
push
jbe
mov
mov
pop
mov
inc
pushf
sti
leave
inc
fldenv
or
in
insl
dec
loope
loope
sub
scas
cmp
and
cltd
pusha
int3
stos
clc
lret
je
add
add
jo
aaa
aam
mov
xor
mov
sub
cltd
xchg
add
leave
dec
cmp
jnp
enter
mov
cmp
jns
mov
mov
cmc
enter
cmp
push
cmp
movsl
pop
add
mov
cmp
imul
addl
data16
mov
add
leave
fwait
dec
or
call
pop
cmp
jnp,pn
lcall
stos
insb
imul
ljmp
push
fisttpll
and
mov
sub
stos
in
dec
mov
xchg
imul
mov
add
pop
xchg
arpl
jbe
mov
fs
cmp
aad
in
sub
aaa
subl
insl
xor
fcoms
cld
push
cmp
add
sub
aam
dec
movsb
mov
or
rcrb
pop
jmp
leave
stos
mov
std
cltd
sti
int
faddl
in
out
pop
movsb
mov
xor
sub
mov
in
sar
aad
add
inc
or
inc
mov
lods
lods
fcom
dec
xor
stos
fidivl
sti
aaa
pop
loop
out
outsb
adc
test
mov
adc
stc
cmp
mov
stos
mov
stos
mov
stos
jle
jl
sbb
adc
inc
mov
mov
jg
outsb
enter
dec
pop
mov
or
into
dec
xchg
mov
ficompl
cmp
aad
mov
daa
in
sub
cli
and
mov
fstp
pop
fldt
insb
pop
pushf
cmp
mov
pop
and
cli
dec
xchg
lods
mov
or
lcall
pop
dec
cltd
push
mov
fld
imul
sub
lods
sub
sti
jo
sahf
pop
cmp
sub
in
test
pop
mov
stos
adc
mov
sbb
ljmp
add
fstpt
fldcw
mov
lods
pusha
sahf
and
imul
cmp
fcomps
mov
jbe
xchg
jns
and
or
jno
xchg
test
ljmp
into
sub
stos
ret
imul
pop
shl
inc
movsl
mov
movsl
jge
fcoms
sub
sbb
push
sub
idivl
or
mov
negb
mov
adc
ret
and
and
jae
dec
in
dec
cmp
mov
pop
inc
pop
mov
sub
cmp
sbb
inc
cs
fucom
pop
sbb
popa
dec
stc
repz
in
cld
push
hlt
or
test
sbb
push
sub
mov
jmp
jmp
lods
jmp
subb
inc
test
fsts
in
stos
les
lods
jae
loope
and
clc
pop
sbb
mov
mov
test
fmuls
les
fwait
add
pop
xchg
jns
call
xor
fcompl
cmp
lods
mov
sub
int3
pop
mov
mov
aad
xchg
inc
rcl
mov
fcoml
std
xlat
push
aad
call
call
rcll
sbb
or
outsl
call
daa
sub
xchg
roll
xor
lret
in
inc
loop
dec
sbb
mov
and
in
mov
shrb
and
mov
mov
cmp
clc
stos
mov
pop
das
push
lret
aas
ret
enter
outsb
pop
pop
in
push
in
adc
dec
mov
or
test
jns
or
test
imul
sbb
inc
decl
jecxz
sub
iret
xor
mov
lcall
or
jl
in
nop
xor
imul
int
jmp
enter
loope
cmp
stos
iret
jecxz
lods
cmp
sahf
push
frstor
push
stc
cmp
sbb
pop
lods
cmp
in
or
jns
icebp
fsts
lcall
stos
dec
cmp
gs
fstl
icebp
xchg
xchg
scas
test
fdivrl
inc
add
push
dec
pushf
fwait
cwtl
sub
jle
mov
sub
or
cwtl
push
pushf
pop
or
cmp
mov
clc
imul
mov
push
pop
je
sbb
and
cli
shlb
jmp
stos
dec
mov
or
sti
push
hlt
xchg
add
ljmp
test
mov
stos
adc
and
sub
movsb
outsl
ret
icebp
out
xor
mov
leave
add
pop
outsl
ret
mov
add
jmp
push
cs
pusha
fsubl
add
xchg
sub
fwait
or
mov
jmp
inc
hlt
out
jmp
lcall
lods
lcall
or
in
or
mov
cmp
cltd
stos
aam
sub
xchg
mov
xchg
test
fstpt
cli
cld
fisubrs
mov
cmp
imul
dec
jns
or
jbe
add
dec
in
dec
pushf
dec
lret
mov
cmp
sbb
mov
mov
pop
lcall
imul
scas
cmp
pop
pushf
scas
insb
lods
mov
fstpt
adc
fimull
xchg
cmp
pop
das
imull
jmp
imul
push
pushf
test
ss
add
idiv
jl
jle
xchg
fildl
or
repnz
divl
mov
add
cmc
mov
mov
outsl
jl
test
stc
cmpsl
add
cld
pop
lods
stos
sub
inc
hlt
mov
sbb
xchg
mov
cwtl
inc
fcmovnbe
sub
pop
mov
imul
xchg
push
enter
in
mov
and
cld
mov
fsubr
inc
mov
lret
outsb
lea
pop
rcl
stos
mov
jecxz
sbb
stc
mull
fldcw
les
jnp
fidivrl
jmp
xor
icebp
sub
loop
movsb
inc
fcomps
lods
push
mov
sti
cmc
mov
push
lods
aas
test
dec
ret
xor
cmp
dec
inc
fidivrl
sub
ja
pop
lret
cld
std
sbb
sub
cli
inc
mov
mov
movsl
dec
add
cmp
decl
add
das
sub
and
inc
and
jnp
popf
negl
push
or
adc
cs
mov
push
xlat
imul
jmp
adc
int
stc
jb
lock
into
xor
iret
int3
in
cmp
jl
pop
aaa
xlat
mov
pop
add
mull
das
push
sub
jmp
aaa
inc
call
pop
pop
notb
pop
pusha
cmp
loope
ss
jmp
ss
lock
jg
lret
imul
adc
jns
pop
iret
xor
arpl
cmp
mov
mov
push
mov
pop
jge
call
add
pop
mov
mov
aad
cmp
movsb
std
cld
in
ja
mov
jbe
mov
sub
stos
mov
cmp
cmp
cmp
sub
dec
sbb
xor
sbb
push
ret
sbb
fdivr
daa
xchg
sub
rorb
pop
mov
xor
jge
in
sbb
sub
add
pop
push
insb
enter
in
cld
das
mov
lods
pop
imul
mov
mov
cs
les
inc
test
cld
inc
outsb
stos
push
inc
test
stc
lret
sarl
inc
js
xchg
negb
cwtl
imul
fidivrl
loop
mov
test
test
movsl
aad
in
pop
and
mov
sbb
jne
mov
mov
cmp
int
pop
in
movsb
and
or
dec
mov
leave
cltd
mov
arpl
movsb
cmpsb
lcall
popf
or
pop
pushf
cwtl
xlat
ljmp
sbb
stos
mov
mov
sub
lea
cld
imul
call
jae
inc
or
jns
or
int3
fisubrl
sbb
bound
or
pop
inc
fsubs
mov
rorl
lret
in
mov
jbe
sti
mov
sub
arpl
int3
pop
jle
mov
out
call
cmp
mov
sub
and
dec
stos
mov
jecxz
jmp
xchg
push
rep
inc
cli
fistpl
xchg
push
pop
insb
pop
push
mov
push
mov
fcompl
and
pop
mov
lret
and
ss
jne
stc
enter
adc
shrl
aad
sbb
cmc
out
int3
cs
push
stos
cltd
int
stc
push
int3
xchg
dec
ljmp
lds
fcoms
sub
adc
aas
fidivrl
fldt
imul
sub
or
sbb
fwait
lods
xorb
in
dec
mov
xchg
sub
pusha
movsl
mov
mov
test
inc
nop
cmp
fnstcw
or
cmp
cwtl
push
dec
sub
xchg
outsb
dec
cmp
pop
push
addr16
jne
mov
and
jmp
jl
mov
loope
pop
stos
popf
push
ljmp
dec
imul
mulb
mov
inc
and
fimull
lret
filds
stos
adc
push
fsts
mov
lds
or
or
inc
pop
insb
sub
fiaddl
frstor
lcall
jle
push
pop
aaa
in
or
clc
in
dec
fadd
mov
mov
test
add
ss
lock
cmp
clc
or
dec
data16
cmp
cmp
push
adc
int3
adc
pushf
or
sub
jnp
mov
xchg
jb
dec
int3
popa
das
xchg
sub
push
lods
inc
cmp
cmp
push
subl
outsb
sub
cld
scas
jle
call
jo
lret
and
push
imul
mov
cmp
movsl
jns
leave
mov
subb
stos
inc
scas
addr16
test
lock
movsl
sub
in
mov
sub
test
dec
cwtl
test
roll
add
inc
je
stos
out
pop
fnstsw
mov
in
in
xchg
inc
fs
loop
push
movsb
orb
cld
fcompl
push
decb
cld
test
test
push
sub
pop
sbb
sub
dec
stos
cmp
and
xchg
cmp
mov
inc
imul
mov
inc
mov
jne
mov
lret
sub
leave
or
lret
push
cltd
dec
push
add
and
ret
clc
movsb
inc
mov
icebp
mov
or
outsb
test
pop
mov
sti
cld
cli
test
orb
sub
imul
jmp
add
jmp
daa
test
loope
int
mov
ds
push
xchg
cmp
loop
movsl
cltd
fmull
xchg
mov
lret
inc
jnp
fistpl
add
mov
cmp
cmp
sub
mov
clc
stc
ja
enter
or
pop
arpl
pop
lds
mov
stos
adc
lds
inc
mov
rorl
ljmp
and
sub
push
mov
outsb
rorl
andb
lret
idivb
jnp
test
test
aam
mov
stos
cli
pop
pop
lcall
sarl
fldenv
shlb
jecxz
xchg
fisttpl
in
test
lods
inc
mov
and
sub
mov
xlat
test
fldcw
pop
test
inc
cmp
sbb
xor
push
dec
inc
pop
movsl
cmp
adc
mov
fnstenv
inc
xor
call
leave
out
sub
inc
pop
movsl
cli
pushf
cld
aas
sub
jmp
push
or
arpl
dec
movsl
mov
mov
inc
or
gs
dec
sub
loopne
cs
xchg
adc
inc
sbb
stos
shr
imulb
fsubrs
in
fisubrl
or
mov
popf
adc
outsb
add
cmp
cmp
clc
ss
stos
notb
fistpl
fwait
sbb
cmp
test
test
add
ljmp
lret
ficompl
shll
cli
ss
pop
imul
or
outsb
mov
sub
fs
into
or
int3
mov
jo
int3
mov
movsl
pop
imul
lret
pop
jae
inc
cltd
lret
and
fsubrl
or
fisubrl
cmp
cs
adc
int
mov
rcll
push
ss
sbb
mov
cltd
or
cmp
fucom
dec
mov
and
cwtl
nop
cmp
leave
sti
pop
inc
mov
addb
sbb
ljmp
ret
and
sub
mov
add
cltd
std
popa
cmp
mov
adc
jno
stos
pop
or
enter
or
sub
dec
fldt
dec
or
xlat
call
fdivrs
xlat
cmp
dec
movsb
jg
enter
call
or
push
mov
pop
pushf
arpl
outsl
and
push
mov
add
orl
lahf
jne
sub
lcall
dec
sbb
push
mov
fldt
cld
adc
mov
or
cmp
lods
push
cld
mov
or
imul
imul
jnp
sub
cltd
sbb
push
xchg
sbb
pop
pop
jp
xor
stos
int3
jns
les
out
call
xor
cmp
dec
int
lret
insb
leave
or
pop
sub
lret
add
mov
mov
jbe
or
sub
insb
sbb
imul
sbb
sub
jmp
lret
jl
sub
and
cli
adc
test
mov
movsl
cmp
cli
clc
pop
fldcw
sub
popa
xor
mov
cmp
leave
jo
cmp
sbb
sbb
mov
mov
test
movsb
fsts
sub
pop
ja
test
xchg
cmp
cmp
sub
jmp
ljmp
loopne
out
enter
cmp
daa
sub
rcrb
es
lret
mov
enter
xor
sub
scas
mov
ljmp
hlt
jecxz
mov
jmp
test
and
imul
sub
lcall
cmc
pop
scas
mov
dec
stos
cmp
pop
dec
mov
jns
pop
imul
push
into
sub
mov
pop
movsb
popa
sub
int3
leave
popf
shl
mov
lret
mov
cmp
loope
mov
pop
enter
xor
fwait
or
and
and
pop
stos
cmp
test
xor
hlt
cmpsl
add
testl
cmc
sbb
dec
sahf
add
cmp
stos
inc
popa
mov
push
xchg
int3
mov
mov
fcoms
popa
stos
lods
clc
mov
enter
sbbb
xchg
add
mov
fnstenv
movsb
dec
pavgw
stos
loope
mov
mov
dec
out
popf
sbb
movsl
lret
dec
test
call
jns
push
test
stos
xor
ds
inc
hlt
mov
icebp
sub
int3
aad
int3
imul
dec
push
out
cmp
pop
push
dec
pushf
in
shll
jns
sbb
mulps
dec
dec
outsb
int
sub
sub
imul
mov
jmp
fnstsw
and
leave
add
mov
adc
mov
out
pcmpeqd
jecxz
bound
daa
in
cltd
cmp
fcomps
lcall
ja
js
lret
int3
adc
pop
leave
je
or
jmp
sub
int3
xor
mov
and
lds
jmp
fiaddl
inc
lret
mov
jns
mov
or
int3
dec
push
lret
mov
pop
outsb
dec
sub
int
movsl
sbb
movsl
movsl
cmp
add
cwtl
sub
stos
sub
xchg
dec
leave
push
jne
pushf
mov
stos
fmul
xchg
or
jnp
add
imul
or
repnz
stos
imul
sub
out
enter
sub
adc
jmp
imul
ret
call
jle
out
dec
clc
xor
push
mov
cmc
movsl
int3
mov
pop
outsb
cmp
loop
int
stos
repnz
cld
mov
loop
adc
cld
popf
imul
mov
shll
test
sti
mov
lret
mov
push
add
mov
stc
inc
out
push
pcmpeqd
mov
aad
imul
sub
fcomps
stos
ljmp
jns
dec
or
stos
pop
dec
mov
cli
lods
mov
iret
mov
mov
and
stos
cmp
shrb
rcll
adc
imul
int3
mov
mov
in
add
xchg
pushf
hlt
dec
and
lret
adc
mov
ljmp
cmp
in
adc
xorl
and
jns
mov
jnp
sbb
sub
ljmp
lret
adc
cmp
out
aaa
stc
xchg
sbb
out
cs
mov
fsubr
lcall
test
inc
xor
cmp
pop
dec
enter
sub
cmp
mov
pop
sbb
fmuls
mov
sub
mov
push
sub
fwait
sbb
aad
dec
jnp
push
addl
lods
test
pop
call
xchg
lret
insb
stc
and
pop
mov
push
jl
push
fidivrl
jmp
lods
imul
cld
ljmp
add
test
push
mov
int3
or
aas
and
sub
test
popa
adc
cmp
xchg
lock
dec
stos
ret
test
lret
call
std
push
mov
orb
cs
test
jmp
mov
add
push
mov
mov
faddl
add
shl
xor
stc
dec
aas
mov
xor
lcall
push
dec
dec
in
xlat
aaa
adc
int3
fnstenv
cmp
js
aam
imul
daa
imul
mov
ret
pop
push
ret
adc
and
push
sub
in
imul
adc
sbb
mov
cmp
int
cltd
leave
mov
xlat
in
dec
test
sbb
jb
dec
imul
orl
orl
mov
sti
enter
mov
cld
lea
scas
shrb
mov
inc
dec
dec
lods
ret
pop
pop
sub
movsl
dec
test
jecxz
lret
add
rcll
nop
and
js
fsubrl
dec
nop
stos
loop
rcrl
mov
fcomps
jmp
and
mov
clc
dec
jnp
xchg
mov
pop
mov
jmp
cmp
fistpl
arpl
xchg
imul
xor
daa
lea
add
adc
mov
mov
mov
pop
std
dec
int
jmp
add
jnp
cmp
rcll
in
fistl
cmc
sub
jle
cmp
push
lcall
stc
clc
sub
mov
imul
in
loop
xorb
or
cmpsb
mov
insl
add
sub
fwait
push
mov
adc
cli
imul
dec
clc
xchg
cmp
scas
mov
pop
das
dec
or
cwtl
vmulss
jns
push
mov
cs
mov
imul
jmp
popf
fistps
out
sti
add
ss
insl
add
cmpl
dec
cwtl
or
xchg
movsl
adc
xchg
pop
test
dec
sub
pop
fsubl
nop
lret
testl
fdivrl
sub
leave
mul
push
mov
into
mov
test
jmp
cmc
push
js
stc
into
outsb
pop
inc
fidivrs
xor
lods
jmp
sub
mov
cmp
imul
adc
int
mov
sti
adc
mov
stos
outsb
lods
sbb
mov
outsb
lods
add
mov
xor
jb
and
jmp
fists
dec
cmp
je
dec
sub
iret
sub
lret
sbb
xchg
mov
jmp
jmp
mov
adc
sbb
mov
and
pop
pop
sub
mov
push
and
sub
mov
add
int
fcmove
rcrl
mov
or
mov
repnz
dec
jmp
daa
push
in
jns
fs
cmp
mov
mov
clc
mov
test
mov
stc
jmp
rol
mov
movsb
add
stc
and
in
and
mov
mov
cmp
in
lods
int3
fimull
lcall
in
mov
loope
add
push
cs
or
stos
int
call
sbb
hlt
inc
sub
mov
jl
mov
mov
fwait
push
clc
dec
xlat
xor
in
jmp
and
pop
ljmp
dec
fdivrs
mov
sti
sbb
xor
cltd
jns
push
pusha
sub
sbb
lods
lock
fldcw
sbb
inc
mov
or
out
pop
cmp
int3
sti
or
sub
sbb
mov
pushf
rclb
call
dec
fwait
in
inc
jg
and
leave
cltd
pop
mov
dec
mov
sub
les
hlt
sub
cmp
mov
aas
or
sbb
fwait
ja
cmp
stos
mov
ljmp
sub
mov
push
fst
leave
sub
in
fmul
sub
fistps
mov
mov
scas
sub
test
ror
inc
mov
outsl
fiaddl
sub
sti
sbb
push
cmp
add
in
fildl
aaa
dec
fistpl
ss
cmp
enter
add
add
dec
ss
add
jb
test
movsl
jae
in
in
xor
stos
leave
repz
cmp
into
aas
mov
cmp
inc
std
sbb
mov
sbb
pusha
jmp
ret
mov
mov
or
das
push
cli
push
add
clc
dec
inc
jnp
dec
push
cmp
movaps
mov
or
lcall
push
sub
xor
mov
sbb
ss
and
clc
test
adc
mov
mov
push
cmp
ret
das
test
stos
jo
cld
and
jnp
push
and
jecxz
imul
xor
popf
decb
sub
jnp
fcmovnbe
cmp
and
mov
cmp
pushf
rcrl
sub
cli
in
movsl
jmp
mov
lcall
popf
push
sbbl
imul
pop
mov
pop
aad
cli
cmp
and
and
rorb
adc
test
dec
cwtl
mov
enter
lret
cld
and
scas
push
addr16
test
adc
leave
ljmp
movsl
popa
call
ja
mov
and
lods
or
mov
inc
fwait
xor
push
sub
int3
fsubr
mov
mov
pop
and
cli
mov
mov
rcl
add
mov
fisttpll
clc
push
lods
push
dec
mov
mov
xlat
jmp
xlat
or
push
gs
call
mov
loope
mov
mov
int
sti
imul
inc
jmp
cld
fcomps
cltd
ss
jmp
loopne
lcall
push
hlt
shll
nop
stos
mov
cmp
or
cmp
movsl
adc
inc
mov
test
or
sub
and
sub
inc
int
fdivrs
or
clc
inc
jno
mov
lods
popa
into
call
mov
stos
imul
inc
aam
fimull
lret
leave
cmp
dec
dec
movsl
xlat
or
imul
or
xchg
lods
ja
dec
cltd
mov
jl
cmp
sub
lods
inc
or
popl
xchg
enter
daa
sbb
or
add
psubsw
jne
cwtl
pop
mov
sbb
cltd
xchg
dec
jns
sbb
sub
hlt
cmp
push
mov
test
stc
cmp
in
test
lcall
test
ljmp
or
lret
dec
popf
popa
popf
call
add
movsl
in
fldcw
mov
inc
loopne
dec
xor
sbb
add
push
call
andb
out
jnp
mov
mov
or
mov
xchg
in
inc
cmp
adc
cmp
lods
jbe
lret
cwtl
stos
aad
mov
outsb
pop
lods
mov
std
mov
xor
cmp
sub
pop
adc
jnp
das
inc
or
cmp
and
sti
cmp
sbb
std
movsl
repz
and
cwtl
sub
cmp
rcll
pop
rorl
arpl
lods
cwtl
stos
dec
push
fcomps
cltd
insl
xor
sub
add
push
or
scas
mov
adc
mov
mov
dec
in
out
shll
sub
mov
fists
clc
outsb
int
fcmove
leave
or
xor
lods
add
imul
sub
icebp
push
cmp
stos
sub
dec
jle
push
lcall
imulb
aad
dec
xchg
sbb
pop
cmp
cmp
dec
mov
inc
jmp
stos
sahf
dec
movsl
pushf
mov
mov
mov
add
cltd
jns
int
cmp
cmc
dec
xor
cmp
pop
in
scas
shll
loopne
mov
test
fisubl
bswap
jns
imul
insb
mov
leave
inc
cmp
lret
sbb
cmp
cld
in
sbb
push
cmp
imul
jo
and
test
sbb
stos
add
stos
das
shr
enter
sub
sub
ja
imul
enter
sbb
cmp
mov
mov
mov
jbe
leave
pop
test
and
in
mov
movsl
dec
fldl2e
sub
jle
mov
shrl
jecxz
xor
mov
inc
sbb
addr16
or
enter
lcall
outsb
idivl
clc
mov
push
push
int3
out
lds
call
jl
xor
jmp
aam
stos
or
fwait
cld
sub
fisubrl
jae
pop
jnp
out
cmpsb
push
dec
sub
js
imul
aas
fldt
imul
in
test
sti
ss
mov
test
and
sbb
movsl
ljmp
dec
stos
cld
cmp
repnz
sbb
push
mov
mov
adc
dec
inc
insb
pop
aad
jnp
xchg
add
imul
mov
or
and
sub
in
pop
fdiv
loope
push
xchg
lcall
cmp
dec
cmp
clc
iret
int
cld
sbb
fdivrs
cli
mov
mov
jmp
ja
dec
or
fdivrl
xchg
ss
in
sti
test
and
stos
es
jmp
fimull
imul
mov
dec
fmuls
inc
inc
clc
in
xchg
jmp
lret
cmp
or
and
pop
mov
ljmp
addr16
or
dec
out
lret
jecxz
lcall
dec
mov
and
int3
sbb
dec
adc
lcall
and
cmp
sbb
push
scas
loopne
test
test
imul
jo
sbb
test
xlat
test
into
data16
jne
mov
inc
imul
clc
jl
cs
jl
sub
mov
xchg
out
push
add
into
inc
cmp
mov
mov
xchg
cmp
into
and
mov
mov
fcomps
rcl
dec
sub
mov
jmp
sub
cli
and
or
fldt
subb
cmp
mov
jnp
data16
cmp
or
inc
leave
imul
ss
inc
dec
lcall
sub
xchg
and
sub
imul
dec
jo
dec
scas
or
mov
lods
fcomp
call
dec
imul
mov
cld
in
test
or
shrb
add
daa
cltd
sbb
or
sub
vpsubusw
jecxz
inc
mov
cmp
fldln2
cmp
inc
fst
cmp
add
decl
sbb
cli
mov
int3
or
arpl
imul
sub
sub
mov
rclb
mov
sub
sti
int3
clc
sub
lea
cmp
js
enter
mov
pushf
mov
sbb
imul
ret
addb
aam
mov
test
clc
mulb
fdivs
sub
int3
movsb
fwait
dec
and
or
cs
cld
mov
addr16
inc
push
jne
out
pop
popf
jmp
dec
fwait
inc
sbb
idivb
fnstcw
add
lods
enter
push
imul
cmc
in
dec
lret
rcll
cmp
in
scas
std
push
enter
mov
imul
mov
and
imul
jmp
adc
cmp
cmp
cmp
mov
stc
bound
std
add
jb
adc
ret
iret
mov
push
int
dec
and
fsubrs
pop
sti
mov
fnstcw
pop
inc
cmp
imul
stos
lret
cmp
sbb
stos
and
flds
mov
insl
mov
push
leave
dec
stos
inc
lahf
push
add
jmpw
cwtl
lret
sub
test
mov
jecxz
rorb
imul
inc
dec
push
push
js
jns
lods
mov
jecxz
or
scas
sbb
jmp
add
jl
test
xor
pop
push
and
jnp
mov
scas
clc
cmp
and
stos
mov
pop
dec
ljmp
and
cs
enter
sub
pushf
imul
fcomps
jmp
mov
xchg
fs
inc
popf
lea
lods
sub
dec
in
cld
in
clc
inc
lret
mov
lds
dec
add
cwtl
and
imul
cmp
sub
cmp
ret
imul
loop
stos
lcall
push
mov
jns
sahf
stc
adc
jnp
sub
mov
ret
fisubrl
xor
pop
and
cli
ss
imul
aad
imul
leave
ret
sub
jbe
sbb
das
pushf
test
or
mov
enter
out
sub
imull
xchg
cmp
inc
sbb
dec
in
push
push
roll
in
test
ljmp
ja
aad
imul
cmp
mov
lods
movsl
ljmp
lret
lret
jns
mov
std
in
frstor
jmp
cmp
push
fwait
sub
cs
mov
or
rorl
mov
pushf
outsb
sbb
sahf
mov
sub
and
pop
inc
fs
fcompl
mov
pop
mov
test
jmp
call
jp
add
imul
or
cmp
insl
adc
lods
cmp
mov
cmp
cwtl
imul
and
pop
mov
stos
inc
xchg
pop
roll
cltd
fdivrl
stc
bound
jnp
inc
sub
int
loop
jmp
loope
push
mov
stos
shrl
xchg
int
fnstcw
inc
cmp
dec
fmuls
add
test
push
call
sbb
cmp
dec
or
jb
cmp
xor
mov
ja
sbbb
fs
dec
out
cmp
pop
dec
pop
movsl
fwait
sbb
cmc
cmp
dec
scas
jmp
sub
imul
cltd
fwait
ljmp
cmp
jns
push
rcll
adc
pop
cmp
sub
ss
or
jns
movsl
cld
mov
dec
imul
jae
xor
imul
xchg
jle
pop
push
push
js
fdivrl
ret
addr16
cmp
and
hlt
ss
add
call
or
orb
pop
pop
lcall
lcall
pop
mov
cmp
in
out
cld
push
ss
out
cmpsb
stos
sub
int3
sbb
mov
fwait
cmp
adc
aaa
leave
lret
xlat
mov
mov
fldz
mov
ror
lret
xchg
or
jmp
lods
jp
push
jbe
cwtl
push
mov
into
leave
sub
sub
dec
sti
cmp
arpl
sub
lods
call
push
test
mov
sub
stos
mov
dec
mov
xchg
push
jnp
jge
inc
adc
jle
add
scas
or
sub
ljmp
lret
jo
mov
test
cwtl
dec
jmp
mov
outsl
push
jbe
and
imul
dec
sub
insb
pusha
test
scas
outsl
push
cld
push
scas
inc
cmp
xchg
imul
mov
popf
or
daa
mov
cmp
mov
xchg
fstpt
sbb
cli
xchg
jb
xchg
add
sub
or
sbb
lcall
mov
enter
sbb
out
push
dec
mov
stos
ljmp
in
popa
cmp
xor
pop
out
cmp
jo
adc
cmp
movsl
pop
call
pop
sbb
stos
lret
cld
leave
lods
mov
push
mov
sti
xchg
pop
in
leave
cltd
das
xlat
fsubs
and
pop
pop
inc
push
fisttpl
xlat
xlat
lret
ss
sub
sub
or
arpl
ljmp
scas
aaa
jle
or
dec
dec
pushf
sbb
xchg
sub
sub
mov
fmull
test
jg
or
fsub
pop
les
lret
sub
lods
jnp
mov
adc
jmp
enter
lcall
pop
test
movsb
jne
jmp
popf
mov
pushf
out
stc
int
cltd
and
in
insb
xchg
and
xlat
mov
push
mov
mov
stc
in
call
cld
fistpl
adc
repz
fucomp
jnp
add
mov
in
jns
dec
and
lock
or
xlat
sub
fcmovnu
mov
add
fmull
sarl
lret
in
movsb
in
pushf
or
dec
dec
and
inc
mov
dec
testl
int3
mov
rclb
imul
test
jmp
sbb
arpl
sbb
imull
in
mov
inc
stos
dec
int3
or
inc
and
call
cmp
xchg
sbb
cmp
je
sbb
imul
fmulp
add
in
imul
sbb
pop
icebp
ss
fistpl
test
adc
dec
adc
movsb
icebp
clc
dec
int
call
lret
inc
cmp
scas
xor
or
push
and
mov
dec
cltd
cli
inc
pop
mov
iret
sub
mov
push
scas
addr16
pop
mov
cmp
cmp
dec
dec
pop
inc
fmull
mov
leave
mov
test
sub
and
pushf
push
iret
cld
scas
loopne
fcomps
ss
sbb
fucomi
enter
push
leave
imul
push
pop
ds
aas
insb
lds
testb
push
out
fsubrs
sub
mov
dec
or
or
fldenv
mov
mov
shr
sbb
inc
stos
inc
mov
inc
popf
sbbb
test
fchs
dec
mov
pusha
ror
lcall
sub
call
pop
dec
xor
rcll
dec
outsl
test
mov
cwtl
cmp
mov
sub
jecxz
mov
jp
pop
mov
mov
roll
cs
pop
cmp
stos
xor
adc
das
xlat
arpl
imul
jbe
inc
fmull
nop
ljmp
pop
push
xchg
aad
enter
inc
dec
cltd
and
inc
sbb
or
aam
int3
xlat
cmp
sysexit
cmp
stc
cld
std
jmp
loop
pusha
imulb
mov
push
test
repz
fcmovne
mov
xor
int3
pop
mov
push
mov
cmp
movsl
pop
fmul
inc
or
popa
aad
iret
adc
cmp
jnp
das
sub
stc
mov
shrl
and
imul
test
mov
sbbl
jmp
std
adc
roll
cmp
popa
cmp
clc
cmp
dec
movsl
fisttpl
sbb
popa
sbb
enter
dec
cmp
cmp
and
dec
ljmp
dec
lret
mov
in
cwtl
cs
enter
fstpt
mov
int
pop
ret
loop
pushf
inc
in
dec
jmp
dec
xor
test
or
fwait
call
lret
shll
cltd
inc
rorb
pop
sti
sub
sub
mov
das
lods
or
faddl
pushf
aam
cwtl
je
iret
cmp
sub
out
mov
mov
sub
jmp
sub
sub
cli
and
jbe
dec
lcall
push
ja
cmp
dec
lret
mov
mov
test
cld
add
mov
sbb
aaa
jns
pop
xchg
add
pop
rol
stos
sbb
pusha
push
cmp
outsl
sub
fmulp
out
rorb
xor
flds
leave
addr16
adc
mov
sub
lret
sti
fisubrl
in
cwtl
fwait
int3
call
sbb
movsl
imul
xor
mov
cltd
mov
dec
mov
iret
dec
and
pushf
cltd
mov
adc
cmpsb
fldt
shr
lret
or
mov
push
sub
mov
movsl
xchg
int
mov
ljmp
popa
mov
add
ficoml
mulb
sbb
loopne
cld
scas
cwtl
cmp
jmp
fcmovb
sub
and
fmul
cmp
lret
outsb
sbb
movsl
fstps
or
cwtl
scas
pop
and
mov
dec
out
inc
sub
arpl
xlat
mov
adc
pop
push
lcall
mov
xor
lret
lods
fldcw
outsb
dec
test
call
mov
mov
paddsb
mov
dec
sub
and
imul
inc
mov
and
lret
xor
push
xchg
scas
hlt
jmp
enter
push
cmp
pushf
sub
imul
jnp
xchg
leave
mov
jb
jo
sbb
popf
mov
dec
xor
call
cwtl
xchg
stos
pop
jmp
imul
imul
ret
xchg
mov
xor
leave
lods
mov
cmp
pop
lods
ss
stc
and
stos
mov
imul
enter
dec
cld
pop
push
cs
dec
lock
mov
or
clc
test
dec
xchg
mov
cmp
arpl
xlat
mov
ffree
ljmp
imul
and
and
ret
jmp
and
sbb
scas
mov
push
mov
cli
stos
xor
or
shll
or
pop
sub
cmp
imul
fildl
cwtl
imul
adc
adc
cltd
in
pop
pop
push
fisttpll
jns
outsb
fcmovnu
and
stos
pop
ljmp
push
pop
lods
int3
jbe
flds
mov
mov
mov
mov
das
xchg
cmp
xlat
sub
xor
dec
movsl
add
dec
fdivrl
idiv
pop
or
hlt
xchg
sbb
cmp
sub
das
sub
sub
cmp
leave
sub
stc
sub
dec
xor
cmp
inc
inc
cwtl
or
inc
cmp
cwtl
adc
pop
clc
cmp
cwtl
pusha
jp
dec
sub
mov
aad
xchg
ja
inc
xor
mov
gs
cmp
ljmp
jle
bound
js
jno
jecxz
cmp
and
mov
add
push
pop
mov
sub
and
mov
push
loope
sub
inc
addl
stc
call
pop
mov
sub
divb
ss
jae
mov
clc
xor
icebp
mov
xchg
int3
dec
sbb
insb
lock
stos
dec
fdivrl
in
jns
cmp
aad
call
jnp
mov
mov
popf
jae
shrl
cmp
hlt
push
cmp
jmp
cs
and
or
scas
mov
jbe
sbb
lret
mov
mov
out
int3
imul
xchg
aam
insb
fmul
sbb
pop
hlt
int
sbb
cmpsb
and
je
cmpsb
subb
and
fiaddl
sub
fsubs
shrl
dec
and
enter
fnstsw
sbb
jl
testb
pop
movsl
cmp
or
push
lds
mov
push
add
adc
lret
fnstcw
jnp
jbe
test
mov
adc
fiaddl
push
outsb
dec
rcll
repnz
mov
scas
sti
fwait
in
in
mov
lock
loope
add
ss
sub
fucompp
leave
inc
mov
bound
int
fidivrl
pop
movsl
lahf
in
push
mov
jns
xlat
xor
cmp
shl
cld
jne
stc
fnstcw
test
push
lcall
xlat
mov
cld
mov
dec
lods
cli
mov
pop
sbb
and
lret
mov
cmp
repz
in
mov
popf
pusha
mov
push
jmp
cmp
xchg
mov
stos
sbb
int3
outsl
adc
lret
push
lods
clc
cmp
sub
mov
mov
lret
sub
int
sbb
or
inc
jns
enter
shll
cmp
imul
push
mov
fsubrs
mov
cmc
ljmp
mov
push
leave
mov
mov
pushf
clc
cmp
dec
imul
pop
mov
lret
sbb
jmp
lods
sbb
push
cmp
cmp
pushf
or
push
aad
mov
add
ja
fidivrs
aas
cmp
cmp
lcall
pushf
std
and
fxch
ret
leave
test
or
pop
lods
cmp
cmp
xor
add
mov
add
ja
xor
mov
pushf
scas
cmp
stos
imul
popf
outsb
cmp
pushf
lods
mov
mov
fldcw
test
mov
add
sub
mov
cmp
stos
sub
mov
jbe
xlat
lret
jns
pop
and
stos
cltd
jecxz
push
dec
cld
pop
pushf
ret
xchg
push
mov
out
cmp
in
inc
outsb
lods
rcrl
and
pop
std
imul
add
sub
mov
test
jmp
add
test
sbb
or
sub
sbb
pop
jns
movsl
test
pop
sub
js
test
imul
cmp
mov
pop
mov
lcall
xor
inc
cmp
stos
int3
sub
outsb
fimull
jns
xchg
leave
cli
fisubl
pushf
xlat
cmp
mov
fadd
jae
or
out
and
jg
add
fsubrl
aas
xchg
repz
adc
pop
icebp
adc
push
loop
sbb
inc
and
or
in
jmp
inc
cld
inc
or
stc
sbb
and
movsl
mov
frstor
data16
mov
cli
in
sbb
std
and
inc
and
pop
in
pop
mov
outsb
xor
inc
pop
push
mov
outsb
mov
jp
into
ss
stos
test
or
lret
fstpl
test
or
imul
stos
mov
xor
ljmp
mov
imul
and
push
stos
test
cmp
shrl
ljmp
fnstsw
cmp
dec
mov
sbb
enter
movsb
hlt
mov
icebp
cltd
inc
shl
sbb
add
in
sub
or
push
add
sbb
add
cmp
popa
xor
and
jb
sbb
lret
jnp
stos
test
sub
imul
sbb
js
xlat
mov
mov
xchg
push
enter
pop
jae
pop
das
out
fistpl
fcompl
lock
jmp
sub
pop
outsb
aad
int3
sub
mov
lods
lods
add
cli
sub
lods
cmp
cmp
xchg
dec
std
mov
insb
push
ljmp
hlt
mov
push
mov
add
adc
call
daa
subl
leave
mov
mov
jb
or
test
xchg
jbe
xchg
add
cmp
or
lods
out
das
pop
fdivr
mov
mov
dec
jbe
pop
loop
addr16
pop
and
shlb
adc
stos
cwtl
mov
fcomp
or
add
imul
daa
mov
sub
pushf
sub
jbe
mov
ljmp
stc
movsl
ljmp
mov
lret
gs
outsb
daa
out
inc
sub
mov
ljmp
sub
adc
lret
cmp
pop
sub
pop
sti
and
in
and
test
dec
xchg
sub
in
push
lods
sti
pusha
sbb
pop
jmp
jne
orb
sub
cmp
mov
std
fbstp
mov
and
dec
ret
negb
push
jmp
imul
faddl
cmp
inc
cmp
lock
add
push
outsl
addr16
cmp
out
test
movsl
stos
sub
cmc
xchg
fprem1
je
jmp
ljmp
fmull
sub
enter
xlat
mov
mov
fdivrs
add
hlt
icebp
push
and
mov
push
cld
mov
ret
lret
and
and
scas
ror
sti
or
fstpl
stos
pop
stc
movsl
lods
mov
shr
fidivrl
mov
pushf
in
cwtl
call
xchg
fwait
xor
outsl
int3
lret
loope
xor
jmp
mov
dec
dec
data16
cmp
pushf
int3
test
lret
dec
outsb
test
stc
fisttps
rorl
js
sub
mov
sub
dec
outsb
in
fmuls
in
das
pop
std
rcll
cli
cld
test
fdivr
add
testb
fidivrs
inc
inc
jno
mov
cmp
adc
fadds
sub
mov
sub
jmp
jmp
lret
in
add
jns
fisubl
sub
inc
cmp
jae
jbe
addr16
mov
lods
outsl
dec
sub
jo
add
lds
cli
sub
fs
sub
leave
sbb
mov
insb
jo
pop
arpl
hlt
daa
mov
mov
jl
dec
fmull
xor
roll
push
les
scas
mov
mov
cli
or
add
lret
mov
stos
clc
mov
push
cmp
cld
stos
pop
and
push
mov
movsb
imul
and
fldcw
lods
xor
pop
dec
lcall
cli
imul
stos
lret
outsl
sti
or
mov
dec
xor
sub
xor
rcr
mov
imul
pand
mov
or
mov
jmp
mov
in
jmp
jb
test
pop
mov
mov
loop
adc
lcall
inc
or
test
sub
cld
and
cli
mov
cwtl
jmp
jns
mov
std
jns
test
aaa
ja
call
add
call
ret
xchg
sbb
out
pushf
and
sub
arpl
and
scas
orl
or
pusha
cmpsl
test
or
add
leave
gs
fwait
lods
daa
pop
test
test
mov
fmulp
cmp
es
inc
test
fnstcw
sub
xlat
mov
nop
xchg
xchg
and
hlt
adc
imul
outsl
push
sub
and
test
cltd
clc
push
cmp
imul
mov
xchg
movb
push
pop
sub
adc
ss
stos
pop
jmp
lds
stos
imul
pop
fdivrs
fdivrl
dec
les
addb
mov
std
pop
test
inc
xor
leave
xchg
cmp
xchg
aad
mov
mov
imul
mov
jmp
jecxz
pop
cmp
adc
daa
jmp
mov
leave
ja
lods
outsl
out
mov
call
repnz
xor
sub
leave
test
pushf
scas
ljmp
jmp
xchg
mov
movsb
fs
dec
pop
sbb
jnp
or
dec
scas
sub
int3
fiaddl
outsl
or
movsl
clc
sbb
cmp
sbb
enter
das
imul
push
repz
lret
cmp
sub
lret
mov
nop
mov
jmp
sbb
mov
jmp
dec
cmp
mov
lea
leave
lds
lret
push
test
dec
fcomps
inc
sbb
cwtl
jmp
mov
dec
inc
adc
or
pop
negl
test
dec
pop
mov
fdivr
push
negl
xchg
cmp
xor
das
and
test
and
fsubrl
or
pop
pop
cmp
loope
mov
int3
sub
pushf
loop
cli
imul
sub
in
xchg
push
into
stos
movsl
xchg
in
lret
and
dec
fxch
sub
cmp
mov
fldl
xchg
lret
test
ss
fistps
jno
cmp
cld
ja
lods
cmp
sub
and
mov
sub
xor
mov
arpl
lods
mov
sub
inc
or
testl
xor
lcall
call
cli
jl
shlb
mov
sbb
flds
popf
std
xchg
dec
jle
pop
test
dec
clc
cmp
stc
or
ja
imul
int3
jle
cmp
push
jmp
jecxz
push
sub
pushf
imul
pop
add
inc
jmp
sarl
test
push
sbb
mov
lods
or
enter
or
mov
imul
push
add
mov
cmp
cld
popf
add
push
mov
test
cli
fisubrl
clc
fsubrs
dec
dec
cwtl
mov
mov
xchg
test
sbb
cltd
sub
outsl
inc
xchg
sbb
pop
push
in
mov
cmp
xchg
ret
fs
cmp
outsb
inc
imul
stc
mov
setns
add
or
cmpsb
jne
adc
sti
call
jmp
repz
inc
cmp
fwait
push
sub
push
fdivrs
sbb
data16
cmp
jbe
jae
and
jnp
dec
dec
in
mov
and
cwtl
inc
stos
cmpsl
push
mov
jns
mov
mov
pop
inc
test
stos
push
ret
movsb
pushf
cmc
cmp
jnp
mov
pop
scas
mov
clc
pop
cli
cmpsl
push
lcall
into
leave
imul
sbb
dec
outsb
js
sti
cli
and
jnp
jo
arpl
repnz
sub
lods
or
faddl
notl
sti
cwtl
mov
rcrl
call
fsubrs
subb
sti
sbb
push
sbb
movsl
cli
insl
fs
pop
and
sub
popl
mov
stc
pop
movsl
js
and
xchg
and
leave
fs
mov
cs
cmp
and
imul
cmc
pop
stos
or
cmp
and
lret
test
repz
mov
std
cld
sub
imulb
pop
add
notb
dec
stos
sbb
xor
scas
dec
jmp
cmp
sub
cs
stos
leave
xor
xchg
fisubrs
jbe
enter
xor
jg
stos
fldcw
cmp
mov
fsubr
lods
test
dec
stos
or
fadd
scas
imul
mov
dec
mov
cmp
into
mov
mov
cmp
loopne
jmp
test
inc
push
cli
inc
ds
fwait
push
shr
mov
sbbb
cmp
out
mov
cld
add
mov
inc
ss
fcmovbe
cwtl
sub
push
push
loop
stos
jo
lods
in
sub
popf
sub
imul
xchg
jne
sub
enter
inc
test
mov
sub
lds
sub
dec
mov
mov
xchg
lods
leave
lods
push
ret
sub
pop
dec
in
pop
sub
push
lods
xor
fnstcw
cmp
cmp
test
stos
rclb
push
push
jne
lret
jnp
enter
push
clc
and
faddl
sbb
push
sub
jbe
jmp
adcb
inc
in
lods
or
mov
lahf
outsb
stos
cld
cwtl
xor
lret
cmp
stc
add
adc
testb
xchg
int3
imul
lret
into
push
lret
outsb
mov
pushf
and
fs
ss
and
jmp
and
add
pop
inc
and
outsb
and
or
cmp
sti
fwait
inc
jne
fstps
lods
pushf
dec
xchg
xchg
fs
sub
pop
mov
xlat
int
in
rcrl
out
mov
sbb
adc
test
pusha
jae
data16
add
dec
xchg
sub
dec
ljmp
adc
mov
mov
lret
xchg
and
lcall
dec
sub
scas
jnp
je
sbb
cmp
jle
cltd
mov
cmp
and
sbb
cmp
sub
mov
add
in
add
outsl
ljmp
lods
clc
mov
sub
or
inc
dec
in
push
lcall
sub
outsb
stos
xor
jp
dec
mov
xor
in
dec
adc
mulb
and
cwtl
or
push
call
stos
add
or
stos
outsb
call
fisubrl
dec
or
fldenv
testl
stos
enter
mov
jg
loop
push
cmpsl
cmpsl
jmp
sub
call
aad
mov
stos
loope
dec
out
test
inc
mov
xlat
cmp
js
mov
pop
lods
sbb
push
mov
inc
bound
xchg
call
xchg
mov
sub
lock
mov
sbb
mov
xchg
mov
sbb
sbb
mov
sarl
imul
lds
sbb
fldt
dec
push
int3
or
mov
call
test
cmp
xchg
sub
or
fcmove
inc
jmp
or
cmp
sbb
jge
ljmp
adc
cli
test
mov
push
and
dec
add
int3
adc
jne
cmp
call
inc
mov
fmul
lea
cmpsb
fwait
sti
mov
jecxz
inc
imul
loopne
dec
notl
mov
cwtl
add
test
popf
cmp
mov
pop
popf
daa
es
cmp
and
jo
dec
cmp
mov
dec
mov
sti
lods
xor
fwait
mov
cwtl
imul
push
fcom
cmp
xchg
sub
mov
cmp
out
fisubrl
adc
jmp
jnp
stc
or
pop
adc
imul
mov
cmp
mov
lcall
stc
jecxz
or
test
cmp
sub
mov
sub
mov
and
leave
iret
or
scas
insb
mov
and
dec
mov
jmp
test
lret
sub
gs
orl
clc
and
xchg
cmp
imul
pop
mov
cmp
out
leave
loop
adc
mov
ljmp
dec
pushf
test
into
imul
pop
rorl
mov
stc
jmp
in
shll
leave
sub
cld
dec
aam
sbb
sub
test
test
lret
ljmp
fdivrs
dec
rclb
stos
push
lcall
lods
int3
test
sub
cmp
lret
sti
jmp
and
dec
mov
pop
imul
into
push
xchg
inc
aad
int3
sbb
add
and
sub
pushf
fldln2
stos
mov
sbb
sbb
in
loopne
mov
mov
cmp
cmp
lea
cmp
hlt
repnz
shll
loopne
ss
cmp
in
fcomps
pusha
sarl
jmp
mov
jmp
cmp
int
lcall
out
jns
mov
imul
adc
cli
aas
inc
test
fcomps
xlat
jns
push
cli
int3
stos
jno
fwait
lret
ljmp
push
aas
scas
testl
adc
scas
jbe
jp
sbb
sbb
dec
in
sahf
sub
push
das
fcmovu
jmp
repz
jbe
in
cmp
push
cwtl
stc
jmp
lret
add
mov
adc
ljmp
stc
pop
mov
ror
enter
push
and
dec
mov
dec
xor
int3
or
pop
and
mov
stos
sbb
aas
lea
dec
or
insb
lret
ss
stc
xor
cli
leave
out
aam
in
jl
mov
movsb
cli
jmp
mov
cs
add
or
dec
lret
sbb
fsubrs
test
cld
pop
aaa
xchg
cmp
sub
ljmp
stos
mov
mov
sbb
stos
sti
mov
dec
testb
cmpsb
test
mov
cmpsb
adc
fsubrl
repnz
inc
clc
mov
push
dec
jbe
sbb
sub
and
cmp
xor
mov
je
lret
cli
pop
mov
xor
lea
aad
aad
mov
test
imul
fmul
cmp
xlat
jmp
cmc
mov
jno
mov
cwtl
dec
in
insb
add
adc
clc
mov
stos
xlat
fisubl
imul
mov
xchg
dec
and
or
lret
in
arpl
idiv
mov
shrb
sbb
mov
cmp
dec
and
stos
scas
outsb
inc
jl
imul
jbe
scas
leave
cltd
adc
pop
mov
jp
cs
pop
ljmp
ds
dec
xlat
mov
jo
jmp
repnz
sbb
add
clc
int3
testl
int
lret
fmuls
cmp
mov
sub
or
or
inc
out
sub
imul
pop
mov
fisttpll
mov
stos
test
or
cmpsl
add
sbb
cmpsl
je
scas
arpl
aas
stos
sbb
xlat
or
cltd
cld
test
std
xor
mov
mov
negl
or
call
sub
cmp
sub
fsubrs
lds
sarl
jno
stos
cmp
sub
imul
dec
scas
outsb
and
dec
cmp
pop
lcall
insb
stos
aam
and
movsb
je
lods
jmp
mov
in
lock
and
call
inc
mov
cs
add
scas
popa
mov
add
cltd
mov
stos
inc
push
mov
dec
push
clc
jne
inc
jmp
dec
push
test
push
cmp
lods
mov
fwait
imul
jnp
int3
pop
aad
pop
mov
dec
enter
mov
test
dec
cwtl
clc
adc
ss
pop
inc
loope
cld
sarl
push
lds
int3
cmp
pushf
in
out
imul
mov
cld
ljmp
mov
or
cmp
push
ss
and
inc
jno
sahf
mov
inc
sbbl
test
out
cmpsb
cli
outsb
enter
fstpt
xchg
popa
mov
je
pop
adc
cmp
fdiv
leave
out
cmp
popa
inc
cmp
sub
mov
jne
sub
mov
or
scas
xchg
pop
mov
mov
leave
xchg
jo
cmp
mov
fdivr
in
adc
cmp
sub
lcall
mov
stos
stos
call
imul
cmp
pop
stos
sbb
sub
jecxz
xor
or
stos
jmp
mov
pop
mov
jle
and
mov
mov
pop
sbb
ss
lret
mov
adc
sti
push
adcb
test
call
testb
inc
push
jmp
mov
sbb
lret
stos
sqrtps
adc
imul
lods
mov
rcrl
mov
jmp
int
mov
test
ljmp
add
mov
stc
xchg
aas
out
ja
and
dec
aam
inc
xor
xchg
lock
push
aad
cmp
fucomi
test
mov
cmp
daa
pop
pop
jg
movsb
sbb
ds
cmp
dec
pop
push
mov
out
lods
mov
cmp
adc
adc
dec
movsl
es
sub
fsubs
xor
sbb
stc
fisubrl
mov
or
sub
cld
mov
cmp
ret
test
fnstsw
fdivrp
cmp
test
test
fwait
cmp
sub
push
pop
xor
leave
mov
mov
pop
mov
out
cld
mov
mov
cmp
dec
ja
mov
fwait
sub
lods
aam
int3
test
ror
push
pop
jns
neg
data16
in
mov
outsb
movzbl
pop
ljmp
stc
fistl
out
mov
fisttpl
push
dec
xor
leave
pop
pop
scas
arpl
gs
pop
inc
popf
daa
sub
stos
mov
dec
mov
cmp
imul
jg
mov
stos
das
or
cld
pop
inc
jb
push
mov
mov
mov
and
fisubl
add
inc
imul
lods
add
stos
imul
repnz
test
sti
dec
mov
push
stos
mov
cltd
movsl
lock
mov
pop
movsl
jp
sbb
dec
movb
dec
out
fisttps
mov
in
cmp
dec
dec
mov
pop
or
mov
mov
cmp
fwait
and
and
or
sbb
stos
jbe
or
movsl
dec
lcall
lret
pop
rcrl
repz
jb
and
cmpsl
fcomps
xor
pop
ss
jp
sarl
fwait
cld
test
stos
and
cmp
pop
and
xchg
jle
jno
sbb
repz
fadds
std
inc
push
xor
mov
loopne
inc
push
fiaddl
dec
dec
outsb
or
sbb
inc
lock
sub
xchg
lods
fstps
lcall
pop
dec
inc
cli
jbe
xchg
push
stos
leave
fs
mov
int3
fiaddl
pop
dec
sti
repnz
stos
mov
mov
xchg
shlb
dec
or
pop
fisubl
lret
sub
leave
and
test
jg
movsl
loope
popf
lds
sub
cmp
mov
fdivs
mov
stc
sbb
mov
mov
popa
mov
jnp
jbe
in
fistpl
lcall
std
test
ret
or
lret
push
cmpsb
popa
cmp
sub
test
or
mov
cmpsb
cli
xor
int
inc
lret
lods
or
pop
outsl
stos
mov
adc
mov
inc
daa
xchg
mov
enter
xor
pop
mov
sbb
int
imul
sub
out
mov
sbb
push
mov
push
push
fiadds
repnz
or
fsubs
mov
jg
insb
nop
jge
testl
std
lea
ljmp
fmull
dec
std
inc
daa
into
mov
addr16
outsb
gs
push
inc
into
fidivrs
pushf
stos
lret
jg
pop
mov
popf
cs
lahf
mov
fwait
mov
iret
loop
into
in
mov
fiadds
mov
test
add
into
test
push
cmp
mov
dec
lea
cld
lcall
testb
inc
inc
mov
test
xor
in
cmp
mov
mov
outsb
mov
mov
cmp
jns
jecxz
dec
jns
add
ret
cltd
mov
cmp
xor
jbe
mov
mov
push
call
mov
dec
cmp
xchg
mov
adc
outsb
lods
or
lock
cld
popa
mov
lret
cmp
mov
in
push
mov
adc
sahf
mov
call
jge
lcall
mov
inc
xchg
cmp
scas
mov
dec
lcall
cltd
lret
cs
lret
fnsetpm(287
pop
call
sbb
fs
ja
int3
lock
faddl
jo
xchg
mov
or
outsl
pop
js
dec
cmp
inc
lret
loop
push
pop
pop
fwait
push
test
test
fdivr
inc
dec
xor
mov
mov
dec
jmp
mov
mov
lret
in
or
and
ret
test
jns
mov
mov
sbb
clc
jnp
cmp
cmp
stos
cmp
sub
xchg
sub
lods
sub
imul
or
mov
cltd
jns
outsl
cli
test
sbb
dec
mov
mov
cwtl
lret
lods
mov
mov
jmp
mov
jmp
sbb
clc
lcall
ljmp
mov
stc
popf
ficompl
in
loope
pusha
cmpsl
pop
cmp
dec
fwait
orps
add
fucomi
cmpl
cwtl
inc
dec
into
cltd
call
enter
shl
ljmp
or
xlat
fisttpl
in
int3
fcmovb
mov
aad
imul
xchg
adc
call
mov
adc
faddl
stos
imul
ss
cmp
orb
mov
lret
sti
mov
imul
scas
add
lock
or
lret
and
cld
mov
fsubrl
movsl
leave
test
pop
call
or
and
fsubrl
jnp
mov
sub
xor
jnp
mov
cltd
loop
fiaddl
jmp
test
mov
stos
or
dec
adc
leave
inc
mov
xchg
ljmp
scas
add
and
pushf
ljmp
in
xorl
mov
adc
dec
xchg
stos
fsts
add
or
in
mov
loope
fldl
in
inc
lret
ss
movsl
inc
cld
mov
sbb
cs
mov
sub
das
fidivrl
fwait
mov
or
cltd
xor
jnp
cmp
sbb
call
xchg
cwtl
outsb
cmp
and
cmp
leave
xchg
mov
xor
test
stos
push
cmpsb
insl
or
sbb
loope
or
xor
mov
insb
adc
mov
cmp
iret
loope
push
ljmp
fisubrl
mov
add
scas
sbb
test
cwtl
cmp
or
push
popa
fcomps
in
scas
cmp
ret
push
cmp
enter
fwait
xor
or
mov
mov
shlb
enter
outsb
out
lret
stos
lods
insb
dec
aad
leave
or
lret
xadd
mov
xchg
movsb
cwtl
pushf
jb,pn
lods
push
roll
mov
fwait
sahf
sbb
cmp
mov
sbb
mov
int3
jnp
sub
inc
fstpt
cwtl
lods
sub
arpl
cli
cmp
sub
arpl
inc
pop
call
lret
ljmp
cmp
in
mov
dec
test
mov
pushf
cmp
imul
int3
out
cmp
push
idiv
cmp
stos
cmp
rdtsc
jge
fcompl
fimuls
xchg
sbb
push
sub
jecxz
jp
sub
cmp
dec
fnstcw
cmp
xor
pop
cli
iret
sahf
and
cld
xchg
cmp
lcall
mov
mov
pop
cltd
xlat
cmp
inc
int3
inc
sub
cmp
or
adc
fidivrl
jmp
in
pushf
jmp
xor
aad
sbb
loop
stos
stc
test
fcomp
pushf
jns
test
aas
mov
fldcw
negb
int3
mov
lods
imul
sub
int
clc
jns
ret
stos
or
mov
xor
outsb
xchg
loop
fcmovnu
mov
and
jnp
mov
call
xor
pop
lea
cld
imul
pop
xchg
xor
pop
fmulp
mov
pop
cmp
inc
popa
mov
int3
in
mov
jmp
lds
sbb
outsb
and
ss
adc
sti
pop
adc
lcall
scas
mov
test
mov
jnp
add
cmp
cmp
test
dec
cs
fbld
in
out
scas
dec
mov
pop
cld
mov
xor
stos
push
or
lret
sbb
xchg
aad
roll
xor
mov
stos
cli
ss
clc
mov
jmp
mov
loopne
pusha
cmp
push
das
mov
clc
imulb
fcmovnb
inc
fimuls
addr16
sub
jp
in
cli
pop
clc
ds
add
rcll
push
cltd
fildll
and
dec
or
inc
sbb
aaa
sub
mov
leave
leave
cli
or
pop
xchg
mov
mov
mov
lahf
in
test
mov
int3
cltd
lods
pop
sbb
push
imul
mov
jns
mov
inc
or
inc
pop
scas
sbb
dec
jnp
push
mov
sub
dec
push
mov
stos
cmp
pop
inc
or
int3
ja
sub
out
ljmp
sbb
xor
dec
mov
les
jne
sub
cltd
add
pop
sti
sbb
dec
ss
mov
cwtl
jae
ret
stc
sub
cmp
xor
stc
xor
xlat
xchg
cmp
test
pusha
divl
push
cli
lcall
add
cltd
pop
adc
dec
lret
test
mov
ror
fidivrs
sbb
addb
mov
xor
mov
arpl
cmc
cmp
mov
fldenv
adc
xor
pop
into
cmp
xor
test
leave
inc
sub
test
enter
cmp
cmp
clc
dec
std
fwait
shl
imul
jmp
imul
in
adc
mov
fdivl
lods
loopw
mov
test
out
fcompl
pop
mov
push
imul
xor
idivb
xchg
sub
cmp
test
mov
or
stos
stos
dec
sbb
xor
sub
fwait
pop
imul
inc
sti
xor
scas
lods
data16
clc
add
movsl
cld
cmp
xchg
adc
mov
push
sbb
dec
push
sbb
fsubs
arpl
shlb
mov
dec
sub
adc
adc
inc
or
sub
jmp
mov
fwait
int3
fs
jne
imul
mov
stos
sbb
jmp
leave
dec
shll
or
and
and
ljmp
stc
in
pushf
fcoml
fmuls
insl
mov
test
outsb
pop
cmp
aas
jg
push
mov
daa
inc
xchg
and
sbb
cltd
push
imull
repz
fwait
cwtl
mov
lret
cmp
daa
call
imul
cs
ljmp
xchg
icebp
das
sbb
jmp
lods
out
pop
cmpsb
cmp
mov
loop
das
leave
cli
scas
cmp
inc
out
lcall
mov
mov
cld
sub
scas
and
and
mov
imul
inc
and
fsubr
imul
cmp
inc
cmpl
in
imul
sub
cmc
sbb
int3
outsb
fwait
mov
push
push
xor
in
call
inc
jle
mov
inc
mov
pushf
popf
lods
mov
mov
xchg
cld
adc
inc
sbb
shl
mov
pop
add
push
sbbb
mov
mov
mov
repnz
int3
lds
sub
in
mov
mov
sbb
sbb
and
dec
push
in
dec
clc
ja
mov
fidivrl
sub
pop
mov
stos
adc
cmp
call
stos
push
or
aad
add
cmp
cmp
pmulhw
popf
ror
cld
sub
fimuls
xor
ret
dec
cli
and
xchg
fcomps
fsubrl
mov
cmp
test
enter
or
dec
hlt
fmul
arpl
cmp
loop
psubsb
pop
xor
and
jae
pop
add
ret
sub
into
stos
jne
jmp
fsubs
jns
stos
mov
fwait
mov
and
cmp
ficoms
movsb
xor
rcll
aad
fwait
popf
cwtl
fistpl
ljmp
jnp
and
pushf
in
subb
in
cmp
aas
fdivrs
sbb
and
les
dec
stos
int
mov
cmp
sub
cmp
xor
mov
dec
out
or
xchg
test
mov
loopne
adc
xchg
or
insb
dec
push
dec
cmp
push
jmp
sbb
mov
lcall
pop
cmp
push
in
or
ret
sub
sub
mov
sub
mov
mov
pusha
ljmp
sub
fimull
dec
out
inc
insb
insb
mov
mov
jnp
mov
and
mov
in
pop
fcompl
lret
pusha
roll
fistps
std
jg
push
jnp
mul
push
shll
xor
fwait
jmp
and
cmp
stos
fiaddl
cwtl
mov
lret
inc
lret
outsl
push
stos
cmp
imul
or
enter
clc
push
cbtw
icebp
fsubrl
and
sarb
xchg
or
test
cmp
scas
mov
call
jne
cmp
cltd
fisubrs
addr16
pop
add
pop
or
lods
movsl
lcall
and
stos
mov
dec
sub
test
sbb
fldt
popf
ss
lock
add
pop
cltd
dec
int3
test
push
cmc
jnp
lods
jmp
push
xchg
push
mov
les
cmpsb
movsl
mov
je
jb
lcall
std
jle
pop
test
fldt
mov
xor
je
scas
outsb
push
cwtl
mov
cli
stos
scas
mov
cmp
fwait
push
sbb
sti
sub
or
mov
push
push
mov
fsubrs
mov
mov
cmp
push
sub
cs
add
test
lock
lea
sub
sub
jnp
jns
imul
lock
sub
or
div
test
jns
or
fs
mov
dec
scas
cmp
sub
add
imul
jbe
adc
and
sub
mov
cmp
loop
imul
sub
cwtl
aas
mov
jmp
rcrb
pop
arpl
add
dec
test
push
sub
enter
push
imul
push
pushf
push
mov
aas
mov
cmp
negb
or
cmp
push
push
js
dec
lret
arpl
stos
in
dec
rorl
xchg
das
dec
imul
mov
pop
cmp
mov
mov
das
imul
cld
mov
mov
imul
xor
daa
adc
sbb
sub
fcomps
sub
mov
pop
imul
dec
xchg
push
es
nop
ret
movsl
add
or
imul
lret
in
sub
cmp
cmp
dec
test
jo
cmp
cmp
int3
mov
pusha
mov
or
cs
ret
cltd
dec
stos
mov
dec
pop
xor
jmp
cmp
cltd
call
fisubrl
push
cmp
dec
sub
fldt
js
fsts
shrb
movsl
jns
call
ljmp
mov
add
lret
out
lahf
psubusb
jo
stos
cmp
jnp
cli
lcall
cmp
stc
inc
xor
sbb
add
sbb
pop
scas
je
cli
or
fisubl
pop
cmp
ljmp
mov
pushf
or
shrl
or
movd
stos
cs
pusha
pop
jae
jns
push
sub
cs
mov
cmp
add
mov
data16
sbb
sti
scas
pop
lret
clc
push
cli
ret
pop
xor
idivl
fwait
sbb
shr
popf
add
int3
sub
jb
mov
cwtl
push
out
test
push
cmp
sub
stos
cltd
jns
xor
std
pop
enter
dec
rcrl
sar
fcmovnu
xchg
xchg
cli
dec
icebp
xchg
pop
fbld
push
lods
fmull
adc
mov
add
in
sbb
ficompl
lret
stos
sub
mov
mov
int3
dec
jnp
jb
outsl
test
cmpsl
sub
out
fwait
call
mov
fstpt
mov
leave
icebp
stos
cmp
mov
movsb
lcall
jp
pop
jmp
imul
sub
dec
mov
cs
stc
lcall
sub
adc
jmp
push
loop
or
aas
push
cmp
mov
fsts
add
loopne
bound
xchg
icebp
jg
jno
int3
mov
sub
pop
push
pop
test
jmp
pop
fnstenv
sbb
jb
dec
in
xor
xchg
xor
insl
fistl
in
cld
arpl
jg
add
jns
mov
in
jns
movsl
sub
xlat
aaa
stos
fwait
pop
cmp
stos
daa
pop
fsts
inc
lret
sub
mov
daa
push
cltd
test
pop
dec
mov
movsl
mov
mov
sub
cmp
outsb
scas
push
clc
pop
stc
add
lods
xchg
aad
jmp
cli
dec
mov
outsl
in
push
fmull
cmp
and
stos
cmp
mov
shrl
sub
cmc
test
sub
nop
dec
rol
fsubrs
testb
mov
call
xchg
mov
lret
xor
stos
ja
out
cmp
add
pop
clc
dec
and
loop
ss
fdivrl
dec
xor
ret
mov
clc
fstp
mov
pop
xor
leave
ljmp
scas
cltd
in
dec
add
int3
pop
and
pop
sbb
or
dec
xor
fldcw
cmp
fnstcw
popa
jmp
clc
pop
mov
jg
fcomps
mov
sahf
sub
sbb
ret
pop
xchg
sub
lcall
gs
sti
fldcw
lods
dec
icebp
into
jmp
fcompl
fsubrs
push
cld
mov
pop
aad
insb
test
lods
mov
ja
add
xchg
xchg
add
lahf
cmp
test
mov
xor
add
leave
test
in
test
inc
cltd
in
dec
outsl
mov
pushf
jmp
cmpsb
jmp
call
icebp
jnp
outsb
dec
js
fnstcw
lahf
mov
sub
idivb
test
outsl
mov
or
jno
pop
pop
cmp
sub
das
push
pop
cli
cwtl
sub
ror
lret
or
mov
lahf
sbb
loope
test
push
mov
mov
lods
cs
mov
cltd
or
icebp
jnp
mov
popf
add
sub
dec
dec
ret
dec
leave
add
cmp
xchg
xor
sub
push
jnp
cmp
leave
push
mov
test
cmp
enter
icebp
aas
and
stos
pushf
das
stc
je
or
aad
lret
imul
cmp
mov
ss
xor
or
imul
or
cmp
cs
ljmp
sti
dec
and
jl
and
test
mov
dec
pop
test
sub
sbb
sbb
jmp
sbb
xchg
or
stos
jnp
jbe
jp
test
out
insb
ja
mov
mov
mov
mov
pop
and
and
iret
or
mov
sbb
cwtl
jmp
mov
sbb
aaa
stos
inc
testb
xchg
pop
mov
mov
sub
scas
add
sbb
test
pushf
cmp
dec
and
cmp
mull
sbb
shrl
movsb
or
ljmp
andl
pop
inc
icebp
inc
test
loope
rdtsc
imul
push
push
sti
sub
negl
add
test
jbe
and
dec
push
push
rorb
pop
int
stos
sti
leave
and
add
hlt
lds
loope
sarl
xchg
jo
jb
lds
aas
negb
cltd
mov
push
inc
orb
sub
mov
test
mov
sub
repnz
push
aad
mov
sti
dec
popf
lahf
imul
test
pop
das
stos
cmp
dec
dec
int
lcall
cmp
inc
enter
fstpt
imul
lods
pop
and
push
xchg
repnz
mov
imul
sub
mov
push
or
mov
test
cmp
cmp
sub
mov
icebp
cmp
loope
loope
movsb
mov
dec
ljmp
add
dec
sbb
movsb
lods
sub
sbb
int3
jmp
adc
cmp
pop
inc
aas
lret
out
add
adc
pop
stc
pop
dec
test
push
fidivrl
ret
mov
cmp
adc
adc
lods
jnp
fldenv
cwtl
fsts
cmp
lahf
pop
or
mov
sub
cmp
dec
dec
mulb
pop
mov
in
jnp
sub
fisttpl
mov
pusha
cld
and
xchg
jmp
mov
lcall
leave
out
jmp
mov
cltd
pop
dec
xor
dec
or
pushf
insb
pop
push
sbb
repz
popa
mov
push
into
xor
cmp
dec
outsb
fisttpl
pop
adc
clc
or
sbb
scas
add
das
xlat
cld
xchg
hlt
push
and
fldcw
push
pushf
fwait
aas
add
loop
enter
sub
daa
inc
and
fcoml
lods
gs
cli
pop
xor
insl
lods
test
fidivrl
iret
mov
push
add
test
add
ficompl
lret
fwait
and
mov
jns
test
xlat
or
imul
dec
mov
aas
dec
sub
cltd
pop
imul
pop
dec
mov
mov
imul
cmp
lahf
in
leave
fwait
and
fisubrl
enter
lock
sub
shll
fcomi
inc
mov
inc
pushf
rorl
test
add
fwait
popa
std
les
xchg
imul
adc
pushf
mov
stc
jnp
xchg
addr16
lods
and
test
jl
pop
xchg
cmp
gs
ret
add
leave
mov
cld
pop
cmp
sti
pop
call
or
imul
inc
into
dec
mov
mov
or
cmp
jmp
cmpl
mov
stc
add
pop
inc
inc
out
sbb
into
push
sbb
les
dec
pop
ljmp
sbb
mov
push
ret
nop
jns
cmp
push
mov
inc
testb
mov
sbb
inc
cmp
out
lret
jae
xchg
in
fwait
sub
aam
stos
cmp
ret
fstpt
sub
cmpsl
jne
sub
stos
sti
jmp
in
aam
addr16
lods
sbbl
dec
popf
jecxz
mov
imul
cmp
imul
lcall
adc
movsl
fwait
cmp
add
mov
jae
mov
cmpl
mov
add
mov
cmp
stc
out
xchg
ss
sbb
icebp
and
cmp
xor
ret
jp
pop
stos
call
data16
adc
jmp
loope
cwtl
dec
dec
cmp
adc
push
in
pop
leave
iret
outsb
cmp
cltd
daa
fnsave
fwait
adc
mov
fldcw
int3
in
dec
or
iret
ljmp
sub
fldl
mov
or
mull
enter
pop
fcoml
faddl
int3
push
sbb
add
ror
imul
insl
movsl
pushf
cmp
lods
pop
scas
add
repz
out
dec
aam
scas
sti
mov
shrl
hlt
cmp
test
jns
xchg
mov
and
sub
fisubrl
jnp
fscale
popf
lret
sub
idivl
movsl
leave
cmp
dec
clc
outsl
movsb
pop
cltd
insb
repnz
in
imul
cmp
mov
fstps
sahf
cld
push
add
stos
fwait
jns
sub
sub
xlat
or
lretw
cli
add
stos
mov
test
pop
das
xor
out
mov
mov
pop
sub
test
cmp
into
movsl
lret
cmp
push
pop
pop
in
or
cld
xchg
cmp
imul
mov
pushf
imul
test
mov
or
dec
lcall
fisubrl
cld
push
mov
xor
cmp
fistl
scas
sub
or
cmp
sub
pop
in
mov
push
addr16
and
jns
mov
cmp
push
mov
mov
add
and
mov
sbb
mov
loop
test
cmp
sbb
pop
xor
mov
mov
add
cmp
inc
test
push
ss
push
imul
int3
imul
sbb
fdivrl
lods
lods
xchg
cmp
cmp
inc
lret
repz
add
loope
movsl
xor
fisttpll
sbb
cmp
dec
icebp
mov
imul
pop
call
or
lock
or
ljmp
bound
sub
or
stc
sti
aam
dec
mov
pop
out
pop
pushf
push
cmp
pop
mov
ucomiss
sarl
in
push
pop
call
push
stos
mov
or
sub
mov
sub
iret
push
dec
imul
sub
push
jns
lret
adc
test
fmul
adcb
mov
mov
sub
int3
or
mov
inc
mov
popf
cwtl
imul
dec
pop
adc
mov
test
mov
sub
cmp
pop
movsb
mov
cmp
fldcw
loop
in
mov
cmp
and
sbb
inc
sub
aaa
mov
ret
cmp
mov
ljmp
lcall
scas
cmp
gs
cmp
es
mov
push
shr
mov
and
or
scas
mov
test
popa
jmp
jae
adc
imul
jmp
sbb
pop
mov
mov
fwait
pop
ret
unpckhps
jnp
sub
mov
cmp
movsl
mov
repnz
int
pop
enter
test
fdivrs
leave
scas
iret
mov
sub
pushf
lret
imul
pop
aad
mov
pop
or
pop
dec
fisubrl
push
dec
lret
cmp
outsb
pushf
xchg
sub
stc
cmp
mov
jae
loop
mov
cmp
daa
or
fsubr
and
enter
mov
push
add
jle
add
cld
icebp
ljmp
adcl
fnstcw
cmp
cmp
aad
pop
adc
int3
mov
shl
jne
lret
movsl
mov
ljmp
mov
cmp
push
stos
int3
pop
push
shlb
add
sbb
mov
cli
clc
shl
dec
push
pop
or
mov
dec
add
fcmovnu
lret
cwtl
sbb
sub
imul
jl
cmp
into
mov
test
cli
push
push
rclb
xchg
jmp
negl
pop
mov
dec
sbb
sbb
fstps
sub
pushf
in
fcomp
cmp
mulb
xchg
dec
cmpsl
cli
sahf
mov
xchg
add
cmp
loop,pt
cwtl
jmp
sub
xchg
xor
and
or
mov
fwait
sub
or
inc
mov
mov
clc
pop
enter
mov
inc
out
clc
stos
and
or
stos
sbb
cld
in
out
movsl
cmp
add
xchg
dec
lcall
fld1
sub
mov
jno
or
or
xlat
in
cmp
sbb
mov
clc
cmp
cmp
sub
test
push
xchg
and
dec
scas
jp
lods
repz
stos
shll
jbe
call
or
outsl
cmpsl
push
mov
fldenv
sahf
pop
xor
in
imul
mov
sub
mov
cli
sahf
ret
cmp
aad
inc
add
dec
mov
dec
test
sbb
ret
je
xor
fs
out
lret
fwait
cmpsl
insl
test
cwtl
and
inc
in
add
add
jnp
dec
dec
movsl
mov
in
sub
imul
call
mov
orb
bound
sub
jle
jmp
push
lret
mov
jp
dec
sub
mov
mov
enter
mov
pop
add
sbb
inc
imul
stos
fwait
jns
push
leave
cmp
mov
dec
pop
fcomps
xor
xor
cmp
movsb
mov
sub
jmp
or
dec
and
sbb
mov
clc
imul
fst
inc
lret
sub
or
ss
ljmp
cmp
pusha
push
jnp
movsl
fsubr
stos
push
int
cmp
push
inc
test
cmp
xchg
lods
lret
shll
into
and
or
mov
xchg
shrb
sbb
fs
into
jae
sbb
or
push
in
test
test
sub
xchg
loopne
sbb
push
int3
fcomi
in
pop
clc
sti
jle
and
lods
sub
jl
cs
mov
pop
loope
loope
sub
cld
pushf
mov
bound
push
cltd
xchg
mov
sbb
cmp
pop
sbb
scas
mov
mov
clc
inc
mov
push
adc
dec
sti
aas
outsl
cmp
dec
enter
test
frstor
sub
push
mov
sub
nop
or
cmpsl
and
sub
sti
jecxz
sbb
and
inc
pushf
cltd
pop
dec
mov
cmp
popf
adc
lcall
mov
cwtl
add
sbb
inc
jmp
pushf
in
movsb
clc
jle
push
imul
dec
sbb
int3
mov
and
sbb
cli
repnz
pushf
or
shl
xor
lods
pop
call
stc
outsb
sub
lcall
add
cmp
arpl
movsl
stc
imul
lret
fiaddl
cli
dec
sub
lds
cmc
mov
add
sbb
mov
cmp
enter
sbb
clc
pop
cltd
mov
adc
das
push
mov
mov
sbb
aas
push
mov
ffreep
sub
fadd
push
mov
or
mull
ds
cmp
mov
jnp
inc
imul
xchg
lock
pop
jmp
testb
xchg
and
enter
sbbb
cltd
inc
iret
cmp
in
mov
push
pop
enter
lods
mov
push
test
ja
sbb
stos
sbb
push
aas
or
pop
jns,pt
fsubrl
add
jmp
insb
sbb
imul
jo
enter
test
push
dec
push
mov
fldenv
ret
jne
lcall
mov
mov
mov
mov
in
cmp
mov
adc
cld
data16
mov
in
mov
mov
test
lret
insb
stc
dec
mov
fsubl
test
jae
jle
mov
arpl
mov
icebp
jmp
push
mov
sub
or
mov
stos
ljmp
in
mov
sub
push
and
jnp
stc
test
sub
dec
repz
and
mov
inc
test
jmp
sbb
mov
pop
inc
hlt
bound
jnp
dec
fwait
das
insl
pop
dec
outsb
or
or
pusha
ret
cmovns
lret
add
cmp
mov
and
add
test
test
mov
or
jo
ljmp
lods
aad
mov
mov
loope
aad
cli
leave
sub
out
fists
and
dec
jo
imul
pop
add
and
test
lret
ret
cli
fxch
adc
jns
mov
add
icebp
cmp
sbb
das
mov
stc
and
cs
stos
cltd
xor
aaa
jne
jmp
fstps
or
mov
push
sub
test
cwtl
fldcw
ret
lcall
xorl
fdivr
sub
inc
or
imull
movsl
movsl
pop
pusha
stos
popa
push
xor
fildl
lds
mov
inc
test
int
sub
cmp
faddl
sbb
push
pop
jmp
icebp
test
push
inc
sbb
ret
aas
mov
sahf
scas
push
fmuls
mov
pop
cld
and
stos
push
cmp
xchg
lcall
push
mov
xor
sbb
inc
in
pushf
add
insl
and
imul
sub
or
mov
sti
pop
sti
dec
push
dec
leave
imul
xchg
pop
stos
movsl
push
jns
int
inc
mov
pop
and
xorb
enter
mov
scas
or
cwtl
cltd
mov
icebp
cmpsb
call
jmp
push
mov
sbb
sbb
add
and
test
sbb
cld
sub
fsubrs
cmp
das
xchg
or
xlat
mov
jb
sbb
test
mov
pop
lods
inc
shl
cmp
push
decl
stos
cmp
sti
aas
mov
mov
mov
mov
cmp
xchg
into
xor
std
pop
in
sarl
dec
imul
cli
ljmp
cltd
jmp
addr16
inc
jmp
jle
jp
leave
lret
mov
lods
xor
das
pop
test
mov
lret
stc
cli
fisubrl
int
hlt
out
pop
outsl
idivb
jns
not
mov
cmp
pop
popf
add
mov
movb
stos
aam
mov
ljmp
push
out
stos
enter
test
dec
jbe
jmp
js
cmc
imul
dec
int3
and
test
mov
in
push
pop
addl
sub
int3
ljmp
cmp
sbb
ficompl
sub
stos
cmp
lret
cmp
mov
test
jmp
stc
push
jmp
pusha
into
ja
shll
lret
mov
xor
and
test
sub
inc
loope
shlb
push
gs
addb
lcall
push
mov
mov
and
stos
sub
jb
adc
imulb
sbb
adc
stc
lock
push
cmp
adc
cmpsl
movsl
loopne
repnz
sub
pushf
xor
and
adc
bound
inc
into
dec
dec
jno
shll
pop
sbb
adc
fldt
jnp
ds
filds
leave
idivb
push
fidivs
call
lods
lret
outsb
mov
addr16
cmp
cltd
mov
test
pop
xor
mov
cmp
call
lret
dec
dec
dec
das
sub
mov
xor
and
in
lods
cs
cmp
jg
lret
cmp
adc
push
les
imul
cwtl
mov
cltd
dec
pop
repz
dec
repnz
jns
cld
add
scas
out
jg
leave
cmp
xchg
or
test
push
fsubrl
stos
mov
fstpt
inc
mov
lds
in
jns
cld
add
cmp
fisubrl
lret
mov
ret
jne
pop
or
sti
mov
hlt
aad
lret
pop
int
cltd
insb
inc
in
mov
lahf
bound
les
arpl
cmp
or
add
pop
bswap
fsubr
push
dec
test
mov
pop
int3
cld
cmp
loope
or
mov
mov
imul
sub
xor
rcr
mov
sbb
imul
fwait
xchg
cli
sbb
loop
and
cmp
pop
aas
mov
lods
imul
stos
push
test
gs
enter
adc
sub
sub
mov
lret
push
sub
pop
shrl
imul
imul
cld
mov
fmull
out
mov
sub
inc
lcall
pop
pop
lret
dec
int3
mov
dec
daa
leave
adc
leave
push
add
cld
imul
pop
sub
or
sti
loope
cltd
enter
cmp
and
imul
test
stos
mov
cmp
jo
sbb
cmp
xchg
jae
add
test
mov
cmp
push
ss
and
fstpt
daa
or
sbb
scas
cmp
cmp
mov
adc
sbb
enter
mov
mov
aas
cmp
arpl
jns
jne
mov
sbb
out
fldcw
or
sub
cmpb
sub
dec
and
sub
jbe
stc
lret
mov
push
or
add
call
imull
mov
shrl
or
xchg
cmp
daa
ja
push
aad
stos
mov
mov
sti
cs
push
pusha
fistl
rcrl
dec
mov
imul
clc
cmp
je
mov
push
jbe
leave
clc
nop
mov
enter
xlat
xchg
and
fisubrl
iret
call
sub
fwait
dec
or
outsl
popf
movl
add
nop
xor
leave
mov
mov
lds
mov
stc
stos
and
pop
or
mov
pop
xor
mov
push
ljmp
cmp
inc
mov
push
fnstenv
mov
xchg
call
ret
cmp
cmp
rcl
jnp
and
rorb
push
popf
addr16
icebp
jg
inc
cmp
icebp
rcl
xorb
pushf
jmp
mov
dec
cmp
jecxz
adc
clc
dec
test
mov
stos
mov
popa
popf
mov
jge
ror
stos
repnz
mov
and
mov
lret
repz
xchg
dec
sub
cmpl
cmp
int3
sub
dec
lret
lock
call
pop
mov
mov
iret
and
dec
jne
or
fdivr
or
fcomps
jmp
sub
cmp
int3
cmc
mov
xchg
jmp
dec
pop
in
add
xchg
and
clc
rorb
scas
icebp
loop
shlb
fdecstp
mov
enter
idivl
sbb
rorl
js
idivb
popf
insl
clc
xor
mov
mov
fdivr
cmp
cmc
idiv
sbb
out
mov
add
adc
sbb
dec
cwtl
xchg
int
lods
inc
cli
jns
shrb
leave
ljmp
pop
aad
mov
or
mov
leave
pop
fildll
shrl
push
test
clc
stc
mov
or
xchg
inc
fsubrs
faddl
cmp
mov
sub
push
xchg
dec
loopne
add
mov
sbb
sub
xor
xchg
pop
fwait
cmp
dec
icebp
xchg
lds
jmp
dec
push
leave
cld
insb
clc
jns
inc
or
lcall
jnp
jmp
pop
and
das
add
mov
test
jnp
stos
lods
jbe
mov
sub
cld
push
in
clc
cmc
jmp
ss
jnp
push
cmc
outsl
jmp
dec
jnp
in
leave
dec
sub
cs
sub
lret
stos
sub
cmp
mov
ret
iret
leave
adc
jl
in
cld
mov
clc
pop
push
cwtl
imul
fdivrs
test
xor
pop
fcompl
pushf
mov
mov
jns
loop
sahf
push
test
mov
imul
std
int
aas
outsl
movsb
or
imul
mov
stos
sbb
cld
sub
mov
jnp
in
enter
lret
repz
aad
lods
fimull
inc
fildl
aas
ljmp
xor
xchg
jae
adc
idivb
mov
mov
xchg
movsb
imul
dec
cltd
scas
mov
cli
and
fwait
mov
dec
clc
out
jmp
mov
jne
jg
in
mov
stos
push
push
cwtl
cmp
jmp
jmp
mov
out
shl
test
sub
and
scas
lods
mov
rorb
mov
cltd
clc
lcall
cmc
mov
or
and
in
sbb
dec
in
mov
clc
lret
int
pop
mov
in
inc
in
enter
adc
push
adc
cmp
sbb
sub
sub
pop
mov
movsl
jmp
adc
inc
push
test
jmp
aad
mov
xor
sbb
adc
dec
xlat
pop
fadd
sub
or
dec
xlat
push
inc
cmp
ffree
mov
enter
call
idiv
jns
js
or
xor
inc
lret
inc
fwait
int
mov
mov
test
scas
push
arpl
loop
mov
or
mov
pushf
lods
sub
sub
pop
test
mov
out
daa
dec
xor
fsts
popa
adc
lods
test
pop
cmp
mov
jns
aaa
pop
sti
sub
lret
pop
pusha
divl
rcrl
iret
push
sub
and
leave
jns
dec
cmp
imul
std
movsb
or
in
jnp
and
pop
cltd
jmp
in
cmpsb
jns
lods
int
loop
imul
xor
call
data16
push
stos
pusha
push
mov
fdivrl
cmp
ja
dec
and
ljmp
stos
or
dec
pop
sub
ja
int3
lock
dec
aas
push
pop
jg
lods
fldt
fdivs
cmp
and
sub
pop
clc
mov
lret
jecxz
sti
xchg
aad
icebp
std
imul
aad
lret
jge
xor
push
stos
fldt
popa
sub
pop
mov
pushf
fwait
ret
mov
enter
jns
jmp
ja
faddl
xchg
in
xor
sti
repz
or
pop
push
xchg
stos
imul
push
sub
fisttpl
test
fwait
mov
aad
mov
test
ficoml
stos
sbbb
ss
jnp
testb
loope
fwait
mov
sub
mov
fmull
in
inc
pushf
mov
adc
mov
push
js
loop
cmp
cwtl
ret
mov
lods
flds
or
pushf
pop
leave
dec
or
mov
pop
sub
iret
adc
and
fwait
xchg
mov
rcrl
pushf
dec
das
iret
fs
mov
cld
jge
in
mov
inc
mov
pop
mov
or
sub
mov
cmp
loop
sbb
test
fucomi
hlt
push
les
enter
inc
mov
clc
movsb
xchg
lods
imul
mov
mov
clc
sti
outsl
push
hlt
sbb
setns
inc
test
mov
cmp
mov
xor
adc
test
daa
daa
cmp
cmp
repnz
xor
sub
dec
sarl
fmuls
imul
ficompl
sub
push
mov
sarl
sub
xchg
outsl
scas
xchg
cmp
mov
outsb
ja
cmp
or
cmp
mov
mov
iret
cld
cld
ss
test
jl,pn
inc
xchg
repnz
dec
jne
sub
pop
int3
mov
test
adc
stos
mov
mov
or
or
loop
roll
fs
sbb
mov
cmp
mov
mov
out
and
ljmp
mov
fmull
mov
js
push
jnp
jp
push
pop
aad
mov
lret
lcall
sub
das
cs
and
hlt
sbb
subl
inc
lret
call
ljmp
mov
mov
jle
sbb
fnstcw
pop
mov
out
test
movsl
cmpb
stos
arpl
mov
stos
lods
outsb
pop
xchg
inc
fdivrl
mov
scas
add
or
arpl
int3
jl
movsl
lret
mov
aaa
jnp
rcrl
mov
test
loope
sub
push
jae
mov
cli
mov
mov
sub
leave
mov
imul
movsl
ja
push
leave
adc
loop
and
cmpsb
sbb
push
add
fwait
jb
and
sub
pop
push
mov
movsl
or
fwait
in
cltd
adc
sub
push
sub
cmp
xchg
cli
sub
pop
enter
sub
xchg
sti
jnp
stos
cwtl
jle
adc
lcall
mov
adc
adc
xchg
call
mov
test
lret
iret
mov
mov
xor
mov
or
xor
mov
shl
stc
test
stos
in
mov
dec
ljmp
cltd
out
stos
daa
inc
sbb
mov
rorl
sub
clc
cmp
mov
and
cmp
xchg
dec
repz
mov
sbb
jnp
cmp
add
fchs
insl
scas
test
test
dec
jmp
xchg
stos
in
sbb
inc
cmp
sub
sbb
sbb
aad
sub
sbbb
cmp
and
pop
lods
stos
mov
fdivrl
mov
jecxz
dec
testl
xchg
test
movsb
cmp
hlt
adc
in
fdecstp
sbb
lret
cmp
shrl
fyl2xp1
fwait
in
imul
ljmp
jne
cmp
fmuls
cmpsl
inc
pop
icebp
xchg
cmp
cmpl
stc
cmp
pop
and
jnp
in
sub
cli
sub
add
pop
or
in
lret
loopne
mov
stos
daa
call
sbb
stos
mov
cs
mov
lret
imul
stos
cmp
or
dec
popf
inc
cmp
or
mov
lahf
dec
fmuls
int
jmp
cmp
or
sub
ret
pop
pop
dec
sub
sbb
in
lods
sub
jo
aas
cmp
inc
stos
add
or
sub
jnp
pop
stos
adc
or
xlat
jns
fcmove
cmpb
stos
cltd
pop
mov
fwait
inc
sub
stos
cmp
stc
pushf
cmp
cmp
cmp
in
mov
inc
mov
add
sub
mov
cld
cli
stos
push
dec
dec
ret
push
pushf
inc
mov
ljmp
lcall
repz
imul
call
jp
fdivl
add
mov
xlat
enter
cmp
imulb
xor
lds
jbe
add
stos
cltd
fnstcw
xor
pop
subl
dec
sub
xchg
cmp
fldln2
loop
in
imul
aad
mov
pop
lcall
pop
mov
add
into
leave
and
xchg
mov
sub
ja
cwtl
dec
pop
pop
cmp
ret
mov
jge
or
cld
lds
cmp
ds
sub
icebp
mov
leave
fldl
repz
sbb
gs
scas
subb
test
jno,pn
cld
and
sbb
lret
push
imul
mov
add
aad
cmp
push
loopne
ljmp
imulb
data16
mov
pop
ja
mov
jmp
test
mov
or
mov
enter
test
sbb
sar
push
in
cltd
and
xor
sbb
ljmp
adc
bound
mov
test
cmp
addr16
gs
or
and
mov
mov
aad
fsubl
push
leave
pushf
add
in
mov
imulb
sti
les
fwait
movsb
outsb
xchg
dec
enter
lcall
sbb
add
xor
das
or
jmp
push
in
or
fidivrs
adc
into
dec
xor
inc
dec
fsubl
and
fmul
and
push
xchg
sub
xor
and
test
jae
sub
fsubrl
sbb
sub
int3
cs
inc
lods
and
or
sub
or
sub
mov
addr16
ljmp
xlat
pop
cwtl
loop
cmp
fisttpl
lods
shrl
iret
cltd
xor
lds
fcmovnb
mov
xor
ficompl
out
jg
popa
sub
or
xor
adc
mov
sub
lret
inc
xchg
fsubr
sub
push
movsl
popa
inc
dec
in
xchg
cmpl
mov
xor
mov
bound
mov
adc
add
stc
jne
sbb
sub
mov
push
mov
cmp
lret
mov
sbb
lahf
popa
dec
cld
push
jns
mov
enter
sbb
sti
lcall
cwtl
mov
sub
add
sti
adc
sbb
rcl
stos
pop
jns
mov
pushf
pushf
mov
fcmovbe
stos
cli
test
sbb
or
xchg
loopne
jle
rolb
add
mov
test
imul
mov
sbb
mov
or
jle
jmp
ljmp
inc
xor
shll
enter
imul
mov
ror
jecxz
scas
stos
leave
sbb
lret
and
sub
loope
jnp
sub
sbb
cmp
add
sub
or
ljmp
pop
add
cwtl
jns
fistl
xchg
push
mov
jmp
cmp
sub
dec
sti
pop
xor
jno
cmp
push
loop
jbe
pop
fwait
pop
out
pop
xor
cmp
sub
imull
jmp
aam
mov
pop
mov
cmp
outsb
sub
mov
movsb
ds
das
cmp
negl
loopne
and
rorl
test
sti
mov
test
lods
cmp
mov
stos
add
add
inc
pop
xor
push
test
cs
add
xor
jge
in
sbb
and
dec
cmp
add
stos
sti
xchg
inc
sahf
stc
cld
dec
mov
sbb
cmc
cli
clc
mov
fdivrl
and
dec
cwtl
ljmp
and
mov
aaa
lcall
ret
dec
rclb
cwtl
in
faddl
push
clc
int3
shl
xor
jmp
pop
and
add
or
mov
ss
mov
and
lahf
loope
pop
idivb
mov
sub
mov
fcompl
lock
adc
jp
mov
lret
mov
stc
movsl
add
std
ja
push
xchg
loop
sbbl
adc
mov
cmp
mov
sub
xchg
sub
fstl
cmp
test
and
int3
xchg
jmp
push
or
fsubrs
stc
cwtl
cmp
sub
pushf
cmp
loope
into
sti
test
cli
pusha
pop
adc
inc
dec
stos
or
clc
mov
movsl
stos
pop
or
test
cli
jmp
mov
xlat
mov
cs
outsl
add
cld
lret
push
inc
outsb
dec
nop
and
movsb
fdivrs
mov
scas
in
sub
mov
scas
add
movsl
imul
mov
mov
imul
fdivrs
call
rcll
pop
pushf
sub
pop
sub
movsl
leave
push
push
stos
mov
stos
mov
lock
daa
jnp
pusha
inc
or
ret
mov
rcl
jnp
or
mov
cld
imul
arpl
idiv
jecxz
andl
and
test
jns
lret
aad
mov
adc
push
push
or
add
les
cltd
in
ja,pn
lret
xor
push
mov
dec
push
cmp
add
mov
repnz
stc
jo
cmp
mov
mov
cmp
mov
mov
test
dec
add
clc
fwait
push
pusha
imul
mov
jne
sub
iret
insl
jl
in
aad
xor
lcall
scas
lret
mov
and
test
sbb
test
sbb
sbb
or
ror
cmp
movsl
es
cmc
fld
cmp
xor
pop
fsubrs
inc
mov
test
mov
or
fmuls
jl
add
mov
imul
mov
addb
pop
inc
clc
dec
mov
mov
sub
stos
sbb
sub
stos
pop
dec
cmp
mov
bound
in
sbb
lcall
imul
lods
mov
inc
outsb
inc
lret
adc
dec
stos
or
jbe
pushf
insb
test
stc
sub
mov
pop
sub
sub
jne
dec
jmp
inc
cmpsl
cmp
nop
test
shrb
xchg
mov
cs
lcall
in
ss
data16
mov
ss
andnps
or
cmc
fildl
inc
mov
jl
mov
cmp
sub
call
imul
jnp
push
das
jno
fcmovnb
lcall
jns
ret
enter
cmp
push
push
jbe
cmc
sub
inc
mov
push
lret
pop
sub
orl
dec
imul
dec
stc
xchg
insb
push
sti
cltd
sbb
push
mov
sub
xor
adc
cmp
sbb
loop
lcall
push
mov
mov
sti
orb
xchg
fidivrl
imulb
cmp
or
lret
fimuls
mov
out
cmp
xchg
stos
sti
fadd
dec
xor
mov
sti
mov
push
mov
xor
leave
inc
outsb
outsb
jmp
outsb
jmp
outsb
lahf
jmp
jmp
sahf
mov
fcmovb
push
jne
fwait
lret
jecxz
fsqrt
mov
sbb
inc
clc
int
or
jp
and
imul
into
sub
cld
or
in
mov
xchg
mov
lcall
stos
mov
cmp
mov
and
aad
imul
movsb
sahf
popf
cmp
inc
sub
test
mov
lock
aas
lret
pop
test
int3
mov
stc
faddl
pop
inc
fidivrl
xchg
shr
loopne
adc
lret
jmp
int3
enter
dec
inc
dec
cmp
and
inc
call
pop
adc
daa
mov
int
mov
lcall
test
fistps
add
int3
inc
xchg
sub
dec
addr16
sub
pop
sub
test
lret
pusha
add
pushf
sbbb
fistl
stos
imul
jmp
outsb
cmc
xchg
mov
xchg
movsl
das
mov
std
sub
adc
test
mov
cmp
sub
ljmp
cli
sbb
lret
stos
cmp
jnp
jl
inc
or
test
idivb
fdivrl
jne
pusha
sysenter
hlt
inc
ret
movsb
sub
mov
inc
dec
cmp
lock
stos
cmp
insb
xchg
jne
mov
stos
sub
or
sbb
ljmp
jmp
jnp
sti
xlat
dec
pop
outsb
shrl
mov
dec
and
leave
mov
fiaddl
rep
cmp
sub
stos
popa
add
outsb
xchg
add
ja
int3
rolb
popa
scas
add
daa
ljmp
in
mov
in
mov
pushf
and
stos
repnz
shufps
ds
cmp
push
xor
cmp
sub
fdivrs
jmp
rol
xor
adc
jge
shr
jnp
icebp
sarl
mov
movsl
dec
jl
fmull
outsb
adc
dec
push
cli
test
aaa
repnz
mov
clc
mov
adc
imul
add
loop
or
pop
pop
add
aam
add
cmp
sbb
add
mov
cmpb
int3
lret
insb
scas
inc
addr16
scas
lsl
out
fs
dec
faddl
pop
outsb
dec
leave
je
rcrl
lcall
imul
and
dec
jo
int
fimull
lahf
sub
lcall
mov
pushf
stos
mov
sub
jnp
dec
notb
mov
pop
jle
test
insb
inc
outsb
push
rorb
or
jp
out
popf
insb
jns
inc
or
inc
inc
stos
outsb
or
sbb
or
dec
inc
dec
outsb
out
mov
mov
cs
inc
dec
outsb
test
daa
inc
in
outsb
test
inc
mov
outsb
and
daa
inc
repz
inc
jmp
sub
inc
outsb
or
jns
popf
fldenv
insb
addr16
or
mov
lret
fnstenv
cmp
ss
cmp
and
arpl
push
xchg
shr
hlt
lahf
ss
les
xor
ss
jmp
jg
nop
xlat
mov
dec
jns
dec
dec
das
das
ljmp
or
pushf
leave
push
mov
xlat
add
imul
imul
call
pop
add
lcall
fldcw
push
sbb
pop
sbb
cmp
mov
pop
fisubl
outsb
or
and
lds
mov
enter
sbb
sub
mov
push
mov
cmp
scas
xor
cli
ret
jnp
push
mov
in
cmpsl
fidivs
test
mov
xor
fwait
lcall
cmp
rorl
insb
mov
or
pop
jo
push
cmp
dec
or
scas
pop
jmp
cwtl
sbb
xchg
mov
fadd
and
cmp
lret
leave
test
jle
jecxz
dec
xchg
sbb
stos
stos
push
lret
jl
call
jnp
jb
stos
xchg
aad
lret
leave
imul
movsl
push
cltd
adc
cmp
cwtl
dec
lret
pop
sub
out
int
push
fwait
test
lods
jle
jns
mov
fcmovnu
imul
lret
mov
dec
or
fxch
sbb
dec
in
mov
call
sbb
cmp
ljmp
jns
mov
mov
xor
sub
dec
sub
shrb
cmp
nop
pop
shll
daa
pop
and
mov
or
pushf
mov
or
cs
fldt
or
dec
out
int3
inc
dec
xor
fwait
cltd
mov
pop
cmp
outsb
movnti
pop
cltd
push
stos
outsb
aaa
inc
sbb
divb
push
xchg
mov
in
mov
lds
test
lret
ret
iret
inc
xchg
hlt
mov
lcall
fcmovne
outsb
mov
scas
push
ret
jmp
jecxz,pn
test
int3
fdivr
or
mov
mov
out
idiv
int3
test
jle
mov
cltd
jmp
cmp
push
pop
scas
adc
mov
test
and
lods
hlt
mov
push
aad
cmp
jne
cld
dec
cltd
fisubs
out
dec
adc
sbb
jne
leave
sub
fdivs
test
push
mov
dec
imul
cltd
cwtl
imul
ss
movsl
out
dec
inc
js
mov
call
sub
pop
fnstenv
adc
lcall
sub
inc
pop
mov
mov
ss
and
leave
scas
data16
es
cmp
mov
lea
mov
ljmp
je
xor
mov
fsts
and
out
adc
mov
dec
movb
dec
fdivl
mov
fdivrs
nop
mov
mov
dec
sbb
cmc
lret
sub
stos
jge
mov
adc
cs
daa
fucomi
xchg
push
xchg
aad
fdivrl
sbb
push
mov
and
jns
outsb
leave
popf
pop
outsl
ss
enter
push
mov
lods
ficoml
mov
sbb
dec
inc
je
mov
or
sbb
mov
sub
in
mov
or
dec
pop
inc
int3
daa
jmp
inc
xchg
test
enter
xchg
jecxz
in
popa
in
mov
icebp
add
push
sar
xor
mov
movsl
fcompl
cmpsb
lret
jnp
loop
pop
jge
mov
leave
icebp
cli
std
mov
icebp
inc
pmaddwd
add
aas
mov
push
inc
inc
sub
sti
test
int3
stos
cmp
shl
std
cmp
mov
ljmp
push
sub
sub
xor
fsubr
and
mov
dec
pushf
sub
fmul
dec
cli
sub
lret
aas
and
mov
subb
fildl
sti
inc
jmp
lret
dec
enter
mov
mov
mov
test
dec
out
or
jmp
mov
in
mov
or
and
imul
repz
pusha
cmp
sbb
dec
pop
mov
lods
cmp
call
fwait
pop
mov
test
pop
or
js
cmp
cmp
jb
popa
dec
pushf
xlat
dec
adc
and
pop
sbb
cmp
push
cltd
out
jae
sahf
add
mov
outsb
sub
out
jnp
pop
push
dec
lcall
cmp
test
dec
cwtl
sub
pushf
mov
cmp
stos
sti
test
add
sbb
jne
mov
fwait
sub
mov
scas
or
and
cwtl
mov
adc
mov
xchg
mov
lret
fdivrl
add
les
add
mov
push
cltd
aad
fmull
enter
mov
int
mov
cmpl
lods
mov
cmp
mov
lret
bswap
rorb
and
add
pop
jmp
sahf
in
call
or
outsb
add
je
pop
fnstcw
mov
testl
lods
sub
or
cmc
ljmp
ja
popa
imul
aad
mov
out
movsb
test
mov
mov
cmp
ljmp
cmp
mov
lcall
addr16
ror
idivb
clc
inc
clc
das
pop
lods
dec
mov
or
sub
cs
cs
filds
ss
nop
lea
test
leave
cltd
cmp
stos
xchg
bound
stos
cmp
push
and
mov
inc
push
cli
mov
and
fisubl
and
dec
sub
jmp
pop
into
dec
or
nop
ljmp
mov
and
cmp
xchg
or
sahf
push
movsl
test
pop
outsb
pop
rorl
mov
stos
lret
enter
sub
call
inc
cltd
int3
in
outsb
xchg
imul
fcomps
fisubrl
jp
or
adc
add
push
icebp
jg
scas
fstps
movsl
test
mov
mov
add
fldpi
and
fldenv
mov
daa
jp
push
imul
or
jns
sub
fwait
xor
in
leave
sub
sbb
lcall
stos
imul
idivb
adc
mov
int3
filds
push
jl
sbb
sbb
cmp
repnz
pushf
mov
stc
pop
pop
insb
xchg
push
pop
rcll
mov
stos
jnp
test
push
jmp
mov
outsb
push
fiaddl
fdivr
lcall
cs
sub
test
and
sub
or
or
sub
in
fidivrl
call
fsubrs
mov
jg
push
or
test
cmp
ret
sub
pop
lods
sub
xchg
test
mov
cwtl
mov
push
mov
pop
out
xor
sub
je
pop
das
pop
jmp
imul
lret
mov
cmp
dec
and
sbb
cld
or
dec
mov
or
fadd
mov
mov
mov
stos
sub
leave
dec
scas
xor
adc
sub
aas
leave
dec
imul
js
call
or
mov
stc
fsubrs
test
fdivr
sub
or
dec
and
cmp
mov
mov
lret
sub
pop
fdivrs
sub
cltd
sub
mov
xchg
mov
cltd
ljmp
mov
fsubrl
in
ss
xchg
dec
in
shll
cmp
call
jmp
or
jbe
mov
cmp
arpl
sub
adc
add
in
inc
cmp
mov
fst
jmp
xchg
mov
cmp
jb
xchg
das
mov
dec
mov
imul
push
lods
fldt
and
sub
rorl
mov
pushf
lret
fldt
lcall
sub
mov
xchg
lcall
enter
outsb
icebp
cmp
outsb
pop
fbld
cwtl
lret
cmp
sub
addr16
push
ljmp
leave
mov
ljmp
pop
call
ret
pushf
mov
pop
dec
xchg
test
sbb
adc
decl
mov
jmp
scas
push
pusha
int3
mov
in
mov
repnz
orb
dec
fdivr
into
mov
dec
leave
aas
add
and
imul
orb
jns
int3
in
xchg
cmp
sbb
adc
pop
sbbb
rorl
and
mov
addl
or
clc
jne
adc
dec
sub
and
and
dec
pop
fs
sbb
cmp
outsb
popf
lods
jmp
stos
pop
in
mov
outsl
aaa
cs
cltd
jecxz
sub
imul
push
aad
cli
leave
xchg
or
dec
insl
mov
or
and
dec
mov
mov
jp
insb
sbb
jne
cmp
jl
mov
sub
fistpl
fs
adc
pop
mov
loopne
ss
fdivr
cmp
call
int3
pop
jne
add
jmp
mov
jbe
jo
scas
jns
call
dec
imul
mov
lcall
cmp
or
pop
xor
cmp
daa
iret
adc
sub
pop
ljmp
stc
leave
sub
fwait
dec
or
cmp
add
outsl
push
dec
test
pop
popa
lret
dec
stos
cmp
push
sub
cs
push
sub
clc
mov
jns
fsubrs
sub
adc
fildl
add
stos
cmp
cli
movsb
or
cmp
and
stc
scas
bound
sbb
ljmp
stos
sub
sahf
and
xchg
enter
cmp
cmp
call
xlat
mov
fstps
pop
fadd
sub
leave
scas
and
cmp
sub
cwtl
adc
pop
fsubrl
adc
stos
push
pop
dec
lods
push
jbe
mov
adc
jg
inc
cs
adc
imul
mov
inc
pop
sub
jg
leave
mov
sub
sbb
push
jns
addl
in
mov
mov
fisubrs
mov
xor
shll
cmp
in
push
fisubrs
cld
mov
add
push
enter
and
pop
bound
dec
pusha
adc
icebp
movsl
leave
fldln2
fidivrl
cmp
cld
imul
fldenv
ljmp
sub
jmp
sbb
sub
ret
test
cmp
hlt
clc
and
or
pop
jle
xlat
cmp
inc
stos
imul
pop
jp
mov
inc
jne
sub
ja
inc
xchg
adc
sbb
ret
jbe
mov
fwait
push
mov
inc
cmp
imul
push
push
jecxz
movsl
stos
dec
or
add
dec
jnp
imul
rorb
outsl
xor
out
jno
adc
cmp
out
xor
sub
mov
divl
and
cwtl
cmp
mov
shll
popf
inc
mov
int
mov
test
cld
out
cmp
or
in
hlt
sbb
pusha
sbb
lock
and
cwtl
or
addr16
dec
sar
cltd
jns
in
xchg
dec
jbe
ljmp
movsb
dec
mov
inc
mov
sbb
imul
leave
scas
jb
jecxz
push
sbb
cs
xor
fimuls
adc
or
stos
mov
imul
inc
mov
adc
or
cmp
push
int
fsubrp
inc
cwtl
jns
adc
sbb
cltd
out
sbb
cwtl
sub
dec
leave
adc
jne
or
enter
inc
cmp
stos
mov
leave
cmpsl
sti
fistpl
mov
faddp
pop
aad
mov
lock
cmp
xchg
mov
and
lcall
push
dec
das
sub
inc
fstpt
addr16
fdivs
fnstcw
cld
mov
sub
arpl
push
sub
and
mov
leave
jle
pop
popf
mov
int3
testb
cmc
sub
fldt
mov
xorl
repz
stc
fwait
in
leave
mov
rcll
jnp
leave
cmp
mov
xchg
pop
insb
fwait
add
cmp
stos
in
sahf
pop
xchg
xor
mov
or
inc
aas
push
in
jnp
rorb
lcall
add
cld
lock
les
test
imul
imul
pop
push
out
ret
pop
test
dec
data16
inc
lret
std
xor
mov
popa
shrl
xor
sub
mov
outsb
mov
lods
test
pop
movsl
pop
femms
mov
test
imul
push
jo
test
cmp
fistpl
out
jmp
clc
lods
mov
cmp
daa
pushf
je
cmp
stc
leave
and
clc
sub
jmp
cli
add
or
imul
mov
int3
xchg
dec
xchg
inc
cmp
mov
jbe
fs
out
and
sub
daa
jns
cwtl
cmp
call
lods
cmpsl
sbb
sub
int3
idivb
popf
inc
fsubrs
ljmp
sub
cld
jmp
negl
ljmp
rolb
fdivs
fisubrs
fists
and
cltd
mov
pop
add
fsubrp
sbb
sbb
sub
jns
or
xchg
cli
dec
fcomi
arpl
clc
fnstenv
pop
push
mov
inc
cmp
dec
sar
or
adc
orl
inc
aam
dec
call
dec
in
mov
lcall
notl
fwait
dec
jnp
lock
lcall
jbe
je
xor
adcb
or
sub
cmp
movsl
subb
mov
bound
and
pop
sbb
pushf
add
fidivrs
call
outsb
or
movsb
mov
js
cmp
movsb
dec
mov
imul
mov
lret
lahf
xor
mov
daa
mov
mov
leave
pop
cmp
sbb
cwtl
mov
mov
push
cld
inc
mov
cmp
mov
fs
push
mov
sbb
cld
sub
enter
and
xor
mov
sub
std
test
imul
test
jns
cmp
jl
pminub
call
loopne
ficoml
jmp
cli
mov
cmp
stos
and
fildl
test
arpl
mov
nop
int
pushf
test
mov
dec
inc
mov
popf
pop
lcall
sti
testl
sub
jnp
and
mov
jge
aad
mov
std
sbb
movnti
clc
cmp
in
mov
or
jmp
insl
adc
imul
dec
test
daa
xor
and
stos
dec
scas
enter
fistpl
ror
fldt
sub
iret
rcr
shrb
dec
pushf
cmp
dec
add
inc
fildl
and
mov
fmull
push
mov
call
cltd
pushf
jecxz
imul
sbb
xlat
mov
dec
outsl
push
xor
mov
test
dec
cmp
cwtl
lods
sub
enter
hlt
xchg
jp
xlat
repz
aam
push
lahf
inc
sub
dec
popf
sub
dec
enter
or
sahf
adc
pop
jmp
inc
cmp
cs
and
scas
lods
adc
dec
iret
mov
mov
aad
ja
inc
aad
test
push
jno
test
add
adc
stos
xlat
in
cmp
ret
pop
shrl
sbb
cmp
sub
int3
mov
fstps
push
test
add
aam
popa
cwtl
jle
add
sbb
mov
fsubrs
in
movsb
dec
cltd
mov
nop
xchg
stos
cmp
je
leave
pop
xor
and
lret
enter
movsb
pop
jo
cmp
leave
pop
and
test
xchg
mov
insb
mov
xlat
dec
mov
fcomps
xor
pop
fmull
mov
push
lret
fsubr
fwait
sub
sti
cmp
mov
jp
enter
in
ss
pop
mov
or
jnp
arpl
pop
aad
mov
mov
or
inc
mov
mov
in
pop
test
int3
sub
lcall
gs
scas
or
inc
cli
jbe
stos
dec
sahf
sub
dec
cltd
test
int3
sbb
mov
xchg
push
cmp
shrb
dec
cltd
dec
mov
test
inc
mov
lcall
out
ja
in
dec
inc
dec
mov
inc
lods
pop
sar
nop
repnz
int
fiaddl
xchg
pop
arpl
dec
in
add
add
push
stc
jns
xlat
or
dec
outsb
jmp
jge
jl
stos
cltd
cmc
inc
stc
cmp
in
xchg
xchg
inc
pop
xor
and
dec
clc
push
daa
sarl
cli
dec
cmp
std
out
andb
fcomp
lods
sbb
pushf
aad
pop
mov
mov
add
mov
int3
dec
mov
push
and
push
dec
jmp
stos
dec
cmp
mov
int3
lods
mov
and
cs
mov
fsubs
stos
ljmp
cmpsl
daa
in
or
cli
int3
cltd
fprem
sub
ss
add
or
cmp
xor
repnz
xchg
jmp
sub
jns
pop
mov
push
stc
mov
jne
repz
imul
or
cmpl
mov
cmpsb
test
test
mov
outsb
in
ficompl
call
mov
ret
cwtl
sub
mov
in
dec
mov
fsubl
imul
scas
mov
negb
cmp
mov
cmp
cmp
stos
mov
and
enter
fs
pop
sub
mov
dec
movsl
jo
sub
inc
subl
test
in
movsb
cmp
cld
inc
lret
dec
lcall
mov
jge
xor
fadds
fsubrs
mov
stc
xor
mov
mov
xchg
jmp
inc
jge
les
test
outsb
sub
aad
sbb
xor
adc
dec
cmp
sbb
fnop
stos
and
push
or
add
xor
bound
insb
call
lods
cwtl
ja
mov
add
test
push
lret
int
sbb
inc
movsl
sub
test
in
imul
adc
pop
pop
in
mov
int3
mov
int
jb
lret
lods
ljmp
cld
pushf
mov
jnp
arpl
pop
or
or
fcomps
ja
int3
sbb
lods
jmp
imul
cmp
fdivrs
daa
lds
sbb
inc
out
and
sbb
xchg
and
mov
sbb
sbb
dec
mov
lret
jecxz
jmp
dec
hlt
sub
ljmp
mov
mov
cmp
and
ljmp
ljmp
int3
mov
pushf
outsl
mov
cmp
rcrl
fidivs
adc
dec
xchg
push
repz
sbb
inc
int
or
jmp
cmp
jnp
popa
dec
inc
cmpsl
enter
ljmp
push
ret
dec
xorb
outsb
or
incb
pop
js
sbb
xchg
fisttpl
and
sub
cmp
in
cld
in
dec
push
cmp
push
pop
lcall
pushf
mov
jle
cmp
cmp
mov
and
in
stos
sub
sub
mov
lds
test
fwait
push
das
stc
cmp
test
dec
insb
or
mov
stc
inc
pop
mov
mov
les
pop
cli
push
jns
pop
xchg
sbb
in
push
cmpsl
dec
imul
ljmp
mov
mov
adc
pop
push
push
scas
mov
leave
loopne
out
cmp
imul
lods
jb
fildl
test
cmp
in
jae
inc
pop
xchg
lret
in
pop
adc
mov
jns
sub
dec
lods
fs
leave
dec
lret
out
loopne
pop
data16
imul
shrb
data16
cmp
paddw
imul
cmpsl
pushf
leave
fisubs
mov
pop
int
dec
lret
add
addr16
shrl
fisubrl
fs
stc
mov
clc
push
sbb
sub
movsl
inc
dec
aad
dec
sahf
loop
cld
sbb
mov
jns
cmp
mov
test
jnp
push
push
sti
jl
lods
jb
jge
cld
popf
cli
dec
int
mov
mov
pop
outsl
cs
xchg
js
cmp
stos
sub
testb
imulb
mulb
fistpl
addb
daa
xchg
sub
mov
call
cmp
enter
cmp
jnp
ja
in
test
in
aas
push
sub
fldl
stc
movsl
pop
imul
fdivs
push
dec
lret
dec
imul
dec
fisttpl
push
cmpsl
mov
ja
add
sub
mov
imul
or
loop
push
mov
or
xor
jmp
push
or
clc
sub
pop
mov
xchg
xor
inc
and
cwtl
mov
and
fsubl
pop
test
cmp
lock
jle
lret
neg
cmp
sub
lret
sub
int
sub
sub
dec
imul
sar
jecxz
shlb
cmp
mov
repnz
sub
mov
jns
lcall
xchg
xchg
mov
mov
call
cmp
stc
adc
std
out
fnsave
rcr
mov
loope
cmp
icebp
call
lods
pop
mov
dec
pop
lcall
sub
and
jae
cmp
leave
sub
fwait
lods
fimuls
add
mov
inc
push
jae
add
fnstenv
inc
loop
xor
out
test
mov
dec
rcrb
jnp
dec
cmp
jge
dec
add
mov
sub
sbb
stos
dec
xor
movsl
aas
popf
add
and
mov
or
imul
js
popa
lret
mov
add
jecxz
mov
pop
inc
test
sbb
inc
lret
mov
jbe
sti
nop
popf
fs
mov
clc
enter
pop
fucompp
pop
in
adc
cmp
cltd
movsl
jecxz
cmpl
lahf
cmp
stos
sbb
mov
pushf
jmp
out
pop
sub
ss
sub
dec
daa
adc
and
cmp
hlt
sub
test
xor
pop
add
cmp
cmp
sbb
call
aad
jns
icebp
xor
cltd
mov
outsb
mov
rcl
movaps
mov
fcoml
test
push
test
pop
cli
jge
and
sub
inc
mov
cmp
sub
cwtl
outsb
jmp
inc
xor
outsb
lret
in
adc
outsl
imul
setge
push
fs
cmovae
scas
dec
fwait
outsb
lods
xchg
mov
leave
negl
push
shrb
loope
movsb
arpl
xor
out
push
push
cmp
mov
jnp
out
cmpsl
std
aad
sar
outsb
idivb
add
jns
sbb
pop
inc
xor
xor
sbb
mov
jae,pt
sbb
or
pop
cmp
enter
push
xor
jecxz
dec
mov
int
mov
fcompl
int
cmp
leave
xor
and
int3
mov
pop
negb
idiv
add
loope
jmp
fldcw
mov
mov
out
arpl
pusha
das
sub
sti
and
xchg
outsb
mov
push
int3
in
sub
ficoml
mov
lds
pop
ss
adc
jne
data16
push
sbb
mov
aam
stc
hlt
adc
adc
sbb
xchg
xor
or
into
arpl
out
mov
inc
shl
dec
stos
repnz
mov
cmp
das
pop
or
imul
das
pop
jecxz
sti
inc
das
and
stc
cwtl
cmp
xchg
cmpsl
sub
ret
fcmovnbe
outsb
push
cmp
adc
mov
and
sub
cmp
lods
int3
adc
mov
jnp
dec
mov
je
mov
add
pop
test
mov
test
cmp
mov
imul
cmp
imul
sbb
mov
mov
dec
je
xlat
outsb
push
jbe
cmp
pop
mov
inc
ljmp
fucomi
cmp
cltd
sbb
int3
popa
rorl
mov
lret
fisubrl
inc
and
je
iret
xor
xchg
imul
repnz
or
or
jo
push
jns
stc
movsl
fsubrl
jl
jbe
mov
lret
mov
enter
adc
jbe
imul
call
cmp
sub
sub
jp
dec
mov
dec
lret
sub
mov
rorb
cmp
xor
sbb
jp
cld
imul
or
add
cmp
dec
push
adc
lods
cwtl
arpl
jmp
scas
icebp
xlat
imul
pop
test
outsb
dec
stos
das
mov
in
or
in
data16
scas
push
nop
mov
cld
test
and
enter
call
pop
sbb
test
dec
sbb
pop
sub
xor
ds
dec
mov
enter
mov
fwait
cmp
in
icebp
imul
clc
cld
popf
jbe
dec
andl
mov
mov
fucomp
cld
cli
xchg
pop
lds
mov
pop
jne
sbb
sub
shll
adc
cwtl
stos
lcall
xchg
fld
push
cltd
jp
fimuls
xor
ret
shll
dec
fwait
cli
cmp
sbb
lret
int3
mov
sub
jle
add
lods
loope
sahf
ret
pop
andb
test
call
ret
insb
and
xor
jmp
adc
lcall
cltd
sub
and
push
lds
cwtl
mov
mov
jbe
fstps
popa
mov
ss
sub
adc
std
ja
mov
movsl
dec
lret
push
cmp
stos
or
in
pop
lret
aas
filds
mov
cmp
scas
andb
stos
mov
ljmp
ficoml
jnp
xchg
test
dec
add
scas
addb
out
jmp
jnp
and
jns
inc
mov
fsubs
test
lcall
stos
or
or
mov
test
cmp
fistl
lock
sub
cmp
mov
ljmp
pop
pop
and
leave
mov
fmuls
jnp
movb
jns
andb
in
and
stos
nop
xor
mov
xchg
sar
hlt
popf
jecxz
inc
jecxz
in
movsl
cltd
sbb
xor
pop
fucomp
lret
stc
ja
stos
adc
jmp
sub
mov
push
test
cld
mov
out
rcl
in
fstps
inc
outsb
mov
mov
stos
fcoml
jle
sub
push
aas
and
cmp
mov
cmp
imul
enter
jecxz
cmp
push
out
mov
rcrl
jno
outsb
mov
movsl
loopne
and
sub
imul
out
std
repnz
lahf
cmp
ljmp
adc
enter
cwtl
pop
jmp
cmp
jl
ret
mov
jnp
sbb
aaa
subb
lock
movsl
mov
mov
lods
popf
sbb
les
mov
mov
lcall
push
cwtl
lods
std
mov
pop
mov
cmpsb
lods
pop
test
sti
fdivr
mov
flds
mov
movsl
inc
and
popa
dec
lret
loope
push
inc
fstpt
sbb
imul
out
jbe
les
test
lods
jbe
push
cld
sub
test
test
clc
fwait
fwait
mov
dec
sbb
jmp
enter
dec
aas
subb
jecxz
std
pop
lcall
sbb
adc
test
mov
pop
or
jbe
inc
imul
repnz
sub
mov
pushf
mov
ljmp
fsubr
sti
inc
xchg
inc
testl
dec
sub
stos
cli
sub
mov
lcall
push
mov
pop
jle,pn
fldt
idiv
aad
mov
sbb
mov
stc
mov
cmp
pop
rcrl
imul
jl
cltd
jmp
aas
fcompl
mov
fidivs
mov
repnz
ljmp
imul
cmp
pusha
cmp
or
test
or
push
pop
sub
cwtl
fmull
jmp
mov
sti
loope
push
sbb
mov
sbb
dec
cli
std
imul
iret
cmp
fsubrs
xchg
sti
dec
jae
or
add
and
lods
imul
mov
mov
in
jae
sbb
sahf
mov
fstpl
in
cmp
scas
xchg
imul
bound
push
xchg
call
mov
sbb
lcall
sub
mov
pop
ds
clc
fsts
negl
in
ljmp
fldt
jp
sub
push
mov
add
mov
leave
loop
dec
push
scas
scas
subb
fmul
mov
cwtl
push
dec
lcall
cld
imul
cmp
sahf
loop
inc
cli
leave
cmp
ret
pop
xor
cld
sahf
dec
imul
fwait
add
lret
call
mov
imul
sub
sub
mov
fwait
cld
cmp
cmp
fcoml
sub
pop
dec
test
mov
pop
lcall
pop
jmp
mov
or
sbb
orl
mov
fdivl
cmp
inc
cmp
pop
jecxz
data16
jl
jns
stos
fstpt
sub
cmp
dec
icebp
cld
outsb
dec
fsubr
leave
adc
sub
xchg
jl
mov
pop
cmp
popf
xor
mov
xchg
sti
stos
popa
imul
outsb
cmp
jne
add
jge
in
mov
xchg
cmp
sbb
lret
adc
jecxz
xor
pushf
cmp
js
mov
leave
push
loope
in
cld
sub
xor
icebp
mov
jns
test
mov
lods
test
mov
rcl
cmp
enter
scas
leave
movsb
dec
jmp
sbb
fnstcw
pop
add
int
test
loop
lret
imul
inc
lds
enter
jae
loop
fstl
mov
stos
test
jge
dec
dec
cmp
mov
mov
cwtl
cmp
sub
iret
in
movsb
push
int3
dec
shll
or
mov
dec
fdivrs
xlat
mov
adc
enter
dec
call
mov
popf
jae
mov
jmp
and
mov
std
sbb
inc
testb
cmp
mov
push
mov
xor
ret
stos
cli
inc
jne
xchg
imul
pop
repz
scas
inc
sbb
hlt
ja
xchg
inc
insl
jmp
or
aam
fstpt
mov
lahf
ss
ss
rorl
add
pop
data16
pop
mov
mov
scas
xlat
lods
cmp
test
or
imul
cs
and
cwtl
sub
dec
jmp
xor
bound
mov
in
or
scas
addr16
pop
and
sbb
jl
gs
dec
sub
cmp
cltd
cmpl
loopne
cli
imul
cld
cmp
cmp
cmp
sbb
cld
mov
cltd
or
stos
sbb
cmp
fcoml
lods
shrb
fmuls
and
daa
test
fnstsw
mov
int3
inc
and
xchg
cmp
xchg
movsl
push
dec
dec
add
mov
pushf
shr
xor
cmp
std
mov
fsubrs
mov
adc
int3
clc
cli
cmp
shrl
cmp
sub
fcmovu
ljmp
enter
cltd
and
scas
push
test
jecxz
push
sub
cmp
sub
ret
sbb
mov
lods
mov
fiaddl
mov
or
and
or
lret
ret
ljmp
add
jnp
inc
mov
test
push
cmp
scas
dec
imul
repz
imul
bound
arpl
data16
mov
dec
xor
or
sarb
xor
cmp
cmp
sub
stos
pushf
push
xchg
add
push
fnstenv
cmp
sub
imul
sti
test
in
push
push
cmp
ljmp
movsl
fcompl
out
cltd
xor
daa
test
sarb
mov
sub
mov
xor
adc
leave
fwait
repz
sti
push
push
arpl
jnp
xchg
mov
or
cli
iret
add
mov
xor
mov
dec
and
jmp
callw
jne
pop
lret
cmp
movsb
mov
stos
ljmp
mov
cmp
mov
jns
stc
push
imul
mov
stos
cmp
cld
scas
push
outsb
movsb
negl
negl
add
lods
mov
inc
xor
dec
int
inc
pushf
popf
repnz
mov
rorl
je
or
in
je
fwait
pop
sbb
mov
and
dec
dec
add
sti
movsb
filds
mov
je
sbb
test
inc
test
cmp
mov
mov
call
sbb
les
xchg
inc
jmp
xchg
pop
xor
in
pop
cld
movsb
mov
mov
adc
sti
mov
cmp
aaa
inc
adc
jmp
pushf
cmp
mov
push
sub
test
cltd
sbb
fstps
inc
fwait
sub
pop
mov
lret
enter
movsl
adc
mov
in
cs
pushf
stc
mov
scas
data16
sub
sbb
mov
loopne
ss
cmp
inc
adc
nop
pushf
int3
jns
or
add
addr16
add
lret
lret
cmp
ljmp
in
sub
inc
jl
dec
dec
shrb
rcr
daa
push
pop
int
stc
lret
stos
repnz
leave
test
sbb
lret
popf
cmp
cmp
push
push
cltd
stos
imul
mov
fwait
addr16
dec
popf
cmp
mov
ret
sbb
inc
adc
push
movsl
or
xor
std
in
jns
mov
hlt
js
mov
mov
lods
in
push
lahf
push
dec
mov
pop
cmp
mov
std
test
ficompl
cmp
out
mov
mov
mov
out
stc
or
mov
mov
mov
sub
jns
push
data16
sub
imul
cmp
xchg
lret
ret
push
xchg
bound
or
imul
inc
xor
stc
fadds
dec
icebp
mov
mov
loop
lods
fcompl
fildll
add
xchg
and
mov
stc
dec
rcl
pop
fstps
scas
sub
test
lcall
call
test
add
movsb
mov
int3
and
jnp
cwtl
out
and
lds
jp
jmp
cmpsb
cmp
sub
fisttpl
cltd
aam
imul
mov
or
insb
sbb
cmp
and
stos
imul
jl
mov
adc
jns
leave
xchg
xchg
sti
cltd
or
push
mov
cmp
dec
sub
cmp
arpl
les
pop
std
movsl
adcb
fcomp
fwait
outsb
clc
andl
cli
movsl
aas
std
mov
cmp
push
stc
in
lea
inc
dec
movsl
or
int
mov
xchg
fldenv
loope
movsl
lods
stc
movsl
repz
pop
adc
or
imul
out
push
pop
popa
lcall
pop
mov
fstl
aas
sbb
cmp
arpl
icebp
das
insb
decb
jne
jmp
jmp
loop
xor
inc
icebp
sub
or
imul
sti
les
add
jmp
idivb
xlat
mov
push
or
lods
lds
and
dec
push
fisubrl
add
idivb
sti
sub
and
fcoml
or
or
xlat
add
add
flds
xchg
fucomp
lcall
stc
inc
sbb
cwtl
lret
shr
mov
rcl
sub
jmp
test
mov
mov
xor
scas
sub
aas
lret
cltd
dec
in
clc
jmp
test
lock
mov
sbb
pop
stos
mov
imul
loope
in
imul
and
cmpsb
inc
mov
push
mov
in
stos
adc
sbb
xchg
mov
cmp
sbb
add
stos
je
jle
cmpsl
test
cltd
mov
sbb
lods
in
sub
lcall
idivl
lahf
sbb
outsb
add
mov
test
xchg
xchg
add
loopne
and
loop
imul
jne
or
in
sub
leave
test
leave
inc
inc
frstor
xor
stc
lods
pop
cmp
cltd
add
movsl
fdivr
in
in
lods
cmp
pop
outsb
insb
mov
adc
or
stos
lods
rorb
mov
lret
sub
sti
sub
mov
inc
scas
scas
fistpll
stos
sbb
fxch
add
out
and
movsl
inc
aaa
dec
mov
pop
cld
cmp
aad
mov
fisttps
jae
out
cmp
clc
enter
jne
test
icebp
stos
mov
adc
mov
les
outsl
lret
cmp
test
cmp
imul
shll
mov
das
push
icebp
push
fistpl
xchg
daa
mov
lret
xchg
mov
clc
add
mov
fs
cwtl
cmp
pop
sti
sub
dec
stos
push
lret
loop
lret
test
sbb
clc
and
frstor
stos
int3
pop
cmp
jmp
lds
in
push
inc
cli
addl
dec
stos
ret
push
mov
repz
pushf
int3
cmp
xor
cld
xchg
pop
popf
push
dec
shr
imul
stc
pop
xor
jns
cs
dec
cli
mov
cmp
out
das
outsb
xor
adc
or
mov
test
call
mov
iret
cmp
dec
xchg
sub
test
fldcw
inc
test
cwtl
mov
lods
mov
cmp
dec
call
imul
imul
sahf
leave
jle
insb
or
pop
imul
out
sub
cltd
inc
sub
jmp
stos
xchg
xchg
aad
clc
int3
xor
lods
mov
pop
rcrl
sub
scas
xchg
leave
int
cmp
rolb
sub
fsubrl
mov
jnp
or
scas
lret
mov
jmp
fstpt
cmp
ret
stos
negl
stc
cwtl
flds
cs
or
push
dec
stc
pop
push
jns
pop
push
aaa
loope
cmp
and
lds
pop
sbb
mov
imul
inc
ljmp
sti
sbb
aas
fdivr
jmp
pop
xor
pop
fnstenv
popf
mov
ficompl
repz
jmp
fs
xchg
std
mov
inc
cli
inc
insl
fcomi
push
push
sti
mov
mov
stos
pop
jl
scas
xchg
xchg
test
cmp
jns
adc
pop
fcompl
push
fsubrs
into
dec
push
push
fmulp
cs
dec
mov
leave
mov
sub
clc
sti
mov
fistpl
test
dec
icebp
inc
cli
mov
rcll
sbb
bound
jns
mov
fs
or
shl
imulb
inc
dec
outsb
inc
mov
rcrl
cmp
jmp
adc
faddp
cs
pushf
lret
mov
sub
fdivrl
adc
pop
mov
jb
cmp
imul
pop
ret
leave
int
sub
jp
add
jns
dec
cmp
adcl
jns
sbb
leave
cmp
xchg
mov
xchg
mov
cmp
add
int
test
sub
cmp
fldl
jo
movsl
aad
in
roll
sub
test
dec
mov
fldln2
rol
push
movhps
push
cmp
mov
mov
test
cli
fwait
je
rcll
fs
xor
ljmp
cli
stos
cli
movsl
lods
jmp
mov
or
int3
shl
mov
in
rorl
pop
iret
mov
cmp
call
adc
test
push
daa
or
dec
int3
jns
outsb
je,pn
and
mov
add
call
fwait
stos
add
sbb
or
cmp
inc
scas
xlat
sbb
push
adc
xchg
sarb
test
das
jle
jnp
pop
mov
out
push
mov
das
punpckhdq
sbb
test
fisttps
sbb
lret
cmp
sti
inc
mov
add
pop
imul
fnsave
lcall
mov
cmp
jge
lahf
sub
stc
add
ja
sub
dec
xor
inc
xchg
xchg
mov
cmp
pusha
sub
jecxz
or
and
jnp
adc
sub
mov
and
jnp
test
ljmp
xchg
cmp
pop
pop
mov
and
mov
sbb
insb
push
and
xor
mov
stos
push
mov
cld
leave
arpl
xchg
xchg
loope
and
xorl
test
pusha
jnp
ret
fwait
pushf
pusha
push
loop
outsb
rorl
adc
cwtl
push
or
rcrb
pop
icebp
sub
fcoms
int
mov
lcall
push
in
lods
inc
in
pushf
mov
mov
sub
test
dec
jb
std
imul
imul
xor
lcall
mov
adc
mov
outsb
pop
push
jns
fxch
pop
gs
outsb
ja
in
push
test
sahf
testb
std
sub
setge
pop
jb
mov
push
cmp
jnp
aad
mov
mov
stos
jmp
xchg
leave
imul
lret
and
lods
cld
mov
call
fnstcw
scas
inc
fwait
mov
xchg
pushf
mov
push
push
add
fnstcw
lret
out
leave
aad
clc
and
pop
andl
sbb
dec
scas
adc
cmp
movsb
adc
daa
lods
arpl
dec
mov
outsb
sarb
dec
les
sbb
repz
int3
jae
dec
push
cmp
jmp
sbb
movsl
fldt
xchg
movsl
mov
sar
pop
xlat
dec
outsb
mov
ret
mov
gs
mov
imul
fdivrs
inc
lret
xchg
lret
and
ljmp
arpl
mov
dec
movb
mov
jo
push
dec
fnstcw
jmp
sub
mov
fidivl
xor
lahf
cmp
sub
dec
das
pop
or
jmp
inc
movsl
enter
cmc
stc
popf
ficompl
test
repz
scas
jmp
sbb
cld
ss
mov
cmp
icebp
out
or
leave
mov
mov
xchg
push
mov
imul
sbb
pushf
dec
stc
mov
cmp
das
sub
cmp
lret
lock
stos
cmp
mov
mov
or
push
stc
mov
dec
mov
shlb
xchg
adc
pop
hlt
aam
lods
sub
shrl
sbb
mov
mov
adc
sub
add
lcall
arpl
stos
mov
imul
xchg
sahf
loope
int
fwait
cmp
push
arpl
jno
mov
stos
dec
add
sbb
pop
mov
aaa
sbb
jmp
inc
and
mov
cmpsb
push
into
sahf
sbb
pop
pop
dec
fldt
dec
stos
idivl
mov
mov
fsubr
fiaddl
inc
sbb
pop
ljmp
pop
cltd
sbb
jne
pop
mov
daa
jns
xchg
cmp
sbb
sbb
cmp
push
aam
dec
inc
cmp
and
dec
xchg
mov
push
sub
fldt
mov
push
or
jnp
imul
scas
mov
pop
sti
mov
cmp
les
mov
and
sti
test
cmp
popf
pop
ljmp
xchg
imul
stos
shrl
jmp
jmp
mov
pop
mov
fcompl
leave
sbb
pushf
jns
or
dec
jb
pop
cmp
adc
out
int
mov
xor
jo
inc
add
mov
sbb
fdivrs
add
aam
pop
roll
idivl
mov
in
lcall
mov
jmp
pushf
sub
adc
cltd
shrl
imul
dec
cmp
adc
fisubrl
test
rcll
aam
add
outsb
enter
add
mov
sbb
lods
jmp
mov
test
out
shl
stos
sbb
pop
imul
sbb
popf
sbb
pop
mov
shll
or
fldl
fidivrl
test
test
dec
imul
out
insl
test
sbb
xchg
push
fmull
sub
jmp
xor
sub
cmp
pop
push
gs
leave
outsb
pop
fstpt
pop
imul
dec
fistl
mov
cmc
mov
popf
ss
test
jno
sub
push
pushf
xchg
xchg
add
mov
mov
inc
outsb
xor
ss
imull
push
dec
aam
adc
cmc
cmp
sub
cmp
int
jmp
sub
xor
lret
sbb
push
push
cmp
xor
sub
lods
iret
jg
xchg
jno
daa
aad
push
negb
jne
mov
test
cli
mov
push
cs
leave
add
jne
adc
aas
cld
mov
scas
push
into
cmp
fisttpl
int3
mov
mov
enter
xchg
mov
adc
jb
cmpsb
or
stos
adc
fisubs
pushf
inc
std
aad
mov
pop
xor
lcall
call
subl
xchg
mov
outsl
les
mov
stc
lods
push
ljmp
cmpsl
imul
adc
gs
add
movsl
test
in
push
pushf
fimuls
lock
rorl
sub
cmp
inc
inc
iret
or
mov
pop
or
filds
sub
mov
dec
and
jne
cmp
or
mov
push
fistpl
into
inc
fmuls
xchg
stc
in
sub
lea
cmp
ret
mov
jl
jne
jnp
pop
aas
sbb
cmp
sub
cwtl
mov
pusha
lcall
in
push
std
inc
adc
lcall
pop
and
push
sub
f2xm1
mov
inc
sbb
lea
rclb
jbe
cmp
jnp
xchg
or
sub
test
dec
dec
mov
fldt
ret
aad
mov
jns
xchg
cltd
popf
xchg
xchg
inc
in
lods
sbb
push
cmpsl
cmp
cwtl
or
pop
xlat
xchg
int
imul
scas
test
and
inc
mov
ja
ds
imul
inc
cmp
jb
push
dec
ljmp
mov
cmp
push
dec
aad
fwait
leave
mov
imul
xchg
ds
outsb
sti
adc
stc
jmp
test
clc
pushf
stos
inc
sahf
or
gs
sub
sub
mov
cmp
clc
test
sbb
inc
test
cli
cmp
sub
mov
add
inc
pop
mov
clc
fdivl
stc
dec
sub
mov
or
ret
movsb
subl
lods
fldenv
sbb
push
sahf
sbb
cmp
xor
push
loop
and
shrl
jl
pop
jo
jmp
mov
dec
cmp
enter
call
frstor
mov
push
or
mov
lods
stos
lock
jnp
adc
cli
rcrl
inc
int3
fisttpl
mov
stc
sub
int3
lcall
outsb
cmp
sbb
sarl
orb
cmp
jns
insw
rorl
sub
cmp
mov
outsb
rcrb
fwait
cmc
aas
jns
or
test
mov
fisubl
test
jns
mov
lret
clc
lret
das
int3
sub
rcll
and
stos
mov
fbld
and
pushf
ljmp
sti
jmp
insb
mov
mov
test
add
lret
in
push
and
jle
and
loope,pn
daa
mov
ss
mov
cmp
lods
sti
sub
stos
ja
mov
sbb
mov
cmpsb
mov
movsl
adc
xorb
imul
sub
sub
jns
mov
nop
cmp
ljmp
cld
popf
pop
sub
or
inc
mov
sbb
sub
pushf
clc
cld
pop
lcall
pop
stos
mov
cmp
ljmp
sub
pushf
in
fcom
mov
arpl
cmp
jb
cwtl
add
std
sub
inc
mov
sbb
mov
xchg
stos
xchg
insb
and
jmp
test
test
std
xor
xchg
pop
cmp
pop
clc
loop
stos
pop
mov
cmp
cltd
and
sub
stos
add
test
lcall
pop
mov
out
stos
dec
push
sub
ljmp
cs
into
filds
pop
stos
sbb
sti
cmp
cmp
dec
scas
bound
pusha
inc
movsl
int3
fwait
stc
lds
sbb
aaa
push
loop
mov
int
cmp
dec
mov
xchg
cmc
mov
mov
cli
outsl
pop
fcomp
imul
cmp
cmpsl
lret
cmp
jnp
fsubrl
fimull
lret
sbb
mov
mov
sub
cmp
movsl
mov
mov
mov
jmp
jne
pop
push
sbb
xchg
aad
leave
test
mov
lahf
scas
push
dec
or
pop
cmc
dec
outsb
fcmovb
dec
mov
call
cmp
in
sti
pop
and
imul
mov
dec
pop
test
ljmp
fcmovnu
sbb
popf
xor
sub
fsubl
lods
loopew
xor
or
and
dec
mov
mov
xor
sbb
test
mov
cmpsb
cld
pminub
in
xchg
daa
lods
repnz
stos
enter
pushf
lret
stc
sub
cwtl
and
lods
or
mov
jnp
mov
sti
stc
pop
mov
mov
mov
sub
scas
testl
mov
inc
add
mov
and
pop
push
mov
dec
cld
fmuls
in
sbb
or
xlat
fcmovnu
cwtl
fnsave
push
imul
std
rcrb
xchg
sbb
push
dec
fdiv
sbb
mov
cmp
aaa
int
and
sub
fsts
stc
imul
adc
mov
dec
xlat
inc
inc
or
cmp
dec
stos
clc
and
test
mov
stos
test
movsb
in
fwait
cmp
fs
lret
iret
iret
lret
scas
lret
movsb
stos
jae
scas
daa
pop
leave
adc
std
add
push
push
mov
loop
jmp
idiv
fsubrl
lcall
aas
inc
leave
dec
lret
mov
mov
sub
sti
push
cmp
stos
cmp
mov
jbe
inc
pop
mov
sbb
pop
in
or
cld
mov
sub
dec
sbb
sub
fs
clc
inc
xchg
inc
popa
arpl
jp
into
pop
cmp
mov
or
lret
inc
fstps
fmuls
mov
xor
mov
xchg
xor
stos
sub
enter
test
lods
enter
mov
fwait
mov
vmwrite
cmp
and
or
out
sahf
imul
jp
ds
or
cmp
sub
aam
aad
insl
mov
sti
test
fdivrs
and
imulb
mov
mov
mov
test
add
lret
cmp
enter
fdiv
inc
xor
int3
cmp
cs
jnp
dec
imul
aad
sub
mov
mov
in
xchg
aad
fisubrl
xlat
jmp
add
cltd
pushf
cmp
cmp
stc
push
inc
lea
int3
lret
cmp
cmp
cltd
jmp
mov
movsl
xchg
cmp
inc
clc
cmp
pop
inc
stos
sub
push
cltd
dec
or
and
daa
out
jle
mov
jno
nop
dec
insb
lahf
mov
sbb
sub
repnz
cmp
push
cld
mov
dec
cli
das
and
and
pop
pop
and
sub
in
fsubr
push
add
add
mov
aad
cmp
or
pop
dec
lret
mov
sbb
and
outsb
stos
lret
xchg
mov
aad
fdivrl
adc
cltd
repz
dec
sub
dec
faddl
ret
pop
cmp
sub
sbb
test
in
loope
shll
fcomi
mull
cs
dec
setp
sbbb
in
sub
lcall
enter
out
dec
in
rorl
call
pop
sub
scas
repnz
pushf
fwait
out
inc
push
push
cmc
cltd
mov
dec
stos
mov
mov
outsl
push
pushf
arpl
xchg
pushf
test
clc
test
mov
adcb
lcall
ret
dec
clc
cwtl
add
mov
scas
rcrl
add
sub
inc
ljmp
nop
cltd
fucom
cmp
xor
scas
mov
xor
mov
leave
test
mov
cmp
sub
stos
and
xchg
sbb
and
pusha
pop
jns
js
pop
pop
pop
test
mov
sub
stos
push
int3
sub
pop
ljmp
dec
xor
scas
int
lods
and
inc
sbb
xchg
int
jnp
stc
cli
jmp
adc
mov
cmp
cmp
sbb
jmp
pop
ja
dec
sbbb
iret
push
dec
stos
leave
in
jp
inc
fistpl
ljmp
out
sbb
add
jns
int
mov
in
sti
cmp
in
mov
enter
in
lods
fldcw
xchg
ss
insb
sub
call
lret
cld
pop
dec
mov
xor
fsubrs
clc
sub
fdivr
stc
into
cwtl
dec
cltd
imul
xchg
adc
test
dec
cs
mov
inc
mov
mov
loopne
cmp
xchg
jecxz
stos
scas
push
mov
and
int3
jnp
test
sub
lcall
mov
mov
jmp
aam
mov
enter
or
cmp
sar
cvttps2pi
mov
xor
inc
hlt
aad
cmp
neg
cld
adc
pop
lods
jmp
rcll
icebp
fdivl
dec
push
adc
and
test
enter
sub
adc
and
xchg
sub
cli
xor
xor
loope
mov
popf
pop
cmpsl
in
dec
and
into
mov
cwtl
cmp
lods
aaa
mov
call
push
ljmp
cmp
test
sub
in
leave
or
sti
cmp
xor
stos
js
test
orl
mov
lret
mov
push
movsl
testb
in
jmp
and
and
sti
mov
clc
mov
jnp
fidivl
outsl
adc
lret
xchg
fnsetpm(287
iret
leave
shll
shlb
mov
testb
fs
imul
cmp
or
sub
js
fcmovne
mov
scas
int
mov
mov
pop
pusha
sub
or
mov
lret
popf
mov
or
out
jne
int3
mov
clc
dec
adc
pushf
xor
lcall
test
jnp
dec
outsb
je
push
movsl
js
xchg
fwait
movsb
sti
mov
test
movsb
test
sub
mov
xor
dec
fnstenv
jecxz
adc
mov
loop
sub
imul
pop
inc
xor
jne
mov
jne
pop
push
sub
enter
mov
in
xor
lods
bound
jecxz
pushf
and
ljmp
fdivrl
mov
xchg
lea
outsl
jne
push
pushf
pop
scas
inc
sub
pop
imul
movsb
ja
lret
pushf
add
pop
shl
cld
xor
or
test
cltd
aaa
mov
push
dec
mov
mov
dec
and
ljmp
dec
cltd
mov
pop
in
sub
sarl
iret
cmpb
xor
aam
inc
ret
clc
cltd
shll
fisttpl
int
jmp
and
jnp
lret
cmp
inc
pop
fcoml
jno
sbb
imul
sub
mov
sbb
jmp
into
mov
stos
add
jne
jnp
dec
jae
push
je
or
adcb
inc
push
inc
pop
in
enter
cmp
xor
mov
sub
dec
xlat
jns
cmp
in
mov
and
dec
xchg
jl
sub
pushf
movsl
mov
sub
imul
pop
clc
and
cld
andb
sahf
dec
pop
lret
stos
cld
fwait
ljmp
jg
pop
mov
sub
sub
dec
popa
pop
scas
push
mull
push
add
fmul
xor
or
in
mov
mov
sahf
fadds
or
push
pop
in
lods
push
mov
jns
xchg
mov
lret
xchg
leave
iret
scas
loop
test
data16
jmp
mov
stos
mov
lret
push
dec
push
push
cltd
sbb
dec
test
call
or
mov
lcall
sub
ss
test
xlat
ss
xor
mov
or
pop
ljmp
inc
imul
pop
cli
and
and
mov
je
aad
subl
sbb
mov
fildl
imul
test
icebp
fcompl
add
clc
jns
lret
pop
fldt
dec
push
lods
cmp
iret
daa
or
loope
mov
lods
and
sbb
xchg
cmc
or
mov
dec
insl
in
pop
jns
int
lret
roll
sbb
xchg
aad
inc
cmp
stc
cwtl
rorl
lea
sub
js
jl
fcomps
mov
add
cmp
cli
popf
jnp
lret
ljmp
dec
cmp
adc
mov
mov
ficompl
push
arpl
inc
aas
push
scas
sarb
cltd
mov
adc
jmp
pop
stos
and
fmuls
jg
xorb
jns
pop
mov
icebp
mov
sub
jbe
or
jecxz
jns
push
xchg
sbbl
loope
cwtl
lret
es
cmp
mov
sub
test
mov
mov
test
or
iret
jmp
in
cmp
icebp
int
jmp
fwait
pop
in
cld
test
jmp
mov
xor
sub
lret
test
push
rol
lcall
scas
int
stos
mov
add
stos
flds
jno
pop
cmp
pop
imul
dec
nop
inc
inc
mov
or
xchg
xor
cltd
sbb
jp
sahf
mov
jge
ja
xchg
iret
outsb
pop
fwait
sbb
xchg
ret
dec
sub
or
arpl
and
ret
dec
and
sbb
fistpl
fists
test
dec
aas
add
out
stos
or
xchg
sbb
cmp
outsb
test
mov
ljmp
dec
lock
mov
cmp
lods
cmp
imul
mov
mov
adc
or
aas
ss
cld
cli
push
rorb
sub
or
sub
imul
mov
inc
mov
filds
sub
add
jmp
cmp
stos
out
scas
pop
loope
movsl
and
pop
cmp
mov
movsb
xchg
push
stc
mov
push
shrl
xchg
pop
add
int
fcmovnb
loopne
mov
or
and
dec
imul
mov
outsl
cmp
fdiv
cwtl
ljmp
aam
test
adc
mov
push
fdivl
pop
sbb
or
and
neg
lods
xchg
idivb
mov
inc
cltd
int3
aad
sub
inc
div
movsl
fs
lods
out
push
test
lret
inc
cmp
mov
ljmp
cmp
pop
dec
jbe
test
mov
inc
std
mov
scas
fdivs
inc
sub
sbb
pop
inc
xchg
mov
pushf
or
xchg
inc
fwait
xchg
pop
lret
je
ds
dec
fdivl
ss
movsl
jae
sub
clc
mov
fimull
cmp
in
xchg
out
das
stc
dec
das
arpl
dec
pop
dec
xor
ljmp
sbb
jns
sbb
mov
cwtl
and
test
sub
std
inc
cmp
faddl
mulb
jnp
popf
or
jns
push
sub
sbb
dec
lcall
fsubr
cmp
ja
mov
mov
out
stc
adc
aad
pop
xor
mov
push
jp
mov
inc
hlt
xchg
rcrl
jb
clc
or
fdivrl
mov
jno
xchg
xchg
out
leave
xor
lret
xchg
mov
pop
cwtl
into
push
mov
jnp
fcmovne
push
sub
sti
mov
aad
mov
push
into
js
hlt
leave
add
in
jnp
cmpsb
in
std
ss
jbe
jo
sarb
lcall
in
mov
lret
dec
sub
cs
test
stos
fnstsw
cmc
iret
int
pop
notb
lret
sbb
cs
pop
push
cmp
mov
dec
mov
insb
ljmp
ja
stc
jl
shrb
outsb
pop
insb
ds
mov
outsb
insb
bound
insb
jecxz
dec
dec
outsb
int3
hlt
daa
dec
fcompl
dec
dec
outsb
jo
test
inc
stos
out
mov
stos
jp
dec
call
cmpsb
dec
aas
outsb
insb
loope
pop
cmpsl
mov
insb
mov
popf
insb
int3
sbb
pop
insb
ds
mov
outsb
insb
bound
int3
out
ja
dec
outsb
int3
hlt
daa
dec
fcompl
dec
dec
outsb
stc
stos
in
insl
dec
ret
stos
out
mov
stos
jp
dec
call
or
negl
sahf
cmp
ljmp
mov
mov
in
jecxz
stos
cmpsb
pushf
imul
dec
test
cmp
stos
test
fwait
repz
inc
outsb
sbb
mov
imul
sti
or
sub
stos
outsb
int3
imul
dec
lret
xor
mov
jle
xor
stos
or
cltd
fdivl
cmp
inc
adc
movsb
xchg
adc
stos
fisttpl
push
and
pop
call
pop
dec
leave
sti
fbld
add
xor
pop
and
inc
out
jmp
lds
bound
cltd
fsubr
cmp
inc
mov
inc
push
inc
dec
mov
fsubs
push
fldenv
adc
fcoml
lret
fsubr
repz
fsubrs
outsl
cwtl
in
and
in
mov
sub
mov
mov
jmp
xor
sbb
test
iret
stos
negb
push
test
sahf
sub
dec
xchg
out
cmp
inc
and
subl
mov
and
aas
leave
sbb
int3
adc
out
jmp
aam
mov
adc
jmp
or
xlat
stos
mov
cmp
push
inc
jecxz
and
leave
jecxz
hlt
cld
repnz
push
mov
sahf
add
xor
mov
stos
inc
dec
pop
stos
fcomp
leave
dec
mov
cmc
dec
pop
mov
push
ret
cmp
pop
stos
test
jnp
push
push
lret
pop
mov
addb
xor
mov
clc
das
test
sbb
mov
outsb
popf
cmp
jecxz
dec
inc
xchg
push
sbb
inc
and
sbb
outsb
or
outsb
ss
in
out
inc
jl
push
cmp
cwtl
cmp
ss
pushf
xlat
or
loopne
push
xchg
loopne
cld
stos
xlat
cld
mov
cmp
out
mov
call
std
jecxz
add
cld
dec
mov
inc
sahf
push
out
iret
mov
in
cltd
and
fdivrs
call
out
movl
or
sbb
ror
or
pop
sbb
mov
inc
jae
fcom
mov
xlat
pop
push
pop
mov
faddl
cld
jecxz
notl
or
jecxz
test
mov
pop
subl
aaa
pop
push
cmp
pop
out
stc
dec
sbb
sahf
std
and
leave
loope
imull
jmp
mov
outsb
sahf
jmp
leave
jno
enter
cltd
jmp
and
pop
in
dec
dec
sub
sbb
sbb
imul
ret
test
mov
call
push
jnp
cmp
xor
lods
jns
aas
lcall
leave
call
jmp
mov
cld
fwait
movsb
dec
pop
xor
lods
fcmovu
or
sbb
mov
sub
fdivrs
rcr
std
call
loop
div
add
xorb
in
adc
sbbb
addr16
and
clc
lret
dec
adc
fwait
pop
pop
pop
iret
fldt
fistpll
cld
das
mov
jae
adc
fcoms
movsl
cmp
fsubr
out
call
sub
jl
aam
cltd
mov
pop
mov
insb
addb
xchg
into
and
popl
pop
push
inc
cli
mov
mov
sub
outsb
mov
aaa
loop
and
hlt
adc
xor
aaa
lods
enter
sub
repnz
daa
call
mov
mov
test
add
mov
aaa
push
sbb
jnp
imul
pop
push
sbb
push
test
xor
xor
outsb
out
push
fsubrs
jmp
test
sub
js
ss
cmp
std
jmp
inc
daa
call
mov
out
mov
outsb
mov
stos
mov
inc
mov
sub
mov
cs
pusha
test
jecxz
pop
stos
inc
sub
mov
cmp
ja
daa
enter
mov
cmpsl
cwtl
sub
mov
outsl
cmp
jecxz
pop
int3
std
jecxz
pop
daa
clc
mov
or
test
mov
inc
daa
cmp
repz
mov
les
mov
dec
mov
fadds
xchg
mov
std
repz
mov
enter
cs
sub
std
repz
dec
inc
sub
mov
cmp
enter
pusha
call
daa
mov
fchs
iret
mov
dec
and
ljmp
mov
sti
mov
cwtl
shrb
cmp
mov
mov
sub
leave
call
cmp
push
mov
leave
jg
sub
lods
pop
ja
cli
xor
dec
xor
xchg
pop
sub
fnstenv
mov
dec
fisttps
shl
pop
xchg
stos
or
jb
mov
ret
xor
push
or
dec
jg
stos
jg
mov
jmp
xchg
lret
jg
sub
dec
jg
addr16
lahf
jbe
pusha
incl
imul
push
xchg
pusha
flds
gs
lret
outsl
mov
xor
lret
pop
out
push
mov
xor
lret
mov
ljmp
mov
mov
jecxz
bound
loop
sti
popa
mov
loope
shrl
int3
sti
mov
loopne
mov
mov
xor
push
mov
add
sub
dec
scas
ret
mov
xchg
cmp
daa
cmp
cmp
loop
addr16
rol
orl
fcmovbe
les
in
js
test
ds
pop
out
push
test
ja
mov
cli
dec
push
push
mov
lret
addr16
mov
mov
test
cs
test
jecxz
pop
push
jg
mov
test
ja
test
sub
mov
mov
jle
into
test
cmpl
xor
add
push
sub
push
aad
jno
jp
xor
je
sub
std
jecxz
pop
fs
jecxz
pop
daa
cmp
mov
push
mov
jg
mov
enter
pop
and
in
mov
mov
mov
insb
in
mov
int
pushf
in
inc
jb
dec
sahf
rolb
and
mov
jecxz
pop
daa
clc
pop
out
pop
daa
clc
mov
enter
enter
lods
ds
inc
call
mov
lcall
xchg
loopne
mov
dec
dec
jns
cli
daa
loop
xchg
out
les
pop
sub
enter
cwtl
das
jo
xchg
clc
pop
daa
clc
mov
fmuls
sar
sub
cmpsl
rcl
int3
loope
stos
sti
or
jo
sbb
into
sbb
cmpsl
dec
imull
jecxz
lods
iret
imul
or
popf
call
sbb
ja
pop
cmp
xor
in
push
loope
out
xchg
pop
inc
inc
repz
xchg
push
inc
out
icebp
or
cmp
int3
mov
ds
pop
jnp
mov
jne
repz
scas
sahf
loopne
sub
aas
call
ja
fidivs
into
adc
cmp
push
loopne
pop
dec
lods
sub
adc
loopne
dec
adc
dec
sbb
mov
stos
loopne
jmp
sub
mov
hlt
in
fstl
pop
and
pushf
dec
push
and
lds
mov
int
mov
mov
rclb
out
adc
fmull
fisubl
sbb
push
lret
test
xlat
call
jmp
pusha
insb
jge
out
push
stos
dec
and
fstpt
bound
add
aas
or
pop
jmp
cmp
jnp
pop
insl
push
push
fisubl
xor
sbb
lahf
and
lods
les
les
xchg
call
push
in
mov
lcall
imul
scas
or
mov
popa
dec
jecxz
call
sti
mov
aaa
or
daa
mov
sub
icebp
cld
and
daa
push
mov
sub
lret
stc
mov
cmpsl
or
lods
and
test
insb
pop
test
cmp
fxch
and
or
test
jp
outsb
out
aad
test
fdivrs
mov
dec
test
mov
cmpsl
pop
sub
mov
pusha
stc
mov
or
out
mov
int
xor
ljmp
sub
dec
test
pop
jno
xchg
xor
sub
lcall
repnz
inc
clc
insb
sti
cmp
pop
sub
stos
sub
or
aad
cld
jle
or
xor
add
sbb
idivl
ds
cmp
fcoms
nop
mov
mov
push
dec
loop
sti
test
movsb
mov
in
lret
jge
mov
sti
mov
or
js
pop
es
push
in
xor
mov
int
xchg
or
dec
mov
outsb
or
inc
mov
pop
sub
in
jne
push
test
pop
lret
jmp
xchg
scas
jne
adc
stc
or
add
js
in
and
mov
ss
test
sbb
negl
sti
cmpsb
mov
sub
ljmp
fsubrs
scas
pop
add
jns
jbe
sbb
mov
cs
mov
inc
leave
out
dec
xor
xchg
into
int3
and
mov
imul
mov
pop
cmp
jmp
leave
imul
stos
adc
imul
imul
insb
popl
iret
bound
mov
test
inc
enter
nop
mov
stc
add
popf
enter
jno
push
mov
mov
stc
mov
and
pmaddwd
icebp
and
leave
sub
imul
repnz
in
inc
sub
pop
cli
call
mov
clc
jmp
sub
test
call
ret
test
xchg
mov
cmpb
or
mov
mov
imul
outsb
xorb
ficoms
or
add
cs
rcrl
and
dec
out
enter
iret
mov
sub
sti
bts
cmp
leave
mov
imulb
or
and
jl
ret
jecxz
sti
lahf
bswap
push
mov
or
mov
lahf
lods
pushf
lods
add
pop
ss
int3
adc
imul
ret
mov
or
cli
push
ljmp
test
fs
cmp
or
testl
fbld
int3
and
push
stos
aaa
xlat
jge
ds
or
mov
cli
push
cwtl
bound
rcr
cmp
outsl
ja
fwait
dec
daa
push
clc
dec
inc
aad
sub
mov
pop
aad
cmp
outsl
and
cmp
ja
shl
subl
insl
outsl
sub
jg
cmp
in
or
call
mov
dec
xor
inc
sub
xlat
mov
out
outsb
icebp
fsubs
inc
pop
mov
ret
pop
xor
push
stos
cmp
call
test
ja
enter
and
inc
xlat
inc
out
lods
aam
insl
sbb
scas
mov
jmp
nop
cmp
in
and
inc
or
lret
popa
call
sti
push
mov
jne
fimull
mov
or
stos
sti
lret
int3
and
in
pop
insl
ljmp
loopne
dec
cmp
push
push
ret
mov
and
ret
imul
loopne
mov
or
icebp
sub
dec
mov
ret
leave
dec
in
push
ljmp
pop
jnp
sub
jns
into
push
sub
and
add
xor
rcrl
mov
mov
cli
negl
lret
lea
sub
pop
pop
push
jmp
call
shrb
fnstcw
es
sub
stos
xor
or
mov
dec
mov
mov
in
sbbl
insl
mov
shlb
ret
cs
mov
lods
fsub
push
arpl
jno
ret
mov
sub
test
mov
int
push
cmp
xor
sub
or
sbb
mov
cli
push
xlat
push
iret
sub
xlat
xchg
scas
movsb
arpl
in
out
pop
fidivl
pop
jno
mov
divl
cmp
mov
lock
jge
xor
and
inc
js
push
ret
mov
icebp
call
fwait
int3
or
ss
add
push
pop
xchg
lret
push
jecxz
dec
mov
ror
sbbl
call
ds
in
push
xorl
int
jecxz
pop
push
dec
in
jno
mov
cli
stc
arpl
or
fcomps
stos
cvtdq2ps
fwait
mov
cmp
push
ds
andl
aaa
test
xchg
inc
aas
test
mov
int
arpl
adc
mov
jl
dec
test
lods
push
mov
mov
or
push
pop
inc
test
ljmp
inc
push
call
pusha
add
aas
call
lea
sub
inc
lock
imul
add
movsb
lret
out
and
cmp
jmp
mov
or
pop
fnstsw
xchg
es
sbb
xchg
lock
andb
negl
jae
push
inc
dec
ja
mov
mov
sahf
sub
ljmp
mov
xchg
mov
mov
mov
dec
mov
loopne
ss
lea
in
or
aaa
xchg
mov
dec
ret
lret
mov
or
fadds
bnd
cmp
mov
lret
outsb
fld1
xchg
add
cmp
cmp
mov
dec
cmpsl
mov
mov
test
push
decb
pop
js
out
imul
enter
sbb
clc
lods
pusha
push
leave
sub
in
int
roll
jo
push
test
imul
and
loopne
fwait
pop
push
rcrl
xchg
add
add
pop
inc
dec
out
mov
mov
dec
rcr
cmp
lods
pusha
adc
mov
cmpsl
mov
imul
iret
jecxz
pop
and
out
addl
mov
sti
pop
jg
jmp
in
xchg
xchg
out
mov
mov
inc
out
or
and
lods
inc
jecxz
add
inc
jno
outsl
sub
out
mov
outsl
and
enter
xlat
xor
cmpb
mov
enter
mov
xor
fwait
xor
repz
pop
inc
dec
call
inc
das
sbb
jecxz
or
or
dec
fisttpll
and
jecxz
cmp
addr16
mov
testl
sbb
addb
loop
cld
out
lods
and
imul
mov
pop
adc
stos
xchg
inc
lods
sbb
push
pop
idivb
lods
dec
iret
mov
cmp
enter
arpl
test
cwtl
stc
mov
mov
mov
fnstsw
mov
aaa
ret
add
sahf
mov
pop
outsl
sbb
test
scas
pop
int3
test
rol
pop
icebp
imul
sub
clc
push
nop
ret
dec
call
mov
iret
call
push
scas
pop
fisubrl
pop
jmp
inc
test
pop
add
mulb
ss
cwtl
test
shrl
stos
jb
pop
loopne
and
shrb
sub
lods
cmp
and
das
push
insl
mov
idivb
cmp
into
nop
mov
and
xlat
dec
xchg
or
scas
mov
push
sub
stos
pop
xchg
imull
ja
or
push
fidivl
add
sub
dec
mov
inc
dec
xor
addr16
inc
int
shr
movsb
jmp
bound
fnstcw
mov
jge
fnsave
fdivrp
addr16
pop
push
cmp
push
cli
les
pop
lret
cmp
into
andl
loop
and
xchg
push
pop
adc
jns
fldcw
enter
out
add
jmp
and
idivb
jg
dec
dec
fidivl
aam
jae
or
pop
imul
iret
xlat
repnz
mov
add
add
enter
outsb
jne
mov
and
add
sbb
or
inc
push
sbb
dec
inc
pop
sbb
jge
push
test
push
pop
orb
lock
push
fsubs
out
call
cmp
insb
or
repnz
iret
sub
in
scas
cmovne
or
push
pusha
jmp
outsl
mov
ljmp
push
cmp
jnp
test
fs
ds
fisttpll
add
mov
pop
dec
out
mov
or
jae
jl
inc
aam
or
dec
loopne
push
push
not
mov
imul
ja
mov
mov
ud0
sti
push
addr16
cmpb
pop
lds
shl
mov
clc
nop
rorb
imul
inc
xor
add
shrl
xchg
push
dec
andb
aas
dec
sub
movsl
or
sbb
and
mov
cwtl
jl
stos
or
ljmp
adcl
or
lea
pop
pop
jge
popa
mov
mov
adc
dec
std
iret
cs
arpl
or
xchg
push
lea
or
outsl
add
int
movsl
or
cmpsl
lret
dec
mov
enter
xor
mov
jae
and
jecxz
call
mov
dec
sbb
jl
jg
loopne
dec
fadds
xlat
mov
outsl
pusha
arpl
test
or
insb
sub
xchg
adc
enter
pop
add
inc
int3
and
mov
enter
ss
add
mov
lods
pop
or
inc
out
cwtl
xchg
push
enter
and
push
imulb
mov
clc
filds
jne
or
push
jl
shrb
cld
lods
add
mov
aad
call
jnp
stos
mov
cmp
xchg
testl
inc
movsb
out
cltd
mov
or
scas
dec
enter
mov
inc
add
loope
inc
jne
lret
mov
pop
sbb
add
dec
orb
or
or
jnp
xchg
mov
cmpl
enter
mov
mov
arpl
addr16
inc
add
aas
or
icebp
lods
mov
xor
push
dec
inc
push
mov
and
push
xor
jle
and
lret
test
lret
insb
inc
repnz
pop
dec
insb
popf
in
xor
pop
pop
adc
fucomp
pop
mov
stos
inc
out
outsl
inc
lea
fdivrs
dec
sub
push
sub
mov
jb
cmpsl
push
sahf
stos
insb
mov
call
pop
dec
imul
lahf
cltd
das
xchg
pushf
out
pop
incb
mov
sub
push
ret
icebp
sub
or
dec
or
mov
and
push
fidivrl
mov
jge
int3
cmp
mov
dec
popf
int
cmp
sti
jmp
and
lret
cwtl
mov
test
push
xchg
loope
outsl
mov
mov
xor
imul
push
lret
mov
lahf
outsb
pop
mov
lods
pop
or
lahf
sub
mov
lods
mov
jmp
aam
aas
mov
mov
in
push
cs
and
sahf
sbb
dec
sub
imul
test
bound
ficompl
daa
sti
mov
popa
add
or
mov
push
sbb
mov
pop
cmpsl
arpl
into
mov
or
mov
and
pop
in
xor
mov
mov
xchg
pop
or
lcall
jp
decb
test
sbb
sub
lret
lret
xor
lods
dec
jo
mov
cs
xchg
pusha
loopne
lcall
repz
mov
aam
or
ret
jns
jp
sub
and
sub
aas
and
xchg
mov
dec
dec
cmp
push
out
xlat
test
mov
dec
pushf
cs
xor
push
mov
outsl
cmp
xor
sbb
or
addr16
push
in
push
pop
sbb
xchg
clc
add
jl
outsb
ficoml
mov
inc
test
jmp
add
dec
xchg
pop
xor
gs
push
lods
lock
out
add
add
add
mov
in
ss
test
psrld
mov
and
lret
in
in
dec
pop
in
clc
mov
and
sbb
xor
mov
lds
cltd
adc
mov
sahf
cmp
mov
lods
fimull
icebp
mov
xor
or
pop
dec
out
adc
mov
outsl
mov
fstpl
ret
or
shlb
in
mov
lret
loope
push
cmpsl
dec
ja
jle
xlat
xlat
adc
ss
mov
pushf
jns
jecxz
sbb
repz
or
fistpll
inc
out
roll
enter
insb
add
sub
jg
sub
imul
pop
stos
pop
push
out
lea
xchg
test
push
dec
jmp
fstpl
lods
xchg
insl
xor
dec
push
push
add
mov
fistpl
movsb
leave
cwtl
scas
movsb
sbbb
mov
pop
daa
addr16
sti
es
into
xlat
push
loope
aad
xor
push
call
mov
cmc
cmc
bt
bt
and
cmp
add
pushf
pusha
lea
jmp
orb
pop
rolb
sbb
test
pusha
lods
dec
fwait
js
mov
dec
sarb
dec
or
push
jge
js
xor
pushf
iret
push
mov
insb
mov
cmp
push
pop
adc
xor
pop
jp
dec
or
mov
mov
adcb
xlat
mov
cld
mov
mov
call
add
loope
or
push
int
js
test
adc
scas
jb
inc
aaa
mov
aaa
dec
cs
ljmp
mov
xchg
mov
mov
inc
ja
pushf
pusha
lea
jno
pusha
lea
jb
clc
cmpb
push
lea
jne
adc
pusha
adc
pusha
mov
cmc
add
test
sub
ja
movzwl
adc
mov
cmp
test
bt
add
clc
call
cmp
pushf
pushf
jmp
pusha
movb
cmp
jmp
in
sub
in
iret
fidivrs
mov
data16
mov
jno
adc
xor
pop
pop
arpl
jg
testl
sub
or
out
icebp
mov
call
call
fstps
mov
jecxz
inc
xlat
je
adc
lods
es
push
mov
cmp
inc
scas
movsb
push
es
cmpsl
cmp
add
xchg
sti
push
and
dec
loop
mov
xor
add
outsb
sti
jo
stos
lods
push
mov
repz
jecxz
or
vpshufd
mov
cmp
sti
in
jo
xlat
cmp
or
ja
testb
push
not
scas
outsb
sub
cmp
mov
cli
mov
adc
jmp
cwtl
add
jo
mov
ficomps
xor
outsb
sbb
popf
mov
out
pop
dec
jo
or
xorl
ficomps
movb
jp
sub
shll
dec
cmp
loope
test
outsl
insl
mov
mov
cli
cmp
fcmovnb
mov
jns
dec
repnz
cmp
push
hlt
loope
add
pop
or
push
lcall
mov
lock
lods
into
xor
es
sub
inc
sub
adc
in
xchg
xchg
mov
shl
stos
jp
mov
es
push
and
lds
jle
aaa
lret
insl
dec
xor
cltd
das
pushf
xor
in
outsb
cli
fwait
out
andl
jg
test
push
jge
ja
adc
pop
push
cmc
roll
mov
ljmp
pop
sub
mov
stc
movsb
jo
add
stos
sahf
js
outsb
aad
loope
jnp
fwait
arpl
mov
jle
or
psubsb
out
das
dec
stc
inc
cmp
mov
mov
outsl
arpl
lcall
mov
sbb
xlat
daa
aas
arpl
push
cmc
imul
imul
out
mov
inc
cld
popa
test
ja
fst
fsubp
fs
movsb
fimuls
stos
or
lods
sub
add
fstpt
aaa
adc
ss
das
sbb
mov
xor
cmp
je
adc
push
cmp
lret
rorl
mov
cmp
pushf
mov
mov
lea
call
pushf
adc
pusha
lea
jae
pushf
pusha
pushf
lea
jne
push
stos
pusha
pushf
pushf
lea
jmp
add
dec
gs
popa
addr16
outsl
js
add
pop
mov
sbb
inc
jb
adc
lods
shl
or
imul
sub
xlat
mov
mov
and
lea
mov
push
mov
and
inc
push
sbb
scas
mov
out
ljmp
sub
das
fnstsw
mov
mov
mov
dec
mov
inc
adc
int3
dec
cmp
pop
fdivrs
lds
pop
lods
call
jno
and
fcmovnbe
dec
or
mov
int3
adc
stc
mov
nop
add
mov
shll
push
aas
les
pop
dec
loop
push
mov
adc
xchg
nop
mov
add
cmc
add
jo
xabort
cmp
pop
pop
bound
pop
mov
cmp
das
dec
push
gs
or
cmp
ljmp
mov
les
and
popf
clc
dec
stc
jl
add
loop
cmp
mov
xor
dec
insb
cld
insb
jmp
shl
xchg
dec
dec
xchg
repnz
cli
mov
mov
pushf
pushf
pushl
lea
ja
cmp
add
pusha
pushl
or
push
push
lea
je
clc
cmp
call
push
pushf
movl
pushf
jmp
lea
jne
pushf
setne
movb
movzbl
pop
not
push
jmp
stc
repnz
pusha
pusha
pushf
lea
jne
movsbw
bswap
movb
pushf
cwtl
movsbw
mov
push
pusha
lea
seto
lea
call
xor
jmp
lret
xchg
push
inc
pop
lods
inc
aad
inc
xor
add
dec
inc
mov
adc
mov
cmp
sbb
xchg
mov
mov
jl
dec
push
mov
cmp
xor
cld
fistpll
jo
and
or
fwait
sahf
xor
jb
out
cmp
ret
es
pop
add
fdivrs
jp
lcall
sbb
enter
dec
pop
push
adc
mov
jns
rcl
jl
sub
pop
mov
shll
add
fs
jnp
push
pusha
movb
pushf
mov
movl
push
pusha
push
lea
jmp
lea
jae
bt
add
jmp
lea
ja
ror
dec
shr
bt
sub
rol
adc
sar
jmp
adc
popa
push
repnz
jmp
mov
loop
stos
xor
fbstp
push
mov
pop
and
jae
popf
inc
xor
push
loopne
test
sub
test
dec
pop
es
add
ljmp
and
pushf
xor
xor
xor
jbe
aaa
fucom
dec
jmp
cltd
data16
iret
call
test
loope
dec
or
mov
icebp
ud1
inc
lea
add
xchg
lret
mov
jae
cmp
das
data16
jl
or
adc
std
mov
mov
aad
imul
push
cltd
mov
aaa
lock
and
and
sbb
add
das
jecxz
or
jns
or
dec
das
dec
andl
or
sar
cmc
push
mov
push
pusha
cmp
cmp
cmpb
jmp
call
out
sub
adc
loop
jmp
sbb
pop
fiaddl
test
sub
sub
xor
testb
lods
jbe
mov
mov
pop
and
xor
ja
andb
lods
pop
and
inc
cmp
mov
dec
scas
std
jmp
test
test
insl
dec
cmp
and
jl
fs
lahf
and
or
and
lea
icebp
jne
inc
pop
sbb
and
cli
xchg
and
pop
lea
xor
adc
mov
add
jg
push
push
sarl
mov
frstor
jo
jle
icebp
jns
jno
sbb
hlt
adc
adc
pop
mov
arpl
shll
movsb
and
mov
cmp
mov
mov
imul
test
jecxz
dec
dec
mov
xor
push
push
mov
ljmp
lea
sbb
aaa
xor
test
xor
push
push
dec
pop
push
jns
repnz
sub
sbb
push
insl
aas
and
mov
shll
pop
repnz
mov
movsb
popf
repz
jae
sub
scas
dec
push
aad
dec
xor
test
adc
imul
jae
repz
mov
pop
mov
sbb
cmp
mov
sub
repz
add
arpl
inc
movb
outsb
mov
or
adc
inc
arpl
fwait
movsl
sahf
push
sub
mov
and
test
ret
and
pop
adc
jmp
pop
rclb
pop
adc
mov
or
sbb
mov
adc
dec
popa
lea
xchg
in
mov
imul
xchg
or
inc
ret
mov
xor
rclb
xor
lods
clc
xor
cmp
jg
scas
xchg
jns
dec
repz
jmp
sti
add
mov
mov
lock
shll
or
or
lahf
shr
mov
cmpsl
pop
rcrl
stos
int
call
subb
pop
sbb
test
inc
repz
cmp
mov
ficoms
sbb
outsb
adcb
pop
jne
add
and
mov
xor
and
cmpsb
push
mov
scas
xchg
mov
and
test
cmp
xor
pop
pop
movsb
subl
push
and
popa
lcall
or
mov
mov
and
lock
xchg
int3
sub
inc
sbb
cmp
sub
fisubl
sbb
mov
mov
fs
jae
dec
lods
lahf
sbbl
jp
sahf
clc
push
loopne
inc
fsubrl
mov
test
xor
test
pushf
neg
jmp
pushf
pushf
repnz
movw
jmp
add
inc
gs
outsl
fs
gs
imul
add
or
ja
ret
and
mov
or
push
sub
sti
imul
sub
out
sub
sub
push
and
test
aam
in
xchg
stos
out
lcall
or
lcall
fs
jne
das
sbb
das
bt
sub
bsf
mov
shl
add
shr
bt
call
and
mov
pushf
cmpb
pushf
lea
jne
sbb
xor
shr
rcr
daa
mov
cmc
add
or
mov
stc
test
push
call
clc
cmp
call
mov
push
push
movb
pushf
xchg
movzbw
setne
movl
bswap
cwtl
not
lea
jmp
test
bt
bt
pushl
popl
stc
test
cmp
call
str
pushf
movb
movb
pusha
movl
push
pusha
movl
mov
mov
movb
pushf
lea
jmp
bsf
mov
test
jmp
pusha
push
pushf
lea
ja
inc
sub
bt
ror
push
stc
sub
add
bswap
setns
pushf
mov
neg
mov
test
test
cmc
repnz
push
pusha
jmp
jl
jle
lods
cmp
testl
inc
outsl
jns
sbb
pop
bound
or
sub
add
outsb
je
enter
pop
adc
sub
fbstp
xchg
icebp
adc
pop
sbb
cli
lods
dec
mov
fstpl
xor
mov
nop
pop
subb
inc
dec
lods
aad
rorb
decl
mov
fisubs
pop
mov
adc
push
adcl
fstpl
push
cltd
mov
push
and
mov
mov
fcomps
jnp
incb
or
out
test
notb
lcall
fwait
movsl
xchg
pop
mov
xchg
jno
or
data16
cmp
jbe
xchg
icebp
cwtl
aam
mov
leave
pop
test
adc
inc
and
dec
cmpb
mov
add
enter
dec
jmp
cmpsl
hlt
xchg
and
sbbl
movb
lods
jb
int3
pop
jno
leave
int
push
enter
outsb
std
add
dec
jo
insb
push
rcrl
lock
adc
ffreep
mov
ljmp
imul
push
mov
in
cli
mov
pop
pop
out
xor
sub
lock
fwait
push
mov
fcomi
adc
and
pushf
call
call
movw
test
pushl
cmp
pushl
movb
pusha
movb
lea
ja
dec
sub
add
inc
and
mov
pushf
stc
cmp
jmp
stc
cmp
pushf
push
lea
jae
btr
sub
or
cmp
mov
and
bswap
mov
rcr
movsbw
mov
pushf
sub
call
repnz
movsl
clc
fisubl
jae
hlt
sub
pusha
in
dec
mov
movsl
aaa
cmp
outsl
sub
sbb
adc
mov
xlat
fs
xchg
aaa
xchg
lcall
sub
push
ds
cs
lret
sub
ss
push
rcll
xor
movl
pushf
movb
pushl
popl
movb
movw
pushf
pushl
ret
aaa
jno
sub
das
ret
jb
pop
int
or
fildl
lahf
or
pop
fcmovne
movsl
ds
mov
cli
gs
clc
cmp
xchg
xchg
dec
mov
repz
aad
dec
stos
inc
push
aaa
push
loopne
mov
in
xchg
or
shll
cmp
int
imul
adc
aad
adcl
or
loopne
adcb
adc
into
or
cmp
imul
xchg
xchg
das
call
sbb
repnz
push
mov
adc
xor
sub
push
aaa
dec
cli
pop
mov
outsb
xor
xor
ret
hlt
inc
cmp
daa
and
and
mov
jno
call
mov
inc
mov
lahf
cmp
stos
jecxz
pop
movsb
push
pop
mov
or
mov
loop
dec
dec
bound
xor
daa
push
dec
fwait
jo
mov
test
mov
adc
mov
push
into
ficomps
add
aas
cmp
ret
shll
fstps
xor
faddp
or
push
int3
cmp
jnp
stos
push
pop
jns
lods
add
jne
push
daa
or
dec
pop
jecxz
ret
into
out
cmp
or
mov
lahf
decb
out
fpatan
jne
xchg
mov
mov
pop
sbb
pop
stos
insb
pushf
leave
shlb
jnp
repz
add
sub
adc
jl
divb
mov
sahf
ja
outsb
add
or
sbb
daa
dec
and
cmp
sbb
push
or
pop
mov
push
sub
add
or
jmp
pushf
inc
pushf
movb
pusha
jmp
call
add
repnz
movsb
xchg
std
insb
push
jl
inc
ret
shlb
fs
and
fcmovne
hlt
xchg
xor
inc
xchg
sub
inc
mov
clc
shrl
mov
ljmp
push
nop
lcall
jo
cli
lods
scas
mov
daa
test
movl
call
sub
cmc
bt
clc
push
cmp
push
lea
ja
pushf
push
push
lea
jmp
jns
jnp
iret
fidivl
leave
in
cmc
mov
add
mov
inc
leave
scas
loope
cli
stos
je
mov
pop
mov
push
jbe
lods
daa
imul
cmpsl
pop
leave
test
adc
dec
mov
inc
xchg
mov
bound
mov
jne
in
stos
jl
mov
mov
pushl
popfw
jmp
xchg
adc
nop
shl
dec
in
inc
insl
push
pop
int
dec
cmc
cmp
cmc
xchg
cwtl
cmp
jp
lcall
mov
call
push
add
sbb
pop
movsl
jp
or
xchg
in
movsb
popf
data16
ret
test
leave
or
xchg
pop
fs
mov
xchg
loopne
pshufw
mov
int
lcall
mov
dec
or
mov
jmp
push
movl
push
movl
pusha
pusha
lea
jmp
mov
pusha
movw
push
lea
jmp
push
movl
add
pushf
jmp
lret
test
xor
pop
cmp
xor
adc
out
mov
pop
adc
sbb
pop
or
loope
ds
jo
xor
xor
je
mov
sbb
scas
cwtl
inc
adc
scas
mov
xchg
and
enter
cmc
adc
fimull
hlt
bound
cmpsb
insb
enter
ret
jle
int3
outsb
ret
ja
stos
add
dec
xor
mov
outsl
xor
xor
xchg
mov
outsb
adc
xchg
push
add
push
dec
cmp
xor
inc
mov
loopne
push
pop
adc
and
mov
arpl
xchg
pop
ja
mov
into
fmul
stos
js
pop
xchg
ret
mov
jle
rcr
lahf
mov
stos
lods
push
pop
enter
fwait
jbe
out
ljmp
dec
pop
fisubs
cltd
add
ja
adc
xchg
es
out
dec
in
push
cli
cwtl
xchg
xor
sbbb
imul
or
or
pop
jle
jge
or
enter
js
xchg
pop
xchg
mov
jmp
sarl
jecxz
push
imul
fistpl
push
jmp
int
inc
mov
sbb
shl
pop
fcoml
jp
iret
dec
ds
es
nop
ret
mov
lret
xchg
xor
sbb
bsr
bswap
sub
mov
cmc
pushf
test
cmpb
jmp
in
stos
inc
jne
jns
insb
mov
xchg
fwait
mov
dec
mov
jae
pushf
pop
sbb
pushf
pushf
adc
sub
adc
lods
in
shrl
jg
bound
imul
xchg
fdivs
test
cmp
enter
add
call
stc
rcr
pop
cmp
mov
pop
sti
mov
scas
aam
and
daa
sub
sbb
pop
icebp
mov
test
fs
sbb
je
les
leave
or
adc
cmp
jecxz
xchg
sahf
lods
shll
out
mov
testl
std
xchg
mov
add
jg
push
mov
xor
xchg
and
aaa
dec
out
and
pop
inc
mov
add
or
dec
cmp
fldenv
mov
movsbw
lea
cmc
call
sub
call
stc
mov
dec
xchg
inc
mov
cmpl
jge
shrb
adc
jecxz
jns
xor
xor
call
ss
cld
cmp
mov
sub
ljmp
sarb
in
imul
nop
ja
stc
lret
mov
mov
and
and
scas
push
or
mov
xchg
rorl
or
in
sbb
stc
mov
sbb
or
add
jl
xor
mov
mov
pop
jae
sub
pop
push
pop
adc
mov
stc
int3
pop
pop
push
inc
jb
add
add
mov
decl
xor
jle
mov
lock
and
or
cmpsb
and
mov
dec
repnz
xchg
lret
or
pop
lret
addl
lahf
inc
fucomip
pop
mov
mov
inc
mov
pusha
adc
mov
pushf
pusha
pushf
lea
jmp
xor
jmp
rol
cmp
call
call
test
mov
mov
pop
fbld
movsb
insl
xchg
sbb
jne
int3
imul
lea
pop
mov
int3
sub
dec
movsl
int3
fstpt
sbb
jmp
jl
adcb
loop
pop
jns
jb
inc
negl
mov
mov
sti
inc
mov
jne
cmc
test
add
stos
inc
inc
out
mov
adc
outsb
cli
sbb
dec
mov
scas
lcall
call
rcr
inc
pop
das
pop
loope
mov
int3
loope
stc
mov
imul
jge
or
mov
xchg
testb
in
cs
adc
or
scas
xor
cmp
lds
jae
inc
outsl
or
popa
ror
pop
sub
mov
mov
insb
les
sub
sub
mov
in
scas
adc
repnz
pushf
mov
pop
insl
in
jb
icebp
mov
scas
mov
pop
or
das
psubsb
stos
iret
mov
push
in
pushf
movl
lea
jae
test
cmp
pushf
call
inc
inc
mov
or
pop
outsb
cmp
movsl
shlb
xchg
jnp
test
jae
repnz
sbb
popa
inc
pop
fmulp
in
pop
add
hlt
and
mov
xchg
lea
push
jb,pn
add
pushf
int3
and
inc
cmpl
mov
push
and
or
xlat
ficompl
jge
mov
into
jp
mov
mov
clc
cmpb
push
push
cmp
mov
pop
xor
mov
rcrl
outsb
sbb
and
mov
ret
xchg
cwtl
lahf
test
lahf
and
dec
xchg
in
jmp
jecxz
movb
or
into
sahf
out
pop
popa
pop
or
lcall
scas
mov
inc
pop
insb
and
cmp
mov
sub
xchg
adcl
push
push
cmp
jbe
rcr
mov
sub
pop
icebp
out
adc
mov
xchg
pop
in
sbb
gs
sbb
inc
aaa
pop
fiadds
cli
lret
inc
adc
jbe
rorl
dec
arpl
jecxz
dec
outsb
lods
cli
xchg
stos
sbb
scas
jb
mov
xor
mov
inc
movsl
imul
test
call
pop
sub
ja
xor
dec
jp
je
jbe
fimuls
adc
mov
inc
fistpl
sbb
das
inc
mov
test
pop
inc
dec
cli
loopne
mov
out
shlb
push
callw
jmp
repz
mov
in
aad
jb
test
push
andb
mov
add
es
jmp
mov
test
out
sub
cmc
jbe
jb
pop
int3
iret
test
bound
push
dec
stos
xchg
enter
std
adc
in
add
stos
jl
sbb
sbb
and
mov
in
test
sbb
dec
iret
mov
jne
dec
xorb
inc
inc
call
pop
iret
adc
or
mov
clc
shr
arpl
je
out
push
push
sub
and
dec
inc
adc
and
aam
inc
and
push
add
jmp
neg
call
mov
lea
cmc
pusha
mov
call
ds
mov
cmp
icebp
loopne
jbe
cmp
or
jle
int3
iret
xorl
jle
and
shlb
repnz
pop
das
inc
cmpsb
test
jp
pop
push
cmp
add
and
ret
jle
jle
push
cli
push
data16
lret
pop
jecxz
add
sub
jbe
cmp
pop
push
lea
pop
or
xchg
or
filds
xchg
scas
mov
negb
mov
mov
in
cmpsb
xchg
cmp
les
or
jg
push
mov
jg
push
es
adc
rolb
inc
out
pop
xor
push
cmpsb
xchg
incb
out
fimull
aam
fmull
mov
dec
jb
or
jo
and
push
rep
dec
xlat
mov
daa
or
jae
sub
cld
cmpsb
xchg
adc
fidivrs
mov
cwtl
mov
cmp
mov
cmp
lea
jmp
sbb
iret
sub
stos
push
fisubl
inc
lret
fldenv
cmpsb
jmp
dec
add
lods
jne
or
xchg
fldcw
lcall
xchg
scas
sbb
pop
ds
cmc
clc
xlat
xor
popa
mov
cmovg
call
pop
ljmp
imul
xchg
inc
mov
fcomi
loopne
mov
jne
aad
out
das
adc
mov
shrb
fnstcw
loopne
outsl
icebp
pop
mov
fldcw
in
pop
sub
and
rorb
data16
pop
cmp
or
ficoms
les
test
push
mov
dec
inc
jg
jmp
clc
icebp
cli
ljmp
outsb
pushf
dec
vandnpd
mov
xchg
std
mov
mov
movsb
out
nop
jle
ja
push
mov
fiadds
sbbl
in
xchg
sub
inc
mov
repz
or
cmp
pop
sbb
adc
add
push
mov
repnz
xor
push
xchg
fcoms
mov
lret
xchg
push
call
icebp
jo
popf
out
leave
add
or
test
adc
dec
xchg
and
push
pop
pop
in
int
pop
jns
daa
hlt
sub
in
fwait
mov
cmp
adc
sbbb
add
push
icebp
decl
dec
aam
movsb
insl
out
cmc
lret
sub
in
icebp
sbb
dec
sub
arpl
inc
aaa
popf
fistps
inc
cmp
cmp
xchg
loope
add
xchg
pop
out
jb
push
mov
pop
mov
fdivl
repz
inc
xchg
inc
push
fs
inc
jo
mov
outsb
addb
add
call
pusha
pushf
mov
pushl
pushl
ret
cmc
cmp
pushf
call
lea
jae
shl
mov
sar
btr
mov
btc
mov
clc
cmp
xor
cmp
jns
pushf
repnz
jmp
pushf
jmp
pushf
lea
jb
jmp
cmp
test
jmp
clc
add
bt
call
cmp
pushf
pushf
call
pushl
pusha
lea
je
call
add
add
lea
stc
rcl
push
seta
mov
call
inc
movw
movb
lea
jmp
call
mov
mov
movzbw
pop
bswap
lea
pusha
push
push
movl
pushf
push
push
pushf
mov
pushl
push
pushl
ret
bt
bt
mov
jmp
bt
cmpb
pushf
jmp
call
push
call
pushl
popl
pushf
pushf
push
pushl
ret
movl
clc
test
call
push
call
stos
daa
dec
jb
xchg
pop
filds
flds
clc
pushf
andl
stc
testb
cmpsb
push
push
mov
ja
sub
int
cmp
xchg
rcrb
aad
nop
and
lahf
int3
icebp
fwait
int3
lock
xor
negl
out
clc
out
push
adc
jns
or
scas
xor
mov
sub
sbb
dec
popf
andb
lds
pop
xchg
cs
testb
jle
adc
mov
xchg
mull
cmp
jo
in
in
arpl
mov
loopne
or
xor
push
jl
dec
mov
sub
push
xor
insb
sar
xor
dec
in
aad
xchg
dec
push
mov
cmp
cs
outsb
push
scas
mov
and
or
js
in
mov
adc
mov
and
xlat
fdiv
cli
mov
pop
mul
sub
add
cmc
adc
inc
mov
aam
test
ljmp
xor
fnstsw
dec
cmp
sub
roll
call
out
jno
push
repz
push
out
pop
mov
bound
in
dec
cmp
mov
and
test
mov
adc
mov
jecxz
in
aaa
cmp
sub
pop
pushf
add
push
add
push
jl
mov
dec
inc
push
jp
jge
xchg
shlb
sti
sti
outsl
fcoms
jp
jmp
or
cmp
out
push
xor
iret
cmp
pop
mov
clc
mov
dec
push
cld
mov
or
xchg
jg
cmp
int3
sbb
cs
leave
sti
xor
inc
ss
pushf
fwait
test
cmpsl
pop
pop
call
sbb
mov
mov
and
push
orb
fs
jno
push
push
lea
jae
jmp
sbb
test
adc
ds
aaa
cvtdq2ps
fisttpll
jns
inc
push
adc
jecxz
push
repz
sub
jle
pop
mov
lock
jge
jmp
imul
lret
outsl
and
adc
mov
aas
sbb
dec
dec
lret
dec
js
fs
dec
insl
andl
hlt
aam
inc
lahf
clc
inc
or
dec
push
cmpsb
jp
out
push
shlb
mov
fimull
imul
popf
fbstp
xchg
dec
sbb
icebp
inc
mov
pop
scas
jecxz
xchg
iret
sbbb
sbb
mov
clc
aad
push
mov
push
pusha
xchg
pushf
pushf
dec
test
jmp
or
cld
lcall
dec
pop
add
mov
shrl
lods
add
mov
inc
cmp
mov
sahf
jnp
daa
jl
fs
rcrb
push
jno
cld
testb
popf
sub
inc
dec
pop
jo
es
sub
pop
bound
lds
movsb
out
xchg
fiadds
loope
mov
in
push
cmp
jge
repnz
xor
and
mov
pop
mov
js
sbbb
out
ljmp
mov
mov
jl
int3
clc
sti
push
or
dec
nop
dec
dec
adc
pop
mov
push
loopne
mov
mov
outsl
call
lea
jbe
clc
rol
bswap
sub
shr
bswap
shl
mov
clc
and
xor
ror
mov
sub
adc
add
shrd
bt
push
shr
xchg
call
mov
loope
pop
test
push
cmp
mov
cmp
lock
or
mov
and
or
dec
imulb
hlt
mov
fimull
pushf
into
mov
dec
hlt
adc
scas
add
pusha
rol
mov
lea
pushf
call
jmp
and
bt
bt
jo
test
add
push
pushf
lea
jmp
movb
mov
pushf
pushl
ret
int3
popf
pusha
movl
pusha
call
pusha
pushf
pushf
inc
movb
push
call
pusha
movl
pushl
lea
jmp
call
mov
mov
cwtl
pop
pushl
popl
jmp
pushf
mov
mov
movb
push
pushl
ret
jmp
push
jmp
arpl
mov
dec
xor
mov
pusha
sbb
dec
mov
jp
add
add
mov
xor
mov
dec
pushf
pop
jne
mov
popf
sub
testl
add
jge
jns
cmp
fisubrs
and
movl
enter
in
lahf
jecxz
pop
test
movsb
sbb
lcall
push
or
jmp
stc
cmp
pusha
pusha
jmp
push
xchg
sar
mov
mov
mov
cwtl
jp
push
cmp
sahf
dec
dec
loope
dec
cmp
loop
xor
xchg
sbb
or
dec
xchg
pusha
adc
clc
xor
pop
mov
push
leave
jg
cwtl
jg
push
mov
adc
mov
mov
fwait
sahf
nop
movsb
bound
cmpsb
call
or
mov
repz
cmpsb
jmp
xchg
pop
fsubrp
mov
inc
xchg
outsl
fbstp
fsts
out
push
lahf
filds
popl
add
xlat
filds
mov
add
xlat
add
aaa
notl
mov
cmpsl
add
outsl
aaa
add
add
mov
push
add
pusha
cmp
pusha
lea
jno
pushf
pushf
lea
ja
bt
cmp
add
cmc
test
test
push
or
push
lea
je
clc
cmp
pushf
pusha
push
call
lea
ja
shl
sar
or
sub
shr
ror
add
bsf
shr
btr
mov
setl
add
mov
stc
repnz
push
jmp
lea
jbe
neg
shl
sar
mov
shl
adc
add
pushf
ror
mov
pop
inc
add
test
or
movl
clc
xor
bsr
mov
push
cmc
clc
cmp
pusha
pushf
call
inc
sub
ss
sbb
pop
inc
hlt
fisubl
cmp
jmp
mov
call
popa
fs
movsl
test
xchg
adc
inc
cltd
icebp
insl
cmp
aas
fwait
popa
cs
push
jle
cmp
jb
dec
or
xchg
in
out
adc
sub
repnz
pop
add
test
in
cmc
sub
dec
adc
jl
cmp
aaa
aas
outsb
iret
xchg
je
and
shlb
fwait
cltd
sub
lahf
adc
popf
aas
movsl
out
dec
inc
imul
xchg
repz
push
scas
fists
dec
dec
test
arpl
xchg
fsqrt
push
imul
jge
stc
pusha
pusha
add
pushf
pushf
mov
lea
jmp
pushf
lea
jb
stc
stc
call
sub
call
pushl
not
mov
lea
pushf
pushf
pushf
lea
call
pusha
call
dec
call
pushl
lea
je
jmp
lea
ja
push
cmc
imul
clc
cmc
pushf
add
pushf
pusha
movb
lea
jmp
sub
add
lea
mov
setns
pushf
and
ror
mov
bt
clc
pushl
repnz
push
push
pushf
mov
lea
jne
mov
movb
movzbw
movzbw
lahf
call
ss
push
or
and
scas
adc
inc
or
icebp
movsl
pop
mov
loope
cmpsl
inc
push
pop
rcrb
push
adc
push
push
ret
js
in
mov
sbb
inc
push
push
mov
adc
and
cmp
mov
jbe
js
dec
inc
dec
fists
rol
jno
or
add
mov
pop
mov
sahf
push
mov
jbe
enter
xchg
cmp
lds
dec
out
loope
xchg
cmp
es
cmp
mov
push
cltd
mov
popf
xor
mov
fsubs
xchg
pop
fcmovb
pop
dec
pop
and
xchg
pop
push
inc
and
push
jecxz
xlat
mov
popf
into
lods
dec
setbe
and
xchg
or
sub
xchg
adc
loop
mov
xchg
fcmovnbe
inc
sbb
mov
mov
outsl
xor
repnz
loope
test
dec
sbb
xor
pop
xor
loopne
insl
inc
pop
jg
dec
dec
mov
dec
shlb
lods
add
adc
inc
sub
dec
xchg
cmpsl
in
pushf
push
pop
adc
adc
jns
add
cltd
sub
mov
xor
movsl
xor
xchg
nop
push
ficompl
inc
pusha
loop
xchg
inc
mov
sub
je
in
xor
ljmp
mov
pushf
mov
mov
out
push
sub
and
scas
add
fiadds
leave
or
out
mov
inc
sub
xchg
inc
ljmp
adc
dec
push
dec
sbbl
stc
pop
adc
cmp
mov
jp
aas
and
or
andl
push
pop
lods
mov
dec
xorl
mov
pop
lock
sub
je
and
int3
pop
cs
push
mov
loop
pop
xor
sub
add
mov
pop
or
shrb
and
mov
test
sub
out
pop
roll
and
insl
scas
hlt
push
xchg
dec
lods
mov
std
mov
in
call
je
jmp
push
dec
and
pop
xor
push
jp
inc
dec
testl
shll
and
popf
push
xor
add
jg
nop
inc
xchg
in
sbb
sub
pop
and
mov
lock
and
in
pop
add
and
ret
jmp
mov
mov
notl
lret
sub
rcr
pushf
rol
mov
stos
pushf
pushl
mov
lea
push
mov
mov
lea
call
jmp
scas
mov
jecxz
js
repz
outsb
adc
fisubl
fidivrs
cmc
clc
mov
jp
sbb
lret
jbe
cmp
xchg
fidivl
sarl
lds
xor
les
pop
repnz
fcom
ret
aas
push
leave
cmp
pop
lahf
sub
cli
mov
xor
cmova
cmp
inc
test
out
sti
jle
xor
dec
sar
loope
sahf
ficoms
lret
in
mov
les
cltd
xchg
jmp
stc
mov
daa
popa
std
movsl
sbb
leave
ljmp
stos
mov
das
jno
mov
or
loopne
mov
daa
jo
mov
inc
mov
movb
mov
cwtl
pushf
movl
movsbw
pushf
lea
pushf
jmp
sbb
into
jecxz
xor
mov
andb
xchg
push
popa
inc
lret
ret
arpl
test
test
in
push
adc
sub
jle
nop
add
inc
clc
ret
push
fimuls
dec
fwait
popa
loop
mov
dec
iret
sub
ljmp
xorb
fcompl
subb
pop
loopne
mov
lods
add
xchg
je
adc
cmp
lret
jb
add
cmp
inc
add
orl
jecxz
sub
dec
test
cmp
mov
mov
dec
addr16
xor
cwtl
fnstsw
mov
andb
push
dec
popf
lods
fptan
push
test
cmp
xor
push
xor
mov
shr
imul
xchg
cltd
fidivrl
jbe
iret
sbb
and
jg
mov
negl
dec
pop
outsb
nop
push
jne
pushl
ret
imul
stos
dec
xlat
push
mov
test
call
lahf
int
bound
jne
out
add
movsl
xchg
ds
test
mov
test
jnp
push
gs
incb
loopne
pop
add
adc
mov
xchg
ret
fcmovnb
out
or
and
ror
aam
or
cwtl
mov
jne
movups
cmp
lds
insl
pop
mov
cmp
xchg
mov
push
cmpsb
cmp
mov
dec
lods
dec
or
adc
or
nop
xor
mov
cmpsl
inc
jne
mov
add
stc
pusha
cmc
clc
cmp
push
movb
mov
lea
ja
pusha
imul
bt
movb
add
push
pushf
movb
pushf
lea
jmp
mov
call
lea
jne
cwtl
push
movsbl
mov
pushf
push
mov
push
lea
jmp
jb
daa
lcall
lds
mov
fsubl
jle
pop
mov
fs
wrmsr
xor
adc
fcmove
pop
pop
mov
pop
push
fsubr
icebp
xor
ljmp
lock
loopne
sbb
add
inc
or
int
aad
cmp
lret
dec
pop
ss
push
adc
mov
test
ljmp
or
dec
push
mov
mov
call
call
jmp
test
push
add
mov
pushf
push
lea
jmp
lds
pop
sbb
xchg
jb
or
xchg
rol
or
pop
mov
sbb
loop
movsl
and
mov
lea
push
test
mov
call
xlat
lahf
mov
jge
test
xchg
jle
arpl
xor
jae
add
hlt
repz
jecxz
mov
pop
lods
fwait
ljmp
test
int3
pop
xchg
repz
inc
mov
int
outsb
into
mov
addr16
push
sub
jg
enter
push
int
pop
push
fistpl
mov
sub
and
ljmp
rorb
sbb
in
dec
lods
and
pushf
arpl
cs
popf
jp
jno
jae
lret
push
fists
fcoms
fistps
mov
out
push
sub
cli
ret
jmp
arpl
nop
jp
adc
pop
xchg
sar
icebp
mov
repz
daa
add
jo
mov
inc
mov
call
adc
and
push
jl
into
das
fwait
enter
jle
pop
xchg
hlt
jecxz
mov
mov
mov
sar
in
dec
xchg
pop
adc
xor
sub
mov
movsb
enter
sub
sub
xor
inc
nop
test
dec
xchg
and
pusha
mov
pushf
pushl
ret
or
call
rol
movb
call
cmp
bsf
ror
mov
jmp
pushf
push
lea
ja
ror
xor
rcl
sub
adc
rcl
inc
add
sub
mov
rcr
sub
adc
mov
bt
jle
cmc
repnz
pushf
call
push
inc
call
jmp
call
sub
shld
clc
shr
mov
bt
stc
sub
test
test
cmc
pushf
pushl
popl
test
cmc
cmp
push
call
addr16
pop
or
cmc
test
movsb
test
mov
mov
repnz
add
jecxz
daa
or
fistl
xchg
pop
pop
decl
mov
dec
and
push
mov
add
push
push
sbb
sbb
faddl
inc
out
daa
xor
adc
or
push
add
pushf
pop
pop
outsb
or
loop
dec
in
add
das
mov
inc
xchg
push
aas
insl
daa
jno
mov
notb
or
fdivs
movsb
cmp
in
mov
push
popf
xor
sbb
mov
mov
push
mov
mov
push
mov
in
stos
mov
sub
add
cmp
jmp
push
mov
xor
cld
lret
jbe
xor
negb
je
jo
loopne
jp
je
sahf
pop
jne
mov
das
lods
cmpsb
bound
push
xchg
push
mov
jecxz
aaa
jne
lahf
movb
ja
push
jmp
add
adcb
adcb
adcb
les
ss
pop
add
add
add
add
gs
ret
pushl
ret
pushf
jmp
movl
pusha
lea
jae
shr
cmp
mov
ror
ror
mov
xor
movzbw
mov
jmp
setl
test
and
mov
sub
add
mov
bt
shl
clc
mov
test
pushf
jmp
lea
je
call
lret
sub
pop
pop
or
jmp
mov
or
mov
aas
inc
fisttpll
dec
lret
or
inc
inc
in
sub
and
lret
in
adc
sub
divb
adc
shll
int
fcom
xchg
test
cltd
jnp
popf
cld
pop
jg
aas
jne
add
push
xor
jle
popf
loop
shrl
mov
sbb
rolb
jg
adc
ljmp
cmp
lods
jnp
jmp
sbb
arpl
in
lds
dec
movsb
dec
sub
ret
test
push
je
aaa
xchg
mov
mov
or
sarl
in
call
add
loopne
movb
pushf
movb
lea
jne
jmp
pusha
jmp
stc
cmp
call
jmp
lea
jne
jmp
jge
lds
addr16
push
stc
inc
insl
fldt
dec
outsb
adc
sarb
outsl
sti
push
repnz
add
push
addr16
jge
push
jle
mov
xchg
xor
in
std
pop
adc
imul
lds
insl
sub
loope
jmp
lds
push
rcr
icebp
test
dec
jecxz
bt
shl
sets
not
setbe
lods
stc
xor
jmp
mov
sub
and
mov
sub
mov
pop
ret
es
xchg
pop
xor
mov
pop
lods
push
arpl
and
or
push
cmp
xor
cld
pop
rcrb
mov
pop
and
mov
dec
in
cwtl
jmp
int
mov
jmp
fs
cmpsb
andb
dec
cmp
mov
jb
popa
jecxz
lcall
dec
testb
stc
mov
mov
cmp
pop
adc
call
cltd
ret
xor
mov
aad
shlb
lcall
call
gs
push
mov
and
aas
xchg
out
out
or
or
pop
cmp
test
jmp
in
lret
test
shrb
mov
xchg
cmp
pushf
jmp
movl
pushf
push
pushl
lea
jmp
jmp
pushf
movl
push
movb
jmp
pushf
lea
jne
setge
mov
bt
or
push
call
imul
gs
xor
cs
insb
add
mov
or
inc
and
pop
out
add
fwait
pop
inc
jl
js
daa
dec
pop
and
out
mov
sub
mov
in
wrmsr
push
inc
jne
push
mov
repz
sub
fbstp
pop
and
and
loopne
shll
mov
into
pop
shlb
xchg
push
push
xor
scas
push
into
mov
fisubl
push
movhlps
pop
mov
fwait
push
inc
cli
in
mov
cli
mov
test
loope
pop
pop
push
cmp
in
adc
jae
dec
pop
icebp
cmp
add
mov
xor
mov
add
fs
imul
add
pushf
jmp
cwtl
cwtl
cwtl
lea
push
pushf
mov
pusha
xchg
call
push
movl
pushf
jmp
stc
stc
stc
add
push
push
pushf
call
repz
mov
std
add
sbb
test
push
lcall
sub
fcmovnb
lods
jne
insl
stos
fidivl
sbb
sub
or
stc
push
scas
in
hlt
add
adc
test
push
lds
mov
scas
pop
loopne
fstps
add
lea
call
push
pushf
lea
jmp
call
inc
push
pushl
lea
jmp
jmp
pushf
movl
mov
jmp
lea
je
cmp
test
call
pushf
mov
pusha
pushl
ret
and
mov
adc
sbb
lahf
and
test
xchg
sbb
sbb
dec
scas
jb
enter
mov
jo
cmp
arpl
mov
pop
jmp
inc
jo
inc
insb
scas
adc
mov
movb
ret
loopne
push
jns
cmpl
push
les
and
xlat
in
inc
push
xor
dec
mov
aam
or
ljmp
or
ljmp
xchg
mov
movsl
sahf
pusha
stos
gs
xor
out
test
mov
cmp
dec
cmc
add
xchg
icebp
loope
add
fimull
sbb
xchg
daa
jne
push
mov
fdivrs
popa
dec
push
movsl
mov
lret
sub
adc
xchg
pop
jnp
cld
aas
aam
or
lock
and
cmpsb
mov
mov
dec
pop
or
pop
clc
cmp
push
or
pushl
jmp
lea
je
call
push
jmp
and
mov
bt
jmp
pusha
lea
je
cmc
stc
sub
call
cmc
clc
sub
jmp
pushf
mov
inc
pushf
pusha
push
lea
jmp
jmp
pushf
lea
jb
call
inc
sti
jne
xchg
les
xchg
push
clc
mov
insl
movsb
in
je
fidivrl
lods
push
sbb
inc
jl
bound
dec
sbb
push
xchg
insl
xchg
mov
push
sbb
scas
jno
push
inc
sbb
repnz
leave
dec
nop
clc
or
sbb
aaa
push
mov
ljmp
pusha
add
xor
lcall
ret
mov
cwtl
ds
fsub
out
cmp
outsl
mov
insb
popf
dec
add
lock
outsl
mov
mov
sbb
out
test
shlb
ss
in
mov
dec
add
into
clc
add
outsb
int3
jbe
mov
and
sbb
or
add
mov
dec
clc
jp
dec
jg
jno
std
xor
cmp
imul
inc
out
or
add
pusha
or
xchg
jnp
aas
inc
jecxz
stos
cmp
jb
out
out
cmp
push
fwait
cld
dec
fidivl
mov
sti
mov
dec
stos
scas
sub
jmp
cwtl
mov
mov
adcb
mov
neg
cwtl
mov
cwtl
cmp
push
or
sub
dec
popa
cwtl
aaa
xor
add
inc
jne
xchg
inc
and
aas
inc
test
inc
and
jo
pushf
lea
jmp
mov
pusha
pushf
movb
pushf
lea
jmp
pushf
movl
call
cmp
pushf
pusha
mov
pushf
pushl
ret
pushf
inc
mov
pushf
lea
jmp
pusha
mov
xchg
xlat
fists
xlat
add
pop
outsl
aaa
add
mov
pop
add
out
out
push
lahf
filds
popl
add
xlat
filds
mov
add
xlat
add
aaa
notl
mov
cmpsl
add
outsl
aaa
add
add
sub
je
sub
xor
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
insb
in
jg
xor
pop
adc
and
loope
dec
rorl
sbb
xchg
mov
and
mov
xor
jo
rcl
xor
adc
pop
push
dec
cltd
clc
adc
xchg
cmpsl
out
test
es
mov
fbld
int
ss
popf
clc
lret
adc
push
mov
cmp
imul
push
lret
add
pushf
lea
jne
mov
test
and
mov
movsbw
sub
btc
pushf
bts
lea
cmp
cmp
sub
push
cmc
push
pushl
popl
clc
cmc
pushf
cmp
cmp
pusha
mov
push
lea
ja
rcr
sub
call
call
inc
add
mov
or
aaa
pandn
jae
and
pop
mov
mov
push
pop
cmp
aas
cmc
push
sub
nop
mov
cmp
sarb
sbb
test
repz
sbb
out
cmpsb
push
dec
rep
not
adc
sub
insb
scas
repz
aas
mov
divb
dec
call
cmp
mov
or
xchg
out
lcall
lret
add
pushl
popl
push
movw
push
mov
pushl
ret
movl
call
pushl
lea
jb
clc
jmp
pusha
push
mov
jmp
jne
mov
mov
outsl
xor
iret
shr
push
shr
mov
mov
ret
pusha
mov
sub
jecxz
sub
lcall
sar
mov
mov
stc
leave
mov
inc
mov
inc
insb
pop
push
mov
push
fisubrs
inc
pusha
mov
outsl
and
lret
dec
rcrb
mov
je
out
out
mov
cmp
dec
xchg
pop
xor
jb
outsb
or
jl
jbe
dec
xchg
ljmp
ds
loop
and
ss
cltd
xor
mov
add
sarl
divl
in
jbe
shlb
pop
mov
dec
push
stos
ret
xchg
repz
je
lock
lahf
mov
int
std
push
imul
addb
add
and
mulb
ret
out
or
fildll
sub
push
push
jne
dec
vaddsubpd
mov
fsubrl
mov
sub
mov
inc
xor
test
ret
mov
je
sub
mov
xchg
scas
iret
mov
test
cmpb
pusha
jmp
imul
lcall
lock
add
pop
int
push
push
jnp
mov
or
mov
cli
aas
mov
pop
lret
add
inc
xlat
cmp
dec
sbb
mov
rcl
mov
xchg
ja
jge
pushf
jno
nop
iret
clc
lcall
mov
dec
imul
int
lods
inc
mov
rcrl
ljmp
fs
lea
je
clc
cmc
cmc
call
pusha
lea
jb
push
pushf
pushf
pusha
cmp
movb
jmp
push
mov
lea
jae
not
xchg
mov
pushf
dec
setge
inc
call
popf
rdtsc
nop
jmp
not
setns
pushf
pushfw
popw
sbb
pusha
mov
pushl
cmc
cmp
xor
pusha
neg
bt
pushf
cmp
sub
call
jmp
inc
mov
xor
addl
pop
and
pop
je
xchg
cmp
cmp
sti
cli
idivl
xor
mov
sbb
jno
sbb
in
mov
insb
cmp
fidivrs
popa
data16
mov
les
jnp
jno
jae
xor
mov
adc
and
sub
movsb
pop
pop
push
jl
in
xor
push
adc
fsts
mov
inc
add
or
jmp
lea
je
push
add
mov
push
pushl
pushl
lea
jmp
push
jmp
stc
jmp
es
filds
and
sbb
cmp
mov
xor
sarb
gs
cs
popa
mov
je
adc
mov
sub
add
ljmp
cmp
xchg
sarl
mov
mov
pop
xlat
clc
mull
mov
in
mov
dec
lods
fimull
dec
insb
aam
sbb
lock
clc
xchg
dec
sarl
pop
pop
adc
jg
enter
pusha
ficompl
mov
sbb
or
adc
mov
mov
mov
pushl
ret
sub
leave
dec
sbb
test
xor
in
scas
adc
aad
insl
push
sbb
pop
rcr
cltd
addl
and
push
movsb
aam
add
je
push
cld
pop
pushf
stos
loop
xchg
repz
and
sbb
mov
jnp
mov
mov
adc
test
push
mov
iret
cmpsl
push
mov
mov
cmc
cmpsb
push
push
call
into
jno
jg
sbb
jmp
or
shlb
push
pop
pop
mov
xor
pop
mov
fdiv
jp
inc
mov
lock
pop
pop
cmp
mov
int3
or
mov
xchg
mov
lret
ret
inc
dec
sub
cwtl
rsqrtps
loopne
mov
pop
mov
mov
test
outsb
fs
xchg
add
sub
or
mov
outsl
mov
add
daa
xor
imul
lcall
and
inc
sbb
adc
push
test
test
and
cli
aas
sbb
mov
std
loop
inc
jle
pop
or
jbe
xchg
jb
push
add
fcoms
scas
lea
adc
das
in
add
out
cwtl
lret
bound
jp
cli
mov
cmp
enter
and
out
ficomps
add
mov
pusha
push
movb
lea
jmp
add
test
pusha
clc
bt
movzwl
movzbw
sar
mov
jmp
popf
cpuid
nop
push
call
mov
mov
mov
aad
dec
xchg
mov
ret
pusha
cmp
sub
add
das
je
add
sbbl
xor
scas
add
mov
add
scas
rclb
leave
or
xchg
lea
dec
sbb
xchg
scas
dec
mov
mov
pop
jb
dec
pushf
cmc
pushl
clc
neg
sub
jae
cmp
pushf
not
cmp
neg
jmp
imul
pusha
bt
add
push
lea
jmp
test
test
mov
call
movl
movb
movl
pushf
lea
jmp
lea
ja
pushf
pushf
lea
jmp
jmp
cmp
or
leave
pop
in
je
push
jecxz
pop
xchg
sbb
dec
push
insl
inc
fwait
call
xor
insb
inc
sub
je
add
adc
sub
xchg
cmc
sub
push
xchg
pop
xchg
sub
adc
sti
ret
sti
mov
sbb
fisubl
sub
or
jle
mov
mov
cwtl
jb
rol
push
mov
icebp
push
adc
inc
fisubl
push
stos
pop
or
mov
pop
mov
fs
cmpsl
sub
mov
shrl
insb
pop
dec
in
iret
jle
xor
loope
outsl
pushf
add
lock
xor
test
rorb
dec
lret
push
jg
push
lret
movsl
clc
mov
bound
iret
inc
xor
enter
lock
cmp
xor
sbb
es
icebp
ret
cmpl
xlat
adc
mov
dec
fcomps
push
dec
filds
cmp
xchg
loopne
sub
xchg
gs
mov
pop
mov
xor
aas
adc
xchg
pop
cmp
rorb
sbb
and
fmul
cld
and
push
outsb
cld
aas
not
movsl
jbe
pop
cmpsl
cmp
xor
lret
push
jns
mov
ss
jno
adc
sub
icebp
mov
mov
aam
jge
mov
test
jae
pop
xchg
sbb
mov
pop
pop
adc
sbbl
in
pop
js
xchg
jp
add
mov
jnp
mov
add
xchg
xchg
sbb
add
add
sub
sbb
sti
loop
add
popf
sbb
dec
icebp
sbb
add
add
bt
bt
cmp
jae
jae
push
cmp
pushf
lea
jae
jmp
lods
cmp
pushf
xor
bt
rcr
call
mov
sbb
jbe
fs
sbb
mov
data16
popa
movsb
pop
sub
lods
rol
add
ret
mov
add
sub
sub
fistpll
xor
testl
push
test
aad
cs
je
aad
je
xchg
mov
outsb
adc
mov
out
ret
pop
lret
movsl
pop
cmpsl
or
inc
mov
dec
sahf
inc
jmp
cltd
fwait
jl
pushf
mov
aad
sbb
das
loopne
ljmp
and
jmp
add
xchg
xchg
sbb
add
add
sub
sbb
sti
loop
add
popf
sbb
dec
icebp
sbb
add
add
add
add
xchg
and
xor
std
in
lret
cld
fisubs
lods
outsl
stos
movsb
cmpsl
xor
and
push
int
mov
imull
addl
movsb
daa
lock
or
lcall
add
js
mov
cmp
mov
jnp
movsb
insb
jecxz
es
jmp
pop
sbb
sbb
arpl
lea
ja
clc
imul
cmp
call
pushf
movl
jmp
and
jne
jmp
jmp
addr16
jnp
sub
arpl
cmp
in
fldenv
add
nop
sub
sbb
popa
mov
mov
movsl
mov
mov
xchg
leave
xor
lahf
fsubrs
insl
mov
and
fs
je
jmp
sti
jnp
arpl
pop
repnz
test
js
cmp
in
lret
dec
mov
lods
sub
mov
in
adc
stos
xchg
les
sub
jecxz
xchg
mov
ds
adc
fcmovnbe
dec
addr16
dec
or
out
and
rcl
mov
pop
cwtl
or
fs
jne
stc
xadd
mov
stc
bswap
inc
ror
sub
push
ror
sbb
cmp
lea
pusha
stc
sub
stc
pushl
popl
cmp
mov
cmp
jmp
jmp
pushf
bt
stc
pushf
cmp
pusha
lea
jb
call
pusha
mov
movl
mov
pushf
movl
push
pushl
lea
jmp
test
jmp
pushf
xchg
cwtl
pushf
pop
jmp
pushf
or
jmp
not
xchg
mov
not
pop
mov
push
push
pushl
ret
lea
ja
jmp
pushf
movl
call
ja
push
jmp
lea
mov
inc
dec
hlt
aaa
faddl
cmp
sahf
pushl
das
int3
ret
adc
xchg
out
dec
adc
test
into
xchg
repnz
add
aas
cwtl
fistl
lcall
stc
pushf
mov
call
jne
cld
adc
mov
mov
mov
movsl
pop
popf
xor
push
xlat
psraw
aas
rcl
out
mov
mov
pushf
pushf
mov
push
pusha
pushf
pushl
lea
jmp
lea
jne
jmp
jne
gs
xor
fs
insb
add
dec
dec
fdivrp
gs
les
xchg
sbb
jge
test
scas
pop
fs
adc
fimull
xor
fldenv
into
sub
aas
cld
mov
test
arpl
jae
xchg
xor
adc
and
insl
pop
fisubrs
or
fisttps
stos
and
push
loope
pop
jg
roll
mov
fiaddl
cmpl
mov
clc
mov
ds
shlb
add
rorb
outsl
rcrl
dec
push
stc
in
mov
shll
add
pop
dec
jg
pop
loope
div
es
and
into
xchg
movsl
test
push
repz
push
sbb
push
aas
mov
add
popa
pop
mov
dec
jp
mov
cltd
inc
call
les
popf
rcll
mov
inc
fbld
adc
mov
jnp
scas
in
scas
stc
pop
cmpsl
jae
lret
cmp
and
psubsw
xlat
add
daa
mov
out
and
jns
sbb
jge
scas
sbb
push
lods
lahf
mov
xchg
mov
dec
lods
adc
sbb
in
and
movsb
jnp
inc
cmpsb
sub
aam
int
shlb
push
aam
inc
aaa
and
jmp
rcll
lods
push
cmp
add
enter
or
mov
aam
inc
pop
xor
cmp
add
cmpsl
pop
je
sbb
pop
cmpl
adc
int3
mov
popf
jg
shl
xchg
jne
jl
cmp
in
mov
stc
push
out
mov
flds
add
mov
test
popf
js
je
pop
pop
dec
inc
mov
cmp
xchg
fwait
leave
repz
xor
insb
aad
rclb
pop
xchg
sub
jns
sti
xchg
xor
push
dec
jno
ja
jmp
clc
pusha
cmp
pushf
lea
jg
ja
jmp
pushf
lea
call
call
mov
shr
push
lea
je
jmp
dec
inc
jmp
adc
sub
sarl
popa
or
ss
xchg
ds
jo
lea
adc
arpl
scas
pextrw
sub
xchg
shlb
nop
cmp
rcrl
push
lret
mov
pop
cmp
and
xchg
jb
xor
scas
outsl
xor
mov
sub
movsl
push
insl
inc
mov
push
stc
xchg
xchg
sub
out
pop
pop
sbb
push
xchg
lods
gs
fists
jae
mov
add
lret
sub
and
call
add
inc
xor
add
fcomip
inc
dec
xchg
inc
lea
jbe
cmpsb
push
pop
fwait
daa
dec
sub
add
xor
ret
fnstsw
fidivl
xor
mov
iret
and
je
cmp
bound
cli
push
pop
mov
dec
jae
xor
jge
pop
dec
mov
mov
jp
jg
test
cmp
mov
mov
test
xchg
jns
fwait
xchg
out
or
xor
pop
je
dec
jge
sbb
xlat
mov
mov
mov
push
fadds
pushf
cmpsb
fnstsw
call
adc
lret
adc
xchg
fstl
pushf
adc
lods
inc
mov
cs
mov
xor
std
pop
and
lret
dec
sub
xchg
imul
add
mov
dec
adc
mov
cwtl
out
add
xor
pop
in
clc
pop
js
lret
jmp
test
mov
mov
int3
xchg
mov
js
std
lea
xor
rcr
out
adc
int
pop
mov
dec
push
test
xlat
push
std
mov
repnz
jbe
inc
pusha
add
jno
xor
pushf
repnz
adc
jns
push
push
mov
sub
add
cmp
lods
call
imul
add
xor
xchg
cmp
add
lret
popa
mov
mov
jmp
shrl
push
pop
imul
add
and
popa
testb
mov
add
cmpsb
mov
sub
outsb
cmpsb
lods
push
mov
mov
shlb
das
push
sbb
fbstp
mov
xor
xchg
jecxz
fidivrl
or
addb
mov
stos
aad
int
jno
inc
mov
imul
psubq
add
scas
rcll
pop
pop
insl
xchg
shr
out
mov
loopne
test
dec
gs
data16
add
xchg
lea
std
jnp
fwait
mov
mov
pop
pop
xor
mov
iret
jp
enter
cmp
jp
inc
adc
ljmp
adc
sbbl
mov
dec
dec
in
mov
lret
aas
adcl
push
jle
adc
push
out
inc
or
loopne
xor
dec
xchg
loopne
std
add
test
stos
nop
lock
pop
lea
fs
fidivrs
lods
nop
call
sbb
jg
sbb
cli
xor
add
xor
fidivrl
sub
vmovntps
hlt
adc
lcall
push
movsb
jecxz
push
data16
in
sahf
adc
arpl
jbe
push
cmpsl
pusha
pushf
cmpb
movb
lea
jne
rcr
xor
shl
mov
shr
pusha
add
sub
and
push
mov
stc
jmp
cmp
push
jmp
lret
xor
movsb
jmp
push
jle
sbb
cmp
jp
out
jo
push
aas
push
test
mov
cs
dec
insb
sub
jg
and
cmc
sub
test
fstpl
mov
dec
push
imul
adc
lods
or
mov
loope
pop
xchg
sarl
out
push
lds
rorb
mov
popf
cmpsb
lods
push
movl
pusha
pushf
movl
pushf
lea
jmp
daa
add
movsl
dec
sbb
cmp
cmpsl
jo
test
and
je
cmp
lea
out
mov
leave
mov
push
fsubrs
outsb
movsl
push
je
jle
vmovlps
in
insb
sub
push
or
dec
pop
aas
shrl
mov
scas
bndldx
inc
aas
xchg
sub
inc
mov
hlt
sub
in
xchg
scas
mov
push
jb
mov
lret
sub
fisubl
sub
adc
addr16
fstps
lahf
pusha
dec
jmp
mov
xor
dec
mov
andl
popf
mov
mov
mov
shrb
adc
or
ljmp
xchg
int
dec
jl
jne
xchg
into
loop
cmp
or
cmpl
dec
and
cmpsb
adc
lds
fistpl
adc
xor
cltd
inc
or
in
clc
fs
xor
cmp
fisubs
icebp
and
pop
mov
fucomip
lds
or
xchg
ret
xbegin
mov
std
xor
rorb
ret
xor
and
mov
xor
jp
out
and
hlt
mov
adc
bound
xor
xor
movsl
sub
mov
jp
divl
inc
insl
stc
adc
iret
out
sbb
ret
hlt
push
js
push
jl
push
and
sbb
mov
loopne
leave
xor
ds
paddq
lret
cltd
add
loop
fs
push
sbb
cld
dec
sbb
mov
nop
cs
sub
adc
lcall
xorb
push
bnd
jb
xchg
or
push
test
mov
loopne
sub
lret
adc
loope
mov
aad
loop
adc
int3
aas
loop
fucomp
and
push
icebp
add
add
insb
mov
rolb
adc
inc
outsb
cli
adc
int3
pop
adc
lods
mov
push
inc
repnz
andb
adc
sbb
mov
inc
in
lods
mov
fsubp
cmp
fcomip
mov
test
pop
xchg
mov
cmc
mov
mov
sahf
cmp
xlat
sbb
aas
pop
scas
out
push
sbb
cmp
sbbb
pop
push
mov
pop
push
sbb
xor
ja
dec
xlat
repnz
or
push
imul
fs
addr16
loop
push
fdivs
mov
scas
mov
or
add
cs
out
or
imul
ja
dec
enter
or
mov
in
mov
lret
mov
push
mov
out
and
adc
adc
jns
sub
pop
jae
sarb
iret
test
push
outsl
cli
and
sbb
roll
jg
shrl
repz
in
into
pop
mov
cmp
lock
loop
ror
sbb
mov
push
sti
sbb
aas
add
and
sub
insb
outsb
arpl
repz
xchg
cmp
loope
push
pop
mov
fdivrs
test
aas
pop
cmp
cmp
xor
mov
stc
cs
jl
mov
sbb
fdivrs
hlt
inc
jae
pop
sarb
imul
xchg
les
adc
adc
pop
xchg
jp
scas
pop
nop
jge
lods
imul
das
mov
pop
popa
ja
aad
or
fldl
lcall
fsubs
out
push
push
sahf
pop
das
mov
fsubl
test
cmp
xor
test
hlt
adc
mov
leave
aas
xchg
jmp
jo
mov
mov
insb
pop
arpl
or
jae
flds
and
xlat
mov
repnz
lret
pop
jns
pop
push
and
mov
mov
shr
inc
mov
xchg
lea
popf
stc
inc
das
popf
add
loope
add
shll
fsubrp
leave
into
fists
inc
and
mov
cld
mov
mov
push
clc
pop
out
int3
fdivs
addl
and
inc
ja
dec
or
pop
and
std
hlt
ja
call
movsl
ss
stc
jbe
sub
loopne
loope
sub
or
jae
jb
fidivl
ret
out
xchg
cmp
into
xchg
jge
xchg
lods
cltd
push
loope
sbb
popa
mov
test
mov
adc
push
ja
jp
movsb
inc
stos
in
imul
enter
pushf
leave
mov
xchg
cmp
dec
dec
dec
inc
mov
sub
clc
jnp
inc
les
jp
xchg
ret
lahf
loop
sbb
enter
rcll
cld
into
scas
jb
lret
mov
xor
lods
inc
or
mov
das
hlt
xchg
pusha
outsb
fcomip
mov
shll
mov
sbb
loopne
add
push
pop
jne
insb
sbb
notl
leave
cld
popf
jnp
out
aaa
mov
pop
jns
cmp
xor
cli
dec
jl
jns
inc
pushf
testb
mov
pop
enter
into
jns
mov
pop
add
add
jns
pop
dec
mov
ret
jns
mov
cmp
fscale
jns
pop
dec
add
mov
lahf
dec
insl
dec
mov
jns
fistps
insb
add
inc
inc
dec
shll
and
inc
fwait
dec
mov
in
pop
into
jns
stos
push
bound
testb
inc
iret
dec
insb
cmpsl
insb
fnstsw
inc
dec
dec
cmp
xor
fdivr
jns
inc
dec
lea
into
jns
xchg
pop
mov
jns
stos
inc
mov
or
jns
sub
cmp
fdivr
jns
mov
int3
gs
into
jns
aaa
jge
je
add
jns
arpl
inc
dec
in
icebp
mov
lahf
dec
insb
mov
jns
lret
inc
scas
lret
push
std
jns
scas
dec
lea
jns
xor
icebp
add
jns
pop
push
and
shrl
jns
mov
fwait
push
sbb
jbe
jns
incl
call
into
jns
mov
or
jne
jns
jg
jp
xchg
sub
rcr
jns
xchg
test
fdivr
jns
xchg
ficomps
jns
add
push
fdivr
jns
cmpsl
dec
mov
daa
into
jns
fistps
xchg
fiadds
mov
jns
xchg
pop
dec
pop
push
xchg
xor
into
pushl
mov
mov
jns
sbb
paddusw
in
fdivr
push
mov
or
mov
pop
test
inc
scas
dec
outsl
jbe
pop
mov
inc
fisttps
movsl
scas
fsubs
dec
into
jns
pop
ja
or
fdivr
jns
xchg
inc
adc
jo
jns
mov
mov
movsl
into
jns
imul
inc
into
jne
dec
std
popf
pop
pop
adc
jge
loope
mov
pop
lret
jne
xor
nop
or
pusha
sahf
sbb
dec
or
shll
ficompl
xchg
pop
mov
in
dec
jecxz
mov
jg
sahf
mov
jne
shl
btc
xor
call
add
bt
shr
shrd
mov
shl
test
cmc
cmc
mov
cmp
repnz
jmp
mov
rorb
cmp
jl
cmpsb
dec
out
fldl
lock
add
xchg
jp
jge
push
and
push
ret
adc
arpl
inc
xor
sub
or
cmp
aam
popa
inc
sbb
mov
jo
mov
popf
mov
mov
adc
out
jno
or
lret
into
test
pop
lret
sub
xchg
dec
mov
jge
inc
cmp
js
push
outsb
xor
mov
in
inc
ss
popa
lcall
lock
jo
inc
jge
sub
lea
std
add
repz
pusha
jmp
jmp
rol
test
mov
clc
and
bt
cmc
pusha
lea
jnp
add
jmp
lea
je
pushf
clc
pusha
bt
sub
jmp
pushf
lea
je
cmc
jmp
mov
stc
bt
stc
shr
clc
cmp
jmp
xchg
setae
adc
btc
mov
add
ror
test
rcr
mov
stc
stc
mov
bt
mov
bt
cmp
sub
push
pushl
movl
pushf
rep
movsbw
lea
movsbw
not
mov
mov
movb
mov
lea
jmp
pusha
call
lea
mov
pushf
push
mov
movl
jmp
popa
jns
cwtl
cwtl
pushf
and
ret
mov
cmp
daa
jae
lahf
hlt
xchg
in
dec
enter
lcall
loopne
pushf
cld
into
insb
orl
sbb
inc
push
divl
pusha
inc
or
scas
xor
in
ds
mov
js
mov
mov
addr16
outsl
push
push
std
je
push
popa
fwait
test
add
dec
js
sub
cmc
cmp
pushf
mov
pusha
call
adc
aaa
jb
clc
pop
or
out
cmp
cmp
js
and
lds
mov
les
cmp
addr16
data16
stos
jge
cli
xor
int3
psubusw
adc
cmp
jg
pop
cmpsb
test
inc
imul
sbb
inc
sub
aaa
adc
mov
push
jge
divb
sbb
push
popa
xor
sub
popl
faddl
rcrb
sub
loopne
xchg
enter
loop
test
xlat
mov
pop
jo
push
sub
stc
shl
test
cmc
lea
lea
jmp
push
fucom
jne
lahf
in
pop
ret
cmp
cmc
xlat
mov
cmpb
cltd
leave
pop
jl
pop
sbb
sahf
sub
test
or
mov
stc
mov
pop
std
lcall
les
out
sub
cmp
inc
pop
aaa
or
fmuls
mov
bound
pop
fsts
test
jp
push
dec
jmp
ret
dec
out
and
and
testl
mov
dec
mov
imul
mov
fldenv
inc
in
stos
inc
push
push
shld
mov
or
mov
pushf
push
pushl
ret
call
lea
call
push
pusha
mov
pushf
pushf
pushf
lea
jmp
pushl
lea
je
pusha
pusha
pushf
lea
jle
mov
push
pusha
mov
push
jmp
test
jmp
call
adc
jmp
add
js
rcr
dec
lock
test
std
int
mov
push
mov
aas
leave
out
clc
lret
jbe
cmp
aam
cmp
lds
or
mov
xchg
insl
es
sbb
sti
sar
das
cmpsl
sbb
xor
mov
dec
or
pop
lods
lock
cmp
xchg
xchg
fcom
push
leave
icebp
jnp
aad
mov
fsubs
jb
add
mov
push
jmp
outsl
push
sti
lea
int
pop
or
shl
xchg
add
xchg
iret
mov
mov
loopne
inc
inc
lds
mov
push
sub
insb
aad
stos
mov
les
adc
repz
movsl
dec
outsb
in
pop
xor
xchg
les
aad
lods
in
inc
shrb
push
int3
out
sub
sbb
jae
lds
xor
idivb
sub
pop
sub
and
orb
out
fisttpl
call
dec
fisttps
push
xor
testb
mov
nop
inc
inc
fcomps
pushl
pop
fildll
daa
add
popf
adc
inc
insb
mov
idivb
mov
ds
sub
jmp
ficoms
sbb
aaa
jge
push
std
mov
dec
dec
jb
or
push
adc
push
pop
leave
das
jno
cmp
test
inc
ffree
les
and
test
popa
jle
sub
int3
and
push
testb
cmp
mov
lea
jne
jmp
lea
call
sbb
push
push
inc
add
jno
enter
push
repz
xlat
inc
mov
sti
jge
outsl
jo
cmp
fldcw
pop
data16
lods
lahf
data16
arpl
call
and
mov
in
jp
fisttpl
ret
dec
jne
push
xchg
out
pop
cmpsb
xor
pushf
fdivr
in
xor
or
push
mov
das
inc
loopne
jno
add
or
mov
sbb
fnstsw
jae
loopne
inc
repz
call
cmp
pop
popf
fcomps
and
jo
adc
insb
mov
push
bound
mov
jns
mov
icebp
jmp
fisubrs
xchg
ret
jne
add
test
push
adc
push
dec
lahf
mov
mov
popf
cmpsb
push
add
inc
js
je
jb
arpl
jae
lea
jae
push
movb
pusha
movw
lea
jmp
pusha
lea
je
not
setb
lea
lea
bswap
movzwl
jmp
push
call
fcomps
adc
test
add
dec
andb
mov
lock
cwtl
adc
push
mov
jb
orl
addl
mov
fnsave
in
pop
cmovl
or
sti
inc
jbe
xchg
stos
pop
sub
dec
cmc
addr16
in
mov
push
icebp
rolb
jmp
ja
adc
inc
add
push
push
pop
aas
cmpsb
dec
jno
or
adc
cmp
mov
adc
xlat
movsl
pop
movsb
mov
sub
add
ljmp
jmp
cld
cld
daa
xchg
repnz
mov
vmwrite
aas
and
pop
xor
add
scas
jb
sub
pop
push
xor
mov
sub
in
cmp
mov
xchg
and
stc
sub
adc
push
movsb
scas
das
lods
sbb
mov
cmp
test
fs
adc
loope
js
sub
pusha
pushf
inc
pushl
inc
pushf
movl
push
movw
lea
jmp
rorb
mov
cmp
lahf
push
pop
add
fisubl
push
loopne
mov
xor
xor
lret
push
add
imul
mov
mov
mov
jns
test
and
jno
ror
dec
lcall
imul
pop
dec
popa
mov
push
mov
push
xchg
cmp
mov
push
sbb
xchg
jb
mov
jecxz
mov
xchg
pop
shrb
sbb
scas
sti
inc
popl
mov
call
adc
jns
adc
dec
stos
lods
sub
scas
lret
push
add
xor
loop
mov
pushf
insl
xchg
mov
push
dec
lea
dec
push
push
jp
jae
and
dec
add
fs
fdivrs
shlb
mov
daa
add
cli
push
dec
fcomi
mov
dec
lret
leave
sub
jecxz
pop
xor
addr16
mov
mov
cmp
daa
push
lods
cmp
bt
cmc
pushf
xor
cmp
neg
cmc
sub
pusha
jmp
jmp
movsbw
lea
pusha
lea
mov
push
lea
call
push
pusha
pushl
jmp
mov
jmp
pushf
movl
pusha
lea
ja
jmp
lea
out
or
and
xchg
push
mov
test
enter
or
and
sbb
pop
cltd
xor
sub
add
shll
inc
pop
movsl
sbbl
xchg
sub
insl
xchg
pop
loopne
shll
ss
pop
cmp
jae
test
push
idiv
aam
pop
cwtl
dec
hlt
cli
sbb
out
pop
and
cs
add
pop
jb
jns
lahf
fdivr
mov
ds
pushf
test
stc
cmp
jmp
jle
add
pop
lods
add
insl
ds
mov
sub
jge
mov
jo
mov
or
push
test
es
sub
les
mov
int
sahf
rorb
mov
and
lahf
jbe
xchg
decl
iret
popf
pop
inc
xchg
push
push
sbb
sub
add
popa
xchg
mov
push
bound
inc
xor
sbb
mov
push
sbb
cmp
cld
sub
and
and
xor
or
dec
arpl
adcb
std
push
scas
xorb
jge
mov
xor
icebp
pushf
lea
je
setg
xchg
seto
lea
movsbw
movzwl
push
movzbw
lea
call
cmp
push
inc
movb
je
loop
adc
sbb
xorb
loope
aaa
aad
or
mov
pop
lods
jno
pop
lahf
bound
fs
sbb
aas
adc
pushf
stc
jmp
jnp
mov
sbb
fdiv
scas
pusha
lea
jne
adc
setge
sub
mov
rol
ja
sub
cmp
rol
mov
stc
jmp
jne
test
cmp
or
pusha
mov
push
lea
je
clc
pusha
cmp
lea
pushf
pushl
jne
ret
and
movsl
pop
std
add
fdivr
push
jns
sahf
or
pop
out
xchg
setno
std
stc
inc
add
fstpl
rcrl
mov
xchg
mov
out
mov
je
shrl
icebp
mov
cmp
int
ja
jecxz
mov
pop
push
lret
dec
mov
add
add
add
mov
pop
lcall
subl
jae
les
fwait
pop
inc
add
hlt
mov
loope
and
add
and
lret
jge
mov
push
movsb
or
add
xchg
aas
push
and
ja
push
shrb
cmp
ficoml
cli
push
aaa
jp
call
sub
dec
add
jnp
ljmp
add
mov
bnd
pop
or
outsb
push
add
test
fisubrl
in
outsl
pop
shl
ja
jb
sbb
ficomps
dec
pop
push
test
push
xor
sub
or
dec
xor
loop
rcll
addl
inc
dec
xorb
mov
adc
jne
sarb
aad
int
push
insw
sarb
clc
cli
sahf
mov
outsb
cmp
hlt
out
insl
inc
add
movsb
sti
fmuls
outsb
jge
cmpsl
inc
pop
jbe
mov
movsl
xor
pop
mov
lcall
sbb
add
cwtl
test
jecxz
call
imul
or
mov
lcall
insl
in
mov
dec
xchg
pushf
lea
jne
jmp
pusha
push
lea
ja
and
pushf
add
rcl
mov
call
jns
push
rsqrtps
pop
dec
subl
push
fmul
mov
ja
cmpsl
dec
cmc
clc
adc
fwait
sbb
test
popf
shll
fstps
adc
lret
pop
pop
std
insl
jbe
and
mov
add
adc
mov
push
es
cld
sbb
adc
decl
outsb
xchg
int
test
insb
and
pop
adc
ljmp
cmp
movsb
outsl
ret
jno
cmp
mov
lret
adc
mov
das
enter
movsb
aam
das
and
cwtl
loopne
push
cwtl
fnstsw
movsl
fstps
inc
xchg
jle
jp
lods
or
or
scas
ffree
xlat
cmp
push
xor
jo
aad
mov
mov
mov
sbbl
or
xor
dec
test
mov
dec
scas
test
int3
mov
dec
lds
stos
push
pushf
movl
mov
movl
movl
push
movb
push
pushf
lea
jmp
mov
and
dec
mov
xchg
sub
mov
adc
or
les
push
xchg
incl
loope
mov
lret
sbb
pushf
jb
or
mov
loop
pop
xchg
pushl
xor
sbb
jecxz
popa
bound
dec
rorb
jno
or
out
cwtl
leave
add
add
aas
fwait
cmp
dec
mov
aad
mov
call
movb
jmp
call
sbb
cmp
pop
imul
pop
inc
jmp
mov
cmpsb
jge
or
cmpsl
xchg
dec
sub
mov
cld
fldt
push
or
insl
into
xchg
dec
mov
xchg
cli
xor
in
dec
insl
xchg
cmp
mov
push
cs
sbb
push
jbe
mov
pushf
xor
lret
push
dec
mov
jbe
ljmp
pop
jb
sbbl
movsb
cmpb
fs
and
dec
fmul
outsl
data16
xchg
stc
inc
in
push
ds
dec
lahf
rorl
cmp
mov
push
aad
pusha
ret
ljmp
lcall
mov
inc
lahf
push
imul
xor
adc
and
stos
jo
rorb
ds
adc
in
in
das
push
fnstenv
mov
jns
and
fiadds
loope
popl
mov
mov
add
push
cmp
xchg
mov
add
mov
and
xchg
mov
push
inc
push
es
test
shlb
pop
out
fidivrl
sarb
sub
jns
arpl
lret
nop
insb
arpl
test
jne
mov
data16
pop
loop
inc
dec
sbb
sub
in
outsl
iret
push
movsl
lods
and
xchg
xchg
ret
sub
ljmp
mov
clc
and
cmpsl
inc
inc
or
in
rorl
sub
lea
popf
dec
outsb
mov
enter
not
pushf
mov
pushf
movw
pushl
ret
pusha
stc
sub
mov
pusha
jmp
cmp
call
sub
bt
stc
cmp
pushl
popl
pusha
cmp
jmp
cmp
ljmp
lods
or
mov
mov
xor
andl
dec
cwtl
xor
xor
jno
rcll
dec
ret
push
push
push
std
or
sub
mov
rcrb
insl
adc
mov
loope
mov
cld
adc
dec
adcb
rol
cmp
sbb
and
mov
xchg
mov
pushf
lea
call
bt
sub
push
lea
jne
pusha
jmp
lea
ja
not
movzbl
movzbl
pop
mov
pop
bswap
pop
not
pop
call
loop
in
cs
negb
or
mov
call
aam
xchg
mov
xchg
jle
je
xchg
ffreep
repnz
out
clc
das
pop
out
mov
outsl
lret
inc
repz
ljmp
pop
mov
es
adc
das
add
push
js
jmp
test
mov
mov
pop
call
pushf
jmp
movl
pusha
movb
pushf
pusha
lea
jmp
mov
ja
jns
add
fnstenv
jg
outsb
push
fsubs
daa
mov
xor
clc
sub
push
into
das
fldl
cmp
pop
push
in
mov
outsb
fsubs
pop
and
xor
das
popf
xor
jle
push
xchg
das
popa
cwtl
pop
or
mov
mov
sub
cmc
jmp
shr
mov
pushf
cmc
sub
pusha
rep
movzbl
mov
pushl
pushf
push
lea
jmp
rol
clc
std
cmp
bt
pushw
popfw
movb
inc
call
movb
pusha
inc
stc
sets
call
pushf
lea
je
not
pusha
mov
mov
pusha
not
lea
cwtl
lea
pushl
push
call
test
jmp
mov
movsb
lcall
add
and
pop
out
stos
int
js
test
sarb
into
add
cmp
outsl
pop
cmp
outsl
lock
push
jl
mov
sub
adc
or
enter
mov
add
cmp
sbb
add
test
xchg
mov
cs
push
xchg
das
xchg
mov
jns
lock
mov
sbb
shll
in
jnp
ds
mov
mov
aad
out
fistpl
xchg
inc
mov
shl
loope
fidivrs
addb
lea
jne
cmc
pushf
das
push
sub
ror
clc
bts
bt
mov
shl
push
sbb
add
ror
mov
cmc
movb
bt
test
pusha
push
mov
jmp
jae
mov
xor
mov
ja
jg
ficoms
cvtpi2ps
xchg
dec
dec
lods
adc
xchg
scas
push
jecxz
pop
jbe
cmp
lods
scas
out
inc
and
pop
dec
in
imul
fs
add
jno
jmp
push
push
stos
pop
arpl
or
add
call
and
and
push
out
imul
insl
cmc
test
mov
into
pop
mov
rcr
xor
xchg
mov
xchg
in
vcmppd
cmp
xchg
pop
add
mov
jp
fmulp
jno
adc
in
inc
mov
clc
mov
fisubl
lcall
dec
xchg
jmp
iret
sub
jne
int3
fists
inc
rcrb
xor
pushf
mov
shll
outsl
lds
vmovdqa
cmpsb
imul
mov
loope
inc
shl
jp
popf
aaa
gs
xor
and
inc
rolb
gs
pusha
pusha
call
add
jbe
cmp
pushf
push
lea
jb
stc
cmc
call
test
xor
test
pusha
clc
or
pusha
call
call
movl
movb
movl
pusha
movl
pushf
mov
lea
jmp
pop
pop
popa
cmc
fs
inc
shlb
stos
jbe
xchg
sbb
xor
jne
sahf
add
sbb
xchg
cld
sbb
loop
ss
jle
jecxz,pn
mov
sub
imul
lahf
sti
in
xor
icebp
mov
lds
or
es
xchg
cmc
aas
inc
ljmp
fdivs
cmp
mov
test
movl
insb
xchg
and
aas
jae
addr16
mov
sub
imul
ljmp
lds
jne
adc
and
jae
and
sub
fdivrl
lods
jae
xchg
mov
cmp
popf
in
cmp
mov
fbstp
push
pop
sbb
addr16
cwtl
or
xlat
test
ficoml
dec
and
int3
lea
lea
jae
clc
clc
cmp
pusha
movl
lea
ja
pushf
inc
pusha
jmp
out
stos
pop
push
mov
sbbb
pop
push
loop
das
xchg
push
push
outsb
nop
sbb
aam
popf
or
lret
xchg
cmp
sub
das
or
cmp
in
adc
xor
aad
and
or
adc
pop
clc
inc
mov
pop
push
int
popf
push
int
sub
push
pop
movsl
gs
sub
clc
mov
jbe
cwtl
jge
cmp
rol
test
mov
test
mov
inc
in
dec
xchg
push
jge
scas
pop
les
les
pop
xor
pusha
les
mov
in
push
andb
jl
shll
aam
lock
push
dec
aaa
cld
adc
mov
in
les
stos
mov
push
xchg
adc
in
into
call
jb
adc
and
cmp
jae
nopl
je
test
cld
push
xchg
insl
lret
loopne
in
jle
in
or
and
mov
and
xor
int
es
test
imul
fnstenv
out
adc
adc
out
push
push
lret
clc
out
dec
xchg
sti
aam
cmc
add
push
push
lea
jmp
movl
pushf
push
mov
pushf
lea
jmp
mov
push
lods
bt
push
movb
neg
stc
test
mov
cmp
not
cmc
neg
pushl
pusha
inc
cmc
rol
movb
bt
cmp
push
movzbw
pushf
lea
pushf
mov
pushf
jmp
call
call
mov
cli
add
stos
test
stc
js
xchg
adc
inc
jecxz
inc
outsb
and
lds
pop
cli
aad
adc
icebp
cmc
mov
jne
call
add
mov
imul
sub
in
xor
sbb
jge
movsb
test
mov
loopne
outsb
mov
sbb
cmp
xchg
pop
shrb
ja
in
and
mov
ja
add
and
lds
sub
add
mov
lcall
and
mov
sub
mov
lret
or
shrl
lods
rorb
push
pop
andb
jecxz
sub
adc
out
adc
sub
jbe
pop
mov
xchg
xchg
add
ss
pop
mov
ficompl
cmpsb
add
push
insb
push
fidivrl
lret
imul
mov
sub
test
movsb
shrb
out
out
mov
ljmp
sub
cmpsb
in
std
fildll
xorb
lods
sub
jbe
mov
adc
and
dec
popa
push
xchg
push
jmp
cld
sti
in
cwtl
stos
in
xlat
add
roll
adc
cmp
popa
aaa
repz
add
subb
stc
push
int
push
aas
or
sti
mov
subl
je
and
add
push
adc
mov
test
leave
sub
sub
fs
jo
ret
stc
fnstenv
testb
rcl
xor
out
push
shlb
mov
inc
notb
and
adc
stos
fdivl
cmp
aas
mov
outsb
and
xchg
sub
scas
xchg
xchg
daa
xchg
adc
jb
int3
xor
stc
xchg
scas
es
icebp
test
pop
imul
pop
movsl
cmp
and
popf
flds
outsl
sub
dec
xorb
xchg
sub
xchg
sub
push
push
out
xlat
and
jecxz
scas
pop
scas
mov
jno
bound
xchg
xchg
in
pop
sub
cmp
and
call
cmp
xlat
and
xchg
pusha
xor
push
add
test
cltd
push
das
cmpsl
mov
inc
scas
push
sub
mov
addb
insb
xor
inc
push
inc
pop
enter
pop
aaa
cs
pop
xchg
xchg
push
js
out
xlat
in
outsb
inc
aad
dec
mov
sub
scas
aaa
movsl
pusha
cmp
xchg
sub
xor
cs
cmpsb
cmp
imul
shlb
sub
mov
sub
xchg
aad
add
mov
push
aas
fsubr
xlat
and
jle
lods
es
jmp
imul
dec
xchg
arpl
mov
mov
xchg
and
xchg
push
xchg
arpl
arpl
cmpsb
pusha
ss
and
mov
daa
and
mov
movsl
stos
cmp
add
ds
mov
xchg
xor
push
lods
repnz
pop
sub
sub
ljmp
xchg
in
inc
cmp
cmpsb
in
and
scas
sub
leave
int3
push
in
pop
inc
test
fnstenv
cltd
rclb
jecxz
xor
inc
jne
das
mov
stc
cmp
sbb
and
sub
es
divb
xchg
in
pusha
out
and
movsl
xchg
outsb
and
add
xchg
aad
push
in
xchg
mov
aaa
call
xlat
xor
movsl
sub
test
loop
xchg
and
mov
aaa
sub
scas
mov
jecxz
in
xlat
movsl
in
mov
pusha
test
arpl
and
arpl
scas
mov
rcll
test
stos
imul
daa
xchg
xchg
cmp
xor
mov
lds
imul
repnz
jb
and
cmpsb
fs
test
divb
cmp
inc
daa
in
pop
mov
ret
cs
outsl
add
stos
cmpsl
stos
or
push
adc
jmp
stos
les
insl
ljmp
imul
sbb
pop
popa
cwtl
ja
push
insb
shrl
enter
pop
imull
cmp
lods
in
imul
xor
mov
stos
sarb
mov
mov
stos
mov
push
scas
out
shrb
aaa
insl
mov
adc
xchg
ss
sub
out
lcall
pop
insl
cmp
enter
lods
in
aas
and
inc
xchg
xchg
movsb
and
fists
xchg
xor
fs
out
in
lret
outsl
add
sub
idivl
push
sub
movsl
push
out
arpl
es
cmc
mov
daa
outsl
xor
xchg
mov
sub
fsqrt
shrl
jp
mov
adc
cs
mov
outsb
outsl
out
and
lds
lret
jl
jmp
out
lods
idiv
test
sub
lods
mov
loope
nop
aad
xchg
xchg
aad
stos
mov
leave
es
xlat
and
sub
lods
call
xchg
sti
mov
aad
aad
or
xlat
out
cmp
add
out
xor
lret
lods
outsb
mov
out
mov
ds
mov
fnstcw
cltd
and
in
out
and
out
inc
scas
inc
and
insl
leave
out
xchg
cmc
loopne
jmp
fists
inc
scas
loope
stos
inc
mov
cmp
mov
and
cltd
mov
and
fisubl
out
mov
or
push
loopne
nop
jno
sbb
lock
xchg
inc
movsl
xchg
add
aad
and
mov
out
ss
xlat
pusha
test
loopne
xchg
movsl
push
sub
push
jmp
movsl
movsb
or
daa
lods
movsl
lret
es
arpl
das
fists
jae
cmp
push
imul
stos
cltd
cmp
adc
test
outsl
xchg
and
push
xchg
jecxz
inc
lahf
ss
sub
int
and
xchg
mov
dec
iret
cmp
imul
out
outsb
and
jecxz
jno
mov
push
jmp
jne
flds
aas
cmp
push
jne
xor
aad
cld
xchg
lods
test
and
mov
out
out
xchg
rcll
sub
in
push
and
or
das
mov
scas
adcb
es
aaa
cmc
cmpsl
sub
push
mov
mov
jmp
movsb
mov
or
xchg
lods
lods
jecxz
cmp
adcl
loopne
imul
test
loope
cltd
sub
shl
scas
int3
stos
mov
rol
ds
loope
xor
sub
xchg
push
mov
sub
pop
lds
pop
loopne
xlat
pop
jmp
add
sub
insb
jnp
lds
daa
enter
xchg
inc
jmp
jecxz
sub
sar
mov
lods
movsl
imul
cmp
icebp
movsl
stos
push
mov
lret
and
popa
cmp
fdivrs
mov
lds
enter
scas
sub
movsl
jecxz
mov
shll
fisubrs
scas
push
insl
xchg
in
sub
sub
jl
cmp
fsubrl
xor
sti
in
outsb
push
sub
mov
cmpsb
xor
xor
mov
mov
test
xor
push
std
stos
iret
push
cs
std
sub
push
stos
loope
jmp
jmp
xchg
cmpsb
lods
stc
cli
dec
pop
mov
xlat
mov
and
and
sti
jne
mov
popa
and
bound
cmp
movsl
xchg
push
cmpsb
and
les
imul
xchg
das
mov
pop
mov
ret
in
aad
in
mov
call
and
ljmp
lds
xchg
mov
jmp
movsl
aam
test
xchg
inc
mov
fs
fbld
mov
and
int
add
cwtl
rcl
out
cmp
in
iret
call
in
in
outsl
cs
movsl
push
and
mov
push
xor
sbb
cld
fstp
fsubs
gs
fstpl
daa
sbb
adc
movsl
cs
and
jne
pop
mov
mov
sarb
jne
inc
dec
cmp
jne
inc
lret
jne
out
push
mov
fmul
adc
xchg
push
adcb
xchg
out
push
out
mov
dec
fs
push
lods
test
cmpsb
pop
sbb
es
call
lret
outsl
ret
pop
ljmp
bound
dec
xlat
dec
popa
pop
and
scas
loop
xor
arpl
cs
cmc
push
mov
movsb
scas
mov
loop
rcll
outsl
lahf
inc
shr
mulb
jno
mov
test
icebp
cmpsl
in
sbb
or
mov
xchg
adc
mov
lds
movsl
lods
pop
hlt
jb
addr16
ljmp
mov
and
xchg
jg
pop
stos
ret
sub
push
arpl
cmp
mov
out
push
push
pop
aad
xchg
scas
push
mov
and
push
push
xchg
or
dec
test
sub
inc
xchg
and
insl
xchg
imul
xchg
sub
sub
in
push
xchg
lods
dec
push
sub
das
test
aad
and
call
test
sar
xchg
xchg
or
cltd
rclb
aam
xchg
dec
cmp
push
lret
push
mov
aas
or
shrl
mov
mov
push
int
mov
loope
pop
push
and
js
pop
xchg
dec
adc
jmp
ret
arpl
pop
cmp
mov
cmpsb
dec
xchg
xlat
imul
in
stos
push
aad
sbb
test
push
loope
xchg
loope
sub
mov
into
and
push
loope
insb
push
shr
cmp
mov
cmp
in
cmp
ljmp
and
mov
cmp
outsl
sub
mov
in
daa
insb
andb
imul
lods
mov
cmpsb
push
cmpsl
cmp
mov
xchg
mov
test
dec
push
sub
daa
test
jne
scas
popa
sub
inc
jecxz
xor
mov
mov
mov
mov
es
fsubrs
and
les
xchg
stc
imul
outsl
dec
pop
scas
lahf
mov
lea
dec
arpl
outsb
aad
and
mov
mov
out
aas
jl
and
in
xchg
loopne
out
and
add
adc
test
xlat
stc
movsb
stos
sub
sbb
inc
arpl
add
xchg
push
push
aad
push
pop
aaa
mov
adc
xor
mov
xchg
loopne
push
xchg
xchg
imul
iret
std
xlat
call
in
aad
test
fnstenv
dec
aam
push
int
push
daa
sub
shrl
outsb
ficomps
mov
lock
or
inc
pop
sbb
stos
cmpsl
fisubrl
arpl
leave
and
xor
mov
jmp
add
imul
sahf
mov
popa
stos
movsl
or
ljmp
pusha
dec
loop
leave
xchg
andl
cmp
inc
pop
test
fcoms
es
and
in
xchg
popa
push
sub
pop
pop
es
sub
lods
imul
push
mov
sub
ss
pusha
mov
xchg
sub
dec
add
movsl
jecxz
nop
das
xchg
das
pop
mov
xchg
and
xchg
movsl
sub
xchg
test
sub
lods
xlat
insl
test
and
ljmp
imul
mov
pop
add
cmp
stos
in
in
mov
pop
sub
inc
or
pop
jge
xchg
insl
or
arpl
loop
add
mov
loope
mov
push
arpl
pop
lret
mov
sub
sarb
xchg
and
inc
push
ret
and
dec
push
leave
insl
or
push
push
loope
add
push
dec
push
xchg
std
push
mov
decb
push
xchg
call
jg
push
iret
lock
in
incb
mov
in
movsb
dec
adc
je
mov
addr16
in
and
jmp
sub
adc
leave
stc
mov
test
ficoms
mov
std
mov
pop
xchg
loop
fldcw
pushf
xchg
mov
mov
xchg
lock
xchg
cmp
jmp
xchg
or
sub
sub
popf
inc
jne
sbb
sub
scas
std
jmp
movsb
mov
leave
movsb
mov
sbb
je
lret
ret
inc
int3
dec
mov
out
push
sub
lds
stos
notl
insl
cltd
and
ljmp
leave
insb
iret
pop
inc
push
std
jmp
movsb
mov
bound
adc
or
stc
loopne
js
jle
xchg
std
test
lods
imulb
sub
push
and
es
xor
push
pop
adc
add
pop
or
iret
xchg
nop
and
cmpsl
push
shrl
sub
adc
iret
and
in
lcall
and
in
fs
xchg
popa
xor
lcall
jge
shll
frstor
sahf
xor
xor
sti
imul
lds
outsl
push
mov
sub
outsb
cmp
add
imul
xchg
add
pusha
inc
aad
and
ljmp
mov
movsl
jmp
push
lods
dec
sub
cmp
enter
addr16
jno
sub
movsb
mov
cmp
enter
and
test
in
fdivs
es
cmp
pop
and
popa
daa
loopne
out
popa
cmpsb
scas
movsl
and
cmp
movsb
mov
jmp
and
sahf
sub
pusha
mov
imul
test
scas
mov
and
movsl
jecxz
push
mov
jmp
and
loop
in
xchg
inc
xchg
xchg
ds
test
lods
lods
xlat
scas
test
push
cmp
movsb
push
xchg
push
enter
xlat
push
test
sub
push
mov
insl
test
and
pusha
and
push
fsubl
decl
push
movsl
test
stos
lods
pop
je
mov
movsl
jmp
cltd
pop
and
push
mov
lret
les
ret
inc
pop
and
xchg
ret
clc
cmp
imull
ljmp
out
lcall
mov
and
cmp
sbb
mov
insl
push
mov
push
data16
inc
push
leave
jmp
dec
push
xchg
jge
mov
leave
inc
loope
shll
push
mov
xchg
xchg
xchg
xor
lds
pop
xchg
xlat
mov
pop
mov
dec
call
fdivrs
push
xlat
ret
cmp
ss
movsl
sub
leave
gs
and
dec
shlb
push
imul
lods
pop
xor
shlb
arpl
mov
push
cmp
movsl
out
aad
sub
dec
mov
xor
and
xchg
mov
ss
sub
mov
mov
mov
sbbb
ss
popa
std
xchg
ds
push
xchg
dec
cmpsl
push
rclb
call
mov
cmp
cmpsb
pop
clc
push
sbb
ficoms
jecxz
adcb
clc
stc
jmp
lret
loopne
and
mov
lods
or
lods
in
lock
stos
mov
stos
jb
daa
leave
arpl
sub
movsl
fwait
imul
lock
jmp
push
xlat
push
mov
movsb
out
stos
lods
mov
aaa
scas
pop
and
movsl
in
imul
bound
xchg
and
xchg
test
and
mov
mov
insl
test
mov
fsubs
xchg
xor
movsb
es
lds
aaa
movsl
sub
lods
fst
jmp
movsl
lods
test
mov
shrl
adc
xor
lods
movsl
jmp
xchg
insl
es
sub
shrl
sub
shrl
mov
and
and
xchg
mov
or
xchg
xchg
cmp
mov
cmc
scas
cmp
pop
test
fcoms
cmp
lret
daa
xor
fs
cmpsb
lods
hlt
and
repz
push
jmp
loope
insl
cmpl
shll
aam
in
xor
push
sub
jne
test
xor
adc
and
jne
test
jne
xchg
mov
stos
add
xchg
adc
xchg
jne
push
mov
push
scas
and
insb
arpl
mov
jne
push
and
and
jne
mov
push
inc
push
xlat
stos
lods
hlt
popf
xchg
mov
std
outsb
and
push
sub
out
push
outsb
xchg
sub
daa
and
sub
shlb
loope
mov
push
push
mov
push
les
loop
pop
scas
pop
push
cmp
cmpsl
sti
push
mov
and
cs
xchg
test
sub
pop
addr16
lret
push
dec
push
insb
arpl
and
and
push
loop
and
push
insb
pop
stos
loop
outsl
push
lods
out
out
xor
xchg
mov
in
mov
scas
mov
call
imul
fisubl
imul
mov
enter
enter
popa
xor
in
cld
xor
cmpsb
jmp
movsl
sub
jno
pop
jb
cmpsb
sub
movsl
insb
outsl
ret
pop
lods
daa
iret
out
push
repnz
lret
mov
push
adc
cmpsb
mov
cwtl
in
push
bound
mov
xchg
cmpsb
rcrl
fs
mov
mov
out
sub
bound
lods
movsl
das
adc
cmpsb
push
popa
ret
mov
pop
xchg
add
outsb
insl
movsl
pop
jecxz
push
jmp
pop
and
cmp
pop
imul
xor
lods
push
mov
cltd
outsb
test
push
sub
loop
cmc
in
push
sbb
jge
mov
cmp
or
xchg
out
dec
stos
inc
sbb
push
leavew
cltd
inc
fdivp
push
lock
leave
loop
push
and
xchg
rorl
mov
xchg
fs
xchg
ds
ret
in
lock
int
sbb
fnstenv
popa
out
pop
aaa
test
adcb
lds
pop
aaa
out
test
and
and
imul
pop
movsl
enter
or
imul
inc
add
pusha
jmp
loop
push
outsl
dec
call
movsl
push
sbb
cwtl
sub
inc
pop
call
insb
shrb
out
xor
imul
mov
scas
xchg
fisubs
lock
and
mov
nop
and
cmpsb
sub
push
loop
aam
addr16
sbb
insb
jmp
pop
jno
cmp
mov
adc
pop
scas
fnsetpm(287
and
cmp
popa
and
and
std
sub
cmp
and
or
xchg
inc
cmp
ja
sub
push
xor
outsl
ret
in
movsb
mov
sub
call
sub
push
out
xor
loop
and
mov
loopne
mov
fstl
sub
sub
push
scas
sub
insb
sub
loopne
lds
aad
gs
div
call
enter
and
aas
std
xchg
and
mov
mov
outsl
sbb
fcoms
cmpsl
sbb
xchg
mov
subl
pop
insl
xchg
lods
dec
xchg
inc
iret
cmp
out
xchg
cmp
xchg
and
out
loope
push
dec
push
push
scas
loop
insb
pop
jne
loopne
xor
mov
push
push
divb
call
stos
jecxz
xor
and
iret
movsl
push
dec
es
and
mov
or
inc
cmp
push
lods
pusha
popf
sub
daa
popf
xchg
loope
int3
scas
cmp
mov
jne
mov
pop
int3
mov
in
and
xor
cmp
loop
in
sub
and
and
stos
aaa
ljmp
mov
push
sub
bound
mov
ds
aaa
outsl
inc
insl
dec
push
pop
or
cmp
aaa
popa
in
and
mov
push
jmp
test
sub
loopne
hlt
pop
aas
in
cwtl
xor
bound
push
shll
and
aad
cmp
mov
cmpsl
jmp
movsl
test
jmp
sub
daa
sub
in
ds
outsb
jmp
inc
loope
in
insl
popa
daa
mov
and
fs
cmp
push
test
push
es
movsl
push
stos
ds
aaa
in
jmp
ss
xlat
mov
push
aad
aaa
xchg
jmp
ss
imul
jmp
ss
and
jmp
ss
jmp
aaa
sub
insb
insl
mov
mov
aaa
mov
xchg
mov
pop
ret
stos
into
aam
mov
aaa
xchg
ljmp
push
stos
outsl
and
mov
sub
ds
aaa
pusha
jmp
ss
rorb
mov
imul
mov
inc
push
cmp
stc
add
movsb
mov
mov
stos
das
pusha
lds
xchg
mov
sub
push
push
mov
sub
adc
call
jno
and
sub
test
cmp
xchg
xchg
push
jmp
cmp
aad
jbe
and
mov
enter
push
xlat
movsb
aad
pop
cmc
sub
sub
inc
das
push
in
dec
mov
jecxz
push
call
push
leave
xchg
xor
jecxz
xor
cs
ljmp
mov
xor
ljmp
jne
stos
xchg
loope
es
sub
cmc
lods
shl
daa
arpl
mov
mov
daa
mov
and
xchg
in
mov
loopnew
cmp
loopne
mov
stos
pop
and
mov
imull
mov
xchg
out
out
jne
movsl
mov
mov
outsb
jb
imul
sub
test
mov
sub
scas
ficoml
or
and
xor
mov
and
mov
scas
mov
xchg
push
sub
aad
insl
push
jmp
insb
sti
sub
scas
test
cli
cmp
or
and
push
bswap
sub
sub
sub
xor
cmp
outsl
scas
call
daa
test
scas
cltd
sbb
push
xor
cmp
push
mov
inc
aaa
popa
jb
sub
call
xchg
adc
sub
and
das
lret
push
mov
mov
test
in
mov
xor
xchg
imul
es
mov
arpl
test
xchg
sbb
jmp
movsl
pushf
push
arpl
xchg
imul
sahf
sub
inc
icebp
cltd
mov
sub
push
jmp
jmp
push
lcall
sub
cmp
cmp
cs
test
out
sub
and
shrl
xchg
sub
xor
jnp
fs
cmp
pop
push
test
in
mov
sub
popf
mov
push
lods
fsubrs
sub
push
subl
icebp
aad
lcall
or
mov
push
es
movsl
popa
icebp
imul
xchg
xchg
push
mov
sub
jne
scas
xchg
push
xchg
inc
push
xchg
mov
test
sub
jno
push
and
lods
push
test
jmp
pop
jns
mov
push
xor
insb
mov
sub
call
lahf
aad
sub
jmp
popa
out
cmp
out
insb
movsl
and
out
cmp
push
aas
ret
in
sub
out
insb
arpl
push
in
aad
push
mov
cmpsl
xchg
mov
movsl
push
aaa
shr
xchg
push
mov
xor
not
inc
outsb
imul
mov
lret
push
cmpsl
mov
sub
mov
and
mov
imul
sub
outsl
pop
loopne
stos
ljmp
jmp
int3
cs
bound
add
mov
stc
outsl
lret
push
xchg
cs
scas
push
shrb
dec
sbb
push
dec
inc
das
add
xchg
inc
push
repz
fldt
and
in
pop
sub
xchg
and
lea
sub
inc
popa
in
jo
outsl
addr16
sub
insl
loopne
pop
and
push
cli
mov
insb
in
push
popa
jo
stos
scas
repz
pop
push
movsl
xor
movsb
in
popa
insl
arpl
mov
pop
cmp
ret
call
sub
in
lret
cs
xlat
mov
push
fbld
in
push
cmpsb
outsb
loope
daa
mov
jecxz
sti
cmp
aad
ljmp
mov
cmpsb
imul
cmpsb
sub
sahf
stc
call
lahf
movsl
mov
fsubs
cmp
jmp
pop
jecxz
mov
das
adc
ljmp
movsl
mov
cmpsb
scas
mov
es
movsl
xlat
cmp
and
sub
xchg
in
xchg
ss
xlat
push
aaa
in
jmp
ss
mov
cmc
jmp
ss
in
test
and
loope
mov
shlb
ds
sub
loopne
and
bound
es
aaa
test
es
movsl
insl
test
and
and
movsl
xor
test
jmp
outsl
mov
ss
push
mov
mov
ds
aaa
cs
ss
loopne
and
mov
movsl
jmp
out
mov
sub
daa
in
movsl
sub
ds
aaa
loopne
and
mov
cmp
movsl
jmp
ss
xlat
insb
test
and
pusha
and
aad
in
mov
jmp
ss
xlat
out
test
loope
mov
push
jne
pop
xlat
call
aaa
push
imul
test
loop
and
lods
xchg
add
movsl
call
jmp
ss
xlat
scas
test
mov
in
xchg
push
xor
jmp
movsb
loope
es
pop
xor
ja
int3
push
outsb
fsts
fs
loope
push
fsub
loope
adc
sti
push
and
push
xchg
je,pn
and
loope
test
cmc
push
mov
cmp
inc
lods
test
pop
rolb
sub
adcl
cmc
push
inc
inc
push
mulb
inc
push
push
or
loope
inc
test
fs
push
std
sbb
loope
stc
mulb
das
sti
shll
push
xchg
sar
loopne
lock
out
cmp
xor
cltd
push
stc
jno
push
mov
cltd
push
stc
repz
push
test
cltd
push
stc
je
push
jmp
sahf
outsb
loopne
xor
loopne
out
out
in
lret
push
cli
icebp
ljmp
mov
lods
sub
in
lcall
ss
dec
push
in
lods
jmp
and
mov
mov
mov
pop
dec
mov
out
xchg
jo
popa
shll
lock
xchg
pop
mov
xlat
bound
fwait
call
in
push
lret
lods
ds
nop
stc
adc
mov
loop
test
mov
xchg
sub
loope
insl
sbb
fsubs
mov
dec
ficoms
mov
repnz
scas
loop
xchg
sub
cmp
and
sub
sub
rclb
loope
mov
das
jno
sub
movsl
mov
push
movsl
je
mov
sub
jmp
dec
lret
outsl
mov
jno,pn
xchg
xchg
mov
imul
dec
xchg
stos
xchg
sub
aas
jecxz
cmp
jno
push
cs
repz
pop
sub
out
loope
icebp
jecxz
les
push
jmp
push
xchg
sub
mov
addl
movsl
cltd
or
jmp
ss
xlat
adc
icebp
xchg
mov
jmp
pop
mov
mov
cmp
scas
push
cmpsl
ljmp
cmp
dec
push
inc
mov
push
cs
pusha
insb
or
mov
jecxz
pop
popa
lods
push
mov
imul
sub
andb
addl
push
mov
and
andb
scas
loop
jg
imull
jg
loop
std
lret
and
loope
and
movsl
movsb
notl
daa
dec
xchg
xchg
enter
or
mov
cmpsb
jno
fcmovb
push
and
pop
std
and
xor
dec
mov
imul
sbb
cmpsl
dec
ficoml
jbe
cmc
dec
or
jbe
inc
bound
outsl
and
cmp
push
sub
adc
pop
popa
ljmp
mov
adc
mov
xor
mov
mov
insb
adc
xchg
jnp
mov
bound
out
lret
daa
xchg
int
ds
or
xor
cwtl
cmp
je
pop
out
aaa
movsl
jmp
ss
xlat
lahf
mov
test
test
mov
mov
das
inc
mov
dec
sti
enter
gs
cmpsb
push
mov
jmp
out
out
xor
cli
dec
call
jnp
sbb
add
in
fcmovu
cmp
mov
fmull
mov
pushf
out
jno
adc
sub
and
ret
loop
pop
mov
and
xchg
ds
test
and
sahf
movsb
xlat
dec
ret
xchg
hlt
push
sarb
mov
out
jne
test
addr16
mov
scas
lds
push
scas
mov
data16
xor
mov
pop
sub
jo
push
call
and
jecxz
scas
in
negb
inc
jle
xchg
lcall
xor
popa
xchg
xchg
leave
and
xor
jmp
add
lret
mov
outsb
stos
cmp
inc
call
lock
and
in
mov
mov
fcompl
push
jb
jmp
js
jne
xor
jmp
pusha
out
mov
in
ss
icebp
xchg
jno
imul
xchg
and
popa
sbb
mov
adc
or
add
adc
pop
inc
and
jbe
daa
mov
loop
imull
and
lcall
sub
out
ja
xlat
mov
imul
sbb
fmull
jmp
leave
es
repnz
add
sub
dec
in
xchg
ljmp
push
stc
outsb
xchg
out
xor
jnp
leave
inc
add
mov
inc
cs
and
jg
sub
stos
sub
cmp
pop
sub
imul
cmpsb
inc
xchg
sti
mov
xor
sub
mov
call
mov
cmpsb
mov
xchg
jmp
jmp
fcomps
shl
pop
mov
lret
mov
aaa
ljmp
fiaddl
cmc
pop
test
in
mov
jmp
movsl
pop
aad
les
add
pop
mov
sarl
xor
pop
or
ljmp
mov
and
popa
test
hlt
pop
push
mov
jl
inc
lock
cmp
push
xchg
push
shrb
jecxz
cmp
jmp
rclb
adc
in
push
sub
popf
mov
push
shrb
and
fldcw
outsb
sub
cmpsb
test
cmp
stos
sbb
sub
stos
jmp
insl
call
mov
lock
into
por
inc
pop
test
and
dec
add
mov
sbb
adc
stc
push
cs
and
mov
mov
push
mov
mov
movsb
cmpsl
es
sahf
movsl
mov
xchg
mov
addr16
jb
sub
outsl
nop
popa
in
sahf
inc
in
mov
scas
add
mov
inc
enter
imul
movsb
fldenv
loope
loop
addr16
sbb
imul
in
les
icebp
mov
push
test
in
mov
outsl
out
fs
fadd
pusha
cld
pop
andb
jmp
imul
xor
push
and
nop
mov
xchg
xchg
test
sub
mov
daa
lret
sbb
ds
or
out
xor
inc
xchg
jb
sub
jmp
imul
cmp
pop
in
jo
sub
push
aaa
push
push
xchg
mov
xchg
shr
xchg
fwait
insl
out
and
and
mov
ljmp
test
aaa
test
push
aas
and
ret
lods
scas
push
adc
xchg
sub
fcmovbe
lods
pop
sub
fxam
loope
stos
cmp
jl
add
mov
cmp
push
in
stos
std
ret
imul
pusha
subb
cmp
xchg
movsl
xchg
sub
jmp
jecxz
pushf
mov
xor
mov
iret
movsl
jmp
ss
shrb
out
outsl
adcb
push
xlat
leave
jmp
enter
loope
sti
imul
stos
mov
out
mov
fs
aad
fbld
xor
sti
sbb
movsb
push
enter
jmp
or
push
lods
xchg
mov
loope
cmpsl
insl
out
or
insb
sub
cs
dec
jmp
test
mov
loope
outsl
in
mov
icebp
pusha
xchg
inc
inc
out
pop
ss
arpl
imul
mov
ljmp
loopne
or
mov
imul
iret
test
sub
test
push
pop
popa
imul
cld
lds
imul
jnp
sub
insl
push
es
push
push
test
sub
xor
fcmovu
mov
mov
jae
aad
stos
call
insb
push
call
push
sti
bound
pusha
jg
push
mulb
pop
call
ficoms
test
pop
loope
mov
sub
lds
sub
popa
dec
bound
push
call
pusha
daa
xor
mov
das
sbb
adc
imul
rclb
lods
sub
mov
xchg
jmp
push
outsb
lods
cmp
or
xchg
in
pusha
mov
ss
test
sub
sub
sbb
ja
push
and
ja
sub
int3
push
fldenv
cmp
add
in
mov
pop
pop
xchg
imul
daa
gs
in
fdivrl
loopne
inc
sub
aad
push
in
jne
aad
mov
lods
stos
in
int3
cmc
xchg
shlb
jmp
movsl
push
jmp
ds
aaa
pop
jmp
jle
daa
loop
bound
push
jmp
pop
fldenv
mov
popf
rcll
and
imul
sahf
mov
jecxz
mov
loopne
and
sub
sub
adc
scas
sub
and
mov
jo
ret
mov
lret
pusha
push
lret
ret
popa
sti
aad
cmpsl
test
jecxz
xchg
jmp
cmpsl
push
ret
cltd
icebp
xchg
mov
xor
ss
mov
mov
in
jmp
xchg
jmp
mulb
pop
mov
xchg
cmc
loopne
dec
pop
shrl
imul
lds
pusha
mov
pushf
push
cltd
xchg
lods
loope
test
shrl
xchg
mov
test
out
add
mov
insb
mov
cmp
dec
rclb
mov
mov
xlat
das
inc
adc
out
ljmp
js
add
sub
pop
xchg
shl
insl
scas
mov
cmp
es
pop
mov
mov
insl
scas
in
adc
imul
or
ds
jmp
sub
popa
sub
sub
outsb
mov
iret
stos
push
fdivrs
das
fbld
ljmp
idivb
cltd
test
jp
xchg
int
cmp
add
sub
xchg
xchg
loope
pop
mov
mov
and
les
movsb
leave
pusha
loopne
aad
and
call
add
jecxz
push
das
xchg
push
jnp
add
xchg
push
adc
sub
jo
and
sub
jno
sub
xchg
stos
jnp
lods
add
push
add
pop
imul
insb
sbb
mov
loopne
daa
jne
scas
jl,pn
xchg
cmp
pop
xchg
pop
jnp
imul
mov
stos
imul
jnp
add
push
sub
call
xchg
adc
mov
aas
loopne
or
inc
and
lods
and
test
xchg
xchg
push
sbb
ljmp
mov
sbb
imul
sbb
fisubs
aaa
adc
rcll
movsl
std
jle
je
xchg
stos
outsl
and
sbb
sub
sub
aas
and
add
and
lret
insl
sbb
lock
notl
lods
dec
arpl
lods
popa
add
cld
stos
imul
push
adc
lods
jg
stc
loop
lcall
xchg
mov
adc
outsb
loope
outsb
push
stos
ljmp
sti
push
cwtl
push
adc
sub
rorl
sub
leave
cltd
lods
in
sub
out
mov
mov
jmp
mov
xchg
inc
sub
push
loope
daa
lods
leave
sub
push
das
fldenv
in
sub
inc
lods
mov
mov
xchg
movsb
mov
aad
sbb
es
cmp
jmp
and
cmp
mov
loope
add
sbb
test
scas
out
or
inc
mov
mov
outsb
lret
sub
insb
rcrb
push
cmpsl
insl
movsl
das
ss
push
pop
pop
in
mov
pop
add
div
call
shll
lock
ljmp
jg
pop
imul
imul
sub
notb
mov
popa
push
xor
and
mov
add
sbb
push
fildl
pop
arpl
and
aad
sub
lods
test
and
cwtl
xchg
xchg
lret
lret
in
xor
mov
imulb
in
pop
aad
mov
fxam
loope
in
test
and
insb
int3
and
inc
xchg
add
ljmp
jbe
call
popa
imul
loope
mov
scas
std
adc
and
inc
or
xor
icebp
loope
xor
push
fsts
jmp
cmp
push
loope
sahf
in
xchg
loope
push
out
call
stos
popf
stc
out
out
test
loope
popf
push
aad
xchg
pop
outsb
cmp
add
sub
fs
shrb
outsb
push
cmc
xor
lods
xchg
mov
outsl
xchg
out
cmp
pusha
loop
int
in
mov
scas
sub
and
cmpb
fcmovbe
lret
loop
loop
dec
lds
aam
test
sbb
fisubl
sbb
stc
adc
add
and
call
push
aas
and
inc
shlb
add
sub
imul
pusha
movsb
xlat
fnstsw
sub
dec
loopne,pt
imul
mov
in
sbb
outsb
fstpl
and
mov
daa
lods
mov
arpl
lods
outsb
cmpsl
outsb
das
or
mov
in
loop
shll
shrb
lods
outsl
outsb
dec
push
cs
sub
imul
lcall
out
out
xor
push
arpl
outsb
inc
addr16
xchg
stc
outsl
leave
and
xor
dec
sub
sbb
sti
loop
jne
sub
jne
das
xorb
jmp
mov
vminsd
insl
cmp
ret
cmp
es
push
ss
out
ds
insl
movsb
mov
je
outsb
notb
mov
popa
stos
test
roll
pop
adc
shl
mov
dec
arpl
lods
movsl
push
testl
push
test
mov
shrl
arpl
lods
out
sub
nop
jmp
nop
loopne
imul
outsb
ret
fs
or
push
ret
sub
hlt
mulb
outsb
rep
xchg
push
out
cmp
xchg
testl
stos
sub
cmpsb
pop
fs
lods
dec
xor
subl
rcll
sub
loope
arpl
cmp
push
and
inc
in
dec
insl
push
mov
aad
das
scas
or
sbb
andb
add
push
xor
mov
test
mov
cmpsb
add
push
mov
loop
mov
into
popf
lods
orl
mov
push
fisubrs
shlb
xor
fidivs
xor
add
ja
scas
loope
pusha
xchg
push
lods
xchg
out
adcb
bound
push
push
jo
cs
call
out
xor
mov
or
popf
ds
mov
adc
xchg
push
xchg
jp
in
icebp
sub
ret
push
inc
xchg
jmp
outsb
xchg
negb
insl
mov
or
dec
and
add
sub
popf
pop
push
mov
test
inc
int3
xchg
imul
push
xor
mov
sub
sub
test
pop
push
and
das
in
bound
sahf
cmp
sti
ss
out
imul
out
and
or
sahf
lret
and
out
outsl
sar
imul
sahf
mulb
push
push
in
or
xchg
lret
arpl
imulb
lcall
scas
sub
xor
lods
arpl
insl
or
add
or
cs
xor
scas
xchg
movsb
mov
fnstenv
adc
jne
lods
push
mov
in
arpl
outsb
or
into
push
inc
xchg
jmp
and
sahf
xchg
xchg
jmp
dec
out
scas
mov
mov
push
scas
sahf
xchg
inc
sub
insl
stos
xchg
cmpsb
nop
daa
push
movsl
adc
aam
test
inc
pop
mov
pop
test
lahf
jmp
ss
xlat
inc
aas
and
pop
sub
mov
in
cld
mov
jge
sbb
imul
pop
daa
jp
out
pusha
and
dec
loope
cmpsl
pusha
sub
ds
or
sub
push
or
sub
call
push
imul
sub
or
outsl
sub
jmp
xor
xchg
fs
pop
pop
std
xlat
sbb
sahf
imul
in
sahf
and
popf
test
push
es
in
ja,pn
jmp
dec
push
jmp
imul
loopne
loopne
jecxz
pop
cmpsl
and
lods
aad
push
insl
push
daa
push
dec
out
shll
ljmp
and
ds
xchg
out
sub
loopne
pop
fs
leave
das
into
aas
mov
in
mov
repz
xlat
xor
rcrl
fs
mov
inc
test
inc
insb
out
fwait
mov
out
xchg
leave
xchg
push
mov
outsb
mov
and
outsl
in
outsl
in
leave
dec
inc
sub
shll
sub
das
popa
leave
scas
std
and
sub
push
and
daa
rol
loopne
mov
push
push
stos
sub
outsb
insl
movsb
add
lods
subl
rcrl
sub
xor
test
es
mov
cmpsb
in
sub
mov
loopne
mov
mov
push
test
pop
push
inc
ret
movsl
sub
aam
mov
aam
push
adc
jecxz
sub
xchg
pusha
outsl
sahf
push
call
push
out
mov
loope
mov
pop
popa
out
and
shrb
jne
shrl
pop
pusha
loop
sub
loop
cmpsb
and
movsl
test
ss
cmpsb
and
cmpsb
jmp
insl
xchg
mov
xor
test
xchg
or
fildll
dec
adc
push
sahf
arpl
ljmp
imul
movsl
mov
mov
and
sub
rclb
cmpsb
pop
es
and
sbb
mov
mov
movsl
sbb
das
xchg
and
in
imul
test
outsb
pop
xlat
xor
mov
xchg
ljmp
add
push
xchg
sub
and
cmp
ljmp
loopne
pop
xchg
adc
sub
mov
out
pop
mov
xor
add
mov
cmp
mov
lods
out
out
ljmp
test
mov
push
pop
xchg
mov
sahf
xor
in
and
mov
mov
xor
add
imul
scas
xor
add
inc
or
in
loop
cmp
ljmp
or
ds
aad
xchg
jle
insl
adc
xor
scas
xchg
push
adc
sub
ss
add
shr
popa
xchg
ret
pop
xchg
push
lods
dec
scas
iret
and
xchg
js
mov
push
push
stos
jle
mov
mov
mov
lret
sub
jbe
pusha
mov
lods
ss
dec
imul
or
test
add
ret
and
lods
dec
mov
movsl
lods
mov
push
pop
iret
mov
insb
push
cmpsb
popf
lods
sub
cmpsb
xchg
jmp
mov
jecxz
cli
imulb
in
sbb
nop
push
test
aad
push
scas
xchg
jno
mov
sti
enter
sub
add
das
cmpsl
out
mov
int3
scas
push
jbe
imul
cs
adc
fnstenv
mov
xchg
adc
or
pmaxub
insl
xchg
ret
les
jbe
cs
scas
cmp
cwtl
stos
das
cs
xor
pop
xchg
out
dec
and
add
cltd
daa
test
xlat
int3
outsl
insb
das
lret
scas
jle
inc
jbe
pop
insl
xchg
outsl
mov
jo
push
lahf
or
ret
mov
in
mov
jbe
and
and
scas
pop
sub
push
stc
push
sub
sub
and
testl
cs
daa
les
test
and
cmpsl
test
xlat
xor
and
sub
loope
and
aaa
fisubs
mov
mov
jbe
sub
repz
ds
popa
xchg
sbb
les
out
sub
sub
sbb
pop
jmp
ss
xlat
adc
rclb
sbb
fistpl
mov
outsb
subb
imulb
ljmp
sahf
clc
mov
aad
lods
adc
push
sub
loope
push
dec
repz
mov
lods
les
pop
jmp
popa
sub
in
jecxz
bound
push
lret
iret
push
stc
jecxz
jmp
in
outsl
jecxz
and
out
cs
pusha
and
out
jecxz
outsl
movsb
insb
sar
cmpsl
push
aas
popa
lret
popa
imul
call
lahf
push
dec
pop
push
mov
shrl
bound
outsl
pop
xchg
dec
fs
imul
imul
push
dec
imul
sbb
in
iret
cltd
mov
arpl
das
sbb
loope
outsl
push
push
and
sub
jb
push
out
out
jmp
push
inc
insl
imul
stos
test
mov
ljmp
jae
push
sub
and
leave
or
mov
xor
and
sbb
or
out
xchg
bound
inc
bound
pop
mov
dec
push
icebp
ljmp
jno
in
in
mov
mov
shlb
iret
pop
dec
call
sbb
shrl
adc
loop
in
addl
xchg
mov
std
movsl
ljmp
bound
daa
loopne
mov
aad
sub
arpl
fildll
xchg
loop
jmp
frstor
fstps
xchg
pop
inc
push
push
test
mov
xor
pop
push
loope
arpl
push
movsl
aad
jp
outsl
xor
mov
imul
push
nop
xor
fstpl
daa
sub
mov
jmp
test
insl
inc
aad
insl
icebp
imul
xchg
sub
insw
pop
xchg
inc
popa
stos
push
pop
dec
call
push
in
mov
sbb
push
es
lods
push
and
push
jmp
xchg
scas
outsl
arpl
xchg
sub
mov
or
sub
scas
mov
and
popa
sub
ljmp
sub
mov
push
and
mov
fwait
in
mov
jmp
xchg
insb
mov
clc
stos
sub
mov
xor
push
jmp
jmp
sub
ljmp
ss
popf
lods
jmp
xor
sbb
mov
test
ficoms
insb
mov
and
lods
cmp
push
lods
pop
jecxz
add
inc
and
mov
mov
cmp
pusha
xchg
mov
ljmp
and
xlat
outsl
ss
fisubl
sub
xchg
xor
xchg
ljmp
aad
loopne
xlat
cmp
sub
sbb
jecxz
test
xchg
cmpsb
fcoms
faddp
and
insb
xor
mov
lods
mov
sub
and
insl
xor
notb
xchg
loope
popa
mov
movsl
movsb
inc
cmp
sub
mov
popa
bound
and
lods
insb
push
shrl
loopne
cltd
xchg
mov
cmp
insl
es
jmp
cs
out
cmp
lods
imul
pop
jmp
push
aad
cmp
xlat
xlat
lds
mov
adc
in
ljmp
ds
mov
and
push
push
dec
add
jmp
std
inc
xor
pushf
xlat
jmp
test
and
xchg
es
or
jns
testb
fnstsw
sub
jns
and
or
xchg
fidivl
lret
gs
clc
lea
mov
or
fnstcw
imul
movsl
lret
hlt
jne
ficoml
mov
int
cld
mov
test
mov
mov
icebp
mov
stos
sub
jns
push
push
fs
scas
enter
imul
xchg
sub
sub
mov
dec
mov
lret
dec
sub
imul
call
fs
in
push
jns
fucomi
out
lret
jmp
lcall
push
and
std
sbb
or
movsb
jecxz
repz
mov
jmp
fcompl
aam
sub
lahf
or
push
cmpsl
sahf
jne
jmp
call
loope
adc
adc
stc
adc
mov
dec
pop
dec
out
rclb
xchg
cmp
fldt
mov
ljmp
imul
and
sub
fdivrs
nop
push
push
mov
sub
fnstcw
push
inc
or
imul
sub
inc
das
stos
push
ja
test
adc
jmp
ss
int3
push
out
cmp
mov
sbb
fsubl
stc
jb
mov
mov
pop
mov
mov
jne
adc
jp
jmp
sbb
leave
mov
ja
imul
jo
sub
aaa
movsl
movsl
mov
jmp
ss
dec
pop
loopne
jp
out
scas
aam
mov
in
pop
and
xchg
pop
dec
call
push
loope
cmp
jb
dec
xchg
fiadds
add
sub
popa
lcall
fdivrl
enter
leave
fnstenv
imul
movsb
mov
dec
jo
pusha
pusha
pop
and
mov
push
pusha
inc
inc
in
jecxz
fidivs
fs
loopne
test
mov
inc
fwait
push
jb
cmp
jns
xlat
stc
mov
into
dec
jg
xchg
xor
xor
popa
daa
outsl
movsl
stos
pop
scas
ds
xor
movsb
insl
test
xor
cld
xchg
in
test
ret
mov
sti
xchg
jmp
push
insl
ljmp
out
outsl
ds
jmp
push
or
stos
das
adc
pop
sub
inc
scas
int3
imul
and
push
sub
imul
popa
movsl
ja
ss
xchg
pop
add
in
mov
test
xor
cs
jno
cli
scas
test
sub
imul
push
out
dec
sub
sub
cmp
xor
xlat
xchg
enter
dec
push
push
add
push
aad
cmp
test
xchg
and
sub
sub
test
outsb
fisttps
call
pop
inc
lds
js
lods
xlat
xchg
mov
dec
ljmp
xlat
cld
faddl
push
dec
fiaddl
xor
and
or
mov
inc
and
stos
sub
push
mov
and
ds
pop
test
xor
push
mov
cmpsb
aam
push
loopne
stc
fcmovbe
push
stc
lods
in
aas
in
test
lea
out
sub
xchg
xor
scas
mov
cmp
ljmp
mov
lods
scas
cmp
push
aaa
mov
pushf
dec
jnp
hlt
cmpl
and
mov
ss
stc
scas
push
call
out
jne
mov
das
sub
stos
pop
int3
negb
and
xchg
int
cmp
push
shrl
pop
adc
jle
aaa
push
fnstcw
jmp
ljmp
inc
xor
sub
test
lock
stos
mov
jno
call
pop
sbb
es
lcall
in
cmpsl
xchg
shrl
push
push
roll
int3
mov
xchg
dec
imul
test
mov
cmp
sub
sub
arpl
aad
or
jnp
xor
ds
and
mov
arpl
ss
adc
mov
mov
cmp
xlat
loope
fs
aas
clc
lret
test
push
imul
clc
add
insb
imul
cltd
pusha
jmp
mov
mov
flds
std
jo
mov
les
jp
pop
stos
ret
xchg
push
push
xlat
icebp
fs
jge
fs
test
cmp
push
testl
shlb
out
ds
sub
loopne
iret
inc
mov
jg
lret
ss
daa
imul
loope
aaa
test
cmp
mov
stos
shr
push
movsl
inc
fcoms
pop
mov
movsb
fs
lret
out
cmp
in
jecxz
stos
jmp
es
in
out
iret
and
int3
out
mov
sub
mov
ljmp
lret
in
call
xchg
push
push
mov
neg
mov
out
stos
test
jne
lods
jecxz
pop
leave
scas
add
insl
call
inc
arpl
dec
xchg
mov
jns
mov
and
scas
iret
das
push
push
mov
mov
xchg
das
sub
sub
push
cltd
imul
std
lret
push
mov
cmpsl
scas
xor
mov
mov
mov
scas
xchg
outsl
jno
mov
pusha
jmp
ds
lret
cmp
cmp
sbb
loop
mov
mov
mov
in
das
xchg
jno
add
aam
fsubrl
imul
es
xchg
int3
jnp
pop
cmp
loope
ds
mov
lods
push
fsubr
xchg
sbb
xchg
push
xor
ljmp
sub
mov
jle
test
xor
add
sbb
or
mov
sub
push
movsl
jno
and
inc
dec
sbb
xor
int
push
add
scas
sub
mov
pop
xchg
xchg
lcall
aas
pop
cmc
in
mov
mov
ljmp
xchg
push
and
movsl
sub
jmp
mov
mov
pop
ficoml
pop
push
fcoms
sbb
mov
xchg
push
push
lock
aas
pusha
lcall
stos
sub
push
inc
loopne
push
mov
lret
inc
loopne
pop
add
xchg
addl
mov
and
out
test
aaa
mov
in
out
mov
daa
mov
pop
pop
jp
xchg
popa
sub
movsl
mov
lret
clc
sahf
insl
sub
fldcw
mov
add
es
test
fmuls
outsl
fisubl
sub
popa
sti
fsubrl
iret
call
adc
test
push
lds
pop
push
imul
fdivrl
nop
mov
outsl
jle
insl
push
and
fisttps
daa
mov
jmp
sub
enter
mov
lds
int3
ljmp
or
popa
or
out
adc
shl
into
xchg
push
mov
mov
cmp
in
xor
xor
in
movsl
adcb
jne
push
sub
fldl
dec
cmp
aam
in
pop
push
add
scas
mov
dec
aaa
mov
pushf
push
cld
pop
scas
and
cwtl
ret
jne
dec
add
xchg
dec
and
mov
lahf
cld
or
out
inc
jle
push
cmpsl
idivb
lods
dec
in
push
mov
arpl
jle
xchg
push
ret
mov
fidivs
jmp
jo
ret
aaa
adcb
dec
push
or
lahf
lods
and
outsl
mov
xchg
in
scas
jmp
and
gs
cmpsb
in
jno
push
dec
add
cmpsb
decb
mov
push
ds
hlt
adc
mov
mov
lret
and
push
jns
and
cmpsl
sub
adc
sbb
lods
and
and
andl
push
push
lods
notl
loopne
pop
pop
test
lret
cs
shlb
in
push
and
sub
adc
adc
mov
cwtl
push
adc
loop
fstps
mov
ss
xchg
stos
or
repz
adc
movsb
outsb
out
push
and
movsl
and
jo
loopne
lods
cwtl
xchg
in
fsub
add
jmp
inc
xchg
mov
stc
mov
aaa
test
lret
dec
call
xchg
rclb
pop
sbb
and
cmp
fcoms
lret
stos
sti
stc
xchg
imul
lret
lds
adc
mov
stos
scas
cwtl
dec
sub
fbld
aaa
fucomi
push
and
stos
ds
add
call
int3
inc
push
cmpsl
fsubrl
fsubrs
mov
xchg
pop
xlat
mov
jo
lods
and
cld
sti
fsubr
or
call
daa
mov
or
mov
ja
hlt
sub
mov
mov
ficompl
jns
adc
aas
imul
lods
stos
mov
adc
xchg
sub
or
sbb
dec
fwait
sbb
xor
xchg
ret
insb
ficoms
pop
inc
sub
cmp
push
es
lds
icebp
sub
xchg
in
mov
mov
or
scas
adc
mov
sti
pop
add
ficoml
lret
and
movsb
mov
ja
sub
lods
dec
pop
cmp
push
sbb
sbb
movsl
rol
pop
pop
mov
stos
lods
jmp
mov
sub
push
xchg
testl
or
leave
sub
in
or
stos
inc
stos
lods
pop
fcmovbe
cs
fsubl
adc
jne
push
xchg
push
pop
cli
jae
stos
test
mov
negl
dec
mov
adc
lret
fistl
xor
cmp
mov
leave
lret
or
and
test
flds
xchg
into
xchg
dec
iret
lret
outsb
lret
push
lret
pop
loopne
or
imul
jmp
sub
scas
call
ds
sub
cmp
xor
sti
cmp
jmp
daa
pop
sub
push
dec
cs
dec
xor
test
aaa
scas
loope
ljmp
xchg
cmc
test
mov
pushf
imul
add
xchg
bound
in
and
push
fwait
test
iret
imul
daa
cs
cmp
lods
les
pop
xlat
xlat
jmp
mov
stos
sub
push
push
jmp
int
mov
mov
cmp
xchg
dec
dec
push
sti
in
aad
out
mov
cmc
and
xchg
mov
ja
xlat
jmp
gs
lcall
fs
cmp
mov
out
ja
lods
gs
mov
test
push
int
mov
cmpsb
mov
push
aad
xchg
xchg
push
loopne
xchg
mov
fcompl
xchg
xchg
test
scas
repnz
jbe
fs
pop
scas
repnz
imul
ret
inc
repz
ret
pop
imul
in
cs
jo
and
xor
or
sub
fsubs
push
or
outsb
sub
in
jmp
arpl
jnp
and
sti
sbb
mov
out
jmp
jmp
ds
sub
cmp
out
sahf
das
xchg
cld
adc
in
jmp
cs
mov
push
rcll
lock
jmp
mov
iret
out
imul
sub
xchg
sub
lods
pop
cltd
cs
push
sbb
mov
mov
pop
insl
rorb
call
cmpsb
call
mov
cmp
xorl
sub
fldcw
aaa
xlat
loop
dec
cmp
loopne,pt
imul
jne
sbb
aad
xchg
loop
or
sub
mov
stc
xchg
iret
mov
stc
push
outsl
outsl
push
ret
mov
xchg
pop
outsb
jmp
add
sbb
pop
add
or
aam
xchg
outsl
das
repnz
loope
adc
add
mov
and
gs
mov
lea
mov
icebp
daa
dec
adc
xor
adc
int
mov
sub
pop
shlb
in
mov
idivb
add
fimuls
int3
pop
sub
cmpsl
pop
push
mov
cmp
int3
inc
fwait
jecxz
push
inc
loope
stos
cs
movsl
push
push
call
stc
nop
dec
jg
test
xor
in
adc
neg
cmp
xchg
test
sbb
adc
fldcw
mov
insl
loope
push
lret
outsl
call
push
mov
mov
aad
push
add
ja
stc
nop
cmp
push
push
sub
insl
repnz
test
sbb
pop
lods
sub
adc
lret
adc
mov
or
lods
cmp
xchg
std
cmc
shrb
repz
pop
xchg
fsubrs
sub
push
jmp
adc
dec
push
out
xchg
out
sbb
jmp
data16
lret
dec
add
shlb
scas
mov
or
das
pop
popf
loope
xor
xlat
push
adc
mov
call
push
mov
xchg
dec
repnz
push
and
mov
mov
sub
in
jecxz
gs
jmp
mov
stos
jbe
sub
ljmp
stos
hlt
ret
adc
stc
test
int3
jp
fldcw
jl
imul
mov
xchg
into
inc
jl
sub
xchg
lret
jmp
inc
sbb
cmpsl
test
int3
imul
ret
xor
xor
shl
sub
adc
lret
fistps
repnz
shr
push
jl
inc
xchg
jmp
mov
adc
jmp
xchg
fnstenv
mov
cmp
ljmp
loopne
add
sub
sahf
mov
cmp
lds
jno
dec
xchg
mov
ljmp
out
mov
or
and
jbe
lcall
gs
aaa
aad
or
push
push
in
xchg
lds
scas
popl
sbb
imul
and
mov
shrd
orl
das
mov
xchg
xor
inc
test
std
ss
sub
dec
pushf
xchg
add
jmp
and
mov
mov
movsl
and
fs
jne
dec
movb
sub
in
lret
sub
cli
incb
xchg
add
in
and
stos
mov
ljmp
mov
aad
ljmp
out
sub
lds
sbb
mov
gs
jmp
jmp
xchg
jb
push
jmp
imul
push
mov
dec
cmpsb
jne
test
cmpsl
jmp
pop
sti
aad
mov
out
pop
pop
sub
int
mov
lret
inc
mulb
inc
push
out
lock
pop
xor
mov
mov
fisubl
sti
mov
in
insl
mov
cwtl
sub
push
ja
or
out
out
aaa
dec
andb
cmp
dec
out
xor
ss
pop
cmp
inc
mov
jmp
push
add
test
jns
mov
sub
sbb
add
jecxz
cwtl
stos
inc
xchg
push
jno
mov
mov
push
ds
repz
mov
cs
mov
xchg
push
push
xchg
or
in
and
dec
sub
mov
xchg
mov
xchg
test
cmp
or
out
sbb
jmp
push
lcall
lds
fucom
mov
test
lods
aas
pop
sub
mov
mov
sti
sbb
mov
cs
sahf
sbb
insl
dec
call
out
jmp
add
daa
mov
pop
pop
aas
or
daa
daa
sub
mov
sub
jl
insb
out
sub
cmpsb
stos
mov
jmp
mov
mov
loope
dec
pushf
ljmp
cs
push
pop
and
setbe
and
xchg
mov
sub
das
lods
and
imul
jp
jo
leave
push
in
jl
xchg
dec
push
lret
das
jo
into
fxch
in
cld
sub
cmp
lret
pop
lret
cmc
out
call
dec
xlat
push
xlat
or
push
xlat
mov
xchg
jl
lret
ss
xchg
subb
in
push
mov
pop
pop
add
push
xchg
rorb
sub
sbb
scas
movsl
push
sahf
sub
out
lret
enter
xchg
and
daa
sub
push
imul
xchg
xor
cs
into
ljmp
sub
xchg
or
leave
and
sub
lret
or
aad
push
fidivl
sub
in
push
cld
jl
ljmp
sub
mov
leave
stos
pop
fwait
xor
rol
mov
int
cs
outsl
push
das
sub
mov
push
jbe
push
shll
test
fisubrl
in
push
lret
ljmp
sub
aad
pop
mov
cli
stos
movsb
sub
int3
int3
fs
and
das
jmp
lret
sbb
test
mov
rcrl
push
movsl
or
jge
mov
aas
pop
jmp
xor
mov
or
dec
in
loopne
xor
or
insb
icebp
xlat
ret
pushf
xchg
in
fs
sbb
mov
leave
dec
lcall
movsl
cltd
mov
int
xor
push
add
int
mov
push
gs
pushf
ljmp
ljmp
mov
sub
loope
scas
in
imul
and
in
or
pop
jmp
frstor
push
pop
or
in
xor
xlat
sbb
or
in
lods
ret
imul
loop
push
movsl
jno
gs
push
pusha
mov
mov
enter
pop
cmp
test
test
dec
sub
cmp
int
xor
dec
je
outsb
adc
dec
notl
sub
test
test
push
dec
imul
sub
xchg
mov
xchg
add
mov
enter
ss
call
enter
lcall
sub
xor
sub
mov
sub
cmp
call
das
push
mov
out
cs
sub
dec
repz
lock
sti
inc
push
cmp
mov
gs
in
mov
in
mov
dec
lea
push
fsubrl
es
xchg
or
sbb
enter
push
dec
test
insb
jmp
ss
insb
fs
movsl
pop
mov
sub
fidivl
cli
out
int
add
test
lret
fstl
and
test
mov
mov
int3
int
and
imul
jne
bound
mov
push
mov
and
pop
test
popa
sub
xchg
movsl
jmp
std
sbb
jns
sub
movsl
cmp
int
je
into
shr
mov
and
and
cmp
int3
mov
pushf
fldl
mov
sti
leave
aas
jmp
pop
push
test
xor
mov
sbb
loope
or
mov
stos
mov
dec
lods
dec
insb
loope
in
mov
xchg
aad
stos
stos
inc
mov
stc
push
outsl
out
cmpsl
xchg
aad
mov
mov
testb
fmull
push
jnp
dec
xchg
stos
and
xor
hlt
mov
push
cmpsl
jne
dec
sub
xor
dec
xchg
int3
fnstenv
repnz
das
jmp
mov
call
out
mov
lret
pop
ss
ss
lods
sub
aas
jecxz
sbb
push
push
push
in
lret
leave
or
push
or
dec
call
lods
mov
lret
jp
mov
cs
jecxz
and
ljmp
sub
add
loopne
cmpsl
loop
push
loopne
jne,pn
cs
jecxz
pop
sub
pop
sub
pop
cs
xchg
xchg
sub
stc
sti
js
mov
leave
sub
xchg
dec
push
pop
xchg
lods
sub
sub
jnp
addr16
push
addr16
outsl
leave
push
repz
xchg
jbe
cmpsl
push
test
loop
outsb
lret
std
das
cmpsl
stos
popa
sub
mov
int3
cmp
dec
pop
lret
stc
xor
cmc
enter
ljmp
xrelease
mov
fists
mov
mov
push
sti
arpl
sub
out
xchg
std
xchg
cmp
inc
fldcw
stos
and
scas
mov
sbb
cltd
ss
bound
aad
inc
lret
sti
mov
pop
in
popa
das
and
test
iret
push
out
sbb
inc
jmp
adcb
test
push
jne
cs
iret
call
mov
test
ret
imul
xchg
addr16
mov
dec
fsubrs
enter
xchg
lret
xchg
mov
gs
xchg
aad
pop
or
xchg
fisubs
sbb
or
mov
mov
lods
cwtl
cli
mov
push
mov
mov
enter
xchg
test
fmuls
cwtl
push
sub
sub
pop
sar
pusha
jecxz
inc
mov
leave
stos
iret
mov
lret
hlt
or
clc
sub
xor
xchg
push
adc
movsl
sbbl
aas
mov
cmp
jmp
mov
ljmp
jno
inc
outsb
das
shr
cmp
xchg
loopne
sub
push
dec
ret
xchg
cwtl
sub
jne
hlt
aas
xchg
pop
test
les
sub
dec
push
lods
mov
cs
in
mov
sbb
adc
sti
adc
dec
push
jl
shll
jmp
xchg
out
imul
outsl
sub
lahf
or
fwait
cmpsl
xor
push
mov
ss
mov
fistpll
outsb
test
mov
mov
in
stc
xchg
out
xchg
or
enter
mov
sub
dec
int3
xchg
dec
sub
sbb
sub
test
xchg
mov
sahf
stc
add
lods
insb
sub
rolb
xchg
jecxz
ret
jecxz
mov
mov
xlat
push
xor
xor
xor
dec
inc
loopne
les
mov
or
mov
pop
jo
push
in
lods
xor
inc
add
mov
imul
call
cmpsl
mov
xchg
loop
or
mov
and
aad
cmp
into
ljmp
jmp
push
js
gs
sub
fucomp
xchg
sbb
imul
mov
mov
call
mov
movsb
xor
fsubl
cmp
inc
dec
push
stos
mov
lret
dec
push
and
cmp
add
cmpsl
sub
jmp
ljmp
lret
mov
mov
jle
mov
push
mov
sub
mov
xor
push
sub
or
xchg
test
xlat
mov
fnstenv
in
dec
push
call
jge
mov
sub
inc
xchg
icebp
in
movsb
int3
sbb
mov
sbb
cmp
mov
sbb
dec
mov
pop
cld
xor
xlat
push
push
pop
std
subb
stos
insl
sub
or
xlat
and
xchg
xor
out
loopne
push
sbb
jnp
mov
mov
adc
out
std
cmp
xchg
aad
fdivrl
loopne
mov
and
xor
xor
stos
test
sbb
gs
jge
sub
pop
xchg
jne
add
xlat
call
xlat
sub
pop
dec
mov
pop
pop
xlat
adc
push
sub
sub
sbb
in
or
jmp
inc
testl
aaa
test
inc
and
jp
stos
or
push
fimull
cwtl
and
popf
mov
sbb
lods
stos
jbe
xlat
dec
sub
imull
insl
test
test
mov
mov
jmp
push
in
ss
lret
push
out
testl
mov
push
sub
jne
push
in
xchg
insl
cmpsb
sub
xchg
jecxz
sub
push
cmpsl
sub
push
xchg
int3
mov
push
repnz
add
jecxz
or
add
sub
lods
cmp
in
jmp
pop
sub
out
stos
mov
vorps
push
dec
pop
push
gs
sub
cmpsb
push
int
xor
icebp
and
sahf
outsl
push
mov
cmp
mov
inc
jl
out
aaa
push
cmpsl
cli
inc
push
in
jecxz
stc
lret
push
jmp
mov
loope
stc
aad
and
les
insl
movsl
ucomiss
pop
or
dec
iret
jmp
or
insl
jg
push
outsl
sub
and
cmp
sbb
pop
dec
frstor
mov
cwtl
insl
push
ds
fidivrl
mov
and
mov
mov
xor
mov
and
sahf
and
das
ljmp
lret
mov
push
mov
jnp
cmpsl
jno
xchg
js
ljmp
fistpl
in
int
sbbl
jb
xchg
jnp
sub
jg,pn
and
mov
sub
mov
sti
mov
cs
or
cltd
and
in
dec
mov
mov
ljmp
mov
or
sbb
mov
enter
pop
cmp
or
push
mov
or
fcmove
ffree
inc
xchg
dec
lret
inc
outsb
enter
pop
iret
enter
mov
scas
sbb
es
sti
pop
jnp
bound
mull
sbb
dec
divl
add
mov
lods
in
out
scas
xchg
jns
loopne
mov
scas
pop
pop
pop
cwtl
inc
mov
clc
or
cmc
sub
push
insb
mov
sub
out
iret
int3
imul
xchg
sti
push
cmp
xor
test
mov
xchg
out
sub
xlat
sbb
push
dec
pop
and
mov
xchg
xlat
test
add
jo
mov
call
insb
push
pusha
xor
dec
push
pop
idivb
add
hlt
push
pusha
push
test
push
or
sbb
or
test
sub
xchg
test
std
mov
mov
ja
mov
mov
add
sub
sti
pop
outsl
push
icebp
movsb
imul
pop
call
imul
ljmp
call
push
out
out
cmp
mov
sub
push
lock
sub
xchg
or
push
or
sub
cmp
imul
lock
mov
xchg
lock
sti
subl
jmp
mov
xor
or
leave
lret
jp
pop
mov
or
aam
sub
cmp
jecxz
test
and
jo
xchg
cmp
or
pop
dec
leave
imul
popa
push
repz
sbb
insl
pop
xchg
imul
cmp
aaa
mov
jecxz
fwait
push
aad
sbb
clc
jmp
add
lods
sbb
or
xor
pop
stos
repnz
test
je
mov
aad
mov
rclb
dec
pop
loope
js
jne
pop
push
and
jg
xlat
cmpsl
ss
mov
out
ss
repnz
cmp
popf
pop
out
mov
mov
ficoml
dec
stos
mov
push
mov
rcrb
enter
fimull
das
stc
and
into
inc
test
test
mov
stos
dec
imul
mov
arpl
jne
xchg
loopne
sub
insb
ret
fidivl
push
xchg
mov
mov
sub
push
xchg
rclb
popa
push
xchg
out
dec
jmp
lret
adc
mov
movsl
sub
ret
push
or
sbb
sbb
inc
cs
jb
mov
pop
stos
xchg
or
loop
pop
lret
mov
sub
mov
sub
outsb
xor
push
jne
insl
sub
or
adc
mov
sub
or
or
scas
in
std
int3
cmp
push
cld
rcll
call
ljmp
int
imul
mov
sbb
and
pop
repz
outsl
imul
and
sub
int
ss
imul
or
pop
xchg
xchg
adc
out
sub
jne
xchg
cmpsb
std
lahf
or
stos
stos
dec
aad
insl
pop
repz
push
scas
xchg
in
ljmp
mov
sub
sub
test
icebp
pop
in
and
lods
data16
pop
test
mov
test
mov
cmp
adc
or
mov
imul
addr16
push
sub
stos
shll
and
sti
rcrb
in
sub
stos
negl
insl
stos
dec
xchg
push
jae
cmp
insl
lcall
sbb
aas
xchg
sub
fisubrs
jle
daa
pushf
dec
mov
xor
lods
fmuls
pop
call
mov
sti
jmp
and
and
push
or
xlat
cmpsl
fsubrs
mov
fadds
addr16
outsl
fdivr
mov
arpl
and
cmc
in
in
dec
mov
lret
mov
outsl
shl
ss
xchg
fldenv
scas
pop
sbb
stos
cmpsl
das
pop
xlat
mov
or
fimuls
sbb
push
xor
in
mov
mov
sub
or
outsl
call
call
leave
cmp
xchg
sub
sub
cs
decb
testb
es
call
push
xchg
icebp
pop
cmp
inc
sub
bswap
loopne
lods
push
cmp
stos
mov
cmpsl
mov
aad
stos
mov
loop
xor
pop
fildll
loope
sub
cmp
or
sbb
cltd
out
xchg
js
stos
or
movsb
inc
test
lods
cmpsl
loopne
sub
in
mov
lret
imul
push
out
lock
or
decb
sahf
daa
popa
or
jecxz
add
test
pop
push
lret
ret
jp
cld
xchg
stos
cs
push
outsl
mov
pop
sbb
shl
int3
sub
ss
sub
inc
xchg
mov
pop
xchg
xor
jmp
movsl
push
cld
mov
outsb
outsl
or
das
scas
mov
push
into
repz
dec
push
dec
test
push
int
call
push
jno
stos
adc
mov
stos
or
lret
pop
mov
in
mov
test
push
and
push
sub
sub
negl
out
and
mov
loope
pop
push
arpl
mov
lods
mov
jmp
mov
stos
imul
xchg
scas
aad
lret
or
pop
test
mov
loopne
xchg
mov
out
outsb
mov
cs
cmp
int3
sub
xor
xor
daa
ljmp
push
out
mov
sbb
push
bound
mov
das
pop
fcoml
mov
sub
rcrb
jne
inc
sub
and
push
ficoml
mov
stos
test
scas
sti
fwait
aaa
stos
xchg
xchg
cmp
aaa
xchg
std
pop
fiaddl
cmp
mov
lret
xor
sbb
and
pop
frstor
mov
sub
xor
stc
push
xor
out
shrd
push
daa
push
push
mov
popf
call
iret
pop
into
aad
clc
mov
mov
adc
mov
sub
lods
test
xlat
sub
outsb
sub
leave
xchg
lret
sub
cli
sbb
mov
imul
push
pop
cmpsl
mov
and
ljmp
and
jnp
jo
leave
aam
and
add
iret
or
xlat
loopne
fwait
pop
dec
movsb
ljmp
xchg
das
push
inc
mov
adcl
fisubl
pop
sarl
mov
push
das
push
and
fisubrl
mov
scas
idivb
xlat
sbb
push
insl
jmp
cli
cmp
bound
scas
xlat
mov
lods
sub
sub
dec
cmp
imul
cmp
or
jecxz
push
cli
inc
lods
jmp
outsl
imul
dec
mov
ficomps
lods
ljmp
shl
sub
jg
pop
scas
xor
sti
out
xor
shrb
loopne
test
outsl
mov
and
fdiv
push
iret
cli
and
push
inc
popa
inc
xor
bound
cs
push
jae
shll
inc
fildll
dec
ret
imul
lock
xor
inc
lcall
cld
push
pusha
cmpl
fstl
icebp
mov
int
inc
add
mov
or
fst
cltd
mov
and
ja
lods
mov
and
insb
iret
pcmpeqd
jge
ss
or
call
aas
push
lods
out
jmp
fwait
out
mov
sub
mov
sti
int
fs
cmp
pop
daa
lret
pusha
add
ret
sbb
xchg
or
push
mov
pop
dec
stos
addr16
pop
inc
aad
out
es
sub
call
or
int
lret
add
repnz
scas
or
dec
xor
xchg
sahf
repnz
jg
fwait
push
sub
mov
mov
mov
push
sbb
popa
sbb
mov
mov
push
sub
aaa
xlat
movsb
stos
out
cmp
shll
aaa
out
insl
dec
cli
dec
ljmp
in
jmp
pop
xchg
jmp
jle
enter
mov
call
imul
icebp
stos
adc
repz
push
push
sti
imul
mov
imul
add
pushf
fisubrs
loop
cmp
repnz
lods
imul
push
push
mov
push
test
or
adc
mov
xor
cs
sbb
xlat
notl
call
insb
arpl
sub
int
or
outsb
pop
ficoml
sbb
ret
mov
xchg
cmp
or
or
packsswb
xchg
fcoml
imul
into
arpl
fistpl
adc
xchg
jg
mov
dec
das
mov
shrl
lret
cli
imul
mov
inc
pushf
out
insb
ficompl
fcmove
xchg
call
insb
xchg
out
jecxz
jnp
sbb
mov
sub
mov
cmp
mov
cmp
mov
ljmp
jne
imul
push
call
push
dec
std
mov
outsb
test
sahf
sbb
outsb
ret
inc
mov
pushl
cmc
jge
pop
popa
imul
shrl
ret
xchg
xchg
out
test
lret
xlat
lahf
or
or
lret
dec
cmp
or
call
mov
int
and
mov
add
mov
imul
mov
xchg
sbb
imul
stos
push
out
in
mov
mov
in
out
test
mov
jmp
stc
sub
jb
sahf
sti
jecxz
stos
mov
sbb
loopne
in
inc
minps
insl
xchg
jg
icebp
ss
sub
push
adc
sub
add
adc
cmp
and
jl
ja
cmp
daa
and
lds
inc
movb
cmpsb
and
push
movl
and
outsb
cmpsb
scas
out
fmuls
xchg
add
in
aad
dec
sbb
push
cmp
scas
sti
cmp
sub
nop
imul
xor
xchg
cmp
sub
test
xchg
inc
sbb
cmc
adc
mov
ss
in
jp
or
ljmp
sbb
dec
lods
push
and
lcall
sub
stc
cmp
outsb
mov
aas
xchg
stos
mov
sbb
xor
pop
jo
push
call
ja
sbb
sub
add
cwtl
int
dec
aas
jle
dec
imul
xlat
sub
and
sub
aaa
je
fmuls
movsb
pop
cmpsb
mov
xchg
insl
stos
xchg
cmpsl
stos
cmp
ss
mov
cmp
arpl
pop
fmuls
test
sub
test
dec
insl
pop
imul
inc
adc
adc
and
mov
push
mov
sub
ficompl
mov
aaa
inc
xchg
and
loopne
cmp
das
mov
je
test
jno
sbb
dec
cs
cmp
ret
lods
fnsave
das
mov
and
xlat
setne
add
scas
fistl
and
xor
mov
xlat
push
xchg
jns
scas
stc
jmp
and
cmp
fstl
fcoml
idivl
in
xchg
jl
cmpsb
out
cwtl
and
mov
cmpsl
movsb
movsl
test
sub
icebp
lods
mov
push
enter
jnp
addr16
jl
insl
data16
scas
pop
sub
aaa
fldl
lods
xchg
addr16
cmp
loop
insb
sarl
call
jp
fsubrl
outsl
imull
and
ja
fwait
data16
mov
outsb
fsubr
mov
loopne,pn
subl
lods
repnz
sub
je
imul
push
sbb
and
mov
pop
ficoml
sub
lods
jae
outsb
sub
leave
ljmp
call
xor
in
xchg
pop
test
rcll
stos
aad
mov
and
loop
jle
adc
jp
stos
jmp
aas
and
in
sub
dec
cmp
leave
mov
cmp
cmp
inc
add
in
in
or
mov
dec
bound
xlat
mov
and
cmp
mov
scas
push
jg
sub
push
test
pop
pop
test
push
inc
mov
fdivrs
xchg
mov
aas
loope
cmp
mov
stos
shl
inc
jmp
lds
cmpsl
mov
aaa
lea
jne
pop
call
lods
jnp
sub
push
scas
ss
es
scas
jmp
mov
push
das
cmc
xchg
cltd
stos
sub
stos
mov
and
int
dec
iret
sub
stc
lahf
shrl
mov
insl
cld
cmp
push
addr16
or
test
push
scas
xchg
mov
push
push
xlat
aad
pop
jmp
lcall
stos
cmp
out
and
mov
xlat
sub
sub
cmp
sub
and
jmp
push
mov
in
and
shrl
popa
add
test
cs
and
dec
loop
test
je
clc
pop
push
push
cmpsl
in
std
shrl
mov
jmp
inc
out
push
or
ss
stc
in
pop
or
mov
mulb
mov
fstl
xchg
push
mov
stos
or
and
fwait
das
and
mov
outsl
pop
lods
sti
fdiv
popa
daa
or
fcmove
and
push
push
inc
jbe
adc
inc
and
cmc
mov
xchg
mov
mov
push
pop
loope
out
pop
aad
xchg
or
xor
les
shl
cmpsb
mov
push
sub
push
and
sub
mov
jnp
loop
scas
es
dec
cwtl
js
aad
cli
outsl
pop
ret
pop
iret
push
dec
xor
and
ss
je
sahf
inc
sub
ret
jae
push
adc
jp
dec
jl
and
test
xchg
stos
sahf
aaa
cmp
inc
push
ja
jge
loope
mov
pop
scas
add
loopne
jnp
mov
xchg
mov
inc
adc
pop
jecxz
inc
adc
sbb
pop
pop
adc
sub
lods
or
cmpsb
cli
scas
inc
test
loope
adc
dec
push
mov
adc
push
ret
mov
inc
and
ds
inc
jne
add
imull
mov
or
xchg
mov
cmp
sub
in
adc
aad
bound
hlt
push
std
or
add
jecxz
outsl
ret
dec
pop
test
jno
movsl
lret
adc
aas
jne
shrl
sbb
mov
sbb
popf
dec
mov
and
scas
inc
mov
push
fidivl
aas
jae
shr
ret
cld
int3
mov
das
jne
sub
mov
mov
insb
cs
inc
mov
int
mov
sub
add
mov
test
cmp
hlt
clc
adcl
adc
mov
int
mov
imull
jle
hlt
and
xchg
adc
in
cmp
pop
scas
and
sub
sub
pop
mov
push
sub
dec
xor
adc
jne
lret
notl
in
push
cmp
lods
jnp
lock
lds
xor
cltd
sbb
lahf
lods
nop
inc
loope
push
cmp
sbb
jp
xchg
adc
repz
lods
jne
es
mov
push
bnd
jnp
inc
inc
adc
adc
daa
mov
and
fs
and
adcl
stos
lods
adc
mov
push
and
dec
jle
enter
push
lods
mov
adc
push
dec
jmp
movsb
and
push
pop
mov
fiaddl
hlt
repnz
pop
dec
mov
sub
dec
icebp
fcmovb
pop
xor
and
mov
mov
push
sub
fildll
loopne
jb
dec
in
sbb
mov
scas
xlat
sub
mov
and
imul
and
xor
test
xor
enter
push
and
imul
fwait
sbb
outsl
cltd
mov
lock
or
repnz
test
cmp
in
lcall
push
insb
mov
and
insl
mov
addb
cmc
test
ficoml
or
lds
xchg
xchg
lret
lret
jno
or
mov
shr
cmpsb
lods
in
jle
outsl
or
inc
push
clc
jmp
movb
es
arpl
xchg
mov
lret
push
mov
fcoms
xchg
mov
adc
sub
mov
sbb
push
sub
stos
addr16
xor
mov
push
cmpsl
push
adc
cmp
pop
in
inc
xchg
add
sub
lods
fadds
xor
push
addr16
cmpsl
shlb
movsl
cmc
sub
xchg
and
addl
es
lea
and
mov
scas
cmc
in
xor
ss
movb
inc
or
inc
mov
add
lret
sbb
adc
test
es
stos
aas
add
xchg
xor
push
dec
mov
inc
xlat
mov
push
xchg
and
inc
test
shl
andb
xchg
test
xor
add
aad
sub
xor
adc
mov
in
dec
test
rclb
aad
sub
push
das
push
fnstenv
jg
inc
xchg
rolb
int3
enter
call
xchg
mov
jge
or
lods
cmp
jbe
xchg
and
push
movsb
subb
xlat
and
xchg
push
test
out
and
cli
pusha
fs
xchg
loopne
push
push
loope
popl
pop
lods
and
lret
jmp
pop
cmc
xlat
inc
jge
push
insl
jecxz
adc
or
mov
adc
and
cld
or
sbb
lods
daa
push
xchg
xor
jmp
cmc
sbb
dec
push
js
sbb
mov
movsl
push
lds
in
mov
inc
push
das
negb
jbe
loope
xor
bound
mov
jb
jne
or
aad
xor
xor
inc
test
aas
mov
test
or
xlat
add
adc
and
jmp
mov
aaa
cmp
push
inc
out
and
mov
mov
add
xchg
xchg
inc
push
push
xor
xlat
pusha
and
aad
xor
push
and
cs
jmp
movsl
and
loope
test
and
jbe
add
sbb
inc
or
test
dec
out
aad
aaa
test
in
mov
add
and
mov
repz
pusha
pop
loope
and
filds
or
xchg
and
mov
pop
mov
mov
outsl
daa
xchg
cmp
xchg
xor
rcll
and
lods
and
or
fnstenv
lods
jmp
not
mov
pop
xchg
push
xor
test
xchg
imul
test
int
sbb
and
jle
add
xlat
in
mov
lods
push
cs
out
pushf
aaa
mov
inc
xchg
mov
jge
inc
stos
add
mov
mov
mov
call
jge
xlat
shr
xchg
nop
xor
daa
xchg
ds
xor
xor
les
scas
add
pop
dec
outsl
or
rorl
test
push
cmpsl
push
inc
rcl
mov
mov
les
aaa
test
gs
test
pop
rclb
xor
inc
loopne,pt
leave
out
and
test
es
movl
and
add
nop
test
ret
jbe
cmpsl
jo
fists
and
xchg
test
mov
mov
mov
dec
imul
and
xlat
sub
adc
out
cmp
xor
xor
push
pop
aaa
dec
mov
in
lds
popa
nop
mov
insl
movsl
mov
pop
push
pop
lods
idivb
sub
movsl
mov
jno
out
inc
aas
sub
sbb
xchg
pusha
inc
lods
inc
lcall
aas
ljmp
mov
std
pop
out
or
cmp
and
and
ss
xor
aas
mov
push
xchg
xchg
jo
loope
leave
in
sub
lods
test
movsl
xchg
call
and
mov
sub
cltd
test
push
adc
stos
mov
imul
push
stos
cmp
stos
add
mov
push
cs
mov
icebp
and
xor
add
ljmp
test
movb
jmp
dec
call
and
lahf
push
movsl
xlat
int3
dec
lds
jnp
and
xchg
mov
cltd
lods
sti
mov
daa
inc
in
ljmp
test
fldenv
movsl
loope
ja
inc
push
jno
pop
cmc
xlat
cmp
cmp
sub
rcrb
adc
mov
add
or
nop
inc
pop
jle
sbb
dec
jb
xchg
inc
xor
aad
test
and
xchg
sub
fnsave
dec
inc
sbb
bound
sbb
in
dec
inc
pusha
fs
out
sbb
pushf
sbb
push
outsb
daa
lret
mov
test
or
fildll
inc
xchg
adc
test
sub
xchg
ljmp
mov
xchg
push
fstpt
movsl
pop
push
loop
adc
xchg
adc
and
xor
mov
imul
push
cmpsl
scas
js
and
loopne
adc
mov
pop
orb
in
aaa
jecxz
mov
daa
cmp
lds
lcall
in
outsl
push
leave
xor
cmp
aas
push
ss
or
in
mov
pop
adc
fs
ret
test
add
leave
subl
sbb
fld1
dec
mov
imul
insb
xlat
push
ret
outsl
xor
nop
lds
push
mov
xchg
add
sahf
inc
lods
bound
pop
das
mov
lret
test
sbb
sub
pop
mov
dec
cmp
pop
mov
int3
sbb
pop
cmp
sub
gs
cmpsl
cwtl
out
sbb
xor
pop
jmp
test
in
cmc
sbb
dec
test
add
aad
mov
xchg
cmpsl
insb
dec
xchg
push
cmp
sbb
or
out
dec
xor
enter
sub
or
in
sbb
lret
pop
das
lods
fdiv
cs
dec
movsl
xlat
out
push
inc
shrb
aad
movsl
sbb
pop
push
lods
clc
aaa
shrl
stos
es
ja
js
dec
mov
imul
push
into
loope
lds
aad
in
repz
jo
pop
push
int3
addl
scas
gs
fwait
push
xchg
es
jb
andl
out
xor
aam
mov
xchg
je
stc
and
movsl
fsubrl
and
es
into
mov
addr16
dec
and
pop
insb
in
and
cmp
cmc
test
mov
push
dec
stos
int
xchg
inc
subb
bound
sbb
es
cmc
cmp
enter
aas
xchg
leave
xor
out
and
lret
int3
int
dec
notb
adc
xchg
clc
mov
fldl2t
stc
mov
jno
cli
mov
jmp
sti
mov
cld
mov
fucomp
std
lea
into
fsubrp
adc
dec
iret
fucomip
adc
mov
loopne
adcb
shl
icebp
adcl
adcb
ret
shl
repz
aam
hlt
in
xchg
movsb
mov
xlat
mov
xor
stc
es
push
xchg
loop
mov
daa
es
xchg
cmc
adc
cmp
aaa
sub
inc
adc
push
lret
xchg
xor
out
xlat
push
call
int
jb
mov
mov
subb
sbb
push
rcrl
cmpl
cmp
inc
unpckhps
clc
aad
mov
pop
js
sahf
cmpsl
fadds
mov
or
aad
ret
add
adc
insl
pop
data16
test
es
mov
pusha
dec
mov
insb
inc
fdivr
adc
imul
rolb
loop
xchg
adc
sub
adc
lods
inc
xorl
inc
sub
jne
ds
mov
xor
pop
mov
dec
push
adc
or
sub
dec
call
fs
adc
daa
and
and
mov
push
repnz
sub
sbb
mull
in
adc
in
push
xor
adc
mov
sbbb
xchg
rcrl
sarb
jne
cmpl
outsb
mov
dec
jns
xchg
fwait
shrl
out
jbe
movsb
and
pop
mov
jl
lret
das
loopne
fsubl
fstl
je
int
popa
rolb
push
movsl
mov
in
or
add
pushf
mov
xchg
mov
mov
or
push
sub
ljmp
and
adc
cmpsl
push
xlat
cmp
push
mov
and
push
dec
mov
test
mov
cmp
xor
outsl
add
adc
jg
mov
and
ss
pop
fcoml
lods
pushf
rorl
cld
filds
adc
push
lods
jne
adc
test
add
rorb
lret
sbb
in
pop
sub
cwtl
or
add
repnz
sbb
adc
xor
pop
std
add
or
fists
aad
adc
shr
mov
mov
pop
jb
fs
pop
jae
movsb
dec
incb
and
inc
push
mov
adc
push
xlat
and
adc
xchg
jno
ds
mov
popa
insl
int3
sbb
adc
shrl
push
rorl
sub
loopne
add
inc
mov
mov
adc
mov
xchg
add
inc
lret
adc
xlat
xchg
inc
or
push
insb
lds
adc
dec
mov
push
js
jle
mov
lret
mov
push
xchg
pusha
mov
popf
jae
adc
sti
insl
and
shlb
sub
loop
dec
push
fnstcw
test
movsb
jp
pop
das
push
stos
nop
add
sbb
push
jg
mov
adc
ja
outsb
es
push
sub
and
adc
test
scas
and
mov
mov
pop
scas
repnz
add
cmp
xor
scas
mov
fs
scas
ss
xchg
xlat
pop
popf
shrb
xor
nop
in
pusha
and
jbe
rclb
xor
lcall
adc
stos
mov
repz
fs
adc
popf
icebp
mov
xlat
rcll
add
push
mov
mov
pop
in
jb
lods
outsl
loopne
inc
mov
jp
and
dec
jno
adc
rcl
test
xor
push
and
loop
lock
mov
adc
das
stc
cld
mov
sub
addb
mov
sbb
xchg
pop
and
lcall
fsubs
pop
lret
mov
cwtl
sbb
xor
mov
push
dec
mov
aam
scas
push
inc
xchg
gs
js
push
icebp
and
adc
dec
mov
inc
adc
and
faddp
xchg
rolb
repz
sahf
push
fstl
cmpsb
bound
adc
pop
inc
stos
imul
adc
push
xor
sbbb
sub
or
test
rcrl
cmpsb
lods
and
push
test
aam
imul
push
test
pop
adc
std
mov
iret
xchg
push
jg
sub
cmpsb
test
and
mov
adc
sbb
sbb
pop
mov
pop
pop
xchg
movsb
and
jae
jo
lock
popf
pop
sub
pop
mov
mov
inc
and
adc
xchg
enter
mov
loope
lods
or
adc
neg
in
adc
sbb
adc
test
mov
push
sar
dec
cmp
mov
stos
adc
fs
pop
inc
adc
out
push
gs
sbb
or
movsb
inc
lods
add
sub
test
adc
out
lcall
xor
pushf
popa
movsb
fldenv
push
sbbb
movsb
int
stos
ficoms
dec
nop
notb
push
call
movsl
jle
cltd
in
mov
loopne
test
out
and
frstpm(287
push
and
lahf
sbb
mov
ljmp
adc
fisubrl
repnz
mov
std
dec
adc
and
xorb
xor
adc
push
pop
inc
nop
adc
test
push
xchg
dec
dec
mov
push
pop
adc
fnstenv
lds
in
sub
and
cmpsb
stos
loop
es
pushf
xor
in
jl
jmp
and
stos
push
adc
call
fstpt
add
lds
adcb
push
jmp
rorl
sahf
jbe
inc
bsf
sbb
push
icebp
sbb
negl
mov
push
stos
push
cmp
xchg
in
inc
adc
dec
mov
ret
adc
cli
repz
push
ja
mov
and
sub
mov
adc
sbb
inc
xor
mov
call
sub
adc
hlt
adc
or
pop
js
xchg
xor
jle
adc
cmp
adc
loope
mov
adc
nop
shlb
adc
clc
loope
not
loopne
cltd
cmpsl
cmp
lret
ja
jecxz
xchg
adc
add
in
adc
dec
push
and
adc
fldenv
sbb
leave
into
inc
mov
push
dec
lock
adc
sbb
mov
int
pop
jge
mov
lock
fwait
int3
push
jg
shll
xor
xor
fisttpl
mov
sub
stc
mov
sub
cmp
dec
mov
mov
pop
cmpsb
stc
pop
mov
sub
adc
cmpsl
and
push
hlt
imul
mov
dec
dec
push
lds
sbb
sub
popf
xchg
cs
out
push
push
or
jl
and
lea
adc
add
sub
es
lea
inc
inc
push
add
mov
aad
pop
jne
mov
neg
push
add
movsb
sbb
lea
nop
xor
adc
inc
add
jo
xorl
fwait
shlb
mulb
mov
push
xlat
mov
repnz
add
sub
xchg
popf
ds
flds
inc
or
daa
add
jecxz
insb
test
leave
dec
mov
mov
add
add
jbe
sub
push
fildll
rcrb
jmp
pop
inc
movsl
jg
or
out
mov
out
fnstsw
cmpsl
sub
jle
aas
fnstcw
sbb
xor
xchg
push
aas
sbb
leave
push
mov
mov
or
daa
push
lds
js
push
mov
daa
push
push
in
aad
leave
pop
lods
gs
in
inc
loope
dec
mov
adc
bound
cs
xchg
lret
flds
nop
mov
cwtl
xchg
add
inc
xchg
mov
add
outsl
inc
cmpsb
clc
mov
push
sbb
in
enter
mov
mov
fsubrs
mov
inc
andl
and
shll
int
or
test
leave
movsl
outsb
inc
and
out
inc
mov
jmp
push
add
loope
lea
sbb
cmp
imul
dec
push
mov
push
jns
test
aad
dec
jne
xchg
movsl
iret
push
fnstcw
movsl
iret
dec
mov
insb
leave
cmpsb
stos
aad
cs
ret
mov
inc
jecxz
daa
sub
push
inc
movsb
inc
in
xor
daa
stc
loope
pop
daa
push
xchg
mov
popfw
loope
imull
mov
mov
mov
leave
loope
or
push
call
or
sub
push
add
xor
aaa
push
out
leave
test
inc
daa
ljmp
jae
jl
xchg
stos
and
aad
out
jle
and
in
das
or
jecxz
aad
inc
shl
cmc
stc
mov
sbb
test
mov
or
aam
add
push
mov
jno
shll
cmpsl
adc
es
mov
ds
dec
lods
sub
xchg
jle
xor
pop
fcos
xor
aad
push
call
movsb
jno
mov
push
in
ljmp
in
ljmp
call
mov
mov
paddsb
sbb
cmc
aad
cmp
das
sub
push
adc
jmp
nop
cmp
sbb
sub
fldenv
inc
dec
ds
sub
push
les
push
xor
inc
or
scas
xor
xor
push
faddl
add
cmpsb
add
and
lahf
jmp
movsl
cld
loopne
sub
jmp
scas
add
mov
mov
add
add
jmp
test
ljmp
inc
popf
push
mov
fnstenv
out
xor
and
jmp
scas
dec
cmp
cmpsl
xchg
addr16
sbb
inc
mul
mov
in
mov
roll
mov
dec
stos
in
sbb
jecxz
sub
cmpsl
pop
xchg
bound
leave
test
call
jmp
imull
lret
pop
sbbl
sub
movsl
mov
mov
sbb
scas
pop
sbb
bound
es
outsb
inc
jecxz
jnp
fists
rorb
mov
jmp
loope
adc
test
ficomps
aad
xchg
adc
negl
out
lods
cwtl
in
push
mov
pop
mov
fstps
out
pop
xchg
and
and
xchg
pop
and
fs
pop
pop
or
jle
jns
pushf
xor
ret
sbb
or
or
cmp
and
xor
stos
mov
and
mov
mov
push
call
adc
addl
adc
cmpsl
rcrl
push
daa
push
jmp
cltd
adc
les
adc
pop
je
add
xlat
sub
push
ja
and
and
pusha
cwtl
cmc
sub
rcr
jl
and
js
add
outsb
sub
vandpd
sbb
and
mov
dec
das
test
push
mov
adc
jae
std
int
imul
push
adc
mov
adc
mov
dec
cld
dec
push
std
mov
lock
push
negb
or
jno
ss
adc
xchg
adcb
mov
xor
inc
stc
mov
dec
cmp
repnz
int
cli
and
repz
xor
dec
test
adc
push
pop
stc
xchg
adc
fsub
pusha
fisubl
popf
nop
ljmp
lahf
loopne
xchg
xor
adc
adc
lret
xor
cltd
imul
pop
mov
push
out
jg
sti
adc
xchg
lahf
push
and
push
xor
pop
mov
and
clc
adc
jl
lret
push
jns
ret
nop
fidivs
jne
jno
sub
scas
xlat
xchg
mov
cmc
adc
and
sahf
inc
adc
shll
sbb
push
xor
xor
mov
mov
shlb
arpl
xchg
sbb
jp
into
or
ds
push
push
xlat
pop
mov
stos
and
cltd
aaa
lods
shr
daa
mov
push
pop
out
lahf
cmp
mov
loopne
movsb
sbb
sub
mov
push
cmp
and
xchg
sub
sbb
icebp
jb
repz
xlat
arpl
iret
inc
xchg
out
addr16
in
pushf
pop
xchg
push
in
push
mov
rcrb
test
xchg
mov
rcll
mov
mov
scas
into
enter
std
jns
sbb
in
into
pop
dec
call
inc
inc
aad
xchg
repnz
out
js
in
push
mulb
ljmp
cmpsb
scas
aad
sub
movsl
lcall
jle
push
ja
stc
xchg
les
mull
jbe
lock
xchg
movsl
cmc
fisubl
iret
lds
sub
es
xor
sbb
push
mov
das
fbld
add
xchg
inc
sbb
jmp
sbb
aad
mov
pop
xchg
xchg
push
in
ss
mov
cmp
in
inc
sbb
inc
xor
mov
or
mov
sti
orb
movsl
xchg
lods
or
jmp
cmpsb
xlat
ss
ret
in
mov
cmpsl
movsl
xchg
and
sub
sub
addr16
cmp
leave
movsl
imull
mov
xor
inc
mov
xchg
adc
in
inc
xlat
jmp
out
out
sub
enter
lods
push
enter
mov
daa
jmp
dec
and
inc
aam
sub
sub
mov
insl
shr
daa
push
pop
out
repnz
int3
cmc
xlat
movsl
sbb
sbb
es
in
adc
lcall
or
jp
ja
clc
adc
pop
nop
addb
lahf
test
mov
xchg
cltd
das
stos
into
xchg
ret
clc
jb
in
orl
insl
xchg
xchg
sub
xchg
outsb
sub
sub
sub
mov
dec
pusha
inc
adc
mov
and
and
ret
insl
xor
sub
sub
stc
jecxz
xlat
inc
popa
mov
push
jb
jle
cld
push
lods
sub
xchg
out
je
pop
mov
out
lods
mov
jmp
movsl
hlt
adc
lods
in
sub
add
movsl
int
pop
xchg
cmpsb
or
in
push
mov
addr16
pop
mov
jb
ret
scas
inc
xor
aad
xorb
sub
lock
repz
ret
addr16
int
pop
pushf
imul
rorl
jbe
icebp
jmp
out
lret
push
das
cs
mov
push
jb
js
pop
js
test
mov
aad
outsb
push
push
push
pop
push
cmc
ss
or
adc
scas
test
fcoml
stos
cmp
in
inc
or
fists
push
ret
or
iret
push
out
movsl
sbb
ss
mov
mov
mov
loop
ljmp
cmp
dec
dec
popf
or
pop
mov
inc
inc
push
test
push
mov
into
mov
cld
loopne
pushl
fld
pop
sti
jle
mov
and
je
lock
in
xor
mov
lds
push
popa
inc
fistl
insl
xchg
push
mov
and
pop
push
xchg
daa
test
dec
lods
outsl
xor
mov
movsl
mov
cmp
mov
push
dec
std
cmpsb
es
or
outsb
addr16
jp
adcb
insb
and
add
jae
cmp
or
mov
xor
cld
iret
fsubr
xchg
cmpsl
lods
xchg
adc
jno
shll
pop
cmpsl
scas
pop
ret
fsub
in
mov
jp
imulb
xchg
stos
xchg
idiv
mov
test
push
cltd
out
sbbb
cs
pop
rol
push
adc
adcb
stos
aad
mov
and
fs
loope
out
insb
jo
pop
mov
out
out
test
inc
arpl
aaa
fimuls
pop
leave
xchg
daa
push
adc
daa
cmp
adc
and
mov
and
cmc
cltd
sahf
imul
stc
sbb
mov
mov
xor
test
std
shll
jl
adc
cmp
mov
mov
or
in
cs
push
xchg
fisubl
mov
sub
or
stc
cwtl
rorl
cmpsb
pop
pop
inc
test
xchg
out
enter
sbb
or
and
push
stc
jae
mov
or
into
pop
pusha
repnz
cmpsl
cld
or
adc
enter
sti
add
cmp
into
es
sub
ja
or
push
fwait
enter
sub
icebp
mov
push
int3
test
push
mov
cmpsl
sub
scas
jne
mov
jnp
mov
cmp
sub
xlat
xchg
adc
xor
outsb
movsl
jae
ret
xchg
jl
mov
mov
xchg
push
jns
jecxz
lret
jmp
popa
iret
call
xchg
push
out
popa
inc
cmpsb
sbb
xchg
push
or
dec
mov
or
mov
jmp
cmpsb
dec
inc
xchg
mov
mov
leave
clc
mov
fs
loop
mov
cmpsl
call
add
xchg
add
loop
mov
jae
mov
daa
inc
fwait
xchg
mov
mov
dec
jb
inc
popa
pop
aad
xchg
mov
sbb
mov
xor
in
leave
movsl
rcrb
je
push
pop
pop
inc
mov
daa
mov
mov
lock
aad
insb
insl
push
push
cmc
jmp
adc
lds
in
out
fiaddl
and
pusha
leave
loope
filds
push
or
es
pop
divl
out
int
mov
movsb
aad
lds
mov
out
enter
push
push
test
sbb
jmp
outsb
daa
pusha
rclb
loope
mov
cld
xor
xchg
mov
enter
ss
xlat
mov
cmp
cmc
enter
call
cwtl
push
cmp
cmp
fiadds
add
aad
cwtl
out
inc
dec
std
sbb
push
nop
mov
ret
aas
incl
cmp
es
jecxz
repnz
mov
and
sub
jecxz
pop
std
int
inc
fdivrs
andb
jnp
iret
inc
cltd
xor
jo
aaa
sbb
cmp
xchg
cmc
mov
and
dec
imul
inc
stos
mov
test
jmp
lret
dec
test
cs
clc
sbb
mov
jne
adc
cmp
mov
dec
pop
ret
cmp
cmp
mov
mov
push
mov
call
popf
repz
dec
cmpsl
sub
jmp
cs
cs
jmp
jmp
push
mov
or
mov
push
mov
clc
jecxz
js
es
inc
and
inc
rclb
js
lods
sbb
into
mov
adc
je
test
mov
ret
test
push
add
repz
jmp
fists
daa
ljmp
mov
mov
or
fldenv
mov
daa
movsl
jecxz
test
std
mov
mov
push
and
lret
mov
sub
xlat
es
sub
cli
push
adc
push
sub
push
push
call
test
jmp
aam
add
push
pop
jle
xchg
test
add
popf
push
inc
pop
or
scas
or
jecxz
pop
call
stc
and
movsl
fucom
pushf
cmp
xchg
xor
and
sahf
ret
mov
or
sbb
adc
icebp
scas
loope
adc
push
cwtl
cmp
adc
xlat
insl
dec
mov
mov
test
out
stos
pop
out
je
xchg
insb
mov
aas
xlat
inc
popf
icebp
or
push
test
inc
loope
xchg
in
sbb
gs
loope
fcoml
cmpsl
push
adc
lret
xchg
addr16
mov
push
test
jnp
xor
xchg
roll
imul
sti
inc
popa
outsl
clc
adc
pusha
pop
arpl
and
addr16
mov
sbb
xchg
and
inc
and
sbb
lods
sahf
in
adc
call
inc
push
cmp
testb
sbb
ret
test
sub
lea
add
cmpb
clc
insb
fldenv
jns
mov
xor
mov
jmp
add
les
test
mov
xor
fnstenv
sub
mov
lods
fisttpll
jae
dec
adc
orb
shlb
push
and
sbb
sub
and
sub
popa
das
jne
add
pusha
pop
ret
sbb
sub
xchg
pop
xor
int
mov
lods
leave
adc
or
jb,pt
iret
sub
das
bound
add
and
and
fmull
xor
std
adc
sbb
out
outsb
dec
xchg
push
sbb
lret
mov
mov
sub
inc
lds
sbb
adc
or
xchg
cld
jno
ret
adc
adc
jp
push
jecxz
pop
adc
imul
loop
and
fst
int
mov
xlat
ds
push
add
cmpsl
fs
and
rcrl
sub
jl
adc
lods
ret
ret
mov
loopne
cmp
add
sti
adc
pop
call
mov
push
xchg
bound
sahf
xor
xor
clc
imul
adc
sti
mov
adc
imul
mulb
and
les
adc
and
cmp
push
scas
inc
adc
cmp
cmp
bound
scas
divps
pop
mov
bound
sub
repz
shlb
int3
sub
movsb
and
rcrl
xor
or
add
xor
sbb
and
arpl
pop
pop
pop
test
and
xchg
mov
lock
xor
jge
or
je
push
dec
adc
mov
add
xor
pop
sbb
and
sub
adc
movb
cwtl
sub
mov
lret
in
adc
lock
loope
xlat
fldenv
xlat
adc
sbb
test
das
js
push
xchg
ja
cmpsb
push
mov
or
ret
enter
scas
adc
mov
and
pushf
test
cmp
repnz
mov
and
pop
inc
and
cli
lods
ljmp
shl
push
dec
mov
mov
lods
ret
les
and
lds
int3
shl
das
xor
hlt
cs
imul
add
dec
adc
add
outsl
pop
lods
and
pop
xchg
pop
cmp
mov
adc
jmp
xchg
out
inc
mov
dec
movsb
xchg
mov
inc
ja
xchg
in
jnp
push
pop
gs
iret
out
aad
das
mov
addr16
sbb
ja
xor
push
or
jge
sub
adc
nop
mov
outsb
call
mov
jecxz
out
out
cmp
cwtl
xchg
inc
stc
dec
inc
xor
insb
add
push
xchg
push
jne
mov
mov
xchg
pop
jge
notb
jno
xchg
inc
push
xchg
ja
and
stos
es
pop
test
sbb
shrb
test
or
test
mov
in
or
xchg
sahf
rcl
push
pusha
test
push
shlb
add
and
adc
sbb
cmc
jo
jne
movsl
sbb
rorb
inc
es
in
xchg
mov
mov
sbb
mov
fidivrs
loope
sub
cs
cmc
addb
sti
fcompl
fsubrl
pop
mov
data16
lds
push
popf
pop
fsubrl
push
sub
mov
inc
int3
xchg
cwtl
insl
das
and
insl
pop
add
cli
push
lods
mov
cmp
lcall
insb
pop
std
frstor
cwtl
data16
test
xchg
pop
lds
sub
inc
arpl
gs
pop
dec
gs
push
vpunpcklbw
adc
lahf
push
xchg
mov
or
push
addr16
enter
lahf
xchg
movsl
stos
hlt
rorl
int3
loopne
jne
inc
imul
pop
scas
in
mov
cmp
jne
push
pop
pop
fdivr
aas
or
push
nop
test
jmp
add
sub
mov
in
jne
xor
sub
mov
xor
cwtl
hlt
inc
fldcw
ds
jle
mov
je
data16
xchg
add
and
lahf
test
push
lret
fmul
clc
jo
jmp
pop
filds
sbb
mov
out
push
popa
pushf
xor
jne
dec
cmp
jmp
fidivs
rcrl
add
xchg
fs
bound
rcrl
cs
push
adc
icebp
pop
mov
ds
inc
cmp
dec
mov
inc
in
xor
and
mov
adc
fld
jae
push
cmp
es
cmpsb
int
jg
fs
xor
jbe
sub
enter
or
test
cs
in
mov
add
mull
xlat
mov
adc
lock
arpl
jno
xorl
sub
loope
mov
test
jp
sbb
movsb
or
gs
add
into
mov
mov
cmp
hlt
mov
stos
mov
jb
adc
shlb
jne
sbb
dec
jnp
mov
mov
inc
in
into
push
lahf
dec
or
cs
jp
into
and
sarl
repz
adc
mov
sub
lds
roll
rorl
jle
cmp
pop
test
popf
mov
inc
inc
sub
mov
lcall
mov
and
jb
loope
je
lret
cld
jl
dec
inc
nop
xchg
jg
in
xchg
pop
mov
adc
loopne
jae
adc
in
into
rclb
aas
insl
scas
adc
dec
fs
movsb
insb
jge
add
clc
sbb
lods
and
sbb
addl
sub
cwtl
adc
out
flds
adc
mov
add
push
inc
or
jle
inc
and
inc
inc
and
lds
scas
dec
dec
add
pop
jl
sbb
inc
adc
mov
jbe,pt
cmc
cmpsl
out
nop
pop
adc
out
xor
dec
test
adc
mov
xor
hlt
addr16
rclb
pusha
mov
jle
outsl
icebp
in
rcl
out
mov
repnz
ror
call
adc
inc
inc
gs
jae
rcrl
mov
xchg
cli
int
mov
add
nop
mov
xor
mov
pop
insl
test
loop
sbb
cmpsb
idivl
cltd
lds
testb
ja
xor
inc
lods
lds
iret
mov
dec
pop
sub
sbb
ret
adc
sti
pop
mov
adc
mov
loop
pop
push
jb
sub
in
and
sbb
insb
stc
xor
mov
xor
jno
push
mov
orl
ds
mov
mov
mov
aad
add
add
cmp
sub
lret
mov
dec
out
fisubs
popa
inc
sti
jno
push
adc
pushl
adc
mov
shlb
adc
mov
push
call
jmp
adc
dec
add
data16
and
xor
mov
add
in
lock
push
push
mov
fwait
mov
push
add
ja
pop
es
sbb
mov
scas
push
lret
mov
push
and
dec
mov
or
scas
outsb
pop
mov
push
aam
daa
and
push
pop
test
xchg
xchg
aad
dec
inc
push
mov
push
rcr
test
mov
adc
aad
or
cmp
outsb
xchg
xlat
shrl
sub
push
sbb
and
int3
jbe
jp
cmp
mov
pop
movsb
mov
adc
shrd
mov
test
adc
cmp
push
and
push
xchg
in
movsb
mov
je
cld
fdivl
push
adc
jnp
popf
mov
and
adc
sarl
out
and
or
lods
xchg
icebp
push
push
in
jo
leave
inc
inc
cmp
lea
push
stos
mov
sub
cmp
adc
pop
cwtl
sbb
jecxz
xchg
push
lret
pop
les
in
sti
insl
sbb
dec
sbb
adc
fs
je
jne
and
dec
lods
push
mov
adc
repnz
inc
adc
sbb
pushf
aaa
call
js
push
push
ret
jnp
adc
sbb
movsb
dec
pop
mov
push
cwtl
adc
add
ss
addl
mov
and
loope
adc
mov
xor
dec
shr
sbb
dec
pop
adc
mov
stos
ret
add
adc
insl
inc
les
rcrl
cld
ret
jge
test
or
xlat
inc
adc
adc
push
dec
call
out
pop
push
mov
pop
inc
addr16
testb
and
mov
mov
cld
jnp
ds
xchg
xor
ret
jae
out
lods
ss
gs
les
adc
into
jnp
adc
mov
fistl
jo
into
jno
jnp
out
les
adcl
xor
test
xor
cmp
insl
jecxz
push
adc
dec
add
lock
sbb
jbe,pt
jp
stc
push
sahf
xor
jnp
cmp
adc
fwait
mov
les
push
and
cld
das
pop
addr16
jl
adc
aam
icebp
jg
pop
in
mov
ret
sbb
jp
xchg
dec
pop
jge
add
imul
sbbl
loopne
nop
movsl
mov
daa
je
adc
inc
xchg
in
add
ret
sahf
mov
push
and
mov
std
pop
sub
jae
mov
lret
test
test
inc
inc
xor
data16
dec
aam
mov
in
idivb
cmc
cmpl
test
mov
xchg
mov
test
adcb
add
xor
sahf
in
sti
and
popf
pop
push
jmp
add
mov
stos
lret
xor
and
and
or
sub
cmpsl
ss
and
aas
cltd
and
out
pop
mov
aad
sbb
nop
daa
and
mov
lds
cltd
or
hlt
jbe
mov
mov
or
aam
in
mov
cs
dec
xchg
mov
or
xor
push
aad
fs
adc
cmc
icebp
ret
push
pusha
jmp
test
jecxz
dec
fs
or
lcall
dec
inc
mov
stos
ja
jo
test
mov
js
jbe,pt
pop
xlat
sub
sti
dec
int3
jnp
dec
stc
call
and
divb
add
movsb
push
loope
xchg
add
sbb
pop
sbb
clc
repz
adc
dec
add
mov
jmp
sub
jp
jle
imul
inc
movl
hlt
sub
insl
adc
addr16
inc
xchg
ja
mov
pop
pop
add
adcl
xor
push
adc
add
xchg
mov
push
and
test
sub
adc
inc
adc
cwtl
and
roll
mov
push
jecxz
nop
adc
adc
inc
mov
outsl
xchg
mov
adcb
lahf
xor
push
push
and
lods
and
adc
pop
loopne
cwtl
adc
popf
jns
adc
xor
repnz
inc
push
sbb
jno
sub
adc
scas
mov
pop
fs
out
mov
mov
ss
mov
popl
sub
cmp
dec
jb
and
js
shrb
cmp
popa
adc
xor
test
mov
xchg
pop
mov
shlb
dec
clc
jl
aam
ficompl
jp
lcall
pop
mov
jae
or
popf
fisubs
pop
sub
rclb
sbb
lods
roll
cwtl
std
push
add
hlt
faddl
pop
das
mov
add
aas
lahf
sti
aam
adc
dec
test
cmp
jp
cmc
push
loop
or
movsb
pop
pop
aas
lods
data16
push
std
inc
jb
push
adc
mov
stos
addr16
adcl
lea
lds
roll
ds
adc
sub
sahf
dec
adc
popf
adc
clc
jg
inc
nop
enter
cld
in
dec
fdiv
test
sub
lods
inc
adc
jb
orl
pop
jmp
jbe
add
movsl
ret
pop
sub
rcll
fcompl
jg
loope
mov
outsl
sbb
cmp
xor
subl
mov
shl
outsl
or
push
adc
js
je
adc
insb
stc
scas
inc
adc
fimull
mov
or
xsavec
mov
jbe
and
mov
sub
and
jo
xor
adc
icebp
lds
and
std
lock
push
adc
sbb
pop
and
hlt
loope
jg
in
dec
sub
mov
pushf
je
and
jns
xor
cmp
xchg
adc
popf
jbe
movsb
adc
imull
sbb
xchg
sbb
call
loope
push
test
adcb
push
sub
les
mov
xchg
pop
sub
test
sub
and
xchg
cmc
push
pushaw
out
pextrw
imul
loopne
add
call
xchg
shll
lret
jl
cs
pop
addr16
popa
adc
xlat
inc
fstl
rcrl
or
adc
loopne
ja
push
pusha
loop
jp
mov
fcoml
mov
mov
ljmp
mov
das
push
cmp
xchg
sahf
mov
adc
sbb
mov
mov
xor
adc
popa
das
push
jno
push
loopne
lock
in
ds
lds
and
xchg
and
or
adc
jnp
loopne
adc
mov
push
mov
aad
adcl
or
arpl
push
xor
sbb
addl
pop
test
jbe
adc
adcb
cltd
addr16
pop
adc
aad
imul
dec
cwtl
loope,pn
mov
dec
add
jecxz
in
dec
sub
cmpsb
mov
or
lea
popf
inc
js
outsb
lcall
adcl
je
add
mov
add
aaa
jns
mov
gs
jecxz
out
pop
or
jmp
or
push
cltd
pop
comiss
adc
and
leave
rclb
pop
pop
call
add
stos
mov
adc
sbb
adc
dec
mov
xchg
sbb
subl
pop
inc
add
mov
mov
dec
addr16
xor
add
sub
push
inc
jge
inc
fidivl
mov
pushl
adc
jmp
adc
insl
cwtl
inc
lea
add
dec
mov
inc
jmp
nop
sub
jge
int3
pushf
mov
data16
mov
fldcw
fisubrs
xor
inc
pop
or
jg
imul
jmp
pop
out
or
fcomps
insl
movsl
jnp
test
pop
popf
push
push
mov
inc
mov
push
loopne
dec
clc
js
stos
and
add
jns
stc
fistps
das
xlat
adc
fdivrl
adc
pop
and
jp
inc
inc
dec
mov
cmp
je
lahf
and
cwtl
std
and
jp
mov
shlb
jg
arpl
adc
pop
in
add
adc
cltd
int
cwtl
push
pop
push
mov
hlt
in
ds
mov
xlat
shll
xor
test
adc
jno
f2xm1
xlat
xor
inc
adc
rcr
and
xor
bound
adc
pop
cmp
outsl
mov
adc
xor
lds
sub
fidivs
ret
ret
gs
inc
sahf
pushf
scas
call
adc
cwtl
enter
dec
inc
insb
andb
xor
push
xchg
xchg
sbb
movsl
sub
stos
es
xor
push
test
and
outsb
enter
pop
add
test
dec
inc
inc
xor
xor
adc
dec
adc
xchg
daa
jp,pn
adc
cmp
popa
insb
adc
xchg
jae
jg
inc
or
dec
sbb
mov
aaa
shlb
inc
adc
aas
out
loop
rcrb
push
sub
adc
sub
sbb
push
adc
pop
lods
sarb
test
in
pop
nop
stos
mov
pop
gs
loop
xchg
inc
inc
out
ds
push
test
mov
adc
jbe
sbb
sub
jbe
cltd
rcll
inc
push
adc
lea
pop
pop
mov
sbb
jge
stos
push
scas
cld
adc
insl
xor
daa
lods
call
adc
mov
push
fcoml
fs
inc
push
loop
cmp
sbb
adc
xchg
test
lods
jnp
jecxz
in
lcall
push
enter
push
dec
adc
das
into
sbb
mov
addl
in
fidivrs
mov
jo
pop
sarb
loop
imul
xor
adc
ret
sbb
fists
mov
sub
or
sbb
mov
lcall
adc
cwtl
rcll
xchg
sub
mov
inc
popf
sbb
jo
data16
out
sub
enter
mov
mov
mov
repz
xchg
mov
dec
lods
adc
out
add
movsl
jbe
or
or
lcall
and
cmpsl
imul
outsl
test
pop
push
rcr
shrl
jb
cltd
cmp
jne
push
mov
mov
std
adc
mov
or
test
mov
jbe
shl
idivl
xor
jb
mov
or
pop
lds
dec
sub
pop
aad
aad
mov
sub
sub
mov
push
push
pop
pushf
out
sbb
jecxz
dec
jne
test
testb
loopne
sbb
je
lock
nop
mov
jb
xchg
mov
aas
outsl
adc
ret
or
and
cmp
es
jge
adc
das
adcb
xchg
stos
les
inc
loopne
dec
adc
mov
inc
dec
adc
mov
fnstcw
jmp
outsl
jl
push
data16
mov
and
adcl
pop
test
ss
push
push
clc
pop
jp
add
leave
inc
xor
sub
mov
pop
cli
cmp
outsl
push
push
andb
xchg
adc
jecxz
adc
xor
rcll
xor
ds
clc
fbstp
and
test
ja
adc
jne
jnp
sbb
xchg
arpl
mov
mov
sbb
jecxz
mov
jo
mov
push
xchg
je
jae
ret
adc
cmpsb
push
xor
push
jo
xorl
lods
adc
inc
sub
mov
and
push
out
in
adc
push
imul
jne
fmull
adc
ja
adc
push
cltd
stos
xor
pop
add
adc
xor
stc
vsqrtpd
xor
xchg
jb
and
sub
adc
scas
lods
pop
stos
adc
pop
sbb
adc
pop
lahf
mov
in
adc
cmp
pop
cld
shl
push
sub
lds
andb
adc
sbb
loope
xchg
push
xor
clc
adc
fisubrl
adc
pop
adcb
jmp
daa
fcoml
ja
jns
lds
push
push
sbb
adc
sub
xor
jbe
xor
test
popa
insb
adc
xchg
into
mov
adc
cmp
mov
incb
popf
add
sub
push
jne
sbb
cli
popf
push
arpl
mov
movsb
pop
dec
frstor
sbb
orl
mov
rcrb
push
lahf
jno
adc
jge
aam
adc
int3
pop
imull
sbb
das
xlat
rorl
xchg
xor
and
adc
push
scas
out
xchg
jb
pop
sbb
pop
cmp
sub
cs
xchg
mov
or
mov
and
aad
adc
dec
mov
scas
shl
inc
mov
and
cmpsl
aaa
addr16
mov
xsaveopt
test
mov
sbb
test
stc
pop
nop
mov
mov
cmc
aaa
test
not
rcrl
lods
jl
test
xor
loope
fsubrs
inc
fcmovnbe
inc
mov
lret
addb
xor
mov
adc
pop
movb
aaa
lea
pop
pop
jg
push
cmpsl
sbb
test
xor
sub
ja
push
pop
ds
call
mov
cld
push
mov
pop
pop
scas
jno
cwtl
sub
fld
ret
pop
aaa
cwtl
push
js
or
and
inc
adc
rcll
lock
addr16
inc
jne,pn
je
sbb
fcomps
fs
mov
mov
mov
xchg
mov
mov
movsb
pop
imulb
pop
pop
cmpsl
in
dec
xchg
dec
scas
shrl
mov
push
sub
lcall
iret
mov
cmc
int3
leave
push
cltd
in
dec
out
in
push
ja
ret
and
aad
inc
mov
aad
test
aaa
mov
fldcw
daa
mov
cmp
inc
xchg
clc
inc
xorb
xor
shrb
adc
add
mov
out
and
test
test
leave
dec
fists
push
mov
cmp
mov
imul
cs
and
je
xor
mov
out
clc
lret
push
call
mov
and
rcl
sub
jb
pop
push
xchg
adc
gs
in
xchg
add
mov
ret
jmp
xchg
cmpsb
inc
lret
movsl
xor
repz
dec
iret
add
inc
daa
push
es
push
mov
add
push
repz
sbb
aam
ss
imul
movsl
xchg
leave
or
rcrl
adc
xchg
pop
xchg
push
test
jb
push
out
inc
sbb
xor
divl
sub
lods
xchg
adc
gs
adc
out
test
dec
hlt
mov
lds
push
addr16
in
xor
mov
inc
adc
in
or
daa
rol
fs
lods
mov
xchg
push
mov
adc
xchg
mov
notb
pusha
sub
push
jmp
shlb
and
pop
rol
rolb
pop
xchg
mov
test
mov
mov
mov
sub
popfw
loope
or
scas
sub
cld
leave
lds
fdiv
cmpsb
nop
xchg
addl
and
fistpll
sarb
cltd
push
adc
inc
loopne
adcb
jnp
xchg
lds
inc
inc
aas
aaa
sub
movsl
xchg
int3
loope
mov
push
inc
xchg
add
and
sbb
test
inc
dec
jne
inc
roll
xchg
nop
sahf
imulb
imulb
ret
movsl
out
pop
gs
xor
outsb
out
int3
inc
test
jle
scas
xchg
pop
movsl
jb
arpl
xchg
dec
push
inc
lcall
and
sbb
pop
mov
mov
jo
pop
cs
aaa
push
xor
sub
cs
xchg
stos
and
xchg
cmp
mov
lret
pop
outsl
ja
pusha
pop
clc
es
xchg
enter
mov
push
cmp
xor
aad
cmc
jnp
mov
xor
sub
xor
movsl
adc
in
push
cmc
push
xchg
mov
cltd
mov
cwtl
in
gs
js
push
adc
popf
movsl
in
mov
daa
or
daa
or
mov
xchg
mov
lods
push
mov
add
and
notb
push
jecxz
cmc
test
loope
xchg
fisubl
push
jbe
shll
in
and
fisubl
es
cmpsb
jne
aad
and
and
enter
aad
cmp
mov
stos
adc
stc
dec
sbb
daa
jo
mov
mov
stos
aad
xchg
mov
cwtl
mulb
push
inc
arpl
cmpsl
bound
jg
test
daa
cmpsl
mov
icebp
cmc
cmpsb
lret
aad
aad
jge
push
cmp
pop
leave
xchg
lods
cltd
out
jmp
xchg
in
xchg
and
and
mov
fwait
imul
inc
iret
popa
lods
insb
dec
adc
out
ja
add
ja
push
xchg
ja
popf
loope
pop
lds
ja
bound
out
sbb
mov
inc
insb
leave
inc
test
add
adc
push
mov
adc
mov
repz
adc
adc
xor
add
push
or
aas
icebp
filds
sub
movsb
das
pushaw
sub
loope
jne
orb
in
aaa
movsl
aaa
call
fbstp
or
roll
xchg
adc
xchg
adc
aam
lock
lret
and
and
outsb
xchg
sub
stos
es
filds
add
out
adc
mov
and
lock
inc
sbb
inc
add
fbld
cmp
bound
sbbb
lods
pop
xor
mov
xchg
bound
mov
push
xor
iret
push
aad
lock
cmp
and
int
mulb
ret
enter
push
dec
in
or
imul
lds
mov
shll
aas
rolb
clc
sub
add
sbb
and
filds
inc
mov
push
xchg
dec
mov
jae
dec
xchg
cli
sub
pop
es
cwtl
in
mov
loop
mov
fsubrs
in
mov
push
cwtd
xlat
aad
shll
test
outsl
dec
and
lret
cltd
adc
xor
dec
ljmp
cwtl
stos
jmp
add
inc
xchg
sahf
stos
movsl
push
mov
xchg
shlb
pushf
lret
div
jecxz
shlb
cs
mov
xchg
jno
andl
or
nop
sbb
jp
leave
enter
xor
sub
test
fsubr
push
xchg
es
jl
push
dec
or
dec
push
pushf
and
data16
pop
xchg
jb
adc
loope
sbb
adc
jecxz
inc
add
push
ret
jne
lret
mulb
cmc
jb
pop
addr16
xchg
fists
dec
jle
cmc
sub
mov
ss
arpl
cmp
add
lods
es
gs
sub
fsubp
push
aad
cmp
imul
ss
dec
cmp
ja
add
outsl
pop
pop
es
jmp
push
insb
flds
cmpsl
test
hlt
bound
sbb
nop
and
jg
mov
adc
xor
adc
addb
mov
dec
bound
shr
or
stc
stos
push
into
pop
mov
pop
negl
lea
sbb
in
shrb
mov
test
sbbl
int3
push
outsb
adc
iret
adc
dec
inc
movsbl
movsl
neg
clc
adc
pop
gs
sahf
adc
fsubrl
add
scas
pop
jb
adc
pop
stos
addb
add
dec
das
jb
cld
lods
adc
out
jbe
into
jne
push
xor
sub
lcall
lods
lock
in
pop
adc
daa
repz
mov
in
cmp
out
and
lock
mov
sarl
test
push
pop
jno
sub
pop
outsl
data16
andl
pop
jb
push
cmp
int
and
lcall
xor
insb
xchg
add
cmc
std
sub
pop
adc
sbbb
adc
cmp
iret
and
mov
inc
adc
or
xchg
ja
in
addr16
lcall
xchg
xchg
adc
sbb
dec
jbe
les
sub
sahf
push
adc
iret
sbb
lahf
add
aad
and
mov
xor
popa
sub
arpl
iret
cs
mov
cmc
mov
test
aam
fsts
out
or
iret
imul
cmc
and
mov
jg
mov
test
push
outsl
pop
and
and
leave
out
movb
hlt
push
shlb
cmp
sub
adc
enter
cmp
dec
or
shlb
jae
shlb
dec
rcll
lret
or
js
mov
xor
clc
lea
mov
std
sbb
mov
ret
jne
mov
xchg
js
jbe
rep
jmp
push
shrb
fs
lret
cwtl
in
or
push
and
add
mov
pop
stos
cmp
jg
shrl
pop
rol
addr16
cltd
test
xchg
int3
test
and
inc
test
stos
es
and
push
pop
xchg
repnz
jno
scas
xor
out
inc
jmp
dec
js
pop
mov
icebp
mov
xchg
hlt
mov
mov
jmp
jmp
daa
xor
daa
testl
aaa
sub
imul
jmp
push
mov
and
jmp
and
xor
jne
shrl
insb
aad
xchg
and
jno
mov
push
test
lret
mov
test
mov
sti
xchg
jmp
add
sub
sahf
xorl
data16
fs
std
add
lock
mov
js
xor
in
loop
test
add
ss
sub
and
out
ret
cs
out
ss
dec
sub
lret
pusha
xchg
sub
jmp
mov
sub
daa
fcoms
lds
jle
mov
cs
pop
aaa
je
pop
sahf
and
je
pop
mov
icebp
push
rcrb
in
xchg
jmp
lahf
sahf
dec
pop
push
sbb
scas
sbb
sub
mov
adc
orb
sub
cmp
jne
sbb
and
mul
outsb
cmp
sub
imul
es
push
lcall
sbb
sub
fwait
pop
sub
pop
jne
adc
xlat
mov
sbb
and
push
inc
adc
inc
hlt
aad
in
mov
sub
lret
inc
sub
jnp
mov
addl
stos
inc
mov
ss
push
fdivrs
lds
out
add
test
aas
inc
or
adc
cmp
shrl
int
sbb
orl
add
ja
mov
push
sub
and
xor
or
xchg
push
fwait
push
and
mov
push
mov
cmpsl
and
jbe
pop
mov
sti
dec
add
jbe
or
mov
sahf
nop
cmpsl
jne
cli
arpl
add
fs
mov
testb
pop
adc
jp
gs
and
add
xor
sub
aaa
adc
pop
ja
mov
std
add
xchg
lods
lahf
adc
and
jg
fisttpl
in
mov
sarb
sub
or
outsb
and
pop
test
jb
xor
jo
stos
push
adc
out
in
lds
divl
mov
xchg
js
adc
mov
xchg
adc
out
sub
push
mov
adc
fldt
sbb
or
ss
jle
ljmp
sti
sbb
jl
inc
ds
mov
movsb
nop
sahf
aad
mov
push
cmp
frstor
testb
adcl
adc
inc
mov
dec
inc
or
clc
lock
jb
push
sarb
adc
stos
sbb
and
addr16
lea
inc
and
mov
pop
jns
fstl
push
or
cmp
fnstenv
xchg
mov
adc
aam
mov
jecxz
or
adc
xlat
sbb
lods
sub
lods
les
test
nop
sub
add
movsb
stc
pop
lods
fmul
sbb
pop
sub
ja
pop
pop
mov
xchg
rorl
add
mov
daa
into
and
inc
outsl
and
ljmp
xor
gs
inc
bound
adc
testl
out
repnz
inc
add
aas
and
cmpsl
bnd
mov
lods
xor
and
ljmp
and
ja
xor
push
loopne
jp
rcl
jns
out
adc
repnz
test
jg
sub
shlb
in
iret
jnp
enter
mov
xorl
sbb
sti
inc
movsb
icebp
adc
cltd
pop
mov
adc
loope
sub
adc
fnstsw
movb
adc
test
or
pop
icebp
adc
cld
jae
cmp
jb
pop
outsl
push
ss
fdivl
nop
outsb
push
inc
adc
add
test
sbb
adc
pop
incl
adc
into
inc
out
shlb
shrb
xchg
insb
adc
stos
sub
xor
test
or
loop
jne
pop
add
mov
adc
add
and
pop
jmp
pop
pop
sub
imul
xor
pop
cld
in
scas
mov
bound
xor
add
jbe
daa
jb
cmp
push
sbb
sub
xchg
or
test
push
mov
inc
jle
jo
mov
adc
fidivl
fiadds
mov
das
roll
pop
enter
sbb
push
ret
mov
scas
fs
adc
in
icebp
int
adc
lret
les
mov
mov
xorl
xlat
cmpsl
mov
fldcw
add
loop
jns
rcll
ljmp
ss
adc
nop
dec
pop
adc
lods
sbb
dec
andb
test
fs
xchg
sbb
aas
dec
testb
jo
cmpsl
jbe
and
arpl
add
sub
and
addl
repnz
cli
stc
cmp
or
subl
mov
add
push
shld
xchg
pop
clc
adc
out
sub
adc
orl
adc
sub
dec
int
cmp
or
add
adc
xor
cmpsl
adc
mov
dec
insl
adc
js
mov
pushf
unpckhps
xchg
cmpsb
cmp
jmp
or
push
mov
pop
out
sub
lahf
rcll
pop
and
cwtl
rorl
inc
inc
adc
aas
sbb
adc
movsb
or
pop
mov
sahf
arpl
cltd
test
jg
aaa
fwait
outsl
adc
mov
out
xchg
and
mov
jp
rcrl
mov
aas
adc
outsl
sub
out
or
pop
adc
dec
enter
orl
add
mov
or
je
pusha
pop
adc
and
jae
test
or
jo
jge
mov
bound
and
cwtl
adc
lods
out
cmpb
push
lahf
dec
insb
push
cmpsl
lock
add
jb
jnp
jp
gs
fs
pusha
rclb
sub
push
orb
mov
mov
lds
sarb
adc
roll
add
subb
push
test
scas
jns
stos
adc
dec
mov
adc
push
pop
lahf
xor
ret
mov
notb
push
ficoml
sbb
push
and
add
ja
mov
jp
pop
scas
mov
jbe
cld
sub
loope
xor
adc
mov
or
sbbl
lahf
loope
aad
rcr
inc
pop
sub
adc
fildl
test
and
movsl
cmp
inc
pop
jbe
je
insb
push
lds
sbb
and
jbe
push
out
adc
ljmp
jno
jae
adc
stos
stc
mov
lret
adc
pop
and
xchg
and
data16
cmpsb
add
aad
push
sub
pushf
sbb
movsb
sub
dec
aam
adc
or
adc
pop
es
adc
xchg
lock
sbb
adc
mov
dec
ja
outsl
mov
sbb
out
ret
fsqrt
adc
add
inc
xchg
pop
dec
adc
nop
adc
lock
push
mov
loop
push
xchg
mov
dec
xchg
addl
pusha
xchg
test
push
loopne
mov
test
ljmp
cmp
icebp
out
xor
jg
sub
xchg
adcb
loopne
hlt
xlat
inc
jns
push
xor
pusha
pop
stos
fldenv
add
mov
adc
jge
pop
pop
test
fistpll
int
push
pop
add
insb
in
adc
jbe
mov
std
shrb
insb
pop
ret
cmpsl
addr16
xor
sub
lahf
rcrb
sti
adc
inc
inc
pop
shlb
adc
aad
jns
adc
ret
cld
jb
xchg
rorl
xor
ficomps
aas
nop
call
push
movsb
push
int3
inc
push
mov
mov
pop
out
xor
sub
xchg
aas
dec
jecxz
sub
int3
add
push
xchg
fisubs
mov
rorl
push
mov
idiv
xchg
mov
inc
test
mov
xchg
push
movsl
cld
sub
data16
int
mov
outsl
mov
cmp
repnz
insb
daa
jmp
icebp
movsl
sub
and
in
loopne
xchg
movsb
cmp
fs
mov
ret
jmp
xor
testb
inc
inc
adc
fstps
dec
je
jl
sub
cmc
sub
lret
jae
sbb
popf
xchg
jecxz
add
or
adc
notb
mov
push
cmpsb
jg
pop
fdivp
inc
jb
iret
and
jae
ss
outsb
xor
adc
and
cmc
jecxz
je
mov
sub
mov
or
sub
bnd
mov
jne
loop
xchg
sub
mov
xlat
pop
enter
mov
inc
push
inc
pop
push
or
inc
lods
xlat
push
hlt
es
movl
das
mov
jge
cmp
in
icebp
pop
rol
mov
mov
sbb
cmpsl
and
add
test
adcb
jo
movsl
loopne
or
inc
aad
mov
xor
popa
adc
cmpsl
push
sub
push
inc
inc
sub
std
js,pt
add
in
mov
subb
sub
test
adcb
mov
rcl
xchg
pushf
test
pop
sub
pop
inc
add
cmpsl
xchg
cmc
enter
inc
mov
shlb
xor
scas
jne
addr16
ror
cmpsl
aas
or
lahf
ret
push
add
push
cld
insl
lods
inc
mov
call
mov
add
jecxz
and
or
aas
add
pop
mov
out
xchg
ss
xchg
out
pop
xchg
adc
sarb
or
lods
push
mov
cmc
mov
lods
adc
test
testl
mul
dec
or
cmpsl
movsl
push
repnz
addr16
xor
dec
jg
add
xchg
iret
test
rolb
or
jb
aas
sub
and
mov
ss
jbe
sti
ja
movsl
cmp
imul
out
shlb
cmp
inc
out
push
cli
xor
push
icebp
cmp
inc
push
int
adc
push
scas
out
insl
mov
loopne
movsb
test
push
ja
cmp
inc
or
cmp
mov
aad
xchg
inc
in
sbb
test
stos
int3
pop
in
xor
cld
aam
aad
dec
push
insb
and
add
inc
sbb
xchg
lret
dec
xchg
ds
pop
mov
sub
into
sub
adc
test
jne
add
sub
sahf
mov
insl
js
push
sub
mov
sbb
jo
ja
xchg
das
ficoms
dec
cmpl
aaa
mov
cmp
push
pop
jle
hlt
xor
popf
test
movsb
dec
mov
xor
mov
push
sbb
push
out
les
add
fcmovnbe
mov
rolb
and
mov
repz
in
jns
push
cmpsb
cmp
xchg
movsl
sbb
es
and
xchg
stc
and
lea
add
push
or
mov
rolb
cld
cmp
stc
sbb
mov
cmpsb
out
push
test
rcll
xor
adc
push
rcrl
mov
sub
pop
xor
dec
pop
sub
aam
testl
popa
fcmovnb
mov
lock
fiadds
jmp
and
pusha
jne
adc
pop
cmp
inc
out
jne
fcoml
addr16
adc
loopne
call
out
shr
add
stos
adc
sbb
sbb
and
xor
or
adc
inc
xchg
or
jae
hlt
xlat
mov
test
shl
ret
mov
inc
adc
pusha
cli
inc
adc
ja
sbb
bound
fiaddl
dec
add
mov
cld
mov
mov
pusha
insl
xor
mov
fisttps
adc
mov
imul
in
sarb
movq
adc
pop
dec
push
ds
push
jl
dec
jp
movsb
or
fcompl
cmp
idivl
arpl
adc
pop
pop
mov
and
jno
mov
out
test
and
mov
add
push
pop
iret
shl
adc
xor
addr16
cltd
and
add
push
aad
cmc
pop
pop
leave
cmc
adc
xor
and
xchg
pop
popf
add
adc
and
lods
push
and
lock
je
adc
sub
pusha
movsl
adc
cmpsb
adc
adc
test
into
mov
mov
sysret
xor
inc
sbb
adc
dec
and
or
fwait
cmp
aas
pop
adc
dec
roll
push
arpl
jmp
sahf
pushf
fcoml
leave
or
imul
test
adc
pop
push
xor
pop
fsubl
mov
aas
inc
cmpsb
jmp
adc
jnp
outsl
dec
adc
das
jg
into
imul
sti
adc
push
je
and
xchg
or
insb
adc
xor
shl
inc
test
pop
sub
mov
repz
in
add
sub
loopne
imul
mov
cmpsb
or
scas
add
adc
int3
jno
xchg
pop
out
jmp
fstps
imul
pop
inc
add
adc
dec
pop
push
inc
adc
fs
movsb
fisubl
sbb
sub
sbb
adc
xchg
scas
cmp
adc
push
mov
inc
or
pop
pop
sbb
adc
pusha
xchg
test
xor
sub
adc
or
xchg
test
loopne
jae
cs
pop
mov
in
adc
or
imul
je
sahf
aas
mov
sub
outsl
add
push
or
and
hlt
insb
imul
cmpsl
pushw
push
call
lds
sub
popa
adc
adc
sbb
xor
xor
mov
jmp
jecxz
pop
sbb
inc
scas
loopne
dec
adc
in
push
adc
and
mov
sub
aam
xchg
lock
dec
movsb
push
ret
lds
add
fs
movsl
jnp
or
cwtl
lcall
cmp
push
imul
into
data16
pop
iret
flds
mov
aaa
and
pop
ret
xchg
jae
pop
aas
adc
shrd
dec
mov
movsl
iret
pusha
jp
sub
fdivs
mov
dec
adc
and
lds
inc
cmp
lods
push
jl
adc
xor
shll
inc
arpl
push
mov
int3
pop
iret
and
addl
cld
sub
nop
inc
dec
adc
enter
lds
into
sbb
cmp
js
pop
sub
xchg
xor
and
adc
rol
xchg
scas
adc
in
ds
mov
lcall
in
pop
or
jmp
movsl
aas
lahf
add
adc
jae
adc
sub
lds
lods
lret
arpl
dec
aad
mov
repz
addr16
pop
in
push
das
lods
outsb
jae
jp,pt
into
mov
popl
add
adc
repnz
jbe
adc
jg
popf
in
test
inc
pop
andb
mov
pop
pushf
lret
adc
mov
jbe
imul
lds
lret
stos
lock
popa
das
notb
dec
mov
cmpsb
or
mov
push
aad
jae
xor
outsb
xchg
sbb
mov
dec
scas
mov
sub
aam
sahf
mov
lret
negb
insl
enter
ljmp
mov
sub
mov
sub
loopne
inc
sub
push
imul
lds
jmp
push
les
icebp
shlb
push
in
xlat
int3
imul
pop
loopne
xorb
int3
les
adcl
andb
mov
sbb
mov
inc
xor
add
cltd
movsl
lret
add
xor
fnstenv
sub
roll
mov
fucomi
out
and
and
rclb
movsl
leave
test
repz
xchg
scas
jmp
sub
push
mov
mov
movsl
std
pop
add
xchg
add
xchg
cmc
pusha
in
mov
and
mulb
xchg
in
and
jecxz
rcrb
lods
mov
enter
in
push
adc
out
iret
push
xlat
nop
mov
sub
das
and
leave
subb
pusha
enter
ja
aas
cmp
addr16
pop
jmp
shlb
push
inc
or
or
inc
push
hlt
es
pop
mov
or
mov
cmpsl
sbb
arpl
rcrl
std
adcl
sub
loope
shl
sub
cmc
movsl
jne
je
and
test
shlb
push
add
add
and
xchg
leave
mov
ja
jno
ror
or
lods
push
dec
out
cld
ficomps
jge
mov
adc
pop
es
pop
scas
test
or
pop
mov
add
test
pop
outsb
mov
cwtl
mov
xchg
jo
test
sub
pop
and
cwtl
mov
or
mov
xor
sub
imul
add
stos
sbb
mov
or
cli
inc
push
pop
cmp
mov
popa
movsb
loop
xor
jmp
test
jge
xchg
adc
stc
call
mov
fadds
pop
and
scas
xorb
dec
or
ret
xchg
mov
jge
mov
addr16
push
cmpsb
popf
or
popf
cltd
xor
sub
pop
mov
adc
daa
mov
mov
loopne
push
add
fwait
mov
push
jae
mov
decb
int3
cs
and
lock
cmp
fldenv
pop
push
ss
mov
dec
adc
test
popa
cmpsb
jmp
pop
sahf
add
mov
xchg
jmp
cmpsl
inc
push
leave
rcrl
pop
sbb
in
add
enter
jne
jae
out
dec
out
into
dec
cmpsb
xchg
adc
addr16
in
je
aaa
dec
cs
cmpsb
xchg
out
mov
jmp
daa
arpl
push
out
loopne
add
nop
mov
add
xlat
stc
jne
addr16
ja
cmp
mov
je
int3
xchg
dec
mov
cmp
es
adc
or
pop
adc
mov
movl
icebp
mov
sub
add
jo
add
dec
dec
subl
jmp
fmulp
or
mov
jecxz
mov
je
pop
xor
lahf
or
xlat
xchg
mov
nop
mov
or
xor
popa
adc
or
and
mov
lea
data16
adc
sti
in
lret
jns
mov
mov
popf
es
ss
gs
sub
aam
cmp
jge
test
insl
rcll
add
inc
adc
aaa
pushf
out
leave
mov
and
movl
stos
sahf
ljmp
nop
push
jle
iret
or
loope
jnp
mov
lds
in
movsb
leave
and
cmpsb
jl
xchg
lods
inc
aam
mov
enter
fs
lea
push
in
out
mov
dec
pushf
mov
mov
in
pushf
mov
jecxz
mov
push
in
movsb
ss
sbb
inc
nop
mov
xor
jmp
cmp
mov
or
daa
and
ds
mulb
sub
sbb
mov
ja
mov
mov
dec
hlt
mov
xchg
and
aad
bound
std
jmp
hlt
pusha
enter
push
cmc
outsl
cmc
in
xchg
test
in
in
jge
xor
lahf
std
push
add
lret
add
out
icebp
fcoml
xchg
and
int3
fs
mov
sahf
das
cltd
mov
jne
sub
or
cmp
sub
int3
insb
push
xor
ss
xchg
mov
push
mov
data16
out
inc
push
cmp
add
push
sbb
sub
test
mov
int3
adc
mov
xchg
mov
push
pop
ds
jbe
inc
xor
iret
sub
movd
aad
adcl
sub
insl
popa
jle
sub
inc
xchg
lahf
add
mov
ret
lods
aad
in
xchg
test
cmc
lahf
xchg
aam
notb
sbb
sbb
xor
movsl
aam
sbb
xlat
push
ret
push
icebp
aad
in
pop
inc
add
sti
not
ret
pop
jl
ljmp
push
div
xor
or
sbb
stc
sbb
movsb
test
add
jns
cmp
push
adc
and
insl
or
popf
es
push
and
mov
aad
xor
mov
sub
lahf
xor
cmpb
nop
movsl
xor
push
ss
jge
loopne
je
and
add
or
push
inc
push
sbb
aaa
add
mov
sahf
test
or
daa
jbe
mov
mov
xor
mov
sub
or
daa
lahf
gs
js
jecxz
mov
push
in
sbb
sub
xor
inc
or
mov
mov
mov
or
gs
in
jecxz
enter
mov
aas
xchg
test
lods
push
cmc
fidivrs
and
scas
gs
arpl
leave
leave
lods
aad
fs
mov
pop
cltd
push
xor
cmpsl
add
movsl
cmp
xlat
pop
hlt
mov
push
dec
mov
push
xorl
ljmp
stos
shll
lcall
xchg
jmp
fdiv
in
dec
pusha
mov
and
test
push
in
xor
enter
and
testb
mov
shlb
mov
and
fwait
ret
cmpsb
cli
push
jl
adc
add
jb
or
shrb
sub
mov
lea
mov
jns
nop
inc
jge
leave
push
push
cmc
mov
cmp
notb
sbb
inc
nop
push
or
mov
rorb
outsl
adc
cmp
lods
out
in
andb
inc
ss
movsl
test
push
and
and
push
out
and
add
fs
jmp
jnp
rolb
stos
ss
bswap
subb
push
arpl
lcall
stc
and
adc
adc
jmp
mov
data16
xor
imul
ret
pop
out
mov
addb
lds
mov
pusha
gs
mov
iret
cmc
es
cmpsb
stos
jne
test
dec
fwait
mov
iret
mov
popa
cmc
add
cmp
dec
mov
xchg
call
loope
pop
sbb
neg
mov
daa
jbe
outsb
movsl
jmp
test
popf
pop
hlt
cltd
mov
pop
pushw
pop
in
aad
enter
daa
shlb
jmp
es
xor
dec
xor
imul
xor
loope
pop
daa
enter
jp
lcall
push
loop
mov
mov
dec
test
push
loope
and
sbb
pusha
iret
add
xchg
push
push
mov
in
jb
add
push
enter
rcl
mov
testb
mov
movsl
jmp
xchg
inc
lods
in
in
cs
insb
mov
ret
aad
je
jnp
dec
ja
push
cld
icebp
or
testl
dec
push
sbb
inc
push
sub
jb
and
inc
dec
inc
inc
and
xchg
adc
cltd
cmpsl
ss
xor
aad
inc
sub
mov
out
xchg
and
test
ret
jbe
rolb
pop
ds
mov
rorl
xlat
daa
mov
movsl
inc
or
mov
shll
inc
cwtl
jb
and
add
inc
shrb
mov
test
push
push
pusha
pop
lods
movsl
push
xor
adc
subb
pusha
fs
push
inc
adc
stos
xchg
sahf
cli
outsb
mov
fsubl
cs
into
xchg
mov
inc
iret
test
pop
pop
pop
arpl
sahf
mov
addr16
xchg
mov
stos
mov
in
bound
sbb
adc
outsl
test
push
jl
inc
inc
add
mov
pop
inc
xchg
clc
test
rorb
aad
sbb
in
jmp
sbb
push
or
in
cltd
xchg
and
sbb
pop
test
shll
cld
fld
es
notb
stos
insl
sti
push
inc
fcomip
pop
movsl
lahf
pop
ss
popa
ret
nop
lds
jecxz
in
out
jne
bound
hlt
mov
loope
scas
push
test
dec
adc
pop
into
push
sbb
cmpsb
mov
dec
jg
ficomps
outsl
enter
fnstenv
jne
test
add
mov
mov
std
mov
stos
push
xchg
jno
std
daa
mov
mov
push
xor
push
stc
ds
inc
hlt
icebp
mov
lret
and
dec
aad
aad
lds
sbb
cmp
jne
or
popf
cmp
sarb
cmp
lock
add
ss
jo
mov
mov
xchg
out
movsl
imul
and
xor
xchg
xor
jmp
pop
xchg
jmp
jle
ss
mov
nop
xchg
int
add
out
jmp
mov
xchg
lods
adc
push
pop
arpl
loopne
or
sbb
das
sub
cs
aam
arpl
push
pop
xchg
or
and
xchg
mov
or
jns
lds
test
pop
iret
fucomi
fldcw
cmpsb
daa
mov
jge
leave
jns
xchg
xlat
mov
mov
cs
loope
scas
ja
adc
arpl
ffreep
and
sub
cmp
lock
in
lds
mov
mov
lret
cmpsl
sub
gs
cmc
xchg
mov
jne
mov
cmp
aas
lods
mov
test
lahf
pushw
mov
dec
cli
xchg
cli
jne
mov
pop
mov
sbb
mov
lds
out
lcall
xchg
out
lea
push
leave
sbb
gs
cli
test
and
push
out
xchg
dec
es
fisttps
push
xchg
iret
sti
cs
jbe
stos
xchg
dec
pop
pop
es
xchg
mov
xlat
das
lea
loop
push
pop
movsb
xor
mov
jp
push
cli
cld
jl
movb
push
movsl
pop
mov
notb
outsl
fimuls
dec
push
loop
add
push
jb
mov
into
push
jle
inc
jg
repnz
dec
adc
add
in
sbb
fs
cmc
in
inc
in
and
divl
pop
jnp
push
lds
dec
gs
xchg
dec
push
xor
int
movsb
gs
out
mov
push
dec
adc
sbbl
dec
data16
pop
push
xor
mov
pop
pop
push
cmpsb
cltd
lds
in
cmpsl
incb
sub
fdiv
xchg
sahf
pop
pop
out
jne
inc
inc
xlat
mov
dec
es
xchg
sahf
or
imul
lods
mov
xor
adc
mov
gs
es
xchg
adc
and
pushf
lret
pop
hlt
out
cmpsl
loopne
rolb
repz
aaa
xor
and
outsl
daa
or
cmc
jg
xchg
fsubrs
and
leave
fstl
gs
pop
cmp
fsubl
mov
int3
mov
xor
dec
sub
leave
ljmp
cmpb
xor
test
rcll
mov
xchg
insl
mov
cld
adcl
mov
mov
ss
test
xchg
ljmp
add
jne
in
insb
sbb
gs
aad
mov
adc
mov
dec
and
pop
rep
dec
dec
fnstenv
js
loopne
lea
xor
rorl
enter
add
mov
sub
xor
imul
enter
push
mov
and
movsl
or
add
int
in
test
movhps
lcall
or
loopne
pop
loop
movsl
fisubs
cmp
hlt
ret
and
clc
lods
mov
xchg
ret
jecxz
neg
rcrl
xor
out
push
mov
push
call
inc
ret
fs
adc
push
push
iret
in
pop
xchg
ds
in
push
add
cmp
and
mov
jecxz
mov
repz
push
cld
fldt
adc
loop
jbe
inc
test
xchg
dec
test
inc
lahf
stos
les
pop
in
dec
stos
leave
pop
xlat
test
int3
clc
es
sub
sub
or
add
aad
mov
xadd
add
xchg
or
js
sub
add
stos
lret
popl
test
iret
adc
pop
add
inc
cmp
push
testl
mov
cli
sub
adc
push
jns
and
cmpsl
sub
es
jb
call
jp
iret
ss
jnp
iret
call
pop
lea
jbe
pop
sub
testl
jnp
cld
in
sbb
fwait
out
or
stc
dec
jne
mov
clc
mov
pop
xor
jmp
sub
stc
mov
daa
movsb
fwait
mov
xor
xchg
fldenv
imul
push
pushf
cli
ja
sbb
std
jae
pop
aad
into
repz
test
dec
sub
lret
push
mov
dec
mov
jp
adc
or
and
jbe
adc
and
inc
fildll
or
andb
mov
shll
jbe
mov
daa
enter
jmp
imul
lret
cmp
fiaddl
mov
pop
cmc
xor
sub
mov
in
sub
cmp
pop
xlat
es
pop
test
mov
mov
xor
inc
movsl
lock
dec
jecxz
adc
mov
mov
cld
add
es
xchg
lret
sub
insl
and
jle
iret
mov
out
cmp
outsl
mov
sub
adc
aaa
or
lea
add
push
and
push
js
mov
loop
mov
jae
xor
into
xchg
inc
adc
push
pop
xchg
aas
cld
jmp
lahf
push
aam
adc
stos
out
adc
shll
fsubrs
add
jl
in
pop
adc
xchg
adc
jns
jnp
test
sbb
and
inc
inc
imul
fs
adc
cld
sbb
repnz
lea
out
lods
lahf
sub
imul
rcll
loop
push
and
mov
jnp
das
cmp
test
mov
xchg
or
jns
adc
push
nop
lods
pop
xchg
iret
test
pop
mov
addr16
imul
insb
and
ds
sbb
jbe
imul
dec
cmp
in
xchg
adc
aaa
and
call
dec
neg
fdivl
jno
sub
xor
adc
icebp
outsl
adcl
adc
test
shl
adc
lock
mov
pop
dec
pop
add
ficompl
adc
cld
mov
sub
mov
out
frstpm(287
inc
out
gs
add
pop
pop
jbe
adc
xor
sbb
std
out
aam
sbb
add
sub
xchg
test
sub
ret
imul
jmp
rclb
push
mov
in
add
ret
sbb
dec
sahf
sub
and
cmc
mov
hlt
inc
pop
jg
repz
pop
jle
adc
add
ss
xor
movsl
and
sub
fdivrl
inc
lds
loop
pusha
pop
push
mov
xor
xchg
imul
mov
andb
or
adc
inc
sub
out
test
inc
shll
or
xchg
adcl
xchg
adc
sbbb
sbb
data16
mov
scas
pop
dec
stos
adc
jecxz
xorl
push
push
mov
adc
sti
bound
dec
xchg
movsb
lahf
or
leave
inc
vandpd
int
hlt
mov
push
xchg
nop
adc
sub
icebp
mov
adc
fadd
daa
push
sub
xchg
cmc
and
test
ss
dec
test
mov
push
jnp
repz
lods
fs
adc
jae
mov
adc
popa
xor
addr16
aas
jb
test
cmc
daa
jl
arpl
and
loope
sbb
mov
xlat
pop
adc
sub
inc
xchg
pop
icebp
pop
mov
xchg
xor
adc
and
aas
divl
pushf
and
fcoms
shlb
aam
sbb
push
inc
cwtl
mov
mov
aaa
jl
xor
mov
mov
sub
cmp
jne
add
setp
call
sub
dec
xchg
das
xor
movsb
test
jbe
sub
xor
je
loopne
fidivl
test
and
sbb
adc
ret
js
rcll
clc
add
sti
lods
arpl
repnz
and
sub
push
or
pop
sub
jp
mov
and
dec
jge
cmp
mov
jo
gs
sahf
into
or
pusha
pushf
inc
jno
enter
mov
insl
or
shll
fisubl
ret
hlt
pop
inc
sbb
inc
inc
adc
jl
stc
mov
mov
or
testl
adc
and
vmovups
push
rclb
adc
xor
inc
or
or
loop
outsl
pusha
add
adc
mov
mov
pop
pop
mov
adc
push
rol
jnp
jae
pop
out
sbb
pusha
popl
clc
jecxz
adc
cwtl
mov
imul
add
xor
incl
dec
test
cmpsl
rcll
inc
adc
into
adc
mov
scas
test
jae
daa
hlt
pop
adc
bound
sbb
add
cmp
dec
adc
xlat
dec
test
cmp
icebp
pushf
xchg
mov
iret
or
jae
daa
ja
adc
pop
sbb
add
adc
lds
pushf
sahf
lahf
cmp
jb
and
sbb
fwait
les
mov
fwait
loopne
jle
ljmp
or
adc
jne
and
adc
ret
scas
push
lock
jb
mov
pop
push
scas
mov
addr16
inc
cmc
mov
rep
xchg
pusha
insb
and
mov
inc
add
fwait
xor
xchg
xor
pop
sub
push
inc
ret
xchg
pop
arpl
mov
lret
or
push
adc
push
xlat
loopne
adc
xchg
xor
je
add
fcompl
sbb
or
mov
cli
in
mov
mov
push
or
pop
dec
xchg
filds
and
and
and
imul
sbb
mov
mov
xchg
pushf
cmp
mov
inc
or
repnz
sub
js
sbbl
add
and
loope
or
sahf
adcl
jbe
pusha
xchg
or
data16
sub
push
mov
jae
mov
adc
mov
testl
fidivl
in
jbe
sbb
push
fs
and
lods
adc
in
pop
jg
cmp
aas
into
lds
adc
xchg
pop
scas
ret
test
sub
mov
inc
or
pop
add
xchg
in
pop
std
push
jb
mov
shll
int3
pop
adc
cmc
rcl
rcrb
movsb
push
lds
fsubl
iret
das
xor
outsb
addr16
cmp
xchg
and
add
stos
pop
mov
push
xchg
int
add
dec
push
or
repnz
lock
and
fisttpl
jl
inc
arpl
popf
lods
push
or
aas
lret
fcomp
cwtl
pusha
std
sbb
fldcw
pusha
mov
sub
enter
xor
or
loope
push
mov
xor
jne
add
call
fstpl
scas
xchg
out
mull
xchg
ficoms
cmp
adc
pop
dec
cmp
cmpsl
enter
pop
mov
sbb
mov
rcrl
out
testl
push
xchg
out
jle
repnz
mov
or
gs
push
cld
test
cmp
mov
shll
jne
dec
shlb
das
ret
inc
pushf
sub
fcomi
or
xchg
out
or
xchg
das
movl
aaa
add
ret
sub
jne
jle
pushf
inc
xchg
sahf
jecxz
jecxz
out
adc
xchg
fcomps
sub
lock
adc
pusha
or
add
in
insl
lea
push
lock
rcll
outsb
test
div
inc
inc
icebp
fists
mov
popa
test
aad
push
aaa
shll
xchg
in
xchg
es
push
and
adc
xor
jl
nop
movsb
push
cs
jo
insb
ret
add
cmp
xor
add
sub
cld
push
and
lods
add
sub
add
pop
ljmp
or
sbb
rcrl
pop
push
mov
mov
adc
push
mov
and
push
jp
test
sahf
stos
cmp
das
lods
sbb
or
jl
or
adc
jo
mov
sbb
xor
fidivrs
stos
inc
jge
adcb
mov
pop
xchg
fldcw
cwtl
mov
mov
hlt
push
fwait
xor
sbb
jp
cmc
jge
pop
inc
data16
addr16
cltd
push
adc
mov
xor
lods
push
popa
ds
pop
sub
insb
rol
adc
out
lcall
xor
fs
adc
xchg
sbb
cmp
test
jae
inc
sbb
andb
push
push
sbb
mov
ret
pusha
outsb
jb
jbe
cmpsl
movsb
cmp
nop
sbb
fwait
and
push
and
xchg
cmp
push
mov
loope
mov
xchg
push
mov
in
mov
jmp
je
and
xchg
inc
push
adc
popf
mov
push
adc
mov
aad
cmp
movsb
loop
adc
add
push
lcall
movsl
pop
arpl
pop
xchg
stc
adc
push
jae
xor
push
or
lods
jbe
cmp
push
jmp
add
fisubrl
and
mov
and
dec
pop
xor
adc
jbe
adc
mov
out
lock
icebp
stos
jmp
sti
mov
adc
mov
sbb
sbb
or
or
inc
add
pop
mov
adc
sbb
mov
lret
frstor
or
xchg
mov
and
fs
xor
xor
adc
dec
inc
jae
or
push
pop
jl
and
scas
add
dec
dec
lock
imul
out
xchg
rclb
mov
adc
jmp
jg
jno
push
adc
jp
mov
cltd
push
adc
stc
stos
sti
jne
int
xchg
and
cli
loopne
rorb
bound
pop
pop
jns
mov
jp
data16
insl
and
lret
dec
lods
and
sub
iret
mov
add
imul
xchg
pushf
xchg
sbb
add
xor
jge
std
call
adc
cmp
dec
cli
add
pandn
jp
jecxz
pop
lret
adc
push
dec
pop
lods
mov
sub
jnp
or
mov
loope
out
push
cld
sub
les
or
inc
fstps
mov
push
into
call
xlat
jg
dec
jge
aaa
adc
mov
les
mov
das
push
mov
pop
and
fnstenv
fstl
lock
or
adc
ja
add
sbb
jb
mov
rol
mov
lret
mov
adc
lods
and
insl
adc
out
sahf
mov
adc
or
inc
popl
jge
xchg
inc
adc
int3
mov
iret
ja
push
sti
adc
pop
rcll
in
in
jbe
fldl
and
jl
cmpl
and
adc
ret
adc
addl
cmp
add
pop
icebp
mov
and
and
adc
nop
fucomp
pop
stos
and
push
cmpl
in
packuswb
sub
bound
imul
lds
push
cmc
int3
jno
push
cmpl
dec
mov
push
in
or
jge
inc
add
loope
adc
shlb
loopne
adc
mov
fdivr
inc
pop
xlat
adc
lret
movsl
mov
ds
jl
adc
adc
in
push
scas
ljmp
dec
out
adc
sbb
or
mov
sbb
lds
xchg
lods
inc
jo
lds
popa
inc
jne
mov
cmp
inc
aam
pop
test
xchg
adc
popf
mov
pusha
decb
and
mov
popf
hlt
adc
xor
jecxz
adc
mov
push
ret
push
xor
lahf
push
je
int
mov
mov
test
cmpsb
adc
push
scas
sub
adc
xchg
add
or
in
fisubrl
hlt
sub
mov
std
movsb
push
in
inc
sub
push
in
mov
xor
push
xor
jmp
adc
adc
shlb
cltd
jne
out
push
lahf
adc
jecxz
xchg
push
insb
add
aam
mov
out
jbe
push
jne
neg
ret
push
out
repz
scas
mov
jne
fsubs
jecxz
lock
shlb
xchg
sub
inc
and
adc
outsb
leave
jecxz
push
push
lds
test
cmp
out
and
xor
jo
pop
dec
test
stos
rclb
outsl
and
and
add
sarb
cmp
test
or
push
sub
cmpsb
jae
mov
push
jmp
loop
jne
and
adc
push
pop
xor
jge
popa
test
ret
hlt
insb
rorb
xchg
bswap
sub
add
push
or
xor
xor
mov
inc
and
repnz
push
je
pop
sbb
xor
xchg
push
mov
popf
inc
ret
jno
js
xchg
add
mov
adc
iret
mov
lock
sub
and
arpl
and
imul
jge
stc
insb
in
xlat
sahf
xor
mov
ds
pop
test
jmp
in
sub
and
cmp
insb
xlat
cmp
sbb
cmp
sub
call
lea
xor
outsb
jno
push
jmp
fcoms
aad
push
or
dec
loop
dec
push
fdivrs
mov
or
cmp
test
pop
cltd
sub
nop
test
jmp
test
push
add
jg
push
mov
negl
cltd
mov
jno
pusha
cmpl
lds
cmp
test
inc
or
out
pop
cmc
shll
test
pushf
repnz
fbld
xor
push
out
xchg
mov
jge
and
lcall
cld
dec
inc
adc
sbb
mov
scas
into
pop
stc
sbb
and
sti
pop
cmc
mov
fwait
mov
fs
je
adc
insl
mov
and
pop
push
adc
xchg
add
stos
aaa
js,pn
sbb
rcll
xor
stos
mov
mov
and
or
lock
or
cld
test
xchg
popa
cmp
adc
cmp
or
xchg
popf
add
mov
mov
xchg
pop
mov
sub
movsl
mov
adc
jg
dec
stc
adc
pop
mov
fisubrs
cs
jp
movsb
push
add
sub
pop
adc
rol
sbb
faddl
es
xor
jbe
loopne
adc
lcall
mov
sub
adc
andb
dec
dec
shrl
sub
daa
sub
add
insb
mov
dec
dec
jne
xor
imul
push
fsubs
sbb
and
adc
fistpl
lea
shll
xorl
adc
sbb
mov
or
dec
cmp
ret
add
loopne
cld
scas
es
adc
ficomps
outsl
xor
insl
inc
lods
loop
pop
insb
add
and
icebp
imul
or
arpl
push
adc
shll
test
jmp
cmpsl
sub
xchg
idiv
sbb
cmp
sbb
enter
cmpsl
cltd
pop
cmp
mov
push
sub
push
jp
mov
push
pushf
xchg
sub
xchg
inc
es
pop
out
repnz
flds
mov
es
shrl
fdivl
aaa
rorl
jo
test
sub
xlat
jge
mov
jle
cmp
test
lods
xchg
xchg
cmp
jmp
xchg
adc
cmp
rorl
out
lahf
xlat
stc
divb
mov
lea
popa
bound
xchg
inc
adc
adcl
js
test
ret
jl
je
test
mov
jne
xor
push
out
inc
inc
push
push
es
fstps
ffree
xchg
mov
and
movsb
test
xchg
push
or
es
out
jl
pop
int3
stos
xchg
adc
and
mov
test
push
movsb
adc
adc
lds
test
lahf
add
cld
mov
dec
cmpsl
hlt
xchg
ss
test
xor
cli
mov
sub
sbb
push
fldt
test
pop
or
scas
adc
ljmp
enter
out
push
adc
mov
mov
push
and
mov
push
rcl
sbb
and
stos
and
push
dec
xor
sbb
inc
or
test
stos
aas
addr16
ds
adc
addl
test
add
adc
notb
mov
shll
xor
add
pop
add
outsb
xor
std
sbb
adc
adcl
popf
add
insb
test
mov
adc
loope
pop
pop
mov
lds
dec
and
popa
data16
mov
fwait
or
ds
pop
jl
dec
adc
and
and
xchg
dec
xchg
inc
adc
in
adc
add
push
mov
pop
movsb
jne,pn
call
jp
jmp
int3
pusha
stc
pop
push
adc
pop
and
dec
mov
mov
fimull
jo
adc
icebp
je
or
push
or
pop
scas
addl
nop
xchg
das
jmp
push
adc
xchg
cltd
xchg
add
jno
xor
icebp
lcallw
loope
jb
sub
mov
mov
cmp
test
arpl
ss
adc
jp
bound
adc
clc
das
repnz
inc
xor
adc
cmpsb
push
movsb
leave
scas
push
cmpsb
test
adc
les
push
test
sub
dec
pop
push
jmp
mov
push
inc
push
arpl
and
enter
lock
in
mov
aad
fsubrp
pop
stos
outsl
test
lods
jne
out
rcll
lock
mov
mov
xchg
iret
ret
sub
xor
and
cmp
andb
addr16
lods
orl
daa
inc
es
push
lret
and
lds
mov
sbb
jnp
fld
daa
jnp
add
or
mov
scas
or
aad
add
pop
shll
aaa
jne
add
shl
cmc
pop
mov
add
outsb
push
or
push
gs
in
fidivrl
mov
xchg
in
test
inc
daa
push
mov
xchg
negb
iret
jb
pop
mov
ljmp
stc
jnp
rorb
inc
jmp
cmpsb
leave
cmc
leave
pop
add
addr16
nop
mov
sub
movsb
pop
mov
push
mov
std
inc
and
pop
dec
rol
and
mov
sub
push
pop
jl
nop
cmpsl
push
fistpll
icebp
gs
in
inc
mov
xor
int
sub
pop
mov
aaa
sbb
std
fcomps
lcall
xchg
data16
and
clc
add
adc
scas
lea
cs
push
add
mov
adc
test
leave
sub
push
int
add
xchg
sbb
fdivrs
xor
out
notb
aas
xchg
sub
cmpsl
rorb
rcll
pop
jle
adc
test
es
pop
mov
cmp
mov
test
ret
idiv
xlat
xor
dec
mov
test
pop
or
cmp
xchg
loope
out
jb
out
repnz
cmp
mov
mov
sti
xor
inc
or
mov
mov
ret
dec
xor
mov
add
push
push
and
inc
scas
cs
inc
mov
mov
adc
and
push
lds
mov
sbb
pop
aad
lds
ss
cmpsb
daa
dec
jbe
rolb
mov
out
push
xor
xor
jae
ja
call
xchg
and
adc
ss
mov
das
push
das
in
dec
pushf
and
add
inc
lret
and
add
leave
test
mov
cltd
cmp
stos
xchg
int
add
fidivs
daa
xchg
xor
jbe
rol
pusha
add
stos
test
xchg
xchg
pop
push
jl
pop
ficompl
popa
loope
nop
push
jp
aaa
adc
mov
sarl
push
xlat
movsl
xor
ss
add
xor
int3
xlat
iret
mov
das
shl
rcrb
mov
sub
pushf
imul
in
and
or
push
cmp
jge
sub
ljmp
addr16
mov
or
daa
call
mov
xor
or
fcmovnb
xor
clc
inc
mov
ja
mov
push
xor
xor
inc
mov
out
dec
rorl
mov
icebp
push
inc
pop
ret
dec
loopne
imul
cmp
daa
aam
es
iret
push
cs
add
je
outsl
mov
jmp
cmc
add
aad
add
push
sbb
fcomi
dec
cmp
cs
mov
aad
jne
fldt
mov
pop
sub
xchg
pop
loope
cmp
jbe
ljmp
es
and
popa
xor
data16
xchg
lret
fistps
andb
or
push
xchg
ss
sub
adc
dec
cli
test
mov
imul
insl
push
test
aad
and
push
lock
xor
xor
xchg
xor
inc
and
xor
repnz
adc
mov
xchg
xchg
mov
xchg
add
sub
push
and
xchg
sub
and
pop
xor
xchg
popl
insb
xchg
sbb
and
mov
jg
daa
add
aas
aaa
out
xchg
add
ss
mov
in
aas
adcl
cmpsb
jno
xchg
addb
push
sbbb
xchg
inc
shll
lret
push
mov
mov
push
push
call
in
pusha
es
jmp
adc
push
cmp
and
loopne
ret
push
pop
daa
aam
ljmp
push
mov
add
lods
push
notrack
jne
push
out
and
mov
popa
push
push
in
adc
sub
je
jae
lds
or
pushf
sub
push
in
and
shlb
cmpsb
adc
push
les
jnp
add
aaa
add
inc
hlt
scas
xor
and
in
daa
lds
movsl
iret
or
push
xchg
mov
jge
rcl
add
mov
mov
mov
out
cmp
pop
test
push
or
or
dec
push
cmpsl
loope
inc
mov
cmpsl
mov
leave
jbe
cs
fstpt
fisubrl
dec
aas
cmc
ds
xchg
ds
xor
int
test
push
lods
into
push
into
stos
les
xchg
fimuls
xlat
xchg
mov
cmpsl
jmp
inc
je
adc
daa
in
out
mov
in
leave
stos
movsb
mov
xchg
iret
mov
mov
out
xchg
xchg
mov
sahf
out
test
xchg
lods
scas
test
mov
xlat
int3
test
inc
shlb
jnp
push
xlat
movsl
int
fs
insl
cmp
outsb
cmp
movsl
sub
cmp
cmp
xchg
outsl
fsts
push
jmp
mov
xchg
mov
mul
js
inc
ss
dec
jo
mov
inc
ss
mov
ds
nop
mov
mov
fadd
je
les
sub
push
sbb
jne
in
mov
fs
jbe,pt
mov
lods
mov
aas
add
iret
fnstcw
leave
jge
leave
push
ljmp
or
int
xlat
movsb
dec
mov
dec
test
ss
rolb
push
mov
shll
subb
jb
or
repnz
add
lcall
aas
fs
mov
or
or
pop
arpl
iret
jno
movsl
and
jmp
xchg
jmp
pop
and
mov
push
cmp
cmp
imul
out
inc
xchg
mov
inc
cmp
fwait
cli
popa
es
pusha
add
push
aaa
inc
jbe
cmc
ss
es
jl
xor
mov
pop
xchg
dec
pop
iret
jmp
dec
jmp
stc
push
adc
sbb
inc
xor
pusha
jecxz
nop
orb
sbb
push
aad
mov
jle
adc
jb
add
out
aaa
sub
lds
push
les
add
push
add
mov
leave
ja
push
addb
loope
add
sub
aas
sti
mov
xor
pop
loope
mov
out
inc
adc
ret
outsb
enter
popa
rcll
xchg
in
das
pop
int3
cmc
push
stc
test
stc
add
aas
push
outsl
in
roll
in
jmp
jmp
daa
push
test
adc
xchg
in
push
pop
inc
cmp
cs
testl
shl
je
or
orl
scas
cmp
adc
outsb
fsub
jne
adc
or
cmp
movsl
push
xchg
and
les
or
jne
inc
sub
das
push
mov
and
ss
xor
out
mov
inc
sarl
out
enter
jmp
fsubr
adc
std
test
dec
lret
hlt
int
andb
ss
es
mov
int3
sbb
in
sub
in
jp
int3
icebp
push
lock
aad
jo
xchg
pop
pusha
loope
push
sub
dec
dec
inc
insb
movl
sub
cmpsl
jge
fld
and
mov
adc
lods
jne
dec
push
call
xchg
xchg
aam
jne
xor
movsl
lcall
repz
ja
inc
imul
cmp
das
cli
stc
lahf
fwait
and
dec
aaa
ja
jne
call
push
mov
test
pusha
fisubrl
popl
jno
cwtl
sbb
aaa
out
cli
push
add
add
pop
mov
dec
mov
out
outsl
jle
sub
test
xabort
or
leave
ja
xchg
and
lods
fdivrs
mov
xor
pop
jnp
push
loope
lea
sbb
in
insb
inc
enter
mov
and
gs
js
push
pop
mov
add
adcl
out
xlat
cmpsl
out
jne
sbb
sub
int
in
out
pop
loop
xchg
push
push
das
cld
stos
sub
inc
aaa
sub
push
push
sbb
adc
and
nop
addr16
ror
js
pop
scas
push
fidivl
mov
pop
pop
mov
or
test
mov
insl
stos
push
and
cmp
movsb
stos
fidivrs
or
pushf
xor
out
cltd
daa
test
sub
es
in
sarb
xor
sarb
sub
popw
gs
iret
fxch
lods
dec
add
push
mov
inc
cmpsb
cmp
mov
mov
enter
xchg
lea
aas
or
xor
arpl
ss
cmpsb
mov
popf
fdivrp
loope
dec
pusha
xor
dec
fistps
or
loope
mov
sbb
insl
ja
push
in
outsb
cmp
jg
pop
repz
pushf
test
jg
testb
lret
push
test
lea
add
filds
inc
xor
je
lods
xchg
push
in
and
and
pop
jns
loop
test
int
and
cmpsb
imul
and
movsl
test
aad
mov
mov
xchg
sbb
mov
in
pop
mov
mov
jb
popf
stc
push
imul
jge
push
ljmp
push
sub
out
and
imul
in
imul
mov
sti
cmp
push
dec
adc
xchg
mov
or
mov
sti
mov
dec
out
push
movb
jmp
push
and
pop
cmp
jno
outsb
push
in
sub
sub
test
ja
cs
add
and
mov
cmp
mov
shlb
mov
xchg
std
mov
inc
xchg
xchg
mov
jmp
dec
add
test
orl
cmp
push
sbb
enter
addr16
xchg
mov
push
xchg
push
cmpsl
inc
mov
sub
repz
cld
mov
sbb
dec
dec
push
mov
and
push
cmp
pushf
jmp
pop
jecxz
jnp
cs
iret
data16
xor
push
sbb
aad
test
mov
scas
out
sub
add
aad
test
shlb
enter
leave
xor
mov
jne
xchg
rclb
cmpb
xchg
xchg
pop
mov
in
lods
pop
sbb
and
in
sbb
pusha
test
mov
and
xor
sbb
sbb
test
push
ror
je
sbb
cmp
xor
push
fprem1
pop
ret
or
es
sti
or
and
pusha
xor
sub
inc
into
adc
shr
ljmp
mov
add
sbb
imul
xor
and
mov
movsl
mov
push
jmp
pop
les
lods
es
xchg
and
add
lods
mov
je
push
dec
les
jne
outsb
push
inc
insl
ds
and
stos
adcl
sub
inc
push
xor
add
add
in
fldenv
push
test
lods
sub
leave
std
insl
mov
jne
mov
int
inc
and
jecxz
sbb
push
ds
dec
orl
mov
in
aad
xchg
mov
cmc
movsl
dec
lea
in
sub
cmp
fldt
lock
aas
sbb
ret
cmpsb
mov
stos
xchg
test
mov
pop
push
shrb
es
movsl
enter
fucomi
enter
leave
xchg
stos
inc
xchg
lret
out
aad
aad
aas
addl
je
sub
dec
cmpsl
sub
test
xchg
push
sbb
notb
lahf
jmp
sub
lret
jp
and
jno
data16
orb
mov
leave
test
es
clc
cltd
icebp
sahf
je
jmp
icebp
add
cmp
pushf
jmp
pusha
sub
xchg
test
ljmp
lods
xor
popl
pop
shll
insb
inc
and
cld
add
jecxz
lods
push
xor
loop
std
pop
shl
inc
cmpsb
cld
es
in
or
xor
inc
stos
shll
cmc
jbe
lret
sbb
xchg
mov
and
inc
test
sub
int3
outsl
xchg
cltd
lahf
fidivs
iret
add
xchg
cmp
or
push
mov
adc
std
movsl
outsb
push
iret
test
push
and
mov
mov
mov
lahf
outsl
pop
cld
sbb
and
mov
push
divb
add
xchg
lahf
push
cld
inc
xchg
xchg
scas
mov
adc
push
xchg
aaa
mov
sbb
cmpsb
cmp
mov
sub
aas
jmp
andb
movsl
cmp
imul
es
ffreep
push
test
repz
and
cmpb
shll
insb
loopne
lds
test
fcompl
xor
sbb
aad
inc
mov
xchg
mov
inc
test
jb
mov
and
mov
jno
aad
add
sahf
movsb
inc
test
cltd
push
adc
out
and
push
icebp
insl
sbb
dec
lods
mov
sbb
insl
adc
sbb
sub
fprem1
xchg
leave
fwait
aas
shl
fwait
adc
fldenv
lods
mov
cmp
lea
adc
or
and
insb
adc
cmp
ja
cmp
pop
sbb
arpl
mov
ja
in
mov
ficompl
leave
xor
adc
add
daa
add
addr16
into
push
cmpsb
jo
push
sbb
mov
pusha
cmp
or
leave
push
lods
mov
hlt
push
mov
cmpsl
inc
or
xor
adc
mov
mov
push
nop
push
fisubs
movsl
xchg
adc
ljmp
lcall
pop
je
jecxz
push
movaps
jecxz
test
sbb
mov
dec
and
popf
es
insl
lret
push
add
mov
sub
adc
cmpsb
sub
jne
lcall
rclb
mov
lcall
fidivl
inc
sub
loopne
sahf
dec
lds
and
cmpb
cmp
or
lods
push
push
in
test
jg
es
mov
sbb
lret
sysexit
add
shlb
xchg
push
in
sar
cmp
xchg
jnp
sbb
or
outsb
jne
sbb
lods
and
adc
xor
pop
inc
dec
mov
cli
adc
fidivl
nop
test
std
test
dec
ret
adcb
les
mov
ljmp
in
sbb
adc
imul
xor
jmp
push
imul
iret
jne
je
lods
fildll
das
addr16
lahf
mov
adc
adc
dec
xchg
or
movsl
or
int3
stos
jne
and
add
lock
inc
add
pop
mov
out
imul
adc
dec
std
es
or
push
inc
ret
mov
aas
out
xor
lods
push
in
sub
rorb
mov
adc
sub
stc
test
in
mov
adc
mov
push
sub
aaa
mov
das
mov
adc
clc
sbb
dec
out
ret
cmp
cld
mov
inc
add
leave
xlat
xchg
jp
gs
std
es
adc
inc
push
in
adc
xor
cmc
cld
loop
into
sbb
out
jp
adc
shl
lds
mov
and
ret
xchg
jo
fldl
arpl
lcall
in
mov
or
lock
add
and
out
and
lea
or
push
lods
jb
or
popf
test
jge
idivl
ficoms
sar
stos
out
test
mov
mov
push
cmp
outsl
pushf
fwait
bound
xchg
nop
mov
inc
push
in
sub
neg
es
ss
fidivl
xchg
adc
aad
mov
inc
cmp
fdivp
jmp
mov
or
mov
mov
out
cmp
mov
lds
call
sbb
jmp
mov
je
add
gs
lods
push
lds
jne
adc
add
add
dec
popf
xor
pop
jnp
push
mov
lea
sbb
in
lret
test
inc
push
inc
or
daa
mov
leave
lods
push
in
jmp
enter
xlat
adc
movl
aad
enter
notl
aas
daa
cs
iret
xchg
es
repz
test
adc
data16
in
daa
adc
arpl
iret
sub
pushf
pushf
mov
sub
push
js
es
sbb
es
jne
lods
mov
inc
or
sub
push
in
push
aaa
mov
xchg
push
mov
out
jnp
movb
or
test
filds
lods
leave
je
cmpsl
call
cmp
movb
shrl
or
fs
ds
cltd
and
jne
addr16
adc
jne
pop
xchg
cltd
xchg
mov
repz
pop
push
out
add
cltd
add
std
inc
cmpsb
push
insl
sbb
in
das
fdivp
movsb
shlb
pushf
rorb
mov
push
mov
ret
jmp
in
pop
in
movsl
nop
cmp
push
jmp
ds
cld
fs
test
mov
mov
lret
mov
hlt
sbb
fs
cmp
mov
enter
cmp
ss
jbe
les
sbb
pop
daa
sub
xor
jmp
xchg
sbb
or
xchg
or
test
cmp
jns
jmp
add
clc
add
sarb
je
ror
push
cmpsl
in
jns
and
cmovne
clc
imul
fsubrl
dec
sub
data16
jnp
out
lahf
leave
pop
jecxz
scas
xchg
pop
das
pop
test
lahf
jmp
dec
jle
xor
pop
cmp
repnz
jo
pop
aaa
jle
movsl
jb
fisttps
or
mov
xchg
out
xor
mov
inc
inc
xchg
mov
sbbb
movsb
fisubrs
mov
sub
loopne
aas
xchg
sub
mov
jge
jb
popa
xor
dec
fimull
pusha
mov
push
push
xchg
xchg
jle
lret
xor
into
aad
insl
add
jmp
leave
lcall
shll
inc
daa
inc
mul
daa
scas
ficoms
test
push
std
and
addl
mov
mov
pop
movsl
sbb
bound
mov
inc
sbb
jge
jbe
hlt
aad
loop
fsubrs
int3
data16
flds
pop
jmp
or
leave
dec
lods
inc
push
in
sub
nop
jmp
int
fwait
scas
inc
xorb
je
mov
lds
sahf
loope
jnp
sbb
dec
outsb
lret
mov
push
mov
cltd
jns
adc
stos
and
call
enter
lret
xor
adc
lcall
add
ret
aaa
lret
lea
lahf
dec
leave
mov
mov
push
leave
fildll
fucomp
push
fsts
in
lds
dec
jg
leave
ja
jmp
aas
iret
stc
push
mov
push
inc
aad
daa
push
test
std
push
mov
daa
outsb
movsl
outsb
push
ja
jecxz
mov
ja
jae
push
outsl
xchg
inc
cltd
mov
xchg
movsl
cmc
into
push
push
int3
subl
shrl
test
das
mov
bound
popf
jmp
xchg
movsl
jge
cmp
stos
and
gs
push
ss
xor
sbb
nop
mov
fdivs
mov
jns
sbb
push
jnp
or
insl
jae
shlb
xchg
repz
mov
rol
aad
and
scas
xor
adc
les
andnps
and
stos
adc
sub
fidivrs
std
push
dec
stos
daa
js
js
cmc
movsl
mov
cs
cmp
sbb
push
stos
sahf
xor
xor
xchg
pop
testb
ret
bound
mov
sub
les
xchg
or
out
sbb
test
mov
icebp
ss
push
in
ficomps
xchg
xor
mov
negb
and
cs
enter
out
aas
xchg
and
sti
int
mov
adc
std
es
nop
mov
sub
jne
or
loopne
sbb
dec
lods
sub
in
outsl
xchg
fdivrs
std
and
mov
xchg
cld
mov
inc
subb
iret
cmpb
pusha
lahf
call
push
fucom
daa
add
push
popf
popf
push
jo
loopne
popa
adc
in
daa
pmaddwd
lea
nop
xchg
push
add
test
call
je
lods
add
std
adc
sti
xchg
cwtl
pop
ret
mov
rcr
loop
and
xor
andb
les
popa
inc
push
fcoml
lock
pop
xor
stc
cwtl
out
insl
dec
iret
in
aad
ret
mulb
mov
mov
or
jmp
xchg
jge
sbb
add
cmp
aaa
mov
xchg
dec
xor
xor
push
and
hlt
mov
inc
sbb
mov
cs
sub
les
or
iret
or
xor
xor
mov
pop
test
aad
and
dec
ljmp
add
mov
xchg
mov
pop
dec
push
ss
rolb
mov
rclb
notb
dec
in
or
jae
call
push
push
repnz
xchg
sbb
aad
lcall
fsubp
push
jnp
push
sub
cmp
ss
stos
and
movsl
aam
xchg
sbb
jg
aaa
inc
push
loop
push
fs
fisubrl
out
jae
jbe
add
push
lahf
sbb
xchg
shlb
icebp
pop
ss
movsl
dec
xor
ret
iret
adc
sbb
iret
stos
sahf
ret
push
push
add
add
pop
and
sarl
sbb
rcl
add
cld
mov
pop
fcmovb
pop
pop
mov
mov
aas
loop
notb
pushl
jmp
iret
iret
mov
hlt
aam
ret
testl
add
lods
idivb
mov
test
out
mov
in
add
mov
sub
mov
movsb
mov
mov
sar
fsubr
inc
mov
dec
nop
mov
movsl
lahf
gs
adc
and
shl
cmpsb
insb
cmpsb
cmp
push
or
test
push
xchg
insb
xchg
in
and
push
lods
add
or
cli
pop
adc
pop
daa
jo
jmp
pop
jle
sbb
xor
pop
je
pop
inc
jbe
nop
xor
les
mov
test
aad
jo
push
sti
btc
sbb
test
iret
andnps
stos
mov
xchg
iret
pop
push
push
notb
adc
mov
mov
mov
lret
bound
xor
jbe
aas
push
mov
into
cld
xchg
xor
test
out
add
int
xlat
mov
mov
std
ds
jecxz
orb
in
cmpsl
test
lods
xchg
aam
xchg
fidivrl
mov
ljmp
or
mov
cld
jmp
jl
or
xchg
mov
ret
add
xchg
mov
insb
nop
mov
push
push
xchg
enter
aaa
int
jne
pop
scas
jg
cmc
mov
add
gs
xchg
fldt
jnp
adc
xchg
pop
cmc
dec
roll
sbb
out
jecxz
jnp
and
rolb
daa
lods
mov
xlat
je
sbb
push
in
mov
daa
lcall
test
shl
popf
push
dec
sti
mov
add
ljmp
jge
sub
test
and
addr16
mulb
add
out
ljmp
testl
adc
lcall
jnp
push
dec
jae
jb
loope
jnp
xchg
dec
inc
xlat
out
enter
mov
xchg
jecxz
incb
add
adc
push
shrb
xor
jmp
lods
pop
push
stos
xchg
cmpsb
jo
inc
add
cmp
pop
pushf
inc
mov
cli
sub
test
ret
add
adc
in
xor
mov
add
andl
pusha
xor
dec
inc
xchg
mov
icebp
adc
xchg
and
mov
adc
enter
fwait
inc
roll
mov
mov
push
lea
adc
dec
sub
lea
sub
cmp
mov
add
adc
add
notb
ret
icebp
push
es
jecxz
je
popa
add
aas
ja
sbb
mov
jb
fcompl
addr16
push
out
pop
push
fnstsw
mov
cmp
lds
mov
das
mov
mov
lcall
xchg
and
in
rclb
and
jmp
sub
cmp
or
mov
incl
test
push
movsb
mov
dec
mov
int3
dec
sub
jg
cmc
mov
xor
sub
push
mov
xchg
adc
mov
push
scas
aaa
sub
adc
and
jb
rclb
jne
cmp
mov
enter
push
jmp
jnp
xor
mov
mulb
popa
push
iret
stos
xchg
jmp
sbbb
iret
lds
pop
cmp
xchg
ss
add
sub
inc
jne
adc
adc
xor
mov
sub
lret
jo
adc
inc
xchg
dec
add
sub
inc
mov
mov
xor
cmp
jbe
adc
inc
rcrb
lods
cs
inc
sub
arpl
push
cwtl
push
test
cmp
add
xlat
cli
xor
adc
stc
cwtl
mov
leave
std
xchg
aas
sub
addb
jae
sub
xchg
mov
sbb
adc
add
jns
add
adc
lea
inc
adc
and
mov
outsl
std
pop
rorl
stos
das
sbb
int
aas
and
jg
pop
adc
push
inc
cmpsl
mov
mov
push
sub
mov
and
dec
dec
xchg
mov
loope
rcll
jmp
stos
into
mov
sbb
mov
jmp
add
push
mov
push
popa
lret
mov
out
sti
inc
sbbb
dec
mov
and
jg
push
mov
out
dec
insb
sbb
mov
push
xor
fwait
xlat
sub
mov
and
adc
adc
shll
push
js
fistps
jnp
xor
repz
insb
inc
adc
popa
pop
mov
test
mov
sub
out
adc
mov
pop
ret
sbb
icebp
out
jne
in
mov
sub
sti
add
das
nop
sub
jmp
push
mov
stc
pop
mov
jl
push
sbb
ret
movsb
and
shll
inc
push
and
xchg
shlb
mov
iret
jns
cwtl
adc
lahf
mov
ret
adc
cld
ds
xchg
subb
lds
sbb
and
popf
loope
jg
sbb
dec
clc
adc
gs
rorl
aam
pop
jnp
jg
loop
mov
popa
adc
addb
into
in
in
mov
cltd
roll
adc
push
stos
int
sbb
cld
jmp
aaa
adc
inc
adc
mov
cmp
push
lcall
and
mov
icebp
push
test
sub
adc
cld
adc
test
shll
ret
push
pushf
pop
inc
movsl
test
les
adc
inc
xor
cltd
mov
add
dec
add
divl
cmp
sub
enter
jne
fidivrl
and
into
and
mov
in
cmp
push
mov
mov
sub
jl
lea
iret
cmp
aas
mov
movsl
push
loopne
cmp
jbe
rcll
lds
mov
mov
sbb
xchg
mov
mov
mov
js
mov
icebp
push
sub
mov
ja
lret
pop
jp
lret
call
mov
nop
ss
movsb
mov
jnp
mov
out
incb
push
cmp
jne
gs
repz
jl
lods
aam
inc
cmp
int3
insl
xchg
push
xchg
dec
adc
push
ret
push
mov
xchg
adcl
sbb
push
pop
adc
data16
sbb
xchg
cmpsb
add
push
adc
sbb
cltd
sbb
sbb
pop
stos
rol
inc
loope
mov
mov
mov
sbb
stos
test
mov
mov
and
and
mov
mov
sbb
daa
test
jge
push
sub
or
call
pop
mov
out
pop
lods
jb
leave
jb
outsb
jmp
out
movsb
push
adc
std
es
out
mov
test
movsl
xor
xchg
add
ret
loopne
pop
es
jbe
in
sub
lea
shlb
and
cmp
call
jmp
iret
pop
cmc
enter
cmp
cwtl
xchg
cmp
sbb
into
add
mov
pop
cmc
mov
mov
sarb
xor
test
dec
xor
test
and
push
and
and
cmp
adc
cltd
pop
mov
in
lds
std
es
xchg
movsb
leave
mov
cmpsb
jg
dec
xchg
adc
sbb
leave
add
cmpsb
pop
int3
xor
and
push
dec
sbb
cltd
adc
out
and
fcomps
and
fmul
leave
arpl
cmpsb
mov
or
nop
jg
and
and
pusha
fs
rcll
sub
cmp
sbb
pop
jno
sar
ss
aad
nop
sbb
out
out
pushf
stos
lea
mov
lds
fistpl
jnp
cld
adcl
jecxz
jnp
std
pop
dec
enter
add
roll
frstor
ds
jg
lahf
rol
je
add
frstor
insb
jns,pt
mov
inc
out
insb
lods
notb
cwtl
out
enter
aaa
adc
call
sbb
xchg
nop
out
insb
lods
out
in
and
push
popf
sbb
out
lock
adc
push
test
gs
movsb
xor
mov
xor
cs
mov
or
or
push
mov
cmc
mov
and
cmp
or
dec
stos
imulb
sbb
nop
movsl
jle
sbb
int
xchg
xor
fldcw
leave
push
pmaddwd
or
clc
jmp
aaa
cmp
in
jnp
ss
adc
sub
stc
xor
in
and
stc
mov
loop
fs
loop
daa
mov
push
jecxz
lods
out
pop
ja
shrb
mov
or
mov
ret
flds
cli
push
xor
daa
or
and
cmp
dec
iret
adc
push
adc
out
mov
push
mov
call
int3
movsl
push
push
movsl
in
popa
cmc
enter
xchg
ret
xchg
es
cmpsb
cmp
movsl
jmp
pop
leave
cmc
cmc
ss
in
sbb
cmpsl
in
cs
dec
jmp
aad
lcall
jns
mov
add
fimull
mov
dec
outsb
mov
leave
cld
pop
pop
stc
pushf
pop
adc
sahf
nop
les
pop
or
jnp
add
mov
sub
cmpsl
aaa
inc
in
sbb
mov
sbb
daa
add
lods
aad
fs
lahf
cmc
push
outsl
int3
cltd
aad
add
pop
push
movsl
jae
es
push
mov
mov
fldenv
mov
xor
jmp
mov
mov
mov
push
xor
xchg
xor
idivl
es
stc
out
sbb
sbb
inc
xlat
sbb
and
sbb
and
inc
aaa
sbb
es
movsl
jb
push
daa
sbb
push
push
or
add
pop
and
out
xchg
mov
push
push
xchg
or
out
inc
fsts
stc
fisubrl
daa
push
clc
stos
insl
stc
push
add
leave
pop
lods
jne
leave
jne
stos
cli
cs
lahf
stos
or
xchg
dec
jp
daa
mov
in
xor
lcall
hlt
leave
cwtl
lods
es
leave
es
stos
cli
cs
push
xchg
push
mov
clc
xor
inc
add
out
cli
lods
gs
sbb
daa
fsubr
or
push
add
int3
dec
fsubrl
dec
aam
dec
mov
inc
adc
data16
gs
push
sbb
in
pushf
mov
in
cltd
pusha
sbb
mov
mov
je
lds
pop
es
mov
pop
cmp
stos
insb
aad
adc
test
fld
loope
jnp
leave
out
insb
push
or
xchg
in
pushf
out
jmp
or
inc
outsb
sub
push
xchg
dec
daa
jo
add
dec
daa
sbb
fiaddl
or
aaa
les
ss
and
mov
xlat
out
xlat
xchg
in
aas
clc
arpl
cmc
ljmp
and
stos
push
xchg
mov
adc
clc
sub
push
mov
cld
es
nop
mov
stos
movsl
jg
ds
nop
mov
xchg
mov
adc
test
lods
push
and
shlb
in
dec
xlat
lods
cmp
lretw
push
cli
popa
push
and
incb
nop
mov
inc
mov
sahf
add
les
push
daa
mov
jne
cmp
dec
push
aad
xor
cmovns
jbe
cltd
std
mov
stos
push
icebp
pop
jmp
lds
push
in
mov
scas
push
sub
and
aaa
sub
call
dec
flds
mov
xor
nop
or
in
sub
aas
push
jmp
dec
cmp
adc
mov
inc
mov
fadds
xchg
push
mov
jl
clc
adc
push
pushf
mov
subb
in
or
cmp
shl
test
lds
sahf
inc
sbb
mov
aaa
add
cmp
mov
adc
lods
movsl
out
mov
sbb
ljmp
xchg
pop
shlb
cltd
scas
cmp
jmp
test
aad
inc
daa
inc
mov
and
adc
daa
in
divl
dec
mov
or
cmc
out
cmc
xchg
and
ss
in
in
aad
pop
pop
xchg
add
enter
std
sub
lret
sbb
aaa
and
shll
std
ss
push
mov
adc
fnstsw
and
inc
fldcw
loope
pusha
add
and
shll
sbb
cmpsb
sub
inc
arpl
lret
xlat
popa
in
adc
lods
in
stos
adc
add
test
sub
stc
adc
cmp
movsl
stc
mov
push
subb
mulb
ja
adc
loope
mov
xchg
lods
mov
add
mov
cmp
inc
call
mov
call
fcompl
scas
stos
stc
jnp
sub
sub
sti
cmp
xchg
jbe
xchg
stos
addr16
adc
xor
sbb
test
jns
into
push
sahf
lds
mov
sub
fcoml
ret
xchg
mov
bound
inc
movsl
int3
xor
lret
daa
jge
mov
out
mov
push
xor
lret
sti
pop
sub
mov
fisubl
mov
bound
dec
imul
ds
std
lds
and
insb
mov
lcall
cmc
repnz
jbe
add
jge
adc
sub
punpckhdq
test
imul
push
jecxz
rcrl
fnstcw
dec
sub
cli
jne
rorl
lahf
enter
adc
in
movsl
jae
lahf
es
pop
add
hlt
test
mov
cmc
adc
adc
and
xchg
rcrb
mov
push
in
fdivs
cmp
adc
dec
stc
leave
push
jb
mov
loope
sbb
stc
and
mov
add
jno
sbb
cwtl
push
push
jo
mov
addr16
mov
popa
pop
es
sub
aaa
cmp
enter
add
lret
adc
xor
test
adc
xor
fdivr
adc
imul
fsubrp
adc
in
mov
sti
shr
rcl
and
xchg
out
sub
adc
push
icebp
repnz
mov
addl
popf
sahf
lahf
nop
xchg
xchg
mov
xchg
es
sar
out
lea
clc
daa
cmp
aad
int
aaa
in
enter
int
xor
in
xlat
lret
xor
out
mov
xor
cmc
cmp
shr
std
fildll
xchg
sti
ret
fisttpll
int
xchg
jecxz
imul
in
pop
adc
mov
rol
jns
pop
mov
fstl
sub
jecxz
jnp
adc
sahf
pusha
addb
sub
inc
lock
dec
add
clc
das
jno
and
cmp
adc
je
adc
arpl
mov
das
sub
push
js
xor
jae
movsb
sub
sbb
rcll
clc
lds
in
pop
adc
xchg
mov
packsswb
add
fnsetpm(287
xlat
jmp
pop
adc
into
push
xchg
xchg
jl
adc
mov
nop
dec
xor
inc
cwtl
adcb
lcall
jbe
mov
mov
xor
jle
rcll
push
adc
inc
sbb
je
add
sbb
adc
sbb
pop
popf
adc
in
faddl
inc
test
sub
push
cld
test
mov
add
fstpl
mov
cmp
xchg
test
js
and
arpl
test
insl
add
add
sbb
rcrl
adc
repz
addl
jmp
xor
popf
xchg
pop
push
adc
adc
inc
or
push
adc
sbb
and
pop
sahf
mov
push
push
adc
xchg
cmp
adc
dec
mov
jg
rorb
xor
repz
adc
nop
sahf
add
test
sbb
lret
adc
orb
movsb
mov
stos
mov
push
pop
clc
jne
xchg
nop
leave
sub
je
arpl
push
pop
shlb
fdivl
jns
inc
jmp
inc
movsl
xor
cmp
inc
lds
inc
stos
repz
push
lock
fwait
cmp
les
jns
lahf
push
inc
sbb
inc
adc
pop
rcl
sub
jno
outsl
inc
orl
in
pop
jnp
lea
ljmp
or
adc
pop
rorl
push
mov
inc
lds
add
xorb
cld
pop
mov
dec
push
push
dec
bound
adc
shlb
jne
jl
sbb
fs
insb
mov
hlt
jo
or
xor
push
xor
push
ss
mov
lahf
jp
mov
in
adc
xor
std
popf
sbb
jae
hlt
outsl
shlb
out
cmc
cmc
pop
jg
unpckhps
mov
and
ja
outsl
inc
xlat
cmp
adc
ja
fwait
sbbl
rcll
push
push
cmp
adc
loop
push
or
mov
test
and
cld
jne
sub
ja
jb
sbb
lods
rclb
inc
inc
fisubrs
adc
push
shr
pop
adc
mov
imul
fimuls
xlat
pop
sbb
mov
pop
jnp
mov
add
push
jbe
and
inc
adc
pop
add
sbb
adcb
push
push
jae
stc
adc
sbb
adc
jb
jp
push
push
inc
scas
sub
dec
gs
rcl
jo
adc
mov
loop
sahf
and
scas
adc
adc
dec
mov
xchg
fistl
mov
xchg
adc
or
jae
adc
push
push
xchg
fdivl
mov
mov
adc
or
imul
adc
adc
push
fsubrs
jp
and
add
mov
pop
mov
jo
push
adc
or
pop
testl
and
jb
mov
call
pop
pop
adc
jmp
jge
test
lcall
xchg
and
ja
push
arpl
or
adc
rclb
clc
inc
jp
or
adc
enter
adc
outsl
mov
ficoml
jne
cmp
push
int
lock
adc
fs
mov
test
sarl
sbb
jp
out
push
dec
adcb
imul
jne
sbb
mov
dec
sahf
adc
and
clc
popa
adc
mov
add
adc
cmp
insl
loopne
lret
cmp
cmp
add
adc
adc
stos
push
xchg
sahf
push
mov
or
cli
mov
pop
adc
lret
test
add
inc
dec
xchg
mov
adc
adc
cmp
mov
and
out
mov
push
icebp
popa
sub
cmpl
or
das
lock
add
sbb
dec
adc
fisubrl
add
xor
add
push
mov
mov
inc
jmp
notl
pop
adc
inc
stos
pop
inc
xor
jb
sub
insb
adc
mov
pop
jno
mov
push
sti
test
jmp
dec
add
mov
ret
pop
adc
outsl
pop
bound
inc
jns
push
jo
cmp
xchg
je
pop
adc
sbb
pusha
mov
dec
dec
clc
pushf
adc
out
stos
in
adc
shl
fmuls
leave
or
imul
add
adc
or
mov
test
in
into
push
push
and
adc
mov
jno
or
xor
pusha
bound
and
dec
lds
adc
outsb
pop
mov
sti
sahf
sub
scas
shlb
inc
xor
aas
and
gs
xchg
test
cld
cmp
sbb
dec
xchg
cmp
add
adc
adc
js
add
and
jb
adc
je
jnp
pop
arpl
lods
in
add
push
adc
test
adc
inc
gs
adc
cs
std
inc
jbe
jmp
add
add
and
inc
rcll
inc
push
lods
xchg
pop
jbe
fnstcw
jl
cbtw
aaa
xor
jecxz
cmp
and
pop
sbb
nop
jmp
adc
rcl
rorb
test
push
addr16
mov
cli
sbb
out
adc
repnz
add
mov
mov
out
sbb
adcb
mov
je
dec
pop
adc
shlb
aam
les
xor
ja
inc
cwtl
adc
sbb
test
hlt
out
into
lods
sub
bound
test
cwtl
mov
pop
movsb
adc
nop
lahf
popf
and
sbb
lret
test
jl
push
frstor
scas
hlt
mov
jne
adc
pop
adc
inc
js
popl
add
sbb
sbb
orl
lds
jl
xor
and
sub
adc
loopne
mov
pusha
mov
rcl
enter
sub
loopne
pop
mov
jb
mov
add
fcom
pop
sbb
sub
js
adc
mov
add
sti
push
imul
pop
jo
push
pusha
test
xor
repz
je
cli
cmpsb
mov
into
and
mov
push
push
sbb
in
xchg
dec
pop
in
in
adc
adc
pop
pop
idivl
addps
fs
and
push
sbb
xchg
test
hlt
jecxz
xor
cmp
insb
in
dec
bound
mov
dec
cltd
inc
notb
lahf
and
sbb
pop
sbb
inc
xchg
imul
fs
ljmp
or
cld
sbb
shrb
popa
sub
mov
inc
inc
jo
daa
sub
or
sbb
insl
or
les
adc
inc
fmull
jne
icebp
inc
xor
nop
sub
ficoml
fdivrs
movsl
enter
adc
jno
xchg
mov
loopne
adc
or
das
outsl
idiv
arpl
das
sub
nop
sbb
notl
sbb
popf
xchg
ror
adc
xchg
push
inc
adc
aam
outsl
lret
xor
adc
pop
or
ret
and
fs
das
push
orb
inc
push
mov
inc
xchg
sbb
fdivr
adc
mov
adc
les
add
dec
adc
jne
mov
mov
pop
sti
jmp
inc
cmp
jle
call
adc
dec
push
add
dec
lret
scas
stc
adc
mov
xchg
and
lock
in
adc
insl
pushf
mov
or
in
or
sbb
inc
andb
mov
inc
jae
xchg
movsb
imul
mov
in
inc
and
adc
fsubrl
cmp
les
push
mov
adc
outsl
push
sbb
and
xor
mov
xchg
jne
adc
pop
push
and
push
movl
ret
mov
xchg
lds
sub
push
add
rcrl
out
and
lods
inc
jle
sbb
dec
movsb
sbb
pop
pop
js
fisubs
cmc
cmp
sahf
call
loopne
jnp
iret
adc
arpl
cmp
xchg
mov
dec
repnz
and
lcall
push
fldcw
repnz
pop
adc
jg
sbb
cmp
pop
jl
add
cmpsl
xchg
pop
and
add
popf
repnz
or
inc
dec
and
hlt
adc
in
enter
mov
popf
movsl
xor
sbb
jns
repz
jbe
jnp
jbe
cmp
sbb
icebp
adcb
fidivs
rcr
hlt
dec
pushf
testb
repz
imul
loop
xchg
adc
lock
push
adc
rdtsc
out
adc
rorl
js
adc
stos
dec
or
adc
rolb
out
outsl
mov
fsubrl
movsl
xchg
dec
repnz
jg
fidivrs
pop
cmp
mov
jecxz
js
rcrl
sbb
sarb
pop
jo
xor
adc
sub
adc
inc
pop
dec
jl
mov
bound
add
add
and
pop
inc
mov
aam
jp
sub
pushf
cmpsb
jne
and
adc
jo
adc
lcall
lock
inc
sarl
sbb
adc
xchg
or
test
add
push
jg
lods
lsl
push
int
inc
lds
cltd
mov
mov
mov
sub
xchg
fcoms
add
ret
insb
jae
lock
sarb
adc
push
lret
push
rcll
ret
jge
or
mov
mov
jno
mov
jae
stos
les
rorl
adc
jo
mov
jb
push
sbb
addr16
pop
aad
jae
jbe
xchg
js
scas
adc
adc
inc
shlb
adc
mov
push
stos
cmp
lods
mov
adc
or
push
dec
addl
or
cwtl
adc
add
pop
sbb
adc
ja
sbb
stos
jbe
adc
js
xor
or
mov
push
sbb
sti
jnp
cmp
jns
je
lds
fsubl
in
aam
and
xor
jns
cmp
cli
push
nop
adc
sub
andb
push
mov
sbb
sbb
cmc
sub
mov
push
add
jecxz
sbb
and
sti
pop
mov
xor
jnp
and
jecxz
sbb
inc
jno
bnd
mov
sub
adc
inc
pop
enter
dec
cmpsb
cmp
scas
out
cmc
stos
in
adc
and
sbb
push
xchg
in
mov
add
pop
call
mov
repnz
mov
sub
js
inc
jl
add
mov
jb
stos
sub
nop
push
sub
inc
lods
adc
inc
in
jle
and
xchg
fwait
movsl
imul
or
stos
lods
pop
jge
das
cltd
sbb
or
pop
iret
adc
inc
push
sahf
xorb
ret
and
jle
xorb
loop
sbb
hlt
push
xchg
fs
mov
jne
out
mov
sahf
and
stos
inc
iret
push
sbb
adc
pushf
push
mov
pop
sbb
cmp
nop
inc
or
jg
add
inc
adcb
sub
xchg
adc
push
mov
xchg
jo
xor
cmp
pop
or
repnz
ret
push
adc
loop
fidivl
inc
xlat
test
out
aam
cmp
mov
sbb
adc
and
nop
add
test
jg
cmpsl
xor
sub
pop
inc
push
adc
and
dec
or
cmp
dec
cli
adc
mov
mov
add
adc
sub
mov
xchg
mov
push
mov
sub
cmp
dec
adc
aam
pop
lret
imul
out
dec
push
and
jmp
mov
pop
negb
jb
pop
daa
popa
sub
adc
push
int3
xor
jl
leave
fs
js
pop
push
mov
sub
lds
jp
into
mov
xorl
cli
js
push
sub
xchg
sbb
sti
sbb
lock
adc
popa
xchg
or
or
fldt
mov
push
adc
sub
or
lods
roll
sub
adcb
out
sub
cmp
cmc
push
mov
popf
jne
cltd
push
xor
and
add
adc
sbb
cmp
sti
dec
adc
adc
xchg
bound
pop
push
mov
pop
addr16
ret
je
xor
pop
and
out
andb
cmp
lret
lea
push
or
adc
loopne
jl
pop
in
je
out
out
pop
movsb
push
sbb
adc
cmp
sti
add
js
lahf
popl
cmp
mov
movsb
das
rclb
inc
sbb
jmp
push
push
dec
xchg
addr16
adc
adc
cmp
daa
and
mov
scas
outsl
adc
pop
adc
xor
imul
ret
push
test
jne
test
shlb
frstor
int3
jg
and
dec
js
movsl
add
in
adc
cltd
test
fldt
lea
adc
pop
jl
lds
inc
xchg
shlb
pop
sbb
fnstenv
ljmp
jne
loop
dec
or
push
push
xor
xchg
mov
aam
xchg
stc
ljmp
pop
fwait
or
xor
add
push
rorl
and
mov
sub
cs
adc
push
es
push
pushaw
jbe
push
into
and
push
push
fcomps
xlat
bswap
xor
not
rep
aaa
rclb
loop
sbb
mov
pop
cltd
inc
js
or
xchg
neg
data16
jnp
adc
sub
jmp
loop
in
les
and
mov
movsb
pop
mov
movsl
data16
sub
mov
and
adc
mov
adc
stos
iret
mov
jb
cltd
mov
inc
or
jg
adc
ljmp
je
shrl
jge
pop
adc
fwait
mov
jp
xchg
fnstenv
lcall
push
xor
sbb
and
shl
xor
mull
aas
adc
fiaddl
addb
data16
cmp
pop
jo
jecxz
jle
arpl
jno
out
xchg
adc
adc
xchg
sbb
sub
loope
jmp
mov
mov
push
insl
inc
pop
and
add
mov
mov
in
insb
mov
inc
or
adc
mov
pop
xchg
sub
sub
add
repnz
jl
mov
add
and
xor
or
jbe
sbb
mov
out
bound
mov
lods
push
lds
cltd
inc
dec
cmpsl
adc
jae
pop
mov
and
and
pop
mov
je
js
or
lcall
mov
rcll
xchg
adc
pop
mov
test
cmp
out
adc
xchg
add
cmc
pop
and
mov
iret
arpl
mov
subb
and
cmp
adc
adc
sub
push
ret
pop
adc
rolb
dec
adcb
adc
jo
lahf
fs
rcll
dec
stos
xorb
movsb
stos
mov
mov
sti
fwait
jl
mov
jae
jmp
add
rclb
sbb
inc
out
ret
adc
jns
xor
adc
lock
push
jae
pop
fcompl
or
out
xor
jbe
and
std
jbe
orb
cmpsb
imul
mov
repz
jecxz
pop
arpl
js
lods
inc
adc
daa
push
jl
adc
je
sti
cli
les
adc
mov
arpl
mov
add
ret
sbb
shr
pop
lahf
aas
je
jae
sub
mov
testl
pop
push
xlat
or
jbe
jge
cltd
add
outsl
ljmp
fwait
leave
mov
dec
mov
out
das
lret
or
xchg
dec
sub
scas
push
inc
xchg
pop
mov
jb
or
push
jp
stos
dec
js
sub
cmp
shlb
in
adc
stos
jno
xchg
test
adcb
add
in
fsubrl
push
data16
add
jbe
ljmp
mov
xchg
push
or
hlt
push
cmpsb
adc
cmp
lock
ret
inc
scas
adc
sub
push
repnz
enter
adc
cmc
adc
stos
jge
rolb
and
or
adc
iret
js
and
push
adc
pop
mov
dec
sbbl
cs
adc
jl
gs
movsb
adc
test
add
jne
out
mov
stos
and
adc
jl
inc
test
rcl
push
test
arpl
cmpsb
xor
adc
push
adc
inc
pop
jno
push
test
lds
insb
sbb
jp
pop
push
adc
adc
add
pop
mov
mov
cwtl
in
fsts
ret
dec
pop
sbb
jg
and
in
adc
mov
xchg
sub
xlat
pop
xchg
cmovg
push
adc
sbb
inc
xor
fstps
xchg
and
les
sbb
adc
pop
dec
test
mov
lahf
popf
push
adc
ja
push
test
cmp
mov
push
push
shlb
xchg
sbb
sub
rorl
add
xor
mov
js
pop
mov
and
aam
mov
adc
and
jnp
pop
loope
add
sbb
fadds
mov
xchg
fistl
je
mov
insl
test
pop
ftst
dec
inc
mov
push
lret
mov
jmp
jge
adc
pusha
sbb
fnstsw
movsb
cmpsb
adc
jecxz
xor
les
inc
pop
push
sub
sub
imul
jb
jp
insb
fwait
adc
movl
outsb
ret
cltd
lods
xchg
and
in
jae
push
jl
add
jo
mov
test
and
jno
mov
add
dec
pop
cmp
jecxz
push
mov
xchg
adc
xor
test
sub
jb
jbe
jae
cmp
or
adc
sbb
jns
or
in
sub
or
pushf
pop
lds
test
mov
pop
push
sub
sbb
xorb
loopne
mov
jno
adc
mov
jl
add
pop
repnz
adc
and
adc
out
push
fs
adc
pop
push
mov
push
test
in
xchg
adc
in
add
lea
mov
mov
push
lock
mov
sbbb
fwait
scas
jae
and
xor
push
imull
jmp
in
pushf
adc
add
mov
push
adc
lret
and
rolb
adc
mov
je
fwait
cli
push
push
test
adc
aam
cltd
adc
rcr
or
lock
inc
pop
movsb
lahf
sub
test
sahf
mov
lret
adc
adc
xor
add
push
pushf
mov
jae
call
ja
and
aad
and
push
lds
sub
xchg
iret
test
mull
jne
sbb
jle
xchg
out
push
cmpsb
rol
cmpsb
movsl
stos
test
out
mov
mov
jmp
adcb
fxtract
test
push
pop
mov
clc
imul
aad
mov
cmc
dec
lret
ss
cmpsb
addr16
ljmp
pop
and
push
int3
cmpsb
in
aaa
insb
xor
cs
mov
testb
loopne
and
es
cmp
aad
mov
add
aas
ljmp
xor
xchg
imul
cs
mov
and
or
imul
sbb
shr
jg
cmpsl
fistl
cltd
lret
cmp
lock
sti
dec
imul
fwait
cltd
cmp
or
sbb
jl
jnp
popf
js
cmpsl
stos
pop
aas
pop
sbb
pop
mov
imul
mov
lret
jmp
push
test
aam
jb
dec
add
loop
shrl
push
stc
fidivrl
clc
sbb
cmp
or
int3
push
data16
jmp
xchg
mov
mov
push
ss
mov
adc
int3
jne
stc
stos
int3
mov
jns
fwait
sti
imul
cmp
inc
cmpsl
fwait
repz
push
cmp
lods
in
mov
jns
nop
cmp
leave
cmpsb
xchg
rolb
mov
dec
cmp
ss
xchg
mov
insl
mov
jmp
inc
sub
mov
mov
pop
pop
outsl
inc
inc
lret
fldenv
jp
es
inc
cmpsb
es
or
or
xchg
movsl
sub
sub
cs
insb
mov
mov
mov
mov
xlat
shrl
sti
xchg
xlat
test
push
sbb
out
xchg
fldenv
ja
mov
pop
lea
and
cld
outsb
cmp
popa
movsl
stc
xchg
sub
mov
push
add
into
daa
leave
fidivrl
inc
add
jne
jne
jne
jne
jne
push
stos
cmpsb
in
inc
movsl
fdivl
cltd
aaa
xchg
pop
mov
jmp
call
lret
adc
xchg
push
lds
pop
push
or
ja
nop
jo
adc
sub
push
js
movsb
sti
in
pop
call
xchg
push
adc
ss
sti
stos
inc
test
fiaddl
pop
sub
jne
push
sub
imul
pop
push
imul
push
sub
jp
cmpsb
cmc
xchg
lods
pop
rcrb
enter
add
fsubs
push
dec
mov
pushfw
sbb
pop
scas
lea
jmp
dec
lret
mov
andb
mov
jns
out
stos
fwait
rcrb
xchg
ja
addr16
and
mov
pusha
sub
fiaddl
js
adc
sar
pop
pop
movsl
jmp
mov
cmp
sbb
dec
inc
or
cwtl
test
enter
mov
inc
hlt
jae
cmp
lret
fistl
xchg
ja
mov
mov
call
sti
je
out
in
int
cmp
xor
ficompl
int3
fisttpll
call
mov
or
sub
mov
stos
jmp
outsl
cmc
or
clc
sub
mov
fdivs
mov
enter
dec
enter
daa
lods
sub
ds
push
ljmp
mov
add
popf
sbb
dec
test
dec
test
int3
mov
ljmp
mov
mov
mov
sub
inc
cmp
mov
mov
lret
sbb
xor
mov
xchg
cli
repz
inc
or
xchg
add
sub
test
mov
rcll
stc
jmp
imul
add
clc
test
cwtl
inc
je
add
int
mov
js
jns
jmp
inc
mov
mov
or
jmp
ljmp
loopne
xchg
clc
fchs
int
push
pop
in
outsl
jns
xchg
mov
inc
pop
push
pop
push
mov
add
xchg
leave
cmp
adc
clc
and
jmp
pushl
pop
xor
and
push
sti
xchg
mov
stc
fsubrl
pop
add
push
dec
mov
push
mov
pop
dec
sub
cmp
mov
fldenv
jecxz
xor
aam
xchg
cli
je
sti
mov
xor
addr16
rcrl
push
xor
sub
and
lds
pop
inc
test
and
in
scas
and
push
test
popl
test
test
movsl
lds
pop
adc
movsl
cwtl
lds
lock
xor
inc
cmc
lret
push
cmc
movsl
cld
lock
dec
iret
daa
test
xchg
cmp
out
cmp
adc
xchg
cmp
adc
fnstcw
xor
cmpsb
xor
clc
adc
int
into
iret
adc
mov
movsb
sbb
ret
jmp
fucomp
fsubrp
sti
rcll
mov
cld
mov
mov
test
pushf
pop
test
pop
je
cmp
imul
push
jnp
test
je
mov
push
sti
pop
test
icebp
es
cvtpi2ps
xchg
sti
xor
adc
out
ss
push
and
adc
cmp
leave
cmp
lret
neg
movsl
xchg
xor
mov
xchg
int
or
adc
clc
cmpsb
ljmp
fimuls
cli
sti
cld
mov
xor
out
loopne
incl
pop
sub
cltd
lcall
or
test
lods
scas
scas
mov
movsb
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
adc
notb
js
xchg
push
adc
mov
lcall
clc
arpl
jb
ret
dec
sarl
mov
push
mov
out
adc
xor
jae
inc
and
enter
ljmp
outsl
mov
jp
push
repz
sub
mov
pop
cmp
movsb
dec
adc
repz
add
pop
std
jae
mov
ror
cmc
sub
pop
je
adc
sub
cmc
lcall
or
adc
jg
mov
test
sbb
fiadds
sub
push
loopne
adc
imul
dec
pop
adc
movsl
add
das
clc
sub
adc
and
adc
mulb
pop
test
xchg
das
jge
jle
stc
adc
and
xchg
cmp
jg
adc
lret
mov
add
jge
xchg
cmp
and
pop
lahf
aaa
mov
adc
jl
adc
fistpll
out
ds
and
add
shll
hlt
and
xor
inc
scas
jae
bound
xlat
or
faddl
lcall
mov
les
sub
icebp
insb
cli
adc
cwtl
daa
dec
pop
adc
mov
inc
pop
jnp
imul
xchg
sub
xor
mov
popl
adc
repz
shlb
insl
adc
sub
loop
adc
ds
stos
adc
cwtl
mov
xchg
push
inc
jnp
push
adc
xchg
sbb
push
hlt
fcmovne
pop
add
xor
inc
cmp
aam
inc
subl
test
out
jg
sub
in
cmp
adc
in
pop
cmp
mov
insb
push
push
pop
mov
je
pop
iret
shlb
and
adc
mov
pop
push
adc
dec
loop
or
jp
nop
mov
sub
imul
cmp
pushl
scas
movsb
insl
aad
cmpsl
cwtl
loop
xchg
cmpsb
mov
xchg
inc
push
mov
adc
pop
mov
xchg
sbb
repz
std
in
jmp
lret
or
sub
lds
adc
mov
lahf
pop
adc
rcrl
pop
fsubrl
jp
inc
push
mov
imul
mov
jne
cmpl
sub
clc
das
cld
xor
jne
mov
fwait
xchg
in
fistpll
push
lea
pop
fsubrs
jecxz
lahf
or
es
repnz
push
cld
pop
shrl
and
and
mov
test
jbe
aad
aam
mov
mov
xor
addr16
enter
mov
adc
push
push
xchg
ja
cmp
pop
inc
rep
add
adc
std
insb
inc
adc
pusha
inc
pop
push
adc
daa
test
adc
in
push
jp
adc
or
test
cmp
incb
dec
xor
lds
push
aad
mov
les
and
clc
adcl
cld
dec
add
cmp
cmc
adc
push
iret
or
xchg
xchg
ja
adc
lret
jb
mov
adc
adc
jno
negl
mov
adc
leave
cmpsl
xor
dec
or
push
adc
popa
push
int
insb
jmp
jecxz
jle
insb
adc
pop
in
push
mov
adc
push
lods
jne
test
mov
inc
lea
mov
inc
mov
pop
rclb
fcomip
hlt
xlat
bound
fsubrp
mov
xchg
adc
push
stos
push
jae
cmp
in
dec
dec
xchg
xor
sbb
adc
mov
adc
test
sub
in
dec
mov
xor
push
mov
cmp
sub
push
ss
jb
adc
mov
jne
add
cmp
mov
icebp
jns
out
jge
adc
ret
arpl
add
int3
lea
inc
shlb
cmpsl
mov
jns
xor
lods
cs
adc
mov
int3
and
outsb
enter
xchg
shl
jmp
mov
adc
sbb
arpl
pop
sahf
pushf
sub
dec
sub
lahf
subb
mov
pop
mov
adc
cmp
popf
cmp
in
test
inc
push
lods
test
ja
push
sub
or
fs
xchg
mov
rcr
out
imulb
mov
subl
in
inc
adc
test
sub
mov
pop
jno
pop
insl
inc
ret
xchg
daa
sbb
mov
fs
xchg
and
add
dec
cmpsl
shll
xorl
inc
test
int3
and
dec
mov
pop
or
adc
mov
sub
outsb
or
mov
push
cwtl
push
stos
fstpt
std
loopne
aad
sub
ds
adc
jae
jns
xadd
shrb
roll
dec
adc
jle
adc
das
fs
jge
cmp
mov
xor
jns
out
lcall
clc
push
lahf
pusha
adc
jge
addr16
add
pop
mov
sbb
xchg
pop
add
jp
mov
aad
insb
xor
lds
pop
ljmp
loope
iret
sub
imul
xchg
jle
mov
adc
lock
mov
adc
and
jecxz
xor
sub
push
jne
push
inc
loope
xor
sub
shlb
and
adc
stos
sti
dec
sbb
pop
lds
popa
pop
fwait
mov
pop
repz
shlb
in
sbbl
cltd
sbb
iret
xor
adc
jp
adc
xor
call
test
scas
fstpl
imulb
add
xchg
mov
sub
mov
adc
ja
jo
adc
or
cld
push
adc
cmp
adc
pushf
lahf
icebp
dec
ret
pusha
jbe
fisubrl
arpl
xchg
mov
out
cmp
adc
mov
shl
xchg
add
cli
sub
adc
or
add
addr16
cmp
push
mov
sub
sti
popa
negb
test
dec
add
cmp
into
mov
das
adc
jle,pt
xor
cltd
adc
xchg
dec
xchg
dec
and
xor
sub
inc
dec
push
cmpsb
rclb
test
push
pop
fidivl
or
cwtl
push
lret
pop
adc
notb
bound
adc
jle
aam
mov
adc
subl
sahf
xor
push
dec
arpl
call
js
std
test
adc
jmp
js
movsl
and
push
xor
shlb
cmpsb
xchg
push
and
ret
fimull
addr16
test
xor
jb
xchg
mov
inc
and
in
leave
cmp
sub
adc
xorb
scas
mov
andl
cmpsl
int3
loop
aam
arpl
roll
cmp
adc
cltd
rorl
mov
adc
cld
ja
inc
ret
or
inc
or
shrb
clc
pusha
adcl
fucomip
repnz
push
in
insl
mov
aas
cmp
out
adc
pop
es
cmp
adc
jecxz
jnp
add
sub
mov
add
adc
andb
xor
cmp
int3
dec
adc
test
insb
jecxz
sbb
imul
pop
outsl
dec
sbb
loope
hlt
fwait
cmp
or
inc
ds
pop
lods
fcoms
mov
pop
mov
test
dec
nop
mov
mov
cwtl
loopne
icebp
out
rcrl
inc
sarb
aad
dec
mov
xor
add
hlt
popa
pop
adc
jno
out
adc
divb
out
adc
dec
cmp
test
sbb
test
push
jbe
jne
and
pusha
adc
sub
mov
and
mov
and
or
pop
sbb
lcall
ss
clc
xchg
into
insl
fisubl
pop
pop
mov
cmp
jae
pusha
lods
add
lock
mov
arpl
xor
sar
push
push
sbb
ss
or
or
les
jno
sbb
adc
jns
enter
test
out
mov
xchg
repnz
mov
inc
jmp
dec
adc
daa
loopne
pop
push
cmpsl
mov
add
pop
dec
and
adc
data16
pop
cmp
inc
loopne
test
and
les
or
ficoml
adc
rclb
push
inc
ljmp
fsubl
aad
sbb
stos
mov
and
add
pushf
mov
cmp
dec
adcb
popf
cli
xor
arpl
dec
jae
cmp
xor
adc
lahf
add
ret
insb
mov
dec
shrl
sub
adc
lret
add
mov
ror
into
xorl
xchg
test
imul
cld
jne
les
xlat
out
ds
loope
jae
inc
push
pop
hlt
push
or
sub
shr
jg
andl
push
popf
pop
std
jbe
int3
inc
sub
leave
int
pushf
adc
sbb
and
test
clc
test
fistpll
mov
cli
movsb
xlat
out
cld
add
sbb
adcb
rcrb
xor
out
or
push
addl
and
addl
mov
jle
sub
add
and
adc
adcb
pop
pushf
pop
cmp
into
push
xchg
jecxz
xchg
push
pop
cmp
jo
mov
jp
int3
call
ja
sub
push
arpl
adc
mov
and
xor
push
paddw
or
mov
sub
adc
insb
xor
mov
hlt
jecxz
lret
int3
pop
arpl
incl
fwait
or
imul
popa
aam
ja
loope
mov
push
adc
sub
jle
pop
in
or
or
adc
push
dec
sub
ficoml
cld
nop
lds
mov
sub
movsb
ds
add
das
imul
adc
icebp
adc
cs
pop
adc
sbb
jne
inc
fldenv
push
pop
in
adc
inc
or
mov
mov
loop
add
xor
in
sbb
js
pop
mov
adc
bound
inc
adc
sub
ds
adc
lods
or
mov
shll
push
adc
clc
mov
pop
ret
cltd
mov
iret
cld
lds
lahf
adc
ds
mov
adc
rcrb
fisttpll
dec
lahf
and
adc
aad
fs
mov
addr16
mov
or
xchg
movsb
lods
xchg
adc
sahf
mov
add
sub
dec
mov
clc
mov
les
int3
int
add
fldcw
ja
lods
or
mov
lds
and
insl
mul
inc
sub
lods
jno
ss
adc
pop
fwait
pop
and
dec
shrb
sub
push
mov
and
jecxz
push
repnz
movsl
dec
movups
adc
push
xchg
push
xchg
es
sti
cmp
adc
inc
pop
shl
in
les
cmc
or
push
lretw
fwait
adc
pusha
call
test
test
cmpsl
sub
das
xlat
xchg
jmp
aad
inc
iret
jg
stos
and
test
jne
cwtl
les
cltd
sbb
xchg
push
loope
adc
jbe
mov
popa
inc
scas
sbb
in
adc
cli
dec
mov
dec
jl
cmp
faddp
pushf
bound
and
loope
pop
cmp
adc
lea
jb
jo
lock
movsb
push
dec
popa
adc
mov
testl
and
sbb
push
ret
arpl
push
push
loope
sub
sar
dec
lret
ficoml
stos
out
add
ja
pop
dec
icebp
arpl
adc
fildll
and
les
push
inc
inc
cltd
test
loopne
ds
adc
loop
rcr
or
mov
movl
adc
mov
sub
ljmp
scas
test
fnstsw
mov
xchg
aas
adc
dec
push
dec
les
hlt
jae
push
aaa
adc
jnp
xchg
stos
adc
pop
add
mov
cwtl
adc
jb
insl
add
daa
dec
es
je
cmpsl
mov
adc
inc
push
rol
mulb
popa
xlat
cmp
cmpsl
rclb
out
in
xchg
arpl
sarb
and
mov
xlat
add
jp
add
adc
add
iret
or
adc
jno
adc
mov
add
mov
dec
cmpsl
and
lock
push
inc
sbb
xchg
loopne
adc
sbb
mov
adc
out
adc
sbb
adc
push
pop
jnp
adc
rolb
roll
dec
test
cmp
addr16
mov
leave
out
adc
adc
cwtl
inc
xor
or
and
jg
adc
push
enter
fsts
lock
jae
xchg
cld
arpl
fcmovnu
mov
mov
xor
inc
pop
test
scas
enter
adc
xchg
imul
or
sbb
adc
lret
sti
and
and
adc
mov
push
and
sbb
pop
pop
pop
adcb
mov
das
into
daa
adc
jl
cmp
insl
fs
aas
xor
or
or
cmpsl
pushl
popa
add
and
sbb
mov
sub
adcb
dec
sbb
adc
push
mov
jnp
pusha
adc
jecxz
inc
sub
add
and
cmp
pop
cli
mov
adc
imul
data16
adc
mov
cmp
adc
and
ret
into
sub
cmp
adc
and
mov
sbb
outsl
mov
lahf
push
cld
cmpsl
push
fistpl
adc
mov
loopne
stos
mov
repnz
adc
sbb
les
jae
jge
lods
add
iret
movsl
test
mov
cld
mov
jge
jp
adc
xchg
cmp
adc
push
mov
nop
pop
mov
mov
and
push
sbb
xor
lds
pop
addr16
scas
sbb
jecxz
adc
mov
adc
in
js
and
or
mov
jnp
adc
cmp
mov
dec
das
push
in
pop
adc
mov
pushf
in
jmp
push
mov
into
call
inc
add
pop
fcoms
add
mov
pop
sub
clc
adc
out
jge
cltd
mov
loopne
mov
push
sub
jns
push
mov
out
imul
clc
loopne
jp
sub
jae
jo
mov
sub
insl
shll
cltd
adc
je
dec
dec
adc
inc
sbb
testb
sub
pop
push
lahf
dec
adc
ss
popf
or
das
sub
shl
ss
cmp
ds
xor
sub
mov
loop
sbb
cltd
nop
inc
adc
scas
xchg
adc
push
pop
sub
stos
lods
popa
int3
push
sub
inc
sbb
adc
outsl
adc
inc
sub
sbb
or
jnp
jg
lea
lret
and
sub
out
adc
xor
cmp
cmpsl
mov
loope
test
and
sahf
fsubrp
mov
ss
sbb
mov
ss
or
scas
movsl
and
jne
call
lock
mov
jne
and
mov
inc
jmp
mov
negl
fstps
lock
sub
dec
jne
sbb
dec
adc
adc
sbb
push
lods
dec
adc
push
out
cwtl
adc
mov
cmp
adcl
orb
loope
sub
or
xorl
cs
jb
sbb
pop
nop
pop
test
mov
cli
test
imul
adc
fcoms
je
add
cmp
adc
add
inc
stos
movsl
int3
sarb
ljmp
fs
jo
sbb
or
aam
xchg
adc
push
shr
jno
stc
adc
xor
xlat
pop
adc
push
lcall
sysret
popa
or
adcl
jnp
mov
add
sbb
imul
inc
test
mov
mov
inc
aaa
mov
add
loop
not
mov
adc
or
adc
adc
sbb
xor
add
and
pop
add
fstl
jp
fwait
vsqrtss
inc
bound
add
mov
and
mov
sbb
adc
jbe,pt
mov
loope
lahf
popf
test
in
cld
mov
xchg
out
and
dec
inc
push
jge
test
inc
push
push
jns
dec
and
sub
test
fwait
bound
push
lock
cs
lahf
mov
aam
cmpsb
and
jns
dec
and
fcmovb
mov
inc
adc
xor
cmp
mov
push
adc
fldcw
and
hlt
inc
test
push
sub
adc
mov
adc
outsb
sub
mov
mov
and
adc
pop
icebp
adc
lcall
andl
mov
nop
addb
add
lea
rcrb
cmpsb
test
je
lret
das
in
test
push
sbb
mov
adc
nop
xchg
lock
adc
sbb
je
sbb
arpl
sub
push
push
dec
lret
pop
add
and
xchg
repnz
cltd
insl
mov
outsl
xor
divb
stos
add
push
mov
pop
jge
inc
adc
and
sbb
or
ja
cmp
lea
cmp
inc
jne
adc
fmuls
mov
adc
sahf
roll
pop
sbb
sbb
and
jp
repnz
and
cmp
sahf
lret
sbb
inc
les
inc
adc
repz
xchg
arpl
adc
int3
pop
lcall
sub
sub
and
adc
and
xchg
mov
sbb
adc
repnz
rorl
rclb
test
out
outsl
cmp
cltd
sub
push
dec
jnp
adc
mov
mov
jg
or
clc
xchg
mov
repnz
hlt
lods
lods
in
inc
dec
and
ljmp
cmp
and
mov
or
jbe
inc
in
mov
lds
mov
adc
mov
inc
daa
aad
xor
rcrl
and
add
pop
inc
nop
or
pop
imul
std
sbb
sahf
and
ja
les
pop
adc
and
test
pop
mov
pop
push
cld
jl
add
cmp
lcall
les
push
xchg
stc
adc
stos
lock
and
test
gs
xchg
or
jnp
or
pushf
addl
popf
inc
and
dec
sbb
js
lret
add
dec
sub
and
in
mov
sbb
xchg
imul
pop
and
jo
call
and
into
sbb
xor
adc
cli
or
rclb
arpl
jno
add
in
mov
imul
push
cmp
mov
pop
adc
xor
mov
mov
sub
mov
adc
fwait
sub
jb
iret
mov
sbb
mov
xchg
jne
sub
push
pop
fmuls
ret
jb
jnp
jp
sbb
scas
and
adc
inc
cmp
ja
andl
push
sbb
adc
mov
out
into
adc
xchg
iret
adc
icebp
divb
push
pusha
mov
push
stos
sub
xor
mov
in
push
adc
jo
mov
and
cltd
inc
andb
adc
int3
inc
add
push
out
sub
loop
mov
inc
adc
ja
pop
cmp
jnp
ds
insb
pop
adc
dec
push
nop
jl
in
sub
and
adc
femms
push
insb
adc
dec
mov
mov
aad
pop
jns
in
xor
lods
mov
repz
pop
ja
and
into
sub
mov
int
pop
outsb
out
push
rclb
jae
sub
test
pop
pop
adc
push
imul
jne
test
xchg
sub
add
and
adc
pop
mov
pop
mov
push
sbb
mov
adc
aaa
xor
test
mov
push
loop
push
je
lods
stc
mov
and
imul
adc
mov
aaa
add
jmp
fnstsw
rcr
and
pop
mov
mov
adc
jb
ja
push
movntps
ds
mov
inc
xchg
mov
pop
or
push
sbb
and
cmp
fmuls
and
fstps
andb
arpl
pop
adc
dec
inc
and
call
jns
mov
xlat
sub
popa
mov
aam
mov
and
stc
adc
dec
push
stos
int
out
into
sbb
mov
push
fsubrl
lcall
daa
jno
cmovg
push
clc
out
jae
push
push
lods
add
inc
push
dec
insb
sub
out
aam
jbe
mov
or
mov
cs
es
sub
jae
add
in
and
ret
inc
push
icebp
inc
movsb
cmp
lret
das
test
loop
jmp
jne
fwait
mov
adc
repnz
jg
and
and
mov
pop
mov
ljmp
adc
cmpsl
data16
shl
scas
leave
jns
dec
mov
jmp
ljmp
imul
inc
add
adc
pop
test
loopne
sub
mov
sub
int3
adc
cs
xchg
adc
in
pop
adc
inc
mov
cwtl
pop
out
mov
adc
shlb
ss
pop
dec
inc
inc
adc
cmp
jl
jo
test
push
push
pop
jmp
into
lods
loope
repnz
daa
pop
sti
xor
clc
mov
sbb
sbb
mov
adc
cld
mov
sbb
adc
cmpsl
out
cmp
sbb
popf
push
sub
add
push
loopne
xchg
lds
jge
and
cmp
into
lahf
xor
test
imul
or
jmp
adc
pop
sbb
adc
and
xor
scas
mov
mov
and
mov
clc
test
test
xor
sahf
mov
adc
sub
mov
sarb
add
lds
mov
sbb
lods
dec
stos
push
adc
lret
and
and
nop
adc
lods
dec
push
mov
cmp
adc
and
dec
movsb
mov
adc
jp
push
jnp
pop
lds
mov
scas
sti
mov
pop
addb
enter
fisubrl
mov
sub
insl
int
dec
mov
push
cld
cwtl
sbb
mov
adc
add
sbb
loopne
mov
xor
and
dec
xchg
xor
jge
xchg
mov
dec
sar
cmp
les
adc
push
inc
in
adc
mov
mov
shlb
fs
pop
out
sbb
add
lret
loope
repnz
jmp
and
jnp
jp
sub
jns
mov
rcrb
ja
unpckhps
bnd
add
and
mov
inc
adc
pushf
mov
mov
fnstenv
adc
ljmp
cmpsb
mov
nop
daa
ds
pop
movsl
cmc
cmpsb
adc
and
js
loope
pop
in
data16
inc
fs
push
mov
pushf
add
jg
push
pusha
adc
dec
sbb
mov
movsb
je
stos
xor
mov
andl
cld
fists
fiaddl
loop
ss
adc
jae
jp
adc
lds
push
and
xchg
mov
rolb
mov
movsl
lock
xchg
sub
pop
or
mov
rcl
adc
pop
nop
call
mov
push
add
das
popa
jo
fidivl
inc
xchg
scas
sub
cmp
or
adc
adc
mov
jp
push
addr16
cmp
cmp
inc
add
mov
mov
adc
mov
scas
and
cs
xor
sub
mov
xchg
adc
pop
sbb
mov
sub
pcmpgtd
dec
stos
and
pop
imul
adc
adc
jbe
xchg
or
adc
pop
out
adc
sbb
and
jl
adc
int3
adc
inc
ja
xlat
test
adc
mov
loop
cmp
xchg
mov
xchg
movsl
adc
out
fisttps
in
mov
divb
push
cmp
insb
test
xchg
fidivrs
adc
mov
outsl
sub
push
mov
cwtl
push
cmp
sti
stos
adc
ja
leave
and
push
out
idivb
inc
stc
sub
inc
adc
scas
je
jge
push
adc
xor
and
push
scas
icebp
jns
nop
mov
adc
pop
lock
insb
test
inc
ficoms
das
leave
xchg
addr16
adc
xorl
xor
mov
addb
inc
cmpsb
pushf
cli
test
incb
not
cltd
adc
clc
add
dec
add
fxch
sbbb
ret
pop
sub
mov
push
push
sub
cmp
jb
inc
lds
adc
and
or
adc
fisubl
mov
pmulhw
sbb
icebp
inc
adc
ljmp
in
rorl
rcrl
jp
cwtl
xor
jge
xor
or
test
test
jle
pop
jg
adc
inc
fistl
dec
lods
mov
mov
dec
addr16
lahf
clc
push
mov
push
xchg
mov
in
add
repnz
and
mov
ds
adc
pop
jae
into
mov
jmp
or
lahf
je
xchg
fdivl
ret
mov
loopne
fistl
pop
int3
popa
lea
mov
mov
xchg
sarl
inc
mov
ss
push
sbb
mov
fistl
inc
pop
xor
add
div
cmp
in
testl
xchg
adc
jnp
imul
dec
lock
adc
pop
adc
xlat
int
mov
cwtl
addl
adc
fiadds
fnstenv
aas
in
and
test
inc
adc
push
les
add
mov
shrb
gs
lods
int
aas
adc
pop
mov
jle
ret
push
bound
mov
add
cs
cltd
inc
cmp
jbe
and
adc
insl
cltd
mov
add
movsb
pusha
adc
loope
xor
adc
out
ljmp
loopne
roll
fs
adc
test
mov
repz
jg
ficomps
push
std
mov
out
xor
ss
and
dec
sub
sbb
xchg
into
test
sub
ja
movsl
movsb
sub
lea
jns
int
adc
add
fadds
mov
xchg
sub
pop
push
neg
xchg
adc
hlt
js
sbb
push
push
aas
push
lds
jl
or
mov
jae
rcrb
pop
imul
adc
cltd
xchg
sbbb
push
addb
push
push
movsb
pop
imul
dec
outsb
adc
sbb
mov
arpl
jge
push
push
outsl
mov
adc
inc
sub
inc
adc
jg
pushf
pop
notl
rclb
fcompl
inc
daa
test
sub
out
xchg
lds
movsb
and
les
or
dec
push
mov
pop
inc
adc
hlt
mov
adc
sbb
movb
jecxz
or
test
ss
sub
lret
ret
das
adc
mov
sbb
es
or
dec
fisubrs
xchg
adc
lock
adc
xchg
call
dec
mov
ror
adc
sbbl
leave
ja
rclb
mov
and
cltd
jb
and
mov
xchg
adcb
jl
jecxz
stos
cmp
test
lahf
pushf
mov
xchg
mov
sbb
sbb
adc
sub
inc
add
jns
sbb
xchg
adc
pop
popa
in
adc
adc
insl
adc
inc
insb
int3
fbld
enter
or
and
inc
addr16
mov
in
mov
xchg
xor
add
mov
imul
sub
out
fdivl
mov
in
jl
add
push
adc
arpl
scas
icebp
clc
ljmp
outsl
adc
xlat
sub
jl
pop
push
das
mov
adc
mov
jb
test
adc
jmp
xor
sbb
sub
sbb
and
sub
pop
and
jbe
repz
sub
aam
dec
push
loop
insb
je
push
jge
inc
mov
fisubrl
adc
mov
push
add
and
into
lock
sbb
in
loopne
and
adc
out
test
or
adc
xchg
xor
push
mov
test
loope
cmp
adc
pop
cmp
lea
idivl
cli
mov
mov
test
jge
mov
into
adc
loopne
mov
ret
adc
sbb
clc
jne
dec
mov
lds
shrb
or
push
frstor
xchg
inc
pop
int3
push
decl
add
sub
test
xchg
les
adc
xor
mov
movb
and
loopne
cs
gs
pop
out
das
sub
mov
dec
add
icebp
stos
and
cs
push
dec
adc
popa
pop
js
adc
adc
adc
push
cmp
cmp
sbb
push
mov
in
cld
or
mov
push
sbb
inc
and
cli
inc
jnp
jns
dec
add
cmp
add
sub
adc
enter
rolb
lods
pop
insl
ret
and
repnz
popf
add
dec
and
add
push
sti
in
adcl
adc
enter
xor
xchg
rcl
push
inc
sub
inc
adc
das
call
shrl
mov
movsb
sbb
mov
pushf
jmp
sbb
js
sub
std
push
mov
mov
push
mov
and
pushf
or
and
mov
mov
adc
jge
xlat
mov
fdiv
xor
adc
add
lds
gs
mov
jg
sbb
insl
in
sbbl
or
sti
pusha
pop
inc
pop
adc
lock
std
xchg
in
stos
sub
leave
push
clc
jbe
in
add
rcrl
jg
push
inc
hlt
lds
jb
xchg
iret
and
pushf
mov
adc
or
int
fs
jb
stos
adc
lock
repnz
test
inc
pop
jne
sub
mov
loop
cwtl
lret
sub
cmp
lahf
xchg
dec
inc
cmc
das
inc
jge
adcb
in
dec
leave
adc
pop
mov
and
push
mov
xor
and
ja
fs
adc
daa
inc
and
fldl
lods
bound
imul
and
inc
adc
sbb
fidivs
inc
dec
inc
jge
and
push
xor
and
inc
ret
adc
ds
mov
or
nop
shlb
stc
pop
xchg
xor
iret
cmp
mov
test
out
and
lds
adc
jb
lods
jae
jp
divl
gs
mov
mov
and
mov
push
popa
add
mov
outsb
addb
jnp
js
sti
or
mov
fistl
pop
or
adc
out
cmpsb
dec
stos
mov
push
mov
js
jp
adc
inc
xor
dec
adc
aam
mov
add
outsl
mov
dec
movsb
add
and
jns
inc
and
lock
icebp
mov
or
call
jmp
push
outsl
adc
xchg
push
add
sub
push
sbb
hlt
dec
iret
pusha
icebp
xor
addr16
sub
cli
ds
xchg
add
jbe
xchg
ficoml
pop
dec
sub
add
lds
maxps
jge
enter
rcl
das
or
mov
pushf
push
adc
scas
lea
sub
das
mov
icebp
push
or
mov
jg
imul
mov
adc
sahf
add
lret
push
aas
mov
ljmp
int3
movsl
xchg
jns
xorl
arpl
or
push
pop
fs
fsubl
add
push
pop
and
jl
and
jne
dec
fucomi
xor
sub
mov
and
xchg
lods
repz
lret
or
or
bound
adc
adc
adc
pop
adc
aad
leave
xchg
adc
bound
repnz
mov
ds
sbb
hlt
add
adc
jne
mov
hlt
pusha
sbb
dec
jle
adcb
mov
int3
std
paddq
xor
push
scas
inc
out
adc
cmp
iret
das
adc
gs
pushf
lods
movsl
movsb
cmpsl
cmp
sbb
pop
adc
sub
outsb
adc
mov
jg
insl
mov
cmpsb
ja
adc
lods
and
lods
cld
cmp
push
sub
mov
inc
ja
adc
mov
call
mov
push
sbb
adc
ror
inc
mov
or
and
daa
movsb
out
into
adc
sbb
push
cli
adc
call
mov
mov
orb
and
cmp
dec
mov
xchg
jmp
adc
mov
and
sbb
dec
jns
adc
stos
add
ja
mov
cwtl
test
or
and
push
or
aad
sub
add
nop
jbe
mov
sbb
push
adc
fidivl
ret
xor
and
data16
push
fwait
xchg
xchg
or
clc
arpl
jne
imul
pusha
mov
jns
jbe
inc
mov
cwtl
adc
pop
xor
jmp
mov
arpl
add
popa
lds
pusha
das
insl
dec
jne
test
mov
push
or
pop
add
push
lea
arpl
adc
and
jecxz
xor
add
xor
sub
pandn
and
fisubs
insl
sbb
test
inc
pop
inc
push
rcrb
roll
cmc
fbstp
jbe
and
dec
test
clc
mov
inc
int3
mov
mov
into
movsb
enter
adc
or
fdivr
mov
sub
arpl
nop
adc
or
ficoms
xor
repz
popa
jbe
imul
js
push
aam
lahf
fiaddl
and
test
sbb
lock
push
inc
adc
cli
sarb
sbbb
mov
scas
push
cwtl
or
das
adc
jbe
mov
dec
out
mov
jo
arpl
adcb
push
mov
aas
adc
mov
popf
sub
mov
push
xor
cmp
pop
adc
enter
adc
test
ret
xchg
cmp
das
jb
adc
add
jmp
ljmp
sarb
adc
out
ss
or
and
pop
aad
adc
scas
fs
dec
adc
arpl
std
cltd
and
inc
fsts
movsb
mov
test
pop
sub
ja
out
adc
cmp
rcl
fwait
out
call
dec
mov
lds
mov
add
cltd
mov
sub
rorb
adc
xor
sbb
sbb
or
adc
inc
add
int3
sub
mov
adc
fimull
mov
inc
push
cmp
fstpl
and
adc
clc
test
pop
scas
dec
add
aas
sub
inc
adc
pop
data16
adc
dec
stos
gs
lret
fstpt
add
and
mov
pop
adc
arpl
add
xchg
jae
adc
pop
lahf
jnp
pusha
int3
mov
and
and
lea
push
sub
cmp
adc
and
into
mov
push
cwtl
addb
jnp
adc
cmp
nop
add
dec
sub
ret
xor
xchg
pop
jbe
outsl
cmp
jno
cli
jg
std
adc
jecxz
in
mov
nop
jg
inc
push
addb
jo
mov
cli
sahf
adc
xchg
adc
xchg
jns
mov
in
add
dec
sbbb
sub
jno
sub
dec
int3
xor
xor
adc
adc
addr16
mov
sti
and
mov
scas
data16
test
dec
dec
xchg
mov
aam
shl
mov
mov
in
and
add
out
pop
out
test
push
cmp
nop
adc
test
in
ret
out
adc
call
lock
inc
pop
and
loope
int3
sahf
into
adc
mov
sub
adc
stos
loop
sub
push
and
out
lods
sub
inc
xorl
jns
jnp
pusha
js
cld
adc
popf
xchg
xchg
adc
enter
xor
pop
addl
in
gs
jns
stos
dec
ficoml
dec
loopne
into
rcrl
test
hlt
xchg
mov
repz
dec
dec
sub
adc
stos
mov
lcall
lahf
mov
inc
mov
push
ret
sbb
in
mov
pop
mov
mov
dec
push
sbb
mov
dec
cmpsl
xor
sbb
lods
adc
adc
jae
sbb
outsb
test
push
shl
xchg
push
and
jl
push
pop
jmp
cmp
test
sar
cmp
xchg
xor
mov
or
lods
fwait
int3
bnd
cmpsl
adc
popa
mov
leave
pop
adc
push
adc
bound
test
sub
and
cmc
sbb
in
cmp
nop
out
sarb
push
xchg
inc
add
andl
out
push
push
rorb
pop
and
mov
dec
add
jmp
inc
jge
pop
fwait
daa
push
imul
jno
push
cmp
mov
sub
mov
iret
lcall
inc
cmp
sahf
seto
in
add
adc
test
sub
movl
jl
fstl
shrb
sbb
data16
adc
mov
and
notb
hlt
or
lods
xor
inc
and
mov
inc
out
cmp
add
dec
inc
dec
pushf
cmpsl
adcb
adc
inc
sarl
and
adc
outsb
movsb
jb
or
mov
or
filds
jno
popf
adc
cmp
pusha
jge
and
adc
ds
mov
xor
rcrb
xchg
in
jl
cmpsb
add
sub
adc
enter
add
pop
sub
mov
adc
push
and
jl
inc
fwait
xorl
add
decl
mov
lret
xchg
xchg
or
adc
fsubrl
testl
adc
dec
lock
adc
shll
or
clc
jp
mov
adc
icebp
and
adc
jg
ficoml
push
jns
das
adc
dec
sbb
add
jl
adc
or
subl
mov
sti
ja
push
in
dec
adc
cmpb
ret
adcb
mov
fistl
leave
push
inc
adc
mov
es
scas
add
push
cmp
fwait
xor
xor
lret
ffreep
mov
subl
push
es
pop
movsb
or
or
adc
pop
or
add
bound
in
mov
test
mov
shrl
sub
inc
test
adc
mul
sbb
adc
mov
sbb
sbb
leave
sbb
or
sbb
mov
stos
and
jnp
push
mov
push
in
cmp
push
ljmp
dec
add
sbb
fidivs
xor
jo
sbbb
mov
call
test
mov
lds
jbe
add
outsl
xor
dec
test
dec
and
and
pop
sub
xor
lds
test
or
or
dec
or
dec
dec
pushf
mov
aas
cmpsl
movsl
cmp
adc
js
adc
nop
pop
jnp
fisubs
mov
test
pop
stos
xchg
add
adc
lock
pushf
mov
jnp
xchg
adc
inc
adc
dec
sbb
sbb
popa
test
js
outsl
loope
dec
sub
xlat
sbb
jl
xor
dec
fbld
adc
mov
andl
mov
into
ss
sbb
adc
pushf
sub
aad
push
pop
insl
adc
adc
imul
sahf
or
inc
sub
or
and
adc
push
sub
push
xor
mov
and
cmp
sbb
mov
push
in
testb
or
mov
or
mov
adc
push
jo
rol
mov
or
mov
add
mov
inc
adc
sbb
dec
sub
xchg
cmp
sbb
mov
mov
lahf
adc
adc
test
dec
jmp
sarb
js
lahf
nop
cli
cmp
sbb
sti
fidivs
test
pop
adc
es
mov
jo
cmc
add
and
inc
mov
scas
adc
inc
jbe
icebp
adc
mov
adc
sub
adc
mov
loopne
call
pop
adc
jno
and
lahf
pop
sbb
adc
jg
ret
adc
push
push
pop
pop
adc
data16
es
negl
pcmpeqd
push
les
mov
imul
in
enter
push
adc
and
xor
mov
and
arpl
or
pop
and
loopne
mov
dec
lret
sub
in
mov
inc
popa
inc
or
and
push
and
xlat
sti
xchg
adc
movl
mov
push
and
adc
ret
cmp
enter
in
jne
ljmp
mov
js
add
add
push
xchg
xlat
push
sub
sub
jl
sbb
test
or
stc
mov
and
cmc
test
in
in
xlat
pop
adc
in
jns
test
frstor
or
push
movsb
push
mov
test
std
mov
sbb
mov
jns
mov
pop
add
sub
fwait
adc
pop
dec
cmp
adc
in
mov
cmp
fimuls
mov
pop
rclb
faddp
xor
test
inc
mov
mov
cmp
loope
std
xorl
xor
das
sti
stos
repnz
adc
sub
cmpsl
movsb
cs
adc
insb
pop
mov
cmp
movsl
int3
sbb
add
arpl
ret
cld
sbb
cmpsl
cwtl
unpckhps
push
fiaddl
aas
adc
mov
add
loop
jns
mov
push
sahf
jge
adc
notl
pop
adc
shll
out
iret
add
xchg
jno
scas
test
data16
mov
sub
dec
pushf
push
adc
mov
les
push
arpl
sub
adc
mov
adc
inc
dec
mov
sbb
setno
icebp
adc
mov
mov
and
popf
cmp
stos
inc
xchg
pop
or
aaa
adc
dec
sahf
es
push
pop
mov
inc
and
adc
push
add
pop
and
imul
fisubs
movsb
push
aas
scas
xor
mov
lret
xor
test
cmp
sub
jae
scas
adc
jecxz
jo
sub
mov
adc
mov
push
adc
pop
push
jmp
lds
sbb
sub
cmpsb
out
int
lds
adc
push
les
les
xchg
shrb
lcall
aam
incl
add
arpl
cwtl
push
mov
sub
ja
adc
mov
call
outsb
inc
adc
push
jecxz
jge
add
sbb
lahf
scas
or
test
and
pop
mov
push
jne
or
mulb
add
frstor
mov
jmp
mov
mov
adc
clc
call
out
cmp
leave
sub
pop
jle
adc
shlb
mov
or
inc
fwait
or
sub
adc
push
jle
mov
inc
sbb
in
adc
inc
pop
sbb
ret
pop
adc
iret
xor
cli
adc
and
movsb
dec
adc
xchg
xor
adc
sbb
insb
adc
dec
mov
xlat
adc
mov
sub
add
ret
and
ljmp
jne
mov
mov
out
adc
out
adc
xor
jge
shlb
mov
fwait
movsl
xor
xchg
sub
mov
scas
jmp
xchg
xor
dec
into
adc
or
cmp
call
push
pushf
icebp
shlb
push
pop
movsb
imul
in
pop
pop
adc
mov
cli
ljmp
adc
pop
adc
inc
mov
mov
loope
xchg
inc
sbb
fwait
shrb
and
pop
adc
fstpt
les
mov
mov
dec
adc
stc
repz
push
daa
mov
mov
sti
mov
xor
adc
sub
push
jmpw
and
lahf
leave
sub
cli
adc
stc
dec
subl
das
rorl
fisttpl
testb
adc
sub
or
inc
push
cltd
mov
adcl
mov
lds
mov
xchg
stos
adc
les
inc
and
or
or
and
inc
mov
add
or
jp
adc
jnp
nop
stos
jno
inc
mov
cmp
lods
xor
mov
jmp
mov
and
test
sub
dec
push
and
mov
idivl
sti
test
fwait
adc
jns
ja
adc
imul
test
mov
lret
dec
mov
mov
out
inc
and
mov
sub
push
test
push
dec
jnp
jae
cld
mov
rorl
inc
jbe
ja
rclb
xchg
mov
cmp
push
in
mov
push
and
push
or
jl
bswap
hlt
pop
in
sub
and
cs
mov
sub
xor
aam
and
loop
jecxz
jne
xchg
and
xchg
xchg
ret
push
loopne
push
cmpsb
sub
xor
in
outsb
lret
imul
push
ficoml
cmp
mov
mov
sub
rcll
sarb
jo
dec
push
pushf
jnp
clc
sub
inc
arpl
mov
lret
cmp
test
iret
jg
dec
jp
and
dec
or
pop
sub
sub
sub
mov
cs
lods
mov
in
adc
adc
pop
ret
in
mov
push
enter
in
mov
popa
popa
jecxz
scas
mov
dec
inc
fs
adc
xchg
pop
test
fbstp
das
movsb
adc
xchg
pop
decb
and
arpl
sub
ss
adc
cmp
lock
jo
nop
dec
and
jg
fldt
push
and
mov
int3
dec
jle
xor
mov
gs
add
and
and
iret
adc
push
xchg
out
out
pop
dec
pop
lods
or
add
test
push
lds
jae
icebp
and
pop
addr16
shlb
push
and
xor
xchg
rcll
adcb
fisubrl
shlb
or
loop
mov
mov
push
cmp
ror
jmp
adc
fdiv
pop
cmp
inc
pop
icebp
in
push
js
mov
bound
pushf
ret
lcall
shrb
jp
sarl
mov
and
mov
cmp
lods
test
xchg
and
mov
inc
adc
mov
sub
sahf
cwtl
lahf
sbb
loopne
pop
popw
test
sub
inc
xchg
fiadds
pop
fstl
out
jo
aad
test
sbb
xchg
xchg
subl
sbb
push
or
lock
push
in
mov
push
mov
fdivrs
adc
adc
ljmp
cld
stos
mov
adc
mov
arpl
mov
fadds
mov
call
dec
jo
icebp
push
xchg
sub
push
adc
out
int
adc
das
loope,pt
mulb
test
pop
xchg
add
cmp
mov
jne
xor
mov
adc
mov
sub
in
sub
cmpsb
icebp
or
negl
adc
cmp
xchg
jns
adc
loopne
outsl
xor
jne
sub
sub
and
lret
or
sbb
and
ficoml
inc
filds
in
jg
mov
and
ret
add
fsubrl
je
jp
jg
test
lcall
mov
jecxz
js
mov
dec
xchg
xchg
sub
test
inc
stc
or
mov
jae
cmp
cmp
push
lds
mov
and
movsb
hlt
out
dec
push
and
jne
popf
xchg
push
sub
mov
pop
aam
push
add
jbe
jae
int
sub
adc
testl
jge
mov
scas
ja
test
mov
inc
cmp
hlt
cmc
aad
jbe
jecxz
sbb
loope
mov
in
pop
out
ret
mov
mov
int3
rcrb
or
pop
pop
mov
dec
push
and
daa
leave
inc
dec
cmp
xor
sbb
or
mov
setb
cmp
pushf
shl
and
add
push
int3
sub
std
in
adc
sbb
sub
cld
rclb
sub
mov
xchg
test
xor
sbb
mov
and
jle
divl
icebp
stos
dec
call
sbb
and
push
stc
adc
xchg
jg
push
adc
sbb
sbb
fchs
enter
orl
ds
xchg
mov
mov
mov
ret
sub
xchg
mov
notl
lock
adc
gs
fsubl
and
xor
insb
jno
xchg
aas
sahf
fcoml
movsl
jecxz
movl
cmpsl
push
adc
mov
cmpsb
xchg
adc
pop
jae
inc
adc
jp
pusha
je
xchg
sbb
movsl
xlat
and
and
pop
jecxz
adc
popa
xor
cmpb
mov
aad
das
ficoml
fstl
sbb
and
repnz
mov
cli
or
xor
int3
adc
add
bound
dec
mov
pushf
addr16
push
insb
xchg
push
out
add
xchg
addr16
sub
mov
aas
nop
and
fcmovb
jbe
insl
jge
and
adc
leave
mov
mov
inc
or
cli
bound
jbe
dec
inc
push
popa
add
and
add
adc
jns
push
mov
xchg
lahf
xor
fistl
adc
mov
std
je
inc
lods
adc
push
add
popa
adc
test
out
mov
divb
adc
ret
fcmovnbe
or
dec
push
sub
cmpsb
mov
int3
ret
mov
imul
cmp
adc
mov
jne
hlt
prefetch
cwtl
mov
mov
or
push
mov
mov
pusha
movsl
repnz
cmpsb
sbb
add
cli
xchg
mov
cltd
add
push
outsb
in
sub
mov
mov
adc
adc
loope
scas
jecxz
inc
and
test
sub
cmp
ljmp
iret
stos
pop
sub
les
adc
sub
mov
adc
mov
out
cmc
jmp
pop
xor
add
sbb
xor
adc
lret
movsb
push
adc
mov
adc
data16
push
sub
sub
movsb
test
rcr
lds
dec
stc
lods
dec
sub
adc
sbb
mov
xor
bound
adc
arpl
pop
pop
adc
jne
cltd
adc
sbb
pop
adc
and
dec
fnstcw
adc
mov
or
aas
addr16
xchg
or
xchg
push
loop
add
sub
jae
ficoms
lea
dec
cmp
push
mov
jl
add
and
dec
lds
and
sahf
adc
nop
movsb
add
in
xchg
stos
aam
adc
ffree
aas
push
xor
cmp
stc
les
push
lods
adc
lock
push
adc
loop
add
inc
sahf
push
fcoms
test
in
push
adc
dec
push
fnstenv
jl
test
mov
lock
jbe
icebp
dec
pusha
adc
mov
inc
scas
fcoms
mov
sbb
dec
and
shll
sbb
je
sbb
jle
lock
add
into
scas
adc
ljmp
jp
sahf
pop
mov
out
pop
outsl
pop
xchg
and
lahf
repz
cmpsl
mov
inc
mov
sub
or
dec
jge
repz
adc
sub
test
jle
cld
adc
pusha
xor
fs
cltd
and
lock
jecxz,pn
out
stos
loope
push
roll
lcall
outsl
sbb
mov
ficoml
adc
into
or
adc
xor
push
movsb
jg
lods
mov
xor
out
cwtl
jnp
cli
sub
out
popa
mov
data16
sub
cmp
mov
mov
mov
adc
cmp
sub
ret
test
adc
rorb
insb
push
testb
sub
adc
sbb
scas
push
adc
jns
xor
and
add
adc
adc
pop
dec
push
cmp
fwait
pop
stc
popa
xor
in
mov
cld
or
sub
lret
repz
adc
ret
loopne
add
sbb
arpl
mov
cmpsb
fwait
pop
sbb
jno
clc
in
sub
mov
lods
sbb
popfw
test
sub
adc
sti
test
adc
add
push
or
lret
pop
paddq
mov
xorl
push
adc
in
mov
out
or
incb
push
loope
ljmp
and
arpl
add
adc
mov
sbb
adc
inc
adc
mov
mov
adc
push
out
mov
les
inc
jp
mov
ja
adc
pop
pop
mov
insb
jge
test
hlt
push
push
lcall
ret
dec
je
sub
pop
mov
imul
xor
mov
adc
or
inc
in
sbb
xor
leave
mov
in
add
fimull
adc
mov
js
inc
or
es
jne
adc
and
cld
insl
adc
scas
xchg
orb
adc
lods
aas
push
or
jne
push
add
fistpl
inc
add
sbb
dec
sub
sub
sub
ret
xchg
rcrb
and
jge
mov
dec
stc
mov
lahf
inc
push
lds
push
mov
mov
adc
cmp
and
adc
jp
sbb
xchg
sbb
adc
push
mov
adc
mov
adc
pop
cltd
out
adc
cmp
adc
es
imul
psubq
ret
adc
jecxz
adc
sub
mov
cmp
test
cmp
add
scas
adc
andl
adc
mov
xchg
dec
repz
test
push
and
jno
pushf
imul
mov
dec
add
lds
stos
and
pusha
jl
adc
push
outsb
into
fmull
mov
mov
mov
sub
xchg
movsb
popf
sbb
mov
arpl
fsubl
out
and
daa
adc
dec
add
dec
add
stos
insb
mov
shrl
jp
divb
jle
cmp
cli
cmp
repnz
cltd
lcall
scas
fsubl
inc
jns
cmp
mov
dec
jp
adc
mov
mov
inc
bound
lods
outsl
mov
dec
jne
out
dec
fildll
push
dec
out
rcl
test
adc
into
cltd
add
or
push
sbb
or
mov
or
xor
lods
bound
fisttps
push
fs
jle
cmpsl
scas
cmp
and
leave
call
xor
cmp
and
rcr
mov
lods
add
pop
push
test
xor
mov
lahf
jae
pop
mov
adc
movsb
es
and
push
pop
mov
adc
adc
fcoml
mov
jmp
nop
mov
xor
lods
movsb
jb
adc
mov
rol
aam
clc
out
sbb
jno
adc
or
or
adc
add
jmp
into
dec
mov
add
push
or
imul
mov
lds
add
xor
in
dec
xchg
push
inc
push
sub
inc
inc
pop
mov
jge
cs
cltd
adc
arpl
out
mov
and
cltd
mov
sub
jae
push
jl
cs
sub
loop
push
out
loopne
inc
movsl
ja
scas
dec
adc
lock
fcomi
call
jp
or
mov
push
adc
push
adc
sar
arpl
pop
pop
daa
push
xor
and
cwtl
xchg
add
das
addr16
fimuls
dec
test
push
cmpsl
lret
movsb
mov
adc
sbb
jg
adc
outsl
xchg
xor
pop
or
sub
adc
add
or
test
cs
lock
ss
pop
int3
out
lret
adc
mov
stos
inc
cmc
fwait
jno
push
lock
adc
xor
cmpsb
cmp
adc
fwait
sub
pop
adc
shll
xchg
scas
mov
jo
sarl
enter
outsl
ficoms
xchg
push
vunpckhps
repz
enter
jmp
mov
roll
and
lods
xor
aad
xor
jnp
or
stc
movsl
jl
sub
cmp
sub
sub
or
mov
mov
xchg
pop
mov
test
fldl
xorl
lret
jmp
lds
ljmp
stos
mov
movsl
add
fistpll
mov
xor
test
gs
pushf
xchg
pop
mov
mov
stc
test
in
push
adc
lcall
mov
shlb
sub
test
mov
aam
jp
leave
cmp
pop
pop
dec
dec
fs
das
loopne
out
mov
mov
aaa
roll
sbb
sbbl
mov
test
adc
int3
rolb
and
mov
loopne
aam
push
in
ss
les
cli
push
xor
sbb
inc
sbb
fwait
xor
test
mov
shll
in
and
mov
sbb
cld
xlat
aad
dec
mov
lahf
jle
add
bound
in
dec
mov
sub
and
lock
movsb
sbb
movsl
push
dec
sub
xchg
jbe
in
int
or
pushf
push
push
or
sahf
aas
xchg
xlat
jp
dec
jne
xor
repz
sbb
ret
lock
fbld
sub
push
xchg
fcmovne
and
jg
xchg
push
cmp
sbb
dec
ja
mov
jns
sub
or
adc
xor
pop
sbb
and
xor
aam
adc
xchg
int
fcoml
fs
cmp
dec
scas
mov
enter
cmpsl
xchg
ljmp
pop
jge
sbb
test
out
les
xchg
push
les
jg
and
lds
lds
cs
stc
and
push
pop
xor
jne
adc
cmp
mov
mov
dec
sbb
cli
adc
aam
xlat
adc
inc
or
test
into
fists
loope
mov
adc
mov
mov
call
cli
dec
iret
dec
mov
inc
sub
sub
sub
inc
sub
outsl
jae
mov
lods
std
jno
mov
loopne
sub
dec
in
adc
mov
sub
fimull
out
inc
xor
mov
repz
inc
ficoml
out
scas
mov
call
mov
scas
adc
in
fsubs
scas
push
xchg
mov
xchg
lods
sub
into
xor
fs
dec
and
jge
and
or
data16
adc
push
mov
inc
out
std
cltd
lock
jmp
xchg
sbb
fdiv
repnz
mov
mov
mov
xlat
xchg
xor
sbb
sub
scas
jge
ss
xchg
adc
stos
je
adc
push
int
pop
adc
shl
lods
push
xchg
mov
outsb
push
pop
jae
mov
movsl
dec
insl
jg
jbe
mov
and
mov
or
adc
sub
xor
jb
dec
cwtl
shrl
mov
xchg
ljmp
outsl
sbb
ret
adc
jo
jb
pop
and
fwait
xor
ljmp
loopne
mov
mov
adc
add
divb
mov
enter
mov
daa
mov
in
jne
jp
lcall
jecxz
adc
mov
sub
cmp
stos
movb
repz
add
pop
sub
pop
ss
mov
or
iret
dec
pusha
push
adc
pop
cmp
jp
dec
mov
fdivrl
xchg
loopne
dec
dec
sbb
adc
lret
aas
mov
arpl
das
test
sub
les
adc
sub
mov
cmpsb
and
dec
fs
shll
sbb
aaa
dec
aad
fwait
test
andb
and
xchg
cmc
jmp
mov
test
and
outsl
xchg
fstl
add
dec
adc
pop
sbb
sub
pop
jne
cmp
push
push
cmp
and
loope
sub
adc
xor
pop
lds
inc
add
xor
mov
int
decl
scas
sub
fsts
and
ret
adc
js
or
jg
xchg
addl
sbb
push
add
bound
dec
addr16
cmp
les
shlb
sbb
and
test
xchg
add
lods
shlb
and
or
push
and
loope
jmp
test
pop
fs
std
mov
xchg
fistpl
sub
loop
pop
jge
mov
adc
mov
cmp
xor
pop
into
imul
adc
mov
hlt
mov
jmp
jg
push
scas
fnstsw
push
loope
lret
add
subl
outsb
sahf
adc
xchg
shrl
mov
push
adc
xchg
jg
adc
mov
out
pop
mov
pop
fisttpl
or
int
or
jle
lds
inc
push
sahf
inc
pusha
scas
fildl
rep
movsl
repnz
jge
stc
pop
outsb
mov
mov
sub
inc
orb
rolb
jnp
and
fcompl
ret
adc
lahf
xchg
scas
imul
scas
inc
popa
xor
cld
adc
pop
cld
repnz
adc
sbb
data16
pop
mov
pop
js
lret
and
jge
cltd
and
dec
adc
pushf
inc
xchg
xor
adc
and
inc
adc
push
xchg
sbb
adc
out
fnsaves
cwtl
es
ret
jne
add
adc
popf
testl
inc
inc
insb
or
xor
out
int3
adc
scas
mov
dec
test
lds
scas
push
jmp
add
loope
adc
mov
push
test
das
std
icebp
xchg
and
imul
enter
adc
lahf
gs
adc
push
pop
push
sbb
movsb
jae
dec
push
insl
push
jle
xchg
adc
adcl
sbb
adc
enter
push
dec
adc
sbb
adc
xchg
dec
adc
sbb
ds
and
push
inc
inc
sub
xchg
imul
call
jge
fs
xor
repnz
and
push
sub
or
roll
adc
add
repz
fnsave
mov
ret
adc
and
mov
xor
repnz
sarl
cmp
sub
xchg
jecxz
movsb
inc
ret
stos
and
les
movsb
cwtl
mov
adc
mov
test
pop
lds
es
loope
adc
sti
outsb
ss
lods
lock
add
jns
sub
iret
inc
jl
lds
stos
jo
shrb
cmpsl
cmpsw
pusha
sub
or
rorl
dec
ret
mov
scas
adc
dec
xchg
fsubs
aad
sub
adc
push
inc
inc
adc
or
arpl
xlat
dec
mov
mov
pop
in
mov
and
add
bound
test
loope
popa
adc
andb
inc
or
gs
add
into
pop
rolb
out
fcoms
cmpsb
dec
cmp
pop
imul
pop
jns
nop
rorl
xchg
movsb
mov
mov
scas
pop
jo
adc
push
and
cmpsb
xor
mov
aad
bound
movsl
jne
jmp
clc
fs
jle
inc
add
sub
arpl
jp
cmp
loope
test
add
into
xchg
lret
nop
ljmp
adc
push
push
adc
mov
cwtl
pop
adc
sub
out
pop
es
fdivp
push
movsb
mov
in
mov
adc
loop
scas
aad
or
xchg
aam
icebp
hlt
outsb
sbbb
mov
mov
jge
enter
loop
subl
mov
std
ljmp
inc
mov
sbb
in
cli
mov
enter
mov
pop
adc
ljmp
test
sti
push
inc
jae
adc
jecxz
adc
push
arpl
icebp
loopne
xor
pop
test
test
push
pop
cmp
sbb
push
xchg
sbb
and
xchg
repnz
out
add
dec
sbb
cmp
out
lock
rcl
stos
adc
adc
jae
mov
lret
setbe
fcoml
sahf
pop
nop
jo
sbb
push
lret
and
inc
push
xor
xor
mov
add
nop
xchg
and
sub
push
sbb
push
push
xchg
sbb
aas
repnz
bound
test
pop
pop
inc
mov
mov
cli
push
mov
imul
inc
push
fstl
ret
sub
pop
jne
dec
cmpsl
mov
stos
daa
aaa
call
push
sbb
imul
pop
clc
add
dec
xchg
adc
mov
insb
movsl
fisttps
adc
jle
bound
dec
pop
mov
cmpsl
cmp
xchg
mov
add
popa
mov
adc
fmull
dec
ucomiss
insl
push
cli
repnz
adc
mov
cmpsb
fistpll
stc
mov
sti
scas
mov
lea
sub
out
pusha
jg
int3
push
loopne
rcl
enter
std
xchg
shll
clc
lods
and
cltd
adc
inc
jae
les
push
push
cmp
sub
push
fsubrl
push
loop
mov
push
popl
bnd
or
xchg
jne
pop
and
xor
adc
lods
mov
jae
dec
xchg
jecxz
jne
nop
pop
int
adc
and
insl
xor
jp
call
loopne
cmpsb
arpl
sbb
pop
jmp
adc
outsb
test
push
cmc
faddl
sbb
lea
insl
movsb
cs
test
mov
roll
pop
arpl
orb
adc
mov
mov
dec
adc
addr16
jge
adc
push
nop
cwtl
or
dec
bound
mov
je
xor
mov
aas
test
sub
fisubl
pop
push
xor
sbb
mov
mov
into
and
in
cwtl
sti
sbb
lock
daa
into
mov
adc
cmp
push
pop
xor
sub
jnp
sbb
test
adc
jecxz
mov
bound
push
stos
jg
lock
stos
es
and
movsb
in
push
hlt
test
add
push
push
push
sbb
adc
insb
dec
int
test
inc
adc
aam
imul
adc
jae
adcb
xor
xchg
or
mov
pop
stc
mov
push
or
mov
adc
mov
sti
addr16
sbb
push
xor
xor
sti
test
adc
mov
jl
stos
inc
addr16
out
xchg
pop
ljmp
lret
or
sbb
lret
inc
daa
xchg
push
push
clc
shrb
das
and
adc
xor
sub
mov
notl
jnp
cmp
adc
adc
mov
in
pop
jns
adcb
sub
rol
pop
push
mov
rclb
xchg
and
adc
ret
in
and
add
ffreep
ficoms
sbb
les
ss
out
cmp
test
sub
mov
pushf
adc
loopne
fwait
dec
and
adc
inc
cli
xchg
lcall
dec
das
scas
mov
clc
xchg
inc
and
xlat
ds
and
push
mov
mov
mov
cmp
das
or
dec
into
js
add
inc
cld
mov
or
in
dec
push
push
add
jns
pop
daa
sub
imul
clc
fidivl
outsl
cmc
sub
inc
and
cli
push
arpl
fsubrl
xor
loop
scas
push
adc
repz
sahf
pushf
fsubrl
sbb
mov
adc
and
pop
push
adc
ja
dec
dec
imul
dec
sub
pop
data16
lret
mov
mov
mov
mov
cmp
lods
mov
dec
stc
or
push
rcrl
ret
or
hlt
or
out
inc
cmp
js
jl
ja
adcb
mov
xchg
push
cld
adc
out
and
outsb
adc
pop
add
mov
movsb
pop
andl
iret
jg
loop
sti
sbb
adc
das
add
arpl
or
push
jl
les
lods
jo
adc
nop
jbe
xorb
jge
adc
cltd
sbb
les
rorb
fmuls
dec
pop
inc
stc
ds
nop
adc
and
jns
adc
mov
lock
or
cmp
sub
into
and
fwait
cmp
negl
adc
sbb
push
ljmp
mov
push
adc
mov
test
jnp
inc
or
shl
mov
add
mov
mov
adc
pop
pop
dec
jmp
mov
clc
movsb
mov
aaa
adc
test
mov
es
xchg
mov
xchg
fldt
cmp
push
movsb
pop
arpl
in
fisubs
test
adc
inc
lcall
add
bound
jnp
test
adcb
stc
fadd
cld
in
arpl
loop
cmp
lock
adc
js
jb
ja
jecxz
and
daa
sub
enter
das
pop
orl
inc
sti
mov
cwtl
dec
xor
push
mov
stos
out
cmp
cs
out
mov
or
and
test
movsl
jae
or
sub
unpckhps
sub
jne
popa
sub
adc
imul
out
cmp
lahf
xor
std
in
and
push
add
or
sub
inc
scas
adc
cmp
idivl
adc
cwtl
adc
mov
hlt
adc
push
nop
dec
jle
mov
pop
js
lret
mov
movsb
repnz
ds
ss
mov
push
lret
mov
jb
ljmp
lret
push
lea
jne
incl
cmp
pop
lods
fisubrs
cmp
cwtl
add
outsl
lea
or
lret
and
ret
adc
int3
pop
push
jae
dec
adc
pusha
imul
shr
int3
sbb
adc
jns
in
sbb
lods
push
popf
fisubl
incb
ss
stos
dec
pop
pop
or
adc
incb
es
push
aam
out
repz
dec
pop
jae
push
es
js
mov
mov
sbb
xchg
pop
enter
or
cs
push
xchg
push
mov
jne
adc
mov
call
inc
mov
jbe
add
pop
sbb
xor
add
arpl
js
or
dec
mov
push
xchg
dec
mov
cmp
mov
sub
or
mov
mov
pop
fisttps
test
push
aas
add
mov
fdivs
push
fisubrl
sub
cmp
add
xchg
mov
mov
lret
lcall
loopne
adc
push
push
adc
mov
adc
push
and
dec
push
imul
lds
das
and
dec
divb
push
mov
adc
sbb
and
scas
xchg
adc
lahf
inc
stos
pop
fs
pop
sbb
je
jb
int
test
mov
pusha
dec
add
lahf
pop
les
aad
sbb
adc
jno
mov
adc
ljmp
stc
xor
out
adc
sub
jo
add
test
sub
out
adc
repnz
push
or
popa
sub
add
mov
add
cmp
adc
xchg
andb
mov
jae
pop
adc
sahf
js
push
test
insl
icebp
or
jno
jl
and
negb
add
sti
cmp
or
leave
movsl
pop
ja
dec
notl
ret
out
adc
popf
mov
lret
xchg
xchg
pop
xchg
out
pop
adc
push
dec
ja
test
xlat
fsts
icebp
pop
aam
imulb
add
popl
and
push
gs
sub
and
inc
push
decl
adc
rclb
adc
xor
jle
adc
pop
sbb
inc
fsubr
int3
in
adc
push
cmp
add
and
xchg
lods
bound
and
arpl
add
pop
dec
adc
cwtl
mov
mov
addb
addr16
mov
push
cli
jmp
out
int
cmc
dec
int3
push
or
jle
dec
pushf
cltd
adc
adc
push
std
push
mov
jns
pop
jnp
adc
jne
xchg
adc
jecxz
add
or
pop
sbb
gs
jmp
add
push
and
pusha
mov
push
pop
mov
jle
sub
adc
sbb
xchg
xlat
and
push
sub
adc
inc
test
sub
push
mov
aam
mov
adc
jns
ret
aad
or
pop
sub
adc
push
and
adc
enter
adc
dec
jl
rorb
outsl
test
inc
sub
mov
int
inc
insl
iret
jo
in
leave
adc
mov
js
or
adc
adc
div
mov
or
fldt
movsl
scas
jnp
out
nop
push
xor
push
adcl
lock
sub
jb
out
xor
sub
adc
fadds
pop
push
test
push
stos
lret
and
adc
mov
sbb
jnp
orb
and
mov
push
mov
jo
cmpsl
fidivl
std
pop
cmp
adc
in
mov
mul
jb
ret
aad
cmp
mov
jne
pop
mov
fistpll
push
fcoml
mov
pusha
add
cmp
and
adc
jge
stos
jmp
xchg
jb
cmp
int
lea
ds
mov
lock
jp
iret
adc
fnstcw
lcall
mov
repz
pop
sbb
push
test
sbb
mov
jae
repnz
rclb
inc
xor
xor
pop
inc
sub
and
adc
lds
fcomps
mov
push
adc
pop
xlat
rcll
sub
inc
and
int
inc
fldcw
mov
stc
stos
jnp
and
js
ljmp
in
jecxz
adc
pop
mov
push
adc
out
mov
test
sub
ljmp
sahf
cld
pop
adc
lock
dec
test
stc
mov
and
jg
lahf
xor
pop
mov
adc
and
dec
mov
dec
mov
test
adc
stc
shl
cmp
ja
sub
xlat
out
aas
and
test
adc
fwait
das
and
xchg
pushf
push
jecxz
adc
add
lods
lcall
push
adc
or
adc
xor
cli
out
jo
sub
sub
inc
adc
push
mov
jbe
loop
lock
xchg
mov
and
stc
adc
clc
shl
test
jp
out
sarb
mov
sahf
pop
cmovae
inc
jae
mov
lcall
orb
sbb
dec
cmpsl
int3
cld
movsb
lock
adc
lsl
push
inc
or
sbb
adc
in
movsl
cli
in
adc
cmp
add
sbb
nop
sub
jp
pop
fstl
and
sub
mov
xlat
mov
inc
or
pop
push
out
or
jg
and
arpl
arpl
les
lock
je
push
pusha
adc
inc
sbb
jbe
jmp
sub
pop
adc
test
sub
inc
add
xchg
and
in
ret
fisubrl
pushf
call
lods
js
clc
adc
maxps
in
adc
aas
into
sub
aad
test
out
and
pop
mov
xorb
jb
add
xchg
pop
mov
movsl
fdivl
test
lds
popa
pop
das
dec
cmp
jne
push
in
fisttps
jb
sbb
bound
jge
xchg
xchg
rcl
sbb
ret
adc
adc
lahf
lock
xorl
sbb
fnstcw
lret
pop
lahf
mov
or
cwtl
mov
sahf
inc
cmp
xchg
lea
mov
cs
repnz
flds
adc
fdivl
sahf
scas
les
jmp
adc
sub
out
dec
sub
push
inc
inc
or
test
adc
bound
push
pop
or
cmp
dec
lods
aad
daa
adc
sub
adc
or
or
repz
jp
lods
xor
fldl
out
cmpsl
adc
mov
jg
icebp
fs
sbbb
jge
cmp
movsb
push
push
shrl
test
or
xchg
js
std
push
jl
cmp
add
push
dec
std
clc
adc
add
dec
imul
adc
dec
hlt
out
incl
lock
in
inc
mov
push
inc
punpckldq
jge
jl
je
subl
add
sub
stc
dec
cmp
clc
leave
or
and
loope
pop
mov
into
inc
sub
sbb
icebp
adc
das
dec
sbb
pop
sahf
jecxz
repnz
xor
lock
js
adc
rolw
pop
adc
xchg
add
adc
js
dec
add
dec
gs
fiadds
jnp
cli
xor
iret
mov
adc
ror
es
imul
inc
pop
push
pop
jl
dec
inc
xor
adc
insl
in
sbb
adc
or
pop
stos
into
leave
sti
scas
sbb
cltd
lods
mov
add
inc
in
lds
leave
hlt
test
pushf
scas
or
arpl
loopne
inc
nop
adc
fiaddl
cmp
in
push
jns
mov
das
xlat
pop
je
inc
mov
push
push
fmuls
testl
and
lcall
cld
fistl
bound
leave
scas
aam
adc
mov
call
sbb
mov
cmp
add
sub
pusha
dec
mov
data16
adc
addr16
mov
push
adc
rcll
adc
pop
xchg
jae
sub
cltd
adc
or
adc
test
mov
adc
or
inc
mov
enter
mov
xor
adcb
fcoml
mov
or
dec
add
movb
push
adc
xor
adc
in
pushf
mov
pop
jl
bound
ds
dec
ret
lods
jo
nop
les
inc
adc
xor
lret
aas
cmpsb
jecxz
lret
pop
and
push
jmp
xlat
js
iret
add
pusha
jg
mov
mov
cmp
in
adc
dec
pop
dec
data16
dec
xchg
lock
daa
data16
std
sbb
mov
jns
les
sbb
dec
dec
mov
mov
ret
add
fsubrs
push
fnstcw
bound
pop
scas
push
ficoms
sbb
add
jl
inc
stc
mov
jns
lods
stos
adc
mov
cmp
movsl
stos
add
mov
dec
sbb
out
subl
sub
adc
cmp
push
xor
sbb
adc
adcl
mov
xchg
insl
jmp
dec
adc
xor
dec
dec
xchg
into
stos
jne
sti
sub
mov
or
test
jl
inc
movsl
call
adc
aad
and
test
push
adc
sub
push
iret
dec
test
dec
xchg
sbb
cmp
nop
arpl
push
mov
jge
lds
lret
jb
adc
das
out
fists
cmpsl
push
adc
cwtl
call
lock
lret
int3
fwait
pop
and
lret
mov
jne
movsb
mov
sub
jl
pop
orl
mov
sbb
filds
or
add
adc
cmp
lea
je
fbstp
ret
les
lock
pop
xor
sbb
aaa
ret
jecxz
push
mov
add
and
rol
dec
cld
clc
lods
inc
fadds
call
lea
ret
add
imul
or
aad
test
xchg
push
sub
fs
notl
stc
std
mov
xchg
insl
push
out
adc
out
ljmp
movl
add
adc
xchg
movsb
stos
lea
test
xchg
ds
jne
jbe
push
jbe
and
sub
adc
push
lret
adc
add
push
pop
adc
add
mov
add
insb
adc
rol
sub
enter
jbe
rcrb
hlt
leave
ljmp
sahf
lods
mov
sti
ret
into
pop
push
aam
gs
push
or
scas
adc
mov
sbb
div
xor
dec
aad
enter
outsb
cld
cltd
test
lock
sub
adc
jno
jnp
or
or
mov
pop
xor
not
ret
rcll
fwait
addr16
inc
jns
jg
mov
jl
and
jae
push
scas
xlat
push
mov
int3
sbb
stc
mov
mov
cmp
das
push
mov
cwtl
push
adc
cltd
into
and
adc
dec
or
mov
dec
cmpsl
ljmp
lock
dec
jmp
or
or
nop
loop
mov
adc
jb
xchg
push
fldl
add
pop
cs
push
js
sub
insl
push
push
xchg
mov
xchg
das
xchg
pop
lret
or
mov
jno
xchg
mov
lock
aaa
cs
sbb
inc
mov
adc
pop
mov
sub
std
xchg
movsb
ret
roll
xchg
sub
imulb
int
filds
btc
adc
imul
mov
sub
inc
ljmp
pop
stc
bswap
neg
int3
cli
or
inc
add
and
ds
jbe
cltd
inc
sub
iret
nop
mov
sahf
cmp
dec
ret
test
in
lods
mov
pop
adc
adc
pop
xchg
or
sbb
add
sahf
shll
inc
push
jne
cltd
jno
pop
adc
adc
mov
js
in
or
and
xchg
sub
adc
push
sbb
shlb
sub
adc
frstor
pop
mov
out
push
mov
loopne
cmp
lahf
jmp
jnp
push
and
mov
xchg
sbb
adc
sbb
hlt
adc
push
mov
punpckhwd
or
popf
loop
adc
fs
popa
mov
jp
or
mov
rclb
push
xchg
lods
adc
push
pop
jns
adc
sti
cld
sub
movsl
sbb
adc
pop
xchg
movsl
loop
into
aaa
iret
test
dec
fucomp
fildl
push
xchg
adc
cmc
mov
jp
in
pop
adc
lds
movsl
adc
dec
dec
fildll
mov
add
xor
popa
mov
mov
xchg
adc
cmpsb
add
add
das
loopne
ljmp
inc
ss
sub
xchg
repnz
adc
xchg
movsb
inc
pop
negb
mov
mov
decb
fcompl
push
jne
je
sarb
push
fstpl
sub
sub
jne
jl
xchg
das
adc
jne
inc
adc
insb
in
jp
ret
nop
in
cwtl
mov
xchg
add
dec
xor
mov
and
test
inc
dec
adc
dec
xchg
mov
pushf
push
sub
adc
jbe
clc
loopne
stos
lods
iret
push
fistl
jg
pop
or
cltd
int3
push
adc
xor
scas
cld
pop
insb
jmp
mov
mov
aad
subl
xor
cmp
cli
sbb
ljmp
push
daa
sub
mov
sbb
adc
cmpb
test
aam
sti
mov
mov
bnd
sbb
adc
sbb
dec
sub
enter
mov
aas
out
mov
dec
outsb
jle
shlb
jp
push
adc
jge
or
jae
outsb
ret
push
popa
pop
insb
sti
fcompl
inc
jbe
shlb
cmp
test
jle
hlt
insb
adc
fstpt
popf
cmpsl
mov
mov
xchg
sbb
aas
adc
addl
out
ds
sbb
fiaddl
call
fwait
jl
inc
frstor
mov
sbb
outsb
ret
jle
hlt
adc
push
sbb
xchg
sbb
mov
fmulp
adc
push
jge
adcl
xchg
ljmp
push
loopne
mov
sub
decl
mov
inc
pushw
dec
orb
sub
fwait
out
aam
xchg
adc
jp
lds
leave
out
test
rclb
cli
mov
jle
cmc
mov
mov
inc
push
push
ja
sbb
test
bound
adc
or
and
push
dec
ljmp
sahf
into
pop
data16
lds
xchg
sub
adc
andb
push
fmulp
xor
xlat
testb
in
cld
cmp
adc
xchg
aas
das
adc
pop
or
cwtl
adc
xor
adc
or
cmpsb
jo
push
add
mov
ficompl
repnz
or
int3
and
jg
dec
arpl
or
xor
repz
xchg
pop
adc
pushf
push
inc
in
xchg
arpl
push
and
adc
xlat
out
mov
or
xchg
mov
faddl
mov
inc
pop
adc
push
enter
movsl
and
sub
mov
or
adc
fiadds
push
adc
gs
das
sub
adc
imul
lods
mov
add
mov
xchg
jae
fsqrt
lods
outsb
push
mov
arpl
aaa
test
stc
mov
inc
ss
sub
out
cmp
cli
lds
adc
mov
test
adc
fildl
stos
adc
add
add
jo
jbe
aas
adc
aaa
stc
or
dec
inc
or
pop
jne
sub
cld
adc
push
out
dec
xchg
fldcw
mov
mov
and
and
xor
or
and
mov
jbe
nop
and
gs
incw
xchg
lcall
sbb
inc
and
sti
pushf
in
ljmp
test
adc
aam
scas
xchg
sub
pop
and
dec
xchg
sbb
sahf
mov
jl
shl
inc
pop
lock
xor
bound
adc
pop
jge
pop
push
dec
ret
sub
popa
jne
sbbb
jns
xor
lret
adc
jo
mov
jecxz
pop
add
out
repz
aad
and
imul
test
push
sarb
iret
fsubl
push
xchg
lahf
and
data16
adc
cld
or
jecxz
mov
mov
adc
or
sub
ret
push
mov
sbb
adc
mov
lock
not
inc
cld
sbb
js
xor
popa
mov
add
and
and
adc
iret
loop
xchg
daa
sbb
adc
ror
test
adc
xlat
push
fwait
adc
les
mov
cld
lcall
push
je
sahf
jb
mov
or
rol
pop
cltd
or
jo
jg,pt
lods
jb
stc
fisubl
test
sub
xchg
nop
jae
inc
test
cwtl
fildl
jmp
arpl
xchg
lds
jg
out
xchg
fisttps
adc
pusha
mov
add
xlat
cmc
and
test
cmp
jo
xor
jmp
test
test
das
add
ret
sarl
out
lret
test
mov
pop
and
adc
adc
mov
test
xchg
pop
cwtl
js
cmp
jbe
adc
int
aad
sub
sub
cmpsl
outsl
fs
adc
lea
icebp
xchg
enter
loop
mov
sbb
das
pop
xor
data16
unpckhps
into
jo
cmp
loope
jle
mov
adc
or
std
inc
mov
sbb
ret
aam
mov
pusha
inc
xlat
sub
shrl
push
mov
arpl
imul
adc
jbe
repz
adc
sub
and
xor
les
sub
or
push
cltd
clc
dec
jb
bound
cmp
adc
inc
movb
daa
gs
xor
imul
mov
data16
unpckhps
mov
sbb
js
mov
les
lock
dec
jb
dec
imul
mov
lock
sbb
sti
adc
push
adc
jae
push
push
adcw
and
and
sub
mov
lea
cmp
mov
mov
mov
mov
jbe
or
sbb
js
adc
sub
es
movsl
aad
pop
mov
xor
aas
xlat
dec
int
adc
repnz
mov
mov
adc
sub
popf
arpl
andb
jecxz,pn
adc
mov
idivl
movsl
mov
adc
aad
jo
mov
shrl
sbb
push
adc
enter
aaa
mov
lcall
test
stos
sarl
ret
adc
xchg
imul
mov
mov
dec
adc
loop
and
std
ret
das
je
sub
scas
shlb
inc
adc
xor
pop
sbb
sub
adc
mov
xchg
rcll
pop
cmp
adc
mov
loop
test
outsb
inc
xchg
and
or
sahf
sbb
rcll
popf
scas
mov
dec
xorb
pop
push
xor
cld
sub
mov
mov
add
jne
pop
je
sub
jecxz
lret
add
xchg
outsl
mov
test
nop
xchg
xchg
adc
lahf
dec
lret
data16
adc
push
adc
add
jl
sbb
mov
ds
add
xchg
arpl
ror
and
adc
ds
and
inc
inc
lahf
push
add
jae
data16
dec
loop
cs
lret
push
mov
in
sti
ds
stc
mov
jne
cwtl
sub
test
push
cmp
cmp
cltd
imul
mov
rcrl
mov
mov
sbb
cld
cmc
push
cs
roll
rcrb
loope
adc
push
xchg
cmp
dec
sarb
cmp
mov
aam
and
out
mov
jns
shlb
addr16
cmc
xchg
add
add
repz
dec
and
add
push
pop
out
cltd
fnsave
stc
mov
mov
mov
cld
jl
je
cmpl
jge
idivb
mov
mov
lea
push
sahf
jbe
scas
xchg
dec
adc
cmpsl
mov
adc
movsb
inc
dec
adc
sbb
adc
add
cmpsb
gs
subb
clc
push
sbb
call
dec
sbb
adc
push
jo
cmp
pushf
jp
sbb
addr16
popa
cmp
sub
shrl
jno
sahf
mov
add
adc
pushf
cmpsb
in
add
adc
inc
mov
xchg
xor
sub
pop
stos
adc
sbb
mov
pop
int3
adc
dec
xchg
mov
fcmovb
xchg
mov
adc
shlb
mov
js
sbb
adc
pop
scas
adc
inc
and
cmp
xorb
adc
pop
cmpsl
or
ret
dec
int3
cld
and
mov
push
arpl
and
sub
xor
insl
fnstcw
adc
hlt
inc
add
and
sbb
add
inc
lahf
adc
js
fiaddl
adc
nop
adc
sbb
mov
push
mov
adc
jmp
jne
and
and
lock
pop
sbb
xchg
loopne
hlt
adc
mov
mov
lret
stos
stos
xchg
xor
dec
lcall
cltd
rolb
cmp
dec
loop
aas
adcb
pop
xor
sub
sub
in
rclb
test
ret
les
dec
sbb
inc
adc
or
jae
adc
insl
shrb
movsb
jne
push
jp
dec
mov
ret
xor
iret
push
and
adc
movsl
dec
xlat
cwtl
adc
inc
out
xor
inc
lds
pop
and
sub
pop
jno
push
jecxz
mov
idivl
adc
sub
pop
in
adc
pop
sbb
mov
xchg
cmp
adc
cmp
xor
adc
mov
cmp
maxps
iret
arpl
or
pop
loope
fiadds
in
add
push
ror
aam
pmaddwd
sti
mov
ljmp
cmp
xor
movsb
test
cli
dec
push
xchg
sub
add
inc
push
mov
popl
sub
cmp
push
cwtl
adc
mov
push
fildl
inc
aas
adc
fsubr
cli
inc
test
jb
addr16
imul
dec
adc
outsb
xor
fstpt
mov
push
test
push
jg
xchg
and
jbe
cld
loope
mov
test
daa
ljmp
in
call
jae
int3
data16
adc
xor
mov
or
mov
xor
dec
adc
aaa
arpl
xchg
push
jne
or
mov
push
adc
dec
cmp
hlt
push
pop
pop
sub
pop
mov
jne
sub
addr16
add
jecxz
adc
mov
cwtl
sbb
adc
mov
clc
push
fwait
dec
dec
dec
adc
lea
cmp
in
push
jae
int3
push
push
mov
adc
popf
rcrl
dec
adc
iret
insl
xchg
add
rolb
sub
test
or
imull
push
dec
push
adc
mov
adc
pop
pop
ds
dec
dec
daa
adc
outsl
xchg
pop
pop
and
ficoms
xor
stc
xchg
sub
out
ret
iret
and
and
push
mov
test
mov
ret
out
inc
push
aas
add
bound
and
fs
dec
sub
idiv
fcoms
mov
add
and
adc
sarl
mov
repnz
add
or
pop
cmp
adc
push
jo
mov
push
mov
pusha
cmp
mov
cmp
test
jmp
sub
xchg
int
or
or
and
je
out
adc
jp
or
lds
and
or
test
imul
cmpsb
and
mov
mov
sarl
push
cltd
imul
cmc
test
in
mov
add
or
mov
aaa
movsl
dec
test
fs
push
mov
mov
mov
mov
xchg
sub
mov
js
pop
dec
xor
shl
or
mov
int3
leave
ret
pushf
mov
sub
seta
movsb
sti
lods
push
incb
nop
cmp
sub
sub
rcl
dec
dec
jp
ret
pushf
pop
or
mov
jnp
push
adc
enter
adc
mov
adc
sub
and
mov
pop
inc
stc
sbb
pop
and
pop
push
out
neg
adc
mov
dec
subb
xchg
sbb
repnz
adc
and
insl
int3
sub
addr16
fidivrs
scas
inc
mov
and
cmp
aad
aam
push
and
stos
lock
pop
faddl
and
jp
cmp
mov
dec
out
adc
int3
jmp
adc
aad
xchg
mov
push
sbb
xchg
adc
dec
les
arpl
jb
adc
xchg
jo
cmp
xlat
lahf
ficoml
jg
imul
add
ficoml
push
into
xor
adc
ret
mov
adc
xor
adc
xorl
xchg
jne
in
rcll
aaa
jns
lcall
xlat
sub
adc
subl
decb
mov
mov
jl
arpl
addr16
mov
mov
inc
popf
adc
sbb
ds
retw
ret
adc
cmp
sub
cs
lods
fnstenv
xor
notl
or
dec
xorl
mov
icebp
or
pop
nop
sti
and
mov
into
jae
jge
cltd
and
popa
jns
dec
xor
popa
fimuls
sub
mov
adc
xchg
sbb
add
imul
les
test
pop
dec
xchg
or
adcb
cmp
adc
pop
add
xor
sbb
mov
loope
jecxz
inc
loop
inc
cs
in
and
call
lods
ss
test
pop
jge
adc
push
out
add
cmpb
pop
adc
add
shufps
jb
mov
xchg
mov
xchg
and
push
mov
je
jg
pminsw
jp
adc
or
cmp
or
sahf
cwtl
rcrb
mov
sbb
or
pusha
or
or
fwait
pop
jmp
and
or
jb
bound
dec
jbe
fcoms
mov
repnz
xchg
or
stos
sub
inc
pop
adc
aaa
int
cs
scas
sbbl
sub
jl
sbb
sub
mov
inc
push
jg
add
mov
mov
mov
ja
repz
adc
dec
push
lds
mov
movsb
nop
mov
sti
aas
mov
int3
popf
mov
sub
adc
loop
mov
fmul
lock
xor
test
daa
adc
fwait
sbb
mov
pop
mov
jle
sub
dec
inc
cltd
sub
push
les
dec
sbb
jnp
and
xchg
add
mov
xchg
lcall
jge
jg
pop
or
out
call
in
push
mov
cld
test
stos
lret
in
xchg
mov
lods
adc
add
adc
cmp
imul
adc
mov
insb
movsb
adc
push
cld
loopne
add
das
loope
sbb
mov
pop
pop
push
adc
jae
pop
lea
fcmovnb
mov
repnz
aaa
psraw
jns
fcmovbe
addr16
cltd
aad
and
sub
imul
adc
aam
cwtl
gs
jo
cmp
clc
pusha
sbb
adc
xchg
stos
bnd
sub
ss
pop
xor
sub
les
adc
data16
mov
push
mov
dec
or
adc
xchg
pop
adc
adc
cs
test
outsl
lahf
xor
sub
popf
loopne
add
and
jne
cmp
and
in
dec
or
dec
loopne
xor
mov
dec
mov
pop
pop
test
sbb
adc
sbb
fcmovb
mov
push
mov
lock
mov
mov
or
mov
dec
mov
clc
push
dec
jg
addr16
andb
roll
outsl
int3
arpl
adc
lods
cli
sub
movsb
push
cmpsb
in
test
out
dec
stos
xchg
adc
inc
fiadds
pushf
push
ds
mov
out
jmp
stos
mov
and
and
jg
mov
adc
pop
cld
add
adc
sbb
adc
outsl
push
push
or
xchg
sub
orl
and
mov
mov
add
insb
jp
push
jge
and
test
and
repnz
aam
and
aaa
cmpsl
xlat
test
add
mov
mov
movsb
adc
sbb
pop
jnp
dec
cwtl
sub
mov
das
jne
and
test
pop
pop
scas
inc
inc
adc
cmp
mov
adc
adcl
push
dec
cs
mov
dec
dec
sbb
lahf
mov
mov
scas
pop
movsl
inc
xor
mov
adc
out
and
add
push
sub
adc
and
push
adc
and
pop
lcall
sub
lds
jb
loope
in
subb
sub
push
push
xor
mov
movsl
mov
xlat
std
sbb
sub
mov
or
daa
inc
and
jecxz
and
adc
mov
jmp
dec
dec
pop
mov
jp
mov
sbb
fstpl
mov
mov
xlat
aam
mov
adc
cmpps
xchg
jne
js
das
push
adc
push
dec
in
inc
pop
or
sub
xor
enter
mov
ja
sbb
and
and
js
jbe
fldt
jmp
mov
ret
sub
cltd
lret
lds
mov
or
and
dec
in
mov
popa
push
xchg
inc
mov
push
test
push
adc
adc
mov
ficoml
add
inc
pop
stos
stc
std
adc
push
orb
stos
pop
sbb
add
pop
mov
test
mov
enter
scas
mov
cmc
push
out
xor
adc
shl
test
push
xorl
push
push
adc
nop
dec
xchg
test
dec
in
push
adc
cmp
arpl
push
inc
in
mov
jns
test
sub
out
push
jns
in
adc
outsl
lods
icebp
and
aam
cli
sub
ja
push
jl
loop
adc
pop
cmp
adc
push
popa
xchg
jae
push
or
cmc
mov
add
fbstp
pop
test
sbb
adc
fisubrs
mov
push
sub
lret
push
xchg
and
pushf
lcall
enter
jbe
jle
xchg
popf
mov
and
or
mov
adc
int
mov
jne
pop
rorl
in
jle
rcll
cld
sbbl
mov
ljmp
repz
or
adc
fsubrl
sbb
cmp
cli
pop
in
das
ljmp
lock
jb
and
mov
mov
ret
inc
adc
or
mov
push
shl
cmp
adc
dec
femms
shll
arpl
insl
imul
mov
andb
subl
lods
lretw
mov
enter
es
mov
mov
aam
jp
add
xchg
rorb
inc
iret
das
push
and
lahf
push
xor
adc
xor
pop
dec
jbe
aad
lcall
cmp
and
jecxz
and
pop
pushf
insl
rol
mov
dec
add
or
fwait
push
sbb
outsb
adc
pusha
mov
test
lret
jmp
sbb
pop
xchg
jb
mov
mov
sub
adc
imul
cmp
leave
gs
adc
scas
fldl
movsb
out
arpl
rcrl
outsl
mov
jnp
sbb
jne
push
movsl
or
push
sub
or
adc
lahf
icebp
fisubrl
bound
mov
dec
adc
lret
pop
test
and
mov
adc
shlb
adc
gs
fs
mov
loope
insl
ficompl
or
outsl
loope
push
adc
cmp
mov
je
bound
sbb
fwait
cmpsl
mov
inc
into
adc
mov
mov
push
add
ficompl
outsb
lea
fisubrs
andb
pop
jo
cmp
ljmp
insb
mov
dec
jb
dec
fs
icebp
ret
xchg
lods
stc
cmp
push
es
sub
adc
sbb
in
jle
cmp
xchg
jp
adc
xchg
pop
adc
mov
mov
xchg
scas
add
inc
pop
clc
mov
inc
insb
inc
adc
rolb
into
inc
fidivl
pop
jbe
rclb
sub
std
fsub
and
add
or
aad
test
mov
add
and
mov
push
jnp
shrl
int
ficoml
and
mov
jno
mov
jmp
mov
cmp
xor
test
outsl
sub
add
sub
int
jae
scas
arpl
in
scas
in
cmp
xchg
xlat
fimuls
outsb
mov
mov
insl
push
adc
lds
cltd
jnp
mov
rcrb
pusha
sbb
das
and
dec
addr16
adc
repnz
cmp
popa
mov
cltd
mov
adc
lds
xchg
mov
mov
pop
aam
push
jnp
jp
loopne
dec
stos
ror
test
adc
cwtl
sub
jne
into
sbb
jb
adc
dec
dec
pop
xor
jl
xor
jp
xchg
insl
adc
cwtl
roll
adc
add
jnp
js
ret
data16
dec
and
lret
adc
and
fmuls
adc
enter
inc
sti
into
mov
xchg
stos
cmpsl
adc
add
dec
pop
mov
pop
pop
adc
mov
xor
in
lock
sub
aaa
push
or
jle
rcrl
arpl
sub
loope
jae
fnsave
andl
xor
add
and
sbb
jmp
sub
xchg
jne
mov
adc
lods
fimull
mov
test
adc
jmp
xchg
pusha
inc
in
mov
mov
jb
xchg
pop
sub
inc
push
pop
mov
icebp
out
and
xor
push
aam
sbb
data16
in
addl
and
stos
arpl
or
insb
adc
cwtl
testl
es
lods
imul
mov
vpackuswb
pop
push
adc
push
adc
rclb
inc
aad
mov
test
scas
xchg
cltd
pop
sub
inc
adc
pop
fwait
sub
and
call
ret
aam
shl
adc
cmp
adc
jmp
repz
lds
xor
bound
jae
sahf
and
fisubrl
cmpb
inc
out
jl
in
xlat
adc
push
mov
pop
and
mov
cmp
sti
xor
mov
aam
inc
fdivl
les
and
cmp
ds
xchg
idivw
mov
ret
pop
sbb
adc
pushf
mov
subl
adc
xor
in
adc
mov
mov
push
adc
cmpsl
cli
jne
shll
outsl
imul
imul
test
and
add
aas
mov
rcll
jbe
mov
add
xor
out
das
and
fmul
mov
shrb
push
xchg
push
int3
sub
cltd
nop
adc
out
rcrl
andb
cmp
mov
adc
and
dec
jb
mov
xchg
cmp
test
sbb
pop
fstps
ret
lcall
call
xchg
push
shlb
inc
ss
arpl
bound
jnp
mov
or
sub
and
dec
iret
push
add
bound
sbb
dec
jbe
test
mov
pop
bound
in
scas
dec
adc
js
inc
je
jg
enter
dec
push
leave
adc
mov
dec
push
adc
mov
pusha
fs
clc
fildl
xor
popa
sub
mov
jmp
mov
scas
bound
shlb
mov
adc
lret
and
mov
pop
push
pop
test
jge
ss
mov
add
fistl
hlt
adc
sub
ret
adc
lret
rcrl
pop
pusha
dec
dec
mov
inc
into
stos
inc
adc
jbe
out
adc
dec
sahf
sub
adc
mov
mov
mov
bound
repz
pop
jg
dec
scas
test
xchg
sub
mov
lcall
test
ret
dec
and
inc
xor
xchg
cli
sub
out
lds
pop
and
clc
and
lock
dec
push
xor
adc
fidivrs
jp
push
cmp
sbb
add
xor
pop
fsubrs
out
add
push
or
addr16
sbb
sub
jecxz
dec
adc
or
pop
mov
or
lds
inc
pop
pop
stc
mov
lods
pusha
or
jmp
lret
ss
xor
xor
jnp
xchg
add
xchg
or
cs
stos
test
sub
push
push
push
pop
mov
in
ljmp
push
mov
push
and
testb
mov
fcomip
ljmp
das
push
inc
add
hlt
mov
roll
push
mov
jne
test
xchg
mov
dec
and
lds
js
aaa
adc
adc
nop
sbb
icebp
adc
imul
js
pusha
sub
xor
mov
dec
jno
shll
jo
in
shlb
mov
mov
fisubl
sub
mov
scas
leave
and
shlb
adc
fidivrl
sub
lock
adc
inc
cld
hlt
adcl
jl
adc
xchg
in
jbe
dec
xchg
aas
jg
dec
in
cld
and
movsb
js
push
aad
icebp
cli
fld
xor
fdivs
nop
or
or
and
fbstp
pop
ret
cltd
orl
add
mov
push
push
sbb
jl
mov
adc
fisttpll
adc
scas
sub
sub
lcall
pop
ret
xor
mov
jae
mov
bound
loope
and
out
xor
int3
push
sbb
cmp
popfw
sbb
pop
jecxz
push
das
rcrb
sub
add
adc
shl
scas
js
pop
adc
pusha
dec
adcb
xchg
mov
sub
call
pop
frstor
rorl
adc
int
rclb
mov
inc
add
adc
mov
jle
adc
sbbl
adc
out
aas
dec
scas
loop
adc
cmp
js
xor
incb
xchg
sub
call
mov
adc
mov
add
mov
push
xlat
push
popf
ficoml
mov
adc
fsub
push
cmp
ret
scas
and
adc
iret
jb
pop
adc
data16
pop
lods
adc
in
cli
cmc
int
lret
xor
xchg
xchg
push
rclb
adc
aam
pop
dec
adc
jae
sbb
cmc
xchg
fisttpl
icebp
clc
test
scas
jbe
mov
outsl
or
cmp
lahf
cmp
loop
out
arpl
and
js
je
mov
inc
scas
inc
outsl
sub
shr
fsub
lret
mov
scas
and
inc
fsub
sub
in
mov
mov
in
adc
add
sub
iret
mov
fiaddl
and
mov
test
les
adc
or
fildll
daa
out
fcomps
pop
cmpsl
mov
xor
ds
adc
ja
movsb
hlt
cld
dec
and
and
pop
adc
test
stos
inc
or
mov
push
sub
pop
pop
pop
pushf
cwtl
dec
les
orb
jo
xchg
mov
sahf
or
jbe
dec
push
sbbb
shlb
jecxz
std
dec
or
mov
sub
enter
dec
pop
xchg
gs
push
push
pop
mov
and
mov
push
ds
mov
sub
mov
or
loopne
cmc
and
lahf
and
lcall
loope
or
push
mov
cwtl
lock
jae
pextrw
push
cmp
sbb
push
stos
adc
je
stc
add
pop
pop
jp
adc
daa
push
dec
push
lds
shll
repz
cltd
mov
add
test
nop
add
das
mov
pop
adc
pusha
lret
adc
push
sub
inc
adc
sub
lahf
or
mov
push
insb
push
pop
lods
cs
inc
cmp
and
dec
and
mov
and
fcoml
sub
nop
mov
outsb
push
push
cmp
aad
xchg
and
adc
das
fbld
adc
sti
xchg
stos
lahf
pop
adc
fdivs
mov
pop
fistps
adc
xchg
cmc
test
loop
out
xor
leave
stc
ljmp
and
mov
arpl
hlt
sub
fld
aad
pop
in
push
sub
das
dec
dec
mov
or
addr16
sub
push
addb
test
inc
mov
inc
int3
xchg
mov
fcmovbe
ja
jnp
hlt
adc
in
subb
mov
lahf
loopne
adc
xchg
repnz
sbb
or
jl
cs
stc
xor
incl
inc
aad
adc
je
sub
adc
addr16
jmp
push
pop
std
pop
push
add
or
adc
pop
adc
cmp
and
adc
mov
das
rcll
dec
pop
dec
push
aaa
xor
adc
imul
inc
fnsetpm(287
and
mov
mov
popa
dec
js
js
add
jg
das
add
add
add
sub
xorl
adc
cmp
mov
dec
mov
into
adc
jl
lock
adc
add
xlat
dec
xchg
adc
aam
sbb
shll
and
xor
sub
sub
jecxz
aad
ret
ss
sbb
adc
hlt
push
lahf
sbb
sub
int
inc
loop
repz
jbe
push
aad
inc
bound
outsb
fcoml
lds
xchg
adc
inc
and
shlb
xchg
sbb
pop
das
sti
and
fistpll
nop
adc
xchg
or
lret
sbb
jb
inc
dec
mov
rorb
in
rorl
sub
adc
push
in
push
xlat
imul
loopne
lcall
test
cmp
mov
mov
and
mov
hlt
mulb
push
jno
lahf
popa
test
adc
out
cmp
jne
pop
aaa
ds
cmp
adc
fwait
jg
cwtl
dec
addl
or
pop
jo
in
xchg
xor
neg
lds
cmp
ds
sbb
add
lock
add
adc
and
mov
jbe
scas
repz
or
or
popa
sbb
roll
add
cld
das
mov
test
mov
cmpsl
inc
xor
je
cmp
clc
hlt
push
push
mov
fwait
sub
push
add
movsb
sarb
in
adc
insl
sti
js
add
push
repz
gs
ljmp
sbb
mov
and
mov
cltd
lock
sub
pusha
lcall
mov
mov
movsb
push
push
dec
test
push
and
push
push
and
xchg
push
mov
xchg
out
arpl
divl
adc
xor
jb
inc
in
imul
ficompl
fscale
sarb
or
add
adc
sbb
jl
inc
dec
shl
or
add
adc
sbb
inc
cmp
imul
test
sub
loop
xor
cli
push
sbb
sub
les
adc
xor
andl
jns
sbb
adc
ja
cmpsl
mov
jbe
fsubrs
ja
jnp
adc
lcall
shll
cltd
imul
adc
mov
add
adc
dec
inc
sub
jb
or
adc
adc
pop
daa
push
popa
push
push
test
jb
sbb
dec
fcomi
add
or
rorl
in
lret
sub
mov
xchg
jmp
dec
push
stos
xchg
icebp
lcall
xor
push
adc
hlt
shr
mov
loopne
fistl
cmp
adc
xor
and
cmp
xor
unpckhps
leave
dec
mov
xchg
insl
and
shlb
mov
pop
mov
adc
or
mov
out
dec
push
sbb
add
sbb
cs
out
insl
and
addr16
inc
sbb
loop
push
adc
dec
in
std
cwtl
and
loop
pop
sub
xchg
decl
into
mov
mov
mov
test
pop
and
mov
insb
sub
fcmovnbe
mov
in
idiv
call
sbb
cli
push
dec
adc
push
fwait
push
cmpsl
cmp
or
rorb
rcll
mov
nop
stos
leave
xor
fdivrs
ret
adc
shrb
adc
fisubrs
pop
dec
adc
int
push
scas
adc
cmp
scas
movsl
adc
sbb
cwtl
xor
inc
sbb
inc
adc
jbe
adc
btc
inc
push
mov
mov
pop
imul
jno
sub
pop
mov
adc
ret
loope
dec
and
xchg
mov
aam
add
mov
sub
pop
and
sub
jbe
in
sub
js
jecxz
inc
and
sub
jecxz
dec
in
xchg
arpl
outsb
and
jmp
adc
mov
popa
adc
lret
out
lods
add
cmp
cmpsb
and
cmp
popf
fwait
jae
imul
loop
add
sti
jg
mov
test
inc
out
pop
sub
xchg
enter
and
lods
cmp
out
test
leave
and
mov
popf
adc
sbb
icebp
adc
lret
test
xlat
ret
rclb
sbb
pop
mov
gs
enter
adc
jecxz
mov
adc
lock
jmp
mov
cwtl
adc
mov
jnp
adc
push
scas
inc
xor
push
mov
andb
push
stos
addb
dec
add
and
es
mov
adc
lret
sbb
push
and
ds
push
adc
call
adc
xor
adc
repnz
imul
decb
lods
adc
and
jg
sbb
lea
inc
adc
mov
das
inc
adc
and
and
adc
lods
xchg
fnstenv
sub
push
xchg
adc
inc
in
lret
lds
sbb
inc
bound
push
mov
ss
or
cmp
inc
mov
repnz
es
or
and
mov
pop
cmp
mov
xchg
or
lods
in
dec
adc
inc
push
adc
cmp
jle
das
mov
sbb
dec
xchg
out
jne
inc
and
mov
mov
adc
lods
sbb
adc
ss
cld
adc
call
movzbl
iret
mov
mov
mov
inc
cmc
jo
test
mov
ds
xchg
adc
sub
push
jle
fdivl
setae
inc
add
mov
test
in
push
mov
xchg
sbb
les
loopne
inc
cmc
xor
mov
dec
cmp
mov
fdivrl
pop
popf
out
or
mov
bnd
adc
mov
xlat
iret
repnz
or
pop
and
cwtl
loope
test
stc
in
movsb
fcomp
loop
movsb
push
adc
fs
call
pop
aam
sarb
imul
or
cmp
rorl
stc
xchg
adc
add
lods
inc
subl
adc
in
test
xor
aad
or
xchg
sub
adc
out
cmp
inc
test
int
rorb
adc
fisttpl
push
je
or
or
xchg
shll
push
mov
sub
xchg
adc
dec
mov
dec
les
sub
loop
or
add
lods
inc
je
adc
and
insl
std
mov
icebp
negb
fcoml
lods
mov
jb
xchg
sti
lcall
popa
insl
inc
cmp
fadd
fcmovne
jge
into
adc
cmpl
js
push
sub
jbe
lret
inc
bound
xchg
mov
adc
sub
xor
cmp
lods
add
nop
and
int3
sbb
arpl
mov
inc
mov
mov
and
lds
lea
rcll
inc
adc
push
sar
lds
and
xchg
xorb
xlat
mov
adc
push
lahf
adc
adc
cwtl
jp
sbb
jae
ror
jns
push
xor
mov
pop
jmp
and
pop
add
inc
mov
jnp
mov
loopne
cli
inc
lods
inc
test
test
mov
adc
add
dec
mov
dec
inc
jbe
jp
and
adc
je
orl
mov
fcoml
mov
icebp
sbb
adc
jns
mov
push
sub
adc
aaa
dec
loopne
ret
push
cld
imul
mov
push
cmpsb
adc
xchg
xchg
push
jmp
sub
clc
and
cmp
pop
xor
pop
fs
outsl
cmp
je
sbb
adc
dec
pushf
popf
adc
jo
adc
test
sub
or
ss
and
test
add
fsub
xchg
stos
hlt
adc
cmpsb
dec
in
cs
add
or
adc
dec
dec
lea
mov
sbbl
jno
arpl
popf
push
jl
sub
test
sbb
mov
add
lcall
mov
add
ja
fs
icebp
pushf
cmp
cmp
sub
adc
lea
mov
mov
call
int
push
mov
xor
add
andb
push
xchg
icebp
jne
cmp
lret
movsb
outsb
mov
add
adc
jbe
push
jnp
addr16
sbb
or
xchg
adc
and
adc
outsb
pop
clc
in
fistpll
cmp
mov
xchg
pop
jne
inc
popl
test
movsl
inc
mov
sub
pop
aas
adc
inc
or
in
test
test
and
pop
mov
cmc
or
jmp
add
insb
pop
pop
add
adc
mov
xchg
rorb
pop
dec
pop
inc
jg
scas
adc
hlt
mov
jne
imul
adc
nop
negb
sbb
xlat
mov
mov
mov
adc
ficoml
je
push
out
fdivr
lock
add
adc
ficomps
cmp
test
dec
stos
and
aas
mov
fldenv
jae
sbb
dec
out
or
mov
repz
sti
je
xor
mov
pop
sub
imull
cwtl
fisttpll
iret
lds
shrl
stc
adc
fwait
out
add
adc
push
pop
sbb
adc
xchg
add
adc
negb
pushf
adc
test
mov
pop
mov
and
setno
and
xor
fidivrl
push
lds
cs
je
movsb
jo
jae
mov
push
aam
push
test
lock
jnp
xor
adc
xchg
in
enter
push
sub
xlat
xor
movsb
sub
push
fadd
or
push
js
sub
pusha
xchg
pop
add
imul
inc
out
adc
adc
fcoml
test
shlb
cmp
clc
inc
ds
add
lds
movsb
xchg
imul
ja
sub
sbb
frndint
adc
mov
adc
popf
inc
sbb
push
into
cs
dec
push
mov
aaa
cmp
xor
jmp
fadds
adc
arpl
adcl
pop
push
mov
or
dec
mov
inc
mov
scas
lods
add
adc
clc
into
movsl
cmpsb
adc
lret
divl
mov
dec
call
fidivrs
adc
adc
sbb
inc
adc
sub
dec
cmc
and
clc
jge
push
loopne
fcmovu
fs
jg
stc
movsl
nop
dec
sbb
pushf
jne
add
leave
test
adc
stc
xor
jbe
mov
jmp
lock
push
jge
addr16
inc
fs
adc
loopne
adc
push
ds
push
adc
cld
mov
adc
int3
sbb
jne
adc
sub
xchg
mov
fxch
and
loopne
push
mov
xchg
addr16
gs
lds
inc
in
pop
fldl
xchg
das
add
mov
and
jno
sbb
jl
mov
inc
cmp
adc
or
cmp
or
dec
loope
jo
push
push
pop
mov
insb
sbb
in
adc
je
or
adc
add
loope
popf
mov
enter
and
testl
mov
testb
push
mov
jg
or
push
mov
adc
adc
sbb
dec
or
push
in
cwtl
push
loope
imul
push
ja
stos
sub
adc
and
jmp
mov
pop
into
call
fcoml
les
lock
pop
popa
aad
stos
aas
dec
and
xchg
add
cmp
orl
mov
push
neg
sbb
lds
cmp
sub
insb
adc
xchg
ret
enter
push
push
xor
movsb
cmpsl
pop
mov
iret
inc
jnp
repz
sub
or
int
repz
sbb
xchg
push
fsts
push
imul
cmc
stos
mov
idivw
daa
xchg
or
inc
test
mov
or
dec
adc
adcb
fsubrl
out
ljmp
enter
xlat
outsl
jb
sub
dec
rclb
xor
mov
dec
inc
mov
out
adc
lret
cs
ret
push
rcll
inc
push
in
jnp
jmp
inc
xchg
jbe
adc
cmp
rcll
je
sbb
adc
push
scas
push
lock
dec
adc
in
adc
xor
jnp
adc
rcrl
mov
push
cltd
jge
aam
fs
xorb
mov
mov
aas
push
sbb
roll
pop
pop
xor
inc
adc
sub
dec
imull
xor
jae
push
jl
call
in
mov
test
repnz
aaa
add
jl
and
add
jbe
pop
sub
subl
rclb
or
and
inc
nop
adc
mov
push
dec
loopne
int
inc
adc
cmp
fbld
bnd
mov
andl
jecxz
lea
cmpsl
push
test
push
movsb
lds
mov
test
das
es
adc
repz
aam
in
inc
ret
stos
push
jo
inc
shlb
pusha
test
lcall
sbb
adc
insb
jnp
hlt
adc
push
cmpsl
sub
adc
sub
je
pop
adc
testl
jns
fistl
fwait
cmp
lds
mov
shrb
or
push
sub
cld
sbb
roll
jbe
jecxz
sub
and
add
jnp
push
push
mov
test
push
pop
adc
jno
jge
adc
orb
pop
adc
lods
fistpll
adc
sbb
lock
data16
mov
jo
pop
mov
jmp
and
mov
adc
cmp
xor
dec
dec
adc
hlt
aam
shlb
loopne
and
jecxz
xor
and
stc
imul
mov
mov
iret
movsb
pop
inc
pop
adc
insl
ret
cmpsl
sbb
jne
js
push
adc
mov
jp
test
xchg
adc
jl
imul
cs
cli
push
std
lea
jb
sub
cmc
jne
mov
mov
add
loope
mov
cmp
insl
add
inc
push
lret
jecxz
adc
adc
shl
xchg
xchg
and
sahf
xor
jp
push
scas
add
and
lcall
push
cmp
pop
adc
or
imul
mov
sbb
xchg
and
fwait
sbb
popa
testl
push
mov
xlat
add
push
aad
out
xor
outsl
push
push
int3
mov
in
fwait
nop
jbe
add
xchg
rol
inc
xor
bound
adc
adc
xorl
cmp
and
mov
xchg
and
roll
push
adc
dec
xchg
iret
dec
adc
mov
ss
mov
adc
jbe
adc
adc
ds
jae
adc
push
mov
sbb
out
aas
push
add
jg
xchg
ja
fldl
int3
mov
js
fsts
dec
bound
add
sbb
lret
sbb
loop
cld
and
xchg
jl
mov
inc
pop
aad
jbe
mov
and
das
adc
cld
into
sbb
cmp
or
rcrl
mov
adc
sbb
mov
lock
je
pop
push
scas
lds
and
fwait
push
mov
imul
pushf
adc
sub
fwait
adc
mov
mov
push
cld
stc
mov
xchg
or
adc
push
repnz
test
fadd
arpl
xchg
add
cld
cltd
add
sbb
adc
leave
jecxz
fsubrs
cmpl
stc
addl
fists
fcmovnb
test
and
jae
aad
jns
jmp
inc
and
xchg
cmp
adc
testb
movsl
adc
scas
cld
stos
divl
test
xchg
cmp
imul
movsb
dec
adc
adc
or
add
mov
add
in
inc
jae
jle
jno,pn
cmp
movsb
adc
or
adc
jno
icebp
xor
cmpl
fnsave
rcll
dec
xchg
inc
hlt
mov
push
enter
loope
int3
inc
adc
ret
stos
and
pop
in
push
jecxz
lds
cwtl
pop
pop
dec
mov
and
adc
jb
sbb
lods
jne
out
decl
sbb
sub
lahf
jne
mov
scas
adc
sub
jecxz
adc
cmp
mov
hlt
aad
insl
fsubs
cmp
adc
push
xchg
xor
cmp
stc
adc
sbb
dec
lds
push
push
loope
cwtl
lods
cltd
or
jl
je
cmp
flds
jb
incb
sbb
mov
jl
adc
mov
add
and
js
push
lcall
int3
fnstsw
adc
sbb
sbb
jg
in
adc
or
lds
lcall
aaa
daa
hlt
mov
mov
jg
pop
sub
and
leave
sbb
bound
add
nop
ja
or
or
mov
mov
xchg
das
loope
add
add
adc
inc
jne
and
cmc
out
jp
pop
scas
sahf
dec
dec
add
fwait
shrb
insl
aad
les
xchg
lret
jmp
xorl
lods
mov
popf
loope
pop
sbb
cwtl
out
pop
add
or
inc
pop
adc
xchg
push
les
dec
adc
xchg
lcall
test
sub
pop
sahf
adc
pop
fldl
in
xchg
stc
jmp
adcb
and
cs
adc
add
cmpl
test
mov
xor
xchg
loope
sub
inc
das
adc
fisubrl
xchg
adc
int3
call
sbb
out
pop
ror
xorl
cmp
aaa
sub
repnz
adc
lods
mov
adc
das
ret
adc
dec
jmp
lds
popf
lret
and
adcb
cmp
xchg
mov
and
dec
and
mov
and
arpl
test
mov
lds
in
loope
inc
or
loop
insb
adc
imul
and
mov
dec
push
ret
mov
mov
push
jno,pt
xor
lock
jle
pop
and
adc
cld
lret
adc
xchg
les
pop
bound
dec
nop
adc
xchg
rcrl
cltd
pop
jle
and
fs
lods
rcrb
pop
push
aam
mov
imul
sub
mov
pop
and
adc
jnp
test
scas
jmp
lahf
sub
push
xor
mov
xor
and
and
push
ljmp
cmp
daa
mov
fisubrl
sub
hlt
icebp
bound
int3
dec
xchg
adc
cmp
fisubrl
sbb
popf
dec
out
sub
adc
scas
imul
or
imul
inc
test
mov
cmpsb
sub
mov
adc
inc
cmpl
adc
fcomp
and
xor
in
sbb
pop
test
mov
mov
pop
xchg
mov
and
cmp
fstl
and
push
xchg
dec
mov
imull
addr16
roll
jg
gs
jle
xchg
dec
sub
jbe
rcl
xor
clc
xor
mov
fildl
cwtl
xchg
jbe
mov
xor
inc
or
out
xor
adc
jg
adc
push
mov
imul
clc
in
mov
sbb
adc
sub
dec
and
adc
lahf
out
shll
mov
pop
in
add
and
fs
mov
sbb
push
cmp
xchg
movsl
sub
shlb
inc
dec
lcall
adc
loope
mov
mov
je
cmpb
gs
push
pop
pop
sbb
pop
lock
addb
outsl
insl
sub
test
and
dec
xchg
pop
mov
adc
xor
add
jbe
nop
push
lret
jecxz
jbe
mov
and
lock
jbe
mov
inc
mov
cwtl
pop
in
adc
pop
xchg
dec
dec
adc
icebp
push
rcrl
sub
dec
jo
pop
sub
dec
out
cli
test
in
adc
mov
mov
aam
out
fs
adc
pop
leave
sub
add
sub
nop
jecxz
dec
sbb
dec
adc
movsb
jno
push
add
pop
repnz
dec
lahf
jecxz
mov
mov
sub
pop
loopne
das
pop
adc
fwait
stos
lds
and
iret
ret
inc
adc
ja
cmp
adc
ljmp
loopne
addl
sub
mov
fistl
sbb
xor
xor
and
bound
ret
je
fisttpl
or
sub
shll
jge
mov
and
lds
sbb
xor
roll
jbe
xor
mov
fnsave
ss
dec
xchg
adc
mov
jns
jl
sub
pop
dec
addb
sub
sar
dec
nop
sbb
shlb
mulb
into
and
jp
adc
xor
out
pop
xor
mov
push
push
cmc
ret
jb
movsb
pop
dec
adc
clc
or
xchg
fsubl
out
add
das
lcall
stc
ss
ljmp
es
cmc
sbb
inc
in
orl
sbb
xlat
inc
jb
test
mov
inc
loopne
and
test
and
inc
lods
or
adc
pop
xchg
adc
adc
or
cmpsl
adc
mov
sbb
in
xchg
adc
test
lret
loop
test
or
push
inc
mov
dec
cmp
mov
adc
loope
or
lea
push
int
ds
sub
je
sbb
shl
or
cwtl
lret
movsl
hlt
or
jg
adc
xchg
jo
and
ja
fisubs
mov
cmp
mov
movb
notb
lahf
dec
ret
dec
push
cld
decl
cmp
add
jl
adc
adc
adc
in
jo
lds
and
jge
adc
push
lret
adc
ja
inc
daa
test
and
inc
adc
mov
add
out
pop
cltd
push
jmp
pop
mov
and
pop
cs
dec
outsb
mov
icebp
mov
push
popf
mov
pop
fbstp
jne
jp
psubq
push
fs
js
inc
or
and
or
jecxz
data16
and
scas
mov
ds
arpl
jmp
mov
push
mov
lds
data16
sub
pop
pop
inc
xchg
fists
push
adc
cmp
pushf
adc
jb
or
dec
xor
cmpsb
adc
test
adc
pop
imul
mov
push
shrb
xor
or
dec
into
adc
ljmpw
repz
or
and
pop
sub
and
andb
and
push
imul
mov
adc
mov
adc
fisubrs
mov
cld
std
push
lahf
scas
lret
adc
pusha
fdivr
jmp
arpl
pop
pop
sub
lcall
push
xor
push
pop
in
cld
jg
pop
cwtl
test
adc
shrb
add
pusha
push
adc
xchg
sub
jmp
test
push
adc
icebp
insl
mov
in
pop
bound
sub
arpl
shll
sub
aas
adc
fidivl
cwtl
or
mov
cmp
adc
test
dec
mov
scas
or
scas
movsl
cwtl
jmp
lcall
ud1
mov
and
mov
sub
jnp
stos
adcl
cwtl
lcall
cmp
into
inc
and
loop
out
adc
or
stos
pop
sub
jecxz
add
mov
jb
jl
xchg
cs
or
jnp
out
lret
dec
adc
and
loopew
mov
pop
rcl
lret
xor
adc
pop
or
xchg
adc
js
dec
in
adc
cwtl
div
iret
inc
ds
sub
lea
inc
xchg
dec
xlat
mov
xchg
in
push
sub
js
push
add
jo
add
in
shlb
repz
out
test
test
stos
inc
add
fnsave
inc
dec
test
sahf
rcrl
and
adc
adc
jb
repnz
jle
mov
data16
push
xchg
mov
adc
add
insb
adc
or
inc
mov
rcll
mov
cmpsl
push
and
mov
pop
and
add
cmp
sub
mov
cltd
pushw
adc
sbb
inc
dec
jno
push
fisttpll
test
add
sbb
test
data16
add
xchg
les
sub
aas
push
sbb
jnp
test
xor
testl
aas
ss
test
outsb
adc
aas
loopne
repz
jge
inc
and
popa
or
mov
jns
mov
ret
adc
mov
pop
mov
xchg
bound
pop
push
mov
xor
push
inc
rcrl
sub
pusha
test
pop
fisubs
adc
push
pop
rorb
adc
imul
mov
mov
out
lret
sbb
adc
je
shlb
jnp
inc
ror
mov
fcompl
pop
mov
sbb
or
popl
pop
lcall
sbb
lods
leave
sub
adc
mov
andb
mov
jno
jne
into
push
js
xor
xor
fcoms
mov
addr16
test
jg
add
int3
add
ret
fldenv
fwait
rclb
ja
adc
add
jbe
dec
outsl
sbb
sbb
adc
inc
adc
fistl
mov
xorb
loope
in
mov
pop
jmp
int
mov
sub
cwtl
pop
lds
pusha
aam
push
or
and
ss
aad
xchg
imul
inc
jbe
subb
stc
jge
scas
adc
cmc
inc
es
fs
enter
add
lods
xchg
pop
jbe
dec
mov
scas
jae
ret
test
push
lret
fs
bound
repz
fsubrp
adc
loope
cmpsb
aam
lea
cmp
dec
dec
out
push
mov
inc
and
sub
in
addr16
pushf
xchg
dec
dec
aam
lcall
and
xor
ret
test
inc
sbbb
test
cmp
out
adc
pop
sti
mov
outsb
ljmp
pop
jo
xor
out
dec
or
cmp
repnz
mov
adc
in
test
ret
adc
mov
mov
gs
les
cmp
mov
and
pop
test
push
mov
mov
pop
aad
adc
pop
lock
xor
adc
and
mov
jb
nop
cltd
sahf
pop
dec
cs
fidivrl
js
mov
lds
cs
or
ja
bound
adc
xor
mov
adc
sub
scas
adc
or
clc
adc
push
in
pop
adc
aaa
jno
and
leave
ljmp
cmp
js
mov
mov
in
mov
shll
arpl
sarl
ljmp
loope
sbb
dec
aad
clc
icebp
adc
cltd
mov
add
mov
test
sbb
cmp
push
movsb
dec
xchg
mov
cmc
popf
and
sbb
fildll
cltd
add
pop
scas
xlat
sub
mov
adc
jbe
sbb
pop
loopne
lds
mov
mov
mov
push
adc
pop
dec
js
mov
mov
cmp
xor
divl
aam
cli
or
push
int3
xor
jbe
inc
stos
stc
movsb
test
adc
std
sub
mov
or
lcall
push
test
jo
loop
push
jno
repnz
adc
jge
out
sub
jg
or
adc
pop
adc
adc
mov
mov
dec
ret
adc
out
mov
sbb
aam
mov
adc
mov
fidivl
push
insb
adc
in
inc
fs
adc
cwtl
es
mov
ficoms
xchg
dec
cltd
mov
pop
add
fistl
sub
test
push
jecxz,pt
mov
popf
out
jg
mov
mov
adc
icebp
or
mov
das
pop
cli
insb
addr16
mov
cmpsl
insl
hlt
xor
jge
int
pop
adc
or
cmp
cs
pop
jp
xor
pop
shrb
push
adc
ficompl
in
add
sub
mov
out
stc
imul
inc
sbb
adc
ljmp
jge
int
xor
into
jb
sub
mov
or
mov
adc
jnp
adc
mov
pop
jecxz
add
pop
test
or
hlt
adcl
jge
pushf
adc
or
jl
fwait
leave
fstpl
movl
popa
pushf
ret
enter
pop
andb
movsl
push
dec
stc
or
insb
sbb
xchg
and
jb
shlb
mov
imul
cmp
stc
subb
fldl
sub
mov
leave
dec
ss
add
inc
rcll
push
out
jns
inc
add
nop
add
adc
cmovnp
mov
popf
mov
mov
mov
pop
sahf
push
stos
adc
shl
mov
xchg
adc
lock
sub
dec
in
rcll
jbe
outsb
outsl
test
cmpsl
stos
pop
sub
or
xchg
push
mov
mov
sbb
dec
dec
adc
lahf
aam
dec
xor
and
add
pushf
mov
popf
xchg
fimuls
mov
fs
sbb
mov
mov
sub
pop
push
adc
xchg
mov
repz
pusha
fmuls
adc
sub
mov
je
fisubs
inc
adc
pop
imul
xchg
fmull
push
dec
daa
test
or
and
inc
jns
adc
test
jle
test
andl
lock
ja
jns
sbb
add
jne
add
test
xchg
outsl
enter
xchg
jno
sbb
xlat
ljmp
pushf
popa
lret
sti
mov
sbb
repnz
pop
jp
outsl
mov
pusha
or
push
xchg
dec
fldl
jae
or
inc
int
lods
and
or
adc
les
push
aaa
xor
lods
scas
clc
adc
push
cwtl
mov
or
adc
gs
inc
cmp
pop
lods
fldt
fists
sbb
scas
dec
mov
cmp
arpl
jmp
adc
push
and
scas
pushf
sbb
sbb
adc
stc
aam
jno
inc
xlat
sti
adc
data16
adc
roll
hlt
pop
sbb
aam
mov
stos
cs
adc
xchg
mov
inc
jo
dec
bound
cltd
jns
dec
stos
fists
call
subl
sbb
mov
cltd
mov
add
push
mov
icebp
push
ss
lds
cwtl
or
jg
mov
out
scas
lock
lret
pop
scas
aas
pop
adc
jge
shrl
js
add
cmp
mov
in
mov
pop
sub
rorb
ljmp
mov
mov
mov
das
test
shr
int3
cmpsb
mov
popl
adc
dec
mov
push
hlt
sub
movsl
clc
lods
pop
pop
push
push
jmp
sub
pop
pop
dec
sbb
xor
ret
push
sub
sbb
scas
add
jae
or
out
adc
fimull
shlb
aaa
out
popa
xor
call
adc
sub
or
adc
sti
lret
adc
mov
addr16
cltd
adc
pop
pop
in
push
shrl
fcoml
xchg
sbb
cmp
jae
push
adc
repnz
fisubrs
jmp
adc
dec
iret
daa
lds
paddsw
movsl
and
push
adc
dec
sar
nop
adc
ficoml
jne
insl
or
cmpsl
add
sbb
hlt
pop
add
mov
stos
adc
bound
popl
push
jmp
mov
dec
gs
adc
insb
pop
push
fwait
push
dec
sub
adc
and
dec
add
lea
mov
negb
repz
inc
pop
scas
outsl
adc
mov
and
test
popa
inc
push
adc
mov
cltd
adcl
test
bound
push
arpl
nop
lock
or
push
mov
dec
cmpb
loop
and
push
arpl
cmp
pop
mov
iret
mov
in
sbb
stos
sbb
or
push
push
sub
into
cmpsl
ja
es
inc
ficoml
add
or
push
fimull
sahf
mov
lods
sub
loop
push
add
xlat
test
or
jb
adc
jbe
bound
stc
lcall
pushf
daa
loopne
dec
dec
mov
adc
jl
dec
push
cmp
bound
mov
push
test
imul
mov
push
dec
mov
xchg
sub
bound
and
mov
paddsb
pusha
lea
ja
xchg
roll
ja
jo
rorb
out
push
daa
sbb
in
insb
or
mov
xchg
sub
pop
adc
nop
and
xor
push
jbe
mov
ret
and
inc
add
addr16
mov
dec
xor
rcl
sub
mov
rol
sti
insb
dec
or
push
in
test
cmpb
and
cmp
fcoml
xchg
gs
arpl
insl
push
add
mov
lret
xor
cmp
aam
addl
test
ja
shrb
mov
and
daa
mov
sub
fwait
adc
cmp
js
push
in
icebp
mov
rcr
and
mov
push
adc
dec
or
cltd
and
pop
idiv
in
push
cmpsb
mov
push
rclb
jmp
in
mov
push
and
pop
pop
dec
pop
xchg
adc
leave
adc
xchg
adc
testl
ja
popa
add
jno
sbb
cld
cli
and
and
xchg
shlb
inc
mov
out
dec
fsts
xor
faddl
je
sti
repnz
popf
testb
xchg
jne
rcll
pop
std
push
fistl
aad
lock
inc
dec
sub
add
das
xor
and
dec
pop
mov
dec
cmp
and
loope
push
subl
jbe
call
mov
stos
adc
inc
pop
lds
data16
adc
cmp
and
adc
sahf
lock
sbbl
iret
divb
mov
sarb
sub
out
adc
add
dec
push
xor
test
push
and
xchg
adc
loope
dec
mov
jg
xor
or
or
sub
xor
mov
nopl
adc
add
sub
jo
mov
adc
push
fists
in
lds
js
mov
fiadds
inc
pop
mov
inc
mov
jle
jecxz
sub
mov
pop
int
clc
jb
xor
add
pop
and
jl
adc
adc
jno
adc
sbb
mov
ret
imul
jb
jl
sub
in
enter
add
inc
gs
sbb
jne
data16
push
xor
out
shlb
test
push
pop
arpl
js
stc
aam
sub
and
jbe
aad
adc
ss
test
cli
pop
dec
sub
das
push
jl
jae
adc
mov
stos
inc
sub
aam
add
in
jle
sub
adc
je
pop
mov
loop
cmp
test
addr16
push
lds
and
shll
push
adc
aam
mov
push
sub
push
loopne
dec
mov
dec
insb
mov
push
inc
fiaddl
imull
xchg
std
mov
adc
adc
mov
sbb
dec
mov
adc
hlt
adc
adc
add
mov
adc
cmp
jno
adc
outsl
pop
push
andb
push
push
and
ret
adc
test
pop
push
mov
int3
or
cmp
jp
add
std
sbb
push
and
insb
adc
mov
andb
out
add
mov
mov
sbb
stc
pop
dec
lahf
pop
push
ja
jnp
xchg
mov
leave
popa
mov
out
es
sbb
jns
mov
or
pop
loop
dec
adc
jg
and
adc
jmp
cmp
or
aaa
xchg
loop
adc
fs
mov
pop
xlat
addr16
adc
ja
iret
cmpsl
adc
hlt
aad
ds
shrb
sub
out
outsl
adc
and
nop
inc
add
je
stos
jne
jnp
push
mov
inc
int3
sbb
outsl
jne
cmp
movsb
or
sub
jbe
fucomp
adc
inc
xchg
lds
push
and
pop
push
mov
jno
add
or
xor
mov
jnp
mov
bound
stc
adc
jae
mov
lds
aaa
cmc
fiaddl
mov
xchg
xchg
leave
imul
pusha
je
hlt
jo
mov
jae
into
adc
cmp
aaa
adc
call
cmp
lock
adc
add
adc
xchg
pop
pushf
jns
sub
pop
adc
xor
jecxz
adc
insb
or
dec
js
cmpsl
add
outsl
push
adc
jae
pusha
push
lock
mov
cwtl
bound
lods
fcoml
mov
lret
or
and
jg
cwtl
inc
inc
adc
jnp
stos
push
adc
jl
mov
nop
mov
repz
stos
sbb
sbb
dec
scas
insb
xchg
adc
stos
adc
mov
pop
xchg
mov
inc
adc
adc
add
das
jae
gs
pop
xor
sub
inc
pop
xchg
call
inc
jae
rcrl
lret
mull
loop
pop
ss
jbe
enter
js
in
fsub
push
jge
lret
push
in
pusha
adc
mov
add
test
cwtl
lea
sbb
sub
das
mov
inc
imul
testl
arpl
iret
popa
pusha
mov
pop
gs
sub
jb
mov
sub
sub
test
xor
cmp
sub
ja
push
je
loop
mov
rolb
push
and
movsb
cli
addb
xchg
sub
fcoml
mov
mov
adc
xor
fcoms
lds
lods
insl
fisttpl
or
adc
sbb
fdivrl
jno
mov
adc
imul
mov
test
adc
ficomps
std
out
mov
ja
pushf
xchg
and
push
movsb
sbb
adc
in
repnz
cwtl
testb
scas
outsl
adc
ds
mov
jp
fcmovnu
xor
jnp
nop
fiadds
dec
mov
sub
xlat
xor
and
les
and
lret
test
adc
fcoms
jo
adc
and
aas
test
ljmp
push
shrl
cli
dec
pushf
in
sub
out
and
lcall
add
arpl
sahf
xorb
xor
lds
fildll
loope
ljmp
dec
test
das
or
std
push
adc
nop
pop
cmp
aad
sub
fdivr
addr16
or
les
cltd
imul
hlt
stos
push
mov
mov
xchg
jns
inc
push
mov
mov
mov
sub
adc
test
mov
jae
in
pusha
push
adc
ja
and
scas
mov
dec
pusha
mov
push
mov
sub
jecxz
rol
je
in
push
rcll
sub
mov
xchg
jnp
adc
mov
mov
mov
adc
add
pop
push
adc
je
mov
jnp
jecxz
add
pushf
adc
adc
cmc
and
adc
leave
int
repz
mov
sub
orb
and
cmovno
adc
adc
mov
clc
adc
sub
dec
inc
lret
call
adc
shll
push
inc
or
jg
adc
pop
sahf
dec
mov
cmp
fwait
sub
test
inc
add
inc
mov
adc
iret
jg
stos
adc
or
js
mov
adc
mov
cmp
notb
fistl
push
adc
lret
test
xor
and
data16
adc
adc
jl
inc
mov
rcr
test
dec
lds
inc
in
mov
push
and
in
adc
pop
testl
and
add
loop
dec
adc
inc
ror
and
insl
loopne
bound
int3
add
mov
push
ss
xchg
sub
sbb
xor
stos
mov
adc
imul
adc
adc
ret
stos
adc
mov
adc
mov
lea
aaa
cltd
jo
push
mov
add
pop
jne
add
mov
cmp
movsl
adc
into
mov
adc
jecxz
cmovo
or
cmp
mov
push
cmc
or
or
fbld
es
aad
mov
or
cltd
add
pushf
shlb
cwtl
popf
xor
das
pop
dec
in
adc
icebp
pop
or
mov
jecxz
adc
aad
jnp
adc
pop
stc
mov
mov
in
dec
filds
mov
out
sbb
arpl
and
rcr
bound
out
stos
xor
push
adc
sub
mov
and
sub
push
inc
pop
adc
je
mov
hlt
jmp
addr16
adc
add
push
mov
jp
adc
push
mov
jae
mov
lods
repnz
hlt
cmp
xor
pop
andl
push
xor
sub
notl
aaa
js
loop
sub
sub
jmp
icebp
adc
mov
pop
test
scas
xchg
dec
xor
and
push
addr16
popa
cld
pop
idivb
in
sub
jmp
insl
test
mov
adc
mov
dec
adcb
xor
jg
pop
xchg
sub
std
adc
inc
xor
imul
sti
ret
pop
rolb
push
cld
and
pop
or
sub
lods
test
enter
lret
jne
sub
mov
mov
dec
pop
aad
inc
mov
lock
cli
ror
call
cmp
fistpl
adc
test
inc
push
das
or
adc
add
adc
lea
insb
cltd
js
negb
in
jl
nop
xor
jns
or
scas
xchg
adc
cmp
or
adc
sub
ret
mov
jg
cmpsb
bound
out
rcrl
add
or
repz
dec
jp
lds
mov
scas
jg
stos
adc
push
insb
dec
push
adc
pushl
data16
jae
popa
lret
int3
cltd
mov
push
in
daa
push
shr
in
pop
sbb
and
adc
hlt
inc
pop
bound
ret
loopne
ds
dec
cmc
dec
out
iret
add
adc
push
adc
push
xchg
xchg
shrl
adc
or
lret
adc
les
stc
aad
and
ljmp
les
sbb
rcll
or
or
cmpsb
push
aas
shrb
test
add
sub
out
xchg
mov
imul
fs
adc
cmp
jno
adc
or
xor
and
push
cmpsl
or
xchg
cmpps
int
das
adc
or
pop
fsubrs
ss
cmp
ret
adc
jb
sbb
adc
push
pop
int3
add
adc
aaa
ret
push
icebp
out
cmc
test
das
lahf
pop
in
neg
cld
mov
xor
jae
mov
jg
aad
inc
pop
or
and
xchg
mov
mov
adc
pushl
int3
fld
push
enter
andl
sbb
or
out
out
fdivs
dec
or
jg
and
and
scas
fs
jbe
subl
movsb
arpl
xchg
imul
inc
lds
dec
sub
nop
aam
add
rorl
push
mov
adc
inc
push
adc
adc
mov
and
lods
adc
orb
aaa
add
sbb
dec
out
int
cs
lock
stos
pop
push
jg
test
call
mov
xchg
push
adc
dec
jmp
insb
adc
scas
inc
cmp
sub
jo
and
mov
in
sbb
push
or
push
popf
subl
jno
cs
xor
pop
repz
lods
pop
adc
jmp
in
mov
lahf
scas
mov
cmp
enter
sbb
stc
or
lods
adc
xchg
xor
mov
sub
xor
daa
dec
add
adc
sahf
adc
xchg
pop
mov
xchg
adcl
adc
inc
clc
mov
cmpsl
sub
int
int3
adc
aam
adc
adcl
nop
sbb
int3
xor
pop
lret
inc
push
xchg
push
cmp
and
lahf
loop
sub
xor
fcmovnbe
pusha
stos
aad
imul
mov
cltd
adc
mov
jbe
xlat
mov
mov
in
xlat
loop
and
mov
adc
mov
les
or
mov
div
imul
cmp
jl
and
push
sub
sti
mov
repz
fiadds
fsubr
push
push
adcb
call
test
clc
aam
adc
imul
xor
fwait
jecxz
adc
inc
or
mov
icebp
mov
lods
and
sub
and
mov
sub
xlat
scas
out
pop
xchg
jecxz
movsb
adc
mov
mov
lret
adc
stos
push
lock
popf
mov
mov
jp
jne
inc
scas
popa
jne
nop
mov
jnp
rcrl
out
adc
jle
push
mov
and
xchg
cli
repz
and
inc
dec
arpl
adc
sarl
dec
sub
or
adc
sub
push
enter
fldt
sahf
pop
fsubrs
in
call
sub
jecxz
push
dec
adc
fsts
jne
fsub
push
or
lret
loop
lret
test
cmc
mov
lcall
movsl
sub
pop
in
dec
sarl
mov
mov
push
dec
and
lahf
jb
mov
dec
adc
mov
xor
lcall
xchg
and
sahf
sub
pop
xchg
adc
pop
jle
test
jge
adc
inc
adc
cmp
vmwrite
xchg
xchg
lods
repz
das
inc
mov
adc
pop
cmpsb
jge
add
cmp
dec
dec
adc
je
mov
test
xchg
insl
jmp
cli
shrl
lret
stc
fsubp
nop
stos
out
adc
xor
shrb
call
mov
es
inc
inc
cmp
pop
sub
dec
fpatan
sub
sahf
jae
fcoml
jle
mov
and
leave
mov
push
xchg
ja
insl
cmp
popa
lea
shll
adc
inc
dec
sub
or
push
movsb
sbb
sub
adc
inc
scas
stos
mov
enter
nop
movsb
push
or
lea
icebp
ja
mov
and
shl
jbe
cmp
lret
out
scas
adc
fs
xor
sub
out
push
andl
ret
test
gs
jecxz
xor
loope
lret
clc
in
rcrl
dec
cvtps2pi
cmp
push
and
bound
jb
push
adc
mov
jg
adc
mov
bound
rorb
roll
iret
adc
push
loopne
lock
test
aaa
hlt
data16
jmp
and
xor
sub
lret
xchg
clc
push
test
sub
sub
sbb
and
icebp
lret
adc
jp
adc
mov
ficomps
pop
adc
popa
ds
mov
mov
cmp
pop
sub
loop
popa
adc
scas
xchg
aas
in
dec
cmp
add
nop
adc
push
cmp
jp
cwtl
mov
mov
adc
lret
test
cmp
sbb
mov
scas
push
adc
aas
fnstenv
mov
cltd
je
call
int
mov
mov
xor
test
sub
adc
pop
lea
adc
sub
popf
dec
push
loope
shrl
or
and
clc
mov
in
stos
dec
pop
mov
idiv
cltd
mov
push
push
movsb
xor
shr
ja
inc
gs
adc
pop
and
dec
sub
xorb
sbb
and
rorb
push
xchg
push
add
xor
aam
cmpsl
jns
inc
adc
xchg
mov
dec
cld
cmp
jl
adc
bound
adc
and
std
xchg
sub
cmp
jb
mov
jecxz
adc
xor
mov
int3
adc
mov
add
insb
popf
ds
test
movsl
ret
jp
mov
test
mov
adc
push
pop
ret
dec
imul
cmp
shrb
orb
push
and
jbe
dec
add
cld
popf
aam
das
inc
dec
mov
leave
movsl
pop
rcl
ljmp
sub
pop
add
xchg
mov
repz
mov
adc
movsl
clc
xor
int
push
jne
and
jbe
fs
adc
jb
cwtl
les
and
inc
push
xor
rcr
test
aad
lds
inc
and
js
or
in
inc
or
jne
fst
roll
or
sahf
jp
mov
ret
cwtl
mov
dec
arpl
pop
mov
xor
mov
jo
lret
mov
add
test
cmpl
xorb
outsb
movsb
push
idiv
out
adc
loop
fbstp
mov
into
mov
and
test
and
mov
sbb
arpl
inc
lds
and
sub
push
rolb
and
sbb
adc
cwtl
das
xchg
pop
rclb
repnz
repz
sti
lahf
push
mov
rclb
ss
add
ja
jnp
or
sbb
mov
dec
shl
jp
test
bound
and
in
adc
fisubrs
dec
rclb
ds
xchg
adc
jae
test
cmp
inc
lret
dec
call
aad
lahf
inc
loope
xchg
stc
das
push
sbb
adc
jno
pop
imul
xor
mov
adc
push
and
repnz
lret
lcall
dec
je
lea
test
jnp
icebp
repnz
sub
dec
in
mov
xchg
inc
and
add
shld
xor
pop
fs
adc
fbstp
nop
lods
out
inc
sahf
bound
shl
jmp
aas
jp
sbb
test
je
add
stc
push
push
insl
pop
add
adc
repz
jl
test
fstpl
adc
sahf
and
movsl
call
sbb
std
and
or
mov
lds
jle
jmp
fsubrl
adc
mov
adc
adc
or
imul
fisubs
icebp
add
mov
es
adc
lret
out
jnp
adc
cmpsb
xchg
aaa
stos
mov
pop
adc
xchg
cs
mov
out
pop
add
mov
data16
les
inc
and
lock
popf
test
je
mov
pop
mov
cmpsb
imul
mov
psrlq
leave
cmc
push
das
fs
std
cmp
adc
add
push
mov
mov
negl
fstps
mov
test
cld
mov
or
hlt
test
adc
adc
cld
adc
mov
test
mov
add
push
fs
repz
mov
adc
jge
lods
adc
test
cmpsb
and
std
dec
pop
or
jle
into
xchg
sub
in
mov
ljmp
push
inc
and
test
fstpt
adc
in
adc
test
pushf
cmpsb
inc
pop
adc
je
cmp
adc
or
push
dec
mov
cmp
mov
push
mov
adc
mov
test
cmp
cmp
add
mov
loopne
js
test
dec
bound
and
adc
xor
loope
ljmp
push
test
sbb
dec
or
push
add
test
pop
andb
push
insl
mov
ret
sub
dec
mov
call
adc
jns
xchg
inc
xor
add
sub
fistl
mov
mov
or
sub
lods
cmp
lds
fiadds
cli
ljmp
adc
dec
cmp
lds
inc
adc
mov
mov
adc
inc
mov
xchg
mov
addr16
scas
adc
popl
and
or
adc
mov
jb
imul
sbb
nop
aad
in
and
lahf
subb
out
cmpsb
in
mov
int3
xchg
mov
adc
repz
push
mov
out
jbe
push
adc
mov
imul
lds
mov
loopne,pn
test
xor
pop
jmp
or
in
cmpsb
or
and
bound
orl
imulb
adc
andb
jp
push
push
ret
dec
mov
test
in
cli
je
inc
push
xchg
adc
adc
sar
aad
adc
push
mov
popa
mov
jnp
andb
roll
pop
ret
adc
ss
fsubrl
pusha
dec
adc
xchg
push
pop
adc
add
xor
adc
jecxz
stos
hlt
sub
xchg
out
inc
mov
adc
cltd
bound
mov
add
dec
mov
scas
mov
shlb
mov
int3
test
ja
rolb
lds
push
pop
jnp
jno
adc
ret
jmp
cmpsb
adc
sub
rol
sti
fmulp
div
adc
jo
sub
jge
adc
sub
ds
int3
repnz
fdivr
adc
pop
int
or
sbb
xchg
mov
enter
adc
pop
fimuls
fiaddl
cld
and
mov
sub
mov
mov
das
push
fldl
mov
outsl
sbb
test
mov
mov
sub
dec
jb
and
frstor
xlat
lods
cld
scas
adc
or
pop
sub
aam
mov
pop
call
adc
cmpsl
sub
add
sbb
adc
push
xor
and
icebp
sbb
ljmp
fsubr
add
in
roll
xchg
mov
in
push
add
adc
inc
xor
cmpsl
lds
fs
dec
fsubrl
iret
test
dec
inc
xor
push
fwait
sub
jecxz
mov
sub
icebp
adc
ja
pop
pop
adc
loope
jno
jne
jmp
fsubrs
or
andb
pop
jl
adc
nop
divl
adc
scas
rorb
stos
xor
and
adc
mov
dec
fs
ret
adc
jb
mov
data16
jle
adcb
test
addr16
stos
imul
inc
add
popa
mov
in
ja
test
cwtl
clc
aam
imul
je
mov
pop
mov
add
addr16
push
dec
inc
adc
or
pop
js
sub
xor
add
pop
mov
adc
insl
stos
adc
jmp
mov
pcmpgtd
adc
dec
stc
nop
xor
aas
dec
mov
ss
in
adc
sbb
dec
adc
mov
xchg
push
add
fsts
sub
shlb
lds
xor
sbb
adc
sbb
push
call
loopne
je
push
pushf
mov
mov
adc
ret
add
shrb
stc
pop
xchg
push
repz
mov
lret
imul
push
ljmp
xlat
adc
push
rcll
and
jae
push
iret
mov
pop
into
js
adc
jecxz
cmpsl
push
pop
sbb
pop
adc
and
pop
adc
aam
mov
imul
mov
sub
adc
lahf
dec
xchg
insb
mov
stos
dec
adc
stc
sbb
loope
nop
push
sbb
aam
adc
sub
sub
mov
jle
adc
jmp
inc
leave
push
stos
fldt
pop
push
lret
xor
lret
jecxz
subl
and
pop
rorb
xor
pop
into
pop
push
in
push
pop
out
sub
faddp
adc
mov
sahf
ljmp
scas
mov
mov
fnsave
pop
adc
ret
mov
mov
pminub
or
sarl
or
push
push
fwait
and
ss
pop
xchg
sub
ja,pn
adc
pushf
sub
sub
out
dec
loop
push
sbb
or
insb
push
sbb
pop
mov
add
xchg
imul
mov
xor
dec
data16
sbb
cmpsl
cmpb
hlt
scas
mov
js
es
loopne
adc
adc
sbb
jbe
icebp
xchg
dec
test
orl
xor
cmp
inc
imul
pop
xchg
and
test
fisttpll
hlt
jge
adc
mov
add
arpl
pushf
adc
xlat
lcall
cltd
or
add
ljmp
lret
and
fwait
add
pop
sbb
dec
ret
pushf
mov
xchg
push
xor
jb
and
or
bound
loope
xlat
adc
xorl
repz
xchg
pop
sub
or
inc
mov
stos
mov
adc
inc
or
lods
ret
std
xchg
pop
mov
out
and
enter
and
pushf
adc
repz
inc
jne
sbb
and
push
cmp
push
lret
loope
xchg
mov
sub
mov
aaa
stos
sbb
fisttpl
mov
fidivrs
push
cltd
push
xchg
adc
lds
adc
push
cmp
sub
and
scas
adc
sub
hlt
in
pop
cwtl
call
sub
mov
push
inc
xchg
adc
push
mov
mov
outsb
ds
in
mov
mov
aam
sbb
adc
nop
and
rclb
cmpsl
es
adc
mov
inc
roll
shlb
das
aad
rcrl
loop
and
arpl
jne
jmp
mov
shr
mov
dec
adc
jl
pop
and
push
sub
inc
stos
loopne
rcll
lret
and
pop
cmc
test
dec
loope
inc
xchg
jp
scas
inc
test
loop
addb
in
mov
sub
xchg
shl
lret
movsl
inc
test
add
stos
and
adc
jmp
out
int3
adc
clc
loop
xlat
or
fnstcw
out
test
inc
bound
pop
nop
adc
lcall
mov
inc
fldenv
leave
aas
and
or
cmpsl
scas
stos
enter
mov
and
sbb
lret
outsb
loopne
test
mov
ret
add
adc
xchg
adc
repz
lods
adc
and
stos
mov
push
xor
dec
push
and
sbb
imul
mov
sbb
out
gs
mov
jmp
mov
inc
push
adc
mov
jne
jbe
xchg
push
mov
sub
mov
jnp
xchg
mov
adc
lods
cld
int
insb
lahf
pop
inc
stos
or
in
xor
push
and
mov
inc
xchg
cmpsl
pop
adc
aas
icebp
mov
cmp
jbe
movsb
in
cld
loop
dec
imul
stc
add
pop
fiaddl
loopne
test
inc
scas
aaa
sub
mov
imul
jp
shrl
pusha
inc
sub
mov
adc
cmp
cmc
mov
xor
mov
clc
xor
adc
push
push
pop
test
test
add
scas
jae
xor
or
adc
dec
sbb
stos
mov
jo
mov
or
test
test
jecxz
cmp
adc
mov
add
sub
sahf
or
aam
cmp
int
enter
std
push
mov
shlb
pop
inc
mov
ljmp
testl
or
shl
imul
mov
enter
xchg
jns
cmpsl
loope
push
pop
push
push
jp
movsb
jmp
jecxz
adc
iret
dec
mov
and
enter
sti
in
sub
scas
ficoml
fmull
cmp
mov
loop
push
push
mov
or
add
adc
xchg
repnz
cwtl
sub
pop
pop
adc
loop
jg
test
jb
aas
js
or
into
adc
je
cwtl
jne
push
dec
test
daa
mov
and
pop
dec
mov
mov
add
outsb
and
ret
push
mov
xchg
xchg
adc
add
ja
pop
addr16
xchg
jnp
out
push
mov
xor
and
lock
adc
mov
inc
movsb
test
or
fbstp
hlt
fisubrl
data16
fs
out
and
add
push
fisubs
adc
jne
xor
adc
testb
cmp
xorb
inc
mov
cmp
xchg
mov
pushf
push
push
bound
adc
test
rcll
mov
push
out
adc
dec
jp
test
call
scas
js
dec
ret
and
int
xchg
out
mov
inc
mov
xchg
fdivl
cwtl
jns
mov
or
fadd
dec
in
adcl
js
push
adc
mov
jle
xor
ret
dec
mov
adc
or
es
cli
movsl
xchg
sahf
cmp
stc
push
sti
and
sub
lods
mov
inc
pop
in
popa
dec
aam
inc
rorl
cwtl
add
fbstp
jne
mov
or
dec
and
lret
mov
fst
adc
or
arpl
push
pop
shlb
adc
sbb
stos
cmp
mov
out
call
das
stc
dec
or
rclb
jo
mov
mov
jle
xchg
into
cld
out
enter
rcl
push
pop
cmp
addr16
jbe
jns
sub
mov
cmpsl
pop
mov
sub
add
dec
cmpsb
adc
jg
cwtl
xchg
adc
shlb
in
scas
or
lock
sub
mov
push
fsub
sbb
or
pop
sbb
sub
les
mov
cwtl
loopne
adc
push
ret
shlb
fcom
push
add
adc
pop
adc
inc
sub
sbb
or
xlat
jge
das
pop
pop
stos
pop
test
lock
int
stos
adc
push
imul
aas
mov
ficomps
cmp
push
adc
repnz
pop
mov
mov
mov
sub
pop
loope
adc
jge
movl
sub
daa
je
mov
ret
xchg
fs
cs
adc
sbb
pop
add
sub
movsl
nop
adc
sarb
ret
jp
mov
jg
add
pop
push
out
addl
xor
test
nop
or
loopne
inc
xor
subb
mov
mov
js
scas
or
adc
dec
insb
sbb
adc
adc
pop
les
testb
adc
mov
imul
mov
mov
adc
xlat
cmp
and
int3
lret
nop
cmc
notl
out
loopne
out
sbb
insl
pop
jae
bound
push
cmp
cli
pop
imul
testl
dec
out
pushf
int3
push
scas
rcll
ja
sbb
mov
sbb
and
cwtl
push
add
add
adc
jmp
ret
clc
sub
adc
stc
imul
js
mov
es
xchg
test
mov
fisubrs
adc
ret
mov
insb
adc
leave
jbe
int
cmpsb
mov
or
stos
rcrl
and
lds
xchg
out
adc
aad
mov
jl
inc
fisttpll
mov
sbbb
cmpsl
xor
loop
xor
jne
cltd
in
sub
cmp
popf
pop
xchg
fnstcw
out
jbe
cmc
adc
mov
xchg
mov
ja
mov
xor
dec
push
dec
cmp
xor
sub
and
fsubl
sbb
popa
fsts
push
in
loope
cs
rcrl
mov
aas
nop
cmpsl
mov
data16
es
insl
push
sub
adc
inc
add
xchg
dec
or
mov
mov
adc
aaa
out
aam
mov
or
sarl
ficomps
leave
ja
add
jecxz
cmp
negb
and
sub
test
jecxz
push
outsl
cmc
ja
adc
or
jle
popa
in
xchg
dec
lods
fistl
loop
lret
push
pop
adc
mov
push
cli
mov
mov
jg
adc
push
inc
sub
xlat
outsl
aam
and
push
or
adc
sbbl
in
mov
pop
push
xchg
fs
out
add
insb
repnz
dec
inc
pop
sub
popa
fidivrs
mov
adc
daa
call
cmc
or
sub
and
jae
call
cmp
add
sub
jae
insl
jp
adc
shlb
stos
cmp
pop
inc
push
add
sbb
mov
fldcw
dec
inc
sbbl
or
push
ljmp
xchg
out
xlat
dec
mov
sbb
cmpsb
adc
out
add
out
arpl
xchg
aas
and
xor
movsb
dec
jne
bound
ss
xchg
movsl
adc
adc
xchg
ficoml
ret
test
mov
xchg
cmc
adc
mov
xor
or
out
out
lea
lret
mov
mov
adc
pop
shll
scas
adc
in
mov
add
test
pushw
or
push
fsts
add
int3
cli
lret
push
ret
ljmp
adc
aad
filds
mov
repz
push
stc
jae
inc
pop
out
sub
xchg
mov
cmp
popa
sbb
inc
jne
xlat
outsb
das
sarl
sub
cmp
out
mov
dec
jne
xor
ror
cld
cmc
cmp
sahf
mov
mov
adc
xor
push
pop
insl
inc
and
jo
mov
jne
xor
push
test
inc
or
sub
aam
lds
adc
mov
push
dec
jne,pn
and
movsl
pop
lea
push
adc
mov
lret
jbe
std
mull
adc
pop
fsts
inc
xchg
pusha
es
call
shrb
sub
popa
adc
add
jb
adc
jecxz
or
out
ret
lret
dec
adc
sub
data16
scas
adc
std
lcall
pop
mov
xchg
dec
dec
mov
lds
nop
mov
adc
sub
xchg
pop
jp
jbe
gs
sub
mov
adc
hlt
aaa
jae
adc
mov
cmpl
cmp
push
pop
jo
insb
int
xor
sbb
shr
push
and
sub
dec
cmp
xchg
push
fcoml
mov
shlb
in
jae
nop
fwait
push
jmp
adc
jno
cmp
test
cmc
pop
and
xor
test
orb
in
sub
adc
dec
test
jp
sbb
push
dec
push
mov
sbb
popf
mov
cmp
aam
in
ret
lds
ret
and
sarb
xlat
mov
call
inc
jp
dec
sub
pop
xchg
testl
sub
mov
mov
jbe
jne
repz
test
sahf
or
adc
or
xchg
adc
scas
mov
adc
mov
cmp
lds
dec
inc
stos
rclb
imul
sbb
shlb
adc
push
pop
sub
out
sbb
lods
fcmovbe
sbb
or
sub
dec
adc
fs
test
je
addl
nop
ja
mov
xchg
cmpsb
dec
and
fimuls
mov
xchg
xor
jl
sbb
push
shlb
cmp
pop
jmp
mov
inc
adc
xlat
and
imull
movsb
mov
inc
pop
enter
mov
sbb
loope
pop
jae
iret
add
js
add
popa
or
mov
mov
and
enter
cli
ljmp
push
dec
lahf
adc
sub
mov
lret
jo
adcl
scas
subb
test
mov
cltd
xchg
fsts
movsb
cmp
shll
mov
out
jbe
xchg
inc
fnstenv
sbbb
mov
push
jae
adc
popa
and
push
jl
xchg
int3
leave
xor
push
lahf
pop
adcl
pop
ret
fwait
and
sbb
and
adc
sbb
fcoms
mov
fdiv
les
mov
add
push
iret
mov
mov
ret
test
lods
rcll
jae
xchg
mov
cmp
push
pusha
lcall
rcrb
push
pop
ss
push
adc
ret
loop
pop
mov
ljmp
pop
add
inc
mov
pop
mov
mov
mov
movsb
stc
push
divb
les
pop
jge
aad
mov
or
xchg
pop
cmp
inc
lds
push
cltd
sub
mov
dec
mov
aam
loop
jae
jle
aad
insl
out
xor
aas
jmp
cmc
xor
loopne
adc
mov
push
and
out
lods
sti
test
in
and
dec
xchg
adc
hlt
or
aam
repz
test
inc
xchg
push
lret
popa
cmc
jnp
mov
dec
imul
orl
adc
cmp
repnz
pop
and
lock
into
int
mov
bound
mov
ret
test
mov
in
imul
mov
out
fwait
add
jle
push
push
add
dec
cmp
repz
push
jecxz
add
bound
ja
call
stos
push
or
adc
cmpsb
and
aam
test
lds
jb
test
scas
or
add
and
mov
aaa
icebp
movl
lret
adc
or
push
add
das
pop
cmpsl
cmp
int3
dec
or
sub
add
pop
fistpll
aas
lods
dec
shrb
int
sub
jb
outsl
gs
or
std
ds
in
lds
adc
jns
icebp
dec
add
sub
adc
add
scas
adc
push
lea
push
or
ljmp
pop
mov
inc
adc
inc
xchg
or
adc
dec
adc
ljmp
sbb
roll
adc
in
jns
test
out
sub
mov
fistps
mov
adc
pop
outsb
push
dec
inc
push
int
out
fs
sar
dec
jmp
mov
adc
jmp
dec
insl
adc
cwtl
lods
mov
fists
jns
xlat
movsl
mov
daa
xchg
add
sub
xchg
inc
push
jl
push
cmp
sarl
lcall
adc
pop
push
repnz
bound
les
lret
enter
sub
out
cli
and
cmc
cmpsb
mov
shlb
adc
ja
dec
mov
mov
mulb
cs
cmp
and
mov
lods
sets
cmp
lahf
jp
mov
ljmp
xlat
and
stos
push
sarl
les
sub
ret
sbbb
mov
push
push
inc
push
mov
fwait
inc
add
xor
or
rolb
inc
adc
cmp
in
fsubl
pop
mov
push
fbld
xor
mov
dec
loope
lea
fnstcw
cvttps2pi
stc
adc
sbb
lods
into
push
movsb
hlt
enter
mulb
pop
sahf
mov
pop
xlat
dec
jmp
and
inc
insl
mov
or
cmp
cs
outsl
ljmp
push
mov
imul
jbe
inc
fmul
lods
adc
cmp
inc
mov
fcompl
pop
mov
aam
jp
into
jmp
sti
dec
dec
dec
outsb
in
cmp
fdivs
movsb
lcall
add
pusha
and
mov
fstps
dec
stos
jmp
sub
dec
fists
jne
add
je
mov
cwtl
xchg
inc
scas
pop
and
jae
test
xor
adc
pop
add
rorl
dec
pop
adc
notl
or
mov
adc
imul
fidivl
dec
add
mov
add
jl
jmp
rorl
jecxz
lds
mov
push
jb
dec
push
scas
mov
pop
or
ret
fstl
jb
jae
inc
or
add
das
in
shrl
test
out
cmpl
and
dec
and
dec
or
arpl
sbb
fsubr
xchg
mov
pop
shl
add
sub
imul
sub
dec
dec
push
mov
jns
pop
rolb
mov
sub
mov
mov
pushf
cmp
mov
ds
shlb
mov
lods
sub
inc
or
sbbb
jb
lds
push
imul
negb
out
pop
data16
xchg
je
push
cmp
ljmp
repz
adc
or
imul
sub
mov
jecxz
clc
inc
das
adc
mov
addr16
fisttps
ljmp
xchg
jle
std
adc
arpl
ja
inc
jo
push
sbb
push
shlb
clc
jns
orl
out
adc
imul
mov
lahf
mov
adc
inc
cmpl
fbld
xor
or
sub
jo
mov
cmp
repz
cwtl
movsb
pop
les
pop
outsb
lret
js
lods
sub
test
jbe
bound
jg
je
stos
add
pushl
jle
adc
lock
mov
jbe
push
ja
pop
mov
test
sahf
mov
sarb
or
out
fcom
xchg
sub
jbe
loop
sub
roll
and
pop
fmuls
adc
add
fcompl
jg
sbb
add
aam
insb
mov
add
pop
xchg
add
inc
das
test
test
add
sbb
dec
jno
dec
and
or
jb
xchg
int3
adc
push
call
flds
lds
icebp
lds
lods
mov
out
push
lahf
pop
lods
in
test
and
adc
jl
inc
loop
stc
out
or
adcb
je
jbe
popa
in
pushf
inc
pop
pusha
adc
push
sbb
lock
shll
test
imul
bound
dec
inc
xor
int3
mov
imul
pop
adc
push
pusha
int3
loop
inc
in
jnp
fnstenv
adc
inc
movsb
ret
inc
mov
fldl
rolb
add
jbe
ljmp
jp
adc
sbb
sub
sub
mov
out
sti
push
xor
push
sub
mov
add
shrl
cltd
orl
mov
repnz
add
sub
daa
sub
cmp
in
loop
adc
mov
xchg
hlt
or
adc
arpl
jg
adc
xor
mov
xlat
xchg
cmpsb
and
div
fcoms
push
and
push
cld
cmp
sbb
jae
mov
out
add
push
ret
xor
add
outsl
cmp
adc
fsubrs
lea
popa
push
test
sbbl
xor
mov
outsl
sub
imul
sub
xchg
inc
jg
pop
jo
sub
roll
stc
adc
es
addb
sub
jge
and
inc
sbb
sbb
push
sub
xor
push
sbb
scas
cli
mov
dec
lcall
xchg
push
mov
mov
bound
mov
sub
mov
aad
fldl
insl
adc
lock
or
outsl
loope
addr16
add
xor
data16
packsswb
sti
mov
push
in
repnz
or
dec
lds
rcl
scas
call
cmp
pushf
cmp
adc
jge
mov
inc
stos
lret
pushf
idivl
push
or
pop
jl
sub
mov
pop
sub
cmc
adc
dec
ds
or
mov
es
sub
inc
testb
mov
jnp
stos
push
test
and
and
mov
int3
test
adc
dec
mov
out
repnz
cmpsl
xchg
xor
and
insl
and
cmpsb
xchg
dec
push
inc
int3
inc
xchg
and
adc
push
mov
inc
mov
loope
push
jle
nop
mov
pop
adc
gs
mov
inc
in
adc
mov
add
ljmp
outsl
jnp
loopne
pop
and
lea
sbbl
push
add
out
nop
sbbb
and
lret
push
xchg
sub
in
add
pop
inc
adc
and
fdivrp
jecxz
xchg
nop
mov
sub
mov
xchg
cmpsl
jmp
test
or
xchg
sub
and
divb
movaps
inc
es
cmp
in
mov
add
ja
sub
sub
clc
add
mulb
rcll
sarb
mov
ret
push
or
adc
xchg
mov
push
lds
in
aaa
lahf
das
add
lock
leave
lods
andb
jge
mov
xor
stos
aad
lahf
fistps
add
addr16
adc
test
lret
decb
add
or
mov
adc
jmp
xor
out
push
mov
or
sub
pop
pop
adc
jge,pt
ss
pop
lahf
jne
mov
add
inc
cmpsb
adc
push
or
cmp
dec
cmpsl
pmaxub
push
cli
xor
xor
loop
sarl
push
cmpsl
sub
pop
lock
arpl
imul
sbb
out
test
faddl
mov
adc
leave
ret
test
out
enter
shr
xchg
les
xor
loopne
inc
fsubrs
fists
push
sbb
sub
xchg
inc
lret
shrb
mov
ds
cmp
mov
push
sbb
loop
adc
movsl
jnp
pop
test
in
sti
andb
loopne
inc
clc
push
sub
xchg
inc
repnz
pop
sub
sahf
stos
fisubrl
std
lds
inc
pushf
cmp
js
xchg
mov
jae
pop
sbb
jecxz
adc
repnz
into
xchg
sbb
mov
aaa
in
mov
sti
sub
and
rcll
push
repz
mov
mov
jecxz
lds
inc
adc
dec
mov
cwtl
add
ret
dec
sbb
mov
mov
cmpsl
arpl
xor
dec
mov
fsts
push
fstpt
fcoms
mov
dec
test
dec
mov
js,pn
in
jge
fs
pop
mov
push
sub
and
adc
adc
adc
and
or
test
add
jbe
outsl
adc
mov
push
adcb
sub
aad
loop
pushf
adc
cmp
sbb
test
jo
stos
mov
out
xchg
fs
jecxz
sbb
lcall
mov
or
xchg
out
shll
clc
in
mov
mov
xchg
test
inc
sub
and
sbb
mov
adc
into
adc
mov
mov
test
inc
push
test
lea
hlt
inc
adc
mov
mov
lcall
dec
xchg
adc
mov
stos
adc
cmp
mov
adc
mov
ss
mov
jmp
movsb
movsl
in
hlt
addr16
out
fnsave
lods
and
inc
inc
cmpsl
inc
test
insb
inc
aaa
jp
sahf
cs
je
test
and
mov
lahf
mov
repnz
test
add
xor
addb
pusha
jbe
int3
mov
les
movsb
ficoml
sbb
mov
adc
add
adc
inc
shlb
adc
jl
jbe
daa
pop
arpl
inc
add
jbe
xor
sub
mov
cli
gs
pop
out
push
cs
add
or
adc
add
pop
mov
dec
lret
push
sbb
xchg
xchg
scas
sub
mov
inc
hlt
mov
add
pop
push
ret
sub
test
xor
jecxz
pop
xchg
call
out
mov
fs
or
sub
dec
cmp
movsw
addr16
sti
push
jb
mov
sahf
sbb
pop
dec
adc
inc
test
mov
adc
lock
or
sarb
dec
adc
subb
inc
ret
inc
pop
jne
mov
and
pop
push
adc
fbld
mov
push
cmp
mov
int
mov
mov
push
xor
sub
ss
das
fidivrs
fabs
mov
insb
jmp
sub
jae
mov
mov
loope
mov
adc
insl
push
inc
mov
and
ficomps
adc
jno
xor
loopne
mov
xor
fstl
bound
icebp
adc
sub
movsl
clc
mov
push
xor
imul
cmp
lods
adc
pop
mov
xor
jmp
mov
jno
or
outsb
fistps
xor
lret
dec
test
jle,pt
sub
out
lcall
mov
push
call
jmp
adc
adc
push
or
inc
hlt
aam
mov
jae
fcmovnbe
notb
xlat
jne
and
adc
rcr
cmp
bound
sbb
mov
xchg
push
and
hlt
mov
loope
fldl2e
inc
insl
in
and
push
xchg
xchg
ds
push
pop
mov
jp
pop
dec
into
dec
adc
inc
or
scas
ss
call
lods
out
sbb
jl
jne,pn
movsb
insb
jo
xor
push
sub
push
sub
int3
add
popa
xchg
mov
cmpsb
dec
push
mov
pop
xlat
xchg
lock
xchg
lret
adc
or
dec
xchg
loop
sti
enter
mov
dec
mov
or
jno
sbb
pop
push
test
shr
mov
adc
jl
sbbl
iret
push
loop
sti
or
jecxz
repnz
loopne
add
push
adc
bound
int3
and
fldl
push
pop
push
daa
repnz
data16
scas
adc
cli
xor
enter
adc
mov
push
and
xchg
fimull
movsl
out
push
mov
test
adc
mov
push
adc
mov
les
adc
inc
or
out
aas
sub
mov
cmp
dec
add
push
stc
add
inc
mov
mov
push
je
stos
repz
dec
add
mov
mov
xlat
sti
call
adc
jp
cmc
loop
push
cmp
movsl
jns
jmp
sub
jne
push
push
add
xor
fcoms
addr16
sbb
and
inc
in
fs
jne
pop
add
test
test
xchg
insl
adc
sub
stos
and
sub
jl
adc
lock
loop
adc
push
in
adc
cld
out
sbb
lcall
movsl
data16
sbb
sbb
inc
jl
mov
mov
or
and
inc
clc
cld
fisubl
sarl
outsl
cmp
int
lcall
lds
mov
aad
add
sbb
push
js
adc
mov
scas
fidivrs
sub
aas
xlat
test
ficoml
fsubrs
and
mov
xchg
out
mov
xchg
test
ret
test
fistps
int
dec
in
mov
adc
xor
add
jmp
orl
push
mov
sarb
js
jecxz
push
std
cli
aad
mov
lret
xor
fwait
dec
mov
fstps
mov
jns
sbb
ljmp
cmp
js
jo
jecxz
mov
dec
and
xor
mov
jno
adc
int3
test
cmp
add
pushf
add
mov
je
xor
mov
cmpsl
adc
push
cmp
adc
dec
cwtl
sbb
pop
jo
sbb
in
add
adc
jmp
pop
mov
roll
jns
mov
test
cmpsl
aas
fldenv
sub
adcl
adc
frstor
pop
adc
cmpsb
incl
pop
mov
in
call
sarb
add
push
jb
push
test
clc
xchg
and
sub
mov
mov
or
sbb
jg
push
fsub
xor
test
dec
fists
mov
mov
enter
imul
decb
cli
out
sub
mov
jl
sbb
sub
mov
js
out
dec
sahf
dec
ss
inc
in
push
arpl
mov
adc
mov
and
cmp
mov
push
sbb
aam
and
jnp
sub
add
stos
adc
aam
ret
stos
orb
ljmp
add
push
out
aad
orl
xchg
loope
and
or
clc
jl
mov
addr16
mov
rorl
nop
fisttps
cmp
cmp
movhps
and
dec
and
xchg
jge
and
in
lds
repz
mov
lcall
adc
dec
out
sbb
adc
fdivrl
dec
adc
pop
adc
mov
pop
outsl
mov
cwtl
ja
push
lret
adc
cmp
bound
xor
fldl
pushf
or
pop
test
sub
in
jge
adc
or
inc
sbb
insl
stos
pop
cmpsl
mov
test
test
fldenv
popf
push
adc
pop
cmpsl
fistpl
scas
or
test
enter
push
fstpt
push
into
push
cmpl
test
mov
cld
notb
push
adc
jns
mov
adc
cmp
pop
lock
clc
mov
into
movsb
adc
in
adc
adc
jns
rcl
adc
ds
mov
dec
adc
sub
cmp
or
int
dec
and
lds
cltd
mov
jg
setno
out
rcll
fcomps
add
stc
sahf
push
cmp
imul
push
or
insb
xchg
add
xchg
cmpsl
icebp
lock
mov
ror
mov
mov
repz
adc
xchg
push
mov
adc
cmp
add
jno
and
push
inc
pop
fdivl
arpl
inc
push
insl
adc
into
out
adc
add
iret
test
pushl
xchg
mov
jbe
loope
out
pop
xchg
popa
adc
shlb
ss
mov
out
cltd
loope
adc
mov
sbb
xchg
adc
mov
insb
bound
mov
jmp
adc
xor
bnd
pop
adcl
xchg
xchg
or
data16
mov
les
xor
scas
sti
xchg
and
das
mov
adc
stc
int
push
pop
test
fnstcw
bound
push
mov
dec
xor
push
negb
cld
xor
and
xor
xchg
xchg
jo
sub
jb
test
daa
fisttpl
ret
sbb
jle
mov
and
cmp
dec
inc
mov
adc
sbb
hlt
insl
cwtl
xchg
test
mov
fstpl
adc
sub
aaa
adc
mov
jp
imul
mov
dec
je
xchg
in
pop
insl
pusha
adc
mull
and
xchg
call
in
insl
enter
xchg
scas
dec
mov
push
mov
les
dec
push
adc
cmp
jge
cs
xor
gs
cmp
adc
js
je
sbb
sub
test
xor
pop
nop
mov
enter
and
jo
xchg
sbb
arpl
insl
xchg
out
adc
call
cmp
pop
lahf
xchg
jle
ss
loopne
shl
das
popf
in
adc
loop
ret
xchg
adc
xchg
pop
js
adc
xchg
rorl
bound
xor
scas
and
cmp
cmp
data16
mov
mov
adc
cs
or
pushf
add
push
xchg
add
inc
out
es
xchg
jmp
mov
or
lock
cld
mov
fistpl
mov
sbb
in
adc
int
loope
adc
add
xor
jo
mov
or
in
or
fdivrl
adc
fdivrs
adc
cmp
mov
aas
sub
pusha
sub
stos
xchg
js
incb
testb
or
adc
push
aam
xchg
in
and
add
addr16
cmp
adc
mov
dec
mov
inc
xor
test
lds
xchg
or
inc
dec
js
pop
jmp
mov
adc
xchg
sbb
mov
and
mov
loop
mov
jbe
shl
out
nop
push
mov
notl
roll
loop
out
enter
or
test
lods
add
shrl
add
and
decb
js
and
pop
jl
add
sub
and
dec
clc
sub
adc
test
add
sar
sbb
adc
fwait
testl
cmp
and
jne
adc
rorb
lahf
pusha
add
out
xchg
jno
jl
xor
adc
and
xchg
icebp
pushf
push
hlt
adc
xor
push
movb
mov
and
daa
and
adc
jmp
mov
test
pop
out
push
push
aam
push
mov
cs
andb
adc
xchg
addr16
adc
add
outsl
dec
jge
adc
cmp
adc
mov
add
rorl
loop
and
xor
stc
sbb
lock
and
inc
fsubs
into
adc
xchg
jbe
fists
arpl
lret
fistl
xchg
stc
ds
mov
xor
je
pushf
dec
mov
xor
push
inc
lods
push
pop
jp
cmpsl
xchg
pop
adc
loope
jo
adc
mov
jecxz
adc
dec
mov
adc
inc
mov
mov
mov
test
mov
cli
addr16
mov
jecxz
add
and
adc
repz
inc
test
and
das
pop
mov
push
mov
cmp
and
ficoms
jns
out
add
mov
stc
mov
sub
stos
jbe
ljmp
cmpsb
sarl
and
adc
or
adc
stos
or
out
add
jecxz
mov
jg
lods
cmp
xor
scas
mov
xchg
mov
sbb
cld
lods
jge
push
ss
call
or
sbb
sbb
sbb
cmp
adc
sub
adc
enter
mov
cs
cli
adc
adc
cmpl
unpckhps
mov
inc
push
inc
cmp
sbb
testl
or
jns
jge
adc
or
pop
sbb
das
or
and
test
ljmp
mov
xor
call
mov
fimuls
push
call
pop
pushf
push
inc
and
shrl
adc
test
dec
fidivrs
mov
adc
xchg
les
and
mov
rclb
jno
cmp
dec
dec
adc
jnp
mull
jg
mov
add
pop
aas
mov
pop
stos
adc
scas
out
inc
xor
sub
and
adc
stos
jo
pusha
js
xor
jns
mov
js
adc
cmpsb
in
movsb
cmp
adc
rol
xchg
in
stc
sbb
jo
arpl
gs
xchg
out
test
jl
xchg
and
sti
cmp
test
or
and
orl
mov
or
lods
loopne
mov
mov
or
insb
adc
cmp
in
mov
and
aas
mov
out
cltd
add
xchg
sub
stc
js
incb
add
and
xchg
test
nop
sub
shlb
xchg
mov
pop
pop
cmp
movsl
mov
xor
shlb
mov
pop
daa
jbe
fmull
adc
in
stc
jns
mov
mov
iret
adc
pcmpeqd
pop
inc
sti
adc
in
pop
in
lahf
or
mov
xchg
pushf
jmp
and
and
fisubrl
gs
or
fcomip
pop
mov
jae
fisubrs
adc
and
sbb
in
push
fcomps
sub
mov
add
inc
or
xchg
ja
xor
movsl
sbb
test
imul
or
push
arpl
jno
push
mov
adc
cmovb
imul
sub
test
push
dec
out
dec
inc
sub
cmc
adc
pop
orl
xor
jl
inc
lahf
pop
scas
cmp
adc
pop
js
out
adc
and
outsl
jne
pop
rorl
gs
shlb
andb
pop
inc
sub
test
cmp
mov
mov
add
sbb
push
subb
add
jle
inc
adcb
mov
xchg
ret
mov
mov
adc
ss
push
lds
push
dec
in
cwtl
lods
pop
mov
test
out
add
sub
xchg
movsb
mov
cli
cmp
je
sbb
pop
cwtl
or
pop
movsb
push
aad
pop
jo
shrb
pop
xor
rol
xor
push
popa
mov
mov
fisttps
hlt
les
call
aaa
shlb
push
and
xor
pop
vpminsw
das
mov
icebp
and
lds
test
insl
xchg
sbb
sbb
jg
jge
add
jle
or
cmp
mov
sub
cmpsb
scas
testl
fstps
adc
pusha
mov
imul
dec
mov
mov
sub
jnp
adc
jg
lahf
jge
loopew
orl
inc
sub
jno
xor
adc
lret
mov
dec
ljmp
hlt
mov
cld
push
sbb
test
adc
sub
jnp
adc
mov
test
and
cmp
inc
adc
jbe
fsts
jns
scas
mov
xchg
cmp
adc
mov
adc
ljmp
aas
push
and
pop
cmpsl
mov
mov
ret
sub
pop
adc
inc
push
arpl
mov
nop
and
dec
mov
int3
xor
jl,pn
jnp
outsb
jo
lds
jg
sub
or
mov
sbb
and
pop
or
pop
cltd
test
mov
mov
repnz
inc
rclb
sub
sahf
pop
mov
insb
adc
cmpb
inc
xor
sub
jno
ss
sbb
in
adc
cli
xor
lds
mov
xor
icebp
adc
cmp
jmp
fldcw
jnp
jbe
adc
mov
mov
adc
lea
push
or
call
jae
insb
cmpsb
inc
test
dec
mov
and
out
lret
out
cld
sub
xchg
mov
sub
repnz
sub
popa
and
cmpsl
pop
dec
add
test
rorb
pushf
xchg
mov
inc
sbb
popf
xchg
mov
ds
out
adc
lahf
mov
or
jecxz
mov
sarl
pushf
cld
test
sbb
mov
mov
cmp
clts
and
pop
mov
adc
xchg
in
nop
out
adc
mov
or
xchg
add
subb
pop
out
lds
sarb
test
gs
sub
add
xor
sar
mov
pushf
jne
gs
shlb
jbe
stos
mov
jne
mov
les
mov
fldenv
adc
repz
into
popf
and
jp
loopne
cs
pop
adc
push
cmp
ret
cwtl
jg
scas
mov
sbb
aam
nop
jmp
jne
pop
inc
and
adc
sbb
bound
inc
xlat
xor
negb
rcrl
mov
bound
jne
stc
jae
sbb
ss
pusha
mov
fisubrs
loop
xchg
cli
adc
jbe
sbb
adc
je
mov
push
leave
jae
int
cmp
flds
adc
dec
xchg
adc
xor
xchg
push
subl
in
in
sbb
xchg
call
test
dec
pop
and
adc
frstor
vmread
out
and
adc
jmp
and
pop
fwait
inc
push
and
adc
cli
repz
sub
out
adc
cmpsb
push
xor
and
in
dec
push
mov
aam
adc
inc
adc
in
daa
js
adc
jns
or
inc
orb
pop
xchg
fcoml
adc
xor
in
loope
scas
add
adc
cs
pop
cld
repz
adc
roll
iret
adc
dec
repnz
mov
imul
in
sub
sub
xor
adc
mov
pushf
jbe
repz
push
test
in
orb
cltd
ds
insb
inc
enter
js
and
addb
sub
mov
mov
test
adc
mov
jbe
and
xor
mov
cmpsl
jp
push
das
cmovb
push
inc
cs
xchg
dec
mov
cli
int
jle
mov
jmp
stos
pop
mov
adc
pop
js
pop
mov
enter
lods
test
cs
adc
fdivrp
out
mov
scas
repnz
cmp
fwait
inc
or
test
push
and
push
adc
mov
bound
hlt
mov
clc
adc
push
and
xor
stos
mov
mov
cmc
hlt
out
in
or
pop
or
shll
sub
fcompl
pusha
adc
inc
xchg
sti
and
notl
push
push
adc
lock
or
scas
loopne
sbb
xchg
push
push
cmp
cmp
test
push
xor
sub
lods
and
adc
jns
xor
movsl
inc
rclb
sbb
adc
pop
les
adc
shlb
out
push
and
cmpsb
daa
sub
repnz
ja
lret
xchg
adc
inc
dec
adc
and
inc
sub
data16
fmuls
and
call
sbb
sub
and
or
vsubss
adc
or
addb
sub
pop
test
aam
xorb
sbb
test
ret
adc
push
sub
incl
fcomps
out
data16
xchg
loopne
lea
or
push
mov
adc
mov
mov
mov
xor
test
adc
mov
movb
jg
xchg
sahf
or
dec
sub
dec
mov
xor
clc
pushf
jge
out
xchg
add
adc
or
push
movsl
adc
aad
fists
xchg
adc
shlb
loope
mov
and
imul
inc
push
test
pop
dec
xchg
jmp
and
mov
or
ret
ljmp
out
inc
lds
dec
mov
cli
xor
mov
loope
aaa
lds
push
cs
cmp
or
or
xchg
ret
adc
mov
sub
call
into
sub
xchg
and
push
and
movsb
add
push
repnz
loopne
sub
inc
pushf
sub
movsb
adc
stc
or
dec
ss
mov
and
push
stc
lods
and
xchg
cwtl
pop
in
mov
filds
sbb
orb
xor
hlt
das
arpl
adc
ds
push
pop
adc
leave
sbb
js
xor
sbb
add
add
sub
sub
sub
mov
out
dec
ret
loopne
and
mov
jns
jnp
jne
adc
fst
jmp
mov
test
std
ret
add
adc
les
xchg
adc
je
rorb
sub
nop
or
pushf
adc
dec
jb
mov
scas
inc
mov
adc
rclb
push
negb
adc
test
or
nop
pop
or
out
push
pop
stos
stc
out
int
adc
idivl
into
jne
insl
dec
fisubrl
aas
and
mov
insb
adc
xchg
fwait
scas
pop
adc
jmp
cli
out
jg
dec
adc
sbb
adc
movsl
les
fnstsw
inc
fidivrl
push
sub
mov
xchg
shll
push
loopne
mov
jbe
rcrb
mov
pop
sahf
pushf
push
sub
jbe
int3
add
xlat
adc
aaa
push
adc
cld
lea
enter
dec
loop
cmp
adc
clc
mov
add
push
cwtl
push
lods
pop
adc
cld
jl
popa
adc
jp
insl
fcmovnu
ds
test
pop
lds
add
shl
or
test
iret
sbb
aaa
fisubrs
xchg
ljmp
test
mov
addr16
sub
lds
sarb
mov
jle
mov
sub
adc
push
mov
jae
xlat
or
push
cmp
pop
and
ljmp
fisubrl
std
adc
bound
lahf
cmp
sub
and
loope
lock
adc
sub
cmpsb
mov
inc
mov
int
adc
dec
adc
pop
fistl
filds
das
push
lret
push
add
and
mov
xchg
adc
je
mov
gs
bound
lcall
mov
sbb
int3
sub
shll
lcall
cli
sub
mov
jo
pop
sbb
xchg
mov
sub
pop
icebp
jecxz
mov
mov
enter
stos
inc
cmpsl
ret
data16
sti
loope
hlt
mov
popa
adc
mov
addr16
pusha
aam
and
ljmp
int3
adc
add
lret
repz
fstl
dec
cmp
adc
inc
fs
in
mov
test
sbb
adc
push
cmp
adc
cltd
sub
jnp
stc
push
je
frstor
pop
dec
jl
mov
pop
adc
cmp
cli
adc
test
outsl
lcall
adc
add
sub
pop
mov
mov
adc
xorl
movsb
jmp
cmp
cmp
adc
pop
xor
lock
loopne
lret
jl
jbe
mov
arpl
test
push
sbb
rclb
aas
incb
pop
xor
sbb
add
mov
repnz
adc
mov
jne
lea
mov
inc
mov
inc
frstor
mov
and
loop
ds
mov
and
adc
stos
push
pop
jl
add
and
ss
dec
adc
das
data16
push
adc
push
or
add
add
sbb
push
data16
sub
mov
les
fldcw
jmp
and
out
and
rcrl
mov
push
sub
cmp
fcmovu
sub
jl
push
dec
js
push
pop
mov
and
sbb
add
pop
in
sub
ljmp
push
test
je
mov
xchg
aam
sub
lcall
adc
dec
cmpb
adc
outsl
fsubl
js
inc
sub
push
and
rorl
pop
lea
and
inc
pop
push
xchg
je
pop
lds
gs
mov
mov
jecxz
push
mov
bound
lcall
mov
pop
fs
xchg
bound
adc
in
sub
add
ret
cmp
jle
and
jns
inc
aaa
mov
inc
inc
xlat
pop
mov
jmp
and
jecxz
sub
xor
push
popf
adc
sbb
add
sub
mov
pop
adc
sub
push
and
outsb
icebp
cltd
arpl
adc
scas
adc
dec
adcl
jo
ljmp
push
adc
jg
lcall
ror
stc
in
sbbb
sbb
mov
adc
and
add
and
lock
lds
sbb
and
xchg
inc
rcrb
sub
cmp
adc
dec
test
xchg
jecxz
mov
rorl
notl
dec
shlb
adc
adc
mov
test
add
iret
fldcw
adc
cmp
add
imul
arpl
mov
inc
lock
pop
push
gs
cltd
xor
dec
mov
adc
adc
aam
adc
rclb
or
adc
stos
and
inc
nop
xor
in
ret
lock
lods
xchg
adc
mov
dec
outsl
or
aaa
fld
jns
push
sbb
adc
stc
push
xchg
push
imul
jae
mulb
pop
and
arpl
push
sub
in
popf
in
and
jbe
nop
push
cmp
fsts
stos
push
sbb
test
pop
cbtw
pusha
inc
xchg
scas
or
and
out
adc
insb
xor
int
sub
add
jl
mov
dec
adc
cmp
cwtl
pop
xchg
inc
push
and
adc
sbb
sbb
daa
pusha
outsl
adc
inc
loope
jge
mov
rorl
pop
and
adc
jb
outsb
pop
adc
lret
repz
andl
and
add
sub
ret
push
sti
cli
xlat
and
nop
fldl
flds
and
bound
test
pop
and
xchg
dec
xchg
mov
pop
mull
dec
lea
dec
jle
adc
sub
iret
stc
jbe
test
adc
lcall
push
push
xchg
jnp
insl
push
xchg
icebp
js
inc
and
data16
adc
sub
pop
adc
jo
push
adcb
repnz
test
pop
stc
jg
xchg
sub
adc
data16
mov
and
mov
lahf
pushf
ljmp
push
adc
mov
sbb
sub
xlat
jle
pop
pop
xchg
push
inc
scas
xor
shlb
jecxz
adc
mov
mov
gs
enter
js
or
outsb
test
cmpl
test
das
push
cmpsb
cmp
cmp
lahf
push
fwait
mov
jno
loop
sub
pop
sbb
imul
xor
insb
add
pop
imul
dec
rol
sbb
adc
mov
jns
hlt
lret
cmp
scas
adc
mov
adc
lret
and
in
scas
xlat
in
insb
jns,pn
cmp
sub
fisttpll
in
xchg
sub
jp
cs
and
dec
push
jnp
stos
inc
stos
aas
pushf
mov
pop
and
loopne
rorl
adcl
stc
dec
test
std
dec
test
mov
push
dec
pop
mov
ja
aaa
jne
push
and
cmp
adc
xchg
adc
pop
in
repnz
push
subl
fsubrp
jne
popa
add
cmp
cmc
jno
push
mov
stc
pop
jp,pn
or
gs
int
test
adc
and
cmp
lods
sub
xchg
sti
fiaddl
loop
inc
scas
adc
sub
mov
pop
xchg
cwtl
pop
or
pusha
pop
cltd
call
xchg
imul
push
cmc
add
sub
push
jecxz
adc
xor
xchg
bnd
mov
and
mov
or
pop
shll
mov
ljmp
addr16
jge
cmp
cltd
xchg
sbb
mov
mov
adc
xor
adc
dec
mov
mov
movsl
test
stc
sub
adc
lea
out
xchg
cmpsb
or
adc
adc
or
and
addr16
jnp
pusha
mov
pop
inc
jns
push
adc
inc
std
bsr
push
sub
mov
fists
cs
mov
add
out
fists
arpl
adc
adc
or
mov
shl
je
fidivl
adc
jg
adc
push
sbb
test
loop
data16
adc
daa
mov
fstpt
lret
sub
mov
pop
add
and
rcrb
xchg
mov
sbb
outsb
adc
dec
ror
adc
dec
loopne
int
sbb
xor
push
insb
imul
sti
cmp
pop
pop
test
aad
sbb
repz
and
mul
adc
imul
push
cli
xor
or
adc
add
jns
test
pop
xchg
or
xor
mov
mov
adc
dec
in
flds
adc
ret
xchg
mov
shlb
push
lea
jp
adc
push
cltd
test
sub
or
push
mov
cmpsb
test
lcall
adc
xor
test
inc
icebp
adc
loope
pop
insb
adc
jecxz
out
iret
adc
lea
adc
lock
scas
adc
iret
pop
and
icebp
sbb
rolb
adc
mov
dec
mov
lods
das
push
pop
cmpsb
xor
test
mov
cmpsl
ds
xor
sub
cmc
clc
push
adc
pop
out
add
or
jmp
cmpsb
ds
cmc
jbe
adc
xor
xchg
and
mov
dec
push
adc
stos
pop
push
sub
loop
loopne
jae
or
lea
cmc
adc
das
bound
rcr
mov
jne
and
jmp
cld
fwait
test
dec
sub
sbbl
fcompl
adc
add
push
dec
add
adc
jbe
adc
fs
incb
inc
pop
or
js
repnz
pop
rcrl
les
jb
sub
adc
jmp
orb
xor
cmc
into
mov
ss
jno
adc
dec
fs
adc
test
xor
icebp
cmp
push
notl
scas
pushf
popf
aam
inc
movsb
lahf
fldenv
int
add
push
push
mov
adc
xlat
stos
aad
adc
in
std
pop
scas
jb
lret
adcl
push
pop
shlb
xor
roll
js
cmp
test
add
xor
jb
add
pop
sub
adc
popf
inc
push
test
sahf
cmp
out
cli
js
jg
adc
xor
jb
inc
lahf
stc
mov
jne
adc
rcrl
xchg
test
mov
add
adc
test
pop
shr
xchg
sahf
pop
cli
movsb
mov
xor
dec
adc
jns
cmpsb
push
add
pop
adc
jbe
mov
adc
lahf
roll
adc
inc
into
lea
jmp
jp
push
push
mov
dec
mov
outsb
sub
xorb
clc
cmc
jecxz,pn
xchg
and
adc
sahf
fidivs
lods
bound
jno
and
inc
lds
add
cmp
push
mov
adc
inc
repnz
mov
pop
insb
lret
push
popf
fidivrl
and
sub
pop
sub
loop
loopne
lea
mov
sbb
cli
out
mov
fcoml
fnstsw
int3
jbe
add
imul
dec
repz
rcrb
das
fsubrs
rcll
enter
js
xor
pop
dec
lds
scas
mov
out
adc
push
call
mov
ds
adc
cwtl
fdivrl
push
pop
xchg
pop
std
in
dec
int3
adc
mov
jp
popf
nop
lea
in
adc
sub
sbb
dec
out
pop
xor
push
in
fcoms
pusha
shlb
add
pop
imul
cs
add
mov
pushf
adc
xchg
push
mov
and
xor
xchg
inc
es
and
repz
test
push
xlat
mov
adc
lret
pop
adc
in
mov
adc
sbb
sub
out
add
ret
push
adc
push
int
dec
in
inc
jne
das
mov
movsb
testb
adc
mov
adc
shrb
lods
jecxz
mov
xchg
xor
inc
lcall
push
fisubrl
fsts
movsl
out
shll
addl
scas
add
insb
adc
imul
imul
jl
adc
xchg
movsl
jle
adc
inc
clc
mov
mov
mov
or
fnstcw
jbe
popa
inc
cltd
adc
adc
test
sbb
adc
dec
int
mov
aas
xor
dec
pop
repz
adc
fistpl
adcb
push
test
cmp
or
mov
xchg
xor
cmp
sub
mov
ret
push
add
sbb
lods
pop
inc
adc
inc
mov
mov
out
lret
cmp
pusha
imul
cmp
addr16
addl
or
push
dec
adc
adcb
adc
cld
mov
cmc
xchg
lea
adc
or
repz
sahf
pushf
fsts
lods
cmpsl
dec
xchg
or
ds
push
jnp
lds
cmp
sub
adc
add
adc
push
insl
and
mov
stc
adc
mov
into
fisubs
mov
mov
fs
push
adc
sbb
jnp
push
faddp
or
loopne
jno
inc
pushf
lret
push
push
aas
shlb
adc
adc
adc
dec
inc
mov
inc
repnz
loop
fcoml
unpckhpd
mov
test
jne
sbb
xchg
sub
mov
cmp
cli
pop
and
push
push
xorb
scas
xor
popf
adc
inc
xchg
daa
push
and
mov
jg
cmp
maxps
add
stos
stos
jecxz
mov
and
and
jo
lds
test
sub
ffreep
addl
jbe
lcall
hlt
loopne
das
imul
adc
mov
out
jae
movsb
shrb
dec
cmp
js
sub
in
sub
jo
adc
fwait
pop
mov
lock
or
scas
adc
fiaddl
mov
xor
and
dec
loope
in
adc
cmpsb
cmp
lods
jecxz
push
or
jns
lds
and
sar
adc
popa
dec
ret
mov
adc
cmp
outsb
nop
sub
popa
push
icebp
adc
adc
or
mov
mov
add
adc
int3
inc
or
aad
rorb
sub
push
push
pusha
js
aaa
sbb
jle
lock
adc
rorb
aaa
sahf
and
push
arpl
loopne
and
pop
aad
adc
jno
stc
test
sbb
cmpb
inc
push
in
mov
inc
mov
pusha
and
out
adc
lods
js
out
adc
mov
cmp
mov
test
cmp
into
cld
and
dec
and
lods
xchg
or
mov
add
cmp
and
adc
cmp
das
sbb
dec
lret
and
sar
inc
adc
subb
mov
outsl
mov
out
xor
push
out
add
push
adc
dec
lock
dec
out
outsb
and
mov
bound
sub
or
inc
stos
imul
fstl
insb
dec
cmp
sub
sti
adc
rol
lret
popf
leave
das
xor
adc
jle
xchg
js
pop
pop
aam
xchg
jnp
popa
mov
dec
cmp
inc
sub
lret
adc
pop
cmpsl
cmp
inc
daa
fidivrl
or
push
jae
pop
fxch
and
fidivrs
mov
or
test
sub
or
jbe
std
jae
jmp
cmp
lock
cmp
adc
push
roll
xor
dec
repz
inc
arpl
xchg
ja
adc
push
push
sti
repnz
xlat
aas
test
sbb
into
mov
or
mov
pop
mov
and
rcr
xchg
das
aad
cmp
push
or
fs
lods
sub
jmp
dec
sbb
mov
mov
and
sub
mov
and
jecxz
ret
inc
mov
pop
rolb
lahf
pushf
cwtl
sti
jae
add
adc
push
adc
push
sub
sbb
sti
scas
sub
or
xor
inc
and
inc
in
jns
fcompl
pop
and
int
adc
mov
xchg
fs
fcoml
js
repz
mov
push
pop
adcb
loop
adc
iret
mov
adc
outsb
cmpsb
lret
adc
shl
adc
cmc
sahf
leave
sbb
ss
bound
mov
jne
loop
shrl
mov
std
jns
adc
jnp
movsb
xor
scas
repz
jg
adc
jp
and
data16
pusha
sub
jg
pop
ds
jle
sub
add
inc
or
mov
fidivl
scas
and
cmp
lds
cltd
and
mov
andl
js
adc
jnp
xor
jge
cmpsl
sub
mov
mov
adc
xchg
push
mov
or
mov
jns
xorb
lahf
mov
adc
ljmp
xchg
mov
and
mov
outsl
loopne
dec
mov
fiaddl
divl
adc
aas
push
pop
mov
add
xchg
adc
xor
cmpsl
and
test
in
adc
rolb
pop
push
pushaw
dec
test
aaa
sbb
nop
and
in
bound
xchg
xor
test
pop
pusha
mov
test
adc
cmp
enter
out
xchg
jecxz
add
push
js
sub
lock
scas
xchg
push
jnp
cmp
xor
adc
push
mov
adcb
gs
add
pop
lret
pop
add
pushf
mov
outsb
jb
or
adc
mov
dec
adc
xor
outsl
mov
push
xlat
cmp
adc
mov
pop
aas
loop
dec
in
xchg
add
adcb
push
adc
inc
sti
or
clc
ficoms
pop
lds
test
push
inc
mov
lcall
jae
or
addl
add
pop
jmp
out
in
dec
sbb
rclb
push
enter
call
cmp
popa
stos
push
pop
sbb
std
add
addr16
or
cmp
push
mov
sub
xchg
dec
orl
test
out
xchg
adc
bsf
test
or
add
push
mov
pop
pushf
lods
enter
dec
test
mov
xchg
adc
adc
andb
nop
enter
add
sbb
setle
in
inc
sarl
adc
dec
bound
stos
jns
les
loop
shll
dec
frstor
mov
push
jno
cmp
sbb
jp
rcl
mov
ds
imul
cs
adc
jbe
add
fisubl
xchg
mov
mov
pop
sub
repz
adc
in
ret
vrcpps
divl
mov
push
xor
fcmovb
lret
and
sbb
or
lds
cli
sti
pop
add
js
outsb
adc
pop
icebp
bound
movl
nop
dec
xchg
sub
adc
cmp
push
sbb
repnz
jnp
add
rcrl
rcll
loop
popf
es
pop
dec
adc
sub
add
or
push
jmp
and
adc
inc
adc
fidivs
shll
insl
lahf
inc
adc
fsubl
cli
adc
sub
mov
jecxz
xor
imul
lss
pop
xchg
xor
iret
add
add
and
lahf
and
mov
or
aam
cmp
jae
loopne
andl
inc
push
xor
pop
sub
xor
mov
aam
pop
imul
imul
or
int
push
pop
mov
xor
adc
inc
or
or
cs
sbb
dec
stc
orl
cmp
notb
or
mov
adc
cmc
add
sahf
mov
sub
pushf
mov
xchg
xchg
jb
adc
icebp
loop
out
pushw
adc
ss
xchg
aam
push
jecxz
adc
jle
push
push
add
adc
sar
pop
pushf
xchg
pop
add
out
inc
mov
adc
push
pop
sarb
cmpsl
lret
loope
jmp
je
inc
adc
xor
sub
and
add
and
sub
cmp
test
push
adc
test
mov
add
imul
shll
push
imulb
dec
fldt
mov
or
mov
je
xor
lahf
cmp
test
and
outsl
add
and
adc
imul
scas
out
push
add
sub
mov
jge
out
aam
push
into
mov
adc
dec
inc
xchg
xor
xchg
clc
sti
jbe
test
out
inc
fs
or
mov
mov
xor
arpl
xor
and
fdivrl
mov
nop
jne
and
int3
push
movsb
inc
adc
ja
sarb
lret
mov
cmpsl
out
scas
sahf
movsb
or
repnz
mov
xchg
adc
mov
jo
adc
sahf
xlat
xor
in
shrl
mov
mov
sbb
ret
add
pop
ja
xlat
push
clc
lahf
adc
divb
adc
fdivs
jo
arpl
sbb
cli
into
mov
jmp
mov
sbb
insb
mov
xchg
add
add
sub
sub
adc
mov
xor
fwait
and
cmpsb
adc
and
mov
adc
aaa
fstpl
adc
stc
xor
push
pusha
fsubr
or
fisubs
clc
in
cmpb
test
movsl
in
pop
sbb
or
mov
dec
cs
sub
sbb
push
adc
mov
mov
mov
push
ss
in
rclb
jo
and
mov
adc
clc
in
cwtl
adc
mov
inc
xor
push
ss
push
push
popf
shrl
lods
xchg
les
insl
lods
mov
test
cltd
xchg
dec
jg
mov
int3
loopne
inc
adc
lcall
lcall
push
vpmacssww
sahf
dec
jge
pop
push
adc
push
xor
dec
push
daa
mov
or
test
mov
and
popf
pop
pop
std
out
int
rcrl
adc
push
pop
and
cltd
leave
fstpt
inc
in
adc
jp
fstpl
pop
mov
or
jg
out
mov
and
mov
dec
push
jecxz
jae
or
xchg
cs
mov
lcall
in
je
jnp
add
jge
loopne
mov
int3
and
subl
inc
out
push
push
aad
mov
out
push
inc
je
and
mov
movsb
test
cmp
out
lret
lahf
adc
xor
jnp
or
lea
mov
inc
push
imul
mov
adc
mov
inc
jne
das
mov
sahf
push
and
lds
sub
inc
mov
scas
outsb
bswap
sahf
out
adc
add
pop
test
xchg
adc
into
dec
outsb
movsb
clc
enter
cmc
mov
cmp
and
test
push
or
xlat
adc
jle
js
adc
adcb
xor
fstpl
mov
popa
decl
scas
adc
mov
xor
repz
icebp
mov
ret
dec
and
repnz
adc
push
cltd
enter
lods
dec
mov
ss
cs
and
inc
push
dec
nop
lds
mov
mov
pop
lcall
stos
cmp
cmp
inc
and
ja
jle
xchg
mov
dec
dec
and
out
sbb
sub
imulb
cmpsb
ret
sub
das
pop
adc
push
mov
jne
out
mov
mov
adc
loop
cmpsb
in
cltd
push
sbb
sbb
push
cli
mov
adc
mov
adc
adc
jp
sar
adc
loop
push
adc
sti
lcall
cmp
jecxz,pn
mov
mov
dec
xor
push
adc
nop
mov
addl
or
sbb
jmp
cmpsb
call
nop
je
adc
add
inc
lock
mov
popa
int3
adc
cwtl
or
inc
mov
unpckhps
mov
cld
cli
adc
sbb
xor
sti
or
push
mov
cld
fidivs
cmp
cmp
aad
mov
sub
adc
cmp
cltd
sbb
push
xor
push
stos
dec
sahf
test
mov
and
adc
jge
roll
adc
sarb
minps
pushf
jae
add
inc
movsl
adc
push
lea
mov
push
iret
out
push
sub
dec
push
cmp
sub
aaa
push
adc
mov
sbb
sbb
sbbl
add
dec
xchg
push
push
sbb
add
ds
adc
pop
sbb
add
pop
add
xchg
push
mov
into
or
sub
xor
adc
in
lds
jge
push
scas
iret
test
adc
cmc
mov
cs
pop
out
adc
add
cwtl
jbe
roll
inc
nop
es
mov
lret
andl
cmp
pop
das
ja
out
push
fsubrl
je
xchg
or
movsb
icebp
rclb
jns
loop
and
sti
jecxz
sub
sbb
xchg
fstpl
mov
adc
insb
shll
int
dec
mov
pushf
pop
and
adc
sbb
cmp
test
out
ret
cmpsl
xlat
lods
sub
pushf
adc
push
inc
jb
adc
jno
subb
fidivl
sub
inc
lcall
jno
test
sub
out
pop
adc
lret
aaa
adc
jl
pop
scas
mov
mov
loope
ret
cmp
ja
and
add
in
out
daa
adc
adc
mov
fistl
loope
pop
sub
test
dec
mov
cmp
les
jb
sbb
js
adc
push
mov
adc
int3
cmpsl
orl
push
fisubrl
adc
out
pushf
mov
subl
out
sub
gs
fistl
nop
cmpsl
gs
or
fs
iret
adc
insl
push
jno
adc
lahf
ror
adc
shll
imul
ljmp
repnz
and
test
inc
mov
cld
bound
fucomi
es
rorb
int
sub
fimuls
jmp
cli
xor
loope
and
aas
mov
and
xchg
into
icebp
xor
rcrb
out
mov
dec
sub
lahf
lds
gs
push
add
dec
pop
loope
in
or
dec
pop
add
jae
icebp
adc
or
leave
xor
mov
imul
inc
adc
lcall
cmp
mov
mov
bound
or
push
cmp
xor
in
sub
and
pop
jne
jne
out
sub
xor
lds
pop
and
push
adc
cmc
cwtl
mov
ja
imul
or
es
mov
filds
mov
pusha
pop
rcll
sub
xchg
inc
movsl
sub
iret
cwtl
and
sub
out
test
xor
push
frstor
xchg
ret
into
test
or
cwtl
add
adc
and
jmp
mov
aaa
cmp
push
inc
out
and
mov
mov
add
xchg
xchg
inc
push
push
xor
xlat
pusha
and
aad
xor
push
and
insb
push
jmp
loope
test
mov
addl
mov
js
mull
pop
leave
add
push
test
movsl
jmpw
aad
xorb
push
mov
int3
push
sub
add
ds
aad
adc
imul
xchg
icebp
in
inc
stos
aad
push
push
cmp
stos
xor
sub
xchg
adc
push
cmpsb
out
lea
loop
loop
mov
adc
lds
in
sbb
aad
xor
fwait
es
adc
mov
daa
cmp
aaa
fsubrl
gs
hlt
sbb
lods
push
fcomi
jb
cltd
push
adc
and
cli
daa
fld1
ss
icebp
es
pop
aad
into
repz
test
sub
push
ss
stc
and
cmp
cltd
in
push
dec
xor
cmpsl
ljmp
es
es
pop
mov
sbb
mov
push
pop
insb
xlat
pop
out
push
push
ret
outsl
xor
push
fwait
shl
aad
xor
lret
add
pop
mov
sub
aaa
sbb
inc
ds
and
pop
out
cmp
cmp
addr16
mov
fnstsw
sti
fnstsw
mov
and
xchg
xor
push
pusha
insl
cmp
pop
enter
imul
xchg
push
fcoms
push
imul
popf
lods
repz
sub
cmp
shll
sub
mov
cmp
icebp
pushf
or
adc
filds
xchg
test
push
xor
mov
xor
popa
adc
shll
add
pushf
add
lods
loope
adc
aad
test
cmpb
idivl
mov
mov
cmp
in
mov
inc
test
xchg
cmc
and
sbb
mov
push
xchg
xchg
lods
inc
ds
xchg
adc
or
cld
lret
in
add
cmc
lahf
mov
jge
xchg
lods
fwait
jne
cltd
cmp
insl
mov
in
and
cli
mov
mov
roll
mov
mov
dec
int3
cmp
aaa
daa
mov
pushf
fwait
clc
test
sub
inc
xchg
cmp
aad
in
push
push
insl
push
mov
test
push
repz
inc
pushf
mov
push
ss
xchg
es
pusha
notb
push
add
xorl
xchg
scas
stc
mov
movsl
lods
mov
sub
mov
pop
lds
mov
nop
out
pop
pushf
in
movsb
fiaddl
lock
dec
cmp
cmpb
cmp
push
es
cmc
adc
cmp
enter
aas
xchg
leave
xor
out
lret
xlat
fmul
int3
int
dec
notb
and
xchg
call
test
dec
fldl2t
xor
mov
mov
fucomi
sti
mov
in
cld
ja
jmp
arpl
into
fiadds
js
iret
filds
sbb
rcl
arpl
loope
roll
fabs
ret
arpl
shll
sarl
test
ja
call
adc
jle
mov
mov
out
test
daa
es
xchg
cmc
adc
cmp
aaa
sub
inc
adc
push
lret
xchg
xor
out
xlat
push
call
int
jb
mov
mov
lods
hlt
sbb
push
push
ret
in
cmp
jo
mov
lahf
push
mov
jge
imul
stos
ret
sbb
arpl
mov
adc
mov
cmp
adc
add
adc
lods
inc
xor
push
adc
jns
jl
adc
xchg
pop
lods
outsb
adc
daa
in
stos
adc
loop
mov
adc
add
paddsb
mov
aam
sahf
sbb
pop
and
loop
aaa
push
into
xlat
and
movsb
lret
lcall
push
mov
jp
adc
jmp
push
inc
add
cmp
rcll
scas
dec
jecxz
and
outsl
int3
pop
fs
fmul
dec
xchg
shlb
sbb
and
bound
sarl
add
stos
push
das
pop
movsb
sbb
jnp
xchg
jmp
pushw
std
pop
sbb
inc
mov
pop
xchg
lret
fwait
test
arpl
dec
dec
push
sbb
and
xlat
pop
aaa
adc
cmp
ret
sbb
add
mov
icebp
je
or
mov
mov
bound
fsts
test
adc
push
xlat
mov
es
adc
je
clc
inc
adc
push
mov
mov
and
pop
cmp
daa
mov
nop
and
pop
jecxz
cltd
adc
adc
adc
jb
sub
xchg
ljmp
dec
lcall
push
daa
test
adc
fsubrs
lock
out
adc
stos
cmpsl
dec
xchg
cwtl
jmp
push
flds
sub
lret
pop
daa
pusha
adc
mov
movsl
rcll
push
shr
lds
sahf
in
sbb
pop
in
or
in
ja
test
xchg
and
adcl
test
loop
xchg
sub
std
outsl
jae
test
mov
cmc
inc
sub
cmc
adc
mov
push
sub
shlb
lock
mov
rorb
or
xorl
adc
movsb
mov
imull
push
out
stos
popa
lret
pop
push
enter
lds
jae
xlat
nop
pop
jne
xor
insl
or
out
xorl
xchg
pop
mov
pop
daa
rcll
xor
and
mov
lret
in
cmp
pusha
mov
outsb
lods
adc
clc
test
ss
fwait
pop
aad
xor
push
jne
xchg
lcall
mov
movsl
icebp
lahf
shl
jno
in
test
les
gs
lods
sbb
in
mov
outsl
pop
push
punpckhdq
inc
xchg
push
ja
xchg
cmc
xchg
and
xchg
idivb
or
ret
sub
pushf
test
pop
pusha
int3
enter
or
mov
movsl
lret
dec
or
xor
test
sub
loopne
xchg
add
shll
in
cmp
sbb
fstps
insl
mov
mov
cmc
lds
int
mov
in
xchg
icebp
mov
repz
or
inc
and
and
xor
popf
inc
cmp
sbb
movsb
push
outsl
test
lds
push
call
sbb
fxch
pop
and
ret
lods
mov
mov
pop
enter
andb
push
jnp
xchg
push
dec
fildll
push
jmp
jnp
pop
push
add
in
pushf
nop
lock
fbld
ljmp
and
movsl
roll
fs
pop
sub
inc
pop
sbb
test
add
movsb
xor
mov
pusha
xor
iret
pop
sub
xor
popa
xchg
clc
pop
push
jne
or
dec
int
int3
out
pop
xchg
cmpsl
dec
shl
dec
push
leave
lahf
test
push
inc
pushf
mov
add
push
loope
lds
rcrb
xor
mov
jno
pop
cltd
cmp
movsl
les
out
or
or
cltd
mov
xchg
lahf
movsb
ljmp
xchg
aad
push
xchg
outsl
lahf
mov
lcall
pop
adc
in
out
stos
data16
pop
jne
ss
pushf
ja
cmpsl
mov
aad
cmpsl
loope
cwtl
lods
mov
out
loop,pn
movsl
mov
mov
sbb
iret
push
call
scas
aas
lds
test
inc
lret
sti
aad
inc
mov
push
lret
shll
rcll
push
add
mov
sbb
push
sub
dec
loopne
clc
and
sub
movsl
jecxz
and
out
movsl
lods
sub
xchg
and
inc
mov
pusha
stc
push
pop
dec
mov
test
test
leave
je
movsl
cs
outsl
cs
test
pop
pop
or
test
ficoml
aas
stos
and
pop
xlat
push
insb
mov
mov
push
xlat
cmc
sbb
sub
aaa
sub
xchg
pop
sub
cmpsb
mov
lret
mov
push
xchg
mov
cmp
pop
sbb
mov
sbb
jecxz
outsb
push
in
push
xchg
mov
sub
outsl
sbb
cmpsl
test
and
stos
xchg
sbb
in
inc
adcl
mov
imul
lods
sub
outsb
mov
push
mov
and
stc
dec
sub
and
xchg
sub
aas
aas
xlat
pop
dec
gs
pusha
and
dec
out
sub
and
sub
add
mov
ss
or
cmpsl
imul
mov
and
les
sub
pop
sub
loope
loope
push
ret
and
mov
jae
in
call
push
cs
xor
enter
add
imul
mov
imul
stos
cmc
mov
mov
mov
jge
pop
mov
jmp
jmp
lret
call
idiv
push
cs
fcmove
pop
push
std
inc
ss
rcll
or
cmpsb
sbb
imul
mov
add
pushf
je
cmc
mov
adc
push
xchg
xlat
push
aad
pop
push
xlat
mov
cmpsl
xchg
lret
xor
sar
push
cmc
in
inc
inc
xor
in
sti
clc
mov
in
jp
test
jl
out
test
xchg
inc
cmpsl
lds
cmp
cwtl
leave
inc
in
test
imull
stos
ljmp
push
cmpsb
mov
daa
test
gs
sub
adc
in
daa
push
or
cld
cmp
enter
call
popa
xchg
lahf
imul
mov
in
mov
shlb
aaa
aaa
shrb
aas
imul
push
dec
aad
jb
or
xor
aad
aaa
cwtl
imul
insb
les
je
mov
mov
pop
es
cld
dec
xchg
imull
cld
dec
cld
ss
jmp
lret
mov
addr16
pop
lods
out
jle
aad
adc
imul
mov
aam
sbb
inc
dec
negb
aaa
fldcw
ds
push
and
outsl
ss
rorb
xchg
push
inc
adc
jg
mov
ljmp
push
push
xlat
jne
mov
decl
es
pop
test
lret
push
push
in
push
mov
cmc
sub
cmpsl
fs
jne
hlt
sbb
cmpsb
sbb
inc
stos
cld
mov
inc
aaa
gs
arpl
les
adcb
cmp
add
cmpsb
ss
jmp
push
pop
stos
xor
inc
into
inc
push
gs
cmc
es
inc
mov
movsl
ss
lret
lock
imul
push
sahf
ljmp
lods
mov
iret
push
adc
scas
movsl
xchg
push
les
xchg
aas
es
stos
insl
push
pop
add
movsl
imul
lock
imul
aad
loop
test
ljmp
nop
pop
ret
imul
imul
call
mov
mov
push
push
xchg
gs
push
xchg
adc
xchg
daa
push
lret
inc
dec
hlt
xchg
arpl
test
arpl
pop
sbbb
xchg
dec
push
jmp
ja
aad
lret
inc
call
lods
xchg
inc
fistps
fdivrs
sub
das
sub
inc
xchg
pop
and
sub
je
test
lea
push
call
xor
push
fs
dec
sub
sub
stos
xor
icebp
imul
movsl
inc
ja
push
jl
scas
inc
test
xchg
jp
add
cmp
aaa
cmp
aaa
or
cmpsb
out
xlat
jg
mov
sub
int3
sub
ljmp
cmc
pop
out
int3
ja
das
flds
jno
xchg
movsb
aam
gs
inc
pop
jae
call
xor
xor
add
lret
xchg
in
inc
fstl
ss
out
jb
call
ljmp
aam
lods
add
scas
sbb
aad
popa
in
mov
and
cmp
pop
outsl
push
cltd
xchg
cmpsl
idivb
pusha
xchg
jbe
and
rol
insl
push
shl
stos
mov
inc
lret
lods
jmp
pop
bound
push
loope
mov
aaa
jecxz
out
sub
xchg
fs
fld
aaa
imul
and
ja
pop
sub
and
push
out
or
cs
pop
mov
inc
push
stos
imul
pusha
sub
stos
lods
call
inc
mulb
xlat
stos
cmpsl
push
mov
jecxz
lcall
imul
and
push
and
cmpsl
jge
mulb
pusha
mov
leave
push
and
mov
aad
mov
stc
mov
cmp
aas
mulb
pusha
mov
leave
push
and
aad
in
fs
movsl
push
inc
cmpsb
jns
mov
ror
imul
lods
push
cld
lds
sub
add
stos
imul
pusha
cltd
jbe
xchg
daa
push
lret
mov
into
sbb
jmp
add
mov
inc
out
push
add
cmp
mov
cmc
fs
call
flds
gs
xorl
pop
pusha
and
aad
nop
scas
lahf
repz
or
dec
inc
or
aad
rclb
loopne
push
cli
lahf
jbe
mov
imul
push
lahf
aad
call
sbb
push
stos
pop
xchg
xchg
mov
pusha
inc
jmp
xchg
mov
sbb
mov
stos
and
sub
cwtl
sub
xchg
in
and
and
insb
idiv
lods
sub
out
sub
pop
imul
push
insb
xor
xchg
cs
lods
xchg
jne
loope
xchg
fs
push
arpl
xchg
enter
cs
sbb
push
push
aad
mov
xchg
stc
arpl
out
dec
in
push
or
push
push
or
loope
int3
pop
push
and
xor
sbb
fwait
push
xlat
fnstsw
pop
jae
fcoms
inc
jbe
orb
enter
fs
sahf
ror
or
lds
jge
out
or
adc
cmp
sub
ljmp
push
xor
mov
sub
stos
jno
xchg
outsb
lods
push
sub
mov
xor
push
mov
pop
push
xchg
mov
pop
icebp
jmp
dec
adc
push
ja
scas
stos
into
xchg
mov
gs
sahf
mov
popa
sbb
ret
std
jecxz
sub
insb
loopne
mull
scas
std
mov
sub
imul
lgdtl
jae
adc
popa
xchg
into
inc
or
inc
shll
fnstcw
mov
sbb
test
sub
dec
push
cmpsl
js
xchg
and
push
popa
ss
sub
jo
lods
sub
pop
jle
xchg
xchg
and
dec
pusha
pop
push
lret
in
popa
jmp
es
jb
pop
mov
imul
push
and
inc
pop
xlat
dec
xor
out
jae
call
in
mov
cmp
mov
add
adc
sub
shlb
aaa
pop
add
pop
push
mov
jne
xor
imul
out
out
out
and
pop
xlat
cmc
pop
xorl
dec
push
xor
jbe
aas
xrelease
xchg
arpl
cmp
out
out
repnz
lock
mov
fs
cmp
leave
das
in
xchg
jb
push
dec
and
in
pushf
mov
div
daa
xchg
imul
push
jmp
pop
push
outsb
lods
xchg
jmp
jmp
adc
movsl
inc
negl
xor
in
lea
xchg
mov
sub
xchg
mov
out
data16
hlt
mov
pop
inc
push
test
mov
jecxz
sub
shl
and
fdivp
xchg
iret
sub
gs
mov
pop
mov
cmp
call
es
cmc
inc
or
sub
imul
add
test
in
lret
test
es
xor
scas
mov
cmpsb
sub
imul
mov
test
xor
ret
enter
sub
das
out
mov
loopne
cwtl
push
mov
fcompp
mov
pusha
jmp
sub
push
sub
sub
and
lods
mov
loope
pusha
ret
data16
movsl
xor
push
xchg
ret
test
fldenv
movsb
sub
call
cmc
and
mov
jmp
add
std
loope
cwtl
jo
pop
test
daa
mov
push
mov
aad
push
popf
jmp
xchg
aaa
xor
xchg
sarb
mov
cmp
cmpsb
test
in
mov
fidivs
cmpsl
jnp
dec
xchg
cld
sub
and
ja
mov
in
test
add
sub
stos
ja
pop
sub
cmc
and
push
dec
lret
leave
insb
stc
push
pop
mov
inc
div
sub
stc
aad
call
mov
push
and
int3
or
add
test
mov
imul
mov
ds
pop
sbb
jge
mov
and
push
push
adc
sbb
cmp
mov
xlat
jb
inc
movsl
sbb
loope
sub
mov
push
shl
mov
cli
lret
in
sahf
push
xchg
es
add
gs
push
imul
scas
sub
pop
stos
pop
arpl
daa
imul
sbb
negb
rcrl
shr
add
push
cmp
mov
cmpsl
jge
rclb
lret
outsl
xor
imul
movsl
in
and
movsb
mov
xlat
add
pop
mov
inc
ret
add
add
lea
imul
xchg
fstpt
jbe
mov
sub
aas
inc
aaa
xchg
imul
daa
xor
ret
mov
into
xchg
mov
fdivrl
int3
sub
sbb
mov
xchg
stos
cs
das
jecxz
mov
push
ja
push
dec
mov
jmp
xchg
jle
dec
xchg
xchg
call
sub
mov
xchg
sti
or
pop
pop
sub
or
adc
pop
dec
jno
call
call
insb
pop
xor
leave
pmulhw
cli
jmp
jo
fildl
cmp
imul
dec
divb
int3
jns
jbe
out
cmp
test
jmp
lods
cmpsb
stos
inc
andl
in
adcb
dec
stos
jecxz
popa
psubb
xchg
sbb
or
andl
mov
inc
mov
push
or
push
mov
pusha
xchg
sub
dec
add
insb
xchg
jmp
movsl
test
inc
jbe
call
int
cwtl
shll
pop
cmp
loopne
fsts
pusha
xchg
mov
imul
mov
dec
push
xchg
xchg
shll
xor
inc
movsl
das
push
inc
jo
xlat
push
xchg
lds
push
xchg
fs
mov
push
sub
or
das
lods
pop
jmp
enter
loope
mov
in
mov
js
imul
mov
aaa
xor
mov
sbb
mov
sub
negl
push
jbe
dec
cmp
mov
push
sub
or
push
push
sub
iret
aas
loope
cmp
mov
addr16
fldcw
call
xchg
pushf
test
ja
out
push
test
mov
es
shll
idiv
fwait
jmp
cmpsb
inc
push
lods
aas
dec
imul
in
sti
cmp
enter
dec
jae
neg
mov
sub
cmpsb
stos
inc
mov
outsl
jmp
adcl
push
stos
imul
stos
ljmp
pop
mov
mov
mov
dec
push
jp
or
fimuls
test
repz
pop
sub
call
dec
into
stos
and
aaa
or
testb
pop
jmp
insb
out
fcoms
jmp
pop
fdivs
rcrb
add
scas
pop
and
add
daa
das
add
and
jp
fdivp
jle
inc
cwtl
out
es
sbb
ss
xor
movsl
cmp
sub
xlat
inc
xor
inc
pop
mov
cmp
aad
pop
jmp
sub
in
fwait
mov
cmp
mov
jns
jbe
pop
jg
ja
or
pop
xor
aad
or
dec
jns
mov
push
add
jle
ds
outsl
lods
mov
cltd
das
pop
iret
push
xchg
xor
hlt
xchg
stos
xchg
fdivrl
movsb
pop
ret
adc
mov
xor
mov
add
push
aaa
sarb
jbe
test
xchg
jmp
daa
js
sub
mov
movsl
lods
cmp
insb
push
cmp
adc
adc
sub
das
xchg
mov
pop
cwtl
divl
iret
cmp
xchg
popa
shlb
mov
mov
jno
inc
cmp
cmp
aad
jmp
outsl
fldcw
inc
imul
test
ret
xor
aad
ljmp
add
es
out
lock
aad
decl
jmp
cmpsl
int
jbe
jmp
adc
test
inc
xchg
fdivp
fdivrs
push
sub
and
mov
xchg
adc
dec
test
movsl
or
cmpsb
dec
sub
pop
or
cmp
fisttpl
test
push
sub
xor
mov
imul
stos
arpl
xchg
movsl
out
les
inc
mov
xlat
fdiv
push
lods
fmull
or
aas
jecxz
imull
inc
test
mov
insl
dec
stos
out
pop
mov
into
insb
sti
addr16
rorl
push
or
lods
push
test
and
cmc
ss
lods
push
es
adc
cwtl
data16
sub
cwtl
fsubs
jg
in
push
scas
mov
push
push
jp
pop
notl
push
mov
into
xchg
sub
inc
stos
mov
mov
loopne
adc
leave
xor
cmp
js
aaa
in
xlat
loopne
adc
divb
pop
loope
push
lret
push
mov
xorb
clc
inc
orb
xlat
notb
lods
in
stos
test
dec
out
in
stc
xlat
les
and
test
imul
popf
xchg
test
ud2
push
pop
out
in
aad
inc
jns
mov
idivb
es
cmpsl
pop
push
jne
in
ss
sbb
or
cltd
stos
in
jbe
mov
xor
scas
in
in
loopne
dec
out
mov
aad
push
arpl
scas
xlat
push
pop
ljmp
sub
stos
movhps
and
push
sahf
loopne
pop
es
adc
insl
mov
pusha
daa
inc
inc
push
sub
pusha
or
in
sub
sub
ss
xchg
js
sub
xchg
pusha
pop
mov
xchg
jge
sub
lahf
subl
xor
push
inc
jbe
cmc
mov
push
pop
jns
add
xchg
jmp
outsb
imul
sub
dec
cmp
and
sbb
jmp
test
pop
std
loope
push
lods
sub
lods
movl
in
sbb
sub
push
mov
push
mov
xchg
call
mov
in
pop
daa
jp
jp
xor
inc
arpl
sub
sbb
fldcw
stc
pop
and
int
movsl
adc
xchg
pop
in
pop
dec
scas
mov
pusha
fldcw
pop
ds
or
jno
imul
xor
inc
stos
cmpsb
aam
imulb
jmp
clc
sub
ficoms
or
sub
aas
jne
dec
mov
inc
ret
jbe
loop
mov
aad
jnp
push
push
add
xchg
push
movsl
jb
stos
add
loopne
mov
xchg
or
icebp
aad
pop
call
loope
jne
into
sarl
imul
cmp
mov
push
inc
push
arpl
sub
add
lret
xchg
xlat
arpl
outsb
bound
mov
out
sub
mov
sbb
popa
lret
nop
xchg
pop
cltd
xchg
sub
adcb
fs
jge
jg
aaa
push
sub
cmp
scas
pop
ret
int3
mov
in
jge
cmp
repnz
cmp
stc
pop
dec
arpl
ljmp
aad
jno
xchg
movsl
scas
pusha
outsb
jb
out
xlat
aam
enter
lock
cmp
jecxz
cmpsl
jbe
lcall
mov
xchg
stos
daa
cs
inc
jle
cmpsl
mov
adc
dec
lods
out
or
push
inc
cmc
inc
lret
xor
ds
out
push
push
pop
jne
leave
js
jp
in
push
jl
pushl
addr16
call
movb
xlat
cmp
mov
inc
xchg
add
mov
mov
lods
imul
ljmp
out
ret
out
test
popf
mov
aaa
xchg
sub
xchg
jbe
aaa
or
push
cmpsb
sti
lods
daa
out
enter
jbe
fists
add
sti
ja
in
inc
cs
aaa
xchg
xchg
cltd
lods
dec
inc
call
cmpsb
in
mov
xor
mov
mov
std
arpl
fcompl
mov
adcb
fstl
push
mov
dec
push
mov
ret
in
cmc
pop
sub
sub
pop
dec
mov
xor
mov
inc
sbb
mov
in
les
jns
pop
ja
gs
add
fists
outsl
push
dec
in
cmp
out
pop
add
jo
subl
mov
sub
dec
sbb
push
sbb
push
cmp
mov
enter
shlb
ret
outsb
movsb
in
mov
sub
xchg
leave
or
cltd
popa
aaa
dec
in
icebp
push
cmovo
xlat
ss
lcall
mov
int3
pop
mov
lret
inc
xchg
cmpb
jno
mov
dec
push
xlat
ds
xor
mov
popa
mov
je
stos
sti
ret
out
pop
sub
pop
push
scas
sbb
sbb
in
subl
gs
xor
mov
xor
sbb
in
jns
mov
sub
push
in
ja
inc
enter
clc
pop
mul
imul
inc
in
dec
sbb
mov
movsb
cmp
aad
jp
push
cmp
shrl
dec
mov
in
dec
outsl
push
mov
mov
and
out
in
loope
pop
ljmp
in
xlat
inc
adc
push
push
mov
out
ljmp
imul
dec
lret
sub
fdivr
es
jmp
pop
je
fidivrs
mov
sahf
xlat
orl
push
xchg
or
push
js
in
mov
out
hlt
jle
loope
test
cmpsl
push
and
jp
pop
dec
cmpsl
or
ljmp
jmp
test
js
push
cltd
rorl
out
dec
insb
push
loope
adc
pop
loope
ljmp
test
xchg
push
mov
sti
push
mov
aad
push
stos
pop
outsb
fiaddl
lcall
mov
or
push
or
in
jbe
das
mov
aam
movsb
ficoml
cs
ret
in
xchg
ret
lahf
enter
push
lret
out
cltd
mov
xchg
cli
pop
xchg
pop
sub
in
xchg
daa
mov
int3
and
push
fwait
xchg
add
out
sub
xor
sub
dec
mov
dec
dec
or
pop
jmp
mov
inc
out
arpl
pop
imul
xchg
push
fs
cwtl
std
in
inc
xchg
dec
cmp
push
adc
jmp
out
in
stos
clc
add
and
or
cmpb
xchg
xchg
pop
call
mov
mov
jl
int
sbb
bound
cmpsl
xchg
push
add
push
outsl
cmpsb
xor
mov
and
or
inc
and
aad
repnz
sbb
insl
jbe
scas
cmpsl
ret
scas
enter
test
iret
in
add
jmp
push
shlb
inc
lahf
push
dec
sub
aad
xchg
sub
jns
in
add
sub
adc
push
adc
push
ss
cmpsl
data16
ja
test
pop
rclb
cmp
jbe
das
call
movsl
xor
lcall
loopne
cs
inc
xchg
ljmp
scas
cmp
dec
dec
jg
mov
cmc
inc
dec
cs
mov
and
fists
idivl
xchg
push
mov
pop
paddq
or
sub
ret
or
ja
call
mov
xor
adc
outsb
scas
jecxz
adc
cwtl
jbe
jmp
dec
mov
call
out
mov
mov
jne
mov
enter
lods
mov
inc
fcomp
imul
dec
rcrl
xchg
shufps
stos
ss
dec
cli
xchg
mov
in
mov
call
push
or
mov
jbe
ret
xlat
or
ds
rorb
mov
inc
xchg
or
fdecstp
mov
jo
push
pop
in
and
adc
out
rcl
in
into
push
into
xor
cmc
xor
std
mov
xchg
push
ja
aaa
stos
xchg
aaa
jmp
daa
jne
dec
jb
dec
push
mov
into
ss
addr16
daa
fldpi
push
pop
loopne
insl
bound
inc
push
in
xchg
gs
dec
xor
jl,pt
pop
daa
sahf
addr16
sbb
lods
dec
mov
push
lods
cmp
mov
xchg
push
int3
dec
div
sbb
mov
pop
in
push
mov
stc
sub
xchg
push
daa
push
mov
pop
pusha
outsl
adc
nop
mov
adc
mov
je
outsl
mov
cmc
or
aaa
in
inc
sub
cmp
or
outsb
dec
cmp
enter
mov
aad
mov
sub
cli
cmp
ret
scas
popf
mov
sub
mov
cs
add
cli
clc
jbe
int
lea
jbe
fidivrs
xor
outsb
xchg
push
mov
stos
mov
gs
fdivrs
aad
pop
xlat
insl
jo
pop
sahf
cmp
hlt
aaa
scas
testb
shlb
mov
inc
fwait
push
sub
xor
ds
es
lods
aas
andl
sti
mov
ret
sub
ret
insb
mov
xlat
out
mov
into
fxch
dec
test
sub
mov
pushf
mov
pusha
mov
sub
test
gs
shlb
sbbl
fnstenv
out
ss
out
jns
cld
movsl
xchg
mov
jns
mov
fs
pusha
sub
push
repz
pop
inc
pop
in
fwait
or
mov
test
xor
out
xlat
xchg
test
call
loope
lods
sbb
insb
loope
adc
gs
xchg
cs
rep
rcr
scas
pop
ror
sarl
sub
repz
xchg
out
test
xchg
aad
iret
dec
testl
clc
mov
cmpsl
jg
jne
push
test
sub
mov
jo
out
daa
dec
jbe
jmp
jmp
push
push
movsl
xchg
pop
mov
out
out
sub
mov
cld
shrl
add
aas
adc
cli
jne
dec
into
push
loopne
mov
bound
aad
cmc
mov
inc
rorb
mov
ret
cmc
mov
pop
or
pop
lock
ret
cmpsl
adc
scas
sub
addl
jne
fidivs
jg
inc
test
pop
add
or
sub
inc
mov
sub
and
and
and
or
cmp
bound
push
int3
mov
stos
mov
xchg
xchg
sahf
cmp
add
test
sub
out
fldcw
pop
sub
push
int3
dec
xchg
hlt
xor
or
sub
and
shll
mov
inc
out
pop
inc
fwait
jle
imulb
xchg
jecxz
jl
out
fcomip
out
mov
push
stos
add
push
xchg
and
or
sub
pop
aad
mov
mov
data16
test
xor
in
sub
add
xlat
add
xor
es
aad
iret
inc
dec
or
sti
pushf
jmp
sbb
xlat
popf
adc
outsb
xlat
stos
das
lret
out
mov
xchg
add
or
cmp
cmp
mov
out
int3
push
imul
push
sahf
cmp
outsb
lods
ss
mov
lds
outsb
or
in
add
mov
dec
mov
test
loope
int3
popa
scas
sub
adc
je
push
mul
into
popa
imulb
jecxz
fsubl
clc
test
xchg
stos
out
leave
pop
in
out
jns
and
pop
or
xlat
xor
test
and
inc
leave
out
out
mov
mov
sti
bound
add
imul
imul
out
out
mov
out
loope
mov
mov
notl
jge
imul
jmp
xchg
inc
notb
cmp
sub
mov
mov
mov
adc
mov
call
mov
stos
inc
imul
push
sahf
rorl
jns
xchg
cmpsl
pop
bnd
mov
dec
mov
sahf
cmp
aaa
lods
push
out
mov
jg
dec
out
mov
xchg
jns
addr16
arpl
arpl
adcb
xchg
mov
cmp
mov
mov
lahf
mov
scas
mov
mov
sbb
dec
jecxz
enter
push
outsl
popf
cs
mov
movsl
inc
jecxz
jp
loope
mov
push
enter
cmp
repz
mov
bound
cmpsl
push
pop
movsb
stos
sbb
test
and
outsb
movl
sbb
mov
dec
lock
cmc
ss
push
cs
mov
pop
mov
cmpsb
stos
jbe
xchg
push
cwtl
push
xor
test
mov
and
cmp
and
mov
xchg
in
xchg
push
loopne
dec
stos
stc
xchg
mov
daa
adc
movsl
movsb
jecxz
pop
arpl
cmpb
in
add
in
stc
into
ss
mov
les
pop
pop
punpcklbw
mov
rolb
leave
push
push
sub
cmp
shrl
jb
sub
mov
push
or
xchg
pop
cmc
std
pop
pushf
das
add
loop
adc
adc
lret
stos
lds
mov
aaa
iret
insl
repz
jg
mov
pop
xchg
out
sub
incl
sub
repnz
cwtl
in
clc
adc
test
js
add
in
adc
push
popa
shr
popa
cmp
stc
add
push
mov
and
aad
imul
inc
pop
jg
pop
pop
popa
dec
mov
test
daa
out
loope
xchg
sub
or
imul
xor
int
push
rorb
mov
or
sbbl
addr16
aaa
pop
inc
add
add
daa
out
xor
xchg
cmpsl
stos
sbb
ljmp
icebp
sub
in
inc
add
divl
out
pusha
jmp
sahf
push
jecxz
xlat
xchg
push
scas
outsl
lods
cmpsl
push
sub
push
cmpsb
das
out
mov
daa
mov
test
pop
aad
xlat
ret
add
push
sbb
call
push
imul
mov
repz
pop
pop
and
call
sub
dec
ror
iret
lret
aaa
lcall
dec
test
lods
push
fs
pusha
sbb
les
pop
call
push
ficoms
xchg
in
mov
addb
sbb
pop
decl
or
loope
fsubs
jg
scas
lds
mov
pop
or
mov
jb
pop
pop
pop
testl
fstl
dec
mov
subb
nop
mov
cmp
xor
inc
push
out
mov
pusha
les
xchg
loope
int
or
imul
push
sbbl
scas
test
mov
xchg
leave
in
aaa
test
add
repnz
sbb
push
push
rolb
jg
or
mov
imul
or
xchg
mov
lods
mov
gs
mov
in
mov
mov
or
test
aam
cmp
pop
mov
xchg
scas
div
arpl
xor
xchg
mov
or
fs
xlat
out
xor
in
test
dec
push
sub
sahf
pop
js
enter
sbb
clc
jbe
cmp
cmp
jno
push
sbb
sbb
pop
out
xchg
mov
aaa
fscale
cwtl
mov
mov
lret
jns
lahf
dec
fwait
test
and
loop
insb
mov
bound
out
push
cmp
mov
push
inc
stos
push
movsl
mov
mov
or
push
mov
les
jb
mov
xchg
into
test
test
pop
sti
push
not
sbb
adc
jmp
push
pop
movsl
shll
xchg
cmp
sub
xchg
dec
call
mov
in
nop
pop
daa
pop
jno
out
lds
pop
shlb
inc
cltd
mov
dec
daa
out
pop
and
hlt
mov
movsb
shr
sub
or
cmc
aaa
lret
push
xchg
mov
pop
ja
sub
test
lea
sub
xchg
push
cmp
mov
mov
lock
mov
ds
sub
pop
fwait
sub
push
js
push
xor
out
lds
sub
sbb
push
aad
sub
sub
push
in
sub
cmp
push
cmc
add
lret
push
test
sub
mov
jmp
in
sar
pop
xor
aam
arpl
stc
pop
loop
pop
pop
push
cs
mov
fisubrs
pop
sub
icebp
jmp
mov
aaa
cmc
push
jle
aas
mov
jge
pusha
inc
mov
adc
mov
and
jbe
dec
xlat
test
mov
pop
push
dec
mov
fcompl
mov
popa
push
scas
pusha
add
aaa
jmp
shrl
dec
cmc
add
adc
jmp
clc
pop
adc
xchg
push
test
sub
mov
out
add
je
std
inc
lret
pushf
popa
stos
jle
test
inc
sbb
lods
dec
cmc
mov
push
gs
push
imul
lea
push
out
in
rcl
mov
or
sub
inc
mov
push
push
stc
jne
adc
test
fs
mov
xchg
rclb
nop
mov
and
pop
push
push
jecxz
or
dec
stos
or
xor
xor
dec
xchg
xor
iret
xchg
fs
mov
or
in
or
dec
imul
ljmp
pop
in
xchg
pop
xchg
dec
pop
xlat
xchg
xor
aad
xchg
mov
in
xlat
mov
cmp
test
cmp
testb
and
push
pop
call
pop
test
and
jg
add
ss
js
loope
lods
test
xchg
nop
sub
test
and
mov
sbb
nop
imul
xor
sub
cmpsb
ljmp
mov
pop
dec
js
je
dec
call
jmp
lds
push
mov
lret
int3
call
insl
test
mul
push
mov
inc
add
out
fadds
or
or
xor
lcall
ret
movsl
into
push
xor
call
lods
push
jmp
mov
mov
cltd
mov
in
dec
leave
mov
sub
das
jmp
das
frstor
leave
mov
and
fstps
jecxz
lahf
and
std
aam
cmp
lds
daa
fmull
mov
ja
or
popa
repnz
sub
push
in
jmp
xor
mov
push
pop
jge
stos
into
outsl
lret
call
stos
aas
xor
jne
cmp
push
mov
push
cltd
lods
stos
sahf
in
sub
pop
or
addr16
sub
test
ss
mov
das
cmp
sbb
test
dec
mov
xchg
bound
push
js
mov
ret
sub
lods
into
adc
cmc
es
mov
or
aad
loope
bound
mov
lock
inc
pop
lods
pop
nop
lods
mov
xchg
sbb
lock
push
jmp
loop
test
das
cmp
mov
adc
hlt
mov
cmp
mov
jecxz
stc
lods
mov
stos
push
push
mov
jns
cld
enter
push
push
inc
inc
adc
daa
ljmp
lods
insl
leave
sub
adc
jmp
mov
push
adc
lcall
adc
je
aaa
out
pop
je
push
inc
sub
sub
or
ljmp
leave
add
aad
inc
jmp
in
inc
mov
test
daa
jecxz
jg
xchg
sub
mov
ret
aas
nop
mov
lahf
dec
cmpsb
subl
data16
add
insl
pop
mov
cmc
pop
fidivrl
enter
sub
aaa
jae
inc
mov
ret
lds
or
cmp
mov
int
insl
imul
in
cmc
jmp
iret
mov
jp
add
mov
push
iret
fwait
sub
divb
ss
jge
mov
jmp
xchg
xchg
cmpsb
lds
stos
es
mov
adc
aaa
mov
xor
cmp
ja
pusha
bound
pushf
inc
pop
jecxz
lahf
inc
inc
jbe
pop
ja
and
stos
in
cmp
jl
mov
sub
bnd
adc
and
popa
add
ds
pop
cmp
cltd
not
push
pop
fs
sub
mov
cli
pop
test
add
push
test
test
push
orl
adc
pop
arpl
or
jae
push
ss
imul
xchg
cmp
dec
pop
sti
iret
fistl
ljmp
dec
je
mov
xchg
adcb
adc
inc
call
popa
push
lea
mov
scas
xor
stos
or
sub
ret
mov
jb
sbb
lods
outsb
sub
cmc
daa
movl
sbb
push
push
pop
aaa
add
repnz
movsl
dec
aas
ljmp
sahf
or
mov
test
push
jge
aaa
gs
add
jmp
ja
jbe
add
je
divb
add
ljmp
pusha
into
fs
add
adc
adc
pop
sub
mov
testb
movsb
clc
adc
xchg
xchg
push
xchg
lret
mov
adc
movsb
mov
xchg
fsubrp
dec
out
and
les
cmpsb
mov
cmpsl
mov
loopne
nop
aaa
adc
lahf
push
addr16
xchg
pop
fbstp
into
adc
imul
xchg
cmc
mov
sub
fdivrl
push
scas
mov
ljmp
stc
pop
sahf
jg
bound
loope
or
out
test
jmp
sub
imul
fucom
insb
icebp
lret
in
jl
and
ljmp
mov
inc
cmp
sbb
jl
xchg
lahf
cmp
movsb
or
lret
and
dec
adc
and
idiv
or
scas
jge
nop
jmp
lret
stos
xchg
movsw
sti
mov
les
outsb
push
int
enter
stc
imul
outsl
xlat
and
jnp
mov
lods
addr16
dec
test
adc
lcall
and
xchg
bound
cli
ds
mov
xlat
xchg
mov
stc
xchg
ljmp
push
test
mov
mulb
test
and
mov
adc
sub
sub
jecxz
data16
sti
loope
xlat
stos
push
xchg
aaa
ja
push
xchg
sub
xchg
fdivs
push
fcoml
movsl
push
shlb
loope
decl
in
mov
fs
xor
cwtl
lods
popa
dec
aaa
or
sub
les
movsl
jmp
adc
push
pusha
mov
fsubrl
mov
or
xlat
insl
push
pop
push
in
enter
popf
aad
leave
cs
stos
ss
sub
sub
es
movsl
or
dec
imul
scas
sahf
lret
mov
ss
pop
scas
pop
sub
ss
push
fldt
dec
mov
iret
rorl
in
call
dec
sub
jne
pop
clc
mulb
hlt
xor
out
dec
mov
mov
push
ficoml
test
jmp
mov
stos
int3
imul
mov
mov
adc
stos
xor
sahf
movsb
call
fs
bound
sbb
jmp
dec
xor
push
jmp
push
sub
stos
ja
xor
stc
test
or
sbb
in
stc
pop
inc
mov
daa
lods
jo
xor
jno
mov
sbb
inc
pop
mov
push
mov
push
cmpsb
cld
je
cmp
jp
cmp
repz
hlt
pop
addr16
stos
xchg
jmp
inc
add
inc
jl
mov
dec
cmp
cmp
call
mov
or
mov
fistpl
jg
inc
in
xor
popa
jns
xchg
jmp
lock
into
ljmp
out
lcall
mov
scas
and
cltd
out
loope
sub
in
cs
xor
pop
pushf
add
xchg
cltd
mov
js
or
push
push
in
push
sub
mov
icebp
push
jmp
out
xchg
hlt
xchg
and
cmp
enter
shrb
cli
dec
negb
inc
dec
enter
pushf
outsb
cs
sub
xorl
add
out
xchg
in
jno
push
in
mov
mov
in
je
xor
mov
xor
sub
jge
gs
add
ficompl
call
jno
lods
in
jmp
pop
adc
lret
mov
lods
mov
dec
addr16
pop
dec
mov
or
stos
movsl
xlat
fs
pop
in
iret
add
or
lret
pop
xchg
cli
mov
stos
xor
push
loope
jbe
mov
in
pop
lods
lcall
pop
inc
mov
push
push
xchg
and
sub
sub
lret
inc
xor
pusha
xchg
std
mov
cwtl
imul
sub
mov
dec
mov
test
push
in
xchg
je
dec
sub
stos
push
and
out
push
pop
cmpsb
mov
xchg
xchg
pop
mov
stos
aaa
add
loope
das
leave
xor
and
out
scas
imul
sub
xchg
jl
add
loope
cmpsb
and
ret
cmp
push
pop
sub
or
pop
adc
stos
scas
cld
mov
jp
aaa
scas
ret
xchg
xchg
add
aad
loope
xor
add
inc
sbb
sub
nop
jmp
mov
dec
int
stos
xchg
popa
or
xor
xchg
ljmp
xor
inc
and
ss
add
push
fcomp
hlt
jno
es
in
mov
mov
aad
dec
pop
pop
mov
jo
push
xchg
push
and
mov
incb
mov
dec
mov
out
ja
cmp
xchg
mov
int3
add
and
lods
shlb
mov
cmp
xor
or
fldenv
fiaddl
inc
lcall
mov
mov
mov
xchg
pusha
cvttps2pi
je
adc
jg
pop
in
adc
enter
adcl
scas
pusha
mov
shl
repz
sub
sbb
dec
cli
sbbl
jp
int3
outsb
das
movb
aaa
sahf
sub
movsb
jbe
mov
imul
insb
out
and
push
inc
pop
int
ss
push
enter
ljmp
fmull
sbb
jae
fmulp
cmpsb
mov
stos
ja
dec
test
jl
aam
push
add
xchg
lds
mov
mov
add
xor
and
sbb
inc
imul
call
test
mulb
out
push
jno
or
mov
jp
xlat
sub
mov
ret
movsb
into
add
adc
lods
aaa
xchg
stos
jmp
sbb
scas
mov
cmp
mov
outsb
xchg
add
aaa
push
repnz
mov
xor
shrb
sub
movb
push
mov
dec
adc
add
cmp
loopne
or
daa
pop
cmp
rcll
xchg
stc
xor
push
xor
daa
lret
aad
aad
mov
dec
ljmp
stos
mov
cmpsl
xlat
mov
and
sub
pop
inc
ss
cmp
cmp
mov
mov
out
mov
jb
in
dec
or
pop
fs
push
movsl
lods
xor
dec
in
lret
pop
jp
enter
xor
xchg
jne
daa
add
daa
pop
mov
inc
out
rcrl
dec
xchg
or
idivl
ljmp
mull
out
imul
bound
xor
mov
test
pop
fdivs
js
clc
mov
jbe
in
mov
lods
cmc
fldcw
inc
pop
cli
fisubl
test
call
push
popa
push
ljmp
pop
clc
ja
or
addr16
inc
sar
dec
enter
mov
cmp
fbld
sbb
jmp
addr16
jno
pusha
test
icebp
scas
mov
repnz
sub
cs
cwtl
mov
push
insb
arpl
fsubrp
pusha
xchg
xchg
cwtl
cmc
xchg
ljmp
mov
stos
sub
dec
ja
sbb
stos
push
mov
sti
jecxz
add
push
loop
jae
mov
inc
push
ja
mov
mov
and
adc
arpl
jge
xchg
lret
ss
outsb
xchg
pop
or
outsl
shr
push
xor
jbe
in
adc
mov
repnz
stos
adc
mov
mov
int3
test
shlb
fwait
inc
pop
notl
ljmp
push
je
lock
cld
push
cltd
call
jmp
mov
ret
outsb
xchg
jmp
stc
push
aas
in
mov
loopne
adc
xchg
mulb
das
addr16
cmp
loope
push
inc
std
ret
mov
xchg
jae
sbb
sarb
jecxz
popf
inc
in
cs
fmull
pop
pop
xchg
push
push
insl
pop
cmp
and
mov
in
jmp
sbb
cmpsb
hlt
ficomps
xchg
mov
or
loopne
jg
mov
addb
lcall
scas
js
cld
mov
mov
push
movsb
outsb
test
xlat
movsl
pop
ss
xlat
xchg
pop
mov
inc
in
xchg
xor
imul
addr16
mov
jns
cli
cmpsl
lock
sbb
mov
mov
pop
push
cmp
or
hlt
std
and
stos
popa
or
imul
pop
mov
jnp
shlb
loopne
mov
and
xorl
mov
push
push
inc
add
lods
je
addb
sti
mov
mov
pop
jecxz
mov
mov
aam
or
in
mov
rorb
icebp
mov
pop
push
test
fs
cld
out
cmp
les
mov
mov
xchg
cs
mov
std
fisttpl
out
gs
pop
dec
xor
aas
out
ljmp
test
jnp
pop
into
mov
add
imul
jmp
out
das
pop
pop
and
and
loop
leave
lods
sahf
sub
lods
mov
push
popa
imulb
or
aam
arpl
mov
dec
movsb
mov
or
sar
or
inc
mov
es
push
dec
push
xchg
mov
in
leave
dec
hlt
pushf
cmp
jmp
push
cltd
push
sub
in
jmp
cmp
xlat
out
pop
adc
imul
mov
lret
idivb
das
out
cmp
pop
out
mov
pusha
jb
fwait
add
scas
mov
add
xchg
outsl
push
dec
insl
sbb
out
mov
movsl
stc
push
mov
sub
repz
je
leave
cmc
cmc
adc
inc
mov
das
mov
and
fildll
add
or
and
xchg
stos
sahf
testb
push
pop
int3
lods
mulb
xchg
jbe
popf
dec
call
jg
push
jg
out
cld
mov
insb
popa
add
jmp
lods
out
insl
cltd
xor
sbb
push
jbe
and
sub
imul
jns
adc
mov
push
sahf
daa
sbb
or
xchg
sub
cmp
push
lret
test
inc
fiaddl
push
inc
pop
xchg
fldl2e
ret
push
add
push
jp
popa
loope
pop
xlat
sahf
adc
iret
xchg
push
mov
aaa
in
mov
and
add
aaa
push
push
mov
cmp
call
jb
shr
mov
leave
test
cli
sub
xchg
jmp
je
int
pop
push
ljmp
sbb
xchg
idivb
jg
mov
cmp
dec
cmc
gs
mov
mov
push
dec
mov
or
and
movsl
pcmpgtb
test
mov
mov
movsl
and
mov
enter
sub
outsb
push
in
sbb
jb
push
push
sub
and
nop
lds
push
arpl
les
pop
ret
into
push
pop
subl
mov
ret
jbe
and
loope
aad
and
mov
lock
cmp
xlat
cmp
add
push
arpl
mov
in
add
ret
popf
clc
push
xchg
cmp
lret
xor
negb
or
or
popa
mov
add
ret
inc
or
int
xor
jns
and
enter
sub
test
jmp
int3
movsl
ret
aad
imul
sub
jge
rcll
mov
mov
lock
xchg
popa
cmp
push
ret
jg
sub
mov
pop
lahf
imulb
dec
lods
xlat
es
rcrb
pusha
mov
insb
pop
cmp
stos
iret
jmp
xchg
and
add
sub
mov
test
in
mov
jmp
pop
jecxz
sbb
ret
ja
shrb
xor
mov
fsubl
pop
add
lds
sub
mov
dec
pop
out
jns
pop
mov
sub
cmp
sbb
and
mov
mov
xchg
pop
out
push
rcl
cmc
in
in
xor
inc
ljmp
rorl
out
jmp
clc
push
ljmp
in
jmp
add
jbe
fisubl
xchg
stos
and
xchg
loopne
sub
push
jg
in
jmp
push
dec
lea
jo
inc
out
gs
hlt
cmp
inc
xchg
rolb
mov
cmp
fstpl
stos
xlat
or
xlat
dec
mov
pop
pop
mov
clc
xor
xchg
xchg
xor
xor
daa
cltd
xor
xor
ds
loope
xchg
fisubrs
popf
loope
xchg
sahf
in
pop
aad
sub
or
jae
out
sarl
shr
push
cmp
imul
pop
test
lds
ja
cmc
decb
adc
test
cmc
jae
sbb
mov
pop
mov
fisubl
sbb
jo
xor
movsl
inc
aaa
and
stc
mov
mov
clc
insl
lods
cmp
push
sub
ljmp
pop
cmpsb
sub
xchg
in
dec
stos
inc
mov
or
out
shrb
fs
push
lods
lock
sbb
xchg
cld
push
inc
mov
push
imul
cmp
enter
je
lret
js
mov
cmpsb
ljmp
push
dec
stos
sbb
mov
jp
jp
jnp
mov
in
rorl
cmp
loope
sbb
mov
mov
dec
test
daa
aaa
cs
lock
mov
sub
aaa
push
es
push
aas
xchg
pop
fsubrl
push
insb
leave
sub
mov
xchg
pop
or
push
xor
mov
movsl
jmp
mov
gs
cs
cmpsb
lahf
mov
ss
mov
out
repnz
addr16
leave
arpl
clc
cmpsb
push
cmp
jmp
push
mov
jbe
pop
sub
dec
lds
or
cmp
dec
mov
repz
mov
fsubrs
lods
dec
mov
test
mov
ja
movsb
cs
dec
xlat
jae
pop
imul
outsl
out
insl
push
xlat
std
push
push
mov
inc
xchg
add
or
mov
popa
inc
mov
aas
aam
push
int
stc
sub
cld
adcl
fcomp
xor
jmp
and
jno
cs
cmc
push
add
test
xor
rcrb
arpl
cmc
scas
outsb
add
call
in
xchg
sub
lcall
stos
jecxz
sub
add
divb
push
push
sub
push
testb
pop
xchg
lds
idivb
repnz
ss
xchg
fldz
outsl
sbb
and
sbb
nop
push
inc
stc
push
dec
xchg
push
push
inc
push
add
fisubl
aaa
xor
sub
add
push
pop
push
cmp
incl
push
je
in
and
loopne
pop
sub
mov
nop
dec
push
mov
mov
or
dec
jmp
cli
movsb
shlb
pusha
ret
cld
loope
aaa
test
sub
xchg
adc
pop
xlat
add
fiaddl
or
pop
pop
pop
or
mov
popf
subb
pushf
inc
fmull
mov
pop
add
xor
popa
pop
sarb
fildll
xchg
out
test
adc
xchg
aas
pop
in
ret
or
xor
xchg
jmp
push
loop
jmp
notl
jle
popf
cmpsl
or
subb
add
push
jecxz
mov
mov
fistl
pusha
push
out
mov
xor
icebp
movsl
decl
mov
bound
int3
pushf
daa
and
call
dec
xchg
imul
jle
or
arpl
shrl
or
cmpsb
cli
int3
popa
push
movsl
xchg
aad
test
notb
repnz
sbb
lock
roll
inc
mov
and
mov
push
xchg
stc
ret
les
clc
xchg
inc
jle
xchg
shlb
mov
int
sbb
cmpsb
push
mov
aas
mov
pop
mov
pop
mov
jmp
add
ljmp
out
inc
test
lcall
mov
push
xchg
xlat
bound
ljmp
mov
mov
pop
pop
mulb
xchg
notb
push
sarl
aas
std
mov
aam
jecxz
aam
mov
lcall
sub
sub
add
sub
loopne
mov
sbb
push
and
push
push
mov
xlat
bound
jb
js
out
xlat
inc
addr16
push
inc
sub
and
jmp
and
and
push
stos
lods
push
mov
vucomiss
xor
movsl
stos
subb
lods
mov
xchg
in
push
jmp
push
enter
fwait
mov
pop
sub
test
in
in
es
push
mov
mov
push
cmp
scas
test
push
cltd
sub
jp
add
in
push
pop
in
mov
cmc
jmp
mov
aaa
insl
dec
je
repnz
pop
dec
loop
push
add
sub
stos
sub
mov
test
jmp
xchg
cmc
ret
test
in
sub
mov
inc
dec
sub
gs
mov
dec
xchg
mov
in
fnstenv
enter
dec
lcall
lcall
subb
mov
jbe
pusha
mov
jmp
jmp
sub
and
pop
jmp
add
jmp
jl
test
xchg
lods
pop
push
and
cltd
mov
arpl
insl
aam
fucomp
xchg
imul
xchg
mov
push
jmp
popa
push
js
sbb
sbb
or
jmp
stos
addr16
sbb
xor
dec
cld
leave
in
ljmp
sti
dec
cmc
push
fs
mov
dec
inc
push
lahf
lcall
mov
jl
lret
icebp
popa
mov
aas
cmp
aam
inc
hlt
sub
jbe
cmp
xor
xchg
in
imul
aad
sub
push
inc
ss
ljmp
imul
fildl
movsb
sub
mov
shl
mov
aas
adc
mov
sahf
mov
enter
pop
sub
cmp
pusha
pop
jo
stos
es
push
sbb
cmp
jg
mov
cli
test
xor
cmp
push
in
pop
subb
les
sub
cld
inc
out
ljmp
pop
jp
pop
dec
xor
mov
rcll
loope
adc
inc
pop
fstl
insl
test
fsubl
js
std
cs
fmull
jno
mov
or
adc
push
lock
lcall
xor
es
pusha
incb
aad
adc
iret
xor
iret
nop
and
mov
mov
out
ficompl
adc
outsl
push
clc
mov
in
and
push
adc
xchg
mov
lods
loope
rolb
in
ljmp
add
and
jo
shlb
mov
xchg
and
xlat
add
cmpsb
jecxz
xlat
imul
arpl
jecxz
cmpsb
and
fs
in
lret
xchg
adc
movsb
enter
fs
push
cmpsb
sub
sti
in
cld
int3
or
push
xor
push
cmp
jmp
jne
bound
add
inc
and
jno
aad
lea
push
sti
test
xchg
enter
push
sub
enter
test
add
arpl
jmp
xchg
push
int3
call
xlat
xlat
sub
insl
and
xchg
lods
mov
movsl
push
cmpsb
adc
in
sub
mov
mov
sub
lret
test
pop
mov
aaa
jmp
bound
sub
lods
jns
push
jmp
stc
lret
arpl
cmp
mov
sub
sub
lock
and
mov
mov
xor
out
or
push
or
sub
pop
mov
addr16
mov
push
jge
ja
js
rol
jmp
jle,pn
dec
mov
popa
or
jae
arpl
addr16
or
or
insb
jmp
arpl
or
adc
sub
pop
lods
sbb
or
dec
push
sub
push
sub
mov
popa
mov
dec
sub
iret
es
test
mov
mov
ljmp
not
sub
cmpsl
pop
stos
cmp
scas
int
aad
lret
loope
sub
stos
mov
xchg
insl
sahf
leave
push
ss
dec
push
lcall
mov
push
mov
ljmp
scas
mov
fsubl
aad
popa
or
in
jg
or
jp
lret
adc
imul
mov
sub
lods
inc
mov
pop
push
and
das
ret
inc
dec
rorb
xchg
jp
nop
inc
dec
xchg
sub
inc
push
outsb
daa
faddl
jge,pt
mov
inc
sbb
sub
aad
scas
cmp
fldcw
mov
mov
or
and
mov
lcall
aad
pop
or
mov
into
mov
movsl
aad
inc
ret
mov
jp
loope
dec
mov
mov
icebp
add
add
loop
mov
outsl
movsb
leave
cmc
scas
push
xor
and
dec
iret
jbe
ljmp
jns
mov
jbe
cmp
jne
dec
xchg
ss
jle
ja
and
stos
jns
mov
clc
int3
push
sub
loopne
test
sahf
test
xchg
mov
mov
in
movsl
ljmp
and
lds
dec
sub
bound
xchg
ds
pop
shlb
cli
xor
mov
cli
add
es
push
jns
test
jmp
sbb
pop
xchg
nop
pop
mov
inc
push
adc
out
or
movsb
out
lods
out
mulb
sub
repnz
pop
or
cwtl
mov
cld
stos
sbb
mov
cmpsb
push
repz
hlt
and
inc
gs
push
jno
iret
jne
pop
mov
std
cmc
push
cmp
or
stos
fiaddl
nop
mov
mov
pop
dec
mov
xchg
es
out
das
gs
data16
es
xadd
ret
es
mov
aad
push
insl
inc
and
movsb
insb
fldcw
or
pop
add
inc
push
push
in
push
push
pop
jbe
push
xor
mov
mov
or
notl
dec
addr16
ret
and
or
adc
push
pop
dec
pop
cwtl
aaa
mov
or
scas
xchg
inc
into
xchg
xchg
cmp
add
mov
mov
inc
cltd
cli
mov
adc
into
mov
jmp
jl
sub
daa
xchg
es
rclb
insb
pop
jl
dec
pop
idiv
nop
mov
pop
les
into
mov
ret
push
and
mov
and
fwait
arpl
jle
fwait
dec
call
sub
sbb
mov
mov
mov
and
mov
frstor
dec
cltd
test
mov
xor
push
je
push
xor
jp
sbb
shll
ret
out
sbb
push
add
call
mov
xlat
xchg
inc
mov
mov
dec
in
clc
jno
jecxz
mov
mov
imul
stc
sub
iret
sub
ret
pop
lods
cmpsl
mov
and
loope
sbb
mov
mov
jo
jmp
push
sahf
scas
test
push
sbb
and
sub
es
lods
stos
shl
jmp
add
mov
dec
ret
dec
jns
dec
ret
and
arpl
cmc
iret
pop
insb
in
mov
push
cmpsb
lods
add
inc
xchg
sub
mov
xchg
cmpsb
jns
inc
arpl
je
or
jg
leave
pop
jne
lock
or
inc
fwait
adc
sub
ljmp
arpl
in
movsl
jbe
cmpsl
mov
loopne
push
das
dec
lahf
sub
jmp
or
data16
jecxz
arpl
les
push
orb
mov
push
cmp
or
mov
insl
pop
pop
icebp
xchg
mov
mov
or
rorl
or
inc
lods
adc
lret
lock
test
cmp
mov
jmp
call
jmp
test
push
sub
cltd
into
mov
in
ret
lods
out
dec
lahf
jmp
sbb
sub
stc
jmp
lods
jle
dec
lds
mov
jmp
js
mov
sub
int
mov
aas
pop
sbb
lcall
out
cs
xchg
scas
out
cs
in
sub
mov
sub
bound
ret
loopne
push
test
or
sub
pop
pop
jge
sbb
pop
mov
jle
xchg
xchg
mov
lods
in
lcall
add
push
xchg
test
notl
test
sub
xchg
roll
push
call
imul
xchg
movsb
rcl
and
addl
or
leave
jmp
jl
push
sub
mov
addr16
mov
push
pop
popa
jg
out
adcl
sbb
sub
push
out
or
add
shlb
cmp
mov
loope
xchg
sub
fldcw
or
adc
mov
xchg
sub
leave
sub
in
in
xor
xlat
dec
sbb
das
leave
mov
mov
aas
push
arpl
pop
pop
xlat
pop
aaa
dec
call
btc
push
shl
add
ja
clc
pop
and
loope
pop
xchg
xor
cmp
jl
add
in
sbb
out
push
or
mov
or
mov
loop
add
push
in
mov
cmp
mov
stc
int
sbb
adc
test
js
fwait
and
sub
mov
leave
sub
mov
aaa
sub
imull
outsb
jle
add
fldl2e
mov
jno
mov
cmp
inc
or
les
sbb
jnp
cmpsb
mov
iret
cmp
pop
mov
adc
js
test
mov
ss
ret
sub
out
nop
dec
loop
jno
notl
mov
movsb
mov
and
dec
les
insl
movsl
inc
or
sbb
mov
std
jnp
mov
cmc
scas
push
dec
jmp
enter
dec
ja
mov
adc
cld
ret
inc
inc
negb
imul
mov
outsb
push
sub
mov
fists
cmp
inc
bound
nop
or
into
aad
pop
and
leave
xchg
mov
xor
pop
lret
aad
rolb
fwait
loope
adc
and
cmpsl
aam
outsl
cltd
in
pop
xor
mov
mov
leave
and
ret
ljmp
cs
les
ss
push
lret
enter
incl
pop
pushf
inc
fbstp
lods
fs
stc
push
imul
xor
xor
outsb
jns
dec
ret
mov
leave
push
fbstp
mov
out
fwait
mov
push
sub
pop
insb
jecxz
enter
xchg
test
stos
push
xchg
das
push
imul
jb
push
fsubrl
cmp
ss
fs
push
push
in
lds
xchg
jbe
sub
push
pop
lcall
jo
and
enter
jae
lods
lods
push
sub
aad
hlt
pop
loop
pop
push
leave
insl
push
in
push
daa
or
inc
xor
dec
push
fs
je
sub
fiadds
ret
add
xlat
mov
jg
mov
cmp
insl
imul
xlat
sub
icebp
jle
jle
ljmp
pop
xor
or
or
cmp
mov
popa
or
rcll
mov
mov
iret
cmp
mov
test
int
cli
adc
pushf
xlat
or
lret
xlat
sahf
jle
xchg
test
stc
aad
pop
jb
les
ret
ljmp
insl
aaa
or
stos
push
jns
pop
jbe
call
addr16
ss
lods
inc
mov
stos
jne
xchg
ss
adc
cmpsl
xlat
std
cmpsl
xor
movsl
xor
jle
stos
lcall
mov
pushl
in
lock
es
int3
fimull
movsl
jbe
jmp
fcomps
cs
push
int
rorl
jbe
dec
push
jle
in
dec
sbb
pop
pop
imul
inc
clc
test
push
in
pop
dec
mov
mov
aam
mov
sbb
push
pop
aad
cld
into
jbe
stos
pop
in
mov
jg
xor
nop
mov
mov
mov
cmp
es
mov
mov
bound
or
mov
std
cmp
jbe
or
jg
nop
ja
push
xlat
out
xchg
daa
xchg
add
loopne
popa
out
mov
push
xchg
pop
sbb
jno
test
mov
mov
pop
sub
lods
push
sbb
inc
in
xchg
mov
mov
fmuls
add
lds
push
pop
mov
jmp
sbb
arpl
or
mulb
dec
lea
fadd
mov
push
push
insl
jp
jp
loop
in
mov
in
jae
mov
dec
adc
sbb
inc
dec
test
inc
std
cli
mov
or
jbe
inc
leave
xchg
int3
jmp
mov
jl
outsl
lret
idivl
outsl
das
lret
push
push
mov
mov
xchg
xchg
jno
push
cmpsb
scas
shrl
jmp
adc
xor
sub
or
mov
cmp
push
jns
dec
mov
andb
cltd
push
dec
xor
or
out
dec
mulb
pop
mov
ret
daa
in
sub
jne
ret
sub
mov
lret
mov
cmp
fcmovb
sahf
or
ja
mov
not
out
imul
fldcw
ss
and
lahf
bound
movsl
push
xchg
rcll
test
sub
sbb
pop
ja
pop
test
popf
jmp
out
add
loopne
lcall
push
adc
in
mov
sbb
sbb
sub
add
pop
movsl
xchg
mov
push
dec
pop
rcrl
bound
sub
out
out
sub
sub
in
push
imul
sub
xchg
je
out
mov
sub
jns
enter
sbb
add
data16
stos
mov
push
push
in
in
outsl
es
pop
imul
push
sub
dec
out
push
mov
xchg
negl
sub
mov
push
lds
test
inc
push
fimuls
scas
cmp
loope
xchg
lds
and
iret
jne
pop
je
adc
sub
jmp
and
ja
outsb
stos
and
pop
push
out
out
outsb
test
arpl
popa
ret
and
mov
test
mov
push
dec
mov
xchg
test
mov
int3
mov
dec
sbb
cs
jb
xor
js
lds
clc
dec
lcall
clc
es
xchg
scas
es
or
imull
rclb
ss
ss
aas
std
add
out
int3
sub
xchg
mov
mov
shlb
xchg
lea
fistl
or
mov
mov
out
inc
movsl
jp
mov
imul
xor
sbb
mov
push
imul
daa
jbe
flds
jmp
mov
sbb
mov
sub
jbe
int
and
test
pop
dec
xor
mov
lcall
icebp
mov
push
sub
ljmp
lods
iret
or
aad
xor
push
jbe
adc
jmp
insb
inc
mov
pop
pop
and
sub
and
jb
xchg
hlt
add
push
push
mov
inc
das
cli
mov
aad
dec
rorb
xlat
sbb
push
daa
push
dec
mov
out
jmp
dec
outsl
add
adc
add
inc
sub
xchg
sub
call
sti
sti
int
gs
clts
cmpsl
pop
cmp
inc
cli
outsb
jns
push
mov
and
mov
movsb
out
ret
sbbl
pandn
xor
arpl
jno
out
push
xor
push
mov
into
loop
stos
push
imul
in
loope
mov
push
cmp
mov
and
mov
cmp
dec
fmuls
jecxz
pusha
mov
xor
ja
and
lcall
test
cwtl
arpl
mov
cli
jmp
sub
mov
test
mov
imul
imul
mov
movsl
stos
hlt
call
sub
jne
push
cmpsb
loope
push
or
and
test
or
mov
not
pop
xor
pop
test
ror
cltd
jo
adc
ljmp
ret
xchg
push
pop
adc
test
leave
test
test
dec
call
aaa
jle
fimuls
jbe
callw
pop
pop
xchg
mov
addr16
imul
cltd
pop
imul
mov
into
int3
adc
test
jns
mov
mov
in
jle
pop
stc
imul
xlat
out
dec
sbb
inc
or
lret
add
les
jns
imul
inc
sbb
jns
into
xchg
adcb
shll
jecxz
out
jmp
test
pop
aaa
sbb
in
outsb
push
movsb
nop
test
xchg
scas
scas
pop
mov
sub
das
sbb
arpl
push
xchg
pusha
fdivp
add
sbb
jae
iret
jle
cmpsl
in
push
mov
imul
mov
int
mov
add
jl
and
in
leave
sub
test
jmp
int3
jbe
xor
jbe
movsb
mov
lods
inc
jmp
cli
xor
pop
xor
xchg
lods
cmp
cs
mov
mov
mov
lock
cltd
adc
jmp
test
fbstp
lock
add
incb
test
mov
xchg
decb
and
leave
loopne
dec
test
xchg
mov
xlat
mov
or
sahf
jo
xlat
xchg
test
es
scas
sub
mov
test
push
ficoml
jmp
loope
sbb
jmp
idivb
je
sar
imul
push
mov
mov
sbb
inc
mov
stos
pusha
dec
daa
cmp
xchg
mov
popf
pop
and
fidivs
push
insb
push
or
sahf
arpl
icebp
mov
mulb
mov
adc
cltd
sub
fisubrs
fidivrl
sub
push
fsubr
cmpsb
aad
dec
test
push
movsb
out
les
dec
lret
ror
outsb
and
mov
test
xchg
lret
ja
lods
sub
insl
sub
sub
movsb
in
pop
sub
js
lods
imul
and
and
negl
ds
fldenv
sbb
sub
jle
popf
mov
dec
addr16
das
push
mov
inc
lret
inc
sub
push
imul
jmp
fdivp
faddl
mov
test
jbe
mov
cli
repz
insb
adc
xor
jmp
out
cld
push
sub
add
xor
mov
cmp
fnstsw
xorl
xor
mov
int
or
test
cmp
iret
adc
sub
movsb
outsb
inc
movsb
add
xor
pop
push
loop
sub
jmp
mov
dec
pushf
xchg
arpl
ljmp
lock
push
add
leave
iret
cmc
sbb
and
test
test
fldcw
pushf
lret
aaa
call
movsl
sub
iret
push
cli
dec
mov
arpl
lods
push
out
pop
cmovo
cmp
jmp
aaa
ret
pop
xchg
stos
inc
loop
xlat
mov
ja
insl
mov
sti
arpl
aad
rcl
fimuls
insl
mov
mov
sub
out
call
insb
jns
xchg
sti
roll
mov
push
jnp
jns
push
ja
cmc
inc
mov
mov
int3
xchg
out
iret
mov
cmpsl
sbb
xor
out
addr16
sbb
ja
jmp
es
sub
or
pop
mov
out
in
into
xchg
cld
pop
fcoms
pop
cltd
push
xor
testb
inc
dec
xchg
out
enter
in
scas
push
pop
jbe
lret
daa
fsubr
idivb
sbb
push
jne
pop
es
lea
cld
mov
movsl
push
jmp
subb
addr16
andl
test
pop
add
mov
pop
bound
jle
xor
cmpsl
outsl
movsl
leave
mov
inc
cmp
daa
addr16
push
sub
cmp
leave
cwtl
mov
loope
push
xchg
pushf
mov
xchg
out
and
xor
or
fs
insl
xchg
fwait
clc
cmp
or
or
lock
jecxz
rclb
or
std
cmp
pop
mov
mov
lea
shlb
sbb
cmpsl
ret
stc
xor
push
add
les
xor
cld
shlb
aaa
aaa
sub
mov
mov
push
dec
jge
xlat
adc
push
ds
iret
out
jecxz
enter
divl
fs
xchg
cld
lea
cs
mov
mov
mov
es
pop
xchg
stos
enter
pop
pop
push
push
add
int3
lcall
data16
outsl
fmull
sbb
xchg
add
pop
jmp
sahf
cmpsl
jge
or
xchg
jecxz
sub
popa
push
xchg
jmp
enter
pop
mov
mov
push
jmp
push
jbe
inc
mov
daa
xchg
add
imul
dec
aas
xor
and
mov
or
loop
les
movsl
pop
push
xlat
xchg
mov
add
pop
push
mov
dec
imul
push
sti
mov
daa
xlat
cs
out
push
lds
inc
cmpsl
dec
scas
aaa
or
popf
jmp
loopne
in
fnstenv
nop
lock
mov
xchg
test
add
inc
jne
repnz
sub
aam
aad
loop
ss
dec
sarb
bound
sub
dec
and
cmp
sbb
outsb
xchg
loope
inc
sub
dec
faddp
aad
xchg
inc
ret
mov
out
mov
gs
sub
pushf
mov
or
pusha
xorl
mov
lret
cld
aas
fbstp
lds
leave
aad
in
add
cld
cmp
ja
or
sub
fldt
aad
pushl
neg
mov
or
out
test
dec
dec
scas
dec
addr16
jnp
mov
shll
sarb
js
push
stos
cs
mov
imul
lock
movsl
cmp
add
hlt
scas
cld
cs
inc
jno
add
pop
pop
mov
mov
sbb
lods
pop
lods
and
je
jge
dec
in
cmpb
scas
in
mov
mov
adcl
repz
inc
mov
cltd
test
or
jle
pop
push
push
push
in
mov
add
mov
les
addr16
cli
cs
dec
jo
dec
xchg
pop
push
lea
sbb
jecxz
test
jp
icebp
shlb
notb
loope
enter
cmpsl
xchg
aad
mov
aaa
mov
lea
imulb
mov
jno
dec
push
stc
daa
sbb
in
add
jmp
dec
mov
mov
jmp
fsubrl
xor
in
sbb
push
clc
insl
stos
mov
inc
in
outsl
sub
sbb
scas
sbb
ljmp
lods
aad
mov
cld
mov
adc
je
push
ret
fmul
out
mov
flds
mov
mov
adc
lcall
idiv
pop
jmp
lods
push
xlat
sbb
dec
sti
imulb
push
xchg
xor
mov
mov
xchg
out
xor
add
ja
int
loop
flds
ss
test
cmpsb
mov
clc
insl
notl
jmp
jge
adc
jle
xchg
aad
jp
add
stos
sbb
clc
or
inc
aas
test
jp
sarl
and
xchg
jle
test
push
je
pop
jle
insb
mov
and
lea
jmp
mov
inc
loop
out
inc
hlt
mov
or
je
out
hlt
xchg
mov
jl
ljmp
sbb
push
jg
jecxz
push
sbb
enter
imul
dec
xchg
adc
movsl
inc
fwait
adc
imul
int
xor
inc
fcmovnu
xchg
cmpsl
std
cmp
jbe
sbb
cwtl
scas
lcall
lods
xlat
int3
cltd
mov
push
mov
insl
outsl
scas
std
fldenv
xor
mov
or
daa
inc
aas
xor
cmovl
push
xchg
cmpsb
mov
push
sahf
mov
loope
and
jmp
xlat
push
mov
lret
mov
adc
dec
push
cltd
xchg
xlat
add
jne
sub
fcomp
out
cmpsb
loope
ss
xchg
push
dec
xor
xlat
movsl
jno
pop
sbb
es
fsubp
jmp
cmp
jge
test
pop
push
mov
mov
push
test
and
xchg
mov
mov
insl
stos
nop
outsb
push
xor
iret
lahf
jge
pop
xor
cmp
push
sbb
pop
cmpsl
jl
ret
cmpsl
clc
call
fistps
push
jecxz
into
sbb
push
sbb
jns
in
sub
mov
in
xor
imul
ret
jb
ss
jmp
cli
mov
xor
repnz
ficoml
rcrb
in
insl
pop
rorl
push
lods
lret
xlat
or
mov
xor
cmpsl
push
pop
mov
loopne
jmp
pop
push
push
pop
outsl
mov
ss
pop
sbb
fldl
ljmp
sbb
repnz
mov
shlb
das
sub
push
dec
jle
ja
loope
nop
imul
pop
xchg
mov
adc
jmp
mov
lcall
scas
and
jmp
out
ds
jae
addr16
movsl
dec
into
cmp
or
sbbl
push
xchg
jnp
ljmp
out
pop
inc
sbb
xchg
fistps
push
xchg
dec
popf
lahf
inc
push
mov
iret
sub
nop
fadds
in
nop
push
sar
imul
mov
and
nop
out
std
jbe
xor
mov
jne
sub
scas
ja
inc
iret
int3
mov
out
mov
pop
jb
cmpsb
dec
xlat
dec
jne
sti
movsl
or
mov
fwait
in
push
xchg
imul
mov
pusha
imul
mov
add
testb
mov
test
add
push
in
xchg
in
sub
rcrb
int
or
jmp
xor
dec
dec
imul
data16
fwait
popa
dec
push
mov
xlat
ds
aaa
outsb
dec
sub
push
push
pop
in
imul
push
inc
mov
std
jmp
push
movsl
mov
daa
cmp
lahf
std
jmp
push
jne
repnz
push
lds
mov
daa
ss
iret
cmpsb
sbb
mov
imulb
jge
xchg
cmpsb
push
mov
cmpsb
jmp
mov
addr16
clc
lea
les
push
ja
jmp
push
mov
cltd
daa
fdivrl
mov
jns
aas
out
or
daa
adc
sub
idiv
or
sbb
jp
scas
cmp
arpl
scas
sahf
pusha
outsb
iret
and
mov
mov
jg
ret
mov
mov
xchg
jo
dec
mov
bound
addb
xor
cmovo
test
cs
js
shll
mov
jne
stos
jbe
fildl
leave
arpl
fld1
rclb
call
push
lds
leave
xor
pop
mov
data16
test
xchg
pusha
arpl
xchg
pop
shlb
lods
pop
jmp
stos
and
push
mov
daa
xor
dec
iret
mov
jecxz
enter
lds
xchg
outsb
jge
inc
adc
cmpsb
pop
in
les
push
mov
std
mov
push
push
jge
xchg
adc
xor
inc
les
cmpsb
aas
mov
test
mov
pop
mov
add
jecxz
pop
sahf
insl
mov
push
pop
fmul
enter
in
push
ljmp
into
inc
xor
fsubl
sub
ljmp
cmpsl
pop
or
pop
mov
stc
lock
cmp
pop
in
popf
lods
sub
daa
ljmp
mov
sub
xchg
insl
xchg
push
imul
pusha
loop
in
jno
lods
loop
or
testl
xchg
ljmp
iret
scas
sub
fs
enter
jecxz
enter
cs
jmp
lods
xor
int
xor
sbb
lret
jmp
divl
push
pusha
inc
jmp
mov
jbe
enter
add
shlb
lods
and
divl
insb
lods
loopne
stos
outsb
lds
lcall
sub
sahf
cli
mov
lcall
pop
xor
aad
xchg
shll
jmp
stc
jle
pop
out
xor
inc
mov
xlat
xor
dec
addr16
adc
cmp
shr
jno
cli
mov
gs
leave
add
imul
mov
mov
imul
mov
into
repz
icebp
int3
cmc
lods
movsb
xchg
fsubp
sbb
lods
or
xor
pop
mov
dec
in
idivl
inc
fs
cltd
push
xchg
xchg
jmp
or
leave
imul
jecxz
add
sti
jmp
jecxz
test
das
sub
aaa
pop
mov
daa
es
push
arpl
fs
jge
out
sub
insb
stos
testl
jbe
push
add
insb
pop
sub
loopne
cmpsb
stos
add
jle
ljmp
out
xchg
mov
in
xor
push
loope
loope
enter
pop
loope
in
daa
call
fldcw
push
push
cltd
mov
sub
fwait
lods
movsb
test
push
mov
fisubrl
ret
xchg
mov
cmpsb
mov
and
movsl
and
xlat
cld
sub
and
pop
jl
jbe
cmp
fidivl
push
dec
fcoml
sub
inc
cli
jmp
outsl
xchg
loope
push
jp
sub
clc
test
jmp
ja
lods
imul
bound
rcrb
in
lret
fs
fsubrl
in
mov
mov
jbe
mov
add
and
stos
mov
pop
and
lock
push
or
mov
insb
addr16
test
fsub
mov
imul
jb
xor
cmpsb
inc
xor
pop
push
xor
lods
inc
inc
or
mov
mov
mov
enter
outsl
push
lea
lods
jmp
dec
mov
jbe
xchg
inc
testb
add
sbb
sarb
pushf
pop
rcl
jnp
dec
imul
lret
cli
pop
enter
pushf
scas
jmp
imull
dec
and
outsb
ss
sub
xchg
repz
cmp
push
iret
xchg
or
popl
in
daa
lret
push
loop
fwait
pop
movsl
adc
loop
lods
xchg
or
and
push
mov
xor
loope
inc
rolb
adc
addb
lret
xchg
test
cmp
push
or
fs
or
jecxz
sub
movsb
add
test
insb
movsl
or
dec
adc
cmp
fwait
test
xchg
push
xchg
ficoms
and
add
mov
mov
scas
loope
inc
aad
cmc
in
mov
and
fadd
sub
ret
push
or
test
test
mov
rolb
shl
jecxz
mov
mov
ret
mov
popa
xchg
scas
mov
jnp
and
subb
repnz
dec
scas
adc
cmpsl
sub
lret
fmull
call
inc
and
sub
in
xchg
inc
jne
inc
imul
dec
ja
addr16
in
outsl
pushf
push
fisttpl
add
and
daa
xor
divl
aad
lds
and
add
mov
repnz
inc
dec
in
cs
arpl
add
sub
xor
lcall
insl
mov
jmp
inc
mov
movsl
sbb
test
je
addr16
mov
in
test
cltd
leave
jne
cmc
push
popa
test
es
mov
mov
arpl
mov
ss
cmc
cmpl
sahf
pop
and
cmp
lods
test
test
fldcw
in
cmp
sub
call
xchg
call
scas
movsb
out
popa
xor
add
stos
jbe
add
push
xor
mov
push
sub
and
out
mov
popa
ja
mov
or
xchg
leave
pop
out
filds
out
dec
pop
dec
dec
jno
pop
out
fbld
dec
pop
dec
dec
push
stos
enter
addr16
pop
int3
inc
xchg
add
cs
push
mov
push
cmp
les
xor
xchg
je
pop
push
jmp
imul
jp
xchg
fwait
sahf
fs
out
lahf
ret
jns
flds
lods
push
sbb
sti
into
or
jmp
xor
clc
mov
fsubl
out
lds
jg
push
cmpsl
test
mov
lock
jle
sub
sub
and
push
adc
inc
aad
pushf
hlt
test
lods
jmp
or
jne
aas
xchg
dec
sbb
push
sub
xor
sub
push
ss
or
mov
aad
mov
imul
adc
add
push
and
out
jmp
push
xchg
cli
mov
cmp
sbb
aad
hlt
sub
clc
or
jmp
in
mov
mov
cmp
je
jle
jecxz
aaa
loop
loope
adc
cmpsb
out
adc
out
hlt
icebp
push
enter
mov
out
sbb
imul
jmp
push
ljmp
sti
subl
in
pop
ljmp
sub
add
les
dec
jno
sbb
jmp
xor
mov
inc
aam
sbbb
aad
loope
add
dec
cld
arpl
test
out
insb
push
loopne
mov
dec
outsl
xlat
shlb
mov
xchg
insl
dec
mov
mov
cmc
inc
push
jae
xchg
dec
test
insb
mov
or
mov
mov
jmp
pop
push
scas
add
daa
push
mov
push
sub
sub
push
js
xchg
sti
enter
jp
pop
pushw
pop
push
xchg
pop
aaa
insl
push
adc
jg
lret
xchg
pushf
ficoml
cli
jmp
ljmp
jb
xchg
push
sub
movsb
cmp
push
lods
cmp
std
dec
in
sub
cltd
inc
push
fdivs
in
shl
mov
sarl
fdivs
test
cs
xchg
sub
push
adc
mov
inc
pusha
push
dec
push
lcall
push
sub
dec
pop
jb
inc
fstpl
ret
mov
dec
pop
shrl
stc
loop
cmpsb
into
push
dec
mov
stc
aaa
xlat
fsubrl
push
jmp
mov
jmp
cmp
test
std
jmp
enter
add
or
xchg
cmp
lret
test
fwait
xor
cltd
stc
jecxz
shrl
outsl
add
cs
xor
push
pop
mov
test
cmp
pop
push
pop
leave
or
or
dec
test
dec
pushf
cmp
dec
testb
lret
sub
jbe
and
mov
jns
daa
filds
push
outsb
rorb
sbbl
cltd
iret
mov
gs
mov
add
movsl
jle
into
jae
sarl
dec
leave
out
inc
shrl
int
lds
insb
addr16
outsb
sub
sub
jmp
cmpsb
arpl
repnz
mov
aad
inc
insb
out
lods
popa
aam
push
popa
stos
movsb
xor
cli
pop
sub
in
mov
loope
push
ds
rclb
lret
push
mov
sub
adc
lock
das
fists
js
pop
out
inc
sub
jmp
ret
and
repnz
jmp
or
test
seto
push
jge
jmp
xchg
inc
sbb
and
rcl
jno
popa
lds
sub
lret
imul
sub
cmp
scas
enter
xchg
pop
fisubrs
cmpsl
pop
hlt
inc
lcall
aad
mov
mov
and
enter
ss
pop
stc
hlt
pop
es
push
mov
shr
hlt
pop
sub
mov
jnp
jle
sti
push
mov
cmp
cmp
or
inc
daa
mov
movsbl
lret
mov
fwait
stos
daa
out
std
addr16
les
sub
xlat
inc
inc
fldcw
scas
test
pop
jg
push
ljmp
js
js
xor
or
cs
dec
iret
or
rcl
cltd
sbb
pop
xor
dec
stos
popf
fdivrs
and
pop
mov
mov
aas
mov
xor
std
or
movsl
daa
ret
push
dec
not
jmp
jae
icebp
test
inc
rcl
xchg
lds
push
ret
popa
inc
jmp
mov
cmp
push
inc
aad
add
iret
ss
mov
dec
dec
xchg
leave
mov
mov
leave
pop
lds
cmp
sub
sbb
cmp
fildl
sub
iret
into
lods
lahf
popf
mov
xchg
add
clc
push
adc
icebp
leave
jne
iret
xchg
cmpsb
xchg
ljmp
or
cs
or
pop
push
cld
mov
dec
mov
push
lds
xor
pop
outsl
jbe
or
jmp
pop
lods
xchg
or
cs
repnz
loop
nop
mov
hlt
inc
jae
push
sbb
or
xor
test
push
mov
out
daa
mov
inc
es
lds
cmp
mov
aaa
xchg
xlat
ret
dec
imul
cmp
es
pusha
popl
testb
and
xor
pop
outsl
and
xchg
sbb
and
add
sbb
jle
lods
cmpsb
vmulss
popa
clc
les
mov
cmp
retw
out
aaa
inc
repz
mov
push
pop
xor
xchg
lods
or
arpl
popf
mov
iret
in
mov
fsubrl
ret
inc
sub
push
pop
mov
and
fwait
xor
sub
cltd
lods
out
aas
cmpsb
pop
into
mov
mov
adc
jmp
mov
stc
xchg
mov
dec
xchg
das
xor
push
aaa
dec
insl
pop
push
es
movsb
pusha
hlt
ss
aas
sub
jg
loopne
xlat
pusha
sub
mov
sahf
ret
jo
insb
es
push
out
xchg
ss
mov
leave
add
push
push
lods
push
mov
notl
in
clc
enter
cmp
mov
pusha
lds
xchg
insl
loop
mov
mov
imul
add
das
cs
add
jnp
or
cmp
pushf
sub
adc
sbb
in
inc
fstl
aaa
es
fwait
dec
ss
dec
xchg
scas
std
add
clc
mov
je
xlat
out
pop
adc
loope
cmp
out
arpl
sti
sbb
test
xchg
or
stos
mov
lock
test
mov
jecxz
int
es
cltd
and
xchg
test
adc
pop
mov
push
xchg
push
jge
es
je
cltd
adcb
daa
divl
mov
push
lcall
faddp
cmc
orl
dec
jbe
pop
in
imul
cmpsb
dec
xor
and
test
add
in
pop
shrb
mov
imul
aad
adc
ss
push
sbbb
sub
movsl
movsl
ret
ss
lret
lds
test
mov
adc
inc
sbb
sti
daa
or
jo
and
imul
and
ljmp
or
sub
jecxz
mov
xlat
inc
xchg
pop
mov
push
jb
sbb
and
shlb
cmp
mov
out
mov
jns
add
jmp
int3
mov
leave
pushf
les
lcall
lods
je
mov
jg
in
mov
bound
mov
xlat
xor
jbe
jbe
fldcw
and
lods
movb
leave
aaa
pop
cli
fwait
jp
fimull
inc
xor
lds
ret
cmp
test
aad
or
cmp
inc
loopne
inc
jnp
insl
jbe
mov
and
lock
ljmp
lds
ja
fiadds
js
pop
xor
xchg
in
jno
out
punpckhbw
lea
pop
test
xchg
xchg
sar
cmp
hlt
xchg
cli
out
out
push
cmp
dec
push
pop
cltd
out
mov
out
jge
cmc
mov
ljmp
jmp
movsb
xor
cld
loopne
test
fldcw
outsl
test
ljmp
shll
push
and
out
daa
pop
movsb
out
std
jmp
mov
stos
push
cmpsl
fidivl
sub
insl
xor
jbe
push
pusha
cld
cmpsb
inc
jmp
add
jne
pop
xlat
pop
sub
dec
imul
jg
or
push
nop
mov
mov
in
cs
lods
daa
pop
cmp
call
mov
pop
push
shlb
icebp
mov
mov
xchg
test
jns
cmp
sbb
test
xchg
pop
pop
dec
inc
mov
pop
mov
ja
insb
adc
inc
aaa
repnz
les
sub
cmpsb
mov
int
jp
or
push
stos
nop
ljmp
lock
into
test
pop
test
cmp
dec
lds
roll
sub
jne
mov
mov
push
test
data16
or
jecxz
or
adc
push
cwtl
jo
xor
cs
pop
or
push
jb
scas
mov
and
lahf
insb
sub
sbb
insb
sub
xor
jb
test
mov
ss
cmpsl
adc
mov
sub
and
in
outsb
imul
inc
addr16
mov
insb
xlat
jb
icebp
repz
push
out
xchg
push
icebp
int3
adc
sbb
sub
lds
push
imul
push
test
adc
imul
cmp
xchg
mov
inc
xchg
lahf
or
sub
mov
movsl
sahf
xchg
push
scas
aad
add
pusha
lea
lret
push
push
arpl
jmp
jge
dec
mov
mov
sub
xlat
add
pop
decl
cld
jg
add
pusha
mov
mov
mov
roll
xchg
add
push
cs
outsb
int3
xchg
jbe
xlat
jp
push
jbe
pop
jo
mov
mov
push
sbb
jne
ret
mov
sub
inc
dec
out
cmpb
cmp
daa
rcrl
popf
xchg
jp
in
xor
jbe
mov
int3
xor
xor
sbb
mov
xlat
jp
mov
mov
shrl
mov
divl
cmp
mov
mov
pop
orl
hlt
xchg
sub
int3
and
mov
cmpsl
xor
push
ljmp
out
lea
jmp
jmp
push
movsl
or
in
aas
mov
adc
rcrb
out
push
xchg
and
add
movsb
and
mov
push
pop
std
out
adc
cmp
jp
iret
cmpsl
xor
xchg
mov
dec
jo
mov
and
pop
jmp
movsb
mov
insl
inc
mov
or
sarb
pop
lret
hlt
sbb
sub
pop
lret
loop
mov
ret
mov
icebp
fwait
es
pop
outsl
movsb
pop
inc
jmp
adcl
les
rolb
sub
ja
pop
in
lret
and
in
dec
add
inc
movswl
push
fs
cli
or
mov
shlb
cs
cmpsl
ja
push
pusha
xor
pop
loopne
mov
stos
mov
sbb
das
mov
das
sub
ss
jo
stc
sub
xorl
xchg
test
xchg
adc
pop
jmp
jmp
or
arpl
leave
lcall
push
mov
push
mov
xlat
loopne
daa
sub
inc
icebp
lds
jae
push
subl
outsb
and
adc
int3
jl
dec
cmp
or
push
lret
outsl
fld
jp
adc
cld
sub
das
lds
xchg
movsb
subb
ret
jmp
mov
mov
inc
stos
fs
lcall
sub
pop
push
leave
pop
scas
test
mov
iret
mov
popf
daa
into
or
pop
xchg
inc
mov
aad
cmpsl
les
mov
lods
mov
mov
outsb
pop
scas
fmull
daa
xor
dec
dec
push
xchg
pop
stos
or
jle
adcl
mov
leave
push
shl
or
push
cli
std
cmpb
rcrb
mov
popa
std
mov
dec
aam
push
lds
shlb
inc
pop
push
sub
std
shll
cmp
cmp
arpl
pop
sub
mov
mov
cmp
jne
cmp
cmp
lcall
clc
adc
xchg
sbb
daa
sub
lods
cmp
push
sub
enter
xchg
jb
cmc
arpl
push
stos
mov
cmp
bound
or
xor
loop
fldcw
pop
addl
ret
mulb
fdivr
push
or
rolb
idiv
sbb
andnps
imul
ds
xchg
sbb
pop
pop
and
es
pop
mov
sub
push
es
out
repz
xchg
rorb
mov
test
das
test
testb
dec
push
das
out
jnp
lea
dec
imul
cwtl
test
and
mov
clc
in
xor
mov
aaa
sub
lret
sub
ja
scas
add
ret
scas
mov
jns
imul
add
mov
push
outsb
lods
mov
out
scas
imul
adc
adc
sub
aam
int
or
cmp
cld
lock
pop
das
mov
push
lret
sub
test
mov
mov
and
jne
cmc
cmpsb
or
mov
ss
xlat
mov
aaa
outsl
jmp
ss
cs
scas
mov
icebp
jl
add
rcll
call
repz
xchg
or
jae
scas
divb
stc
cld
sub
lret
mov
sti
stos
ss
test
adc
ss
mov
std
pop
hlt
mov
push
imul
mov
movsb
shrl
cmp
mov
mov
push
add
push
and
bound
or
lret
shr
jnp
pusha
or
imul
xchg
bt
adcl
xor
mul
or
xor
and
sbb
test
ret
cmp
subb
pop
rorb
cmp
xchg
imul
bound
jmp
lcall
icebp
ds
jae
jne
cs
out
popf
repnz
push
mov
subb
mov
stos
cmpsb
pop
cwtl
aad
jle
repz
ss
or
dec
imulb
dec
out
repz
push
jmp
aaa
sub
push
mov
pop
in
roll
loope
test
mov
movsl
push
arpl
arpl
adc
enter
pusha
pop
dec
in
repnz
pop
and
aam
outsb
out
in
jmp
jle
shll
dec
testb
add
xor
cli
inc
cli
xchg
into
cmp
mov
cmp
push
cli
lret
stos
push
jo
in
jnp
xor
test
daa
dec
xlat
jns
sbb
loope
push
lret
lods
xor
imul
xchg
ret
sub
xchg
outsl
ja
push
pusha
mov
inc
xchg
imul
mov
cmp
in
mov
es
leave
das
imul
je
xchg
insb
or
add
call
or
std
mov
test
iret
mov
fyl2xp1
in
aad
aad
dec
movsl
cmp
pop
jmp
hlt
mov
ss
cld
into
mov
push
loope
xor
inc
adc
mov
pop
mov
aas
inc
dec
cmp
aaa
test
mov
call
insl
in
lds
repnz
lods
sbb
push
cmp
xchg
adc
xchg
pop
mov
xchg
inc
icebp
push
ror
inc
inc
bound
bound
out
arpl
enter
repnz
nop
movsl
call
loopne
dec
fwait
xchg
sub
inc
dec
push
jl
mov
mov
mov
cmc
rcr
sub
push
mov
sbb
pop
mov
push
inc
aaa
jp
lods
sub
rcll
test
imul
out
jmp
arpl
lcall
xchg
mov
cmpsl
aam
popf
mov
movsl
xor
cmp
dec
mov
lret
repnz
lret
imul
mov
daa
in
aaa
daa
jns
nop
inc
outsl
adc
je
cmpb
popf
aad
inc
outsb
test
xor
test
adc
push
sbbb
ret
pop
xchg
in
mov
call
jmp
pusha
fabs
pushf
and
and
or
cli
iret
sub
adc
mov
fbstp
aad
fwait
ljmp
sub
and
mov
adc
sbb
mov
movsl
and
hlt
and
sbb
sub
bound
cs
dec
and
arpl
push
bound
xchg
sbb
imul
adc
into
mov
cmp
mov
sub
cwtl
movsb
shll
insb
mov
xor
or
mov
jb
movsb
ror
jne
sub
aam
xchg
inc
sub
in
fld
ret
xchg
pop
loope
xchg
ds
popa
hlt
pop
dec
mov
loopne
adc
in
mov
xchg
mov
push
aas
xor
mov
and
mov
sarb
inc
push
sti
js
les
in
push
xchg
jmp
adc
push
nop
into
and
loop
xlat
push
outsl
xchg
jge
add
mov
pop
cmpsb
hlt
stc
sub
and
or
mov
addr16
and
ret
sub
mov
xor
enter
call
inc
push
cwtl
pop
aaa
ja
mov
fisubl
mov
mov
mov
fmul
jnp
pusha
or
jbe
sub
aas
scas
sti
xchg
add
stc
stos
leave
fsubp
cmpsb
dec
fwait
popa
enter
cmpsl
xchg
mov
scas
inc
int3
sahf
cld
out
es
pop
inc
ss
xor
pop
data16
into
xor
inc
jle
xchg
jg
add
ret
enter
xor
fwait
sub
out
jne
jae
xchg
mov
mov
mov
dec
dec
add
jns
in
iret
lret
and
daa
sub
pop
add
mov
loope
mov
jmp
adc
stc
popa
push
mov
jmp
inc
mov
jbe
lret
pop
lds
mov
sahf
lds
sub
out
imul
mov
scas
push
inc
popa
aas
mov
or
mov
movsl
jb
adc
xchg
mov
push
out
jbe
push
mov
call
push
test
imul
mov
xor
xchg
lods
inc
lret
xchg
aad
lcall
negb
sub
enter
and
loop
loope
push
xor
or
jbe
imul
jo
mov
add
push
outsb
xchg
jnp
pop
imul
pop
pop
ret
ret
fsubs
push
or
arpl
cmpsl
cmc
mov
aas
sub
aaa
add
and
push
ljmp
push
xor
ljmp
xchg
out
or
dec
lea
dec
or
stos
lock
jecxz
out
fnstsw
fs
mov
and
andb
ret
xor
sti
incl
xchg
pop
loop
xchg
sub
jmp
rorb
and
inc
push
pextrw
xor
xor
jmp
sub
sub
in
push
cmp
test
sub
stos
jmp
popf
insl
jmp
fstl
rcrb
lods
daa
mov
cs
sbb
imul
ja
sub
jbe
shl
loop
mov
aaa
mov
mov
jb
or
aam
pop
inc
lret
xchg
sub
dec
imul
pop
fs
pop
in
sub
sub
icebp
cmc
inc
mov
ljmp
xor
out
mov
jbe
aad
daa
lcall
dec
imul
xor
es
hlt
lds
cltd
outsb
test
mov
in
sub
hlt
in
out
shrb
and
cmc
or
jmp
imul
xchg
and
imul
sub
movsl
or
sub
and
mov
cmp
or
lret
in
sub
or
jmp
shrl
sub
mov
add
in
in
hlt
and
xchg
aaa
cmp
mov
pop
sub
shrl
cmp
push
lods
dec
jmp
ror
call
or
stos
jne
lahf
jbe
leave
pop
mov
jmp
aaa
adc
int3
scas
orb
push
dec
jmp
pop
ss
popa
es
ficompl
and
lahf
lods
jo
enter
mov
push
dec
mov
cltd
rolb
mov
in
aaa
scas
aad
int3
mov
sbbl
xor
jbe
pushf
jbe
mov
imul
inc
mov
imul
fistpll
dec
imul
or
pusha
lods
es
mov
js
dec
mov
mov
lcall
je
mov
mov
xchg
pushl
dec
icebp
arpl
cmp
int
push
add
imul
sub
pop
daa
dec
imul
pop
mov
adc
in
jb
stos
sub
fisubrs
lcall
xchg
jns
adc
std
and
push
sub
std
movsb
aad
mov
cltd
dec
test
into
lahf
imul
mov
mov
cmp
mov
mov
inc
imul
ret
push
inc
add
or
pusha
xor
lds
es
mov
out
in
mov
outsl
test
leave
fstps
sahf
out
mov
push
sub
sbb
lock
adcl
push
pop
lret
scas
push
rclb
dec
xchg
sarb
mov
ja
frstpm(287
inc
loope
xchg
imul
dec
loop
mov
xor
mov
lods
lods
or
dec
jno
ret
lcall
jb
in
mov
mov
in
arpl
push
lahf
fisttpll
mov
xchg
jp
frstor
ja
sbb
psraw
sub
shl
lods
push
push
fildl
xchg
lock
movhps
std
mov
add
mov
test
decl
stc
add
sbb
mov
scas
push
xor
stos
push
sub
stos
mov
push
dec
mov
mov
lods
xchg
and
loop
loopne
pop
xor
cmc
jns
push
mov
or
dec
mov
inc
gs
dec
mov
fldcw
lcall
shr
imul
or
lret
jmp
add
test
sub
jge
or
pop
jle
aad
sub
lret
push
sub
ja
add
sub
fs
pushf
xor
mov
stos
imul
cmp
ret
imul
into
aas
mov
inc
mov
lods
jbe
or
insl
fisubrs
push
pop
scas
pop
lock
mov
push
aad
cmpsb
add
imul
adc
jmp
sbb
mov
push
lds
mov
loope
xchg
ret
or
jmp
shll
dec
aad
ja
push
lahf
adc
lods
leave
insb
and
lea
sub
pop
dec
mov
lock
push
aam
push
push
pop
movb
dec
fsubs
or
mov
cmp
add
and
jmp
sahf
dec
sbb
cmpsl
cmc
aad
andl
xor
into
cld
and
xchg
sub
push
push
xchg
sub
xchg
into
das
jp
insl
cmpsl
in
daa
push
inc
sub
stos
sub
sub
jle
outsl
subl
mov
add
jmp
enter
dec
push
jp
aaa
loop
sub
push
and
and
jb
inc
fidivrl
sub
jo
mov
std
pop
push
je
adc
jne
ljmp
or
test
cli
lods
mov
bound
xchg
mov
jno
stos
adc
xchg
aaa
cmp
inc
movsl
mov
flds
xchg
inc
cmp
xchg
inc
cmp
js
data16
cmp
xor
jmp
int3
fbstp
loop
mulb
sub
aas
cmp
into
dec
jmp
and
out
aam
rcrb
divl
pop
dec
mov
push
mov
das
push
out
mov
mov
movswl
xchg
mov
in
out
pop
enter
popa
mul
lret
jle
lods
push
xor
pop
cwtl
rorb
sbb
lahf
andl
leave
loope
aaa
mov
fldcw
daa
in
loope
xchg
in
jo
stos
jge
stc
xor
inc
mov
stos
fcmovu
cmpsb
mov
jnp
and
cmp
es
xor
mov
fstpt
dec
cltd
daa
cmc
lods
xchg
lds
imul
ljmp
test
in
icebp
mul
stc
xchg
pop
test
xchg
mov
stos
addr16
dec
in
iret
xchg
jmp
inc
mov
sub
xchg
cmp
fldl2t
lods
mov
es
xor
daa
jle
insb
lods
iret
mov
ret
xchg
cmpsb
test
imul
jne
aad
cmpsl
or
adc
aam
outsl
add
aam
dec
mov
pop
test
addr16
pop
cmp
shlb
inc
mov
jo
out
or
jmp
inc
aad
out
lahf
in
xchg
mov
mov
les
cmp
push
stos
xchg
nop
test
and
add
hlt
ss
xchg
adc
push
loope
hlt
mov
mov
cmp
pop
jne
call
mov
cmp
aad
push
fs
pop
dec
push
push
jle
shll
mov
push
arpl
test
jns
sbb
dec
ret
ds
gs
out
sbbl
movsb
push
fadds
fwait
and
push
dec
das
iret
aas
sahf
stos
and
jmp
xchg
fcomps
imul
lods
inc
cmp
and
scas
push
xchg
lret
xlat
cmc
call
out
lock
inc
mov
outsl
divl
fdivp
fcmovbe
add
test
sub
pop
cs
xchg
jae
jno
add
out
mov
push
shlb
fs
clc
push
fistpll
jmp
sbb
test
loope
cwtl
sbb
mov
cmc
cmp
push
xchg
popf
push
cli
sbb
aas
jmp
test
and
xadd
xlat
inc
sub
push
repnz
or
inc
cmc
push
adc
jne
mov
es
outsb
dec
pop
pushf
ja
cmp
sub
mov
mov
lock
xchg
push
pop
mov
xchg
pop
stos
jp
gs
mov
adc
xlat
dec
xchg
jbe
sub
push
pop
mov
jmp
ret
xchg
xor
sti
aaa
in
push
scas
pop
mov
mov
in
and
pop
lods
pop
loope
stos
push
jmp
mov
xchg
cmp
mov
movsb
je
in
dec
stos
pop
insl
mov
mov
bound
rorl
ljmp
pusha
push
mov
lods
scas
lods
lock
pop
lret
lods
push
adc
pop
loope
das
out
and
sub
in
sub
xchg
push
loopne
mov
in
fs
in
test
push
inc
insb
repnz
fs
pop
out
call
pop
loope
adc
adc
stos
inc
lret
stos
test
imul
push
test
adc
cs
or
jne
mov
movsb
es
push
jo
ficoms
in
jge
fs
hlt
lcall
std
mov
mov
mov
fimuls
push
jmp
into
add
aaa
mov
scas
add
inc
or
movsl
xor
and
xchg
push
cmc
es
cmc
inc
sti
xchg
pop
in
mov
sub
jbe
pop
jle
out
jne
push
imulb
mov
es
sub
es
loop
dec
test
mov
add
and
test
mov
jnp
and
sub
sub
in
or
xchg
lods
jecxz
mov
mov
xchg
jb
ja
pop
sub
push
loope
pop
xlat
xchg
in
xlat
add
pop
pop
mov
add
inc
into
in
sbb
in
sub
xchg
rcll
xchg
repnz
cli
xchg
xchg
sbb
xchg
xchg
movl
fs
mov
jecxz
int3
and
enter
dec
cmpsl
push
and
sub
imul
inc
adc
imul
cmp
sbb
pop
inc
xchg
mov
mov
lods
daa
in
sbb
sbb
and
loop
aaa
push
ss
mov
fs
popf
aad
cs
inc
out
jl
aad
mov
aad
add
sub
popa
fldt
or
lods
pushf
stos
dec
out
or
jno
dec
lods
cmpsl
push
fimuls
jnp
into
dec
push
ss
addr16
divb
ss
adc
mov
mov
aad
fisubrs
cltd
mov
cmpsl
test
inc
cmpsl
xor
push
into
lret
mov
fwait
jmp
mov
push
aaa
sahf
mov
push
mov
inc
jns
xchg
cmp
subl
and
add
in
ja
jmp
xlat
lods
inc
jmp
adc
xlat
jecxz
movsl
and
bound
mov
and
jmp
mov
sub
xor
inc
push
enter
scas
or
mov
xchg
mov
cltd
leave
ret
mov
mov
sbb
cmp
lcall
xor
push
push
stc
out
sbb
mov
jbe
test
inc
mov
lds
cmp
loop
ljmp
inc
mov
xchg
add
aas
inc
je
push
arpl
test
cmc
push
cmc
addr16
mov
push
movsl
dec
inc
bound
dec
cmp
out
xor
rcrl
push
cwtl
push
cltd
dec
mov
stos
scas
daa
std
lcall
stc
stos
fstp
imul
in
push
jnp
popf
xlat
jge
pushf
add
testl
jbe
pop
xor
test
cmp
test
in
pop
imul
mov
pop
inc
pop
imul
dec
inc
std
cmp
add
out
jmp
lods
jmp
sbb
push
jle
sbb
mov
sub
mov
sub
ret
jns
sub
sbb
stos
mov
sbb
out
jno
push
stos
lods
ljmp
sub
sbb
mov
subl
xchg
inc
push
jno
daa
out
push
popf
mov
in
enter
fsubr
addr16
dec
js
and
ja
push
sti
ss
aad
sarl
inc
mov
enter
jne
aad
push
lods
or
aad
test
inc
dec
jg
stos
xlat
push
inc
fstps
mov
push
sbbl
jg
orb
sub
fwait
and
in
jne
push
cmp
mov
mov
jp
insb
data16
stc
or
pop
sub
xorps
xor
aad
pop
shlb
test
lods
mov
sbb
push
inc
aad
jmp
mov
jmp
push
aaa
pop
sahf
cmp
mov
out
shl
and
adc
pop
xchg
mov
sti
iret
xor
or
jle
ffreep
xor
add
pop
dec
pop
inc
pop
or
jg
iret
iret
sarl
xchg
test
ret
jg
inc
or
adcb
fldcw
cmp
cmpl
push
loope
imul
rorb
arpl
xchg
insb
in
scas
paddb
mov
mov
roll
popf
nop
loope
push
mov
sub
push
daa
xlat
cmp
js
into
aaa
stos
fs
cli
xchg
sub
jmp
js
or
adc
cmc
or
push
jecxz
jmp
mov
push
mov
sub
inc
xchg
add
cmp
dec
mov
or
int
in
jo
sbb
sub
fldcw
jl
cmp
pop
int
mov
xchg
pop
sub
lds
fcoms
andb
in
pop
xchg
xchg
scas
cs
xchg
sbb
out
push
imul
fcoms
xor
sub
push
jbe
lods
pop
push
fsubrs
andnps
popf
jg
jbe
mov
out
mov
inc
enter
xor
outsb
outsb
and
cld
lock
sub
xchg
push
sbb
fisubrs
shrb
or
xlat
mov
push
sub
jo
sub
test
int
dec
xchg
scas
adcl
lds
jbe
std
xchg
ss
push
inc
xchg
call
cmc
jmp
imul
push
and
lahf
mov
xor
pop
xor
enter
xor
push
test
pop
jmp
xchg
mov
cs
and
jbe
sar
inc
cmp
mov
xchg
sub
or
or
js
push
roll
aaa
lret
aas
push
insl
and
into
test
enter
jl
fneni(8087
push
xchg
mov
call
fwait
lods
movsl
sub
push
xor
dec
jbe
gs
lods
rcll
imul
int3
sahf
mov
mov
shll
fadd
mov
xchg
push
xor
insb
in
jo
iret
mov
or
jo
lret
sub
leave
dec
rcl
ffree
jmp
or
scas
loopne
or
push
sub
imul
pusha
into
lds
je
or
jle
jl
loop
jnp
cmc
or
mov
js
adc
sub
cmp
mov
lcall
mov
push
cli
mov
popf
fxtract
dec
loope
addr16
leave
lds
aas
jmp
add
cmp
iret
mov
push
sub
enter
jne
lds
mov
outsl
fwait
nop
xor
push
cs
enter
jecxz
int
out
mov
jnp
movsl
scas
lods
mov
out
test
aad
push
pop
xorb
movsb
int
xchg
ja
xchg
aaa
jg
xlat
incl
jmp
movsl
jecxz
pop
sbb
inc
sbb
jns
movsb
and
xor
jle
push
mov
std
test
pop
sbb
or
cmp
aad
sbb
aad
callw
fs
mov
push
dec
xchg
outsl
filds
stos
push
pop
test
jbe
ljmp
aad
cltd
push
mov
sub
imul
and
test
in
jmp
sub
push
insb
jmp
adc
out
cmp
add
mov
push
out
dec
cld
ljmp
int3
adc
adc
xor
ds
jle
mov
cmp
mov
fwait
test
pop
fs
push
das
pop
jbe
lahf
mov
and
xchg
lret
icebp
or
sub
pop
sub
mov
iret
push
cmp
std
out
ret
ja
sub
ja
add
out
in
mov
lods
cmpsl
test
add
and
fwait
std
and
pop
scas
iret
xlat
jge
and
mov
stos
sbb
imul
push
test
adc
add
push
test
inc
aas
cmp
and
pushf
insl
push
das
inc
ljmp
inc
and
scas
mov
dec
das
in
pop
adc
or
sbb
decb
dec
inc
imul
inc
addr16
cwtl
aas
fdivs
cmpsb
xchg
sub
jecxz
inc
mov
aad
in
xor
mov
pop
xor
out
mov
loop
repnz
je
and
imul
xchg
mov
imul
stos
pop
xchg
sbb
lahf
gs
and
mov
xchg
add
repnz
sub
insl
xor
insb
jo
orl
dec
and
dec
lock
and
call
jne
push
mov
nop
push
stos
gs
outsb
sti
call
shlb
repnz
push
adc
stc
ss
push
jmp
movsb
insb
mov
out
jmp
sub
subl
mov
test
mov
insl
cmp
jne
stos
mov
mov
jb
and
jmp
std
into
jmp
jnp
push
sbb
push
sub
sub
aaa
in
mov
jecxz
add
sti
sub
mov
das
insl
mov
addr16
push
int3
lcall
push
and
imul
fcoml
cs
mov
jmp
mov
daa
sub
imul
ret
cmp
inc
mov
loopne
incb
scas
rclb
stc
scas
push
add
cwtl
js
daa
imul
push
mov
push
jecxz
or
aad
fistl
xorb
xchg
sbb
pop
sbb
loop
cmpb
inc
mov
push
mov
dec
aaa
push
mov
adc
dec
mov
xchg
mov
push
cmp
pop
popa
mov
icebp
sub
add
sbb
sbb
popf
insl
loop
sbb
filds
arpl
fwait
mov
sbb
test
sub
sbb
scas
pop
outsb
cmp
scas
mov
xchg
push
das
or
stos
shll
adcb
lret
mov
cmpsl
push
mov
push
add
pop
stos
mov
into
pop
dec
repnz
push
cmp
jmp
in
mov
sbb
aam
ss
in
mov
lods
mov
idiv
scas
in
lds
loopne
pop
ljmp
cmp
test
push
cmp
imul
fldlg2
imul
test
add
or
cs
test
jae
add
push
mov
pushf
jg
mov
cmc
daa
aad
jo
lods
ds
shlb
test
xor
filds
xchg
lea
leave
and
jbe
xchg
daa
lret
mov
cmp
mov
shr
push
iret
pushf
or
mov
lods
jbe
xchg
into
data16
mov
dec
sti
mov
stos
xor
cmpsb
and
mov
and
dec
in
mov
out
outsl
iret
aad
mov
popa
mov
xlat
sub
lods
push
ds
test
test
push
call
scas
into
inc
rcll
lcall
roll
sub
mov
mov
dec
hlt
or
mov
fisubs
fnstcw
mov
jecxz
in
shll
add
mov
stos
add
out
out
mov
call
adc
add
loop
in
fs
mov
jmp
retw
xlat
imul
iret
nop
mov
aad
push
push
aad
xchg
call
icebp
aad
int3
sbb
xor
int
xor
int
mov
jg
aad
mov
clc
and
xchg
push
push
xor
pop
fwait
dec
lods
jmp
aad
cli
test
gs
sbb
fdivrl
mov
xor
pushf
lods
pop
jg
fldenv
addr16
adc
repz
and
hlt
jmp
mov
mov
mov
xor
pusha
test
sub
dec
inc
add
mov
mov
orb
mov
in
jmp
jb
xchg
xchg
rorl
icebp
jbe
mov
push
cmpsl
jne
push
mov
xchg
lock
mov
divw
add
test
fwait
and
push
scas
mov
xchg
addr16
fcmovu
lahf
mov
jge
es
aad
xchg
xchg
sub
fs
mov
mov
jmp
adc
xor
fldcw
adcl
out
push
xlat
inc
fldt
ss
addb
fcomip
inc
push
cmp
mov
xlat
or
in
add
mov
and
out
jbe
push
ret
mov
cmp
adc
adc
mov
mov
push
sbb
bound
aad
add
xchg
insl
icebp
dec
rcl
cmp
test
cmpsl
das
xchg
out
cs
push
es
fistl
cmp
lahf
lds
aaa
stos
mov
sub
lret
arpl
xchg
out
loopne
scas
out
ljmp
cmp
loopne
sbb
rclb
lods
inc
lret
and
jp
call
push
arpl
insb
push
push
mov
inc
xchg
mov
loopne
or
stos
mov
imul
add
and
gs
xchg
ret
int
out
xor
sub
add
iret
sbb
xchg
add
loop
aad
fwait
jo
test
jbe
scas
adc
popa
mov
dec
sar
mov
mov
or
xor
or
dec
imul
loope
mov
or
mov
mov
mov
mov
dec
push
pop
mov
push
push
mov
cld
cmp
movl
leave
fwait
stos
and
cmp
out
push
js
in
les
push
lods
jmp
ss
jmp
cmp
ja
sti
dec
dec
fcoms
inc
addr16
sar
sbb
jge
jecxz
pop
jmp
mov
in
dec
pop
mov
ss
sub
dec
sub
sub
mov
insl
stos
outsl
inc
cld
pop
lock
sarl
mov
xchg
dec
insb
inc
mov
fnstcw
nop
mov
push
or
movl
xor
ds
int
jmp
xchg
out
push
add
lea
scas
lods
hlt
mov
sub
sahf
jbe
mov
into
cmp
gs
xor
sub
lds
stos
jle
mov
or
nop
pop
testb
ss
inc
repz
and
rcll
out
cmpsl
push
sub
mov
insl
dec
in
testb
pusha
ja
xchg
cli
mov
lret
mov
sbb
stos
and
out
push
jmp
or
pop
andl
dec
ja
mov
sarl
imul
mov
xchg
push
jmp
push
xlat
mov
shll
mov
icebp
sub
daa
cmp
jne
les
lea
aaa
mov
ja
sub
pop
cmp
ja
inc
inc
das
mov
and
add
out
mull
into
loope
mov
jae
inc
call
xor
mov
adc
test
insl
pop
pop
addr16
jbe
lock
movsl
hlt
push
jp
fs
xlat
aad
aad
cs
aaa
xchg
push
lods
scas
lods
in
add
outsl
mov
pop
xchg
lods
jbe
hlt
dec
sbb
adc
adc
aaa
movsl
stos
adc
je
xchg
mov
or
adc
xor
cmpsl
jle
movsb
pop
jnp
das
mov
inc
and
cmp
xchg
mov
imul
xchg
jle
imul
and
lret
jns
cli
movsb
xchg
icebp
das
xchg
sarl
push
arpl
lods
sub
scas
test
cmp
push
inc
bound
mov
push
inc
push
cmp
ja
sub
add
in
or
pop
sti
nop
mov
xchg
xchg
adc
das
loopne
in
fildl
addr16
jle
out
leave
test
mov
push
mov
pop
push
sub
test
jle
xchg
rclb
gs
jo
cmp
add
mov
pop
pop
push
not
out
fdivrl
and
rcrb
cltd
push
push
jne
movsl
lahf
or
add
subb
fld
lods
push
sbb
ja
add
jecxz
push
bound
jecxz
push
push
pop
dec
mov
mov
cmova
lds
cs
lds
popf
das
into
mov
add
pop
dec
inc
add
push
and
jl
push
xchg
or
pop
hlt
push
out
sbb
adc
pop
loopne
mov
stos
ss
dec
lret
sub
xchg
arpl
sub
sbb
out
scas
or
or
mov
jb
adc
test
popf
or
sub
lcall
into
push
rolb
lahf
cmp
inc
push
ljmp
loop
mov
loope
jg
add
addb
clc
or
mov
pop
clc
clc
inc
subb
add
push
xchg
es
pop
scas
push
vcvtsi2ss
or
inc
enter
dec
mov
and
mov
add
inc
fstps
out
jmp
jne
sub
mov
repnz
and
in
pusha
pop
xchg
xor
mov
std
xor
popa
cltd
xor
sbb
xor
jmp
sub
sub
in
mov
in
mov
ret
in
lret
fwait
sub
lods
sub
adc
lods
or
inc
call
stc
xchg
mov
ret
call
sbbl
daa
sbb
ret
imul
mov
lds
das
test
iret
dec
xor
mov
add
pushf
mov
xchg
and
stos
test
sub
in
jl
adc
repnz
cmp
push
mov
adc
loope
inc
adc
xchg
cmp
movsl
hlt
mov
xchg
in
fwait
imul
mov
push
mov
mov
lock
jmp
scas
shrb
adcb
in
in
fucom
ja
fstp
in
loope
in
or
insb
or
std
or
arpl
mov
sub
xor
mov
leave
addr16
into
xorb
adc
es
in
lods
sbb
and
cmpsl
les
xchg
xor
xor
ss
into
jecxz
loope
in
lds
insb
or
mov
add
imul
movsb
or
xor
shrb
mov
pop
divb
cmpsb
push
out
jbe
aad
in
cmpsb
adc
sbb
das
jg
das
mov
xor
and
test
icebp
mov
push
cwtl
pop
sub
ss
pop
daa
dec
mov
mov
sub
in
jg
sub
mov
rorb
imul
ret
and
sbb
xor
sub
mov
ret
arpl
jbe
and
test
push
push
adc
mov
xchg
stos
mov
cltd
xchg
jne
jg
aaa
test
sahf
dec
inc
cs
aaa
push
insb
push
lret
movsb
cld
mov
push
jmp
test
sub
lods
inc
int
xor
dec
mov
movb
pop
xchg
iret
fnstcw
pushf
sub
lcall
sbb
das
jo
bound
sub
iret
hlt
dec
sbbb
lret
in
iret
rolb
addb
dec
paddd
imul
lcall
jnp
pop
push
in
aad
mov
mov
rolb
push
sub
into
jmp
cmp
das
pop
aas
dec
sub
sub
xchg
push
loopne
push
fistps
sub
add
jmp
mov
pop
stos
jg
push
mov
sub
sbb
mov
daa
ljmp
mov
ljmp
sbb
adc
xor
test
icebp
ret
push
ljmp
call
stos
fsubrs
in
imul
stos
pop
pop
inc
xchg
xlat
push
aad
jo
push
std
ljmp
fisubs
xchg
push
aad
stos
push
xchg
daa
push
or
push
lock
xor
xor
xchg
bound
aad
and
sub
xchg
inc
push
pop
mov
jmp
mov
and
adc
scas
and
sti
lds
cmp
inc
xor
adc
push
sub
sub
hlt
cmp
and
dec
add
outsl
mov
cmp
sub
lds
and
insl
sub
movsb
or
inc
stos
and
movsl
outsb
cmpsb
jecxz
lahf
movsl
stos
jmp
adc
xchg
jg
movsb
adc
cs
or
hlt
sub
inc
imul
xchg
or
or
aaa
cmpsb
sbb
xchg
mov
mov
xchg
pop
out
js
lods
add
clc
xchg
paddq
mov
ds
inc
jns
push
ljmp
push
cmp
ret
in
js
rorl
movsl
sbb
cli
rolb
xchg
repz
mov
or
fwait
lret
xchg
or
pusha
pop
pop
sbb
daa
jne
xor
inc
cmpsb
pop
xchg
sbb
mov
cld
add
out
mov
fcomp
cmc
push
mov
setae
inc
push
jbe
mov
out
bound
sbb
leave
aad
notb
scas
xor
sahf
loop
sbb
mov
push
je
xchg
out
jmp
repz
or
loope
pop
xchg
mov
sub
in
stos
and
or
xchg
xchg
dec
push
mov
add
add
fwait
xor
ljmp
lcall
add
mov
out
add
call
fiaddl
xor
sub
dec
inc
lret
inc
xchg
sbb
jae
xchg
mov
lcall
in
aaa
lds
lret
add
adc
push
mov
movsb
fsubrp
jne
jecxz
and
in
pop
loope
aad
mov
aad
es
sub
fwait
cli
mov
lret
notl
stc
xchg
lock
imul
cli
cmp
pop
les
jo
mov
jae
inc
add
ss
fsubp
push
imul
mov
pop
push
mov
movsl
push
in
cmp
push
inc
and
and
notl
iret
jmp
xor
xor
fs
int3
pop
mov
add
adc
lcall
fsubr
mov
dec
pusha
xchg
dec
push
mov
push
mov
fdiv
sub
jbe
in
mov
add
jmp
call
jp
push
mov
and
aad
out
sbb
mov
cli
xlat
mov
loope
fsubrs
cmpsl
inc
pop
inc
lret
shl
mov
inc
mov
mov
or
aad
push
sti
divb
mov
mov
notb
inc
das
xchg
lcall
out
cmpsb
bound
imul
testl
insb
mov
jp
cmp
or
adc
in
inc
sahf
sub
movsb
or
xor
sbb
aaa
sub
cli
dec
rcrl
out
fildll
out
lds
dec
ss
inc
pop
ret
lcall
jmp
scas
test
jmp
or
xor
xlat
out
movups
mov
add
mov
dec
test
push
dec
out
sbb
dec
adc
imul
aad
xchg
out
xchg
imul
leave
stos
push
sti
ljmp
test
inc
rorl
test
sub
mov
dec
stos
push
push
daa
xchg
aad
fsubp
clc
pop
xlat
sbb
dec
adc
jmp
mov
stc
sarl
test
js
mov
mov
aam
inc
mov
adc
xor
in
lcall
cmp
std
dec
pushf
insb
pop
test
insl
outsb
in
subb
arpl
pop
push
ds
mov
xor
mov
sub
adc
mov
pop
sar
push
shll
in
daa
push
movsl
and
jmp
push
fs
sub
push
mov
mov
dec
cmp
mov
popa
xlat
lock
stc
push
pushf
jecxz
pop
aaa
ss
les
jne
xor
movsl
sbb
fisttpll
imul
jg
adc
cli
fwait
mov
jb
dec
add
push
jbe
push
dec
inc
or
int
sub
mov
mov
pusha
mov
nop
mov
stos
imul
aad
test
xchg
mov
stos
aad
pushf
lods
xlat
cs
pop
mov
sub
scas
mov
pop
cmp
dec
dec
loop
xlat
sbb
pop
lock
push
ljmp
adc
aas
mov
imul
jbe
push
pop
hlt
lcall
xor
or
jg
mov
testl
je
sbb
pop
imul
test
inc
push
xor
icebp
cmpsl
pop
adc
mov
pushf
or
lock
fildll
and
daa
imul
mov
jp
dec
cmp
jmp
dec
jbe
push
call
mov
arpl
mov
ss
icebp
movsl
ds
pop
lods
cltd
lods
mov
push
es
mov
movsl
mov
push
shll
push
test
daa
aad
imul
xor
cmp
into
iret
and
ljmp
push
mov
addr16
iret
adc
or
sarl
adc
push
inc
outsl
pop
sarl
test
lods
addr16
shrb
outsb
into
add
je
sub
stos
fadds
jmp
popa
sub
xchg
xor
adc
mov
xchg
aam
sbb
lds
in
or
shlb
adc
leave
test
leave
dec
inc
add
es
mov
out
dec
rorl
sub
push
or
pop
mov
int3
push
jmp
scas
call
add
mov
jns
aas
fnsave
dec
push
xor
aam
push
jns
in
idivb
add
push
mov
xchg
sub
test
fldcw
les
and
lock
insb
das
xlat
sahf
adc
insb
sub
lea
test
sbb
inc
pop
inc
cmpsl
jecxz
and
imul
stos
mov
je
ret
stos
out
addr16
sbb
jmp
pop
inc
dec
xor
cmp
test
scas
mov
mov
mov
xor
jne
aaa
aad
dec
sub
push
int3
cmp
mov
pop
jbe
or
pop
xor
fnstenv
aad
jmp
aaa
or
cmc
cmp
imul
add
inc
sbb
rolb
cltd
pop
inc
sub
dec
je
mov
pop
in
lret
pop
jmp
xchg
push
cmc
gs
mov
movsl
aaa
push
jne
mov
and
sub
mov
cmp
mov
jae
cs
mov
leave
dec
jb
scas
jb
cmpsb
fisttps
xor
xlat
inc
sbb
inc
imul
andb
scas
jmp
sbb
je
pop
aas
ljmp
scas
imul
into
xor
aaa
mov
daa
mov
mov
dec
pop
mov
mov
add
loope
dec
push
fisttpl
es
jbe
in
mov
push
or
inc
out
sti
sarb
out
cs
in
xor
jb
ljmp
je
cmp
dec
cmpsb
insl
shlb
cmc
or
dec
je
ror
xlat
enter
test
xchg
in
inc
push
cmp
add
test
dec
mulb
pop
loopne
leave
sahf
mov
xor
icebp
push
mov
or
mov
out
mov
mov
push
xlat
mov
mov
pop
ja
jmp
daa
push
pop
lods
mov
sub
rcrl
jecxz
xor
out
divb
adc
jb
int
cmp
jbe
ljmp
rcr
rcrl
lds
jp
push
mov
and
sub
fs
xor
aad
xchg
insb
jns
daa
pusha
and
sub
and
in
adc
into
cmovb
aaa
imul
cli
mov
xchg
insl
jae
into
inc
test
pop
in
push
xor
cmc
mov
add
pop
jecxz
lods
xchg
add
jmp
sub
enter
sub
sub
xor
lds
and
enter
stc
add
aad
cmc
push
cmp
sub
or
push
shlb
cmc
pop
push
ret
xchg
push
push
lods
xchg
and
xchg
xchg
mov
dec
xchg
sar
leave
int
imul
inc
push
adcl
stos
inc
mov
sub
pop
addr16
dec
scas
cmp
sub
jnp
and
push
sbb
dec
fdivrl
dec
clc
into
jle
inc
mov
sub
cld
xlat
scas
in
js
sahf
mov
xchg
cli
inc
call
inc
insl
cmpsb
dec
scas
push
push
cmc
cwtl
dec
out
jecxz
fmuls
jge
pop
cltd
sub
outsl
sub
fnsave
or
inc
enter
int3
leave
js
daa
sub
cmp
or
jecxz
inc
int3
out
inc
jno
inc
fsubl
sbb
sub
lods
cmp
mov
dec
fcompl
fcoml
xchg
mov
mov
cmp
push
xchg
pop
fldl
xor
loop
push
cs
inc
push
sti
cmc
outsl
out
stos
push
xlat
aas
movsl
imul
sbb
ret
xchg
add
inc
movsb
in
fadd
jbe
leave
sti
in
jbe
inc
fidivrl
push
mov
jmp
cmp
arpl
inc
in
ret
clc
xchg
push
jecxz
lret
imul
mov
cmp
mov
jo
lods
or
pop
sub
ljmp
jbe
xor
adc
out
out
adc
fld
daa
and
fsubrs
push
dec
dec
push
push
mov
sahf
xchg
mov
push
sbb
out
cmc
inc
fsubrp
aad
into
dec
mov
fsubr
popa
xchg
jbe
mov
xor
pop
cli
pop
sbb
jecxz
nop
dec
sub
xchg
scas
fwait
mov
ss
pushl
lret
ss
pop
xchg
movsb
pop
test
mov
jle
stos
pop
out
into
in
cmp
and
insb
sahf
mov
cmp
sahf
or
mov
inc
stos
pushf
in
aas
pop
inc
mov
sbb
adc
aaa
dec
add
and
jns
xchg
ret
enter
xchg
dec
cmc
inc
test
mul
mov
outsb
push
js
pop
push
clc
or
or
pop
push
xor
mov
cmp
inc
pop
jne
imul
pop
xchg
xor
pushf
out
and
loop
sarb
iret
imul
out
leave
xchg
xchg
leave
repz
xor
pop
fs
sbb
mov
call
cs
pop
mov
jecxz
enter
call
out
sub
sarl
dec
jecxz
insl
mov
mov
jb
cmp
shl
xlat
in
je
cmp
add
xor
mov
loopne
cmpsl
jbe
pop
push
dec
mul
mov
or
insl
push
test
into
test
jecxz
or
lds
xor
push
pop
mov
enter
test
mov
mov
inc
iret
push
aaa
test
jmp
or
mov
mov
push
or
fbstp
iret
out
adc
cmc
sub
xchg
or
fsubrs
xchg
dec
add
aaa
xchg
imull
shlb
das
in
bound
fidivrs
out
test
pop
test
add
rcl
mov
sub
into
adc
test
notl
leave
xor
push
ja
mov
stos
sub
push
fld
iret
imul
pop
sub
cmc
push
testl
jle
fdivp
mov
cmc
int3
jae
and
repz
sub
mov
fadd
jbe
mov
inc
ljmp
xor
sub
fisubrl
clc
pop
xor
clc
or
clc
fadd
stos
pop
ss
inc
and
lcall
fildll
stos
adc
sub
insl
or
lret
popf
push
in
mov
push
call
mov
test
add
int
sub
es
add
out
movsl
dec
movsl
movsb
sub
pop
cmpsl
fst
pushf
fwait
sub
bound
sub
enter
xlat
call
icebp
stos
push
mov
or
outsl
xchg
sbb
xchg
popf
or
adc
xchg
push
lods
xchg
cli
lret
mov
sbb
push
sbb
js
int3
and
idivb
lds
xchg
aad
testl
add
push
xor
push
cmpsb
sbb
outsb
mov
aas
pop
xchg
jecxz
mov
pop
inc
lock
dec
je
sbb
inc
jbe
sbb
mov
and
out
lock
sbb
cmp
push
out
leave
push
xchg
and
inc
or
call
inc
push
cld
outsl
xchg
ss
and
dec
sahf
pop
or
insb
mov
inc
jmp
je
es
cmc
push
mov
dec
aad
scas
js
sub
and
dec
loop
jge
into
dec
xor
jg
dec
loop
loope
cmp
add
or
cmp
clc
or
jne
insb
mov
lcall
or
xlat
jecxz
les
xchg
aad
push
iret
leave
or
idivl
xchg
xchg
inc
mov
cmc
stos
cld
mov
leave
lods
shrb
mov
pop
dec
cltd
xlat
lods
ljmp
loope
test
das
mov
xlat
mov
rep
mov
repnz
dec
dec
lret
out
pop
xchg
jns
aam
out
fisubrs
push
pop
aad
push
das
or
js
aaa
pop
xchg
cmc
adc
aad
aaa
pop
daa
in
jmp
iret
loop
push
in
push
sti
jae
sbb
pop
push
jge
cmp
or
jp
outsb
jecxz
fwait
adc
rcrb
xlat
xchg
dec
lcall
xchg
xlat
data16
mov
lret
pop
push
cmpsl
xchg
mov
xor
push
imul
lods
jl
sub
mov
out
shr
xchg
xchg
notb
test
cmpsl
cmp
mov
jnp
popa
mov
cmp
mov
decb
sbb
and
minps
outsb
jbe
jg
jbe
or
sub
push
ja
mov
fs
enter
cwtl
xchg
jecxz
sub
and
mov
or
sub
xchg
mov
call
pop
cli
imul
mov
sub
stos
mov
push
push
lods
jmp
icebp
xchg
inc
call
jecxz
ret
mov
mov
add
jecxz
push
sbb
aas
xchg
mov
in
jnp
mov
cmp
stos
push
aad
ss
ss
jge
xor
fcomps
cmp
imul
sub
mov
add
jmp
add
std
inc
iret
mov
ss
shlb
jmp
and
pusha
mov
out
xor
jae
or
and
out
mov
push
adc
push
mov
in
hlt
cmpsl
popa
in
jns
inc
lock
xchg
les
jns
ret
int
cmp
jge
int
pop
adcb
addr16
cltd
or
popa
in
subl
jg
mov
loope
and
adc
in
enter
test
lock
popa
enter
dec
clc
jp
ss
aam
subl
xchg
mov
mov
inc
add
in
movsl
adc
or
mov
mov
jle
push
fcompl
mov
mov
push
push
xchg
fsubr
xchg
xor
out
cmp
and
jp
fcomip
adc
imul
sub
movsb
cmpsl
xorl
movsb
xchg
add
rcll
add
fsubr
enter
pop
inc
jecxz
mov
mov
ret
and
ja
sub
push
sub
es
sbb
jno
ss
mov
and
out
mov
jae
in
mov
push
out
push
fisubrs
cld
std
mov
fsqrt
ljmp
les
in
leave
clc
mov
xchg
adc
in
mov
jp
outsb
movsl
loope
inc
in
lret
rorb
mov
push
cld
jbe
test
data16
sub
or
movsl
jmp
jno
fxch
pop
add
mov
daa
and
push
xchg
inc
ljmp
cmc
or
out
cmp
repz
jns
out
fsubrs
and
cwtl
js
outsl
cmc
mov
xchg
std
mov
adc
fimuls
shrl
imul
jecxz
mov
out
in
fisubl
mov
out
lret
sbb
sub
pusha
movsl
pop
test
ljmp
push
push
test
popa
rolb
loope
int3
sub
adc
outsl
jle
mov
out
mov
leave
mov
sub
clc
daa
xchg
cmp
fcoml
inc
ljmp
pop
or
out
rcl
stc
cmpsl
add
ret
arpl
scas
imul
jns
xchg
fsts
into
adc
pop
pop
jae
ss
es
adc
movsl
aaa
xchg
pushf
fsub
sahf
xchg
inc
push
mov
push
pop
and
ljmp
push
jo
insb
mov
mov
bound
testb
jg
aas
pushf
in
pop
mov
loopne
fidivrs
cli
jmp
sub
xchg
aaa
dec
mov
push
outsl
clc
decl
xchg
and
aas
sbb
decl
lea
dec
jl
int
mov
mov
pushf
inc
push
mov
cmp
inc
pushf
sub
leave
imul
int
inc
push
jno
cmpsl
pop
mov
loope
test
loope
mov
in
cmc
fimuls
mov
bound
cmp
dec
add
mov
loope
mov
dec
xchg
dec
scas
icebp
jmp
in
scas
ja
lret
or
fsubr
push
data16
outsb
jbe
in
imul
cmc
pop
dec
pop
mov
aaa
jns
jbe
sti
adc
in
mov
cli
cs
shll
loop
aas
inc
cmpsl
adc
and
fdivs
mov
mov
pop
leave
call
xlat
dec
push
out
test
sub
jecxz
call
test
pusha
out
test
xor
popl
adc
dec
adc
test
add
outsb
test
mov
jecxz
mov
fiadds
mov
dec
mov
ret
lods
mov
ret
add
lret
lret
mov
sub
mov
shr
or
pop
dec
sbb
and
and
push
cs
mov
pop
cmpsl
xchg
and
sub
mov
and
cmpsl
dec
leave
cmp
out
xor
cmp
xor
adc
fwait
test
jmp
xchg
test
jecxz
clc
imul
sub
ds
aad
into
mov
bound
insb
leave
popf
in
xchg
inc
xor
dec
xor
lret
das
push
lods
cs
mov
and
sub
and
arpl
push
aad
lds
fcmovb
fwait
mov
sub
jle
in
or
push
enter
andb
aad
cmp
movq
jmp
xor
lahf
push
test
mov
daa
jmp
mov
jbe
dec
or
add
cmpsb
ret
push
jbe
stos
jg
push
mov
inc
in
sbb
push
lods
mov
out
push
jmp
sub
mov
insl
repnz
in
and
mov
cltd
xor
and
push
loopne
not
and
sbb
cmc
xlat
jmp
pop
cmp
cmc
adc
cmc
rclb
cmpl
int3
mov
push
mov
dec
rolb
andl
daa
cmpsb
imul
pop
test
mov
divb
mov
pop
push
test
lds
jge
push
in
mov
outsl
test
adc
and
test
pop
test
imul
dec
pusha
shlb
lods
test
js
pushl
jne
or
adc
aam
jo
push
mov
out
addr16
mov
mov
sbb
mov
pop
mov
jmp
hlt
cmpsb
lcall
sub
cmp
nop
jmp
mov
movb
es
jmp
sub
sbb
in
jecxz
sbb
fwait
in
push
ljmp
add
pop
call
mov
stos
in
inc
hlt
int3
mov
mov
push
adc
pop
push
sbb
or
arpl
pusha
outsl
loopne
cmp
xchg
dec
pop
dec
cs
xor
mov
jge
add
dec
dec
dec
jo
dec
xchg
push
mov
imul
ss
ds
mov
dec
mov
dec
mov
cwtl
mov
cmpsb
pop
push
xor
test
jmp
in
fistps
mov
dec
cs
movsb
cmp
jle
es
scas
jle
out
test
sbb
lret
push
xor
call
cmp
dec
mov
ds
in
mov
jg
into
out
data16
jecxz
ljmp
and
xor
cmpsl
add
data16
push
push
mov
cmc
idiv
bound
iret
pop
mov
lods
push
sbb
mov
push
pop
adc
movsl
jg
jnp
movsb
sbb
and
test
je
sub
scas
mov
pop
add
sub
mov
mov
sub
sub
add
inc
ja
add
imul
push
arpl
jp
sbb
pop
call
push
shl
flds
cli
pop
push
fnsave
test
mov
mov
cmpsl
push
mov
rorb
out
aas
xchg
mov
aas
lods
test
popf
inc
cli
or
inc
repnz
push
out
movsl
test
loopne
lods
jo
mov
push
inc
push
addr16
dec
icebp
push
adc
in
addr16
popa
stos
xor
test
movsl
scas
xchg
in
nop
in
sbb
in
push
insl
cmp
imul
xlat
dec
out
test
in
das
dec
test
push
and
push
mov
sub
imul
dec
mov
dec
sti
stos
push
sbb
rclb
in
cmp
mov
xor
push
popa
fbstp
xor
mov
rcrb
ljmp
lret
sbb
mov
pop
aad
cmpsl
dec
mov
inc
sub
pop
sub
jno
or
repz
ret
mov
jo
js
je
add
sub
jp
scas
icebp
daa
mull
xor
add
inc
and
imul
mov
ss
xor
dec
mulb
mov
cmpsl
dec
enter
aad
xor
in
out
mov
pop
inc
push
cmp
lahf
movsb
mov
out
nop
ss
jle
dec
xchg
rcl
notl
leave
cld
cmpsl
scas
scas
ljmp
leave
cmpsl
imul
dec
jge
mov
push
jno
xchg
roll
ds
scas
into
lods
lods
test
inc
jecxz
int3
jl
sbb
pushf
in
test
jecxz
dec
rorl
arpl
lret
into
push
push
fmull
inc
sarb
aas
in
dec
call
imul
cmpsl
test
loop
xor
sbb
ret
arpl
stc
jle
enter
out
iret
fists
stc
mov
imul
push
xor
jmp
pop
jl
pop
push
xchg
jns
mov
xchg
xor
jmp
or
jmp
test
lds
cmpsl
sbb
bound
xor
out
adc
jmp
mov
mov
xchg
cmp
out
in
in
mov
jmp
movsl
pop
cmc
jbe
dec
push
push
stos
data16
rorb
mov
push
jo
cmp
lds
shll
gs
dec
pop
pop
js
cltd
sub
pop
mov
mov
inc
xchg
lcall
xchg
adc
and
pusha
out
rclb
and
xchg
mov
imul
popf
cmp
pop
sbb
add
add
sbb
jae
in
push
test
mov
aaa
fisubs
addr16
dec
cmp
lret
or
stc
sbb
insb
ja
std
shrl
mov
in
push
aaa
es
and
push
in
cmpsb
ljmp
daa
stos
outsb
push
jmp
sub
and
loope
adc
push
jp
inc
aam
loop
and
cmp
push
jns
lods
and
lods
in
push
xor
and
mov
pop
sbb
std
in
push
pop
in
loope
popl
lods
sbb
lahf
mov
movsl
in
and
jo
xchg
sarl
sarl
enter
loop
fs
shlb
into
in
or
ret
aad
add
daa
fsubs
call
inc
aaa
xchg
sar
lret
xlat
ss
enter
push
movb
les
or
adc
mov
cmp
jmp
jbe
sbb
cmp
nop
xchg
fcomps
jp
js
mov
push
mov
mov
xorb
push
or
cltd
cmpsl
lods
mov
xor
pop
mov
cli
and
repz
sub
xorl
std
push
in
aad
pop
daa
fidivs
mov
fldenv
inc
push
test
rcrb
stos
push
adc
insb
popf
xor
adc
or
sbb
mov
or
push
pop
jmp
lods
data16
and
insl
push
xor
outsb
aaa
loop
push
lahf
imul
xchg
inc
or
imul
add
mov
mov
mov
ja
dec
out
lahf
and
mov
ljmp
mov
xor
xor
call
mov
inc
rol
inc
in
imul
sti
mov
xchg
cmp
fdiv
xchg
ss
dec
jne
testb
push
sahf
cmp
and
xchg
loope
xlat
xor
mov
out
dec
sbb
mov
dec
scas
call
jmp
lods
outsl
push
imul
jbe
or
jmp
pop
pop
pop
dec
push
mov
icebp
cmc
xchg
mov
ds
pop
divl
cmp
inc
ja
test
mov
popf
and
test
imul
fstp
lret
into
dec
repz
push
test
inc
push
xlat
mov
subb
push
enter
test
push
addr16
in
mov
sub
xchg
out
shlb
pushf
cmp
decl
and
cwtl
jae
mov
imulb
jne
adcl
jle
and
cmp
cmpsl
sub
add
sub
cltd
cmc
shlb
enter
and
repz
les
shll
scas
mov
iret
int
sbb
fdivr
push
insl
ficomps
ja
inc
addr16
jmp
mov
mov
in
cs
cli
lret
mov
mov
pushl
sub
lds
adc
clc
call
setl
jle
xchg
test
out
jecxz
or
ds
out
jg
loope
jns
push
mov
mov
jge
test
push
mov
jmp
stos
in
lret
push
dec
repnz
movsl
in
mov
negb
or
sbb
sarl
std
sub
xchg
movsl
pop
rcl
lret
bound
xor
inc
xlat
mov
pop
dec
adcb
inc
mov
cmpsb
in
cmp
or
or
cmpsl
push
sbbb
push
pop
mov
lds
test
jle
dec
out
xor
into
mov
popf
cmc
mov
jmp
mov
jbe
ret
mov
cwtl
mov
pop
push
xor
add
push
and
xchg
pop
aad
clc
lret
add
xchg
jnp
or
sbb
imul
clc
out
outsb
js
jle
int
scas
ret
repnz
sbb
inc
movsl
cmc
lds
popa
negb
mov
cmpsl
xchg
push
aaa
out
popa
pop
out
dec
test
dec
push
cld
popf
sbb
xor
les
ror
cwtl
jae
fwait
cld
push
pusha
in
in
leave
xchg
in
std
mov
adcl
test
xchg
test
leave
inc
stos
adc
aaa
xlat
dec
cmp
inc
pusha
test
stos
jecxz
mov
pop
jp
pop
jmp
push
imul
mov
pop
inc
sub
jbe
insb
jecxz
outsl
or
or
out
enter
subl
sub
cmpb
outsl
cmp
stos
adc
arpl
inc
and
mov
jecxz
mov
xchg
movsl
and
movsb
xlat
test
testb
adc
push
filds
dec
pop
push
adc
xlat
in
rcrb
jp
in
sub
daa
aad
mov
cmpsl
lret
ja
cli
mov
push
jmp
sub
movsl
pop
lret
daa
ja
imul
in
daa
xor
in
dec
movsl
sahf
xchg
sbb
inc
stos
sub
ss
es
aad
icebp
push
jmp
ret
mov
and
jb
out
js
rolb
mov
xchg
push
lret
dec
lret
paddusw
std
cld
xor
lret
movsl
mov
lret
or
ss
xor
je
mov
out
out
push
test
dec
xor
movsb
arpl
and
dec
push
xor
inc
into
ja
push
xchg
xor
jg
push
inc
loope
xor
dec
std
xlat
inc
pop
xchg
push
vpcmpgtw
jae
pop
cs
pop
sarb
ss
xlat
mov
ret
dec
mov
push
pop
inc
stc
das
jo
pop
mov
sbb
aad
ret
xor
push
cmpsl
jecxz
inc
push
xchg
xor
jnp
out
cld
out
push
popf
dec
mov
outsl
loope
cmpsb
or
mov
hlt
dec
enter
push
je
and
or
mov
or
push
popf
cmp
jmp
mov
mov
pusha
dec
xchg
in
jmp
out
mov
pusha
scas
cs
xor
out
or
shr
mov
dec
sub
rcrb
insl
loopne
or
sbb
dec
mov
adcb
cs
ds
movsb
cs
cmp
aam
xlat
aam
inc
push
lret
aam
cltd
sub
and
cmp
xlat
mov
inc
inc
pop
fdivl
push
cmpsl
xchg
addr16
xchg
orb
or
and
or
test
pop
mov
stos
mov
add
jb
or
in
xchg
xor
pop
xchg
dec
imul
jno
loopne
ss
les
les
jnp
cmc
pop
push
loop
inc
cld
sub
cmp
dec
inc
jno
adc
cmc
sbb
adc
adc
lods
pop
or
and
cmc
out
in
mov
mov
and
movsl
loopne
push
push
xchg
loopne
mov
subl
or
lcall
adc
pop
xor
leave
inc
xor
jae
cld
or
les
or
stc
arpl
mov
popf
xchg
inc
inc
pop
adc
and
subl
ja
mov
loope
mov
pop
sub
call
mov
inc
xlat
mov
xchg
mov
mov
icebp
push
jo
xor
or
cmp
or
xor
jns
jmp
cmp
xchg
pop
jge
add
ret
push
aad
and
dec
xor
xchg
dec
aam
mov
es
in
pop
lret
nop
out
mov
or
in
jp
in
mov
sbb
push
pop
lods
test
daa
dec
lret
aaa
xchg
hlt
dec
movsl
stc
imul
sbb
cli
dec
sbb
dec
jne
bound
aaa
sub
fs
and
fimuls
cld
into
lret
dec
cmp
ja
mov
mov
jo
in
mov
out
push
sti
ds
js
xchg
sbb
xchg
jg
divl
divl
repnz
pop
movsl
addr16
adc
push
dec
stos
lcall
sub
out
push
xchg
cmovno
dec
in
movsl
mov
popf
fs
cmp
xchg
pop
jns
lods
imul
xchg
cmc
mov
push
pop
pop
sub
cmpsb
mov
jmp
pusha
cmpsb
ficoms
lret
aad
andl
xchg
inc
mov
mov
fsubrp
mov
xor
test
bound
fsubrs
fs
mov
fs
test
dec
sub
fisubrl
inc
aaa
sbb
icebp
push
daa
sub
cmp
in
loope
in
loopne
idivb
push
fcompl
mov
pop
iret
cltd
mov
pop
sti
or
ljmp
cmpsl
sahf
dec
imul
dec
add
xchg
movsl
jmp
inc
ja
insb
lea
popf
xchg
cmc
xchg
in
lea
xchg
testl
push
les
lret
es
mov
xchg
in
adc
cmpsb
or
in
adc
and
mov
adc
pushf
imulb
pop
mov
pop
push
incb
xchg
out
add
mov
xchg
cmp
or
jo
jl
das
lahf
sbb
jg
push
mov
jmp
out
aaa
push
ss
xchg
adc
or
sub
sti
xchg
inc
cmp
push
aad
push
cmp
sub
cmp
add
int3
data16
sub
mov
pop
jbe
xor
imul
mov
in
mov
sub
outsl
xor
mov
add
pop
cmp
mov
aad
sub
push
sahf
cld
dec
push
push
iret
in
sbb
sub
insl
aaa
or
adc
inc
pop
loopne
pop
mov
xchg
add
leave
cmpsl
cmpsl
push
pop
xchg
out
xor
push
and
cltd
ret
sub
xlat
mov
sub
push
jmp
aad
dec
sbb
mov
daa
pop
cli
adc
adc
and
in
push
in
xor
push
loope
loope
cmp
addr16
xchg
stos
notb
push
icebp
ds
scas
sbb
and
dec
daa
xchg
loope
inc
insl
push
mov
push
adc
je
mov
dec
callw
xchg
lds
dec
cli
lcall
cmp
ljmp
jg,pn
test
fidivs
push
ljmp
push
outsl
lcall
cld
fcmovbe
mov
icebp
pop
jbe
pop
push
out
in
xor
std
jmp
sub
mov
xlat
xchg
sub
mov
cmp
push
jg
popf
push
fadds
or
ds
out
cmp
out
lods
mov
xchg
pushf
pop
pop
cmc
aaa
test
cmpsl
enter
int3
test
xchg
push
out
pop
test
jb
push
xlat
popa
push
loop
cmc
pushf
test
pop
xchg
imul
push
mov
xlat
aas
addl
xchg
in
lods
inc
cmpsl
xor
push
pop
sbb
nopl
cmp
aaa
shrl
mov
cmc
stc
dec
stos
push
mov
adc
stc
push
fiadds
mov
movsb
mov
cli
push
jbe
test
adc
inc
mov
insb
and
imul
ja
dec
lods
cltd
notb
push
jne
and
dec
fdivrp
insb
cmpsb
enter
ljmp
cwtl
mov
test
call
xor
jns
mov
xor
xor
stc
ss
mov
jmp
dec
mov
out
inc
pop
lds
mov
mulb
jg
call
adc
sbb
rcrb
test
pop
pusha
icebp
dec
daa
and
rcll
mov
dec
inc
fs
xor
es
gs
cmp
inc
or
sub
test
imul
fldcw
sub
ds
out
cmp
xor
gs
push
std
xor
stos
lods
stc
push
sub
jo
push
sbb
repnz
pop
jno
lret
mov
adc
push
sub
push
dec
dec
xor
push
ljmp
pop
rcrl
jg
mov
jno
sti
and
js
or
jnp
aas
call
addr16
cmp
test
std
je
jmp
mov
xchg
dec
jne
ret
adc
mov
mov
push
mov
insl
in
cltd
in
mov
sbb
arpl
sbb
movsb
cli
lret
jbe
fiadds
xchg
dec
ss
aam
sbb
fs
dec
dec
xchg
aaa
adcb
fs
sbb
ljmp
push
sti
cmp
add
jmp
mov
jp
ljmp
dec
pop
adc
mov
in
stc
dec
shl
test
into
mov
or
inc
cmc
jbe
xlat
mov
cwtl
stc
mov
xchg
aaa
push
jl
movsl
loope
test
iret
push
push
pop
push
in
xchg
dec
push
cwtl
jo
loop
jp
test
push
and
ljmp
xor
clc
xchg
mov
in
lahf
test
sub
stos
lds
imul
mov
adc
out
adc
push
xchg
mov
pop
repnz
mov
sub
cmpl
push
xchg
sbb
je
sbb
xchg
or
jne
mov
dec
idiv
jmp
mov
call
xchg
ja
dec
push
add
lcall
and
shlb
leave
jl
lret
push
stos
mov
xor
mov
add
xor
loop
scas
or
xchg
in
in
mov
sti
xchg
push
add
pop
outsl
push
nop
loop
pushf
aas
push
loop
cmp
mov
imul
into
scas
cmc
aad
pop
xchg
mov
push
stos
hlt
jmp
push
mov
subb
mov
int
pop
addr16
push
mov
push
xor
cmpsl
mul
call
push
cmp
cmp
adc
push
cmpsb
out
aad
into
bound
mov
lret
cs
nop
call
hlt
aas
pop
adc
xchg
pop
por
jo
stos
push
imul
jl
clc
pop
popl
pop
sbb
jl
and
aaa
test
int
mov
xor
pushf
ret
mov
clc
aaa
ss
cmc
lds
stos
and
dec
sbb
mov
cmp
std
es
or
push
leave
or
outsb
xchg
in
int3
adc
or
or
out
sahf
pop
mov
test
and
sbb
or
sarb
inc
bound
xchg
add
push
push
or
jne
stc
in
push
xor
xchg
adc
fimull
push
mov
inc
test
dec
outsl
pusha
pusha
jecxz
push
cmpsl
gs
xchg
je
in
lahf
xchg
lahf
jecxz
pop
jmp
cmp
pop
out
orb
out
sub
sbb
stos
cs
lds
adcb
jmp
xor
inc
nop
rcr
aam
in
or
out
not
iret
cmc
inc
mov
mov
add
popf
pusha
pusha
test
mov
lret
imul
clc
mov
jbe
xchg
ljmp
mov
mov
cmp
out
into
xor
and
jbe
jb
dec
test
push
in
movsb
outsl
push
xlat
push
vsubss
adc
xor
jno
mov
stos
dec
test
lcall
divl
jmp
mov
cmp
dec
out
mov
mov
movsb
int
dec
jns
jge
mov
movsl
cwtl
repnz
lret
sbb
adc
aam
imul
test
mov
push
and
movsl
xor
hlt
jns
mull
push
xchg
mov
sbb
xchg
clc
or
dec
mov
sbb
fiadds
cmc
fwait
dec
pop
je
sub
mov
cmp
leave
fnsave
push
dec
cmp
dec
hlt
adc
xchg
push
pop
fldcw
sbb
sbb
pop
dec
or
pop
mov
in
imul
ror
mov
aad
pop
out
sbb
cltd
in
add
sub
es
adc
sbb
xchg
xchg
add
sub
xor
dec
ret
push
dec
add
mov
stc
mov
out
mov
and
mov
or
xchg
imul
insl
scas
or
push
push
adc
ss
jmp
cmp
xchg
mov
mov
nop
or
sub
and
sub
aad
add
stos
adc
push
in
mov
and
les
mov
outsb
pop
mov
add
test
aad
sub
out
sbb
enter
push
push
hlt
stc
push
out
cmpsb
fs
in
sbb
sub
adcb
xchg
jne
lods
jbe
xor
hlt
sahf
sbbb
cmc
pop
inc
aaa
lahf
jbe
rorb
cwtl
push
sahf
and
leave
and
ret
mov
push
push
mov
jl
push
cli
shll
add
pop
mulb
or
and
and
ss
jno
xchg
or
shlb
inc
in
ret
popf
lods
out
mov
divl
iret
inc
pop
xor
xor
xor
inc
lahf
sub
loope
pop
xor
mov
dec
cmpsb
or
lret
lahf
xor
jne
sub
cmp
jne
sub
stos
pop
fisttpll
ficoms
or
jg
dec
lods
cld
xchg
and
xchg
test
sahf
or
ret
mov
mov
mov
test
in
xchg
push
sbb
lock
cmpsb
into
or
sbb
push
push
stos
sbb
lcall
sbb
loopne
pop
ja
xor
xchg
stos
out
in
dec
xor
mov
cwtl
fsts
lret
pop
stos
lods
in
mov
aad
sub
xlat
popf
mov
pop
aad
jecxz
add
mov
es
aad
sbb
push
adc
stos
inc
mov
stos
leave
cwtl
in
dec
inc
cmp
ret
inc
adc
sub
push
push
into
push
mov
push
mov
aad
sbb
mov
sarb
out
in
out
mov
into
ljmp
mov
test
enter
mov
into
dec
rcrb
fadd
ljmp
aas
test
fstl
int3
pushf
push
add
jae
adc
jmp
insb
pusha
mov
dec
push
fistps
or
outsb
mov
jmp
jg
out
stc
or
outsl
ds
test
pop
js
ret
push
loope
iret
ljmp
in
jecxz
inc
imul
mov
dec
or
jnp
dec
mov
ret
lods
loopne
xlat
pusha
jo
add
or
mov
inc
call
mov
lcall
test
loopne
and
dec
in
mov
in
or
test
or
loopne
mov
loopne
enter
call
and
push
mov
cmpsb
sub
outsb
pop
dec
shlb
push
adc
jo
rcrb
test
push
leave
xchg
sub
pushf
jmp
sbb
rcll
sub
inc
fbld
mov
inc
push
loopew
loope
add
stos
scas
jg
push
sbb
jle
adc
imul
or
push
sub
test
push
leave
inc
or
cmp
scas
xor
pop
bound
cmp
gs
mov
sbb
sub
jmp
inc
push
cmp
pushl
jecxz
int3
cli
push
daa
leave
dec
mov
mov
dec
mov
das
and
jecxz
xchg
sub
mov
test
xchg
out
jle
mov
ljmp
cmp
sarl
pop
cmpl
mov
outsl
ret
xor
sti
imul
xchg
dec
push
ret
clc
cmp
xor
jl
stc
add
out
adc
sbbb
sub
or
into
dec
movsl
bound
imul
xchg
out
cmp
push
ss
adcb
daa
test
push
jge
sbb
mov
jmp
jmp
pop
mov
cwtl
mov
jno
xchg
mov
test
aad
leave
ret
nop
pop
mov
daa
mov
sarb
pop
cwtl
push
dec
xchg
cltd
out
xor
cmp
xchg
inc
or
mov
out
sbb
rcrb
js
push
rorb
iret
mov
mov
and
fucom
pushf
rcrb
cmp
aad
imul
out
push
in
leave
add
call
idivb
das
ja
push
mov
xor
jmp
dec
push
mov
xchg
loope
cmc
outsb
cmpsb
idivb
adc
add
push
cmp
in
test
ret
or
cmp
push
rol
pop
cmp
aaa
imul
add
jbe
cmp
mov
es
xchg
test
sub
cwtl
jmp
cmp
pop
in
std
and
pushf
sti
pop
inc
inc
das
rep
or
mov
call
jl
fimull
test
stc
pop
movsb
mov
jbe
fdivrs
lock
inc
sub
out
ficoms
inc
ljmp
lret
sbb
xchg
push
inc
push
cmp
jl
data16
pop
jo
faddp
jmp
xchg
pop
jae
pop
adc
sbb
outsl
repz
lret
int3
and
lahf
stos
fldt
dec
pop
lahf
push
pushf
or
jle
outsb
outsb
in
xchg
xchg
movsl
fs
mov
aam
aaa
push
sahf
jl
call
insb
cmp
cli
dec
ret
fcompl
hlt
ficomps
or
inc
or
and
mov
in
xchg
add
cmc
hlt
outsb
pop
loope
cmp
jbe
movsl
leave
dec
or
dec
xor
sub
push
dec
lret
cmp
daa
sub
jp
push
movsl
negl
mov
mov
push
mov
push
stos
jg
xchg
call
dec
sub
push
inc
daa
lea
xchg
mov
cld
add
sub
decl
das
shrb
daa
push
aad
imul
push
add
scas
mov
dec
enter
inc
fs
addr16
imul
add
cs
lods
adcb
and
sarb
inc
add
popf
jnp
jbe
fbld
shll
scas
dec
stos
fnstsw
and
push
lea
out
mov
or
add
push
insb
in
xchg
mov
dec
mov
in
cmp
pop
inc
out
dec
mov
lods
mov
xchg
add
icebp
sbb
dec
and
xor
popf
jecxz
imul
sub
xlat
sahf
loope
mov
ret
in
shrb
push
dec
scas
jge
out
popf
enter
push
pusha
fs
adc
gs
loope
mov
mov
mov
pop
mov
xchg
in
int
mov
dec
mov
scas
enter
mov
jl
cltd
xor
cld
mov
daa
pop
ds
sarb
loop
loope
cmp
mov
pop
dec
outsl
jmp
daa
mov
xor
pop
test
out
fldcw
mov
movsl
push
xlat
in
mov
sub
jl
dec
xchg
test
mov
push
or
pop
xchg
in
test
fstps
mov
cmp
mov
lahf
dec
es
aas
push
xor
jl
push
push
add
mov
lret
mov
xchg
push
dec
xchg
test
ret
rorb
jae
rolb
lock
lea
dec
jmp
imul
sub
and
mov
shll
mov
mov
fxtract
xchg
fsubs
icebp
loopne
lahf
stos
or
jge
lcall
enter
in
in
pushf
ljmp
sub
aaa
or
jo
mov
xor
push
fs
lahf
repz
nop
jge
scas
lods
scas
push
pusha
and
xchg
add
mov
ret
and
mov
xchg
mov
ds
mov
push
test
and
xor
shrb
loopne
push
cmpsb
movsl
lock
ret
in
std
mov
jne
jne
fnstenv
dec
in
mov
popf
mulb
lods
aam
cmpsb
push
adc
les
mov
push
popa
arpl
outsl
out
enter
pusha
mov
xor
jg
jo
shr
xchg
add
adc
icebp
lret
div
inc
orb
and
push
sbb
test
test
xchg
hlt
xor
insl
mov
push
mov
and
popa
jns
sarl
das
mov
fldcw
enter
mov
and
jne
mov
inc
push
mov
push
testb
idivb
dec
jae,pn
inc
mulb
hlt
push
push
testb
push
cltd
aaa
sbbb
mulb
scas
sub
in
jecxz
fwait
add
inc
rolb
mov
pushf
push
cltd
test
add
push
cmc
in
xchg
adc
out
stos
sub
sbb
test
pop
dec
or
dec
cmp
xor
es
mov
dec
test
lods
clc
xchg
dec
rcll
cld
ss
sbb
cli
sbb
or
outsb
call
imul
cmp
sub
mov
mov
scas
mov
cmc
jle
adc
pop
jb
shl
push
ss
jbe
push
int
call
adc
jnp
iret
adc
dec
negb
in
adc
xor
std
leave
std
lods
gs
jmp
mov
xchg
lds
mov
xchg
pop
adc
dec
push
cmpsb
dec
xor
les
cmp
xor
push
lods
jbe
pop
and
dec
loop
in
aam
inc
mov
jbe
pusha
jg
clc
mov
inc
into
int
aaa
and
aad
fs
test
push
push
lea
pop
inc
sub
insl
cmc
inc
mov
jno
dec
ja
sbb
inc
test
dec
ds
xor
sbb
cwtl
cs
test
daa
loop
out
pop
negb
aas
jnp
xor
loop
mov
add
in
or
jnp
aad
add
jb
push
enter
ljmp
push
mov
int
mov
inc
test
pop
jnp
dec
mov
and
fcmovnb
fcom
imul
dec
mov
pop
ljmp
movsl
leave
xor
pop
mov
cmpl
xlat
mov
daa
or
lret
adc
scas
inc
addl
in
mov
cmp
rclb
pavgw
test
and
push
subl
push
xchg
xchg
push
and
sahf
ret
cmpsl
mov
add
fdivrs
sbb
fsubrs
into
hlt
lret
cltd
scas
mov
sbb
clc
or
cld
sub
inc
xchg
mov
es
dec
push
scas
pop
arpl
pop
mov
imul
cli
cmc
imul
aam
lcall
iret
push
mov
fidivs
stos
add
jmp
idiv
mov
pop
daa
outsb
push
ss
aaa
jl
sub
inc
rcrl
jmp
cmc
push
lcall
std
push
imul
fstps
ljmp
stos
loop
and
sub
aas
lock
cld
ret
xchg
pop
out
jbe
pop
rdmsr
jmp
or
sub
mov
inc
xchg
and
stc
xchg
lret
movsl
movsl
leave
mov
inc
cmp
enter
test
push
xchg
or
call
push
jl
shll
dec
push
xor
and
dec
shll
sbb
mov
jle
test
cmpsl
jg
or
and
inc
and
sahf
pop
mov
jmp
mov
out
mov
sub
mov
mov
xlat
mov
jmp
jmp
inc
rorb
add
jno
cmp
sbb
pop
pop
stos
xchg
shr
mov
in
leave
pop
push
fsubrl
and
leave
sub
inc
loopne
mov
test
dec
xor
push
ss
ds
push
xchg
sub
mov
xlat
in
push
ficompl
or
or
aam
cmc
push
call
in
push
lods
sub
rcl
cli
mov
add
jne
sub
pop
pop
cmp
ret
cmpsl
xchg
pop
fs
outsb
pusha
outsl
mov
mov
insb
arpl
fsubp
je
lods
jmp
adc
sahf
push
ljmp
sub
in
mov
adc
in
mov
xchg
and
es
mov
mov
pop
insb
inc
mov
push
je
adc
adc
dec
in
xchg
notb
stc
stos
sub
scas
in
xor
push
mov
sub
call
pop
sub
insb
sub
mov
jecxz,pn
ljmp
stos
aaa
xchg
test
in
sub
scas
mov
jl
mov
test
push
xor
dec
add
xchg
movsl
imul
push
int
loop
sub
push
cmp
into
push
nop
jg
pop
sub
scas
test
in
jecxz
or
pop
xchg
adc
enter
negl
xchg
sbb
sub
xchg
jmp
jmp
mov
dec
scas
das
ss
cmpsl
adc
inc
into
dec
xchg
pop
aaa
out
or
push
cmp
sbb
scas
mov
pop
push
loope
leave
jmp
in
dec
js
mov
lret
cmp
inc
or
xchg
push
in
mov
int3
inc
adc
les
mov
stos
mov
in
imul
jb
es
mov
mov
dec
jb
inc
mov
push
jo
out
in
leave
call
aad
imul
adc
adc
inc
pop
mov
sub
mov
scas
add
sub
jp
pop
aad
in
push
jp
sbb
mov
jp
jecxz
mov
movsl
test
call
dec
cs
popa
cmp
cmp
stos
sbb
and
aas
mov
bound
into
mov
mov
pop
imul
inc
test
cmpsb
push
mov
out
mov
shll
je
cmp
xor
mov
xchg
adc
fcmovne
cwtl
int
sub
loope
push
push
inc
push
idivl
sub
into
pusha
in
in
sbb
push
pop
andb
daa
jmp
call
enter
or
add
stos
mov
ja
mov
iret
out
pop
imul
in
sub
xchg
iret
outsb
idiv
aad
paddw
sbb
std
insb
leave
ljmp
je
adc
shlb
cmpsb
xor
aaa
out
mov
inc
dec
aaa
dec
cmp
jmp
push
push
mov
xchg
into
ljmp
push
mov
jmp
bound
stos
sbb
jno
fcmovne
out
xor
xor
dec
sbb
mov
jmp
xchg
inc
out
call
xchg
push
test
shr
leave
mov
fcmove
dec
mov
push
pop
js
push
test
xchg
or
out
in
mov
dec
sahf
ljmp
dec
push
sbb
mov
fs
dec
in
in
cmpsl
jo
ret
jp
ds
xchg
stc
loopne
sub
mov
push
push
xor
xchg
enter
and
xchg
jge
rorl
xlat
aam
xor
pop
or
aaa
mov
pop
mov
loopne
push
and
mov
xor
cld
out
mov
testb
lret
pop
inc
fiadds
jge
mov
dec
pop
fildll
pop
movsl
dec
je
in
cmp
les
push
xchg
ret
jp
fistl
cmpsl
cmpsb
push
and
stos
xor
push
out
push
outsl
mov
inc
xor
sub
mov
lock
daa
daa
xlat
in
fs
cltd
pop
aad
dec
add
sub
ljmp
xchg
or
add
mov
nop
leave
das
cld
stc
sub
mov
in
jmp
cmp
push
dec
test
cmp
sub
mov
test
movsl
insb
dec
cmp
adc
dec
jl
stos
dec
xor
add
js
mov
adc
dec
cmp
dec
gs
inc
out
ja
roll
mov
pop
std
adc
jns
iret
faddl
cmp
sbb
arpl
lahf
mov
cld
imul
jp
pop
cmc
sub
sub
lock
fistps
push
jecxz
sahf
pop
and
dec
jae
int3
test
stc
xlat
hlt
aad
scas
xor
je
jne
xchg
enter
sti
imul
les
cmp
imul
mov
sbb
pop
shll
hlt
mov
cmp
xchg
out
dec
push
cli
cmp
nop
outsb
jno
push
xor
push
mov
or
add
inc
imulb
leave
jmp
dec
dec
adc
ss
pop
mov
in
jne
in
in
ret
sub
sahf
mov
add
popf
jae
ficoms
dec
daa
sub
push
mov
jmp
mov
xchg
push
mov
mov
mov
sbb
dec
lds
pop
int3
dec
lds
fprem1
xchg
sub
bound
xchg
add
fwait
dec
mov
mov
sub
enter
mov
mov
imul
sbb
enter
sub
out
xor
sub
mov
daa
stos
and
mov
xchg
pop
loop
push
negb
ljmp
stc
mov
outsb
enter
xchg
stc
dec
xchg
xchg
inc
jp
fisubrl
or
push
nop
daa
pop
lds
xchg
decl
pop
in
test
xor
pusha
add
cld
xor
loopne
clc
lea
cmp
movsl
jp
aaa
out
or
dec
cmp
popf
add
repz
imulb
cmp
enter
inc
dec
push
sti
in
pop
push
xchg
das
adcb
loop
sub
gs
dec
les
xorl
movl
cmpsl
pusha
lock
xchg
mov
mov
push
bound
add
add
cmp
cmp
test
inc
inc
test
xlat
cltd
mov
mov
imul
adc
fcomp
stos
loopne
jecxz
outsl
popf
lods
xchg
scas
popa
dec
movsl
mov
xchg
pop
jb
adc
stos
movsl
mov
pop
ljmp
sbb
cmpsb
ja
mov
inc
cltd
ja
imul
enter
sub
cs
jne
inc
test
insl
push
xchg
movsl
jbe
xchg
iret
dec
ja
or
sub
stos
mov
stos
and
or
insb
jo
fld
or
pop
pop
stos
sbb
sub
mov
test
fstpl
dec
int
push
test
cmp
lods
add
loope
clc
and
data16
sbb
add
jbe
loop
leave
mov
pushf
mov
testl
pop
add
lahf
aas
jns
push
inc
rcrl
loop
jne
imul
sub
aad
stos
jnp
loope
mov
sbb
xlat
sbb
roll
scas
or
je
insl
and
pusha
lock
loope
pop
fs
xchg
jle
loop
loop
inc
out
aad
adc
mov
call
lahf
or
jns
dec
aam
dec
push
fisubrs
int
jg,pn
in
sub
jo
sbb
out
adc
adc
cmp
test
mov
sub
sub
mov
lahf
sub
shl
insl
add
push
decb
xchg
sub
stc
bound
inc
adc
stos
das
cmp
lcall
jnp
in
aaa
cmc
lods
popa
lret
iret
test
in
mov
sub
and
outsl
in
sar
f2xm1
jae
jnp
inc
sbb
out
fs
adc
lods
outsl
mov
call
jp
mov
mov
add
cmpsb
or
dec
pushf
inc
cmpsl
test
mov
mov
addb
jecxz
cmp
mov
cmp
add
mov
fcmovnu
push
pusha
cmpsl
pop
xor
xlat
adc
or
les
dec
cli
fs
in
pop
les
lock
mov
or
mov
lahf
fwait
jmp
and
pop
push
aam
loope
and
mov
xorl
lds
xchg
addl
icebp
xor
cmc
fcomi
lea
inc
cmp
xlat
inc
ret
out
stc
rcl
mov
xor
sub
ds
xchg
out
imul
jmp
push
sub
jns
out
in
in
lret
insl
mov
ror
enter
xchg
loope
sbb
jae
fbld
vmovdqu32
daa
out
or
int
jbe
leave
xchg
fs
cmp
xor
lods
cs
mov
cmp
and
sub
and
fdivrp
dec
cmp
or
mov
cmc
adc
jbe
popa
xchg
jmp
ficoms
sub
ret
mull
cmc
pop
outsl
sbb
adc
pop
sbb
add
mov
mov
iret
mov
mov
xchg
or
rcrb
std
or
test
mov
xchg
popf
cmc
outsl
mov
inc
push
cmc
test
jmp
prefetchnta
cmpsl
fists
push
push
jmp
mov
inc
jg
mov
or
jg
aam
sti
outsl
out
push
loope
fimuls
push
mov
enter
rorl
lods
sub
lods
imul
mov
test
push
out
in
bound
pop
pop
fdivrl
mov
roll
daa
cmp
push
mov
lds
jae
jle
test
xor
pop
imul
push
repz
aaa
sub
in
movsl
test
and
pushf
andb
mov
std
and
mov
leave
mov
and
loopne
sub
hlt
push
mov
movsl
enter
aam
sub
lea
lea
push
cmpsb
jecxz
inc
insb
ss
movsb
jae
ret
dec
mov
cmp
mov
push
test
cs
adc
and
or
test
cmpsl
mov
test
sbb
rcll
jne
jmp
in
jae
stos
cmp
xor
jecxz
push
stos
jmp
and
addr16
cli
push
in
pop
orl
mov
ret
jnp
jecxz
in
and
std
xor
ja
movsl
add
in
and
test
insb
sahf
mov
mov
dec
push
in
or
pop
imul
and
dec
and
ficoms
call
imul
sub
push
dec
jp
adc
outsl
scas
sahf
pushf
cmpsb
sub
in
push
hlt
dec
inc
jge
sbb
pop
mov
push
push
adc
adc
sbb
jns
ret
xlat
popa
xchg
cli
jmp
outsl
daa
dec
outsb
add
sub
in
cltd
insb
lods
mov
push
ret
xlat
imul
mov
push
add
sub
in
fs
push
sbb
xchg
hlt
sub
add
mov
pushf
lods
outsl
daa
sub
outsb
add
sub
in
cltd
insb
lods
mov
push
ret
xlat
imul
fisubl
push
add
sub
in
cmp
insl
xor
das
jl
hlt
mov
daa
xchg
or
pusha
add
sub
in
cltd
outsb
lods
mov
insb
retw
xlat
imul
imul
aaa
sub
in
cltd
push
lods
mov
cltd
imulb
lods
pop
xor
jns
les
mov
or
jnp
outsb
pop
loope
insl
push
mov
imul
push
jmp
push
aad
aaa
push
pop
loope
push
push
lods
in
fs
mov
pop
das
xor
cltd
les
mov
or
fdivl
outsb
pop
loope
insl
push
mov
pop
imul
push
jmp
push
aad
aaa
push
pop
loope
push
push
lret
mov
push
pop
das
xor
lcall
mov
outsl
aad
aaa
outsb
pop
loope
insl
push
dec
lods
insb
adc
pop
imul
push
jmp
push
aad
aaa
push
pop
loope
push
push
cmp
movsb
mov
pop
das
xor
jmp
mov
or
test
test
insb
adc
pop
imul
push
jmp
push
aad
aaa
push
pop
loope
push
push
mov
fs
mov
pop
das
xor
cmp
pop
loope
xchg
stos
xchg
pusha
or
or
outsb
pop
loope
insl
push
cmp
imul
push
jmp
push
and
cmp
mov
push
dec
or
ja
cltd
sbb
or
jae
loope
cmp
sbb
cmp
stc
cmp
pop
daa
cmp
stc
es
add
xor
adc
cmp
aad
push
adc
cmp
aad
push
pop
aas
cmp
aad
in
xchg
in
mov
xchg
in
mov
xchg
in
mov
nop
in
mov
in
sahf
in
mov
in
pushf
in
mov
in
lcall
in
cwtl
in
cmpsl
in
xchg
cmpsb
outsl
loop
movsl
fldl
cmp
push
cmp
push
daa
push
push
push
es
add
divl
adc
xor
adc
xor
adc
xor
pop
aas
push
ds
sbb
cmp
sbb
adc
fs
fisubs
hlt
pusha
shrl
outsb
lcall
out
sbb
push
sbb
fs
or
popa
adc
outsl
lcall
notb
push
mov
ja
dec
cltd
pop
and
add
cltd
ret
xchg
xchg
add
or
cmovbe
into
test
cmp
jbe
xchg
sahf
mov
scas
aad
and
out
xchg
leave
sbb
cmpsl
lret
adc
mov
push
push
xchg
shrl
test
mov
sbb
cltd
sub
fs
rcrb
xchg
jno
jno
das
ljmp
sbb
xchg
hlt
fs
jp
out
mov
xor
mov
sbb
call
and
daa
xor
vpsubsw
pop
ss
dec
pop
ss
jp
ret
push
stc
pop
push
ds
cmc
cmp
inc
insb
xchg
je
scas
mov
test
call
and
jl
adc
pop
lcall
pop
int
mov
xchg
jmp
iret
or
inc
lret
sub
xlat
mov
stos
mov
cmp
mov
divl
push
pop
movsb
fildl
sub
inc
mov
imul
arpl
out
push
sysexit
xchg
mov
and
mov
push
xchg
imul
movsl
pop
pop
jb
xchg
push
cmp
test
jmp
in
mov
ss
outsb
out
push
out
sbb
mov
fsubrl
pusha
out
xchg
mov
hlt
push
out
cmpsb
push
movsl
push
ss
cmpsl
jge
cmp
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
mov
mov
cmp
sbb
mov
mov
ds
pop
jecxz
aaa
mov
mov
loope
aaa
mov
mov
ds
pop
jecxz
aaa
mov
mov
inc
jp
xor
mov
ds
pop
jecxz
aaa
mov
mov
ds
mov
stc
les
ds
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
stc
movsb
ret
insb
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
mov
mov
loope
aaa
mov
mov
ds
pop
jecxz
aaa
mov
movsl
insb
xchg
mov
cmp
xchg
shl
adc
push
outsb
rcrb
call
mov
xchg
cmp
imul
adc
pop
loopne
cmp
out
pusha
jmp
in
or
hlt
jmp
sbbb
pop
ljmp
call
retw
xchg
shl
jae
scas
sahf
in
sahf
jecxz
xor
loop
fsubs
loope
aaa
sub
cltd
in
lods
mov
in
retw
xlat
in
xchg
dec
jmp
ljmp
or
lret
rcl
pop
loope
push
sbb
in
fs
ljmp
das
xchg
cmp
cltd
loope
mov
out
retw
xlat
out
xchg
mov
cs
daa
dec
es
aaa
sub
mov
cltd
jmp
imul
retw
xlat
xchg
mov
xor
lret
or
lret
sbb
pop
loope
loop
push
lods
mov
out
retw
xlat
out
xchg
dec
jmp
in
daa
lret
add
sub
stos
in
cltd
jmp
dec
xlat
retw
xlat
xchg
or
xor
lret
pop
in
cmpsb
xchg
jecxz
fdivr
push
das
cs
pushf
lods
loope
es
loopne
cmp
out
pusha
jmp
in
or
leave
aaa
jmp
loope
ljmp
call
or
mov
ss
rcrb
push
das
rclb
out
sbbl
pusha
shl
in
pushf
lods
cs
daa
int3
es
aaa
sub
cmp
cltd
jmp
fsubl
xlat
retw
xlat
xchg
stos
sbb
add
out
movsb
mov
push
das
jmp
pop
aaa
loope
loope
loopne
cwtl
lods
out
adc
pop
out
leave
jns
in
pusha
jmp
jmp
xor
ljmp
pop
call
lods
mov
jae
scas
pop
in
adcl
insl
xor
das
jmp
mov
test
out
adc
pop
out
leave
test
in
pusha
sbb
jbe
sbb
cmp
stc
cmp
pop
daa
cmp
stc
es
add
xor
adc
cmp
aad
push
adc
cmp
aad
push
pop
aas
cmp
aad
push
sbb
loopne
shr
in
mov
in
sahf
in
mov
in
pushf
in
mov
in
lcall
in
cwtl
in
cmpsl
in
xchg
cmpsb
in
xchg
movsl
std
test
mov
cmp
xchg
enter
ret
roll
xor
adc
xor
adc
xor
adc
xor
adc
xor
pop
lret
aas
lret
push
lret
ds
sbb
lret
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
inc
lcall
pop
ljmp
xchg
push
pop
mov
xchg
inc
mov
xchg
inc
mov
xchg
inc
mov
xchg
inc
mov
nop
inc
mov
mov
loopne
mov
xchg
mov
and
cmp
aad
mov
mov
cmpsb
scas
call
xchg
pop
fdiv
xor
xor
add
negl
aad
jns
xchg
inc
inc
push
pop
xchg
inc
out
fs
jmp
shll
fstpt
fiadds
inc
push
mov
pusha
test
xchg
add
scas
in
xchg
dec
mov
out
hlt
stc
push
sarl
mov
push
cs
jmp
in
mov
das
fimull
cmp
pop
xchg
fsubr
xchg
repz
sti
fldl
or
jbe
inc
clc
not
lret
aam
xor
loop
mov
sbb
inc
xchg
mov
sbb
and
lea
jmp
xchg
leave
xlat
adc
pop
pop
xchg
daa
orb
push
mov
add
push
sahf
shlb
mov
adc
inc
lds
dec
add
mov
jb
cmp
test
mov
and
or
leave
xchg
mov
into
mov
in
push
sbb
xlat
out
pop
mov
in
lods
lret
sub
xchg
sub
hlt
ds
dec
lods
test
lods
sub
xor
xlat
sub
arpl
gs
es
fwait
sub
inc
sbb
pop
pop
das
fildll
fimull
xor
das
xor
pop
mov
mov
xlat
test
fimull
cmp
sbb
mov
mov
ds
pop
jecxz
aaa
mov
mov
out
or
mov
mov
ds
pop
jecxz
aaa
mov
mov
ds
push
mov
lods
add
les
ds
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
inc
inc
stc
ret
pop
ds
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
mov
mov
lods
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
mov
mov
out
or
mov
mov
ds
pop
jecxz
aaa
mov
mov
ds
xchg
mov
lods
add
les
ds
pop
jecxz
out
out
arpl
addb
and
xchg
cmpsb
je
mov
adcb
mov
inc
dec
les
or
and
sbb
push
jne
inc
cmpsl
jp
or
push
cs
push
inc
add
mov
add
enter
subb
imul
mov
push
andb
ljmp
sbb
lahf
sub
or
mov
jmp
sub
xchg
into
xchg
aam
push
in
cld
ret
cmp
pushf
xor
divb
xor
cmp
mov
jmp
pusha
and
ret
jle
mov
jle
test
pop
push
xor
ljmp
into
push
test
pop
addr16
mov
dec
dec
mov
mov
push
test
or
push
pushf
enter
dec
lret
sub
xchg
out
lods
xchg
fnstsw
adc
xor
imul
popf
or
mov
pop
sarl
idivb
fs
fnstcw
push
test
cli
jo
lahf
or
pop
cmp
aaa
jg
mov
addb
cmp
add
lods
pusha
loopne
cmc
imull
out
jl
lods
mov
stos
cmc
cmp
inc
inc
lods
adc
insl
pop
test
sub
push
push
in
dec
cmc
std
jno
mov
enter
leave
imulb
lds
fnstenv
in
push
scas
push
ljmp
dec
es
inc
stos
xlat
bound
cmp
testl
lret
mov
insb
lcall
jne
or
push
inc
xlat
inc
xor
xchg
lods
out
mov
stc
xor
push
and
inc
dec
push
mov
in
push
inc
int3
mov
popa
ret
pop
clc
cmp
lock
sbb
repnz
out
inc
jns
imul
test
insl
push
cmpsl
mov
repnz
and
jbe
adc
fiadds
push
jnp
ret
lcall
and
xchg
roll
sub
stc
nop
mov
sub
sub
cmpsl
cmc
and
test
push
sbb
mov
insl
leave
outsb
xlat
push
imul
je
mov
dec
cwtl
inc
scas
inc
iret
bound
push
pop
pop
call
movsl
jbe
movsl
cltd
jecxz
push
xchg
mov
decb
cmpsb
icebp
push
push
xor
test
mov
pop
mov
test
movsl
addr16
mov
lahf
mov
les
in
or
ja
and
pop
imulb
mov
or
jbe
leave
and
mov
out
pop
in
inc
sbb
in
push
test
pop
pop
dec
ljmp
pop
cmpsb
repnz
leave
fldenv
mov
lcall
push
or
fisttpl
into
cmp
mov
arpl
adc
ss
cmc
or
or
lods
pop
ljmp
imul
mov
xchg
jecxz
pop
loope
inc
sbb
jno
pop
dec
imul
and
scas
push
cmpb
lods
inc
inc
lods
scas
lcall
xlat
inc
in
loopne
sarl
push
inc
inc
mov
cmp
ja
or
sbb
add
adc
insl
cmpsb
sub
push
ss
test
out
incb
scas
test
fs
xchg
into
xchg
jl
and
fcoml
addr16
push
movsl
sub
pushf
mov
scas
out
dec
jp
fs
in
mov
fstps
or
ret
mov
push
push
jp
adc
daa
push
jl
sub
mov
or
jge
xchg
xchg
cmpsl
inc
pop
push
pushf
out
imul
sbb
push
dec
and
in
js
sub
loopne
hlt
popf
push
cmp
sub
aaa
jae
fcmovne
fstl
mov
and
and
hlt
aad
daa
in
mov
and
jg
push
std
in
mov
out
jnp
sahf
mov
test
jo
push
and
cmc
loope
rcrl
testl
jecxz
aaa
push
mov
mov
mov
stos
mov
push
sbb
mov
mov
rorb
lds
fcmovne
pusha
ret
adc
std
jmp
xchg
inc
fstpt
xchg
enter
aas
or
fwait
and
lds
test
movsl
push
sti
int
aad
sub
push
mov
daa
daa
aad
adc
ret
sub
mov
movsb
jge
int
inc
aad
movsl
jne
or
mov
call
outsl
lret
sti
push
lods
aad
mov
ds
in
jecxz
xchg
lds
sub
cmp
xchg
repz
movsl
jge
mov
in
lds
into
mov
in
xchg
clc
mov
xchg
imul
or
in
adc
out
out
cmc
mov
ret
xor
aaa
push
xchg
nop
mov
mov
call
xor
dec
cmc
test
sahf
lods
push
jnp
cmc
lods
jg
cmc
push
movsl
scas
fidivrs
jle
pop
sbbb
jle
in
cmpsl
xchg
test
sarl
inc
jmp
xor
test
daa
mov
bound
mov
test
sbb
mov
dec
movsl
into
test
ss
or
and
loop
pop
push
pop
std
sub
push
xchg
mov
push
outsl
push
fwait
scas
ja
xchg
cwtl
mov
sbb
divl
xchg
add
std
jmp
push
out
ja
nop
jmp
stc
push
inc
ja
daa
jb
push
jle
and
add
push
movsl
pusha
inc
leave
push
xor
inc
sub
notl
xchg
mov
push
movsl
fisubs
jmp
pop
sarl
inc
shll
mov
mov
jecxz
ja
xor
mov
cmp
aas
in
fldln2
jmp
daa
lods
sti
add
cmp
gs
cwtl
add
sbb
adc
loope
daa
cmp
test
js
fists
pop
inc
jg
mov
lcall
and
fcmovne
sbb
es
shlb
mov
decl
mov
push
fninit
hlt
ja
xchg
push
mov
sbb
loope
push
insb
in
fldcw
lahf
in
cld
push
nop
lret
lods
scas
leave
mov
mov
mov
es
aad
movsb
jno
test
jb
jg
mov
sbb
cltd
inc
daa
and
lcall
cmp
cmpb
pop
out
pop
mov
xchg
xsavec
push
ss
gs
mov
sub
jae
loope
adc
sahf
imul
sub
push
je
sbb
fcmovbe
stos
sub
into
out
mov
mov
and
das
sub
or
aam
test
cs
inc
cli
daa
movsl
cmp
sbb
cmc
bound
rcrl
ja
sub
bound
out
test
pushf
pop
xor
icebp
push
inc
push
pop
in
aad
mov
mov
jg
cwtl
outsl
dec
xor
and
mov
repnz
test
mov
cmp
push
fnstcw
push
mov
ficoms
fidivl
push
lcall
fs
imul
push
and
out
pminsw
lods
ffree
add
fildl
test
xchg
not
ds
rorl
add
sub
in
push
jnp
out
scas
out
cmp
mov
xlat
add
or
sbb
xlat
mov
pop
popa
xor
arpl
dec
int3
cs
and
lret
jecxz
mov
inc
mov
or
pop
fildl
mov
xor
cvtdq2ps
xchg
mov
cmp
push
jae
pop
out
fnstsw
jbe
aam
jmp
cmp
decb
lahf
fidivs
mov
negl
dec
sbb
mov
xchg
int3
jmp
imul
int
aaa
jmp
push
mov
enter
out
in
lret
fcom
inc
mov
out
in
andl
fisttpll
repnz
cmp
jne
push
test
in
push
gs
sbb
pop
cmpsl
push
xchg
cmc
sti
and
sub
int
cmp
sahf
jle
js
and
stos
pop
jecxz
movsl
fisttps
dec
jp
bound
clc
cs
pop
and
sbb
scas
dec
ds
call
cmp
inc
cmp
fdivrs
out
call
aad
cmpsb
ja
jecxz
adc
jecxz
jne
mov
rclb
fsubl
incl
push
adc
into
inc
outsl
mov
test
imul
push
std
sbb
jl
movsb
push
outsb
and
xor
aas
cmp
fistpll
mov
arpl
mov
add
jb
pop
loope
inc
pop
ret
insl
or
lds
mov
ja
mov
or
lcall
fmull
pop
sub
mov
pop
jnp
jno
add
lcall
test
gs
pop
cs
fs
and
hlt
jnp
push
pop
out
adc
outsl
test
or
pop
cmp
pop
ja
pop
bound
jmp
nop
pop
mov
jmp
pop
sbb
lret
pop
mov
stos
pop
jmp
sub
sub
out
jne
jae
stc
ljmp
inc
aaa
sbb
dec
lcall
adcb
xor
enter
shrb
xchg
leave
inc
jbe
shlb
or
push
fsubrl
push
sbb
push
dec
jmp
call
rolb
cmc
cmpsb
and
test
les
inc
lcall
jl
sbb
jmp
fnstenv
jecxz
fadds
call
pop
sub
cmc
jbe
leave
sub
cmpsb
jp
pop
inc
xchg
add
add
and
rolb
pusha
mov
xchg
lret
aad
les
xchg
leave
gs
jmp
add
xor
push
mov
xsha1
cmpsb
leave
aad
xchg
jnp
mull
leave
xor
jne
dec
pop
outsl
cwtl
mov
jne
jl
pop
sbb
lahf
xor
loopne
cs
cwtl
xor
aad
shufps
lds
xor
aaa
hlt
and
test
loope
andb
cmpsl
dec
shl
or
bnd
dec
jb
arpl
lods
imul
aad
mov
inc
loopne
popf
sub
cld
push
sbb
sbb
call
jmp
cmp
ljmp
jmp
cltd
pop
daa
mov
loope
imul
sub
jbe
cmc
pop
iret
push
inc
in
mul
in
loop
xor
xchg
aaa
xchg
push
inc
das
ljmp
dec
push
ss
in
jmp
je
cmp
es
cmpsl
addr16
xchg
push
stos
pop
sub
xchg
jns
push
fcoml
fstl
or
mov
cltd
das
into
add
and
loopne
das
adc
xorb
inc
das
lods
mov
lahf
cmp
add
imul
lds
pop
test
cld
test
sub
aaa
cmp
xchg
inc
loop
pop
sbb
xchg
std
cmc
push
out
cmc
jmp
add
mov
add
add
je
mov
dec
pusha
lret
adc
aad
lds
lds
jmp
dec
lds
or
sbb
xchg
push
popf
mov
mov
addr16
outsb
mov
stc
jbe
or
enter
pop
push
sbb
daa
mov
add
in
push
sbb
inc
xor
in
jg
cmp
inc
jo
jecxz
fidivrs
into
test
popf
daa
push
mov
icebp
and
mov
ds
cld
stc
dec
test
mov
sbb
jle
repnz
push
out
imul
pop
aam
iret
jo
shrb
push
insl
popf
jp
cmovo
cmp
mov
mov
jno
cld
cltd
sub
inc
mov
repnz
cmp
ljmp
insl
cmp
jne
es
mov
xchg
mov
xor
push
pop
mov
imul
dec
into
add
imul
inc
lcall
out
cltd
mov
sub
and
out
push
jb
mov
dec
inc
pop
adc
xlat
push
mov
xlat
adc
jns
call
test
add
cmp
pop
notb
pop
mov
and
mov
aaa
dec
sbb
sub
mov
sub
test
add
sub
cmc
push
test
aad
imul
outsb
int3
sub
cld
pusha
mov
add
inc
imul
sub
lds
daa
mov
mov
fwait
inc
daa
es
mov
adc
add
cwtl
add
sub
and
dec
ficoms
cmp
out
ja
pop
adc
jmp
adc
test
inc
mov
push
lock
jecxz
lret
loop
sub
or
pop
out
xlat
push
imul
mov
pop
mov
xor
dec
mov
fld
sub
je
movsb
adc
arpl
xchg
cld
sti
aaa
push
pushf
xchg
or
mov
shrl
and
push
daa
pop
sbb
lds
mov
add
dec
jns
jg
bound
imul
adc
push
dec
loopne
sub
sbb
sub
add
xor
add
pop
inc
enter
and
fs
incl
push
iret
cli
lods
or
cltd
mov
inc
push
sub
stos
pop
xor
jp
mov
sahf
ja
cltd
std
adc
pushf
in
sub
shlb
push
lea
mov
enter
in
stos
cmc
mov
aad
push
bnd
xlat
mov
incb
repz
fldt
add
push
lret
sbb
push
push
mul
hlt
mov
nop
push
sub
fsubp
fistps
jbe
mov
push
and
les
es
push
das
leave
outsb
es
aaa
or
cltd
and
inc
fnstenv
adc
out
and
divl
lock
aad
call
fwait
outsb
jmp
in
mov
pop
push
clc
xchg
dec
fstpt
or
insl
cli
lock
clc
arpl
rorl
fcoms
icebp
mov
popa
push
cmpsb
test
out
imulb
fwait
jnp
xchg
inc
mov
pop
sub
test
sub
or
jbe
xchg
push
push
das
daa
lcall
inc
push
es
outsl
movsl
mov
daa
test
test
xlat
in
cwtl
pop
cmp
test
shll
in
jecxz
aaa
aad
dec
out
jmp
test
jecxz
outsl
das
pop
adc
lods
dec
lahf
push
mov
cs
cmc
out
out
std
mov
cmc
arpl
stc
mov
push
sub
repz
ss
cmpsb
roll
sbb
shl
cmpsb
int3
aaa
add
test
stos
outsb
test
shrl
sbb
ret
adc
idiv
pushf
andb
pop
in
jge
cmc
sbb
fsubs
ret
or
movsl
and
mov
inc
dec
insb
out
mov
inc
xchg
popf
push
test
pop
ljmp
iret
add
gs
movsl
lds
mov
into
in
mov
mov
shlb
js
pop
sahf
jg
mov
movsl
sub
cmc
test
and
cld
cs
fcmove
daa
xor
mov
jbe
rorl
lcall
lods
stos
jecxz
push
or
and
add
push
mov
inc
mov
jle
loope
cmpsb
inc
xchg
and
sbb
xchg
int3
xor
into
or
or
out
shlb
add
or
xchg
ljmp
xchg
out
adc
in
jp
movsl
xchg
adc
inc
fldenv
jb
es
dec
cmp
jp
jge
jne
sbbb
ss
pinsrw
push
jecxz
pop
out
sub
xchg
jecxz
fcmovne
xor
sub
notl
fisubrl
mov
imul
mov
nop
mov
lcall
xchg
lods
cmc
sbbl
fldcw
push
and
or
jp
loop
imul
adcb
incl
and
sub
mov
mov
push
and
in
lcall
or
push
push
mov
or
daa
ds
imul
hlt
into
inc
lcall
xlat
push
mov
add
jae
push
notb
ret
xchg
xor
sbbl
icebp
lcall
pop
arpl
cwtl
dec
test
xor
inc
adc
in
scas
cli
mov
pop
imul
push
inc
push
sub
push
nop
or
cmp
sub
adc
js
or
inc
pop
ja
pushf
jecxz
sub
or
jmp
cmpsl
xchg
incb
xor
iret
xchg
aad
gs
mov
cmpb
cli
jmp
adc
mov
orl
movsl
sub
push
inc
fwait
out
sub
jge
adc
addr16
scas
mov
and
xchg
leave
inc
push
aad
ss
push
xchg
mov
out
mov
out
fisubrs
into
rcrl
fst
cmpsl
adcl
mov
aas
es
fists
aas
subb
out
mov
lret
mov
push
hlt
mov
xlat
into
xor
stos
or
pop
xchg
int3
jbe
or
dec
sub
fbstp
dec
or
cs
fdivrl
xchg
or
loope
pop
mov
cmc
fcmovbe
ja
cmpsb
sub
and
cmpsl
mov
outsl
jecxz
dec
addr16
push
pop
or
xchg
sbb
pop
fsubrs
popa
sub
mov
cmp
popf
push
addr16
dec
jnp
insl
mov
or
mov
in
in
mov
lods
push
lds
in
add
add
cld
outsb
movsb
les
std
stc
push
insb
jno
fdivrs
movsl
or
fwait
call
shll
aaa
mov
adc
mov
ret
addl
mov
push
pop
cmp
pop
es
inc
test
subb
movsb
test
pop
push
es
jecxz
jge
cmc
sbb
mov
or
cs
push
movsl
js
aad
loope
movsl
ja
mov
repnz
xchg
das
mov
mov
movsl
lcall
daa
xor
cs
inc
mov
jecxz
pop
fcompl
and
adc
mov
insl
aad
rcll
cmpsl
popf
mov
and
mov
push
and
gs
mov
cs
fstps
aad
pop
mov
cmpsb
cmc
scas
dec
test
mov
daa
cmp
sub
jmp
cmp
mov
cmp
dec
xlat
push
and
inc
ret
lahf
pop
rcll
xchg
push
mov
add
lret
or
mov
push
add
pushf
lret
test
mov
lret
ja
in
jb
xlat
mov
xor
xchg
inc
call
int
hlt
cmp
pop
pop
shll
sti
sub
or
dec
test
movsb
adcb
pop
xlat
aas
rcrl
decl
scas
add
es
push
mov
or
fbld
sub
sub
cmpsl
mov
loop
inc
jb
lret
fiaddl
aad
xlat
out
cmovp
jno,pn
dec
adc
push
aad
xor
jle
stos
popa
cmpl
fistpll
pusha
lret
inc
adc
push
pop
pusha
sbb
xchg
ss
xchg
add
fsubrp
out
mov
mov
aam
aaa
dec
mov
lret
adc
and
pop
loope
lods
icebp
ss
popf
push
ret
mov
test
popf
pop
push
mov
xor
or
xlat
or
and
xchg
in
xchg
jmp
jecxz
inc
call
push
insl
sub
mov
jmp
out
cmp
push
call
pusha
xor
or
or
cmpsl
sbb
in
add
stos
imul
mov
lret
testl
enter
aaa
clc
out
mov
adc
sub
add
repnz
cwtl
enter
jns
hlt
mov
jp
pop
dec
dec
and
mov
mov
mov
mov
sbb
dec
popf
fld
sbb
add
ret
mov
xchg
push
mov
js
inc
add
xchg
test
lcall
movsb
lret
mov
sbb
ljmp
jge
mov
loope
rcll
xor
arpl
sub
add
mov
flds
and
ja
push
movsb
cmc
sbb
dec
into
push
or
in
in
pop
testb
test
or
sbb
fisubs
push
xor
ljmp
lods
ljmp
imul
cmp
adc
jg
jg
mov
ljmp
sbb
test
outsb
int3
mov
mov
lret
out
das
mov
sahf
sub
les
scas
test
test
sub
faddp
mov
imul
mov
push
arpl
push
add
ret
sub
push
test
aas
mov
or
fcmove
lea
and
scas
mov
pop
or
das
popa
int
xchg
nop
or
les
mov
mov
outsl
add
aad
out
in
out
sbb
cmp
imul
out
lods
xchg
mov
and
mov
lahf
out
push
bound
aas
push
loope
push
shrl
push
push
fs
mov
jno
gs
ja
daa
cmpsb
push
divb
jnp
aam
mov
cmc
addr16
dec
cmpsl
sub
aaa
stos
loope
add
pop
xchg
mov
adc
rolb
cmp
inc
push
out
shlb
jmp
and
dec
xlat
inc
jle
lret
mov
sub
xchg
test
or
add
add
jb
outsl
xor
push
cli
imul
pop
dec
jae
or
rolb
cmp
jp
inc
sti
lea
mov
push
pop
call
jmp
fistpl
push
xchg
sub
or
aas
ss
mov
pop
cmp
mov
je
fwait
mov
testb
sbb
lahf
mov
sbb
xlat
mov
ficoml
pop
sbb
iret
xchg
test
ljmp
leave
and
je
lret
out
pop
or
sub
xchg
add
xchg
or
adc
jmp
or
out
repnz
cmp
bound
mov
or
lret
out
aas
lret
cli
arpl
jp
lahf
mov
pop
das
das
icebp
inc
pop
add
fcmovnb
loope
dec
pop
vcvtpd2dqy
pop
movsl
sbb
leave
in
xchg
clc
lret
test
push
sti
mov
push
movsb
xor
std
push
fs
or
xchg
in
nop
repnz
sbb
and
movsl
dec
gs
imull
sub
ja
mov
test
or
or
into
js
out
mov
ret
call
mov
sbb
daa
ds
aad
faddp
add
in
xchg
xchg
jmp
sbb
test
mov
mov
cwtl
mov
cs
adc
inc
mov
leave
out
push
and
inc
ret
icebp
loope
gs
out
mov
mov
in
jbe
push
or
xchg
xor
add
mov
pop
xchg
dec
push
ret
xor
and
push
sahf
call
xlat
mov
aaa
mov
loopne
pop
addr16
jo
sub
and
pop
sub
and
scas
pop
into
lods
scas
pushl
push
push
cmp
ret
outsl
shrb
stc
lcall
mov
push
mov
das
movsl
outsb
add
mov
movsl
xchg
aaa
jmp
pop
mov
pop
movsl
xor
mov
stos
or
outsl
pop
push
out
loope
lret
iret
or
inc
adc
mov
out
sti
lcall
lods
push
dec
sahf
push
adc
fcoms
and
xor
dec
ss
call
pop
scas
test
addr16
sbb
out
cmp
dec
cmpsb
outsl
cmp
dec
or
in
xchg
jecxz
push
imul
sbb
cmp
aad
dec
faddl
outsb
and
mov
push
cmp
push
push
fstps
and
aas
dec
jmp
test
cmp
mov
mov
sub
arpl
lods
sub
test
xchg
stos
sub
sub
cmp
inc
rorl
cmp
ret
pop
sahf
xor
dec
xor
imul
xchg
popa
testl
dec
xchg
adc
cmc
or
sub
fdivl
sub
push
sbb
into
fildll
test
jne
sub
mov
mov
mov
cmp
inc
xchg
pop
in
sti
or
vpsubsw
sbb
pop
loop
loope
lds
sbb
lds
fsts
test
stos
into
dec
cmpsl
pop
xchg
dec
jne
enter
stos
loop
mov
clc
adc
movsl
cmpsl
cmp
daa
and
popf
movb
daa
mov
dec
and
or
insl
cli
lret
out
ja
jo
sub
leave
in
mov
add
lcall
push
lret
lods
fs
shlb
test
dec
inc
aad
add
int
mov
cmp
xchg
cld
stc
mov
enter
jo
aas
push
movb
iret
add
stc
fiadds
push
loope
test
inc
xchg
push
test
mov
mov
es
scas
xchg
adc
fwait
outsb
gs
xor
push
loope
sbb
adc
loope
jp
int3
sub
stos
cwtl
insb
stc
mov
out
stos
out
mov
lock
lret
mov
push
fidivl
add
imul
cs
clc
pop
or
inc
jb
lret
ret
xchg
es
in
sbb
out
into
inc
mov
cltd
mov
movsl
sbb
mov
mov
mov
lods
inc
movsl
jle
fcmovne
add
mov
daa
or
inc
jb
fwait
iret
mov
push
movsl
adc
fldl
lock
add
fmul
cmc
fs
cmp
sahf
cmc
ja
loope
inc
push
cmc
sbb
cmpsb
jbe
or
mov
cmc
std
jmp
mov
leave
shll
add
jno
mov
notl
dec
aaa
jne
xor
aas
pusha
out
cli
cs
pop
lret
mov
cltd
xor
cmp
pop
clc
test
mov
jmp
push
xchg
sub
pop
jl
mov
fldenv
xor
aaa
dec
push
insl
jmp
imul
enter
fsubr
test
imul
or
fsubrs
mov
push
xlat
sub
mov
jmp
pop
insl
add
sahf
xorl
insl
mov
dec
adc
call
sbb
sbb
cmpsl
mov
push
sub
mov
lcall
aas
mov
mov
sub
sub
dec
shl
jmp
insb
push
out
sbb
or
insl
xchg
xor
cmp
push
hlt
rcr
pop
in
sub
mov
jp
mov
push
test
push
xlat
jns
lret
icebp
jecxz
dec
fxch
and
pop
dec
lods
clc
jno
sub
les
pop
movsl
stos
idivb
scas
outsl
add
xchg
shrb
lret
mov
sub
stos
repnz
inc
ss
push
mov
in
popf
je
sbb
mov
cmp
ds
jnp
mov
mov
cmpsb
in
or
jne
xor
inc
mov
xor
int3
in
movb
and
mov
sbb
and
pop
cltd
xor
js
std
mov
push
mov
mov
or
stos
es
cmpsb
insb
dec
push
pop
fs
jmp
sub
in
dec
cli
or
sub
stos
adc
imul
das
dec
adc
outsb
imul
out
push
dec
call
and
daa
cld
es
inc
pop
xor
ja
rol
lret
cmp
inc
lods
shr
xor
and
xchg
or
xchg
xchg
es
pop
jmp
or
xor
lds
inc
dec
pop
sbb
and
push
jbe
mov
xor
popf
and
aad
loop
sub
push
std
pushf
addr16
xor
and
ljmp
nop
dec
arpl
test
pop
dec
dec
daa
and
fisubrs
sbb
pop
loop
dec
dec
cld
rolb
ljmp
cld
stos
cmp
mov
test
jle
and
sbb
mov
dec
cld
out
and
daa
or
push
xor
cmc
mov
cmp
inc
inc
push
inc
dec
movsl
test
shrl
outsl
shl
movsb
lret
fs
leave
push
adc
sub
inc
bound
shrb
inc
push
add
pop
fsts
hlt
xor
sbb
mov
imul
movsb
mov
gs
adc
mov
enter
movsb
int
jge
daa
pop
push
adc
fcmovne
mov
xchg
lock
pop
push
lcall
mov
push
das
push
mov
or
daa
xchg
cmp
gs
push
insl
sbb
pop
push
and
dec
mov
sbb
loopne,pn
cmpsb
sbb
ja
mov
mov
push
daa
es
stos
int
sbb
into
aam
xor
or
mov
ret
aas
lods
es
movsl
pop
xor
imul
xchg
push
lods
push
push
push
adc
push
retw
xlat
push
xchg
sub
fs
cld
mov
out
dec
bound
popa
cmp
xor
outsl
mov
insl
xchg
pushf
jmp
imul
ds
ja
cltd
push
lods
mov
gs
dec
fs
xor
cmpsb
xor
fnstenv
cs
jmp
js
sub
pop
loope
xchg
fcoml
push
xchg
loopne
fs
mov
addl
popf
iret
jmp
pusha
insl
jle
sbbl
insb
enter
mov
xchg
dec
adc
cs
daa
fwait
es
add
sub
in
inc
notb
or
mov
in
enter
and
lods
insb
jecxz
push
aam
test
ficomps
jno
imul
xorl
jmp
mov
call
jecxz
push
aam
mov
insb
or
fwait
inc
jecxz
lods
rclb
xlat
imul
out
imul
or
and
pusha
stc
les
pop
cltd
mov
pop
xor
sbb
pop
loope
xchg
cmpsb
mov
mov
aas
mov
sbb
xchg
orl
sarb
push
xor
jmp
push
xor
mov
dec
addl
xor
jecxz
push
test
xchg
push
enter
pop
adc
add
mov
les
sub
push
aam
test
sub
fnstenv
ficomps
jno
push
mov
addl
xor
adc
or
sub
outsl
add
xor
dec
fs
out
push
test
ficomps
mov
dec
je
wbinvd
adc
mov
add
xchg
inc
and
push
add
cmpsb
lcall
leave
pop
add
std
lcall
repz
fcom
clc
push
xchg
xchg
nop
add
in
xor
lea
sahf
aaa
mov
adc
test
mov
push
imul
jp
lods
call
xorb
sbb
sub
sub
or
int
or
dec
mov
fwait
dec
add
je
sub
mov
scas
dec
fwait
pop
test
lret
imul
jl
add
mov
push
adc
xchg
cltd
xor
cwtl
xor
xchg
out
add
push
fistl
dec
imul
addr16
sub
cmp
loop
pop
or
jecxz
pop
daa
fwait
pop
in
or
add
xchg
in
xor
pop
jne
mov
in
adc
cli
inc
paddb
daa
mov
add
jne
int3
add
test
add
enter
pop
adc
inc
add
loope
push
xchg
xchg
cmpsb
into
gs
lahf
fs
mov
push
sub
mov
gs
jne
push
inc
in
cmp
fs
cmp
mov
dec
add
testb
outsb
jmp
jle
aad
xchg
call
mov
cmc
clc
inc
std
sub
lods
mov
push
fwait
imul
sub
xlat
xor
jecxz
sub
movsl
stc
push
lahf
inc
cli
jmp
push
cli
dec
loopne
aam
je
hlt
in
pop
sub
xchg
movsl
stc
xchg
add
cld
lods
jl
mov
ret
xchg
mov
cltd
xchg
ficompl
jne
filds
inc
xor
push
fnstcw
lods
loopne
push
jle
add
sub
std
out
dec
xchg
pop
xchg
pushf
sub
scas
inc
lret
mov
pop
test
test
add
stos
imul
xor
cmp
jo
shr
cltd
add
shrb
mov
testb
mov
dec
xlat
xchg
push
and
push
xor
jmp
push
push
or
push
shrl
testb
xor
das
sub
idivb
das
xor
hlt
and
das
jmp
faddl
daa
test
jnp
push
dec
stc
mov
dec
pop
ds
mov
cwtl
dec
fs
inc
jge
dec
mov
cmp
sbbb
test
cld
inc
nop
pop
iret
lods
enter
lret
shll
jmp
jmp
lds
mov
jne
push
js
xor
lods
scas
cltd
sbb
sbb
imul
dec
xchg
mov
xor
add
pop
cwtl
mov
pop
push
das
jle
and
sbb
add
mov
or
daa
lahf
shrl
mov
xchg
jmp
leave
push
popa
aad
lods
pop
xchg
cmp
jge
mov
daa
insl
push
pop
sbb
dec
push
mov
jge
incl
sub
pop
inc
hlt
xchg
push
xor
inc
shr
iret
mov
ja
mov
insb
cmpsl
adc
pop
test
push
aad
rcl
enter
lret
push
push
insb
sbb
xor
gs
test
mov
int3
data16
inc
loope
push
icebp
ret
add
icebp
mov
cmp
mov
mov
dec
ja
lods
dec
in
shrl
jl
test
xchg
mov
push
mov
test
sbb
cmp
sbb
adc
xchg
addr16
or
cmp
mov
je
pushf
sbbl
xor
clc
inc
mov
mov
or
xchg
or
jmp
sbb
xchg
and
int3
jo
pop
jecxz
leave
data16
in
inc
add
lods
test
and
mov
mov
jb
mov
sti
test
mov
in
inc
sahf
or
mov
push
out
sbb
test
mov
and
out
xchg
fs
xchg
xor
jnp
sub
pusha
adc
xchg
movsl
leave
xchg
daa
ds
bound
xchg
out
inc
repnz
test
or
js
jne
daa
push
pop
mov
xchg
adc
push
or
pushf
cmpsb
sub
popf
popf
jo
int3
mov
out
es
lods
repnz
in
in
sti
movsl
xchg
sbb
push
or
es
push
cwtl
or
mov
int3
leave
fstl
dec
adc
sub
loop
bound
sub
pop
push
add
push
negb
daa
cltd
in
iret
push
cmpsl
arpl
dec
mov
mov
xchg
push
mov
out
add
mov
jge
popa
int
fisubrl
dec
cmpsb
fstps
test
dec
adc
outsb
jae
lods
mov
xor
clc
inc
cmpsb
lods
aaa
xchg
cmp
inc
daa
sbb
and
jle
insl
mov
sbb
or
dec
xor
lods
cmp
rorl
ror
inc
cmpsl
ret
inc
jmp
push
repz
andl
leave
push
test
add
je
mov
fnstsw
add
push
ja
mov
adc
sub
or
or
mov
test
daa
push
loopne
mov
je
xchg
jmp
imul
or
gs
push
mov
in
enter
and
leave
push
dec
lods
aas
jmp
push
lods
xchg
fadds
adc
push
mov
inc
leave
dec
daa
out
jnp
adc
push
imul
ljmp
scas
lock
cmp
pushf
jbe
fidivrs
jmp
push
adc
cmp
inc
adc
lods
std
dec
movsl
shlb
sub
mov
mov
lret
es
pop
loopne,pt
cmp
sub
cmpsb
lods
jl
and
pushw
daa
push
lea
repz
push
or
es
jmp
fucomp
sub
movl
shlb
pop
mov
mov
scas
pop
test
and
xchg
inc
daa
mov
mov
lock
push
movsl
push
xchg
jl
jmp
int3
repnz
shrb
cmc
push
xlat
inc
inc
inc
sub
insb
xor
shll
push
xor
push
pushw
push
filds
stc
push
or
add
push
mov
inc
mov
dec
leave
dec
pop
mov
loopne
loope
enter
adc
in
iret
daa
push
int3
es
leave
push
js
adc
movl
add
cmp
inc
xchg
and
xlat
xchg
add
adc
loopne
sub
dec
xchg
sub
lea
daa
sbb
test
dec
push
sub
fstps
mov
hlt
sbb
adc
pop
in
push
in
ss
lds
clc
out
mov
sbb
or
mov
clc
inc
cmpsb
lods
jne
add
aad
adc
fadds
adc
adc
inc
xor
sbb
inc
mov
idivb
scas
sub
inc
aad
call
aas
andb
test
and
inc
xor
or
loope
cmp
outsl
ss
pop
hlt
incb
mov
aad
ss
imul
jmp
sub
mov
xchg
mov
test
test
sahf
fsubl
aaa
sub
adc
insl
test
mov
jmp
mov
adc
add
adc
imul
sbb
imul
xchg
stos
mov
test
ret
or
lret
popf
xchg
in
jmp
dec
mov
mov
add
xchg
push
and
test
jmp
shll
pop
mov
push
mov
mov
xor
int3
bound
mov
sub
and
test
popa
aaa
clc
jmp
inc
mov
add
stc
jmp
sahf
adc
adc
leave
cmp
call
jbe
pop
enter
imul
sub
fnstsw
mov
pop
scas
mov
push
cltd
xor
sub
negb
xchg
xchg
dec
push
es
push
fsubrl
std
and
xor
xlat
add
cwtl
sub
pop
fidivrs
insl
aaa
in
in
js
add
aad
or
dec
xchg
cmc
or
jmp
and
jg
adc
leave
pop
mov
mov
inc
or
lods
leave
sub
lods
jmp
mov
mov
lods
cmp
push
shr
push
xchg
insb
clc
cmc
mov
sbb
in
sub
mov
or
push
sub
test
jmp
xchg
sbb
xlat
bound
cmp
push
xchg
inc
push
popa
mov
and
fstp
mov
out
lea
xor
outsl
sbb
lret
outsl
lret
cmp
cmpsb
pop
sub
cmp
lods
iret
lods
jne
mov
jl
enter
cmp
push
sub
mov
mov
fistps
insb
icebp
cs
repnz
inc
test
js
push
push
in
mov
pop
add
jo
add
jbe
int
test
sbb
cmpsb
arpl
xchg
std
cltd
and
push
punpcklwd
sub
gs
or
pop
lods
push
jecxz
movsl
jmp
jmp
cmpsl
lret
rcll
in
loope
loope
xor
fs
and
mov
pop
sbb
push
dec
aad
ret
push
adc
xor
mov
fldcw
mov
and
mov
jp
std
mov
push
in
jne
pop
ss
xchg
sarl
fisubrl
lock
push
xlat
push
push
fidivrl
daa
inc
imul
cs
fldt
push
movsl
mov
dec
idivb
push
push
push
cmp
aam
or
in
ss
scas
aad
jne
sti
aas
cmp
int3
dec
dec
xchg
ss
mov
aaa
mov
xchg
jle
mov
jae
and
and
in
imul
inc
hlt
jmp
out
test
dec
gs
outsb
inc
add
inc
pop
in
negb
dec
jecxz
sub
fistl
xchg
sub
dec
js
fisttpl
mov
inc
pusha
adc
pop
lock
mov
ficoms
test
cmpsl
xor
jae
test
ret
push
out
pop
mov
pop
sub
rcll
cld
andl
fisubl
mov
lock
jne
iret
push
js
out
sub
or
test
enter
jno
or
jo
mov
out
mov
cmpsl
test
sti
gs
inc
loope
ret
push
rolb
loopne
push
add
fs
sub
movsl
pop
lods
and
sub
mov
and
movsl
pop
and
fs
push
fmul
mov
fucomp
mov
in
push
mov
aaa
or
mov
daa
lds
lods
dec
into
fisttpll
lahf
sbb
dec
daa
mov
or
mov
adc
lahf
pushf
loope
arpl
leave
iret
xchg
clc
popl
clc
imul
jmp
pop
out
shlb
pushf
cmp
cli
outsl
pop
popa
or
mov
or
dec
clc
stos
cmp
call
loopne
xor
jnp
xchg
adc
jbe
xchg
jmp
into
pop
js
ficoms
movsl
mov
adc
divb
jg
mov
xchg
gs
sahf
jge
sahf
push
loope
scas
inc
xor
xor
jbe
lret
in
aam
shrl
add
imull
pusha
adc
jo
in
xor
imul
inc
xchg
loopne
cs
xchg
adc
cmpsl
sarb
ss
xchg
push
rcll
imul
mov
imul
pop
pop
cmp
mov
inc
sub
daa
mov
mov
jns
andl
ss
rcrl
jo
loope
push
stc
cmpsl
idivb
jmp
in
out
mov
sbb
pop
lret
nop
lock
inc
xor
dec
decb
mov
outsb
sbb
xchg
push
sbb
or
movsl
inc
mov
cmc
add
pop
es
pushf
sbb
jecxz
or
and
outsb
push
cmpsb
pushf
mov
pushf
adc
or
pop
jae
inc
imul
fwait
jmp
pop
dec
adc
out
ret
jae
mov
cmp
dec
or
dec
mov
mov
push
xchg
in
aam
push
imul
arpl
inc
addr16
bound
and
xor
cmp
xchg
and
pop
test
or
adc
sub
sub
cmp
pop
cwtl
push
scas
cmp
inc
jnp
push
cmpsl
daa
out
cmp
inc
enter
xor
test
fxch
repnz
ss
sub
loopne
push
fsts
and
push
jmp
lds
and
jbe
sub
jecxz
stos
add
loopne
and
mov
lods
cmpsl
cli
pop
stos
pop
push
aad
sub
pop
aad
movsb
cmp
ss
sub
out
xchg
imul
in
mov
pop
or
jmp
pushf
lods
jecxz
pushf
lods
push
xchg
movsb
add
push
cmp
mov
mov
retw
xlat
scas
int3
scas
pop
loope
lods
jecxz
pushf
lods
sahf
stos
jae
lods
stos
adc
cmpsl
test
aaa
cltd
xchg
xchg
pusha
stc
add
and
je
xor
das
insb
daa
hlt
imul
lods
dec
adc
bound
int3
scas
pop
loope
lods
jecxz
pushf
lods
ds
mov
test
cltd
xchg
xchg
pusha
stc
add
push
das
insb
outsl
loopne
mov
sbb
ss
mov
lods
int3
lods
pop
loope
stos
jecxz
pushf
lods
ds
xchg
ds
add
adc
xchg
cmpsb
iret
push
das
movsb
hlt
fnstcw
add
jmp
pop
loope
scas
or
loope
pushf
lods
lods
mov
stos
push
insb
test
lods
pop
jecxz
cs
xor
dec
push
stc
push
das
sbb
mov
pop
loope
scas
into
lret
ljmp
jecxz
pushf
lods
cs
daa
sti
es
add
fisubrl
jmp
xchg
lods
pop
jo
cmp
push
das
mov
and
xchg
adc
add
movsb
hlt
insb
or
push
jns
ret
out
inc
lret
xchg
stos
pop
loope
test
ds
mov
or
push
das
jl
in
mov
mov
lods
mov
scas
or
cmp
lods
pop
loope
stos
xchg
jmp
pushf
lods
sahf
test
adc
xchg
ds
add
adc
xchg
cmpsb
iret
push
das
mov
and
xchg
push
jns
ret
out
enter
loope
lods
jecxz
pushf
lods
sahf
stos
mov
es
test
cltd
xchg
xchg
pusha
stc
add
push
das
insb
daa
hlt
movl
sub
push
and
std
jnp
inc
add
or
or
dec
adc
xchg
adc
xor
aas
xchg
push
iret
ds
sbb
cmp
sbb
xchg
sbb
cmp
cmp
pop
daa
cmpsb
xchg
or
adc
imul
imul
test
xchg
test
mov
xchg
test
mov
test
popf
test
mov
and
rcrl
rcrl
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
pop
shll
push
shll
add
mov
xor
adc
movsb
frstor
iret
mov
sbb
lds
test
sbb
je
or
add
lods
adc
inc
cmp
lret
mov
jp
jmp
pop
and
and
inc
movsl
loope
mov
jbe
add
mov
cli
sub
dec
sarl
shlb
sbb
mov
sub
test
daa
push
out
mov
xchg
imul
hlt
mov
gs
mov
lds
les
cmpsb
insl
ret
cmpsb
push
add
add
inc
or
ret
inc
xlat
xchg
cld
or
xlat
adc
out
test
push
xor
push
fs
adc
push
lret
mov
sub
push
mov
sub
shrw
sub
push
lods
das
aas
and
imul
push
xchg
clc
or
arpl
xlat
mov
mov
sar
cltd
jne
mov
xchg
pop
cmc
setne
xlat
int3
loopne
leave
imul
sub
jecxz
mov
in
scas
pop
in
sahf
dec
jns
lret
dec
adc
stc
daa
into
sub
mov
scas
mov
clc
push
ss
xchg
ljmp
ret
in
imull
xlat
in
or
imul
pop
arpl
pop
imul
clc
xchg
push
jl
sbb
in
or
mov
mov
cs
insb
test
mov
test
mov
xchg
arpl
jecxz
mov
sub
je
mov
outsl
cmp
test
dec
orb
movsl
pop
dec
ss
jns
mov
sbb
outsb
pop
imull
add
scas
sbb
or
arpl
xchg
xor
scas
push
negl
rcr
shlb
imul
sub
stos
xor
outsl
addr16
stos
pop
xor
es
loopne
repnz
call
stos
inc
stc
sub
repz
repz
es
test
dec
jmp
mov
and
mov
outsb
xor
enter
mov
int3
cmc
sbb
fs
fldenv
ss
cs
mov
out
xchg
ror
je
js
in
mov
cmc
cmp
int
push
rolb
push
test
inc
xlat
std
xor
mov
js
pop
xlat
jp
fisubrl
in
push
in
pop
sbb
test
mov
cmp
dec
aam
cli
inc
out
insb
add
into
outsl
xor
call
ds
test
ss
sbb
inc
stc
cwtl
xchg
lea
outsl
xor
aas
test
aaa
or
jmp
or
jl
ret
dec
xchg
into
xchg
aad
dec
lods
insb
xor
loope
ljmp
mov
sub
sub
scas
stos
test
imul
sbb
dec
mov
mov
popf
jp
in
inc
les
mov
mov
dec
ljmp
mov
adc
pop
xchg
xchg
adcl
pusha
stc
les
ds
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
stc
fs
insb
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
mov
mov
loope
aaa
mov
mov
ds
pop
jecxz
aaa
mov
mov
inc
jp
xor
mov
ds
pop
jecxz
aaa
mov
mov
ds
mov
stc
les
ds
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
roll
pop
ds
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
stc
xchg
ret
insb
pop
jecxz
aaa
mov
mov
ds
pop
jecxz
aaa
mov
mov
loope
movsl
cld
jecxz
push
cmp
xlat
and
push
enter
incl
cmp
mov
lods
lds
aaa
push
push
mov
mov
cs
sub
xor
adc
mov
out
push
ss
lds
das
add
and
lds
movsb
dec
cmp
rorl
or
xor
cmc
pop
addl
push
jns
xor
or
and
stos
xor
leave
xchg
inc
daa
movsl
loope
pop
iret
inc
push
leave
push
inc
daa
gs
inc
hlt
enter
push
pop
stos
mov
adc
xchg
movsl
enter
mov
pop
push
aaa
add
enter
sub
in
rclb
mov
outsb
add
mov
outsb
add
cmp
dec
stos
arpl
in
popf
push
out
loop
mov
stos
mov
pop
push
dec
daa
xor
push
push
cltd
data16
adc
lds
dec
les
outsl
pminsw
out
stos
and
dec
scas
or
in
xor
out
jb
xor
inc
out
out
push
push
out
pop
stos
push
lods
daa
cmp
inc
mov
add
fs
in
flds
sbb
ret
cmpsl
js
es
push
cmc
jge
cs
stos
fs
cs
jl
cs
out
aam
ret
cs
and
inc
insb
sbb
les
stos
mov
inc
jno
push
lock
arpl
pop
inc
sub
cwtl
cmp
insl
xchg
insl
ja
or
push
xchg
addr16
ja
push
lods
movsl
fsubl
iret
inc
push
xchg
inc
mov
inc
daa
pop
loope
pop
ret
insl
aad
xchg
enter
lods
xchg
push
lods
lods
sbb
lods
add
lods
adc
lods
adc
pop
les
test
xor
in
leave
add
push
pop
and
add
xor
enter
popf
fsubrp
pop
pop
in
data16
jne
push
stos
les
aaa
pop
daa
in
ds
push
lods
sub
daa
sub
mov
adc
test
mov
pop
stos
and
in
out
adc
les
test
push
movsl
or
out
add
aad
lods
jb
xchg
aas
sub
imulb
xor
jecxz
and
das
movsl
push
mov
not
sbb
add
out
sub
adc
cmc
dec
arpl
aad
push
movsl
iret
in
sti
test
shll
mov
hlt
sbb
psubusb
xlat
push
out
mov
inc
pop
push
nop
stos
pusha
insl
out
adc
jbe,pt
xlat
xchg
popa
sbb
stos
stos
push
pop
icebp
jbe
ds
pop
and
clc
lea
xor
add
push
push
insl
pop
fs
clc
icebp
xchg
push
aad
aad
lods
sahf
in
cmc
mov
and
gs
or
push
jge
addb
inc
push
mov
cmc
ficoml
imul
cmp
ret
rorb
jmp
jmp
xchg
mov
sub
pop
xor
into
dec
push
inc
xor
leave
and
sbb
sbb
lahf
push
push
sub
test
or
lcall
jl
jecxz
into
push
jl
arpl
xchg
pop
in
add
mov
or
movsb
add
or
orb
outsl
test
cmpsl
xchg
divl
jns
jecxz
pop
enter
dec
push
xchg
fstpt
mov
xlat
notb
mov
dec
xlat
jne
inc
lret
sti
dec
push
ret
sti
xchg
and
gs
sti
mov
sbb
out
mov
xchg
mov
push
push
sbb
lds
cltd
cmpsb
jbe
aad
jmp
sub
je
mov
add
push
sub
lret
adc
je
sub
mov
jae
mov
mov
pop
shll
test
jns
add
and
jne
fs
in
lret
jns
sbb
sub
cmp
jae
imul
dec
mov
lahf
jmp
sbb
loope
ja
ret
ss
and
cmovg
push
add
add
dec
mov
cmp
icebp
in
xor
push
cli
jge
negb
std
aaa
mov
push
or
sbb
mov
push
test
das
popa
in
push
stc
faddl
cs
sbb
dec
xor
aaa
dec
mov
popa
lret
std
sub
xchg
mov
imul
mov
inc
lret
in
outsl
sbb
push
xchg
jmp
push
xchg
adc
call
jmp
add
xchg
inc
test
jl
sub
scas
repnz
repnz
je
data16
jnp
dec
jmp
ljmp
mov
fucomi
in
in
stc
sub
stos
pop
hlt
call
shrb
pop
aad
fdivrl
addr16
ljmp
mov
cmp
lods
pop
mov
pop
stos
repnz
push
aas
sub
loope
iret
adc
xchg
out
shlb
cmc
pop
lds
xchg
movsl
fsts
ret
cmc
xor
xor
outsb
shll
loope
jne
inc
jne
in
inc
jne
or
dec
or
dec
ja
outsb
aam
or
ja
jb
sub
popa
mov
movsl
std
or
and
iret
daa
sub
jle
or
push
ret
push
xchg
clc
loop
in
stos
cwtl
pop
pop
mov
jno
sub
mov
pop
shll
mov
das
push
test
leave
mov
cmp
push
mov
mov
dec
jp
push
push
xchg
mov
mov
insl
pop
dec
loope
pusha
mov
ret
push
push
lods
aam
bound
mov
xchg
fdivrp
push
rcrb
cs
lcall
dec
nop
mov
pop
push
movsb
js
stos
mov
cmc
cmc
movsl
js
xchg
loop
movsb
pop
test
inc
push
std
adc
std
jo
push
lahf
movsb
sbb
jne
je
and
push
sbb
into
fcoms
stc
xchg
stos
mov
jmp
inc
xor
popa
jnp
orb
dec
mov
xlat
adc
push
pop
mov
sub
adcb
adc
cs
pop
cmc
jmp
sub
gs
push
xor
and
dec
imul
sarb
pop
in
sahf
cmp
aaa
sahf
xlat
ficomps
add
add
sahf
or
adc
xor
ss
xchg
dec
jmp
xor
je
es
sub
enter
sub
mov
inc
fidivs
icebp
sbb
aad
xor
and
add
aam
in
jecxz
mov
mov
inc
fsubr
out
ja
jecxz
sahf
push
pop
push
mov
xchg
xchg
sbb
xchg
dec
cmpsl
cmc
cmp
add
sbb
add
daa
push
mov
lods
mov
ds
addr16
aam
mov
loopne
jb
sub
sahf
push
out
loope
scas
cltd
pop
jnp
jmp
outsl
add
mov
sbb
lods
movq
enter
clc
mov
mov
cli
daa
xor
adc
mov
fwait
in
faddl
dec
mul
clc
xlat
add
and
pop
scas
insb
inc
int
sub
push
loop
lds
xchg
fs
mov
sbb
div
in
subb
push
stos
pop
cs
lahf
push
shlb
loop
lock
pusha
imulb
inc
lods
sub
xor
jns
xchg
out
mov
xchg
pop
dec
addr16
push
movsl
push
aaa
stos
stc
aad
inc
lcall
repz
pop
popa
aaa
and
and
dec
jl
cmp
ret
xlat
push
adc
push
push
not
dec
repnz
or
fcmovnb
lock
jmp
adc
inc
mov
scas
cmp
dec
imul
test
loop
mov
push
xchg
clc
push
xchg
xchg
bound
sub
push
popf
or
mov
clc
or
mov
fwait
sbb
ret
inc
push
dec
pop
jb
ficoml
ror
sub
and
aas
ljmp
insb
xchg
mov
xchg
aam
insl
in
das
sahf
xor
leave
push
cmp
dec
push
pop
lret
shrb
es
cmc
inc
mov
movsl
push
pop
and
push
xchg
push
sbb
sub
add
ss
rorl
dec
push
enter
mov
hlt
xor
xor
dec
pop
mov
dec
push
cli
rclb
stos
add
ret
sub
call
dec
jne
test
test
jae
stos
jecxz,pn
test
fwait
mov
sbb
xlat
mov
enter
xor
add
daa
jmp
scas
xor
jne
adc
push
mov
hlt
pop
inc
jmp
int3
aad
xchg
jns
jno
fldcw
inc
pushl
or
or
test
xchg
enter
mov
idivb
std
fwait
mov
xchg
jge
outsl
fcompl
push
pop
mov
outsl
mov
movsl
mov
pop
inc
out
add
out
pop
xchg
jns
fisttpll
and
sub
and
in
jmp
pop
sub
loopne
inc
fwait
in
mov
push
lods
mov
cmpsl
push
jno
mov
mov
sbb
outsb
cmp
outsb
push
xchg
repnz
jns
jmp
test
dec
and
lret
sbb
mov
xchg
mov
jmp
mov
xchg
dec
and
test
mov
mov
mov
jecxz
or
jmp
pop
lds
mov
out
notb
in
cmpsb
push
in
leave
sub
movsb
push
in
sub
cmp
popa
movsb
ja
aaa
mov
inc
int3
lcall
test
stos
mov
std
cltd
mov
pusha
in
fisttps
mov
or
jno
negb
iret
push
inc
fwait
aaa
movsb
roll
or
cld
clc
sbb
adc
mov
int
cltd
xchg
mov
xor
test
pop
xchg
jle
inc
xchg
xchg
leave
push
pop
xchg
sub
sub
outsl
cmp
addb
shlb
mov
jbe
jbe
aas
mov
mov
push
fsubp
push
sbb
fmull
mov
out
sub
xchg
ds
std
inc
pushf
sub
xchg
jbe
popf
cmc
jmp
arpl
mov
mov
sbb
dec
sub
sub
xor
icebp
push
lods
lret
mov
push
fs
jno
gs
mov
loope
movsl
sbb
jnp
xchg
jbe
mov
xlat
sub
mov
pop
mov
sub
movsl
fidivrs
js
xor
ja
mov
int3
and
mov
int
dec
mov
es
lock
sub
mov
aaa
mov
xchg
test
sbb
mov
clc
inc
sbb
test
inc
inc
dec
mov
cmp
mov
cmp
inc
das
out
cmpsl
leave
aad
cmp
rcrb
mov
mov
sbb
mov
or
pop
mov
sti
arpl
jae
add
sub
mov
insb
test
cmpsb
xchg
push
or
int
push
pop
insl
addr16
xchg
in
pop
xchg
xchg
fldt
or
sub
cmp
jmp
rorl
pusha
stc
in
pusha
inc
mov
xor
int
pop
test
cmc
add
in
repnz
and
inc
cmp
sbb
or
or
aad
cmpsl
gs
push
pop
stos
loop
inc
jns
inc
into
pop
ja
dec
lahf
pushf
inc
xor
sbb
mov
repnz
or
lret
shrl
mov
out
cwtl
lock
test
mov
cmpsl
sbb
outsl
mov
jecxz
cld
xor
jle
mov
test
mov
leave
out
jns
addr16
push
inc
jmp
push
mov
pop
pop
xchg
push
clc
out
jl,pn
mov
imul
xor
lds
jns
jg
in
jg
aas
scas
add
cmc
cs
mov
add
xor
inc
sub
pop
cli
sbb
ret
dec
mov
xchg
mov
sub
or
and
sbb
cmp
ljmp
arpl
cld
cmp
mull
pop
cmp
inc
xchg
and
sbb
xchg
insb
add
push
aad
in
lcall
cwtl
out
in
jge
stos
xor
aam
jmp
xchg
imul
movsb
cwtl
sub
xchg
clc
cs
out
faddl
arpl
mov
sbb
push
push
out
jne
into
out
sbb
sbb
push
mov
test
es
xchg
out
dec
mov
sub
adc
mov
popa
push
pop
xchg
or
arpl
and
xchg
jmp
or
ss
ret
jmp
enter
mov
mov
ljmp
test
dec
or
cmpsl
sub
cmp
gs
mov
mov
xor
inc
or
pop
mov
add
mov
mov
mov
notl
adc
mov
fisubrs
cmpsl
out
lcall
popa
mov
mov
movsb
in
xor
in
test
lods
in
pop
dec
fs
es
arpl
bound
push
mov
stos
lret
push
es
out
add
lods
clc
lahf
sbb
sbb
fdivrs
mov
call
testb
out
and
dec
shlb
popa
mov
xchg
jb
jl
pop
pop
in
mov
js
icebp
mov
xlat
aam
jno
mov
outsl
cmpsb
daa
fiaddl
mov
out
into
mov
fdivrp
test
and
out
fldt
in
jl
imulb
dec
inc
dec
mov
jbe
xlat
mov
leave
mov
addr16
sub
cwtl
not
cli
in
test
jne
pop
out
push
pop
cmp
xchg
les
adc
add
adc
push
loop
mov
mov
stos
inc
aam
mov
jne
gs
test
sbb
mov
pop
jp
jo,pn
push
xchg
push
es
cmp
or
mov
xchg
lcall
mov
xlat
movl
dec
test
mov
sub
add
addr16
xchg
aaa
cltd
sbb
ret
inc
pop
ret
aad
ss
mov
push
in
inc
test
xchg
notb
dec
cmp
ja
fadd
add
mov
mov
sub
xchg
notb
aas
xor
icebp
xor
test
adc
jmp
fsubp
pop
call
sbb
daa
ss
mov
in
push
cmc
data16
out
loope
cwtl
push
cltd
test
cltd
aas
inc
cmp
push
ljmp
xchg
pop
enter
mov
adc
pop
xchg
mov
jecxz
sub
sbb
int3
or
push
xchg
push
mov
push
insb
dec
push
inc
ss
outsl
test
fisubs
in
daa
dec
testl
cmc
push
and
pop
sbb
push
js
gs
xor
jno
fiaddl
mov
out
cmc
pushf
lahf
movsl
or
mov
fs
stos
out
push
dec
js
clc
aad
fdivrs
int3
push
mov
push
hlt
adc
inc
out
jb
repnz
mov
and
loope
mov
arpl
lahf
clc
mov
mov
inc
cmp
mov
cmp
xor
cltd
or
cmpsl
stos
dec
sbb
call
loop
das
es
lcall
and
iret
ljmp
fs
dec
loope
xchg
mov
pusha
sub
cmp
pop
insb
std
or
or
push
loopne
dec
daa
jmp
mov
test
inc
in
add
imul
push
sub
sub
test
sbb
add
outsl
adc
jno
sub
ljmp
in
out
cmc
xchg
jne
and
push
cmp
lods
call
sub
das
jmp
imul
pop
sarb
cld
pop
stos
pushw
aam
test
or
gs
lcall
imul
jecxz
jmp
in
mov
sbb
jge
aas
int
fsts
aas
mov
cltd
push
dec
mov
jmp
sub
lock
jmp
or
pop
movsl
int
mov
jnp
pop
int
aaa
mov
daa
dec
xor
xor
xor
mov
movsb
jns
mov
stc
in
dec
daa
sub
jge
or
loop
mov
dec
fs
sbb
cmp
leave
jp
push
xchg
lret
test
dec
mov
xor
insb
aaa
sub
xorb
jne
and
xor
imul
inc
and
aaa
in
lock
push
inc
scas
xchg
in
sbb
in
adcb
ret
arpl
mov
pop
mov
mov
pop
push
mov
mulb
dec
or
mov
je
call
pop
hlt
ret
orb
xchg
and
xchg
out
test
fldenv
mov
out
jmp
pop
ds
test
mov
xchg
xlat
xchg
mov
leave
mov
sbb
leave
hlt
mov
sbb
jle
arpl
in
in
mov
fsubr
jge
rolb
dec
loope
iret
hlt
jae
push
hlt
adc
add
and
loope
shlb
fldcw
cmpl
xor
iret
orb
xchg
into
pop
pop
mov
mov
jbe
sbb
test
add
and
rolb
cwtl
mov
mov
imul
lcall
sub
out
hlt
iret
push
ret
cmc
jbe
push
inc
bound
daa
insb
call
or
mov
stos
sbb
lret
cmpsl
jbe
fsts
cmp
std
enter
andb
mov
mov
stos
enter
int3
sub
aam
and
ds
test
roll
and
out
sar
shll
shll
pop
push
ret
sub
mov
cli
pop
js
or
fmull
inc
sbb
adc
xor
xlat
and
dec
xchg
cltd
lods
mov
jl
mov
insl
xchg
outsl
test
or
or
inc
xor
xchg
loopne
jmp
mull
bound
popa
js
xchg
sub
rcll
cmp
jbe
mov
xchg
adc
ds
xchg
std
xchg
sub
xchg
imul
sub
into
outsl
cli
fldcw
mov
mov
or
cmp
dec
out
leave
mov
xchg
stos
pushf
imul
push
mov
outsl
out
lret
ss
xchg
outsl
jp
movsb
idivb
sub
lret
pusha
sbb
adc
outsl
ljmp
push
loope
xchg
push
popf
out
loop
mov
inc
outsl
xchg
ljmp
into
add
push
sub
sti
jecxz
sub
lahf
sbb
popa
pop
movsb
out
push
popa
push
push
movsl
xchg
mov
adcb
outsl
mov
dec
push
test
je
pop
mov
cltd
loop
movsl
stc
aad
ret
dec
push
adc
cs
add
imul
or
or
push
pop
enter
gs
ficoms
add
lcall
push
cmp
cmpsb
sbb
dec
pop
bound
push
popa
xchg
xchg
pop
add
xlat
xor
addb
or
es
fisubs
call
push
lret
push
out
or
fists
add
into
xchg
decl
loope
mov
mov
mov
jmp
fisubrs
js
aaa
aas
int
les
iret
mov
jns
lock
cwtl
test
dec
mov
push
and
cmp
jnp
aad
inc
ret
sub
inc
movsl
outsb
je
pop
mov
cwtl
pop
insl
loopne
mov
lds
push
scas
loopne
dec
call
out
pop
les
jecxz
pop
les
jecxz
dec
aas
inc
sarl
out
stc
cmpsl
aad
clc
jns
inc
daa
idivl
push
inc
nop
stos
fs
fidivrs
xchg
loope
mov
gs
or
lds
imul
pop
adc
mov
fwait
aas
lret
pop
pop
sub
cmp
mov
daa
cmp
lcall
dec
jns
lcall
rorb
dec
jmp
aad
in
les
cmp
cld
stos
add
mov
sub
inc
movl
ljmp
fucomi
xchg
mov
add
push
pop
test
mov
in
jbe
lods
xor
out
ret
mov
daa
pop
push
push
push
xchg
mov
or
xchg
cmp
jbe
cmc
testl
jbe
cmc
lods
mov
repz
test
and
dec
mov
ret
repz
outsb
ret
inc
sub
mov
movsl
and
es
mov
cmp
ja
lahf
or
fxtract
cmc
xlat
cltd
xchg
lods
mov
movsl
xchg
mov
cmpsb
or
lds
arpl
cmpsl
lret
lret
fmuls
xor
insb
out
stos
out
mov
ds
pusha
lds
aad
lret
and
inc
imul
mov
int
xchg
movsl
mov
mov
lret
pop
jp
std
cld
or
test
push
stos
fsubr
or
insl
jo
loop
pop
push
pop
pop
out
pop
iret
mov
sbb
fucom
mov
push
add
push
je
sub
call
jp
mov
arpl
sbb
inc
mov
addb
cs
mov
ja
in
push
in
test
cmp
ret
popa
jmp
mov
and
add
xchg
test
lods
loope
cmc
and
je
push
aas
jge
out
mov
ret
iret
xchg
mov
rcrb
in
sbb
jo
xor
mov
add
push
jne
loope
push
shrb
ret
push
cmpsb
int3
add
cmp
nop
lcall
int3
test
std
in
push
jo
insb
movsb
add
insb
adc
jne
shl
pop
insb
in
shlb
int3
jmp
jp
add
lret
scas
fcmovbe
cmp
into
add
jp
pop
repnz
xchg
sahf
cmpsb
into
and
fldenv
fs
je
insl
mov
mov
inc
mov
sbb
pusha
or
inc
push
cmp
mov
sahf
xlat
xchg
lds
pop
mov
push
lods
mov
sub
dec
negb
pop
dec
into
add
xchg
inc
lods
push
movsb
jbe
pop
testb
movsb
notb
std
cmp
add
les
daa
jne
push
sub
sub
inc
mov
scas
lods
mov
stos
popa
mov
xor
sub
loope
stc
mov
jl
push
push
mov
mov
imul
je
in
lock
fs
or
iret
test
imul
rcll
insb
pop
stos
andb
adc
sbb
imul
push
iret
sub
jmp
mov
jnp
test
and
and
test
xchg
mov
lret
aas
sarl
leave
mov
fimuls
mov
push
nop
imul
mov
mov
pop
test
push
insl
and
ret
shlb
aaa
call
aam
or
je
pusha
ss
movsl
add
inc
pop
pminsw
rcr
lods
mov
icebp
push
and
es
leave
out
aaa
js
inc
daa
mov
shll
cli
mov
loop
push
push
sub
lds
test
aad
dec
dec
jg
lea
jg
cmp
lds
or
mov
adc
mov
mov
cmp
dec
aad
lods
mov
fisubrs
lods
fstpl
cmpl
jl
mov
cmp
pop
mov
adc
cmp
add
in
jns
adc
sub
push
jmp
cld
adcl
mov
lret
incl
sub
mov
cltd
mov
fimuls
nop
loope
pop
je
adc
test
test
or
leave
lods
pop
enter
jp
imul
jmp
dec
arpl
into
jl
add
roll
jbe
jb
pop
xor
jo,pt
inc
mov
fbld
mov
cs
or
repz
dec
mov
mov
pop
mov
cmp
fcoms
sbb
mov
outsl
xor
movsl
mov
stc
cmpsb
fldcw
ja
aaa
out
cs
add
push
mov
je
jmp
inc
mov
xchg
into
scas
movsw
xor
ja
roll
and
push
icebp
ror
xlat
mov
jns
or
mov
sbb
xchg
mov
enter
sbb
inc
mov
or
out
out
mov
mov
fs
xor
aad
stos
bound
lods
xchg
lahf
xor
jle
into
data16
pop
mov
wbinvd
sub
inc
popa
mov
mov
lods
mov
or
mov
adc
aas
vphaddwd
cmp
enter
call
or
mov
mov
aad
hlt
cmp
xchg
cltd
xchg
mov
sub
es
push
leavew
roll
adc
std
sub
push
mov
add
shll
mov
mov
scas
ljmp
push
inc
insl
ja
push
pop
mov
mov
xor
inc
cltd
xchg
cli
add
push
bound
das
cli
and
arpl
ss
test
test
xchg
fcmovu
cli
push
stos
pop
add
lds
push
imul
mov
cmc
or
mov
push
or
imul
scas
lret
ret
mov
cmp
dec
lcall
sti
jne
fcmovnbe
mov
out
dec
mov
or
jno
pop
or
into
sti
add
ds
push
gs
mov
fucomip
cltd
mov
daa
jp
push
add
mov
adc
jmp
pop
ljmp
movsb
jne
inc
push
push
ds
sti
test
in
jecxz
idivl
cmpl
jg
cmp
cmpsl
loope
arpl
ret
loope
jecxz
xor
movb
pop
push
in
sub
scas
icebp
cltd
mov
dec
aaa
jg
lret
data16
imul
add
xchg
scas
lea
into
pop
pop
or
in
outsl
leave
in
mov
outsl
jecxz
or
dec
xchg
daa
test
fidivrl
repnz
pop
popa
aad
test
xchg
scas
inc
sbb
cmp
add
fistpl
mov
push
sahf
fs
jnp
mov
xchg
mulb
sbb
mul
add
loop
andl
ss
sub
enter
xchg
sahf
pop
sub
add
ja
shl
mov
in
popa
clc
xor
ret
jp
fimuls
mov
cmp
xor
mov
and
inc
addr16
xlat
js
jp
out
inc
sbb
adc
mov
and
push
dec
popf
inc
push
push
in
cmc
movb
out
push
bound
pop
xchg
pop
jmp
push
imul
int3
and
mov
xor
xchg
iret
movsl
xchg
int
in
or
lcall
loope
fwait
or
push
sbb
push
out
lret
outsb
out
leave
dec
out
mov
xchg
xor
insb
fldenv
cmpsb
std
push
ss
addr16
lods
xchg
insb
cmp
mov
hlt
nop
mov
mov
jns
and
std
mov
jmp
dec
mov
xchg
out
sub
in
adc
outsb
dec
jmp
ret
cmpsb
scas
jge
and
xchg
aas
and
mov
xchg
scas
es
outsl
xchg
xorb
test
fildll
insl
imul
arpl
adc
jmp
in
mov
mov
lds
jmp
mov
mov
sbb
in
daa
sbb
cmc
nop
xchg
sbb
and
xlat
movsl
mov
add
push
cltd
push
lods
sbb
gs
sbb
jne
inc
xlat
add
push
pop
lds
mov
push
aad
insb
sbb
cltd
mulb
leave
xchg
and
mov
test
add
daa
hlt
push
sub
hlt
leave
data16
sbb
jbe
out
jns
pop
xchg
xor
aad
jns
movb
push
js
movb
jns
fisubrs
js
push
sub
or
js
xchg
xor
loope
add
dec
mov
push
add
lods
mov
sub
jns
imull
in
add
cmp
cmp
mov
push
test
inc
ss
jns
jo
pop
idivb
aad
in
jns
aad
in
jns
xor
aad
leave
mov
shl
out
push
hlt
push
mov
daa
hlt
data16
hlt
leave
jbe
imul
outsl
pushf
mov
test
sbb
stc
fwait
xchg
cmp
adc
sub
bound
cmp
ljmp
insl
inc
push
push
in
adc
je
outsb
ret
stos
fldt
mov
je,pn
push
sub
add
push
jmp
cmp
sub
out
pop
repnz
add
cmp
mov
lods
out
dec
xchg
push
test
pop
jnp
mov
mov
fnstenv
sub
jmp
and
jmp
cltd
xor
cmp
pop
adc
call
dec
jmp
add
daa
imul
arpl
jecxz
dec
mov
pop
add
test
popf
fstps
mov
scas
popf
mov
mov
jmp
mov
scas
sub
scas
pop
push
xchg
jmp
sub
pop
cmp
popf
mov
mov
add
push
loop
aaa
es
jl
gs
fisubs
fnstenv
jge
or
mov
mov
daa
xchg
loopne
add
lret
out
test
in
push
es
jne
shrb
xchg
mull
cmc
repnz
xlat
jne
xchg
and
sar
dec
xchg
xorb
lock
jp
pop
cmpb
test
jmp
jge
cmp
push
loopne
aad
push
rclb
xchg
xorl
jl
jne
adcb
cwtl
rcll
sub
test
dec
fyl2xp1
arpl
sub
mov
mov
cmp
add
mov
sbb
in
imul
adc
aad
mull
cmp
inc
ds
mov
aaa
cmp
daa
push
mov
push
es
je
xchg
mov
out
xchg
jae
clc
xor
push
jmp
dec
aad
pop
push
test
mov
pusha
adc
jl
gs
orl
clc
xor
push
jmp
dec
aad
sub
loop
mov
lods
aad
movsl
scas
mov
push
push
sub
mov
mov
flds
arpl
outsl
loope
push
in
dec
aad
aaa
cmpsl
in
cmc
mov
sahf
adc
fnstcw
dec
mov
ss
fisttps
mov
xlat
out
mov
cmc
dec
aad
mov
rol
xor
push
jmp
dec
aad
in
adc
mov
jp
std
jl
xchg
scas
sbb
or
sbb
sub
sbbl
mov
mov
fchs
fisttps
mov
es
or
das
int
fcmovu
xchg
arpl
cltd
clc
les
push
jmp
dec
aad
ret
or
rorb
adc
cmp
in
push
or
bound
loopne
dec
out
push
and
mov
dec
push
add
nop
je
stc
jmp
movsb
push
or
push
adc
add
sub
jge
mov
in
cmc
setle
push
sbb
scas
mov
mov
xchg
dec
test
and
stos
push
jo
bound
and
push
jo
insl
imul
cli
mov
push
in
test
pop
push
scas
icebp
xchg
pop
test
xchg
lock
nop
cmp
in
push
xchg
hlt
leave
mov
add
into
or
repz
add
clc
xchg
notl
jmp
out
adc
enter
mov
in
aad
cmpsl
ja
pop
test
jmp
or
push
addr16
repnz
sti
jp
mov
jbe
xchg
sub
hlt
or
flds
xchg
adc
aam
test
xchg
mov
sbb
in
out
pop
inc
stc
inc
test
cmc
push
xchg
loope
mov
sub
sub
xlat
test
cld
push
add
and
dec
lods
test
pop
fs
or
inc
imul
mov
aam
pop
pop
nop
mov
push
push
inc
into
or
mov
call
imul
cmpsb
dec
mov
xor
test
roll
or
std
inc
clc
adc
loopne
xchg
imul
jns
mov
mov
cltd
cwtl
daa
aad
sub
repnz
aad
aad
push
test
ret
push
aad
sbb
or
push
in
pop
sub
mov
mov
lods
sahf
mov
mov
pop
out
or
pop
push
jmp
xchg
pusha
in
test
push
xor
test
imul
je
cmp
jo
repnz
pop
aas
and
fldcw
imull
lock
cmpsl
daa
in
cmp
push
cmp
dec
mov
push
jnp
cmpsl
and
cmp
icebp
call
sub
sub
lods
jecxz
sbb
les
fbld
stos
and
cmc
ds
sahf
mov
xchg
std
dec
jmp
jnp
inc
je
mov
fistps
push
dec
out
test
mov
jne
xor
mov
adc
orb
mov
in
sub
loop
adc
pop
inc
repnz
xchg
daa
sbb
dec
aad
mov
iret
xchg
jle
loope
ja
push
in
cmpsl
xlat
movsl
dec
lret
jecxz
js
cmc
lds
lock
xor
sub
inc
add
push
test
daa
cmp
lock
cld
push
lret
mov
xor
push
xchg
mov
jne
dec
push
imul
sahf
xchg
into
mov
inc
scas
aad
and
mov
int
movsb
movb
dec
cmp
stos
imul
lods
aaa
jmp
push
push
pop
push
outsb
pop
fsincos
push
push
push
jmp
bound
test
jne
dec
iret
mov
scas
out
lret
sbb
or
test
push
dec
test
mov
mov
jmp
jne
movsl
push
addr16
push
pop
mov
xchg
fistpll
dec
add
mov
cmp
jne
mov
movsb
jecxz
dec
notl
pop
aaa
cwtl
movsb
jbe
dec
clc
cmp
xchg
push
ret
xchg
jne
popf
js
cwtl
cli
push
jbe
jmp
fcmovnb
fs
xchg
lods
adc
pop
sub
push
add
push
lods
call
push
lds
push
fadds
dec
fldenv
pop
adc
jecxz
jns
loope
mov
mov
push
cwtl
lret
mov
jno
xchg
std
mov
jbe
cwtl
gs
push
adc
inc
mov
scas
aas
scas
dec
mov
std
insl
mov
lahf
cmp
imulb
fldt
push
add
fildll
pop
in
mov
fisubrs
dec
xchg
jns
ds
sbb
cmp
jns
daa
jp
js
jecxz
or
dec
xor
xor
sbb
cmpsl
jecxz
mov
cmp
push
xchg
or
popf
or
inc
push
lock
loop
add
bound
js
mov
cmc
cmp
dec
andl
inc
dec
dec
shr
or
fsubrl
clc
xor
sub
or
imul
inc
scas
outsb
jl
sbb
cmpb
mov
mov
out
mov
repz
xchg
das
in
pop
fcmovb
mov
js
mov
sub
ljmp
faddl
push
addl
mov
dec
imul
xor
add
lahf
ljmp
add
imul
dec
in
inc
shrl
inc
aad
mov
sub
jne
add
flds
jne
cmp
push
xor
in
inc
insl
int
arpl
mov
popa
and
cmp
xlat
test
push
outsl
scas
jnp
outsb
scas
orb
lret
dec
insb
cmpsl
xlat
jnp
lcall
mov
sub
cmp
push
push
pusha
add
push
clc
lock
insl
cmp
test
fadd
out
jo
lcall
popf
aas
stc
mov
jo
mov
and
into
pop
jo
js
jo
cltd
js
jo
cltd
js
jo
cltd
js
jo
cltd
js
jo
mov
in
lock
xor
cltd
inc
out
and
jmp
int3
push
cmpsb
aad
sub
rclb
mov
or
aaa
jmp
jge
movsl
cmc
pusha
xchg
jmp
ss
sub
xchg
fldl
aaa
xchg
in
and
mov
sub
push
push
xchg
mov
lcall
xlat
imul
test
call
and
or
arpl
in
adc
jmp
mov
or
and
ds
and
pop
cld
pop
test
cmp
mov
insl
adc
dec
and
out
out
jl
es
aaa
movsl
out
jmp
ss
mov
gs
ds
aaa
es
push
mov
mov
xchg
xchg
cmpsb
mov
sbb
mov
mov
jmp
ss
jg
jmp
movsl
enter
mov
stos
test
aaa
stc
stc
sub
adc
mov
or
cld
push
call
xchg
lret
cmp
divl
sbb
push
jge
cmc
xchg
add
sub
outsb
sub
addr16
add
and
movsb
mov
cmp
add
sbb
push
xchg
xchg
loopne
xchg
jne
add
pop
and
mov
cmp
adc
test
lcall
xchg
sub
aad
pop
sbb
xchg
mov
dec
enter
xchg
and
sbb
pop
into
xchg
out
adc
mov
pop
inc
dec
mov
xor
or
iret
es
fcoml
xor
xor
add
xlat
lock
cwtl
or
decb
pop
daa
fnstsw
lock
out
int
ja
jl
adc
inc
andl
xchg
xchg
jo
addr16
cmp
jnp
nop
inc
loope
or
rcll
dec
mov
inc
pop
stc
pop
pop
repnz
bound
pop
cmp
mov
stos
sti
push
xchg
stos
add
sbb
pushf
jmp
pushf
pushl
lea
call
jmp
xor
mov
fildl
pop
sahf
sub
imulb
fiadds
sub
xor
inc
roll
loope
adc
xchg
push
cmpsb
test
stc
mov
dec
mov
jbe
push
or
mov
jb
inc
mov
scas
pop
sbb
sbb
bsf
mov
pushf
call
add
dec
add
in
shll
rcr
daa
or
mov
jbe
outsb
push
adc
lahf
nop
bound
inc
and
or
repnz
or
jns
and
dec
adcl
xor
pushf
movw
movl
pushl
ret
pusha
adc
pushl
lea
jae
pusha
jmp
jns
jl
mov
pop
rcll
add
xchg
adc
negb
mov
dec
shll
sub
nop
lea
dec
mov
mov
lods
push
clc
lcall
leave
cmpl
push
xchg
repz
repnz
xor
mov
pop
adc
aad
in
push
iret
fwait
push
leave
mov
lret
dec
pop
stos
lahf
ljmp
adc
inc
mov
lds
lcall
sbb
movsb
pop
divl
in
stos
stos
in
aad
jb
fsubrl
sbb
adc
mov
dec
xor
mov
xchg
jge
push
inc
xlat
sub
cltd
pop
pop
je
rcrb
shld
mov
incb
pusha
stc
mov
add
pusha
test
test
push
add
call
call
pushl
clc
call
cmp
pushf
sub
stc
stc
bt
rol
jmp
imulb
mov
cmpsb
inc
mov
es
cmp
das
sbb
je
mov
sarb
cmp
mov
outsl
and
in
out
stc
or
inc
mov
movsl
gs
and
xchg
jl
mov
cmp
fstps
mov
sub
fistps
popf
inc
lock
dec
shlb
mov
daa
xchg
lahf
mov
bound
mov
fmul
in
or
xchg
and
pop
pop
hlt
cmc
xchg
push
push
jmp
into
mov
adc
dec
xlat
insb
dec
inc
pusha
adc
lea
push
pushl
jbe
ret
shld
bsr
mov
push
call
pushl
popl
mov
push
push
mov
pushl
ret
movl
pusha
pushl
call
cmpb
sub
jno
std
inc
bound
and
mov
add
mov
aad
xchg
incl
lock
mov
negb
es
out
ret
or
fcompl
repnz
mov
mov
mov
leave
loope
lods
add
popl
pop
int3
lods
inc
aaa
xchg
leave
cli
jo
sbb
aad
outsb
xor
push
loope
push
or
adc
sub
dec
push
jns
pushf
rol
test
clc
cld
clc
pushw
popfw
call
cmc
or
movw
push
push
lea
je
cmp
push
or
jmp
call
call
pusha
lea
jne
mov
movzbw
mov
bswap
movb
jmp
cmp
push
sarb
and
pusha
rcrb
jnp
and
add
dec
sbb
aad
aam
nop
sbb
addl
pop
sbb
push
clc
mov
gs
iret
xchg
repnz
push
jbe
cmp
cmpsb
jle
cli
outsb
cmpsl
pop
xchg
adc
jmp
mov
movsbw
push
movzbl
pusha
mov
pushf
push
movb
pushl
ret
pusha
jmp
cwtl
imul
lds
push
fs
imul
cld
dec
xchg
pop
ficoms
jecxz
xchg
xchg
xchg
xor
or
ret
push
andl
mov
and
rcr
sub
xor
rcrl
out
je
shlb
adc
and
in
pop
xor
aas
repz
cmp
xchg
loope
xor
or
xchg
sti
imul
add
out
mov
mov
cmp
lret
or
jp
pusha
mov
lea
jne
movsbw
btr
movzbw
cmp
mov
bt
cmp
pushf
or
pushf
jmp
pushf
call
push
call
add
aad
pop
mov
inc
or
cli
pop
mov
out
inc
inc
out
xchg
dec
inc
mov
rcll
mov
aad
pop
pushf
loope
jge
fsubrl
sub
add
adc
mov
cmp
shrl
mov
mov
jae,pn
test
popf
lahf
iret
xchg
xchg
sbb
xchg
stc
cmp
sub
cmp
and
scas
cmp
clc
lcall
arpl
push
mov
push
in
nop
jb
inc
fbld
cmp
fwait
mov
cltd
sbb
sub
jae
jo
adc
call
jl
out
movl
je
xor
and
mov
push
rcll
pop
adc
lds
leave
cmp
leave
int3
add
or
sbb
jne
mov
jge
jl
inc
andb
mov
nop
ss
adc
insl
inc
sbb
or
pop
adc
clc
and
xchg
mov
jne
push
inc
fsubrl
cmp
cmp
rorl
cmp
bt
xor
call
aad
cli
icebp
push
add
pop
stc
enter
mov
mov
addb
fnstcw
push
inc
negl
pextrw
mov
sbb
shrl
ret
mov
adc
and
bound
add
es
or
aas
push
xlat
ror
daa
nop
daa
test
iret
mov
sbb
ljmp
cwtl
mov
arpl
pop
fisubl
sahf
lret
mov
adc
aad
xchg
int
fnstcw
scas
setno
test
fidivrl
jge
sub
imul
sbb
loop
pop
mov
sub
stos
push
and
mov
mov
pusha
mov
cmpl
sub
inc
nop
movsl
cmp
add
lds
imul
mov
mov
scas
lock
testl
cld
and
mov
in
xor
repnz
movsl
sahf
loopne
stos
lret
iret
ret
cmpsl
insl
mov
fbld
sbb
push
xlat
in
add
aad
xchg
fidivl
pop
ja
jge
xchg
mov
scas
movsb
push
pop
pop
sti
sbb
sub
mov
scas
stos
sbb
mov
sbb
inc
pushl
lea
bswap
movl
movb
pushf
lea
lea
jge
push
pusha
pushl
popl
pusha
push
pushf
pushl
ret
pushf
lea
jne
jmp
pop
pushf
pusha
mov
pusha
movl
jmp
add
add
sub
mov
xchg
push
cwtl
fwait
mov
aas
aam
and
std
aas
xchg
hlt
nop
dec
sti
pop
cltd
fdivrs
cltd
pushf
add
pop
lock
call
cmp
inc
xchg
lods
adc
rcr
into
or
dec
rcrl
loope
mov
shlb
lods
int
sahf
mov
or
and
aam
jge
mov
fsubl
js
xchg
insb
ja
ret
stos
mov
inc
mov
or
jbe
mov
dec
xchg
push
out
loopne
lcall
and
cmp
cs
cmp
pop
insb
imul
pusha
cmpb
fistpl
hlt
ss
ja
inc
mov
xor
jb
and
clc
cmp
dec
imul
pop
addr16
pop
insb
sahf
xor
mov
pop
jns
adc
xlat
mov
mov
jno
sub
leave
and
je
adc
rcr
adc
xor
movsbw
pop
not
not
pop
push
pusha
mov
pushf
movzbw
mov
mov
push
call
ss
pop
lret
imul
ffree
ljmp
ret
push
xor
fstpl
movsb
cltd
sub
aaa
jo
lahf
mov
push
mov
popf
int
adc
addr16
mov
rcr
push
lret
xor
xchg
lods
je,pt
and
cli
lods
or
xchg
pop
mov
pop
scas
aaa
pushf
add
pushl
jmp
pusha
lea
jae
push
cmc
xor
push
mov
lea
call
jmp
call
inc
dec
push
inc
lea
pusha
mov
inc
lea
cmc
xchg
not
shl
mov
xor
mov
clc
push
shrd
clc
call
movl
pushl
lea
jmp
lea
je
push
bt
push
sub
movw
cmp
pushf
pushf
lea
ja
stc
jle
stc
imul
cmp
add
push
lea
jmp
mov
pushf
dec
jmp
push
lock
std
std
adc
mov
pusha
mov
leave
dec
int
imul
mov
aaa
ss
and
or
jge
cmp
adc
dec
inc
repnz
aam
pop
les
loope
sub
daa
test
jge
adc
rclb
inc
ret
in
xchg
push
es
mov
out
or
leave
add
iret
jb
jo
jmp
sbb
inc
in
push
movl
call
pusha
movb
pushf
lea
jne
rcr
mov
bsr
jmp
test
pusha
lea
je
pushf
pushl
jmp
lea
jne
setb
jmp
aaa
aas
fnstsw
xor
and
push
mov
test
dec
adc
sub
xor
adc
pop
fstps
and
insb
test
addr16
pusha
bound
ja
adc
pop
daa
mov
mov
test
push
mov
adcl
sbb
sub
fs
icebp
enter
shlb
xlat
in
leave
movsb
cwtl
das
daa
stc
xchg
mov
mov
rorl
hlt
scas
jne
mov
mov
rcr
into
sahf
inc
sub
pop
lock
sub
sub
xchg
std
ja
sbb
js
test
inc
aad
popf
das
or
ficomps
sub
imul
push
push
loopne
test
clc
arpl
or
shlb
cmp
mov
push
outsl
repnz
push
insl
cwtl
aad
or
fcomps
cwtl
test
loop
dec
es
mov
sbb
stos
adc
ret
in
mov
mov
xorl
or
jae
inc
lods
ret
or
lret
loope
jmp
mov
mov
testb
shl
mov
cmp
adc
insb
jmp
lea
fsub
mov
mov
mov
sbb
or
mov
push
jp
cs
scas
lcall
mov
shlb
dec
push
cmp
inc
cmp
call
adc
xor
jmp
dec
jns
bound
lcall
ficomps
mov
xor
push
push
push
jne
and
ss
outsl
scas
jbe
pop
jne
pop
sub
shl
cmp
add
mov
lcall
cltd
adc
pusha
shrb
cmp
mov
or
push
idivl
icebp
aam
mov
loopne
mov
rorl
sar
repz
mov
sar
jle
cmp
pusha
jmp
pusha
lea
jae
call
movl
pushf
lea
jmp
je
xor
dec
add
mov
jbe
mov
add
push
stos
or
mov
jb
xorb
cmp
fbld
les
mov
cmpsb
mov
faddp
pusha
fnstenv
jp
push
mov
mov
xor
add
dec
mov
call
mov
push
jbe
cmc
cmp
call
roll
lahf
add
pop
lahf
and
mov
lahf
mov
sub
fucomip
imul
in
shl
sbb
jnp
imul
mov
rcll
pop
shlb
lret
sub
pop
xchg
sbb
test
imul
pop
inc
or
lods
loope
mov
mov
loop
icebp
inc
cmc
add
mov
push
rcr
bsf
neg
push
lea
shl
dec
or
mov
sar
shl
push
clc
add
push
neg
rol
push
rcr
push
sub
rcl
not
bsf
mov
neg
mov
btc
shrd
rcr
sar
mov
call
sbb
cltd
cmpsb
and
cmp
sub
sbb
aas
int
jmp
popf
sub
jle
mov
xor
cmp
sbb
sub
add
js
fistpll
test
or
or
jne
bound
mov
cmp
popl
mov
mov
movsbw
push
movzbw
movl
setp
movsbw
setns
pushl
lea
pushf
call
movl
pusha
movl
mov
pushf
movl
push
mov
pushf
pushf
lea
jmp
bound
fidivrl
xor
rcrl
das
xor
or
xlat
jp
and
in
push
push
aam
jp
pop
mov
push
js
mov
cmp
out
pop
fnsave
gs
jns
mov
pushl
inc
cmp
out
out
lret
adc
pop
mov
shlb
scas
data16
dec
pop
ret
mov
jmp
loope
mov
push
cmc
scas
xchg
xlat
ss
bound
add
orb
pop
mov
outsb
out
xor
mov
lret
xchg
rcrb
pushl
sbb
dec
movsb
stos
or
int
jo
dec
test
ss
lcall
and
mov
repz
inc
pop
jno
sti
mov
mov
out
add
jne
andb
mov
stos
or
fldenv
and
mov
in
cmp
out
mov
sbb
ds
rcrb
adc
xchg
dec
test
pop
add
stos
mov
in
dec
lret
xor
fdiv
mov
sub
inc
adc
in
shll
ljmp
jb
and
add
sbb
sub
jbe
jns
ret
stos
mov
add
jb
js
mov
cmpsb
xchg
stos
stos
enter
popa
movl
stos
push
sub
out
push
jnp
lahf
or
loop
cmp
roll
or
arpl
mov
xchg
icebp
cmp
lods
ret
sbb
jmp
stc
xchg
aam
dec
pop
bound
cmp
push
pusha
lea
jbe
push
lea
jb
call
jmp
lea
jne
pusha
mov
pusha
mov
pushf
lea
jg
push
mov
mov
js
pusha
pusha
mov
lea
call
pushf
call
push
pushf
call
je
sbb
mov
mov
rorb
fidivrs
push
xchg
or
out
cmp
mov
inc
je
adc
pop
cmp
xor
push
nop
add
mov
xchg
mov
aas
imul
push
adc
sub
push
daa
stc
or
jmp
jg
sub
mov
mov
in
jnp
jno
repz
mov
pop
repz
lret
mov
cwtl
xor
mov
bound
call
stos
pop
lds
sbb
cmp
lea
cmp
fwait
imul
sbb
imul
pop
incb
lea
mov
mov
inc
insb
mov
jne
xchg
lea
jne
rcr
dec
mov
jmp
stc
fstpt
fsubrl
jl
push
imul
xchg
repz
mov
ja
mov
in
jo
imul
aas
sub
sbb
and
sub
sti
jbe
cmpsb
inc
push
xor
xchg
mov
pop
rorl
fwait
hlt
mov
pop
mov
jp
stos
mov
add
jle
test
scas
cmp
lret
test
sub
sarb
mov
shll
or
sub
add
std
mov
pop
int3
jno
bound
rorb
stos
inc
sbb
xor
inc
sahf
call
rorl
aas
and
inc
and
xor
sub
test
sti
jmp
mov
ror
sub
adc
sar
mov
xor
test
add
seto
inc
jmp
ja
bt
cmp
repnz
push
pushf
pushf
movb
lea
jne
btr
mov
call
movl
push
push
pushl
push
lea
jmp
pusha
pushf
movl
pushf
lea
jmp
movl
pusha
mov
call
clc
test
jmp
sub
call
inc
pusha
lea
jg
push
movw
inc
mov
movb
lea
jmp
cmp
das
bts
push
setge
add
lahf
mov
cwtl
rcl
sub
das
setp
push
test
sbb
adc
shl
push
ror
adc
test
push
aaa
or
sar
push
cwtl
shld
test
mov
mov
stc
clc
pusha
test
pusha
pushf
call
mov
pop
js
pushf
push
mov
push
mov
movzbl
pop
lea
not
mov
pushf
pushl
ret
jmp
bts
pusha
shld
rcr
mov
movb
pushf
cmp
clc
shl
push
jmp
pusha
test
movw
mov
lea
je
pusha
pushf
stc
add
push
jmp
lea
jne
pushf
pusha
inc
movb
mov
call
pusha
pushl
call
cmp
int
ss
sbb
movsl
pop
filds
add
mov
divb
outsl
lods
lret
adcl
dec
or
inc
ds
popf
mov
sahf
adcb
cli
std
fistpll
pusha
push
pusha
aaa
jno
mov
xchg
push
xchg
fdivrl
pop
mov
fcomps
xchg
sbb
mov
inc
inc
loop
inc
lods
mov
add
xchg
fldt
addr16
dec
cs
pop
ja
loope
loope
or
xchg
cmpsl
jb
and
cmp
xor
sahf
add
push
add
xor
les
gs
and
icebp
fmull
push
repnz
mov
sbb
sub
jnp
adc
repz
decl
ljmp
mov
pop
xor
incl
cmp
jns
jle
ss
add
mov
mov
pusha
addl
push
push
hlt
sub
clc
inc
mov
pshufw
mov
xchg
fnstcw
cmove
sub
adc
sbb
dec
dec
xchg
mov
outsb
movb
or
mov
sti
rcr
add
dec
outsl
arpl
inc
jb
add
push
clc
sti
decl
test
sti
call
jmp
mov
sbb
add
adc
test
ror
mov
cmp
call
das
movsb
or
sbb
fstl
jp
jecxz
insb
mov
out
mov
fs
sbb
cmp
cmp
hlt
xchg
or
sub
cmpsl
inc
shlb
push
lock
inc
xor
xchg
mov
xchg
pop
mov
stos
cmpsb
mov
rolb
sbb
scas
dec
dec
sub
inc
aad
and
stc
sbb
dec
push
adc
dec
mov
lds
sub
pop
mov
jl
dec
popa
mov
mov
jl
cld
sub
orl
divl
cmp
or
xor
mov
cmp
incl
dec
xchg
xchg
sub
je
jge
ficoml
arpl
dec
stos
or
xor
push
adc
dec
js
cmp
popa
mov
dec
bound
or
enter
out
pop
cmc
mov
sbb
data16
lahf
mov
gs
mov
cld
add
stos
out
int3
xchg
rorl
lcall
inc
test
add
xchg
daa
cltd
in
lock
fldenv
fcomip
pushf
lahf
jmp
arpl
fisubs
jecxz
inc
in
dec
dec
push
dec
nop
pop
adc
scas
aas
cs
mov
test
ret
int
movsl
loop
out
xchg
mov
inc
roll
sbb
xchg
sti
mov
out
sbb
inc
mov
out
or
decl
and
and
xor
and
jmp
push
push
lea
je
shl
sar
sub
xor
movzbw
mov
cmc
bsr
mov
stc
inc
cmc
rol
shr
bswap
mov
test
jmp
push
lock
std
std
lea
xchg
divb
inc
sti
out
into
lcall
mov
pop
sbb
xor
mov
cmp
mov
and
aam
push
movb
fsubrl
adc
test
xchg
sub
movl
push
mov
jbe
fs
out
mov
fsubl
inc
enter
inc
test
bt
mov
mov
test
call
bswap
lea
mov
lea
call
mov
not
jns
not
bswap
pop
pusha
push
push
pushl
ret
lea
xchg
movzbl
movzbl
movzwl
pushl
movsbw
push
push
lea
pusha
movzbw
call
not
xchg
ja
pop
xchg
pusha
lea
bswap
mov
push
lea
mov
mov
pushl
ret
xchg
sbb
dec
add
mov
and
mov
jecxz
std
dec
mov
or
cmp
out
sub
jmp
mov
ljmp
sub
sbb
test
mov
cmpsb
shl
adc
cltd
pop
mov
sub
pop
dec
out
mov
mov
mov
jmp
push
movl
push
pushf
pushl
lea
jmp
jmp
aad
test
mov
mov
idivl
xorl
movsb
mov
shrb
paddsb
fwait
adcb
or
cmpsb
cwtl
fwait
adc
fs
jmp
inc
orb
pop
shrb
std
inc
stc
int
jae
or
pop
push
pop
icebp
push
adc
and
push
fisubs
mov
inc
dec
jp
cmp
jmp
sub
int3
sub
scas
enter
rcrb
pop
add
aad
and
lcall
lahf
shr
mov
push
es
mov
sbb
ret
int
jmp
xchg
lock
mov
sub
push
mov
push
in
loope
gs
mov
in
lock
mov
cmp
jl
jge
cmpl
mov
es
push
test
mov
test
dec
fs
or
inc
sub
xchg
sbb
fadds
ret
pop
push
xor
repz
jnp
dec
gs
jno
xchg
xlat
pop
adc
inc
push
mov
xchg
jo
jno
and
dec
sub
inc
push
clc
sub
push
addl
sub
scas
xor
mov
in
sbb
inc
adc
push
imul
mov
in
mov
push
jp
int3
sbb
ret
insl
jo
xchg
inc
fsubs
add
cmp
mov
mov
pusha
cwtl
mov
lea
bswap
pop
push
lea
not
mov
lea
setno
bswap
setnp
mov
call
pushf
adc
mov
mov
addb
mov
push
push
sbb
sbbl
lods
jge
mov
fiaddl
adc
aad
mov
mov
push
jns
lahf
arpl
add
sbb
cli
int3
sub
push
in
fwait
pop
fs
mov
sbb
sbb
scas
mov
pop
rorb
adc
mov
pusha
cmp
inc
es
adc
lcall
insb
lods
add
or
inc
mov
repnz
sti
movb
movl
movb
movl
pushf
call
jmp
bt
add
jl
push
lea
jne
jle
setae
pushfw
sbb
and
rol
jmp
clc
or
pushl
mov
pushf
lea
je
stc
pusha
cmp
pushf
lea
jne
call
pushl
push
add
cmp
pushf
cmp
or
call
add
add
add
add
add
add
add
add
sbb
rcrw
rcrl
add
add
add
push
sbb
mov
loopne
cli
inc
outsl
inc
xchg
sahf
repz
fisubrl
stos
push
adc
lahf
or
fwait
dec
ja
pop
lcall
lret
sub
js
sub
aad
aas
popf
inc
or
pusha
cmp
push
iret
cltd
xor
adc
jb
loope
loop
xchg
cli
int
pusha
nop
mov
push
sbb
or
dec
sub
idiv
shll
gs
sub
or
xchg
push
push
jle
pushf
jno
in
or
sahf
jmp
mov
xor
repz
arpl
push
push
sbb
ja
jl
adcb
mov
sbb
daa
into
ja
mov
pushf
cmp
jb
xchg
inc
leave
pop
add
mov
insb
xchg
repnz
inc
sub
rclb
ds
call
add
jnp
add
out
push
cmpsb
dec
in
outsl
int3
sub
inc
add
addr16
insl
lahf
cli
outsb
inc
xchg
frstor
pop
pop
sub
pop
xchg
out
mov
outsb
ss
push
xchg
sub
or
mov
outsb
incb
cmovns
sti
sti
mov
inc
xchg
es
xchg
rcrb
or
ss
cmp
fnstenv
lea
cmpsb
xchg
cltd
in
into
and
mov
shlb
cmp
xchg
inc
jmp
andb
push
movsb
cmp
xchg
test
fdivrl
iret
adc
adc
and
enter
les
sub
mov
lcall
and
rcl
fidivs
cmpsb
mov
mov
jo
sbb
pop
sbb
jp
push
push
mov
jns
jle
mov
sarl
stc
adc
dec
or
pop
cmp
jo
scas
fld
daa
fs
gs
dec
inc
push
mov
shl
out
pop
mov
xchg
scas
sbb
lds
aas
add
xchg
ds
cmp
les
push
xor
inc
sub
les
into
xor
pop
add
sub
lret
mov
sbb
sub
pop
aaa
fs
add
sbb
stos
das
icebp
aam
mov
or
call
jg
and
cmpsl
les
fwait
test
jmp
cmp
lret
outsb
sti
inc
aad
rcrl
notl
and
mov
xor
lea
icebp
mov
test
gs
call
xchg
mov
scas
out
jb
aas
fisubrs
insl
xlat
cmp
push
shlb
adc
or
push
lcall
inc
and
fisttpl
sub
rclb
jae
mov
xor
loop
lcall
mov
sub
jg
cmp
lods
and
adc
pop
mov
mov
sub
es
xor
outsl
addr16
lahf
push
aam
inc
fsubrl
push
mov
loop
int3
icebp
js
dec
cmp
mov
pushf
aas
and
loopne
jecxz
push
dec
mov
sbb
push
or
and
or
push
push
mov
loop
pop
aam
mov
shll
pop
pop
jle
xor
out
or
enter
fsubr
into
sub
mov
jo
inc
enter
cmp
mov
inc
lds
cmp
ret
xor
stos
pop
test
dec
mov
dec
add
movsb
outsl
imul
hlt
fiadds
sub
cmpsl
pop
sahf
ret
cmpsl
jge
das
ja
rcll
mov
add
lods
subb
lret
movsb
ja
sbb
shlb
pop
mov
pop
subb
outsl
cmp
mov
push
iret
sbb
pop
mov
outsb
jl
xchg
mov
jo
or
mov
aam
pop
aaa
clc
mov
ret
push
ret
leave
add
push
int
mov
pushf
inc
sub
or
lds
mov
mov
sub
mov
bound
jo
sbb
jmp
dec
std
fdivrs
scas
and
xchg
outsl
mov
jae
dec
dec
jae
dec
enter
push
cld
loopne
cmp
or
loopne
out
sub
cmp
testb
lea
dec
in
je
push
pop
enter
ja
or
mov
mov
pop
in
arpl
sub
add
adc
fnstsw
or
sbb
xchg
lahf
mov
lods
sub
and
xor
lret
shlb
pop
mov
lret
cmpsb
sub
sbb
test
mov
cmp
clc
inc
cld
mov
xor
shll
inc
sub
xchg
adc
add
fbld
cmpsb
lea
arpl
sub
in
jp
sbb
inc
mov
mov
sarb
ret
out
xorb
repnz
or
mov
add
fisttpl
in
data16
xor
pop
insb
scas
stos
push
mov
push
mov
iret
mov
arpl
icebp
sti
roll
or
pop
stc
mov
arpl
cmp
inc
inc
add
aas
clc
ss
and
adc
mov
adc
mov
js
pop
jle
movsl
and
mov
xlat
add
sbb
cmp
mov
stos
cmp
es
and
or
lock
repz
mov
push
popa
mov
cwtl
mov
pop
sbb
es
cmp
mov
push
and
leave
sbb
idivb
insb
rep
pop
jg
not
outsl
ja
xor
jb
jbe
jg
dec
test
arpl
cmp
ret
sub
test
mov
shl
int
rcrl
rclb
or
mov
sbb
ret
mov
test
pop
movsb
mov
cltd
push
shll
sub
xor
jbe
flds
dec
fsubs
pushf
xor
push
adc
inc
aaa
test
bound
cmp
stos
scas
in
cmp
insl
stos
xor
scas
std
jae
push
aad
rcrb
addb
imul
sub
jecxz
xchg
or
pop
pop
add
dec
jmp
pop
xchg
dec
daa
in
xchg
imul
aas
cmp
fxch
enter
mov
gs
mov
aaa
cmp
xor
pop
push
push
shrl
out
repz
out
or
mov
dec
bound
insl
nopl
cmp
pop
mov
daa
addr16
dec
inc
test
push
cltd
mov
cs
mov
xor
cltd
xchg
cmp
lds
jb
daa
xchg
mov
sub
leave
out
mov
ficoml
sub
dec
fidivrs
mov
pop
addr16
sbb
sub
fcmove
scas
mul
adc
mov
in
cmp
out
or
mov
in
outsl
jge
lock
mov
jbe
push
mov
sbb
lcall
dec
and
or
push
addr16
test
jae
push
movsb
aam
test
adc
mov
pop
cli
in
xchg
dec
adc
jo
mov
ljmp
iret
mov
fcomps
out
adc
sub
dec
int3
ljmp
fsubr
jge,pn
in
movsb
andb
push
ror
sub
dec
xchg
loopne
fwait
lods
mov
mov
lret
ret
jge
ja
jns
adc
jb
add
scas
call
push
cltd
dec
stc
mov
imul
mov
xchg
out
repz
fwait
cmp
das
out
jae
push
inc
mov
dec
dec
pop
inc
sbb
data16
sahf
sbb
cli
cmp
or
cmpsl
sub
cmc
ds
dec
popf
cli
adc
lret
divb
mov
stc
test
aam
movsl
scas
push
es
mov
jb
ljmp
sub
fsubl
fidivl
push
out
and
push
or
outsb
pop
cld
mov
xor
xchg
rcrl
pop
push
out
sub
mov
mov
int3
sub
mov
and
fdivl
mov
jp
or
je
and
mov
push
push
fdivs
lret
test
pop
sbb
dec
jge
adc
mov
les
xor
cmp
ficompl
sub
lret
adc
cmp
ret
cmpsb
mov
mov
fcompl
xor
cmc
pop
ret
cmpsl
and
movhps
pop
cmp
ss
data16
rclb
fsubrs
mov
sbb
lds
int3
push
cli
adc
cmp
scas
dec
imul
divl
cmp
add
jae
mov
mov
sbb
dec
in
leave
jno
xor
inc
popf
movsb
push
arpl
dec
sbb
add
push
prefetch
das
adc
sub
hlt
push
mov
push
jno
mov
push
aas
stos
aas
enter
hlt
add
test
int
xchg
sbb
sbb
and
push
dec
pushf
rorb
xchg
out
aas
insb
dec
fadd
in
clc
outsb
aam
or
jmp
pop
or
lret
xchg
mov
xor
bound
dec
inc
jle
aas
stos
ds
cmc
xchg
rcll
xor
leave
adc
test
xlat
outsb
rcrl
jns
add
xchg
shrl
xor
dec
xchg
jge
mov
adc
lods
inc
pop
fisttpl
xchg
pop
cmp
jp
dec
jle
idiv
pop
arpl
dec
insl
decb
out
xchg
out
or
cmp
enter
out
cwtl
add
insb
jg
xchg
ljmp
lea
rcrl
sub
fwait
jle
add
cmp
xchg
pop
aas
popf
ja
pop
push
icebp
sahf
push
dec
adc
cltd
jo
push
repz
lods
movsl
mov
cmp
rcr
push
xor
jb
adc
movsb
cwtl
adc
cmp
hlt
xchg
jmp
jmp
jne
inc
rcrb
inc
lock
mov
fistl
mov
mov
nop
xor
shl
mov
cwtl
push
lods
inc
leave
imul
fnstenv
cs
dec
xchg
push
je
sbb
push
insl
int3
adcl
dec
mov
add
xchg
fdiv
push
adc
mov
pop
scas
jmp
mov
lcall
cs
sbb
outsb
inc
outsl
inc
push
jge
outsb
add
imul
add
aas
jns
mov
andl
inc
adcl
jl
in
cmpsb
push
jmp
add
scas
pop
ss
mov
mov
mov
jmp
jnp
nop
dec
jecxz
iret
xchg
mov
clc
into
sahf
je
add
jmp
pushf
pushf
inc
jmp
fdiv
ja
inc
aam
jmp
xor
fs
test
and
and
pushf
push
pop
popf
sbb
addr16
fildl
xlat
sbb
fdivrl
addb
mov
dec
mov
out
ret
push
xchg
stc
rcrb
pop
and
aas
icebp
inc
mov
adc
mull
icebp
push
mov
shrl
lret
negb
push
fcoms
aas
pop
sub
std
inc
pop
cmp
aas
xchg
call
mov
js
lods
push
pushf
pushf
mov
pusha
mov
pushf
call
pushl
pushf
movl
movb
mov
movl
pushf
pusha
lea
jmp
pusha
mov
movl
jmp
test
and
jg
xchg
adc
push
mov
mov
jnp
das
cmp
xchg
push
cmp
mov
sub
mov
daa
mov
lea
call
push
lea
jne
cwtl
cwtl
mov
pusha
lea
jmp
mov
negl
mov
popl
xlat
outsl
outsl
xchg
fsts
add
btr
bsr
sar
add
call
add
pushf
jmp
pushf
lea
je
xor
add
add
bsf
ror
sub
or
test
shrd
rcr
shr
stc
seta
mov
adc
add
bts
add
ror
rcl
shl
jmp
iret
enter
sub
jg
andl
lods
push
add
mov
pop
loopne
ds
jo
mov
mov
mov
xchg
ljmp
aad
idivb
rolb
aas
and
push
xor
add
push
stos
xor
int3
lock
lods
out
out
inc
pop
sub
mov
push
shlb
test
push
dec
jmp
mov
xchg
dec
movsl
fwait
pop
pop
pop
pop
ret
cmp
pop
cld
mov
ljmp
ja
je
cmp
call
jmp
lds
lcall
push
std
les
ljmp
jecxz
mov
adc
cs
push
add
cltd
fwait
lret
in
dec
mull
sbb
cmp
stos
daa
jmp
jo
xor
mov
idivb
mov
repz
mov
mov
iret
mov
mov
jle
stos
add
jle
out
inc
loope
push
sub
xchg
sarl
out
mov
inc
jmp
sub
neg
movsbw
aaa
push
cmp
rcr
push
mov
shl
not
push
bt
stc
aaa
sub
jmp
jmp
movb
lea
jne
add
sbb
not
mov
pusha
cmp
push
call
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
mov
lea
not
lea
pusha
jmp
mov
movsbl
pusha
bswap
pop
lea
call
lea
je
pusha
push
lea
jmp
cmc
sub
test
cmc
jmp
sti
push
sbb
inc
out
adc
pop
pop
jmp
cld
jmp
push
push
sbb
mov
adc
js
loopne
in
outsl
adc
lock
call
cmp
xor
adc
sahf
jb
flds
inc
fisubs
pushf
add
fiaddl
sub
sub
into
negl
cmp
movsl
cld
pusha
xchg
sbb
add
movl
mov
mov
outsb
xchg
addr16
cs
call
sbb
jge
test
jno
push
pop
ret
jp
fcmovnu
push
fs
adc
movl
mov
icebp
push
aam
lahf
jp
push
fwait
adc
xchg
jns
sbb
popa
filds
inc
enter
out
xor
and
stos
push
fs
cmp
xor
dec
stos
xchg
outsl
enter
test
es
cmp
cmp
dec
cs
dec
js
sbb
jmp
mov
fisttpl
add
lods
push
inc
in
xchg
test
sub
stos
loope
push
fwait
std
pop
xchg
mov
xchg
cmc
and
and
cli
lods
mov
mov
xchg
cmp
push
pushf
lea
jmp
movb
jmp
inc
mov
push
pusha
pushl
push
inc
call
jmp
and
add
shr
out
mov
gs
push
mov
add
sti
mov
rcl
or
xchg
arpl
sub
loope
lcall
push
sub
sahf
or
repz
push
jge
stc
repnz
shlb
xchg
xchg
inc
popa
sbb
lcall
and
dec
push
xchg
fnstsw
roll
stos
add
fcos
cmp
imul
das
inc
cmp
rol
loop
pop
stc
adc
add
leave
repnz
mov
xchg
movb
pushf
jmp
repz
xchg
lods
dec
inc
fildl
xor
pop
add
mov
ret
jb
push
sbb
xor
aad
add
xor
ss
aas
lahf
jno
aas
or
aaa
adc
dec
loopne
jne
xchg
and
jmp
cmp
pop
aad
ret
fidivl
xchg
pushf
push
mov
jbe
or
and
js
pusha
repnz
sub
mov
dec
sub
bound
dec
or
ret
lock
adc
stos
inc
lret
push
filds
mov
mov
add
jle
setl
clc
in
in
mov
dec
filds
stc
mov
pop
data16
subb
dec
pop
ljmp
xchg
sahf
pop
iret
rcll
ja
outsl
add
add
push
jo
pop
adc
out
mov
mov
das
cltd
ja
imul
xchg
int
mov
mov
lds
sub
pushf
mov
lcall
jnp
jle
nop
mov
cli
int3
loopne
aas
sbb
leave
int3
leave
adc
mov
lahf
test
mov
push
adc
inc
aad
test
invlpg
jnp
cmp
cld
push
int
imul
lock
push
bnd
fisubs
aad
jp
xor
loope
sbb
sub
push
add
dec
jne
cmp
inc
add
mov
lock
or
xchg
xchg
jne
cli
int
add
daa
inc
xchg
sub
into
rcrl
les
call
int
pop
repz
mov
xchg
adc
fildll
cltd
ret
mov
sbb
or
ret
xchg
lahf
cmp
mov
cltd
stos
jmp
lcall
movsl
push
into
mov
shrb
sar
call
setb
call
adc
pushf
movb
mov
pushf
pushl
ret
mov
movsbl
pushf
lahf
lahf
lea
push
movl
movb
pushf
pushf
mov
pushl
pushf
movb
pushl
ret
jmp
sub
pushf
bsf
mov
jmp
call
lea
ja
lea
xchg
pop
setb
mov
pusha
movzbl
mov
not
push
not
mov
bswap
setbe
not
movzbw
mov
movb
push
jmp
pusha
cmp
call
push
push
inc
lea
pushf
lea
call
pushf
adc
pushf
call
movw
lea
je
movzbw
pusha
mov
movzbw
mov
pushf
movsbl
mov
push
lea
pushf
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
and
pushl
popl
cmc
clc
cmp
pushf
call
or
and
dec
xchg
sbb
loope
stos
scas
xlat
out
mov
testl
mov
data16
adc
int3
adc
cs
mov
sbb
filds
jg
pop
scas
mov
shl
mov
push
jae
mov
sbbl
fidivs
fadds
jno
lea
jne
mov
jmp
push
lea
jne
inc
mov
cmp
cmp
pushf
pushf
pushf
call
jmp
push
lea
call
jmp
call
test
cmpb
push
push
lea
jne
xor
shr
xor
shl
mov
shl
rcl
or
shl
add
add
mov
cmc
jmp
jge,pt
xchg
push
outsl
add
addr16
fadd
adc
repnz
mov
jns
and
sub
lods
push
adc
cmp
loope
fisubs
mov
sub
add
cmc
xchg
mov
jo
hlt
mov
divl
data16
call
pop
fwait
cld
mov
cmp
and
lea
je
movsbw
pusha
add
add
mov
pusha
stc
pushf
add
cmc
cmc
mov
shl
shr
mov
call
lea
je
xadd
not
movzbw
shld
mov
shld
bsr
add
shl
add
movzbw
bt
neg
setne
mov
push
clc
clc
test
jmp
pushf
push
movl
pushf
push
lea
jmp
not
pusha
mov
movzbw
jmp
jae
testb
subl
or
daa
jmp
or
dec
xor
and
pop
and
and
sar
mov
inc
sub
movb
ja
adc
mov
jge
dec
movsb
stc
imul
cltd
mov
cmp
mov
mov
pushf
call
movl
push
lea
jmp
call
shll
ret
pop
pop
jb
mov
mul
orps
add
shll
negb
fisubl
sbb
add
jl
or
and
sbb
and
repz
pop
popa
cmpsb
xor
out
jge
addr16
leave
push
sub
cmpsl
dec
or
jae
test
cmp
xor
adc
jmp
add
xchg
not
stc
sbb
mov
call
vandnps
or
cmc
int
sub
stos
shl
std
movsl
es
mov
mov
lahf
xor
mov
jmp
add
aaa
outsb
pop
inc
addr16
aaa
mov
sbb
clc
jno
in
shrl
sti
sahf
mov
add
cmp
add
xlat
in
sahf
cwtl
test
ja
frstor
call
pop
lea
xor
xor
fildl
testb
mov
mov
inc
lret
cmp
lret
fsubrl
push
fld1
mov
jmp
xlat
push
jle
shrl
in
push
aam
rclb
adc
mov
pop
pop
rorl
inc
int3
sbb
inc
pop
jle
jnp
add
mov
push
xchg
dec
mov
nopl
jl
scas
xor
mov
aam
jl
insl
pop
fwait
pop
mov
fisubrl
insl
test
lret
in
imull
lds
cmp
jl
xchg
jns
dec
xchg
filds
xchg
repz
pop
aaa
add
jnp
push
push
out
xchg
sti
aad
xor
std
test
mov
push
xchg
insb
xchg
test
sub
fildll
xchg
push
stos
aad
scas
aad
fstl
jmp
push
mov
std
rorl
xlat
sub
xlat
mov
xchg
or
lods
xchg
aad
cmp
and
xchg
xchg
cmc
fisubrl
test
push
sub
sub
loopne
lods
cmp
xchg
or
xchg
das
cmpsb
pusha
and
mov
aaa
jnp
aad
mov
sub
push
cs
sbb
sti
xlat
mov
stos
sub
xchg
push
test
into
cwtl
cmp
push
adc
lretw
jmp
imul
and
cmp
mov
pop
xchg
mov
push
mov
cli
test
cmpsl
dec
lret
imul
sbbl
sbb
leave
movsb
push
and
test
insb
clc
sub
cmp
stos
sub
sub
mov
mov
push
dec
jecxz
inc
adc
in
pop
and
out
lods
cmp
stos
insb
and
mov
loopne
push
aad
leave
sub
sub
xchg
out
ds
jno
pushw
test
mov
push
mov
outsl
xlat
stos
mov
imul
lods
lret
dec
sub
inc
and
pop
stos
xor
and
xchg
mov
lods
mov
sub
ret
xchg
ljmp
lock
lods
xor
fildll
stos
jno
cmpsb
mov
aad
out
jmp
std
sub
xlat
fisubrl
stos
aad
daa
sub
mov
fs
pop
push
notl
adc
mov
xlat
stos
scas
lcall
lock
and
and
xor
rcrb
jne
add
and
jle
aad
outsb
stos
insl
pop
push
xor
pop
imul
inc
test
test
outsb
and
in
adc
push
and
ds
xchg
mov
imul
cmp
outsb
adc
xlat
push
mov
les
stos
push
js
in
cmpsb
ss
push
sub
ds
fmuls
or
push
mov
adc
cmp
mulb
jne
lods
imul
and
mov
clc
into
ret
pop
stc
adc
add
xchg
mov
cli
aad
add
and
xor
xchg
in
shll
or
mov
cmpl
jmp
mov
ljmp
stc
push
call
mov
mov
mov
stos
mov
and
shr
sub
dec
popf
inc
scas
push
imul
adc
popa
xchg
mov
mov
xchg
mov
cld
lea
stos
mov
push
xlat
sub
movsb
add
mov
icebp
dec
adc
xor
test
sub
pop
sahf
mov
push
mov
pop
into
add
xorl
add
pop
mov
sbb
std
ret
fxtract
lds
sub
push
ficomps
jb
xor
cmpsb
insl
fstps
sub
sub
cltd
stos
and
int
lods
lret
cmc
jmp
cmp
lods
cmp
mov
leave
sbb
test
push
stos
add
stos
outsb
test
aad
out
repnz
inc
xchg
rcr
arpl
popa
push
cmpsb
pop
and
and
mov
pop
movsb
lods
pop
pusha
aad
jne
mov
repnz
popf
das
xchg
sub
push
add
jno
mov
out
andb
mov
hlt
sub
repnz
add
push
jp
jno
lock
pop
or
cmp
movsb
xchg
push
sub
mov
lods
sub
hlt
pop
and
sub
je
sub
xor
mov
mov
movsb
outsb
mov
hlt
movsl
fnsave
sub
xchg
xor
movsl
and
xchg
insb
movsl
push
scas
fimuls
fcoms
pop
in
mov
jnp
test
add
mov
mov
pushf
adc
mov
call
sub
call
and
sbb
xor
xchg
adc
adc
into
mov
xor
sub
jno
fs
cmpsl
mov
or
xor
cmc
sub
cmp
icebp
jno
or
scas
fnstcw
filds
mov
adc
out
sub
test
test
pushl
xlat
outsb
lods
cltd
out
ds
mov
js
cmpsl
adc
fimull
add
xchg
imul
in
inc
mov
test
out
in
loop
ficoms
ret
lret
pop
add
outsl
push
push
lods
div
xor
sub
push
jbe
or
insl
repz
test
mov
shll
jne
rolb
mov
sub
adc
mov
lret
stos
or
push
fnstenv
push
pop
or
hlt
cli
push
and
mov
add
cmp
jnp
movsb
movsl
sbb
into
in
and
pop
mov
notb
mov
jns
mov
jmp
outsb
inc
pop
adc
lock
cwtl
call
aaa
in
repz
xlat
icebp
fwait
pop
xor
das
add
stos
enter
xor
scas
push
leave
lcall
dec
test
add
lcall
mov
jo
xor
xchg
shll
sub
cld
js
in
inc
pop
in
dec
scas
ds
push
test
adc
sbb
out
es
repz
mov
cmp
data16
jb
iret
stos
add
inc
inc
xchg
jnp,pn
mov
or
jg
into
jne
ret
mov
insb
lea
outsb
jp
stos
mov
ljmp
insl
lret
mov
xchg
lahf
stos
sahf
test
movsb
push
and
enter
pop
test
cmp
mov
fadds
jmp
shrb
aaa
xorl
pop
ret
cmpsl
inc
loope
sub
jo
add
or
movsb
mov
test
xchg
aad
or
movsl
mov
outsb
mov
jae
cmp
xor
test
and
inc
ret
ror
iret
loop
xchg
aad
and
ret
mov
sarl
sbb
loop
mov
fsubr
push
test
or
cmp
lock
pop
inc
sub
inc
inc
and
lea
inc
mov
xor
sbb
out
loope
je
mov
bound
mul
fcmovb
rclb
push
out
pop
int3
and
test
or
push
jmp
jbe
sub
in
jp
data16
push
fistpll
xor
xor
adc
mov
add
jl
add
loope
out
adc
stos
inc
lahf
lea
out
fiadds
test
aad
inc
sub
cmc
in
inc
dec
lods
scas
das
lea
rcr
imul
in
cwtl
jge
fs
cli
and
mov
cmp
jmp
mov
xchg
dec
mov
cmc
fdivrp
inc
movsl
rorl
imul
jg
cbtw
push
rclb
dec
mov
int3
sbb
in
out
jb
mov
sub
aaa
scas
or
cmp
dec
out
jmp
jmp
jnp
addb
lret
lea
scas
or
je
xor
std
dec
loope
and
cmp
or
fcmovu
aad
sub
mov
or
cmp
mov
jmp
sub
int
call
xchg
adc
sub
xlat
fisttpll
imul
dec
mov
sub
jns
pusha
mov
adc
xchg
mov
loope
xchg
adc
loopne
xor
push
repz
sub
push
add
stos
mov
xchg
mov
add
and
push
cmp
js
add
cmp
lods
outsb
push
movsb
movsl
xchg
loope
bound
and
cwtl
sub
loop
pop
fdivs
pushf
sbb
out
ret
mov
push
loop
shll
sub
xchg
push
imul
inc
or
mov
mov
and
xor
jbe
sub
add
sub
ficomps
std
mov
jae
lret
loope
mov
movsl
xchg
mov
sbbl
push
call
xlat
pushl
add
jb
movl
push
jno
add
fsubs
fdivp
sub
das
cmc
push
in
movsl
arpl
lods
push
dec
jo
out
inc
aad
mov
pop
call
mov
movsb
fisubrl
xchg
push
fisttps
mov
push
cmp
mov
popf
bound
sbb
fimull
test
shll
cmpsl
push
and
inc
mov
cmp
bound
cmpb
aad
push
mov
js
hlt
and
in
xchg
add
shl
push
push
and
lahf
out
es
scas
leave
sbb
push
stc
jecxz
cli
cmp
push
mov
or
mov
dec
sub
movsl
pop
mov
sbb
jge
sub
and
push
imull
cmp
into
mov
sub
fnstenv
notl
xchg
jno
nop
mov
mov
push
xor
fildll
aad
cmp
scas
gs
xchg
sub
sub
cmp
stos
xor
daa
enter
jp
mov
cmc
scas
mov
out
ret
cmpsl
mov
flds
mov
push
mov
pusha
nop
mov
daa
ficoml
sub
iret
xchg
and
sub
cltd
mov
fldl
and
popf
idivl
mov
dec
test
stos
movsb
inc
imul
into
xchg
imul
jbe
aam
jl
filds
test
sbb
mov
aad
add
scas
mov
jge
aam
add
push
cli
inc
inc
pop
or
lods
movsl
ds
jg
mov
popa
push
jbe
pminub
ss
sti
fwait
out
test
adc
arpl
frstor
mov
xor
nop
and
pop
les
test
shll
add
and
xor
ss
sub
inc
xlat
pop
dec
fucomip
dec
test
and
test
pusha
adc
fs
pop
mov
call
cld
lret
fimull
jle
dec
dec
mov
lds
push
jae
add
lcall
rcrb
and
jb
jns
jne
xor
push
mov
sub
ljmp
cs
xor
jno
cmpl
mov
mov
push
jg
fcomi
ja
lods
sub
mov
add
repnz
ret
and
jbe
xor
repz
push
mov
push
sbb
je
push
xor
push
mov
and
push
orl
test
adc
jne
mov
imul
jp
enter
popa
fwait
lea
fidivs
aad
lret
test
cltd
jae
pop
push
std
sub
loop
mov
pop
jecxz
sub
xchg
dec
imul
in
arpl
loopne
fidivl
and
xchg
sub
mov
arpl
aad
push
lahf
rcrb
and
in
and
sub
insl
jae,pn
mov
gs
push
adcb
das
imul
inc
aad
adc
xor
push
scas
les
mov
cmp
jbe
ja
and
inc
inc
push
inc
jmp
loopne
ljmp
push
or
sub
lods
dec
cmpsb
mov
push
movsb
cmp
mov
mov
xchg
std
shr
fstpl
popa
mov
add
cltd
in
hlt
ret
test
or
lret
mov
or
popf
xlat
xorb
int3
mov
fiadds
dec
andb
fwait
push
stos
cwtl
dec
fsubs
pop
bound
ljmp
xor
movsb
dec
ss
inc
test
jg
ret
sub
add
and
ret
in
ficoms
leave
sub
xchg
inc
sub
dec
lods
cmp
aaa
inc
sub
cmc
and
adc
lods
inc
pop
push
insl
xchg
cmp
std
adc
lds
std
mov
dec
cmp
ja
fdivl
loopne
leave
mov
mov
xlat
orb
das
jnp
push
xchg
rcrl
mov
dec
xor
cmp
cmpl
add
jne
adc
mov
sub
sbb
jg
test
dec
push
leave
pop
xchg
jge
xor
pusha
pop
mov
sub
fnsave
stos
ljmp
push
add
cmp
sub
stos
addb
sub
daa
popa
mov
cmpsl
in
mov
add
ret
rcl
lret
and
fnsave
push
mov
dec
cmp
addr16
leave
sub
movsb
xlat
cltd
push
sub
pop
shlb
call
jno
pop
add
ret
sti
add
mov
cmc
push
mov
aam
cmpsb
inc
nop
call
pop
adc
out
dec
push
mov
add
hlt
mov
xlat
dec
xchg
xchg
aaa
pusha
mov
xor
nop
push
fcomps
jp
sahf
and
jo
push
lds
and
popa
lea
rep
jmp
dec
jp
movsl
sub
add
xchg
sbb
or
mov
mov
mov
add
je
in
jb
dec
test
pop
lods
xchg
aad
data16
out
cmp
fwait
and
into
cmp
jne
ss
sub
test
sub
mov
mov
jno,pt
faddl
dec
stc
xor
fistl
xor
mov
scas
jl
xor
and
mov
mov
daa
mov
int
mov
lret
sahf
and
outsl
aad
inc
icebp
nop
xor
xchg
ret
sub
mov
xor
rep
aas
outsb
mov
lret
xlat
lret
push
xchg
loope
div
ror
jne
mov
mov
ds
mov
sar
fnstsw
push
scas
jne
or
mov
mov
dec
out
inc
imul
test
lds
movsl
notb
cmpb
ja
ret
mov
sub
xor
sub
addr16
xor
andb
call
add
mov
sub
xchg
and
cmpsl
and
sub
push
mov
jle
test
ja
pop
fisubrl
push
push
rorl
jge
sub
cli
jae
jne
add
xchg
subb
and
mull
inc
mov
jle
and
aas
iret
adc
jo
pop
pusha
cmp
push
and
push
sub
dec
icebp
or
sub
mov
mov
and
mov
pop
adc
pusha
add
addr16
pop
xchg
xchg
mov
push
mov
push
or
and
in
test
push
pop
enter
push
jnp
in
sub
mov
xchg
xlat
repnz
das
and
inc
ljmp
pop
test
movsl
xchg
lods
push
aad
or
mov
movsl
mov
subl
loope
out
sub
stos
adc
pop
or
xchg
cwtl
pop
sub
pop
aad
mov
fcmovnbe
xchg
pop
pop
test
cmc
stc
fisubl
shlb
in
ljmp
or
jmp
aaa
lretw
enter
adc
loop,pt
adc
push
aad
mov
sub
shr
mov
pop
aad
push
xchg
jno,pt
mov
xor
mov
ja
jns
shl
addr16
cld
mov
ss
imul
movsl
fidivrs
mov
adcl
sbb
mov
aad
mov
inc
rorb
jge
cmpsb
mov
inc
sub
shrl
mov
aam
pop
into
data16
and
fs
data16
sub
inc
pop
popf
mov
xchg
push
pusha
jg
inc
add
outsb
enter
dec
mov
stos
jno
mov
cmp
movsl
std
insl
add
popf
cli
and
inc
mov
mov
push
mov
addl
jle
mov
mov
mov
lods
dec
mov
in
mov
aas
stc
rol
or
add
sbb
andb
sbb
and
jae
xlat
popa
mov
sub
sbb
sub
imul
loope
mov
cmp
loope
inc
cli
cmp
push
push
xchg
mov
mov
mov
decb
sbb
gs
adc
push
jnp
ror
dec
in
loop
adc
test
push
ret
ss
pop
xchg
mov
data16
je
lret
stc
pop
fistps
loope
xor
push
outsl
stos
and
sub
stos
in
addr16
push
jmp
fcomps
lock
mov
lret
cmp
and
aaa
xorl
sbbl
sub
out
ds
call
cmp
aad
das
int3
mov
sub
xchg
stos
push
mov
pop
std
push
push
push
int
dec
incb
jne
sub
stc
fdivrl
daa
cmpsb
bound
insb
clc
cld
ja
dec
sub
jl
mov
aad
ss
loope
mov
mov
mov
shll
iret
les
push
addr16
push
mov
adcb
xor
mov
cwtl
lea
rorb
jno
mov
dec
lods
scas
dec
adc
in
jge
dec
aaa
jl
pop
xchg
loope
lock
sahf
push
pop
mov
add
mov
imul
mov
push
out
jle
adc
sub
xor
dec
daa
push
pop
push
in
mov
dec
inc
pop
mov
or
ljmp
or
mov
dec
orl
test
jg
mov
push
aam
aad
ret
pop
outsl
cmp
jp
sub
xor
sub
push
dec
insb
ja
xchg
mov
mov
andl
xlat
sbb
gs
mov
mov
movsl
lea
cld
sub
mov
pop
inc
dec
sbb
dec
popf
mov
enter
jge
sub
xor
test
test
dec
int3
insl
mov
inc
mulb
pop
outsl
jge
in
int
or
mulb
jle
push
or
cmp
jmp
lret
sbb
rol
and
aad
cmp
in
adc
inc
mov
stos
stos
lds
outsb
and
insl
inc
mov
in
mov
mov
shll
pop
jb
jmp
inc
mov
or
jge
outsl
int
int3
iret
cmpsb
sub
or
push
mov
xchg
mov
daa
fsts
cmp
mov
xor
xlat
push
insb
lods
sbb
or
inc
lods
xorb
inc
xor
sbb
and
test
mov
cmc
add
cmp
js
ss
ret
xor
sub
mov
aaa
jle
lcall
pop
aad
pushf
mov
sub
stc
push
mov
mov
add
mov
popf
daa
push
pop
addl
dec
mov
mov
hlt
xlat
ret
mov
test
add
lret
shl
mov
jp
dec
addr16
push
lods
add
aad
xor
out
sub
out
xor
gs
stos
jnp
test
loope
movsb
mov
dec
sbb
outsb
out
xorl
cmp
aam
dec
dec
sub
pusha
repz
cmp
roll
or
sub
xchg
or
mov
cmpsb
sub
xchg
add
mov
rcrb
test
stos
cli
mov
out
stos
and
mov
add
stc
xor
adc
std
cmpl
mov
push
scas
scas
mov
fnsave
mov
out
or
mov
scas
xchg
jns
push
loopne
push
test
movsl
arpl
inc
mov
jo
xchg
cltd
or
movsl
subl
sub
mov
dec
and
sub
loop
test
mov
and
mov
xorl
sub
rcrb
mov
loopne
pop
imul
mov
cltd
inc
mov
cmp
pop
pusha
inc
pop
cmp
daa
bound
fscale
es
adc
sarl
push
mov
out
push
sahf
pavgb
push
sub
mov
scas
stos
jbe
push
jge
popf
leave
shlb
xchg
push
sub
jns
adc
outsl
and
daa
pop
movsb
mov
add
adc
push
rolb
push
mov
in
cmp
mov
test
pop
sub
or
xchg
add
mov
and
add
pop
lcall
dec
jg
ficompl
push
ss
je
xor
adc
test
int3
xor
dec
mov
jp
sub
mov
jno
test
xchg
fwait
cli
push
xchg
jnp
push
add
or
test
sub
hlt
mov
jmp
je
pop
jge
pop
adc
jae
movsl
das
ljmp
and
repz
cmpsl
les
stc
jns
ret
xor
jae
cmp
sahf
mov
mov
in
cmp
and
or
jecxz
pop
pop
imul
mov
mov
xchg
call
pop
or
or
stos
inc
js
loop
in
adc
je
jae
addr16
mov
jbe
test
aas
mov
test
into
aad
jecxz
jae
mov
sbb
ret
cmp
push
sbb
mov
movsl
sub
mov
mov
add
test
imul
dec
aad
and
jmp
fdivl
mov
lret
mov
mov
lea
jno
push
push
pop
push
inc
mov
aam
push
or
stos
push
lods
push
imul
leave
jl
mov
in
jno
testb
mov
aad
cld
xchg
ret
mov
jb
test
out
dec
lcall
in
and
std
push
xchg
and
add
les
lcall
pop
and
mov
popf
fs
rcrb
pop
sub
mov
stos
jae
ret
sub
inc
out
shll
pop
sbb
mov
test
mov
mov
mov
push
andb
mov
add
fisubrl
jns
push
add
popa
mov
mov
aad
cli
mov
jge
cmp
add
test
dec
pushf
lret
loop
jmp
movsb
subb
nop
mov
sbb
in
mov
mov
inc
mov
inc
in
mov
pop
lods
and
xchg
or
addr16
lcall
lea
pop
cmpsl
je
test
jbe
mov
sub
sbb
inc
scas
add
rorl
sbb
xor
mov
sub
mov
into
mov
mov
push
mov
into
les
xchg
fs
aad
inc
sub
sbb
cmp
movl
lret
jne
xchg
xchg
xchg
mov
sub
pop
mov
mov
imul
pop
ficoml
push
repz
pop
adc
in
push
lcall
popa
stc
dec
push
xchg
out
dec
lret
pusha
pop
aad
pop
cmp
push
sub
mov
stos
sbb
aaa
lret
lods
jmp
stos
xor
cmpsl
push
and
or
dec
dec
imul
xlat
and
ljmp
mov
lds
dec
or
aas
jge
inc
in
pusha
sub
dec
dec
inc
outsb
inc
lret
sti
mov
xor
mov
dec
sub
addl
and
cmp
lods
pop
adc
xchg
lahf
adc
mov
and
test
sub
mov
mov
mov
pop
xchg
mov
out
xchg
dec
scas
and
mov
mov
inc
add
add
jecxz
push
rcrb
cmp
sub
sub
fs
jno
in
arpl
arpl
add
dec
sub
mov
ljmp
loopne
xorb
xchg
lock
les
imull
or
or
mov
test
mov
sbb
cmp
add
and
pusha
pop
xchg
ret
test
push
xor
aam
sub
call
dec
adcb
xor
xor
arpl
lret
xchg
and
and
cmp
jmp
sub
ja
and
cmp
add
sub
mov
aad
in
test
mov
in
gs
test
bound
pop
lret
jmp
sub
mov
add
dec
test
dec
push
push
out
adc
sahf
mov
dec
add
lcall
or
inc
punpckhdq
dec
inc
outsb
pop
test
sub
call
lret
pop
lock
xor
rolb
add
xor
out
sub
outsb
mov
mov
jecxz
das
mov
movsb
mov
xchg
lret
lds
xor
out
dec
cmp
imul
pop
fsubrl
iret
sbb
adc
scas
push
cmc
or
mov
or
aas
ds
and
sub
jg
imul
sub
ds
sbb
sub
push
leave
lret
mov
sbb
mov
clc
sbb
cwtl
test
ds
dec
cmp
fdivs
or
dec
mov
and
arpl
cmc
lea
lcall
jle
ljmp
repz
sahf
dec
aad
mov
arpl
or
lods
daa
rcr
mov
test
repz
cmp
test
pop
add
fisubrl
movsl
sub
ljmp
andb
pop
pop
jmp
cmp
and
jecxz
sbb
cmp
push
roll
xchg
jp
in
insl
xor
mov
or
xor
ret
insb
dec
add
cmpsl
add
mov
fidivs
addr16
inc
aaa
fdivs
xchg
mov
icebp
out
jecxz
outsl
add
and
xlat
shr
test
mov
sub
push
xlat
iret
or
test
sbb
push
lcall
hlt
push
pop
bound
ror
test
hlt
inc
enter
mov
push
jle
andl
movsb
fsubrs
stos
int3
push
xchg
or
sbb
les
adc
cmp
pop
mov
insb
nop
mov
xor
lock
fsubs
push
jne
jmp
mov
push
into
mov
ljmp
rorl
cmp
cltd
xchg
mov
scas
dec
cmp
ficoms
js
addr16
sub
test
cld
mov
add
xor
add
ret
bt
mov
xchg
xor
out
add
jno
jg
cwtl
outsl
sti
sbb
inc
rcrb
sbb
stos
pop
dec
mov
pop
mov
xor
cmpsl
or
mov
scas
imul
mov
or
mov
mov
insb
mov
int3
jle
insb
sbb
addr16
cs
dec
adc
cmp
daa
or
cmp
xchg
test
mov
sub
pop
daa
fildll
jno
mov
mov
lahf
push
mov
sub
stos
call
lds
push
aas
test
in
scas
movsb
das
int3
cli
adc
xchg
inc
insb
clc
test
fisttps
aam
or
or
aaa
pop
lods
add
adc
cld
pop
out
dec
push
xor
ja
pop
subl
or
ja
xor
push
int3
inc
movsl
push
rcll
roll
ret
movsb
add
out
cwtl
out
sbb
test
xchg
bound
dec
xchg
jecxz
mov
push
xchg
xchg
sub
push
repz
push
mov
addr16
mov
xor
inc
cmp
sarl
mov
sbb
lahf
pop
adc
cmpsl
iret
mov
lahf
jb
mov
pop
xchg
mov
lret
xchg
aad
aas
mov
fwait
lods
mov
fists
mov
fs
aad
cltd
pop
inc
iret
popa
or
clc
mov
cmp
inc
dec
mov
lret
push
out
dec
xor
test
ljmp
mov
sbb
push
mov
outsb
insl
mov
outsb
cwtl
mov
xchg
aam
pushf
scas
test
mov
cmp
xlat
mov
sub
stos
movsl
sbb
jns
mov
mov
movsl
mov
or
mov
fnstsw
enter
mov
test
sbb
stos
test
sti
jne
xchg
or
mov
push
jae
xchg
inc
lods
sub
and
push
sbb
dec
filds
xor
dec
pop
xor
jmp
insb
push
aaa
fldenv
jle
xchg
leave
push
jmp
stos
cmp
xchg
data16
std
stc
aas
in
ret
and
mov
mov
and
push
jle
adc
das
jl
pop
xchg
outsb
pushf
leave
xchg
dec
cmpsl
inc
aaa
stos
shll
das
jge
xor
inc
pop
dec
sbb
std
aad
mov
sbb
sub
lahf
std
and
out
ret
cmpsb
xchg
dec
lods
jge
cmp
jge
push
dec
imul
dec
idivl
mov
lds
testb
aad
and
push
rol
push
jne
cwtl
cmpsl
xor
outsl
or
cmpsb
loopne
push
shll
and
mov
xor
xor
jp
shll
mov
add
adc
inc
mov
loop
rcll
loope
in
iret
sahf
add
pop
and
fs
or
sub
dec
mov
mov
dec
hlt
es
sub
ret
mov
push
pop
leave
lea
mov
std
movsl
and
jmp
stos
sub
xchg
push
xor
pop
cltd
imul
mov
shll
sub
stos
daa
or
js
inc
xor
xchg
hlt
inc
inc
jecxz
decl
cmp
add
notb
mov
add
inc
pop
cli
ret
push
add
aad
pop
xorb
mov
jle
mov
inc
push
xchg
push
jns
xor
cmp
mov
or
sub
sub
xchg
xchg
cmpsl
mov
loope
mov
and
jns
enter
jmp
mov
inc
push
sub
inc
inc
sub
les
add
inc
idiv
or
xorb
lret
sahf
add
xor
cmp
dec
gs
lods
or
adc
iret
or
shrl
popa
sub
sahf
inc
scas
loop
jnp
aad
scas
or
imul
and
ret
outsb
mov
lret
ss
daa
in
ror
je
std
repz
in
sbb
iret
or
and
and
xchg
mov
insb
outsb
or
test
xchg
xchg
xor
fsubrl
cmp
add
das
cmp
arpl
mov
xchg
lock
jmp
loop
mov
pop
sub
nop
test
cmpsl
mov
jne
pop
mov
sub
shll
outsl
loope
dec
jb
rcll
mov
test
sub
push
ja
hlt
cld
xor
xor
xchg
repz
mov
aad
xor
jno
lods
addl
aam
cltd
cld
aad
mov
inc
lcall
add
sti
lods
add
adc
loopne
cmp
aam
test
dec
xchg
or
inc
imul
in
neg
insb
cmp
cwtl
pop
push
hlt
addr16
jp
repnz
cmp
inc
std
dec
ss
mov
and
cmp
sbb
inc
rcll
dec
loope
test
les
fs
cltd
les
cmp
mov
movsl
pop
movsl
push
jecxz
ror
lods
push
shl
iret
pop
sub
xchg
cmp
mov
mov
stos
inc
es
add
sbb
xlat
stos
xlat
push
jmp
stos
inc
sahf
cvtdq2ps
xchg
cmc
sbb
stos
cli
ljmp
add
test
push
ret
punpckhbw
outsl
dec
fistl
pshufw
sub
frstor
aaa
sbb
or
lahf
mov
mov
divb
aam
jns
mov
dec
stc
popf
imul
cmp
mov
mov
nop
jns
aad
mov
xor
mov
jge
lods
or
test
inc
push
dec
pop
jbe
mov
call
adc
mov
jecxz
lea
jne
or
shr
sbb
pop
scas
inc
pop
jne
js
int
and
pushf
mov
cs
add
xor
mov
pop
sub
daa
xchg
dec
jno
pop
jno
aaa
mov
scas
dec
insl
clc
addb
xor
push
cmp
mov
repnz
lds
hlt
xor
sbb
xchg
imul
repz
cmp
pushf
aam
mov
loopne
lods
cmp
sbb
in
pushf
rep
inc
jmp
mov
sub
leave
or
and
scas
mov
xchg
pop
ret
jge
cmp
xchg
jmp
mov
mov
add
mov
jp
repnz
add
sub
cmp
addl
aaa
in
jo
add
into
jbe
subb
pop
dec
or
mov
lods
xchg
xlat
int
dec
sub
pop
pop
mov
cmp
movsl
add
pushl
stos
push
mov
inc
or
lods
rorl
adc
dec
into
mov
pop
jns
jns
or
mov
int
popf
ss
pop
lods
test
mov
and
jo,pn
pop
adc
xorb
dec
mov
sub
xlat
cmp
cmpsl
mov
aaa
cmpb
cmpsb
xchg
xorb
aad
xor
jle
test
lds
rcrl
and
dec
ss
mov
loope
fstl
andb
pop
outsb
in
xor
rolb
push
leave
insl
mov
sbb
lret
sub
fimuls
dec
add
lcall
jbe
mov
movsb
mov
mov
inc
test
in
fxch
cmp
mov
jp
out
mov
fnstsw
es
mov
in
cmp
mov
mov
jge
loope
sub
lret
cli
cltd
int3
pop
pop
adc
sub
push
add
jne
ljmp
cmp
mov
addr16
cmp
sub
mov
fwait
xchg
sbb
test
lret
dec
test
mov
mov
fidivs
and
dec
sbb
rcrl
out
sbbb
or
mov
or
popf
pop
ret
andl
inc
inc
inc
dec
lods
fldt
push
or
filds
test
push
cmp
mov
daa
notl
jg
mov
cmp
jmp
rcll
aad
mov
insb
lcall
aaa
insb
pop
ret
mov
cmp
mov
dec
pop
je
addr16
mov
test
mov
cmp
clc
xor
iret
cld
or
cmc
sub
mov
gs
lods
fs
div
sarb
mov
or
sbb
mov
jb
jge
int
xchg
test
lcall
mov
or
lock
sbb
push
xor
orb
movsb
add
jbe
mov
sbb
xor
mov
cwtl
xchg
xchg
mov
and
push
cmp
jg
sarl
add
stos
ffree
pop
xor
cli
pop
fidivl
aam
xchg
popa
xor
xor
sahf
imul
notl
in
xor
leave
jo
outsb
ss
test
leave
in
xor
mov
or
cmpsl
sub
xchg
shlb
and
sub
push
cmp
jecxz
lds
shlb
loop
pop
jo
stc
pop
and
in
mov
mov
pop
sub
dec
mov
daa
sahf
imul
sub
scas
dec
dec
out
stc
test
mov
divb
movsl
jns
out
inc
inc
outsb
adc
repnz
test
mov
test
add
outsb
or
rcrb
xchg
movsl
push
mov
out
cli
das
cwtl
add
jno
cmp
sub
fcomi
out
fimull
xor
and
imul
aad
addr16
or
call
sahf
cmp
insl
popa
adc
fsubrs
mov
or
dec
int3
aad
jne
imul
fistl
mov
sahf
pop
lods
xorl
inc
bound
into
cmp
scas
call
xchg
in
mulb
lcall
sub
mov
adc
mov
in
cld
push
cmp
mov
in
or
push
shlb
js
fldl
inc
pop
or
movsl
imul
xlat
jecxz
sti
mov
and
xchg
insl
sub
pop
and
jo
xor
xchg
xor
fsubr
stos
mov
inc
shr
sti
divb
cmp
dec
sbb
or
int
out
jno
scas
jns
xchg
mov
add
lock
inc
outsb
hlt
adc
mov
mov
inc
mulb
cmp
jle
repz
or
and
stc
dec
xchg
fstpl
popa
jo
addr16
dec
mov
pop
insb
push
insl
roll
aad
hlt
repz
push
shrl
in
xchg
sub
sahf
mov
mov
xor
push
test
icebp
add
cmpsl
pop
cld
push
stos
pop
dec
ja
inc
and
icebp
test
push
sbb
neg
sti
jo
jne
jns
mov
andl
xchg
loopne
call
ljmp
fisubrl
mov
mulb
js
rep
cmpsl
out
shl
add
jmp
xchg
sbb
pop
mov
cs
mov
pop
dec
js
lcall
sub
inc
cmpsl
rolb
movsb
mov
pop
mov
xlat
fildl
mov
bound
or
icebp
mov
xchg
xchg
xchg
jne
outsb
inc
and
mov
xor
mov
in
movsb
in
add
sbb
dec
jno
jmp
push
xor
mov
hlt
addr16
sbb
imul
test
pop
hlt
test
and
jl
cmpsb
and
sub
fiadds
mov
adc
sti
push
out
jno
loope
mov
mov
pop
pusha
addr16
movsl
ljmp
xor
mov
jae
push
out
negb
adcb
add
rorb
je
cmpsl
rcrl
xchg
lcall
rol
lea
dec
cmc
dec
cmp
xor
mov
inc
xlat
dec
push
sbb
jp
mull
jbe
push
bound
pop
sub
pop
dec
test
inc
sbb
and
mov
test
stc
pop
inc
lods
jb
push
je
fs
mov
sub
in
dec
jmp
xor
or
fdivr
movb
fimull
jecxz
mov
cs
dec
sahf
orl
mov
or
sub
mov
mov
add
push
mov
mov
mov
ret
and
filds
leave
popa
inc
mov
into
mov
push
pop
fnstenv
mov
icebp
fistps
sbb
shll
xorl
scas
ljmp
sub
cmp
and
shll
xchg
in
mov
xor
mov
fnsave
push
pop
cmp
in
and
rolb
cmc
push
jmp
mov
xchg
repnz
mov
mov
imul
stos
imul
pop
ss
jo
cmp
adc
scas
push
push
test
or
negb
daa
das
stos
add
adc
or
mov
ret
mov
loop
test
movsl
insl
ljmp
adc
pusha
mov
stos
test
lahf
sbb
cltd
out
and
aas
push
in
loopne
fldcw
out
insl
xor
sbb
cld
test
xor
push
hlt
push
movb
clc
jge
fadds
pop
add
or
cmpb
mov
mov
dec
adc
hlt
dec
sub
ja
int3
sub
test
cmpb
imul
xlat
iret
shll
jno
jmp
add
ret
mov
loop
gs
movsb
adc
test
aaa
pop
in
pop
jbe
pop
mov
mov
icebp
hlt
xchg
add
test
fdivrl
add
aam
sub
jg
cmp
mov
ficoms
in
mov
aam
lret
mov
movsb
cmc
lret
inc
cmpsb
in
rcrb
sub
push
xor
dec
mov
cld
sahf
icebp
pusha
push
aad
and
shlb
pop
cmp
lret
add
inc
aad
in
aad
sarb
cs
mov
jb
std
cs
popa
ficoml
shl
cli
lret
frstor
push
dec
sub
lret
sub
mov
cmp
jne
test
out
scas
fcomps
loop
mov
sbb
jg
push
cmpsb
hlt
fisubrl
shlb
dec
shrb
roll
ds
negl
lea
push
mov
in
mov
jae
dec
aad
mov
pop
mov
xor
pop
add
mov
fistpl
dec
loop
add
inc
cmp
mov
and
sbb
sub
xchg
add
lods
sub
add
mov
leave
cmpl
and
mov
sbb
mov
sub
subl
mov
jp
mov
mov
shll
inc
aad
sub
jo
jp
fnsave
push
dec
aam
or
fwait
imul
mov
jno
add
xchg
sub
sbbb
lcall
enter
rcrl
lret
iret
out
enter
test
inc
es
insb
inc
iret
lods
movsb
mov
inc
idivb
and
mov
pop
fidivrl
cmc
jns
or
push
mov
jl
test
xor
insb
test
sub
xor
dec
push
icebp
fsubs
inc
mov
xchg
ja
adc
in
inc
inc
fs
pop
stos
or
xchg
leave
xchg
ror
aas
pushf
dec
sub
lock
xchg
popa
inc
cmp
add
ret
mov
imul
jp
shrb
out
mov
push
jge
movsb
cmc
fs
test
int3
stc
lea
add
xchg
push
and
lcall
dec
cmp
push
out
aam
aad
es
dec
clc
add
sub
xor
cld
mov
leave
jb
insb
imul
cmp
sbb
pop
jg
adc
orl
pop
or
pop
movsb
mov
outsb
ja
pop
sub
pop
xor
stos
sbb
xor
xlat
cmp
jl
xchg
je
sub
ljmp
in
cmp
enter
mov
pop
fidivs
xlat
sub
sbb
adc
std
sub
xor
mov
xchg
arpl
insb
mov
fstl
ss
xor
xchg
xlat
in
inc
mov
inc
push
mov
pop
cmp
insb
addr16
gs
mov
test
pop
leave
mov
cmp
shrl
lock
sub
dec
imul
jno
fimull
aaa
mov
cmp
stos
push
lds
dec
xor
in
or
into
notl
int
movb
clc
mov
insl
jbe
pop
in
enter
data16
inc
aaa
in
sub
mov
pop
or
hlt
inc
push
shr
mov
mov
mull
int
movsl
inc
push
adc
aam
cmpsb
fiadds
and
mov
fninit
pop
adc
jnp
out
stc
leave
ret
xchg
mov
in
mov
test
rcll
scas
repnz
cmp
add
hlt
cld
push
movsb
sbb
xor
movsl
xchg
mov
xchg
or
call
cwtl
and
dec
and
mov
dec
call
push
push
daa
addr16
sub
push
mov
jo
data16
fwait
jmp
int
lret
cwtl
les
and
cmp
cmp
sub
lahf
jne
and
push
mov
call
mov
sub
cmp
bound
mov
scas
inc
movsb
lret
outsb
ss
or
repnz
shll
push
incl
mov
ds
lret
addb
popa
add
insl
stos
jmp
dec
jg
ret
loope
jae
dec
dec
test
rorb
adc
je
in
lahf
hlt
stc
push
mov
push
sub
jl
mov
in
stos
adc
inc
dec
stos
mov
scas
sub
dec
rolb
movsb
not
movsb
mov
adc
cmp
lods
js
pop
xor
push
xchg
mov
xchg
inc
test
push
inc
cmp
dec
mov
imul
and
jno
sti
int
scas
movsb
jp
push
add
cmp
in
mov
adc
mov
sub
xchg
fidivs
arpl
inc
hlt
std
shrl
jae
mov
cmp
xor
shll
leave
std
push
leave
std
jp
pop
xchg
xchg
jecxz
sbb
rcll
pop
ret
mov
ficoml
xchg
sub
sub
movsl
or
and
xor
mov
aas
negl
sahf
push
int
xor
adc
js
test
pop
icebp
in
dec
out
mov
sub
add
inc
push
popf
and
push
push
addr16
ret
sub
pop
sub
add
mov
sub
sbb
mov
sub
arpl
cmpl
cmp
sub
int
add
pop
pop
inc
ljmp
mov
lea
aas
mov
outsb
xor
notl
mov
inc
test
fst
mov
std
mov
daa
mov
cmpsl
test
push
and
add
stos
mov
lcall
clc
and
or
ds
mov
fisubrl
icebp
cmp
xchg
mov
imul
push
jmp
icebp
jg
sub
or
mov
xchg
sub
cmp
sub
cld
inc
fwait
xchg
int3
aas
fldenv
push
sbb
arpl
xchg
xchg
mov
add
cltd
sbb
lcall
cs
adc
lahf
mov
or
loopne
lret
mov
dec
mov
jle
cmp
shl
mov
cld
enter
test
xchg
scas
fs
adc
jnp
jmp
mov
stc
xor
mov
jbe
sbb
jmp
mov
and
mov
add
test
mov
xchg
sub
jmp
ret
shll
add
sbb
loop
mov
pop
mov
or
sub
ret
mov
cmp
in
mov
out
lahf
in
in
inc
ljmp
fnstcw
je
ds
inc
jmp
test
add
pop
in
jle
ret
sub
stos
dec
mov
in
pop
mov
adc
sahf
addr16
xchg
or
fisubrs
sbb
aaa
pusha
mov
and
sub
aas
pop
push
ret
dec
movsl
xchg
cs
ja
jbe
lret
sbb
jle
loopne
lret
in
lret
ret
pcmpeqd
or
das
aaa
ficompl
test
add
insl
stos
and
cmp
or
dec
sti
ds
mov
ljmp
movsl
pop
jo
out
repnz
add
sbb
pop
xchg
sar
jg
push
lret
jbe
clc
outsb
out
test
jmp
cmpl
ret
les
popa
fnsetpm(287
jp
jnp
lret
dec
popl
repz
xor
mov
and
cmp
cmp
cld
jae
jl
leave
pushf
fists
lret
jge
jo
and
mov
mov
andb
leave
lret
xor
out
lcall
lahf
pop
xchg
sbb
pop
lds
mov
xchg
mov
xor
push
hlt
xor
addr16
pop
out
ret
rorb
orb
fnsave
loope
add
or
add
inc
fs
add
data16
xchg
ret
insl
pushf
stos
aam
outsl
sub
out
mov
dec
sub
loopne
sub
mov
mov
into
outsb
sbb
sub
pop
dec
inc
test
adc
imul
aad
mov
out
cmp
imul
movsb
std
mov
mov
mov
jno
or
lcall
ret
cmp
mov
ljmp
inc
insb
aaa
add
sti
pop
repnz
je
or
iret
sub
es
int
cmpb
inc
add
pop
and
cmpsb
cmpb
and
mov
leave
jbe
adc
mov
ret
mov
mov
or
mov
in
or
mov
push
inc
or
into
pop
lcall
mull
and
nop
aad
mov
fcomp
fcom
push
movsl
in
je
mov
xchg
adc
inc
sub
in
jg
xchg
mov
and
push
imul
mov
fsub
ret
inc
push
int
push
xchg
and
daa
inc
aas
push
cmc
daa
loopne
dec
rcrb
mov
shrb
pop
fildll
lret
mov
mov
loope
test
mov
aam
sbb
loopne
fimuls
out
in
xor
or
js
or
push
push
dec
adc
shll
xchg
mov
jmp
stc
xor
sub
or
test
rclb
mov
mov
pop
cmp
dec
jecxz
mov
add
loopne
push
pop
ljmp
test
mov
mov
sbb
inc
mov
into
in
insb
lret
into
adc
sbb
inc
sbb
mov
subb
adc
ret
mov
adc
jae
or
xlat
pop
ret
sbb
mov
mov
call
push
pop
cli
mov
mov
cmpsl
sbb
mov
outsb
mov
test
std
call
mov
aad
lcall
mov
ret
inc
cwtl
shlb
enter
lret
mulb
int
jno
sub
std
popa
fisubl
jbe
pop
push
dec
into
mov
into
adcl
push
mov
push
pop
aaa
lret
or
mov
jmp
push
adc
mov
push
or
jecxz
mov
sub
aad
outsl
mov
ret
scas
pop
sti
inc
pusha
mov
add
imul
add
sahf
sub
sbb
jle
test
mov
mov
pop
hlt
aaa
cmp
xlat
out
loop
loope
xchg
dec
mov
adc
jmp
mov
outsb
sub
movb
enter
mov
cmp
mov
lret
call
add
aaa
test
adc
mov
pop
sbb
mov
or
mov
stos
jl
notb
jle
addr16
xchg
ss
inc
sbb
cmp
and
loop
jp
jns
not
add
and
lds
cmp
clc
xor
adc
stc
jp
and
stos
add
rcr
add
lret
xchg
adc
sub
jg
fldl
iret
insl
jmp
pop
push
sub
inc
xor
mov
stos
jecxz
and
mov
stos
mov
enter
subb
xchg
mov
xchg
outsl
push
test
cld
pop
call
test
sub
xchg
loope
addr16
inc
orl
mov
sub
int
mov
xchg
cmp
icebp
ljmp
movsl
fsub
mov
cld
and
xor
cmpsb
iret
sub
lcall
pop
shr
sahf
leave
aam
lret
lock
adc
adc
dec
mov
lea
or
jle
cmp
ja
shr
mov
into
inc
push
int3
adc
ds
imul
scas
push
mov
jmp
movsb
mov
xchg
xor
add
dec
pop
sub
stos
and
mov
adc
roll
jmp
stos
je
mov
cmpsl
jp
lahf
dec
mov
xor
xor
mov
sub
loopne
outsl
push
std
xchg
mov
je
push
fdiv
mull
fmuls
jp
push
and
ja
xlat
mov
js
mov
mov
dec
sbb
in
inc
push
dec
mov
fcoms
xchg
loope
ss
in
mov
scas
push
push
into
cmc
jae
add
mov
orl
movsl
cmp
sub
out
pop
push
cmc
xchg
mov
sub
mov
test
push
inc
adc
int
mov
lock
jle
inc
je
jne
loope
jge
mov
movl
mov
push
arpl
mov
test
xor
popf
mov
xchg
inc
mov
pop
xchg
xor
cmc
mov
daa
stos
mov
mov
shll
or
test
loopne
mov
and
cwtl
and
inc
adc
cld
gs
cmpsl
mov
dec
inc
shl
jo
sbb
pop
inc
xchg
dec
scas
push
push
add
or
push
cmc
sub
inc
out
loop
jnp
int
repnz
adc
lods
aad
mov
push
jb
pusha
arpl
mov
mov
add
call
lds
xor
loope
loopne
sub
xor
mov
cmp
in
arpl
lock
adc
mov
loopne
push
sub
mov
pop
data16
mov
cmpsb
adc
mov
test
adc
stos
out
mov
mov
mov
adc
sarl
and
aas
jecxz
ret
mov
jmp
std
sbb
outsb
inc
into
push
lahf
rcll
xor
cmp
cmpsl
incb
mov
out
add
cmp
jae
push
outsl
jb
and
xchg
xchg
ret
cmp
adc
push
shlb
push
mov
aad
adc
xor
rcrl
insb
mov
ret
stc
loop
add
les
pop
aaa
adc
add
pop
add
inc
popa
jns
sub
stos
in
push
cmc
and
push
loop
push
ss
adc
mov
insl
mov
pop
inc
outsl
cmpsl
jb
jne
imul
xlat
rorl
mov
sub
sahf
push
shrb
xor
shrl
cmp
xlat
std
mov
mov
xor
bound
in
out
inc
sub
rol
cli
push
cmp
outsb
push
jg
xor
in
ret
mov
xor
arpl
sbb
lret
cmp
cli
xchg
xor
pop
mov
pop
sub
mov
and
or
sub
testb
and
cmp
sub
xchg
movsl
and
iret
pop
mov
jno
pop
xorb
outsb
outsl
jecxz
sbb
iretw
push
sahf
and
test
mov
add
lods
lahf
jle
andb
jne
jo
jne
mov
in
xchg
cmc
lahf
adcl
into
mov
pop
leave
dec
lret
or
lret
cmp
rcl
jge
or
push
jo
jae
movsl
jl
lahf
push
mov
or
call
call
jl
inc
jg
es
lds
or
sbb
mov
scas
sub
inc
dec
test
add
or
mov
fs
mov
dec
pop
xchg
mov
fisttpll
shrl
insl
test
sbbl
rcrl
das
and
ret
movsl
xchg
rorl
sahf
sub
test
dec
andb
mov
push
fwait
lods
jp
mov
ss
je
cmpxchg
cmp
or
sahf
pop
leave
pop
push
lcall
test
push
mov
stc
inc
jmp
shl
fxch
sbb
pop
outsb
mov
stos
les
adc
lods
lret
xchg
sbb
inc
test
mov
repnz
and
test
mov
push
adcl
mov
mov
insl
xlat
loop
scas
cmpsb
add
and
add
movsb
mov
mov
mov
mov
and
cwtl
in
cmc
mov
lods
outsl
adcb
push
jne
cmp
fldt
daa
jb
popa
mov
cmp
je
xor
xor
ss
aam
out
fstpl
xlat
mov
in
sbb
clc
xor
dec
ret
mov
adc
mov
pop
push
stos
lock
cmp
pop
stc
lret
cmpsb
fmuls
jge
sub
idivb
mov
jns
cmp
push
arpl
movsb
cmpsl
and
push
mov
and
sti
int3
roll
push
icebp
mov
out
js
jge
jg
push
sub
aaa
or
cli
jmp
jp
lea
cmpsl
cmc
test
into
sub
mov
ss
jmp
cwtl
js
fiadds
movsl
ret
imul
or
or
sub
loop
call
and
in
adc
in
pop
popa
mov
arpl
mov
dec
mov
in
iret
cmpsb
xchg
xor
adc
sub
cs
add
cmp
dec
adc
movsb
shlb
or
lea
push
jmp
test
mov
test
xchg
and
out
repz
dec
push
pop
addr16
inc
jnp
mov
hlt
or
fcomps
xor
roll
mov
or
inc
add
test
mov
mov
jle
push
stos
xchg
ljmp
sub
fcompp
jp
mov
daa
jno
popf
sbb
outsb
sub
out
das
push
inc
mov
mov
into
xor
push
push
rcrb
sbb
outsl
movsl
lods
fnsave
les
stos
push
jg
sub
hlt
pop
into
popa
xor
rol
sub
mov
xchg
push
lahf
add
scas
xchg
shl
dec
lret
mov
pop
sub
mov
cmp
jecxz
mov
shr
ficomps
xor
movsb
fmul
test
arpl
inc
lods
jmp
dec
cmp
repz
test
mov
adc
pop
test
xchg
jbe
mov
dec
mov
mov
and
xchg
push
negb
ss
sbb
sub
mov
jo
jle
mul
test
ljmp
shl
ds
call
or
mov
xchg
stos
mov
repnz
ror
xchg
outsb
mov
sub
repz
cmp
mov
xchg
jmp
mov
mov
cmp
mov
dec
loope
pop
popf
mov
push
mov
add
adc
fbld
aam
push
ret
adc
clc
test
inc
cmp
inc
shlb
adc
shrl
adc
cs
jno
push
mov
sub
outsl
jp
andl
rolb
ret
pmullw
in
inc
loop
dec
in
aas
pop
mov
jbe
shrl
ja
push
xchg
jmp
adc
cmp
and
mov
cmpsl
lahf
mov
enter
adc
mov
mov
subl
and
cmpsl
xchg
push
imul
inc
out
movsb
or
xchg
insb
xor
lcall
mov
mov
jecxz
jo
arpl
popf
mov
imull
daa
xor
repnz
and
loopne
incl
sbb
sub
inc
cmp
and
je
xchg
jb
jl
fisttpll
call
lea
mov
push
popa
jb
inc
xchg
sbb
mov
dec
cmp
ljmp
mov
inc
js
add
jge
ds
xchg
adc
jae
shlb
mov
sbb
sub
adc
rorb
stos
stc
lds
sub
mov
arpl
mov
xchg
inc
add
cmp
lcall
push
sub
dec
mov
repz
sahf
mov
rorl
fdivrp
outsb
xchg
xor
lcall
adc
in
push
inc
aam
repz
mov
aam
add
mov
shll
cltd
pop
xchg
push
mov
out
push
sub
stos
orb
jmp
push
sbb
clc
mov
daa
stc
mov
push
pop
sub
mov
mov
fisttps
push
inc
jmp
cltd
sub
xor
push
push
dec
js
je
push
and
dec
movsl
mov
sub
fwait
push
pop
fisubl
xchg
or
lock
popl
push
jae
xchg
xor
mov
ljmp
mov
lret
add
xchg
ret
xchg
mov
je
ror
int3
mov
cmp
inc
lock
scas
cltd
outsb
mov
or
out
adc
imul
lret
jl
mov
jmp
inc
or
out
pop
ds
ss
xor
jle
mov
pusha
pop
mov
inc
loopne
jbe
out
ret
mov
int3
sub
pop
or
jo
std
sbb
insb
shrb
stos
dec
cmp
sub
sbb
mov
ljmp
out
push
lret
mov
in
loopne
ret
test
inc
pop
test
cmp
mov
and
pop
aad
ficomps
push
es
sbb
pop
add
enter
fisubs
inc
inc
fisttpll
add
cli
daa
mov
faddl
jno
jb
aaa
xor
pop
mov
jno
loopne
imul
cmp
ja
sarl
sbb
cmp
aas
jbe
or
shll
in
or
das
jmp
icebp
mov
and
and
cmp
frstor
test
std
sbb
push
inc
sub
mov
jae
dec
loop
ficoml
out
insl
in
lcall
hlt
add
jecxz
into
iret
sub
and
xor
movsl
dec
xchg
sub
sub
jne
sub
repnz
mov
mov
pop
and
jo
mov
lods
fimull
outsl
int
sub
pusha
xor
insb
dec
push
sub
sti
mov
pop
imul
pop
cmp
lods
pop
xchg
nop
xchg
mov
aas
loopne
add
inc
lock
pop
ror
sub
scas
andb
imul
repz
ret
loopne
test
movsl
lret
or
mov
push
mov
sub
mov
sti
fcomp
test
and
aas
xchg
or
pop
mov
dec
idivb
jno
jae
call
std
mov
scas
xchg
xor
add
lcall
shll
jae
mov
jge
or
pop
xchg
jae
pop
xlat
mov
stos
push
inc
mov
push
movsb
sahf
and
daa
mov
or
xchg
ret
jp
pop
cwtl
test
push
or
iret
sahf
cmc
add
stos
lcall
jp
stos
push
fucomi
out
xor
pop
fldcw
outsl
push
sub
xchg
adc
subl
push
cmp
int
neg
pop
out
xor
and
in
sahf
loopne
sti
leave
lds
fs
movsb
arpl
jae
jp
push
adc
pushl
pop
mov
xorb
inc
add
lds
loopne
sub
mov
sub
xchg
and
sarl
inc
push
sbb
xchg
fwait
out
mov
mov
xchg
or
ror
push
and
mov
push
cli
sahf
adcl
aas
int
jo
sbb
mov
pushf
pop
jbe
xor
xchg
fnstsw
inc
sub
xor
jecxz
xor
xchg
stos
test
dec
mov
cmpsb
cld
push
daa
mov
add
pop
sbbl
test
inc
add
cltd
xor
jecxz
cmpsl
int
out
lret
dec
push
bound
mov
jo
mov
lret
jbe
add
jecxz
test
loop
xorb
addr16
xor
jns
in
popf
adc
test
and
xchg
pop
lods
mov
cmp
imul
pop
bound
clc
ss
lods
shlb
repnz
pushf
pop
fs
jmp
mulb
sub
cmp
mov
xlat
lret
test
sub
nop
hlt
or
jne
shll
xchg
push
out
fucomip
or
inc
repnz
sar
jo
sti
pop
pop
scas
test
stos
gs
mov
mov
aad
cmpsb
cmpsl
or
mov
mov
push
mov
daa
iret
cmpsb
lods
jmp
sahf
xor
loope
dec
je
sahf
dec
les
pusha
inc
addr16
or
fwait
aad
test
rcr
add
pop
xchg
outsl
sarb
xor
or
shlb
sub
sub
pop
out
jo
push
jne
pop
dec
add
into
or
and
hlt
out
movsl
mov
jbe
mov
add
jno
mov
xchg
hlt
nop
mov
xchg
mov
mov
lods
bound
in
inc
cmp
mov
testb
push
fdiv
push
mov
enter
xor
pop
leave
jecxz
das
push
xor
out
sarl
out
xlat
les
pop
imul
out
loope
dec
out
lcall
cmc
mulb
fs
mov
xor
mov
rolb
push
jne
jle
jb
mov
pushf
iret
jge
inc
lds
test
stos
ja
out
mov
adc
lret
sub
stc
pop
xor
push
jb
and
mov
inc
jp
sbb
test
xor
in
dec
or
notb
sbb
fisttps
fadds
adc
in
sub
mov
push
sti
cmp
cmp
mov
hlt
dec
stc
into
and
call
xor
and
and
stc
scas
sub
mul
pop
sub
mov
aas
xor
push
inc
bound
popa
or
dec
xor
jp
mov
fidivs
push
xor
push
sub
int
push
cmc
aam
xchg
xor
mov
push
add
push
data16
xchg
insb
jnp
xchg
fucomp
ljmp
into
sti
movsl
push
sbb
pop
mov
decl
and
inc
in
cmp
pop
in
xchg
pop
popf
pop
cmp
into
pop
iret
vpmullw
es
in
mov
xor
sub
leave
imul
repz
out
push
add
insl
fldcw
xor
xor
mov
xchg
xchg
sub
sub
test
cmc
mov
jno
push
mov
sub
dec
fimull
cs
out
cli
jecxz
mov
mov
fildl
movsb
dec
adcl
test
insb
xchg
and
in
jmp
mov
push
push
push
sarl
jne
lret
jp
push
in
rcr
mov
loopne
pop
es
lret
mov
dec
and
mov
insl
jmp
loop
push
mov
dec
pop
jmp
iret
jmp
cmp
out
mov
das
in
and
push
push
ds
cmp
lods
in
cmp
adc
mov
push
push
stos
daa
sub
sub
and
mov
out
pop
into
cmp
sub
imul
adc
dec
stos
ss
pusha
enter
leave
sub
cli
call
sub
mov
xchg
leave
push
sub
movsl
pusha
fcom
mov
das
out
sub
jmp
es
ret
sub
in
rclb
mov
mov
sub
iret
movsb
enter
mov
fs
and
iret
xchg
imul
sub
in
mov
add
mov
sahf
mov
pop
ret
push
add
js
mov
cli
cli
daa
cmc
sub
outsb
flds
test
aam
loopne
adc
mov
ja
sub
cmp
int3
adc
je
add
sbb
sbb
testb
imul
stc
ss
mov
sub
pusha
daa
pop
cwtl
scas
pop
popa
jp
sahf
mov
mov
insl
sub
stos
mov
mov
call
lcall
ficoms
lcall
ret
xchg
mov
mov
jecxz
cmc
out
jmp
imul
jmp
and
sub
sahf
pop
stos
leave
cmp
ret
add
sub
push
and
xlat
cs
stos
pop
pop
fdivrl
xorb
test
push
aam
mov
cmp
test
pop
and
test
movsl
lds
movsb
mov
addr16
aaa
mov
push
repz
sub
aaa
xor
loop
jbe
xor
aam
add
stos
movsl
lods
cltd
popa
xchg
push
cs
in
test
cmpl
mov
lods
shl
mov
mov
push
push
arpl
idiv
push
stc
iret
rolb
add
mov
test
cmp
add
push
cmp
jno
sub
mov
inc
jbe
jb
push
movsl
hlt
bound
adcb
dec
je
push
xor
movsl
xchg
rcll
stc
mov
sub
or
shr
cli
or
sahf
xor
jo
mov
stos
ret
in
mov
inc
cld
mov
jmp
jne
movsb
insb
subb
sbb
lds
cmp
jbe
mov
jecxz
dec
pop
pop
add
lret
fsubrs
add
pop
jg
lret
mov
adc
sbb
mov
sar
mov
xchg
adc
in
and
aas
fimuls
mov
lods
dec
sar
xchg
scas
call
mov
push
push
mov
imul
adc
sub
inc
movsl
push
jns
push
pop
jo
and
in
push
movsb
das
sub
orl
lods
inc
movsl
ret
cs
mov
fstpt
mov
and
cmp
pop
mov
xchg
rcll
loope
fistpl
movsb
push
insl
jge
push
pop
jno
dec
push
cmpsb
and
add
sub
je
and
insl
and
adc
push
aad
mov
xor
pop
clc
mov
stos
dec
idivb
push
add
cs
mov
fisttps
sub
push
cs
sub
push
and
dec
jecxz
int3
pusha
inc
mov
pushf
push
jne
mov
inc
lret
dec
adc
sbb
stos
mov
vmovd
xchg
mov
fdiv
fisubl
inc
ficoms
mov
ss
jne
das
lahf
push
adcb
aas
lahf
cs
inc
lock
cmpsl
icebp
das
out
mov
test
sub
in
xor
inc
ss
je
dec
test
mov
ret
sbbl
dec
pop
test
lret
lods
jmp
xchg
in
xchg
loop
repnz
imul
jge
jg
sub
mov
add
mov
shl
in
pop
or
push
lods
push
popf
stos
clc
aaa
rcrb
aam
cmp
je
arpl
das
pusha
jmp
mov
push
repz
subl
daa
inc
ja
fmul
sti
imul
cmc
mov
mov
subl
test
mov
mov
fs
je,pt
sub
mov
mov
or
sahf
cmp
sahf
xchg
lock
xor
negb
lods
add
and
xchg
outsb
test
ret
mov
xchg
fisubrl
lea
clc
jae
cld
es
pop
xor
hlt
mov
xor
mov
sub
je
lock
add
lds
sbb
fisubl
sbb
xchg
clc
in
xchg
decl
push
xor
insb
fildl
outsb
lcall
or
cmpsl
cmp
cmp
push
aad
xchg
cmp
push
xlat
clc
int
popa
gs
iret
fldcw
and
rclb
mov
outsl
jo
loop
cmpsl
cs
pop
popf
add
imul
roll
stos
sti
in
imul
popf
push
hlt
loop
push
mov
jp
mov
sbb
mov
and
imul
in
add
daa
jl
call
pop
and
cmc
sub
add
mov
jnp
mov
mov
cmp
fisubl
xor
xchg
ss
shll
das
out
adc
mov
in
jbe
nop
xor
push
movsb
jnp
decl
sbb
out
stos
iret
or
adc
out
sti
ds
mov
mov
dec
cmp
pop
jecxz
les
jne
iret
mov
cmp
or
dec
je
and
insl
or
mov
pop
mov
jb
sarb
decl
test
das
mov
push
cli
xor
jl
and
pop
add
fdivs
mov
sub
stc
cmpsb
jae
adc
dec
mov
clc
je,pt
or
stos
movsl
lahf
ret
inc
in
scas
out
add
pop
fists
mov
stos
xchg
sub
cmpsl
mov
movsb
cmp
lcall
push
in
lahf
push
inc
int
in
pushf
testl
je
pop
test
out
in
inc
and
sbb
orl
and
adc
fmulp
ljmp
cmp
mov
cli
daa
insb
ret
test
shr
and
dec
vpunpckhbw
in
loop
mov
cltd
fisubrs
inc
push
sbb
jno
sub
xchg
xor
lock
push
add
jbe
stc
xor
xchg
aad
xchg
movsb
mov
mov
pop
sub
out
add
jmp
aaa
shr
mov
dec
xchg
push
ss
aad
in
jmp
pop
add
fiaddl
pop
lcall
mov
sahf
into
mov
or
cmp
fsubl
in
mov
xchg
or
cmpb
daa
sub
dec
test
and
adc
test
inc
cmp
ds
inc
xchg
and
fwait
mov
lret
dec
insl
imul
cmc
and
sti
sbb
xchg
outsl
mov
or
clc
cmp
dec
daa
push
roll
mov
sub
out
mov
mov
xchg
and
and
cmc
ret
inc
xchg
cmp
and
cs
lcall
sub
xchg
push
fcmovnb
xchg
jg
inc
cmp
jnp,pn
push
jmp
inc
xchg
jb
pop
add
mov
aam
xchg
aad
cmp
mov
addb
mov
jo
push
xor
add
xor
cmp
or
pusha
pop
loope
repnz
push
xor
dec
daa
mov
mov
outsl
and
rcrb
ret
popa
pop
ljmp
jo
jnp
adc
js
cmp
ret
clc
push
xor
into
stos
jns
or
jb
push
int
lret
pop
add
adc
xlat
rorl
pop
sahf
fcompl
xor
mov
xchg
lret
mov
mov
stos
or
jns
mov
push
fs
bound
inc
imull
mov
lahf
stos
sub
inc
daa
sbb
in
mov
mov
mov
ja
mov
mov
pop
sbb
ja
pop
mov
dec
xor
add
rolb
cmp
popa
mulb
popa
xor
ss
mov
aad
mov
mov
mov
sub
cmc
int
lahf
leave
and
in
mov
sbb
mov
mov
out
dec
subb
or
test
dec
test
sub
adc
insb
push
push
xchg
xor
cs
jle
push
pop
sahf
sbb
xchg
and
mov
imul
mov
cmp
aaa
inc
inc
rcl
fiaddl
std
xor
stos
js
fiadds
jae
push
sbb
inc
inc
sub
jge
movsl
aam
add
sbb
mov
loop
pop
adc
stos
pop
jbe
dec
xchg
or
in
pop
xor
stc
addr16
dec
dec
mov
adc
cld
lods
jns
test
cmp
cmc
mov
arpl
add
pop
ss
push
scas
into
xor
mov
pop
fs
aad
fs
sbb
sub
pop
movsl
test
mov
sub
lods
push
out
mov
aaa
dec
adc
mov
jb
adc
int3
sub
int
add
xor
mov
or
cmp
mov
mov
test
lret
out
loope
test
jne
mov
lret
mov
repnz
pop
mov
es
push
cmp
mov
cli
add
js
pushf
stos
and
and
xchg
sub
pop
and
idiv
jno
sub
mov
lret
sbb
push
hlt
addr16
pop
and
add
adc
ss
stc
in
mov
test
inc
call
sub
stc
jno
test
sbb
sbb
dec
nop
loopne
pop
xor
push
dec
ror
mov
xor
ljmp
push
leave
and
push
sub
movsb
or
dec
iret
clc
xchg
sub
rolb
pop
aam
in
fwait
cmpsb
xchg
push
loop
popf
push
pop
stos
aad
mov
jecxz
insl
and
dec
shl
in
mov
xor
xchg
inc
ljmp
xchg
fidivs
aaa
test
mov
push
sbb
mov
data16
sbb
repnz
mov
dec
in
and
call
repnz
fidivs
jle
sub
jecxz
dec
cmc
ret
movsb
scas
aaa
shlb
call
scas
adc
xor
xchg
daa
pop
mov
xchg
jne
cltd
add
add
mov
or
movsl
fprem1
and
jp
fcmovu
pusha
push
sub
mov
inc
lea
stos
into
and
pop
dec
sti
lret
and
nop
jne
mov
lods
add
scas
mov
stos
mov
jo
and
xchg
xchg
xor
in
push
scas
shl
mov
or
ss
dec
outsb
call
pop
adc
punpcklwd
mov
dec
lahf
cmp
xchg
dec
ljmp
in
mov
mov
mov
push
ret
scas
pusha
push
lods
xchg
nop
cmc
inc
fbld
and
push
ret
sub
or
add
mov
and
in
insb
aad
scas
pop
fiadds
dec
pop
sar
aam
sub
aad
or
sbb
iret
ljmp
pop
daa
mov
sbb
test
in
ret
cld
inc
push
shll
jns
fbld
stos
inc
cltd
sub
in
sub
cmp
and
push
adc
or
mov
push
aad
movsb
cmp
adc
cmp
sub
xchg
mov
dec
sub
jo
and
jecxz
push
jg
arpl
enter
jns
push
mov
mov
leave
mov
shlb
and
imul
mov
xchg
mov
fstp
je
dec
std
jbe
jo
movsl
sti
sbb
es
push
idivb
aas
jmp
fs
imul
imul
movsl
or
and
mov
iret
shll
mov
sub
push
sub
call
mov
sahf
cwtl
and
dec
popf
js
cmp
inc
outsb
movsb
mov
leave
shlb
sbbb
aaa
xlat
or
jmp
imul
out
cmpsl
mov
test
mov
movsb
jno
sarl
and
stos
jae
test
push
mov
pop
and
jle
movsl
jge
rcrl
mov
imul
sarl
xor
cmp
sbb
pop
call
std
pop
mov
push
mov
xchg
xor
fdivrl
mov
lods
ja
in
dec
mov
adc
sahf
xchg
dec
push
in
mov
sbb
push
inc
je
lret
pop
pop
pop
ds
loopne
lret
mov
leave
add
adc
arpl
jecxz
mov
mov
cwtl
testb
pop
shl
jmp
jno
jecxz
lcall
mov
ret
mov
push
cli
dec
add
ficoml
mov
jb
sub
movsb
mov
cmc
imul
or
pop
addr16
sbb
push
jp
mov
mov
or
mov
aad
ficoms
dec
sahf
mov
sbbl
xchg
enter
xchg
shll
in
or
sub
out
jb
in
scas
sub
mov
adc
in
jle
iret
add
jl
sbb
mov
test
jae
sbb
lods
cmp
in
pop
insb
into
stc
decb
xor
inc
inc
sbb
or
and
mov
xor
fisubrs
repz
nop
pop
jl
dec
sbb
movsl
add
scas
insl
xchg
stc
xchg
sarb
outsb
mov
inc
movsl
mov
orb
out
clc
out
nop
cmp
inc
sbb
cmp
out
cs
movsl
pop
inc
jle
sub
icebp
xor
sub
shl
push
xor
mov
cmp
push
xor
or
subb
das
rcr
push
push
pop
insl
bound
test
push
test
fs
cmc
mov
add
xor
push
lret
jle
fwait
or
mov
stos
sub
stos
sbb
mov
lods
add
rolb
loop
sub
lret
inc
pop
mov
ja
add
sub
fcomi
push
xchg
push
loope
pop
pop
mov
jmp
es
daa
jp
jne
sti
inc
mov
popl
pop
loop
xchg
in
push
or
aad
in
fs
sub
cwtl
sahf
test
ljmp
std
mov
outsb
test
add
and
inc
mov
xor
popa
inc
out
int3
mov
gs
scas
mov
out
stos
and
cmp
lods
fisubl
mov
inc
adc
lcall
pop
idivl
mov
cld
int3
imul
lret
test
sbb
push
push
ds
pop
and
cmp
sub
jge
mov
outsl
dec
pop
in
rcll
push
pusha
mov
mov
test
int
push
xchg
sar
xor
dec
inc
stos
aas
lock
in
mov
test
outsb
sbb
leave
mov
xchg
jae
outsb
test
stos
sbbb
lods
into
mov
negb
test
imul
sub
fldt
and
addr16
in
push
in
xor
call
lock
jbe
mov
push
subb
push
mov
in
loopne
mov
loope
into
hlt
xchg
stos
inc
xor
sub
lcall
andl
ds
adc
inc
add
sbb
adcb
bound
lods
outsb
or
push
add
push
or
sub
pop
outsb
loop
xchg
xor
dec
in
cmp
fisttpl
aam
enter
adc
xchg
mov
movsb
xor
stos
lret
adc
mov
shr
sub
in
push
call
and
mov
push
mov
mov
mov
mov
push
xchg
in
les
push
sub
in
xchg
lret
outsb
push
cmpsl
shr
pop
out
pop
or
cmc
mov
jge
insb
shl
and
jno
and
pop
mov
call
xchg
test
test
push
xchg
mov
mov
xchg
in
adc
shl
jecxz
testb
jge
mov
clc
loope
mov
sub
mov
scas
push
gs
add
out
pop
lock
jecxz
aad
andb
scas
adc
xor
mov
mov
mulb
sbb
xchg
and
nop
dec
pop
sbb
imul
xor
negb
jns
pop
mov
test
js
test
rcll
jb
mov
jo
lock
ret
jne
mov
push
sbb
hlt
shrl
aad
cmpsl
or
jg
loope
adcl
into
inc
jo
aad
sub
and
and
test
int3
or
add
pop
inc
cmp
rclb
int3
inc
test
in
cltd
sbb
test
jnp
iret
mov
sub
fdivrs
xchg
sub
pop
push
xlat
leave
cmp
dec
jp
ret
loopne
cmp
jne
cmc
lret
pop
pop
xor
shll
pop
rorl
fwait
cmp
pop
daa
xlat
xchg
and
divb
pop
addb
push
enter
leave
lcall
movsb
mov
stos
fstl
jle
push
call
ds
mov
push
jo
insb
mov
mov
adc
popa
adc
stos
daa
push
and
pushf
jmp
mov
addb
push
fcmovnbe
sub
pop
cmp
loope
mov
mov
mov
lret
mov
pop
stos
push
fldenv
cmp
outsl
movsl
leave
std
pop
inc
adcb
aaa
mov
cmc
loop
ret
adc
pop
sub
in
mov
pop
dec
mov
andl
into
xor
lret
push
and
xchg
xchg
inc
jno
inc
cmp
mov
test
add
add
pusha
je
dec
aaa
push
movsl
mov
loopne
push
repz
push
leave
mov
mov
sub
arpl
dec
ss
sti
or
mov
lds
rclb
cld
dec
add
push
jg
stos
leave
and
xor
ljmp
add
rolb
adc
mov
and
mov
and
loope
dec
cmp
test
cmpsl
in
sub
data16
mov
mov
mov
fs
mov
pop
stos
xor
in
mov
jmp
xor
push
dec
sbb
sahf
or
mov
sub
jecxz
mov
test
mov
sub
loope
or
mov
jns
xchg
in
add
dec
stos
push
sbb
xorb
xor
jnp
insb
pop
mov
inc
jge
int
push
xchg
mov
aam
sub
mov
inc
aam
pop
fsubrl
jg
out
lcall
sub
add
mov
add
jo
adc
mov
in
mov
mov
mov
jno
pushf
leave
and
adcl
or
test
pop
cs
inc
push
push
sahf
adc
cwtl
jle
bound
jg
sub
int
dec
aad
and
lret
lods
xor
adc
arpl
push
mov
mov
inc
test
mov
dec
inc
dec
sub
jmp
push
out
push
mov
cld
sbb
in
mov
arpl
es
push
sbb
sbb
cs
stos
sahf
ss
lods
cmpb
in
test
aaa
rolb
ror
popf
jb
push
fisttpll
push
push
mov
pop
sub
cmp
test
test
std
out
cmc
test
dec
sub
push
in
out
and
jo
xor
leave
cli
mov
scas
jmp
mov
scas
out
pop
jnp
out
adc
mov
rcrl
push
lds
adc
sub
inc
nop
cmpsl
sub
push
adc
xor
and
ret
jbe
jb
add
cmp
xchg
stos
push
push
outsl
sub
movsb
adc
xchg
jo
jge
push
push
out
adcl
push
xchg
cmp
or
mov
mov
inc
and
fisubl
loope
cmpb
mov
mov
mov
and
mov
inc
in
xlat
insl
in
sub
lods
jne
mulb
add
ljmp
inc
mov
mov
mov
sbb
add
sub
or
mov
sbb
into
cmp
mov
movsb
mov
nop
mov
movsl
mov
imul
dec
daa
push
xor
push
sbb
iret
push
insb
stos
in
mov
sub
xchg
xchg
addr16
aad
push
mov
divb
shl
fcmovnbe
mov
or
fiaddl
cmpsl
cs
fwait
out
push
daa
decl
mov
movsl
leave
sub
cmc
call
cmp
jns
mov
xor
pop
xchg
fs
test
pop
aad
pop
mov
inc
das
jmp
add
call
cli
loopne
mov
je
mov
jge
jno
sarl
jbe
xchg
mov
icebp
mov
mov
fistpll
cmc
hlt
push
jecxz
jno
in
mov
aaa
adc
jge
and
inc
mov
cmpsb
test
dec
arpl
cli
test
pop
in
push
movsl
xchg
ljmp
bound
dec
rcl
mov
fs
mov
pusha
les
push
xchg
dec
repz
add
test
xor
mov
pop
std
xlat
in
and
jle
popf
aad
lret
push
bound
jecxz
add
mov
stos
dec
loopne
jae
add
mov
jp
ret
inc
mov
push
mov
and
push
rorb
and
ss
ds
lods
push
test
push
bound
pop
jg
stc
negb
addl
stos
cmp
push
sbb
mov
push
repnz
ss
adc
jb
sub
inc
movsl
mov
scas
mov
mov
call
je
es
cld
outsb
pop
lahf
dec
mov
mov
adc
add
subl
jbe
xchg
cmp
movsl
xlat
cmpsb
cmp
push
movsb
hlt
mov
fidivrl
or
out
pop
or
mov
push
and
or
dec
lea
mov
ja
mov
mov
inc
fcomps
sub
paddq
sub
scas
repz
mov
lahf
fnstsw
mov
sbb
jle
jbe
test
mov
lea
cmp
add
cmc
cmp
sti
jb
cwtl
mov
xchg
mov
push
mov
imul
or
and
push
leave
dec
loopne
mov
xchg
arpl
and
daa
mov
fmuls
or
xchg
and
xchg
or
and
sub
add
shll
insb
shlb
sahf
xor
clc
outsb
mov
scas
push
xor
pop
and
and
leave
lea
ss
xchg
or
pop
mov
lahf
stos
lcall
mov
lods
sub
pop
jb
dec
call
fsts
stos
clc
and
cmp
fidivs
loop
popa
jge
ljmp
ret
xchg
dec
testb
mov
sbb
test
xchg
cmp
mov
jo
mov
loopne
push
psubd
or
adc
xchg
xlat
jp
xchg
adc
xchg
daa
jecxz
mov
int
outsb
je
inc
push
ss
and
xchg
imul
pop
popa
mulb
cmp
and
push
adc
mov
mov
pop
xor
push
and
xor
inc
jo
inc
sub
outsb
test
mov
sahf
ljmp
xorb
shll
stc
ds
cwtl
aam
add
pusha
adc
mull
and
add
stc
gs
xor
jbe
xchg
and
cmp
in
out
or
dec
out
lret
pushf
negb
or
fsubl
and
xchg
xchg
int
loope
loop
ljmp
loopne
push
mov
inc
xor
hlt
and
inc
xchg
xchg
test
cmp
pop
and
and
ds
dec
mov
sar
sub
movsl
cmc
or
in
xor
test
xchg
out
xor
mov
nop
clc
push
out
scas
lret
inc
xchg
scas
xor
test
inc
js
add
jp
push
fldl
addl
sarb
xchg
test
jge
hlt
outsl
inc
arpl
push
inc
cmp
mov
lahf
pop
sub
cmp
popf
inc
cs
imul
mov
sbb
cmc
add
adc
or
and
cmp
dec
addr16
or
cltd
adc
cmpsb
adc
scas
mov
aam
stc
sub
sub
dec
in
lret
repz
les
xor
or
and
push
clc
ret
adc
in
pushf
aad
mov
jge
outsl
ret
jne
and
add
scas
sbb
test
push
subl
jge
jns
xor
or
inc
sub
cltd
cmp
cli
aas
arpl
add
sub
leave
cmp
pop
mov
mov
cmc
insl
add
inc
xchg
adc
xchg
xor
aad
fcompp
inc
test
call
and
lcall
ret
and
or
jmp
int
fmuls
mov
adc
testl
sahf
cs
data16
outsb
cmpsl
and
movsl
mov
fsubl
push
cmp
add
rcrb
arpl
mov
mov
popf
pop
push
ljmp
inc
jmp
fldenv
sbb
stos
pop
mov
in
and
sahf
xor
ss
jo
jae
add
inc
mov
xor
push
in
push
stc
test
or
mov
ret
mov
pop
cmp
lret
pop
jle
inc
mov
cmpsl
mov
scas
test
sbbb
mov
out
xor
mov
add
mov
dec
cmp
pop
add
aaa
or
lcall
imul
sbb
cmpb
mov
out
loope
xchg
adc
push
bound
enter
add
outsb
movsb
imul
cld
add
outsb
in
lret
pop
movsb
movsb
cs
lods
adc
mov
rcll
mov
je
add
jmp
sub
inc
arpl
add
mov
add
sub
daa
scas
adc
fsubs
push
outsb
jecxz
sti
out
aaa
jge
jmp
mov
push
and
inc
inc
imulb
add
shll
ljmp
inc
mov
pop
xor
cmp
dec
push
divl
mov
fcmovb
lods
es
dec
inc
or
push
out
push
mov
and
adc
stc
xchg
leave
scas
or
sub
arpl
and
add
mov
sub
testb
mov
pop
test
mov
daa
dec
pop
sub
mov
xor
lock
gs
sbb
lret
jmp
mov
stc
push
bndldx
push
sub
sub
mov
sub
mov
lds
movb
in
pop
dec
push
jmp
jbe
vpcomub
out
lcall
iret
cmp
lods
sbb
stos
cmp
mov
adc
add
mov
jle
out
les
xchg
sub
jne
jge
mov
sbb
mov
ja
and
cli
dec
add
movsl
jo
mov
adc
and
fimull
push
cmp
sub
sti
fisubl
cli
sub
jo
sbb
lea
lcall
icebp
mov
push
int
mov
imul
repnz
iret
int3
jge
mov
aad
pop
into
inc
pop
test
test
sbb
arpl
movsl
dec
mov
xor
cmp
movsl
lahf
jb
sub
in
mov
stos
movsl
aam
sti
cmp
adc
xchg
rolb
and
or
aam
insb
pop
std
arpl
stos
repnz
add
stos
cmpsb
mov
dec
pop
sub
adc
call
test
test
in
xor
xchg
pop
or
movsb
call
pop
dec
test
movsl
mov
sub
pushf
outsb
addr16
cmpsl
scas
sbb
popf
int
lods
pop
ljmp
mov
mov
mov
clts
adc
xchg
into
mov
jge
sub
call
sub
sub
sbb
cmp
xchg
sub
loope
leave
adc
inc
adc
call
push
pop
ja
mov
jbe
test
jle
addr16
cmpsb
ret
add
test
cmpsb
mov
movsb
test
jno
mov
cltd
push
loope
mov
out
test
sti
xchg
mov
pop
cmp
outsl
movsb
xchg
ficoms
sbbb
or
les
test
dec
lods
cmp
lret
xchg
xchg
sub
in
fs
ss
add
ljmp
stos
inc
mov
xchg
push
test
pop
out
enter
int3
mov
or
pop
scas
stc
fistpll
sbb
js
scas
js
in
nop
scas
dec
jo
sahf
cmp
lea
inc
and
mov
insb
je
sub
hlt
scas
mov
inc
sub
jns
sub
sbb
movsl
dec
frstor
test
nop
push
jne
dec
jmp
add
and
mov
sbb
ja
or
loopne
push
jo
lret
push
dec
sub
scas
mov
stc
push
jg
ja
adc
dec
cmp
clc
mov
inc
sahf
hlt
xor
test
jle
jge,pt
cmp
sub
mov
shlb
inc
mov
subl
ljmp
jge
jl
mov
int3
pop
or
mov
movsl
call
inc
nop
adc
dec
sub
dec
xchg
sti
stos
int
imul
mov
aam
mov
fistpll
clc
jmp
ljmp
fnstenv
push
pop
insb
movsl
cmp
add
mov
imul
fwait
inc
roll
lahf
faddp
shlb
mov
fs
and
mov
dec
or
inc
sub
sub
jno
mov
bound
mov
sbb
mov
pusha
lds
mov
out
aas
shufps
mov
stos
dec
outsb
das
push
xlat
ret
aad
shll
js
push
adc
mov
scas
and
xor
push
cs
es
pop
pop
dec
cmc
test
xchg
sbb
nop
xor
ret
pusha
cmpsb
sbb
push
cli
xor
inc
jge
pusha
stc
push
mov
push
repnz
lret
xchg
mov
xor
sub
and
sub
jae
rcrl
lock
in
ret
movsl
mov
mov
add
sbb
and
movsb
adc
mov
jg
jnp
push
test
add
add
push
in
mov
mov
mov
ret
adcl
add
les
jg
out
pop
je
jne
jb
sbb
stos
add
jp
lods
xchg
mov
sub
sub
push
aas
sahf
sbb
mov
sbb
inc
rcl
xchg
jg
xor
js
cmp
push
adc
jno
dec
stos
out
loop
outsl
repnz
aad
mov
into
push
scas
je
xlat
pop
mov
leave
jg
jb
add
mov
add
mov
repz
xchg
aad
movsb
add
xlat
sub
stc
jmp
ss
inc
shll
aad
fbld
pop
arpl
into
adc
mov
cmovp
cmc
adc
jl
mov
mov
xchg
xor
gs
xlat
shl
mov
int3
fisubs
pop
sarb
lods
mov
js
out
nop
sub
and
sarl
adc
stos
sbb
dec
jae
movsl
jl
rcrl
push
xchg
push
fucomip
in
scas
std
push
mov
movsb
mov
sub
test
inc
push
or
inc
in
push
xchg
xor
jne
scas
mov
dec
nop
pop
dec
int
nop
mov
jecxz
or
pop
bound
sahf
mov
xor
cmp
cmp
mov
aam
paddw
dec
shll
xchg
out
xor
js
mov
ss
test
aad
lods
arpl
int
mov
push
sbb
stos
testb
pop
insl
pop
sub
je
out
xor
jae
das
or
mov
and
stos
mov
push
jo
add
mov
stc
push
mov
jg
fs
imul
stos
fildll
sti
push
cmpsl
cltd
pop
mov
pop
dec
call
mov
dec
mov
xlat
sub
lds
pop
push
fnstsw
push
cmp
lret
or
ret
outsb
nop
xor
shlb
mov
hlt
ds
push
jge
xor
movsb
lods
outsb
and
add
inc
mov
mov
incb
push
not
out
outsb
dec
ljmp
ss
xchg
and
test
in
sbb
cmp
imul
movsl
int
popf
movsb
insb
dec
add
xor
mov
push
xor
idiv
les
jo
and
sub
jae
xor
mov
imul
rolb
repnz
rclb
repz
std
lret
xchg
inc
and
ret
pop
aam
pop
adc
gs
stos
movsl
nop
in
lock
rcrb
lock
int
push
and
xlat
jne
inc
mov
cwtl
push
pop
nop
lds
jl
xchg
fucomp
psubq
mov
shrl
inc
hlt
xchg
test
or
and
or
insb
mov
push
fisttps
cmp
je
loop
ret
mov
mov
ret
adc
rolb
dec
movsl
mov
ljmp
mov
jmp
cmp
mov
mov
inc
or
in
testb
mov
in
cmp
ja
xlat
std
cmovnp
mov
test
pop
out
push
iret
and
dec
adc
push
movsb
cmp
push
sbbl
xchg
sahf
leave
mov
jo
sub
sub
cwtl
std
fwait
lods
sub
add
iret
int
inc
in
and
mov
xchg
adc
hlt
ljmp
stos
pop
lds
cli
jb
pop
mov
pop
pop
cmp
daa
std
mov
std
adc
mov
or
testb
mov
ja
xor
mov
repnz
mov
icebp
rcr
scas
aaa
imul
call
daa
mov
or
les
icebp
or
adc
loop
mov
and
int
xor
cmp
inc
fistl
and
mov
mov
sarb
pushl
sub
pop
jns
push
mov
shr
stos
inc
stos
sub
shlb
adcl
shr
xor
push
test
xor
cmp
hlt
cmp
mov
pop
into
push
fnsave
fildll
idiv
cmpsl
xor
push
testb
mov
inc
hlt
ret
sub
or
cmovns
sub
ljmp
cmpsb
pop
add
mov
imul
fisttpll
cmpsb
lods
cmp
inc
into
xor
in
jmp
ds
test
imul
xor
cwtl
xlat
movsb
cmp
lahf
lea
jp
loop
inc
ds
cmpsl
xchg
in
movsb
or
mov
cmp
mov
in
sti
ret
push
cli
cmp
cmp
push
fs
lock
push
and
call
jl
push
cmpsl
repnz
ss
imul
fstl
xor
xor
jecxz
cmpsl
aaa
into
lods
and
mov
lcall
ss
sub
je
and
xchg
inc
mov
add
stc
push
loopne
dec
cmpsb
sub
and
inc
aad
and
pop
rcr
jne
sub
push
push
loope
cmp
pop
hlt
push
pop
sub
loopne
leave
inc
push
jo
imul
xor
testl
mov
sar
stos
xchg
xor
xor
sahf
stos
aad
xor
xchg
in
scas
sub
pop
movsb
inc
andl
enter
pushf
dec
xchg
xchg
jne
jle
adc
mov
sub
in
push
mov
hlt
in
mov
push
pop
or
push
adc
mov
push
enter
fwait
cmc
mov
cli
xor
push
mov
sbb
mov
ds
sub
add
mov
pop
mov
mov
and
stc
xchg
push
and
gs
shl
mov
mov
xor
jns
imul
jecxz
lret
mov
jbe
arpl
and
cmp
stc
dec
lret
xor
data16
shlb
mov
mov
push
or
in
ss
push
ret
cmp
cmp
sbb
xchg
movsb
xchg
mov
imul
dec
rcrb
xchg
leave
or
mov
aad
jg
fstp
xor
pop
dec
cmc
inc
sub
jecxz
stos
inc
add
rclb
xor
mov
hlt
xlat
stos
shrb
add
testb
test
lea
aas
test
and
test
add
push
popa
dec
jp
mov
jbe
insl
pushf
inc
cli
hlt
imul
movsb
fcomps
dec
in
gs
hlt
or
push
and
adcl
push
out
test
sub
xor
mov
clc
ja
fcmovne
fcoml
mov
mov
push
push
and
cs
mul
pop
shrl
pop
iret
or
pop
mov
mov
add
fwait
test
lods
movsb
mov
mov
cmp
sub
xor
push
or
cmp
and
mov
popf
ja
cmp
aaa
mov
movsl
dec
sbb
rorb
pop
decb
es
cli
xor
decb
fsubl
cmp
arpl
dec
sub
out
or
shll
sbbl
jl
lret
push
repnz
leave
daa
adc
xor
and
int
push
jo
push
jb
xchg
cmp
fcoml
lock
or
in
repz
shrl
ja
jb
mov
jns
sub
cmpsl
ret
add
mov
push
sbb
jle
aaa
lock
xlat
loopne
hlt
das
dec
aad
mov
xor
cmp
mov
aaa
in
mov
sub
mov
push
add
repnz
stos
das
into
adc
ret
adc
shrb
test
arpl
les
mov
mov
sub
push
pop
je
adc
cs
gs
inc
sub
jae
xor
cmp
mov
ficompl
mov
mov
lcall
jmp
and
mov
andl
push
arpl
xchg
jae
loop
sub
repz
xchg
outsb
iret
insb
test
js
fisttpll
cld
std
cmpl
cmp
pop
test
outsl
adcl
cmp
and
enter
andb
jbe
cmp
jp
mov
sarl
xchg
xchg
dec
mov
lret
movsb
mov
and
stc
loope
std
xchg
add
aad
in
push
add
int3
jle
xchg
into
mov
insl
mov
aad
pop
mov
mov
lcall
mov
sahf
sahf
insb
outsl
subl
jp
rorb
scas
jns
add
jp
push
inc
cmpb
insl
add
out
xchg
cli
ss
pop
pop
mov
xor
loop
or
push
jno
adc
ds
addb
ret
outsb
lcall
mov
cmp
pop
xor
push
xchg
arpl
movb
add
sub
adc
les
jnp
sub
fdivp
das
push
jle
repz
dec
jmp
add
ljmp
push
or
stos
jne
or
lock
out
arpl
cmp
xor
leave
jp
adc
stos
add
or
hlt
mov
clc
insb
inc
pop
jg
xchg
push
addr16
dec
cmp
adc
aad
push
mov
mov
ret
cmpsb
pop
fs
pop
pushf
aam
xchg
stos
jge
xchg
leave
mov
filds
ret
icebp
jmp
out
cmpl
sub
mov
loop
mov
movsl
lcall
rclb
add
or
pop
pop
push
iret
jecxz
or
xor
add
inc
lods
ret
xor
outsl
arpl
into
scas
sahf
test
sub
test
lret
out
popa
inc
ret
add
bound
punpcklbw
nop
xchg
adc
jbe
jae
ret
rcrb
pusha
mov
aaa
rcl
lock
int
int3
aaa
cmp
stos
cwtl
mov
shrl
pop
inc
mov
dec
fists
xor
adc
test
cmpsl
inc
bnd
imul
inc
and
sahf
ret
and
push
lods
cmp
inc
add
sbb
pop
and
inc
pop
movsl
shll
mov
inc
rolb
and
mov
mov
jecxz
scas
xchg
xor
lods
insb
pushf
mov
jb
imul
loope
inc
lods
sahf
shrb
lcall
aad
adc
mov
sbb
xchg
dec
icebp
or
xor
stc
lds
and
stos
movsb
adc
scas
stc
mov
mov
out
movsb
dec
ljmp
push
mov
scas
pop
int3
shrl
sbb
mov
out
ret
push
scas
test
sbb
sarl
out
xchg
rorb
xchg
pushf
mov
ja
inc
add
adc
mov
xchg
adc
xor
in
outsb
mov
subb
ret
add
mov
xor
jecxz
pop
lds
or
add
popa
mov
lods
jg
into
xchg
inc
test
sbb
pop
mov
inc
push
addl
and
pusha
mov
and
mov
and
cld
pop
push
push
mov
icebp
xor
xchg
hlt
xchg
arpl
lret
in
push
and
stos
push
inc
mov
insl
scas
pushf
dec
jmp
fisttpll
sbb
push
cmp
in
rclb
or
cmpsb
into
nop
or
movsl
je
in
mov
sub
leave
push
ss
or
and
pushf
insl
loopne
movsl
mov
mov
scas
stos
sahf
jl
les
cmc
mov
adc
cmp
mov
je
movsl
mov
jae
hlt
scas
mov
arpl
jmp
test
shrb
push
pop
mov
popa
inc
adc
movsl
mov
repnz
leave
pop
add
push
mov
fwait
sub
inc
mov
adc
and
ja
iret
inc
mov
sarb
push
mov
cmp
lock
enter
push
sahf
stos
ds
cmp
dec
or
lds
pop
andb
sahf
test
outsb
jge
inc
cmpsb
lds
mov
shlb
mov
cmp
bound
cmpsb
mov
cmp
cmp
out
add
mov
xchg
paddsb
in
and
dec
cmpsl
cmp
xchg
lret
imul
mov
xchg
sub
xlat
push
loopne
cmpsl
dec
push
aad
add
fs
mov
dec
imulb
cmp
mov
push
pop
pop
add
xchg
or
add
mov
xchg
push
sub
cmp
push
or
cli
xchg
ss
dec
xor
icebp
loop
push
mov
adc
cld
aaa
into
jmp
xchg
inc
stos
and
mov
sub
or
xchg
jp
mov
daa
sub
movsb
dec
mov
test
inc
lret
lcall
push
or
cmc
or
shr
push
mov
xor
mov
mov
mov
jne
xchg
cmpsl
lcall
movsb
mov
mov
xchg
mov
or
testl
rcrl
mov
jmp
or
addr16
popa
lret
sbbl
sbb
adc
ljmp
in
fwait
pop
xor
test
leave
fidivs
cld
cmpsl
addr16
sub
add
leave
xor
addl
push
mov
lcall
sbb
mov
stos
pop
cli
xchg
push
inc
jge
scas
pushf
cmp
popf
hlt
fildll
mov
mov
xlat
test
sti
or
mov
sub
push
subb
scas
hlt
dec
hlt
test
cmp
loopne
pop
sbb
inc
and
sahf
xchg
adc
add
stos
or
iret
push
xchg
aam
je
xor
lahf
xorl
pop
mov
int3
loope
test
into
add
stos
mov
and
in
add
dec
pop
and
sar
adc
into
das
andl
into
test
jmp
daa
pop
repz
push
decb
jbe
cld
lcall
cmp
push
pop
adcl
sub
inc
and
testl
xor
sub
lret
cwtl
sbb
test
stos
and
sub
push
rep
jl
sbb
sahf
pushf
js
or
and
cmc
cmp
sub
inc
jne
dec
pushf
push
sbb
int
inc
jge
pop
movsb
popa
push
xchg
adc
es
cmp
test
pushf
inc
sbb
in
adc
adc
mov
out
int
iret
inc
xchg
out
or
imul
cmpsl
push
cwtl
stos
cmp
dec
pop
adc
fisttps
xor
pop
mov
jmp
mov
cwtl
mov
push
inc
fidivrl
icebp
mov
insl
inc
mov
loop
nop
or
fimull
int3
jae
call
jns
lcall
enter
and
mov
jg
int
xor
push
sbb
mov
ret
dec
sub
jg
mov
dec
sub
mov
xchg
movsb
aas
push
mov
hlt
xchg
sub
and
movsl
test
cmpsb
xorb
out
loopne
fadd
stos
dec
ret
dec
pusha
dec
ret
cmp
aad
cmp
int
movsb
mov
sub
sbbb
xchg
andl
push
adc
pushf
mov
push
std
add
js
jns
mov
out
xor
into
rcrl
and
xor
jns
ss
mov
ds
lds
hlt
push
or
rcll
pop
xchg
lods
push
icebp
sub
xor
addr16
xor
pop
or
xor
sarl
cmp
fisubl
fisubrl
sbb
aaa
push
leave
jo
push
mov
mov
or
pop
rorl
pop
pop
inc
pop
cmp
cld
pop
out
mov
js
movsb
add
mov
cli
xlat
mov
fisubrs
inc
inc
inc
fs
dec
lods
cmp
xchg
jo
aas
mov
ja
in
or
jae
inc
xor
movsb
ror
xor
xlat
mov
insl
mov
cmp
cmp
ficomps
mov
pop
divb
add
adc
mov
jae
test
push
inc
cmpsl
jp
andl
xor
add
cmp
push
sub
jb
repnz
mov
mov
xor
add
add
daa
xor
movsl
mov
pop
cmp
jg
loop
xchg
or
xchg
dec
pop
xor
and
sbb
scas
stc
ret
test
jae
mov
xchg
sub
loope
and
and
iret
fisubs
ds
sub
arpl
xor
push
lods
jmp
hlt
push
test
mov
das
add
jne
test
mov
in
mov
push
ret
js
mov
cmp
ss
inc
scas
add
xchg
cli
cmp
lcall
sub
push
jns
lods
mov
xchg
repz
scas
xlat
lods
int
pop
inc
pop
dec
aaa
sub
or
mov
andnps
js
rolb
add
out
jb
mov
push
jle
stos
stos
xor
sti
cld
popf
movsl
or
outsb
xchg
adc
aam
and
inc
push
sbb
jo
addr16
stos
or
jp
rcrb
mov
das
rol
movsb
add
xchg
xorb
jne
pop
or
mov
jl
or
push
dec
pop
repnz
adc
out
xor
sbb
mov
cmpsl
and
jecxz
test
pop
mov
sub
mov
or
cld
jmp
pop
push
sub
mov
stos
int
mul
shll
test
mov
sub
cmpsl
enter
cmp
in
inc
mov
mov
pop
test
adc
push
cmc
flds
inc
push
mov
push
stos
lods
ss
sub
pop
ss
bswap
xchg
mov
xchg
test
ds
cli
or
push
lock
xchg
dec
outsl
push
xor
lret
add
jb
mov
mov
lret
jae
dec
ret
test
mov
ljmp
mov
sub
cmc
xor
cmp
repz
aad
arpl
cmpsb
push
mov
mov
mov
shrl
in
leave
xchg
mov
adc
out
xor
pop
mov
dec
lds
cwtl
mov
rcll
xlat
mov
adc
or
movsl
clc
sub
in
mov
das
aam
push
iret
and
or
cmp
mov
or
pop
ret
push
pusha
pop
insl
mov
frstor
push
frstor
iret
mov
dec
xor
mov
lahf
inc
push
push
pop
pop
pop
outsb
neg
cs
push
aam
xlat
jecxz
loopne
cmp
push
and
cmc
xchg
add
ja
je
mov
sub
addr16
pop
inc
mov
pop
nop
mov
dec
fisubs
test
in
repnz
mov
divb
jp
lea
sub
mov
addb
outsb
mov
lea
rcrl
xor
movsb
insl
mov
cld
sbb
xor
leave
divb
stc
pop
movsb
bswap
mov
cmp
mov
inc
pop
mov
idivb
cli
lods
cmp
sub
ficompl
push
xchg
mov
sub
out
inc
cmpl
push
into
sbb
push
adc
push
inc
fwait
mov
and
loope
sbb
pusha
sbb
lret
xor
test
ds
push
leave
test
and
cmc
dec
mov
sbb
movsb
pop
pop
push
std
sahf
dec
imulb
int
outsb
repnz
ljmp
cmp
mov
mov
roll
pop
mov
std
imul
test
inc
jne
push
leave
subb
ret
jmp
pop
jl
loop
imul
lea
jnp
loop
notb
fwait
insb
iret
cmp
dec
gs
mov
loopne
sub
pushf
shlb
outsb
xchg
mov
push
adc
pop
shlb
lcall
sub
mov
mov
jb
cmp
mov
prefetchw
pop
sbb
push
in
mov
mov
or
rorb
jecxz
add
cmp
sahf
jmp
xor
jno
inc
or
shll
jno
loopne
push
adc
mov
aaa
loope
mov
adcl
mov
mov
int3
jns
and
ret
in
into
jle
test
pop
sbb
sub
scas
sahf
pop
mov
scas
mov
loope
jge
cmp
mov
shlb
add
cmp
inc
dec
add
loope
and
and
inc
mov
mov
cmpsb
adc
sbb
decb
stos
mov
dec
insb
mov
push
notb
outsl
nop
icebp
or
and
rcrl
lahf
mov
adc
pusha
out
cmc
and
dec
jo
adc
daa
into
mov
push
mov
ljmp
push
lret
rcll
aam
mov
scas
mov
hlt
xor
mov
shll
and
pop
sahf
xor
shll
or
adc
sub
sub
idivb
dec
mov
mov
and
jp
sbb
inc
call
pop
enter
dec
popf
int
repnz
orb
out
in
mov
sbb
sbb
xchg
sarb
imul
sub
mov
pop
mov
rcll
in
xchg
push
xor
mov
test
jl
xchg
add
sub
push
sub
pop
mov
add
xchg
xor
ljmp
test
iret
sub
cmp
jmp
outsb
lods
or
lcall
shll
aas
test
mov
mov
outsl
adcl
call
ds
push
push
test
inc
add
pusha
xchg
mov
sbb
cmp
adc
push
shll
sub
xor
addr16
shl
aam
leave
mov
jo
sti
xlat
mov
add
sti
aad
fists
xchg
iret
je
add
in
xchg
mov
adc
add
xorl
fidivs
mov
mov
add
add
outsb
add
jmp
jae
add
xor
dec
pop
imul
data16
sub
fisubrs
ret
xchg
jbe
mov
imul
lods
insb
jbe
aad
lret
in
jl
scas
push
rolb
cmpsb
sahf
outsl
orb
je
jl
and
mov
pop
loopne
sbbl
and
lcall
push
mov
in
sub
jns
icebp
mov
xchg
lcall
hlt
in
rcll
and
xor
movsb
adc
fildll
movsb
and
sub
out
sub
sub
xor
or
jo
pop
pop
and
in
in
in
push
mov
mov
mov
lds
pop
sub
aad
xor
sub
sub
xchg
inc
popf
push
xor
outsl
or
jmp
movsl
mov
xchg
fwait
add
jg
inc
ret
pop
inc
or
xchg
mov
pop
stos
pop
inc
mov
or
mov
pop
add
or
daa
cmp
movsb
push
xor
mov
xor
jbe
add
mov
mov
insl
enter
inc
push
and
adc
xchg
xchg
test
or
cli
adc
test
out
int
ja
inc
test
cmp
mov
push
loop
jb
call
mov
jo
mov
shll
loope
imul
adc
faddl
pushf
xor
inc
push
mov
mov
jae
xchg
insl
mov
and
mov
leave
xor
mov
and
andb
mov
xchg
inc
es
aad
out
xor
movsl
ret
mov
mov
in
cmp
xlat
cmpsl
jmp
xor
outsb
push
hlt
adc
mov
adc
insl
and
es
movsb
jmp
lock
inc
cmp
sbb
cmp
jo
add
sub
out
sahf
sub
andb
push
fidivs
or
in
fucom
sub
movsl
jle
test
jmp
mov
cmp
xchg
sbb
push
mov
outsl
or
mov
in
test
cs
gs
stos
shrb
push
sti
outsl
roll
sub
inc
push
pop
les
arpl
in
adc
xor
cli
rcrb
jmp
mov
cmpb
push
xlat
rol
and
xchg
cmp
or
push
shlb
in
test
aad
mull
sub
jns
jne
in
cmp
xchg
out
and
and
pop
and
pop
pop
sbb
push
scas
push
push
insl
dec
xchg
push
test
sub
dec
loope
sbb
pop
aas
inc
push
repnz
xchg
bound
icebp
xchg
das
lahf
cmpsl
insb
xchg
lods
mov
mov
pop
cmpsl
pop
xlat
pop
ljmp
cmp
out
in
push
pop
add
sub
in
scas
inc
popf
push
call
clc
mov
movsb
insl
bound
pop
loopne
sub
sub
cli
jg
and
popa
fsubrs
and
xchg
xchg
sbb
push
sbb
sub
push
stos
scas
sarl
movsb
push
int
pop
jge
loop
sub
imul
sub
cmpsb
sub
xchg
sbb
sub
cmp
cmpsb
outsl
pop
push
jmp
push
imul
sbb
xchg
xlat
out
add
loopne
mov
lods
cmpsb
and
out
cmp
mov
jmp
loop
subl
daa
jmp
not
cs
outsl
cs
outsl
loop
xchg
dec
scas
sub
bound
or
xlat
jmp
in
ljmp
jne
cmp
mov
ds
loop
leave
push
xchg
imull
insl
cmpsb
das
pop
lods
xlat
sub
loopne
adc
daa
popa
mov
mov
adc
cmp
xlat
fs
pusha
aaa
push
sbb
sub
mov
sub
xchg
mov
push
inc
ss
mov
fisubrs
sub
test
and
imull
dec
pusha
mov
ljmp
cmp
test
out
std
push
jmp
push
scas
push
mov
dec
adc
in
sub
mov
movhps
xor
lret
cmp
or
lret
repnz
xor
mov
dec
mov
mov
push
out
jmp
pop
and
incl
mov
pop
cld
mov
data16
jg
and
mov
fcmovne
ljmp
shrl
jne
xchg
xor
popf
cmpsl
clc
movsb
aam
shll
cltd
mov
sbb
or
sub
push
lret
or
push
test
adc
xchg
push
xchg
jo
mov
pop
stc
mov
push
pop
idiv
pusha
adc
mov
xor
aam
pop
xchg
bound
or
icebp
jle
cmp
or
ljmp
mov
ds
rclb
and
cmp
aam
sbb
xchg
addr16
addr16
inc
std
add
stos
xor
or
testb
mov
adc
or
cmp
and
lds
mov
je
inc
int
cmp
mov
push
addr16
frstor
cmpsl
inc
out
and
cmc
dec
or
lea
mov
inc
leave
add
pop
xchg
or
cmpsb
loope
addl
ret
mov
repnz
add
mov
call
out
in
shll
adc
pushf
aas
add
dec
add
fldl
dec
leave
push
ja
push
push
dec
aaa
sbb
lret
mov
ss
je
xchg
inc
icebp
aaa
xchg
lret
mov
ljmp
out
push
jnp
sarb
or
loope
and
xchg
movsl
stos
pushf
push
das
lcall
loop
mov
pop
mov
ss
cli
jp
mov
outsb
movsb
and
sbb
sbb
xchg
push
out
mov
mov
insl
and
push
xor
ljmp
mov
daa
sarb
fsts
mov
cmp
shlb
pop
shl
cmp
pop
pop
ss
dec
dec
cmpsl
adc
mov
subb
das
fisubrl
test
movsb
sbb
xchg
jle
push
jmp
in
imul
les
or
cmp
inc
mov
loope
xor
in
mov
aas
fdivrp
adc
test
mov
and
xchg
andb
xchg
fwait
aad
ss
and
ljmp
jbe
out
or
adc
mov
nop
mov
mov
inc
aaa
and
dec
ja
stos
scas
mov
jp
mov
pop
mov
cmpsb
inc
pop
les
scas
testb
push
les
out
cmp
xchg
mov
sbb
push
sub
les
mov
pop
in
in
mov
pop
stos
mov
arpl
ljmp
out
popa
pusha
mov
in
and
xor
adcl
sbbl
jle
or
mov
scas
sub
fwait
or
xchg
sub
pop
inc
jp
aas
dec
mov
cmp
out
in
inc
jbe
sub
inc
and
jns
call
adc
mov
xor
pop
cwtl
nop
out
mov
bnd
mov
inc
xchg
jmp
jo
or
icebp
outsb
sub
out
and
sub
shll
mov
xchg
mov
pop
mov
rclb
xor
imul
or
cmc
in
fimuls
loope
clc
out
mov
jmp
shl
jl
cmp
enter
dec
xor
ja
adc
adc
imul
fldenv
xchg
stos
sub
mov
rolb
pusha
jae
rolb
sti
shl
or
inc
xor
movsb
add
cmp
mov
insb
mov
enter
stos
movsl
es
push
push
scas
mov
lret
xchg
ffreep
lret
das
enter
pop
imul
lods
push
into
mov
adc
xor
scas
add
lahf
mov
and
je
lcall
pop
lcall
push
inc
push
dec
push
push
stos
mov
sbb
xor
sbb
je
and
mov
or
sbb
pop
cmpsl
push
pop
int
repz
jecxz
js
ss
and
add
stos
or
xchg
jecxz
out
mov
push
lret
scas
icebp
test
aas
and
mov
add
hlt
pop
add
mov
lea
insb
movsl
xor
dec
outsb
inc
xchg
mov
mov
hlt
jb
loopne
sub
xor
xchg
adc
mov
mov
inc
mov
out
shl
test
mov
or
mov
pop
daa
xor
inc
inc
std
cmp
cmp
sbb
sub
xlat
out
shr
arpl
pop
int3
adc
pop
mov
in
es
or
xchg
ds
push
sbb
push
int3
jns
popf
jl
or
mov
pop
mov
xchg
and
popf
xor
sub
and
mov
xlat
mov
loope
imull
fs
lahf
jnp
in
cmp
fucomi
mulb
dec
pop
adc
dec
add
stos
sbb
ds
dec
xchg
int3
inc
dec
and
outsb
movsb
mov
mov
mov
add
dec
inc
adc
xor
xor
adc
lea
cwtl
stos
cmpsb
dec
xchg
mov
fildll
cmc
outsl
aas
fs
ss
jl
cmp
xlat
pop
xor
mov
cmp
mov
popa
xor
xchg
add
cmp
fnstenv
inc
sbb
jle
push
or
sbb
mov
out
addl
mov
sub
out
xor
jecxz
push
insl
dec
cmp
ja
mov
into
inc
lds
sub
push
loop
adc
sub
inc
mov
cs
mov
daa
xchg
sub
lock
cmp
add
add
pop
ret
xchg
sub
push
lcall
mov
sub
push
mov
data16
lock
xchg
pop
adc
ss
into
mov
cmpsl
shl
sub
mov
or
push
mov
imul
aam
jmp
cmp
fwait
insl
iret
push
arpl
jle
jb
xchg
pop
push
push
push
push
pop
push
mov
sar
out
arpl
adc
cmpsl
out
cmp
inc
lock
fisubs
out
xor
and
divb
ds
cmpsb
mov
cltd
mov
pusha
jle
out
sub
jb
outsl
sub
adc
addr16
dec
sbb
pusha
adc
adc
sahf
mov
inc
mov
lea
insb
in
adc
sub
outsl
mov
popf
mov
in
movsb
mov
mov
jbe
loope
push
xor
push
mov
fs
pop
imul
pop
push
inc
push
and
jo
imul
mov
xchg
push
pop
pushf
sahf
ret
fs
inc
divb
mov
or
add
lds
mov
rcrl
xor
xchg
sub
and
pop
repnz
fdivr
push
movsb
stos
mov
or
inc
add
ds
out
lret
pop
stos
fs
movsl
push
and
sub
sub
mov
mov
mov
xchg
mov
rolb
bound
in
lds
jge
xor
int3
neg
in
mov
pop
fs
je
mov
test
mov
cwtl
adc
add
movsl
rclb
sbbb
push
sub
xor
leave
jno
pop
sbb
hlt
mov
lcall
das
push
mov
icebp
pop
decl
and
push
cmp
and
jge
cld
xchg
and
mov
sbb
lret
pop
cmp
sbb
lods
cmpsl
sub
cmpsl
test
mov
sarb
pop
enter
sahf
jmp
scas
dec
decl
shl
jae
inc
aad
test
movb
mov
sti
test
and
sub
and
rcrb
out
sub
sbb
sahf
mov
leave
mov
cmpsl
aad
adc
cwtl
in
ljmp
or
mov
lods
inc
fst
mov
xor
nop
cmp
mov
in
sbb
xor
pop
daa
cmpsb
push
enter
xchg
mov
push
pusha
dec
xor
inc
or
jmp
shrb
sub
jb
mov
pop
repnz
inc
loopne
jmp
pop
mov
aam
mov
ficomps
jnp
imul
cmp
arpl
les
aaa
sub
dec
in
into
xor
adc
lods
push
or
mov
cli
mov
jmp
imul
pop
lret
cmp
jl
xor
sub
jb
mov
push
xor
jle
dec
ljmp
push
cmpsb
xchg
cmc
scas
pop
push
pop
sbb
into
lods
cld
lods
jne
testl
aaa
nop
xor
push
fstpl
dec
insl
stos
push
out
push
mov
fsubrp
mov
movsl
scas
jl
sub
mov
lcall
scas
fwait
das
sub
scas
bnd
mov
mov
lods
sub
test
lret
psubw
cmp
in
and
out
shl
inc
mov
or
scas
mov
pushf
aaa
sub
or
sub
ret
xor
add
lret
lods
cmpsl
mov
xchg
das
movsl
iret
pop
test
scas
xor
xchg
inc
xchg
add
repz
mov
and
aam
pop
test
outsb
lea
mov
dec
cltd
inc
sti
aam
push
ja
outsb
lcall
lea
cwtl
leave
dec
punpcklwd
test
sub
lcall
inc
test
int
ss
mov
xchg
adc
cmp
std
cwtl
push
dec
fmull
jno
movsb
add
cli
icebp
inc
bswap
adc
xor
and
ja
and
and
cmp
adc
lds
push
aad
sbb
in
xchg
loopne
popf
sub
mov
sub
cmpb
int
pop
cmp
or
addr16
iret
jl
lcall
jae
mov
icebp
fbstp
les
add
cmpsb
add
sbb
fldl
mov
and
fisubl
loopne
mov
inc
inc
pop
add
push
cli
ds
sbb
mov
mov
mov
stos
pop
mov
inc
pop
test
test
aad
lret
fadds
and
jbe
sub
add
dec
jae
maxps
mov
out
jno
dec
cs
aad
mov
and
fildll
fcomip
push
mov
jmp
add
cmp
sbb
pop
inc
push
inc
movsb
ret
stos
cmp
cs
in
ret
mov
mov
outsb
sub
push
inc
outsb
std
cmpsb
mov
ja
in
dec
movsb
das
jne
inc
cmp
pop
sub
call
sbb
push
inc
and
mov
mov
int3
jns
repz
mov
sub
mov
pop
cld
inc
add
lods
out
imul
jbe
cmp
sub
das
outsl
push
mov
out
cmpsb
cs
aam
or
daa
jbe
mov
or
mov
xchg
mov
xor
cmp
out
jmp
lahf
insl
insl
ficompl
fisttpll
fs
push
mov
pop
cmp
push
jle
call
inc
sub
mov
enter
mov
sub
mov
pop
repz
dec
scas
push
xchg
push
sub
and
fucom
das
sub
bound
dec
add
stos
sbb
out
cmc
xor
mov
and
leave
popa
and
inc
push
fsub
mov
stc
out
mov
push
mov
in
xchg
pop
mov
cmp
ret
adc
xchg
rcr
push
lds
addr16
sbb
xor
pop
aas
and
push
sbb
popf
push
lods
add
enter
and
push
je
mov
sub
push
xlat
andl
sbb
and
push
mov
mov
or
inc
aad
jg
mov
stos
rcl
imul
adcl
xor
ss
in
testb
mov
leave
cmpsl
inc
dec
xor
mov
pop
cld
mov
in
pusha
add
nop
out
or
sub
stc
negb
cmp
cmp
xchg
and
stc
ret
push
and
jge
add
out
dec
inc
into
sti
sub
jle
cmp
pop
jne
sub
mov
mov
xor
bound
pop
cmp
cwtl
mov
pop
loop
jle
fidivrs
fstps
push
inc
stos
outsb
sub
inc
cmp
mov
xor
or
lret
addb
xchg
fstpt
mov
adc
push
push
lret
mull
aas
or
push
ljmp
stos
jp
enter
or
divb
clc
cltd
inc
cmp
test
cli
mov
sub
jne
ret
pop
je
and
push
mov
inc
add
push
iret
sbb
mov
sbb
js
mov
xor
fsubs
fdivrp
stos
fwait
negb
and
jmp
aad
jmp
sub
add
xchg
aaa
mov
cmp
cmp
out
aas
hlt
sub
mov
mov
inc
mov
sti
loope
ljmp
lods
ret
mov
aad
call
dec
cmp
pop
cs
mov
popf
dec
cltd
adc
add
cmp
out
shlb
jmp
cmpsl
leave
ljmp
mov
fdivrs
ja
pop
ret
jno
xor
mov
inc
cwtl
pop
and
xlat
loopne
sub
sub
cmp
cmp
addl
mov
ss
lock
inc
jmp
xchg
and
xorl
sub
out
test
cmc
push
aam
sahf
adc
xor
xlat
lods
cmpsl
pop
xor
and
insb
movsb
push
sti
jne
decb
int
cmpsb
adc
lods
mov
std
jmp
jl
adc
rcrb
pop
movsl
dec
scas
inc
in
popa
stc
getsec
cltd
xchg
leave
inc
sub
shrb
mov
mov
out
into
idiv
dec
xchg
test
sub
or
sub
mov
mov
fsubrs
or
add
jo
push
xlat
add
mov
sub
mov
sub
mulb
mov
adc
shr
mov
fs
and
lret
sub
sub
jg
enter
mov
xchg
int3
push
and
mov
jo
jb
cwtl
mov
in
xchg
popa
add
sub
test
jecxz
inc
mov
mov
out
push
add
stc
and
mov
fst
test
sbb
cmpsl
push
ljmp
into
xor
rolb
push
movsl
lods
ljmp
andl
mov
inc
adc
daa
sub
push
push
cltd
test
cmpsb
and
stos
mov
lds
stos
mov
jle
cmp
mov
push
incl
jae
xchg
fldl
leave
shl
repz
and
jecxz
sbb
sbb
sub
push
stos
mov
inc
mov
in
mov
mov
pop
mov
cld
and
lret
cltd
fdivs
loopne
jb
adc
or
in
stos
sub
loope
cli
outsl
stos
or
aam
xor
jmp
dec
and
jae
push
mov
push
sub
xchg
mov
das
lret
cmc
sbb
outsl
sahf
icebp
insl
lods
push
mov
pop
sub
in
adc
mov
dec
lahf
adc
mov
ret
add
jb
jge
jle
sub
xor
dec
jno
jle
cmp
lock
sbb
shl
jmp
lret
mov
insb
xchg
mov
int3
xor
stos
pop
scas
and
cwtl
push
loope
and
call
mov
xchg
sbbl
pop
dec
inc
mov
rclb
mov
enter
cmp
add
cs
movsl
icebp
cmp
hlt
mov
ds
movsb
movsb
lods
and
nop
mov
mov
test
stos
jge
repz
adcl
jg
mov
std
xchg
hlt
leave
scas
mov
xchg
les
bound
fidivl
lock
or
sub
inc
insb
push
out
push
sub
test
icebp
pop
and
scas
adc
pop
sub
stos
push
fadd
pop
jo
mov
mov
push
mov
aas
shr
sub
shl
scas
mov
loopne
outsl
mov
mov
inc
hlt
dec
sub
or
pop
pop
daa
xchg
repz
ds
imul
pop
insb
insb
jle
sub
dec
sbb
mov
ret
mov
stos
push
push
lods
cmp
lds
xor
sub
mov
lds
in
mov
mov
stos
shll
insb
mov
movsl
inc
xchg
ja
adc
into
movsb
cld
lcall
adc
loope
addr16
mov
adc
imul
add
loopne
and
sbb
xchg
lods
loop
testb
or
daa
loopne
or
repnz
pop
jge
ds
pop
or
and
mov
leave
jecxz
int
sbb
sub
xor
pop
xchg
enter
xchg
in
ja
popa
push
push
loopne
into
fisubl
imul
jo
aas
mov
ret
jl
mov
push
sbb
jbe
lds
mov
les
and
sub
test
adc
adc
sub
cs
push
lcall
clc
pop
fistpl
shr
bound
pushf
jmp
mov
sahf
jle
sub
adc
sub
sub
fmuls
dec
pop
xchg
fiaddl
inc
sbbl
inc
mov
inc
mov
pop
or
fwait
mov
pop
mov
xchg
inc
movsl
push
lock
and
push
mov
sahf
iret
jp
inc
push
mov
jno
insl
stc
mov
add
outsl
add
test
incl
fs
int
ja
xchg
ss
movsb
jp
lock
push
das
pop
scas
mov
js
mov
inc
arpl
pop
xchg
lahf
test
out
movsb
pop
dec
sub
movl
in
mov
cmp
xchg
stc
scas
inc
ficompl
push
call
addr16
mov
cs
push
xor
pop
addr16
pop
inc
push
inc
test
test
hlt
mov
mov
mov
fidivrl
add
mov
les
sub
stos
sub
mov
pusha
int3
xchg
addr16
movsl
jecxz
imul
pop
pop
movsl
std
pusha
push
rclb
imul
aaa
movsb
out
pop
xor
test
lock
inc
and
pop
rorl
dec
int
xchg
dec
mov
jmp
divb
iret
mov
ret
or
in
push
pop
cmc
mov
jns
xor
mov
les
icebp
dec
pop
ret
movsl
shll
pushf
mov
add
hlt
xor
aad
push
js
sbb
popa
mov
cli
nop
jecxz
add
inc
imul
lcall
mov
rolb
mov
pop
loope
xchg
inc
bound
subb
ficoml
mov
ja
rcrb
rcll
iret
out
pop
pop
sbb
stos
fstps
rolb
lock
lds
cmp
xor
lret
xchg
das
dec
and
or
loop
sub
testl
push
fsubl
movsl
and
aaa
xchg
sub
popf
scas
into
es
test
lods
out
push
pushf
scas
adcb
push
ret
divl
pop
aam
pop
out
int
jge
sbb
ret
mov
inc
insl
pop
pop
and
jle
push
dec
loop
fcoms
inc
xor
ret
rclb
ret
hlt
jb
movsl
add
xchg
inc
xchg
sub
push
mov
fisubs
and
push
ljmp
xlat
fnstcw
lods
fimull
cmp
jle
and
into
mov
cmp
movsl
jbe
loop
cltd
pop
dec
nop
push
sub
jg
into
loopne
cwtl
mov
push
mov
ss
arpl
and
or
dec
jo
adc
pop
mov
imul
pop
push
cmp
das
pusha
divb
push
mov
mov
cmp
aad
mov
cmp
pop
in
fcomip
inc
add
inc
into
repz
sbb
inc
mov
ret
xlat
stc
cmpsl
push
rcrb
cltd
sbb
xor
imulb
ret
sti
mov
jns
nop
movb
aas
jp
mov
mov
mov
sub
xchg
int3
iret
mov
inc
jo,pt
fwait
xchg
outsl
mov
push
das
dec
pop
aaa
dec
jl
cmpsb
scas
fnstcw
jno
xor
push
je
idiv
mov
and
xchg
xchg
loopne
jp
int
add
push
mov
sub
les
pusha
aad
das
nop
xor
js
add
pop
inc
out
dec
mov
sub
mov
cmc
repz
dec
aam
int3
jns
pop
xor
or
imulb
or
call
roll
xchg
mov
add
add
call
mov
pusha
test
and
mov
das
mov
add
imul
adc
leave
add
das
int
negb
xchg
dec
movsl
push
pop
aam
les
mov
lods
shl
cmp
repz
add
enter
pushf
loope
pop
add
jno
jb
scas
jp
dec
mov
mov
in
xlat
adcb
insb
loopne
mov
repnz
ror
mov
in
jg
inc
push
scas
out
jno
xchg
loope
dec
add
lret
mov
pop
adc
add
rcrl
xor
outsl
xor
shrl
stos
inc
imul
das
cmp
iret
out
cmp
inc
jge
roll
and
jb
push
cmp
out
data16
rol
or
sub
and
stos
mov
inc
mov
jne
inc
fidivrl
xor
fimull
arpl
adc
int
and
mov
dec
xor
jmp
nop
aam
fidivrl
call
push
mov
cmp
and
sub
inc
test
mov
xchg
lret
outsb
or
ret
mov
or
cs
rcll
fildll
sub
fwait
in
loop
outsl
sbb
fcmovb
push
mov
lahf
xchg
mov
lret
pop
sbb
pop
mov
scas
add
cltd
hlt
mov
es
adc
sub
pop
mov
lock
ret
mov
shr
or
fbstp
daa
out
cmpsl
imul
sbb
out
inc
int
and
rcrb
negb
adc
imul
mov
inc
leave
lods
jmp
test
ret
in
xor
insb
notl
testb
ret
in
in
mov
or
mov
jns
scas
std
mov
mov
lods
mov
je
lcall
int
xchg
je
dec
or
cs
mov
pop
adc
or
push
jmp
dec
mov
and
push
jno
fstps
repz
sub
pop
dec
ja
or
mov
xlat
cmpsb
cli
mov
sub
dec
push
movsb
dec
pushf
mov
mov
mov
dec
cmpl
cmpsl
and
mov
dec
mov
push
outsb
lahf
ret
add
mov
mov
and
or
test
popa
in
loop
sbbl
xchg
leave
jo
adc
adc
sbb
pusha
adc
sti
xchg
sbb
mov
cld
push
adc
int
add
inc
dec
pop
ss
iret
cmpsl
testl
aas
fldenv
jp
mov
test
arpl
push
movsl
ja
ljmp
dec
inc
inc
sub
inc
pop
mov
ss
stc
fstpl
insb
xchg
add
ljmp
loope
push
pop
movsl
clc
mov
cld
inc
push
je
pop
lcall
mov
and
mov
push
xor
movsl
mov
cwtl
movsb
or
std
mov
cmp
dec
enter
les
pop
rclb
fs
jnp
mov
sbb
test
out
push
add
popa
dec
hlt
pop
sti
push
push
inc
sub
fisubl
cmp
mov
ror
inc
xchg
lcall
push
jae
cmp
outsb
cltd
jge
stos
xor
mov
jne
icebp
inc
xchg
jl
aam
mov
into
sbb
mov
or
mov
loop
pop
arpl
jo
cmp
std
test
inc
stos
xchg
mov
push
and
stos
movsl
dec
xor
sbb
push
jle
adc
test
outsl
leave
pop
mov
push
cmp
inc
fs
icebp
cmpsl
sahf
adcb
insl
stos
inc
xchg
addr16
jae
in
inc
mov
sub
jb
int
mov
mov
out
jmp
mov
and
test
mov
mov
cli
inc
push
mov
jns
lods
mov
mov
pop
hlt
adc
xchg
add
subb
jle
push
sub
bnd
mov
cmp
xchg
ret
rorb
inc
out
test
sub
push
movsl
push
mov
ror
repz
nop
sarb
dec
fisubs
dec
mov
xchg
sub
std
test
iret
test
ror
popf
arpl
jg
insl
or
fsubrs
xor
enter
pop
inc
test
in
xor
dec
mov
ss
jle
dec
push
mov
dec
std
jl
pop
push
push
hlt
cmp
popa
inc
pop
shll
lods
jle
push
shrl
xchg
sbb
cwtl
mov
inc
movsb
sub
cli
movsb
push
shlb
popf
mov
and
imul
rclb
mov
nop
cli
jo
pop
clc
xchg
xchg
aad
out
movsl
hlt
mov
hlt
lret
mov
pop
mov
loop
out
add
cwtl
jg
lods
jns
lods
stc
pop
add
pop
aad
or
cmp
lahf
jnp
ficomps
jo
out
push
cmpsb
rolb
sbb
stos
xor
mov
add
in
in
and
daa
or
pop
lret
xchg
mov
addr16
jmp
push
lods
mov
or
pop
push
mov
sarb
mov
add
inc
sub
xor
rolb
sbb
fs
sar
in
dec
sahf
and
sub
pop
outsb
inc
cmp
dec
xor
fisubs
and
xchg
sub
inc
mov
cmc
les
cli
cmp
xchg
mov
xchg
dec
out
lahf
popa
iret
pop
idiv
or
sbb
leave
mov
mov
rdtsc
add
out
sub
sub
mov
xchg
pop
push
and
mov
adc
addr16
push
mov
cli
adc
xchg
and
sbb
sub
jl
adc
pop
lcall
cld
add
xchg
fcomps
push
stos
push
pop
xchg
incb
mov
mov
mov
mov
call
pop
inc
pop
bound
mov
xchg
incl
lcall
pop
daa
sbb
or
mov
add
cld
je
stos
jge
lds
sub
mov
mov
push
test
inc
leave
cli
mov
jge
adc
adc
xor
jbe
mov
add
push
push
lock
adc
mov
or
ljmp
mov
dec
pop
enter
jne
fsubp
xchg
sub
cmpsb
pop
insl
arpl
xchg
add
mov
inc
sbb
scas
dec
add
lea
or
aaa
jg
pop
mov
into
cmpsl
xor
das
pop
ljmp
or
inc
lds
and
mov
or
in
mov
sub
jp
jmp
movsl
add
jne
loop
mov
dec
ret
mov
leave
jo
hlt
adc
mov
jg
cmp
sub
or
pop
cwtl
loope
cli
imul
mov
mov
sub
iret
cli
sub
fimull
xor
shrl
cli
add
mov
xchg
add
idivl
pop
inc
or
push
aad
mov
cli
enter
mov
lret
rol
xor
mov
aad
push
adc
jo
mov
mov
fnstenv
mov
or
mov
sbbb
enter
mov
out
aad
jne
addb
mov
outsb
sub
pop
call
sbb
dec
jl
movsl
xchg
push
iret
push
into
test
loop
dec
add
pop
cs
xlat
sub
xor
cs
insb
fmull
rcl
sbb
inc
dec
lcall
cmc
mov
ljmp
mov
pushl
ljmp
in
mov
cmc
mov
mov
xchg
push
lret
sub
xor
daa
pop
in
push
sti
aad
xor
adc
insb
mov
inc
pop
lret
lret
outsb
adc
std
jle
mov
daa
pop
repz
call
cs
xor
sub
mov
mov
pushf
jg
pop
xchg
mov
loop
pop
or
loop
cmp
push
xchg
dec
mov
jbe
mov
es
push
repnz
imul
add
arpl
jne
lock
cmp
jnp
cmp
mov
mov
push
scas
adc
mov
aaa
push
lcall
aaa
mov
mov
sub
push
push
fwait
xor
insb
test
stos
cmp
cmpsb
xchg
ret
adc
leave
das
stos
mov
inc
std
mov
push
mov
or
dec
cs
xchg
pop
mov
adc
test
int3
xchg
mov
jge
sub
lea
lcall
arpl
lea
fisubl
push
pop
sub
stos
inc
jp
add
cmp
js
insl
mov
jle
and
sbb
addr16
in
fcmovnu
mov
std
js
and
add
nop
ja
add
or
jmp
cmp
and
mov
scas
and
outsb
call
les
pop
jmp
push
call
mov
rcrb
ljmp
jae
aad
jno
pop
call
and
les
ret
mov
test
repz
lods
int3
addr16
in
sbb
mov
pop
je
in
sbb
dec
stos
cs
add
inc
inc
jp
cmpsb
pop
test
in
add
jbe
imul
orl
push
mov
xchg
mov
jl
int3
stos
sub
or
dec
mov
cld
dec
push
repnz
loope
mov
push
jge
push
in
ret
insb
mov
sub
leave
jne
xchg
jl
inc
neg
outsl
xchg
adc
add
in
popa
lods
jbe
stos
es
dec
inc
std
sbb
cmp
and
scas
inc
int
repnz
call
test
pop
mov
cmp
pop
sarb
push
popa
out
mov
jl
lock
cld
movsb
outsl
out
bound
xchg
lds
add
std
daa
pop
xchg
jbe
cmp
cmp
ficoms
push
test
scas
cmpsl
sub
mov
jbe
cmpb
adc
cld
in
das
insl
mov
pop
fisubs
std
and
lret
inc
dec
xchg
xor
pushf
jecxz
dec
rclb
jne
test
inc
add
ja
jns
cmc
insb
mov
push
push
pop
xchg
ja
jb
js
mov
rolb
add
or
fwait
mov
sbb
dec
insl
loop
add
jmp
mov
roll
lods
cli
loope
nop
das
clc
push
push
adc
ret
jno
je
js
mov
outsl
mov
cmp
cld
jne
ljmp
sbb
push
sbb
and
xchg
sbb
notl
notb
pusha
push
add
dec
movsl
jb
mov
xchg
leave
fwait
les
cmp
mov
mov
subl
popa
imul
or
xchg
test
or
in
xchg
fcmovb
mov
inc
and
add
mov
stos
rorl
adc
xchg
aaa
jle
sbb
push
mov
popf
adcb
pop
loopne
mov
out
jp
ja
push
aas
out
icebp
nop
jge
fldcw
or
je
aad
repz
cmp
mov
addr16
lahf
jle
ds
orl
or
mov
sbb
test
ljmp
scas
pop
cmc
jle
pop
imul
into
jg
stc
ret
call
inc
mov
push
stos
add
mov
xor
xchg
jl
xchg
popf
sub
test
dec
and
pushf
gs
jo
rclb
inc
ucomiss
inc
mov
dec
lock
out
loope
pop
outsl
aad
fcmovnbe
sbbl
daa
ljmp
and
iret
lods
sub
out
cmpsb
inc
fs
and
push
movsl
adc
push
lds
lea
test
cmp
ljmp
dec
push
sub
outsl
lret
out
jae
std
lods
push
daa
push
scas
ljmp
ficoms
xchg
or
xchg
in
into
push
push
lods
out
icebp
xchg
test
dec
xchg
das
jne
test
out
jmp
cs
push
aaa
sar
cs
into
ret
xchg
and
mov
sbb
leave
sub
stos
add
aam
sub
loope
mov
xchg
addr16
fstl
es
sub
sub
outsl
xchg
jecxz
scas
outsb
cli
and
insb
in
outsb
int
lods
lods
lods
and
aas
sub
jmp
mov
jmp
ret
jns
movsl
xchg
jmp
ljmp
cmpsl
mov
cmpsl
cs
xchg
mov
das
inc
fs
aad
xor
call
jecxz
sub
insl
sti
adc
and
jecxz
popa
push
xchg
scas
jg
xchg
out
xchg
out
popa
mov
cmp
mov
jmp
cmpsb
out
jns
aas
mov
xlat
out
stos
dec
and
in
rcr
pop
and
sub
lds
xor
test
sub
into
mov
scas
in
sub
arpl
loope
cmp
movsl
imul
loope
and
movsb
ss
jmp
ss
cmp
daa
outsl
mov
in
out
mov
stc
and
iret
lods
enter
fcoms
sub
xchg
and
jecxz
cmp
mov
xchg
pop
outsl
arpl
scas
push
into
adc
sbb
movsb
mov
push
cmp
sub
xor
pop
xor
mov
xchg
loopne
cmp
pop
daa
adc
pop
int
in
jmp
pop
movsb
mov
mov
push
insb
xchg
iret
dec
adc
push
into
dec
sub
stos
aas
pop
cld
test
xor
sub
sbb
dec
mov
popa
imul
mov
mov
movhps
push
addr16
in
adc
mov
je
mov
scas
mov
inc
pushf
les
lcall
mov
lahf
or
mov
jno
push
mov
fwait
test
jo
lods
negl
test
mov
ljmp
jle
dec
fdivs
jb
mov
aad
dec
data16
sbb
sub
adc
rorl
pop
iret
sub
mov
xchg
and
notb
test
adc
cmc
hlt
stos
jns
adc
mov
sbbb
inc
mov
sub
scas
cmp
xor
repnz
test
dec
mov
clc
mov
ljmp
ret
stos
lods
icebp
jle
jecxz
daa
push
jo
mov
mov
hlt
rcrl
jmp
fs
mov
adc
pop
and
xchg
inc
inc
jl
pop
addl
and
rolb
inc
fsubrl
jle
in
mov
cmc
mov
or
adc
bound
mov
xor
repnz
insb
add
lods
push
punpcklwd
mov
fdivp
inc
aas
lods
enter
mov
sbb
push
leave
xchg
movsb
inc
sar
mov
lods
xchg
repnz
out
add
mov
test
xor
es
pop
and
sub
shlb
repz
mov
dec
mov
add
sbb
add
push
push
mov
xchg
jecxz
pusha
arpl
mov
pusha
mov
xorb
add
lods
xor
addr16
xor
mov
lock
std
mov
mov
jb
or
aaa
aad
cmp
lcall
dec
lret
test
push
mov
dec
sub
pop
inc
mov
push
pop
fbld
mov
jae
xchg
out
mov
xchg
mov
mov
in
xchg
in
enter
adc
mov
xchg
sbb
les
xor
movsb
cld
sti
xlat
push
cmp
testl
cs
jg
jnp
inc
inc
jl
daa
aas
mov
mov
jecxz
lods
movsb
stos
push
mov
xchg
insb
inc
sub
scas
cmp
mov
sub
cmp
lret
fsubrs
mov
sbb
mov
sub
pop
fucom
pop
rorl
ss
jns
lret
clc
lret
push
lods
and
popf
into
pop
jl
pusha
xchg
imul
lock
adc
ret
pop
movsb
mov
mov
adc
cmp
and
aas
adc
xchg
test
dec
pusha
stos
rclb
sub
mov
sti
push
pop
daa
jno
push
in
xchg
arpl
lret
aas
in
mov
add
mov
push
pushf
inc
jne
jbe
add
in
stos
add
sub
push
adc
sub
int
dec
xorb
test
mov
repnz
daa
jmp
jne
insl
gs
xchg
pop
push
cmpsb
and
pop
aad
add
arpl
jo
into
or
ret
out
xor
mov
jge
xor
in
add
shrl
sbb
mov
sbb
stos
cli
mov
sbb
add
int3
into
pop
mov
cmp
pop
pop
xor
sub
leave
in
add
mov
outsb
inc
scas
test
push
nop
mov
xchg
pop
sub
dec
lahf
pop
ljmp
push
cmpsl
loop
repz
mov
movsl
sbb
sub
in
sti
cmp
testb
mov
mov
add
mull
sub
fs
aad
test
lret
dec
lods
je
inc
pusha
add
xchg
xorb
sbb
dec
jg
fisubl
outsb
push
pop
push
adcl
sub
xchg
xchg
mov
popa
jne
cmp
hlt
in
sbb
sub
push
ljmp
add
mov
mov
push
pop
jo
bound
inc
negb
aaa
sar
outsl
int3
test
xchg
push
fwait
sub
stos
pop
pop
push
pushf
mov
daa
and
pop
pop
imul
push
cmp
sbb
rolb
jle
cmp
add
add
ret
mov
scas
mov
movsl
mov
xchg
xchg
dec
push
shlb
roll
subb
mov
fwait
push
daa
testb
inc
das
xor
das
adc
ja
sti
push
pop
addr16
xor
icebp
cmc
movsb
mov
fldt
ss
loop
mov
mulb
add
scas
loope
xchg
fucomi
ret
and
mov
sub
sub
pop
into
sub
ret
pop
in
mov
hlt
stos
sub
fcomps
push
mov
cmp
add
cmpsl
fisubrl
in
or
xchg
movsb
lcall
xchg
hlt
iret
sbbb
xchg
pop
or
gs
cmp
pop
imul
jge
sbb
cmp
cltd
mov
mov
lret
test
stos
iret
icebp
push
add
in
inc
jbe
jae
add
stos
pop
data16
outsb
and
jle
pop
gs
add
lds
ror
ss
cmp
jg
adc
dec
jge
andb
mov
mov
mov
xchg
jns
movsb
cmp
ds
aaa
addr16
test
testb
ja
push
pop
popa
inc
lea
icebp
inc
push
mov
xchg
rcrb
sub
sub
push
cs
cmp
int
dec
push
and
sbb
and
or
xchg
pusha
pop
jg
jle
gs
xchg
adc
test
xchg
xor
movsl
imul
or
test
and
int
idivb
test
or
sub
js
ja
aad
stos
xchg
or
loopne
sub
jmp
cli
iret
add
fstpl
pop
enter
sbb
dec
adc
rclb
push
es
xchg
xor
into
push
mov
cmpsb
xor
es
pop
sarb
jno
mov
xchg
jae
push
mov
dec
jp
mov
xlat
stc
pop
xor
das
push
jb
or
cwtl
push
test
call
nop
cmc
test
pop
popf
arpl
cld
xor
andl
test
mov
sahf
ror
stc
dec
sub
mov
loop
filds
nop
sub
shl
add
dec
stos
inc
test
cmp
cli
sahf
push
jae
cmpsb
arpl
xor
xor
mov
das
fs
adc
clc
mov
fbstp
insb
jle
fwait
lahf
push
xchg
test
leave
ja
inc
push
fwait
les
outsb
hlt
jnp
leave
filds
ss
sub
cmpsb
andl
jl
inc
ret
jae
dec
rorb
stc
hlt
in
dec
movsl
repz
cwtl
fisubs
mov
lods
stos
mulb
adc
sbb
mov
dec
int
adc
mov
inc
xchg
cmpsl
icebp
jb
js
shrb
push
and
enter
test
ss
enter
je
movsl
cmp
outsb
pushf
int3
add
mov
add
dec
jmp
pop
repz
adc
inc
scas
dec
sub
mov
mov
sub
push
negb
and
pop
push
mov
mov
jmp
push
pop
insb
xor
mov
cmp
loop
pusha
cmp
aas
mov
rorb
mov
scas
pushl
xlat
cmc
fstps
jns
mov
add
push
rclb
stos
inc
aas
mov
cmp
pop
jmp
ret
movsl
in
cmpsb
adc
shlb
stos
iret
fdivp
and
popf
mov
pop
mov
imul
xchg
pop
sub
mov
adcb
pop
pusha
test
add
mov
push
mov
xor
mov
add
push
jae
ss
jp
add
mov
jp
rcrw
insb
inc
or
sbb
push
imull
or
dec
fs
movsl
lret
fldt
lahf
lret
dec
push
dec
adc
cmp
mov
je
mov
sub
push
test
mov
sub
sub
sub
inc
in
pop
lods
shl
add
hlt
mov
lds
bound
dec
dec
push
adc
outsb
ret
lods
lahf
sub
xchg
add
inc
aaa
insl
pop
push
movsb
outsl
ret
in
outsb
hlt
sbb
jp
and
nopl
stos
jl
ftst
mov
sahf
xor
sub
xor
push
fxch
xor
adc
pop
scas
fs
mov
mov
inc
scas
jcxz
cmpsb
pop
pop
std
sub
out
rolb
ljmp
jb
xor
push
loopne
sbb
xorb
jp
and
mov
pop
push
bound
mov
pop
xchg
into
imul
dec
sbb
push
mov
xchg
movsl
and
testl
movsl
push
loope
jg
adc
fs
mov
pusha
sahf
sarl
je
inc
pop
bnd
sub
sub
je
and
mov
pop
mov
xchg
jae
pop
jmp
inc
fadds
add
sbb
in
push
xlat
cs
mov
mov
stos
repnz
push
cmp
add
ja
push
sbb
cs
test
sbb
jge
fs
fisubl
mov
arpl
daa
ret
icebp
xchg
and
lahf
adc
pop
mov
scas
das
js
or
sub
or
movsl
imul
icebp
in
in
xchg
outsb
push
data16
xchg
pop
repnz
and
decb
mov
subb
in
add
mov
push
rorb
mov
lret
sbb
dec
popa
int
shl
mov
test
daa
lods
js,pt
mov
sar
lahf
xchg
popa
clc
xbegin
dec
jmp
fs
fiaddl
pop
call
clc
mov
mov
inc
movsl
jp
int
aad
clc
scas
push
cmp
jp
ss
outsb
jl
xor
jno
push
in
mov
xchg
add
and
stos
mov
pop
dec
sub
test
pop
sub
sub
add
and
ja
mov
push
mov
int
decb
push
test
in
clc
rorb
nop
hlt
xchg
icebp
cmp
mov
mov
sbb
xchg
jbe
inc
xor
cld
loope
out
les
aaa
cmpl
dec
or
push
imul
jb
xor
icebp
test
test
and
shl
adc
repnz
adc
in
xor
dec
imul
icebp
cmpsb
and
adc
ficompl
mov
push
repz
mov
movsb
aad
mov
and
jp
movsb
push
sahf
mov
pop
jbe
cmp
repz
mov
in
les
and
std
sub
in
jae
xchg
jb
cld
pop
ja
fs
cli
pop
or
jecxz
inc
or
ss
mov
dec
xor
rcrl
iret
dec
lods
addr16
ljmp
cmp
notb
and
fs
sbb
daa
mov
mov
in
mov
aad
push
pop
mov
pop
lcall
cmp
lahf
test
cmc
and
or
jl
adc
imull
ds
push
add
stos
lret
xor
test
pop
xchg
cmc
test
mov
jo
stc
push
loope
pop
cmp
aas
jecxz
xchg
push
mov
mov
jmp
xor
or
call
push
xor
xor
dec
inc
add
add
push
mov
push
das
and
inc
push
push
sub
rcll
and
daa
shrl
pop
cmpsb
and
rol
test
xchg
rcll
jg
sub
cli
xchg
sub
stos
and
sub
mov
mov
push
das
jp
push
sub
mov
push
das
or
sub
pop
cmp
pop
and
and
scas
and
das
push
std
push
sub
add
scas
push
lods
in
aaa
data16
pminsw
imul
in
out
push
pop
lcall
cs
shrl
cmpsl
scas
out
push
sar
xchg
and
scas
sub
cli
push
jmp
scas
insb
sub
cli
out
adc
sub
fstpt
scas
push
push
hlt
xlat
sub
insl
sub
mov
ds
cmp
jmp
add
test
and
inc
stos
stos
mov
out
jbe
outsb
adc
mov
stc
cmpsb
ljmp
mov
and
mov
sub
jmp
imulb
mov
dec
ljmp
leave
mov
sub
out
stc
xchg
scas
sub
bound
mov
mov
mov
loop,pt
loopne
mov
out
test
outsb
stos
imul
jecxz
jg
pop
jne
mov
and
das
shll
iret
cmp
das
arpl
movsb
inc
daa
mov
mov
and
push
dec
in
mov
xlat
iret
push
xor
cs
call
loop
mov
stc
mov
push
jno
push
fisubrl
in
cli
loope
into
in
loopne
movsb
lcall
fwait
cmp
sbb
mov
fldcw
fincstp
and
mov
out
jmp
and
mov
cmp
jns
out
clc
push
cmpsl
mov
cmp
insb
stc
mov
fldcw
fistpll
fs
das
clc
test
sub
dec
sub
daa
addr16
xchg
cltd
cmpsl
stos
scas
iret
push
xor
push
stc
mov
sub
sub
xlat
pop
out
push
mov
jmp
jmp
scas
mov
add
mov
roll
frstor
xchg
arpl
aaa
shr
stos
adc
outsb
sub
addl
and
adc
mov
scas
mov
xor
mov
insb
xchg
sub
jge
test
movsb
aaa
pop
xor
xor
mov
clc
test
sahf
std
jno
add
and
or
sub
xchg
xor
jg
shrl
cmp
orl
push
pop
xchg
shll
inc
sub
ljmp
stos
inc
in
xchg
add
push
mov
sub
mov
scas
or
rolb
and
stc
data16
ds
inc
in
fbld
stos
or
lods
dec
lock
add
cld
inc
hlt
sbb
push
cmpb
cmp
push
es
les
dec
and
mov
push
loop
xchg
data16
add
nop
or
test
mov
movsb
ljmp
outsb
push
or
sahf
add
mov
clc
sarb
mov
lret
jne
cmp
push
sbb
sbb
lock
and
or
pusha
jmp
cmp
sub
loop
mov
es
jl
loopne
in
mov
int3
jg
sub
in
pop
inc
je
pop
and
out
adc
sub
int
pop
pop
lods
or
lds
fisubrl
push
jge
movsb
push
mov
push
fs
push
add
dec
outsb
repz
out
loop
pusha
lods
sti
cmc
icebp
and
push
movsl
push
pop
sub
notb
xchg
sahf
das
push
jle
jge
aad
nop
dec
ds
push
out
cmc
xlat
rorl
jns
imul
add
es
inc
jno
push
mov
sbb
lret
int
inc
daa
cli
and
test
add
xor
mov
cwtl
adcb
push
mov
fdivr
cmp
push
or
out
and
push
mov
scas
movl
stos
adc
dec
cmpsl
adc
scas
lretw
and
testl
push
mov
dec
push
adc
std
mov
mov
adcw
or
cmp
je
cmp
lock
lock
insl
int3
xchg
pop
or
mov
in
and
fisttpll
movsb
leave
adcl
rcll
or
aam
mov
inc
inc
pop
adc
mov
adc
insl
xor
insl
mov
cmp
push
mov
mov
jecxz
leave
movsl
mov
inc
shld
xchg
fldcw
es
sub
popa
pop
sbb
jl
fwait
pop
and
lcall
or
movsl
mov
mov
ret
xchg
filds
xchg
push
or
aaa
adc
xlat
ljmp
std
cmpb
dec
in
lret
adc
cmp
aas
sub
out
pop
sbb
sti
mov
mov
in
inc
jne
outsb
add
mov
sub
jne
mov
mov
adc
aaa
mov
xchg
mov
inc
stos
loopne
xchg
outsb
hlt
mov
out
push
arpl
pop
std
inc
ss
and
mov
lds
jle
adc
popf
inc
in
call
inc
mov
ret
sbb
jne
inc
push
lock
out
inc
and
aad
xchg
test
cmp
in
and
mov
xor
cli
icebp
pop
push
sbb
cmpsl
js
push
xchg
js
dec
repz
movsb
push
adc
loope
lret
adc
cld
mov
mov
push
mov
shll
add
add
loop
jae
shll
imul
xchg
cmp
pop
dec
je
out
jmp
orb
lock
xor
mov
shll
insl
adc
imul
mov
ja
jg
sub
fnstsw
inc
dec
pop
and
xchg
xchg
mov
in
es
add
stos
sub
sbbb
sbb
outsl
ss
lods
popa
sahf
dec
adc
cmp
scas
inc
xchg
das
movsl
adc
lret
xor
or
aam
in
inc
sub
hlt
movsb
cmp
stos
and
mov
cli
mov
mov
and
cmpsl
inc
mov
sub
and
test
and
lock
sbb
in
mov
rolb
cmp
cmc
xlat
dec
and
jecxz
dec
jnp
popa
daa
mov
mov
xchg
testb
ja
jmp
xchg
push
push
xchg
xchg
loope
ljmp
sub
call
movhps
call
sub
bound
js
pop
mov
cmpsl
movsb
ds
xchg
mov
ljmp
cmp
test
int3
cmp
imul
lds
jg
in
repnz
sub
add
stos
xor
and
xchg
in
test
test
ret
in
test
sub
test
and
out
stc
and
in
cmp
clc
dec
xchg
and
and
icebp
ljmp
movsl
imul
imul
cmpsb
in
test
pop
jmp
add
mov
scas
push
xchg
dec
sub
insl
push
mov
outsl
lods
xchg
xor
or
xchg
sbb
rcrb
sub
popa
cmp
stc
cmpsb
aad
out
out
es
cs
out
jmp
loop
in
aas
mov
daa
push
cmpsl
call
xor
xchg
out
and
inc
fs
jmp
xchg
dec
mov
sub
jmp
sub
stos
notl
sub
lret
xor
dec
pop
out
out
sub
inc
pop
xor
xor
sub
xlat
out
imul
push
imul
repnz
aad
imul
call
dec
das
ss
mov
bound
jecxz
mov
cs
mov
xlat
cmp
cmpsb
fs
mov
xlat
push
es
and
and
and
call
imul
imul
out
out
cs
stos
test
fs
jmp
in
imul
int3
notl
aad
dec
popl
cli
data16
sbbl
inc
cmpsl
push
js
mov
daa
pop
mov
pop
dec
xchg
cltd
xchg
mov
lret
cltd
repnz
and
sub
mov
stos
out
adcb
insb
push
mov
shlb
ljmp
push
imul
stos
pop
sub
xor
mov
pop
test
mov
stos
sbb
mov
mov
cmp
jle
in
jbe
jae
rcr
add
loopne
add
pop
ja
mov
cli
sahf
in
cmp
test
lds
es
lcall
add
call
call
aad
mov
pop
insl
cmp
test
in
sbb
ss
lcall
cmp
cs
mov
lcall
push
fidivl
repnz
popa
sub
mov
outsb
lret
lret
popa
push
push
addr16
into
add
cwtl
sub
or
ss
xor
es
sub
test
test
jne
inc
dec
stos
arpl
mov
adc
adc
ret
xor
ficompl
xor
or
fs
sub
test
and
push
fmulp
cli
xor
dec
call
in
mov
psrlw
test
dec
pop
movl
aas
std
and
rcr
lcall
xchg
adcl
xchg
je
movsb
shlb
push
shl
or
dec
mov
or
cmc
or
dec
add
sub
ret
jb
call
inc
daa
dec
adc
les
aad
dec
faddl
fisubrl
adc
dec
inc
test
jno
pop
ret
pop
inc
dec
data16
lock
jmp
and
subb
sbb
xorl
inc
repz
pop
shlb
mov
fmull
mov
shlb
hlt
inc
and
int
aaa
xor
dec
sbb
std
xor
jno
adc
add
and
repnz
sbb
dec
sbb
sbb
xchg
dec
int
mov
sbb
outsl
pop
dec
lock
std
mov
lods
aam
in
cmp
jae
cmp
in
jmp
inc
push
aaa
sahf
or
scas
xlat
lods
insb
push
in
jne
push
sbb
add
cmpsb
insl
lretw
mov
mov
inc
cmp
mov
sarb
xor
aas
mov
pop
out
dec
addb
jecxz
loope
xor
inc
mov
mov
mov
and
ljmp
cltd
std
jno
xor
je
or
adc
shll
mov
add
fisttpll
mov
loope
notb
jp
imul
pop
mov
dec
dec
clc
sub
mov
and
sbb
add
mov
fs
daa
aad
nop
and
iret
mov
xchg
icebp
arpl
shlb
stos
lret
fwait
or
in
mov
add
push
push
ja
xchg
test
add
ljmp
call
mov
mov
sub
pop
je
in
daa
cmp
decl
gs
lret
sub
mov
pop
cmp
imul
ljmp
push
addl
les
roll
adc
arpl
fiadds
mov
add
lock
and
scas
orb
pop
aam
or
push
scas
mov
test
sahf
and
out
xchg
in
jg
out
cmp
jae
xor
adc
jp
insl
ljmp
jl
or
inc
test
xor
cs
aad
adc
and
movsb
sub
scas
push
movsb
cltd
push
ret
jle
dec
cs
ljmp
xor
adc
mov
pusha
dec
int3
pop
xchg
lret
sbb
mov
adc
jnp
sbb
out
adc
cmpsl
aam
fs
loopne
and
fldl
notl
adc
jge
movsl
pushf
sbb
push
adc
andl
jmp
imul
sub
jne
inc
lods
stos
test
rcll
ret
sbb
lds
xchg
adc
jle
xchg
add
inc
mov
mov
shrl
test
into
mov
pop
sub
jecxz
dec
stos
mov
xchg
mov
cmp
mov
imul
push
in
mov
loopne
inc
ds
or
jg
mov
cmp
nop
mov
jp
test
dec
adc
cmp
cmc
loop
add
pushf
mov
jle
out
jg
xchg
sbb
cli
dec
cmp
jmp
cmpsl
jne
std
xchg
test
std
js
aam
test
jmp
mov
out
push
iret
aad
repz
sub
repnz
cmpsb
jne
xor
and
sub
mov
pop
call
mov
arpl
adc
insb
cwtl
popa
daa
sub
and
imul
xchg
lds
insb
and
in
add
adc
sbb
test
jge
sub
aad
mov
loope
jp
and
shrl
mov
xchg
pop
lahf
ret
das
adc
jbe
out
loopne
sub
stc
dec
jae
pop
push
rcrl
xor
adc
and
jecxz
insl
mov
gs
lret
addr16
lods
mov
loop
std
push
repz
add
xorb
push
sbb
mov
sub
int
mov
lods
inc
scas
pop
sbb
sti
fisubl
push
mov
fbstp
push
add
lods
addr16
ficomps
roll
fnstenv
ljmp
push
mov
stos
scas
mov
dec
pusha
jg
and
and
imul
das
rep
adc
mov
mov
aad
outsb
shl
hlt
pop
scas
mov
inc
out
mov
inc
mov
mov
mov
out
dec
daa
jl
cmp
stos
call
mov
xchg
xorl
or
roll
mov
pop
test
jmp
aad
pop
xor
cmp
add
das
sub
mov
loopne
cmp
jb
add
lock
mov
roll
lock
js
mov
jae
repz
jmp
cmp
add
and
and
mov
sbb
sub
pop
dec
pop
je
cmpsl
xor
cmp
xchg
and
ret
xchg
aad
mov
hlt
ja
cmp
test
addr16
rcl
movsl
mov
mov
sub
in
add
xor
test
xlat
mov
or
enter
cmp
mov
xchg
dec
mov
xor
and
les
jg
shll
cmc
test
cli
adc
push
xchg
lock
and
sub
sub
or
mov
xchg
ss
and
cmpsl
ret
dec
adc
push
shlb
xor
xchg
jb
stc
and
cmp
pop
in
add
mov
inc
xor
pop
scas
outsb
mov
gs
mov
shl
or
sahf
and
fisubl
mov
and
xchg
push
jl
movsb
dec
daa
or
add
cltd
push
movsb
and
stos
mov
jl
mov
xor
mov
in
leave
sbb
jge
mov
and
cmc
and
imul
mov
aam
nop
imul
and
or
movsb
bound
inc
or
mov
in
xchg
push
lret
test
test
jo
test
push
cmpsl
cmc
xchg
negb
mov
ret
mov
sub
sbb
mov
jnp
leave
add
pop
cmp
sub
inc
nop
pop
push
cmp
mov
mov
data16
push
js
xchg
inc
cmp
or
int
ret
hlt
jp
mov
pushf
mov
adc
push
lock
xchg
cmp
mov
sbb
sub
inc
test
mov
or
cwtl
cmp
push
shll
sbbl
or
das
stos
loop
xor
es
xor
lock
stc
sbb
shll
mov
ljmp
pushf
add
jnp
and
stos
arpl
negl
adc
mov
dec
outsl
out
push
imul
movsb
adc
jae
aad
jo
fs
incb
push
add
lret
jp
lahf
cli
out
dec
add
sub
jno
push
inc
cmp
dec
sub
nop
jmp
mov
adc
loop
dec
sbb
xorl
hlt
or
push
lock
pop
ljmp
aad
adc
stos
lea
loope
pop
aaa
sub
mov
cmpsl
mov
aam
push
add
dec
mov
stc
cwtl
jp
fs
leave
pop
and
pop
or
sti
inc
aam
outsb
dec
popa
imul
loope
adc
add
mulb
mov
jl
insb
xchg
mul
or
pop
dec
xchg
lcall
testl
xchg
xchg
jne
mov
push
mov
icebp
test
cmc
dec
outsl
jo
xchg
mov
push
xor
enter
dec
cmc
pushf
ret
scas
stos
mov
and
andb
fisubs
adc
and
pop
inc
in
leave
scas
les
aad
inc
mov
mov
jb
fsubs
inc
cltd
xchg
test
inc
xlat
movsb
sbb
xlat
rclb
push
movsl
push
aaa
mov
dec
les
andb
in
cwtl
roll
mov
or
adc
out
sbbb
xor
sub
repz
inc
call
movsb
scas
xorb
jmp
ret
xchg
dec
filds
outsb
sahf
inc
rclb
iret
xchg
push
jge
cmp
mov
imul
std
xchg
sbb
aaa
lds
ficoml
push
out
mov
mov
dec
mov
test
xorb
fstl
add
add
fcoms
popfw
out
inc
ret
shlb
fs
call
xor
jmp
jmp
xchg
inc
push
mulb
or
stos
xor
and
sub
mov
fiadds
adc
adc
mov
pop
cmp
dec
jp
in
inc
cs
jmp
popa
mov
add
mov
adc
icebp
cmp
pop
cmp
sub
jnp
imul
jns
es
adc
movsl
testl
cmp
fdivrp
cltd
jmp
cmp
or
subl
inc
loop
xor
neg
insb
js
shlb
jp
push
lret
cmpsl
jnp
mov
test
push
xchg
jecxz
aad
xchg
mov
mov
test
and
cmp
call
pop
xor
ja
cmp
sub
jg
sbb
mov
inc
add
sbb
pop
sahf
dec
lods
lods
pusha
jge
pop
cs
mov
dec
and
push
push
popa
addr16
les
out
adc
xchg
push
movsb
andb
cs
cmp
out
push
outsb
cmp
dec
dec
in
xchg
jne
mov
aas
lods
xchg
stos
scas
dec
adc
mov
mov
int3
mov
or
sub
push
jns
sbb
and
imul
cltd
mov
test
cmc
lock
inc
push
addr16
mov
ret
xchg
inc
xchg
repz
push
mov
arpl
mov
fnsave
outsb
dec
mov
loop
mov
or
mov
movb
pop
mov
lds
sub
and
call
fcompl
sub
fidivl
mov
lahf
mov
sub
in
dec
mov
mov
pushf
add
sub
je
mov
aad
cwtl
mov
and
iret
in
outsl
xor
ljmp
test
das
sbb
pop
movsb
sub
adc
and
lds
dec
shrl
jbe
test
inc
loope
loope
test
push
movsl
shll
imul
es
dec
mov
sub
ss
cld
sbbb
jo
ja
xchg
mov
lahf
add
pop
hlt
fmulp
les
outsb
popf
sbb
call
nop
in
xchg
xchg
fistpl
or
test
inc
pop
repz
call
xchg
add
or
in
or
incb
inc
cmc
movsb
jno
fimull
push
xlat
clc
push
adc
mov
insl
jmp
or
mov
cltd
push
xor
sbb
add
ret
nop
xchg
sub
shl
pusha
sbb
adcl
xchg
sub
add
cmp
sahf
xchg
mov
jb
mov
jns
stc
sbb
add
std
ds
popf
pop
pop
mov
mov
pushf
aaa
loopne
mov
lea
testl
into
decb
sbb
test
outsl
pusha
mov
sub
ss
movsl
loop
fdivr
add
push
gs
add
outsb
test
ds
ret
loopne
mov
inc
mov
into
js
lahf
call
addl
inc
repz
pop
ljmp
xchg
in
out
ret
pop
ret
ss
das
lret
into
test
push
clc
aam
push
mov
jge
daa
les
push
loope
sti
ss
jne
mov
dec
cmpsl
jb
stos
cmp
out
xchg
pop
mov
lcall
gs
lods
or
sbb
mov
int
fwait
out
cmp
xchg
fucom
ss
push
cmp
ret
adc
xchg
adc
mov
sub
xor
rcrl
add
faddl
andl
lcall
clc
add
rol
jp
pop
mov
mov
ficompl
jecxz
scas
loope
lods
mulb
frstor
sbb
dec
inc
jp,pn
or
sbb
or
js
mov
repnz
sbb
push
and
movsl
or
or
ljmp
mov
repz
outsl
rorl
inc
xchg
loop
shrl
mov
xchg
pop
pop
inc
sub
xor
adc
fdivrp
jae
mov
mov
jg
cmp
into
jns
sub
rcrb
xchg
sub
movsl
or
loop
test
test
rolb
ret
aad
test
xor
pop
sahf
dec
adc
inc
out
sbb
or
cmp
and
dec
jo
fsubp
mov
adc
imul
insb
fisubrl
push
cmc
stos
clc
mov
repnz
cwtl
push
dec
imul
sub
pop
inc
fs
and
inc
test
mov
sbb
or
leave
xchg
rcrl
xor
pusha
outsl
sahf
test
jns
xor
mov
jg
sub
ret
stos
ret
ret
mov
jg
ss
pop
mov
mov
push
xchg
jle
mov
sahf
sub
mov
pop
fisttpll
jecxz
pop
frstor
mov
ja
cmp
test
dec
sbb
xlat
fcoms
dec
jg
cmpsl
mov
and
dec
mov
in
ja
scas
sub
movsl
call
mov
inc
adcb
rolb
pusha
mov
stos
data16
aad
push
and
add
dec
cmpl
ljmp
jae
movsb
sub
repnz
mov
mov
or
imul
rclb
dec
sub
or
js
out
jp
jmp
sub
pop
push
arpl
jae
xchg
inc
dec
in
repnz
inc
roll
pop
pusha
outsl
xor
push
adc
jb
sub
ret
add
shll
lret
sar
jp
pop
sub
ljmp
cmpsb
and
in
mov
inc
test
call
sbb
dec
inc
lahf
repz
mov
sbb
repz
clc
pop
pop
popa
adc
and
das
sub
ret
push
xchg
pop
loop
in
xchg
xlat
and
jb
movsb
mov
adc
sbb
jl
add
outsb
in
shrl
int
push
mov
arpl
cld
or
aas
xchg
dec
mov
fisubrs
clc
xor
stos
cld
out
pop
sub
aad
adc
sbb
push
loope
and
outsb
int
cmp
andb
inc
jo
test
out
int3
dec
sub
fists
jle
push
aam
lods
iret
leave
in
lret
loopne
mov
out
adc
xchg
mov
push
cmc
and
movsb
dec
mov
cltd
test
dec
xor
jp
in
arpl
fidivrl
mov
movsb
aad
int
insb
sahf
sub
jmp
rcll
movzwl
insl
mov
lret
lods
add
adc
xchg
ss
test
sub
push
mov
push
test
xor
pusha
into
sub
and
inc
xchg
adc
leave
xor
sub
inc
test
mov
mov
mov
mov
cmp
lahf
movsl
movsl
jecxz
or
push
and
xchg
jbe
repnz
shr
lcall
cli
mov
loope
cld
and
pop
and
and
push
in
jo
push
sbb
add
and
test
lahf
mov
stc
inc
fnsave
xlat
mov
imul
rclb
fdivrp
push
sbb
lods
or
pop
xor
imul
fwait
ret
aas
mov
movsb
cmp
das
xlat
mov
rcll
js
loopne
stos
movsl
arpl
cmp
or
mov
push
mov
rorb
lcall
mov
loopne
mov
mov
add
movsb
ret
hlt
inc
mov
mov
xchg
jo
ss
test
xchg
outsl
adc
mov
shll
test
imul
mov
outsl
sbb
jbe
call
and
aam
hlt
popf
add
iret
push
stos
fadds
daa
cwtl
loop
iret
lret
mov
enter
push
adc
pop
fs
jmp
into
aas
lods
shl
inc
mov
mov
push
dec
xchg
sbb
das
and
call
pop
lods
push
add
vcvttsd2usi
adc
sub
sub
bnd
adc
inc
and
jns
ljmp
vpshab
cmc
fucom
adc
lock
mov
pop
mov
xorl
leave
imul
lock
cmp
shrl
adc
outsb
mov
lods
loope
movsl
cmp
dec
add
jae
add
ret
fidivs
cld
lret
imul
jg
mov
imul
lret
adc
add
rclb
stos
mov
add
les
je
push
gs
or
pop
jns
jge
xor
jb
lret
mov
dec
and
and
and
xchg
mov
fs
mov
loope
outsb
xor
mov
repz
jb
xchg
dec
sbbb
stos
mov
adc
or
cmp
jp
or
iret
pop
pop
jae
mov
xor
mov
mov
jns
hlt
or
push
movsb
push
and
dec
sbb
popa
or
cmp
pop
sbb
xchg
xor
inc
mov
dec
mov
movsl
add
cmp
inc
push
lcall
pop
inc
xor
ret
lret
mov
add
inc
pop
ljmp
mov
addr16
mov
mov
mov
mov
cmp
dec
pop
mov
popa
dec
bound
into
sbb
movsb
je
movb
push
movsb
mov
pop
xchg
xor
ret
das
rcrl
mov
insb
cli
mov
ljmp
shlb
shlb
cmp
fdivs
insb
lret
add
subb
mov
mov
movsl
pop
mov
divb
push
int3
dec
jle
mulb
mov
sar
cli
js
jg
add
cmp
push
push
mov
cmp
xor
mov
popf
xchg
dec
and
dec
jbe
xor
mov
outsb
xor
adc
sub
rolb
cli
notb
lea
cmc
sbb
enter
add
xchg
out
ljmp
repnz
xchg
lds
mov
pop
inc
sub
mov
jmp
mov
and
test
cld
xor
mov
xchg
shll
int
arpl
sub
mov
stos
lcall
xor
dec
sub
les
sub
paddusw
sbb
mov
jle
and
addr16
sar
push
xor
adc
rol
jo
jb
fdivrp
and
cmp
pop
mov
hlt
add
sbb
sbb
push
add
xlat
into
mov
fs
jge
ret
fisubrs
aaa
cltd
ljmp
leave
adcl
pop
and
addr16
sub
xor
mov
xor
fldenv
sub
mov
and
pop
test
and
divb
in
add
mov
push
out
adc
lds
jb
or
lea
xchg
push
sub
repnz
or
loop
sbb
xor
shrl
test
xchg
and
in
icebp
sub
jne
popw
stos
imul
roll
movsl
aad
mov
fsubrs
pop
mulb
test
pop
xchg
adc
dec
lret
hlt
mov
addr16
fsubr
iret
sbb
pop
inc
mov
cli
cmpsb
repz
sahf
pop
cmpsb
cmp
push
cmp
clc
in
xor
movsl
ficompl
xlat
xor
outsb
int3
call
cmc
mov
or
jmp
dec
les
pop
mov
rcll
mov
ret
jo
decl
ret
push
notb
cmpsl
mov
mov
push
mov
sahf
and
push
mov
in
enter
inc
mov
leave
xchg
inc
mov
insb
movsl
add
mov
sub
mov
push
add
add
fidivs
ljmp
mov
into
mov
push
sub
mov
dec
lret
sub
stos
sub
icebp
push
adc
sahf
push
mov
mov
xor
pop
dec
lods
lret
stos
push
les
rcrl
movsb
xor
or
cltd
jge
pushf
adc
les
aad
cmp
fnstcw
add
std
xchg
lock
out
hlt
dec
push
repz
xchg
pop
inc
jo
add
sub
push
xchg
outsl
cmpsb
in
dec
js
inc
push
jmp
outsl
dec
aad
fsubl
jmp
sub
inc
xor
imul
pushf
std
sub
mov
mov
cmp
or
inc
jo
dec
adc
inc
mov
xchg
lret
sbb
xchg
insl
nop
or
push
inc
shrb
movsb
push
sbb
iret
cmp
aam
add
add
and
xchg
inc
and
lods
fsubrl
jmp
mov
mov
lret
jle
adc
xchg
test
mov
jge
jle
mov
outsb
aad
test
ficomps
shll
sub
and
gs
push
loope
test
inc
and
add
jb
in
stos
movsl
xchg
push
or
sub
xor
xor
inc
sarb
xchg
jmp
rcr
addr16
jmp
pop
movntq
jne
jp
jb
mov
popf
jns
sahf
lcall
sbb
cwtl
pop
loopne
rcrb
outsb
sub
xchg
xor
insb
cmp
xor
push
loop
cmp
mov
add
test
movsl
sahf
jmp
rorb
pop
add
xchg
ret
xlat
mov
dec
test
cmpsb
add
lret
xchg
rorb
push
sub
jb
aad
mov
push
loope
enter
xchg
daa
mov
xor
push
push
pop
mov
test
dec
mov
push
sbb
aad
cmp
insl
andb
out
sahf
xor
mov
movsl
jo
int
sahf
add
mov
jp
mov
mov
cmp
jg
push
xchg
inc
fstpl
dec
pushf
jp
iret
cmp
je
jecxz
cmpsb
or
sub
fsubl
inc
mov
gs
mov
mov
outsb
lcall
mov
cmpsl
mov
test
cltd
jp
popa
adc
ljmp
mov
xor
movsb
mov
pop
das
cmp
aam
or
bound
repnz
and
or
xchg
xor
mov
inc
add
int
push
or
inc
lods
imul
cmpl
cmp
xchg
xchg
mov
mov
sub
mov
mov
in
xor
adc
clc
mov
xchg
loope
adc
dec
sarl
sbb
xor
sub
mov
mov
pop
xor
mov
or
mov
dec
jno
mov
ss
enter
imul
cmc
mov
cli
push
scas
pop
sub
stos
arpl
inc
or
pop
push
mov
into
ret
clc
loope
iret
jbe
fs
cmp
jae
int
repnz
ret
insl
scas
repnz
leave
decb
fstpl
mov
popf
pop
js
cmc
mov
out
cmp
repnz
mov
repz
push
inc
inc
xchg
arpl
addr16
hlt
pop
popf
cmp
sbb
mov
mov
lret
and
mov
xchg
xchg
and
dec
adc
mov
outsl
ret
dec
test
arpl
movsb
mov
mov
adc
mov
in
mov
push
pop
xor
mov
adc
adc
test
mov
outsb
push
add
into
push
pop
jbe
fldenv
add
lahf
mov
pop
xor
out
int3
sub
data16
ucomiss
movsl
xor
xchg
in
jg
and
mov
fdivs
hlt
notb
std
jno
scas
add
xchg
sbb
hlt
and
iret
xchg
sub
pop
sub
cmp
out
leave
aaa
add
xor
jae
pop
xchg
mov
inc
lret
roll
into
mov
pop
xchg
mov
adc
pop
lcall
sbb
or
movsl
push
lock
pop
lcall
ds
ja
das
js
dec
jmp
jnp
push
sbb
sub
sbb
out
sub
xchg
bound
pop
mov
shll
insb
jbe
mov
xor
mov
aam
test
cmpsl
repnz
jns
jo
mov
jnp
pop
jb
adc
add
sar
cli
sub
xor
inc
repz
mov
ljmp
cmp
and
clc
out
push
dec
pop
in
add
inc
sub
mov
mov
xor
push
and
inc
xor
dec
movsl
test
shr
sbb
push
lret
popf
pop
dec
pop
cmp
leave
mov
xchg
add
fucomp
mov
mov
add
cmp
loopne
fs
mov
jle
stc
fisubs
pushf
xor
nop
sti
mov
inc
lret
xchg
sub
scas
push
stc
dec
jp
inc
push
push
repnz
dec
nop
xchg
and
sbb
mov
and
xor
int
mov
insb
aaa
pop
xchg
xlat
stos
ficoml
jmp
jge
es
pop
mov
lcall
int3
mov
sbb
mov
mov
negb
cmp
sub
cmc
jp
sbb
in
pusha
lods
jl
sub
testl
aas
mov
mov
pop
inc
cmp
aad
mov
and
sahf
adc
arpl
mov
push
cmp
push
in
aas
jo
lret
loop
imul
hlt
out
test
jp
jo
ret
rclb
push
cld
es
cmc
sub
sub
push
jnp
lods
nop
xchg
sbb
add
dec
cli
test
cli
inc
les
test
inc
xchg
gs
mov
xchg
arpl
push
jmp
std
stc
fbld
scas
and
mov
std
add
cs
stos
outsb
xor
or
mov
and
mov
stos
sbb
push
mov
mov
pop
hlt
ret
test
icebp
shr
xchg
mov
xchg
pop
lret
bound
daa
lods
adc
daa
mov
fs
push
xor
lds
pop
inc
movsl
or
mov
inc
call
xor
cld
sbb
mov
pop
push
inc
hlt
mov
pop
loope
fs
testb
add
mov
pop
lahf
add
push
or
test
out
cmp
adc
mov
enter
or
cmp
pop
iret
shl
cmpsb
pop
add
xor
popa
mov
pop
sub
add
test
fxch
or
xor
mov
clc
ss
sahf
xor
xor
push
mov
ss
push
stc
inc
mov
in
pop
test
sbbb
fnstsw
stos
cli
test
aam
inc
lret
ret
movsl
lock
adc
adc
sar
cld
pop
push
add
in
dec
fs
int
ljmp
test
fldt
test
inc
sub
mov
paddd
mov
lcall
orl
inc
nop
jmp
cmpsb
xor
popf
xchg
xchg
jbe
add
test
xchg
jb
or
xchg
and
dec
adc
add
mov
andb
sub
cmp
movsb
lock
lahf
mov
das
push
pop
rol
and
inc
rcrl
mov
xchg
xchg
leave
insl
mov
jbe,pn
add
lods
pop
ljmp
inc
test
cmp
out
pop
outsb
loop
xchg
jg,pt
mov
jge
inc
nop
int3
add
addr16
pop
cmpsb
mov
mov
shrb
repnz
pop
mov
mov
adc
sub
lcall
mov
in
mov
rol
dec
jp
pop
repnz
lods
pop
lcall
test
in
push
loop
je
stos
jns
notl
xor
in
and
ficompl
xor
cmc
lcall
adc
lea
push
jns
and
movsb
sub
dec
lret
popf
lods
rol
insb
lods
jecxz
loope
shl
dec
cmp
mov
jne
lods
dec
andb
lods
out
sbb
dec
pop
outsb
pop
je
pop
imul
aaa
in
pop
sub
mov
aaa
adc
subb
xor
lods
int3
test
sti
cwtl
sub
cs
aas
mov
xlat
sbb
and
xchg
sbb
mov
adc
mov
mov
xchg
cmc
pop
shlb
mov
cmp
pop
arpl
mov
xchg
inc
jne
cmp
les
aad
jo
cltd
pop
ret
orl
xor
xchg
xchg
movsb
sub
push
cld
xchg
jg
ss
imul
xor
sbb
insl
pop
push
sbb
std
adc
aam
mov
pop
call
sarb
push
push
lret
movsb
jno
ret
cli
xchg
push
stos
mov
sub
lds
lret
push
mov
push
mov
sbb
xchg
mov
lds
push
ret
orl
mov
or
mov
nop
inc
aad
mov
call
cmpsl
and
decb
insb
xchg
call
cs
push
aas
cmpsb
loop
or
cmp
mov
data16
bound
xor
inc
push
das
mov
sub
mov
cld
ds
sub
sub
sub
sbb
call
jo
jl
push
cmp
aas
aad
xor
add
nop
push
lock
popf
push
xlat
ror
hlt
icebp
fidivl
inc
pop
dec
push
pop
and
xor
arpl
sub
sbb
add
bound
imul
xchg
lods
addr16
js
iret
test
xchg
pushf
stos
push
stos
rolb
push
dec
cld
pop
je
xchg
arpl
inc
push
mov
sub
in
sbb
rol
dec
lods
jmp
pop
ljmp
sub
sub
pop
divl
add
movsl
mov
daa
mov
mov
imul
stos
mov
hlt
cli
jne
repnz
and
hlt
add
push
dec
pop
mov
mov
rcrl
lock
add
or
mov
or
loop
xor
pop
jns
dec
pop
add
lock
jne
push
ds
push
xchg
bound
lock
in
pop
xchg
shr
adc
pusha
test
pusha
sub
jns
loop
mov
jb
xchg
ficoml
pusha
inc
jecxz
js
fxch
adc
inc
in
sub
xor
daa
mov
lods
je
ss
ret
jl
pop
stos
incl
std
outsb
mov
jle
mov
jmp
in
mov
pop
inc
popa
mov
lcall
mov
loop
jl,pn
icebp
in
push
dec
and
sub
xchg
pop
test
xor
into
xor
mov
or
repz
cmc
sub
sar
addr16
stos
pusha
adc
pop
lods
sahf
sub
or
inc
mov
inc
fs
fcom
sbb
pop
jecxz
rclb
pop
xchg
shrl
xor
xor
mov
push
push
xchg
mov
shrb
xor
xchg
fistps
mov
or
inc
test
adc
xchg
sub
dec
mov
stos
fwait
nop
or
je
pop
jo
mov
daa
jno
add
mov
or
stc
mov
lret
jle
aam
add
xchg
ds
pop
mov
mov
jle
scas
sub
jae
add
test
scas
jae
sbb
mov
sub
xchg
mov
scas
sbb
mov
adc
push
jle
pop
mov
fists
push
mov
fs
mov
fs
ss
movsb
popf
push
mov
xchg
jno
cmpsb
jae
push
or
outsb
xor
adc
adc
sub
ret
lds
pop
imul
xchg
or
movsb
movl
test
sahf
scas
ret
sbb
in
data16
dec
mov
xor
and
xchg
outsl
call
lock
pop
xchg
scas
stos
ds
xchg
rolb
push
int3
jb
ljmp
inc
sub
rcll
inc
ret
lds
pop
adc
mov
sbbb
cmp
jno
aaa
aas
inc
xor
pop
dec
sbb
cmpl
scas
arpl
incb
daa
mov
testb
cmp
ret
lea
and
nop
arpl
fsubrl
jle
push
xchg
mov
movb
jge
out
push
movsl
push
mov
push
adc
fists
stos
jmp
pop
outsl
jl
add
dec
xlat
dec
mov
xchg
mov
pop
hlt
ret
leave
xchg
inc
cmpsb
mov
dec
push
or
aad
pop
lret
xor
fucom
cmp
test
pop
div
xchg
aam
xor
push
lods
mov
sbb
popf
rcll
adc
push
and
movsb
lock
daa
mov
das
push
mov
ficoms
xchg
xor
inc
dec
ret
in
push
fstpl
jge
adc
out
mov
push
xchg
push
xor
outsb
jbe
or
pop
and
fcoms
scas
lret
mov
out
gs
dec
inc
sub
addr16
and
fcoms
cmp
clc
insl
jecxz
add
or
add
popa
push
inc
out
and
or
mov
or
push
into
xor
lcall
mov
add
add
xor
push
push
bound
sub
xor
xlat
adc
loopne
rclb
icebp
das
xor
add
or
cmc
mov
dec
mov
ljmp
sub
inc
lods
sub
add
jl
loop
cmp
in
arpl
sbb
dec
out
mov
mov
cli
out
dec
sub
push
and
xchg
adc
lea
xchg
sub
xchg
mov
xchg
in
xorb
movsb
sub
loopne
jne
xchg
inc
xchg
add
es
inc
xchg
adc
into
pusha
and
stos
push
add
jo
out
push
orb
jle
jmp
cwtl
xor
mov
call
into
lret
imul
pop
int
mov
les
cmp
pop
cmp
fiadds
stos
push
mov
in
mov
fwait
subb
push
imul
loop
cwtl
inc
jb
pop
loop
push
in
leave
or
ret
cmpsl
push
mov
add
repz
loop
and
rorl
pop
jle
xchg
xchg
sbb
je
jo
push
movsl
adc
mov
sub
test
add
add
out
mov
stos
mov
push
in
add
push
and
cmpsb
shll
ret
xorl
andb
dec
fsubrp
out
dec
jno
jp
pop
repnz
fcmovnbe
js
mov
and
test
iret
and
std
out
adc
std
push
mov
cld
mov
mov
aad
mov
dec
mov
divb
out
jl
psubsw
out
shrb
enter
in
dec
stos
cmp
and
std
jge
aad
pop
mov
int
xchg
sub
lods
push
xchg
fsubrl
push
xchg
pop
sbb
inc
mov
mov
ret
mov
sub
mov
jecxz
in
xchg
add
cmp
out
data16
stc
push
mov
sub
pop
call
mov
pop
and
jbe
jb
mov
sub
dec
sub
insl
xchg
pop
in
or
dec
xor
cmp
push
mov
jle
cmp
ss
push
in
inc
push
test
mov
mov
and
xchg
pop
or
cli
es
ficompl
pop
push
mov
dec
insl
sub
sub
shlb
and
xlat
mov
jne
cmpb
mov
mov
rolb
and
pop
inc
jae
push
movsl
sahf
shr
popa
addr16
and
lcall
cmp
stos
out
pop
inc
stos
mov
ret
shrb
movsl
mov
test
arpl
push
cs
mov
pop
push
mov
xchg
lock
adc
pop
jmp
shl
sub
arpl
in
nop
jecxz
std
mov
mov
ds
or
int3
inc
icebp
push
adc
aas
mov
data16
xor
ret
push
repnz
stos
push
ss
sub
lods
out
out
sub
rorb
jae
xlat
xchg
pop
rol
add
lods
or
test
repz
dec
xchg
mov
shl
cmp
xchg
and
repnz
push
push
add
jmp
inc
or
scas
jmp
stos
xchg
jp
xor
push
push
test
mov
movsl
push
pop
aaa
mov
subb
mov
movsl
sbb
add
scas
xchg
xchg
inc
cmpsb
test
cmp
dec
mov
cli
jmp
lock
fcmovb
cmp
popf
jo
mov
popa
sub
cmp
dec
inc
enter
pop
std
icebp
lcall
fists
in
cmpsl
test
out
and
xchg
xor
call
xor
xor
subl
ret
shrb
popa
jl
xor
xchg
mov
imul
and
mov
or
jmp
scas
call
jle
rcll
jl
xchg
pop
or
push
ficompl
mov
inc
subl
cmc
into
or
dec
sub
mov
or
stos
mov
xchg
inc
mov
cmp
mov
into
divb
xor
iret
push
inc
mov
push
pop
sub
add
sub
sub
lock
rorl
add
sbb
ret
jns
ficompl
lcall
mov
xor
insl
scas
pop
popa
das
or
inc
daa
jns
and
sbb
into
fcmove
movsl
imul
sbb
aam
pop
pop
and
loop
mov
mov
hlt
movsb
pop
imul
jnp
pop
add
lods
cmc
jp
xchg
aad
add
cmp
push
cwtl
pop
push
les
mov
loop
mov
je
dec
aas
lcall
and
rorb
sub
mov
adc
int
imul
mov
push
xor
outsl
cwtl
adc
jle
pop
mov
hlt
inc
sub
es
out
shl
div
jb
call
mov
jne
pop
or
lea
pavgb
ret
xchg
ds
loope
inc
add
repnz
aad
outsl
cli
mov
fs
jbe
sub
mov
out
push
mov
push
cli
add
pop
std
pop
movsl
movsb
mov
mov
add
movsl
push
push
cmp
add
in
in
push
xorb
or
cmc
std
xor
cmp
dec
leave
jae
loop
add
push
test
hlt
pop
mov
loope
push
popa
daa
pusha
sti
arpl
mov
sub
sub
mov
lods
call
insb
imul
pop
pop
movsl
es
outsb
jg
jb
sub
add
outsb
sub
push
xor
jg
add
xchg
cmp
movsb
cli
aas
push
test
lcall
repnz
mov
and
inc
fstpl
fbld
adc
xchg
loop
mov
cmc
inc
fadds
inc
les
jg
jbe
clc
out
push
lea
sub
iret
sbb
cli
loop
sbb
mov
shl
pop
pop
cmp
dec
fdivs
jb
dec
jo
dec
cli
pop
adc
mov
push
das
or
xchg
icebp
int3
mov
lret
pop
inc
lret
jmp
lods
and
dec
test
lret
and
or
cmpb
xlat
rolb
cmpsb
out
sbbb
int
aad
arpl
roll
stos
push
xorl
shr
mov
shr
idivl
inc
xchg
nop
or
or
cmp
push
in
fnstsw
sbb
outsb
test
dec
shlb
jp
mov
dec
adcl
pop
xor
lea
aas
sub
cmc
lock
xchg
mov
xchg
jp
push
int
pop
cmpsl
dec
sub
ljmp
push
ficoml
gs
cmp
push
in
out
test
sub
lods
lahf
das
xchg
iret
scas
xchg
insb
cmp
stos
leave
rcr
push
xchg
or
je
sub
pop
test
lock
push
fidivl
or
cli
stos
mov
and
loop
push
fimuls
ficoms
sub
and
ss
pop
dec
dec
sub
movsl
out
dec
aam
sub
xchg
bound
push
loopne
mov
ja
jge
mov
and
jmp
popa
pop
xchg
insb
cmp
loopne
lods
pop
popa
insb
sub
lock
std
negl
imul
mov
addr16
sub
sbb
push
stos
xchg
popa
sub
mov
das
dec
test
in
inc
mov
pop
es
sbb
les
mov
movsb
daa
xchg
lea
stos
loop
sarl
call
outsl
out
int
xchg
push
aad
arpl
sub
aaa
jmp
loopne
insl
bound
push
aad
ret
pop
and
mov
mov
test
popa
cmpsl
fildll
scas
and
cld
jmp
xchg
or
out
fildll
mov
jns
cmpsb
movsb
jmp
popa
cmpsl
sub
jecxz
and
mov
js
xor
inc
into
aad
push
insl
jno
mov
cmp
mov
pop
cmp
mov
mov
lret
popf
imulb
add
inc
xchg
movsb
cmp
stos
scas
frstor
aam
aad
ret
xchg
add
jg
or
dec
imul
dec
repz
and
sub
test
or
testl
pop
in
pop
or
push
test
push
add
fimull
mov
into
and
add
jbe
aam
ss
ret
lret
mov
adcl
pop
pop
aam
inc
popf
cmp
jmp
mov
jo
mov
ret
int
xchg
add
bound
test
leave
xchg
cmp
ss
mov
punpcklbw
mov
leave
out
dec
out
dec
movsb
add
and
lock
cmp
dec
sbb
outsl
adc
sarb
pop
into
negl
insb
mov
ret
jle
sbb
stos
dec
es
scas
pop
pop
push
push
aas
movsl
pop
mov
out
jns
or
scas
aad
mov
sbb
cmp
and
arpl
enter
add
sbb
xchg
test
aaa
xor
fs
mov
cs
mov
lret
push
push
sub
lds
rorb
test
push
pop
sbbl
daa
fisubrs
push
cmp
pop
lcall
mov
add
inc
ja
test
xchg
adc
pop
cmp
sbb
push
mov
and
push
mov
inc
test
and
inc
ret
enter
mov
mov
add
mov
mov
js
ret
mov
lcall
or
add
mov
xor
lcall
sub
aaa
stos
sahf
ret
xor
push
mov
xchg
call
adc
pop
sbb
sbb
lahf
aas
mov
iret
js
xor
lods
test
cld
and
in
mov
inc
in
movsl
mov
adc
cmp
lods
imul
mov
jb
dec
xchg
aam
rep
lcall
pop
shlb
xor
test
aad
pushl
xor
stos
adc
mov
daa
arpl
aaa
nop
sub
fcomi
test
cmp
pop
arpl
sub
ljmp
aas
jae
or
dec
loopne
adc
cmp
fistpll
sbb
cwtl
xchg
mov
incl
bound
daa
pop
mov
jae
cmpb
je
xor
adc
movsb
cmpsl
jb
xor
xchg
add
mov
imul
int
push
adc
jl
loopne
xor
jp
js
cli
mov
sbb
jns
mov
adc
es
aad
push
sub
adc
pop
jg
adc
arpl
pusha
aaa
mulb
ficoms
nop
les
aaa
imul
stos
lods
loope
mov
sub
je
je
push
mov
cld
or
ss
pop
and
and
jg
jge
out
mov
aad
pop
mov
and
dec
push
incb
mov
out
mov
stos
fdivrl
push
cmp
mov
shld
sbb
cli
jecxz
ss
mov
or
jmp
jl
call
ret
cmpsb
adc
pop
ret
loopne
xor
lods
mov
dec
dec
add
lods
sub
in
mov
popa
push
into
sub
int
into
add
sbb
and
jle
mov
or
adc
orl
pusha
stos
xor
cmp
xchg
mov
movsl
test
jecxz
xchg
lods
mov
jne
loop
pop
cmp
jmp
sub
ja
add
cs
scas
movsl
repz
mov
inc
movsb
pop
add
dec
mov
arpl
lods
data16
pop
aas
call
add
or
pop
popa
inc
aaa
in
pop
xlat
test
ret
int
sub
out
lcall
add
lahf
pushf
mov
sahf
int
shrl
xchg
dec
fwait
out
outsb
xor
mov
push
sub
rol
loop
and
jecxz
andb
fisubs
xchg
push
xchg
gs
lret
sub
sahf
andl
jmp
frstor
inc
xor
cmovge
xchg
ja
or
inc
scas
lods
mov
or
testl
cmp
sub
push
iret
add
mov
mov
xchg
aad
jg
hlt
and
orb
adcl
loopne
scas
jne
in
repz
pop
jno
dec
repz
cmp
pop
dec
pop
iret
mov
push
enter
jl
cli
icebp
and
mov
ss
insb
rcrl
xchg
push
lret
push
mov
sub
int
repz
frstor
xor
cmpsl
pop
roll
fwait
dec
dec
or
jle
int3
daa
xchg
cli
out
push
call
loopne
nop
les
jmp
inc
popf
push
je
xchg
mov
movsb
addr16
out
out
cmp
add
leave
mov
pop
out
test
cli
fdivr
xchg
lds
mov
inc
call
fst
shll
mov
add
lcall
jb
and
jmp
je
lea
jo
mov
sub
sahf
hlt
aaa
movsl
cmp
or
das
sahf
and
jno
aaa
sub
movsb
pop
insl
sbb
movsb
xchg
adc
fcoml
pop
fwait
test
lock
imul
test
cltd
cmc
inc
fadds
and
outsb
mov
dec
pop
mov
mov
adc
lcall
nop
cmc
cli
cs
mov
clc
or
mov
arpl
jecxz
cmp
orl
sti
outsb
pop
fbld
and
jmp
enter
cmp
divl
dec
mov
sub
mov
sub
and
loopne
movsl
sbb
xor
imull
cmp
inc
xorb
ds
inc
xchg
mov
rcll
ljmp
movsl
inc
and
dec
push
mov
in
mov
jle
mov
aas
sbb
insb
pop
sub
push
jne
enter
xchg
inc
add
sub
mov
loope
dec
xor
inc
sub
and
lahf
outsb
jnp
cmpsb
sub
lcall
mov
outsl
xchg
enter
push
cmc
mov
in
test
xor
push
sbb
mov
dec
sbb
out
xor
int
in
leave
cmp
lret
shrb
lret
imul
dec
and
and
or
adc
fiadds
loopne
outsl
stc
pop
gs
sbb
lock
inc
leave
adc
loop
mov
sub
xor
xchg
into
xor
xchg
ret
mov
test
hlt
sbb
or
daa
and
ljmp
je
sbb
js
cmpsb
test
jb
enter
fs
mov
test
cmc
mov
and
lret
pop
pop
mov
pop
pop
loopne
lea
add
mov
cmp
out
inc
xor
clc
jmp
repz
arpl
rorb
inc
xchg
sbb
test
pushf
jmp
push
push
mov
cmp
ret
push
pusha
inc
leave
xchg
mov
movsb
sub
and
xchg
sbbl
outsb
push
sub
adc
cs
or
jo
enter
dec
shrb
popa
push
mov
mov
shrd
ret
xchg
lcall
in
dec
cmp
test
pop
xchg
movsl
jp
shll
lret
inc
out
daa
pop
lret
xchg
mov
jmp
xchg
icebp
xchg
aaa
test
mov
ret
repnz
test
out
or
dec
jecxz
jbe
xor
mov
inc
fsubrs
outsb
hlt
jne
pop
in
inc
pop
xchg
xor
add
sbb
sti
roll
jb
sahf
negb
or
push
adc
inc
gs
sbb
xchg
pop
aad
shlb
iret
imul
mov
insb
test
mov
repz
dec
pushf
fnsave
popf
add
lret
xor
imul
xchg
movsl
xchg
sbb
dec
jp
punpcklbw
xchg
xor
fdivr
fwait
jmp
mov
dec
sbb
stos
mov
dec
dec
pop
std
cmp
decb
adc
aaa
push
loopne
insb
cmp
and
movsl
loop
push
test
xlat
andl
sub
popf
cmp
xor
test
mov
ret
scas
shlb
xchg
stos
call
jo
mov
test
inc
or
pop
jp
dec
push
and
and
push
inc
lods
jecxz
aas
out
pop
repz
loop
arpl
sbb
push
push
fwait
push
in
inc
add
add
leave
jg
sbb
sti
in
xor
or
push
test
loop
push
jo
outsl
cli
dec
pop
push
mov
jmp
push
bound
iret
sbb
ss
jae
aad
add
fldt
aam
jb
fs
jb
aaa
or
jge
or
jne
push
aad
cmpb
daa
out
push
push
dec
mov
pusha
add
add
push
clc
mov
lret
lods
sub
out
sbb
shlb
inc
cltd
jae
sub
test
mov
xor
stos
addr16
stos
inc
dec
loopne
repz
outsb
xor
mov
xchg
daa
mov
add
repz
loope
testb
out
adc
stos
hlt
cmc
mov
popf
aam
outsb
mov
add
xchg
pop
sahf
loope
push
push
cwtl
and
sub
mov
movsl
pusha
adc
mov
add
stos
and
pop
xor
in
ret
daa
adc
test
out
dec
push
ljmp
popa
sahf
push
movsb
sub
out
sbb
push
arpl
lods
mov
xchg
inc
sub
fists
xor
sub
add
push
adc
xor
test
shll
push
nop
adc
divb
in
or
mov
cmc
pop
add
add
and
int3
xchg
hlt
mov
out
mov
jb
out
lods
xor
ljmp
sub
scas
mulb
daa
movsb
outsb
icebp
outsb
int3
pop
clc
xchg
jmp
cmp
push
daa
testl
shlb
mov
cmp
fwait
xchg
add
inc
jg
pop
ljmp
jp
dec
add
ret
sub
jbe
push
mov
in
sbb
fucomp
and
lods
fstp
xchg
xchg
push
aaa
rcl
pop
sub
addr16
ret
pushl
mov
int3
fldl
mov
outsb
add
pop
push
daa
jo
int
xchg
sub
pop
sub
xchg
and
sub
cs
mov
mov
jae
mov
or
mov
adcb
std
negb
lret
mov
and
mov
jne
iret
repz
shlb
or
pop
and
movsl
add
inc
cmc
sbb
inc
and
pop
shl
mov
call
mov
xchg
stos
xor
jp
sbb
fstpt
outsb
xchg
mov
and
mov
cld
in
movsb
cmp
test
mov
aam
lock
pop
mov
hlt
fistpll
push
mov
and
lods
ds
imul
test
adc
pushf
or
hlt
push
ficoml
xchg
pop
das
dec
jge
pop
xchg
mov
sar
mov
inc
je
cs
jmp
and
cmpsl
pop
icebp
sbb
daa
aas
mov
pop
icebp
sbb
mov
mov
sti
insb
fmuls
movsb
jge
lahf
ds
cwtl
loope
mov
cmpl
or
fisubs
add
and
test
jbe
adc
stos
mov
inc
cmp
mov
and
jl
gs
inc
out
pop
mov
xchg
dec
fst
dec
pop
imull
push
or
in
sub
test
push
hlt
lret
sub
xchg
mov
jns
out
sub
movsl
outsl
shll
push
xchg
lods
jle
negl
add
mov
mov
pop
cmp
mov
and
mov
aaa
out
hlt
dec
push
sub
adc
push
xor
xor
jb
mov
jge
aam
test
xor
sti
fwait
push
ja
inc
les
mov
xor
push
imul
into
pop
cmp
mov
cmp
inc
cmpsl
jl
xor
popf
lds
lods
imul
lock
lcall
inc
cwtl
cltd
iret
push
dec
pushf
xor
mov
ljmp
imul
jo
cmp
inc
cmp
outsb
push
pop
mov
jmp
pop
shr
fisubs
mov
outsb
aam
pop
dec
cmp
imul
stos
sbb
xlat
xchg
mov
adc
or
sti
hlt
pop
scas
mov
mov
repnz
ficoms
fwait
inc
out
outsb
hlt
xor
pop
mov
fistpll
lea
insl
das
ror
aad
shll
ret
shl
roll
ss
mov
adc
mov
inc
dec
push
pop
ret
movsl
out
test
or
push
jbe
hlt
ja
sbb
in
loop
jle
and
add
push
lods
or
stos
dec
nop
dec
clc
scas
into
cltd
test
mov
fs
hlt
add
icebp
cmp
fcoml
sbb
movsl
lods
push
xchg
mov
in
ret
push
leave
mov
lcall
xchg
inc
sub
mov
andb
addr16
and
icebp
gs
cmp
sarl
lret
or
fstps
xchg
xchg
stos
xor
mov
cmpl
xor
icebp
push
fildll
cmp
or
inc
mov
mov
mov
or
jg
sub
and
test
mov
dec
sti
xor
xorl
cmp
xor
dec
xchg
pusha
pop
shll
and
sub
idivl
push
pop
and
es
jp
aam
sbb
stc
repnz
icebp
adc
lcall
aad
hlt
lea
sub
ret
inc
mov
loop
jae
sub
cmp
add
out
and
sub
and
jl
and
aad
mov
scas
cli
lock
cmp
pushf
enter
mov
jmp
lods
lcall
push
ret
sub
fnstcw
test
dec
add
or
inc
add
fisubrl
addr16
mov
cli
xchg
xor
inc
hlt
sub
je
mov
mov
xchg
dec
sub
mov
inc
leave
shl
ret
jo
movsb
push
jecxz
jo
sti
sub
add
fwait
mov
repnz
adc
test
jp
and
xchg
cmp
aam
ret
push
dec
and
adc
sub
sub
lock
lea
cmc
adcl
mov
cwtl
idivl
icebp
packsswb
stos
sti
mov
mov
jno
mov
inc
mov
pop
insl
aas
push
and
lret
mov
lret
mov
f2xm1
push
leave
cmp
adc
sbb
adc
pushf
adc
in
mov
mov
cmpsb
ss
cmc
jg
test
lret
leave
aam
dec
in
cmp
sbb
add
pop
add
shll
pop
jl
jne
sub
aam
and
pop
push
aad
pushf
cmp
gs
pop
cmp
or
mov
mov
mov
mov
push
sbb
sub
imul
sbb
jle
mov
lds
sarb
notb
popa
out
and
call
mov
dec
scas
cmp
and
cmc
add
je
popa
lcall
adc
jecxz
les
rol
rolb
leave
cltd
outsb
pop
xor
cmpsb
aam
inc
and
xchg
jecxz
dec
sub
mov
stos
pop
repz
and
and
out
out
inc
or
sub
hlt
es
push
enter
test
pop
pop
and
insl
in
stos
aas
cmp
daa
or
in
aam
inc
leave
mov
xor
icebp
stos
test
xchg
dec
sub
pop
cmp
arpl
inc
fldcw
test
push
sbb
jle
std
arpl
inc
stos
ror
sub
push
das
addr16
xor
and
inc
cmp
or
jno
cmp
pop
fiadds
int3
sti
lea
adc
add
stos
add
movb
mov
loope
sbb
sub
mov
push
pop
dec
dec
outsb
jae
sbb
sbb
rclb
cmpsb
push
stos
sar
rcrl
cmp
test
outsl
mov
leave
add
hlt
sub
inc
ror
mov
bound
push
cmp
in
arpl
movsb
mov
rcl
mov
inc
mov
sub
cmp
outsl
es
aad
or
ja
cmpsl
imul
xchg
xchg
sbb
dec
inc
notl
sbb
addr16
mov
or
pop
jae
std
ficomps
aad
cmc
xor
fs
int3
jle
fcmove
pop
mov
lret
adc
stos
lods
adc
idiv
lods
pop
xchg
sub
fwait
mov
call
pop
mov
imul
cmpl
mov
push
sub
mov
mov
popa
fwait
lods
bound
rcll
push
adc
repz
sub
in
cmp
aam
hlt
sahf
cmp
lock
and
test
jle
mov
cmpsl
mov
add
dec
into
arpl
add
xor
out
jle
in
lock
jmp
mov
or
movsl
xchg
ds
or
adc
lods
xlat
in
lahf
sub
sbb
jp
pop
pop
cmp
or
push
out
leave
je
lcall
lds
fldl2e
movsl
idivl
ret
add
cld
mov
movsb
test
adc
cmpsl
mov
rorb
or
jg
jmp
or
addb
lahf
es
sub
push
mov
stos
inc
loope
into
and
xor
test
imul
xchg
hlt
jle
dec
popf
cmpsl
stos
shl
imulb
lret
cmpsb
xchg
jmp
fisubl
cmpsl
xchg
add
and
pop
mov
repnz
outsb
pop
lcall
loope
push
mov
and
lret
jp
mov
jns
mov
mov
dec
imul
cmpsb
cmp
pop
incl
mov
inc
pop
in
xor
push
sbb
fwait
insl
mov
je
dec
sub
pop
and
cld
mov
dec
mov
xchg
roll
int
rcrb
dec
das
pop
mov
je
jo
ja
incl
fists
mov
sbb
sahf
out
cld
scas
push
sbb
push
sub
int
push
jbe
and
cmp
pop
int
es
mov
andl
test
push
cwtl
mov
in
jg
push
or
cs
pop
sbb
scas
dec
sub
sbb
inc
mov
push
insb
cmp
or
outsl
xor
addr16
inc
ret
rorb
jg
lea
xor
sub
mov
mov
ja
aad
pop
out
in
mov
lods
xor
loopne
cmc
mov
xor
push
xor
lds
jmp
pop
mov
addb
inc
sbb
add
cmp
sbb
or
scas
push
push
add
mov
mov
cmp
dec
je
into
xor
dec
insl
cmp
mov
adc
scas
fs
push
and
xchg
std
ja
shrl
stos
lcall
lretw
or
adc
movsl
jmp
daa
cli
scas
jle
dec
imull
insb
aam
pop
mov
xor
push
stc
lcall
cmpsl
add
xorb
or
mov
pop
push
scas
or
push
cmc
loope
xchg
mov
popf
sbb
sahf
mov
inc
out
push
jecxz
inc
sub
movsb
mov
pop
sub
dec
pop
xor
in
je
ret
sahf
jp
ret
pop
xlat
mov
mov
ds
testb
push
pop
inc
cmpsl
pop
mov
dec
int
jo
loop
adc
dec
xchg
sbb
dec
nop
test
pop
movsb
cmp
sub
cmp
sahf
or
iret
popa
int
scas
xchg
repnz
push
cmp
pop
and
push
out
xchg
cmp
ljmp
and
xchg
imul
pop
inc
movsl
je
sub
stos
lahf
ss
insl
xlat
cmp
sub
mov
cmp
pop
jg,pt
out
shl
loope
and
cmp
mov
dec
data16
cld
add
jecxz
push
adc
daa
mov
sub
outsb
inc
adc
int
outsb
mov
add
sub
mov
filds
fbld
movsl
sub
bnd
outsl
ficompl
lret
adc
mov
movsb
cmpsl
cld
pop
mov
mov
pushf
cmp
out
push
pop
jae
cld
mov
adc
cli
mov
movsl
test
inc
loope
stos
scas
and
and
outsl
mov
xor
add
outsl
loop
mov
lods
push
mov
bswap
adc
js
mov
mov
addr16
and
stos
or
rorl
pop
enter
cmp
rclb
xor
or
out
pusha
movsb
pushf
stos
js
popa
dec
and
out
inc
inc
mov
jno
imul
fimull
les
sub
mov
sarb
mov
xchg
loopne
stos
jae
inc
mov
jmp
add
loop
push
jo
fwait
and
in
mov
hlt
mov
sub
adc
pushf
rcll
mov
xchg
into
dec
enter
sub
movsl
mov
inc
test
movsb
scas
dec
cmp
hlt
sub
test
and
inc
dec
adc
mov
add
shlb
mov
inc
insl
bound
stos
ljmp
dec
lahf
call
movsl
and
mov
popa
cmp
ss
push
ja
hlt
push
scas
inc
pop
leave
xchg
mov
dec
jl
xlat
lock
cli
arpl
stos
xchg
stos
out
and
movsl
add
jecxz
jge
movsl
ffree
ja
lcall
sbbl
out
test
adc
xchg
hlt
adc
lret
stos
inc
in
fdecstp
scas
and
mov
and
or
add
mov
ret
sub
dec
xor
and
sub
int
loop
and
sarl
icebp
lret
mov
adc
in
les
mov
xor
add
movsl
jp
je
mov
cmp
pushl
sub
mov
into
in
sub
add
enter
push
arpl
or
pushf
xor
inc
mov
mov
divl
mov
ret
fwait
adcl
cmp
cmpsb
popf
mov
hlt
scas
adcl
cmp
mov
xchg
cmpsb
decl
daa
imul
push
addr16
jecxz
xor
xchg
dec
cmp
neg
xor
stos
fiadds
push
pusha
adc
repnz
ljmp
inc
sub
int
inc
xchg
push
xor
inc
cmp
jle
outsb
es
cmc
mov
adc
std
xor
mov
les
shll
add
inc
ret
inc
jl
adc
mov
dec
inc
jne
shlb
ja
call
jne
into
jg
sbb
adc
add
sub
iret
ja
sbb
out
dec
cli
sub
inc
adc
lret
and
mov
lock
out
stos
dec
xlat
sbb
das
or
je
les
ret
enter
addb
shlb
les
and
dec
and
in
repz
mov
inc
andl
scas
xchg
sub
lcall
imul
pop
in
mov
jnp
scas
and
movsb
cli
xlat
add
ds
fbstp
adc
dec
imul
daa
lea
push
pop
aam
jbe
adc
loopne
and
out
stos
ss
rorl
jp
mov
xor
xor
add
adc
mov
orl
daa
and
or
sbb
into
and
mov
adcl
stos
pop
insb
addr16
test
aad
inc
mov
cmp
push
jo
lret
sti
leave
cli
mov
xor
int
incl
divb
mov
int
leave
and
hlt
ret
lcall
push
inc
cs
test
ret
xchg
insl
sub
lods
mov
loop
sahf
mov
test
and
mov
pushf
mov
adc
lock
mov
ljmp
jno
cmp
push
jecxz
and
cmp
and
push
or
push
cmp
ja
mov
js
inc
or
enter
mov
ss
jb
nop
fildll
mov
pop
cli
cmp
sub
cmc
rcrb
cli
int
repnz
add
push
pslld
inc
sahf
dec
ret
jmp
loopne
cli
nop
negb
movsl
test
sti
sub
fistl
adc
mov
enter
js
mov
in
xchg
adc
sub
mov
mov
ss
jge
and
pushf
pop
repz
aam
push
pop
rclb
push
push
mov
negl
test
cs
inc
dec
pop
in
nop
mov
js
hlt
add
push
cmp
cmp
and
or
pop
mov
leave
icebp
xchg
sahf
add
test
into
or
cld
mov
adc
das
int
inc
shlb
loop
mov
outsb
and
and
arpl
mov
mov
sbb
cmpl
daa
xlat
add
dec
test
xor
add
je
push
jmp
into
jne
cld
cmp
sbb
push
int
and
scas
adc
jl
dec
repnz
xor
add
jg
lahf
jb
mov
jg
and
add
dec
mov
mov
push
mov
in
xor
test
or
imul
xor
jge
cmp
lods
sbb
xchg
mov
nop
hlt
mov
push
ljmp
stos
hlt
enter
mov
mov
int3
and
js
subb
add
sahf
sbb
sarb
fdivr
cmp
lea
adc
daa
push
lods
shlb
mov
mov
call
out
sbb
loop
imul
in
leave
xchg
imul
shll
mov
mov
out
mov
pop
xor
in
stos
sahf
and
ds
cs
outsl
out
daa
lock
les
sub
js
sahf
test
mov
and
mov
mov
xor
outsl
icebp
out
sub
mov
inc
add
cmc
mov
stos
mov
cmpsl
mov
lods
leave
push
pop
mov
cmp
mulb
xor
movsl
jae
arpl
lods
push
in
arpl
sbb
mov
imul
lods
sub
aam
fwait
push
bound
lcall
and
les
add
sub
aad
mov
icebp
push
sub
stos
lret
aaa
movsl
mov
popa
pop
mov
stos
test
xlat
or
xchg
push
cmp
lcall
mov
dec
daa
xchg
pop
xor
jle
add
inc
enter
fimull
mov
call
scas
subl
sub
fsubrs
sub
mov
sub
das
fwait
subl
dec
or
shrl
movsb
mov
inc
jmp
push
pop
xchg
and
das
push
cmp
cmp
add
dec
pop
bswap
call
xchg
cmp
push
mov
xchg
cmp
push
and
pop
insb
leave
daa
push
sub
pop
cmc
lcall
and
sub
xchg
push
dec
push
cmp
das
or
dec
repz
loopne
dec
push
movsl
jmp
pop
mov
loope
push
push
sub
into
mov
push
das
leave
outsl
mov
push
lcall
push
inc
and
outsl
outsb
sub
push
in
fbstp
and
scas
loope
push
test
cmp
insb
mov
fisubrs
aas
out
notl
aad
pop
clc
insb
push
bound
mov
sub
insb
in
sub
cmpsl
popa
in
pop
test
push
adc
sub
sub
insl
cmp
mov
jns
ljmp
addr16
mov
stc
or
jmp
cmpsl
enter
dec
stos
xor
pusha
out
mov
stc
and
gs
lods
in
ljmp
out
jmp
lret
ss
stos
xchg
aas
cmp
xchg
movsb
dec
cli
jmp
lods
and
imul
in
out
and
pop
mov
sub
mov
pop
in
xor
out
mov
mov
outsl
out
and
out
test
sub
mov
mov
loopne
fnstcw
in
mov
out
stos
mov
in
or
mov
push
lock
or
pop
in
cmpsb
xor
mov
cmp
hlt
adc
inc
insl
xchg
xor
pushf
pop
jmp
cmp
sbb
clc
loop
fldl
repnz
jo
arpl
movsb
jbe
jle
sub
fcmovne
push
sbbl
mov
pop
push
rorl
aam
insb
and
lods
aad
sbb
add
mov
sub
mov
int
sbbl
daa
pop
mov
dec
xorb
aad
cmpsb
mov
mov
ficompl
add
add
fiaddl
gs
mov
mov
jecxz
movsb
add
sbb
cwtl
nop
pop
js
rol
push
ret
jne
dec
inc
mov
int3
inc
int3
das
jnp
hlt
icebp
jge
xchg
adc
mov
dec
add
sahf
mov
mov
scas
fistl
out
movsl
mov
jl
pop
jg
pop
jo
daa
xor
popa
sarl
je
mov
push
loopne
add
popa
add
sub
sahf
inc
subl
out
push
repnz
pop
mov
xor
stos
sub
or
mov
sub
fstps
mov
cmp
mov
andl
ss
mov
sti
cmp
iret
lods
test
mov
jno
ljmp
mov
mov
mov
lock
stc
mov
mov
iret
in
pop
bound
pop
cmp
out
stos
in
out
lret
cmp
xor
pop
xchg
push
les
aam
mulb
add
js
pop
lds
cmp
orb
stc
cli
movsb
cmp
je
pop
movsl
or
sub
and
jno
mov
mov
out
sbb
mov
mov
das
loope
pop
and
fwait
push
and
dec
nop
int3
daa
mov
movsl
arpl
rcrl
out
fs
sub
stos
popf
repnz
aas
iret
daa
jb
outsl
add
inc
je
divb
pushf
bound
je
ja
jmp
divb
shl
and
out
rcll
ret
jb
inc
lods
mov
push
xchg
mov
add
lock
cld
sub
out
push
sub
xlat
loop
popa
inc
jmp
or
std
mov
int
bound
push
movsl
jp
xchg
inc
data16
push
dec
mov
adc
and
fiadds
inc
jmp
pop
xchg
mov
aas
cmpsb
lcall
xchg
out
jp
mov
scas
cmp
lods
pop
pop
mov
mov
fcomps
movsl
mov
scas
cmp
out
hlt
cmp
cltd
and
inc
lahf
sub
fcmovb
dec
xchg
test
xchg
lret
xchg
cmp
xchg
nop
into
and
lods
das
xchg
les
push
mov
imul
test
xchg
cmpsl
lods
pop
imul
inc
xlat
push
mov
imul
xor
add
sub
ljmp
das
sub
pusha
mov
sub
cli
add
and
cld
test
fnsave
pop
add
jne
imul
lods
and
sbb
pop
loope
inc
daa
jns
fbld
mov
jecxz
loopne
xlat
aad
sub
sub
xchg
mov
sub
out
pop
int
lods
sub
or
add
notl
scas
in
push
iret
xlat
xchg
push
sub
pop
lods
jno
mov
imul
stos
dec
sub
sub
out
shr
push
fstps
xchg
push
xchg
xchg
in
push
and
push
cs
jmp
push
push
sub
push
pop
push
cmp
gs
inc
dec
sub
mov
push
scas
cmp
mov
mov
adc
mov
int3
aad
daa
mov
leave
pop
mov
jns
out
push
in
push
out
ljmp
fisubrs
inc
mov
mov
mov
sub
push
mov
scas
stos
sub
loop
push
pop
lods
in
xlat
int
ss
dec
outsl
imul
push
sub
cmp
movsl
pop
push
lea
sub
enter
ss
pop
fs
jb
mov
cmp
sub
sub
fbld
dec
scas
in
xchg
int
rclb
xlat
outsb
stos
sub
mov
cmp
xor
push
xlat
stos
sub
test
push
mov
sahf
jmp
push
outsb
ljmp
xlat
aad
in
test
push
dec
scas
and
xlat
push
mov
aad
notl
adc
sub
outsl
xor
rorb
mov
pop
mov
ss
mov
std
adc
scas
cmp
add
add
pop
sub
rol
xchg
xor
push
mov
scas
cmp
xor
pop
fcoms
js
jo
xchg
pop
divl
push
jge
movsl
adc
adc
jp
iret
sbb
ret
movsl
imul
pop
loope
pop
mov
imul
or
and
fidivl
mov
xchg
pop
cli
push
xchg
mov
popf
mov
ret
or
ret
sub
ret
cmpsl
jb
jp
mov
shlb
mov
fidivl
xor
mov
pushf
out
mov
sbb
jp
aad
arpl
add
mov
ss
mov
incl
pop
fsts
xor
andl
lods
scas
or
loopne
cs
adcl
and
sub
mov
cmp
or
mov
fbstp
xor
and
stos
adc
sbb
xchg
lods
into
ret
ss
xchg
sahf
and
mov
jns
aas
cs
rcr
je
mov
or
cld
mov
addr16
fisubs
dec
mov
in
popa
pop
and
stos
or
inc
sbb
arpl
insl
ja
cltd
lods
fbld
shl
test
das
popa
scas
lret
push
mov
sub
add
imul
insl
shrl
sub
mov
add
add
adc
movsb
in
les
xor
pop
aas
xor
in
cmpsl
or
cmpsb
ja
aad
dec
stos
pop
mov
in
insb
push
xor
lcall
sub
arpl
add
mov
pop
cmpsl
repnz
xor
mov
and
xchg
mov
jmp
movsl
add
and
stos
add
out
outsb
jb
arpl
mov
loopne
cmp
cmp
sub
add
out
mov
lods
pop
movsb
xor
push
mov
mov
hlt
arpl
punpcklwd
mov
movl
nop
pop
mov
xchg
xor
je
xlat
inc
hlt
sbb
dec
jg
test
sbb
adc
xlat
push
std
mov
inc
xchg
xchg
adc
pop
int
xchg
aad
mov
scas
aam
push
pop
sub
mov
sbb
loope
out
lds
fcoml
inc
push
ljmp
push
add
ret
loopne
outsb
stos
in
ret
aas
ja
enter
push
mov
aad
mov
add
push
jle
test
xlat
out
jne
movsb
and
mov
mov
aad
insl
push
or
ljmp
or
sbb
xor
sub
pop
mov
movsl
push
les
sbb
cmp
mov
inc
xchg
dec
ficompl
inc
inc
icebp
insl
out
sub
jb
scas
hlt
aad
fisubrs
mov
pop
lods
mov
dec
daa
out
fldcw
loope
in
decb
stos
add
mov
mov
or
adc
push
test
push
xor
jbe
adc
adc
daa
inc
orb
out
dec
je
mov
push
cmp
test
addr16
test
sub
stos
ljmp
inc
in
aad
add
insl
mov
bound
sub
cmc
movsb
loop
sbb
psllw
scas
mov
aam
xchg
in
rclb
push
fsubs
icebp
jecxz
inc
in
in
rcr
cmpl
addl
outsb
bound
lods
cmp
stos
sub
repnz
pop
insl
xchg
mov
mov
mov
xchg
or
stos
negb
into
test
icebp
leave
inc
scas
sbb
lods
stc
push
jle
out
xchg
sbbb
neg
xchg
xchg
cli
loopne
fucom
cmpsb
pop
pop
ja
imul
dec
jne
ljmp
mov
loope
je
std
mov
aad
sbb
popf
push
jp
outsl
or
scas
ror
jmp
pop
cli
jmp
mov
shrl
mov
loope
cld
add
mov
je
mov
les
and
mov
or
inc
cmpsb
cmp
jmp
inc
mov
sub
outsl
mov
test
ret
xor
cmp
inc
push
aaa
pushf
in
pop
mov
int
mov
push
xor
xchg
aas
inc
mov
out
mov
aad
lret
xchg
insb
scas
addr16
mov
faddl
leave
inc
jno
mov
cmp
xchg
xor
mov
cmp
test
adc
out
les
mov
pop
adc
mov
loope
sub
adc
inc
cs
je
je
pop
sub
sbb
xchg
mov
mov
stos
sub
pop
sbb
inc
pop
scas
mov
inc
test
and
xor
xor
xor
test
mov
incl
sub
push
jns
ret
jno
mov
jo
cmpsb
dec
mov
aad
mov
inc
mov
jae
out
xchg
cmp
pop
mov
arpl
loope
shlb
lahf
mov
in
dec
filds
dec
adc
loop
sbb
jnp
pop
pushf
call
mov
jbe
inc
mov
cmp
mov
mov
pop
add
lret
test
test
mov
lret
movsb
scas
int3
ss
outsb
mov
dec
loop
sub
jg
mov
fsts
dec
ficoms
enter
jmp
fadds
dec
xchg
insb
push
push
shrb
inc
jne
sub
in
sub
pop
int
dec
test
dec
inc
jae
insl
hlt
loope
adcb
add
test
arpl
and
or
push
fcoml
mov
loopne
das
mov
mov
out
add
mov
jb
push
inc
ret
inc
dec
or
mov
inc
loope
je
mov
and
in
jo
iret
xor
push
lret
int
movsl
addb
insl
pop
hlt
fbld
inc
cltd
sbb
ds
ljmp
pop
pushf
repz
dec
in
or
rcrb
xlat
inc
jmp
mov
xchg
icebp
and
out
add
add
xchg
mov
adc
cmp
push
push
les
lock
sti
pop
inc
std
sbb
testb
mov
lds
pop
dec
xchg
aam
add
adc
lea
add
insb
int
xor
xor
inc
cmp
mov
cmpsl
pusha
out
cmp
push
movsb
cmp
mull
bound
jmp
outsb
xorb
hlt
int3
cli
nop
or
insl
pop
pop
dec
inc
ret
call
mov
stos
sahf
push
mov
push
into
adc
cmpsb
sub
sub
sarb
adc
out
mov
outsb
arpl
xor
enter
mov
push
add
mov
add
gs
outsb
mov
lods
fiaddl
mov
dec
sarb
stos
in
fisubrl
xor
stos
jg
jmp
shll
jbe
push
ret
mov
ljmp
movsb
loope
xlat
sar
lret
jns
cmp
xor
mov
je
ficompl
mov
mov
dec
les
cmpsl
lea
cwtl
in
cmp
test
pop
sub
cmp
mov
mov
add
sbb
jecxz
and
js
or
aam
mov
ljmp
ss
ret
sub
push
mov
imul
xchg
sti
xlat
sub
add
lods
xchg
xchg
dec
mov
adc
inc
ret
xchg
inc
dec
sahf
iret
loopne
movsb
jb
jg
sahf
mov
mov
mov
add
test
in
xor
and
das
mov
pop
pop
loop
xchg
push
leave
add
add
mov
adc
lahf
jl
mov
fnstcw
xchg
scas
ret
call
cld
xchg
mov
cmp
sub
push
sbb
cmpsb
and
mov
mov
and
out
add
stos
xchg
push
xchg
dec
imul
adcl
icebp
pop
xchg
inc
push
push
xchg
js
xchg
sbb
out
push
mov
imul
popf
shrb
and
sub
sub
test
repz
push
jmp
sub
lret
mov
lret
cmp
xlat
mov
push
repz
push
popa
cmp
push
sub
push
leave
lret
stos
and
test
xchg
imul
mov
mov
xchg
leave
stos
pop
stos
xor
iret
jecxz
sub
aad
push
daa
sub
aaa
fcoms
xlat
insl
lret
ss
mov
and
pop
arpl
idivl
push
hlt
stos
xchg
mov
push
call
das
push
out
aad
add
lcall
imull
imul
ja
decl
pop
jnp
pop
daa
sub
aaa
adc
popa
leave
test
mov
jg
sub
xchg
sub
push
mov
pusha
stos
out
and
test
mov
and
notl
jecxz
add
jno
xchg
push
lods
mov
outsb
in
push
ljmp
stc
loope
call
aad
lods
xchg
shl
and
mov
cmp
jns
movsl
push
jmp
outsl
xlat
std
scas
mov
scas
dec
xchg
sub
and
stos
mov
popa
fsubrp
daa
das
mov
mov
jns
mov
push
pop
movsb
test
cmp
test
insl
mov
sub
mov
loopne
mov
cs
mov
mov
mov
out
movsb
dec
pop
shrb
mov
push
sub
mov
push
mov
loop
fmul
push
cmp
mov
xchg
das
insl
scas
cmpsl
dec
push
pop
xlat
call
in
pop
xor
loopne
sub
push
leave
mov
sub
loop
cmp
mov
mov
cmp
xchg
bound
adc
pop
addb
jge
sahf
pop
jecxz
inc
popa
stos
lods
pop
mov
cli
out
adc
xor
mov
cld
jnp
in
movsb
lcall
mov
mov
inc
pusha
sub
cmp
je
outsb
sahf
inc
xor
push
push
cmpsb
scas
dec
jle
pop
sbb
jbe
push
cld
popa
test
leave
test
mov
cmp
or
inc
mov
mov
jmp
dec
loope
inc
call
cli
ss
insb
mov
inc
pop
ljmp
filds
aad
xchg
loope
in
lds
push
test
adc
insb
jmp
mov
mov
or
les
mov
xor
aas
into
repnz
insl
ljmp
stos
add
mov
pop
fbstp
xor
pop
enter
inc
inc
pop
lahf
loope
adc
xor
es
addr16
ljmp
sub
jmp
mov
stos
scas
iret
cli
ficompl
aad
int
inc
lcall
inc
hlt
add
aam
out
movsl
aas
push
dec
push
xchg
fmulp
fstl
test
pop
sub
ja
gs
sub
shr
aad
mov
sub
mov
inc
call
xchg
add
nop
pop
stos
arpl
loopne
jg
inc
push
jl
ret
fcompl
add
dec
sub
mov
lcall
inc
or
push
pusha
push
outsb
test
hlt
jae
scas
push
std
jmp
jnp
push
jae
inc
mov
cmp
pusha
mov
mov
repz
mov
pusha
push
mov
sahf
push
cmp
xchg
repnz
je
int3
aad
sarb
lret
pop
xor
xchg
sub
xchg
lcall
jl
jbe
and
enter
xor
sbb
add
jmp
inc
je
in
sub
sub
pop
and
insl
jmp
push
mov
movsl
mov
mov
inc
filds
sub
addr16
sub
inc
jle
add
xchg
cmc
sub
jecxz
jl
in
push
mov
shlb
loop
filds
in
movsb
jl
sbb
filds
test
cmp
aaa
mov
jp
movsb
dec
cmp
xchg
outsl
push
insl
push
mov
dec
sub
mov
fisttps
into
xor
push
nop
negb
xchg
lahf
shrl
inc
pop
bnd
outsb
or
push
cmp
test
and
test
dec
mov
out
les
rolb
insb
mov
mov
xchg
movsl
jg
arpl
lret
popa
xor
xor
dec
jne
xchg
pop
add
movsl
jbe
sub
scas
inc
sub
stos
test
push
jle
test
mov
and
dec
movsb
mov
add
rolb
xchg
jno
push
rcrl
clc
push
sahf
cmc
add
loope
insl
ds
xchg
add
cli
inc
xor
dec
mov
insl
or
cld
movsb
mov
mov
lahf
out
in
jl
xor
adc
xor
fs
mov
mov
cmp
mov
cld
pop
cmp
outsb
fists
sub
sbb
mov
sub
sub
sub
cs
add
sbb
sahf
sub
int
mov
mov
hlt
daa
fisubrl
sub
mov
and
fstpt
filds
add
sahf
xor
cmpsl
lahf
testl
test
jb
xor
rcrb
es
add
inc
cmp
fbstp
sbb
pop
xchg
sbbl
add
subl
and
mov
jae
hlt
lahf
lods
mov
xchg
and
mov
push
lods
push
stos
cmc
pop
pop
adc
mov
jmp
out
sub
test
pop
mov
or
subl
mov
xorb
cs
shrl
divb
stos
movsl
and
cs
shll
mov
xchg
and
les
call
cmp
inc
loop
or
adc
ljmp
loopne
sub
lea
sbb
outsb
int
jg
dec
xor
mov
push
imul
fisttpl
les
cmp
iret
push
mov
aam
ret
jae
pushf
bound
rolb
cli
scas
sub
adc
mov
ret
fdivrs
loopne
lcall
push
mov
inc
test
pop
dec
mov
jmp
std
pextrw
sbb
ja
movsb
inc
cmp
sbb
jg
arpl
push
jno
sbb
sub
repnz
dec
lock
cmp
shrl
outsb
mov
pusha
cmp
outsl
in
cli
xor
adc
and
std
movsl
mov
or
sbb
popf
and
cmp
push
inc
movsb
pop
or
jmp
popa
std
fisubl
dec
pop
xlat
add
and
sahf
loop
cmp
imul
in
jnp
or
fcomip
mov
dec
lods
mov
fs
and
pop
nop
mov
mov
cmp
jns
xchg
dec
cmp
mov
or
mov
sub
mov
enter
adc
cmc
stos
lock
xchg
inc
mov
ror
pusha
cwtl
cmp
sbb
pop
ja
and
jge
repnz
push
incb
push
leave
fcomip
push
cmp
cli
cmpsb
push
rcrl
dec
bound
aam
mov
jbe
cmp
sbb
dec
pop
mov
fidivrl
fxch
pop
inc
test
adc
dec
pop
push
dec
add
pop
ss
movb
lods
mov
xorl
add
call
aaa
pop
nop
movsb
pop
cld
inc
push
iret
clc
push
ljmp
loopne
mov
jp
sbb
gs
push
ret
dec
push
pusha
mov
mov
mov
popl
and
imul
xor
mov
pop
out
pop
add
inc
sub
inc
hlt
jne
push
jae
imull
std
push
test
sub
hlt
push
push
pop
scas
and
je
adc
loop
mov
add
fs
stos
dec
dec
pop
repz
xchg
in
in
xchg
mov
and
stc
xchg
mov
shl
cs
loopne
mov
es
cmp
int3
outsb
pop
and
jnp
xchg
inc
aad
les
xorb
sub
cli
jmp
inc
out
fsubp
sbb
out
lcall
sub
adc
rcrb
test
jl
xor
les
mov
stos
icebp
xchg
push
lods
lcall
sbb
mov
xchg
out
jecxz
sub
cmp
leave
sub
push
scas
xchg
or
mov
hlt
aas
xor
adc
rol
cmpl
push
pop
lret
or
lcall
cmp
xor
cmp
aad
jg
push
mov
mov
and
lahf
push
in
out
sti
and
pop
fstpt
insl
inc
ret
shl
xor
ret
jg
stos
jns
iret
out
stos
popa
dec
fld
imul
and
jb
jecxz
mov
dec
fwait
inc
push
dec
shr
xor
cmp
push
mov
int
testl
pop
cmp
daa
ljmp
lret
mov
jge
dec
or
jns
movsb
rorl
mov
mov
sub
ffreep
cmp
or
mov
pop
movsl
jno
aaa
fsubp
inc
rcr
mov
jp
mov
mov
jg
stos
and
push
pop
cwtl
popf
jb
inc
push
inc
jno
xor
jbe
jmp
inc
mov
mov
sub
je,pn
int3
in
sbb
xor
in
mulb
lock
xor
inc
dec
neg
outsl
ljmp
jno
rcl
stos
movsl
push
xor
inc
or
jmp
ss
push
les
je
hlt
pop
sub
jno
xor
mov
ss
test
arpl
imul
sbb
test
jno
fists
arpl
pop
push
cli
aaa
repnz
mov
bound
mov
adc
insl
fsts
mov
enter
fnstenv
push
leave
mov
inc
mov
or
in
xchg
mov
mov
lret
es
ret
hlt
shll
shl
mov
ljmp
pop
mov
in
roll
adc
xor
push
scas
jl
out
sahf
cs
and
mov
pop
int3
dec
rcl
or
stos
mov
add
inc
ret
aam
out
xchg
sub
push
out
inc
stos
inc
int
scas
in
inc
and
test
insl
test
sahf
cli
scas
dec
sub
mov
stos
movsl
push
sbb
icebp
mov
fs
push
mov
and
pop
sub
dec
pushf
lret
shr
fptan
adc
leave
mov
jp
lods
scas
ret
mov
mov
sahf
cmp
push
jp
cmpsl
les
sbb
jecxz
xchg
fidivs
lock
mov
mov
inc
aad
and
jge
and
ret
mov
add
mulb
jbe
sub
and
shll
sub
add
bound
inc
add
push
add
je
mov
pop
jp
outsb
jb
hlt
push
inc
fimuls
mov
outsb
pop
cs
sub
mov
xchg
int
jg
in
xchg
scas
mov
sub
jne
jnp
addr16
insl
and
sub
popf
scas
scas
scas
mov
mov
pop
les
movsl
xor
popa
inc
cmp
nop
ss
dec
out
outsb
and
dec
into
and
add
dec
sub
enter
mov
push
dec
popa
das
sub
into
pop
in
and
dec
jle
mov
inc
test
add
ss
popa
bound
pop
stos
popf
jne
jge
lods
iret
clc
sub
mov
insb
push
dec
or
scas
sbb
add
inc
cltd
pop
je
in
outsl
pop
frstor
repz
cmp
xor
xchg
insl
mov
mov
pusha
divb
jmp
add
or
sub
or
cmp
mov
dec
addr16
shrl
push
mov
mov
inc
insb
cmpsb
and
xor
mov
jmp
mov
and
push
push
rep
in
mov
xchg
inc
or
mov
aas
cmp
addr16
inc
push
push
out
mov
pop
add
cmpsb
test
xchg
lcall
into
stc
rcl
push
loope
and
leave
dec
movsl
lods
loopne
jne
repz
jl
repz
call
push
fsubrl
pop
dec
ret
pop
cmp
push
inc
mov
rclb
push
in
mov
faddl
xor
dec
xlat
dec
adc
test
inc
mov
loop
clc
movsl
push
lcall
push
stos
dec
jbe
cmp
xor
test
out
loopne
add
in
sbb
mov
in
mov
lds
pop
sbb
ja
fcmovb
mov
sti
jae
scas
fsqrt
mov
out
in
rcrl
stc
sbb
push
js
push
fidivl
call
mov
rol
movsl
enter
lret
imull
push
bound
lea
mov
in
xchg
pop
mov
inc
mov
adc
jle
stos
pop
push
xchg
mov
add
das
sti
mov
push
add
aaa
push
ljmp
and
cmp
sub
and
in
sahf
mov
inc
push
sbb
push
testb
insl
sti
xor
adc
pop
cmc
jb
xlat
jle
dec
jge
adc
stos
xchg
push
imul
and
divb
jae
inc
daa
xchg
mov
pop
lahf
test
out
dec
sbb
or
mov
sub
xchg
lret
pop
xchg
imulb
adc
jmp
movb
add
cmp
xor
sub
push
jecxz
clc
ds
push
jg
or
dec
sbb
sti
outsl
fnstsw
cs
sub
mov
lds
cs
cmp
xchg
inc
cwtl
bound
nop
cmp
leave
push
push
test
das
adc
sbb
or
sahf
je
sbb
lret
mov
repnz
or
sbb
jge
dec
xor
or
daa
inc
test
pop
cmp
push
mov
mov
das
loop
push
mov
in
or
movq
push
dec
pop
push
push
or
inc
xchg
or
arpl
or
lods
loope
adc
daa
int3
mov
iret
jge
cli
xchg
es
fbld
aas
dec
mov
sarl
jmp
jmp
test
lods
cmp
add
fsubs
in
data16
shlb
aas
cmp
insb
lcall
and
mov
mov
cmpsl
add
xchg
xor
mov
mov
les
imul
add
push
sub
call
xchg
xchg
dec
ja
sub
jnp
aaa
ret
test
arpl
out
inc
hlt
es
enter
iret
daa
or
aad
pusha
decb
xor
lret
push
jg
cld
dec
movsl
mov
dec
inc
mov
stos
fimull
out
xchg
lods
arpl
sub
mov
enter
fildl
push
xchg
xor
mov
cld
outsb
stc
push
fsts
lods
leave
dec
iret
mov
or
popf
mov
push
dec
cld
mov
push
stos
pop
stc
or
and
push
roll
add
mov
stos
in
out
sub
scas
push
mov
cmp
loopne
pop
pop
stos
pushf
cmpsl
aad
out
ja
mov
testb
xor
jp
or
mov
jmp
xor
mov
into
add
mov
inc
mov
movsb
xlat
std
mov
cmc
and
fildl
mov
scas
insb
repz
pop
movsb
mov
xchg
inc
add
lea
mov
test
in
lcall
ja
mov
imul
jge
inc
push
xlat
movsb
movsl
and
ss
push
and
mov
add
mov
pop
ss
aaa
daa
sub
fwait
nop
lret
cmp
add
shrl
cltd
sbb
or
test
xchg
lods
jg
push
nop
into
ror
or
mov
mov
movsl
fisubrl
inc
mov
enter
mov
pop
mov
sub
mov
pop
dec
imul
mov
jle
inc
jb
ljmp
jle
inc
dec
pop
xor
push
ja
jecxz
ja
jno
pop
shl
sub
sub
mov
test
mov
repz
xlat
push
jo
xlat
in
movsl
imul
or
sbb
mov
mov
sub
insl
jmp
out
xor
jge
fstl
addps
int
fs
mov
pop
pop
rcrl
je
into
inc
out
pushl
mov
insl
loopne
sarb
sbb
mov
out
aad
test
in
mov
mov
jl
cmp
imul
mov
mov
dec
jae
jbe
mov
mov
lea
test
and
and
mov
arpl
xchg
push
sub
and
mov
or
sti
add
ret
lock
xor
sub
push
in
sub
in
sub
out
dec
xor
bound
and
cmp
mov
data16
movsl
lds
clc
mov
dec
add
adc
xchg
sub
popa
ss
enter
inc
or
jb
push
les
dec
cwtl
shll
or
xchg
xchg
push
lds
and
test
test
testb
and
push
jmp
les
mov
push
inc
in
add
test
adc
repz
adc
sub
dec
dec
aam
jo
pop
push
mov
adc
shrb
fisttpll
mov
cs
cltd
xchg
mov
pop
repz
xchg
pop
test
imul
adc
and
je
fldcw
dec
pusha
inc
push
mov
mov
cmp
inc
mov
les
add
js
dec
inc
dec
arpl
mov
sub
and
sbb
inc
insl
les
insb
and
imul
cmp
add
and
test
outsb
add
add
mov
iret
shll
pop
test
sbb
jbe
and
ljmp
pop
das
mov
iret
and
sbb
adc
mov
es
push
inc
push
ffreep
imul
rcrb
adc
jl
add
push
nop
adcl
jno
mov
pop
sub
pop
dec
add
mov
xor
xlat
repz
push
mov
xchg
push
adcl
cmpsb
mov
fwait
mov
jne
leave
xor
incl
push
imul
popf
and
sbb
mov
sbb
imul
adc
mov
mov
into
fiaddl
andl
shrl
pop
and
nop
adc
push
push
repz
pop
sbb
add
mov
loopne
cmp
inc
sbb
repz
cmpsb
dec
pause
pop
enter
je
sbb
fs
inc
inc
fcomi
xlat
cmp
jmp
repz
imul
xchg
mov
push
adc
xor
pop
or
xchg
cmp
cwtl
lret
push
xor
mov
mov
dec
and
jecxz
les
dec
mov
les
jbe
test
ljmp
pusha
or
insl
mov
movsl
push
popf
test
mov
add
jbe
negl
adc
pmulhw
adc
jbe
rcrl
test
ss
push
test
mov
scas
pop
test
lea
mov
filds
adc
mov
add
ljmp
dec
sub
sub
mov
pop
pop
movsb
push
sbb
testb
lock
repnz
sbb
clc
sub
iret
push
in
mov
add
insl
mov
add
and
ror
ljmp
mov
mov
mov
pop
sub
sub
push
push
ljmp
and
push
sub
or
jno
sub
jno
scas
ss
test
push
inc
mov
fsubr
and
mov
sarb
sbb
pop
push
out
jmp
repz
sbb
leave
lock
inc
cmpsl
add
push
shl
add
push
hlt
mov
xor
jbe
sub
push
jbe
arpl
stos
aad
outsb
adc
fcomi
or
add
mov
cs
jns
out
adc
pop
out
adcb
mov
pop
push
mov
outsl
inc
or
test
pop
pand
fisubrl
mov
jge
dec
jmp
lds
push
and
mov
fiadds
test
xchg
scas
mov
test
jns
mov
out
inc
add
mov
sbb
cmp
push
lods
repz
loopne
dec
pop
push
inc
add
push
lret
add
testl
fwait
adc
sbb
imull
into
popl
imull
fbstp
lret
sbb
and
mov
lahf
pop
lds
bound
mov
fs
jbe
xchg
xlat
mov
shll
mov
pop
loopne
xchg
mov
xchg
shr
clc
inc
aad
jecxz
std
mov
dec
jo
mov
lds
test
and
jg
mov
into
pop
add
js
jo
mov
movsb
mov
test
xlat
pop
push
test
mov
or
aad
and
add
adc
cli
fadd
mov
adc
push
push
xlat
adc
push
jg
gs
cmpsl
add
imul
mov
iret
add
push
add
out
add
cmpsl
xchg
adc
pop
cld
loopne
movsl
ss
inc
icebp
xor
sub
xor
add
push
dec
loopne
add
test
inc
popf
or
mov
dec
je
dec
xor
pop
cmp
mov
mov
sub
push
sbb
frstor
lock
ret
fists
lds
pop
dec
stos
ss
mov
inc
jne
stos
repnz
mov
loopne
mov
pop
repz
cmp
xor
repz
pop
mov
sbb
arpl
int
loop
pop
loopne
mov
ljmp
adc
push
std
mov
divl
mov
cmp
leave
movsb
int
data16
jae
push
jmp
xchg
scas
xchg
pop
test
out
mov
fldcw
xchg
xor
movsl
add
xchg
rorl
mov
push
cltd
pop
lds
jecxz
lds
and
xchg
cmpxchg
jl
mov
xor
cmc
loope
repz
pop
cmp
add
xchg
imul
adc
mov
add
xor
repz
push
dec
ficomps
sub
test
repnz
rcrb
mov
xlat
lods
dec
jbe
lcall
pop
jbe
pop
sahf
stos
jge
mov
xchg
das
xchg
lock
repnz
ss
daa
cmp
fs
repz
pop
imul
pop
adc
rcr
les
fs
mov
das
loopne
inc
jbe
sub
push
mov
add
dec
add
push
fs
insb
push
jmp
aad
inc
jbe
mov
cs
mov
sbb
jbe
out
and
jne
fists
add
push
jle
fmull
xor
test
jae
push
enter
test
push
sbbl
mov
mov
mov
mov
es
ror
add
mov
iret
and
outsl
repz
pop
xor
repz
sti
mov
test
aad
cmpsb
out
inc
jne
sub
ljmp
cmp
cli
xor
ss
jbe
jl
imul
aaa
subl
lea
xchg
ss
xlat
in
cmp
xchg
lds
push
xchg
ss
pop
pop
insb
movsl
inc
mov
pop
cmp
pop
mov
cmp
cmpb
gs
scas
sub
fsubl
out
aad
iret
repz
cltd
cmp
rcr
mov
sarb
in
repz
psllq
jo
push
aad
mov
jno
popf
cld
and
ss
fsubrl
sub
cmpsb
push
ds
mov
xchg
and
movsl
test
stc
icebp
mov
push
loopne
pop
or
mov
daa
les
push
xchg
je
jbe
dec
and
jbe
ljmp
jbe
jge
ficompl
dec
out
repz
push
loopne
rcr
out
scas
incl
inc
aad
mov
and
sbb
shrb
pop
test
fcoml
mov
add
loop
inc
mov
sub
mov
popf
test
pop
loope
ret
sbb
mov
or
add
push
ja
mov
repz
cmp
rcr
repz
cmp
jns
arpl
les
iret
test
jbe
test
stos
pop
or
adc
dec
mov
imul
dec
sbb
sub
in
mov
ss
adcl
leave
pop
xchg
out
pop
adc
aam
and
fwait
aam
fxch
stos
scas
cld
push
push
inc
push
push
ss
sti
push
xor
cmp
pop
adc
xchg
mov
mov
mov
repz
cs
pop
lahf
sbb
push
push
addr16
mov
add
cmpsl
int3
test
pushf
bound
mov
popa
sub
loop
inc
mov
and
mov
or
je
repz
test
push
inc
test
sbb
int3
or
jg
test
int
mov
add
mov
cs
pop
repz
iret
out
mov
jbe
incl
cmpsl
cmpsl
xor
sahf
ja
mull
pop
mov
aad
xor
ja
xchg
pop
lret
add
sbb
jne
xor
dec
pop
xor
test
test
inc
push
mov
aam
jecxz
cs
jbe
jmp
cli
cmp
cmp
mov
cs
sub
sub
push
cmp
cmp
mov
add
imul
repz
shll
sahf
lds
push
or
test
xchg
cmpsl
jb
mov
xor
jmp
jbe
mov
jbe
ljmp
jbe
nop
scas
ljmp
pop
arpl
dec
xchg
push
into
mov
lret
or
push
data16
mov
out
jmp
mov
dec
sbb
mov
add
cmpsl
push
shrb
sti
push
inc
inc
aas
xor
loopne
xlat
mov
cmp
and
mov
popf
add
add
sbb
inc
cmpsb
jae
movsb
repz
ret
cs
dec
lods
mov
clc
mov
sbb
sbb
enter
and
jge
aam
test
out
cmpsb
mov
and
dec
pop
push
out
adc
push
int
ljmp
syscall
mov
sbb
aad
bound
hlt
or
inc
daa
push
leave
push
imul
push
add
out
enter
outsl
subb
das
cmc
test
out
inc
adc
and
cmp
aam
fs
ret
mov
iret
push
mov
mov
dec
add
add
sub
mov
xlat
cmp
aam
movsb
adc
push
scas
iret
fs
inc
sbb
add
jmp
add
push
test
push
cwtl
mov
and
out
mov
mov
gs
xchg
sub
mov
stc
push
mov
addl
gs
in
push
jle
test
mov
sub
add
adc
mov
fs
fisubl
cmc
inc
sti
div
lret
sub
mov
arpl
in
mov
cmp
scas
pop
repz
sub
push
imulb
pop
mov
jecxz
ss
pop
ret
test
lock
mov
adc
leave
cld
fwait
xor
lret
adc
add
add
sub
push
xor
jbe
mov
lret
mov
jns
movsb
pop
fwait
mov
mov
fimuls
je
push
adc
cmp
les
jns,pn
les
mov
push
sub
push
inc
push
xchg
out
xchg
int3
mov
movsb
add
cmpsl
inc
adc
mov
sub
mov
jmp
mov
arpl
ja
push
movsb
add
mov
adc
mov
add
scas
int
cmp
sub
bound
mov
add
cwtl
sub
inc
les
std
call
out
xorb
xor
sub
pop
cmp
jecxz
xor
adc
fdivrl
inc
lcall
pop
mov
adc
mov
add
push
movsb
mov
faddp
mov
mov
push
mov
loopne
add
popf
dec
mov
dec
adc
fdivrl
pushf
jl
lahf
sbb
not
jae
fnsave
inc
lods
add
jle
pusha
dec
push
cmpsb
addr16
mov
out
add
insl
and
cmp
outsb
sub
sbb
pop
aam
mov
push
cmpsl
and
fdiv
inc
clc
ja
testl
inc
push
mov
ja
sub
sbb
mov
sbb
or
sub
mov
jbe
push
loope
bound
jns
or
das
arpl
sar
fs
loopne
dec
fstp
push
push
inc
data16
adc
push
inc
loopne
add
mov
mov
add
scas
mov
mov
mov
movsb
sbb
dec
dec
dec
and
push
xchg
xor
cmpsl
popa
test
mov
outsl
test
sub
mov
inc
dec
push
and
add
mov
andl
movsb
mov
mov
es
adc
movsl
shrb
jo
or
jne
cli
shll
test
ja,pn
ret
das
xchg
inc
jecxz
sub
clc
out
lea
push
xor
rolb
dec
xlat
dec
push
fisttpll
mov
in
loop
mov
jbe
and
add
push
repnz
push
gs
push
cmp
mov
add
xchg
ljmp
mov
sub
xchg
add
mov
inc
fst
cmp
adc
mov
test
adc
out
ss
sub
inc
insb
push
cmp
repz
test
subb
fs
mov
popf
jbe
xchg
addr16
mov
pop
addl
push
add
fs
add
push
shll
add
inc
not
xchg
sbb
das
sbb
adc
adc
xchg
pop
xchg
xchg
enter
iret
dec
jl
push
mov
jl
inc
into
inc
mov
or
mov
daa
xchg
push
mov
push
push
push
xchg
inc
in
adc
mov
and
testl
and
ror
jle
sub
out
add
cmpsl
out
and
call
fbstp
ds
push
pop
mull
cs
xor
mov
stos
pop
mov
jnp
adc
inc
iret
leave
cmpsl
and
out
mov
pop
jbe
mov
stos
sbb
push
jbe
push
dec
ljmp
imul
dec
pushf
jle
sub
jno
lcall
mov
push
sub
xorl
shr
or
inc
jg
inc
dec
pop
jae
jns
pusha
insl
test
popa
adc
add
add
xchg
push
dec
repz
dec
mov
push
movsb
sbb
in
lods
popa
cs
mov
mov
pop
shrl
sarb
and
ret
sub
xor
std
xchg
mov
xor
push
enter
ret
sbb
mov
pop
jle
mov
adc
lock
cwtl
and
test
push
add
push
loope
std
rcr
mov
lahf
jo
adc
xor
repz
xorl
popf
dec
push
adc
add
sub
cmc
pop
lret
push
inc
and
nop
sub
push
enter
add
and
movsb
inc
loop
sub
add
xlat
xchg
and
loopne
push
es
insl
dec
sbb
addb
in
mov
loopne
push
mov
cld
sbb
sub
andl
mov
les
sub
inc
repz
fldl
aad
lea
mov
test
dec
xchg
ffree
mov
sub
test
add
das
mov
inc
sahf
pop
cld
jmp
mov
stos
inc
addl
cli
pop
aam
arpl
add
xor
pop
add
cmpsb
in
or
bound
push
imul
mov
inc
mov
aaa
mov
xor
daa
sbbb
imul
les
jbe
pop
insb
sbb
test
inc
fsubrl
ljmp
outsl
fstp
pop
sub
xchg
orl
or
hlt
loope
std
mov
stos
repnz
sub
into
add
adc
les
xor
and
add
push
or
mov
outsl
add
outsl
ljmp
push
je
jno
inc
fwait
and
sub
test
push
mov
dec
stos
mov
add
push
adc
dec
rcr
stos
int3
iret
push
xchg
test
cmp
mov
inc
je
cli
mov
fldcw
mov
inc
jbe
and
les
push
movsb
popf
js
inc
pop
test
std
inc
mov
into
mov
jbe
mov
das
les
incb
jno
fcompl
pop
out
lock
shlb
jl
ljmp
repz
push
inc
scas
push
mov
push
dec
flds
add
cmpsl
out
push
sub
data16
les
cmp
and
jne
repz
jl
out
inc
fildll
les
scas
inc
out
pop
push
sub
movsb
mov
lds
fcmovnb
xlat
movsb
push
or
jns
mov
gs
daa
and
pop
push
push
jmp
cli
jbe
or
sub
mov
sbb
inc
cmp
hlt
xor
adc
ljmp
or
sti
push
scas
das
pop
push
or
pop
add
push
mov
scas
xor
es
push
mov
int3
inc
xor
insb
aam
and
fs
imul
jbe
scas
stos
push
popf
loope
or
aam
aam
xchg
out
lret
pop
jbe
or
sub
lds
xor
inc
jge
mov
mov
das
xor
movsb
insb
jecxz
push
sbb
and
lcall
popf
incb
hlt
jecxz
sub
pushl
fisttpll
into
lods
sub
mov
test
sahf
adc
in
les
roll
imul
stos
les
xor
push
int
pop
sub
inc
push
and
cmpsb
movsb
xchg
sbb
out
loopne
dec
sbb
mov
andl
and
shrb
in
push
stos
rorl
scas
clc
fisubrl
inc
inc
xchg
repz
pusha
inc
xchg
lahf
jnp
aas
decb
cmp
rclb
pusha
test
push
test
adc
lret
jp
fs
jo
in
xor
out
jecxz
fnsave
test
dec
push
jbe
jle
cmp
test
sbb
lods
scas
cs
paddq
mov
test
xchg
out
int
je
pop
add
sub
js
ds
inc
sub
mov
mov
cmpsl
jl
out
jo
add
shll
fs
push
jmp
xchg
jbe
ficomps
push
sub
mov
add
addr16
movsl
push
xlat
add
xor
sub
ds
and
aaa
lret
pop
jnp
outsb
fnstenv
sub
test
sahf
cmp
lds
divb
mov
ret
stos
in
dec
push
test
add
decb
js
subb
dec
adc
inc
xor
sbb
dec
imul
lods
jbe
sbb
push
mov
mov
xlat
jne
jbe
cmc
jmp
add
in
xlat
push
sub
mov
pop
adc
xchg
or
jne
pop
mov
adc
fdivrs
push
add
gs
shll
into
fisubrs
mov
dec
xor
sbb
rcll
add
loope
scas
ja
shrl
mov
popf
loop
pop
fstps
adc
mov
adc
sub
mov
mov
or
mov
mov
aad
jp
inc
and
sbb
daa
adc
and
fdivrl
mov
and
sbb
mov
mov
push
xchg
sahf
jge
xor
es
inc
leave
addr16
jne
push
jmp
imul
lret
nop
imul
sub
popf
and
dec
inc
rcl
fldt
inc
pop
push
cmp
jge
mov
pop
test
loop
aaa
sbb
sbb
sbb
cmpsb
test
fsub
jne
stos
rclb
pop
movsl
lods
push
push
rcrb
xchg
sbb
pop
add
sub
lret
sub
cld
inc
jmp
in
jg
cmp
je
or
xchg
pop
cmpsb
dec
je
into
push
sub
xchg
jecxz
shrl
mov
aad
dec
add
jge
fstpl
loope
call
cmp
dec
push
test
shl
aad
jne
jge
xor
icebp
outsb
out
add
mov
dec
xchg
push
jp
imull
xchg
push
out
cmp
mov
mov
push
jl
mov
aad
xchg
daa
push
push
sub
mov
push
inc
sub
add
sti
sahf
mov
dec
adc
lds
stc
mov
movsl
std
or
mov
into
dec
jb
scas
sub
cmp
mov
or
mov
es
add
scas
mov
mov
icebp
dec
stos
push
les
jne
das
test
icebp
jg
in
jl
xchg
iret
sub
dec
ljmp
pop
mov
jno
lods
or
scas
jnp
sub
mov
mov
test
and
into
pop
inc
push
sbb
sbb
lcall
sahf
fxch
sahf
outsb
push
sub
add
notl
call
aad
and
pop
sub
mov
andb
pop
and
fs
inc
dec
lds
stos
divb
fisubrl
and
out
xor
push
mov
push
fists
ror
mov
out
pop
int
cmp
scas
out
lods
js
or
sti
jae
mov
and
mov
je
stos
punpckldq
imul
test
push
ficompl
movl
scas
sbb
lods
outsb
lock
ss
mov
cmp
xor
comiss
push
insb
mov
lret
out
repnz
pop
or
push
sub
mov
out
jns
cmp
and
pop
call
cli
jae
sub
mov
movsb
mov
adc
orb
mov
inc
mov
lret
call
mov
jne
arpl
jg
lods
dec
push
xchg
adc
cmp
ds
out
and
lret
test
and
jl
xchg
call
inc
mov
jp
stos
cmp
adc
and
scas
jae
sub
mov
iret
jg
adc
ret
adc
mov
cmp
movsl
cmpsb
adc
into
loop
xchg
and
dec
movsb
test
sbb
inc
fidivs
sub
push
mov
pusha
negb
and
stos
mov
iret
adc
pop
mov
push
lahf
inc
push
cmpsl
popf
add
aam
sub
adcb
and
sbb
imul
adc
repnz
mov
and
in
fs
push
adc
lret
sbb
dec
ret
push
inc
or
mov
and
jae
in
push
ret
sub
mov
cmp
fwait
xchg
or
xchg
sub
sub
bound
adc
or
outsl
mov
lret
sar
xchg
aam
or
or
subb
mov
xchg
adc
pushf
push
por
out
fcomps
cs
mov
and
jno
ftst
adc
inc
mov
inc
adc
pop
jle
mov
sub
sbb
lock
sub
popf
movsl
repnz
or
lds
test
in
movsl
sub
outsl
ret
lds
mov
pop
sti
inc
adc
loop
cwtl
adc
xlat
sub
out
out
fimull
and
or
js
mov
aaa
jnp
sbb
adc
cmp
arpl
push
or
sub
sub
jnp
push
mov
adc
and
push
add
imul
push
dec
mov
xchg
insl
in
xor
dec
push
rorb
mov
push
sbb
mov
in
test
in
adc
ss
inc
adc
loope
and
adc
or
out
adc
addr16
enter
pushf
xchg
cmpb
fldcw
sub
test
out
xchg
adc
add
cltd
cmp
mov
sub
out
push
inc
and
adc
fs
adc
adc
aas
sarb
into
jecxz
and
loope
or
pop
pop
outsb
test
and
mov
push
pop
sub
jecxz
inc
test
ret
shll
jb
aam
in
mov
test
int3
push
adc
mov
sbb
or
or
pop
rcr
adc
mov
decb
push
dec
outsl
lret
sti
cmp
imull
pop
fstpl
aam
in
popa
jne
adc
and
dec
rolb
jbe
xor
addl
mov
adc
xor
imul
das
nop
out
pop
and
xlat
and
lret
out
shrb
gs
fistpll
in
push
in
cwtl
repz
adc
inc
jecxz
or
sub
lret
gs
add
das
and
cld
loop
adc
and
fstl
dec
jnp
jo
mov
arpl
or
pop
pop
mov
adc
sbb
dec
test
mov
stc
dec
cmpsb
jg
in
scas
push
out
jbe
jecxz
adc
test
adc
adc
std
mov
enter
and
pop
cld
adc
dec
test
push
jne
mov
nop
js
outsb
imul
cmp
sub
mov
rcr
adc
jmp
andl
inc
sub
imul
inc
xor
in
jge
and
cmpb
adc
in
xchg
scas
cmc
adc
insl
stc
xchg
jp
int3
or
push
lret
je
xor
test
sub
or
mov
xchg
mov
and
ja
push
jbe
ret
mov
out
sbb
popf
enter
pop
mov
and
mov
ja
shrl
leave
mov
pop
inc
push
out
sahf
cli
xchg
gs
ja
aad
jmp
push
sub
mov
adc
add
dec
jmp
fidivrl
mov
add
or
pop
ljmp
fisttpl
ret
sub
xchg
inc
xchg
adc
push
pop
in
in
cmp
xchg
ljmp
stos
adc
sbb
adc
pusha
and
push
stos
push
xchg
or
rcl
mov
inc
and
mov
mov
add
push
outsb
stos
mov
mov
xchg
sub
in
fwait
pop
pop
xchg
cs
mov
adc
outsb
mov
jnp
cltd
xchg
insb
movsl
jne
pop
movsl
jmp
sub
dec
in
scas
mov
xor
pop
inc
xlat
adc
xor
insb
ljmp
pop
jnp
push
xor
test
push
jge
xor
xchg
push
xchg
sub
es
cmp
jl
jne
pop
imulb
repnz
add
push
cs
cmp
fsubrs
lds
dec
sbb
mov
xchg
jmp
xchg
pop
push
mov
sub
pop
insl
add
lret
jmp
ds
notb
jbe
push
pop
scas
inc
dec
aam
imul
inc
push
xchg
rcll
cs
stos
xor
out
int
test
rol
sub
pusha
mov
test
xchg
fsubrl
cli
rcll
jge
add
mov
sub
add
xchg
out
idivb
mov
stos
hlt
loop
ret
in
dec
and
cltd
sub
pop
aam
addr16
push
ss
adc
push
arpl
out
call
imul
fsubrp
jg
fwait
xchg
push
cmp
sbb
xchg
rcll
xor
inc
outsl
push
push
cmp
imull
cltd
cld
lea
mov
fldl
std
insb
sub
scas
mov
aaa
mov
mov
xchg
sub
fbld
sub
lcall
les
mov
out
jle
jle
lods
sahf
addr16
ds
aad
aam
in
xchg
add
stos
ret
sub
cld
mov
sub
imul
hlt
add
into
imul
xlat
or
and
pop
add
in
inc
lret
pusha
mov
negl
pop
xor
sub
sarb
and
fistpl
popf
das
jmp
sbb
sub
xor
jge
jns
mov
add
push
push
sbb
out
add
pop
cmp
dec
mov
ret
xchg
int3
cmp
mov
std
jae
leave
ljmp
test
mov
out
pushf
lods
lret
push
in
or
iret
adcl
lea
and
mov
test
aas
sahf
insb
dec
leave
lea
shl
lret
mov
ja
and
pop
cs
jb
mov
dec
push
test
xchg
insl
cs
aas
imul
and
repnz
mov
sbb
ret
push
ror
jl
rcrb
or
clc
ljmp
imul
jo
lcall
aas
pop
xor
mov
dec
lret
ss
push
mov
in
dec
arpl
push
popf
xchg
add
sbb
test
pushf
pop
cwtl
sbb
testl
sbb
fs
add
cltd
pusha
call
or
gs
xchg
rcrb
pop
scas
daa
mov
loop
mov
lods
andb
cmp
mov
sahf
mov
inc
pop
mov
mov
cmpsb
add
lahf
nop
inc
and
cmp
mov
aad
jg
inc
movsb
js
stos
cmp
cwtl
lcall
pop
cli
adc
mov
mov
insb
sbb
ljmp
add
push
or
mov
xlat
push
push
daa
xchg
dec
xor
aaa
xchg
stos
mov
xlat
mov
push
adcb
int3
into
ds
cmc
sub
jnp
int3
sbb
inc
out
xchg
stc
inc
fnstcw
aas
test
gs
push
sub
pop
jge
inc
daa
xadd
sbb
sbb
stos
mov
inc
inc
push
jg
rcrb
pop
mov
daa
scas
jmp
pop
rcr
pusha
mov
ficoms
add
push
enter
mov
cmp
cli
and
push
push
hlt
enter
in
pushf
in
cmp
pop
je
sahf
shrl
push
mov
pop
ss
negb
movsb
or
add
loopne
pusha
push
xsha256
cmpsb
shll
push
pop
jnp
dec
out
mov
cmp
pop
xchg
dec
sub
pop
scas
shl
dec
push
mov
mov
ss
lods
popf
push
scas
and
mov
jo
sahf
xor
mov
push
out
inc
mov
jge
mov
xchg
call
fdivr
cld
inc
jge
lahf
sahf
mov
mov
push
sub
push
add
stos
in
xchg
mov
sub
mov
mov
inc
cltd
mov
sbb
push
and
mov
xchg
push
mov
loope
pop
imul
push
stos
int3
xor
or
mov
sub
mov
mov
sub
sbb
stc
fstpt
jno
xor
clc
pop
call
scas
out
inc
xchg
or
sub
pop
adc
pop
xor
ljmp
sub
cmp
into
int
fldenv
ss
sbb
pop
push
mov
jl
mov
cmp
adc
test
es
sub
mov
out
outsb
inc
mov
xor
mov
jg
out
inc
aaa
por
inc
into
insb
sub
rcr
mov
out
adc
xchg
mov
mov
or
add
ljmp
or
push
movsl
mov
int3
call
mov
push
ss
lock
cltd
lods
int
cs
or
pop
aas
pop
inc
mov
sub
jl
stos
sbb
push
dec
scas
mov
outsl
inc
notb
mov
cli
stos
mov
adc
xchg
dec
popf
cmpsl
pop
and
in
mov
sub
push
stos
inc
xlat
push
ja
pop
push
lea
jmp
out
aaa
movb
stos
cmp
std
stos
xor
mov
xchg
adc
fistpll
xor
insb
dec
cld
test
mov
inc
mov
je
movsl
mov
jmp
decb
pop
inc
xchg
shrl
mov
push
jle
dec
mov
cs
cmp
fbld
pusha
mov
ljmp
mov
dec
jae
movsl
cwtl
lods
inc
mov
dec
js
cmpsl
adc
bound
xchg
stc
mov
xor
call
ds
push
or
jbe
jg
jmp
sub
loopne
pop
pop
cmpsb
mov
dec
cmpsb
out
es
pop
out
mov
or
in
rcrl
push
cltd
pop
in
inc
in
insl
push
push
ss
sub
jno
into
ds
ret
jb
xchg
sahf
xchg
adc
and
movsb
adc
iret
dec
push
push
xor
movsb
mov
mov
inc
mov
fisubl
pop
movsb
sub
sbb
stos
mov
fwait
out
push
hlt
movsl
je
sbb
add
jl
clc
mov
loop
sub
cmp
mov
pop
mov
shrl
data16
sti
lcall
mov
inc
push
cmp
or
loopne
mov
insb
jo
xlat
fiaddl
jge
scas
dec
movsl
cltd
pop
push
xor
dec
add
xchg
jecxz
mov
aad
and
dec
in
sub
cs
cmp
hlt
inc
push
idiv
sub
in
cmpsl
mov
popa
cmp
and
pop
mov
mov
in
mov
js
mov
pushf
dec
pop
jecxz
call
cmp
lahf
stc
test
popf
mov
pop
pop
jns
mov
push
fsubp
lahf
mov
icebp
or
int
xlat
xor
hlt
movsl
sub
sub
stos
push
daa
fcomps
mov
mov
outsb
lods
addr16
rcrl
rcrb
dec
test
ds
push
xor
in
ss
cld
adc
adc
aad
sbb
test
dec
arpl
push
lds
mov
sbb
jbe
fwait
sub
jns
out
and
cli
ret
jo
mov
inc
or
cmp
xchg
xlat
push
sbb
adc
adc
ljmp
popa
aad
arpl
or
lea
in
sub
push
je
sub
rolb
inc
lods
jns
sub
push
adc
es
mov
sbb
andb
dec
jg
int
icebp
sub
adc
cmp
and
sti
lods
sbb
or
adc
pop
ret
adc
dec
movsl
push
nop
adc
push
jno
sbb
popa
sub
js
mov
jne
sbb
pop
xor
adc
dec
icebp
in
adc
inc
nop
xor
in
pushf
into
pop
add
cld
lds
test
push
rcrb
out
adc
in
jne
test
sbbl
sti
xchg
and
pop
shrb
or
xor
in
bound
lret
adc
sbb
sub
sub
jmp
and
int3
jle
pop
dec
fiadds
lahf
add
and
into
imul
stos
mov
mov
inc
jae
in
mov
scas
or
and
dec
xchg
pusha
and
cmp
jecxz
cmp
mov
lret
scas
push
lret
mulb
pop
jmp
stos
add
xchg
xchg
adc
mov
pop
clc
test
dec
xor
mov
push
lds
fucom
mov
pop
bound
push
xor
xchg
test
xchg
sub
push
jl
mov
adc
sahf
sub
fmull
imul
popa
adc
test
adc
cmp
adc
movaps
fidivl
and
leave
mov
add
xor
loop
nop
adc
mov
or
push
mov
push
movsl
fistl
leave
icebp
sarl
lods
xor
jae
shl
scas
inc
or
and
clc
shl
push
add
or
xchg
mov
pusha
adc
push
mov
lcall
sbb
adc
rorb
jns
push
xlat
sbb
mov
cmpsl
adc
add
pushf
stos
and
push
cmp
test
xchg
mov
adc
lcall
push
dec
ja
scas
xchg
daa
adc
jle
fstl
mov
std
jae
or
push
add
mov
sar
test
in
and
lds
adc
lods
xor
xchg
adc
lahf
cmp
notb
and
fildl
fsubs
xchg
adc
lods
pop
inc
and
sub
and
mov
in
adc
sub
xlat
cmpsl
test
fdiv
shlb
in
add
testb
dec
adc
xchg
or
call
stos
mov
sbb
cmc
outsb
fcomps
jno
and
cmp
push
mov
fwait
add
test
push
lds
sub
popa
movsl
in
mov
sbb
xlat
cld
mov
dec
inc
sub
xchg
fisttpl
jge
push
xchg
xchg
mov
mov
fnsave
sbb
xchg
aam
or
adc
dec
push
mov
or
and
lods
and
lds
lods
out
jne
fstp
les
cmpsb
push
lcall
mov
jmp
loop
and
sbb
fs
movsb
sbb
shlb
lret
add
dec
sbb
test
push
inc
fsub
xchg
test
das
xor
pushf
adc
inc
xor
sti
fsts
inc
std
pop
in
mov
arpl
int3
mov
adc
ss
ret
adc
dec
xor
das
in
out
sbb
test
and
andb
and
xchg
and
mov
lods
add
fiadds
sbb
shlb
pop
lea
mov
mov
push
adc
sub
call
mov
pop
adc
movb
mov
hlt
dec
jne
cmp
out
adc
lret
orl
pop
push
out
jge
adc
jno
xor
adc
mov
lret
cmp
in
sbb
mov
pop
adc
xor
sub
sbb
push
jle
popf
push
mov
arpl
and
mov
adc
push
pop
lds
jb
lods
mov
pop
adc
xor
inc
push
mov
test
frstor
add
data16
adc
shlb
sub
aas
popf
repnz
jle
sub
add
or
data16
jl
frstor
jmp
sbb
cmp
popa
dec
xor
jl
push
shrl
and
push
adc
adc
ret
ss
xchg
adc
je
popa
jmp
in
sbb
enter
pop
push
test
push
mov
push
jecxz
adc
movsb
pop
loopne
insb
test
and
es
adc
cld
movsb
dec
xchg
cmp
mov
mov
sbb
call
pop
outsb
push
xor
adc
jg
mov
ljmp
adc
sarl
insl
test
fs
call
repz
enter
jno
sub
sbb
cmp
adc
jns
pop
shlb
jge
pmulhuw
adc
js
sub
push
test
inc
rolb
enter
pop
out
mov
xchg
adc
adc
and
or
scas
add
xchg
popf
mov
movsb
jae
pop
add
dec
lret
popa
sub
mov
dec
dec
adc
inc
xchg
xlat
insl
and
fwait
data16
add
adc
xchg
lock
and
and
ljmp
sbb
movsb
mov
cmc
push
adc
cwtl
or
in
out
lock
dec
pusha
or
notb
fsubr
loopne
jbe
pop
push
and
or
adc
inc
sub
cmp
xchg
clc
lea
jo
inc
adc
inc
mov
in
shr
hlt
mov
cmp
sbb
call
xor
test
and
aaa
adc
jbe
adc
aad
jo
cmp
adc
xchg
mov
sbb
pop
jns
mov
mov
out
int3
stos
jl
data16
jle
jno
mov
push
adc
dec
notb
cmp
sub
jnp
lahf
adc
cs
push
push
or
adc
mov
and
bound
mov
jl
sbb
push
and
push
xlat
and
jnp
add
hlt
loopne
aad
stc
mov
and
adc
lods
cmp
cld
mov
sbb
lcall
notl
daa
icebp
add
adcl
test
call
into
xor
test
push
jge
out
ficompl
add
pop
xchg
jnp
movsl
ret
adc
mov
in
int3
hlt
cld
or
push
xor
push
repnz
lds
out
cltd
sub
shrl
rcr
xchg
adc
inc
and
daa
adc
and
push
lahf
jb
adc
insl
and
std
xchg
and
dec
loope
ret
test
ja
ret
outsb
jnp
mov
xor
push
shl
jne
sbb
sbb
into
lea
outsb
sub
cmp
jb
lock
dec
and
cltd
push
mov
sbb
clc
lcall
cmp
rcl
ficompl
sbb
adc
fs
and
sbb
fcoml
inc
jb
test
cmc
mov
push
inc
lea
ret
and
mull
imul
adc
and
adc
fcompl
or
in
fistpl
scas
add
cltd
adc
imulb
jne
push
shrl
pop
int3
or
and
mov
pop
das
hlt
and
push
test
jbe
push
mov
cs
pusha
lock
dec
loope
adc
fistpl
pop
add
mov
adc
test
aam
leave
sub
js
jne
xor
push
movsb
popf
shll
fsubs
add
or
adc
or
mov
in
es
in
cmpsb
frstor
aad
int3
in
int
pop
add
pop
mov
add
push
aad
test
sbb
jb
cmp
pusha
mov
insb
ret
add
inc
mov
ficomps
push
enter
mov
pop
xchg
add
jne
jnp
pop
and
rol
jl
adc
mov
dec
imul
mov
jl
repz
adc
ja
ljmp
jb
call
punpcklbw
mov
lock
inc
hlt
xorl
or
fstpl
inc
and
adc
xor
aam
scas
mov
mov
xchg
xor
mov
lds
ss
rorl
insb
sbb
je
pop
push
jecxz
mov
lock
aas
jno
int3
and
pop
outsl
pop
pop
jmp
add
ret
mov
int3
hlt
sbb
jg
lahf
dec
clc
jbe
lds
je
aam
pop
jle
mov
js
loop
stos
add
aas
sub
bound
mov
hlt
mov
and
jg
add
jge
movsl
pop
pop
lret
sub
mov
mov
stos
pop
or
mov
sub
into
lds
rorw
mov
cmp
pop
mov
rorb
mov
add
loop
push
mov
std
aaa
mov
mov
cmp
je
cmp
pop
clc
inc
pop
stos
sbb
mov
mov
outsb
jl
or
jmp
shll
pop
stos
movsb
dec
xchg
test
cmp
stos
shrl
lcall
pop
adc
cmp
jbe
mov
notl
push
aas
jb
mov
ja
mov
push
lahf
sub
adcl
bound
xchg
add
adc
jmp
mov
xchg
mov
dec
je
jbe
push
jbe
lds
mov
pop
mov
cmp
xchg
loopne
xor
and
lret
ds
mov
out
xchg
inc
pop
imul
jle
push
lods
adc
ficoms
dec
push
mov
push
fwait
push
repz
push
loope
fs
push
cs
mov
inc
ja
out
push
adc
lods
xlat
aam
jmp
push
sarb
adc
cwtl
outsb
lret
ret
and
in
jge
lods
xchg
cld
or
mov
fildll
mov
dec
push
mov
cmp
push
sbb
push
mov
test
pusha
cwtl
sub
mov
sub
add
mov
sub
mov
adc
jo
inc
jg
sbb
hlt
mov
aas
and
stc
lcall
lods
dec
mov
mov
cmp
imulb
and
inc
cmpsb
mov
dec
sub
sub
xlat
mov
add
pop
xlat
dec
inc
mov
aad
pop
add
lock
mov
fs
cmp
push
sbb
scas
mov
jne
push
shll
test
mov
cs
dec
sub
lret
push
xchg
ljmp
insl
sub
in
mov
cmp
ljmp
cwtl
adc
lods
sbb
cs
into
push
sbb
mov
out
cli
sbb
rcrl
mov
pop
test
cmp
loopne
mov
inc
pop
cmp
add
pusha
push
addb
push
mov
out
jge
inc
jmp
out
cmp
push
xchg
jns
int
mov
stos
movsl
hlt
subl
shrl
mov
xor
mov
in
mov
out
cmp
cli
ljmp
xchg
pop
cmp
dec
enter
cld
xor
imul
xchg
cmpsb
push
popf
or
sub
testl
aad
and
pop
clc
fsubs
or
adc
int3
ret
adc
fwait
repz
dec
popa
aad
ljmp
mov
pop
and
subb
cmpl
int3
add
jg
icebp
sti
sbb
les
dec
imul
adc
loopne
inc
dec
adc
cmp
inc
push
das
cmp
xchg
mov
xlat
daa
enter
cmpsl
adc
xor
std
insl
je
lcall
test
jne
mov
mov
lods
mov
jg
outsb
or
stc
dec
fs
mov
lods
subb
in
adc
pop
xchg
add
or
test
adc
test
dec
and
jg
ret
mov
push
add
pushf
pushf
and
insl
and
adc
sub
push
xor
xchg
dec
jnp
mov
ficoms
in
iret
mov
shr
andl
xorl
or
jecxz
dec
out
xchg
stc
pop
aaa
or
xlat
sbbl
adc
in
push
test
bound
pushf
xchg
push
and
rcr
sbb
and
cmp
xor
jb
out
inc
xchg
test
sub
stos
sti
cwtl
adc
inc
das
test
cmp
sub
dec
cwtl
popf
in
adc
jnp
and
mov
cmp
cwtl
xor
mov
add
xchg
add
pop
icebp
mov
outsl
les
sub
js
sub
mov
adc
cmp
jb
cmp
test
popf
adc
int3
sub
fwait
and
or
in
adc
jno
aas
push
pop
sub
cwtl
pushl
incb
sub
dec
mov
adc
mov
fldt
adc
lahf
cltd
jne
cmp
mulb
dec
and
mov
lods
ss
fwait
pop
adc
gs
stos
inc
shl
push
push
add
or
andb
mov
lret
cli
mov
popa
sbb
imul
cltd
popf
inc
int3
or
test
push
inc
movsb
sti
sub
leave
in
daa
adc
pushf
xlat
clc
mov
divb
sbb
pop
lds
ja
cmpsb
jg
pushf
lock
push
daa
xor
or
and
mov
mov
pop
cmc
jne
add
lahf
adc
pop
push
popf
adc
sti
push
jge
adc
bound
sbb
and
out
insb
inc
adc
pop
call
adc
mov
xchg
cmc
jg
add
sub
add
cwtl
push
aad
adc
mov
mov
insb
fadds
fisubrs
adc
sti
ja
push
mov
inc
test
and
cmp
and
ret
lahf
fsubrs
clc
xor
mov
data16
ds
adc
add
lea
or
dec
decb
inc
and
mov
xchg
mov
push
adc
cmc
unpckhps
js
jne
sub
mov
and
jmp
popf
lds
sub
push
adc
xchg
and
roll
jge
dec
mov
ss
cltd
mov
adc
clc
cmp
adc
out
int3
adc
jg
fnstsw
adc
fdivrl
cmp
popf
popa
or
mov
aaa
jae
fstl
cmp
cmpsb
sub
enter
mov
lds
pop
scas
xchg
ficomps
lods
test
scas
and
je
es
jo
fs
pusha
dec
add
inc
adc
add
lea
adc
cltd
scas
or
clc
sbb
into
pop
inc
lea
cmp
mov
cld
add
fistpl
movsb
jg
adc
or
dec
push
stos
push
enter
cmpsb
test
mov
sahf
xchg
or
inc
movsb
into
mov
inc
es
push
xor
dec
cmp
movsl
pop
popa
adc
loope
in
in
notl
push
into
sub
pop
jecxz
leave
sbbl
test
out
adc
bound
xchg
pop
xchg
mov
into
imul
sahf
jge
adc
outsb
and
adc
rcr
test
iret
fwait
lret
sbb
or
outsl
jnp
mov
imul
mov
add
mov
lahf
and
notl
scas
in
lret
adc
cmp
aaa
lds
mov
aas
push
ret
sbb
push
pushf
frstor
adc
adc
loope
jno
adc
pop
add
jmp
adc
ja
dec
or
sub
mov
int3
and
inc
out
sub
pop
mov
lret
inc
rcr
fcomi
xchg
int
cltd
sub
adc
mov
fstl
mov
in
stc
and
pushf
adc
aam
lock
test
or
pop
movhps
dec
and
xor
dec
adc
sub
roll
jo
nop
sub
jnp
js
push
lret
imul
pushf
outsb
jbe
cmc
aas
mov
jge
jle
cld
push
and
adcl
mov
in
pop
mov
jns
adc
cmpb
in
sub
mov
jl
mov
into
push
popa
push
pop
sub
in
adc
cwtl
xchg
sbb
mov
adc
push
add
in
add
daa
les
nop
out
insb
lds
add
sub
imulb
jl
imul
ja
inc
lret
bound
or
dec
in
xchg
or
stos
mov
loope
fcoml
popa
notl
adc
fldl
xchg
insb
movsl
adc
dec
inc
int
and
mov
push
test
pop
outsl
scas
and
repnz
ss
mov
aam
xchg
push
ja
flds
sbb
and
je
inc
sub
xchg
adc
add
sub
imul
mov
fisubl
ret
dec
repz
out
in
mov
mov
lock
pushf
jge
jl
push
pop
jnp
icebp
gs
adc
jo
adc
divl
in
lahf
adc
push
mov
andb
dec
dec
push
test
test
bound
aaa
std
iret
dec
test
xor
insl
sub
data16
dec
adc
shr
sub
repz
adc
xchg
aaa
xchg
pop
or
popa
add
jno
cmp
sbb
fisttpl
cmp
pop
jmp
lret
sbb
loop
je
mov
jno
sub
fdivrp
xchg
push
add
and
cmc
data16
mov
pop
xchg
sbb
loope
xor
jnp
fwait
jp
xor
jae
sub
inc
nop
sub
push
fists
out
adc
mov
xchg
adc
mov
out
adc
test
xor
push
cmpsb
mov
icebp
test
int
ret
aaa
adc
mov
dec
int3
fists
fst
add
sub
push
jle
int
fsubrl
enter
jnp
xor
sarb
inc
push
sub
jle
inc
clc
adc
mov
pop
insb
adc
lret
leave
mov
jmp
scas
add
adc
pop
lret
rorl
adc
mov
push
lahf
loop
mov
xchg
mov
inc
nop
in
shrl
ret
and
popf
dec
fimuls
xor
add
adc
test
outsl
add
sbb
ret
mov
scas
sub
stc
push
jbe
jle
sub
aam
or
jnp
sub
stos
mov
fsts
jb
lods
cld
xor
and
push
jecxz
movsl
xchg
push
inc
ja
lods
xchg
scas
shlb
sahf
cmp
dec
dec
addr16
lock
jmp
divb
es
cmp
mov
sti
adc
pop
clc
mov
push
xchg
xor
pop
outsb
fidivs
in
cs
cs
imul
ja
stos
mov
pop
fxch
test
es
loopne
pop
or
imul
add
fcomip
icebp
fldcw
jge
mov
add
imul
push
ds
push
sub
and
cld
dec
cs
std
scas
mov
ljmp
pop
pop
cmpsl
outsb
sub
shl
stos
into
or
cli
jo
int
push
push
and
andb
test
stos
adc
ret
outsb
sub
stos
adc
jg
fistps
sub
lcall
test
xchg
mov
movsl
push
mov
mov
outsb
subl
arpl
movsl
jge
cmp
sbb
aaa
out
add
stos
mov
sub
or
xor
hlt
sbb
pop
cli
call
daa
shll
jno
test
dec
ljmp
push
and
sub
or
xchg
dec
sub
and
movsl
shll
bound
out
aas
add
mov
out
jno
adc
popa
sub
mov
cs
call
mov
dec
movsb
cmpsl
out
jp
sbb
ss
hlt
jle
iret
pop
inc
xor
pop
mov
shl
mov
loop
daa
push
add
mov
rclb
int
int3
cmp
xor
es
push
jecxz
in
pop
xorl
stos
in
pop
push
add
sub
arpl
xor
mov
cmc
sub
push
stc
mov
dec
xor
jmp
scas
jle
mov
fisubrs
ret
lcall
pop
outsl
test
in
test
sahf
sub
movb
sub
ficoms
lds
cmc
adc
popf
test
inc
fwait
xchg
xchg
out
cs
cmp
adc
xlat
xchg
xchg
push
incl
test
sahf
je
test
fstl
mov
sti
mov
jle
xchg
pop
movsb
cmp
cmpsb
imul
sbb
movl
and
sub
adc
xchg
sbb
mov
sarl
push
sub
xor
pop
mov
xchg
andl
adc
popf
sub
push
test
cmp
add
sub
fcom
and
pop
out
xor
jb
sbb
out
cmpsb
push
loopne
dec
out
inc
jmp
mov
mov
imul
xchg
adc
sti
inc
lods
mov
sub
cmp
dec
es
sub
sarl
gs
dec
push
jnp
xlat
push
pop
add
mov
inc
or
pop
add
push
lods
mov
jecxz,pn
scas
xchg
adcl
imul
stos
aaa
xlat
sub
pop
xor
fistps
pushf
cmpl
test
mov
xchg
aas
into
in
outsl
cmp
sub
sti
aad
loope
out
inc
repz
outsb
and
dec
std
sub
and
dec
pop
jp
or
sub
out
fucompp
lds
dec
mov
push
xchg
pop
std
sub
jbe
pop
sub
cmp
fwait
mov
test
out
in
sti
dec
and
adc
xchg
pop
ds
and
xor
jp
and
loop,pn
lcall
mov
cs
inc
sub
mov
xchg
popf
sti
cmpsb
push
sahf
push
mov
xchg
sbb
inc
or
scas
mov
test
adc
and
push
fdiv
ror
insl
repz
adc
test
dec
mov
mov
pop
xchg
lea
sub
fisubs
lahf
sub
loope
adc
adc
mov
sub
mov
imul
fucomi
outsb
popa
inc
fs
or
pop
pop
jmp
mov
mov
mov
add
outsb
push
stos
and
mov
adc
xchg
push
add
jns
mov
mov
mov
test
dec
jno
repnz
pop
stos
call
mov
mov
and
push
mov
push
outsb
andps
pop
push
and
in
cli
push
ss
jmp
push
fdivs
inc
mov
inc
xor
push
cs
mov
cmpsb
stc
nop
xchg
aam
rol
popf
mov
push
pop
adc
loope
and
loope
xchg
aam
lock
bnd
inc
lahf
push
aad
jo
out
fsubl
daa
scas
mov
xor
aad
scas
push
sbb
xor
and
mov
rcr
push
repz
push
pop
les
mov
cmp
ss
jo
xchg
cmp
cmp
xor
and
cmp
push
dec
mov
das
mov
lods
mov
or
add
stos
mov
cltd
sub
push
adc
mov
xchg
cli
addl
push
add
inc
mov
pop
pop
and
dec
ljmp
aad
stos
inc
lea
mov
or
mov
and
push
loopne
fs
adc
icebp
jno
js
xchg
xor
and
xchg
xchg
dec
pushf
and
cld
mov
mov
dec
lret
jbe
roll
mov
jb
xor
or
loop
imull
mov
inc
xor
inc
int
pop
mov
add
or
push
loopne
mov
test
andb
cmp
push
xchg
cld
xchg
sub
and
jl
mov
mov
xlat
aaa
loop
dec
xor
test
push
popl
mov
jp
mull
lods
imulb
mov
fldl
sbb
out
or
nop
loopne
rcll
add
aad
jno
sbb
xchg
in
cltd
xchg
sub
sbb
addr16
adc
jbe
test
rclb
scas
mov
cmp
cmp
movsb
lds
cmp
push
mov
or
popf
loope
xchg
dec
enter
push
jbe
pop
xchg
insl
sahf
adc
popa
shrl
jl
xorl
jno
jp
jae
cli
or
sub
lods
mov
cmp
xlat
mov
adc
ja
sub
dec
jle
adc
or
imul
xlat
pop
adcl
mov
xchg
sbb
imul
gs
rcrl
fldenv
je
negl
aas
aad
bound
or
popa
jp
bound
cs
test
cltd
xlat
pop
loop
stos
adc
xchg
scas
adc
push
jo
xor
xchg
and
mov
andb
test
icebp
dec
pop
ffree
add
ret
push
adc
lea
mov
push
cwtl
or
inc
je
and
xchg
cwtl
and
xor
insb
mov
ret
inc
xor
stos
and
lods
fisubrs
test
adc
cmp
lds
dec
aad
xlat
pop
fsubrs
test
stc
cmc
ficomps
popa
cmp
bound
xchg
xchg
scas
notl
jne
cld
cltd
adc
sbb
imul
mov
xchg
mov
inc
add
sub
push
fyl2x
int3
in
sbb
sub
add
out
sub
andl
xor
or
lds
in
mov
or
adc
movsb
insb
loop
lods
and
leave
mov
imul
jl
pop
fsts
pusha
and
cmpsl
fstpt
xor
xchg
pushf
movsl
and
outsb
in
idiv
int
xor
bound
xlat
gs
loop
jp
adc
xchg
scas
adc
dec
jno
cmp
adc
pop
dec
jmp
fisttps
mov
mov
aad
into
jle
sub
ret
and
inc
jg
stc
cld
ds
add
fwait
clc
add
test
xor
addr16
mov
in
mov
and
add
xchg
and
mov
fistpl
imul
subps
rorl
cmp
adc
push
shll
scas
jnp
dec
rcll
mov
inc
loopne
sbb
adc
adc
shld
sbb
popa
pop
adc
out
cmp
adc
popf
sbb
mov
dec
inc
in
int3
and
mov
mov
enter
mov
push
pop
ret
cmp
add
jle
scas
out
icebp
test
fmuls
sub
insl
int3
add
sub
lds
lods
das
inc
cmp
mov
mov
pop
jbe
xor
mov
add
leave
push
inc
adc
pop
imulb
jnp
push
fiaddl
pop
xor
aad
movsb
inc
lods
frstor
sub
nop
ss
add
test
les
ficoms
sti
add
mov
add
sub
int3
shll
add
xchg
mov
xor
jo
or
xchg
mov
arpl
imul
out
rcl
sub
stos
aaa
sbb
xor
sub
jo
test
lock
or
push
addr16
jo
xchg
adc
inc
pop
pop
popf
pop
xchg
pop
mov
arpl
adc
cmp
cmp
add
popf
aas
adc
rcll
adc
xor
pop
movsl
add
xchg
aas
mov
int
and
cmp
add
lods
sahf
popa
cmc
jmp
pop
sbb
insl
into
call
xchg
push
mov
xchg
dec
scas
out
mov
adc
mov
aam
fsubrs
mov
xchg
cs
xchg
xlat
sub
push
adc
jg
movsb
cmp
cli
fcmovne
xchg
test
adc
call
lcall
mov
ja
mov
dec
adc
mov
mov
adc
int3
lds
adc
ret
fnstsw
das
jbe
insb
jl
sub
pop
scas
push
cmp
sub
repnz
xchg
pop
pop
xor
insl
cmpsl
mov
shl
shll
adc
ljmp
push
out
mov
loopne
sbb
adc
das
stos
add
mov
stos
ds
fcmovbe
cld
sub
sub
fldl
adc
and
cmp
ficoml
pop
imul
xlat
adc
int
je
mov
jae
lds
lcall
insl
aaa
aad
push
lret
leave
jne
dec
add
cmp
xlat
push
adc
test
aaa
es
add
div
fisubs
pop
add
aam
lea
aaa
fildl
cmp
rcll
or
jecxz
stc
sbb
adc
lods
cwtl
std
xorl
mov
mov
fists
lock
cs
add
sub
add
mov
xchg
adc
dec
mov
push
in
sub
out
inc
lods
mov
xor
xchg
mov
xor
test
outsb
pop
xchg
test
pop
divl
fistl
ss
push
pop
xchg
es
out
ja
test
mov
fwait
jle
jns
repnz
cmp
inc
loopne
out
xlat
adc
mov
std
adc
insl
cmp
aas
dec
xchg
pop
sub
xor
pop
in
bound
adc
testl
shlb
and
xchg
or
xchg
into
and
inc
push
rcrb
fildl
pop
cmc
jecxz
pop
adc
in
add
sub
jge
pop
or
or
and
in
test
adc
test
mov
nop
sti
adc
clc
ja
ret
test
mov
pop
push
mov
and
adc
fbstp
sub
xchg
adc
fcmovnu
imul
dec
mov
mov
xor
es
and
mov
mov
jno
mov
stos
lds
inc
xor
dec
xchg
sbb
cmpsb
mov
fisttps
data16
cltd
mov
cli
or
cmp
jne
push
add
push
ss
mov
adc
sti
mov
cmp
adc
sub
xchg
cltd
cmc
hlt
inc
adc
push
push
jp
and
cwtl
lds
jns
xchg
and
sbb
xchg
pop
lea
cmp
adc
lds
xchg
aad
popa
dec
test
add
scas
push
sub
das
and
push
xchg
call
sub
ss
xlat
jle
scas
test
dec
mov
cmp
ficoml
stc
mov
cs
cmc
mov
ret
int3
into
xchg
dec
xlat
je
cmpsl
mov
lahf
call
inc
imul
or
mov
xlat
lret
test
xchg
sbb
mov
dec
int3
xor
stos
insl
and
adc
cmp
push
lret
mov
das
or
and
lock
stos
mov
xlat
daa
add
push
push
push
fucomp
stos
pop
adc
lahf
test
adc
stc
aaa
mov
cmp
sub
pop
loop
out
mov
mov
iret
push
and
mov
mov
or
rorl
test
gs
and
daa
lods
xchg
scas
jb
push
mov
sahf
lds
aad
out
and
pop
sub
and
imul
enter
push
xchg
dec
lods
adc
and
shlb
adc
dec
int3
fwait
in
jecxz
pop
sub
fadd
aas
and
stc
adc
mov
imull
sub
add
in
data16
lds
jbe
imul
in
mov
mov
daa
test
sbb
mov
in
mov
les
cli
mov
dec
test
push
inc
ret
sub
sbb
inc
out
sub
pop
and
adc
stc
pop
sub
cmp
cmp
mov
mov
xor
sub
rolb
sti
lahf
cmpsl
jbe
xor
adc
sub
ret
test
and
mov
mov
dec
mov
lret
lret
cltd
and
lea
adc
out
arpl
test
shrb
add
ss
and
sub
adc
cltd
push
cmp
and
fildl
jae
adc
dec
add
adc
adc
enter
mov
rorl
xchg
sub
push
xor
test
xlat
pop
outsl
adc
jb
xor
out
fmul
adc
and
adc
dec
ljmp
fdivl
jne
add
movsb
cmp
daa
movsl
ret
rclb
ss
pop
sahf
leave
mov
in
insl
adc
mov
jno
or
ljmp
mov
filds
mov
mov
jae
add
lods
sub
and
pushf
jo
jmp
and
test
fwait
adc
push
and
enter
sbb
sar
ret
idivl
xlat
xor
adc
inc
cmp
adc
or
cmc
jecxz
cs
sub
mov
push
scas
sub
sbb
adc
dec
in
sbb
aad
stos
fldt
jecxz
dec
and
xor
add
test
es
push
cmpsb
insb
cltd
push
sbb
cwtl
movsb
pop
sub
push
sbb
jbe
test
daa
jg
mov
test
push
call
xor
fdivs
fsubrs
sub
cld
pushfw
clc
mov
fucomi
orl
and
dec
int3
push
adc
and
mov
xor
cmpsl
fisubrl
mov
inc
call
jae
pushf
test
lea
pop
jmp
jmp
sub
sub
call
mov
mov
sub
cltd
pop
aaa
clc
les
jle
test
pop
out
ret
push
xor
bnd
jecxz
cmp
enter
fcomps
mov
es
add
js
push
hlt
pushf
sbb
and
push
cmp
int3
add
pop
call
in
aad
jae
and
sub
and
lods
push
out
jmp
sub
test
cli
jle
adc
into
push
or
xlat
push
mov
push
ds
mov
cwtl
mov
pop
dec
jns
test
int3
or
outsb
dec
jne
mov
mov
mov
add
cmp
movsl
loop
repz
ja
or
iret
cld
sbb
add
sub
cmp
adc
mov
shll
jne
js
push
and
push
mov
jne
cwtl
dec
and
test
or
aam
dec
test
enter
call
xchg
xchg
das
daa
sub
push
add
lahf
call
int3
lods
push
cmc
cwtl
push
jo
mov
mov
sub
mov
test
sub
iret
repnz
aaa
sub
cltd
sub
enter
mov
cwtl
adc
imulb
add
push
or
push
stos
push
daa
pop
clc
cmp
mov
daa
test
pop
mov
pop
inc
fmul
or
inc
pop
cmp
cltd
js
add
push
imul
xchg
cmp
popf
enter
call
pop
xor
mov
and
js
mov
cs
jecxz
mov
pop
jae
jecxz
or
xor
add
aad
mov
cwtl
sub
sbb
mov
popa
loop
jne
and
call
cwtl
cmc
dec
xchg
and
push
fdivs
test
paddsw
mov
and
enter
pop
mov
push
xchg
sub
jb
jne
lods
mov
mov
call
shl
mov
loope
and
mov
fmuls
cmpl
lahf
js
popf
lds
push
xchg
es
xchg
push
mov
sbbb
push
mov
mov
test
mov
cwtl
push
daa
pop
test
mov
pop
popa
push
xchg
das
push
int3
mov
pop
mov
sub
dec
inc
jecxz
movsl
pop
pop
push
jo
xchg
jmp
jecxz
mov
dec
mov
or
cwtl
and
bound
dec
mov
lods
mov
sbbl
or
test
sub
mov
test
stc
mov
push
pop
loopne
adc
push
js
loope
imul
pop
fisubs
mov
cwtl
sub
push
rclb
add
inc
js
fldcw
adc
pusha
or
mov
sbb
and
xchg
bsf
clc
dec
xchg
shl
bts
mov
test
bswap
mov
stc
dec
bswap
rcr
mov
pusha
cmp
not
xadd
mov
pushl
sete
adc
xor
lea
call
pushl
movl
mov
cmc
clc
movw
ror
pushl
call
call
cmc
pusha
pushf
clc
not
cmc
pushf
neg
cmp
jmp
pushl
call
stc
cmp
pushf
pushf
pushl
lea
je
pusha
cmc
jmp
call
loop
mov
and
add
or
outsb
mov
and
rcll
jle
dec
xor
jg
js
dec
scas
dec
jno
loop
cmpsl
fmulp
scas
movlps
js
mov
aad
mov
and
sbb
jmp
jae
or
call
sti
push
test
mov
outsl
pusha
jne
cmp
pushf
pushl
cmp
mov
pushf
pushl
push
lea
ja
pusha
imul
jmp
pushl
popl
pushf
push
pusha
lea
jmp
ror
mov
push
rol
rcr
pushl
popl
bswap
movsbw
movl
cmc
movsbl
rcr
bts
mov
mov
rol
call
btc
mov
sbb
rcl
shl
add
call
xor
mov
movw
lea
jmp
mov
jmp
call
mov
pusha
call
pushf
mov
pusha
add
pushf
lea
jmp
jmp
sub
xor
xor
mov
add
rcr
neg
call
pushf
call
call
stc
stc
sub
pushf
mov
pushl
mov
pushf
lea
jmp
bts
pusha
rcl
mov
mov
clc
add
mov
mov
pusha
push
lea
jmp
call
jmp
pushf
jmp
pushf
push
mov
mov
push
mov
pushl
call
mov
push
lea
jmp
call
rol
sbb
not
mov
clc
push
xor
jmp
pushl
push
xchg
pusha
repz
popl
mov
btr
rol
mov
btr
btc
rcl
pushl
popl
rcr
movl
btr
jmp
mov
pushf
mov
inc
add
mov
stc
push
pushf
add
pusha
clc
shld
push
movl
mov
push
jmp
rol
shrd
neg
btr
mov
bt
cmp
test
add
pushf
lea
jmp
mov
pushl
popl
jmp
pushf
call
stc
pushf
rol
pushf
push
jmp
jmp
pushf
pushf
mov
pusha
not
mov
movsbw
mov
lea
lea
pusha
mov
movsbw
pushf
pop
mov
setb
xchg
mov
mov
push
movzbw
mov
xchg
movzbl
not
mov
pop
pushf
push
repz
popl
xchg
btc
lea
not
xchg
movzbw
pushl
popl
ror
movl
jmp
neg
clc
mov
sbb
mov
test
pusha
bt
push
sub
pusha
shl
jmp
call
pushl
popl
pushf
pushf
lea
jmp
push
jb
push
jmp
mov
pushf
mov
jmp
and
call
movb
jmp
test
add
push
pushf
jmp
pushf
push
mov
call
lea
ja
btr
mov
add
bsr
lea
rcr
rol
sub
adc
lea
test
adc
shld
adc
and
bsf
cmc
btc
call
sub
movb
stc
jmp
lea
ja
mov
push
pusha
push
lea
jmp
cmc
add
pushf
pushl
lea
jmp
jmp
pushl
popl
pushf
mov
mov
pushf
lea
jmp
cld
mov
movb
mov
rep
xor
add
mov
dec
sar
adc
mov
push
cld
movw
pushl
popf
movw
movw
mov
lea
jmp
ror
btr
mov
mov
mov
call
mul
jmp
stc
mov
shl
pop
mov
bsr
pop
bswap
daa
lahf
cltd
pop
std
push
jmp
movl
not
stc
mov
bt
lea
jns
cmc
rol
push
inc
add
jl
xor
push
pusha
lea
jmp
pushf
mov
movb
push
mov
mov
call
push
call
xchg
pop
pop
mov
not
repz
popl
btr
not
rcr
movsbw
mov
bt
clc
push
bswap
pushl
popl
bt
lea
pop
movl
bt
clc
rcr
mov
clc
rol
call
pusha
mov
cmc
add
pusha
jmp
pusha
push
mov
movb
mov
mov
lea
jmp
jmp
dec
stc
clc
cmp
pushf
or
pushf
mov
push
pushf
lea
je
pusha
xor
stc
cmp
xchg
cmc
mov
push
push
test
sub
call
add
pusha
sub
test
clc
sub
pushf
lea
jl
pusha
mov
pusha
pushl
push
mov
lea
jmp
call
add
pushl
cmc
push
cmc
sub
movb
mov
pushf
pushf
mov
lea
jmp
push
mov
push
jmp
movzbw
repz
popl
bswap
cmc
rcr
mov
lea
ror
pushl
popl
pop
rcl
movl
rcr
pushf
bswap
pushf
mov
jmp
bswap
mov
mov
movzbl
mov
pusha
rol
setne
bswap
bswap
call
pushf
pusha
mov
pushf
movb
movb
jmp
jmp
push
mov
call
clc
rol
jmp
pusha
xor
test
cmc
add
jnp
add
pushf
not
jmp
mov
call
mov
pushf
mov
call
mov
push
mov
push
pushf
pusha
xchg
bswap
push
repz
popl
btc
mov
btr
bts
pushl
popl
ror
movl
bt
stc
pusha
mov
jmp
mov
pushl
pushl
lea
jmp
call
movb
inc
jmp
push
inc
test
stc
pushl
clc
xor
push
pushf
pushl
movb
lea
jmp
mov
pusha
pushl
lea
jmp
cmp
xor
pushf
pushf
lea
jmp
shld
sbb
not
mov
bsf
pushf
mov
bt
movb
add
mov
jmp
jmp
mov
mov
movw
lea
jmp
pushf
dec
btc
neg
btr
setae
rcl
sets
rol
cmc
sub
neg
xor
ror
not
mov
pusha
add
push
call
pushf
jmp
mov
jmp
mov
movb
movb
lea
jmp
mov
pushf
mov
movw
call
movw
mov
mov
pushl
pushf
mov
jmp
call
pushf
pushl
mov
mov
pushl
movb
lea
jmp
pushf
pusha
and
movw
cmc
jmp
cmp
add
pushl
lea
jmp
movb
call
not
stc
jmp
ror
mov
bt
bt
clc
clc
rol
pushf
jmp
push
pushl
popl
mov
lea
jmp
xor
push
movb
add
push
pusha
sub
movb
mov
movb
mov
mov
pushl
lea
jmp
xor
push
pushf
pushf
lea
jmp
shr
push
push
stc
or
pushf
xor
pushf
inc
movw
mov
pushl
mov
decl
push
push
call
cmp
bt
add
movw
pushf
movb
jmp
pusha
pushf
push
mov
push
pushf
pushf
lea
jmp
movl
rcr
rcr
pushf
mov
cmc
clc
call
pushf
popl
movb
mov
pushf
pushf
pushl
popl
push
pushf
pushf
lea
jmp
pusha
divl
pushf
mov
lea
jl
mov
pusha
pushl
pushf
popl
pushf
call
shl
adc
aam
mov
btr
btr
mov
pusha
mov
stc
add
pushf
mov
pusha
lea
jmp
pusha
movsbw
ror
rcl
bt
add
shr
adc
neg
movl
cmc
add
push
push
not
movzbl
call
aad
mov
clc
pushf
and
mov
clc
jmp
inc
cmc
bt
xor
movb
mov
mov
lea
jmp
sbb
aaa
shr
stc
mov
pusha
sub
stc
call
mov
push
call
not
bt
ror
pusha
sete
push
inc
stc
xor
pushf
inc
dec
bswap
call
pushf
mov
mov
call
call
movb
push
mov
mov
pushf
lea
jmp
mov
pop
repz
popl
rcl
mov
push
btc
btc
pushl
popl
clc
clc
lea
movl
rcl
jmp
xor
mov
mov
lea
jmp
xchg
push
movsbw
lea
repz
popl
movzbw
pushf
bswap
bt
mov
not
lea
pushl
popl
bts
rcl
movl
movsbw
bt
not
movsbw
mov
call
rcl
mov
pushf
stc
rol
jmp
mov
pusha
mov
push
jmp
pushf
movb
call
pusha
mov
mov
not
pushf
pushl
mov
jmp
jmp
mov
pushf
mov
movb
lea
jmp
call
inc
rcl
xor
add
rcl
mov
push
sbb
neg
sub
rol
jmp
bswap
movl
bt
rcl
mov
call
pushl
popf
pusha
not
movzbw
call
inc
movb
stc
xor
pusha
lea
jmp
call
jmp
mov
push
pusha
call
mov
mov
push
push
movl
lea
jmp
lahf
or
pushf
setle
movzww
pushl
stc
jmp
call
mov
call
rcl
daa
mov
jmp
jmp
jmp
jno
stc
pushf
ror
cmp
jmp
cmc
setge
rcr
notl
call
pushl
jmp
mov
jmp
pushl
popl
pusha
lea
jmp
call
mov
pushf
pushf
movb
lea
jmp
clc
call
pusha
mov
push
movl
jmp
xchg
not
bswap
pushf
repz
popl
clc
btr
not
mov
lea
cmc
pushl
popl
movsbw
bswap
movl
pushf
btc
mov
mov
rol
push
inc
push
mov
mov
xor
pushf
pushf
lea
jmp
cmc
rol
call
inc
clc
stc
xor
movl
movw
mov
push
lea
jmp
push
pushf
jmp
jmp
push
call
call
pushf
cmc
pusha
pushl
popl
call
call
pushf
test
not
pusha
not
pushf
sub
bt
and
lea
je
pushf
mov
jmp
lahf
mov
cwtl
pusha
lea
mov
jmp
push
pushl
call
pushf
popl
push
pushf
pusha
pushl
popl
pushf
pushf
pushl
lea
jmp
pushf
popl
jmp
not
stc
mov
pop
pushl
popl
pushf
rcl
mov
pushf
movl
lea
pushf
clc
movsbw
mov
movb
jmp
call
cwtl
lea
call
pushf
popl
push
pushl
popl
pushf
lea
jmp
pusha
pushf
inc
test
pushf
clc
pushf
xor
movb
jmp
call
mov
push
lea
jmp
inc
pushl
dec
sar
not
adc
xor
setbe
call
push
mov
movw
mov
pusha
mov
call
push
mov
pusha
pushl
pusha
mov
call
jmp
mov
pushf
push
pushf
pushl
ret
jmp
test
mov
call
mov
pushl
jmp
jmp
cmc
movw
pusha
add
pusha
movw
movb
pushf
lea
jmp
inc
bt
lea
jno
ror
bt
pushf
bt
clc
xor
clc
pushf
add
cmp
jmp
pushf
call
push
movb
mov
jmp
mov
push
pushf
mov
pushf
jmp
mov
mov
pushl
push
push
lea
jmp
mov
mov
pushf
push
pushf
lea
jmp
stc
bt
rol
mov
mov
call
mov
push
mov
lea
jmp
bswap
repz
popl
cmc
bswap
mov
rol
pushl
popl
cmc
movl
pushf
bswap
movsbw
mov
bt
bt
rol
call
pushf
pushl
mov
call
mov
call
sub
mov
pushl
push
pushf
mov
pusha
mov
push
lea
jmp
pushf
jmp
pusha
pushl
pushl
mov
mov
pusha
movb
pushf
mov
call
movw
push
lea
jne
bsr
rcl
not
mov
call
not
pushl
not
mov
movb
mov
call
pusha
bts
ror
sbb
neg
shl
xor
setb
bswap
dec
bswap
inc
movzbl
and
or
push
and
neg
mov
cmc
lea
js
push
cmp
sub
jmp
pushf
pushf
mov
call
lahf
setl
das
bt
mov
call
inc
cmc
xor
mov
lea
jmp
inc
stc
cmc
call
mov
pusha
pusha
lea
jmp
jmp
sub
mov
mov
dec
pushl
push
movb
mov
pushl
pushf
movw
push
lea
jmp
mov
pushf
movw
jmp
pusha
mov
pusha
push
call
pushf
pushf
test
sub
jmp
cmc
add
call
mov
movb
jmp
dec
mov
neg
clc
call
dec
shl
aaa
cmp
mov
movsbw
stc
cmp
xor
mov
cmp
pushf
add
movb
jmp
stc
cmc
pushf
sub
jmp
pushf
popl
jmp
shl
mov
jmp
pushf
jmp
pushl
mov
jmp
push
clc
stc
rol
movb
jmp
cmc
stc
clc
rol
mov
push
push
pushf
inc
cmp
xor
push
mov
movb
lea
jmp
push
push
mov
jmp
jmp
pushf
mov
jmp
push
cmc
stc
pusha
sub
cmp
cmpl
call
mov
pushl
movb
mov
call
pushf
call
call
pushf
mov
mov
pushl
pushl
mov
mov
pushl
pushf
mov
pushf
push
jmp
mov
push
cmp
jmp
mov
mov
push
pushl
jmp
and
pushl
lea
js
push
pushf
popl
push
jmp
pushf
push
push
mov
pushf
xchg
not
repz
popl
jmp
jmp
mov
call
mov
mov
mov
call
movl
movl
mov
movl
mov
push
mov
lea
jmp
mov
jmp
mov
push
movw
push
mov
mov
mov
mov
pushf
jmp
jmp
movb
pushl
popl
pushf
pushl
push
pushf
lea
jmp
mov
pushl
jmp
pushf
popl
lea
jnp
pushf
pushl
popl
mov
pushl
lea
jmp
and
stc
test
stc
mov
cmp
pusha
jmp
pusha
push
pushl
popl
pushf
lea
jmp
pushl
mov
pushf
call
mov
push
call
jmp
pushf
pushl
push
pushf
popl
jmp
rol
and
rcl
inc
mov
rcl
mov
jmp
adc
jmp
pusha
mov
pushf
jmp
movb
xchg
pop
movzbw
repz
popl
pop
movsbw
pop
rcl
mov
ror
stc
pushl
popl
rcl
movl
mov
bswap
mov
pushf
stc
pushl
rol
mov
push
inc
stc
pushl
test
xor
mov
lea
jmp
div
movw
mov
jmp
rcl
pop
mov
call
pushf
pushl
popl
mov
call
call
pusha
mov
pushl
pusha
mov
push
movb
jmp
call
ror
bt
push
bt
add
pushf
stc
push
pusha
neg
pushf
pushf
bt
bt
add
cmc
cmp
stc
cbtw
push
cwtl
jmp
xor
bt
call
call
jmp
movw
pushl
popl
push
pushf
mov
movb
lea
jmp
jmp
xchg
pusha
pushf
pushf
repz
popl
stc
pushf
call
pushf
pushf
xchg
movzbw
mov
pushf
jmp
and
xorb
lea
mov
setbe
bswap
setg
pop
pusha
push
pusha
lea
jmp
push
sub
mov
pusha
jmp
ror
ror
or
pushf
neg
xor
movsbw
movzbw
inc
neg
and
pop
mov
jmp
pushf
pushf
popl
push
movb
call
repz
popl
cmc
bts
jmp
daa
mov
stc
mov
pushf
pushf
clc
add
movb
mov
movb
lea
jmp
jmp
mov
mov
call
call
btr
rol
cmc
movl
clc
clc
ror
mov
mov
stc
jmp
call
jmp
push
mov
pushf
movb
lea
jmp
call
movb
mov
jmp
lahf
pusha
pusha
movsbl
mov
call
pusha
mov
jmp
call
pushf
inc
cmp
xor
movb
mov
lea
jmp
movl
pushf
xchg
pushf
jmp
clc
shl
call
pusha
call
push
call
call
pusha
pusha
call
xorb
setne
pop
push
mov
push
push
lea
jmp
pushl
popl
push
pushl
lea
jmp
push
rol
jmp
xor
pushf
add
cmc
pushf
cwtl
call
mov
pushl
mov
mov
xchg
movsbw
not
jmp
cmp
pushl
xor
push
pushf
lea
jmp
pushf
shr
movb
call
call
shl
cmp
sbb
call
pushf
mov
pusha
pushf
push
mov
lea
jmp
movzbl
bswap
aad
bt
mov
rcr
neg
bt
mov
cmc
add
call
pushf
mov
call
push
mov
jmp
mov
bswap
mov
pop
mov
movzbl
rdtsc
push
mov
lea
not
bswap
not
mov
bswap
push
mov
pushf
mov
movb
mov
pushl
ret
call
call
stc
mov
btr
mov
sar
mov
test
test
add
jmp
jmp
mov
pushf
popl
call
push
add
pushf
mov
push
lea
jmp
add
movzbw
mov
clc
add
pusha
lea
jmp
push
mov
mov
mov
pushf
call
inc
or
mov
mov
call
add
movl
stc
sub
cmp
pushl
jmp
bt
add
pushf
call
pusha
pushf
mov
push
movb
jmp
pushf
mov
mov
pushf
popl
pushl
movb
call
jmp
mov
mov
mov
call
mov
pushl
popl
mov
lea
jmp
push
call
call
mov
mov
pushf
lea
jmp
bt
mov
pusha
bt
add
pushf
pushf
mov
lea
jmp
pushf
test
add
std
call
mov
shl
shl
sub
mov
stc
add
inc
add
inc
mov
shl
bsr
xor
movsbw
add
btr
ror
ror
shld
bswap
add
bts
pushf
sub
bt
neg
pusha
movsbw
neg
bsr
add
rcl
btr
stc
movzbl
btc
clc
jmp
pusha
mov
push
mov
pushf
mov
call
repz
popl
rol
btc
rol
pushf
mov
clc
rol
stc
pushl
popl
rcl
movl
clc
call
call
jl
sub
pushf
pushf
movb
shr
lea
jg
pushf
push
mov
pushl
pushf
popl
push
movl
pushf
pushl
popl
pushf
movl
pusha
lea
jmp
movsbw
shld
shl
or
mov
stc
test
call
push
mov
mov
jmp
xor
neg
mov
call
lea
jne
call
setno
setb
mov
pusha
lea
pushl
call
push
pusha
push
mov
pushl
jmp
dec
clc
bt
test
sub
jmp
pushl
pop
push
mov
stc
pushl
popl
btc
movl
rol
jmp
movb
xchg
test
bt
xor
cmc
call
mov
mov
movb
mov
pushf
pushf
lea
jmp
pushl
popf
pushf
pushf
lea
jmp
call
mov
pushf
pushl
movb
lea
jmp
xor
dec
mov
aad
mov
movsbw
mov
cmc
pusha
sub
jmp
pusha
mov
call
mov
call
jmp
jmp
cmc
rol
pushf
call
push
pushl
jmp
mov
mov
movsbw
movsbw
pop
repz
popl
bswap
mov
bts
rcl
bts
pushl
popl
push
ror
movl
call
push
call
push
mov
jmp
bts
btr
btr
xchg
mov
ror
ror
add
pushf
pushl
pushf
mov
push
pushf
mov
movw
pushf
pushl
lea
jmp
test
call
pusha
call
pusha
mov
push
pushf
pushf
push
mov
pushl
movb
push
mov
pushf
popl
lea
jno
popl
pushf
push
pushl
pushf
lea
jmp
pushl
popl
pushf
movb
lea
jmp
pusha
mov
mov
movw
mov
call
pushf
clc
pushl
sub
pushl
shr
pusha
jmp
rol
movb
inc
cmp
xor
pushf
mov
pushf
lea
jmp
mov
jmp
call
mov
pusha
movb
lea
jmp
pushf
mov
push
mov
mov
mov
mov
pushf
pushf
pushf
xchg
pushf
jmp
push
mov
push
lea
jnp
pushf
pusha
pushf
popl
movl
pusha
call
cwtl
pusha
stc
sub
lea
jo
pusha
push
mov
pushf
lea
jmp
cmp
call
mov
pusha
call
ja
pusha
pusha
mov
mov
mov
mov
pushl
mov
pushf
push
mov
movb
lea
ja
pushf
mov
call
movb
call
jmp
das
mov
or
cbtw
mov
stc
cmc
sub
call
shl
bsr
rcr
shl
mov
sub
or
mov
push
cmp
bt
pushf
add
pushf
mov
pusha
lea
jmp
call
mov
call
clc
mov
clc
push
stc
rol
call
lea
jno
pusha
rol
pushl
push
inc
test
mov
push
xor
pushf
push
lea
jmp
push
lea
jne
stc
sub
push
xchg
call
mov
call
mov
clc
call
btr
rcr
mov
sub
add
pushf
btc
xor
sub
bsf
test
call
xchg
mov
pop
repz
popl
rcl
jmp
pop
repz
popl
pushf
bswap
cmc
mov
mov
lea
btc
pushl
popl
pop
mov
movl
stc
mov
pushf
rol
movb
pushf
push
inc
push
pushf
bt
pushf
xor
pushf
pushf
lea
jmp
and
pushf
cmp
pushf
push
lea
jne
ror
jmp
mov
call
mov
pusha
movb
pushl
mov
mov
pushl
mov
push
mov
pusha
mov
pushf
pushf
mov
bswap
pop
repz
popl
movzbw
mov
bts
btc
pushl
popl
call
sub
bt
cmc
bt
cmp
shr
mov
mov
movb
jmp
clc
movl
pop
rcr
clc
mov
movb
stc
cmc
rol
pushf
inc
mov
test
cmc
xor
movb
mov
mov
lea
jmp
pushf
popl
push
call
movw
call
sar
movzbl
stc
test
add
cmc
jmp
movw
push
pushf
popl
jmp
pushl
popl
push
lea
jmp
push
call
bswap
jmp
movl
xchg
not
repz
popl
lea
rol
movzbw
mov
bt
pushl
popl
rol
movzbw
movsbw
movl
movzbw
stc
mov
jmp
repz
popl
bswap
rcl
mov
push
bts
rcl
stc
pushl
popl
jmp
pushl
jmp
sub
pusha
pushf
jmp
jmp
mov
push
push
mov
push
mov
call
pushf
inc
stc
stc
xor
push
push
movl
push
lea
jmp
xor
movw
pushf
pushf
jmp
cmc
push
clc
add
test
test
shrd
mov
pushf
mov
movl
call
pusha
movb
mov
mov
movb
mov
pusha
call
mov
pushf
mov
pushf
jmp
pushl
pusha
movl
call
lea
jne
movzbl
rol
call
mov
inc
pushf
xor
push
lea
jmp
pushf
mov
mov
push
pusha
mov
mov
pusha
pushl
call
pushf
mov
pushf
push
mov
pushf
repz
popl
rcl
cmc
mov
cmc
clc
pushl
popl
cmc
call
mov
call
pushl
pushf
mov
call
mov
push
rol
mov
call
pushf
rol
jmp
mov
pushf
movb
pushl
lea
jmp
inc
jmp
mov
push
pusha
push
push
mov
lea
jle
push
pushf
mov
pusha
mov
pushf
mov
mov
call
mov
movb
pushf
pushl
push
lea
jmp
pushf
popl
call
call
bsr
mov
test
test
clc
test
add
push
lea
jmp
pushf
popl
movb
pushl
mov
jmp
mov
mov
jmp
call
mov
mov
movw
pushf
pushl
ret
jmp
pushl
mov
movb
call
jmp
pusha
pushf
mov
mov
pushf
lea
jmp
bt
rol
pushf
call
pushf
popl
pushf
pushf
push
pushl
popl
movb
lea
jmp
rcl
shr
cbtw
mov
test
clc
sub
clc
jmp
movzbw
pop
pusha
movb
lea
jmp
pushl
xor
movw
test
stc
add
call
push
jmp
jmp
pusha
pushl
pushf
inc
stc
ror
pushl
call
pushf
mov
call
mov
mov
call
inc
movb
xor
movl
movl
mov
pushf
lea
jmp
pusha
call
movb
pushf
inc
pushl
movw
cmp
mov
xor
movb
pushl
mov
movw
lea
jmp
mov
pushl
jmp
inc
clc
xor
mov
lea
jmp
add
add
pushf
pushl
popl
movw
mov
movb
lea
jmp
not
test
mov
cmp
add
pusha
pushf
lea
jmp
jmp
mov
cmc
stc
clc
call
cmc
sub
pusha
mov
mov
mov
pusha
lea
jmp
jmp
cmc
call
stc
stc
ror
pusha
test
jmp
pushf
jmp
call
bsf
mov
clc
test
test
add
call
test
rol
rcl
shl
mov
shr
neg
mov
cmc
test
bt
sub
cmp
test
shl
pusha
mov
jmp
pushf
popl
mov
pushl
popl
pushl
pushf
lea
jmp
movzbw
dec
mov
mov
shl
xor
rcl
ror
seto
call
call
cmp
sub
pusha
pushf
jmp
xor
pushf
call
xchg
mov
btr
push
add
jmp
sub
push
bswap
mov
mov
pushf
lea
pushf
popl
pusha
pusha
mov
pushf
movzbw
not
mov
movzbl
lea
std
push
jmp
pushf
popl
pusha
pushf
pushl
popl
pushf
lea
jmp
push
not
mov
push
jmp
pusha
pushf
pushl
lea
cpuid
stc
clc
cmp
ja
sub
stc
cmpl
pushf
mov
pusha
pushf
mov
lea
jle
mov
push
mov
mov
movb
push
push
lea
jne
rcr
shl
lea
mov
jg
bt
and
test
cmp
cmp
push
jmp
jmp
shr
mov
stc
sub
setns
sbb
mov
cmp
pushf
call
adc
shl
mov
jmp
clc
push
mov
test
bt
stc
jmp
btc
mov
bt
sub
push
mov
push
pusha
mov
pushf
lea
jmp
mov
cmc
call
call
mov
push
movb
pushf
lea
jmp
inc
cmc
jmp
call
pushl
popl
pushf
lea
jmp
pushf
add
pushl
pushf
movb
pushf
lea
jmp
btr
aaa
mov
cmp
jle
clc
cmc
sub
jmp
push
cmp
bt
lea
cmc
clc
clc
test
sub
jmp
movb
stc
call
jmp
pusha
call
mov
call
jmp
adc
movsbl
or
rdtsc
pusha
cmc
clc
stc
sub
pushf
mov
pusha
pushf
mov
push
movb
push
lea
jmp
clc
rol
push
inc
mov
clc
jmp
mov
pushf
not
pushl
pushf
ror
push
call
mov
movw
jmp
jmp
movsbw
push
lea
mov
mov
lea
js
mov
call
shl
jmp
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
rorb
add
rorl
add
aam
pusha
xor
aam
pusha
xor
aam
pusha
xor
aam
pusha
xor
aam
pusha
xor
aam
pusha
xor
rorl
pusha
xor
aam
pusha
xor
xlat
or
rorb
inc
inc
xlat
or
jnp
or
rorb
pusha
or
xchg
rorl
inc
inc
xlat
or
cli
rorb
shl
or
fcmovbe
or
aam
add
rorb
inc
xchg
rorl
mov
mov
rorl
shrb
orb
or
out
or
ja
or
call
or
push
rorb
mov
cld
rorb
mov
adc
add
or
xchg
or
rorl
mov
ja
or
rorl
mov
cmc
aam
and
rorb
rolb
add
or
insl
xlat
or
imul
loopne
aad
pusha
jbe
or
out
or
xchg
aam
and
aam
rclb
or
xchg
rorl
add
rorl
loopne
aad
and
or
outsb
rorl
and
or
rorb
mov
push
rorb
and
rorb
shrb
and
rorb
rclb
or
daa
xlat
or
rorl
add
aam
pusha
mov
aam
pusha
jbe
or
out
or
daa
xlat
or
xchg
or
add
or
cli
rorb
mov
popf
rorb
loopne
rorl
mov
xor
or
cmc
rorb
pusha
mov
or
adc
loopne
rorl
add
or
rorb
and
or
call
or
jb
or
mov
or
imul
rolb
mov
arpl
or
dec
xlat
or
cmp
or
call
or
aam
adcb
or
or
rorl
add
or
jb
or
cld
rorb
pusha
mov
or
rorb
orb
or
cs
or
rorl
sarb
or
outsb
rorl
rolb
xorb
add
or
rorl
add
or
xchg
aad
pusha
jb
or
cli
rorb
add
xlat
or
mov
or
mov
or
xchg
rorl
mov
jno
or
xchg
aad
loopne
or
and
or
jno
or
jnp
or
stos
rorl
loopne
or
rorb
inc
add
or
xchg
aam
mov
xchg
rorl
loopne
aad
xorb
pusha
or
rcl
or
jne
or
jnp
or
imul
mov
lods
aam
adcb
mov
stos
rorl
inc
rorb
mov
and
or
or
or
aam
loopne
or
inc
aad
loopne
or
ds
loopne
rorl
add
aam
loopne
or
xchg
aam
add
rorl
loopne
xlat
or
outsb
rorl
add
or
push
rorl
inc
add
or
cmc
rorb
pusha
mov
or
xchg
aam
inc
xchg
rorl
and
or
mov
or
dec
or
cmp
or
outsb
rorl
adcb
pusha
stos
rorl
add
or
data16
or
adc
rclb
or
xor
pushl
popl
pushf
lea
jmp
stc
cmp
mov
mov
lea
jne
inc
cmc
inc
xorb
bswap
seta
jmp
mov
push
lea
jne
ror
pusha
neg
ror
mov
mov
jmp
mov
pop
pusha
push
jmp
jmp
movsbw
mov
pusha
mov
call
repz
popl
rcl
rcl
mov
ror
pushl
popl
stc
movl
rol
jmp
add
pushf
jmp
mov
call
push
call
pusha
clc
pushf
stc
rol
test
cmc
xor
push
cmp
pushf
mov
movl
cmp
sub
pushf
jmp
mov
pushf
mov
movw
mov
pushf
popl
jmp
movb
call
push
mov
jmp
mov
pushf
mov
call
bts
neg
ror
or
mov
sar
bt
dec
mov
add
mov
call
mov
jmp
mov
pushf
mov
jmp
push
cmc
lea
bt
stc
lea
jne
rol
bt
cmc
xor
test
clc
pusha
mov
bt
sub
call
sbb
mov
bsf
or
movzbw
mov
cmp
push
not
pushl
cmp
pushf
not
bt
bt
pushf
bt
and
pusha
mov
mov
pushf
call
push
mov
mov
pushl
push
mov
lea
jmp
mov
push
movb
pushf
mov
pushf
mov
pushf
mov
pushf
push
mov
pushf
call
pushf
pushl
lea
jne
dec
shl
movzbw
xorb
lea
pusha
bswap
pop
mov
movw
push
pushf
movl
lea
jmp
movsbw
repz
popl
pushl
bts
lea
bt
mov
not
jmp
pushf
call
shl
push
lea
mov
shl
jmp
xor
push
pushl
push
pushf
lea
jmp
cmp
test
add
call
call
cmc
mov
rcr
mov
pushf
pusha
mov
movb
sub
stc
add
mov
jmp
mov
call
mov
push
mov
jmp
pushf
push
mov
movw
jmp
neg
ror
rcr
mov
cmp
cmc
add
clc
ror
push
cmp
add
pushf
test
pusha
neg
cmp
test
pushl
cmp
add
jmp
push
pushl
popl
pushf
mov
movw
lea
jmp
movzww
cmc
clc
cmc
xchg
stc
xor
pushf
xor
pusha
lea
jns
inc
clc
pushf
ror
pushf
call
jmp
mov
pusha
pusha
call
