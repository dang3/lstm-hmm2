ja
and
cmp
mov
jg
jae
push
add
aaa
add
push
and
push
cld
sub
inc
addl
jno
shrl
stc
inc
mov
js
mov
testl
jp
mov
xlat
mul
out
mov
lds
inc
rcrb
pusha
adc
push
add
xchg
dec
mov
inc
xchg
xor
pop
inc
adc
push
pop
pop
dec
jbe
sbb
je
dec
or
repnz
add
add
xchg
imul
mov
xor
push
jno
mov
add
insl
mov
sbb
aas
lret
test
xor
jecxz
xor
out
in
movsl
mov
ljmp
dec
mov
dec
cmp
jb
pop
pop
push
dec
pop
adc
pusha
dec
xor
dec
pop
rorl
and
xor
shrb
pop
pushf
sub
add
and
mov
dec
mov
test
repnz
jmp
pushf
push
pusha
lea
call
push
pushl
jmp
cmp
pushl
pushf
jmp
jmp
bt
jmp
bsr
mov
clc
bt
push
cmp
mov
jmp
push
pushl
pushl
lea
jne
jmp
dec
movw
movw
ror
pushf
pushf
lea
call
bt
push
clc
test
cmp
push
jmp
mov
test
pusha
call
pop
sbb
pusha
in
pop
cwtl
push
out
insl
pop
mov
fdiv
xchg
lret
push
pusha
aam
addr16
imul
out
xor
lock
and
inc
or
sbb
aaa
push
scas
ss
mov
pop
add
fsubrl
daa
ror
stc
imul
add
jne
in
jge
mov
and
out
movsb
sub
pop
inc
mov
mov
outsb
mov
and
mov
in
daa
pusha
in
or
in
fmull
xchg
pop
lcall
hlt
jno
jne
faddl
ljmp
push
lret
lcall
cli
inc
mov
fisubrl
mov
mov
lods
or
dec
shlb
js
aas
arpl
loopne
sub
sub
add
repz
imul
jnp
repnz
ret
push
fildll
pusha
int
lcall
mov
add
inc
lret
xor
repz
or
jns
jl
or
je
or
movzbw
pusha
mov
call
fmuls
pop
aad
popa
add
fbld
movsb
neg
xchg
into
lahf
fildll
jb
xchg
cmp
dec
fildll
in
pusha
mov
pushf
pusha
pushl
ret
loope
jb
in
ret
mov
ljmp
or
adc
into
dec
add
movb
fs
mov
mov
xchg
out
or
jmp
in
fists
sbb
push
pop
xor
xchg
lcall
inc
dec
lods
das
mov
xchg
sub
mov
aam
loopne
in
or
daa
add
xchg
gs
scas
inc
cld
ffreep
pop
jp
fsubl
pusha
ss
in
push
cwtl
std
lock
sbb
mov
loop
add
hlt
push
mov
sbb
jecxz
fdivrl
mov
xor
ret
repz
push
push
jns
int3
jmp
fidivrs
int3
xlat
push
pop
jae
push
and
xchg
mov
ret
mov
cld
mov
xchg
or
jae
int
and
push
xor
push
insl
dec
lods
fisttps
push
jb
and
pushf
call
lea
je
jmp
jl
cs
in
mov
inc
scas
std
pop
mov
cmp
mov
icebp
inc
jmp
repnz
out
rcll
jecxz
pushf
arpl
xor
dec
js
sbb
xor
push
jmp
adc
or
sbb
imul
pop
mov
cmp
lret
aam
mov
adc
pop
das
cmp
push
jp
ljmp
xor
dec
xchg
aam
add
ljmp
and
xchg
adc
xchg
push
stos
cmp
mov
push
lea
je
push
cmp
cmp
pusha
push
jmp
pushl
push
dec
clc
xor
pushf
jmp
jmp
or
not
sub
not
lea
pushf
lea
jmp
sti
lahf
test
aas
add
push
lods
sub
cmp
test
orb
gs
orb
inc
mov
les
xchg
pop
xor
sbb
das
out
mov
cmp
jbe
out
mov
ret
inc
mov
movsl
orb
and
or
cli
dec
sub
mov
fsubs
icebp
inc
mov
or
xchg
and
in
sbb
push
sbb
popl
inc
push
mov
push
jo
lret
imul
bound
ror
adc
mov
add
inc
neg
mov
mov
bswap
shl
add
not
mov
shr
pushf
lea
call
int
and
adc
jl
mov
in
das
adc
jl
push
pop
mov
jno
inc
fadds
xor
mov
pushf
mov
xchg
xchg
sub
mov
cmp
jp
xchg
shlb
push
and
or
push
pushf
dec
mov
imul
xchg
adc
shll
add
clc
cmp
popa
sub
adc
and
pop
je
xchg
jge
mov
jecxz
lcall
mov
std
fnstcw
call
xor
es
aas
cmp
imul
pushf
push
sbb
adc
outsl
dec
cmpsb
jbe
mov
mov
mov
xchg
jne
mov
push
jne
jbe
stc
leave
cmp
fstpt
jp
jge
popf
mov
leave
adc
stos
roll
or
push
icebp
pusha
pop
mov
std
mov
mov
inc
add
incl
in
jge
test
push
mov
xor
pushf
ja
movsl
sub
hlt
push
repnz
push
cmp
imul
into
sbb
xlat
xor
sti
sub
and
ds
xchg
lret
dec
pop
in
call
dec
mov
fildll
and
test
mov
add
not
pop
push
sbb
popa
mov
daa
inc
mov
mov
xor
sbb
push
mov
loop
and
gs
adc
mov
fcomps
rol
lods
lcall
loop
pop
adc
pop
es
icebp
pop
xlat
mov
ja
cmpsl
xchg
roll
push
aad
stos
cmp
mov
dec
cld
pop
in
jmp
mov
jl
mov
dec
adc
sub
jae
xlat
mov
xlat
mov
fistl
mov
divb
xlat
jmp
xchg
xor
push
loopne
ud2
mov
mov
iret
ss
sbb
jg
mull
loopne
inc
sub
sbb
xchg
jno
pop
xor
add
pop
pop
in
loopne
push
xchg
fiadds
add
sub
jp
mov
fstl
sbb
fstl
ja
mov
pusha
insl
mov
push
aaa
dec
mov
ss
sbb
shlb
je
inc
lcall
lret
popa
leave
inc
in
sub
and
aas
enter
dec
mov
sbb
loope
or
adcb
out
and
movsbw
mov
not
call
cmpb
pusha
pusha
call
call
popf
and
adc
add
xchg
jle
lret
add
dec
mov
ss
dec
xchg
adc
pop
je
aas
fwait
inc
sub
pushf
cltd
mov
sub
dec
push
mov
insl
in
cld
sub
lods
hlt
add
test
shlb
nop
daa
mov
bound
enter
aaa
xchg
lret
and
rcl
enter
setle
stos
push
xchg
or
std
in
lods
shl
mov
lcall
jbe
sbb
mov
addb
stos
push
jp
add
outsb
lds
sbb
dec
lahf
out
xor
clc
ret
add
imul
out
stos
icebp
inc
inc
xchg
bound
andl
xchg
std
rcrl
mov
or
test
dec
out
lret
mov
pop
sbbb
pop
lret
jg
xchg
mov
xchg
in
add
inc
mov
jp
cmp
mov
pop
inc
sbb
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
mov
pop
and
dec
adc
mov
bound
pop
hlt
scas
mov
movsb
repz
or
scas
arpl
jae
or
mov
jne
sti
lds
jg
lods
push
add
negl
xchg
mov
adcl
insl
lock
mov
dec
loope
aas
and
std
push
dec
notl
into
xor
adc
pop
ss
out
cmp
adc
cmc
sub
sbb
add
pusha
lea
jmp
lea
ret
pushf
bt
pusha
bt
rol
clc
call
push
cmp
push
in
in
inc
es
lock
mov
mov
push
aam
pop
arpl
lds
jns
add
or
insl
xor
lret
sub
gs
ret
mov
fadds
sub
inc
mov
push
addr16
popa
push
cmp
jns
fcmovb
jo
loopne
ret
mov
xchg
insl
cmp
dec
in
test
dec
dec
aam
dec
sub
lods
mov
std
pop
gs
in
rcrl
or
shlb
mov
repnz
cmp
out
ret
mov
or
adc
add
insl
fs
xor
cs
insb
add
lea
jb
pushf
pusha
movw
pushl
ret
mov
dec
push
in
cltd
sbb
pop
lret
lock
mov
lret
sbb
ret
mov
addr16
xchg
stos
push
into
dec
add
shrl
fdivs
lahf
in
cwtl
test
sbb
xor
into
jmp
rcrb
push
ds
dec
mov
into
bound
lods
repz
aaa
mov
inc
mov
test
aam
in
pusha
lods
push
push
test
imul
rcl
stos
xchg
jne
sti
add
add
dec
les
mov
clc
rolb
jo
shlb
das
movsb
popa
mov
dec
out
xor
andl
loope
fwait
sbb
andb
scas
cmp
push
pop
inc
lods
xchg
jbe
adc
test
ret
xchg
sbb
pop
mov
btr
aad
push
xor
push
lea
bts
btc
and
sub
bts
btc
push
lea
push
rol
shrd
bt
dec
push
aas
stc
push
neg
test
adc
mov
jmp
lea
ja
pushf
inc
pushf
inc
lea
push
pusha
setg
inc
lea
rol
cmc
xchg
push
lahf
cwtl
pushf
mov
rcl
cmp
rcl
pushl
mov
add
pushf
stc
xchg
clc
bts
shl
inc
mov
test
clc
test
jmp
inc
mov
push
in
imul
push
mov
inc
cwtl
ja
es
inc
test
mov
nop
jmp
mov
and
fsubr
pop
inc
inc
icebp
push
mov
ja
xchg
and
mov
xor
inc
mov
je
dec
int3
jns
out
outsl
jno
and
hlt
jnp
and
dec
adc
mov
in
enter
push
shl
inc
push
xor
push
rclb
je
sub
out
dec
mov
xchg
jne
sti
insl
mov
adc
rolb
fldenv
mov
mov
pushl
pop
and
sti
fs
sbb
push
pusha
jl
sub
add
mov
lods
pop
add
mov
and
jb
mov
mov
xchg
cmp
xor
nop
leave
int
into
jbe
lock
push
mov
sbb
ror
sub
movsl
sbb
or
push
or
scas
pusha
loopne
push
cmp
icebp
les
imul
push
test
icebp
cltd
addl
stos
or
jbe
sti
dec
pop
mov
pop
inc
cmp
cld
lea
lods
xchg
mov
sbb
jp
adc
push
xor
push
dec
fsubrs
mov
jae
lret
xbegin
loope
jns
cmp
jp
pusha
bound
and
aas
stos
mov
push
add
aas
mov
push
and
in
pop
or
pop
aam
stos
cmc
leave
cmpsl
xchg
sbbb
pop
les
pop
xchg
mov
mov
repz
push
test
lea
xchg
out
or
arpl
mov
cmp
mov
loopne
int
das
pop
cmc
or
push
js
and
sbb
adc
and
imul
aaa
xchg
fidivrl
into
pop
popf
ret
pop
adc
ret
pushf
mov
call
sub
jb
neg
jmp
jmp
mov
push
in
inc
jo
mov
jb
cmp
xlat
insl
sti
subl
in
mov
sbb
cltd
popf
cmc
gs
mov
adc
in
mov
cwtl
aaa
in
sbb
jecxz
mov
outsl
arpl
rolb
push
arpl
inc
loop
mov
aaa
mov
js
pop
dec
fimull
xchg
imul
stc
xlat
jmp
rorb
jle
shll
push
incb
cmp
jl
dec
das
xchg
jno
mov
add
inc
pop
mov
inc
or
dec
das
pop
pushf
cmp
lds
stos
lret
sub
xchg
mov
push
test
scas
jecxz
pop
sbb
out
xchg
nop
pop
jbe
aaa
sbb
xor
mov
pop
push
push
pop
adc
aad
loop
lods
cmp
push
ret
aam
cld
in
mov
add
xchg
in
or
test
shll
mov
pushf
lea
jmp
movl
jbe
pusha
movl
movw
pushf
movb
lea
jmp
aaa
ss
push
in
out
xor
inc
mov
insl
dec
sub
dec
cld
mov
and
jecxz
xchg
test
dec
aas
dec
out
xor
in
or
xor
fldcw
xor
mov
inc
les
xchg
or
out
jp
push
xor
insb
ja
add
mov
fwait
aam
pushf
xor
or
add
imul
int
in
mov
jae
repz
filds
xlat
push
sub
scas
movsl
jnp
repnz
retw
mov
stos
testb
lahf
divb
insl
rorb
test
jo
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
rorl
add
add
add
sbb
movl
pusha
lea
jmp
dec
jae
push
in
nop
pop
shll
fcmove
and
pop
sbb
fcompl
jle
fisttps
inc
cmpsb
add
cmp
lea
sub
cmpsb
das
inc
or
scas
stc
push
lods
xor
push
pop
insl
hlt
inc
cmp
out
adc
lods
inc
xchg
jns
in
add
in
pop
cmp
push
shll
out
ljmp
pusha
out
shll
xchg
shl
shll
je
and
mov
popa
push
push
mov
and
outsb
add
mov
setge
rcr
stc
mov
stc
and
bt
test
pushf
push
add
add
pusha
bt
stc
movb
add
pusha
jmp
jae
jmp
movl
movsbw
mov
seta
mov
xchg
pusha
mov
seta
setbe
mov
push
jmp
lea
jae
pushf
lea
jne
jmp
sub
movsbw
sar
add
sub
mov
mov
xor
sub
add
call
jmp
pusha
jmp
cmp
clc
bt
neg
pushf
jmp
test
test
sub
cmp
jmp
inc
adc
dec
in
sub
xchg
js
mov
sbb
lods
dec
xor
and
and
mov
push
mov
xchg
sahf
cld
adc
mov
adc
or
outsl
and
xor
dec
xor
push
push
addl
dec
pop
mov
inc
mov
mov
dec
mov
leave
push
fwait
xchg
lea
xchg
testl
mov
xchg
bound
and
inc
test
cwtl
mov
stos
lret
fbstp
divl
mov
adc
adc
scas
pop
push
sub
aas
jo
push
add
push
out
in
inc
jns
inc
sub
push
add
xchg
aas
mov
test
adc
xor
sbb
ret
popl
das
mov
sbb
mov
inc
sbb
and
add
sub
cwtl
sub
mov
lods
pop
loopne
insb
cvtps2pi
popf
push
push
xor
nop
lcall
imul
jne
das
stos
adc
pop
inc
nop
lock
test
sbb
lea
mov
and
jne
call
pushl
mov
mov
pushl
ret
cmpsb
pop
fs
in
rclb
rcl
cmp
popf
and
fadd
dec
dec
xchg
mov
shlb
add
aam
int
sub
scas
loope
daa
mov
out
jns
inc
xchg
in
lea
pusha
or
icebp
aad
stos
in
lods
sub
into
popa
cmp
jp
push
sub
mov
and
fstps
sbb
mov
test
rorl
scas
in
push
incb
out
fcom
sub
imul
add
xor
cwtl
es
lret
fsubr
xchg
jmp
cmp
and
jne
call
pop
aad
dec
in
mov
inc
cmp
aaa
sbb
push
pop
inc
xchg
popa
jo
add
ss
mov
pop
fbstp
push
ret
dec
iret
loope
and
out
add
sub
xchg
js
sbb
sbb
fwait
lcall
xor
lret
stc
cmp
push
cmp
add
mov
pop
cmp
jnp
dec
in
cwtl
fs
xchg
test
lods
mov
sbb
scas
cmp
inc
in
loop
fwait
push
cltd
pop
in
lea
adcb
pop
rolb
and
test
mov
or
cmp
ja
stc
inc
add
test
xor
dec
insl
or
xlat
sub
sub
mov
lds
xchg
or
or
shll
inc
dec
mov
lods
and
mov
xchg
scas
mov
push
pushf
lea
call
pusha
mov
pusha
pushl
push
movl
lea
jmp
movl
jmp
push
stc
orb
push
dec
mov
and
pop
or
test
mov
dec
insb
pushf
cmp
cmpsl
int
mov
aas
sub
jne
pop
jecxz
cld
jbe
sbb
sub
pop
fwait
aas
inc
fdiv
vpslld
fs
pop
pop
lret
sbb
pop
pushf
iret
pop
popa
arpl
pop
call
sub
jecxz
pop
push
inc
mov
mov
pop
add
pop
jmp
aad
jne
lret
cmpsl
aam
in
jecxz
sti
data16
xor
jo
sti
movsl
cld
push
das
mov
add
add
mov
mov
out
bnd
fwait
in
mov
ficoml
ret
movsb
and
mov
fidivrl
xchg
push
mov
sbb
xchg
pop
movsb
and
mov
loope
jae
jle
sbb
sub
xchg
mov
xor
rclb
sbb
stc
insb
scas
or
push
lods
stc
popa
xchg
add
xchg
dec
in
lahf
out
lea
out
int
or
stos
je
outsl
std
and
stos
jb
int3
repnz
and
xlat
adc
pusha
pop
xchg
fcmovu
add
lcall
lea
inc
ljmp
cwtl
push
popf
aam
shlb
and
fisubrl
xor
leave
inc
push
es
in
and
push
pushw
in
pop
dec
ja
orl
and
das
or
inc
das
sub
add
addb
dec
mov
xchg
pop
sbb
dec
in
mov
data16
mov
rcrl
sub
jp
xor
xor
jbe
imul
xlat
test
popa
movl
push
mov
sbb
xor
push
test
movhps
xor
in
iret
fs
lret
ret
push
mov
pushf
cmpsb
mov
xchg
cltd
mov
les
cmpsb
push
fs
stos
popa
sbb
ffree
mov
mov
inc
out
rol
inc
shll
aam
movsl
les
push
mov
gs
mov
gs
sbb
sub
scas
test
in
and
cmp
nop
or
ss
sub
inc
rorl
pusha
in
xor
mov
loopne
stos
add
lcall
out
dec
inc
cmp
idiv
cmpsb
add
cmc
cmp
jo
and
jb
jecxz
adc
push
fdiv
push
dec
in
data16
in
out
push
stos
lock
or
dec
sarl
inc
cmpsl
dec
xlat
fsubrp
ljmp
pop
filds
das
sbb
iret
int
pop
mov
stos
test
jg
mov
cltd
inc
and
in
cmp
imulb
iret
iret
lock
sbb
stos
push
leave
pop
jmp
mov
add
lret
sub
cmp
loope
ds
inc
cmpsl
subl
je
add
fisttpl
add
pushf
lea
je
mov
lea
mov
not
setae
movzbw
push
movsbl
cwtl
lea
pushf
mov
call
mov
pushf
lea
lea
pusha
mov
movw
pushl
ret
mov
rolb
je
pop
mov
mov
xchg
push
es
sahf
and
ret
pop
dec
xor
popf
mov
cmp
scas
cs
sahf
imul
lret
out
movsb
das
jmp
sub
inc
lea
mov
aad
cs
sub
inc
push
mov
movd
js
out
in
push
sahf
jmp
shlb
add
xchg
adc
add
loope
and
mov
insb
add
mov
and
shll
repnz
pop
adc
and
pushf
adc
cmpsb
in
ret
add
ja
fs
push
push
ja
sahf
dec
adc
fistpll
data16
cmc
loope
xor
sub
dec
movsl
mov
sub
mov
and
xchg
push
mov
lods
ss
mov
sbb
jne
mov
cmp
pop
loop
cmp
xchg
loopne
scas
mov
ret
xchg
xadd
jecxz
mov
inc
in
lock
lcall
aas
xchg
repnz
mov
sub
jmp
test
in
sub
repz
addr16
mov
jl
in
das
cmp
scas
ret
les
inc
jl
jle
mov
mov
mov
and
jae
jbe
dec
jl
lret
xor
mov
int
imul
faddl
int3
int3
sbb
and
jns
pop
ficoms
lods
xchg
adc
add
fidivrs
inc
in
test
adc
jae
lods
das
xchg
xchg
loope
subl
dec
pushf
or
xor
inc
cs
jne
cmp
popf
and
enter
sbb
add
sbb
sub
inc
aad
mov
bound
insl
lods
lahf
out
fdivp
and
cmp
lods
in
cmc
loop
enter
scas
into
into
out
js
ja
arpl
hlt
mov
lea
scas
push
aam
int
mov
ret
out
pop
test
outsb
sbb
xor
insl
stc
addb
mov
sub
js
test
pop
pushf
std
imul
xchg
jmp
fs
and
leave
jg
jb
jmp
inc
cmc
xlat
inc
inc
inc
fimuls
mov
jp
hlt
loop
dec
push
cmpsl
ja
jbe
addr16
pop
push
ret
push
test
test
sub
movsb
xorl
push
sbb
mov
movsl
jmp
enter
mov
mov
add
les
cmp
adc
cmp
rcrl
push
lea
jne
dec
rcr
adc
clc
mov
call
inc
dec
dec
inc
push
dec
xor
cs
insb
add
adc
call
mov
leave
inc
in
imul
nop
pand
nop
in
test
out
mov
imul
mov
cs
inc
jecxz
sbb
xor
xchg
daa
mov
fwait
add
lret
jge
ret
in
test
rorl
cwtl
loop
jmp
dec
ss
mov
mov
jno
mov
bound
dec
clc
les
test
out
add
scas
xor
sub
fwait
mov
pop
inc
and
add
jecxz
push
roll
add
inc
and
jmp
sar
bt
mov
mov
stc
add
movb
stc
mov
test
pushl
stc
test
pushf
pushf
jmp
mov
bt
add
call
adc
cmp
out
aas
and
leave
mov
sbb
and
push
pop
mov
jb
cmp
fwait
adc
push
push
jle
mov
xchg
xchg
fstpl
sbb
icebp
pop
outsl
push
gs
sarb
sub
int
sub
xlat
mov
fstpt
fprem
aaa
inc
ret
jo
push
sbb
jns
rcrb
pop
xor
test
test
xor
movsb
mov
jmp
lahf
fcompl
and
push
aas
loop
popa
cmp
mov
cmpsb
cmp
and
insb
jb
ds
push
mov
std
jb
ljmp
mov
in
xchg
cwtl
jmp
and
add
test
in
add
push
add
cmp
jb
pop
cs
lods
call
and
cmp
setno
push
and
lock
or
jbe
test
std
in
xchg
stc
cmp
mov
cmpsl
out
aas
add
dec
inc
xchg
xchg
ja
adc
xchg
imul
insb
adc
add
ljmp
jle
insl
sbb
test
inc
dec
mov
imul
lret
sbb
pop
cs
stos
sub
ficoml
ja
aaa
aas
push
push
inc
xor
adc
cmc
mov
test
and
jl
mov
cmp
xor
pop
clc
cmp
call
bt
add
pusha
movzwl
and
test
btc
mov
jmp
mov
pushf
js
cmp
ret
mov
mov
aad
dec
add
cmp
jb
fdivrs
sub
ljmp
std
pop
inc
into
sbb
dec
ret
sub
mov
testl
inc
and
mov
jnp
les
out
and
loop
or
stos
xchg
int
xchg
insb
cmovb
pushf
test
xor
xchg
xchg
push
sahf
std
pushf
mov
pop
fisubl
inc
jnp
dec
shll
jle
pop
push
cwtl
or
out
cmpsb
push
push
sub
test
mov
mov
or
loope
ja
jl
add
push
jle
dec
add
jnp
cmp
decl
push
pop
cmp
mov
mov
jmp
jecxz
cmp
iret
sbb
inc
mov
mov
cmp
xchg
pop
xor
lock
dec
movsb
test
pop
jbe
scas
jns
stc
bt
neg
pushl
cmc
rol
cmp
call
ret
sbb
in
rcrl
sub
movsl
test
insl
jb
sarl
cmp
in
mov
insb
xlat
mov
sub
aas
adcl
mov
cmp
dec
leave
stos
mov
sub
pop
arpl
mov
inc
leave
dec
mov
pop
xchg
xlat
pop
repz
outsb
pusha
and
out
push
pop
or
enter
sub
test
and
fstpt
adc
dec
sub
subb
sub
cmp
aas
mov
inc
gs
jo
outsb
inc
imul
add
pop
cmpsb
add
lea
jbe
rcl
ror
bswap
sub
clc
not
mov
rcl
add
sar
mov
test
add
push
movzbw
clc
add
shr
xadd
rol
xchg
mov
not
bsr
neg
add
movw
bswap
mov
pushf
push
call
loopne
jl
in
cmp
ss
lret
cmpsl
sub
pop
inc
int
sahf
test
ljmp
hlt
cld
add
pop
aaa
push
adc
push
in
jno
jmp
and
add
sbbb
mov
pop
in
xchg
add
cmp
inc
or
cmp
ss
in
xorl
adcl
movsl
adc
sbbb
lret
sub
pop
cltd
rcrl
fstpl
push
mov
icebp
mov
in
cli
ret
xchg
dec
imul
fmulp
cltd
roll
mov
sub
mov
push
fwait
clc
add
lds
fcoml
push
xor
imul
data16
dec
popa
ds
push
roll
push
jl
mov
mov
rcrb
aad
push
stc
gs
lods
test
pop
dec
ljmp
mov
or
add
adc
mov
mov
lea
call
pushf
jmp
std
movsl
jb
in
out
add
mov
in
int3
into
cmp
or
pop
add
into
jno
ljmp
movsl
fsts
push
mov
daa
outsb
pusha
ret
ljmp
ret
ds
jno
xor
jbe
mov
sbb
nop
cli
sar
cmpsl
ljmp
leave
dec
cli
gs
lcall
mov
icebp
sahf
jno
lds
dec
and
loope
mov
sarb
push
iret
repnz
mov
mov
push
pop
js
inc
inc
pop
sahf
adc
mov
mov
mov
adc
jl
out
adc
and
xor
push
pop
aaa
inc
call
call
dec
add
cmc
jae
xchg
cld
subl
sbb
insl
push
sub
lret
imul
jnp
pusha
sbb
in
sbb
push
rcll
shlb
fwait
inc
ficoml
jmp
xadd
cmpsl
adc
push
sub
dec
cli
shrb
lcall
and
out
dec
jecxz
jae
pop
aas
or
in
mov
bound
mov
mov
stos
sbb
bound
or
xchg
mov
sub
outsl
ja
repnz
cs
xor
push
sub
sbb
aad
xor
cltd
push
in
popa
push
sbb
pop
or
mov
sbbl
cmp
pushf
pushf
lea
jl
ja
bt
call
mov
bswap
not
pop
pusha
pushl
ret
les
dec
fwait
out
fisttps
or
fst
push
xchg
dec
add
mov
stc
data16
mov
push
cmp
add
add
push
rcll
or
int3
mull
out
stos
mov
mov
cli
mov
mov
ja
dec
imul
mov
inc
leave
xor
bound
call
sti
inc
movsb
jno
inc
xor
test
xchg
or
push
pushl
lea
jae
push
movw
mov
jmp
lea
jb
call
pushf
mov
pusha
pushl
pushl
ret
mov
add
call
and
cmp
insb
fsubs
mov
add
mov
enter
push
sbb
jo
cmpsl
adc
test
ret
insl
imul
insl
movhps
adc
arpl
popf
lds
test
sbb
sub
loop
rorl
push
xchg
dec
fstps
test
in
flds
jp
imul
sub
pop
fs
xchg
cmp
pushf
mov
out
aaa
xchg
outsl
push
iret
pop
xchg
ss
or
test
cwtl
shrl
clc
lret
insb
mov
push
mov
repnz
nop
xor
jl
test
push
adc
or
pop
pop
data16
or
push
in
lret
jmp
cmp
jmp
movswl
sahf
pop
lahf
stos
jl
out
aas
adc
mov
jl
push
lret
jp
int
jns
ds
in
fistpl
in
imul
and
cmp
pushf
dec
adc
push
xor
sbb
mov
sub
cmc
sub
mov
idivl
mov
test
push
pop
cltd
mov
scas
mov
jnp
imul
xchg
add
add
in
ret
gs
xor
add
and
xor
rorb
xchg
nop
mov
xchg
sbb
cmp
fs
jne
dec
lea
xchg
sbb
mov
ror
bt
sub
shrd
rcr
mov
stc
bt
sub
bt
test
call
jle
test
in
mov
shll
ror
xor
adc
push
add
mov
mov
jle
pop
inc
xchg
divl
and
and
pop
iret
stos
into
pop
dec
fisttps
jle
es
dec
daa
adc
dec
mov
adc
in
sub
mov
insl
mov
ja
jns,pt
into
lahf
fimull
mov
lcall
inc
sbb
or
dec
inc
and
add
xor
popa
into
xchg
stc
inc
mov
in
mov
out
enter
lock
jl
inc
imul
xlat
dec
hlt
movsl
in
xchg
and
mov
and
testl
jb
test
out
insl
inc
subb
sub
frstor
push
xchg
mov
icebp
xlat
pop
rolb
jl
daa
cmpsb
mov
add
cmp
mov
adc
add
push
movsb
pop
mov
int3
dec
sbb
icebp
fs
imul
jns
jo
sub
cmp
pushf
test
das
mov
and
lods
es
mov
jp
cmp
movsb
cmpsb
stc
add
xchg
mov
stc
dec
xor
mov
xor
daa
xchg
lods
ds
jmp
stos
mov
xor
cltd
insb
sti
int3
iret
mov
jnp
out
push
add
fistl
rorl
movsb
out
dec
push
sbb
notb
orb
imul
mov
shlb
jmp
inc
add
and
mov
aad
sbb
lahf
movl
push
pushf
push
mov
lea
jmp
data16
cmp
pushf
sbb
stos
test
lahf
adc
pop
push
lcall
xchg
mov
test
mov
pushf
cmp
jno
fucom
push
add
add
push
or
fldenv
jecxz
flds
pop
mov
enter
sub
loopne
push
cmp
sarb
mov
cmp
imul
movsl
xchg
ja
xor
cwtl
cmpsl
lock
xchg
jle
adc
in
cmpsl
aad
cld
fidivs
pop
iret
les
call
rorl
xchg
sbb
std
in
mov
stos
pushf
popa
dec
push
int3
xchg
lea
je
hlt
cmpsl
pop
inc
dec
div
fisubs
rol
xchg
loopne
and
mov
mov
aad
mov
push
xor
xor
jae
pop
out
jle
clc
outsl
cmp
adc
xlat
int
aam
add
inc
aam
cmp
fstpt
push
mov
add
adc
cmp
pushf
add
or
dec
cmp
push
xchg
xchg
js
imul
mov
loopne
mov
pop
outsb
shlb
fisubs
push
and
rorl
mov
addb
into
xor
add
rol
iret
aas
mov
pop
adc
mov
cmpsl
test
jge
inc
cmp
xor
cmp
sbb
in
shl
ret
push
and
or
dec
sub
lock
test
add
mov
jle
cs
fwait
sti
out
cmp
sbb
jl
lods
pop
unpcklps
aad
mov
out
nop
mov
ret
mov
inc
pop
mov
sub
stos
shl
pop
pusha
arpl
sub
testl
inc
dec
push
test
fistl
xchg
stos
cmc
mov
push
inc
mov
or
rcrl
imul
or
or
xor
in
add
out
xor
push
add
movsl
ljmp
jo
jne
and
int
das
jne
repnz
out
js
pop
fnsave
push
add
mov
in
stos
cmp
and
add
inc
push
jns
add
mov
pop
pushl
sbb
pop
scas
push
lock
aad
or
std
mov
pop
mov
push
mov
cltd
dec
mov
scas
arpl
sub
popa
or
xor
jmp
fildl
rol
repnz
xchg
lods
in
xor
pop
cmp
call
push
mov
xchg
pop
mov
sub
dec
aad
and
in
ret
push
sbb
out
out
xlat
scas
dec
sbb
push
addl
data16
sbb
gs
dec
shl
gs
js
mov
push
cmp
ja
loopne
inc
movsl
test
in
inc
add
in
test
mov
pop
mov
ljmp
test
test
add
pushf
call
lds
and
scas
js
push
pop
out
jmp
stc
movsl
jl
inc
daa
mov
sub
popf
xchg
fidivrl
xlat
mov
xchg
jecxz
jl
icebp
and
jno
pop
insb
addb
sub
mov
add
add
xchg
xor
popa
add
xchg
out
lcall
je
mov
jle
fdivs
retw
lcall
adc
rorb
jb
loopne
add
dec
outsb
popa
mov
pop
shrb
in
dec
incl
outsl
jno
and
das
xor
int
test
mov
rcrb
or
lods
in
add
cltd
movsb
out
mov
cmpsb
sub
lret
add
pop
shlb
adc
iret
repz
mov
cmpsb
mov
add
pop
inc
dec
cmp
mov
out
lods
pop
dec
ss
cmc
pusha
add
clc
call
pop
movl
not
lea
pusha
pushf
jmp
rcl
mov
bt
shl
push
pushf
pusha
mov
lea
je
call
xchg
bound
xor
pushf
sahf
sarb
lds
adc
adc
loope
iret
cmp
ficomps
test
mov
add
pop
or
bnd
xor
push
lods
mov
dec
mov
out
mov
mov
lret
xchg
lods
inc
pop
imul
jl
clc
add
xchg
jb
stos
and
push
cmp
fdivs
sbbl
and
lret
pusha
lea
call
pusha
lea
jne
movzbw
bswap
not
cwtl
mov
push
pushf
lea
jmp
cmp
pushl
in
xor
movsl
imul
adc
ret
mov
jae
into
pop
test
test
mov
or
outsl
xchg
sbb
in
xor
jmp
lods
mov
cmp
mov
push
lods
je
addr16
popf
out
pop
mov
test
icebp
rorl
hlt
push
jnp
mov
jb
lcall
sub
mov
and
outsl
icebp
mov
repz
inc
test
imul
out
lods
cs
out
cs
in
gs
cmpsl
lcall
frstor
mov
mov
repz
or
mov
push
mov
adc
inc
pop
add
movsb
dec
cli
push
cmpl
daa
aam
imul
mov
xor
test
mov
mov
in
xor
scas
les
add
inc
jle
adc
mov
stc
ret
fidivrl
add
jb
push
and
loope
jl
sbb
mov
bt
pushf
cmpb
mov
pushf
movb
lea
jne
push
push
pushf
jmp
adc
jno
jbe
inc
movsb
je
mov
or
das
push
cmp
pop
jg
jae
add
xchg
jo
mov
xchg
mov
xchg
add
orl
lock
lcall
test
mov
or
and
scas
add
mov
push
loope
jl
and
mov
out
lea
sbb
dec
push
jecxz
dec
das
inc
dec
scas
lret
dec
mov
adc
ds
stc
lret
push
adc
nop
rcrb
add
cmp
cmpsb
ds
stc
xor
call
lea
ja
push
lea
jb
push
movw
mov
cmpb
movw
lea
jne
rcr
mov
cmc
bt
pushf
mov
add
cmc
cmp
movzwl
xor
call
mov
dec
xchg
adc
xchg
addb
mov
mov
xchg
ds
mov
and
jns
shrb
mulb
psadbw
sub
test
or
jl
mov
sbb
stc
repnz
jp
fdivrs
cmc
cmp
inc
sub
repz
test
xchg
adc
pop
rolb
pop
test
lock
addr16
pop
adc
or
test
xor
pushf
pop
fcoms
sbb
push
cli
sbb
xchg
mov
int
stc
arpl
aas
inc
adc
push
inc
and
sti
iret
cmp
fidivl
or
lcall
dec
sub
lods
mov
lods
add
jno
popf
je
inc
cli
lret
lcall
add
or
xchg
mov
sahf
add
lea
je
jmp
jge
nop
xor
pushf
movsb
jmp
sub
int
mov
pop
sub
mov
push
jne
sti
cmp
cmp
dec
pop
add
dec
dec
and
test
pop
int
and
clc
aad
ret
push
xchg
mov
std
das
push
daa
pushf
and
outsb
pop
or
xchg
mov
insl
das
aas
in
cli
or
pusha
cmp
clc
lret
mov
in
xchg
inc
pop
fcomps
cltd
xchg
aad
je
add
fs
jae
clc
mov
shrd
test
mov
bt
mov
stc
clc
test
cmc
xor
bt
pusha
repnz
pusha
pushf
lea
jne
lea
and
mov
shl
bsf
btr
cmp
sub
rol
neg
not
mov
pushf
call
imul
hlt
fs
xchg
sbb
jp
cmp
mov
add
ss
mov
mov
insl
adc
pop
sub
les
scas
test
mulb
in
pop
mov
lods
xor
inc
dec
jb
mov
cwtl
push
push
mov
inc
into
xor
xor
dec
push
mov
adc
testb
push
mov
mov
ljmp
mov
stos
jne
arpl
push
js
jae
stc
cld
adc
sahf
or
repnz
mov
cwtl
push
nop
or
pushf
in
mov
mov
pusha
cmpsl
es
mov
mov
and
adc
mov
sub
or
dec
mov
sub
cmp
call
shrl
jp
rol
mov
xchg
ds
movsl
lods
and
in
idivl
loope
cmpsl
out
rorl
pop
or
add
xor
outsl
ret
jle
aad
add
cld
mov
aad
xchg
mov
stos
das
pushf
bound
and
pusha
jp
iret
jp
and
xchg
dec
sbb
shl
addb
in
out
jno
test
out
xlat
and
sarb
daa
aad
push
rep
push
call
pop
pusha
push
jno
out
jbe
pop
push
ret
stos
xchg
test
fisttpll
leave
mov
cs
cmp
aam
jae
shlb
xchg
xchg
out
lods
sub
jbe
jns
sbb
and
dec
sub
neg
cmc
and
add
out
repnz
lret
shl
cmp
xchg
stos
sbbb
push
in
ret
push
cmp
inc
inc
inc
push
aad
adc
ja
insl
cmp
sub
mov
fisttpl
push
arpl
inc
and
pusha
scas
test
and
insb
sbb
rclb
pop
dec
cmp
cmpsb
push
outsb
shl
pop
mov
addr16
in
mov
mov
jl
les
cmp
lea
mov
xchg
pop
adc
stos
repz
hlt
daa
cwtl
test
add
scas
cmp
pusha
movsl
cmp
subb
test
pop
and
xchg
or
aam
mov
cwtl
sbb
mov
jmp
rcr
adc
in
jae
inc
inc
es
mov
xor
add
or
add
adc
cmpsl
mov
out
fnsave
repnz
sub
stc
xchg
pushf
lea
jne
call
mov
jmp
in
dec
adc
jno
sbb
les
ja
pushf
xlat
mov
cmp
xor
and
jp
xchg
sub
adc
mov
pop
ja
xchg
pop
rcrl
push
and
adc
mov
fists
movb
lea
ja
rcr
cmp
and
sub
lea
pushf
sub
add
push
clc
shld
mov
jmp
cmc
mov
add
bt
mov
movzwl
xor
ror
movsbw
mov
clc
add
call
movw
clc
jmp
push
dec
dec
dec
dec
cs
insb
add
push
sub
pushf
loope
xchg
xlat
mov
push
repnz
inc
push
xlat
cmpsl
sub
int3
out
mov
ds
cmp
mov
out
and
push
aad
inc
lock
hlt
aaa
xor
add
cmpsl
fnstenv
in
mov
in
dec
xor
cmp
sbb
in
int
add
mov
loop
lahf
ja
mov
divl
test
cwtl
adc
push
push
shll
inc
jns
push
mov
push
lahf
fcoms
stos
mov
add
add
and
and
stc
out
and
les
jne
pop
adc
clc
add
rcll
xchg
fmul
scas
jg
sub
pushf
jmp
into
sub
fmul
int3
movsb
push
orb
jo
jl
sbb
outsb
insl
out
repnz
cwtl
incl
cs
push
stos
mov
in
inc
scas
hlt
push
clc
jecxz
testl
divb
xorl
ja
nop
push
lods
xor
and
fdivl
repnz
imul
or
inc
mov
xchg
movsl
xchg
pushf
outsb
mov
cmp
dec
sub
aad
mov
jmp
mov
push
sub
pushf
pusha
xchg
cli
ffree
mov
add
loopne
fcmovbe
mov
ja
pop
or
je
movsb
lcall
arpl
jnp
mov
lahf
sbb
mov
cld
test
test
pop
cmp
cld
mov
cmpsb
adc
jecxz
jl
xchg
mov
fsubp
jl
mov
adc
xor
aaa
rcll
cwtl
inc
lock
dec
lods
je
xchg
jo
mov
push
jo
pop
aad
dec
mov
jecxz
mov
lds
fbld
repnz
and
js
xor
mov
test
sbb
inc
scas
idivl
sbb
sub
mov
xor
inc
mov
das
add
mov
mov
jo
jge
paddq
jb
dec
lcall
lahf
pshufw
lret
stos
lods
repz
add
in
aas
icebp
outsb
int3
xor
fistpl
pop
loop
mov
push
jno
dec
lcall
mov
add
imul
sarl
insb
in
mov
sub
sbb
sbb
loope
sbb
mov
out
out
addr16
adc
pop
mov
loopne
bound
cmpsl
out
jbe
jne
and
push
ret
cmp
jbe
add
int
mov
push
push
sub
inc
and
jecxz
shlb
in
fidivrl
mov
jbe
cltd
scas
mov
cli
jg
std
lret
jbe
sbb
add
out
or
and
cltd
xor
mov
dec
and
xor
mov
aad
push
cmp
and
aas
fs
cmpsb
xchg
out
push
or
pop
push
pop
lods
lods
xor
push
das
mov
imul
scas
or
iret
cmp
cld
call
ficoml
dec
stos
pusha
rcr
outsb
sbb
jmp
dec
movb
ror
push
test
call
jae
ja
in
loop
pushf
invd
in
popf
insb
bound
or
imul
andl
mov
cli
fbstp
sub
pop
xor
lret
in
test
inc
push
fwait
xor
ljmp
or
dec
insb
xorl
push
push
jbe
jbe
and
out
jno
jl
mov
pop
cmc
xlat
loopne
jmp
mov
call
out
xor
mov
sub
sbb
aaa
xor
xchg
jle
pop
sub
pushf
mov
jl
inc
xchg
xchg
jae
ss
xor
inc
mov
aam
js
push
nop
addr16
pop
cmpsb
and
daa
jo
daa
xor
xchg
or
sbb
and
xor
jecxz
lret
adc
test
add
sub
leave
out
mov
nop
inc
shll
cmp
inc
inc
jg
jle
mov
adc
shrb
jnp
arpl
sbb
adc
cs
add
les
in
sub
jb
shlb
sub
xorb
loop
mov
jge
loope
pop
insl
ss
inc
xchg
fnstenv
daa
xchg
js
dec
lea
adc
aas
dec
adc
pop
jecxz
cmp
mov
scas
xor
sub
jno
xchg
push
in
mov
ror
and
into
into
xlat
faddp
dec
rorl
jge
add
dec
mov
or
fwait
js
dec
sub
push
dec
and
jl
cli
sti
pop
mov
jl
scas
cli
imul
inc
and
loopne
rcr
xchg
mov
add
stos
rorl
lods
leave
or
shl
mov
push
push
cmp
pushl
lea
jle
push
jmp
out
ss
xorl
jne
inc
xchg
cmp
flds
mov
dec
adc
ret
jge
insb
pop
dec
pop
test
fildll
pop
fisubrs
sbb
cmpsl
std
sbb
daa
mull
fbstp
das
jo
aaa
jl
loope
imul
or
xchg
cltd
jle
bound
push
and
dec
cmp
mov
stc
jae
push
addr16
or
xor
bound
fucomip
shrb
cmp
jl
lods
xchg
clc
out
movsb
outsl
in
call
sbb
or
jl
jbe
ja
mov
adc
imul
jecxz
jnp
test
cli
cmpl
sub
mov
rcrl
xor
ret
pop
sbb
adcb
or
sub
push
cld
repz
aaa
rcll
fwait
lahf
repz
addr16
dec
xor
movups
inc
cmpsb
push
mov
xchg
js
daa
aas
mov
push
outsl
rorl
sbb
pop
sbb
in
lret
lret
lret
ret
and
hlt
lret
adc
or
jbe
jo
dec
adc
aaa
dec
mov
dec
pop
add
mov
sub
imul
adc
stc
orl
cmp
lods
sub
test
fwait
push
and
pushf
push
cwtl
pop
xor
in
das
add
inc
xchg
nop
jl
dec
dec
cmp
pop
mov
and
outsl
imul
mov
jmp
es
cmp
mov
xchg
pop
dec
inc
sub
or
xor
mov
pop
sbb
call
subl
ja
push
insl
and
push
rcr
aad
pop
mov
or
cmp
mov
popa
jecxz
insl
mov
or
cmp
cli
and
out
fstl
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
lea
jb
test
pushf
push
cmp
lea
pusha
jmp
sub
outsl
cmp
cld
shrb
sbb
bound
popa
ret
inc
cmp
add
mov
fsubl
sbb
ja
xor
pop
jle
mov
pusha
jmp
fwait
lea
es
mov
iret
xor
dec
rcrl
loope
inc
cmpsl
cmpsb
jb
cmpsl
and
stos
and
je
sub
cli
cmc
aas
mov
mov
mov
mov
nop
or
pmullw
iret
mov
add
rcr
clc
fwait
jns
movsb
jle
pop
and
jecxz
push
cmp
mov
inc
in
xor
enter
mov
sbb
fisttpl
push
cmp
aaa
jne
arpl
adc
cli
mov
cmp
add
mov
inc
dec
cltd
sbb
loope
adc
sbb
push
repz
bound
imul
movl
mov
jmp
cmpsl
js
and
pushf
xor
push
scas
sbb
dec
sbb
mov
push
lea
dec
stc
xchg
mov
insb
loopne
jo
and
mov
or
mov
fimuls
inc
fisubs
mov
sahf
mov
stc
cld
iret
std
push
adc
xchg
xchg
pop
imul
dec
adc
fisttpl
or
jns
dec
divl
mov
jno
jge
imul
jmp
outsl
mov
xchg
rolb
mov
aad
je
cmpl
xor
and
lret
mov
push
and
pushf
loope
push
xchg
jl
sub
or
lock
push
cmpl
pop
je
sbb
mov
sub
cld
data16
mov
cmp
clc
out
test
aaa
fistps
call
mov
inc
data16
loope
shl
std
into
punpckldq
cmp
and
push
cmp
insl
aam
es
in
in
cmp
stos
shlb
in
mov
push
out
out
dec
scas
mov
push
adc
jl
xchg
out
add
mov
shll
cmp
jmp
arpl
sbb
aaa
loope
scas
daa
cmpl
xchg
pushf
or
xchg
arpl
repz
sub
sbb
imulb
stos
aas
xor
lret
pop
aad
loop
fsubrl
cmpsl
mov
sbb
call
call
push
pop
pop
cmpsl
mov
xor
shll
je
xlat
int3
test
inc
int3
xor
push
popf
mov
jmp
test
cmp
pusha
push
jmp
lea
ja
cmc
shl
shl
sub
rcr
not
call
movl
pusha
pusha
pushf
lea
jmp
xor
push
and
pushf
push
lds
outsb
int3
xor
call
jnp
or
fwait
mov
mov
lea
aad
popa
cmp
test
cmpsb
rcrl
or
negl
shr
lock
movb
dec
testl
std
std
push
sub
incb
insb
outsl
imul
movsb
cmp
out
mov
lcall
add
cmp
enter
shlb
jecxz
cmp
bt
add
mov
cmc
not
cmc
neg
pushf
jmp
call
call
pushf
call
lahf
mov
call
push
pushl
pushf
xchg
pop
movsbw
pushf
movl
call
or
push
and
pushf
add
xor
cmc
ss
loop
xlat
lahf
jnp
xchg
ficoms
xor
addr16
jp
je
mov
aas
dec
arpl
mov
sub
and
leave
jp
or
jne
iret
int
dec
jge
paddsw
cwtl
or
pop
rcl
inc
sub
fdivs
and
dec
cltd
jl
scas
xchg
addb
pop
mov
adc
jmp
push
movb
pushf
lea
je
test
cmp
test
clc
add
jmp
and
sbb
in
sbb
adc
sbb
add
add
push
loopne
fsubl
scas
fnstsw
outsl
test
mov
outsb
sti
test
xor
pop
iret
add
fs
scas
push
loopne
jbe
scas
mov
movsb
mov
mov
add
sub
xlat
xchg
cmpsb
out
mov
xor
push
addb
xor
push
xchg
lods
dec
idivb
lds
mov
adc
jae
push
adc
dec
mov
rcrb
xchg
or
mov
mov
push
in
and
or
xlat
mov
dec
dec
xchg
loope
mov
je
adc
xlat
sarb
daa
mov
test
daa
or
out
or
adc
or
adc
in
outsl
mov
icebp
stos
pop
sti
fmuls
scas
sbb
cmp
rolb
sbb
push
mov
or
fisubs
cmp
xor
fildll
imul
mov
std
mov
je
push
inc
cmp
add
int
ret
dec
jg
and
shrb
test
shlb
push
lea
jmp
inc
pushf
jmp
push
in
and
push
mov
sti
int3
xchg
jl
ljmp
ds
xor
sub
xchg
jmp
pop
clc
dec
out
pcmpgtb
adc
adc
fsubs
into
mov
pop
cltd
dec
insb
pop
jb
mov
fists
xchg
repnz
ja
add
movsl
add
cmp
cmpsb
pop
dec
add
or
mov
mov
rcll
pop
adc
addb
sub
sbbl
add
adc
mov
xadd
mov
or
movzbw
mov
stc
test
xor
cmc
repnz
call
push
pusha
mov
movl
movb
lea
jmp
sub
sbb
pushf
add
sti
aam
out
mov
add
and
in
xchg
sti
mov
xor
sub
xor
or
imul
pushf
xchg
int3
int3
dec
or
add
xor
sbb
pop
jne
rcrb
pop
add
icebp
icebp
jns
fdivs
popa
decb
sbb
pop
imul
xchg
cltd
jnp
push
dec
pop
out
mov
cmp
inc
or
icebp
mov
out
bt
add
call
mov
pushf
pop
movsb
xchg
cmc
ret
je
iret
mov
addr16
jg
xchg
stos
mov
xchg
xchg
mov
popl
pop
xor
shrb
lahf
mov
je
mov
jp
cmc
shrb
popf
scas
sbb
lret
jg
sbb
movsl
sbb
xorb
bound
pop
push
adc
mov
dec
dec
pusha
inc
stos
mov
pop
xchg
dec
pop
fadd
orl
rcrl
mov
mov
dec
in
sbb
cs
sbb
pushf
out
lahf
imul
xchg
nop
or
pop
call
popa
sub
int3
loopne
cmp
pusha
rorl
cmp
bnd
into
jg
jo
pop
js
pushf
cld
mov
mov
loop
sti
jbe
cmp
aam
mov
sbb
adc
fiadds
out
std
cld
dec
cltd
aas
mov
mov
imul
scas
adc
push
int
jae
push
movb
lea
call
jmp
mov
pushl
dec
push
test
mov
clc
add
movw
sub
jo
bt
test
pushf
push
lea
jne
push
pushf
mov
mov
jmp
and
pushf
mov
pop
test
or
inc
aas
and
cwtl
mov
jge
scas
ja
jp
jg
leave
push
cmp
ljmp
data16
les
iret
lret
sbb
mulb
sbbl
popf
in
and
shll
je
int3
xchg
jl
popf
ljmp
cltd
add
inc
movsl
out
inc
test
in
out
push
push
out
sub
push
fwait
inc
lret
in
fwait
pop
add
mov
ret
push
mov
add
xchg
pop
cmpb
mov
push
pushf
mov
mov
cmp
imul
xchg
fidivrs
fimull
mov
mov
cmp
lahf
cwtl
not
lea
push
cwtl
mov
movb
call
subb
sbb
pushf
cli
neg
pop
cmp
add
fwait
outsb
push
sbb
js
cmp
and
push
fadds
inc
or
inc
lods
mov
jo
dec
xchg
cmp
adc
or
cmp
and
into
sbb
adc
fsubp
mov
daa
gs
outsl
sub
test
xchg
dec
fs
ja
movl
sbb
ret
sub
and
iret
xchg
or
neg
test
mov
lea
jle
bt
bt
repnz
call
xor
sub
in
lea
push
pop
cltd
call
in
cwtl
jp
mov
or
jb
mov
jl
popf
cli
mov
dec
fsubs
out
cs
dec
std
pushf
mov
push
pop
sbb
cltd
pop
gs
mov
jns
adc
or
and
jg
and
pop
push
xchg
and
cld
push
ror
test
jl
popa
dec
sub
arpl
fsub
aas
out
das
sbb
sbb
pushf
pop
push
out
popl
inc
inc
mov
sbb
outsb
mov
sbb
jae
hlt
push
cmp
inc
not
mov
xor
dec
push
sbb
dec
repnz
push
jb
jbe
cmpsb
test
lret
xchg
movsb
cmp
xchg
mov
scas
into
xchg
pop
xchg
and
hlt
dec
dec
mov
sub
xor
shll
push
out
bswap
lea
pushl
movb
jmp
mov
pushf
movl
call
pushf
pusha
jmp
rclb
add
test
pop
je
and
addr16
into
xor
outsl
lret
and
and
cli
cmp
mov
incl
mul
or
pop
and
and
inc
adc
push
cmp
out
fldt
jb
dec
adc
loope
push
xchg
into
pusha
stos
xor
add
dec
and
sbb
pop
mov
and
mov
pop
dec
jmp
xor
pushl
ret
rcrl
sbb
pushf
push
fdivl
mov
fsubrs
add
sti
pop
lcall
cld
into
lret
leave
dec
adc
mov
jns
cmc
movsl
sub
out
push
and
in
pop
movsl
sub
stc
sub
cld
lahf
call
sbb
neg
xchg
out
cmpsl
stos
xchg
pop
cmp
fsubrp
xchg
and
push
cmp
add
mov
je
out
jno
push
adc
imul
movsb
imul
jnp
push
aam
xchg
mov
inc
pusha
mov
call
lea
je
cmp
cmp
pushf
pushl
movw
movb
lea
je
pushf
movb
lea
jmp
cmp
ss
mov
jbe
test
scas
cld
or
cmp
gs
and
pop
addr16
insb
xchg
jmp
and
xchg
cmp
sbb
in
movsb
xor
inc
pop
insb
add
sub
clc
mov
pop
repnz
add
enter
cld
inc
xor
push
mov
cmpsl
pop
aaa
sbb
mov
test
mov
inc
subl
inc
and
xchg
inc
xchg
bound
lahf
cmc
sar
mov
mov
ret
repnz
and
inc
mov
dec
push
adc
gs
in
and
mov
ljmp
sbb
inc
jb
inc
outsl
cli
cmp
or
pop
push
shll
and
pop
ret
je
and
cmp
adc
xor
stos
mov
enter
aas
adc
mov
sarb
repz
les
push
icebp
mov
rol
sub
or
inc
sbb
je
pusha
subl
int3
pop
push
push
pop
inc
cmp
out
xchg
push
dec
sub
push
or
mov
jns
std
inc
inc
adc
mov
mov
sbb
jne
xchg
mov
pop
jecxz
add
bound
add
and
inc
daa
inc
sbbl
push
mov
fildll
xchg
mov
cmp
test
pusha
sbb
movsb
and
mov
sub
lds
mov
cmp
les
dec
inc
sub
jp
jae
cmp
cld
shrl
xchg
shrl
push
adc
or
mulb
jo
mov
inc
imul
enter
iret
mov
pusha
pop
sub
push
and
dec
add
mov
inc
push
sarl
inc
pusha
sbb
jecxz
test
xchg
sub
loope
cmp
lock
xchg
mov
and
arpl
pop
cmp
adc
in
mov
jne
enter
les
call
cmp
aaa
arpl
pop
popa
clc
and
call
or
imul
xor
rcll
jmp
pop
cmpl
aas
dec
icebp
sub
and
sub
jle
lods
jb
xchg
ret
lods
mov
jg
push
dec
push
iret
add
insb
outsb
mov
mov
mov
or
and
and
rcrl
xor
daa
andl
inc
mov
clc
and
out
sub
aam
pop
inc
or
mov
inc
shr
cltd
aam
add
scas
popa
iret
enter
mov
sub
xorl
enter
les
aas
pop
movsl
xor
push
and
insl
xor
test
inc
ret
jae
imul
push
xor
dec
inc
cs
xor
and
push
adc
popa
and
jmp
inc
xor
nop
mov
jb
inc
pop
inc
push
sbb
jnp
jne
xor
inc
inc
and
test
mov
sbb
mov
test
jae
aam
lock
pusha
jb
xchg
push
cli
sub
mov
sbb
and
xor
xor
adc
fsubrs
xchg
cmpsl
jns
les
sbb
mov
and
inc
cmp
mov
jp
mov
inc
loopne
mov
add
xor
mov
enter
inc
jno
ret
and
push
xchg
cmpsb
pushf
mov
adc
push
push
in
data16
popa
mov
je
cld
xor
in
mov
add
andb
mov
sub
dec
dec
ret
mov
lahf
or
adc
inc
jb
insl
mov
das
scas
mov
data16
xor
bound
pop
sub
jp
pop
enter
es
ss
lods
cltd
idivl
stos
test
pushf
mov
cmp
or
and
cld
inc
jl
inc
clc
daa
and
enter
js
test
clc
icebp
xchg
jne
sub
jge
push
add
sbb
push
and
ds
ret
sub
insl
xor
sub
add
jge
daa
ret
or
lret
pop
xor
test
insb
or
xor
and
mov
addr16
es
les
xlat
ss
lods
lea
mov
loop
lods
push
inc
out
pushl
add
ret
jb
dec
and
pop
and
lods
xor
mov
mov
inc
mov
and
cmp
in
push
mov
ret
push
xorl
das
cmp
sbb
mov
insb
and
mov
addb
cmovl
xor
xchg
outsl
and
popf
popa
adc
sub
cmp
fmull
mov
mov
cs
cltd
sbb
or
mov
mov
inc
mov
mov
cmpl
jmp
pop
and
push
faddp
cltd
fsubl
xor
clc
hlt
cld
je
adc
push
subb
lods
dec
xchg
jle
rolb
fwait
mov
pop
dec
push
lock
cmp
jo
dec
popf
cld
sbb
push
push
rcll
in
add
xchg
adc
mov
xchg
xor
imul
imul
sub
cmp
decb
lret
aas
cmpsl
xor
mov
xor
les
mov
sbb
insl
jl
jmp
test
addr16
add
imul
xor
shl
push
popa
outsb
dec
add
push
mov
ss
ret
sbb
sub
loope
ret
stc
nop
pop
pop
outsl
fisubl
cmp
sub
mov
aas
adc
enter
mov
and
jnp
and
mov
ds
lahf
inc
lds
cmpsb
jb
test
stc
xlat
sbb
stos
fldcw
add
and
mov
imul
cltd
imul
adc
scas
dec
nop
es
mov
insb
std
xchg
inc
daa
dec
dec
xchg
insl
cmp
lods
add
mov
idivb
xchg
icebp
test
pop
in
pushf
push
push
lods
push
inc
mov
inc
scas
movaps
pop
jge
xor
xor
dec
push
lods
in
and
dec
inc
ljmp
jle
inc
adc
push
push
push
shrl
sub
fs
jne
mov
xchg
decl
jmp
mov
lahf
mov
pop
loope
daa
sbb
sub
in
les
cmp
outsb
out
cmp
add
xchg
pop
mov
mov
push
lcall
xchg
in
dec
or
push
lahf
ja
jno
imul
aam
mov
jne
cmpsl
cmpsb
lcall
fdivl
adc
and
outsb
push
ljmp
je
aam
imul
cmp
mov
xor
test
push
push
pop
dec
pop
insl
jo
gs
pusha
enter
and
or
movl
xchg
ds
push
add
cmc
js
pop
and
fldt
mov
cmp
sub
xor
pop
inc
push
xchg
mov
sub
mov
push
sbb
push
imul
imul
mov
enter
ret
shlb
pop
jmp
xchg
sbb
pusha
and
aaa
xor
push
jae
std
xor
cmp
mov
lock
push
cmp
or
mov
aaa
popa
mov
push
enter
mov
adc
enter
mov
roll
enter
icebp
stos
pop
push
pop
hlt
enter
xchg
cmp
test
scas
xor
add
cmpsl
xor
and
sbb
pop
push
enter
inc
js
xor
push
daa
ret
adcb
jno
pop
stos
add
bound
push
call
sbb
xchg
clc
les
rol
add
sub
sbb
popa
jl
popa
movsb
cmp
mov
dec
and
enter
in
cmpsl
inc
push
mov
mov
adc
and
sbbl
xchg
jge
das
push
push
popa
ret
or
fsubrl
or
insl
sub
pop
pusha
mov
mov
mov
sarb
and
ret
lahf
lret
cmc
jno
add
jbe
xchg
out
jns
imul
les
cmp
sub
sti
cmpsb
jno
mov
mov
dec
lret
xor
mov
test
roll
popf
add
inc
sub
xor
loop
aam
dec
loop
icebp
test
loop
sub
mov
add
call
jae
cld
and
js
inc
dec
fldcw
insb
jno
les
in
out
rcll
cmp
sub
xlat
pop
enter
or
and
sbb
jae
add
sub
enter
sbb
dec
int3
sub
pop
sub
fidivs
jmp
dec
fcmovne
int3
flds
xor
lods
jns
lret
and
insb
popa
and
add
adc
push
lcall
fbstp
jns
sub
fsubrs
inc
pusha
enterw
push
dec
push
xor
mov
xchg
clc
add
sub
movb
push
imul
insb
hlt
je
dec
or
sbb
in
mov
sbb
rcrl
lret
and
xor
rcll
int3
test
sahf
mov
aas
sub
and
add
and
mov
cmp
movsl
sarb
mov
jae
adcb
rcll
xchg
and
ret
pusha
enter
pop
mov
inc
xchg
aaa
pop
int3
mov
mov
push
out
sub
divl
sbb
and
adc
cmpb
mov
sahf
xchg
popa
cmp
mov
mov
mov
adc
sbb
aam
cmp
inc
lock
fs
cmpsl
mov
sub
mov
rorl
mov
in
adc
inc
pop
mov
push
push
lds
pop
pop
add
mov
ret
cwtl
dec
sub
add
fmull
cli
cmp
and
adc
jno
call
dec
and
lahf
imulb
notb
inc
xchg
bound
push
jge
push
clc
xchg
mov
dec
in
subb
sbb
jp
scas
jb
xchg
dec
movsl
jle
sbb
cmp
pop
inc
sub
mov
jnp
mov
mov
push
and
push
dec
cmp
and
arpl
lahf
adc
push
outsb
test
sub
xchg
mov
das
dec
sub
xor
gs
das
pop
mov
or
mov
sub
outsl
inc
je
insl
jle
pop
dec
mov
arpl
inc
mov
aam
and
xor
aaa
push
jo
lods
enter
in
andl
test
push
adc
xor
inc
popf
lahf
and
jo
cs
mov
inc
jne
mov
dec
aaa
fs
jbe
dec
sub
enter
ljmp
insb
pushf
jb
jne
lret
lds
enter
add
dec
rolb
xor
les
add
add
or
sahf
pop
push
insb
cmp
enter
ret
mov
push
insl
xchg
jnp
out
jb
daa
ret
inc
jae
mov
dec
mov
aaa
movsl
or
fdivrl
mov
scas
push
dec
add
cmp
bound
popa
outsl
lods
mov
xchg
cmc
or
or
jae
rol
mov
push
push
leave
aam
dec
mov
pop
sub
push
mov
dec
mov
inc
sti
mov
ret
push
pop
sbb
xchg
or
jecxz
xchg
lret
je
stos
sbb
arpl
clc
mov
test
adc
sub
jne
jp
xchg
stc
mov
pop
push
or
fadds
stc
pop
xchg
cmp
lods
int3
dec
popa
enter
push
ljmp
jb
add
xchg
fisubs
push
or
js
cmp
cmp
hlt
popa
movsl
pop
mov
sbb
jle
cmp
lods
in
sub
xor
add
scas
test
inc
lret
ds
xchg
or
push
mov
xchg
cmc
mov
movsl
mov
andb
fs
pop
in
mov
shll
pop
and
scas
or
jo
mov
and
cmpsl
sub
imul
xchg
and
cmp
ret
mov
jbe
cmp
cmp
add
imul
aam
jmp
imul
xchg
and
xor
sub
or
test
jb
xor
xor
clc
popa
jo
or
pop
fs
aam
mov
pop
sub
mov
out
mov
lds
pop
ret
scas
pusha
enter
mov
or
int
fwait
mov
imul
inc
aas
fildl
cltd
or
call
push
in
xor
pop
add
cmpsl
mov
dec
lds
xchg
inc
enter
pop
cmp
loopne
fadds
rorl
pop
ret
mov
loope
xchg
enter
lea
sti
das
jno
xchg
mov
je
or
out
jmp
mov
shrl
cmp
dec
jmp
movsb
xchg
xchg
cmp
cmpsl
mov
xor
dec
hlt
jo
adc
inc
or
jbe
and
xor
ret
jbe
roll
and
sub
jb
pop
out
jmp
stos
adc
add
push
dec
mov
insb
mov
notl
inc
mov
mov
mov
mov
jecxz
imul
sub
or
sti
rsm
adc
xlat
cld
xor
xchg
mov
sub
mov
inc
xchg
cmpsb
inc
mov
loope
cld
aad
jns
inc
int3
lret
mov
imul
fisubrs
xchg
cmp
xchg
out
leave
inc
pop
adc
and
imull
xor
mov
arpl
sbb
xor
out
push
das
es
loope
pop
out
shr
out
mov
mov
push
xchg
inc
cmp
inc
lock
adc
inc
popa
dec
nop
bound
push
cmpsb
cmp
lds
repnz
add
movsl
xor
and
adc
and
cmp
arpl
xor
jae
push
jecxz
in
add
mov
mov
movsl
xorb
leave
movsb
popf
mov
dec
addb
movsl
jecxz
add
adc
mov
fs
mov
in
add
mov
and
push
in
cmpsl
push
mov
xor
jno
inc
jb
jl
add
xchg
scas
test
sub
xor
inc
repnz
mov
mov
mov
mov
scas
and
push
icebp
shll
les
and
and
push
icebp
xor
mov
mov
lds
inc
add
popa
jae
cmp
ret
push
mov
mov
movsl
adc
sbb
repz
mov
popa
test
int3
push
int
movsl
mov
stos
bound
jecxz
notl
inc
mov
les
ficoml
and
shrb
xor
addl
imul
lret
shll
push
mov
jno
ret
dec
ret
es
adc
rcll
inc
mov
adc
xor
push
aam
inc
mov
inc
pop
pop
hlt
adc
inc
imul
movl
jmp
sub
xor
mov
adc
and
cmp
mov
inc
xchg
sbb
mov
pop
add
sub
mov
adc
cs
dec
add
cmp
testl
adcl
mov
movsl
add
xor
cmp
xlat
mov
add
sub
cmp
shll
clc
daa
xor
push
jmp
fsubl
pop
or
xor
ret
inc
inc
mov
xchg
arpl
push
sbb
ljmp
fst
mov
mov
jl
idivb
and
clc
cmp
lcall
scas
inc
cmp
les
rorb
pop
dec
xor
addr16
jbe
cmp
ret
mov
mov
scas
mov
test
xor
xor
fnstenv
loope
mov
das
ss
popa
ljmp
jns
inc
and
test
sub
je
xor
shlb
xchg
jecxz
push
mov
pop
sbb
mov
aam
adc
mov
mov
sub
rcll
mov
rcrb
inc
test
std
sub
dec
inc
into
and
cmp
and
bound
mov
ds
dec
insb
pop
adc
push
outsl
cmp
push
xchg
inc
sbb
xchg
idiv
fidivrs
dec
test
mov
inc
int3
adc
or
pop
imul
cmp
je
jno
fsubrl
jle
and
fisttps
enter
or
sahf
mov
add
xor
and
imul
xor
push
fsubl
ret
push
mov
jo
fisubs
mov
cmpl
pop
jb
jnp
ret
pop
outsb
movsl
imul
mov
aaa
inc
enter
das
ficomps
test
aas
inc
int3
fsubs
cmpsl
pop
mov
lcall
and
lds
jmp
or
push
and
and
sarl
aad
mov
test
mov
lds
lea
and
cmp
sbb
outsb
daa
cld
dec
inc
xor
inc
mov
push
jne
prefetchnta
and
enter
jno
dec
insb
inc
and
rorl
jecxz
sbbb
into
adc
out
mov
imul
cmpsl
roll
mov
jns
stos
xchg
aad
jnp
xchg
and
adc
inc
dec
cmp
call
in
enter
sub
add
sub
xor
in
fdivrl
adcl
test
out
jp
or
sbb
mov
xor
push
aas
mov
ret
inc
js
test
inc
mov
js
add
data16
aad
inc
outsb
clc
add
jo
mov
jns
add
shlb
mov
and
push
mov
int3
push
xor
mov
sbb
xchg
sbb
jge
inc
dec
jg
ret
aas
or
mov
pop
xor
or
adc
pop
cmp
add
push
mov
scas
mov
mov
fdivrs
xchg
push
out
pop
in
lahf
mov
and
aaa
rcll
fprem
xchg
sbb
cmp
adc
out
aam
mov
imul
xor
pusha
lahf
daa
dec
mov
mov
add
stc
orb
mov
popa
jb
and
enter
cmp
xchg
inc
pop
inc
and
sbb
in
data16
xor
add
into
push
fadd
pop
loope
fbstp
jmp
mov
mov
and
mov
in
adc
add
mov
fs
mov
aaa
rcr
cmc
cmpsl
repz
dec
incl
cmp
out
lret
inc
dec
push
mov
xlat
jl
jne
cmp
lds
scas
imul
lret
add
and
js
shrb
mov
stos
mov
ret
test
adc
sub
push
xor
mov
cmp
and
icebp
test
pop
inc
imul
test
roll
call
xor
imul
imul
xchg
ljmp
mov
inc
adc
outsb
ss
ror
inc
jne
mov
popa
push
in
mov
and
out
aas
repnz
add
mov
inc
cmp
sahf
int
mov
push
aaa
daa
je
xor
xchg
add
lret
push
pop
roll
fldl
fwait
lods
adc
rcrb
outsl
add
and
test
sub
mov
idivb
lahf
addr16
sbbl
mov
clc
mov
xchg
inc
mov
clc
dec
ret
sbb
inc
dec
sbb
bound
lock
push
pop
adcb
dec
mov
cmpb
mov
roll
inc
inc
adc
mov
ret
push
and
xor
pop
stos
fwait
je
mov
insb
fnsave
dec
imul
orb
stos
xor
cs
test
mov
pusha
lods
sbb
mov
stos
ret
and
scas
xor
hlt
xchg
push
jnp
inc
loopne
and
sub
nop
addl
sbb
into
mov
sub
pop
cmp
icebp
xchg
aam
aas
stos
add
shlb
enter
cmp
jg
fs
les
inc
mov
in
push
je
dec
cmp
sbb
sbb
fs
xchg
dec
enter
jb
xchg
cltd
in
imul
clc
loope
lds
les
fistpll
mov
mov
faddl
jbe
mov
adc
les
outsb
add
or
ds
and
push
test
data16
mov
mov
cmp
adc
pop
popa
bound
push
mov
mov
cld
push
cmp
add
mov
push
jb
inc
iret
dec
andb
js
push
test
imul
enter
aad
mov
popa
sahf
pop
pop
dec
rclb
jmp
leave
mov
pop
lcall
popa
sbb
testb
add
mov
in
dec
and
jnp
push
bound
mov
cwtl
or
addr16
inc
xor
xor
or
dec
lcall
jbe
lcall
mov
je
js
xchg
xchg
imul
aas
pop
inc
test
jg
inc
adc
sbb
sub
mov
out
mov
filds
pop
mov
mov
or
data16
loopne
jbe
inc
mov
daa
ds
fdivrs
mov
push
and
or
sub
sbb
and
mov
mov
js
stos
jecxz
aam
add
and
lahf
cmp
out
subb
sub
mov
mov
movsb
cmp
repnz
cli
and
add
pop
inc
cmpsb
add
les
ja
mov
ret
mov
enter
iret
loop
mov
adc
call
push
or
fyl2x
sahf
enter
adc
scas
outsb
push
inc
sub
sub
jmp
push
mov
adc
sbb
mov
aam
movsb
sbb
xor
and
out
mov
in
cmc
push
ss
and
inc
ljmp
mov
inc
fs
push
or
xchg
cmp
inc
xor
push
adc
or
xor
stc
add
les
jle
loope
ficoms
and
pop
dec
and
inc
adc
xlat
orl
dec
enter
add
aam
adc
and
gs
xor
js
xor
lods
sbb
or
jbe
in
push
cmp
dec
adc
dec
and
or
mov
push
jmp
dec
scas
push
inc
shlb
outsl
add
mov
pop
cmc
ljmp
mov
mov
lods
sti
sub
iret
test
ret
xlat
jo
iret
daa
mov
ljmp
sbb
xor
adc
mov
sbb
pop
push
cmp
les
mov
in
in
ret
and
mov
cmp
xor
add
jg
xor
mov
jno
xor
popa
adc
pop
fs
xchg
les
cmp
cmc
dec
lds
lock
and
push
rcrb
dec
insb
lods
mov
shrl
cltd
sahf
insl
xchg
cmpsl
or
stc
popa
jo
aad
test
dec
imul
push
sbb
sti
test
in
or
or
jne
dec
sbb
mov
shrb
xor
addl
jae
clc
mov
ss
inc
icebp
push
and
cmp
inc
aas
daa
add
not
and
inc
popf
jmp
adc
dec
push
pushf
movsl
jns
imul
mov
sub
jno
pop
enter
mov
add
fwait
jmp
les
push
sub
leave
cmpl
aad
push
fwait
repnz
data16
xchg
dec
fstl
sub
xchg
push
inc
sub
hlt
jecxz
fistpll
sub
mov
jmp
mov
mov
cmpsb
es
sbb
std
xchg
lahf
xchg
mov
cmpsl
cli
out
movsl
dec
push
rclb
lret
imul
cmp
push
ljmp
sub
inc
mov
cmc
bound
mov
cmpsb
push
jb,pt
inc
and
mov
mov
add
inc
sbb
and
test
loopne
lahf
jp
test
enter
ret
sbb
dec
inc
mov
insl
bound
aas
mov
and
sub
enter
xor
push
aam
lahf
inc
inc
push
lcall
dec
ret
sbb
or
daa
js
sbb
fstps
jo,pn
push
loope
cwtl
ret
idiv
lcall
pop
pushf
xor
or
pop
xor
enter
xor
jmp
inc
js
pop
mov
loope
push
jnp
leave
fwait
sbb
mov
lea
inc
xchg
push
and
jbe
xchg
mov
popa
dec
jge
xor
cmp
and
inc
mov
inc
add
inc
dec
push
cmp
faddl
les
in
aas
andl
mov
or
enter
xor
mov
mov
out
jno
jo
std
mov
xchg
fnstenv
test
dec
inc
xor
arpl
andl
shl
push
jno
iret
or
js
lods
aaa
stc
jnp
dec
cmpsl
pop
enter
dec
sbb
push
mov
pop
sub
ss
movsb
mov
jb
mov
outsl
insl
test
sub
rol
cmp
and
test
mov
pop
xchg
or
sub
xor
insb
pop
adc
mov
cmp
jecxz
mov
and
out
adc
mov
mov
xchg
cmp
aas
mov
push
sbb
ret
mov
inc
repnz
aas
ret
jp
xchg
xor
jg
push
adc
bnd
push
sub
mov
test
test
enter
sub
add
add
mov
mov
icebp
cmp
lcall
fs
inc
mov
clc
mov
ret
and
inc
das
jbe
test
test
fisubrs
inc
aad
adc
loope
sub
repnz
aad
inc
dec
push
sahf
jb
push
xchg
xor
pusha
imul
addr16
in
roll
push
test
movl
subl
jge
arpl
inc
xchg
xor
mov
arpl
push
mov
inc
push
int3
pop
and
fcomip
je
pop
in
movsb
adc
xor
pop
add
sbbl
stc
movsb
push
mov
cmp
mov
cmpsb
mov
inc
cwtl
jmp
int
rorl
sbb
imul
test
sbb
movsl
cld
mov
imul
ret
pusha
mov
stc
or
xchg
and
push
dec
mov
das
insl
fwait
loopne
insb
and
pushw
sbb
jb
xor
outsb
ss
scas
add
dec
mov
insb
jl
xor
sub
push
push
mov
cmp
add
imul
aam
inc
xlat
adc
and
mov
cmp
sub
mov
and
cmp
push
mov
fimull
mov
orl
adc
sub
inc
push
and
cmp
adc
mov
jbe
in
fcmove
stc
aaa
inc
cld
jnp
xor
test
imul
imul
dec
repz
xor
push
ljmp
mov
loope
bound
rorb
dec
mov
data16
and
sub
xor
push
arpl
push
cmp
and
sbb
stc
push
stc
push
js
cld
cltd
mov
jb
cmp
jno
stc
or
pop
adc
into
xor
imul
mov
int3
dec
jmp
scas
mov
sub
push
rcll
inc
xchg
shlb
ds
cmpl
mov
insb
and
sub
jns
jae
xor
dec
mov
add
addl
inc
cmp
out
add
push
mov
sbb
stc
and
js
or
mov
pushf
fidivs
repz
sbb
push
and
pop
enter
inc
adc
xor
push
and
xchg
mov
cmp
inc
insl
cltd
iret
pop
les
pop
cmp
enter
rorl
dec
and
enter
xor
xor
mov
xor
xlat
les
jmp
je
xor
daa
sub
sub
add
and
push
clc
inc
sub
inc
cmp
and
mov
mov
hlt
aaa
jbe
aaa
sub
shlb
xchg
adc
fnstsw
or
es
enter
dec
xor
ret
cmp
loope
icebp
and
fisttpl
mov
pop
sub
gs
mov
push
jno
daa
and
jmp
in
shll
push
jae
mov
pop
inc
inc
mov
bound
mov
and
push
sub
pop
or
enter
je
cmpb
mov
xchg
add
enter
and
arpl
pusha
mov
fcoms
jno
addr16
mov
add
add
bound
dec
adc
xor
mov
pop
fldenv
das
stc
les
dec
add
aam
pushf
aas
mov
stos
mov
jle
or
daa
popa
mov
jno
lahf
add
dec
mov
enter
mov
cs
inc
inc
inc
lea
repz
xor
mov
cmp
pop
pop
dec
cld
stos
in
inc
inc
jb
mov
mov
aaa
jo
sub
stc
ret
xchg
leave
mov
inc
adcl
push
and
xor
jae
sub
in
and
loop
inc
pop
dec
and
pop
and
mov
and
cld
jl
js
pop
mov
sub
call
xchg
and
icebp
bound
xchg
es
mov
imul
push
fnstsw
mov
mov
push
adc
xchg
repnz
push
out
pushf
repz
fs
ja
cmp
sbb
pushf
imul
les
sbb
push
sub
mov
adc
das
les
sbb
jp
pop
int
push
test
pop
and
loope
xor
cmp
rorb
inc
and
les
add
pop
jno
push
bound
jecxz
sub
aas
push
ret
jno
or
add
addb
scas
xor
inc
stos
out
sub
fiadds
mov
xchg
mov
xor
ss
jb
push
les
int
xchg
ljmp
inc
movsb
inc
sbb
insl
jno
cmp
mov
loope
mov
mov
xor
movsl
mov
lock
sub
and
push
fs
dec
loopne
and
xchg
adcl
mov
pop
or
xchg
in
popf
ja
or
out
adc
subl
out
pop
cmp
pop
ret
icebp
leave
and
movsl
xor
pop
jnp
inc
in
fnstsw
xchg
xor
lret
shlb
sub
jmp
out
out
xlat
mov
fld
sub
lcall
mov
fwait
xor
je
inc
bound
xor
loope
movsl
icebp
imul
dec
movsb
pop
cwtl
jg
dec
xchg
jmp
mov
inc
pop
add
inc
mov
inc
movsb
mov
sbb
mov
dec
clc
push
cmp
sbb
xchg
mov
rcl
sub
rol
lret
xor
cmpsb
pop
jno
mov
push
sub
cwtl
lods
cmp
cmp
inc
stos
push
arpl
test
movsb
ret
xor
repz
adcl
inc
pop
clc
shlb
sub
gs
nop
mov
and
sub
lods
mov
and
sbb
dec
cmp
xchg
sbb
in
loop
cli
inc
and
std
add
adcb
jecxz
insb
jae
or
data16
js
movsl
inc
stos
out
xchg
inc
pop
and
and
das
jle
les
xchg
aam
pusha
inc
mov
lds
xor
dec
inc
or
and
and
push
mov
roll
loop
xor
aad
outsl
push
xlat
arpl
adc
sbbl
xor
hlt
mov
jmp
data16
nop
jns
je
es
hlt
ret
scas
and
mov
pusha
mov
mov
movsb
insb
add
mov
mov
dec
faddl
pop
lret
mov
les
cmpsb
cmp
xor
xchg
fcmovb
xor
cld
sub
or
in
and
test
ja
outsl
lods
rolb
xchg
int3
jmp
pop
aas
xorl
sbb
sub
fidivrs
mov
dec
imul
and
sub
jge
notl
das
in
les
inc
mov
and
push
ds
or
jle
fidivs
and
imul
xor
push
addr16
mov
nop
push
lahf
adc
dec
mov
enter
popl
and
xor
les
mov
mov
sub
and
movsw
or
dec
pop
addr16
jg
dec
enter
jnp
jnp
push
dec
and
test
test
xor
and
xor
jge
or
mov
mov
dec
sub
pushf
es
outsb
out
movsb
int
mov
imulb
out
bound
adc
std
popa
mov
jne
into
sub
lcall
xor
fildll
sub
cmp
mov
and
and
shll
push
add
xchg
test
sbb
addr16
sti
inc
shll
sahf
mov
in
xchg
bound
jb
inc
pop
ljmp
inc
sub
xor
push
jge
dec
imul
xchg
int3
sbb
push
cwtl
fbld
push
xor
test
outsb
addr16
push
mov
pop
cmp
push
arpl
inc
add
mov
lahf
mov
repz
insb
inc
cld
pop
inc
data16
test
hlt
xor
nop
mov
dec
xor
pop
add
les
imul
jle
pop
xchg
sub
xor
dec
adcb
and
cpuid
bound
cmp
mov
ret
inc
jns
fsubs
aad
shrl
in
add
addl
sti
in
dec
rcll
sub
enter
jmp
cmp
in
and
pop
xchg
and
add
sbb
inc
lret
clc
and
icebp
cmp
je
shlb
scas
out
shlb
xor
imul
lock
in
dec
sub
pop
push
push
xchg
xchg
cwtl
dec
inc
xchg
imul
sub
jg
jg
scas
in
and
imul
add
mov
xchg
cltd
mov
xor
push
test
and
or
sarl
movsb
js
and
push
adc
xor
movsl
and
mov
jb
xor
fistps
jl
and
insb
cld
out
in
imul
scas
in
add
xor
les
sbb
sti
shll
mov
and
int3
gs
fsts
push
lds
pop
cmp
or
cmp
push
aaa
push
fisubrl
adc
and
outsl
shr
xchg
cs
stos
inc
pop
cmp
sub
out
repnz
inc
mov
and
add
jmp
push
gs
aam
dec
inc
nop
and
clc
jne
in
xlat
addb
adc
push
lahf
xor
outsl
mov
and
push
and
and
inc
pushf
and
lods
mov
mov
cli
inc
adc
mov
daa
pushf
lods
mov
lcall
adc
or
xchg
push
or
dec
fstps
adc
and
stc
cmpsb
mov
mov
or
jae
dec
and
push
lock
leave
mov
insb
imul
xchg
cmpsl
push
mov
int
and
test
testl
xchg
jge
shll
outsb
adc
pop
scas
cli
mov
xchg
push
jne
sub
jle
fiadds
jns
xchg
cmp
out
frstor
jmp
mov
aam
stos
es
dec
and
cmp
stos
pop
test
xchg
sub
sti
xor
ds
ret
dec
cs
pop
cwtl
jle
adc
test
mov
sarb
stos
testl
xchg
std
and
jl
cmp
mov
jo
jmp
test
inc
mov
sub
adc
jecxz
add
int3
outsb
stos
pop
sub
cmpsl
push
lods
gs
addr16
jns
je
and
xchg
cmpsb
ret
and
outsb
neg
and
mov
stos
pop
sti
lods
or
push
push
adc
sub
je
in
movsb
aad
dec
aaa
dec
and
pop
lea
stc
cmpsl
std
mov
xor
int3
dec
and
adc
pop
and
aad
mov
xor
jmp
and
cmp
pop
ss
lret
rolb
cmp
popa
add
or
xchg
xchg
pop
and
adc
rcll
pop
movsl
and
mov
or
out
popa
and
outsb
sbb
sub
and
push
pop
sbb
cmpsb
mov
xor
les
inc
push
data16
mov
scas
faddp
or
cltd
cmp
int
mov
mov
xlat
inc
addl
ret
scas
daa
aam
and
push
mov
into
cmp
pop
and
add
sbb
cs
andb
and
mov
pop
pop
ret
sbb
cmc
jecxz
and
imul
repz
fisubrs
pop
jo
dec
dec
jne
xlat
xchg
shl
mov
and
inc
inc
sub
outsl
sub
jno
out
mov
daa
and
decl
xchg
cmp
push
pop
and
sub
cltd
rcr
jge
xchg
cmp
rclb
xor
test
jge
sub
icebp
push
xor
cmp
and
jecxz
jnp
popl
std
fidivs
leave
into
push
adc
mov
and
iret
aas
pop
and
in
jl
jno
or
or
stos
pop
inc
sbb
out
ljmp
xchg
and
mov
or
adc
pusha
shll
fdivl
sub
push
or
imul
sahf
pop
and
inc
addr16
mov
loop
and
sahf
cmp
and
jmp
lea
call
push
out
mov
in
inc
call
icebp
in
ljmp
and
sbb
and
add
push
je
clc
jns
popf
cmpsl
pop
dec
xchg
and
mov
es
inc
pop
adc
and
pop
inc
add
aad
lcall
and
mov
jns
mov
cmp
adc
xchg
stos
and
loop
lods
mov
pop
pop
xor
sub
sub
sbb
mov
jecxz
and
push
cltd
popf
fcomps
jg
or
ljmp
sub
cld
xor
enter
xor
rcll
std
push
test
movsb
ret
lret
shlb
mov
jmp
push
mov
mov
fs
pop
and
les
dec
mov
mov
adc
inc
dec
js
and
imulb
adc
mov
add
and
sub
les
out
in
mov
cs
push
push
xor
fstpt
and
jnp
and
adc
xor
push
rep
test
mov
and
pop
out
ljmp
mov
lods
jb
je
mov
push
inc
and
jmp
add
mov
adc
sarb
out
mov
outsl
mov
adc
mov
xchg
test
ret
in
sub
mov
call
xor
inc
cltd
adc
mov
cmp
outsl
and
outsb
pop
mov
shlb
cwtl
sbb
fcomps
lds
adc
add
mov
dec
scas
ffree
or
out
int
lods
popf
xchg
dec
cmp
fdivrl
push
and
cmpsl
mov
stos
andl
insb
jno
push
xor
mov
push
andb
test
je
neg
or
push
and
inc
add
and
jnp
repz
in
and
xor
jne
lea
adcb
js
xchg
scas
dec
fwait
aas
and
mov
mov
and
and
adc
pop
es
pop
xor
jle
das
es
inc
sbb
mov
jmp
xor
cwtl
xor
shlb
frstor
lret
push
or
fildll
nop
ja
cltd
cltd
fdivl
and
add
cmpb
mov
push
push
inc
jne
xor
and
lds
pop
ret
shlb
fsubs
int3
and
add
sub
inc
cmp
aam
adc
cld
adc
dec
adc
xchg
inc
and
leave
mov
rcrb
pop
lcall
jecxz
or
add
and
js
add
clc
test
bound
jno
daa
inc
xchg
jbe
mov
and
fdivrs
shll
sbb
bnd
imulb
sbb
outsb
cltd
cmpsb
call
pop
iret
les
inc
outsl
inc
shl
movsb
cmpsb
sbb
mov
and
test
ja
call
mov
inc
lcall
scas
and
push
sbb
add
in
mov
sbb
jecxz
mov
aam
cmp
push
fisubl
sbb
cmp
out
fists
dec
adc
into
and
scas
pop
das
or
hlt
cmpsb
insb
out
mov
and
cmp
pushf
pop
iret
sub
push
mov
nopl
ss
ja
push
dec
and
scas
test
or
xchg
fildl
and
pop
fadds
lds
test
mov
fs
dec
loope
cwtl
push
xor
add
sub
icebp
test
inc
jecxz
roll
pop
pop
and
add
mov
add
xor
std
out
and
loopne
xchg
mov
lea
insl
jbe
inc
sub
dec
sub
loop
dec
pusha
cmp
jl
dec
mov
dec
les
add
or
shl
in
out
pop
clc
and
dec
jne
stos
mov
cmp
pusha
push
and
cmp
je
mov
and
std
or
mull
scas
or
cwtl
fdiv
push
and
sbb
inc
sbb
add
fwait
push
and
mov
iret
push
test
pop
mov
push
pop
and
dec
mov
or
outsb
cmp
and
arpl
or
in
and
push
and
or
mov
bound
xor
daa
xchg
repnz
dec
xchg
mov
and
or
add
xor
inc
xor
mov
in
mov
outsb
push
sub
dec
es
jno
movsl
and
out
xchg
fstpl
insb
sub
popa
jp
pop
push
imul
stos
sub
jmp
ret
rclb
pop
insb
popw
adc
dec
insl
mov
mov
jnp
mov
test
push
outsb
jno
repnz
dec
and
adc
xchg
pop
pop
dec
cmp
int
mov
push
and
push
jbe
adc
stos
jg
cmp
jbe
sbb
cmp
cmp
and
inc
andl
pop
punpckldq
mov
dec
lods
daa
sahf
inc
inc
in
and
xchg
stos
dec
mov
push
enter
fldl
pop
hlt
bnd
push
shll
mov
shlb
es
scas
jp
js
js
push
leave
imul
sti
inc
xor
mov
dec
mov
dec
data16
nop
sahf
cmp
inc
es
outsb
xor
dec
cld
ret
hlt
xchg
sub
xor
inc
dec
lea
cmc
and
int
rclb
sti
les
dec
mov
in
movl
sub
lcall
xchg
shlb
pop
jg
mov
nop
mov
daa
stos
mov
mov
aad
push
sub
sti
adc
xlat
ret
lahf
imul
pop
lret
pushf
dec
and
or
mov
cmp
pop
movsl
push
mov
mov
adc
xor
and
leave
dec
xor
sub
enter
pop
imul
xchg
xor
dec
mov
inc
out
cld
insb
outsb
scas
jo
inc
dec
cli
and
call
push
xchg
cmp
rcl
hlt
enter
and
ret
and
push
pop
cmp
repnz
es
push
cmp
cltd
mov
mov
push
xor
cmpsl
xor
inc
mov
jns
mov
pop
xchg
mov
outsb
ret
lret
idivl
jp
xor
inc
jge
xchg
inc
fstpl
clc
add
in
sub
push
nop
pop
aas
sbb
xor
test
fsubp
mov
loope
and
cmp
iret
add
inc
rcrl
mov
jp
mov
cmp
mov
add
cmp
and
sti
xchg
bound
xchg
dec
imul
mov
sub
sub
in
sbb
dec
sbb
sbbb
mull
imul
lahf
jp
pop
xor
mov
das
cwtl
jmp
imul
xchg
dec
aam
in
daa
ret
sub
nop
enter
fprem1
mov
imul
cmp
add
add
addb
into
inc
jb
nop
push
lods
imul
dec
or
ja
push
test
shl
cmp
mov
insl
aas
ds
pop
xorl
aad
xchg
outsb
mov
imul
add
cld
outsl
out
inc
repnz
cmp
mov
mov
rorl
dec
pop
cld
cmp
xor
mov
adcl
in
movsb
sub
pop
cmp
in
mov
cmp
insl
stc
roll
js
addb
enter
fbld
icebp
nop
xor
push
sbb
mov
add
and
xor
or
scas
lret
xchg
xchg
data16
jle
pop
aas
push
sub
inc
jecxz
enter
inc
xchg
pop
movsb
mov
dec
push
inc
jge
sbb
jno
dec
cmp
mov
jecxz
insl
sbb
dec
xor
imul
das
adc
dec
mov
insb
push
in
or
push
ja
dec
inc
add
shlb
xor
ret
das
dec
int3
sbb
out
add
push
popa
sub
sbb
iret
inc
jne
pop
or
out
fmul
inc
mov
fwait
mov
and
nop
fidivs
fstpt
inc
push
lcall
xlat
test
fidivs
std
inc
pop
ret
or
or
and
push
sub
popa
push
push
into
push
repnz
xlat
hlt
jnp
mov
loope
pusha
pop
dec
lods
sbb
daa
adc
aam
int
aaa
inc
out
jecxz
repz
sbb
hlt
cmpsb
xorl
or
ret
dec
xchg
xchg
mov
inc
mov
repz
cmp
int
mov
ret
push
std
pop
xchg
or
imulb
push
lds
imul
mov
sbb
or
notl
loope
imul
xchg
sbb
lods
add
inc
outsb
rcrl
mov
jbe
arpl
sub
pop
test
xor
pop
lds
rolb
dec
lock
inc
call
pop
adc
jno
sbb
dec
in
pop
loope
xor
adc
xor
mov
addr16
mov
mov
cli
jmp
inc
in
gs
stos
lret
sbb
sbb
sbb
out
adc
loope
sub
jnp
adc
fbld
rorl
sub
jae
sub
jnp
xchg
cmp
adc
les
repz
pop
movsl
and
sbb
shrb
push
mov
inc
mov
dec
enter
adc
or
adc
fldl
loope
push
mov
cltd
ret
sbb
test
push
shll
xor
adcb
sbb
int3
ret
arpl
xchg
cltd
lahf
les
mov
dec
pop
lods
jbe
insb
and
cmp
enter
or
push
xor
punpckhwd
fiadds
pop
dec
ja
outsb
outsl
xor
inc
in
mov
or
or
pop
sbb
xor
inc
mov
sahf
pop
mov
xor
das
into
inc
sbb
push
lret
enter
mov
into
addb
andb
cld
mov
movntps
cmpsb
jecxz
and
lar
push
cld
push
ljmp
arpl
inc
sbb
jb
ret
add
inc
sbb
xor
inc
popa
cmp
mov
enter
pop
mov
arpl
gs
cmpsb
inc
pushf
enter
dec
mov
outsb
std
cli
test
dec
les
and
mov
pop
add
les
bound
dec
inc
and
popa
push
dec
xor
or
mov
cld
das
loop
cli
movsl
mov
mov
mov
int3
xor
fdivr
and
enter
sbb
sub
inc
icebp
xor
xchg
out
pop
leave
or
inc
mov
sbb
dec
add
call
mov
test
pusha
aad
push
cmp
jo
inc
inc
mov
enter
pop
aaa
cmp
dec
inc
les
lret
jnp
mov
imul
mov
lahf
mov
mov
cmpsl
jnp
mov
inc
cmp
add
fisubl
xchg
push
clc
or
sub
les
sub
out
dec
std
in
mov
inc
stos
aad
scas
xchg
imul
xor
or
mov
pop
rolb
out
sub
and
imul
pop
xchg
dec
xor
jb
push
pop
xlat
lret
inc
sbb
shll
pop
xor
iret
out
enter
sbb
push
cmp
mov
ja
in
mov
stos
adcb
ret
fs
sti
lahf
addr16
enter
cmp
pop
mov
insl
pop
adc
xor
loope
ret
fpatan
cmc
adc
fisttpll
jne
pop
jns
push
insl
pop
mov
or
bound
mov
mov
and
ss
sub
inc
xor
pop
mov
cmp
xor
inc
jecxz
stos
dec
popa
rcll
adc
and
cld
bound
fstpl
sub
xchg
movsb
mov
pop
xchg
shr
pop
bound
add
jg
loope
ret
test
pop
mov
cmp
mull
pop
enter
mov
sbb
insl
ds
inc
jb
in
lea
std
cltd
inc
inc
icebp
xor
add
pushf
mov
pop
pop
imul
or
and
pop
adc
sub
popf
icebp
sbbb
mov
scas
mov
lock
cmp
cmp
or
outsl
dec
arpl
mov
loope
push
dec
les
inc
xor
mov
lahf
mov
dec
xor
xchg
sti
xor
dec
pop
sub
sbb
cmp
js
xchg
and
push
cmp
dec
dec
stos
and
jo
fsubrl
sahf
xor
mov
dec
bound
pop
dec
aas
call
cmp
rcrb
hlt
adc
sub
pop
out
sbb
cmpsb
into
test
daa
add
ret
fldenv
in
jl
and
mov
sbbb
dec
mov
sub
shll
arpl
lret
or
add
out
bound
and
mov
icebp
call
xor
and
pop
sub
pop
pop
sbb
pop
cmp
cmp
mov
fstl
andl
xchg
stos
xlat
aaa
push
gs
add
push
sub
cli
add
outsb
cmp
jl
ficompl
sub
in
jp
push
and
iret
mov
push
push
and
aam
mov
cmpsl
and
fcoms
inc
movsl
sahf
or
or
and
add
lock
andb
ja
jle
and
cltd
into
sub
mov
lea
cli
jbe,pt
sub
xchg
and
and
xchg
sbb
scas
stc
cltd
inc
mov
icebp
jns
xor
sub
pusha
jp
mov
mov
mov
in
out
xor
inc
rclb
adc
add
dec
sub
and
jecxz
pop
pop
jl
push
push
out
and
or
rclb
and
loopne
fiadds
lret
sbb
inc
std
inc
outsl
or
imul
mov
out
movsl
call
and
out
mov
aad
test
and
xor
push
cwtl
aaa
pop
and
out
popa
fistpll
scas
cs
je
or
nop
push
int3
ss
mov
and
jg
lods
xor
mov
and
sbb
pop
inc
xchg
addr16
jmp
imul
xor
icebp
ja
and
jne
inc
push
xor
rorl
mov
dec
scas
add
or
adc
cld
and
and
stos
rorb
mov
shlb
je
and
push
jg
hlt
adc
cmp
dec
loop
mov
pushf
and
jo
imul
outsb
ret
or
lahf
sub
sub
lcall
outsb
and
and
xor
and
jge
push
and
lret
mov
int3
fbld
mov
imul
andb
inc
sub
es
leave
aaa
pop
adc
aas
xchg
and
lret
loopne
cmp
aas
push
pop
shl
ljmp
fists
push
adc
les
andb
mov
repnz
gs
fbld
push
mov
and
cs
sbb
inc
or
ljmp
arpl
and
jns
dec
pushf
and
test
pop
jmp
adc
and
in
xor
and
push
sub
je
add
sbb
cli
pop
jno
and
inc
test
mov
mov
fsts
push
cmp
leave
je
xchg
mov
add
jmp
mov
xchg
jecxz
and
repz
and
dec
mov
and
popf
sub
sub
cltd
ds
and
cld
ret
and
sbb
jg
or
xchg
push
jo
je
cmpsb
pop
mov
sub
cmc
mov
rcl
nop
sub
sbb
fwait
imul
pushf
lahf
enter
sbb
andb
imul
jge,pt
cmpsl
sub
mov
and
inc
je
adc
or
and
adc
jmp
fisttpll
imul
pushf
stos
jecxz
inc
dec
loopne
adc
jl
or
mov
leave
cwtl
js
push
adc
xor
sbbl
and
cld
fs
push
adc
xchg
jl
ret
sub
les
add
cltd
xchg
or
jle
not
cmpsb
sbb
popa
dec
popa
ret
ljmp
arpl
mov
lcall
daa
mov
xlat
add
inc
xchg
jge
loope
adc
fstpt
dec
jne
fsubrl
xchg
sub
test
out
arpl
lret
dec
xorb
inc
movsw
insb
jl
fsts
ret
iret
adc
ret
jbe
les
lods
sbb
dec
lock
mov
pop
and
enter
push
xchg
rorl
sti
les
pop
fbld
push
ds
out
xchg
inc
movsb
mov
jp
adc
inc
lock
lds
inc
push
subb
outsb
or
add
mov
les
cmp
sub
and
fdivr
mov
cs
in
les
and
sbb
mov
out
inc
add
jle
movsb
xchg
inc
push
adc
lret
adc
xor
test
imul
outsb
cmpsb
xlat
jb
sbb
mov
lea
lods
in
sub
add
sub
sub
daa
or
mov
repnz
arpl
pop
add
out
jl
cs
adc
popf
push
test
and
push
cmp
xchg
popa
mov
arpl
jns
xchg
and
sub
mov
and
pop
std
inc
inc
mov
dec
mov
hlt
shll
cmp
test
les
and
push
sbb
jne
cmp
or
xor
push
inc
jle
dec
mov
lahf
insb
dec
and
pop
sub
outsb
test
and
pop
mov
jnp
mov
pop
sbbb
cmpsb
lea
mov
out
cmp
sbb
xor
and
add
clc
xchg
out
jns
and
popa
int3
xchg
icebp
dec
arpl
sub
pop
mov
stos
and
inc
out
shll
and
fwait
mov
sub
lds
jle
dec
jb
addr16
insb
fwait
push
and
roll
pop
and
pushl
push
dec
ret
jb
mov
fistps
sub
mov
pop
cmp
ds
pop
lock
xchg
in
out
cmc
and
insb
out
lret
pop
rep
pushl
lock
mov
push
ja
pop
stc
and
mov
shr
sti
scas
or
and
xchg
test
andb
lret
pusha
dec
cld
insl
cltd
test
std
mov
push
test
loope
imul
mov
sbb
and
roll
xchg
mov
mov
lock
sub
repnz
decb
and
cli
push
adc
sub
orb
push
lret
and
and
or
in
clc
adc
nop
test
mov
mov
in
cmc
loop
or
and
pop
out
and
push
adc
dec
and
test
push
dec
insl
and
clc
or
sub
sub
inc
or
lods
and
or
xchg
lock
mov
ret
xchg
int3
and
xchg
push
jo
mov
inc
and
mov
push
xlat
xchg
inc
mov
adc
pop
scas
mov
or
repz
icebp
jb
shll
loop
jo
popf
fmuls
add
xor
cmpsb
ficompl
and
push
adc
aaa
and
std
out
outsl
mov
addl
xor
lret
and
paddsw
jl
cmpsl
and
scas
mov
aad
cwtl
sbb
jo
pusha
ret
and
and
cmpsb
mov
push
pop
or
rolb
insl
loopne
inc
les
sarl
cmp
pop
and
popf
retw
xchg
xor
and
mov
stc
and
sti
dec
iret
sbb
inc
dec
sub
inc
add
xchg
jnp
mov
and
sarb
or
mov
and
sbbb
sub
shll
mov
dec
xchg
and
dec
push
aam
push
inc
sbb
jmp
pop
or
xor
sub
cmp
xor
stc
dec
mov
imul
dec
sub
xchg
and
push
imul
insl
push
sarl
mov
or
jo
dec
ficompl
das
and
lret
lods
and
pop
xor
and
stos
popf
fs
add
hlt
xchg
cmpsb
pop
and
or
fstpt
stos
fcmovbe
nop
inc
cwtl
cmp
movl
and
lret
cmc
movsb
sbb
enter
cmp
jmp
repnz
jge
arpl
xchg
cmp
inc
lods
and
pop
sub
adc
push
or
and
sbb
add
nop
arpl
pop
aas
jmp
add
and
cld
pop
or
and
insb
jge
das
mov
ret
insl
cmp
sbb
add
arpl
adc
mov
cmp
mov
add
xor
and
mov
bound
lods
cmpsl
sub
jge
inc
adc
cmp
and
or
adc
and
jbe
clc
adc
and
xchg
xchg
fcomip
out
and
pop
cltd
and
mov
dec
inc
sbbl
or
xor
add
js
cli
inc
and
in
and
mov
and
lods
hlt
stc
and
sbb
fisttpl
mov
jno
or
and
hlt
pop
xor
loopne
mov
xor
adc
in
test
and
jae
adc
or
push
enter
and
jbe
pushf
mov
inc
sub
fnsave
inc
and
and
ja
push
cli
clc
pop
inc
out
lahf
mov
and
loopne
jae
xchg
xor
inc
push
mov
and
or
vpunpcklqdq
sar
cld
mov
mov
fs
sbb
into
xor
or
and
ficompl
and
or
cmp
adcl
in
xor
mov
mov
push
jle
xchg
and
sub
out
or
and
dec
std
fdecstp
jo
fsubr
out
or
ljmp
jns
loop
outsb
in
cltd
push
pop
and
aad
icebp
clc
pushf
aas
mov
or
mov
bound
fadd
pop
and
and
imull
dec
jl
jae
clc
fisttps
lret
or
adc
das
gs
adc
sbb
jnp
dec
out
cltd
and
subl
xor
jae
and
sub
dec
cmp
mov
cmpsb
mov
and
push
and
inc
idivl
ret
adc
push
outsb
hlt
sbb
adc
xchg
adc
push
jo,pn
fnsave
dec
ljmp
jnp
popa
out
adc
mov
lds
sub
push
xor
mov
out
out
mov
jno
aam
adc
and
bound
and
and
and
stos
pop
shll
popa
and
aad
add
and
out
pop
dec
notb
test
cmp
mov
xchg
fstpt
fisubs
rclb
scas
push
repz
mov
inc
jle
into
and
jmp
xlat
lods
lock
aam
fwait
lds
imul
sbb
lods
les
lahf
in
mov
mov
add
xchg
sub
or
ret
inc
aaa
or
cld
push
and
xchg
and
mov
add
cltd
addr16
sbb
lret
mov
and
dec
push
ds
xor
and
push
dec
jmp
cmp
sub
in
lret
ret
adc
inc
mov
and
jbe
adc
and
stc
mov
and
and
cmpsl
and
or
sub
add
std
push
jmp
jne
or
or
sti
lahf
pushf
mov
mov
ret
fisubrl
sbb
and
mul
inc
xchg
lds
or
inc
in
cmp
xor
stos
push
mulb
adc
mov
les
dec
jb
sub
sub
in
push
jecxz
mov
outsb
mov
fldt
mov
xor
xchg
int3
dec
cwtl
rcrl
inc
fstps
call
into
dec
ffreep
or
mov
daa
pop
push
xchg
les
or
or
pop
mov
insb
iretw
dec
mov
mov
mov
insl
ret
mov
loope
ja
lcall
sub
scas
dec
bnd
inc
mov
mov
das
inc
test
push
insl
jno
cmp
sbb
test
mov
mov
pop
xchg
add
or
add
inc
or
cmpsb
cmp
push
and
iret
jo
and
push
inc
pop
mov
pop
xor
in
daa
out
fisttpll
jle
xchg
inc
call
push
and
ret
cmp
dec
pop
lahf
pop
cmp
jmp
sti
mov
aaa
sbb
adc
pop
push
or
inc
dec
adc
movsl
cmp
jo
add
filds
popa
push
hlt
xchg
sahf
test
jo
jno
arpl
xlat
insl
mov
pop
iret
mov
aad
pop
sub
mov
lea
repnz
rcrl
enter
and
xor
xlat
add
int3
xor
int3
ss
mov
arpl
lods
mov
cmp
insl
lds
or
popf
dec
add
jne
test
jp
and
or
bound
dec
add
mov
mov
dec
add
loop
outsb
cld
xchg
ret
bsr
imul
ja
xlat
je
jl
dec
in
inc
xchg
es
test
push
aad
mov
dec
dec
and
mov
dec
cmp
and
xchg
ret
das
pop
xor
xchg
jnp
mov
mov
cmpsb
sub
fcoms
test
jno
cli
mov
popf
mov
mov
enter
inc
pushf
sti
push
inc
ja
cwtl
cmp
popf
adc
lahf
push
pop
inc
adcb
inc
mov
mov
pushf
sahf
and
ja
data16
std
xor
pop
xorl
lahf
jg
fidivl
popf
mov
mov
push
sub
notb
aad
dec
std
fnsave
push
insl
pop
adc
jmp
mov
cld
jg
outsb
dec
mov
outsb
adc
int
mov
shrl
mov
ja
dec
sti
push
and
ret
imull
and
test
dec
lds
push
sbb
icebp
aam
lods
and
fmuls
mov
js
or
inc
inc
fiaddl
push
shll
sub
cmovp
pop
mov
int3
mov
outsb
aas
jns
insl
adc
xchg
jno
jg
je
xor
popa
push
cmc
enter
xchg
dec
das
dec
sbb
ja
push
aaa
pop
inc
lock
fmull
mov
scas
sbb
lret
and
push
lret
xor
jbe
test
inc
adc
loopne
push
imul
ja
inc
iret
or
sarb
arpl
add
mov
jne
push
cmpsl
ljmp
jl
incl
sub
jbe
xor
mov
in
fcmove
insl
mov
aam
cltd
lret
mov
lods
loope
scas
inc
pop
fcompl
and
pushf
iret
inc
sub
out
inc
jae
cmp
int3
inc
jecxz
cld
test
mov
sub
stc
mov
pop
dec
jae
ljmp
popa
int3
cmp
and
outsl
lahf
sti
cmpsl
ja
out
fdivp
hlt
jp
aam
push
movb
fistpl
fucom
jl
test
fnstenv
xchg
sbb
adc
add
sub
mov
imul
and
les
xchg
mov
sub
push
or
scas
adc
mov
fldl
inc
adc
or
pushf
daa
and
pop
cltd
xchg
xchg
cld
jnp
adc
popa
mov
mov
addl
jge
push
mov
shll
leave
icebp
xor
iret
shrl
add
in
dec
adc
pop
sub
xchg
sub
rorb
jl
cs
outsb
jmp
mov
es
push
or
sub
mov
les
dec
mov
popa
xchg
les
and
shrl
dec
or
mov
fisubs
jg
sbb
add
lret
test
ds
lcall
inc
and
scas
sub
shl
or
sub
pop
fcomp
xor
jl
mov
inc
or
mov
mov
push
cmp
jno
test
jp
jb
out
aas
aas
cmp
in
xor
pop
addl
mov
adc
sub
mov
loop
test
jo
ret
sub
inc
data16
sub
and
cmp
xor
push
xor
ljmp
pusha
leave
lock
xor
scas
out
and
mov
pop
and
xor
and
mov
and
ficoms
add
popf
add
xor
inc
out
aas
mov
jns
sbb
and
xor
and
stc
jns
rcrl
cmp
inc
sbb
pusha
shl
jle
lods
out
shrb
lea
imulb
ret
pop
lahf
dec
loope
jmp
and
fs
pop
fdiv
and
stc
sbb
dec
out
sub
imul
jg
cmpsl
sub
inc
jns
push
and
out
fwait
lds
dec
and
lret
cmp
leave
and
in
mov
and
ret
negl
std
or
popa
ss
jno
pop
adc
xor
inc
and
adc
test
add
das
negl
in
push
jecxz
push
push
dec
in
pusha
add
pop
or
lods
and
icebp
stos
clc
pop
jo
test
cs
daa
or
mov
mov
and
inc
mov
sub
mov
or
adc
jl
push
and
push
cwtl
aas
sbb
repz
sub
and
pop
sbb
lods
and
test
and
and
cltd
out
pop
popf
xor
xchg
cmpb
shl
lret
inc
jmp
outsl
imul
jno
pop
mov
popa
jge
mov
mov
repz
and
jns
ds
xchg
std
mov
push
shl
and
mov
shl
and
cmp
inc
lds
and
mov
sub
adc
int3
in
inc
and
pop
pushf
lock
adc
inc
inc
mov
lcall
outsb
mov
inc
and
xchg
or
and
pop
jb
test
sub
mov
jnp
fs
sub
dec
nop
jl
out
xchg
xchg
cmp
add
fimull
inc
sub
pop
push
adc
test
sub
and
stos
xchg
xchg
hlt
in
mov
roll
inc
aas
add
fimull
pop
pushf
jns
sbb
in
lret
push
and
ret
cli
sub
pop
and
mov
insb
push
and
sbb
and
cli
aad
cmp
lret
aas
dec
les
sbb
movsb
jmp
lahf
and
clc
test
and
jae
mov
pop
test
pop
adc
and
push
movsl
sbb
mov
psadbw
jg
arpl
push
inc
and
ret
test
xchg
mov
dec
push
push
cmp
push
js
mov
sub
hlt
inc
and
xchg
jecxz
push
jnp
inc
or
pop
push
fisttps
and
xchg
sti
cli
sub
jae
and
dec
arpl
outsl
std
xlat
push
das
pushf
inc
and
shll
sub
or
xchg
jp
mov
out
push
aaa
cmpsb
push
stc
shlb
call
je
inc
adc
and
sub
sub
mov
popf
je
push
and
aaa
call
push
push
enter
test
out
pop
loope
in
int3
lods
jbe
xor
mov
arpl
xchg
sub
sbb
mov
pop
adc
daa
imul
or
cmp
and
shl
and
arpl
cld
dec
lcall
mulb
addr16
jg
hlt
and
bound
and
push
fisubl
sbbl
mov
repz
je
loop
and
adc
and
push
adc
push
lret
adc
iret
lret
fsubs
and
lock
xchg
xchg
fists
sarb
inc
push
push
jle
xchg
xchg
ljmp
push
and
push
cmp
testb
aad
test
add
pop
mov
pushf
mov
ret
fs
dec
and
testb
and
push
dec
insl
pop
mov
or
mov
jns
pop
fisttpll
loope
sub
jp
fadd
aas
mov
hlt
mov
mov
subl
leave
jecxz
xchg
jmp
add
dec
sub
loop
push
add
jge
xor
and
out
and
sub
les
xor
and
adc
es
and
and
fimuls
jne
mov
aas
sahf
fbstp
and
out
mov
sub
inc
jmp
cld
mov
negl
and
or
in
mov
leave
fcoml
lock
mov
pop
jecxz
and
dec
xor
inc
popa
and
xor
jecxz
shrb
into
ficoml
push
pop
and
xchg
and
add
pop
mov
fisubrs
movsl
dec
push
imul
mov
rcrb
stc
sbb
dec
mov
mov
push
testl
sbb
popa
pop
popf
cmc
aad
dec
and
mov
aam
adc
rcll
data16
and
push
jbe
inc
push
pop
sbb
pop
cmc
dec
sub
stos
xchg
outsb
dec
ret
and
ss
fxam
sbb
dec
push
leave
movsb
cltd
test
data16
mov
mov
or
and
lds
js
lret
and
sub
sub
xchg
dec
movsb
mov
pushf
or
cmpl
test
pusha
mulb
outsl
push
add
sub
sub
mov
aad
cmp
mov
testl
dec
dec
dec
add
mov
inc
sbb
pop
imul
and
sbb
out
and
daa
and
add
lret
das
pop
or
jp
mov
cmpsb
push
sbb
and
inc
inc
insl
and
sub
push
mov
les
stc
push
sub
cmp
lret
dec
dec
shlb
and
pop
pusha
mov
push
pop
xchg
cmpsl
push
and
pop
push
testb
adc
fldcw
ss
mov
out
sub
sub
pop
movsl
faddl
dec
add
je
and
fwait
dec
scas
cmp
cmpsb
jle
adcl
pop
and
add
inc
sbb
mov
ljmp
xor
cwtl
or
movsb
pop
adc
sbb
test
fldcw
orl
in
loope
fisubrl
insl
xor
cwtl
and
repz
and
int3
out
sbb
mov
xchg
dec
dec
in
or
rsqrtps
jecxz
xchg
jbe
push
jno
pop
shlb
outsb
xor
sbb
and
data16
xor
ret
xchg
fdiv
mov
bound
and
ret
mov
push
addr16
or
pop
pop
call
je
mov
mov
lahf
add
xchg
push
iret
push
add
sahf
mov
mov
cld
sbb
pushf
dec
mov
imul
push
jp
repz
jns
jae
movsb
pop
jne
mov
lods
mov
cmp
popf
out
and
push
mov
fwait
inc
jg
lods
sbb
sqrtps
ret
pop
stos
xor
and
lahf
pop
enter
sbb
cmpsb
or
pop
cmp
lods
mov
je
out
pop
or
fadd
clc
sub
mov
pop
add
lea
push
mov
cmp
sbb
push
das
jno
push
sub
mov
xlat
xor
dec
mov
addr16
ret
lods
and
ret
loope
mov
xor
adc
adc
test
fwait
sbb
jmp
xchg
in
dec
push
mov
movsl
cltd
imul
sbb
es
dec
add
dec
mov
aad
fistps
dec
push
adc
imul
dec
hlt
mov
shrl
adc
fsubrl
pop
aad
jno
cmp
sub
int3
pop
adc
sub
pop
mov
lcall
daa
popa
enter
and
stos
mov
push
mov
arpl
push
insl
and
lods
mov
leave
inc
pop
sbb
jmp
inc
sbb
and
mov
stos
jno
jbe
in
ret
daa
sahf
sbb
xor
xchg
pop
lcall
and
mov
shll
dec
dec
sarb
xchg
fs
dec
pusha
or
jge
mov
ficomps
inc
xchg
jb
jp
mov
scas
enter
mov
loopne
repnz
mov
add
inc
jg
mov
jb
shl
nop
and
les
clc
stc
mov
and
xchg
jg
leave
lahf
inc
mov
sahf
imul
xor
and
inc
sub
les
pop
lods
rclb
and
inc
push
leave
icebp
cli
and
enter
jp
mov
cmpsb
ror
shlb
xchg
xchg
sub
aas
push
imul
bound
xchg
jns
inc
hlt
jg
ja
mov
sub
mov
loopne
push
call
sub
enter
mul
aas
inc
or
cmovle
inc
adc
dec
movsb
xchg
mov
daa
dec
int3
and
adc
fs
mov
mov
push
cmp
shll
push
insl
arpl
inc
js
aad
sub
rorl
mov
and
mov
cwtl
push
sub
outsb
es
and
nop
push
ret
arpl
push
arpl
lds
inc
push
adc
cmp
fcoml
cltd
lcall
push
insb
mov
sbb
shl
mov
add
inc
test
daa
jno
aaa
arpl
xchg
xor
xchg
imul
dec
sti
sub
inc
bound
jne
popa
out
test
inc
fldenv
outsb
push
enter
dec
mov
imul
jge
cmp
cmp
out
or
les
mov
sbb
enter
jb
xor
sarb
lock
or
lcall
sub
fstp
rolb
sub
sbbl
insl
jmp
insb
push
push
lahf
pop
cmp
dec
mov
sbb
movl
pop
pop
cmc
sti
lock
lock
add
adc
pop
lods
xchg
sub
inc
lods
les
bound
push
dec
es
mov
and
and
xchg
pop
push
cmp
sbb
xor
dec
shll
inc
lahf
add
or
les
sahf
inc
and
xchg
call
sub
adc
jb
add
mov
clc
and
pop
mov
mov
rcrl
push
and
mov
stos
mov
test
fmul
jp
pop
and
ret
int3
addl
add
adc
fstps
test
push
and
sbb
lds
cmp
movsb
cwtl
stos
and
add
and
loopne
jnp
xchg
pop
mov
sub
xor
and
movsb
adc
sbb
add
in
cmp
movsl
push
out
and
push
test
idivb
push
inc
mov
or
xchg
bound
pop
popf
fdivp
stc
and
fstl
daa
int3
sbb
mov
cmpsl
mov
popf
mov
ss
mov
cmp
loop
cwtl
outsl
out
and
pop
push
dec
xchg
or
or
xor
es
sbb
repz
mov
mov
and
adcb
xor
daa
out
sbb
pushf
push
inc
add
pop
repz
xor
and
dec
ljmp
mov
push
xchg
add
out
mov
sbb
pop
or
popl
jge
int
shlb
mov
in
xchg
push
cli
xor
lahf
cmp
and
leave
call
jl
add
movsb
jne
jb
shlb
mov
fs
sbb
and
cli
pop
xchg
push
int3
and
data16
bound
mov
and
decl
xchg
testb
int3
and
mov
fcomi
pop
cmpsb
and
pop
in
jp
int3
add
int
fsincos
xor
fnsave
mov
mov
and
out
sbb
push
in
pop
filds
and
scas
aas
xchg
aad
dec
and
popf
xor
and
pop
xchg
mov
add
xchg
mov
popa
mov
mov
and
insb
sti
loopne
and
push
cmpsb
sub
test
cmp
or
mov
daa
pushf
sub
sub
pop
rolb
xchg
and
sbb
and
push
or
movsb
mov
outsl
cmp
add
jbe
and
and
cmpsb
subl
or
test
in
push
imul
add
sub
dec
and
adc
jp
dec
push
imul
sub
imul
int3
mov
mov
jne
mov
cld
dec
shll
pop
cmp
ffree
jne
xchg
outsl
lea
dec
iret
lock
push
pop
mov
add
and
out
hlt
shlb
iret
and
adc
cwtl
movb
in
and
pop
jbe
and
das
shl
mov
inc
mov
sub
mov
dec
lret
and
aaa
cmpsl
cmp
arpl
mov
sbb
cwtl
mov
aam
fnsave
and
pop
cmp
loop
addb
and
fs
inc
jmp
sub
test
add
dec
push
sarl
std
and
pusha
cmp
scas
mov
adc
cmc
rorb
loope
and
lahf
outsb
fcmovnb
addl
inc
mov
popa
cmp
push
ss
idivl
adcb
push
fisubs
mov
inc
jge
sbb
push
and
lret
jb
enter
test
fsubrl
not
nop
out
push
mov
jp
std
mov
and
cmp
cmp
or
inc
jns
sbb
or
je
inc
and
mov
jle
push
mov
and
cmc
sbbl
mov
inc
pop
pop
pushw
and
cmp
and
sub
sbb
es
in
or
mov
dec
push
lcall
and
ljmp
pop
and
fcomps
and
mov
sbb
lods
icebp
leave
fs
lcall
enter
ret
sub
inc
cmp
add
cwtl
cmp
mov
into
in
in
aaa
aam
mov
pop
mov
leave
sub
in
adc
pop
pop
cmp
ret
and
mov
aas
jae
cmp
mov
movsb
out
push
pop
ror
and
adc
mov
mov
and
aam
into
out
sub
mov
add
scas
rcr
jg
out
jecxz
cld
and
loopne
dec
xor
jmp
jno
les
and
insb
add
mov
and
jp
add
dec
dec
lret
sub
inc
stos
or
inc
iret
enter
jae
int3
fsubl
rorl
cmp
and
mov
and
into
bound
pop
sahf
and
fwait
in
or
arpl
cmp
push
mov
inc
cld
or
or
in
push
or
mov
popa
push
aam
into
mov
ds
push
adc
and
outsl
fnsave
mov
sub
repnz
and
faddl
out
cltd
adc
xorl
jb
and
ja
aaa
and
ret
aas
push
xchg
cmpsl
push
jbe
mov
sbb
or
pop
and
xchg
shll
fbld
jge
movsl
aad
push
jp
popf
xor
loop
sbb
movsb
insb
and
or
jge
fcoms
xor
lods
cmpsb
and
popa
mov
pop
inc
xchg
out
cmpsl
pushf
add
and
daa
and
push
or
and
pop
dec
in
outsl
xor
movb
or
pop
ljmp
dec
mov
and
xorl
mov
gs
and
cmp
push
pop
lahf
sbb
xor
inc
fs
mov
lcall
adc
jecxz
and
popf
mov
in
mov
mov
and
and
or
push
add
jns
inc
ret
and
adcl
adc
fldenv
or
call
insl
and
adc
stos
daa
cmp
and
test
arpl
mov
lods
sbb
jb
nop
and
mov
gs
pushf
in
cli
in
mov
and
dec
push
lcall
imul
sbb
ds
in
xor
lret
cmp
inc
mov
adc
adc
movsl
stc
dec
ret
mov
mov
lret
repz
lcall
and
dec
lea
int
cmp
lcall
and
out
popa
mov
add
pop
cmp
inc
popf
bound
xchg
and
and
ljmp
imul
ficoms
sahf
ret
and
inc
xor
out
filds
and
les
jge
pop
adc
loopne
lds
dec
jp
sbb
in
sub
push
rcr
fsubl
rclb
das
out
es
hlt
lea
sub
in
fsubl
xchg
dec
jae
lahf
dec
ret
mov
rorl
popa
mov
dec
push
lcall
jecxz
inc
sbb
into
loop
xor
pop
lods
les
not
mov
push
jp
stos
loope
mov
loop
cmp
in
sbb
ds
mov
jge
test
cmpsl
xor
rcr
sub
imul
sbb
mov
fldt
mov
pop
test
and
jp
mov
ja
cmpb
cmp
into
rcrb
jns
int
cmpsl
push
test
cmpsb
pop
cmp
repz
frstor
push
das
cs
int3
push
mov
loopne
fstl
es
arpl
jl
sahf
mov
sbb
pop
loop
repz
jecxz
cmpxchg
mov
rolb
inc
fildl
ss
jb
fldcw
aaa
imul
enter
pushl
sbb
xchg
dec
mov
mov
jp
gs
ret
dec
fisttpl
jp
mov
and
movl
pop
jle
xchg
data16
inc
rcll
enter
lock
test
repz
popa
sub
and
out
push
pop
mov
cs
lds
push
ret
jno
pusha
repz
or
aaa
icebp
sbb
mov
std
dec
xor
mov
and
inc
lds
push
cld
fbld
jecxz
xchg
sub
pop
pop
rcll
xchg
inc
imulb
repnz
push
mov
inc
lahf
aam
or
mov
cmc
sub
xchg
xchg
pop
lds
and
shr
mov
pop
jp
sti
scas
fisttps
xchg
insb
bound
mov
jae
and
movsb
gs
push
repz
rorl
mov
inc
pop
loope
sub
jge
stos
cmp
out
aas
mov
int3
or
repz
sbb
fs
inc
inc
outsl
jne
jb
ret
inc
inc
and
ja
sbb
fistpll
jne
icebp
mov
test
aad
adc
xchg
sahf
addr16
stc
xor
or
nop
jbe
xchg
lret
adc
aad
mov
test
enter
adc
inc
daa
inc
stc
popa
jge
sbb
push
xor
inc
push
test
cmc
jbe
sar
inc
outsl
jb
inc
enter
sub
and
cmpl
cld
inc
xchg
pusha
out
add
xchg
push
int3
test
push
jg
push
std
cltd
shrb
fdivrl
cmp
ret
add
aad
fwait
push
xlat
es
jno
test
xlat
inc
and
or
loopne
ss
iret
arpl
ret
leave
xchg
cmp
popa
sub
pop
test
loop
jne
push
shll
dec
je
adc
and
mov
cli
outsb
adc
push
mov
fsubl
clc
cmp
sahf
in
push
sbb
inc
pop
fsubrs
dec
fmul
push
arpl
bound
cmp
jae
dec
add
ss
cmpsb
popa
ljmp
fs
aas
icebp
aaa
cmp
fs
mov
cmp
add
xchg
les
fs
inc
sub
xchg
lods
cli
jns
cmp
fisttps
pop
shl
adc
xor
les
cltd
and
mov
sub
dec
adcb
stc
jnp
dec
xchg
cld
lret
jmp
adcb
popa
inc
push
addb
pushw
movsl
or
push
push
xchg
sbb
pop
daa
jecxz
add
jg
daa
cmp
pop
int3
dec
sbb
sub
mov
jne
int
xchg
mov
cmc
jle
lock
shlb
mov
sub
push
inc
mov
inc
and
mov
cmp
jns
mov
sub
mov
aad
das
inc
addb
jl
xor
xchg
popf
adc
jge
jge
es
pop
ljmp
jle
jne
xor
add
fimull
push
push
in
das
or
imul
dec
push
xchg
test
sub
cmp
sbb
fsubrp
dec
mov
or
loop
scas
pop
pop
xor
ljmp
rcrl
ss
push
in
adc
jnp
mov
cmc
fisubl
fdivrl
add
in
pop
xor
push
imul
popa
movsl
lahf
fidivs
leave
lods
mov
xor
out
out
les
sbb
sub
cmp
push
xchg
rcr
mov
fiadds
in
sub
jbe
mov
pop
cli
stos
sti
and
jo
adc
inc
pusha
cmp
sub
enter
ret
xor
cmpsb
stc
push
bound
sbb
andl
shl
and
mov
int
inc
jg
sbb
push
adc
jns
mov
daa
into
jae
sub
out
andb
pop
in
stos
repnz
popa
imul
enter
xchg
xor
xchg
clc
insl
sbb
sbb
rcrl
dec
enter
aas
fwait
push
jno
jmp
lods
pop
inc
pop
mulb
les
xor
aaa
dec
inc
mov
inc
pop
jns
dec
cmp
inc
aad
sub
out
popf
movd
push
push
mov
sahf
add
inc
push
pop
mov
popa
pop
aam
arpl
lret
rolb
inc
push
and
push
test
jle
aaa
cmp
outsb
sbb
imul
pop
lahf
jmp
jbe
fwait
ror
xchg
je
lds
sub
js
ficompl
sub
and
insb
outsb
mov
pop
push
xchg
in
mov
mov
out
sbb
push
lahf
add
and
lret
mov
push
inc
and
push
sub
pushf
mov
sbb
jge
sti
rolb
xor
push
push
pushw
loope
sub
and
dec
ljmp
pop
mov
sub
enter
cld
cmp
adc
sub
adc
jbe
pop
and
add
adc
mov
dec
xor
shlb
push
fiadds
dec
dec
add
mov
mov
sbb
jg
icebp
or
push
xor
and
xchg
push
sbb
movsb
repnz
mov
push
aas
stos
hlt
ret
and
lock
loop
dec
jmp
popa
ds
pop
bnd
cmpsl
enter
je
jg
inc
mov
pop
cmp
pop
inc
dec
loopne
xor
adc
push
stos
lahf
cmp
sub
aaa
in
inc
ret
push
inc
cmpsb
cmp
pop
sub
sub
enter
mov
iret
cld
cmp
add
xchg
inc
jno
xchg
push
loope
sbb
mov
ss
in
aam
aaa
jg
and
bound
aas
loop
repz
mov
sbb
sbb
ss
mov
push
pop
repz
clc
and
lahf
dec
or
push
xor
out
fbstp
jmp
xor
add
loope
cwtl
dec
les
stc
add
jns
inc
icebp
inc
adc
mov
ret
push
shlb
push
xor
sbb
inc
xchg
pushf
nop
inc
push
inc
loope
inc
dec
enter
and
push
lods
inc
insl
xchg
mov
fsubs
rclb
pusha
lret
in
stos
arpl
les
sub
imul
fwait
jo
ret
daa
repnz
scas
je
and
je
inc
les
lds
pop
pop
inc
jmp
loope
jge
cmp
cmp
out
push
adc
test
mov
cmpsl
dec
jae
ds
stos
dec
xor
or
and
shll
and
popf
push
dec
push
sarb
push
sti
xor
loopne
lea
inc
push
adc
bound
sub
sbb
cmpsb
sub
or
xor
or
mov
ret
subl
xchg
pop
bound
cwtl
shll
mov
popa
aad
dec
add
add
pop
inc
pusha
inc
cmpsb
enter
mul
adc
push
mov
imul
fmull
cltd
xchg
mov
cmp
out
cltd
int3
pushf
fldcw
sub
mov
mov
jns
xchg
mov
xchg
sbb
push
aam
mov
call
pop
movsl
pop
inc
daa
outsl
in
cwtl
sub
mov
insl
add
fbstp
adc
pop
je
sub
imul
xlat
adc
pop
test
outsb
inc
cld
add
fstl
ljmp
mov
inc
cmp
cmp
and
push
aas
pop
and
cmp
pop
cmp
inc
lahf
popa
and
xchg
stos
daa
sub
and
inc
dec
cmpsl
pop
in
mov
jmp
lahf
stc
aam
scas
adc
mov
fldcw
xor
mov
test
movsb
les
fdivs
mov
jbe
inc
dec
pop
cwtl
push
and
cmp
xor
push
mov
sub
mov
setb
cmp
movsb
jae
cmp
nop
fstpt
adc
frstor
and
in
xor
xchg
addb
das
sub
and
mov
call
sbb
mov
pop
cmp
lret
and
cmpsb
inc
inc
jp
addl
lods
sub
enter
movsl
std
pop
adc
jmp
and
fistps
or
fistpll
sub
fs
mov
fwait
push
insl
mov
out
inc
mov
or
xlat
mov
inc
ret
mov
enter
and
hlt
xchg
adc
insb
mov
js
imul
sub
mov
push
imul
mov
arpl
pusha
fidivrs
and
xchg
add
sub
lods
push
xchg
and
fwait
iret
dec
lea
xchg
roll
sbbl
mov
or
push
dec
dec
inc
pop
pop
test
mov
xchg
sub
movsb
leave
pause
inc
mov
les
cmp
jge
ss
mov
mov
mov
inc
or
inc
mov
pop
xchg
sub
xchg
vphaddbd
cmpl
jns
or
cli
mov
pop
sub
mov
inc
pop
mov
mov
nopl
stc
add
int3
fs
and
xchg
jne
mov
adc
cmpsl
stos
roll
adc
enter
int
jnp
and
jnp
mov
push
and
sbb
xor
js
pop
fs
loop
jge
push
fnstsw
mov
into
cmpb
test
cmp
jnp
sub
push
jno
xor
aad
lock
shlb
fstl
jno
jno
push
lahf
dec
dec
add
imul
mov
jge
add
xlat
imul
leave
xor
mov
pop
push
and
sub
pop
sub
les
ret
sub
pop
fld
dec
and
mov
js
rcll
push
inc
cs
and
fidivs
fdivs
inc
xor
sub
jbe
subl
in
call
add
nop
and
arpl
lcall
stc
mov
or
shr
inc
pop
mov
into
dec
int
jno
push
mov
test
mov
hlt
and
out
rcl
aaa
icebp
pop
leave
xor
imull
inc
xchg
lret
sbb
out
cmp
xchg
push
mov
inc
inc
loopne
xor
pop
cmpsb
sub
dec
add
aaa
jl
mov
inc
ret
das
fwait
push
in
ret
outsb
call
push
inc
jg
mov
fs
std
add
ja
in
call
sbb
repz
lcall
mov
pusha
repnz
int3
imulb
mov
shll
int3
test
add
ret
lock
enter
sbb
mov
xor
sbb
in
mov
pop
xor
adc
xchg
imul
imul
xlat
enter
inc
out
mov
adc
pushf
jne
daa
and
out
mov
push
xchg
xchg
je
push
mov
pusha
xor
mov
and
mov
shll
xchg
test
and
jge
andb
in
mov
push
mov
xchg
repz
inc
and
faddl
jle
enter
imul
mov
add
xchg
xchg
mov
and
lret
icebp
sub
xor
mov
mov
pop
mov
mov
fbld
xchg
rcll
cwtl
jge
cwtl
jecxz
inc
jno
repz
dec
das
pop
mov
fiaddl
insb
sbb
jb
testb
pop
pop
or
imul
add
sub
dec
daa
cld
or
xor
jbe
or
test
daa
lock
in
pop
mov
and
stc
lcall
inc
push
xlat
push
lret
sbb
dec
enter
and
mov
sub
cmp
xor
sar
dec
jno
xchg
push
sti
imul
xor
dec
into
mov
test
aam
inc
ret
out
cli
int3
loope
mov
jno
mov
rorb
pop
and
test
mov
push
xor
rorl
cwtl
jnp
inc
dec
and
mov
inc
lds
mul
push
sarb
pop
or
enter
jo
fwait
mov
inc
add
cmpsl
enter
aaa
jmp
xor
push
sarl
leave
sub
and
push
insl
jp
popa
in
aaa
xchg
data16
pop
xchg
cmp
adc
loop
lcall
ljmp
in
andl
jns
imul
rorl
mov
xchg
xchg
cmp
pop
mov
bound
gs
inc
xor
inc
or
xor
lret
dec
mov
outsl
push
out
or
xor
push
enter
and
pop
cmp
lahf
lods
push
and
or
data16
xor
shl
add
dec
adc
stos
or
pop
dec
leave
add
adc
jle
xchg
cmpsb
inc
mov
sub
inc
mov
lahf
rcrb
mov
mov
cmp
push
adc
xchg
cmc
in
sub
in
test
xchg
scas
xchg
and
mov
jle
cltd
les
in
xlat
and
ret
outsb
lods
inc
nop
insl
enter
outsl
sbb
cld
jns
mov
out
ret
add
and
cmpsb
loopne
jne
ret
mov
dec
push
add
iret
std
add
inc
inc
inc
xchg
push
ljmp
push
xchg
push
pop
mov
movsb
mov
lds
push
jae
and
ja
lahf
sti
add
ljmp
xor
push
mov
rdmsr
sahf
dec
jae
mov
and
push
adc
lock
cmp
and
shlb
jno
lret
mov
lgs
call
cmp
xchg
insb
ja
and
ret
loopne
push
arpl
pop
es
inc
mov
insl
outsb
insl
imul
cmp
inc
enter
mov
adc
cmp
cmp
lahf
sbb
jl
xlat
test
pusha
jecxz
lahf
and
dec
jg
call
insb
add
mov
inc
repnz
mov
jnp
ret
aad
ficompl
jle
push
cltd
enterw
pop
stos
xchg
inc
jge
in
loopne
jge
pop
jl
ds
xor
loop
jns
xlat
ljmp
test
and
and
and
je
in
in
add
pop
jns
sahf
jle
scas
cmpsl
pushf
mov
loopne
out
hlt
rol
in
or
mov
add
push
arpl
cmp
jbe
mov
xchg
xlat
inc
pop
dec
add
movsb
add
ret
mov
xchg
out
pop
into
xchg
enter
es
sahf
mov
insb
cmp
dec
pop
push
out
dec
xor
ja
fcmovb
mov
icebp
mov
movl
ret
bound
jmp
mov
jmp
dec
or
mov
shlb
add
or
js
lods
and
lahf
lret
pop
lea
lds
pop
push
mov
or
fidivl
popa
sub
popa
xor
arpl
sbb
mov
push
add
push
lahf
push
push
or
dec
test
cmp
mov
or
popf
in
and
xor
test
lcall
pusha
in
mov
jnp,pn
iret
cmp
aaa
je
dec
jno
lock
and
mov
xchg
in
enter
mov
test
mov
push
clc
lock
add
push
lret
cmpsl
or
jnp
shl
repz
and
int3
adc
mov
xor
mov
movsb
inc
aaa
in
or
scas
adc
fcomip
mov
dec
push
jo
cwtl
stc
movsl
pop
lds
jnp
popf
dec
inc
add
loop
xor
shr
dec
repnz
mov
imul
fcmovnb
and
jle
ds
fsubs
add
mov
dec
outsb
fsubs
pushf
push
xchg
dec
lahf
out
loopne
addl
push
xchg
ficoml
add
in
cmpsb
pop
cli
and
aas
jbe
call
daa
and
data16
addl
js
dec
xchg
jl
cli
mov
adc
sbb
scas
sub
push
cmp
sbb
pop
popf
insl
insl
repz
add
aam
pusha
out
mov
movsl
jbe
jge
jbe
mov
push
sub
mov
orl
mov
insb
shlb
daa
sti
push
inc
cmp
into
jno
mov
pop
out
int
test
loop
cmp
imul
rcl
add
fldenv
test
or
ret
ret
sbb
addr16
sub
addr16
pop
xor
xor
jno
js
ss
adc
jbe
data16
fdivrp
jb
cltd
stc
jl
jnp
int
inc
mov
cwtl
nop
mov
test
ja
pop
popa
mov
pop
das
icebp
dec
cs
popa
fcmovnb
mov
scas
add
mov
mov
jb
cmc
shll
inc
mov
and
pop
lret
mov
or
pop
jo
daa
in
std
pop
addb
ret
setp
mov
pop
out
push
stos
cmp
xchg
cltd
or
test
cmp
in
mov
pop
xchg
mov
inc
push
xor
cs
insb
add
pushf
jl
and
lret
pop
sahf
stc
jp
leave
inc
ret
lcall
pop
pop
cmpb
xchg
rcr
push
lods
dec
pop
jg
mov
sub
pop
movsl
cmp
mov
setae
jae
cltd
ds
fstps
mov
push
add
dec
push
push
pop
rcrl
cli
or
xchg
sti
pop
dec
les
add
leave
cltd
xchg
clc
fcmovnu
shrb
cltd
lods
or
in
sbb
xchg
jae
inc
sub
fldcw
and
rclb
mov
ret
js
pop
or
pop
or
mov
pop
shll
cmp
pushf
loope
cli
add
dec
xchg
fmull
mov
hlt
jge
sub
lcall
mov
cmp
xchg
idiv
adc
xchg
inc
and
test
fwait
push
dec
sub
cs
mov
sarl
push
xor
cmpsl
xchg
shrb
fs
push
outsl
add
cmp
cmp
call
cmc
neg
jmp
movw
pushf
call
movl
pushf
jmp
ffree
mov
lods
jbe
fmul
xchg
jecxz
xor
inc
sbb
adc
mov
repz
add
mov
add
and
test
pop
mov
scas
fldenv
and
and
pop
pop
mov
ss
jl
in
sbb
jmp
dec
mov
cmc
scas
xor
lock
mov
cld
dec
xlat
jbe
test
jl
shlb
adc
test
lods
add
cmp
pushf
lea
jmp
add
inc
js
je
jb
arpl
jae
outsb
or
pop
xor
stos
xchg
fmulp
scas
stc
rorb
test
lret
lds
sbb
mov
cltd
test
lcall
push
repnz
arpl
aad
ret
lods
xchg
pop
and
sbb
pop
pop
popa
push
xchg
test
push
mov
out
adc
mov
mov
and
xlat
stc
mov
cltd
jmp
push
call
cmp
dec
jb
mov
lea
popf
in
add
xchg
clc
mov
xchg
fidivs
ljmp
cltd
xchg
hlt
lods
nop
popa
cld
clc
cli
fld
sbb
or
out
pushf
gs
lods
outsb
mov
mov
outsl
in
xor
ret
neg
std
pop
lock
or
inc
inc
jae
cli
repz
push
mov
xor
subb
call
and
stos
sbb
add
jo
pusha
jmp
xchg
pushf
in
out
sub
movsb
popf
idivl
imul
clc
or
mov
in
mov
daa
imul
xor
xchg
push
aad
aad
ljmp
inc
daa
pop
jle
imul
sub
or
xchg
xor
mov
test
in
or
or
fldl
push
xchg
sbb
nop
fsubrs
clc
fadd
test
aas
jmp
sti
ret
cs
push
gs
in
hlt
mov
insb
push
mov
nop
inc
xchg
jno
inc
scas
shlb
aad
xchg
das
dec
or
push
or
xchg
xchg
adc
scas
sbb
mov
cmp
add
ret
or
xor
or
and
imul
push
mov
movsl
lahf
popa
repnz
aaa
ret
inc
mov
in
dec
ret
ret
subl
js
lods
and
mov
inc
sub
js
mov
mov
aad
cmp
mov
mov
sbb
sti
ret
imul
adc
fisubs
inc
leave
in
sahf
in
aam
inc
lret
xchg
clc
sub
dec
mov
aaa
mov
call
push
push
out
xor
jle
lock
icebp
xchg
mov
cmp
pop
rolb
pop
cmpsb
xorb
es
and
mov
mov
rol
shr
sub
inc
shld
test
sar
mov
call
test
pushf
out
cmp
or
sub
xchg
adc
push
cld
hlt
mov
fimull
ret
cmp
adc
push
add
jmp
shrb
xlat
jg
xchg
int
mov
insb
aaa
das
stc
sbb
into
jp
and
xchg
cmp
jge
push
in
rclb
dec
movsl
sub
jbe
insb
and
pop
call
mov
lret
wrpkru
dec
mov
xchg
mov
fxam
lods
xor
fwait
in
xchg
les
or
fldl
clc
mov
cmp
hlt
xor
psrlw
outsl
mov
lods
pop
push
mov
dec
mov
test
in
dec
sub
adc
mov
cltd
rclb
mov
cld
fimull
cmp
data16
decl
mov
adc
adc
jae
adc
leave
das
inc
pop
test
es
insb
js
loop
das
js
test
mov
lret
mov
xor
sub
xor
push
lcall
outsb
inc
xor
hlt
aam
movsb
lods
mov
cmpl
inc
mov
jmp
and
push
cs
add
mov
mov
or
lods
ja
test
hlt
fs
je
cwtl
sub
bsf
bsf
shr
mov
movsbw
cmc
stc
mov
ror
btr
shr
mov
seta
and
jae
mov
bt
cmp
clc
cmp
or
jmp
lock
popa
lcall
cs
xlat
mov
adc
jl
lahf
inc
inc
test
inc
pop
mov
dec
pusha
adc
mov
pop
sarb
data16
xor
outsl
jle
lods
mov
mov
mov
pop
into
xchg
mov
aad
jge
lea
je
pushf
call
cmp
movsbw
lea
movzbw
mov
movb
jmp
pusha
lea
jb
pusha
test
push
cmp
pusha
lea
jmp
stos
pusha
pushf
lea
jmp
xchg
jg
cwtl
in
cmp
aam
adc
cmp
push
fs
nop
lock
add
repz
dec
sub
push
cli
adc
dec
mov
cmpsl
inc
sub
or
lods
xor
dec
rcrl
pop
push
iret
jge
sub
sub
adc
dec
pop
mov
aam
cmc
jmp
jge
cmpsb
jg
adc
in
push
pop
cmp
cli
add
pop
push
sarl
cmp
lds
push
fisttpll
loop
inc
clc
neg
pushf
mov
pushf
push
dec
push
jmp
push
lea
jae
bsr
shl
mov
mov
shrd
shl
btc
mov
inc
jmp
push
inc
cmp
cmp
jmp
stos
in
jbe
mov
das
and
mov
sti
in
sti
lock
cmp
and
rcl
cmp
bound
dec
lahf
jnp
enter
push
or
popa
ret
cmp
or
dec
lods
jle
cmp
add
inc
out
cmp
pusha
in
inc
or
leave
mov
shll
dec
sub
lods
jo
loopne
jbe
adc
xchg
test
dec
aaa
cmp
mov
outsb
mov
fdivs
jmp
shrb
pop
insb
pushf
pushf
lea
jae
dec
dec
call
lea
xor
stos
mov
or
pop
inc
lahf
add
jmp
pushf
pop
nop
mov
mov
xor
in
rolb
out
outsb
mov
int3
sti
adc
add
push
aaa
sub
inc
mov
call
into
jg
out
fbstp
xchg
inc
rcr
jmp
cmp
sbbl
out
add
fwait
add
rol
mov
xor
ret
or
pop
push
dec
xor
es
jno
pop
xchg
jns
shlb
and
cmp
rorl
pop
push
mov
mov
jne
push
mov
scas
insb
arpl
jns
inc
and
mov
imul
inc
inc
push
push
adc
divb
and
and
add
ftst
scas
xchg
loop
test
sbb
cmp
cmp
fcmovnu
cmp
inc
sbb
in
add
adc
dec
sub
jnp
or
in
push
rcrb
jb
filds
jl
pop
and
iret
add
mov
pop
std
jmp
pushf
inc
jae
mov
popf
xchg
dec
inc
or
cmpsl
imul
insl
pop
sub
xchg
sub
cwtl
sbb
sti
fimuls
call
aam
sub
mov
mov
push
and
subb
fwait
ja
jl
mov
mov
dec
cmpsb
sbb
add
call
xor
jnp
mov
pop
into
cmp
lret
mov
pushf
dec
dec
inc
push
fs
sbb
push
lcall
and
inc
push
adc
mov
mov
clc
cmp
mov
pop
mov
aaa
xorl
loope
dec
leave
imul
dec
popa
aad
adc
mov
sbb
pop
inc
xchg
lahf
inc
imull
and
je
mov
fiadds
js
repnz
fcoml
popf
or
rcrb
add
outsb
cmp
scas
callw
mov
mov
mov
pushf
movl
pushl
ret
mov
movb
pusha
pushl
ret
in
mov
insl
push
mov
sbb
jp
adc
divl
add
test
cmp
pop
mov
inc
sub
push
aas
imul
dec
push
lahf
aam
mov
or
movsb
stc
push
mov
pop
inc
sub
pop
pop
inc
mov
inc
and
fwait
push
stos
mov
out
add
jg
xchg
xchg
lcall
aad
cmpsl
xchg
in
adc
jl
cltd
popf
add
mov
inc
mov
mov
lcall
mov
test
jbe
dec
movntq
mov
ja
mov
test
xor
stos
es
jo
outsl
sbb
xchg
in
repnz
sub
xor
push
adc
adc
pop
mov
pop
and
inc
je
mov
insl
and
ja
or
in
insl
push
mov
out
jecxz
das
jg
pop
push
test
aas
xchg
or
cmp
mov
push
cmp
aam
add
add
test
pushf
inc
add
xchg
mov
jne
xchg
push
mov
cmp
push
test
lahf
xchg
daa
test
jl
test
data16
inc
pop
arpl
daa
or
cmp
repz
lret
push
cmp
gs
pushf
test
mov
or
movsb
stc
loope
mov
pop
sub
adc
dec
add
add
cwtl
enter
fcmove
jns
mov
ret
loopnew
ret
lock
in
xor
pop
scas
xor
addr16
data16
sub
mov
jae
orl
gs
dec
cmp
xchg
adc
mov
clc
pusha
adc
repnz
andl
sti
ss
jmp
jbe
inc
mov
push
in
or
rolb
fstp
inc
and
mov
rcll
inc
pop
add
adc
xor
inc
pop
mov
sub
outsl
push
adc
add
daa
adc
mov
jb
add
imul
addb
div
pop
inc
sbb
in
dec
stos
jge
sub
jnp
pusha
call
shl
sbb
movsbw
mov
cmc
cmc
cmpb
push
pushf
lea
jne
neg
stc
shl
mov
xor
pusha
mov
pushf
movb
lea
jmp
push
lea
je
jmp
jmp
mov
jmp
xchg
aaa
adc
xor
dec
pop
pop
push
test
mov
ds
push
sbb
xchg
repnz
cmp
fsubrs
mov
dec
adcb
xchg
mov
jle
and
inc
dec
das
cmp
clc
ss
add
sub
xchg
sbb
inc
pop
pop
mov
ret
stc
push
negb
popa
xchg
jo
into
stos
int3
jp
lret
aad
cmp
pop
lods
je
addl
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
ret
jmp
movw
lea
je
cmp
pusha
bt
bt
add
bt
jmp
call
and
clc
add
movb
pushf
pushl
lea
jmp
push
mov
xchg
in
test
add
inc
mov
push
cmpl
push
out
cmp
out
inc
mov
jecxz
sub
mov
and
mov
cmc
sub
mov
pop
into
sub
adc
pop
popf
pop
std
xor
popf
and
pop
int
adc
cs
sbb
mov
in
mov
out
and
mov
nop
in
inc
push
test
test
xchg
pushf
add
mov
sbb
out
mov
shr
sbb
loop
and
push
inc
lods
dec
orl
sbb
jo
sbb
movl
or
sbb
add
dec
mov
std
push
lock
jmp
aaa
setle
inc
lret
out
aam
inc
sub
push
fwait
push
xchg
lcall
inc
test
adc
jae
inc
stos
jge
jnp
out
nop
xchg
jp
sub
in
mov
xchg
and
dec
and
jmp
outsl
lods
mov
mov
jnp
int3
and
push
cli
xor
inc
add
es
rcrl
push
imul
jb
cmpsl
and
pop
pop
sbb
xor
test
inc
add
pop
add
xor
dec
jns
nop
adc
and
push
xchg
jge
add
push
movsb
clc
insl
loope
sub
cltd
push
imul
pop
and
movsbw
mov
lea
movsbw
mov
movzbw
call
pop
daa
lock
in
inc
mov
mov
shll
test
mov
add
or
inc
inc
jnp
repnz
adc
sbbb
enter
sbb
loop
add
inc
dec
inc
rcr
xadd
inc
ficomps
jb
dec
aam
outsb
loope
imul
push
jmp
bound
mov
mov
cmp
sahf
jle
shlb
loopne
repnz
push
in
idivb
cmp
sbb
xor
pop
mov
xchg
pop
mov
cmp
inc
popf
or
shrl
or
adc
push
fstpl
popa
or
mov
daa
inc
orb
lock
and
es
enter
jecxz
dec
push
and
pop
clc
inc
sub
jne
cmpsl
jmp
jle
repnz
inc
sbb
inc
mov
mov
sar
jae
add
popf
popa
aaa
loopne
in
pop
add
dec
sbb
neg
xor
sub
jbe
sbb
jns
xchg
int
loop
xor
adc
shlb
outsb
push
inc
sbb
inc
sub
pop
lea
loop
nop
out
mov
out
std
jle
dec
nop
push
push
js
shrb
xor
ljmp
cmp
mov
insb
push
xchg
xlat
movsb
jae
in
roll
mov
shlb
fcmovu
sub
xchg
out
xchg
pop
sub
scas
imul
xor
jmp
push
xchg
rcll
out
cltd
and
mov
fcmovne
mov
jo
jns
sbb
pop
jle
out
mov
aaa
inc
cmp
test
dec
push
in
mov
cs
push
xor
add
dec
sbb
or
mov
xchg
pop
fstpl
int3
and
sti
dec
mov
js
pop
pop
out
mov
jo
adc
pushf
and
mov
dec
mov
add
insb
or
movsb
in
dec
aam
aam
cmpsb
outsb
push
dec
mov
jg
mov
adc
xchg
push
fisubs
insb
inc
cmpsb
xchg
clc
loop
jg
xor
inc
dec
xor
add
push
xchg
xchg
adc
rcrl
mov
mov
xor
aas
repz
mov
push
mov
lcall
popa
xor
or
das
cmp
icebp
ja
add
adc
loopne
mov
jnp
out
dec
dec
add
decb
rcr
mov
clc
add
cmp
mov
pusha
mov
cmc
bt
test
mov
pusha
jmp
fscale
sbb
push
xor
pop
shrl
jnp
sub
fisubrl
mov
fwait
lret
scas
cmpsb
imul
cs
mov
inc
push
ret
cmp
js
adc
fimull
sarb
mov
and
repz
push
test
xorl
add
sahf
push
fs
test
sbb
fidivrs
aam
lcall
sub
xchg
sbb
daa
pusha
jmp
shrd
seto
bsf
mov
call
movb
lea
ja
jmp
mov
pushf
leave
stc
inc
xchg
js
cmp
lcall
push
insl
out
js
and
sub
scas
push
add
test
jbe
insl
hlt
out
inc
aad
das
jbe,pn
rcrb
mov
pop
push
adc
adc
stos
inc
fwait
dec
mov
inc
call
and
cmp
jg
rcr
imul
pop
add
orb
push
loope
jno
mov
bound
or
mov
and
rorb
pushl
movl
call
movl
pushf
pushf
movl
lea
jmp
fimuls
mov
pushf
or
int3
cwtl
cmc
push
xchg
outsl
pop
roll
movq
xor
mov
into
in
add
loope
in
sub
mov
xchg
cmp
jns
cmp
push
lds
xchg
test
lock
cmp
inc
loope
lea
jne
pusha
stos
movb
mov
lea
jmp
dec
or
in
hlt
inc
and
pop
arpl
xor
cwtl
outsl
mov
orb
xor
xchg
lahf
out
push
sub
jno
mov
je
jne
ficompl
cmp
insb
cmp
sub
sti
test
jecxz
in
xor
sbb
psllq
jge
fistpl
stc
int
rcl
pushf
cmp
jle
jnp
mov
cltd
daa
outsb
mov
mov
dec
push
push
xor
popa
movsl
fiadds
outsb
in
clc
cmpsl
push
outsb
fnstsw
repz
push
loope
lods
mov
inc
cmp
insl
negb
cli
jnp
mov
xchg
jbe
icebp
mov
add
dec
push
xchg
mov
pushf
inc
or
fnstcw
mul
push
orl
jle
xchg
adc
sbb
mov
adc
loope
mov
movsl
mov
mov
xchg
cmp
enter
pop
mov
out
std
jge
div
xor
outsb
out
mov
ss
outsb
into
mov
iret
cli
adc
pop
pop
jns
dec
mov
aas
adc
mov
and
pushf
das
lret
ljmp
repz
xchg
lock
into
mov
add
stos
sahf
push
roll
pop
int
stos
mov
xor
xchg
repnz
push
push
sbb
jae
push
pushf
movl
pushl
pushl
popl
pushl
pushf
push
pushf
pushl
ret
push
cmp
call
not
cmp
call
shld
or
mov
ror
neg
add
shr
mov
cmc
repnz
pushf
call
cs
pop
mov
pushf
pop
nop
stc
mov
and
adc
daa
sbb
outsb
dec
shl
cmp
xor
nop
lock
jno
add
sub
xchg
mov
es
loope
daa
out
add
in
testb
arpl
iret
cmpsl
mov
ret
cmp
lods
cmpsl
stos
sbb
imul
dec
mov
cwtl
fcompp
cmpsb
adc
jmp
xlat
add
lret
adc
mov
lea
pusha
movb
pusha
jmp
mov
lea
jbe
inc
rol
sub
xadd
test
lea
mov
jmp
cmp
pushf
mov
test
call
pusha
pushf
stc
sub
test
cmc
clc
pushf
pushl
popl
call
jmp
mov
push
mov
pushf
bound
sbb
rol
jl
xchg
xchg
imul
add
inc
sarb
pop
lds
lret
mov
mov
movsl
lcall
je
mov
adc
sahf
sub
mov
jns
pop
pop
lahf
or
repnz
sahf
dec
mov
cltd
out
cli
mov
cmc
lcall
xchg
mov
enter
jbe
cmp
mov
and
testl
sbb
jg
mov
addl
imul
pop
mov
pushf
mov
js
cmp
mov
ficompl
shll
mov
mov
mov
inc
shlb
mov
hlt
lret
dec
mov
jae
jae
push
into
sub
aas
pop
jbe
mov
divb
sub
test
or
cmp
fsubr
arpl
or
xchg
pushf
mov
inc
cmpsb
pop
jecxz
push
addr16
fildll
push
pop
fbld
fadds
pushl
mov
jnp
cmp
inc
jle
mov
push
cmp
add
push
movsb
pop
lea
mov
repz
sub
test
xchg
mov
fcoml
push
add
jg
fstpt
call
inc
fldenv
sahf
andb
adc
mov
add
sbb
popf
mov
dec
adc
mov
jmp
mov
or
dec
data16
mov
int3
insb
xorb
xchg
js
xchg
sbb
in
add
push
or
stos
aaa
xchg
jo
ret
mov
mov
sbb
push
mov
pop
jns
mov
andb
test
lea
je
cmp
cmp
pushf
lea
jno
jne
jmp
call
in
or
out
push
or
mov
ss
loop
ss
jmp
push
jnp
cli
inc
inc
mov
xchg
xlat
arpl
xchg
pop
mov
lods
add
out
fimull
lods
ret
dec
rorl
xor
inc
lds
push
mov
or
loopne
jg
push
stos
or
jo
inc
push
jo
pop
xor
insb
pop
push
push
iret
push
imul
nop
in
xchg
pushf
sahf
jecxz
popf
mov
xchg
adc
mov
mov
cwtl
sbb
jae
sarb
xchg
js
gs
and
mov
out
rcrb
cmp
in
sub
iret
imul
or
and
jns
push
pop
mov
arpl
adc
div
insb
test
add
and
ffree
test
add
bnd
jns
aaa
test
pop
xchg
scas
outsl
in
dec
mov
data16
xchg
loop
mov
movsb
sbbb
insb
ds
int
and
je
stos
divl
xchg
movl
xchg
jl
xlat
mov
lock
cmp
inc
aam
jp
fidivrl
test
pop
sub
sub
cmp
addl
or
outsl
xchg
out
gs
xor
incb
mov
lds
inc
fnsave
cmpsb
rorl
lock
in
test
scas
sbb
inc
aaa
and
cmc
push
loop
jge
pop
pop
aas
cmp
xchg
imul
jp
into
or
inc
mov
loop
test
sbb
out
lock
pop
cmp
adc
dec
lds
sbb
and
mov
mov
xor
xchg
lock
xor
cmpsl
out
fdiv
rclb
fldcw
dec
pop
shrl
add
adc
ficompl
or
inc
or
mov
jno
mov
sub
inc
lock
pushf
pushf
pusha
lea
jae
jmp
push
hlt
push
test
pushf
loopne
and
dec
cwtl
jbe
aas
xchg
test
mov
lods
sbb
cs
cli
add
sahf
test
mov
outsl
cmp
jb
in
add
push
mov
inc
shlb
xor
daa
mov
mov
xchg
sub
mov
xor
sti
and
fwait
push
xchg
mov
rcrl
mov
jle
dec
push
andb
jp
repz
js
mov
pop
leave
test
aas
jmp
into
lods
lahf
jmp
lea
je
jmp
mov
push
lea
lea
pushf
jmp
and
das
das
cmpsl
mov
inc
and
mov
fucomp
ficompl
mov
addr16
or
aas
into
mov
xor
mov
enter
mov
jecxz
mov
xor
sarb
dec
scas
adc
outsb
push
mov
dec
loope
mov
ffreep
fisubrl
dec
sub
mov
test
push
mov
hlt
jge
jp
push
cmpsl
je
aas
mov
cmp
dec
int3
cs
mov
push
and
loope
test
aad
lahf
jbe
call
sbb
aaa
fcmovu
aad
les
outsl
mov
mov
in
sub
sub
std
pop
pop
push
pop
jg
cwtl
movsb
test
fpatan
inc
mov
and
xchg
icebp
shrl
add
adc
add
jmp
jmp
xchg
je
and
push
or
push
cmp
js
or
lret
mov
jecxz
outsl
dec
rolb
xchg
push
cmp
push
adc
cmp
scas
push
popa
dec
psrad
andl
cmp
mov
lods
mov
in
inc
xchg
into
push
xchg
cmpsl
cwtl
je
in
jge
cwtl
sub
in
or
fwait
cli
add
mov
xchg
jg
cmp
dec
pop
mov
xchg
out
lret
psraw
mov
gs
ds
mov
and
lea
je
pushf
clc
add
clc
stc
cmp
push
jmp
mov
cwtl
and
pushf
jecxz
mov
mov
mov
fldt
xlat
push
leave
jp
mov
bound
aad
ret
pop
or
les
int
mov
mov
out
test
mov
lods
sbbl
xor
cmp
mov
mov
scas
jb
roll
inc
jno
jns
mov
xchg
mov
in
push
enter
adc
sbb
lcall
testl
daa
lock
imul
jb
sub
cmp
leave
and
and
inc
mov
cli
sbb
jecxz
stos
nop
repz
and
dec
leave
sarb
push
inc
and
or
ss
mov
stc
inc
adc
inc
mov
push
scas
imul
in
in
rcrl
dec
dec
mov
sahf
iret
cmpsl
mov
mov
mov
mov
fcmovnb
inc
call
push
fisttps
out
jge
les
or
out
shrl
push
push
aam
fadds
es
pushf
mov
ja
xor
not
test
sub
lea
bt
shl
add
bsf
mov
not
dec
sbb
or
mov
test
stc
stc
repnz
call
movsl
leave
dec
and
out
mov
sub
stos
scas
adc
in
ja
rorb
inc
jo
mov
adc
fcomp
out
mov
mov
xor
shrl
dec
lret
test
mov
add
addr16
int3
mov
stos
jnp
test
mov
jo
imul
mov
int3
mov
cli
jb
jbe
pop
ss
dec
xor
jo
in
stos
xchg
pop
gs
pushf
movb
pushf
jmp
mov
pushf
lret
push
push
outsb
mov
psllq
std
or
mov
push
aam
sbb
cmp
loopne
fwait
ljmp
rcrb
cmp
fdivp
subl
adc
test
fldenv
mov
mov
cld
push
adc
cmp
test
push
cltd
stc
cwtl
lret
arpl
jb
mov
pop
repz
xchg
orb
and
jmp
jle
dec
cltd
or
add
push
dec
inc
inc
jb
insl
push
je
imul
outsl
arpl
inc
jb
gs
inc
clc
add
add
or
mov
bt
pusha
test
cmp
call
add
xor
pushf
test
mov
or
cmp
cmc
inc
stos
lret
ret
addl
lods
jl
xchg
dec
xchg
mov
addr16
imul
out
je
cltd
ja
icebp
mov
adc
or
xchg
fs
dec
xchg
mov
add
mov
cmpsb
xor
xor
push
aam
jno
jge
lock
mov
sub
int3
cmpsl
fsubrp
sbb
ljmp
and
fcmovbe
or
jge
pushf
sub
xor
test
fcoms
sti
pop
add
and
adc
lahf
cmp
lahf
lcall
and
ljmp
inc
jno
push
enter
mov
aam
cmp
mov
and
jle
or
mov
mov
xchg
push
mov
testb
aas
out
add
pop
in
stos
sub
push
dec
sti
rcl
pop
call
jno
inc
mov
pop
dec
mov
or
ss
push
xchg
inc
lds
push
mov
mov
inc
mov
ja
pop
and
in
into
in
add
or
test
mov
es
dec
inc
or
sub
nop
fisubs
out
jne
mov
jns
fs
loop
and
xor
imul
jns
push
xchg
mov
outsl
aas
add
xchg
mov
mov
or
leave
icebp
sub
lods
sbb
stos
jne
mov
jl
xchg
xchg
mov
stos
push
or
stos
jne
jge
lret
xchg
and
loopne
and
bound
cmp
push
cwtl
stos
mov
xor
insb
inc
sbb
fldl
inc
inc
ss
lods
out
sbb
inc
xor
pop
int
dec
pop
push
into
pop
or
cmp
in
ljmp
inc
stos
lods
popf
jno
frstor
imul
into
and
jp
shll
cmc
test
push
call
mov
pushf
stos
neg
scas
add
jne
psadbw
add
inc
rolb
jo
movl
in
mov
out
inc
adc
pushf
push
adcl
icebp
sbb
adc
mov
jb
addl
repz
adcl
pop
popa
push
mov
or
subl
jnp
dec
and
call
mov
out
sub
in
add
movw
push
lea
je
call
call
add
bt
stc
cmp
pushf
pushl
call
pushf
test
call
jp
sbb
lahf
push
int
lahf
mov
fstp
popf
sti
leave
out
sbb
and
xor
aam
lea
mov
sub
inc
xchg
add
xor
adc
mov
xchg
mov
fiadds
cmc
push
int
rorl
or
xchg
and
popf
xchg
or
icebp
pop
pop
stos
cmp
in
or
mov
in
mov
outsl
jge
mov
jp
pushf
roll
push
out
mov
add
scas
hlt
sbb
push
sbb
jae
dec
and
xor
mov
pop
repz
push
imul
mov
cmpl
xor
cwtl
sbb
adc
sbb
push
mov
or
addl
fs
sub
lea
jae
jmp
imul
inc
enter
lock
mov
mov
shr
out
out
dec
loopne
leave
in
add
jns
mov
or
cmp
cld
add
cmpb
jbe
fs
pop
dec
in
push
scas
mov
ret
les
and
ss
pushf
xchg
mov
mov
xchg
adc
inc
subb
psubsw
loop
or
fmull
loopne
cmpsl
sbb
addr16
ss
xlat
sbb
cwtl
lret
add
int
not
mov
lcall
sub
jl
xor
insl
int3
cwtl
jmp
or
inc
or
push
dec
inc
dec
xor
cs
insb
add
jns
add
cli
dec
jp
pushf
out
xor
cmpsb
mov
inc
cmpsl
mov
fcmovb
je
dec
add
jae
mov
mov
js
mov
cwtl
rcll
arpl
sub
rcll
stos
jnp
hlt
and
addb
dec
xchg
push
ljmp
push
clc
popw
das
xchg
stos
fcompl
xchg
mov
jae
or
pushf
test
or
out
and
inc
into
inc
iret
mov
pop
dec
das
sub
jno
in
cmp
cwtl
nop
sub
jb
loopne
popa
xchg
mov
in
jg
adc
push
xor
adc
xrelease
and
push
pusha
cmpsb
out
fstps
pop
ljmp
mov
mov
stc
jo
push
mov
xchg
scas
fistpll
inc
or
call
ljmp
pop
pop
adc
add
add
loopne
fs
mov
aas
test
pop
les
lds
hlt
sti
pop
xor
subl
ret
loop
push
push
dec
sbb
mov
sbb
aaa
sbb
add
lea
jnp
movw
mov
call
setb
btc
neg
mov
pusha
cmpb
pushf
pusha
lea
jne
inc
and
bsf
xor
cwtl
pushf
movsbw
mov
pushf
pusha
pushl
mov
lea
jmp
sarb
inc
js
pushf
pop
push
dec
push
in
out
fwait
pop
stos
sbb
adc
mov
xor
sub
dec
xchg
inc
fstp
push
fwait
loopne
mov
ljmp
pop
jae
mov
dec
sbb
inc
nop
lods
rcll
ficoms
vunpckhpd
out
lcall
in
sbb
mov
repnz
jmp
rcl
or
xchg
jl
sti
add
neg
pop
mov
xchg
test
scas
dec
cmpsb
in
jg
call
or
inc
and
or
add
cwtl
cwtl
lea
call
xor
js
pushf
test
pop
cmp
out
movsb
repnz
mov
mov
dec
loopne
and
jnp
dec
xchg
out
mov
xchg
sahf
rorb
cltd
cs
pop
andb
sub
cmp
mov
push
icebp
std
movsb
xor
mov
xchg
sub
add
in
ret
push
call
test
pusha
add
mov
pop
insl
dec
aaa
sub
add
movsb
and
mov
push
push
jp
sbbl
lea
call
call
inc
bt
call
lea
je
movzbw
xchg
lea
not
movzwl
pusha
movsbw
lea
movzbw
not
call
pusha
bswap
mov
cwtl
lahf
movsbl
lea
pusha
pushf
xchg
lahf
pushl
popl
lahf
mov
pushf
lea
lea
setp
movl
lea
mov
lea
pushf
jmp
jmp
or
push
pushf
call
cmp
jne
pushf
test
jnp
popf
js
cltd
pushl
imul
xlat
sub
pop
cmp
mov
push
scas
pop
aam
test
push
in
jle
xchg
mov
xor
lahf
mov
out
in
push
sbb
push
fimuls
xchg
xchg
icebp
mov
loope
sub
fsubrs
adc
int3
fidivl
pop
pop
mov
sbb
pop
repnz
insb
loop
jnp
aam
mov
mov
das
fcmovbe
sbb
sub
jns
call
xchg
movl
lahf
pusha
movzbw
pushl
popl
bswap
mov
pop
pushf
call
stc
das
call
subl
sub
inc
je
lds
out
test
bound
cld
pop
lahf
sbbb
inc
jecxz
cmpsb
mov
mov
lds
lods
mov
inc
sbb
fwait
dec
cltd
fdivr
xlat
popf
movsl
mov
repnz
rorl
enter
jns
sbb
add
mov
fwait
stos
ljmp
mov
dec
stos
pop
inc
test
lea
repnz
dec
adc
inc
cmpsl
xchg
or
mov
arpl
fld
inc
and
fnstcw
adc
clc
clc
call
lcall
mov
icebp
mov
xor
push
lret
xor
sub
push
cmp
mov
rcl
xchg
mov
je
push
sbb
or
xchg
outsl
scas
fdivr
popf
xchg
pushf
out
aam
mov
fisubrl
jae
push
and
fisttpl
fiaddl
popa
addl
loopne
mov
fiadds
test
in
xor
scas
sub
div
push
and
int3
inc
fldt
xor
push
je
pushf
or
insl
jmp
nop
jbe
mov
mov
or
cld
jmp
jge
mov
cld
push
idivl
cmp
stc
mov
or
and
fcomp
setge
lret
inc
repz
dec
add
lods
mov
mov
pop
fildl
out
jg
cmp
mov
or
inc
outsb
lret
mov
xchg
cmp
into
pusha
outsb
stc
repnz
adc
iret
sub
or
aaa
add
cld
push
cmpsb
mov
leave
bt
test
call
pop
fstpl
in
pop
xchg
sub
sub
aas
pop
mov
out
mov
pop
adc
shrb
hlt
les
gs
lods
push
cmp
or
in
mov
sbb
scas
sub
clc
xchg
dec
mov
fdivrl
pop
iret
sub
jne
mov
jge
jne
lock
jle
adc
test
dec
mov
subps
or
dec
xor
cs
insb
add
ret
pop
cltd
shrl
int
or
adc
ret
xor
fisubrl
xor
pop
call
add
push
jae
pushf
xchg
adc
sbb
hlt
outsl
mov
dec
pop
leave
fsubl
add
sub
jg
xchg
sahf
or
mov
mov
cmp
arpl
outsb
mov
fucompp
aaa
mov
addr16
mov
mov
dec
add
xor
pop
dec
dec
xchg
cmp
add
jg
cmp
arpl
push
pop
push
lahf
sbb
pop
shrl
popf
test
scas
xor
xchg
mov
xchg
sub
pop
push
in
int
sbb
aam
xchg
jnp
sub
pop
andl
push
fmull
jb
pushf
mov
dec
rol
cmpsb
or
movsb
ja
adc
out
and
out
scas
pop
clc
lret
movsl
sub
rolb
mov
xchg
mov
jle
cwtl
jae
xchg
push
push
sbb
loopne
mov
dec
dec
xchg
mov
mov
dec
xlat
ds
fcoml
pop
aaa
out
mov
sbb
dec
inc
or
or
jle
fadd
xchg
inc
push
div
movsl
mov
dec
insb
lcall
cltd
adc
bound
adc
rorl
in
cli
ret
inc
xor
xor
pop
dec
aad
mov
mov
scas
jne
push
push
or
imul
pop
dec
add
dec
xorl
repnz
and
mov
sti
stos
popf
inc
pop
bound
into
sbb
arpl
xor
es
jecxz
leave
dec
mov
jnp,pn
xchg
repnz
ret
repz
and
mov
call
rorb
jae
shrl
sbb
mov
fcmovb
cmp
add
jbe
and
daa
pop
xchg
mov
xor
gs
add
lods
ss
loope
iret
dec
js
jecxz
fsubl
fcoml
dec
push
push
rol
icebp
stos
imul
nop
lea
jle
adc
imul
out
nopl
imul
cmp
and
add
faddl
cmp
mov
pop
sub
add
ss
outsb
pop
in
adc
jno
pushf
jp,pn
mov
dec
pushf
repz
sbb
sub
ss
push
cmp
cmc
sahf
stc
jns
test
cld
and
cmp
js
je
les
inc
insl
sarb
in
pop
not
push
into
dec
fs
lcall
std
subb
lods
loopne
lcall
mov
mov
push
sub
sbb
jmp
fisubrs
out
aam
int
fnsave
mov
loope
pop
int
adc
addl
and
jmp
or
shll
sub
sub
pop
pop
out
mov
repnz
std
push
mov
adc
pop
pop
scas
jecxz
push
scas
ds
add
dec
jle
outsl
inc
mov
shld
pushf
sbb
in
pop
call
les
int3
pop
in
pop
or
and
shrl
call
push
out
stc
sub
mov
pushl
popl
pushl
pushf
pushf
movw
pushl
ret
xchg
std
jle
in
imul
fcmove
mov
or
sti
jnp
pop
popa
nop
adc
rcrb
cld
dec
ret
jp
cmp
mov
in
and
push
clc
inc
fisubrl
jge
pop
push
adc
ror
mov
movsb
inc
stc
cmc
push
scas
cmp
mov
jmp
popf
cmpsl
mov
ljmp
cmp
mov
test
jbe
out
cmp
push
jmp
mov
lea
jne
stc
bt
cmc
clc
xor
pusha
mov
lea
jmp
lea
call
call
movl
inc
push
movb
lea
jmp
pushf
movl
pusha
push
pusha
movl
movw
pushf
movb
push
lea
jmp
neg
stc
clc
lea
ja
rol
pushf
call
scas
pop
mov
scas
sub
dec
xor
push
mov
xor
sbb
stos
outsl
sarl
outsb
lds
mov
icebp
hlt
cmpsb
push
andb
add
in
movsl
out
jge
xchg
test
xchg
orb
add
ret
adc
xor
mov
cmp
dec
push
fwait
cmp
cmp
or
cmp
pop
fdivrs
inc
sbb
xchg
fmuls
sbb
adc
pop
push
pop
shlb
sub
sahf
jecxz
es
fidivrs
sbb
jmp
and
push
lea
loop
sarl
cmp
pop
push
bound
adc
add
int
pop
lods
imul
sub
push
mov
cmp
aam
or
fildl
jne
push
aaa
fsubrl
mov
test
and
test
xchg
xchg
push
adc
push
and
sub
mov
and
arpl
dec
mov
inc
adc
adc
pop
and
adc
in
lret
pop
scas
not
and
imul
stos
int3
insb
xor
jbe
cwtl
insb
pop
les
jle
sbb
ljmp
imul
xor
icebp
lods
shrb
out
xorb
dec
arpl
clc
mov
or
mov
fidivrl
mov
clc
mov
inc
push
pop
js
push
nop
xor
add
push
shll
in
dec
add
sub
adc
icebp
dec
leave
xor
imul
mov
and
pop
lods
or
push
stc
insb
in
cmp
sti
ds
clc
fxch
mov
aad
jno
pop
mov
push
iret
pop
nop
mov
push
and
mov
movsb
mov
mov
xchg
in
jle
adc
sbb
jp
adc
mov
add
mov
adc
sti
lods
cmp
in
icebp
cmp
sahf
sbb
cld
inc
sbb
repz
mov
or
ljmp
scas
aaa
jl
jp
popf
mov
xchg
dec
mov
or
jp
add
ds
loope
push
xor
fcompl
mov
and
jnp
orl
jnp
cmp
mov
dec
and
sub
sbb
jge
shlb
je
testl
sub
cmpl
add
ret
push
adc
movl
clc
push
movb
pushl
push
lea
jmp
mov
pushf
call
jmp
add
dec
sub
stc
rcl
shr
movsbw
lea
bt
cmc
sub
jmp
call
xchg
xor
insb
in
inc
jnp
scas
adc
daa
test
sub
pop
adc
shlb
mov
pop
iret
mov
jmp
das
xor
fcmovne
cld
out
movsb
insb
add
adc
jmp
sbb
mov
jecxz
jg
pop
in
and
jp
out
sahf
inc
popf
dec
stc
mov
setge
push
push
sbbl
mov
pop
loopne
ss
daa
adc
mov
lahf
mov
imul
mov
jbe
push
sahf
popf
arpl
lods
adc
xor
ret
cmpsl
daa
out
and
js
mov
mov
lods
cmpb
adc
movsb
orb
fdivrs
mov
or
push
mov
sbb
pop
mov
jmp
sub
jmp
add
pushf
mov
aas
adc
inc
movsb
jb
frstor
or
mov
cmp
mov
std
fcomps
cmove
sub
je
inc
cmp
jno
sahf
call
out
je
icebp
int
add
lock
jne
ss
stos
mov
sub
cwtl
cmpsb
pop
and
icebp
pop
cmp
sub
loope
test
cmp
push
jae
cmp
std
jecxz
rorl
mov
ljmp
dec
jmp
pusha
loopne
inc
stos
xchg
repz
les
or
mov
jne
jns
repnz
xchg
hlt
call
mov
pushf
mov
inc
pshufw
and
mov
in
xor
xor
scas
sbb
out
out
cli
push
prefetchwt1
arpl
xchg
insb
shl
xchg
mov
dec
adc
and
rclb
adc
pop
jge
pop
add
jo
mov
data16
das
xchg
inc
cmp
lock
xor
dec
and
dec
inc
push
lahf
aaa
lods
mov
dec
out
inc
cmp
in
push
push
inc
es
scas
cld
cld
sbb
mov
cwtl
cltd
dec
shlb
shrb
hlt
push
and
cmpb
lods
cli
fnstsw
dec
mov
call
adcl
rcl
mov
outsl
cmp
andb
insb
ljmp
or
das
dec
inc
add
inc
or
sbb
jge
cmp
shrb
inc
inc
and
aad
mov
ss
jecxz
subb
movsb
mov
jg
dec
xor
lods
or
lock
mov
das
adc
gs
add
pushf
xor
ret
or
or
push
int
add
xchg
lahf
test
mov
in
pop
mov
stos
lcall
and
sub
adc
xor
fpatan
pop
lret
xor
addr16
add
mov
xchg
into
push
nop
subl
rolb
jns
sub
cmp
mov
push
sbb
xor
iret
inc
push
cmpsb
addl
pushf
aam
adc
int
cwtl
stc
loopne
mov
mov
dec
fstps
and
repnz
sarb
add
popa
shlb
clc
jbe
or
push
lock
sub
subl
jb
pop
xchg
js
xchg
loop
call
mov
sub
xchg
pop
add
lret
xchg
ss
mov
jg
cmc
fwait
mov
cmp
sub
add
adc
jo
cld
imul
mov
sub
add
pop
jne
ret
lea
je
jnp
pusha
adc
push
lea
jmp
call
imul
movb
add
push
movl
mov
lea
jmp
pop
pushf
push
pusha
call
rcll
addr16
paddq
js
push
mov
negl
sbb
mov
int3
mov
push
xor
mov
cmp
sbb
sub
out
shl
jp
push
adc
fisttpl
fisttpll
xchg
mov
ds
jge
imul
out
daa
daa
push
mov
jg
pushl
lar
jb
push
es
inc
and
inc
mov
mov
mov
add
stos
fucomip
aaa
or
jmp
fs
je
jmp
push
clc
push
mov
cmc
clc
cmp
test
pushl
jmp
adc
cmc
loopne
pop
and
jg
xadd
xorl
imul
jae
push
loopne
test
jecxz
xchg
test
jmp
mov
add
pop
dec
jmp
xchg
leave
stos
inc
js
and
arpl
mov
inc
mov
jb
mov
jecxz
bound
mov
insb
movsl
jnp
xor
and
xor
cmpsl
sbb
lods
mov
insl
pop
dec
push
pushf
adc
outsb
push
add
adc
ret
leave
fwait
shll
sarl
hlt
in
push
clc
aam
push
sarl
push
mov
daa
and
addl
cmp
jb
je
xor
xchg
sbb
out
mov
dec
rcll
out
in
imul
mov
pushl
add
movw
pusha
pushf
lea
jmp
clc
cld
dec
data16
or
xor
rorb
stos
cmp
cmp
or
inc
jbe
xor
or
sub
imul
mov
add
cmpsb
inc
mov
inc
adc
sbb
xchg
iret
sbb
cmp
xchg
fcompl
push
inc
rolb
cmp
mov
and
call
sub
imul
loopne
pop
adc
xchg
shrl
mov
cmp
push
rcll
push
push
jecxz
push
xchg
or
xor
mov
push
jmp
popf
xor
mov
and
stos
sbb
outsb
test
es
fbstp
or
cmp
call
repnz
into
add
jmp
cwtl
scas
stc
insb
lea
jl
pop
mov
adc
jmp
push
push
lods
cwtl
or
in
sbb
ror
ljmp
dec
lret
pushf
push
or
lcall
inc
lds
daa
addps
in
in
mov
jp
sbb
lahf
add
mov
inc
jae
jp
rol
mov
xchg
pusha
mov
andb
sbb
xor
jns
mov
lcall
loope
lahf
rclb
shrb
add
dec
fs
push
push
pop
stos
add
jmp
es
mov
out
dec
das
mov
or
fwait
in
jnp
lret
mov
in
and
mov
mov
test
xchg
divl
jg
data16
iret
push
xchg
stc
scas
lock
pop
mov
inc
xor
fcmovbe
or
rcrl
jecxz
or
in
das
inc
inc
cmp
and
mov
mov
add
lods
jl
lcall
adcb
inc
lret
xor
push
jge
mov
fistl
movsl
xchg
xor
mov
and
cmpsl
cltd
scas
push
cs
cmc
jbe
insl
sub
mov
cwtl
adc
inc
or
fimuls
and
jno
sub
mov
inc
repz
xor
pop
clc
loope
cld
es
rcll
mov
popa
inc
bound
dec
cmp
add
push
movsl
imul
jb
dec
or
and
sub
loope
in
mov
test
inc
inc
movsb
mov
in
sahf
inc
inc
cmpsb
inc
cmp
lea
mov
inc
faddl
mov
dec
sbb
cmpsb
inc
lahf
mov
xor
loope
xor
inc
and
testl
sub
inc
jae
jl
add
repz
stos
sti
inc
push
mov
andl
aad
xchg
sub
inc
xchg
dec
xchg
push
xchg
push
xchg
pop
xchg
xchg
xchg
lcall
xchg
cmp
xor
inc
dec
xchg
mov
push
inc
loop
shrb
dec
xchg
lret
divl
jecxz
inc
jno
pop
in
inc
aaa
insb
mov
mov
psubq
xor
mov
mov
adcl
inc
lret
ret
cmp
popa
cs
and
sbb
mov
enter
cmp
jecxz
sbb
and
sysenter
xchg
sub
dec
sbb
rol
cmpsl
jecxz
adc
inc
mov
cwtl
divl
movsb
fs
or
in
jmp
xchg
jl
jle
cmp
and
mov
inc
andb
sub
inc
js
push
popa
in
out
jl
xor
cs
xchg
inc
inc
xor
mov
cs
scas
mov
repnz
out
addr16
inc
mov
repnz
mul
adc
mov
mov
shlb
inc
pusha
stos
scas
or
inc
das
out
mov
cli
popa
adcl
dec
mov
fs
xor
adc
ror
jne
lds
cmp
jo
jge
jb
dec
subb
addl
xchg
sti
ret
orb
pop
mov
repz
and
cmp
roll
hlt
adc
je
inc
mov
xchg
test
xchg
adc
mov
jne
call
sahf
jae
les
aaa
cmp
lds
popa
xchg
jno
cld
shr
ja
addr16
hlt
dec
xor
jno
push
rcr
push
arpl
xor
xchg
and
push
mov
and
xchg
daa
push
inc
sahf
jno
or
xchg
jno
icebp
or
inc
rorb
imul
mov
jae
andl
outsl
mov
jno
sbb
jb
add
push
xor
scas
and
sub
call
repz
mov
bound
inc
inc
pop
repnz
sahf
or
clc
push
adc
cld
jno
inc
add
or
pop
ret
mov
loope
pop
inc
lret
fld1
xchg
sahf
outsl
fmuls
mov
jmp
lock
ret
jp
and
jb
or
xchg
adc
jno
pop
and
xor
movsb
adc
pop
and
xchg
push
shl
jno
clc
mov
xlat
cmc
inc
pushf
addr16
int
repnz
repnz
jno
shll
mulb
ja
mov
or
adc
rcll
inc
adc
xchg
aad
inc
pushf
xor
inc
jp
adc
mov
shll
inc
xchg
imul
jno
pop
mov
movl
jle
les
idivl
repz
icebp
or
jno
fisttpll
cmpl
and
int3
and
stos
mov
pop
jno
call
pop
adc
sub
loope
jno
jno
js
add
aaa
mov
xor
adc
or
and
adc
sbb
xchg
les
or
ret
bnd
js
fmul
pop
shrl
inc
inc
fs
enter
clc
lcall
hlt
xchg
ljmp
stos
rcrb
sbb
add
aad
aam
push
jle
and
mov
loopne
sbb
cmpsl
mov
inc
fmull
or
xchg
lret
gs
cwtl
inc
mov
inc
idivb
in
xor
fwait
xor
jae
push
and
xor
inc
and
xor
les
incb
nop
jne
inc
pop
push
pop
xchg
inc
mov
mov
call
cmp
sbb
xchg
xchg
mov
sti
sub
lret
sub
in
xor
sub
inc
jno
std
dec
int3
xor
push
inc
xor
xor
pop
lds
sub
je
leave
adc
pop
adc
mov
add
add
pusha
add
mov
push
push
jno
incl
and
mov
rcrb
shrb
push
gs
sbb
and
js
mulb
jle
push
lds
adc
dec
sbbl
mov
stos
pop
daa
xor
inc
decb
and
mov
xchg
add
xor
inc
ret
hlt
push
xchg
mov
movsb
sub
ljmp
lret
pop
std
sub
mov
fcoms
ds
sbb
test
xchg
inc
mov
adc
popa
sbb
repnz
outsl
sub
xor
cs
loopne
jae
arpl
and
outsb
orb
fisttps
mov
rcll
aad
out
lods
jno
mov
stos
xchg
fcmovnu
ljmp
out
inc
cli
imul
or
fs
or
xor
rclb
loope
ss
jno
fcomps
and
sbb
jno
or
sbb
adc
adc
in
jmp
mov
push
movsl
in
inc
arpl
xchg
popa
in
test
mov
loope
and
mov
mov
inc
bound
outsb
ret
inc
in
jmp
sub
ljmp
mov
jne
sub
scas
pop
ds
ficoml
dec
shll
sbb
divl
ja
loopne
jmp
ud0
or
or
jecxz
jl
sti
ret
inc
mov
out
adc
fsubrl
sarl
lock
repz
paddsb
mov
icebp
dec
out
adc
mov
pusha
fsubrl
je
jecxz
push
add
insb
out
dec
cmpsl
add
out
shrl
sub
xchg
pop
pop
out
sti
fdivrs
inc
pop
push
mov
jl
pop
shll
mov
pop
test
loopne
mov
or
je
mov
inc
pusha
movsb
pop
out
hlt
or
out
movsb
icebp
loope
sub
sub
inc
shll
push
mov
or
ljmp
push
pop
jle
dec
inc
inc
loope
mov
aaa
addb
out
inc
add
repnz
dec
xor
jnp
in
xorl
lret
in
insb
out
add
xor
inc
lock
jo
popa
insl
lods
ret
adc
leave
les
and
mov
repnz
icebp
inc
cmp
out
scas
repnz
xor
mov
fidivrl
mov
xor
dec
in
lods
inc
mov
sub
inc
daa
jno
jbe
xor
pop
and
repz
popa
out
mov
sbb
dec
pop
fwait
jno
jno
mov
test
xchg
out
jmp
loop
fimull
scas
add
test
fld
repnz
xor
cmpsb
shl
rorb
das
ret
and
pop
push
out
sub
andl
movsb
sub
pop
jo
insb
je
sbbl
pop
stos
outsl
popa
out
push
cs
imul
cs
push
mov
ljmp
mov
out
add
in
and
je
jl
out
out
adc
lods
inc
test
imul
pushf
inc
call
and
adc
ret
stc
cmp
xor
adc
jnp
mov
mov
inc
and
cmp
sti
fbld
xchg
addr16
push
js
movsl
pop
xor
jnp
sub
lret
pop
mov
addl
jmp
mov
imul
insl
jl
xor
sub
popa
dec
loop
movsl
addr16
push
pop
push
dec
xchg
add
repnz
or
shrb
je
fs
xor
test
xor
push
jbe
ljmp
mov
cmp
popa
jno
push
dec
adc
cmp
jbe
jb
sahf
inc
addr16
pop
mov
or
daa
jo
pushl
cmpsb
cs
mov
xor
push
mov
movsl
lea
cmp
mov
and
cltd
jb
add
xchg
or
out
insb
inc
mov
fs
jno
fimuls
xor
cmc
pop
sbb
sbb
push
xchg
push
hlt
xchg
repnz
les
jno
out
sbb
add
inc
sbb
xchg
imul
ja
les
inc
and
sahf
cmp
popa
repz
pop
stc
mov
jno
leave
leave
pop
jbe
mov
lret
lret
jne
jns
jmp
stos
cmp
outsb
popf
mov
stos
les
push
add
in
xor
xlat
xor
test
mov
mov
pop
cmpsl
inc
leave
push
jmp
push
rcll
push
popa
push
loope
repz
stos
int
mov
in
cmc
scas
cmp
or
mov
mov
jno
dec
sbb
nop
mov
xor
sbb
mov
pop
sub
rcll
cmp
inc
jle
movsl
and
xchg
xlat
mov
xchg
mov
lcall
scas
xor
ljmp
loop
mov
ret
fiadds
xor
mov
stc
test
and
and
jno
adc
add
pop
sub
aaa
and
scas
mov
bound
push
cmp
push
jno
ss
xchg
hlt
movsb
mov
lea
arpl
mov
popa
movsl
mov
sub
mov
lcall
sub
push
in
cmpsb
mov
xor
xchg
mov
lret
jmp
rcll
adc
test
mov
mov
imul
mov
jmp
packssdw
aas
inc
jns
or
push
xor
sub
mov
sbb
aam
xor
mov
sbb
push
jmp
dec
fdivs
shll
jl
mov
mov
pop
mov
popa
sbb
sub
inc
mov
bound
xchg
mov
sub
repz
mov
xor
popl
mov
sub
sbb
sub
mov
xor
andb
ret
mov
sbb
xor
sti
shll
inc
inc
inc
mov
inc
inc
out
jp
pop
jp
mov
and
jle
fidivrl
fsubrp
or
repnz
icebp
adc
sub
popa
xor
loope
dec
sub
andl
in
je
xor
inc
lods
mov
inc
dec
jno
and
inc
and
xor
inc
cmp
mov
inc
sub
test
sub
mov
stc
mov
in
push
mov
inc
mov
inc
rolb
bound
stos
mov
push
fisttps
in
adc
gs
sub
xor
xor
mov
inc
cmp
xor
inc
inc
mov
ret
addr16
xor
push
mov
inc
pop
arpl
push
mov
xor
and
adc
mov
inc
jne
repnz
inc
shrb
mov
inc
test
test
inc
xchg
imul
xor
inc
push
imul
xor
lods
inc
adc
mov
inc
mov
shrl
inc
mov
inc
lds
test
dec
aam
shll
test
inc
xor
fldenv
loope
adc
xor
add
jmp
inc
in
icebp
test
inc
stc
imul
mov
mov
into
rcl
and
ljmp
loope
or
pop
sub
dec
cmp
xor
sub
daa
cmpsb
add
fdivrp
into
shrb
std
shl
out
repnz
int
mov
lods
popf
test
and
in
cmc
jmp
sarl
icebp
ffree
fsubl
mov
ljmp
addl
movsl
test
push
mov
movsl
add
sub
movsl
pop
and
sub
lea
sub
and
cmp
mov
mov
mov
stos
imul
inc
popf
mov
adc
aaa
push
push
jb
shll
pop
mov
add
arpl
pop
and
sub
std
gs
mov
sub
movsl
cs
jecxz
imul
cmpl
mov
xor
cmpsb
jns
orb
addl
adc
lea
xchg
sub
pushf
mov
sub
sub
xor
mov
popa
movsl
xor
cmp
sub
sub
mov
mov
and
lds
inc
or
testl
imul
sub
shll
std
mov
jmp
cmp
lds
leave
mov
movsl
dec
pop
int
rcrl
xor
aad
push
flds
sub
frstor
subl
sub
sub
cmp
aam
call
sub
and
push
cmc
adc
mov
mov
movsl
shrl
and
dec
mov
xchg
add
add
cmp
jne
sub
pop
dec
leave
sub
ja
aad
mov
sbb
sbb
sub
aas
cmp
mov
cs
popa
add
cmp
xor
and
xorl
adcl
jne
and
std
ds
int
mov
jne
cmp
aaa
sub
inc
lea
mov
sub
jne
and
lods
sub
and
popa
push
inc
pop
ret
pop
xorl
int
std
in
and
jmp
test
pop
cmp
data16
or
subb
mov
shr
sub
pop
xchg
pop
movsl
addr16
jmp
jge
jb
in
xorl
jp
mov
inc
addb
sub
mov
sub
mov
sub
std
mov
xchg
and
push
icebp
xchg
cmp
movsl
dec
lds
mov
cmpsb
fs
mov
mov
or
and
scas
xor
int
cmc
sub
and
aaa
cmp
aad
sub
mov
push
in
xor
cwtl
and
xor
inc
shlb
into
rorl
shrl
shrb
inc
lods
scas
sub
adc
pop
fisubs
popa
int
shl
push
inc
adc
in
ljmp
idivb
test
and
movsl
xchg
add
jns
cmp
int
push
or
mov
inc
sbbl
push
pop
je
sub
pop
sub
addr16
sbb
jmp
test
mov
sub
cmp
push
sub
xor
outsl
inc
in
xchg
xchg
lods
mov
and
jb
in
popf
subl
aas
dec
loope
sub
sub
inc
lds
mov
and
mov
jmp
sub
gs
or
mov
lea
push
orl
pop
shlb
jmp
sub
imul
aaa
lcall
xchg
addr16
jae
ja
xchg
pop
fstp
sub
in
mov
jnp
add
sub
xchg
pop
movsl
std
loop
and
cmpl
sub
in
loope
jmp
push
cmc
ret
bound
cmp
sub
xchg
jae
mov
dec
fwait
dec
mov
push
xorl
xchg
repz
cmpsl
and
stos
lds
pop
sub
inc
test
mov
call
fidivs
dec
test
xor
and
xlat
sub
movsl
in
mov
xor
lret
and
xor
shrl
sub
xchg
xlat
or
sbb
sub
fistpll
sahf
ja
sub
xchg
mov
addl
xor
stc
dec
push
repz
mov
mull
mov
rcr
adc
in
mov
sarl
cmp
add
sbb
jmp
sub
lea
movsl
in
lea
pop
and
or
icebp
xchg
xor
out
adc
sub
test
xchg
push
sarl
in
mov
scas
sub
int
test
sub
xchg
vmovapd
sub
xor
xor
cmp
cmp
popa
stc
ret
sub
inc
ja
dec
jno
dec
adc
and
in
push
shll
adc
jp
lds
xor
pop
mov
push
sub
and
fnsave
je
mov
js
mov
sub
mov
adc
fidivrl
sub
leave
aaa
andb
push
loope
repnz
mov
lods
imul
jge
test
xchg
push
std
aaa
mov
inc
aad
jmp
cmc
jne
push
lea
nop
adc
push
mov
arpl
xchg
repnz
in
sub
push
sub
cwtl
rol
or
test
xchg
mov
ret
sub
mov
mov
mov
push
push
stc
fildll
dec
mov
ja
inc
icebp
enter
dec
int3
rol
ret
push
xchg
dec
sub
int
and
fsubs
fmull
xor
sub
jmp
call
inc
jne
ds
loopne
lods
sub
and
inc
jno
xlat
sub
inc
std
jb
clc
and
leave
sub
aas
mov
jmp
xchg
push
gs
movsl
aaa
add
mov
sub
and
popa
jp
sub
or
pop
inc
lods
dec
test
mov
scas
adc
loope
sub
arpl
inc
mov
xchg
add
addr16
adc
push
mov
cmc
subb
sbb
and
movsl
mov
mov
daa
in
push
xorl
sub
int3
jne
daa
imul
and
test
std
push
lea
add
xor
or
cmp
mov
inc
in
dec
les
mov
inc
shrl
sub
mov
sub
pop
push
int
sub
repz
inc
add
imul
ret
sub
sub
in
mov
pop
xchg
cmp
cwtl
xchg
in
xor
push
sub
imul
loope
test
jmp
mov
gs
adc
jmp
shrl
arpl
lods
dec
das
xchg
daa
cltd
ja
push
stc
ja
lea
push
mov
in
movsl
adc
outsb
sub
mov
rcr
test
sub
mov
jp
rorl
leave
dec
sub
mov
loope
repnz
xor
push
xchg
sub
aas
sub
movsl
test
leave
sahf
mov
xchg
std
int
lret
std
lods
shl
push
xor
test
aad
xchg
or
or
sub
lds
jmp
mov
push
movsl
xchg
in
push
subl
popf
or
cmc
shr
dec
sub
push
add
rolb
push
or
std
cmpsl
or
icebp
xor
push
leave
xor
jno
sub
sub
lods
cmc
dec
and
inc
xor
jmp
pop
sub
cs
shll
xchg
xchg
std
sub
sub
leave
aad
xor
cmc
xor
cmp
jno
xchg
int
daa
sub
pop
stc
jge
push
lea
xor
adc
add
and
cmc
pop
add
mov
jmp
add
repnz
dec
add
stc
adc
jne
dec
pop
subl
pop
loope
stc
push
adc
or
sbb
shl
in
jecxz
cwtl
mov
mov
lea
dec
add
fsub
lds
push
pop
repnz
cmp
jge
inc
mov
dec
lods
pop
and
cmp
imul
sub
push
scas
cmp
dec
sbb
jmp
das
shll
test
outsb
cmp
orl
sub
sarl
mov
cmp
stos
flds
push
loop
rcrl
test
imul
movsb
dec
sub
jns
pop
leave
push
rcrl
je
insl
frstor
shrl
icebp
and
xor
dec
cmc
pop
sub
movsb
xor
cwtl
xchg
imul
sbb
leave
inc
mov
inc
insl
fs
nop
mov
rol
jb
jne
in
std
addl
push
mov
xor
and
cmp
xor
or
mov
fimull
cmp
shrb
mov
rcrl
popa
scas
inc
push
mov
xchg
add
daa
pop
aad
popf
inc
aam
aas
push
test
leave
cmp
icebp
je
hlt
es
rorl
jne
or
repnz
insb
aam
sub
cmp
addl
jnp
cmpsb
jmp
xlat
les
ficoml
mov
sbbl
les
aad
repnz
pop
mov
add
aam
in
mov
cmpb
xor
stos
inc
arpl
std
sbb
cld
jmp
int3
mov
les
leave
inc
movsl
fnstenv
inc
xor
orl
leave
cmp
lods
xchg
push
pop
mov
jne
outsl
inc
pop
ret
fsubl
pushfw
or
ret
sti
mov
flds
cmp
movsl
sub
orb
stc
inc
xor
inc
andb
jecxz
push
and
inc
rorl
loope
lods
sbb
mov
mov
cmp
push
stos
dec
xor
test
leave
jno
mov
fimull
adc
mov
mov
shll
inc
xchg
inc
lea
mov
jb
adc
cmp
cld
mov
in
in
jb
daa
and
inc
mov
loope
mov
mov
push
xchg
shlb
xor
arpl
jno
mov
in
push
push
mov
imul
sbb
roll
xor
les
jmp
sahf
daa
mov
or
xor
mov
stc
and
bound
cld
gs
ret
adc
sub
mov
adc
sbb
lret
stos
push
repz
mov
mov
push
cmp
mov
mov
test
addl
mov
pop
insb
iret
and
mov
bnd
jno
bound
ret
arpl
daa
mov
mov
dec
popa
cmpl
xor
jecxz
mov
aad
bound
movsl
pushf
in
mov
movsl
stos
stos
stos
cltd
stos
and
mov
and
int3
or
es
xchg
test
sub
loope
jne
test
mov
or
in
or
andl
out
mov
stos
jns
gs
bound
test
je
jae
lcall
shll
mov
aaa
push
jns
adc
jb
rcrb
xor
int
and
inc
leave
popa
test
daa
fidivrs
imul
fwait
cmc
xor
inc
shll
jecxz
sub
fisubl
push
xor
repz
inc
pop
adc
push
dec
sub
push
ret
or
pop
aaa
mov
movb
dec
sub
sub
and
andl
aad
inc
mov
xor
sbb
mov
pushf
mov
adc
inc
inc
xor
fs
shr
fisubrl
xchg
dec
xor
mov
repnz
mov
insl
loop
andl
icebp
rorl
adc
push
xchg
jne
je
stos
jecxz
mov
and
cli
daa
mov
mov
mov
xchg
inc
rclb
bound
mov
repz
sub
adc
adc
test
inc
mov
enter
hlt
lods
mov
sarb
leave
insl
addl
jns
jns
xchg
inc
jns
test
das
inc
icebp
add
push
imul
cmp
mov
push
fnstenv
repnz
jae
in
adc
stos
adc
sbb
xchg
stos
cmpl
xor
test
mov
dec
adc
mov
xchg
xchg
insl
jno
imul
inc
or
ret
aaa
xchg
xchg
imul
mov
cmc
mov
xor
sub
jmp
add
push
inc
sbb
xchg
pop
xor
fs
cmp
and
xor
push
int3
movsb
es
cmp
jnp
jb
jnp
mov
scas
sub
sub
test
mov
stos
leave
sub
push
xchg
jl
and
aas
xor
cltd
push
leave
mov
shrl
imul
add
mov
lods
sub
inc
stos
stc
cmp
xor
jecxz
and
adc
popf
xchg
popa
mov
loop
insb
dec
in
mov
jl
sub
fwait
xor
dec
xor
xor
mov
inc
sbb
dec
mov
andl
jns
dec
dec
cmp
movsl
testl
jno
sarl
imul
cmc
add
inc
imul
insb
cld
sub
cli
or
inc
lcall
inc
pop
mov
xor
hlt
mov
xor
sahf
mov
hlt
aas
pop
sbb
dec
daa
sub
js
out
lahf
jae
nop
jno
hlt
push
xor
push
popa
cmp
sub
mov
daa
enter
push
sub
test
insl
mov
imul
jno
bound
fdivs
mov
jmp
and
outsb
test
sub
mov
dec
push
xchg
outsl
mov
adc
inc
dec
test
xor
mov
mov
mov
addl
add
shll
xchg
sub
cmpsb
or
notb
dec
mov
stc
loope
mov
adcb
xchg
and
mov
xchg
repnz
sbbl
add
pop
cli
daa
sbb
imul
lcall
daa
cmpl
addl
mov
inc
es
fiadds
pushw
push
xchg
sub
imul
mov
mov
imul
cmpl
es
xor
lea
xchg
add
mov
das
stos
jae
and
sbb
adc
leave
xchg
jno
add
dec
mov
sbb
mov
xor
test
xor
hlt
xor
int3
push
pop
dec
xchg
out
lret
cmp
sub
inc
shrl
fs
mov
mov
pop
stc
push
xchg
frstor
push
fcmovnbe
and
push
addb
fisubl
loope,pn
popf
inc
xchg
in
test
cmpsb
mov
xchg
addl
dec
int
int3
arpl
shl
jecxz
pop
and
cltd
imul
popa
xor
sbbb
inc
jbe
imul
mov
in
xchg
imul
mov
shll
test
mov
mov
pop
mov
mov
mov
xchg
jns
push
adc
mov
and
xchg
stos
pop
inc
xchg
ret
jno
mov
dec
and
mov
inc
ret
imul
mov
and
lcall
in
push
jmp
jecxz
ljmp
mov
test
mov
xor
mov
stos
addb
and
pop
dec
jl
or
enter
sti
rol
xor
push
pop
fisubs
dec
and
pop
icebp
xor
and
cmpsb
mov
loope
and
push
and
jno
ret
daa
mov
mov
mov
lret
mov
mov
in
imul
int3
sub
sarl
arpl
pop
cmc
sbb
add
loope
xchg
insb
je
and
add
bound
inc
and
insl
mov
xor
bound
clc
cmpsb
mov
loope
sub
and
inc
mov
stos
daa
push
loope
ret
rorl
in
das
xor
hlt
adc
push
movsl
scas
daa
xchg
cmpsb
dec
adc
mov
jae
testl
push
jge
push
inc
addl
shrl
add
xor
adc
rcll
mov
stos
fwait
insl
dec
jge
mov
jmp
mov
inc
cmpsl
imul
jae
sub
adc
fldt
das
shrl
ret
movsl
adc
pop
push
jmp
sti
mov
in
insb
loope
repnz
mov
inc
daa
sub
mov
pop
mov
xchg
shll
daa
mov
das
sub
add
xor
mov
sbb
mov
sub
inc
lret
sbbb
ss
xchg
mov
add
and
xchg
dec
iret
push
imul
stos
xor
inc
leave
xor
sbb
imul
bound
mov
inc
and
xlat
daa
imul
add
shll
jl
xchg
inc
pop
pop
push
icebp
sbb
jecxz
xchg
dec
xor
jmp
mov
test
jno
shlb
xchg
pop
adcl
inc
dec
call
sub
push
fistpl
sbb
mov
inc
inc
lds
cmc
sub
mov
in
jb
and
lret
sub
mov
push
lea
loop
movsb
data16
adc
lret
mov
insl
mov
test
adc
jmp
sbb
mov
insl
dec
dec
lret
sub
inc
popl
sarb
cmp
inc
pop
cmp
popa
jnp
lahf
and
xor
jae
outsb
cmp
lea
sub
push
test
jmp
je
jno
mov
leave
inc
fcomp
imul
int3
stos
inc
mov
jecxz
daa
imul
jmp
roll
and
add
cmp
aad
mov
rol
ffree
inc
je
inc
leave
mov
aam
mov
cmp
je
orl
jb
hlt
fidivl
sbb
lea
jb
rcl
inc
push
sub
sub
rcll
jl
inc
adc
mov
das
sub
cs
jg
inc
cmp
cld
int
daa
xor
fwait
xchg
imul
cmp
xchg
movsl
sub
repz
dec
lret
sub
arpl
arpl
pop
cmpl
sub
cltd
fwait
repz
adcb
sti
add
fs
mov
xor
lret
cmc
mov
push
mov
in
lods
aaa
mov
xchg
pop
dec
push
and
mov
imul
and
ljmp
inc
daa
or
cmp
add
inc
aad
sahf
cmp
pop
in
subl
pop
hlt
test
or
mov
xorb
or
xor
fs
adc
mov
inc
loop
dec
movsb
add
mov
arpl
pop
dec
mul
outsb
pop
dec
and
mov
jns
cmp
xchg
mov
pop
cmp
jmp
push
mov
inc
xor
popa
aam
lret
inc
cmp
popa
push
push
cmc
xchg
gs
cmp
and
mov
cmp
pop
xor
mov
bound
jmp
or
add
std
std
xchg
int
xor
or
inc
sub
mov
aam
dec
dec
cmp
add
aam
fwait
add
cmp
dec
mov
repz
sub
or
leave
xchg
push
shll
arpl
xor
loop
sub
push
adcl
sub
lock
push
dec
xor
add
imul
pop
push
cmp
aaa
and
adc
popa
and
inc
xor
sub
xor
hlt
fadds
addl
cmc
xor
push
shll
mov
xor
push
jns
ss
xchg
dec
mov
dec
adc
negl
pop
pop
bound
mov
in
push
int
sbbb
std
cmp
mov
aam
sbb
xorl
rcll
orb
xchg
imul
loope
jne
faddl
arpl
cmpl
dec
repz
sub
push
jne
popa
les
leave
imul
jb
pop
lret
icebp
lods
xor
inc
ret
and
pushf
mov
dec
or
inc
shrl
xor
daa
inc
adc
lret
and
popa
cmp
sar
jns
mov
xchg
jae
lods
add
cs
jae
imul
flds
loope
xorl
cmpsb
jns
push
pop
or
imul
xor
stos
push
sbb
popa
sti
icebp
insl
jne
add
sbbl
test
pop
mov
mov
sub
in
push
mov
insl
bound
xchg
jg
sub
stos
fcmovb
sub
bound
adc
jecxz
icebp
inc
xchg
cltd
jns
sub
dec
out
cmp
repz
and
push
xor
sub
pop
xchg
push
add
dec
push
imul
mov
push
inc
lea
sub
xchg
pop
rorl
lret
inc
xchg
int3
dec
jne
je
fnstcw
jae
stc
flds
or
pop
push
jmp
adc
int
cld
mov
enter
add
mov
insb
inc
and
int
daa
ljmp
roll
push
xchg
dec
mov
in
jl
mov
xor
imul
je
jne
bound
adc
fwait
mov
sarb
add
into
movsb
mov
xchg
sbb
imul
daa
je
push
cmp
shrb
inc
fstpl
data16
movl
inc
add
ljmp
cmc
adc
push
dec
mov
inc
and
jns
movsl
xchg
and
fs
mov
inc
and
pop
add
fs
dec
cmp
sub
lods
js
mov
mov
ljmp
mov
cmc
xor
je
push
repnz
addb
xchg
in
sarl
xchg
push
mov
sbb
push
jge
cmp
call
pop
js
mov
sub
incl
hlt
scas
mov
cmp
sbb
arpl
mov
jbe
in
jae
mov
pop
add
push
shrb
mov
cmp
inc
ret
xchg
insl
fsubl
sbb
pop
orb
xor
jae
int3
sbb
popf
push
xlat
pop
fdivl
jns
fsubrs
push
aam
push
xchg
mov
cmp
frstor
mov
mov
int
xor
call
arpl
lret
ret
xchg
leave
popa
fstl
aad
sub
adc
sub
xchg
fnstenv
mov
rcll
es
sub
cmp
mov
sti
repz
xorb
jmp
push
mov
ret
popa
sub
jnp
loop
subl
xor
or
lods
add
fsubrl
repz
cmpl
jne
lea
imul
lret
lret
insb
xor
cmp
pop
cmp
mov
xchg
dec
xchg
jae
cmp
dec
fldl
repnz
jp
icebp
inc
and
push
jbe
add
cmc
js
icebp
rcrl
sub
jns
push
adc
mov
stos
stc
idivb
add
xor
bound
cli
imul
scas
jp
aas
cmpb
mov
inc
movsl
mov
dec
mov
sub
lret
xchg
test
mov
lret
pop
xor
fs
pop
lds
daa
and
sarb
inc
push
mov
add
jmp
daa
pop
cmp
cmp
in
ret
les
fstl
mov
pop
repz
ss
test
inc
mov
mov
cwtl
or
sub
jge
inc
test
xchg
push
ror
test
shll
stos
sti
push
mov
mov
and
mov
pop
dec
je
icebp
pushf
les
pop
push
jge
movsl
inc
int3
in
repnz
adc
sub
aam
ret
roll
adc
cltd
dec
insb
dec
in
mov
mov
mov
sbb
les
push
ret
pop
push
insl
mov
mov
stc
and
leave
sub
dec
mov
inc
ret
shlb
dec
lods
xor
xchg
loope
out
sub
jmp
jmp
xchg
adc
jae
jns
push
fadd
movsl
mov
lcall
in
test
test
in
cmpsb
lret
cmpsl
mov
jae
fs
inc
xchg
xchg
mov
or
jnp
mov
cmp
into
mov
sub
dec
jmp
mov
lret
mov
xchg
mov
dec
push
xchg
add
mov
xchg
bound
clc
repnz
fsts
insb
cmpsl
fidivrl
push
pushf
inc
rcll
je
push
ret
adc
outsb
in
test
leave
sahf
test
jns
mov
cmp
inc
clc
insb
mov
std
popa
cmp
ljmp
jmp
pusha
dec
and
call
pop
jno
lret
testl
in
cmp
into
call
xor
hlt
sti
inc
and
jb
cmp
fimuls
sti
cmc
sbb
int
aad
push
call
call
popl
lods
ret
mov
or
jle
mov
add
sbb
or
pusha
xchg
inc
std
or
popa
cmp
push
rcll
stos
xchg
cmp
inc
push
xor
mov
mov
jp
in
jge
cmp
xor
test
xor
xor
jp
addb
jp
sbb
movsl
in
pop
adc
cmp
in
cmp
push
mov
mov
hlt
mov
mov
xor
lret
mov
std
lea
insb
cmc
inc
adc
mov
andl
push
loop
xorb
jns
outsl
lea
mov
inc
push
aad
fists
push
mov
push
cli
stc
cmpsl
cmp
loope
in
push
movsl
xor
dec
rcll
incl
ret
andb
in
imul
inc
and
mov
xchg
pop
jne
cmp
cld
leave
lea
push
arpl
cmp
mov
pop
inc
inc
cmp
jns
mov
add
or
mov
mov
add
movsb
mov
jp
fs
fstpl
js
mov
in
mov
add
lods
in
mov
push
jecxz
dec
jnp
aaa
and
fnstenv
std
jo
popa
cmp
dec
stos
ret
push
mov
scas
push
mov
outsb
out
cmp
xchg
add
mov
mov
ds
xchg
push
test
movsl
idivl
and
xchg
test
lods
push
push
lret
cmp
cmc
mov
xchg
stc
xor
lret
cmp
lahf
test
lret
ret
fnstenv
dec
xor
add
cmp
test
push
mov
dec
jmp
cs
push
mov
rolb
cmp
xchg
or
stc
aaa
sbb
push
inc
cmp
dec
mov
cltd
cmp
aam
lret
cmp
push
push
sbb
mov
sub
loope
std
sbb
test
filds
sub
push
xchg
imul
sarl
or
sub
mov
lcall
sub
xor
int
or
push
test
xor
lods
lds
adc
add
cmp
and
sbb
leave
movsl
cmp
cltd
inc
lds
pop
sbb
in
pop
bnd
fwait
push
jno
popa
sub
push
cmc
sbb
inc
add
icebp
push
icebp
jnp
stc
jge
cmp
dec
adc
jl
push
les
pop
cmp
aam
pop
repnz
cmp
bound
push
cmc
sar
xchg
cmp
cmp
push
imul
ja
pop
jne
jbe
xor
pop
mov
inc
xorl
stos
lahf
inc
cltd
cmp
lods
mov
shll
inc
insb
sub
xor
inc
xchg
in
cmpsb
dec
lods
jle
inc
pop
ret
inc
and
cmp
in
mov
arpl
cmp
inc
clc
lcall
loope
pop
mov
aam
movsl
cmp
leave
sbb
lods
fwait
inc
jno
jae
test
insb
inc
jbe
cmp
push
mov
mov
in
xchg
sbb
dec
jmp
cmp
je
ret
xor
mov
lahf
jae
repz
insl
xor
adc
push
xor
nop
xchg
shrl
mov
push
inc
lea
dec
jo
je
dec
jns
aaa
repnz
push
aad
bound
adcb
jmp
fwait
add
push
fs
popa
xor
addb
clc
xor
mov
pop
leave
pop
sbb
sar
je
stos
inc
sub
fstps
into
jmp
repz
pop
lret
aad
lret
ret
stc
ror
jnp
rcrl
mov
dec
stos
mov
xchg
ret
inc
mov
inc
mov
ror
mov
imul
mov
mov
jns
xchg
adcb
add
dec
fsts
xor
imul
leave
dec
or
incb
xor
xor
inc
sub
inc
fldl
nop
stos
inc
mov
lret
test
push
cltd
outsl
repz
mov
add
mov
jmp
data16
in
fsts
mov
je
and
cmp
test
sbb
insb
insb
sbb
pop
outsb
or
cld
das
shrl
lds
shrl
sarl
addl
push
int3
aaa
jno
cmp
dec
rcrl
rcl
dec
int
jmp
andb
cmp
push
lds
mov
jb
jns
repz
jae
push
outsb
jmp
add
mov
test
shll
fwait
insb
ret
outsb
rolb
fistpl
jge
imul
push
data16
cmp
stc
dec
adc
jno
dec
ror
inc
icebp
inc
inc
jl
cmc
fidivl
pop
inc
out
push
nop
je
int
mov
sbb
ror
jns
mov
repz
push
jp
insl
inc
mov
inc
add
mov
ja
dec
jno
stos
stos
sub
ror
mov
shll
sub
in
fnstcw
aad
aam
popa
jmp
xor
adc
jmp
lcall
fisubl
inc
mov
xor
fiaddl
pushf
data16
inc
test
mull
inc
loop
mov
test
fbstp
incl
ljmp
mov
in
in
pushw
test
or
imul
addr16
daa
cmpsb
shlb
fisubrl
inc
imul
mov
mov
ja
cmp
test
and
sbb
out
repz
adc
xor
aad
pop
sbb
inc
loope
sahf
mov
push
and
sbb
sbb
rorl
sub
xor
sub
subb
xor
fbstp
and
out
mov
data16
jmp
shll
cmp
and
adc
popa
jb
mov
push
xor
orl
cmp
jp
push
mov
xor
push
or
ficoml
stc
in
mov
jne
out
lea
repnz
push
pop
mov
cmpsl
xor
push
inc
mov
test
inc
loop
ret
inc
andb
inc
xor
add
imul
sbb
dec
xor
add
inc
in
les
inc
je
add
push
test
inc
adc
mov
inc
jecxz
ret
test
inc
inc
imul
addr16
xor
inc
add
mov
inc
jno
inc
popa
adc
test
inc
push
imul
jae
xor
repnz
jb
xor
jno
xor
aam
shll
es
inc
sub
test
inc
imul
dec
test
inc
pop
imul
outsb
test
inc
jle
xorb
out
lret
shr
pop
mov
out
sbb
out
pop
push
jmp
mov
inc
out
addr16
inc
add
mov
xchg
ss
frstor
dec
mov
test
ss
mov
xchg
test
ss
frstor
dec
mov
test
sub
mov
fyl2x
stos
xor
xor
cs
mov
jmp
in
loope
loop
pop
gs
std
sbb
stc
inc
cmc
or
popf
lods
in
mov
adc
dec
cltd
push
pop
jmp
mov
xchg
jno
add
push
aaa
adc
test
jg
mov
push
push
mov
add
lods
std
addr16
inc
cmc
mov
ljmp
mov
pushf
inc
jl
pop
inc
cmp
sbb
inc
fildl
pop
imul
mov
andb
jp
jbe
jb
outsb
xchg
push
lods
bound
inc
pop
mov
ljmp
ds
lods
inc
addr16
cmp
ljmp
pop
repnz
loop
movsb
aad
je
dec
jno
imul
push
mov
cmp
sub
lds
lcall
dec
cmp
mov
sarl
pop
jge
sarl
int3
push
stos
mov
lock
fnstenv
sti
mov
cli
xchg
mov
or
lods
mov
fisubrs
xor
scas
jp
sar
push
insl
sbb
stc
popa
loope
shrl
xor
test
mov
test
imul
jbe
inc
test
ss
mov
aas
sbb
mov
out
movlps
cmp
mov
bound
and
icebp
adc
imul
xchg
xor
inc
test
test
inc
hlt
imul
in
test
inc
in
bound
fsubl
nop
test
inc
mov
shlb
add
dec
stos
mov
rolb
mov
mov
mov
xorl
test
inc
movsb
imul
addr16
popa
hlt
mov
mov
inc
nop
addr16
test
mov
inc
test
test
inc
inc
imul
inc
xchg
addr16
inc
xor
push
inc
jae
pusha
test
inc
pop
imul
push
push
inc
dec
gs
sub
call
inc
inc
jecxz
cmp
addl
adc
inc
hlt
sub
sub
mov
jb
and
xor
test
inc
pop
imul
inc
packuswb
inc
add
addr16
pushl
mov
divl
subl
out
xorl
lret
and
xor
xchg
sub
repz
das
xchg
pushf
add
or
in
imul
lods
xor
add
insl
pop
repz
imul
xor
push
int3
je
mov
inc
cmp
insb
dec
jecxz
xor
shlb
shr
push
fs
pmulhuw
lret
cmp
pop
sbb
loope
aad
clc
xlat
nop
or
and
fcoms
je
mov
call
push
dec
mov
mov
jmp
or
inc
call
pop
icebp
movsb
cmpsl
jecxz
adc
sti
sub
out
jae
sub
jmp
js
imul
cmp
inc
jecxz
lret
cmp
cmpb
pusha
movsb
testl
es
mov
adc
lss
jae
mov
mov
pop
and
dec
les
ljmp
push
dec
inc
sbb
jno
mov
rol
inc
push
push
lcall
fwait
jbe
mov
addl
mull
push
mov
and
mov
mov
roll
ret
jl
pop
push
cs
jg
mov
out
push
or
add
mov
lds
fists
jmp
sbb
mov
lds
mov
xor
mov
push
jns
btr
sub
push
push
adc
and
xor
adc
shlb
in
fldt
pop
mov
sub
lret
addl
je
mov
popa
sbb
add
pop
adc
jp
push
jae
mov
hlt
sbb
fs
and
mov
shrl
mov
mov
add
mov
adc
enter
stos
sub
jb
push
iret
movsb
lds
cmpsb
xlat
out
jmp
pop
sbb
fidivrl
arpl
shlb
push
push
in
rorl
dec
jmp
dec
fadd
mov
add
and
xor
mov
mov
popa
push
fwait
lods
jno
fisubrl
and
stc
lods
and
jae
fistps
in
sub
mov
jno
xchg
push
dec
xchg
inc
xor
xchg
pop
int3
jne
adc
out
xor
shll
sbb
mov
mov
inc
or
inc
mov
or
cmp
push
adc
mov
adc
xchg
sarl
arpl
jae
lea
mov
ret
mov
cltd
dec
sbb
fdivrs
pop
cmc
fdivs
sbb
es
shl
ljmp
jl
add
cmp
push
popa
imul
mov
movsl
mov
movsl
pop
add
rcl
xchg
jns
mov
movsl
add
cltd
mov
mov
pop
mov
inc
cmpl
int
imul
jno
outsl
inc
dec
imul
stos
xor
add
xchg
pop
xchg
js
add
mov
push
pslld
rorl
inc
imul
xor
pop
mov
add
rorl
and
or
cmpl
jae
mov
lcall
or
push
adc
xchg
dec
jno
mov
lret
pop
inc
cs
shlb
scas
into
lret
inc
adc
js
dec
iret
mov
and
cli
icebp
inc
add
bound
inc
push
inc
cmp
sub
xchg
xchg
xor
jb
mov
mov
dec
mov
pop
loope
dec
ja
mov
jo
pop
xor
imul
jno
sub
inc
push
icebp
or
inc
inc
repnz
sub
fistl
dec
pusha
out
xorb
xor
pop
lret
sub
sbb
cmp
or
mov
mov
pop
cld
push
cmp
mov
adc
add
jno
or
push
cmp
add
movsl
insb
out
inc
subl
and
mov
inc
xor
lcall
test
loop
repnz
inc
inc
and
loope
inc
mov
ret
roll
inc
inc
pop
fsubrs
push
clc
sub
cmp
push
cmp
adc
faddl
cmp
aaa
hlt
mov
call
push
adc
sbbb
outsb
ret
mov
ljmp
inc
xor
jns
mov
sub
lcall
insl
ret
xchg
aaa
or
imul
out
pop
fsubs
inc
lods
fdivs
mov
gs
mov
jp
imul
movsb
jp
xor
inc
xchg
sub
inc
popa
mov
and
jecxz
loop
jbe
inc
jae
addl
arpl
and
gs
fiadds
stos
popa
cli
loop
and
ret
mov
ret
sub
bound
add
in
inc
arpl
popa
add
mov
lret
ror
jecxz
mov
andl
sub
repz
insb
popa
xchg
pop
rorl
inc
sbb
out
inc
and
and
xor
push
sub
dec
mov
pusha
sub
sbbw
repnz
jno
nop
loope
pushl
xchg
sub
imul
add
and
jmp
and
adc
mov
and
inc
popa
push
icebp
adc
cmp
out
inc
mov
inc
and
and
iret
and
popa
or
mov
mov
jle
fwait
sbb
mov
dec
mov
mov
lret
mov
mov
cmp
jg
jg
fistpll
fs
pop
bound
ds
adc
push
les
sarl
sub
out
adc
cli
cs
dec
out
mov
movsb
jno
aam
enter
mov
je
jns
mov
inc
roll
xor
inc
and
jbe
sub
or
push
les
add
jb
sub
mov
fcmovne
fdivrp
sbb
jle
sbb
pop
xlat
mov
filds
mov
lds
cmc
fstpl
dec
jmp
add
cltd
rcl
cmp
out
cli
flds
lret
sbb
pop
pop
jb
lds
or
mov
shll
inc
pop
jp
orb
ss
shll
push
arpl
lret
pop
mov
jb
lds
jle
cwtl
mov
data16
and
pop
mov
push
mov
outsb
xor
ljmp
inc
pop
jno,pt
jle,pn
sub
inc
and
add
loope
push
sub
cmpsl
sbb
jle
sub
sub
inc
jle
shll
pop
lods
sub
jle
mov
pop
rcll
sub
icebp
xor
push
jle
scas
mov
outsl
fs
push
jmp
cltd
sub
jmp
xor
fdivl
addr16
addr16
arpl
lds
xor
shl
fcmovnb
test
mov
adc
sub
jmp
mov
insl
es
popa
sarl
adcl
data16
xor
xor
lods
and
mov
xchg
sub
push
xor
mov
dec
push
addb
sub
ss
inc
jb,pt
bound
outsb
jbe
sub
popa
leave
xor
jp
jbe,pt
mov
cs
sbb
sub
mov
sti
sub
in
loope
sbb
es
cmp
jmp
dec
mov
int3
xor
outsb
jle
rdpmc
popa
push
push
inc
les
jae
adcb
gs
es
test
aad
sub
imul
pop
push
pop
jbe
sub
push
push
jle
popf
sub
in
cltd
or
push
inc
xor
subl
push
roll
and
mov
iret
inc
shll
js
out
ret
jle
sub
inc
jle
inc
in
pop
xor
jbe
push
stos
jle
inc
push
mov
ja
add
jns
mov
orl
inc
ret
pop
jb
inc
jle
orl
push
add
xor
xchg
xor
cmc
mov
jg
mov
ret
pusha
pop
cmc
popa
inc
sub
push
repnz
pop
mov
pop
movsl
pop
jb
xor
inc
mov
sub
fwait
jb
popl
in
xor
mov
pop
cmp
push
inc
outsb
popa
mov
adc
push
jo
mov
imul
mov
insl
inc
xor
jbe
pushf
lods
repz
stc
inc
popf
cmp
loopne
inc
ret
and
inc
test
sbb
shll
mov
inc
pusha
and
sbb
jbe
pop
sub
jne
pushf
test
inc
push
cmp
sbb
test
adc
aad
cmp
xor
mov
fcomip
or
gs
push
or
mov
mov
cs
lods
roll
mov
lahf
dec
pop
jmp
xor
std
xor
jmp
cmp
flds
xor
icebp
inc
dec
popa
es
or
inc
cmp
scas
lcall
inc
dec
inc
push
or
pop
mov
cmpsl
shll
inc
inc
pop
mov
sti
ret
sub
dec
adc
mov
out
popa
xchg
mov
es
jbe
mov
sbb
jnp
nop
mulb
int3
test
mov
orl
add
mov
inc
mov
inc
fmull
stos
roll
adc
lods
cmpsl
inc
mov
ljmp
in
inc
es
sub
out
fmull
jno
xchg
adc
dec
rorl
sti
jno
xor
ds
add
push
add
les
gs
and
out
outsb
inc
inc
mov
in
xchg
push
test
test
xchg
inc
pop
or
xchg
sub
clc
mov
jb
inc
push
and
aam
inc
inc
cmp
jbe
add
repnz
cmp
inc
xor
ss
xor
sub
or
popa
data16
dec
mov
pop
push
inc
push
jb,pt
test
jge
mov
bound
in
movsl
pop
js
jb
lcall
jbe
icebp
nop
adc
es
repz
xor
mov
dec
loope
jp
subl
push
sbbl
mov
leave
mov
mov
into
add
lcall
push
fs
push
inc
into
push
mov
or
jmp
pop
xor
outsb
inc
cmp
push
test
mov
popa
stc
push
gs
vmovq
lahf
test
repnz
mov
bound
xchg
push
push
icebp
aaa
jb
sti
hlt
xchg
aad
xor
pop
loop
jae
xor
popa
hlt
gs
mov
subl
mov
inc
fdivr
add
add
mov
or
ss
lods
and
cmp
xor
xor
aaa
add
js
hlt
adc
adc
sbb
gs
movsl
pop
add
ja
adc
mov
xor
push
pop
or
adc
mov
sub
mov
aaa
imul
pop
test
loope
adc
outsb
inc
insl
dec
dec
cmc
loop
push
xchg
test
mov
push
in
dec
aad
popa
inc
xchg
ror
in
xorb
fimuls
idivl
aad
mov
sub
and
jmp
sahf
orl
adc
and
dec
movsl
adc
cmpsb
mov
mov
jae
adcb
dec
and
hlt
dec
popa
adc
loope
shrl
mov
inc
mov
ss
mov
inc
inc
addr16
inc
adc
daa
add
add
in
aam
les
test
addr16
inc
and
add
xchg
inc
arpl
test
inc
mov
inc
shll
mov
jno
test
test
test
inc
hlt
addr16
aam
les
test
addr16
inc
and
adc
jecxz
shll
ret
mov
mov
push
sti
test
cmc
inc
icebp
imul
imul
adc
lcall
in
frstor
inc
push
cmp
inc
std
inc
stc
imul
addr16
cmp
mov
stc
cmc
inc
icebp
imul
jecxz
sub
sbb
aam
popa
add
xorb
bnd
pop
lods
xchg
mov
cmpsl
dec
lds
jge
data16
andl
mov
popa
cmp
inc
in
ljmp
loope,pn
outsb
xor
adc
cmpsl
inc
xor
inc
cs
mov
test
test
cs
es
sub
pop
fidivrl
gs
xor
mov
lds
test
sub
inc
adc
in
repnz
test
xor
add
mov
test
ret
test
inc
mov
or
out
inc
inc
fs
sbb
push
test
jecxz
popf
inc
pusha
sub
cmp
mov
mov
dec
test
movsb
out
stos
sub
inc
push
inc
aas
and
shrb
stos
sub
and
xlat
repnz
clc
sti
sub
pop
xor
pop
xor
sti
cmovno
inc
inc
add
cmp
xor
and
in
repnz
sarb
mov
push
fwait
ret
mov
pop
xchg
call
shlb
pusha
mull
push
xlat
lret
inc
jne
xor
xor
xchg
mov
and
negl
ret
and
inc
jbe
inc
cmpsl
inc
and
dec
outsl
outsb
xor
out
push
stc
xchg
sti
xor
xor
not
dec
and
xchg
xor
xor
inc
jae
stos
mov
pop
sbb
push
icebp
stos
inc
repz
popa
pop
xor
jbe
xor
mov
scas
popa
xor
xor
jmp
and
sbbb
loopne
and
lock
les
scas
xor
jmp
xor
xchg
cmpsl
out
bound
push
movsl
or
xor
inc
xor
inc
notl
lret
movsl
ret
xor
mov
adc
cmpsb
xchg
into
stos
fstl
add
shll
cmp
fiaddl
outsb
push
lock
cmpsl
add
call
adc
and
dec
ret
xor
sub
fbld
hlt
push
jb
xchg
and
insb
cld
xchg
stos
loope
jae
stos
cwtl
sub
insb
insl
jp
stos
jmp
sbb
cmpsl
or
push
int
in
bound
out
mov
movsl
ret
fisubrs
mov
test
jae
sub
add
xchg
pushf
bound
aas
push
mov
daa
pop
or
pop
shll
mov
loop
xchg
stos
shlb
lret
sti
stc
shll
push
js
out
pop
pop
jb
cmc
mov
bound
sbb
pop
or
push
popf
sub
loop
out
inc
les
in
jnp
aad
shlb
mov
jnp
imul
aad
aas
push
mov
clc
mov
add
sbb
add
mov
cs
fs
and
dec
push
push
add
mov
and
jbe
dec
jle
xchg
fwait
sub
xchg
cmp
cmp
in
icebp
cmc
stc
std
add
ficoms
adc
movsb
test
mov
aad
add
nop
push
fadds
push
and
mov
adc
push
inc
mov
jmp
xlat
int3
loope
pop
lds
je
loop
out
mov
push
cmp
mov
lahf
push
dec
adc
not
aas
sbb
popa
add
arpl
push
mov
es
mov
push
mov
and
mov
mov
vsqrtss
stos
lret
mov
push
xor
push
int
shrl
roll
cmpsb
repz
xchg
sub
int
jmp
inc
data16
jb
in
push
and
pushl
pop
call
sbb
jge
adc
movsl
in
int
sbb
mov
adc
add
dec
shrb
mov
jb
rol
out
mov
xchg
xor
loop
loopew
mov
gs
loop
cmp
adc
and
and
sub
popa
rclb
rcll
and
dec
mov
xor
inc
testl
inc
pop
mov
icebp
mov
mov
xor
pop
push
fisubl
mov
sbb
sbb
push
mov
pop
inc
jne
repnz
sbb
jo
mov
jle
sbb
xor
cli
fnsave
add
jmp
xor
enter
jmp
dec
cltd
cltd
sub
bound
sbb
bound
cmpl
ret
arpl
loop
aaa
addl
dec
out
in
scas
fcomps
jle
mov
inc
inc
sbb
mov
sub
xor
mov
cmpsb
rcr
mov
sub
xchg
loope
out
repnz
mov
arpl
dec
and
out
es
xchg
xorb
push
in
xor
mov
test
repnz
ret
outsb
pop
repnz
mov
ret
jnp
inc
inc
in
mov
inc
mov
cmp
ret
ljmp
sbb
cmpsb
loop
loop
push
pusha
arpl
out
fisubl
enter
cltd
les
push
ljmp
push
xor
jbe
ss
bound
repz
cmp
pusha
sub
push
sub
bound
xchg
popf
shrb
push
mov
mov
mov
dec
cvtpi2ps
and
ret
mov
mov
movsb
xchg
sbb
popa
arpl
sarl
inc
pop
add
and
cwtl
and
fldl
push
mov
dec
jge
mov
xchg
cltd
lea
mov
scas
mov
stc
andl
cltd
and
xor
in
mov
mov
sbb
xor
cmpb
inc
movsb
push
mov
ret
and
cmp
loop
pop
aas
movsb
xor
ljmp
roll
gs
hlt
leave
std
les
fisubrl
in
stos
testb
jo
or
shlb
loop
inc
push
movsb
adc
push
xchg
push
sbb
imul
pusha
inc
lods
and
and
and
shll
xchg
jo
loope
cmp
push
fiaddl
aam
pop
ds
ljmp
das
sub
popa
testb
dec
sbb
daa
movsb
sbb
iret
popf
mov
mov
add
jns
xor
inc
ficoms
xor
or
jae
inc
dec
jl
test
xor
and
push
sahf
sbb
dec
mov
inc
and
aaa
out
mov
or
push
sub
sarl
rorl
push
inc
sub
inc
xor
sub
and
sub
movsl
sub
push
adc
push
lret
pop
stos
xchg
mov
into
adc
fldenv
orl
push
xor
push
xchg
test
lds
inc
cmp
xor
inc
and
mov
inc
loop
ret
xor
inc
and
mov
inc
shll
test
inc
subl
xor
inc
adc
daa
in
les
test
test
repz
ret
imul
ss
xchg
mov
xchg
mov
sub
xorl
addr16
lods
inc
addr16
dec
dec
xchg
mov
adc
adc
inc
pop
push
andb
xor
mov
xchg
cmc
mov
jae,pn
icebp
dec
push
mov
jmp
xchg
sarb
inc
loop
xchg
mov
ljmp
repz
mov
lods
das
jae
inc
inc
addr16
popa
ja
arpl
mov
ljmp
sbbb
cmp
xor
gs
and
popl
dec
mov
mov
daa
lahf
movsl
movsb
adc
and
and
ret
pop
cmpsb
sub
gs
sbb
and
neg
loope
es
cs
stos
mov
mov
mov
cmc
mov
data16
xor
and
sahf
add
sub
movsb
jo
pushf
mov
sbb
enter
push
dec
sbb
adc
adc
or
mov
or
cmp
inc
inc
imul
addr16
jae
mov
ret
xor
add
imul
sbb
inc
in
idivl
adc
cmp
dec
and
push
dec
loopne
xchg
mov
mov
or
test
stc
and
push
addl
jmp
sub
xor
and
or
popa
mov
out
or
lods
and
inc
cmc
sub
movsl
stos
cltd
mov
sub
dec
les
test
push
test
sub
inc
int
adcl
jp
adc
popf
mov
inc
insl
xor
adc
xor
inc
push
imul
adc
inc
xor
inc
imul
imul
jne
jecxz
xchg
ret
inc
test
mov
inc
andl
arpl
jns
inc
jge
and
lods
test
dec
or
pop
mov
loopne
push
lods
and
les
xor
dec
mov
sub
arpl
xchg
inc
and
cs
dec
je
mov
push
imul
js
mov
test
inc
pop
push
daa
insl
imul
mov
sbb
mov
inc
lods
addr16
add
test
mov
inc
mov
xor
cmp
mov
pop
xor
leave
sbb
lret
pop
imul
lods
test
fldcw
mov
inc
push
ljmp
insb
imul
addr16
sub
pop
les
jne
lods
mov
test
addr16
adc
push
jp
popa
daa
and
popa
sub
orb
inc
mov
mov
jbe
push
lods
xchg
movsb
and
add
dec
sbb
mov
aad
xchg
gs
popa
and
cmp
and
movsl
dec
bound
xchg
add
xor
sbb
in
cmp
fs
xchg
inc
or
popa
stos
xor
push
xchg
imul
push
ds
movsl
pop
mov
adc
arpl
imul
cmp
pop
sbbl
icebp
inc
or
int
add
test
push
inc
popa
data16
jg
aam
xchg
sbb
mov
inc
and
jb
and
cmpsl
addl
xor
lahf
xchg
dec
mov
inc
xor
fidivs
movsl
xor
mov
imul
shll
xor
dec
lea
icebp
cmp
out
jo
in
in
fwait
mul
int
xlat
cmp
xchg
sbb
popf
test
das
and
jnp
ja
pop
cmp
fwait
and
pop
mov
imul
adc
pusha
and
movsb
fidivrs
and
and
or
and
adc
into
jbe
add
movsb
adc
and
pop
pushf
or
xchg
adc
sbb
cmpsw
and
fnsave
and
mov
lret
add
fistpl
cmp
and
mov
test
dec
or
ss
inc
and
mov
scas
sbb
push
das
jge
mulb
cmp
push
subb
mov
cmc
add
fsubrs
es
les
imul
cmpsl
mov
push
std
cmpsb
push
test
nop
mov
lock
cwtl
and
push
and
jg
dec
sub
jno
mov
adc
pop
push
xor
and
adc
cmpsl
xor
and
fisubrl
adc
and
jo
mov
lods
cmpb
push
lods
xor
lea
and
mov
cmp
shlb
or
shl
sbb
push
iret
mov
fstl
mov
ja
adc
imul
jno
mov
in
mov
xlat
cltd
out
loopne
mov
popf
cmp
adc
or
lock
sbb
outsb
adc
sahf
in
fsubl
fstl
sbb
jne
fidivs
inc
xor
int3
push
sbb
leave
and
shll
and
fs
jbe
scas
push
cmp
push
lods
jb
das
and
out
adc
or
and
adc
xchg
jg,pt
and
orb
out
mov
mov
xor
sub
and
xchg
insb
lods
in
and
inc
arpl
cmp
sub
stos
imul
lods
and
jmp
mov
and
popa
shll
sub
pop
into
test
xor
mov
pushf
sub
adc
cmp
cltd
fwait
rolb
adc
pop
bound
test
adc
cmp
and
inc
xor
mov
xchg
sub
xor
or
inc
sbb
ds
movsb
or
xchg
jno
xor
pop
jno
xor
out
jno
xor
jno
xchg
xor
jno
bound
jno
xor
xchg
jno
xor
pop
jno
xor
out
jno
xor
and
push
xchg
in
movsl
pop
jns
jmp
push
in
sub
sub
fwait
mov
inc
adc
cmp
push
std
dec
andl
xor
push
add
loope
lds
inc
daa
aad
push
loopne
popa
sub
adc
loop
mov
inc
inc
pop
cmpsb
pop
xchg
inc
out
data16
mov
add
imul
shrl
js
cld
rolb
fildl
sub
nop
jbe
dec
popa
jns
das
inc
cmp
jge
std
pop
outsl
sub
push
test
scas
inc
sub
loope
ljmp
dec
es
inc
cltd
cmp
outsb
or
popf
mov
xor
loop
mov
mov
movsl
loop
xchg
ds
test
sub
das
and
arpl
mov
aad
push
fnstcw
mov
clc
mov
xchg
inc
lods
imulb
das
jns
xlat
movsb
xchg
aad
imul
pop
jp
addr16
stos
sub
sbb
sub
adc
xchg
in
jne
jmp
add
shll
dec
sbb
icebp
stc
jno
loop
pop
mov
dec
ljmp
or
ret
jbe
das
adc
lahf
jle
xor
jmp
inc
xchg
fsubl
lret
push
jne
pop
data16
faddp
mov
loop
bound
movsb
out
cmp
ds
subl
pop
xchg
add
mov
mov
out
out
cmp
stc
inc
ja
mov
pop
in
testb
mov
arpl
gs
loope
ja
lahf
or
mov
movsb
aaa
pop
aas
pop
inc
push
dec
pop
dec
pop
inc
pop
dec
dec
push
cmp
cmp
push
sbb
sub
or
cld
rolb
in
out
mov
loope
mov
and
out
xor
mov
inc
cld
mov
dec
adc
subb
xabort
addb
int3
inc
hlt
push
mov
push
push
outsl
lods
jge
push
lock
sti
sub
mov
dec
test
insl
outsl
or
dec
decl
xor
dec
fs
xchg
jne
and
adc
pop
fdiv
dec
sub
add
mov
je
pop
sub
mov
and
or
fwait
daa
out
shrl
sbb
enter
inc
call
hlt
mov
pushf
clc
cmp
movzbl
lea
lea
jmp
push
lea
call
pushf
lea
jmp
call
rcl
jmp
in
cld
cli
dec
test
daa
out
shrb
dec
mov
dec
add
dec
roll
cmp
inc
mov
pop
and
imul
adc
cli
fmuls
mov
lret
or
decb
fbld
mov
xlat
cmp
cmp
push
pop
insb
pushf
fwait
imul
lcall
fisubrs
sbb
add
xchg
arpl
leave
fidivrs
xchg
mov
test
int
push
popf
jmp
fadds
push
jmp
jb
dec
pmulhuw
pop
fs
push
cmpsl
xchg
inc
mov
outsl
cld
cmc
sahf
or
sbb
test
je
ljmp
xor
test
ja
lret
add
xor
jb
in
icebp
adc
mov
stos
pop
enter
mov
inc
dec
call
sub
fnsave
fwait
pop
xor
pop
iret
dec
xor
fmull
scas
cwtl
orb
mov
fimull
cmc
lds
jnp
cmp
leave
mov
or
scas
and
sbb
jno
cld
movsl
and
insb
mov
cmp
neg
outsb
jl
inc
lods
loope
fisubrs
stos
mov
pop
sbb
addr16
sti
nop
pusha
mov
mov
out
jp
xlat
add
repnz
xor
ja
push
lret
inc
lock
sub
aam
or
sub
add
scas
std
leave
inc
movsb
jmp
fs
call
pushf
jmp
push
test
not
clc
neg
jmp
and
pop
push
in
mov
loop
inc
sbb
jno
imul
hlt
sub
push
shlb
or
push
push
ss
cmc
mov
and
addb
push
loope
push
cmpsl
dec
dec
add
and
icebp
aas
leave
inc
filds
inc
jne
lcall
adc
hlt
in
push
lcall
call
fwait
loopne
in
pop
or
loope
js
mov
repnz
jp
imull
es
and
or
pop
sub
stc
inc
movsb
mov
and
div
and
in
jno
loopne
loopne
dec
enter
idiv
aaa
mov
sbb
daa
rorl
stos
or
out
mov
adc
test
inc
rcl
pop
dec
sbb
jbe
xor
outsb
sbb
sbb
push
lea
jae
clc
bts
call
add
inc
jb
imul
insb
add
dec
or
pushf
out
mov
jecxz
fmul
pop
clc
into
cltd
test
push
xchg
cli
gs
mov
stc
or
mov
stos
fnstcw
adc
inc
insl
arpl
sub
mov
pop
loope
cli
ret
xchg
shrb
insb
in
jp
xchg
mov
pop
in
dec
aam
gs
push
shll
daa
cmp
jns
push
push
sub
dec
cmp
outsw
test
or
and
jno
xor
dec
push
jge
inc
mov
or
pushf
rcrl
les
dec
push
jge
enter
daa
mov
sbb
or
and
lret
inc
mov
inc
mov
xchg
jecxz
cmp
mov
call
in
jg
lods
subb
cmp
mov
pop
subl
mov
lock
movsl
aas
or
in
scas
pop
mov
scas
js
pop
movsl
sti
aas
mov
dec
xor
mov
xchg
cmc
pop
inc
insl
adc
jne,pt
sbb
in
adcb
test
lret
jmp
fbstp
lock
inc
adc
mov
inc
mov
mov
ret
xor
ret
int3
fwait
pop
stc
leave
jecxz
andb
roll
stos
cmp
mov
mov
roll
mov
or
mov
mov
pop
xchg
lret
inc
test
cmp
call
add
xchg
ja
rorb
pop
lahf
nop
movsl
push
addr16
push
scas
out
mov
sub
sub
sbb
sbb
or
inc
cmp
int3
inc
outsl
sbbb
fsub
sbb
xchg
les
adc
cltd
xchg
push
loope
test
cli
inc
hlt
les
xlat
imul
pop
mov
mov
stos
aas
inc
out
lock
hlt
in
xchg
add
jne
and
outsl
repnz
jecxz
sub
fs
jae
pusha
test
xor
mov
movb
mov
lea
jg
call
pushf
pushl
lea
jae
cmp
xor
pusha
mov
lea
call
push
pusha
lea
jae
xchg
push
setb
xchg
mov
dec
pusha
inc
not
lea
ja
mov
pushf
push
jmp
int
push
or
pushf
loop
stc
dec
xchg
xorb
sub
insl
pop
adc
cmp
repz
imul
andb
andb
leave
jno
ja
inc
adc
andb
sub
fcoms
test
imul
cmp
mov
test
mov
mov
cmp
xchg
cld
mov
lea
and
testb
popf
jp
xchg
loopne
pop
in
sbb
adcb
scas
je
repnz
mov
mov
rcl
mov
orb
sarb
neg
and
outsl
mov
andl
inc
loop
pop
jle
sub
lock
test
roll
mov
inc
xchg
mov
mov
sbb
mov
in
xor
addl
push
mov
adc
arpl
inc
pop
jg
add
push
dec
xor
pop
xchg
rcrl
cmp
jg
fldl
xor
out
cli
inc
xor
xor
test
inc
sbb
mov
inc
pop
rorb
cmpl
bound
push
fdivrs
cmp
sub
ss
jo
arpl
ds
clc
dec
fnclex
xlat
arpl
cmp
mov
into
push
pop
dec
dec
fwait
jne
xchg
inc
call
or
mov
xor
pop
cltd
mov
insb
and
xchg
sbbl
sbb
sbb
movsl
scas
mov
mov
je
pop
mov
sbbb
mov
out
std
pushf
jecxz
push
push
lahf
cmp
in
pusha
sbb
fcmovne
inc
and
iret
mov
jle
fst
popa
lret
mov
repz
mov
aaa
sbb
xchg
addr16
sub
ret
data16
adc
lods
orb
add
add
out
xchg
mov
into
jecxz
notb
filds
and
inc
rcrl
mov
fsubrp
mov
jne
jl
sbb
push
shlb
xor
nop
repnz
sub
sub
inc
pop
in
adc
mov
fld
and
pop
push
inc
mov
pop
sbb
inc
mov
push
roll
mov
pop
add
stos
addr16
cmp
roll
mov
test
or
or
aas
inc
cs
cmp
pop
std
push
shll
cwtl
stos
push
insl
xchg
scas
xor
punpckhdq
pushf
push
jb
mov
sub
jns
push
in
mov
leave
push
in
imul
add
adc
je
outsl
nop
sbb
out
lret
push
inc
pop
in
sub
sub
jmp
lods
lods
cmp
inc
cli
jne
fistl
jo
lock
and
jl
loopne
and
insl
aaa
jno
and
cmpsl
pop
xchg
jmp
pop
aad
stos
rorl
push
dec
mov
pop
call
sub
xchg
dec
sub
sahf
decb
push
jmp
dec
fisubrl
xor
imul
ret
or
addr16
jns
mov
imul
cmp
sub
rcll
test
sbb
sahf
pop
adc
aaa
movsl
lcall
push
mov
push
lahf
aad
push
bound
lds
into
xchg
out
cmp
xchg
imul
movzbl
cmp
cmp
mov
stc
stc
test
cmpb
call
cmp
xor
mov
pushf
bt
jmp
mov
push
pushl
pushf
mov
lods
mov
pusha
call
fld
mov
in
jg
xor
js
mov
pop
xor
in
push
xlat
popf
loop
pusha
stos
push
ret
mov
mov
xor
xchg
into
pop
cmp
fsubr
fisubs
scas
sbbb
jl
add
jge
out
stos
repz
mov
imul
pop
push
jl
wrmsr
push
mov
adc
test
xor
lret
mov
push
test
jne
xor
call
and
addr16
mov
sbb
int3
dec
jp
cmp
out
aad
js
popf
hlt
outsb
or
fistpll
mov
xchg
idivl
loope
pusha
cltd
push
jge
out
pop
sbb
dec
aaa
mov
test
lahf
std
jmp
lock
inc
js
sbb
dec
fcoms
fdivl
inc
or
pop
in
incl
mov
adc
sahf
out
mov
test
dec
rorb
call
cltd
xchg
sub
xchg
dec
sti
mov
mov
xor
in
mov
xchg
and
adc
inc
roll
pushf
popa
sub
push
lea
das
andb
mov
ljmp
in
inc
add
sub
mov
int
xchg
lods
insb
cmc
inc
xlat
test
movsb
pop
mov
andb
adc
pop
testb
loope
or
addr16
es
enter
scas
stc
imul
jl
mov
in
repz
mov
cmp
out
push
cld
and
add
mov
sub
pop
lods
xchg
add
push
cmp
and
stc
iret
push
or
push
sub
jo
and
lods
mov
loopne
pop
push
push
xchg
movb
fildl
mov
dec
neg
iret
and
fs
jg
add
jo
and
outsl
int
inc
jo
ret
aam
xchg
push
xor
inc
push
jge
xchg
loope
fwait
jle
es
fucomi
push
dec
aas
mov
xlat
xor
in
mov
cli
jge
cld
lret
aaa
add
push
jmp
sub
jle
in
mov
imul
xchg
jae
aam
and
subl
pushl
aas
sbb
mov
cltd
gs
dec
xchg
dec
ret
lea
mov
mov
jbe
fsubrp
aas
mov
pop
out
dec
ja
xchg
ret
and
mov
xchg
lret
sub
mov
dec
add
out
sub
sbbl
xchg
sahf
mov
es
pusha
adc
mov
fnsave
sti
mov
jecxz
sub
mov
in
xchg
jae
inc
cmp
dec
dec
xor
cs
insb
add
ret
mov
aas
cs
jo
iret
cmp
pop
fldt
mov
clc
xor
mov
negb
ss
dec
or
and
add
iret
fidivl
jo
mov
out
enter
ds
dec
adc
adc
xor
incl
addr16
test
cltd
outsl
or
test
decl
hlt
imul
jle
jb
sbb
fxch
xor
in
push
xor
dec
sub
outsb
push
or
add
pushf
jmp
setnp
setge
lea
mov
pushl
jmp
adc
sub
mov
cld
loop
sbb
mov
or
xchg
out
cmp
roll
mov
shrl
mov
mov
ss
xchg
inc
aam
scas
cmpsb
int
dec
inc
cwtl
pusha
insl
pop
addb
jne
push
dec
lcall
and
clc
push
xchg
pop
mov
push
sub
fmull
adc
shll
push
mov
push
xor
sbb
pop
test
sbb
in
rcrb
insl
xlat
mov
and
inc
repz
fs
mov
mov
fs
adc
and
push
aas
push
push
lock
lds
dec
push
ret
leave
mov
and
add
inc
lea
dec
jge
push
jae
or
push
mov
scas
pop
loop
xor
shufps
leave
push
sbb
call
les
cmp
and
bt
call
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jmp
les
inc
lahf
clc
gs
movsl
lock
mov
sbb
inc
pop
lret
nop
dec
int
or
pop
mov
push
pop
sub
xchg
jge
repz
cmp
push
add
mov
push
add
jns
das
das
imul
cmp
mov
inc
aas
mov
cmp
sbb
or
push
repnz
scas
stos
mov
lcall
fisubrs
ret
enter
outsl
push
sub
in
or
push
push
in
push
inc
dec
mov
pop
repz
andl
mov
lods
fadd
test
xor
and
cmp
fsts
fcmovb
movsb
ror
adc
movsb
lock
cld
inc
and
hlt
sub
xchg
and
sub
ljmp
sbb
xor
movsb
aas
sbbl
inc
repnz
int3
sarl
sub
jno
xchg
xchg
nop
cmp
mov
icebp
roll
mov
xor
fucom
mov
out
push
fmuls
inc
in
xor
xor
mov
mov
push
cmp
cmp
inc
dec
push
addr16
and
lret
push
and
dec
mov
mov
ds
mov
lret
dec
fidivrl
aad
repnz
dec
mov
push
or
jle
push
idivb
shlb
popf
lods
arpl
pop
daa
xchg
push
inc
test
fcmovu
mov
cwtl
nop
adc
or
ljmp
pop
gs
cwtl
dec
addr16
lret
test
jmp
arpl
loopne
adc
test
sub
push
cmpsb
mov
mov
lds
enter
lret
sub
xorb
out
ljmp
push
pop
scas
scas
rcrb
xor
stc
mov
loop
bound
repz
xor
cli
add
popa
adc
shrb
adc
or
loopne
inc
xchg
mov
inc
or
mov
xorl
sub
xchg
adc
repnz
or
rcrb
sbbb
fs
jne
bswap
pusha
lea
lea
movb
lahf
movsbl
mov
mov
sets
pushf
pusha
lea
pushf
mov
jmp
xorl
in
jo
and
aas
xchg
jbe
dec
pop
add
pop
mov
xchg
imull
ja
nop
add
test
ret
jno
bt
xchg
std
popf
mov
push
cmpsb
add
xchg
test
negl
fbld
push
or
sbb
fisttpll
and
lock
sub
dec
pushf
xor
sbb
idivl
sub
jecxz
or
sub
lcall
xchg
test
fwait
nop
ror
aad
cld
pop
mov
cmc
hlt
cmp
push
add
adc
lock
ret
or
or
daa
add
push
test
test
sahf
test
cmp
shll
lcall
add
add
jle
es
cmp
jecxz
stc
and
sbb
movsl
repz
test
cmp
mov
inc
fwait
nop
shr
loope
mov
or
sub
jge
pop
cmp
jmp
sbb
adc
ja
movsb
stc
mov
mov
xor
pusha
lret
and
pop
lret
ja
mov
lret
imul
cld
les
xchg
jne
out
mov
jecxz
sahf
sbb
repz
add
mov
vmovaps
testl
sub
call
push
xchg
jl
in
das
xchg
rcrb
mov
mov
or
add
leave
push
in
daa
f2xm1
shlb
leave
push
stos
cmc
push
scas
adc
repnz
ja
mov
imul
sbb
inc
cmp
or
xchg
pop
sti
jp
loopne
int3
ds
inc
clc
mov
pusha
adc
xchg
xchg
mov
outsb
ret
inc
push
data16
inc
jbe
push
gs
jg
fs
jo
push
sub
lret
xor
inc
fstl
enter
jno
gs
xchg
xchg
std
inc
dec
jne
pop
sub
lods
stos
xchg
cltd
cld
jecxz
fwait
addr16
mov
or
pop
shrb
inc
int3
sbb
lds
outsb
gs
lods
call
pop
sub
jecxz
mov
aas
cs
aad
or
pop
cmp
jp
xchg
addr16
mov
push
adc
push
add
jmp
jno
int
shlb
dec
push
repnz
popa
out
shll
test
pusha
cs
mov
ffreep
lahf
clc
out
xlat
cs
loope
mov
inc
ret
adc
jmp
pushl
popl
bt
call
pop
ds
push
mov
clc
pop
mov
adc
sbb
sti
scas
jbe
dec
stos
lcall
mov
mov
stos
inc
daa
ja
rorl
lods
xchg
popa
jns
or
jecxz
sub
out
ror
les
push
mov
popf
in
shrl
ljmp
mov
inc
pop
pop
fs
and
subl
test
loope
mov
lods
push
test
jmp
out
or
stc
lds
jnp
mov
mov
gs
mov
push
aaa
in
gs
and
aaa
scas
push
push
jmp
push
add
add
pop
and
jmp
lcall
sbb
or
jl
in
orl
inc
mov
cmc
jle
jmp
cmp
adc
dec
stc
jns
mov
lea
jmp
mov
pushf
mov
mov
movzbw
movzbw
movsbw
movb
mov
lea
pushl
mov
jmp
stos
mov
pop
mov
mov
mov
mov
push
jne
and
cmp
divb
shlb
jae
sbb
test
pop
sahf
add
xchg
dec
xor
xchg
shl
and
or
jno
cmp
and
sbb
sub
lock
inc
xor
xchg
jns
adc
jb
js
or
push
mov
sbb
push
test
push
mov
or
ljmp
pushf
mov
push
xlat
enter
cmp
sub
scas
popf
out
bnd
sysenter
iret
and
mov
push
inc
dec
mov
fisttpl
into
pop
xchg
jnp
ret
adc
xchg
pop
out
jo
xor
js
sub
pop
push
adc
rcrb
cmp
xchg
xchg
push
clc
sti
iret
in
ja
add
enter
jmp
fsubl
daa
pop
iret
je
addr16
adc
shlb
andb
jp
pop
insb
lret
or
mov
sbb
cmpb
xchg
push
repz
mov
sbb
fwait
xor
push
cmc
call
insl
lret
mov
jecxz
pop
aaa
or
xor
xchg
mov
aam
xchg
dec
xchg
jns
xchg
push
add
cmc
stos
ret
test
movsl
xor
aad
in
out
arpl
in
fwait
mov
cmp
cs
pusha
test
je
orb
lahf
pop
psubsw
xchg
call
xchg
xchg
dec
fidivl
std
lret
fisubs
xor
pop
test
shrl
popf
add
mov
mov
cmpsb
pop
loop
mov
pushf
arpl
fistpl
jns
ret
cmc
int3
movsb
jmp
sbb
mov
mov
push
xor
bt
test
pushl
repnz
mov
call
call
jmp
pushf
lea
jb
call
inc
mov
mul
pushf
and
and
sbb
sub
and
das
aad
hlt
stc
ljmp
cld
sarb
add
cmp
pop
cwtl
dec
std
bound
sub
mov
cmp
jb
sub
inc
or
lods
mov
adc
ljmp
sbbb
cmp
dec
mov
sbb
sub
mov
aam
xor
je
xor
pop
fadds
or
pusha
push
mov
lea
je
seta
jg
mov
mov
movzbw
lahf
lea
call
movl
push
jmp
pusha
movb
lea
jne
clc
jmp
adc
adc
jecxz
and
xor
repz
cmp
add
or
mov
icebp
jg
sub
jns
add
mov
cmp
insb
cmp
push
data16
pop
inc
xor
lcall
xor
mov
jbe
movsb
xor
adc
jb
popa
aad
int
xchg
adc
ja
xchg
ja
imul
jbe
jae
jbe
mov
ljmp
lods
or
aam
repnz
pop
push
cmp
mov
lahf
push
pop
daa
xchg
fisttps
push
mov
scas
mov
fadd
mov
sub
mov
sahf
xchg
and
ljmp
push
jecxz
int
or
sbb
rolb
inc
jl
jg
aad
stos
pop
cmp
pop
outsl
push
addr16
dec
sti
fstps
push
fcomps
pop
ja
scas
test
inc
jmp
or
adc
testb
aam
add
test
jbe
std
jne
jge
push
ds
push
xchg
sbb
xchg
test
fcomi
push
fists
push
gs
subb
pop
jg
scas
jp
or
dec
fsubs
ret
pop
into
mov
shl
test
loopne
cmp
xor
adc
sbb
iret
xchg
push
cmpsb
or
push
ljmp
cmp
push
inc
inc
dec
bnd
add
sub
jecxz
ljmp
icebp
cmp
cs
fstpl
jno
push
scas
add
dec
sub
dec
xchg
push
outsb
pusha
dec
mov
pop
and
in
mov
xchg
adc
pop
inc
push
dec
sahf
jns
jecxz
mov
test
sub
imul
gs
les
add
data16
addr16
std
mov
fwait
testl
cli
aas
cmp
or
mov
insl
pop
lods
sub
jecxz
or
xor
cmp
icebp
adc
pop
sbb
dec
test
fmuls
or
das
pop
mov
sbb
jnp
lods
and
nop
fstpt
dec
dec
out
and
and
int3
push
sbb
mov
pushf
pushl
popl
pushf
mov
pushl
ret
push
ds
jecxz
sbb
adc
pusha
inc
mov
inc
xstore-rng
cmpsl
inc
xor
ljmp
push
add
pop
jmp
mov
jbe
mov
addr16
pop
in
sarb
out
jg
ss
hlt
push
jns
push
push
add
ret
dec
into
inc
and
mov
sub
and
xor
or
in
push
sub
mov
fidivrs
mov
pop
xor
add
xor
adc
jecxz
and
xlat
and
lock
mov
dec
xorl
mov
test
lahf
pop
paddusb
add
dec
or
outsb
mov
aaa
push
add
and
xor
out
xor
mov
xchg
call
jo
loop
cmc
mov
outsl
stos
or
push
push
sbb
push
es
jp
lret
mov
or
loope
add
sarb
xchg
xchg
out
stos
gs
sbb
imul
outsl
dec
mov
adc
movsl
jp
mov
faddl
hlt
inc
repz
dec
test
adc
push
mov
cld
jg
jbe
int
outsb
mov
adc
fwait
inc
pop
or
stos
mov
rorb
push
sbbl
loop
nop
sti
fsubrl
mov
jle
xchg
fstpl
loope
mov
pop
mov
pop
arpl
ss
sub
jno
shrb
push
outsl
je
mov
out
pop
adc
jecxz
xor
push
lods
sbb
outsb
das
pshufw
push
add
pusha
daa
loop
pop
int
inc
test
pop
ss
leave
shrl
push
cli
fistpl
xchg
or
mov
cmpsl
xchg
mov
andl
or
mov
sub
in
pop
sbb
sbb
pushf
stos
adc
lahf
lea
push
out
mov
mov
mov
ljmp
or
xadd
xor
xor
mov
bts
shld
xor
add
shl
pusha
mov
push
call
pop
js
icebp
jecxz
fs
fwait
gs
lea
cli
push
adc
hlt
repz
cld
mov
sarl
push
pop
pop
into
or
add
cmp
add
inc
and
fs
adc
fidivs
sbb
fwait
mov
adc
repz
push
fs
sbb
addl
xchg
stos
test
out
sub
add
mov
rcll
cmc
dec
bound
sar
addl
sub
dec
cmpsl
jp
sub
and
mov
test
je
jecxz
rolb
push
sub
jg
sub
mov
pop
xlat
mov
mov
pop
xchg
adc
sbb
add
xchg
pop
push
mov
insb
add
jno
jecxz
adc
test
fnstcw
mov
dec
shrl
xor
push
out
aaa
lret
sub
sub
icebp
mov
jmp
mov
fwait
pop
cmpsb
add
ja
sub
adc
inc
pushf
gs
mov
emms
in
pop
rcrl
add
pushf
pushf
lea
jmp
pusha
movl
call
mov
pushf
xchg
not
jmp
lret
icebp
jecxz
call
cmp
cld
mov
pop
adc
stc
or
or
test
pop
pop
mov
repz
or
sbb
repnz
pop
lret
pop
adc
dec
iret
jmp
inc
call
sub
and
mov
mov
adc
nop
js
push
mov
nop
push
faddl
jmp
mov
cmp
out
jecxz
leave
cld
jo
push
mov
pop
arpl
inc
cmp
lds
and
sti
fsubl
add
inc
inc
mov
mov
scas
push
jnp
insb
outsb
mov
imul
sbb
fadd
lahf
lret
into
fnsave
xchg
movsb
mov
and
out
jae
inc
xchg
adc
in
mov
ljmp
scas
inc
fld
pop
sub
rcl
mov
mov
add
shr
loop
mov
mov
sahf
es
orb
push
inc
jb
ss
jg
push
xchg
jbe
cs
ds
mov
dec
push
ss
xchg
adc
ja
dec
sub
push
dec
xor
mov
xor
movsl
mov
mov
inc
lds
xchg
divb
push
aaa
cs
outsb
lds
jle
pop
in
jmp
pop
jbe,pt
xor
mov
lods
loop
cmpsb
mov
mov
jns
roll
fidivrl
add
out
flds
xchg
outsl
leave
or
int
mov
outsb
repnz
pop
ljmp
xchg
popf
pop
dec
repnz
push
dec
outsb
cmpsl
and
imul
jno
sub
and
mov
inc
xor
cmp
push
arpl
mov
and
jbe
cmpsl
movsl
andl
inc
jge
push
cs
mov
test
bound
adc
inc
loop
mov
jmp
test
sbb
addl
adc
inc
rep
movsl
andl
adc
in
inc
adc
adc
xor
and
inc
inc
pop
addr16
test
icebp
cli
test
sbb
and
test
sub
dec
mov
inc
or
sub
dec
inc
mov
test
icebp
addr16
xor
add
push
arpl
fs
lds
addr16
sub
mov
popf
sbb
outsb
adc
inc
jno
icebp
fldt
in
movsb
mov
push
gs
test
and
pop
mov
inc
xchg
inc
subl
dec
sbb
xor
das
push
mov
xor
and
inc
and
and
enter
push
arpl
popf
test
loopne
add
add
bound
adc
mov
inc
pusha
arpl
and
add
xchg
push
cmp
xor
inc
dec
and
and
imul
and
daa
lds
lahf
inc
test
mov
repz
loope
aas
or
dec
inc
jmp
dec
movsl
xchg
aad
sub
jno
mov
push
movsb
mov
test
mov
arpl
mov
popa
inc
es
jno
bound
rol
jle
and
mov
add
inc
cmp
adc
lea
and
pop
sub
out
popa
test
ds
push
and
scas
popa
mov
out
in
push
and
sbb
ds
and
fisttpll
jne
in
pop
mov
stos
xchg
inc
adc
push
jle
inc
and
inc
mov
popa
out
push
add
imul
daa
add
and
mov
inc
stos
xchg
inc
lret
xchg
mov
and
outsl
dec
adc
test
pop
in
xlat
pop
arpl
and
scas
mov
movsl
pop
aas
sbb
fimuls
mov
dec
sbb
sub
push
mov
cmc
and
xor
push
jno
gs
pop
xchg
bound
jno
add
sub
mov
hlt
jno
xor
xor
xor
jne
mov
xor
xor
outsb
inc
jle
stos
inc
aaa
fsts
and
and
test
push
test
add
arpl
inc
sub
xchg
sbb
mov
movsb
mov
fsubs
sub
sbb
xchg
sbb
mov
inc
clc
leave
orb
mov
sub
andl
inc
fists
xor
jle
addb
jecxz
rolb
adcb
neg
jns
test
push
add
pop
leave
inc
in
fldl
je
inc
ljmp
jne
dec
sbbb
cmp
rolb
jmp
add
insb
cmpl
or
inc
xchg
ljmp
aas
addr16
cmp
add
add
jp
cmp
jecxz
sub
test
aas
sub
in
addl
dec
sub
push
xchg
xchg
inc
hlt
sub
add
daa
pop
cmpsl
pop
and
jo
roll
imul
inc
out
outsl
in
roll
push
into
inc
mov
dec
mov
stc
inc
inc
push
lds
pop
inc
jae
dec
mov
test
mov
imul
mov
test
sbb
pop
jmp
jbe
and
cmp
ret
out
cmc
push
push
sub
cli
cmp
insb
push
cltd
add
cld
iret
push
cmp
cmp
lds
add
leave
mov
out
icebp
pop
bound
cmp
or
pop
add
add
addb
inc
ret
pop
sub
mov
arpl
mov
arpl
push
add
std
dec
push
inc
lahf
pop
pop
lcall
push
mov
pop
icebp
push
pop
cmp
mov
cmp
pop
aas
cmp
jge
cmp
push
push
cmp
sub
movsl
cmp
cmp
pop
adc
gs
xchg
aas
jecxz
fwait
xchg
test
and
push
pop
aas
orl
xor
xor
popa
dec
testl
out
sarb
pop
jle
mov
pop
arpl
sub
dec
and
pop
jae
in
dec
imul
sbb
push
xchg
pop
test
mov
ret
ret
sbb
cmp
dec
cmp
push
imul
sub
push
and
inc
and
xor
loope
mov
adc
in
mov
mov
testb
pop
and
test
aad
cld
ret
and
or
repz
jno
shll
sub
int
mov
and
int
and
mov
ljmp
push
test
xchg
add
push
add
jb
shl
pop
add
xor
jno
in
data16
mov
pop
xor
popa
cmp
fldenv
dec
jbe
test
inc
mov
cmp
loope
jnp
sub
adc
xchg
repnz
ljmp
cmpsb
pop
mov
inc
loop
pop
xchg
push
sbb
movsb
movsb
fcmovb
loope
imul
jb
movsl
outsl
jne
ss
sub
outsl
test
jbe
xor
subl
jmp
mov
stc
sub
aaa
inc
mov
addl
scas
int
mov
xor
xchg
jns
inc
jle
movsl
test
inc
jno
out
mov
xor
sbb
imul
sbb
inc
ljmp
sub
mov
stos
stos
push
and
pop
movsl
shll
repnz
dec
jb
cmpsl
push
inc
xor
out
addr16
inc
jns
outsl
mov
cltd
movsb
fwait
andb
mov
out
addr16
pop
scas
pop
dec
xor
test
add
outsb
mov
push
push
xor
mov
inc
mov
outsl
xchg
test
rolb
outsl
lcall
stc
pop
add
jle
jmp
dec
dec
mov
pop
mov
bound
cmp
inc
sub
xchg
outsl
lds
and
enter
push
xchg
fsubrl
sbb
addr16
xchg
in
pop
xor
xchg
jbe
sub
andl
mov
and
xor
cmpsl
and
and
out
popa
mov
ret
in
loop
loop
inc
insl
andb
jno
mov
dec
mov
inc
test
xchg
jne
stos
into
roll
push
movsb
roll
mov
shr
pop
cs
test
addr16
inc
xor
and
or
cwtl
pop
mov
shll
jb
xchg
xchg
sub
popa
outsb
inc
stos
jns,pn
adc
dec
pushf
aam
sub
and
shl
mov
add
inc
add
arpl
outsl
mov
ja
insl
mov
sub
pop
xchg
xor
stos
inc
push
xor
or
mov
mov
xchg
push
insl
pop
push
mov
xor
mov
loop
fiaddl
mov
dec
rol
inc
mov
and
in
inc
scas
je
cmp
adc
popa
mov
lods
xchg
jecxz
jno
xchg
add
loope
add
mov
hlt
xor
das
std
sub
les
mov
aam
cmp
ror
aam
stc
or
sub
sbb
pop
push
or
nop
inc
ds
inc
xchg
inc
test
or
movsl
mov
dec
out
es
sbb
das
jbe
es
shrl
das
adc
push
loope
xor
mov
pop
or
xchg
leave
iret
jae
sub
rcl
clc
movsb
xchg
imul
add
xor
mov
mov
in
testb
and
addl
pop
cwtl
push
pop
cmp
push
pop
push
xor
into
out
adc
lahf
je
xchg
jb
jne
jmp
ja
jae
jl
inc
in
test
icebp
mov
cmp
cmc
and
xor
mul
out
dec
scas
push
adc
gs
and
sub
jmp
xchg
jp
adc
dec
dec
inc
push
mov
fnsave
inc
clc
arpl
movsl
mov
xor
lods
dec
jl
into
xor
outsb
fldenv
mov
push
sbb
cli
jecxz
push
sbb
repnz
stos
xchg
xchg
dec
xchg
xor
mov
pop
dec
mov
mov
inc
lcall
and
xchg
roll
xchg
inc
daa
mov
xor
je
imul
xor
cmp
into
andl
mov
xchg
add
inc
mov
lcall
daa
sub
ret
push
add
jae
loope
cmpb
sar
bound
dec
rcrl
dec
imul
iret
cmp
insl
popa
mov
xchg
test
arpl
icebp
xchg
inc
jmp
or
pop
cmp
cld
jns
push
inc
jmp
rorb
fisubrl
dec
and
popa
push
push
xchg
aaa
cmp
sub
data16
jg
jno
jb
push
les
popa
fs
sbb
aas
xor
xchg
arpl
push
fnclex
rclb
xor
inc
jbe
sub
sbb
loop
dec
mov
pop
jle
mov
jo
imul
dec
jg,pn
xchg
adc
dec
ss
mov
xchg
mov
push
or
bound
mov
adc
std
out
jnp
xor
lds
xor
jle
and
add
add
lock
mov
pop
addr16
xchg
arpl
into
xorb
popa
sub
cli
sub
icebp
loop
xor
sub
jg
icebp
ret
mov
inc
inc
mov
shll
mov
shll
mov
xlat
pop
lds
mov
repz
xor
mov
inc
in
push
addr16
mov
popa
stos
xchg
ret
mov
xor
bswap
outsb
inc
and
rcrb
cld
repz
sub
dec
mov
xor
add
leave
aam
insb
push
repz
mov
lds
shll
movsb
movsl
sub
andl
and
dec
push
or
rcl
and
xor
mov
into
add
leave
dec
pop
jb
push
fisubrs
shl
ljmp
movsl
lds
jle
jle
mov
pop
xchg
mov
mov
and
jl
add
xchg
add
movsl
daa
mov
sti
mov
flds
sbb
hlt
cltd
shlb
mov
in
outsb
fwait
mov
ljmp
cmp
lcall
mov
shlb
mov
cmp
testb
mov
mov
mov
sarl
mov
jbe
fs
pop
fwait
push
pop
xor
and
or
mov
sub
push
xor
jno
inc
and
pop
dec
push
ljmp
or
ret
mov
xchg
push
mov
icebp
movsb
sub
push
jb
or
call
std
mov
shr
cmpl
fdivr
xor
jae
mov
aas
inc
in
xchg
fisubrl
movsb
push
lods
dec
icebp
imul
fs
in
pop
repz
cli
jecxz
jecxz
data16
adc
ret
mov
int3
inc
out
or
cs
in
xchg
push
dec
push
lock
ja
les
mov
xor
mov
pop
imul
mov
leave
imul
inc
lds
ret
ja
ret
imul
test
arpl
pusha
aaa
in
in
xchg
and
sahf
push
pop
loope
or
and
fisubs
js
sbb
mov
adc
mov
mov
scas
daa
sub
movsl
je
add
xchg
dec
xor
fisubl
js
add
repnz
or
push
nop
andl
bound
loopne
add
jb
fs
mov
inc
dec
loop
lea
and
xchg
pop
lds
ret
xchg
sbb
je
mov
mov
push
popf
and
sub
ror
sbb
popf
leave
xchg
mov
mov
jno
mov
jb
mov
mov
xor
jb
inc
shll
fldt
repz
imul
inc
mov
rorb
xor
mov
mov
mov
jno
shll
rclb
push
push
andl
or
lcall
adcb
inc
sbb
inc
popa
inc
mov
and
bound
xchg
or
inc
sbb
xor
or
mov
jns
repz
ret
mov
fs
rcll
sub
jae
imul
stos
daa
inc
push
mov
mov
sbbl
jmp
repnz
pop
faddl
or
jb
and
dec
lret
and
sub
mov
adc
test
cmpsl
mov
pushf
sub
ret
push
mov
stos
push
xchg
mov
fildl
push
mov
push
jmp
ja
jae
jne
mov
jle
shll
sub
mov
shll
inc
mov
enter
scas
sub
loope
out
cmc
xor
inc
dec
mov
lea
and
loop
stos
or
cmp
adc
or
mov
fwait
in
xchg
rcrl
jecxz
adc
mov
jae
add
repz
mov
sub
jb
push
mov
xchg
or
stos
mov
imul
mov
loop
fimull
push
dec
or
cmp
adc
fwait
sub
das
mov
pusha
sbb
stc
cli
data16
ljmp
roll
jp
cmp
dec
mov
outsb
adc
xor
fidivl
xor
cmp
mov
cmp
jmp
xchg
lds
xor
repz
ljmp
imul
jns
cmp
dec
mov
hlt
scas
xor
push
popa
jnp
push
xor
push
jno
imul
es
test
fwait
push
cmp
inc
sub
test
jne
xlat
sbb
cld
mov
push
pop
mov
dec
dec
sub
adcl
lret
xor
push
icebp
test
lds
add
addl
ret
outsb
addb
cmpl
sbb
gs
sbb
pop
int3
leave
push
and
out
data16
push
arpl
bound
jmp
repnz
dec
pop
repnz
sub
sbb
mov
sub
imul
inc
jno
sub
add
int3
adc
andl
dec
jb
pop
loope
xor
out
iret
pop
cwtl
mov
dec
xor
jno
ja
inc
push
jp
xor
hlt
sub
inc
pop
cli
jb
inc
loopne
ja
mov
cmc
inc
sbb
adc
shl
push
hlt
jno
jp
xchg
data16
dec
cmpl
dec
inc
mov
jae
xor
cmpsb
push
je
icebp
mov
inc
xor
loope
lret
cld
mov
cmp
jbe
push
and
xor
icebp
cmp
pop
cmp
cmpsb
fldenv
xor
xor
pop
xorb
sbb
and
xchg
outsl
fsts
lods
jmp
mov
cmc
imul
add
test
lret
loope
test
mov
movsb
out
mov
jae
cmp
adc
ljmp
out
mov
into
int3
test
daa
xchg
pop
inc
and
jno
sbb
mov
leave
pop
push
sub
cmc
pop
repnz
rclb
ja
inc
leave
mov
xchg
mov
cltd
test
es
adc
xor
hlt
ret
cmp
test
push
es
and
daa
push
je
rol
add
pusha
mov
call
pusha
lea
jne
movzbl
pusha
pusha
movsbw
mov
push
pushf
lea
jmp
mov
sub
test
sub
fsubl
dec
out
out
mov
push
cmpsb
xchg
sub
push
mov
cmp
mov
dec
fimull
loop
push
push
outsb
sahf
mov
fsts
inc
xor
cmc
stc
cmp
adc
cmp
dec
inc
fistpl
inc
xor
mov
imul
lcall
push
lahf
jo
push
pop
dec
pop
shlb
and
cmp
mov
fisttps
xchg
movl
pusha
pushf
push
mov
lea
jmp
btr
and
dec
mov
pushf
cmc
cmpb
pushf
mov
mov
lea
jne
and
cmc
daa
clc
sub
pusha
pushf
cwtl
lea
mov
pusha
pushl
movw
pushf
lea
jmp
jmp
adc
pushf
pusha
lea
jmp
sarb
loopne
pop
fiaddl
mov
push
stos
jae
movsl
sbb
inc
cmp
and
insb
add
dec
xchg
incl
test
insl
shrl
jbe
cmp
clc
popa
adc
dec
cmp
popf
cmc
jle
mov
ss
xor
and
pop
mov
push
fs
xor
and
scas
cmp
rcl
xor
into
pusha
sub
or
mov
adc
sbbb
xchg
fcompl
xchg
sbb
mov
ret
or
insl
imul
sbb
cmp
push
insl
mov
jecxz
fcoms
add
dec
les
jno
call
dec
cmp
int
mov
mov
push
jno
imul
les
mov
rcrl
adc
fnstsw
xor
mov
in
popa
push
inc
je
pushf
xchg
pop
ret
lret
cld
out
xor
xor
divb
dec
xchg
lret
test
inc
dec
rcl
pop
cld
dec
ss
stos
and
xchg
xchg
jbe
movsl
xor
pop
pusha
push
test
outsl
arpl
loopne
jo
out
mov
or
push
fwait
lret
lret
add
ds
jne
mov
js
pop
out
sahf
incb
cltd
popa
xor
ret
push
mov
xor
mov
push
inc
mov
adcb
in
add
mov
repnz
push
cmp
jecxz
pop
fcompl
daa
sbb
loop
ja
dec
or
lock
fidivl
ficomps
or
sub
pop
sahf
shll
and
or
adc
mov
xchg
mov
scas
lods
add
mov
push
adcl
loope
cmp
hlt
fisttps
out
mov
hlt
fsubr
aad
push
inc
sti
sti
lea
into
je
dec
xor
cmp
add
sahf
add
aaa
adc
scas
mov
pop
and
inc
and
sbb
push
mov
pop
dec
adc
popf
xor
std
mov
movsb
fistpll
xor
mov
out
xchg
adc
dec
in
sbb
loop
jns
cmp
sbb
in
mov
cltd
pop
fcmove
pop
insl
or
pop
add
push
inc
fs
rorb
ret
push
pop
addr16
rorb
mov
cld
dec
repz
rcrb
mov
and
lds
xor
sbb
out
lds
les
imul
repnz
sbb
scas
leave
fbld
push
push
xchg
jno
int3
cmpsb
and
mov
jl
out
in
out
lea
pop
ss
xchg
xchg
aas
fstps
insb
xchg
and
cmp
dec
push
cmp
inc
scas
fistps
rcrb
mov
cltd
push
movsb
stos
lret
mov
inc
adc
aam
clc
jbe
mul
jb
shlb
movsb
jg
and
xchg
cmp
dec
or
into
xlat
jecxz
data16
test
mov
test
cmp
nop
cmpsb
sub
jns
jns
xor
mov
dec
stos
das
shl
iret
cmpsl
bound
pop
and
in
mov
sbbb
outsb
or
pop
sub
push
idivb
pop
push
stos
pop
jno
mov
leave
jge
jp
cltd
lret
push
out
addl
or
mov
cmp
div
fsubp
out
ss
and
fldenv
xchg
mov
add
or
aad
xchg
or
xlat
jecxz
sub
jecxz
pop
push
mov
sub
xchg
sub
sbb
jecxz
fildl
test
or
pushf
sbb
in
fwait
lcall
loopne
adc
add
cmc
mov
xor
xchg
push
outsb
lods
pop
push
sbbl
scas
shlb
mov
stos
and
rorb
insl
lret
adc
mov
sarb
sbb
mov
imul
pop
data16
call
addr16
add
xchg
xor
data16
adc
push
aad
xlat
jecxz
mov
fwait
and
and
scas
adc
and
fidivrs
and
pusha
pop
fidivrs
repnz
cs
mov
pop
enter
jo
lods
sbb
scas
loop
fbstp
sbb
jb
xor
cwtl
data16
js
scas
cmc
mov
inc
xchg
xor
loop
aad
xchg
daa
iret
outsb
call
lret
lahf
xchg
jbe
js
add
push
mov
pop
out
faddl
imul
or
adc
mov
rolb
outsb
jecxz
cmc
int3
hlt
aad
pushf
inc
mov
mov
jmp
outsl
lock
arpl
push
enter
xlat
jge
mov
ret
jnp
ds
add
and
lods
pop
fistl
sbb
xorb
and
popa
inc
push
pushf
xchg
rclb
shll
push
and
mov
mov
ficomps
test
dec
jno
jae
mov
adc
xor
xchg
repz
es
incl
scas
xchg
cmp
jge
test
xchg
popf
dec
ror
jg
imul
cmpsb
add
daa
lods
les
icebp
roll
iret
push
fsubl
jecxz
push
dec
lods
sub
insl
iret
inc
xchg
and
insb
jge
mov
jp
lea
jb
cmc
stc
jmp
add
push
push
dec
outsl
je
data16
arpl
inc
add
mov
repz
mov
lret
scas
adc
mov
xorb
ja
jmp
sbb
xor
jnp
fsubl
xorl
push
sbb
dec
xchg
unpckhps
shll
stc
mov
fidivrl
repz
jae
call
xor
orb
mov
lret
into
mov
add
outsl
cmp
adc
mov
rcll
or
insb
outsb
fs
cmp
adc
gs
out
push
out
xlat
lds
aad
pushf
iret
psllw
sbbl
xchg
mov
xorb
lock
fldt
add
stos
aaa
push
mov
mov
pop
sbb
fwait
jmp
inc
outsl
jo
push
int3
mov
or
sub
rcrb
repnz
repnz
inc
scas
mov
test
pusha
lods
sbb
jns
or
lcall
jmp
cmp
jno
dec
je
mov
idivb
movsb
repz
adc
aas
mov
outsb
filds
and
jg
loope
fcmove
fldl
xor
jl
xor
pop
fnsave
cmpsl
or
fs
rorb
mov
mov
pop
lds
arpl
mov
stos
cmp
xchg
pop
nop
daa
jle
stos
int
rcll
stc
pop
jmp
pop
mov
lock
xchg
jmp
arpl
fcompl
inc
insb
rcll
xchg
pushf
and
pop
or
xor
or
pop
lods
sbb
and
fld
loopne
or
lahf
popf
mov
lret
xchg
test
adcl
jle
lret
ficompl
mov
adc
xor
jno
push
rolb
jnp
lods
push
dec
mov
jbe
sbb
mov
xchg
loopne
lock
pop
pop
nop
or
stos
xchg
push
shlb
push
mov
pop
dec
or
cmp
inc
jmp
roll
data16
cltd
imul
dec
or
add
inc
or
add
daa
mov
leave
add
aad
xor
xor
adcb
pop
bound
push
jne
mov
xlat
gs
sub
rcl
lcall
and
pop
pushf
mov
int
add
subl
sbbb
jmp
pop
push
shrb
stc
je
popf
pop
jo
mov
push
rcl
pushf
jae
add
dec
adc
push
jno
mov
cmp
sti
mov
sbb
pop
mov
mov
repz
mov
and
add
movsl
pop
arpl
stos
fisttpll
mov
call
aas
push
pusha
mov
leave
xor
clc
dec
mov
std
mov
pop
daa
push
add
divb
jnp
shl
push
lods
not
sub
das
cmp
dec
xchg
jl
lea
ja
pusha
cmc
add
add
pushf
pusha
or
pushf
jmp
movb
lea
jne
neg
aas
bts
jmp
iret
invd
shl
pushf
sub
jae
or
cmpsl
cwtl
test
inc
into
jo
pop
dec
jnp
lock
call
imul
pop
sub
or
sbb
roll
mov
xchg
pop
pop
mov
adc
shrl
mov
outsb
mov
add
pop
cs
xchg
leave
sbb
jno
movsb
daa
cmp
cmp
ja
sahf
imul
sarl
pop
xor
out
stc
pusha
xor
nop
xchg
pop
push
leave
jl
call
bound
mov
cli
shrl
fdivl
adc
inc
xchg
xor
lret
jge
test
fistpll
sbb
mov
jecxz
jb
fmull
adcl
scas
ffree
repnz
xchg
out
and
out
fnsave
dec
adc
outsl
or
jg
dec
mov
addr16
dec
in
push
pop
pop
lret
dec
subb
fwait
xchg
hlt
add
bt
stc
cmp
call
movl
mov
movl
pushf
pusha
mov
lea
jmp
or
test
jecxz
scas
jbe
mov
les
xchg
add
cmp
loop
shrl
dec
mov
fs
stos
mov
popa
add
loopne
cmp
movhlps
in
cmpsl
clc
push
mov
fisubs
mov
enter
push
out
jne
fcmovnu
push
xorl
insl
aam
jbe
jg
sbb
sbb
inc
add
cmp
jge
movsl
xor
movsb
lock
in
cwtl
pop
cvtpi2ps
pop
pop
push
mov
dec
push
fs
shl
pushf
sbb
out
into
stos
xchg
imul
ret
lahf
mov
jo
cmp
mov
loopne
cmp
sub
push
call
cmpsl
ja
scas
je
call
sub
or
leave
jae
cli
mov
pop
popl
add
stos
push
adc
cld
sarl
xor
cmp
mov
dec
xchg
into
pop
call
inc
push
lods
std
xlat
mov
movsb
adc
push
cmp
and
imul
test
push
movsl
cmc
pop
fmul
xchg
jne
pop
sarb
xchg
rol
xchg
outsb
mov
sbb
xor
inc
stos
cld
pop
push
jae
mov
or
inc
loope
out
mov
cmp
icebp
out
add
fwait
popf
test
push
in
stos
pop
loopne
sub
hlt
sub
mov
or
cmc
in
cmp
push
inc
aam
push
sub
or
mov
divl
dec
test
cmpsb
and
mov
shrb
and
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
or
pushf
addr16
es
repnz
and
adc
and
rcr
and
cmp
pusha
test
ficoms
pop
fldenv
sub
pop
jg
push
xor
bound
incb
jae
xchg
js
divb
lea
push
imull
lds
mov
or
cmc
lcall
mov
out
aas
dec
aad
mov
pop
add
nop
sbb
fcomps
jl
sbb
insl
les
jbe
lods
xor
call
cmp
cmp
lea
pushf
pushl
push
pushl
ret
lea
call
pusha
pusha
lea
jae
mov
dec
mov
call
lea
jb
pushf
cmp
call
shl
ror
add
rol
movzbw
mov
bt
push
test
add
clc
pusha
mov
btr
dec
shl
sar
mov
cmp
cmp
jmp
sbb
int
pushf
orb
push
fwait
jne
jnp
fs
pop
jge
daa
cmpsl
pop
push
cmp
rcr
rol
les
pop
ss
inc
mov
mov
ret
push
fsubrl
push
pop
and
cs
mov
das
aaa
sarl
aas
xchg
mov
jp
ret
out
int3
xchg
xchg
clc
shlb
std
lock
int
pushf
xor
fimull
mov
call
cmp
xor
add
je
movsl
test
lds
push
mov
mov
mov
cmpsb
or
in
mov
mov
pop
adc
lret
push
lock
mov
inc
dec
jae
ja
sarb
and
adc
lea
inc
inc
and
rcl
pop
in
add
insl
es
gs
adc
call
inc
xor
pop
inc
add
pop
mov
xlat
rcrl
xchg
mov
jg
jecxz
push
cmp
sub
aas
sub
mulb
cmpsb
mov
sub
imul
adc
and
adc
aad
push
out
jo
clc
mov
add
and
std
mov
scas
mov
les
in
jb
cld
pop
out
jecxz
ret
stos
pop
decb
or
or
cmp
leave
xchg
xor
jmp
inc
and
outsb
aaa
push
pushf
lea
jmp
mov
movl
jmp
push
call
call
inc
int3
scas
lret
jecxz
cmp
loopne
pop
sti
fdivrl
and
mov
xor
pop
orl
pop
loope
int
or
stos
clc
or
xchg
or
imul
repnz
pop
push
repnz
inc
xchg
or
popa
call
xchg
xchg
mov
bound
xor
inc
rorb
pop
fs
leave
pop
mov
sbb
sahf
cwtl
in
pop
pop
mov
mov
pop
out
fisubl
inc
sub
inc
js
lret
jecxz
sbb
cmp
mov
add
les
pop
movsb
mov
cmp
ffreep
sahf
push
cmpsb
inc
daa
lods
add
push
rorb
push
lods
into
pop
enter
or
popa
fidivrs
das
cs
out
lcall
test
ds
jmp
insl
and
lds
add
insb
ret
or
jno
sub
push
hlt
lock
mov
jecxz
inc
mov
mov
sub
cltd
dec
or
ss
movsb
aam
nop
aad
mov
dec
pop
inc
mov
sub
shrl
call
xor
adc
mov
push
ja
mov
push
mov
push
inc
mull
mov
in
jl
aas
xchg
xchg
jns
pop
xchg
aam
scas
sub
inc
sahf
incb
call
ss
mov
jl
cld
mov
dec
sbb
loop
in
xchg
pop
mov
mov
adc
xor
mov
pop
xor
xor
jecxz
outsl
sbb
sbb
xor
push
and
repz
je
xchg
sbb
scas
ss
jae
data16
imul
out
jge
mov
ds
dec
bound
adc
cmp
das
xor
cmp
test
into
icebp
rcrb
inc
sub
mov
pop
and
mulb
dec
addl
testb
nop
xchg
sub
xor
leave
sbb
push
insb
mov
xor
pmullw
dec
shll
cmpsl
stos
inc
test
pop
xchg
sbb
les
push
xlat
lret
pop
push
insl
push
push
cmp
xchg
inc
movsl
xor
push
lahf
js
dec
jmp
inc
sbb
sti
stos
cmp
push
pop
sbb
jnp
iret
and
sub
pop
es
mov
movsl
ret
andl
mov
xchg
fldcw
in
xor
pop
ret
fdivl
imul
fstpl
movsl
cltd
fldl
push
xorl
and
push
mov
mov
fsubrl
cmp
and
cmp
xchg
jge
cmp
lea
or
fwait
cmpsl
adc
xchg
fnstcw
push
mov
xchg
imul
add
and
dec
mov
mov
insb
std
into
xlat
dec
rol
subl
fistpll
or
out
push
or
rorb
sbb
pop
lock
push
adc
sbb
mov
jo
in
xor
rcl
outsl
and
fildll
pop
dec
sbb
pushf
scas
inc
hlt
enter
inc
push
inc
push
out
movl
ja
fisubs
jge
mov
jnp
mov
pushf
add
out
xor
addr16
hlt
stc
iret
push
jnp
mov
push
ret
or
lret
bound
lods
sbb
or
cld
sbb
dec
jbe
push
adc
fdivrp
push
in
sub
fldcw
xchg
mov
cmp
and
push
pop
pop
lea
mov
out
mov
mov
mov
mov
ret
nop
negb
jnp
jg
popf
adc
mov
icebp
mov
ljmp
ret
imul
sub
fcomip
jb
lret
mov
fidivs
aam
cld
gs
push
fisubs
jecxz
jnp
outsl
in
mov
cmp
xchg
test
push
push
cmp
mov
addl
push
cwtl
outsb
inc
adc
sub
push
sub
cld
mov
in
lret
mov
push
stos
pop
xchg
sub
xor
call
xchg
pop
push
xor
jge
sbb
scas
cmpsl
mov
mulb
jle
cltd
inc
cmpsl
mov
mov
fisttpl
test
scas
sub
dec
scas
pop
lods
inc
cwtl
icebp
out
mov
pop
stos
mov
aas
push
add
cs
push
adc
out
fs
xor
push
sahf
mov
sbb
xor
cmp
mov
lahf
xchg
xlat
cmpsl
mov
jmp
das
hlt
add
imul
enter
movsb
xchg
push
inc
repz
mov
test
imul
outsb
cmp
mov
iret
jmp
test
scas
scas
rcll
xor
out
jmp
jp
lret
sub
or
lret
sub
loopne
shll
aas
ret
aaa
jl
cmp
rcrb
xchg
loop
movsb
jg
pop
lea
pop
lds
scas
add
fstpl
xchg
and
mov
testb
jmp
arpl
into
dec
jl
into
cs
jl
xchg
cmp
inc
repz
out
and
stos
in
adcl
cmp
leave
push
jb
and
xchg
xchg
ret
popf
movsb
ja
das
icebp
dec
jne
jle
ljmp
cwtl
movsb
inc
adc
add
and
rorl
repnz
push
jecxz
std
sub
or
ret
pop
or
lds
pop
sbb
or
inc
cltd
mov
aad
lods
jb
scas
je
shlb
gs
daa
scas
push
aad
mov
lret
mov
pushf
jns
xchg
dec
pop
jp
fstpl
mov
ret
lds
arpl
jbe
shlb
mov
xchg
jl
inc
jmp
jge
sbb
mov
jbe
sbb
mov
sub
mul
loope
jno
mov
shlb
xor
or
push
decl
jne
shr
shrb
in
dec
cmpsb
cld
cmp
dec
lods
push
mov
rcrl
xorb
insb
incb
addr16
add
leave
mov
mov
imulb
pop
or
ret
scas
arpl
imul
stos
mov
movsl
aas
in
sbb
dec
dec
xchg
sub
aad
movsb
jp
ds
cmp
dec
inc
or
lods
fwait
pop
sbb
addl
pop
daa
xchg
xchg
xchg
stc
sbb
mov
push
into
xchg
into
mov
sub
nop
xlat
xchg
jbe
data16
sbb
xchg
lret
inc
push
jbe
test
aam
sub
call
push
ss
bound
inc
mov
pop
dec
int3
enter
and
push
fcmovne
mov
fldenv
imul
mov
mov
subb
add
fisubrl
fldt
test
cmp
cmp
dec
sbb
jns
mov
pop
dec
fs
sbb
fisttps
shl
mov
je
hlt
mov
in
xlat
or
ret
dec
mov
push
add
mov
push
adc
gs
cwtl
pop
cmpsl
popa
mov
xor
mov
pop
test
rcl
dec
js
pop
pop
arpl
mov
lods
fsubl
stos
add
lahf
add
stc
je
and
cmp
leave
int
scas
rol
js
ljmp
rcl
adc
push
mull
cmpsl
sbb
adc
and
fs
hlt
mov
or
mov
or
pop
out
sbbb
jp
push
test
insl
add
xor
mov
pop
loop
adc
push
subl
pop
and
in
mov
cmp
pop
cmc
mov
out
xchg
mov
push
std
xchg
stc
mov
cs
test
imul
repnz
push
push
mov
lea
cmp
mov
pop
inc
fsub
jl
leave
insl
lock
shl
add
sub
inc
frstor
xor
adc
mov
cmp
cli
mov
jmp
insl
ljmp
arpl
xchg
incb
subl
ret
mov
test
xor
loope
pop
adc
xchg
adc
scas
int3
rcl
test
and
lcall
bound
sub
and
shll
nop
adc
mov
inc
icebp
insl
movsb
pop
repnz
mov
mull
jne
div
jnp
fsubs
push
mov
sbb
dec
mov
jl
push
adc
dec
int3
and
popf
call
loope
sub
les
test
stos
inc
arpl
mov
rorb
cli
rcrb
stc
jg
iret
push
mov
pop
cmpsb
test
sbb
mov
fsubs
cli
jle,pt
jecxz
sbbl
orb
mov
lods
inc
xchg
sar
or
shll
adc
xor
cmp
mov
nop
jb
xchg
fsubs
fxam
mov
sub
ja
cmp
mov
xchg
lds
sbb
ljmp
imul
jge
dec
adc
movsl
fcmovb
lods
dec
and
clc
pop
jbe
cvtdq2ps
and
cmp
cmp
sub
push
pop
add
jne
xlat
adc
out
cmp
cs
fcom
or
clc
pop
fsubrl
add
pop
int
or
lret
sahf
rolb
ss
adc
inc
cmpsl
xor
sub
clc
jmp
sti
pop
pop
aam
push
nop
push
sub
or
daa
and
dec
pushf
xor
and
mov
pop
std
test
outsl
fiaddl
cltd
pop
imul
rcrl
lcall
inc
xchg
push
cmp
lods
push
cmp
pusha
scas
lea
mov
aad
or
xor
das
fbld
fcomps
into
shll
shl
jl
adc
inc
mov
or
mov
pop
pop
or
call
pushf
inc
ret
je
xlat
arpl
inc
aas
inc
fsubrs
data16
mov
push
mov
sbb
popf
test
call
and
inc
inc
xor
fs
ret
sub
in
leave
pop
sbb
movsl
shl
sahf
iret
cmp
rcr
loop
dec
sub
dec
movsl
fcmove
aas
int3
add
lds
or
push
lcall
xor
or
mov
arpl
test
adc
xchg
mov
inc
fmull
fbld
jl
inc
pop
cmp
negb
xchg
and
hlt
icebp
xchg
push
stc
push
add
dec
adc
or
outsb
pop
outsl
aaa
fsubrl
mov
fidivrs
mov
adc
lock
subb
imul
popf
add
dec
out
subl
fdivs
sahf
or
jnp
cld
and
mov
lock
add
sbb
add
push
lock
pop
pop
fists
insl
xor
pop
xchg
gs
outsl
jl
cld
xor
loope
in
je
xlat
push
arpl
cmpsl
in
stc
cmc
inc
jno
xchg
shlb
add
icebp
mov
xchg
gs
repnz
imul
pop
and
clc
out
in
adc
ja
iret
push
insb
add
pop
lret
dec
sub
lret
lds
ret
mov
dec
inc
pop
pop
push
pminsw
xchg
fidivrl
fcmovb
jbe
in
inc
sbb
lret
femms
arpl
mov
xor
roll
lds
popa
adc
xchg
push
ss
xorl
shr
mov
jo
aas
sbb
sbb
lock
xor
aad
das
push
push
cltd
fwait
push
jns
cmp
shr
add
jnp
push
xor
cmp
jo
sbb
xor
inc
cmp
push
scas
mov
enter
pushf
rcrl
outsl
or
mov
mov
in
jo
adc
dec
popa
mov
jbe
popf
mov
pusha
fadd
pusha
in
popa
fdivrs
lea
fcmovu
aas
jno
jle
loope
sub
adc
cmp
scas
rcrl
xor
pop
push
mov
adc
mov
loope
mov
inc
inc
xchg
mov
sti
add
sbb
cli
adc
sbb
cmpsl
sub
xchg
mov
and
in
lret
jnp
cmp
pushf
std
jno
lret
das
jnp
outsb
lds
add
jg
mov
fcmovu
int
mov
xor
sbb
sbb
popa
dec
out
notb
int3
sub
sbb
jg
or
pop
popf
cmp
sbb
leave
dec
inc
xchg
adc
cmpsl
orl
faddl
fistpl
lods
mov
jmp
in
xorl
rclb
mov
jbe
or
in
dec
subb
scas
add
mov
mov
xor
into
jp
mov
pop
push
loope
cwtl
pop
cmp
cli
add
daa
jle
sti
xchg
xor
mov
stc
int3
not
lods
mov
or
fdivr
xor
inc
xor
mov
std
mov
stos
jg
inc
mov
sbb
stc
lea
mov
fsubrl
inc
lret
ss
dec
inc
cltd
adc
mov
push
mov
add
stc
cwtl
fsave
inc
stos
neg
aam
data16
bnd
mov
imul
fisttpll
pop
jno
push
xchg
pmulhuw
test
clc
mov
test
popa
je
pushf
filds
mov
cwtl
out
in
aaa
fdivr
push
orl
lds
or
mov
sbb
mov
ds
fdivrs
inc
mov
cmp
and
pop
mov
insl
cmp
push
mov
or
pop
test
into
fcoml
xchg
imul
iret
out
sub
movsl
decb
popa
jo
inc
add
and
sub
addr16
mov
bound
es
repnz
lahf
jne
push
jmp
sub
lret
add
push
inc
sbb
ret
adc
test
jmp
xor
mov
or
leave
aad
mov
sub
fwait
xor
mov
jmp
or
dec
dec
enter
aam
sbb
lret
test
mov
cmpl
xor
jmp
pop
ja
mov
adc
inc
adc
fidivs
div
sub
cs
dec
in
xchg
imul
aas
mov
rcll
scas
mov
xchg
sti
daa
fbstp
jle
add
outsl
or
mov
mov
aaa
xchg
leave
repz
or
mov
icebp
dec
or
sbb
call
adc
mov
call
mov
jnp
insb
arpl
cmp
idivl
addr16
jecxz
xchg
push
jbe
shl
nop
push
mov
fadds
fcoml
xchg
pop
aaa
mov
jno
adc
sbb
roll
imul
lea
push
ljmp
imul
test
xchg
mov
je
and
fildll
dec
and
notl
or
outsl
mov
sub
pop
and
scas
test
addr16
push
sbb
mov
lods
pop
inc
or
pcmpeqb
xchg
ficompl
stc
in
xor
outsl
inc
dec
lock
push
decb
pop
out
subl
mov
mov
dec
aaa
es
pop
inc
in
fbld
imul
loope
jb
dec
mov
in
xchg
movsl
in
cmp
int3
loop
idiv
add
xor
pusha
jb
clc
fcoml
fidivrl
pop
shlb
pop
cmc
inc
xlat
aaa
push
fsin
mov
push
xor
jp
cmp
test
int3
add
repnz
inc
std
std
xchg
clc
hlt
push
xchg
in
popf
jmp
and
sbb
add
call
aaa
jge
xor
sbb
sbb
notb
arpl
outsb
icebp
in
shl
cs
xlat
aad
adc
sub
xchg
xor
or
rol
mull
bound
fcomp
sub
loopne
mov
rorb
xchg
and
loope
out
inc
mov
inc
insl
mov
or
xchg
imul
inc
stos
loopne
or
xor
dec
repnz
and
push
mov
inc
pop
push
sbb
iret
cmpsl
scas
in
pop
es
jp
ret
cmpsb
push
popa
xchg
ss
mov
cmp
mov
mov
fsub
sbb
push
mov
mov
gs
and
popf
push
sub
jp
into
xchg
test
cmp
popf
jmp
in
les
inc
or
mulb
in
jne
push
cwtl
arpl
pop
mov
sbb
outsl
cwtl
in
inc
or
push
or
clc
sbb
pop
pop
pop
push
fldenv
jbe
loope
jge
stc
fstp
mov
jmp
dec
push
mov
mov
and
adc
lret
sbb
xchg
test
jno
jge
fdivrs
adc
xor
mov
lods
stos
orb
in
test
cmp
ror
sbb
std
lods
lea
outsb
inc
mov
ret
pushf
hlt
and
lret
in
xor
or
jecxz
xchg
push
push
pop
push
cs
arpl
inc
filds
insb
mov
mov
mov
jns
js
mov
sub
movsl
and
notb
sub
mov
xchg
pushf
shll
enter
push
jb
insl
jne
mov
loop
repnz
imul
xchg
adc
bnd
dec
add
xor
push
lds
cmpsl
mov
mov
pop
jbe
adc
out
xchg
push
mov
popa
mov
jo
pop
push
cs
cmp
cmp
dec
or
sbb
out
inc
or
mov
outsb
insb
cmp
xchg
xchg
in
cmp
and
out
lcall
mov
test
pop
mov
jle
test
mov
cmp
fucom
push
and
jne
negl
xchg
fmul
mov
push
arpl
mov
in
dec
fincstp
or
mov
inc
lahf
stos
add
or
and
mov
cmp
mov
test
dec
adc
stos
test
pop
push
nop
and
push
pop
xchg
mov
pop
inc
neg
loop
test
push
cmp
push
add
outsl
gs
jp
andb
imul
loope
orl
add
gs
add
orb
mov
pop
xor
ss
mov
xor
adc
inc
ret
es
push
push
aam
or
fists
cwtl
cmp
addb
into
dec
pop
bound
rclb
fwait
push
sub
shll
dec
jnp
iret
add
cmp
popl
sub
lods
js
loopne
fsubp
push
sub
dec
loop
cli
sbb
js
cmpsb
add
xchg
sti
inc
shll
cmp
and
pop
cli
jge
mov
adc
sbb
in
jg
ret
repz
sbb
mov
outsl
jg
jne
mov
inc
and
dec
iret
lret
je
test
inc
or
add
xchg
mov
pop
fstpt
or
stc
ja
inc
test
paddsw
data16
fcompl
les
test
mov
aaa
cmp
lret
andb
cmp
cmpl
pop
movsl
sti
call
xlat
out
icebp
sub
lods
dec
or
out
fisttps
ret
mov
add
dec
mov
adc
sub
fdivrs
sub
pop
dec
jl
pusha
add
fdivl
mov
mov
leave
xor
jae
mov
inc
push
xchg
aas
xchg
cltd
lock
mov
lahf
xchg
stc
jle
sub
popf
mov
jb
gs
stc
push
mov
insl
mov
andb
orb
jbe
push
imul
lds
stc
jo
mov
arpl
or
test
es
jmp
inc
scas
jns
fucom
das
lods
cmpsl
lods
fs
adc
mov
cmp
dec
fdivrp
adc
arpl
or
jmp
jae
movsb
sub
cli
outsl
fsubl
jmp
in
lods
and
xor
lods
or
cwtl
xchg
ljmp
js
add
mov
cwtl
popa
dec
xor
push
jae
adc
fstpt
leave
fyl2xp1
mov
adc
sub
ss
mov
pop
ret
and
xchg
into
pop
loop
addb
daa
or
pop
imul
mov
sbb
outsl
pop
mov
imul
mov
test
jb
out
cmove
fdivrs
sbb
mov
ret
mov
fisubrl
shl
cmc
dec
rol
push
lret
outsb
in
pushf
imul
cmp
inc
imulb
mov
sahf
push
cs
push
jmp
or
dec
push
out
stc
cmp
les
pop
rcrb
xchg
pop
mov
out
mov
push
mov
dec
jae,pt
pop
inc
xor
or
jl
add
test
mov
mov
add
mov
push
mov
je
repz
fcomp
daa
popf
dec
aam
mov
push
fstl
in
pop
enter
pop
iret
std
pop
imul
lods
imull
stc
sub
lea
arpl
mov
pushf
cwtl
clc
je
in
cmc
repz
xor
sub
scas
jmp
lock
jae
mov
mov
xor
jbe
inc
jns
dec
inc
leave
mov
int3
add
jne
adc
cmp
test
shrb
lea
pop
sub
sbb
clc
hlt
mov
lds
sbb
jo
dec
stos
fdivl
push
scas
mov
push
mov
mov
pop
out
sbbb
jns
add
add
jmp
mov
dec
add
flds
cs
mov
imul
jo
ret
xchg
pop
adc
dec
je
or
xchg
xchg
negb
mov
hlt
idivl
frstor
aas
cs
dec
mov
sbb
js
aam
mov
xchg
adc
outsb
mov
jnp
scas
add
cwtl
out
in
sub
cmp
cltd
xor
pop
test
mov
push
lcall
fwait
cmp
mov
and
mov
aaa
or
flds
repz
pop
js
lahf
addr16
adc
mov
pushf
test
inc
call
push
pop
or
mov
jae
test
sub
ret
mov
ret
xchg
sub
jl
int
jnp
mov
fidivrs
mov
mov
sbb
and
or
aas
ja
xchg
lret
push
orb
sub
cmc
ret
orb
inc
and
sbb
sub
cmpsl
sbb
xlat
outsl
aad
jle
lcall
ljmp
mov
into
mov
mov
adc
push
jecxz
lods
inc
test
aam
jecxz
jecxz
test
paddd
mov
es
subps
push
iret
dec
push
adc
inc
es
sub
mov
lock
sbb
or
loopne
cmpsb
jle
sbb
hlt
inc
mov
and
cmpsl
scas
add
fisubrs
jns
test
inc
jb
leave
pop
fs
jp
int
fcmovnbe
xchg
adc
shll
xchg
jne
stc
mov
cmpsl
push
push
jae
ljmp
pusha
test
sbbl
aad
xchg
jbe
sarb
mov
mov
jecxz
cmpsb
and
sbb
jmp
xor
dec
ret
data16
xchg
int3
xchg
push
push
jb
stos
scas
loope
bound
call
mov
push
sub
dec
incb
shlb
scas
icebp
hlt
and
cmpsl
movsb
in
daa
insl
push
cmp
fstps
inc
sub
xchg
inc
movsl
or
mov
add
test
jne
cmpsb
test
sbb
jecxz
rcrl
or
scas
xorl
or
jl
add
cmpsl
sbb
dec
xchg
lods
scas
prefetch
sbb
xor
andl
stos
pop
and
jecxz
push
dec
daa
daa
xchg
xchg
fisttps
stos
test
pop
mov
sub
and
jb
dec
test
mov
dec
adc
mov
adc
pop
mov
or
adc
dec
or
dec
loopne
mov
outsb
lret
daa
mov
xchg
push
shrb
lock
or
in
xlat
repz
sub
shl
mov
lcall
out
int3
lret
jno
sub
in
xchg
ljmp
adc
cmp
dec
xor
insb
mov
sub
je
xchg
push
gs
pushf
iret
xchg
fistpll
fcmovb
xor
popf
or
mov
aad
test
les
mov
pop
ret
stos
pop
les
daa
or
fcoms
push
inc
mov
sub
inc
pop
push
aas
cmp
cwtl
stos
nop
or
dec
jecxz
lods
je
mov
popa
jo
mov
lcall
bound
les
adc
pop
call
enter
jns
sti
adc
repnz
jecxz
xchg
loopne
cli
repz
xor
dec
subb
xor
or
rorl
and
add
adc
xor
mov
pusha
inc
cmp
les
outsl
sahf
inc
iret
mov
shlb
adc
jnp
inc
ds
sbb
xchg
std
and
and
notb
lea
xorb
add
inc
or
dec
aas
stos
and
fwait
stos
leave
jne
ret
mov
pushf
cmp
lret
adc
idivl
xchg
add
mov
xor
scas
adc
cmovb
xchg
push
ficoml
das
scas
stc
mov
stc
pop
lret
daa
js
mov
or
fisubrl
adc
ret
inc
jl
cmp
dec
notl
out
jnp
fisubl
imul
roll
idivb
push
lcall
popa
aam
lds
cld
ffreep
lods
lods
mov
dec
push
mov
pop
add
ljmp
add
sti
adc
movups
adc
test
push
jg
sub
das
xchg
or
mov
add
loop
stc
in
jmp
mov
bound
jae
jne
cmp
jae
xor
clc
push
xchg
jne
in
xor
mov
call
bsr
add
adc
movl
btr
cmc
jmp
mov
add
sti
pop
mov
jnp
stos
lcall
cmpsl
rcll
out
sahf
cli
push
addr16
xchg
pop
fwait
std
inc
fidivrs
fdivl
xchg
or
mov
loope
adc
pop
push
enter
jge
push
xor
js
test
jmp
sbb
inc
dec
push
inc
cmp
jmp
mov
pop
mov
xchg
cmpsl
jo
lcall
inc
mov
stc
in
cmp
loopne
test
enter
leave
jb
jecxz
jne
inc
mov
dec
mov
pop
out
jo
js
and
cmp
ret
mov
mov
lods
cwtl
in
clc
or
rcr
rcll
or
and
iret
pop
sti
int
and
and
loop
idiv
aam
cwtl
mov
cld
mov
aam
lahf
dec
add
ja
mov
xor
push
sbb
fst
mov
imul
out
icebp
ss
sub
adc
dec
sub
xchg
push
out
addb
cmp
xchg
shrl
lods
jecxz
cwtl
leave
mov
loopne
mov
or
lcall
test
ror
cmp
fbstp
pop
sub
cmp
mov
sub
mov
jecxz
cmp
sbb
ds
lcall
stos
cmc
or
mov
pop
xchg
xchg
and
jmp
add
or
in
fsubs
xor
in
shl
imul
inc
sbb
mov
out
cmpsb
cli
jae
and
sbb
dec
jns
pusha
push
dec
setl
les
mov
jecxz
jns
loop
mov
sbbb
sbb
fs
pop
mov
pushf
inc
mov
scas
jp
push
movsl
xchg
and
add
pop
shl
cmp
sti
xor
insl
shrb
mov
mov
xchg
iret
imul
out
sarb
or
or
fdivp
cmp
test
adc
lcall
dec
xor
orl
lods
jo
out
mov
mov
shl
test
or
push
loope
cmp
cwtl
adc
les
fnstsw
mov
push
aam
jno
inc
xor
add
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
outsl
stos
jecxz
lds
mov
ljmp
add
or
inc
push
push
xor
ss
aad
push
enter
repnz
adc
rcr
addl
cmp
sahf
outsb
dec
insl
mov
sti
mov
mov
and
jnp
xor
fdivl
outsb
into
movsb
push
pop
cwtl
dec
iret
sti
cltd
aam
das
stc
or
fwait
sub
int3
dec
sub
pop
rclb
xor
cmpsb
in
and
ret
mov
dec
addr16
jecxz
test
sub
adc
ret
lret
inc
push
call
cld
subl
push
pusha
testl
test
sbb
mov
push
cmpsb
out
push
test
imul
imul
insl
pop
cld
mov
mov
push
or
lcall
and
pusha
and
mov
gs
insl
pop
cmp
mov
jg
into
dec
cld
andl
mov
adc
fnsave
and
test
cmp
lea
mov
pushw
jmp
mov
ffree
mov
lahf
cld
in
push
dec
aas
mov
cmp
push
add
adc
daa
mov
leave
out
cmp
in
cmp
ja
xor
mov
fwait
or
cltd
bound
rorl
clc
xor
out
mov
add
arpl
xchg
cld
into
sbb
pop
aad
mov
jmp
in
or
shll
cld
push
mov
adc
rcll
int
adc
out
or
fwait
or
pop
test
sub
push
hlt
mov
mov
push
out
sub
push
mov
cmp
movsl
call
aas
test
mov
fnstcw
fnsave
jg
sub
loope
or
lret
push
pop
icebp
das
fld
mov
iret
lods
test
pushf
or
lods
psubb
xchg
cmpl
push
rcrb
pusha
sbb
mov
mov
sarb
or
jmp
push
push
mov
fld
mov
xchg
lcall
ljmp
or
xor
cmp
mov
mov
icebp
icebp
inc
rclb
adc
push
pop
aad
movsl
inc
aaa
lcall
insb
xlat
push
movsb
popf
pop
add
pop
movsb
xchg
pop
add
mov
xor
bound
pusha
xlat
pop
inc
xor
test
bswap
adc
pop
dec
scas
dec
stos
lret
cmp
mov
push
aaa
lock
das
mov
jae
xchg
je
pusha
loop
sub
or
cwtl
sbb
or
repz
mov
xchg
shrl
ljmp
mov
testb
ror
adc
stc
sub
mov
mov
and
lea
pop
inc
loopne
dec
int3
cmpsl
jecxz
push
push
lret
cmp
inc
xchg
bound
stc
xlat
or
xlat
pop
test
and
cs
push
cmc
imul
or
cmp
mov
loop
jne
push
mov
push
out
inc
xor
je
jl
push
push
xchg
fldenv
adcl
cmp
push
adc
test
cmp
mov
add
fs
sub
inc
out
imul
es
mov
mov
pop
xor
lahf
andl
inc
and
pushaw
xchg
jbe
add
pop
lcall
lock
push
xchg
data16
clc
mov
dec
cmp
or
sub
xchg
mov
iret
xchg
jae
cmc
arpl
mov
or
or
mov
shlb
sarb
mov
mov
int
test
and
fsubs
inc
mov
or
dec
sbb
sub
mov
pushf
xchg
hlt
cmc
add
add
adc
xor
dec
push
and
push
iret
rclb
xchg
xchg
arpl
test
sbb
gs
dec
xchg
push
das
lods
sbb
mov
lods
ret
clc
addb
outsb
xchg
arpl
jmp
xchg
sub
add
fwait
lock
cmp
mov
mov
ss
push
in
aam
shll
xchg
push
sahf
sub
lcall
add
inc
loope
sti
inc
dec
dec
jmp
inc
jmp
jbe
loope
jecxz
mov
dec
sub
std
repz
enter
sbb
sbb
stos
add
and
jle
jp
lds
cmp
jne
call
pop
adc
xchg
mov
adc
arpl
xchg
sub
outsl
push
lret
xchg
and
mov
popa
xchg
inc
inc
mov
mov
xchg
xchg
pop
mov
int
ja
push
je
add
add
adc
mov
add
call
cwtl
jle
popa
fnstcw
inc
cmp
and
and
push
push
cmovnp
jns
test
into
mov
cmp
ljmp
pop
gs
mov
jne
repnz
inc
cltd
jb
mov
jns
sub
orl
or
jns
lds
adc
ss
inc
sbbb
mov
movsl
jecxz
lret
dec
adc
pop
xor
mov
hlt
imul
jno
xsha256
cmpsb
push
data16
jmp
fistl
and
gs
mov
mov
insl
mov
loopne
jp
dec
bound
ret
jo
or
insb
adc
lcall
adc
push
sub
stos
xchg
pop
jno
ljmp
in
mov
jecxz
lret
inc
fcoml
ljmp
dec
es
testb
in
lods
mov
inc
mov
es
outsb
lds
push
mov
repnz
fs
ja
and
inc
sub
shld
add
rcl
or
mov
and
adc
mov
test
repnz
pusha
movb
pushf
lea
jne
not
pushf
lea
movb
cwtl
push
push
mov
lahf
movzbw
lahf
mov
lea
jmp
jp
xchg
movsb
jecxz
push
push
mov
insb
outsl
inc
inc
inc
scas
xor
shl
insl
inc
sub
jns
cmp
adc
jbe
test
dec
test
xor
hlt
dec
mov
test
inc
jb
sti
ret
mov
ljmp
bound
add
push
loope
cmpsb
jg
jae
addr16
and
add
pop
rolb
dec
inc
into
test
bt
push
sub
pusha
stc
call
mov
movsb
jecxz
mov
pop
cmp
in
push
rclb
pop
outsl
push
lock
cmpsl
nop
sbb
cltd
dec
mov
clc
xchg
cmp
push
mov
push
scas
cmpsl
push
shl
mov
adc
rcr
rol
add
mov
test
insb
push
mov
aas
and
sub
sbb
sub
arpl
and
loope
cli
cltd
and
xor
sub
sub
xchg
outsb
inc
cs
mov
dec
iret
lcall
mov
mov
mov
mov
and
jnp
jns
stos
inc
insl
mov
cmp
and
mov
mov
dec
sbb
cld
ja
or
or
xchg
aad
jmp
adc
fs
out
lods
pusha
jbe
loopne
fldt
inc
cmp
sub
cmp
inc
dec
xchg
in
cmp
adc
dec
xor
xchg
adc
std
rcl
pop
call
mov
pushf
repz
pop
test
in
xor
ret
rclb
lock
popf
loop
sub
ss
push
jns
in
jp
dec
cmp
movsb
icebp
sub
pop
or
and
mov
jg
inc
mov
mov
pop
lahf
out
mov
xchg
mov
sub
fistps
lock
rcrb
popf
mov
cmpsb
jo
add
pop
js
ljmp
lock
std
std
xorl
jb
inc
or
and
pushf
mov
pop
pushf
ss
cmp
sbb
mov
dec
dec
mov
push
movl
dec
popf
es
dec
push
sub
sbb
xor
je
push
out
in
xchg
push
push
mov
xor
test
lods
inc
enter
icebp
mov
cmp
cli
fldcw
sub
lret
mov
xchg
pop
cmpsl
cld
subl
add
jl
sbb
push
gs
lock
pmuludq
jbe
shlb
cmp
fcom
pop
push
and
and
fwait
jl
int3
setae
push
jecxz
lcall
xor
mov
pop
push
mov
in
cmp
outsb
mov
rorl
lahf
test
mov
hlt
jnp
das
cli
int
add
or
jp
popa
dec
adc
adc
pop
add
fs
arpl
add
xlat
push
jb
xchg
adc
nop
into
mov
pop
fmulp
ficoml
mov
xchg
insl
incb
mov
in
cs
jle
push
inc
out
sbb
clc
mov
dec
or
das
inc
lock
pop
mov
xchg
int3
cwtl
xor
loope
xchg
dec
test
adc
push
call
fildll
jecxz
rcrl
sub
push
pusha
add
inc
outsl
insl
jo
jb
push
je
imul
cmp
cmp
pop
cli
pop
outsb
je
push
aaa
lds
dec
out
push
pop
adc
mov
lret
stc
shrl
dec
fidivl
out
push
mov
jg
fwait
movsl
or
or
add
or
push
test
clc
cmp
pushl
lea
jae
btc
mov
shrd
call
and
mov
mov
mov
leave
stos
cmp
mov
mov
jle
lcall
fisubs
cmpsb
pushf
fildl
ret
add
movsl
or
mov
inc
pop
ja
mov
mov
mov
jb
inc
hlt
out
sbb
sub
cmc
dec
repnz
dec
mov
lea
gs
push
cli
and
xchg
inc
cmpxchg
pop
in
arpl
int3
push
mov
fnstcw
or
xor
inc
and
loopne
arpl
add
incl
lahf
jecxz
addl
aam
push
jo
ror
div
lods
jns
shlb
mov
inc
insl
pop
sbb
add
xchg
nop
fyl2x
imul
push
jae
mov
sahf
dec
leave
adc
mov
or
dec
cmpsl
dec
mov
aam
jo
enter
stos
aam
ljmp
popa
daa
mov
mov
and
mov
and
add
or
into
mov
push
adc
pop
mov
fisubl
lahf
jecxz
decb
xchg
cld
push
lret
test
push
push
xchg
pop
mov
inc
mov
xchg
cmc
jno
lods
std
push
sbb
inc
call
addr16
jns
xor
repz
sub
sub
xor
out
or
scas
fiadds
push
cmp
mov
cltd
pop
and
aaa
insb
int
scas
inc
inc
fstps
lods
notb
lock
jns
adc
mov
testl
lds
loop
mov
jle
mov
dec
push
int3
push
insl
push
sahf
jecxz
fstps
and
daa
push
mov
mov
jo
sti
jp
jecxz
stc
mov
leave
push
cmp
mov
push
std
aaa
dec
inc
pop
cs
inc
mov
rorl
daa
cmpsl
in
push
bound
inc
xchg
xchg
mov
jo
pop
lods
mov
dec
xchg
jno
mov
mov
add
out
xlat
and
pusha
fnstenv
adc
out
in
fisubs
adc
daa
lock
jecxz
jnp
cmp
mov
scas
xor
push
call
call
idiv
inc
into
cmp
adc
xchg
mov
or
xor
imul
fisttpl
lods
ja
lret
jmp
sbb
bound
xchg
adc
test
xchg
scas
adc
and
push
je
rcrb
popa
fadds
mov
mov
push
cmp
push
in
cmc
sub
nop
cmpsl
js
push
bound
addr16
mov
xor
shll
mov
fdivrl
jmp
add
je
popf
jecxz
loopne
fisubrs
inc
or
cltd
or
push
fcomi
mov
push
hlt
xchg
inc
push
mov
js
ss
movsl
adc
xor
pop
sub
lret
mov
into
shrb
je
xchg
lret
jne
cwtl
sub
loop
or
sbb
mov
jno
lds
mov
jae
push
cmp
lret
add
test
popa
sbb
insb
cmpsb
stos
push
stc
sub
aas
sbb
cmp
enter
in
xorl
andb
outsb
ficompl
pmaddwd
mov
inc
or
in
aas
fwait
sbb
jns
xchg
mov
add
orb
jne
std
mov
popl
test
dec
incb
xlat
test
cmp
orb
mov
jg
mov
cmp
jb
mov
popa
fwait
inc
cmp
inc
jae
cli
add
inc
out
lahf
test
insl
pop
jbe
sbb
push
addr16
insl
jge
imul
mov
jecxz
cmp
sub
movsb
call
shr
pusha
pushf
jecxz
aam
push
stc
stc
imulb
push
xor
lret
cmp
xchg
or
adc
ja
xor
js
pop
mov
cwtl
jbe
xchg
mov
jge
imul
call
dec
push
stos
scas
mov
aam
stos
mov
aam
rdpmc
enter
push
mov
lds
fdivl
xor
je
mov
cld
sub
push
lcall
sub
inc
mov
inc
inc
inc
and
cltd
aas
sbb
pushl
jmp
je
lcall
loopne
fwait
cmc
mov
pop
push
aam
mov
sub
aaa
sbb
sub
aad
incl
mov
push
push
sbb
icebp
mov
xlat
mov
push
sbb
sub
mov
int3
in
std
sbb
or
cmp
push
mov
js
jo
lods
and
cmc
cmp
inc
jno
scas
ret
push
ljmp
ja
push
pushl
pusha
lea
jb
stc
cmp
cmpb
pushf
lea
jne
rcl
movsbw
xor
cmp
mov
cmp
add
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
test
adc
stc
movsbw
ror
bswap
mov
jmp
popa
inc
aaa
lcall
sbb
pop
enter
ljmp
xchg
gs
xchg
pop
dec
push
push
cmc
ja
repnz
pop
dec
maskmovq
negl
cmpb
inc
in
mov
xor
movsl
xchg
sbb
gs
mov
cmp
xchg
jmp
js
mov
add
dec
inc
cmpsl
div
pop
fdivrs
and
ja
clc
pop
or
xchg
enter
xchg
cs
sbb
rclb
xor
pop
mov
xor
xor
push
cmp
mov
xchg
push
adc
loope
aas
push
jb
adc
sub
add
sti
jo
pusha
xchg
and
push
push
imul
push
sub
dec
mov
or
adc
popa
xchg
dec
imul
pop
repz
and
ret
fnstsw
sub
inc
xchg
and
je
sub
bound
into
dec
loopne
test
rcrb
or
mov
push
and
push
jb
mov
mov
pop
inc
or
cltd
bound
mov
aas
in
lahf
add
and
cltd
adc
xor
dec
dec
fsts
xchg
dec
cs
jbe
jno
sub
mov
popl
les
pop
test
test
xor
sub
adc
iret
inc
bound
inc
pop
add
cmp
fwait
shll
ret
les
and
push
adc
dec
cmp
loop
dec
adc
das
nop
and
jbe
inc
push
mov
xchg
xchg
addb
cmp
pop
sbb
sub
je
or
and
jnp
shrl
fimull
enter
rcrl
daa
cmp
sbb
cmp
cmp
in
outsb
mov
ret
es
test
or
jecxz
or
lods
xchg
adc
js
es
jns
push
rclb
sbb
inc
add
pop
push
ret
dec
cwtl
inc
lea
add
push
lock
mov
xchg
je
lds
shll
dec
push
fmull
jg
and
loop
and
or
lea
mov
cwtl
dec
mov
test
push
push
dec
addr16
stos
push
popa
xor
sub
arpl
mov
adc
lods
inc
push
jmp
jg
xor
pusha
ja
popa
rcr
pop
fsts
jo
popa
aad
push
jno
xchg
arpl
xchg
and
push
push
dec
ret
xor
les
outsl
andl
push
outsb
xchg
pop
jae
mov
add
outsl
jno
loop
mov
and
push
test
push
and
les
and
and
int
les
arpl
inc
data16
aad
mov
cs
mov
xlat
jge
stos
xchg
loope
mov
test
cmp
lret
xchg
mov
xor
inc
imul
mov
popa
sub
in
and
ret
decl
xorb
ret
scas
and
and
test
pop
bswap
outsb
shrb
imul
dec
xchg
jno
add
inc
pop
in
bound
jb
and
pop
aam
jb,pn
lds
push
sti
inc
adc
icebp
cmpsl
xchg
inc
inc
test
popa
jbe
sub
add
mov
fcomp
sub
stos
xor
inc
mov
add
and
and
mov
or
stos
mov
rcll
jle
push
cli
inc
popa
addr16
add
les
in
xor
int3
mov
inc
hlt
inc
xchg
mov
inc
ret
add
and
jl
bound
mov
fidivrl
sub
and
jecxz
push
imul
mov
lods
pop
mov
mov
sub
loope
xchg
jns
arpl
or
pop
aaa
inc
sbb
pushl
imul
movl
mov
imul
and
dec
dec
insb
add
cmpsl
cmc
imul
andb
sub
adc
jmp
and
loop
push
xchg
mov
push
mov
jecxz
inc
shll
mov
cmc
fsubl
and
andb
add
lahf
cwtl
es
inc
fnstenv
les
aaa
or
inc
les
je
shrl
cli
xchg
push
sti
arpl
dec
jne
cmp
rorb
push
xchg
mov
push
out
ret
xchg
xlat
dec
les
flds
adc
push
insl
push
outsb
xor
xchg
imul
stos
in
inc
adc
bound
sub
or
cwtl
test
xor
sti
push
cmpsl
dec
sbb
sub
ja
shrl
aam
xor
mov
xor
mov
mov
xchg
out
and
aas
shlb
push
inc
jno
loope
sub
adc
cmp
enter
shll
arpl
push
inc
pop
aam
out
sbb
xchg
outsl
mov
xchg
fldenv
js
jns
in
rorl
fucomi
jle
pop
cmc
bound
mov
push
cmc
je
mov
jno
stos
ret
shrl
out
adc
enter
jg
loopne
pop
fs
icebp
push
andb
add
xchg
add
test
pop
cmp
pop
enter
in
pop
jb
pop
cmp
inc
adc
xor
jb,pn
subb
fs
push
xchg
addr16
inc
outsl
test
mov
inc
sub
mov
mov
subl
and
pop
xchg
outsb
loope
push
in
sbb
xchg
pop
inc
outsb
mov
stos
lahf
cmpsl
mov
popa
in
test
mov
jno
aam
dec
or
inc
popa
xchg
loope
jmp
inc
push
imul
lds
jno
adcl
inc
ja
or
outsl
jne
fists
adc
push
push
ret
jae
lcall
xor
in
push
imul
and
adc
cmp
sbb
shrb
movsl
in
mov
xor
fdivp
push
insb
or
int3
fistps
and
push
ret
adc
adc
jne
cmc
and
aam
scas
mov
and
les
pop
lcall
inc
adc
mov
stos
iret
xor
inc
xchg
dec
inc
jp
adc
sbb
testl
cld
mov
fwait
and
xor
add
mov
cld
and
jb
inc
cmp
inc
ret
push
lods
lea
and
pop
movsb
icebp
jmp
push
mov
les
cmp
out
movsl
pop
int
or
sub
dec
bound
addr16
lods
ret
jmp
cmp
lret
lahf
aas
scas
and
mov
lcall
and
fdivp
xchg
jecxz
mov
out
cmp
mov
jne
das
xor
inc
lret
enter
xchg
ret
xchg
pop
jge
aas
add
mov
fbstp
dec
aaa
jg
sub
xchg
mov
hlt
push
les
in
adc
mov
jl
pop
fmuls
cmp
xchg
inc
jmp
outsb
imul
inc
mov
xchg
or
repnz
das
sub
int3
out
call
stos
push
les
sbb
sub
xor
mov
enter
and
cld
jl
sub
ret
in
or
aaa
mov
aaa
push
es
push
mov
addr16
xor
rorb
and
pop
test
popa
add
pop
inc
les
loop
cwtl
push
ljmp
ret
mov
sbbl
cmc
aas
lock
or
or
sub
push
fmul
imul
sub
clc
mov
xchg
loope
inc
jns
es
jne
int3
out
fwait
xchg
imul
test
in
add
jbe
pop
gs
sub
rcrb
aam
push
enter
xor
mov
sti
mov
pop
inc
inc
cmpsl
cli
gs
pop
jbe
and
push
movsl
outsl
mov
repz
lcall
dec
and
nop
cltd
sti
iret
fstl
xchg
xchg
push
ds
xchg
enter
test
mov
imul
loop
add
push
mov
and
dec
cmp
arpl
or
sbb
in
insl
mov
je
sub
insl
cltd
inc
ds
xchg
xlat
adc
test
rcll
imul
xchg
xchg
fs
cmp
push
pop
jg
call
lcall
sub
dec
cmp
sub
push
ja
in
loopne
and
cld
test
xchg
rcrl
pushf
inc
sub
inc
outsb
dec
xor
mov
in
inc
adc
shll
and
lock
xor
repz
cs
aam
sahf
js
pushf
nop
cmc
jecxz
pop
add
test
xlat
clc
mov
in
fsubrs
sub
sub
inc
mov
sub
shll
xlat
add
or
dec
daa
out
dec
mov
push
mov
xor
hlt
inc
jnp
inc
xchg
dec
sub
push
xchg
add
imul
sti
xchg
pop
jbe
and
ret
out
or
mov
mov
lret
and
les
out
sub
stos
orl
imul
xchg
call
and
dec
sti
mov
orl
orb
dec
addl
xor
mov
jmp
and
pop
xor
es
add
push
cmp
xchg
inc
inc
lahf
popa
or
rol
jge
cwtl
icebp
cmp
dec
xor
fs
or
fs
out
cmp
lea
sub
push
fildl
shl
imul
mov
das
imul
mov
jno
inc
test
mov
mov
mov
push
mov
mov
dec
jne
popf
jne
cmp
sbb
and
loope
mov
push
dec
dec
inc
push
sub
mov
mov
andl
sbb
mov
aas
inc
cmp
pop
xlat
sub
push
std
add
push
push
add
inc
adc
mov
xorl
push
iret
dec
roll
bound
sbb
in
xor
lea
call
imul
pop
insl
pop
adc
les
daa
mov
mov
out
dec
andb
push
movsl
sub
inc
mov
push
inc
daa
jne
sti
popa
sub
outsb
xor
mov
and
mov
enter
adc
mov
bound
and
mov
mov
pop
arpl
xor
mov
sbbb
and
adc
and
mov
sahf
lock
in
arpl
repz
call
xchg
loope
pop
test
imul
pop
sub
dec
and
daa
pusha
arpl
movsb
xor
mov
imul
fnstcw
xchg
ds
push
bound
inc
mov
mov
lcall
hlt
ret
outsb
mov
jbe
adc
les
sub
push
shll
pop
xchg
imul
mov
mov
mov
ds
mov
xchg
and
sbb
in
out
and
inc
ret
js
mull
jae
adc
add
movsb
adc
jns
pusha
orb
repnz
mov
push
arpl
fmuls
sub
xchg
xchg
pop
dec
pop
fsts
fbld
push
mov
pop
sbb
or
mov
fwait
mov
andl
les
dec
xchg
bound
xchg
inc
inc
inc
sub
and
ret
leave
test
stos
inc
out
lahf
pop
inc
sub
ja
fnstsw
lds
ljmp
leave
and
or
push
inc
ja
icebp
dec
sub
push
mov
or
xor
iret
jnp
dec
test
mov
jp
inc
repz
es
data16
fucom
push
mov
push
add
and
das
lods
sub
cmpl
mov
jp
leave
dec
cmp
stos
sbb
xchg
dec
pushf
enter
sbb
cmp
popa
cmp
sub
lcall
imul
jno
lods
sub
cltd
and
fisubl
out
sub
nop
cmp
stos
stc
add
mov
cmpb
push
xor
aaa
sbb
sahf
inc
inc
cwtl
fstl
dec
adc
mov
pop
fists
add
lahf
dec
and
dec
add
setg
dec
push
fstl
je
push
push
xchg
imul
not
sub
inc
pop
enter
in
ret
enter
xor
icebp
adc
xor
movsb
pushf
arpl
les
ja
jno
push
in
mov
ja
xbegin
scas
rcll
dec
popa
and
pop
or
adc
imul
hlt
add
test
test
dec
imul
dec
cmpsb
jb
loop
mov
cmp
xor
push
pop
pusha
mov
dec
iret
sub
jne
insb
out
stc
leave
push
push
aas
mov
pop
into
into
les
les
mov
gs
jl
aas
mov
lods
aam
jg
and
cld
js
dec
lcall
inc
xchg
out
movsl
mov
xor
cmp
sahf
or
jns
jnp
and
sub
mov
das
mov
cli
icebp
sti
jl
stos
xor
fildll
in
inc
lahf
xchg
imul
cli
xor
push
cwtl
push
inc
push
mov
add
xor
aas
jae
and
cwtl
sarb
push
daa
xchg
test
cmp
clc
ja
push
jae
jmp
fadd
in
xor
mov
xchg
push
ficoms
aam
inc
dec
repz
push
ret
pand
pop
rcll
enter
imul
mov
imul
pushf
mov
iret
movsb
ljmp
shrl
xchg
mov
xor
mov
pop
dec
shll
pop
dec
in
adc
out
inc
dec
xor
loopne
push
mov
ds
mov
xorb
cwtl
repnz
fwait
lcall
and
and
clc
push
xor
fst
popa
and
inc
push
dec
xor
cmp
outsb
stos
lret
loope
loop
jno
xor
xchg
push
jmp
enter
int3
ljmp
and
jl
jns
jno
les
and
mov
mov
xchg
push
xor
jo
stc
arpl
inc
es
rorl
bound
in
push
xchg
push
shrl
jno
jne
mov
add
inc
outsl
mov
cmp
cmp
sub
mov
dec
fs
inc
andb
push
outsb
inc
pop
fnstsw
xor
imul
lret
inc
mov
add
dec
cmpsb
aam
push
inc
and
iret
sbb
in
dec
sub
mov
std
rcll
mov
inc
jo
ja
push
mov
inc
enterw
rcrl
sbb
imul
push
sbbb
jg
es
push
fldcw
mov
or
ret
mov
jbe
xchg
sub
mov
mov
dec
xchg
icebp
cmpsb
les
push
shrb
jne
cld
jo
push
xor
mov
loope
dec
sub
movsb
add
fnstenv
aaa
ds
pusha
mov
xorl
ljmp
xor
aam
jo
push
inc
test
test
inc
mov
and
cmpsl
cmpsl
push
rcr
dec
rol
mov
mov
push
pop
mov
xor
dec
sub
dec
lea
icebp
into
push
mov
addb
adc
in
and
mov
cmc
roll
jmp
mov
fs
sbb
mov
out
jo
sti
jge
and
sbbl
and
fs
push
data16
movl
addb
data16
and
mov
push
xor
adcb
xchg
cs
cmp
push
fstps
push
cmpsb
aaa
les
aas
cld
fmuls
popf
jnp
xor
xor
xor
jb
pop
jmp
pop
aad
rol
imul
dec
lret
ret
push
sahf
lds
inc
push
out
push
arpl
mov
mov
push
and
jns
inc
and
xor
cwtl
outsl
or
scas
divl
inc
insb
lcall
repz
imul
scas
xchg
and
movsl
pop
sbb
lea
sub
dec
sbb
and
mov
push
test
push
mov
cmp
inc
icebp
mov
mov
mov
aas
pop
repnz
xchg
ds
inc
sub
in
icebp
mov
jecxz
mov
mov
jb
cmpsb
push
pop
dec
cmp
mov
inc
pop
ja
xchg
mov
xchg
inc
ficoml
cmp
mov
mov
paddusw
push
sub
mov
sub
inc
adc
inc
bound
cmp
out
push
xor
in
adc
dec
inc
pop
sbb
leave
fs
mov
outsl
pop
inc
xor
loope
js
int
push
pushf
outsl
rolb
jge
loopne
sahf
jmp
std
inc
jno
mov
pop
xchg
ljmp
andl
stos
adc
mov
enter
cwtl
mov
lret
lods
and
pop
mov
push
je
sub
xchg
jne
lcall
mov
push
outsb
fsubl
out
ss
out
jp
lret
idivl
jg
movl
jle
int
insl
jne
adc
xor
jae
push
dec
ret
sub
cmp
hlt
and
lret
xchg
outsb
push
pop
pop
les
insl
inc
xor
fwait
jmp
jle
mov
push
push
scas
sbb
out
push
js
dec
jl
sub
xchg
xchg
push
imul
jbe
std
enter
lea
aad
fsubrl
dec
cmp
das
imul
xor
or
mull
adc
js
ret
scas
push
pop
mov
repz
jge
pop
cs
and
les
adc
inc
pop
push
enter
cwtl
mov
push
push
jae
fisubrs
loop
bound
mov
fwait
jp
les
mov
les
xor
mov
imul
lret
mov
sub
cltd
and
ret
mov
hlt
push
inc
jbe
fwait
ljmp
aam
fs
dec
rol
lret
outsl
addr16
clc
sub
dec
sub
push
shlb
inc
xchg
cld
add
dec
sub
dec
xor
mov
out
enter
mov
pop
jmp
sub
sub
in
movsb
insb
push
lret
xor
inc
pusha
pushf
and
aaa
in
pop
adc
mov
ret
loop
mov
inc
js
in
fwait
and
cmp
js
mov
mov
dec
and
adc
push
pusha
test
mov
dec
adc
sub
bound
shrl
push
cmpsl
imul
mov
in
inc
push
cmp
out
jecxz
sahf
enter
xor
popa
imul
adc
add
mov
jbe
scas
or
inc
jg
popa
jle
dec
cltd
std
outsb
jge
fs
xchg
jg
fadd
pop
mov
mov
push
pop
dec
mov
adc
xchg
add
enter
xchg
jl
fmuls
add
insl
loope
iret
repz
push
mov
jbe
daa
insb
or
xor
les
dec
cli
popa
popa
pop
sti
mov
aam
or
in
out
dec
add
mov
insl
enter
int
lahf
hlt
xor
fistps
push
sti
sub
or
xorb
aas
out
fisubrs
pop
fimull
gs
fistpl
or
adc
mov
cmp
scas
daa
ror
add
xor
addl
mov
ret
mov
je
int3
imul
dec
les
pushf
out
jnp
inc
push
cmpsb
arpl
rcll
mov
xchg
pop
jmp
orl
enter
and
inc
pop
addr16
push
repnz
sub
roll
outsl
cmpsl
test
lock
add
xor
push
inc
sub
xor
loopne
add
adc
imul
mov
fwait
dec
cwtl
cmp
dec
fcoml
push
inc
sbb
movsl
imul
addr16
les
xor
pop
cltd
cmp
into
lds
jns
add
and
xchg
ss
inc
dec
xorl
andl
xor
enter
xchg
pop
outsb
clc
bound
push
inc
adc
cmpsb
inc
mov
shrl
lods
ret
push
xor
push
cmp
mov
and
jg
hlt
ret
xor
bound
repnz
adc
dec
adc
jno
mov
loope
bound
cmpsl
hlt
xchg
arpl
aas
inc
mov
push
xchg
jb
push
pop
mov
mov
inc
rolb
xor
loope
mov
jecxz
inc
imul
sbb
jns
out
mov
sub
xor
dec
jae
jo
sub
in
fwait
cmpb
and
jb
jno
jge
fsubs
pop
xchg
cmp
lret
push
bound
ds
adc
cmp
jl
jae
mov
mov
push
inc
xor
pop
or
sub
out
loope
in
push
mov
insb
mov
mov
sbb
arpl
dec
cmpsb
xor
test
inc
mov
xorps
dec
adc
jge
test
jmp
pop
jno
nop
xor
mov
jle
xor
xor
jno
add
sub
mov
cld
mov
pop
jle
fs
dec
xchg
or
aad
jmp
mov
mov
mov
cmp
or
aaa
and
or
pop
mov
ds
inc
inc
adc
loop
hlt
inc
cli
cld
push
push
xor
jo
pop
sbb
cmpsb
push
pop
xor
sbb
mov
or
pushl
std
jge
cs
ljmp
sahf
mov
sub
dec
leave
je
and
enter
xor
jbe
dec
shll
das
pop
in
mov
insl
sub
popl
test
and
jl
in
xor
mov
movsl
mov
in
inc
mov
push
xor
dec
insb
jb
fs
jne
mov
sub
jno
xchg
ljmp
push
filds
xchg
les
adc
aam
cmp
mov
and
paddusb
pop
xchg
das
or
into
or
adc
and
daa
xor
shlb
mov
inc
loopne
mov
pop
mov
xchg
fwait
test
insl
inc
hlt
shll
adc
cmc
sbb
fistl
add
dec
pop
push
cld
lahf
nop
xchg
or
fisubl
or
mull
xor
cmpsb
sbb
cmp
pop
pop
frstor
fcoml
adc
xor
sbb
xor
sbb
mov
data16
adc
xchg
adc
xchg
aaa
mov
sbb
mov
lods
mov
cld
or
outsl
movsb
incl
and
add
data16
fidivrs
aaa
adc
insl
inc
jmp
cltd
ret
rorl
scas
pop
sbb
sub
jbe
xchg
test
icebp
call
arpl
inc
push
daa
jns
add
mov
das
adc
xor
xchg
inc
adc
sbb
xor
jp
pop
stos
lea
push
arpl
aad
xor
mov
lret
mov
xor
mov
dec
xchg
enter
mov
or
mov
enter
or
xor
pop
sbb
mov
sub
xor
fucomip
outsb
icebp
and
cs
xchg
pushf
mov
loopne
mov
xlat
notl
loopne
mov
adc
cmovne
daa
or
aas
xor
jecxz
enter
dec
pop
dec
les
push
inc
mov
fsts
outsb
mov
lea
lods
mov
cmp
push
punpckhwd
insb
ret
lea
cmpsl
push
les
je
adc
dec
sub
out
mov
inc
jns
inc
mov
or
xchg
jge
roll
addl
pop
cmp
ret
push
mov
aam
icebp
sub
fwait
mov
lods
popa
dec
mov
loopne
and
xchg
xor
dec
out
cmp
mov
or
loopew
stos
lea
push
lods
sbb
sti
les
mov
inc
lcall
add
push
loop
dec
add
pop
mov
inc
sbb
dec
and
out
inc
sub
adc
sub
jno
mov
cmp
pop
addr16
pop
cmpsl
sbb
aad
ret
leave
fistpl
dec
push
in
call
mov
cld
mov
xor
add
mov
push
lods
rclb
jecxz
inc
outsb
mov
and
ljmp
popa
lea
add
xor
inc
ror
mov
push
bound
or
jp
mull
add
jecxz
out
adcb
mov
jae
jge
jp
and
sub
roll
cmp
loope
xchg
push
cmp
cmp
xchg
jns
repnz
cmpsl
mov
inc
adc
push
mov
repz
sbb
rcll
lea
scas
test
je
or
xor
nop
mov
inc
enter
sub
xchg
lea
ljmp
or
sbb
inc
push
dec
leave
and
dec
fwait
xor
xchg
bound
or
dec
dec
out
pop
jp
xor
arpl
pop
outsb
push
xchg
imul
into
sbb
and
enter
inc
les
in
and
push
arpl
insb
xchg
fisubs
fistl
leave
mov
xchg
jmp
mov
cmp
mov
std
cmc
dec
nop
in
push
pop
mov
les
sub
pop
fs
icebp
mov
repz
xor
inc
cwtl
loop
bsr
jne
pop
enter
ljmp
in
xor
ret
fcmovnu
xor
imul
xor
cmc
rorb
or
jo
dec
popa
dec
add
pop
dec
nop
sub
lcall
or
sbb
jp
ljmp
jns
pop
cmp
jno
insl
stos
pop
xchg
out
mov
in
test
xor
popa
adc
icebp
sub
sub
and
add
dec
jg
lcall
cli
cmp
add
std
fwait
xor
sbb
cmp
inc
les
inc
inc
test
inc
xchg
mov
xor
xor
sub
mov
cmpsb
mov
and
enter
dec
and
sbb
push
pop
adc
lods
push
pop
leave
or
add
mov
dec
pop
arpl
push
cmp
sysexit
cltd
and
ja
icebp
enter
notl
leave
inc
daa
jb
lds
mov
ret
lods
mov
rcll
mov
and
mov
and
repnz
lret
push
cmp
xchg
xchg
gs
fisttpll
data16
and
sti
dec
pop
inc
bound
inc
in
mov
sub
test
pop
out
ja
call
inc
movsb
add
push
mov
jle
and
pop
repz
push
pop
dec
dec
xchg
dec
sti
stos
sub
bound
enter
cli
pop
mov
mov
mov
fldenv
filds
sbb
test
jl
pop
pop
inc
add
mov
sbb
sti
int3
xlat
mov
mov
sub
insb
fwait
shll
inc
les
arpl
adc
inc
xor
dec
add
jnp
push
stos
stos
push
and
dec
pop
jg
scas
inc
pop
loope
mov
je
xor
test
mov
pop
call
mov
in
les
mov
fidivrl
or
roll
dec
jp
fs
push
lret
xchg
in
jecxz
inc
inc
push
enter
jge
cld
outsb
icebp
push
iret
xor
stos
lcall
pop
pop
test
out
sarl
inc
mov
pop
xchg
or
and
and
enter
dec
cmpsl
fsubp
mov
popa
ss
inc
loopne
adc
mov
adc
push
icebp
sbb
mov
fsubs
mov
jae
jo
aas
lcall
cmp
leave
fwait
mov
pop
popa
mov
dec
xor
pop
sub
jg
or
push
pop
ret
inc
push
mov
out
mov
sub
dec
inc
cmp
xor
repnz
jne
imul
jo
jb
aas
das
or
aaa
jno
xchg
dec
gs
inc
clc
out
cmc
mov
adc
imul
jg
ret
jns
pop
xchg
lock
sub
jo
dec
test
cmp
mov
out
inc
pop
pop
push
fs
aas
dec
in
add
push
rorl
rolb
arpl
inc
filds
les
popa
aad
mov
divl
jo
outsl
cmp
xchg
sbb
stos
loop
insl
and
or
div
mov
cli
add
test
cld
pop
js
imul
jo
mov
mov
insl
mov
stc
sub
inc
lock
out
ret
or
pop
fldl
xlat
mov
inc
mov
movsl
bound
stos
into
dec
and
adc
mov
inc
aam
ret
xchg
sti
mov
cmpsb
enter
pop
ja
lock
mov
popl
pop
scas
cmc
xchg
and
clc
sub
addr16
pop
cltd
inc
cmp
iret
jg
mov
sub
test
leave
jbe
sbb
lock
test
loope
rol
imul
mov
in
jle
xchg
scas
pop
and
xor
mov
sbb
and
repz
movb
xchg
mov
xor
sbb
int
divb
roll
lods
jb
enter
cmp
mov
push
bound
adc
mov
inc
cld
inc
and
in
adc
and
lahf
push
add
dec
js
dec
cmp
push
xor
les
xchg
lods
ss
mov
loopne
decl
adc
shrl
mov
jb
sub
or
out
sahf
xchg
imul
and
aas
xor
les
and
xchg
mov
and
mov
sub
mov
ja
mov
cmp
bswap
insl
cmp
push
fwait
cs
xchg
mov
enter
xor
or
mov
cmp
adc
jne
les
adc
inc
dec
fidivl
pop
outsl
push
mov
jbe
mov
jb
fdivrs
out
adc
pop
push
in
sub
inc
or
movsl
and
sarl
int
or
data16
xor
movsb
cmp
mull
jae
xor
nop
dec
in
data16
leave
cs
pop
mov
inc
icebp
les
jmp
inc
ja
lahf
and
cwtl
inc
and
rcll
or
outsb
jle
shll
sbb
mov
sub
aaa
divb
xlat
jp
ret
xchg
mov
dec
cwtl
inc
mov
fs
add
lcall
scas
dec
inc
or
imul
pop
mov
bound
into
shlb
dec
dec
lcall
sahf
faddp
jb
pop
bound
sbb
fisubs
out
sti
jo
jno
push
lods
jo
add
shrl
lods
sub
and
mov
arpl
mov
rcl
pop
dec
ja
test
pop
xchg
repnz
mov
or
imul
pop
xor
inc
adc
repz
int
push
xor
cli
jge
mov
insb
sbb
adc
imul
and
addl
stos
xor
fsts
iret
popf
xor
sub
inc
jle
xchg
lcall
jno
sbb
and
scas
outsb
sbb
add
ret
mov
data16
adc
aas
stos
lcall
add
push
dec
sahf
cli
add
andl
inc
bound
add
mov
imull
cwtl
inc
sbb
popa
pusha
push
cmpsl
ficoms
scas
imul
xor
movb
stos
push
leave
test
dec
icebp
inc
add
icebp
int3
aam
in
leave
mov
lret
es
enter
lock
inc
mov
dec
sub
sub
mov
jno
jb
jbe
push
jno
jge
jp
mov
inc
adc
and
bound
lock
outsl
inc
sbb
xor
mov
push
dec
pop
mov
test
lds
mov
sbb
clc
sub
mov
mov
lds
jae
push
and
adc
stos
pop
insl
pop
mov
mov
sub
inc
outsl
mov
frstor
movsl
xor
dec
ja
sub
andl
push
push
mov
mov
add
ss
fstpt
mov
inc
les
repnz
jg
inc
mov
mov
popa
movsl
inc
and
inc
outsb
pop
in
imul
push
jecxz
ffreep
pop
repnz
aaa
fstpl
arpl
sub
loope
out
movsl
mov
fsubrs
cli
xor
adc
mov
xlat
xor
mov
int3
sbb
arpl
inc
fdiv
and
jle
mov
and
dec
lods
std
jnp
jne
jo
test
push
fisubrs
inc
mov
jg
cmp
lods
fidivrs
xor
fdivrs
movsl
mov
dec
outsb
stos
xchg
cld
je
negb
mov
das
sbb
lret
pushf
les
mov
test
test
jb
negl
add
cltd
sub
mov
imul
sbb
pop
std
cmp
testl
sub
cmp
pop
mov
and
cmp
imul
repz
xchg
inc
or
dec
insl
int3
xor
out
push
and
loop
push
imul
out
je
adc
mov
loope
insl
push
inc
stos
jnp
in
roll
sub
mov
inc
not
jae
arpl
fldl
out
inc
add
lahf
fnstsw
xchg
mov
int3
jnp
jg
ret
pop
and
push
enter
sbb
xor
xor
les
mov
stos
cmpsb
push
fnstenv
jmp
push
es
fstps
lods
enter
inc
test
cwtl
inc
push
xchg
int
mov
test
les
lahf
frstor
jnp
enter
fyl2x
push
fndisi(8087
push
aam
push
jle
cmpsl
ret
xor
ret
pushf
xchg
ret
inc
imul
cmc
into
rolb
fsubl
nop
push
xor
or
clc
sbb
ss
fimull
and
jmp
inc
movsb
push
iret
stos
add
xor
xor
jg
xor
fsubl
add
aas
inc
mov
imul
hlt
ja
frstor
aam
mov
xchg
mov
subl
mov
and
test
jno
push
push
jg
punpckhbw
lods
cmp
scas
ret
dec
pop
fisttpll
inc
push
subl
clc
in
adc
cmpsl
arpl
cmc
aaa
mov
icebp
adc
cmp
jl
sub
xchg
add
dec
or
cli
pop
mov
subb
mov
outsl
mov
test
push
mov
sbb
mov
push
push
xor
roll
mov
and
dec
dec
into
les
adc
movq
adc
sbb
addr16
mov
push
scas
int
nop
imull
insb
dec
fimuls
loop
fldcw
jbe
inc
pop
fnsave
fldenv
test
sti
sub
insb
mulb
test
dec
inc
leave
loop
mov
clc
pop
sbb
mov
xchg
and
addr16
adcb
movsb
push
mov
xchg
xchg
jns
mov
sub
xchg
fwait
sub
lds
stc
sub
pop
and
xchg
das
pushl
mov
xor
jns
je
and
nop
inc
sbb
push
mov
xchg
cltd
enter
cmpsb
or
sbb
ljmp
subb
mov
sbb
imull
pop
inc
sbb
and
shrb
cmp
mov
fs
dec
jp
jg
cld
and
sbb
mov
push
adc
mov
insl
les
sbb
sti
stos
cmp
or
mov
jno
sbb
xchg
xorl
sub
inc
cmp
leave
aaa
add
rolb
sbbl
xchg
sbb
jo
cltd
das
bound
add
mov
cmpxchg
aaa
aaa
fsubrl
rol
push
subl
mov
adc
or
dec
jno
roll
imul
aad
jp
xor
mov
adc
mov
subl
add
adcb
dec
enter
mov
mov
pop
cmp
std
or
aad
sarl
imul
mov
fwait
cmpsl
jne
xor
mov
inc
push
sbb
mov
ds
andl
cmp
fucom
mov
fstl
cmpsb
mov
inc
inc
pop
and
dec
inc
mov
jp
add
add
fdivrl
mov
xchg
mov
cmp
and
in
push
xchg
enter
test
inc
cmp
repnz
jge
mov
movsl
xor
xor
or
sti
and
test
add
std
dec
add
and
push
xchg
xchg
js
push
xchg
xchg
cltd
dec
shlb
pop
mov
or
sbb
fldt
mov
pop
dec
sub
mov
pop
subb
sub
pop
addr16
imul
dec
call
je
lds
jle
push
clc
ds
sbb
add
je
mov
inc
adc
sbb
or
add
dec
shll
sbb
std
and
subl
sub
xchg
jb,pt
mov
lock
xchg
outsl
lahf
mov
pop
out
xor
out
dec
es
rolb
cltd
jle
or
insl
sub
cltd
xor
test
sub
or
imul
mov
xchg
adc
or
inc
push
outsl
sbb
dec
jno
mov
mov
sarl
pop
add
and
lcall
daa
aam
xchg
fimull
add
push
xchg
insl
mov
test
pop
push
pop
aam
outsl
or
pop
imul
inc
xor
loope
cltd
inc
mov
pop
lea
dec
sub
loopne
andb
or
test
dec
inc
dec
out
ljmp
pop
mov
arpl
mov
into
les
sbb
icebp
push
dec
mov
arpl
testb
rol
jo
in
aaa
inc
pop
jo
insb
push
sub
and
clc
test
and
add
inc
data16
or
out
mov
push
bound
xchg
pop
fmuls
add
push
mov
enter
sahf
ret
and
adc
pop
adc
cmp
push
mov
ret
cmpsl
xlat
cmpsb
test
shlb
popf
adc
and
push
and
jl
and
mov
add
push
mov
and
jo
and
jge
mov
pop
xchg
in
pop
sarb
enter
xor
dec
jmp
rep
movsl
test
cmp
cmp
inc
ret
cwtl
push
imul
nop
mov
sbb
pop
out
jle
das
sub
and
sbb
and
xor
jecxz
sub
sarb
int3
and
stc
and
push
push
mov
sbb
sbb
lods
or
iret
pop
mov
andl
sbb
cmc
and
mov
and
int3
dec
lret
or
and
add
or
mov
jo
cmc
cs
xchg
dec
xchg
xchg
lar
cmp
mov
dec
clc
lret
and
lods
mov
fneni(8087
jno
enter
mov
mov
fdivr
and
dec
jmp
and
sbb
repz
mov
pushf
mov
fisubrl
mov
xchg
adc
imul
push
and
lock
add
and
shl
ja
adc
lods
cltd
xor
xor
push
je
in
test
cmp
pop
adc
aad
outsl
fwait
iret
shll
imul
cld
sbb
or
std
cs
mov
mov
push
daa
pop
sub
cmp
and
mov
lods
loop
nop
mov
jl
repz
popf
and
add
inc
and
inc
push
sahf
jno
dec
pushf
and
pop
inc
lock
xchg
and
dec
mov
es
pop
je
sub
xor
jp
hlt
mov
or
mov
pop
mov
cmp
push
and
xor
arpl
gs
jge
add
popf
cltd
and
sti
icebp
jecxz
psubb
hlt
jecxz
xchg
inc
and
add
and
loop
call
ja
pop
stos
fs
cmp
mov
daa
in
mov
imul
aas
sub
pop
sbb
lock
loop
pusha
and
jecxz
inc
and
inc
push
into
mov
lea
aad
push
adc
test
dec
fwait
aam
and
dec
or
clc
push
leave
push
sarb
cld
xor
adc
dec
and
mov
push
sub
fbld
fs
andb
ret
notb
or
stc
fwait
and
mov
mov
and
mov
mov
ret
xor
loopne
out
mov
and
or
sbb
lcall
sub
andl
ret
push
test
cmpsl
jb
je
out
fdivrl
and
adc
cmpsb
mov
in
jb
xchg
and
addr16
inc
push
popa
sub
and
push
inc
prefetch
daa
cltd
icebp
adc
lret
and
ss
mov
fwait
mov
nop
out
cltd
xchg
std
mov
cmp
fldenv
aam
subl
repz
and
loope
push
daa
xor
sahf
or
movsb
pusha
jns
and
push
inc
aam
jmp
mov
inc
loopne
sahf
and
int
push
stos
js
shlb
pop
push
out
pusha
stos
leave
and
insl
lret
and
aaa
mov
shlb
fstpl
adc
int
mov
and
sahf
fiaddl
dec
out
pusha
sub
ljmp
fldt
and
inc
sub
andb
mov
mov
sub
lods
and
cmc
test
mov
iret
and
shlb
dec
in
add
and
je
adc
fisubrs
mov
in
mov
stos
mov
rorb
cmpsb
push
and
add
sti
sbb
fsub
add
sbb
pop
repz
xchg
ret
xor
mov
das
imul
int3
sub
add
mov
movsl
and
xor
and
rolb
and
enter
fstpl
stc
shr
sub
rorl
and
je
pop
cmp
loop
push
icebp
lahf
shll
mov
call
inc
and
adc
sub
jle
inc
push
and
push
sbb
sbb
cli
and
sub
mov
bound
hlt
mov
ja
test
add
sub
das
and
cmpsl
dec
sbb
inc
outsb
push
jle
ret
lahf
out
and
mov
adc
push
scas
aam
enter
inc
lds
and
fimuls
inc
out
insb
inc
sahf
notb
push
push
xchg
and
cmp
ficoms
fiaddl
inc
mov
sub
adc
push
sbb
push
xlat
and
shl
push
loope
test
popa
xchg
and
and
inc
loopne
cmp
push
in
lds
and
pop
aaa
xor
mov
cmp
dec
and
iret
mov
and
cs
and
shlb
add
enter
aaa
jo
add
jae
stos
and
cmp
test
js
ret
sub
mov
inc
aas
jecxz,pn
pushf
stos
cmp
jecxz
adc
daa
mov
pop
fnsave
and
and
mov
pop
and
sarb
daa
inc
cmpsl
imul
or
cmpsl
call
and
cmp
sahf
imul
cmpsl
loop
dec
and
pop
add
xor
xchg
dec
lods
sub
fsubl
mov
sub
gs
mov
lods
and
decb
je
push
and
outsb
pop
sahf
mov
ja
lock
std
les
add
in
cmc
sar
xor
mov
data16
and
in
mov
xor
dec
pop
dec
add
push
push
lret
std
cld
xchg
lea
insl
mov
pop
scas
insl
jge
mov
adc
push
pop
outsl
daa
xchg
movsb
push
jno
pop
je
es
out
add
xchg
in
and
mov
pop
in
mov
mov
lods
ficompl
and
or
insb
sbb
mov
cltd
mov
rorb
sub
les
ja
ja
sub
aam
inc
sbb
xor
dec
jbe
mov
mov
ds
rolb
jle
sub
fmuls
and
arpl
insb
aad
add
bound
daa
icebp
xchg
les
mov
push
lds
rorb
dec
inc
inc
or
stos
sub
js
out
push
int
jmp
xor
xchg
lcall
sahf
and
dec
lea
insb
jg
add
adc
xchg
pop
ret
mov
push
adc
push
push
stos
sub
enter
js
imull
jnp
xor
jecxz
enter
ja
fcmove
and
inc
aam
orb
mov
int3
sbb
adc
lods
push
mov
inc
fwait
lret
sub
xchg
dec
scas
jb
sub
mov
cltd
jns
hlt
pop
enter
sub
enter
mov
in
ret
mov
or
push
dec
les
mov
hlt
inc
fcmovb
andl
mov
insl
jb
popa
clc
mov
repz
insl
clc
pop
sub
sub
ret
sbb
pop
sbb
aad
sub
sbb
mov
add
arpl
lcall
shll
sub
sbb
push
arpl
mov
dec
xor
sub
dec
lods
add
mov
enter
repnz
cmp
mov
dec
pop
jns
fldcw
pop
loop
xor
jg
int
inc
pop
pop
dec
inc
pushf
adc
dec
xor
neg
lcall
inc
jecxz
dec
cli
hlt
out
es
fs
or
jl
mov
mov
fnstenv
push
shlb
cmp
loop
je
sbb
mov
dec
pop
sahf
jno
adc
mov
ret
mov
pop
and
pop
xchg
lock
out
and
insl
push
inc
dec
cmpsl
inc
xchg
outsl
inc
push
sti
mov
jge
pushf
cmp
push
aas
call
mov
icebp
aam
mov
aad
arpl
mov
call
sub
imul
out
jp
add
pop
xor
xor
pop
dec
cmp
popf
inc
fwait
or
imul
movsl
mov
and
out
arpl
fnstcw
jmp
jns
add
or
jl
add
jns
mov
add
sub
mov
les
insb
aas
push
mov
test
add
push
push
cmpsb
rol
pop
je
mov
mov
inc
push
lahf
sub
mov
insl
mov
dec
in
jno
push
rorl
or
movsb
aas
rcrl
xor
xchg
add
ret
les
iret
aaa
cmp
push
insl
rcl
and
pop
or
cld
xor
add
push
xchg
fnstcw
and
fbld
cmpps
test
cmp
dec
imul
aad
xchg
add
repnz
out
sti
in
xorl
cld
sbb
pop
pusha
mov
jno
hlt
push
sbb
pop
dec
imul
insb
mov
out
ljmp
fidivs
cmp
jmp
inc
test
push
add
aas
enter
leave
test
leave
scas
sub
das
ja
jl
jle
fcoml
jns
sub
icebp
and
dec
inc
ja
shll
in
push
inc
push
stos
shll
daa
mov
int
inc
hlt
add
stos
inc
stos
lahf
inc
arpl
cmp
push
test
xor
mov
fisubrs
movsl
inc
jmp
or
cmp
sub
push
adcl
cwtl
sub
xor
xor
les
ss
subl
and
jl
iret
mov
cmp
scas
and
dec
push
gs
mov
sub
push
jmp
inc
mov
fstps
cmpsl
subb
loope
adc
add
arpl
xchg
fwait
sub
sti
lcall
add
jg
inc
pop
lret
shrl
iret
mov
enter
add
mov
adc
mov
cmp
inc
xchg
movb
les
add
js
pop
push
adc
pop
mov
dec
push
mov
ss
add
movsb
add
iret
mov
inc
testl
jno,pt
fmulp
gs
pushf
addr16
leave
xchg
jle
xchg
lods
sbbb
push
js
arpl
push
jle
fsubs
sarl
sub
pop
aaa
fbld
lods
iret
push
loop
imul
daa
dec
inc
js
add
jo
cld
mov
adc
sub
andb
sub
adcl
test
test
addr16
mov
sbb
mov
pop
jns
mov
out
pop
cmpsb
sub
add
mov
adc
sbb
imul
xlat
pusha
lcall
jae
xor
fistpll
ret
clc
mov
outsl
adc
pop
mov
sub
mov
sub
aam
mov
mov
or
cmp
int3
loop
enter
scas
dec
jae
jb
and
sbb
test
sub
jo
push
cmp
cld
das
lret
jge
sub
sti
mov
pop
add
ret
mov
and
cmp
iret
decl
js
push
test
pop
push
push
inc
sbbb
fists
enterw
in
pop
sub
les
mov
sbb
pop
and
daa
testb
and
fcom
push
enter
fiadds
mov
les
sbb
imul
and
fstpt
popf
mov
sub
mov
ja
je
add
jo
hlt
fcompl
fistpll
into
pop
and
int3
cmpsl
or
xchg
add
sti
or
jg
aaa
push
std
loope
mov
jge
xor
out
and
or
out
movsb
insb
test
push
fdivrs
fbld
or
inc
cmpsl
sub
and
call
pop
mov
and
iret
cli
outsl
push
dec
sbb
aaa
dec
mov
xor
xchg
pop
jmp
movsb
push
cmp
pop
and
xchg
jbe
addr16
dec
mov
jo
inc
pop
pop
andl
dec
or
push
and
testl
mov
inc
pop
xor
out
and
and
inc
mov
and
sahf
popf
pushf
lret
scas
sti
or
and
or
enter
xchg
ret
aam
shll
jp
aas
outsl
bound
push
mov
or
mov
push
gs
testb
sbb
clc
leave
movsb
mov
call
dec
jecxz
gs
and
out
daa
loope
add
and
lret
pop
in
push
nop
inc
and
jl
mov
jns
pop
mov
fimull
pop
mov
and
adc
cmp
ljmp
jno
out
stc
xchg
and
lret
loop
add
and
xchg
mov
mov
pop
xor
outsb
div
and
add
or
and
lret
pushf
hlt
cmpsb
inc
loop
xor
int3
xor
and
mov
adc
pop
mov
add
xor
xorb
lret
rorb
rcrb
lahf
nop
xor
faddl
or
dec
popa
sub
inc
jae
xchg
movsl
orl
mov
adc
in
and
sub
and
xchg
imul
lret
ljmp
xchg
dec
push
repnz
xor
or
lret
cmpb
mov
insl
xchg
and
jmp
repz
cltd
pop
lcall
lret
jo
xor
lds
das
xor
and
sahf
cmpsb
adc
cs
sbbl
and
and
mov
and
jmp
xorl
and
sbb
jecxz
repz
and
repnz
adc
cwtl
and
or
shld
xor
lock
inc
pop
adc
pop
inc
and
cltd
jno
and
fists
and
lods
and
mov
adc
ljmp
or
repnz
jecxz
xchg
pusha
stos
and
jl
inc
aas
and
jmp
and
mov
data16
mov
xchg
sbbb
jne
or
lock
rorb
mov
add
pop
pop
mov
in
push
and
cmc
leave
pushf
inc
and
push
add
mov
lods
xchg
jge
pop
and
adc
dec
cmp
adc
push
iret
into
lahf
mov
das
cmpsl
arpl
cltd
ret
push
inc
in
sbb
and
out
shl
and
clc
add
dec
test
jo
fwait
xor
sahf
mov
arpl
or
and
enter
sarl
out
mov
popa
jle
push
adc
out
push
fdivp
cmp
push
xchg
sbb
mov
imul
add
and
in
xchg
popa
mov
aaa
and
inc
xchg
stos
jnp
loopne
add
adc
and
ret
mov
and
pop
mov
test
fwait
test
fs
ja
dec
pop
xlat
xor
jp
adc
enter
lds
lods
xchg
in
mov
pop
mov
cmp
sub
and
loope
push
hlt
jle
jae
dec
test
jne
add
repnz
and
sbb
and
or
outsl
inc
pop
dec
and
inc
movsb
inc
push
xor
and
push
adc
inc
rclb
lea
lds
xchg
popf
lcall
movsl
pop
and
push
jmp
pop
xchg
inc
xchg
testl
test
and
add
nop
add
mov
jge
pop
pop
dec
lahf
pop
iret
xchg
loope
cli
push
mov
mov
in
cmp
mull
outsb
ja
and
add
and
mov
arpl
fnstenv
lret
pop
xlat
jne
jg
sub
adc
popf
ror
lahf
sub
les
movsl
jns
add
pop
stos
test
insb
and
mov
sbb
sbb
sbb
dec
les
mov
fldenv
jb
icebp
and
pop
filds
mov
mov
arpl
gs
aaa
cmp
adc
fs
push
and
and
out
cmp
cmp
aam
xchg
add
dec
and
stos
scas
jne
and
mov
pop
jl
cltd
sbb
adc
mov
and
cmp
xor
adc
and
adc
int3
and
into
push
sub
or
sub
pop
jo
icebp
dec
jns
cmp
push
mov
dec
sub
xchg
inc
adc
pop
js
frstor
imul
pop
mov
mov
mov
sbb
mov
cld
push
push
rcrb
loop
imul
mov
and
push
add
loopne
and
mov
fisttps
and
lcall
cmp
mov
pushf
push
in
sbb
jl
xor
dec
xlat
and
aas
outsb
mov
test
insl
jae
pop
adc
xorb
arpl
sub
filds
imul
adc
and
mov
add
loopne
int
loope
jge
cld
pop
fnsave
mov
xlat
cmp
dec
fs
ffree
xlat
in
sahf
xchg
in
pop
pop
fisubrs
jns
les
sahf
jo
and
bound
lret
iret
inc
add
lea
cmp
test
mov
and
in
insl
xchg
dec
les
jge
movsl
mov
or
popf
pop
add
jge
les
push
addr16
call
les
push
adc
ret
test
jnp
movsb
xlat
movsb
mov
dec
imul
int3
ljmp
inc
pop
xor
mov
inc
jmp
lcall
leave
loopne
mov
arpl
jns
or
jl
or
jnp
cmp
xchg
enter
sub
ss
sub
sbb
add
add
lods
push
jp
dec
dec
lret
push
jnp
fwait
lds
nop
rcll
jg
fdivrl
push
mov
roll
and
xchg
inc
cmp
jns
popa
pop
adcl
scas
into
push
push
test
fimull
sti
xchg
imul
in
idivl
jge
loop
fsub
cltd
sub
cmpl
aaa
les
int3
fwait
xlat
and
dec
bound
lds
mov
ret
bound
mov
enter
je
lods
dec
pop
out
mov
jp
inc
mov
push
inc
pop
test
rorl
mov
xor
xor
jmp
lcall
dec
push
std
mov
adc
cwtl
sub
in
xor
les
cmp
and
enter
rcpps
sar
mov
data16
mov
and
orl
jle
dec
sti
loope
adc
xor
sbb
xchg
das
sub
rcl
jne
loopne
mov
sub
adc
hlt
mov
ljmp
lcall
js
sti
aad
mov
mov
lock
fstl
femms
or
sbb
inc
les
xor
das
dec
lea
xchg
inc
nop
enter
daa
fs
data16
aam
inc
cmp
js
adc
popa
jl
imul
pop
mov
mov
lret
pusha
sbb
xchg
inc
cmp
mov
jle
push
shr
sahf
hlt
xadd
scas
jae
sub
add
imul
sub
movsl
shrl
mov
xor
sub
nop
rol
push
pop
andl
sbbb
mov
arpl
lcall
cld
sbb
adc
xor
push
sbbb
inc
jb
adcl
ret
jo
lcall
mov
dec
cli
je
pop
outsb
scas
mov
aas
jle
pop
sbb
aas
sub
inc
pusha
loope
or
xchg
and
sbb
sub
popa
adc
sti
cmp
cmp
jg
add
dec
cwtl
cld
jo
pushf
cmp
push
ret
xor
pop
dec
and
test
stos
jnp
lea
jb
dec
shlb
neg
mov
idivl
mov
xchg
xchg
cmp
imulb
sti
std
aad
pop
jecxz
aaa
in
ret
mov
mov
aas
int3
test
adc
push
stos
out
les
bound
jbe
jae
pop
jmp
adc
lods
loopne
inc
pop
ljmp
push
sub
jno
lcall
mov
ss
adc
jns
jb
ret
repnz
fwait
pop
flds
and
mov
pop
subl
bound
enter
outsl
push
sub
jb
xor
test
inc
jbe
or
lea
sub
xor
inc
fdivrp
movsb
cltd
cli
ljmp
mov
ret
jmp
inc
xor
ja
cwtl
sahf
in
outsl
movsb
mov
inc
mov
test
lock
adc
and
inc
pop
xor
xchg
jo
mov
out
add
aam
xor
mov
lods
ret
adc
jo
adc
lock
mov
fisubrs
mov
mov
call
fsubr
dec
xor
dec
adc
inc
popf
mov
xor
shlb
int3
in
mov
fwait
mov
mov
popf
fsubrs
sti
lcall
in
enter
lods
mov
shlb
jmp
or
mov
popl
lret
leave
mov
fs
out
enter
sahf
mov
sbb
ror
nop
bound
jp
sub
pop
and
stos
push
clc
stc
mov
inc
stos
cmpsb
fldenv
sbb
inc
xchg
popa
sbb
push
sub
sbb
mov
mov
sbb
sbb
or
dec
imul
sub
sub
sbb
fs
xor
xor
ret
jp
cmp
pop
rolw
lret
jae
mov
inc
pop
out
imul
xchg
jb
jns
jp
add
mov
push
xor
mov
pop
cmp
dec
jno
xchg
adc
or
leave
loop
lea
adc
mov
sbb
mov
enter
pop
add
ficoml
in
sbb
cmp
jp
inc
sbb
outsb
lds
enterw
fadds
xor
fs
jns
and
pop
imul
stc
ret
xchg
xchg
data16
xchg
jg
mov
imul
les
sub
or
xor
fstps
test
repnz
and
xchg
loop
test
insl
testb
push
push
jl
cmp
dec
sub
push
aas
sti
mov
mov
add
enter
sub
mov
mov
repnz
adcb
sbb
int3
mov
mov
push
mov
enter
jo
mov
mov
or
inc
or
movsl
test
xor
cmp
push
mov
xchg
sbb
push
lret
jns
cmpsl
push
jne
push
add
dec
je
mov
daa
or
xlat
xchg
sar
mov
popf
in
xchg
insb
and
lods
sbb
enter
mov
xchg
inc
pop
push
ja
enter
fs
push
mov
insb
xchg
flds
push
je
aas
stc
push
xor
xor
pop
mov
jecxz
xchg
adc
cmp
shrb
push
inc
push
jno
cmp
add
xchg
mov
int
repnz
mov
inc
test
mov
sbb
and
cmpsb
stc
sbb
scas
add
mov
dec
inc
sbbb
rolb
xor
xchg
or
cmc
mov
rcrl
loope
inc
rcrl
push
mov
stc
mov
push
jne
rcl
ss
les
mov
xor
sub
pop
jl
clc
fwait
movsb
lods
sub
push
mov
rcll
xor
mov
int3
pop
or
push
inc
xchg
or
jno
into
sub
xchg
movaps
sub
xchg
arpl
mov
shlb
jg
movsl
jmp
inc
popa
push
imul
inc
xor
sub
fildl
pusha
ret
or
add
jns
add
scas
ret
divl
pushf
xchg
enter
les
sub
mov
ret
cs
mov
es
dec
mov
mov
push
jmp
rcl
jae
jno
lods
mov
and
enter
xor
push
add
xchg
cmc
and
aad
shlb
push
inc
imul
test
adc
or
push
out
nop
xor
adc
fs
repz
add
fs
jge
jno
loop
andl
dec
ret
arpl
lock
addb
or
or
xor
cmpsl
lret
sub
mov
pop
cmpb
jmp
popf
xlat
mov
mov
push
sub
cmpsl
insb
ficompl
addr16
roll
jb
mov
ss
dec
cltd
aad
jl
ds
in
mov
popa
add
into
mov
ret
sarl
aam
out
dec
les
fisttpl
stos
out
cmp
cmp
or
pop
jno
mov
aaa
xor
insl
and
inc
lock
mov
pushf
xor
outsb
mov
xchg
cmp
call
les
sub
jp
flds
inc
imul
imulb
lods
mov
aad
xlat
add
ja
test
aaa
sub
mov
dec
aad
mov
icebp
push
xlat
xor
mov
xorb
cmc
in
xchg
sbb
pushf
mov
cmp
and
jns
aad
adc
xchg
xchg
pop
push
sub
popa
test
jns
adc
mov
call
mov
sub
mov
sti
pop
imulb
repnz
mov
xor
jns
inc
mov
cwtl
jne
cmp
dec
ljmp
stos
test
ja
xor
push
enter
stos
std
ret
mov
jle
mov
mov
mov
jne
xor
out
or
jmp
or
mov
push
jmp
push
dec
es
xchg
test
nop
fwait
loop
sub
shlb
lahf
sbb
xor
jnp
or
mov
mov
xchg
push
cmp
jae
leave
repnz
xchg
sbb
mov
or
aaa
stos
mov
jb
mov
aam
push
xor
sbbb
cmpsl
out
xor
push
mov
ror
aaa
push
or
mov
xchg
lcall
iret
xor
movsb
mov
add
jae
cmp
out
pop
mov
dec
xor
les
jne
inc
pop
push
or
enter
mov
or
mov
js
mov
out
rol
scas
lds
cmpsb
mov
test
adc
mov
jg
jnp
jge
je
aam
pusha
inc
fdivl
dec
lcall
mov
stos
push
inc
push
insl
xchg
mov
inc
insl
or
xchg
mov
ret
xchg
sbb
xchg
sub
sahf
stos
push
push
mov
imul
xchg
dec
stos
ja
sbb
xabort
add
inc
push
jns
jl
mov
lret
mov
imul
ret
sbb
cmp
xor
leave
add
or
sbb
inc
pusha
and
cmpsl
cmpsb
int3
sahf
cwtl
xor
mov
ret
outsb
mov
and
leave
mov
sub
divl
faddl
xchg
shrb
mov
pop
or
pop
jae
arpl
pop
and
sti
repnz
sti
int
and
and
jl
add
inc
int3
xchg
jl
ljmp
popa
je
mov
cmp
je
xor
mov
enter
lret
mov
les
fsubs
push
mov
and
mov
imul
ss
jp
test
test
xchg
sahf
pop
push
mov
and
mov
cs
loop
sub
movsb
lcall
mov
jle
mov
push
sub
cld
xchg
jmp
mov
push
ss
faddl
sbb
xor
rorl
jnp
sbb
cmp
mov
rcl
arpl
mov
xor
nop
ja
cmp
addr16
push
xor
xchg
cmp
divl
push
inc
aas
inc
imul
inc
les
lret
test
aas
inc
xor
jae
loop
pop
dec
les
ret
pushf
cmp
or
mov
rorl
lods
xor
dec
loopne
or
xor
les
shlb
mov
test
cwtl
dec
arpl
mov
lea
repnz
push
test
xchg
jbe
mov
enter
inc
and
and
popa
push
repz
dec
ret
sbb
jecxz
cs
xchg
sub
mulb
pop
shll
outsb
pop
mov
mov
repz
push
imul
jb
loop
ljmp
mov
cmp
outsl
push
fchs
add
in
ljmp
call
je
add
inc
dec
sub
cltd
rorb
cmc
xor
xor
inc
sub
dec
outsl
xor
ror
mov
add
dec
shll
jp
jno
cmp
jne,pn
xor
scas
repz
lock
int
push
fwait
mov
push
pop
dec
jmp
inc
cld
subb
mov
inc
mov
pop
mov
cmp
mov
je
les
mov
ret
xchg
mov
in
add
outsb
test
mov
pop
cmp
xchg
xchg
jns
fcoml
imul
les
std
lcall
enter
aaa
lock
mov
fistpll
insb
outsb
insb
dec
cmp
ret
push
ror
xchg
out
popa
shlb
ret
mov
mov
cmp
sub
loop
ljmp
jmp
sub
lods
les
mov
pop
and
fistl
xchg
inc
jbe
fs
pushl
inc
mov
cmp
xchg
mov
hlt
in
mov
mov
lcall
fisubrs
int
push
mov
push
and
insb
inc
sub
inc
jge
mov
inc
inc
rep
or
out
push
jbe
mov
sbb
add
fldenv
push
out
dec
cmp
mov
hlt
mov
or
out
shl
enter
and
dec
xlat
adc
test
sbb
sub
outsb
sti
frstor
xor
cmp
add
mov
in
xor
in
dec
inc
and
jns
andl
push
pop
sahf
insl
adc
and
and
inc
test
push
sarb
pop
xor
fstl
imul
fcoml
jl
mov
roll
dec
xchg
jbe
imul
push
cmp
into
inc
mov
divps
movsb
xchg
inc
xor
pop
test
decb
loopne,pn
iret
inc
and
xchg
or
xor
jp
shlb
popa
mov
jle
aad
inc
ret
sub
movsb
int3
mov
out
insl
outsl
and
cld
sub
shll
mov
adc
fildll
lds
xor
les
fimull
jecxz
in
lahf
mov
or
lods
push
push
stc
fildll
sub
add
inc
in
jecxz
sbb
add
and
push
inc
cmp
faddl
cmp
movsb
and
ret
push
sahf
jne
jb
shlb
rorb
sub
out
sub
inc
mov
jmp
cwtl
arpl
sbb
into
std
call
mov
jbe
pop
cli
dec
rcrl
and
mov
out
scas
test
xor
mov
dec
mov
inc
ret
sub
xchg
sub
stos
incb
fwait
xor
inc
iret
mov
pop
jmp
int3
dec
mov
add
xor
and
leave
in
push
and
lret
xchg
dec
push
stos
mov
pop
inc
cmp
lock
adc
lret
out
test
movsl
jp
inc
or
pop
push
dec
les
xor
dec
push
std
aad
enter
data16
sub
push
xor
mov
flds
dec
xchg
adc
adc
and
insb
sbb
mov
lret
js
and
push
xchg
out
outsb
test
xchg
es
fldenv
in
and
and
cmp
jo
in
add
dec
lods
mov
lods
cld
bnd
add
popa
inc
jb
mov
push
out
xor
mov
and
lods
out
ds
movb
lods
and
aad
mov
cmovs
mov
sub
rol
lds
xor
mov
imul
bound
roll
mov
xor
push
mov
dec
jp
adc
pop
sub
cmpsl
bound
inc
mov
add
dec
lret
adcl
jle
je
ja
ja
lahf
xor
and
ret
xor
icebp
push
mov
push
faddl
jbe
pop
sbb
inc
lcall
ffreep
shrl
cmp
push
xchg
imul
les
iret
push
enter
mov
add
cmp
pcmpgtb
dec
sti
mov
insl
shrl
es
mov
insl
stos
inc
movsbl
shrl
test
jp
in
xchg
addb
lcall
mov
and
add
pop
in
daa
and
mov
iret
dec
push
dec
daa
mov
pusha
adc
cmp
xchg
es
mov
mov
mov
dec
mov
out
jns
jge
pop
ret
imul
aas
inc
dec
pop
dec
enter
dec
and
out
or
cld
imul
clc
xchg
jge
sti
and
icebp
mov
movsb
inc
cmc
mov
sti
stos
inc
pop
and
mov
andb
shlb
or
addr16
fldt
adc
and
rcr
fs
add
aaa
xlat
repz
pop
enter
jle
push
insb
jmp
mov
mov
sbb
enter
cmp
or
inc
jns
cmpsl
and
fldl
mov
les
aam
inc
adc
mov
push
mov
push
xchg
and
les
jecxz
mov
or
xchg
ret
dec
xchg
inc
lcall
xchg
pusha
inc
out
out
inc
enter
dec
les
mov
mov
mov
pop
popw
mov
mulb
aas
enter
popa
andb
std
loop
dec
mov
push
cmc
mov
aad
dec
dec
jp
ret
out
dec
and
stos
add
or
icebp
dec
enter
mov
aam
imul
jl
decb
pop
jnp
aas
enter
xchg
dec
les
dec
xor
sub
and
jns
or
out
mov
push
shll
imul
cmp
cld
and
fmul
xor
adc
je
mov
sub
out
mov
clc
imul
into
in
icebp
xchg
bound
cwtl
or
ja
std
pop
imul
subb
js
addr16
cmc
pop
jne
lea
jg
mov
xchg
insl
and
jle
or
mov
push
inc
mov
popa
add
and
shll
mov
xchg
mov
jns
sbb
out
mov
pop
insl
inc
push
sub
cmp
dec
ret
push
in
pop
mov
shrb
xchg
xchg
mov
in
jg
inc
xor
fdivrs
xor
pop
xor
and
fsubr
adc
jae
aad
xor
sbb
jecxz
pop
fs
mov
fdiv
inc
aad
lock
mov
add
cmpsb
lock
aas
repz
xchg
cmp
xor
push
xlat
or
ljmp
add
das
sub
jmp
les
xor
and
sbb
loope
cmp
push
aad
xor
lock
push
pop
sub
lock
xchg
jae
jge
add
xchg
jno
call
jno
daa
xchg
inc
div
lahf
ljmp
imul
mov
dec
popf
dec
addb
pop
mov
mov
daa
call
out
or
insb
sbb
int
cmc
xchg
push
mov
cmpsl
scas
pushw
sub
ds
clc
mov
cld
out
inc
test
loop
aaa
push
loopne
imul
sarb
push
pop
xorl
jmp
loope
outsb
inc
roll
imul
xor
pop
nop
and
xchg
outsl
xchg
xor
xor
mov
xor
dec
push
insl
dec
les
ret
shr
jo
push
data16
push
mov
pop
or
and
outsb
dec
inc
mov
mov
xchg
jmp
fcmovnb
fnstsw
xchg
in
cmpsb
outsb
iret
dec
sub
cmp
push
fs
jecxz
push
loope
jo
mov
adc
xlat
das
rcll
test
repz
fwait
data16
dec
pop
sarb
add
je
cli
insb
jmp
mov
bound
imul
enter
cmpsb
jo
xchg
pop
dec
mov
std
jle
into
cmp
sub
pop
addr16
dec
jp
ss
xchg
fdivs
ja
jmp
ret
stos
aaa
xchg
push
and
enter
or
ret
sbbb
js
pop
pop
sub
ds
sub
adcb
rcr
cmp
pop
pop
push
push
les
add
ficoms
shll
push
icebp
pop
int3
mov
and
xor
inc
cmp
lea
and
jb
dec
daa
popa
mov
xor
push
aaa
xor
mov
insl
and
arpl
aaa
dec
push
roll
mov
inc
ss
push
cmpsb
clc
adc
sub
rorb
mov
ss
and
jecxz
ret
adc
push
sbb
setle
adc
fists
sarl
and
stos
fldenv
dec
xchg
cmpl
add
lahf
mov
adc
lds
shll
scas
and
pop
cld
dec
bound
sahf
test
sbb
jb
xor
jno
jl
push
inc
jmp
shlb
addr16
xor
ret
mov
stos
movsl
ljmp
aaa
popa
bound
pop
dec
call
leave
lods
gs
and
xchg
arpl
test
jns
mov
cmc
xchg
lret
fwait
sub
cld
je
imul
jp
inc
add
aad
add
dec
lock
aaa
mov
enter
push
bound
adc
and
sbb
or
dec
or
fwait
inc
cwtl
repnz
mov
cld
je
add
and
aad
dec
mov
adc
sub
jne
add
fnstcw
jbe
or
insl
rcll
cmp
jno
in
ja
mov
sahf
pop
aam
cli
xchg
call
sbb
leave
sbb
or
cmp
into
int
jno
jmp
inc
xchg
mov
push
lds
jbe
not
repz
and
jp
rclb
jo
cmp
mov
in
into
push
jne
mov
xchg
and
shr
mull
mov
sbb
es
mov
inc
out
inc
dec
jnp
test
mov
std
push
popf
mov
cs
dec
and
test
cmp
insl
pop
pop
jl
js
dec
jbe
xor
lock
push
inc
xor
mov
xor
mov
xchg
mov
imul
mov
fiadds
adc
xchg
adc
jb
xchg
pop
mov
insb
xor
rolb
add
aam
aaa
loop
push
aas
jb
sti
sbb
inc
ds
ror
insb
lret
insl
roll
or
sbb
push
mov
test
jae
jne
lock
data16
icebp
sbb
xchg
rol
mov
sahf
mov
bound
dec
cmc
push
lods
rorl
mov
lret
mov
pushf
les
adc
lret
jno
push
fsubrs
mov
loop
add
sub
lods
push
aam
addr16
andb
mov
sarl
jg
in
sub
pop
mov
in
dec
aad
lcall
loope
or
rclb
pop
cmpsb
popa
sub
push
mov
outsl
sbb
sbb
cmpsb
sub
inc
and
test
dec
aam
cmpsl
enter
lods
xchg
outsl
mov
les
test
sbb
sub
popa
inc
sbb
adc
rorb
xchg
dec
and
fdivrs
bnd
adc
sets
mov
push
xor
push
xor
or
xlat
push
mov
jbe
scas
pusha
xor
mov
push
sarl
pop
lahf
psraw
push
aas
mov
les
jbe
and
push
js
pop
mov
xor
sub
stc
add
jmp
lds
mov
mov
iret
mov
push
cmp
pop
dec
je
and
popf
push
sub
lods
push
pop
jae
popa
es
inc
xlat
aam
push
inc
lcall
insb
incl
inc
lret
ljmp
outsb
arpl
sbbl
arpl
addr16
add
and
sbb
push
mov
push
jne
xchg
lods
jns
or
out
icebp
push
pop
movsl
and
leave
adc
cmp
and
mov
and
out
and
jb
pop
and
dec
push
ret
cmp
fstpt
fldcw
test
xchg
stc
mov
mul
pop
sbb
shl
xor
mov
mov
jb
cs
ret
je
js
inc
clc
scas
sbb
mov
and
sbb
test
enter
adc
aas
pop
leave
ljmp
xor
mov
sub
and
stos
orl
and
cmp
xlat
test
mov
outsl
ret
test
fwait
ljmp
and
pop
fsubrs
in
cmp
pop
mov
inc
xchg
aam
aas
fcmovnb
popa
add
dec
mov
fwait
dec
mov
arpl
enter
and
push
add
inc
ja
cmp
fs
xor
mov
lock
and
test
inc
mov
dec
sbb
hlt
in
aam
and
ret
inc
pop
push
mov
pop
shll
popa
loop
xor
test
shll
or
add
cmp
jmp
dec
pop
adc
inc
bound
rorb
ret
movsl
and
mov
push
sahf
pop
sbb
cmp
mov
dec
dec
shrl
cmp
mov
daa
sub
loope
imul
sub
push
mov
xor
mov
lock
jg
mov
gs
jno
ss
leave
rcrl
cmpsl
out
outsb
fucomi
icebp
push
xchg
daa
insb
lods
fcoml
sbb
lret
mov
jns
iret
cmpsb
pop
out
mov
push
and
sbb
popf
inc
daa
repz
jae
sub
in
ret
sub
sbbb
mov
push
lods
icebp
in
add
cmp
inc
out
dec
xorb
adc
lcall
fcoml
pushl
popa
sbb
xchg
mov
in
xor
push
enter
jnp
pop
pop
lods
loopne
fnstcw
scas
imul
mov
popa
pop
das
cmc
and
bound
cmp
or
jge
loop
mov
inc
jbe
notb
call
std
sub
dec
mov
mov
sub
popl
in
test
lret
bound
and
mov
pop
xor
xor
mov
loope
push
pop
cmp
xor
mov
push
pop
cltd
xchg
add
push
mov
and
les
inc
jnp
mov
xchg
push
dec
lcall
xchg
add
bound
lcall
inc
jne
xor
sub
arpl
iret
inc
dec
fs
add
inc
out
adc
dec
pop
ret
enter
insb
push
arpl
xchg
sub
in
xor
xchg
inc
and
jle
cmp
out
inc
mov
cmp
pushf
aaa
fcmove
pop
xchg
mov
ret
dec
sahf
lods
fs
pop
pop
je
xchg
popa
mov
cmp
or
push
fsubs
cltd
addb
mov
loop
adc
xchg
mov
fadds
sub
imul
cli
sarl
lods
xor
test
push
mov
int
les
push
xchg
mov
fistpl
aaa
sbb
aas
out
loope
fprem
mov
sub
push
jg
int
in
mov
push
mov
imul
ret
cmpsl
add
mov
dec
cmp
mov
xchg
sub
mov
les
aas
mov
aas
xchg
mov
les
jb
inc
loope
xchg
dec
dec
lret
insb
fs
ret
mov
push
pop
sarb
jb
sahf
pop
or
sahf
inc
add
movb
mov
shr
mov
jo
xor
push
jnp
push
xor
mov
adcl
dec
addb
imul
mov
or
mov
sub
in
enter
sarl
sbb
inc
xchg
fnsave
insb
shll
sub
enter
dec
dec
or
push
dec
iret
pop
sub
rcrl
add
mov
lcall
adc
popa
bnd
sbbl
xor
pop
xchg
jbe
outsb
scas
sub
popf
into
stos
add
fs
loop
jle
mov
and
ret
mov
add
inc
popf
arpl
mov
jle
pop
inc
mov
push
dec
gs
jmp
mulb
cltd
scas
mov
pop
sti
inc
jecxz
mov
sub
inc
xor
movsb
xchg
subb
ja
enter
enter
sarb
mov
mov
push
leave
ljmp
cmp
iret
enter
jne
popf
sub
jp
test
insl
loope
jbe
dec
inc
sub
sbb
pop
lahf
popa
movsl
call
popl
stos
mov
insl
ds
clc
test
or
xlat
int3
repz
or
and
in
sbb
xchg
imul
lods
imul
pop
push
sub
dec
xor
xchg
addl
jmp
jns
mov
cld
bound
lret
cmpsl
jno
jnp
adcb
daa
je
clc
cmpsb
sbb
sub
mov
out
inc
inc
dec
loop
xchg
negb
fistps
enter
mov
cld
sub
into
mov
push
push
jns
adc
fcomps
in
or
jno
inc
jmp
mov
dec
mov
mov
adc
sub
xor
mov
jns
stos
pop
mov
orb
pop
mov
inc
das
inc
in
mov
fcoml
push
out
daa
jbe
outsb
leave
cmpsl
sbb
xor
inc
lods
int
fildl
dec
pop
shll
jbe
inc
jge
int3
shlb
imul
xchg
lods
mov
mov
mov
add
cmc
ja
in
and
pusha
and
cli
push
push
and
int3
and
jecxz
cmp
enter
push
and
or
dec
pushf
shll
aaa
xor
add
xor
enter
push
stos
mov
xor
je
pushf
inc
adc
inc
xor
cmp
mov
bound
dec
or
leave
scas
pushf
or
push
dec
ds
mov
sbb
cmp
sub
mov
mov
fists
in
jg
pop
lret
dec
add
xor
jnp
dec
xchg
xor
mov
mov
sub
mov
jns
enter
loope
sbb
mov
xor
scas
imul
dec
push
inc
xlat
dec
repz
mov
add
das
xchg
sub
sub
xor
das
jg
cwtl
inc
sti
out
and
sbb
es
cmpsl
test
inc
mov
add
aas
arpl
push
xor
in
sarl
sahf
mov
orb
mov
jb
push
fsts
sbb
enter
in
pop
ss
xchg
sbb
clc
sbb
cmp
push
pop
loopne
inc
jae
mov
add
mov
add
inc
xchg
or
sbb
jb
std
add
adc
xor
sub
xor
jle
in
jmp
mov
ds
stos
inc
pop
fdivl
xor
jle
mov
add
imull
cwtl
xchg
ret
xchg
lret
or
and
xchg
insb
ret
inc
add
arpl
push
pop
inc
dec
xor
inc
je
sub
ja
sub
in
push
cld
mull
pop
sub
jno
icebp
in
sbb
jmp
adc
lock
sti
mov
sahf
jns
orb
xor
aad
jne
dec
add
jo
jnp
mov
repnz
lret
pop
call
mov
adc
push
pop
imul
xchg
jnp
xor
or
aad
test
push
arpl
and
mov
lods
aaa
sbb
sbb
sahf
xchg
ret
inc
jmp
mov
jb
inc
xchg
aam
fidivrl
imul
cmpsb
cmovo
push
ret
cmpsb
mov
or
popa
inc
pop
cmpsb
inc
adc
and
jbe
or
sbb
adc
dec
in
enter
xor
lcall
sub
imul
jnp
inc
sahf
daa
xor
and
dec
pop
sti
mov
xchg
enter
add
jno
or
sbb
daa
scas
mov
dec
mov
push
int
xor
fs
push
dec
lahf
add
imul
add
dec
rcrl
ljmp
insl
jno
rcll
xchg
or
or
xchg
stc
xchg
sbb
mov
sbb
or
push
shll
jecxz
and
mov
in
push
mov
in
aam
in
add
sub
dec
sbb
leave
jmp
imul
insl
add
xor
cli
cmpb
pushf
or
mov
ret
lret
sub
mov
lahf
jae
fisubs
ret
push
or
pop
stos
cmp
sub
scas
js
xchg
popa
sbb
imull
jns
mov
ret
cltd
icebp
addr16
push
imul
xchg
cmp
sbb
jge
out
xchg
inc
inc
cmpsb
scas
and
pusha
test
arpl
and
mov
or
rol
jecxz
ret
adc
inc
or
mov
xlat
movsl
mov
hlt
test
test
mov
loop
popa
or
jne
jbe
gs
xor
enter
pop
imul
pop
xlat
jo
int3
les
mov
sub
push
test
andl
das
test
mov
andb
mov
and
mov
mov
cmp
outsl
sub
jp
jl
jo
je
mov
pop
jp
adc
movsb
loop
push
sub
arpl
ret
xchg
sub
bsr
and
jbe
daa
ret
pop
scas
or
push
mov
lahf
xor
jo
push
aam
inc
add
in
insb
mov
or
movsb
xchg
cli
xor
mov
pop
aam
imul
pop
push
dec
sub
dec
cmpb
imul
lret
std
or
pushf
filds
add
pop
cmp
jecxz
jle
fisubs
in
inc
sbb
fidivs
inc
popa
push
iret
sub
les
cmp
mov
mov
outsb
and
xor
jg
clc
jno
mov
jmpw
lahf
push
xor
or
xchg
jae
icebp
and
loopne
mov
sbb
xor
cmp
ret
test
outsl
mov
xor
jmp
stos
or
lods
mov
sbb
push
dec
bound
inc
xor
lea
ret
mov
les
je
lock
hlt
and
and
mov
push
out
jge
stc
jno
pop
loope
add
insb
fmuls
aaa
enter
mov
xor
inc
popa
sbb
or
jle
fidivs
enter
icebp
icebp
mov
and
inc
cld
mov
in
int3
arpl
inc
imul
mov
cli
ja
push
cmp
daa
mov
lret
cli
mov
or
adc
mov
pop
movb
pop
or
popa
push
test
pop
stos
fsubp
push
pop
xchg
xor
sti
adc
jl
sub
pop
or
lds
xor
dec
inc
dec
out
or
cmpsb
arpl
stc
lahf
xlat
fldl
mov
rclb
sub
mov
jmp
xor
xchg
add
aas
push
ja
fstps
cmc
jbe
jae
xor
mov
xchg
sbbl
fs
sahf
inc
mov
inc
ljmp
orl
xchg
imul
lods
dec
add
jl
add
mov
sub
jb
jne
inc
jmp
xor
cs
mov
inc
and
jno
xor
arpl
rorl
jg
aam
scas
add
push
sbb
lods
pop
pop
jb
outsl
and
ret
push
fwait
fs
imul
push
iret
test
imul
outsb
jnp
mov
and
mov
lods
mov
outsb
je
dec
aam
inc
sub
jbe
int
mov
adc
hlt
enter
dec
cmp
loope
pop
loope
xor
pop
mov
movsb
or
xorl
bound
js
xchg
pop
dec
xchg
mov
aaa
pop
movsb
and
fsubl
xchg
shlb
loopne
test
lods
aam
mov
movsl
jae
shlb
xchg
mov
inc
test
fsts
cmp
pop
loope
rcll
and
cli
insl
ljmp
ja
sub
das
xchg
and
xor
push
ljmp
in
jle
scas
and
inc
dec
das
and
movsb
mov
outsl
divb
sub
xchg
jle
sahf
or
sar
cmc
je
cmp
xchg
popa
mov
and
adc
jns
aad
and
mov
and
mov
cmp
and
sti
mov
jl
roll
sahf
jae
and
pop
daa
jg
fcmovnbe
dec
shr
je
mov
sahf
repnz
lock
shll
and
iret
out
dec
mov
push
cmpsl
and
mov
popa
xchg
jno
popf
jg
and
test
stos
cmp
outsl
jecxz
dec
pop
cwtl
and
bound
add
and
push
sub
or
shlb
incb
sbb
jne
aad
test
scas
and
adc
and
and
sbb
jns
push
cld
mov
xor
ss
cltd
popa
jl
aaa
and
add
loope
test
cmpsb
mov
add
and
mov
adc
pop
add
test
xchg
push
repz
out
cmp
enter
cmp
mov
bound
and
aam
pusha
icebp
pop
push
and
xchg
stos
pop
sub
sbb
sbb
and
test
fistpll
fcmovnbe
push
xor
add
call
and
add
cmp
mov
add
jge
inc
data16
lret
les
andb
xchg
imul
and
inc
aam
sbb
loop
push
push
mov
mov
jo
pop
jmp
iret
pop
cld
out
add
cltd
mov
and
sub
and
sbbb
cmp
dec
fstps
and
adc
in
arpl
and
and
xor
mov
test
idivb
inc
lods
testl
out
aad
mov
lret
sbb
xchg
call
icebp
xchg
and
test
ljmp
and
xor
and
sti
mov
pop
movsl
cwtl
cltd
xchg
and
loopne
push
sbb
or
jno
mov
out
lcall
sub
data16
or
sub
or
movsb
loop
mov
adc
imul
xor
xchg
push
nop
ror
and
jb
lret
std
add
cwtl
mov
imul
mov
and
frstor
mov
mov
and
lcall
mov
ss
pop
gs
fldenv
sub
int3
adc
rclb
and
lock
loope
inc
mov
and
sub
cs
cmp
test
in
pop
sbb
xchg
inc
imul
add
push
inc
les
mov
pop
dec
fwait
push
or
js
xchg
xchg
lds
and
jecxz
fwait
leave
mov
xchg
rcll
jge
enter
inc
out
enter
sub
adc
cmp
or
punpckhwd
inc
cmp
lcall
cmp
add
push
and
push
imul
add
dec
shrl
jae
iret
sub
imul
in
push
sti
jg
jmp
std
pop
mov
jl
inc
pop
add
lcall
jno
add
mov
mov
cwtl
adc
and
adc
cmpsb
cmp
dec
sbb
sti
cs
mov
sub
inc
outsl
sbb
mov
in
mov
dec
xchg
inc
jle
testb
into
js
sub
inc
mov
dec
les
xchg
mov
and
mov
fwait
add
cmp
out
adc
ret
sbb
into
or
xlat
ror
jl
les
repnz
pop
xor
lret
cmc
mov
jae
stos
ret
jle
ja
cmp
clc
or
bound
and
or
sahf
mov
push
stc
jns
pusha
aam
sub
pop
jno,pt
cs
inc
out
popa
repz
nop
fisttpll
sub
push
lods
fdivl
xor
movsb
daa
lea
push
addb
mov
enter
cmp
mov
and
mov
bnd
fmull
or
mov
inc
mov
outsl
adc
inc
inc
push
popf
enter
push
and
lretw
aaa
or
ret
popa
cmova
adc
or
adc
fisubl
ret
arpl
or
int3
inc
and
enter
or
sbb
lods
sub
bound
add
cmp
clc
mov
lods
adc
jnp
inc
enter
imul
js
or
sub
sub
pushf
fdivl
jecxz
jbe
dec
hlt
sub
adc
mov
fldenv
arpl
loope
push
jnp
data16
adc
andl
insb
lock
or
imul
adc
insl
les
repz
movsl
and
fidivl
insl
stos
xorl
xor
jb
mov
mov
loopne
push
pop
pop
shll
aad
fstl
mov
jns
push
es
repnz
mov
aad
mov
push
xchg
pop
ret
mov
imul
or
mov
push
inc
repnz
cmp
scas
insl
dec
nop
sub
les
pop
cmp
and
cmpsl
jbe
popa
pop
push
push
mov
pop
mov
imul
lods
mov
roll
and
pop
xor
sub
fucom
cmp
fdivrs
lods
fstpl
jle
inc
sbb
push
inc
adc
stc
jl
sub
inc
jge
mov
icebp
clc
pop
inc
xchg
cli
daa
xchg
test
add
fistl
pop
push
inc
mov
out
stos
cmp
cltd
out
les
sub
stos
and
arpl
dec
xchg
call
test
rcr
stos
dec
bound
enter
xor
mov
xor
inc
mov
movsb
push
aaa
cli
xchg
leave
scas
dec
pushf
jmp
xor
out
and
or
adc
mov
addr16
fs
repnz
xchg
shll
ret
push
xor
jmp
fimull
cs
push
push
fidivl
jno
push
mov
add
jmp
fadd
cmp
push
enter
inc
adc
jmp
or
inc
pop
sbb
dec
adc
xchg
sbb
fsin
imul
pop
cmp
xor
es
push
inc
clc
and
lret
stos
sbb
mov
add
ja
push
xchg
xor
jle,pt
and
incb
aam
push
inc
xlat
push
mov
loope
ret
insl
cmp
js
inc
push
xor
ja
dec
js
mov
sub
sbb
fnsave
jae
xor
or
push
sbb
sub
popa
lret
cmpsl
push
sbb
insb
adc
sbb
shl
enter
loopne
lock
and
outsl
sub
mov
mov
pop
sub
out
cmp
jns
iret
jle
repnz
push
dec
sub
push
pop
pop
jbe
mov
pushf
sub
mov
icebp
ret
leave
sbbb
and
push
ljmp
ror
aad
fcmovnb
mov
popa
sub
jo
data16
mov
push
shrl
mov
lret
mov
pop
movsl
inc
mov
xchg
mov
les
xorl
shlb
jno
aaa
mov
mov
test
popa
jnp
mov
mov
sub
and
inc
or
mov
scas
out
inc
fistl
or
mull
mov
jg
jge
cmp
mov
dec
mov
int3
adcl
aad
xor
xchg
stos
sub
rcll
xor
and
dec
cmp
fisttpll
mov
movsl
or
lods
iret
push
mov
jb
inc
mov
cld
add
into
mov
jno
int3
cmp
jae
popa
out
div
jg
xchg
pop
xchg
icebp
int
cld
jge
sub
mov
xchg
push
adc
dec
ljmp
mov
lret
mov
jle
jbe
cli
ret
repz
dec
imul
push
add
inc
mov
sarb
repz
mov
jo
mov
jb
push
mul
shrb
inc
sub
mov
xor
mov
sub
xor
scas
sahf
pop
stos
cmp
mov
sbb
insl
stc
sub
lahf
leave
mov
cmpl
lahf
inc
mov
mov
movsl
pop
les
icebp
add
mov
xor
inc
add
mov
ret
scas
mov
hlt
cltd
mov
sub
shl
jl
push
adc
xlat
adc
pop
pop
mov
jg
subb
fcomp
xor
inc
xchg
adc
sti
sub
enter
aad
test
or
dec
xchg
enter
ss
lcall
cltd
adc
shlb
sub
test
mov
mov
cmpsb
pop
mov
fidivrs
hlt
iret
pop
mov
aas
lods
lds
push
add
xor
sub
mov
int
inc
jb
into
popa
fistpl
mov
sub
xchg
xchg
mov
cmp
jae
mov
fwait
js
sub
stos
movb
or
jnp
dec
sbb
adc
push
dec
sub
pop
push
aam
insb
adc
sbb
jmp
dec
fcmovne
imul
lods
mov
inc
lahf
andb
lret
push
cmpsb
pop
jmp
nop
movsl
aas
repz
enter
mov
sbb
inc
pop
cli
arpl
popa
enter
aaa
adc
pop
testl
xor
icebp
jle
loope
enter
xor
push
push
inc
dec
into
mov
int3
jbe
mov
out
mov
int3
inc
pop
or
js
enter
jno
faddl
aad
dec
out
jle
mov
push
lret
ret
fstps
fldt
lea
mov
dec
xchg
pop
inc
daa
ret
adc
das
dec
lret
jo
and
ds
ja
fucomip
imul
sub
or
dec
jb
loope
enter
aas
cmp
xchg
and
and
pop
fld
scas
dec
pop
pop
add
mov
iret
pop
or
fwait
hlt
adc
push
aam
pop
and
cwtl
lahf
jmp
arpl
or
and
pop
mov
test
and
negb
xlat
movsb
inc
and
jo
xor
cli
dec
inc
loop
xor
imul
sbb
mov
and
push
loopne
jmp
push
mov
cmp
dec
popa
add
push
and
call
mov
and
and
pop
pop
in
inc
add
and
sbb
mov
sub
addb
out
rcll
lods
adc
push
int
jno
mov
and
jnp
pushf
adc
jo
and
and
dec
mov
add
pop
xor
inc
mov
cmpsl
xchg
outsl
lods
lcall
imull
sub
in
cmpsl
jle
mov
andl
pusha
mov
or
xor
and
stos
popf
mov
adc
dec
and
shlb
aad
sbb
dec
mov
adc
mov
fisubs
mov
dec
xor
mov
fucom
je
xchg
pushf
inc
dec
aas
pop
fimull
outsb
dec
mov
sub
xchg
add
mov
rolb
or
and
jb
in
or
dec
and
xchg
dec
lahf
and
sbb
add
add
sbb
cmpb
inc
add
and
inc
das
lock
div
hlt
or
roll
inc
cltd
xor
lcall
pop
and
inc
xchg
dec
and
push
int
scas
mov
adc
mov
ret
xchg
xchg
pop
data16
and
cmp
and
movsl
fwait
and
int3
push
push
test
ficompl
and
pop
dec
xchg
sbb
and
lcall
popa
inc
add
adc
iret
sbb
fisubs
aam
mov
lock
mov
enter
cmpl
popa
aaa
outsb
xchg
jecxz
adc
hlt
dec
and
in
xchg
pop
pop
call
push
xor
imul
sti
pop
fwait
xchg
and
mov
in
and
clc
popf
pop
call
inc
insb
or
xchg
inc
mov
dec
mov
inc
and
inc
int
andb
mov
popf
pop
in
pop
and
push
and
cld
and
and
in
mov
adc
or
sub
xlat
icebp
add
call
int3
inc
xchg
mov
push
addb
movsb
data16
sti
jb
pop
mov
popf
popf
pusha
popa
mov
or
adcl
sahf
cmp
sbb
out
xor
sub
daa
hlt
iret
mov
mov
insb
loope
sub
aas
and
xor
mov
or
sbb
loope
mov
jns
mov
test
xchg
jae
sub
and
push
adc
sbb
adc
adcl
cltd
out
rcll
and
and
loope
pop
faddl
add
xchg
and
dec
addr16
dec
pop
and
mov
out
mov
mov
cwtl
and
jnp
jle
or
lahf
or
pop
sub
icebp
push
call
and
arpl
xor
subl
xchg
jl
dec
shlb
add
hlt
jmp
out
push
frstor
adc
scas
insl
in
scas
push
dec
nop
mov
mull
mov
aam
push
mov
mov
and
dec
and
dec
leave
inc
adc
popf
insb
mov
test
cmpsb
mov
mov
sub
xorl
sub
push
dec
and
and
and
xchg
sub
push
repz
inc
jae
and
cmpb
mov
sub
inc
mov
push
xchg
sub
jnp
pop
out
dec
loop
outsl
insb
push
add
testl
dec
popa
pop
sbb
jbe
pop
insb
push
sbb
ret
movsb
cs
fsubrs
fildll
adc
sbb
pop
pushf
cmpsb
test
lods
push
jo
and
mov
into
and
inc
xchg
add
xor
bound
lock
mov
and
pusha
and
jns
and
and
aam
jecxz
rcrb
add
out
xchg
jl
js
fidivrs
mov
sbb
jecxz
mov
cmc
mov
and
sbb
sarl
outsl
and
lds
mov
sub
add
jbe
mov
dec
push
sbb
sahf
in
jg
std
decb
fcmovnu
push
cmp
mov
inc
push
mov
popf
and
and
push
cld
jp
mov
dec
and
rolb
lods
adc
out
sbb
hlt
jo
lret
mov
cwtl
sbb
scas
mov
add
inc
jge
stos
and
mov
imul
out
subl
jg
stos
push
xlat
mov
popf
pop
fdiv
sbb
cli
push
test
ret
and
testl
lret
jno
jle
adc
push
pop
pop
add
mov
adc
adc
and
ret
mov
int3
xchg
popf
and
mov
and
mov
and
bnd
lea
mov
dec
insl
push
and
xchg
add
ret
pop
and
and
jo
mov
adc
add
sub
fdivl
and
iret
xchg
lods
cltd
sbb
dec
arpl
insb
xchg
sbb
sub
or
int
and
jb
cmp
arpl
and
sahf
int
mov
jmp
and
sub
sbb
cs
nop
jo
icebp
das
dec
push
mov
pop
dec
pop
xchg
inc
pop
shlb
fdivrs
test
gs
mov
shlb
xor
or
iret
cli
cld
mov
xor
pop
and
pusha
aaa
xor
xchg
jae
xor
negl
cmp
into
and
lahf
xchg
fmul
incl
push
pushf
mov
xor
hlt
push
fcmovnbe
mov
pop
cmp
pop
push
js
sub
shll
ja
jno
lea
inc
orl
sarl
inc
and
cltd
xlat
cmpsl
lret
add
cmc
xor
or
mov
fbstp
jae
cmpsl
sarl
popa
sub
dec
test
es
jge
daa
cld
xor
and
and
cmp
aaa
pop
out
scas
sbb
mov
scas
jge
popf
adc
jp
jl
stos
and
add
fdivrl
dec
sarb
arpl
int3
add
jno
push
mov
push
xchg
or
and
xor
mov
js
jae
imul
sbb
sbb
ljmp
pushf
notl
fsubs
jbe
jp
sti
dec
enter
mov
fs
int
es
mov
jbe
or
js
movsb
dec
movsl
pop
push
outsl
xor
int
xchg
hlt
push
roll
int
insb
mov
mov
pushf
ret
cmp
in
push
mov
and
push
push
jbe
std
je
push
push
das
inc
data16
inc
les
scas
pushf
repz
push
jmp
popf
ret
cmpsl
les
fstpt
mov
nop
jnp
push
sbb
pop
arpl
movsb
pop
cmpsl
add
push
aas
sahf
jp
xchg
aad
add
inc
incl
jnp
addl
pop
aad
sbb
aad
lock
xlat
pop
push
mov
std
xor
mov
out
cmpsl
lret
incl
sbb
loope
jg
sbb
mov
aam
push
jl
add
clc
and
enter
popf
xchg
aas
enter
inc
leave
inc
xor
push
sbb
inc
jle
frstor
repz
jno
movsb
sbb
mov
sti
les
enter
sbb
push
xchg
ret
dec
fidivrl
dec
ja
lret
sub
jg
pop
mov
jecxz
push
lret
push
fidivl
dec
or
les
xor
mov
xor
test
pop
mov
repnz
shlb
add
jo
push
xor
les
pop
add
xchg
ror
xchg
inc
imul
dec
cli
icebp
out
jg
sbb
sub
js
dec
and
push
xchg
mov
cmp
jo
and
mov
add
imul
enter
addr16
add
push
pop
addr16
ret
mov
dec
xchg
pop
push
outsl
shlb
rcrl
sub
leave
sub
push
sub
cmpsl
cmp
sbb
cld
lcall
sbb
stos
inc
test
out
sbb
dec
arpl
mov
sub
push
mull
mov
loopne
lcall
lret
fstp
xor
mov
mov
mov
jle
inc
imul
ret
outsb
sub
mov
lcall
jl
lcall
sbb
cmp
sub
inc
sti
xlat
jno
andl
in
mov
pop
xor
dec
lret
mov
sub
inc
sar
pop
fcoms
icebp
cmp
insl
and
pop
aaa
fcoml
aad
adc
and
pop
fisubs
inc
adc
cmp
adc
das
mov
int
xchg
pop
ja
inc
imul
mov
mov
fs
cmpsb
jp
and
push
and
stos
into
and
adc
test
push
xchg
inc
sbb
pushf
and
xchg
sub
cltd
call
shrb
and
dec
loopne
and
or
push
dec
inc
repnz
and
dec
jp
sti
mov
mov
and
fistpl
and
pop
sbb
sti
sbb
lea
jl
andl
outsl
and
pop
jg
shr
mov
push
jb
and
daa
add
repz
mov
mov
testb
xchg
imul
dec
icebp
rorl
or
hlt
jp
div
das
in
xchg
add
orl
lcall
mov
movsl
lods
mov
shr
test
sub
filds
mov
popa
hlt
push
lds
rcr
adc
pop
lahf
mov
cmp
hlt
mov
lds
sti
popa
fbld
scas
shrl
lods
xchg
je
out
and
in
sbb
mov
ljmp
pop
cmpsb
and
fimull
movsb
and
rorl
hlt
sbb
mov
jb
or
jecxz
orb
shlb
pop
arpl
outsl
push
jmp
mov
jge
bound
aaa
push
cmp
pop
or
and
sub
and
popf
inc
xor
mov
mov
and
mov
push
lcall
shll
out
in
idivb
arpl
je
dec
pop
mov
and
and
lea
and
pop
jnp
adc
leave
stos
cmp
in
movsb
inc
mov
mov
fs
sub
int
jecxz
or
pop
aam
xchg
in
mov
cs
dec
js
test
sbb
xchg
or
arpl
mov
xchg
and
push
test
inc
and
lcall
sbb
and
cwtl
or
push
popf
and
daa
xchg
xlat
loope
jno
hlt
mulb
popa
ds
in
jbe
sbb
mov
cmp
frstor
stos
jns
test
xchg
sbb
jae
lods
dec
imul
and
sbb
adc
shll
xchg
mov
and
es
and
adc
shll
xchg
lock
mov
jmp
lret
pushf
fwait
and
or
arpl
cmp
and
mov
mov
shlb
out
adc
test
mov
dec
cwtl
jp
lret
jmp
xchg
push
mov
sbb
and
and
dec
jnp
xor
xchg
cmp
hlt
loope
in
cmpl
mov
jmp
mov
aad
pop
jmp
cmp
aas
sbb
inc
pop
negb
lods
mov
rcr
pop
jecxz
mov
pop
and
das
and
adc
mov
sub
sbb
push
cmp
leave
xor
mov
cmp
sub
cmc
xor
movsl
or
pop
xor
adc
je
int
xchg
neg
sub
setno
mov
adcl
push
mov
aad
iret
movsl
subl
cmp
jbe
sbb
stos
pop
jg
xchg
pusha
in
xchg
and
insl
sahf
testl
leave
jle
inc
sub
sbb
mov
inc
sbb
lds
xchg
loope
rcll
insl
add
test
inc
lret
xchg
dec
mov
xor
jne
scas
mov
in
sbb
adc
push
pop
xchg
aas
push
mov
fistl
cmc
xor
add
sub
add
adc
jg
sub
mov
ret
mov
inc
popa
out
rolb
xchg
sbb
int3
lahf
mov
cmpsb
mov
js
cmpb
pushf
ret
mov
and
mov
outsl
pusha
jp
ret
jno
adc
stos
js
sbb
and
fucomip
adcb
pushf
std
test
and
dec
cmpsl
pop
addb
ffreep
aaa
jo
aas
rorb
lods
or
push
sbb
mov
sub
cld
sbb
xchg
lock
imul
andl
push
cmc
jo
loope
insb
loopne
js
push
test
pop
sub
mov
pop
push
add
mov
andb
xlat
xor
adc
cmc
sub
push
gs
lods
mov
xlat
mov
jno
xchg
fs
and
sahf
push
and
das
push
nop
jb
aas
ss
mov
cs
mov
and
inc
lods
mov
and
xchg
insl
xor
addr16
sbb
add
mov
xor
xlat
in
add
rorb
push
ds
xor
popf
enter
and
in
shrl
mov
sub
sub
pop
and
je
loope
xor
popf
push
and
cmp
mov
and
pushl
add
mov
popf
dec
sub
shll
dec
out
push
and
les
push
and
imull
mov
cmp
push
mov
in
jno
dec
in
lock
bound
cmpsl
add
inc
or
sbb
arpl
test
mov
mov
enter
dec
dec
mov
or
bound
inc
pop
or
pop
repz
bound
push
mov
push
sub
lret
push
add
pop
cmc
outsl
dec
mov
and
scas
mov
cltd
sub
xchg
scas
addr16
in
jg
adc
inc
js
push
scas
xor
cld
std
mov
xchg
bound
out
xchg
and
fstl
imull
sub
test
inc
pop
movsl
fidivl
out
add
xor
test
and
add
loop
mov
sbb
cmp
mov
pop
and
xor
lock
push
inc
movsb
dec
ljmp
andl
mov
xchg
add
pop
and
ret
jcxz
dec
scas
lock
add
aad
xchg
lret
jae
outsb
test
xor
sete
loope
xor
and
shlb
movsl
movsb
cmp
sbb
rolb
test
pop
mov
mov
adc
cmp
xor
scas
and
test
subl
gs
sbb
mov
add
and
sbb
pop
cmp
and
xor
dec
sbb
and
sub
jl
cpuid
jb
adc
gs
jne
shll
inc
inc
in
cmp
mov
xor
sbb
popa
mov
and
mov
stos
cmpb
popf
jb
mov
popa
pop
add
cmpsl
dec
inc
outsb
int3
loope
lahf
inc
fsubr
sbb
popf
xchg
and
dec
cmp
shlb
and
mov
iret
xchg
adc
cmpsb
cld
xor
subl
shrb
pop
cmc
xor
sub
insb
jo
imulb
mov
aam
lods
mov
repnz
gs
push
mov
loop
push
dec
mov
je
rorl
and
test
fcomip
xor
pop
je
jno
sub
daa
das
add
inc
frstor
shlb
pushf
adc
hlt
stos
push
xchg
daa
inc
add
bound
push
and
pop
add
sub
mov
inc
sub
lods
xlat
loope
push
xor
push
into
icebp
sarb
add
pop
or
jmp
mov
shlb
sub
sub
inc
aam
popa
ficoml
pop
lods
push
call
in
mov
lahf
or
and
pop
and
fisubrs
mov
jne
lcall
pop
imul
hlt
xor
xchg
add
adc
push
inc
popa
scas
xchg
or
test
cs
shlb
std
outsb
les
mov
mov
mov
add
pop
insl
les
push
inc
in
add
dec
jns
imul
mov
jmp
mov
inc
mov
xlat
pushf
cmpb
adc
fists
cmp
mov
je
inc
clc
ds
inc
push
pusha
and
sub
add
xor
pop
jb
mov
gs
or
push
xor
sub
ljmp
out
movsl
call
adc
test
dec
xor
out
mov
popf
lods
xchg
sub
inc
xchg
and
in
ret
mov
or
or
dec
inc
dec
ret
mov
xchg
test
fstpt
jl
xor
inc
int3
ret
movsb
sub
cmp
xor
scas
cmp
xchg
xchg
aam
repz
pop
mov
xchg
inc
xchg
xor
aaa
arpl
push
sub
mov
movsb
add
pop
inc
sbb
pop
nop
mov
mov
xchg
and
dec
pop
jp
xor
push
movsl
in
mov
xor
subb
and
loope
xchg
mov
call
and
mov
sbb
enter
repnz
dec
jne
sub
inc
je
add
xor
inc
pop
adc
and
ss
dec
push
roll
mov
inc
adc
mov
das
xor
and
dec
imul
repz
jae
pop
mov
gs
mov
push
lret
and
xchg
jg
xorb
rorb
push
add
push
cmpsl
test
xor
cs
inc
lock
pop
sbb
mov
orb
jmp
push
push
inc
popa
mov
pop
icebp
inc
adc
out
in
or
out
mov
and
inc
int3
push
lods
shrl
push
and
in
sbb
aas
xor
jae
xor
loope
movsl
mov
mov
rcrb
sbb
jno
push
cmp
imul
shrb
add
fisubs
and
xor
lds
fcoml
or
je
xor
rcrb
repz
popf
roll
inc
sub
pusha
popf
dec
rorb
jp
and
cmp
pop
aaa
sbbb
and
insl
pop
pop
push
insl
leave
dec
push
ret
test
repz
rorl
outsl
aam
inc
mov
add
shrb
sub
cmpsb
push
and
mov
inc
jge
push
pop
push
loop
pop
ds
lods
adc
sub
and
lods
repz
cmp
dec
dec
ret
adc
movsb
sub
jo
leave
or
les
out
je
xchg
inc
mov
aad
lods
addr16
sub
lahf
test
adc
pop
jl
push
and
out
adc
cltd
and
cmp
ss
shll
clc
adc
cmp
rol
imul
in
dec
lret
loop
ret
pop
push
aaa
test
shll
xchg
ds
inc
adc
ss
jno
jne
or
lock
mov
and
jae
sbb
inc
dec
mov
arpl
pusha
mov
xchg
out
adc
pop
jmp
mull
push
lcall
and
xor
and
push
jae
and
jmp
popf
adc
shrb
orl
loope
xor
cltd
popa
cmp
sub
cmp
adc
sbb
roll
and
xor
push
and
out
dec
in
data16
mov
jno
sahf
insl
subl
add
scas
mov
xor
or
outsb
mov
into
push
jo
mov
cmpsl
mov
out
add
jno
in
mov
jae
mov
and
sarb
fldl
mov
cmc
ret
lahf
fisubrs
and
mov
inc
rolb
sti
mov
jbe
movsl
shll
xchg
test
sbb
cmp
jae
adc
ja
stos
cmc
aas
dec
cmpsb
shll
inc
das
xor
in
mov
sbb
shlb
push
add
out
inc
mov
movsb
inc
xlat
dec
jmp
test
jnp
dec
cmp
jle
and
or
pop
mov
jcxz
adc
out
and
jbe
rorb
inc
repz
xor
loop
mov
cmp
loope
adc
push
inc
and
nop
push
jno
sub
mov
inc
sub
mov
xchg
push
dec
pop
test
imul
vcvtsi2ssl
fs
jecxz
mov
ss
mov
testb
jns
xlat
scas
rorb
aas
movsb
push
jp
je
xor
jb
lods
leave
pusha
xor
add
sub
loop
jns
int
sbbl
adcl
mov
andl
push
xor
push
inc
mov
xor
popa
repnz
mov
and
or
pop
mov
sub
inc
enter
mov
push
insl
ret
jb
loope
jge
pop
inc
sbb
fistps
bound
add
adc
rclb
sub
inc
xchg
test
jbe
and
push
cmp
and
cmpsl
jo
xchg
aaa
sub
xchg
cmp
xor
pop
popa
xor
je
sub
dec
mov
mov
mov
mov
jae
sbbb
je
add
xor
mov
les
test
imul
jge
mov
in
loopne
push
add
enter
jnp
lcall
loope
dec
mov
push
roll
leave
imul
mov
dec
inc
sub
jb
ljmp
and
jae
out
inc
add
out
push
mov
xchg
jns
daa
sub
test
outsb
mov
or
and
adc
push
and
pop
aad
cmc
dec
or
push
mov
jo
aam
mov
sbb
in
jno
mov
adc
and
push
sti
shlb
call
cwtl
mov
data16
cmpsl
loopne
push
enter
xor
lock
mov
mov
xor
mov
push
mov
addb
pop
dec
and
mov
fadds
rcrl
clc
sub
inc
ret
jg
out
in
mov
and
call
jecxz
loope
add
jno
mov
and
dec
outsl
jb
and
adc
inc
rorl
sahf
mov
pop
and
insl
mov
arpl
loope
pop
data16
adc
adc
xchg
or
ss
inc
mov
pop
lds
push
imul
xchg
mov
pushf
inc
and
test
mov
popf
popa
mov
loop
ret
pushf
popa
lahf
or
in
adc
incl
repnz
push
mov
add
adc
xor
and
jecxz
inc
icebp
jno
sbb
sbb
outsl
test
je
dec
mov
jno
mov
std
jmp
andl
inc
pop
wrmsr
xchg
repnz
cmp
mov
ss
or
daa
ret
popf
mov
lods
setge
dec
xchg
inc
cmc
mov
imul
mov
push
sbb
popf
jg
inc
mov
mov
aam
mov
or
mov
jp
mov
inc
pushf
jno
cwtl
jp
xor
and
das
add
mov
jge
jb
xchg
adc
pop
lods
push
mov
mov
subb
into
hlt
and
addl
clc
enter
dec
addb
popa
adc
jns
mov
xor
push
jae
scas
jbe
enter
daa
arpl
mov
ljmp
sahf
lock
sub
nop
xchg
and
mov
popf
in
mov
je
roll
inc
stos
addb
xchg
bound
test
xor
add
pop
cmp
loope
fs
inc
sbb
daa
cmpsl
or
popa
fnstsw
xchg
pop
ljmp
xchg
and
je
test
xor
pop
insb
push
or
stos
pop
push
jecxz
inc
sahf
sbb
adc
mov
and
jns
leave
outsb
sbb
dec
inc
iret
in
jo
push
or
pavgw
jecxz
mov
pop
addr16
in
xchg
dec
cmp
jnp
mov
in
add
insl
jno
cmpsl
ficoms
push
pop
xchg
cld
pop
lods
xor
xorl
push
xor
mov
push
loop
jne
negl
jle
mov
scas
test
shrl
and
js
stos
xor
pop
mov
rolb
adc
mov
jmp
xor
andl
jne
inc
sub
repnz
out
enter
movsl
inc
rol
push
xor
icebp
push
mov
mov
or
sub
jne
add
cmp
pop
mov
cld
jnp
push
push
push
mov
and
movsb
lret
add
and
dec
test
mov
mov
and
sub
xchg
mov
in
adc
test
push
andl
xchg
outsb
nop
arpl
pop
bound
xchg
cmpsl
sub
fcoml
popf
cwtl
add
add
leave
fcoml
mov
xor
jae
mov
fstps
outsb
repnz
inc
xorl
add
sub
xor
repnz
gs
rolb
push
xchg
lret
xchg
or
mov
lds
loop
cmp
js
or
mov
xchg
adc
sbb
inc
fldenv
adc
pop
add
xor
add
mov
nop
outsl
shlb
pop
jb
mov
inc
or
xchg
cmp
mov
pop
sub
dec
or
bound
int3
cmpsb
mov
jmp
popa
pop
inc
mov
ja
jge
xchg
les
lock
inc
mov
xchg
lds
dec
aas
mov
and
ja
out
out
mov
and
icebp
add
cmc
and
push
adc
xchg
and
ret
out
subb
and
mov
aas
sbb
jecxz
fsubrs
inc
and
aam
andl
outsb
lds
roll
dec
sbb
mov
mov
and
andl
popf
sub
cmp
inc
mov
mov
mov
add
in
or
adc
aas
jne
jo
pop
js
inc
and
mov
adc
push
add
jae
sub
bound
and
xor
call
pop
adc
pushf
jnp
mov
mov
bound
add
les
inc
push
cs
jae
cmc
sbb
mov
les
jns
push
mov
push
xor
push
test
call
mov
jge
sti
mov
mov
or
roll
gs
xor
loopne
xor
scas
sub
popa
push
xchg
sbb
out
add
insl
mov
add
mov
xor
xor
jns
scas
hlt
ds
shrb
mov
mov
aaa
popa
lea
cmp
push
nop
jecxz
mov
ret
mov
in
sub
sub
dec
or
shll
xor
fdivs
push
test
mov
xchg
ret
outsb
movsb
mov
add
insl
aam
out
and
jl
or
jp
ret
adcl
neg
mov
clc
and
lock
repz
iret
and
push
cs
adcb
xor
lods
je
mov
mov
in
jbe
pop
test
aam
jp
xor
sub
cmpsl
fwait
pop
lret
call
push
cmp
mov
sbb
and
sub
les
mov
adc
popa
push
sarb
lock
add
leavew
or
mov
add
dec
ret
jo
rcrb
mov
stc
cmp
mov
push
mov
sbb
into
mov
sbb
icebp
xchg
sub
and
push
shrl
outsb
movsb
sbb
pusha
insl
fst
dec
in
loop
mov
les
pop
cs
jae
aas
out
push
aaa
lea
in
pop
shrb
lods
mov
lahf
pop
inc
mov
cmp
rcl
jge
inc
nop
inc
icebp
sti
or
in
and
and
or
sbb
lods
push
cwtl
out
es
dec
js
and
jo
jno
gs
repz
outsl
and
xor
cmp
push
and
dec
fninit
and
push
mov
mov
inc
pop
movsl
xor
push
enter
repz
arpl
mov
scas
in
movsb
loopne
mov
xor
enter
sbb
mov
shll
jmp
popa
or
jae
mov
mov
fwait
scas
fsubr
and
jle
xor
iret
dec
aad
je
hlt
xor
rclb
and
repz
push
jle
push
aam
rcll
mov
pushf
inc
jecxz
cmp
gs
adc
and
mov
loopne
loop
lds
scas
movsl
add
cld
addr16
mov
add
cmpsl
lds
popf
inc
inc
add
xchg
dec
nop
push
add
xorl
enter
scas
or
movsb
xor
sbb
rclb
stc
xchg
mov
xor
sub
inc
in
add
mov
cmp
fistl
pop
mov
jne
xor
std
lret
rorb
mov
pusha
mov
insb
je
sbbb
in
lcall
cmpsl
insl
and
and
or
insb
mov
and
mov
movsb
push
xor
sub
add
ljmp
mov
sub
adc
arpl
ret
outsb
movsb
inc
pop
cmp
lcall
and
xlat
push
ret
roll
jo
xchg
push
loope
inc
lock
test
cmc
cmp
and
xor
loope
xor
cld
cmpl
fadds
sahf
stos
nop
cmp
inc
ja
pop
fs
pushf
dec
mov
incb
add
and
mov
stos
xor
mov
nop
aam
rep
cmpsl
mov
push
rol
push
mov
das
dec
sarl
pop
or
adc
movsl
adc
xor
mov
adc
add
mov
dec
rep
or
cmp
adc
push
subl
ret
add
xchg
loope
mov
mov
jb
inc
andl
jp
loop
jno
mov
and
sbb
and
and
mov
or
cs
int3
mov
xor
mov
adc
data16
xchg
dec
push
les
add
mov
xchg
and
mov
in
xchg
roll
push
sbb
mov
jno
nop
insb
push
mov
imul
lods
aam
int3
andl
dec
dec
test
mov
sub
int3
pop
inc
popf
scas
and
pop
sub
dec
jecxz
sub
adc
ss
and
ljmp
sahf
sub
mov
inc
mov
repnz
outsb
cmp
cmpsl
hlt
sbb
je
cmpsl
movsb
test
sbb
test
and
test
mov
in
jg
rcrb
je
ljmp
and
pop
inc
in
inc
imul
loope
dec
mov
pop
jp
jg
adc
and
mov
inc
mov
cmpsb
loope
in
imul
jg
test
in
xor
push
and
mov
enter
into
div
ss
imul
adc
dec
lahf
imul
push
inc
jle
pop
bound
stos
fmull
popaw
and
cvttps2pi
movsb
xor
mov
jne
iret
aad
shlb
push
pop
xor
push
and
popf
enter
sbb
rorl
and
cmpsl
rclb
jg
fwait
lods
sub
sub
mov
aad
gs
adcb
rcll
cmp
xor
fiadds
sub
mov
cmp
push
and
inc
test
sub
xor
stos
loope
add
sarl
aaa
and
mov
xchg
and
test
outsb
mov
arpl
aad
mov
subl
shlb
aam
jp
popf
sub
arpl
jg
adc
sahf
hlt
pop
mov
mov
lock
mov
sub
pop
xor
scas
test
and
ss
gs
mov
mov
mov
jge
mov
loope
cmpsl
xor
jns
ds
jmp
daa
sub
cmp
mov
sub
jb
repnz
sub
pop
add
cmp
ja
mov
dec
out
dec
ja
inc
jbe
and
and
enter
lahf
lret
and
push
sbb
sub
jo
pop
cmp
shll
cmp
out
js
adc
mov
dec
in
push
jmp
stos
pop
or
push
dec
and
loop
cwtl
shrl
cli
mov
mov
add
repz
mov
dec
lods
aad
js
jb
jl
xchg
jle
aam
shrb
sub
loope
cmp
mov
test
xor
sub
mov
aas
shl
and
inc
cmpsl
add
test
cmp
adc
xor
xor
fwait
pop
cmp
pop
push
inc
js
shll
jge
daa
fdivl
fcomps
adc
and
sbb
xorl
loopne
inc
fs
sbb
ret
mov
call
push
mov
xchg
mov
repz
outsl
andl
mov
lock
xchg
xor
shr
repz
mov
add
and
and
xchg
dec
pop
imul
push
xor
sbb
lret
andb
into
add
dec
adc
push
push
adc
fst
push
jnp
gs
jo
adc
in
push
pop
lahf
sbb
and
adc
testl
clc
xor
leave
lods
inc
sub
loopne
mov
xor
cs
pushf
mov
mov
pop
xor
xor
idivl
sbb
adc
sbb
bound
dec
and
jg
inc
test
daa
and
or
jo
lret
loope
pop
jge
mov
sub
sbb
es
shlb
je
jmp
sbb
test
pop
repnz
pop
sub
aam
out
or
adc
dec
sub
das
call
xor
in
lods
icebp
sub
and
icebp
push
xchg
sub
cmp
fs
mov
adc
or
and
mov
or
mov
int3
sub
fsubl
imul
std
cmpsb
xchg
sahf
add
sub
mov
mov
sbb
jo
push
mov
addr16
out
test
xor
nop
push
inc
adc
je
popa
rcll
mov
aad
pop
pop
xchg
and
movsb
push
push
inc
push
mov
out
je
jecxz
jmp
lods
loope
push
jle
mov
jecxz
jp
xor
mul
dec
adc
add
cmp
ss
inc
or
icebp
les
popa
test
stc
stc
inc
sub
out
sub
inc
jle
push
sahf
dec
inc
jp
hlt
aam
dec
adc
cmpb
xchg
mov
lods
and
xchg
sub
stc
add
jge
inc
xor
adc
nop
and
in
sub
and
mov
stos
call
nop
adc
sahf
in
push
repnz
imul
daa
jbe
in
sbb
sbb
and
shrb
popf
lds
outsb
jl
inc
rorb
daa
out
pop
cmp
in
jecxz
inc
ret
mov
jnp
and
outsl
iret
add
popf
out
xchg
and
xchg
les
jb
test
packuswb
mov
sarl
and
or
cmp
in
and
xor
mov
add
mov
jo
mov
push
test
push
mov
jle
xor
pusha
push
int3
xorl
dec
mov
sub
jmp
bound
mov
mov
clc
inc
loop
fbstp
pop
int3
std
jmp
aam
mov
fbld
mov
int3
cmpsl
mov
inc
adc
cmp
mov
sub
jmp
int
jae
fprem
lods
pop
data16
xchg
and
aas
mov
cltd
les
mov
aam
jae
and
or
mov
testb
add
add
arpl
push
jge
xchg
jnp
add
lods
je
xchg
xor
test
sarl
and
cmp
fwait
into
xchg
insb
test
xchg
inc
bound
inc
scas
leave
nop
jnp
and
jge
sbb
mov
add
in
mov
mov
cmp
mov
in
inc
je,pt
mov
adc
jecxz
xchg
add
dec
xor
mov
adc
call
lds
shr
loop
rol
lods
dec
cmp
adc
mov
jle
loope
and
aad
xor
imulb
cmp
cmp
mov
push
inc
xchg
out
sbb
push
fistpll
and
aas
mov
movsb
lahf
ds
pop
out
adc
test
nop
int
add
push
pop
mov
popf
mov
pusha
dec
xchg
jno
pop
push
fcomps
std
andl
mov
xchg
push
sub
lock
cmp
xchg
or
sbb
mov
in
xor
mov
lds
bound
push
stos
pop
in
pop
add
add
sub
out
dec
pop
lock
addr16
and
andb
daa
push
popf
rclb
sbb
xor
popf
jnp
push
test
shll
ret
pop
and
jp
mov
jo
insl
cwtl
mov
minps
lods
jno
xor
test
cmp
add
fwait
inc
inc
in
mov
add
hlt
mov
inc
ds
mov
xor
sbb
lcall
jb
or
pop
test
in
mov
in
pop
sti
adc
loope
inc
loopne
xor
xchg
out
cmpsb
inc
jp
push
test
mov
mov
movsb
imul
xchg
enter
das
mov
xor
or
fisubrs
and
loope
addr16
adcw
jg
cmp
xchg
pusha
xor
xchg
loopew
aaa
mov
mov
push
repnz
imul
shl
jae
or
inc
adc
and
orl
mov
scas
icebp
jns
ret
sub
cmp
data16
clc
loop
jne
aad
aam
frstor
testb
imul
movsb
movsl
pop
xchg
add
in
clc
inc
test
xor
push
loop
adc
mov
jge
sarb
and
sub
sbb
orl
and
sbb
adc
xor
in
insl
jno
xchg
shrl
rolb
mul
imul
out
addl
jae
aam
mov
pop
and
inc
add
loope
sub
test
lcall
cmpsb
nop
dec
shlb
mov
in
call
jno
gs
data16
enter
test
hlt
mov
rol
pusha
xor
loop
dec
mov
mov
scas
xorl
cmpsl
out
push
mov
fdivl
jnp
lods
mov
jnp
and
ljmp
test
lods
sub
xor
dec
jmp
sub
test
je
jl
push
push
rolb
call
call
js
sub
ljmp
adc
lock
subl
je
xchg
or
mov
loop
sub
push
sub
and
add
mov
loopne
sbb
std
jge
add
jecxz
out
ja
jno
jne
aad
dec
stos
mov
in
cli
xor
cmp
icebp
cmp
mov
cmp
cmp
fcmovne
ret
rorb
popf
sbb
jb
xor
pop
sti
jae
sbb
inc
mov
fisttpll
popa
pushf
pop
pusha
or
mov
fs
xchg
mov
insb
ljmp
and
icebp
push
enter
ljmp
aam
sbb
add
jle
mov
adc
push
imul
shll
push
sub
mov
and
mov
or
sbb
in
xchg
or
mov
xchg
push
adc
leave
and
mov
and
out
add
je
inc
mov
jecxz
outsb
in
xchg
js
dec
sub
sub
jns
test
ds
add
shll
inc
lock
jmp
mov
rcrl
jns
push
jno
mov
push
fwait
call
ficoms
cmpsb
cwtl
or
jno
adc
lds
inc
xchg
jge
lcall
test
pop
inc
dec
inc
je
and
mov
inc
andl
mov
or
add
dec
stos
inc
mov
inc
in
mov
pop
xchg
out
push
xchg
mov
inc
insl
ret
cs
add
xchg
repnz
inc
xchg
fdiv
loop
mov
add
les
pop
outsl
and
inc
ds
xchg
jg
stos
push
xor
inc
adc
lock
aam
mov
push
sub
dec
jo
mull
fucomi
movsl
psllq
xchg
subl
push
sahf
outsb
cmp
xchg
xor
les
out
mov
and
mov
in
int3
jb
sub
hlt
roll
inc
pop
inc
mov
loope
loop
mov
sub
sbb
inc
loope
jae
lods
jo
bound
cmp
jae
inc
sbb
mov
push
pop
mov
jp
mov
mov
cmpsb
insl
lock
repz
test
and
int3
fs
and
rorl
jle
ss
and
scas
dec
lods
dec
inc
dec
jmp
mov
test
stos
loopne
loope
nop
imul
sbb
les
sti
add
dec
inc
outsb
cmp
movsb
inc
mov
roll
sbb
mov
mov
and
mov
adcb
jle
ret
je
mov
sub
add
repnz
test
xor
mov
rep
dec
mov
jae
pop
jno
frstor
pusha
xor
mov
xor
nop
add
xor
push
dec
sub
mov
inc
fsubs
mov
sahf
adc
movsl
and
jl
jne
push
nop
inc
sub
sbb
shl
incb
cs
cli
mov
mov
loopne
cld
mov
jb
mov
adc
aad
jl
xor
sub
xorl
sbbl
lcall
ret
xchg
jb
insl
push
in
scas
jl
and
push
or
subb
or
adc
pop
inc
cwtl
je
push
loop
daa
ss
cmp
les
cmpsl
in
pop
mov
adc
mov
mov
rorl
adc
mov
cmp
sub
jle
icebp
dec
repz
and
pop
or
test
adc
inc
mov
and
scas
xchg
inc
inc
xchg
and
cmp
stos
ret
mov
sub
gs
mov
je
pop
pop
fnstsw
aaa
adc
repnz
inc
std
push
cmp
adc
mov
inc
pop
shl
jo
daa
and
pop
mov
push
and
into
xchg
sub
mov
sbb
jno
mov
and
ret
add
cmp
das
dec
imul
inc
mov
fcoml
mov
mov
mov
pop
ffree
sbb
bound
jle
or
rorl
bound
insl
ss
icebp
sub
lods
cmp
add
mov
das
mov
and
pop
lret
push
xchg
popa
aad
jae
and
popf
cwtl
inc
and
dec
sahf
or
test
mov
inc
jle
xchg
dec
xor
into
mov
les
in
adc
fstps
cltd
sub
push
fildll
sbb
push
adc
in
sub
xor
sub
dec
pop
movsb
cmp
shlb
fcoml
add
mov
dec
mov
lea
std
inc
and
pop
test
hlt
xor
rcll
outsb
add
xor
fwait
scas
xchg
and
and
push
jbe
repz
mov
stc
mov
pop
ret
inc
lods
sbb
push
cwtl
add
sarb
fsts
inc
and
push
es
cs
mov
loop
rcl
das
and
cmp
mov
ret
jp
sub
cli
and
jle
pop
test
data16
pusha
mov
fdivrl
stos
repz
loopne
xchg
mov
mov
mov
imul
adc
dec
and
sbb
dec
and
jo
aas
insl
in
je
cmpsb
xor
ljmp
adc
dec
jno
clc
pop
add
insb
sub
xchg
and
xchg
cld
ss
dec
lods
and
sbb
jns
mov
and
shlb
jecxz
fmuls
arpl
std
scas
push
xorl
and
xor
cld
cmpsb
shll
sbb
cmp
xchg
inc
inc
mov
mov
imull
out
rcrl
xor
fdivs
stos
adc
arpl
popf
jmp
popa
dec
mov
test
xor
icebp
out
xor
add
adc
add
xchg
add
jbe
or
push
imul
adcb
stos
and
sbb
insb
mov
pop
ret
rclb
jae
sub
nop
lods
jg
repz
icebp
jb
shlb
loop
xor
or
xor
stos
ret
add
cmp
and
leave
repnz
push
pop
mov
sbb
stos
mov
push
sarl
push
shll
fucomip
xchg
inc
movsb
fdivr
shr
sbb
and
and
cmp
sahf
addr16
and
popf
pop
jge
int3
cmp
aaa
mov
jo
push
lods
fisubrs
push
inc
and
inc
in
mov
and
fs
jg
das
mov
std
inc
in
and
scas
in
mov
inc
adc
repnz
jecxz
and
sub
nop
imul
add
mov
hlt
dec
jg
xchg
les
jl
fsubrs
push
sahf
lock
lds
shrb
cwtl
inc
pop
in
ret
mov
jnp
mov
and
xchg
subb
lods
das
je
and
hlt
inc
adc
sbb
and
adc
pop
adc
cld
shlb
ljmp
jnp
mov
es
xor
or
mov
mov
daa
addr16
shll
jge
mov
lcall
int3
add
mov
data16
aam
mov
push
stos
inc
cmpsl
cltd
cs
movsb
test
xorb
andb
pop
add
jecxz
xor
dec
loopne
mov
and
jg
xor
add
xor
or
sarb
cwtl
lds
jb
out
xor
dec
cmp
and
mov
mov
xor
nop
pop
mull
movsl
sbb
mov
dec
shll
nop
shlb
out
outsl
sbb
and
adc
int3
mov
cs
mov
and
push
mov
jb
jnp
andl
dec
ret
xchg
sub
cmp
mov
and
ja
rcll
test
inc
mov
movsl
cmc
fwait
shl
test
and
xchg
cmpsl
jb
mov
movsl
inc
shr
and
sbb
jmp
sahf
rolb
mov
mov
push
mov
bound
daa
inc
ss
inc
jmp
mov
adc
mov
jae
sub
imulb
in
repz
jno
frstor
outsb
push
lcall
mov
shll
sub
jge
jns
gs
add
hlt
push
adcl
and
pushf
and
sbb
pop
test
and
cmp
fsubrs
lds
in
mov
cld
stos
push
sub
sub
cwtl
je
add
ror
push
xchg
ret
mov
in
repnz
int3
dec
data16
and
push
cmp
xor
jp
outsb
cmpsl
pop
mov
add
andl
mov
cmp
lahf
or
shlb
adc
sub
cli
pusha
mov
sbb
add
lea
faddl
mov
add
xor
pop
addr16
in
push
inc
ret
add
out
inc
inc
popf
in
push
inc
jno
in
adcw
mov
pop
outsl
and
sbb
sbb
jle
jne
xlat
fbld
clc
add
jp
fcos
andl
fstl
sub
cmp
pop
dec
enter
and
insl
push
push
loope
mov
add
pop
scas
repnz
repz
int3
mov
sbbl
out
fld1
mov
xor
in
sbb
and
lock
add
adc
lret
mov
orb
je
mov
push
mov
mov
mov
dec
inc
dec
jno
adc
cs
nop
jnp
and
rcrb
shl
inc
xor
movsb
mov
and
fwait
icebp
mov
and
jmp
mov
mov
adc
xor
jle
adc
pop
nop
push
test
mov
or
ret
jno
lock
stos
inc
jg
dec
loope
jb
jns
lods
add
mov
jno
add
add
or
pop
adc
push
inc
jne
inc
sarb
adc
push
and
adc
jl
xchg
xchg
aad
jno
xchg
dec
icebp
pop
jecxz
fdivrs
and
hlt
and
mov
push
imul
loopne
mov
sub
xchg
ds
cmp
pop
andl
push
xchg
pop
repz
xchg
xlat
xor
les
pop
scas
add
aas
sbb
mov
adc
sub
cmpsl
stos
lods
adcb
push
jns
adc
test
sbb
sub
xchg
dec
nop
mov
fisubrs
xor
pop
add
xor
lahf
pop
cmp
mov
and
fcoml
mov
movb
push
iret
popf
jge
cmp
mov
xchg
pop
in
iret
dec
push
outsb
pop
mov
lea
mov
jmp
add
scas
and
dec
ss
nop
ja
lret
decb
in
push
add
scas
rclb
les
cmp
ret
pushf
lods
sub
faddp
fucom
add
jle
gs
iret
mov
shrb
imull
and
push
jecxz
pop
xor
fldl
inc
jnp
xchg
clc
inc
adcl
insb
scas
lds
dec
cmp
cmp
cltd
mov
mov
orb
adc
or
icebp
test
cli
xor
or
pop
fimuls
mov
jno
nop
jle
and
cmc
dec
pop
inc
push
enter
xor
push
pop
mov
and
xchg
adc
ss
outsb
lret
int3
mull
xor
xor
pop
adc
cli
leave
jb
pop
shrl
sub
insl
sbb
add
out
lret
xchg
jbe
inc
jle
or
gs
je
fs
fs
and
add
cmp
testb
pop
out
shlb
stos
movsl
inc
aas
add
and
add
in
cmpb
std
in
mov
icebp
aaa
pop
ds
mov
sbb
lahf
xchg
jno
jbe
mov
jo
sti
xchg
cmc
aad
stos
adc
lods
push
loope
push
in
insl
das
sbb
mov
ret
js
lds
xor
fwait
les
icebp
loop
inc
dec
mov
sahf
and
hlt
rcl
mov
enter
and
sub
inc
cli
sub
pop
hlt
push
loop
aas
incl
lds
mov
inc
or
out
add
adc
xor
jg
dec
test
sahf
jae
ret
xor
xor
ret
xor
cmp
fisttpl
or
dec
ljmp
aas
adc
xor
and
loope
lods
adc
mov
movsb
pushl
xorl
adc
jmp
xor
test
push
stc
les
popf
and
xor
xorl
and
mov
sub
stos
arpl
mov
xor
or
rclb
nop
stos
add
daa
data16
xchg
sub
scas
enter
leave
xor
cs
inc
jne
dec
mov
and
add
xor
mov
mov
push
mov
imul
jecxz
or
mov
test
repnz
sbb
sbb
mov
aad
pusha
inc
push
loope
xor
pop
mov
jge
aaa
mov
je
pop
in
scas
mov
loop
out
or
repz
or
jg
lahf
clc
and
outsl
lret
inc
enter
sbb
cmpsb
mov
inc
sbb
and
xor
mov
mov
cmpsl
sub
cltd
cwtl
daa
mov
out
bound
push
mov
sub
loope
popa
nop
mov
lahf
cltd
pop
mov
subl
mov
std
shll
adc
fcomps
push
or
repz
inc
lods
cmp
shlb
xor
lcall
clc
loope
sub
mov
xchg
and
push
ss
mov
xor
pop
fisubrl
mov
inc
inc
xchg
mov
out
cmpb
push
mov
sub
mov
and
mov
test
in
sub
sub
decl
push
and
mov
and
and
or
adcb
mov
add
add
shlb
arpl
adc
xchg
call
dec
mov
js
fbld
fs
mov
out
andb
and
push
cmp
int3
xor
ljmp
inc
sub
push
add
sub
subb
inc
add
arpl
sbb
popa
je
sub
jle
movsb
inc
pop
pushl
adcl
and
popf
aaa
and
repnz
mov
fdivr
add
and
lahf
inc
leave
in
mov
sbb
mov
ljmp
mov
pop
xchg
movsb
sbb
push
dec
out
pop
mov
inc
outsb
rolb
jge
adc
pusha
xor
jae
gs
jmp
pop
repnz
gs
rcll
shll
mov
and
iret
in
lock
pop
push
push
and
add
mov
icebp
arpl
out
or
sub
cmp
rclb
inc
aas
jnp
call
insl
mov
test
je
fsub
leave
sub
fs
or
push
mov
pop
jl
dec
and
jecxz
mov
mov
test
xchg
orl
or
cmp
in
ja
jge
push
add
mov
adcl
ret
aas
adc
add
lock
inc
aaa
rcrb
imul
sub
xor
cmp
ret
inc
mov
and
mov
out
add
xchg
dec
out
mov
bnd
aad
movsl
das
mov
pop
movsb
sbb
xchg
insb
test
jp
outsl
dec
in
aam
sub
push
test
sbb
xchg
enter
cmp
ret
sbbl
sub
imul
sahf
cltd
jge
mov
inc
mov
ret
add
push
jne
jno
xor
aas
in
adc
repz
shll
js
repz
sub
nop
adc
icebp
test
arpl
shl
mov
mov
aaa
out
mov
les
sbb
mov
and
idivl
xchg
sub
lods
into
pop
inc
jns
push
daa
stos
mov
sti
mov
stos
cmp
les
jns
push
push
xchg
data16
paddd
imul
arpl
sbb
in
pusha
xchg
movsb
insl
xchg
int3
jmp
and
imul
xor
and
pop
push
andl
pop
in
mov
test
push
mov
out
xchg
and
pushf
jg
mov
and
data16
and
mov
xor
and
je
mov
arpl
pushf
repnz
adc
mov
adc
and
jp
jae
xchg
push
and
jae
negb
imul
jno
fistpl
adc
xchg
and
push
addl
movsl
pop
std
jge
mov
add
push
testl
fstpl
imul
pop
clc
jae
sub
jbe
dec
and
push
bound
and
in
cmp
inc
mov
mov
lret
jle
in
add
jecxz
jl
jecxz
dec
lcall
and
pop
cltd
lret
ja
mov
cmpl
inc
pushf
popa
popf
ret
jmp
cmp
jno
or
add
flds
push
andl
add
jns
push
inc
sub
push
mov
and
xorb
sti
leave
inc
add
inc
or
and
pop
adc
pop
stos
bound
sbb
add
mov
mov
sub
push
and
and
push
std
add
xor
xchg
loop
push
ss
inc
popf
in
jg
rcll
outsl
and
test
mov
faddl
icebp
les
mov
mov
xchg
lea
imul
push
and
cmpsb
sbb
sbb
lret
dec
add
push
mov
adc
add
imul
jnp
mov
test
inc
icebp
in
scas
call
and
cmc
ljmp
xchg
incl
xor
dec
mov
loop
inc
in
scas
or
pop
jno
fdiv
dec
out
rorb
fisubs
mov
arpl
loopne
iret
or
gs
mov
lds
adc
dec
mov
cli
scas
je
loop
xor
cmp
je
inc
cmpsb
push
enter
inc
popa
stos
mov
ds
sbb
sub
mov
add
dec
jg
in
lahf
dec
inc
push
push
xchg
bound
and
and
sub
and
insb
mov
cmpsl
scas
ja
jno
gs
in
push
pop
into
lds
jnp
jmp
jle
imul
test
sub
jbe,pt
and
loop
loop
test
mov
insb
hlt
test
push
jl
xchg
xor
jp
or
sbb
mov
inc
xor
fildl
loop
cs
and
dec
mov
mov
movsb
and
shrb
inc
iret
mov
or
sbb
xor
and
adc
daa
push
adc
cmpsl
and
add
inc
cmp
jmp
jb
and
mov
mov
adc
and
sahf
push
std
push
xorl
pop
xorb
mov
pop
pop
aam
lods
stc
jb
movl
lahf
in
or
mov
jg
out
sub
jge
or
mov
xchg
shlb
das
dec
xor
add
and
scas
xor
nop
and
sahf
jmp
fcomps
rclb
out
mov
mov
imul
cmp
in
imul
jge
xor
enter
pop
stc
adc
pop
push
add
inc
cmpsl
scas
cmpsb
sbb
sub
and
sbb
adc
addb
test
mov
sahf
iret
jmp
mov
cmp
xchg
mov
fs
clc
pop
push
bound
and
add
hlt
xor
or
jns
sub
xchg
push
shll
subl
adc
ret
in
sub
adc
jp
mov
dec
mov
add
inc
mov
xchg
jg
pop
push
and
xor
and
fiadds
inc
loop
jb
sub
inc
jg
data16
push
and
in
xchg
jb
lods
dec
mov
les
subb
lahf
loop
mov
rorb
jne
aam
and
pop
jno
movd
je
rcll
sbb
movsb
inc
mov
ret
jnp
in
sub
mov
in
jmp
jmp
sbb
outsl
cwtl
test
popa
adc
push
data16
andl
les
inc
cmp
repz
dec
adc
fidivs
std
nop
in
inc
xor
mov
and
call
mov
adc
mov
cltd
lahf
imul
xchg
lods
mov
mov
add
arpl
add
add
ret
mov
test
pop
fsin
imul
fucomp
xchg
mov
andl
int
and
xor
shl
dec
inc
mov
test
and
add
ja
popf
shlb
scas
sub
and
cwtl
shll
pop
cwtl
jl
sub
subb
xor
and
pop
cmp
ja
xchg
lods
lock
cmpsb
xchg
idivl
popa
cmp
xor
lea
lcall
shrb
call
and
push
movsb
push
sub
inc
lods
jno
xchg
jg
out
inc
ja
jl
adc
shrb
mov
xorb
test
repz
sbb
inc
pop
popf
mov
lds
xor
jmp
add
dec
enter
sub
push
xchg
jecxz
arpl
leave
adc
mov
push
xchg
or
int3
adc
or
or
fs
xor
fstpl
lods
jecxz
and
pop
xor
aas
mov
push
and
xor
stc
ds
iret
dec
ret
jge
movl
loope
pop
loope
insl
mov
and
fimuls
test
mov
enter
insb
out
jg
data16
push
add
push
stos
mov
popf
mov
pop
sarl
push
inc
xor
mov
orl
or
xor
dec
pop
push
ss
adc
inc
mov
lahf
pop
cmp
xchg
mov
inc
lea
add
mov
test
in
in
test
sti
dec
and
fsubrl
shr
lods
jb
mov
fwait
dec
inc
js
repz
lock
sbb
or
cwtl
and
xlat
mov
aam
jb
jb
adc
jl
mov
aaa
icebp
lahf
mov
inc
adcb
loope
cmp
loopne
lods
hlt
xor
add
and
inc
and
mov
int3
insl
xchg
inc
xchg
add
xor
push
mov
rorb
sbb
fdivs
xchg
fxch
and
nop
xorl
repnz
mov
sbb
inc
push
push
inc
cmp
mov
fistps
insl
pop
shr
cmp
mov
incl
cli
test
and
mov
mov
test
ds
sub
mov
and
aam
add
in
dec
outsl
mov
and
int
jecxz
cli
cwtl
xchg
lcall
test
adc
jae
mov
and
add
sarl
mov
call
cwtl
mov
mov
jbe
in
subb
xor
push
jno
mov
repz
lods
pop
stc
cs
test
mov
mov
mov
jns
jmp
mov
add
lcall
pop
arpl
jns
pop
popl
cmp
and
mov
mov
fnstsw
lock
xor
mov
dec
jle
push
adc
sarb
test
or
clc
push
shl
sub
test
xchg
sub
pop
stos
sarb
fs
mov
movsb
xor
lock
xor
rorl
lods
fsubl
ficomps
add
xchg
lcall
xchg
inc
push
lcall
arpl
mov
inc
fstps
adcb
mov
sub
inc
jl
jb
push
mov
sbb
push
and
std
aam
bnd
and
xchg
cmc
and
movsl
dec
lret
xchg
inc
and
mov
sbb
pop
adc
sbb
call
push
rcrb
and
and
std
mov
shlb
dec
mov
outsl
lock
sub
sub
lret
hlt
pop
repnz
xor
cmpsb
and
int3
pop
mov
pop
icebp
sbb
xor
dec
nop
inc
mov
lods
pop
aad
push
lock
cmpsl
mov
addr16
pop
dec
xor
push
pop
xor
mov
sbb
inc
and
mov
or
mov
add
call
jl
out
shll
sar
pusha
jae
or
pop
mov
or
clc
adcl
fistl
adc
add
mov
cltd
popf
and
inc
mov
xchg
stos
ds
and
add
icebp
xchg
dec
push
lcall
test
push
and
and
fimuls
cmp
and
jge
mov
mov
daa
ss
inc
imul
and
sbb
inc
push
mov
xor
mov
repnz
and
pop
jecxz
sub
xchg
add
stc
aas
mov
xor
repz
test
mov
push
xor
sub
fnstsw
inc
lods
mov
xor
mov
movsb
sbb
aas
dec
shrb
aaa
add
dec
test
xchg
and
jg
cmp
in
stos
shrb
pop
mov
shll
subl
mov
imulb
ret
jno
dec
jl
loope
les
jno
pushf
jg
aaa
push
push
jae
aam
insl
push
and
inc
mov
jmp
fildl
pusha
lock
pop
inc
xchg
xlat
and
jb
xchg
sub
cltd
ffreep
pop
mov
aad
test
sub
ljmp
cli
arpl
loope
les
sbbb
add
inc
mov
and
mov
mov
dec
sub
inc
sub
xor
xchg
and
mov
outsl
dec
lods
cmp
out
out
lds
ret
xchg
jle
mov
imul
mov
inc
addb
sahf
ret
jbe
jecxz
jns
mov
pand
sub
or
inc
and
push
cmp
enter
and
rdpmc
jno
inc
and
mov
xor
icebp
and
push
pop
inc
andl
pop
mov
in
add
addr16
jmp
jl
and
mov
dec
shll
movsb
lods
arpl
and
imul
imul
cmc
sarb
and
fimuls
jno
repnz
in
cmp
mov
mov
outsl
jge
adc
adc
sub
test
cs
movsb
xor
pop
xor
loop
adc
leave
rorb
outsb
daa
mov
mov
pop
add
scas
sub
and
insl
lea
and
xor
push
push
push
push
push
or
push
rcl
dec
mov
nop
cld
icebp
and
mov
ret
out
dec
jecxz
popa
pop
push
dec
jge
mov
hlt
test
out
shll
jl
ret
jp
test
or
pop
outsb
loopne
dec
push
test
mov
andb
inc
sub
mov
add
xor
mov
imul
xor
incb
and
sbb
cmp
xchg
movsb
mov
and
pop
jbe
pop
enter
inc
arpl
xchg
jecxz
in
adc
sbb
xor
mov
andl
test
loopne,pn
dec
adc
pop
mov
or
jle
adc
insb
lcall
push
inc
or
xchg
sub
lods
inc
and
inc
subb
adc
inc
hlt
ds
js
testl
xor
inc
faddl
pop
xchg
fsubrl
pushf
lds
and
mov
movsb
stos
negb
in
cmp
test
imul
push
jle
in
add
sbb
enter
push
and
nop
shll
rcrb
and
lock
inc
aas
cmp
xor
add
scas
loop
stc
jo
in
daa
add
xor
push
sbb
ret
in
adc
mov
je
in
sub
xorb
adc
imul
add
iret
loope
add
xor
and
ja
imul
push
les
fadd
xor
pushf
test
mov
xchg
repnz
inc
jg
aam
ss
lods
movl
enter
push
dec
das
mov
xchg
jns
jno
mov
scas
in
fldl
bound
xor
add
pop
shl
push
test
xor
daa
push
mov
inc
cmp
int3
scas
sub
fadd
xchg
loop
xacquire
movsl
icebp
inc
sub
push
idivb
icebp
sbb
and
test
jmp
dec
cmp
in
les
hlt
and
sti
pop
out
aas
js
jae
adc
roll
cs
cmp
aam
push
inc
mov
lods
pop
jmp
jmp
int3
mov
cwtl
imul
shll
and
push
dec
out
insl
scas
xchg
and
dec
xchg
rclb
shlb
call
adc
faddl
pop
mov
lahf
or
mov
xor
mov
sub
out
sub
aam
jnp
mov
fs
pop
sahf
out
add
ja
nop
adc
xor
pusha
jecxz
sahf
dec
and
jae
jnp
or
bound
movsb
fisubrs
out
adc
push
xor
loopne
pop
mov
and
insb
movsb
xchg
out
sub
xor
mov
aas
test
jg
in
xchg
inc
sarb
rcrl
mov
and
xchg
aad
jg
shlb
cld
aaa
inc
cmp
test
jae
test
xor
inc
je
add
sub
test
arpl
jle
in
arpl
mov
lods
sub
push
je
aas
mov
fidivs
and
gs
push
in
mov
xor
and
outsb
inc
ret
dec
sbb
jg
add
aas
push
push
inc
push
sbb
in
roll
add
les
rolb
out
xchg
inc
jo
into
sub
xor
xchg
gs
mov
inc
dec
adc
push
and
add
outsl
je
arpl
sub
or
sti
sbb
lahf
movsb
push
mov
adc
sbb
movsl
and
push
mov
loope
push
mov
hlt
mov
fdivl
add
in
in
mov
mov
movsl
jns
nop
jmp
and
inc
addb
rcrb
movsl
dec
push
sbbb
ss
mov
cmp
dec
scas
jb
push
and
mov
enter
ret
inc
lret
jg
out
dec
repnz
cmp
int3
pop
push
enter
in
aam
mov
mov
test
gs
dec
xor
test
and
sub
out
ret
lea
nop
loop
xor
xor
xchg
mov
jge
hlt
sub
inc
gs
movsb
pusha
or
stos
push
sbb
in
cmpsb
jae
jl
int3
lahf
cltd
sti
cltd
adc
out
and
xchg
data16
ret
mov
jno
sbb
inc
fstpl
xchg
cmp
xor
pop
addl
cmp
xchg
out
mov
rcrb
jb
bound
and
lods
xor
jg
andl
imul
mov
jbe
sub
xor
scas
pushf
push
mov
jnp
in
sbb
mov
in
test
add
sub
pop
divl
mov
mov
dec
rclb
xchg
imul
mov
rol
test
jle
and
xchg
ror
repnz
insl
fwait
push
sub
outsb
nop
xchg
repz
cmpsl
data16
fcoms
ret
dec
sub
sub
test
leave
dec
ret
out
jg
push
sahf
ss
jg
mov
in
cwtl
pop
jb
in
sub
or
jnp
mov
addb
jecxz
xor
jl
push
pop
xchg
xchg
jge
loopne
ret
gs
scas
ja
push
aas
fs
pop
in
inc
je
xchg
bound
fistl
xchg
and
mov
jmp
shrb
std
xchg
test
sub
cli
jo
xchg
push
rcl
hlt
or
daa
scas
ljmp
and
test
js
and
icebp
das
cmc
pop
iret
push
mov
sub
add
loop
test
pop
inc
xor
ret
pop
lods
aam
aas
fbstp
pop
mov
ds
jo
mov
in
xor
xor
out
add
dec
je
subl
loope
iret
mov
repz
mov
stos
ja
les
ds
and
jle
mov
mov
mov
imul
incl
xchg
dec
and
mov
imulb
pop
and
test
jecxz
test
cli
insl
lcall
inc
movsl
fs
cmc
jl
add
mov
je
adc
loope
sub
jbe
push
and
push
and
in
je
xchg
dec
mov
and
mov
gs
in
adc
shll
clc
xlat
aas
or
mov
sub
jnp
mov
pop
cmp
pop
xchg
jno
loope
and
movsl
xor
loop
jmp
imul
sbb
mov
les
sbb
mov
pop
adc
and
sti
movsb
and
scas
sti
cmp
rcrl
and
pop
jl
mov
push
lahf
mov
adc
lcall
mov
repz
fidivs
adc
xchg
out
mov
sbb
add
or
cmp
pop
mov
push
and
xchg
popf
pop
lods
cmpsb
bound
sbb
aad
mov
sub
inc
addl
jns
sub
dec
rcl
out
push
inc
fsts
stc
mov
test
idivb
xor
icebp
push
push
and
xlat
mov
jecxz
push
ret
shrl
pmaxsw
faddl
jnp
xor
fsts
cmp
and
inc
jne
outsb
inc
rorl
js
out
add
cltd
jecxz
mov
out
mov
in
pusha
mov
das
xor
in
mov
ret
cmp
adc
out
push
inc
cmpsb
xchg
fucomi
sub
f2xm1
je
bound
lahf
movsb
orb
outsb
test
and
pop
xchg
inc
add
adc
pop
dec
data16
sub
mov
gs
mov
xchg
mov
sahf
mov
je
push
lahf
mov
and
push
dec
jae
jo
and
call
mov
outsb
or
cli
fs
and
movsl
xchg
cmp
and
xor
ljmp
jno
and
sub
sbb
and
sub
jg
inc
xor
jno
add
adc
and
jns
in
adc
cltd
lret
aaa
aas
inc
bound
or
daa
pop
hlt
rcl
les
mov
test
ficomps
gs
loop
sbb
jno
aaa
adc
add
mov
movsl
sbb
fcoml
clc
adcl
mov
and
cli
dec
dec
shrb
cwtl
dec
push
mov
sahf
imul
jecxz
jbe
negl
lods
cmp
push
and
and
outsb
test
mov
jge
dec
or
out
inc
push
out
fwait
enter
dec
mov
ret
mov
cmp
dec
fs
and
shlb
pop
sbb
and
je
out
js
mov
out
mull
bound
xor
lock
add
gs
mov
sbb
shlb
daa
cwtl
and
sbb
jmp
xchg
adc
and
fs
shlb
inc
out
jno
aas
sbb
adc
mov
adc
dec
mov
push
xchg
lret
je
mov
mov
adc
mov
and
mov
imull
dec
sub
sbb
dec
sub
dec
or
adc
mov
sub
aad
fsubp
and
inc
add
adc
sub
push
xor
inc
add
sub
js
push
adc
push
adcl
sahf
lock
lea
icebp
jmp
sbb
and
mov
scas
cmp
gs
xor
ror
inc
lret
inc
inc
inc
adc
enter
and
push
cwtl
lret
ret
push
jecxz
jl
and
add
mov
repz
xor
adcb
inc
stos
fsubl
jnp
and
sbb
jns
dec
rolb
mov
aaa
cltd
add
xor
jb
sub
pop
xchg
imul
adcl
fnstenv
xchg
jne
mov
mov
and
and
cmp
test
iret
out
add
adcl
mov
pop
pusha
mov
pop
cmpsb
dec
mov
dec
add
jle
jl
loopne
ror
ror
and
ficomps
shlb
mov
pop
jns
gs
xchg
cmpb
dec
pop
mov
roll
fstl
sbb
mov
insb
lea
movsb
sbb
jge
jae
outsl
adc
jg
mov
jnp
in
add
lahf
adc
test
and
cmpsl
and
test
imul
outsb
jb
add
shrb
outsb
cmpsb
mov
loop
xchg
mov
test
mov
sahf
mov
in
and
jecxz
jl
in
mov
push
sti
jmp
cwtl
inc
sbb
mov
adc
and
mov
sarb
popa
test
inc
mov
jp
sbb
sub
mov
dec
out
jl
mov
mov
xor
inc
bound
test
insl
int3
xchg
mov
stos
jno
outsb
ljmp
and
inc
scas
in
jmp
add
loope
movsb
das
and
jge
jns
mov
sbb
xor
mov
lods
jbe
lret
sub
mov
sub
mov
roll
arpl
fs
sbb
stos
mov
xchg
movsb
repnz
add
andl
adc
xchg
dec
xor
or
push
leave
adc
data16
push
and
mov
je
ds
pop
lcall
in
xchg
and
xor
mov
loope
inc
jns
lret
roll
repz
fdivl
mov
lret
mov
mov
xchg
fisubs
inc
cwtl
push
shll
xor
pop
pop
cmpsl
shrb
jbe
add
arpl
jecxz
and
enter
jle
inc
add
in
mov
lahf
sub
in
pushf
test
xor
sbb
cmp
push
js
xor
pushf
lea
mov
and
fbstp
test
pop
mov
xchg
fcmovnbe
out
test
fists
xchg
push
rorl
in
jmp
mov
jecxz
cmp
jno
mov
or
hlt
add
test
enter
in
or
out
dec
mov
lock
inc
gs
cli
add
dec
xchg
dec
cmp
lahf
and
lret
cmp
ror
pop
pusha
fwait
and
add
and
mov
lret
dec
pop
jle
jns
and
js
and
mov
adcl
cmp
mov
mov
addb
roll
sub
mov
ret
ffree
jge
dec
pop
movb
sbb
jno
jae
stos
enter
fildll
dec
nop
and
ret
cmp
lret
dec
jo
in
bound
cmc
or
repnz
xor
pop
stos
jbe
test
mov
sbb
and
popf
xor
movsl
test
xchg
sub
jle
je
xor
xor
lahf
sbb
rorl
add
and
std
in
xor
sub
iret
xor
xchg
xchg
and
cmp
or
sbb
mov
mov
xchg
and
mov
dec
adc
and
xor
add
ret
sbb
and
push
jmp
sub
add
fcomps
lods
les
xor
ret
jae
mov
std
movsb
lcall
push
jecxz
push
add
sbb
shl
inc
lock
mov
inc
adc
add
pop
jbe
pop
stc
insb
loope
insb
notb
stos
xor
xor
and
add
daa
pop
xor
repz
mov
xor
sbb
aad
mov
push
sub
jo
jnp
popf
sbb
andb
and
cmp
sbb
inc
mov
popa
addr16
mov
and
insl
xor
hlt
adc
xchg
and
push
adc
xor
int3
stos
inc
push
mov
data16
and
pop
mov
imul
repnz
adc
mov
xchg
push
add
xor
int3
push
les
into
outsb
mov
inc
in
cmp
stc
pop
ljmp
jg
int3
jne
lea
mov
fdivrs
sub
adc
les
cmp
sarb
icebp
imul
jo
push
dec
repz
pusha
mov
fs
ss
pop
in
loop
add
inc
rcrb
mov
mov
sub
cmpsb
and
xchg
and
push
shr
mov
outsl
scas
adc
inc
xor
movsb
sub
test
test
data16
gs
les
mov
loopne
shr
rcll
mov
mov
push
mov
in
imul
add
inc
jne
outsb
lea
shlb
inc
test
popa
push
pop
bound
clc
sbb
sarb
sbb
icebp
sbb
push
in
in
popf
push
cmpsl
pop
dec
lds
xorl
pop
dec
or
push
popf
jbe
or
inc
loopne
xor
xor
mov
cmpb
ret
jb
outsb
adc
hlt
mov
mov
mov
push
and
dec
popa
jb
xchg
insl
gs
xchg
sbb
sub
adcl
stos
insl
ldmxcsr
movsb
cmpsb
push
and
inc
mov
jp
and
jg
add
add
out
orl
mov
icebp
and
and
test
cmp
cmpb
loop
pop
aam
loop
jne
mull
inc
gs
push
je
loop
insl
addr16
mov
int3
hlt
xor
fstl
pop
jnp
gs
cmpsl
nop
sbb
sub
cs
push
inc
aas
les
shlb
inc
and
and
pop
imulb
out
hlt
insl
lock
xor
jo
pop
std
jns
jne
adc
jg
pop
int3
and
xorb
xchg
inc
popf
in
inc
inc
xchg
test
cli
inc
mov
jno
add
xchg
and
outsl
and
push
mov
in
push
sub
xlat
je
mov
insb
mov
pslld
mov
dec
cwtl
mov
add
and
xchg
scas
mov
mov
push
xor
out
leave
push
add
xor
mov
xor
inc
add
fnstcw
loope
outsb
push
or
addr16
shll
pop
jb
fistpl
orl
sbb
sub
push
jnp
popa
ss
pop
pop
pusha
and
ror
cmp
and
test
clc
clc
push
mov
inc
adc
cmp
movsb
mov
mov
fcoms
repnz
shll
loope
les
and
xor
mov
mov
scas
pushf
cmp
in
movsb
cmp
mov
and
jae
mov
lcall
addl
rorb
pop
inc
or
aas
adc
jmp
sbb
jns
jno
clc
cmpsb
arpl
repz
ljmp
fiadds
inc
push
sahf
orl
dec
adc
popf
rcr
aad
add
int3
outsb
xchg
mov
and
adc
call
mov
jno
mov
mov
adc
out
loop
mov
aam
movsb
mov
andb
incl
xor
call
jb
bound
hlt
pop
and
ja
sar
sbb
js
xchg
sbb
nop
push
clc
jns
shll
pop
shlb
jns
mov
push
jbe
ljmp
add
in
push
sub
ds
out
pusha
mov
xor
jg
fs
ljmp
add
or
imul
mov
add
pop
push
int3
ret
sbbl
mov
js
in
adc
sbb
sti
testl
test
sub
test
subl
popf
jns
mov
adc
loopne
loope
and
and
sbb
mov
mov
jns
push
inc
fadds
xor
add
mov
jae
lods
dec
inc
sahf
pop
adc
ja
ret
dec
daa
adc
addl
test
test
mov
mov
mov
cmpsb
push
push
dec
les
addl
fsubrl
dec
addb
mov
in
dec
dec
add
les
nop
or
imul
sti
stos
mov
data16
mov
rcl
call
lahf
jne
in
mov
inc
xor
lret
roll
xchg
andl
jl
mov
out
pop
mov
pop
popf
sub
cld
and
and
adc
fildll
sahf
repnz
std
stc
pop
inc
sub
lret
cld
push
movsb
sarl
sbb
inc
lods
and
andl
insb
adc
add
and
xor
and
pop
jl
mov
adc
aam
and
std
xchg
inc
call
mov
mov
jae
test
sbb
jge
push
or
gs
adc
stos
adc
ss
add
dec
daa
or
repz
sub
stos
inc
dec
jb
xlat
call
inc
or
xor
dec
push
pop
mov
paddq
insl
push
movsb
sub
push
repnz
mov
xchg
and
mov
arpl
jp
and
sbbb
movsb
sbb
jns
out
jle
sub
sbbl
cld
les
icebp
xor
jp
out
subl
fsubrl
pop
mov
fldenv
je
aam
sbb
insl
int3
push
loope
xor
sbb
jne
xor
add
jecxz
xchg
enter
xchg
mov
push
les
ja
jo
aam
mov
leave
mov
arpl
push
or
xor
jo
imul
cmc
cltd
stos
js
das
and
pop
mov
hlt
inc
and
cmc
mov
gs
push
xor
jb
pop
inc
sub
jle
adc
cmc
test
loope
push
dec
inc
insl
inc
or
add
jmp
pop
adc
data16
rolb
mov
jo
and
clc
cmp
movb
push
lock
pop
xchg
cmpsb
sbb
xchg
mov
mov
and
or
jge
and
icebp
push
mov
cmp
sub
enter
je
ja
xchg
data16
mov
sbb
and
fcompl
and
and
test
sub
aas
mov
pop
std
imul
dec
pop
rcrl
into
add
sub
js
addr16
lea
out
fwait
aas
adc
sbb
add
and
sub
inc
and
xchg
sub
push
stos
mov
add
in
adc
mov
jns
cmpsl
add
jge
pop
mov
jg
add
mov
jg
jno
lea
insb
les
cmpsb
sub
repnz
jmp
sub
les
mul
add
insb
xor
pop
dec
push
fisttpll
adc
fld
mov
mov
aad
cmp
and
push
shl
pop
mov
lret
shll
mov
addl
lret
and
mov
and
xor
lahf
cwtl
movsb
out
mov
dec
in
xor
pusha
xor
mov
daa
and
adc
mov
roll
push
and
and
ret
cmp
leave
or
shlb
xorb
inc
mov
inc
sbb
cld
adc
xor
movsl
and
inc
cmp
fbstp
mov
bound
jl
out
and
mov
loop
insl
into
adc
xor
ret
or
xchg
loop
push
out
out
jns
lods
mov
jecxz
call
das
mov
and
inc
adc
and
shlb
pop
mov
testl
xchg
push
scas
dec
cmp
adc
into
pop
je
dec
movsb
in
sub
aad
pop
cld
aam
sbb
popa
inc
cmp
adc
xchg
ja
jo
and
ds
dec
push
insl
xlat
bound
in
adc
insb
adc
mov
or
jbe
xchg
lock
add
sarb
mov
cmp
ret
adc
pop
pop
jnp
fs
subl
cmp
add
cwtl
jge
cli
push
adcl
inc
stc
test
shll
std
in
sub
out
rolb
ret
call
pop
jne
insl
in
les
adc
inc
add
addb
adc
test
mov
mov
cmp
loope
loop
notl
sbb
mov
xor
inc
mov
and
testl
mov
shr
bnd
mov
xlat
lds
and
adc
insl
repz
lods
movsb
lret
jae
inc
xchg
xchg
enter
jecxz
inc
mov
jb
adc
adc
rolb
loope
dec
sub
insl
pop
out
jo,pn
dec
and
enter
int3
pop
in
or
in
repz
pushf
dec
mov
xchg
and
mov
bound
push
mov
adc
push
or
mov
in
lcall
inc
xchg
xchg
fs
xchg
mov
movsb
mov
jb,pn
out
or
sbb
cmp
push
add
cmp
iret
pop
shl
jg
mov
and
push
jo
jo
fidivs
adc
mov
icebp
and
mov
cmp
fsubl
inc
loope
rorb
xor
js
ret
mov
push
jae
mov
and
ret
jne
out
push
lods
popa
daa
mov
cmp
and
adc
les
and
aaa
fnsave
bound
xchg
inc
inc
sub
cmp
xor
or
pop
push
inc
add
inc
aaa
roll
push
sub
inc
addr16
sub
mov
addl
xchg
mov
roll
inc
xor
xor
aaa
jo
pop
cmp
and
loope
jle
mov
cmp
and
cmp
jnp
cmpb
push
mov
and
xchg
dec
push
dec
rolb
daa
or
into
sbb
xchg
mov
fbld
and
jnp
js
push
mov
adc
leave
mov
test
cs
fs
push
pop
push
in
mov
movsb
sbb
mov
mov
hlt
fnstsw
cmp
inc
sahf
shrl
xor
push
shll
add
xchg
push
cmpsb
add
push
pusha
popf
jo
push
mov
fidivrs
cmp
cmpsl
dec
dec
sbb
shl
and
repnz
xor
test
inc
and
xchg
out
mov
xchg
pop
jbe
mov
mov
push
pop
xchg
or
shll
mov
or
out
addr16
inc
out
or
lcall
inc
outsb
xchg
sub
push
push
and
shrb
xchg
aam
stc
xor
push
sub
mov
std
xor
adc
fwait
gs
call
xchg
add
js
test
lret
xchg
mov
fadd
arpl
stos
add
lods
repnz
xchg
jns
arpl
push
mov
cmp
scas
inc
mov
and
fwait
mov
bound
ja
xchg
inc
into
cmp
push
xor
andb
push
outsl
mov
mov
cs
push
fisubs
bound
loop
xor
popa
lahf
mov
hlt
imul
jecxz
mov
out
stos
outsl
in
adc
and
lea
mov
inc
xchg
xor
repz
js
test
test
lret
lret
test
imul
jmp
xchg
and
rorl
sbb
add
out
mov
jg
mov
inc
cs
push
cwtl
shlb
and
out
das
popa
lock
insb
cmp
push
js
loope
addr16
mov
icebp
popf
or
icebp
inc
or
mov
insl
cmpsb
movsb
xor
jo
inc
shlb
loope
mov
adc
mov
cmp
mov
inc
xor
inc
sbb
repz
test
mov
loop
fbstp
orl
xor
iret
loop
inc
dec
pusha
test
shr
inc
xor
enter
and
add
stc
rcll
gs
jb
add
sub
lods
scas
mov
or
inc
fwait
mov
int3
insl
lock
shll
inc
mov
adc
adc
in
imul
xor
shlb
mov
pop
cmp
mov
imul
or
out
mull
sub
sub
xor
or
nop
sbb
add
inc
cmp
mov
inc
mov
mov
adc
roll
sub
and
jg
scas
dec
push
pop
jae
add
jno
arpl
sub
stos
sbb
jl
cmp
sub
jmp
inc
jge
mov
push
dec
mov
jno
rcrb
shl
mov
and
test
fsubrs
adc
push
dec
xor
inc
mov
test
fstl
daa
rol
push
or
enter
pop
fidivrs
je
mov
xor
mov
inc
je
add
in
dec
xor
insb
shlb
sub
adc
xor
scas
jp
loop
push
cmpsl
mov
in
push
adc
pushf
addb
adc
test
adc
cwtl
pextrw
hlt
shlw
incb
call
stos
enter
adc
cmp
pop
xorb
stos
xor
adc
sarl
pop
sti
xchg
push
mov
sbb
ljmp
mov
bound
xor
pop
in
cmp
cmp
aad
push
adcl
in
andl
xor
xor
lock
inc
hlt
cmpb
daa
decl
mov
xor
pop
dec
fists
pop
pop
fsubl
xchg
sub
cmc
jmp
pop
out
mov
xor
pop
jb
hlt
cld
inc
sarb
lahf
pop
sbb
xchg
ds
test
pop
leave
aas
mov
jl
xorl
neg
add
inc
lahf
out
or
scas
pop
mov
mov
and
js
rol
in
add
and
dec
cmp
xor
movsb
mov
in
sbb
bound
inc
decl
ja
inc
xor
push
sub
sub
and
pop
shll
sbb
xchg
js
add
jns
sub
out
mov
in
add
repnz
cs
push
and
mov
mov
inc
lcall
sub
movsl
dec
sub
repnz
pop
ss
and
pand
lods
fmul
push
je
and
pusha
fs
lahf
not
adc
jb
adc
sbb
in
push
inc
loopne
cmp
xor
and
adc
lock
stos
idivl
and
dec
dec
sbb
push
arpl
popf
scas
and
jg
push
mov
sbbb
jno
decb
xlat
adc
add
test
mov
scas
sahf
sbb
fcmovnbe
inc
jo
scas
or
lods
fldl
test
jge
add
lea
or
xorl
lods
jge
adc
adc
pop
iret
jmp
push
push
xchg
andb
pop
xor
cmp
repnz
sbb
lds
orb
add
aas
inc
test
aam
leave
dec
and
jge
xchg
loop
and
pushl
inc
cmpb
ja
adc
xchg
and
inc
icebp
xorl
push
in
sub
cmp
push
jp
subb
push
push
adc
dec
sbb
dec
je
test
insb
bound
les
ds
nop
jo
and
mov
pop
cld
adc
xor
and
push
ret
loope
sbb
addb
xchg
xor
idivb
sub
xchg
shlb
ret
stc
nop
pop
orb
pop
test
push
dec
jo
aam
sbb
movsl
lcall
sub
mov
mov
decl
pop
mov
inc
jae
ret
lcall
bound
fildl
out
notl
jge
adc
in
xor
sbb
jns
jbe
shll
add
ret
jb
daa
aas
stos
ds
into
fiaddl
pop
pushl
pusha
and
scas
pop
mov
pop
inc
in
lea
inc
add
inc
imul
push
mov
jp
push
test
inc
inc
and
add
mov
mov
xor
and
mov
mov
popa
push
enter
adc
xchg
test
inc
or
adc
push
add
mov
enter
mov
arpl
sub
add
dec
aaa
imul
add
je
repnz
out
mov
shll
sub
xchg
stos
pop
or
ret
dec
cwtl
xchg
popa
pop
and
and
cmpsl
inc
push
fs
out
cmp
mov
ds
ds
xor
repz
cld
mov
add
test
sarl
test
testl
rclb
mov
mov
out
jl
sahf
and
sub
addb
mov
dec
mov
mov
mov
adc
mov
iret
mov
mov
jecxz
jle
push
lret
mov
arpl
lea
xor
adc
push
xchg
and
sti
cmp
das
push
sbb
popf
vphaddubw
mov
jmp
add
scas
out
mov
pop
fidivrs
sub
loopne
lock
add
movsb
fstps
fnsave
in
repnz
loop
pop
lahf
xchg
xchg
lods
repz
mov
jae
push
aam
and
pminsw
xchg
shl
mov
mov
cmp
mov
push
stc
mov
mov
shll
ror
mov
in
jae
bound
push
scas
dec
inc
xor
sarb
jno
and
jle
shll
mov
pop
js
mov
xchg
in
aad
push
ret
shr
or
jge
out
shlb
imul
and
push
lahf
push
rcll
ja
cltd
gs
lods
lods
jle
shlb
test
sahf
adc
ret
inc
int3
loop
mov
and
mov
adcw
cmp
add
popf
icebp
adc
out
sbb
lahf
call
test
xchg
pop
daa
shll
sub
jne
jbe
and
pop
pop
push
inc
loop
sub
in
daa
add
add
push
ret
arpl
shrl
lock
jbe
leave
xor
aaa
filds
pusha
adc
movsb
xchg
mov
sub
dec
sub
repnz
push
mov
jnp
pop
pop
inc
out
and
test
mov
pop
add
fdivp
arpl
add
sbb
adc
inc
leave
jns
in
scas
mov
in
lea
xorb
or
sub
or
jae
xor
xor
jbe
add
adc
lods
add
and
and
sub
push
jg
adc
movsl
sarl
mov
shl
fsubs
mov
ss
test
xchg
stos
out
mov
push
xor
dec
push
jl
sbbb
ljmp
xor
jns
add
inc
add
mov
xorl
loopne
test
jbe
bnd
out
rolb
inc
adc
xor
adc
push
pop
mov
in
add
dec
nop
pop
push
and
mov
loope
cld
jecxz
aad
outsl
in
adc
arpl
pop
jge
inc
inc
icebp
inc
sub
xchg
jae
fsubrs
jge
mov
scas
jecxz
test
aas
sar
fs
cld
adc
xor
inc
insb
inc
rol
pop
scas
and
lcall
mov
sub
mov
dec
or
jmp
jecxz
xchg
pop
loope
addl
stc
les
loopne
lret
xchg
loope
daa
push
into
adc
xor
push
aam
and
ljmp
inc
dec
mov
xor
or
movsb
dec
iret
and
jo
cmp
lods
movsb
inc
or
xor
sbb
and
jge
mov
mov
jno
mov
aas
xlat
jge
mov
push
ret
jns
loope
inc
push
popf
mov
je
daa
clc
aas
xchg
pop
sbb
and
push
xor
les
jmp
inc
aam
je
jnp
mov
pop
inc
mov
sbb
jl
sub
push
pop
add
jns
sub
scas
adc
test
push
mov
sbb
push
popa
ja
shl
test
xor
aaa
cmp
incl
sarl
xchg
out
adc
scas
xchg
xor
pop
lock
pop
cmp
dec
movsl
xor
push
dec
dec
and
lock
js
inc
mov
pop
mov
cmpsb
js
ret
xor
cmp
enter
sub
shlb
lock
jecxz
and
jl
and
mov
loopne
xor
sbb
inc
rcr
fsubrp
outsl
shll
mov
pop
push
in
iret
stos
xor
pop
and
add
jg
scas
repz
jbe
popf
jle
and
xchg
les
scas
mov
mov
test
add
hlt
sbb
ret
cmp
int3
movsl
add
adc
or
inc
mov
lds
mov
adc
aaa
or
sbb
shll
cli
mulb
fwait
inc
sarl
cld
xchg
add
and
out
sub
dec
mov
in
repz
stos
shlb
inc
fdivr
mov
mov
outsb
xchg
repnz
push
mov
dec
decl
mov
lods
mov
dec
xor
arpl
push
pushf
lds
fadds
sub
sub
mov
jo
xor
and
mov
adc
adc
xor
jo
fucomip
hlt
cmp
cmp
xor
inc
jecxz
popa
sar
aad
mov
movsb
dec
and
jle
xor
xor
jns
orl
rclb
jae
lods
ljmp
sbb
dec
dec
xchg
jo,pt
and
les
loop
xor
and
push
movsb
xchg
sbb
in
repz
pop
inc
mov
xchg
in
mov
data16
push
jno
add
std
inc
xor
cmp
int3
xchg
mov
and
add
sub
shrl
pop
mov
add
fldenv
test
pop
sbb
xor
ljmp
popa
jg
ret
mov
sub
icebp
in
fstpl
shr
enter
cmpsl
jb
mov
mov
test
adc
ficomps
dec
or
icebp
rorb
repnz
lret
imul
and
dec
xorb
ret
insb
fbstp
pop
std
adc
mov
jmp
imul
ret
lods
cmp
jb
push
aam
mov
inc
jno
xchg
imul
cmc
repnz
fyl2x
test
xorl
push
cmp
jp
mov
sub
and
mov
test
push
lea
mov
pop
pop
xchg
ret
xor
idivb
imul
mov
cmpsb
popa
push
jnp
xchg
mov
dec
push
out
inc
dec
mov
loop
mov
fnsave
mov
mov
xor
lahf
jo
lea
inc
clc
ret
sbb
cld
mov
in
sub
aad
loope
push
ss
inc
pop
sbb
andl
sbb
das
xor
test
add
imull
les
dec
sbb
and
adc
jg
cwtl
mov
aaa
insb
scas
test
mov
das
or
lahf
test
and
stc
mov
shll
inc
jle
jne
rorb
sbb
roll
aam
push
push
and
cmc
cmp
into
and
cmpl
scas
xor
add
adc
push
ja
push
into
pop
out
cmp
xchg
ljmp
mov
mov
sub
aas
ret
mov
mov
jecxz
repnz
jg
xchg
pop
mov
popa
imul
dec
jmp
les
in
shrb
mov
jne
shrl
add
lea
test
adc
inc
jmp
push
mov
dec
xor
pop
mov
jo
in
bound
add
xor
mov
xchg
mov
dec
shll
mov
out
mov
dec
and
push
mov
mov
sub
and
ds
insl
repnz
subb
and
adc
pop
push
adc
push
test
notl
mov
jmp
jl
shrl
pop
loope
jp
sbb
loopne
ljmp
popf
icebp
mov
ret
mov
ret
sub
xor
lahf
dec
push
or
in
mov
test
sbb
outsb
pop
jg
arpl
pop
repnz
mov
inc
in
mov
call
aaa
hlt
xor
fnstsw
jae
push
mov
inc
or
ror
sti
sub
xchg
iret
ret
mov
jnp
and
hlt
mov
jg
jge
shl
adc
mov
xchg
stos
nop
bound
in
xchg
daa
ret
and
sbb
mov
adc
xor
and
pop
inc
mov
ficoml
sub
push
test
lods
jo
adc
push
xchg
dec
fnstsw
test
xor
dec
and
shlb
fdivrs
scas
and
daa
out
or
cmp
push
mov
cmp
mov
ficoms
fcmovnu
push
repz
xchg
pop
jge
adcb
shrb
add
jmp
sbb
inc
sbb
cli
nop
and
xchg
ror
push
inc
mov
and
outsb
in
les
cltd
pop
push
fmuls
dec
and
repz
sbb
and
out
clc
mov
in
xchg
push
sub
shll
test
fistpl
dec
cmpsl
cmc
enter
scas
xor
jb
pop
data16
arpl
rcl
xchg
mov
in
popf
sbb
mov
addl
sbb
inc
sbb
xor
jg
lods
xchg
cmp
pusha
add
mov
sub
jmp
jb
cmp
add
test
shrl
cs
jecxz
xchg
inc
and
and
into
stos
aam
add
ds
incl
push
pop
mov
arpl
and
movsb
clc
aam
xor
sub
xor
insb
in
mov
jecxz
call
pop
jnp
jge
popa
mov
dec
cs
or
sub
jmp
mov
xor
xchg
test
int3
dec
xchg
cli
loop
add
xor
sub
add
dec
jmp
test
xchg
js
sbbb
jne
movsl
je
and
push
xchg
push
jmp
cmp
loop
in
std
adc
cmp
inc
and
scas
jg
fstpl
or
scas
xor
mov
lods
test
mov
xchg
aas
inc
pop
jo
jns
inc
jecxz
loope
addb
xchg
mov
or
inc
js
rcrb
out
mov
xor
xchg
out
xchg
adc
ljmp
jle
in
sbb
sbbl
adc
mov
xchg
or
scas
test
iret
popf
subb
mov
stos
mov
and
gs
les
lret
pop
movsl
and
and
mov
sub
js
sub
daa
fdivrs
jns
imul
and
pop
sub
rolb
cmp
iret
call
cwtl
cmp
mov
out
xor
or
aas
arpl
and
xchg
movsl
mov
pop
mov
dec
in
test
pop
mov
out
and
imul
mov
jae
xchg
push
faddl
mov
jb
and
xchg
add
cmp
sub
lock
mov
and
lods
sti
int3
sbb
adc
mov
pop
ljmp
and
mov
hlt
mov
cwtl
fldl
mov
outsb
repz
icebp
pop
mov
mov
cmp
dec
lret
and
les
gs
insl
js
arpl
cmp
inc
adc
test
rorl
and
sbb
ljmp
mov
adc
popa
sub
jne
mov
in
sub
out
adcl
insl
mov
and
shl
mov
ret
adc
push
test
and
sub
gs
mov
and
shl
pop
and
dec
stos
sbb
push
and
loope
mov
call
or
jg
popa
out
fidivl
adc
int3
jo
xchg
and
mov
ret
and
mov
mov
dec
and
xorl
pop
das
lds
stos
xor
jecxz
or
sub
or
and
jb
xchg
in
gs
aaa
mov
out
stos
jg
sbb
subb
repz
push
ja
loop
test
jo
ds
call
pop
xor
jge
shll
mov
rcl
shrb
sbb
or
insl
mov
test
popa
out
jne
mov
psllq
fstp
mov
popa
xchg
xchg
jecxz
adc
push
mov
xor
jmp
sbb
adc
test
xor
xor
xchg
in
sub
out
xchg
pop
cmp
enter
xorl
daa
test
xchg
adc
xor
pop
ds
js
mov
mov
or
popa
lods
cwtl
mov
and
rcll
lods
xchg
nop
shll
dec
test
outsb
or
and
pop
shlb
sbb
orb
and
sbb
mov
and
bswap
xor
mov
loop
dec
adc
fsubl
in
hlt
aaa
mov
and
lahf
imul
arpl
popf
jo
les
add
movsb
sahf
dec
shll
inc
in
jae
imul
xchg
aaa
sub
mov
xor
test
push
sbb
out
mov
cmc
je
sub
inc
sti
cmp
mov
mov
cmp
inc
lret
out
xchg
and
push
rolb
in
repz
cmpsl
repnz
test
enter
and
movsl
add
pop
adc
inc
fs
nop
lahf
sub
xor
rcll
add
and
cli
stos
sbb
xor
sub
pop
loopne
out
pop
and
and
xlat
call
inc
andb
jbe
hlt
ret
mov
outsb
les
loope
fists
nop
notl
mov
jecxz
in
dec
jb
adc
mov
negb
pop
cmpsb
test
mov
jl
pop
gs
sbb
inc
jnp
and
or
in
in
repnz
xchg
xor
call
flds
inc
out
lods
sbb
cmp
adc
xor
out
test
inc
ficoms
xor
jl
sbb
ja
jecxz
mov
add
jo
bound
mov
test
ds
inc
rcr
inc
arpl
adc
sbb
adc
repz
jecxz
mov
movsl
jne
mov
loope
cld
out
jmp
and
jns
adc
in
mov
out
mov
add
add
lahf
jp
loop
cmp
popf
lahf
dec
test
test
push
xchg
inc
fs
and
popf
shrb
roll
loop
sub
andb
test
dec
aam
xor
mov
mov
xor
cld
rcr
add
adc
cmp
jge
jnp
gs
mov
sbb
imul
into
outsb
adc
std
sbb
dec
pop
mov
push
mov
les
divb
mov
pop
arpl
cmp
scas
jb
orl
add
shlb
clc
jge
leave
xchg
and
test
call
shlw
sbb
mov
iret
or
mov
xlat
shrl
subl
mov
int3
mov
inc
gs
mov
mov
add
xor
and
test
dec
nop
ja
les
xor
fbld
push
jae
sub
jg
inc
xor
shll
and
pop
xchg
mov
pusha
adc
movsb
push
mov
sti
sbb
cli
rolb
adc
mov
mov
out
and
cmp
jo
cmp
adc
js
cmc
jecxz
sbb
jo
addl
sbb
mov
and
popa
jmp
aam
sbb
je
and
sub
mov
mov
pop
int
xchg
mov
mov
shl
pop
push
xchg
es
and
pop
ja
movsl
jne
mov
sub
mov
mov
out
shlb
push
out
ror
movsl
sub
xchg
prefetchwt1
or
daa
sub
or
mov
das
xor
test
or
aad
or
and
ret
mov
push
jae
stos
fs
adc
mov
xor
inc
outsl
fnstsw
test
adc
les
idivb
mov
pop
or
scas
adc
or
cmp
xchg
and
sarb
lds
adc
shl
test
adc
adc
fwait
js
loope
dec
aam
mov
out
ret
and
int3
pop
gs
and
fnsave
adcl
mov
mov
ret
aam
xor
cmpsb
xchg
xchg
sub
mov
cmp
push
xor
lea
pop
sarl
adc
leave
cld
imul
and
shrb
push
pop
push
icebp
shrl
and
xor
jno
je
push
sbb
and
std
sbb
inc
aad
mov
lods
adc
outsl
and
cmp
lret
bound
int3
pusha
daa
orb
stos
iret
cmp
mov
sbb
in
out
ja
icebp
xor
jo
lock
mov
shlb
mov
pop
pop
adc
mov
cmp
rol
das
loope
push
xorl
shl
popa
in
cmovne
sub
out
and
loop
insl
inc
je
out
cs
pop
add
and
fldl
sub
jae
pop
jo
mov
cltd
fnsave
dec
outsb
aad
mov
pop
inc
add
mov
and
xor
xor
xor
sbb
test
shll
pop
pop
loope
pushf
jno
or
mov
mov
xor
jg
in
sahf
les
mov
adc
test
jge
in
or
mov
push
add
xor
sub
loop
jae
jns
and
cmpl
xor
xchg
push
and
xor
outsb
jb
loope
icebp
add
fidivs
push
push
and
inc
mov
xor
push
andb
popa
stos
imul
rol
mov
dec
xor
loop
mov
test
lock
fldt
pop
loope
push
and
xor
hlt
add
push
call
mov
dec
jbe
mov
jecxz
out
mov
push
rcll
bound
scas
mov
sahf
je
adc
push
push
xchg
xor
movsb
pop
mov
shrb
shlb
movsb
std
fstpt
inc
mov
movsb
sbb
or
inc
and
xorb
gs
dec
int3
sbb
cmp
repz
adc
xchg
cmp
jbe
sti
jae
mov
shll
insl
jge
out
ret
push
dec
mov
mov
sub
fidivrs
sahf
lret
add
and
xor
in
mov
out
xchg
adc
les
jno
sti
mov
push
pop
inc
test
repz
jl
dec
jns
sti
hlt
fisttps
out
call
jnp
mov
push
add
jo
adcl
icebp
cwtl
cs
imul
add
mov
jns
in
inc
push
pop
xor
cmpb
test
push
and
mov
inc
sahf
ljmp
push
cmp
sub
cmp
outsb
jle
mov
into
mov
mov
push
pop
mov
movsb
sub
add
incb
scas
les
mov
mov
add
jle
mov
mov
jns
inc
lods
xchg
cmp
rcll
cmp
lds
jg
inc
das
mov
in
enter
sub
jle
cld
inc
cmpsl
repnz
dec
cmp
cmp
mov
cmp
clc
stc
ret
inc
sub
fdivp
inc
jge
xchg
lds
pop
rorl
cmp
mov
repnz
fs
jmp
xor
mov
fldt
xchg
flds
test
xor
mov
outsb
mov
and
arpl
push
inc
xchg
ja
push
mov
push
notb
mov
adc
cmp
pusha
stos
xchg
adc
inc
movsb
push
cmp
adc
ret
xor
sahf
out
fstpt
mov
lds
sbbb
add
sbb
and
and
push
push
out
fwait
sbb
push
sub
xlat
fwait
call
cld
stos
aad
test
adc
sub
cltd
pop
daa
inc
fwait
sbbb
mov
ds
mov
jle
push
and
cmpsl
jb
in
dec
xor
nop
push
adcl
nop
mov
xor
push
jno
dec
push
in
jle
adcl
jns
mov
out
test
xchg
and
mov
mov
das
push
pop
push
hlt
mov
xchg
mov
adc
call
repz
and
mov
movsl
or
popf
std
adc
dec
lret
xchg
inc
sub
out
frndint
test
aas
rcll
out
cmp
out
inc
dec
push
jle
jae
jnp
xorl
push
xor
xor
fcmovnbe
sbb
push
xorb
dec
hlt
jns
xchg
std
loope
cmp
popa
cmp
fldt
mov
lods
pop
scas
daa
mov
and
pushf
in
loop
faddl
jg
xchg
sub
enter
pop
repz
pushf
xor
int3
pop
call
mov
rol
sbb
cmp
rclb
insl
sbb
pop
out
and
je
pop
push
aad
int
add
shlb
and
push
adcb
xchg
in
mov
mov
in
mov
loop
cmp
sub
mov
cli
scas
fidivs
fs
add
test
xchg
aas
mov
in
lods
leave
adc
mov
jp
loopne
ret
daa
mov
ret
ret
int3
shll
in
daa
sbb
repz
and
in
dec
imul
addr16
jle
adc
insb
testl
adc
add
mov
loop
xchg
out
mov
rcr
enter
pop
lock
adc
data16
and
add
loop
dec
cmp
sub
mov
cmp
xor
mov
push
inc
fadds
pusha
fistl
add
xchg
test
sbbb
aaa
xchg
lds
lods
sub
mov
inc
mov
jno
shll
fwait
add
nop
xorl
loope
xlat
cmp
notl
jb
clc
out
adc
roll
scas
cwtl
cltd
pop
jo
pop
and
mov
test
pop
shrl
ret
fcmovne
enter
rcr
aaa
subb
mov
mov
and
and
mov
fcomip
xchg
test
sub
pop
cmp
test
mov
popf
movsb
pop
outsl
dec
lcall
mov
rcll
jb
movsl
ljmp
and
js
clc
lahf
sahf
into
les
out
hlt
ficoms
xor
push
sarl
mov
out
inc
inc
push
popf
jo
ret
imul
mov
mov
cmp
mov
or
or
xchg
lods
jle
mov
jmp
pop
shlb
fmull
dec
rcr
scas
jp
pusha
movsb
aas
mov
cmp
fs
sahf
mov
nop
mov
dec
shl
mov
andl
xchg
aaa
outsl
cmp
leave
mov
inc
jmp
jno
dec
push
add
push
cmpsb
jne
mov
imull
subb
aaa
pop
add
and
or
int3
adc
sub
bound
je
dec
div
jg
jb
mov
dec
std
mov
jno
xor
lea
jo
mov
and
inc
jo
fs
cmp
jmp
movsb
icebp
out
dec
fmull
dec
ss
outsl
pop
or
out
jno
das
inc
mov
lods
aaa
cmpb
sbb
and
out
and
mov
repz
cwtl
lods
inc
sub
sahf
and
add
fmull
and
and
mov
and
push
movsb
pop
push
jle
pop
out
dec
xchg
inc
or
jl
mov
inc
cmp
xor
rcll
jnp
sub
scas
and
test
mov
xor
rcrl
add
scas
mov
mov
xchg
push
lock
mov
and
mov
leave
push
ret
jp
and
add
dec
xor
std
pop
loope
or
mov
sub
pop
arpl
sahf
push
repnz
cwtl
inc
test
xor
sub
test
xor
add
arpl
sub
mov
sahf
jnp
mov
xor
out
sti
iret
loopne
adc
cmp
dec
xchg
jno
fmull
sbb
adc
sbb
out
push
sub
fcomps
inc
repnz
and
ret
mov
xor
test
fs
jb
xchg
push
shll
mov
aaa
xchg
rcr
repnz
inc
push
loop
ja
loope
mov
stos
in
stos
insb
xchg
xor
inc
xor
push
add
lock
or
jns
xor
sub
jno
inc
push
cld
test
mov
jns
dec
or
stos
movsb
pop
sub
sub
mov
and
cmc
incb
das
pop
push
inc
sub
pop
inc
inc
xor
repz
mov
scas
cli
mov
sbb
jmp
movsb
lret
adc
xor
outsl
xchg
mov
test
mov
mov
stos
inc
cmp
mov
adc
lcall
and
push
push
jns
shr
daa
pop
nop
mov
jecxz
lret
adc
sub
xor
jge
mov
inc
gs
rorl
dec
push
sub
xor
adc
rorb
xchg
out
fisubs
mov
test
dec
or
test
scas
adc
dec
insl
out
loopne
movsl
jg
push
repz
xor
imul
add
xor
sbb
je
call
jno
arpl
int3
pop
xchg
dec
inc
stc
les
pop
cli
pop
shll
and
ds
pop
pusha
movsb
mov
push
jne
and
xor
inc
xchg
push
jns
push
add
dec
inc
jge
mov
cmpsb
or
push
psraw
mov
lods
popa
pop
or
push
jle
jg
push
nop
adc
xor
sahf
lds
rol
cmpsb
xchg
inc
and
dec
test
out
ss
adc
jmp
cmp
arpl
fmul
mov
out
inc
adc
out
test
add
shrl
shll
cmp
mov
mov
rcr
in
je
loop
or
leave
insl
mov
test
and
lods
aas
and
jg
jnp
imul
inc
aam
mov
daa
adc
shr
movsb
and
cmp
and
fbld
cli
jb
and
dec
mov
mov
push
dec
mov
lock
mov
test
gs
fwait
cld
lret
addr16
mov
dec
jno
add
jg
sbb
pop
mov
push
adc
out
imul
mov
cmp
pop
lods
fcoms
jo
or
arpl
inc
jle
dec
mov
addb
jl
test
and
mov
in
xchg
mov
jg
insb
pop
push
xchg
push
push
xorl
xor
inc
popf
dec
jb
aas
aaa
inc
xchg
and
pop
fdivrs
popa
enter
out
imul
and
jle
jno
cmpsl
push
daa
in
mov
imul
sbb
jmp
mov
mov
repz
and
adc
je
sub
movsl
pop
mov
ljmp
dec
hlt
out
shll
mov
and
aas
pusha
into
shl
pop
push
loope
cmpsb
popa
divl
sub
mov
rcrl
xor
pop
pop
mov
mov
cmp
aad
in
dec
rcl
test
fcompl
mov
imull
cmpsb
pop
jg
xchg
sub
ret
mov
decl
test
sub
imul
adc
bound
imul
pop
dec
mov
lock
mov
lds
or
xchg
and
shl
hlt
aaa
push
popa
inc
test
and
ljmp
cmp
and
movsl
loop
in
mov
stos
andl
stos
gs
xchg
enter
and
inc
add
sub
push
insb
lahf
lcall
xor
ret
rcrb
xchg
sub
pop
orl
das
ja
xor
icebp
push
shrl
test
fstl
aas
inc
push
sub
pop
cmc
mov
mov
dec
mov
pop
aad
mov
push
dec
mov
lods
adc
cmp
and
mov
mov
mov
stos
std
lret
push
lahf
and
cmp
jp
mov
loope
bound
adc
movsb
arpl
pop
jge
ljmp
fisttpll
arpl
jnp
imul
mov
mov
in
mov
push
sahf
adc
hlt
mov
pusha
repnz
add
frstor
dec
cmpsb
rcl
shrl
mov
inc
cmp
mov
ss
imul
iret
push
xor
mov
inc
lods
data16
xchg
mov
xor
jecxz
and
out
mov
and
jle
pop
mov
fs
push
andl
push
ret
pop
lret
outsl
push
and
cmc
mov
mov
cld
mov
or
fwait
rcr
add
xor
push
lock
test
push
loope
fwait
cs
push
xchg
daa
dec
out
int
lcall
lods
jno
sbb
pusha
dec
and
in
pop
loopne
or
sbb
inc
dec
in
fdivp
imul
sub
out
lock
and
inc
out
and
xor
testl
mov
mov
arpl
lret
xorl
imulb
mov
xchg
pop
add
ret
pusha
xorl
insl
xor
loopne
mov
repz
dec
mov
jg
stos
xor
push
mov
popf
dec
inc
imul
roll
and
dec
jmp
adc
bound
mov
mov
push
gs
call
xor
jb
adc
in
inc
mov
mov
push
pop
mov
xchg
fs
out
sti
and
inc
pop
pop
push
inc
or
les
sub
mov
add
xchg
pop
mov
mov
mov
or
ret
out
testb
xchg
push
mov
sbb
inc
insl
xchg
cmp
outsb
ja
push
sub
xchg
inc
les
repz
jae
inc
insl
dec
push
rcl
mov
mov
call
jo
insl
fnstcw
xor
mov
xchg
inc
cmp
xchg
loope
leave
dec
mov
and
xlat
adc
and
pop
adc
leave
in
lds
and
cmp
mov
test
mov
outsl
mov
subl
scas
push
xchg
movsl
mov
and
mov
inc
fsubs
push
xor
push
mov
and
jno
addr16
shll
arpl
lahf
mov
bound
sbb
sarl
sbb
jecxz
aas
out
pop
jb
and
dec
pop
pop
or
sbb
into
fcoms
rolb
sub
popa
gs
fs
jns
rclb
in
sub
aam
xor
lahf
dec
jb
and
add
test
ljmp
lods
jb
and
jo
sub
ljmp
dec
xchg
mov
sbb
cmp
mull
mov
jge
shll
filds
pop
out
test
in
cmpsb
fnstenv
mov
xchg
int3
add
and
mov
xchg
and
mov
gs
mov
in
dec
lods
jl
loope
mov
loopne
or
pop
xchg
sbb
movsb
test
xor
mov
lahf
lea
cltd
stc
scas
enter
inc
sub
xor
push
xchg
loopne
push
inc
add
test
add
pop
jne
xchg
in
call
stos
imul
sti
or
jns
das
in
push
and
cmp
mov
in
jns
push
jo
jno
sbbl
test
jge
push
loope
mov
pop
mov
mov
mov
inc
cmp
hlt
fmull
andb
lahf
cltd
jns
push
push
popa
and
fs
and
ficomps
iret
movsl
mov
dec
mov
add
lret
ljmp
and
adc
scas
arpl
inc
mov
stos
and
scas
push
mov
sub
pusha
pop
and
sub
push
addr16
or
pop
jle
mov
push
lds
push
sub
mov
test
cli
dec
add
repnz
sub
mov
andl
ljmp
inc
adc
and
pop
rcll
dec
mov
nop
les
xor
mov
int
mov
mov
push
cwtl
cmpsb
sub
jmp
fidivs
mov
insl
nop
mov
loope
cmp
popf
inc
scas
jb
jl
jp
jb
lret
je
pop
inc
lods
add
sahf
xchg
sbbb
sti
inc
rclb
in
jno
insb
cmpsb
stos
mov
pop
push
mov
mov
gs
addr16
sub
dec
adc
test
push
out
push
inc
pop
pusha
insb
xchg
rorl
movsb
inc
movsb
call
gs
push
jo
mov
in
add
pop
in
push
jge
cld
pop
add
fcompp
hlt
mov
roll
fldl
jns
mov
mov
ja
sbb
sub
mov
mov
and
jmp
mov
dec
les
inc
push
or
mov
test
and
rclb
shll
subb
popl
push
adc
adc
out
mov
daa
jb
std
inc
movsb
outsb
dec
jp
mov
les
and
movsb
ds
xchg
dec
subl
fsub
shll
inc
xadd
addl
jns
mov
out
fdivp
push
push
stos
sbb
and
gs
outsb
gs
pop
in
mov
int3
clc
mov
popa
iret
rcr
add
fimuls
pushf
lods
aad
rcl
loop
xor
lods
and
sub
inc
pop
test
and
hlt
leave
mov
addl
pushf
andl
push
popa
pop
dec
push
dec
mov
and
hlt
enter
add
adc
push
pop
inc
jge
divb
outsb
cltd
add
mov
push
mov
or
pop
mov
loop
shll
or
push
pop
mov
or
mov
add
xor
loopne
pop
and
repz
sub
inc
adc
loope
mov
loope
sbb
mov
shrb
fnstsw
and
cmp
out
loope
and
or
lret
mov
leave
in
mov
pop
cmpsl
mov
je
pop
and
jl
shrb
mov
notb
mov
and
sbb
loop
mov
bound
into
jb,pn
xor
and
mov
pop
pusha
sbb
xlat
xor
je
pop
cmp
xchg
daa
push
jo
std
push
lret
jns
rolb
sti
in
sbbb
add
out
sub
jns
test
and
mov
ret
inc
push
xor
push
sbb
and
jno
sahf
jl
and
pop
ja
adc
mov
jle
test
pop
dec
xor
lahf
out
fbld
sub
inc
push
rcrb
int
and
daa
pop
lea
pop
sub
aad
push
addr16
out
in
pusha
aad
ljmp
cmpsl
fmull
mov
push
cmp
icebp
and
xor
testb
sub
sbb
adc
and
mov
xchg
pop
push
aaa
scas
pop
repnz
jb
das
js
xchg
test
add
mov
and
pusha
ljmp
mov
push
and
subl
adc
lea
push
dec
adc
ret
push
inc
dec
dec
mov
out
push
nop
ss
inc
push
jnp
insl
in
fildll
add
sbb
js
je
add
shlb
and
pop
fstl
push
xor
or
icebp
stos
iret
loope
pop
ss
mov
push
loope
insl
aad
push
xor
nop
push
sbb
cmp
dec
fmuls
loope
inc
dec
sahf
add
or
cmp
js
test
and
rorl
lock
ret
fnstsw
add
or
insl
test
fisttpl
add
cmp
push
sarl
data16
add
jns
dec
push
lock
cmpsl
mov
loope
pop
xchg
daa
call
pusha
add
xchg
inc
or
ficoml
xor
hlt
xchg
push
cltd
jns
lcall
daa
inc
cmc
lds
mov
and
fs
and
dec
outsl
scas
jmp
jecxz
push
aas
les
repnz
mov
xchg
ftst
scas
sbb
xchg
inc
and
mov
outsl
nop
enter
lret
inc
sbb
pop
jno
sbb
dec
or
pop
jns
xchg
dec
in
in
add
xor
fs
xor
rcl
jb
jb
sub
pop
xchg
fsubr
subl
and
and
inc
loope
inc
and
dec
sub
test
dec
xor
insl
popf
xchg
lea
jmp
xor
fiadds
subl
inc
repz
adc
call
mov
mov
push
xor
sub
fsubrl
and
xor
push
nop
mov
bound
insl
dec
std
adc
arpl
mov
pop
idivb
or
pop
divb
jmp
add
je
popf
test
ror
imul
and
call
and
cmp
out
enter
xchg
imul
loope
xor
mov
and
mov
mov
or
xchg
je
repz
hlt
jecxz
or
ss
add
pop
inc
je
jae
in
ss
loop
and
xchg
pop
mov
push
das
ds
inc
cld
sbb
lock
lret
dec
xchg
gs
and
out
or
dec
xchg
insl
fistl
mov
cli
testl
pop
xchg
shll
adc
dec
inc
and
rcr
mov
in
push
inc
leave
jge
xchg
xlat
and
fmull
pusha
out
stos
jle
pop
inc
sub
fsubl
cmpl
jae
jp
xor
sub
popa
dec
xchg
xlat
repz
add
adc
mov
jmp
xor
ds
adc
daa
lock
inc
push
shll
stos
cmp
ljmp
xor
xchg
scas
test
stc
cli
ret
mov
fadd
dec
and
loop
dec
test
and
sub
test
call
and
aam
add
add
sbb
cltd
pusha
cmp
push
icebp
pop
test
jmp
and
imul
pop
into
ja
xor
insl
sub
in
std
add
add
nop
inc
inc
mov
mov
push
sub
xchg
or
mov
add
lahf
or
movsb
stos
in
clc
adcl
add
inc
adc
mov
pop
dec
push
cmp
jbe
je
xor
nop
sbb
sub
sub
fistl
jl
pop
test
fiadds
jae
xorl
les
shl
xor
enter
in
jnp
out
outsb
mov
popa
xor
adc
and
in
cltd
sbb
push
shll
ficomps
ror
pop
push
cli
lcall
mov
inc
or
pop
stos
mov
sub
jmp
xchg
movsb
gs
test
scas
fstps
dec
pop
jb
add
cmp
les
popl
xor
sbb
mov
xorb
std
jo
push
adc
fs
mov
test
and
mov
out
loope
push
mov
sub
xchg
or
shll
fldl
jno
xlat
cmpsb
ds
push
int
adc
sub
lea
es
sbb
outsb
addl
test
pop
mov
mov
loope
cmp
scas
and
pop
cmp
and
dec
in
test
xchg
rolb
stos
rorl
push
add
xor
xchg
add
bound
dec
aas
test
or
sub
jo
sbb
adc
pop
je
aaa
popa
push
add
ret
and
mov
loop
aaa
lock
and
jnp
cmp
js
inc
pop
in
cli
insl
pop
adc
andl
and
mov
add
or
adc
lcall
add
cltd
sbb
xchg
movsb
push
fdivl
and
imul
add
pop
arpl
sub
aad
shl
out
fisubrl
sbb
add
imul
hlt
mov
xchg
and
fisttpll
cmpsb
nop
mov
cwtl
mov
notl
jecxz
pop
subb
xchg
mov
and
sbb
pop
mov
jno
and
bound
jg
repz
mov
fists
jl
mov
ret
cmpsl
xorl
shll
cmp
shll
popf
xchg
xchg
add
adc
loope
ds
hlt
movsb
out
lret
push
sub
sbb
lods
mov
sbb
mov
sti
lock
insl
out
sbb
sub
nop
clc
mov
adc
dec
bound
shll
mov
push
mov
xor
jle
xchg
inc
sub
addr16
push
out
jbe
adc
js
repnz
inc
adc
or
test
mov
dec
pop
rcll
mov
loopne
insb
clc
cwtl
andl
jg
push
mov
inc
in
xor
iret
xchg
pop
pop
xchg
jle
jae
xor
jb
xchg
add
inc
add
lahf
nop
imul
xchg
fnstsw
movsb
lret
repnz
sbb
shll
and
mov
pop
jnp
pop
cmp
leave
into
mov
addr16
lods
mov
pop
jbe
adc
and
add
cld
inc
pushf
mov
clc
and
sahf
rcrl
mov
fsubs
cli
adc
dec
in
scas
test
pop
xor
rorb
and
xor
imul
aad
mov
xor
jne
popa
nop
leave
je
repnz
xchg
adc
out
sbb
sub
cld
sarl
hlt
xchg
out
adc
shlb
hlt
daa
cmpsb
mov
mov
lock
xor
mov
je
sub
shl
loope
jno
and
jge
xchg
popf
and
insl
flds
fwait
inc
mov
pushl
subl
add
push
ljmp
aaa
or
scas
arpl
aas
and
adc
out
popf
and
add
and
call
js
fcmovnbe
mov
icebp
loopne
sub
and
inc
sarb
xor
and
in
scas
out
dec
imul
and
push
lret
rcll
icebp
aas
add
inc
gs
cli
or
adc
mov
aad
sbb
and
jp
inc
jne
jnp
push
and
push
mov
mov
jg
bound
sbb
push
add
xchg
mov
je
mov
sub
test
or
sub
and
out
cs
mov
xchg
adc
in
into
repnz
insb
cmovl
int3
shll
iret
mov
jns
cwtl
mov
orl
mov
popf
popf
and
cld
sbb
dec
test
or
rorb
loope
mov
mov
cmpsl
adc
add
xchg
jge
pop
or
ror
icebp
pop
push
mov
xchg
pop
stc
dec
jnp
hlt
sarb
push
sub
mov
mov
sub
add
jo
inc
jno
in
lods
lahf
dec
and
or
ja
test
popf
jp
add
fisubs
xor
xlat
jne
inc
addr16
daa
mov
in
mov
inc
xor
pop
aam
sub
fmul
sbb
inc
and
sbb
push
into
mov
xor
inc
and
sub
mov
xor
pop
aad
mov
inc
into
dec
aaa
loope
out
testb
fisubrs
xchg
sub
stc
outsl
jo
fbld
ret
xchg
gs
shlb
xchg
call
loope
les
xor
ja
jg
or
or
pop
cmp
out
call
jecxz
int3
outsb
sbb
pop
imul
lods
scas
push
sub
cmpsb
jp
adcb
loope
pusha
xor
scas
lods
mov
cmp
and
add
xor
ret
daa
loop
pop
inc
jbe
and
mov
push
jnp
fdivr
mov
or
popa
aad
xor
and
pop
je
stos
orl
mov
push
shll
pusha
sub
xchg
scas
fs
sub
popa
repnz
sbb
pop
xchg
jecxz
pop
aad
add
rcr
pop
arpl
inc
lods
lahf
pop
and
pop
cmp
icebp
xor
push
ss
in
jns
pop
mov
sub
arpl
push
fldcw
and
cltd
xor
popa
sahf
jp
mov
call
push
repz
inc
lds
mov
iret
xor
dec
inc
inc
call
sub
mov
pop
movb
outsl
sub
add
lcall
ss
jb
adc
incl
jne
xor
and
jp
int3
inc
mov
inc
mov
rolb
ffreep
lods
les
in
mov
or
out
repz
mov
jnp
addb
mov
push
jno
shll
jge
aam
jecxz
test
sub
dec
repz
lss
lahf
xchg
xchg
pop
pop
shrb
and
add
jge
and
xchg
jg
mov
scas
and
data16
ret
jno
inc
cmpsb
daa
or
outsb
fs
ja
rcl
rcrb
outsl
fists
divl
sahf
lods
jp
icebp
dec
add
popf
je
nop
and
sub
pop
sbb
js
mov
popa
or
pop
push
pop
imul
add
jecxz
inc
add
xor
or
sub
pop
sub
dec
pop
cltd
int3
int
push
push
xor
dec
aad
mov
add
orl
mov
xorl
lret
jp
mov
mov
sub
dec
inc
cs
inc
loope
daa
sbb
xchg
add
dec
sub
das
lock
pop
and
mov
jae
inc
sub
push
xchg
andb
cmpsl
int3
rsm
out
movsl
movsb
add
sbb
jg
xchg
xor
add
dec
add
and
ret
mov
xor
popf
fnstenv
push
xor
and
pushf
icebp
push
mov
jecxz
inc
jbe
adc
mov
adc
xor
mov
arpl
sub
adc
insb
push
inc
push
dec
pop
add
call
sar
jno
scas
arpl
pop
jne
jge
incl
ss
arpl
fmuls
hlt
sti
or
sbb
mov
fmul
inc
mov
adc
pop
je
outsb
popf
add
mov
and
rorl
into
mov
mov
mov
mov
divl
mov
add
andl
jns
in
and
push
push
imul
mov
dec
roll
test
jbe
popa
sub
mov
or
and
jge
mov
add
xor
aam
inc
enter
orl
dec
addl
gs
enter
adc
and
sub
aam
fs
iret
vpmuludq
loope
mov
add
ljmp
adc
nop
xor
sub
xchg
lret
aam
inc
leave
mov
adc
aam
loope
jge
or
pop
xchg
popf
repnz
push
pop
push
xchg
scas
lahf
daa
test
ss
and
test
push
test
and
pop
pop
mov
test
pop
aam
lods
fs
out
xchg
and
test
cmp
fisubs
lret
dec
add
cli
enter
sub
jp
ljmp
pop
inc
xor
xor
mov
cmp
testl
addr16
and
xchg
movsl
lods
mov
cs
clc
mov
sbb
arpl
jmp
lea
fcompl
mov
xchg
mov
gs
mov
test
in
aam
jbe
pop
push
adc
filds
and
bound
xor
gs
xor
loope
aad
cmp
jl
mov
adc
cmp
pop
sbb
shlb
xor
int3
mov
movsb
inc
sub
aam
jnp
cmpsb
jno
mov
movsb
fdivr
sub
and
dec
and
push
mov
divb
rcll
inc
xchg
adc
repz
test
adc
xor
insb
pop
in
add
mov
sahf
inc
and
inc
aam
ret
mov
xor
adc
xor
adc
lock
and
bnd
mov
fstl
rorl
sbb
jno
mov
add
sub
inc
insb
outsb
and
adc
shll
push
sub
out
loope
and
mov
mov
add
xor
and
cmpl
or
mov
xchg
fstp
mov
out
test
add
insl
and
push
subb
or
repnz
lods
enter
movsb
xor
fucomp
mov
clc
fldl
imul
pop
xchg
xchg
xor
stos
lock
add
cmp
addl
xorl
push
pop
popf
add
dec
daa
test
adc
cmp
inc
int3
jne
cmp
pop
test
testl
push
daa
lret
mov
mov
aas
xchg
and
aad
in
pop
mov
xor
mov
in
pop
mov
mov
in
ljmp
mov
testb
andl
mov
pop
dec
aas
inc
push
jge
rol
repnz
jno
or
leave
iret
pop
arpl
xchg
icebp
push
ja
inc
cmp
mov
pop
jno
xor
lret
aaa
add
cmp
and
jo
int3
adc
mov
rorl
lds
adc
out
adc
std
nop
inc
cwtl
and
pop
loopne
int3
cmpsl
shlb
and
mov
jmp
pushf
push
mov
icebp
or
adc
or
push
dec
mov
add
insb
test
aas
inc
in
xor
lods
xchg
add
xchg
cmp
jo
xchg
iret
mov
push
adc
fiadds
push
int
in
jns
xchg
ds
xchg
xchg
lahf
and
pushf
xchg
mov
les
dec
arpl
mov
popa
sti
sub
notl
and
in
in
adc
idivl
and
and
test
addr16
fidivrs
sbb
push
hlt
repz
fnsave
xor
shl
bound
out
mov
pop
aam
loope
fisttpll
cli
shlb
and
lahf
in
add
stos
jg
ds
cmpsb
jl
pop
and
mov
loop
push
in
mov
inc
push
add
jne
inc
jbe
xchg
xchg
xor
insl
fldl
add
mov
or
test
aas
pop
mov
hlt
mov
push
dec
lods
add
movsb
cmp
fmul
les
fadds
or
dec
test
scas
int3
lahf
test
sub
flds
jae
sarb
mov
enter
xor
or
sbb
inc
das
dec
push
pop
rorb
sub
or
aam
inc
push
push
lahf
into
and
insb
idivl
and
or
rcll
and
nopl
xorl
xor
pusha
adc
movsb
cmpsb
popf
jl
jmp
dec
outsb
test
lods
int3
inc
repnz
xor
insb
jno
shl
out
loope
mov
bound
mov
push
inc
aaa
xor
push
inc
addl
popa
mov
jae
cmp
subps
imul
daa
jbe
imul
cmpsl
inc
or
cltd
cmp
bound
pop
clc
mov
dec
out
push
xchg
and
sub
cld
test
adc
mov
nop
add
xchg
dec
inc
xor
or
sarb
pop
jae
pop
and
sbb
bound
int3
mov
repz
mov
stc
out
xchg
sub
or
dec
push
fsubl
lahf
sbb
and
jg
icebp
sub
jne
bound
enter
and
push
push
das
xor
or
cmp
add
dec
adc
enter
sbb
mov
popf
xchg
and
ja
mov
out
ja
inc
or
stc
sahf
inc
repz
xchg
lods
mov
jbe
and
sbb
mov
cltd
js
popa
sub
test
or
jge
jno
iret
std
mov
shl
add
aas
pop
mov
rolb
or
sub
lret
mov
xchg
insl
bound
movsb
jne
mov
xchg
inc
movsl
push
push
mov
sub
ljmp
and
dec
adc
jne
add
push
popf
gs
pop
mov
jl
jb
push
hlt
mov
outsb
add
mov
and
jp
test
xor
in
gs
js
ret
insl
ds
aam
push
sub
testl
push
mov
outsl
adc
push
rol
pop
fs
jge
xorb
or
in
fcmovne
cmpsb
in
shl
out
insb
xlat
push
mov
jne
ja
xchg
andnps
mov
jg
test
andl
jne
mov
push
cmp
pop
cmp
icebp
negb
mov
and
movsb
mov
push
popf
push
or
dec
add
mov
daa
shll
push
mov
out
jno
sub
mov
shlb
ret
push
and
popf
xor
cmpl
dec
call
loop
lods
lret
scas
shrb
mov
ss
mov
mov
in
xor
test
jecxz
sub
dec
xchg
and
xor
cmp
test
out
mov
push
jecxz
sub
ljmp
dec
das
adcb
mov
mov
lock
xchg
and
xor
pop
ret
pop
out
pop
add
aam
movl
dec
xchg
inc
lods
push
inc
loope
or
mov
or
cwtl
rolb
mov
aas
and
jbe
mov
movsb
icebp
nop
add
jmp
bound
inc
loope
popf
xor
enter
fistl
aad
cwtl
out
movsl
cmp
jle
xor
mov
test
pop
sub
and
fsin
adc
loop
sbb
les
icebp
jmp
xor
mov
push
or
sbb
push
ljmp
mov
lcall
jne
stos
and
ss
mov
xor
add
shrb
out
or
sub
inc
cltd
or
mov
xor
jp
nop
pop
sub
push
push
sbb
mov
mov
les
bound
in
test
xchg
and
rol
adc
loopne
add
cmpsl
aas
sbb
aam
jae
adc
mov
inc
push
and
ljmp
js
clc
in
push
call
mov
unpckhps
cs
lahf
or
call
pop
jmp
aam
mov
dec
cmc
std
test
and
jge
in
xor
mov
mov
mov
adc
stc
imul
je
lcall
mov
cmp
inc
popa
fbld
fstpt
fstl
mov
xorl
mov
repnz
addl
add
jb
rol
push
adc
push
stos
icebp
push
push
pushf
fs
in
je
clc
xchg
fildl
das
js
test
repnz
xor
and
call
movsb
sahf
jge
jno
std
jb
mov
adc
lods
inc
add
in
or
jo
jae
test
movsl
lea
fiadds
pop
js
xor
push
sbb
les
mov
mov
inc
shlb
inc
test
pop
scas
xor
jle
push
mov
jecxz
sub
dec
adc
addb
bound
mov
sub
out
inc
sub
and
outsb
testb
fs
bound
in
mov
or
jb
enter
sub
je
mov
jne
mov
add
dec
and
adc
inc
imul
mov
addr16
inc
and
ret
xchg
jle
add
into
ffree
int3
popa
roll
imul
sub
cltd
mov
insl
and
sub
sahf
add
mov
shll
sbb
out
add
xor
mov
and
xor
xorb
mov
movsb
lods
bound
sub
mov
dec
dec
scas
loope
imul
clc
lret
loope
adc
xor
je
je
test
dec
cwtl
ss
and
and
loope
jb
divl
mov
jge
fs
rorl
ffreep
mov
in
in
pop
lds
xor
ret
sub
lea
in
pop
inc
dec
adc
out
and
adc
jbe
loop
inc
mov
add
int3
xchg
popa
gs
mov
jmp
popa
test
data16
mov
outsl
add
cmp
lret
pop
ret
insl
into
xor
mov
and
push
jmp
push
cmp
pop
popf
out
outsb
repz
movsl
daa
sbb
arpl
and
mov
add
adc
xchg
or
dec
and
cmp
inc
cmp
js
pop
sub
js
push
mov
sub
out
or
test
lahf
xchg
pop
sahf
jae
and
jb
jl
test
in
insb
sbb
mov
xchg
adc
and
dec
cmpsl
negb
ja
fs
loope
repnz
inc
pop
mov
imul
sub
and
ret
and
cmc
xor
ss
mov
add
adc
xchg
jo
sbb
mov
rolb
mov
sarl
pop
out
mov
divl
call
dec
sbb
out
negb
xor
loopne
push
mov
sub
and
sbb
icebp
stos
popf
jbe
xor
cmc
mov
test
pop
mov
popf
mov
mov
in
fs
inc
addl
xor
mov
sub
in
test
and
lds
inc
lcall
lahf
sbb
xchg
sub
repnz
lds
and
nop
sub
subb
cld
iret
add
inc
push
dec
fiaddl
push
test
mov
inc
and
loop
mov
fildl
xor
test
sub
adcl
inc
push
pop
rcll
cmp
insl
pop
sub
or
xor
mov
sbb
sub
rcll
mov
aad
pop
mov
xor
push
mov
adc
leave
mov
imul
mov
inc
mov
pmullw
or
jecxz
aam
mov
adc
imul
arpl
inc
xor
push
sbb
rcrb
jo
pop
movsb
mov
imul
adc
mov
xor
and
xchg
and
xor
shlb
inc
adc
aad
lea
xor
insb
rclb
dec
jns
lods
mov
mov
in
je
dec
aaa
jo
mov
lods
pop
popa
fbld
and
jle
add
loopne
data16
xchg
inc
xchg
enter
push
dec
outsl
aam
push
loop
lods
sbb
out
mov
int3
mov
xchg
pop
repz
cmpsl
push
sub
call
adcl
movsb
and
push
lahf
cmp
repnz
add
xlat
add
cmp
bound
out
dec
xchg
add
and
movsb
xor
adc
dec
mov
repnz
xor
dec
jg
mov
dec
jo
xchg
and
and
int3
sbb
sti
pop
mov
pop
jne
sub
and
push
andl
dec
inc
mov
add
mov
or
dec
ja
xchg
mov
xorb
mov
mov
movsb
mov
sub
sbb
sbb
mov
adc
enter
and
shl
mov
arpl
lcall
lahf
sub
loope
lret
jg
mov
and
dec
pop
xor
mov
and
cmp
add
inc
shrb
test
movsl
and
in
rcrl
movsb
sub
dec
fldl
xor
adc
and
push
mov
sbb
movsb
jne
push
or
imul
add
or
mov
stos
pop
sub
loop
enter
scas
aam
or
inc
mov
or
daa
mov
or
xchg
dec
movb
and
pop
jne
std
lock
mov
jmp
and
push
inc
into
sub
mov
ss
and
fisubrs
cwtl
add
repnz
pop
sub
dec
jecxz
insl
mov
cmp
push
xchg
cmp
imul
inc
cmpsb
dec
and
icebp
inc
lods
mov
xchg
xchg
pop
iret
in
xor
inc
mov
je
inc
imul
push
shll
lret
jns
aad
rolb
push
jns
dec
mov
inc
sub
js
inc
mov
add
adc
outsb
pop
ficoml
sub
cwtl
mov
cwtl
mov
mov
jno
push
popa
xorb
loop
rclb
inc
inc
in
aaa
mov
mov
mov
jbe
lds
sub
test
add
test
jmp
loope
movsb
sub
mov
fisubs
test
in
cmp
and
divl
rorl
sub
fstps
imul
je
pop
sarb
out
add
pop
cmp
cmp
popf
fsubrs
jecxz
xor
inc
sub
push
nop
leave
ret
arpl
jg
jg
and
popf
shr
shrl
mov
loopne
insl
dec
push
and
sub
cltd
jg
popa
repz
push
std
push
in
sub
mov
jl
into
das
and
test
dec
int
add
xor
add
xchg
movsb
jae
and
stos
xchg
icebp
movsl
mov
js
cmp
fstl
pop
nop
sahf
jmp
rolb
sub
test
or
and
popf
sub
ja
jae
xchg
les
jge
jmp
cmp
cmpsb
push
lahf
and
push
movsb
mov
ret
addb
or
mov
push
jl
adc
jp
mov
out
out
iret
mov
and
in
jo
jbe
in
and
lahf
mov
inc
cmpb
jg
adc
call
add
inc
mov
pop
push
outsb
add
push
orb
and
cmpsb
push
nop
andb
jae
cmp
jo
mov
jl
shlb
adc
xor
and
jmp
aaa
pop
jmp
lds
test
test
cmp
sub
push
mov
push
xchg
into
pop
mov
push
mov
and
imull
mov
mov
adc
cld
inc
mov
mov
mov
xchg
repnz
mov
mov
insl
lea
sbb
push
mov
in
pop
inc
cmpsl
dec
or
add
dec
or
jns
dec
outsl
lret
dec
shll
std
repz
mov
adc
sub
fnstenv
inc
hlt
pushf
int
ds
popa
inc
jge
mov
adc
xchg
imull
pop
outsb
dec
imul
cs
test
aas
mov
cmpsl
popf
or
sub
je
add
jmp
test
in
sahf
rcr
pop
inc
jb
mov
sahf
mov
dec
pop
adc
nop
test
out
mov
or
popa
mov
repnz
add
sub
mov
leave
dec
in
in
adc
and
and
push
movsb
daa
clc
and
xchg
pushf
daa
jns
ds
outsl
xchg
and
data16
iret
mov
imul
mov
cmp
jmp
cmp
pop
ljmp
add
and
lcall
movsb
test
mov
dec
and
rcr
daa
xchg
mov
cmpsb
xchg
or
scas
add
aam
aam
jbe
loope
mov
movsb
ljmp
lock
fcoms
jge
and
mov
pop
jb
outsl
js
cmpl
je
xchg
jge
push
xorl
fiadds
xchg
es
mov
test
xor
ficoml
inc
pop
push
lahf
or
loopne
ret
xor
incb
xor
pop
inc
arpl
fldenv
jns
je
stos
mov
movsb
ret
insl
cmp
add
pop
cli
pop
mov
in
mov
adc
mov
sub
out
cmc
adc
pop
cltd
jae
xchg
lahf
cmp
or
cld
xor
inc
roll
ss
gs
loop
repnz
adc
pop
cwtl
mov
out
dec
xor
add
xor
sbb
in
pushf
fists
arpl
movsb
sbb
loop
mov
mov
insl
std
add
and
leave
adc
cmpsl
neg
mov
and
in
adc
js
mov
fsubrl
in
ja
jne
mov
and
rorb
inc
inc
in
inc
jge
pop
mov
popa
adc
mov
repz
shl
iret
xorl
or
out
inc
loope
in
and
shl
int3
sub
add
sbb
sub
outsl
clc
roll
andl
mov
test
and
fucomi
mov
mov
mov
jle
mov
sub
and
ds
mov
arpl
fs
mov
rolb
loop
test
fldt
icebp
loopne
lods
cmpb
insb
add
and
mov
sub
xor
js
std
lahf
sub
inc
loope
jbe
xchg
mov
xor
call
sub
lret
jo
xchg
popf
movsb
push
mov
inc
and
rol
mov
dec
push
xchg
and
jle
push
adc
pop
sarb
in
add
jne
jl
call
sbb
rcll
add
cltd
out
and
sbb
pop
jmp
inc
push
add
xchg
call
push
mov
iret
dec
hlt
les
insl
and
ja
shll
mov
mov
mov
gs
pop
sbb
lods
mov
xor
mov
dec
add
lea
int3
testb
scas
xchg
inc
dec
pop
mov
mov
sub
push
aas
push
fbld
xchg
xlat
jnp
les
pushf
sub
mov
add
sarl
arpl
inc
push
data16
push
mov
lds
pop
into
and
or
push
inc
inc
sub
mov
mov
push
cmpl
add
cmp
cmc
test
out
insl
js
fists
andl
pop
push
jecxz
cld
aaa
xchg
sbb
pop
cmpsb
negb
xor
arpl
jp
xchg
pop
jo
and
pop
sbb
push
jne
jecxz
mov
mov
adc
push
fnstsw
loop
loopne
or
jne
xchg
in
xchg
enter
push
lahf
imul
adc
mov
and
movsl
clc
cmp
xchg
mov
in
xor
lods
addr16
loope
mov
adc
lods
mov
adc
loop
lds
push
mov
and
inc
jg
shrb
and
or
les
cmc
leave
sbb
push
pusha
out
andl
pop
adc
fucomip
pop
fnstsw
insl
pop
mov
dec
mov
in
sub
sub
adcl
mov
push
mov
push
mov
mull
out
push
and
and
jge
pusha
loopne
movsb
imul
shrl
ficoms
fwait
mov
and
cltd
call
xchg
xor
or
mov
xchg
push
gs
repz
fsubs
jle
add
sbb
add
jno
mov
and
popf
fwait
cmpsb
jp
sub
mov
add
jecxz
ss
xchg
fs
push
jae
add
dec
push
into
push
jl
mov
dec
inc
mov
mov
dec
and
ds
mov
or
xor
push
add
jmp
mov
icebp
rcrb
and
mov
and
adc
mov
psubusw
add
rolb
cmp
mov
and
filds
js
xchg
mov
and
xchg
xor
daa
aam
mov
add
addr16
adcb
xor
fiadds
lds
and
pop
nop
loop
and
jo
inc
in
les
mov
loop
idivl
popa
outsl
rcll
movsb
popf
jbe
dec
cmp
cmpsb
mov
and
cwtl
loopne
mov
xchg
jnp
mov
cmp
rolb
xchg
xchg
sbb
cmpb
cmpsl
addr16
stos
mov
sub
lods
or
cmp
sub
inc
dec
add
stos
inc
xor
pop
iret
and
clc
fs
imull
and
xchg
les
test
je
test
and
dec
pop
ret
sub
addr16
push
inc
or
add
jns
lahf
cmpsl
add
fstpl
clc
jns
fstps
or
test
jnp
jg
add
jnp
aad
jl
repnz
je
push
shr
mov
decb
outsl
and
mov
dec
mov
xor
jno
loopne
loope
adcl
xor
jecxz
or
sbb
mov
add
mov
iret
sub
in
mov
and
xchg
jg
andb
adc
push
sarl
loopne
inc
xor
pop
xchg
pop
dec
rorl
andb
or
fsubrs
push
outsb
push
fs
out
inc
jb
push
in
xor
movsl
mov
cld
call
fcoml
or
and
push
xor
pop
add
xchg
xchg
cli
pop
jl
mov
idivl
sub
push
mov
je
adc
add
or
mov
insl
scas
cmp
xor
les
inc
sub
shll
imul
shlb
insb
out
hlt
scas
jl
inc
loope
in
inc
lds
adc
xor
shlb
mov
or
mov
popf
adc
add
clc
xor
lcall
mov
sbb
adc
movl
ljmp
lods
push
rcl
adc
and
les
test
push
mov
data16
mov
js
pop
out
mov
push
andb
xchg
xchg
jge
mov
bound
imul
aas
mov
andb
fldl
outsb
outsb
or
int3
cmp
sub
or
sbb
addr16
and
call
pop
mov
inc
inc
pop
push
inc
add
jge
jnp
int
mov
sbb
pop
and
sahf
idivl
lods
mov
cltd
jnp
push
repz
dec
jecxz
fucom
arpl
mov
and
icebp
dec
adcb
shrl
mov
enter
push
pop
jo
inc
out
inc
mov
sbb
jg
xchg
jns
movsb
mov
inc
inc
shl
push
cmp
hlt
into
dec
notl
js
loope
in
xchg
adc
jl
bound
dec
sub
xor
xchg
add
xor
mov
adc
mov
or
inc
jbe
sahf
in
or
fisttpl
js
and
or
mov
cmp
loope
icebp
mov
aam
xor
stos
hlt
cmp
adc
loope
or
push
imul
or
or
push
je
adc
add
insl
xor
jae
xchg
adc
push
xchg
and
jge
mov
ret
bound
push
call
icebp
mov
mov
and
out
call
mov
push
dec
mov
std
mov
les
fdivp
xchg
hlt
frstor
loop
mov
mov
jmp
aam
mov
lock
sub
sub
and
mov
mov
sti
sahf
dec
shll
xchg
ret
test
push
add
xchg
or
aam
cmp
lahf
pop
and
cmp
xchg
xor
mov
mov
repz
leave
jg
adc
movsb
push
shll
cmpl
mov
test
add
subl
repnz
mov
hlt
int3
into
mov
inc
xchg
jg
enter
outsb
adc
arpl
and
stos
xchg
jb
and
movb
clc
jae
push
jge
xchg
sbbb
lcall
cltd
push
pop
add
das
mov
scas
out
mov
fs
jns
push
push
push
sub
jo
and
xor
fcomp
pop
push
inc
call
xor
sbb
addl
dec
mov
xchg
test
pop
orb
or
rsm
or
and
inc
in
push
and
pop
imul
iret
out
mov
test
xchg
das
jmp
je,pt
fisttps
add
cltd
jb
xchg
bound
inc
add
push
push
mov
sub
and
cld
jmp
adc
jecxz
cmpb
xor
lret
leave
mov
inc
mul
pop
popa
loop
popa
movsl
stc
js
mov
or
mov
sub
lods
mov
mov
inc
push
dec
data16
les
test
cmp
adc
push
lods
adc
xor
ret
std
stc
lods
imul
sub
sbb
adc
and
fsubrl
mov
and
add
lahf
loope
leave
fmull
cmc
fnstcw
in
mov
out
andb
push
add
addr16
xchg
nop
push
dec
xor
jmp
sbb
inc
int3
aam
lds
add
nop
inc
fdiv
add
pop
gs
ret
je
nop
and
fisttpl
inc
push
movsl
icebp
rcrl
and
bound
cmp
pop
sbb
add
jmp
xor
lahf
fldt
adc
sub
mov
mov
jne
and
add
fstps
shll
fnsave
push
mov
pop
cmp
add
inc
leave
nop
mov
push
jnp
insl
pop
pop
sub
adc
shlb
inc
mov
ret
outsl
mov
rcrl
shr
push
lahf
push
add
and
push
xchg
inc
mov
mov
mov
gs
test
cmp
pushl
roll
push
adc
ds
jns
fdivs
arpl
aam
xchg
mov
out
mov
movsb
loope
pop
mov
hlt
push
jb
pop
add
push
js
push
loop
imul
shlb
lds
lahf
rol
loop
adcl
xor
inc
mov
mov
faddl
dec
pop
mov
movsb
cmpsl
mov
enter
sub
xchg
stos
repz
cld
les
insl
cmpsb
add
inc
push
movsl
add
and
out
jmp
mov
test
leave
xchg
addb
shll
out
mov
sub
mov
addl
lock
aaa
jno
imul
inc
pop
loop
and
out
inc
popf
test
sub
xlat
dec
loope
aas
loope
and
test
ret
loope
fmulp
mov
test
test
mov
inc
ds
into
sbb
mov
cmp
and
cwtl
pushf
ds
and
inc
push
mov
pop
subb
adcl
stc
mov
in
inc
sbb
mov
jp
insl
mov
test
adc
fiaddl
test
sbb
shl
sub
js
or
jecxz
pop
lret
dec
xor
and
js
sti
mov
pop
shrl
and
insl
jbe
loop
jo
arpl
fldt
push
jns
repnz
cltd
xor
sub
in
xor
xorl
mov
gs
insl
je
ffreep
and
out
sbb
xor
inc
aam
lods
in
movsb
jg
mov
ds
mov
mov
inc
repnz
push
inc
push
jb
repz
inc
adc
mov
loop
pop
pop
cmp
hlt
push
adc
mov
mov
outsl
cld
add
inc
nop
roll
cmp
add
pop
push
imul
jmp
test
xchg
mov
test
dec
cmpsb
mulb
loope
hlt
andl
mov
lds
mov
and
push
incb
les
sub
jb
call
sbb
xor
and
loopne
rol
test
ss
add
scas
inc
rol
sbb
mov
dec
shlb
inc
mov
imul
roll
lods
add
sub
jb
inc
sbb
dec
and
jnp
adc
loop
sub
jo
sub
pop
mov
popa
mov
mov
shlb
stc
pop
lods
lcall
inc
stos
call
adc
xor
push
mov
shrl
insl
pop
lock
pop
sbb
shlb
push
mov
imul
insl
inc
mov
mov
rol
popa
gs
jle
out
jb
add
xor
adc
loope
popa
push
push
repz
mov
stos
jb
mov
out
scas
movsb
int3
adc
data16
lret
filds
fisttpl
sbb
adc
mov
xor
and
ret
mov
lahf
and
out
cmp
adc
insl
adc
push
sahf
ss
dec
in
pop
js
les
orl
and
ror
jae
rcll
mov
and
bound
cmp
sub
pop
and
mov
imul
fnsave
pop
jo
and
mov
xor
notl
mov
jne
sbb
aas
cmp
sub
imul
jmp
mov
push
call
pop
push
pop
xor
mov
popf
sahf
and
sbb
inc
leave
cli
push
xchg
scas
xor
jne
test
sub
or
push
je
xor
adc
mov
push
je
addr16
enter
dec
inc
add
movsb
inc
les
xor
add
sub
push
sbb
mov
and
mov
dec
xchg
mov
ret
repnz
lock
xchg
sbb
fwait
inc
pushf
ss
pushf
inc
sub
in
push
push
jbe
loope
jo
push
mov
and
aaa
push
insl
mov
std
mov
dec
dec
and
popl
mov
push
rcrb
decb
insl
in
add
xorl
inc
bnd
inc
xorl
cli
enter
arpl
sbb
inc
imul
pop
popf
pop
adc
addr16
mov
jo
mov
adc
js
out
ret
sub
pop
push
jg
mov
xor
popl
cmp
daa
adcl
aaa
jne
adc
and
sub
sub
cmpsb
popf
fiadds
sbb
and
lds
or
push
fcomp
add
pop
and
out
sub
ror
sbb
xchg
adc
sub
cmp
les
sub
test
adc
lret
mov
ret
clc
orl
push
inc
and
inc
cmpsl
cmp
lock
xor
sub
cld
xor
jle
sbb
int3
dec
or
dec
mov
and
fbld
and
pop
xchg
subb
sub
pop
mov
in
in
xor
jne
pop
enter
mov
mov
loop
fisubs
daa
mov
shlb
jnp
cwtl
mov
mov
fistpll
mov
inc
lock
fcompl
cmpl
je
mov
mov
movsb
inc
loop
in
or
stos
xor
pushf
jb
imul
xor
pop
inc
and
sbb
add
data16
shlb
xchg
lock
icebp
pop
jb
and
jne
lds
mov
push
inc
mov
andb
dec
shlb
cmpb
out
sti
pop
sbb
cmpsb
outsl
movsb
jo
inc
cli
aas
outsb
adc
sub
mov
jo
shlb
jle
int
mov
je
add
pop
cmpsl
push
scas
in
loope
adc
sbb
pop
jge
pop
mov
sub
and
jl
or
push
aam
inc
push
in
pop
imul
and
out
cmpsl
mov
out
push
mov
test
mov
rolb
inc
and
lahf
jnp
dec
adc
push
rcl
arpl
popl
addr16
sub
ret
insb
xorl
dec
fistl
xor
dec
mov
les
xor
and
pop
das
cmc
iret
lcall
insl
nop
imul
enter
adc
xor
pushf
jl
and
cld
mov
adc
sbb
js
adc
shrl
xor
arpl
andb
jecxz
jmp
push
push
push
dec
out
shl
adc
jp
xchg
mov
inc
sbb
add
jne
je
push
in
gs
and
and
xchg
shrb
movsb
dec
push
or
jge
jnp
mov
or
mov
mov
xacquire
je
clc
sub
mov
pop
daa
test
mov
addl
cmp
pushf
inc
lahf
inc
and
pop
stc
in
test
andb
xor
in
jno
fstpl
push
sub
lea
pop
and
out
inc
and
fstl
and
bound
stos
das
sbb
xchg
nop
iret
mov
pop
inc
jg
sar
mov
push
and
mov
out
and
or
add
pop
cmp
or
pop
adc
and
adc
jge
add
jecxz
jp
in
cmpsb
or
push
xchg
cld
sub
xchg
jecxz
xchg
inc
xchg
jbe
adc
xchg
xchg
mov
stos
ret
mov
jae
jne
adc
push
cltd
push
or
xchg
insb
sub
pop
je
add
sahf
xchg
jnp
imul
imul
jo
lods
xor
sub
jno
scas
sub
inc
filds
add
push
fstl
jns
xchg
adc
sbb
mov
push
jno
mov
arpl
and
or
mov
mov
movsb
mov
popa
roll
int3
popf
mov
xor
sarb
lods
lods
add
and
mov
incb
aam
cltd
out
sbb
inc
jno
add
xor
fcmovne
stos
adc
js
add
mov
hlt
and
jg
lods
subl
inc
jns
push
jl
mov
aam
mov
dec
outsb
add
adc
fabs
mov
dec
int3
mov
xor
jecxz
mov
mov
xchg
and
test
nop
popf
and
out
inc
dec
daa
rolb
nop
adc
enter
repz
les
negl
lods
push
pop
sub
js
orl
xchg
sub
push
pop
fs
stc
test
imul
bound
je
mov
xor
adc
cmp
xor
push
ret
adc
dec
arpl
inc
int3
shll
mov
jge
xor
cwtl
sti
test
jbe
adc
push
mov
mov
push
and
nop
insl
pusha
popf
add
pop
jge
pop
mov
jns
std
pop
add
jbe
mov
jne
and
mov
jp
cmp
mov
mov
movsb
jle
lahf
std
and
inc
push
or
sbb
fcoml
addr16
adcb
sub
lods
or
pop
cltd
sub
ljmp
sub
xchg
scas
hlt
stos
pop
aas
loope
and
push
outsl
inc
fnsave
mov
jo
test
jmp
push
test
xor
out
sbb
xchg
int3
loope
rolb
out
cli
ret
dec
and
aas
mov
jle
push
sub
adc
jae
sbb
jmp
and
popf
mov
lods
and
fcomps
movsb
jno
push
rorb
dec
cmp
mov
pop
dec
test
and
loope
les
loop
and
inc
in
int3
insl
xchg
or
shlb
mov
xor
jge
std
scas
mov
loop
sbb
cli
mov
cltd
push
pop
mov
push
mov
insl
ss
les
movb
aaa
out
in
jne
fldenv
insb
add
push
mov
push
in
sbb
pusha
rolb
inc
orl
mov
enter
fisubrl
test
testb
add
lea
scas
push
sub
shlb
pop
test
xchg
ret
loop
xor
jge
xor
sub
adc
pop
sbb
cmp
sbb
lods
dec
jne
frstor
adc
iret
ret
push
mov
cmp
and
pop
mov
imul
mov
cmp
pop
xor
pop
jge
popf
mov
jb
loop
cwtl
dec
jl
and
and
test
and
mov
push
fsubrs
jb
andb
shlb
mov
enter
dec
arpl
rorb
xorl
icebp
stc
test
pop
and
adc
pop
lret
scas
rcrl
sub
mov
xchg
inc
repnz
loope
popa
xor
ds
xor
and
stc
push
fucomi
mov
jo
cmpsb
dec
fwait
cmp
sbb
jb
inc
dec
or
xor
xor
popf
popa
fldt
loope
add
inc
and
mov
and
mov
loop
icebp
sbb
inc
mov
jmp
xchg
push
xchg
and
cmpsb
push
or
jbe
out
stos
lock
inc
les
pushl
or
or
xchg
inc
xchg
cwtl
push
aam
imul
and
pop
cmp
xor
push
xchg
inc
dec
roll
push
repnz
idivb
arpl
shlb
and
out
dec
mov
jns
push
repnz
jnp
call
jae
add
inc
bound
dec
or
loop
xlat
push
xchg
sub
ljmp
scas
pop
cmp
and
arpl
fiadds
push
xchg
adc
bound
and
sarl
sarb
movsb
or
repz
and
jmp
mov
sarb
and
in
sub
mov
jl
pop
and
insl
cli
mov
cmp
aad
inc
ss
movsl
cmp
sub
ljmp
push
sub
bound
jecxz
scas
loope
mov
les
movsl
insl
lret
inc
cmpl
les
mov
mov
pop
jns
popf
test
repz
dec
sti
jbe
nop
adc
fwait
push
inc
in
not
in
add
imul
mov
insl
into
fstl
orb
push
cmp
fisttps
pusha
rolb
mov
or
les
and
js
add
sub
jne
arpl
test
mov
sbb
cmp
push
push
sarb
fstpt
sbb
pop
mov
popf
in
and
push
sub
shll
xor
inc
pusha
jl
icebp
out
rcr
shll
adc
sub
fstps
pop
pop
hlt
fs
add
mov
add
push
pop
mov
popf
sub
outsb
xor
testb
out
gs
sbb
mov
push
adc
aad
mov
cmpsb
popf
imul
xchg
push
cwtl
inc
mov
xchg
pop
dec
xlat
lods
mov
in
mov
call
push
notb
jb
sub
sbb
pop
in
int
repnz
fdivrl
cs
mov
inc
push
cli
shll
aam
dec
add
xor
shll
mov
jecxz
mov
popf
xor
aad
jb
pop
enter
sarb
xorb
mov
addb
inc
mov
sbb
jo
add
xchg
pop
fcompl
sub
shl
sub
cli
sub
pop
mov
call
push
fsubl
scas
mov
xor
notb
roll
or
xchg
inc
nop
jno
or
ljmp
outsb
xor
inc
or
mov
and
push
dec
xchg
xchg
jno
sub
shl
and
lods
jl
xlat
adc
test
popa
loopne
out
sub
mov
xchg
shl
mov
aam
insl
jmp
loope
sub
cmp
jne
rcll
xor
mov
into
call
and
xor
and
cmp
dec
fwait
dec
and
xchg
fadds
rcl
psraw
mulb
xor
bound
cmp
mov
xchg
out
add
cmp
shlb
addr16
and
arpl
pop
sbb
je
lods
jg
loop
inc
imul
and
mov
fbld
jb
les
iret
int3
inc
xchg
and
jp
inc
mov
dec
fidivs
lods
loope
in
sbb
in
aas
mov
in
in
test
icebp
xor
xchg
cmpsb
xor
pop
cmp
xchg
shll
sbb
sub
lods
mov
fnsave
sbb
and
mov
cltd
mov
pop
pop
loope
and
xor
dec
lahf
push
sbb
add
lret
dec
and
outsb
lcall
loop
out
xor
ja
imul
popf
scas
push
lds
or
movsl
jecxz
jmp
inc
shll
push
pop
sub
repnz
sub
adc
jecxz
mov
dec
push
into
pop
and
cmpsl
test
mov
inc
loop
stos
ja
add
mov
sbb
in
push
mov
addl
iret
aam
imul
jge
mov
test
leave
add
adc
xor
mov
jp
mov
scas
sahf
pop
add
and
cmp
andl
adc
dec
cmp
bound
and
sbb
movsb
loop
and
cli
inc
pop
ss
jns
rclb
sbb
in
test
lcall
mov
nop
cmpsb
dec
pop
mov
daa
aaa
dec
adc
movsb
mov
inc
dec
jo
add
std
in
mov
insl
push
out
sub
xor
and
mov
imul
mov
push
jno
sbbl
mov
inc
xor
mov
rcrl
lret
jb
xor
mov
loope
adc
inc
out
fnstenv
je
sahf
and
iret
testl
loop
cmpb
pop
fildl
add
sahf
cmp
add
push
xor
push
add
jno
test
sbb
and
mov
add
fsubrl
shll
jle
mov
cltd
push
cmp
loop
adc
jge
out
adc
cmp
push
inc
movsl
lds
mov
sbb
loopne
enter
inc
add
inc
ja
shll
orps
xchg
sbb
jbe
sarw
lret
jb
xor
in
jecxz
inc
rorb
xor
push
popf
jecxz
lods
loop
inc
andl
daa
inc
jmp
ret
sub
lods
push
xchg
cmpsb
dec
mov
scas
andl
xor
enter
dec
mov
cmp
pop
or
movsb
mov
jne
das
jg
and
sahf
rorb
mov
and
loopne
mov
dec
pop
cld
sbb
clc
mov
sarl
ja
add
daa
stos
inc
subl
push
out
and
and
adc
cli
adc
and
scas
mov
loope
xchg
dec
ljmp
mov
jmp
xchg
les
sbb
push
sti
xor
mov
test
shll
push
repz
ret
xor
and
imul
rcrb
loop
mov
rcll
leave
shll
iret
jl
adc
ret
mov
xchg
insl
clc
xchg
je
insb
cmovbe
and
das
cmpsb
cs
jno
cltd
rol
cmpsl
xor
in
push
dec
xchg
roll
rclb
xchg
sub
xor
out
adc
test
in
lahf
inc
js
and
mull
mov
sbb
mov
loopne
adc
out
dec
mov
add
aas
and
pop
push
je
shll
mov
mov
xor
imul
jge
ret
and
add
pop
subl
sub
test
sbb
and
jmp
cld
mov
enter
lock
sub
push
push
xor
arpl
adc
iret
jl
jbe
arpl
sbb
out
cmp
shll
lock
mov
adc
sub
and
mov
divb
and
add
adc
rol
movsb
clc
orb
xchg
dec
loopne
adc
dec
test
js
jb
in
adc
mov
mov
push
and
mov
lods
and
mov
mov
in
and
jecxz
inc
loope
pop
bound
aam
inc
inc
fst
push
test
out
les
mov
stos
lds
push
xor
mov
dec
or
push
push
mov
gs
pop
mov
mov
add
dec
js
jo
pop
xchg
loop
shll
out
leave
sbb
ret
sub
pusha
dec
mov
stos
or
mov
add
sub
mov
ret
mov
js
pop
enter
in
and
lods
nop
fsubp
jb
xchg
mov
sbb
and
sbb
dec
inc
push
lret
rclb
mov
jl
mov
jns
cmp
outsl
xor
repnz
sub
hlt
sahf
xchg
inc
pop
in
adc
adc
js
xor
aas
movsl
mov
hlt
icebp
insb
cmp
mov
fisttps
mov
call
fucomp
pushw
les
mov
mov
addl
outsl
stc
sbb
sbb
adc
popa
jle
out
sti
shl
test
dec
jae
push
dec
or
mov
mov
add
or
cmp
mov
enter
leave
lock
ja
shld
mov
push
mov
inc
add
mov
sub
sub
xorl
and
adc
rol
ret
and
sbb
pop
mul
ss
and
pushf
icebp
jns
lock
mov
xor
popf
outsb
sbbb
fisttpll
inc
mov
cmpsb
and
and
push
xor
adc
outsl
fistps
lock
scas
xchg
test
and
scas
xchg
mov
call
popa
in
jo
jbe
pop
dec
dec
xor
sbb
aam
inc
sahf
in
jge
mov
and
pop
scas
outsb
push
ss
and
test
mov
mov
movsb
std
lea
stos
adc
sub
xchg
lahf
loop
add
xor
lods
hlt
cmp
sub
and
mov
mov
jae
or
test
push
xchg
jnp
roll
mov
movsb
insl
repz
cmp
xchg
testb
cmpsb
jmp
mov
in
fisubrs
into
int3
sbb
sbb
adc
out
out
int
push
jl
mov
popa
xchg
insl
xor
rcrl
dec
icebp
pop
int3
in
movsb
push
loope
push
in
les
out
into
fsubl
and
sbbb
xor
imull
pop
shrb
push
push
jb
mov
jno
and
jb
xor
out
incb
rorb
cmp
xor
inc
jno
pop
xor
and
sub
shrb
push
mov
lahf
inc
shll
incl
dec
xor
add
sbb
mov
imulb
lods
imul
aaa
jl
adc
and
mov
ret
xor
rcrb
insl
loope
mov
pop
test
xorb
adc
scas
mov
fstp
aad
fsubr
leave
mov
cmp
in
pop
mov
mov
outsl
repnz
push
jne
or
mov
or
gs
cld
int3
adcb
out
int
or
adc
adc
push
cmpsb
mov
jo
and
call
pusha
loope
in
sarl
jnp
lock
sbb
or
sahf
mov
lea
lahf
mov
xchg
mov
in
sub
mov
jne
jnp
push
sub
cltd
pop
xor
call
xlat
cmp
mov
repnz
js
inc
xchg
stc
dec
mov
or
and
iret
inc
sub
pop
outsl
arpl
sbb
jne
push
inc
mov
mov
pusha
aam
je
loop
in
mov
jnp
stos
push
add
leave
jae
push
lods
in
loop
into
push
inc
lcall
and
in
call
sti
mov
movsb
xor
mov
adc
pushf
pop
in
pop
icebp
mov
mov
aad
out
cld
push
mov
mov
inc
out
dec
aad
loop
mov
out
inc
and
push
jo
cs
jne
cs
and
dec
push
cs
inc
test
je
push
inc
adc
shll
mov
mov
adc
xor
cli
outsb
push
add
and
popf
jne
rcll
psrad
outsl
enter
xchg
xor
lahf
or
xor
push
enter
mov
ret
dec
and
xor
mov
aaa
out
mov
lret
adc
sub
or
dec
js
ret
aam
mov
pop
xlat
shlb
or
mov
pop
and
in
aas
mov
pop
push
in
insl
xor
and
and
sahf
das
rolb
and
or
add
insl
xchg
fs
lds
daa
and
jae
adc
lret
repnz
sarb
inc
fnsave
subb
mov
jns
xchg
push
scas
jb
xor
in
arpl
add
xor
dec
xchg
cwtl
test
out
jbe
dec
in
ror
mov
pop
push
xor
outsl
sbb
imul
mov
dec
repnz
fs
mov
in
inc
jg
fstpl
mov
and
rol
and
push
mov
sbb
test
push
fsubl
cli
loop
jno
xchg
nop
ret
and
inc
jo
shll
neg
out
shrl
cmp
movsb
popf
popf
xor
mov
fisttpl
jnp
aam
sub
and
sub
mov
jb
in
lods
adcl
faddl
mov
test
leave
adc
mov
in
or
inc
nop
leave
push
jo
mov
incl
shlb
paddq
inc
test
mov
pop
insl
cmp
andb
imul
sub
in
loop
and
cli
jae
movsl
cmp
les
shll
aam
and
xor
test
popa
sub
je
jle
rcll
sub
or
fucom
adc
jge
sbb
push
xchg
xor
outsb
fsubr
shrb
adc
leave
push
add
adc
mov
arpl
addl
divl
xlat
arpl
loop
out
xchg
jl
rcrb
pop
jnp
jl
add
roll
imul
mov
mov
bound
mov
testl
loope
or
jae
outsl
pop
and
push
add
pop
add
or
add
jae
sbbl
or
outsb
daa
dec
push
xchg
push
push
mov
adc
test
hlt
rol
ret
xchg
push
mov
daa
mov
aam
and
mov
inc
push
mov
loope
pop
push
mov
xor
jecxz
and
xor
loop
mov
or
dec
das
inc
test
add
cmp
cmp
cwtl
lods
roll
lahf
es
mov
jno
push
jno
mov
sbb
loope
bound
mov
and
repz
mov
popa
insb
in
inc
cs
and
sub
outsl
dec
lret
shll
shll
mov
inc
iret
pop
hlt
hlt
mov
dec
xor
movsb
les
loop
mov
or
add
les
adc
lret
in
and
out
fcompl
lahf
xor
clc
add
sub
push
aas
jo
out
and
fwait
bound
fisttpll
sahf
jae
aad
out
sahf
jae
mov
negb
shll
ds
dec
lret
dec
rorl
and
inc
rorl
xor
jle
inc
jmp
add
scas
xchg
dec
xchg
and
sub
inc
sbbb
inc
repnz
add
cltd
sbb
push
push
daa
sbb
pop
mov
pusha
xor
sbb
test
xchg
shll
faddl
icebp
inc
push
adc
test
sbb
mov
push
sbb
loope
xor
mov
or
xchg
das
in
jne
dec
aad
or
fldl
mov
and
enter
dec
adc
inc
ja
jnp
lahf
cmp
aas
add
cmpsl
enter
jnp
insl
sub
fcmovne
adc
push
and
mov
call
adc
loop
ss
mov
cwtl
jo
shlb
cli
aas
test
jp
shll
xor
pop
loope
ljmp
add
pop
or
adc
fs
pop
mov
aam
sti
jno
inc
push
in
movb
loope
add
int3
sahf
je
movsb
in
inc
pop
rolb
inc
sahf
sub
push
xor
sub
pop
sbb
push
mov
add
dec
in
and
rcrb
add
jo
ljmp
in
sbb
inc
popf
mov
jmp
sub
and
repnz
rclb
cmp
xchg
inc
mov
xor
pushw
mov
push
testb
mov
mov
test
add
popf
adc
fs
jno
xchg
cs
mov
movsb
test
adc
xor
lahf
addr16
mov
and
xchg
adc
xor
push
mov
add
sub
lods
test
je
and
in
xor
mov
add
cmp
rol
notb
in
jecxz
sub
xor
cmp
loopne
fisttps
and
clc
jns
fucomp
pushf
jp
mov
aad
mov
xor
inc
sbb
and
sub
sub
and
enter
push
mov
adc
in
pop
mov
pop
aam
add
scas
add
pop
shrb
xor
push
push
aad
mov
push
inc
mov
nop
lret
loope
inc
mov
fs
cmp
mov
push
test
mov
addr16
into
pop
xor
adc
pop
inc
sub
and
bound
in
push
pop
cmp
mov
ret
dec
das
adc
lahf
xchg
outsb
and
jg
pushl
out
or
or
mov
je
mov
inc
or
sbb
mov
mov
add
les
in
push
mov
mov
cmp
mov
test
mov
popf
addr16
mov
shll
adc
jo
push
jecxz
fldenv
popa
mov
popa
mov
imull
mov
sub
jnp
shlb
loope
push
dec
test
stc
jmp
dec
pop
cmp
pop
jecxz
popf
mov
das
dec
and
addb
adc
xchg
and
ret
and
add
xchg
clc
xor
andl
and
or
cmp
andb
dec
jge
push
in
sub
adcb
mov
push
fucomp
iret
xchg
adc
mov
xchg
aam
pop
cld
jbe
mov
mov
mov
mov
mov
iret
push
inc
dec
and
pop
xchg
and
jg
je
mov
inc
cwtl
andl
dec
sub
sbb
mov
stos
fucomip
insl
fstpt
lret
shll
adc
mov
call
pop
adc
das
aaa
pop
subl
andb
mov
outsl
jecxz
in
inc
add
loope
xor
adc
cs
inc
push
add
push
xchg
ret
sbb
push
xor
int3
or
pop
inc
sbb
pop
mov
dec
pop
xchg
sbb
push
and
adc
ret
hlt
jg
subl
push
fwait
jl
ret
rolb
inc
ret
mov
mov
inc
rcl
xchg
push
mov
sbb
xor
scas
stos
inc
hlt
push
and
xor
sbb
nop
add
xchg
fmull
jb
addb
lock
iret
dec
xchg
or
or
jns
imul
cmp
outsb
andb
loope
clc
cmp
xor
sarl
ljmp
repz
movsb
adc
xchg
ds
and
xchg
sbb
in
arpl
scas
push
call
mov
imul
inc
fstl
xor
sub
jne
bound
loope
xchg
int3
orl
insl
cli
icebp
movsb
loope
dec
jg
xchg
sub
dec
mov
pop
mov
mov
popf
or
cmpsb
in
ret
xchg
jno
xor
add
mov
xchg
xchg
dec
mov
mov
xor
adc
mov
les
xor
pop
subl
xchg
jae
sub
lods
movsb
andl
and
in
dec
xchg
adc
mov
mov
and
xlat
outsl
push
xchg
and
xchg
das
jne
sbb
shl
jno
sub
add
xchg
in
hlt
in
pop
ret
and
adc
jp
bound
js
aas
add
jae
roll
sbb
lahf
mov
mov
notb
sub
push
and
mov
repz
sbb
sar
adc
adc
and
fstpl
add
jg
push
sub
idivb
add
adc
rclb
pop
fsub
bound
xor
fs
adc
out
mov
and
jp
add
insl
sub
adc
mov
rcll
pusha
add
mov
mov
sub
sbb
xchg
popf
mov
adc
xor
push
add
push
add
jge
push
inc
sub
and
xchg
xor
add
cli
mov
mov
shl
xor
loope
and
jle
or
push
fcoms
bound
hlt
cld
xchg
dec
jg
adcl
dec
into
inc
js
and
ret
das
outsb
mov
dec
pop
add
arpl
inc
cmp
out
jmp
test
lds
fistl
cmp
aas
shrb
je
daa
arpl
dec
shlb
and
push
fwait
sarb
dec
and
aam
call
mov
adc
bound
repnz
std
xchg
mov
pusha
pop
add
frstor
in
add
inc
xor
inc
adc
xor
xor
stos
stos
ds
scas
test
or
inc
inc
ret
adc
adc
dec
rcl
ficomps
jns
jne
ljmp
jecxz
shll
clc
xchg
inc
mov
lahf
adc
mov
mov
inc
ret
popf
xor
push
aaa
lahf
lods
pop
and
addb
repnz
mov
adc
movsb
dec
mov
jae
and
push
stos
leave
test
jl
test
jmp
cltd
sbb
enter
xchg
add
bound
and
ja
clc
sbb
shrb
lahf
ret
out
and
pop
cmp
mov
and
inc
lds
dec
adc
mov
pop
mov
int3
pop
xchg
mov
cli
mov
fdivp
xor
sahf
mov
mov
sbb
insl
arpl
and
mov
scas
repnz
cmpb
xchg
lahf
jnp
sahf
mov
rcl
sbb
xor
pop
and
lret
fidivs
pop
cmc
add
xchg
or
fstl
out
and
jns
add
xor
xchg
or
rclb
enter
nop
lahf
mov
add
push
jg
jns
mov
daa
xchg
dec
iret
test
adc
stos
rclb
cmpsb
sub
xchg
addr16
aas
and
pop
jg
mov
and
std
jg
xor
into
cmpsb
fs
fstps
stc
ja
and
repz
mov
shlb
enter
loopne
lahf
jno
inc
or
pop
aas
dec
mov
sub
insl
repnz
outsl
mov
test
ds
stc
call
cs
das
divl
jl
in
add
adc
adc
push
in
xchg
enter
jnp
cli
aad
pop
mov
sub
and
ds
popf
iret
and
or
repz
dec
andb
push
cmp
sbb
xor
test
dec
push
jle
rcr
jnp
orb
mov
xchg
pop
pop
cltd
js
addr16
and
pop
shlb
test
stos
or
adc
imul
jl
push
sti
cmp
dec
xor
sub
fadd
outsl
xor
ljmp
mov
roll
cld
xchg
sub
enter
in
lock
lahf
mov
shlb
dec
lcall
lods
test
inc
incb
imul
test
and
cmp
daa
xchg
sub
jo
push
and
lock
aad
inc
cld
aam
sub
clc
outsb
fsubrp
inc
inc
push
pusha
mov
sti
subl
and
sub
cmp
inc
and
seta
mov
and
repnz
xchg
inc
and
loopne
arpl
push
dec
cs
imul
add
pop
out
stos
test
jecxz
sbb
jl
shll
pusha
outsl
aad
adcb
pop
cmpl
add
or
ret
addr16
js
das
push
lahf
xor
data16
push
pop
cmp
xor
pop
loopne
mov
fidivrs
int3
pop
and
sbb
mov
jecxz
inc
mov
cmp
cmc
out
xor
pop
jecxz
xor
fs
add
inc
out
cmpsb
lea
je
xchg
and
adc
and
into
push
adc
xor
sub
xor
lods
cmpl
xor
mov
xorl
xor
push
shll
xor
paddw
popa
inc
mov
adcl
mov
inc
mov
inc
and
cmc
lock
pop
jg
push
xchg
test
outsl
jae
mov
int
fs
cwtl
mov
shrl
cltd
xor
push
repnz
test
adc
jbe
mov
pop
sarl
mov
les
je
jge
mov
inc
pop
hlt
jg
outsl
mov
and
into
sbb
and
jg
ljmp
ret
shlb
xor
lea
les
daa
cmpsl
adc
push
rcll
aas
dec
mov
imul
test
sarb
or
sub
jnp
mov
sbb
cmp
dec
ljmp
mov
ret
mov
adc
lock
mov
adc
mov
lds
addr16
cmp
arpl
xor
cmp
aam
sarb
xor
jbe
fs
jmp
dec
lcall
mov
mov
add
mov
nop
fsubs
test
ss
and
rep
mov
push
in
aaa
movsb
push
cmpb
lahf
mulb
or
xor
ret
adcl
pusha
and
push
in
and
xor
xchg
xchg
jecxz
bound
imul
gs
and
xchg
insl
xorb
xor
pop
adc
adc
push
daa
inc
fbstp
enter
push
mov
hlt
jp
mov
inc
mov
lret
insb
addr16
and
mov
push
push
mov
dec
xchg
xor
out
jmp
sbb
push
xor
test
shll
jg
push
adc
mov
xor
inc
les
arpl
sahf
rol
and
mov
andb
adc
xor
insl
and
nop
mov
leave
arpl
and
jne
mov
mov
sarl
dec
adc
jl
adc
fldl
lods
xor
pop
mov
cmpsb
and
or
je
jecxz
xor
mull
mov
sarb
fwait
call
add
xchg
and
pop
inc
xchg
mov
dec
sub
repz
mov
cld
js
xchg
in
dec
jnp
das
aaa
jle
mov
insl
loopne
iret
loope
js
xor
loop
mov
das
dec
sbb
nop
and
and
sahf
and
test
in
xor
mov
mov
mov
jmp
xchg
jno
dec
add
mov
pop
cmpb
mov
pop
test
pop
in
mov
jnp
xor
or
pop
mov
mov
and
stos
jb
test
je
movsl
in
fcmovnb
sub
or
mov
int3
out
repz
push
push
and
orl
and
xor
ja
shrl
add
mov
mov
pop
jae
or
loope
pop
les
incl
add
sub
or
cmp
ds
inc
arpl
inc
and
ficomps
testb
sbb
add
sub
mov
inc
lcall
lods
into
mov
test
outsl
sub
fwait
subb
test
and
cmp
mov
and
cwtl
sub
mov
inc
and
pushf
ret
xor
and
lods
mov
jecxz
inc
cmp
and
je
sbb
jbe
movsl
nop
mov
lahf
cmp
sbb
hlt
pop
subl
xor
js
jmp
pop
les
push
or
std
sbb
sbb
xor
adc
sub
sbb
test
mov
cmp
in
shll
or
push
mov
or
ret
add
push
mov
mov
sti
xchg
popf
fbld
push
stos
shll
add
and
popa
jl
pop
outsb
mov
xor
pop
jmp
aaa
mov
pop
xchg
mov
ret
inc
adc
hlt
jae
mov
aaa
fisubrs
stos
popa
fwait
dec
popf
jo
repz
and
xchg
fwait
pop
jp
and
stos
insb
and
add
and
in
mov
xchg
aad
and
xor
loop
rcr
arpl
xchg
mov
les
test
or
shrl
mov
or
out
sub
dec
adc
std
xor
add
mov
js
in
cltd
test
mov
add
sub
dec
nop
inc
sub
aad
push
xor
inc
loop
jns
hlt
hlt
and
daa
jne
gs
enter
xor
cmp
xor
adcl
and
mov
movsb
test
and
sahf
daa
outsb
mov
movsl
ja
sbb
or
fiadds
cltd
or
push
inc
jl
rol
push
loope
jecxz
lds
and
sub
add
andl
pop
sbb
aam
stos
outsb
sahf
push
push
and
mov
ret
scas
sbb
lahf
cld
inc
data16
sub
pop
jl
and
cmpsb
adc
mov
dec
cwtl
arpl
int3
pop
cmp
test
repnz
frstor
sahf
shlb
scas
in
inc
stc
inc
bound
mov
dec
xor
jo
imul
xchg
je
sahf
scas
enter
or
int3
fs
das
dec
addr16
and
cwtl
jmp
loope
scas
pop
daa
mov
shlb
cmp
shll
mov
popf
scas
xor
addr16
xor
jno
push
sub
pushf
fnsave
and
movl
mov
mov
dec
adc
fisubrs
mov
scas
adc
push
fwait
shl
and
pop
lret
movsl
adc
adc
add
cmp
pop
pop
dec
setae
outsl
cmpsb
jne
mov
subb
sbbb
xlat
jo
mov
std
push
adc
xchg
adc
add
loope
sub
imulb
jmp
pop
add
sarb
and
jb
addb
test
pop
sub
adc
jns
fldenv
inc
push
push
fisttps
jno
mov
xor
les
idivl
leave
dec
les
xchg
stos
js
ret
push
sbbl
dec
data16
and
ret
mov
sub
mov
inc
and
jg
rcll
shl
decb
sbb
call
push
mov
mov
mov
out
shlb
xor
mov
xorb
inc
xor
cmp
fmull
or
add
movsl
mov
test
fisttpll
pop
inc
fimuls
push
je
sbb
sub
sub
push
int3
in
popa
or
scas
mov
adc
mov
lret
fbld
lcall
test
pop
je
mov
dec
mov
add
loopne
mov
jne
mov
xor
dec
xchg
test
or
loope
jge
sub
mov
inc
nop
and
cmp
movsb
fidivrs
jge
xchg
push
add
loopne
sbb
or
jne
sbb
jmp
xor
pop
cld
sahf
sti
sbb
jns
mov
sahf
rolb
xor
mov
adc
in
gs
add
xchg
sahf
shlb
push
cmp
aam
pusha
add
jae
gs
testl
test
cmpsb
in
mov
or
daa
mov
and
popa
icebp
pop
mov
aad
jg
add
std
lahf
xchg
ret
and
add
test
lock
mov
hlt
mov
mov
jp
dec
rorb
nop
push
loop
and
or
mov
clc
push
mov
xchg
out
push
and
loop
inc
iret
in
xor
adc
xor
out
jecxz
pop
cmp
je
mov
imul
shlb
stc
pop
loopne
inc
xchg
push
dec
lcall
mov
imul
aaa
sub
jmp
sbb
jne
ret
cwtl
push
mov
inc
lds
mov
mov
bound
sbb
and
and
outsl
fildl
sub
loope
cmpsb
mov
xchg
arpl
add
cmpl
mov
mov
addl
xor
jb
cmp
in
mov
adcb
pop
xchg
and
cmp
mov
mov
cmp
int3
dec
out
daa
and
in
inc
push
jecxz
inc
sub
test
xor
mov
jg,pn
les
sub
lea
dec
jl
and
test
mov
sub
sub
inc
adc
jns
or
xchg
jge
mov
cld
push
mov
lods
push
and
inc
sbb
test
mov
sub
xchg
pop
adc
ljmp
movsb
and
or
adc
and
daa
dec
add
cmp
dec
mov
push
inc
mov
fucomp
fs
mov
out
repnz
xchg
adc
aam
mov
add
and
mov
test
les
lahf
inc
loop
out
mov
data16
sub
and
push
xor
pop
xchg
mov
outsb
adc
mov
push
add
xchg
out
jp
push
xchg
and
or
ret
and
push
outsb
fdivrl
mov
jb
cmpsb
xor
jo
loop
nop
dec
push
decl
stos
loope
mov
and
popa
cli
shrb
mov
mov
inc
shl
fldt
or
adc
and
push
insl
dec
scas
xchg
push
mov
movsb
fildl
or
sbbl
mov
push
repz
loop
fldl
jg
and
mov
shlb
dec
rorl
and
push
and
fs
aas
push
pop
test
loop
bound
ret
pushf
xchg
push
js
and
imul
rcll
inc
pop
xchg
cmpb
sub
jecxz
push
out
sub
mov
mov
and
xorl
pop
fildll
fcmovnbe
icebp
pop
sahf
rcl
xor
iret
jecxz
ja
test
les
ret
jge
add
or
int3
aaa
dec
in
add
mov
aad
inc
jo
and
or
xor
mov
jb
and
sub
xor
adc
std
push
test
fs
test
jmp
cmp
and
push
sub
in
imul
mov
inc
sar
cwtl
mov
add
xor
cli
xor
pop
add
and
pop
xchg
movsb
test
fsubrl
pusha
or
in
push
xor
mov
sbb
mov
xchg
xor
jmp
xchg
mov
xchg
add
mov
mov
mov
movsl
ss
jae
das
pushf
scas
or
push
in
arpl
cmp
cmpsb
aas
jb
inc
bound
mov
das
or
mov
cli
jb
xor
adc
add
xchg
stc
bound
xor
arpl
inc
jmp
clc
push
arpl
sbb
shll
sbbl
cs
insl
and
ds
sub
imul
dec
mov
rcl
xchg
xchg
xor
rolb
or
ja
push
pop
outsl
add
repz
xor
jae
hlt
xchg
cltd
sub
adc
rcll
pushl
sarb
outsl
out
ret
popf
cmpsb
xchg
push
and
sahf
roll
xchg
cmp
packsswb
insb
and
fwait
push
sbbb
mov
xor
push
xchg
ret
repz
inc
inc
inc
push
add
xor
cmp
shlb
cmp
test
mov
in
int3
sti
andl
mov
push
loop
ja
jo
adc
sbb
jns
inc
test
cld
pop
in
loope
dec
and
iret
movsl
lods
xchg
shr
mov
pop
push
ss
and
ret
out
in
stos
shll
stos
cmp
andl
sub
repnz
cmpsb
sub
ret
dec
push
xor
pushf
rcrb
xor
sub
lea
ret
sti
cmpsb
in
and
les
cld
adcl
je
cmpsl
jo
mov
sbb
test
xchg
ret
dec
iret
cmpsb
inc
stos
xor
jl
jb
popa
dec
pop
scas
fabs
mov
out
andl
test
stos
jo
xchg
sbb
dec
sub
cmp
mov
jl
xor
adc
pop
push
std
and
ret
mov
hlt
adc
in
shrl
leave
test
bound
mov
and
jge
pop
cmpb
push
inc
or
lock
adc
and
out
loopne,pn
dec
popf
pop
popa
inc
and
push
hlt
push
mov
mov
xchg
mov
stc
mov
adcl
inc
enter
les
shlb
movsb
fisubs
jb
jnp
outsb
push
or
icebp
and
mov
inc
jmp
xchg
cltd
test
stos
aam
dec
out
in
pop
pop
add
jp
pop
sub
sti
pop
mov
and
test
xor
and
cmp
lds
in
int3
fwait
aas
cmp
fidivs
rcrb
andl
mov
insl
xor
adc
push
cmpsb
mov
es
cmc
inc
stc
testl
jae
imul
mov
movsb
and
xchg
lea
mov
or
jno
rcl
xchg
xchg
daa
bound
fs
movsb
mov
imul
add
xchg
out
or
add
add
cmp
pop
mul
inc
sbb
sub
and
and
pop
das
mov
and
jno
scas
cmp
push
push
movsl
xor
orl
add
mov
and
arpl
fistps
aam
out
adc
mov
icebp
jle
push
jb
xchg
lods
rorb
shl
mov
mov
mov
sub
nop
mov
repnz
pop
or
add
push
dec
fcompl
mov
mov
cli
ljmp
testb
addr16
mov
lods
mov
subb
cmp
xor
mov
push
add
mov
jge
scas
mov
subl
sahf
jb
mov
mov
xchg
rcrl
inc
repz
lods
and
std
mov
lcall
cli
pop
gs
and
cmp
bswap
addr16
movsb
daa
idivb
pusha
sub
mov
add
xor
sbb
and
sarb
and
xchg
dec
loopne
shll
jb
rorb
imull
xor
movb
iret
insl
andl
inc
rcrb
das
xchg
and
and
fcomi
repnz
adc
mov
xor
xor
nop
iret
andl
out
cmp
jp
inc
in
and
xchg
sub
sub
dec
add
test
mov
jge
adcl
shll
push
ret
inc
and
sbb
rclb
scas
test
gs
inc
mov
dec
data16
pop
mov
data16
and
xchg
inc
sbb
insl
jo
pop
insl
jecxz
mov
jge
push
mov
rorl
js
lods
shlb
push
mov
dec
xor
mov
test
lret
rcll
pop
hlt
loopne
subl
mov
inc
mov
enter
mov
je
mov
and
push
sarl
mov
pop
add
mov
pop
xor
inc
pop
inc
sub
sub
dec
ret
test
mov
jb
cmp
or
xor
lods
mov
sub
xor
lods
mov
shl
push
mov
push
inc
pop
mov
adc
and
stos
roll
lahf
out
sub
pop
xchg
adc
jge
rep
push
test
and
and
push
sub
lock
sbb
adc
mov
mov
and
std
xchg
mov
sti
jecxz
xor
not
shrl
sbb
movsl
pop
ja
push
cmp
mov
nop
xor
mov
pop
ljmp
and
inc
jne
call
es
scas
lea
and
in
cmp
mov
repz
add
mov
mov
imul
xchg
and
outsb
repz
jno
push
mov
test
out
ret
roll
test
inc
out
repnz
ret
mov
test
ret
and
push
jo
outsb
mov
les
aaa
adc
shl
push
cmp
pusha
ret
adc
mov
in
xchg
mov
nop
add
sub
dec
add
int3
mov
jo
pop
mov
push
mov
and
dec
leave
cmpsl
shrb
xchg
push
inc
and
ds
ret
xor
insl
pop
push
adc
cli
xchg
adcb
mov
fistps
xchg
jmp
jecxz
mov
sbb
dec
cltd
bound
jne
inc
add
jp
arpl
iret
nop
cmp
dec
shll
popa
rclb
lds
lods
xchg
or
sub
mov
das
sbb
push
lret
and
xchg
loope
jecxz
xor
xchg
imul
add
call
mov
pop
mov
sub
rolb
xchg
mov
subb
xchg
andl
xor
daa
dec
test
jg
jno
sbb
jb
and
pop
xor
bound
fs
push
inc
sub
sbb
jp
xchg
int3
loope
test
or
loopne
sub
xor
pop
jl
into
add
rcrl
adc
jmp
jae
pop
dec
fists
aad
push
jl
add
loop
shlw
xor
scas
add
sub
fisubs
mov
jl
out
lcall
jb
mov
stos
in
pop
jne
mov
lock
sahf
pop
std
xor
cmpsb
movsb
icebp
add
hlt
lock
sub
fsub
xchg
add
int
and
or
add
loope
insb
jo
and
mov
popf
int3
cmp
js
push
add
inc
jb
mov
and
dec
add
sbb
xor
adc
gs
cmp
out
and
mov
jbe
xor
mov
inc
mov
mov
inc
xchg
xor
mov
insb
cmp
pop
roll
out
mov
mov
les
mov
xor
test
add
outsb
pop
hlt
popf
ja
and
fdivp
xchg
and
adc
lret
sbb
xor
jb
int
add
in
ss
and
jge
popa
gs
xchg
cmp
ret
test
or
ljmp
xlat
mov
sti
cmp
sub
cmp
dec
aas
adc
pusha
or
nop
pop
adc
xor
push
xchg
push
push
movsb
aad
pop
xor
jecxz
pop
sbb
icebp
iret
fnstcw
mov
cltd
hlt
jle
xchg
xchg
mov
pop
adc
popl
mov
inc
stos
pop
jle,pt
ret
sub
or
stc
mov
arpl
mov
mov
and
sbb
cmc
xchg
movsb
inc
and
adc
outsl
inc
test
and
aam
pop
pusha
xchg
sub
ret
push
cmp
das
dec
aaa
jae
aam
movsb
incl
jge
mov
inc
or
xor
fdivp
inc
push
and
cmc
pop
popf
add
dec
mov
shr
adc
jecxz
add
and
xor
mov
push
test
jp
sbb
popa
sub
inc
ret
mov
lret
cmpsb
into
sub
and
cmp
imul
cmp
add
sub
pop
jle
fidivrs
and
pushf
in
xchg
int3
dec
mov
push
pushf
pop
adc
fcompl
shrl
mov
push
movb
xor
shr
ss
jmp
scas
xchg
dec
movsb
cmp
loopne
add
daa
sbb
scas
adc
sbb
imul
xchg
popf
shl
pop
in
out
in
incl
data16
lock
xor
adc
fsubp
dec
add
push
dec
sub
repz
dec
pop
int3
add
jo
or
sub
ljmp
mov
les
scas
and
clc
jns
adc
pop
call
mov
call
push
xor
pop
add
cli
add
pop
ret
js
fs
out
mov
shl
js
arpl
add
xor
jnp
lds
mov
andl
ja
xor
movsl
pop
cmp
aam
cmpsb
mov
test
sub
pop
out
scas
and
push
xor
xchg
cmp
lods
ret
or
scas
movsb
dec
loope
mov
aas
shlb
fwait
dec
adc
subl
popf
and
in
or
sarb
sahf
xchg
repnz
stc
mov
ret
cmp
stos
out
and
mov
cmp
rcll
test
inc
cmp
repnz
cmp
mov
clc
arpl
iret
movsl
mov
xchg
fnsave
pop
cltd
pop
sbb
lret
mov
and
ja
lahf
int3
mov
jge
fdivs
ret
push
and
mov
les
pop
mov
scas
inc
and
fldl
inc
inc
shl
repz
adc
stos
aaa
sahf
pushf
push
mov
fstp
add
and
outsl
shr
les
rep
sbb
add
and
fldcw
xchg
lds
and
fdivr
pop
mov
jb
stos
jl
mov
out
pushf
in
std
dec
pop
xor
arpl
je
andb
stc
arpl
gs
je
loopne
xchg
pushf
repz
shlb
sub
ja
inc
xor
ret
pop
mov
xchg
mov
sub
lahf
push
out
xchg
mov
sub
adc
repnz
arpl
mov
cmp
or
sarb
jg
fldt
getsec
adc
andb
pusha
fimuls
imul
and
loope
mov
and
mov
inc
loop
push
outsb
mov
jecxz
xor
ljmp
fnsave
popaw
mov
int3
stos
rcrl
out
adc
adc
aad
mov
loope
mov
fbld
xor
icebp
jmp
xorl
mov
data16
iret
inc
inc
cli
cmp
les
or
andl
or
popf
mov
ss
sbb
and
pop
shrl
hlt
mov
ljmp
xchg
fisubs
inc
outsb
int3
push
xchg
xor
hlt
enter
add
stos
adc
cmp
movsb
push
cmp
add
lds
add
cmp
aam
mov
adcl
xor
test
hlt
das
std
mov
mov
daa
aad
loope
std
notl
lods
into
add
mov
rcl
or
out
adc
push
gs
lret
push
adc
andb
xchg
mov
sbb
mov
or
inc
data16
icebp
add
xor
mov
jl
rcll
sbb
imul
push
add
icebp
mov
sub
shll
jb
in
jecxz
sub
test
mov
push
xchg
outsb
arpl
dec
lds
in
popa
pop
and
out
inc
les
add
xchg
repnz
add
in
jne
xor
add
mov
sarb
sarb
aas
push
les
mov
enter
xor
fistps
loope
pop
dec
adc
add
xchg
jno
mov
fnstcw
or
bound
mov
imul
ret
and
in
aam
xor
repnz
dec
icebp
pop
pop
rolb
inc
mov
inc
imul
psubsb
cmpsb
and
jns
xchg
add
pop
mov
out
out
dec
neg
test
stos
mov
fmul
shl
adc
out
and
xor
scas
push
and
test
xor
xchg
addr16
outsl
incl
mov
mov
and
cli
add
int3
pop
jb
and
and
fwait
test
fidivs
loope
jecxz
add
loopne
dec
mov
sbb
and
add
adc
xor
sub
mov
mov
add
aaa
leave
pop
mov
jns
sgdtl
jp
imul
and
scas
mov
mov
test
mov
push
adc
xor
inc
pop
push
shl
mov
addr16
cwtl
pop
mov
and
hlt
in
lods
sahf
lods
push
mov
shll
popa
lret
in
inc
aas
in
cmc
bound
xchg
xchg
add
dec
clc
aad
push
xorl
dec
sub
mov
daa
pop
mov
out
xchg
cmp
insb
pop
jo
adc
or
dec
lock
add
subb
imul
inc
aam
js
loop
push
pushf
mov
dec
lahf
mov
dec
or
push
adc
subl
inc
push
xchg
jge
and
das
and
adc
sahf
jb
stos
mov
mov
rolb
push
xor
daa
inc
inc
dec
fsub
adc
mov
ds
icebp
call
mov
sbb
jae
push
lret
add
inc
jno
or
mov
loope
sbb
pop
call
pop
loop
repnz
and
pop
enter
mov
mov
cmp
aam
xor
pop
hlt
jns
xor
adc
and
cli
inc
bound
negl
jb
repz
in
mov
jge
sbb
gs
and
xlat
loope
xchg
das
push
outsl
adc
and
insl
test
in
and
xorl
cmpsl
mov
jmp
pop
dec
lods
fwait
xor
push
insl
js
in
in
xor
movsb
decl
push
test
repnz
test
arpl
clc
and
jno
repz
mov
and
mov
mov
loop
jl
mov
add
or
xchg
xor
lods
pop
cwtl
jmp
push
dec
cwtl
loope
lea
xor
pslld
jl
and
mov
jecxz
and
adc
fnop
sbb
and
loop
dec
pop
movsb
mov
repz
fisubs
das
mov
jnp
sbb
xor
movsb
rclb
cwtl
sbb
sbb
insb
repnz
shll
ret
aas
call
and
mov
dec
jle
loop
sub
lock
cmpb
popf
xchg
or
shlb
shlb
andl
xchg
fistpl
out
sub
and
inc
pop
mov
dec
jo
add
imul
xchg
je
xor
fstl
rol
sbb
jns
rcrl
adc
les
iret
jmp
daa
in
lea
push
inc
clc
jmp
mov
popf
stos
inc
pushf
xor
movsl
nop
outsb
cmp
pop
movsb
negl
loope
fists
jle
insl
dec
cmp
in
adc
adc
loop
addr16
mov
mov
xor
imul
pop
stc
scas
enter
push
js
lock
sub
loope
aas
dec
push
fisttpl
lock
pop
jg
insl
lcall
icebp
xchg
les
sbb
push
and
in
stos
add
push
loope
xor
imul
rorb
xchg
and
push
leave
scas
jno
mov
daa
in
repz
in
and
inc
sbb
add
mov
lret
xchg
or
repnz
jge
dec
add
fsubrs
int3
mov
in
popa
mov
adc
movsb
and
daa
inc
mov
lock
sub
dec
sub
jbe
adc
sub
popf
mov
and
and
sub
push
and
lret
rclb
fwait
hlt
scas
push
mov
testl
cmp
xor
mov
notb
add
dec
sub
fmuls
sbb
mov
insl
dec
lds
lea
mov
daa
push
mov
sub
sbb
out
mov
jb
jecxz
aam
xor
prefetchw
adc
push
xor
pop
and
adc
xchg
mov
inc
mov
cmp
jns
fnsave
cmc
xor
jmp
cmp
test
test
mov
mov
jbe
cmp
test
out
sub
rdtsc
push
adc
sbb
fs
subb
mov
jle
push
cmp
lods
mov
mov
out
ds
and
xchg
jmp
push
shll
fs
iret
psrlw
xor
xchg
and
bound
jg
sbb
dec
add
jge
les
jecxz
out
mov
xor
in
je
adc
and
xchg
adc
mov
sub
fadds
js
mov
cltd
aad
dec
js
xor
xor
repnz
lret
jns
or
ret
shlb
jbe
mov
jns
fstp
leave
dec
push
and
adc
push
rolb
popl
xor
cli
jecxz
mov
sub
xor
cmc
add
jnp
sahf
inc
call
xchg
push
mov
roll
nop
dec
and
and
cltd
lds
sub
sbb
cmp
loop
int3
jb
lock
arpl
scas
jl
enter
lahf
add
cs
and
jns
push
lock
adc
xchg
in
incb
and
and
mov
mov
or
orl
bswap
mov
adc
mov
adc
les
inc
movsl
js
insb
jecxz
jae
inc
xor
jge
xchg
je
mov
xor
repz
and
addb
fstpl
and
push
daa
gs
mov
negl
jne
inc
pop
xor
arpl
sbb
and
sub
out
dec
js
mov
add
dec
dec
orl
lock
bound
popa
daa
mov
cli
sti
add
add
mov
sbb
repz
incb
cs
lahf
in
and
int3
xchg
test
sub
imul
enter
outsl
ss
fnstcw
inc
rolb
add
stc
push
icebp
gs
push
pop
mov
and
sbb
dec
jecxz
mov
mov
mov
popf
out
je
mov
lods
jnp
xorb
xchg
popf
iret
and
xor
xchg
sub
jne
xchg
enter
dec
pop
lock
cld
js
test
rol
lahf
push
and
div
mov
lods
adc
cmc
ss
push
in
jno
fstpl
ret
hlt
jecxz
cmpsb
and
or
out
stc
repnz
mov
popa
xchg
sub
inc
adc
int3
adc
and
cmc
push
scas
les
shll
in
outsl
ret
add
mov
cmp
inc
or
cmpsb
test
mov
jle
mov
dec
add
rcll
imul
enter
pop
xor
cmpsb
xor
pop
or
mov
xchg
movb
fst
repz
rcrb
movsb
in
movsb
adc
gs
je
inc
and
in
leave
scas
aam
or
xchg
and
xchg
nop
mov
inc
js
icebp
and
hlt
cli
mov
bound
lahf
add
loop
ljmp
mov
sahf
aas
mov
and
or
insl
out
mov
insb
repnz
sub
dec
enter
push
cmpsb
sbb
add
or
imul
mov
test
sub
dec
xchg
rolb
xchg
and
and
pop
adc
iret
cmp
sub
out
in
int
push
and
outsl
sub
loope
mov
cmp
xor
mov
loop
mov
scas
xor
loopne
ret
arpl
scas
ljmp
jecxz
sbb
pop
addl
lahf
sbb
mov
cld
js
gs
aaa
adc
cmpl
and
int3
xor
and
inc
aas
and
jns
mov
push
jno
xchg
outsl
out
mov
cmp
test
adc
lock
les
inc
jb
sub
and
clc
mov
fs
pusha
std
add
or
outsb
mov
add
inc
lret
mov
enter
loop
and
aam
ss
sub
movsl
mov
adc
into
pop
add
aam
cmc
fdivl
gs
sub
sub
or
adc
jmp
mov
rcrb
outsb
scas
mov
sbb
fucom
and
fcomip
mov
in
aas
pop
addl
je
pop
and
cmc
sahf
push
lods
sub
mov
push
and
dec
iret
les
in
mov
hlt
pop
je
scas
pop
fnclex
adc
or
pop
or
adc
out
iret
test
and
sub
std
fcmovne
in
arpl
mov
push
pusha
ret
push
sub
push
enter
in
mov
and
dec
fisubs
mov
loopne
adc
mov
fs
sub
nop
loope
inc
inc
leave
jno
lcall
sub
pop
dec
xor
fld
into
vmread
adc
out
inc
push
xchg
icebp
mov
fnstcw
popf
aaa
and
mov
data16
loop
daa
push
xchg
rol
pmulhuw
out
mov
add
imul
add
test
mov
mov
xor
mov
mov
xchg
xor
sub
mov
and
icebp
cmp
mulb
or
je
loopne
aad
insl
clc
add
push
pop
shll
push
and
mull
bound
adc
push
idivb
movsl
inc
cmpsl
mov
and
mov
jmp
loop
cltd
jg
jae
js
andl
and
adc
in
and
add
ret
shll
pop
stos
mov
repz
loope
adcl
fsts
dec
mov
and
repnz
mov
sub
dec
or
lods
aam
loop
mov
jo
and
test
mov
push
mov
cwtl
jl
xor
cmpsl
mov
xor
movsb
push
mov
js
jecxz
xor
jle
imul
jmp
sahf
inc
repz
cmpl
rolb
sub
dec
sbb
xor
and
dec
js
mov
xchg
sbb
push
cmpsl
in
pop
push
xchg
xchg
clc
push
inc
pop
sbb
mov
adc
in
cmp
repnz
xorb
inc
dec
loope
push
dec
add
sub
int3
jg
mov
cmc
gs
and
adc
mov
aad
inc
test
mov
lods
jge
xlat
fstpl
js
jns
mov
push
inc
mov
sub
xor
mov
dec
cmp
fadd
jns
or
sbb
or
inc
push
mov
sbbb
jns
rcr
rolb
mov
add
sub
xchg
jle
xor
movsb
jecxz
call
add
inc
imulb
mov
and
mov
xchg
adc
leave
lock
aaa
pop
xchg
roll
jo
adcl
shrb
clc
insl
dec
jns
or
and
jnp
and
adcb
inc
mov
ret
push
mov
mov
pop
add
xor
daa
div
aaa
scas
jae
jmp
jecxz
cmp
cmpb
imul
jmp
xor
add
mov
inc
push
pop
js
je
fstpt
mov
lods
repz
cld
add
jle
add
xchg
dec
call
lcall
decl
adcb
add
xchg
ffree
andl
pop
jnp
jge
add
inc
mov
push
mov
add
pop
scas
pop
xor
inc
jmp
cld
adc
xor
or
sar
xchg
jecxz
addr16
pop
add
and
jbe
or
loope
and
sub
mov
ja
jnp
dec
ja
push
and
stos
sub
icebp
outsl
rolb
inc
leave
sahf
pushf
inc
cli
mov
and
out
and
sbb
ret
fs
xor
sbb
or
mov
jnp
mov
jge
cld
pop
aas
adc
repz
sub
gs
lock
in
loope
leave
aam
add
pop
inc
sahf
shlb
mov
jno
xor
sbb
adc
sub
test
js
loop
ret
cs
les
sub
mov
mov
xchg
sbb
mov
adc
mov
sahf
cmp
inc
pop
ja
xchg
inc
pop
ljmp
adc
cli
cmpsl
xchg
push
sub
subb
jno
and
sbb
xchg
out
or
je
shll
jne
sub
adc
mov
adc
movsb
jecxz
sub
dec
mov
pop
out
ja
push
cmp
fildll
xchg
xor
ss
lcall
mov
mov
xor
int3
loope
xchg
nop
ja
mov
shrb
and
pop
lret
xor
push
xor
pop
jge
je
sub
js
xor
nop
pop
mov
adc
clc
xchg
jns
test
jl
xchg
addr16
je
jno
mov
mov
popa
fstpl
loope
lahf
lods
mov
push
sub
subl
xor
or
mov
pusha
adc
adc
insl
adc
loope
rcll
push
imul
jbe
arpl
fldl
dec
dec
inc
dec
mov
mov
rcrl
shl
lods
and
insl
mov
mov
lods
loop
scas
adc
in
aam
and
xor
sub
test
and
sbb
mov
movsb
mov
or
je
xchg
sub
call
aad
xchg
je
call
inc
negb
add
hlt
mov
incb
add
cs
outsl
insl
aas
and
or
shll
test
and
pop
sbb
out
movsb
and
loopne
shll
mov
addl
or
outsb
movsb
insl
sbbl
sti
inc
and
mov
cli
ret
ret
mov
scas
divb
adc
mov
mov
mov
test
js
push
and
push
xchg
subl
ficomps
call
cmpsb
xchg
push
imul
and
mov
imul
adc
adc
les
sub
cmp
jbe
shrl
mov
shrl
in
movsl
xchg
repz
xor
ss
shlb
aam
mov
in
cmc
clc
adc
scas
addl
push
insb
dec
pop
hlt
enter
push
mov
push
xchg
push
inc
xchg
cltd
cmp
dec
pop
out
enter
add
lcall
mov
and
out
push
sahf
js
adc
in
test
dec
mov
jae
cmp
push
mov
push
sub
cs
mov
pop
out
sbb
jb
xor
xor
insb
adc
xchg
add
xchg
mov
push
sub
mov
mov
mov
and
stc
pusha
clc
rolb
and
pop
rolb
and
out
xor
arpl
xor
sub
mov
push
je
xor
mov
and
pop
mov
xchg
add
xor
push
je
pop
jns
out
push
mov
pop
mov
aaa
pop
movsl
push
call
in
insl
or
int3
jmp
sub
jg
and
and
mov
les
xchg
ss
sbbb
shrl
cmp
inc
cmpsl
and
adc
fs
imul
adc
rorl
test
sub
out
pop
and
xor
mov
subb
push
and
adc
and
shlb
push
xor
cs
adc
lea
jmp
aas
mov
inc
xor
int3
movsb
dec
addl
dec
xchg
mov
mov
sbb
pop
xchg
dec
mov
bound
dec
iret
jno
mov
add
and
adc
adc
inc
pop
roll
adc
adc
pop
aam
pop
repnz
push
out
push
lret
cmp
sti
sbb
loop
mov
sub
inc
and
lock
and
arpl
xor
mov
int3
loope
inc
out
test
dec
setbe
les
inc
adcl
hlt
movb
lds
mul
adc
and
out
or
adc
mov
aam
inc
push
cmpsb
push
je
jns
rcll
add
ljmp
adc
aad
mov
fstpt
adc
mov
mov
enter
lock
pushf
pop
dec
rcl
test
mov
pop
xor
repz
pop
das
inc
adcl
jp
loop
xchg
test
repnz
adc
mov
gs
sub
sbb
mov
add
addb
sahf
inc
pop
mov
jle
add
in
lods
lds
xchg
pusha
ss
and
adcb
out
and
into
mov
and
mov
shll
mov
shll
jbe
push
sbb
lods
repz
rcr
mov
inc
sahf
and
call
test
mov
rorb
jb
loop
hlt
add
js
xchg
xor
aas
adc
mov
cmp
jle
aad
popa
loop
addr16
js
and
out
jle
cmp
xor
std
lds
out
negb
lock
mov
notb
scas
adc
out
mov
xchg
push
bound
jns
and
jbe
popa
pop
aas
push
dec
je
mov
xor
mov
and
mov
mov
shll
xchg
sbb
repz
xor
loope,pn
movsb
push
sbb
cmove
push
decb
jecxz
add
jo
mov
inc
add
jle
inc
cmp
mov
les
cmp
stos
add
mov
sbb
imul
inc
leave
scas
push
outsb
js
sbb
sub
inc
or
cs
xchg
or
pop
add
repnz
cli
sbb
dec
jnp
shl
jae
sbbb
mov
mov
jo
push
shrb
fs
sub
cltd
leave
jecxz
test
repz
aaa
and
enter
movsb
xor
aam
and
loope
loope
pop
sub
xorb
pop
cmpsb
orl
dec
xor
fsubrl
jl
mov
cmp
nop
sahf
mov
popf
push
sahf
in
inc
push
jge
push
lahf
outsl
and
lret
inc
sti
cmovne
in
mov
movsb
inc
fistpll
ss
xor
mov
inc
and
pop
xchg
mov
sub
cmp
xchg
and
sub
mov
xchg
cmp
addl
rorl
sbb
mov
adc
pop
and
test
add
mov
xor
test
mov
imul
xor
mov
mov
data16
std
sub
in
cmp
lds
and
push
test
and
movsb
jno
cli
xor
dec
movhps
outsl
fldenv
and
inc
sub
enter
js
insb
fcoms
test
cmp
imul
daa
loop
jo
mov
inc
movsb
mov
cwtl
insl
fmul
jno
sbb
dec
push
lea
mov
cmp
jb
pop
shrl
loopne
ret
push
xor
ret
movsb
adc
in
je
std
mov
mov
sbb
push
push
and
cmp
pop
cmp
pop
push
jns
popa
int
push
and
push
and
xchg
test
mov
xorb
xchg
sti
shrb
mov
out
es
or
jb
andl
dec
outsl
out
loope
cmp
adc
aam
imul
shlb
pop
js
repz
cltd
xor
outsl
int3
inc
movsb
out
sub
or
aam
sahf
pop
dec
outsl
cwtl
icebp
xor
adc
add
out
mov
sbb
int3
rorl
xchg
mov
and
repz
adc
inc
pop
xchg
mov
and
test
or
cmp
xor
mov
mov
pop
iret
test
cmpsb
popf
adc
xor
out
bound
sub
js
neg
in
ret
out
shrl
xor
mov
adc
jecxz
rcrb
divl
and
xchg
das
nop
scas
mov
mov
cmp
ret
int3
je
dec
repnz
mov
imul
xchg
or
mov
loop
scas
push
inc
and
xor
sub
fidivs
rorb
rorl
or
cmp
gs
dec
ds
inc
shll
mov
dec
lcall
mov
aaa
xchg
ret
push
dec
add
inc
cmp
push
arpl
xor
les
sub
add
push
arpl
movsl
mov
std
inc
pop
shll
adc
lahf
in
in
in
fldenv
mov
in
and
mov
shll
and
pop
dec
mov
jbe
addb
stos
rcrb
int3
adc
mov
aam
and
pusha
in
adc
add
pop
cld
repz
call
mov
cld
ret
fcmovbe
lods
popf
inc
dec
xchg
mov
and
jge
sbb
inc
sti
xor
repz
fucomi
adc
jno
xor
pop
pop
cmp
mov
adc
jo
and
xchg
leave
shll
inc
test
repnz
pop
movsl
aas
adc
nop
dec
and
or
fstps
inc
ds
lret
lds
mov
xor
inc
sub
ret
cs
aam
or
xor
cli
je
xor
and
jmp
sub
sarb
inc
sbb
jb
and
in
icebp
inc
lds
inc
cmc
shlb
out
movsl
or
inc
cmpsl
push
mov
imull
stc
inc
ret
and
filds
out
bound
push
xchg
scas
add
jbe
cmpb
sub
push
push
jecxz
and
les
aam
movsb
and
adc
sub
imul
pop
sbb
mov
sbb
popf
sbb
mov
and
rol
adc
push
int3
in
out
hlt
cmp
inc
mov
xor
aas
test
pushl
pop
mov
dec
dec
mov
and
xlat
push
icebp
add
inc
pop
mov
inc
sub
dec
fisubs
jne
and
sub
cmp
mov
popa
mov
stos
bound
pop
mov
xor
arpl
xor
push
inc
clc
cli
outsb
imul
jge
repnz
leave
sbb
int3
lods
movsb
ret
in
aas
testl
repz
add
out
hlt
shrl
jmp
and
je
mov
outsb
faddl
addb
clc
mov
cmpsl
leave
loopne
inc
and
mov
shrb
imul
inc
clc
lret
test
adc
push
sbb
fucom
jo
push
es
les
jns
enter
data16
mov
xchg
mov
outsb
or
repz
addb
loop
lret
pop
adc
and
frstor
sbb
js
sub
test
pop
shrl
mov
or
mov
mov
add
cltd
pop
jl
jb
and
mov
pop
daa
in
rorl
jno
mov
mov
imul
sub
adc
pop
movsb
cld
inc
ljmp
movnti
inc
push
or
or
aam
test
push
jmp
inc
pop
mov
jle
push
jb
cmpb
ja
xchg
pop
repz
std
dec
ret
daa
xchg
adc
sarb
jp
repz
mov
rol
dec
and
and
push
stc
dec
cmp
repz
add
jbe
xor
xchg
xor
xor
loope
sbb
test
in
cmp
fmuls
testl
les
xor
and
imul
cmc
dec
inc
inc
aaa
adc
jmp
fnsave
enter
jae
xchg
and
stos
or
iret
roll
test
mov
mov
outsb
add
sub
scas
jmp
cmpsl
cmpb
stos
jmp
add
mov
loop
inc
inc
inc
sbb
adc
andl
dec
or
sbb
jecxz
adc
loopne
mov
insl
std
imul
and
xchg
stos
aas
jle
mov
ret
dec
jae
sub
adc
addr16
rclb
arpl
addl
mov
mov
push
jns
rolb
and
std
rol
gs
sti
xchg
cmp
mov
inc
sub
or
aam
insl
adc
dec
insl
imul
scas
pusha
movsb
fisttpl
xor
fs
jl
add
in
in
dec
xchg
xlat
call
and
xchg
loope
jns
mov
inc
mov
popa
xor
stos
sarl
push
ljmp
push
in
sub
andb
aam
cmpsl
subl
mov
gs
je
sbb
mov
cmp
xor
aas
sub
enter
imul
sub
addl
xor
pop
mov
imul
das
add
test
pushf
jg
or
rcrb
jmp
and
or
repz
loopne
push
shlb
mov
mov
mov
aad
popa
in
js
xchg
cmp
pop
xor
in
out
adc
xor
and
and
push
cwtl
jno
mov
or
hlt
lcall
mov
in
gs
jno
addr16
and
out
lret
js
les
divb
inc
sbb
mov
push
add
xor
in
mov
push
sub
xor
xchg
push
sub
pop
ljmp
ret
jmp
mov
and
xchg
or
leave
push
test
shl
divb
cmp
sub
andw
stos
jmp
fstl
int3
fs
or
push
sub
xlat
arpl
push
aam
and
dec
aam
adc
mov
call
xchg
and
mov
sub
xchg
je
pop
push
xchg
in
movb
decb
mov
mov
jb
push
gs
in
mov
sbb
and
aaa
cs
or
and
inc
gs
adc
jo
xor
daa
enter
dec
fldl
inc
lcall
mov
shl
jbe
sub
ljmp
jg
and
xchg
add
out
movsl
orl
inc
push
mov
repnz
add
dec
into
test
inc
sub
das
arpl
jne
push
dec
adc
popf
jge
push
cmpsl
xor
push
lcall
out
push
push
aam
and
outsb
mov
sub
les
mov
ljmp
icebp
pop
gs
loope
mov
or
in
les
pop
add
add
fnstsw
test
out
xor
ds
inc
fneni(8087
jl
mov
dec
lret
psrlw
dec
xchg
js
sub
and
push
cmp
in
or
xchg
repz
cmp
sbb
inc
inc
xorl
jno
les
clc
shlb
push
rcrl
adc
mov
mov
icebp
shll
and
mov
and
int3
mov
push
orl
push
test
rorb
mov
dec
andb
roll
mov
cmp
loope
inc
add
jl
add
cmp
in
pop
dec
adc
add
adc
into
popl
jge
fwait
xor
aaa
and
shl
cmpl
mov
lods
and
xchg
cmp
mov
mov
pop
xchg
je
and
add
inc
jno
mov
push
pop
push
and
shr
sbb
xchg
lods
imul
mov
pop
shlb
mov
adc
fsubl
add
xor
shlb
jns
rorl
mov
jne
addl
ficomps
faddl
insb
add
jge
lods
outsb
add
pop
inc
push
adc
sub
ljmp
push
jecxz
and
jnp
mov
inc
add
in
test
ss
daa
xorb
mov
in
in
pusha
pop
out
stos
and
mov
rol
inc
lods
inc
insb
mov
push
add
loope
xchg
xchg
adc
in
popf
cmp
cmpsb
std
insb
test
and
outsl
in
inc
add
and
arpl
lds
repz
iret
and
jmp
pop
call
ds
inc
adc
mov
jns
imul
mov
mov
jl
push
and
rorl
mov
out
dec
or
push
lret
xchg
mov
imul
rcrl
add
inc
ja
addb
arpl
test
test
ss
inc
fldcw
and
pop
stc
fs
pop
dec
negb
js
in
and
xor
in
mov
push
lcall
push
cmp
loope
push
addr16
inc
idivl
les
add
jecxz
adc
shll
andb
mov
movsb
bndstx
je
cmc
cmp
xchg
inc
xchg
shll
pushf
sub
shlb
les
subl
imul
into
mov
sub
adc
add
sub
push
adcl
xor
cmpl
xor
add
in
rol
mov
inc
and
fs
sub
pop
js
add
lahf
sbb
arpl
rcl
sarl
mov
mov
jne
pop
add
outsb
jbe
add
add
jg
iret
inc
and
xchg
cli
xlat
pop
pusha
iret
pop
hlt
aad
mov
jl
jle
loope
ret
stc
adc
das
roll
clc
arpl
and
mov
int3
mov
pop
stc
imul
lods
fistpl
mov
adc
mov
data16
pop
sbb
sbb
data16
xlat
ret
or
and
icebp
sub
mov
movsb
imul
and
mov
int3
pop
mov
movsb
inc
mov
pusha
pop
pop
push
mov
push
inc
pop
fistl
int3
adcb
addr16
inc
xor
mov
and
push
jae
mov
add
fisttpl
scas
add
test
jae
inc
mov
lcall
cmpsb
inc
je
inc
mov
gs
mov
sbb
shl
push
pop
ret
rolb
and
jge
movsb
cld
mov
mov
loopne
std
mov
jno
sahf
lods
les
and
test
and
in
and
lahf
addr16
sub
or
mov
xorl
dec
ds
and
pop
shrb
mov
sbbl
inc
idivb
fldl
popf
add
xor
gs
ret
pushf
dec
movsl
je
mov
mov
loopne
loop
mov
xlat
sub
sbb
decb
jle
clc
jnp
lds
sbb
inc
js
sarl
fsubr
mov
in
lea
push
aaa
loop
icebp
xchg
sbb
mov
or
cli
mov
xchg
icebp
into
xor
arpl
mov
cmp
in
je
loope
nop
fstps
push
filds
cmpsb
xor
adc
popf
cli
mov
push
add
ret
mov
xor
pop
imul
outsb
mov
inc
xchg
push
mov
cmpsb
xchg
mov
push
mov
dec
pop
add
repz
cltd
aad
insl
push
sbb
pop
mov
mov
lahf
dec
shlb
daa
and
push
bound
xchg
pop
loop
add
out
aam
xorl
push
insl
jo
in
movsb
dec
pop
ret
bound
mov
out
push
stos
cmp
mov
movsb
mov
cmp
out
bound
ljmp
daa
shlb
shrl
loope
and
jnp
insl
sub
or
rcl
js
mov
imul
mov
hlt
incb
pop
inc
das
dec
cltd
nop
rcl
pop
aas
mov
mov
push
and
xchg
ret
inc
jecxz
xor
xchg
mov
pop
jbe
mov
test
sbb
repnz
shl
xchg
add
dec
add
pop
js
mov
xor
jbe
arpl
mov
dec
inc
scas
jl
shl
in
test
xlat
lcall
xor
adc
xor
adc
shrl
out
pop
jmp
roll
push
sub
mov
out
cltd
xchg
sub
inc
or
imul
add
xor
adcb
sub
sahf
or
shl
out
and
jbe
and
stos
leave
pop
sahf
test
add
or
dec
rorb
jge
dec
adc
jae
out
mov
ret
popa
sub
out
ja
jl
mov
lahf
sub
and
lret
mov
imul
rorb
and
bound
mov
repz
mov
addr16
mov
leave
call
aam
shrl
mov
dec
ljmp
xor
and
add
and
mov
mov
movsb
mov
mov
fwait
sub
jge
jp
inc
and
fsts
or
rclb
pop
hlt
in
lock
les
and
cmp
mov
and
pop
mov
fnstenv
andb
out
xor
cmp
cmpsl
shl
aas
movsb
addr16
jge
psrlq
out
xchg
add
xchg
lods
fsubl
je
mov
xchg
inc
jb
xchg
ret
test
adc
ja
sbb
loopne
fmuls
and
imul
stos
frstor
outsl
sbbb
sub
sahf
add
loopne
insl
pop
add
push
and
or
push
pop
push
and
pop
pop
mov
hlt
sub
shl
sbb
insl
add
cmp
loop
or
push
xchg
shl
sub
hlt
pop
ret
repz
inc
mov
dec
test
shrb
lahf
add
shll
clc
gs
push
int3
inc
push
and
fbld
ret
push
lock
sub
loop
dec
and
and
sub
cmpsb
sbb
popf
jns
push
mov
inc
sbb
and
pop
mov
mov
lret
mov
aas
inc
data16
sahf
shlb
shl
int
jae
jle
aas
test
int
xor
xchg
push
test
or
xchg
pop
mov
jecxz
jecxz
pop
enter
and
js
and
xor
jl
and
outsl
sub
leave
aad
std
out
das
xchg
aaa
push
test
test
xor
shll
inc
jg
stos
jl
and
add
lea
jle
imulb
mov
jnp
mov
fneni(8087
icebp
in
add
inc
mov
xor
cmpsb
aad
push
add
loopne
jb
push
jns
adc
loope
ficomps
add
jns
inc
inc
ss
and
pop
cmp
insb
or
test
dec
dec
lahf
mov
lods
ret
mov
gs
loop
sbb
sub
sbbb
lods
call
inc
sbb
xchg
fstps
xchg
scas
xchg
je
outsl
in
outsb
mov
cmp
jb
dec
jp
inc
jbe
into
push
lea
loope
inc
sub
add
out
xor
mov
mov
loopne
jo
fs
andb
jnp
lahf
testb
add
hlt
mov
ret
push
cmp
jg
ss
xchg
mov
jb
sub
mov
jge
xor
aam
test
in
pop
imul
cmc
mov
inc
mov
out
enter
cmpsb
sbb
xor
lahf
cmp
add
pcmpeqb
in
ret
enter
inc
mov
faddp
mov
lcall
mov
pop
add
rcpps
ret
inc
jnp,pt
mov
xchg
xchg
out
inc
hlt
arpl
and
scas
xchg
sub
test
inc
mov
cwtl
rcl
mov
mov
nop
jnp
int
loop
and
xor
out
ds
popa
imul
add
lods
in
loop
inc
jge
push
push
push
push
lds
ljmp
arpl
gs
ret
je
adc
sbb
pop
mov
in
or
lds
fs
rolb
and
aas
push
mov
arpl
and
movsb
cwtl
je
mov
xchg
shr
mov
andl
cmp
enter
push
mov
jl
jbe
movsb
sub
jge
pop
jnp
popa
data16
aam
and
sbb
or
shl
inc
inc
cli
xorb
out
and
testl
add
or
xchg
loope
mov
cli
xor
into
jg
outsb
push
ret
cli
jno
dec
add
xchg
cmp
sub
sarb
cli
jb
push
je
and
popa
and
frstor
inc
xchg
inc
jnp
dec
cmp
aam
call
ret
sub
ret
ja
push
imul
and
mov
scas
mov
jle
xor
jae
mov
scas
mull
xor
in
ds
push
adc
mov
addl
xor
and
xchg
xor
dec
jnp
add
gs
xchg
imul
fstl
test
out
add
lods
and
test
cwtl
rcrb
mov
rol
push
mov
in
or
pop
shrb
sub
fdivs
inc
dec
les
mov
inc
cmp
dec
sar
jnp
mov
aam
out
subl
xchg
push
cs
add
jg
das
dec
xor
mov
cmp
pop
rcl
ss
fiadds
jb
aam
aad
lock
mov
mov
leave
popf
pop
mov
aaa
push
ljmp
movsb
jmp
inc
pop
xor
addl
dec
push
add
nop
pop
sub
divb
mov
pushf
std
push
add
nop
xchg
subl
loop
and
jle
aas
test
mov
sub
dec
mov
mov
or
xchg
inc
scas
fs
mov
iret
mov
or
sbb
push
sub
loopne
lahf
xchg
das
mov
loope
nop
xchg
pop
push
mov
mov
and
sbb
data16
aaa
frstor
jo
pop
pop
arpl
fsubrs
inc
ss
popa
mov
mov
pop
movsb
xchg
xor
nop
inc
xor
jg
dec
stc
popa
add
adc
mov
cmp
in
sbb
dec
ret
shl
arpl
icebp
mov
lock
mov
dec
xchg
les
and
rolb
cmc
mov
jae
jge
outsb
ror
jbe
xchg
mov
mov
jl
shll
cmp
add
add
pop
bound
jmp
or
repz
jle
push
pop
rol
and
rorl
lahf
shlb
scas
sarb
ljmp
adc
mov
and
ficomps
daa
adc
pop
ljmp
and
add
rclb
xchg
aaa
jnp
mov
push
fs
pop
cmp
aam
pop
fistl
adc
mov
mov
je
xor
jns
jns
adcl
xor
add
dec
fistl
add
mov
rcl
and
pop
idivl
loope
xchg
fsubr
add
loopne
fiaddl
ss
cwtl
mov
sbb
push
lock
jnp
jns
movsb
lods
in
rep
and
mov
sahf
xchg
pop
shll
lock
out
shlb
sub
cmp
mov
mov
adc
sbb
es
shrb
ret
lahf
test
les
in
inc
jns
sbb
adc
push
sarl
pop
aad
lahf
xchg
xchg
enter
xor
dec
pop
in
inc
sub
faddl
mov
andl
push
push
adc
jmp
sar
pusha
jb
movl
movsb
sub
nop
call
movsl
mov
insb
repnz
inc
cwtl
cmp
pop
push
adc
xchg
nop
insl
into
movsb
or
push
orl
mov
sub
rcrb
and
sbb
mov
push
adc
ds
jmp
xor
xlat
jg
aad
xchg
xchg
loope
test
jns
lods
inc
scas
xchg
and
les
and
mov
popa
adc
jb
test
pusha
push
cmp
subb
jp
bound
ja
shrl
bts
or
clc
add
xchg
fisubl
dec
or
bound
fucomip
sbb
inc
mov
and
add
insl
sbb
aad
ds
loop
int3
adc
das
add
popf
cmpsl
jbe
icebp
shl
bound
mov
movsb
add
aam
jle
cmp
lods
pop
inc
inc
xor
push
shll
jae
loop
imul
sbb
test
hlt
xchg
push
jnp
insl
lods
aad
stos
and
rorb
xchg
out
xor
mov
or
popa
gs
int3
sbb
and
ljmp
dec
xchg
js
inc
or
stos
push
nop
cmp
in
cmp
sub
call
lcall
mov
icebp
adc
inc
and
ja
ret
shll
pushf
mov
test
mov
mov
pop
shl
jge
nop
and
sbb
clc
insl
cmpsl
push
add
mov
add
jp
and
or
dec
pop
scas
push
and
add
in
xorb
hlt
out
jnp
adc
add
xor
bound
mov
add
js
arpl
sub
mov
movsb
out
adc
mov
mov
and
dec
inc
stos
or
pushf
iret
xchg
dec
dec
jb
mov
add
pop
inc
fimuls
jg
adc
rcl
shll
mov
xor
shlw
and
cltd
pusha
add
movsl
loope
ret
shll
push
loop
ja
jnp
pop
mov
int3
mov
pusha
pop
aaa
stc
les
lods
xchg
fwait
add
xchg
ret
imul
repz
loop
push
jo
shlb
sbb
lahf
pop
push
dec
loope
pop
ficoms
cmp
pop
jmp
jns
arpl
push
shll
pop
pop
shll
movsb
out
mov
mov
adc
repz
and
or
stc
cmc
jl
call
mov
xchg
aaa
pop
adc
and
cmc
dec
cwtl
mov
or
mov
jge
pop
cmpsl
loope
sub
pop
xor
ja
xchg
push
mov
jno
popa
inc
push
hlt
sbb
mov
popf
out
and
mov
xchg
xor
inc
outsb
out
je
xchg
and
aam
push
or
out
dec
sub
arpl
shrb
xchg
inc
xor
imul
pop
jne
xor
andl
push
sarl
jb
jl
aas
mov
jg
adc
les
loope
adc
inc
ja
jge
jb
push
add
sbb
popa
mov
xorl
dec
and
jmp
lods
rcll
mov
adc
inc
sub
cmp
pop
mov
pop
jecxz
inc
das
pop
lock
icebp
mov
rcl
and
adc
dec
pop
aam
jecxz
sbb
loope
dec
jns
lcall
lret
and
or
lcall
outsl
add
dec
pop
insb
out
cmpsb
inc
adc
xlat
out
dec
popa
addl
sub
dec
loop
add
es
mov
je
mov
jmp
push
xor
cmpsl
lahf
test
scas
insl
add
mov
and
mov
and
je
jecxz
sub
insb
js
inc
and
mov
test
inc
gs
xchg
das
in
mov
mov
rol
test
jmp
sub
ds
xchg
and
cwtl
xchg
push
jg
jb
dec
lock
loopne
sarb
push
xor
or
mov
pop
xchg
insl
sub
sub
mov
out
push
add
mov
mov
stos
mov
fldenv
andl
xchg
insb
or
add
jecxz
add
add
jne
push
sar
pop
aam
xor
fsub
cmp
in
pop
das
dec
push
xor
sahf
adc
loope
outsb
or
jo
lret
out
repnz
jmp
rcrl
mov
mov
inc
and
push
pop
sub
sbb
mov
jecxz
mov
shrb
xor
andl
push
stos
push
and
les
or
dec
xchg
inc
and
daa
divl
and
hlt
gs
cmp
sub
out
sub
dec
or
enter
int3
mov
or
xchg
jecxz
outsl
imul
pop
cmc
push
adc
cmpb
and
shl
sbb
cmpsb
mov
popl
int3
and
ds
mov
xchg
push
jnp
ja
xorl
and
inc
mov
xor
nop
pop
mov
mov
bswap
xchg
mov
in
hlt
and
test
fisubrs
hlt
scas
xchg
and
repz
loope
mov
and
notl
imul
inc
mov
sub
hlt
xor
jecxz
push
xor
inc
mov
inc
jle
mov
add
inc
out
jo
xchg
add
inc
jle
push
add
xor
test
incb
cmpl
sub
jecxz
call
jl
mov
shll
fucomip
mov
and
push
call
mov
mov
adc
dec
push
or
xor
add
cmp
cmpsb
dec
xchg
cmpsb
and
pop
call
fcompl
hlt
shlb
cmc
mov
dec
mov
loopne
and
int3
jg
aam
cmpsl
jle
dec
mov
lahf
pop
and
mov
sbb
repnz
cmp
dec
mov
xchg
rolb
imul
aam
lcall
aad
mov
push
std
ds
push
jbe
repz
shr
mov
cmpsb
movsb
lods
in
add
pop
cmp
test
sbb
fucomip
shlb
sti
add
and
mov
movsb
hlt
movsb
je
adcb
push
icebp
enter
rcrb
scas
test
dec
cmpb
and
sbb
xchg
cltd
outsb
movsl
aaa
push
xlat
loop
jecxz
and
or
fs
push
repnz
js
ror
xor
cwtl
movl
mov
and
xor
cmpsl
scas
repz
mov
aam
and
mov
jge
test
pop
cmc
sbb
jae
ret
jno
mov
jp
insl
lods
outsl
test
arpl
aas
int3
cmp
and
data16
js
fbld
ret
test
sub
je
mov
sub
push
mov
out
fwait
sarb
call
scas
adc
orl
add
and
cmp
inc
mov
mov
xor
fmuls
cmpsb
out
push
stos
shr
sub
jns
dec
inc
arpl
inc
cmp
loopne
and
dec
jo
fsts
fldcw
iret
int3
cmc
fcompl
leave
xchg
and
fisubrl
loopne
inc
dec
pop
mov
and
in
push
mov
mull
lcall
push
add
xor
pusha
add
mov
or
inc
sti
or
xorb
repz
cmpb
mov
mov
and
mov
push
cmp
mov
cld
loop
mov
lock
or
cmpsl
ffree
add
mov
jno
push
and
nop
in
dec
mov
dec
mov
aas
addb
call
arpl
daa
and
rcrl
lock
insb
hlt
fsubp
loope
in
fisttpll
ds
lcall
adc
add
mov
das
mov
repz
or
cmpb
addl
or
mov
mov
mov
pushf
or
ret
xchg
jecxz
imul
lods
mov
shl
arpl
mov
inc
jecxz
sub
push
movsl
sbb
add
jns
cltd
lahf
or
adc
pop
repz
inc
jns
lcall
fadd
mov
lahf
mov
adc
mov
idiv
fcoml
insl
fisubs
or
sahf
or
inc
inc
outsl
aaa
rcrb
xor
jne
dec
pop
jmp
mov
rol
aaa
negb
fs
mov
inc
sahf
jl
icebp
lods
pop
xor
out
mov
xchg
test
std
sub
jge
in
lret
mov
and
inc
aas
adc
dec
js
inc
sub
repnz
loopne
xor
mov
cld
arpl
fstpl
mov
mov
adc
pop
sbb
insl
xchg
test
out
xor
or
andl
push
jne
jno
mov
bound
es
pushf
and
rcr
nop
aam
dec
and
in
dec
xor
filds
dec
pop
shlb
cmp
xor
fcoml
add
inc
es
aaa
or
jnp
and
iret
pusha
jle
mov
mov
and
sub
lcall
and
sahf
int3
pop
jecxz
ret
mov
aad
sar
add
dec
fwait
test
jb
xchg
jecxz
sbb
push
movsb
shrl
pop
mov
add
fdivs
and
or
clc
fsubr
inc
and
jl
dec
jmp
testb
pop
ja
xchg
mov
pop
jl
and
xor
imul
add
enter
push
inc
mov
sub
mov
push
pop
ds
mov
insb
mov
inc
push
mov
and
pop
loope
push
and
daa
jbe
pop
pushf
shll
idivl
and
mov
cmp
popf
call
in
add
cmp
and
adc
xchg
aad
out
mov
daa
out
mov
xor
lahf
mov
adc
fsubs
xor
sub
sbb
mov
and
ret
dec
sbb
xor
pop
fildl
jae
dec
sub
fs
shl
sbb
inc
scas
aad
roll
mov
aad
or
mov
iret
push
mov
pop
sbb
push
js
adc
and
push
add
add
sbb
jno
mov
and
dec
lahf
xchg
jl
orb
ja
adc
arpl
bound
mov
xchg
jl
or
and
fbstp
test
xor
xlat
add
lods
jae
jle
mov
dec
pop
pushf
clc
andl
mov
and
sub
mulb
andb
insl
mov
shll
sub
fwait
mov
cmp
push
out
and
lret
xchg
xchg
jnp
gs
int3
mov
add
scas
orl
and
sbb
subb
fistl
std
push
pop
jge
sub
push
cmpsb
fwait
hlt
xor
mov
into
mov
and
lcall
neg
das
call
bound
ss
jl
loope
adc
xchg
or
and
dec
and
or
mov
jae
lret
inc
out
out
dec
mov
mov
fimuls
shll
fldt
inc
push
add
sub
jp
jle
xchg
andb
sbb
mov
ret
jno
mov
sahf
bound
and
lods
rorl
shl
xlat
lock
lret
shll
shl
je
adc
push
sti
lods
push
xor
sbb
ret
mov
sub
test
jl
and
xchg
dec
inc
shll
rcrb
roll
in
insb
and
sub
xlat
inc
inc
xor
adc
xor
sbb
insl
mov
xor
xchg
push
jae
and
fsubrl
subl
and
scas
sbb
sbb
mov
sub
popf
aaa
aaa
mov
sub
xchg
nop
push
push
mov
out
rcrl
sbb
mov
popa
inc
test
mov
xor
sub
mov
pop
out
mov
inc
add
in
mov
mov
and
cli
xor
aaa
iret
sbb
pop
push
add
xor
test
jecxz
push
jo
add
test
mov
daa
and
test
and
or
movsb
lods
imul
sbb
adc
jns
aas
pushf
add
mov
push
test
sbb
mov
jecxz
pusha
fsubrl
adc
mov
aad
mov
mov
inc
lahf
xor
in
iret
pop
inc
gs
into
and
add
movsl
add
and
xchg
ret
test
sub
ja
xor
test
rcll
je
adc
xor
test
ret
in
jo
push
mov
pop
cmp
outsb
enter
test
cmp
repnz
jns
sub
and
add
mov
mov
inc
out
gs
int3
lahf
out
subl
mov
imul
xchg
js
out
jbe
xor
sti
dec
fisttps
in
aas
sub
lds
mov
das
cmc
lods
push
jl
jecxz
push
loopne
out
add
fs
jmp
dec
loopne
adc
insl
pop
push
push
dec
mov
sub
imul
adc
pop
test
push
jecxz
inc
sbb
nop
shl
adc
inc
sub
sub
inc
jae
test
xchg
sub
mov
mov
pop
mov
out
stos
pushf
out
imul
popa
dec
sti
and
push
inc
mov
jbe
push
mov
nop
int3
xchg
arpl
jns
decb
stos
xor
sbb
inc
pop
push
xchg
cmpsl
sbb
sbb
repnz
inc
xchg
adc
test
cmp
push
pusha
je
mov
push
pop
dec
adc
movsb
test
in
mov
addr16
aas
fdivs
je
and
xchg
cs
adc
inc
and
movsb
pop
hlt
mov
lret
in
enter
mov
aam
sbb
mov
mov
add
daa
sbb
cmpsb
inc
adc
popa
mov
cwtl
xchg
shlb
mov
jno
add
jecxz
mov
and
sub
aam
mov
or
out
sarb
pushl
cmp
sbb
ret
push
pop
inc
mov
fldt
rcll
frstor
mov
adc
mov
jo
add
pushf
mov
scas
je
jmp
daa
sub
pop
int3
ficoms
add
cmpsl
test
insl
subl
into
ror
faddl
nop
loop
scas
mov
addl
inc
incb
mov
inc
mov
push
insl
dec
outsl
adc
test
sbb
cmpsb
push
sbb
lcall
xchg
xchg
xor
jg
ret
jno
sbb
sbb
push
stos
sbbl
push
iret
inc
in
ja
jns
shll
pop
scas
mov
xorl
jle
adc
adc
cmp
pop
iret
lods
and
in
rclb
push
xchg
cli
pop
pop
sbb
and
nop
mov
mov
lds
xchg
pop
fdivl
out
lcall
mov
loopne
mov
lods
adc
and
mov
and
dec
fisubrs
adc
call
imul
dec
lock
or
enter
inc
lcall
movsl
mov
jno
mov
sahf
les
mov
iret
mov
out
xor
loop
pop
aaa
lcall
push
test
rcrb
sub
and
pushf
push
lods
inc
pop
andl
mov
out
push
cmpsb
add
mov
mov
gs
pusha
push
fisubs
and
sub
and
stos
inc
sarl
mov
in
sub
and
or
mov
and
imul
mov
push
mov
mov
insl
jmp
sbb
test
in
dec
mov
fnstenv
push
test
adcl
and
iret
dec
movsb
imul
jmp
pop
test
leave
dec
mov
je
xchg
and
or
sub
imul
xchg
mov
or
fldcw
xor
adc
out
mov
data16
jno
repnz
jg
int
and
repz
mov
ret
xchg
and
insb
movsl
jecxz
pop
mov
into
shlb
and
scas
or
inc
das
js
jno
test
mov
or
mov
mov
adc
xor
dec
cltd
bound
rcrl
adc
and
jb
shrb
cmp
adcb
popa
cmpsb
mov
ficoms
addr16
loop
iret
or
aad
inc
xorl
add
mov
in
xchg
mov
mov
out
and
xor
and
ret
cmpb
pop
lods
push
pushf
imul
and
insl
xor
movsb
jb
xchg
sbb
add
xchg
mov
add
sbb
in
xchg
and
nop
cmp
xchg
in
test
push
lock
jo
mov
add
popf
lock
inc
cmp
mov
dec
shll
lods
jne
adc
mov
lods
addl
xor
mov
mov
or
mov
je
mov
xchg
push
lods
lahf
jge
inc
mov
add
fimuls
cwtl
hlt
xor
shlb
daa
in
sti
inc
out
mov
and
out
dec
mov
lods
rcrl
add
mov
mov
or
test
iret
mov
inc
loopne
xchg
dec
mov
mov
loop
mov
push
mov
pop
lret
xor
jb
and
jo
shll
lahf
jle
xchg
mov
arpl
shrl
adcl
test
inc
scas
roll
rcl
fsubl
or
or
das
scas
fildll
mov
pop
xor
and
aam
out
stc
int
mov
or
push
adc
xor
enter
shrl
fs
xchg
add
push
xchg
rorb
and
ja
or
scas
and
test
imul
bound
rcll
mov
and
insl
out
stos
hlt
mov
cmp
lock
jmp
insl
mov
bound
add
mov
dec
mov
pop
test
lock
jle
push
sub
fisttpl
out
js
andl
lods
rcl
test
mov
mov
cmpsb
xchg
add
bound
inc
mov
adc
out
dec
ljmp
sbb
cmp
bound
hlt
jno
iret
adc
std
xchg
lock
mov
push
in
mov
inc
lret
and
add
and
stc
je
popf
mov
push
cmpsl
mov
aam
outsl
je
pop
enter
push
xchg
mov
fidivs
mov
ret
mov
mov
push
shlb
lret
ljmp
xor
inc
mov
cmc
and
stc
aam
mov
and
ljmp
loope
push
dec
jns
sbb
pop
mov
xchg
mov
jne
mov
leave
insl
imul
mul
fs
loope
and
addb
push
adc
adc
into
hlt
jno
fs
jg
inc
dec
hlt
push
mov
dec
rcl
sbb
push
adc
push
jg
loop
mov
sub
and
cmpsb
movsb
inc
shrb
lret
loop
sahf
das
rcll
or
jno
add
and
and
sbb
negb
cmp
cs
cmp
sub
das
mov
jo
and
enter
movsb
mov
cmp
arpl
jns
mov
jecxz
fnstenv
fcomps
subb
sbb
xorl
cld
xor
dec
xchg
and
xor
jno
test
out
add
in
out
mov
xor
jl
ret
pop
mov
je
popa
cmp
dec
xor
xor
lret
stos
and
ljmp
ret
add
dec
inc
dec
rcrl
pop
aad
shl
shll
cmp
cmpsl
add
dec
or
fwait
add
popa
daa
pop
je
jbe
xchg
mov
and
cltd
sbb
push
mov
and
cltd
je
or
inc
and
fnsave
int3
clc
add
sub
addr16
and
sub
sbb
sub
inc
pusha
daa
arpl
in
xor
js
cmc
or
ret
xchg
mov
aas
fnstsw
xchg
xor
add
jb
xchg
mov
pop
jl
mov
cltd
mov
ss
rep
out
mov
aad
mov
idivl
xlat
add
xor
hlt
sub
out
inc
mov
fistl
mov
pop
loop
mov
cmp
sub
rolb
xor
lods
shll
jl
cld
add
sbb
pop
mov
push
out
int
jae
jne
push
add
mov
cmpsl
rclb
jmp
shrl
sarl
pop
hlt
sub
dec
inc
and
inc
and
fists
cmpsl
pop
dec
test
pop
add
pop
adc
and
nop
or
push
pop
sub
hlt
and
gs
push
dec
addl
inc
cmp
cwtl
mov
movsb
adc
lods
sub
arpl
sub
sbb
dec
xchg
pop
imul
dec
je
mov
divb
fsubrl
cmp
in
add
mov
cmp
shrb
int3
insl
in
test
mov
push
xchg
jno
paddb
mov
cmpsl
mov
dec
out
and
xchg
push
loop
and
and
cs
push
inc
dec
mov
jnp
test
roll
pushf
daa
lods
dec
stos
addb
mulb
icebp
test
jno
dec
aam
movsb
jecxz
int3
sub
add
movsl
or
or
add
outsl
xor
sbbb
push
sbb
test
sub
jle
loope
bound
cmpsb
sub
mov
or
enter
fistl
inc
movsl
fnstcw
pop
loope
mov
mov
fcompl
loope
subl
add
and
mov
fildl
xor
dec
dec
bound
sub
dec
popf
pop
xchg
xchg
xchg
fisttpl
jecxz
cmpsb
and
jmp
ret
aam
sahf
and
push
mov
das
lock
arpl
add
adc
xchg
pop
cltd
inc
pusha
js
mov
mov
adc
and
and
push
outsb
enter
bound
mov
sub
dec
and
pusha
jo
out
test
lods
in
fnstsw
repnz
lret
add
xor
outsb
loopne
push
dec
fs
mov
and
mov
mov
adc
xor
pop
bnd
or
icebp
loop
shrl
push
cmp
inc
pusha
test
push
pop
insb
jbe
out
and
rcll
push
fs
repnz
imulb
jae
sub
aas
nop
push
or
cmp
addl
sub
lcall
adc
sahf
lods
pushf
jl
cli
inc
mov
sahf
sbb
sub
fldt
and
or
jo
and
add
jb
call
fnstenv
out
movsl
adc
inc
incl
ficomps
or
pop
jb
subb
popa
test
jmp
pushf
and
inc
push
inc
xor
or
iret
add
mov
push
repz
cmp
cmp
add
loop
mov
xor
enter
mov
js
outsb
pop
repz
inc
sub
jle
xchg
dec
xchg
xchg
inc
pop
aam
leave
sbb
xchg
lea
fs
sbb
and
dec
test
in
dec
pop
and
imul
out
in
cmpsb
mov
xor
popf
adc
adc
jae
imul
push
pop
mov
inc
push
cli
add
sub
cld
xchg
sahf
insl
push
mov
ljmp
or
pop
test
in
xchg
repz
or
xor
sub
das
sbbb
push
and
adc
jecxz
jns
mov
aam
mov
sub
sbb
cmp
mov
or
cmp
xchg
inc
shll
cltd
insb
lret
xor
das
add
xchg
xchg
test
adc
inc
add
in
and
fwait
shl
sub
and
dec
js
push
push
xchg
push
mov
test
and
sub
adcl
xor
add
mov
hlt
dec
dec
into
mov
in
je
sub
cwtl
push
rorb
or
xor
test
sub
fbld
in
and
bound
inc
mov
mov
addr16
sbb
ret
shll
stos
push
sbb
js
jno
push
and
mov
sub
lret
push
iret
xchg
sub
sbb
adc
xor
or
and
outsl
inc
push
jecxz
loopne
repnz
sarb
addl
xor
mov
mov
push
call
lahf
pop
stos
mov
out
jmp
popa
add
adcl
movsl
dec
xchg
cld
hlt
xchg
loop
adc
pop
lcall
dec
mov
or
rcll
cmp
pop
insb
scas
sub
adc
jnp
jge
andb
loopne
mov
popa
and
or
test
sub
adc
shll
jle
inc
xchg
inc
xchg
movb
insl
test
add
aaa
dec
xor
mov
ret
inc
cmp
jle
sbb
push
repz
jbe
xchg
ds
dec
cwtl
xchg
xor
dec
das
jp
pop
dec
clc
mov
sar
movsb
jmp
rolb
mov
cmpsb
push
jo
push
and
bound
xchg
jecxz
and
inc
inc
xchg
inc
push
xchg
jge
mov
fdiv
les
mov
shlb
mov
mov
jno
push
testb
test
shrb
cmp
pop
icebp
xor
cmpsb
shl
pop
call
xchg
loop
mov
push
adc
mov
or
xor
clc
ja
cmp
in
add
lock
rorb
or
push
jmp
mov
dec
and
push
xchg
sbb
adc
sub
int3
test
mov
nop
out
mov
xorl
aaa
fidivs
mov
mov
xchg
ljmp
or
add
xchg
stos
mov
test
or
sbb
bound
mov
pop
repnz
testl
lods
loop
repnz
mov
sub
sub
aas
shl
xor
mov
pushw
push
and
dec
sti
cmp
loope
repnz
loop
cmp
mov
mov
xor
push
sbbb
sbb
jle
xchg
cmpsl
inc
or
adc
call
out
lock
lahf
mov
popf
insl
gs
js
mov
test
and
inc
popa
pop
inc
and
cmp
add
mov
aad
fdivl
mov
gs
cmc
jl
cmpsb
inc
test
les
outsl
mov
faddl
int3
inc
jle
shll
add
shrl
xor
daa
xchg
shrb
daa
and
aam
outsl
stos
adc
repnz
into
inc
add
scas
mov
fdivl
in
inc
dec
sar
mov
mov
insl
popf
std
rolb
popf
add
xor
mov
mov
stc
dec
inc
xor
or
repnz
mov
pop
loope
push
jge
xchg
xor
aam
xor
test
mov
pop
xchg
or
xor
stos
movsb
jno
rcrb
jge
and
pop
fstpl
jle
mov
xchg
test
mov
mov
lret
ret
mov
testb
inc
jmp
mov
dec
movsb
sahf
xor
jecxz
cmc
popa
xor
sub
popa
orb
mov
cmp
add
xorl
cmp
cmpb
sub
outsl
mov
mov
outsb
and
cmp
and
jo
jle
test
mov
inc
into
jp
loop
rcrb
data16
fbld
mov
daa
jmp
lods
js
adc
mov
cli
insl
fs
add
and
dec
nop
push
sub
aaa
popa
arpl
outsl
inc
cmpl
add
xor
mov
fstpl
mov
stos
repz
aam
push
out
add
jmp
js
add
and
inc
xchg
jge
fbld
xchg
lret
cmpsl
sahf
pop
and
or
ret
or
subb
mov
out
xlat
imul
pop
arpl
jo
mov
adc
push
mov
xchg
jecxz
and
jge
xor
bound
ret
insl
cwtl
addr16
xchg
aam
daa
add
aam
mov
and
fs
pop
xchg
in
jecxz
inc
sub
xor
or
insb
rcr
sti
add
stos
mov
mov
push
pop
fndisi(8087
aam
sarl
push
daa
pop
ds
cmp
insl
inc
and
sarl
pop
xor
sub
adc
inc
in
xor
add
mov
arpl
adc
jnp
mov
xor
push
cmp
pop
mov
sub
shlb
xor
in
xorb
rclb
cmpl
repz
and
xor
mov
xchg
or
shlb
arpl
xor
andl
mov
test
fdivs
or
add
mov
outsl
je
inc
xor
push
xor
and
call
and
in
loop
rcl
and
bswap
adc
ss
ret
outsb
call
push
and
jge
dec
loop
mov
iret
imul
adc
mov
loope
lret
sbbl
mov
hlt
aam
push
inc
xchg
lret
lret
out
pop
sub
xlat
add
and
cld
lea
cmpb
js
loop
popl
shrb
stc
mov
cmp
addr16
inc
xchg
sub
notb
sbb
or
popf
jp
and
call
xor
mov
sub
jg
int3
xor
sahf
jae
dec
xor
inc
or
mov
mov
shl
jbe
test
repnz
jge
stos
xchg
out
rcll
xchg
cltd
fists
into
xor
dec
push
adc
mov
add
xor
loopne
mov
sub
jmp
outsl
jo
add
repnz
mov
or
shll
loop
xchg
pop
decb
adc
cltd
and
jecxz
mov
in
and
sub
mov
inc
and
mov
or
mov
out
sbb
in
and
dec
rclb
dec
pop
out
mov
sub
xchg
loope
mov
sub
xchg
inc
jecxz
cmp
je
push
jge
out
pop
insl
les
and
lds
lods
movsb
add
shlb
push
push
pushf
jne
shll
dec
and
mov
xor
push
adc
test
dec
les
jb
in
add
mov
andl
pop
xchg
push
sbbl
jae
repnz
and
xchg
arpl
les
mov
add
dec
shl
or
jge
mov
xor
jp
and
xor
mov
cmp
cmpsb
bound
dec
xlat
cmpsl
push
and
testb
push
enter
clc
loope
mov
inc
dec
fdivs
jae
bound
mov
iret
shll
aad
mov
popf
jle
aas
and
mov
xor
and
mov
and
int3
dec
les
xchg
cmovnp
sub
pop
cmp
ss
mov
push
add
testb
andl
mov
loop
xchg
adc
mov
call
repz
sbb
jb
dec
pop
jg
jmp
and
adc
daa
jge
cmp
icebp
or
loop
xor
jg
and
pop
cmpsl
jb
in
cmpsb
insl
mov
add
cmc
cmp
movsb
and
fsts
insl
or
fcompl
mov
or
inc
pop
jge
push
lods
rcrb
enter
ret
add
sbb
subb
xor
fmull
dec
dec
testb
sub
push
xorl
pop
pop
and
pop
fsub
jno
out
cmpsb
mov
movsb
dec
push
adc
xor
out
cmpsb
adc
mov
imul
cli
xor
push
shl
mov
test
loopne
push
in
outsb
sar
jecxz
mov
adc
and
add
dec
test
dec
pop
insb
js
cmp
imul
mov
dec
divb
int3
call
push
xor
inc
mov
rolb
jmp
pop
rcrb
and
subl
adc
dec
mov
aas
pop
or
adc
notb
push
inc
fs
add
fadds
clc
jbe
test
push
popf
insb
cltd
mov
inc
out
xor
flds
inc
and
out
push
push
cmpb
adc
jno
sarb
add
xor
and
divl
addr16
repz
popf
arpl
insl
mov
sbb
js
movsb
icebp
inc
jnp
outsl
dec
push
jecxz
movsb
inc
inc
jb
xchg
addl
sbb
std
xor
andl
fstpl
jns
mov
lahf
and
fistl
stos
mov
ror
mov
loope
and
push
push
push
jge
xor
insl
inc
sub
jmp
aaa
sbb
rcl
and
or
pop
sub
sub
cli
sub
fincstp
jno
xor
or
jo
lods
add
gs
mov
push
repnz
loope
jbe
or
and
mov
push
sub
dec
lock
jnp
fcomps
mov
adc
test
out
push
in
dec
pop
rorb
aad
xor
in
ds
nop
xchg
and
cmp
insl
inc
jg
mov
ss
psubb
ss
shlb
outsl
popa
pushf
pop
mov
in
addr16
call
popf
out
loop
add
out
daa
mov
add
ror
aam
inc
mov
sub
or
arpl
add
int3
mov
shlb
sarl
loope
ja
outsl
mov
les
push
idiv
and
jle
push
mov
aaa
inc
or
xor
lret
int3
pop
inc
and
mov
pop
out
sub
aas
mov
xchg
xor
jg
sbb
aad
out
xchg
pop
fsub
mov
jo
cmp
sub
mov
loope
dec
pop
add
pusha
stc
add
mov
sahf
gs
nop
push
adc
dec
mov
mov
cmc
add
jg
jns
les
outsl
inc
adc
cwtl
jo
inc
sub
and
push
xor
xor
jmp
mov
in
cmp
cs
and
xchg
push
cmp
clc
repz
mov
lds
xorl
popa
push
jnp
test
and
cltd
pop
mov
inc
sub
mov
push
jns
dec
sahf
fsub
xchg
adc
mov
add
mov
icebp
lock
loopne
jo
add
sub
pop
adc
mov
ror
lods
test
mov
or
fs
mov
repnz
mov
jge
fwait
mov
je
mov
add
adc
in
pop
adc
push
and
xchg
sub
ljmp
out
jno
jl
sarb
mov
inc
mov
jae
mov
movsl
div
shll
and
mov
sub
pushf
stos
push
das
xor
inc
cmp
fnstenv
xchg
cmpsb
fstpt
in
sahf
xor
aam
and
into
int3
icebp
inc
adc
add
sub
jg
xchg
int
xchg
cmpsl
push
enter
adc
push
divl
outsl
mov
or
daa
pop
rcrb
and
or
and
dec
int3
mov
cmp
js
enter
mov
loopne
jno
cmpsb
test
scas
push
arpl
mov
scas
ds
dec
pop
mov
cmp
nop
mov
or
fnstsw
ds
xor
divb
mov
mov
rcll
scas
pop
scas
mov
jecxz
inc
xchg
iret
cwtl
divb
nop
dec
jno
in
scas
and
pop
insb
outsb
sub
xor
inc
clc
xchg
add
push
cld
divl
mov
hlt
arpl
ret
push
mov
lock
add
imul
pop
dec
inc
movsl
mulb
in
jge
jno
pop
hlt
xchg
dec
mov
xorb
movsb
popl
inc
pop
ret
mov
dec
push
repnz
pop
cmp
push
jno
adcb
and
cltd
aam
xor
push
push
and
icebp
adc
rorl
rclb
adc
pop
push
int3
hlt
lret
ret
xor
or
fucomp
icebp
and
aas
cmp
add
mov
mov
mov
jno
lea
idivl
push
stos
lretw
pop
repnz
inc
mov
dec
out
js
jae
popf
fcompl
xchg
xchg
loop
stc
jb
adcl
xchg
push
mov
shll
int3
inc
mov
sub
push
shrb
sbb
lret
sub
mov
fstpl
js
add
pop
mov
lock
sub
dec
mov
jno
jmp
and
push
xchg
rcrl
shll
jb
aad
mov
sub
lods
loope
clc
je
lock
push
into
mov
ds
addl
or
clc
repz
push
push
loope
mov
adc
test
dec
sbb
and
in
dec
inc
inc
xor
adcl
xchg
mov
or
outsb
enter
nop
shlb
loop
ret
add
inc
lcall
test
push
addl
mov
push
adc
adc
jle
mov
cmpsb
xchg
subl
subl
push
in
in
xor
stos
xor
inc
and
je
push
push
rorl
inc
xchg
mov
jno
fisttps
pop
lods
cld
jecxz
adc
push
rcrl
cmpsl
arpl
xchg
mov
repz
and
jmp
mov
sub
adc
fldl
xor
fs
in
mov
jno
add
push
inc
mov
int3
data16
popa
mov
roll
out
xor
popf
xchg
jae
cmpsb
sub
cmpsl
stos
adc
jbe
inc
inc
sbb
jle
call
push
jnp
std
add
lods
inc
idivb
insl
jne
out
mov
add
leave
loope
out
push
loop
lcall
ds
cwtl
push
shrl
cld
inc
sub
les
sub
jne
addl
and
ret
lods
cmp
shr
jno
mov
inc
and
or
push
push
cmpb
dec
adc
add
jo
and
aam
fstpt
out
mov
push
xor
mov
add
push
pop
xchg
movsb
mov
call
int3
jno
ret
ret
sar
sbb
bound
rclb
ss
pop
roll
andb
fdivrp
fstl
and
bnd
mov
rorl
adcl
rclb
dec
sahf
inc
ljmp
arpl
sbb
ret
push
mov
lret
sub
and
loope
stos
cs
loope
mov
push
xor
push
and
mov
gs
pusha
mov
daa
jo
stos
mov
xchg
je,pn
lods
push
sbb
enter
and
cli
mov
int3
inc
jecxz
push
sbbl
and
in
test
pop
jg
cmpsl
inc
cmp
mov
and
pop
mov
and
cmp
or
mov
and
dec
popa
idivb
xor
cmpb
sbb
repz
cmc
aam
xchg
xchg
push
faddl
call
in
aaa
imul
push
orl
shr
bnd
push
cld
cltd
decb
lock
jno
imul
cli
jbe
js
add
xchg
jg
mov
mov
pop
das
inc
shrl
add
xor
fsubr
jecxz
das
jo
shll
ja
inc
out
push
imul
loope
dec
loope
repnz
or
and
sbb
pop
mov
in
aad
mov
fwait
scas
test
and
mov
jg
loope
xor
insl
dec
or
std
shlb
popa
and
cmp
movsb
add
sbb
mov
mov
mov
add
or
adc
stos
xor
cmp
pop
test
shll
sub
inc
dec
movsb
pop
mov
insl
push
fidivrs
add
loop
out
pusha
xor
push
adc
rclb
cmp
mov
mov
ret
or
mov
insb
push
xor
arpl
je
aaa
cwtl
and
pop
mov
and
lods
test
cltd
adc
mul
adc
sub
out
add
out
and
jb
iret
mov
mov
sub
cltd
loopne
pop
hlt
xchg
mov
pop
pop
ss
xor
enter
sub
dec
sbb
repz
cld
inc
cs
mov
movsb
jo
dec
aad
je
xor
fstl
mov
mov
enter
loope
in
pop
mov
loop
in
cmp
pop
push
add
cli
lock
inc
mov
loop
out
and
pop
paddsb
sbb
xchg
int3
ret
shlb
scas
add
xor
cmpsb
push
mov
and
notw
pusha
add
and
mov
and
ja
mov
ret
insb
fsubrl
pop
fmuls
xor
lret
mov
mov
mov
mov
jp
imul
mov
lds
idiv
mov
insl
lahf
jg
mov
cli
dec
jge
jg
cwtl
jnp
aad
cmp
or
in
popf
call
dec
mov
jg
pop
and
test
pop
js
lahf
outsl
adc
scas
add
hlt
mov
push
cmpb
in
in
push
push
cmp
jecxz
pop
movsl
repz
and
and
inc
xchg
xor
add
mov
sub
jne
and
rolb
fisubs
add
push
adc
mov
and
mov
fistps
inc
out
movsl
bound
aas
mov
inc
sbb
call
gs
push
mov
lahf
and
xor
stos
xchg
sbb
mov
dec
cwtl
fldl
rcll
adc
cmpsb
add
cwtl
in
fnsave
mov
in
sbb
ret
dec
sbb
pop
dec
adcl
aam
mov
mov
shll
mov
jo
and
sbb
xlat
inc
xchg
ret
hlt
js
xor
inc
xchg
test
xchg
add
out
cmp
clc
and
mov
test
push
pop
sbb
loop
xor
push
adc
ljmp
filds
arpl
mul
mov
sub
int3
stos
jecxz
pop
inc
roll
decl
add
xorb
and
clc
enter
sub
mov
mov
xor
rcll
mov
fldl
mov
gs
xor
jns
add
and
rcl
xchg
test
shlb
or
cmpb
mov
or
hlt
inc
addr16
pop
push
int3
xor
and
mov
or
test
sub
ja
mov
mov
inc
xor
jne
jg
in
ret
sbb
push
mov
inc
test
andl
jo
and
and
outsb
popa
orb
push
sti
jle
and
add
pushf
ret
xlat
popa
or
cmp
jb
mov
or
gs
lahf
jb
out
mov
shlb
cmpsb
sbb
in
inc
pop
fldcw
cmpsl
inc
inc
sbb
jl
xor
pop
dec
mov
and
or
movsb
adc
jno
push
out
jg
add
cmp
and
sbb
mov
add
pop
xlat
adc
in
orl
mov
gs
repnz
push
lock
sub
and
pop
out
sub
mov
push
je
inc
insl
iret
outsl
out
xor
pop
cmpsb
cld
rep
movsb
xor
imul
mov
fld
sub
out
aad
cmp
mov
mov
addl
xor
les
mov
sbb
push
xchg
inc
icebp
pop
adc
lcall
ret
add
les
nop
mov
mov
mov
and
mov
frstor
sbb
rolb
and
fstps
dec
jb
ss
sahf
bound
mov
leave
push
sub
push
push
and
roll
cltd
xor
add
inc
ret
inc
lahf
sub
adc
jg
mov
mov
nop
and
lods
flds
aas
ja
shll
scas
pushf
dec
int3
cmp
and
add
xchg
loopne
or
push
xchg
inc
inc
mov
mov
inc
pop
xchg
mov
popf
pusha
movsb
mov
jmp
xorl
fldl
or
or
jae
mov
inc
data16
test
ret
sub
or
xor
stos
in
and
outsl
jo
and
cmp
andl
jns
cwtl
imul
repnz
inc
push
inc
xor
dec
repnz
loope
std
hlt
aaa
imul
and
pop
jg
push
inc
cmp
popf
nop
nop
adc
dec
cltd
mov
daa
jp
out
xlat
fimuls
sbb
xor
xchg
ss
or
mov
mov
repnz
fndisi(8087
inc
add
dec
aas
mov
and
xor
cmp
sbb
out
lcall
sub
jl
mulb
fstps
cmp
sub
mov
push
popa
and
lahf
jae
pop
mov
movsb
xor
pop
iret
xor
sub
test
sub
and
xchg
call
rorl
shlb
jno
mov
repz
aas
and
add
bound
push
repnz
mov
movsb
aad
pop
xchg
addb
jae
add
fcompl
mov
adc
xchg
sahf
ja
add
dec
sbb
and
sub
js
add
sub
dec
dec
nop
push
inc
ss
and
push
bound
test
popf
mov
pop
lock
inc
movsb
add
addr16
jo
mov
adcb
push
add
xchg
popa
xor
pushl
and
mov
je
push
loopne
test
sub
movsb
mov
shlb
insl
xlat
xchg
add
icebp
and
out
adc
sti
xor
daa
mov
pusha
push
test
xor
adcl
xchg
push
insl
and
add
out
movsl
push
xchg
je
sbb
ret
sub
add
and
or
jno
push
aam
dec
call
xor
adc
insl
xor
push
test
adc
jle
sbb
mov
fstp
nop
data16
add
in
xor
loope
jmp
loope
fnstenv
mov
pop
mov
pusha
mov
fnstsw
mov
xchg
mov
bound
popf
sahf
cmp
inc
pop
mov
ds
mov
lods
rcll
mov
add
inc
aas
adc
inc
fwait
std
jmp
test
xchg
cmpl
xchg
test
in
loope
add
insb
mov
mov
repnz
int3
mov
movsl
and
insl
popf
push
sbb
dec
ljmp
test
into
xor
push
jmp
or
imul
scas
jo
inc
adc
push
cmovge
dec
aad
push
and
push
jmp
mov
adc
test
fstpl
addr16
push
or
ror
popf
sub
and
and
movsb
inc
mov
dec
pop
adc
xchg
xor
fnstsw
fistpll
jbe
mov
rcrl
loope
aas
out
cli
xchg
ja
add
and
dec
scas
aam
jecxz
nop
jge
jp
bound
inc
xor
loopne
movsb
or
dec
flds
push
movsl
push
mov
pop
add
inc
xor
or
sbb
pushf
shlb
mov
jmp
fstpl
jno
and
inc
xlat
cwtl
outsb
xchg
jle
and
test
cld
dec
mov
jg
and
lahf
les
or
enter
adc
leave
out
cmp
xchg
push
out
xchg
daa
iret
lret
push
sub
std
mov
and
enter
pop
test
push
lret
pop
movsb
ret
popf
aad
mov
inc
sbb
ror
cld
mov
loop
push
lret
ret
inc
mov
mov
daa
loop
add
addl
sbb
int3
fsubr
loop
paddq
movsb
push
jg
lods
mov
push
mov
je
xchg
push
hlt
cmc
pusha
lcall
pop
jnp,pn
xchg
and
adc
mov
imul
js
push
in
lods
dec
aad
mov
gs
les
frstor
hlt
cltd
or
mov
lods
addl
push
addl
fisttpl
loop
jo
inc
pop
inc
adc
bound
mov
adc
iret
popl
push
and
fcoms
mov
loope
movsb
movsb
lahf
popa
lret
popf
jle
sub
mov
rorb
and
cmpsl
jb
in
repnz
mov
mov
outsb
in
jns
pop
jle
shl
in
addb
je
into
or
and
jae
popf
stc
xchg
mov
xchg
jmp
imul
rolb
jno
inc
mov
add
lret
and
jmp
aam
popf
fstps
jg
sub
lods
test
pop
inc
mov
ret
sub
andb
adc
or
xchg
sbb
sub
push
dec
int3
mov
insl
pop
shl
push
adc
sub
or
call
jge
pushf
push
mov
loop
xor
add
out
mov
jno
rcr
scas
mov
repz
pop
jo
jbe
ljmp
and
aas
sbb
test
mov
inc
popa
jl
sbb
sub
test
pop
cmpsl
call
mov
mov
les
rcr
push
bound
leave
adc
popf
jg
lds
aas
outsl
shl
lret
test
repz
add
flds
mov
pop
mov
int3
inc
sub
mov
sub
in
xchg
xor
mov
ret
jecxz
repnz
mov
hlt
popa
and
out
das
test
mov
inc
in
mov
adc
iret
jle
mov
xor
std
and
fdivl
mov
ret
push
bound
push
dec
cs
movsb
out
clc
pop
mov
aas
sbb
frstor
data16
out
jmp
mov
inc
stos
scas
xor
out
sbb
shlb
mov
mov
mov
push
inc
mov
fdivl
rorl
out
sahf
sbbl
adc
fsubs
jge
ss
dec
pop
push
in
inc
loopne
out
sub
mov
aam
xchg
shrb
jno
rolb
fs
fdivp
inc
shrb
pop
push
mov
ret
iret
push
icebp
cwtl
sub
sbb
aad
sarb
aam
adcb
popf
fists
or
sti
mov
xchg
filds
mulb
stc
fwait
jg
xchg
jno
popf
ret
fisttps
inc
mov
inc
and
jne
pop
mov
and
cmp
cli
mov
in
leave
dec
test
icebp
mov
lcallw
test
push
jle
pop
and
pop
add
in
and
mov
lahf
js
xor
sar
sub
mov
repz
inc
sub
mov
dec
push
int3
jmp
dec
xor
mov
or
das
or
xchg
and
std
pop
fs
ret
sub
inc
pop
add
sub
push
sbb
mov
in
sbb
and
jp
pop
mov
and
inc
and
xchg
jle
and
call
loope
xor
pop
mov
mov
cmp
pushf
xlat
mov
pop
stos
sub
adc
xor
jns
pop
jmp
bound
cmp
push
ja
push
and
out
gs
les
sahf
and
mov
ss
fstpt
jecxz
and
pop
mov
xchg
push
loopne
add
jmp
xchg
rclb
and
aam
shrb
ja
push
fstl
inc
ret
mov
push
sub
add
jb
repnz
mov
repnz
sbb
loop
stos
xchg
mov
dec
push
orl
cmp
cmp
repnz
xorb
lods
inc
shrl
xchg
xchg
push
push
mov
fimuls
push
pop
mov
loop
in
mov
dec
xchg
or
mov
pop
outsl
jnp
xor
in
lea
stc
cmp
xor
pop
xchg
and
gs
or
adc
dec
jne
xchg
pop
flds
lock
sti
aam
jmp
and
movsl
pop
dec
cmpl
test
xor
push
xlat
loope
sub
xor
inc
pop
int3
mov
imul
stc
cld
ret
mov
add
xchg
jecxz
adc
les
push
and
jo
ja
pop
cwtl
lods
popa
inc
mov
xor
xor
add
sub
ds
adc
jecxz
sarl
hlt
sub
adc
jge
mov
pop
outsb
filds
xor
jle
push
and
in
clc
mov
cmp
lock
and
bound
and
repz
lods
lahf
xchg
jae
andb
add
aaa
jbe
adcb
pop
pop
sub
cs
rclb
mov
je
andl
int3
imul
mov
pop
mov
gs
shlb
and
ljmp
xor
nop
les
fnstsw
push
dec
push
loope
add
mov
xchg
das
aam
movsb
scas
inc
les
in
push
add
scas
mov
sub
and
and
jno
insb
lds
ret
das
aam
sbbl
fcomp
jmp
mov
sbbb
int3
push
jecxz
jb
and
and
repnz
adc
mov
inc
sbb
adc
dec
andl
shr
adc
and
cmp
mov
jle
dec
pop
ret
jne
push
cmpsb
lods
xchg
jg
subl
arpl
mov
jnp
test
adc
xor
shlb
push
sbb
inc
lock
inc
cmpsb
mov
in
jge
add
andb
push
shlb
add
push
lret
ja
inc
enter
out
in
cmp
xor
sub
popf
in
and
mov
adc
add
out
and
jnp
stos
ror
aam
sub
inc
dec
lret
js
push
in
inc
mov
jecxz,pn
pop
mov
cli
mov
push
xor
mov
sub
or
lds
sub
lock
ds
sub
mov
and
push
inc
jne
adc
pop
cmpb
jecxz
iret
or
or
mov
in
xor
mov
cwtl
adc
mov
sarl
adc
out
adc
xor
sbb
cmp
inc
add
pop
sbb
mov
jns
cmp
or
jns
out
add
imul
adc
int3
nop
inc
pop
in
iret
out
das
insl
dec
icebp
shl
fstpl
jne
cmpb
add
lret
rol
cmpsl
jo
push
loope
das
std
mov
inc
jne
nop
pop
cmpsl
and
ja
jecxz
loop
insb
mov
mov
int3
xor
jp
mov
jns
imul
popf
jge
cmp
push
mov
shrb
jmp
subb
scas
xor
cmpl
int3
dec
les
repnz
push
sarb
shll
sub
pop
sbb
inc
sub
mov
cmp
sub
cmp
sub
aas
ljmp
fwait
dec
fxch
shll
mov
push
adc
jge
add
dec
aad
adc
loopne
stc
arpl
not
ret
and
jmp
mov
lcall
and
xor
loope
sub
cmp
jbe
pop
jge
shll
mov
mov
aad
test
adc
push
and
xor
and
imul
xchg
mov
xor
repnz
mov
xchg
jb
and
or
addb
jbe
arpl
daa
add
popf
and
add
add
lret
mov
je
xchg
mov
xchg
movsb
shl
hlt
jge
ljmp
sub
fcmovnb
pop
insl
in
les
mov
lods
popa
incb
adc
push
and
outsb
or
icebp
dec
mov
pop
test
imul
jp
pop
lds
popf
xor
jnp
lea
pop
test
mov
sbb
and
jp
data16
sbb
xchg
test
xchg
mov
lahf
leave
mov
cmpsl
cld
mov
cmp
jae
push
xlat
mov
xor
cmp
in
or
incb
pop
inc
inc
in
enter
push
movsb
jmp
clc
inc
dec
fcmovnb
aas
xchg
inc
sbbb
jae
mov
clc
mov
sub
clc
jmp
mov
push
imul
loope
popf
sarb
and
jno
jb
repz
cmp
lock
xchg
loope
gs
jno
movsl
scas
and
pusha
int
shrl
jl
add
sub
pop
pop
sub
sarb
popa
push
out
imul
jecxz
adcl
mov
cli
push
mov
mov
inc
pop
xchg
insl
dec
and
cmp
repz
mov
xor
or
jne
jb
adc
gs
popf
inc
pop
loope
mov
ja
jecxz
nop
jns
imul
adc
cld
add
movsl
sub
ret
arpl
stc
xchg
xchg
mov
shr
pop
orl
push
xchg
call
pop
repnz
shrb
push
and
mov
outsl
call
notb
mov
test
xchg
aam
stos
mov
aad
mov
jno
pop
mov
out
fnstsw
int3
xor
idiv
pop
nop
in
jae
iret
rolb
xchg
insl
mov
je
sub
sbb
mov
mov
inc
int3
mov
sub
mov
and
and
daa
pop
or
les
leave
fcmovnbe
mov
and
and
inc
ss
mov
iret
xor
loop
push
add
mov
mov
lcall
insl
enter
add
add
popf
or
nop
jp
xor
je
xor
mov
cltd
arpl
ss
aaa
sub
shl
and
lea
repnz
lods
sub
sub
and
xchg
adc
xor
shrl
pop
mov
and
ret
arpl
sbb
icebp
shrl
xor
xor
and
jmp
mov
fldcw
ret
test
je
pop
xor
jge
imul
lahf
rorb
add
loope
sub
cmpsw
je
jp
and
sahf
add
dec
sahf
enter
xchg
aad
or
mov
test
push
sub
clc
out
xor
and
cld
shll
mov
in
pop
jl
xor
in
sbb
lds
int3
push
jecxz
dec
mov
jle
aad
je
mov
inc
xor
lds
rol
popa
or
hlt
inc
and
fisttpll
xchg
out
sub
popf
pop
and
mov
mov
pop
mov
mov
popf
ret
ret
bound
push
rolb
mov
xor
or
mov
sub
mov
rolb
or
mov
xchg
and
sub
and
loopne
stos
nop
jg
mov
inc
mov
and
insb
xchg
mov
test
cmp
adc
pop
cmp
daa
scas
push
lods
clc
jecxz
xor
imul
adc
dec
das
mov
stos
and
dec
push
repnz
test
int3
insl
out
data16
jge
push
push
ret
inc
mov
adc
rcl
rcr
cmp
imul
sarb
rol
loope
xchg
xor
movsl
sub
push
mov
adc
test
xrelease
mov
test
mov
roll
xor
stc
mov
sbb
mov
negb
push
xchg
and
jb
loopne
loop
sub
lods
mov
or
jne
icebp
mov
xor
pop
mov
add
pop
dec
lret
shll
test
push
ret
pop
inc
sbb
ljmp
dec
sub
xor
jns
fisubrs
lret
test
xor
sahf
loopne
sti
xor
xchg
rorb
add
pop
out
out
jb
mov
adc
push
cs
pop
mov
inc
cli
mov
xchg
sahf
mov
rolb
sub
js
jb
mov
sti
push
or
and
testb
adc
addb
test
inc
cwtl
pop
in
call
inc
mov
mov
call
and
inc
mov
jmp
xor
in
ret
xor
adc
addb
push
mov
mov
dec
enter
xchg
mov
fcoms
mov
leave
adc
push
loop
dec
in
fidivs
push
imul
mov
and
lret
and
dec
scas
mov
and
xlat
adc
notl
mov
mov
dec
xchg
mov
sub
jae
mov
xlat
mov
push
lahf
out
lret
inc
movsb
jne
icebp
aad
jae
loope
je
push
out
add
insb
gs
addl
inc
pop
jmp
cltd
xor
and
popf
test
mov
in
fisubrs
mov
mov
test
dec
bound
andb
scas
adc
jb
sbb
xor
leave
inc
int3
inc
xor
loopne
xchg
popa
arpl
adc
push
jge
js
pop
and
mov
enter
sbb
in
push
push
xor
jg
gs
dec
fldl
shlb
or
xchg
mov
shll
lods
fistpl
fidivrs
jecxz
ret
inc
inc
pusha
mov
push
in
add
mov
add
repz
scas
xchg
and
jp
inc
test
jmp
js,pt
and
add
popf
roll
pop
adc
sub
mov
leave
aam
loopne
add
mov
lea
xchg
xor
shlb
loopne
xor
dec
pop
loope
jmp
inc
sbb
aas
jge
pop
adc
outsl
xchg
and
pushf
fldl
pop
pop
dec
loope
shlb
inc
bnd
je
andb
decb
popl
call
movsl
add
hlt
inc
cmp
in
mov
ret
out
adc
movsl
push
je
push
and
pop
loop
dec
cmp
xor
aaa
fcoml
out
cltd
lods
mov
shrl
mov
and
ss
out
cmp
sub
and
and
inc
addr16
inc
jb
push
cli
add
roll
js
test
mov
push
dec
mov
sub
aam
adc
shll
cmpsl
repz
and
icebp
and
add
sub
jb
mov
jo
xchg
dec
push
mov
hlt
aam
lods
cld
xchg
or
call
in
icebp
sub
std
mov
inc
movsb
imul
pusha
sbb
dec
jno
fildl
inc
sbb
jg
xchg
inc
sub
fsts
cmpsl
icebp
push
or
je
and
loop
and
or
sub
jp
mov
flds
cmp
xor
sarl
rolb
sub
mov
sbb
int3
and
cmp
fdivs
mov
and
stc
in
adcl
lcall
xor
into
mov
adc
ja
dec
lret
les
push
setns
loope
cltd
dec
loopne
fsubrl
clc
mov
pop
sbb
rcll
inc
jmp
enter
push
in
leave
sub
adc
inc
in
and
sbb
ror
andl
ror
movsl
mov
sub
jge
shrb
push
cmpb
andl
mov
add
xor
jp
mov
pop
insb
je
mov
inc
fadd
push
jmp
negb
jb
inc
arpl
jo
mov
movsl
ja
data16
cmp
push
inc
outsl
xchg
and
inc
fiadds
mov
lds
nop
xor
or
rcrl
push
and
outsl
pop
lret
and
push
xor
rol
adc
pop
ret
add
jmp
jo
arpl
push
adc
mov
dec
xorb
clc
imul
mov
jecxz
add
add
mov
andl
sbb
inc
inc
out
mov
add
jno
or
in
loope
hlt
jns
lret
js
and
xor
xchg
stos
cmpsb
ds
rclb
or
jecxz
dec
jo
rcll
cmp
pop
xorl
xor
lcall
stc
lret
push
jge
arpl
add
xor
mov
ret
lods
jl
and
call
xchg
clc
jno
aad
push
mov
pop
aaa
xchg
ss
adc
ret
jmp
fdivrp
inc
xchg
orb
rcrl
and
stos
loope
aad
loop
push
mov
dec
aas
ss
mov
and
cwtl
adc
and
add
mov
test
xchg
lods
xor
arpl
mov
rclb
push
pop
in
in
inc
mov
xchg
imul
cmc
mov
int3
dec
xchg
icebp
xchg
and
sahf
test
or
mov
sahf
or
sarb
cmpsb
adc
nop
lods
mov
cmp
incb
xor
in
pop
sbb
lahf
cmpsb
aad
jmp
pop
mov
sub
mov
mov
lret
and
rcrl
xchg
lods
sbb
pusha
in
add
test
sub
and
xor
or
jnp
pop
pop
add
out
xor
roll
rcrl
pop
sub
adc
xor
adc
scas
aas
jmp
push
xor
pop
pop
and
ja
pop
mov
xor
inc
inc
inc
cmpsl
loopne
xorl
clc
sbb
and
pop
cmpsl
xchg
xor
lds
and
rcrl
lock
add
adc
jecxz
cmp
test
and
push
add
inc
push
jbe
jbe
add
test
clc
cmp
jmp
in
outsb
addb
and
adc
mov
nop
in
jae
repz
setg
push
out
sti
inc
and
cmp
add
adc
sbbb
roll
mov
push
dec
jl
xlat
and
stos
push
xorl
das
jo
pop
adc
push
inc
sbb
mov
jl
mov
and
mov
push
mov
and
je
andb
mov
push
inc
shrl
cs
repnz
or
sbb
or
and
hlt
jge
popa
mov
in
add
adc
push
fs
sub
lret
jg
sbb
sub
jle
insl
insl
movsb
inc
mov
xchg
xor
and
add
insl
pop
aad
aad
je
xor
jns
in
jae
andl
lea
ja
mov
inc
std
inc
jnp
and
rolb
outsl
out
pop
shrb
cmp
loopne
mov
and
loope
sub
xchg
inc
sub
lahf
or
push
repnz
push
push
and
cmp
adc
testl
push
aam
loopne
jmp
xor
mov
pop
dec
xor
xor
insb
mov
mov
lcall
or
gs
mov
je
sub
test
les
mov
nop
mov
mov
jmp
add
loope
inc
xchg
mov
lods
and
in
mov
cmpsb
lds
and
lods
js
xor
inc
pop
jl
add
and
adc
movl
test
dec
inc
jnp
loop
xchg
jno
cmp
xor
pushf
xchg
adc
and
addr16
sub
imul
sub
xor
push
xor
pushf
clc
shll
popa
and
pop
push
repz
jbe
arpl
xor
dec
call
lods
pmaxsw
gs
in
xor
mov
xor
rcrb
popf
jnp
sub
cmpb
dec
mov
test
test
adc
xchg
mov
je
jmp
aaa
idiv
fmull
imul
cs
mov
jmp
adc
mov
adc
pop
idivb
sahf
mov
inc
jb
jb
push
xor
pop
outsl
and
icebp
sbb
je
mov
test
sub
mov
loop
popf
call
add
rol
fs
and
lret
lcall
push
cmpsb
mov
add
xchg
mov
cmc
inc
nop
inc
and
stos
sub
add
andb
inc
push
add
push
mov
sbb
lds
mov
rorl
jge
mov
in
cwtl
lods
imul
jae
mov
adc
mov
int3
imul
cmpsb
add
subl
shlb
jle
movsb
mov
mov
pop
lock
xchg
dec
mov
andl
jb
or
into
jecxz
jbe
pop
cli
mov
je
movsb
push
pop
movsl
cmp
sti
push
add
rcrl
xor
mov
and
xor
adc
sbb
insb
sub
int3
out
les
cmp
jb
inc
sbb
lods
lret
jne
rolb
shrb
inc
loopne
pop
pop
or
js
inc
dec
sub
roll
and
jecxz
push
mov
iret
add
aam
and
jg
repz
hlt
pop
sub
insl
and
ret
xlat
clc
sub
push
inc
js
xchg
and
call
mov
add
mov
inc
leave
stos
add
adc
lods
adc
loopne
jl
shrb
test
pop
gs
or
mov
bound
xchg
iret
jmp
and
or
in
or
jno
cwtl
pop
mov
jb
lock
adc
sahf
stc
roll
movsl
sbb
repnz
lcall
add
mov
xor
ds
push
popa
inc
clc
xor
imull
push
jno
movhps
pop
cs
cwtl
mov
xchg
ret
rclb
ds
mov
inc
or
or
dec
add
test
inc
hlt
xor
mov
shlb
nop
push
mov
mov
aad
fwait
adc
hlt
mov
shrl
dec
call
inc
and
push
sahf
mov
and
xchg
xor
push
and
jg
dec
test
das
ret
and
xor
data16
aaa
and
adc
imul
andl
hlt
xchg
cmpsl
imul
and
in
and
xchg
shrb
movsb
pop
push
aas
mov
je
ja
icebp
xchg
mov
sub
mov
xor
push
and
pop
jae
xor
push
cmp
aam
mov
pop
test
xor
jl
repz
pop
push
mov
and
lret
jle
jb
shrb
fmull
adc
pop
shll
in
hlt
and
ds
add
test
sub
cmp
mov
outsb
mov
roll
sti
mov
mov
mov
xor
cli
mov
mov
jne
out
andl
push
loope
test
jns
adc
rolb
xor
int3
rcl
stos
sub
mov
add
xchg
mov
idivb
dec
in
push
dec
out
fcomp
data16
jae
pop
negb
loope
ja
out
mov
mov
nop
jl,pt
mov
pop
mov
sub
cwtl
jl
or
xchg
xchg
aad
cmp
jo,pt
adc
mov
outsl
repnz
mov
in
pusha
and
xchg
add
mov
rcl
xchg
inc
leave
sbb
lahf
mov
xor
pushf
test
inc
orl
nop
rcl
loope
cmc
jo
ret
sbb
add
jl
imul
push
push
and
rolb
push
dec
lret
rclb
fstpl
or
loopne
xchg
fisttpll
add
cmpl
inc
outsb
ja
mov
sub
dec
mov
inc
movsl
xchg
call
adc
test
push
inc
fs
movsb
lret
jge
popf
out
adc
inc
pop
push
xor
and
dec
js
add
and
sub
push
jo
or
rcrl
aaa
mov
mov
add
sarb
in
hlt
jns
dec
xor
dec
cld
sub
jg
enter
pop
and
mov
iret
mov
fisubl
fistps
cmpsb
xchg
add
enter
jl
pop
mov
out
call
jmp
lods
and
popa
dec
repz
or
add
sub
push
push
bound
cli
aaa
daa
aam
fwait
and
adc
push
and
sub
loop
mov
fiadds
jl
mov
and
push
adc
and
jge
insl
shll
les
and
or
jae
lods
movsl
push
sbb
and
add
loope
enter
seto
and
pop
int3
loop
add
xchg
cwtl
in
and
jb
inc
and
mov
xlat
and
mov
and
sub
and
pop
imul
js
outsb
and
mov
sub
dec
mov
mov
popf
push
cmpsl
rorb
jp
cmpb
add
jae
sbb
out
insl
stos
lock
repz
mov
mov
sub
incb
mulb
push
imul
push
xchg
fld
push
aas
shlb
xor
mov
inc
dec
add
mov
popf
jno
and
push
pop
push
adc
and
insl
mov
mov
rorl
ljmp
pop
xchg
les
xor
cli
jge
aaa
lahf
pop
push
push
sub
push
dec
test
jmp
mov
into
cli
sbb
push
in
das
cld
lock
popf
aad
mov
int3
jmp
pop
pop
push
cs
mov
push
mov
and
rcrb
mov
ja
mov
movsl
call
or
rolb
icebp
cs
inc
mov
mov
or
sub
xor
and
aad
les
pop
add
call
adc
lods
sbb
pop
inc
mov
out
shrl
loop
and
data16
lcall
out
add
inc
jge
and
xor
add
aad
sbb
scas
sub
cmpsl
sbb
out
add
notl
jl
pop
or
faddl
mov
mov
mov
xchg
aas
fs
mov
cmp
cmp
and
lret
icebp
outsb
and
inc
hlt
loopne
jmp
and
dec
mov
xor
cltd
and
jmp
in
pop
fcoms
and
sub
idivb
stc
and
and
out
pop
ja
adc
mov
sub
or
and
push
in
stos
into
and
push
loopne
jns
jecxz
sub
mov
push
and
adc
cli
aas
and
pop
mov
inc
cmp
rcl
sub
subb
inc
sahf
das
leave
xor
and
cmp
in
cltd
sbb
and
add
jae
sbb
and
and
rclb
add
fnstcw
cmpb
push
cli
call
adc
insb
inc
lods
jns
out
and
cmp
repnz
xor
ret
aad
popa
push
fiadds
mov
and
adc
xchg
cltd
popa
adc
addr16
mov
pusha
ds
and
dec
jg
in
mov
push
scas
mov
and
hlt
cmp
and
mov
and
cmp
xchg
sub
jl
add
push
cmp
sub
vprotw
adc
and
fadds
mov
lea
ja
fists
js
xchg
loopne
and
call
in
and
dec
sub
push
adc
js
inc
out
sub
cmp
icebp
add
mov
imul
jnp
mov
fsts
cmp
ret
jg
push
lock
call
out
mov
jo
sbb
cmp
andb
xchg
add
pop
lret
fidivrl
mov
lar
xchg
fdivrl
adc
in
mov
int
cltd
test
push
pop
sbb
and
ret
imul
jae
ret
cmp
and
nop
inc
mov
push
cmp
rcl
push
pop
and
push
cmp
inc
jmp
repz
inc
fists
mov
and
inc
loopne
fwait
sub
and
push
cwtl
ljmp
dec
fstps
and
add
xchg
enter
cmp
jl
imul
mov
inc
scas
lods
repz
loope
arpl
and
push
sbbl
dec
and
cmp
adc
insl
scas
or
xor
icebp
inc
sub
neg
jns
xor
movsl
xor
inc
fnsave
and
cmp
and
imul
sub
inc
mov
ret
lock
sbb
pusha
adc
loopne
aam
sub
or
sub
or
pop
pushf
and
jnp
cmp
and
sbbl
sub
pop
inc
test
xchg
mov
ficomps
and
xchg
dec
or
shl
movsb
rcll
gs
add
fmuls
int
and
loope
in
outsb
cmpsb
mov
mov
inc
mov
std
ljmp
sub
and
shl
lcall
mov
jo
xchg
push
mov
push
xchg
mov
pop
adcl
and
jo
pop
movsb
mov
or
xchg
stos
add
shl
or
xchg
push
and
pop
push
and
push
add
push
and
or
pop
and
in
pop
repnz
stos
pop
pusha
cmp
incb
and
roll
lds
mov
popf
xchg
pop
cmc
mov
mov
jo
sbb
sub
mov
and
iret
cmp
jg
test
push
push
cld
and
ja
out
and
fbstp
outsl
jle
and
sub
lea
and
push
imul
cs
iret
pop
jb
and
into
xchg
and
nop
sti
jne
ret
xor
mov
imul
pusha
loope
test
into
in
ja
sbb
add
xorb
jno
mov
push
outsb
mov
repnz
mov
idivb
clc
and
cmc
or
xchg
pop
adc
aad
sti
mov
and
int3
mov
add
push
xor
dec
stos
sbb
and
sub
and
mulb
dec
outsb
pop
test
mov
les
adc
out
mov
jne
and
adc
outsl
xchg
loop
inc
daa
js
aad
test
shrl
adc
lock
imul
and
das
and
mov
mov
jne
sbb
jno
pop
mov
inc
movsl
pop
cmpsl
cld
lret
in
jp
jle
and
add
mov
push
sub
out
jae
mov
sbb
lods
add
add
push
add
and
sbb
mov
popa
mov
xchg
dec
and
add
mov
push
ret
xacquire
mov
loope
scas
out
inc
lods
hlt
popa
and
movsl
dec
ret
xor
out
cmp
pop
pop
pop
mov
shlb
cmp
xchg
pushf
xchg
cltd
cmpsb
and
fadds
sub
dec
cmp
std
aaa
and
out
push
cmp
mov
jns
jb
mov
mov
inc
test
fisttps
and
std
cmc
add
xor
and
aad
call
in
cld
hlt
and
xchg
mov
inc
lahf
or
fsubrs
bound
cs
cmpsb
or
pop
xor
pop
push
xchg
movsb
iret
sahf
mov
mov
sub
es
shr
jb
test
ljmp
jge
daa
mov
pop
xchg
lods
loopne
jl
and
xor
gs
daa
sub
xchg
mov
pop
sbb
jge
add
mov
jmp
mov
mov
push
addr16
mov
xchg
cmp
and
repz
lods
mov
sbb
push
adc
and
cmc
sbb
aaa
pop
jbe
and
add
mov
push
inc
stc
outsl
sub
dec
movsl
and
mov
inc
and
mov
dec
and
dec
insl
dec
pop
and
or
sbb
and
out
repnz
and
inc
cmpsl
fistps
jg
aad
mov
adc
xchg
in
sbb
and
and
and
subl
das
sub
mov
and
jne
or
fists
insl
or
movsb
inc
jecxz
mov
or
and
push
jp
mov
pop
pop
aam
inc
rcr
test
dec
xorb
movsb
add
imul
push
mov
lea
lock
fdivs
inc
test
sti
sub
call
cmp
je
ret
int3
leave
out
xchg
mov
mov
arpl
ds
and
mov
or
les
adc
and
sti
add
and
jge
ljmp
or
cld
outsl
push
and
out
inc
push
mov
and
dec
sbb
lret
and
test
adc
jo
inc
in
and
aad
out
stos
push
and
fisttpll
mov
jmp
lea
and
scas
pop
adc
popl
call
mov
and
movsl
sti
cltd
jb
mov
xor
popf
and
or
lea
pop
insb
fstl
sti
scas
xadd
in
inc
and
mov
mov
dec
add
incb
rol
test
cmpsb
pop
xchg
or
int3
xor
jg
and
mov
cwtl
stc
pushf
xchg
and
addr16
pop
mov
and
fsave
shrl
sub
pop
pop
fidivs
mov
ja
dec
daa
fdivrl
sbb
outsl
xchg
lds
mov
push
jns
add
aas
mov
mov
cmp
ret
in
pushf
and
es
enter
lods
cmp
mov
scas
mov
sbb
xchg
xor
cmp
pop
orl
and
pop
xor
lds
mov
mov
cmp
les
out
fisubs
mov
mov
push
nopl
stos
addr16
lods
ja
and
movsb
not
push
stc
stos
dec
mov
sti
adc
cmc
in
int
je
or
and
sub
adc
fwait
pop
aad
xor
xor
jae
push
mov
add
stos
and
jecxz
mov
mov
into
or
and
out
sti
mov
sbb
and
mov
movsl
mov
in
lret
sub
pop
jle
test
add
mov
xor
sub
sub
mov
cmp
pusha
mov
sub
neg
lahf
andl
into
mov
dec
xchg
repnz
pop
and
xchg
test
idivb
jns
gs
xor
jne
or
cmpsl
sub
mov
mov
into
and
cmp
jns
fld
xor
cmp
and
and
mov
and
lret
xchg
std
xor
and
fmul
lcall
mov
or
mov
adcl
test
sarb
mov
push
sbb
pop
jb
jo
mov
gs
push
out
and
addr16
inc
mov
fadd
repnz
adc
push
clc
imul
adc
xchg
push
jecxz
lahf
dec
jns
lcall
add
and
scas
roll
cltd
pop
xor
sbb
stos
mov
xchg
and
adc
fsubr
and
mov
mov
dec
test
inc
sub
fs
xor
inc
lahf
loop
shl
and
xchg
imul
mov
sbb
dec
data16
mov
scas
mov
test
pop
pop
stos
cmp
cmpsb
and
lods
mov
xchg
sub
pop
jmp
adc
push
sub
bound
arpl
jns
and
lea
out
pop
and
cmc
cmp
dec
sub
insl
jae
test
in
cmp
push
sti
jecxz
and
into
loope
and
mov
push
aad
addb
clc
popa
mov
pop
shl
sub
pop
adc
push
in
cmpsl
pop
rorb
cmpsb
adc
sub
or
das
sbb
insl
sub
and
sbb
pop
adc
les
mov
ljmp
and
adc
orl
leave
push
in
subb
inc
add
mov
repz
jbe
adc
jl
dec
int
sub
cmp
jle
testb
sub
sub
and
mov
and
push
dec
aaa
pop
gs
sub
mov
dec
jmp
les
mov
insb
xchg
cmp
test
or
repnz
and
or
sbb
and
and
push
xor
scas
push
pop
xlat
push
daa
psrlw
add
fwait
ljmp
imul
cld
xor
jge
jo
and
loope
mov
and
sahf
bound
adc
or
in
test
and
ss
xchg
push
jge
and
mov
cld
xchg
mov
mov
cli
mov
adcl
xchg
inc
test
add
out
and
push
je
loopne
lds
imul
popf
and
ss
push
jnp
mov
push
pop
shrl
mov
int3
pushl
mov
add
imul
jp
loop
out
lcall
and
and
enter
mov
dec
mov
iret
int3
xchg
je
and
push
dec
adc
call
ret
sahf
dec
and
jno
cmp
xor
pop
lahf
lcall
jmp
and
jge
and
dec
adc
and
cmp
push
lds
and
cmp
dec
pop
addr16
outsb
andb
sub
outsl
and
mov
and
bswap
stos
mov
and
jecxz
dec
and
hlt
adc
xor
jo
in
adc
pop
cli
out
imul
mov
and
add
mov
cmp
ss
enter
imul
sbb
inc
jno
sahf
mov
jl
and
push
shll
rcrb
and
movsl
adc
icebp
sbb
pop
jle
ljmp
dec
fcomps
jns
cmpsl
and
jmp
push
dec
or
adc
cmp
popa
xchg
mov
inc
rcr
sub
xchg
jmp
mov
mov
idivl
xchg
dec
push
adc
outsl
in
mov
jb
push
mov
and
in
test
mov
sub
cmp
and
mov
ja
push
xor
scas
cmp
iret
and
inc
std
sub
add
sub
cli
pushf
and
outsb
repz
adc
and
xor
test
mov
jb
cmc
cmp
mov
dec
fsubl
jp
adc
mov
cmp
hlt
mov
iret
and
or
or
cs
shl
andb
push
xor
sbbl
mov
push
in
sbb
add
push
and
jge
loope,pt
pusha
and
sub
into
cs
cmp
xor
incb
mov
mov
and
int3
jne
push
or
or
mov
lret
pushf
or
andb
mov
adc
xchg
cmc
gs
mov
lods
clc
mov
xor
cmp
or
jne
and
into
lcall
and
in
mov
push
in
or
pop
sub
dec
cmp
insb
and
test
mov
stc
pop
shrl
and
xchg
mov
dec
orb
push
add
fsubp
in
movsl
loope
sbb
clc
cmp
inc
scas
pop
cwtl
ret
in
adc
loopne
or
std
ljmp
hlt
or
lret
mov
pop
or
push
jno
daa
and
ds
outsb
sahf
repnz
mov
popf
cmp
and
adc
and
ds
dec
fcompl
and
insb
mov
add
repz
pop
pushf
cltd
mov
xchg
push
xor
dec
into
mov
rcll
inc
loopne
pop
and
inc
arpl
fidivrl
add
push
shlb
and
mov
and
jns
inc
and
cmp
cmp
mov
xorl
push
jne
inc
insb
sbb
out
out
and
and
and
mov
push
and
push
pop
pop
and
push
movsl
dec
mov
sub
xchg
addl
int
and
mov
and
mov
dec
xor
jno
push
stos
in
sub
fldl
dec
sbb
ficomps
sarl
cmp
adc
push
in
or
loope
inc
and
gs
xor
and
xor
adc
and
insb
js
jnp
and
mov
std
mov
test
lret
pop
push
jbe
mov
lods
xchg
add
leave
and
add
shrb
cwtl
xor
and
aad
insb
aam
nop
add
sub
leave
adc
je
movsl
out
ja
lret
sbb
xchg
xchg
nop
push
push
push
mov
adc
adc
andb
scas
push
cmp
and
icebp
push
out
and
jmp
xchg
mov
lds
cmpsb
sub
cltd
mulb
decl
cmpsl
insl
mov
push
dec
daa
xlat
xor
jmp
xor
and
in
sub
and
addb
nop
shll
push
lds
and
mov
std
movsb
xchg
testb
and
pop
decb
and
bound
adc
mov
jbe
or
mov
mov
inc
ljmp
adc
pop
and
xor
enter
imul
fldenv
mov
bound
sbb
adc
push
mov
pop
out
rolb
outsl
scas
movsl
jo
mov
sub
and
add
and
jns
mov
and
andb
and
test
and
stc
mov
xchg
das
jne
sbb
in
mov
popf
lock
test
jle
push
mov
ret
cmp
movsb
xor
lahf
add
popf
jae
sarb
gs
and
mov
bound
mov
push
fcmovnu
cli
and
dec
fwait
inc
lahf
std
sub
js
or
push
lock
outsb
sub
int3
stos
cmp
test
add
cmp
cmc
adc
pop
mov
pop
cmp
dec
sbb
adc
push
xchg
enter
jg
loope
xor
inc
pop
or
mov
lret
dec
jb
das
outsb
xor
fisubrs
push
mov
pop
mov
mov
outsl
or
stos
push
or
shl
inc
cs
verr
lret
mov
out
and
dec
dec
cwtl
xchg
andl
in
jne
mov
cmp
sti
mov
xchg
and
sbb
movsb
xchg
cwtl
sub
mov
and
jne
cmp
roll
cld
add
inc
lea
and
mov
repz
sub
push
jmp
out
pop
push
les
and
mov
mov
lea
xor
or
sub
or
mov
rolb
inc
aas
stc
and
lods
insl
std
mov
mov
scas
sub
inc
lods
and
fisubs
popa
push
sub
imul
call
pop
in
adc
dec
xchg
or
add
pop
ss
in
rcrb
inc
and
cld
mov
mov
sub
and
mov
test
jb
repz
loop
andb
push
rcrl
jmp
inc
aam
mov
lods
leave
cmpsb
aam
subb
lods
movsb
xchg
sub
or
cmp
mov
call
lret
mul
arpl
pop
and
jge
jg
filds
push
and
inc
jg
arpl
push
jnp
mov
mov
mov
jg
incb
and
ljmp
xchg
arpl
aad
cmp
and
fildll
nop
out
and
dec
daa
enter
and
inc
jmp
inc
push
and
pop
in
test
sub
add
cmpsb
mov
and
pop
push
fisubrs
ffree
pop
shl
cmp
ds
pop
dec
in
sub
adc
adc
arpl
or
inc
mov
inc
pop
pop
not
and
xchg
mov
and
inc
inc
mov
insb
ret
daa
daa
popf
adcl
and
dec
repnz
cwtl
push
rol
dec
cmpsb
pop
xor
dec
jg
jmp
addl
cmp
jp
dec
mov
adc
lods
xor
pop
fisttps
data16
sub
gs
ja
out
and
pusha
or
xchg
leave
stc
mov
mov
inc
ret
and
xor
pushf
and
mov
icebp
and
ds
add
mov
mov
dec
xor
cltd
mov
xchg
and
and
fists
push
out
call
jg
aas
dec
test
and
in
fsubs
outsl
lcall
push
push
movsb
mov
and
loopne
lock
sbb
sub
pop
mov
enter
or
adc
pop
xor
or
inc
pusha
fldt
mov
lret
and
cmp
out
mov
das
and
jae
in
mov
stos
imul
push
int3
mov
and
mov
xchg
or
popa
xchg
shlb
int3
rorl
jle
cmp
jl
push
xchg
ja
pushf
jns
and
icebp
out
fs
std
xor
je
inc
mov
aas
pop
das
out
dec
popa
add
test
adc
add
test
addr16
push
pop
push
jle,pt
and
ret
popf
push
dec
bound
arpl
lret
loope
scas
loopne
rorl
hlt
scas
and
in
mov
dec
gs
or
inc
lods
pushf
ret
mov
push
xchg
mov
dec
and
daa
push
jbe
mov
lods
imul
cmp
shlb
and
pop
arpl
fistpll
and
loop
push
into
cmc
je
and
xlat
xor
jg
imul
push
and
mov
mov
inc
dec
cli
lcall
dec
or
scas
and
pop
mov
lahf
xchg
mov
pop
daa
mov
push
and
or
and
inc
imul
jge
cltd
mov
and
ret
pop
scas
adc
pusha
inc
in
mov
stos
xor
ss
test
adc
scas
pop
cmova
push
jne
mov
fisubl
jno,pn
xchg
and
cwtl
and
and
movsl
shrl
pop
sub
dec
mov
loopne
mov
and
jmp
jp
push
outsb
cmp
pop
popa
aaa
iret
cmpb
icebp
xor
push
repnz
add
sub
mov
pop
and
bound
mov
adc
js
ljmp
faddl
sub
lods
outsl
add
sub
and
xchg
cwtl
pop
js
mov
and
adc
and
in
and
lahf
or
sbb
rcrb
or
out
add
xor
mov
bound
and
imul
push
or
sub
aad
sbb
adc
inc
cmpsl
idiv
and
andb
sbb
hlt
and
xchg
lds
int3
jnp
outsb
and
std
cmp
and
mov
scas
xor
and
repnz
and
xor
shlb
fwait
movsb
dec
xchg
dec
xrelease
enter
js
addb
push
dec
and
mov
loope
int
cmp
lahf
repnz
and
movsb
ljmp
cmp
add
fcoms
ds
lahf
push
in
mov
pop
and
dec
mov
xlat
and
sbb
iret
and
cld
aaa
movsl
jo
ljmp
pop
inc
in
pop
stos
subl
cwtl
les
std
aaa
push
stc
push
mov
and
cli
call
lock
es
inc
jno
cmpsb
push
pop
mov
xor
lds
add
xchg
jbe
and
notl
outsl
cld
lods
mov
mov
out
mov
xor
jae
and
lea
dec
int3
popa
cmp
mov
std
and
jnp
sub
out
push
fidivs
xor
adc
insl
add
push
sbb
jge
add
mov
fsubr
pop
iret
or
inc
and
cltd
cld
pop
and
jp
sub
lods
push
std
mov
cmp
lahf
scas
mov
sbb
inc
inc
sbb
push
and
and
aas
xor
cs
push
dec
test
adc
and
and
cmpsl
cmc
subb
pop
push
mov
and
cli
daa
dec
outsl
xlat
imulb
rolb
jg
and
lcall
xor
ds
dec
and
push
lds
insb
mov
and
addr16
dec
or
pop
cmc
imul
rorl
mov
das
xor
test
and
mov
mov
push
and
sbb
and
rcrb
daa
movsl
and
push
and
add
mov
mov
and
out
lahf
adc
xor
push
cmp
xchg
adc
and
sub
pusha
lods
lahf
add
or
leave
mov
je
jns
and
addr16
dec
movsb
mov
cmp
mov
push
cmp
push
scas
and
and
adc
mov
imul
iret
and
cmc
cmp
out
dec
dec
aad
and
xor
pop
push
mov
dec
cmp
sbb
push
inc
mov
sub
push
mov
sbb
add
test
add
and
loop
mov
int3
pop
add
xchg
pop
mov
int3
out
test
incb
inc
cmp
fdivs
pop
stos
mov
cs
jle
jb
pop
orl
mov
cmp
mov
adc
push
daa
sbb
stos
mov
dec
pop
and
mov
dec
mov
pop
sahf
add
out
xchg
mov
add
test
out
shlb
int
test
xchg
pop
adc
and
jle
xchg
stc
jl
and
fiadds
and
lret
dec
jge
mov
jp
cmp
pop
add
add
pop
cmp
popf
mov
test
movsl
cmp
push
outsl
and
aas
xchg
cmp
in
pushf
and
fidivl
jmp
jno
and
scas
jmp
push
add
addr16
dec
movsb
mov
sub
and
adc
cmp
ds
stos
cmp
mov
pop
and
mov
push
push
and
sbbb
cmp
push
in
sbb
jp
and
ljmp
popf
pop
int3
mov
push
mov
push
scas
imul
or
adc
movsb
shrb
dec
sti
inc
sbb
cmpsl
mov
sub
xor
jno
fucomp
leave
ds
loope
pop
cltd
arpl
xchg
bound
loopne
cmp
imul
and
cltd
sub
imul
or
and
fstps
push
shll
xchg
not
xchg
gs
inc
call
and
ret
push
mov
push
and
fucomip
mov
sub
repnz
cld
mov
rolb
adc
sbb
scas
ss
xchg
cld
xchg
nop
cmp
or
mov
dec
and
imul
in
xorl
cmp
and
cld
inc
push
mov
and
dec
mov
movsl
test
subl
in
or
pop
jmp
push
out
adc
push
sub
or
jmp
inc
xor
push
xor
add
repnz
and
mov
fwait
ljmp
insb
pop
jno
and
fnstenv
and
add
xchg
dec
pop
shll
and
cmpsb
jmp
das
in
mov
mov
xchg
and
cwtl
or
mov
and
out
mov
xor
outsb
sub
mov
dec
add
jmp
fistpll
fsubl
cltd
iret
lds
cmp
xchg
and
es
ja
dec
aas
js
fistps
push
mov
and
repnz
icebp
mov
and
mov
in
rorb
es
test
xor
cltd
mov
sbb
and
xchg
es
sub
add
sbb
pop
mov
ret
leave
cmp
adc
jns
stos
and
sti
into
loopne
popl
and
cmpsb
mulb
add
leave
add
dec
movsb
movsl
cmp
sbb
inc
out
or
or
cltd
mov
scas
in
aad
aas
adc
jl
insl
into
xchg
jae
and
enter
imul
mov
and
sbb
ret
mov
and
movsl
addl
iret
out
add
push
daa
sub
popf
int3
stos
mov
add
sbb
sub
mov
pusha
and
jns
popa
inc
pushf
lahf
jbe
out
pop
mov
into
xor
push
jg
and
xchg
test
and
ret
and
cmp
les
xchg
insb
pop
das
dec
sub
mov
jecxz
inc
lret
and
mov
cmp
fistps
pushf
cmpsl
push
and
inc
xor
and
nop
inc
std
and
mov
cs
loope
movsb
stos
int3
and
mov
mov
cmp
not
and
fbstp
or
shlb
sub
stos
xchg
pop
pop
xor
pop
cmp
stc
and
or
adc
inc
daa
push
movsl
fcom
jmp
fidivrs
jge
and
mov
add
mov
lret
cmp
dec
mov
sbb
repnz
and
pop
mov
xor
shld
mov
jecxz
jecxz
pop
mov
test
xlat
adc
fst
push
pop
cmp
lahf
and
jne
stc
pop
mov
int
pop
popa
xchg
and
xor
mov
fisubl
mov
jne
push
inc
and
sbb
sbb
cmp
and
or
repz
jb
mov
sbb
and
pop
cmc
and
pop
in
fwait
call
jmp
imul
sub
je
aaa
dec
jo
addb
ret
and
int3
xor
adc
stc
mov
xchg
insl
mov
and
mov
jl
or
mov
loopne
pop
decb
xlat
and
clc
lock
pop
jno
dec
inc
cmc
and
insl
pop
daa
in
cltd
and
aam
add
ljmp
mov
sub
jno
and
cmp
pop
and
add
imul
sbb
hlt
jmp
mov
and
pop
leave
or
enter
mov
aaa
cmp
jnp
and
lock
jns
xor
sbb
popf
sbb
ret
push
pop
call
cld
dec
and
mov
and
adc
xor
gs
cltd
mov
jno
les
and
stos
push
push
and
cmp
and
mov
and
repnz
mov
fistl
jns
pop
xchg
push
sbb
and
repz
adc
inc
cmc
nop
sbb
push
fnstenv
mov
sbb
and
sbb
ror
pop
jo
and
adc
stos
sbb
fnsave
negb
in
repnz
cmp
xchg
and
push
sub
jb
call
xchg
dec
dec
mov
push
sbb
and
mov
pushf
and
je
mov
lds
movsl
sub
popf
mulb
outsl
popa
mov
hlt
orl
sbb
mov
out
cmpsb
inc
movsb
loop
int3
cld
ds
jg
popa
fs
and
loope
xchg
addb
rep
and
popf
sub
call
insl
ja
xchg
and
faddl
dec
cmpl
adc
push
roll
and
inc
ret
cmp
xchg
xor
cwtl
dec
scas
and
cmpl
in
xor
and
mov
dec
xor
cltd
inc
imul
movl
pop
es
insb
dec
and
sbb
icebp
andb
jle
pop
pop
push
add
and
pop
mov
dec
push
fiadds
fiadds
stos
sub
xchg
notb
testl
pop
push
fldenv
adc
roll
sbb
cmp
dec
mov
pop
lcall
mov
sbb
pusha
lret
enter
pop
imul
stos
mov
mov
ja
sbb
push
jge
and
inc
xchg
lret
and
es
jle
add
and
cld
push
xchg
dec
jae
jns
xlat
push
add
adc
sub
inc
cvttps2pi
mov
sbb
jbe
add
mov
sub
cli
push
jecxz
sub
bound
and
ret
out
push
xchg
cmp
out
in
enter
inc
hlt
dec
xchg
sub
dec
aas
cmp
movsb
add
pop
and
xchg
bound
insl
sub
push
sbb
sbb
mov
les
mov
test
icebp
sbb
dec
jl
jg
fcoml
andb
loope
aad
inc
outsb
sbb
push
dec
into
add
test
icebp
adc
and
inc
subb
lds
and
mov
and
insl
mov
pop
imul
shll
inc
adc
ja
fsubrs
dec
mov
and
mov
mov
push
lret
and
jge
sahf
sub
sbb
xorl
lods
and
cmp
jb
and
lret
movsb
jge
and
filds
cld
or
xchg
and
ljmpw
push
mov
imul
and
sub
pop
test
aaa
and
dec
jne
and
out
xchg
and
inc
aad
add
imul
icebp
and
xor
bnd
lods
and
repz
inc
mov
aaa
and
and
push
or
and
insl
inc
fwait
mov
lea
cmc
sub
and
pusha
push
dec
cmp
and
push
insb
mov
mov
and
stc
frstor
jle
out
or
mov
mov
hlt
or
and
loope
sub
mov
dec
and
sbb
adc
iret
xor
decl
add
int3
xlat
nop
push
and
sub
stos
jmp
sbb
and
imul
xchg
and
mov
loope
adc
or
lods
aam
mov
cmpsl
or
leave
aad
adc
xchg
add
fwait
xor
pop
pop
stc
lock
pop
cld
mov
pop
add
sub
bound
jo
push
mov
sbb
scas
push
cmp
into
popa
and
xchg
push
jle
fmull
xchg
imul
sub
sbb
push
xchg
cmp
icebp
sbb
repnz
jge
lods
adcl
ss
scas
push
pop
or
bound
shrl
scas
xor
cltd
call
mov
lret
orl
jo
iret
cmp
mov
and
stos
push
and
add
repnz
and
push
jnp
pop
jg
xor
adc
fcomi
call
or
add
mov
cmp
cwtl
mov
in
sbb
shlb
jl
xchg
sub
insb
hlt
lods
lds
mov
popf
ret
sub
and
or
and
js
loope
mov
and
adc
outsl
and
cwtl
ds
jp
cmp
lods
lods
xor
sarb
sub
jb
pop
inc
loopne
and
ja
in
test
mov
fimuls
cmp
and
push
adc
cs
ret
and
rolb
andb
jbe
jns
ds
push
fyl2x
cld
arpl
lods
cmpsb
xchg
andb
push
add
in
xor
cmp
cltd
shll
popl
push
pop
es
adc
sbb
cmp
fcomps
and
faddl
mov
outsl
mov
adc
push
adc
inc
and
push
jecxz
insl
sbb
negb
jle
xor
adc
lret
iret
out
cmp
pop
mov
xchg
int
mov
das
in
cwtl
jae
iret
gs
and
repz
mov
mov
xchg
aad
pop
sbb
or
movsb
cmp
ljmp
cmp
std
sbb
sahf
addb
and
repz
in
jns,pt
xor
jmp
push
stos
and
pop
stc
iret
and
jecxz
add
sbb
sub
and
into
mov
lods
xor
movsl
jle
xchg
hlt
pop
mov
ror
outsb
and
ret
sbb
push
cmp
loop
sbb
hlt
pushf
inc
pop
dec
mov
lret
pop
movsl
and
pop
cmp
lahf
pushf
hlt
and
or
and
and
xchg
and
fdivrp
push
andl
and
ja
cli
loop
gs
outsb
pop
lea
mov
push
pusha
add
test
insl
sbb
push
loop
fldenv
cmc
in
mov
rorl
movsb
mov
sbb
repnz
sub
loop
mov
sbb
inc
ljmp
mov
jb
fidivrs
inc
push
inc
xor
cld
mov
mov
push
aam
gs
and
dec
loop
and
scas
push
sbb
jge
adc
loopne
adc
jl
cmp
and
out
icebp
test
js
sub
mov
add
jne
out
dec
ficoml
and
jge
xchg
and
lret
pop
icebp
mov
je
mov
rcrl
xchg
test
and
or
ljmp
cwtl
jmp
mov
daa
loop
popf
push
push
fwait
sbb
lea
mov
loopne
dec
and
add
test
mov
fimull
test
add
mov
or
test
jne
into
sub
imul
pop
cmpsb
ret
and
aad
in
sub
or
mov
and
xlat
je
and
mov
push
loop
leave
jno
add
xabort
cmp
sub
sbb
and
mov
cli
and
xchg
in
aam
dec
add
loope
loopne
mov
push
popf
mov
movsb
add
xchg
cmp
bound
jnp
mov
pop
push
xor
jmp
and
pusha
enter
lock
js
ss
cmp
and
gs
mov
fs
push
jbe
push
xchg
adc
mov
lods
sbb
repnz
push
js
xchg
insl
adc
ljmp
mov
shlb
inc
sub
cmp
and
add
xchg
jno
and
int
call
fbld
and
inc
jo
xchg
mov
mov
ficompl
and
sub
pusha
mov
push
or
mov
push
and
push
adc
xchg
callw
cmp
pop
inc
fstpt
inc
testb
faddl
shrl
pop
je
cmp
sub
hlt
and
mulb
and
sub
and
stos
nop
rorl
rcr
int3
and
jns
int3
xchg
pop
pop
and
dec
mov
pushl
cwtl
fidivrl
jp
pop
or
xor
cld
pop
stos
xchg
sahf
aaa
gs
mov
jp
sub
fcompl
arpl
cld
and
xchg
daa
push
clc
push
and
pop
dec
aas
push
push
and
adc
ss
jo
bound
scas
jp
data16
and
imul
pop
jmp
and
loopne
mov
pop
pusha
dec
lods
mov
jnp
inc
fbld
and
loop
in
test
fildl
shlb
sti
sub
nop
inc
mov
cmp
and
lds
andb
mov
add
cmp
in
divb
jecxz
dec
xchg
pop
pop
xchg
sbb
mov
fsubs
mov
dec
xchg
or
jb
out
aad
jo
mov
das
and
adc
sub
imul
inc
and
scas
and
clc
sbb
cmc
push
mulb
jb
rorb
and
lret
xchg
sub
xchg
sbbb
jns
and
out
nop
dec
xor
xor
sbb
daa
aaa
pusha
lcall
and
cmp
adc
insb
xchg
push
xchg
inc
hlt
push
addr16
mov
and
ret
xor
push
and
lock
stos
add
hlt
out
stos
mov
pop
lahf
cld
in
lcall
and
es
cmp
or
inc
mov
mov
push
loope
test
and
bound
adc
std
and
cmc
adcl
popa
mov
out
ja
outsb
cwtl
pop
aad
mov
and
jecxz
and
sbb
and
pop
rorb
add
adc
das
sub
and
xchg
dec
mov
inc
ljmp
and
xor
push
and
in
daa
pop
rorb
mov
and
aaa
rcrb
ret
or
cli
dec
push
dec
test
and
and
adc
and
jl
stc
mov
lods
xor
test
ret
pop
jnp
subb
add
in
fcmovne
fsubrl
sub
mov
mov
and
cmp
or
push
pop
pop
cmp
orl
ljmp
jbe
xchg
fucomi
jo
sub
fisubrl
aaa
adc
fwait
mov
popf
mov
and
push
dec
pop
sarl
roll
test
cltd
inc
insl
gs
mov
lahf
leave
or
pop
pop
push
lods
ljmp
outsb
loope
and
clc
inc
loop
pop
xor
cmp
dec
jno
test
shl
add
aaa
and
xchg
rolb
inc
push
and
push
mov
sub
add
aam
fcoms
cmp
and
or
sbb
mov
adc
aam
and
sub
insl
and
jmp
lea
mov
aam
mov
and
sub
mov
mov
outsb
pop
cmpsb
push
jno
pop
test
xchg
arpl
aaa
daa
js
dec
xor
fs
out
rolb
ds
movsl
outsl
inc
mulb
xchg
adc
inc
addr16
sbb
and
mov
outsb
and
xchg
inc
insl
jne
sub
and
push
push
and
push
mov
arpl
sub
enter
nop
dec
daa
cs
mov
adc
cmp
decl
lret
sbb
mov
and
fs
and
xchg
dec
leave
pop
stos
add
lods
jecxz
in
ja
and
mov
pop
xchg
mov
pop
push
pop
iret
ret
pushf
sahf
call
and
decb
arpl
js
push
mov
xor
pusha
daa
je
cmc
sti
repnz
push
insb
xchg
sub
das
mov
inc
movsb
jns
sbb
loop,pt
xorb
ror
dec
mov
and
pop
and
and
and
and
or
out
jl
and
and
shll
pop
cmp
mov
ja
and
fsubl
and
stc
jp
xor
les
aas
arpl
ret
or
and
push
cwtl
xchg
adc
jmp
pop
jae
movsb
sti
jns
icebp
xor
ljmp
aas
push
daa
enter
and
xor
movsl
jns
into
and
popa
orb
jnp
sub
addr16
cmp
and
ret
sub
mov
jne
push
leave
out
xor
loopne
shlb
jecxz
sbb
and
aas
jl
dec
popf
jbe
adc
in
out
mov
and
mov
pop
and
aad
sahf
cmp
scas
popf
lahf
cwtl
das
and
lcall
imul
cwtl
mov
mov
lret
and
cli
push
mov
fstpt
mov
and
inc
lret
push
and
jle
and
lods
xchg
push
and
jns
xor
pop
mov
xchg
push
sbb
pusha
pop
jge
popa
clc
and
jbe
imul
cs
sub
mov
ss
or
lock
ret
inc
and
mov
jp
scas
inc
add
sbb
lock
out
test
sbbb
sub
ret
add
sub
pushf
or
or
test
int
and
cs
xor
adc
sbb
push
push
cli
cld
and
outsb
shll
ds
and
add
sub
andb
push
jns
xchg
cmc
sbb
pop
pop
lret
scas
dec
ds
pop
lock
adc
mov
in
das
mov
inc
les
fmuls
pop
mov
outsb
push
and
jb
push
scas
ss
sbb
and
xchg
iret
lahf
test
cmp
mov
aad
sbb
jle
dec
or
xchg
test
sbb
sbb
lret
pop
jge
nop
and
and
and
scas
in
sbb
shlb
cmp
std
arpl
sub
in
inc
clc
push
pop
inc
fs
and
fisubl
outsb
xorb
cmp
sbb
and
cmp
idivb
shr
cmp
les
and
xchg
and
and
and
dec
fwait
and
push
lea
pop
mov
insl
sub
xor
aaa
add
mov
iret
and
stc
aam
cltd
and
mov
mov
movsb
nop
cmp
lods
and
faddp
sbb
enter
fsubr
pop
mov
das
shld
cld
sub
or
ret
lret
pop
aad
inc
push
jmp
or
cmp
jno
and
mov
sbb
imul
add
jbe
sbb
inc
lods
and
push
mov
aam
xor
adc
cmp
andb
in
add
lcall
fs
cs
sub
mov
mov
and
js
and
inc
fsts
rolb
imul
mov
and
dec
out
popf
or
push
das
loope
cmp
in
mov
cmp
mov
fldl
nop
sub
int3
add
ss
inc
lcall
inc
es
movsb
mov
push
dec
adc
decl
ret
lahf
and
out
jo
inc
sahf
and
outsb
lods
mov
stos
dec
mov
adc
in
xchg
and
test
out
pop
and
outsl
push
sbb
aam
lds
and
cmpl
mov
into
sub
in
adc
mov
lea
mov
pop
or
fwait
lds
and
xchg
insb
mov
mov
popa
les
sbb
mov
std
and
jns
sbb
int3
sub
into
jg
jne
add
and
jp
sbb
push
and
aaa
cs
pop
mov
dec
bound
and
stos
and
fdivl
dec
and
arpl
shll
add
bound
pop
ret
jmp
pop
push
cmpsl
cmpsl
mov
lcall
and
orb
inc
jbe
mov
and
mov
and
jne
adc
push
shlb
push
mov
cwtl
jmp
movsl
sbb
and
mov
inc
and
mov
aas
out
mov
or
cmp
test
rep
pop
push
xchg
and
jecxz
ljmp
pop
xchg
dec
or
sbb
cmp
xor
or
and
dec
ss
aad
pusha
leave
mov
das
pushf
daa
jae
stc
popa
enter
and
push
xor
test
and
out
lds
sbb
inc
push
jo
jns
rcrb
cmp
sbb
lret
add
aam
mov
pop
and
out
push
iret
jecxz
fldl
aaa
loopne
enter
xchg
stos
popf
out
popa
and
push
pop
into
jecxz
cld
xchg
and
nop
push
fwait
ds
in
scas
push
and
stos
xor
hlt
inc
jo
dec
add
sub
pop
xchg
mov
mov
and
push
les
jnp
and
and
mov
push
subl
out
out
mov
outsb
push
cltd
add
and
jb
inc
cwtl
jecxz
xchg
loop
in
call
pop
adc
aad
dec
sti
lds
pop
orl
fcoml
mov
inc
ret
fcomps
jl
mov
lods
stos
cmp
push
bound
mov
lock
and
hlt
pop
mov
outsl
jo
sbb
out
inc
or
rcll
mov
and
adc
sub
dec
and
add
and
in
push
sub
mov
test
xchg
or
pop
jb
lds
repz
jne
jno
fisubl
sti
add
int
mov
xchg
and
pushf
xor
scas
add
cmp
and
or
in
cmp
adc
jnp
adc
and
jmp
cmp
cmp
roll
and
xchg
aas
mov
lea
cmpsb
sub
sub
scas
dec
imul
cmp
pop
cmc
or
lret
arpl
insl
and
pop
pushf
mov
repnz
sub
sbbl
inc
hlt
dec
loope
int3
and
pop
dec
push
and
dec
in
cmp
adc
popa
and
in
xor
rolb
ds
inc
inc
sti
rcl
and
lods
mov
sub
pop
sub
mov
and
imul
dec
sbb
ss
je
sbb
test
mov
aam
les
and
push
mov
inc
push
mov
addr16
mov
jecxz
or
and
insb
mov
adc
pop
and
ret
cld
mov
and
sbb
inc
int
cltd
and
gs
aad
mov
scas
pop
testl
dec
adc
pop
fistpl
and
mov
sbb
and
pop
cmp
and
fwait
or
nop
and
sub
daa
and
subl
jg
movsb
movsl
sbb
cmp
push
cld
mov
jo
test
pop
dec
fwait
outsl
stos
and
cmp
call
pop
lods
lret
push
and
jb
icebp
call
or
mov
mov
and
add
and
ds
mov
add
popf
popa
aaa
ljmp
jge
pushf
sbb
dec
adc
sti
in
and
daa
jl
cmpsb
inc
adc
and
cmc
push
jg
cmpsl
mov
add
and
mov
popf
jp
rol
out
repnz
xchg
inc
enter
bound
add
sahf
pop
je
loopne
movsb
in
lahf
fadd
mov
cwtl
iret
xor
in
xchg
sub
insb
push
mov
add
jp
aad
sti
push
inc
lret
pop
je
cmpsb
dec
mov
icebp
and
cmp
or
aam
xchg
call
and
rcrb
and
dec
push
jle
push
es
mov
push
mov
subb
gs
popa
inc
mov
outsl
hlt
sbb
loope
and
jecxz
xorl
loopne
in
cltd
fs
movsb
mulb
or
or
and
stc
lea
and
push
or
aas
mov
inc
ss
jne
and
test
mov
and
roll
stos
inc
enter
imul
frstor
mov
add
aas
mov
not
adc
movsl
stos
inc
xor
lea
dec
add
add
aam
dec
xchg
and
sbb
fiadds
out
and
enter
fwait
xchg
fldt
adc
or
loope
popa
and
aad
mov
cmp
pop
in
addr16
aas
and
mov
mov
mov
rorl
push
sub
in
scas
mov
jae
add
adc
in
and
sbb
sub
imul
or
push
call
sbb
lds
inc
std
pop
push
lock
cmpl
adc
outsb
dec
adc
xor
mov
das
add
shlb
loop
cmp
cmc
and
arpl
mov
dec
add
loop,pn
inc
mov
ljmp
mov
and
lods
in
and
hlt
cli
cs
cmp
and
in
pop
push
lret
push
insb
lahf
popf
enter
cltd
xchg
mov
cwtl
pusha
sbb
adc
sar
movsb
xchg
test
and
xor
ficomps
jge
and
out
xchg
add
push
int3
jl
push
in
xchg
sub
test
arpl
cmpsl
dec
pop
mov
sub
sbb
fiaddl
jle
xlat
pop
iretw
adcl
out
and
into
bound
pop
or
pop
xor
lods
dec
pop
outsb
repz
push
jmp
add
and
push
fnsave
ret
push
add
push
and
or
jmp
arpl
ret
inc
sahf
pop
test
adc
fsubrs
sbb
cmp
and
lods
int
jle
shlb
pop
loope
rorl
clc
xchg
xchg
imul
dec
cmpsb
jnp
and
jne
mov
pushf
xchg
inc
and
std
insl
sarb
and
inc
mov
loop
mov
mov
idivl
or
push
cmp
jo
movsb
mov
fsubl
mov
inc
sbb
rorb
das
aam
and
cmpsl
aad
les
shlb
and
add
xchg
cmpsb
and
cltd
jnp
imul
mov
mov
pop
sub
jb
pop
int
lea
arpl
jmp
and
imul
jns
pop
sub
cmpsl
fs
mov
and
test
bound
and
pop
push
cmc
gs
and
jmp
and
call
pop
and
mov
mov
and
jge
sbb
push
shlb
repz
test
and
out
orl
and
cld
xchg
int
jo
and
sarb
pop
mov
jecxz
xchg
fstpl
shll
in
lret
fisubrs
push
xchg
pop
sbb
push
xchg
repz
cwtl
mov
lock
cmp
inc
cmpsb
xchg
push
dec
adc
pop
inc
xor
xor
and
pusha
jne
insb
insl
xchg
adc
cltd
les
sbb
and
mov
mov
dec
rcl
and
mov
sub
jecxz
add
cld
xchg
and
fcmovnu
adc
out
cs
xor
and
ljmp
iret
and
and
repz
and
xor
iret
jmp
mov
push
push
or
push
ret
and
inc
or
mov
test
icebp
and
lcall
and
rorl
test
inc
and
sub
sahf
and
sbb
imul
ret
fstpl
leave
push
lods
and
sti
pop
out
adc
mov
fisubl
mov
push
jle
stos
idivb
and
dec
int
daa
add
xchg
dec
add
adc
and
out
add
or
and
push
mov
and
mov
loop
xchg
and
adc
sub
and
push
jp
imul
pop
and
in
inc
lahf
and
jle
int3
or
rol
sub
pusha
loope
mov
les
ret
out
and
enter
hlt
push
sub
sbb
mov
xor
arpl
sub
pusha
mov
adc
stos
bound
push
fldt
cld
mov
test
push
andb
mov
aam
pop
add
mov
mov
std
and
pop
scas
cli
mov
outsb
ds
out
fs
in
lret
movsb
and
and
pop
sbb
ret
pushf
lods
and
mov
aaa
and
and
dec
xchg
pop
mov
add
in
orl
lods
and
cli
pop
test
and
mov
dec
int3
add
and
pop
xor
scas
loop
enter
jo
out
add
mov
arpl
jne
dec
out
mov
sub
mov
inc
lcall
pop
mov
movsb
xchg
or
sub
leave
scas
and
push
sbb
repnz
pop
pop
cmp
inc
jecxz
sub
int
shrl
sbb
lret
and
add
add
adcb
xchg
cltd
jae
jl
pop
push
cs
int
xor
dec
add
and
sub
push
imul
je
rcl
xor
and
xchg
sub
mov
mov
xor
sarl
fstpt
mov
mov
inc
repz
inc
and
rclb
and
push
push
and
pop
aaa
and
jns
fwait
rcll
lea
fsubl
sub
test
mov
sbb
dec
mov
loope
jl
and
push
movsl
and
pop
fidivrs
jmp
and
punpcklbw
fmull
dec
and
mov
in
testl
or
fisubrl
jle
rcr
mov
xor
and
jno
sub
inc
inc
or
sahf
mov
cmp
sbb
and
int3
bound
inc
and
jmp
xchg
loopne
cmpsl
xor
push
cmpb
push
cmp
inc
enter
and
add
sbb
mov
adc
xchg
loopne
pop
dec
shll
arpl
jae
js
and
fcmovbe
xor
pop
or
gs
mov
dec
inc
push
sub
mov
xchg
jle
cmp
mov
imul
inc
loopne
cmpl
jecxz
fdivl
rcll
addr16
sbb
dec
daa
pusha
or
cmp
jge
jnp
cmpl
sbb
loop
movsb
and
xor
inc
pushf
mov
and
xor
stos
and
fstpl
and
maskmovq
fcomps
and
push
lret
pop
fnsave
dec
and
or
add
jecxz
and
inc
xchg
mov
stos
push
loopne
mov
inc
and
jb
cld
add
lds
mov
cmp
mov
inc
rcrb
xchg
and
pop
sarl
add
int3
insl
ljmp
ljmp
enter
mov
pop
jp
rcrl
lock
xor
and
mov
sub
and
push
pop
sub
sbb
jge
in
and
jno
xlat
ljmp
and
cmpsl
pop
mov
test
in
push
and
aas
pop
nop
mov
ret
lods
aaa
or
jl
in
cmp
sub
dec
xor
and
dec
ss
and
mov
flds
les
in
push
fs
aad
pop
icebp
es
outsb
dec
in
mov
push
cmpb
popa
mov
outsl
repnz
stc
push
cmp
push
mov
cmc
sbb
testb
pop
sub
and
xchg
movsb
adc
cld
and
mov
jno
and
or
push
cli
mov
and
aas
pop
jae
not
enter
jne
and
mov
mov
cmp
adc
sbb
aaa
jnp
adc
pop
shrb
jns
fs
and
subl
mov
mov
fcoms
jns
and
mov
in
xchg
test
and
cmpsb
push
xchg
jbe
movl
aaa
xchg
and
push
inc
mov
push
mov
daa
ret
push
pop
push
mov
and
scas
aaa
inc
add
pop
leave
imul
sbb
and
pop
fimuls
and
insl
and
loopne
pop
pushf
cmp
or
push
inc
pop
and
pop
outsb
paddw
add
push
xor
push
les
and
and
cmp
push
ret
in
and
test
cmc
mov
pop
and
addr16
adc
and
pop
out
out
or
mov
inc
inc
xchg
sbb
dec
mov
cs
sbb
jb
add
jno
lea
and
or
xchg
sub
mov
or
mov
xor
andb
push
dec
test
clc
call
jne
mov
lods
pop
and
insb
in
and
test
inc
movb
hlt
mov
out
push
fs
push
sub
and
jno
int
xchg
in
xlat
cmp
data16
and
cmp
cmp
shll
mov
and
lods
and
cwtl
sbb
out
insl
jmp
ljmp
and
xor
aaa
cmp
pusha
loop
lea
adc
data16
sbb
test
jmp
jne
out
mov
and
lahf
and
fidivs
adc
mov
int
adc
int3
dec
sbb
into
ret
push
adc
push
mov
jo
rol
sbb
and
mov
jo
sub
pop
lret
test
xorb
daa
mov
dec
and
dec
cwtl
and
std
push
inc
adc
mov
out
leave
and
push
cmpb
add
insl
xchg
xchg
and
jb
mov
in
loopne
inc
xor
les
ret
mov
rcr
sub
test
pop
enter
and
inc
js
and
add
shl
dec
and
jle
pop
xchg
jmp
and
and
add
hlt
int3
push
sub
inc
pusha
lock
pop
int
sti
bound
sub
mov
add
ss
repnz
nop
imulb
iret
push
pop
out
leave
daa
mov
xchg
stos
andl
sbb
lods
sti
pushf
jo
insb
and
pop
ffree
xchg
mov
and
mov
in
cmp
out
negl
lret
push
andl
push
or
push
adc
jbe
arpl
dec
push
iret
int3
lret
and
mov
jle
dec
lock
add
cltd
ljmp
je
sub
pop
lds
mov
sub
mov
add
sbb
and
lds
xor
xchg
shlb
and
adc
add
and
arpl
icebp
and
test
aas
xor
and
js
sub
filds
pop
and
ret
bound
sbb
cmp
loopne
iret
arpl
pushf
mov
xor
in
movsb
and
test
ret
fwait
and
arpl
les
ss
jecxz
lock
sub
mov
movsb
jmp
test
xor
and
lds
cltd
cmpsl
jle
movsl
sub
and
and
rorl
dec
mov
paddb
andb
shlb
outsl
xor
je
movsl
cmp
xchg
movsb
stos
loopne
je
jecxz
loop
negb
repz
mov
in
cli
and
adc
loop
out
and
orb
out
lock
inc
stc
cwtl
ds
fsqrt
fsubp
and
mov
enter
imul
and
shrl
in
sbb
and
leave
rclb
loop
movsl
shlb
int
dec
mov
jle
and
add
mov
lock
xor
add
or
xor
sub
jbe
in
fildl
into
mov
or
xchg
pop
dec
stos
addr16
js
mov
adc
and
xchg
insb
fstl
push
push
and
push
imul
mov
mov
dec
cmpsl
loope
and
pop
movsb
sub
and
cmpb
js
pushf
and
ljmp
jmp
and
std
sti
test
sbb
pop
mov
cli
ss
fs
and
test
shrl
or
inc
cmpsb
scas
and
sbb
ljmp
ficompl
pop
and
or
pop
mov
inc
jb
hlt
fsubs
dec
stos
jne
in
sub
cs
cltd
mov
and
repz
cmp
mov
lahf
adc
mov
fildll
ja
and
not
and
mov
push
inc
popf
lret
cmpsb
pop
jge
xorl
cmp
shlb
jl
test
jmp
xor
into
movsb
test
mov
mov
js
pop
movsb
inc
cwtl
jne
stos
and
int
sbbl
and
mov
xchg
cmpb
xchg
cmp
frstor
lods
cmp
aas
subb
sarl
cmp
jle
in
push
xchg
and
aaa
add
push
fwait
ljmp
and
gs
sub
insl
adc
sub
and
push
cmp
xchg
push
stc
sti
in
insl
shlb
pop
fisttpl
subl
lods
mov
dec
fidivs
imul
loope
mov
and
jnp
stc
dec
fistl
and
scas
outsl
or
cmp
inc
shrb
mov
scas
mov
stos
test
imul
ss
sti
loopne
imul
mov
ja
and
jae
mov
add
mov
mov
ljmp
leave
cmp
lods
fwait
add
hlt
jno
mov
mov
clc
call
mov
sub
sub
inc
sbb
arpl
jae
js
pushf
and
and
shlb
lods
mov
gs
cmp
mov
dec
lock
les
and
cmp
in
add
sbb
add
movsb
ljmp
push
jle
out
and
or
lcall
dec
add
daa
popf
sbb
pushl
cmp
xor
lods
stos
push
cld
and
fwait
xchg
mov
leave
xchg
jg
mov
arpl
push
lock
xor
and
push
lds
add
call
and
pushf
fildl
push
data16
sbb
clc
inc
enter
arpl
jmp
lds
sub
popf
add
sub
adc
mov
and
sbb
jg
mov
shll
aad
jb
subl
fsubs
jg
cld
mov
into
in
fwait
cwtl
push
or
cltd
and
jecxz
outsb
xor
add
xchg
mov
popf
pop
and
push
bound
mov
addr16
and
fsubr
mov
push
xor
xchg
fnstcw
hlt
push
push
outsl
scas
and
push
pop
out
test
repz
mov
cmp
jp
pop
cmpsb
imul
and
stos
jg
xchg
decb
xor
and
or
jne
push
es
pop
dec
test
fsubl
mov
repnz
and
mov
sub
imul
icebp
stos
frndint
push
loopne
movsb
mov
mov
jl
lcall
mov
iret
lahf
aaa
out
and
or
and
das
sbb
inc
in
and
mov
and
cld
jb
sahf
xchg
enter
pop
imul
pop
sbb
into
and
push
sbb
xchg
movsl
sbb
and
jle
push
test
pop
and
inc
jmp
out
xor
pop
cmp
and
fisubs
and
jge
cmp
imul
cmpsl
into
mov
mov
push
and
mov
test
adc
cltd
push
and
cmp
scas
scas
inc
and
dec
adcl
mov
cmp
test
pop
mov
add
cwtl
push
xchg
xorl
dec
clc
add
std
mulb
and
sti
mov
inc
pop
xor
outsb
cmp
push
add
test
dec
stos
and
or
pop
cmc
rcrl
xor
and
and
or
mov
clc
xchg
daa
fsubs
jmp
cs
pop
lock
cmp
mov
cld
sti
stos
lahf
aad
pusha
mov
test
inc
sbb
dec
ds
leave
dec
sub
add
sarb
and
add
jp
outsl
and
jl
icebp
fucomp
adcl
xor
int3
test
pop
and
fcomp
out
fisttpll
fsubl
mov
push
fidivl
sbb
and
jl
mov
xor
fmull
ficompl
jle
scas
movsb
dec
ret
mull
fisttps
inc
das
mov
out
cmpsb
pop
xchg
inc
jnp
and
orl
inc
and
cwtl
or
fwait
jne
dec
ret
adc
and
dec
data16
add
sbb
test
inc
jb
adc
or
insl
or
cli
pop
ljmp
lods
decb
aad
fisubrs
cmpsl
imul
push
addb
adc
cmp
in
inc
jge
int3
out
mov
mov
xlat
push
mov
and
call
cmp
pop
xlat
and
sahf
sub
arpl
mov
int
and
lahf
adc
inc
and
cwtl
pop
pop
cmpsl
inc
mov
lret
js
xor
add
mov
and
adc
xchg
mov
into
mov
sub
insb
rcll
pop
add
and
cltd
scas
and
xchg
pop
add
inc
sbb
mov
dec
jmp
and
push
dec
inc
jnp
leave
outsl
and
and
stos
ljmp
mov
ret
ss
add
jo
pop
push
outsl
pusha
and
daa
jae
cs
fsubr
and
pushl
mov
sbb
inc
cld
popa
pop
mov
xlat
pop
and
mov
and
stos
xor
mov
dec
lods
cmp
mov
dec
loope
int
addr16
or
dec
mov
inc
push
and
mov
loope
xor
repnz
push
je
fsubs
cld
lds
mov
and
popf
iret
mov
stc
mov
and
sbb
aam
dec
shld
loopne
fstpl
int3
repnz
or
add
inc
pop
cwtl
les
and
out
push
addr16
loop
pop
and
stc
icebp
sub
sahf
dec
mov
jp
push
pusha
outsl
fdivrl
nop
iret
fcmovbe
dec
xchg
mov
jmp
mov
scas
pop
aas
adc
mov
jns
dec
nop
sbb
and
dec
stc
scas
pop
cld
jmp
push
xchg
jp
push
jmp
and
sbb
out
mov
cli
mov
shlb
and
add
fdivrl
push
es
push
inc
add
adcb
inc
idiv
mov
outsl
cmpsb
push
xchg
and
into
stos
sub
loopne
and
jecxz
mov
xchg
xlat
pop
shl
cs
jb
jbe
adc
out
add
or
pop
or
inc
shll
xchg
cmp
das
jae,pn
arpl
lds
and
ret
lret
hlt
push
ja
mov
lcall
sbb
fsubs
xor
fisubl
pop
call
addr16
add
jp
xchg
arpl
dec
jns
idivb
jecxz
out
das
jge
dec
add
mov
cld
pusha
jp
and
popa
in
inc
fnsave
cmp
mov
xchg
mov
jmp
addr16
and
das
ds
test
or
mov
push
jmp
das
hlt
dec
andb
pop
int
in
cld
push
push
pop
pop
cltd
out
and
xchg
call
scas
mov
mov
push
gs
les
pop
test
xchg
clc
push
and
push
loopne
outsb
jbe
cwtl
and
or
insl
xchg
in
loop
and
xor
loopne
mov
xor
sub
bound
scas
scas
mov
loope
test
or
add
test
insl
mov
adc
mov
cmp
cmp
lahf
or
mov
mov
inc
sbb
jae
or
pop
cmp
lods
add
mov
jl
and
xor
xchg
or
xor
je
test
sub
mov
pop
and
insb
jne
cltd
and
or
lret
xchg
fldt
pop
and
dec
pusha
jnp
shrl
sbb
ss
and
add
sbb
sub
sub
mov
mov
sbb
loopne
and
push
lea
mov
aam
mov
xchg
dec
xor
mov
adc
mov
or
insl
inc
shrb
or
hlt
sub
dec
aad
and
sub
loope
out
popf
clc
and
and
ss
push
and
cs
and
sahf
or
jne
shlb
pop
iret
xlat
lock
mov
and
jecxz
mov
sub
sahf
test
hlt
sbb
inc
sub
adc
cli
in
jge
inc
sub
and
and
das
scas
or
adcb
adc
inc
xchg
xor
in
cmp
sub
mov
pop
cmp
cmp
mov
inc
fldenv
push
dec
shrb
add
cmp
pop
jae
aam
mov
inc
inc
hlt
mov
add
jle
mov
popl
out
and
std
ljmp
sub
and
inc
and
lcall
mov
inc
and
int
push
dec
test
std
adc
subl
sub
loope
test
sbb
fldenv
mov
push
add
jb
push
and
mov
inc
mov
and
mov
cmp
jp
clc
call
dec
and
and
inc
xor
jnp
push
jns
mov
sub
test
and
insb
jmp
inc
add
and
pop
push
mov
loop
fstps
cwtl
popa
and
fs
jnp
sub
cmp
int3
rorb
mov
test
fs
jp
lock
adc
and
xchg
aas
and
dec
mov
popf
pop
sbb
and
lock
outsl
pop
push
mov
add
mov
push
mov
dec
adc
pop
xor
jp
out
icebp
jae
scas
cwtl
pusha
xor
mov
insl
inc
dec
and
adc
jne
jg
testl
loope
xor
cltd
dec
movsb
fisttpl
and
es
add
scas
and
fiaddl
or
pop
mov
cwtl
xor
sub
mov
and
out
jecxz
add
inc
in
pop
xor
dec
xor
adc
adc
out
std
dec
mov
lea
mov
iret
inc
jecxz
inc
mulb
jo
push
push
enter
and
and
inc
mov
mov
lods
lock
cmp
cmp
movsb
push
xchg
dec
not
and
inc
movsl
rorl
lret
inc
mov
in
aas
out
popa
popa
shrl
jns
push
jno
push
test
adc
xchg
fidivl
pusha
testl
pop
xchg
fucomi
and
into
add
pusha
xor
and
mov
clc
xchg
mov
ret
xlat
push
and
add
stc
scas
and
cmp
dec
and
popf
mov
inc
into
or
and
push
ret
dec
int3
outsb
pushf
push
mov
jge
out
and
dec
nop
popf
aad
lock
andl
pop
aaa
insb
outsb
xchg
mov
mov
and
stos
add
and
iret
adc
ja
sti
sub
pop
mov
pop
insb
daa
adc
mov
push
push
or
movsl
lea
inc
movsb
ret
fsub
into
sub
mov
inc
mov
sbb
dec
and
and
sub
push
sbb
or
roll
mov
movsl
inc
aas
jge
jo
std
add
cs
xchg
push
test
or
pushf
movsl
in
stc
cmp
push
test
lahf
std
sub
insl
add
fs
mov
push
jne
jmp
fcmove
imul
int
pop
iret
xchg
xchg
pop
lock
insb
push
inc
cmp
rcll
pop
mov
movsb
cmp
jb
lods
mov
and
or
push
xor
lea
cmp
loop
cmp
ret
push
and
push
sub
rcl
sub
sub
and
and
adc
push
aam
jp
and
jbe
inc
repz
or
pop
sub
xchg
insb
loopne
and
je
clc
and
mov
pop
sbb
adc
adc
shrl
leave
pop
rolb
lret
and
imul
mov
cmp
scas
fs
es
and
adc
jmp
outsl
aam
ds
cmpsl
jmp
jae
leave
cltd
mov
lds
xchg
dec
pop
cmp
jnp
mov
dec
and
xchg
push
xchg
mov
bound
or
push
loope
add
jne
shl
out
cmp
iret
loop
and
inc
or
fdiv
push
and
pop
cmp
and
mov
rclb
inc
sub
pop
ljmp
stos
and
sub
and
add
nop
in
mov
test
sub
ja
je
xchg
push
ljmp
sbbl
mov
and
or
xchg
mov
sub
stos
test
and
shl
xchg
loope
testl
cli
and
stos
adc
stc
cwtl
call
or
push
lock
inc
cs
nop
hlt
and
cld
mov
imul
and
aam
push
mov
and
int
enter
mov
inc
xor
sbb
or
nop
dec
rcr
ljmp
int3
mov
mov
jp
cwtl
hlt
cmp
mov
jne
jne
pop
stos
cmp
xchg
xchg
hlt
repnz
adc
ja
fstl
xchg
and
dec
sub
movsb
lods
aad
mov
and
aas
inc
or
ret
dec
and
push
mov
data16
fnstsw
cmp
inc
and
xor
and
jmp
je
xor
cltd
aad
lods
cwtl
sbb
push
xor
pop
es
xorb
dec
out
pop
test
arpl
and
cmpsl
add
sti
mov
and
mov
mov
push
xchg
cmp
cwtl
loopne
sub
dec
sbb
jge
jmp
shll
xlat
or
and
inc
mov
test
pop
lcall
das
jp
sbb
sbb
and
push
shlb
idivl
vpcmpgtd
and
int
or
aad
cmp
jle
stos
fwait
ljmp
pushf
ja
jns
mov
and
aas
gs
add
mov
popa
and
je
jbe
sbbb
ja
and
rcll
xchg
sbb
jp
mov
inc
fists
ret
sub
outsb
mov
popf
scas
popf
cmp
cmpsl
negl
push
sti
and
in
xchg
adc
and
test
scas
cltd
pushfw
clc
repz
hlt
lcall
push
dec
mov
sbb
dec
subl
sbb
lock
cld
mov
xchg
inc
add
test
ret
sti
mov
and
push
lret
pop
xor
jae
push
dec
fsts
adc
and
out
inc
push
push
mov
and
aad
mov
sbb
loopne
hlt
pop
cmpl
fisubrs
pop
lahf
add
call
test
sbb
imul
jle
insb
shll
ret
lret
in
imul
lock
jl
cmpsl
and
in
xor
int3
lea
test
push
add
ljmp
sbb
les
push
and
xchg
xor
test
pop
mov
movsb
cld
cmp
roll
push
jle
cmp
hlt
popa
and
jb
and
inc
jmp
test
and
pop
dec
aaa
cmp
sbb
scas
clc
leave
and
push
add
imul
dec
daa
and
and
test
xor
and
imul
lret
imull
daa
lret
cbtw
sub
outsl
clc
and
test
jmp
jae
sub
movsb
or
lock
shlb
out
inc
lahf
cli
and
mov
sub
mov
imul
imul
mov
mov
xchg
loopne
or
and
mov
cltd
je
cmpsl
and
leave
addr16
dec
andb
icebp
iret
add
incl
xchg
and
fwait
or
mov
shll
mov
outsb
aas
nop
sub
push
pop
adc
or
jne
jge
and
and
lahf
jmp
stc
sub
mov
fstl
les
das
push
cmp
andb
test
ds
cmpl
sbb
and
and
inc
nop
mov
jb
pusha
daa
xchg
inc
sbb
push
mov
addl
aas
jecxz
sbb
sub
jo
pop
mov
push
loopne
pop
sub
mov
and
adcl
in
rorb
movsb
cmp
cmpsl
movsl
push
mov
and
add
je
sbb
in
out
mov
sbb
push
add
nop
mov
xchg
mov
je
and
shrb
mov
ret
and
jmp
lods
jge
and
and
cmpsl
rorl
repnz
sub
jg
and
add
dec
pop
cwtl
lea
cmp
jns
xor
arpl
xchg
or
loope
mov
and
xchg
repz
cli
sbb
iret
or
and
nop
mov
inc
cmp
push
push
and
lods
inc
scas
mov
or
in
jmp
and
pop
popa
xchg
cmp
fs
push
pop
push
inc
mulb
popf
and
dec
mov
add
test
xchg
jge
mov
jp
sti
scas
movsl
outsl
pop
and
test
push
arpl
loopne
call
inc
imul
and
pop
jae
inc
dec
cmpsl
and
mov
out
mov
xchg
les
mov
xchg
inc
mov
cmc
and
sub
cs
mov
dec
arpl
ret
imul
fwait
mov
mov
in
in
sbb
sbb
shlb
cmp
lret
jecxz
mov
inc
add
fucomp
and
repnz
and
and
aad
imul
and
jae
andb
out
in
insl
popa
das
add
and
std
mov
add
es
xchg
mov
sub
and
adc
and
push
or
xor
mov
jecxz
scas
mov
xchg
into
aad
and
sub
mull
and
js
cmp
andl
mov
mov
inc
and
sub
repz
out
out
cmpl
xchg
insb
cli
jae
dec
pop
outsb
sub
xor
rolb
loopne
sbb
loop
push
cmc
xor
cld
sbbb
xor
and
adc
neg
out
and
vphsubwd
mov
inc
or
mov
mov
cs
fwait
or
rcrb
and
cld
ret
out
and
imull
and
pop
push
scas
popf
test
andl
adc
jge
and
add
shrb
cltd
jl
int
in
je
inc
xor
inc
sub
in
lahf
out
xchg
xchg
jne
sbb
in
and
xchg
fucomip
les
and
mov
or
shrl
pop
pop
out
cli
or
cmp
and
lahf
jnp
inc
ljmp
and
cs
sti
and
popa
daa
aaa
and
das
fwait
cmpsl
es
mov
jnp
push
and
in
sub
stos
pop
cltd
dec
xchg
inc
jns
and
push
and
xor
cli
dec
xor
int
push
mov
fisubs
xchg
jle
clc
js
ja
pop
into
adc
out
or
jnp
or
sti
loop
rcrb
mov
pop
mov
aad
pushl
cmp
mov
imul
daa
xchg
and
mov
jae
adc
push
mov
cmpsl
mov
repnz
and
mov
movsb
and
test
sbb
mov
fidivl
mov
imul
cltd
ss
sbb
and
call
cld
and
lret
repnz
rcrb
test
inc
gs
mov
cmp
jb
les
and
cld
cmp
adc
out
and
mov
push
ljmp
fidivs
ss
and
mov
nop
pop
jecxz
and
adc
and
jl
jmp
rcrb
out
sbb
and
or
shll
enter
test
jae
pop
push
dec
leave
and
mov
and
in
pop
xchg
idivl
cltd
jmp
push
jb
scas
insl
adc
fwait
and
lods
and
fs
add
sub
mov
push
xor
add
je
and
or
sub
mov
loope
and
test
mov
shll
and
int3
and
jg
or
ret
cwtl
sub
jp
shl
out
adc
or
xchg
cs
sbb
and
xor
arpl
and
mov
lock
leave
add
aaa
or
hlt
mov
sub
aas
cmp
and
xor
push
mov
shlb
scas
dec
daa
and
inc
loope
cmc
and
pop
add
and
and
lock
out
add
or
mov
cli
es
and
fmuls
movsb
movsl
mov
sub
or
and
mov
lret
fwait
and
test
or
pop
sub
xor
pop
mov
icebp
int3
dec
popa
sub
add
and
and
mov
sbb
inc
andl
leave
pop
mov
das
bnd
jae
and
push
enter
imul
addr16
mov
dec
push
xor
es
aaa
movsb
push
or
call
loop
fdivrl
movsb
or
add
insl
push
xchg
pop
rcrl
jns
add
pop
pop
sbb
xchg
mov
mov
jecxz
and
and
cmp
xchg
fs
pushf
addr16
fmull
cmp
push
ret
movsb
push
and
imul
pop
dec
and
push
cmpsb
pop
pop
mov
cmpl
or
mov
pop
mov
and
aad
dec
repz
lret
mov
push
and
ds
cli
adcb
add
sub
add
and
cmp
mov
sub
ss
dec
mov
sti
pop
dec
push
pop
push
adc
adc
xchg
or
repnz
and
inc
stc
ds
hlt
mov
or
and
lods
imul
cmp
enter
mov
or
rorl
cmp
pop
jnp
xchg
and
fidivrl
das
and
xchg
jp
pop
icebp
jl
push
stc
sub
and
loop
and
push
sub
jne
and
repnz
in
mov
and
adc
test
mov
insb
or
and
cmpsl
sub
cmp
push
shll
pusha
mov
cmp
sbb
sub
imul
or
jmp
ljmp
and
mov
jle
push
xor
std
lea
mov
jnp
and
mov
sbb
rclb
inc
mov
insl
cmp
jns
or
jle
sbb
popf
loope
sti
sar
gs
pop
cld
das
dec
inc
jbe
stos
adc
mov
imul
test
mov
fisubl
pop
dec
aam
sub
sbb
mov
mov
and
imul
jg
and
push
sbb
in
sub
aam
insb
and
cmpsl
adc
xchg
leave
inc
add
and
mov
or
sarl
mov
sbb
stos
js
mov
es
sub
in
je
sub
arpl
sub
in
flds
aas
sarb
mov
xchg
in
xor
aaa
mov
xor
push
je
jne
lcall
dec
repnz
mov
addb
arpl
ror
lds
and
nop
ss
les
push
loop
inc
sbb
pop
push
leave
xor
aas
loope
dec
xlat
or
lahf
and
push
in
adc
add
mov
sub
pop
loope
lcall
cli
scas
cmp
mull
scas
sub
and
in
xor
xor
sub
xchg
or
or
xchg
hlt
inc
push
and
push
and
mov
sbb
pop
and
lcall
test
cmp
and
xchg
cmpl
push
clc
cld
and
fists
mull
int3
out
lret
ret
pop
fidivrl
mov
cmp
xor
xchg
fnstsw
sub
jp
push
pop
sub
stos
jg
ja
fldenv
or
cmp
movsb
xchg
and
mov
int3
mov
sub
ret
adc
and
push
pop
bound
push
mov
xchg
add
popa
mov
inc
mov
cmpsb
andl
in
loop
and
je
mov
jns
popf
push
sub
push
push
and
dec
cmpb
cmpsb
pop
movsb
je
jnp
and
sti
enter
aam
and
mov
getsec
push
sbb
pop
xchg
aad
and
jecxz
xlat
and
sti
rorb
add
sbb
int3
out
test
or
push
xchg
aad
mov
gs
das
pop
mov
jae
mov
enter
cmp
xorl
aad
and
mov
sbb
and
push
orb
cmpsl
movsl
inc
mov
jmp
add
and
xchg
outsb
mov
arpl
and
inc
lahf
xchg
cwtl
jp
sub
mov
pusha
shl
pusha
inc
add
movsl
or
sbb
ja
clc
and
xchg
push
push
and
mov
and
push
ss
ret
and
data16
and
je
dec
lods
push
jb
in
ja
pop
and
push
in
cmp
rcrl
or
mov
and
and
dec
mov
fisubl
outsl
push
mov
mov
test
add
adc
loopne
loop
lea
and
dec
and
jb
adc
fiaddl
pop
in
and
xchg
jg
inc
sub
xchg
mov
test
cmp
icebp
pop
cmp
mov
mov
cmpsl
and
adc
mov
pop
mov
adc
lods
push
or
mov
mov
lret
insl
jge
add
into
and
jl
cmp
dec
push
xchg
test
and
sahf
pop
xor
jl
pop
test
add
push
add
lret
int
xchg
sub
xor
and
dec
mov
out
and
pop
es
and
lods
movsl
dec
adc
nop
inc
mov
dec
xchg
lock
sarl
aaa
lds
in
xchg
fwait
sar
lea
add
cmp
adc
dec
sub
sbb
loopne
sub
dec
jecxz
insl
jno
repz
and
sub
xchg
loop
ficoms
jo
push
clc
scas
sbb
or
mov
adc
sub
and
adc
jle
incl
mov
xlat
cli
pop
and
sub
aas
push
out
and
sub
imul
and
sub
mov
in
sbb
inc
cmp
adc
and
aam
sbb
cmpsl
insl
aad
leave
int3
popa
or
andb
xor
mov
sbb
adc
lock
sahf
mov
mov
jae
sub
inc
fcomps
sbb
cmp
and
loop
and
rorb
jl
gs
ret
add
xor
and
std
roll
cmp
lahf
fnsave
repnz
sub
mov
push
sub
ss
jecxz
lcall
out
stos
push
jne
inc
sub
dec
mov
pop
sub
enter
sbb
pop
addr16
or
movsb
cmpsb
mov
pop
mov
shrb
adc
in
xchg
movsb
insb
and
fisttps
push
jmp
aad
ds
inc
push
cmpb
fstpl
arpl
cs
pop
push
jb
je
jmp
jo
insb
and
sbbl
mov
adc
outsb
push
daa
js
or
mov
cmpsb
pop
and
int3
mov
popf
mov
add
and
cwtl
arpl
jae
out
xchg
adc
and
xchg
cltd
inc
test
bound
cld
mov
mov
iret
inc
cli
das
xchg
nop
mov
cmp
mov
push
inc
and
xor
fld
cli
push
sub
cmp
jecxz
scas
shrl
lock
adc
and
repz
movsb
jne
aad
xor
pop
xchg
push
and
loop
and
mov
push
xor
and
cltd
inc
xchg
pop
adc
lret
outsl
or
jnp
mov
stos
in
popf
mov
cmpsb
or
sbb
cmp
shll
and
test
mov
or
sbb
adc
pop
rcl
int3
aaa
outsb
adc
mov
mov
scas
mov
mov
mov
mov
test
jge
shlb
std
movsl
lahf
inc
sub
lret
scas
inc
dec
jle
sarb
int3
in
or
arpl
aad
mov
jno
adc
sub
or
popa
and
dec
roll
xchg
mov
jmp
scas
mov
or
clc
jbe
and
push
mov
and
pop
cmp
dec
xchg
pop
in
les
and
test
and
frstpm(287
test
aaa
pop
aad
dec
movsb
fsubl
mov
call
cmpl
and
cli
xchg
or
imul
add
add
in
dec
fbstp
jecxz
and
xchg
sub
mov
cltd
adc
dec
jecxz
out
mov
or
xchg
and
fsubrs
fmull
imulb
loope
mov
mov
fs
enter
pop
movsl
mov
mov
insl
sub
cltd
fdivr
decb
bound
jbe
lret
dec
jge
in
add
add
jle
and
sub
es
mov
xor
xlat
and
pop
inc
sub
mov
ss
leave
ds
and
and
mov
and
xchg
jecxz
aaa
retw
testb
aam
shl
in
sbbl
pop
rcrb
loope
repnz
and
mov
andb
shr
dec
scas
push
mov
stos
pop
cmp
jecxz
aas
and
out
loope
push
mov
cmp
dec
cld
sbb
add
pop
cwtl
xchg
test
and
pop
and
loope
scas
pop
push
pop
or
and
and
mov
clc
leave
pusha
addr16
fldt
pop
adc
fbstp
in
inc
add
les
sti
xor
mov
push
sbb
mov
sbb
jno
fimuls
fidivrl
and
xchg
hlt
mov
pop
adc
xchg
mov
and
adc
dec
outsb
mov
aas
xchg
ss
and
jbe
xor
xchg
pop
shrb
jae
repz
lahf
mov
pop
sub
mov
and
dec
and
rorb
push
in
fbld
and
lods
inc
das
pop
jle
jmp
push
push
stos
insl
xchg
and
scas
loop
outsl
sahf
push
cltd
inc
ja
imul
fisubl
and
inc
inc
and
lcall
and
and
daa
divl
dec
outsl
and
call
push
xorl
test
sbb
arpl
mov
add
stos
cmp
and
and
mov
lcall
ljmp
and
daa
jmp
adc
and
leave
cmpsb
andl
mov
xor
mov
add
push
and
adc
inc
popf
xor
or
mov
into
add
daa
fbstp
dec
bswap
in
in
aaa
sub
mov
mov
add
lods
mov
add
out
rcrl
pop
fildl
sub
cmp
icebp
bound
jge
fmull
push
iret
add
add
xchg
cmp
mov
and
xor
dec
ret
call
or
cltd
scas
std
or
mov
outsl
xchg
mov
cmp
fidivrs
daa
loope
test
cltd
xchg
popf
add
inc
and
push
mov
aad
push
and
mov
incb
jg
andb
test
mov
pusha
sti
fisubrs
jp
test
cmp
mov
add
bound
or
pop
push
inc
pop
mov
sbb
enter
stos
jae
or
in
mov
inc
inc
aaa
test
push
pop
adc
das
movsl
outsb
push
and
cmp
lea
imul
push
into
arpl
pop
mov
push
lcall
push
sti
or
movsl
in
and
lret
jns
jne
xchg
cs
xor
cmpsl
in
adc
add
out
adc
mov
sbb
lds
xor
mov
jbe
ficoms
es
jo
pop
pop
xchg
push
jae
mov
scas
cmpsb
jecxz,pt
jecxz
movsb
xchg
and
int
mov
mov
adcl
pop
in
or
xchg
mov
cmp
cmc
lahf
fistps
repz
push
clc
sahf
or
and
push
jecxz
xor
xor
mov
push
fcompl
inc
loopne
sbb
mov
add
push
cs
shl
insb
in
movsb
cmc
mov
pop
pop
mov
pop
adc
pop
out
xchg
mov
pop
fdivrs
outsb
lods
jne
lret
and
mov
mov
iret
movl
push
and
stos
fimuls
mov
and
es
rorl
mov
cmp
xor
loopne
add
call
dec
or
loop
and
popa
jo
xor
movsl
mov
test
aaa
jmp
jle
push
and
lds
pop
mov
pop
ret
clc
and
popa
test
cmpb
push
cmp
aas
leave
or
and
xlat
inc
pop
aam
jmp
jecxz
inc
push
pop
jo
and
pop
movsb
inc
aaa
std
test
adc
push
xor
dec
sub
mov
and
adc
test
and
add
stc
gs
and
insl
jmp
ss
nop
inc
mov
lods
push
and
mov
push
mov
call
cmp
ja
xchg
and
push
mov
push
shlb
and
mov
sub
xchg
idiv
add
mov
dec
imul
ret
adc
je
and
inc
dec
in
push
jns
and
insb
add
and
adcb
push
rclb
outsb
and
lock
int
xor
sub
xchg
and
xchg
aam
and
out
js
imul
fyl2xp1
cmp
shlb
dec
mov
gs
push
sti
or
jo
inc
mov
lea
stos
mov
in
push
dec
and
mov
xchg
and
mull
cmp
inc
in
sarb
sbb
dec
cmp
hlt
xchg
mov
sbbl
dec
repnz
pop
mov
mov
rorb
pop
jbe
mov
or
push
cmp
and
xor
test
push
popa
pushf
insb
adc
sahf
aaa
sbb
or
push
addr16
inc
mov
lcall
sub
aam
xchg
and
jb
cs
hlt
mov
popf
scas
in
outsb
mov
mov
loope
sbb
ja
in
add
int3
push
cmp
in
lahf
popa
and
nop
iret
cwtl
pushf
inc
inc
and
out
add
loope
mov
je
push
sub
cli
adc
jle
mov
cltd
ja
out
faddl
lret
iret
mov
in
popa
push
mov
stos
and
shl
push
push
cmp
xor
call
dec
mov
jmp
and
repnz
dec
cmpsl
inc
xor
mov
popl
call
and
dec
and
mov
xor
and
fs
jmp
stos
outsl
sub
pop
sub
mov
add
and
dec
ljmp
idivb
dec
pop
sub
push
in
adc
push
call
pop
or
push
push
inc
xor
inc
aad
out
mov
das
jecxz
movsl
jae
and
insb
imul
mov
and
bound
insl
scas
ljmp
mov
cmp
xor
and
lret
inc
lds
repnz
in
xchg
add
scas
push
sbb
xor
flds
sub
sub
pusha
sbb
dec
jle
jbe
xchg
pop
shrb
adc
and
addr16
mov
sub
ds
and
rcrb
bound
enter
leave
fisttpll
je
pop
shlb
ds
in
pop
les
pop
jns
mov
cmp
adc
daa
pushf
inc
pop
sbb
push
and
stc
and
dec
and
sbb
xchg
and
sti
xchg
push
ja
or
and
ljmp
and
adc
xor
lods
dec
jecxz
aad
add
dec
pop
xchg
mov
inc
and
aas
adc
adc
sub
and
sbb
data16
repnz
repz
ja
mov
push
cmpsb
jne
pop
lahf
jmp
and
sbb
mov
and
testb
mov
in
filds
jge
loop
add
xchg
cmpsb
gs
in
out
mov
mov
adc
test
loop
inc
sub
cmp
movsb
push
leave
jne
shl
fisubl
pushf
dec
xchg
cmp
test
and
mov
jae
cmp
ror
and
and
pop
lods
and
sub
cmp
mov
pop
and
and
add
fldenv
and
mov
movlps
inc
dec
xchg
mov
add
fcoms
js
pop
adc
inc
jb
and
imul
or
xchg
lods
fs
xchg
and
ss
mov
or
and
xchg
jmp
dec
and
push
mov
xor
repz
dec
add
lds
jl
inc
and
pop
inc
xlat
int
add
pop
imul
sub
les
ret
cwtl
cmpsl
imul
mov
lret
movsb
and
push
push
sbb
add
sti
aam
mov
cmpsl
addb
testb
push
cld
call
jnp
xor
das
xor
pop
pop
mov
push
jne
pop
sbb
jnp
std
cs
js
mov
mov
xchg
lods
shlb
add
xlat
or
push
stos
clc
mov
out
inc
mov
fsubl
sub
and
fdiv
inc
and
pushf
inc
das
push
lods
ljmp
stc
stos
and
sub
ss
and
or
pop
and
outsb
xchg
daa
mov
mov
pusha
decl
sub
sbb
push
pushf
jecxz
jnp
and
cmc
mov
pop
push
mov
push
mov
adc
testl
pop
and
imul
and
pushf
dec
and
and
mov
ss
insl
mov
push
movsb
xor
sub
lds
dec
fldcw
pushw
popf
and
fsubs
push
test
sbb
add
add
inc
xor
ret
push
and
mov
icebp
add
mov
and
out
cmp
sbbb
dec
bound
stos
mov
mov
and
jp
add
xchg
xchg
mov
roll
aas
and
sbb
rcrb
dec
lret
notl
jbe
and
icebp
adc
inc
daa
pop
or
pop
xlat
movsl
pusha
and
pop
lret
fs
sub
and
mov
in
and
adc
dec
and
sbb
mov
and
jmp
jp
outsl
rcll
push
and
aaa
xor
and
sbbl
sbb
and
pop
mov
jnp
into
adc
sbb
out
pusha
in
sbb
inc
and
jne
lahf
adc
jmp
jae
or
and
mov
mov
mov
sbb
jno
xor
jp
and
lret
adc
and
lea
add
daa
jge
xchg
loopne
adc
out
add
and
xchg
xor
push
pusha
xlat
xchg
and
mov
and
jbe
mov
and
out
jnp
mov
incl
lcall
mov
push
ret
sti
push
mov
and
cmp
inc
in
scas
add
dec
sbb
sub
idivl
and
ret
cmp
mov
and
mov
ja
push
add
mov
jno
add
push
cmp
mov
xchg
inc
addr16
ret
mov
call
ljmp
cmc
fsub
in
push
add
and
out
dec
jo
or
jne
mov
inc
xchg
test
fsubs
add
lods
jbe
lock
push
call
add
and
lahf
push
dec
adc
and
push
sbb
sbb
shll
and
pop
out
orb
and
push
add
icebp
xchg
mov
cld
testl
aam
std
jmp
shrb
iret
and
pop
mov
aad
mov
fisubrl
push
and
pop
and
xchg
out
and
data16
ds
mov
outsb
and
cmp
mov
and
pop
cwtl
stos
cmp
push
adc
repz
cmpsb
sbb
inc
and
es
jp
negl
and
pop
mov
and
and
nop
xlat
fwait
out
pushw
sbb
iret
push
mov
hlt
in
sub
dec
add
mov
sub
mov
jg
shrl
pop
xorb
negb
lods
and
fiadds
sbb
mov
pusha
pop
jle
mov
out
push
xor
ficomps
in
push
and
or
lods
cmpsb
rolb
inc
inc
adc
sub
imul
push
mov
and
pop
imul
and
movsb
fwait
scas
das
mov
mov
cli
adc
pop
and
dec
dec
add
fidivs
or
addb
jmp
xchg
das
test
jb
and
dec
aaa
push
je
popf
insl
sub
enter
clc
xchg
imul
mov
and
dec
inc
gs
subl
ds
jecxz
push
cmp
ret
mov
adc
and
jl
or
mov
and
mov
aaa
std
jno
sub
aas
cmp
lcall
aam
push
sub
in
or
push
push
dec
shlb
aaa
cmpl
sbb
lcall
xor
fmul
mov
sbb
mov
stos
or
das
fucom
ds
and
cmc
cs
mull
sbb
cmp
dec
daa
and
lcall
idivl
cwtl
mov
and
insb
jge
shl
loopne
jnp
shrl
je
inc
pop
vpmaxub
shll
sub
xor
orl
pop
sarl
and
jne
pushf
int3
in
xchg
or
test
xchg
cwtl
shll
and
out
ja
sub
sub
cmp
jne
sbb
mov
push
fdiv
loop
iret
and
mov
adc
mov
cld
shl
and
jno
and
inc
add
and
or
popf
aas
and
das
add
adc
daa
cmp
les
loop
and
cmp
and
mov
stos
push
and
cmc
cli
dec
and
jl
mov
andb
cld
mov
mov
sti
and
mov
outsl
mov
inc
or
xchg
jecxz
and
inc
sub
mov
les
xor
pop
dec
dec
ljmp
xor
xchg
sbb
sub
sti
mov
and
clc
aad
fsubr
mov
mov
subl
inc
imul
aam
inc
dec
and
rolb
mov
sbb
ret
xor
in
sub
and
lret
fimuls
loop
add
jns
adc
push
and
mov
shlb
mov
add
mov
test
and
popa
and
and
fcmovnbe
std
mov
insb
mov
fmuls
and
dec
ret
add
push
dec
xchg
cmp
loopne
jge
inc
cmp
jg
dec
cmc
sub
in
add
and
mov
dec
cmp
pushf
push
sbb
pop
push
sti
mov
and
dec
mov
loope
andl
mov
mov
cmp
into
cmp
lea
test
cmp
mov
clc
cmc
testl
stos
dec
mov
fisubrs
cmpsl
and
and
push
mov
enter
and
and
and
jb
mov
sbb
push
loop
lahf
in
and
mov
jb
add
lret
testl
rcll
and
test
jnp
lret
and
add
and
xchg
and
jl
push
and
push
pusha
das
xor
adc
test
sbb
and
xor
stos
and
sti
add
pop
mov
lock
xor
aam
xchg
cmp
cmp
shll
and
dec
lods
shl
dec
repz
jbe
inc
out
cmpsb
sub
xchg
push
xchg
imul
in
aaa
push
pop
sbb
hlt
or
and
std
sub
cld
dec
sub
add
adc
mov
adc
mov
xchg
mov
rcrl
mov
inc
mov
mov
loope
jnp
clc
cmp
inc
pop
or
jecxz
add
sub
pushf
or
and
cmp
inc
in
mov
xchg
sub
sbb
dec
lods
sub
xchg
sahf
mov
movsb
add
mov
jns
push
in
sarl
and
dec
aam
ss
cmpsl
and
jne
leave
addb
sub
xchg
mov
dec
js
lock
xor
mov
mov
dec
push
and
pop
adc
arpl
test
test
sarb
inc
xchg
mov
or
fimull
and
enter
jmp
push
cld
mull
ds
or
and
inc
out
and
lcall
bound
negl
arpl
mov
mov
push
rol
popf
mov
dec
sahf
rorb
pop
inc
mov
mov
sti
push
cmpsl
cld
dec
bnd
int3
cmp
fcmovnb
xor
or
jl
push
inc
frstor
or
in
popf
mov
pop
outsb
test
mov
adc
stos
fsubrp
push
mov
inc
or
movswl
imul
mov
xor
xchg
pop
push
ds
loop
or
and
adc
add
push
mov
push
movsb
sbb
mov
cmp
ret
sti
jg
negb
add
adc
and
jp
mov
dec
dec
xor
js
xchg
push
repnz
inc
sub
push
and
mov
ja
add
cld
fdivrl
xchg
iret
out
stc
or
and
push
add
mov
ret
cwtl
jbe
inc
push
add
mov
or
lret
mov
push
and
outsb
cltd
into
and
jne
aam
xchg
xchg
dec
xor
out
ss
xor
lods
subb
dec
adc
sbb
and
and
pop
and
cld
sti
and
mov
outsl
cmp
dec
mov
loope
add
inc
sub
cli
imul
icebp
mulb
leave
loop
pop
sarl
insl
dec
adc
and
lods
and
or
cmp
and
clc
roll
jge
mov
dec
das
xchg
test
pushl
sbb
imul
and
mov
mov
add
les
rcl
bound
lret
lods
mov
cltd
sbb
lcall
jns
adc
and
xchg
shl
das
or
les
dec
cltd
es
fs
movsb
pop
test
mov
jb
imul
ret
test
xchg
inc
mov
scas
jle
div
xor
cwtl
pop
add
adc
and
lock
and
pop
mov
setl
push
xor
mov
int3
mov
sub
xchg
and
and
and
dec
and
inc
outsb
or
and
movl
fistps
push
inc
and
sbb
cmc
adc
jmp
dec
jne
cli
cld
mov
mov
aas
daa
mov
inc
dec
push
and
cmp
mov
cmpsb
cmp
jb
mov
push
xchg
arpl
mov
dec
fwait
adc
stc
or
sarl
and
mov
sub
pop
xlat
movsb
xchg
mov
adc
jp
xor
daa
mov
push
scas
lret
push
fs
push
sbb
sub
xor
iret
int3
and
pop
sub
pop
shlb
mov
jecxz
and
pop
iret
push
and
repz
js
out
sbb
push
or
vmovaps
outsb
mov
fwait
std
sbb
lea
xchg
and
idivl
mov
test
and
stc
xchg
pusha
and
jo
mov
aaa
and
mov
in
mov
and
loope
daa
out
mov
pop
xchg
lcall
adc
push
pop
in
pop
mov
or
lret
mov
sub
xlat
movsb
and
mov
mov
xor
and
loopne
sub
mulb
clc
movsb
je
jge
roll
hlt
sbb
adc
mov
and
and
add
push
adc
in
and
aas
lock
lahf
dec
xor
jl
sub
jno
sti
cmc
and
arpl
ret
mov
and
cmp
xchg
insb
adc
loope
and
push
mov
sbb
les
movsb
pop
cmp
out
das
jbe
pushf
push
inc
repnz
int3
add
ljmp
xor
and
mov
sub
test
and
jg
flds
inc
and
incl
and
sbb
pop
and
jo
leave
inc
mov
add
test
stos
and
pop
in
rcrb
mull
stc
inc
das
push
push
sbb
frstor
or
pop
jns
pop
xchg
and
xchg
jp
cmp
les
and
mov
insb
xchg
jp,pn
adc
and
and
adc
sbb
lcall
shll
cmpsb
and
mov
int3
test
test
hlt
xor
sub
xor
cwtl
or
cmpsl
jp
pushf
int3
ss
in
lock
outsb
xchg
movsb
shrb
sub
sbb
add
ja
mov
dec
and
adc
push
cmp
dec
aas
sbb
rcll
mov
and
sbb
and
mov
lret
aas
mov
xor
and
out
out
pop
jecxz
and
cmp
fidivl
dec
dec
frstor
sbb
mov
mov
ja
sti
sbb
outsl
and
cmc
mov
xchg
and
dec
mov
loopne
cmp
test
call
lock
dec
inc
cltd
adc
add
pop
ja
or
adc
fildl
loopne
aad
or
mov
jae
sbb
sub
adc
pop
sbb
fs
frstor
lahf
lds
aas
sbb
push
movsl
sub
leave
lods
pop
test
xor
mov
test
xchg
and
ficomps
andl
xchg
sbb
pop
inc
inc
popa
stc
lds
std
mov
fucomi
and
mov
aaa
and
sub
sbb
mov
jecxz
xchg
fwait
mov
clc
ljmp
hlt
pop
or
lods
and
add
imul
in
test
popa
lods
mov
and
xor
repnz
and
jno
shll
add
in
ja
and
imull
and
mov
push
repnz
jne
lcall
iret
cmc
cs
jmp
pop
rcll
and
out
cmp
jbe
mov
push
inc
pop
xchg
popf
xchg
fsubs
sub
xchg
xlat
sub
jb
push
pop
cmp
push
xchg
mov
fstps
inc
mov
gs
xor
in
cmp
or
insb
and
add
imul
xchg
mov
push
xchg
repnz
out
lea
push
es
and
push
sub
sbb
fs
xorb
lods
or
shll
stos
int
mov
xchg
jmp
mov
ljmp
cmp
sarl
pop
imul
and
repz
push
and
pop
pushf
jmp
mov
pop
push
mov
iret
aaa
and
fwait
xchg
and
pusha
lea
repnz
mov
pop
sub
ret
xchg
mov
roll
in
sub
mov
and
mov
sub
and
push
lods
fdivrl
fdivrp
and
loope
daa
je
cmpsl
loop
xor
and
jecxz
popa
mov
mov
and
push
inc
sar
cmp
and
ficoml
int3
stos
xchg
mov
icebp
pusha
push
jno
sbb
and
add
add
xor
and
fisubs
and
adcl
and
add
aam
sti
stc
add
leave
pop
xchg
push
cmp
cld
mov
xchg
add
dec
mov
lea
aad
or
mov
and
sub
aaa
pop
or
lock
push
js
and
pushf
xchg
shlb
jno
gs
cmp
inc
and
dec
les
pop
dec
push
push
pushf
aam
cli
and
mov
xchg
inc
sahf
or
ljmp
inc
and
aam
xchg
ss
ja
lcall
notb
pop
mov
dec
and
inc
lock
cmp
cmp
pusha
sbb
les
mov
mov
stc
sbb
sbb
and
adc
cmp
idivl
test
ret
push
or
mov
add
or
fmull
ret
xchg
and
push
dec
test
mov
and
aad
je
mov
dec
insb
vpmovzxbq
sti
dec
add
sbb
lods
inc
mov
dec
adc
cmpsb
adc
xor
inc
add
mov
and
dec
mov
and
adc
repz
add
pop
jmp
or
push
add
cwtl
push
push
iret
rorl
sub
test
in
add
push
aas
pop
in
jae
jo
and
push
cmp
and
icebp
ret
xchg
inc
and
sbb
dec
popf
insb
push
dec
xor
fldln2
or
push
cwtl
jno
xor
adc
pop
dec
xorb
pop
pop
and
sti
and
and
push
cli
and
jb
add
xor
mov
addb
push
inc
adc
test
cmp
pop
ljmp
or
and
loopne
arpl
mov
add
and
or
xchg
nop
imul
push
imul
or
cltd
xor
mov
xchg
mov
stc
test
and
lret
jmp
push
fs
fistl
shrb
sub
inc
inc
cmp
jle
es
add
cltd
xchg
dec
sub
and
aaa
loop
and
xchg
sub
and
mov
cmp
shlb
xchg
push
and
lret
xchg
jo
and
and
lret
movsl
jno
adc
push
cmpsl
push
and
jns
cmp
and
scas
testb
mov
and
inc
in
enter
xor
sub
mov
push
incb
gs
dec
cmpsb
sub
std
inc
mov
add
and
in
push
test
xchg
mov
orb
inc
sahf
sbb
add
adc
and
lods
loop
xchg
jne
dec
and
inc
pop
dec
adc
dec
lock
adc
dec
out
xor
sbb
jne
mov
inc
inc
repz
and
push
jbe,pt
jb
mov
or
push
popa
and
xor
out
mov
lcall
or
adc
mov
mov
jge
jmp
and
mov
jo
int3
fnstsw
and
add
aaa
sbb
cmpsb
jbe
fs
dec
xor
and
inc
mov
xchg
xchg
push
mov
mov
jp
and
lods
and
pop
push
fs
clc
fs
and
push
outsl
or
pop
hlt
stos
and
push
push
mulb
and
cmpsb
sbb
add
or
sbb
sub
orl
add
cmp
aaa
sub
stc
scas
and
pushf
mov
push
jo
or
ret
sub
loope
jae
clc
and
jl
mov
test
fstpl
add
lea
inc
add
push
sub
inc
ret
xlat
fildl
cmp
mov
xor
shll
mov
fisttpll
xchg
sahf
mull
movsb
dec
sbbb
sbb
fildll
adc
rcrl
cmpsl
push
xchg
sub
sub
shrl
adc
xor
das
jnp
shlb
sahf
adc
xor
sbb
xchg
in
push
pop
and
arpl
inc
imul
testb
and
fcmovnbe
mov
inc
and
pop
xchg
pop
mov
and
and
cmp
fidivs
and
shl
and
xchg
inc
jl
jne
ljmp
mov
and
scas
push
jl
inc
lahf
adc
nop
mov
dec
push
mov
xchg
and
les
cmp
aas
and
iret
inc
xchg
and
outsb
dec
xchg
jo
cli
add
mov
xchg
jae
lahf
xor
nop
fst
insl
mov
dec
not
shrb
adc
popa
push
lret
jae
fdivl
and
cwtl
or
jno
jns
cmp
inc
std
or
xor
jmp
inc
adc
insb
enter
xchg
and
mov
and
inc
sbb
cmp
in
popa
cmpsb
out
xor
int3
sbb
jae
mov
movsb
bound
sub
out
push
jno
xchg
and
mov
and
ja
cs
inc
iret
and
xchg
in
adc
shrl
fimull
aas
adc
ret
pop
fldt
cmp
mov
adc
inc
and
jmp
add
fcoms
push
cltd
push
gs
and
sbb
or
jne
and
jns
xchg
andb
and
divb
stos
and
in
lcall
aad
add
xor
mov
cltd
sub
dec
mov
xor
out
mov
mov
repnz
mov
test
or
shll
xchg
leave
adc
cmp
mov
test
stc
mov
mov
pushf
push
push
and
rcl
jge
movsl
cmp
or
add
mov
xchg
jmp
int
and
sbb
jb
and
stos
xchg
sub
mov
ljmp
aam
test
jg
add
push
out
push
sbb
or
movsb
pushl
cmp
push
and
insb
cmp
hlt
mov
orl
inc
dec
in
and
and
and
pushf
outsb
cmp
lock
mov
popa
test
test
stos
outsl
je,pt
push
and
sbbl
divb
cmp
hlt
jo
jnp
mov
and
cmc
inc
test
and
pop
and
push
fcompl
dec
stos
sub
adc
aam
out
sbb
dec
mov
inc
xor
jns
push
scas
lret
lcall
movsl
das
movl
add
mov
popf
je
sbb
and
lock
and
je
add
xor
jge
push
pop
add
mov
movsb
fdivrl
fidivrl
xor
adc
inc
xchg
pop
and
cmpsb
and
arpl
in
and
int
mov
xchg
xor
mov
sarb
inc
out
and
push
fwait
and
movsb
mov
and
xchg
jg
lods
ret
cmpsl
andl
test
inc
pop
dec
subb
push
and
addl
data16
les
rcrb
lds
and
sub
push
xchg
dec
pop
push
dec
add
and
test
jmp
cmp
stc
loope
inc
insl
nop
and
add
and
loop
and
cmp
push
clc
stos
mov
and
rorl
out
add
adc
mov
mov
andl
xlat
ja
outsl
mov
push
or
jno
pop
mov
cmp
or
jecxz
mov
mov
mov
dec
int
mov
push
mov
and
test
pop
push
cmp
andb
das
add
pop
cmp
jnp
loope
sub
push
push
xor
daa
xlat
mov
jbe
sub
and
pop
add
scas
arpl
das
xchg
das
fnop
cmp
xorl
jecxz
and
dec
gs
scas
mov
and
pop
inc
push
dec
and
int
mov
cmp
and
mov
in
repnz
call
and
lret
add
mov
movsl
in
jae
and
jo
rcrb
fdivs
and
and
or
adcl
icebp
rcrb
push
mov
jnp
ret
cmp
mov
js
pop
jp
arpl
push
bound
and
adc
cmp
icebp
out
and
outsb
fcoms
cmpsb
jp
jecxz
imul
les
je
mov
sub
int3
fisttps
insb
mov
js
push
je
sub
sub
in
sbb
in
inc
mov
mov
jno
sbb
lret
stos
inc
dec
rcrl
and
sub
in
bnd
and
lea
cwtl
loopne
xchg
in
jp
rep
out
mov
lock
jge
jno
loop
in
sahf
loopne
and
xchg
sbb
iret
fsubrp
mov
and
xor
xor
mov
and
dec
lock
jno
cmp
fildll
in
icebp
sbb
es
dec
daa
and
and
inc
cmp
sarl
insl
cltd
and
xor
push
and
jle
es
out
dec
pop
inc
repz
and
cltd
fcoms
xchg
and
rol
outsl
and
push
mov
xor
mov
inc
jecxz
in
jge
and
scas
pop
pop
add
and
adc
sbb
push
or
out
cwtl
mov
inc
aad
pop
adc
xchg
jns
pop
sti
enter
arpl
and
mov
mov
xor
and
push
fnstcw
xchg
rolb
ror
and
sub
jle
divl
and
mov
mov
jns
sbb
sub
inc
and
xchg
sub
mov
pusha
and
jg
popa
inc
sbb
jbe
mov
pop
xchg
into
and
mov
and
cmp
and
xor
or
and
scas
outsl
push
nop
hlt
and
pop
lock
inc
out
shr
jo
fistps
fisubrs
push
dec
cmp
lea
pushf
and
outsb
icebp
mov
adc
and
js
add
mov
push
std
mov
jecxz
and
jmp
and
sub
test
push
add
scas
adcl
loop
sti
cmc
xorl
dec
and
fistl
cmp
cmp
or
dec
add
inc
and
aad
mov
xchg
test
push
bound
jnp
push
mov
pop
sub
mov
xchg
lods
or
shrl
and
outsl
jne
lret
adc
ss
popa
add
pop
fisubrl
xchg
sub
inc
arpl
in
and
add
xchg
and
pop
popf
popa
and
jne
mov
jecxz
mov
or
mov
adc
and
cmp
pushl
scas
sti
in
les
pusha
push
jmp
shlb
fidivrs
out
lea
shrl
dec
daa
adc
add
into
adc
stc
lds
push
insl
leave
add
and
pop
jno
lods
mov
outsb
jecxz
loope
and
adc
lds
bound
negl
push
outsl
and
out
cwtl
and
lret
leave
mov
arpl
lcall
imul
mov
out
mov
imul
lock
xchg
inc
adc
sbb
in
sub
ja
add
mov
or
and
je
icebp
aam
add
add
mov
jnp
movsl
lock
rcr
mov
cltd
gs
sub
pop
and
mov
loope
js
dec
outsl
vcvtpd2ps
dec
shrb
add
pop
sbb
sub
mov
xor
inc
sub
ret
jmp
cmp
int
mov
hlt
test
bnd
sbb
cmp
jecxz
xchg
mov
out
ficoml
sub
outsl
nop
inc
xor
sbb
daa
xor
and
sub
pushl
lods
arpl
cmp
mov
or
xor
jecxz
xchg
outsl
add
movsb
lods
inc
pop
push
movsb
or
stos
shll
and
jle
outsb
notl
pushf
or
pop
sub
push
inc
call
mov
stos
or
and
cmp
sbb
pop
scas
jnp
cmpsb
mov
xor
or
lds
jo
insb
pop
clc
inc
xor
mov
lret
aam
pop
sbb
pop
sbb
gs
clc
roll
cmp
lahf
and
movsb
mov
fdivrs
sub
sbb
fldenv
mov
inc
fmul
and
sbb
mov
push
and
mov
push
sub
ja
outsl
andb
fs
iret
lcall
aas
and
pop
and
or
popf
ret
xor
mov
cmp
mov
ret
inc
out
xchg
inc
sub
cli
sbb
and
fcmovne
and
in
popf
mov
and
fwait
aaa
scas
and
dec
sub
dec
adc
pop
and
jae
pop
cmpb
add
xor
mov
dec
jecxz
outsl
adc
aas
daa
ror
push
ja
stos
call
sub
mov
pop
and
sub
cmp
push
outsl
adc
in
out
xchg
xlat
int3
and
movsl
mov
inc
xchg
and
in
mov
rcll
mov
cmp
imul
shlb
pop
cltd
jne
mov
insl
icebp
and
shrb
jb
movsl
aaa
xchg
push
scas
jle
notl
add
xor
xor
out
cs
rcr
xchg
mov
and
popa
stos
mov
test
jne
into
mov
je
test
and
dec
lret
adc
xor
fcoms
xor
and
stos
loopne
hlt
test
and
sub
and
pop
adc
ljmp
mov
sbb
dec
bound
dec
addl
movsb
ja
leave
push
pop
sub
lahf
cli
adc
daa
mov
inc
mov
sub
mov
test
xor
mov
repz
dec
and
std
insb
pop
iret
daa
mov
movsl
push
das
mov
inc
or
repz
and
sarl
jns
cli
add
lahf
lret
mov
and
and
adc
or
rcrl
pop
test
lret
das
jge
dec
mov
hlt
and
xchg
leave
int
jl
pop
mov
cmp
xor
inc
mov
loope
arpl
pop
sbb
repz
mov
mov
int
add
mull
pop
repnz
add
shrl
test
cmp
cmp
sbb
fisubl
cmp
jmp
and
lds
jecxz
aas
stos
aaa
cld
mov
addr16
lea
push
sub
and
out
lock
inc
and
leave
popa
and
rcrb
fldt
adc
or
cli
pop
bound
jmp
cmp
and
or
and
and
xchg
mov
add
or
inc
imul
and
inc
xchg
scas
and
sarb
loop
cmc
imul
inc
je
leave
cmp
sahf
bound
or
stc
sbb
and
rcl
add
aas
cmpsl
popa
lret
nop
and
addb
movsb
loope
xchg
jae
mov
xchg
jns
and
lret
mov
pop
pop
mov
cmp
and
cld
rcrb
repz
pop
xchg
push
stc
shlb
push
xchg
lds
movsl
sbb
cmp
sub
les
add
mov
repnz
or
cmc
and
ret
ljmp
icebp
and
jb
add
push
dec
lcall
inc
push
daa
and
cltd
dec
gs
ja
sub
nop/reserved
and
jo
aam
jge
in
out
xchg
xor
fisttpll
xchg
inc
sub
test
sbb
and
ss
adc
das
and
pop
jnp
in
or
mov
or
push
mov
mov
mov
in
insb
sub
inc
sbb
stos
mov
enter
and
mov
arpl
sarl
js
shr
movsb
cmpsb
sti
cmp
insl
bound
push
mov
mov
jp
jo
out
sbb
xchg
lods
xchg
cmpsl
xchg
sub
and
fstpt
and
movsl
fadd
imul
and
push
lds
cmp
ret
mov
sub
mov
sbbl
and
jae
sbb
and
ss
outsl
and
and
lea
jo
sbb
push
inc
aas
arpl
cmpsb
add
fsubl
outsb
cmp
andb
mov
and
push
or
xor
mov
stos
popl
push
push
mov
cmpsl
jle
in
enter
je
fstps
sub
or
out
data16
push
aam
add
xchg
mov
sub
andb
clc
aad
rcr
and
xor
das
fldt
jae
and
imul
and
cmpsl
inc
xor
mov
stc
mov
adc
push
cmp
rcr
loope
movsl
push
xchg
and
insl
or
out
add
push
xchg
mov
sbb
and
xor
xlat
mov
lea
jne
pusha
mov
pop
popa
and
lods
dec
jbe
out
push
into
lds
sbb
addr16
add
mov
jecxz
ds
sbb
mov
xor
inc
push
scas
out
pop
and
test
stos
in
push
movsb
cmp
push
and
test
cmp
sbb
ljmp
hlt
push
lods
and
leave
and
dec
and
push
andl
fs
sbb
and
mov
ja
inc
imul
mov
and
cmc
mov
and
dec
fisttps
pop
sub
stc
mov
gs
and
clc
pusha
fsub
insl
and
mov
clts
and
jb
pop
test
sub
out
and
sub
leave
mov
pop
ljmp
subl
test
sub
push
lret
xchg
jge
xor
xchg
add
mov
dec
out
in
mov
jmp
test
cs
inc
aam
mov
mov
outsl
xor
jne
jl
fisubl
popl
int
inc
jecxz
and
and
sub
mov
sub
lods
shll
sbb
adc
repz
shrl
jmp
fisubrs
and
push
test
aaa
push
sahf
and
fwait
dec
cmp
sti
jl
pushf
sbb
add
dec
fnstcw
movsl
and
sbb
lahf
insl
inc
das
lret
add
cmp
adc
aas
jge
pop
clc
pop
jmp
pop
mov
xchg
and
adc
frstpm(287
or
or
and
mov
inc
jb
and
dec
cmpb
iret
and
sub
dec
push
or
inc
les
imul
cli
sbb
jp
and
sbb
xor
aam
pop
das
pushf
mov
pop
dec
andb
xlat
sahf
add
shl
popf
std
inc
jl
and
in
push
and
shr
add
and
adcb
fnstenv
lahf
shlb
and
andl
and
add
mov
adc
jbe
push
pop
mov
aas
mov
inc
xlat
repnz
lcall
scas
and
push
ret
outsl
mov
cmpsl
lcall
cltd
jmp
cli
daa
and
shlb
adc
sbb
lock
cld
sahf
pusha
jo
and
arpl
mov
push
aas
ffree
cltd
pop
in
push
jp
testl
jmp
push
movsb
lcall
call
fcomps
cmp
xchg
inc
lock
mov
and
aam
je
int
lds
enter
cmc
sbb
popf
dec
mov
mov
add
test
fisubrs
pop
cmp
push
int3
dec
sbb
add
push
mov
mov
dec
jp
and
out
push
adc
xor
sub
icebp
sub
and
daa
push
and
dec
repnz
fcoml
push
iret
adc
push
push
and
dec
ret
and
adc
inc
repz
and
cwtl
jne
and
movsb
out
and
xor
sbb
sti
and
rcrb
cmp
bnd
lock
inc
dec
test
and
imul
out
sti
and
mov
loopne
pop
jmp
push
inc
in
int
popf
jge
xor
and
inc
mulb
scas
and
test
iret
dec
adc
xchg
pop
out
popa
and
mov
inc
insb
jae
aad
adc
push
mov
cmp
lcall
xchg
aaa
imul
int
mov
mov
mov
or
test
movsl
out
enter
cmp
sub
add
and
add
scas
jns
lock
and
test
mov
and
out
into
and
dec
xor
popf
jbe
shrl
ret
adcl
mov
addr16
inc
aad
rcrl
sbb
ret
mov
xchg
cmp
bound
dec
hlt
push
and
pop
push
sbb
pop
and
dec
pop
cmp
xchg
and
pushf
mov
cmp
push
sub
repnz
mov
xor
push
lea
sub
outsb
mov
mov
sub
test
filds
push
sub
pop
or
mov
adc
mov
and
aas
das
stc
mov
inc
in
cltd
fdivrs
and
jl
dec
loope
jb
and
mov
add
and
dec
xor
or
or
and
shll
push
test
and
jge
cltd
mov
ds
and
fbstp
mov
xchg
inc
test
mov
insb
pop
adc
fisubl
jne
leave
xchg
fcompl
lea
and
in
jno
test
jl
rcrl
in
ret
or
xor
add
into
and
mov
push
jae
pop
in
mov
pop
ljmp
mov
enter
cs
and
lds
out
cltd
and
sbb
sub
insl
jge
and
xor
add
mov
and
fsubp
aas
movsl
imul
popa
in
pop
push
push
rorl
mov
inc
in
and
fucom
in
shlb
cld
xlat
xor
mov
int
jecxz
jp
pop
xor
and
nop
mov
repz
sahf
and
ja
gs
popa
mov
xchg
fdivrs
lret
inc
imul
aam
les
mov
mov
out
test
xchg
lods
and
jnp
push
pop
iret
lock
inc
and
aam
mov
xor
dec
pop
and
es
sub
mov
incb
rcrb
and
ljmp
testb
sub
es
mov
inc
int
mov
orl
inc
lds
ljmp
call
cmp
lcall
sti
and
cmpsb
and
dec
add
cmp
add
adc
and
jo
add
testl
mov
inc
into
leave
in
and
and
pop
aam
mov
dec
adc
xor
or
pop
sub
add
mov
gs
and
cmp
lods
inc
and
popf
add
lods
mov
mov
xchg
mov
and
roll
and
sbb
and
sahf
sti
add
fadd
and
in
xor
add
xchg
and
popf
out
xchg
and
ss
shlb
sbb
xchg
int
ja
and
mov
pushf
sbb
and
push
pop
and
adc
ret
nop
in
push
jecxz
dec
lods
cmp
imul
rcrb
fisubl
inc
mov
loope
pop
and
fldt
inc
xchg
and
cltd
and
adc
xchg
jge
sahf
cmp
cmp
pmulhuw
push
test
inc
mov
cmc
mov
sbb
inc
dec
xchg
push
and
loope
xor
sahf
and
mov
mov
pop
xor
lea
shll
cmp
add
cmpsb
or
push
mov
inc
sbb
loope
mov
and
jae
fcomps
enter
imul
dec
mov
inc
jmpw
mov
adc
push
int3
aaa
and
shlb
mov
movsl
dec
iret
and
addr16
and
stc
or
xchg
imulb
sub
out
jecxz
and
loopne
mov
xor
push
pusha
scas
add
or
xor
fcmovnb
mov
into
and
xchg
push
xor
mov
mov
mov
icebp
cli
scas
push
leave
xchg
movsb
cmp
fsubrl
hlt
xchg
loop
dec
ljmp
inc
pop
shlb
ds
cmp
and
pushf
inc
xchg
mov
dec
lods
push
and
leave
pop
and
and
lods
adc
cmpsb
jbe
andl
sub
and
ljmp
dec
rcll
pop
in
add
or
jo
loop
xor
rep
and
pop
xchg
pop
loopne
push
imul
dec
out
les
inc
or
insl
sbb
inc
shlb
fcomps
adc
mov
cs
mov
pop
sbb
mov
push
ljmp
mov
mov
sbb
sbb
cld
xor
rcrl
fbld
pop
test
pop
lret
adc
and
cmp
mov
repnz
and
aas
jbe
and
lock
pop
sub
sbb
inc
fs
sub
jne
mov
cmpsb
fisubl
push
int
jmp
push
xchg
inc
dec
mov
ret
cmp
lock
and
pop
mov
adc
iret
cmp
movsb
lods
es
dec
or
sub
jmp
sbb
and
in
mov
inc
and
fwait
push
and
sub
sub
ds
add
sub
adc
push
and
cmc
call
cmpsl
and
jg
and
fisubs
loop
pop
and
or
ss
pop
cmc
and
dec
dec
add
adc
cmp
push
or
mov
sbb
arpl
and
ret
andl
sub
jno
imul
or
imul
fidivrs
pop
movsb
shll
pop
insl
mov
loope
sbb
and
aam
mov
or
leave
push
and
and
addl
and
inc
adc
je
lock
xor
sbb
mov
sub
mov
pop
arpl
mov
or
andl
lret
dec
pop
lock
cld
mov
and
call
or
je
jp
pop
repnz
mov
ljmp
test
and
push
adc
ss
and
lcall
imul
daa
mov
int3
mov
cmp
subl
inc
push
cld
and
jo
adc
mov
cmp
mov
hlt
fnstsw
xor
cmp
jg
xor
movsl
ds
or
stos
mov
inc
enter
jmp
and
test
je
cltd
inc
lds
nop
and
popf
jge
and
cli
add
and
xchg
shl
lea
or
sbb
and
xlat
cwtl
jmp
sbb
cld
ret
iret
dec
or
pop
leave
test
sub
and
pop
push
fiaddl
std
lcall
fsubrl
dec
iret
and
mov
push
and
xchg
aas
stc
aam
ret
and
jge
icebp
loop
subb
mulb
inc
fwait
int
and
sub
push
and
xor
scas
sbb
cmpsl
int
sub
sub
xlat
xchg
and
pop
ja
arpl
push
mov
sahf
jmp
inc
shrl
mov
sbb
push
mov
push
aas
loopne
and
jecxz
add
sub
adc
or
adc
jmp
xor
or
testb
add
aaa
mov
xor
and
enter
push
imul
les
clc
push
movsb
sbb
andb
mov
lahf
sbb
and
pop
movsl
and
sbb
jle
fs
sbb
out
mov
pop
jns
xor
out
push
cli
sub
fwait
xchg
inc
test
xor
ljmp
pop
sub
neg
push
dec
and
fsts
and
popa
movsl
mov
jbe
push
sti
and
ret
xor
or
cmp
jo
scas
pushf
fnsave
nop
dec
and
addr16
ljmp
ret
and
xorl
pushf
into
and
mov
and
push
mov
mov
in
pop
in
mov
dec
pushf
push
or
cmp
cmp
test
bound
jg
fbld
jp
popf
loop
in
ja
and
sub
pop
and
mov
pop
adc
xchg
adc
mov
and
or
jle
mov
inc
mov
mov
mov
cs
jb
test
mov
and
int
lahf
mov
es
arpl
outsl
sbb
mov
ror
sbb
test
test
jge
jmp
jbe
movsb
cmpsb
dec
xchg
cmp
cmp
in
popa
outsl
cmp
sarl
adc
rorl
and
sbb
ret
xor
cmp
dec
and
leave
sub
mov
cmp
rcr
ret
pop
dec
mov
insl
lods
sub
push
mov
adc
sarb
inc
or
and
imul
push
scas
lea
test
test
out
and
dec
and
or
pop
lods
and
push
stc
add
and
or
push
sbb
fcmovne
out
loope
push
pop
clc
rcll
xchg
add
gs
jle
or
test
rcr
in
inc
fisubl
and
and
mov
sub
rclb
sub
imul
and
push
sbb
and
fwait
adc
jge
aam
cmp
ljmp
fidivrs
mov
and
and
lock
int3
mov
mov
jbe
sub
pop
mov
dec
js
stc
mov
fst
int3
out
hlt
cmpsl
enter
stc
jg
les
fisubl
lods
clc
push
xor
mov
xor
repnz
inc
jge
or
xchg
and
sbb
and
les
jb
and
fucomi
and
push
mov
ds
add
loope
jmp
aas
and
out
adc
cld
pop
shl
jo
cmpsb
adc
pop
mov
mov
sti
fnstsw
and
cltd
cmp
lahf
icebp
pop
in
lea
out
sbb
xor
and
je
or
sbb
mov
inc
mov
sub
and
xor
xchg
dec
je
and
lds
insb
and
pop
repz
stc
cmp
lret
mov
add
sbb
adc
icebp
rcrl
imul
sub
push
insb
das
cwtl
and
sub
out
and
jl
xor
jne
xchg
lahf
leave
cmp
fwait
mov
iret
or
clc
add
fs
mov
xchg
and
cmc
mov
clc
sarl
sahf
sbb
and
add
push
sbb
arpl
icebp
xchg
and
ds
xor
push
and
mov
cltd
and
subb
mov
jg
mov
dec
lods
or
lret
outsl
pop
inc
or
and
inc
insl
sti
test
outsl
xchg
jno
pusha
and
fadds
and
or
xchg
jg
jecxz
and
adc
sbb
pop
js
xchg
and
adc
inc
icebp
jmp
cmp
pop
loope
xor
push
mov
das
lock
pop
jae
and
enter
mov
cs
mov
mov
fisubl
jecxz
sbb
std
push
inc
and
rorb
xchg
and
pop
out
mov
pop
xchg
xor
psrad
cmp
or
push
dec
mov
sub
mov
pusha
movsl
test
xchg
jbe
sti
and
push
into
mov
int
and
mov
mov
and
jno
cmc
inc
rol
leave
and
enter
push
scas
fadd
stos
hlt
and
xchg
push
scas
in
pop
cmp
lods
and
sbb
inc
and
jbe
pop
ja
mov
cmp
push
pusha
mov
and
dec
addb
std
mov
adc
and
dec
jp
outsb
fs
shll
pop
and
test
fcomip
push
xchg
loop
push
mov
ret
pop
lods
and
dec
into
nop
xor
inc
adc
jecxz
pushf
cmc
sti
or
push
cmp
and
mov
cs
cmc
jb
or
outsl
movl
and
ss
mov
mov
sbb
sbb
pop
and
shll
sub
xor
mov
pop
and
xchg
fmuls
and
mov
xchg
stos
stc
or
int3
push
adc
pop
pop
xor
xchg
pusha
jae
xor
fcmovnu
mov
and
jp
and
sahf
jle
pop
lea
cmp
enter
pop
out
stos
cmp
add
lods
and
fildl
and
jmp
movsl
pop
push
out
sub
aaa
xchg
cmpsb
icebp
ljmp
pop
sub
nop
and
adc
pop
test
or
and
stc
icebp
cmp
mov
mov
out
lods
test
aad
test
push
out
loope
and
pop
adc
orb
je
out
and
mov
or
pop
or
inc
and
xlat
mov
and
pop
sub
jno
or
mov
cmp
imul
stos
jp
movsb
lods
imul
ljmp
ja
lahf
cs
and
jb
das
pop
jle
mov
xchg
sbbb
sub
xchg
add
loop
jnp
sub
notl
or
xor
dec
and
and
lret
push
popf
cmp
and
adc
xor
xchg
and
out
gs
aam
and
hlt
xor
rcrb
iret
inc
stos
cmp
sub
mov
mov
inc
pop
rorb
and
pushf
or
ss
test
fcompl
cmp
imul
sub
in
fs
and
pop
int3
and
mov
lods
cltd
cld
into
jae
jo
inc
fs
test
and
fnsave
pop
pushf
adc
mov
rcrb
movsb
scas
push
test
cwtl
xchg
call
or
pop
cmpl
mov
mov
imull
je
orl
mov
and
popf
jbe
cmp
mov
xchg
call
mov
int
sbb
inc
cmpsb
lds
inc
int3
jp
and
add
stos
add
xor
popa
loopne
inc
and
pop
xchg
push
mov
xchg
sub
std
ja
mov
and
iret
add
mov
push
and
nop
pop
mov
cld
xchg
aas
xchg
icebp
jle
and
dec
js
mov
jmp
mov
pop
icebp
dec
incl
mov
mov
hlt
and
pop
or
xchg
mov
mov
mov
inc
es
xchg
xlat
mov
pop
mov
sbbb
xchg
and
xchg
sti
xchg
pop
and
int
dec
mov
mov
xor
scas
add
loopne
in
fldt
cmp
pop
leave
and
ret
dec
adc
xchg
jle
popf
and
mov
inc
sbb
mov
mov
mov
subb
inc
jae
xchg
inc
enter
imul
sub
mov
not
mov
and
lods
xor
cmp
shld
pop
dec
push
lret
jo
add
pop
dec
or
rcrb
push
jns
and
xor
scas
fwait
sub
popf
sbb
lds
push
and
jbe
and
and
xchg
jl
and
addr16
repz
mov
push
and
out
dec
scas
and
xchg
hlt
push
dec
fisttpll
hlt
out
xchg
sbbl
pop
and
cli
imul
pushf
out
inc
mov
insb
and
push
or
xchg
and
dec
dec
imul
fwait
scas
and
addl
outsl
and
outsb
popf
andb
mov
or
add
shlb
xchg
xchg
fbstp
push
loop
mov
pop
pop
pop
add
cli
and
mov
and
imull
or
and
push
jecxz
inc
xchg
hlt
and
fdiv
rclb
sbb
xor
cmp
and
cmp
push
cmp
aas
mov
and
lods
sbb
xchg
or
shll
jno
test
mov
pushf
fnstenv
and
cmp
jp
popf
lds
cwtl
sub
in
and
rdtsc
cmp
test
stos
out
pop
add
icebp
call
jbe
dec
andb
in
and
jae
test
lret
and
mov
pop
lods
adcl
popf
shrl
loope
xor
loop
push
and
push
popa
cli
ljmp
mov
cmp
sub
ja
and
lahf
sub
dec
mov
dec
mov
out
jb
stc
sbb
push
insl
mov
and
mov
and
push
lods
rorl
cltd
mov
add
mov
adc
pop
pop
and
adc
dec
and
inc
rclb
xlat
pop
inc
cmpsb
and
dec
cmp
and
sarl
pushf
jnp
loop
and
jp
movsb
and
xor
sbb
and
adc
and
or
pop
lret
leave
and
sub
fadds
roll
imul
imul
xor
fdivs
loope
xlat
mov
mov
shlb
call
push
push
fldcw
pop
sub
mov
mov
outsl
mov
fldcw
mov
cmp
das
cli
mov
and
and
mov
ljmp
iret
push
and
or
lcall
pop
mov
and
adc
daa
mov
jb
and
lods
out
push
xchg
sbbb
sub
fcmovnb
cmp
cmp
inc
mov
ljmp
stos
in
mov
aam
and
in
dec
leave
not
pop
and
push
addr16
adc
inc
icebp
call
aam
cwtl
mov
inc
mov
jb
and
dec
loopne
adc
push
pop
mov
jae
rol
adc
es
insb
jb
stos
popf
repnz
imul
mov
sbb
xchg
shl
sbb
cmpsb
and
cmp
jg
icebp
lahf
add
and
ret
cwtl
mov
and
out
adcl
inc
inc
xchg
and
sar
pop
and
mov
bound
and
adc
fmull
lea
and
ror
xchg
stc
mov
loopne
mov
out
insb
jmp
push
push
and
cmp
lcall
icebp
jp
fs
sub
std
mov
and
andl
cltd
push
enter
add
push
dec
add
and
rcr
mov
sub
popa
ret
add
loope
jb
sub
sti
lahf
sbb
or
and
in
cmp
hlt
loopne
pop
push
and
dec
ljmp
bound
je
dec
push
cmp
out
and
push
cld
and
or
into
pop
testl
les
mov
gs
out
mov
mov
fisubrl
and
mov
and
adc
and
inc
sahf
cmp
and
movsl
mov
lods
mov
and
test
out
arpl
jns
xor
and
fidivrl
xchg
add
and
cmp
fcompl
and
fcomi
push
add
xor
pop
jl
mov
dec
popf
ds
sbb
ret
dec
push
cmp
fsubl
cmp
inc
scas
dec
int3
lods
cli
hlt
and
dec
and
jb
pop
sti
cltd
and
cmp
leave
cmp
mov
xchg
imul
and
dec
pop
popf
repz
xchg
loop
test
push
lcall
outsb
fidivl
sbb
add
test
lock
popf
mov
cmc
fs
xchg
and
inc
rep
adc
push
insl
or
fnstsw
andb
fmuls
and
jne,pn
sbb
inc
popf
sub
std
das
mov
lahf
das
inc
and
lcall
fmuls
ror
cwtl
lock
sbb
sub
mov
add
or
sbb
pop
in
and
dec
test
mul
clc
pop
jge
adc
and
push
jne
rcll
fisubl
mov
and
and
fnstsw
in
mov
ja
cmp
and
add
cmp
or
lods
fstpl
mov
push
ljmp
movsb
in
sbb
and
je
mov
xchg
mov
mull
push
and
mulps
gs
add
test
inc
fistl
cmp
icebp
and
xor
mov
xor
or
mov
cmp
ret
insb
loope
pop
stos
xchg
cmpsb
and
pop
sub
cltd
test
dec
imul
stos
inc
fisttpl
lods
shlb
xor
inc
stc
add
xlat
pop
repz
test
jno
pop
out
js
subl
and
sahf
rcrb
movsb
add
mov
sbb
lea
icebp
adc
mov
inc
cmpsl
pop
out
jle
and
and
add
scas
popf
xchg
mov
and
int
outsb
and
xor
jo
jle
jl
xor
mov
and
pop
pop
lea
arpl
pop
or
shlb
or
gs
mov
push
and
pop
and
les
shlb
xor
mov
mov
pop
repnz
inc
adc
xchg
dec
ljmp
sti
and
jns
ss
mov
int
push
and
daa
adc
inc
call
les
and
in
add
call
jne
mov
pop
sahf
leave
and
cmp
stos
xor
mov
fnsave
rolb
xchg
or
push
cmp
lods
push
call
or
and
lock
js
in
pop
and
mov
xchg
and
pop
out
lods
insb
mov
and
adc
add
pop
popf
sbb
mov
mov
jle
dec
int3
adc
andb
fldenv
loop
pop
rcll
mov
shlb
arpl
push
lahf
pop
mov
jns
scas
and
adc
not
fcompl
jl
int
test
mov
mov
and
jmp
mov
movsb
cmp
out
std
scas
loope
adc
icebp
cmpsl
mov
xor
dec
jl
and
jae
and
jmp
and
frstor
mov
push
cld
xor
sub
sub
out
loope
xchg
push
andb
adc
inc
outsl
dec
push
add
outsb
into
inc
sub
jecxz
mov
and
divb
loope
pop
in
sub
mov
xchg
and
pop
jl
push
lret
xor
mov
repz
and
shll
and
and
mov
jno
ror
fs
loope
out
mov
mov
and
insl
jb
int
sub
push
rorb
adc
loop
jle
ds
add
out
fdivrs
jg
out
getsec
inc
xchg
xor
mov
ds
mov
sub
lods
xor
popa
or
and
jbe
xor
fstpt
and
into
jmp
and
addr16
and
ret
and
imul
or
and
insl
rcll
pop
sbb
in
sbb
and
and
rol
int
add
outsl
iret
mov
xchg
push
arpl
sahf
and
jecxz
add
std
xchg
jno
push
xchg
push
xor
push
int
xor
jmp
mov
and
add
test
insb
xchg
xor
cwtl
lods
sbb
jg
and
dec
add
and
int
scas
mov
or
dec
pop
in
and
fsubrs
and
cs
out
cld
push
and
fxch
aad
addr16
lahf
stos
sub
cld
mov
mov
sbbl
cmpsb
sbb
sti
and
sbb
mov
add
loop
stos
hlt
addr16
fisubl
mov
xor
dec
jge
inc
outsb
pop
mov
cli
cltd
and
int3
jne
addl
int
pop
mov
mov
pop
mov
mov
scas
jns
mov
add
lods
and
cmp
rolb
shrb
jmp
inc
xchg
pop
pop
aad
inc
mov
mov
fwait
and
lea
adc
push
into
and
nop
dec
push
xor
lds
sti
push
adc
addb
xor
dec
insl
call
xor
mov
subl
sub
fmulp
scas
add
jae
fidivrl
pop
mov
jecxz
hlt
movsl
xor
and
addr16
add
cmp
inc
fs
loop
and
stc
sub
jno
dec
sbb
push
lods
lea
imul
out
bound
sbb
dec
or
push
aam
shl
cmpsl
inc
or
out
and
movl
xchg
push
aaa
ret
int3
andb
test
dec
out
mov
and
xlat
jp
pop
fcompl
mov
shlb
js
lock
rcr
loopne
fildll
and
adc
pop
mov
out
aas
les
sub
lods
cmp
mov
push
pop
repnz
test
and
jbe
sbb
and
xchg
push
and
add
lcall
mov
push
cmp
daa
and
lahf
dec
mov
jmp
adc
cmpsb
orl
and
mov
mov
inc
cmpsl
fwait
pop
inc
adc
iret
stos
pop
add
and
ret
pop
out
and
repz
fiadds
dec
and
mov
call
or
iret
mov
fs
imul
mov
xor
aam
je
pop
cmpsb
and
lret
inc
ljmp
in
popf
jmp
mov
enter
sbb
push
cmc
encls
loop
dec
and
shll
fistpll
sti
popa
add
dec
jp
cwtl
divb
ds
adc
call
jecxz
push
lock
and
insb
push
hlt
pop
mov
sbb
ja
jb
fsubl
and
iret
cmp
loop
push
pop
dec
scas
push
sub
aas
jecxz
cmp
push
push
adc
and
aam
mull
inc
call
cmp
mov
xchg
sbb
and
in
pop
fs
insb
popf
dec
cmc
pop
cmp
mov
test
sahf
mov
dec
repnz
sub
pop
stos
les
and
imul
push
dec
les
loopne
jns
iret
and
dec
notb
out
pop
push
xor
adc
mov
and
and
icebp
mov
inc
fbld
aad
xchg
sbb
mov
fisttpll
jae
and
enter
imul
nop
mov
daa
xchg
push
stc
mov
pop
pop
push
push
xor
mov
pop
jb
mov
jle
aam
cmpsb
add
outsl
and
push
out
dec
mov
aaa
add
stc
cld
scas
pusha
and
jbe
mov
pop
mov
into
cmpsl
mov
and
cltd
xchg
mov
push
pop
mov
in
daa
ret
push
add
jae
cmp
lds
mov
lcall
lahf
in
lea
pop
and
mov
and
cltd
mov
mov
adc
add
popf
ret
push
dec
sub
nop
jne
add
shrl
pop
cli
jp
test
push
pop
cltd
mov
sub
stos
test
out
int
or
sub
in
les
dec
xchg
mov
repz
out
daa
out
addl
add
and
jae
pop
inc
and
cmp
in
fwait
cltd
repz
daa
jo
mov
fadds
and
lahf
sub
fbld
mov
sbb
xchg
and
or
es
ret
test
mov
xchg
sarb
and
xchg
push
inc
cmp
sbb
jecxz
sarb
jge
sub
and
mov
fs
into
and
out
xor
push
int
pusha
xchg
xchg
cmpsb
or
mov
cmp
sarl
pop
and
push
cmp
push
lcall
gs
cmpsl
inc
rol
and
jmp
imul
pop
aaa
divl
inc
ftst
cs
jp
mov
cmp
ss
sahf
dec
test
sub
fmul
add
fbld
insl
and
mov
in
and
mov
inc
and
fiadds
xchg
loope
jae
repnz
sub
inc
jo
scas
enter
loop
and
popa
inc
cli
or
jge
cmp
inc
loope
inc
xlat
sub
jle
mov
and
ret
xor
xchg
scas
imul
and
movsb
pop
push
fwait
mov
popf
cld
out
xchg
and
mov
sub
mov
inc
and
sti
xor
mov
std
push
mov
call
inc
jne
sub
xchg
ret
sbb
sub
arpl
rorb
and
mov
cmp
sbb
and
pop
in
fadd
and
push
ds
xchg
cmp
mov
add
repnz
call
mov
sbb
jno
xchg
stos
enter
lcall
and
int3
mov
mov
decl
and
sbb
inc
sbb
aam
sub
or
in
test
fildll
cmpsl
clc
and
in
ret
sub
inc
and
push
inc
cmp
dec
mov
and
out
push
cmpsb
sbb
push
mov
and
shll
jb
or
daa
and
ja
and
mov
jae
sbb
and
sar
je
cmpsb
and
pop
mov
test
mov
xchg
jp
pusha
mov
or
rcr
adc
sub
inc
pop
xor
xchg
test
fdivl
add
push
repnz
and
aas
loope
sahf
ret
imul
lea
scas
jb
sbb
std
repnz
inc
ret
jmp
and
dec
mov
xor
cltd
test
ss
movsl
and
xchg
sub
sbb
decb
loope
jno
sub
jecxz
lcall
mov
loop
push
and
inc
pop
stos
fistps
loopne
add
and
xchg
lcall
pop
or
dec
mov
pop
test
cmpsb
xchg
out
sbb
ja
mov
inc
lret
xor
cld
dec
lahf
popf
mov
sbb
fiadds
enter
imul
push
andl
sbb
mov
out
sub
shlb
icebp
mov
lret
lahf
and
inc
add
or
xchg
cmp
dec
out
sub
or
sub
and
push
popa
loope
sub
cwtl
and
nop
xchg
sub
cmpsl
stos
sbb
and
outsl
sbb
ret
cmp
cmp
and
hlt
xchg
jmp
paddsb
loop
or
and
or
pushf
adc
in
cld
push
mov
sti
inc
cmp
and
and
outsb
cmp
pop
cli
xchg
jg
andl
les
arpl
das
loop
outsl
icebp
push
cmc
mov
daa
pop
and
inc
dec
jnp
scas
adc
popf
negb
gs
or
pop
mov
inc
and
mov
cs
bound
imul
xchg
fwait
jns
std
fldenv
aad
movsb
xor
and
sbb
jle
rcl
in
xor
arpl
mov
and
pop
add
in
scas
xchg
and
enter
xchg
and
xor
adc
scas
and
sub
xor
and
cmp
jne
cwtl
and
mov
int
sub
fwait
xchg
push
repnz
xor
loop
and
shll
pop
repz
in
cmp
xchg
pop
mov
inc
lock
icebp
jmp
mov
push
push
shlb
aaa
adc
fwait
cmp
lea
fs
and
test
dec
in
xchg
or
cltd
movb
adc
stc
dec
xchg
or
jns
xchg
mov
and
loopne
dec
shll
and
sti
mov
and
adc
and
rcrb
dec
and
add
cmp
jecxz
mov
sub
loop
push
mov
lock
enter
ja
fimuls
and
rcll
dec
mov
aam
and
cmpsl
cld
stc
js
xchg
pop
cmp
call
mov
jnp
and
clc
xor
repz
and
jo
movsl
xchg
pop
shl
and
xchg
mov
or
pop
dec
mov
adc
leave
add
mov
mov
les
jmp
push
fisttpl
mov
mov
std
sub
mov
out
add
jno
int3
and
sbb
lods
lcall
cmp
test
cmp
sti
mov
push
sbb
movsl
or
and
jo
pusha
push
mov
and
pop
stos
push
xchg
and
in
aaa
ficompl
pop
das
cmp
adc
mov
call
or
cli
jno
cmp
cmp
push
das
cwtl
dec
and
inc
xchg
add
test
xchg
insb
mov
ret
loope
jbe
mov
sarb
sbb
and
and
jnp
sub
test
pop
popf
cmpsb
xchg
test
int3
ja
mov
arpl
sahf
pop
cwtl
xor
lods
xor
cmpsl
jno
jb
pushl
xchg
fstpl
inc
sub
inc
pop
push
mov
mov
jmp
ds
mov
xchg
lods
das
jb
sahf
mov
cmp
aas
movsb
les
push
add
jl
cmp
lret
scas
and
icebp
sub
call
dec
jmp
nop
add
cmp
and
stc
cltd
cmpl
mov
push
scas
dec
rorb
and
dec
shl
pusha
shll
pop
in
stos
sti
iret
aas
push
outsl
and
mov
push
add
inc
stos
sub
dec
sbb
cli
jecxz
push
xchg
xor
pop
and
movsl
dec
inc
adc
and
out
jns,pt
mov
orl
mov
fbld
aad
mov
jecxz
das
push
mov
jae
lea
sub
imul
or
mov
andl
iret
sbb
inc
push
stos
jge
cmp
mov
movsl
sub
inc
imul
dec
add
and
xchg
xlat
sub
xor
and
xor
xchg
aaa
xchg
sub
cli
and
adc
shlb
sbb
adc
and
cmpsl
ja
aad
and
js
jnp
out
push
and
push
mov
push
and
call
mov
hlt
mov
idiv
sub
jmp
mov
and
ljmp
pushf
movsb
mov
xlat
mov
inc
and
je
and
xchg
sbbl
xchg
and
outsb
lret
cmp
push
mov
jae
add
test
fimuls
jno
aam
xor
mulb
dec
xor
inc
and
out
sbb
push
and
cmp
push
xchg
insl
fdivr
and
cs
pop
jge
mov
pop
and
lahf
and
xor
or
ss
or
and
clc
test
insb
scas
lret
pop
mov
add
in
xchg
and
cmc
out
and
mov
xor
mov
test
aaa
mov
sub
outsl
and
movsl
xchg
and
notl
int
and
ljmp
dec
das
add
cmp
push
push
and
cmp
fisubl
pop
lods
into
call
pop
loope
mov
jmp
xor
push
cmp
mov
enter
cmp
hlt
icebp
shll
sub
and
dec
mov
jle
ds
outsl
xchg
adc
xchg
push
insl
mov
pushf
les
mov
outsb
xchg
bound
inc
mov
and
pop
push
adc
pop
mov
sbb
xchg
stos
sarb
aad
bound
and
mov
ja
out
and
popa
mov
out
lock
mov
xor
mov
andb
pop
xchg
and
mov
aaa
cmpsl
push
iret
cmp
push
fisubl
gs
in
roll
pop
icebp
xchg
fldenv
jnp
lret
out
xor
mov
pusha
sbb
mov
dec
ss
arpl
sub
fldlg2
xchg
pop
push
sar
fsubs
xchg
sub
gs
daa
sbb
adc
inc
adc
sahf
push
jne
pushf
cmp
xor
mov
pop
xchg
mov
mov
movsb
gs
fsubr
and
jns
and
int3
lods
nop
roll
das
pop
and
xlat
daa
sub
fmuls
add
andl
cli
rcrb
pop
js
cld
int3
outsb
and
pop
test
enter
pop
cmpsl
icebp
cmp
fstpl
notl
inc
pop
adc
and
fidivrl
adc
mov
shlb
and
and
cli
inc
sub
aam
lret
loope
push
xor
cmpl
mov
pop
scas
cmp
pop
jp
sbb
mov
sbb
mov
sbb
xor
ss
cmp
imul
inc
adc
jg
test
popf
cwtl
push
and
pop
shrb
xor
lds
xchg
dec
hlt
stos
pop
loop
repnz
cmp
ja
ds
lret
and
inc
xchg
push
sub
enter
arpl
flds
ret
inc
jge
sub
cmp
pop
scas
ljmp
pop
and
xor
jl
cld
and
mov
pop
and
scas
and
xor
es
push
cmc
dec
sub
mov
lods
pop
and
xchg
sti
fmull
or
mov
stos
lret
push
sbb
cli
mov
js
es
mov
repz
mul
or
pop
pop
out
dec
add
movsb
adc
and
out
or
and
mov
xor
sti
mov
das
xchg
and
jae
int3
enter
dec
and
xchg
pop
jl
push
aaa
mov
jmp
and
push
gs
push
sarb
and
xchg
aaa
test
in
add
and
xchg
je
mov
lret
out
add
lods
xor
pop
sub
sub
xor
pusha
and
pop
andb
lods
jbe
or
pop
fldt
iret
or
lahf
shll
mov
inc
and
push
dec
xor
cltd
cmp
loop
mov
add
and
dec
dec
inc
pop
and
repz
and
call
adcb
pop
mov
aaa
lods
and
adc
xchg
pop
std
adcl
outsb
cli
xchg
popf
dec
push
and
ret
fdivl
add
mov
mov
pop
push
dec
loop
ja
xor
pop
or
repnz
and
out
inc
pop
out
and
cmp
and
inc
sbb
xchg
out
push
mov
movsb
les
jb
out
iret
dec
test
push
in
cltd
andl
mov
push
icebp
sbb
inc
mov
sti
shrl
add
test
sbb
push
jge
add
sub
xor
xchg
sbb
clc
jl
fdivp
imul
and
cmpsb
test
dec
xor
mov
outsb
mov
xchg
jne
call
cs
dec
repnz
xchg
stos
mov
xchg
mov
imul
sarl
sub
sub
cmp
and
repz
jno
inc
gs
cmp
insb
std
dec
bound
hlt
les
xlat
aaa
dec
mov
xchg
repz
xchg
in
jge
jns
lds
mov
add
sbbl
adc
stc
arpl
and
mov
into
rorb
dec
add
jns
cltd
gs
fidivrs
and
clc
xor
pop
in
mov
lret
adcb
mov
ja
addr16
fldcw
test
movsb
mov
or
shll
daa
mov
and
cmp
in
mov
pop
and
inc
pop
inc
adc
mov
adc
leave
repnz
addb
fisubrs
lahf
jnp
aas
hlt
lock
jmp
enter
lock
sbb
lret
arpl
adc
js
in
fnstenv
sbb
sarb
pop
mov
idivl
inc
xor
xor
push
adc
xor
mov
jb
repnz
call
rolb
xor
addr16
ss
fsubs
lcall
and
jmp
pop
and
testb
cmp
add
repnz
mov
sub
mov
loopne
pop
add
scas
lds
fstpl
inc
and
in
or
idivl
and
inc
xchg
push
push
int
hlt
adc
dec
and
lret
lea
or
xor
cmp
sbb
and
xor
jp
je
push
lds
inc
and
popf
fstps
mov
stos
mov
inc
enter
stos
mov
clc
xchg
sar
pushf
ret
cmpsb
xchg
dec
std
sub
jg
ror
add
jbe
int
gs
jp
mov
push
repz
and
cmp
and
popf
les
int3
iret
mov
faddl
mov
and
notb
add
and
mov
in
xlat
dec
and
ret
das
bnd
sti
out
fdivrl
inc
and
scas
daa
mov
icebp
and
rcr
and
test
and
xor
lcall
and
stc
inc
es
and
ds
pop
and
dec
and
sbb
sbb
outsl
jb
mov
pop
push
mov
ja
loopne
and
aad
shl
and
jo
dec
les
arpl
or
out
xor
push
or
mov
movb
sub
iret
and
push
mov
into
and
xor
enter
imul
iret
mov
fcomps
inc
push
sbb
jmp
call
rolb
repz
mov
add
cmp
sub
fisubl
out
cmp
xor
pushaw
add
pop
mov
sub
filds
mov
sub
jbe,pn
and
cmp
xor
xchg
daa
inc
and
aam
out
mov
push
fs
sub
push
loope
loop
cmp
enter
dec
mov
dec
dec
test
xchg
and
xchg
and
and
pop
cmp
cltd
pushf
mov
sbb
mov
sub
andb
jno
and
cli
stos
adc
pop
ljmp
lcall
mov
arpl
or
movsb
pop
or
fs
adc
mov
push
cwtl
or
add
addb
and
xor
repz
and
arpl
jb
xchg
adc
fdivs
xchg
mov
inc
fwait
insb
loop
sbb
bound
movsb
lods
subb
and
jge
mov
enter
mov
in
jl
adc
jnp
adc
and
pop
test
ja
sub
mov
rolb
and
loopw
add
in
xchg
xchg
push
inc
ss
and
fdivrs
or
jle
dec
mov
ljmp
inc
sub
jmp
cs
bound
pop
in
je
and
sbb
and
icebp
inc
push
sub
jo
dec
push
jnp
add
mov
out
adc
stc
jo
imul
adc
push
or
sub
mov
aaa
insb
mov
and
sbb
dec
cmpsl
xchg
in
insl
xchg
pop
sub
xchg
push
in
rolb
pushf
or
lock
rol
insl
jecxz
andl
adc
sub
and
xchg
lahf
inc
mov
cmp
das
sahf
mov
and
lret
dec
lret
shlb
jns
jge
xchg
aam
in
and
or
push
and
mov
or
mov
jnp
andl
sbb
testl
inc
sub
adc
test
cmp
js
rol
lahf
and
je
and
xchg
test
xchg
mov
in
inc
aam
pusha
les
xor
sbb
pop
int
pop
gs
loope
jecxz
cmp
insb
adc
and
mov
and
add
pop
fists
pop
and
cmp
dec
and
lock
sti
jae
andl
pushf
push
cld
add
sbb
xchg
pop
movsb
aas
stos
and
push
push
fstl
pushw
negl
sar
out
push
mov
and
call
in
mov
inc
pushl
cmp
mov
and
push
je
mov
lds
test
and
hlt
mov
mov
cmp
and
dec
push
and
in
jg
jl
cmp
add
jp
xchg
pop
and
sub
mov
jmp
and
add
cmp
aas
repnz
lea
scas
xchg
mov
and
and
dec
aas
shll
scas
cltd
ret
sbb
mov
sti
cmp
pop
and
in
vcvtqq2pd
xor
jmp
and
add
and
ja
test
and
adc
es
sub
dec
outsl
add
cmp
loop,pt
and
pop
mov
movsb
jl
outsl
scas
les
daa
das
adcl
adc
xchg
loopne
mov
outsb
test
mov
mulb
dec
pop
aaa
and
imul
arpl
out
stc
sub
sbb
mov
mov
jnp
add
js
pop
and
das
or
pop
and
jns
enter
sbb
and
inc
mov
inc
sub
mov
jl
push
fimuls
xor
xchg
and
movsl
inc
dec
sbb
jno
cmp
or
jns
push
sbb
out
ja
xchg
xor
jnp
cmp
sub
mov
in
popa
xchg
inc
add
movsb
into
jmp
fscale
cmp
sub
and
mov
fildll
and
lcall
push
test
push
jg
sub
into
scas
repnz
hlt
js
mov
sahf
pop
cltd
in
jecxz
or
jbe
mov
jp
push
and
outsl
das
adcb
and
stos
lret
and
jnp
add
sub
loopne
add
cli
mov
int
jg
pop
sti
mov
mov
lods
loop
and
fists
xchg
and
ss
pop
cltd
jg
and
push
sbb
push
pop
mul
cmp
shl
or
inc
inc
repz
out
fmul
pop
and
outsl
insb
ds
and
pop
push
movl
or
mov
pop
jb
mov
mov
or
shrb
sub
arpl
jge
and
cmp
clc
popa
and
xor
leave
and
pop
jecxz
and
fs
jle
sub
mov
stos
lcall
add
push
and
cmp
adc
sbb
xchg
and
lods
sub
jo
inc
pop
mov
ljmp
push
inc
scas
cmp
and
divl
add
sbb
test
push
popf
fcomps
jle,pn
mov
push
add
cwtl
xchg
add
stc
jns
pop
insl
push
pop
sub
mov
movsb
rorb
rcrl
pop
xor
cmp
mov
push
addr16
cld
pop
cmp
pop
dec
pushf
pushf
and
sbb
and
mov
test
insl
cli
outsl
and
xor
lret
dec
sbb
dec
and
add
sahf
and
andb
mov
adc
cmp
int
insb
pop
jp
and
addr16
mov
mov
and
xchg
xchg
cmp
cmp
and
mov
and
rcrl
arpl
data16
cmp
fcmovnu
lea
shlb
mov
cmp
test
es
or
imul
mov
and
repnz
jp
pop
inc
pop
and
sbb
and
push
and
push
dec
nop
and
arpl
icebp
adc
and
dec
jae
and
push
out
adc
mov
dec
cld
cmp
and
lods
mov
pop
inc
pop
add
xchg
mov
fstl
sbb
mov
scas
pop
and
pop
push
inc
inc
outsl
adc
mov
jne
or
xor
jecxz
and
orl
in
mov
xor
lods
pop
je
aam
cmp
repnz
in
and
mov
and
test
add
out
sub
push
inc
or
int3
mov
fwait
push
inc
push
push
and
jp
loop
icebp
out
and
mov
scas
or
xchg
xor
cld
loop
jbe
mov
ja
pop
and
fdivl
or
sahf
cmpsl
and
xchg
pop
nop
mov
loopne
lock
iret
sbb
test
sar
push
xor
sti
lods
scas
lahf
xor
xor
sub
inc
cmove
pop
jmp
jle
adc
mov
loopne
cltd
mov
and
loope
push
push
scas
jnp
sub
dec
add
pop
cmp
orb
and
pop
push
xchg
call
xor
in
cmp
mov
imul
stos
pop
fs
loopne
jo
fninit
mov
lret
testb
and
dec
cmp
xchg
les
dec
add
rorl
in
dec
mov
inc
addr16
xor
cltd
push
jge
and
je
inc
ret
jae
imul
int3
mov
pop
lods
movsb
mov
sbb
cltd
push
rolb
mov
mov
and
jle
xchg
arpl
and
dec
lret
mov
xor
fldl
mov
mov
xchg
xchg
popa
push
in
and
stos
fistl
into
fsubl
enter
shrb
ds
adc
dec
add
push
and
cmp
out
mov
das
dec
pop
hlt
mov
add
js
sub
sarl
push
cmp
fsubs
dec
mov
cmc
and
and
jbe
or
adcb
push
jnp
and
outsb
mov
pusha
leave
jle
test
outsl
sub
rclb
push
loop
mov
cmc
and
cmp
mov
je
dec
adc
and
xor
cltd
and
outsb
mov
fildll
inc
jmp
mov
adcl
push
and
pop
loopne
divl
lahf
push
and
mov
jnp
fimull
ret
leave
cwtl
xor
shll
add
test
rol
lret
lcall
or
mov
lds
in
xchg
mov
jne
cmpsb
jnp
mov
push
mov
lea
xor
fidivl
and
jg
scas
ss
data16
push
jg
cmp
sar
sbb
jne
cmp
stos
add
loop
or
inc
cli
cmp
loop
mov
ss
fcomps
testb
push
test
flds
dec
out
jge
add
mov
stc
and
pop
mov
xor
or
and
arpl
cs
push
loope
push
push
clc
cltd
xchg
dec
sbb
and
mov
sub
pop
shl
aas
inc
and
daa
xlat
aam
sarl
sub
and
std
subb
bound
mov
push
movsb
in
and
add
in
and
aam
xchg
and
leave
addl
xorb
cltd
out
xchg
cwtl
pop
dec
jnp
ja
lock
nop
jo
mov
pop
mov
sub
loopne
pop
pop
aas
fcmovne
arpl
inc
and
shr
cmc
adc
gs
push
mov
int3
es
testl
dec
mov
mov
pop
pop
repnz
sbb
outsb
ljmp
and
inc
movsl
test
lcall
xchg
ljmp
repnz
pop
test
and
ja
sbb
mov
loope
imul
movsl
pop
push
lea
hlt
stos
xchg
aad
fstl
cmp
mov
pop
and
sub
add
lods
mov
or
jmp
add
sub
inc
and
sahf
stos
cmp
lock
xor
out
and
cmp
insb
and
in
and
and
clc
lcall
in
mov
roll
and
pop
ljmp
jg
adc
test
jp
mov
xor
xor
addr16
cld
xchg
dec
sub
pushf
pop
sbb
push
test
roll
mov
and
push
fwait
push
or
aas
leave
lcall
push
shlb
in
cmp
scas
fldt
test
mov
test
add
movsb
jo
scas
jge
scas
inc
push
cltd
and
mov
cmp
adc
dec
int
or
xor
cmp
je
in
popf
sbb
sti
daa
jae
outsl
shlb
jg
push
aas
enter
movsl
and
loopne
jmp
movsb
jecxz
push
negb
push
cli
and
out
dec
icebp
xor
leave
cltd
stc
inc
daa
daa
aaa
dec
mov
mov
inc
push
out
sub
in
adc
cmpl
and
lock
mov
mov
or
sbb
xchg
pop
push
pop
aas
and
shl
or
movsl
clc
push
cmp
jle
loope
add
cmc
sbb
loop
js
and
push
scas
out
in
mov
xor
push
lahf
repnz
sysenter
pop
pusha
stc
and
popa
and
cwtl
jbe
fidivrl
push
into
leave
push
add
addr16
push
fwait
mov
push
xor
adc
dec
movsb
push
sub
in
add
hlt
into
pop
xchg
dec
fimuls
add
dec
sbb
xor
mov
popf
pop
push
daa
mov
push
incl
testb
stc
pop
std
jno
fbld
mov
dec
jns
int
jae
cmc
and
add
test
dec
push
and
idivl
and
pusha
jne
mov
pushf
sbb
lret
and
loopne
andb
and
mov
fcomps
xchg
out
and
mov
push
lds
adc
mov
lret
aaa
and
mov
aam
sbb
adcl
sub
lret
ljmp
mov
std
xchg
and
adc
xor
sub
add
adcl
mov
and
out
jne
dec
mov
and
cmp
xchg
pop
add
sbb
decl
cmp
enter
cltd
and
gs
test
inc
inc
fcomps
dec
fistps
cmp
mov
mov
shl
imul
sub
imul
and
mov
jle
outsb
out
mov
adc
xchg
sub
sub
mov
add
or
lahf
in
fisubrs
rclb
pop
adc
je
push
test
sub
push
push
in
test
inc
outsl
rclb
pop
and
jo
adc
sub
in
and
fdivrs
sahf
sub
sub
arpl
lods
ja
sbb
outsl
das
adc
ret
pop
cmpsl
and
out
leave
and
roll
outsb
and
xchg
xor
jnp
sbb
and
mov
xor
push
sub
mov
insb
arpl
sahf
jnp
daa
and
jo
test
jbe
cmpsl
pop
in
xchg
mov
gs
dec
push
cmp
insb
and
push
cmpl
cwtl
and
repnz
push
inc
iret
lahf
xor
insb
and
ja
and
ret
lods
cmpsb
lcall
shlb
and
and
dec
es
test
stos
subl
and
jo
push
and
mov
push
and
icebp
fnstsw
cmp
in
stos
jo
mull
xlat
xchg
pop
js
and
adc
and
or
sbb
mov
in
cmp
mov
xor
sub
lds
imul
mov
mov
out
sbb
jecxz
out
shrl
mov
dec
push
jg
outsl
mov
cwtl
pop
xlat
sbb
mov
rcr
xor
and
in
ss
and
cmp
xchg
cmp
jp
and
out
sbb
and
jnp
and
mov
aaa
aas
and
jmp
push
push
cmp
xor
pop
shlb
in
test
and
add
xor
and
add
out
xor
les
add
push
mov
stos
push
andb
sbb
mov
add
mov
arpl
mov
cmp
push
jecxz
repz
xchg
and
addr16
jecxz
shlb
pop
pop
fnstenv
inc
xchg
adc
and
out
lret
or
imul
aas
mov
or
mov
jbe
sbb
push
les
mov
dec
mov
mov
and
daa
test
sbb
push
push
cmc
lret
xor
and
jle
fwait
in
loop
and
jg
sub
fidivl
jmp
xor
arpl
sub
jl
sub
mov
and
jbe
xor
sub
hlt
xchg
fs
bound
mov
ds
add
xchg
loope
push
cmp
jp
cmpsl
xchg
inc
hlt
and
xchg
dec
mov
jbe
pop
xchg
mov
jo
cmp
mov
pushf
jmp
sub
cs
add
or
dec
or
dec
add
push
mov
inc
cli
fcmovbe
and
xor
mov
arpl
xor
ffreep
inc
mov
sub
jnp
sti
pop
test
dec
and
mov
subb
xor
sub
pop
mov
mov
cs
and
jb
adc
push
xor
lahf
pop
pop
dec
mov
mov
and
pusha
cltd
jo
inc
fisubl
mov
lret
sti
sarb
xor
cmp
sub
add
aam
sbb
pusha
mov
mov
sbb
pop
jne
adc
mov
xchg
and
sbb
data16
add
and
mov
cmp
add
aaa
repz
js
pop
xchg
lods
cmp
icebp
inc
mov
and
jmp
divl
fsubs
push
lods
xchg
aaa
jecxz
adc
lea
jp
inc
sub
mov
xchg
addb
adc
xchg
insl
add
and
or
xor
lahf
fisubs
push
sub
cli
pop
in
ss
and
mov
in
inc
mov
mov
xor
sub
or
cmp
loopne
and
push
clc
pop
lret
sbb
sahf
movsl
xchg
pop
movsb
adc
cmp
add
jl
cwtl
adc
scas
aam
jbe
cmpsl
and
push
leave
sbb
out
addb
filds
sbb
lock
jmp
adc
jecxz
and
adc
arpl
mov
inc
fstps
popa
cltd
shlb
push
mov
cmp
stos
std
iret
pop
movsb
push
push
mov
jle
mov
sub
cmp
xlat
inc
and
pushf
sbb
and
mov
ss
and
lcall
cmp
test
stos
add
adc
jmp
fildl
sbb
scas
sub
cmpxchg
sarb
frstor
xchg
pop
push
js
and
lods
loop
add
sub
test
cmpsl
call
cs
sub
and
les
scas
leave
je
int
pushf
enter
ljmp
lds
or
in
popf
dec
adc
sbb
mov
sahf
push
sub
cmpsb
test
ja
and
pop
mov
add
adc
pop
cwtl
je
call
enter
pop
xor
xor
add
sub
push
sbb
cld
mov
or
add
fcoml
and
xchg
pop
out
jne
and
movsb
mov
ljmp
int3
lock
pop
dec
sbb
jp
dec
scas
push
pop
std
icebp
and
adc
jmp
and
andl
out
sbb
test
pop
mov
push
mov
ret
dec
and
sub
sub
movsl
pop
in
mov
repnz
mov
xlat
divl
mov
dec
and
hlt
adcl
and
in
dec
imul
pop
out
fcmovb
or
lcall
and
repnz
or
stc
push
and
and
into
add
or
mov
mov
lods
and
fs
int
sbb
movsl
lods
shlb
and
cmp
sub
add
sbb
sbb
add
xchg
test
pusha
ds
popa
jns
inc
outsb
jbe
mov
arpl
into
imul
xchg
mov
push
bound
and
ret
dec
push
and
out
push
cmp
fldcw
and
mov
mov
ljmp
and
jbe
push
mov
and
ficompl
dec
and
jnp
std
imul
andl
dec
into
es
and
cld
cmp
dec
mov
add
and
inc
push
adc
jg
mov
pop
lret
loope
jge
and
lret
dec
mov
or
mov
and
inc
mov
dec
and
or
cmp
jb
dec
dec
pop
loope
adc
adc
lahf
inc
test
mov
iret
jno
jle
in
or
hlt
shll
aad
test
push
in
hlt
js
fdivrl
push
add
mov
jo
les
fwait
jl
add
sub
movsb
test
mov
and
cmp
lret
pop
rcll
cmp
mov
and
mov
inc
xchg
mov
iret
and
ret
mov
xchg
pop
enter
push
pop
aam
sub
cmp
jne
xor
loopne
inc
nop
xchg
leave
jmp
outsl
lods
and
xor
inc
and
repnz
fwait
lcall
or
and
out
add
add
add
movsb
push
adc
stc
test
and
or
push
loop
arpl
mov
loope
std
repnz
fsubl
adc
sub
dec
dec
adc
ficomps
lahf
and
or
and
popl
and
push
cmpsl
addb
movsb
hlt
dec
and
cmp
dec
mov
mov
and
and
cmp
sbb
push
scas
adc
mov
fnstsw
leave
call
test
adc
dec
out
and
imul
mov
mov
sbb
pop
mov
andb
and
pop
mov
fnstcw
push
cmpsl
mov
lods
xor
mov
ret
mov
sbb
and
dec
mov
and
mov
pop
iret
and
mov
mov
outsl
ss
jns
cmp
nop
xchg
jo
add
and
xchg
addl
ljmp
jo
pushl
stos
add
xor
in
in
add
and
push
cmp
movsl
add
jns
repz
mov
fwait
push
rcll
mov
and
sbb
add
add
movsl
icebp
mov
mov
adc
sti
cltd
mulps
sub
jb
mov
int3
aad
ret
and
add
and
cwtl
adc
into
jp
and
mov
push
dec
xor
xchg
xchg
and
jg
xchg
lock
or
push
cmc
fcompl
lea
cld
add
jge
push
mov
and
dec
ret
mov
dec
test
stos
inc
cmp
nop
fbstp
cmpsb
inc
jg
pop
jmp
and
dec
and
add
inc
cltd
loope
jge
aam
dec
push
pop
cmp
and
and
dec
xor
jbe
cmpb
adc
sti
xor
mov
mov
jno
push
loope
dec
stos
mov
fadds
imulb
pop
hlt
test
popf
fs
dec
movntq
jnp
or
and
ja
inc
push
xchg
imul
cmp
mov
and
jae
inc
push
enter
mov
and
mov
mov
shll
push
mov
and
shl
push
push
movsl
or
iret
jl
daa
jmp
sbb
mov
mov
jns
and
out
mov
and
xlat
sub
and
pusha
outsb
sbb
lock
sbb
add
pusha
addr16
xor
mov
out
mov
and
cltd
push
mov
fdivrl
or
and
push
imulb
dec
je
stos
in
pop
shll
nop
and
cmp
pop
ret
and
hlt
pushf
add
aas
mov
pop
inc
and
dec
movsl
outsl
and
and
or
push
jmp
and
outsb
test
movsb
mov
mov
fistpll
cmp
add
mov
loopne
pop
push
inc
pop
dec
push
test
adc
jne
or
and
cmp
and
xchg
inc
and
inc
fcomp
decb
mov
cs
lock
and
push
push
les
and
jp
jb
mov
sbb
sbb
pop
jns
mov
dec
test
sahf
and
lret
jge
or
sub
jbe
test
jl
mov
in
repz
and
test
xchg
into
pop
dec
push
pop
cmpsl
fs
and
aas
in
fisubl
idivb
int
sub
xchg
and
js
sbb
mov
adcl
cmp
and
mov
cmp
jns
lods
movsb
xchg
repz
sub
jmp
mov
jbe
lods
es
out
and
fwait
and
xor
mov
sub
dec
ja
dec
push
cmp
and
enter
adc
pop
stc
mov
add
lock
sub
dec
lods
cwtl
lods
mov
pop
clc
nop
loope
sub
sbb
mov
jmp
pop
pusha
mov
adc
lea
jns
mov
inc
push
das
add
sbb
hlt
scas
test
mov
jno
adc
lods
cs
inc
sahf
inc
les
movsb
push
xchg
and
pop
add
sub
aam
cwtl
and
nop
leave
mov
and
stos
mov
jnp
and
cmp
add
mov
add
and
arpl
xor
js
idivl
and
ficoml
popf
xchg
mov
lods
and
or
mov
mov
jmp
sub
cmp
in
ret
and
repnz
loopne
inc
popa
cmp
sub
iret
xor
and
sbbb
and
fdivrp
frstor
push
lahf
adcb
mov
sub
loope
xchg
xorl
jmp
cld
jne
xor
mov
pop
xchg
sub
ret
sahf
data16
int3
cmp
out
inc
out
aas
and
add
pop
sti
push
icebp
and
repnz
mov
call
or
stos
and
inc
xchg
data16
ljmp
mulb
xor
cmpsl
je
pop
es
insb
dec
and
popf
cmp
scas
and
stc
xchg
testl
mov
in
mov
bound
and
mov
cli
mov
mov
clc
mov
scas
and
pop
mov
out
ror
ja
test
fsubrl
or
xchg
mov
sti
int
mov
leave
and
mov
cltd
jmp
xchg
xchg
inc
cmpsl
and
icebp
mov
les
cmp
sub
sbb
pop
fistps
lea
or
scas
es
icebp
dec
add
clc
and
pusha
loop
xor
outsl
mov
cmp
sub
rclb
stos
mov
and
lret
fldl
leave
pop
and
dec
in
and
jle
test
orl
xchg
imul
aad
mov
xchg
push
das
jb
popf
jae
enter
xchg
and
imul
cmp
bound
inc
cmp
fldenv
and
lahf
mov
movsl
and
mov
xchg
cmp
pop
and
jl
iret
adc
inc
push
insl
popf
jns
jmp
fsubrp
cwtl
xor
xor
dec
cmp
and
popa
sbb
test
or
xchg
into
cmp
loope
ss
and
mov
add
xchg
and
ret
xchg
push
and
adc
jecxz
push
hlt
jg
adc
and
in
and
xchg
and
dec
and
pushf
jle
adc
push
jae
and
jno
std
and
sbb
push
pop
mov
outsb
out
sub
popl
and
and
cmp
cli
loop
movsl
add
inc
push
dec
and
nop
aaa
adc
cmp
and
lret
xchg
or
gs
inc
jnp
cmp
arpl
vucomiss
dec
pushf
xor
sub
in
testb
jns
ja
call
pop
push
sub
or
and
sub
in
and
jge
sarb
arpl
sub
jl
sub
je
xor
repnz
and
shl
sahf
pop
int3
sbb
cmp
mov
fiaddl
sub
and
sub
mov
inc
and
push
cmp
rcrl
and
cmp
and
popa
inc
dec
inc
bnd
jge
fsubrl
sbb
adc
and
jl
and
dec
lds
and
rolb
sub
test
int3
dec
loop
xor
and
pop
inc
adc
stc
ret
xor
mov
or
sub
test
fwait
adc
xchg
clc
adc
imul
xchg
dec
shrl
jmp
or
inc
and
cwtl
mov
popf
jg
fisubs
xchg
mov
aam
and
jno
xchg
movsb
and
imul
or
sub
inc
jle
adc
and
aam
mov
cmp
pop
loope
xchg
popf
add
mov
pop
and
jl
stos
xor
add
jae
cmpsl
ret
addr16
rclb
push
jmp
and
loopne
js
lret
loop
sub
xchg
dec
add
arpl
pop
mov
mov
and
xchg
dec
push
push
repz
pusha
add
jbe
and
repnz
push
and
push
js
sbb
and
or
ss
and
fdivs
and
daa
mov
push
and
xor
mov
icebp
cld
addb
cmpl
out
popa
mov
fcompl
in
and
dec
negl
dec
pop
cmpsb
and
mov
cmp
fsubrl
and
sti
and
mov
inc
jae
lahf
mov
mov
popf
sarb
je
and
call
mov
and
xchg
dec
testb
dec
dec
stc
rcrl
cwtl
cmpsb
sub
cmp
jg
jne
add
and
cmp
inc
dec
cmp
and
in
lret
xor
pop
pop
sbb
push
and
jmp
cmp
fsubl
jno
je
adc
mov
sub
cli
aas
cmp
loope
push
fcoml
xchg
and
mov
adc
pop
xchg
inc
aaa
push
shlb
jmp
gs
movsb
mov
adc
cmp
or
mov
aad
jmp
sbb
xchg
add
jg
sub
sti
inc
and
fisubrs
inc
in
mov
and
test
loopne
aam
jecxz
test
mulb
or
cmp
add
popf
or
test
inc
out
and
pop
aad
test
sub
jae
cwtl
dec
and
mov
out
jmp
and
cmp
mov
inc
sbb
sub
push
add
popa
push
rorb
adc
dec
arpl
jle
and
xchg
xchg
out
xchg
in
sub
inc
inc
dec
sbb
jnp
pop
lret
pushf
xchg
mov
pop
and
ret
jo
xchg
mov
jbe
dec
adc
add
xchg
nop
inc
bound
and
out
xchg
ds
out
ret
jmp
bound
cmp
and
in
scas
cwtl
int3
adc
sbb
sub
and
adc
cmp
fisttps
js
push
lock
and
cmp
add
or
and
cmc
cli
or
dec
outsb
and
jne
gs
mov
add
xor
mov
jbe
adc
ljmp
mov
lcall
bound
out
and
lea
fcoms
inc
sarl
shl
and
mov
add
sbb
mov
and
jle
test
xor
or
ss
test
and
pop
jge
insl
mov
xor
dec
jg
and
push
and
into
outsb
sub
pop
and
pop
inc
and
xor
jne
and
int
and
cmpsb
dec
data16
jb
and
mov
xchg
pop
pop
movsl
stos
xor
lods
and
and
and
xchg
jmp
and
jno
shlb
jne
inc
dec
in
fwait
and
lea
and
mov
sbb
test
js
cld
test
stc
loope
push
and
cwtl
mov
jno
mov
or
adc
scas
aam
ficoms
movsl
std
loope
js
and
jge,pn
pop
int
sbb
dec
jg
sahf
adc
mov
jns
adc
imul
inc
in
xlat
jp
sti
and
int
ficompl
sar
cmpsb
jle
jp
loope
rclb
movsb
imul
lods
sbb
and
cltd
aam
pop
and
sbb
dec
and
inc
add
xchg
mov
xchg
and
cld
jnp
fmul
and
mov
imul
mov
mov
arpl
xor
sub
into
rclb
loop
loope
inc
mov
mov
lcall
jg
add
push
ljmp
pop
daa
lret
inc
shrl
sbb
xor
ljmp
inc
xor
and
lcall
push
int
idivb
mov
dec
and
mov
mov
inc
xchg
lods
sbb
inc
jge
pop
push
mov
jle
or
inc
and
add
jne
andl
divl
and
push
imul
aaa
call
enter
mov
pop
aad
loop
loopne
int3
and
push
xor
pop
fdivs
push
pop
vpmaxsw
insb
out
or
mov
xor
push
push
sbb
cmp
rorl
mull
xchg
icebp
aad
jg
and
ret
cwtl
loop
inc
cmp
out
add
in
inc
and
mov
sub
cmp
push
insl
and
push
les
lds
sbb
mov
and
add
call
movsl
and
mov
aaa
ret
jl
bound
push
jbe
das
cmp
shr
icebp
bswap
jae
inc
adc
lock
jne
jecxz
dec
movsb
mulb
in
xor
test
in
popl
test
push
and
mov
xor
in
dec
cwtl
and
push
sbb
flds
pop
xchg
adc
sti
push
and
push
outsl
lea
jnp
mov
inc
stos
stos
hlt
data16
and
aam
jge
mov
mov
shrl
pop
sahf
lock
pop
adc
out
mov
mov
mov
in
push
jmp
dec
and
mov
ljmp
and
imul
loop
rcll
or
popa
xchg
js
jne
arpl
push
rcrb
and
sub
xchg
xchg
mov
jmp
or
xchg
cmp
aad
adc
or
jge
or
jl
leave
int3
into
xor
sub
mov
and
inc
dec
and
jbe
outsl
push
pusha
push
jno
cmp
out
les
pushf
and
aad
lea
cmp
repnz
pop
add
adc
popl
xor
cmp
add
test
push
mov
pop
cltd
cmp
dec
in
in
pop
and
cmpl
pop
scas
inc
outsb
adc
es
mov
outsl
mov
andl
lods
fbstp
mov
rcll
and
xchg
dec
dec
sarl
push
out
and
pop
sahf
cmpb
mov
and
scas
jnp
mov
cs
or
xchg
jecxz
mov
push
mov
lahf
fs
in
mov
inc
jno
sbb
inc
sti
fisttpll
dec
and
mov
cmp
and
sub
addl
push
xor
ss
lahf
stos
in
movsl
cld
pop
jp
cli
push
and
and
pop
ret
call
test
add
and
push
or
xchg
and
inc
jnp
mov
mov
shll
jne
inc
add
mov
add
popa
bswap
rep
sub
inc
incl
jmp
pop
jno
push
and
sub
pop
aaa
arpl
in
int3
outsb
and
nop
push
les
and
inc
dec
jp
fiadds
and
outsb
pop
adc
stc
and
sbb
pop
ret
lahf
je
or
push
or
jns
xchg
pop
fcomps
sahf
clc
and
imul
dec
and
sti
mov
pop
push
out
and
fistpll
mov
xlat
inc
shl
dec
bound
aam
cmpsl
sub
and
cli
pop
cmp
imul
aad
sbb
sbb
ljmp
leave
sub
in
add
or
push
je
imull
int
jnp
clc
mov
xor
sub
mov
sub
cmp
and
flds
int
enter
and
rorb
mov
aam
mov
fldenv
mov
les
and
inc
cmp
mov
cmpsl
daa
bnd
aas
inc
adc
and
xchg
cmp
insb
and
cltd
nop
and
mov
push
dec
lock
jmp
mov
xorl
xchg
sbb
or
pop
cld
pushf
ja
pop
mov
lret
enter
and
hlt
repz
in
call
cmp
adc
daa
or
and
or
adc
mov
pop
jle
ja
mov
add
cmp
cli
and
mov
popf
mov
mov
pop
and
sbb
pop
dec
and
cmovl
sarl
jecxz
lods
int3
or
popf
fs
inc
ja
scas
scas
adc
pop
ficomps
test
jbe
adc
incl
sub
mov
adc
adc
ja
and
shl
and
iret
addb
lahf
push
dec
fwait
movsl
aas
and
shrb
adc
dec
in
xchg
xor
and
xchg
in
out
aam
jmp
and
xor
add
xor
adc
sbbb
or
cmc
dec
and
stos
adc
and
outsl
fcoml
pusha
in
push
and
mov
inc
je
lcall
loopne
push
and
neg
in
pop
and
imul
mov
mov
dec
jnp
mov
arpl
sub
jge
fbld
adc
adc
inc
jnp
imul
movsb
mov
mov
add
aad
jnp
movsb
shlb
and
jle
dec
and
xchg
daa
testb
jns
gs
out
xchg
sbbl
xchg
shll
adc
aas
add
mov
pop
jbe
cmp
mov
and
mov
lods
mov
push
pop
stc
fdivs
mov
leave
and
hlt
add
dec
jecxz
and
in
popl
pop
jle
sub
and
div
cmp
or
jae
iret
push
and
mov
cmpsb
sub
mov
push
xchg
enter
sub
jne
and
inc
outsb
cld
leave
lods
mov
mov
push
push
test
fbstp
sbb
cmp
pop
and
mov
sbb
pop
outsl
shl
and
jl
sti
and
xchg
inc
aas
sub
jns
fldz
shrl
cmp
nop
jb
neg
mov
fcompl
andb
pop
pop
jp
cmpsl
ds
cmp
lea
test
punpcklbw
lret
int
and
xorb
and
pop
jl,pn
mov
in
and
daa
clc
mov
sub
out
and
bound
int
xor
and
dec
xor
ret
mov
and
pop
loopne
and
rorb
pop
and
inc
cmp
push
popa
lahf
cmp
mov
aaa
jge
xchg
lea
or
sub
scas
sub
stc
inc
add
repnz
test
hlt
stos
adc
out
popf
xchg
insl
imul
mov
aad
or
sarb
loope
xchg
dec
loope
enter
push
call
cmc
xchg
adc
push
cmp
in
cmp
shlb
inc
mov
mov
adc
sub
push
fcmovnbe
pop
ss
xlat
imul
jecxz
movsb
and
mov
repnz
sbb
inc
data16
es
shlb
and
push
sub
add
in
rclb
add
cs
xor
mov
mov
sub
icebp
pop
push
es
adc
and
fnstcw
and
xchg
cmp
mov
jmp
and
les
out
mov
cmp
mov
mov
xor
pop
mov
aam
cmp
and
cmp
xor
mov
and
lcall
pop
or
dec
xor
daa
shll
ret
cmpb
hlt
jge
sub
cmpsl
testb
xor
loope
pop
test
cmc
and
hlt
push
and
imull
dec
mov
adc
mov
ret
fidivrl
and
repnz
and
mov
ljmp
push
mov
je
pop
aad
lds
call
jg
mov
mov
and
jmp
push
not
bound
xchg
inc
int3
data16
shl
lock
mov
add
pushf
test
lahf
jp
jmp
es
test
test
flds
loopne
inc
pop
std
imul
bound
fidivs
or
add
pop
out
iret
cmp
and
or
push
mov
pusha
and
test
push
mov
sbb
and
scas
pushf
scas
mov
data16
mov
jmp
and
xor
and
jno
mov
cltd
sahf
leave
cli
cmp
andb
push
mov
andb
dec
xor
push
adc
adc
pop
into
lea
outsl
roll
sub
in
push
xor
adc
lret
fdivl
jecxz
push
dec
and
adc
scas
sub
lcall
out
push
out
or
sub
mov
mov
repz
and
bound
adc
and
imul
sbb
pop
mov
pop
lock
xchg
cmp
rorb
loop
xlat
add
lret
shlb
jle
into
movsb
add
add
xchg
ret
out
cld
jns
and
arpl
lds
daa
and
xor
scas
mov
leave
outsl
jne
jbe
cmpl
popf
xchg
xchg
mov
and
sahf
insb
and
pop
ds
cmp
call
cmp
scas
sub
xor
loop
dec
mov
and
pop
cld
into
ds
and
cmp
and
push
mov
xlat
sub
xchg
cltd
and
movsb
pop
scas
std
push
and
incb
mulb
faddp
cli
cs
outsb
xlat
rcll
add
cmpsl
lea
fildll
xchg
loop
mov
movsb
pop
adc
lahf
jl
and
adc
rcrb
out
jo
jno
enter
and
adc
neg
and
repnz
and
mov
clc
or
and
pop
xchg
lahf
fldcw
sub
xchg
cmp
mov
aam
sbb
xor
stc
or
and
call
and
and
test
add
adc
scas
xchg
insb
cmp
jl
outsl
dec
and
pop
mov
int3
test
bound
sub
loopne
and
ret
pop
jne
inc
adc
sbb
and
loopne
xchg
mov
cld
xor
mov
mov
rorl
pop
jp
and
lods
fnstenv
mov
inc
mov
sub
imul
cs
and
add
cmp
loope
cmpsl
lea
pop
and
or
adc
adc
sahf
test
pop
in
stc
repz
dec
mov
mov
or
sub
jp
mov
mov
push
pop
je
and
mov
jle
mov
and
icebp
sahf
or
js
xchg
rorb
and
xlat
dec
orl
inc
jno
inc
and
adc
add
scas
dec
shr
movsb
test
daa
and
rclb
or
aam
jmp
cmpsl
add
orb
int
cltd
inc
xchg
adc
cmpl
dec
mov
xor
nop
testb
cwtl
cmpsb
pop
pushf
and
jmp
sbb
pop
and
mov
xor
aam
push
in
inc
cmpsb
roll
and
adc
and
pop
xchg
and
psubusb
or
dec
adc
mov
movsb
pop
and
scas
xchg
nop
mov
sbb
daa
xor
xchg
adc
out
call
pop
cmp
sbb
or
cld
mov
and
and
mov
and
test
aas
and
inc
fucomp
or
in
and
sub
lret
pop
fsubs
fstps
sahf
movsb
lods
adc
and
or
sub
and
popf
inc
and
mov
mov
sub
nop
icebp
lds
leave
popf
stos
jb
and
xchg
cmp
xadd
shll
and
mov
dec
dec
pop
add
loopne
sbb
clc
xlat
mov
mov
fildl
rclb
sbb
pop
jle
bound
loopne
iret
sub
mov
add
fcmovnbe
and
movsl
jle
and
cmpsl
xlat
adc
ret
fsubrl
push
dec
and
cmp
pop
sarl
scas
cmc
mov
sahf
and
xchg
lods
jmp
and
lret
and
jne
stos
and
cltd
sub
cmp
or
es
and
dec
sti
sbb
decb
inc
push
sub
imul
cmp
fnsave
stos
push
pop
add
inc
movsb
aam
out
xor
das
pop
cmp
and
xor
out
push
push
pop
xchg
xchg
mov
sahf
in
in
aad
or
mov
das
popf
xor
enter
imul
and
mov
in
mov
fstpl
mov
pushf
and
sar
dec
jbe
xor
and
xchg
jl
jle
pop
and
xchg
pusha
js
int3
jns
leave
sub
jecxz
xor
xchg
shrl
fisubl
push
movl
or
mov
dec
xchg
sarl
xor
jg
sbb
movsl
int
ret
pop
push
sbb
and
cmp
cmp
hlt
pop
lahf
inc
mov
and
arpl
and
aam
sti
cmp
fmull
push
int
ljmp
jo
cwtl
std
push
and
pop
addl
mov
imul
add
test
cmpsl
add
dec
cmc
pop
je
mov
jge
ret
add
out
flds
xchg
xchg
push
and
push
jmp
sti
mov
lods
shlb
and
inc
ja
call
in
mov
add
mov
xchg
fmull
sbb
or
call
ret
in
test
stos
fs
xchg
dec
add
or
cmpsb
pop
jl
fidivrl
sub
xor
push
test
inc
sub
and
pop
cmp
int3
jne
pop
push
sub
mov
push
and
pushf
cmp
sub
mov
test
xchg
rcll
pusha
cmpb
xchg
and
lods
adc
shlb
inc
xchg
popa
dec
jmp
jle
or
cwtl
sub
and
sub
fwait
movsb
repz
sub
out
fnstsw
add
mov
inc
jbe
or
and
mov
mov
lods
ja
push
fsubrp
ret
aam
cld
lret
clc
sahf
jmp
sub
and
pusha
out
sub
sub
and
test
and
inc
xchg
sbb
in
jbe
jmp
negb
and
jno
stc
add
imul
xlat
sub
push
mov
cmp
xchg
pop
sbb
mulb
je
inc
and
inc
push
orb
xchg
xchg
scas
adc
jnp
mov
and
xor
mov
in
sub
xor
pop
adc
ljmp
xchg
and
adc
daa
fs
xchg
imul
das
mov
mov
inc
cmpsl
out
push
nop
add
cmp
and
mov
popf
inc
mov
sub
mov
aam
or
ret
and
mov
xor
jmp
push
movsl
ljmp
dec
push
sub
dec
xchg
mov
xor
and
loopne
add
mov
scas
std
pop
mov
cltd
pop
popf
repz
jo
inc
lret
sub
cmpsl
inc
out
mov
mov
add
and
or
mov
inc
push
xor
and
push
mov
xor
inc
into
je
and
insb
sbb
add
popf
sub
mov
mov
clc
or
add
pop
xchg
jo
popf
int
cmpsb
and
pop
int3
push
sarl
dec
cmp
cwtl
push
mov
xor
dec
inc
out
daa
xor
xor
push
dec
xor
sub
es
clc
cmp
daa
arpl
mov
fdivl
sbb
mov
adc
shlb
sbb
aas
mov
pusha
pop
and
idivl
cmp
in
scas
xor
sub
rol
inc
test
into
inc
jmp
roll
xor
adc
enter
mov
or
adc
ret
jge
or
add
aaa
aas
sbb
xor
mov
pop
dec
and
or
outsl
jle
and
mov
mov
imul
sbb
dec
jecxz
jo
imulb
stc
cld
pop
and
inc
ljmp
mov
cmc
out
xchg
cwtl
or
stos
ror
add
inc
and
leave
fnstsw
mov
jae
push
int3
enter
fisubrs
mov
cli
std
sbb
and
push
arpl
and
movsl
nop
lock
shr
lret
pusha
ret
inc
pop
jle
add
das
fidivl
cmpb
ds
fs
lahf
and
sbb
mov
xchg
repz
aam
lahf
and
lcall
fstpt
mov
xchg
jmp
fcoml
mov
and
mov
and
mov
pop
repnz
mov
and
hlt
xchg
out
in
jae
cltd
pop
icebp
and
mov
cmp
cltd
jecxz
pushf
and
mov
and
andl
std
dec
mov
les
adc
cli
sbb
in
outsb
dec
xlat
and
add
mov
push
mov
and
xchg
loop
and
cmc
ja
in
pop
sub
lods
dec
cmp
sbb
adc
nop
out
movsb
dec
or
subl
inc
add
fsubs
and
dec
cs
sbb
dec
cmpsl
in
push
push
in
mov
fs
mov
mov
jb
and
out
and
xchg
shll
and
fmul
push
movsl
mov
int3
and
les
jl
cmp
in
arpl
xorl
adc
mov
dec
pop
mov
cmp
or
and
fidivrl
mov
xchg
sub
sbb
mov
sub
mov
xchg
cmpb
sub
ja
ret
in
and
push
push
dec
cmp
jmp
jl
enter
sub
mov
add
adc
inc
xor
sub
cltd
mov
add
push
pop
inc
adc
pop
mov
ljmp
push
adc
pop
sbb
repnz
cmpb
push
aas
xchg
std
das
lods
push
iret
idivb
jne
dec
mov
xchg
loopne
sub
aas
xchg
inc
push
and
adc
jno
sbb
out
in
jb
mov
daa
sbb
outsl
test
sub
dec
jbe
sub
jp
push
xlat
aas
cmp
xchg
rolb
xchg
cwtl
lods
hlt
stc
in
cmc
aas
lahf
lock
icebp
add
loop
sub
bound
and
fs
sub
jae
aas
lahf
cmp
and
js
je
dec
and
ret
or
sub
add
inc
fisubrs
add
add
insb
xlat
fwait
dec
mov
sub
adc
sarl
or
push
mov
xchg
pop
sub
stos
mov
stos
pmulhw
xchg
daa
fsts
popa
and
pop
sti
dec
out
dec
mov
or
ret
shll
jp
push
add
mov
add
gs
arpl
adc
inc
add
les
int3
sub
jl
daa
daa
cld
cmc
jecxz
add
fbstp
jno
lret
scas
xor
in
test
pusha
jge
cmpsb
clc
loop
xor
push
loope
and
ss
sub
adc
dec
mov
iret
frstor
or
popa
icebp
jb
jno
mov
aas
test
sub
push
jne
aam
arpl
daa
or
sub
shll
xchg
xor
scas
jno
mulb
dec
cmpsl
jbe
jae
mov
std
and
pop
cmp
aaa
lahf
mov
mov
push
and
pop
inc
push
jmp
inc
repz
jns
xor
xor
add
imul
pop
lahf
cmp
enter
sub
arpl
sub
and
mov
sub
int3
pop
sahf
lods
mov
dec
pop
and
push
inc
lcall
inc
cmp
iret
insl
xor
pop
push
insb
stos
cltd
into
xor
and
lret
es
test
jo
sub
iret
inc
arpl
cltd
cmp
ja
packuswb
sub
out
cmp
inc
mov
pop
sahf
adc
and
es
lods
xor
adc
shlb
or
mov
inc
mov
xchg
imul
mov
xchg
fmull
mov
sub
xor
push
mov
imul
fsts
pop
mov
aaa
lcall
mov
jno
sub
lock
popa
and
and
enter
jnp
js
add
arpl
test
and
mov
push
loope
or
xor
and
loopne
stc
adc
addr16
enter
cmp
ret
adc
inc
cltd
mov
icebp
adc
sub
je
or
mov
xchg
inc
subb
lret
bound
or
push
adc
out
dec
sbb
add
icebp
fsubl
movsl
cmp
aaa
sub
imul
rclb
xchg
popa
cmp
sbb
jo
inc
enter
test
inc
xchg
mov
mov
and
and
inc
jb
or
in
inc
sub
xor
inc
add
popa
mov
mov
loop
js
out
jecxz
add
lea
xchg
adc
pop
mov
cmp
push
inc
sbb
sub
test
shll
mov
pop
pop
frstor
shrb
addb
jno
inc
loop
orl
stc
pop
daa
stos
je
xorl
stos
or
mov
rorb
outsb
enter
aam
mov
lods
sub
rorl
mov
int3
pop
into
xchg
xor
aaa
cli
popa
pop
and
lea
push
pop
jnp
xor
jl
bound
add
sub
xorb
sub
inc
cmp
addl
in
loop
adc
and
movsl
and
inc
daa
xchg
mov
mov
adc
mov
mov
push
es
inc
hlt
repnz
pop
inc
mov
arpl
loop
mov
bound
mov
and
inc
lea
inc
push
sub
sub
es
sbb
jmp
lcall
and
ret
cli
dec
inc
push
adc
les
and
shll
movsb
xor
repnz
call
adc
mov
mov
push
jecxz
sarl
xchg
jns
xchg
and
or
xchg
shlb
ljmp
mov
jae
cltd
mov
arpl
cmp
aam
movsb
mov
xor
and
insb
mov
repz
mov
jecxz
rcrl
mov
aaa
rcrb
xor
leave
jmp
enter
sub
add
inc
shlb
lock
fwait
enter
cli
and
outsb
or
or
push
shl
and
xor
xchg
and
scas
pop
xchg
cmp
dec
mov
xor
mov
aaa
adc
jge
mov
mulb
inc
sub
sub
inc
xor
cmpsb
pop
enter
sub
test
push
es
sub
sub
mov
dec
les
xor
jnp
cmc
test
or
dec
and
ss
push
adc
push
jmp
insl
push
xchg
xchg
dec
and
outsl
je
xchg
fsts
add
inc
enterw
pushf
sub
imull
subl
adc
mov
bound
jl
mov
js
pop
shll
jno
mov
les
mov
test
shl
in
mov
cmp
imul
jl
sbbl
daa
cli
or
sub
ret
int
dec
data16
dec
and
sbb
mov
adc
sub
dec
jle
testb
shrl
cmp
dec
loopne
mov
xor
sub
hlt
jmp
icebp
mov
xor
loop
ret
or
das
cmpsb
jne
jp
push
push
and
int
sub
jno
pop
into
enter
mov
adc
push
jno
test
sub
push
mov
and
jnp
inc
lahf
divl
lret
adc
and
add
jmp
stos
jl
addr16
mov
sbb
lea
mov
cmp
popf
xor
inc
repnz
sub
sub
aam
jmp
lret
aas
mov
xchg
pop
jge
inc
jb
dec
ret
inc
jbe
inc
aaa
hlt
sub
jb
adc
ss
xlat
mov
jecxz
stc
arpl
in
push
pop
out
aam
push
add
or
pop
shll
dec
xchg
jg
add
imul
icebp
inc
pop
fcomip
pop
mov
jp
push
addl
xor
les
mov
and
and
pop
sub
shll
cs
out
push
push
mov
fnstenv
push
jb
adc
add
mov
or
xchg
and
push
mov
adc
push
push
in
sbb
sub
cmp
lret
xchg
jns
push
scas
cmc
test
in
push
call
mov
outsb
jnp
sub
je
jns
fcomps
and
imul
ret
pop
sub
xchg
call
in
test
test
jl
and
cs
out
test
insb
out
and
fdivrs
xlat
push
loop
jo
into
sub
lea
enter
imul
sub
cli
cmp
lss
imul
lahf
stos
popa
add
sbb
stc
xor
jb
sbb
int3
and
pop
sbb
sub
and
cs
inc
sub
test
aas
addr16
push
cmpsb
loopne
aam
jmp
sub
pop
mov
int3
push
add
and
enter
pusha
scas
repz
lock
jns
ficoml
mov
imull
or
pop
pop
test
mov
or
push
xchg
adc
and
ffree
mov
and
les
xor
cs
scas
addr16
inc
mov
mov
and
push
jnp
rclb
push
mov
stos
mov
xchg
and
and
leave
pop
dec
mov
insb
shll
mov
mov
inc
sti
mov
and
stos
pop
mov
mov
lods
xor
jns
aaa
xor
stos
adc
fwait
ret
xchg
jg
out
push
daa
ret
push
stos
jmp
sbb
stos
mov
mov
mov
aas
push
xchg
jbe
sub
sahf
sub
adc
xor
dec
jmp
and
aas
mov
mov
jne
aad
dec
cmp
inc
dec
jno
mov
jne
xsavec
andl
popf
push
inc
xor
pop
sbb
pop
xor
inc
imul
test
subb
and
pop
aaa
daa
inc
xchg
gs
gs
jp
sbb
sbb
sti
adc
sub
pop
push
cmp
push
or
inc
adcb
dec
es
rol
xor
lock
and
jmp
imul
les
mov
enter
dec
push
jecxz
sbb
jg
xchg
test
sbbl
pop
xchg
or
je
and
xchg
mov
inc
xor
cmp
pop
dec
mov
test
push
rcrl
loope
add
mov
les
xchg
lea
mov
xor
daa
aas
ds
xchg
mov
rorl
cmpsl
push
arpl
mov
add
popf
xchg
dec
push
popl
push
jns
sub
loop
gs
sub
nop
mov
push
pop
aad
stc
and
popf
adc
clc
mov
inc
pop
enter
mov
xor
jae
jno
add
daa
call
inc
insb
rclb
cli
test
push
xchg
insl
mov
arpl
arpl
lret
jmp
and
and
and
roll
inc
xor
data16
add
cmc
in
xchg
pop
mov
inc
inc
arpl
or
es
xchg
and
loopne
rcll
call
in
cmc
mov
mov
ror
xor
pop
test
mov
push
pushl
xor
jns
les
es
push
jmp
and
ret
mov
lods
push
add
nop
enter
add
inc
mov
fmull
arpl
sub
enter
sub
xchg
xor
es
mov
cmp
test
cmp
cmc
insl
xor
icebp
repz
and
das
aas
ret
mov
loope
ret
jmp
mov
and
fdivp
xchg
jle
jp
xor
pop
std
xor
jno
ljmp
inc
dec
addr16
cld
dec
dec
pop
xchg
movsl
sbb
mov
insl
sub
fs
mov
mov
xchg
jae
popa
inc
pop
bound
shlb
orl
push
cmc
inc
push
movsb
adc
addb
int
fsub
in
das
out
loope
or
adc
fisttpll
loopne
sub
and
movsl
xchg
add
sub
sbb
jecxz
shrl
sahf
add
inc
mov
test
add
rcll
sub
mov
lock
daa
or
add
pop
shrb
dec
sarb
dec
shll
es
scas
or
xor
mov
imul
mov
add
jmp
out
jp
inc
pusha
dec
lahf
xor
cwtl
insl
jle
bt
pushf
xchg
sahf
sub
xchg
outsb
daa
xlat
les
mov
cltd
mov
int
inc
scas
mov
mov
sub
les
adc
ss
outsl
imul
test
stc
mov
sti
xor
sbb
add
int
loope
mov
enter
adc
test
xor
xchg
in
cmp
jmp
xlat
mov
inc
and
pop
and
gs
out
cld
je
add
cmp
pop
mov
dec
mov
push
lret
or
adc
sub
lds
rclb
push
outsl
xchg
arpl
xchg
mov
cmp
mov
les
imul
jl
lods
adc
pop
sub
mov
ja
push
out
sbb
test
fldl
jno
imul
inc
jb
mov
inc
aam
stos
push
out
pop
pop
jb
enter
pushf
inc
in
jae
mov
popa
fwait
sub
enter
sub
xchg
sub
lcall
push
push
jno
pop
cmp
ret
out
pop
movsb
rclb
jnp
cld
sub
dec
mov
dec
xor
jl
add
enter
ja
and
push
pop
mov
jg
cmp
ja
ja
pop
inc
sti
ffree
insl
les
xor
push
jo
bound
sub
dec
imul
dec
xor
sbb
jecxz
and
enter
in
inc
int3
cld
push
js
les
sub
sub
out
enter
mov
stos
sbb
sbb
xchg
jnp
lock
mov
repnz
inc
xor
jge
push
and
and
pop
add
sub
arpl
inc
lds
movsl
pop
fcom
mov
dec
imulb
inc
call
xchg
mov
adc
stos
mov
fcoms
mov
xchg
or
inc
andb
push
cld
cmp
in
ret
data16
cmp
pop
xchg
cmc
sbb
mov
xor
aad
or
push
sbb
adc
andl
popf
popf
arpl
call
inc
add
fcmovnb
and
in
cmc
je
jecxz
pusha
or
in
out
insl
les
adc
mov
mov
sbbl
pushf
imul
ds
push
outsb
push
out
andl
fwait
adc
sub
pop
cwtl
add
or
ja
outsl
jecxz
xor
xor
jb
lds
or
out
sbbb
das
loopne
mov
pop
xchg
je
fimuls
cmp
imulb
sahf
push
movsb
out
mov
xor
sub
push
add
bound
or
or
imul
jb
sub
and
and
cmp
inc
dec
enter
imul
add
mov
into
fwait
dec
push
mov
sbb
xor
xchg
mov
ss
stc
cmpsl
in
inc
mov
cli
xor
enter
ret
sahf
dec
jg
sbb
jg
and
les
xchg
imul
in
mov
xchg
mov
fdivrl
cmp
adc
push
mov
negl
enter
lcall
dec
mov
sbb
and
iret
sub
nop
jb
jns
movsl
cmp
cmp
sti
je
sub
daa
iret
xchg
mov
inc
pop
push
out
arpl
loope
inc
jnp
xlat
popa
call
dec
repz
out
mov
jge
leave
inc
add
aas
leave
dec
xor
lahf
add
pop
sub
jns
aas
cld
xorb
das
ja
enter
and
sbb
adc
mov
hlt
or
shrl
inc
jb
enter
sub
flds
mov
jns
dec
mov
adc
jo
cmpl
jmp
sbb
mov
std
inc
or
and
pop
mov
pop
mov
inc
mov
mov
nop
add
les
and
les
sarb
sub
jb
mov
xchg
lock
mov
sub
xchg
mov
xchg
adc
dec
adc
jecxz
frstor
repnz
xchg
mov
xchg
jbe
adc
add
ret
add
xchg
cmp
mov
lods
jmp
add
jno
push
xor
adc
inc
ret
fxch
pop
push
test
or
imul
clc
mov
pushl
loope
repz
mov
push
xlat
lods
sub
sub
mov
out
addr16
mov
dec
push
xchg
inc
imul
inc
dec
ret
pop
std
roll
push
imul
push
dec
cmp
popa
mov
mov
je
lret
addr16
aas
mov
mov
out
mov
sub
sbb
jnp
imul
sub
and
loopne
ja
sbb
jnp
push
mov
push
mov
dec
imul
shlb
orl
mov
lock
mul
or
pop
xlat
mov
loope
jae
arpl
sub
sbb
in
fnstenv
mov
scas
imul
inc
jmp
mov
dec
ret
call
shll
mov
cmp
dec
sub
pop
sub
inc
jbe
rorl
stos
out
and
xchg
jmp
and
das
mov
cmpl
dec
outsb
mov
cltd
push
jp
inc
imul
dec
xlat
mov
test
test
divl
push
pop
movsl
inc
addr16
rcll
mov
add
inc
mov
push
stc
popf
test
adc
jns
or
les
fcmovnu
push
bound
adc
lock
mov
mov
ja
xchg
lcall
scas
sbb
or
pop
es
insb
ja
jnp
sbb
dec
sub
push
push
data16
jl
je
sbb
dec
idivb
daa
dec
das
les
push
mov
dec
cltd
mov
inc
insb
lock
sti
inc
cmp
ja
and
loop
imul
lcall
jae
les
pop
mov
xchg
mov
in
mov
xlat
hlt
push
lcall
cmpsb
inc
mov
mov
pop
dec
dec
mov
mov
int
outsb
enter
jle
dec
push
jns
test
xchg
inc
cmp
test
dec
or
jns
mov
dec
int3
fcmovbe
inc
mov
lahf
aas
mov
scas
add
je
xchg
loop
frstor
mov
int3
enter
sub
pop
xchg
mov
sbb
mov
cmp
mov
push
inc
lods
roll
scas
mov
popa
test
into
dec
filds
mov
push
mov
in
add
mov
test
sub
cwtl
mov
bound
push
adc
add
and
adc
daa
clc
xor
jo
xchg
lcall
inc
sbb
jge
xchg
jb
xor
fucomp
cmpsl
dec
std
dec
inc
enter
mov
fisubrl
imul
pushf
sar
lods
rcrb
mov
jb
enter
jmp
int
loop
in
mov
xor
xlat
cmp
jne
inc
imul
ds
enter
sub
jnp
xchg
pop
xor
or
mov
add
mov
loope
push
sub
jl
lahf
aad
xor
mov
ret
sub
jb
jp
push
ja
jno
pop
in
pop
lret
mov
ds
pop
rorl
lret
inc
xor
notb
es
mov
ret
dec
arpl
dec
out
popa
scas
iret
pop
pop
xchg
sbbl
xchg
xchg
and
push
mov
popa
xchg
mov
adc
inc
jle
pop
adc
xorl
mov
les
into
outsb
ljmp
dec
insl
out
xor
insl
cmp
ret
mov
mov
outsb
cwtl
or
cmove
mov
sahf
repz
scas
je
add
mov
push
add
ret
loopne
les
push
negb
pop
push
xorl
sub
mov
push
jbe
mov
addr16
mov
rolb
jge
xchg
icebp
jecxz
popf
int
add
lock
xchg
gs
loope
jmp
pusha
push
lea
sbb
sbb
and
shl
push
jl
push
sub
in
enter
mov
js
mov
imul
movsl
orl
dec
es
inc
test
ss
ret
xor
repz
mov
xchg
and
in
loopne
dec
inc
xchg
fwait
test
add
ds
jbe
inc
enter
daa
loope
and
inc
ret
data16
push
mov
insl
mov
sub
dec
fsts
gs
adc
stos
loope
push
or
mov
mov
or
movsl
dec
and
cs
dec
imul
gs
mov
mov
repz
add
scas
push
mov
lods
mov
jle
das
jbe
jmp
test
pop
into
sbb
rorl
rorl
push
out
stos
std
inc
add
push
mov
loop
neg
adc
loope
dec
add
flds
aas
and
insl
adc
popf
push
and
inc
fdivp
mov
sbb
mov
xlat
jmp
leave
fdiv
inc
xchg
and
cmpsl
in
mov
loope
xchg
mov
xlat
lret
inc
mov
adc
push
push
and
in
sub
mov
ret
pop
movsl
and
dec
mov
imul
and
jo
lcall
mov
nop
int3
inc
mov
ds
inc
lods
sbb
push
idivl
xchg
inc
ret
and
cmp
sub
xchg
jnp
out
je
and
jmp
and
clc
mov
push
mov
sub
outsb
inc
std
loope
gs
fwait
mov
push
jge
ret
inc
pop
push
adc
and
repnz
clc
mov
push
cltd
mov
pop
push
adcb
cmc
pusha
jg
testl
les
and
pop
dec
sub
and
aam
sub
ret
lods
mov
and
inc
in
and
mov
and
daa
add
scas
aaa
jae
sbb
dec
dec
add
movsb
cld
inc
xchg
dec
fimuls
adc
and
dec
pusha
mov
mov
inc
sbb
cmp
dec
mov
push
enter
out
or
aas
mov
shll
fsubl
pop
inc
jmp
mov
adc
and
inc
gs
push
mulb
add
xchg
sub
outsl
xchg
cmp
or
mov
push
sub
cltd
imul
rclb
push
sbb
out
insl
pop
pop
jmp
leavew
in
cmp
imul
iret
push
pop
or
pop
cmp
out
jns
ret
mov
test
and
dec
and
fsub
and
stos
lds
xchg
xchg
pushf
mov
sbb
and
inc
jae
ljmp
cmpsl
cwtl
mov
sar
and
sub
movsb
cmp
fcomps
adc
sub
push
adc
xchg
dec
xor
inc
and
lock
imul
mov
ficomps
dec
int
cld
mov
dec
imul
out
mov
lock
cmpsb
cmpb
aam
loop
add
ud2
and
sub
sub
push
and
rcll
scas
test
xor
and
cmp
dec
and
inc
and
std
sub
stc
jge
or
cs
divl
ret
fidivrl
xchg
inc
int
sub
cmp
or
in
test
and
repnz
adc
sbb
lahf
orl
or
and
je
imul
and
add
push
outsl
jb
jbe
addr16
in
xor
lcall
push
and
xlat
das
lahf
sub
push
loopne
sub
push
xchg
scas
sub
jnp
push
jg
negb
sub
out
inc
mov
xor
aas
push
xchg
jle
mov
fisttps
or
rol
insl
inc
frstor
add
push
adc
and
dec
mov
inc
mov
mov
sbb
jle
pop
inc
les
pusha
inc
add
jae
xorb
arpl
iret
push
and
and
int3
mov
mov
rolb
stos
adc
data16
sbb
scas
inc
inc
lods
ljmp
dec
cs
aad
xchg
push
ret
bound
dec
cs
mov
ljmp
and
test
jecxz
pop
nop
shll
lods
and
shlb
sbb
xorb
aaa
dec
sahf
cmpsl
mov
arpl
test
and
dec
int3
pop
cmp
jecxz
and
sub
mov
mov
and
inc
aam
pop
in
pop
enter
mov
add
ljmp
shlb
inc
pop
test
and
jo
js
xor
test
movsb
jge
xchg
cmp
sub
insl
lods
push
cmp
and
sbb
push
and
and
sbb
sub
cmp
jno
push
and
lcall
push
in
and
xchg
mov
inc
in
mulps
push
mov
jns
dec
or
and
nop
arpl
and
inc
xor
and
out
jecxz
icebp
popa
push
pop
and
leave
clc
std
xchg
add
sub
sahf
fnstsw
mov
testl
stos
pop
std
xorb
push
adc
cmp
pop
sub
into
ss
dec
jns
test
out
in
push
pop
xor
popa
cmp
dec
pop
sbb
mov
mov
pushl
mov
jg
xchg
mov
push
mov
adc
jae
xor
sbb
cmp
or
mov
adc
pushf
fnstenv
in
cmc
dec
aad
out
inc
xor
mov
cmp
or
xor
and
pushf
lret
pop
cli
pop
adcl
mov
rorl
xchg
mov
push
and
loop
pushf
dec
adc
mov
notl
and
sub
pop
jge
lcallw
pop
dec
xchg
call
push
cmp
cli
clc
subl
stc
popa
in
cmp
sbb
xchg
outsb
jo
pop
xchg
and
mov
pop
sub
out
or
addb
dec
mov
add
jno
jmp
and
mov
push
fldenv
ja
mov
leave
xchg
lea
jo
cli
and
pop
aam
out
xor
std
push
outsb
or
loopne
sub
cmc
and
aad
jmp
cmp
cmp
addl
push
stos
in
nop
push
and
pop
mov
sbb
insl
int3
xchg
cmp
push
rcl
or
jge
test
and
popa
repnz
add
inc
pop
xchg
jo
insl
cmp
add
shrb
xchg
mov
pop
xchg
or
sub
push
and
xor
add
fst
dec
cmp
nop
fisubrl
dec
and
add
pusha
daa
push
repz
ret
fwait
sub
loop
mov
test
push
addr16
imul
jp
lock
call
jge
sub
or
adc
cmp
test
sarl
mov
mov
cld
cmpsb
sub
mov
movsl
cmp
call
push
add
es
pop
and
cmc
mov
adc
jle
ds
xchg
testl
ljmp
repnz
popa
and
mulb
mov
mov
and
adc
cmpb
fs
orb
cmp
call
mov
adc
test
sub
push
pushf
and
or
cli
call
jp
jge
in
and
icebp
fwait
xor
cmpsb
sub
and
and
lret
fbld
movb
jl
cmp
imul
and
outsl
fs
js
hlt
pop
and
cmp
into
jecxz
xchg
cmp
ret
lods
pop
insl
jp
sti
xchg
mov
ljmp
or
mov
xor
jmp
mov
mov
mov
ror
mulb
add
sub
sbb
sbb
iret
and
cmp
fldt
pusha
xchg
les
xchg
and
and
or
lcall
dec
loope
xchg
and
sub
xchg
call
inc
pop
mov
lods
fcmovnbe
add
dec
cmpsb
mov
and
xchg
pop
imul
fistpll
push
cmp
dec
lahf
jns
out
and
xchg
fld1
mov
mov
inc
shlb
pop
sub
outsl
cmp
movsl
inc
inc
and
mov
test
dec
pushf
mov
imul
push
cld
and
or
fstl
into
mulb
sbb
xlat
push
mov
test
xchg
mul
addb
pop
inc
mov
mov
and
mov
loope
sar
xchg
mov
or
add
ret
or
push
cmpsb
les
sub
pop
and
aas
pop
xchg
and
xor
loope
mov
push
pop
push
and
es
xchg
cmp
sbb
fwait
leave
jmp
and
out
dec
sbb
and
bound
ljmp
push
mulb
mov
and
jp
lea
movsb
jnp
xchg
stos
fs
jge
sub
and
leave
jns
mov
mov
and
push
xchg
outsb
lret
sbb
and
cld
cmpb
out
cs
xor
insl
and
jbe
not
jne
fsts
bnd
pushf
xor
adc
test
ss
sub
pop
pop
add
fdivrl
inc
and
in
add
adcl
jo
xchg
adc
ljmp
and
js
mov
mov
or
sarl
xor
push
mov
inc
sbb
loopne
inc
or
movsb
inc
and
and
sbb
and
pushf
add
repz
and
mov
shrl
scas
repz
mov
push
stc
arpl
nop
and
mov
and
sbb
loop
xor
gs
xor
imul
add
cmp
inc
push
fisttpl
imul
dec
in
push
inc
pop
cmp
sub
movsb
mov
push
jbe
and
mov
aaa
sub
mov
repz
in
gs
mov
bound
cltd
adc
adc
das
xchg
les
inc
cmp
repz
mov
iret
xchg
inc
cmp
mov
pop
sub
push
pop
andl
icebp
scas
jb
ret
je
fnstenv
mov
mov
mov
ljmp
mov
cmp
mov
mov
mov
dec
test
mov
inc
enter
cmpsl
sub
xor
notl
jle
test
cmp
jo
jecxz
adc
aaa
stos
mov
std
xor
std
jns
test
inc
xor
xor
mov
leave
cmp
xchg
and
push
and
push
jg
adc
dec
inc
jp
push
fwait
repz
jmp
lcall
add
sub
shlb
pop
jno
bound
stc
inc
or
cmp
call
mov
scas
inc
aam
cmpl
icebp
push
es
xor
pop
xlat
mov
sub
enter
ret
bound
fdivrl
fnstsw
cmpsl
add
mov
sbb
mov
jecxz
inc
pop
insl
mov
mov
sub
ret
fnstcw
subb
loope
pop
or
sub
mov
xchg
mov
adc
js
mov
mov
mulb
pop
and
dec
loopne
push
jg
cmp
jmp
mov
popa
jno
push
mov
into
ja
xchg
bound
enter
jle
cmp
ficompl
loop
xor
fcoml
jmp
dec
dec
insb
jmp
mov
dec
push
and
fists
pop
enter
imul
popa
sub
leave
lahf
adcl
les
test
stc
rolb
mov
cmp
rcrl
insl
cmp
enter
pop
leave
imul
adc
test
test
add
in
push
pop
mov
enter
popa
pop
loope
dec
fnstsw
sahf
roll
lods
and
in
lahf
imul
imul
pop
push
push
pusha
push
dec
adc
sub
movsb
movsl
adc
mov
sub
rclb
mov
pop
inc
stos
xchg
repnz
add
and
or
and
mov
js
loop
aam
lds
stc
cmp
push
dec
out
xchg
stos
push
adc
in
jmp
mov
push
call
and
lret
cwtl
inc
mov
cld
cmp
cmp
insl
decb
xlat
add
xchg
mov
stc
jmp
push
movsl
out
cmp
sbb
cmp
jl
and
stos
jnp
pop
es
ret
shl
cmc
test
iret
mov
idivb
cwtl
inc
jnp
sub
cmp
cs
cmp
dec
cmp
add
mov
stc
and
popa
negl
and
mov
out
lret
loop
movsl
and
pop
jbe
mov
mov
xor
rolb
pop
sub
aad
push
das
add
fidivrl
pop
adc
lret
popf
mov
rcll
out
and
and
cmp
mov
and
aaa
adc
ss
jl
mov
xor
mov
xchg
dec
or
or
roll
and
adc
test
and
xor
notb
movsb
mov
fsubrl
xchg
add
jnp
and
out
adc
outsl
test
xchg
aam
and
dec
jmp
cmp
jae
cltd
out
stos
or
pop
inc
aad
xor
sbb
and
lods
lcall
add
push
cltd
add
or
add
add
mov
mov
ret
jl
loope
cmpsb
fstps
xchg
and
shrl
mov
dec
test
in
push
sar
push
push
ds
jmp
movsl
jnp
lret
or
data16
pop
cld
adc
pop
pop
mov
ret
leave
out
and
call
inc
mov
outsl
pop
cltd
pop
push
dec
enter
pop
cmp
sub
movsl
add
xchg
xorb
mov
sbbl
cmpsb
bound
cmp
movsb
out
inc
mov
fsubrs
pop
cli
push
popa
imul
jns
push
push
mov
pop
inc
addr16
and
mov
mov
sub
leave
mov
stos
in
je
mov
dec
inc
mov
push
jb
and
lret
mov
inc
pop
jg
outsb
imul
repz
and
mov
xlat
inc
pop
cmp
xor
sbb
jmp
movsl
xor
adc
imul
jmp
fists
es
cmp
rcll
cmpsl
cmp
lcall
cmpsb
cli
xchg
popa
mov
dec
xor
fs
inc
shlb
jmp
jge
jecxz
movsl
mov
xor
notl
pop
mov
insl
mov
dec
scas
imul
xchg
icebp
loop
dec
and
std
cmc
pusha
mov
add
sti
push
les
push
push
jns
mov
pop
adc
push
cmp
out
rcll
jle
or
popf
xor
xor
jmp
jmp
mov
add
rol
lods
pop
pop
xor
bnd
popa
mov
xor
popa
aam
imul
mov
bound
ljmp
dec
jg
mov
xchg
jnp
and
arpl
jmp
jb
and
and
mov
mov
jo
xchg
or
sti
or
jecxz
dec
cmp
les
stos
test
pop
dec
out
push
popf
mov
mov
mov
ret
jbe
sbb
fisubs
inc
aas
pop
sbb
jmp
pop
mov
imul
jbe
enter
dec
sti
cltd
roll
or
mov
iret
inc
insl
inc
insl
xchg
push
push
sub
fwait
jl
cmp
cmp
xor
mov
pop
xchg
pop
xor
sbb
out
jle
or
xor
lret
mov
arpl
jmp
jecxz
pop
dec
flds
sbb
inc
icebp
arpl
push
mov
pop
push
in
sub
push
mov
mov
stc
subb
mov
dec
dec
and
pop
call
mov
loop
cmc
rclb
adc
in
sbb
or
and
sub
bound
repnz
and
and
or
and
iret
call
or
xchg
icebp
je
fsub
decl
or
and
or
xor
repnz
popf
mov
xor
sub
and
div
lock
out
testl
push
cs
lret
cmp
ret
mov
cmpsl
movsb
xor
mov
pop
cltd
xorb
andb
mov
test
lahf
arpl
test
jge
jbe
xchg
add
enter
and
or
in
lret
mov
inc
addr16
mov
jecxz
and
daa
xchg
dec
test
add
rorl
ljmp
popf
cmp
arpl
inc
push
fildl
mov
push
aad
dec
popf
lds
push
les
xor
adc
and
test
jo
and
mov
pop
and
or
cmpsl
shl
cmp
mov
cltd
sbb
loope
int3
arpl
mov
sbb
and
and
and
cmp
sbb
add
aad
xor
lcall
mov
je
in
shl
push
bound
adc
lahf
fiaddl
sbb
push
mov
popf
adc
fidivrl
adcl
cmp
pop
and
out
and
xchg
dec
push
add
inc
push
mov
fcoml
les
cmpsl
sub
out
ret
jp
ret
and
push
leave
daa
pop
pop
xorl
in
sbb
lahf
sbb
test
and
outsb
dec
xchg
sub
and
pop
fxch
addb
insb
into
cmp
adc
jecxz
inc
fadds
pusha
fldt
adc
cmp
popa
data16
add
mov
xchg
test
add
xchg
cmp
int3
ret
cwtl
adcl
xchg
insl
push
push
and
or
xchg
adc
xor
mov
xchg
push
xchg
pop
add
mov
and
fisubl
inc
sbb
jo
movsl
sub
dec
lods
cld
lods
ljmp
fldl
push
sbb
and
fbld
jecxz
mov
add
xlat
mov
inc
repz
sub
mov
clc
js
out
arpl
or
pop
frstor
dec
pop
gs
shrb
push
repz
xchg
dec
push
imul
and
call
out
inc
bound
add
sub
pop
out
add
xor
ret
mulb
xchg
add
ret
sbb
and
es
push
jl
insl
iret
gs
dec
jmp
jmp
add
or
push
mov
clc
cmp
push
cmc
pop
xor
push
lret
inc
dec
sarl
push
ja
les
rorb
xchg
ljmp
mov
push
loop
int3
in
movups
out
adc
and
xor
mov
cld
outsb
jmp
mov
stos
ret
arpl
and
push
pop
push
cmpsb
push
xchg
jl
lahf
mov
cltd
or
test
lods
in
pop
mov
mov
int
sbb
fwait
push
and
aaa
jne
jo
xchg
inc
cmp
lods
push
pop
add
adc
push
pop
cltd
add
int
xlat
dec
mov
aam
jo
pop
popf
jns
and
das
push
push
into
pop
push
and
gs
scas
pop
cmc
add
jge
cmp
push
out
mov
test
es
cmp
and
jle
push
and
push
stos
lahf
push
fstpt
mov
pop
call
ss
xchg
lds
jnp
subb
mulb
fwait
std
dec
push
fstl
and
mov
add
insb
nop
lods
fucomp
xor
sub
ucomiss
adc
inc
push
shll
loopne
adc
xor
cli
in
push
in
stc
scas
sar
int
and
jbe
popf
clc
test
imul
xor
adc
lahf
and
lds
sub
das
insl
outsl
and
fcoml
adc
and
xchg
mov
cmp
cmp
jmp
icebp
xchg
in
scas
pop
or
dec
mov
and
rcrb
lret
fisubl
subl
mov
mov
les
inc
push
pop
fimull
je
xchg
lods
sbb
add
inc
lea
push
test
and
loope
imul
xchg
std
scas
push
pop
cltd
push
test
jae
mov
sub
sbb
movsl
sub
sbb
inc
mov
iret
lcall
cmpsb
lret
fcomip
and
pop
dec
xor
out
inc
cld
cmp
xchg
in
std
add
and
cmp
les
add
cltd
gs
mov
or
push
cmp
aam
mov
lods
mov
pop
neg
jge
and
and
xchg
and
je
sub
stc
push
fsubs
dec
test
xchg
mov
jp
dec
les
cld
mov
and
xor
mov
test
cmpsb
int
decb
jbe
insl
or
in
push
sbb
insb
or
filds
std
mov
adc
sub
inc
insl
lock
pop
and
mov
insb
js
xchg
sbb
imul
imul
xor
or
sbb
in
ficomps
and
gs
arpl
xor
sbb
and
out
push
jg
mov
and
incb
xlat
scas
pop
xchg
pop
hlt
inc
cmp
lcall
sub
adc
inc
mov
and
mov
test
jbe
pop
mov
mov
fs
jne
stos
and
sub
jecxz,pn
mov
inc
aas
fcompl
addr16
dec
in
xor
inc
add
pop
adc
add
andb
lahf
jp
adc
and
rolb
add
mov
and
and
cmp
cmp
mov
aad
fidivrs
mov
xlat
clc
add
cltd
in
push
shlb
dec
adc
pop
and
push
mov
and
out
jp
out
shll
mov
stos
adc
cwtl
dec
dec
fsubrl
cmp
and
sub
pushf
andb
daa
add
inc
lock
in
movsb
inc
add
adc
pop
push
fwait
repnz
icebp
or
std
in
enter
push
mov
jg
and
inc
cmp
jbe
daa
inc
xchg
xchg
shrb
push
adc
add
pop
cmp
js
push
jecxz
and
sbb
sub
sub
jmp
daa
or
test
dec
xchg
outsb
and
push
imul
pop
ret
xchg
out
jge
int
hlt
bound
adc
sbb
in
addb
pop
icebp
dec
xorb
add
mov
xchg
sti
add
add
ficompl
mov
push
add
rcll
inc
loopne
ds
imul
aam
frstor
ja
enter
in
insb
in
mov
inc
jge
mov
pop
test
dec
inc
aam
dec
pop
cmp
or
imul
ja
add
in
repz
dec
dec
xor
mov
popa
in
popl
aam
ja
jecxz
das
mov
jo
test
mov
pop
pop
push
adc
cmp
popf
jno
movsl
push
or
push
cwtl
rorl
test
outsb
test
inc
xor
dec
je
mov
xchg
inc
dec
cmpb
and
cld
fs
jb
xor
xchg
cmc
xlat
repnz
mov
mov
or
sbb
fildl
xor
mov
fcomps
les
scas
std
lods
in
ret
pop
movsb
in
popl
inc
mov
mov
imul
mov
mov
inc
mov
std
inc
mov
cmpsb
and
popf
push
xlat
sti
loop
bound
inc
cs
sub
leave
jns
lea
jno
int
cwtl
sbb
mov
fcompl
push
sub
adc
sub
pop
arpl
imul
int3
inc
sub
es
lret
icebp
data16
arpl
push
dec
cmp
and
imulb
inc
enter
and
and
inc
cwtl
loop
adc
sub
push
es
mov
shll
fsubp
add
ja
out
xchg
and
mov
lds
mov
dec
addb
inc
fnsave
pop
lds
mov
inc
ret
and
lds
cld
cs
rorb
loopne
dec
out
call
sub
pop
dec
rcll
retw
push
lea
ss
fisubl
mov
cmpsb
mov
sub
popa
add
sub
sub
fldcw
sub
call
sahf
xor
loopne
push
jne
mov
mov
pop
cs
ret
dec
mov
enter
dec
sub
mov
or
xor
pop
rcll
xchg
push
cli
inc
icebp
xlat
orl
push
jno
and
pop
jns
dec
test
lcall
mov
or
inc
lcall
xor
push
dec
add
cld
std
dec
cmpsb
jmp
xchg
xchg
xchg
call
push
pop
movl
test
andl
rcrl
test
int
les
xchg
pop
lret
daa
imul
or
ret
inc
and
scas
cs
adc
hlt
pop
fmulp
push
cmp
xchg
and
loope
push
sbb
in
mov
adc
ret
sbb
sub
jecxz
lock
enter
jnp
icebp
push
sub
movl
dec
clc
mov
jnp
shll
pop
ds
pop
and
jmp
and
das
pop
mov
scas
arpl
inc
xor
pusha
add
xchg
aas
xchg
lahf
add
mov
sbb
mov
jae
inc
popf
lock
fisubrs
mov
xor
push
aam
mov
sbb
push
sub
sti
nop
cmove
xor
loop
mov
mov
and
dec
sbb
lcall
in
cmp
sub
jle
mov
add
movsl
cmp
xor
gs
mov
test
stos
outsl
je
ret
popa
jl
ret
mov
insl
data16
ret
xchg
dec
jns
adc
into
cmp
mov
enter
and
arpl
inc
or
jmp
mov
dec
std
data16
fiaddl
insb
dec
sub
fwait
and
jno
and
sahf
mov
cwtl
loope
movsl
pop
imul
mov
cli
lret
test
dec
sarb
pop
mov
loop
movsb
pop
mov
mov
inc
fldenv
pop
cmpsl
rcll
cld
jmp
dec
stos
inc
and
das
aas
xor
cmp
jge
add
int3
inc
adcb
fbstp
in
pop
icebp
inc
out
daa
loope
cmp
jg
add
sbb
in
insl
aas
shl
nop
inc
js
dec
mov
notb
cli
insb
das
xchg
jno
xor
imul
push
xor
mov
bound
shrb
jnp
ret
mov
sub
sub
pop
jle
or
movsb
pop
cmpsb
sahf
fstpl
mov
push
popa
inc
xchg
xchg
dec
add
xor
mov
push
aad
scas
push
in
dec
adc
push
loope
push
dec
sti
dec
int
in
iret
jge
sarb
jmp
aaa
dec
orl
mov
cmpsl
aas
and
fabs
outsl
jmp
or
adc
xchg
mov
push
pop
lea
jl
and
data16
js
cmpsl
cmpsl
inc
push
dec
push
mov
adc
cmp
movsl
jnp
rol
inc
sbb
sub
cld
enter
or
mov
or
push
jl
cs
push
inc
pop
aas
fs
mov
insb
rcll
test
ret
lcall
jmp
stos
jmp
jb
push
mov
insb
aaa
lahf
inc
arpl
sbb
fwait
xor
mov
mov
jp
repz
inc
mov
cmc
mov
jg
pop
stos
push
xor
pop
cmp
mov
or
movsb
popa
push
mov
insl
inc
inc
jb
aas
movsl
or
mov
mov
or
pushf
xor
dec
imul
negl
xor
jge
mov
stos
inc
push
jns
mov
stos
lret
push
pusha
adc
push
mov
in
jns
cmp
adc
cmp
mov
test
mov
fildl
sub
pop
or
xchg
mov
jae
insl
ror
pop
mov
push
inc
cltd
add
idivl
add
and
leave
cmc
mov
jb
jmp
mov
adc
imul
and
ss
popf
loope
sub
mov
test
dec
xchg
call
sbbb
push
sbb
rorb
mov
aad
nop
es
movsb
sbb
xchg
mov
dec
enter
push
add
ret
fs
pop
xchg
and
inc
pop
pop
ja
dec
outsl
bound
lahf
fcmove
and
ret
fldlg2
fwait
dec
xor
fadds
push
mov
ret
adc
or
inc
mov
int3
xchg
xchg
cmp
inc
dec
add
fwait
adc
test
mov
inc
roll
es
movsl
fsubrs
sub
int3
mov
or
sbb
dec
jmp
mov
rol
imul
rcl
xor
xchg
pop
xor
addl
es
lock
lahf
cld
lock
inc
mov
mov
arpl
pop
ss
out
sub
ret
scas
inc
pop
cltd
add
xchg
ds
lods
xor
cmp
mov
jle
pop
jns
fisubl
inc
mull
add
aas
imul
and
je
ja
xor
scas
xchg
inc
lcall
cmp
mov
mov
mov
out
pop
mov
imul
mov
mov
mov
and
imul
mov
icebp
lock
inc
movsb
sub
in
fstps
mov
aam
push
pop
dec
sbb
pop
movsl
inc
fwait
cmpsb
xor
sbb
push
jns
mov
dec
outsl
call
loopne
mov
in
pop
push
add
loope
in
or
mov
cltd
aaa
test
fmuls
sti
shlb
mov
popa
outsl
mov
mov
sub
push
mov
fldl
in
xor
mov
push
aas
stos
xor
enter
arpl
dec
les
scas
dec
pop
add
fiadds
loope
ds
jae
and
mov
mov
outsl
inc
xlat
imul
xor
clc
movsl
scas
and
cmp
xchg
enter
mov
je
ss
stos
lock
insl
pop
rclb
sub
add
test
outsl
test
pop
roll
jb
enter
xor
push
shrb
mov
push
sub
dec
out
push
sbb
incl
fsub
std
daa
sbbb
jp
add
xor
shrl
insl
hlt
dec
adc
mov
xor
les
jge
xor
push
jge
aad
loope
push
jecxz
inc
es
sub
mov
sbb
pop
jmp
test
lcall
aas
jp
ja
les
inc
repnz
cmpb
xchg
dec
arpl
xor
js
out
es
or
mov
loope
lcall
in
cmc
add
sahf
xchg
jecxz
aad
je
push
scas
lea
jb
adc
lock
scas
mov
ljmp
mov
fdivl
js
addl
mov
mov
mov
cld
imul
pop
int3
mov
pop
xchg
xor
insl
inc
jb
pop
dec
in
add
mov
mov
enter
cltd
jle
add
cmp
jo
in
dec
cmpsl
sub
das
push
jnp
pop
shrl
inc
scas
stos
sub
cmp
mov
push
scas
inc
fimull
fwait
sub
pop
jb
xchg
lds
cmpsl
iret
and
pop
and
sti
mov
daa
add
mov
pop
mov
sub
and
mov
inc
inc
aam
mov
add
gs
lcall
pop
pop
js
sbb
pop
sub
cltd
cmp
add
dec
psubd
test
outsl
mov
arpl
and
pop
jp
out
inc
mov
and
in
jne
rclb
test
sub
push
nop
movsb
cmp
subl
lahf
cwtl
fmul
mulb
cltd
and
dec
xor
stos
sbb
xlat
mov
adc
add
push
in
and
add
adc
lret
popa
pop
movsl
push
pop
and
shr
jle
int3
test
jbe
and
cmp
lock
js
insl
in
add
jb
rolb
in
and
add
loope
data16
adc
std
imul
or
add
test
fs
lods
and
adc
adc
push
mov
scas
xor
inc
sub
js
test
add
or
cld
dec
cwtl
repz
and
pop
and
xchg
imulb
and
mov
test
and
or
dec
jo
xchg
lret
out
idiv
pop
test
push
dec
mov
adc
sub
lock
cwtl
mov
scas
ret
and
out
push
mov
and
xchg
mov
sub
adc
adcl
jmp
sahf
mov
xchg
js
test
and
loop
jecxz
andl
jns
sarb
cltd
mov
add
dec
sub
fbstp
jecxz
xchg
mov
and
mov
cmp
and
mov
jbe
repz
add
addw
notl
je
sti
and
outsb
loopne
dec
rolb
mov
cs
and
xchg
jns
and
push
in
and
pop
movsl
sbb
insb
fsubrs
lret
sub
and
js
movsb
notl
bound
xor
and
pop
lock
jg
mov
xor
aad
fisttpl
rorb
push
test
and
out
cmp
and
jmp
and
mov
cli
stos
and
aad
imul
jle
popa
add
sarl
xor
jmp
sbb
mov
orl
mov
and
jge
pop
les
call
mov
add
loope
sarl
and
fdivrs
hlt
inc
out
and
dec
clc
and
dec
mov
pop
and
xchg
mov
sbbb
das
lret
jns
mov
cmp
ss
and
dec
mov
sub
stos
rolb
mov
pop
lods
fwait
je
and
hlt
pop
add
leave
ds
cmp
adc
add
test
and
cmp
sbb
and
mov
mov
loope
aad
out
movsb
jl
lea
jmp
push
mov
loope
test
jb
xchg
cwtl
scas
clc
and
mov
nop
mov
dec
and
sbb
lret
pop
dec
adc
in
xchg
je
adc
imul
mov
and
adc
and
imul
sbb
int3
mov
push
ja
jae
jg
mov
es
and
les
and
roll
xor
mov
inc
xor
aaa
fsubrl
xorl
sbb
outsl
repnz
test
adc
andl
addl
ja
rclb
dec
xlat
dec
dec
enter
pop
aaa
cs
gs
adc
in
xchg
lahf
mov
hlt
pop
hlt
xchg
and
arpl
dec
push
ds
fstpl
jle
and
xchg
mov
rol
cmc
mov
ror
pop
divb
pop
pop
or
insb
and
out
jp
mov
aad
nop
sbb
loop
and
enter
fwait
in
mov
xor
jl
ss
lods
xor
mov
jp
cmpsb
enter
and
xor
cmp
and
mov
ret
aam
iret
nop
sti
aas
dec
pop
inc
imul
std
inc
mov
and
sub
enter
and
push
aas
ss
in
test
and
les
aaa
push
shl
cmp
or
cmp
mov
stos
sub
mov
sbb
sub
js
jmp
cltd
fnstcw
fiaddl
into
arpl
push
mov
cmp
std
andb
inc
xchg
cmpb
popa
insl
xor
pushf
inc
jns
xor
mov
mov
push
mov
pop
repnz
xor
pop
lea
push
inc
xor
jae
or
cmc
int3
stos
in
popa
jmp
inc
add
adc
imul
les
jbe
out
mov
icebp
sub
ljmp
and
adc
rcll
push
and
shlb
stc
xor
cld
jl
push
xor
push
lds
fnstsw
inc
les
mov
inc
sahf
cmp
in
dec
mov
and
xchg
ja
dec
xor
lea
fsubrl
inc
cmp
pop
push
aam
incl
sub
push
imul
mov
xchg
addr16
inc
std
push
or
sahf
test
rcr
test
insl
add
jbe
je
pmuludq
movb
inc
insl
out
sub
ss
cltd
daa
xchg
cmpl
or
movsb
jge
clc
and
mov
pop
cmp
les
lods
cli
dec
in
lea
lahf
lods
repz
cli
scas
inc
dec
in
pop
popa
jg
inc
adc
enter
js
fsubrs
int3
loopne
cmp
out
add
push
cld
cmp
ljmp
pushl
roll
xor
incl
push
jecxz
les
cltd
jnp
jp
mov
cmpsl
movsl
mov
test
xchg
adc
imul
subl
push
test
xchg
data16
ljmp
fdivrs
push
add
lock
out
loop
gs
jbe
dec
test
push
fldenv
or
xchg
xlat
shrl
inc
push
lret
add
leave
push
sbb
adc
aaa
cmpsl
lds
jle
in
adc
mov
mov
mov
das
cmp
sbb
cmp
mov
fisttps
and
flds
les
sub
test
fstps
adc
dec
sub
dec
int3
fistpl
aam
inc
jb
jmp
aaa
mov
fwait
push
jp
cli
push
out
sar
lods
xchg
ret
fcmove
leave
cs
jae
xchg
adc
add
add
fidivl
xor
cmc
mov
xchg
lcall
mov
sti
jo
inc
outsb
push
or
aam
adc
mov
iret
push
rol
roll
mov
push
test
mov
inc
mov
mov
dec
lret
adc
jge
pop
stos
out
scas
and
mov
arpl
and
push
jnp
push
fnsave
stos
outsl
cmpsb
xchg
xchg
stc
cmp
sbb
inc
and
lahf
mov
mov
ja
cmp
or
rcr
aas
test
jg
add
bound
jae
je
cmp
cltd
mov
inc
imul
sbb
bound
imul
and
xlat
frstor
repnz
pop
repnz
addr16
mov
mov
inc
sub
repnz
lret
sbb
faddl
jecxz
adc
movsl
push
pop
sahf
xchg
fsts
or
or
add
mov
loop
jg
xor
in
je
aad
dec
ror
xlat
cmp
outsl
xchg
ljmp
adc
inc
pop
cltd
and
cld
sub
mov
and
test
data16
imul
shrl
ret
ss
and
and
ds
mov
out
jp
sbb
and
cmpl
xchg
and
rorb
xor
pop
push
pushf
ret
and
push
inc
add
incl
lea
sbb
into
adc
and
lods
cmpsb
and
cmp
lcall
mov
je
mov
cld
pop
inc
cmc
gs
push
pop
mov
inc
push
imul
hlt
out
mov
jmp
jge
sub
and
push
aam
xor
les
insl
iret
jae
addl
shlb
adc
and
stos
in
inc
mov
sarb
cmp
xchg
fs
mov
fistps
fs
mov
and
mov
popa
mov
shl
pop
stos
xor
ds
aas
and
imul
add
dec
sbb
insl
add
and
xchg
or
jl
xchg
and
pop
inc
inc
xchg
fwait
popf
rcrb
pop
loope
and
loop
repnz
cmp
mov
sbb
mov
and
insb
xchg
pushf
and
ljmp
dec
mov
and
es
push
xor
ja
andl
adc
or
jo
add
jmp
and
mov
or
es
popf
and
jecxz
test
int
mov
dec
and
push
or
inc
cmpsb
dec
jecxz
repnz
leave
and
or
push
pusha
sahf
and
arpl
clc
xor
mov
xchg
cmpsl
mov
cltd
and
les
repz
push
jb
js
xchg
arpl
enter
mov
sub
int
out
xor
jp
add
lahf
cmp
outsb
sbbb
in
pop
mov
lret
dec
sbb
enter
dec
bound
mov
lds
jbe
cmp
popf
push
int
dec
dec
mov
inc
mov
imul
jae
enter
push
les
jecxz
sub
cmp
aam
add
xor
enter
les
ret
idivl
scas
push
ret
mov
dec
cwtd
and
sar
out
in
psubb
pop
sahf
xor
aad
adc
pop
int
xor
and
inc
in
sbb
sub
pop
cmp
adc
and
test
jno
cmp
dec
les
mov
pop
fstl
xor
imul
out
incl
or
mov
lahf
popa
in
icebp
jns
iret
add
sbbb
xorl
les
sbb
xchg
fiaddl
lahf
cmp
pushf
sub
dec
pop
dec
inc
cmp
enter
lcall
stos
dec
ficoml
sbb
and
or
test
orl
mov
pop
and
enter
cs
nop
pop
xor
and
ja
mov
jg
mov
add
xchg
out
sbb
mov
cmp
cmp
daa
sub
enter
ret
ja
xchg
mov
jb
dec
stos
movsl
push
xor
mov
jge
pop
dec
insb
inc
fildll
adc
dec
mov
mov
je
aas
imul
cmp
dec
mov
leave
mov
xlat
and
call
scas
ret
ja
lret
iret
loop
adc
sub
xchg
sub
mov
adc
stos
xchg
push
in
pop
fists
sub
imulb
jne
inc
jl
xor
sub
or
dec
jmp
aad
cmpsb
fdivrs
pop
jns
leave
aad
les
xchg
mov
sub
stos
shrb
pop
roll
dec
sbb
ficoml
loope
lock
imul
mov
mov
and
fprem1
jge
pop
and
fcmovb
loope
xor
or
or
adc
jmp
sub
xchg
dec
mov
aad
je
push
gs
inc
imul
out
sarb
adc
sub
fidivrs
loope
test
mov
xchg
in
cmp
and
sbbl
data16
sub
ds
mov
mov
sarl
mov
insb
in
lds
les
sub
loopne
arpl
test
idivb
aaa
fs
sub
aad
or
lds
cli
sub
cmp
xor
out
pop
push
orl
cmp
es
sub
ror
or
ja
in
xor
rcrl
mov
push
outsl
ds
stos
sub
inc
dec
or
in
frstor
mov
push
add
xor
push
xchg
cmp
push
dec
push
and
pushf
and
je
inc
dec
out
jae
xor
andb
inc
scas
shrl
ret
push
add
xlat
mov
data16
testl
pop
push
inc
mov
stc
dec
shrl
arpl
inc
jns
test
jecxz
ret
inc
pushf
test
mov
jg
push
sub
mov
rcrl
out
xor
xchg
and
xchg
mov
mov
and
in
daa
fwait
testb
cmp
idivb
std
sub
lock
into
call
inc
aad
lahf
lahf
dec
stos
sarb
or
adc
xchg
das
mov
push
cmp
and
cmpb
inc
and
cs
ss
lret
dec
movsl
das
or
pop
xchg
fs
cld
add
lea
lods
mov
enter
xchg
mov
mov
jle
inc
mov
jnp
hlt
daa
aad
push
movsb
dec
les
loopne
out
int3
call
fisubl
lahf
lahf
int
sub
fucomp
jae
dec
push
inc
sub
pop
aas
sahf
pop
call
es
push
mov
bound
js
xchg
popa
nop
jbe
and
ret
sub
ret
mov
xchg
pop
xchg
roll
cmpsb
dec
add
adc
shll
mov
outsl
sub
fcmovne
or
xchg
aas
into
outsb
fisttpll
cwtl
pop
xor
sbb
rcrl
cmp
xchg
and
xchg
cs
fabs
es
cwtl
sub
pop
in
dec
jge
pop
in
dec
insl
in
mov
mov
fsubl
mov
jecxz
stos
test
das
xchg
test
insb
call
jno
jo
xor
fsubs
aad
sub
mov
inc
add
xchg
xchg
xor
and
and
lds
mov
push
insl
les
lcall
sub
popa
cs
or
xchg
ss
lock
les
decb
cmp
insl
lods
and
and
sub
js
pop
fldt
and
test
sbb
imul
mov
das
or
ja
cmp
inc
xchg
ret
rol
adc
std
lods
imul
mov
xchg
pop
adc
xor
leave
inc
jp
inc
aad
jecxz
pminsw
jb
shlb
mov
and
sub
mov
xor
inc
roll
sub
push
stos
pop
cmp
pop
fs
push
jns
subps
jbe
mov
cmp
in
inc
mov
and
fsts
scas
jae
mov
lods
xchg
popa
fs
ja
les
les
imul
push
out
pop
divl
mov
out
and
movsl
ja
movsl
xor
sub
mov
fwait
ret
fwait
pop
adc
inc
jge
inc
cld
fcmove
mov
add
dec
xchg
or
mov
movsb
cmpsb
mov
lds
push
sbbb
les
out
ss
jmp
add
mov
or
mov
add
push
loop
xor
mov
dec
imul
push
push
stc
cmp
mov
cmp
inc
mov
in
dec
jb
addr16
inc
mov
fwait
dec
inc
adc
icebp
xchg
xor
das
sbb
faddl
outsl
fwait
and
out
test
paddb
xor
inc
sub
push
insl
xlat
popf
shr
or
mov
imul
mov
mov
mov
mov
loop
and
sbb
test
iret
fstpl
adc
dec
rcll
adc
xor
imul
push
fwait
aad
sub
cwtl
push
movsb
dec
addb
mov
sub
fimull
aad
imul
xor
fs
jp
lea
shl
leave
les
mov
jge
and
sar
ja
mov
jmp
fnstsw
enter
addr16
add
xor
stos
cmp
mov
imul
and
mov
lods
dec
push
mov
je
adc
xchg
jle
xor
pop
or
sub
stos
mov
mov
jne
andl
push
rorl
sub
out
cmp
mov
rorb
or
add
aad
insl
dec
jo
nop
xor
jae
pop
mov
push
enter
filds
lcall
xchg
jns
je
enter
xchg
pop
push
xor
aad
sbb
push
enter
inc
mov
and
int3
or
mov
mov
xor
sub
les
push
aas
mov
out
mov
fidivrl
and
les
add
stos
inc
push
inc
sbb
rorb
popa
rol
push
les
xor
dec
jns
xchg
es
mov
adc
and
lcall
das
mov
in
loope
inc
scas
icebp
push
jnp
jle
sbb
mov
js
push
les
mov
pop
lahf
mov
rol
cmp
outsl
push
mov
mov
es
adc
jne
cmp
insb
mov
movsl
in
xchg
leave
push
xchg
push
fwait
inc
mov
sub
dec
popf
sbbl
outsl
enter
or
cmp
push
enter
arpl
pop
ret
aas
mov
adc
ljmp
dec
fldpi
mov
push
sub
jge
mov
pop
aaa
xor
jle
xchg
mov
inc
test
leave
test
enter
fucom
cmpsb
pop
xor
les
imul
cld
fs
sub
out
movsb
inc
out
jecxz
jp
imul
add
xchg
jbe
mov
outsl
loope
dec
loope
add
dec
int3
fmuls
pop
fs
pop
cmpl
pop
outsl
jp
and
xor
sub
and
mov
xor
lds
mov
mov
xchg
sbb
jle
jne
fdivr
fidivs
jge
sbb
clc
fadd
ss
jecxz
int
loop
add
push
xchg
push
mov
cmp
sub
dec
fiadds
mov
push
ret
mov
pusha
sbb
mov
les
xor
ret
inc
mov
jne
ljmp
aaa
dec
lcall
into
jno
xor
pcmpgtb
aad
outsl
inc
loope
cmp
cmp
pop
jb
add
popa
pop
add
cmpsb
shlb
mov
int3
sbb
call
push
pushf
ficompl
in
int3
jle
pop
fisubrl
icebp
scas
dec
in
jge
jnp
jecxz
hlt
test
fdivl
dec
insl
jmp
scas
testb
repnz
ficompl
movsb
addr16
sbb
dec
adc
leave
adcl
add
xlat
loopne
mov
iret
aad
cmp
adc
outsl
fdivrl
mov
into
test
ljmp
sub
fistps
pop
push
fbld
pop
or
mov
divps
and
jge
jae
sbb
fldcw
data16
inc
xor
add
js
adc
jo
movb
inc
sub
fwait
ljmp
scas
gs
movsb
adcb
pop
adc
lock
ret
loope
mov
push
lcall
clc
arpl
ret
loope
inc
push
adc
test
cwtl
push
push
aam
orb
inc
aad
mov
push
sub
dec
sbb
ret
mov
popf
sarl
jl
cs
jo
jg
and
xor
insl
cli
loopne
cmpsl
inc
cli
adc
or
stos
lods
leave
push
dec
jge
leave
cmpsl
andb
jecxz
decl
sub
lea
arpl
ljmp
mov
out
movsb
aas
fcoml
mov
dec
lds
xchg
repz
inc
mov
push
ret
ss
mov
pop
xor
jge
repz
es
push
sub
lret
xchg
sub
frndint
das
in
xor
mov
lret
xchg
add
pop
jl
in
pop
sarl
push
test
and
jb
sbb
mov
add
pop
sub
xor
or
inc
dec
xchg
insb
in
xchg
xor
pop
lret
ret
fnstcw
stos
dec
jle
fldcw
and
push
ds
mov
adc
adc
clc
pushf
inc
mov
cmpsl
aas
inc
sbb
shl
rorb
xor
lahf
cs
sub
dec
mov
xor
data16
mov
cpuid
and
inc
ret
cmp
dec
inc
push
in
xor
mov
popf
sahf
lds
mov
cmp
ror
mov
mov
mov
jg
movsb
cmp
xchg
popa
jne
xor
jl
notl
enter
inc
and
jg
xchg
push
adc
add
fsts
fldt
fcom
sbb
push
mov
and
fucomip
push
frstor
cmp
inc
mov
jge
shl
jne
pop
sbb
push
push
stos
jg
lcall
ret
mov
and
shl
sub
pushf
insl
sub
pop
push
sarl
add
imul
cmp
das
sub
mov
cmp
dec
inc
mov
js
xchg
sub
push
les
sbb
sbb
inc
mov
jp
mov
loope
aad
dec
lds
inc
lret
psubb
xor
push
insb
repz
inc
mov
pop
lock
xchg
mov
cltd
inc
pop
xor
xor
and
add
dec
and
mov
leave
xor
xor
xor
aad
ljmp
sub
test
xor
ja
dec
xor
fisubl
lock
xor
xchg
and
repnz
add
xor
xor
sarl
mov
sub
mov
pop
cmp
inc
inc
imul
aas
cmpsl
xor
js
mov
cld
pop
icebp
dec
xchg
mov
or
ss
add
ffreep
mov
pop
mov
sbb
in
xchg
sahf
aam
pop
push
jnp
and
mov
dec
dec
pop
jno
jns
js
ljmp
lods
push
dec
inc
and
loopne
icebp
push
pop
ret
xor
dec
dec
or
xchg
and
pop
iret
scas
jae
mov
cs
pop
stos
and
cmc
inc
jmp
add
call
add
push
sub
add
fsubs
clc
aam
push
pop
fs
popa
les
xchg
mov
rclb
lock
mov
cld
in
popf
mov
mov
jle
dec
sahf
and
push
test
sub
xor
push
arpl
pusha
inc
adc
inc
jae
and
xchg
xchg
inc
jnp
push
js
icebp
in
imul
inc
mov
cmpsb
out
aad
sbb
sub
mov
imul
xor
cmp
mov
test
fisubs
popf
sbb
stos
pop
and
sub
cmp
les
cmp
mov
inc
lea
xchg
es
mov
push
lea
push
loope
outsl
lahf
mov
mov
cmovge
popa
into
enter
jb
mov
mov
or
jl
pusha
ret
xchg
jg
fnstsw
les
pop
sub
add
jno
in
enter
shl
add
rorb
sub
add
notl
or
stos
pop
mov
daa
ret
roll
inc
mov
repnz
les
dec
push
lcall
enter
and
mov
jge
or
bound
jg
mov
jle
hlt
fnstenv
and
cmpsb
out
pop
out
aaa
outsb
jmp
pop
mov
loop
sbb
add
sbb
sub
fs
or
xor
adc
xchg
mov
cs
mov
push
xchg
movsl
mov
dec
enter
je
or
mov
pop
inc
sahf
jae
xor
dec
lret
xchg
jbe
mov
filds
xor
sub
lret
inc
pusha
mov
lahf
movsb
ret
clc
addb
jecxz
outsl
imul
xor
and
rclb
adc
dec
roll
int3
popf
pop
mov
mov
enter
mov
mov
repnz
outsl
shll
call
stc
les
cwtl
lahf
cmp
jge
cmp
mov
pop
cmpsl
je
jb
push
jbe
dec
out
int3
push
shrl
pop
and
cmp
enter
mov
cwtl
cmp
pop
cmpsl
sbb
jbe
daa
js
pop
daa
cmp
ret
push
sti
mulb
test
or
stc
jle
pop
loope
or
sub
inc
lret
icebp
movsl
imul
xor
loop
shrl
cmpsl
xor
mov
jne
loopne
sbb
dec
cli
cmp
sub
or
cltd
andb
pop
mov
dec
mov
mov
and
aas
pop
call
dec
in
cmpsb
inc
push
mov
mov
fnstcw
loope
stos
enter
mov
pop
lds
sub
jns
mov
fistpll
fwait
insl
sbb
daa
dec
hlt
js
imul
adc
sbb
pop
and
mov
imul
in
push
mov
test
push
pop
inc
in
inc
sbb
cmpsb
adc
dec
xlat
repnz
mov
mov
jb
push
adc
addr16
pop
jno
outsl
jae
and
out
cmpsl
push
push
xor
pop
dec
lods
push
cs
shrl
cmc
sbb
data16
loopne
daa
inc
mov
mul
or
aas
fwait
jg
arpl
and
aas
repnz
mov
rcll
test
sub
mov
int3
pop
dec
loopne
popa
popa
loop
aad
lds
cwtl
pusha
mov
sti
ret
dec
out
mov
sub
aam
jmp
insl
popf
les
imul
add
cli
pop
xchg
jl
mov
jbe
outsl
jmp
testb
into
mov
push
fdivrs
mov
or
imul
jmp
mov
pushf
int
mov
inc
jbe
imul
sbb
sbb
xor
xchg
cs
mov
mov
push
rcll
ficompl
mov
mov
icebp
jb
sahf
mov
pop
inc
inc
xlat
inc
shll
sub
add
cmp
repnz
xlat
or
int
add
sbb
shrl
and
cmp
enter
and
scas
mov
jb
xchg
sbb
enter
roll
repz
mov
sub
and
dec
and
les
add
sub
fsubrl
gs
aas
repz
aas
daa
xchg
lods
inc
xchg
jmp
outsb
mov
cmp
add
jne
sahf
cmpl
pop
xor
or
sub
fisubrs
imul
jl
pop
and
out
and
sub
je
les
shlb
and
cmp
stos
add
adc
pushf
ds
xchg
mov
xchg
jne
cs
in
mov
fs
xchg
enter
loop
les
push
xor
jno
lahf
sub
jae
inc
cwtl
mov
mov
out
mov
imul
jno
mov
lea
cmpsb
jmp
inc
fidivrl
mov
inc
ror
inc
jno
jno
mov
hlt
push
inc
lcall
dec
ret
test
stc
cmpsb
adc
add
and
sbb
test
mov
dec
loope
les
or
test
pop
mov
push
lret
mov
or
andb
pop
push
push
lcall
mov
or
mov
outsl
sbb
mov
je
xor
pop
and
jno
dec
loope
and
pop
pushw
mov
shll
jl
subb
out
ja
xor
mov
ja
cwtl
clc
aam
mov
out
das
les
pop
stc
fsubl
jecxz
xor
ret
sub
mov
aas
add
mov
mov
sub
insb
xchg
jmp
lds
enter
add
xlat
pop
pop
std
adc
cmp
mov
and
andl
push
test
dec
inc
clc
jb
mov
aad
xchg
push
clc
es
or
mov
ljmp
and
push
dec
enter
sub
cmpl
push
imul
mov
dec
sub
pop
xchg
dec
cmp
or
push
adc
push
js
lds
fdivrs
jo
outsb
mov
roll
cvttps2pi
pop
xor
dec
rcll
int3
xchg
mov
jns
jb
sub
test
pop
mov
adc
adc
fwait
loop
stos
xor
xorb
and
mov
ret
jg
testb
shl
rclb
stos
cli
fsubl
daa
adc
fmulp
mov
movsl
arpl
outsb
scas
mov
jle
mov
cmp
cmp
fwait
aas
mov
imul
jge
imull
int
adc
sbb
enter
test
cmp
mov
lds
out
js
sub
leave
int
ret
icebp
cmp
push
arpl
pop
xor
loopne
xor
out
mov
xor
cwtl
mov
dec
test
or
jbe
xor
xchg
mov
jecxz
mov
pop
sub
jnp
aas
add
enter
insl
divl
outsl
mov
lret
and
jge
inc
stc
icebp
fisttps
push
adc
push
imul
push
mov
mov
jle
movsb
fstpt
or
adc
mov
ss
sub
mov
pop
daa
ja
fcmovu
jmp
sub
repz
sub
jo
int3
adc
lds
lcall
jne
mov
les
add
or
stos
sbb
sbb
shll
push
out
dec
inc
or
pop
adcl
pop
daa
cld
clc
mov
xor
out
push
jl
orl
pusha
push
xchg
jmp
mov
inc
sbb
jno
xchg
cmp
inc
scas
inc
outsb
jbe
inc
pop
out
mov
adc
lods
fisubrl
loopne
or
mov
inc
enter
test
data16
outsb
inc
jg
and
aaa
push
int3
xchg
push
push
inc
cltd
mov
rclb
out
aad
sti
add
or
mov
call
and
bound
push
push
inc
add
and
xor
and
out
aaa
js
outsl
cltd
and
loope
xchg
mov
and
jmp
and
pop
sub
push
sbb
int3
xchg
lret
insb
push
mov
sti
inc
add
add
fs
xchg
mov
mov
or
orb
mov
and
push
lea
inc
pop
shr
inc
xor
arpl
ret
stos
sbb
push
mov
bound
and
or
and
pusha
jb
cli
fisttpll
sub
cmpl
aad
mov
shl
or
and
cmc
jg
aaa
stc
push
adc
xor
mov
mov
fnstenv
mov
inc
and
and
int3
and
push
xchg
sti
les
cmp
js
sbb
pop
ja
lret
sub
pop
xchg
cmp
ljmp
scas
leave
xchg
and
xchg
ljmp
lahf
adc
in
sbb
jno
rcrb
test
and
and
xor
data16
cwtl
and
int3
daa
fbld
lds
icebp
or
cs
cmp
addr16
out
or
repz
pop
inc
rcrl
cmp
jnp
mov
mov
and
mov
pop
inc
or
cltd
enter
fcoms
sub
push
lods
pop
and
lds
aaa
shrb
ljmp
dec
add
cmp
or
in
lret
jns
sahf
push
loope
pop
pop
lods
xchg
lahf
mov
lea
jne
dec
pop
mov
mov
out
les
jl
sub
insl
xorb
cltd
lret
je
stos
rcrb
xchg
mov
and
pop
imul
mov
add
subl
addb
push
xchg
js
and
cld
in
test
vcompresspd
into
dec
out
fimull
fs
jmp
cmp
mov
jo
enter
mov
push
jo
cmpsb
loopne
and
lret
push
pop
dec
outsl
adc
dec
inc
insb
test
sahf
push
xchg
jmp
cwtl
into
mov
add
scas
dec
and
sub
xchg
xor
pop
fstl
mov
sub
lcall
es
pop
add
fsubp
pop
stos
icebp
adc
arpl
xor
push
imul
push
xchg
xchg
outsb
and
popa
adc
iret
lahf
cmp
shlb
leave
cwtl
inc
leave
test
mov
xor
das
shlb
fwait
ret
std
mov
sbb
sub
cltd
mov
ja
sub
ret
xor
and
xchg
add
push
cli
sub
add
enter
shl
stos
mov
jge
add
jns
bound
les
aad
pop
fcomps
and
push
dec
popa
das
ret
loope
in
fst
ja
fwait
lahf
jl
daa
mov
xchg
push
inc
and
lcall
jecxz
aad
jns
sbb
imul
push
ret
out
test
fwait
out
and
div
iret
insl
pop
adc
aas
inc
mov
adc
sbb
sub
les
enter
pop
xchg
dec
pop
xchg
jo
dec
les
mov
lret
xor
shlb
ss
xor
adc
pop
inc
mov
pusha
cmp
mov
rcrb
mov
mov
cmp
xchg
xchg
xchg
movsl
adc
and
sub
ret
mov
or
enter
cld
ss
or
dec
xchg
lcall
jb
and
test
mov
fsubl
out
jle
les
lret
push
hlt
ljmp
mov
cmpxchg
call
mov
sub
ljmp
fimuls
inc
insl
aad
push
pop
aam
inc
xchg
pop
dec
cmp
ret
fwait
xchg
add
aas
jp
xchg
push
insb
mov
cmp
movsb
popa
mov
sbb
into
ja
jmp
mov
enter
enter
fwait
pop
in
fldl
repz
push
dec
mov
and
rcll
or
shll
pop
mov
sub
cwtl
sub
outsb
bound
stos
sub
out
pusha
fnstsw
ds
adc
data16
movsl
xor
pop
pop
orb
filds
push
sbb
jno
fdivl
cltd
cmc
fistl
mov
imul
imul
repnz
xlat
mov
xchg
pop
inc
lea
pusha
ss
dec
in
ret
add
repz
mov
sbb
push
ret
cmp
adc
dec
pop
mov
and
dec
aaa
push
arpl
cmp
andb
repz
sbb
and
mov
jecxz
cs
paddsw
in
jle
mov
lret
sub
xchg
aas
sbb
stos
test
push
ds
leave
xchg
xor
ljmp
arpl
clc
jmp
add
and
adc
mov
push
xor
add
mov
inc
pushf
or
pop
arpl
lret
xchg
and
mov
mov
les
adc
in
lods
shlb
lahf
push
xor
xor
addr16
addr16
les
mov
cmp
dec
xor
andb
loope
enter
xlat
jp
xlat
js
xor
push
inc
dec
sub
push
xor
les
clc
sbbb
and
mov
ds
rol
add
ja
repnz
ljmp
inc
pop
push
cmp
or
repz
jbe
js
cwtl
xor
mov
outsl
jb
aad
mov
mov
pop
ret
sahf
lcall
adc
and
xor
aad
and
sub
ret
insl
enter
mov
aas
mov
mov
push
call
xchg
dec
inc
enter
inc
pushf
clc
mov
inc
shlb
enter
bound
gs
xor
mov
mov
fcompl
pop
or
cmp
fidivrl
sub
imul
imul
enter
sub
pop
imul
xor
dec
outsl
jo
inc
adc
out
jno
into
test
push
sbb
jo
jg
test
sbb
mov
out
mov
mov
lea
fsubs
out
mov
lods
adcb
xor
dec
xchg
inc
mov
push
or
xchg
dec
lret
sbbl
pop
lods
pushf
popa
and
imul
sbb
and
movsl
hlt
xchg
fadds
enter
rclb
das
push
fadd
cmp
and
dec
and
jge
sbb
shrl
inc
push
or
mov
movsl
ss
fidivrl
mov
adc
imul
in
popa
insl
mov
inc
ljmp
sbb
out
sbb
enter
je
sbb
inc
aas
dec
and
inc
inc
jle
mov
in
mov
shll
mov
aaa
push
enter
into
sbb
pop
ror
lgs
push
dec
shll
add
enter
fmull
pop
dec
push
pop
mov
es
je
or
add
inc
xor
inc
bound
dec
and
fildl
into
sbb
test
xchg
lds
rcrb
lds
inc
xchg
fildll
pushf
cs
jns
daa
cmp
scas
dec
mov
sub
push
mov
sub
xchg
inc
sub
and
test
iret
ss
push
daa
push
push
adc
xchg
imul
in
out
mov
in
dec
push
fldenv
sahf
outsb
pop
enter
lret
pop
sbb
lods
jo
insb
jp
hlt
movsb
loope
xchg
aad
aam
imul
jo
push
push
mov
sti
push
sub
inc
out
xchg
mov
push
cmc
sub
mov
sahf
xor
sbb
outsl
add
sti
les
xchg
stos
sub
stos
pusha
cmp
aam
and
adc
imul
mov
xchg
and
aaa
arpl
pop
cli
imul
cmpsb
add
and
sbb
shr
xchg
insb
cmp
mov
stos
imul
mov
sbb
loop
or
enter
aad
mov
inc
psubsw
arpl
cmc
and
mov
test
push
sbb
and
inc
les
in
push
jb
dec
sub
repnz
es
and
mov
fistl
dec
mov
dec
mov
xchg
data16
loope
and
jb
fs
pop
in
cs
pop
mov
test
and
xchg
jno
cmpl
int
fucomi
jmp
fs
and
adc
mov
ret
outsb
sbb
and
sbb
inc
pop
enter
in
cld
outsb
orb
xchg
out
xor
mov
mov
inc
adc
mov
arpl
cmp
jno
aam
xor
cltd
ret
mov
cmp
int3
jle
cmp
not
jns
lret
dec
ja
shrb
jno
mov
ret
mov
rorb
xlat
inc
out
sbb
ss
add
add
outsl
push
xchg
outsb
jnp
cltd
rol
pushf
mov
pop
movsl
xor
sbb
std
pop
jmp
sub
notl
inc
inc
jle
fldl
into
dec
and
les
lcall
cmp
adc
mov
dec
and
xchg
or
int
sub
jg
nop
fwait
and
ret
pop
outsb
pop
jecxz
aaa
clc
jg
and
jne
add
xchg
mov
sbb
or
fs
fwait
xor
shlb
lods
jns
insl
dec
inc
cmp
out
sbb
mov
adc
or
xor
sub
movsl
lcall
inc
jp
cmpl
mov
popa
enterw
test
xchg
jo
shll
push
lock
mov
and
adc
popa
les
jl
or
imulb
rol
add
push
sbb
or
pop
ja
add
push
dec
popa
mov
ror
cmp
repnz
insl
add
int3
or
arpl
add
jno
cmpsl
fcmovu
stos
sub
mov
xor
mov
fwait
mov
inc
inc
imul
push
imul
sub
cwtl
jns
popa
jne
jmp
push
loopne
xor
mov
lcall
fldcw
pop
and
jmp
jae
mov
sahf
adc
mov
not
fidivrl
sub
xchg
aaa
les
das
sbb
dec
rclb
ret
cwtl
sahf
arpl
mov
sbb
inc
sbb
iret
icebp
arpl
push
shlw
jmp
jg
xchg
sub
xchg
xor
xor
rdmsr
sar
imul
mov
jmp
lahf
jns
xchg
mov
and
clc
das
ret
je
je
cmp
sub
and
les
dec
mov
idiv
push
inc
mov
jns
lock
and
les
xchg
xor
dec
or
cmpsl
xor
xchg
mov
mov
test
daa
xchg
push
ret
sub
jnp
push
sbb
pop
and
lcall
sub
jns
mov
inc
cmp
call
xorb
dec
mov
insl
add
add
inc
out
xchg
jge
icebp
ja
mov
sub
enter
or
push
addl
imul
enter
std
cmpsl
add
sub
or
ret
and
dec
add
jmp
sub
xchg
push
push
out
push
add
jmp
aaa
fsubs
insb
data16
xor
push
push
enter
xor
arpl
sub
in
ret
add
jmp
mov
mov
lods
sarl
iret
mov
in
insb
or
xchg
mov
inc
and
cmp
jo
enter
cltd
insl
faddl
in
ret
jb
and
mov
mov
mov
roll
addr16
hlt
cmp
cwtl
or
mov
cld
ja
dec
mov
cmp
std
inc
cwtl
mov
loope
jge
push
pop
bound
dec
enter
jecxz
int3
xor
fwait
cmp
mov
dec
xor
sahf
dec
pushf
out
cmova
inc
cs
cmp
xor
sub
mov
jge
xchg
sub
aaa
ljmp
cmp
mov
dec
imul
jno
mov
fsubr
mov
outsb
pop
imul
fst
mov
imul
xor
addr16
imul
or
add
ss
insl
rcr
ret
mov
imul
movsb
mov
into
sub
mov
shrl
adc
push
test
popa
jne
lahf
dec
ja
mov
lahf
inc
push
and
cld
pop
sahf
mov
mov
dec
pop
xor
mov
sub
or
dec
add
sti
sahf
out
popa
lods
xchg
add
icebp
sub
xchg
sbb
into
inc
mov
sbbb
and
push
xlat
lahf
pop
sub
sub
inc
xchg
cmc
sbb
out
push
inc
aas
inc
mov
dec
ret
sub
ljmp
xchg
inc
mov
and
fisttpl
add
jns
aam
cmp
aad
adcl
call
dec
inc
fildl
xchg
adc
cmp
test
push
decb
in
mov
adc
mov
enter
dec
insb
jns
js
fwait
popf
in
mov
inc
add
ja
and
mov
sbb
negb
add
push
jnp
in
mov
pop
push
cmpsl
dec
xchg
dec
es
jno
mov
lret
jne
sahf
inc
push
inc
frstor
out
pop
and
mov
dec
and
xchg
into
add
les
leave
test
push
aaa
mov
call
xchg
pushf
dec
push
movsl
bound
and
jo
pop
or
jb
xlat
stos
insb
push
xor
in
enter
loop
xchg
inc
sbbl
loopne
fldcw
jge
cmp
mov
inc
aam
sub
sbb
add
push
cmp
mov
add
mov
cs
dec
pop
mov
jno
orb
nop
mov
pop
push
orl
imull
or
faddl
xchg
fbld
inc
or
and
icebp
mov
and
mov
inc
and
pusha
fst
das
arpl
add
test
hlt
xchg
push
and
mov
pop
jle
adc
test
jp
rclb
push
pop
cmp
dec
cs
sub
sub
stos
xchg
sbbl
dec
fidivs
sub
cmpsl
out
ss
mov
sub
ds
jb
in
and
js
adc
push
fnstsw
cmp
lods
or
and
lret
out
xchg
mov
inc
jg
test
and
stos
and
or
and
push
dec
sbb
cmp
or
sub
and
pop
push
jb
mov
nop
xor
fs
xchg
push
jns
pop
leave
fucomip
push
push
sub
dec
mov
sbbl
cli
sbb
insl
nop
shl
or
outsl
aad
cmp
jl
pop
mov
cmp
stos
popa
orb
fstpt
xlat
cwtl
sbb
mov
push
add
adc
sbb
int
sbb
idivl
fwait
and
data16
sub
jp
mov
jns
dec
jae
sbb
and
add
fsubl
and
mov
sbb
sbb
cli
and
xor
add
or
addb
dec
filds
lds
movsb
daa
pop
mov
loopne
loop
mov
mov
mov
add
mov
outsb
js
lahf
push
and
inc
pushf
lret
jmp
mov
daa
or
and
push
js
and
xor
or
xchg
and
xchg
jns
pop
sub
out
sub
sti
iret
mov
psubusw
icebp
xor
in
and
jmp
cmc
pop
les
jge
xchg
popa
or
and
mov
add
sub
loope
test
push
ja
rcl
sti
jl
dec
push
test
cmp
mov
sub
sti
out
cltd
add
and
subps
negl
xchg
inc
lods
cltd
sub
add
adc
and
jmp
and
call
sbb
arpl
lret
mov
adc
enter
aam
or
ds
ret
cmp
bound
sarb
xrelease
cmc
xchg
mov
and
imul
loop
or
hlt
push
loope
mov
movb
imul
jmp
and
cmp
std
and
pop
push
cmpsl
lret
cmp
cmp
outsl
and
xchg
adc
and
cmp
nop
cmpsl
mov
jo
mov
push
xor
xchg
and
repz
adc
and
push
mov
push
test
and
cmpsl
leave
sbb
mov
and
mov
push
inc
and
ret
adc
add
pop
and
xor
or
cs
mov
xchg
sbb
add
neg
jmp
loop
adc
xchg
fwait
aaa
js
iret
fisttps
and
and
and
cli
mov
jg
ret
lods
popf
jno
sbb
fistps
and
das
sbb
or
mov
gs
mov
and
pop
mov
cli
mov
xchg
inc
nop
faddl
out
or
jp
and
and
aad
lds
push
int3
pop
xor
stc
cmpsl
and
adc
ljmp
adc
push
and
loop
insb
pop
inc
fldenv
and
leave
xor
rorb
push
adc
fisubl
and
push
cmp
jb
shr
xchg
filds
out
and
cmp
fldenv
mov
mov
popf
add
int3
scas
xchg
out
adc
sbb
loop
and
pop
in
jmp
arpl
and
xor
mov
filds
pop
and
mov
and
sbb
jbe
adc
and
mov
push
mov
call
insl
dec
sbb
loope
jmp
loop
inc
cs
dec
scas
rcr
mov
push
push
xchg
lcall
test
and
repnz
fisttpll
dec
and
adc
js
mov
add
jmp
fisubs
mov
insb
adc
pop
mov
rorb
mov
ret
sub
pop
pusha
and
mov
add
scas
and
mov
add
pop
and
sbb
jo
inc
arpl
cwtl
pop
rcrl
daa
sbb
das
xchg
outsl
sub
imul
or
dec
scas
rclb
lods
out
cltd
adc
cmp
cmp
lret
and
test
in
mov
fbld
std
xchg
mov
push
jb
mov
and
sbb
jne
sahf
fwait
adc
dec
andb
mov
inc
enter
pop
pop
loop
xchg
cmp
cmp
and
popf
push
jne
push
fdivrl
daa
xor
pop
adcl
and
aam
cmp
xchg
xchg
or
add
push
sub
fimuls
or
and
push
popf
leave
mov
mov
mov
sub
je
cmp
jle
xchg
stos
and
push
mov
xor
sub
add
jns
rolb
fdivs
inc
jg
sbb
pushf
movb
inc
aam
and
test
jecxz
mov
arpl
push
dec
sarb
jbe
mull
cmpsl
int3
dec
and
mov
and
leave
sbb
das
mov
add
xchg
add
dec
and
pop
dec
cs
mov
bound
adc
and
loope
jns
aas
int
inc
fwait
push
stos
ret
inc
jge
cld
addr16
sbb
cmp
jg
out
jns
or
xor
insl
adc
enter
push
jp
mov
and
mov
fsubl
push
int3
push
jnp
sbb
add
and
ss
xor
pop
jle
pop
and
sub
insl
insb
jb
scas
xor
dec
ds
mov
addr16
push
shll
or
cmp
add
addl
lock
push
xchg
stos
mov
addr16
jns
pop
jno
pop
xor
les
jno
loope
jle
xchg
sub
pop
imul
mov
mov
xor
add
xlat
xor
mov
inc
lret
ret
xor
xor
popf
popa
xchg
cmp
out
inc
add
mov
dec
movsb
ret
pop
sub
imul
jecxz
jle
imul
pop
inc
imul
jmp
jle
push
ja
or
and
jo
and
adcb
inc
in
popf
jp
ljmp
adcl
les
mov
and
jmp
cmp
lods
push
adc
mov
inc
enter
add
dec
insl
imull
and
or
outsb
xchg
jge
and
cld
push
inc
adc
sbb
lds
mov
aaa
push
jmp
test
shrb
and
jnp
stos
pop
mov
pop
sub
mov
fstpt
enter
fdivrs
pusha
ret
and
sahf
mov
xor
or
enter
adcb
ja,pt
cmp
mov
jo
push
add
pop
call
enter
es
xor
xchg
aam
pop
imul
pop
adc
lcall
mov
in
pop
or
or
push
cmp
aam
dec
test
push
imul
es
sub
xor
push
fwait
dec
hlt
xchg
or
add
mov
and
ret
je
mov
push
cld
jge
jmp
rclb
setge
insl
xor
outsl
adc
push
cmp
lahf
fsubs
imul
jle
pop
cmc
or
sbb
jb
jmp
paddb
mov
xor
push
xchg
outsb
ja
dec
pop
sub
sbb
xor
daa
dec
xor
sub
mull
icebp
loopne
sbb
iret
mov
mov
stos
sub
sti
lock
jmp
in
insl
inc
sub
xor
popa
ja
addl
and
jmp
mov
data16
test
and
icebp
jns
shr
xchg
xor
push
popa
imul
arpl
xchg
pop
dec
test
imul
mov
push
shll
clc
loopne
xorl
pop
mov
cs
ret
mov
out
stc
aam
in
daa
jle
xchg
enter
mov
fsub
jg
jae
fstpt
xchg
enter
dec
and
aaa
mov
lods
fs
testl
push
mov
pop
and
ret
or
pop
shl
mov
xchg
cmpl
ljmp
fldenv
popl
dec
jns
push
std
jns
lods
lcall
cmp
es
div
nop
jae
xor
xchg
mov
hlt
cmpsb
lods
imul
rcrl
rcrb
dec
sbbl
inc
les
or
addl
mov
mov
idivb
hlt
adc
outsb
es
add
aad
test
arpl
mov
lcall
lea
rcll
jns
xor
push
aam
dec
int3
enter
adc
and
dec
xlat
stos
add
pop
sub
dec
iret
in
add
ja
pusha
loope
addr16
pop
or
lea
inc
ja
push
aaa
testb
shll
or
neg
push
nop
jb
push
add
adc
daa
or
adc
rcl
ret
loopne
lds
ret
add
andl
vhaddpd
inc
xchg
sbb
enter
insb
mov
mov
call
hlt
xor
mov
or
addb
adc
pop
xchg
ljmp
in
pop
ret
fdivrs
test
ja
inc
adc
push
fwait
mov
adc
stos
xchg
out
repnz
fcoml
lock
xor
cmp
inc
inc
sub
mov
mov
mov
mov
jecxz
jle
pop
in
add
ljmp
outsb
xor
pop
repz
imul
ret
imul
data16
dec
ret
or
mov
jb
inc
pop
and
shl
xchg
sbb
mov
add
push
jl
adc
cmp
pop
sbb
js
cld
xchg
out
fwait
jo
les
add
in
insl
mov
pop
je
sub
push
addr16
inc
int
lret
mov
lea
mov
cmp
stc
or
das
push
add
test
dec
into
xchg
fidivrl
rcrl
xor
sbb
jl
or
fnsave
jp
arpl
xor
enter
leave
lea
fld
cmc
xchg
icebp
inc
sub
repz
movsl
sahf
imull
cmpsb
jmp
ja
test
add
jnp
jno
jbe
dec
lret
sbb
sub
enter
inc
cmp
sahf
xorl
enter
cmpsl
jg
cmp
testl
add
mov
je
and
xorps
xchg
in
mov
int3
and
jge
dec
pop
gs
mov
xorb
jl
jmp
and
dec
aaa
popa
mov
mov
jno
ss
iret
and
notb
or
cmp
mov
and
xor
testl
ss
jo
cmp
stos
movsb
cmp
add
mov
sub
jbe
push
mov
xorl
lret
and
es
stc
rolb
daa
cmp
mov
adc
and
push
jge
inc
andl
mov
and
xchg
andb
jecxz
das
sti
mov
repnz
fcmove
mov
jge
xchg
cmp
mov
hlt
imul
cmp
in
adc
ret
rclb
insl
push
scas
or
inc
jo
lret
rolb
and
outsl
in
sbb
and
jmp
nop
sub
inc
xchg
cmp
xlat
mov
ljmp
cltd
in
sbb
pop
and
xor
ficoms
bound
jns
out
pop
fcompl
cmc
aad
clc
ret
sbb
movsb
xor
add
xlat
mov
cmc
xchg
dec
jae
in
shlb
ljmp
mov
xor
cltd
or
push
and
test
and
push
inc
mov
xchg
mov
leave
sub
xchg
pop
cmp
and
and
insl
and
je
and
jmp
sti
mov
inc
or
cmp
repz
mov
mov
fs
and
ss
gs
inc
hlt
xchg
and
int
shll
fmull
das
pusha
lods
in
mov
dec
add
in
or
and
or
ss
push
and
dec
repz
popa
adc
int3
sti
mov
dec
and
mov
and
and
lea
sub
push
imul
xchg
aaa
mov
and
push
ret
and
pop
cmp
and
mov
xchg
je
and
adc
xor
adc
movsl
and
sahf
fmuls
movsb
aas
popa
cltd
sub
jno
add
and
mov
nop
pop
fs
and
add
aas
xor
not
pushf
test
cmp
ret
jmp
mov
mov
push
es
or
xlat
sub
sbb
mov
and
lock
filds
push
xlat
outsl
pushf
and
mov
inc
and
and
push
xchg
and
into
mov
pushf
and
adc
xchg
and
dec
fcoms
lds
out
xchg
xchg
cmc
xor
pop
and
pop
cmp
int
jbe
int3
xor
and
sub
push
aam
jb
cmpsl
and
jg
pop
dec
pop
pop
and
sub
mov
bound
and
lods
mov
movsl
aam
lret
scas
jl
sub
daa
insb
sahf
or
stc
ret
and
xchg
jb
push
sub
and
mov
mov
mov
dec
sub
jmp
sub
and
mov
inc
adc
in
sub
aad
imul
xchg
dec
fists
mov
mov
jle
and
call
pop
dec
aad
xlat
sbb
cmp
mov
gs
and
in
mov
stos
iret
push
repnz
sub
out
orl
and
push
int
and
ja
push
cli
test
push
mov
and
shl
pop
and
push
je
cmp
adc
dec
pop
push
sub
cmp
mov
push
loope
pop
xor
and
sub
insl
inc
imul
loopne
dec
nop
and
aaa
mov
jp
push
fisubrl
jo
and
out
cmpl
cli
add
dec
jae
arpl
arpl
cmp
adc
xchg
repz
stc
fwait
pop
and
mov
push
jns
cltd
xchg
and
stos
in
mov
mov
sbb
cmpl
rclb
jmp
pop
push
bswap
movsb
sub
dec
jno
mov
cmp
in
icebp
ds
and
fs
pop
inc
mov
fwait
les
cmpl
sbb
in
ss
psubusb
cwtl
out
hlt
mov
mov
stc
add
and
pop
lea
xor
and
sub
fwait
push
lahf
ljmp
jnp
and
sbb
mov
cmp
sbb
cld
xor
and
xor
or
pop
loopne
jnp
and
cmp
movsb
pop
xchg
fucomi
xor
inc
stc
add
movsb
or
movsl
mov
add
push
andl
pop
cmp
test
jnp
sbb
mov
pop
and
movsl
cmpl
and
pop
imul
pop
push
movsb
repz
and
adcl
aad
xchg
xor
pop
daa
cltd
arpl
sti
cmp
add
sub
loope
push
cmp
out
inc
add
add
lcall
and
inc
shlb
pop
sbb
icebp
and
cld
jecxz
and
push
push
cmp
cltd
and
cmpsl
mov
adc
add
cli
into
and
fiaddl
imul
adc
daa
pop
movntq
and
pop
aad
sbb
xchg
mov
lods
jle
push
and
ljmp
mov
out
mov
repz
js
popf
and
cwtl
jmp
negb
mov
clc
lret
xor
inc
ret
sarb
mov
or
jmp
loopne
fst
jp
xchg
jb
ja
enter
pop
cmp
xor
or
sub
movsb
stos
or
and
mov
int
adc
mov
or
mov
jnp
and
cmpsb
in
in
cmp
in
aam
loop
xorl
sbb
enter
adc
adc
ret
jmp
and
pop
xchg
and
jp
mov
pop
in
xorb
mov
sahf
push
push
and
out
push
cwtl
daa
cmp
scas
sbb
push
bound
daa
pop
pusha
scas
xchg
inc
insl
popf
and
cmp
adcl
loop
xchg
cmc
nop
and
sub
dec
jb
inc
cmp
sbb
and
cmp
pusha
lods
sbbb
rcl
inc
and
stos
add
xor
in
sahf
sbb
push
and
push
add
and
adc
in
mov
and
shl
imul
add
popa
movsb
or
and
jmp
cmp
ss
ja
js
or
xor
jnp
icebp
and
shlb
ret
js
cmp
out
and
mov
mov
loope
jnp
push
and
pop
xor
mov
dec
movsl
dec
jmp
cmpb
sub
cld
xor
lods
jne
mov
les
dec
aad
flds
mov
data16
cli
mov
and
dec
cmp
push
add
cmpsl
and
stc
or
cmp
sub
sti
pop
mov
lcall
sub
std
adc
shll
cmp
les
mov
cmp
aad
and
pop
lcall
gs
gs
popa
push
add
bound
enter
adc
mov
les
ds
add
push
mov
xor
or
push
push
lock
addl
les
loopne
inc
pop
es
enter
dec
repz
int3
leave
dec
jle
aaa
mov
push
imulb
dec
inc
nopl
mov
aaa
mov
es
faddl
add
leave
data16
dec
sti
jo
test
cs
jb
xor
loopne
adc
adc
aad
jo
ljmp
fldl
sbb
andb
ret
fdivl
aaa
adc
push
movsb
jmp
sbbl
pushl
or
pop
lock
rcrb
stos
dec
mul
shl
mov
cwtl
jecxz
lds
lcall
push
jmp
jle
fs
arpl
enter
lret
fiadds
inc
int3
out
xchg
aaa
jle
repz
popa
inc
adc
mov
inc
mov
cmp
xor
mov
push
dec
and
inc
nop/reserved
pop
arpl
lret
jl
setbe
mov
fwait
outsb
repz
ret
flds
notb
mov
ffree
adc
mov
mov
shl
adc
mov
and
sbb
xchg
pop
mov
loopne
xchg
pop
outsl
shrb
xor
mov
cmc
in
popf
xor
push
daa
insl
pop
fimull
sahf
mov
xor
lock
repz
fdivrl
outsl
addr16
jae
dec
cmpsl
int3
lds
xor
xchg
inc
cwtl
enter
test
gs
xor
lock
repz
ja
lret
cwtl
loop
cmp
das
mov
mov
mov
sbb
iret
sbb
cmp
scas
mov
pop
lock
inc
adc
add
push
dec
cmp
ret
or
lock
loope
sub
nop
enter
cmp
jge
jp
lods
and
jbe
mov
and
cmpsb
shlb
or
std
clc
dec
and
mov
xor
loop
and
fildl
pop
adc
and
jp
dec
pop
xor
and
inc
outsb
sub
fdiv
and
dec
fisubs
jae
data16
hlt
ret
and
imul
mov
inc
pop
call
divl
daa
and
int
jnp
cmp
and
lds
adc
repnz
xchg
and
jp
lcall
testl
push
pop
mov
arpl
and
inc
jmp
pop
loopne
and
and
pop
mov
iret
movsb
and
pop
orb
xor
add
push
inc
mov
int
sbb
and
pop
mov
popa
and
out
aam
xor
and
mov
insl
test
or
and
lahf
arpl
sbb
popf
test
and
adc
fcompl
jecxz
loop
and
sbb
add
les
pop
repnz
mov
push
sbb
and
aas
pushl
addb
sbb
stos
mov
and
popa
sub
jp
and
or
mov
ret
xchg
and
ljmp
jge
add
adc
imul
mov
das
testb
aam
cld
pop
add
pop
and
nop
frstor
mov
push
dec
jecxz
and
cmp
call
mov
add
pusha
iret
mov
popa
dec
adc
bound
or
sbb
and
cmp
int
cmp
jno
sbb
loope,pt
addb
div
fisubl
loop
sbb
xorb
hlt
mov
ret
dec
mov
jno
subl
js
xor
decb
int3
sub
pop
mov
inc
mov
enter
sub
xor
mov
imul
xlat
jge
cmpsb
xchg
cmp
mov
addr16
xchg
test
mov
xor
push
xor
ja
stos
or
mov
push
lds
into
xor
sbb
mov
push
push
jmp
jl
sbb
and
notb
xchg
popa
std
sub
xchg
fmull
sti
xchg
inc
imul
cs
loope
enter
adc
inc
icebp
xchg
dec
inc
clc
xchg
xor
inc
pop
sub
mov
xchg
int
pop
dec
xlat
xor
daa
mov
push
lcall
aam
inc
sbbb
add
inc
stc
ret
cld
hlt
mov
jl
fstpt
loop
mov
add
pop
jge
je
jb
mov
movsb
frstor
ret
adc
pop
add
push
test
les
insb
rol
ja
loop
les
xchg
lcall
inc
push
loope
ret
pusha
test
mov
push
inc
mov
xor
outsb
je
insl
jl
cmp
mov
lds
scas
add
adc
repz
or
jae
jp
repz
popa
xchg
mov
ret
ret
mov
xchg
insl
scas
enter
inc
rol
fsts
push
and
orl
jp
testl
imul
ret
jle
andb
xchg
movsl
mov
imul
insb
sbb
pop
imul
jne
ret
daa
mov
rcrl
fisubrs
sahf
idivb
mov
inc
and
push
xor
xor
xchg
insl
enter
and
ret
loope
cmpsl
xor
lcall
dec
and
pop
ret
rcl
enter
int3
mov
jbe
or
push
push
in
xchg
js
xchg
xor
inc
jg
cs
imul
dec
mov
adc
cld
sbb
rcrl
fiaddl
dec
andb
int
mov
insl
mov
push
lahf
aaa
inc
jbe
and
mov
add
lock
fs
arpl
mov
xchg
push
and
rolb
jg
decl
add
inc
mov
cld
lahf
dec
lret
rorl
jns
incl
jle
cld
vmovapd
jmp
add
jno
daa
outsb
mov
imull
int
daa
push
enter
xor
popf
idivb
aaa
push
pmulhw
bound
push
pop
xor
xchg
mov
sub
ss
into
pop
mov
xor
andl
mov
push
pop
daa
ret
divl
mov
es
adc
imul
shlb
adc
sub
testb
push
mov
inc
cmp
and
xchg
lea
add
movsb
push
test
sbb
aad
lods
push
jmp
insl
insb
gs
sbb
shl
les
dec
scas
sub
or
mov
mov
repz
lahf
scas
add
xor
js
sub
jecxz
and
push
mov
and
movsb
and
fildl
jo
stos
inc
fincstp
add
dec
push
imul
and
jae
jle
je
mov
pop
add
pop
and
aaa
mov
jg
in
jno
pop
fisubs
mov
jle
pop
cmp
sub
lret
inc
and
push
sbb
xchg
cs
or
push
jns
mov
and
mov
adc
sarl
popa
arpl
sbb
adc
push
and
int
push
loop
and
cmp
cmc
scas
inc
jne
shrl
repnz
pop
data16
jnp
xor
bound
sbb
fsubrl
leave
icebp
pop
aam
and
mov
ret
xchg
in
pop
adc
fildl
jmp
popf
movsl
fsts
out
or
mov
bound
mov
xchg
es
das
insl
inc
sub
aaa
je
dec
out
fmull
xchg
and
sar
cwtl
je
and
cltd
push
in
jecxz
xchg
fs
ljmp
xor
push
xchg
add
lahf
xchg
inc
xchg
jmp
shll
mov
or
pop
add
aam
or
cmpsl
mov
add
adc
inc
bound
push
adc
and
dec
mov
mov
jb
cs
push
sub
sbb
adc
aas
push
jmp
xor
outsl
jl
in
mov
addr16
dec
jnp
shll
jge
and
lods
dec
and
incl
std
jne
cmp
dec
popa
jle
inc
adc
fisubs
cmpsb
aas
adc
sbb
and
movsb
sbb
and
dec
jge
int
jo
pop
in
cmp
jae
ret
mov
push
jnp
imul
pusha
and
cltd
jbe
and
cli
adc
push
sub
movsl
mov
ds
or
sbb
and
push
call
xchg
idivb
jg
lods
loop
jge
push
push
fldt
cmc
sub
pop
and
sbb
mov
and
fidivrl
mov
in
clc
or
pop
dec
pop
inc
test
test
scas
push
or
jecxz
insl
and
and
or
push
xor
and
push
jmp
dec
and
cwtl
nop
arpl
out
sbb
dec
stc
daa
push
adc
xor
xor
sbb
stos
or
mov
divb
or
lods
and
and
fwait
sbb
dec
dec
and
cmpsl
jl
adc
inc
sub
mov
or
sbb
jns
and
clc
push
aas
and
cmp
inc
out
and
enter
popa
test
std
push
and
in
fsubl
add
and
ret
mov
xchg
xor
and
mov
addr16
xchg
mov
popa
out
and
rcrl
add
xchg
and
lds
jl
mov
lret
jle
data16
mov
dec
and
daa
rorl
aad
inc
jne
cmp
mov
mov
push
mov
and
mov
mov
and
fcoml
mov
mov
test
push
cmp
mov
xchg
and
pop
and
add
push
push
mov
jecxz
shrl
and
sbbb
pop
and
add
pop
aad
inc
ret
sbb
loop
pop
inc
jmp
pop
jecxz
jno
add
sub
int
push
fildll
enter
lcall
arpl
es
jp
daa
sahf
jb
push
sub
sbb
rcrb
and
outsl
sub
dec
pushl
enter
leave
cmp
jbe
lea
test
aaa
pop
xor
or
pop
insl
pop
mov
sbb
push
sub
add
pop
jb
scas
lahf
adc
xchg
push
ret
add
les
mov
fidivrs
or
lcall
cmp
pop
mov
adc
aaa
inc
adc
aaa
jo
ja
sbb
or
fwait
dec
pusha
sahf
xor
aad
jmp
bound
and
xchg
das
xor
cld
push
adc
pop
pop
mov
xchg
jb
xchg
les
fbld
inc
cld
insl
push
mov
dec
fsub
sahf
repnz
jl
inc
mov
and
sbb
lcall
outsb
sub
inc
mov
add
enter
or
add
dec
dec
dec
inc
shr
inc
jmp
clc
call
jno
incl
xlat
pop
cmpsb
ds
outsb
mov
bound
jo
dec
mov
sti
pop
in
xchg
jp
xor
lret
push
out
xor
mov
into
stos
mov
ja
xchg
mov
mov
sub
lods
sub
push
rol
mov
int3
aaa
into
inc
cmp
push
push
mov
int3
xchg
xchg
fcoml
popa
adc
pop
call
mov
inc
xchg
pop
imul
insl
iret
jae
mov
pusha
adc
lcall
push
or
std
sahf
insb
inc
jecxz
cmpb
out
mov
inc
lret
mov
jl
inc
xor
adc
sbb
add
ds
jmp
xchg
inc
cld
pushf
imul
mov
les
out
or
xor
xchg
fmuls
cmpsl
pop
push
xchg
add
push
hlt
pop
push
repnz
lea
push
pop
cltd
and
imul
jle
addl
insb
sbb
pop
jb
lret
jne
data16
inc
fbstp
mov
lret
xchg
leave
mov
cmpsb
inc
cmp
in
addb
scas
jge
or
push
fistps
loope
les
lcall
loop
fs
ret
mov
inc
push
movsl
hlt
and
sbb
cld
test
jg
or
imul
cmp
pop
in
sub
inc
and
push
jb
push
jge
lea
aaa
je
into
hlt
cmpsb
mov
icebp
sub
int3
mov
lea
sub
loopne
loope
ds
loope
imul
push
icebp
cwtl
sbb
int
mov
xor
cmpsb
mov
sub
in
xchg
popl
mov
fwait
addl
push
sbb
out
pop
or
adc
clc
jns
test
lock
add
inc
nop
xor
lahf
stc
mov
mov
push
enter
mov
pusha
or
mov
dec
lret
mov
loope
mov
add
cli
adc
xor
xchg
mov
sub
xchg
push
dec
ret
jg
sahf
mov
or
jg
or
aas
ficomps
or
and
lret
mov
js
mull
cmp
clc
arpl
shlb
jle
lock
popa
shrb
add
imul
pop
mov
cld
xor
loopne
dec
imul
shlb
sbb
add
inc
mov
add
sbb
les
cmp
int3
and
fldcw
incl
dec
sbb
xor
and
add
and
iret
adc
mov
and
pop
dec
pop
xor
inc
sti
and
cltd
sub
dec
adc
fimull
leave
and
fmuls
lret
sbb
inc
out
mov
pop
xchg
outsb
call
push
cmp
lret
movl
mov
mov
sub
popa
fisubs
and
test
push
jns
cmpsl
inc
push
jp
ret
adc
and
jbe
shr
and
outsl
addr16
inc
icebp
loope
and
bound
test
je
jle
movsb
sbb
ljmp
gs
cmc
dec
push
mov
cltd
inc
fists
cli
jmp
lock
dec
mov
cmpsb
sbb
adc
hlt
in
sub
mov
mov
rol
jae
and
sub
out
and
cmp
jno
jns
and
pop
in
mov
subl
xor
sub
adc
mov
rcr
mov
aam
mov
mov
push
test
icebp
notl
clc
bnd
es
jecxz
dec
push
adc
mov
stc
pop
mov
out
iret
xorl
mov
fisttpll
stos
fmuls
in
xor
mov
mov
push
aam
cmpsb
mov
and
loopne
inc
in
or
aaa
sub
mov
fcompl
add
inc
mov
add
xchg
xor
ds
xchg
mov
cmp
and
or
popf
gs
and
mov
sbb
daa
and
and
mov
out
insb
and
enter
inc
xchg
push
sub
mov
inc
push
sbb
mov
and
jno
push
push
and
je
in
out
pushf
push
leave
and
push
dec
jmp
lods
mov
mov
sub
in
and
push
push
pop
fnstcw
xor
mov
cmp
cmp
into
fdivs
inc
and
sti
call
pop
push
loop
frstor
mov
sarl
mov
push
jae
and
and
insl
mov
cltd
stc
loop
aaa
push
int
and
mov
xchg
mov
jb
cltd
popaw
cwtl
and
sub
push
push
xor
pop
test
inc
xchg
out
leave
cmp
mov
mov
mov
xchg
cmp
add
push
pop
jo
cmpl
aaa
cmp
and
dec
fdivs
xorb
mov
test
sub
jp
and
ja
lret
out
push
add
shlb
and
shll
psubb
sti
adc
nop
lods
add
and
xor
push
lahf
mov
jmp
out
bound
xchg
jge
sbb
aad
sub
cmp
and
repz
and
movsb
dec
xchg
lahf
int
jb
and
fisubs
mulb
push
and
or
sbb
sub
dec
insl
les
jle
adc
sbb
in
sbb
jae
iret
sahf
int3
add
cmp
sbb
and
outsb
fdecstp
and
enter
in
ret
xchg
lret
sub
jl
and
xor
jecxz
daa
insl
jmp
fisubl
and
jb
bound
push
sub
je
insl
and
ljmp
gs
imul
add
adc
sub
jl
cmp
sbb
dec
loope
sbb
fs
sub
and
call
sbb
fbld
and
push
leave
push
fisubs
int3
and
mov
addr16
pop
lods
sbb
ja
or
xor
add
xor
popf
inc
cld
and
jecxz
mov
and
push
jmp
and
sbb
jl
and
inc
fdivrp
adc
mov
cmpsb
out
and
imul
out
inc
and
loope
xor
mov
pop
cmp
and
or
sbb
jl
mov
data16
popf
daa
and
int
cld
stos
and
call
xchg
inc
adc
test
mulb
mov
push
clc
and
dec
jmp
push
cmp
jecxz
lahf
sub
in
inc
mov
mov
add
xor
stos
fwait
bound
adc
in
fstpl
push
sbb
addb
jecxz
loopne
and
fwait
arpl
sbb
and
mov
or
loopne
repz
pop
loop
fcomip
je
xchg
cwtl
in
loop
fisubs
popf
daa
divl
cmp
bound
std
and
pop
imul
dec
and
push
mov
and
xorb
cmp
xchg
mov
and
fiaddl
clc
dec
inc
mov
shll
mov
and
mov
xchg
and
cmp
fldenv
mov
pop
fsubs
and
jge
xor
cmp
daa
and
push
clc
pushf
xor
or
cmp
movsl
xor
push
sub
jne
or
sub
cmpsb
repnz
bound
and
jne
das
pop
je
push
sub
cmp
and
xchg
lods
xor
xchg
xor
mov
jle
sub
add
cmp
push
outsl
and
outsb
mov
and
std
popf
lret
test
pusha
sbb
mov
cmp
inc
das
lret
mov
mov
insl
mov
sti
push
sbb
loop
and
mov
ja
and
mov
cmp
and
out
inc
les
ret
and
fdivl
pushf
popf
dec
inc
mov
addb
cmp
sbb
push
ret
pop
cmovp
leave
sti
sbb
or
and
cmc
pop
mov
xchg
int3
popf
push
cmpb
and
cmp
pop
addr16
fsubl
or
inc
dec
adc
cmpsl
pop
pop
dec
imul
cmp
or
les
sub
mov
movsb
out
push
jno
sbb
loope
leave
and
cmp
jmp
es
xchg
push
lahf
sahf
fsubl
push
cwtl
pop
or
sub
jmp
les
sahf
sub
out
rcrb
pop
inc
pop
jbe
shll
les
sbb
sbb
pop
mov
mov
out
jns
bound
pop
lock
cmp
or
les
lret
enter
loope
sub
enter
ljmp
lret
mov
pop
mov
ljmp
enter
ja
stc
push
sub
jne
imul
fmuls
xor
incb
fisttpll
inc
sbb
xlat
xorb
shll
cld
mov
xchg
fisttpll
mov
in
jl
xor
fidivs
mov
mov
jns
cmp
or
mov
cwtl
mov
mov
decb
mov
out
fists
cltd
ret
push
xor
adc
fs
cmpsl
pusha
push
fsubrl
arpl
clc
jecxz
xchg
aaa
dec
and
push
mov
xor
cltd
pop
xchg
rorl
xor
imul
aaa
xchg
mov
mov
es
int3
jno
or
mov
inc
pop
ljmp
ret
xor
les
mov
popa
push
xor
aam
cmpsb
pop
std
xchg
or
lods
cmp
xchg
sub
fidivl
mov
dec
nop
xchg
loope
fsubs
icebp
jbe
mov
sub
dec
xchg
and
ret
gs
repnz
jp
int3
add
cmp
or
push
outsl
loop
jnp
jg
sti
insl
xor
push
inc
push
mov
icebp
inc
dec
adc
out
loop
movsl
fxch
push
pop
xchg
adc
inc
inc
xor
pop
adc
inc
dec
dec
xchg
adc
xchg
pop
fst
outsl
aam
cmc
aam
xchg
sbb
sub
insb
xor
and
cli
sbb
jae
jmp
xor
sbb
inc
arpl
cltd
inc
push
cmpb
xchg
ret
inc
mov
into
mov
pop
ror
xchg
gs
aam
sub
pop
dec
and
repz
and
testl
mov
mov
imul
jge
jae
daa
mov
mov
cmp
stos
cld
js
push
inc
xlat
cmc
movzwl
popa
pop
inc
or
outsb
jbe
xchg
or
or
or
hlt
ljmp
stc
lods
xchg
iret
cwtl
mov
jnp
arpl
int3
sahf
xor
fdivl
jmp
or
add
cld
inc
insl
shl
nop
add
mov
in
daa
sub
test
enter
and
mov
xchg
repz
roll
push
cmp
and
mov
sbb
inc
pop
aam
and
pushf
fwait
mov
imul
or
sbb
dec
mov
or
js
xor
xor
ret
out
inc
xchg
add
ret
cmp
jg
imul
and
push
sub
std
jne
inc
test
fwait
xchg
and
sti
sahf
arpl
in
cmc
adc
out
fs
in
fstp
and
push
mov
pop
data16
inc
shrl
xor
dec
inc
arpl
neg
pop
mov
je
daa
out
xchg
push
enter
push
aam
dec
push
jb
sub
adc
sub
push
xchg
and
scas
bswap
call
mov
out
push
arpl
jns
pop
mov
movsb
adc
dec
push
call
nop
push
loope
sub
mov
push
sahf
sar
inc
inc
popf
mov
arpl
pop
ja
cmpl
les
pop
dec
xchg
jp
rcrb
andb
mov
cmc
popf
les
fcmovnu
xorb
ret
subb
cmpsb
jbe
mov
bound
mov
lahf
enter
mov
imul
mov
pop
cmp
in
fbld
push
leave
mov
add
add
out
xchg
mov
bound
rcrb
lret
lcall
mov
add
jnp
nop
jne
dec
aam
insb
lret
xor
mov
adc
dec
les
mov
aad
mov
pop
icebp
js
add
mov
and
enter
xor
inc
xor
xor
jecxz
shll
mov
mov
xchg
fistpll
cmp
aas
fdivrp
insl
mov
fs
sbb
imul
rcrl
sysenter
jno
sub
xorb
sbb
daa
inc
daa
icebp
les
push
fldl
fistl
jne
inc
aaa
cld
lods
pop
jbe
adc
insb
paddsw
jnp
jnp
insb
cmpsb
inc
enter
js
push
arpl
mov
add
out
fisubrs
sar
cwtl
or
jne
xlat
sub
inc
cmp
xor
lret
cmp
in
pop
add
cmpsl
pop
or
xchg
das
xchg
icebp
test
mov
jmp
mov
jg
adc
xchg
xchg
inc
pop
add
rcrl
cld
sbb
stos
out
in
cld
cmpsb
adc
xor
shlb
mov
icebp
insl
rcrl
or
inc
mull
ljmp
les
lcall
dec
out
adcl
cli
mov
test
fbstp
jne
enter
sbb
les
pop
addb
sbb
dec
imul
mov
loopne
test
divl
lcall
iret
testb
out
inc
bound
enter
sub
sar
scas
lcall
cmc
push
setno
jb
lods
jmp
push
mov
pop
pop
in
into
mov
fnsave
inc
mov
pop
adc
lock
imul
inc
xor
xchg
lea
ja
xchg
mov
pop
lcall
dec
stc
shr
sahf
xchg
enter
insl
pop
aam
pop
pop
shrl
dec
pop
cmp
aaa
pop
iret
je
iret
out
ds
je
push
mov
les
xor
inc
xor
and
inc
movsb
xor
and
jle
sub
add
mov
out
mov
subl
outsl
xchg
add
test
enter
lahf
movsb
lea
pop
lods
movb
and
dec
enter
or
adc
xor
aam
outsl
and
cmc
scas
sarl
dec
mov
test
cmc
pop
mov
adc
add
and
cmp
mov
sub
or
mov
icebp
pop
add
xor
lds
hlt
adc
popa
loope
dec
mov
out
xor
cs
xchg
push
dec
add
sub
arpl
enter
and
inc
and
xor
adc
mov
xchg
sub
inc
scas
push
inc
imul
mov
test
inc
cwtl
imul
movsl
cmp
xchg
pop
pop
or
jl
fidivrs
les
adc
std
ljmp
jbe
mov
sub
roll
insb
push
xor
sbb
or
inc
in
into
fisubrs
jnp
and
inc
add
pop
mov
js
bound
lds
cmp
addr16
push
icebp
and
sub
rcrl
pop
fs
adc
cmp
loope
sbb
dec
bound
out
test
cmovne
les
jecxz
data16
fsubs
sbb
xchg
aaa
test
rclb
push
mov
sub
les
sbb
mov
push
mov
fldcw
and
aaa
into
push
add
mov
pop
mov
or
mov
in
sbb
test
fcmovnbe
cmp
daa
pusha
mov
into
es
push
je
push
outsb
cmp
mov
xor
test
mov
pop
nop
sbb
and
clc
bound
push
stc
push
cltd
scas
dec
push
pop
mov
shl
sti
xchg
sub
and
daa
call
or
ds
or
mov
ja
je
ret
lret
stos
jno
stc
not
push
dec
push
sub
arpl
mov
in
shlb
out
mov
mov
dec
and
sub
roll
sbb
int3
pop
dec
test
mov
in
cmpsb
inc
in
and
add
test
cmp
push
cmp
jmp
sbb
imul
cmp
jno
int3
sbb
outsb
imul
test
adc
sbb
sub
inc
lahf
dec
ds
cmp
sbb
xor
inc
push
jg
cmp
push
dec
int3
pop
mov
outsl
or
pusha
lret
lods
xchg
jg
bound
inc
outsl
loopne
das
mov
mov
icebp
pop
outsb
add
mov
pop
push
hlt
mov
mov
rol
scas
xor
jo
xor
sbb
cld
je
stos
jbe
int
cmp
mov
stos
mov
pop
lods
jle
loope
cmpl
orb
cmc
mov
and
test
data16
mov
cmc
xchg
shll
imul
and
sti
arpl
roll
sub
xchg
push
cmp
movsl
out
daa
push
sbb
sub
lret
push
int3
sub
sbb
xchg
mov
pop
pop
and
les
add
mov
push
daa
in
dec
sub
inc
xchg
inc
mov
jbe
shr
fwait
inc
stos
ror
fbstp
imul
cmpsl
dec
and
add
and
repz
testb
or
aam
pop
jns
fsubrl
pop
or
jg
inc
mov
stos
inc
xchg
hlt
mov
xchg
jae
mov
jg
popa
cmp
out
sub
enter
mov
xor
jo,pt
xor
shrb
into
inc
or
sti
and
mov
repnz
test
xchg
jbe
ss
and
dec
enter
fcomip
jno
or
sub
and
add
mov
js
sub
clc
int3
pop
shlb
fpatan
sub
push
push
pop
inc
mov
ja
loope
cmp
dec
scas
or
add
movsl
lahf
enter
jle
push
xchg
sub
jecxz
fldt
popf
pop
arpl
cmp
iret
add
out
cmp
subb
mov
scas
mov
adc
mov
fdiv
sbb
mov
sbb
inc
inc
ret
mov
mov
mov
rcrl
sbb
aas
add
sbbb
int3
das
mov
push
aam
xchg
clc
aaa
mov
int3
jnp
out
inc
jp
mov
and
rcr
rcrl
insb
mov
fs
clc
add
cmc
dec
xchg
and
ret
cmp
jmp
inc
rcll
ret
mov
jp
lock
cmp
in
add
xchg
mov
fmull
test
sbb
push
mov
push
xor
xchg
sbb
mov
cwtl
xchg
jl
adc
cmp
iret
push
lock
xchg
lahf
jp
pop
or
arpl
mov
pop
dec
mov
push
pop
add
mov
mov
lods
cmp
sub
repz
mov
arpl
into
dec
je
mov
adc
ss
sub
je
les
arpl
out
jle
addr16
sbbb
or
push
mov
bound
mov
ret
and
xchg
pop
cmp
dec
jg
sbb
pop
xlat
cmp
add
scas
movsb
xchg
cltd
sbb
pop
lock
subb
pop
out
cmp
inc
add
jg
xchg
loopne
sti
das
dec
xor
cmp
xor
scas
fs
ficompl
jecxz
sahf
out
xchg
iret
mov
push
popa
push
jmp
clc
ljmp
mov
cmp
mov
jp
adc
shlb
sbb
aas
jle
inc
jae
sub
subl
jmp
and
mov
add
push
jae
inc
jle
xchg
inc
sarl
pop
icebp
mov
mov
shrl
mov
jo
xorb
cmp
mov
mov
stos
xchg
ret
mov
arpl
pop
xlat
pop
adc
pop
and
pop
fwait
xor
mov
xor
addr16
push
inc
xchg
nop
adc
cmp
sbb
xchg
jle
add
les
out
pop
bound
pusha
and
jmp
repz
fldl
mov
or
icebp
ljmp
ficoml
mov
cltd
repnz
sbb
adc
push
mov
xchg
notb
imul
das
jl
lock
dec
les
xlat
pop
inc
pop
sub
cwtl
push
sub
and
out
movsb
les
adc
jb
stc
in
icebp
xchg
stc
popl
push
pushf
mov
sbb
sti
jge
jge
outsb
mov
jb
cwtl
shrb
daa
xor
xchg
push
testb
not
adcb
ret
add
mov
and
sbb
inc
pop
fstpt
xor
dec
imul
mov
jg
pop
xor
jecxz
push
or
mov
inc
sub
les
mov
dec
pop
fstp
jno
sqrtps
sub
mov
and
pop
fisttpll
push
enter
xchg
arpl
push
imul
dec
nop
inc
cmp
bound
pop
loopne
dec
push
insl
leave
outsb
dec
movsl
pop
pop
dec
fstp
dec
add
int3
jbe
lret
fxch
xlat
add
dec
imul
xlat
cmpsb
loop
dec
imul
das
dec
repz
stos
jle
dec
xor
addl
ja
jo
das
add
insl
mov
jmp
inc
dec
dec
push
and
pop
mov
mov
xor
xlat
cmp
test
fisttpll
or
sub
pop
aam
inc
mov
fldl
mov
xor
sbb
cs
jp
das
popa
push
iret
into
cmp
or
xchg
pop
and
lret
add
xor
dec
mov
fxch
mov
arpl
js
mov
test
jae
lret
push
mov
outsb
xchg
aaa
jo
pop
xchg
daa
dec
daa
es
in
pusha
push
xchg
enter
arpl
dec
ss
jg
loope
call
pop
add
add
std
rcrl
jae
idivl
sbb
sbb
or
std
jp
stc
loope
cmp
ret
clc
scas
cmp
aas
or
dec
jae
inc
push
lret
mov
lahf
lcall
sbb
jo
inc
int
dec
les
push
dec
sub
sbb
or
loopne
jmp
ljmp
inc
bnd
data16
inc
adc
test
ret
pop
sbb
cmpsb
lods
outsl
inc
dec
mov
loope
and
mov
dec
fldt
or
mov
sarb
sub
mov
decl
jmp
dec
push
loop
nop
fisttpll
or
and
push
add
dec
push
neg
movsb
mov
loop
jg
add
lret
inc
add
inc
jb
repnz
pop
xor
mov
dec
stos
movb
push
and
test
ds
bound
pop
sub
and
movsb
add
inc
ja
ret
mov
inc
ds
or
dec
and
sub
mov
test
cltd
adcl
jmp
mov
sahf
pop
push
scas
lcall
mov
shlb
push
fwait
and
pop
xor
out
sub
stos
sahf
cmpsb
dec
xchg
enter
or
sbb
ret
inc
ds
incb
stos
add
int
xchg
or
negl
in
and
inc
shrb
add
xchg
imul
and
sarl
adc
sub
add
or
dec
mov
xor
pop
mov
negb
enter
adc
fxtract
ja
cld
insl
push
cld
lock
mov
in
fstl
cld
sub
dec
das
in
pusha
addb
mov
lret
sahf
test
shrl
sbb
flds
fcmovnbe
cmp
inc
fcoms
addr16
aas
sbb
in
sub
sub
outsb
icebp
adc
inc
aaa
pusha
mov
cmp
push
outsb
lahf
xchg
inc
repnz
sbb
jo
in
dec
in
outsb
xor
cmpsb
fldcw
lods
fcmovnu
inc
fstpt
jle
loop
ds
jbe
and
enter
push
gs
inc
mov
imul
and
outsl
inc
sahf
add
xor
ljmp
mov
push
popa
leave
jmp
mov
orb
cs
aad
mov
inc
xchg
mov
loope
dec
mov
cld
test
and
lea
jne
xor
mov
arpl
adc
and
push
iret
add
enter
cli
xor
dec
imul
and
sub
pushf
pop
and
push
js
fwait
andl
xor
dec
cmp
pop
iret
mov
mov
or
enter
adc
icebp
jge
stos
movsb
inc
pop
xchg
lods
ss
or
shll
sub
shll
and
into
jae
mov
sbb
mov
popa
negb
lret
lahf
inc
aaa
ret
loope
std
mov
lret
aas
sbb
nop
inc
or
jecxz
pop
sbb
lods
cwtl
mov
popa
icebp
mov
sub
rolb
and
ret
call
mov
push
jnp
cmpl
or
jmp
into
enter
outsb
inc
les
lcall
decb
xor
movsl
inc
fisttpll
ss
mov
fcomip
or
pop
sub
mov
adc
lret
cmp
dec
push
sbb
xor
loop
pop
push
inc
icebp
js
and
mov
adc
sub
mov
dec
pop
xor
or
popf
into
enter
sub
cmpsl
pop
mov
leave
xchg
hlt
loope
dec
lds
sbb
imul
lods
mov
pop
ret
mov
jnp
sarl
fwait
insb
push
inc
push
pop
dec
andl
lahf
mov
jecxz
pop
cld
testl
pop
xor
inc
outsl
sbb
inc
inc
xor
int3
lcall
sbb
sub
out
xchg
sub
mov
sub
daa
and
add
pop
jbe
jecxz
fcmovne
push
test
in
dec
imul
mov
mov
or
adc
leave
pop
decl
xchg
jb
lret
dec
lods
and
mov
sti
lret
in
shll
lret
mov
sarb
shrl
sbb
mov
inc
aaa
out
xor
aam
sbb
jno
inc
jb
add
inc
mov
add
test
les
push
pop
sbb
loopne
leave
cmp
arpl
ja
mov
imul
insl
add
jbe
and
repz
les
decb
in
and
inc
out
les
aad
sub
jnp
movl
or
fld
adc
push
mov
je
sub
pop
hlt
adc
icebp
adc
mov
lods
mov
jne
adc
jl
or
je
faddl
push
cld
data16
sbb
hlt
aas
aam
ret
mov
push
adc
clc
lret
mov
jge
data16
loop
int
in
inc
popa
lahf
mov
or
ret
aad
push
les
shlb
pop
in
mov
dec
pop
xchg
and
add
cmp
clc
fwait
imul
jge
inc
jecxz
das
push
mov
aam
sub
mov
or
stc
lcall
adc
xor
repz
bound
or
mov
loope
mov
imul
pop
inc
daa
test
mov
sub
lock
xchg
mov
inc
xorb
ja
hlt
push
inc
jmp
adc
stc
adc
adc
sbb
jb
push
mov
push
test
xchg
mov
mov
or
sub
enter
sbb
and
dec
xchg
inc
xchg
jno
dec
push
inc
jmp
hlt
loop
mov
or
cs
bound
lret
xor
mov
jg
xor
addr16
jno
lea
ret
pop
iret
arpl
int3
insl
push
push
out
test
fcompl
frstor
and
jnp
dec
rorl
movsl
in
fisttps
scas
ja
je
in
enter
or
jecxz
push
imul
jle
cwtl
outsl
jns
xchg
xor
push
xchg
inc
jmp
and
es
xorl
or
cmp
sahf
cmovs
sub
enter
sti
pop
add
inc
jge
aaa
inc
or
or
jbe
inc
pop
pop
mov
idivl
lock
jns
adc
in
jns
lahf
out
daa
xor
lret
lcall
enter
adc
add
push
mov
out
push
inc
hlt
inc
sub
sti
inc
test
bswap
and
dec
adc
sbb
enter
add
aas
das
dec
sbb
notl
dec
push
jle
jo
mov
inc
mov
in
pop
imul
adc
popa
lahf
xchg
sbb
into
mov
lret
into
push
lea
push
sbb
shlb
loope
jl
mov
inc
fildll
insb
pop
fadd
in
push
jns
shrb
insl
add
jo
arpl
ret
mov
push
pop
dec
sti
pop
repnz
repnz
les
mov
sub
inc
and
jp
pop
int3
xchg
imul
dec
repnz
push
rcrl
adc
sub
xor
repnz
jno
xor
pushf
xchg
in
je
and
je
subl
bsf
and
hlt
sub
insl
push
and
je
add
jns
and
ds
test
jle
and
mov
push
and
idivl
and
jge
insl
mov
in
push
push
jno
xchg
fiaddl
lods
jmp
outsb
test
je
cwtl
cmp
inc
cmc
and
das
sbbb
dec
mov
sub
cltd
fistpl
test
jecxz
push
xchg
add
cli
xchg
mov
pop
lcall
in
les
out
inc
lahf
out
add
scas
test
push
clc
and
xchg
out
loope
push
int
mov
int3
and
dec
and
sbb
popf
pushf
insl
and
cmc
inc
outsb
fisubs
and
in
lret
push
mov
sahf
push
out
inc
mov
dec
cs
test
leave
ret
rolb
push
and
add
inc
fs
xor
push
pushf
stos
sub
add
push
adc
pop
subb
and
stc
mov
xchg
xchg
jns
sub
dec
mov
mov
bound
mov
push
loope
mov
shlb
xchg
ret
and
sahf
xchg
mov
xchg
js
aam
movsl
and
cmp
and
or
loope
bound
and
pop
sub
int3
in
sbb
xchg
jns
nop
cld
cltd
and
pop
mov
lcall
cmp
dec
aaa
cmpsl
pop
jp
and
ja
pop
and
jae
int3
mov
ficompl
js
dec
and
sti
add
clc
mov
notl
fwait
cwtl
orb
and
xchg
fdivrl
shrb
int3
std
mov
and
mov
xchg
and
pop
das
lea
mov
in
sub
dec
adc
jl
mov
int
scas
jno
iret
or
mov
jl
lods
push
and
or
or
dec
xor
loopne
sub
addps
gs
inc
aad
sbb
adc
ret
repz
int
repnz
shlb
popf
fildl
in
or
mov
push
jle
jo
icebp
lods
sub
sbb
pop
arpl
stc
and
mov
aas
outsb
mov
ficomps
jmp
test
fstpt
xchg
aas
xchg
and
xor
or
and
push
imul
cli
mulb
repnz
ror
cmp
push
mov
mov
test
sub
mov
and
and
push
and
push
or
sbb
or
gs
jmp
sbb
loope
adc
andl
jl
pop
cmp
into
and
cmp
mov
pushf
add
cmpsb
decb
ja
lds
loop
ja
mov
dec
pop
or
stos
ljmp
push
sbb
pop
dec
arpl
rcrl
add
cmpsl
push
enter
mov
movsb
outsb
dec
jge
push
pop
mov
mov
sub
adc
idivb
jnp
xor
inc
or
adc
sub
xlat
xchg
dec
out
push
inc
int
sti
in
jp
mov
adc
adc
sahf
bound
xchg
xor
ret
push
movsb
ss
aad
mov
aam
insl
call
xor
pop
das
push
ds
arpl
sbb
pop
or
or
add
xor
outsb
or
xlat
xlat
insl
lock
orw
insl
loope
push
mov
push
adc
push
fsubs
fstpl
add
or
cld
je
insb
pop
aaa
ja
inc
aad
imul
dec
or
sbb
sbb
pop
or
inc
inc
inc
out
dec
xor
imul
arpl
xor
push
xor
push
xor
hlt
clc
outsl
mov
push
mov
rcll
cmpsb
rol
ds
sbb
shl
jle
xchg
jge
enter
popa
sub
call
mov
mov
lret
insl
scas
sbb
push
or
test
sub
sub
dec
xor
add
call
ret
gs
add
outsl
int3
hlt
cmp
jmp
and
test
adc
adc
dec
lcall
cmp
sti
mov
jecxz
lcall
sbb
mov
bound
mov
xor
std
bound
mov
nop
pop
add
movsl
dec
dec
add
inc
test
pop
fnstsw
push
stos
cli
aas
xchg
cmp
icebp
xchg
lock
repz
out
bound
push
sub
sub
sub
lea
shld
push
bound
ret
imul
cmp
jb
jl
incb
xor
pop
cld
or
in
mov
popa
out
mov
jmp
sub
jecxz
or
inc
sub
adc
lcall
fadds
inc
sbb
sub
push
inc
and
enter
loop
lahf
sbb
mov
and
xor
inc
rcrl
mov
sbb
jae
adc
dec
mov
xor
fcoms
scas
daa
push
or
cmp
add
adc
mov
hlt
mov
mov
pop
fldenv
sub
loop
xor
add
rcr
aad
out
or
jns
ss
jne
fcmovb
jp
inc
mulb
mov
mov
mov
pop
lcall
pop
jb
and
lahf
add
filds
push
dec
data16
daa
mov
push
scas
lret
ja
xor
adc
pop
xchg
push
es
cs
les
lock
ja
mov
xchg
sub
test
std
fdivrl
stos
adc
adc
ss
inc
andb
mov
jl
sub
cwtl
notb
sub
test
inc
imul
and
mov
pop
inc
fsubs
orl
cli
inc
adc
outsl
sub
push
call
clc
and
or
mov
roll
push
imul
jle
cld
jl
dec
push
add
and
aaa
lret
gs
adc
fmul
sti
in
cltd
pop
add
cmc
dec
dec
sbb
adc
repnz
call
xchg
imul
push
fwait
inc
clc
das
daa
cmp
shr
arpl
xor
sub
push
mov
inc
ss
jno
sub
hlt
gs
dec
sbb
fdivrs
ds
cmp
push
dec
jg
add
ss
aaa
aad
ss
dec
rcl
xchg
hlt
icebp
pop
mov
hlt
pop
imul
ret
imul
enter
into
inc
fadds
jns
inc
popa
loope
dec
loopne
lret
add
mov
and
jg
popf
lret
jno
pop
xor
fildll
dec
inc
scas
call
jo
frstor
xchg
dec
push
ljmp
out
inc
or
ret
push
imul
lahf
fldpi
adc
mov
scas
enter
adc
mov
clc
fs
mov
rol
xor
jae
or
inc
int3
xchg
ret
cld
dec
mov
bnd
les
mov
popa
sbb
enter
test
in
and
add
cmp
js
mov
enter
lock
inc
jo
pusha
popa
jp
ljmp
dec
pop
in
xorl
aad
and
pop
sar
cmp
push
mov
mov
mov
es
mov
dec
pop
test
and
and
and
int3
inc
shrb
lods
int3
add
xchg
jmp
sbb
sbb
pop
iret
lods
sub
jge
or
dec
dec
pop
xor
es
cli
jp
test
loope
sub
inc
push
shll
sti
jbe
mov
push
jnp
cmp
xchg
or
stos
cmpsb
aas
xor
notl
cmp
inc
fwait
insl
or
lods
inc
pop
enter
pop
xor
inc
in
push
mov
sbb
and
cmpsl
or
mov
inc
sahf
and
insl
push
jmp
icebp
push
cmp
sub
or
stos
stos
push
mov
mov
cmpsl
cmpsl
movsb
data16
aad
sbb
or
mov
bound
mov
pop
xor
push
lret
clc
pop
mov
inc
sbb
lock
dec
flds
adc
cltd
das
mov
pop
imul
xchg
mov
jb
ret
loope
or
jno
call
or
cmpb
inc
and
scas
xchg
outsl
sahf
fisubrl
pop
cli
repnz
jle
scas
nop
hlt
gs
pop
inc
jecxz
adc
cmpsb
repz
aas
cmc
jbe
and
dec
push
xchg
scas
mov
in
adc
mov
push
mov
fwait
or
imul
lret
push
inc
les
les
je
inc
daa
push
or
pop
pop
in
enter
sahf
dec
jb
cmp
mov
sub
loopne
andb
or
int3
mov
mov
xchg
dec
mov
je
inc
cwtl
xor
mov
ret
mov
fstp
push
inc
mov
mov
in
xchg
mov
pop
fwait
cmp
popa
ret
mov
and
daa
je
lock
les
xchg
enter
test
fisttpl
xchg
inc
mov
test
enter
out
jp
fstpt
idivb
jnp
sub
inc
add
lret
mov
ret
pop
movsb
mov
fs
into
int3
mov
mov
push
or
int
lcall
mov
mov
mov
xor
xor
fs
mov
pop
xchg
pop
insl
lss
sbb
les
or
aad
lcall
add
and
xchg
push
and
lods
inc
xchg
pop
xchg
dec
les
sub
mov
loopne
fwait
mov
loope
jbe
ljmp
pop
and
push
mov
mov
sahf
iret
test
mov
mov
mov
arpl
fnstsw
xor
adc
es
xor
enter
out
jae
mov
push
pop
jae
daa
sbb
pop
sub
hlt
and
aaa
hlt
pop
fisttpll
lods
xchg
popf
ljmp
lods
and
mov
out
add
shrb
sub
inc
inc
cs
dec
icebp
fstp
das
fstpl
mov
xlat
mov
lahf
cld
and
push
xor
or
lahf
loope
push
xor
ret
cmpsl
or
scas
pop
push
dec
shlb
lret
pop
lret
cmp
outsb
cltd
neg
andl
int3
les
adc
scas
out
cmpsb
push
fwait
pop
imul
push
mov
pop
push
rorl
xor
dec
hlt
and
ret
iret
out
lahf
inc
push
in
xorl
dec
sub
les
pushf
arpl
pop
negb
mov
mov
xor
push
imull
pop
xor
test
xor
aas
dec
mov
jge
aam
das
jg
mov
cmpsb
enter
adc
daa
dec
les
or
sbb
jmp
mov
lahf
cld
je
rcrl
jns
aad
fstpt
push
scas
subl
imul
int3
dec
cmpsb
and
aaa
mov
xor
xor
add
adc
mov
jg
popa
fsts
inc
mov
sbb
outsb
inc
add
leave
outsb
shll
mov
rorl
cmp
addr16
mov
xor
push
inc
test
clc
mov
or
xchg
cmp
push
push
push
jle
aaa
mov
enter
bndldx
fsubrp
pushf
xor
or
dec
push
dec
push
mov
fisttpll
pop
mov
sub
xor
les
arpl
push
std
mov
push
outsb
fldenv
dec
ret
sub
les
pop
loop
icebp
dec
pop
imul
out
notb
scas
mov
ret
mov
xchg
lahf
jb
jbe,pt
pop
jno
stos
pop
les
test
cmp
inc
adc
stos
dec
arpl
cmp
xchg
jno
push
push
sub
loope
inc
arpl
cmpsl
pop
push
jge
les
shlb
pop
enter
fwait
inc
cmp
xor
daa
and
cmpsb
dec
das
enter
mov
adc
xor
pop
movsb
xor
out
sarl
sbb
xchg
or
or
push
mov
sahf
mov
pushf
data16
aas
push
or
sbb
les
pop
rcrl
fcmovnbe
lret
scas
push
clc
test
enter
adc
incb
sub
cmpsb
inc
sbb
testl
addl
stos
outsl
push
sub
inc
fsts
adc
and
movsb
cmpsb
pusha
ja
imul
mov
aaa
fadd
dec
adc
pushf
jnp
sbb
stc
sub
enter
in
and
or
insb
subl
mov
jae
ret
pop
popf
jge
fidivl
aas
inc
mov
pop
je
jle
pop
pusha
add
in
push
mov
out
inc
mov
lahf
dec
dec
fisubl
xchg
ficoms
les
add
sub
in
jecxz
iret
stc
imul
stos
cmp
mov
lret
loope
mov
sbb
xchg
mov
arpl
cmpsb
in
pop
xor
mov
test
mov
and
popf
gs
int3
dec
inc
int
xor
sub
ret
scas
sub
insb
data16
mov
sbb
les
sbb
dec
xor
lcall
sbb
xor
faddl
jp
cwtl
xor
mov
and
ret
jne
and
into
xchg
or
add
int3
xchg
frstor
jmp
xchg
pop
jecxz
pop
cld
adcb
inc
mov
popf
adc
and
ja
fiaddl
push
or
and
out
sbb
mov
sub
addb
ds
and
icebp
pop
or
in
xchg
adc
pop
movsb
or
sbb
mov
cmp
push
push
jmp
pop
dec
test
push
mov
clc
dec
movsb
lret
cs
sub
sbb
imul
mov
jle
add
push
addl
dec
lock
mov
out
add
inc
and
sub
hlt
pop
pushf
lcall
cmp
jbe
or
mov
movsb
cmp
mov
popf
sub
and
jns
js
xchg
leave
and
test
adc
movsb
jmp
js
and
es
add
mov
and
and
and
inc
std
adc
cmpsb
mov
or
xchg
sub
fwait
sbb
cmp
xor
and
push
push
jne
pop
mov
mov
dec
stc
aam
rcrb
and
and
cmpsb
test
out
or
and
ret
jnp
xchg
mov
and
mov
shlb
mov
and
fcompl
popf
adc
jb
movsl
mov
or
hlt
or
push
xorl
mov
and
jo
jns
xadd
push
aad
xchg
inc
mov
mov
dec
jb
or
lods
xchg
mov
sub
movsl
mov
cmp
pop
sub
jbe
cmp
and
sbb
fcompl
xchg
mov
je
popa
rcll
xchg
add
mov
push
out
cmpl
sbb
xor
popa
loope
lret
mov
shll
cmp
in
popa
push
sub
cltd
push
scas
jecxz
jno
adc
inc
cmp
push
pop
jp
adc
sbb
fsubrl
pop
int
cmc
jmp
or
pop
cmp
cmpsb
jns
inc
jo
dec
and
cmp
xchg
and
lods
cmc
fnstenv
xor
or
and
mov
add
xor
clc
xchg
inc
and
les
jle
cmpsl
lret
je
rcrb
adc
dec
and
fists
cld
movsb
movsb
repnz
xor
imul
mov
add
jno
aaa
call
mov
loopne
inc
popa
gs
xor
push
cmp
cmc
fdiv
jne
sub
xor
xchg
push
pop
and
mov
mov
popl
cmp
mulb
fsubrl
dec
mov
dec
and
xor
and
rorb
and
jl
mov
mov
sub
xor
iret
push
jo
cmpsl
push
out
and
and
push
sbb
int3
adc
pushf
stos
and
push
add
mov
xor
mov
arpl
and
outsl
mov
add
out
push
in
ljmp
ret
incl
adc
inc
inc
and
in
fiaddl
rorl
and
sub
loope
std
and
and
jle
orl
dec
sbb
sub
test
and
push
or
or
dec
fs
and
push
xchg
mov
scas
ljmp
add
jns
sarl
lret
adc
mov
mov
call
ret
adc
sbb
dec
jp
sbb
pushf
sub
and
das
cmp
dec
xor
movb
pop
jg
jne
scas
lret
mov
sub
jns
adc
or
orb
and
sbb
mov
dec
pop
sar
push
arpl
shrl
and
mov
cmc
pop
out
dec
mov
mull
lock
inc
sub
inc
and
outsb
sub
and
test
sbb
insb
add
push
inc
pusha
jmp
orl
popa
hlt
mov
lret
leave
lock
jbe
ss
pop
push
xor
jge
push
mov
jne
mov
cmc
push
insb
sahf
and
push
sbb
push
and
cmp
fmull
push
mov
imul
mov
incl
sub
or
pop
sub
loope
and
inc
push
cmp
pop
xor
dec
jp
sbb
call
and
clc
loop
cmpsb
aaa
test
das
insl
scas
dec
pop
push
and
int3
and
iret
jb
and
mov
outsl
jae
pop
xor
inc
mov
mov
mov
insl
sahf
and
xchg
sub
mov
sbb
push
js
mov
aas
fwait
imul
insb
xchg
push
inc
popa
xor
lock
pop
cmp
ss
xchg
adc
nop
test
stc
mov
adc
lock
mov
lods
bound
popf
fs
jge
pop
in
pop
xchg
test
ret
lea
aad
and
and
inc
push
enter
add
cmpsl
sbb
dec
pop
mov
sub
outsl
int3
xor
pop
and
cmp
fs
adc
insl
fsubl
push
mov
push
cmc
orl
inc
mov
sbbl
cld
cmp
arpl
mov
and
lods
aas
pop
sbb
and
sarb
cltd
mov
adc
test
mov
movsb
std
and
rcl
cltd
xor
xchg
sub
and
in
icebp
and
jmp
or
fwait
cmp
jge
out
xchg
and
push
ss
scas
or
or
clc
and
outsb
mov
pop
lds
pop
jmp
cmp
mov
mov
xor
cmp
pop
pop
and
push
and
add
dec
pop
jns
fsubl
push
out
xchg
sbb
cmp
mov
ja
sbb
imul
daa
and
and
js
xor
imulb
out
and
mov
movaps
in
xlat
mov
shll
mov
and
add
andb
fmuls
jae
push
push
mov
pop
clc
insl
dec
mov
out
xor
call
ret
dec
push
adc
jmp
and
and
and
mov
inc
adc
mov
ss
dec
shr
add
pop
addr16
repnz
fisubl
mov
jp,pt
and
inc
xorb
push
and
int3
xchg
fs
flds
xchg
ljmp
addr16
add
add
jecxz
pop
aad
imul
les
test
inc
add
mov
loope
jmp
fnstenv
and
arpl
jo
cmp
shl
fs
cmp
and
add
xchg
cmpsb
pop
insb
sub
fdivl
repnz
dec
movsl
lret
xchg
aas
and
cmc
inc
add
and
aam
push
xor
scas
and
jg
and
dec
xchg
mov
movsb
and
sbb
insb
loop
les
mov
sub
xchg
and
push
loop
fisubrl
mov
std
push
xchg
xchg
push
jp
aas
lock
movsb
pop
pop
inc
pop
les
mov
lods
and
sbb
mov
mov
loop
xchg
cmovs
push
dec
xchg
lahf
imulb
push
jb
sarl
xor
test
test
jne
dec
push
enter
and
dec
sar
popa
mov
fnsave
iret
aaa
aaa
mov
enter
sub
fisubs
imul
sub
xchg
push
inc
mov
pop
fwait
stos
xor
shrb
inc
addl
sti
jbe
xchg
cmp
jle
or
jb
push
mov
loopne
sub
cld
je
shlb
leave
fucomp
or
or
insl
pop
ror
sbb
and
out
mov
xchg
dec
jg
addr16
es
inc
enter
dec
insb
add
sti
inc
mov
repz
jecxz
push
xor
outsb
pop
fldcw
fsubrl
js
and
cli
jp
les
fstp
imul
push
imul
jno
fcmovu
xchg
popa
xlat
push
gs
sub
fimuls
insl
pop
add
mov
adc
mov
sti
jmp
fnsave
jecxz
jb
shll
pop
cltd
les
mov
js
pop
push
lea
leave
or
or
push
ljmp
dec
lods
push
mov
es
movsl
pop
out
push
fnstsw
insb
in
push
mov
ficompl
inc
sub
push
movsl
and
inc
in
push
cmpsl
mov
push
mov
push
cmp
lock
add
mov
mov
leave
push
loopne
jno
mov
xlat
lcall
xchg
stos
pop
push
cmpsw
fmul
lret
rcl
rcll
outsl
mov
dec
xor
lret
inc
adc
popa
lods
add
sbb
dec
push
cmp
outsb
mov
mov
push
push
mov
les
push
cmp
mov
add
adc
inc
lods
pusha
dec
dec
pop
jl
mov
inc
dec
rorb
stc
sbb
inc
mov
out
mov
dec
jge
inc
mov
shl
pop
dec
pop
clc
and
pop
mov
sbb
sahf
dec
hlt
adc
popa
subb
stos
out
les
test
ss
in
adc
popa
xlat
cmp
inc
mov
jmp
outsl
sbb
ljmp
fstpl
je
sbb
fucomip
lock
dec
xor
pop
jno
dec
cltd
sbb
push
enter
sub
aas
imul
xchg
push
lock
push
and
sbbl
push
mov
imul
mov
mov
mov
les
ljmp
or
add
jns
sbb
addr16
xor
xor
ja
int3
pop
andl
inc
xchg
push
mov
jmp
mov
dec
and
ds
sbb
in
cmpsb
push
pop
inc
inc
xchg
mov
pop
and
mov
mov
pop
and
pop
mov
push
pop
or
mov
and
ret
pop
fwait
jg
xor
jmp
loopne
inc
adc
aad
pop
aaa
lods
mov
loop
add
xor
sbb
dec
enter
push
enterw
rcll
lcall
mov
inc
aam
loop
mov
imull
pusha
xor
push
jne
xchg
add
jg
push
and
cli
jp
aas
add
pop
ffreep
aaa
mov
jno
lcall
push
sub
xchg
sahf
es
ret
sti
out
ret
xchg
inc
lahf
push
les
cli
add
dec
cmp
xchg
adc
loope
inc
push
jmp
push
lock
repnz
les
loop
addr16
ror
enter
inc
sub
and
mov
push
add
inc
xchg
dec
pop
fcmovu
sub
inc
stos
xchg
cld
fs
and
ret
lds
cmp
test
pop
mov
pop
addr16
pop
ret
mov
push
out
adc
inc
in
or
push
mov
ret
mov
mov
outsl
pop
push
mov
movsl
mov
add
mov
addl
into
add
inc
in
imul
push
mov
int3
ret
pop
push
lahf
sbb
into
add
dec
js
mov
mov
cmovns
not
shl
push
jecxz
sbb
out
add
lahf
add
cld
je
jne
pop
adc
fbstp
lret
add
test
adc
ss
fcmove
js
and
push
adc
idivb
gs
jns
sbb
andb
jbe
imul
jle
pop
bound
sahf
fmuls
mov
jge
fs
andl
mov
mov
inc
cmpsb
sbb
idivb
ret
sub
mov
and
jge
or
inc
sbb
jnp
mov
int
pop
jmp
fbld
xlat
clc
xchg
sub
pop
sub
pop
ss
sarb
jnp
mov
cmpl
ljmp
mov
sub
xchg
mov
iret
mov
aas
pop
pop
pop
fsts
addr16
inc
xchg
les
add
jg
in
adc
adc
pop
repnz
sahf
or
loopne
cmc
lret
lahf
insl
mov
in
jl
stos
xchg
push
jb
cmpsb
xor
push
loopne
and
outsl
push
scas
xchg
out
push
ja
cmp
enter
xor
aas
sarb
adc
repz
std
test
jecxz
sbb
add
inc
adc
mov
xchg
adc
iret
and
cmp
xorl
xor
sbb
adc
or
xchg
xor
ja
aas
aas
lea
cli
movsb
ret
leave
mov
in
shrl
pop
inc
pxor
adc
xor
or
imul
inc
dec
and
in
sbb
enter
jbe
push
sbb
leave
ljmp
or
imul
jns
dec
std
sbb
pop
xor
insl
enter
ror
imul
les
adc
or
sub
sbb
dec
scas
cmc
sbb
cld
xorb
out
dec
xchg
or
and
out
inc
enter
jnp
inc
jbe
cmpsb
xchg
mov
ret
fwait
inc
cmpsb
adc
cmp
dec
bound
push
iret
mov
movsb
xchg
add
movl
daa
push
in
xchg
leave
ret
out
nop
mov
repnz
dec
loopne
pop
rcr
mov
or
mov
adc
lea
inc
rorb
jo
icebp
arpl
outsb
inc
fistps
cld
mov
testb
bound
arpl
imull
cmpsl
cld
sbb
pop
rolb
js
jae
popa
lcall
insb
pushf
xchg
aad
add
repnz
xchg
mov
or
jle
sub
sbb
movsb
inc
imul
jnp
jp
mov
adcb
push
das
aam
dec
mov
add
imul
pop
idiv
test
or
lds
insl
aam
fmull
and
mov
pop
inc
ret
push
adc
bound
insl
pop
vpunpcklqdq
into
inc
or
inc
sub
fiaddl
repnz
les
int3
and
jg
inc
hlt
sub
js
je
sub
das
stos
inc
push
push
push
mov
jecxz
mov
dec
pop
inc
mov
movsl
cmpsb
sbb
push
retw
mov
movsb
mov
mov
pop
movsl
test
xor
inc
inc
jbe
xchg
sub
add
dec
mov
leave
dec
clc
in
sub
test
jbe
subb
or
loope
mov
xor
sub
lods
or
mov
sbb
fildl
fincstp
inc
mov
or
sbb
arpl
pop
mov
fsubrl
insb
xchg
push
xor
test
and
cwtl
mov
xchg
rcll
fidivrl
add
add
out
and
add
arpl
inc
pop
fldenv
gs
loope
add
pop
sub
cmp
jns
shll
and
sub
lock
cmpsb
inc
cmp
push
push
jge
mov
xor
fstpt
imulb
sbbl
jno
pop
pop
sbb
xor
push
mov
sbb
lret
add
fs
cmp
cmp
cmp
adc
mov
outsb
jns
pop
repnz
nop
loope
shlb
mov
xchg
out
push
jae
js
sbb
jecxz
in
inc
jnp
iret
lds
pop
and
and
mov
or
sbb
scas
call
lcall
out
pushf
or
enter
cwtl
sbb
js
dec
cltd
outsb
arpl
xor
ret
fcoms
cmp
xchg
lret
arpl
leave
in
mov
outsl
insl
jge
lock
mov
mov
mov
or
mov
inc
ret
pop
mov
xchg
mov
cltd
insl
repnz
dec
sub
sbb
jle
ss
int
scas
stos
push
mov
adc
insb
inc
xor
je
mov
sub
mov
mov
and
addl
repz
lahf
inc
sub
or
xchg
cmpsl
loope
adc
jnp
jns
pop
dec
orl
adc
dec
clc
aam
mov
jmp
mov
sbb
mov
sbb
les
dec
inc
or
mov
mov
pop
aam
arpl
sub
jle
aaa
mov
lret
stos
inc
es
sbb
inc
lcall
or
stos
into
das
aaa
fstpt
mov
jge
sub
and
sahf
aaa
pop
jle
or
mov
add
xchg
dec
push
sti
inc
arpl
mov
dec
push
dec
sbb
and
lds
les
sbb
push
mov
jg
cld
aad
adc
mov
xor
mov
adc
sub
sub
dec
scas
andb
imul
sbb
xchg
stos
dec
js
pop
lret
inc
inc
and
xchg
xchg
ret
or
and
aas
pop
test
ret
imul
and
mov
daa
xor
xchg
xchg
cmp
push
mov
test
cld
pop
jae
jecxz
jecxz
inc
push
decl
cmp
jbe
or
ret
in
aam
into
stos
imul
mov
inc
and
sbb
or
push
inc
lret
rcll
xor
push
inc
mulb
mov
sahf
and
pop
or
js
les
dec
insl
sbb
fcoml
data16
jge
and
mov
xlat
xchg
jb
sbb
outsl
push
xor
xorl
gs
mov
stc
mov
jp
sub
adc
inc
fnsave
das
sbb
out
rcrl
cli
and
or
mov
lods
popa
dec
gs
xchg
leave
subl
and
sub
mov
mov
enter
sub
sub
into
push
pop
jae
cmp
sub
fmuls
mov
clc
push
ja
andl
das
adc
xor
insl
lods
insl
push
aad
jge
popa
imul
push
notb
rol
daa
das
lret
iret
and
adc
aaa
shrb
hlt
mov
insb
add
int
insl
pop
jno
sbb
inc
push
jmp
les
cli
dec
aaa
xchg
arpl
lahf
mov
mov
cmp
push
cmp
testl
les
into
lods
xchg
sub
cmp
cmp
out
mov
cli
ja
adc
pop
add
lret
mov
rclb
dec
xor
lret
iret
mov
inc
push
fidivs
sbb
xor
les
fisubl
adc
ret
popa
das
les
imul
enter
orl
mov
mov
imulb
rol
stos
outsl
push
imul
add
pop
and
dec
push
fildl
adc
jne
fisttpll
push
enter
mov
dec
jo
movsl
clc
xchg
jno
pop
sbb
daa
fwait
sub
push
mov
xchg
mov
sahf
push
dec
out
jmp
mov
xchg
inc
arpl
xor
inc
mov
leave
inc
retw
ja
pop
dec
sbb
fldl
gs
add
or
sub
sub
out
cmp
imul
xor
add
mov
add
repnz
pop
testb
mov
sbb
cmp
jns
ret
into
cld
sub
shlb
shrb
jb
and
arpl
mov
mov
shlb
and
popa
sbb
data16
shll
mov
mov
filds
loopne
subl
add
xchg
add
mov
rcrb
daa
pusha
jmp
xorb
arpl
loope
mov
outsb
in
xchg
addl
les
dec
inc
pop
es
pcmpeqd
sbb
or
into
and
mov
pop
daa
inc
enter
jnp
mov
push
in
int3
push
and
das
jle
and
fs
stos
mov
shrb
cli
lea
in
push
cmpsl
dec
inc
add
inc
sbb
sarl
sahf
nop
dec
mov
sub
negb
dec
lea
push
jp
sub
js
sbb
sub
and
or
es
popf
adc
std
jl
outsl
popa
lret
xchg
sbbb
or
pop
dec
jo
mov
dec
inc
enter
fstl
mov
cs
pop
and
sub
loop
hlt
push
xchg
daa
inc
pop
divl
sub
xchg
jbe
and
das
test
bound
push
dec
les
dec
shrl
imul
mov
iret
jp
and
jb
pop
or
pop
or
add
popa
xor
sbb
jge
daa
clc
cmp
ss
inc
sbb
xchg
movsb
cmp
xchg
lea
subl
rol
stos
outsl
adc
add
ret
out
add
mov
clc
leave
sbb
nop
push
les
pop
clc
sub
into
xor
mov
and
or
arpl
imul
pop
mov
fst
ret
loopne
outsl
ja
aas
mov
mov
xor
retw
lret
dec
or
fdivp
inc
insb
enter
lret
inc
mov
pop
std
jns
cmp
jno
fstpl
push
sahf
mov
sub
cs
mulb
enter
inc
pop
add
jno
clc
jbe
mov
dec
movsl
mov
xor
push
jo
add
inc
mov
push
ljmp
inc
les
arpl
sbb
scas
leave
adc
insb
pop
push
rol
inc
adc
std
ja
arpl
hlt
or
and
mov
movsb
ja
fwait
push
mov
ret
add
xchg
mov
xchg
cmp
out
inc
fimull
mov
mov
xchg
mov
icebp
enter
stos
add
xchg
popa
rcll
pop
les
ret
cwtl
in
in
loopne
dec
arpl
fildl
xchg
sub
mov
fdivrl
sub
mov
jp
sbb
popf
aad
ret
xor
jne
repnz
add
mov
daa
scas
ret
fwait
or
mov
inc
mov
scas
cs
xchg
lds
sub
sahf
lds
and
inc
daa
ret
mov
loope
cmp
push
mov
sub
movsl
inc
sahf
push
mov
inc
xor
fistps
popa
mov
lods
sti
fisubl
sub
mov
hlt
xchg
pusha
sbb
and
int3
adc
adc
push
fwait
lcall
mov
mov
dec
mov
stos
xchg
xchg
sbb
adc
mov
scas
cmpxchg
daa
inc
pushf
jge
dec
dec
jg
jle
inc
sbb
inc
or
imul
subl
int
cmpl
fs
cld
insb
push
jo
stos
cmp
sbb
outsl
mov
xchg
nop
sbb
sub
inc
in
adc
pop
cmp
incl
cmp
xchg
insb
cltd
imul
pop
fcmovu
sub
iret
mov
xor
cmpsl
jo
int
pop
mov
fsubrl
xchg
addr16
mov
jnp
int3
inc
mov
data16
test
rol
inc
adc
iret
shr
lcall
in
fldl
nop
aad
sbb
xor
and
pop
int3
out
cli
imul
adc
repz
stos
pop
test
shrl
aas
add
lcall
imul
pop
mov
dec
inc
mov
enter
in
jae
and
cmp
jne
jbe
mov
aad
mov
add
data16
xchg
cmpsb
pop
iret
sub
pop
enter
pop
xor
outsl
jno
sti
ret
mov
sti
sub
push
arpl
mov
sahf
lcall
pusha
sub
movsl
shlb
mov
daa
cltd
pop
loopne
mov
int
cmp
loop
les
ret
clc
fnsave
push
aas
adc
out
jl
aad
push
int
jae
inc
data16
in
jg
shll
ret
adc
lock
outsl
pop
mov
enter
mov
call
movsl
out
sub
aas
imul
call
mov
pop
mov
sbb
lea
enter
mov
imul
andb
mov
xor
lcall
stos
dec
jle
push
mov
pop
mov
enter
or
jecxz
xor
dec
push
loopne
je
and
outsb
jg
leave
and
push
dec
add
jl
pop
and
cmp
mov
dec
addr16
sub
cmpsl
xor
subl
pop
out
cld
mov
mov
cli
andb
loop
push
jecxz
inc
cs
bound
sub
cmpsb
ss
and
int3
or
aad
jae
mov
lods
adc
and
fmul
mov
out
mov
add
cmc
cwtl
test
cmpsl
addr16
pop
aad
and
inc
and
add
add
test
or
aam
ss
daa
stc
jp
loopne
cmp
sarl
inc
pop
add
fwait
mov
push
jmp
jp
sub
pop
js
jg
flds
call
or
jg
imul
add
xchg
dec
popa
pop
insb
push
sub
pop
loopne
jmp
and
mov
sahf
inc
jp
pop
xor
mov
mov
add
or
jl
xlat
movsb
mov
and
mov
les
inc
rdpmc
or
daa
jl
pop
and
and
lret
lds
and
mov
insl
in
xchg
sbb
sbb
adc
push
jno
lcall
pop
cmp
xor
xchg
fcmove
imul
out
imul
addr16
hlt
mov
imul
hlt
mov
cmp
fldenv
pop
jecxz
dec
adc
mov
cmc
and
popa
aad
pop
push
mov
les
cmpsb
xor
repz
sub
mov
or
inc
push
push
mov
cmp
insb
lcall
inc
add
inc
pop
loope
cmp
add
push
push
dec
push
hlt
inc
dec
xchg
sets
mov
popa
mov
xchg
xor
into
inc
push
jb
push
out
in
rorb
out
push
cmp
mov
dec
es
add
roll
jge
push
arpl
mov
fisubrl
pop
out
push
pop
popf
sbb
push
inc
sbb
mov
je
jb
push
jno
scas
call
xchg
movsl
clc
fs
jle
leave
pop
or
or
les
sbb
xor
sub
lcall
outsb
call
pop
repz
ss
fwait
ret
jae
dec
jl
hlt
xor
jge
inc
shll
sbb
orb
mov
and
jbe
or
pushf
or
loope
pop
adc
test
scas
sbb
add
xor
out
mov
fisubs
pop
int
add
aad
fsubrp
out
pop
lret
jae
je
les
das
push
test
int
pop
daa
xor
push
sahf
push
dec
insl
insl
test
fidivrs
aad
ret
stc
sarl
dec
sahf
ss
repnz
jnp
fcoml
negl
add
mov
push
popf
outsl
movsb
push
stos
mov
lret
adcl
sbb
dec
out
mov
enter
sub
call
jb
mov
xchg
xchg
ljmp
pop
hlt
cli
push
push
adc
enter
dec
stc
mov
inc
inc
pop
mov
xlat
sub
or
mov
pop
jge
mull
lahf
rclb
xchg
movsb
imulb
push
leave
push
inc
xchg
mov
sbb
inc
inc
add
inc
push
clc
xor
addl
movsl
jns
adc
aad
sbb
sbb
jb
sahf
push
rorl
mov
add
jl
movsb
mov
jle
int3
mov
push
push
jne
add
inc
imul
pop
mov
testl
lcall
add
addr16
jne
mov
pop
out
pop
sahf
cmp
sbb
nop
inc
jl
mov
sub
in
enter
add
or
sub
js
mov
mov
fld
push
cmp
dec
cmpb
mov
in
pop
inc
fsubl
inc
push
iret
ss
mov
sbb
push
sub
and
inc
in
push
jge
divb
popf
subl
shr
push
arpl
add
sub
divb
jmp
idiv
cmp
stos
add
mov
fdivrs
aad
negb
scas
mov
adcb
insl
adcl
shrb
and
mov
push
push
clc
mov
jle
and
fmull
jne
xchg
inc
dec
xchg
cwtl
mov
or
pop
inc
dec
xor
out
addr16
cmc
fucomp
inc
bound
cmp
sub
add
andb
jle
stc
adc
ror
push
daa
xor
lock
fldl
or
xor
mov
xor
ljmp
lahf
daa
movsl
xchg
dec
or
sti
dec
xor
sbb
adc
and
push
add
out
sub
shll
in
xor
andl
cmp
popf
lcall
xchg
jecxz
loope
or
push
xor
fwait
pop
call
faddl
pop
sbb
push
js
add
cmp
movsb
fs
or
adc
lret
movsb
mov
cmpsl
outsb
jl
insb
cmp
pop
jmp
ss
sbb
fistl
std
es
test
jb
mov
repz
or
xchg
adc
mov
jle
loop
idivl
ffree
pop
inc
push
inc
jns
stc
mov
jb
out
push
jae
imul
jecxz
sbbb
mov
xor
jmp
xlat
jbe
push
test
xchg
add
les
movsl
pop
cmp
sub
sub
imul
add
sahf
bts
enter
clc
dec
pop
inc
jnp
dec
ja
clc
mov
enter
fldpi
sbb
inc
in
xorb
mov
dec
in
lret
inc
jb
xlat
inc
mov
adc
dec
sub
aas
jmp
xchg
pop
ret
dec
outsl
enter
xor
mov
push
lcall
mov
dec
jp
and
mov
pop
xor
xchg
sbb
lods
mov
nop
jecxz
add
dec
stos
add
sbb
xlat
sub
cwtl
negb
fdivr
bound
lds
add
into
imul
cmpsb
push
popa
dec
bound
insl
out
dec
hlt
cmc
in
jge
shlb
push
sbb
lods
imul
mov
jmp
imulb
mov
sub
ret
lret
mov
push
ljmp
lock
mov
vmovsd
aad
xor
cld
movsb
stos
js
pusha
je
inc
jg
das
pop
cwtl
pop
sub
enter
mov
sahf
out
mov
in
sub
rorb
push
iret
imul
mov
xor
rol
xchg
test
jge
mov
bound
loope
or
push
or
mov
adc
ret
enter
xor
push
push
ret
subl
jno
popf
in
and
psubw
out
xchg
push
jg
jmp
mov
sub
fsubrp
lock
cmc
dec
add
rolb
aaa
imulb
add
adc
pop
mov
xchg
bound
je
cmpsl
mov
pop
push
sbb
test
jb
data16
outsb
inc
lds
jl
faddp
imul
stos
arpl
arpl
loopne
ja
inc
testl
push
inc
and
sub
cmpsb
les
mov
aam
and
jb
lcall
popf
inc
fiaddl
iret
leave
movsl
pop
enter
push
and
mov
sbb
or
lods
enter
jl
and
mul
dec
pop
jle
or
ja
call
jo
rdmsr
popa
pushf
mov
decb
ds
push
out
cmp
faddp
pushf
sub
cmp
test
sub
repz
cmpb
sbb
ljmp
imul
sub
subb
inc
lds
fisttpll
mov
arpl
jg
test
rolb
dec
mov
mov
rol
mov
movsl
outsb
enter
ret
fildll
in
add
push
jne
je
fisubrs
cli
mov
mov
aaa
mov
xchg
jae
popf
push
xor
insb
or
fisubrl
push
lock
shlb
sbb
lahf
daa
inc
les
ret
fcompl
inc
push
das
mov
out
jae
aad
pop
mov
mov
sbb
icebp
jecxz
bound
call
and
leave
adcl
enter
mov
pop
sbb
mov
stos
jge
out
lods
movsl
std
inc
aas
dec
and
xchg
pop
add
stos
ljmp
fisttps
shrl
incl
nop
and
xchg
mov
daa
popa
jle
lcall
gs
rorl
sub
loope
mov
addr16
inc
push
add
je
inc
sbb
xor
xchg
sahf
jno
add
jne
sub
cmp
and
adc
mov
jle
or
inc
pop
cld
xchg
ja
cmpl
movsl
mov
jge
sbb
jns
scas
mov
mov
xchg
data16
enter
push
or
mov
lret
loopne
xor
mov
movsl
xor
pushf
sbb
call
jo,pn
mov
dec
test
movsl
dec
mov
or
sub
into
xchg
insl
rorl
add
dec
inc
imul
xchg
es
rcrl
fs
sub
loope
xchg
jae
out
lds
xor
out
lcall
mov
adc
cltd
leave
scas
mov
cmpsl
lea
sbb
aad
pop
inc
sti
andb
inc
rcll
in
push
dec
loope
jle
pop
push
xor
arpl
jmp
cmc
stos
ja
mov
mov
xlat
cmovs
sub
enter
in
mov
cld
sub
lds
mov
mov
jns
cmpb
xchg
xchg
dec
push
inc
pop
mov
aam
push
jb
sub
std
rcr
xchg
popa
lret
inc
into
es
test
mov
pop
jg
jg
mov
in
in
jg
cltd
sar
stos
jns
aaa
repnz
in
add
mov
xor
mov
cmp
or
jmp
addr16
cmpsb
icebp
sub
sbb
jnp
jg
rorl
sbb
xchg
imul
sub
lods
xchg
aam
addr16
sub
inc
lret
mov
in
ret
hlt
sbb
push
cltd
inc
icebp
push
and
xchg
mov
imul
shlb
dec
int
call
sahf
inc
leave
mov
dec
mov
or
pop
fnstcw
and
xor
and
shll
xchg
leave
roll
ret
xlat
xchg
aad
and
mov
xor
pop
and
stos
out
sub
or
push
or
pop
xor
push
jae
int3
sub
xor
arpl
xchg
inc
inc
dec
cmp
and
push
mov
les
lock
mov
push
leave
inc
imul
lret
sub
imul
cmp
xor
pop
divl
enter
push
pop
pusha
in
aam
xor
push
loop
jbe
in
jmp
ja
cmp
int
out
aad
cli
xchg
lds
adc
cli
insb
pop
xor
mov
loope
push
or
movd
mov
inc
loope
repz
sbb
rolb
jmp
add
sub
shrb
dec
pushf
jne
xor
out
sti
sti
mov
or
jle
insl
xor
pop
inc
enter
adc
and
jp
dec
pop
cmp
cmpsl
push
dec
mov
xchg
call
iret
in
jbe
imul
push
inc
arpl
xor
or
je
rcrb
dec
out
push
call
sahf
iret
iret
mov
sub
fstpl
sti
shrb
lret
mov
add
sub
inc
addb
mov
pop
rcl
and
push
pop
sbb
jno
xchg
in
jno
gs
sub
sub
push
gs
shl
sbb
pop
push
pop
mov
xorl
adc
enter
push
lods
sti
es
xor
shll
rdtsc
sbb
cmpsb
iret
push
lahf
shlb
stos
lret
jns
inc
cli
push
ljmp
fcomp
sub
xchg
cld
insb
pop
dec
dec
test
pop
or
dec
ljmp
shll
xchg
pop
mov
int3
mov
sbb
scas
dec
cmpsb
mov
sbb
arpl
lods
adc
xchg
jge
mov
adcl
pop
add
inc
cmp
jbe
push
sbb
jnp
inc
inc
or
xor
xchg
pop
daa
and
push
pop
pop
ret
xchg
addr16
or
jle
fsts
out
push
arpl
pop
pop
jle
shr
dec
subb
test
adcb
xlat
mov
inc
popf
fwait
add
jno
negb
cmpsl
fdivl
sub
add
mov
outsl
xor
lods
sbb
rorl
mov
and
mov
sti
and
dec
pop
sbb
and
ret
mov
mov
fwait
roll
lahf
adc
addr16
push
jne
push
mov
dec
jle
cmp
das
cmc
ret
xchg
data16
mov
outsl
in
scas
push
and
cltd
fadd
lahf
in
add
and
daa
clc
faddl
adc
add
call
pop
or
rcll
mov
cld
and
ja
fisubl
mov
ret
shl
sub
nop
mov
cmp
outsb
loopne
and
xor
sub
add
inc
das
pop
push
xor
xchg
lds
mov
sub
scas
dec
in
add
xor
ss
inc
enter
out
in
mov
addr16
dec
into
pop
push
pop
inc
aad
in
and
cmp
mov
mov
mov
mov
in
lahf
push
fs
pushf
xor
mov
imul
mov
push
xor
add
push
movaps
push
es
shr
xchg
sahf
in
mov
mov
inc
or
and
cmp
pop
and
jae
jae
or
adc
sub
inc
shlb
dec
jb
pop
dec
inc
out
jl
ss
es
cli
lret
pop
lock
ror
cmc
adc
mov
adc
add
jns
jle
sbb
jge
cmp
mov
jb
dec
add
jecxz
rorl
sub
pop
mov
out
inc
repnz
pop
pushf
cwtl
xlat
les
push
popa
xchg
cmpsb
repnz
daa
mov
jle
scas
rcrl
aam
push
enter
cmp
jmp
jbe
lods
rcll
int3
mov
lea
inc
xor
pop
gs
mov
sub
in
pop
mov
call
push
dec
mov
in
fadds
data16
adc
and
testl
fcmovnbe
clc
inc
pop
jp
inc
push
sub
mov
adc
adc
inc
movsl
xchg
int
sub
stos
test
jg
pop
cmp
std
or
xor
roll
ljmp
xor
les
mov
rcrl
in
xchg
jae
add
push
fnstsw
dec
daa
icebp
push
and
xchg
ret
aam
addr16
sub
out
inc
loope
inc
popf
xchg
daa
lahf
xor
leave
mov
dec
pop
icebp
pop
sbb
ror
xor
or
notl
pop
xor
lret
dec
or
lahf
jnp
out
push
dec
adc
pop
sub
repz
lahf
xor
sub
imull
arpl
es
xchg
add
int3
scas
call
mov
popa
sarl
mov
sarl
iret
xor
testb
inc
pop
cwtl
les
inc
aad
sub
push
lcall
cmp
lea
test
cmpl
xchg
push
cmp
lret
mov
sahf
mov
and
js
mov
lds
xorl
mov
movsl
mul
or
adc
xchg
scas
push
lods
jge
inc
add
ror
pop
cmp
shll
cld
mov
pop
aad
js
nop
inc
mov
imul
or
cmpsb
ja
or
out
frstor
mov
xlat
ds
inc
in
cmp
cltd
popa
in
mov
jge
insb
sbb
and
pop
stos
fldenv
xor
cwtl
sarb
insl
mov
add
sub
dec
out
adc
or
pop
gs
lret
mov
mov
cmp
idivl
inc
xchg
into
mov
cmc
popf
and
iret
pushw
push
les
lcall
or
js
inc
cmp
fstpl
sbb
push
pop
jp
xor
sbb
mov
shlb
stos
adc
or
sbb
cmp
mov
dec
push
xchg
inc
pop
ss
ret
fucomi
cli
push
jle
adc
andl
and
sub
mov
adc
mov
pop
adc
xor
sbb
jle
or
mov
jg
mov
mov
enter
sbb
pop
leave
add
orl
enter
push
daa
int3
jb
lret
mov
ss
comiss
inc
movsl
outsl
or
push
pushf
rcll
mov
dec
xchg
clc
mov
mov
sub
fbld
outsl
mov
xlat
xor
stos
cmp
je
or
cmp
je
sarb
imul
ljmp
aas
mov
jp
fmuls
xor
push
cwtl
jmp
test
inc
sbb
inc
insb
hlt
testb
dec
scas
pop
stos
mov
data16
xchg
and
cmpsl
into
inc
mov
ljmp
mov
dec
jecxz
mov
sub
es
leave
arpl
or
adc
push
cmp
adc
jns
lock
ljmp
dec
mov
jmp
xchg
sti
fxch
test
jo
pushl
dec
enter
aaa
ljmp
lods
pop
cmp
xchg
xor
sahf
popa
out
push
movnti
cwtl
push
rorb
addl
and
sbb
int
cltd
insb
add
cmp
or
ret
mov
and
mov
adc
dec
mov
fwait
dec
lea
jns
lods
imul
lret
push
adcl
jns
xlat
mov
xor
inc
sub
jg
adc
inc
xchg
sub
imul
mov
dec
insl
jae
and
add
pop
inc
addl
inc
adc
cmp
cmp
sub
add
sbb
scas
enter
push
cwtl
test
sbb
dec
inc
into
push
sbb
nop
loop
leave
lret
push
push
jmp
andb
aad
xchg
sub
mov
cmp
enter
out
imull
imul
cmp
add
add
scas
fcmovne
mov
pusha
sbb
jecxz
cmc
cmp
lock
add
clc
cmp
xchg
sub
mov
in
cld
inc
enter
ret
sbb
xor
jb
jmp
lahf
sub
or
sbbb
push
popf
mov
aaa
mov
movsb
mov
xor
pop
out
pushf
js
adc
cwtl
mov
imul
sbb
test
lret
sub
xchg
sub
mov
or
test
jmp
cmp
mov
pop
cld
push
pop
xor
in
jmp
int
lahf
scas
inc
mov
insb
mov
add
movsl
and
shlb
add
fdivl
hlt
adc
repnz
enter
xor
ficoms
nop
aaa
mov
sbb
or
lods
mov
jb
mov
sti
and
inc
pop
pop
and
adc
jo
jge
fisttpl
fisubrs
out
sbb
xchg
mov
movsb
ss
adc
sub
cltd
test
push
lgs
push
mov
cld
xchg
cmp
jge
out
in
loopne
stc
mov
rorl
pop
outsl
cmp
sub
jle
jo
mov
movsl
jno
jae
sub
cmpsb
mov
ret
mov
inc
sahf
popa
icebp
fcomi
xchg
add
push
mov
fucompp
xor
cmpl
jnp
hlt
adc
leave
fdivrs
das
pop
arpl
imul
cwtl
cmp
insb
xchg
jge
jmp
mov
inc
adc
cmp
lods
jge
mov
xor
int3
les
popf
addr16
cmp
xor
cmp
fdivl
mov
lds
mov
ret
fnstcw
adc
pop
div
sub
xchg
dec
add
pusha
dec
inc
and
scas
addr16
enter
xchg
cmc
add
jbe
push
das
xor
es
mov
inc
mov
mov
sbb
sbb
int
adc
or
add
jnp
push
jmp
fsub
mov
and
sub
sub
or
cmp
mov
imul
jmp
jo
mov
pop
sbb
dec
push
push
gs
push
xchg
xchg
inc
cmpsl
pop
outsl
sub
jne
xchg
mov
push
mov
ljmp
inc
push
and
push
and
jb
lods
enter
imul
mov
sbb
xor
sbb
or
pop
xchg
les
shl
lahf
mov
sbb
out
daa
ret
xchg
mov
bound
in
or
iret
mov
push
into
jmp
push
jbe
push
fldl
fistps
idivb
stos
pop
lcall
add
or
ret
mov
pusha
sub
imul
mov
inc
fdivl
test
add
sti
mov
daa
xchg
xchg
rcll
dec
call
pop
subb
bswap
mov
sub
cld
xor
stos
push
dec
push
dec
arpl
iret
in
pop
sub
mov
gs
mov
cmp
mov
jnp
les
xor
movsb
xchg
ja
aad
rclb
mov
jle
mov
add
dec
fsubl
jne
pop
dec
mov
ret
jge
mov
daa
xor
xrelease
imul
adc
mov
add
dec
aas
cwtl
dec
jl
inc
xchg
call
idivb
dec
push
mov
ss
cmp
arpl
les
dec
insl
enter
dec
imul
bound
mov
mov
lds
mov
sub
stos
fldt
hlt
pop
arpl
test
or
ffree
aaa
je
jmp
or
enter
push
ja
jecxz
enter
inc
xchg
outsb
fidivs
cwtl
sbb
xchg
xchg
fisttps
xchg
hlt
sahf
cmpsb
enter
out
popf
movsb
inc
and
arpl
cmp
arpl
and
sub
push
repnz
or
push
mov
inc
bound
out
fcoml
imul
aad
lahf
insb
imul
in
mov
lcall
stos
adc
ja
scas
adc
and
int3
pop
xchg
push
jo
outsl
loopne
iret
or
pop
dec
add
je
cld
cmp
sbb
and
jg
or
outsb
iret
mov
jge
mov
lahf
popa
mov
or
dec
inc
mov
rorb
xchg
lds
jb
adc
xor
outsb
or
cmp
imul
orb
mov
mov
xchg
cmpsl
into
mov
arpl
and
push
out
insl
andl
xchg
push
push
loopne
jge
dec
movsl
sub
xor
adc
push
idivl
push
xchg
pusha
loop
pop
ret
sub
mov
out
xchg
pusha
and
pop
mov
cs
icebp
addr16
in
out
sbb
inc
sbb
mov
outsb
popf
fisubrl
out
out
sub
push
les
mov
mov
dec
je
sbb
dec
lcall
aam
popf
jle
fbstp
stos
or
addr16
dec
adc
sbb
inc
mov
movsl
shlb
arpl
stos
ss
stos
cli
mov
mov
sbbl
mov
int3
or
inc
insl
add
js
lret
cld
pop
push
sbb
aad
fnop
cmpsb
cmp
mov
mov
jb
xor
inc
jg
shlb
mov
lcall
clc
pushf
lret
jg
sbb
sub
in
mov
push
fwait
stos
xor
adc
dec
fildl
lcall
jmp
fstl
test
mov
dec
ret
and
popa
subl
pushf
push
push
je
lahf
pusha
sbb
jle
mov
mov
sub
scas
jp
sub
dec
push
cmp
sub
mov
hlt
mov
jge
shrl
sbb
js
psubb
scas
dec
jbe
stos
and
call
push
arpl
mov
and
ret
cs
jns
andb
dec
sub
jl
mov
scas
dec
movsb
sub
xor
xchg
outsl
std
jno
icebp
das
push
jl
jle
ja
clc
in
ljmp
fs
sub
cmp
cwtl
mov
xchg
mov
mov
shll
mov
or
jecxz
sbb
jb
daa
jle
sbb
xor
movsb
pusha
adc
lret
les
mov
pop
pop
add
enter
lods
xchg
in
push
stos
pop
mov
dec
push
xor
sbb
stos
into
stos
mov
mov
lret
adc
push
movsb
ds
je
sbb
data16
icebp
iret
shrl
push
dec
jp
push
push
sub
jno
pop
lods
jnp
dec
mov
aad
mov
cltd
addl
iret
stos
jbe
je
scas
dec
shlb
leave
inc
mov
pushf
add
sahf
pop
aas
outsl
jmp
fdivl
adc
stos
pop
iret
lds
jnp
xor
les
aaa
add
pop
and
inc
cmp
dec
scas
add
roll
roll
mov
mov
arpl
addr16
xchg
test
adc
inc
dec
adc
push
test
push
inc
enter
sub
cli
jge
lcall
jbe
cmp
pop
xor
arpl
mov
sub
ljmp
inc
fucomi
aam
add
mov
ds
jbe
push
and
ret
clc
dec
mov
idivl
pop
mov
sub
cmp
adc
xor
out
push
stos
int
and
daa
in
or
add
in
push
int
shrl
sub
push
dec
cmp
dec
loopne
mov
mov
and
out
push
sbb
push
je
xor
cmp
enter
ja
cmp
jge
push
add
fucom
int
push
xlat
lods
mov
cvtps2pd
add
adc
decl
pop
insl
rcrl
mov
xchg
mov
cmp
ret
cmp
pop
xchg
fisubrs
in
or
push
cmp
jecxz
cld
mov
cmp
testb
add
pop
repnz
xchg
push
lfs
jle
mov
xor
int3
insl
xorl
imul
mov
cmp
sbb
xor
mov
vprotd
int3
add
or
loop
cmpsl
mov
mov
daa
fnstsw
mov
adc
push
insl
arpl
inc
sub
jmp
imul
jo
stos
xorps
stos
push
dec
enter
mov
dec
cld
mov
test
fucom
cli
pop
scas
cmp
in
push
mov
jae
pop
xor
cmp
push
push
mov
loope
push
arpl
cmp
ret
inc
mov
add
cmp
ret
cmc
xor
mov
jl
repnz
int
push
dec
faddl
mov
rorl
push
orl
mov
lods
icebp
mov
xcrypt-ofb
cmpsl
imul
sti
dec
or
dec
jmp
mov
mov
outsb
jg
arpl
out
cmpsb
sub
ret
sub
dec
sub
mov
xchg
fxch
mov
pop
fimuls
adc
sub
pop
mov
pop
mov
jge
loope
js
out
xlat
cmp
fcmovbe
push
daa
popf
call
push
mov
ret
jbe
mov
rorl
int
lret
movsl
sbb
xchg
neg
mov
shld
bound
scas
or
icebp
push
mov
fldenv
imul
add
std
jnp
cmp
js
mov
popf
xor
pop
ret
pop
lock
xchg
jbe
or
add
sub
lret
xchg
and
inc
fsubrp
rcrl
imul
jecxz
jmp
lahf
fcmovu
dec
jp
jb
stos
inc
sub
movsl
movl
mov
repnz
cwtl
lahf
in
jno
mov
add
adc
or
fs
sar
fwait
insl
ljmp
and
mov
in
dec
mov
ret
mov
cs
aaa
pop
movsl
ds
sbb
mov
dec
pop
das
cmp
cmp
fdivl
mov
jb
into
mov
adc
and
push
push
pop
xchg
jno
mov
adc
out
adc
aad
adc
ret
out
popa
inc
and
cmp
out
add
jnp
outsl
pop
in
dec
cmpb
mov
mov
jbe
lret
mov
and
pop
lods
ret
aas
arpl
push
inc
pop
push
shll
int
add
xchg
mov
enter
jae
in
inc
mov
sbb
jb
int
std
mov
or
pop
data16
and
lds
and
fiadds
cmpsb
jge
ljmp
mov
loop
out
adc
pop
fldcw
push
jmp
jb
inc
sub
arpl
and
mov
jbe
and
aad
mov
test
ja
add
inc
jno
pop
ret
cmp
cmc
mov
adcl
add
sbb
bound
cmp
lea
sub
sub
pop
arpl
icebp
pop
les
mov
mov
lods
mov
int3
mov
inc
cmc
cmp
dec
lods
push
or
push
in
xor
test
xor
insb
pop
hlt
add
sbb
push
pop
jno
add
jne
mov
enter
jle
inc
arpl
push
les
adc
ror
xchg
in
add
or
dec
or
or
ss
mov
test
and
lcall
nop
insl
xor
vorpd
fistpll
mov
ret
cmc
insb
shrb
and
or
ss
mov
in
jl
and
mov
or
inc
adc
sbb
cwtl
sbb
pop
jge
sub
aaa
ds
je
mov
xor
push
xchg
fstl
and
insb
fdivl
adc
cmp
or
xchg
or
inc
mov
and
cli
sub
icebp
pop
xchg
and
lcall
add
and
les
dec
dec
outsb
data16
inc
je
push
cmp
xlat
popa
les
daa
ret
xchg
push
push
jne
pop
pop
xchg
and
and
mov
in
push
sti
push
and
imul
enter
jbe
adcb
movsb
sbb
mov
inc
std
sub
in
iret
jl
fstpl
xchg
or
pop
icebp
sub
add
and
test
pop
fsubl
cs
xor
inc
push
cwtl
stos
sub
inc
and
or
into
lods
cmp
iret
and
enter
pop
pop
xchg
fwait
inc
dec
and
iret
mov
sub
push
cwtl
data16
sub
call
adc
add
and
div
or
outsl
dec
and
aas
pop
xor
push
scas
dec
and
arpl
repnz
and
xchg
sub
xchg
jae
and
hlt
ljmp
dec
and
cmp
daa
stc
push
mov
lods
cmpsl
mov
or
xchg
mov
push
adc
leave
mov
popa
lock
bound
movl
pop
mov
insl
dec
arpl
mov
popf
pusha
mov
mov
add
add
rol
fbld
mov
jg
xchg
imul
mov
sar
and
rcrl
cli
push
cwtl
and
cltd
pop
mov
les
dec
out
sarl
fidivs
es
pop
gs
dec
adc
push
test
arpl
aaa
add
jg
pop
inc
movsb
inc
dec
mov
lods
cltd
in
sub
cli
dec
out
add
and
out
jb
test
les
jmp
fwait
sbb
and
mov
stc
hlt
es
and
out
add
push
lret
data16
out
and
and
xchg
fimuls
and
mov
sub
dec
bound
in
jmp
and
lds
sub
sbb
arpl
clc
cmpsl
in
jo
mov
arpl
pop
mov
add
or
and
int3
test
xchg
ljmp
das
adc
cmp
loopne
cs
data16
pop
loop
cmpsl
xor
sub
mov
call
sbb
and
inc
and
mov
rcl
gs
fstp
enter
jle
mov
jnp
or
xlat
icebp
mov
sbb
mov
and
or
movsl
lea
les
xchg
xor
add
mov
repz
les
mov
xor
int3
out
fistpll
aaa
xor
std
mov
cld
rorb
decb
test
dec
or
popa
dec
cmp
sbb
cmp
cmp
ret
fsubs
cld
lock
jo
mov
lds
js
or
es
mov
mov
cmp
fcoms
sub
xchg
pop
pushf
test
popa
pop
xor
aam
and
lahf
pop
addl
dec
mov
sahf
jp
jae
icebp
mov
add
and
or
outsl
mov
sahf
sbb
shlb
xchg
jecxz
pop
mov
jno
mov
ja
mov
out
xor
mov
and
imul
sbb
leave
pop
jle
clc
dec
sbb
out
aad
js
jno
nop
mov
aad
mov
push
pop
dec
sarl
stos
movsb
popa
sub
xor
add
enter
jg
cs
and
pop
sbb
fcmovb
push
test
fs
jp
aam
daa
loopne
sub
mov
cs
outsb
xlat
or
lods
dec
xchg
popa
pop
arpl
mov
fidivrs
add
je
xor
cmp
aad
out
inc
sub
cli
pushf
dec
xorl
iret
sbb
in
enter
push
test
loope
mov
lcall
mov
sbb
int
in
inc
mov
push
fwait
inc
enter
pxor
mov
dec
sbb
pusha
cmp
int3
fld
jmp
jne
adc
push
xorb
jno
adc
inc
ss
std
push
aad
mov
loope
out
mov
mov
loopne
int3
les
cmp
and
ret
adc
adc
dec
data16
test
inc
fldl
clc
shr
and
sbbb
push
bsf
sbbl
lcall
dec
bound
and
fs
jle
stc
sahf
lcall
out
in
idivb
test
lcall
ja
sub
mov
adc
fildll
sub
dec
push
test
jo
data16
pop
sbb
sub
jno
or
test
inc
inc
arpl
cmpsl
push
push
hlt
cli
or
mov
inc
pcmpeqd
xor
cmp
movaps
inc
xor
cmp
jae
xchg
scas
les
jno
aaa
jmp
stos
pop
sub
insb
jge
enter
aas
mov
insl
movsb
adc
dec
jbe
stos
push
inc
mov
lds
add
and
fnstsw
jmp
push
add
jmp
lea
out
hlt
mov
ret
mov
jge
inc
mov
fldl
cwtl
cmc
mov
xorl
cmp
stos
sub
pop
les
inc
dec
xchg
mov
xchg
inc
mov
insl
enter
je
dec
and
mov
jb
enter
jg
and
aaa
push
sub
jg
les
xor
dec
clc
xchg
push
mov
jb
daa
inc
mov
sub
mov
icebp
pop
and
mov
orb
lods
cwtl
repnz
jge
jmp
jg
adc
and
gs
push
cmpsb
mov
push
mov
mov
mov
pop
jp
xchg
sub
mov
lods
push
inc
dec
imul
outsl
mov
mov
fs
or
loop
dec
ficompl
loope
mov
cltd
pusha
pop
adc
push
xor
mov
rclb
setne
and
xchg
adcl
faddp
pop
add
mov
push
test
sarb
pop
mov
jecxz
imul
std
cmp
mov
js
mov
out
jae
mov
cwtl
jbe
insl
or
outsb
sub
jbe
jo
and
mov
and
or
inc
je
inc
and
filds
test
sar
int
movsb
add
pop
xlat
lahf
and
mov
and
out
lret
push
or
mov
push
and
ret
xchg
dec
and
out
mov
add
imul
xchg
push
imul
inc
cmpsb
jae
aaa
lods
inc
and
cld
inc
pop
mov
loope
les
cltd
pop
sbbl
inc
sahf
and
xchg
mov
and
ret
repnz
fs
leave
das
xchg
pop
test
mov
mov
sbb
sub
out
imul
shrb
jno
lcall
adc
and
insb
loop
cli
xchg
and
hlt
dec
dec
test
in
jno
mov
and
push
imul
xor
mov
cmc
imul
jmp
js
push
sbb
xor
test
lret
out
out
add
sbb
dec
hlt
icebp
or
lock
push
jno
shl
lea
sub
je
mov
lret
pusha
nop
repnz
or
das
and
cmp
mov
inc
jo
sbb
stos
and
int
pusha
push
jno
and
xchg
outsb
xor
fs
cmp
in
ror
ljmp
mov
push
xchg
cmpl
and
stos
lret
rolb
mov
lcall
and
imull
fnstenv
popf
mov
and
outsb
pop
jns
xorb
dec
loop
out
imul
sbb
add
and
std
hlt
and
jns
mov
sub
mov
loop,pt
mov
pop
jl
xchg
fwait
push
cmp
and
enter
ret
mov
cs
cltd
xchg
test
lea
and
loope
push
and
mov
fsubs
nop
mov
out
neg
and
xor
loopne
sub
lahf
stc
insb
and
xor
or
nop
jecxz
pusha
jge
mov
sbb
cmp
outsl
mov
cli
xchg
sub
scas
shlb
hlt
clc
xlat
cmp
and
sbb
fistpl
lret
and
adc
in
mov
pushf
shlb
inc
push
fwait
xchg
push
fsubrl
and
movb
and
rorb
call
cmp
shll
xor
mov
push
rolb
lea
in
and
dec
push
in
call
sub
mov
cmp
cltd
andb
or
and
xchg
nop
daa
mov
pop
loopne
jae
in
and
out
jbe
in
push
popf
cld
push
and
inc
icebp
pop
into
clc
sub
and
inc
push
and
cmpsl
push
bound
imulb
leave
adc
dec
jmp
cmp
std
mov
jmp
mov
and
les
add
xchg
pop
cmp
insb
and
arpl
loopne
pop
push
cmp
xor
pop
sbb
pop
sub
xlat
mov
add
xchg
arpl
mov
and
popa
jbe
and
cltd
dec
add
call
sub
and
mov
rolb
sub
loop
and
test
fs
dec
int3
and
mov
call
fwait
and
xor
repz
jl
icebp
enter
or
xchg
out
add
jg
xchg
out
inc
into
pushf
mov
xor
push
leave
rcr
cmp
dec
push
insl
dec
loope
dec
lret
imull
mov
sub
fs
iret
outsl
and
cmp
movsb
les
scas
sub
push
fsts
dec
aad
push
pop
cld
xchg
fcmovnbe
arpl
xchg
adc
stos
in
push
mov
popa
mov
icebp
hlt
inc
stc
mov
imul
enter
in
fldt
shrl
inc
jecxz
subl
xchg
xlat
pushf
push
and
xor
sbb
cmpsl
fisttps
jae
jb
or
or
sub
pop
mov
rcll
adc
sub
xchg
stos
adc
push
ret
cmpsb
inc
pop
sbb
mov
arpl
cmpsb
add
leave
cmpb
pop
les
jg
imul
pop
xchg
iret
mov
scas
in
push
aam
pop
xor
jg
repz
lret
mov
mov
xor
pop
insl
push
dec
filds
lahf
mov
mov
pop
aad
sub
popf
xor
add
ljmp
ja
das
sub
cmc
lcall
subl
cltd
add
jecxz
mov
outsl
lods
fmuls
rolb
push
mov
mul
test
xor
jbe
in
loope
jns,pt
sub
mov
mov
mov
mov
jg
aas
fdivrl
jecxz
sub
mov
daa
rol
enter
inc
retw
out
notb
stos
or
add
out
test
ljmp
ret
mov
push
loopne
ja
pop
insl
xor
lods
pop
aas
sub
insb
xchg
mov
mov
addr16
jge
ja
fdivl
aam
les
fidivs
iret
mov
push
stos
sbb
sar
js
push
pop
adc
ret
rcrl
mov
sbb
push
push
call
shl
pop
outsb
fldl
jge
lahf
sbb
and
sub
xchg
mov
mov
subl
out
iret
js
seta
push
push
jnp
adc
jo
test
xchg
xchg
sbb
leave
dec
xor
test
lret
frstor
std
push
mov
push
popa
adc
add
shrb
dec
in
repnz
mov
inc
inc
gs
into
testl
mov
mov
int3
and
nop
into
cld
icebp
popa
popa
push
idiv
cwtl
or
xchg
mov
mov
jp
sub
mov
xor
jbe
add
imul
stc
aas
das
rolb
push
outsl
jge
imul
cmp
mov
push
movsl
inc
dec
and
mov
jne
jno
pop
lods
and
out
nop
xor
add
mov
jb
mov
fwait
push
in
imul
nop
test
xorl
inc
dec
gs
movsl
inc
int
outsb
mov
iret
aad
sahf
sub
sbb
imul
int
inc
or
push
fs
sub
testl
lods
clc
dec
xlat
cwtl
int
movb
icebp
mov
mov
xchg
nop
aam
mov
stos
dec
cmpsl
mov
loope
pop
xor
xchg
xchg
xchg
dec
jne
stos
xchg
inc
popf
sbb
rcll
mov
les
je
cmp
ret
and
pop
insl
mov
push
mov
or
pop
jl
popa
jb
test
fsubs
stos
rcr
testb
pop
enter
imul
test
cmp
aad
cmpsb
add
pop
jae
inc
push
std
mov
mov
frstor
cmp
inc
inc
or
in
xor
jmp
cltd
ret
mov
mov
adc
mov
inc
add
insb
vmwrite
mov
lds
in
xlat
cli
cltd
lahf
lcall
pop
mov
shrd
fstpl
jno
popf
jbe
adc
xor
push
push
sbbb
sbb
push
es
mov
xchg
or
sar
dec
add
mov
sub
int3
pop
fbld
jmp
push
enter
inc
lret
stos
scas
jp
loop
pop
jno
sub
divl
scas
and
les
pop
jbe
pop
or
in
aam
xchg
out
or
dec
sbb
rcl
jbe
nop
ss
les
sub
cmp
into
inc
je
and
sub
sbb
scas
xor
shl
jp
mov
ss
push
and
cld
int
mov
or
into
lods
stos
lcall
and
cli
push
xchg
xor
dec
xor
sub
add
xor
xchg
daa
jg
aaa
sbb
mov
xor
mov
ret
push
cltd
pop
xor
cltd
and
ds
pop
enter
int3
outsb
lods
aam
insl
mul
ja
and
mov
aad
xor
test
outsl
jno
rorl
pop
pop
and
push
mov
enter
testb
and
sub
xchg
cs
cld
cld
jecxz
inc
enter
rol
inc
sbbb
cwtl
sub
sub
push
or
fnstsw
inc
adc
test
data16
jge
push
js
jmp
repnz
add
dec
xor
xchg
xor
loop
and
mov
lods
test
loop
orb
mov
cs
mov
jbe
lds
es
inc
and
adc
cmp
data16
xchg
nop
dec
sbb
and
fstpl
popa
setl
push
adc
call
repz
mov
lods
or
cmp
ss
loop
les
xor
pop
lret
cwtl
arpl
iret
sub
xchg
int
add
ss
ret
into
fldl
shll
mov
dec
push
dec
xor
test
idivb
std
dec
pusha
jp
popw
adc
iret
xor
in
mov
fnsave
test
xor
fnstcw
daa
pop
push
add
xor
and
pop
icebp
jno
sub
jbe
xor
adc
push
int3
pusha
inc
and
pop
je
movsb
aas
movsl
mov
cld
es
mov
mov
mov
popa
icebp
les
mov
xchg
jne
adc
es
outsl
lds
mov
mov
add
adc
movsl
inc
aad
cli
mov
movsb
mov
ror
pop
jnp
jnp
fcoms
add
or
and
sahf
sarl
les
lods
scas
pusha
aas
xor
lret
stos
jl
negb
inc
faddl
aad
xor
out
mov
xor
pop
pop
mov
add
lahf
addr16
jnp
push
jns
shll
sub
jo
iret
mov
jge
push
mov
movsb
xchg
jle
mov
xchg
aam
jns
int3
and
dec
mov
icebp
and
dec
das
push
sub
test
repz
and
out
dec
pop
lds
and
mov
jge
out
inc
movsb
push
nop
pop
sbb
insl
or
mov
mov
mov
and
shrl
mov
push
or
daa
dec
js
jne
add
nop
mov
push
das
sub
stos
jo
xchg
dec
jno
aad
popf
mov
mov
and
test
ja
pushf
dec
adc
pop
inc
xchg
cld
mov
pop
and
mov
mov
outsb
int3
sbb
ret
mov
push
dec
sub
imulb
notl
sub
adcl
add
shlb
jg
pushl
sarb
mov
cmp
ljmp
sbb
and
mov
adc
scas
in
mov
adc
int
fidivrl
iret
data16
shrl
es
and
cs
stc
shr
xor
into
je
in
jecxz
ljmp
sbb
aas
fadds
repnz
daa
scas
xchg
rol
jge
sub
push
iret
arpl
xor
push
adc
pop
xchg
xor
xor
inc
test
int3
notl
repnz
mov
jp
aam
sbb
ss
test
sub
loopne
mov
or
mov
jno
gs
and
cwtl
sub
sbb
dec
cld
cmp
cltd
mov
and
popf
mulb
pop
in
add
xchg
pop
mov
daa
imul
stc
and
mov
mov
cmp
mov
stos
and
push
pop
popf
xchg
in
mov
sub
data16
std
jmp
jge
mov
repz
and
dec
push
jle
rcrb
cmp
dec
sbb
xlat
leave
xor
dec
and
lock
jecxz
mov
dec
jg
aaa
dec
jne
and
sbb
xlat
push
and
push
and
cmp
jno
and
test
pop
sub
jecxz
in
bound
subl
shr
add
fs
or
sti
cmp
cmp
repnz
rolb
cmp
fidivl
cmp
mov
xchg
dec
negb
dec
cli
int
insl
and
dec
imul
and
stos
notb
ds
insl
push
jle
and
nop
mov
pop
aas
aam
shll
cmp
and
dec
pop
inc
faddl
jb
into
pop
icebp
xor
sub
sbb
loop
xlat
mov
in
jne
jp
enter
imul
mov
cmpsb
add
lods
cmp
mov
push
out
or
or
inc
hlt
hlt
repz
xchg
inc
and
repnz
mov
cld
push
cmp
nop
inc
sbb
sbb
mov
repz
jl
insl
mov
push
lods
pop
and
test
std
ss
mov
ljmp
and
push
and
xchg
movsl
and
into
fs
call
popa
mov
inc
imul
mov
cmp
mov
add
and
dec
inc
je
rcr
and
mov
and
fwait
enter
mov
xchg
movsl
popf
js
je
add
outsb
and
std
adc
pop
cmc
frndint
call
jnp
dec
mov
cltd
jns
shl
or
and
push
mov
push
pop
jp
inc
and
jg
or
pop
js
mov
pop
loopne
pop
mov
and
insl
push
add
ss
mov
fcoml
rcll
adc
sub
push
shlb
jae
loop
or
ret
arpl
repnz
adc
clc
cld
adc
sub
test
pop
xchg
test
out
movsb
imul
out
and
sbb
fdivl
addr16
add
bound
cmp
xchg
inc
dec
sbb
mov
mov
add
and
sbb
std
push
test
popa
sti
lahf
mov
stos
xor
cmp
or
xchg
adcb
pop
jnp
cmp
imul
lcall
std
nop
mov
lds
mov
push
and
mov
sbb
cmp
sti
mul
and
int
add
lea
insb
mov
jbe
mov
sub
adc
mov
jns
leave
mov
push
ret
inc
or
les
push
jmp
mov
pop
mov
and
push
and
shrl
ja
das
and
lret
cli
lods
mov
and
push
mov
jle
lods
inc
fbld
mulb
push
cltd
hlt
push
pop
or
sub
xchg
mov
mov
cmp
sub
rorb
add
add
cmp
lock
lahf
xchg
mov
ljmp
mov
push
data16
sbb
mov
push
push
and
and
in
nop
and
xor
insl
cmpsl
and
sbb
add
inc
inc
and
ss
sub
and
in
mov
xlat
loop
inc
and
lea
and
test
cmc
and
call
and
xchg
iret
shlb
mov
mov
lds
sub
jecxz
pop
xlat
popf
cmpsl
add
adc
in
adc
sbb
jnp
pop
and
cmp
sbb
cmpsl
and
test
adcb
xchg
sbbb
jae
and
repz
inc
add
cld
xchg
notl
popa
out
addr16
xor
mov
mov
insb
loopne
lods
mov
cs
and
loope
test
sub
js
push
ficoml
cli
push
cmp
pop
insl
inc
and
arpl
popf
mov
and
out
xchg
push
mov
bound
call
pop
fdivs
pop
outsl
shll
mov
xchg
call
and
pop
push
lret
icebp
lcall
pop
cli
cwtl
and
arpl
and
sahf
rolb
jl
iret
jns
add
movsb
scas
xchg
daa
push
lock
push
fwait
dec
icebp
mov
xor
test
out
or
lods
and
jns
jmp
xchg
and
mov
int3
and
xchg
inc
or
andb
xor
testl
in
adc
push
icebp
iret
mov
loopne
cmp
in
or
or
sub
bound
jg
mov
push
xor
shr
mov
gs
icebp
and
dec
loopne
or
nop
push
cli
push
add
mov
orl
and
mov
add
aad
mov
sub
mov
daa
mul
js
dec
enter
or
push
jbe
pop
or
push
out
lret
jno
outsb
sub
dec
or
and
test
pop
mov
inc
pop
popf
mov
jl
ds
dec
dec
mov
mov
jmp
pop
or
lret
mov
cltd
jmp
push
xor
inc
push
or
stos
lret
add
test
jp
aas
sbb
push
mov
or
jle
pop
adc
ljmp
les
imul
ret
and
aas
mov
in
cmp
push
xchg
fdiv
leave
jbe
lcall
add
inc
cld
loop
jbe
push
cltd
insl
jg
push
xlat
add
pop
scas
fwait
push
dec
dec
mov
xor
push
xchg
roll
mov
cmpl
fdivs
iret
adc
sub
push
sub
mov
xchg
fcoms
sahf
xor
loope
jmp
push
cli
pop
mov
ret
scas
push
dec
mov
int
subl
imulb
or
jno
scas
inc
lcall
imul
xchg
hlt
or
push
mulb
aas
pop
fdiv
fst
ds
sbb
movsl
out
pop
clc
fnstenv
ret
enter
int3
mov
sbb
push
loope
cmp
push
xor
mov
mov
xchg
adc
sub
out
sahf
cmp
subb
test
data16
push
inc
or
cmpl
in
ret
xor
cltd
xchg
ret
sub
cmp
in
pop
mov
cmpb
sbb
xchg
push
jmp
sub
pop
xchg
cmp
mov
inc
and
fucomp
in
mov
mov
adc
outsb
icebp
jno
cmp
lret
repz
sub
pcmpgtb
push
sub
push
pop
xor
out
je
inc
cmp
insl
or
fisubl
sub
inc
loop
sub
hlt
pop
mov
mov
jns
push
pop
push
sub
xchg
addb
movsl
jnp
dec
add
pusha
push
fldenv
test
aam
xor
mov
lret
ficompl
sbb
subb
dec
xchg
outsl
push
iret
adc
inc
ret
lock
xchg
add
and
pop
pop
mov
inc
fsts
mov
xor
or
test
cmp
push
lock
sub
push
add
stos
test
imul
scas
andl
sarl
cld
pop
dec
movsb
movsl
adc
iret
mov
pop
aaa
mov
cmc
les
adc
outsl
mov
sbb
push
dec
les
loope
xor
clc
sub
jmp
xchg
mov
cli
shrl
jl
stos
inc
cmpsb
fcmovnbe
lds
adc
cmp
cmc
and
sub
in
lea
pop
push
in
sub
int3
mov
int
test
mov
cmp
or
lret
xorb
mov
rolb
repz
cwtl
lods
enter
sbb
cmp
mov
mov
push
daa
fisubrs
std
test
push
push
inc
out
ror
popf
mov
push
outsl
inc
mov
mov
dec
je
mov
inc
dec
jg
mov
add
icebp
test
sub
add
cld
out
aaa
push
mov
and
dec
insl
das
jbe
iret
loop
and
or
mov
dec
mov
gs
std
push
pop
pop
and
inc
int3
and
dec
mov
pop
and
punpckhdq
ljmp
mov
mov
push
xchg
dec
and
xchg
jge
lret
cld
aaa
mov
add
jl
std
add
push
push
out
inc
and
sub
cld
and
sahf
or
and
mov
cltd
je
loop
adc
or
or
in
xor
and
cmp
imul
jl
and
mov
out
or
pop
jg
or
jns
push
add
out
and
pop
sbb
jmp
jmp
sbb
and
mov
xchg
and
scas
cmp
shll
fs
or
xchg
or
push
push
addr16
aad
cmp
inc
sbb
add
and
mov
cmp
ret
dec
and
sbbl
add
pop
jl
ljmp
sub
stos
fiadds
cli
in
mov
mov
add
mul
loope
inc
cwtl
cmp
cmp
cmpsb
adc
push
pop
fidivs
pop
mov
lret
and
arpl
and
adc
cltd
pop
jo
test
add
pop
outsl
shr
and
test
or
fistpll
inc
mov
or
jb
lods
and
test
test
push
push
outsl
stc
adc
sarl
sub
mov
and
cmp
add
adc
fs
and
pop
shrl
pop
popf
push
data16
pop
add
stos
shlb
mov
pop
pop
dec
fsubrl
sub
push
and
xor
and
dec
ss
sub
add
pop
hlt
xchg
int3
and
stos
std
cmc
aam
call
enter
and
repz
outsb
jo
lret
jp
fcompl
lds
and
pusha
daa
dec
insl
jecxz
or
iret
movsb
sub
lcall
mov
insb
and
mov
push
gs
movsl
sub
and
lods
adc
int3
pusha
and
push
scas
lret
and
and
pop
popf
hlt
add
mov
arpl
cmp
add
inc
add
mov
xor
dec
add
repnz
and
cmpsb
bound
fisttps
cmp
xor
sub
out
sbb
mov
and
daa
and
add
pop
aad
out
mov
dec
repnz
sub
rcrl
add
push
sahf
test
add
and
push
cmp
mov
shl
mov
lods
sub
bound
jl
mov
js
lds
pop
sub
sub
cwtl
arpl
sbb
sub
xor
stos
andl
out
mov
fisubrl
iret
or
and
sbb
add
ljmp
gs
pop
inc
and
mov
xchg
lea
leave
push
adc
mov
cmp
or
aam
scas
mov
in
xchg
jp
inc
inc
sti
in
test
or
mov
out
mull
pop
jae
or
and
dec
push
in
pushf
adc
mov
dec
idiv
inc
and
fchs
sbb
ja
sub
push
cli
and
jae
xor
xchg
int3
inc
fbstp
lods
scas
xchg
inc
call
aaa
dec
rcrl
and
imul
and
mov
mov
fisttps
jmp
vmread
dec
adc
fcmove
jmp
sub
pop
imul
sbb
imul
ljmp
push
xchg
adc
inc
and
and
mov
ret
loop
jns
and
stos
inc
or
pop
dec
mov
rcll
cmpsl
movsl
call
addr16
xchg
mov
in
xor
sbb
mov
adc
lahf
scas
push
out
mov
xor
and
dec
enter
and
lahf
ja
aam
sub
and
icebp
fldl
adc
lock
inc
cmpsl
adc
out
stos
pop
mov
mov
pop
std
add
and
lods
and
cmp
fisubrl
push
mov
and
xor
dec
mov
cld
mov
sbb
cmpsb
push
jne
pop
and
loope
mov
aam
and
sbb
enter
xlat
and
pop
adc
and
mov
push
mov
push
rcr
push
out
enter
dec
fwait
pusha
dec
mov
and
push
jnp
loopne
mov
inc
push
stc
test
int3
clc
and
mov
sarl
outsl
and
lods
test
sub
or
jp
xor
pop
leave
add
jne
cmp
jnp
and
shlb
push
sbb
dec
rorl
adc
sti
inc
pop
aad
mov
push
lds
inc
sub
sub
clc
push
and
shrl
push
and
inc
sahf
mov
and
test
and
je
mov
mov
fstps
out
jle
rcrl
mov
mov
sub
mov
mov
or
insl
jo
inc
jae
loope
and
push
mov
and
mov
sar
sbb
fsubs
scas
and
mov
fists
inc
adc
and
aas
pop
call
popf
pop
fwait
sbbl
scas
lock
mov
shrb
sbb
xchg
dec
ja
cmp
xchg
sbb
cmp
roll
std
icebp
int
adc
lock
mov
cmp
and
cmp
insb
loop
out
fiaddl
or
mov
popl
inc
mov
sbb
mov
idiv
pushf
sub
lahf
scas
inc
pop
xor
and
or
and
xchg
dec
jle
or
sub
push
testb
or
jo
adc
lods
cmc
and
jnp
mov
movsb
fimuls
jl
add
popf
int
cmc
sbb
shlb
mov
lea
pop
and
adc
and
addr16
mov
sbb
and
mov
adc
stos
dec
inc
jo
adc
adc
jbe
bound
or
cmp
and
jl
jecxz
sub
mov
jmp
mov
mov
push
sbb
lcall
adc
mov
mov
scas
pop
repz
or
lret
pop
sub
jbe
mov
xchg
push
jnp
movsl
sub
loop
repz
test
and
xorl
sahf
loopne
and
and
and
adc
and
cmc
mov
nop
and
addb
cltd
pop
mov
stos
in
imul
gs
lods
pop
and
lret
inc
mov
push
adc
adc
cwtl
gs
inc
sbb
enter
and
js
pop
jp
jle
std
out
sub
mov
sbb
sub
cld
jp
or
fnstcw
jns
xor
ret
aad
sbb
lods
mov
sbb
pop
mov
pop
sub
bound
test
imul
adc
add
mov
inc
mov
dec
inc
or
jg
arpl
mov
rcll
push
iret
cmp
je
in
inc
pop
sub
es
jo
cmp
out
xchg
sub
cltd
push
xlat
mov
inc
sbb
push
ja
ret
cwtl
aam
dec
dec
pop
adc
mov
xchg
xchg
and
ficoml
push
or
jmp
push
enter
into
in
imull
ret
bound
adcl
sbb
enter
fwait
push
stos
sub
insb
nop
sbb
dec
shlb
rclb
adc
xchg
scas
insl
mov
jle
in
fldt
into
mov
inc
fldl
mov
and
rcrb
das
dec
lret
lret
fisttps
in
inc
pop
ret
sub
mov
dec
outsb
mov
jbe
and
ret
mov
mov
pop
mov
subb
lcall
mov
iret
mov
jns
stc
xor
or
or
lcall
xchg
sub
mov
leave
and
jg
loope
daa
xchg
cmp
stc
add
or
jns
sbb
and
fimull
sub
stos
les
add
imul
int3
bound
add
dec
and
dec
sahf
push
shlb
or
dec
popa
lds
push
fwait
in
dec
mov
iret
dec
adc
dec
mov
or
mov
xchg
sbbb
jo
cld
orb
test
and
aaa
iret
jge
lods
inc
loopne
cmp
in
inc
xor
addr16
push
mov
stos
fiaddl
mull
inc
jne
icebp
pop
les
cmp
mov
in
lcall
arpl
jb
aaa
adcb
push
cltd
js
les
sub
push
movsb
and
fcoms
insb
les
mov
decl
int3
pusha
xor
xchg
test
push
sbb
aam
hlt
jo
nop
les
enter
push
lret
icebp
std
mov
or
mov
xor
inc
lcall
jae
jno
sub
movsb
cmpsl
lea
add
pop
ret
pop
push
les
mov
outsl
loope
push
scas
cmc
and
and
inc
mov
push
in
sub
sbb
dec
and
js
loope
and
sbb
sbb
sub
ret
in
iret
dec
dec
and
mov
and
rolb
and
jbe
adc
push
and
cli
sub
and
push
jno
jbe
jle
pop
mov
addr16
loopne
and
sbb
and
dec
lret
mov
pop
shl
or
outsb
xchg
dec
call
push
mov
test
dec
stc
std
fisubrs
inc
push
lods
xchg
add
cmp
and
mov
and
push
or
fsubrs
jmp
sti
adc
paddd
aas
je
loope
push
je
pop
sub
adc
xchg
and
inc
and
xor
test
pop
insl
mov
and
sahf
sti
out
and
and
stc
mov
and
into
sbb
popa
orl
cs
push
repnz
jmp
sti
mov
call
outsb
out
fmul
or
rcrb
xor
insl
cmp
jmp
push
and
dec
mov
mov
mov
loopne
and
push
sub
fisubs
aas
jno
imul
or
jle
loopne
mov
out
adc
imul
add
and
faddp
jecxz
data16
jbe
flds
outsl
lahf
pop
xchg
pop
cmp
in
popf
jnp
daa
cld
xchg
and
imul
push
popa
dec
mov
pop
test
mov
push
test
pop
roll
inc
jp
xchg
jg
mov
arpl
orb
sub
and
pop
adc
and
dec
pop
push
jl
and
in
sbb
sbb
or
push
orb
and
lock
repz
pop
push
sbb
and
in
cmpsl
and
push
mov
push
and
and
bound
xor
mov
lds
lods
pop
fs
ljmp
mov
je
and
stos
jb
push
pop
and
scas
sbbb
adc
test
mov
ret
and
jge
and
pop
fimuls
pop
xchg
cwtl
mov
inc
inc
stc
push
jmp
clc
fwait
mov
add
stos
out
lds
mov
cmp
sbb
pop
and
in
fdivr
and
loop
cmp
mov
jge
int
mov
and
and
negb
filds
inc
fs
jle
and
adc
outsl
xchg
mov
sub
inc
sti
in
movsl
sub
loop
fisttpll
add
pop
jle
sbb
and
into
push
xchg
and
mov
sbb
and
inc
add
and
loope
mov
and
orps
and
pop
push
cmc
fwait
add
and
out
or
js
xchg
outsb
xor
and
cmp
xchg
dec
mov
lret
and
mulb
imull
inc
push
pop
jb
and
xor
and
in
or
adc
popa
jns
lods
cltd
mov
and
mov
ds
ljmp
jns
ljmp
jne
ficoml
sub
jbe
pop
out
mov
andl
inc
pusha
imul
cmp
xor
out
add
mov
cmpsb
outsl
mov
fs
or
cmc
pop
xor
mov
mov
outsl
scas
or
inc
and
mov
and
test
stos
hlt
lret
movsb
sub
int3
loope
in
outsb
mov
pushf
or
pop
scas
mov
popf
and
inc
push
sbb
or
aas
sarb
pop
jo
lahf
lods
sub
cs
push
mov
mov
jmp
in
push
shll
shll
je
cmp
cmc
inc
dec
call
and
aam
std
movsb
sahf
and
insl
push
jnp
test
xor
clc
mov
sbb
sbb
jb
sub
inc
jg
test
cmp
and
aaa
push
xor
cmpsb
pushf
sub
adc
sbb
sub
xor
dec
clc
inc
sti
out
cmpsl
sub
adc
push
mov
or
mov
stos
or
jecxz
and
std
in
jns
andb
sub
ja
int
or
and
mov
mov
jb
adc
popa
in
adc
mov
and
mov
scas
sbb
mov
and
xchg
jecxz
int3
in
push
jp
lret
or
or
test
jbe
pushf
and
sbb
cli
pop
and
das
andb
ljmp
mov
mov
push
xchg
fstps
xchg
cmp
xchg
pop
data16
and
movsl
dec
xchg
jnp
sub
dec
add
lahf
ret
push
mov
and
stos
sarl
and
xchg
enter
int3
rcll
push
call
jecxz
imul
mov
and
and
stos
sub
cmp
fsubrl
or
pop
push
das
and
or
and
adcb
cmp
push
lret
mov
and
imul
arpl
sub
ret
sub
out
or
xor
and
iret
icebp
adc
and
ret
das
push
and
bound
int
xor
xor
cmp
dec
bound
xlat
and
jns
sbb
add
dec
cs
repz
adcb
and
xlat
imul
push
jecxz
xchg
mov
and
or
inc
in
and
aas
mov
std
test
adc
scas
cmpsl
lods
mov
and
push
and
and
data16
cmp
xchg
jge
lock
jecxz
bound
rcrl
inc
push
add
js
jnp
andb
in
leave
and
xlat
pop
push
cmp
mov
jmp
xor
arpl
mov
mov
scas
data16
ss
sbb
adcl
push
sub
mov
lcall
xor
cltd
shll
jle
nop
xor
sarb
sbbl
jo
dec
adc
scas
and
add
inc
rcrb
fildl
and
stos
sbb
cmc
mov
ljmp
nopl
push
bound
dec
sub
jo
and
ficompl
and
test
out
pop
shll
jg
fldenv
xor
push
xchg
and
xor
ficoms
or
and
add
push
mov
sub
aam
jmp
and
and
loopne
sti
push
and
cmpsl
pop
lock
or
movsl
xchg
ficompl
test
sub
ss
cs
mov
shl
pop
inc
and
cld
mov
lods
ds
and
jp
and
in
sub
adc
xor
and
xchg
and
push
and
pop
cwtl
enter
pop
aad
addl
push
pop
int3
adc
add
insl
push
int
cmp
shr
mov
enter
pop
inc
int
aam
pop
push
cwtl
cli
lret
aas
mov
and
adc
jnp
sti
mov
dec
fisubl
enter
enter
dec
imul
ret
jbe
jge
jo
dec
adc
fwait
movsb
jo
fbstp
in
mov
jp
aaa
enter
test
dec
jo
mov
push
mov
sbb
xor
xchg
les
cmp
add
mul
cmpl
test
std
shl
in
int3
stos
in
push
stos
sub
cmp
scas
pop
push
xor
mov
jmp
mov
idiv
insl
out
enter
icebp
sahf
pushf
sub
add
and
rcrl
mov
mov
or
andb
out
in
incl
cmc
jno
lcall
arpl
jp
and
outsb
ret
sbb
or
pop
movsl
or
ja
scas
outsb
pop
add
jnp
xor
dec
outsb
sub
or
xchg
js
mov
outsb
cmp
xor
dec
xchg
adc
jmp
test
sbb
jl
loope
sbb
mov
shrl
icebp
in
push
rcrb
movsl
shrb
sbbl
jbe
arpl
popf
loope
push
outsl
fldenv
add
push
sbb
jge
mov
mov
aaa
jl
xchg
push
hlt
xlat
mov
sub
ret
sarl
lds
inc
xchg
clc
aad
mov
xlat
xor
mov
jmp
xorl
pop
sub
xor
imul
cmpsb
rcll
into
mov
testl
xlat
xor
imul
or
sub
scas
sub
andb
mov
xor
push
or
pop
mov
pop
sub
sbb
pop
fs
pop
int
std
fbld
xor
cmpsl
adc
inc
inc
adc
dec
nop
xlat
push
mov
or
andb
or
jecxz
sahf
inc
enter
push
loope
sub
jg
les
int3
jmp
stc
lahf
sub
push
adc
int3
pop
xchg
fwait
insl
xor
pop
sub
adc
int
mov
insb
xchg
repz
adc
jnp
call
xchg
xchg
inc
aam
les
dec
xchg
mov
sbb
mov
push
and
ret
or
call
xor
movsb
jae
rorb
shrl
imul
xchg
call
xchg
and
mov
inc
popf
dec
sub
scas
push
imul
enter
mov
adc
popa
sub
cmp
cld
in
into
je
fists
stos
jo
das
lock
orl
into
jecxz
out
and
dec
les
ret
dec
fisubrs
sahf
sub
sbb
jmp
lret
adc
sahf
testb
jns
call
jmp
rcrl
es
pop
inc
cmp
xchg
jb
les
lahf
and
mov
pop
shlb
pop
jg
lea
stos
jne
out
cs
in
fiaddl
dec
test
ljmp
pusha
scas
push
sub
adc
fwait
push
fsubrp
data16
dec
aas
pop
stos
add
push
arpl
lret
je
dec
sbbb
enter
fwait
adc
test
out
jp
fbld
test
jmp
fucom
inc
mov
hlt
add
xor
ja
push
mov
jae
sub
inc
pushf
sbb
sbb
out
cmc
andl
add
popa
xor
dec
into
and
addr16
mov
cmp
loop
enter
loop
pop
movsb
push
arpl
les
cmp
sbbl
add
insb
scas
pop
sub
ss
inc
loope
sbb
fxch
pop
leave
vmwrite
add
sub
icebp
sub
nop
mov
pop
stos
test
or
pop
jge
pop
in
out
jmp
cmp
mov
add
mov
movsb
sub
or
and
dec
push
ja
leave
data16
clc
xchg
leave
adc
push
les
inc
pushf
dec
xlat
fstps
imul
or
out
dec
fdivrl
ss
outsb
lret
and
addr16
xor
js
mov
cmp
xchg
rolb
mov
ret
je
adc
sti
aaa
dec
jns
cltd
jecxz
jecxz
adcl
cmp
lcall
mov
fwait
xor
cmp
imul
repnz
push
sbb
fucomi
mov
xchg
cmovg
push
jge
les
pop
sarb
mov
lret
ja
and
cmpsl
jmp
sahf
inc
or
add
mov
xor
es
lret
icebp
jp
cld
jno
sbb
ja
cli
daa
push
mov
lret
out
in
push
mov
pop
sub
in
rol
in
mov
ret
ret
out
hlt
xor
mov
fbld
jle
mov
or
movzwl
and
push
sbb
xchg
popa
jecxz
pop
pop
cmp
cvtps2pi
stos
inc
sbb
sub
fwait
testl
orl
inc
jp
inc
popa
outsb
add
adc
rclb
std
sub
sbbb
mov
aaa
lods
js
sub
xor
lods
mov
in
sbb
ds
out
popa
adc
xchg
xchg
sti
int3
mov
cmp
ret
arpl
std
call
xor
bound
je
xor
fwait
push
inc
xor
jae
xlat
je
inc
js
xor
stc
mov
and
loope
fneni(8087
imul
enter
jmp
pop
jbe
jp
jns
mov
int3
mov
push
mov
out
das
les
mov
hlt
pop
aad
or
hlt
add
lret
cmp
test
lcall
sbb
arpl
repz
lret
pop
xor
add
inc
mov
nop
sub
repnz
adc
sub
lahf
inc
fld
jl
push
or
lods
mov
dec
adc
sub
cmp
or
xor
sbb
cltd
xlat
sbb
notb
cs
mov
enter
bound
jle
repz
neg
jp
inc
ja
xchg
or
adc
sbb
pop
insb
std
int3
jmp
push
les
push
inc
mov
xchg
jle
dec
jbe
ret
pop
or
sbb
les
imul
pop
sbb
pop
movsb
push
pop
fistps
in
ret
xchg
pop
sbb
cmp
movsl
cmp
mov
lds
dec
outsl
lret
lcall
faddl
mov
inc
xchg
stos
jmp
mov
push
repz
and
xchg
fwait
xor
push
push
movsl
sbb
add
les
pop
sbb
flds
mov
scas
pushf
popa
icebp
sahf
push
cmp
es
lcall
add
repnz
xchg
cmp
cltd
bound
mov
arpl
nop
scas
mov
pop
scas
lods
pop
mov
cltd
sub
xor
das
subps
and
adc
repz
into
stc
and
test
and
clc
jne
out
jae
inc
adc
push
inc
bound
adc
test
outsl
mov
dec
nop
sbb
repnz
rcrb
and
adc
mov
shr
xchg
cs
and
jne
cltd
pop
push
mov
cmpsb
inc
in
xchg
and
bound
add
and
daa
push
popa
mov
adc
push
jle
mov
pop
mov
xchg
shl
and
fs
and
mov
movsb
andl
call
mov
loop
mov
shll
mov
jle
rcr
sbb
and
adc
pusha
xchg
dec
clc
and
xchg
jns
xchg
leave
mov
mov
add
and
loop
ret
inc
jbe
sub
mov
clc
mov
sbb
ret
stos
rolb
push
xor
sbb
adc
inc
add
mov
sti
or
inc
and
addr16
idivb
and
or
cmp
cld
and
test
mov
xlat
mov
addr16
jle
mov
dec
adc
insb
lret
andb
xor
and
mov
adc
cltd
and
push
xor
add
loop
xor
mov
popf
jecxz
sti
and
and
shll
and
out
jmp
dec
push
sub
pop
push
fisttpll
pop
das
xor
jmp
flds
outsl
mov
push
arpl
add
pop
cmc
lock
fldenv
jno
insl
iret
mov
lcall
xchg
and
ds
js
push
pop
inc
pop
andl
dec
ljmp
xchg
and
add
xchg
in
mov
mov
jl
inc
movsl
shl
sbb
cmpsl
leave
jl
and
sbb
push
mov
pop
sub
mov
xor
cmpl
pop
sub
and
adc
out
xchg
inc
inc
test
sar
sub
loop
adc
or
out
dec
fisubl
mov
or
and
sub
jne
ds
inc
jbe
mov
div
sbb
cmp
ja
or
leave
and
add
dec
jle
and
push
rorb
lods
leave
insl
xchg
pop
and
stos
jae
adc
roll
xor
mov
and
xchg
and
sub
aam
and
flds
and
add
clc
wrssd
jecxz
daa
sbb
jp
ljmp
loop
shl
movsb
inc
into
push
and
rcrl
mov
sub
and
and
movl
and
pusha
inc
sbb
int
mov
pop
cmpsb
add
dec
mov
ret
and
add
push
mov
sub
inc
inc
jns
sub
aam
aas
shrl
push
hlt
shlb
mov
inc
pop
popf
iret
std
xor
and
ss
adc
dec
loopne
fcoms
push
dec
ficoml
pop
jg
xchg
or
jnp
xor
popa
daa
loopne
push
ret
inc
add
jae
or
dec
sarl
ljmp
cld
jns
jb
fbld
ret
cmp
les
sub
rolb
cmp
movsl
dec
fsubl
xchg
mov
loope
shrb
push
icebp
mov
test
fnstenv
jae
xor
sub
jbe
shrl
cmp
inc
test
mov
ret
lahf
inc
enter
mov
dec
into
xor
js
add
andl
xlat
and
aas
mov
imul
pop
pop
jae
and
mov
lock
add
lret
push
dec
int3
dec
orb
push
les
addr16
out
lret
inc
push
xchg
inc
add
mov
ret
sbb
adc
out
dec
cli
push
xchg
sbb
jle
sbb
cli
mov
inc
idivb
fistl
ret
and
enter
inc
lahf
or
inc
andb
jae
add
or
inc
cmp
enter
or
xor
xchg
cli
popf
pop
fsts
insl
fwait
daa
and
adc
stos
xchg
dec
jb
shlb
mov
inc
mov
mov
nop
xlat
or
mov
xchg
scas
nop
test
sahf
fidivl
sub
loope
mov
enter
or
xor
iret
cmpsb
inc
sbb
mov
xorl
in
fisttpl
and
sbb
outsb
int
repz
addb
aad
mov
fwait
pop
adc
daa
ror
cmpb
rorl
les
mov
popa
sbb
lret
cmp
testb
enter
cli
sbb
ja
incl
cmp
fs
sub
es
push
xchg
xchg
gs
movsl
scas
push
les
xor
and
pop
and
dec
cwtl
jg
test
mov
test
inc
cmp
or
iret
out
add
cld
push
popa
nop
leave
test
imul
fcomip
adc
sbb
movsb
imul
arpl
cmp
fdivr
mov
lods
ja
clc
les
pop
or
loope
inc
add
or
loop
mov
mov
sahf
add
icebp
jb
pop
add
sbb
mov
lds
int3
dec
mov
inc
or
inc
cmp
dec
shll
cltd
or
add
sub
pop
jae
pop
pop
movsl
loopne
popf
pop
sbb
xorl
cld
je
sbb
mov
mov
clc
mov
cmp
cli
jno
inc
mov
fs
sbb
orl
mov
mov
or
mov
lods
fstpt
and
shrb
xor
add
pop
inc
jnp
dec
dec
shlb
dec
inc
ret
bound
mov
lahf
add
dec
xlat
pop
mov
jle
dec
les
pop
mov
xchg
jg
arpl
enter
into
repz
pop
call
mov
push
or
outsl
loope
ja
xchg
out
and
ret
jne
xchg
jns
dec
push
push
enter
jp
xor
call
hlt
pop
push
mov
add
mov
xorl
sarl
or
rolb
ss
inc
jno
jmp
inc
xor
and
lock
pushf
jle
imul
test
adc
sbb
adc
popa
inc
adc
mov
arpl
xchg
pop
jno
aam
jg
jb
lret
loop
mov
and
jle
mov
mov
add
adc
or
inc
imul
subb
sti
push
xorl
shll
mov
push
and
sub
or
lcall
jecxz
sub
or
dec
sti
shlb
push
arpl
ret
jl
shlb
rcl
test
cmp
loop
fisttpl
push
xchg
arpl
jg
daa
push
cld
jl
xor
mov
int
movsl
ljmp
cmp
or
je
cmp
inc
xor
das
pushl
nop
push
data16
adc
cmp
mov
test
hlt
sub
mov
or
leave
or
icebp
adc
loope
cmp
adc
sub
add
or
mov
sbb
arpl
lods
dec
les
push
add
lock
push
and
or
fnsave
sub
int3
dec
shll
xorb
xor
fcoml
mov
pop
daa
cmp
inc
xchg
and
and
ret
xlat
dec
adc
shrl
movsl
xor
stos
cmp
inc
ret
mov
imul
xor
and
push
sub
cs
sub
add
int3
out
into
lods
pop
cmp
rorb
add
pushf
in
fs
mov
movsb
adc
mov
push
push
scas
mov
loopne
insl
cmc
xlat
bound
into
mov
cmp
add
dec
xchg
sarb
jge
sbb
out
mov
ss
fdiv
jecxz
adc
and
xchg
negl
push
mov
test
insb
fstpl
add
push
or
decl
test
test
fsts
fdivrl
mov
dec
sub
xor
cmpsb
cmpl
inc
xchg
popf
push
clc
pop
mov
xor
std
add
dec
xor
add
fmull
inc
clc
mov
cmp
cmp
mov
out
xchg
sbb
pusha
mov
jns
inc
xor
push
lahf
push
push
clc
je
mov
ja
dec
xlat
jle
sbb
mov
and
cmp
imul
and
xlat
imul
adc
fidivrl
fsts
outsb
rep
dec
aam
dec
or
mov
add
push
inc
jbe
cmp
les
test
mov
ret
mov
roll
and
enter
int3
out
dec
imul
aas
mov
aas
sub
aaa
sub
cmp
xor
xchg
insb
les
push
mov
mov
lahf
mov
mov
cmpsb
jns
insl
fdivs
push
clc
andl
stos
cltd
jb
mov
push
mov
add
pop
cltd
adc
xchg
cmpsb
pushf
xor
push
mulb
pushf
jp
sub
or
jecxz
mov
mov
xor
shll
mov
dec
and
in
mov
lock
xor
orl
ror
sbb
push
mov
xchg
mov
mov
mov
aas
jb
inc
mov
decl
ljmp
lods
in
dec
sbb
jle
or
mov
add
dec
pop
lcall
into
dec
bound
xchg
pop
imul
sub
cmp
mov
pop
mov
icebp
imul
arpl
push
insl
inc
cmc
dec
lods
daa
cmp
jo
sbb
sub
xor
inc
notl
mov
adc
pushf
in
stos
popa
ljmp
sbb
fldt
insb
dec
jb
dec
cmp
add
les
sbb
jo
jge
int3
jne
fists
mov
stos
mov
gs
xchg
in
jmp
int3
xor
imul
xchg
fisttpl
movsb
push
push
mov
aam
ljmp
or
dec
test
vmread
push
jp
cwtl
aad
push
xor
test
inc
popf
mov
pop
arpl
mov
xchg
repz
xchg
push
dec
cmpsl
test
out
repnz
stos
cmovno
dec
sub
ret
movsl
insb
enter
test
push
js
fstpl
loop
cli
repnz
dec
ljmp
test
in
bound
mov
dec
mov
enter
loope
iret
sub
popf
outsb
xor
adc
xor
jge
pop
mov
ja
push
xchg
sub
cmp
popf
inc
int3
xor
mov
stc
arpl
sbb
or
pop
jp
pop
sbb
je
popa
and
inc
pop
data16
stc
mov
and
inc
jle
pop
adcl
and
lock
dec
lret
lods
and
in
cld
in
push
pop
mov
cmp
or
arpl
rclb
enter
in
jnp
lret
push
mov
cmp
negb
pop
push
push
adc
and
jmp
cmp
push
in
add
ja
shll
mov
adc
mov
add
cli
pop
std
and
sbb
ds
loop
loope
fwait
or
jmp
std
and
jp
sbb
es
push
sbb
insl
outsl
mov
mov
fsubr
sbb
shlb
movsl
test
jno
mov
and
loopne
and
test
out
shll
cld
outsl
pop
mov
in
cmp
test
xchg
test
push
in
adc
mov
js
and
fimull
lea
aaa
inc
ret
lods
pop
mov
icebp
movsb
aad
decl
pop
insl
roll
clc
idivb
icebp
jl
lock
sbb
push
pop
test
repz
mov
add
or
mov
mov
jae
fisubl
in
and
push
cld
xor
cmp
clc
pop
jmp
hlt
and
es
add
fdiv
or
adc
out
or
push
test
mov
mov
scas
jo
and
dec
dec
or
mov
fwait
jecxz
inc
jbe
push
jge
pop
inc
shr
iret
addr16
xchg
mov
ret
enter
loopne
ret
ljmp
mov
dec
stos
into
outsb
pop
jae
and
rorb
xor
add
enter
dec
movsb
movsl
je
inc
dec
push
outsl
dec
jo
test
xchg
mov
ret
sub
adcl
bound
mov
lret
or
fiaddl
frstor
mov
loopne
adc
pop
jo
push
cmp
insl
loop
test
dec
cld
cli
jb
lret
pushf
add
mov
or
mov
mov
outsb
jp
enter
add
cmp
sbb
jno
xorb
ret
mov
sbb
cmc
test
jno
in
dec
xchg
aaa
inc
pop
mov
loop
ja
mov
shl
sbb
push
sub
out
rcll
arpl
dec
pop
roll
xchg
sub
pop
aad
in
jbe
jecxz
pop
dec
dec
bound
inc
xor
pop
and
ficomps
lret
inc
insl
mov
icebp
jno
addr16
cmpsb
pop
push
adc
pushf
pop
xchg
mov
push
loope
sub
xchg
mov
mov
les
jns
sub
sarb
jg
and
sahf
jne
mov
test
or
out
dec
or
popa
add
enter
arpl
fstpl
daa
fs
dec
les
pushf
push
dec
mov
lcall
fbld
pop
mov
push
cld
lahf
popf
dec
loop
out
sub
ficompl
in
sbb
loopne
dec
dec
inc
and
arpl
dec
sbb
or
or
cmp
pop
jae
sbb
mov
jl
adc
pmaddwd
in
test
bound
movsb
flds
pop
aas
inc
inc
mov
xchg
pop
xchg
fs
aaa
loop
loopne
dec
je
mov
rcl
out
sbb
push
mov
xchg
insb
inc
shl
pop
out
sub
pop
dec
stos
and
in
addr16
fwait
xchg
sub
mov
push
xor
inc
mov
mov
stos
xchg
or
pusha
sbb
jno
divl
cmp
lods
mov
cwtl
mov
ret
add
add
cmovb
int
mov
arpl
mov
or
int
ret
nop
cmp
mov
ret
ja
outsb
add
lds
cwtl
push
test
cld
inc
icebp
jecxz
jmp
lret
stos
pushl
inc
inc
enter
sbb
add
or
mov
or
cld
decl
jae
fildl
add
movsl
xor
sarb
popa
loopne
sbb
mov
dec
pop
out
lret
mov
xchg
rcrl
dec
sub
les
add
or
jmp
mov
adc
and
jne
push
cltd
cmp
shr
fs
enter
mov
sbb
test
sub
jo
inc
or
jbe
insl
shll
testl
jns
pop
ret
in
mov
das
arpl
mov
nop
dec
sub
bound
lcall
push
cmp
and
mov
sub
lcall
js
fldt
jae
sbb
cwtl
int3
mov
roll
and
daa
fs
mov
xor
jb
inc
mov
enter
out
inc
notb
and
jns
scas
xchg
dec
dec
in
fimuls
xor
xor
repz
mul
ja
dec
mov
mov
pop
and
or
add
je
xor
aam
movsb
dec
xor
fisubl
imul
inc
dec
sahf
sbb
mov
xor
les
sub
shrl
daa
push
repnz
ret
enter
sahf
enter
aam
leave
fwait
das
jnp
in
jb
xchg
pop
ss
push
add
pop
sbb
fsub
clc
jecxz
pop
jnp
adc
aad
pop
add
pop
push
movsb
or
shll
jae
inc
icebp
xchg
mov
imul
pop
pop
shlb
pop
imul
pop
jecxz
dec
movsb
std
inc
movsl
lret
mov
addr16
and
test
xchg
fwait
imul
stos
adc
push
inc
mov
and
aas
jne
or
movsb
std
and
leave
nop
xchg
and
or
sbb
inc
scas
inc
pusha
and
ja
and
or
outsl
pop
mov
cltd
inc
jmp
and
push
sub
sbb
mov
loopne
add
sub
push
pop
and
dec
jne
in
cmp
inc
mov
add
adc
add
sahf
mov
add
xor
adc
or
cmp
inc
pop
xchg
loop
mov
repz
jmp
xor
add
jbe
push
outsl
mov
sub
cmpsl
fsubl
adc
jnp
xchg
cltd
shlb
ret
xor
in
add
push
cmc
xchg
repnz
and
scas
push
mov
push
ds
out
pop
shlb
or
mov
int3
xchg
or
and
repz
shll
jbe
dec
divl
fstps
clc
pop
pop
test
ljmp
and
stos
cmp
and
arpl
popa
add
jbe
movsb
and
ljmp
inc
pop
cwtl
push
and
pop
pop
arpl
jb
inc
test
xor
imul
out
sbb
push
mov
aad
divl
inc
inc
jne
and
sbb
sub
xchg
cmp
adc
js
push
cmp
dec
pop
mov
outsb
shrl
jb
and
arpl
out
mov
mov
push
and
lcall
inc
jecxz
js
add
jg
push
pop
push
loop
jo
scas
and
ss
cmpl
lods
and
and
test
fs
jb
repnz
push
push
outsl
orb
mov
xor
pop
lock
xor
and
out
push
mov
cmp
imul
pop
sub
and
fcom
nop
insl
inc
dec
lret
cli
add
xor
sub
ret
or
mov
inc
and
hlt
or
sbb
cltd
and
out
cltd
mov
addr16
sbbl
xor
stos
ficoml
mov
mov
and
sti
or
inc
and
jae
jecxz
xchg
dec
dec
sub
push
inc
addl
and
xchg
lods
inc
daa
xor
aad
in
xor
iret
and
and
mov
test
add
in
push
xor
mov
and
jge
je
xlat
imul
push
daa
aaa
or
mov
vpsubw
shr
and
repz
jge
loopne
and
sub
stos
sti
stc
pop
and
or
loopne
jns
out
icebp
es
cmp
mov
xchg
pop
dec
popf
mov
and
cmp
and
icebp
aad
scas
test
and
pop
in
hlt
and
sbb
jo
cmc
mov
imul
mov
add
and
or
and
fcmovnu
aad
ss
xor
rorb
sub
pop
in
cmc
les
xor
dec
push
and
cmp
shlb
test
mov
cmp
sti
loope
sbb
popf
and
rorb
and
out
insb
or
or
cmp
pop
dec
mov
jnp
stos
int
sbb
lret
add
jge
fbld
inc
and
and
das
adc
cmp
popf
sub
adc
mov
push
lock
repz
and
xor
push
and
jns
xorl
mov
rcrb
std
and
rol
xor
aas
jle
call
pop
xlat
cli
and
nop
lods
pop
out
and
pop
sbb
cmp
jb
jecxz
push
inc
mov
pop
xorb
xchg
ret
cmp
fisubs
lret
mov
mov
sahf
xchg
cs
push
jecxz
jns
and
imul
inc
and
cmpsb
push
ljmp
inc
push
lds
daa
push
cmp
mov
inc
jecxz
cmp
and
mov
ja
iret
jo
adc
mov
nop
aaa
mov
aam
inc
sbb
outsl
sar
push
jmp
dec
mov
loope
stos
and
out
mov
xlat
dec
ret
cmp
inc
mov
mov
sbb
dec
sahf
push
xlat
adc
enter
xchg
mov
pop
sub
jp
pusha
push
repnz
sub
inc
inc
int3
enter
sub
ret
loopne
ja
in
mov
push
dec
dec
jbe
and
sbb
ljmp
into
lock
pop
daa
mov
test
inc
stc
mov
adc
mov
or
mov
mov
dec
enter
adc
popa
push
movsb
ss
aad
xchg
xor
shlb
add
and
stos
dec
std
scas
ret
and
test
cmpsb
scas
mov
stos
add
mov
dec
pop
pop
pop
add
mov
and
and
cld
test
xor
mov
mov
in
repz
push
jmp
in
bound
pop
popf
and
jbe
shll
xchg
sub
cmpsl
les
je
adc
inc
fidivs
and
fadd
and
and
sti
pop
dec
sbb
or
pop
push
inc
dec
or
cmp
ss
sbb
mov
in
mov
and
movl
cmp
movsl
movsb
loop
xor
sbb
pop
dec
or
inc
outsb
arpl
push
rcll
xor
jg
pop
inc
sti
or
aam
clc
stos
xchg
enter
mov
inc
cmpsl
adc
aad
add
ja
dec
pop
push
pmaxsw
sub
push
out
and
jbe
xchg
pop
jne
aas
xor
mov
jmp
jno
les
idivl
lock
enter
xor
dec
or
mov
jns
pop
movsl
xlat
inc
inc
lret
mov
jno
mov
aad
jmp
sub
inc
enter
mov
es
jne
sbb
pop
fdivs
add
sub
add
sti
cmp
fcoml
pop
lea
sbb
and
sub
mov
mov
pushl
cld
outsb
sbb
movsb
mov
sub
outsb
cmp
lods
mov
jns
inc
and
pushf
jo
loop
mov
pop
push
or
dec
jb
pop
jnp
test
ret
int3
jge
push
and
push
test
mov
fadd
out
inc
ret
cmp
loop
and
fcomi
gs
cmc
inc
stos
inc
shlb
dec
test
adc
adc
xor
inc
jno
add
hlt
and
arpl
jle
ret
dec
jp
aad
dec
jp
inc
sub
out
sarb
xor
push
arpl
cli
stos
stos
dec
cwtl
mov
pushl
add
in
inc
inc
jnp
imul
push
jbe
loope
push
push
ficompl
enter
pop
cmpsb
jns
pop
mov
mov
push
jb
or
adc
dec
pop
inc
les
add
fwait
sbb
inc
xor
mov
mov
mov
xchg
mov
ret
rorb
pop
xor
mov
sbb
aaa
scas
mov
mov
mov
inc
xchg
hlt
push
fld
out
enter
in
insb
or
ljmp
dec
jl
sub
mov
sbb
mov
enter
cmp
sub
shl
mov
aas
jnp
inc
daa
cmp
adc
push
pop
xchg
mov
inc
jmp
jl
cs
into
in
les
sub
hlt
push
xchg
adc
mov
jns
out
adc
arpl
cmp
leave
xchg
mov
and
push
bound
mov
test
cltd
lret
popf
mov
xlat
in
ja
subl
fcompp
add
xor
addps
repz
add
das
xor
loope
gs
enter
sub
andl
cltd
jns
ficompl
mov
mov
addr16
xchg
jbe
fnstsw
cld
dec
imul
cwtl
arpl
lahf
out
leave
sub
lcall
push
sbb
sbb
mov
out
int3
mov
or
mov
enter
mov
sbb
xchg
stos
push
js
out
jge
sbb
add
cmp
adc
sub
mov
roll
insb
movsl
xchg
ss
inc
cmp
fldt
pop
xchg
fwait
icebp
or
jb
sbb
hlt
or
ror
lret
mov
lcall
mov
and
pop
adc
hlt
and
push
movb
and
push
lea
mov
adc
stos
jno
cwtl
xlat
adc
mov
lods
subl
mov
push
jge
punpcklbw
cmp
in
scas
dec
das
xchg
or
iret
daa
jbe
sbb
jp
test
sub
pop
mov
test
push
xor
repz
adc
rolb
les
push
mov
and
movsb
dec
xlat
cmp
les
fldt
adc
stc
push
daa
stos
out
popa
xchg
ror
mov
push
inc
fsubrl
xor
xor
sub
out
pop
inc
scas
sahf
inc
xor
jle
push
lock
sbb
sub
mov
pop
jbe
mov
xchg
ss
mov
les
xchg
into
xor
xlat
pop
jle
mov
mov
jbe
faddl
sti
nop
arpl
add
stos
and
jp
mov
bound
mov
int
dec
jl
fbstp
push
popa
ja
sub
je
sub
inc
cmp
jno
mov
cltd
ljmp
mov
pop
enter
clc
mov
lahf
or
roll
shll
gs
xchg
push
and
sbb
out
add
mov
dec
shlb
scas
push
insl
les
jecxz
mov
test
or
fldcw
mov
lcall
jb
imul
shll
xchg
jmp
das
popa
dec
test
cmpsl
dec
add
add
sbb
sub
adc
ret
pop
cmp
int
jnp
fst
xor
pop
rcrl
pop
sbb
inc
jmp
jl
aaa
xor
fsubs
jns
insl
lods
in
pop
cld
mov
das
shr
xorl
shlb
out
adc
pop
ret
sbb
inc
dec
xor
decl
jns
dec
arpl
jmp
mov
mov
cmp
fsubrs
adc
adc
mulb
add
pop
les
sbb
enter
cmpb
pushf
les
outsb
je
sbb
clc
push
fbstp
and
outsl
or
pushf
and
push
sbb
dec
mov
jns
xor
xor
fiaddl
cmp
out
push
push
pop
addr16
mov
shl
call
lds
testb
adc
mov
das
inc
fstps
xor
dec
inc
clc
shlb
shrl
xor
jb
stc
notl
jb
js
add
mov
dec
cmp
inc
dec
ret
in
cltd
sub
mov
lods
imul
in
imul
ljmp
bound
jmp
mov
lds
bound
jb
jge
cmp
iret
lods
mov
pop
popf
imul
orb
sub
pop
jecxz
jnp
repnz
icebp
inc
idivb
pop
loop
and
les
push
xor
decl
mov
xor
inc
das
inc
push
orb
jo
rcrb
jne
stos
jns
ds
arpl
aad
fistpll
inc
out
push
js
inc
cs
pop
xor
js
xor
sbb
rcll
scas
add
xor
sbb
push
jne
pop
inc
pop
xchg
jmp
shrl
inc
push
push
sub
mov
mov
xor
xor
mov
stos
adc
add
pop
sar
mov
xchg
xor
mov
fisubrl
jae
hlt
cmp
jbe
mov
decl
arpl
test
mov
arpl
xchg
sar
mov
and
roll
xor
sbb
xor
cmpsl
cmp
int3
sahf
lret
xor
pop
sub
xchg
sbb
imul
mov
fadds
mov
jno
cltd
fwait
mov
out
les
data16
pushf
bound
inc
fisubrs
aas
fstpl
xchg
enter
push
int3
inc
lods
jle
jbe
ret
mov
shlb
enter
inc
mov
lea
xchg
ret
pop
cmpsl
into
adc
sub
mov
add
xor
sub
ret
clc
jb
les
sub
shl
mov
lods
xlat
mov
cmpb
js
jecxz
sahf
push
mov
lock
sub
dec
add
xchg
bound
xor
cmp
lcall
cwtl
inc
or
or
jno
jb
inc
mov
imul
es
dec
mov
pop
jecxz
xchg
and
xchg
insl
pop
mov
jge
dec
inc
and
pop
inc
sahf
fcmovbe
sbb
and
lock
dec
and
sbb
jle
add
jge
or
push
push
lds
stos
push
add
addr16
outsl
js
js
lods
adc
ret
insl
jl
cmp
aam
das
popa
dec
sar
adc
sub
or
add
sub
jbe
subb
ffree
popf
xchg
push
adc
test
bound
xchg
jle
push
dec
cli
lahf
cmp
and
jbe
outsl
loope
mov
sub
xchg
hlt
sub
pop
mov
dec
das
mov
xchg
xchg
xor
stos
pop
sbb
jl
dec
pop
mov
cs
movsl
xor
inc
dec
mov
jge
enter
and
ja
inc
imul
mov
ret
xchg
mov
mov
cmc
and
rcll
pop
mov
pop
pop
mov
fsubrs
xchg
sub
les
or
push
add
scas
xor
inc
fstp
add
aam
xor
xchg
fistl
xchg
xchg
into
ljmp
jl
cmp
insl
inc
add
sub
pop
jne
xchg
mov
xor
jns
dec
xchg
mov
mov
aad
sub
xchg
out
xchg
imulb
subl
xchg
imull
mov
cmp
les
adc
or
mov
sub
lods
mov
sub
imul
mov
lods
loopne
add
les
xor
pusha
or
fildll
jl
fwait
pop
jo
loope
sarl
imul
pop
sbb
mov
sub
add
lret
pop
sub
mov
pop
dec
shrb
cmp
das
add
jnp
inc
cmc
sub
cmc
arpl
mov
or
xchg
bound
enter
push
ret
mov
jl
add
sub
and
and
adc
enter
pop
push
mov
adc
fwait
jns
jns
or
loope
and
push
lret
and
inc
sub
lods
xchg
adc
jle
add
jle
sbb
xor
sub
js
xor
enter
jge
lcall
jge
cld
je
jae
or
es
lods
xorb
and
in
imul
xchg
je
lea
adc
mov
jg
fdivrs
mov
pop
push
fstpl
lods
pop
sub
decb
movsl
and
dec
mov
cmp
test
dec
push
push
outsl
push
sub
sbb
sbb
test
xchg
test
xor
dec
lret
mov
leave
sbb
jg
xor
inc
bswap
bound
xor
add
pop
mov
jg
mov
xchg
mov
aam
push
xor
enter
nop
leave
pop
pop
or
jle
sbb
loopne
repz
ret
test
test
cmp
test
inc
mov
stos
inc
cld
mov
pusha
inc
ljmp
adc
adcl
lret
roll
bound
lds
push
es
xchg
outsb
dec
jge
mov
sbb
aad
stos
je
push
push
mov
xor
cmp
jl
test
cmp
sbb
enter
shlb
mov
test
lds
xor
outsb
dec
mov
mov
movsb
push
fldl
jp
sub
jp
fnstsw
sub
mov
or
shlb
push
les
and
loope
cmp
xor
cld
inc
fiaddl
sbb
xchg
jns
mov
mov
lret
and
fisubs
scas
les
mov
sbb
xor
fldl
mov
lret
aad
jl
adc
xor
mov
push
inc
in
push
push
pushf
mov
adcl
xchg
sbbb
pushf
mov
imul
mov
and
mov
pop
dec
inc
testl
or
cs
and
push
enter
aas
and
movsl
aaa
or
and
sarb
jge
sahf
and
pop
les
iret
and
stos
add
push
and
sbb
leave
sub
sbb
jmp
mov
sti
and
and
loop
gs
mov
xchg
mov
sub
xor
dec
call
push
fiaddl
das
mov
outsb
les
cwtl
or
es
icebp
and
das
sarb
sub
xor
inc
jbe
fdivrl
rclb
jp
and
lods
or
jmp
and
jo
dec
je
pop
and
sti
negb
xlat
add
loop
std
mov
push
mull
icebp
fisubrs
dec
dec
mov
popa
stc
and
sbb
cmp
gs
pop
arpl
mov
or
and
daa
adc
and
mov
mov
and
push
xchg
sub
mov
popf
mov
push
and
lods
mov
push
scas
dec
xchg
fimuls
sub
into
or
movsb
lds
sti
and
push
cmp
and
sbb
testl
aas
mov
mov
or
xlat
ja
xor
fs
mov
adc
aas
or
sub
adc
xchg
or
and
mov
jle
sarl
and
stc
add
xor
dec
outsl
hlt
mov
and
xor
and
mov
pop
inc
popf
fs
decl
les
pusha
and
fs
pop
aaa
daa
sahf
mov
cmp
clc
mov
xlat
out
xchg
inc
or
cmc
xor
mov
mov
inc
mov
inc
xchg
and
pop
rep
inc
nop
movsb
and
or
or
dec
scas
push
mov
xchg
and
imul
test
inc
sub
sub
mov
and
dec
notb
mov
jbe
add
movsl
mov
mov
dec
mov
sub
cmp
dec
outsb
mov
mov
sub
dec
and
cmp
push
lcall
and
aaa
xorl
lea
fnclex
popa
loopne
and
push
iret
dec
and
push
sub
in
add
jl
push
clc
lock
ljmp
inc
push
and
enter
das
xchg
mov
and
xchg
mov
shrb
add
sub
inc
pop
pop
in
pop
fwait
movsb
push
rcl
mov
out
xchg
pop
sub
jo
rcrl
inc
es
popf
or
bound
pop
ss
mov
xorl
hlt
stos
cltd
je
das
and
jecxz
jg
xchg
fisttps
jle
sub
xchg
repz
push
mov
pop
inc
and
dec
jmp
xlat
out
in
gs
adc
add
stos
mov
mov
mov
jne
ss
sub
mov
mov
mov
dec
pop
and
dec
stos
lahf
jmp
push
xor
sub
and
and
test
std
xor
and
mov
mov
adc
repz
push
aam
lret
int3
xor
mov
adc
xlat
mov
mov
ffree
dec
in
leave
fsts
outsl
sub
sbbl
test
pop
inc
xlat
sbb
cli
cmp
je
xchg
les
arpl
mov
or
fldcw
or
mov
les
insl
and
mov
ret
movsb
mov
cmpb
push
loope
mov
dec
xchg
addl
ja
mov
shll
rol
cmpsb
sub
fadds
push
fsubl
mov
pop
cmpl
or
int
ljmp
xor
xor
faddl
jnp
aad
or
testl
push
cmpsl
pop
arpl
jmp
push
popf
insb
or
loop
sub
push
xor
leave
pushf
shlb
xchg
sarl
popf
stos
dec
aas
sub
div
in
andb
sti
inc
adc
pop
jb
mov
jge
ret
mov
inc
inc
enter
les
dec
les
inc
xchg
add
xchg
imul
fadd
loop
pushw
imul
and
cmp
outsl
jnp
test
dec
inc
push
lahf
popa
ss
push
cltd
not
ret
int3
xchg
mov
seta
ja
sub
aad
xor
mov
mov
lahf
inc
cmovne
adc
push
or
xor
enter
xchg
mov
addb
cltd
dec
mov
add
push
mov
dec
subb
cmp
js
shl
pop
fbstp
mov
adc
call
pop
and
test
jb
gs
cltd
aaa
into
and
jmp
sbb
mov
and
and
or
mov
repnz
and
push
into
inc
and
xor
imul
das
je
pop
push
dec
stc
and
outsl
xchg
in
rorl
mov
gs
sub
test
dec
lock
aaa
and
pop
or
xor
dec
subl
aad
pop
and
and
pop
negl
adc
add
stos
sbb
fsubl
daa
pop
add
jne
cwtl
out
and
gs
notb
and
cmp
dec
loop
push
lods
icebp
pop
mov
cmp
lods
sti
js
and
push
mov
fidivrs
cltd
pop
out
add
call
bound
popf
dec
sarb
mov
push
mov
loope
cmc
jge
movsb
jp
mov
sub
xchg
ffreep
sbb
and
xchg
frstor
and
sarl
mov
js
xor
mov
test
jle
push
das
loop
arpl
inc
jmp
repz
test
push
test
inc
inc
out
lea
dec
repnz
mov
test
mov
xor
and
add
mov
xor
cmp
dec
icebp
sbb
nop
in
movsl
dec
clc
fisubl
mov
es
xchg
push
mov
sbb
test
or
sub
lret
jo
xchg
mov
pop
mov
xchg
add
mov
mov
enter
movaps
inc
or
push
inc
mov
and
and
sti
pushl
outsb
xchg
ja
lcall
cmc
lahf
or
scas
js
hlt
cmp
adc
pop
adc
mov
push
arpl
pop
dec
ror
push
jb
inc
scas
pop
lods
pop
aad
jg
rcr
mov
aad
push
pop
insl
mov
daa
mov
xor
sub
inc
jns
dec
movsb
sub
int
adc
insl
mov
pop
popa
out
mov
sahf
repnz
les
imul
roll
xor
jns
sub
leave
add
xchg
mov
cwtl
inc
push
sarl
mov
int3
jg
jno
mov
mov
and
nop
sbb
in
enter
xor
frstor
ret
test
adc
mov
loope
pushf
adc
aad
ss
pop
pop
sub
sbb
sti
int
jb
add
popf
pop
daa
mulb
lahf
cmp
jge
cmp
sbb
or
dec
rcr
je
ret
in
add
xchg
movsb
fsubs
and
ret
leave
pop
into
adc
sub
lret
inc
les
jbe
rcrb
ja
mov
and
mov
jmp
insb
xchg
lahf
sbb
fstl
ret
inc
xchg
xchg
sahf
adc
mov
addr16
pop
rol
jae
js
push
repnz
xor
mov
dec
ljmp
push
mov
clc
or
lock
rol
and
push
fs
shlb
out
or
inc
mov
pop
jg
daa
clc
or
xchg
or
jge
sub
stc
fidivrl
xlat
cli
jne
mov
xchg
dec
pop
cmp
dec
arpl
inc
movsb
loop
or
pop
and
jecxz
in
daa
loop
sub
adc
xchg
repnz
jle
mov
lret
mov
inc
jl
fnstsw
fsubl
jo
adc
jno
jge
mov
mov
shrl
sti
mov
leave
divb
inc
ffreep
mov
adc
lds
mov
popa
jg
or
cmpsb
add
sub
mov
or
sub
xor
xchg
insb
sbb
pushf
sub
push
sub
call
mov
call
rcrb
push
test
repnz
jge
adc
stc
add
vcvtsd2si
sbb
iret
rcll
cmp
sub
xor
sub
mov
andl
lret
pop
mov
sbb
push
pop
or
jnp
xlat
pushf
shll
lock
daa
xor
int3
push
push
ret
push
aaa
jb
jae
push
xchg
int
add
pop
out
inc
sub
cmp
mov
inc
xchg
inc
pop
push
add
inc
adc
sbbb
mov
iret
dec
mov
add
push
lahf
arpl
sub
imul
shll
and
and
popf
dec
inc
les
cmpsb
sahf
frstor
dec
lret
pop
aas
movsb
out
cmc
pop
pop
or
popf
xlat
clc
popa
loopne
test
or
ja
mov
or
aad
cmovnp
jecxz
cmp
clc
mov
inc
pop
cmp
dec
xlat
adc
dec
sahf
xor
inc
pop
test
and
or
daa
ret
jbe
xchg
jp
ss
cmpl
popa
push
dec
out
xor
enter
mov
inc
jne
dec
bound
sub
adc
mov
sub
jo
cmp
adcl
aaa
xlat
jle
int3
mov
or
insb
mov
fistps
pop
jnp
arpl
into
ror
jb
push
mov
imul
negb
imul
or
sbb
fnstcw
or
xchg
pop
ljmp
cmc
or
popa
sub
imul
aam
in
enter
test
orb
mov
push
mov
push
add
lods
ret
aam
inc
test
push
cmp
and
push
pop
pushl
pop
xor
push
lcall
pop
shll
ret
fsubs
pop
mov
daa
dec
rclb
in
push
sub
jg
lahf
je
mov
mov
mov
clc
ficoms
test
adc
ret
sbb
lahf
push
inc
insl
call
inc
popa
mov
mov
in
fsubrl
data16
lret
and
popa
push
cmpsl
decb
iret
add
push
repz
ds
adc
and
xchg
adc
aas
je
push
jmp
pop
mov
fucom
cs
lcall
es
arpl
add
mov
mov
into
clc
push
push
ljmp
imul
inc
sahf
shl
jmp
movsl
pop
out
jg
jmp
cwtl
adcl
dec
mov
xchg
sbb
jp
mov
or
push
mov
xchg
dec
iret
inc
or
in
xor
pop
mov
testb
inc
cmp
loopne
and
cs
das
ds
aaa
stos
loop
pop
mov
cmp
ret
pop
fcompl
mov
pop
dec
aam
xchg
jg
fildl
jbe
sub
xor
lods
lods
inc
pop
adc
mov
cli
inc
mov
xor
xchg
outsb
movsl
add
adc
lcall
pushaw
sbb
jns
mov
cmp
clc
sbb
and
test
mov
jecxz
ret
mov
cmp
xor
push
jne
inc
xchg
cltd
sub
xor
not
push
pop
lock
icebp
into
push
lahf
xor
lret
repnz
push
pop
dec
xchg
imul
pushf
sbb
sbb
inc
sub
or
and
les
aam
push
out
lcall
loope
es
gs
sbbl
push
imul
jg
sbb
jle
subb
iret
movsb
inc
and
lds
call
add
lcall
frstor
push
ret
das
enterw
fdivr
fs
ror
jae
bound
jae
aad
mov
daa
mov
divl
cmp
data16
and
pop
dec
xchg
sub
sub
psrlq
cwtl
aaa
add
addr16
mov
cwtl
mov
sbb
jb
roll
inc
mov
notl
cmc
dec
or
jo
loopne
daa
cmp
flds
and
mov
add
sti
scas
stos
repnz
sbb
loope
dec
imul
sub
icebp
fcompl
mov
jge
in
shlb
jno
or
cmp
and
jne
aaa
dec
shlb
lock
bound
jl
add
lcall
bound
cmpb
adc
xchg
loopne
popa
les
or
popa
and
xchg
pop
fisttpll
push
mov
xor
and
inc
sarl
inc
mov
push
push
jne
pop
ret
sub
xchg
cmp
cmp
js
lea
or
mov
dec
cmp
mov
xabort
fldt
dec
mov
addr16
js
xchg
enter
out
mov
mov
xchg
sbb
aad
cld
outsb
aad
fdivrl
jmp
sbbb
mov
stc
scas
push
mov
das
pop
and
aam
adc
sub
jecxz
and
xor
loopne
mov
adc
inc
push
cmpsb
dec
je
add
cld
push
les
jl
jnp
gs
xchg
mov
leave
pop
mov
or
test
mov
mov
rcrl
lcall
push
clc
test
scas
mov
shlb
popa
push
mov
imul
sbb
or
mov
jno
imul
jno
mov
imul
jnp
dec
imul
ss
sbb
into
imul
and
aad
jle
aam
into
mov
inc
jne
cld
aad
roll
mov
loop
stos
mov
jecxz
inc
out
lret
orps
add
cs
icebp
mov
mov
sbb
mov
xorl
out
nop
mov
jle
mov
enter
push
imul
roll
xor
fcmovbe
lahf
sahf
or
jmp
insl
les
fdivl
notl
idivb
test
sbb
pop
and
xor
jbe
add
adc
aad
mulb
in
jae
in
stc
pop
adc
xchg
push
das
xchg
xor
push
fmul
push
fldenv
adc
xor
cmp
iret
movsb
inc
cli
xchg
pop
lea
mov
xor
adc
movsb
pop
shrb
aad
dec
int
and
fisubl
inc
ret
pop
stos
add
push
cwtl
cmpl
lds
bound
sub
fildl
xor
sub
leave
push
rep
xor
iret
dec
inc
or
cltd
xchg
orb
or
xchg
leave
sbb
mov
pop
loop
mov
dec
push
imul
xchg
cmp
aam
cld
dec
arpl
pushw
cmp
iret
sbb
sbb
xchg
push
les
into
aad
sbb
cmp
push
loope
fdivr
sahf
movsb
jb
cltd
inc
xlat
or
repnz
jno
cli
mov
pop
leave
jecxz
cmpsl
mov
mov
lds
jge
test
bound
add
add
aas
and
add
add
arpl
push
popf
and
std
xchg
xchg
inc
mov
cmp
movsl
les
lcall
call
push
inc
incl
or
cmp
pcmpeqb
xlat
ret
faddl
int3
cmp
fwait
pop
imul
pop
pusha
dec
sahf
loope
mov
jo
push
cmp
pushl
movsl
outsl
xchg
pop
lret
sub
sarb
cs
ret
push
test
cmp
pop
xchg
or
inc
sar
fmuls
rcrb
sbb
in
add
or
cli
jmp
ljmp
add
imul
and
daa
xor
aam
xchg
inc
jge
push
and
dec
and
mov
test
xchg
out
daa
cmpsl
je
arpl
pop
mov
aad
iret
stc
dec
int
push
imull
int
jns
fmull
xor
les
jl
add
into
mov
mov
pop
cmpsl
xor
or
mov
icebp
das
push
fiaddl
pop
into
bound
adc
push
jno
xor
pop
pop
popa
inc
mov
imul
hlt
add
sub
jg
insl
inc
jmp
sub
push
enter
xchg
clc
mov
out
mov
push
aad
stos
je
mov
rorl
or
add
dec
xor
out
test
cmp
or
fmull
aaa
adc
xchg
jl
pop
enter
fildll
dec
fidivs
pop
jo
jns
leave
scas
xchg
insl
sti
int3
push
adc
jne
pop
dec
xorb
mov
pop
sbb
jle
popf
imul
sbb
inc
dec
mov
mov
jbe
arpl
push
pop
in
rcll
clc
push
rorl
int3
mov
clc
push
or
les
movsb
push
stos
mov
pop
xchg
inc
xor
outsb
lcall
into
divl
inc
cltd
inc
es
and
shrw
jo
ret
push
out
dec
jns
int3
jp
sub
push
lret
push
bound
aam
mov
aad
xchg
mov
in
mov
dec
adc
leave
xchg
dec
bound
ljmp
outsl
sub
imulb
dec
xchg
add
sub
imul
cmpsl
sub
mov
mov
jno
adc
fs
sub
push
or
lock
dec
pop
xor
lahf
sahf
jno
sub
sub
jo
mov
jmp
jge
pop
mov
push
push
jbe
adc
pop
mov
enter
aam
adcb
cld
sbb
push
cs
enter
and
pusha
mov
jp
mov
ljmp
ja
sbb
push
jno
inc
and
sahf
arpl
pushf
mov
sub
xlat
test
xor
enter
arpl
sbb
in
insl
and
sub
jle
xchg
lcall
dec
aas
testb
jnp
addr16
popa
out
mov
jns
adc
negb
inc
int
inc
pushf
jl
out
add
pop
jg
es
mov
lahf
ss
loope
les
cmpsl
mov
movsb
data16
or
rorl
ljmp
xor
out
sub
orb
lods
jle
sub
xor
cmp
cwtl
ja
pop
or
sbb
pop
andl
ljmp
insl
xchg
xor
sahf
int3
dec
rclb
out
push
cmp
negl
rcll
pop
mov
sub
xor
bound
imul
subl
inc
enter
insb
mov
or
mov
andl
dec
mov
pushl
sbb
jno
mov
hlt
inc
jge
dec
fisttpll
movsb
negb
ficomps
cmp
push
repz
mov
xor
pop
mov
repz
or
inc
cltd
dec
dec
fadds
repz
or
and
adc
mov
push
or
pop
mov
mov
loopne
enter
repnz
mov
or
mov
sub
shrl
push
sti
pop
ret
inc
les
xor
lcall
jmp
sub
push
outsb
pop
fwait
insb
sbb
scas
sbb
dec
int3
arpl
push
or
lret
jae
loopne
xor
sub
and
adc
and
repz
test
sub
jno
jbe
jl
xor
adc
sbb
test
les
leave
sbb
sahf
xorl
dec
das
je
and
add
cmp
lock
mov
fildll
inc
mov
fldt
iret
daa
dec
lahf
sub
aaa
push
jle
inc
or
js
insb
adc
jbe
movsl
mov
call
frstor
lret
insl
xor
add
insl
cmovno
push
pop
insl
mov
mov
lcall
je
repz
movsl
jo
push
cld
bnd
xor
sbb
inc
inc
push
sbb
adc
fwait
ja
imul
loop
jns
int3
xchg
iret
movsl
insb
in
or
inc
and
or
les
lahf
and
inc
in
adc
movsl
fimuls
outsl
cmp
inc
xchg
fdivp
jns
adc
rorb
loope
push
dec
movsl
roll
sub
mov
push
pop
pop
imul
movsl
pop
or
cmp
sbb
cmpl
sub
mov
stc
enter
and
mulb
xor
fs
aad
mov
dec
fs
hlt
sub
push
aaa
add
test
into
addr16
aad
flds
out
std
cmp
dec
xchg
imulb
xor
sahf
mov
and
inc
fistl
int
es
xor
cltd
lock
pop
xor
rcll
push
loopne
imul
ret
xchg
cmpb
push
insb
pop
js
push
aad
mov
scas
inc
dec
cld
leave
lcall
adc
std
lret
test
scas
xlat
lcall
mov
sbb
jecxz
test
repz
pop
xor
cmp
cld
fs
xor
pushf
mov
xor
cld
int3
jge
fwait
sub
xchg
loop
sub
mov
daa
pop
jbe
or
daa
pop
xchg
adc
push
cmp
mov
xchg
push
dec
les
sbb
mov
jns
lret
js
adcb
pop
nop
jns
imul
inc
xor
std
xor
pop
sub
outsl
jg
mov
fdivl
popw
out
pop
xor
ret
mov
dec
push
and
mov
aas
sub
and
sub
add
scas
cmp
imul
dec
jo
loopne
imul
les
and
daa
clc
mov
pop
pop
mov
xchg
ret
push
std
pop
sbb
pop
mov
les
mov
xchg
in
xor
ja
push
daa
xchg
fldenv
inc
jno
mov
mov
or
aaa
push
sub
xor
test
bound
outsb
loope
dec
imul
pop
mov
pop
mov
insb
fwait
dec
clc
dec
lahf
ret
imul
fnstsw
les
stac
sub
insl
add
popf
test
gs
mov
divb
or
xor
jle
xor
push
arpl
sbb
das
in
flds
aaa
jg
out
je
aad
adc
pusha
mov
les
mull
cmpxchg
out
xor
push
push
in
stos
mov
outsl
pop
pop
aaa
mov
jge
fcomip
cmp
jnp
rcrl
xchg
lods
mov
gs
push
scas
imul
ror
mov
or
inc
xor
add
dec
mov
adc
bound
cmp
dec
and
jmp
cli
or
bound
and
les
divb
dec
and
dec
and
arpl
leave
les
xor
out
cmpsl
cmp
es
inc
add
push
sub
jbe
xchg
fwait
cmpsl
pop
xor
or
mov
cltd
iret
push
xchg
mov
xor
adc
dec
enter
imul
stos
cld
jbe
orl
les
add
dec
pop
push
loope
sbb
pop
jno
fsubl
imul
jb
inc
iret
nop
and
daa
icebp
ret
mov
loop
mov
mov
mov
jge
push
and
es
insb
rep
inc
fcomps
pushf
pop
jno
inc
jns
push
adc
imul
push
movsl
fstpl
mov
popa
adc
add
mov
or
inc
pusha
mov
mov
enter
ret
dec
adc
lret
push
aad
mov
dec
pop
sub
aas
sti
outsl
popf
cmp
push
mov
sub
and
cmp
decl
pop
xchg
out
arpl
dec
pop
stos
iret
sbb
jbe
push
mov
jecxz
shl
inc
in
stos
call
and
call
mov
cmp
jl
xchg
les
xchg
sbb
pop
bound
xchg
ret
icebp
xor
repnz
add
ja
jecxz
outsb
aas
cwtl
mov
add
enter
or
filds
insl
shll
out
jo
sbb
sbb
and
test
stos
lahf
xor
sbb
mov
daa
test
popf
jecxz
ficoms
outsb
sahf
enter
shll
ret
mov
mov
jo
fsubrl
xor
inc
cmpb
enter
jns
bound
push
push
out
int
in
push
enter
jns
cmpsl
pop
mov
inc
sub
lcall
xchg
push
push
mov
mov
arpl
mov
repnz
movl
cmp
fcmovnu
jns
xlat
mov
sbb
pop
adcb
repz
jb
xorb
enter
stc
cmc
dec
jnp
rolb
xchg
sbb
stos
mov
gs
inc
clc
outsb
mov
clc
mov
sarl
insb
inc
dec
xor
pop
sbb
push
adc
ret
mov
push
stos
cwtl
dec
fs
dec
call
push
mov
mov
xchg
inc
lret
rorl
cmp
push
jecxz
js
sub
mov
dec
lret
fcomi
mov
mov
lahf
cmpsl
js
adc
push
aaa
repnz
and
call
sarl
je
mov
lods
xor
xor
mov
jecxz
cmpsl
or
lahf
mov
ret
inc
xor
cli
cld
jp
xor
mov
call
enter
mov
lcall
int3
inc
out
inc
sub
enter
mov
jbe
adc
inc
lahf
push
mov
test
mov
jecxz
sub
addr16
enter
cmpsb
imul
push
in
xor
mov
mov
sbb
xor
sub
lods
das
fldcw
mov
jne
xchg
dec
in
enter
sub
push
mov
xchg
jp
cmp
std
rol
xor
adc
push
pop
aad
xchg
push
xor
imul
repz
je
jno
imul
mov
pop
add
and
clc
adc
and
mov
and
cmp
in
jae
jne
sub
xor
popa
and
cmpsl
pop
subb
dec
mov
inc
mov
jo
fisubl
inc
pop
sub
mov
outsb
loop
and
lock
out
and
test
shrl
mov
adc
jo
and
push
inc
gs
out
in
movsb
add
andl
mov
mov
loopne
push
lret
and
push
andb
ret
mov
in
aam
jmp
int
xchg
add
and
adc
sbb
cmp
and
xor
jp
aam
fistpl
inc
clc
mov
pop
mov
adc
aaa
addl
cmc
movsb
and
jecxz
and
pop
jns
pop
fs
les
inc
in
pop
mov
jge
mov
je
push
popf
mov
push
cmp
sarb
nop
mov
sub
mov
subl
insb
dec
aam
lods
cmc
mov
pop
inc
out
rcll
stc
sub
je
ljmp
pop
mov
jmp
pop
cs
and
jne
adc
inc
dec
xchg
push
adc
jmp
mov
out
jae
add
pushf
cld
mov
insb
push
cmp
out
imul
popa
and
jge
inc
ficomps
aad
pusha
and
mov
sub
pop
or
and
pop
cmp
xchg
clc
stos
mov
sbb
subb
and
lea
or
and
int
mov
ret
lret
sti
imul
inc
fs
dec
popf
aaa
pop
adc
insb
mov
test
push
shl
mov
lods
or
jp
sbbb
mov
notl
pop
xchg
adc
push
sti
js
xor
and
jo
lcall
mov
cs
imul
insb
shr
aam
sub
js
push
dec
enter
in
arpl
xchg
loop
xor
sub
je
loopne
hlt
cmp
mov
in
insl
arpl
pop
and
fildl
pop
and
aas
pop
out
testb
shlb
out
push
movsb
pop
cld
and
jmp
daa
and
inc
push
adc
adc
shl
icebp
shlb
or
cmovg
mov
xchg
and
inc
lcall
cwtl
pop
jnp
push
mov
leave
cmp
cmp
jge
push
fisubl
sub
mov
inc
xor
test
rcrb
pop
push
xchg
scas
ja
mov
cli
shlb
insl
in
and
mov
adc
dec
xorl
hlt
gs
and
lock
in
insl
xchg
mull
gs
or
insb
ja
insb
stos
int
mov
add
stc
jno
mov
bound
or
push
dec
push
dec
jge
and
scas
jae
aam
cmp
enter
int
negl
cmp
push
mov
xchg
lds
loope
test
lret
sti
dec
cmpsl
fldt
cwtl
cmp
arpl
push
xchg
mov
adc
sbb
test
imul
mov
cmp
aam
loop
sti
sar
xor
cmpsl
into
mov
cmp
out
mov
popa
cmp
and
xchg
rcrb
hlt
dec
pop
dec
pop
addr16
xor
sub
in
adc
and
and
mov
jmp
adc
push
pop
xor
or
cmc
adc
stos
leave
loop,pn
or
and
cmp
pop
loop
test
sbb
xchg
jecxz
xor
aam
adc
das
mov
shr
and
std
insl
xor
push
or
and
xchg
insb
test
pop
cmp
popa
push
and
fs
mov
sub
mov
mov
xchg
cmp
pusha
add
xchg
sbb
xor
mov
cmp
gs
test
call
es
cmpl
fbstp
adc
cs
mov
push
into
and
pop
xchg
xor
fidivs
scas
jmp
and
sbb
xchg
enter
cmp
clc
and
jecxz
jno
add
popf
outsb
pop
dec
and
fadds
divl
xchg
and
inc
pop
out
jns
jnp
mov
out
sub
test
dec
and
imul
hlt
pop
in
mov
sub
out
jl
push
and
or
test
add
aas
cmpsl
scas
and
and
in
mov
mov
std
dec
lods
rcrb
xor
and
stc
mov
and
jbe
dec
inc
les
leave
cmp
sub
mov
test
shlb
and
or
or
jnp
nop
aam
cmp
cs
push
mov
cmp
and
pop
addr16
sub
js
aas
add
lahf
inc
negb
sub
push
insl
jg
scas
and
cld
and
xchg
pop
xchg
xor
fsub
mov
lahf
mov
insl
dec
je
pushf
sub
loopne
xor
push
and
test
xlat
and
mov
and
pop
adc
adc
pop
cltd
push
mov
mov
and
add
mov
and
mov
enter
and
sbb
movsb
cmp
and
ljmpw
mov
in
jmp
xor
imul
push
out
das
or
mov
adc
cld
and
push
mov
mov
inc
dec
push
push
insb
and
jne
jmp
leave
add
lret
mov
dec
mov
inc
push
stc
and
mov
arpl
int3
mov
push
out
sbb
arpl
in
out
and
lods
sub
xchg
sti
or
inc
dec
sub
je
pop
test
xchg
dec
cmpsb
les
adc
mov
movsl
pop
jp
jmp
movsb
adc
test
mov
imul
enter
mov
lret
push
pop
jbe
pushf
arpl
sub
inc
les
stos
push
ja
cmp
or
push
imul
cld
lret
movb
dec
inc
pop
shll
pop
ss
mov
jle
test
cmp
ss
nop
sbb
lcall
mov
jmp
les
xor
pop
fimuls
mov
faddl
les
loope
mov
out
filds
pop
fs
sahf
pop
jnp
int
nop
cld
orb
sahf
add
lahf
outsl
xlat
mov
outsb
in
mov
adc
sub
fildll
xchg
jae
dec
enter
sarb
ret
lea
cmp
arpl
and
loope
mov
mov
iret
inc
fucomip
add
xor
mov
cld
iret
mov
sub
imul
push
adc
jns
imul
mov
movsl
push
mov
cmpsb
mov
ss
aam
mov
xchg
pop
insl
mov
xchg
popf
jmp
mov
jns
cltd
mov
aaa
dec
fdivrl
ja
rclb
dec
rclb
and
dec
paddusb
pop
mov
pop
daa
xchg
pushf
dec
insl
push
add
mov
in
bound
pop
sti
mov
jne
clc
divb
xchg
push
xor
imul
sub
notb
xchg
cmp
loope
jl
mov
les
and
pusha
addl
mov
mov
mov
pop
bound
shrb
xchg
inc
jne
pop
aad
in
das
ljmp
mov
dec
in
mov
pop
mov
scas
mov
jns
std
mov
insl
les
outsb
pop
and
pop
fidivrl
ret
push
inc
or
sub
iret
push
sbb
push
rcl
push
jge
xchg
cmc
and
movaps
stos
push
cwtl
pop
pop
cmp
aam
inc
dec
leave
xchg
aas
xor
xchg
pop
xor
sub
mov
pusha
cmp
sub
call
les
ret
aad
mov
fwait
shll
lods
and
and
push
out
pop
mov
sbb
sub
icebp
les
xchg
fisubl
jb
clc
cmp
cs
inc
lret
lods
mov
push
aad
pop
mov
jp
push
repnz
add
pop
inc
shlb
stos
cld
outsb
dec
and
push
mov
outsl
scas
xorb
fadd
or
add
add
out
les
out
xor
or
imul
das
fndisi(8087
aad
inc
pop
dec
mov
inc
popa
dec
and
cltd
mov
scas
loop
mov
scas
loopne
ds
or
or
jmp
daa
sub
xor
jns,pn
lock
pop
scas
pop
mov
sub
ret
scas
cmp
loopne
icebp
pushf
jno
imul
insl
pop
jo
rdtsc
mov
xchg
inc
jge
or
ret
inc
and
sub
push
mov
inc
int3
icebp
andb
outsl
mov
daa
xor
cs
test
dec
int3
push
xor
jno
ja
xor
pushf
fstl
push
inc
mov
popa
cmp
scas
xchg
xor
mov
mov
mov
and
mov
and
jb
pop
lcall
xor
popf
mov
daa
or
movsb
and
dec
jns
push
pop
jno
in
fstl
ficoml
jg
sub
les
add
inc
fisubrs
ret
lods
dec
ja
jno
xchg
push
dec
jns
add
das
enter
mov
imul
loopne
cwtl
bound
mov
loopne
dec
scas
inc
xchg
loopne
push
mov
in
jmp
shll
add
les
mov
and
popf
cwtl
xchg
enter
xlat
mov
test
scas
adc
mov
decl
pop
push
jnp
dec
or
pop
neg
or
or
imul
imul
loop
ret
leave
es
js
cmp
xchg
sub
mov
xchg
pop
xor
jp
test
in
inc
les
adc
xchg
xor
lcall
and
mov
and
adc
and
push
repnz
pop
fxch
pop
adc
shlb
cltd
daa
ret
daa
fiadds
outsb
and
in
rorb
fnstenv
cmpsl
or
and
mov
mov
pop
sub
in
xor
int3
and
or
xor
fidivs
sahf
pop
dec
adc
push
xor
rclb
into
or
dec
dec
pop
push
sahf
or
jno
cmp
and
adc
mov
sub
mov
push
push
push
enter
dec
add
jle
add
and
data16
adcl
lret
gs
xchg
es
mov
pop
and
les
ret
pusha
push
mov
push
enter
shll
pop
or
addr16
adc
xchg
and
iret
shlb
push
movsl
sbb
into
bound
sub
cs
pushf
int3
subl
mov
std
xlat
rcr
inc
push
push
and
arpl
dec
or
dec
test
mov
xor
repz
lcall
js
enter
sbb
call
mov
jne
jnp
loopne
adc
ss
lds
add
and
jbe
push
shll
sub
cmpb
lock
push
mov
and
adc
sub
sub
mov
jecxz
fisubrs
cmp
iret
scas
xor
and
mov
pop
and
sub
clc
mov
jecxz
sub
ds
fiaddl
stos
popf
sti
and
jl
sysenter
sub
stc
movsl
in
push
and
in
dec
and
sub
xor
adc
and
lret
adc
ret
fsubrs
pop
inc
movsb
cltd
or
xchg
jbe
or
fcomps
and
int3
and
adc
add
add
and
push
sub
add
dec
in
and
int3
subl
inc
push
mov
movsb
mov
push
push
lods
xor
push
div
and
shl
sub
push
push
inc
div
and
bswap
aaa
and
call
pop
jg
sub
rcrb
jbe
pop
inc
jae
add
push
jp
sub
cmp
adc
data16
sbb
movsb
ss
xorl
dec
loope
sub
push
nop
fldl2t
sub
adc
fstpt
xchg
inc
mov
push
mov
or
mov
sub
add
push
pop
movsb
sub
insl
insb
arpl
adc
xchg
jl
loopne
mov
cmp
pop
fdivs
cltd
loopne
out
je
or
bound
adc
inc
xor
shll
inc
rorl
mov
dec
inc
enter
mov
fcoms
or
and
push
jecxz
xchg
sub
cmp
inc
mov
movsb
mov
jge
or
sbb
pop
outsl
and
les
cwtl
xchg
mov
xor
xorps
les
mov
push
arpl
mov
repnz
enter
leave
jb
shlb
lods
jge
mov
ja
push
jg
fs
fs
aam
mov
insb
aas
ja
in
or
xchg
and
sub
jmp
rorl
cmp
xchg
jns
pop
into
scas
inc
add
mov
in
aaa
and
adc
cwtl
cmp
pop
out
out
in
aad
lret
sub
adc
mov
mov
stos
inc
sbb
inc
cmp
popf
mov
and
fucomi
mov
and
jae
jge
in
test
lea
mov
lods
xchg
sub
adc
stos
cli
or
das
jno
cmp
and
push
inc
mov
or
jae
imull
and
faddl
repnz
push
and
pop
test
mov
and
dec
andb
mov
cmp
dec
add
jns
lods
cmc
out
push
cmp
mov
clc
iret
and
sti
sub
fdivr
movsb
cld
pop
lock
bound
test
or
add
inc
add
and
iret
hlt
add
mov
aaa
fldenv
pop
sbb
sub
inc
insl
roll
lahf
pop
sbb
adc
pop
out
and
and
pop
push
nop
bound
gs
sbb
push
jmp
sub
frstor
sti
jp
jbe
and
ds
js
loop
cmpsb
movsl
outsl
imul
cmpsl
je
add
xchg
cmp
cmp
jb
movsb
movsb
mov
xchg
xchg
mov
or
and
cs
adc
xlat
loopne
in
ja
and
nop
cwtl
roll
and
xchg
add
in
cmp
movsl
in
xor
push
jns
imul
xor
xchg
xor
xor
stos
inc
pop
jl
mov
rcrb
pop
cmp
pushl
mov
xchg
xchg
ds
and
pop
outsl
repnz
outsb
jp
mov
inc
outsl
jno
scas
mov
lret
lcall
loope
clc
mov
xchg
leave
or
lods
push
shll
mov
dec
jnp
test
fwait
and
pop
in
and
ja
stos
xor
push
ret
fbld
sub
xor
push
negl
shll
loopne
in
xchg
in
inc
les
sub
mov
lods
pop
adc
jo
and
cmpl
and
test
or
insl
imul
shlb
dec
dec
iret
jns
xchg
ret
into
subl
sub
mov
mov
popf
pop
outsb
and
xor
fiaddl
inc
push
enter
mov
push
mull
mov
pop
stos
push
cmp
sbb
push
push
sbb
cld
int
test
bound
add
ret
fsubrl
mov
adc
int
icebp
rcrb
or
imul
sub
adc
pop
ret
hlt
push
jl
xchg
or
outsb
jg
jb
xchg
repz
push
xor
jmp
jb
and
xchg
mov
mov
daa
ret
mov
xchg
add
dec
bound
jmp
push
dec
push
mov
ds
and
add
push
and
lret
rclb
inc
mov
rorl
xor
arpl
mov
aad
insl
ret
xor
adc
jbe
cmp
and
mov
lret
fwait
inc
inc
jae
imul
dec
and
and
or
jge
imul
jecxz
push
les
rorb
dec
sbb
in
fildl
push
test
test
add
jnp
dec
ret
mov
push
imul
popa
inc
push
subl
stos
in
das
ss
clts
dec
cld
je
loopne
push
adc
inc
jnp
ret
add
dec
std
xchg
mov
mov
cs
lahf
sahf
orl
sub
rclb
adc
xor
icebp
jb
mov
enter
sti
les
in
sbb
data16
inc
mov
cmpsl
and
xchg
or
and
fld
inc
pop
mov
xlat
push
mov
jbe
mov
aas
aas
enter
push
adc
add
fmuls
lods
filds
orb
iret
dec
imul
jne
sub
xchg
pop
inc
mov
xchg
lcall
sbb
out
cs
test
jge
int3
pop
rorl
das
insb
jge
inc
imul
ja
jno
ror
xor
ret
mov
pushf
push
enter
ret
mov
push
pop
adc
repnz
jne
into
add
mov
add
movsl
imul
adc
mov
cmc
sbb
cmp
dec
dec
jge
mov
call
push
xor
mov
cmp
pop
push
popf
jmp
jg
ja
pop
mov
fistpll
rclb
xchg
ret
mov
enter
push
int3
lods
daa
add
mov
jbe,pn
mov
adc
push
loope
xor
ret
push
incl
and
fstp
gs
mov
test
icebp
inc
test
test
in
or
adc
push
mov
fcmovu
adc
jno
insl
sub
jmp
in
and
push
sbb
xchg
dec
dec
sub
bound
shll
push
dec
mov
cld
pop
cmp
or
cmp
adc
aad
adc
and
enter
adc
inc
imul
sub
les
pop
aad
add
pop
sbb
into
call
mov
dec
and
out
cmp
xchg
lahf
out
cmp
jl
popa
xor
inc
je
and
and
sahf
cmp
stos
jnp
lods
dec
data16
imul
mov
fucomp
jb
enter
jmp
in
mov
inc
pop
lcall
pusha
mov
pushf
jle
cltd
enter
jp
push
mov
sub
imul
je
xor
cwtl
pop
inc
aam
xchg
mov
jae
pop
mov
ds
sbb
enter
mov
and
mov
push
movsl
push
jp
or
dec
push
repz
cli
imul
fucomi
arpl
add
xor
mov
mov
les
movsl
sbb
js
and
sti
xchg
iret
mov
dec
js
scas
les
dec
in
mov
vorps
mov
cmp
adc
mov
pop
and
inc
ret
or
mov
mov
and
clc
inc
jmp
pop
jl
xor
mov
mov
push
push
pop
or
xorl
loop
jmp
fmull
mov
insl
arpl
inc
fldcw
icebp
inc
xchg
sbb
or
dec
cli
iret
sub
push
icebp
and
mov
sbb
inc
sub
out
lcall
jns
xor
test
inc
jg
xchg
pop
lcall
lods
loop
out
mov
icebp
int
xchg
out
sbb
ljmp
nop
pop
cmc
jmp
hlt
lahf
out
and
ret
dec
xor
imul
jns
jno
pushf
js
adc
mov
and
int
mov
sbb
push
cmp
jnp
dec
les
clc
insl
outsl
sbb
mov
inc
mov
mov
inc
sub
jbe
hlt
mov
decl
adc
pop
or
call
jg
loope
sub
loop
lahf
cmp
sbb
mov
or
adc
push
out
mov
and
pop
add
cmc
enter
xchg
negl
jmp
lcall
in
jbe
dec
pop
jp
es
lret
repnz
fdivrs
dec
and
cmp
mov
and
mov
fcoml
test
ret
xor
pop
sub
outsb
dec
jge
arpl
sbb
clc
mov
mov
dec
fisubl
xchg
dec
int
inc
test
cld
dec
mov
adc
mov
test
mov
imul
pop
adc
cmpsl
mov
stos
aam
or
loope
std
mov
pushl
fldcw
outsl
add
sbb
lcall
insl
fnsave
xor
cmpsl
enter
mov
sbb
or
in
cmp
ljmp
jmp
dec
xchg
cld
fs
jae
nop
mov
inc
or
gs
shrl
push
pop
les
mov
and
xor
scas
dec
fs
and
lods
push
shl
mov
scas
sbb
sbb
movb
data16
fisubrs
adc
js
jge
jbe
roll
xor
ret
mov
dec
lcall
adcl
adc
xchg
dec
inc
xor
inc
jmp
fincstp
mov
out
arpl
xchg
and
push
addr16
fmull
fcomps
mov
test
cld
imul
xorb
xchg
and
enter
mov
rcrl
ret
or
push
imul
or
pinsrw
pop
sub
cmpsb
std
adc
dec
push
js
les
movsl
les
mov
dec
fsubs
icebp
jle
adc
push
fs
iret
loope
cmpb
jmp
sub
add
lods
sbb
jp
fsubrl
dec
xor
mov
adc
loope
jmp
sahf
ficoms
movsb
xchg
jg
out
push
dec
sahf
outsl
inc
xchg
mov
xchg
jae
dec
push
cmp
mov
lods
jns
mull
cmp
jmp
dec
enter
rcll
push
pop
testl
xor
jo
out
arpl
frstor
sub
fsubs
add
into
push
dec
das
cmp
inc
repnz
mov
fistpl
les
inc
lret
inc
mov
ja
mov
addl
popa
add
test
sbb
sub
fisubrs
andb
push
js
out
dec
ror
in
dec
sub
jle
mov
and
pusha
out
mov
ja
push
push
std
push
fildll
inc
dec
xchg
addr16
insw
stc
test
fucomi
xor
orl
lods
mov
stos
sbb
mov
aad
loope
cmp
fldl
add
jp
roll
and
sbb
ds
jl
outsl
enter
jmp
jl
mov
push
loope
ds
call
mov
mov
test
cmpsb
mov
mov
cli
lea
xor
push
and
pop
arpl
mov
in
sub
mov
jb
cmpsb
daa
jmp
dec
xor
add
xor
xor
stc
out
push
lahf
xor
js
inc
cmp
pusha
test
dec
xchg
enter
inc
add
ja
or
mov
jmp
mov
pop
xlat
dec
sahf
and
inc
out
adc
pop
cmpsb
shll
xchg
sbb
mov
inc
mov
cmpsb
ficoms
stos
or
mov
in
idivl
fidivrs
inc
test
int3
outsl
jp
xor
mov
insl
cmc
cmpsl
or
ss
fistps
arpl
enter
and
cmpsl
inc
pop
jp
aad
imul
mov
cmpsl
out
ret
sub
les
mov
xor
call
adc
mov
sub
adc
pushf
mov
shll
sbb
lcall
leave
data16
adc
aas
es
pop
inc
dec
jne
out
fmuls
aaa
adc
inc
idivl
xor
fistpll
xchg
xor
xchg
daa
jns
cli
punpckhwd
andl
jecxz
ljmp
sub
jns
xchg
adc
in
sti
pop
xchg
cmpsl
movsl
imul
fbld
imul
outsl
in
in
xor
rol
lret
jae
push
mov
std
inc
and
insl
push
lret
adc
cmp
stc
inc
fnstcw
jg
cs
adcb
push
lds
sub
add
push
les
dec
sub
cmp
jp
dec
xchg
xchg
outsl
xchg
aas
es
inc
xor
dec
push
rclb
repz
cli
lret
push
fwait
lret
xor
lods
cmp
and
ret
fwait
sub
jo
jmp
les
jmp
push
and
arpl
sbbb
inc
mov
mov
aaa
out
je
jge
xchg
xor
pop
pop
mov
int3
jecxz
inc
pop
loopne
push
pop
popa
ljmp
dec
mov
sbb
inc
test
add
fcmovu
sar
cmpsl
popa
dec
ret
sbb
and
mov
jno
rorl
adc
push
inc
jle
in
jl
out
jge
xchg
es
sub
roll
movsl
jb
and
adc
jmp
imul
je
inc
cmp
jl
mov
les
sbb
sub
mov
inc
ds
jl
cs
mov
fs
dec
mov
les
mov
ret
scas
fldt
add
xchg
cs
xchg
push
in
mov
cmp
jle
les
push
inc
jle
xchg
test
movsl
mov
adc
jecxz
popa
das
inc
mov
mov
sbb
loopne
push
sub
xlat
add
les
xor
inc
xchg
inc
js
push
jbe
push
push
iret
adc
push
adc
js
sub
pop
sbbb
jg
pushf
in
outsb
inc
jp
pop
jp
dec
test
int
pop
jp
dec
push
mov
or
in
push
aas
sub
movl
add
or
les
mov
arpl
lret
das
lret
cmp
add
insl
ss
mov
lods
push
lock
inc
stos
lock
pop
inc
ja
enter
icebp
movsb
jmp
test
pusha
test
mov
xor
add
mov
push
xchg
arpl
cmp
int3
out
adc
sbb
inc
jb
iret
push
xchg
sbb
pop
jle
add
daa
sub
mov
or
mov
mov
aam
dec
lock
ss
loope
hlt
pop
ljmp
jecxz
mov
inc
orb
cmp
push
clc
push
das
mov
sub
pop
data16
pop
adc
sub
pop
les
pop
sbb
dec
jmp
jl
movb
sub
sti
test
inc
gs
lcall
push
mov
leave
jae
mov
inc
mov
sbb
ret
ja
lret
jb
jb
sti
outsb
mov
lret
inc
mov
and
cli
imul
lret
das
push
pop
sbb
pop
jp
push
test
mov
sub
cmp
xchg
push
add
daa
ret
test
push
xor
adc
inc
idiv
lods
sub
push
clc
data16
push
data16
repz
and
cli
add
lock
cmp
loopne
adc
jbe
xchg
loopne
ror
loope
sbb
mov
sub
les
adc
sbb
and
pop
adc
mov
sbb
push
mov
and
add
push
fwait
mov
notl
add
dec
cmp
nop
loopne
sbb
movb
add
push
and
loopne
dec
shr
fldcw
xchg
mov
add
out
inc
stos
jle
xchg
mov
enter
mov
mov
ret
insl
pop
pushl
in
pop
mov
jle
in
lahf
push
xchg
shrb
cmpb
sub
enter
mov
sbb
inc
lahf
add
jecxz
inc
xor
nop
xor
out
inc
xchg
and
adc
cmp
xlat
mov
xchg
mov
insb
or
or
mov
js
xor
bsr
bound
xchg
cld
add
sub
lret
iret
add
xor
pop
adc
adc
or
gs
popa
leave
mov
iret
inc
dec
adc
dec
addr16
push
add
mov
loope
decl
ljmp
push
cmp
nop
sub
ficoml
inc
jmp
push
jg
mov
icebp
jg
mov
hlt
xorb
sbbl
sub
inc
push
imul
or
paddusw
sub
lret
pop
lcall
jbe
xor
leave
test
sahf
jne
pusha
aam
cli
or
cs
mov
mov
pop
mov
cmpsl
add
pop
or
jg
push
pop
cmp
repnz
push
mov
and
insb
testb
jle
fwait
and
cmpsb
sub
jl
stos
push
dec
sub
ret
mov
mov
into
arpl
cmp
inc
fcomi
jnp
loopne
lret
inc
les
push
test
icebp
jl
jnp
dec
bound
or
and
push
addr16
and
fs
xor
out
arpl
xchg
add
jge
ret
and
rolb
jno
out
or
or
or
sbb
and
pop
sub
outsb
mov
mov
mov
lds
jle
mov
mov
xor
mov
cltd
mov
jns
or
xchg
and
mov
stc
inc
pop
les
retw
lods
ss
mov
in
negb
jno
loope
shr
lock
aad
jmp
cmp
cmc
shrl
mov
mov
sub
test
push
cmpsb
lahf
pop
cmpb
xor
jns
mov
mov
outsb
dec
sbb
jle
push
mov
in
or
and
and
xchg
pop
std
inc
fwait
inc
popa
or
sub
mov
mov
stc
bound
add
xchg
cmc
jle
rclb
and
insb
lret
mov
adc
mov
cmpsb
mov
mov
jmp
hlt
sub
fwait
imul
imul
lss
inc
ret
dec
mov
jge
les
mov
push
int3
mov
bnd
push
xorl
data16
jecxz
into
out
lret
fstl
pop
mov
dec
leave
or
addb
stos
sub
jno
or
fnstenv
das
ds
inc
ret
in
clc
out
mov
mov
dec
cmp
or
ja
push
push
jnp
sbb
push
cmpsl
lahf
xor
stos
fsubl
push
dec
and
jne
sub
pusha
je
cmpsl
add
inc
cmp
bound
test
pop
add
daa
inc
les
shl
pop
xlat
and
fsubrp
mov
mov
imul
cmpl
push
mov
push
bound
xor
fsubs
dec
subl
jnp
push
arpl
inc
xchg
or
fnstsw
ret
lahf
movsl
mov
add
int3
loopne
xor
aaa
imul
cwtl
int
out
sub
mov
or
nop
push
inc
xor
pop
xor
test
add
inc
js
xor
cmpb
mov
stos
inc
shrl
test
cs
les
jecxz
je
mov
push
inc
ret
cmp
push
pop
bound
ljmp
lods
and
sub
dec
xchg
mov
call
enter
xchg
xor
xor
pop
imul
push
lods
lahf
pop
in
out
and
push
xor
adc
enter
pushl
jns
shl
push
dec
stos
jb
dec
or
push
insb
iret
sbb
data16
shl
mov
push
dec
imul
xchg
int3
les
in
pop
enter
fimuls
adc
lret
push
icebp
jge
movsl
cltd
test
clc
mov
mov
adc
jg
aaa
add
mov
cmpb
sbbb
mov
cmp
xor
and
enter
stos
mov
pushl
js
or
and
xchg
ds
push
and
lahf
stos
in
out
cmp
lods
stos
mov
and
pop
add
cmp
and
loope
mov
push
mov
pop
popf
xchg
adc
mov
call
and
jge
enter
arpl
xchg
popa
dec
insl
mov
or
jmp
cli
xchg
fsubs
adc
movsl
ljmp
push
inc
fstps
add
xchg
dec
add
rcrl
aas
scas
sub
cmpsb
mov
lock
addr16
pop
jecxz
jecxz
push
push
xchg
lret
mov
pop
sub
and
push
jb
fbld
divb
sub
mov
mov
mov
pop
inc
xlat
sti
test
and
lahf
gs
pop
out
jp
lds
xchg
dec
xchg
mov
faddl
jno
push
sub
mov
sub
push
movsb
inc
adc
pop
and
sbb
jo
xlat
dec
hlt
inc
add
fiaddl
and
and
adc
aad
sub
mov
fs
cmp
fbstp
push
pop
call
loope
ret
sbb
xchg
or
jg
jle
xor
mov
outsb
xchg
mov
add
or
mov
loop
cmpsb
aam
in
xor
and
outsl
outsb
add
push
push
sahf
add
add
and
ss
sbb
mov
sbb
out
and
jg
out
insl
xlat
push
sub
xchg
or
lods
test
and
fs
into
stc
adc
add
and
data16
es
inc
cmp
mov
rcrb
in
sbb
xor
stos
aaa
inc
and
cmp
cmp
and
sub
and
lock
cmp
mov
xor
pop
ret
jmp
or
jg
dec
sbb
dec
lcall
push
jmp
lods
cmp
test
mov
pop
and
cmc
loope
dec
mov
xor
and
add
daa
and
repz
and
push
ljmp
mov
aas
or
mov
test
add
push
adc
and
mov
mov
cmpsl
shrb
mov
inc
arpl
ficoml
jb
inc
ror
cmpsb
call
les
dec
dec
or
and
add
push
lcall
mov
xchg
add
mov
sbb
mov
pop
and
cmp
mov
xlat
or
and
push
notb
repnz
sbb
or
and
cltd
jecxz
lock
ret
and
out
rorb
xor
mov
aas
and
and
sbb
mov
mov
sarl
nop
pushf
and
cmp
mov
inc
add
inc
stos
xor
lret
xchg
and
lods
xchg
dec
mov
push
and
repnz
mov
and
push
pushf
lea
loope
loopne
and
loop
jmp
and
fsubr
icebp
mov
out
nop
cltd
sahf
xor
add
fisubs
mov
inc
inc
pop
dec
imul
in
mov
mov
orb
push
sahf
jbe
shll
and
rcrl
cmp
lahf
fs
test
or
popa
sbb
mov
mov
cmpsb
and
inc
xchg
xchg
cmp
xchg
and
out
pop
ja
pop
mov
fmulp
daa
sbbb
and
movsb
xchg
rcl
mov
sbb
cmp
xorb
and
dec
xor
pop
pop
dec
xchg
aaa
pop
ret
inc
adcl
push
cld
pop
std
xor
jmp
and
xor
aas
sbb
dec
push
adc
mov
cmp
and
xchg
add
mov
and
aad
and
lea
cmc
inc
xlat
fimuls
std
stc
loop
clc
and
das
adc
and
adc
stc
mov
and
or
adc
mov
push
gs
lods
and
pop
stc
into
ds
movsb
sub
sti
cli
stos
jno
arpl
sysexit
mov
fs
and
das
mov
xorb
and
dec
xchg
inc
cmpl
dec
jp
scas
out
adc
and
sub
and
mov
sub
mov
sub
or
jne
push
fbld
fsubl
clc
div
or
mov
add
fs
out
imul
movsb
hlt
cmpsl
dec
push
and
daa
or
sbb
test
xchg
inc
pop
pop
and
push
xbegin
xlat
push
cli
dec
repz
pop
and
mov
and
cmp
and
adc
outsl
xor
and
bsr
loop
push
pop
xchg
push
cmp
inc
or
sbb
int
nop
pop
mull
mov
and
aaa
xchg
dec
dec
and
jns
lods
mov
add
imul
icebp
outsb
aad
lods
and
inc
push
xchg
mov
orps
mov
and
adc
sub
mov
test
adc
cmpsl
sub
xor
pop
test
stos
iret
nop
in
pop
and
out
sub
xchg
sub
int
cmpsb
pop
cmpsl
inc
sbb
sub
and
test
cmpsl
mov
and
mov
stos
outsb
jns
rcrb
or
fwait
arpl
mov
and
mov
jmp
jae
jb
and
repz
movsl
fadds
inc
jle
hlt
loopne
and
jns
aad
ficomps
push
pop
shlb
decb
mov
jl
insl
mov
xchg
pop
nop
and
mov
or
dec
add
popf
jp
sbb
mov
loop
cltd
and
pop
push
push
jp
ljmp
in
sub
stc
and
out
arpl
and
es
cltd
mov
std
das
sar
loopne
insb
and
bound
mov
int
jb
pop
and
jne
lret
mov
rolb
cwtl
dec
movsb
sbb
hlt
in
jp
mov
lret
mov
cli
loop
xor
xor
lock
pop
and
les
and
pop
inc
sbb
and
and
mov
mov
shl
cld
mov
xor
mov
add
scas
and
mov
push
mov
data16
fcmove
test
mulb
or
inc
pop
add
and
data16
mov
and
or
imulb
sbb
jecxz
mov
xchg
shll
outsl
negb
mov
xor
std
repz
inc
mov
and
subl
loopne
and
aaa
and
push
mov
lds
outsb
pop
adcl
and
adc
or
jecxz
push
and
hlt
unpcklps
out
xchg
sub
andb
loop
jno
jg
ret
mov
imull
sbb
cmpsl
and
jle
divb
xor
sbb
pop
std
cmpsb
loop
xor
and
add
adc
pop
les
inc
jp
jb
mov
out
lods
sub
xchg
dec
xlat
fxch
sub
and
and
stc
scas
enter
jp
iret
pop
nop
cmpsl
ja
xchg
mov
jge
mov
mov
ds
add
mov
js
loop
and
push
clc
out
daa
and
pushf
sbb
mov
fnsave
add
push
mov
push
xor
and
push
jg
loop
and
xchg
xchg
sbb
mov
mov
cmpl
aaa
and
inc
cld
or
push
or
ljmp
xor
lret
loope
sub
imul
adc
adc
mov
pusha
jno
jle
outsl
and
mov
xchg
mov
push
popa
inc
cli
hlt
es
testb
movsb
jmp
imul
xchg
rcrl
sahf
insl
push
and
dec
mov
and
fwait
jl
loop
test
cld
xlat
and
inc
push
or
mov
test
aad
add
inc
je
sbb
dec
pusha
fbld
cltd
aas
add
dec
and
pop
dec
movsl
xchg
dec
js
mov
scas
les
aas
and
mov
das
jo
inc
push
and
loopne
xlat
loope
ja
or
jmp
setge
and
sti
push
push
xchg
and
fstl
and
xchg
xchg
cmp
fcomps
mov
or
int
stos
aam
mov
fucomi
inc
cwtl
or
mov
adc
and
xorl
add
add
lds
outsl
xor
xor
mov
lcall
sti
and
push
jbe
bound
add
and
mov
and
adc
push
sti
push
push
fldl
pop
and
mov
adc
lret
inc
andb
pop
push
jnp
shrb
lcall
inc
insl
add
sub
outsl
mov
rclb
lock
pop
das
pop
and
add
xchg
sbb
dec
into
mov
lds
je
mov
fwait
movsb
std
xor
cmp
jbe
andb
dec
in
pop
xor
inc
stos
pushfw
jg
inc
push
push
mull
and
ss
in
xchg
lea
and
fbld
sub
enter
xor
push
scas
and
and
cltd
ljmp
ss
cmp
lea
test
lds
pop
rcl
das
mov
sbb
sbb
aad
stc
jno
lock
loopne
mov
rcrb
fwait
push
mov
lahf
insb
cmc
pop
jb
cltd
mov
xchg
and
insb
cmp
lods
or
and
lods
stc
into
fwait
push
xchg
pop
call
ja
add
and
lods
imul
jb
mov
adc
xchg
jne
pop
cmp
xor
sar
jnp
out
and
and
push
ja
mov
or
cmp
cmp
movsb
lahf
jbe
mov
out
or
es
and
dec
mov
test
jge
out
ret
and
roll
movb
ljmp
jo
mov
xchg
add
jle
fiaddl
push
xor
mov
and
jno
mov
sub
xor
cld
mov
sub
cmp
arpl
je
and
push
add
jbe
jl
bound
imul
and
aas
adc
loope
mov
adc
mov
jl
pop
insl
pusha
and
mov
mov
or
and
cmpb
and
in
icebp
and
stos
scas
loop
dec
and
cwtl
test
xchg
and
out
push
rolb
dec
loope
sbb
outsb
dec
push
in
cmp
insl
shlb
sub
repz
mov
cld
jecxz
mov
push
aad
in
push
loop
xor
out
jbe
mov
add
int3
jmp
dec
test
jge
inc
sbb
mov
scas
and
ljmp
mov
xor
pop
push
and
mov
ficomps
inc
jne
sbb
scas
xchg
add
and
sub
lea
mov
cld
fs
jg
cmp
pop
je
scas
rolb
shll
ds
and
mov
cwtl
sub
dec
out
or
xchg
fisubl
add
add
loop
icebp
stos
xchg
cmp
xor
bound
jns
aad
and
fs
daa
and
or
and
cmpsl
lahf
mov
out
and
sub
stos
mov
push
adc
pop
mov
and
pop
pop
jae
xchg
int
xor
mov
rcll
sbb
cmpsl
inc
mov
sti
addr16
lret
sbb
sbb
push
cmp
push
dec
call
imul
scas
cmpsb
movsl
and
mov
mov
jle
std
clc
sub
shlb
xchg
sbb
xor
addl
and
sub
and
pop
and
xor
or
dec
cmp
and
dec
stos
add
inc
das
fs
lea
imul
rcrb
outsb
add
out
or
adc
js
mov
das
arpl
dec
pop
inc
leave
fldenv
divb
mov
and
imul
and
imulb
push
popf
orl
icebp
or
push
and
fcmovnu
mov
cmpb
and
jp
jb
inc
mov
les
push
inc
out
pusha
iret
and
mov
add
add
fldl
and
sub
adc
push
or
cmp
roll
sub
pop
xchg
shrb
enter
mov
dec
jp
jbe
cwtl
nop
or
adc
sbb
cmp
push
inc
dec
xchg
and
or
insl
cs
shrl
outsb
stos
syscall
test
xor
lea
sub
push
rcrl
repz
pop
xorl
mov
mov
sar
in
sub
xchg
pop
pop
or
sbb
mov
add
mov
and
ljmp
lock
test
nop
enter
in
push
and
push
repnz
je
sbbl
mov
pop
jp
imul
xchg
pop
andb
and
and
jl
push
cli
lds
int
mov
loope
jge
jb
std
rcrl
test
loopne
scas
daa
mov
jle
and
mov
add
cmpsl
daa
mov
test
sub
sbb
add
and
push
mov
and
adc
push
nop
mov
jae
push
lods
cmp
icebp
sbb
pushf
and
or
pop
and
jg
js
xchg
ret
les
xchg
ss
lods
mov
add
and
mov
dec
and
or
ljmp
xchg
mov
cltd
dec
add
and
lds
fcmovbe
and
mov
lods
sub
push
outsl
pusha
dec
sbb
test
sub
inc
pushf
cltd
push
inc
sahf
xchg
and
mov
add
push
into
inc
cwtl
xor
jns
xchg
push
orl
push
out
test
mov
gs
jp
scas
nop
arpl
inc
mov
int
mov
aam
lock
jl
in
and
xchg
std
inc
mov
inc
stc
sbb
xchg
mov
repnz
and
sbb
je
test
dec
repnz
mov
jne
inc
push
push
adcl
pop
adc
jp
xchg
test
leave
jmp
fildl
and
mov
xor
sub
mov
and
adc
jp
lea
and
outsb
and
add
mov
sub
cmp
addl
cmp
ret
adc
rolb
mov
xor
and
inc
jg
loop
outsb
and
out
pop
les
scas
bound
cmc
sbb
ret
xlat
push
jl
xchg
imul
sti
and
jmp
aas
mov
fcoml
or
mov
or
lahf
movsb
jns
pop
out
and
cmp
addb
popf
es
lock
and
pop
cmp
iret
mov
lods
call
adc
xor
aad
adc
xor
ret
sbb
loope
je
not
repz
enter
and
push
rcrb
imul
arpl
dec
addr16
insl
test
sub
and
les
cmpsb
sub
jb
cmp
and
and
mov
xor
dec
dec
enter
cmp
dec
lret
mov
fldenv
nop
orl
sub
jecxz
or
and
bound
mov
pop
adc
xchg
fildll
int3
inc
sbb
nop
xlat
push
push
and
popa
cmpsb
jno
loopne
cmp
imul
mov
push
inc
mov
and
addb
add
mov
cmpsl
fisttpl
sub
xlat
sub
ja
into
outsb
loopne
mov
movsb
xchg
jb
iret
cmp
shlb
cli
xchg
mov
dec
push
sahf
inc
mov
xchg
movsb
fucom
ds
rcrl
shrb
rorb
ret
repnz
repnz
les
add
loop
and
lods
mov
mov
in
mov
lods
mov
shlb
out
pop
stc
adc
adc
xchg
loop
ja
pop
std
inc
push
adc
cmpl
pop
cs
test
push
les
clc
call
ret
stos
test
adc
lcall
sbb
jb
loope
xor
jno
rorl
dec
inc
cwtl
mov
imul
clc
mov
inc
jp
adc
push
xor
in
adc
dec
adc
cs
addr16
sbb
iret
mov
shl
cmp
xchg
leave
call
insb
add
add
or
push
add
fstpl
jo
and
icebp
aad
sub
xorl
pop
jmp
fistps
shr
xlat
sub
arpl
and
mov
cmpsb
add
jnp
repz
sub
fimuls
fcoml
popf
movsl
push
loope
pop
test
dec
cwtl
and
addr16
jecxz
test
mov
inc
sbb
arpl
setne
xor
inc
popa
mov
jns
jb
pop
add
andl
or
mov
clc
pop
cmp
shr
push
mov
xchg
lret
popa
and
mov
sbb
sbb
pop
sub
shll
sub
and
repnz
cmpsl
leave
and
push
add
sub
and
ret
mov
jo
xor
popf
jbe
and
sar
pop
jg
enter
mov
xchg
dec
sbb
inc
shl
movsl
fnstsw
lcall
jecxz
imul
cmp
mov
aam
popf
movl
add
int
or
dec
and
jae
js
sub
mov
outsl
add
pop
rol
mov
cmpsl
cld
adc
xor
mov
nop
and
es
repz
push
lock
sub
mov
shrb
int
sti
mov
and
or
add
push
aas
cld
add
loop
sbb
inc
dec
ds
pop
jl
xor
add
mov
daa
popa
out
test
inc
testb
mov
and
jp
push
mov
test
aad
mov
repz
mov
push
cmp
cltd
imul
cmp
aas
fs
xor
cmpsb
add
or
nop
lahf
arpl
cmp
pop
fcomip
and
sub
xchg
and
scas
into
jo
jge
and
add
mov
stos
fadds
pop
mov
mov
aam
sbb
movsl
push
dec
je
cmp
adc
arpl
and
cmp
inc
mov
iret
cld
in
test
dec
xor
mov
jge
push
mov
jno
lods
jg
xchg
hlt
loope
adc
jo
clc
and
fstpl
js
sub
cmp
mov
xchg
outsl
cmpsl
les
sub
out
scas
mov
test
or
pop
or
adc
mov
icebp
leave
mov
lcall
loopne
cmpsl
mov
jne
dec
jns
jl
mov
ret
xchg
ret
insb
cli
jp
mov
in
or
in
lcall
lcall
mov
push
xor
pop
mov
or
push
xchg
xchg
stos
in
and
dec
out
adc
insb
jb
sbb
xchg
mov
jo
popf
and
push
cmp
xchg
mov
mov
push
mov
cs
int
and
add
and
inc
ret
inc
stos
mov
mov
and
add
add
sbb
and
cli
xchg
and
divb
repnz
and
pop
repz
shrl
sub
xchg
or
test
xchg
mov
mov
and
pop
mov
add
xlat
add
add
adcb
and
lea
push
xor
popa
and
mov
pop
pop
incb
insl
and
push
sbb
mov
and
inc
push
hlt
std
pop
and
dec
xor
or
test
cwtl
jnp
mov
jle
cmp
and
pop
imul
lea
jne
in
bound
pop
addr16
and
pop
adcl
sub
xor
ret
in
dec
mov
daa
dec
cmc
in
lret
adc
and
jb
pop
pop
mov
pop
lea
sbb
mov
and
daa
xchg
dec
cmpsb
xor
mov
adc
push
ja
xchg
dec
and
lcall
xor
or
jbe
or
decb
mov
imul
mull
jl
xchg
cmp
sbb
and
adc
sub
int3
arpl
and
pop
jo
push
mov
loopne
or
mov
divb
push
add
fimull
mov
aam
insb
jne
cmpb
jecxz
push
cmp
and
ret
mov
ret
pop
mov
and
jmp
sbb
sub
or
test
test
out
mov
mov
jbe
pop
repnz
pop
and
jo
dec
data16
push
and
mov
es
adcl
sbbb
aaa
ret
and
mov
cmp
gs
mov
or
je
mov
iret
and
mov
and
sbb
cmp
inc
shll
popa
xchg
push
addr16
and
pop
jae
sub
add
scas
and
repz
in
inc
lods
mov
pop
fcomip
test
inc
fsubp
jno
pop
push
mov
cmp
push
push
sub
adc
inc
and
loope
pop
cmp
push
jne
outsb
and
and
test
mov
scas
add
and
inc
test
mov
pop
mov
pop
push
mov
dec
stos
xor
and
xchg
pop
xchg
and
arpl
add
xchg
ja
dec
les
cmc
sub
cld
add
outsl
cmp
sub
pop
loop
adc
out
or
scas
push
movsb
out
rorl
pop
in
mov
pop
fidivl
push
jg
sbb
pop
rorb
mov
pop
sub
inc
push
jecxz
cmp
add
or
aaa
dec
xor
adc
enter
mov
jecxz
aam
arpl
scas
enter
daa
pushf
mov
mov
repz
js
push
and
push
xor
push
mov
pop
mov
sbb
adc
push
or
fwait
pop
sbb
sbb
adc
loope
cmc
inc
pop
in
add
sahf
mov
add
mov
adc
push
sbb
out
subl
add
lods
lock
shll
and
in
insl
fcomi
sub
mov
mov
inc
jle
mov
or
insl
xor
or
mov
jbe
push
cmp
cmp
or
sbb
test
or
cwtl
mov
inc
add
mov
dec
and
ss
jb
push
cwtl
popf
sub
clc
or
xor
aas
ret
imul
fisubrl
stos
loopne
stos
lods
jle
xlat
and
sub
push
arpl
pop
xchg
and
addr16
push
fwait
or
jae
jle
mov
jbe
and
push
enter
bound
popa
jge
ja
stos
and
cmp
mov
in
mov
push
or
add
pop
std
and
sbb
sbb
or
inc
stc
into
dec
daa
hlt
cmp
mov
inc
rolb
divb
out
mov
ret
out
hlt
outsl
cmp
pop
mov
gs
or
lahf
dec
les
pop
movsb
sub
cli
lds
les
adc
adc
dec
pop
lock
cmp
icebp
mov
mov
dec
lock
bound
mov
mov
rol
jae
outsl
es
or
jmp
in
push
xor
lods
aam
dec
repz
bound
pop
xchg
incl
pop
mov
sbb
fdiv
pop
push
ja
rcrb
xor
mov
fs
xchg
inc
ljmp
fidivs
cmp
lcall
popa
insb
sub
clc
test
xor
sub
ret
test
xchg
or
mov
and
lods
icebp
and
jecxz
cmp
xchg
inc
inc
cmp
push
cwtl
mov
jne
push
mov
push
mov
dec
xchg
les
add
pop
ret
xchg
or
dec
enter
xchg
loope
push
std
in
fmuls
mov
in
inc
pop
add
jmp
mov
mov
sub
or
in
jb
int3
add
les
imul
inc
addb
clc
int
adc
out
cwtl
mov
jg
int3
inc
insb
jmp
dec
inc
dec
out
sti
and
daa
pop
mov
orb
daa
es
mov
add
outsb
lcall
arpl
enter
sub
mov
sbb
loope
enter
repz
fsubrl
pusha
or
jp
xchg
add
divb
or
cmpsb
mov
dec
ret
mov
xlat
ja
mov
inc
or
imul
jbe
push
pop
xchg
add
add
adc
mov
jle
stos
movsb
xor
out
cmp
pop
mov
mov
pop
push
lret
lea
mov
jg
setle
sbb
sub
dec
fcomi
pop
aam
dec
hlt
jno
shll
or
or
mov
adcb
and
sub
mull
inc
jo
ret
push
jb
inc
xor
inc
cwtl
mov
fldt
xorb
iret
or
mov
les
adc
dec
pop
mov
mov
pop
cmp
xor
aas
or
pop
aaa
bound
pop
add
iret
lods
mov
dec
dec
lea
loope
daa
xchg
negl
mov
jecxz
je
rcl
inc
sub
popa
mov
jecxz
jge
xrelease
sbb
mov
adc
push
pushf
mov
adc
je
insb
mov
push
mov
mov
aaa
push
out
jmp
sub
notb
push
adc
loopne
icebp
inc
les
push
inc
mov
pop
loop
loopne
sub
push
push
xor
aad
cli
xor
sar
shll
aam
outsl
test
push
and
imul
insb
lret
and
mov
testb
add
lret
inc
and
mov
scas
push
mov
mov
push
pop
repz
shlb
frstor
add
dec
lcall
mov
mov
lcall
inc
cmp
jnp
popf
mov
movsl
testb
out
imul
adc
mov
pop
push
inc
leave
mov
xor
mov
cmp
sub
sbb
and
fisubrl
mov
sub
cmp
insb
sbb
inc
pop
rcrl
sbbl
sahf
sbb
xchg
stos
and
xor
ja
jbe
inc
jae
int
imul
jne
add
dec
adc
lcall
jbe
icebp
xor
and
fistps
cmp
dec
and
and
inc
enter
sti
fdivl
shll
mov
into
xor
jns
xor
testl
mov
lret
lods
or
dec
rcrl
inc
push
jp
imul
int3
out
ljmp
stos
clc
or
icebp
adc
inc
cwtl
test
sahf
les
mov
movsl
dec
sahf
mov
pop
jne
es
dec
xchg
sbb
push
add
push
insl
nop
or
xchg
mov
js
stc
jbe
jecxz
fwait
jle
cmp
jmp
inc
dec
pop
sahf
fs
pop
cld
cld
or
mov
jg
ficompl
mov
cs
ret
dec
es
jae
vphadduwq
daa
jge
and
push
xchg
stos
pusha
stos
add
fnstsw
das
dec
and
ret
inc
add
lcall
aaa
fidivrl
and
adc
imul
and
pop
in
and
pop
je
mov
repnz
divb
sub
mov
xchg
pop
xchg
int3
add
mov
lds
and
xchg
scas
push
in
in
and
mov
mov
sub
das
adc
and
aam
mov
ljmp
and
mov
not
and
inc
mov
test
push
push
xor
jns
xchg
xchg
cmpsl
popa
cmpsb
and
dec
adc
out
out
pop
jae
push
sub
ficomps
in
pop
and
insb
fsubl
adc
xor
fwait
dec
pop
movsb
and
movq
cmp
dec
and
andb
add
lea
jo
jecxz
mov
insb
mov
mov
jne
pop
cmp
xor
cmpsb
imul
adc
sub
imul
xchg
arpl
movsb
lods
dec
and
dec
adc
push
mov
push
push
and
les
xchg
cwtl
ss
imul
sarl
test
mov
in
fidivrs
and
les
dec
je
pop
jle
add
cltd
xchg
and
cld
rclb
ret
cltd
jne
test
aaa
xorl
push
jb
cmp
lret
jg
sub
mov
add
mov
cli
mov
xor
aad
mov
les
je
and
adc
pop
adcb
cwtl
jecxz
sbb
and
scas
pusha
xor
notb
push
dec
and
or
sti
cmp
insl
and
inc
adc
cmpsl
daa
pop
shlb
sub
sub
or
xchg
inc
stos
aam
jge
cmp
push
cmp
push
jecxz
ficoml
sub
sbb
test
test
sub
movsl
push
sub
jbe
inc
pop
mov
and
mov
cmpb
es
loope
inc
sub
andl
fistpl
jl
andl
sub
and
test
cmpsl
inc
mov
ja
pop
adc
retw
lcall
and
out
lea
test
and
out
sbb
jnp
sbb
and
push
mov
cmp
andl
and
stos
outsl
and
pop
pop
mov
and
mulb
mov
dec
cwtl
jle
int3
rol
push
cmp
dec
add
mov
and
adc
xor
adc
sub
push
sbb
shlb
push
insb
imul
dec
pop
sub
out
lahf
xor
jmp
push
mov
out
cmp
mov
jmp
push
popf
mov
and
fidivl
inc
mov
and
and
cmp
ja
ret
xchg
popa
hlt
mov
fisubl
movsl
lahf
aam
pop
adc
adc
repnz
jae
cltd
test
add
mov
scas
fwait
jo
xor
xchg
sub
mov
ljmp
dec
push
ret
pop
sahf
jns
shl
add
fstpl
lea
and
sbb
mov
and
out
movsl
jb
shll
cli
push
sbb
or
test
call
jne
addr16
xchg
inc
push
das
cmp
adc
in
and
arpl
add
inc
sbb
es
popf
sbb
mov
movsl
sub
push
adc
outsb
fsubs
andl
or
xchg
adc
mov
in
and
in
mov
shll
mov
and
lret
clc
sub
mov
xlat
fsub
push
in
mov
xor
out
fwait
paddusw
sub
fnstcw
ret
xchg
push
bound
leave
and
mov
push
sbb
mov
and
and
push
and
pop
and
push
out
mov
and
xchg
and
and
fstpl
stc
rolb
and
mov
cld
mov
lret
add
and
mov
orb
and
sarb
test
jne
push
imul
or
xchg
dec
test
out
cmp
jbe
xchg
dec
adc
and
xor
and
sub
es
mov
fsubrs
mov
sbb
lods
insl
mov
pop
test
jl
roll
cmp
sub
test
ret
sub
pusha
jp
popa
stos
jle
xchg
lods
out
adc
fs
xchg
and
sbb
in
inc
insb
arpl
xor
lods
addr16
adc
jecxz
sbb
lds
push
push
sub
and
adcb
les
movsl
sub
loope
and
cld
add
lret
lahf
fmull
nop
les
repnz
outsb
aad
push
popa
fsubs
or
pop
jb
frstor
cmpsl
cmp
and
pop
popa
adc
sub
cmp
mov
lcall
sbb
add
adc
repz
dec
lods
out
in
and
std
popa
mov
and
and
repz
and
pop
mov
js
pop
add
jg
xor
pop
and
adc
push
sbb
xor
addb
dec
xchg
xor
and
adc
jl
sub
and
orb
xchg
gs
int3
and
sbb
sbb
sub
and
inc
mov
and
in
movsl
mov
adc
xor
xchg
mov
sahf
test
mov
test
and
jmp
add
popf
or
jno
popa
and
lods
rorl
jge
insl
push
ds
cmpsb
dec
sahf
and
mov
scas
adc
pop
jge
or
pop
movsb
cmp
mov
out
into
nop
and
jmp
cmp
and
enter
or
xor
scas
insb
xchg
and
pop
and
inc
adc
mov
push
orl
dec
sub
stos
cli
outsb
enter
sub
xlat
outsl
or
mov
loope
and
pop
lods
ret
js
or
adc
inc
mov
and
jnp
sub
xchg
cmc
insb
sub
cli
and
adcl
dec
hlt
mov
pop
cmp
sbb
sub
add
fimuls
and
sub
repnz
jnp
in
and
mov
mov
push
sbb
sub
and
push
mov
lret
sub
mov
shrl
mov
ret
cltd
pop
sbbb
dec
popa
fildl
es
mov
mov
loopne
sub
movsb
stos
sbb
pushf
add
aas
sbb
jg
daa
inc
cwtl
xchg
je
push
test
jmp
cmp
jns
loopne
aas
xor
bound
push
maskmovq
testl
enter
cmpsl
or
pop
leavew
adc
stos
shr
adc
pop
mov
and
std
pop
adc
loop
stc
lock
and
cmpsb
adcb
dec
or
push
xchg
sub
cmc
jbe
ljmp
scas
jb
mov
repz
rep
xchg
pop
pop
adc
cmp
enter
into
xchg
dec
push
lret
sub
add
sbb
loopne
jecxz
cwtl
xor
xchg
repnz
cmp
jb
movsb
pop
jecxz
addb
call
xor
fstpt
js,pt
sub
cmp
jae
adc
insb
cmp
stc
jge
mov
sbb
fildll
outsl
mov
xor
lret
hlt
mov
scas
inc
or
pop
jp
insl
into
push
jge
mov
or
dec
jle
sub
stos
mov
push
or
shll
add
inc
pop
mov
mov
mov
mov
xchg
mov
push
mov
outsb
inc
fwait
shll
mov
fnclex
ds
inc
push
mov
ficoms
out
or
leave
dec
and
add
les
inc
sbb
stos
xchg
lea
push
mov
sbb
test
lret
in
cmc
mov
into
adc
sar
inc
pop
stos
sub
mov
cld
jnp
and
push
dec
xlat
bound
mov
imul
aaa
push
sub
or
cltd
imul
sbb
mov
cmp
mov
dec
outsb
inc
sbb
int
cmc
pop
and
mov
stos
adc
mov
ret
pop
psubsw
inc
or
jge
shll
cmp
movsb
sbb
les
xchg
pop
je
mov
popa
data16
xor
xchg
cmpsl
iret
pushf
sahf
adc
enter
mov
dec
cwtl
mov
imul
mov
xchg
dec
mov
je
mov
push
test
popa
xchg
popf
push
adc
imul
lcall
rcrb
mov
in
jle
inc
mov
fstpt
and
or
out
icebp
sub
ret
xor
cltd
fdivl
sbb
addl
pop
adc
dec
and
cmp
push
pop
insb
cs
mov
imul
inc
jns
fcmovnb
or
into
or
pop
frstor
aas
jmp
cmp
data16
push
mov
push
mov
ret
dec
mov
ret
mov
bound
sti
jge
ljmp
sbb
std
pop
vmwrite
in
mov
sahf
lcall
jmp
push
movsl
fs
inc
mov
xchg
add
aas
rcrb
sbb
ret
movsl
popf
xchg
xor
mov
cmp
scas
sbb
stc
push
fimuls
les
push
outsb
inc
or
push
inc
sahf
fbld
enter
fwait
repnz
sub
sub
mov
mov
and
clc
inc
imul
and
sbb
lret
mov
xorl
and
repnz
test
xchg
jb
xor
sti
xchg
addr16
push
and
ret
arpl
jle
mov
sub
cld
lcall
pop
pushf
inc
cmpsb
inc
sub
mov
pop
imul
cltd
xchg
enter
aad
xlat
orb
ret
pop
ret
cmp
aam
iret
icebp
xchg
subl
pop
mov
ret
shll
push
jle
mov
mulb
idiv
xor
std
push
push
notl
mov
or
hlt
fnstsw
xchg
xchg
movsb
pop
inc
or
sub
push
je
les
xchg
inc
mov
mov
sbb
add
dec
xchg
sahf
test
or
inc
rcll
dec
pop
push
cli
jg
js
mov
mov
pop
dec
push
dec
dec
xor
sbb
js
xorl
sub
pop
dec
xchg
cld
lds
cmp
andb
jno
mov
or
xor
popa
sub
loope
xchg
sbb
imul
loop
adc
jl
orl
mov
cmp
xchg
aam
lds
and
add
mov
and
xchg
and
enter
dec
and
push
sub
stc
lcall
mov
inc
and
out
sahf
repz
push
cmpsb
test
shrl
xchg
xor
jae
cwtl
pop
outsl
jo
stc
mov
out
and
test
addr16
mov
push
or
mov
arpl
mov
sahf
sbb
andl
fcoml
mov
xchg
pushf
int
fs
push
iret
mov
and
hlt
jb
mov
sub
cmp
push
pop
mov
mov
mov
adc
pop
daa
in
cld
fsubl
addb
lret
adcb
popa
mov
sar
lea
push
sbb
jmp
gs
and
aam
cltd
inc
jnp
mov
xchg
push
and
shll
push
arpl
pusha
jecxz
xor
ljmp
add
in
cli
xchg
andl
sbb
push
call
and
and
and
add
and
pop
aam
repnz
and
mov
rolb
adc
cmp
je
push
jg
push
fs
in
cld
cmc
cmp
xchg
sbb
add
cmp
jl
inc
data16
in
push
cmpsl
lods
aad
push
and
clc
or
and
xchg
mov
gs
out
and
xchg
mov
or
out
out
add
aad
call
sbbb
sub
dec
push
and
data16
scas
pop
mov
mov
inc
adc
cmc
sub
jmp
push
push
and
push
cmp
and
ss
mov
fldl
cmp
sbb
cli
and
pop
inc
lods
cmp
test
movsl
add
popf
and
sub
lret
stos
mov
cmpsl
lods
subb
jle
es
xor
mov
adc
cmp
mov
out
push
mov
ss
sbb
fisttps
or
add
jl
sub
dec
dec
xor
mov
add
mov
icebp
add
repnz
sahf
test
fs
add
daa
pop
sarl
aam
or
add
lcall
sub
and
xchg
scas
xor
xor
mov
xchg
aad
inc
push
sahf
ret
fbld
push
and
je
outsl
cmp
aaa
aas
adc
push
and
dec
cmp
xchg
mov
and
shr
add
and
mov
jbe
jecxz
outsl
rorl
mull
jnp
aad
xchg
int3
and
out
jb
bound
popf
pop
and
push
js
and
gs
inc
and
out
repnz
jnp
pop
xchg
mov
dec
and
jno
pop
dec
mov
and
jp
jo
push
or
sub
jae
mov
dec
xor
mov
or
mov
or
and
fcomip
popf
inc
jp
and
in
sbb
jbe
int
dec
jo
jns
adc
xor
cmp
jbe
or
cmpl
sbb
pop
in
push
sbb
adc
mov
ds
adc
repz
dec
mov
xchg
mov
out
xchg
outsb
ret
pop
aas
loop
add
pop
leave
or
sub
and
shlb
cs
mov
or
push
fistl
imul
fists
iret
clc
and
push
xlat
movsb
leave
and
je
adc
int3
call
and
lea
cmp
or
dec
xchg
sub
and
aas
and
cmp
and
fcomps
inc
add
and
push
test
test
gs
shlb
dec
call
add
rcrb
cmp
movb
jnp
and
in
mov
dec
fstl
and
lahf
ljmp
add
inc
sub
in
xor
gs
adc
pop
push
dec
and
pop
dec
sub
lret
and
push
xchg
sub
loop
enter
je
inc
sti
pop
jno
and
bound
jecxz
mov
adc
insl
dec
dec
pop
and
aas
jo
fwait
jae
popa
push
pushf
inc
lret
or
int
jg
mov
pop
adc
add
and
cmp
cmp
insb
add
mov
and
test
mov
mov
xchg
fwait
test
fistps
cltd
and
ljmp
or
stc
pushf
and
cmc
push
bound
arpl
dec
loope
sti
sub
add
lea
cmp
jge
cmpsb
jl
push
and
or
xchg
dec
sub
js
inc
subb
and
inc
add
das
and
pop
pop
enter
adc
adc
in
mov
adc
aad
loop
ljmp
jae
roll
cmc
adc
pop
xor
sarl
and
cmp
sub
adc
inc
arpl
and
sub
and
dec
mov
scas
popa
lret
decb
mov
mov
ret
pop
out
pop
mov
push
xchg
ret
and
or
sbb
xor
xor
lret
test
icebp
inc
sbb
jmp
adc
cli
push
xchg
pop
and
or
sarb
aad
test
xchg
mov
ljmp
and
nop
jge
dec
in
jns
xchg
leave
pop
fs
fldcw
lcall
pop
push
fsubl
pop
mov
aam
push
rolb
pop
in
inc
cwtl
mov
and
pop
int
jp
pop
and
and
jge
mov
mov
int
and
inc
and
nop
adc
sub
rcl
xor
cmp
and
xchg
out
and
add
mov
sbb
ficomps
and
push
rorl
iret
test
xchg
push
subb
mov
ficoml
push
outsl
sbb
and
dec
xor
lahf
cwtl
sbbl
mov
insb
xchg
out
movsb
xchg
and
jge,pt
pop
jbe
in
jmp
or
push
and
enter
dec
cmp
test
mov
mov
add
add
or
leave
pop
test
cmc
mov
mov
mov
push
sbb
pop
shlb
in
add
sbb
mov
xchg
lods
sbb
dec
mov
ss
adc
sahf
sbb
or
cmp
mov
inc
je
add
mov
movsb
js
mov
jp
inc
fwait
icebp
ljmp
push
jae
pop
leave
push
repnz
adc
adc
mov
adc
mov
mov
inc
mov
jg
xchg
dec
aaa
movsb
lods
and
sub
xor
outsb
push
ss
jge
imul
lea
sbbl
test
or
mov
pop
push
jge
jbe
dec
mov
out
sbb
popf
out
or
fsubrl
mov
push
inc
and
mov
jbe
jno
cmp
dec
and
ret
fwait
mov
inc
and
mov
lods
movsl
lcall
les
adc
jecxz
sub
and
xlat
sub
jmp
leave
ljmp
js
paddq
sti
and
jb
cmc
cltd
mov
adc
mov
mov
sub
arpl
pop
dec
jno
inc
mov
mov
enter
movaps
sbb
add
jae
imulb
addr16
adc
sub
jmp
inc
and
push
lcall
das
sbb
out
pop
and
fsubl
push
movsb
popa
dec
enter
mov
mov
push
xor
fstpt
add
cmp
mov
in
sbb
pop
jle
pop
mov
outsl
sbb
popf
push
sub
push
sub
xchg
das
gs
pop
enter
aad
inc
clc
in
ret
or
loope
xchg
sub
dec
loope
push
sbb
sub
ret
out
xlat
push
push
daa
ret
push
inc
rcr
mov
mov
inc
repnz
fisubl
mov
popa
insl
les
add
lock
ret
sbb
inc
enter
push
or
sub
mull
stc
add
popa
repz
inc
push
pop
inc
and
adc
sbb
sub
inc
inc
adc
lock
inc
enter
push
std
and
out
shrl
fstps
mov
cmp
stc
test
aam
dec
bound
aas
dec
insl
in
and
enter
inc
dec
leave
fcoms
enter
mov
pop
push
test
aaa
pop
and
jp
call
les
lds
int3
push
clc
inc
jecxz
and
mov
jp
add
or
cmp
ret
fiadds
call
cmp
std
inc
pop
js
imul
inc
lcall
in
mov
popa
in
mov
xlat
mov
fdivl
and
xchg
dec
cmc
les
ja
es
sbb
repnz
mov
xor
sbb
fdivs
popa
dec
out
mov
push
out
or
mov
mov
movntps
inc
das
mov
mov
sbb
repnz
lcall
cs
in
or
shr
lcall
pop
imul
loopne
out
cmpsb
mov
pop
inc
test
xchg
testb
repz
xchg
cwtl
arpl
jge
imul
in
out
enter
jmp
push
xor
repz
data16
orb
cmp
sbb
sarb
test
aas
inc
xor
mov
gs
mov
pop
fucomip
jbe
jmp
inc
and
inc
ret
inc
cmp
sub
scas
mov
in
jge
out
loop
ret
loope
ret
bnd
sub
pop
in
push
lcall
shl
push
dec
xor
cmpsl
ret
fisubs
inc
jl
mov
push
es
sub
xor
es
inc
cmp
loope
movsl
mov
insb
xor
arpl
and
insb
xchg
orl
fisubs
and
xchg
pop
aam
lahf
movsb
mov
sub
sbb
and
mov
loope
xor
dec
or
xor
jae
add
imul
mov
sub
jl
xor
mov
sub
jl
je
mov
mov
loope
dec
into
xchg
cmp
movsb
cmp
mov
int
cmp
cwtl
add
jb
lret
jg
stos
pop
mov
push
sbb
adc
mov
mov
insb
lcall
mov
stos
jg
outsb
imulb
push
sti
fadds
inc
into
adc
and
ja
aaa
jle
sub
sub
inc
push
movsl
sbb
jl
ss
sub
daa
cmpsb
arpl
cwtl
cmc
fwait
push
popa
sarl
sub
fxch
push
inc
scas
mov
fldt
sbb
jae
sbb
enter
mov
pushf
push
mov
fnsave
out
sahf
cs
enter
fstpt
sub
pop
dec
pop
lds
jle
jae
sbb
ja
mov
ljmp
mov
stc
lea
dec
inc
mov
in
enter
pop
dec
pop
xchg
inc
arpl
leave
loop
hlt
dec
vpcmov
ret
inc
insl
mov
xor
lods
push
loope
lods
xor
rcll
inc
add
pop
std
insb
int3
and
fstps
xchg
add
gs
divb
lret
jg
js
xor
add
aam
inc
enter
xchg
mov
xor
imul
mov
sbb
sbb
in
cmc
imul
mov
sti
dec
lock
jo
xchg
enter
push
sbb
movsl
mov
mov
inc
mov
repz
adc
nop
in
stos
aad
gs
idivl
fstl
jbe
xor
jbe
add
mov
lret
aam
aaa
add
faddl
add
icebp
loop
leave
inc
sti
jno
fldlg2
cltd
jo
ret
xchg
lahf
or
shrl
push
xor
int3
pop
call
cmpb
pop
cmp
xlat
mov
insl
mov
aad
inc
bnd
add
and
pop
stos
push
sbb
xor
in
je
fisubrl
xor
xor
sbb
mov
mov
push
ret
or
pop
cli
xchg
les
or
std
testl
lahf
add
jae
xchg
dec
mov
aaa
xchg
enter
imul
fnstenv
push
movsb
and
mov
adc
xor
je
shll
mov
scas
dec
mov
ja
push
pop
sbb
push
or
xor
ret
repz
movsb
add
inc
sbb
dec
cmp
xor
mov
inc
stos
lock
push
mov
clc
shlb
and
and
faddl
cld
cmc
fimuls
push
adc
sub
and
out
lods
scas
outsb
dec
mov
or
cld
push
sub
rorb
ret
repz
mov
subb
jae
push
loop
int3
ss
jle
addr16
daa
push
mov
mov
pop
jb
inc
inc
gs
ljmp
adc
imul
out
dec
int3
xor
mov
popa
mov
jle
xchg
int
inc
inc
jge
sub
shlb
jle
sub
jmp
jge
xor
and
ret
loope
dec
subb
and
int
sub
xor
cld
mov
int3
test
clc
fldl
out
icebp
ret
sti
xlat
into
mov
out
fs
and
les
into
pop
jl
xchg
insb
enter
jb
cmp
mov
sub
add
or
in
jno
test
out
enter
pop
les
inc
push
sub
xchg
and
pop
std
clc
inc
leave
xchg
mov
cltd
cmpsl
and
jns
nop
imul
sarl
adc
insl
sti
cmp
pop
push
sbb
push
test
mov
daa
les
mov
mov
test
adc
dec
outsb
mov
mov
fdivrl
sbb
lcall
int3
sub
test
xor
xchg
jno
lea
cmpsb
pusha
xor
fnstenv
xchg
and
ljmp
lds
aas
lds
lahf
mov
clc
mov
xor
andb
popa
jns
scas
push
inc
push
enter
xchg
imul
das
sbb
ds
cmp
xor
and
push
aaa
sbb
pop
xor
and
je
inc
mov
mov
andb
iret
dec
data16
sub
cmp
stos
notb
xchg
and
dec
pop
adc
pop
hlt
xchg
dec
add
arpl
addr16
fsts
leave
mov
insl
xchg
dec
mov
repz
les
xchg
jecxz
push
in
out
sub
xor
xor
add
or
jo
or
lods
enter
dec
pop
jns
jmp
mov
mov
fistpl
mov
add
jne
dec
lret
ss
in
rcrl
xor
les
mov
je
aam
mov
and
daa
call
cmpsb
xor
inc
outsb
dec
mulb
or
clc
xor
hlt
mov
mov
sbb
dec
lret
mov
ljmp
sub
aam
out
daa
xorl
mov
or
push
dec
add
mov
rolb
fadd
fimull
test
and
rorl
pop
or
mov
clc
dec
dec
in
outsl
shl
add
xchg
mov
or
add
xor
cmp
jne
hlt
and
test
imul
aaa
push
arpl
lods
mov
mov
pop
mov
jmp
dec
adc
and
daa
icebp
mov
ja
dec
pop
inc
daa
rol
roll
add
jmp
stos
pop
xchg
sahf
orl
ret
xchg
dec
test
xor
pop
adc
insl
mov
mov
pop
outsb
pusha
sbb
xchg
lret
addl
jmp
jge
jo
ljmp
sub
lcall
jnp
push
inc
lahf
loop
mov
mov
inc
pop
jno
leave
lds
mov
adc
mov
testl
aad
jle
clc
sub
shll
mov
push
lret
cmc
xor
adc
mov
or
adc
xchg
dec
inc
jge
xchg
test
and
cmp
sbb
sbb
lcall
dec
pop
or
test
sbb
inc
test
bound
cld
add
push
inc
je
andl
out
lahf
data16
shr
sbb
aaa
cmp
sub
call
imul
mov
lret
mov
cli
mov
mov
lock
enter
push
sti
dec
add
mov
adc
or
pop
sub
and
fbld
faddl
push
adc
jmp
das
cmp
jmp
inc
idivb
push
lahf
or
arpl
and
pop
jle
mov
adc
loope
cmpsb
dec
sub
sbb
ret
loopne
das
mov
arpl
bound
call
ret
push
aad
test
mov
les
ret
inc
aad
jle,pt
dec
das
push
enter
dec
push
lcall
mov
loope
push
mov
xchg
push
xlat
sub
fstpl
dec
sub
sub
in
loopne
push
rcl
and
and
cmpl
or
hlt
dec
cmp
cmp
inc
push
jge
jae
sbb
jg
add
mov
sbb
enter
stc
and
push
adc
mov
popa
int3
gs
out
mov
dec
xchg
push
incb
shrl
into
test
sub
std
cmp
les
xor
mov
aas
push
in
xchg
aad
sub
mov
push
in
xchg
push
into
sbb
push
pop
cwtl
pop
mov
jmp
aad
mov
mov
shll
fxch
ds
adc
push
loop
pop
xlat
xchg
xor
and
roll
aad
or
repnz
dec
inc
std
xchg
jae
pop
imul
sub
mov
push
xchg
outsb
mov
pop
outsl
sub
xchg
dec
or
sahf
mov
inc
mov
sub
nop
mov
andl
mov
es
fisttpl
jle
cmp
inc
xchg
xor
arpl
scas
roll
add
push
add
dec
slwpcb
mov
jge
and
test
push
jmp
in
in
ret
xor
push
jne
push
out
jecxz
mov
jnp
cmp
push
mov
dec
loopne
mov
mov
mov
shrl
adc
insb
loopne
popa
out
sbb
lods
jno
sahf
test
or
dec
mov
cmp
inc
dec
xor
sub
and
adc
outsl
inc
cmp
mov
and
sti
push
inc
lcall
sub
mov
arpl
push
add
je
xor
mov
sbb
jb
or
inc
mov
in
fildll
add
dec
push
test
jl
dec
jmp
es
and
stos
pop
ja
xor
mov
repnz
enter
cmp
shll
in
dec
stc
aad
and
pusha
adc
and
sbb
fmuls
sub
adc
insl
mov
xchg
shll
jne
cmpsb
sahf
and
inc
mov
and
outsl
jle
and
es
and
jp
jg
adc
cmp
test
mov
push
jl
fmull
sub
call
out
xchg
sbb
and
xchg
subb
popf
stos
jno
cltd
mov
iret
add
mov
loope
jle
push
jae
jns
xchg
mov
fmuls
insb
fwait
push
jb
scas
lds
push
cmp
out
mov
fistps
mov
sarl
push
cltd
cmp
aad
int
lcall
inc
mov
xchg
or
dec
adc
cltd
lea
adc
push
sub
in
dec
movsb
subb
push
sub
push
cwtl
ret
std
adc
les
inc
xor
cmc
jecxz
cld
and
movsl
lahf
ljmp
idivb
sbb
test
cmp
popa
rcrl
je
pop
and
push
jmp
imul
mov
daa
aaa
lahf
mov
cmp
ret
or
and
enter
and
sbb
jecxz
jp
and
icebp
dec
push
lods
xor
and
fnstsw
mov
mov
jp
mov
in
pop
testl
add
out
or
adc
and
ja
jae
push
adc
fisubs
hlt
dec
adc
pcmpgtb
xor
xlat
aam
sbb
jns,pn
nop
lock
lahf
inc
pop
daa
xchg
mov
push
adc
inc
repz
mov
pop
inc
sub
sub
inc
push
cs
xor
and
cmp
jle
mov
or
xchg
in
push
sbb
inc
push
jecxz
jnp
pop
add
mov
pop
mov
shll
icebp
sbb
aam
add
cmp
dec
ja
ret
and
mov
sahf
and
push
in
xchg
cli
pusha
and
or
pop
push
outsb
aaa
mov
call
dec
scas
sbb
cs
and
push
cld
mov
sub
fwait
and
lds
bound
mov
outsl
and
and
push
push
sahf
mov
cmp
iret
jecxz
fcmovbe
adc
xorb
mov
mov
xchg
jle
mov
test
lea
cmpsb
adc
add
repz
mov
aad
or
or
mov
push
leave
movsl
sbb
xchg
addr16
insb
sahf
movsb
in
dec
hlt
shl
cltd
cwtl
sbb
and
cmpsl
mov
inc
popa
into
and
in
loope
sbb
rcrb
cs
and
pop
jb
inc
repz
lea
cmp
cmp
mov
inc
mov
cmp
fwait
mov
and
lea
sub
scas
sbb
loope
add
xor
and
dec
fwait
sbb
xchg
int
mov
inc
xchg
adc
sti
or
mov
int3
mov
jl
and
xchg
lods
or
xchg
std
inc
and
negl
push
fisubl
and
inc
nop
push
jno
imul
mov
jae
and
cmp
rorb
out
lock
lcall
sub
movsl
xchg
call
inc
sub
hlt
jecxz
movsb
cmp
js
jmp
xor
lea
sbb
iret
and
rsqrtps
xchg
xchg
dec
stos
mov
sbb
and
cld
pop
ret
test
jmp
mov
in
push
mov
or
pop
jge
aad
in
lcall
and
ja
cmp
cmp
decl
adc
and
adc
cmp
xorb
nop
and
mov
mov
and
sbb
and
popa
test
mov
cmc
push
je
mov
inc
inc
insb
aas
push
sub
jnp
cmpsl
daa
and
jl
cmc
mov
and
push
cltd
fildl
mov
out
inc
scas
adc
and
sub
and
cmp
and
jo,pt
fcompl
and
in
pop
pop
xchg
out
cli
in
sahf
and
ret
jg
adc
inc
pop
bound
rolb
xor
shlb
cmp
jp
mov
sbb
cmp
ja
pop
xchg
mov
mov
inc
test
scas
push
rorb
xchg
xchg
jecxz
movsl
cltd
cmp
dec
or
and
mov
and
mov
mov
mov
test
fs
aaa
inc
clc
mov
mov
lahf
adc
jecxz
mov
fst
scas
dec
mov
and
jo
lret
out
hlt
and
mov
loope
sti
pop
and
mov
std
jns
js
and
push
and
sub
movsb
sti
and
repnz
pop
fildll
add
scas
xor
jge
lret
adc
xchg
ret
movsb
mov
insb
xor
xor
stos
fmull
jne
test
enter
and
pop
negb
loope
and
fucomip
fldenv
xor
subl
insb
int3
and
or
and
mov
jge
addb
repz
xlat
sbb
leave
cmpsl
imul
cmpb
xchg
pop
aaa
mov
cld
popf
adc
jge
lods
fistps
enter
loop
fsubl
pop
xor
cmpsb
and
xchg
sahf
aaa
mov
xor
rcr
xor
insb
js
daa
and
into
xchg
jmp
adc
arpl
cmp
insl
xchg
pop
and
insb
arpl
inc
and
cs
xchg
or
out
and
mov
fdivrs
mov
lret
jp
shrb
xchg
loop
or
imul
and
xor
and
fwait
andl
popa
and
and
mov
mov
jl
jae
pop
jne
mov
cltd
jp
mov
mov
loop
mov
out
xorl
in
sbb
xchg
pop
pusha
divb
pushf
andl
dec
leave
xor
push
sbb
add
loop
pusha
int3
inc
fsubrl
inc
inc
push
iret
mov
push
and
call
je
repnz
sbb
cmpsl
and
dec
aas
xchg
xorb
sbb
aam
cli
nop
test
push
push
and
popf
xchg
fwait
jg
lock
jno
mov
cmp
xor
jp
cmp
mov
out
xchg
std
loop
and
or
pop
xchg
mov
adc
out
adc
push
pop
clc
cltd
push
imul
mov
fnstsw
fadds
and
or
xor
fildll
shll
dec
pop
repnz
test
and
ljmp
mov
and
xchg
arpl
and
stos
push
mov
leave
aas
sbb
jno
loopne
and
adc
add
xor
mov
pop
pop
ret
pop
jmp
dec
inc
aad
add
inc
push
sub
and
cs
mulb
add
dec
pop
cld
pusha
sub
or
mov
insl
jns
adc
adc
neg
negb
mov
xor
andps
popa
lcall
push
and
int3
adc
aaa
dec
out
and
pop
iretw
addb
mov
roll
mov
imul
call
ss
push
push
lods
xchg
ljmp
incb
je
scas
and
push
fdiv
movsl
cmpsb
enter
loop
adc
mov
bound
lock
xchg
fidivs
pop
ret
stos
inc
andl
push
das
cld
xchg
mov
leave
ja
ret
fisttps
nop
push
inc
jo
and
inc
push
jns
jo
scas
sub
inc
or
adc
faddl
xchg
cs
sbb
push
dec
pop
das
mov
jmp
inc
inc
adc
movsb
cmpsl
dec
and
rol
inc
aaa
pop
sbb
test
push
dec
test
mov
push
cmp
push
adc
mov
mov
je
jle
ret
and
mov
cld
imul
stc
leave
mov
mov
xchg
les
movsb
es
arpl
push
jl
xor
xor
insl
mov
mov
leave
xor
push
mov
push
movsb
push
xchg
enter
neg
adc
mov
icebp
mov
ror
test
mov
adc
aad
or
arpl
int3
jg
sbb
xor
aas
and
mov
cmpsb
and
cmp
sub
arpl
enter
pop
lds
pop
xor
add
push
jecxz
mov
mov
jg
pop
dec
cld
inc
in
les
imul
std
pop
in
pop
sbbl
xchg
loope
out
or
jg
and
cli
leave
mov
dec
push
test
rdtsc
or
xchg
jecxz
dec
jno
movl
inc
leave
jbe
mov
in
mov
adc
cmpsb
mov
sub
cmp
jb
sub
popa
fnstcw
or
mov
jge
fsubrl
les
enter
mov
and
shll
push
imul
lahf
cli
mov
inc
jle
dec
in
mov
mov
sbb
in
sub
adc
fcmovu
call
and
push
testl
cmp
enter
add
jg
mov
xchg
cmpb
repz
mul
cwtl
push
push
jp
ret
inc
dec
sub
jg
xchg
int3
mov
hlt
cmpsb
mov
adc
and
enter
push
dec
jg
dec
adc
inc
les
aad
adcb
push
addr16
dec
jle
in
xchg
test
jge
jbe
push
sbb
cwtl
cmp
xchg
sub
loop
sbb
dec
ja
mov
inc
xchg
xor
push
xlat
or
cmp
ficompl
mov
or
inc
rorl
mov
ret
in
add
out
inc
pushl
out
xchg
or
dec
movaps
repnz
sub
clc
pop
cli
xchg
sti
divb
adc
fldl
mov
xchg
int
gs
sahf
adc
stc
bound
into
popa
and
lahf
xchg
pop
mov
add
xchg
aad
mov
mov
aam
inc
loopne
pop
xchg
push
and
sub
jg,pt
xor
sbb
fcoml
push
nop
popf
in
int
insl
and
outsb
shll
jno
ret
daa
fxch
movsl
pop
sbbl
cmp
xor
neg
push
or
orl
cmp
mov
pop
cmpsl
sbb
sbb
adc
inc
xor
xor
jl
inc
mov
shr
rcr
test
rcll
test
sbb
jae
add
dec
sbbb
pop
mov
in
mov
sbb
mov
adc
or
pop
ret
into
pop
and
sub
add
adc
mov
call
jecxz
mov
lret
and
inc
mov
push
inc
jle
xorl
insl
rorl
inc
cltd
pop
jg
xor
jae
rolb
mov
addl
in
jbe
cmpb
repz
cmp
and
enter
and
cmp
jmp
bound
sbb
dec
and
pop
mov
scas
aaa
insl
mov
xchg
test
inc
mov
dec
int3
jb
mov
pop
arpl
enter
icebp
adc
or
cwtl
lret
mov
mov
or
inc
xor
mov
push
add
hlt
arpl
fs
add
mov
adc
add
notl
mov
insl
or
xchg
inc
jl
ss
xchg
divb
outsb
dec
imul
fbld
jge
mov
inc
jg
push
hlt
into
rolb
inc
sub
mov
mov
or
push
ja
push
out
aam
xor
inc
adc
int3
push
fmull
add
xchg
sahf
sub
lahf
dec
jne
adc
addb
pop
mov
cltd
shrl
sub
sbb
out
xchg
xchg
mov
and
cmpsl
in
mov
les
xchg
sahf
fldenv
out
xor
ret
outsl
jmp
inc
js
sub
xchg
jbe
into
or
bound
insb
xchg
adc
sbb
les
fidivrs
out
jl
int3
test
mov
das
repz
out
insb
push
push
mov
mov
sarl
dec
loope
pop
sbb
jp
and
enter
jg
std
imul
inc
pop
das
rcll
add
enter
ja
mov
sti
dec
ljmp
pop
mov
nop
xchg
or
mov
jno
jne
mov
mov
mov
ret
ja
fwait
jne
inc
xchg
test
push
outsl
and
loop
addb
ljmp
out
or
xchg
in
testb
sbb
ds
push
lret
mov
inc
inc
cmpsl
xchg
les
jbe
popa
mov
push
jp
neg
idivl
adc
rol
xchg
inc
adc
mov
in
mov
jl
outsb
mov
jne
ret
sub
mov
enter
mov
mov
iret
imul
jge
xchg
sbb
imul
xchg
std
test
and
mov
cmp
mov
push
sbb
sub
and
mov
jns
and
jle
popl
jecxz
ret
inc
cmp
and
mov
inc
and
in
addr16
sub
and
sahf
je
sub
and
pop
or
and
jb
out
cmpxchg
in
call
iret
xor
xchg
in
and
push
mov
out
and
loopne
push
add
pop
and
daa
mov
jl
push
js
cmp
and
arpl
pop
xor
sbb
pop
repnz
jae
bound
out
xchg
test
movsb
ds
mov
mov
adc
and
lret
cmp
jge
outsl
loope
shl
sub
cmpsb
push
pop
add
sub
outsb
lahf
pop
xor
cmp
adc
push
jecxz
cmp
inc
and
js
lods
push
stos
jae
mov
popa
pop
mov
xor
adc
dec
repz
add
and
sub
and
mov
xchg
in
popf
inc
and
push
and
fstps
ss
orb
bound
push
lahf
and
xor
jne
shl
jp
dec
cmp
add
mov
add
and
mov
mov
clc
call
adc
and
popf
std
ljmp
movsb
xor
push
and
lcall
xchg
popf
or
sbbl
dec
and
idivb
dec
xchg
aas
roll
ss
push
inc
add
mov
xor
dec
xor
and
push
shl
jmp
and
cmc
popf
sub
sub
mov
and
push
negb
out
ja
xchg
and
push
sub
dec
or
adc
in
and
pop
rorl
sub
dec
xchg
mov
sub
push
or
imul
or
lds
and
fsub
pop
cvtps2pi
aad
xor
stos
inc
lea
jo
xor
lock
push
sub
or
lock
add
and
neg
mov
fucom
leave
fs
aam
loop
adc
and
push
inc
sbb
in
or
cli
and
jmp
aaa
xchg
mov
xor
imul
nop
fisttpl
mov
and
or
add
dec
pusha
push
ret
in
out
and
out
or
adc
mov
repnz
shll
movsb
pop
xor
xchg
mov
cwtl
pop
or
aas
pop
out
mov
mov
push
and
add
pushf
cmp
jno
mov
fs
pop
aaa
inc
and
hlt
and
jbe
daa
cmp
lret
loope
fcoms
cli
and
or
and
xchg
push
nop
sub
insl
pop
clc
scas
and
mov
and
xchg
lret
ret
sbb
and
nop
mov
and
mov
and
out
lods
insl
and
xchg
push
cmpsb
mov
fsubl
jae
ret
xor
aam
and
push
sbb
xchg
and
mov
lcall
out
leave
jle
int3
sbb
inc
pusha
in
mov
jecxz
and
popa
lret
leave
mov
fwait
sub
inc
imul
xor
ja
movsb
push
mov
setge
cmp
mov
mov
jns
xchg
pop
and
imul
jno
clc
sbb
aam
fs
mov
fwait
and
cmp
outsb
xor
cmp
enter
push
or
dec
and
and
dec
xchg
mov
pop
or
push
jbe
lds
lret
outsb
xlat
mov
stc
and
cmpb
inc
sbb
and
shl
pop
mov
dec
lock
sub
and
xchg
stos
inc
negb
and
jae
aam
xchg
dec
and
sbb
cmp
enter
mov
or
jns
sub
sub
jno
in
cmp
adc
nop
cmp
pop
and
jmp
sbb
dec
dec
scas
lcall
cmp
cmp
and
fsubl
and
jns
jle
sub
and
sub
fwait
sbb
cmpsl
and
jge
mov
loop
sbb
mov
pop
andl
pop
cwtl
and
adc
inc
adc
and
cmp
cmp
or
sub
and
jne
stos
insl
mov
cmp
dec
mov
call
cmp
int3
jmp
inc
push
js
imul
arpl
xchg
rolb
mov
notl
and
or
mov
imul
sub
xchg
push
inc
pop
xchg
enter
stos
imul
jecxz
and
arpl
xchg
xor
and
std
push
mov
ret
inc
ss
ficomps
sahf
cld
jg
ret
gs
pop
nop
shlb
jbe
cltd
rorb
fldenv
sub
das
inc
and
into
aaa
dec
and
ret
and
push
ds
fstl
adcl
out
adc
andl
mov
movsb
cmpsl
mov
lods
mov
xlat
xchg
pop
and
adc
andl
xor
mov
cltd
loop
ret
and
inc
test
pop
and
add
sub
or
daa
cmp
push
jmp
enter
leave
dec
pop
rcll
and
adc
cmp
arpl
add
fbld
mov
and
and
lahf
sub
and
dec
cmp
rcrl
je
push
and
fimuls
enter
sbb
jbe
add
cmp
mov
icebp
out
jne
aad
and
daa
ja
flds
clc
adc
outsb
dec
jecxz
mov
adc
loopne
rcrb
jo
repz
shlb
cmp
dec
jecxz
stc
jg
mov
or
call
jbe
and
rcll
dec
je
mov
imul
lahf
sub
iret
es
mov
ret
test
stc
lods
lcall
imull
pusha
clc
repnz
dec
and
sahf
mov
jns
push
mov
and
out
adc
fildl
cmpsb
mov
pop
mov
test
lret
ss
mov
jae
test
mov
adc
mov
push
subb
ljmp
rcrb
stos
stos
pushf
and
mov
and
xchg
add
int
das
jb
fwait
dec
pop
and
in
daa
mov
cmpsl
push
mov
stc
pop
cmc
loope
loopne
sub
add
cs
jns
out
and
sti
jge
mov
in
or
jecxz
stos
int
mov
sub
aam
loop
das
and
xchg
adc
and
aaa
adc
dec
int
cmp
mov
or
mov
sub
stos
mov
and
std
jae
and
cmpsb
jne
test
arpl
mov
mov
and
jnp
sub
and
xchg
popf
cmp
jno
dec
and
dec
lea
fnstsw
sbb
enter
add
inc
enter
int
or
mov
sbb
jmp
fnsave
xchg
data16
fdivp
sbb
mov
mov
imul
les
sarb
sbb
mov
and
xchg
add
jg
call
out
daa
daa
enter
out
dec
sub
roll
xchg
clc
in
fwait
xchg
xor
mov
call
and
xor
jmp
in
cmpl
int
adc
aam
xchg
or
std
incb
pop
inc
out
push
or
notb
aad
or
loopne
pop
or
jno
xor
testl
cli
mov
and
enter
rol
movsb
cmp
les
fsave
les
xchg
xor
pop
ss
pusha
jmp
lcall
push
or
cs
sub
and
ret
sub
xchg
enter
popa
loop
adc
jae
push
repz
xchg
sbb
and
js
inc
ret
push
mov
iret
or
inc
mov
add
and
test
shll
int
xchg
stos
icebp
inc
shl
test
lods
and
ljmp
pop
inc
stc
jns
mov
jns
out
fists
int
inc
dec
or
pop
sbb
daa
and
sub
iret
mov
push
jns
roll
subl
mov
cmp
inc
dec
and
lret
mov
pop
adc
test
in
sbb
and
in
and
loope
cld
xchg
cmc
shll
in
aas
les
inc
xchg
hlt
add
and
fdivl
sbb
inc
gs
xor
pop
and
cltd
pusha
data16
sti
lds
arpl
sub
and
jp
jl
add
dec
cmp
cmp
and
lods
jmp
inc
std
repz
xchg
enter
inc
das
mov
adc
xlat
push
out
adc
test
and
jns
fdivr
in
clc
shl
xchg
out
fisubrs
iret
add
xchg
sti
mov
push
cli
out
mov
push
dec
xchg
and
or
hlt
div
fs
sbb
rol
inc
and
inc
or
sti
and
lods
mov
jmp
sbb
cmp
mov
mov
mov
jge
push
sbb
xor
dec
xchg
clc
and
out
push
lea
movsb
ljmp
and
mov
call
ret
sarl
mov
cmp
push
sbb
push
xchg
sub
jns
cltd
cmp
push
dec
mov
and
fs
xchg
pop
pop
aas
imul
and
test
mov
sbb
or
inc
ja
cli
push
jnp
push
fbld
mov
and
push
xchg
ss
pop
ficomps
sub
mov
stos
sub
out
in
or
xchg
mull
and
pop
and
sti
cmpsl
cli
and
gs
hlt
jae
and
inc
dec
addr16
push
cld
inc
cmpsb
or
dec
jno
sub
lcall
jne
xor
push
push
mov
or
cmp
sbb
xchg
add
or
mov
adc
or
and
in
mov
sbb
pop
lock
and
inc
pop
outsb
sub
lret
popf
and
fildl
loope
xchg
pop
mov
mov
push
push
jb
add
in
adc
std
or
pop
and
cmc
in
cmp
dec
push
sbb
in
and
pop
mov
and
dec
popa
fstps
and
jp
add
xchg
push
in
push
and
shrl
js
mov
mov
push
popa
lods
fmull
push
cmpl
out
lods
xor
mov
lret
shl
ljmp
and
scas
ds
outsb
and
add
push
xchg
imul
ret
mov
fs
repz
sbb
sbb
adc
mov
int
dec
inc
sarb
inc
xor
cli
push
fnstenv
sahf
xchg
cmp
sub
jne
xchg
push
sahf
adc
cmovle
mov
insb
int3
and
and
xchg
or
andl
xor
call
fnsetpm(287
cltd
pop
lods
shll
subl
mov
and
adc
sbb
pop
pop
add
in
and
scas
xchg
mov
xlat
add
loop
pop
stos
pop
add
rorl
sbb
fisttpll
repz
clc
and
pushf
js
cmp
cli
and
ja
shlb
insl
dec
adc
sbb
lock
out
mov
cltd
mov
mov
call
dec
and
dec
sbb
xor
ja
pop
ret
movsb
notb
out
aaa
pop
dec
nop
loopne
test
cmp
cli
and
pop
xor
mov
push
push
mov
aam
jmp
pop
sub
jb
mov
sbb
das
mov
call
rdtsc
js
repz
cmpb
jl
xchg
push
pop
mov
adc
dec
push
int3
xor
push
pop
loopne
orl
cmpsl
bound
and
data16
add
in
mov
ret
cltd
int3
loop
sub
jmp
in
stos
and
adc
inc
mov
bound
adc
and
jl
out
sti
push
mov
cmp
pop
sahf
add
enter
mov
outsl
mov
sbb
pushf
and
ficoml
in
inc
lds
cmp
rclb
xchg
iret
in
popf
push
rcrl
mov
push
push
adc
syscall
inc
pop
and
test
xchg
xchg
sbb
and
push
pop
iret
xchg
push
dec
sub
xchg
in
imul
pop
stos
inc
outsl
arpl
or
inc
push
fisubs
cmp
inc
stos
mov
fildll
inc
loope
das
and
push
lea
in
xchg
push
xor
cmpsb
push
jmp
inc
add
dec
or
in
mov
add
js
push
mov
push
mov
jbe
outsl
and
jl
xor
sub
fcmovnbe
add
pop
jecxz
data16
or
mov
sbb
sub
fadds
loopne
mul
cmpsb
push
ds
pop
out
repz
gs
inc
roll
mulb
movsb
daa
cmp
aaa
pop
sub
jno
mov
lahf
bound
addr16
adc
xor
call
jb
or
push
outsl
negl
and
out
fbstp
subl
and
jno
and
jle
mov
add
add
jmp
mov
int
xchg
sbb
xchg
and
test
fidivl
sbb
repz
mov
imul
adc
lods
andb
dec
jno
gs
xor
adc
scas
test
enter
lods
mov
clc
loopne
cwtl
pop
adc
or
repz
cmc
shrl
or
mov
jecxz
pop
jmp
lods
vpslld
and
movsl
lods
mov
push
push
dec
jecxz
mov
pop
adc
xchg
fcom
popf
inc
pop
pop
push
rclb
push
js
xor
iret
out
and
lock
dec
frstor
push
or
adc
xchg
imul
fs
and
nop
push
and
lahf
push
pop
xchg
add
push
out
mov
cmpsl
mov
mov
scas
xor
mov
fwait
or
and
push
pushf
les
int3
push
and
in
pop
test
jbe
lret
aam
ljmp
lret
adc
jge
es
in
in
insl
mov
mov
decb
pop
jno
mov
mov
loop
pop
push
pop
sbb
and
jp
xchg
gs
mov
pop
mov
or
cmp
jo
out
fldcw
sbb
loop
dec
loope
pop
mov
push
inc
jb
ljmp
loopne
cmpsl
aas
inc
or
psllw
sahf
stos
fucomi
sti
aad
decb
mov
xchg
mov
mov
iret
ljmp
mov
idivl
mull
scas
ret
outsl
testb
xor
mov
arpl
pop
or
aas
sbb
sub
cmp
test
xor
inc
sbbb
ss
loopne
adc
enter
fwait
jbe
sub
in
or
mov
push
or
mov
insl
aam
xor
mov
mov
pop
pop
mov
stc
mov
jg
adc
jbe
add
and
enter
arpl
sub
mov
mov
ret
mov
sbb
gs
add
or
cli
iret
xor
mov
sbb
jecxz
sbb
mov
in
or
test
cwtl
pushf
imul
jno
fbld
xchg
enter
arpl
cmp
rcrl
gs
mov
dec
divb
xor
mov
arpl
aad
mov
inc
rorb
ret
or
enter
icebp
mov
jmp
cwtl
loope
das
mov
hlt
popf
sub
xchg
pop
cmp
push
cli
dec
call
sbb
enter
push
out
mov
arpl
repnz
ss
or
loope
xchg
pop
mov
into
test
xchg
cmp
or
cmpsb
rcrl
and
int
adc
fistpll
mov
and
xor
xor
push
enter
repz
xor
pop
outsl
jne
lds
adc
inc
fldenv
mov
pop
sub
and
push
add
ret
sbb
ja
fs
push
nop
xchg
add
in
sbb
lret
imul
and
sub
fs
sbb
in
rolb
lahf
pusha
out
or
je
arpl
inc
inc
xchg
sahf
xchg
pop
xchg
mov
hlt
push
dec
outsb
in
sub
js
cmpsb
cmp
xchg
notl
ss
rcrb
in
call
shrl
ljmp
out
addr16
popl
loope
or
pop
mov
je
pop
xchg
pop
shrl
pop
daa
adcl
mov
mov
mov
cmpsb
stos
out
js
mov
sbb
aaa
sahf
add
inc
jmp
or
push
popa
out
imul
xorb
test
pop
subb
fildll
jno
int
int
arpl
cmc
jge
jno
divl
inc
bound
hlt
iret
inc
add
xor
aam
test
int3
or
adc
adc
rorl
and
aad
rorl
jo
sbb
insb
cltd
pop
lea
std
inc
mov
adc
xor
test
fstps
in
and
sahf
test
aas
adc
into
cmp
and
retw
dec
inc
lahf
les
fs
aam
aaa
and
clc
and
jp
outsl
fcomi
xchg
pop
lds
ret
outsl
test
push
ja
mov
mov
cld
jl
push
jle
push
daa
and
push
enter
dec
lret
mov
int3
add
faddl
xor
je
enter
insl
int3
push
sbb
jns
cmp
mov
fildl
popf
jnp
sbb
xor
bound
popf
xchg
ljmp
inc
sbb
and
mov
jns
and
add
rol
aas
inc
push
mov
int3
or
dec
jl
mov
loope
add
lcall
movl
in
mov
and
sbb
fnstenv
ret
xchg
ret
or
pop
repnz
mov
les
popa
mov
pushf
lahf
in
lahf
xchg
xchg
push
sbb
movsl
cwtl
mov
mov
outsb
je
pop
aas
cwtl
mov
adc
fstl
stos
pop
or
push
es
dec
cmp
sar
psubusb
jo
cmpsb
or
enter
sub
loopne
les
dec
popa
inc
aas
adc
dec
jne
inc
push
cmpsl
and
mov
and
jecxz
adcb
fcoms
adc
add
mov
cmp
jo
movsb
lcall
lahf
jp
outsb
subb
inc
enter
insl
movsb
rcl
ja
movsl
jge
int
mov
jns
cld
ror
or
sub
dec
outsl
inc
cmpsl
ret
sbb
aaa
fsub
and
sub
outsb
mov
js
lcall
dec
or
and
aas
push
mov
xchg
sub
enter
push
testl
insl
out
mov
stos
xchg
daa
inc
ja
dec
jle
jbe
mov
enter
push
ret
fiadds
adc
inc
adc
add
sbbl
mov
push
push
xchg
out
and
mov
mov
inc
dec
inc
adc
jae
loope
inc
test
xchg
int3
ss
hlt
lods
xchg
mov
lret
in
popa
lock
divps
mov
sub
insb
mov
inc
loop
pop
or
pop
or
jl
sbb
jge
jmp
sub
lcall
push
mov
cld
les
aaa
pop
leave
rol
inc
pop
inc
and
inc
cmpsl
std
xor
lret
in
fildl
fiadds
cwtl
movsb
lcall
mov
sbb
mov
inc
pop
xchg
dec
sub
outsl
popf
ficompl
ret
pop
mov
iret
xrelease
jle
xor
dec
jns
inc
in
mov
out
and
or
ficomps
adc
push
fs
jae
add
lret
cmp
mov
and
and
pusha
out
pushf
add
xor
sub
inc
xchg
jle
mov
shrb
inc
lahf
adc
enter
xor
jne
jno
push
int3
cmc
pop
mov
mov
dec
fcomps
insl
sub
and
inc
lcall
and
xor
adc
imul
divb
xor
daa
imul
mov
enter
inc
push
mov
mov
jns
push
jmp
pop
xchg
fldenv
push
insb
sub
xchg
jle
xlat
pop
mov
inc
xchg
jnp
shl
test
addb
aad
sbb
lret
cwtl
jecxz
sbb
and
and
dec
cmp
dec
loopne
or
xchg
sub
les
pop
adc
sahf
fldenv
popf
dec
out
xor
jle
les
adc
push
jmp
or
in
push
hlt
push
enter
add
inc
dec
and
inc
add
adc
jns
enter
or
sbb
add
lcall
xor
cmc
push
sahf
mov
inc
je
and
fidivl
call
sahf
les
inc
jo
sub
push
aaa
inc
into
xor
cmpsb
and
mov
roll
mov
mov
inc
mov
sarl
jg
icebp
pop
jnp
pop
ljmp
fildll
xchg
repnz
cmpsl
xor
xchg
sub
hlt
mov
pushl
push
pop
xchg
jnp
or
sbb
dec
arpl
enter
out
dec
mov
xor
inc
pop
shlb
mov
test
lahf
icebp
maskmovq
testl
sar
xlat
add
add
insb
push
xchg
mov
popf
jb
mov
pop
inc
lret
push
jbe
mov
les
pusha
addr16
xor
movsb
shld
stos
out
outsl
push
fs
add
xor
xchg
inc
pop
xor
mov
xor
or
mov
xor
lret
sub
ljmp
mov
out
push
imul
push
fldt
push
in
fs
sahf
jno
in
and
and
test
lahf
jg
scas
ja
lcall
icebp
jno
sub
dec
dec
shr
leave
jle
lcall
movl
fnstsw
test
jl
gs
mov
sub
and
fbld
xor
mov
or
and
mov
inc
add
or
aas
repnz
dec
hlt
jbe
and
mov
mov
pop
pop
add
mov
repnz
adc
xchg
pop
imul
xchg
push
mov
cmp
inc
cmpsb
or
add
jp
arpl
inc
sbb
jecxz
pop
shrb
inc
adc
sbb
xor
adc
mov
pop
bound
dec
sarl
and
xchg
rcll
das
inc
int
mov
bound
sbb
push
pop
pop
enter
inc
push
pop
cli
popf
sub
mov
sub
les
inc
shll
or
inc
roll
xchg
inc
data16
inc
pop
mov
aad
dec
imul
ljmp
lcall
jge
xchg
rcll
and
adc
fwait
daa
ret
test
pushf
jns
cmpl
outsb
in
or
mov
fucomp
cld
bound
lds
loope
enter
gs
xor
jb
adc
mov
xor
lock
jmp
xor
adc
inc
bound
lods
mov
mov
lret
mov
daa
pop
jg
sbb
cmp
arpl
enter
cmpsb
inc
clc
push
pop
test
rclb
pop
int3
dec
dec
fdivrl
xchg
imul
add
into
inc
shl
mov
mov
jns
sbb
int3
test
xchg
jge
into
les
inc
sti
jns
jbe
adc
cmpsl
jl
lcall
xchg
jg
mov
adc
cmp
adc
cmp
or
mov
pop
dec
je
mov
stos
rorl
or
in
adc
fs
xor
lahf
adc
nop
xchg
addr16
fstpl
dec
mov
sub
imulb
inc
adc
sbb
xchg
sbb
add
push
out
loope
jg
lea
mov
mov
aam
pop
ret
cwtl
jg
inc
cmpsb
icebp
mov
dec
push
xlat
out
dec
aam
aaa
pop
inc
mov
ret
xor
add
lcall
jae
lahf
inc
mov
leave
scas
repz
mov
repz
imul
xor
das
aam
dec
xor
mov
outsl
movsb
insb
sub
or
jno
jmp
in
adcb
ret
sub
inc
pop
mov
sbb
cmc
dec
call
push
pushf
inc
push
ret
call
cld
rorl
cmpsl
bound
mov
insb
xchg
xor
push
inc
imul
ds
es
dec
pop
lea
stc
push
or
mov
dec
cs
scas
enter
shl
fnstsw
jno
enter
inc
outsl
add
pop
sahf
pop
fldl
xchg
or
outsl
jnp
fistl
shll
test
leave
ret
test
fsubl
xor
imul
jl
jb
adcl
ret
jno
mov
xchg
inc
inc
arpl
das
pop
lods
lret
incb
test
pop
imul
mov
lret
fs
ret
in
lods
faddp
fcoms
fwait
bound
mov
out
or
jecxz
mov
and
pushl
data16
popf
add
add
aad
sbb
dec
sar
insb
imul
inc
subl
jns
ds
fucomi
pop
aad
add
aam
adc
pop
mov
ljmp
mov
mov
loopne
aas
fdivr
popa
push
popf
adc
sti
mov
test
test
push
jle
ret
jns
cmp
xchg
scas
dec
les
out
lcall
adc
ss
inc
mov
and
or
dec
movsl
dec
mov
push
icebp
cwtl
es
notb
mov
call
push
or
sbb
ds
mov
dec
inc
cmovne
jl
sbb
scas
hlt
sbb
fdiv
cmp
enter
push
mov
daa
mov
jae
imul
cmc
iret
pop
mov
js
icebp
mov
popf
rclb
pop
lods
xlat
enter
adc
push
mov
add
jo
pop
lret
bound
jl
fistl
cmp
addr16
cmp
mov
or
xchg
xchg
js
inc
push
cmpsb
lahf
shlb
xchg
push
notb
jns
imul
add
push
out
cltd
popa
mov
call
cmp
and
and
ret
push
pop
pop
enter
push
xchg
mov
jge
and
jo
push
into
add
mov
stos
adc
inc
cmc
push
movsl
jbe
or
inc
pop
mov
push
cmp
enter
push
inc
dec
cmpsb
in
adc
lds
mov
add
pop
jno
lcall
xor
loope
mov
jo
fs
cmp
clc
push
rol
jmp
push
and
pop
xchg
pushf
mov
inc
xabort
cmc
push
cmp
dec
fcmovne
stc
cli
es
pop
xor
inc
shll
clc
lock
mov
cmp
ret
or
insb
fdivl
call
std
test
test
in
mov
or
repnz
mov
adc
ret
push
xor
clc
or
bound
adcl
and
lret
lcall
dec
scas
out
shr
or
ds
lea
js
push
and
rol
in
jbe
pop
xor
cmpsb
jecxz
xchg
lds
aas
jbe
xchg
fimull
sub
and
rorb
loope
xor
xchg
pushf
aas
xchg
packuswb
test
cmp
xchg
xor
iret
call
aas
std
imul
or
enter
dec
idiv
enter
cmp
mov
adcb
pusha
fdivrs
pop
mov
outsl
mov
les
lahf
ret
ret
roll
jecxz
enter
mov
clc
push
flds
cmp
lret
mov
outsl
mov
dec
sets
cmpb
and
push
shlb
pop
push
or
cmp
cwtl
or
pop
mov
jb
test
mov
xor
mov
jp
fbstp
and
aam
test
xchg
lods
sahf
lcall
sti
add
mov
pushf
repnz
mov
and
mov
lock
out
ret
hlt
int
sub
pop
clc
xor
inc
imul
fadd
insb
jns
xchg
int3
stos
icebp
push
jp
inc
xor
pop
fcoml
dec
inc
or
jbe
sub
pop
std
adc
mov
fsubrl
add
aad
test
in
aam
lahf
js
pop
insl
mov
mov
in
cmp
ljmp
imul
dec
int
movb
fs
and
adc
cwtl
int3
dec
xchg
mov
jp
xor
push
lods
mov
lods
mov
sub
enter
or
lret
and
pop
fs
jnp
push
dec
mov
roll
mov
je
lret
xorl
aad
xor
sub
jge
inc
out
push
mov
insb
fmuls
cbtw
ret
cltd
xor
fimuls
pop
add
fmull
lea
xchg
imul
ss
mov
mov
sub
and
imulb
lock
cld
mov
bound
jae
mov
cmp
ss
jns
inc
icebp
mulb
cmc
jge
popf
ret
dec
aad
arpl
pop
test
out
data16
cmp
les
repz
push
and
ret
push
jl
bound
aad
in
adc
and
das
or
jo
sbb
addb
jbe
stos
and
nop
mov
sub
in
jmp
int3
cmp
adc
jbe
push
aad
inc
repnz
pop
xor
mov
fadd
cs
jg
std
ja
pushf
stos
xor
insb
adc
rol
cmp
loop
repnz
dec
push
hlt
inc
std
lods
fbstp
insb
cli
aad
jp
wrmsr
jae
shrb
mov
cmp
inc
sbb
xor
sub
aad
cltd
fxch
and
pop
loop
cmp
lret
mov
jmp
ds
adc
bound
repz
xor
mov
and
imul
popa
rclb
test
clc
mov
sbb
mov
jg
mov
mov
xchg
in
cmc
pop
testb
or
dec
or
xchg
cmovo
int
loop
mov
test
add
stos
imul
stos
sub
dec
jg
imul
out
loopne
pushf
adc
mov
and
fwait
dec
cwtl
push
mov
add
popf
andb
subb
add
and
gs
push
frstor
mov
dec
dec
inc
xchg
or
mov
test
sub
iret
ljmp
mov
xchg
std
lcall
adc
lods
pop
and
pushf
xchg
jo
sbb
ljmp
sub
mov
xchg
jne
enter
and
or
bound
fcmovne
add
fisubs
ret
fstpl
sub
jne
data16
push
in
push
leave
js
rol
out
sub
out
fisubl
fsubl
cld
inc
sbb
je
or
jmp
push
cmp
sbb
pop
movsl
rorb
cmp
int3
shll
in
sbb
and
mov
icebp
sbb
scas
pop
mov
ja
das
sub
mov
lds
fwait
push
fwait
sti
jmp
xchg
je
dec
cmp
aam
mov
and
ret
jge
testl
sahf
imul
cs
xor
xchg
pop
cmc
xor
dec
inc
cmp
loop
lahf
mov
inc
adc
xchg
mov
mov
dec
xor
sti
sarl
mov
and
push
add
bound
fcmovnu
mov
mov
pusha
mov
inc
sub
sahf
dec
mov
mov
xor
xchg
push
adc
and
or
xchg
imul
jmp
jmp
roll
in
rcll
adc
fwait
dec
inc
jle
rcr
cmp
imul
popa
mov
xchg
jp
mov
xchg
and
fdivs
or
push
movb
and
jle
sbb
cmp
insl
notb
dec
inc
jle
cmp
add
adc
lods
jbe
cmp
xchg
jbe
xchg
adc
fistpl
or
inc
int3
dec
inc
adc
testl
jecxz
mov
loope
add
fiaddl
gs
add
enter
ljmp
pop
and
lret
das
aam
mov
add
into
imul
fcompl
addr16
mov
add
call
mov
or
mov
fimull
lahf
jbe
push
sti
test
and
inc
cld
orb
mov
iret
jp
lret
mov
sbb
fsubrl
and
and
loopne
pop
jae
push
clc
ja
sbb
or
mov
mov
movsl
mov
cmp
imul
fstpl
pop
pop
jmp
push
push
data16
insl
cmpsl
xlat
cs
mov
pushf
test
sarb
cmpsb
jne
adc
add
js
push
xchg
cld
mov
xor
push
pusha
pop
data16
xlat
fisubrs
shlb
pop
push
pop
sarl
cmp
les
lods
addb
das
ret
cltd
ja
or
add
imul
lret
inc
mov
cltd
dec
mov
mov
inc
jno
inc
sahf
xor
and
pop
ljmp
outsb
or
fildll
ret
stos
imul
jge
mov
daa
ret
add
lods
mov
xchg
adc
xor
sbb
lret
out
mov
pop
int
add
pop
lret
and
dec
in
sub
out
loop
pop
sti
insl
xor
inc
xor
jecxz
and
push
mov
xlat
mov
enter
iret
les
pop
pushf
fldl
aaa
inc
sub
movsl
mov
mov
jo
loope
sub
out
testl
or
aas
pop
jg
test
sub
jge
inc
dec
enter
int3
xchg
pusha
ja
pinsrw
shll
pop
pop
mov
stos
adc
add
mov
fs
pushf
and
std
dec
les
je
hlt
jbe
fs
mov
fcomi
movb
push
ds
fs
iret
popf
xchg
adc
pop
arpl
adc
cmp
lahf
inc
inc
and
fcmovb
imul
gs
mov
and
les
jg
mov
sub
xchg
sbb
inc
dec
push
imul
push
invd
or
rol
rcll
inc
test
pop
sub
pop
sbb
xchg
adc
xor
fldcw
mov
add
xchg
inc
dec
fadds
push
xlat
loope
inc
sbb
clc
jmp
imul
add
mov
mov
fcmove
dec
ja
mov
xor
lock
push
aaa
adc
add
inc
ret
jecxz
mov
lcall
pop
sub
sub
enter
sbb
pusha
mov
push
pushw
mov
cmp
incl
push
mov
insl
add
mov
push
sbb
push
pop
cwtl
cmp
pop
js
xor
in
arpl
insb
lods
and
jb
sbb
adc
mov
outsb
sub
fistpll
mov
pop
div
movl
sbb
repnz
xor
aas
nop
mov
inc
sub
push
ja
mov
pushf
out
insb
cmpb
xor
addb
dec
adc
push
jg
mov
pop
mov
add
jnp
loopne
int
add
cwtl
dec
pop
jae
sti
insb
faddl
test
sbb
stos
add
fisubrl
or
js
in
pop
imul
fstps
enter
or
pop
lods
js
fstpt
repz
and
ror
xor
mov
add
jns
mov
xchg
andb
sub
shll
ja
les
dec
scas
mov
add
add
bound
or
xchg
mov
dec
bound
aaa
mov
fisubrs
adc
decb
jbe
mov
iret
in
pop
loope
mov
sub
pop
push
sub
in
and
ret
ss
std
and
or
dec
cli
aam
jbe
adc
lods
je
xor
and
pop
cmp
dec
rolb
into
les
mov
dec
out
imul
mov
xchg
mov
in
mov
mov
ret
mov
pop
push
loope
push
enter
push
lret
ja
pop
test
mov
and
cmp
data16
jge
inc
ficoms
leave
adc
bound
xchg
and
sti
rolb
into
push
push
repnz
sbb
aad
fiaddl
faddl
pop
dec
leave
imul
js
int
sti
add
xor
mov
pusha
into
cmp
lret
and
push
add
cmp
mov
jns
xchg
aas
outsb
mov
adc
repz
shll
mov
xor
in
jb
loope
sbbl
les
push
arpl
call
ret
lods
adc
clc
mov
mov
les
mov
cs
in
and
pop
test
ljmp
dec
sub
sub
es
pop
mov
ds
push
int3
addl
inc
or
daa
std
xchg
js
and
sbb
lret
cltd
adc
and
and
push
aad
les
push
lea
pop
test
and
or
push
add
or
sub
out
lahf
neg
fdivl
fs
sbb
pop
xorl
jl
push
sub
mov
inc
cli
sub
dec
adc
sub
add
test
in
imul
inc
and
push
mov
mov
jmp
cmp
jmp
lahf
mov
mov
movsl
out
mov
mov
call
cmp
sahf
and
cwtl
lock
scas
mov
in
cltd
and
out
mov
test
test
call
pop
dec
lahf
inc
inc
cld
jp
adc
dec
pop
repz
xor
xor
xchg
test
dec
andb
or
xchg
lods
and
push
cmp
lock
push
scas
loop
data16
jno
xchg
mov
loopne
cmp
andl
and
pop
das
and
scas
xchg
or
adc
or
sub
mov
ret
push
repnz
and
adc
pop
xchg
add
mov
imul
insb
lcall
sbb
and
add
fnstsw
andb
dec
mov
daa
and
jne
inc
and
out
xchg
jl
dec
cmp
dec
and
and
scas
pop
add
lret
mov
in
pop
mov
adc
and
adcb
dec
and
fsubs
and
sbb
pop
xor
add
enter
test
pusha
in
rcrb
push
pop
aaa
pop
lea
ret
and
mov
push
and
mov
ret
sub
outsl
jae
insb
jmp
cmp
push
and
js
movb
xlat
pop
rorl
mov
xchg
mov
mov
push
jb
leave
adc
adc
sbb
shll
pop
cmp
inc
adc
movsb
lret
mov
loop,pn
pop
jg
outsl
sub
inc
ljmp
and
fwait
jne
int
mov
and
pusha
jnp
ljmp
lods
xchg
and
pop
add
leave
xchg
fwait
push
and
dec
pop
and
jns
in
repnz
adcl
adc
loop
mov
and
bound
test
mov
test
jo
cmpsb
lock
arpl
and
pop
mov
stos
push
and
ret
aad
jp
mov
jne
fsubs
jecxz
and
mov
add
and
cld
sub
mov
ljmp
dec
hlt
and
movsl
shll
out
xor
or
inc
es
and
jle
outsl
lcall
push
sbbb
and
or
mov
rcr
cmp
push
enter
jecxz
mov
test
int
lock
rcrl
cmp
jo
lock
add
xchg
lcall
dec
add
movsb
or
sub
fldl
in
inc
or
and
hlt
and
shlb
push
push
stos
insl
adc
fisttpl
inc
push
rclb
sbb
pop
pop
cmpsb
jmp
js
movsb
pop
sarl
xor
int3
and
inc
fimull
adc
xorl
insb
subb
dec
xchg
pushf
and
add
frstor
iret
cmp
std
in
in
and
cld
xor
fcmove
cmpsb
ret
out
cltd
andb
popa
pop
shll
and
jb
xchg
cmp
push
and
sti
xor
sub
mov
les
enter
je
fldt
mov
fisubl
decl
clc
xchg
ret
mov
mov
sub
push
test
and
xorl
aaa
jns
call
xchg
sub
sarb
dec
sub
and
loop
dec
and
mov
sub
and
xchg
cwtl
je
arpl
inc
mov
pop
movsl
push
rorl
in
fnstenv
sbb
and
in
out
or
fs
std
add
int3
pop
fidivrl
hlt
mov
and
aad
pop
and
inc
arpl
fdivrs
in
loop
ds
shrb
cmp
pop
xchg
mov
movsb
pop
mov
inc
lods
and
dec
pop
xor
test
and
cwtl
pusha
mov
xor
cli
sub
or
or
imul
popf
popa
cs
or
and
add
test
cmp
push
inc
or
add
in
adc
and
cvtps2pi
and
mov
cs
push
imull
jmp
or
testb
filds
or
and
pop
ljmp
dec
jmp
push
fsubr
adc
daa
add
mov
fmull
inc
and
adcb
out
dec
and
pop
jge
fcomps
in
mov
xor
xchg
jnp
and
mov
dec
fisubl
lods
in
sbb
inc
aad
mov
sbb
and
cmp
and
mov
inc
movsb
mov
dec
shlb
pop
aaa
adc
cltd
test
lods
int3
or
bound
push
sbb
pop
out
push
aam
pushf
std
mov
jl
adc
in
xchg
daa
movsb
add
and
imul
ror
xchg
sub
lret
and
cmp
aam
inc
add
and
jno
lret
mov
cmp
gs
and
fistps
pop
push
lock
xchg
xor
add
and
mov
mov
negl
jb
xchg
jo
fisubrs
xor
inc
jge
push
mov
inc
xchg
stos
xchg
mov
cwtl
test
mov
jne
sti
ds
repnz
and
addr16
mov
mov
mov
frstor
and
dec
rclb
shlb
adc
hlt
jg
xchg
push
mov
mov
loopne
cmp
cld
je
andl
and
and
and
outsb
ret
loope
inc
or
mov
add
pop
call
adc
sub
out
and
popf
sahf
clc
xor
or
aas
repz
pop
mov
jge
mov
push
out
popa
int
xchg
hlt
sub
inc
pusha
and
jb
inc
xchg
notb
xor
cmc
inc
leave
add
xorb
lods
lcall
inc
xchg
xchg
mov
pop
pop
lcall
pop
lahf
sbb
mov
lahf
mov
adc
mov
sti
mov
je
sub
mov
stc
sbb
es
xor
or
mov
outsl
jae
pop
lods
add
push
pop
dec
mov
mov
pushf
mov
xlat
adc
inc
jno
mov
lcall
jecxz
mov
and
repnz
push
cwtl
movsb
mov
in
mov
les
ret
adc
add
enter
rolb
mov
popa
ja
pop
xchg
mov
out
xchg
sub
mov
pop
mov
pop
dec
lods
sub
insb
jmp
les
and
notb
pop
popf
and
ret
push
push
add
das
push
outsb
imul
pop
sbb
aaa
leave
dec
add
and
imul
xchg
test
lods
or
fmul
mov
mov
adc
mov
mov
mov
jno
sbb
mov
inc
ljmp
loope
mov
out
mov
js
or
out
mov
jns
or
and
aaa
and
hlt
dec
js
fimull
enter
cmp
mov
pop
pop
inc
and
mov
dec
mov
mov
mov
idiv
imul
or
xor
sub
in
lcall
daa
orl
and
inc
cld
and
jmp
enter
stc
outsb
les
xor
sub
pop
xchg
sub
es
xchg
fidivrs
imul
jae
imul
jae
icebp
jno
xor
add
cmp
dec
mov
arpl
lcall
loop
xor
int
sarb
iret
xor
sbb
aas
int
jle
enter
sbb
and
loopne
pop
xor
out
inc
repz
adc
lret
dec
imul
jp
xchg
push
fnsave
mov
adc
mov
xor
xchg
cmpsb
inc
mov
mov
mov
popa
ret
push
lods
cmp
jmp
hlt
jge
mov
mov
js
pushf
cld
js
in
mov
or
push
cld
fldl
addb
mov
ret
test
adc
inc
outsb
xor
negl
mov
fstpl
rcrb
popa
xor
inc
icebp
xor
inc
sbb
bnd
jge
and
shl
mov
adc
xor
inc
mov
cmpl
ja
mov
adc
js
mov
push
mov
sub
jmp
sub
out
xchg
pop
imul
fistpll
pcmpgtb
mov
sub
inc
jmp
pop
mov
daa
jl
inc
xor
mov
cs
xchg
push
xor
scas
lods
pop
dec
push
dec
adc
es
cmp
push
mov
ss
mov
sub
cmpsb
loope
inc
dec
pop
sub
jno
loope
inc
in
pop
sbb
cmc
cmpsl
outsb
sahf
and
dec
push
jbe
add
fldcw
lods
or
sub
and
sbb
mov
jge
pushf
loope
jne
sub
sbb
fstpt
xor
adc
inc
xor
dec
sbb
mov
test
insb
cwtl
mov
inc
xchg
sbb
push
rcrl
pop
ror
je
or
mov
lahf
imul
xor
cli
push
ss
in
push
mov
mov
xor
ljmp
pop
and
cld
jo
cmc
sbb
fucom
mov
daa
mov
or
inc
push
sub
jge
je
sbb
or
add
in
aas
dec
call
add
sub
xchg
stc
cmp
pop
jnp
mov
adc
mov
inc
movsl
mov
out
outsl
mov
bound
push
add
lahf
xor
sbb
inc
dec
mulb
add
or
or
xor
test
mov
push
pop
fdivs
call
pop
sbb
ja
sbb
and
cld
xchg
lret
pop
adc
and
aas
or
cmp
adc
xor
sahf
xchg
pop
fidivrl
sahf
adc
jnp
aad
shl
stc
iret
xchg
divb
insb
fbstp
inc
inc
xchg
and
insl
cmp
sbb
and
add
out
iret
mov
xchg
xchg
cli
dec
add
les
jp
inc
je
dec
cwtl
xchg
jbe
jne
add
fld
xchg
rorl
dec
les
test
enter
adc
add
push
jb
popf
daa
push
xchg
shll
mov
inc
mov
mov
out
les
push
add
rorl
icebp
repz
cmp
mov
aad
xor
fsubp
je
and
or
and
enter
dec
es
mov
adc
jecxz
adc
and
pop
jbe
or
xchg
pop
dec
xor
iret
stos
push
bound
and
pop
ljmp
cmp
adc
popf
addb
popa
jp
lcall
mov
outsl
mov
flds
in
dec
aaa
stos
popf
inc
xchg
inc
adc
and
shlb
filds
in
sub
imul
push
inc
and
mov
mov
push
or
jno
in
and
out
int3
outsl
inc
les
mov
mov
adc
clc
das
or
mov
sbb
add
mov
jo
mov
and
mov
ffree
push
fwait
les
mov
mov
lret
inc
pop
out
add
sbb
in
data16
les
add
cs
xchg
push
les
pop
dec
imul
push
inc
enter
movsl
ja
add
jge
je
and
add
or
loopne
inc
dec
popf
push
popa
mov
enter
in
les
aad
sbb
mov
lcall
sbb
jbe
jecxz
jb
cltd
cltd
jbe
adc
rcrb
xchg
inc
mov
push
pop
xchg
or
outsl
jg
jecxz
int3
icebp
push
adc
add
daa
xor
pop
addr16
insl
ret
mov
add
cli
add
pop
prefetch
sbb
and
enter
mov
in
sub
xor
xor
add
shl
xchg
mov
xor
add
adc
pop
les
cmp
aam
and
cmp
fs
daa
and
dec
popf
inc
jp
jae
add
and
cwtl
fcompl
orl
lods
xchg
and
jle
dec
pop
inc
sahf
pop
clc
in
inc
and
cmp
arpl
nop
movsl
jb
inc
sub
std
and
stos
jo
fiadds
fadds
pop
and
sub
gs
les
and
mov
lds
xorl
xchg
and
pop
pop
push
jl
int3
lahf
cmp
inc
and
and
mov
scas
inc
test
adc
jne
sbb
xchg
and
lret
mov
in
dec
aad
test
and
mov
sbb
mov
repz
mov
and
rcr
xorl
mov
and
shlb
pop
daa
fildl
inc
and
mov
add
test
fldcw
fsubrs
iret
sub
popf
lods
rcrl
mov
lahf
mov
movsb
in
sbb
cmp
pop
pop
dec
push
mov
xchg
pushf
mov
mulb
imul
sub
dec
adc
add
jl
mov
mov
mov
and
in
mov
push
int3
outsl
or
dec
bound
or
and
shlb
roll
lds
push
pop
and
adc
cmp
push
xor
mov
hlt
xchg
xchg
and
loope
into
and
push
dec
addr16
mov
mov
hlt
push
cmp
test
call
ss
fildll
in
inc
inc
add
or
ficoms
jp
jecxz
push
cmc
and
sti
pushl
jne
pop
and
loope
cmp
jp
sbb
scas
or
jle,pt
inc
cmp
das
lret
fisubs
insl
or
push
scas
test
push
sub
add
ror
sarl
sbbl
or
movsl
and
add
and
xor
sbbl
and
mov
xchg
adc
cli
push
and
lods
out
push
hlt
or
shrl
push
push
insb
push
and
dec
jnp
and
nop
divl
inc
and
shlb
in
add
adc
and
es
in
out
mov
or
mov
rclb
in
pop
std
xchg
sub
mov
sub
out
push
cmp
jmp
pop
mov
mov
push
sub
mov
and
jmp
shlb
sbb
in
cmp
loope
and
gs
xchg
pop
sarl
fwait
adc
enter
cmp
push
mov
fs
push
stos
cs
push
pushf
sub
in
or
and
pop
xlat
jne
int3
xchg
add
add
sub
clc
mov
mov
sbb
daa
imul
jl
enter
ds
jb
jnp
cwtl
ss
and
icebp
fsubrs
les
iret
je
fsubl
test
rcrl
pop
xor
aas
and
incl
arpl
jecxz
fstl
mov
stc
mov
mov
add
jnp
pop
fistps
sbb
aam
and
andb
sub
xor
inc
jl
loopne
out
mov
push
pop
cmp
and
cmp
pop
repz
and
sub
push
sub
cwtl
mov
sub
sahf
pop
mov
sub
push
pusha
adc
aaa
js
mov
cmc
mov
rorl
in
and
push
dec
rep
hlt
or
push
mov
rorb
into
lods
xor
push
daa
loop
hlt
sbb
push
pop
rcrl
pushf
push
xlat
lcall
jae
imul
and
gs
jmp
mov
push
cmpsb
shlb
cld
jecxz
enter
mov
lds
sub
or
sbb
mov
and
popa
jle
xor
std
push
lock
call
test
sub
cld
xor
hlt
pop
xor
test
imul
adc
pushf
fwait
mov
mov
aad
mov
in
xchg
mov
mov
mov
roll
addb
lods
xor
call
int
negl
push
dec
sub
pop
enter
mov
xor
sub
mov
jno
enter
sbb
mov
cwtl
pop
xor
or
mov
sti
shlb
dec
push
and
sub
or
cwtl
mov
push
lahf
add
icebp
add
mov
pop
lds
pop
xchg
sarb
stos
xorb
pop
dec
mov
pusha
daa
stos
inc
js
insb
add
sbb
cmpl
pop
in
fstps
mov
or
add
adc
adc
icebp
test
pop
mov
sahf
inc
and
loop
jmp
outsb
xchg
ret
lea
jbe
nop
ja
popf
add
jno
xlat
jge
dec
leave
sbb
iret
sub
and
repz
jb
xlat
and
fcmovne
mov
pop
scas
mov
and
mov
sbb
dec
lret
int
in
lock
cmp
mov
push
xchg
inc
enter
inc
inc
lock
negb
cmp
adc
enter
xchg
call
xchg
fs
cmp
sbb
xor
stos
lds
jno
pop
mov
cmp
push
sahf
bound
mov
xor
adc
pop
enter
or
inc
sti
sub
lock
or
icebp
adc
inc
adc
mov
jno
shrb
aam
jnp
push
test
and
les
xor
aas
and
adc
test
sbb
lcall
lcall
pop
fucomp
push
mov
leave
jge
and
test
aad
aad
sarb
imul
pushf
push
mov
aam
xor
aam
mov
pop
pop
loop
jb
psubusb
and
xchg
xchg
jl
xor
push
int3
and
add
cmpsb
mov
arpl
inc
mov
dec
rol
enter
jge
mov
fbld
clc
mov
mov
mov
adc
jp
insl
popa
loopne
lret
loopne
mov
xlat
pop
sub
pop
cwtl
inc
and
mov
mov
push
push
les
ud1
xor
xor
or
imul
mov
mov
jmp
or
pop
fs
aad
xchg
push
test
imul
mov
xchg
rorb
aaa
add
les
xchg
ret
mov
sub
xchg
xor
aad
mulb
pop
adc
pop
sub
xor
outsl
fwait
inc
mov
les
pop
adcb
lock
jb
loop
iret
out
iret
push
fstps
cmp
js
stos
pop
movsb
imul
jnp
mov
add
imul
jno
sub
lock
fldt
ret
out
pop
inc
faddp
pop
xor
and
xlat
mov
bound
pop
xchg
aad
mov
sub
in
int3
xchg
stos
dec
push
mov
repnz
bound
and
push
ret
rcll
fbld
into
bswap
icebp
shll
jp
hlt
test
pop
sub
sub
jecxz
mov
mov
dec
mov
mov
xor
frstor
loopne
sti
out
data16
insl
push
fucomi
mov
mov
loope
mov
adc
dec
or
mov
dec
mov
xor
mov
out
push
mov
mov
int3
pop
clc
jecxz
xchg
xchg
sub
or
mov
mov
mov
stos
sbb
pop
into
cltd
mov
xor
dec
test
push
dec
aad
testb
or
adc
inc
pop
leave
adc
xchg
ljmp
mov
lds
push
sub
and
xor
cmpl
adc
inc
aaa
popa
push
jge
pop
add
jbe
or
mov
pop
sahf
cwtl
mov
lahf
sahf
insl
stos
dec
bound
jb
and
mov
dec
rcl
mov
fs
ret
cs
inc
sbb
push
iret
push
mov
ret
sbb
das
in
sbb
pushf
inc
cmp
imul
or
fs
stos
outsb
and
adc
jb
sub
shlb
and
mov
inc
inc
enter
pushl
mov
testl
add
stos
arpl
lret
xchg
xchg
sbb
pop
mov
dec
sahf
pop
xcrypt-cbc
cmpsl
xchg
xchg
jg
subl
enter
dec
mov
das
les
cmp
daa
inc
add
sub
jp
mov
cmp
les
loope
mov
inc
loope
dec
add
cmpsb
test
lock
int
add
push
pop
pop
fsubs
jp
inc
and
mov
add
jg
addr16
cld
sbb
jns
inc
or
ret
dec
movsl
or
and
iret
dec
loopne
or
pop
outsb
xor
push
insb
adc
mov
hlt
aaa
or
jecxz
jge
arpl
add
pop
push
xchg
mov
imulb
dec
je
mov
pop
mov
inc
test
les
inc
jbe
shr
mov
xchg
test
clc
and
and
imul
push
ficomps
jge
xchg
gs
sub
mov
clc
pusha
sbbb
insb
loop
xchg
inc
out
call
je
jecxz
inc
sti
shlb
mov
cld
adc
inc
test
insb
mull
ffreep
mov
rcll
popf
or
jnp
cmp
lcall
add
cmpsb
jmp
adc
add
aad
and
enter
adc
data16
mov
fwait
xchg
mov
mov
sbb
lret
xor
inc
inc
cmp
cmp
fs
cwtl
test
mov
adc
jmp
xor
and
fisubrs
mov
pop
xchg
dec
mov
ss
push
adc
adc
call
lock
sub
je
enter
sub
stc
pop
xlat
jp
lods
arpl
inc
sub
mov
bound
jmp
mov
mov
inc
js
sbb
sub
or
sub
mov
fdivrs
cltd
js
das
xor
mov
jb
mov
loop
mov
rclb
pushf
xor
xchg
cmp
xor
aam
jg
jae
or
scas
or
jbe
scas
lods
out
int3
mulb
scas
mov
repz
cmpb
inc
mov
sub
or
xchg
pop
push
leave
sahf
and
movsl
xor
lret
mov
mov
int
outsl
arpl
ret
pop
addr16
xor
cmpsl
inc
mov
pop
ret
mov
mov
pop
xor
or
enter
sti
les
jmp
insl
sbb
and
es
roll
repnz
and
pop
mov
inc
data16
sub
popa
dec
push
jecxz
fmuls
shlb
les
mov
xchg
lret
xor
sqrtps
test
xchg
and
or
cmpsl
out
mov
add
or
mov
xchg
lea
outsl
pop
shll
cmp
mov
cmp
int3
jg
sub
jb
cwtl
bswap
fsubl
jg
add
dec
jnp
push
inc
mov
loope
sub
or
dec
popf
xchg
jo
lock
push
push
xor
mov
lods
fisubl
add
insl
xchg
stos
imul
jmp
inc
pop
call
jbe
in
xchg
insl
andps
xchg
test
lahf
les
and
sbb
xchg
mov
xor
leave
bound
mulb
sahf
sbb
adc
mov
nop
push
and
lock
clc
lcall
ror
adc
push
sub
sahf
stos
pop
movsl
push
les
mov
gs
xchg
or
xlat
loop
mov
jns
push
enter
add
rclb
bound
add
xor
shll
xchg
or
mov
enter
les
sub
adc
xor
sti
andl
iret
sti
jnp
fistpl
inc
repz
mov
pop
mov
out
mov
popa
add
xor
ja
ret
mov
dec
sub
push
ja
fucomp
rorl
lret
xlat
mov
fwait
ret
pop
push
js
imul
aas
ss
jbe
or
pop
push
mov
dec
sbb
into
xor
mov
pop
dec
stc
pop
inc
push
mov
stos
cmpsb
mov
dec
mov
mov
daa
arpl
mul
fidivrl
outsb
jo
mov
jno
jbe
clc
stc
cmp
outsb
adc
xor
mov
pcmpgtb
or
popf
enter
push
popa
lock
cmp
addr16
jae
dec
mov
pop
xchg
add
dec
enter
xchg
mov
dec
stc
and
cmpsl
sbb
outsl
or
in
xchg
cwtl
in
jno
xorl
jle
and
xchg
mov
addb
inc
xchg
push
popa
stos
mov
jnp
fbld
mov
add
sbb
push
or
add
out
insl
add
cmpl
fdivp
add
loope
pop
or
aam
dec
cmp
iret
out
mov
lds
aas
icebp
ret
bnd
push
push
nop
out
mov
mov
call
cmp
cmp
fcoms
lcall
lret
adc
xchg
add
es
frstor
rorl
rol
rorb
scas
pop
push
arpl
mov
add
out
ficompl
test
xlat
sub
out
in
fsts
das
inc
mov
rorb
test
cmpsb
xlat
fpatan
out
inc
lcall
xor
lahf
addr16
pushl
iret
or
test
cli
aad
mov
pop
pop
scas
jp
outsb
dec
subb
in
mov
pop
add
in
add
les
stos
aas
sbb
and
enter
mov
add
ds
push
stos
xchg
sub
cmpsl
mov
push
dec
and
mov
add
aaa
les
pop
mov
nop
jmp
adc
mov
xchg
out
inc
loope
mov
and
mov
inc
mov
neg
je
sub
sbb
into
cmp
daa
jnp
and
push
jmp
idiv
adc
imul
in
gs
and
add
push
dec
imul
addr16
rcrb
jne
enter
sub
and
outsl
shlb
mov
gs
lcall
jns
andl
inc
les
and
ffreep
insb
insl
in
adc
and
fst
or
push
inc
jmp
sub
mov
scas
lret
dec
out
cmp
inc
sbb
outsb
xor
daa
xor
jnp
ja
lods
pinsrw
and
insl
aaa
mov
and
lahf
iret
dec
dec
adc
arpl
mov
sbb
std
cmp
insl
aad
jp
mov
cmp
int3
movsb
dec
lret
cmpsb
addb
and
mov
adc
pop
adc
testb
ret
loope
xor
xchg
pop
sub
adc
xchg
sub
mov
sarl
insl
sub
pop
int
jge
inc
inc
xchg
lret
sbb
mov
jo
xor
xor
repz
adc
mov
mov
sti
mov
filds
add
xchg
mov
lds
push
ss
les
imul
repnz
jge
xchg
xchg
or
movsb
sub
pop
jp
imul
inc
or
aad
mov
js
adc
mov
and
dec
and
xor
add
or
push
cmp
pop
mov
push
xchg
enter
popl
pusha
or
xor
pop
sahf
mov
mov
lea
jecxz
dec
jl
jle
enter
or
call
ret
jns
les
out
push
inc
jno
cmpsb
cmp
out
aas
dec
mov
or
js
jbe
mov
xchg
and
push
sbb
mov
enter
cltd
add
addl
pusha
inc
enter
data16
les
dec
sub
aas
mov
push
sub
pop
jmp
stos
leave
sub
enter
sbb
xchg
fdivs
adc
adcl
and
cltd
insb
loopne,pn
int3
leave
sbb
xchg
cli
in
xchg
divb
sub
push
push
xchg
mov
jecxz
lahf
imul
pop
js
mov
sbb
lret
stos
popf
sub
mov
push
test
xchg
jp
into
dec
daa
in
mov
xor
addr16
aas
push
into
dec
pop
jno
mov
mov
in
mov
push
sub
imul
lods
jl
notl
xor
call
clc
cs
loope
stos
push
push
ret
jb
fwait
icebp
pop
jp
icebp
repz
inc
cmpsl
loop
jecxz
andb
and
orb
mov
cmpsl
push
mov
test
and
pop
into
pop
jmp
sbb
xor
aam
into
cli
mov
mov
cwtl
fimuls
xchg
jbe
mov
xlat
psllq
pop
jns
xor
test
mov
and
pop
pusha
push
inc
adc
test
cmpsl
cltd
aad
int
adc
jg
inc
xlat
pop
jmp
and
jmp
inc
insl
mov
fldcw
sub
mov
rol
mov
jg
stos
loop
cmc
stc
inc
jnp
adc
bound
sub
cli
insb
xchg
push
aas
ja
arpl
insb
fs
mov
adc
or
leave
mov
cmp
jmp
out
rorb
ffree
fldcw
sbb
and
push
fdivl
aas
pop
adc
enter
in
dec
pop
ret
sub
adc
aaa
loope
rorl
and
mov
xchg
js
test
cmpsb
push
mov
sub
pop
ss
sar
or
mov
mov
stos
outsl
fldlg2
in
mov
mov
pop
dec
xor
shl
aam
das
loope
enter
mov
insl
jne
sbb
sub
pushf
les
cltd
es
aad
test
stos
pop
xor
loope
aaa
jo
jns
mov
sub
add
dec
sub
cmp
mov
jnp
mov
mov
add
cli
xchg
push
and
pusha
dec
pop
and
sub
lahf
cmp
fdivrs
lahf
ljmp
ret
jns
xchg
pusha
xchg
stos
cmovge
xor
mov
pop
and
lahf
push
xor
inc
lret
jle
arpl
stc
enter
rorl
les
dec
mov
aaa
dec
setae
aas
popa
outsb
sbb
lahf
push
jp
dec
inc
addl
scas
sbb
mov
stos
push
jne
pop
je
shr
xor
packssdw
lret
mov
pop
mov
or
dec
or
insb
dec
cmpsl
test
inc
dec
test
inc
xor
xchg
jnp
pushf
js
mov
daa
inc
jg
mov
xlat
xor
dec
in
mov
lcall
popf
push
adc
dec
add
pop
inc
inc
add
leave
in
std
sub
mov
sub
add
in
sub
add
gs
inc
mov
insl
in
xchg
out
jns
or
cmp
outsb
dec
mov
int
fisttpll
pop
mov
shll
dec
inc
jno
jle
outsl
adcb
js
push
dec
jbe
cmp
or
jl
test
sub
loop
mov
sti
inc
lock
add
test
mov
repz
and
adc
add
push
pop
xlat
jg
inc
sub
fisttps
cmp
xor
arpl
loope
cmp
sbb
mov
fldt
sbb
aam
or
jns
or
mov
dec
lahf
pop
decb
dec
jnp
mov
mov
rorl
shlb
mov
mov
jbe
xchg
in
test
xchg
inc
test
jge
pop
inc
imul
pusha
xor
cmp
inc
out
xchg
sbb
inc
jnp
mov
mov
add
adc
popa
mov
mov
dec
push
imul
push
cli
sbb
ret
dec
fisttpll
jb
sub
pop
mov
es
test
jo
shrl
push
inc
fstpt
or
mov
mov
sti
popa
add
imul
mov
and
call
imul
cld
fdivl
mov
inc
test
shll
cmovle
popa
imul
pop
dec
hlt
out
and
cmc
ror
aas
int3
les
cmc
mov
cmovle
sbb
mov
jno
imul
andb
adc
stos
dec
pusha
outsl
arpl
int3
mov
jbe
mov
jle
loopne
lret
push
push
adc
enter
xor
in
jmp
inc
repnz
dec
idivl
rdtsc
push
push
fdivl
andb
push
inc
xchg
scas
add
sub
mov
lods
or
int
xor
sbb
mov
cwtl
or
fst
mov
jmp
fstl
sarl
negb
inc
mov
movnti
pop
mov
enter
mov
loop
call
out
dec
jb
adc
cmpsb
fxch
fsts
xchg
sub
xor
rolb
sti
sub
inc
push
xchg
push
mov
pop
outsb
add
imul
add
jge
jne
das
pop
data16
mov
imul
inc
hlt
jle
les
out
cmp
bound
lcall
inc
cmc
push
por
dec
pop
pop
cmp
psubb
scas
stos
loope
jl
inc
jns
mov
in
rcrb
stos
push
inc
jge
cmp
dec
xchg
outsb
xlat
outsl
push
orl
adc
movb
dec
mov
jmp
int
icebp
ret
fbld
in
pop
pop
inc
cmpsl
and
xchg
mov
ret
lcall
xchg
in
mov
outsl
inc
sub
pop
pop
add
mov
insb
xor
add
lahf
loope
orl
pop
or
arpl
and
aaa
sbb
adcl
sub
sbb
sub
mov
dec
dec
jp
outsb
mov
sub
fwait
stos
mov
hlt
xor
adc
sub
mov
test
insb
sbb
or
popa
xor
orb
movl
ret
sub
add
fimull
sub
pop
and
push
push
adc
les
call
push
sbb
mov
fsubl
les
repz
fs
pop
rcrl
lcall
in
imul
and
mov
dec
pop
pop
xchg
jmp
push
movb
lahf
push
mov
and
fdivs
push
dec
sub
hlt
cmc
ret
enter
sub
inc
mov
inc
mov
pop
mov
in
add
pop
inc
jp
outsb
loop
adc
pushf
ret
inc
cli
sbbl
dec
int3
push
xchg
push
cwtl
shlb
xor
mov
mov
lahf
mov
andb
and
push
and
ret
sub
sbb
dec
int
dec
outsl
pop
into
push
push
dec
pop
mov
push
push
sub
out
dec
lock
aaa
inc
loop
adc
xchg
jge
jl
and
add
xchg
leave
pop
loope
les
sbb
xor
fmuls
xchg
jbe
mov
hlt
imul
sti
in
in
fstpl
faddp
xor
jbe
or
mov
imul
cmpsl
lock
stos
sbb
bound
xor
pop
dec
and
fnsave
or
cmpsl
rorb
out
dec
add
movsl
push
arpl
lahf
cmpsl
inc
std
movsb
push
and
enter
mov
add
xchg
lods
inc
inc
jle
xorb
and
jmp
js
and
icebp
pop
inc
mov
pop
sub
clc
dec
push
lcall
mov
shl
daa
loope
enter
pop
xchg
add
out
push
int
push
vmovntps
imul
and
inc
xchg
pop
adc
sub
add
push
imul
jle
adc
mov
test
or
mov
adc
sub
push
inc
stos
or
and
dec
sti
xchg
jge
fdivrl
sub
push
mov
xchg
popf
ret
inc
stos
enter
andl
aas
adc
push
daa
inc
shlb
inc
into
add
jg
in
push
cli
or
incl
cmp
inc
push
enter
pop
dec
les
mov
adc
jnp
test
daa
xchg
hlt
repnz
faddl
push
sub
and
cmp
inc
mov
sahf
mov
push
repz
sti
or
je
aaa
sbb
jecxz
lds
and
or
and
dec
les
in
push
jbe
sarb
addr16
std
mov
and
sbb
mov
out
inc
mov
fimuls
ret
jae
pop
adc
pop
mov
in
test
icebp
mov
icebp
mov
js
pop
stos
arpl
out
sbb
sahf
vprotw
movsb
fbld
loope
test
cwtl
ljmp
mov
aam
repz
xchg
adc
clc
push
mov
in
inc
jns
and
xlat
insl
mov
mov
push
add
js
inc
xor
pop
stos
iret
xor
xor
xor
fldt
xor
push
addb
pushf
jb
enter
ljmp
xor
aas
call
pop
enter
in
pushf
and
pop
mov
les
sbb
fcmove
dec
fs
aam
fwait
in
imul
xor
mov
in
mov
pop
adc
mov
jmp
add
sub
lods
lahf
push
inc
sub
mov
shld
lods
mov
ds
pop
inc
mov
xchg
push
cmp
pop
pop
pop
call
mov
mov
in
out
dec
sarl
mul
test
xor
push
les
icebp
cmpsb
or
pusha
loope
xor
jns
push
jge
mov
pop
rol
ret
ss
jbe
pushf
icebp
jmp
imul
push
jecxz
movsb
pop
xor
scas
and
xchg
ljmp
push
arpl
sbb
adc
xor
jae
xor
sahf
mov
imul
dec
test
fcompl
cmpsb
icebp
add
out
and
popa
sub
adc
aas
aaa
dec
imul
lret
jmp
loope
out
xlat
lcall
cmp
inc
or
push
mov
adc
mov
and
movsb
mov
mov
cmp
push
or
ja
inc
mov
sbb
test
orb
aaa
pop
sub
jg
xchg
loope
ret
inc
stc
das
les
mov
inc
arpl
push
jl
shll
shrb
and
and
rorl
inc
dec
sub
mov
bound
ret
gs
dec
sahf
loope
lea
cmpl
ret
sbb
mov
mov
mov
pop
aad
lahf
clc
movsl
mov
rclb
loopne
fsubrl
daa
mov
sub
adc
push
out
shl
in
andl
mov
cmc
stos
and
mov
cld
jle
in
mov
mov
sbb
jge
sub
push
push
dec
jmp
repnz
adc
pushl
outsb
insl
jge
jne
rorl
ja
sub
and
or
jmp
or
lret
lret
jae
mov
into
xlat
les
loope
xor
nop
inc
test
insl
int3
sar
push
xchg
jo
dec
adc
pop
and
negb
shll
cmpsl
aas
sbbl
mov
lcall
add
mov
pop
dec
jp
jg
sbb
pop
andb
push
adc
pop
pushf
sahf
jle
dec
insb
and
les
pop
and
out
lds
sahf
pop
lods
into
sub
negb
mov
jbe
incb
rolb
negl
pop
sbb
fisttpll
mov
ret
cmp
cli
jl
sahf
add
push
dec
mov
imul
test
inc
rcll
in
mov
pop
pop
sub
les
mov
sub
andl
lcall
push
mov
pop
fsubs
dec
fildll
out
jge
daa
out
xchg
bound
notb
add
mov
sub
rorb
call
cwtl
stos
jae
push
sub
icebp
cmp
subb
inc
jb
add
loopne
test
out
dec
aas
in
push
cmpsb
push
push
inc
mov
inc
jo
int3
cmpsb
adc
mov
adc
lret
in
lcall
stos
jle
icebp
sbb
jp
int
pop
mov
incb
cmpsl
in
or
sbb
and
mov
les
mov
loope
in
jno
pop
cmp
mov
fnsave
push
inc
lcall
and
aad
add
and
dec
adc
cmpsb
enter
loope
xor
xchg
xor
cs
enter
sbb
daa
lock
les
mov
icebp
jmp
mov
in
dec
sub
xor
sub
sub
gs
or
mov
test
xor
fistpll
imul
jle
lock
mov
jle
dec
push
imul
mov
xchg
pop
inc
add
jl
push
push
pop
andl
jl
scas
leave
cmp
jg
insl
mov
xchg
js
jle
inc
sti
lcall
aas
sub
dec
fldenv
mov
mov
cmp
outsb
outsb
mov
mov
sub
cli
clc
jecxz
les
xchg
xor
adc
sbb
cmp
fdivs
mov
daa
bound
fstps
mov
sbb
lahf
cmp
mov
cmp
sahf
push
lea
jns
mov
ret
out
mov
aas
jae
jb
mov
xor
sub
aaa
pop
aas
mov
repnz
adc
adc
dec
std
ret
or
frstor
inc
mov
adc
mov
xlat
inc
imul
cmp
fbld
sbb
das
push
and
pop
jmp
xor
lcall
xchg
sub
sub
and
shlb
shl
push
nop
jb
ret
leave
jnp
adc
jle
adc
mov
pop
call
and
inc
dec
les
inc
sahf
cwtl
dec
int
lcall
clc
out
mov
lret
out
pop
repz
daa
repnz
imul
insl
mov
insl
fnstenv
call
push
pop
lret
push
cs
mov
insb
add
lret
inc
fldcw
xchg
int3
inc
outsb
enter
add
pop
imul
push
popf
orl
lret
ret
push
inc
call
mov
lahf
dec
lahf
stos
xchg
sbb
xor
lock
insb
fdivr
mov
xchg
dec
and
jbe
nop
mov
sub
push
mov
call
out
sub
out
mov
or
mov
out
js
sub
arpl
and
icebp
aaa
sti
rorl
adc
lcall
aas
adc
xor
rcr
lods
lods
mov
mov
xchg
call
inc
aad
sbb
mov
sbb
mov
bsf
sbb
stos
out
cwtl
in
ja
aaa
jb
jl
xchg
push
pop
shl
mov
and
nop
std
roll
mov
add
jecxz
add
inc
push
gs
fildl
push
sbb
fs
adc
jnp
mov
inc
push
mov
or
ljmp
push
mov
xchg
push
sub
jmp
dec
cmpl
sbb
outsb
jle
shr
mov
mov
jle
jne
mov
test
les
mov
es
test
rcr
adcl
arpl
mov
or
sub
cmp
inc
stc
cmp
loop
orb
movsl
and
push
xorl
and
punpcklwd
fisubs
jb
mov
cmpsl
sub
mov
es
es
arpl
cmp
mov
mov
cli
in
sbb
push
pop
enter
ret
jb
imull
arpl
pop
jns
test
fimuls
mov
jno
scas
sarb
mov
add
andl
arpl
cwtl
inc
shll
outsl
push
jle
dec
add
cmp
pop
in
sbb
sub
push
popf
push
loope
ret
adc
cmp
movsb
divb
push
jg
lea
les
cmp
jl
jae
mov
ret
subl
shll
xchg
pop
loop
jg
jle
or
lret
ds
xchg
sub
add
xor
mov
add
push
enter
pop
imul
and
dec
mov
sbb
test
loop
mov
imul
and
nop
xchg
or
les
mov
jns
add
jg
or
or
and
pop
data16
lds
cmp
dec
jmp
sbb
push
sti
or
int
inc
jl
sub
fdivrl
push
add
cwtl
mov
push
lcall
push
mov
and
in
or
pop
cmp
add
cmp
leave
or
int3
out
lea
xor
jae
or
xor
hlt
popf
aam
daa
mov
mov
daa
cltd
dec
xchg
push
xor
dec
sahf
and
cmp
pop
sbb
or
adc
lret
lret
xchg
cmp
stos
jge
push
xor
mov
dec
inc
lock
push
xchg
in
test
notb
clc
mov
sub
icebp
daa
inc
enter
sub
lds
scas
lock
inc
scas
jns
push
sbb
clc
sub
stos
nop
adc
lods
daa
xor
mov
add
inc
add
cmp
imul
daa
pop
fistps
out
mov
jns
adc
cmp
and
mov
insl
rcr
pop
aad
dec
dec
sub
gs
stos
xor
jnp
add
sub
cmp
and
les
outsl
xchg
dec
data16
inc
sbb
xchg
mov
std
lods
into
mov
cltd
jno
hlt
jl
jbe
mov
popa
mov
fsubl
ja
shlb
ljmp
cmp
add
frstor
movsl
inc
and
mov
les
xchg
mov
mov
iret
jmp
mov
jno
inc
pop
xor
mov
push
push
arpl
and
test
mov
arpl
pop
imul
or
fsubl
push
jp
mov
in
sub
push
in
push
pop
inc
jns
add
mov
and
or
fisubl
dec
ret
ds
xchg
or
add
push
add
xchg
push
ret
fwait
rcll
ret
inc
cmp
xchg
jno
add
leave
xor
aad
shrl
mov
jns
andb
mov
and
movsb
insb
outsb
cld
cmc
cli
rcll
pop
inc
or
inc
flds
sahf
jl
xchg
bndstx
es
xor
pop
lret
dec
in
sub
lods
pushf
popa
and
cmp
insl
push
outsb
enter
mov
aam
loop
ret
addr16
inc
out
lods
mov
lret
xor
hlt
xor
inc
or
xlat
ret
mov
or
shll
pusha
inc
call
fbld
or
lock
movsb
add
sbb
pop
and
and
dec
nop
frstor
stos
rcrb
inc
insl
xchg
xchg
insl
sub
outsb
push
leave
and
daa
gs
les
enter
movsl
xor
push
mov
leave
ret
mov
cld
jecxz
dec
xchg
dec
test
popa
divb
xchg
jb
adc
xor
ret
jl
mulb
out
imul
rcll
jno
imul
jbe
xchg
inc
add
dec
loop
negl
addl
push
aaa
rcr
outsl
in
les
fcomp
xor
pop
or
inc
pushf
ss
push
mov
fmuls
mov
lahf
add
push
or
mul
inc
adc
jge
cmc
mov
dec
or
inc
sub
xor
stc
inc
jmp
aam
lcall
adc
ret
push
repnz
and
jns
arpl
es
pop
push
add
adc
jmp
pusha
outsl
gs
add
mov
repz
imul
orb
insl
inc
push
daa
imulb
mov
push
inc
inc
dec
inc
out
jle
cmp
insb
ja
dec
popf
push
xchg
test
pop
leave
pop
and
sbb
insl
dec
iret
jno
dec
jl
shll
call
call
cmpl
leave
sbb
sahf
mov
and
adc
mov
inc
stos
sarl
inc
fsubrl
jno
mov
adc
dec
loope
fldcw
xorl
xchg
mov
mov
adc
insb
fcmovnb
mov
push
fsts
and
mov
aaa
stos
push
cli
push
mov
insb
xchg
in
mov
das
lret
es
mov
add
dec
mov
pop
pop
mov
xor
bound
mov
sbb
mov
js
cmp
pop
stos
jge
xor
test
movsb
fidivrl
ja
sbb
scas
push
test
roll
or
mov
aaa
sub
push
jle
int3
shll
sbb
dec
sti
rol
pop
inc
jb
inc
clc
testb
in
test
mov
xchg
pop
scas
mov
stos
mov
lock
mov
sub
sbb
test
hlt
mov
dec
xchg
push
popf
and
dec
mov
and
mov
jnp
and
std
jbe
sub
fmull
cwtl
leave
popa
xorl
loope
jnp
push
xor
xchg
adc
mov
lcall
fiaddl
pop
in
ljmp
mov
inc
dec
cmp
roll
les
or
and
sub
inc
pop
mov
es
mov
int
shll
sbb
push
sbb
and
and
mov
jne
popf
call
mov
jecxz
in
add
fsubl
orl
and
call
mov
aam
inc
loope
mov
in
nop
pop
jbe
xlat
and
and
out
pop
bound
or
nop
mov
in
mov
and
fwait
mov
ror
je
popa
pusha
xor
add
mov
push
cmp
pop
mov
push
add
and
mov
insl
nop
and
adc
or
and
lea
loopne
dec
push
and
outsl
mov
mov
popf
negb
call
jnp
sub
sahf
xlat
and
ss
fbld
push
daa
iret
mov
or
inc
sub
fsubrl
and
jl
xor
add
and
adc
imul
imul
mov
sahf
cli
adc
mov
inc
icebp
popf
ds
out
dec
xor
insb
aas
or
pop
cmp
fisubl
and
push
xchg
sbb
and
mov
jecxz
call
aad
mov
or
sub
rcrb
push
ljmp
push
cld
test
xor
or
dec
test
or
mov
push
insb
jns
and
or
xor
aam
lods
cmp
push
or
cmpsb
fildl
frstor
nop
mov
pusha
push
subl
adc
lds
jecxz
mov
mov
pop
stos
and
stos
mov
cmp
mov
je
fcmovnu
pop
inc
ret
xor
test
push
or
mov
mov
xor
hlt
push
adc
inc
daa
lret
leave
adc
and
fsts
and
xorb
sub
out
into
mov
outsl
lea
and
es
mov
or
repz
and
push
mov
xchg
xchg
mov
aas
pop
and
or
cmp
dec
inc
cli
cmpsl
xchg
pop
lcall
cmp
and
jo
or
hlt
movsl
and
js
pop
in
sub
push
and
jg
push
iret
jo
and
jle
dec
cmpsl
lret
arpl
mov
and
fsubrl
and
iret
movsb
pop
out
dec
fisubl
cs
push
fldenv
mov
and
mov
andl
xchg
sbb
inc
sub
or
fldl
mov
pop
dec
hlt
jo
inc
adc
lcall
and
add
pop
and
cltd
xchg
sub
pushf
cmpb
add
push
and
sbb
gs
and
lods
sub
and
mov
outsb
and
jmp
jle
out
int3
push
and
dec
clc
push
cmp
and
cmpsl
int
xor
jb
icebp
adc
in
and
jno
cmc
and
or
hlt
mov
ss
iret
and
and
clc
ret
arpl
test
mov
fistps
pop
and
xor
xchg
mov
and
and
mov
push
lret
jle
xchg
daa
mov
xor
sub
lret
bound
mov
fimuls
mov
sub
fwait
and
dec
int3
jmp
cltd
ficoms
test
dec
push
dec
add
shlb
and
cmpsl
pushf
ds
std
and
daa
rcll
and
cmc
xor
and
pushf
pusha
jns
and
lods
and
daa
pop
popa
sub
fwait
xchg
cmp
andb
fsts
and
out
fnsave
or
sti
fnstcw
das
push
lock
dec
add
ljmp
push
cmp
add
xchg
mov
popf
in
test
cmp
lcall
add
xchg
arpl
dec
push
movsb
lahf
pusha
cld
push
inc
and
ficomps
mov
cli
inc
scas
pop
jbe
insb
lds
test
jnp
and
mov
pop
pop
and
dec
es
and
out
int
xchg
xor
xchg
cmp
xchg
popf
sub
add
mov
repnz
pop
jnp
out
pop
jb
pushf
sub
jg
or
addl
pop
lock
xchg
push
shlb
mov
sbb
sarl
cmp
and
ja
add
les
add
mov
insb
xor
and
js
inc
adcb
and
lock
mov
stc
xor
adc
fcomps
cmpsb
jmp
repz
pop
lret
sub
mov
xor
dec
push
idiv
into
inc
xchg
sub
fucomi
push
push
lcall
add
inc
xchg
and
jle
sbb
std
cmp
push
jl
mov
lds
add
and
sbb
mov
xor
and
xchg
js
ds
sti
cmpsl
clc
shr
push
mov
mov
push
pop
and
insl
mov
jle
pushw
stos
out
cltd
sar
das
and
fsubs
sbb
out
rolb
imul
movsl
and
ja
fwait
insl
mov
fldenv
or
inc
push
lods
in
out
push
mov
xchg
inc
and
push
pushf
rcr
rol
and
dec
leave
nop
jge
sbb
lahf
pushf
jecxz
inc
mov
and
cwtl
xchg
sbb
sub
stos
and
adc
iret
sub
scas
and
pop
sub
push
les
and
shr
cmp
inc
jmp
sti
lds
jne
and
daa
xchg
pop
je
add
and
jbe
and
lcall
adcl
and
nop
mov
ret
js
cmp
pop
mov
and
jae
in
xor
pop
andl
outsl
mov
xchg
mov
es
cmp
mov
pop
mov
lds
add
and
xorb
and
iret
lods
inc
cmp
pop
rcrb
jge
call
sbb
mov
rcrb
hlt
xchg
mov
cmc
mov
and
and
pop
dec
getsec
and
xor
andl
addr16
outsb
jecxz
mov
pushf
movsb
inc
push
mov
test
add
xchg
inc
and
push
pushf
mov
jne
mov
fwait
rorb
fstpl
and
in
mov
push
in
cs
dec
popa
je
sub
push
mov
xor
cmpsb
daa
mov
xor
jecxz
jg
ja
ljmp
sub
hlt
lock
aad
jl
hlt
lds
jns
shr
cmpb
xlat
jns
lock
jge
fists
xchg
xor
pop
sbb
xchg
lahf
data16
aad
sbb
fnstsw
sbb
loopne
aad
repz
lods
inc
or
les
sbb
lock
inc
ret
inc
cmp
sbb
iret
inc
sbb
pop
mov
stc
mov
lcall
shlb
into
dec
add
lea
dec
or
fstpl
mov
add
repnz
sbb
sub
cmp
scas
or
mov
lret
push
xchg
xchg
les
jle
sarl
adc
data16
movl
int
or
mov
sbb
lcall
mov
aam
and
fst
pop
fs
int3
call
sti
pop
mov
mov
mov
clc
xor
adc
fcomi
ja
lahf
popa
and
adc
scas
sub
and
xchg
jp
call
lods
push
pop
lret
cwtl
jo
jp
mov
mov
mov
xor
sbb
xor
lock
xchg
xchg
add
add
mov
test
dec
cwtl
push
leave
sub
ret
add
aad
jg
jae
pop
jae
ret
aad
sbb
adc
dec
orb
outsl
inc
iret
sbb
mov
xor
popf
test
dec
adc
outsb
jmp
icebp
ret
fstl
fistl
dec
popf
test
test
mov
inc
and
cmova
aam
mov
arpl
fsubrs
scas
dec
stos
xchg
out
cmpsb
and
or
fnsave
lcall
push
push
ficompl
icebp
and
ret
repz
push
xlat
mov
mov
fsave
cmp
lret
dec
mov
xor
pop
pop
lret
cmp
fidivl
inc
ds
ja
pop
std
movsl
imul
adc
mov
stos
cltd
cmpsl
into
arpl
push
sbb
xchg
sbb
jb
dec
imul
xor
adc
decl
movzbl
insb
jno
pop
cmp
mov
cmc
fwait
jp
rorl
fstpt
xchg
call
enter
xor
pop
xchg
and
enter
ja
imul
xchg
or
pop
pop
test
les
push
cld
orl
xor
sbb
or
js
jnp
sbb
adc
rcrl
arpl
test
dec
leave
insb
andl
push
sub
push
stos
in
push
jno
adc
data16
rcrl
push
xor
rorb
inc
mulb
and
ficomps
test
insl
lahf
stc
inc
add
jle
jg
pop
roll
sbb
enter
fsubrl
inc
mov
push
dec
adc
mov
inc
cmovns
idivb
jns
js
les
subl
add
inc
dec
or
jno
mov
cwtl
popa
wbinvd
jbe
loope
outsl
mov
sbb
dec
rorb
mov
push
push
flds
icebp
cmc
xchg
mull
push
or
dec
nop
xor
push
cmp
and
outsl
mov
jnp
adc
jle
or
mov
cmpsb
xor
push
inc
pop
les
xchg
ret
shlb
mov
pop
les
cmc
dec
into
movsb
pop
add
cmpsl
lahf
push
xchg
bound
stos
xlat
jbe
cmp
xchg
inc
outsb
cltd
out
arpl
xchg
sbb
bound
inc
call
inc
dec
xor
enter
ret
es
dec
sbb
add
dec
arpl
push
xor
dec
inc
jg
xchg
push
xor
das
mov
jbe,pn
movsb
mov
sbb
repnz
insl
enter
popa
ljmp
inc
sbb
mov
out
repnz
inc
out
pop
jge
sbb
arpl
push
bound
add
push
lods
imul
test
pop
and
lcall
enter
test
fnstcw
xchg
inc
pop
jae
and
or
pop
shlb
xchg
ret
xchg
jno
imul
pop
mov
xchg
sub
cld
pop
or
sub
enter
ja
xchg
fsub
jp
xor
mov
cld
mov
ficoml
aaa
rcrb
mov
xlat
hlt
push
and
push
xor
sub
ljmp
push
insb
shrl
jnp
insb
adc
mov
js
xor
xor
sbb
mov
add
jg
inc
and
sahf
ja
xchg
jl
mov
in
aam
in
les
ja
testl
bound
add
test
stos
cmpl
cmp
insl
rorl
mov
add
mov
jecxz
sbb
dec
out
clc
mov
fildll
mov
mov
jmp
sbb
ret
xor
lcall
push
sbb
cmp
addl
fcomip
stc
es
mov
enter
cmp
es
rclb
iret
rcll
mov
and
jecxz
add
inc
and
dec
js
jg
inc
and
jg
push
xchg
pop
enter
add
pop
push
data16
aad
shlb
les
pop
mov
pushf
push
pop
push
jmp
lahf
push
mov
roll
and
lahf
cld
push
add
popa
mov
dec
dec
add
adc
std
fsubrl
push
sbb
or
or
dec
sbb
insl
mov
mov
xor
sub
iret
or
in
fistpl
aam
outsl
sbb
add
arpl
and
les
outsb
les
and
sarb
test
add
push
add
sub
or
ljmp
jecxz
jb
imul
push
in
dec
aam
ss
in
and
int3
divl
incl
push
push
xlat
lock
mov
and
mov
cmpl
mov
jg
push
les
ljmp
test
test
cli
sbb
adc
pop
dec
mov
cmpsb
jne
jge
pushf
xchg
sbb
sti
sbb
adc
xor
loop
loope
push
imul
cli
cmp
pop
pop
sbb
inc
jns
xchg
loopne
add
jnp
inc
mov
push
out
addl
cmp
js
sbb
aas
enter
es
arpl
dec
rcrb
mov
movsl
repz
sti
decb
call
mov
pop
fistps
add
rcll
mov
xchg
pop
inc
fcomps
adc
ret
sbb
bound
sub
adc
divl
call
mov
and
lds
xchg
sub
popa
cmc
enter
mov
push
inc
push
iret
sbbl
int
outsb
and
add
push
mov
add
lods
or
dec
stos
jecxz
imul
enter
std
mov
inc
mov
xchg
xorl
rol
icebp
nop
jmp
pop
inc
daa
das
xor
mov
das
or
xchg
icebp
insb
sub
and
sbbl
add
mov
and
pop
push
mov
pop
and
negb
movsl
mov
les
testl
or
lds
cltd
adc
dec
and
cmp
mov
inc
ljmp
lea
mov
in
std
pushf
adc
shlb
cld
cli
push
mov
loopne
cmpsb
cmpsl
test
clc
and
and
mov
add
je
loope
push
push
xor
and
std
mov
jo
jmp
sub
pop
lahf
es
and
aad
cmp
and
add
and
dec
jb
sahf
and
dec
add
and
or
jo
pop
pop
and
cmp
fwait
lods
aad
bound
stc
ret
mov
shlb
and
or
outsl
and
jne
and
pop
lret
jns
push
push
and
jb
add
nop
outsl
sbb
imul
xchg
movsb
mov
mov
and
sub
adc
and
outsb
cmp
pop
and
adc
cmp
mov
xor
ret
mov
lods
jo
dec
sbb
xchg
mov
pusha
and
xchg
cmp
in
shlb
pop
imul
fisubrs
out
jle
sbb
test
fs
xchg
and
jno
pop
push
ja
and
test
adc
add
cmp
ds
fbld
add
sbb
mov
repz
fs
and
frndint
jo
call
mov
loopne
mov
pop
in
imul
imul
iret
and
dec
pop
jl
inc
jo
mov
jb
pop
es
cwtl
sbb
jg
adc
aas
inc
out
xor
stos
ja
and
in
sub
hlt
insl
sarb
and
xchg
mov
lret
mov
jnp
push
mov
cltd
adc
sub
sbb
test
bound
fwait
pop
and
mov
adc
pop
sbb
rcrl
jg
out
push
jge
adc
lea
mov
stc
pop
decl
mov
dec
cli
lods
inc
and
or
push
xchg
mov
xor
lock
and
fidivs
pop
or
xchg
jnp
pop
inc
jno
mov
loop
mov
movsl
dec
andb
rcll
mov
or
and
cmpsl
dec
sub
sub
jno
daa
or
dec
or
leave
adc
pop
mov
adc
btc
pusha
push
sub
pop
arpl
sbb
movb
xchg
js
xchg
mov
adc
imul
and
in
mov
mov
rclb
xchg
lahf
daa
lcall
lea
cltd
and
sbb
insl
aas
adc
add
and
gs
imul
jbe
add
cmp
stos
movsb
out
fcmovnbe
mov
or
cmp
imul
lret
and
cli
inc
and
cltd
shlb
wbinvd
mov
test
sub
jecxz
and
shlb
test
insl
and
out
bound
pop
mov
jnp
mov
and
jp
and
add
pop
mov
mov
sbb
aaa
sarl
mov
mov
mul
fists
mov
push
jp
shlb
in
mov
or
mov
repz
and
int3
mov
bsr
mov
add
cmp
mov
not
roll
iret
sub
xchg
int
cmp
out
push
sub
mov
mov
jl
int3
enter
push
popa
jge
jp
xchg
add
push
enter
mov
hlt
xor
mov
push
testl
xor
loope
jg
pop
shrb
mov
xchg
add
shll
cmpsb
iret
cmp
pop
cli
sub
shll
mov
cwtl
in
test
xchg
stos
lret
lock
push
pop
mov
scas
andl
jns
mov
add
dec
or
repz
add
xchg
sub
jle
std
fsubl
popa
aam
pushf
xor
loopne
mov
push
mov
dec
inc
pop
in
les
sahf
das
insb
sarl
inc
adc
pop
add
aaa
es
jns
arpl
pop
xor
test
mov
loop
adc
movsl
sub
dec
idiv
fs
mov
sub
dec
sbb
mov
lahf
popa
mov
cmpsl
inc
push
add
mov
xchg
pop
fwait
cmp
out
mov
cmp
xchg
lcall
enter
ret
xor
rcrl
jecxz
or
inc
shr
and
dec
loopne
adc
and
into
push
fsubrl
adc
dec
adc
movsl
xor
daa
xchg
push
bound
push
dec
andb
push
lcall
jae
insb
incb
enter
pop
push
push
inc
dec
aam
movsb
add
hlt
xor
lahf
std
mov
sub
lock
pushf
push
pop
sub
cmp
cld
mov
lret
mov
pop
pop
or
fwait
sti
test
jl
sub
add
pop
push
les
adc
addr16
mov
sahf
cltd
data16
lock
scas
lea
inc
dec
and
sub
inc
xor
or
xchg
cmp
dec
dec
push
aas
push
popf
push
jnp
shll
jns
fdivl
popf
nop
mov
or
push
dec
jno
iret
in
sbb
sti
jae
and
dec
outsb
in
sub
jns
dec
inc
xchg
dec
ss
and
sub
ljmp
idivb
das
imul
insl
sub
sbb
nop
lret
mov
pushf
lods
xchg
mov
fsub
ret
dec
push
inc
jp
push
inc
loopne
adc
sbb
mov
les
or
dec
ret
in
inc
fwait
enter
lcall
sub
jae
sbb
cltd
les
xchg
enter
aas
pushf
push
loopne
cmpb
roll
push
mov
test
jns
sub
outsb
lods
push
push
int3
jl
or
and
jne
imul
xor
xchg
sbb
jbe
cli
int3
in
cltd
push
push
repz
pop
icebp
mov
loop
ja
rolb
test
or
outsl
lods
aad
add
xchg
mov
in
xor
test
mov
stos
les
pop
js
int3
repnz
and
add
jns
xchg
adc
or
push
dec
xor
inc
pop
dec
aas
xor
aam
sub
outsb
mov
sub
push
push
repnz
out
je
cmc
loopne
loope
pop
or
stos
sub
iret
les
sbb
add
pop
xor
mov
fstpl
fstpl
mov
dec
in
stos
sahf
stos
movq
in
mov
out
int3
jecxz
and
add
arpl
mov
add
movsb
dec
sub
inc
aas
and
and
cmp
mov
aad
stc
add
mov
adc
aaa
xchg
push
xchg
push
enter
and
icebp
inc
out
xchg
push
mov
je
xorl
popa
aaa
or
sbb
inc
movsl
xchg
inc
enter
outsl
mov
fs
mov
add
jl
sbb
jmp
std
popa
loopne
fdivs
push
inc
in
insl
les
or
push
push
sti
inc
hlt
or
ret
mov
insb
sahf
xor
lahf
xchg
gs
les
adc
rorb
jae
jns
add
out
arpl
jns
mov
sub
test
bound
dec
jp
mov
push
and
insl
popa
push
popf
sbb
call
les
xor
mov
xchg
xchg
lret
add
xlat
sbb
cld
insl
andb
test
xor
mov
mov
inc
mov
jnp
cmp
push
sub
mov
nop
or
arpl
imul
pop
xchg
ret
cmc
xchg
lods
jg
sbb
push
adc
outsb
and
lret
xlat
add
pop
nop
xchg
test
mov
push
dec
adc
dec
inc
test
xchg
mov
enter
aad
inc
push
test
jl
aas
sbb
jbe
lock
mov
lods
popa
cmp
push
cwtl
fs
xchg
mov
jno
in
inc
sbb
stc
fcmovnbe
inc
cmp
push
push
mov
test
les
movl
loop
cs
or
shll
mov
jg
rcll
scas
push
cmp
xlat
mov
inc
cmp
movsb
push
or
dec
xchg
dec
hlt
push
pop
mov
nop
loop
jae
in
push
dec
pop
cmc
outsb
pop
daa
lods
inc
adc
add
add
adc
xor
pop
pop
cmpsl
clc
imul
mov
arpl
xor
popa
fistpll
pop
adc
jne
and
adc
imul
les
pop
mov
movsb
jge
add
or
ss
fidivrl
mov
push
xchg
addb
arpl
and
sbbl
xchg
add
out
cs
xor
sbb
out
stos
and
bound
xchg
sub
scas
movsl
inc
jbe
mov
ss
shlb
sahf
out
pop
jmp
pop
loop
and
gs
scas
push
mov
add
jecxz
lds
jle,pn
scas
cmp
sbb
and
or
test
aaa
sub
out
xchg
pop
sbb
ss
pop
popa
mov
stc
adc
icebp
mov
dec
mov
mov
and
sar
jecxz
test
and
jnp
inc
push
mov
and
sub
jecxz
das
jmp
ret
movsl
and
sub
pop
add
stos
imulb
dec
pop
push
cwtl
shll
pop
lods
jecxz
add
lahf
sub
mov
out
movsb
insb
lret
scas
jnp
das
gs
aam
popa
in
and
sbb
ljmp
clc
push
mov
and
pop
sub
sahf
nop
ret
pop
shr
cmp
lea
clc
scas
xchg
jne
xchg
adc
add
cltd
pop
and
int3
pop
push
mov
xorl
ljmp
and
mov
in
cltd
inc
dec
sub
xchg
fisubs
and
cmc
jl
and
cmp
insl
cltd
loop
loopne
cmp
inc
sti
dec
and
dec
nop
inc
and
mov
fbld
bound
scas
xchg
stos
popa
and
mov
sbb
and
add
dec
fs
xchg
fs
jle
and
mov
sub
int
mul
xor
xorl
add
ja
enter
and
lods
rorb
lods
dec
popf
cmp
aaa
and
sub
mov
and
lods
jns
and
out
cli
aaa
imul
add
jbe
fs
mov
jns
rolb
sbb
jp
icebp
cs
xorl
and
lahf
adc
mov
dec
and
and
jp
pop
pusha
and
cmpsl
andb
xchg
xchg
sbb
lret
outsb
leave
cmpsb
inc
fbstp
divb
cmp
dec
cltd
jecxz
jne
push
mov
insb
inc
inc
or
call
iret
in
cmovbe
pop
jge
pop
jecxz
pop
gs
xor
mov
adc
and
fidivl
and
xchg
pop
mov
inc
notl
sub
and
sahf
test
xor
popf
pop
or
ja
iret
aas
push
cmpsb
cmp
sub
insb
mov
pop
and
and
and
pop
out
and
mov
or
xor
and
or
shrb
push
adc
or
pusha
and
pop
int
rcll
mov
adc
sbb
int
jno
fldenv
shrb
testl
and
sub
ja
ficomps
dec
fdivr
mov
add
into
mov
loop
data16
aam
fldl
scas
js
fmuls
imulb
cltd
mov
je
inc
sbb
sahf
xchg
int
jg
cmp
pop
repz
aad
leave
jo
sbb
sub
add
nop
das
ret
jmp
inc
into
push
and
push
stos
jbe
sti
mov
mov
and
insb
mov
xor
pushf
and
jecxz
frstor
lret
inc
inc
fwait
mov
loope
cli
loopne
fidivl
roll
fs
pop
xchg
int
xchg
and
rcr
mov
repnz
and
jns
stc
call
and
ljmp
sti
sub
repnz
xchg
adc
mov
lods
adc
and
mov
imul
mov
jmp
cltd
lds
push
xchg
addr16
dec
and
inc
mov
jne
jbe
lcall
cltd
push
pop
push
outsl
or
aaa
frstor
hlt
xchg
xorb
mov
and
xchg
and
in
push
sbb
cmpb
cmp
and
ja
andb
push
dec
adc
mov
mov
int3
and
and
in
sahf
mov
and
xorb
pop
mov
jb
and
test
and
aad
xor
fsubr
inc
arpl
push
fs
or
test
arpl
loope
mov
pop
cmp
jb
jne
sub
push
test
push
pushf
and
jge
mov
out
pop
andb
jl
bound
dec
cmpsb
stos
mov
push
cmp
adc
imul
popa
mov
sub
cmp
cli
and
call
mov
cmp
and
inc
subl
add
dec
jmp
adc
pop
icebp
mov
xchg
in
psubusw
adcl
inc
pop
xchg
mov
push
mov
sbb
mov
jmp
and
loopne
jne
jg
add
rorl
fildl
imul
cltd
enter
js
into
add
stc
or
popa
in
or
sbb
xor
mov
jl
xor
mov
mov
mov
fs
cmpsb
mov
and
inc
push
and
push
cmp
sub
mov
xchg
and
inc
sbbb
and
adc
adc
and
cmpsl
jno
xchg
cwtl
bound
nop
int3
adc
dec
repz
shll
pop
jae
cmp
movb
jge
inc
pop
and
xorb
jns
call
and
imul
sbb
mov
pop
data16
push
outsb
push
xchg
push
xchg
das
sub
or
les
xchg
and
mov
lods
cmpsl
and
nop
lock
lret
aaa
pop
mov
aam
test
out
add
mov
xchg
stos
sarl
hlt
test
dec
inc
adc
outsl
inc
push
mov
add
and
adc
xlat
and
adc
invlpg
push
inc
mov
add
std
scas
addr16
insl
xchg
mov
and
movsb
pop
dec
loope
out
inc
stos
inc
divl
and
xchg
and
outsb
and
mov
push
and
pop
xor
pop
stc
jnp
shlb
mov
pusha
in
push
sahf
andl
mov
inc
adc
add
jecxz
and
xchg
cld
ljmp
daa
popf
sbb
lock
mov
nop
out
xor
adc
subl
icebp
jns
adcl
and
dec
xor
scas
jmp
push
push
fisubs
insl
and
cmp
add
xlat
dec
xor
xchg
sbb
fdivrs
sbb
aam
fisubrs
pop
jae
pop
and
xchg
xor
scas
and
fisttpll
aam
sti
mov
push
mov
xchg
jecxz
xchg
fstpl
mov
out
mov
inc
and
mov
jns
xchg
call
dec
mov
inc
xchg
scas
pop
in
sbb
push
test
sahf
and
jl
gs
dec
push
jns
or
and
pop
mov
scas
and
push
mov
xchg
xor
and
stos
bound
ss
insl
push
inc
or
sbb
inc
sub
pop
adc
and
push
add
inc
push
mov
and
cmc
or
jmp
pusha
mov
cmp
popf
xlat
mul
and
scas
scas
notb
adc
and
lret
sbb
cmc
icebp
and
aad
mov
movsl
bound
cmpsl
mov
cmp
dec
notb
cltd
arpl
loop
xor
in
int3
xor
xor
fs
sbb
lcall
mov
xor
pop
rorl
test
mov
aam
daa
push
jmp
in
pop
repnz
pop
mov
leave
out
and
loop
and
sub
mov
repz
mov
sbb
add
sbbb
call
and
cld
push
pop
frstor
rcrb
loope
popa
fldcw
test
push
mov
and
fidivl
dec
adc
jae
jmp
dec
aas
or
mov
hlt
pop
push
mov
and
jno
xchg
aaa
lds
jmp
jle
outsl
enter
out
and
out
scas
and
sub
pop
cltd
cmpsb
insl
cmp
cmc
pop
xlat
pop
mov
mov
enter
rcrl
aad
mov
shrb
add
lea
sti
movsb
out
and
jae
nop
test
lret
test
push
mov
xor
jg
mov
fsubl
sbbl
push
popf
cmp
ds
loop
push
data16
fcomip
xchg
fwait
sbb
sbb
mov
xchg
fstpt
dec
xor
repz
adc
xor
or
or
cmc
jmp
jmp
scas
imul
faddl
and
mov
test
xchg
lahf
inc
xchg
xchg
jp
inc
rorb
mov
ror
mov
jns
out
and
lods
les
push
into
or
xor
stos
pop
push
cmp
sub
cmp
cmc
or
xchg
mov
xor
push
iret
add
pop
jle
hlt
cwtl
xchg
mov
adc
inc
stc
outsb
out
cmp
loopne
sub
leave
movsl
adc
cs
jecxz
push
inc
ds
and
dec
sbb
push
cmp
and
lods
push
dec
pop
cmp
lret
sub
sub
and
daa
jle
pop
and
jae
sbb
and
mov
jl
jmp
inc
or
lea
mov
and
sub
arpl
dec
pop
sbb
sbb
call
fcmovnbe
xchg
or
out
dec
out
and
push
pminub
mov
sbb
mov
xchg
orb
pop
fmul
subl
int3
lret
and
and
fscale
add
shll
dec
pop
sbb
and
xchg
xchg
subl
cmpl
jno
lea
xchg
and
aam
out
orl
cmp
adc
lds
jbe
push
es
and
dec
add
push
dec
sub
mov
mov
cld
and
push
add
push
or
pop
scas
lods
cmp
pop
push
pop
out
mov
mov
or
std
mov
and
lods
pop
xor
adc
push
out
std
push
and
xor
pushf
mov
ret
mov
js
les
das
inc
dec
fs
imul
sbb
mov
inc
xor
sahf
fsubs
push
test
mov
dec
lret
repz
and
sub
ror
js
jns
mov
aas
lret
mov
stos
cmc
ss
mov
xor
mov
ja
out
cld
mov
lcall
mov
clc
xor
std
jnp
sarb
rorb
cli
pop
push
int3
xorb
inc
movsb
sub
mov
orl
xor
mov
pop
fcoms
ds
mov
loopne
rcrl
movsl
ja
pushf
stos
pop
jle
mov
jno
cmp
std
lahf
mov
push
jp
cmp
out
xor
push
outsl
and
ss
mov
mov
pop
jecxz
sbb
xchg
xor
bound
inc
daa
popa
sbb
test
xchg
pop
jno
mov
xchg
sbb
shl
pop
shll
testl
add
jb
sbb
fadd
pop
mov
cmpsb
rcll
jae
imul
sub
shll
lret
cmp
xor
ret
xor
stos
mov
inc
les
insb
or
jecxz
fsts
jle
insl
and
mov
dec
ror
inc
iret
and
lcall
cmp
jbe
das
pop
xor
mov
outsb
xor
lcall
xor
dec
push
fistpl
int
in
xchg
pop
imul
je
mov
jo
clc
inc
pop
aaa
jno
stc
cli
push
jb
and
mov
sbb
mov
inc
les
mov
mov
orb
dec
rorl
in
imul
xor
xor
lds
enter
and
sbb
xchg
dec
rclb
mov
jns
mov
sbb
mov
push
and
pop
imul
cmpsl
std
mov
mov
or
loopne
cmpsl
daa
lods
mov
add
jge
or
addl
mov
jg
adc
cltd
pop
pop
jae
arpl
push
nop
and
push
push
add
in
leave
aam
cmp
adc
cmp
outsl
mov
cli
add
dec
jb
aas
xor
in
movb
lods
push
add
mov
popa
iret
loop
enter
xchg
cmc
fs
stc
and
mov
daa
and
xchg
into
ja
aam
ja
iret
repnz
jb
mov
sbb
insb
inc
sub
or
mov
outsb
scas
and
loopne
test
dec
inc
xchg
adc
jno
adc
push
sti
je
push
jmp
jns
repz
mov
cld
mov
push
shll
insl
mov
pop
stos
push
imul
inc
adc
jmp
mov
arpl
pop
mov
cmc
xchg
mov
mov
dec
jns
jnp
adc
jge
faddl
or
cmc
loop
mov
ret
enter
pop
addb
inc
mov
dec
pop
test
xor
mul
test
add
rcrl
test
mov
sbb
out
ret
mov
mov
mov
imul
mov
xor
and
xchg
outsb
jmp
pop
mov
and
pop
add
movsb
cmpsl
inc
fldcw
push
pop
sbb
mov
ret
out
push
inc
xchg
lret
inc
xchg
mov
xchg
mov
sbb
rcr
mov
push
inc
dec
xchg
fidivrl
fbstp
popa
loop
or
inc
jle
cmp
add
enter
in
and
ret
cmpsl
add
mov
and
inc
add
pop
mov
inc
arpl
loope
jg
pop
push
xlat
clc
fcompl
jmp
mov
sbbl
sbb
push
enter
loope
ret
mov
jge
aam
test
cmc
aaa
push
jb
xchg
popf
pop
mov
mov
out
jns
enter
jns
pop
sub
aas
inc
arpl
xchg
xchg
xchg
bound
test
out
das
and
subb
add
sub
fisubrl
and
rol
bound
pop
loope
ds
push
fldt
aaa
stos
insb
les
xchg
mov
test
xor
cwtl
mov
and
ja
xor
pop
adc
fdivr
je
sub
lahf
and
or
gs
pusha
xchg
pop
test
int3
cmpsb
pop
shrl
and
testb
cld
jl
push
jg
lds
les
jg
incl
fistl
mov
stos
les
or
xor
jmp
mov
cltd
xor
subb
dec
push
fyl2xp1
add
sub
add
shll
nop
pusha
mov
sbb
lds
pop
imul
pop
mov
push
sbbl
movl
or
sub
push
and
ljmp
pop
in
gs
cld
push
hlt
mov
popa
dec
insb
clc
push
mov
inc
ret
or
into
cld
push
mov
mov
mov
movsb
pop
pop
add
pop
and
rcrl
inc
jmp
cmp
hlt
mov
dec
and
push
je
andl
jmp
jbe
mov
andb
cli
cwtl
les
mov
dec
nop
nop
push
sbb
loope
push
xchg
and
and
repnz
ja
jne
or
add
inc
sahf
popa
jge
dec
scas
movsb
gs
aaa
andb
xlat
test
popf
inc
add
pop
mov
in
shll
hlt
sbb
shll
dec
or
pop
xlat
xor
faddl
jae
je
aam
push
mov
mov
mov
enter
gs
rorb
mov
jge
pxor
push
sbb
jmp
and
aaa
pop
adc
mov
cmp
enter
sbb
stos
negl
sub
popf
jmp
imul
aam
add
xor
pop
push
add
and
pop
es
mov
sub
and
and
jno
pop
and
jb
mov
adc
imul
inc
out
stos
mov
xchg
jmp
mov
aas
paddd
cwtl
movsl
inc
pusha
std
jge
les
aaa
fcmovnu
pop
push
lret
mov
shr
addr16
pusha
adc
and
cmc
insl
sub
xchg
enter
adc
fwait
and
add
sarl
rolb
inc
out
jns
cmpsl
rorb
orb
sbb
scas
les
stos
fstpt
mov
mov
cmpl
push
lea
mov
shrb
push
sub
icebp
add
inc
xor
inc
xor
clc
cmp
mov
add
pop
ret
adc
lock
sti
ret
push
cmp
pop
pop
fisttpll
clc
xchg
insl
jae
sarl
inc
insl
inc
pop
dec
sbb
mov
and
imul
sbb
add
arpl
cmp
xchg
mov
mov
inc
push
jne
repnz
aaa
inc
repz
bound
cmp
and
mov
cltd
adc
inc
sti
xchg
cmp
ds
pushf
jnp
add
test
leave
lea
add
js
pop
es
aam
sub
and
mov
and
std
subl
shrl
out
cmp
addr16
movsl
dec
fisubrl
sbb
cmp
cli
adc
sub
mov
xchg
cmp
xchg
jbe
pop
push
or
es
je
rorb
repz
inc
or
xor
lret
sti
aaa
fcomps
mov
decb
push
add
inc
push
push
mulw
popa
lods
enter
cmpsl
insl
mov
mov
jge
pop
mov
mov
jbe
stc
in
les
das
push
fwait
cmp
xor
paddsb
xchg
ret
push
enter
in
push
jg
and
pop
int3
andl
sbb
pop
loop
push
push
insl
negl
aas
imul
xchg
call
outsb
jecxz
cs
arpl
les
pusha
mov
push
push
dec
xchg
pop
dec
mov
outsb
sbb
movsb
push
sub
xrelease
xchg
sbb
inc
ja
popa
sub
outsb
movsl
cld
fstps
and
mov
jne
adc
dec
push
enter
sub
movsl
xchg
test
mov
aaa
test
ja
stos
outsb
mov
imul
lret
mov
and
das
mov
mov
pop
or
lahf
loopne
sbb
ljmp
lret
cld
jb
dec
and
push
les
cmp
or
pop
data16
xor
sub
xor
add
mov
mov
or
sub
test
stc
sti
popf
push
cmp
xchg
addr16
orl
sub
cli
jbe
daa
inc
daa
pop
dec
xlat
jp
jno
js
fistl
les
ret
or
or
inc
outsl
sahf
sub
cld
cltd
sub
sbb
mov
shll
addb
inc
cmp
sahf
push
dec
cld
addr16
lret
inc
push
mov
push
daa
jg
mov
and
or
jle
mov
out
arpl
and
mov
xor
imul
outsb
test
pushf
mov
push
mov
xchg
lret
popa
and
ret
cmp
push
adc
clc
adcl
mov
sahf
and
mov
pop
or
cmp
movsl
dec
shlb
in
dec
mov
popa
jmp
std
lret
repnz
in
dec
and
cmp
sub
jno
clc
mov
dec
add
mov
ret
movsb
cmp
push
pop
adc
cmp
push
adc
jmp
jo
and
flds
mov
inc
cmpsl
inc
das
cwtl
lret
ja
pop
push
in
sbb
lret
ljmp
mov
mov
aam
pushf
sub
and
dec
jl
push
xchg
add
inc
xchg
loopne
insb
mov
adc
and
ds
test
clc
arpl
and
lret
imul
je
cwtl
pushf
icebp
sub
in
and
jg
push
aad
mov
pushf
push
das
je
and
mov
and
dec
mov
push
and
imul
xchg
jg
sub
mov
sbb
cmp
adc
mov
push
test
shlb
fisubs
inc
pop
and
or
fsub
cmp
jge
lds
xor
and
mov
and
jnp
sahf
add
hlt
cmpsl
xor
jno
decb
and
xlat
jno
mov
push
idivl
mov
pushf
pop
push
jne
popf
jmp
popa
enter
and
mov
aad
in
and
in
and
test
and
pop
out
dec
cld
cli
adc
fisttpll
dec
sbb
pop
cmp
icebp
push
shlb
jg
inc
mov
adc
or
and
aas
add
roll
push
lock
pop
lret
mov
and
imul
jns
add
addl
lods
and
out
or
and
xlat
mov
fcomps
test
and
je
movsb
push
and
in
sub
mov
xor
inc
xchg
push
ja
ljmp
or
sub
js
data16
adc
mov
and
lods
mov
and
adc
aas
into
psrlw
inc
jbe
mov
and
pop
inc
add
jge
cmp
mull
jae
je
jecxz
add
out
mov
shl
and
jns
mov
push
icebp
pcmpeqw
mov
mov
out
adc
push
out
outsl
jecxz
mov
sbbl
bound
mov
push
ret
pop
jecxz
cmp
arpl
call
jne
cmp
jns
add
insb
aam
imul
and
jge
lods
pop
sub
and
adc
enter
jl
aas
sbb
sbb
push
and
pop
jbe
sti
push
mov
mov
jo
xor
jnp
pop
scas
adc
ret
lods
add
inc
and
sub
test
pop
fcompl
pop
adc
inc
push
bswap
and
shll
jl
mov
loopne
push
jns
cmp
sahf
jecxz
pusha
shrl
sub
or
popf
jb
xchg
and
leave
mov
imull
mov
shlb
in
or
mov
add
fdivl
lea
ret
divb
push
mov
sbb
int3
and
sbb
cld
cltd
jo
xchg
xor
ret
jl
pop
adc
lret
or
push
scas
out
xor
cmp
jecxz
mov
and
cmp
stos
je
push
lcall
and
jne
and
insl
and
cs
mov
in
xor
mov
ja
pop
jge
xchg
inc
jecxz
and
dec
adc
mov
mov
mov
lcall
xor
inc
mov
cmc
push
andb
rorl
stc
sub
movsb
push
jp
shll
stos
add
jbe
outsl
add
push
leave
shrb
inc
xchg
sbb
push
mov
mov
jo
xchg
shrb
fbstp
shrb
lods
inc
sahf
fcomi
loop
dec
test
ret
movsb
jg
pop
ja
or
xor
cwtl
or
xchg
cmp
adc
mov
xlat
mov
popa
xchg
outsb
xchg
mov
insl
add
inc
pusha
sub
pop
loopne
enter
push
cmpb
insl
fst
dec
pop
jmp
inc
adc
xchg
pop
ficomps
sub
cmpsb
xchg
pop
clc
incl
rcl
push
stos
outsb
and
push
insl
mov
mov
push
push
mov
inc
inc
sub
xchg
ret
sbb
aam
popa
jno
mov
aaa
data16
jg
mov
mov
pop
fists
pop
js
int
pop
sbb
mov
and
inc
fcomi
data16
sbb
sub
das
aas
int3
popa
insb
mov
jecxz
popf
aaa
imul
and
or
sub
jno
les
addr16
popa
data16
mov
pop
sub
shll
data16
icebp
lods
mov
adc
mov
mov
subl
rcrb
sub
js
inc
push
sbb
cmpsb
addr16
enter
imul
adc
fldt
jo
xchg
hlt
nop
stos
adc
fdivl
jle
mov
out
adc
pushf
int
lahf
or
es
mov
popa
insb
lods
mov
ljmp
pushf
hlt
sbb
mov
mov
sbb
stos
jae
mov
and
xor
dec
mov
dec
pop
xchg
cmp
pop
int
imul
aas
ja
in
arpl
mov
or
imul
lds
mov
leave
das
push
inc
dec
cmp
mov
or
pop
sub
dec
adc
sbbb
hlt
hlt
shlb
fwait
dec
enter
pushf
push
ljmp
adc
into
int
je
jmp
xor
inc
stc
jmp
push
mov
jmp
cmovne
enter
and
stc
xor
outsb
xchg
mov
dec
sub
jo
and
mov
lret
adc
jno
jg
loop
dec
mov
int
xchg
adcb
arpl
aas
stos
mov
push
pop
aaa
movsl
test
sbb
arpl
xor
adcl
and
jnp
xchg
mov
fisubrl
push
mov
andl
lea
sub
lahf
mov
lret
rdpmc
mov
jns
push
dec
push
les
ja
mov
push
xor
out
inc
push
xchg
dec
adc
std
arpl
pop
dec
test
shll
int3
jnp
cmpsl
adcb
sarl
stos
cmpsb
cmp
arpl
fadds
sahf
xor
lock
fsts
mov
jge
jo
cmp
movsl
rcrl
ljmp
out
lea
adc
sbb
mov
ret
lcall
jmp
dec
sub
lcall
mov
mov
and
dec
pop
ja
dec
sbb
lock
push
cwtl
imul
pop
pop
mov
mov
dec
lret
lahf
insl
or
push
mov
push
pusha
daa
xor
and
les
repnz
jne
adc
xchg
mov
inc
adc
dec
movsl
sahf
add
mov
and
pop
sbb
arpl
aaa
fcomi
mov
enter
jmp
xlat
inc
jecxz
inc
scas
shrl
pop
sbb
leave
and
pop
add
adc
mov
push
xor
push
movsb
jne
inc
mov
mov
cmp
data16
ret
push
mov
bound
dec
jb
sbb
ja
mov
cmp
xchg
inc
cmp
or
or
or
loope
push
push
mov
dec
jp
psubusb
and
pop
test
jle
jo
push
mov
xor
xchg
fcoml
imul
inc
jnp
mov
daa
push
gs
loopne
pmaddwd
decl
push
xchg
enter
lcall
xchg
dec
inc
arpl
push
mov
or
ret
jmp
inc
stos
icebp
cld
dec
js
lcall
ret
sbb
inc
or
test
adc
pop
andps
and
ret
call
mov
inc
xor
pop
hlt
fsubrl
sub
insl
sbb
shl
aad
es
mov
jb
stos
daa
jmp
lock
outsb
repnz
icebp
pop
stos
les
inc
testl
push
mov
xor
scas
int
xchg
cwtl
inc
pushf
push
fisttps
sahf
jno
jno
aam
inc
and
cmp
add
adc
aad
dec
add
inc
mov
inc
aas
ret
mov
jns
shlb
jno
test
pop
mov
sub
cltd
push
adc
and
cmpsl
mov
push
insl
pusha
aaa
ret
out
and
xor
rcll
dec
mov
xchg
leave
divb
sub
cmpsb
inc
es
add
test
or
cwtl
jnp
outsl
leave
mov
imul
lods
or
mov
imul
sti
icebp
in
add
push
decl
xorl
push
out
cmp
add
icebp
push
enter
dec
dec
aad
popa
pop
push
sub
incb
mov
jle
daa
dec
and
out
sbb
jmp
jge
movsl
icebp
pminsw
sahf
pop
xor
inc
xchg
insl
movzbl
iret
lods
mov
dec
pop
xchg
jo
shrb
jg
xchg
cwtl
dec
add
out
add
inc
push
les
cwtl
or
lcall
mov
cltd
mov
xor
lret
out
rorl
insb
out
outsl
mov
aas
pushf
data16
les
or
cltd
mov
je
lret
ds
pop
in
or
rsm
loope
mov
xor
sbb
xor
lret
in
nop
push
lods
ljmp
sub
mov
ret
stos
pop
jecxz
inc
sub
insb
push
int
sbb
jmp
mov
lret
enter
les
dec
cmp
les
testb
adc
mov
xchg
clc
outsl
or
andl
push
mov
pop
out
cmpsl
das
adc
les
cwtl
sub
sbb
insl
jnp
xchg
jle
adc
fimull
or
arpl
test
aad
fmulp
adc
dec
mov
adc
sub
push
mov
lods
cli
mov
test
add
loop
xchg
lock
and
add
bound
adc
jg
add
cmpsl
and
and
in
dec
xor
test
into
adc
ss
cs
enter
xchg
and
pusha
fistpll
mov
or
stc
sbb
out
and
mov
dec
add
pop
mov
cmp
mov
cmpsb
loopne
cmp
aaa
and
or
add
push
adc
xlat
cli
ljmp
pop
adcb
and
std
xor
push
out
cmc
mov
and
rcrb
cmp
addr16
and
xor
jns
jmp
push
lea
jo
pop
and
push
mov
outsl
pop
inc
jmp
push
xchg
mov
repz
push
loopne
and
lahf
inc
popf
mov
mov
mov
mov
adc
test
sbb
mov
flds
mov
pop
jae
sub
and
repnz
orb
roll
fstpl
and
iret
mov
rolb
push
and
out
fbld
cltd
push
inc
sub
mov
call
mov
jno
ret
and
into
xor
gs
adc
insl
and
pusha
mov
fimuls
push
cmp
and
or
and
ja
and
fldl
iret
mov
sub
cmp
fwait
aas
and
dec
je
and
sti
pop
and
xchg
push
loopne
stos
and
cltd
mov
mov
nop
mov
push
and
je
and
mov
push
dec
and
pop
ret
out
stos
or
push
lods
mov
shll
outsb
inc
or
jns
pop
jecxz
and
and
iret
mov
adc
and
pop
out
imul
mov
cwtl
scas
push
loop
arpl
inc
movsl
outsb
xchg
mov
imul
int
shl
jp
and
mov
pop
cmp
jnp
and
scas
imul
push
daa
in
xor
pop
test
bnd
andl
cli
cmp
and
or
pop
add
negl
mov
scas
inc
shll
scas
cmp
and
mov
and
cmp
cltd
loopne
and
sbb
push
and
fistl
cmp
xchg
and
pop
aas
sbb
or
ljmp
mov
or
fisubl
inc
nop
jno
jae
and
dec
popa
lcall
mov
cmp
pop
pop
xchg
mov
in
mov
add
mov
and
cmpsl
pop
repnz
push
repz
test
stos
adc
mov
mov
rcll
out
adc
and
dec
das
push
cmp
lahf
out
lods
and
mov
mov
loopne
out
sub
cltd
hlt
aas
and
jl
xchg
adc
clc
jp
xchg
sbb
and
in
pop
mov
movsb
fldcw
pop
mov
mov
and
push
hlt
pop
add
mov
fs
mov
push
fcompl
xchg
shlb
ja
sub
aas
jecxz
pop
fiaddl
cmpsl
mov
sbb
dec
les
rolb
ret
inc
sub
out
ret
js
dec
and
daa
inc
pop
enter
and
stc
loop
dec
js
je
adc
dec
cmp
jb
mov
xor
mov
addr16
mov
icebp
rcrb
in
fcmovnbe
pop
xor
scas
and
cs
jp
cmp
lret
sarl
jl
inc
push
inc
cld
pop
and
xchg
xchg
mov
fldcw
lahf
and
and
fcoms
andl
and
cmp
pop
pop
inc
and
xor
sub
xchg
cmpsb
cwtl
insl
or
xchg
loope
sbb
sarb
cmp
shrl
pushf
xor
mov
nop
pop
je
jecxz
les
mov
bound
fnsave
nop
cwtl
mov
popf
or
add
jae
jge
and
lahf
ret
adc
dec
and
or
xchg
pushf
imul
fcomps
out
addr16
enter
fistl
dec
inc
sbb
repnz
es
lock
out
inc
fcmovnb
je
sti
push
mov
movl
neg
stos
gs
mov
mov
and
outsb
shrl
xlat
and
jle
mov
fbstp
aam
lock
mov
dec
adc
loope
fstpt
jo
jbe
jg
fs
add
mov
out
pop
loope
inc
and
in
xor
enter
pop
ja
xchg
gs
jb
xor
rcll
jo
xchg
pop
repz
sub
cmp
mov
adc
jle
and
outsl
paddsw
divl
sbb
fwait
inc
inc
iretw
adc
scas
pop
mov
inc
jae
in
out
inc
lds
inc
addb
jecxz
fs
lahf
cmpsb
dec
mov
push
les
sbb
push
jne
sub
pushf
pushf
mov
repz
adc
lods
sahf
sbb
insl
mov
movsl
dec
les
dec
lods
imul
es
in
dec
fistl
movb
push
outsb
gs
jle
lretw
mov
jp
call
xchg
or
gs
rorl
dec
insb
lret
pop
je
xor
mov
sub
enter
push
mov
stos
sub
sbb
dec
leave
and
jge
jb
xchg
leave
int3
jmp
cmp
lcall
mov
push
or
mov
sbb
fnstcw
inc
inc
push
mov
outsl
sti
xor
push
call
jb
shlb
push
adc
pop
jae
and
cwtl
mov
mov
les
inc
in
mov
xor
aas
xor
mov
dec
and
rcll
mov
stos
daa
inc
hlt
inc
push
js
fs
and
inc
dec
ror
mov
hlt
aas
sub
add
push
loop
negb
out
sbb
mov
jno
test
push
inc
add
rcrb
dec
jo
and
movsb
rolb
es
out
and
leave
and
and
mov
mov
push
je
icebp
out
mov
add
or
retw
xchg
mov
call
pop
je
aas
and
jb
cmp
push
cmc
in
push
and
lods
pushf
mov
push
push
adc
or
add
and
jle
jmp
ret
dec
ljmp
in
mov
shl
test
inc
lahf
dec
sbb
inc
nop
or
mov
cli
push
dec
cmp
lods
push
or
and
sbb
or
adc
push
push
lods
and
cltd
xor
leave
and
and
adc
std
and
xchg
sbb
mov
mov
pop
cmp
enter
sbb
add
testb
repz
xor
mov
xchg
cmp
and
repnz
test
movsb
xchg
ja
cmpl
cmp
pop
and
insb
clc
pop
ret
and
mov
pushf
sahf
ds
xchg
sub
jmp
push
and
clc
sub
hlt
aam
and
insb
mov
inc
orl
and
sub
std
in
and
mov
and
push
cmp
hlt
lret
push
mov
xlat
cld
subl
or
test
rcll
push
xchg
and
jg
and
rcl
popa
xchg
fisubs
push
movlps
adc
mov
loope
test
pusha
push
cmp
adc
sbb
jns
imul
mov
dec
shl
out
xor
xchg
cmp
movsb
ljmp
xor
jne
lock
loop
and
xchg
mov
push
and
mov
add
push
stc
in
jns
pushf
mov
pushf
push
sbb
xchg
aaa
pop
bound
pop
scas
mov
and
stos
xchg
test
inc
fs
pop
call
lock
mov
mov
inc
stc
mov
mov
mov
adc
repz
fcompl
jl
lds
ljmp
xchg
fsubs
insl
and
jl
hlt
sbb
loop
mov
cmp
and
in
daa
enter
and
mov
lcall
or
mov
push
in
pop
andl
mov
cmc
and
adc
pop
mov
popf
cmpl
inc
mov
test
cmp
push
and
loopne
or
call
lods
repnz
and
int3
push
iret
fdivl
pop
fbstp
xchg
and
xor
pop
mov
xor
sbb
mov
xchg
add
int
and
pop
imul
mov
stos
bound
pop
sbb
lcall
cmp
push
shll
jmp
and
adc
and
cmpsl
mov
das
aam
mov
xorb
shl
in
les
add
insl
out
test
out
add
mov
xor
lahf
adc
push
xor
aaa
mov
ljmp
push
sub
xor
andl
inc
pop
inc
lock
popa
pop
adc
add
aaa
enter
out
adc
imul
imul
arpl
mov
or
adc
mov
push
ret
xor
dec
xlat
in
stos
popa
rcll
add
lahf
scas
ror
pop
jp
jbe
pop
jecxz
ret
sub
inc
test
mov
push
push
shl
out
decl
push
or
ret
and
sbb
flds
push
xor
ja
sub
xor
pop
jnp
inc
add
ret
jmp
mov
push
enter
je
mov
aad
in
leave
pop
lcall
inc
loope
xchg
jb
dec
push
mov
shl
pop
inc
hlt
imull
insb
add
imul
and
out
inc
xor
cltd
fsubrl
cmp
sbb
push
cmc
mov
int
jne
lret
stc
fcoml
popa
into
lock
xor
mov
mov
adc
jno
lahf
push
movsl
ss
insl
in
daa
pop
adc
sbb
push
in
pop
jge
add
inc
jb
xor
push
es
pop
add
enter
sbb
dec
lcall
xor
mov
mov
and
pusha
inc
ljmp
ret
shll
xchg
xor
arpl
push
arpl
and
mov
inc
cltd
jae
jb
enter
lret
sbb
pop
je
daa
inc
lret
ror
pop
push
xor
inc
jne
lods
loopne
inc
pusha
andl
dec
mov
push
in
push
mov
jmp
fwait
jle
insl
push
mov
mov
jbe
fistpl
mov
stos
or
and
xlat
fstpl
mov
shl
push
insl
enter
imulb
int3
jmp
push
pop
mov
cmp
insl
scas
lock
adc
sbb
sub
punpckhdq
daa
pushf
enter
movsl
stos
loope
push
mov
shlb
or
stos
add
in
or
mov
idiv
aad
sarl
inc
adcb
push
jl
out
fstps
add
sub
pop
sbb
jbe
mov
jno
mov
inc
daa
sarb
add
xor
ret
inc
mov
faddl
nop
sub
adc
mov
std
movsl
xchg
dec
outsb
rol
push
or
jl
lret
mov
movsb
or
aam
pop
jl
push
jge
sbb
dec
sub
add
pop
inc
gs
clc
pop
out
aam
mov
xchg
andl
loopne
mov
sbb
loopne
retw
decl
cmpsl
lcall
iret
insb
shlb
and
pop
inc
pushf
insl
mov
mov
movsb
and
shll
pop
ret
pop
xchg
das
mov
stc
inc
push
add
jae
gs
roll
cld
jnp
in
push
and
cld
mov
arpl
mov
push
int
bound
xorl
jl
stos
cld
lret
pop
jo
cltd
pop
ret
mov
xchg
movsl
fmul
mov
push
sbb
inc
aaa
inc
sbb
mov
and
pop
jg
cmp
stos
psraw
inc
add
dec
enter
test
xchg
push
jg
sahf
aad
gs
xlat
repnz
add
mov
imul
add
cli
dec
pop
imul
js
lds
sbb
mov
mov
ret
pop
add
sub
ds
mov
xchg
xor
inc
push
in
clc
sub
ds
psraw
xor
mov
out
mov
aas
lahf
xchg
gs
xchg
into
mov
cmp
out
and
push
xor
adc
cmp
stos
and
dec
jmp
in
scas
ljmp
stos
out
xor
xchg
and
icebp
punpckldq
mov
js
imul
xchg
pop
fs
ret
fldl
punpcklwd
pop
aaa
jmp
arpl
addr16
std
mov
out
xchg
out
add
enter
shr
xor
addr16
mov
mov
jbe
cmp
inc
mov
add
daa
out
xchg
mov
ss
cmp
sahf
stos
jle
nop
sub
inc
in
jns
ja
cmc
and
imulb
dec
sbb
push
and
xor
ss
test
push
hlt
rcl
aam
test
cli
rcrb
sub
adcb
fidivs
sbb
jae
xor
or
loope
dec
test
mov
sub
mov
xchg
dec
adc
inc
mov
mov
adc
fsubs
bound
xor
sbb
xchg
andl
int3
sub
arpl
sub
lahf
imul
mov
jmp
adc
xchg
sbb
repnz
mov
inc
js
movsl
adc
daa
les
or
lret
jb
cwtl
dec
in
rol
scas
dec
xchg
rcl
mov
and
xchg
mov
dec
imul
push
dec
pop
decb
test
xchg
insb
clc
jmp
das
outsb
and
push
jle
jl
fidivl
inc
stos
and
out
stos
js
sbb
test
loope
jp
jnp
sub
das
mov
movsb
add
inc
ljmp
test
cltd
stos
mov
sbb
cmp
int3
sub
shll
cltd
xor
fwait
jbe
shll
cmpsb
jo
mov
inc
sub
inc
inc
sub
xor
out
daa
dec
pop
jb
xor
mov
and
push
mov
enter
add
fyl2x
mov
test
pop
xchg
jge
jbe
mov
mov
fsubl
push
aam
dec
mov
cmp
sti
mov
or
dec
mov
add
ret
bound
xchg
mov
dec
pmulhw
mov
sti
jmp
mov
repnz
sahf
icebp
mov
push
fisubrl
insl
adc
jae
fildl
call
inc
xchg
sbb
xchg
imul
jnp
stos
les
sbb
mov
dec
das
pop
push
jmp
cltd
ret
dec
mov
sbbb
cmp
ljmp
lcall
inc
inc
outsb
das
push
enter
or
imulb
xchg
bound
mov
lds
jbe
push
outsb
mov
mov
lock
cmp
fldl
fwait
or
jge
loope
dec
fs
mov
push
xchg
mov
pop
sub
xor
and
sub
bound
in
push
ret
push
inc
dec
addb
fildl
cld
sub
xchg
inc
addb
mov
psllw
leave
cmp
aam
aaa
popa
xchg
test
bsr
clc
int3
inc
out
mov
cvttps2pi
popa
repz
arpl
pushf
repnz
xlat
dec
les
push
push
cmpsb
shrl
add
push
sub
lods
pop
xor
push
lods
cmp
jbe
push
faddl
inc
inc
and
inc
inc
push
aam
xor
fstpl
and
and
int
dec
xor
insl
sbb
shll
mov
jb
and
sub
mov
mov
sbb
mov
adc
imul
in
mov
imul
imul
shrl
insl
in
les
pop
pop
lods
int3
loopne
rcll
sub
inc
sub
adc
outsl
int3
jae
pop
adc
mov
mov
mov
add
in
insl
aad
ljmp
cmp
dec
inc
dec
inc
jg
loope
filds
imul
movsl
xor
xchg
dec
cmp
xchg
xor
inc
icebp
int3
in
jae
adc
int
lcall
xor
mov
je
or
xor
jg
fdivrl
cmp
loop
bound
dec
dec
out
dec
jg
add
popa
mov
dec
in
in
rcll
jg
in
mov
fisubrl
es
or
mov
stos
cmp
rcr
add
int3
out
test
xchg
sub
lret
dec
xor
jns
mov
icebp
inc
testb
or
add
clc
daa
loope
and
inc
adc
lods
and
xchg
fwait
in
jle
push
xchg
addr16
mov
adc
popf
ds
pop
out
add
push
and
adc
mov
pop
les
into
pop
shufps
push
or
dec
testl
sub
jb
sbb
cmp
insb
lods
inc
sub
push
les
jb
sub
sbb
dec
pop
inc
jle
mov
push
cmc
andb
dec
sub
mov
lock
enter
out
jmp
inc
rclb
sub
jno
sub
shll
fnsave
xchg
sbb
xor
and
pop
cld
and
ret
mov
xchg
out
inc
aad
aad
and
les
xor
mov
dec
add
gs
arpl
mul
icebp
aaa
push
inc
jnp
lret
dec
andl
inc
divl
cmp
leave
sbb
imul
jle
out
out
cmp
mov
inc
roll
push
subl
sbb
inc
add
cmpsb
or
loop
sub
cld
andl
cmc
xchg
stos
ret
lret
sub
sbb
push
jbe
sbb
mov
popa
add
js
clc
inc
inc
ljmp
stos
sti
and
pop
les
ja
xchg
inc
jl
in
or
sub
dec
popf
fimuls
mov
dec
pop
fisubl
cmp
xor
lret
les
lea
fiadds
enter
lock
sub
jmp
mov
neg
pop
push
insl
sub
les
push
xchg
in
popa
or
ss
and
js
push
pop
mov
les
and
and
cmc
icebp
jns
push
and
outsb
test
andb
daa
icebp
pop
pusha
jb
cmp
shll
mov
push
mov
lahf
dec
into
imul
insl
enter
mov
or
fs
xor
lea
xchg
lcall
xorl
lcall
scas
inc
dec
inc
adc
pusha
inc
cmpsb
out
pop
adcb
rorl
xor
shrb
loop
push
fsts
mov
xor
sbb
test
aad
sbb
mov
adc
lret
pop
mov
sarl
add
mov
xor
mov
in
loopne
adc
adc
mov
xor
lods
and
aad
cmp
mov
xor
lret
push
divb
cmp
pop
leave
repnz
xor
in
notb
movsl
imul
and
jp
xchg
mov
sbb
fnstsw
lock
xor
inc
cld
xchg
sbb
sbb
aaa
icebp
ja
hlt
dec
or
ret
in
pop
jne
xor
xor
dec
mov
sbb
pop
dec
gs
ja
mov
xlat
rorl
stc
add
leave
divb
push
pop
outsl
and
enter
or
ret
out
enter
inc
imul
sub
fistps
sbb
fucomip
cmpsl
insl
ret
imul
sbb
outsl
stos
inc
stc
jno
jmp
sahf
adcl
repz
jmp
jae
inc
xchg
lods
lcall
outsb
pop
orb
int3
in
dec
pop
pop
lret
and
push
or
mov
jb
cmpl
cmp
cltd
adc
push
stos
roll
arpl
lock
mov
sti
inc
xor
fwait
cld
aad
xchg
xor
data16
cmp
inc
insb
and
cmpsb
dec
into
sti
lcall
lahf
and
fistps
inc
pushf
negl
xchg
dec
mov
in
in
out
scas
mov
cld
and
je
shll
and
je
jg
pop
mov
pop
loop
sbb
and
loopne
lret
pop
frstor
push
and
jl
add
stc
pop
repnz
and
cmp
iret
imulb
fs
enter
sti
xor
clc
cmp
push
out
xor
lahf
stos
and
and
aad
les
mov
lret
lret
jmp
inc
enter
jg
xchg
vcvtss2si
stos
jnp
enter
jb
outsl
pusha
adc
mov
mov
inc
jnp
xor
mov
dec
testl
int
pop
loop
mov
outsb
push
mov
mulb
out
xchg
push
pop
pop
pop
aaa
mov
inc
xchg
testb
mov
test
pop
cmc
cmc
push
les
push
push
roll
repz
fwait
sub
xor
pop
lret
jge
xlat
das
ret
sbb
clc
in
repnz
bound
xchg
pop
add
adc
aas
jmp
jmp
popf
push
fwait
xor
aas
les
pop
cmp
add
mov
enter
xchg
les
adc
das
fidivrs
xor
inc
daa
jno
in
fld
and
jp
jo
cmp
jbe
lods
insb
cwtl
mov
jecxz
sub
push
femms
bound
je
lret
arpl
data16
and
out
mov
dec
mov
popf
data16
xorl
jmp
jae
mov
inc
ret
lahf
push
mov
fiadds
jg
imul
lcall
or
icebp
pop
sahf
and
dec
lcall
in
push
dec
ja
loopne
or
inc
push
outsb
loop
mov
popf
cwtl
mov
fadds
and
pop
imul
daa
lds
mov
mov
movsl
adc
sub
mov
out
mov
xor
add
scas
popa
mov
push
scas
and
sahf
outsb
dec
cli
jno
push
sti
and
xchg
ret
adc
mov
popa
test
push
mov
xchg
aas
fstl
inc
imul
sub
mov
cmp
pop
addb
in
mov
icebp
imul
stos
sub
jp
jno,pn
sahf
or
mov
sub
sbb
mov
test
push
sub
sahf
push
lcall
mov
xor
inc
xorl
mov
and
int3
test
xchg
popa
or
or
outsl
cmc
xchg
test
and
push
inc
jp
jae
mov
mov
dec
sbb
cmpsb
push
int
dec
mov
out
es
rclb
movsb
inc
pop
into
jl
dec
push
sbb
fldl
add
mov
test
sub
push
in
xchg
inc
xor
inc
dec
ror
les
incb
lds
ret
imul
push
aaa
movsl
mov
inc
imul
stos
ja
dec
adc
ss
in
jg
stos
test
movb
push
pop
imul
cmc
arpl
ljmp
and
test
ljmp
les
adc
lret
in
dec
jge
shl
cmova
mov
mov
enter
popf
mov
popf
data16
insb
xor
mov
xchg
popa
popf
xchg
xchg
sbb
jg
mov
sub
push
push
xchg
cmpsb
pusha
pop
inc
enter
push
pop
jecxz
cli
mov
inc
pushf
js
xor
dec
iret
jns
jle
jg
testl
ret
popa
cmp
popf
popa
sub
outsl
xchg
jb
dec
les
push
ds
fistpl
ret
xchg
sub
lods
int
icebp
into
pop
out
inc
dec
outsb
idivl
mov
mov
fs
in
repz
fistpl
add
pop
push
xlat
pop
stos
push
jno
xor
xchg
loop
pop
adc
inc
push
movb
lahf
xorl
rol
mov
sarb
lds
cs
pop
dec
mov
in
pushf
adc
cltd
fldcw
jns
dec
cmp
mov
adc
push
pop
xchg
rcrb
shl
mov
jo
out
xor
xor
inc
mov
loope
std
lret
sub
enterw
daa
mov
jns
push
mov
sti
push
xchg
popa
pop
pop
xlat
xor
in
sub
repnz
jmp
std
daa
lcall
bound
pop
lret
or
aad
outsl
pusha
jo
shlb
fucom
leave
les
adc
in
xchg
adc
and
mov
pop
dec
insl
gs
lods
aam
int
and
push
dec
xor
cmp
lcall
push
clc
mov
dec
dec
inc
and
inc
lea
mov
pop
stc
xor
and
ror
add
add
test
mov
cmpb
cmpsb
and
fildll
jl
sub
and
aam
leave
inc
mov
cld
sub
icebp
or
std
sub
ror
pop
sbb
aas
push
shlb
out
iretw
xchg
lahf
out
ljmp
mov
pop
pop
or
mov
adc
push
scas
mov
pop
fcoml
test
add
cmp
mov
mov
xor
mov
add
mov
bound
and
inc
jg
loop
arpl
and
popa
js
sbb
inc
inc
pop
pushf
movsb
dec
cmp
fsubrs
mov
and
and
sbb
and
jbe
repz
xchg
dec
sub
cmp
outsl
pop
out
adc
loope
mov
and
outsb
mov
adc
sbb
into
and
push
inc
shl
and
out
mov
sti
out
and
push
xor
test
ret
gs
lret
push
and
jl
or
mov
jae
ret
movsb
out
jge
imul
inc
lret
call
movsl
lock
jl
aaa
push
mov
jg
inc
mov
xor
mov
and
sub
mov
mov
jmp
or
popa
frstor
jno
test
push
mov
sub
fs
shr
and
inc
cmpsb
mov
pop
iret
mov
jbe
outsb
stos
pop
js
fs
and
stc
cmpsl
xchg
and
inc
push
jns
xchg
fbld
out
arpl
jp
adc
pop
pop
imul
and
aad
and
mov
pop
loop
mov
jmp
mov
push
les
and
push
inc
push
clc
and
dec
xor
and
movsl
push
ret
outsl
int3
mov
sbb
mov
jae
popf
and
aas
loope
lock
popa
js
aam
and
mov
repz
push
popa
push
sahf
or
sub
and
cmpsb
adc
xchg
xor
pop
inc
jmp
dec
pop
js
addr16
mov
adc
aam
add
adcl
cld
inc
in
and
imul
add
and
cli
mov
imul
adc
push
pop
lret
mov
in
out
push
mov
lock
and
or
cmp
xor
dec
insb
popf
cmp
popa
xor
and
xchg
lcall
fadd
lods
mov
mov
cli
aad
les
mov
repnz
pop
push
cmc
pop
test
and
shlb
sti
pop
das
mov
dec
or
or
inc
outsl
ja
mov
and
ds
and
lret
jnp
aad
mov
dec
fs
xchg
fdiv
push
lahf
out
and
inc
in
mov
mov
ret
aad
add
int
adc
and
mov
loope
dec
out
and
test
and
sbb
repnz
add
jnp
pusha
test
jecxz
icebp
fsubl
fisubl
fucomi
dec
fdivrs
xor
inc
cmp
sbb
push
mov
imul
and
stos
or
sub
andl
repnz
es
and
lods
in
bound
shll
mov
pop
setle
add
push
add
mov
xchg
outsb
mov
cltd
or
lods
mov
push
mov
in
add
adc
pop
das
push
mov
push
sub
sbb
stc
push
pusha
std
cmpsb
mov
mov
popa
adc
in
mov
jnp
jbe
lods
adc
sbb
push
or
scas
lahf
icebp
out
aam
fs
sar
mov
in
sub
es
aad
jb
and
test
scas
arpl
and
adc
out
int
mov
mov
inc
and
pop
cmp
mov
test
mov
xchg
and
xor
rolb
out
jbe
sub
stc
mov
push
stos
xchg
movsb
adcb
and
jl
fadd
or
das
fdivrs
shll
lods
adc
aaa
shll
ljmp
insb
and
jmp
orb
loopne
cltd
shlb
shlb
xchg
cwtl
mov
in
add
lods
clc
lds
jl
frstor
rcll
loop
in
push
mov
lret
and
inc
jle
and
pop
cmp
cs
in
insl
jecxz
lock
inc
jb
push
arpl
ret
lods
mov
repz
xchg
fistl
cmp
inc
push
mov
and
pop
mov
insl
jge
mov
je
adcl
or
jmp
movsl
aas
andb
jno
cltd
xor
xchg
and
pop
pushf
int
and
sbb
mov
ljmp
jmp
xor
ror
cltd
sahf
mov
and
jl
mov
xor
and
stos
cmpsl
rcrl
push
les
cmp
and
inc
mov
add
arpl
dec
leave
shll
lret
add
or
pop
and
mov
and
mov
push
fwait
pop
das
pop
lds
jmp
jbe
and
pop
dec
mov
and
pop
dec
fcomps
cmpsb
test
stos
test
push
lds
xlat
pop
pusha
cmp
lret
mov
inc
popf
inc
push
add
jle
mov
and
push
fdivrl
push
insl
sbb
and
in
daa
mov
cmc
and
mov
or
add
ljmp
xor
idivb
mov
mov
push
fsubrl
push
dec
outsb
and
shrb
cmpsl
mov
mov
div
inc
sbb
cld
push
mov
xchg
or
out
and
ret
and
gs
and
add
pop
mov
outsl
cmp
add
mov
lahf
bound
sub
pop
and
jp
dec
bound
nop
xor
mov
jo
insl
push
and
xor
inc
mov
les
pushf
pop
pop
cwtl
mov
adc
out
stc
leave
jg
add
sbb
sbb
and
imul
and
shll
loope
dec
mov
ds
and
mov
jg
jbe
sub
repnz
pop
xchg
and
jno
orl
hlt
or
mov
pop
xor
xchg
inc
cltd
mov
sub
add
sbb
dec
cmc
shlb
jo
test
and
adc
out
push
add
sbb
fbstp
add
paddsb
and
into
inc
outsb
cltd
out
mov
pop
and
imul
loop
add
or
call
mov
les
inc
sahf
mov
jge
arpl
enter
push
and
sub
inc
inc
mov
push
sub
mov
xor
and
dec
or
xlat
pop
xchg
mov
lahf
jns
les
aad
dec
repnz
dec
movsl
in
mov
sub
xor
dec
pop
dec
or
aaa
pop
dec
cmp
inc
add
stos
xor
inc
jl
sbb
jp
cs
test
push
std
xchg
push
lea
movsl
dec
mov
mov
or
and
sbb
daa
push
jo
xchg
mov
sbb
in
std
fsubrs
outsb
mov
jnp
testl
cmpsl
fcomip
mov
xchg
orl
xchg
imul
imul
mov
sbb
aad
mov
and
repz
fld
loopne
mov
enter
dec
push
aad
arpl
subl
jbe
cmp
out
ja
sti
add
dec
ja
mov
dec
push
xchg
jae
ja
push
in
push
sahf
jb
and
jae
cmp
cvtpi2ps
les
stos
dec
mov
arpl
roll
xor
and
push
pop
or
or
and
andl
mov
cmp
push
mov
mov
jg
aaa
imul
sti
outsb
push
mov
ja
or
outsl
push
jnp
out
movsb
xchg
sarb
jb
sub
pop
fcoms
inc
push
jbe
fsubs
popa
xor
jb
aam
insl
sub
cmp
insl
arpl
and
xor
outsl
cwtl
or
outsb
jb
les
pop
cli
hlt
jnp
enter
fnstsw
sub
fcompl
arpl
bound
or
stos
push
sbb
enter
ret
inc
dec
sti
das
adc
mov
pop
aas
outsb
in
mov
push
stos
cmp
ret
cli
leave
movsl
into
divb
add
pop
cmp
add
pop
jb
mov
adc
mov
repnz
orl
adc
fs
jnp
jo
sub
sub
push
add
je
ds
lock
out
bound
stos
stos
fdivrs
and
fisubrs
jp
xchg
xor
dec
popl
push
sub
aaa
mov
mov
xchg
enter
xlat
mov
cmp
or
icebp
jns
cltd
fisttps
aam
in
or
jne
callw
jle
or
mov
sub
and
insb
jmp
and
xchg
xchg
or
cmp
jmp
ljmp
decl
sahf
xor
sub
mov
imul
jg
repz
jb
adc
ficomps
dec
inc
iret
enter
or
mov
nop
sbb
popa
mov
movsl
inc
inc
arpl
lea
leave
je
jno
into
sbb
push
add
jb
sti
imul
gs
ja
in
sti
dec
push
xor
jmp
push
xor
out
and
js
inc
add
mov
idivl
pop
into
in
mov
stc
add
mov
into
les
imul
test
andl
int3
xchg
sub
jecxz
loopne
pop
lock
xchg
arpl
xor
sub
and
mov
mov
hlt
imul
add
ja
mov
hlt
jno
inc
repz
sbb
adc
mov
in
and
icebp
rolb
pop
mov
sub
sbb
das
jne
loope
jae
xor
shll
std
lret
xor
sarb
ljmp
hlt
test
sub
in
popa
test
jge
imull
xchg
insb
or
mov
xor
mov
enter
lahf
mov
jmp
xor
mov
pop
enter
and
xor
out
and
loopne
cmp
xor
push
xlat
les
testb
pop
mov
mov
push
sti
and
mov
dec
cmp
push
int
stc
xlat
shll
mov
dec
sub
fwait
mov
pop
push
ja
adc
mov
and
adc
les
push
addl
push
bound
imul
mov
add
mov
dec
insb
stos
scas
mov
ret
or
jae
ret
xchg
sbb
or
dec
push
and
or
fisubs
iret
mov
cmp
cmp
andb
frstor
out
sbb
les
mov
inc
aad
adc
adc
in
xchg
lahf
leave
sub
fildl
in
lcall
pusha
jg
push
cmpsb
mov
dec
push
lds
add
add
scas
push
and
adc
movsb
cld
sbb
outsl
aaa
repnz
imul
arpl
adc
les
nop
ficomps
and
test
jns
les
flds
adc
push
cmp
add
iret
pop
ja
sbb
xorl
movsb
movsb
add
pop
shlb
movsl
jecxz
xchg
ficoms
dec
pop
xchg
leave
subl
dec
lret
ljmp
hlt
adc
rcr
xlat
and
out
inc
popf
les
imul
and
jnp
pushf
test
add
bound
push
mov
ss
jae
cltd
jmp
inc
js
cltd
les
sub
jge
mov
out
stos
sahf
pop
repnz
dec
xchg
pop
outsl
and
ss
popl
scas
xor
sub
mov
pop
fists
leave
xchg
dec
fldenv
aad
inc
test
fimull
daa
and
mov
sbb
scas
int
lea
mov
out
xor
xchg
cmp
arpl
icebp
shl
xchg
dec
and
mov
and
fs
dec
adc
push
xor
sub
insb
stc
mov
js
inc
push
ljmp
mov
cmp
xchg
arpl
adc
and
cmp
push
mov
inc
xchg
das
adc
aam
pop
in
mul
pop
push
movsb
mov
pop
xchg
cmp
push
jno
cmp
sbb
cld
pop
inc
jl
xor
jp
out
push
insb
and
sub
jnp
dec
xor
sub
and
cmpsb
in
cltd
and
popf
imul
pop
test
movb
push
mov
fbstp
incl
xor
lds
cmpsb
cmp
pop
inc
and
mov
aas
jl
mov
inc
insl
mov
out
jns
pop
xor
push
or
push
cmp
fwait
cmpl
and
push
xchg
hlt
addr16
mov
and
aad
lods
cmp
stos
pusha
fisttpll
lret
jmp
jl
or
fwait
mov
pop
in
jb
sub
out
and
rcl
sahf
xor
sbb
mov
and
cs
and
aaa
and
add
sub
out
jbe
call
inc
in
pop
push
cli
test
and
adc
sbb
sbb
and
push
rol
cltd
and
jb
jge
push
and
add
mov
lods
and
js
dec
call
stc
jecxz
lds
and
fcoml
andb
sahf
mov
scas
pop
int
adc
push
out
adc
out
and
out
sub
mov
add
ljmp
movsb
mov
inc
inc
test
loopne
add
orl
imul
dec
add
daa
dec
and
mov
and
fwait
subl
add
add
lea
jecxz
mov
adc
jae
dec
cmp
testb
mov
xchg
in
jecxz
subb
jmp
inc
jne
daa
mov
and
sbb
in
arpl
push
mov
sub
push
and
mov
iret
aaa
and
push
push
dec
daa
cmp
cmp
mov
xchg
test
testb
mov
enter
dec
insb
mov
shll
icebp
or
nop
hlt
push
sbb
repnz
ljmp
mov
ret
jns
sbb
cmp
enterw
or
loopne
inc
sbb
mov
iret
cmp
sbb
leave
dec
jmp
outsl
mov
shrl
inc
xlat
and
mov
ret
adc
push
adc
mov
popf
repz
ja
mov
iret
aas
add
ss
inc
pop
jge
pusha
ss
movb
push
ret
fs
xchg
pop
cmp
cmp
add
scas
bound
xchg
fwait
cmpsb
movsb
jl
sub
inc
bound
add
mov
or
inc
mov
mov
cwtl
hlt
dec
add
iret
jge
inc
iret
in
shll
push
daa
in
ret
movsl
fistpl
cmpsb
pop
lahf
arpl
dec
adc
xchg
jp
sub
imul
mov
push
stc
and
push
lea
imul
clc
xor
fcmovnu
push
inc
loop
adc
add
or
or
dec
cmp
inc
arpl
inc
mov
cmp
jns
cmp
mov
lcall
and
mov
jecxz
enter
adc
aas
inc
cmp
outsl
dec
fistpll
jae
xor
add
jl
inc
cmp
out
and
test
inc
lcall
pop
sub
inc
popa
sahf
cmp
xchg
imul
std
shlb
inc
mov
arpl
loope
sub
or
cli
dec
inc
lret
jo
in
pop
pushf
mov
push
cmp
jp
and
mov
les
mov
test
push
sub
inc
sbb
pushf
adc
call
fisubs
sub
mov
cmp
mov
pusha
and
mov
jge
icebp
jns
pop
mov
into
pop
in
sarb
xchg
or
and
add
cmp
and
cmp
and
nop
cmpsb
cmp
mov
popa
cmc
dec
pop
repnz
push
imul
lahf
cmp
fimull
rcll
mov
pop
les
sbb
jns
push
sbb
enter
fmul
repz
and
pop
aad
cs
push
mov
dec
frstor
jno
in
cmp
stos
loope
fmuls
and
dec
nop
cld
mov
in
add
mov
mov
and
sbb
cmp
pop
mov
mov
bound
add
xor
lods
sbb
and
ljmp
jg
jnp
push
dec
into
and
jno
sub
cmp
push
jg
sub
les
or
cld
push
xor
jg
and
xor
je
aad
in
andb
sbb
xchg
mov
aas
and
loopne
fpatan
ret
and
xchg
adc
fdivrs
js
and
xorb
mov
xor
fildll
shlb
lea
test
add
mov
mov
mov
into
adc
cltd
inc
sbb
inc
pop
imulb
push
and
popa
jbe
or
js
and
xor
xchg
cltd
mov
xor
mov
and
cld
fsts
dec
das
sub
and
cmpsb
cli
ljmp
std
cmp
xor
scas
in
add
int
fmull
mov
and
inc
push
lods
add
out
cs
adc
add
and
push
jnp
xchg
mov
loop
push
aad
cmp
ret
sbb
and
add
and
jecxz
xchg
ss
and
insb
jle
xor
pop
xchg
mov
and
das
pusha
mov
and
call
fiaddl
dec
adc
int3
shll
mov
cs
imul
int
adc
push
lret
xchg
push
or
add
and
push
popa
xor
and
pop
adc
leave
insl
fwait
cmp
inc
mov
and
sub
jle
ss
and
adc
xor
and
aam
fucomip
push
lret
lret
mov
cli
and
jae
mov
mov
pop
pop
and
mov
test
cmp
and
cld
sub
dec
adc
adc
bound
int
aad
iret
add
add
dec
mov
jns
xchg
xor
pop
dec
xlat
dec
fidivrs
in
jge
inc
andl
js
sbb
xchg
add
jbe
sahf
dec
xorl
jne
cmpsl
mov
push
ja
in
mov
or
and
scas
cwtl
enter
out
inc
mov
push
xchg
aas
dec
int3
insl
jne
sub
and
push
shrl
repz
scas
mov
adc
push
lret
dec
xor
and
xor
jg
jp
cmp
mov
lods
je
xor
mov
movsl
call
add
in
shlb
iret
cmpsl
loope
test
dec
rcr
xor
jno
mov
sbb
xchg
pop
ror
mov
jge
sbb
js
push
sbb
sub
sbb
enter
xor
cltd
xchg
aad
dec
outsl
push
mov
jge
pushl
je
cs
xchg
mov
and
push
js
pop
out
and
pop
pop
and
xor
in
repnz
xchg
fistps
sub
mov
adc
leave
or
jbe
or
inc
adc
mov
sti
je
cmp
pop
and
mov
insb
lods
jmp
fstpl
mov
sub
mov
les
cmc
outsb
and
sti
ja
cmp
daa
xchg
inc
mov
and
inc
mov
and
mov
pop
mov
in
sbb
and
cwtl
call
pop
fists
repz
pop
and
inc
addr16
and
sbb
out
xor
xchg
cmp
pop
and
pop
push
and
xchg
mov
stc
sub
aaa
xor
andl
mov
ds
push
mov
add
or
rolb
sub
push
fs
out
pop
mov
addr16
xchg
pop
add
sbb
int3
lahf
rclb
mov
pushf
into
pop
testl
jmp
or
add
and
push
insb
mov
pusha
test
lret
push
cltd
push
jno
mov
adc
and
out
ja
orl
xchg
cmpl
punpckhwd
mov
lret
ja
jae
cmc
jmp
fmulp
out
push
cld
ficoml
inc
jecxz
and
lcall
push
sub
and
mov
xor
push
push
mov
and
jnp
lock
jae
xchg
push
cs
and
mov
push
stc
sub
or
mov
pop
rcll
push
je
jno
jns
das
lods
adc
and
lcall
hlt
dec
push
pop
popa
sub
sbbl
and
mov
inc
pop
popa
in
imul
xlat
or
loope
lahf
jb
and
add
sbb
push
xchg
and
pusha
loope
outsl
and
mov
xchg
movl
jle
scas
das
and
ret
sub
filds
jge
and
mov
sub
aad
push
int3
in
and
jns
jb
stos
xor
faddp
ja
leave
mov
daa
sub
or
arpl
mov
cmp
out
and
fisubs
xchg
in
ljmp
and
mov
and
dec
mov
or
scas
and
out
movsb
mov
and
and
rclb
movsl
sbb
lock
cld
in
sysenter
and
sbb
xchg
insb
push
xor
push
sub
test
and
test
sub
int
pop
fcomps
loop
mov
lea
and
outsl
insb
dec
push
xor
push
and
out
in
adc
jge
inc
fstps
inc
inc
jp
insb
movb
mov
mov
xor
xchg
dec
push
xchg
and
fnstenv
pop
and
xchg
and
mov
insb
and
jmp
in
and
fs
mov
movsl
push
and
push
xor
and
jmp
and
fsts
frstor
aad
daa
xor
or
js
dec
and
std
xor
sub
ss
add
mov
mov
pop
fstl
stc
int3
add
sub
cwtl
push
outsb
and
popf
mov
adc
int3
or
push
inc
push
mov
lods
jmp
fld
leave
aad
and
pop
sub
es
stos
jae
in
mov
pusha
movsb
fadds
push
into
push
das
pop
jecxz
mov
shl
and
add
test
aad
popf
ret
int
inc
jnp
fwait
inc
pop
or
pop
cltd
sub
xorl
lahf
xchg
pop
adc
push
and
xchg
out
cwtl
js
inc
sub
mov
inc
leave
das
jno
aaa
loopne
cmp
arpl
pop
and
cltd
mov
sbbb
mov
add
popa
push
outsb
iret
sbb
lahf
out
and
xor
out
int3
xchg
mov
mov
and
xor
xor
xchg
loop
fcomi
outsl
dec
cmp
sbb
packuswb
push
dec
xchg
cmpsl
jecxz
or
clc
xchg
mov
mov
and
push
and
mov
test
fxtract
mov
pop
mov
and
rol
adc
or
sbb
and
scas
mov
icebp
and
and
insl
inc
mov
sub
loop
mov
jle
fwait
cmp
fsubrs
pop
inc
and
aas
dec
out
and
lea
and
sub
jno
jle
shlb
call
xor
and
jnp
lea
jo
and
mov
jns
sbb
inc
cmpsl
lahf
push
movl
aam
out
inc
push
addb
jno
sbb
and
xor
inc
popf
mov
ds
mov
cmp
pop
out
bound
movsb
lahf
stos
hlt
pop
sub
mov
lea
adc
mov
and
pop
sbb
push
push
into
xchg
ret
shll
xor
test
adc
mov
inc
and
rorl
inc
and
test
lea
xchg
cmp
cmp
xchg
xor
add
sbbl
outsb
mov
mov
out
sub
lret
addr16
add
xchg
fwait
pop
out
bt
sbb
mov
add
cmc
loop
xor
dec
and
adc
jb
inc
xlat
and
jg
push
dec
push
aaa
and
fyl2x
xchg
xor
das
enter
je
or
add
movsl
les
jns
push
mov
and
pop
and
and
sahf
xchg
sub
aas
and
imul
and
pusha
cmp
fistpl
inc
jbe
outsb
mov
jae
sub
jge
mov
pop
loope
xor
cmp
mov
sub
aad
fs
jp
add
outsl
sub
push
sarb
pushf
popf
and
dec
notl
dec
and
sahf
ret
clc
lret
mov
pop
and
xchg
dec
and
sub
dec
mov
mov
fsubl
insb
in
lods
mov
mov
jg
clc
and
cmpsl
and
and
daa
push
lods
pushf
or
adc
mov
arpl
loope
inc
movsl
xor
cld
shrb
dec
pop
push
cld
mov
cmp
add
add
or
sub
dec
repz
and
dec
or
mov
add
aaa
pop
in
mov
cmp
mov
sbb
in
sub
cmp
cwtl
add
xchg
nop
sub
hlt
les
data16
mov
movsb
jns
repz
dec
mov
addr16
iret
in
adc
and
xor
inc
mov
lods
mov
jmp
xor
and
and
lcall
leave
sarl
mulb
sub
xchg
sbb
push
mov
enter
dec
add
dec
arpl
dec
inc
pop
fistpll
nop
adc
imul
pop
jge
xchg
mov
jmp
jge
ljmp
fwait
adcl
xchg
bound
push
push
f2xm1
lcall
test
xchg
lahf
lea
mov
lahf
arpl
gs
jb
mov
mov
out
fisttps
mov
and
ret
pop
pop
xchg
lock
sub
jmp
test
mov
fcmovu
mov
enter
pop
xor
push
pop
popf
inc
in
adc
inc
sbb
insl
mov
les
testb
rcl
mov
flds
jns
adc
fidivs
mov
xchg
popa
nop
pop
ret
arpl
enter
aaa
lods
sub
jle
mov
xor
es
jae
and
and
sahf
xchg
mov
mov
mov
les
pop
lods
pop
sbb
mov
sbb
xor
inc
fstpl
mov
scas
mov
dec
arpl
ret
aas
stos
mov
mov
paddsb
lods
xor
lret
push
rcrb
in
js
jecxz
sahf
push
aam
and
xchg
add
xchg
and
xchg
adc
cmp
loop
add
sbb
mov
pop
aaa
scas
arpl
pop
adcl
xor
xchg
enter
pop
ss
mov
and
aad
jnp
loop
jno
adc
stos
and
mov
enter
dec
add
xor
lahf
and
push
je
out
inc
inc
add
mov
pushf
rclb
psrld
xor
cwtl
in
jae
add
sbb
pop
repnz
mov
dec
test
ljmp
loope
mov
and
ret
jmp
stc
out
sar
dec
fisubl
cmp
inc
push
sbb
dec
fs
out
mov
inc
jns
in
inc
subb
xchg
xor
push
aaa
jecxz
adc
inc
movups
arpl
mov
test
cmpsl
stos
addb
mov
in
cmp
adc
dec
sub
aaa
dec
daa
or
int3
sbb
ret
mov
stos
js
push
call
sti
frstor
push
push
cmp
sti
xchg
inc
loop
mov
lahf
push
mov
dec
xor
push
jp
stos
outsl
pop
shl
mov
inc
adc
int3
xor
mov
push
or
fimull
push
xorl
adc
pop
test
or
and
push
add
inc
loop
xchg
sub
aaa
xchg
or
sub
inc
cmp
push
mov
jp
pop
cmp
pushf
gs
dec
jge
filds
or
or
in
mov
js
into
mov
mov
cmp
inc
xchg
inc
ret
lret
lds
outsl
lret
push
pop
push
fistpll
or
jbe
dec
mov
fstpl
dec
out
mov
int3
imulb
add
xchg
and
addl
das
imull
lahf
cs
inc
xor
pop
xor
jg
jmp
loop
xchg
dec
pop
jle
es
sti
dec
xchg
sub
pop
or
sahf
xor
add
jo
clc
test
dec
mov
ret
jge
jecxz
js
cltd
sahf
outsb
lods
test
aad
dec
mov
sbbl
rcll
movsl
outsl
xchg
lods
movsl
fisubs
negb
cmp
mov
sti
add
add
sbb
daa
adc
xlat
out
pop
adc
call
or
pop
stc
negb
dec
mov
sub
insl
add
add
daa
aam
xchg
jp
adc
js
insl
and
pop
repz
mov
cmp
les
daa
fcoml
arpl
sub
jae
mov
mov
loop
clc
addr16
push
testl
push
insl
lea
repz
lahf
add
repnz
inc
jo
mov
xor
sub
ja
leave
mov
outsl
mov
dec
cmp
mov
rorb
push
ja
dec
bound
and
aas
stc
xor
mov
mov
and
lcall
push
pop
push
aaa
fwait
inc
add
mov
andb
enter
adc
cmc
stos
or
das
dec
gs
popa
sbb
adc
pop
rcrl
icebp
es
int
fs
push
stos
nop
outsl
xlat
pop
xor
and
roll
mov
ja
cmp
xor
pop
mov
jge
xor
movsb
mov
sbb
mov
dec
js
inc
adc
dec
xchg
mov
mov
jno
sbb
jno
imul
xchg
aaa
xchg
pandn
rorl
xor
xchg
jb
sti
fidivs
dec
fildl
pop
loope
mov
and
cmp
pop
push
cmp
xchg
pushl
mov
mov
xor
lods
and
pop
int3
stos
rcr
and
enter
jg
stc
out
xchg
stos
xor
mov
pop
or
icebp
out
pop
fs
incb
pop
add
lods
dec
lret
fistps
lea
daa
push
repz
add
jnp
jne
xchg
mov
and
rolb
or
sbb
mov
xorb
loope
leave
sub
xor
cwtl
jl
jb
imul
outsb
or
roll
in
mov
dec
fwait
add
mov
add
cmp
push
aas
xor
stc
dec
jb
xchg
out
fistl
mov
popa
xchg
cmp
xchg
test
cmp
dec
mov
leave
and
push
push
gs
push
mov
lock
fisttps
jl
or
or
cwtl
stos
mov
inc
adc
xor
mov
jle
loopne
mov
mov
sub
sahf
and
out
push
inc
adcb
push
xchg
sub
jo
sub
pop
scas
shrl
fiadds
and
hlt
insb
loopne
sti
sub
jp
mov
rol
add
cld
jne
xor
inc
inc
insl
clc
push
cmp
in
or
jle
and
jl
xchg
out
adc
add
ret
push
data16
dec
cmc
hlt
sbb
jecxz
sub
aas
pop
mov
and
add
dec
dec
jmp
and
push
inc
dec
and
dec
xchg
push
jmp
pushf
repnz
sub
je
icebp
sub
cmp
orl
sub
sbb
and
xorb
adc
lret
and
cmp
arpl
fsubl
insl
loopne
lods
push
xchg
inc
loope
sahf
adc
pop
mov
inc
fildl
sbb
scas
flds
repnz
push
add
push
and
popa
pop
gs
cmp
xor
mov
xchg
mov
repnz
in
vmwrite
push
aam
mov
loope
add
xor
inc
insl
and
push
push
pop
lds
adc
out
or
ret
add
pop
adc
cmp
and
sub
add
test
lahf
loop
jp
dec
and
mov
movsb
stc
aaa
add
cmp
icebp
fimuls
jae
jne
mov
xchg
mov
aad
movsb
loope
scas
lods
push
or
dec
fdivrl
add
mov
stos
and
push
sti
call
and
pop
ret
ljmp
ud2
pop
mov
and
mov
cmp
arpl
push
and
cs
lret
or
in
inc
ret
and
in
test
fisttps
ss
stos
push
shlb
cmpsl
fiadds
cmpsb
sbb
dec
or
rorb
xchg
push
cmpsl
aaa
or
dec
mov
ja
and
mov
ljmp
sub
cmc
xor
xor
and
aam
ficoml
xchg
mov
ja
sub
and
outsb
jnp
and
add
aaa
in
cmpsl
and
or
shll
test
xchg
imul
adc
cmpsb
or
iret
mov
and
jno
nop
or
cmp
sbb
jg
addb
movsb
jae
test
aam
sub
adc
ljmp
aad
shlb
loopne
and
jo
inc
add
xor
dec
bound
pop
sub
sub
fdivr
stos
in
imul
cwtl
pop
pop
jno
mov
cmpsb
or
add
xchg
cs
add
ret
and
lea
jg
mov
negb
xchg
add
pushf
cmp
sub
outsl
imul
into
adc
adc
loope
inc
pop
and
add
rcl
fwait
aas
and
cmovae
sub
mov
ljmp
int
out
rcrb
test
adc
push
test
pop
out
lcall
test
jbe
inc
and
xchg
leave
in
xor
aam
sbb
lret
sub
rol
push
cmpsb
cwtl
add
mov
int3
jmp
or
jnp
dec
mov
aad
sbb
lods
and
jge
push
es
je
nop
ds
call
lahf
subb
hlt
add
inc
xchg
cmpsl
cwtl
aad
adc
sahf
inc
xor
jne
and
mov
out
push
and
mov
and
mov
jecxz
xchg
xchg
enter
jo
sbb
fs
cwtl
leave
and
fucomi
aaa
and
lods
and
loopne
enter
mov
pop
jge
push
xor
add
in
loope
arpl
jmp
mov
inc
sbb
fwait
pop
mov
mov
mov
ficomps
and
push
xor
sub
push
mov
daa
scas
cltd
adc
push
jge
ret
mov
cwtl
in
jmp
cmp
mov
adc
fisubl
fistpl
sar
stos
cmp
pop
and
push
hlt
mov
inc
scas
jnp
xor
lods
pop
imul
mov
mov
int
and
test
xchg
adc
cmp
call
outsb
mov
cmp
test
fisttpll
push
or
shlb
cmp
insl
loop
add
mov
cld
push
mov
stc
dec
xchg
add
and
and
into
cli
mov
cltd
inc
insb
jb
inc
xchg
dec
out
and
pop
jmp
cmp
mov
and
jb
dec
push
and
and
outsb
cltd
movsb
sahf
inc
js
sbb
jns
shlb
mov
shll
mov
sub
sub
pop
loope
lds
adc
pop
fdivrl
loopne
test
and
packuswb
and
xchg
xor
inc
pop
pushf
and
or
pop
sub
aaa
xor
and
in
sub
movnti
loopne
adc
cmp
test
popa
cmpl
sub
imul
or
loope
xchg
fnstcw
and
pop
mov
jp
sti
or
dec
add
push
ja
and
mov
push
and
sarb
jge
xchg
adc
pop
and
iret
cmp
jp
shll
nop
mov
daa
pop
rorb
xchg
and
mov
and
js
pop
das
ret
rcr
and
cmp
xchg
jge
dec
xchg
cmp
and
jecxz
movsl
test
mov
and
mov
and
push
mov
repnz
adc
mov
cltd
mov
andb
lret
and
push
jo
sub
adc
cltd
roll
and
and
outsl
aaa
push
and
lcall
adc
hlt
push
movsb
js
daa
and
jns
test
ret
xchg
mov
pop
and
orb
out
or
and
and
xchg
flds
clc
icebp
fwait
or
pop
test
and
ljmp
and
adc
and
add
testl
and
dec
fs
push
or
sbb
xor
and
dec
ret
loop
sbb
es
pop
sbb
pop
pop
add
sbb
in
daa
in
jge
inc
push
leave
push
jbe
jo
and
or
inc
arpl
insl
sub
cmpsl
cmpsb
inc
shlb
mov
mov
mov
pop
and
jmp
jnp
fwait
pop
fimuls
adc
fistpll
subl
push
scas
das
and
call
dec
lds
sahf
fsubp
testl
rcrb
mov
mov
fwait
sub
mov
lods
bound
lds
sub
adc
fs
icebp
dec
mov
leave
push
sub
jbe
nop
mov
fistl
xor
and
pop
push
fldenv
addb
jl
idivb
lahf
or
dec
adc
cmp
imul
aad
xchg
inc
pop
xor
test
jns
cmp
daa
push
out
filds
lods
xchg
retw
push
or
mov
sbb
push
jo
daa
into
sbb
insl
lds
repnz
addl
scas
mov
lahf
mov
xchg
xor
dec
add
bound
sbb
int3
xchg
jp
sub
addr16
jbe
push
ret
icebp
fwait
stos
outsl
icebp
adc
cmp
cli
push
idivb
xchg
movsb
ret
xlat
sahf
mov
push
and
pop
test
sub
hlt
sbb
xor
loop
inc
dec
pop
scas
js
and
pop
jmp
clc
push
add
aad
adc
out
icebp
dec
popa
adc
mov
sbb
cmpl
cmp
popa
jb
cs
sbb
outsb
shll
pushf
cmp
inc
pop
sbb
sub
sub
shrl
and
push
jno
in
cmp
or
insb
cmpsl
subl
mov
ljmp
int
enter
cmc
jae
out
sbb
aam
lea
cmp
subl
xlat
hlt
mov
mov
jl
scas
mov
fldcw
jecxz
mov
js
sbb
mov
roll
cmp
loopne
stc
int
push
rolb
mov
aad
bound
cld
sub
ja
sbbb
sbb
inc
sbb
fsubs
xchg
imul
in
xchg
xor
rcrl
in
jno
fistl
and
inc
xor
sub
push
fimull
jge
dec
mov
mov
ret
cld
insb
push
jne
mov
dec
js
les
mov
dec
popa
fisubrs
lods
loope
sbb
in
cmp
cli
lret
aam
repz
les
or
dec
lcall
mov
adc
jns
inc
popf
push
imul
mov
fs
imul
outsl
sub
pop
dec
sbb
outsb
sahf
pop
popf
outsl
pop
andl
imul
add
and
cmp
ljmp
cmp
adc
lock
push
das
and
pop
mov
test
addr16
icebp
dec
sbbb
test
sub
roll
popa
lahf
jl
and
xor
sub
dec
cmpsl
icebp
cli
enter
adc
mov
mov
and
dec
and
or
mov
mov
mov
inc
rcrb
in
mov
dec
jb
sbb
das
repz
aas
enter
jae
pop
sbb
xlat
jle
push
rcll
popa
enter
stos
pop
out
sbb
sub
aas
shl
jle
ret
test
mov
xor
or
lods
jle
enter
jns
inc
pop
call
scas
adc
int
popa
int
or
xchg
lcall
in
icebp
add
sbb
cmp
xor
dec
frstor
mov
jno
cs
test
mov
xor
and
xchg
xor
rcrl
fistpll
mov
pop
or
addr16
lds
inc
aad
enter
inc
aam
pushf
dec
inc
sar
aam
rol
mov
inc
and
les
jge
or
cwtl
xchg
sbb
xor
lret
and
imul
cmp
pop
ljmp
or
pop
xchg
stos
fwait
lcall
mov
data16
fidivrl
leave
stos
nop
mov
inc
adc
mov
out
frstor
jl
negl
out
ljmp
inc
popa
dec
popf
mov
loopne
in
icebp
and
sbb
and
pushf
lcall
or
out
mov
cmp
insl
andl
cmp
and
adcl
jno
dec
and
pop
data16
popa
cltd
dec
iret
ss
dec
inc
lods
jb
ja
push
mov
loope
int
pop
adc
mov
cmp
add
adcb
fwait
iret
outsl
pusha
xor
dec
or
or
loop
mov
sub
jo
pop
sbb
cmpsb
pop
fs
add
inc
dec
cmp
test
and
jp
sbb
inc
add
sub
dec
idivb
pop
push
dec
int3
jle
je
and
mov
fldenv
xchg
mov
adc
sbb
dec
sahf
incb
ret
push
inc
dec
sub
into
xor
cwtl
push
add
lock
add
xchg
adc
pop
xchg
shll
ret
cmp
cmp
inc
mov
out
faddl
xchg
sbb
loopne
add
push
inc
xchg
bound
xchg
ret
sub
pop
pop
dec
cmp
mov
pushf
push
addr16
mov
and
lock
loope
jecxz
sbb
cmp
rep
dec
cmp
sub
push
out
fbstp
pop
adc
lret
js
push
lds
or
fcmovne
mov
xchg
out
mov
fisubrs
or
sub
out
jne
jmp
stos
pusha
clc
xor
pop
iret
aas
cld
scas
shrl
mov
leave
mov
roll
xchg
hlt
mov
dec
xchg
incb
mov
xor
rolb
leave
cmp
jno
dec
sub
inc
imul
test
cmp
sub
fsubrs
push
inc
ljmp
dec
sahf
xor
inc
adc
cmp
arpl
lods
sbb
fisttpl
rorb
pop
sbb
inc
mov
or
int
mov
mov
stc
push
pop
or
subl
je
call
push
pop
imul
cmpsl
pop
loope
adc
sti
push
xor
push
ja
xor
or
jle
jl
les
shrl
dec
lea
add
lret
mov
inc
fisubrs
ret
mov
aam
jge
rolb
mov
jns
div
mov
add
sub
cmp
aas
cmp
adc
dec
mov
in
lds
repnz
jb
mov
fsincos
add
jno
mov
enter
sub
dec
sarl
into
loop
mov
push
lds
sub
out
insl
rorb
je
push
xchg
pop
xchg
mov
mov
sti
imul
and
scas
xor
cld
sbbl
addl
lret
and
pop
sbb
les
and
xor
xor
leave
rcl
inc
add
inc
loope
cmp
push
inc
pop
aas
mov
fsubs
movsl
jl
push
ss
arpl
pop
push
pop
mov
js
dec
test
jle
jne
xor
or
fwait
rclb
or
jo
into
imul
inc
jle
fdivrl
dec
int3
std
lods
sbb
sub
ja
inc
hlt
mov
pop
cwtl
mov
loop
imul
enter
insb
test
inc
mov
cmpsb
mov
shll
or
and
lods
jl
shrb
xor
pop
push
aas
jl
jmp
fimuls
stos
enter
mov
mov
lcall
ds
decb
int3
bound
and
pusha
mov
insl
xchg
or
sbb
orb
push
fsubl
sub
jp
adc
call
movntps
es
inc
daa
test
shlb
dec
ljmp
mov
add
out
fisttps
and
or
lods
daa
push
cli
pop
xor
stc
jge
add
cltd
xchg
and
and
pop
mov
push
and
mov
xor
pusha
dec
sub
inc
cmp
scas
xchg
iret
mov
loope
mov
and
xor
push
xor
mov
int3
fimuls
push
pop
in
test
and
sti
mov
clc
lock
popf
mov
mov
and
sarl
mov
mov
ret
scas
shll
xor
imul
pushf
lods
cmc
jns
loopne
inc
adc
leave
cmp
push
and
mov
jle
push
add
inc
clc
push
push
shr
outsl
xchg
and
call
fldenv
fsubs
clc
inc
popf
push
and
pop
sub
arpl
sbb
sub
stos
jnp
rorl
pop
fsubr
loope
mov
shlb
mov
or
fisubs
flds
pop
mov
les
adc
ret
jl
lret
and
sub
xchg
push
das
and
sub
incl
lcall
xchg
push
loope
outsl
and
ret
or
sahf
pop
mov
loope
sub
pop
dec
inc
xor
add
or
jbe
mov
inc
pop
enter
jl
jle
ret
jle
push
sahf
push
ret
xor
mov
rcrl
data16
outsb
rcrl
push
xchg
ret
dec
negb
xchg
pop
out
and
push
fdivrs
les
es
in
insl
mov
movsl
dec
and
mov
out
mov
and
push
xchg
ja
mov
movsl
pop
cmp
mov
push
mov
adc
xchg
mov
xor
das
jnp
xchg
aas
nop
dec
repz
add
pop
iret
dec
ret
mov
fiadds
test
push
mov
dec
jbe
pop
gs
xor
pusha
insl
mov
push
sahf
inc
mov
loop
sbb
sub
mov
push
dec
pop
adc
les
xor
shr
cltd
add
adc
in
xor
ret
cmp
arpl
push
ffree
lcall
fsubs
mov
arpl
jno
imul
std
xchg
dec
pop
xor
les
jae
inc
aam
jns
mov
leave
push
gs
aam
lds
pop
jge
and
push
fwait
outsl
cmp
xchg
idivl
sub
pop
stos
inc
xchg
and
adc
mov
add
mov
rolb
jp
cld
xor
jne
les
lret
dec
adcb
fisttpll
lahf
jecxz
jno
cmp
arpl
xchg
jle
mov
mov
loop
mov
nop
xor
jle
aas
xchg
das
in
add
icebp
mov
rcll
js
push
imul
jg
das
dec
dec
lods
inc
in
stc
mov
pop
idivl
fistpll
imul
cmp
dec
loop
test
push
sbb
pop
or
pushf
mov
mov
and
les
mov
pop
mov
push
cs
sahf
popa
inc
inc
mov
sti
push
jg
sti
mov
sbb
stos
addr16
movb
mov
fwait
clc
out
dec
in
vshufps
or
data16
int
xchg
shll
inc
or
jae
xchg
cld
ret
push
push
ret
cmpsb
popf
lret
outsl
insl
and
or
xor
sbb
mov
lods
call
andb
pop
pop
rcll
inc
loop
loope
xchg
adc
fsubrs
add
test
enter
pusha
cmp
inc
aam
in
dec
cmpb
sbb
cld
mov
xchg
test
jno
fisttps
aad
jno
adc
fcoml
xor
xor
mov
loopne
xor
sahf
popf
inc
cwtl
adc
mov
fidivl
and
jno
ret
mov
xor
xchg
dec
leave
push
loope
lcall
cwtl
dec
cmc
mov
mov
xchg
ret
push
shl
jne
sbb
xor
stos
mov
cmc
xor
mov
add
insl
mov
cmpsl
sbb
inc
add
lods
dec
gs
dec
cmp
ja
mov
fisubrs
stos
push
jnp
mov
jno
icebp
xchg
push
xor
inc
fbstp
mov
cwtl
scas
mov
mov
adc
push
gs
cs
ret
mov
add
sbb
aaa
gs
adc
enter
fwait
cld
cmpb
test
push
repnz
pop
insl
dec
cwtl
outsl
adc
mov
loop
jg
cmp
jmp
sub
mov
scas
push
push
fisttpll
dec
insl
inc
xor
stos
add
jecxz
mov
arpl
icebp
pop
ret
mov
ret
mov
push
xor
sbb
inc
dec
cmp
push
lret
out
insl
sbb
ljmp
ljmp
dec
jo
jnp
stos
dec
int3
mov
ret
or
adc
gs
pop
les
dec
xor
in
mov
repz
xlat
data16
mov
or
fmull
and
inc
push
pop
pop
int3
ljmp
aaa
in
xchg
shll
and
sub
sub
xor
sub
mov
enter
lahf
in
jge
or
and
or
add
and
sub
push
dec
jle
jb
inc
xlat
mov
add
adc
push
aam
dec
push
jb
aam
cld
push
pop
add
int3
stos
test
cmp
inc
xor
icebp
pand
mov
in
rorb
daa
or
jbe
push
jb
xor
loope
inc
mov
mov
sbb
mov
and
cli
add
outsb
out
pop
cmp
mov
arpl
mov
adc
sbb
jecxz
arpl
xor
jle
sbb
iret
hlt
insb
lock
test
adc
sub
sub
popa
rcll
js
int
mov
mov
shll
and
cmpsl
enter
loope
leave
dec
pop
fidivl
subb
pusha
and
arpl
xchg
push
mov
fnstsw
arpl
jge
sub
les
daa
sbb
xor
jb
aaa
inc
mov
cmp
pop
dec
out
ffree
cld
repnz
jp
cmp
sbb
xchg
sbbb
and
roll
jg
lahf
aad
adc
pop
xchg
pop
int
packuswb
movsl
daa
jns
loop
mov
enter
dec
js
cmpsb
lahf
je
lret
inc
sahf
xchg
xchg
and
push
mov
push
lcall
push
into
add
into
adc
pushf
sub
inc
add
and
insb
push
adc
rorb
adc
movsl
mov
lods
test
pushf
sub
mov
xor
jmp
dec
icebp
daa
xor
fs
mov
and
lods
lods
insl
inc
xor
stos
mov
lret
or
lock
push
leave
enter
out
xchg
adcl
idivl
push
mov
aad
cmp
cld
or
xor
imul
add
xor
dec
xor
pop
xor
cmp
jno
jae
lea
and
sub
dec
mov
sub
les
dec
jle
fld
xor
insl
mov
dec
inc
je
andb
push
add
cmp
xor
js
mov
cmp
mov
mov
int
push
inc
lods
cwtl
sbb
addr16
push
lcall
or
and
ret
or
xchg
sub
loop
sahf
gs
leave
ret
imul
mov
push
mov
in
sbb
cmp
pop
sbb
jno
jns
cmp
je
gs
and
dec
shll
jle
or
mov
inc
dec
jns
enter
les
push
pop
loop
mov
cwtl
adcw
mov
cmp
iret
mov
lds
mov
rol
dec
xor
cmovbe
je
shl
imul
pusha
das
push
or
dec
dec
sbb
rcrb
sub
dec
ret
push
sbb
sbb
out
nop
leave
inc
pop
xor
xchg
call
ret
mov
pop
or
lea
add
pop
adc
jle
les
fcmovnu
xor
cmp
shlb
mov
enter
repz
xlat
popl
imul
mov
xchg
in
shll
addr16
ret
incl
iret
xor
xchg
jp
pop
dec
ret
lds
xchg
in
lods
mov
mov
enter
dec
out
aad
or
or
mov
jbe
push
sub
mov
mov
push
in
add
loope
fwait
shlb
mov
mov
pop
divl
fldl
in
sbb
test
test
daa
bound
daa
fs
cs
flds
lret
clc
mov
lret
inc
test
fiadds
jl
and
mov
and
hlt
sbb
in
je
jle
cmp
or
jns
sbb
rol
push
mov
mov
sbb
sub
and
dec
ljmp
inc
imul
js
mov
ljmp
pop
int3
out
cmp
and
sbb
enter
push
mov
outsl
and
fs
ja
mov
xchg
out
cwtl
xchg
fistps
into
test
aad
ret
aam
pop
mov
jge
test
dec
jbe
push
clc
hlt
popf
sbb
das
mov
adc
sbb
sbb
add
or
out
and
jl
inc
aad
and
or
inc
ret
pop
fcompl
sti
sbb
sub
jl
js
mov
movsb
lods
xchg
test
stos
sub
push
repz
pop
pop
lea
jecxz
push
jnp
outsb
mov
inc
mov
or
mov
adc
jge
movsb
enter
ret
scas
mov
sbb
mov
lods
add
push
fucomip
insl
dec
inc
ret
aas
and
fcmovnu
lock
mov
sub
in
cwtl
hlt
sub
leave
push
mov
sbb
arpl
test
xlat
sub
sbb
or
and
jae
dec
and
mov
lea
cmpsl
jg
daa
gs
add
jbe
fstl
sub
jb
enter
jle
ficompl
shll
push
mull
pop
orb
push
adc
sbb
inc
outsb
lret
pop
push
jmp
imul
xchg
mov
jg
aad
push
sub
xor
push
xchg
cmp
fildl
sbb
xor
ret
punpckhwd
aam
pop
sarl
addb
xchg
xchg
mov
int
inc
sub
push
orl
cli
out
xchg
and
lret
les
test
loop
jmp
dec
shll
push
xor
and
ret
imul
ret
sarl
mov
xor
inc
shrl
les
out
mov
xor
add
decl
dec
arpl
and
stos
enter
mov
jnp
mov
test
enter
cmpsl
pusha
or
outsl
in
lods
into
arpl
push
dec
inc
loope
jg
xchg
xchg
cli
push
inc
rcl
mov
faddl
fstps
sub
xchg
xor
ret
cmp
sub
push
or
jecxz
add
push
lahf
fs
leave
les
mov
adc
mov
dec
outsl
outsb
pop
adc
mov
lcall
mov
in
push
sub
loop
arpl
dec
clc
loope
mov
cmp
or
cmp
pop
cmp
mov
jmp
xchg
adc
cmp
push
add
sbb
inc
sub
fldl
sbb
sbb
aad
icebp
aas
movsl
push
arpl
cs
fnsave
xchg
or
lret
mov
daa
add
loope
int
enter
imul
subb
mov
mov
jg
pop
test
repz
jle
jecxz
scas
lahf
movsb
dec
pushf
andb
mov
int3
jb
nop
lock
sub
inc
xchg
mov
loope
pop
xchg
cwtl
cmpsl
push
add
inc
lock
dec
shlb
push
sub
jbe
cmp
mov
clc
xlat
push
mov
or
inc
bound
xchg
xor
inc
loope
popa
xchg
jbe
push
jno
pop
jns
or
pop
cmp
pusha
ja
xorl
negl
cmp
repz
and
ds
addr16
cmp
lahf
inc
negb
cmpsb
nop
xchg
das
cs
iret
add
outsb
clc
daa
les
mov
jno
xchg
aam
jg
ret
cwtl
dec
dec
inc
ds
lds
dec
or
xor
or
icebp
dec
xchg
test
push
rcr
push
imul
mov
lods
pop
xlat
lods
jnp
inc
pop
xchg
cmp
xchg
stc
fidivrs
add
jae
mov
mov
inc
inc
lret
ja
adc
push
sub
dec
dec
rorb
and
adc
mov
xchg
mov
test
xchg
xlat
mov
and
es
and
mov
push
inc
subl
je
pop
fcmovnbe
lods
mov
fwait
ja
pop
or
and
add
adc
push
imul
sbb
xlat
mov
shl
or
imul
add
pop
sbb
cmp
xor
push
xchg
outsl
xor
aam
sub
iret
std
stos
cmp
xor
add
les
or
jge
mov
ret
imulb
jg
outsl
pop
pushf
jmp
bound
and
pop
pop
fwait
jno
leave
jns
in
sbb
movsl
les
cmp
sub
bt
fmull
xchg
movl
sbb
xchg
add
js
push
mov
push
into
fistl
xor
or
daa
scas
xchg
dec
or
dec
insb
xchg
int
push
fmull
cmc
push
jmp
stos
inc
outsl
fists
xchg
ljmp
subb
mov
jecxz
inc
fucomp
pop
sbb
ret
xchg
ljmp
mov
pop
sbb
in
and
pusha
pop
int
stc
loope
mov
ja
mov
add
pusha
fbld
cs
loopne
loop
sub
enter
mov
mov
mov
mov
loopne
ja
xchg
orl
inc
movb
in
mov
or
arpl
inc
mov
xchg
cld
push
inc
dec
sub
inc
adc
sbb
mov
test
and
aas
sub
adc
sbb
mov
setge
mov
outsl
insl
les
xor
data16
mov
jns
lret
dec
ja
movsl
ds
xor
ljmp
jae
fildll
push
rorl
sahf
fisubl
les
cmp
jl
test
dec
les
mov
fisubrl
ret
cmp
cld
js
adc
imul
inc
hlt
shlb
arpl
push
mov
bnd
adc
testb
xor
lods
pop
in
ret
scas
aad
les
cmpsl
sbbl
fcmovnbe
mov
xlat
stos
sarl
arpl
sub
and
enter
jns
outsb
inc
or
out
jge
or
mov
in
imul
dec
push
sbb
sar
out
xchg
sarb
mov
out
sbbl
adc
cmpsl
xor
gs
dec
out
jns
dec
aam
and
adc
lods
stos
repnz
stc
inc
push
sub
add
test
sbb
adc
fsubr
data16
and
push
mov
xchg
and
or
cs
jns
sub
les
xchg
and
push
inc
add
fsubl
loop
push
into
enter
xor
repz
mov
loopne
mov
pop
sti
and
ss
mov
in
and
cwtl
int3
shl
jle
sub
movsl
mov
and
enter
icebp
cmp
xchg
xlat
xchg
and
xchg
popf
jp
and
and
out
daa
and
push
mov
fildll
and
and
sbb
adc
cli
mov
sub
in
lods
and
lret
je
cmp
shrb
dec
and
lods
pusha
and
testl
in
xor
add
adc
or
fidivs
cmp
mov
mov
ja
xor
fadds
pusha
lods
push
in
sbb
jae
mov
leave
and
rorl
in
xchg
push
sub
mov
pop
cmp
and
pop
inc
push
and
and
aam
and
jmp
insb
subb
and
cmp
hlt
and
scas
xchg
and
dec
add
jge
inc
mov
and
movsb
push
loope
and
xor
loopne
notb
xchg
and
pop
sarl
jnp
mov
int
xchg
mov
test
sub
in
mov
and
hlt
sbb
and
or
mov
push
stc
sub
mov
adcl
lods
mov
lahf
leave
mov
cmp
lock
arpl
fldl
lds
and
or
and
mov
lret
or
mov
fwait
cltd
adc
sbb
xchg
test
xor
fwait
sbb
mov
cmp
es
decb
hlt
and
mov
sbb
and
xor
push
cli
into
and
or
lds
adc
and
loop
data16
std
hlt
test
or
xchg
popf
inc
xchg
pop
arpl
jge
mov
scas
sarl
adc
adc
pop
pop
pop
repz
dec
daa
inc
push
sbb
and
je
popl
and
iret
push
dec
outsb
and
add
sbb
or
push
mov
fdivrl
out
sub
jle
pop
inc
inc
mov
enter
xlat
cmp
mov
subl
sbb
adc
xor
dec
mov
lods
cld
and
push
or
adc
outsb
xor
sbb
lods
add
mov
jle
dec
add
js
repnz
lea
out
loopne
mov
faddl
pop
inc
arpl
xor
cwtl
and
or
imul
mov
cmp
jl
mov
cltd
xchg
push
cmpb
push
jmp
or
ds
and
or
jb
push
pop
test
add
add
push
adc
push
in
fdivp
adc
and
sbb
or
push
jo
cs
push
sbbb
divl
in
add
fs
mov
flds
mulb
in
pop
ret
mov
pop
stos
ja
pop
and
incl
sub
hlt
push
and
jmpw
fsubs
repnz
movsl
and
pop
push
ss
jns
popa
sbb
scas
ja
outsb
jl
out
int
xor
mov
scas
je
xor
push
cmp
repnz
rolb
ficoml
in
inc
cmp
inc
popa
lock
sbb
jle
shr
iret
push
cmp
mov
xor
pop
outsb
push
and
mov
mov
and
push
cmc
sbb
loop
mov
in
roll
sbb
or
fldcw
movsb
and
inc
mov
dec
xor
and
mov
popa
mov
sub
jnp
popf
add
sub
ret
movsb
fwait
inc
pop
mov
cmpsb
and
cs
lods
cmp
cmp
pushf
dec
int3
imul
mov
cwtl
mov
and
xor
dec
and
cmc
mov
and
lret
mov
fsubs
aam
xlat
lods
scas
and
mov
sub
in
add
lcall
jne
jle
insl
or
shl
pop
mov
and
cmp
in
jae
repz
rorb
add
ret
insl
sysenter
pusha
push
shl
jo
pop
lahf
mov
aas
xchg
shll
mov
aad
in
jmp
lods
xor
xlat
cmpl
xchg
mov
add
movsb
fcmovu
jmp
orl
adc
inc
and
mov
push
push
into
cld
sub
flds
cltd
push
sbb
and
push
daa
xor
ds
and
dec
add
sub
inc
cli
add
addr16
or
xchg
push
in
and
nop
xor
xchg
adc
iret
pop
add
outsl
mov
cmpsb
xchg
cmpsl
and
pop
pop
jle
in
and
int
test
mov
or
ret
cltd
and
sub
stos
popf
cmpsl
mov
push
and
imul
push
jecxz
and
pop
xor
push
or
dec
push
outsl
bound
sub
xchg
and
movl
xlat
idivb
jg
dec
dec
inc
and
mov
and
pop
roll
pop
or
lds
cltd
scas
add
sbb
dec
fisubs
cmc
outsb
push
pop
pop
dec
shl
sub
and
mov
leave
add
cmp
sbb
add
dec
and
mov
sahf
jno
daa
jg
ss
mov
xchg
jnp
xchg
jmp
mov
mov
out
sbb
and
cltd
loopne
lods
in
mov
push
popa
and
jae
xor
jnp
dec
fistpll
test
adc
adc
daa
arpl
and
add
jb
mov
js
and
push
popf
in
mov
pop
mov
and
js
jle
pop
fbld
push
sbb
mov
rclb
jno
mov
and
sbb
movsl
xchg
int3
jae
jg
jmp
pushf
inc
stos
rcll
cmp
in
pop
push
andb
xorl
into
shll
mov
adc
add
mov
cwtl
push
inc
mov
jbe
shll
or
xchg
xor
lea
leave
inc
add
in
and
push
xchg
mov
xor
and
nop
xor
int
xchg
lcall
arpl
xrelease
mov
xor
or
push
into
and
test
sbbl
pop
inc
ret
sbb
dec
and
push
jo
sub
icebp
es
rcll
xor
inc
jmp
push
mov
movsb
jbe
mov
inc
inc
xor
mov
xchg
add
and
xchg
ja
loopne
in
addr16
ljmp
dec
and
fstpl
pop
clc
ret
gs
lret
jb
lods
out
cwtl
loope
push
test
jb
and
lahf
test
mull
cmp
lret
stc
sbb
mov
popa
mov
or
mov
js
rclb
aas
adc
cltd
imul
jp
fdivrs
cmp
movsb
pop
sahf
mov
push
in
and
xor
jb
pop
fs
inc
cmp
jmp
and
dec
dec
jb
rcl
dec
stc
jae
and
addr16
out
and
andb
int3
adc
aam
cmpsb
imul
xor
mov
and
stos
popf
es
mov
jp
pop
lcall
sub
xor
cmpsb
and
mov
jb
and
jmp
insl
cmp
es
push
fsubl
ret
dec
outsb
cmp
sub
and
nop
mov
xor
mov
xor
sub
inc
retw
fucomi
and
fdivrs
dec
sub
inc
add
xchg
pop
les
int3
lret
sahf
call
lods
cmpsb
add
insb
sub
lret
xchg
sub
inc
bound
cmp
lcall
rolb
sti
addr16
mov
jnp
insb
inc
pop
push
xchg
and
stc
jmp
xchg
arpl
shl
xor
and
lock
mov
and
sar
and
mov
and
pop
sbb
and
jle
cmp
fisttps
cli
push
and
sbb
and
pop
pop
subb
jp
and
and
sbb
xchg
out
and
jp
and
xchg
adc
inc
pop
pop
mov
jmp
xchg
cmp
scas
and
adc
cmpsl
xchg
fbld
cli
shrl
pop
cmpsb
ja
stc
mov
test
cmp
and
ss
jno
movsl
mov
adc
cmp
sbb
ljmp
imul
add
int3
sbb
xchg
leave
add
cmp
xchg
sub
and
pusha
repnz
mov
push
or
or
xor
adc
mov
roll
jns
or
jecxz
movl
adc
inc
cmpsl
and
imul
inc
and
sub
xchg
pop
jg
fsubrs
mov
dec
popa
and
pop
adc
mov
cmp
and
adc
jecxz
push
jl
xchg
stos
or
add
xchg
cld
call
and
xor
loope
popf
das
and
xchg
aam
mov
bound
and
dec
cwtl
pop
icebp
jmp
sub
and
iret
popf
mov
sub
mov
push
and
adc
pop
xchg
mov
lea
pop
and
inc
rcrl
mov
xor
xchg
adc
lahf
mov
iret
ret
sbb
mov
jmp
push
out
cwtl
xor
pop
pusha
mov
pop
jb
and
sarb
and
out
test
lret
scas
ret
and
cwtl
mov
imul
adc
add
mov
cmp
jbe
imul
mov
pop
inc
add
dec
jmp
xlat
dec
insl
jmp
and
jae
mov
dec
mov
and
fcompl
imul
and
mov
and
mov
jnp
pusha
xor
jg
test
mov
mov
aam
ret
xor
pop
and
repz
add
fbld
ja
dec
lds
mov
cmp
mov
xor
push
cmc
test
sbb
mov
push
or
lea
aaa
or
and
and
shll
xchg
pop
and
and
pop
xor
inc
and
mov
xor
lahf
loop
inc
push
mov
sahf
adc
dec
and
pop
outsb
jo
xchg
and
cmpsb
fisubl
add
ja
cwtl
or
and
in
add
insl
jmp
mov
bound
add
out
sbb
rorb
cltd
lods
mov
and
mov
and
dec
out
repnz
out
cld
lahf
add
lock
loop
mov
andb
arpl
in
fsubrl
adc
and
mov
dec
loop
mov
hlt
imul
dec
hlt
sti
add
leave
insl
adcl
pusha
and
dec
aam
jg
dec
inc
mulb
bound
sti
and
xchg
repnz
dec
inc
popf
shrl
pop
lods
jmp
cmp
jmp
dec
push
pusha
and
lahf
push
xor
mov
or
xchg
push
xchg
adc
aad
outsl
mov
fstpt
sub
and
xor
push
mov
data16
jg
mov
shlb
aad
and
fcoml
data16
das
mov
test
xchg
outsb
lods
inc
lods
mov
mov
addr16
pop
mov
outsl
out
sahf
ret
pop
pop
cld
lock
cwtl
lea
les
stos
pop
jne
xchg
and
mov
add
dec
xor
icebp
sub
mov
and
pop
fdivrs
shl
shlb
sbb
jge
loop
and
mov
in
gs
out
push
js
and
cltd
pop
jo
ds
mov
cmp
aas
mov
sti
add
out
cld
adc
jp
inc
adc
test
xchg
sub
pop
mov
mov
and
and
push
repnz
xchg
push
out
and
lcall
cmpsl
add
sub
xor
cmp
mov
pop
mov
dec
dec
dec
test
aas
nop
push
imull
loop
xor
aaa
push
adc
testb
adc
imul
sbb
fisubrl
bound
or
stos
jne
or
push
jae
andl
frstor
in
xor
out
movsl
repz
pop
or
mov
dec
and
adc
popf
fcomp
pop
fbld
push
icebp
mov
imul
test
push
jecxz
and
inc
and
cmc
xor
mov
stos
mov
sbb
mov
and
pop
jl
mov
iret
mov
scas
push
ljmp
fdivrp
inc
sbb
push
mov
and
pop
xor
outsb
and
call
adc
adc
xor
dec
in
enter
push
dec
fstpl
cwtl
dec
xorl
shll
scas
xchg
and
fstl
lahf
pop
mov
or
mov
dec
and
jae
xor
xchg
nop
incl
add
inc
add
loop
jp
inc
and
sub
loope
inc
mov
in
lahf
stos
loop
mov
out
mov
pop
lock
ja
scas
test
or
adcl
mov
fistpll
sub
scas
mov
mov
mov
inc
mov
outsb
shll
inc
ja
adc
push
dec
enter
and
pop
push
inc
sbb
jg
hlt
movsb
insl
repnz
jg
daa
jecxz
inc
sbb
fnop
xor
mov
xor
sub
mov
jne
pusha
mov
xchg
nop
in
outsl
rolb
lcall
jl
add
sub
push
icebp
sbb
gs
inc
push
les
lahf
les
clc
test
pop
shlb
xchg
fs
out
or
sub
sub
faddl
mov
in
fidivl
or
mov
int
ror
adc
in
test
in
pop
push
scas
xchg
and
aaa
cltd
and
adc
loop
cmp
icebp
arpl
push
jl
test
fcmovne
dec
and
std
pop
mov
jge
mov
sub
xchg
xchg
xlat
and
mov
and
fucomip
shll
cmp
cs
add
mov
out
loopne
mov
test
and
pop
inc
or
dec
sbb
push
pop
daa
dec
cltd
push
and
lcall
push
mov
inc
loope
and
shl
dec
cmp
sbbb
dec
fs
js
call
jns
and
add
or
cmp
push
in
cld
jecxz,pn
or
lock
sub
push
adc
stc
add
les
and
lock
fst
dec
sub
rcrb
fmull
xor
pop
and
dec
fwait
mov
lods
inc
and
shr
imull
fstl
and
in
rclb
iret
add
pop
test
leave
lea
xchg
mov
push
sbb
mov
push
and
repnz
in
ja
cmp
testb
and
jbe
cs
xor
xorl
and
dec
clc
sahf
hlt
lahf
popf
or
ffreep
xchg
xchg
cmpsl
and
sub
or
inc
fiadds
outsl
pushf
pusha
inc
imul
aas
sub
outsl
popa
add
enter
pop
lret
sbb
repz
mov
sub
loop
xchg
testb
mov
movsb
sub
and
and
or
subb
sub
inc
and
dec
inc
and
popf
mov
loope
sbb
push
sbb
cmc
inc
and
jne
imul
and
pop
addr16
mov
pop
arpl
fdivs
mov
mov
pop
add
xchg
xchg
cli
pop
filds
xor
fs
insb
mov
mov
jne
push
inc
daa
xlat
adc
mov
sbb
ret
mov
add
jle
lods
rolb
lods
scas
sub
jo
dec
and
mov
es
push
sbb
mov
arpl
in
in
bswap
test
or
bound
adc
sbb
push
and
xchg
les
add
fisubs
sbb
push
fmull
xchg
xchg
dec
js
cmp
and
iret
xchg
push
hlt
mov
mov
mov
aaa
std
ret
loopne
sarl
je
add
or
clc
out
jge
lret
xor
pop
adc
insl
dec
cmp
sbb
cmp
add
inc
sbb
shlb
orl
lods
adc
outsb
mov
add
cmp
rorl
cmp
int
repnz
stos
iret
lods
xchg
fisubs
repnz
cltd
shl
jb
mov
pushf
xchg
mov
dec
in
and
sbb
cltd
paddd
stos
fildl
or
out
cmp
int3
jbe
lods
insl
pop
mov
or
cld
inc
es
stos
jo
fbld
mov
jnp
cmp
shrb
fists
sbb
mov
scas
pop
or
push
lock
mov
and
call
cmpsb
adc
inc
jmp
inc
mov
xchg
arpl
cli
mov
icebp
xchg
mov
mov
dec
into
aas
and
pop
jecxz
inc
in
in
popa
adc
jge
cs
js
shrb
inc
into
mov
and
in
clc
push
mov
enter
cwtl
out
inc
sub
icebp
int
dec
xor
adc
xor
les
xor
or
add
aas
ret
sub
pop
xchg
incb
xor
sub
loope
inc
fs
jne
adcl
lods
into
pop
addr16
jb
int
je
adc
ds
out
adc
fstps
inc
push
mov
pop
cmc
sbb
pop
cmpb
js
lcall
imul
andl
fiadds
jle
cmp
daa
loopne
lock
repnz
dec
pop
fs
jle
outsl
arpl
dec
dec
pop
and
adc
or
sbb
jmp
gs
mov
movsb
mov
scas
mov
ret
mov
add
jb
pop
push
pop
mov
jnp
rolb
mov
add
cli
fwait
orb
and
and
pop
imul
mov
push
int
scas
flds
jb
inc
xlat
inc
xor
adc
xchg
bound
sbb
inc
repz
idivb
mov
or
insb
insl
bound
popf
sub
clc
lods
out
andl
sub
nop
pop
enter
int
inc
jbe
xchg
les
aaa
and
stos
aad
xchg
xlat
outsb
stc
push
ljmp
xlat
mov
fisttpl
mov
cmp
add
mov
cmc
mov
fsubr
loopne
arpl
in
mov
inc
rclb
enter
sbb
xchg
and
cltd
bswap
push
cmp
xor
dec
cltd
mov
jb
mov
cwtl
dec
es
add
daa
and
xor
mov
rclb
xor
push
gs
jb
sarb
ret
lret
test
iret
mov
push
test
xor
icebp
gs
les
or
loop
lcall
dec
fstl
aam
xchg
jae
mul
jns
clc
in
cmp
mov
cmp
sub
sarb
call
divb
fisubrl
movsb
add
dec
mov
inc
imul
and
js
imul
mov
push
xor
mov
xlat
rorl
lahf
jno
repz
enter
dec
loope
insl
imul
mov
ljmp
call
rcrl
test
in
inc
push
movsb
loope
dec
mov
popf
das
adcl
jb
xor
or
jbe
imul
inc
and
mov
push
pop
xchg
aad
push
jl
mov
data16
ret
out
dec
or
xor
subl
mov
sti
movsl
imul
enter
sbb
dec
push
xchg
test
sub
or
or
and
aam
incl
pop
sub
inc
test
push
inc
inc
and
cmc
cli
pushf
xor
lds
arpl
and
stos
push
cmp
mov
or
jnp
ljmp
aam
xchg
scas
sub
jb
dec
movsb
inc
xchg
or
dec
daa
sqrtps
nop
dec
lock
dec
sub
or
xchg
arpl
out
mov
fbstp
sub
sub
inc
popf
fbstp
xchg
and
rclb
push
outsb
mov
pushf
insl
dec
jle
stos
cmp
ljmp
push
xor
and
sbb
jle
inc
jg
mov
push
lcall
icebp
enter
jno
pusha
cmp
mov
int3
xor
daa
sub
dec
or
rcrl
jg
adc
sti
jno
pop
mov
jle
jmp
jae
mov
ljmp
push
sub
add
orb
mov
cmpsl
or
xchg
push
cmpl
into
fwait
ljmp
arpl
adc
inc
and
xor
movsb
push
in
sub
loop
pop
aad
pop
sbb
test
mov
cmp
push
mov
and
ret
int
inc
dec
cld
orb
adc
bound
or
mov
loope
adc
enter
mov
lea
les
jg
pop
enter
or
insb
fs
inc
out
js
push
clc
imul
add
shrb
les
adcb
adc
mov
adc
dec
int3
pop
push
leave
push
sub
leave
mov
addr16
xchg
mov
sbb
push
fisubl
pop
xchg
arpl
sbb
and
xlat
xchg
mov
pop
xorb
lret
pusha
test
xor
ja
insl
xchg
add
inc
test
int
rolb
jo
mov
imul
test
nop
push
arpl
int
sub
xor
daa
call
mov
push
out
mov
dec
icebp
data16
mov
push
fadd
jge
mov
movsb
dec
push
outsl
je
sub
push
push
ds
fisubs
push
mov
and
inc
fadds
loop
addr16
aaa
in
push
lock
dec
rcrl
js
fcmove
inc
cwtl
hlt
xor
cmpsb
cmp
xor
unpcklps
stos
add
mov
lahf
aaa
pusha
fbstp
cmp
inc
loopne
and
enter
jmp
pop
mov
jbe
sbb
movsl
scas
inc
mov
fwait
cmp
and
dec
addr16
int
mov
cltd
lahf
dec
xor
add
inc
es
roll
pop
sahf
pop
add
adc
pop
cmp
mov
inc
dec
outsb
hlt
mov
pushf
or
adc
jecxz
loope
xchg
mov
adc
jle
sti
dec
ljmp
repnz
es
cmpsb
sbb
sub
les
jae
daa
mov
int
in
mov
mov
sub
cmp
or
das
mov
adc
mov
imul
test
pop
inc
cld
add
dec
fsubs
cmp
dec
xchg
push
fnsave
cmp
mov
lret
sub
push
pop
popa
inc
xlat
pushf
add
jae
jnp
mov
dec
jp
cmp
pop
enter
outsl
adc
mov
dec
xor
gs
cld
jge
mov
cmp
xchg
pop
aaa
adc
and
mov
sahf
push
push
cmpb
rcrb
and
enter
leave
roll
es
push
dec
scas
jp
xor
lock
xchg
cld
sti
sub
add
push
push
xchg
push
xchg
syscall
and
push
xchg
mulb
ja
gs
ljmp
sub
ret
adc
mov
mov
das
stc
jp
test
loope
int
dec
jbe
ds
imul
outsl
daa
outsl
or
mov
push
stos
ljmp
cmpsl
data16
xor
mov
cmp
inc
movb
popf
push
sbb
shll
mov
shr
add
std
mov
lcall
dec
addl
mov
mov
mov
jo
hlt
jmp
outsb
or
push
xchg
hlt
dec
jecxz
cmp
imul
add
sub
mov
cmp
cmp
cmc
loopne
cmc
inc
insb
fwait
jbe
sub
add
mov
and
cs
mov
cmp
mov
hlt
sub
jnp
push
add
filds
push
pop
inc
or
ret
loope
adc
std
fimuls
sbb
mov
add
rcl
nop
mov
xchg
cli
lods
ficompl
sar
mov
insl
push
test
add
pop
add
test
roll
mov
insl
scas
mov
push
pop
sti
adc
jns
and
mov
dec
in
insb
imul
push
xor
rcll
add
iret
pushw
push
mov
dec
test
arpl
pop
mov
ljmp
shlb
enter
out
jne
out
jns
jle
jae
in
pop
or
jns
test
and
mov
or
or
sbb
pop
xor
mov
imul
push
xchg
dec
sahf
xor
jecxz
mov
ror
cmp
jb
mov
inc
imul
push
int
push
sbb
adc
xor
cwtl
ret
dec
pop
lock
xor
xor
stos
xor
jb
mov
inc
sbb
icebp
inc
inc
cwtl
mov
cmp
add
mov
mov
cmp
xchg
adc
adc
aas
call
pusha
inc
subb
cmp
inc
dec
mov
daa
jb
dec
adc
push
dec
jae
int
fsubs
ret
push
or
and
inc
xor
xchg
and
ret
aam
lahf
cli
lock
rorb
push
frstor
xchg
sarb
mov
aad
xchg
imul
stos
sbb
js
jl
mov
aas
lcall
mov
inc
aaa
push
jnp
es
repnz
inc
lock
pushf
loop
scas
out
popa
fwait
in
lret
inc
enter
xchg
pop
lcall
mov
es
aas
xchg
push
push
rcrl
jmp
ja
push
out
xchg
bound
or
jmp
dec
cmp
jle
in
outsb
bnd
jp
insl
jl
mov
push
cmpsb
push
in
bound
stos
mov
xchg
dec
divl
cmp
sbb
int3
and
les
mov
popa
lea
outsb
aas
or
out
dec
nop
mov
and
xchg
test
mov
inc
cld
pop
xchg
js
mov
pop
inc
sbb
adcb
adc
mov
test
mov
push
inc
xor
xor
adc
add
cmp
cmpsb
shrb
jb
push
xchg
mov
jno
in
les
inc
adc
mov
add
pop
mov
enter
fidivs
sub
add
pusha
xchg
jmp
orb
fldl
mov
or
enter
pop
ds
or
sbb
inc
cld
je
lea
add
and
xchg
mov
cli
push
lods
xchg
xor
adc
cld
repnz
add
scas
jecxz
adc
dec
mov
mov
xlat
xchg
xchg
xchg
sti
mov
push
inc
out
mov
int
fildl
sarl
enter
cmp
sbbb
cltd
scas
mov
or
xor
int3
inc
push
js
push
lea
dec
adc
mov
mov
sti
push
adcl
test
jmp
pop
mov
sub
xor
dec
hlt
subl
add
inc
popa
cmp
mov
adc
mov
xor
popf
test
loope
in
lcall
test
or
stos
or
imul
outsb
fucomip
or
addr16
xor
movsl
jp
movsb
in
data16
inc
sub
and
push
pop
hlt
pop
aad
xchg
jmp
fsubs
insl
adc
mov
dec
push
loopne
fcomi
xchg
pop
out
or
jl
xor
shll
arpl
loop
mov
push
lret
iret
fildll
hlt
repnz
out
insl
dec
push
jae
iret
sub
mov
jne
mov
jmp
stos
adc
loope
xor
mov
ja
test
ja
sbb
mov
add
sub
jns
inc
and
dec
insb
stos
loop
loope
mov
mov
in
push
push
les
arpl
push
adc
mov
imul
cmp
xor
adc
sbb
ja
aas
popf
ljmp
or
loope
adc
add
enter
pop
das
aad
incb
cmp
xor
pop
aad
push
idivl
adc
push
sbb
jo
enter
cmpsb
ljmp
and
mov
mov
fsubs
and
mov
and
xor
xchg
push
dec
lods
ss
dec
jle
imul
shlb
sbbl
scas
push
data16
mov
mov
mov
fidivrs
jl
gs
add
mulb
jne
xor
push
cli
icebp
jp
cmp
add
xor
jmp
mov
cmpsl
sub
push
xchg
xor
mov
inc
pop
dec
mov
xor
fadd
inc
adc
jae
jge
outsb
loopne
lret
xchg
loope
popa
fs
mov
fbld
cmp
xor
orl
cmpsl
lock
aaa
sub
adc
lret
mov
or
jle
fimull
fimull
aas
xchg
shrl
sahf
dec
iret
daa
out
sub
ret
mov
inc
out
mov
dec
jmp
mov
outsb
pop
cmpsl
xchg
or
icebp
add
test
xorl
les
pop
mov
dec
rorl
arpl
dec
rol
sbb
push
adc
dec
in
or
movsl
or
mov
mov
cwtl
fwait
test
xor
xchg
sub
in
bnd
xlat
icebp
test
mov
cwtl
mov
lret
xor
jns
or
ret
mov
push
xorb
sbb
sub
mov
scas
les
sub
inc
inc
or
clc
arpl
aas
in
ja
inc
inc
add
int3
aam
cmp
jae
int
jg
jle
shlb
pop
lods
cmc
sub
sub
jge
adc
ret
fisttpll
mov
inc
enter
mov
loope
fwait
xchg
cmpsb
fldcw
popa
enter
in
xor
push
sub
sbb
or
xchg
mov
repz
pop
dec
jle
fwait
decl
add
jecxz
mov
sub
adc
dec
xor
jns
sub
inc
xlat
jge
push
addl
add
lcall
adc
jmp
sbbl
das
and
scas
enter
jo
push
mov
cmp
arpl
sarb
repnz
xlat
ret
jbe
out
push
mov
mov
add
xor
rolb
jae
sub
jae
mov
jecxz
jne
push
and
mov
aaa
lods
pop
imul
gs
push
rcrl
mov
enter
loop
les
mov
push
xor
mov
inc
adc
out
ret
arpl
mov
bound
mov
push
clc
and
dec
mov
lea
jno
movsl
imul
pop
push
xor
inc
inc
enter
sbb
xlat
fildl
adc
mov
in
fiaddl
outsb
dec
push
jns
adc
mov
jns
lds
dec
fildl
enter
subl
lcall
push
inc
sub
roll
pop
xchg
inc
pop
jg
inc
das
jne
push
repnz
call
and
ret
mov
cmpsb
cmpsb
and
popa
jne
lret
xor
pop
mov
xor
lret
mov
inc
push
adc
bound
repz
xor
xor
push
cmp
js
fs
daa
je
enter
pop
mov
scas
sub
mov
js
sub
cmp
inc
loope
and
mov
xchg
sahf
push
lods
pop
enter
add
push
aam
sub
pop
dec
add
bound
sub
pusha
and
sbb
in
cltd
xchg
mov
jne
cmpl
cli
or
out
ret
inc
pop
fildll
inc
xchg
adc
addr16
loope
push
mov
int3
push
subb
aam
imul
test
or
outsb
pusha
mov
sbb
rorb
jae
cli
ljmp
dec
enter
inc
mov
push
sti
cs
enter
mov
push
aaa
mov
and
inc
mov
push
jae
or
repnz
das
ret
xor
sub
or
fwait
mov
fwait
leave
movaps
enter
mov
pop
jns
sbb
lock
jbe
insl
cwtl
into
cs
or
dec
or
mov
xor
out
and
adc
adc
jecxz
out
xchg
cld
sub
in
imul
in
sub
pop
xchg
xor
push
icebp
mov
stos
mov
or
xchg
push
pop
orl
jne
or
add
fimuls
sti
cmpsb
test
push
jecxz
test
imul
adc
inc
popa
popa
xchg
ljmp
and
mov
pop
aad
hlt
sbbl
adc
mov
insl
and
imul
mov
inc
ja
int3
mov
aaa
inc
push
jmp
mov
shlb
popa
sub
jecxz
lret
push
cli
loope
or
xchg
cmp
in
xor
movsb
daa
pop
shlb
arpl
aam
push
jnp
jbe
push
out
mov
movsb
xor
xor
cltd
and
jmp
add
subb
ret
int
jae
outsb
rclb
push
jbe
dec
clc
xor
mov
pop
imul
xor
adc
mov
out
xchg
xor
imul
cmp
pop
mov
shrl
lcall
inc
mov
push
sub
js
pushf
shll
xchg
inc
add
lahf
xor
es
fnstsw
mov
leave
cmp
lahf
inc
and
push
lock
rorl
into
pop
ret
cmc
pop
or
cmp
jne
pop
xor
dec
and
and
mov
imul
les
fucompp
out
repnz
sbb
lcall
arpl
icebp
leave
fldl
daa
mov
icebp
sub
inc
pop
xor
jg
fildl
jb
iret
sahf
ss
pop
es
les
sti
fs
scas
dec
or
push
imul
pop
dec
in
into
cmp
sti
pop
sub
push
arpl
ja
in
imul
pusha
addl
inc
loopne
imul
pop
dec
jnp
sar
mov
fstps
cmp
popa
loope,pt
jp
push
jl
xor
test
imul
sbb
enter
push
out
cld
or
pushf
jmp
and
add
mov
les
mov
sbb
test
test
ds
mov
aad
mov
mov
aad
adc
xor
cld
push
out
into
inc
pop
orb
mov
ret
adc
jmp
test
and
into
out
addr16
aad
aas
inc
jge
mov
addr16
xor
hlt
gs
pushf
push
push
enter
je
int
pop
inc
pop
ficoml
ret
xchg
mov
loope
sub
int3
xchg
inc
cmc
inc
xchg
sub
or
icebp
cwtl
xchg
sub
lods
iret
push
xor
mov
lcall
bound
sub
xlat
call
jl
data16
inc
es
push
cld
insb
add
pop
push
inc
or
mov
ret
in
fnstcw
adc
xchg
int
fmulp
push
mov
out
mov
jo
addr16
or
sbb
jns
js
dec
cltd
fidivrs
or
stos
push
and
dec
mov
xor
pushf
addb
loopne
adcb
dec
roll
pop
jns
lods
push
dec
enter
xor
xchg
inc
popf
jmp
repnz
or
out
int
gs
ljmp
mov
aaa
iret
push
jae
iret
das
cli
sub
outsl
popf
icebp
sbb
xlat
pop
xchg
xlat
xor
add
aaa
mov
pop
adc
push
mov
sti
adc
inc
push
loope
enter
or
dec
mov
mov
push
mov
or
mov
icebp
mov
inc
lret
movsl
test
sarl
icebp
and
xchg
push
rol
inc
fsubl
fs
mov
cs
insl
enter
mov
icebp
das
test
mov
mov
imul
test
add
pop
imul
pop
sub
sahf
ljmp
xor
mov
or
lret
adc
insl
roll
insl
push
loope
enter
jnp
mov
rcll
cmp
arpl
in
mov
fidivs
je
fwait
pop
mov
add
mov
dec
movsb
int3
mov
stos
xchg
add
les
sbb
sub
ret
neg
or
pop
inc
pusha
shll
gs
movsb
popf
dec
decl
les
or
cs
xchg
mov
mov
out
mov
jnp
and
and
mov
movsl
and
jmp
fisubs
add
iret
sbb
rorb
xor
add
add
inc
xor
cmp
scas
inc
adc
push
fxch
mov
test
insl
divl
inc
or
dec
push
das
push
cmp
push
sub
adc
les
bound
sahf
arpl
ss
sub
inc
bound
daa
inc
dec
filds
mov
adc
sub
clc
pushf
imul
xchg
dec
mov
inc
aam
sub
mov
adc
fsubrs
mov
xor
fisttpl
mov
add
pop
shrb
xchg
dec
out
mov
imul
cmp
or
mov
repz
dec
and
loop
mov
mulb
enter
xor
jge
sub
push
cmpl
sti
mov
stos
les
sbb
lcall
int3
stos
sti
or
sbb
sbb
inc
mov
jge
lds
push
inc
jb
push
pop
icebp
mov
arpl
enter
or
pusha
movsb
enter
sbb
sbbl
jnp
cmpsb
ja
sti
adc
lret
xor
sbb
das
or
sub
and
addr16
or
mov
es
into
mov
dec
pop
lods
dec
sub
sbb
push
repz
les
xor
sbb
addr16
iret
out
sbb
push
sub
out
jo
mov
data16
je
stos
setae
mov
add
jge
sarl
mov
dec
cmpsb
aaa
fimull
xchg
fwait
test
cs
popa
cmp
jecxz
jge
jns
les
xchg
sbb
inc
jbe
add
add
cmp
sbb
or
pop
pop
jmp
insb
inc
ss
sbb
pop
fbstp
or
xor
push
dec
inc
icebp
js
into
lds
add
cltd
jle
mov
fsubs
sub
test
or
or
and
sahf
push
or
push
sti
das
xor
or
jbe
adc
mov
ret
insb
shlb
shlb
aas
cmpb
test
cmp
adc
leave
in
jnp
mov
cmp
notl
daa
lret
pop
jo
stc
ss
ja
or
push
ret
xor
enter
mov
xor
or
sub
add
jecxz
xor
jle
in
ds
mov
ljmp
inc
and
shl
inc
or
mov
ror
inc
cli
xorl
dec
cwtl
pop
push
push
xor
arpl
enter
pop
inc
sbb
gs
shll
or
xor
xchg
or
jnp
or
in
in
aaa
pop
or
jle
mov
divb
inc
add
cltd
inc
sub
daa
mov
pop
push
sub
fnsave
jbe
sub
imul
pop
pop
jg
push
ret
add
mov
fs
insl
add
into
fbstp
cmova
repz
sub
xorb
sub
jp
lret
mov
add
imul
or
ret
or
repnz
xor
add
mov
out
and
mov
or
add
lcall
inc
adc
mov
mov
rcrb
ds
xchg
mov
dec
test
xchg
popa
add
xchg
ret
jno
repnz
sbb
clc
out
dec
popf
incl
frstor
dec
mov
push
inc
icebp
push
inc
aad
fndisi(8087
aad
pop
xor
cmp
nop
mov
popa
imul
xchg
or
xchg
test
cmp
pop
sub
fnstenv
ss
movsl
xlat
in
xchg
fdiv
jecxz
cmpsl
movb
stos
and
dec
jp
subl
xor
sbbb
jbe
mov
int
mov
mov
mov
sbb
fstps
enter
mov
in
clc
xor
inc
cmp
mov
cwtl
inc
in
iret
out
lods
jnp
imul
test
outsl
and
or
das
pop
push
lods
inc
and
sub
inc
cmpsb
dec
in
iret
jle
mov
sub
lahf
jmp
dec
iret
inc
jnp
stos
or
add
lret
add
dec
je
repnz
add
adc
xchg
popa
mov
rol
dec
out
cmc
inc
add
sub
and
test
in
xor
gs
testb
pop
arpl
push
pop
mov
adc
ja
in
push
iret
xchg
les
mov
cmpl
daa
ja
mov
mov
notb
xor
sbb
push
pushf
or
stos
stos
gs
mov
add
mov
andb
inc
jmp
ljmp
ljmp
inc
jmp
add
push
mov
incb
dec
imul
rorl
sub
sub
mov
and
retw
mov
js
ds
pop
divb
dec
dec
enter
xor
pop
sub
jns
daa
mov
int3
sub
ljmp
imul
mov
sub
nop
mov
arpl
pinsrw
les
test
xor
je
sbb
xor
ficompl
call
pop
inc
sub
leave
leave
ret
pop
mov
ljmp
add
mov
test
dec
rorl
les
imul
andl
pusha
cmp
ret
xorb
dec
inc
inc
and
imul
dec
fcoml
test
jb
cmp
icebp
mov
das
lahf
stos
lret
fwait
ret
and
mov
dec
repnz
lret
dec
xlat
fwait
xchg
inc
arpl
xor
repz
sub
enter
insb
mov
sub
xor
dec
imul
inc
push
add
mov
push
lret
xchg
and
or
pop
enter
pop
mov
jbe
xchg
or
add
and
inc
std
lahf
mov
cmp
in
cmpsb
pop
add
jecxz
push
orl
cmp
ret
dec
xor
push
mov
cmpsb
pop
out
divl
xor
addr16
inc
jp
mov
sub
icebp
dec
call
mov
inc
pop
add
in
xchg
xor
jb
pop
aad
pop
push
fidivs
dec
adcb
add
jbe
sub
push
cld
or
in
mov
lret
mov
ret
leave
adc
add
aaa
cmp
mov
mov
cmp
enter
imul
andl
and
ret
ficomps
enter
fdivl
jbe
icebp
or
roll
jp
jg
data16
pop
hlt
int3
or
mov
xor
inc
lds
pop
inc
js
add
loope
ret
nop
ljmp
pop
mov
fwait
mov
xor
adc
jmp
daa
dec
iret
xor
xor
add
imul
xor
xor
insl
test
cwtl
int3
xor
ret
mov
pop
dec
xor
pop
loopne
les
and
xor
loopne
pushf
mov
adc
mov
stc
test
jno
adc
mov
cmpsb
sbb
in
loope
xor
jg
xor
or
shrb
mov
imul
jg
mov
les
xchg
test
dec
mov
dec
popf
shrb
repnz
pop
mov
fidivl
icebp
imul
paddusw
mov
add
jne
and
stos
sbb
js
lahf
aad
mov
mov
xor
les
jno
arpl
imul
pop
popa
les
mov
das
hlt
or
lds
push
arpl
mov
stc
test
ret
int
les
popa
jno
enter
psrlw
ror
rcrl
xchg
enter
ljmp
jle
out
mov
or
pop
enter
in
pop
mov
cmp
inc
test
push
inc
xor
or
push
dec
aad
in
imul
adc
mov
xlat
mov
sbb
xchg
outsl
fisubs
lods
insl
xlat
jmp
dec
mov
enter
jmp
pop
arpl
fnstcw
out
ss
sub
mov
mov
insl
loope
rorl
pop
out
pop
dec
mov
int
add
stos
les
fstpl
push
cmp
jb,pt
inc
mov
loope
jp
or
jle
sub
adc
lret
lcall
ss
adc
push
pop
sub
testb
inc
js
mov
dec
and
push
aaa
pop
dec
mov
xchg
int
insl
xlat
xchg
es
pop
aaa
sbb
cld
bound
jns
test
adcl
ljmp
add
pop
inc
sarb
es
dec
pop
jmp
push
ja
btrl
adc
enter
loope
add
icebp
lea
cmpsl
aaa
sbb
in
fdivs
ret
lock
jnp
dec
popf
in
in
dec
in
out
outsb
les
in
mov
andb
leave
daa
mov
cmp
fstps
jno
fwait
push
xor
pop
fstps
fwait
ret
add
or
adc
gs
cmp
and
dec
pop
xchg
fsubs
mov
andl
pop
mov
and
jge
mull
or
dec
insb
dec
push
pop
xor
jle
out
div
fnsave
sub
sub
cld
pop
dec
rcll
fstpl
and
inc
lds
xor
push
imul
jecxz
and
sub
and
leave
enter
lods
adc
and
iret
out
lds
xor
data16
and
in
and
outsl
dec
mull
or
jle
rclb
add
adc
sbb
cmpb
push
xlat
adc
mov
out
add
rol
inc
inc
cltd
iret
push
jp
pop
sbb
pusha
lcall
xor
sub
mov
shlb
ja
loopne
lds
pop
lret
sub
fs
mov
xor
pop
xchg
mov
xor
int3
jmp
and
mov
adc
and
push
mov
and
jb
mov
cmc
add
adc
adc
and
scas
shlb
and
xchg
cmp
add
dec
sti
andb
imul
mov
mov
jp
mov
loop
ja
stos
gs
cmc
and
inc
hlt
dec
fsubr
cmp
mov
and
dec
comiss
mov
pop
and
add
fisubrl
and
xchg
cmpsb
sahf
add
popa
and
adc
and
out
jno
add
and
notb
and
push
mov
and
add
xchg
sbb
fwait
mov
mov
and
sub
das
cmp
xchg
popa
outsl
idiv
in
cmp
xor
jae
push
inc
and
cmp
cmpsb
xor
adc
lahf
and
push
imul
and
shlb
cmp
cld
jg
and
mov
in
fidivrs
cli
pop
push
and
ret
cmp
scas
pushf
push
das
push
imul
movsb
lea
negb
inc
mov
clc
jmp
xchg
int
push
mov
lds
mov
add
push
cli
lock
xchg
fbstp
test
gs
mov
sub
or
mov
jo
rcll
pop
push
and
imul
loope
xor
pop
ret
test
push
or
lods
inc
pushf
sbb
and
push
push
dec
lea
and
add
lahf
dec
nop
ret
and
jmp
add
fwait
sbbb
in
daa
lret
mov
and
jns
js,pn
inc
outsl
and
in
mov
or
and
roll
fs
jns
mov
pop
jae
mov
pop
data16
andl
and
sbb
fnstenv
sbb
sub
pop
add
jp
mov
cmp
shll
push
popf
mov
push
cmp
jmp
pop
mov
sub
xor
adc
jg
sub
and
sbb
dec
push
pushf
inc
addr16
fdiv
xor
sbb
jne
les
out
incb
into
repz
mov
mov
xor
ss
or
and
push
rcrl
xchg
ja
dec
mov
jmp
popa
into
xor
ljmp
push
push
add
mov
mov
and
sahf
add
xchg
push
pop
mov
sub
leave
ret
loop
and
jle
jmp
sub
scas
mov
xchg
jmp
sub
jecxz
add
xchg
shll
loop
mov
jns
mov
cli
mov
les
push
and
xchg
loopne
daa
sub
test
dec
sub
add
or
inc
cwtl
cld
insb
cmpsl
inc
inc
jo
dec
call
cmp
enter
hlt
xor
popf
arpl
ret
dec
inc
jb
enter
pop
bound
outsl
imull
jb
int3
xor
mov
mov
xor
pop
out
nop
xor
test
iret
mov
insb
and
inc
add
inc
mov
aam
test
stos
cli
addr16
mov
enter
add
in
dec
les
add
xorl
or
xchg
dec
mov
or
and
sbb
outsb
or
sub
inc
jl
jle
pop
and
pop
nop
cmc
cmp
ja
mov
dec
and
push
push
jne
js
lret
jl
or
pop
ljmp
stos
aaa
xor
jl
repnz
cmp
dec
and
dec
xlat
xchg
popa
movsl
loop
arpl
push
loopne
and
jge
and
mov
loope
test
les
pop
ds
jmp
pop
clc
or
xor
or
ret
icebp
xor
dec
sbb
sbb
adc
shll
idivl
xchg
jns
fcoml
mov
adc
jnp
fistpll
add
ret
imul
shl
outsb
xchg
cmp
lcall
pusha
ja
inc
test
push
cwtl
mov
clc
es
cld
mov
push
clc
imul
or
cwtl
pop
pop
dec
jg
pop
daa
pop
outsb
mov
popa
leave
inc
fdivl
aam
or
xor
sbb
and
xor
outsb
test
jo
aas
lods
jb
cs
fcoms
pop
lret
add
fbstp
mov
lret
insl
mov
cmp
stos
fistl
fdivrl
jns
cmpsl
jno
in
outsl
sbb
pusha
shl
jg
in
out
jg
lret
jmp
daa
or
xchg
das
fmuls
mov
inc
arpl
gs
mov
mov
or
adcb
out
cwtl
rorl
mov
push
test
les
ja
xstore-rng
cmpsl
ret
aam
stos
and
xchg
ret
sbb
inc
outsb
pop
rorl
or
xchg
push
aaa
jo
in
ss
ret
rclb
dec
enter
xor
sbb
andl
mov
lret
add
clc
bts
xchg
inc
xchg
pop
xchg
pushl
xlat
ret
divl
xor
add
clc
mov
sbb
lcall
fiadds
in
mov
pop
aad
je
mov
dec
xor
out
clc
mov
out
mov
push
bound
bound
movl
push
mov
or
push
pusha
sahf
dec
movsl
or
jns
popl
ljmp
mov
les
jo
les
imul
sbb
or
sbb
loop
icebp
push
jge
xchg
fstl
push
fdivl
adc
aaa
adc
jmp
mov
out
xchg
sbb
pusha
adc
jno
mov
loop
enter
lock
std
fadds
and
mov
out
and
ret
mov
cmp
ja
daa
and
mov
lods
stc
clc
jnp
inc
int3
bnd
fcomp
imul
sub
xorb
push
push
lahf
fiaddl
negl
ret
movsb
mov
mov
jecxz
movzbl
daa
arpl
adc
loopne
xchg
mov
xchg
add
jle
xchg
xor
lahf
and
push
dec
add
xchg
sarl
into
mov
sbb
dec
scas
or
mov
fdivl
ret
aaa
push
xor
out
andl
icebp
xchg
inc
cmpb
jno
stos
add
inc
icebp
addr16
adc
sub
adc
femms
enter
iret
jl
and
rcll
mov
lock
fwait
adc
fs
push
les
and
mov
mov
push
insb
arpl
rcll
stos
or
cmc
cmp
pop
ret
rorl
mov
sub
test
mov
lock
clc
imul
in
int3
cmpsl
imul
subb
mov
mov
inc
sub
xchg
push
outsb
adc
pop
sti
xlat
push
lods
jmp
je
pop
or
mov
sbb
and
inc
sbb
mov
rcrl
pop
cltd
repnz
and
mov
or
mov
mov
cmp
or
cmp
adc
cmpsb
outsl
mov
sub
cs
shrl
stos
cwtl
or
push
pop
mov
sti
xor
mov
enter
aas
xchg
jb
xlat
cmp
sbb
ret
push
mov
adc
add
arpl
imul
xchg
xchg
push
mov
sub
dec
sbb
sbb
lret
mov
lods
cmp
xchg
mov
xorl
adc
mov
fsubrl
aam
xchg
ret
test
test
sub
pop
pop
addb
arpl
sub
in
sbbl
push
mov
xchg
sbb
sub
inc
std
dec
jmp
les
adc
add
push
mov
cltd
sbb
push
jge
push
jmp
loope
dec
les
into
xchg
push
push
xchg
and
jo
jne
es
and
pushf
sbb
loopne
adc
or
add
enter
mov
rcll
cs
iret
xchg
ljmp
inc
jnp
lret
mov
in
sub
nop
daa
cs
jae
je
js
xchg
mull
enter
jge
lock
xchg
aaa
mov
dec
xor
imul
mov
sahf
popa
ja
jp
enter
pop
xchg
jge
adc
rcrl
ret
sub
push
cmpsb
lods
iret
flds
cli
jle
scas
push
mov
sub
jns
out
inc
iret
sub
push
inc
mov
dec
and
test
test
jp
stos
scas
outsb
flds
adc
xchg
mov
sbb
and
std
push
push
mov
sbb
out
xchg
add
imul
xchg
pop
test
je
ret
pop
cltd
jle
and
dec
cmpsl
movsl
pop
xchg
call
or
mov
and
xchg
in
sub
inc
mov
adc
sbb
les
sub
jbe
push
stos
pop
pop
pop
jge
les
xchg
add
push
and
cmp
sbb
clc
insb
inc
bound
lret
mov
fadds
xchg
jle
jp
daa
addl
inc
adc
jae
int3
dec
mov
dec
pop
movsb
stos
add
pop
cs
adc
data16
sbb
mov
pushf
and
lcall
jp
jnp
jb
jnp
popa
in
js
sbb
push
or
xor
push
jnp
push
push
gs
int
lods
outsb
enter
mov
mov
adc
sub
push
mov
movb
ret
add
xor
xor
lret
test
insl
enter
push
inc
pop
inc
mov
jno
enter
mov
inc
stos
bound
jge
hlt
jnp
jb
sbb
pop
sub
jb
lds
imull
in
add
xor
popa
sub
sub
stc
enter
test
sbb
push
sbb
pop
cltd
sti
dec
int3
arpl
mov
out
jecxz
xor
or
ja
push
sbb
rcrb
xchg
xor
jo
lahf
shll
mov
popa
push
xor
push
out
xchg
rcl
inc
cli
jle
outsb
cmpsl
xchg
test
imul
or
sbb
nop
push
add
aas
sbbl
and
mov
sub
rcrb
cwtl
push
inc
xchg
pop
sbb
outsb
dec
les
dec
and
stos
mov
mov
addr16
xor
lret
cmp
aaa
int
mov
and
or
movsl
pop
and
dec
imul
adc
aad
or
in
jle
mov
dec
mov
jle
inc
ds
inc
cmp
add
fsubl
gs
jmp
pop
inc
pop
xlat
in
bound
jbe
mov
jbe
xlat
add
mov
enter
mov
adc
je
outsb
xor
in
pop
icebp
pop
mov
push
mov
les
popa
das
les
loop
aaa
repnz
jnp
or
adcb
dec
ljmp
ret
mov
rolb
divb
mov
lock
fbstp
scas
ret
sbb
mov
js
inc
add
inc
add
imul
pusha
sub
call
inc
aas
inc
dec
addr16
dec
inc
and
push
cmp
adc
push
inc
fcmovnb
aam
rorl
pop
mov
js
mov
sbb
xchg
sti
cmp
or
sbb
stos
mov
fstl
nop
stc
mov
inc
dec
pop
mov
mov
xor
fldt
pop
jae
fisubs
xchg
inc
mov
into
notl
fwait
xor
and
mov
enter
mov
hlt
loope
movb
lea
push
add
jmp
in
push
jnp
xorl
mov
insl
cmpsb
xchg
shr
icebp
sub
bound
sub
or
aad
xor
xchg
aas
and
push
xor
mov
pop
mov
mov
rcll
mov
xchg
inc
cmp
fxch
mov
shrl
add
dec
aad
dec
sub
adc
cli
jp
pop
xor
movsb
fdivrl
loop
leave
addl
sub
fnstenv
jle
pop
and
aaa
bound
jecxz
out
pop
push
hlt
or
adc
outsb
enter
push
jge
cmp
xchg
stos
inc
mov
cmp
mov
sahf
std
adc
xchg
ror
mov
popa
sub
push
xchg
cmp
mov
mov
sti
int3
and
pop
or
xor
daa
and
out
cmp
lea
and
push
sbb
inc
dec
mov
mov
xor
les
sub
mov
lret
popa
or
jmp
loopne
inc
enter
inc
dec
call
inc
bound
ja
in
inc
aad
aam
mov
pop
jb
idivl
les
add
xor
scas
pop
movsl
jbe
and
pop
push
subb
adc
pop
push
pop
xor
movsl
mov
mov
pop
daa
or
lret
push
and
rclb
mov
nop
lret
shrl
sbb
mov
scas
push
xchg
pxor
and
int3
aas
bound
sub
xor
or
lret
cmp
sub
add
scas
insl
inc
mov
cs
lahf
sbb
test
push
lcall
xchg
adc
xorl
mov
imul
fisttpll
adc
adc
lret
or
jge
xor
mov
imul
dec
insl
enter
test
arpl
xchg
cltd
sbb
xlat
jae
cld
ljmp
repz
xchg
mov
enter
push
test
lahf
hlt
mov
xor
stos
stc
jp
xchg
mov
inc
iret
xchg
iret
test
xor
std
mov
mov
jnp
jbe
rcr
inc
xchg
xor
ja
xchg
dec
sahf
enter
xlat
test
inc
addl
jmp
imul
bound
mov
add
jb
dec
lcallw
jns
rcr
daa
pop
cld
jo
ret
pop
push
push
cmp
fcoms
add
lcall
cmp
sub
sbb
in
ficoml
cltd
movb
sub
jne
clc
test
adcb
mov
aas
pop
and
and
fnstcw
jecxz
or
sub
pop
ret
xor
arpl
inc
je
pushf
mov
test
and
stc
pop
sub
dec
movsl
mov
lods
imul
adc
xchg
xor
imul
movsl
popf
aaa
lahf
adc
jbe
xchg
stc
fwait
dec
rcrb
js
lcall
adc
dec
add
clc
sbb
dec
dec
stos
ficomps
push
mov
cs
dec
push
aaa
rclb
dec
cwtl
daa
cltd
clc
mov
pusha
movsl
mov
sar
xchg
sbb
lock
push
insb
and
movsl
cmp
mov
inc
inc
popa
xor
in
fsubrs
je
mov
jno
rol
add
jle
push
dec
lret
xor
mov
pop
sub
and
mov
and
out
fists
add
mov
mov
aam
fstps
push
mov
pop
xlat
push
mov
add
out
cmc
aad
xchg
xchg
roll
les
and
gs
push
xlat
inc
inc
scas
mov
lcall
mov
in
fwait
push
mov
mov
sbb
test
mov
add
ljmp
popf
inc
pop
icebp
jl
push
mov
and
add
les
mov
mov
pop
cmp
sub
cmpsl
adcl
loope
mov
fdivrs
inc
notb
sbb
jne
inc
popa
jb
popf
adc
mov
fwait
outsl
imul
ljmp
xchg
sbbl
xchg
addr16
fistps
xchg
out
mov
insb
lods
and
das
cltd
int3
mov
imul
stos
and
push
out
gs
push
shlb
scas
jmp
dec
adc
cmpsb
lcall
aaa
pop
cmp
pusha
mov
in
jge
cmp
mov
jae
push
cltd
inc
dec
jp
sbb
push
xchg
xlat
enter
mov
push
push
clc
iret
lods
or
push
xchg
push
xor
inc
cmpsb
cmp
outsl
inc
movsb
ror
push
and
and
dec
ds
in
dec
or
cmp
imul
pusha
xchg
add
fucom
cmp
out
and
fld
cltd
sub
push
fsubrl
bound
xchg
mov
adc
imul
cmp
aaa
mov
push
push
xor
jmp
sbb
nop
cmp
fldl
inc
and
outsl
les
push
enter
outsb
inc
jle
cmp
and
loop
insl
sub
leavew
stc
mov
jae
mov
push
int3
jb
dec
and
mov
jno
movsl
test
popf
xorl
cmp
aad
inc
xchg
push
adc
cmp
mov
int3
rclb
mov
enter
xchg
and
iret
ret
add
mov
fldcw
hlt
mov
jns
inc
shlb
stos
das
fnstcw
enter
into
adc
add
fiadds
adc
add
pop
dec
xor
cmpsl
frstor
sbb
int3
cmp
ss
push
enter
xchg
lret
sahf
cli
popf
call
add
pop
je
mov
lods
push
adc
mov
stos
lahf
ljmp
pop
cli
xchg
in
mov
rorb
sahf
mov
clc
dec
and
push
push
mov
stos
push
dec
xor
iret
out
popa
push
ds
cmpsl
stos
roll
stos
xor
cli
adc
inc
or
adc
xchg
fcmove
insl
pop
les
mov
sbb
mov
xor
outsl
sub
cmp
push
push
dec
test
dec
imul
repnz
cmp
gs
push
je
add
add
sub
insl
push
jecxz
loope
in
or
popf
xor
enter
outsb
test
addr16
push
lea
push
and
jns
ss
push
outsl
inc
pop
mov
imul
mov
xor
mov
jmp
sub
push
or
jl
xor
or
call
xchg
mov
sbb
xchg
xor
sub
sbb
mov
cmp
lret
xor
jno
xchg
addb
fbstp
pop
adc
mov
imul
cmovg
sbb
shrl
mov
dec
incl
bnd
int
test
in
adc
testb
pop
icebp
stos
in
testb
or
or
adc
sub
jmp
pop
movsl
and
jno
mov
in
adc
and
out
insl
shll
jae
pop
je
lret
inc
jle
mov
rorl
jne
adc
icebp
push
in
and
pop
sbb
int
xor
adc
mov
cmp
int3
aaa
pop
cld
push
xor
test
lret
mov
inc
rclb
lahf
lods
and
popa
sahf
out
lods
push
mov
mov
ret
or
call
mov
mov
stos
dec
jb
fcomps
xchg
xchg
jo
inc
and
dec
lcall
mov
mov
sub
and
push
inc
lahf
je
into
xchg
gs
mov
into
imul
mov
scas
iret
add
sub
jge
jle
jge
scas
pop
ja
add
rcll
pop
mov
inc
fbstp
enter
inc
sbb
mov
lods
push
push
arpl
or
mov
idivb
sub
dec
inc
xor
sbb
les
xchg
adc
push
cmp
test
xorps
jmp
dec
js
jp
mov
push
or
mov
mov
test
sbb
test
ficomps
bound
rcrb
mov
fchs
jns
out
cwtl
imul
in
mov
mov
or
mov
leave
hlt
mov
mov
rol
push
inc
outsl
adc
aam
outsb
mov
mov
enter
mov
ret
dec
std
mov
inc
jb
xchg
in
jbe
shlb
dec
inc
dec
arpl
mov
pop
adc
enter
arpl
fidivrl
mov
xor
fwait
cmc
mov
mov
in
leave
mov
adc
sti
or
nop
cltd
rol
xor
cmpsl
ljmp
and
test
pop
cmp
jns
adc
lcall
sub
addl
inc
dec
sub
daa
mov
clc
and
push
mov
pop
stos
sarb
inc
jbe
leave
pop
movsb
xor
pop
cmp
lods
daa
enter
mov
add
jns
std
loopne
adc
sbb
xchg
lea
orl
mov
jge
sti
popa
dec
in
int3
inc
cmp
sbb
xchg
inc
lcall
jp
movb
testl
xor
arpl
jmp
cwtl
xchg
ret
ljmp
sti
mov
mov
mov
pop
pop
lcall
sub
jns
cmp
outsb
ret
arpl
cmp
mov
imul
lcall
mov
pop
inc
sub
xor
imul
xor
cmp
sbb
in
ret
dec
xchg
ljmp
cmp
out
loopne
rol
or
sub
inc
cld
lock
scas
mov
icebp
and
dec
ret
push
dec
test
pop
mov
aad
jp
movsl
ss
ret
pop
popa
xor
shrb
dec
int3
lods
rolb
ja
or
jo
aad
cmp
dec
sarb
jmp
jge
xchg
cmp
xchg
lds
shl
pop
xor
add
mov
loopne
sub
imul
sub
mov
and
nop
add
jp
cmp
jmp
mov
shl
xchg
leave
jmp
addb
mov
dec
out
mov
aas
das
xor
jno
jecxz
popf
xchg
or
dec
iret
xor
mov
mov
jp
xor
sub
les
lods
and
push
dec
add
fsubp
push
jg
add
add
xchg
out
xor
pop
mov
ss
fsubr
push
adc
clc
mov
rolb
sahf
pop
ss
jl
xlat
in
mov
sbb
mov
pop
outsb
xor
mov
arpl
in
das
sbb
inc
jmp
pop
or
xorb
xor
adc
jge
pushf
inc
xor
iret
push
mov
dec
lock
push
je
push
mov
movsbl
mov
or
data16
negl
inc
add
cmp
dec
pop
push
dec
xchg
sub
sbbb
cmp
cld
jle
sahf
mov
mov
lods
dec
sub
and
notb
mov
ds
lret
out
mov
jno
cmpsb
insl
inc
jae
pop
int
clc
xor
xchg
mov
xor
popf
xchg
inc
fcmovu
outsb
test
xor
adc
and
sub
cli
add
imul
ljmp
in
aaa
sahf
mov
popa
xchg
mov
fsubrl
mov
js
and
pop
jge
adc
aad
or
adc
xor
jl
loopne
adc
add
sub
ss
push
sahf
lea
adc
std
ffreep
add
inc
adc
lcall
push
xchg
jnp
cltd
cwtl
js
sub
push
lahf
ss
pop
sub
xor
push
mov
fsub
jge
imul
pop
xchg
and
es
arpl
addr16
pop
les
xor
sub
or
xor
daa
jbe
and
into
ja
std
jecxz
mov
sbb
xor
imul
sub
cli
leave
xor
and
mov
sbb
ret
sbb
je
sub
sub
inc
hlt
adcb
push
mov
enter
cmp
ss
mov
pop
mov
push
inc
xor
out
imul
cmp
dec
cltd
or
js
arpl
jge
add
push
inc
cmp
out
sbbb
xchg
fbld
inc
mov
aad
fisubrs
movsb
js
pop
pop
add
add
fdivrl
or
dec
les
and
xchg
in
mov
fnstcw
sbb
or
push
call
inc
jnp
mov
sub
inc
and
mov
or
or
xchg
cmp
call
and
fsubrp
inc
mov
mull
jb
jnp
mov
push
push
lods
pushf
xorb
sbb
sub
loope
mov
cmp
jae
pop
jmp
mov
stos
adcb
xchg
aam
fcmovbe
sub
mov
arpl
arpl
sahf
xor
filds
leave
sti
or
ja
and
je
dec
iret
dec
les
add
cld
sahf
dec
push
sbb
mov
lods
clc
out
xchg
rol
imul
ret
iret
in
and
aam
movsl
mov
xchg
and
leave
jns
pop
xchg
push
mov
int
jae
fcmovnu
xor
mov
ficomps
icebp
imull
jp
aaa
adc
nop
inc
es
sti
iret
push
jecxz
fildl
out
aad
xchg
loop
rcll
adc
mov
sarl
testb
ss
call
jmp
movsl
add
adc
fldt
test
stos
bound
sub
mov
push
jno
jecxz
call
sub
ljmp
mov
lods
mov
sbb
sub
jbe
xor
push
push
or
pop
push
shrl
mov
inc
mov
imul
push
xchg
xchg
aad
mov
mov
arpl
lcall
imul
mov
mov
mov
cmp
add
cld
imul
xchg
movsl
out
adc
fnstsw
inc
lods
das
or
js
inc
mov
fdivs
das
movsb
mov
out
pop
and
arpl
iret
jmp
add
bound
enter
pop
jmp
sub
pop
mov
sub
mov
es
push
mov
loopne
inc
xor
arpl
loope
fcomi
lret
rolb
outsb
test
pop
sub
xchg
test
mov
push
mov
mov
mov
dec
add
test
pop
lods
scas
aaa
notl
out
inc
mov
push
cmpsl
inc
enterw
inc
aad
pop
push
jno
das
and
sbb
add
adc
mov
mov
jmp
xor
sub
push
jb
addr16
imul
and
ret
aaa
leave
mov
movsb
jb
pop
inc
xchg
hlt
fmuls
inc
shlb
mov
jge
in
repnz
mov
and
push
inc
dec
subb
outsb
sbb
les
mov
pop
pushf
add
aam
mov
push
das
jb
fisttpll
mov
pop
mov
inc
fwait
sahf
mov
add
cmp
jmp
rorl
and
scas
pusha
push
repz
notl
ret
aad
cmp
sbb
insl
pushf
pop
and
add
xchg
xchg
mov
mov
mov
rcrl
dec
sub
mov
sbbl
incb
les
xor
test
movsb
sbb
repz
mov
ret
cltd
sysenter
fsubr
cmpsl
fisubrs
aad
lcall
adc
dec
fsubs
ret
cld
sub
cltd
mov
sub
push
fidivs
lods
xchg
arpl
jp
mov
mov
imul
sahf
out
or
add
adc
aas
or
xor
ss
pushf
aaa
add
nop
push
cli
jb
adc
sub
xchg
jb
ljmp
pusha
xchg
xchg
testb
pop
sbbb
imul
jns
sarb
loopne
stos
rol
ss
stos
mov
xchg
fnstsw
adc
mov
or
rol
xchg
dec
dec
or
dec
imul
push
ret
jle
cli
sahf
imul
sbb
js
mov
rclb
ret
fisubrs
adc
jb
cmp
xor
jae
sbb
enter
and
inc
dec
dec
jle
pop
repnz
mov
xor
dec
fcompl
pop
lahf
imul
in
add
shlb
je
fsubrl
and
addb
sub
arpl
push
sub
test
xchg
xchg
mov
ss
cltd
pop
inc
xchg
cs
je
ja
xor
sbb
fistpll
pushf
push
lods
mov
and
ja
mov
xlat
inc
xchg
adc
mov
stos
mov
or
mov
aam
cmc
or
lcall
adc
imul
inc
add
mov
in
add
shl
sub
js
sahf
push
and
fwait
jae
arpl
or
sbb
add
test
rolw
enter
xor
xor
dec
push
rcl
and
ja
push
hlt
dec
adc
and
jnp
rcl
imul
popa
sub
push
sub
mov
sub
mov
les
cmp
cmp
pop
xlat
pop
jp
xor
dec
mov
cmp
and
arpl
and
cltd
dec
aaa
push
mov
xchg
mov
arpl
push
pop
jno
sbb
cltd
xchg
adcl
inc
insl
jg
push
cmc
leave
sub
pushf
shll
sub
loopne
test
mov
lock
jbe
fbld
les
das
mov
jmp
lahf
movsl
jge
mov
aad
sub
mov
jp
pop
imul
xor
ds
ret
cmpsl
adc
lret
outsb
inc
pop
dec
mov
out
and
mov
sub
sub
adc
inc
jno
pop
inc
ror
jno
cmp
mov
icebp
jne
pop
xlat
mov
xor
jl
xchg
movsl
jno
and
inc
cld
jo
or
dec
xlat
push
shl
out
cmp
aaa
rcrb
rorl
imul
sub
ret
dec
ds
inc
dec
or
jecxz
pop
insb
add
mov
lea
pop
dec
ja
adc
sbb
test
enter
ja
pop
bound
daa
popa
rol
aam
les
mov
ljmp
repz
adc
daa
shll
ja
out
sub
xor
push
test
pop
decb
pop
cld
and
outsb
sub
imul
jp
push
mov
adc
add
data16
sbb
orl
outsb
sbb
sbb
mov
dec
sub
in
call
add
repz
cmpsl
mov
fwait
cmc
in
enter
mov
imul
mov
adc
cli
mov
mov
sbb
dec
jmp
outsb
pop
mov
xor
xchg
add
cmpsl
xchg
aas
mov
sub
jno
test
sbb
mov
shlb
stos
dec
mov
sub
lahf
enter
mov
pop
xchg
sarl
cmp
rclb
mov
adc
sub
sti
enter
jbe
les
sub
dec
add
mov
push
arpl
xor
cwtl
gs
sbb
cmp
das
xchg
jbe
xor
shrl
clc
adc
push
xchg
sbb
ss
sub
in
and
leave
xor
hlt
mov
imul
loope
enter
xorb
pop
test
xchg
lods
push
adc
dec
pop
hlt
ja
in
lcall
lret
mov
cmp
sbb
add
jmp
sub
push
insl
aas
cmp
fistpl
enter
aad
xchg
cwtl
pop
push
push
stc
lock
xlat
inc
testl
loop
mov
jb
aad
mov
jbe
data16
imul
lcall
jb
cmp
idiv
or
xor
hlt
push
push
aas
les
iret
or
xchg
xchg
aas
mov
mov
fucom
jle
sub
adc
enter
test
loope
cli
jns
loopne
and
or
js
sub
cmpsb
adc
xor
mov
jnp
cmp
cltd
test
scas
adc
push
dec
xchg
pop
filds
xor
loopne
mov
les
imul
fidivrl
data16
icebp
pop
dec
mov
push
sahf
test
jge
scas
inc
or
ljmp
daa
ja
xor
iret
imul
and
adc
stos
mov
dec
sub
xor
xchg
jns
or
lods
mov
sbb
add
dec
pushf
les
xchg
push
or
or
and
push
cmp
fwait
negb
or
shl
mov
mov
inc
xor
rcll
sbb
push
add
addr16
repz
adc
insb
dec
aam
mov
pop
pushf
jmp
mov
aas
and
lods
and
xchg
push
stos
lahf
js
aad
ficomps
popa
cmc
pop
push
xor
movsl
and
ja
or
lret
xchg
dec
pop
add
pop
fwait
xor
xchg
popf
ret
lods
xchg
xor
adc
dec
fiaddl
xchg
push
pop
imul
fsubl
cmp
pop
aaa
xchg
shlb
jno
mov
cmc
push
xchg
mov
dec
and
mov
jbe
ja
add
jno
add
je
add
dec
pop
hlt
sub
xchg
pop
jbe
gs
jecxz
mov
jle
mov
bound
out
fstp
shl
mov
jb
mov
int3
push
into
jno
push
sbb
xor
imul
imul
jmp
dec
out
data16
add
call
cmpsl
lahf
fcmovbe
mov
mov
xor
incb
mov
mov
lgs
or
mov
aas
push
add
mov
xchg
je
and
dec
sbb
call
push
and
aam
inc
call
cld
aas
movb
mov
sbb
aam
repz
outsb
adc
aaa
enter
nop
call
and
pop
xchg
lods
in
mov
pop
pop
mov
xchg
inc
popf
inc
andb
popa
loopne
lret
or
dec
jecxz
jge
adc
xor
js
xor
pop
jmp
and
cmp
cmp
dec
add
in
mov
test
and
lods
cmp
arpl
mov
xor
sbb
mov
or
cmp
jae
and
je
cmpsb
and
shlb
or
adc
and
fsubl
mov
sub
pop
or
pop
es
and
pop
xchg
test
and
push
xchg
clc
mov
add
pop
sbb
jb
dec
mov
and
sbb
cli
in
sahf
xchg
ja
mov
push
lcall
sub
idiv
cmp
mov
and
dec
ja
and
mov
hlt
lcall
or
add
and
mov
xchg
mov
fbld
shll
and
into
adc
pop
inc
clc
mulb
cmp
outsl
xor
cli
inc
gs
or
mov
in
and
ja
cmp
stos
jmp
and
pop
daa
pop
mov
popa
push
mov
or
scas
mov
pop
mov
jge
mov
dec
and
idivb
movsb
and
jb
nop
dec
dec
xchg
pop
inc
mov
scas
cld
mov
inc
sub
fiaddl
pop
andl
xor
mov
push
movsl
and
lock
mov
or
and
stos
lods
inc
mov
sub
lods
sub
add
jl
push
sub
into
or
fisubs
mov
sti
jne
jecxz
sub
push
cmpsb
jg
loope
pop
cmp
sbb
and
and
popf
jbe
push
or
xor
fs
and
inc
inc
mov
lods
or
and
or
and
jbe
pop
lcall
stos
inc
xchg
mov
inc
mov
and
jecxz
push
imul
dec
int3
and
sbb
and
cmpsl
rorl
mov
inc
lds
mull
push
or
fwait
out
and
str
xlat
lcall
cli
sub
xchg
stos
add
jl
lret
jge
gs
ds
mov
sub
insb
dec
and
xor
scas
cli
lods
and
lret
xor
lea
out
shr
adc
cmp
out
loope
adc
inc
sbbb
adc
ret
ljmp
dec
dec
and
pushf
mov
and
xlat
cli
cmpsb
inc
cmpsl
mov
mov
jne
mov
fdivrs
gs
sbbb
push
out
sti
mov
xchg
repz
and
sub
mov
and
and
mov
je
mov
loopne
popa
inc
and
and
jp
add
sti
add
xchg
ljmp
int
cmc
popa
lcall
xchg
movsb
sub
loop
and
repnz
jo
ret
xlat
jno
orl
jns
mov
add
push
and
movsb
ljmp
push
mov
sbb
mov
nop
push
js
sahf
insb
fildl
enter
push
sbb
sbb
lods
in
pop
lods
inc
mov
dec
jbe
push
rcl
and
sti
mov
cmc
inc
push
and
fisttpll
sbb
and
iret
lret
dec
loopne
arpl
sbb
insl
movsb
add
sub
cmp
inc
and
ja
cmp
iret
and
cltd
fdivp
out
xchg
and
fcoml
sub
popa
xchg
add
aas
ss
and
iret
sub
or
sub
jmp
lods
stc
and
dec
inc
push
lahf
movsb
mov
inc
and
int
pop
jns
mov
pop
outsb
xor
push
insl
dec
or
and
mov
subb
and
xchg
mov
rorb
mov
fmull
and
mov
push
jae
and
ds
xor
pop
inc
mov
mov
jnp
xchg
and
stc
punpckhbw
cld
and
sub
pop
and
ret
sbb
xchg
aam
dec
and
fcmovnb
lock
notb
and
popf
sub
dec
outsl
cmp
cmpsl
in
js
adc
xchg
fidivrs
pop
adc
and
cld
stos
or
leave
add
and
xchg
stc
mov
test
and
adc
iret
jg
and
inc
push
cmp
push
and
clc
mov
jmp
cmp
mov
cld
cwtl
mov
jle
pop
adc
and
xchg
mov
andb
sti
lahf
stos
xchg
out
and
dec
mov
or
jb
bound
dec
in
xchg
mov
pop
outsl
pop
mov
cmp
fstp
and
push
sbb
test
dec
or
dec
sub
push
xlat
fstpl
jb
icebp
adc
or
movsl
ret
add
lds
mov
cli
add
repz
push
xor
pop
pop
adc
fiaddl
test
psllw
mull
xor
aam
loop
cmp
scas
rorl
mov
cs
mov
lahf
test
sbb
cmp
adc
and
or
das
sbb
cmp
mov
jae
nop
push
and
je
test
inc
out
js
in
pop
loopne
cmpsb
jne
mov
std
xor
adc
js
inc
shll
cmp
div
mov
gs
dec
xor
xchg
in
and
and
mov
ljmp
test
mov
cli
loope
jns
insl
shlb
cmp
mov
mov
dec
sbbl
adc
adc
in
iret
dec
fdiv
and
mov
arpl
pop
repnz
sbb
adc
aas
dec
inc
push
pop
xorb
adc
and
or
jl
mov
iret
xor
sub
dec
jnp
pop
dec
test
and
insb
lds
lret
lods
filds
arpl
push
and
ja
and
sarl
ret
jp
mov
jno
sbb
mov
xchg
shrl
and
int3
xor
push
sbb
mov
mov
jne
ss
jg
dec
pop
xchg
and
push
and
jnp
add
aaa
jp
je
out
sub
data16
xor
sub
fs
or
lods
pop
xchg
testl
pop
std
daa
ret
bnd
mov
mov
cmc
or
sti
outsl
xor
and
and
push
and
jecxz
cmp
mov
mov
and
sub
adcl
inc
cmp
inc
xor
shll
cmp
repnz
imul
je
inc
sub
adc
dec
es
or
cmp
push
jl
rcrl
mov
inc
jae
clc
hlt
push
insb
and
pop
std
test
jae
sub
cs
pusha
push
xchg
addb
lcall
rorl
ret
clc
cmp
sub
xor
inc
aas
and
stc
filds
and
les
and
mov
cmp
adc
repnz
popa
pop
dec
lods
xchg
sbb
pop
dec
mov
enter
and
out
xor
adc
stos
shlb
jno
out
xchg
push
daa
push
push
lcall
aaa
fwait
in
frstor
mov
imulb
and
pop
and
pop
bound
ds
sub
pop
insl
pop
inc
cmpsl
jb
xchg
cmp
je
and
push
inc
lahf
jbe
sbb
stos
push
dec
jl
roll
push
outsb
sbb
and
ja
cmp
sub
iret
fs
daa
sbb
repnz
xchg
ret
in
sub
loop
mov
aam
xchg
mov
dec
lret
ret
add
imul
jmp
mov
push
pop
fs
hlt
dec
icebp
pop
push
jp
lret
xor
cmp
mov
xchg
cld
fs
jge
sub
dec
xor
test
repnz
jae
xchg
pop
and
pop
les
inc
cmp
and
sti
fistps
jecxz
fdivp
test
pop
adc
ja
pop
jno
adc
jecxz
sub
or
inc
cmp
jno
in
mov
mov
andb
arpl
pop
sbb
jae
repnz
mov
fsubl
repz
dec
inc
xor
fnstenv
push
push
in
jbe
mov
cs
push
dec
jns
les
add
push
jno
sbb
daa
imul
push
les
dec
ret
lods
cwtl
int3
inc
imul
loop
movsl
les
arpl
dec
adc
not
mov
and
sub
mov
or
fldenv
dec
cmp
adc
xor
lods
pop
aas
loopne
or
push
outsl
imul
mov
jmp
add
xchg
xor
fldl
push
jae
daa
jbe
adc
enter
or
or
mov
outsb
xchg
and
or
and
cmp
test
mov
das
cmp
popf
dec
and
or
adc
mov
out
sub
pop
data16
mov
jns
mov
add
fsubrs
out
xchg
adc
aas
sahf
clc
mov
mov
arpl
and
pop
xchg
int
je
arpl
ret
lcall
xchg
aaa
imul
pop
mov
adc
out
in
rclb
divb
jns
jg
loope
jae
ds
inc
pop
sbb
xlat
adc
stos
dec
lea
aas
icebp
push
jno
ja
imul
fcmovne
mov
push
jns
mov
push
and
pop
dec
xchg
sbb
imul
mov
cmp
fiaddl
adc
enter
mov
dec
adc
push
and
inc
mov
popa
pop
cmp
dec
enter
mov
loopne
inc
mov
pop
mov
inc
ja
gs
lods
cli
lahf
in
push
sbb
popa
jl
adc
push
sub
sbb
icebp
aad
sub
roll
or
push
jne
pop
pushf
bound
ds
adc
mov
mov
mov
pop
adc
daa
cli
pop
fistpll
int
xchg
dec
pop
je
push
pop
repnz
testb
xchg
aad
xor
push
mov
push
les
andl
adc
xchg
jae
sub
shl
js
sbb
cmpsl
dec
popa
and
mov
push
xchg
cwtl
outsl
cmp
test
mov
sti
call
loope
mov
and
mov
mov
loope
jl
or
jecxz
push
les
divl
xor
or
and
or
imul
or
loope
xchg
cmp
jb
push
cs
sbb
shlb
mov
bound
pop
outsb
cmova
or
imul
push
daa
pinsrw
mov
mov
xlat
dec
fbld
std
cmpsl
out
jae
fnstenv
movsb
xor
fs
fiaddl
jg
and
enter
ret
rclb
mov
leave
mov
jge
xchg
pop
jp
sbb
ss
and
mov
xchg
sub
pop
enter
fwait
cwtl
cltd
add
jnp
or
iret
fildl
jmp
mov
in
cmp
ss
and
mov
jl
test
into
xor
and
sbb
test
testl
std
cmp
and
inc
push
add
lret
push
in
sbb
scas
xchg
mov
cli
and
mov
mov
pop
add
dec
and
testl
and
jae
mov
mov
leave
jge
into
cld
and
dec
dec
xchg
push
jns
andps
insl
shll
dec
mov
xchg
and
or
and
mov
aaa
sbb
mov
and
ds
popa
or
mov
add
js
push
adc
mov
pop
pop
pop
dec
imul
lcall
iret
add
in
sbb
cmpsl
cmc
inc
lea
cmp
mov
sbb
sub
std
in
test
jne
in
bound
or
cmp
and
rclb
call
in
popa
sbb
fsubrl
and
mov
bound
aas
ss
push
adcb
shll
fs
dec
jg
fwait
or
outsl
imul
ljmp
icebp
mov
lea
aad
repz
insl
and
test
xor
ja
sub
jge
sti
sub
movsb
fndisi(8087
dec
and
xorl
xchg
lcall
and
aas
mov
xor
in
inc
jo
hlt
std
aam
movsl
jecxz
icebp
mov
mov
adc
sbb
mov
and
ja
mov
dec
pop
ret
pushf
and
and
sbb
dec
cmp
inc
push
xchg
lods
mov
xor
adc
into
aad
dec
and
inc
jbe
loop
push
pop
push
decb
xor
in
and
je
pop
jmp
rorl
jecxz
xchg
and
mov
orl
pop
lahf
js
cmp
xchg
mov
adc
les
mov
lods
lahf
jno
dec
and
xchg
inc
aad
or
stos
sarb
mov
xorb
inc
js
fisubl
push
cmp
rep
enter
push
mov
adc
add
jnp
cmpsb
and
sbb
pop
jge
and
cmp
insb
cmp
xor
lcall
push
cltd
mov
and
lods
and
in
sub
sub
jl
adc
and
lahf
pop
mov
call
popf
mov
and
clc
and
push
and
jg
pop
push
iret
and
and
cmpsl
jns
testl
fsubs
sbb
dec
pop
or
dec
add
outsb
imul
xchg
popa
and
dec
mov
dec
push
aas
movsb
cmp
stos
and
out
fisubl
outsl
inc
mov
cwtl
sub
cs
pusha
and
adc
and
push
xor
and
jge
call
and
sbbl
pop
mov
les
sub
lea
xchg
outsb
sbb
pop
add
cli
movsb
push
mov
jae
imul
lds
adc
fisubs
js
fs
enter
and
jmp
sarl
inc
leave
mov
loope
in
and
aaa
cmp
inc
mov
cmp
repnz
add
and
push
dec
pop
cmpsl
mov
out
ja
and
push
pop
stos
movsb
ljmp
adcl
add
pop
and
or
rorb
cmp
pop
dec
and
out
popf
push
insl
push
pop
mov
stos
sub
leave
dec
and
jp
iret
and
xchg
push
mov
xor
sbb
call
stc
sbb
adc
jne
add
pusha
add
mov
xchg
stc
aas
daa
std
ftst
test
insb
test
dec
or
andb
and
cmp
mov
and
mov
mov
and
clc
push
scas
dec
test
loop
mov
push
fstl
and
pusha
shrb
out
mov
xor
mov
and
insb
lret
pop
je
xchg
sbb
out
int3
mov
aad
sbb
loop
clc
or
pop
fs
xchg
rcrl
sti
ret
xor
and
fstps
mov
insb
popa
xchg
and
mov
lods
and
jp
movsb
imul
pushf
mov
jge
out
testb
or
xchg
or
into
sar
fcompp
inc
cli
cmpsb
and
insl
and
inc
pop
jge
sbb
shlb
dec
mov
aad
jnp
dec
pop
xchg
out
insl
and
notb
mov
mov
sbb
inc
loope
xchg
and
sbb
inc
mov
sbb
sbb
popf
popa
pop
add
adc
sub
mov
inc
and
subl
xlat
ret
add
jmp
mov
test
mov
daa
mov
cmp
and
hlt
ds
cmp
and
cmpsb
fcoms
pop
mull
repnz
or
lret
dec
or
movsb
adc
dec
mov
pop
xor
orl
out
sub
mull
adc
fs
mov
div
and
cmp
jl
lret
and
push
sbb
add
and
mov
mov
xchg
dec
lahf
and
call
and
mov
lcall
mul
adc
adc
mov
daa
and
cmp
lods
and
out
pop
mov
dec
and
push
push
daa
dec
push
mov
add
xchg
mov
sbb
popa
movsb
jge
pop
cmp
and
push
mov
adc
push
mov
mov
and
inc
mov
and
ss
and
ret
or
cmpsl
adc
jbe
popa
imulb
loop
testl
inc
push
outsl
push
push
mov
dec
jbe
clc
mov
es
mov
fadds
xchg
cmpsb
orl
lea
mov
cmp
xchg
out
add
jb
fisubrs
call
dec
or
sbb
inc
andb
fbld
in
into
lods
and
sub
and
xchg
outsb
aas
in
xchg
inc
mov
dec
push
aam
repz
loope
popf
ljmp
xchg
mov
or
fisttpll
cmpsb
jge
les
sub
iret
mov
push
sub
in
sbb
dec
repz
dec
push
jge
dec
mov
in
filds
add
dec
nop
xchg
ljmp
int3
jb
jne
insb
cltd
mov
stos
dec
das
hlt
inc
data16
ljmp
fdivr
lret
call
gs
ljmp
imul
and
mov
cld
in
scas
pop
fbstp
cld
sbb
aad
inc
loop
xchg
push
addr16
enter
icebp
jecxz
jle
rcrl
cmp
je
cwtl
hlt
jae
add
add
xchg
add
push
fistpll
jae
jge
xchg
or
mov
mov
stos
and
les
mov
adc
gs
arpl
sahf
and
pop
ljmp
pop
into
push
push
mov
mov
cld
push
and
dec
xchg
and
dec
repz
cltd
dec
and
xchg
mov
jbe
sub
inc
and
pop
cmp
insb
imul
scas
daa
mov
xor
fisttpl
sahf
arpl
fsubrl
sti
aam
cmp
jle
pop
cld
ja
jmp
bound
pusha
mov
mov
mov
jmp
xchg
jmp
sub
les
mov
cmp
jbe
jns
cltd
loop
pop
sbb
pop
iret
test
ret
rorb
cmpsb
inc
inc
sub
jge
repz
add
xchg
call
fistps
imul
stos
add
sahf
mov
push
xchg
sbb
clc
ja
insl
fsts
add
daa
fstpl
jp
mov
push
adc
es
jg
enter
push
lcall
out
insb
or
push
rclb
push
gs
add
mov
jl
or
dec
xchg
mov
shr
sbb
int3
test
lock
mov
adc
jp
fidivrl
push
dec
jnp
inc
sub
inc
jl
push
dec
cwtl
sub
mov
or
jb
aaa
icebp
sub
pop
xchg
andb
lods
negb
mov
mov
jg
xor
dec
mov
sub
adc
mov
lea
and
lds
sbb
sahf
imul
and
xchg
cmp
and
xchg
push
xlat
adc
pop
push
nopl
mov
and
jbe
out
mov
out
adc
push
mov
bound
push
out
pop
jbe
xchg
and
pop
mov
aam
test
mov
push
decl
jge
xor
pop
lcall
in
xchg
jecxz
mov
inc
inc
jg
jns
jl
aas
ret
mov
adc
and
inc
pop
testl
xor
jge
xor
add
ret
xchg
xchg
les
scas
inc
cltd
daa
pop
test
jp
inc
jge
imul
clc
push
push
sub
xor
xchg
inc
pop
rcrl
pop
les
cmpsl
or
test
mov
leave
add
inc
enter
jnp
orl
add
xchg
push
stos
rclb
mov
jne
push
and
int3
push
dec
or
adcb
cmp
loope
mov
pop
xchg
add
sahf
adc
xchg
imul
enter
cmp
xor
or
filds
adc
sub
dec
xor
add
mov
aaa
jge
pop
and
ljmp
pop
mov
dec
dec
enter
js
pop
mov
or
int
xor
incl
fsts
addl
add
or
les
push
push
test
dec
shll
aaa
inc
mov
shll
adcl
ret
shll
mov
loopne
leave
xchg
xor
add
retw
jmp
xor
insl
mov
fwait
sarb
rcrb
and
sub
xor
les
cmpb
jno
push
xor
dec
sbb
aas
iret
test
ja
ret
es
lcall
fnstcw
outsl
mov
add
mov
sets
leave
mov
mov
popf
das
les
je
shlb
lds
data16
subl
adc
jl
and
xor
rorl
pop
pop
mov
dec
adc
and
push
mov
inc
jecxz
jg
and
push
and
rcl
sub
in
imul
lods
jns
cmp
and
mov
add
jp
mov
push
enter
outsb
xchg
push
mov
adc
xor
out
imul
popf
ds
js
pop
and
cwtl
mov
mov
pushf
push
std
and
gs
cltd
inc
jmp
ret
out
jns
loopne
cmp
and
sub
std
push
rcl
jb
cmp
clc
out
aas
and
and
sbb
pop
and
dec
mov
add
jmp
and
out
xchg
jne
and
jle
stc
inc
shrl
into
add
dec
and
inc
fs
cld
ljmp
outsl
mov
sub
push
adc
and
cmpsb
sbb
mov
fdivs
sub
adc
shll
mov
in
push
pop
and
lcall
ljmp
lea
and
test
push
add
xchg
dec
and
jo
imul
adc
and
gs
pop
and
adc
lods
pop
call
rcll
test
fistpll
or
les
test
mov
xor
repnz
mov
and
push
push
jb
jne
and
roll
outsl
insl
cwtl
es
cmpsl
jns
and
add
lahf
adc
sbb
sti
push
cmpl
into
cwtl
mov
push
inc
push
xchg
cltd
mov
cmp
sbb
arpl
jl
push
sub
sahf
and
dec
aam
xor
mov
in
cs
and
pop
cmp
scas
inc
or
mov
push
dec
cltd
push
fnstsw
mov
or
or
mov
and
iret
shlb
and
addr16
jmp
iret
mov
and
sbb
or
inc
and
sub
jge
rclb
xor
sub
jmp
jl
sar
pop
adc
fs
test
inc
es
sub
loopne
ljmp
push
lock
and
push
inc
lret
lea
popl
pusha
pop
in
enter
dec
popa
pop
cltd
and
or
sbb
sub
test
fildll
sbb
xor
sub
imul
mov
pop
cltd
cli
subb
inc
jg
mov
and
or
adcl
fmulp
stos
ret
xlat
jecxz
adc
mov
push
sub
jp
push
adc
out
rcrb
int
add
mov
sbb
and
pop
push
inc
and
aaa
cltd
leave
inc
sub
xchg
jecxz
cmp
out
and
inc
xchg
scas
and
mov
aam
inc
and
stos
sub
push
xchg
xchg
shll
jmp
lret
into
mov
arpl
jecxz
lods
imul
pop
arpl
or
inc
push
xchg
stos
mov
out
and
lds
pop
and
movsb
mov
and
xchg
out
jnp
dec
adc
daa
nop
movsl
ret
and
fsubs
sub
or
jmp
xchg
mov
jmp
mov
sbb
arpl
ljmp
movsb
mov
int3
aas
adc
lea
inc
dec
test
jmp
add
sub
jl
aas
enter
insl
add
lea
xor
sub
jp
mov
xchg
cmpsb
aaa
repz
imul
icebp
sub
les
add
mov
andb
sbb
jge
outsb
mov
jge
psrlq
dec
fists
das
xchg
add
sbb
jne
dec
lea
mov
icebp
cmp
sub
in
cmp
xor
popa
inc
jns
xchg
daa
pop
bswap
or
fwait
imul
sub
dec
aas
adc
and
les
or
das
jbe
dec
pop
test
mov
out
sub
and
enter
sarb
and
lods
int
rcll
scas
push
dec
aas
es
iret
clc
orb
cli
mov
dec
sub
test
and
sbb
sar
fimull
mov
les
ret
jns
push
les
fcompl
lods
cmp
inc
mov
ljmp
sub
mov
lahf
les
and
add
jmp
add
std
js
inc
test
mov
ret
pop
sbb
sub
dec
mov
fdivl
cmp
decl
xor
aad
pop
jle
cltd
dec
jno
test
ss
pop
aaa
jae
imul
popf
and
popa
lods
pop
jae
mov
fnsave
xor
add
sbb
inc
adc
push
jns
enter
insl
jg
fmuls
xchg
inc
sub
jno
adc
aad
xorb
clc
mov
jns
sbb
xchg
in
into
aad
sbb
cltd
mov
lcall
int3
mov
cltd
xchg
ljmp
std
rcll
cmpsb
cli
and
mov
rorl
out
sub
outsb
mov
mov
mov
aas
lock
out
fnsave
jecxz
test
xor
inc
and
mov
mull
out
nopl
push
or
push
mov
push
test
push
jecxz
fdivrp
gs
mov
jns
in
xor
and
enter
push
dec
xchg
inc
jnp
sbb
es
jbe
ficoml
aam
enter
rclb
dec
es
xchg
sbb
dec
push
mov
inc
pop
fwait
cmp
xor
push
mov
add
cmpsl
and
loope
imul
aas
mov
adc
ljmp
pop
jg
cld
insb
push
pop
scas
or
mov
into
lock
inc
inc
push
jecxz
aaa
mov
sub
adc
push
stos
inc
in
jl
pop
bound
push
jmp
test
roll
mov
outsl
and
and
mov
pop
adc
adc
cmp
sti
lcall
pop
sub
out
orl
dec
mov
dec
sub
adc
push
cmp
icebp
cmp
pop
adc
mov
flds
jg
add
enter
push
adc
cmp
jno
mov
in
js
out
movsb
and
pop
out
sti
or
push
out
pop
mov
fidivrl
dec
cld
fs
xchg
cmp
aam
adc
mov
push
sbb
dec
jp
jge
fs
dec
pop
lahf
lods
cmp
rcl
out
inc
lock
or
cwtl
lcall
sub
cltd
push
popf
push
loopne
xor
cmp
cwtl
jae
divl
xor
jns
mov
jae
xchg
add
cltd
sub
xchg
int
mov
orl
or
and
ds
jmp
idivb
push
dec
dec
fstpl
rcll
pop
mov
mov
imull
add
push
test
adc
cmp
aas
xchg
inc
sbb
cmpsl
scas
imul
xchg
enter
les
xor
xor
xchg
sub
inc
mov
jnp
sbb
add
mov
popa
and
cwtl
rcrl
insl
les
sbb
dec
mov
lock
js
add
jmp
stos
xchg
cwtl
mov
cld
ljmp
ror
xor
xchg
faddl
adc
clc
sbb
enter
shrl
inc
mov
pushf
out
mov
and
pop
inc
push
dec
sbb
push
in
test
mov
sbbl
xchg
mov
ret
jno
flds
mov
stos
call
imul
sub
sbb
mov
les
xor
xchg
test
outsb
mov
lret
imul
add
mov
mov
sbb
in
push
jb
jp
aad
mov
sbb
shrl
mov
cmp
push
pop
leave
xchg
push
mov
icebp
cli
jl
cmpsb
les
fldl
lock
xchg
inc
iret
xchg
mov
mov
inc
xchg
inc
xor
pop
xchg
or
cmp
jl
pop
scas
adc
in
dec
shl
nop
dec
jns
ret
or
inc
jecxz
or
pop
sahf
mov
lcall
xor
addl
lret
lahf
push
jns
imul
lock
testl
cmpl
push
fbstp
loopne
movsl
lds
sub
es
into
inc
mov
sbb
adc
addr16
pop
mov
add
notb
push
imul
cmp
inc
bound
push
dec
push
inc
cmp
mov
enter
xor
lahf
addr16
ss
push
push
sbb
cld
dec
stos
inc
mov
out
jp
pop
add
dec
adc
pop
loop
hlt
xchg
lods
lret
lea
mov
jbe
cmc
pop
in
xchg
mov
enter
jge
sub
icebp
fcomp
pop
mov
cmp
inc
ljmp
popa
arpl
jmp
xchg
mov
lea
dec
jb
dec
xchg
ja
int3
loop
cmpsb
enter
mov
incb
mov
cmpl
dec
lods
call
xchg
sbb
jb
jmp
inc
sbb
or
ljmp
dec
mov
sahf
ljmp
sub
adc
add
mov
and
enter
add
dec
loope
arpl
outsb
adc
cltd
adc
push
divl
add
adc
mov
add
add
lahf
mov
mov
hlt
stos
inc
push
mov
jmp
inc
and
and
insl
cmc
push
jo
insb
mov
je
mov
mov
push
filds
push
sbb
xchg
push
shlb
dec
out
nop
push
jne
repz
mov
mov
xor
jl
inc
jp
sub
rcrl
arpl
xchg
sbb
and
insl
fbld
sbb
push
mov
sub
inc
aam
sub
inc
xor
arpl
xor
add
xor
ss
into
and
insb
or
sub
push
sbb
fs
pop
stc
add
arpl
mov
mov
and
aam
test
shr
cmp
sbb
add
mov
cwtl
jbe
sub
repnz
mov
inc
lea
pop
and
cli
sbb
push
aad
mov
jge
and
and
dec
pop
push
fldcw
xchg
ss
xchg
out
sub
and
jle
push
fcmovbe
and
jae
xor
adc
and
outsl
adc
xchg
xor
loope
out
je
imul
sub
sbb
adc
scas
fldt
mov
out
cli
cld
aaa
pop
add
and
xor
stc
ret
or
inc
dec
dec
or
and
xchg
jle
cmp
ljmp
inc
cmp
adc
or
and
lea
and
jns
lahf
cmp
enter
inc
or
mov
xchg
push
pop
out
add
cmp
pcmpgtb
test
cli
and
fs
ret
lds
xor
and
sub
add
nop
and
xlat
int3
jnp
sahf
xchg
ss
sub
and
pop
ret
mov
sub
and
data16
sbb
and
js
push
add
daa
and
mov
and
out
inc
mov
test
sahf
adcl
cwtl
xchg
mov
and
das
es
or
cld
push
lahf
cmpsb
and
or
call
sub
fidivl
sub
and
sbb
add
in
xor
pop
insb
lahf
cmc
and
pushf
adc
cld
shll
sub
mov
mov
out
enter
das
adc
mov
or
add
xorl
movsb
loopne
iret
jl
sbb
sub
pop
and
repz
gs
inc
ljmp
leave
fldcw
push
cmovne
mov
sbb
fadds
mov
stc
sbb
test
aaa
lock
inc
xchg
icebp
roll
xor
jge
arpl
adcb
ret
add
les
sti
inc
nop
and
test
jae
push
sub
or
fstl
xor
push
movsl
mov
and
sub
outsl
push
scas
and
mov
lret
shlb
bound
pop
add
push
sub
or
jp
cmc
mov
hlt
jg
loope
push
enter
dec
or
dec
outsb
jo
shll
ss
data16
imul
cmp
xor
push
and
and
daa
stos
loop
jp
xchg
and
std
pusha
clc
and
iret
hlt
ljmp
or
insb
rcll
mov
dec
retw
fbld
inc
xabort
jecxz
xor
sbb
and
mov
mov
shlb
push
xchg
and
and
pop
roll
pop
int3
jg
scas
pop
addb
push
test
push
in
jmpw
jb
and
jbe
or
add
loop
push
push
adc
jnp
das
and
popa
and
sti
and
pushf
cmc
push
push
xchg
popf
mov
add
xor
inc
lret
xor
mov
dec
loop
int3
cld
and
in
lods
push
cs
test
ss
cmp
xchg
sbb
and
sub
call
ds
add
mov
cltd
pushf
dec
ja
repnz
and
fisttpll
dec
and
mov
mov
pop
leave
mov
push
aas
or
and
mov
orl
cmp
and
int
push
jle
mov
sbb
lahf
pop
repnz
mul
and
stc
imul
or
and
insl
gs
inc
or
jno
push
xor
add
and
push
cmp
mov
sahf
mov
lods
in
and
mov
insb
or
adc
cli
jle
jb
fidivrl
xchg
imul
or
add
fbld
push
or
ljmp
cmp
push
xchg
jno
sub
cmp
push
es
std
and
gs
pop
fstps
dec
sar
and
ret
sub
jnp
shr
inc
mov
aam
sarb
xchg
jge
mov
mov
and
fbstp
sbb
push
and
bound
or
icebp
and
xor
sar
lret
mov
hlt
frstor
scas
add
adc
loopne
rol
cs
and
rol
jl
xor
into
or
sbb
shl
add
cmp
scas
jg
sbb
xor
ret
mov
or
int
pop
and
pop
mov
pop
mov
xchg
add
and
and
aaa
fistpl
mov
popf
mov
adc
jns
adc
and
and
dec
ss
addr16
aas
inc
data16
fwait
ljmp
and
pop
fistpl
pop
lcall
add
and
aad
movsb
in
fcmovnbe
pusha
stos
sub
aam
and
or
push
mov
jne
sub
inc
lcall
and
dec
push
pop
cmp
sub
xchg
adc
cld
fsubs
xchg
popa
aam
pop
jmp
cmpsl
sub
mov
out
xchg
pop
out
mov
and
or
inc
out
sti
and
and
jnp
mov
xor
stos
and
or
sbb
es
sbb
jns
loopne
mov
cmp
and
and
dec
and
aaa
ret
mov
and
fsubp
fmull
fistpll
add
aam
xchg
stos
jl
and
jo
and
jae
sub
repz
adc
outsb
push
and
stos
cmp
aas
loopne
fstpl
int
or
sub
lahf
jne
int3
cmp
test
ss
xor
add
imul
xchg
adc
pop
popf
jp
daa
and
mov
out
leave
and
xchg
mov
cmp
mov
dec
mov
mov
ret
sbb
in
and
shlb
into
and
jno
push
jle
sub
pop
data16
adc
mov
ret
nop
cmpsl
addb
jns
pop
pop
xchg
sti
jle
and
ret
mov
pop
sbb
es
jbe
push
out
and
xchg
mov
in
aaa
and
xor
pop
sbb
xchg
xor
fwait
and
enter
sbb
pushl
lods
testl
cmpsb
xor
push
inc
jnp
inc
arpl
jne
add
xchg
dec
mov
out
jbe
cs
jle
outsb
inc
mov
leave
dec
dec
jb
not
xchg
xchg
hlt
mov
sbb
negb
or
sbb
adc
fsts
sub
addr16
inc
jae
pop
inc
adc
jns,pt
or
lods
icebp
cld
frstor
adc
cmc
cmp
repnz
add
sub
add
or
mov
lock
xlat
inc
jbe
insb
clc
xchg
call
clc
faddl
sarb
pusha
arpl
sub
fimuls
sbb
mov
sub
xlat
sub
add
enter
iret
lret
pop
sbb
lock
cmp
imul
les
scas
mov
pop
enter
xlat
inc
into
inc
sub
or
enter
pop
and
loopne
lret
and
jno
sbb
cmpsb
add
popf
movsl
cmp
dec
or
mov
and
sub
or
fcmovb
mov
dec
jb
mov
xchg
pop
sub
dec
xlat
sub
gs
jb
cwtl
and
mov
push
adc
push
pop
test
ljmp
bound
ret
mov
sbb
xlat
inc
movsb
inc
mov
push
lcall
jb
stos
adc
sub
or
in
xchg
and
push
mov
fisttpll
repnz
rorb
dec
mov
jae
mov
ret
push
lret
iret
inc
xor
adc
bound
dec
cmp
mov
push
and
loopne
jp
cmp
data16
pushf
outsb
inc
cli
imul
aaa
scas
mov
sub
mov
sbb
jge
or
mov
add
inc
sbb
dec
enter
ret
cmp
outsl
adc
push
xor
and
aas
or
inc
inc
jecxz
pop
dec
mov
xchg
rol
pop
or
pop
jge
cmpsl
daa
icebp
adc
add
and
mov
xchg
lock
movsl
in
fisttpl
inc
pop
daa
mov
xchg
std
xchg
mov
stos
push
loope
pop
les
mov
xor
mov
les
or
inc
sub
addr16
and
sub
push
mov
ljmp
enter
and
iret
fstps
lret
outsl
das
push
lret
std
cmp
inc
test
sbb
loope
pushf
or
out
cwtl
rorl
test
jbe
xchg
cmp
clc
mov
es
packsswb
jg
test
movsb
jns
add
stos
sub
pop
mov
es
ret
in
subb
and
sub
pop
mov
popf
mov
cld
arpl
enter
push
dec
jno
es
data16
pop
cmpsb
aam
jle
jmp
cwtl
lea
pop
xchg
or
rorb
ja
cmp
jp
xor
rorl
and
imul
mov
push
xchg
jb
dec
or
jmp
aaa
adc
push
mov
jmp
in
xchg
add
sbb
std
std
jnp
push
xor
mov
icebp
insb
outsl
sbb
fwait
mov
inc
cmp
xchg
pop
jg
pop
movsb
pop
ret
shr
lea
inc
icebp
adc
mov
lcall
mov
sbb
ljmp
adc
cs
pop
lahf
xor
pop
ficompl
out
pop
add
es
mov
push
out
leave
es
push
inc
pop
adc
test
lret
enter
clc
imul
shl
mov
xor
xor
jnp
push
push
push
addr16
jl
in
inc
outsb
mov
mov
std
outsb
pop
mov
arpl
adcl
popa
jecxz
lcall
cwtl
mov
mov
or
dec
cmp
test
ret
mov
sbb
pop
stos
in
pop
sbb
stos
and
les
loopne
xchg
adc
test
insl
push
sbb
test
pop
add
hlt
jne
dec
xor
int3
sbb
xor
adc
sub
bound
cmp
les
push
fistps
lret
xor
shll
addb
cs
int3
mov
pop
cmp
cmp
pop
mov
out
loope
and
ret
sbbl
pop
incb
cmc
dec
shll
cmc
xor
std
pop
fldenv
cmp
cmp
push
jns
in
int
gs
mov
subl
insl
lock
jp
out
inc
sahf
pop
lret
push
ljmp
in
cmpsb
mov
or
push
push
jg
cmc
dec
enter
sahf
mov
mov
adc
or
inc
lock
leave
jle
rol
outsl
xor
es
in
shrb
mov
hlt
sub
cmpsl
xor
jle
cmpsl
aad
out
mov
xor
inc
and
cmpxchg
jle
imull
and
in
das
clc
fidivrl
sub
enter
mov
sbb
aaa
hlt
jno
mov
xor
pusha
inc
lea
mov
in
jp
imul
and
push
in
bound
push
xor
loopne
jle
sbb
xor
out
fstpl
pop
js
xor
inc
push
inc
and
mov
adc
test
cmpsb
inc
data16
cmp
js
shll
outsb
sbb
aas
mov
pop
pop
add
sbb
pop
lods
sub
cmp
jg
xor
mov
xor
ret
cmp
insb
pop
jmp
push
jb
sbb
fs
add
push
in
add
adc
rcll
inc
mov
lcall
pop
movsl
mov
jge
gs
jl
inc
lds
and
jg
dec
call
push
pop
arpl
enter
enter
push
filds
adc
arpl
in
flds
push
adc
dec
adc
test
mov
jecxz
imul
inc
mov
add
popa
jbe
ret
ja
mov
push
cmpsl
sbb
roll
xor
int3
xlat
loopne
ret
rorl
ret
and
cmp
sub
mov
cli
and
xlat
ret
pop
fcomps
and
enter
lea
sti
mov
add
rcl
jle
outsb
push
sub
sahf
arpl
shrl
daa
ljmp
ret
and
hlt
stos
push
push
dec
enter
or
shll
sub
pop
addr16
loope
ds
popa
lcall
jecxz
sub
and
shl
xchg
and
or
ret
daa
pop
jno
sub
cmp
je
mov
sahf
movntq
ja
push
aas
and
pop
sbb
popa
jecxz
adc
pop
iret
repnz
or
jg
jmp
jbe
inc
sbb
jns
jl
xchg
rcrb
pop
jecxz
nop
add
or
pushf
scas
ret
mov
sti
and
jb
mov
push
add
add
mov
add
enter
dec
sbb
pusha
scas
push
push
xlat
or
inc
cwtl
enter
jbe
add
test
xor
adc
push
les
or
shl
mov
pop
enter
pop
das
outsl
leave
shl
lock
div
stos
inc
shrb
addr16
sbb
push
mov
add
xlat
jo
jp
cmp
mov
sarb
pop
rorb
jecxz
imul
adc
pop
dec
gs
and
pop
or
dec
sbb
dec
inc
adcb
inc
dec
jle
jbe
mov
popa
cli
mov
inc
mov
jns
bound
shll
adc
pop
out
fisubrl
dec
in
push
lahf
add
sbb
mov
imul
xor
arpl
pushf
mov
fistl
daa
jno
punpckhdq
push
daa
stc
cmp
fnstenv
cmp
in
sub
dec
out
outsb
jno
cltd
push
inc
ret
sub
cwtl
movsb
mov
jg
fbstp
not
push
loopne
fsubrs
por
push
aad
cld
mov
mov
push
roll
imul
push
or
mov
sbb
pop
adc
push
mov
push
dec
inc
mov
jbe
jae
inc
dec
fnop
cmc
add
mov
lret
xor
ret
faddl
xchg
mov
mov
cli
xchg
daa
ret
xor
sub
pop
mov
leave
mov
sahf
jmp
les
lahf
add
mov
leave
or
decb
xchg
mov
outsl
fldenv
movsl
cmp
call
push
push
repnz
add
dec
dec
out
sub
aas
movsb
call
push
stos
sub
pop
test
or
pop
pop
imul
mov
icebp
jle
cltd
adc
scas
jmp
nop
fcoms
xchg
clc
ret
imul
pop
adc
ja
enter
xchg
nop
aam
std
decl
cmp
mov
ret
ror
dec
movsl
stc
sub
sahf
aad
jb
outsb
sti
or
mov
dec
jg
jnp
testl
popa
jg,pt
dec
adc
sub
dec
les
int
mov
lret
dec
fidivs
jg
sub
clc
xor
xor
mov
cmpsb
int
cmpsb
jns
lret
sbb
sub
push
jno
pop
int
cmp
js
popa
lea
push
push
add
ret
fldenv
gs
aas
sub
jp
fcoms
sub
and
ljmp
scas
outsl
les
jle
mov
inc
lcall
dec
or
sbb
xchg
lods
and
ret
cmpsl
xor
sbb
int
push
jb
jnp
lcall
xchg
fistps
out
cmp
push
scas
pushf
jbe
add
xchg
dec
cmpsb
push
out
icebp
or
mov
shll
iret
mov
test
fldt
mov
dec
ja
aas
jl
xchg
ret
cli
sub
adc
mov
xchg
xchg
imul
inc
and
in
inc
jp
es
je
pop
mov
rcrl
jmp
lcall
fidivl
mov
aaa
add
xor
jg
mov
sbb
cmpsb
push
jno
mov
add
dec
outsb
arpl
movsb
cli
mov
sub
adc
push
jb
ss
scas
cmpsb
mov
test
adc
inc
fcomip
hlt
adc
in
call
cmp
int
cmp
xor
stc
inc
push
ficoml
flds
popa
stos
lret
xchg
pushf
enter
fadds
dec
sub
movl
sti
adcb
and
inc
enter
call
addr16
push
fldenv
stos
push
cmpsl
add
icebp
mov
sbbb
fsubrs
call
cmp
loope
lcall
jb
inc
mov
pop
mov
mov
push
mov
pushf
inc
shll
mov
dec
loope
fdivr
xor
les
pop
stos
push
inc
sbb
fcmovnb
mov
add
sbb
loopne
into
add
pushf
rol
fucompp
mov
sbb
sbb
adc
mov
repz
push
sub
sbb
bound
das
fnstsw
arpl
jecxz
mov
or
enter
and
and
ja
int3
imul
sti
sbb
inc
jecxz
mov
test
dec
and
mov
pushf
pop
xchg
cli
mov
pop
andl
xchg
lahf
imul
mov
xor
or
sti
rorb
aam
mov
out
fucomip
jbe
jbe
push
pop
hlt
pop
data16
cmova
jl
add
add
test
ret
jecxz
sbb
sub
mov
mov
pop
inc
inc
rcrl
sarl
in
orb
push
and
add
incl
xor
mov
pop
sub
cli
mov
into
arpl
dec
sti
enter
loop
fdivrl
fildl
loope
stos
pop
int3
lcall
mov
les
sub
inc
sbb
insl
idivb
push
leave
ret
shr
pop
fwait
and
repz
outsb
fs
les
and
cmp
adc
xor
idiv
jo
xchg
mov
imul
lds
push
sbb
rolb
in
fsubr
push
xchg
or
inc
sbb
jns
mov
ret
cmp
xchg
ja
jmp
loopne
sub
jnp
fnsave
pusha
out
cmp
lcall
sub
icebp
jnp
inc
and
insb
push
and
cmp
pop
fimull
cmpsb
sub
stos
lahf
mov
and
lock
bound
cld
pop
jb
jmp
dec
or
or
lcall
jmp
cld
sub
daa
clc
cltd
inc
mov
jecxz
imul
jne
inc
inc
or
cltd
cmpsl
push
mov
add
test
sbb
sub
add
es
aaa
repnz
push
gs
or
mov
psrlq
push
sbbb
xchg
lds
xor
cld
jecxz
lods
shll
cmp
rol
push
add
jne
or
lret
mov
sahf
or
aad
imul
cmp
and
test
in
imul
sub
or
sub
add
dec
les
mov
ljmp
test
inc
pop
pusha
jp
fprem
push
dec
aaa
push
or
les
fadd
dec
add
jecxz
lock
pop
adc
shlb
mov
push
aad
mov
ret
mov
loope
pop
push
outsb
jp
sub
mov
lods
idivl
popl
repz
mov
pop
pushw
movsl
jp
popf
repnz
pop
mov
cmp
daa
mov
movsl
mov
xchg
jno
mov
inc
iret
inc
dec
stc
sbb
and
aas
adc
jge
inc
sub
mov
out
push
dec
call
enter
nop
movsl
stos
fistl
inc
pop
aas
je
fcom
sbb
pop
imul
sbb
hlt
inc
jp
aad
iret
fidivrl
xchg
inc
les
fisubs
fwait
mov
add
cmp
mov
push
sbb
test
xor
shll
pop
adc
xchg
popf
push
hlt
sub
scas
popa
js
divb
imul
in
inc
pop
mov
sub
sarl
mov
lods
cmp
in
pop
sahf
inc
add
ret
push
cmp
lret
in
adc
or
andl
xor
stos
sbb
mov
in
mov
scas
sub
sbb
inc
ds
mov
push
in
enter
fsts
int3
ror
fmulp
lcall
sbbb
xor
loope
fsts
push
imul
cmpsl
loop
add
dec
out
sub
mul
insb
test
repnz
inc
adc
mov
movsl
shll
pushl
sti
enter
retw
fs
inc
outsb
push
jns
aam
cltd
or
jb
xchg
xchg
nop
xchg
inc
pop
pop
imul
lcall
jne
sub
inc
repz
jl
dec
and
mov
jp
dec
les
scas
mov
pop
mov
mov
les
out
lods
dec
xor
clc
jl
inc
push
pop
jbe
jnp
xor
sahf
lds
outsl
inc
or
call
lock
rcl
addb
cmp
outsb
aad
ret
push
stos
sub
mov
rolb
inc
shll
mov
test
cwtl
pop
call
push
jns
mov
cmp
sub
fbstp
push
test
inc
or
outsb
fstps
test
lock
xor
xlat
lret
test
mull
cmp
ja
lcall
fistpll
vmlaunch
enter
outsl
sub
dec
xor
into
les
imulb
jl
adc
jl
js
mov
adc
ljmp
mov
outsl
or
and
mov
dec
jle
mov
inc
inc
sbb
xor
jae
daa
jns
and
dec
sub
dec
mov
xchg
add
imul
add
xchg
sbb
test
stos
enter
test
addb
out
mov
push
dec
data16
xor
sub
pusha
imul
enter
iret
lret
mov
jmp
mov
ljmp
jge
mov
xorl
dec
popa
pop
bound
and
lea
scas
mov
or
mov
incl
lods
adc
lret
aad
and
test
fwait
imul
jmp
dec
popa
pop
sub
clc
mov
cwtl
dec
movsl
bound
or
ds
cmp
insl
mov
aad
fcoms
inc
dec
fmuls
mov
adc
divl
shll
or
arpl
xor
lods
add
enter
enter
push
clc
loope
pop
inc
js
sub
adc
push
test
outsl
ret
adc
mov
jb
mov
mov
icebp
sahf
out
sub
test
push
pop
xchg
insl
and
push
mov
xor
inc
lcall
scas
fists
push
out
dec
pop
mov
imul
leave
fs
ret
loope
insl
sbb
pop
aam
mov
jge
shlb
add
imul
fstpl
push
sub
pop
clc
sahf
insl
fsts
aas
push
mov
sbb
jno
push
dec
rorb
jo
or
add
xor
outsl
bound
mov
pop
push
sub
xchg
cmp
pusha
subb
enter
int
cmc
cmc
testl
cmp
aad
imul
ror
loopne
arpl
dec
inc
rcrl
pop
or
aas
add
mov
aam
mov
pop
iret
xchg
push
jg
mov
mov
pop
jo
pushf
mov
shll
add
into
lds
ret
push
xor
jle
test
js
push
in
pusha
in
daa
clc
adc
xor
enter
pop
xor
imul
lret
test
mov
iret
fsts
movsl
push
stos
pop
les
xchg
mov
jl
xor
mov
sbb
lods
imul
aaa
aas
icebp
adc
jmp
sub
mov
dec
fistps
mov
les
lods
mov
add
jbe
outsb
jnp
psubsw
mov
test
or
pop
inc
cwtl
sbb
jp
xchg
mov
sbbb
fmull
inc
mov
xor
sbb
add
pop
push
jl
data16
lods
cmp
das
sub
sub
nop
inc
push
add
jne
sbb
retw
push
movsb
lcall
sub
push
fsubs
sub
add
fldenv
xchg
and
mov
loopne
addb
dec
imul
popa
inc
add
push
xsha256
cmpsb
xchg
dec
enter
xor
sbbb
test
out
ret
add
pop
mov
das
shr
loop
pop
jle
mov
in
mov
push
pusha
or
pop
xorl
dec
mov
arpl
or
inc
mulb
fisubrl
icebp
popa
rolb
test
sub
jg
inc
xor
adc
addb
mov
mov
mov
enter
outsb
adc
push
ficomps
je
jmp
cmpsl
jg
popf
xor
bound
jmp
jae
xor
push
add
dec
push
pop
xor
cwtl
add
mov
test
push
jp
jle
les
xor
and
cmovg
and
adc
in
lods
or
insl
mov
pusha
adc
pop
aaa
lret
movsl
push
arpl
sahf
mov
imulb
push
mov
pop
test
out
and
dec
pushf
stos
push
arpl
outsb
es
es
out
rcrl
xlat
aam
popa
sub
hlt
xchg
xchg
pop
push
and
push
add
cmp
leave
rorb
aad
pop
cwtl
jns
add
out
mov
pop
cmp
push
add
mov
xor
into
bound
cmp
cwtl
insb
ljmp
fwait
loope
xor
imul
jae
loopne
sub
xchg
sub
mov
jns
scas
xlat
add
mov
pop
push
lcall
aad
cs
int
or
push
cltd
mov
in
icebp
cld
inc
dec
xchg
cmpsb
jbe,pn
cltd
pop
xor
ljmp
inc
jns
mov
arpl
push
add
jne
rorl
inc
les
mov
subl
sahf
mov
stos
sti
sub
cmpsb
icebp
mov
cmpsb
lock
adc
push
jb
and
scas
sub
mov
mov
incb
inc
mov
jle
ja
adc
in
dec
arpl
enter
aad
aad
aas
shrl
sub
cmp
mov
inc
pop
add
nop
inc
imul
daa
sbb
movsb
scas
pop
leavew
adc
or
and
xchg
arpl
mov
inc
mov
cwtl
ds
and
mov
mov
lret
sahf
aaa
dec
mov
sbb
cmp
sub
dec
fwait
jp
rcl
mov
outsb
shr
mov
and
fs
loopne
cmp
mov
and
dec
sbb
pushf
sbb
jmp
xor
ficompl
push
xor
sbb
les
cmp
in
rorl
arpl
lock
push
mov
test
mov
fs
jo
icebp
les
insl
adc
subl
xor
leave
adc
xchg
jb
inc
les
xchg
jnp
or
or
or
cmp
xor
xor
adc
pop
push
imul
mov
iret
insb
loope
add
jp
les
mov
xchg
and
inc
ds
mov
in
jbe,pt
mov
push
jle
icebp
inc
imul
dec
mov
sbbl
shll
mov
clc
or
mov
ret
jno
inc
stos
xchg
cmp
add
lcall
pop
rcl
pop
or
xor
test
mov
mov
inc
push
les
les
fstl
cmpsb
test
stos
push
cmpsb
push
inc
out
dec
jp
pop
inc
sbb
and
jo
outsl
jmp
cli
rolb
out
dec
enter
adc
rolb
xchg
or
jge
jae
sub
mov
pop
mov
jmp
cld
xchg
mov
shll
xchg
inc
adc
mov
popa
or
idivb
xor
insl
xor
mov
and
ret
pop
push
inc
arpl
sub
mov
movb
jecxz
cmp
push
inc
ret
loopew
stos
mov
shrb
jbe
mov
pop
sbb
test
out
aad
or
ds
js
lret
sub
push
sub
std
enter
mov
xor
pop
loopnew
clc
cmp
adc
lods
imul
mov
or
sbb
js
pop
pushf
cmp
mov
arpl
mov
xchg
and
dec
enter
or
in
xchg
adc
es
lods
test
sub
and
cmpb
std
daa
insl
fnstcw
inc
sub
outsb
call
dec
enter
sbb
cmp
dec
jmp
jns
cmc
pop
inc
push
inc
sub
push
mov
mov
pop
int3
mov
pcmpgtw
popa
pop
xchg
push
cld
je
in
test
dec
pop
cli
imul
arpl
sbb
add
inc
adc
fsubp
pop
mov
inc
and
out
lahf
and
and
sbb
push
fmuls
pop
xchg
jp
xor
mov
mov
xchg
xchg
stos
loope
je
ja
sub
xchg
popa
andl
stos
shlb
enter
sbb
loope
pop
cwtl
jle
sub
xor
sahf
rolb
inc
xlat
jne
iret
test
loopne
movsb
push
enter
aam
xor
incb
sbb
sbb
push
lods
mov
cvtps2pd
int3
cwtl
insl
in
in
sbb
adc
cmp
sub
sub
les
mov
test
clc
cmp
cld
fisubl
pop
mov
ret
loopne
cmpsb
dec
mov
jp
jnp
sub
enter
in
push
call
movsl
sub
sbb
add
pop
sbb
and
pop
inc
test
movsb
push
jb
jno
int
lea
ret
cmpsb
jbe
imul
sbb
fcmovnbe
pop
add
inc
loope
adc
jg
cld
sbb
insl
dec
in
test
mov
inc
dec
xchg
cmp
rol
cmp
mov
lret
mov
pop
xor
and
mov
adc
outsb
or
mov
inc
jno
std
lret
lret
enterw
lret
test
int3
push
ljmp
enter
mov
cmpb
xchg
cmp
cld
iret
mov
ret
add
xchg
and
add
adc
inc
dec
mov
dec
mov
jecxz
inc
xchg
cmc
mov
pop
mov
lahf
dec
mov
lods
sarb
popa
pusha
jle
inc
sub
dec
lcall
ret
aam
les
jl
adc
imul
mov
or
addr16
cltd
sbb
and
push
in
ret
arpl
cli
and
dec
and
imul
lahf
addr16
push
mov
inc
and
sbb
mov
ret
arpl
xor
cmp
xor
rcrl
int
mov
sub
inc
popa
gs
mov
inc
pop
incl
mov
xchg
cli
jge
xor
jge
repz
xor
imull
hlt
loope
cwtl
test
xlat
cmp
push
popa
outsb
xchg
ret
cmpsb
xchg
mov
and
nop
dec
dec
and
lds
push
xchg
sbb
hlt
cmp
pop
int
int
aas
pop
and
pop
daa
inc
push
js
and
mov
jns
jbe
into
xor
push
rcl
rclb
lcall
dec
cltd
and
jno,pn
xor
fstpl
mov
fbld
iret
shll
and
dec
hlt
and
and
and
in
das
sub
xor
mov
and
pop
pop
cmp
mov
cmp
fsubs
into
mov
cmpsb
add
cmp
mov
add
adc
lock
adc
lods
sahf
mov
andl
cld
ljmp
and
jg
frstor
jge
add
inc
sub
sub
imul
adc
xchg
and
scas
jg
aaa
mov
and
xor
aad
jbe
and
movsb
cmc
dec
inc
mov
pop
push
lods
loope
std
and
push
mov
push
xchg
ret
push
and
ja
aas
in
jo
sub
jnp
stos
lret
sbb
add
cmp
subl
and
leave
fstps
test
movsb
lods
sti
and
insb
out
or
lret
and
out
and
sub
and
sarl
adc
sbb
push
xor
adc
jo
jg
insl
pop
shufps
cmp
cmp
cmp
and
jmp
aad
and
fcmovb
sbb
and
cli
push
iret
mov
jb
test
popa
loop
sub
hlt
push
and
add
pop
clc
or
xlat
loope
cmp
aad
fs
shrl
mov
sbb
in
or
sub
fs
and
in
and
xchg
jb
xor
pop
add
and
mov
nop
xchg
call
xchg
jne
and
sbb
ja
pop
sub
push
lock
and
loope
sahf
pop
inc
xchg
popa
xor
mov
loop
mov
stos
add
iret
and
shll
and
imul
and
sub
fcoml
sbb
adc
sub
mov
and
mov
fidivrl
push
mov
loopne
push
scas
movsb
int3
and
push
mov
and
push
mov
cmp
mov
adc
or
ror
orl
lods
cmp
fsubp
clc
and
shrb
aad
dec
mov
in
sbb
and
mov
repnz
xchg
mov
icebp
and
pop
insb
popf
mov
and
inc
int3
dec
or
and
push
pop
push
push
lds
les
rcll
arpl
xchg
arpl
adc
pop
mov
mov
sub
xchg
mov
mov
fcomps
mov
repz
jg
jo
xchg
and
lahf
dec
cld
je
and
jb
push
and
bound
inc
ret
movsb
pop
sub
push
adcb
lcall
les
in
xor
push
or
popa
ja
mov
xlat
xchg
imul
push
xlat
push
cmp
sbb
adc
imul
enter
inc
movsb
mov
test
ret
test
mov
in
imull
sbb
cmc
cmpsb
aas
inc
les
cmpsl
js
add
dec
mov
inc
sub
mov
aad
hlt
call
inc
imul
dec
int
adc
jns
push
xchg
insl
pushf
adc
or
ret
imul
idivb
cmpsb
daa
test
scas
sti
shl
inc
push
fbld
out
lods
mov
xlat
fstp
lret
and
frstor
lahf
push
push
sarl
andl
pop
lods
jae
shrl
sbb
outsb
jle
xchg
xchg
or
sub
leave
testl
les
adc
ljmp
fcomps
jb
testl
shll
sub
in
aas
maskmovq
negl
or
adc
in
xor
divb
aam
dec
mov
inc
out
dec
cmp
xor
fcmovbe
adc
inc
lods
jnp
loope
xchg
pop
mov
gs
add
pop
mov
adc
test
and
xchg
icebp
nop
jge
aas
inc
and
and
and
shll
mov
scas
xlat
mov
xor
arpl
fdivs
lcall
mov
ss
and
inc
movl
repnz
out
arpl
das
rolb
lods
or
out
and
push
insb
cli
dec
inc
and
mov
icebp
mov
movsl
fiaddl
push
cmp
jl
jb
cmpsb
push
subl
cltd
stos
repnz
mov
dec
enter
xlat
mov
and
cmpsl
sahf
aad
pop
pop
pop
sub
cmc
cltd
mov
std
sub
push
and
jno
das
jg
mov
inc
hlt
pop
push
and
cmp
shrl
icebp
mov
mov
mov
and
and
xchg
xchg
push
cli
add
xchg
test
and
sahf
dec
in
push
movsb
jge
shrb
xchg
xor
frstor
pop
mov
loop
push
xchg
cli
xchg
int
imul
and
imul
sub
outsb
xor
ds
addl
mov
jmp
inc
xor
in
and
jns
and
cltd
stc
push
pop
cwtl
fld
dec
and
stos
pop
sub
xchg
pushf
mov
insl
scas
push
push
loope
cmp
add
decb
push
movsl
mov
push
push
and
out
add
leave
cmp
stc
jle
mov
in
adc
cmpsb
je
push
push
and
sbb
inc
xchg
cmp
enter
pop
dec
xchg
jnp
testl
mov
and
mov
and
or
leave
and
inc
jle
and
out
mov
test
clc
adc
insl
scas
mov
addr16
shll
movsl
fs
inc
inc
mov
mov
and
repz
addr16
pop
cltd
pushf
repnz
sbb
in
in
pop
inc
mov
fs
daa
xlat
mov
or
dec
jle
stos
cltd
add
mov
mov
mov
loop
fimull
push
xchg
lea
lret
mov
pop
xor
inc
and
push
shll
out
mov
xchg
pop
inc
add
and
imul
fwait
dec
dec
data16
inc
push
dec
pop
sbb
and
loopne
cmp
ljmp
mov
clc
and
mov
push
or
inc
and
sub
push
push
cmp
andl
or
sub
sub
jmp
mull
push
hlt
push
loop
pusha
cltd
adcl
in
push
das
lea
push
xor
sahf
cmpsl
jecxz
adc
sbb
and
and
and
adc
sub
mov
sahf
and
sub
xor
scas
inc
cmp
jno
pop
sbb
xchg
lods
out
pop
cmp
into
loop
outsl
dec
out
or
sarb
test
jb
xor
and
fs
lcall
cmp
sub
pop
sub
inc
cmp
and
pop
gs
jmp
fildll
xor
xchg
fsubl
xor
cmp
inc
leave
push
and
sar
sti
cmc
out
and
stc
push
cmp
or
es
dec
mov
pushf
mov
and
fwait
or
jo
push
jmp
rclb
clc
push
pop
orl
mov
mov
sbb
cld
ret
and
mov
mov
inc
cmp
dec
pop
sti
and
inc
fisttps
mov
adc
adc
movsl
shrb
mov
add
mov
pop
pop
daa
inc
push
shll
test
pop
call
dec
jge
mov
pop
jl
push
jnp
and
cld
adc
cmp
pop
aas
mov
jge
icebp
cmpsl
and
pop
dec
pop
inc
out
movsb
mov
dec
dec
iret
add
nop
jno
sbb
and
add
jae
sbb
out
psrld
add
in
icebp
push
add
into
cmp
imul
mov
inc
mov
movsb
test
cmp
jns
cmpsl
sbb
pop
push
pop
mov
mov
or
adc
movsl
inc
or
daa
out
lcall
sub
movsl
sub
dec
test
add
inc
jb
xor
cmc
push
xlat
push
xor
aaa
cltd
ret
mov
movsl
daa
mov
ret
sbbb
enter
loop
clc
shll
test
jle
cmpsb
and
adc
clc
les
int3
pop
add
cld
xor
xchg
mov
movsl
jo
stos
enter
adc
adc
lods
jb
or
push
mov
adc
ret
pop
scas
cmp
mov
cmp
test
inc
addr16
ret
inc
xchg
xchg
les
test
mov
loopne
xchg
arpl
dec
loopne
pop
dec
sub
pop
rorl
dec
or
add
insb
pop
jae
xchg
mov
or
and
add
xchg
in
pop
cmp
dec
out
or
in
sti
jno
or
rcrb
enter
jae
mov
xorl
sbb
sub
ja
sbb
sbb
mov
push
pop
pop
xchg
xchg
mov
jb
lods
test
mov
ja
or
lods
data16
or
mov
xchg
jae
cmp
cmp
cmp
roll
stos
push
je
xor
jb
rcll
pusha
push
push
and
or
das
jnp
and
push
mov
call
arpl
pslld
sub
or
repz
inc
push
leave
sub
add
sbb
fisubl
loope
popa
out
inc
mov
adc
mov
mov
aam
inc
push
mov
ret
je
daa
icebp
xchg
and
stos
leave
pop
out
and
lods
push
inc
push
lahf
fadds
pop
sbb
dec
out
rolb
push
dec
push
enter
cmpb
xchg
mov
pop
adc
jae
adc
jmp
lahf
lcall
popf
sti
ja
mov
movsb
inc
sbb
in
push
arpl
push
jg
ret
xor
jle
sbb
mov
repnz
ss
ret
fmul
pop
imul
and
and
adc
clc
push
pop
jo
xor
daa
inc
aaa
enter
iret
scas
adc
leave
sub
sbb
dec
ret
imul
int
or
das
mov
mov
pop
nop
inc
adc
sbb
jnp
cli
jae
aad
mov
test
add
pushf
insl
popa
mov
adc
push
and
fwait
jbe
add
sub
mov
popa
mov
pop
xor
mov
dec
cmp
push
sub
dec
fsubr
jge
adc
inc
jbe
clc
outsb
jae
jl
pop
mov
jns
repz
addr16
xor
mov
add
pop
fcmovnb
insb
push
lcall
jns
aad
sub
push
mov
stos
iret
sub
xchg
add
js
add
dec
jns
cmpsl
xlat
and
ret
xchg
jge
pop
xor
lds
out
and
addr16
stos
and
mov
mov
out
aad
pop
ficomps
dec
and
fwait
cs
push
cltd
or
ja
mov
pop
fs
jb
insl
scas
push
xchg
aam
mov
mov
dec
add
daa
sbb
push
fsubr
add
jno
mov
mov
push
add
out
or
mov
and
cmpsl
mov
mov
jp
mov
and
lock
push
ja
mov
sbb
push
or
repnz
jp
jnp
fbstp
xor
mov
and
mov
xchg
pop
fisubl
dec
in
test
sbb
fisttps
adcl
sahf
adc
ret
nop
and
fst
jno
aas
sub
fiadds
mov
pusha
pop
int3
sbb
ret
mov
jp
jge
cs
pop
fnstsw
fs
or
xlat
xchg
jl
cs
mov
ret
sub
scas
mov
sub
std
imulb
dec
dec
idivb
xchg
movsl
sub
inc
aam
movsl
xlat
ret
insb
bound
or
dec
gs
orb
enter
xchg
cmp
cltd
testl
rcrb
sahf
inc
adc
in
push
lock
popa
sbb
cli
pop
mov
xchg
pop
jo
inc
int
mov
sti
stc
rolb
retw
inc
mov
dec
popa
es
sub
pcmpeqw
aad
enter
hlt
shrb
outsb
pop
xchg
jo
rorl
test
icebp
dec
cmp
lods
add
pushf
stc
ds
insl
enter
outsl
bound
ja
not
sbbl
jne
and
inc
push
cltd
ret
es
pop
cmp
push
test
int3
dec
dec
dec
mov
push
inc
sahf
lods
xor
add
ja
xchg
add
sahf
lds
push
fs
dec
fisubs
or
imul
pop
lods
jnp
push
inc
cmpsb
and
out
mov
mov
mov
repnz
xor
ja
das
insb
xchg
ja
test
cmp
gs
pop
jbe
sub
pop
mov
imul
cmp
jp
and
out
das
xchg
push
inc
inc
mov
and
in
pop
mov
push
stos
clc
xor
mov
mov
jle
sub
jnp
mov
insb
inc
sbb
and
xchg
aam
mov
inc
iret
movsb
addb
jo
mov
sbb
xor
loop
xchg
push
leave
iret
sbb
cmpsb
xchg
jmp
dec
addl
sbb
and
pop
push
les
sbb
das
cmp
repnz
add
cwtl
out
adc
dec
loope
mov
cs
fwait
test
out
sahf
jecxz
into
push
lahf
jbe
ret
mov
add
mov
inc
jo
imul
outsb
and
jp
loope
mov
insb
or
fs
add
sub
adc
mov
stc
jnp
inc
mov
push
push
xchg
mov
ds
mov
stos
jnp
push
xor
lods
mov
ss
mov
jbe
pop
adc
idivb
and
sarl
in
cmp
adc
mov
aad
xchg
cld
shll
xor
xchg
push
and
push
arpl
push
inc
inc
or
mov
or
xchg
cmp
imul
movsl
clc
mov
ror
pop
divb
stos
into
inc
jp
dec
daa
xor
pop
push
fst
les
clc
xor
loope
adc
xor
popf
bound
lret
aam
xor
dec
loopne
mov
xchg
pop
dec
and
cmp
cmovae
jns
dec
jb
or
xor
mov
inc
mov
push
inc
outsb
int
push
xchg
or
pop
loope
ss
push
ret
add
les
and
inc
push
jmp
js
mov
push
jg
push
les
sub
or
mov
jmp
cld
test
mov
les
push
xlat
ficomps
daa
or
fcomip
mov
sahf
and
addb
lcall
fisttps
inc
enter
movsl
mov
xchg
mov
pushf
rcpps
cld
aaa
adc
xchg
jmp
adc
lret
jno
adc
pop
and
imul
lods
insb
les
and
in
and
xor
inc
and
push
jnp
ds
adc
jno
repz
andl
lock
xchg
dec
and
cli
hlt
inc
push
aad
pop
inc
jb
lahf
and
dec
pop
and
dec
cmpsb
mov
imul
and
dec
pop
inc
xor
aad
add
adc
repnz
and
xchg
adcb
cld
ss
adc
call
lea
out
fisubs
lods
hlt
fwait
and
cmp
and
imul
inc
push
into
scas
lret
and
mov
fucom
cmp
out
and
addb
scas
xor
inc
adc
push
dec
and
cmp
std
test
add
mov
jbe
movsb
push
in
and
daa
pop
mov
inc
bswap
cs
inc
lock
or
adc
sbb
aaa
mov
mov
outsl
and
subb
jecxz
inc
fcmovbe
sub
xor
add
jmp
test
and
mov
mov
movsl
test
adc
lea
lcall
xchg
and
pop
std
daa
mov
pusha
cmp
pop
sbb
pushf
and
insl
xchg
sub
and
mul
imul
mov
mov
xor
lahf
push
andl
xor
and
or
data16
lock
rorl
and
cli
adc
cmpb
cmp
sub
fcomps
sbb
pop
and
adc
xchg
jb
adcl
jo
addb
mov
xchg
jns
push
das
subl
fiadds
add
or
mov
inc
popa
xchg
and
and
mov
imul
aad
xchg
adc
out
and
movsb
and
rolb
add
mov
or
repnz
out
aaa
or
nop
iret
sahf
cs
sub
mov
pop
cltd
aad
xchg
shlb
mov
popa
imul
and
mov
or
movsl
push
xchg
and
in
mov
sahf
rcrl
or
sub
stc
and
outsb
lods
in
pop
sbb
orl
lock
xchg
xor
cmp
test
adc
adc
inc
and
sbb
and
mov
daa
out
scas
adc
pop
ja
movsb
mov
push
lret
aaa
jnp
pop
push
outsb
xchg
and
int3
test
add
cmp
xor
jnp
stos
hlt
sbb
jge
lods
sub
push
sahf
daa
sub
xchg
pusha
jge
push
repnz
xor
push
adc
pop
leave
xchg
inc
ret
and
ds
test
add
adc
and
cmc
fcoms
inc
cwtl
int3
mov
and
clc
out
fs
scas
or
adc
and
jnp
ja
in
pop
and
cmp
jecxz
mov
pusha
fwait
insb
and
test
add
and
cmpps
and
mov
xlat
cli
cmp
es
mov
inc
and
inc
scas
enter
lea
mov
mov
cwtl
inc
xor
push
addr16
into
xchg
push
js
sbb
xchg
adc
mov
sub
cmpb
push
push
arpl
dec
jmp
pop
pop
jle
aad
add
xor
or
and
push
test
aad
pop
out
and
call
scas
in
dec
arpl
xor
ret
fisttpll
test
push
sub
cmpsb
mov
fstl
imul
sub
adc
lret
xchg
dec
lock
sub
push
pushaw
fwait
jno
adc
bsf
add
dec
movsb
xchg
mov
xor
ja
ret
cmp
repnz
imul
jae
imul
rcrb
fstps
sbb
aad
pusha
mov
mov
out
xchg
arpl
xor
loopne
inc
test
cs
jae
fldenv
enter
and
add
pop
mov
and
icebp
rorl
stos
outsl
lret
arpl
in
jle
loopne
les
lods
xchg
outsb
push
popf
enter
lahf
call
lcall
inc
call
cld
jo
jp
inc
pop
push
mov
cmp
xchg
enter
pop
adc
push
movsb
ret
xor
jno
xor
or
test
adcb
mov
testb
dec
mov
iret
subb
xchg
add
shrb
dec
mov
mov
and
sub
cmp
dec
mov
sub
inc
pop
iret
ret
cmpb
xor
lods
aas
sti
add
xchg
test
mov
mov
sub
jne
in
imul
icebp
lds
adc
clc
int3
imul
and
cmp
and
inc
rclb
out
adc
enter
or
xlat
push
jp
lods
out
fldenv
mov
sbb
pop
pushf
aad
out
mov
js
insb
enter
ret
mov
insb
mov
cmp
imul
cmp
inc
push
icebp
push
xor
jae
push
mov
scas
cmpsl
imul
dec
mov
adc
add
inc
and
divl
jno
xchg
push
and
mov
jnp
mov
pop
xchg
addr16
popa
xchg
and
inc
xor
in
push
mov
and
lahf
cmc
pushf
fcoml
mov
pop
sti
adc
sbb
ret
negb
push
inc
les
pushf
into
sub
xchg
jecxz
lcall
lahf
out
mov
and
mov
in
cmp
push
and
cwtl
mov
pop
push
cmp
and
mov
push
inc
shr
cltd
shl
and
xchg
mov
cmp
sub
jmp
inc
push
push
adc
mov
mov
jle
sbb
stc
jae
jmp
push
and
add
inc
out
push
add
pop
test
push
test
mov
and
mov
stos
gs
and
fdecstp
lock
jle
das
and
sub
add
fs
fdivr
les
cmp
repnz
and
sub
nop
pusha
lea
and
testl
out
inc
daa
aam
popa
push
scas
fwait
xorb
xor
sub
pop
sbb
jns
mov
out
xor
jge
mov
movsl
sub
xchg
cmp
and
xchg
outsl
test
dec
jecxz
and
or
sub
ljmp
and
or
xor
les
and
outsb
pop
sahf
ret
and
cmp
sub
and
add
and
fsubs
shr
xchg
and
cmpb
in
fstpl
fdivr
ja
rorb
and
mov
mov
lods
and
cwtl
cmp
or
sbb
mov
jge
arpl
jno
and
sarl
jp
xchg
add
mov
mov
dec
and
leave
pop
aam
sbb
and
mov
pop
repnz
lahf
inc
movsb
fcoml
dec
sbb
scas
xor
nop
frstor
mov
push
stos
mov
jae
and
xchg
gs
andl
pop
out
jo
pop
insl
lods
cmpsl
mov
fisubs
aaa
fsub
jno
das
sahf
dec
pop
push
out
mov
dec
popf
imul
sub
orl
pop
mov
adc
push
inc
notb
out
push
inc
sub
inc
jbe
and
insb
mov
xor
lock
mov
ud0
xchg
add
mov
inc
push
enter
dec
xchg
inc
sub
jmp
fidivrl
rcl
mov
cmpsb
or
and
ljmp
dec
icebp
sbb
das
into
mov
jecxz
or
jl
jno
push
push
pusha
out
popf
pop
ja
and
dec
mov
mov
lds
push
pusha
cltd
xchg
pushf
je
div
fidivrl
and
fdivl
push
lock
adc
idivl
xor
inc
stc
push
mov
add
mov
popf
cld
daa
jne
fisttpll
jecxz
in
fmull
outsb
sldt
xchg
mov
stos
sub
pop
test
xor
enter
hlt
xchg
xchg
sub
cld
inc
jne
out
and
mov
hlt
xchg
xchg
and
add
and
mov
lahf
and
pop
sbb
mov
je
xchg
adc
nop
and
insl
add
xchg
test
scas
and
ret
ja
and
xor
mov
sub
or
mov
adc
adc
push
dec
in
out
and
je
pop
sbb
and
dec
and
fistl
rorb
and
out
adc
pop
pop
in
cmp
cltd
sahf
xlat
pop
inc
out
or
test
xor
mov
je
into
sahf
rcrb
inc
push
out
and
pop
dec
mov
and
test
and
or
arpl
and
out
mov
xchg
sub
in
arpl
mov
pop
adc
mov
test
cmp
mov
cmp
jnp
dec
jg
inc
xchg
test
or
call
jo
and
pop
jb
inc
hlt
arpl
mov
leave
cmp
jecxz
push
sub
fwait
or
pop
mov
popf
pop
rolb
cltd
mov
int
mov
xor
and
leave
dec
and
orl
outsl
fdivs
push
sbb
popa
adc
and
mov
outsb
or
lds
mov
imul
dec
push
aas
xchg
jmp
and
xchg
addr16
fnstenv
pop
xchg
and
in
out
ret
and
cmp
mov
imul
outsl
mov
fwait
push
and
sbb
lahf
in
jmp
mov
in
and
dec
imul
cltd
stos
pop
push
cmp
or
or
inc
xchg
ret
fwait
and
loopne
cltd
and
push
and
lods
insl
and
shrl
xchg
xor
clc
cmp
rol
add
daa
jecxz
pop
jg
jge
mov
enter
cmp
push
and
adc
pop
dec
aas
xor
shlb
lcall
and
loopne
out
mov
sub
pop
xchg
loopne
scas
mov
adc
xchg
pusha
pop
lcall
and
xchg
orb
dec
push
in
mov
sahf
das
xor
xchg
cltd
cmp
daa
jle
mov
xchg
xor
and
nop
jmp
sbb
and
inc
add
imul
in
mov
idiv
call
cmp
mov
inc
in
in
push
sbb
or
sub
cmpsl
push
sub
and
pop
sbb
mov
out
sbb
sbb
xor
imul
pushf
inc
mov
push
add
and
jae
sbb
das
pusha
pop
movsl
scas
mov
shll
rcl
xchg
cmp
jl
xor
cli
and
mov
fstpl
cmc
cmp
adc
mov
and
cli
pop
pop
push
stos
and
push
mov
les
ret
or
pop
je
insb
mov
das
mov
dec
and
mov
iret
cltd
and
rcrl
les
ss
aaa
lods
mov
mov
lods
sub
and
lahf
inc
fsubs
vpcmpistrm
mov
aas
sahf
test
cmp
and
subb
sbb
sub
push
push
fs
and
jns
inc
pop
enter
iret
push
sarl
je
push
cmp
and
xchg
push
or
push
inc
mov
call
mov
sub
cmp
push
cmpsl
in
cld
cmp
inc
sub
jbe
sbb
sbb
and
jo
and
lret
inc
stos
fsts
out
nop
dec
arpl
or
add
and
xchg
xchg
enter
or
mov
iret
inc
add
aam
imul
movsb
mov
xchg
jo
aas
enter
sbb
test
or
inc
sub
fldcw
ja
les
les
xchg
mov
enter
jle
in
sahf
pushf
mov
loopne
ret
pop
call
inc
shl
xchg
push
shll
mov
popa
sbb
mov
push
int
jl
mov
inc
xor
adc
push
ret
jmp
jle
inc
or
mov
insl
xchg
adc
sub
inc
mov
movsl
les
push
ret
jb
int
sbb
push
mov
les
rolb
lcall
jl
ljmp
in
idivl
xor
jo
push
int3
adc
bound
pop
jnp
pop
xchg
mov
sahf
les
imul
ret
in
int3
std
leave
scas
movsb
jo
or
inc
pop
les
pop
ljmp
mov
loopne
xorl
cmp
cmp
or
loope
dec
out
mov
xchg
imul
dec
and
repnz
xchg
test
lret
xor
push
pop
out
repz
adc
pop
lahf
into
pop
aaa
add
leave
mov
xlat
sub
sub
pop
xor
jg
mov
sbb
out
mov
into
push
push
jecxz
sahf
movb
ret
shll
mov
scas
xchg
sub
dec
xor
in
sbb
pop
pop
sbb
dec
xchg
and
addr16
sarb
inc
icebp
or
out
ret
fst
stos
push
jmp
cltd
lret
je
jnp
pop
inc
daa
inc
enter
ret
std
jns
cli
lret
inc
das
adc
or
jne
xchg
jbe
xchg
neg
push
icebp
jecxz
fistpll
loopne
cmp
pop
or
notl
addr16
jbe
int
add
sub
mov
je
mov
mov
popa
jne
mov
outsl
in
push
fs
jle
cmp
in
shlb
pop
enter
add
mov
jp
jno
imul
sbb
xor
cltd
jle
enter
add
push
xor
imul
enter
or
inc
adc
stos
and
pop
cld
xchg
mov
or
mov
int3
inc
sbb
mov
mov
or
into
fadds
pusha
sbb
psraw
sbb
subl
ret
inc
dec
adc
sub
hlt
daa
push
mov
mov
imul
adc
fisubl
bound
add
call
movsb
enter
adcl
inc
adc
xchg
divb
xor
ret
aaa
mov
cwtl
mov
lahf
or
inc
and
aam
cmpsl
push
push
dec
inc
inc
pop
or
push
insb
xchg
jecxz
xchg
rol
push
mov
mov
and
cmp
cltd
in
adc
sbb
in
push
adc
mov
lds
leave
int3
and
cmpsb
pop
sub
sbbl
sub
lahf
imul
push
gs
xchg
test
outsl
fwait
or
daa
enter
lret
and
idiv
sub
xchg
lcall
sarb
fmulp
and
pop
scas
mov
imul
pop
jno
inc
enter
mov
or
xchg
fisubrl
jp
repz
mov
dec
push
filds
rep
xor
in
mov
insl
push
ss
pop
mov
mov
xorl
leave
fucomip
sbb
dec
fisttpl
scas
pushf
dec
les
orl
pop
sub
push
fcoms
ljmp
jae
popf
in
pop
loope
cmp
push
in
sbb
or
jmp
sub
iret
push
mov
jl
orl
push
call
mov
xlat
sbb
push
ffree
repz
jae
sbb
push
fbld
pop
ss
and
jo
xchg
dec
push
stos
sub
ret
fistl
xor
inc
loope
div
mov
cltd
rorl
inc
jnp
mov
fwait
daa
mov
pop
imul
adc
push
rcrb
and
ja
ret
xor
jns
je
cwtl
push
fdivrp
add
and
ret
push
jp
mov
es
dec
sbb
popa
out
jnp
stos
je
inc
mov
movsb
das
lods
scas
dec
adc
mov
xor
add
idivl
xor
mov
mov
nop
pop
push
fsubrs
add
daa
lret
dec
stos
in
pushf
inc
arpl
pop
and
and
ret
mov
mov
mov
mov
decb
movsb
jp
lcall
mov
cmp
or
popa
int3
movsl
add
imul
pop
add
dec
push
out
enter
popa
adc
inc
enterw
pushf
mov
push
and
arpl
inc
scas
test
add
enter
pop
scas
in
jp
jg
dec
mov
lret
mov
push
or
xchg
xor
ja
adc
dec
roll
pop
in
inc
add
mov
xor
filds
xor
xchg
in
popa
fadd
sbb
adc
cmpsb
pop
sbb
ret
dec
jle
dec
dec
xlat
les
arpl
mov
fdivl
into
and
sub
add
int3
jp
idivl
inc
ffreep
adcb
jb
andb
or
enter
mov
addr16
mov
les
xlat
jl
or
fs
adc
adc
cmpb
jmp
cwtl
or
aad
jnp
pop
ret
and
in
lds
or
popa
imul
inc
in
mov
cmp
xchg
jmp
les
sub
stos
inc
push
daa
scas
les
push
pusha
jbe
dec
xor
insl
rep
adc
imul
sbb
xor
mov
ficompl
add
inc
xor
ret
wrmsr
adc
jecxz
inc
or
roll
push
dec
inc
cs
int
mov
enter
adc
ljmp
loope
aaa
sbb
jne
popa
les
dec
enter
pop
xor
xlat
addl
cld
add
jmp
xor
adc
xchg
outsl
repz
push
sub
and
loop
lahf
xchg
les
cmp
bound
sub
mov
mov
xchg
push
addb
imul
sbb
xchg
sbb
sahf
xorb
insl
mov
pop
dec
push
js
nop
jecxz
jge
inc
jge
test
xor
mov
cmp
decl
lea
int3
lods
sbb
adc
loop
cltd
stos
xchg
test
jnp
pop
and
sbb
mov
sbb
sbb
mov
and
mov
xchg
dec
and
fistps
mov
mov
jb
push
hlt
hlt
dec
out
sbb
and
and
ret
sub
pop
mov
or
sahf
mov
lea
cwtl
andl
fstpl
les
sbb
fildl
loope
aaa
mov
stos
hlt
xor
push
xchg
lods
push
sbb
sti
or
add
add
hlt
add
inc
lcall
sbb
sub
sub
loopne
dec
mov
push
faddl
cmc
jg
rorl
lea
test
jg
les
jg
repnz
pop
sbb
sbb
insl
sbb
je
sbb
adc
mov
sub
dec
sbb
mov
pop
loopne
dec
flds
mov
rcl
sarl
arpl
ret
mov
inc
jmp
sti
pop
add
scas
jmp
mov
inc
popf
sbb
and
sar
adc
in
add
jp
enter
mov
clc
mov
mov
xor
insb
bound
xorl
xchg
inc
daa
mov
mov
xorl
add
ret
mov
mov
test
jp
inc
nop
push
movsl
ja
shll
movsb
js
sbb
jno
inc
jo
add
js
cmp
ret
fwait
fwait
adcb
sbb
sbb
dec
jl
push
arpl
and
stos
imul
mov
scas
xor
jle
xchg
stos
pop
and
sbb
sbb
push
sub
inc
aaa
sub
add
push
xor
dec
out
enter
rolb
push
dec
push
and
sbb
pop
lods
leave
jle
jb
mov
out
dec
xchg
dec
enter
dec
nop
inc
nop
or
mov
or
xor
xchg
imul
inc
divb
xchg
sbb
push
orl
jle
clc
adc
sbb
lods
sub
sbb
cs
pop
fucom
out
lock
inc
sub
sbb
jl
push
ss
stos
fisubrl
enter
xlat
pusha
pop
push
sbb
cmp
mov
push
add
stos
dec
push
pop
js
xor
mov
jmp
outsl
mov
cmpsl
add
cwtl
dec
sbb
popa
inc
lock
leave
xor
add
ds
push
sbb
sub
sahf
inc
in
loope
pop
or
inc
orl
xor
in
fdivl
ja
add
ret
sub
mov
and
sub
push
mov
pop
pop
in
cmp
repnz
ret
mov
push
les
aaa
dec
cmp
mov
mov
rorl
fimull
adc
add
test
pop
clc
push
mov
push
pop
inc
xor
mov
mov
mov
enter
pop
and
out
xor
pop
ljmp
fistl
outsb
aaa
mov
fdivl
pop
jbe
mov
int3
aam
xor
add
jge
ret
xchg
loope
out
xchg
popf
call
into
pop
dec
cmp
push
sub
and
std
inc
sbb
aaa
sbb
cmpsl
repnz
insb
lods
pop
inc
jb
imul
incb
mov
cmp
jns
filds
add
shr
xchg
inc
cmp
shll
stos
cli
cmpsb
and
les
cmpsl
dec
adc
rcl
or
fidivrl
push
inc
dec
shlb
addr16
and
mov
daa
cld
xchg
aaa
mov
adc
test
lock
clc
mov
in
sbb
inc
in
cmp
push
sbb
lahf
push
jg
rcl
adc
inc
shrl
jae
in
out
mov
pop
jecxz
lea
cmp
enter
inc
aad
add
lret
xchg
and
js
mov
cmp
or
and
add
inc
sbb
test
or
fisubrs
add
or
and
std
xor
insl
xchg
dec
jge
xor
mov
les
sub
enter
and
jnp
addl
ja
jno
mov
fiaddl
and
icebp
pop
jecxz
pop
mov
jmp
icebp
pop
imulb
addb
stos
scas
inc
fadd
sbb
and
inc
push
sub
loop
ret
mov
inc
push
nop
pop
xlat
sbb
out
cmpl
stc
cmp
and
sub
cmpsl
fistl
scas
adcb
les
push
sbb
fstps
adc
and
data16
sub
scas
dec
inc
or
loope
add
in
add
aam
jo
add
fs
pop
push
mov
sbb
hlt
mov
cs
bound
and
adc
inc
pop
jb
mov
out
mov
divb
cld
pop
sub
and
xor
pop
iret
push
in
sbb
adc
and
shrl
shll
push
jbe
sbb
and
cwtl
pop
lcall
out
dec
push
mov
mov
xchg
sub
daa
sahf
dec
outsb
in
jmp
push
pop
fcoms
std
imul
and
push
mov
stos
pop
stos
scas
jno
lds
push
mov
jo
mov
lea
lahf
jnp
mov
hlt
pop
out
pop
mov
in
lahf
ljmp
jbe
adc
enter
dec
and
inc
test
jns
mov
in
sbb
setg
xor
and
jns
add
fstp
std
mov
mov
out
and
inc
testb
push
pop
inc
out
cltd
xor
xchg
mov
cmp
push
push
mov
das
xchg
icebp
pop
dec
cmpsb
sahf
fstpl
adc
xchg
xchg
ret
repz
or
xor
cs
ja
inc
mov
clc
jge
jne
fildll
pusha
pop
cmp
jbe
dec
lret
popa
enter
cltd
xor
sub
mov
gs
mov
adc
rcrl
jg
repz
mov
inc
dec
aad
push
fildl
imul
cwtl
out
cmp
in
stos
loope
dec
in
cld
dec
push
or
add
imul
jne
mov
push
iret
sbb
inc
jae
and
enter
lret
fiadds
cmp
orb
dec
enter
movaps
mov
imul
mov
dec
jle
xchg
xor
push
pushl
mov
mov
or
int3
push
sbb
loop
movsl
sub
icebp
dec
iret
and
dec
inc
push
mov
ret
sbb
bound
or
mov
fbstp
idiv
inc
jno
cmp
or
iret
add
imul
pop
pushf
fs
mov
mov
scas
je
call
add
xchg
inc
mov
xorb
mov
or
xchg
les
mov
mov
ds
lods
jmp
cltd
icebp
lods
aad
mov
cld
ds
dec
mov
xchg
add
mov
mov
sbb
les
and
mov
mov
add
imul
mov
push
and
rcrl
jle
sbb
adc
and
push
gs
or
pop
sbb
fisttpl
push
ret
push
in
adcl
sub
addl
scas
push
rcll
pop
jg
outsl
mov
push
arpl
aas
sub
jl
scas
mov
jb
xchg
adc
rcrl
add
in
stos
push
pop
in
xor
and
or
push
cmp
fdiv
rolb
mov
sbb
das
dec
cs
mov
int3
ret
scas
je
repz
punpckhwd
stc
pop
mov
sub
scas
add
dec
mov
adc
inc
xlat
add
in
jae
ret
repnz
fistpl
mov
sbb
push
cmp
sbbl
aad
and
pcmpgtw
int
stos
and
inc
mov
push
sub
imul
sub
imul
mov
jno
mov
fs
push
xlat
fmull
mov
cmp
inc
cmpsb
in
xor
jnp
enter
addr16
add
mov
and
sbb
cmpsb
outsb
xor
mov
or
jo
sbb
adc
rcrb
adc
pop
daa
cmp
in
sbb
lret
mov
jmp
arpl
sub
dec
dec
mov
icebp
in
adc
aam
push
rolb
fnstenv
jno
xorl
test
inc
push
in
jle
enter
insl
xchg
es
ret
xor
imul
pusha
and
imul
ja
out
sbb
mov
mov
sbb
jmp
xor
mov
jnp
inc
jle
sbb
adc
es
fwait
enter
push
lock
daa
jo
leave
jmp
pop
lret
popa
testb
cmp
popl
mov
mov
inc
xor
insl
adcl
inc
pop
xor
outsb
in
rcrb
je
gs
mov
jne
mov
test
mov
cmp
pushf
into
mov
sti
and
xchg
mov
call
insb
icebp
jmp
inc
int3
mov
daa
in
int3
int
daa
dec
xor
int
arpl
push
int3
lahf
mov
pushl
rorl
fbstp
sub
inc
or
cmp
push
xor
pop
xchg
scas
adc
push
scas
clc
mov
and
pop
scas
or
lock
lock
xor
shlb
push
bswap
int3
cmpsb
xchg
in
inc
cmpsl
add
fs
scas
rorl
sub
lret
lret
mov
mov
dec
jl
jmp
jmp
and
cmpl
jae
push
push
and
scas
jae
ja
mov
push
jp
addl
push
das
cltd
inc
mov
arpl
cld
jb
and
mov
arpl
inc
movsb
aaa
movsl
adcl
xchg
lret
push
aas
arpl
faddl
nop
into
fdivrs
imul
push
mov
add
jno
mov
outsl
insl
ljmp
mov
sbb
enter
test
inc
or
dec
out
inc
loope
ficompl
sub
inc
xor
enter
jo
add
and
sub
lds
xor
pop
mov
enter
fcoml
arpl
int
jo
mov
insl
xlat
inc
imul
sbb
scas
push
out
in
bound
or
add
fisubrs
mov
mov
lret
cmpsb
add
dec
imul
add
xor
inc
imul
and
cmp
outsb
cmp
adc
sbb
xor
add
or
ljmp
xchg
xor
dec
in
mov
and
ss
les
add
xor
sarl
testb
jae
fbld
orl
arpl
jbe
aas
xor
inc
add
xchg
push
mov
inc
jae
in
push
out
and
inc
fcoml
insb
or
fwait
movsl
and
jg
addr16
add
arpl
push
mov
filds
add
lcall
lcall
test
push
mov
aad
insl
into
inc
xorl
enter
out
cltd
sti
ja
sbb
ss
enter
xchg
inc
mov
aas
xlat
mov
cmp
push
and
enter
adc
xchg
ljmp
jmp
mov
aam
pop
aaa
call
arpl
xchg
or
lds
add
cwtl
mov
mov
idivb
add
adcb
mov
imul
dec
sub
lods
aaa
enter
cltd
fstps
mov
sub
mov
push
add
cld
mov
fstl
insb
push
es
sbb
fcomps
sub
iret
arpl
mov
sub
imul
push
mov
jmp
or
sbb
pop
jmp
lds
fnstsw
dec
insb
loope
cmp
or
push
iret
jns
orl
jbe
ja
add
dec
sbb
hlt
out
stos
rclb
clc
mov
jl
stos
popa
add
pop
mov
js
daa
rcrb
jl
dec
and
mov
pusha
pop
in
enter
clc
cmp
ret
daa
dec
adc
std
pcmpeqb
in
cmp
lgs
xor
xchg
sbb
inc
adc
inc
ret
inc
lods
fildll
adc
outsl
fisubs
xor
dec
lahf
or
jno
insl
and
xlat
jmp
push
cmp
mov
daa
jnp
dec
fxch
mov
movsl
push
data16
mov
jge
scas
lret
mov
fnstenv
nop
sub
mov
push
lret
add
pop
sub
cmp
test
or
or
xchg
pop
inc
mov
mov
pop
test
xor
pop
xor
sbbl
fstps
cmpsl
insl
bound
lret
lods
cmp
jp
jge
dec
or
je
stos
jb
push
push
mov
imul
mov
pop
pop
aam
push
push
imulb
stos
aaa
movsb
sbb
sub
pop
mov
lock
hlt
or
xchg
icebp
dec
mov
jg
mov
pop
arpl
ss
mov
sbb
cmp
xlat
pop
sub
sub
jnp
adc
lcall
enter
mov
insl
loope
rol
xchg
in
shlb
inc
mov
push
xchg
sbb
mov
xchg
or
lea
cmovae
inc
mov
daa
in
arpl
and
jo
push
dec
push
mov
mov
out
in
mov
and
js
mov
pop
add
mov
mov
outsb
pop
dec
popa
ja
dec
sbb
loop
sahf
rcrb
aaa
std
shlb
int3
jns
mov
fistpl
shlb
fadd
jbe
pop
mov
jns
hlt
int3
ret
push
out
mov
and
faddl
aad
sbb
aam
fisubs
lods
int
mov
pop
dec
and
pushf
mov
sbb
ja
hlt
sarb
rcll
inc
sbb
arpl
jmp
xchg
lods
ljmp
and
push
icebp
ja
inc
imul
xchg
enter
loopne
and
push
ffree
jb
dec
mov
dec
push
push
scas
dec
inc
jp
mov
mov
lret
xchg
cld
and
or
push
in
xor
ret
sar
xchg
pop
adc
hlt
sbb
arpl
lock
imul
enter
xchg
stc
or
xor
xor
testb
jg
int3
shll
dec
adc
imul
dec
lods
lahf
push
pop
jae
push
dec
dec
jl
and
cwtl
lea
and
lcall
sbb
sbb
test
iret
dec
mov
cmp
push
inc
push
test
movsb
into
push
je
xchg
fidivs
pop
pmulhw
xchg
xchg
lds
xchg
add
xor
jecxz
enter
out
inc
dec
xchg
out
xor
push
dec
xor
cmp
outsl
shlb
xchg
cmp
mov
inc
cld
enter
push
add
stos
insl
int3
out
or
cmpb
iret
inc
dec
sub
push
ja
jge
rorb
test
and
adc
loopne
es
pushf
dec
xorl
adc
movsb
in
or
imul
repz
and
push
and
testl
pushl
orb
mov
out
jbe
andl
push
daa
jb
xchg
pop
mov
or
stos
les
mov
pop
enter
dec
xor
hlt
fnstsw
ljmp
cmp
dec
xor
xchg
pop
mov
xor
arpl
lret
inc
les
loopne
mov
cmp
call
and
xchg
out
or
mov
push
int
arpl
enter
xor
or
ss
xlat
outsl
stos
popa
gs
mov
push
ret
cmp
sub
lods
push
mov
mov
lahf
addl
xor
subb
cmp
mov
lock
mov
inc
add
loop
jp
insb
es
fnstcw
pop
mov
sub
ljmp
push
lods
fsts
and
mov
mov
mov
or
int3
out
negb
mov
je
or
adc
pop
pushf
pop
aad
add
ret
sub
aaa
lcall
shlb
sarl
pop
jmp
iret
test
sub
add
xchg
add
xchg
sbb
aas
pop
push
test
push
fcomps
mov
inc
dec
cmovne
mov
mov
pop
ss
clc
jbe
loope
les
add
mov
shll
shr
inc
xor
out
pop
xor
out
insl
xchg
cmovs
xor
shrb
mov
mov
mov
nop
jle
lock
outsb
jge
leave
push
xchg
jp
pop
mov
jmp
and
out
dec
mov
add
clc
or
xor
cmp
xor
add
and
enter
push
and
jns
push
push
imul
movsl
push
xlat
test
outsb
cmpsl
and
in
or
and
cmp
pop
fisubrl
xchg
out
xor
and
fwait
cmp
out
mov
imul
loope
cmpsl
test
dec
andl
mov
mov
mov
stos
xor
cs
fadd
mov
xor
sbb
out
and
pop
ss
adc
adc
rcrb
into
or
pop
jmp
mov
and
xchg
jg
mov
cmpl
inc
jge
mov
push
ret
mov
daa
mov
sub
and
decb
lret
enter
inc
imul
push
pop
xor
fbld
stos
xor
push
outsb
enter
mov
punpckhwd
adc
sbb
mov
mov
dec
and
fidivrs
hlt
xchg
mov
out
and
add
jp
insl
scas
mov
mov
imul
shlb
cmp
or
pop
jae
push
shlb
enter
sbb
out
and
scas
mov
ljmp
clc
xchg
jg
movsb
and
lret
push
add
subb
fbld
jo
push
loop
std
adc
xor
in
mov
jmp
pop
sub
cld
mov
mov
and
xchg
dec
js
xchg
ret
and
fidivl
mov
sub
and
jle
push
cli
adc
and
call
push
xor
fildl
xchg
inc
sbb
fs
sub
daa
cmpsl
jo
xchg
out
fdivp
and
xchg
push
or
push
sbbb
mov
and
bound
jmp
imul
jnp
leave
add
adc
and
ret
pushl
in
jbe
and
test
icebp
ss
movsl
pop
pusha
hlt
sbb
cmpsb
cmp
xchg
jae
mov
outsl
fnsave
sub
cmp
mov
loope
sub
lea
rcrb
adc
inc
pop
add
push
sbb
outsl
mov
dec
xor
add
mov
and
clc
pop
into
and
mov
jno
xor
dec
in
add
and
or
cwtl
inc
push
sub
xor
adc
mov
lret
jecxz
mov
mov
pushf
jbe
pop
ds
add
dec
out
sbb
cli
xor
dec
pushf
dec
loopne
and
scas
xchg
movsl
and
adc
out
and
inc
addr16
lods
cmp
or
mov
mov
mov
scas
add
das
ret
out
flds
das
mov
pop
out
ja
test
jle
mov
je
add
leave
mov
or
aad
ljmp
test
cmp
xor
ret
xchg
mov
ljmp
and
fidivs
outsb
ljmp
cmp
push
and
mov
lock
pusha
and
mov
imul
push
and
push
xchg
or
insl
aas
or
cli
push
lret
adc
fs
cmc
push
and
xchg
mov
daa
cmpsb
xor
dec
jge
adc
in
adc
imul
jns
sbb
pop
sbbl
and
addr16
mov
pop
xchg
shrb
mov
stos
dec
sahf
push
inc
lea
pushf
lds
push
and
sahf
mov
in
insb
scas
cmpsl
fs
mov
lcall
insb
cld
inc
and
mov
or
and
test
push
push
pop
fcmovbe
ljmp
add
pop
loop
and
pop
mov
call
int3
nop
movsl
bound
ja
fs
cmp
jle
out
adc
sub
aad
mov
outsb
je
cli
pop
jno
and
pop
mov
and
out
xor
and
ja
xor
mov
hlt
sarb
sti
jnp
jecxz
mov
sub
push
and
and
or
fldenv
loopne
nop
xchg
pop
adc
cmp
and
pushl
mov
xor
xor
push
xchg
lret
movsb
xchg
xchg
pop
cs
in
inc
stos
and
adc
or
in
inc
mov
inc
dec
add
and
mov
mov
jb
and
mov
repz
cmpsl
and
rolb
and
in
or
mov
add
mov
fmul
and
push
and
out
cmpsl
je
inc
insl
lock
mov
inc
in
xchg
adc
add
leave
repnz
and
push
test
and
sub
leave
and
dec
jmp
js
and
rclb
or
cmp
popa
xor
and
into
fidivrl
je
and
and
pop
mov
ljmp
xor
xchg
into
scas
cmp
jecxz
inc
loop
push
and
ljmp
and
fldenv
add
mov
push
fdivr
and
lcall
and
icebp
xor
pop
enter
out
std
push
sahf
or
and
jo
add
out
pop
and
mov
lret
mov
push
xor
in
cmp
push
adc
sub
push
or
pop
mov
insb
cli
sbb
cmp
add
das
xchg
mov
adc
outsl
pop
jp
nop
arpl
mov
mov
and
cmpsb
jne
lret
fistps
inc
xchg
pop
mov
sub
imull
test
lret
subl
and
adc
jae
jno
das
pop
addl
shll
cltd
bound
jmp
enter
push
lret
and
or
shlb
or
mov
in
xchg
sub
lcall
cmp
and
cmp
sar
and
pushf
jb
icebp
mov
push
int3
mov
enter
movsb
lret
mov
ret
push
movsb
sub
daa
test
xchg
loopne
popa
loope
push
push
aas
pop
inc
stos
sbb
add
and
xor
cmc
and
xlat
stc
outsl
cmpsb
xchg
xor
inc
pop
cli
in
push
movsb
xlat
loop
decl
clc
cltd
or
cmp
mov
jmp
and
cli
dec
add
loope
call
cmp
and
bound
and
sub
into
sub
xchg
aad
movsl
outsb
popf
and
and
push
pop
push
lret
and
imul
adc
cmp
cld
mov
ficoml
rolb
lcall
dec
mov
pop
pop
aam
xor
cmc
cmpb
arpl
dec
out
frstor
dec
addr16
mov
adc
cmp
sub
repnz
mov
push
aad
add
mov
daa
int3
loop
pop
inc
xor
adc
ja
add
loope
mov
jns
cltd
inc
cwtl
int
mov
cltd
sub
adc
les
faddl
dec
pop
inc
push
and
pop
push
stos
sub
push
sub
mov
shrl
dec
jo
jmp
mov
mov
mov
in
ljmp
scas
add
xlat
push
inc
jns
les
iret
mov
enter
repz
jae
push
in
clc
sub
push
inc
enter
cli
lret
rcl
push
clc
les
inc
sub
rol
neg
and
sub
fnstcw
test
imul
push
add
insl
int3
lods
pop
cmpsl
lcall
in
je
repnz
dec
jp
xor
call
scas
ret
inc
fidivrs
xchg
or
xchg
les
inc
nop
sub
xchg
jo
aaa
mov
mov
and
out
negl
into
les
test
data16
ret
sub
mov
enter
std
xlat
inc
lret
or
paddd
loop
les
add
insl
pop
ficoml
ficomps
out
jle
add
add
or
repz
icebp
addr16
subl
pushf
das
fs
jnp
les
jbe
or
cmpsl
jo
lret
ss
insb
pop
inc
cld
ret
sub
testl
or
push
imul
sub
lahf
out
cmp
mov
push
jecxz
xchg
jge
xchg
and
sub
cwtl
inc
int
or
sbb
dec
xor
sbb
cli
adc
out
testl
sahf
mov
les
and
les
add
or
lea
push
xchg
fldcw
xchg
dec
imul
aas
push
test
adc
pop
clc
pop
push
mov
cli
mov
clc
decb
cmp
jb
cmp
or
xchg
fcoml
xchg
notl
popa
daa
insl
dec
sub
sbb
pop
aam
hlt
cmp
js
and
jecxz
mov
fbld
xlat
sbb
jno
and
add
xor
fcoml
cmpsb
cld
mov
gs
fidivl
xor
add
ljmp
pop
mov
xlat
clc
dec
adc
push
outsb
stos
popf
rcrb
aas
and
mov
out
and
pop
fnstenv
test
aas
and
lods
jnp
mov
lahf
daa
cmp
popa
xchg
popa
and
or
mov
pop
cmp
push
and
jno
repnz
cmp
sbb
movsl
jnp
and
mov
ja
es
in
dec
inc
paddusb
mov
mov
mov
ljmp
and
ss
push
add
push
add
popa
xor
and
clc
add
xchg
repnz
jle
scas
shrb
mov
mov
sahf
xor
ficoml
cmpsb
lods
and
push
and
jg
enter
pushf
insb
mov
outsl
shll
adc
mov
aad
inc
add
lods
sub
arpl
shll
inc
add
cmpsl
leave
ljmp
test
sarb
dec
call
lods
enter
cmpsl
std
and
pop
ss
mov
lret
ficompl
pop
adc
and
aaa
in
or
pusha
jl
jle
sbb
data16
xor
loop
mov
mov
nop
and
jo
xchg
dec
mov
and
test
add
and
fstl
xor
and
jns
in
aaa
adc
movb
movsl
stos
and
and
xchg
xor
repnz
sbb
int3
dec
bound
ljmp
mov
fisubs
xor
fnstcw
cmp
test
and
mov
xchg
aad
and
sub
inc
loopne
sbb
and
dec
bound
inc
xor
fsubrl
jb
and
mov
pop
pop
and
out
stc
ret
jns
xchg
xchg
xchg
ret
and
or
dec
cmp
mov
mov
and
jno
scas
mov
pusha
es
cmp
and
add
mov
xchg
push
mov
xchg
pusha
push
and
orb
inc
pop
sub
cmp
cmc
dec
aad
sub
and
add
or
xlat
xchg
and
xchg
or
subb
sub
mov
mov
test
orl
sub
lods
movsb
mov
and
inc
jo
lret
push
and
jmp
mov
iret
and
popa
lods
and
andl
cltd
outsb
call
test
sbb
mov
cmp
cmp
push
push
lcall
outsl
xchg
sbb
mov
jb
fisttps
rclb
addb
loop
and
xor
inc
imul
pop
add
pop
jl
imul
and
sti
cltd
inc
imul
and
scas
out
outsb
jo
popa
push
addr16
out
jne
mov
loop
sbb
and
inc
xchg
mov
and
ds
jge
out
adc
and
cmp
dec
and
mov
out
jmp
lods
jmp
cmp
or
pop
inc
cld
and
clc
lock
and
dec
add
popf
mov
cmp
popf
pop
cmpsb
mov
addr16
outsb
imul
sub
push
idivb
fldenv
dec
dec
sti
in
mov
jo
lret
mov
int
nop
jmp
push
std
push
adc
and
hlt
xor
dec
push
fucomi
add
jmp
dec
xchg
loope
push
push
insb
add
imul
and
fnstenv
and
xor
dec
and
notl
and
dec
push
mov
and
ficompl
pop
mov
adc
xchg
sbb
mov
lods
pop
and
mov
lea
xchg
sub
inc
sub
fs
ficoml
sti
jnp
xchg
and
sub
aad
cwtl
mov
popa
mov
repnz
and
cmp
sbb
lods
sti
les
pop
mov
or
sub
arpl
adc
dec
lret
adc
popa
and
jne
sbb
add
jmp
addb
out
orb
pop
incl
and
push
int
pop
cmp
and
jb
aam
mov
movsb
lods
xor
and
sbb
outsb
xchg
lds
repz
inc
and
push
insb
shll
pusha
dec
jne
mov
lods
outsb
and
mov
xor
imul
mov
mov
fbld
pop
cmp
and
rclb
mov
inc
mov
xor
and
and
and
add
sub
sub
xchg
es
and
cmpsl
push
and
adc
jg
mov
push
aam
jecxz
cmp
insl
pushf
shr
dec
adc
and
fnstenv
push
jne
cmp
and
add
sbb
sub
sub
and
hlt
movsb
sub
and
sahf
out
decl
mov
or
shll
es
cmp
sahf
mov
push
sbb
or
inc
cmp
test
xor
and
add
and
sub
mov
jns
xchg
test
sahf
inc
xor
push
mov
and
nop
es
sub
stos
adc
jo
mov
mov
icebp
push
cltd
cmp
and
nop
cmp
mov
lds
xchg
mov
sgdtl
adc
fisubs
xorl
xchg
sbb
loope
test
hlt
bound
dec
and
aam
or
loopne
dec
clc
cmp
inc
je
sbb
lds
cli
inc
mov
mov
insb
sub
rorl
sbb
pop
aam
and
cli
xor
mov
js
and
pop
rol
and
pop
fchs
cltd
dec
in
and
notl
mov
insl
and
or
pop
cmp
movsb
jp
adc
sbb
mov
cmc
cwtl
lret
jne
jg
mov
pop
add
push
mov
lea
and
iret
lcall
pop
xchg
test
std
fstpl
jns
jg
push
and
insl
lods
fisubl
insb
stos
int3
int
mov
fimuls
or
outsb
ljmp
xchg
fmul
lea
adc
bound
add
sub
push
call
pusha
and
ret
out
out
sub
pop
push
in
hlt
xchg
pop
adc
mov
lcall
stos
fadd
and
push
imul
aaa
mov
mov
jno
outsb
mov
xor
aad
push
mov
mov
out
or
push
jge
xlat
sbb
mov
ret
outsb
sahf
mov
mov
push
sbb
scas
cmovae
xchg
mov
cli
test
shlb
mov
inc
test
push
test
mov
xor
push
xchg
inc
jg
call
dec
xlat
push
adcb
popa
lret
mov
stos
add
push
popl
mov
xor
aad
pushf
ss
mov
inc
or
aam
jg
xchg
aas
enter
jge
inc
adc
push
sbb
inc
arpl
in
enter
fcoml
add
push
les
jmp
jmp
mov
sub
mov
shlb
jge
push
mov
arpl
xchg
sub
sbb
ffree
push
sahf
arpl
aas
cli
ret
adc
sbb
scas
cwtl
dec
lds
inc
sbb
mov
das
cwtl
xchg
daa
xchg
inc
cvtps2pd
mov
or
mov
add
push
hlt
ds
mov
mov
sbb
mov
loop
sbbl
xor
mov
imul
dec
repz
sub
add
lret
lcall
xor
arpl
and
adc
ror
push
sbb
repz
sbb
nop
sub
out
mov
cmpsb
dec
lods
and
pop
mov
std
popa
mov
lods
and
shll
or
loope
sbb
sub
sub
cmp
adc
ja
pop
ds
inc
bound
int3
sar
jg
or
inc
mov
mov
fcoml
push
mov
jmp
fdivl
enter
cmp
sub
jno
aas
adc
repz
dec
xchg
jae
xor
pop
arpl
ret
xor
push
mov
mov
push
dec
pop
adc
test
and
dec
sub
and
daa
fsubs
ljmp
xchg
mov
mov
adc
jbe
jbe
mov
arpl
ss
add
lods
out
insb
iret
inc
dec
cmc
xchg
pushf
xor
jg
xlat
or
ret
cwtl
dec
inc
dec
ret
sti
inc
xlat
dec
stos
xchg
cwtl
rclb
mov
mov
into
bound
inc
mov
inc
push
nop
in
test
fchs
aad
jle
cmp
jmp
ret
and
les
mov
xchg
inc
test
xchg
pop
dec
or
cmp
mov
mov
aas
inc
inc
dec
test
aam
bnd
adc
fists
mov
cwtl
and
fwait
inc
push
inc
jbe
mov
fsubrs
xor
lahf
sbb
int
nop
out
divb
mov
cmpsb
xchg
push
dec
fnstenv
lods
and
stc
cmpsb
ljmp
fistps
or
and
in
pop
lds
js
or
mov
and
cmc
push
pop
adc
jecxz
movsb
add
pop
xchg
lcall
xor
lea
xchg
mov
jge
push
imul
xchg
mov
dec
icebp
ret
rorb
arpl
inc
movsl
and
pop
jge
jg
cmc
or
inc
hlt
sub
add
sub
sahf
rclb
push
clc
xchg
xchg
cmp
pop
rcrl
inc
push
jae
and
xor
sbb
jno
pusha
sub
leave
sub
imul
addl
shlb
xchg
stc
pop
push
xor
dec
pop
mov
bound
repz
bound
fs
mov
xor
js
xchg
inc
jo
sub
cmp
push
push
mov
movsb
enter
inc
pop
push
bnd
mov
mov
push
pop
mov
aad
inc
sbb
enter
and
cltd
imul
out
bound
ret
jg
popf
enter
negl
cmp
sbb
je
leave
ret
idivl
and
out
xorl
add
loopne
add
fs
sbb
incl
in
xor
xchg
or
test
shll
dec
aam
fdivs
orb
cld
jnp
sbbb
mov
ret
outsb
loopne
dec
sub
jge
push
sahf
xlat
dec
fnsave
pop
jp
sub
cmp
inc
add
mov
inc
movsl
leave
ret
mov
stos
sti
jbe
nop
sub
xor
mov
adc
mov
sbb
bound
cmp
out
or
lcall
ljmp
inc
imul
cmp
cmp
jge
outsl
lret
repz
idivw
dec
je
cmp
lods
shll
or
jbe
and
add
hlt
or
clc
daa
mov
ret
sbb
jmp
leave
xchg
mov
mov
xorl
pop
shl
mov
les
icebp
jb
loope
dec
movsb
mov
insb
arpl
inc
imul
pop
shrl
aaa
les
pop
roll
dec
stos
sub
and
xor
ljmp
jbe
loope
shrl
les
out
lods
xor
dec
in
push
cmp
mov
mov
and
jmp
jae
sub
sub
jno
push
cmp
sahf
imull
adc
xchg
jne
jg
mov
enter
popa
js
sbb
and
popa
mov
cli
fldl
je
fs
xor
pushf
add
sbb
pop
mov
mov
shll
inc
sub
mov
bound
dec
inc
arpl
mulb
and
clc
push
cmc
andb
les
mov
and
mov
add
lock
xchg
enter
nop
sub
in
mov
adc
lahf
aaa
shl
and
and
fistps
cld
mov
xchg
lret
loopne
xor
pop
jae
sti
mov
xor
xchg
jp
mov
jbe
pop
jp
xlat
mov
mov
and
ds
fdivs
lret
lahf
jp
and
in
inc
push
out
sbb
or
mov
mov
adc
outsl
mov
inc
loope
subb
cmpsb
cmp
fisubrs
sub
cmp
inc
in
pop
aaa
lret
lcall
inc
lret
comiss
xlat
cmp
ret
dec
in
pop
mov
xor
or
les
jbe
and
in
jae
enter
sub
jl
dec
ret
gs
dec
add
pop
cld
sti
mov
pop
in
rcrl
push
and
push
hlt
push
shll
or
call
inc
pop
jmp
sbb
ret
cmpsb
xchg
mov
add
das
push
enter
shrl
mov
jp
pop
fbld
mov
into
sahf
mov
or
push
mov
scas
test
dec
in
or
or
adc
loop
aad
fcmovnbe
dec
out
mov
xchg
adc
fnsave
iret
and
out
xor
or
and
test
inc
jno
mov
adc
cld
mov
dec
sbb
inc
mov
sub
mov
scas
pop
lret
push
repz
lds
push
add
mov
sbb
push
insb
cmp
xchg
lahf
mov
cwtl
and
imul
and
jg
stos
xchg
xchg
and
out
inc
and
in
sbb
dec
and
ret
aad
mov
pop
sbb
xor
ja
pushf
and
mov
movsb
mov
mov
push
scas
inc
int3
in
and
inc
add
in
jge
cmp
jb
fs
cli
pushf
lods
xlat
adc
sbb
lcall
and
popf
pop
fidivs
jbe
adc
push
ds
inc
adc
and
or
and
mov
sub
jg
mov
in
fbstp
push
mov
in
loopne
data16
cmp
pop
fs
sbb
push
dec
xchg
mov
fcoml
and
rcrb
inc
popa
out
mov
sub
daa
negl
xchg
jmp
push
and
sahf
xor
and
adc
or
lods
ret
fs
adc
adc
add
shll
and
divl
inc
and
pop
ljmp
nop
int3
bswap
and
xchg
and
lds
sbb
hlt
pop
in
pop
fidivrl
movsb
mov
and
cld
pmaxsw
fisttpl
inc
xor
xchg
xor
pop
out
and
pop
aaa
mov
fcompl
xchg
ss
int
mov
and
lds
out
mov
push
inc
and
outsl
and
push
cmp
and
xchg
jne
xchg
sahf
fst
pop
lods
or
pop
imul
fwait
cmpsl
int3
xchg
pop
push
leave
and
sarb
mov
sub
sti
mov
in
xor
pop
inc
cmc
fnstcw
jo
in
or
sbbb
sub
ret
add
ja
addr16
adc
popl
scas
adc
ljmp
fcoml
and
pop
and
xor
and
cmpl
xchg
stc
ficomps
sbb
and
fists
sub
enter
dec
test
movsl
xor
or
add
sbb
xchg
xorl
idivl
inc
leave
and
jmp
test
push
jg
mov
cs
cli
mov
fcmovne
das
push
lahf
scas
je
es
xchg
repnz
jns
imul
and
sub
pop
push
add
push
or
jp
ds
sub
and
mov
or
mov
dec
and
cmp
push
xor
movsl
and
adc
cltd
lock
ficompl
pop
repz
and
mov
insl
push
and
xor
inc
aas
add
hlt
mov
dec
in
xchg
icebp
pop
testl
and
in
scas
sarl
rcrb
xor
sub
out
cmpsb
push
or
repnz
push
sahf
pop
dec
aad
pop
mov
cwtl
push
dec
cmpl
lahf
sbb
sbbl
or
addb
inc
mov
dec
test
cld
jl
mov
xor
push
push
or
cld
sbb
xor
mov
dec
mov
fcomps
push
test
iret
inc
int3
add
mov
mov
lret
ljmp
pop
push
sbb
imul
sbb
dec
or
adcb
inc
pop
fsubrs
or
popa
xchg
add
mov
lret
jbe
mov
mov
push
ss
inc
test
push
shll
sbb
push
pextrw
addl
data16
data16
cmc
xor
or
sub
into
filds
in
add
add
xchg
sbb
mov
lahf
inc
dec
cmp
and
ret
jle
mov
imul
xchg
lahf
repz
inc
xchg
pop
js
mov
std
mov
sub
out
jbe
dec
mov
or
nop
add
sbb
mov
enter
cmp
call
dec
sbb
lcall
pop
pusha
adc
das
enter
cmc
mov
mov
mov
mov
mov
sub
shl
xor
add
icebp
pop
inc
hlt
imul
inc
pop
in
xor
push
mov
or
imul
or
add
xchg
mov
adcb
inc
les
mov
fcomi
xor
test
das
xchg
inc
sub
dec
inc
sbb
xor
inc
loopne
xor
nop
adc
xor
jge
shl
imul
pop
fldenv
mov
cmp
gs
imul
jbe
sbb
dec
cltd
xchg
iret
int3
lcall
sti
fnstcw
ret
rcll
jl
mov
ret
sub
push
mov
jle
and
jb
outsb
mov
hlt
das
lret
fwait
jb
mov
mov
decb
clc
insb
notl
fcomi
jg
mov
jb
jp
pop
xor
testl
push
and
cmp
add
inc
pop
cmp
pop
loopne
mov
iret
pop
das
sub
dec
xor
sti
pop
inc
repz
add
or
test
push
dec
adc
sub
add
sahf
mov
jp
jge
aam
insb
jnp
xchg
xchg
shll
adc
ficoms
adc
sub
mov
cltd
mov
mov
imul
fstl
push
scas
ret
and
aaa
sbb
jno
dec
and
pop
inc
xor
fisubrs
insl
cmp
dec
xchg
enter
sub
filds
ja
xor
outsl
dec
adcl
dec
shrl
daa
ret
inc
mov
andb
imul
adc
outsl
jg
dec
inc
push
fistl
adc
mov
add
dec
int3
pushf
cwtl
pop
gs
cmpb
shrl
dec
adc
pop
xchg
loopne
and
cmp
out
shll
jns
lret
sarl
iret
push
and
mov
js
xorl
cli
push
and
pop
push
inc
dec
mov
aaa
sub
mov
mov
jnp
pop
dec
out
mov
and
ja
jbe
mov
and
inc
pop
pop
or
cwtl
rol
add
mov
or
sbb
lahf
inc
dec
fwait
add
mov
pop
repnz
pop
cmc
jp
ret
jae
jo
push
or
inc
mov
xchg
outsb
rcrl
int
hlt
enter
imul
shrl
adc
sub
outsb
iret
repz
arpl
icebp
or
in
dec
jne
enter
aaa
mov
mov
aad
jo
lea
jb
jle
adc
ljmp
xchg
push
dec
and
push
into
sub
outsb
testb
inc
cltd
add
rcrb
idiv
scas
into
cmp
stos
jge
inc
add
mov
cmp
loope
inc
aad
xor
loop
jmp
bound
movsb
and
fldt
stc
cmc
sub
hlt
mov
enter
lret
sbb
dec
cmc
inc
cmc
shlb
dec
sbb
int
movsl
inc
sub
ret
fmull
pop
adc
sub
je
inc
testb
stos
xchg
sbb
ficompl
mov
and
mov
sbb
ret
ret
mov
testl
push
imul
jb
ret
pop
pop
mov
lcall
sbb
mov
pop
dec
shlb
jp
in
adc
int3
and
xlat
sub
pop
std
cmp
mov
je
or
mov
bound
movsl
pop
xor
fisubl
push
in
mov
outsb
sbb
aam
in
dec
cmp
adc
arpl
add
rcrl
push
lret
mov
rclb
je
push
insb
jae
push
push
pop
mov
fnsave
mov
adc
xor
or
inc
test
sbb
mov
pop
lahf
or
adc
push
xor
dec
mov
dec
add
mov
xchg
lret
mov
mov
insb
inc
rcll
jno
ja
sbbl
sub
xor
xchg
sbb
mov
ret
fiadds
add
scas
orb
and
mov
mov
add
pop
inc
sub
pop
out
pop
adc
lods
imul
mov
push
leave
adc
xor
je
dec
stos
arpl
dec
cld
sahf
js
pushf
jnp
imul
lock
enter
pop
pop
loope
sti
int3
mov
pop
xchg
xchg
arpl
add
shrl
add
and
mov
sbb
dec
into
mov
ret
pop
test
or
cmp
ja
adcl
mov
adc
insb
mov
imul
nop
mov
fs
ror
push
loopne
mov
test
mov
xchg
xorl
icebp
jo
add
jl
jo
enter
push
je
mov
xchg
mov
shll
jbe
and
inc
add
mov
xchg
inc
mov
loop
fildl
add
nop
aas
inc
xchg
lea
jecxz
mov
dec
mov
or
sarb
cmp
inc
jbe
add
repz
pusha
mov
shlb
ret
push
lock
bound
sub
lcall
dec
mov
lds
xor
inc
push
adc
rclb
mov
aad
lahf
adc
pop
mov
test
dec
popf
imul
xor
sbb
jmp
push
push
enter
jb
jbe
or
and
sbb
xlat
enter
scas
rorb
aas
mov
xor
cwtl
test
test
adc
add
fnsave
movsb
jl
inc
insl
adc
inc
iret
out
xorb
push
jae
ss
int3
or
imul
call
push
pop
inc
xor
js
out
jbe
loopne
mov
pop
dec
repnz
pop
loopne
and
inc
insl
enter
inc
frstor
ret
not
rorl
les
shll
imul
add
movsb
fs
sbb
push
adc
xor
xor
xchg
or
jmp
jns
xor
enter
xchg
insl
iret
sbb
data16
sub
jno
pop
adc
or
adc
cld
pop
jae
dec
xchg
pop
push
mov
push
insl
sbb
push
push
push
ror
fldcw
jl
shrb
jne
push
out
imul
aad
add
incb
or
fnstenv
add
popa
mov
pop
pop
sub
cmp
leave
js
sahf
push
ret
scas
sub
push
movsb
out
adc
addl
xchg
enter
mov
imul
mov
movsb
xchg
fsubs
inc
jp
dec
movsl
test
mov
hlt
jb
mov
mov
out
stos
sub
cld
xor
lahf
push
xor
or
jecxz
xor
enter
fstpt
dec
aaa
les
xchg
xchg
loop
enter
test
pop
inc
xor
fistpll
xchg
test
jmp
sahf
mov
dec
cli
and
push
add
loope
sub
fistpl
jno
inc
cs
adcb
aaa
jl
loope
sbbb
and
add
in
add
mov
xchg
lcall
jnp
inc
pop
sahf
int
clc
cmpsl
jp
repz
mov
pop
negb
aam
addl
mov
or
hlt
sbb
subl
mov
mov
mov
cwtl
sub
jmp
mov
cmpsl
fidivs
shlb
test
mov
mov
inc
jb
pop
mov
pop
outsb
mov
or
fstpt
or
hlt
mov
sbb
cld
pushf
andl
notb
mov
jge
mov
cmp
test
xchg
mov
subl
lahf
mov
sbb
mov
jp
mov
mov
pop
div
es
in
adc
sub
into
add
movsl
pop
mov
insl
ss
mov
and
test
arpl
inc
xchg
or
pop
jle
dec
stos
shr
ds
mov
js
add
std
push
outsb
and
push
pop
sbb
fxch
add
cmp
lcall
mov
sbb
and
mov
push
sub
adc
push
loopne
mov
pusha
mov
lods
imul
jns
repz
and
mov
sub
dec
movsb
xchg
mov
and
push
and
dec
mov
cmp
pop
aam
dec
imul
cli
mov
sbb
rcrb
add
and
test
xchg
and
fildl
pop
and
xchg
mov
popf
and
adc
and
jne
movsl
inc
mov
int
mov
enter
cmpl
lcall
pop
rolb
jg
add
arpl
cmc
add
shlb
mov
hlt
and
add
push
mov
fldenv
imull
stos
popa
bound
or
cmp
pop
lods
xchg
pop
outsl
and
push
xor
movb
and
add
in
pop
imul
jb
lahf
add
fstpt
mov
insb
inc
sub
adc
scas
and
into
aam
mov
movsl
in
and
js
cmp
push
mov
call
jecxz
and
push
jle
mov
das
sbb
push
add
divl
and
and
xchg
adc
and
fcomps
mov
pop
jg
and
fsts
sub
iret
mov
push
std
add
in
pop
jmp
sub
pop
andl
cmp
adc
or
mov
out
and
pop
jle
lea
jae
and
pop
daa
add
and
or
push
mov
and
push
jbe
xchg
outsb
sub
and
add
je
cltd
pop
and
pop
cmp
sbb
mov
mov
mov
sbb
imul
mov
lret
mov
loopne
pop
sbb
and
lret
add
fwait
and
test
and
cmc
mov
mov
lcall
fnstcw
xchg
loopne
sub
xchg
xchg
pop
nop
cwtl
inc
and
out
and
rcll
leave
arpl
popf
pusha
xor
and
mov
call
insl
jo
shl
movsb
mov
icebp
and
add
sbb
scas
lcall
dec
or
sbbl
in
fcmove
and
xor
and
pop
dec
les
pop
adc
and
dec
add
pop
imulb
and
lret
leave
jecxz
out
pop
call
popa
lods
mov
aam
lahf
xchg
push
or
dec
je
adc
jecxz
decl
jne
pushf
xchg
and
inc
adc
aam
sub
and
rorl
and
xchg
and
xchg
xchg
repnz
and
mov
fwait
or
adc
and
decb
addr16
dec
sub
addb
xor
inc
enter
sub
sub
movsb
sub
sub
movsb
xchg
cmovae
scas
sub
push
mov
movsb
mov
and
inc
jno
and
jbe
imul
scas
shll
fisubl
xor
mov
xor
sbb
mov
pop
dec
adc
enter
xchg
pop
fsubrl
and
test
inc
sti
iret
imul
test
push
sbb
fstl
and
mov
jp
pop
xchg
aam
mov
sub
sub
jl
mov
mov
mov
inc
mov
add
xchg
lods
push
or
pop
cmp
ret
push
daa
mov
and
fildll
cs
sbb
add
dec
adc
xchg
divb
lahf
sbb
lret
mov
les
xor
mov
adc
push
mov
aaa
cmp
and
and
pushf
jbe
mov
movsb
xor
add
cli
mov
ret
sbb
add
and
ja
mov
aad
ret
in
pop
dec
add
ret
pop
jae
daa
inc
pushf
mov
mov
push
fwait
mov
xchg
pop
sbb
je
mov
int3
fwait
les
test
out
add
mov
mov
mov
iret
shrb
popf
shrl
xor
rcrl
sub
imul
mov
sub
xchg
mov
mov
mov
ljmp
push
xchg
hlt
inc
repnz
repnz
ret
ret
mov
mov
adcl
inc
imul
cmp
push
fcmove
arpl
loope
pop
test
pop
cli
jne
sbb
call
mov
xchg
cmp
sub
shl
mov
pop
fcompl
jnp
sub
loope
adc
or
imul
fcmovb
outsb
data16
fsubrp
add
ret
lock
imul
inc
jmp
test
pop
mov
and
adc
enter
movsb
inc
push
out
cmc
outsb
int3
sti
cmp
mov
jmp
inc
test
mov
in
push
jg
stos
popa
and
dec
test
sub
xchg
pop
enter
push
mov
sbb
pandn
shrl
xor
and
lea
sbb
cmp
push
jp
int
insl
mov
add
jo
gs
cmpsl
xchg
in
fidivrl
and
call
sbb
hlt
xchg
cmpsb
and
leave
jnp
and
sub
adc
xor
pushw
push
iret
sub
test
enter
lods
in
and
inc
xchg
sbb
mov
xorb
rcrb
out
sbb
or
mov
subl
xchg
adc
fildl
insl
enter
je
addr16
sahf
mov
lcall
cmp
push
sti
and
jge
shlb
adc
push
fldt
ffree
mov
lods
fwait
loopne
push
inc
mov
imul
cltd
lret
pop
incl
cld
adc
leave
xchg
repz
mov
adc
sbb
out
adc
arpl
cmp
je
je
les
push
xor
and
add
popa
mov
js
pop
mov
pop
in
popf
pop
push
mov
dec
mov
sbbl
fildl
ljmp
movsl
push
xor
inc
push
mov
xor
je
fildll
lea
lds
adc
and
sbbl
and
cmpsl
dec
mov
xor
fldt
adc
rcrb
movsb
mov
daa
sbb
xchg
cmc
or
lahf
pop
les
orl
sbb
adc
leave
push
out
add
sub
movsl
icebp
cmp
in
push
pop
shl
dec
addr16
js
out
cmc
les
inc
enter
ljmp
jno
xchg
push
xor
in
das
aaa
jle
aad
and
dec
push
and
sub
add
sub
incb
jbe
xlat
in
pusha
mov
jmp
mov
or
aaa
sbbl
xor
fs
pop
mov
fistpll
jmp
imul
or
mov
pop
inc
inc
and
js
add
xor
jno
stos
mov
mov
imul
in
adc
and
lcall
mov
xchg
dec
out
movsb
lods
or
jl
cmp
inc
dec
jp
and
lods
bound
dec
loope
dec
dec
mov
insl
mov
bound
push
ret
in
enter
call
nop
je
inc
cmp
outsb
hlt
and
arpl
pop
jp
push
lret
lcall
jge
enter
and
test
cmp
enter
hlt
xchg
loope
xchg
pop
inc
aam
ljmp
inc
cmc
loope
sub
pop
mov
mov
mov
stc
sub
push
jae
and
push
inc
inc
fstps
inc
dec
arpl
and
and
pusha
ss
out
sbb
into
fdivrs
xchg
sbb
fwait
arpl
iret
inc
and
mov
add
adc
aas
cwtl
pop
adc
dec
ret
xchg
cmp
movsb
es
adc
popa
mov
dec
nop
iret
pop
xor
xchg
sub
ljmp
dec
arpl
dec
in
leave
xor
xchg
cmp
scas
mov
add
dec
icebp
data16
addl
xor
rcll
pop
cs
stos
popa
pop
bound
jecxz
cmpsl
push
lahf
fnstenv
movsl
sub
xchg
cld
sbb
dec
jns,pt
add
out
xor
rcl
ds
into
push
fs
adc
aam
jae
sub
dec
movl
mov
sbb
xorl
adc
xchg
mov
and
and
pop
mov
mov
fsubrl
popf
mov
inc
fwait
fs
cmp
and
dec
pushf
jle
mov
jmp
mov
mov
daa
idivb
jnp
addb
test
shrl
inc
stos
dec
enter
push
mov
mov
jbe
fcoml
xchg
subb
mov
xchg
fmuls
inc
aaa
icebp
and
lret
dec
sti
mov
pop
mov
in
testb
insb
rcll
or
adc
out
popa
adc
in
push
mov
push
fcmovb
adc
add
add
pop
mov
push
sahf
mov
inc
fdivp
mov
jge
jbe
lods
mov
jg
xchg
cmpsl
add
fisubrl
jecxz
mov
fcmovne
cmc
xchg
xor
popl
sarl
push
imul
add
pop
cmp
xchg
divw
mov
int3
xor
mov
or
ret
inc
mov
pop
hlt
ja
xchg
int3
shll
int3
les
aam
sbb
xchg
jl
jmp
push
ret
mov
mov
mov
aad
into
mov
and
pop
sub
pop
orl
push
mov
mov
cmpb
mov
pop
mov
push
mov
ds
xor
and
mov
add
in
dec
int3
shll
jno
stos
imul
arpl
imul
cmpsl
mov
jb
dec
xchg
outsb
push
arpl
enter
outsl
jge
dec
jmp
add
notl
mov
push
enter
lea
xor
out
add
adc
push
aam
mov
mov
imul
or
dec
arpl
push
mov
pop
mov
sub
enter
cmpsb
xchg
aad
arpl
xchg
and
pushf
push
sarl
pop
mov
pop
pop
pop
push
dec
mov
enter
outsb
cmp
in
dec
dec
xchg
xor
std
mov
fildll
sub
sbb
and
adc
shlb
xchg
jb
cltd
push
mov
jno
aad
cs
pop
pusha
stos
fsub
and
test
stos
shrl
repz
or
pop
mov
cmp
and
imul
push
lods
mov
lahf
pushf
test
ret
xchg
xor
repz
mov
cmc
xlat
and
or
add
imul
push
nop
and
rorw
std
pushf
dec
push
push
popf
inc
xchg
lret
pop
and
rcll
ret
mov
andb
inc
ret
fwait
push
les
or
js
mov
stos
dec
hlt
sub
mov
lahf
out
pop
movsb
pop
or
in
and
insb
or
xchg
dec
mov
cmp
adc
jle
lcall
ja
sbb
ficompl
xor
push
leave
rolb
fcoml
popa
add
xor
xor
lahf
scas
mov
xchg
jl
lcall
arpl
and
enter
and
jmp
or
insl
jno
xor
cmpb
aad
inc
sbb
sti
popl
mov
push
mov
adc
cwtl
push
dec
xor
les
insl
pop
std
jae
rcl
mov
insl
insb
inc
xor
shll
jl
xor
push
cmp
inc
dec
popa
push
adc
add
in
push
sbb
fistps
popa
dec
mov
inc
aaa
enter
sbb
scas
jno
ja
mov
stc
movsb
mov
adc
cs
cli
je
add
and
xchg
inc
push
push
jecxz
mov
cmpsl
loop
xor
or
mov
in
dec
mov
xor
push
dec
xor
push
aad
lea
insl
mov
push
ss
shrl
ret
inc
mov
sub
les
cli
push
pop
jb
inc
mov
jnp
pop
repnz
dec
inc
jecxz
sub
and
data16
and
repz
enter
shlb
xchg
xor
and
mov
nop
inc
adc
inc
dec
or
cmp
cmpsl
lret
and
and
pop
std
bound
addr16
loope
push
cmp
pop
pop
scas
mov
push
or
daa
xchg
ret
lahf
das
xchg
pop
sub
lds
clc
xorl
jnp
xor
rcll
stc
dec
rcll
lret
mov
cmpb
popaw
dec
out
push
jl
mov
imul
sbb
inc
subl
adcb
mull
pop
ret
pop
xchg
repz
testl
mov
arpl
sti
jo
mov
dec
inc
or
and
out
mov
das
xor
movsl
mov
fcmovu
ljmp
mov
xchg
enter
scas
push
icebp
arpl
cmpsl
out
lahf
enter
pop
mov
adc
push
adc
and
ljmp
sbb
popf
push
adc
ljmp
fidivrl
mov
push
jmp
push
mov
pop
xchg
mov
outsb
sub
lcall
clc
push
ret
data16
xor
call
xor
sahf
enter
scas
and
dec
cmpsb
cmp
fadds
adc
aaa
inc
adc
jle
inc
push
mov
and
push
push
mov
ja
out
das
pop
enter
xor
sti
cltd
mov
mov
pop
popl
jae
cmp
pop
push
add
adc
add
pop
subl
notl
xchg
mov
push
enter
fucomp
adc
popa
sbb
outsb
push
inc
insl
in
stos
testl
push
call
shrb
sahf
and
add
imul
pop
mov
mov
lds
cmpb
or
jne
cmp
lret
insl
jae
or
fmull
lcall
dec
stos
xor
ljmp
repnz
cmp
clc
pop
stos
inc
lret
xor
pop
adc
jge
rolb
adc
pop
dec
sbb
sbb
pop
mov
pop
repz
fs
cmp
mov
inc
ret
mov
in
in
lods
adc
adc
mov
push
testl
pop
or
mov
and
xor
pop
dec
daa
enter
and
inc
imul
mov
lea
aas
repz
xor
mov
push
aaa
mov
xor
jle
fstps
gs
nop
adc
jl
mov
les
push
arpl
and
loopne
mov
andb
popa
jbe
mov
sub
inc
sbb
jp
sub
or
loop
mov
xchg
fidivs
clc
insl
insl
aas
sar
js
xchg
jle
ret
jae
testb
shl
orl
lahf
adc
aad
subl
and
mov
adc
sub
je
repz
pop
movaps
loopne
push
pop
arpl
insb
test
fbstp
sahf
or
dec
ret
test
cltd
movl
adc
mov
aam
jns
pushf
sbb
push
test
jp
add
sbb
js
es
push
pmaddwd
inc
mov
xchg
adc
inc
mov
xor
xchg
sbbl
lcall
inc
and
push
call
loope
fsts
ja
mov
pop
sub
mov
sbb
sub
dec
mov
mov
aad
mov
bound
jae
dec
fcomps
push
lcall
inc
and
xchg
das
xlat
adc
in
dec
pop
dec
fcompl
jp
fnstsw
or
pop
loope
adc
xor
js
mov
int3
repz
in
sbb
xchg
or
in
mov
xchg
push
and
outsl
testb
enter
fisttpll
xchg
and
pop
mov
jne
xor
fwait
jae
in
idivl
mov
into
aaa
cmpsb
jp
and
adc
push
les
dec
jle
xor
xor
mov
mov
repz
cmpsb
and
insb
outsl
mov
stos
fldcw
xor
fiadds
cmp
ja
xchg
inc
mov
xchg
inc
push
and
and
stc
and
cli
cmpsb
shlb
adc
sub
sbbb
and
and
shll
stc
fistpl
push
lahf
jle
and
xor
xchg
loope
jbe
in
scas
and
jnp
mulb
fistl
call
and
push
cmp
sti
decl
in
lret
in
lock
mov
data16
js
mov
ds
sbb
xchg
xchg
sbb
and
pop
scas
and
or
roll
stos
arpl
push
jns
ljmp
mov
lock
and
lea
push
and
enter
pop
jae
cmp
xchg
fs
xor
and
stc
cmp
add
jno
push
adc
mov
lret
inc
mov
stos
and
xchg
imul
std
sbb
iret
data16
daa
pop
enter
mov
imul
out
pusha
push
popf
sbb
cmpsl
and
dec
and
jns
test
stc
outsb
push
outsl
loope
and
shl
in
pop
sub
pop
mov
mov
cmp
in
push
shll
push
scas
jecxz
mov
ja
sbb
mov
jp
push
fists
cmp
and
mov
cltd
test
push
and
loope
jmp
cmpsl
insb
test
xlat
add
rorb
roll
aaa
ror
cmp
and
xchg
out
mov
cmc
push
ljmp
filds
rolb
and
xchg
orl
test
outsl
and
mov
cmp
fwait
pop
sbb
and
push
adc
jbe
and
xchg
repz
add
xor
or
push
cld
and
pop
sbb
adc
or
or
sub
push
and
push
hlt
push
mov
or
jae
mov
insb
adc
test
dec
and
cmc
xor
fsubl
push
ds
mov
push
and
push
or
cmp
sbb
mov
adc
adc
inc
lods
aam
xor
cmp
inc
cltd
and
popf
and
cli
and
push
lcall
popf
insl
and
pop
inc
jo
and
aaa
or
push
inc
scas
jmp
push
cmpsl
adc
inc
and
mov
imul
dec
imul
jecxz
cmpsl
sub
and
les
sbb
and
dec
cmp
xchg
mov
push
dec
test
aaa
jo
mov
or
and
jecxz
jl
shlb
mov
stos
or
flds
movsb
mov
mov
rcll
dec
mov
mov
aam
pop
sub
and
cmp
popa
in
mov
jecxz
test
or
mov
or
mov
push
shr
mov
push
and
xor
xchg
jns
out
and
popf
mov
and
cld
test
and
pop
pop
lahf
subl
or
sub
int3
add
adc
dec
jg
and
fldl
and
dec
xor
and
xchg
jecxz
push
out
sub
shrl
push
mov
lahf
inc
fstl
out
xor
repnz
mov
aas
xchg
sti
adc
and
stc
mov
and
jae
sub
stos
pop
aaa
sub
aam
popa
xchg
and
and
sbb
stc
sub
and
orb
mov
adc
imul
jno
je
shlb
push
or
into
dec
dec
cmp
cmpsl
push
mov
inc
iret
test
and
cltd
cmpsb
and
cmp
aas
add
and
sar
jb
cli
arpl
loope
sbb
and
and
adc
popf
pop
insl
and
lods
cmpl
mov
and
aam
rolb
test
sbb
xchg
cmp
jecxz
repz
sbb
add
and
es
out
cmpb
popa
outsb
lahf
xchg
xor
mov
lods
adcl
mov
in
xchg
push
pop
repnz
out
aam
enter
xor
ljmp
xchg
cmp
call
sahf
and
cmp
in
and
sub
pop
xor
es
dec
and
and
sub
jno
dec
mov
inc
dec
fld
movsb
into
fsubrl
lods
xchg
ja
mov
and
out
or
int3
in
inc
movsb
mov
and
jecxz
pop
and
sbb
xchg
adc
js
movsl
sti
pop
mov
fidivrs
jmp
push
cmpsb
sub
dec
sti
add
add
inc
fsubs
sarl
imul
or
movsb
outsb
and
pop
jmp
add
sahf
add
and
xor
cmp
es
mov
and
cmpsb
sbb
xor
imul
lea
pop
ret
cmp
out
in
add
adc
fildl
adc
inc
scas
and
mov
or
and
ret
and
das
inc
sti
xor
push
push
mov
and
gs
mov
jae
inc
xor
adc
pop
lods
sub
jp
stos
das
cmp
sub
jno
jmp
rol
jbe
dec
and
push
insl
push
pop
cmpsb
inc
mov
sub
or
jo
hlt
push
dec
mov
inc
push
and
or
fisttpll
jp
sub
add
and
push
idivb
int3
outsl
shll
lret
pop
push
mov
dec
stos
dec
jb
xor
js
inc
jle
fldlg2
lds
addr16
cmp
orb
pop
lods
mov
cmc
and
sbb
and
sarl
add
mov
pop
in
fcoml
adc
push
push
jnp
and
add
push
jne
pop
mov
xchg
mov
aaa
inc
sbbl
fisttpll
rclb
and
push
inc
cmpsl
mov
popa
and
lret
jp
shll
clc
pop
pop
jle
pop
int3
and
adc
dec
lods
int3
dec
out
and
sbb
push
jp
sti
lret
xlat
mov
test
pop
arpl
out
in
loop
and
adc
and
cmpl
jl
push
ficomps
movsb
pop
ret
out
das
mov
repnz
sub
rcrb
mov
enter
or
int
out
and
ret
mov
cmpsb
sahf
push
outsl
fildll
xorl
push
jge
dec
and
mov
movsl
orl
sar
sbb
and
mov
pop
xor
rclb
test
cmp
add
and
pop
andb
fimuls
std
aaa
and
inc
add
sub
push
fstps
dec
or
xchg
xchg
push
or
jg
inc
sub
adc
sbb
push
xor
dec
jb
shl
and
adc
mov
add
popa
aad
dec
loop
push
sahf
sbbl
push
ret
enter
jp
lcall
mov
les
arpl
mov
lock
jns
jne
lea
sub
sti
mov
mov
inc
pop
mov
insl
iret
stos
divb
orl
nop
and
sub
loopne
insb
and
xlat
adc
pop
enter
les
addl
inc
push
enter
pop
sub
and
sbb
cld
jl
insb
mov
and
mov
jb
xor
dec
ucomiss
mov
mov
mov
mov
inc
mov
ret
movsb
adc
in
aas
adc
mov
daa
push
rorl
repnz
ret
jb
sub
enter
push
movsb
in
or
push
fldcw
cmp
push
mov
lock
imul
adc
icebp
mov
ja
scas
je
xchg
xlat
push
cmp
adcl
scas
and
jmp
aaa
sub
sub
cmp
sub
pop
arpl
mov
popf
mov
pop
in
push
jl
inc
jno
fisubl
jo
outsl
xor
in
dec
mov
pop
push
sub
mov
gs
lahf
dec
and
sub
cvtdq2ps
fmull
sub
mov
cs
xchg
and
and
inc
and
jle
loop
sahf
rcl
jmp
icebp
gs
mov
std
xlat
add
popa
xchg
inc
mov
and
aam
xchg
jg
test
test
ficomps
inc
push
xor
adc
adc
sub
mov
mov
cmc
and
inc
enter
xchg
scas
push
lret
lods
fisubl
jmp
push
and
or
and
xchg
push
mov
and
xchg
sub
and
mov
jb
adc
and
jno
mov
push
cmpb
popa
test
cli
in
pop
mov
jns
stc
cmp
pop
daa
adc
and
sbb
ds
enter
push
and
aam
sbb
or
pop
jle
inc
inc
adc
scas
and
mov
repnz
pop
bound
frstor
and
xchg
ja
sbb
pmulhuw
add
and
pop
sbb
ljmp
cltd
shlb
lahf
cmpsb
xor
cmp
shr
stos
in
cmpb
sbb
xchg
pop
and
cs
xor
int
push
sub
aad
daa
sti
test
or
and
imull
and
inc
sarl
or
pop
stos
movsb
aaa
xor
cmpsl
mov
pop
iret
inc
sbb
inc
jae
imul
cmp
lods
pop
xor
test
xchg
sub
sbb
cmp
pop
lods
mov
push
mov
push
adc
lods
push
and
int3
push
or
aad
test
pop
mov
adc
mov
jg
jbe
push
imull
dec
std
adc
and
and
lret
inc
sbb
sub
stos
and
inc
iret
jge
jns
inc
and
mov
cld
aas
aam
dec
inc
stc
sbb
jb
ds
jnp
out
and
inc
xchg
imul
xchg
inc
in
and
mov
pop
and
mov
sbb
sub
loopne
arpl
dec
and
shl
sub
sbb
sbb
push
mov
sahf
mov
pop
int
test
icebp
lock
xchg
mov
fcoml
mov
mov
in
dec
inc
mov
test
inc
insb
jno
scas
shrb
fisubrs
arpl
pop
or
push
push
sbb
or
jmp
mov
insb
addr16
and
cwtl
lahf
jge
cmpsl
mov
mov
push
and
push
or
rcpps
pop
mov
cld
lods
cmp
loope
into
ret
lcall
test
dec
jae
adc
sub
aas
push
cmpsl
adc
pop
imul
es
arpl
ss
sar
cmpsl
lret
sub
cli
mov
sub
xchg
xor
jno
add
push
sub
aas
push
and
arpl
outsb
enter
movl
arpl
sub
inc
hlt
loope
rcrl
adc
xor
xchg
xor
lahf
addl
xlat
fs
popa
mov
in
clc
mov
add
jg
out
scas
jno
jns
call
ret
sub
cmpl
dec
jmp
pop
jg
xorb
fsubrl
subb
jns
push
fdivs
loop
testl
ret
cli
push
xor
sbbl
inc
xor
aaa
aas
pushf
bnd
push
in
and
addr16
rdtsc
rol
cmpsl
sub
sahf
stos
sub
movsl
push
push
int
icebp
dec
lea
or
mov
jne
fldl
cmpsl
fmulp
cwtl
push
fsub
pushf
outsb
pop
ss
xor
push
pusha
sbb
mov
pop
adc
movsl
mov
xchg
cmpsl
cmp
mov
insl
sub
clc
ds
mov
loope
push
out
push
mov
dec
pop
pop
cmpsl
sub
mov
cli
xchg
pop
add
rcll
pop
je
mov
xor
adc
pop
and
ret
test
push
jbe
sbb
xor
sti
nop
fwait
arpl
in
jbe
push
mov
outsb
test
lcall
pop
andb
mov
push
and
int
pusha
repz
loopne
jns
push
adc
adc
sub
inc
jp
push
jb
pop
sub
in
notb
inc
mov
aaa
cmp
sbb
dec
pop
sbb
inc
fs
je
outsb
pop
jns
data16
fucomi
xor
and
mov
sub
jmp
inc
xor
push
cltd
mov
and
sub
scas
das
pushf
or
inc
mov
dec
ret
xor
jbe
mov
imul
outsb
mov
sbb
ss
fmulp
in
fdiv
dec
inc
inc
push
sbb
sub
test
sub
push
sti
or
ret
xchg
push
push
or
je
inc
pop
std
xchg
dec
dec
int3
inc
pop
xor
and
adc
pop
adc
stos
or
adc
outsl
adc
xchg
xor
in
movsb
and
or
fucomp
pop
daa
mov
mov
test
mov
dec
test
leave
insl
mov
fcmove
jl
bound
leave
addr16
mov
xchg
push
nop
aad
imull
jnp
lods
push
mov
xchg
out
push
pop
xor
bound
les
lcall
sbb
test
in
push
insb
rolb
jg
mov
xor
inc
enter
out
push
ljmp
enter
mov
sti
add
daa
loope
cmp
leave
out
test
fs
xchg
xor
into
loopne
mov
xor
and
outsb
mov
mov
cmpsb
fstps
outsl
loop
out
js
out
jle
inc
into
scas
test
mov
jns
add
mov
and
sbb
sbb
popl
xor
add
jb
ficomps
xchg
pop
fcompl
xor
inc
sarl
or
ja
jae
lds
aad
mov
mov
push
int3
in
pop
fisttpl
inc
out
das
call
fs
cmc
dec
mov
sub
mov
dec
adc
inc
add
mov
or
in
je
inc
cmp
cmp
sub
sbb
pop
int3
inc
enter
inc
sbbb
pop
mov
mul
pop
inc
inc
loop
dec
or
popf
dec
sbb
adc
push
xchg
mov
and
push
jnp
xor
sbb
mov
jecxz
jge
aas
cld
or
sub
jae
push
or
popa
ret
les
xchg
xor
xchg
mov
jge
pop
mov
add
pop
daa
movsb
cwtl
mov
leave
arpl
inc
jo
scas
push
xchg
add
aam
rcrl
mov
imul
add
mov
cmp
push
xchg
hlt
js
mov
ja
add
push
mov
or
and
push
data16
dec
lea
sub
inc
clc
mov
xor
xor
xchg
add
mov
push
mov
fcmovbe
sbb
sti
dec
icebp
roll
jo
mov
or
add
nop
or
adc
xor
push
xor
loope
enter
mov
shlb
mov
or
popl
mov
call
mov
fnstsw
gs
dec
inc
sbb
dec
out
cs
jno
add
shr
rcl
enter
mov
xor
sub
sahf
ret
pop
jns
push
or
push
pop
ja
push
je
fists
lahf
int
push
jns
xchg
jp
dec
lahf
sbb
imulb
cmp
mov
jmp
jmp
aam
jno
mov
add
inc
and
and
xor
cwtl
gs
clc
xor
inc
mov
push
sub
pop
pop
jno
sbb
jb
jb
pushf
sbb
dec
ret
cmp
lret
ja
push
rcrl
sub
or
ret
cmp
fwait
push
orb
push
imul
cld
sahf
pushl
addr16
and
mov
les
sub
or
pop
or
pop
mov
and
cmp
xchg
mov
enter
les
add
mov
inc
fsubr
shl
dec
sbb
les
dec
push
divb
cwtl
cmp
sub
nop
pop
imul
outsb
add
xchg
xor
jbe
scas
icebp
xchg
loopne
jp
lds
jmp
push
enter
push
hlt
test
leave
clc
test
adc
mov
stos
mov
xchg
and
shrb
dec
adcb
pop
call
sahf
jp
mov
mov
adc
jns
mov
pop
enter
lcall
jbe
jl
inc
rolb
push
mov
enter
iret
test
jae
das
movsb
fs
push
sbb
sub
cmp
push
push
dec
pop
ret
sarl
adc
movsl
nop
add
popf
push
dec
mov
mov
ret
fcompl
fiadds
add
mov
or
cmp
cmp
lcall
cld
lods
decl
les
sub
enter
inc
in
push
sbb
das
cltd
mov
mov
icebp
or
insb
stos
fs
jp
jb
into
pop
pusha
or
les
in
lods
ljmp
arpl
sahf
sbb
outsl
dec
and
dec
sbb
hlt
out
lret
imul
les
adc
test
mov
int
pushf
push
les
mov
xor
std
pop
outsb
ret
pop
jns
adc
hlt
mov
gs
out
loope
inc
sbb
ret
lods
ss
bound
cmp
push
inc
loopne
mov
xchg
or
shll
pop
les
pop
js
cwtl
jo
jmp
push
rcrl
mov
push
inc
xchg
std
inc
js
stos
mov
arpl
jl
sub
adc
popf
dec
cld
iret
push
test
sub
adc
add
inc
push
or
js
inc
xor
sub
insl
lcall
shll
mov
xchg
mov
test
insl
push
pop
into
mov
jmp
in
in
lcall
jb
iret
fdiv
and
stc
mov
jg
fstl
les
rolb
inc
jl
xor
shlb
call
inc
stc
sub
hlt
sahf
and
into
adcl
xchg
mov
inc
test
lds
push
in
xor
inc
xchg
fsub
push
shl
icebp
mov
xchg
repnz
test
push
negl
push
sub
xchg
adc
stos
xor
cmp
repz
jl
xchg
mov
or
ret
xor
sub
inc
inc
sbb
push
and
stos
jmp
dec
push
popl
and
mov
or
dec
cmp
aaa
push
push
aad
push
jl
cmpsb
push
js
mov
or
xor
je
dec
xchg
lret
stc
cmp
pop
and
add
inc
cmp
or
arpl
lahf
enter
and
lcall
ja
inc
insb
test
push
incb
arpl
pushl
pushf
pop
sub
jle
ret
or
lahf
mov
jmp
in
add
jle
je
rcll
mov
jne
sub
enter
cld
shll
xchg
gs
int3
jp
sub
mov
jg
xor
sti
sysenter
jno
cs
mov
pop
inc
jno
or
add
call
dec
bound
in
cmp
insb
or
inc
repz
xor
mov
in
je
lahf
jg
ljmp
mov
mov
push
sub
add
ljmp
ljmp
push
jbe
pop
cmp
dec
xlat
hlt
mov
fnstsw
sbb
jecxz
pushf
fsub
cmpsb
push
inc
mov
inc
xchg
loopne
pop
pop
inc
je
or
adcb
daa
iret
sbb
jmp
xorl
jnp
negb
in
pushf
sub
les
jg
fdivl
mov
mov
mov
push
mov
pop
add
sub
ds
jbe
mov
movsb
push
fldenv
jecxz
jb
and
push
jne
mov
arpl
mov
bound
dec
les
push
add
jecxz
cltd
fistps
test
andb
adc
cmc
pop
sub
test
andb
outsl
inc
mov
and
jno
mov
sbb
xor
test
out
stos
push
arpl
imul
test
enter
rorl
or
in
cmp
jg
push
lret
cli
jp
sub
mov
xchg
rcrb
push
icebp
icebp
mov
dec
mov
mov
add
out
jns
and
les
aaa
lds
push
inc
pop
int3
ljmp
add
stos
push
loope
cltd
pop
das
sti
bound
bound
andl
cltd
aad
popf
sbb
dec
and
cs
in
inc
out
and
stos
sbb
int
sbb
flds
push
aam
arpl
pop
rcrl
inc
test
outsl
lahf
xchg
fcomps
movl
pop
notl
adc
mov
dec
push
xchg
sub
mov
lahf
adc
insl
psubsb
aas
outsb
sub
in
sub
and
lahf
jae
sarb
jae
inc
and
push
xlat
and
and
lret
repnz
cld
aam
daa
push
push
lcall
push
xor
dec
ret
fwait
dec
mov
sarl
cmpb
adc
aam
inc
sahf
push
into
js
lcall
adc
es
jg
jle
mov
jbe
and
sbb
sub
mov
jmp
jbe
and
sub
dec
std
sub
shrl
enter
sti
or
dec
aam
scas
xchg
mov
sbb
sub
jbe
cmpl
fdivrl
cli
in
rolb
pop
mov
xorl
mov
lahf
mov
xor
and
mov
dec
push
and
sbb
test
pop
clc
adc
les
fisubrl
sti
inc
sub
movsl
mov
mov
das
je
aaa
mov
cmp
fildl
insl
enter
insb
ficoml
es
imul
sbb
xchg
imull
lcall
push
inc
xchg
pop
ljmp
push
in
push
cltd
enter
and
scas
or
and
push
jo
mov
insb
repnz
ficomps
xlat
lock
and
jle
mov
and
push
lret
and
ret
sbbb
pop
outsb
dec
xor
imull
subl
sbb
mov
add
dec
imul
out
lds
call
enter
cltd
repnz
jmp
int
lcall
push
jl
xor
jp
subb
push
pop
test
lds
aas
and
imul
lock
jle
sub
ds
enter
je
inc
sbbl
sub
les
push
mov
dec
dec
subb
xor
dec
ja
insl
pop
pop
or
cmp
push
xor
dec
rcrl
int3
scas
insl
dec
out
lret
out
lock
xor
mov
ret
in
aam
jnp
andl
mov
sbb
sub
je
xchg
adc
and
ret
clc
jge
iret
sbb
sub
enter
bound
daa
inc
push
mov
sub
xor
dec
sbb
inc
sub
xor
jnp
fdivr
ljmp
or
lods
mov
and
jl
cmpsb
mov
mov
rol
mov
rol
mov
test
imul
into
sub
inc
and
lret
cmpl
add
or
or
fistpl
mov
mulb
outsl
loope
jns
mov
dec
xlat
lock
mov
ja
cmp
mov
mov
jns
inc
adc
mov
pushf
sbb
mov
lcall
adc
enter
ret
add
arpl
sbb
into
adc
cmp
push
and
fcoms
mov
insl
jo
inc
sbb
loopne
ja
mov
adcb
mov
loope
add
and
sub
push
mov
cltd
cld
mov
int3
mull
lret
iret
sub
pop
ret
xchg
cmp
fbstp
mov
icebp
and
xchg
call
loope
stos
mov
mov
xor
sub
arpl
inc
xchg
adc
sub
add
enter
inc
adc
fwait
sub
loopne
imul
push
js
in
pusha
in
lds
leave
xchg
int3
jno
testl
imul
jns
and
loope
in
popa
and
and
pop
test
daa
push
les
movsb
ss
fs
into
dec
mov
sub
stos
rcrl
sbb
and
xchg
mov
inc
jb
xor
sahf
cmp
insl
push
outsb
push
jns
jae
roll
js
mov
sub
das
lahf
and
or
in
sub
dec
hlt
xchg
sub
xchg
adc
sarl
jg
or
add
insl
pop
insl
push
out
les
std
popa
inc
data16
jbe
xorl
clc
sbb
cltd
ljmp
divl
loopne
data16
xor
sahf
out
arpl
xchg
fisubl
pop
jp
ds
and
inc
fstpl
mov
or
dec
aas
enter
jbe
int3
mov
es
push
pop
outsl
loop
fwait
adc
cmp
fstl
mov
or
cmpsl
mov
arpl
insb
jo
sub
mov
loopne
neg
dec
add
mov
inc
popa
mov
add
xchg
push
sahf
imul
sbb
push
or
scas
les
out
or
ret
arpl
arpl
sbb
sbb
sbb
enter
xchg
shlb
adc
pop
mov
call
lock
xor
inc
imul
mov
lret
xor
cmp
mulb
out
dec
adc
dec
out
js
jl
xchg
xchg
call
push
inc
jo
sub
sbb
sub
xor
fldenv
aam
sub
les
imul
mov
arpl
outsl
push
sub
or
cmp
lret
inc
and
dec
enter
xchg
cmp
adc
orb
push
call
enter
mov
cmp
ret
jnp
sarl
fcoml
aad
jne
cmp
aad
fidivl
mov
pop
push
jno
dec
scas
fs
mov
xchg
fdivp
fildl
imul
repnz
ret
aaa
or
pusha
outsl
into
pop
mov
lcall
lea
push
jns
imul
sub
add
inc
outsl
and
push
jl
mov
rcll
enter
jbe
inc
jmp
orb
aaa
loope
icebp
cld
jo
les
sbb
dec
or
fcmovne
imul
xchg
cmp
mov
stos
or
inc
or
mov
stos
mov
jno
mov
ret
nop
outsl
inc
pop
stos
add
dec
and
add
imul
roll
and
imul
sub
xor
int3
xor
in
outsl
nop
pop
hlt
ljmp
imul
xchg
and
arpl
fwait
pop
movsb
ja
jb
cmp
push
out
dec
add
dec
xchg
jle
ljmp
push
jge
pusha
pop
mov
rclb
mov
pop
jle
xchg
sub
inc
in
add
or
sub
push
rcll
pop
xlat
shll
imul
sahf
cmpl
fists
sub
inc
adc
gs
loop
or
push
and
lret
mov
push
js
push
pop
je
xor
adc
imul
insl
inc
jbe
out
fdivp
aam
xlat
inc
dec
dec
nop
jnp
lahf
pop
jae
stos
fisubl
arpl
stos
paddsw
xchg
mov
popf
js
lods
xlat
push
cmc
adc
outsl
je
ljmp
test
jge
xchg
imul
dec
fdivs
xchg
and
inc
mov
mov
popa
enter
in
loop
and
les
jmp
jmp
cmp
mov
das
repz
jecxz
les
and
pop
sub
out
and
push
iret
dec
mov
xchg
out
jl
loopne
mov
or
inc
outsl
mov
dec
lcall
out
mov
sub
pop
lds
jmp
sbb
or
xor
pop
sub
movsl
cmp
mov
pop
sub
xchg
leave
adc
mov
div
clc
pop
stc
jae
out
add
pop
add
dec
xchg
cmp
xor
pop
jg
add
sub
cld
xor
dec
adc
pop
scas
std
dec
in
xchg
sbb
jecxz
icebp
pop
popa
pop
mov
push
cmovno
cli
fists
mov
jp
cmp
je
mov
int3
dec
mov
mov
lds
or
jo
pop
fcmovb
inc
pusha
push
insb
fsubl
push
loope
mov
or
and
pop
out
pop
pop
fs
adc
sub
rol
mov
pusha
mov
cmp
clc
sub
cld
xchg
mov
mov
nop
inc
cwtl
inc
xchg
pushf
addr16
fdivp
mov
xor
mov
jnp
xchg
sub
or
and
push
jno
aad
mov
popa
stos
push
ret
daa
ror
or
les
into
push
inc
mov
jbe
pop
ljmp
pushf
jb
push
inc
push
lahf
arpl
fstpl
pop
push
adc
dec
call
mov
lcall
add
aad
push
in
adc
testb
mov
outsb
stos
mov
jb
mov
sub
push
jns
ret
daa
xor
inc
movsb
pop
mov
jne
enter
and
cmp
mov
and
or
jmp
rolb
adc
es
in
bound
loope
gs
push
mov
inc
aaa
jno
js
jp
mov
inc
repnz
jno
int3
in
push
mov
icebp
imul
sub
pop
mov
jp
mov
mov
and
pop
and
mov
add
clc
into
inc
cld
fs
sbb
jno
test
sbb
adc
mov
xor
cmpsl
out
in
xchg
je
outsb
add
les
inc
int3
inc
sub
mov
mov
jge
rcrl
ret
nop
cltd
add
icebp
icebp
lcall
cld
dec
sbb
push
test
mov
mov
cmp
ret
jns
jae
xor
sbb
adc
xchg
jle
inc
jecxz
xor
mov
aad
jae
testl
cmpsl
mov
enter
pop
mov
out
aaa
jbe
adc
jnp
jne
daa
dec
push
imulb
mov
cmp
int3
inc
jbe
cmp
dec
xchg
in
insb
insb
rcrb
lret
jno
popf
outsb
popa
inc
in
data16
test
into
inc
lcall
int
mov
imul
xchg
xchg
sahf
addr16
test
jne
xor
sti
nop
lret
pop
or
sub
cmpsl
xchg
imul
jg
std
push
loopne
jnp
jne
push
insl
enter
pop
imul
sbb
ret
js
imul
sarl
sahf
dec
insb
push
fs
pop
cmc
mov
mul
xor
out
nop
aaa
inc
and
leave
and
stc
push
pop
aad
cmp
xchg
imul
and
push
popa
das
rcl
mov
cmpl
xor
popa
pabsb
les
sti
insb
in
and
repnz
pop
mov
and
insb
jg
fistps
jg
dec
daa
je
dec
rolb
xchg
xor
in
ret
mov
popa
mov
push
dec
loop
mov
in
pop
dec
jmp
cmp
jge
cmc
push
pop
inc
cld
sbb
mov
mov
adc
push
movsl
mov
stos
aad
inc
jb
pushf
fnstcw
andb
div
orb
ret
and
mov
xor
add
mov
vminss
ret
xchg
sbb
dec
scas
mov
or
arpl
rorl
imul
in
inc
cmp
imul
sub
insl
iret
scas
ljmp
ja
iret
in
jno
fimuls
fwait
daa
sbb
xchg
inc
test
mov
sahf
cld
bound
mov
adc
cmp
xor
out
push
cwtl
jnp
mov
mov
cmp
ljmp
inc
pop
lods
outsb
cltd
push
cmp
inc
ret
ljmp
lcall
addl
int
jnp
sbb
xor
popa
mov
jne
addr16
sbb
jne
imul
stc
out
cmp
sbbl
insl
lea
outsb
push
push
negb
movsb
add
xor
insb
and
jns
mov
mov
das
lret
dec
orb
mov
call
add
sbb
xchg
push
and
inc
cmpl
xchg
xor
mov
mov
int3
test
dec
roll
jp
and
popf
or
mov
orb
fs
fwait
hlt
shll
dec
inc
sbb
pop
inc
sbb
mov
inc
mov
mov
mov
add
mov
jb
loope
xor
jecxz
adc
mov
testb
sub
mov
dec
loope
aaa
or
sbb
in
and
inc
xlat
push
add
stos
lea
outsb
outsl
shl
popf
test
push
pusha
sub
lock
xchg
es
pop
iret
stos
dec
cmp
or
inc
push
xchg
orl
mov
jg
cmc
cmp
jp
ss
push
mov
mov
fsubr
repnz
popa
f2xm1
insb
xor
cmpl
roll
sbb
stos
cwtl
push
xchg
adc
inc
jno
addr16
dec
icebp
add
cmp
jge
repnz
inc
lcall
ja
add
mov
mov
les
inc
mov
sub
ud0
cwtl
repz
xchg
mov
inc
and
jb
and
dec
cli
mov
inc
mov
inc
insb
das
dec
rol
jns
jl
cmpsb
popa
loop
sarl
add
mov
testl
mov
ja
bound
pop
inc
popa
push
xchg
jle
and
mov
mov
dec
xor
push
xchg
enter
xor
push
mov
pop
sub
add
sub
icebp
lock
add
sbb
daa
ret
jno
xlat
jg
inc
dec
inc
dec
mov
inc
pop
mov
add
pop
leave
push
sbb
push
mov
aas
xchg
jecxz
inc
push
push
xchg
or
lahf
into
sbb
imul
dec
int
inc
fldl
push
daa
add
outsl
jne
and
inc
jbe
insl
xor
dec
call
ljmp
mov
shr
ljmp
add
lea
enter
dec
scas
inc
mov
jo
jb
lea
sahf
dec
pop
mov
xchg
orl
imul
stos
inc
sbb
cld
shlb
ja
and
mov
sahf
mov
inc
mov
pop
pop
cmp
into
and
inc
ret
jl
fmuls
enter
adc
ret
jnp
cmpb
fidivl
js
sahf
and
or
sub
imul
mov
arpl
jge
loopne
mov
adc
cmc
pop
das
xor
push
xchg
fistps
aad
imul
lods
enter
sbb
les
imul
push
sub
bound
enter
out
xchg
orb
mov
inc
out
lea
adc
into
out
les
xor
pop
adc
fidivrl
xor
roll
sbb
repnz
cmc
lds
sbb
loop
mov
mov
test
jae
add
xlat
dec
mov
enter
add
ret
cld
orb
fadds
into
dec
cmp
sub
cld
push
leave
jnp
test
scas
jle
inc
aad
dec
lcall
aas
iret
leave
inc
pop
fisubrl
rclb
cmp
jns
shlb
mov
sbb
cmp
stos
test
loopne
jp
loope
in
cmp
rcrl
fistpl
fisubs
mov
push
in
mov
push
push
fwait
mov
push
enter
sbb
loope
enter
jb
sub
xchg
push
inc
les
xor
adc
adc
add
and
and
fs
in
cld
jns
xor
cmpsl
cwtl
mov
sar
mov
sahf
mov
mov
and
les
repnz
fs
repz
fimuls
push
pop
repz
frstor
cmc
inc
aad
insb
xchg
mov
mov
xor
decb
ja
or
push
adc
or
push
cmp
out
inc
roll
adc
repnz
and
adcl
inc
xor
jne
adc
and
test
mov
push
pop
popa
mov
pop
inc
xchg
mov
pop
cld
mov
sbb
int3
test
imul
insb
scas
xor
xor
ret
addr16
jno
mov
pop
fst
or
shlb
dec
pop
jb
inc
push
out
mov
or
sbb
decl
push
or
inc
cltd
loop
mov
mov
decb
arpl
jo
sbb
jp
fiaddl
sbb
es
mov
pop
push
mov
mov
inc
mov
mov
clc
mov
shlb
push
hlt
mov
and
iret
stos
daa
enter
cld
mov
inc
shrl
enter
ret
dec
jns
dec
inc
lcall
icebp
xchg
into
xchg
subb
push
sti
imul
into
shll
icebp
lahf
fs
jg
jae
xchg
jb
es
xor
push
sar
mov
mov
cmp
inc
sti
add
jo
adc
inc
dec
fildl
mov
and
adc
pop
cmp
dec
sbb
scas
addb
push
data16
cmp
sbb
lahf
sub
lods
dec
cmp
mov
je
xor
jl
jg
scas
or
shll
pop
push
push
fmul
xor
sbb
inc
repz
add
ja
fadds
insl
outsl
sbb
sub
outsb
push
pop
push
enter
pop
xor
jne
dec
adc
cmpsb
jno
enter
adc
sub
push
lock
adc
jno
xchg
out
dec
mov
imull
jae
push
mov
jmp
addb
decb
and
fmull
and
outsl
insl
out
add
shlb
enter
jmp
pop
adc
rolb
jbe
jo
pop
lds
push
rclb
in
inc
xchg
data16
dec
inc
jb
cmp
or
aaa
push
jns
mov
add
push
and
sbb
jmp
lcall
dec
divps
sbbb
shll
std
inc
out
lds
pop
or
inc
cli
enter
cld
cmp
or
adc
mov
mov
bound
enter
xchg
in
ja
repz
ljmp
test
sahf
dec
sbb
mov
je
cmpsb
les
mov
fstp
jle
dec
jmp
pop
and
loope
cltd
inc
dec
shlb
push
int3
loope
cmp
sbb
mov
hlt
jo
enter
jg
mov
rol
idivb
stc
push
add
mov
jg
adc
cwtl
jns
xor
cmp
push
xor
enter
push
lea
cmpb
iret
and
mov
add
test
test
outsb
test
int
mov
lds
sub
pop
lcall
pop
bound
adc
mov
mov
mov
pop
fsubrs
xchg
xchg
les
inc
rorl
insb
mov
ja
jae
test
push
add
sahf
lea
push
pop
inc
adc
jl
outsl
add
adcl
inc
pop
sbb
movsl
push
cmpl
pushf
imul
inc
scas
and
stc
lds
add
jno
popa
cmpsb
jnp
push
mov
or
adc
in
and
popa
or
les
ret
jne
shrl
aas
psubsw
lcall
into
ret
pop
mov
jecxz
imul
lahf
xor
mov
and
mov
push
xchg
lods
or
and
sbb
dec
pusha
inc
add
aas
add
arpl
lods
push
pop
pop
adc
and
xchg
in
and
cmp
movsl
mov
adc
or
subb
in
pop
jmp
push
pop
rcrb
or
ret
mov
xor
lcall
pop
and
lahf
out
popf
or
pop
and
in
or
sub
sub
insb
js
jmp
and
add
jmp
sub
fiaddl
ret
or
and
pop
inc
and
jae
cmp
cmp
loop
les
xchg
movsl
sbb
mov
and
js
xor
test
js
pusha
inc
push
push
xchg
cmp
mov
sub
push
or
ret
sub
dec
aam
pop
inc
test
push
mov
negb
lock
jmp
dec
mov
jecxz
fstpt
and
mov
mov
loop
fcompl
pop
cmc
and
pushl
hlt
and
xchg
pop
or
movsl
leave
es
roll
inc
push
xor
mov
and
push
sub
mov
xor
fs
and
mov
mov
pop
jnp
xor
mov
inc
or
lea
loop
push
fcoms
icebp
shlb
pop
loope
outsb
cmp
and
adcb
stos
inc
push
and
mov
icebp
push
mov
int3
mov
sbb
and
aas
pop
sub
dec
shrl
test
and
sbb
filds
popa
jbe
inc
pop
dec
xlat
mov
jge
iret
push
ret
sbb
xor
iret
dec
xor
js
or
dec
outsb
in
scas
sub
dec
cmp
jns
pop
lahf
fnsave
int3
sub
inc
int
dec
je
pushf
mov
outsl
sbb
inc
xor
sarl
sbbb
outsb
xchg
fisubl
outsl
and
les
mov
jae
jge
iret
insl
movsb
int3
inc
lds
mov
adc
inc
cmpsb
sahf
xor
andb
inc
jp
and
cli
xor
and
sub
icebp
add
mov
mov
push
in
roll
cwtl
enter
push
dec
dec
adc
rol
xlat
inc
jno
mov
mov
in
ljmp
dec
push
xchg
outsl
xor
jnp
and
inc
arpl
and
insb
dec
xchg
sti
jg
mov
sti
mov
push
jmp
jle
out
mov
dec
test
imul
sbb
sub
and
cmpsl
ja
pusha
or
cmp
shll
outsb
sbb
out
imul
icebp
sbb
sbb
add
cmp
jns
push
sbb
push
testl
jecxz
jle
mov
cltd
pop
cld
sub
jbe
jle
sbb
mov
inc
or
les
neg
push
and
push
jecxz
push
jbe
sbb
and
mov
inc
cmp
fs
lret
lcall
ljmp
fsts
mov
mov
insl
stos
mov
outsb
lods
ret
sar
xchg
sub
pusha
jb
fiaddl
pop
xor
les
repz
test
les
cmp
xchg
or
xchg
out
cmp
mov
push
fnstsw
pop
mov
mov
rclb
and
push
je
movb
add
aad
enter
push
es
or
cmp
movsl
jge
add
mull
fldl
jae
insl
enter
sub
cmp
lahf
mov
or
sub
popf
xchg
push
dec
imul
push
loope
fadd
fidivl
xor
push
out
jne
lods
jnp
or
xchg
out
stos
pop
sub
ret
push
jg
cmpsl
xor
mov
mov
add
sub
sub
dec
cmp
inc
lods
xor
aas
out
subb
daa
add
and
into
in
or
outsb
and
jb
lcall
repnz
bound
insb
cmpsl
xor
mov
mov
cmp
xor
cmp
in
or
mov
aas
add
adc
les
ss
inc
mov
sbb
and
adc
subl
mov
dec
repz
add
testb
xchg
cvtps2pi
dec
clc
aad
popa
inc
inc
sub
pop
push
adc
test
gs
out
sbb
xchg
test
jns
adc
mov
repz
pop
icebp
mov
adc
in
fmul
and
fisttpl
inc
dec
les
ja
mov
leave
jl
sub
and
test
mov
cmpsl
jbe
test
xchg
lcall
inc
gs
stos
jmp
add
adc
jg
icebp
add
jb
jno
push
cmp
jl
data16
andl
enter
adc
mov
inc
jnp
mov
test
inc
pusha
aad
sbb
insl
jg
popa
int
sahf
insl
xor
sub
mov
inc
mov
jp
jmp
adc
cmp
in
lret
push
and
outsl
dec
fs
pusha
pop
imul
jns
loope
aas
jne
mov
inc
jl
cld
ljmp
xchg
mov
push
ljmp
xchg
inc
pop
pop
pop
xchg
sub
mulb
pop
push
es
mov
sbb
ss
aad
fistpl
mov
xchg
hlt
and
pop
das
pop
lcall
xchg
test
push
xlat
aam
push
and
movsl
push
push
xorb
mov
and
mov
xchg
add
mov
dec
fsubs
and
sahf
arpl
cmp
sub
mov
aam
sbbl
pop
mov
fistl
inc
sbb
pop
lcall
inc
push
ficoml
xchg
inc
fimuls
test
mov
sub
cmpl
fisubl
cwtl
add
fsubrl
jo
hlt
arpl
inc
imul
repnz
loope
cmp
icebp
pop
iret
stos
repz
xor
out
cmp
inc
adc
js
mov
sub
jmp
push
leave
inc
pop
or
lcall
das
bound
out
xchg
sub
jle
inc
je
js
mov
sbb
xchg
adcl
cmp
add
test
xor
sub
addr16
fwait
dec
dec
imul
and
int
divl
cmc
adc
imul
adc
pop
xchg
loopne
hlt
mov
or
jmp
ja
sub
push
adc
mov
dec
jnp
lcall
inc
sbb
in
int
dec
or
mov
xchg
das
xlat
add
inc
sbb
stos
xchg
mov
rcll
adc
pop
out
inc
xor
xchg
pop
ja
pop
shl
stos
imul
mov
leave
leave
jns
aam
cmpsl
les
mov
sbb
in
cmpsb
lret
gs
ret
mov
icebp
jle
hlt
adc
jl
test
ljmp
inc
cwtl
data16
mov
push
jecxz
popf
pop
mov
pop
cltd
ror
jns
pop
adc
enter
das
xor
inc
xchg
stos
sub
cmp
cmpsl
jne
push
frstor
xchg
mov
arpl
lahf
negl
dec
or
xchg
lds
and
lret
in
jl
and
mov
cld
in
mov
sub
inc
jmp
les
add
ja
add
ret
push
pushf
lret
lahf
sbb
shl
push
enter
dec
mov
cld
dec
xchg
cmpl
out
jl
mov
mov
and
jo
repnz
xor
add
orl
mov
enter
test
add
dec
aas
daa
xchg
adc
movb
pop
test
or
stos
shrl
sbb
sarl
jg
mov
movzwl
inc
mov
fcoml
fiadds
loopne
mov
cmpl
mov
and
inc
test
sub
iret
imul
xchg
cs
inc
jg
cmp
lcall
push
sahf
pop
xchg
fimull
push
negl
bound
mull
mov
lcall
ret
cwtl
and
sub
mov
xchg
sub
fwait
addb
arpl
and
enter
pop
push
pop
cmpsl
xor
and
jbe
and
imul
pop
cmp
xor
push
add
loope
lods
fdivl
push
sti
ja
add
enter
dec
mov
mov
ret
dec
stos
orb
sahf
lahf
xor
xor
and
cmpsl
loope
mov
fucomi
jecxz
mov
xlat
hlt
jecxz
aad
jns
pop
adc
cmp
imul
inc
sbb
insl
mov
mov
mov
sahf
aaa
xor
sahf
jmp
jl
mov
inc
xor
in
in
mov
das
lock
mov
adcb
cmp
pop
inc
std
xchg
push
push
lret
cmpb
jecxz
dec
sbb
jno
xor
jnp
sub
je
xor
push
add
arpl
xchg
xor
push
int
jbe
xor
testl
or
cwtl
ret
sbb
arpl
addr16
cmp
jnp
out
test
ja
jecxz
jo
sbbl
imul
pop
xor
loopne
sbb
or
pop
cmp
and
subl
orb
inc
sbb
adc
or
fistpll
mov
clc
int
push
ret
pop
xchg
xchg
sbb
dec
or
pop
cli
ja
cld
repz
adc
xlat
rorl
xlat
jmp
jno
mov
fistl
jns
cmp
mov
stos
les
lret
sub
iret
lods
js
insl
mov
or
inc
adc
mov
jae
and
fdivs
xchg
clc
insl
enter
inc
and
push
adc
jne
repz
les
gs
mov
sub
das
add
jmp
jno
mov
in
into
imul
leave
fiaddl
dec
mov
gs
data16
imul
cmp
xor
std
out
mov
outsb
jb
jae
push
mov
mov
mov
adcl
xchg
addr16
and
push
test
dec
xchg
rol
lret
les
jb
es
int
sub
jl
cmp
data16
and
mov
or
aam
imul
rorl
enter
les
jge
xor
imull
addr16
push
addl
cwtl
mov
mov
sbb
sub
sub
pop
mov
pop
xchg
jnp
push
jecxz
shll
sbbb
stos
cmpsl
ret
sahf
addl
add
test
adc
repnz
mov
dec
repnz
and
cwtl
jl
mov
adc
jmp
sar
test
mov
inc
sub
sbb
mov
les
adc
sbbb
mov
sbb
lock
jmp
or
gs
mov
or
adc
mov
mov
xor
inc
test
sti
mov
ret
roll
push
or
lea
enter
lahf
jne
mov
hlt
push
ja
dec
xor
idivb
mov
popa
push
sub
pop
push
sub
test
out
es
mov
int
pop
aam
dec
popa
mov
cmpsl
pop
sub
sub
push
lret
inc
enter
cmp
dec
jge
mov
sub
clc
cmp
adc
fwait
sub
fdivl
push
pop
pop
dec
pop
lret
pushf
roll
mov
xchg
add
pop
subl
jae
clc
sub
pop
negl
dec
scas
decl
jns
lods
or
dec
jnp
xchg
inc
icebp
pop
adc
lret
call
pop
sbb
jns
bound
mov
testl
gs
dec
insb
enter
jle
push
flds
dec
in
jno
arpl
mov
mov
push
mov
mov
cltd
inc
loope
les
mov
int
icebp
into
xlat
and
inc
add
jne
and
outsb
pop
pusha
enter
imul
inc
stos
mov
mov
mov
aaa
int3
mov
cld
pop
ss
inc
lcall
cmc
mov
jle
clc
mov
popf
stos
push
mov
push
xor
jae
stos
push
popa
cmpl
mov
lds
sbb
mov
inc
mov
sub
lahf
push
push
xchg
int3
imul
dec
or
loopne
dec
xchg
adc
addr16
xchg
dec
or
outsl
arpl
ljmp
fadds
es
push
mov
fisttpll
lods
dec
dec
call
icebp
xor
movsb
sbb
aas
fisttpll
fisubl
dec
mov
ss
int3
lahf
dec
sbb
arpl
insb
push
add
rcrl
pop
and
clc
mov
xchg
shlb
enter
movsl
sub
pushf
inc
and
mov
je
fs
and
mov
faddl
clc
and
pop
jmp
scas
and
sbbl
std
jl
mov
and
jo
adcl
pop
push
popa
and
pop
ret
push
testb
push
jecxz
fstps
cwtl
lret
out
test
nop
iret
pop
jns
addr16
mov
mov
adc
aas
xchg
and
pop
push
out
out
aam
leave
negl
adc
and
out
dec
inc
lret
in
cmpsl
sub
mov
lret
idivb
and
adc
xchg
sbb
pop
shll
lahf
jg
outsl
popa
or
adc
jp
sahf
repz
in
add
ret
and
sub
test
add
fmuls
jmp
out
jecxz
push
inc
push
jne
xchg
and
xlat
ja
add
or
stc
push
dec
xchg
cmp
dec
mov
les
xchg
imul
mov
jp
lock
and
xor
and
sbb
add
bound
and
pushf
and
xchg
aas
lahf
test
and
aad
movsb
test
dec
and
or
nop
clc
sbb
add
movsb
lea
mov
cmp
sub
sti
or
fidivs
inc
pop
jb
xchg
jecxz
ds
mov
clc
std
mov
xor
and
adc
ffree
aam
sbbl
mov
and
xor
lret
insl
inc
add
push
arpl
mov
out
push
mov
pop
mov
and
fistpl
adc
fidivl
jb
adc
cmpsl
jl
dec
sub
and
adc
jns
mov
imul
xor
and
ror
pop
mov
fisubrs
dec
js
mov
and
xchg
hlt
iret
insb
mov
fisttpll
xchg
jge
repz
test
xor
loop
jno
aad
inc
xor
xchg
inc
lcall
jns
pop
pop
or
call
xchg
mov
es
adc
fwait
push
sti
and
jno
pop
sar
push
pushf
mov
xchg
add
xor
ret
pop
adc
mov
sub
insl
les
mov
ret
fbstp
fidivrs
fcmovnu
sti
sahf
negl
fsts
inc
outsb
inc
call
sahf
mov
dec
jecxz
mov
push
push
daa
mov
loop
enter
test
mov
sub
mov
cmp
or
pop
or
mov
push
sbb
rclb
test
fstl
sub
rcr
int3
cwtl
mov
das
stos
cwtl
pop
xchg
lods
into
mov
push
rclb
les
xchg
decb
inc
lret
push
sub
or
pop
inc
sub
imul
pop
or
or
test
cltd
adc
mov
adc
loopne
and
insl
jb
cld
insb
pop
mov
insb
cmpsl
push
add
test
mov
ret
push
test
mov
mov
icebp
frstpm(287
push
mov
push
test
sbb
mov
pop
cld
push
fisttpl
test
imul
cwtl
xor
repz
cmpsb
mov
dec
jp
sub
xlat
push
adc
sarl
pop
mov
inc
das
and
inc
sbb
sarb
js
sbb
add
dec
cld
call
mov
xchg
sarl
insl
and
and
aaa
cmp
mov
or
test
inc
push
or
inc
nop
add
subb
aas
xor
call
jp
mov
test
mov
mov
mov
ds
or
push
inc
pop
push
sub
inc
popf
cmp
ret
enter
sbb
cmp
mov
inc
lcall
stos
ss
jmp
sub
dec
aad
xor
ret
add
les
or
je
pop
sbb
pop
mov
inc
sub
and
mov
dec
add
fs
ljmp
iret
lea
cmpsb
or
jnp
pushf
mov
les
je
icebp
lods
fs
and
lahf
xchg
push
arpl
jge
sbbl
inc
dec
nop
add
test
pop
push
push
push
lods
repz
out
pop
or
call
fdivl
xor
adc
jnp
repnz
sbb
lea
or
mov
push
fwait
pop
mov
fnsave
jecxz
ficompl
enter
sbb
fwait
insb
ret
push
imul
xchg
jns
or
jne
test
sub
enter
mov
mov
jbe
mov
inc
mov
insl
pop
dec
in
shlb
in
fwait
add
pop
jbe
dec
mov
and
push
jbe
sub
imul
nop
xor
lret
mov
or
lods
dec
adc
xchg
jb
sub
xor
popa
push
sub
mov
pop
outsl
mov
push
or
imul
cwtl
push
jle
xchg
les
aas
lret
jbe
cmovge
cmp
push
inc
adc
jmp
shll
and
fstps
out
push
enter
mov
popa
mov
sub
in
jne
sahf
cld
jmp
les
repnz
xchg
mov
xor
stos
sub
rcll
or
push
ret
cmpsb
jle
add
or
jno
xchg
sub
pop
stos
pushf
pop
roll
pop
mov
cmp
add
jno
add
fnstsw
jp
adc
cltd
int3
outsb
mov
loop
fists
add
mov
or
aad
sahf
sar
in
leave
xchg
pop
call
lock
jb
fwait
and
dec
and
lods
add
inc
push
es
and
mov
clc
pop
mov
xor
inc
fsubl
or
imul
hlt
adc
lret
push
sbb
bound
stos
iret
xor
dec
inc
and
mov
test
hlt
lds
push
and
mov
or
inc
and
divb
pop
mov
test
imul
mov
dec
fucomp
mov
in
nop
int
and
push
push
mov
and
lods
sahf
mov
int3
std
adc
and
and
orb
and
movsl
add
and
outsl
outsb
sti
push
repnz
and
sbb
xor
mov
xlat
xor
mov
mov
sub
adc
xor
lock
adc
fucomip
mov
sub
stc
push
vcomisd
dec
push
adc
mov
insb
and
push
shlb
push
negb
inc
adc
fisubl
jb
push
sub
nop
arpl
jno
or
out
inc
inc
adc
xchg
stos
dec
inc
mov
ljmp
add
mov
pusha
xor
sub
cmp
test
lock
mov
and
cmp
sub
imul
or
jns
xor
and
inc
jnp
and
pushf
or
sbb
mov
dec
nop
pop
shlb
outsb
xor
and
repnz
in
xchg
faddp
sub
and
push
pop
fistl
mov
inc
mov
xchg
adc
arpl
mov
inc
je
and
cltd
test
xor
pop
pushf
xchg
mov
loope
lea
push
imul
dec
and
pop
cmp
lds
or
fsubrs
push
andb
pushf
fisubl
popf
add
sub
dec
push
fldenv
std
and
insl
jbe
and
sub
aaa
fcom
data16
jno
and
movsl
imul
addl
mov
inc
and
mov
push
sbb
loope
sbbl
jne
aas
and
repz
out
pop
jno
repnz
shll
cmp
popf
xor
inc
test
aas
mov
jge
push
cli
and
sbb
mov
add
push
popa
test
pushf
push
cmp
and
and
sahf
dec
push
jge
outsl
and
mov
adc
lds
das
mov
adc
and
xor
lods
sbb
pop
pop
inc
bnd
mov
test
inc
js
dec
jb
sbb
leave
jne
rol
jp
mov
and
notb
push
sbb
imul
loop
mov
push
movsb
testb
sbb
popf
cwtl
jle
lahf
data16
sbb
inc
pop
xchg
int
fmulp
sahf
xchg
mov
adc
push
and
sbb
outsb
mov
mov
fidivs
mov
movsb
imul
cld
fstpl
adc
mov
jo
xor
movsl
shl
stos
sub
adc
dec
loopne
sub
les
dec
jne
into
xor
outsb
lods
in
mov
call
add
pop
mov
push
dec
inc
out
or
fbstp
adcl
mov
sub
mov
cli
cmc
and
dec
xor
and
fstpl
jae
aaa
popf
fwait
jns
inc
sti
sarl
pop
push
notl
dec
mov
lds
out
in
mov
pop
and
jo
shl
jo
pop
iret
lods
jno
sarb
and
nop
movsl
leave
xchg
arpl
lahf
rcrb
aas
or
pop
inc
das
and
pop
push
xor
repz
dec
and
testl
sbb
push
push
add
xor
inc
roll
int3
loope
int
xor
xchg
inc
inc
repz
imul
cmp
xor
adc
jb
outsl
mov
sbbb
mov
shlb
inc
sub
jbe
sub
jno
ss
push
pop
cmp
push
and
jne
aad
jbe,pt
add
lds
xchg
sbb
inc
mov
and
sub
pusha
repnz
inc
mov
xor
cmp
faddl
iret
lahf
and
pop
jbe
and
jno
xchg
adc
push
mov
mov
xchg
rcrb
leave
lret
and
mov
and
mov
add
cmp
lea
dec
pop
cmpb
and
lds
shll
call
aas
push
push
fwait
xor
outsl
lock
sbb
into
xchg
xor
push
and
bound
cld
inc
xchg
dec
sbb
divb
and
jb
and
add
ror
dec
jl
pop
shrb
pop
push
xchg
in
movsl
lahf
leave
out
and
ss
jg
fcomp
cmp
cli
sahf
sahf
and
test
roll
sub
hlt
loope
xchg
test
jnp
mov
fdiv
mov
loop
and
enter
imul
scas
jae
inc
and
xor
outsb
outsl
and
jmp
cmp
sub
xchg
inc
jp
ret
and
xchg
sti
pop
aaa
xchg
add
and
imul
outsl
inc
xchg
mov
sub
popf
jle
mov
mov
adc
dec
or
pop
mov
nop
call
sarl
ja
jmp
mov
lea
lods
int3
out
das
or
daa
cmp
shll
cmpl
inc
lcall
orb
sar
push
cmp
sbb
and
push
iret
test
sbbb
jne
and
popf
xchg
daa
and
fdivr
mov
lds
sar
push
stos
jns
imul
rclb
jbe
dec
mov
sbb
sub
fwait
mov
pop
cmc
xchg
mov
es
in
test
pop
into
adc
ss
xchg
push
arpl
and
dec
jo
sbb
mov
fisubs
push
mov
inc
lret
mov
cli
ret
aas
pusha
fwait
outsb
add
cwtl
out
pop
xchg
mov
and
lods
sub
inc
pop
movsb
inc
insl
and
xor
ljmp
in
jg
scas
and
dec
lds
mov
aas
mov
mov
xchg
jmp
dec
cmp
loop
loope
fsubrl
jns
and
xchg
and
inc
js
test
sbb
inc
jb
dec
push
jge
push
or
push
cmp
dec
lock
fldl
das
sarl
les
jecxz
xorl
push
sbb
jp
mov
inc
jbe
push
xchg
dec
ds
loop
mov
xor
pop
pop
inc
repz
jne
or
mov
aad
out
scas
and
cmp
or
or
dec
or
push
cmc
fmull
ja
and
in
push
adc
pop
outsb
jmp
loop
cld
dec
pop
pop
outsl
sbb
cmp
lcall
in
in
icebp
fadd
adc
dec
js
xchg
dec
mov
and
stos
sub
push
data16
push
enter
push
bound
and
lock
sub
and
repnz
loope
inc
mov
xchg
pop
xor
lcall
mov
push
loop
mov
xor
and
push
xor
and
cld
jmp
xor
jp
jnp
out
and
jae
mov
cltd
and
lret
mov
jp
imul
sub
and
jne
jo
fisubl
daa
imul
sub
push
cmp
sub
inc
xchg
sarl
jge
and
sbb
and
mov
cmp
outsb
and
push
cmp
xor
push
xchg
fdivrl
cmp
cwtl
aam
push
mov
sub
ret
adc
lea
xor
gs
loope
jge
and
jne
and
sahf
inc
pusha
lahf
pop
mov
pop
movsl
push
pop
in
ret
xchg
inc
push
inc
mov
mov
je
iret
inc
leave
xchg
movsb
xchg
xor
lahf
sti
jge
and
sbb
cli
and
ss
ret
jae
adc
and
xor
lahf
sub
mov
mov
and
shrb
repz
cmp
dec
pop
mov
shlb
push
sub
push
adc
test
sbbb
mov
je
dec
sub
and
movsl
jne
xchg
and
aad
call
pop
and
mov
sti
ret
repnz
sbb
xchg
cmp
ljmp
fs
std
adc
mov
imulb
ficoml
inc
pusha
add
movsl
mov
sbb
inc
push
sbb
rcll
xchg
sub
mov
popa
xchg
xchg
int3
insb
mov
and
adc
aam
sbb
adc
cmp
scas
aas
fisubl
out
and
jne
adc
xor
sub
push
int3
xchg
inc
and
pop
lods
jmp
fildl
and
or
and
pop
push
cmc
mov
inc
je
jbe
push
fcoml
xor
and
call
sub
cmp
sub
clc
sub
lods
lds
insl
jecxz
xchg
jns
test
push
mov
sbb
sub
movsb
push
sbb
pop
lods
fisubrs
icebp
sub
popa
movsb
inc
in
push
adc
dec
dec
adc
add
mov
lock
bound
movsb
pushf
mov
and
imul
jb
cmp
fsubrl
repnz
and
jmp
mov
inc
fisubrl
jecxz
test
jecxz
sub
add
push
popa
aad
es
jle
push
fisubl
fcomps
push
add
and
mov
je
test
leave
jne
outsl
stc
add
sbb
sub
mov
xchg
int
cmp
mov
jmp
pusha
inc
sbb
cmp
pop
arpl
jnp
and
lret
adc
and
jmp
push
xchg
add
outsb
jp
mov
addb
cli
xchg
aas
and
pop
scas
jl
jle
pop
jns
mov
and
push
inc
iret
out
lret
pusha
add
mov
mov
cmp
outsl
dec
add
and
cmpsl
pop
mov
jbe
jae
jb
sbb
dec
sbb
xor
xchg
mov
sbb
sub
mov
and
push
fidivrl
test
and
inc
arpl
mov
dec
das
and
nop
loope
shl
lea
pushf
jns
fldcw
sbb
add
leave
shrl
xor
sbbb
xchg
xchg
cmc
cs
jmp
fs
loop
les
sub
imul
insb
fucomp
js
xchg
lock
int3
xor
fcmovb
push
outsb
popa
add
popa
xor
sub
xchg
sub
and
inc
inc
mov
test
inc
out
scas
test
jecxz
bound
stc
and
add
out
dec
and
xchg
out
dec
js
mov
and
in
sbb
xor
pop
and
and
test
andb
insb
ja
lret
or
fdivrl
out
lods
and
test
add
fwait
jo
mov
add
jns
sub
je
ss
and
mov
or
out
adc
and
and
sarb
mov
imul
xor
mov
jbe
aas
and
rclb
add
arpl
aad
out
and
mov
add
sbb
insl
cmp
cmpsb
or
sub
iret
cmpsl
mov
out
inc
test
inc
and
fiadds
fdivrl
fidivl
lods
pop
test
add
xor
fs
cmpsl
ljmp
shlb
mov
mov
jmp
insb
mov
dec
xchg
insb
sub
xor
imul
pushf
andb
and
popa
ficompl
xchg
mov
sbb
js
ds
test
sahf
and
out
cs
pop
repnz
fmull
push
dec
or
imul
icebp
pop
jb
pop
in
pop
jbe
push
mov
xor
add
lcall
pop
hlt
movsb
cmpsb
arpl
in
mov
dec
addr16
jecxz
es
and
test
push
in
pop
sub
outsl
push
clc
imul
and
shlb
sub
and
pusha
jbe
es
inc
and
jl
xlat
fistl
lcall
gs
inc
test
sub
sbb
cs
and
add
jns
fldcw
ds
cltd
add
adc
ljmp
add
jbe
scas
cs
and
xchg
test
popa
imul
out
int3
popa
jle
inc
das
lret
scas
clc
xor
inc
sbb
fidivl
xor
outsl
xchg
mov
ds
and
pop
sti
cmp
inc
xorl
inc
pusha
aad
jo
in
in
mov
outsl
fwait
inc
and
jb
and
sub
js
and
xor
sbb
inc
sbb
jl
and
mov
in
test
cmp
rorl
dec
aas
insb
inc
ja
out
add
xor
add
inc
daa
das
pop
in
hlt
and
mov
and
mov
cli
and
sbb
jle
jbe
sub
subb
jae
jnp
adc
pop
call
insb
scas
idivb
xchg
add
jbe
and
lret
mov
test
inc
jo
loop
and
movsl
and
sahf
xor
popa
jecxz
and
ljmp
jo
inc
insb
arpl
jp
inc
sub
and
fidivl
cmpsl
adc
mov
nop
jno
mov
and
out
mov
inc
outsb
test
and
notl
lret
mov
inc
imul
mov
mov
in
jge
xchg
add
out
mov
mov
dec
mov
insb
xor
popf
and
and
cli
and
jg
sbb
nop
imul
test
mov
sub
mov
mov
mov
push
xchg
out
in
xchg
movsb
inc
add
push
fnstcw
jns
mov
xor
sti
and
sbb
test
jo
pop
xchg
mov
outsl
and
xchg
xchg
mov
out
push
les
js
mov
repz
repnz
and
pushf
stos
divl
sar
dec
or
fldl
pop
notb
mov
arpl
sub
or
pop
dec
sbbl
push
xor
mov
mov
cltd
insb
fldenv
add
xchg
call
and
enter
jbe
jecxz
sub
pop
repnz
jmp
ljmp
inc
fdivrs
or
and
inc
data16
adc
cltd
popa
jbe
aaa
mov
mov
jb
pop
and
and
das
nop
add
loope
add
xor
lea
sub
adc
aam
xchg
addr16
iret
ljmpw
mov
jo
je
cmp
jns
and
call
lock
shl
insl
mov
repnz
pop
mov
mov
xor
je
add
push
mov
icebp
mov
out
sbb
aam
repnz
inc
pushf
roll
or
sub
inc
push
addl
pushl
cmp
mov
add
jbe
add
xchg
mov
insl
movsb
pop
jmp
cli
cmpsb
imul
xchg
add
pop
pop
loope
mov
fisttpl
push
rol
xor
ljmp
mov
repnz
out
pop
icebp
sahf
mov
jmp
data16
sub
mov
loopne
lods
std
xchg
xchg
ret
fwait
test
sbb
and
add
bnd
cmpsl
add
or
xchg
and
xchg
adc
lahf
or
daa
adc
pushf
fs
insl
sbb
cli
pusha
movsb
mov
mov
jne,pn
jnp
mov
push
icebp
dec
cmc
stc
divl
mov
add
mull
xchg
jo
mov
lock
add
mov
adc
outsl
dec
scas
jp
jno
popf
mov
les
cmp
lahf
addr16
je
movsb
cmp
pop
ds
lcall
repnz
cli
mov
in
dec
xchg
lock
dec
ds
js
jno
popf
dec
dec
push
sbb
test
push
mov
xchg
or
adc
sbb
sbb
inc
xchg
scas
xchg
ficomps
push
popf
cwtl
ja
imul
or
mov
sub
mov
sub
je
and
push
out
sub
inc
or
push
pop
mov
adc
push
sbb
xor
sbbb
cmpsl
pop
jl
add
push
adc
inc
out
adc
inc
cmp
mov
aam
add
or
and
test
mov
bound
test
cmp
push
shrl
add
xor
dec
hlt
scas
add
adc
adc
add
or
or
mov
icebp
lods
pop
pop
das
ds
outsb
outsl
xor
gs
les
aam
in
hlt
push
imul
sub
xchg
add
fistpl
rcrl
add
or
sub
push
sbb
sbb
loopne
gs
pop
shl
pop
outsb
pop
fisubl
sub
xchg
adc
ljmp
sub
push
imul
bound
xchg
and
lods
sahf
mov
add
imul
adc
fsubp
addr16
aad
jmp
xchg
adcb
icebp
out
mov
mov
dec
xor
ljmp
jbe
ret
xchg
hlt
xor
add
hlt
xchg
inc
push
or
loop
scas
add
scas
sbb
jns
test
add
or
adc
ljmp
jae
mov
test
stos
mov
ljmp
xor
xchg
xchg
xlat
and
push
dec
jl
test
jno
ljmp
mov
mov
xchg
inc
mov
enter
or
add
add
cli
inc
add
or
xchg
sbb
xchg
jno
loope
adc
lods
or
mov
xor
enter
and
push
daa
clc
pop
sbb
test
les
ljmp
xchg
insl
loope
xchg
xchg
adc
movsb
cmp
xor
cwtl
cmpsb
pop
stc
loop
push
push
hlt
es
dec
jecxz
dec
mov
mov
mov
add
negb
pop
or
xor
ds
mov
push
mov
adc
aam
in
add
or
sti
sbb
pop
sbb
or
pop
sbbb
ja
pop
dec
xchg
push
popa
arpl
repz
pushf
xchg
call
fsqrt
pop
mov
push
mov
repnz
xchg
mov
fcompl
xchg
pop
loopne
adc
inc
scas
je
in
dec
mov
add
or
test
adc
pop
or
push
test
enter
enter
or
add
push
out
mov
lret
or
or
mov
pop
inc
adc
sbb
push
add
jb
add
cmc
rcrb
lods
jecxz
mov
add
mov
mov
pop
xchg
adc
pop
ja
pop
ja
jmp
roll
insl
ss
xchg
in
shr
xchg
adcb
mov
dec
icebp
dec
dec
jecxz
rolb
inc
pop
mov
std
jge
pop
mov
les
aam
in
arpl
add
adc
xor
lcall
add
cmp
jle
repnz
movups
jge
jmp
cmc
daa
outsl
push
scas
pop
out
andb
mov
les
aas
add
fwait
call
mov
push
movsl
sub
and
push
push
push
mov
jg
dec
lret
in
xor
or
or
aas
icebp
imul
cmc
data16
xchg
dec
cld
fs
ljmp
adcl
cli
mov
sbb
dec
jp,pt
mov
inc
pop
test
sbb
mov
in
subl
jge
pop
popa
mov
cwtl
pop
in
adc
pusha
dec
pop
ret
pop
out
pop
test
aam
pusha
icebp
xor
pop
cmp
pop
pop
dec
pop
les
dec
push
mov
mov
jle
mov
cltd
repnz
xchg
enter
jle
imul
xor
cltd
mov
pop
aas
jl
test
jne
mov
mov
test
enter
inc
aam
mov
imul
int3
imul
mov
sub
ret
int3
scas
jge
in
add
outsl
sub
xchg
sub
add
scas
cli
out
daa
xor
fs
sbb
popa
cmc
int
jle
stos
dec
ljmp
rolb
stc
cmp
mov
sbb
rclb
ds
mov
xor
cmp
cmp
aas
ljmp
mov
inc
adc
and
hlt
mov
adc
adc
adc
bound
jmp
or
cmp
addr16
adc
sbb
and
adc
popa
popa
test
jo
mov
sub
xchg
fisubrl
inc
jp
adc
sbb
fwait
mov
cmc
jns
in
les
test
pop
xchg
xor
outsl
imul
jmp
inc
push
jmp
test
repz
gs
mov
and
and
xor
lods
jae
and
inc
dec
pop
push
mov
mov
je
and
fwait
and
add
add
jp
push
or
push
or
or
inc
pop
rcrb
sbb
xor
in
outsl
jp
jecxz
icebp
push
mov
xlat
aam
pop
stc
aas
std
imul
or
loop
ljmp
cwtl
sahf
orl
sbb
add
loope
mov
add
or
mov
icebp
inc
rcl
popf
pop
inc
loope
lret
or
dec
imul
push
jmp
mov
xchg
lcall
mov
out
loop
adc
sbb
sub
push
cmpb
test
pop
lahf
enter
or
mov
faddl
adcb
adc
mov
sub
enter
mov
jecxz
les
and
hlt
mov
adc
adc
adc
adc
arpl
fyl2x
test
cmp
inc
add
dec
test
outsb
adc
arpl
mov
ret
fwait
rcrl
in
hlt
jp
je
cld
loope
movsl
sti
sbb
rorb
adc
add
cmc
xor
or
add
cld
and
scas
sbb
adc
and
xor
lods
loope
es
out
daa
pop
sub
jl
jb
jmp
shr
ljmp
icebp
cmp
push
ljmp
or
xor
shll
adc
push
js
jnp
fisubs
xchg
mov
push
xchg
inc
adc
sbb
cli
and
ljmp
mov
movsb
lds
mov
fsubrs
pop
popa
notl
inc
pop
push
pusha
popa
pop
jno
sbbl
pusha
shll
sbb
cmp
shlb
in
scas
or
inc
stc
ljmp
jae
je
cmpb
sub
cmpsb
or
or
or
xor
inc
or
or
icebp
rep
adc
mov
xchg
daa
int
das
dec
xor
or
cmp
movsl
adcl
and
xchg
adc
push
inc
add
leave
or
jo
mov
out
inc
xor
stos
mov
lock
mov
dec
addb
ljmp
sbb
sub
inc
mov
mov
sbb
add
push
add
dec
icebp
imul
pop
mov
xchg
push
popf
rcrb
insl
cmc
mov
std
or
les
aam
jmp
adc
jae
cli
pop
pusha
mov
adc
mov
and
insl
sbb
aam
sub
cmp
icebp
outsb
cmc
push
fistl
fstl
mov
xor
add
hlt
faddl
aas
adc
push
mov
cmpl
lock
enter
adc
cli
inc
add
bound
jb
sbbb
sbb
addb
sbb
mov
insl
imul
lods
mov
loope
or
adc
leave
pusha
aam
repnz
repz
jae
cmpsl
pop
and
pusha
mov
fs
xchg
aas
push
loope
mov
ds
out
push
cmp
mov
enter
mov
les
orl
icebp
xchg
xor
lfs
add
cmp
mov
aas
les
mov
outsb
pop
sub
adc
das
test
in
inc
iret
movsb
and
loope
pop
in
jmp
cltd
icebp
mov
adcb
adc
and
dec
test
mov
insb
fisubl
and
mov
add
or
sbb
lock
ja
adc
or
dec
adc
fwait
out
cltd
dec
jnp
popf
sbb
sbb
outsb
mov
lcall
enter
ret
loope
ret
add
lcall
mov
loope
shrl
push
add
add
adc
std
ljmp
pop
ljmp
outsl
scas
mov
mov
mov
in
movsb
add
xchg
xor
jmp
lahf
out
insl
popf
xor
jcxz
or
stos
mov
addl
lods
xchg
out
arpl
imul
push
jnp
mov
push
scas
xchg
loope
dec
imul
mov
and
icebp
jo
xchg
mov
ss
outsb
xchg
xchg
das
std
xchg
jg
and
inc
add
mov
sbb
jecxz
xor
and
loope
push
lods
xor
fcoml
jmp
mov
pop
test
cmp
sbbl
cld
sub
add
stos
ret
cmpsb
sbb
dec
imull
sub
mov
hlt
pop
vpaddd
jbe
repnz
cld
mov
sub
fsubs
enter
fptan
push
inc
xor
sbb
bound
sbb
inc
es
out
cmp
cmpl
mov
roll
mov
pop
pop
adc
pusha
xor
jl
dec
bound
xor
pusha
xor
dec
xor
jge
jmp
dec
mov
xor
fs
inc
icebp
xchg
mov
les
pop
jmp
adc
sbb
out
sub
outsl
jp
into
jmp
test
dec
pushf
sub
outsl
mov
cmp
jmp
mov
jo
mov
lcall
sub
dec
xchg
xchg
shll
inc
jecxz
je
loope
sbb
jmp
in
sub
outsl
dec
adc
rcrb
in
dec
xchg
das
jmp
add
sbb
xchg
dec
arpl
mov
hlt
and
mov
insb
movsb
ljmp
faddl
inc
sbb
shr
orl
and
std
adc
adc
adc
mov
loop
mov
flds
fstpt
xor
mov
aam
pop
jmp
or
add
repz
leave
adc
mov
inc
ret
and
in
test
mov
bound
or
ficoml
sbb
push
sbb
cmp
push
lock
sbb
lock
add
and
xor
inc
imul
es
enter
adc
aad
cmp
mov
adc
adc
adc
adc
adc
imul
sbb
sbb
shl
pop
shlb
rcrb
jecxz
xchg
adc
ja
stos
in
clc
rorb
enter
jno
out
test
std
or
or
pop
icebp
and
adc
or
sahf
repnz
andl
pusha
arpl
andb
dec
mov
or
adc
ror
pusha
fdivrl
xor
shr
in
dec
adc
sub
std
cmp
mov
sbb
lods
or
sbb
imul
jae
or
or
or
or
or
or
or
outsl
mov
fwait
adc
jnp
popf
fildll
xor
xchg
xor
xor
pop
xor
jecxz
mov
fsubrl
loope
lods
or
movb
popf
in
mov
sti
mov
mov
pop
jmp
inc
pop
es
dec
sub
loop
adc
inc
inc
mov
mov
insb
clc
aam
adc
sarl
and
out
or
adc
stc
sub
scas
call
mov
mov
lock
sbb
xchg
push
mov
adcb
mov
cld
push
add
adc
adc
or
repnz
cli
adc
adc
sbb
xchg
or
aas
inc
push
fwait
rcll
outsl
xor
pushf
and
cmpsl
adc
mov
adc
ds
mov
sbb
enter
sub
add
negl
adc
adc
or
adc
lret
sbb
sbb
cs
out
imul
xchg
dec
mov
je
adc
lds
dec
test
popa
arpl
in
hlt
xor
adc
sub
scas
push
testl
lock
lock
adcb
pusha
adc
mov
inc
aas
pop
shlb
cmpsl
leave
mov
adc
adc
or
stc
and
xor
sbb
in
push
sti
mov
movsb
ret
xor
ljmp
adc
or
dec
and
dec
scas
cmpsb
sbb
dec
movsl
das
pushf
inc
scas
out
sub
insb
insb
nop
fs
pop
and
pop
aad
ret
mov
sub
in
or
or
add
icebp
ljmp
in
pop
inc
daa
loop
add
sub
pusha
or
xchg
mov
fs
inc
adc
movsl
mov
sbb
inc
jae
les
inc
test
add
jns
adc
mov
fistpl
and
in
cs
mov
pusha
mov
xchg
mov
rcrb
test
and
jb
shrl
rclb
mov
daa
push
jb
test
push
fwait
js
xchg
aaa
mov
fs
ss
imul
pushf
xchg
ja
movsl
das
repnz
and
inc
cmpsl
in
adc
lcall
cwtl
inc
icebp
test
adc
and
dec
imul
in
fstpl
sub
add
dec
pop
jae
mov
mov
ret
mov
jecxz
mov
inc
sbb
or
das
sbb
arpl
xchg
cmp
xor
aam
in
in
int
mov
or
pop
inc
pop
push
push
popa
es
ficompl
shrl
add
mov
or
sub
cmp
aam
aam
xchg
insl
adc
jmp
movsb
jae
repz
jns
loope
cmp
cmc
pop
jg
and
clc
ljmp
jns
dec
xchg
jecxz
repz
pop
dec
inc
and
pop
inc
or
pop
lods
and
rcrb
cmpsb
or
movsb
fs
mov
cmp
pop
mov
and
cmc
pop
stc
pop
xor
cld
fsub
xchg
add
sti
add
das
cmp
xor
sbb
mov
test
add
and
xor
inc
sbb
je
cli
aas
fisubl
aam
jmp
hlt
fldl
and
xor
cmpsl
insb
popa
test
adc
sbb
mov
rcrl
jmp
aam
cmp
pop
add
adc
cmp
cmp
sahf
or
or
icebp
loopne
xchg
cmc
mov
stc
sti
insl
aad
dec
adc
aas
hlt
cmp
pop
adc
fscale
or
pop
add
movsl
pop
fsts
es
clc
xor
aam
or
mov
sub
sub
cli
addr16
mov
and
pusha
jo
inc
lret
sub
and
daa
or
loope
pop
mov
xchg
loope
xchg
cmc
xchg
xchg
stc
outsb
pop
shrl
mull
cmc
add
or
int
ss
subb
and
inc
jmp
mov
daa
xor
pop
adc
rcrl
xchg
ss
test
movb
adc
xchg
xchg
popa
sub
mov
and
icebp
adc
repz
enter
andl
imul
fdivrl
jle
jo
test
mov
aas
xor
hlt
cmpsb
sub
adc
dec
inc
mov
loop
jmp
dec
sbb
addl
bound
pop
cltd
int3
imul
adc
mov
movsb
xor
popf
cmp
jl
dec
les
sub
fcoml
scas
sbb
xchg
mov
cmp
outsl
pushl
or
sarl
xor
sarb
adc
cs
cmpsb
outsl
xlat
stos
xorb
jecxz
push
jg
loop
aaa
inc
ret
jp
xor
sbb
dec
dec
popa
cmpsb
push
subl
enter
or
adc
testl
popa
mov
dec
aas
mov
mov
adc
shrl
bound
outsl
movsb
push
xor
or
imul
cmc
push
or
dec
std
stc
mov
mov
add
pop
roll
inc
xor
jmp
lods
shll
sbb
adc
jmp
mov
jecxz
cltd
loope
mov
addl
cli
dec
imul
outsl
fs
test
xchg
push
and
xor
inc
xchg
fstpl
xor
push
mov
les
test
out
or
or
pop
or
jp
arpl
adc
fnstsw
enter
xor
push
sbb
sbbl
cmp
dec
movsl
in
adc
icebp
add
or
stc
ficompl
mov
test
jmp
dec
dec
sbb
mov
pop
mov
jo
lcall
or
mov
imul
insl
push
sbb
jb
jmp
mov
xchg
mov
cmp
jecxz
stos
jmp
insw
pop
inc
pop
add
aam
adc
sbb
xor
xchg
mov
imul
aaa
jp
and
iret
arpl
dec
icebp
xchg
arpl
enter
mov
or
sub
inc
repz
into
pop
mov
out
mov
xorl
mov
les
sub
std
lods
sbb
xlat
jb
xor
shl
loope
int3
daa
cmp
icebp
add
popf
jp
std
out
testl
push
mov
mov
aam
in
mov
add
test
jb
adc
flds
mov
test
movsb
sbb
popa
jecxz
add
aam
pop
in
jmp
jecxz
dec
dec
push
jge
call
mov
sbb
jns
mov
sahf
add
sub
test
xchg
repnz
rolb
jecxz
jb
sarb
and
test
jns
inc
call
cmp
or
aas
fwait
jg
mov
dec
cmp
outsl
add
mov
push
mov
add
or
xor
mov
dec
inc
dec
mov
ret
arpl
es
loope
dec
push
inc
mov
jmp
jg
in
xor
shlb
and
repz
adc
sub
xor
insl
jae
in
dec
sbb
leave
or
int3
jb
and
mov
xor
sbb
outsb
xchg
xor
fisubl
inc
icebp
cmp
dec
fs
mov
and
aad
xor
in
xor
addr16
sub
push
mov
adc
or
bound
push
adc
mov
arpl
jae
fimull
iret
add
cmp
mov
xor
adc
cltd
addl
rcll
test
in
out
mov
xor
xor
aad
xor
xchg
rcll
aad
sub
fstps
inc
and
lea
mov
dec
push
and
in
scas
icebp
inc
cmc
call
dec
xchg
dec
fwait
outsl
cmp
scas
mov
cwtl
inc
outsb
fisttpl
les
aam
sub
mov
cli
xor
rorb
test
and
add
add
mov
std
cwtl
adc
sarl
xchg
rcrl
or
dec
push
dec
sbb
stos
insl
sbb
jecxz
dec
xor
subl
inc
jecxz
jmp
add
inc
aad
dec
jl
mov
sbb
lcall
add
jg
shll
lock
cmp
nop
adc
lock
rcrl
jl
push
loope
xor
fwait
sbb
cmp
jge
gs
xor
mov
sbb
sbb
insb
xor
sub
mov
push
sub
jbe
sub
xor
ret
mov
lock
in
lods
loop
xchg
test
mov
or
sub
jl
jge
jmp
aad
xor
jo
lea
jl
fimull
inc
mov
mov
jmp
push
sub
cmc
into
pop
push
ds
jbe
sar
lahf
dec
lahf
addr16
mov
jae
xchg
pop
jmp
lods
mov
add
add
test
cmp
data16
es
mull
mov
rcl
xchg
inc
loope
aaa
pop
icebp
jns
xor
cmp
dec
push
push
mov
mov
movsb
xor
mov
movsb
fldcw
cmp
in
repnz
adc
lret
or
or
sub
adc
mov
stos
bound
stos
mov
cmp
movsb
xor
add
adc
add
ja
cmp
add
adc
mov
jnp
inc
dec
mov
lret
sbb
cmp
mov
int3
lods
in
icebp
enter
les
in
inc
insb
sub
les
outsl
in
hlt
ret
add
jae
popf
mov
pop
add
push
or
jmp
mov
jnp
jnp
lahf
sbb
dec
jae
add
sub
pop
sub
sub
rcl
inc
xor
mov
js
xor
push
icebp
mov
mov
add
or
das
sub
cld
push
cltd
jmp
xor
lahf
xor
mov
cmpsb
dec
or
add
sbb
movsl
repnz
xor
sub
out
cltd
sbb
sbb
mov
inc
pop
lcall
popa
in
xchg
mov
aam
dec
pushf
sbb
sbb
orb
test
arpl
insl
pop
call
mov
jg
sbb
aas
inc
mov
sti
aad
sub
inc
jge
inc
pop
rcrl
xor
int3
pop
call
sub
push
cmp
inc
icebp
xchg
ficomps
out
pop
aaa
pusha
out
dec
adc
nop
movsb
sbb
aas
sbb
sub
movsl
dec
jmp
jmp
into
ret
pop
mov
testb
or
popf
int3
lahf
add
xor
gs
adc
ss
lcall
jecxz
xor
aas
lret
arpl
ficompl
mov
pop
cli
jecxz
repz
pop
adc
xor
add
lods
dec
lods
cmp
inc
mov
add
insl
das
sbb
push
loope
adc
pop
roll
or
adc
sbb
sbb
mov
pop
imul
jecxz
ljmp
subb
add
mov
in
pop
pop
dec
andb
adc
adc
inc
outsl
pop
scas
sahf
jmp
inc
cmp
out
cmp
ret
and
loope
xor
lret
pop
hlt
inc
inc
ss
xchg
sbb
lahf
pop
push
jg
ret
fbstp
inc
sti
cmp
rorl
fcoms
sbb
es
mov
xor
adc
lods
jecxz
addr16
or
jae
int3
add
lods
jmp
cmp
jge
mov
jae
xchg
cmp
add
or
xor
bound
inc
fldl
inc
mov
jg
push
add
mov
push
adc
mov
daa
frstpm(287
stc
push
fldl
sub
popa
cmpsb
sub
or
pop
adc
mov
fwait
dec
cltd
mov
loop
xchg
push
es
cmc
mov
xchg
cmp
and
repnz
add
dec
and
cmp
aam
and
shrl
xchg
mov
sub
int3
mov
cmp
inc
sti
sbb
mov
push
stos
add
mov
shll
in
movsb
cmp
xchg
addl
pop
or
inc
call
popa
imul
push
int3
test
jecxz
xor
jmp
sar
nop
jae
xor
scas
fistps
pop
push
sub
adc
cs
test
shlb
call
mov
lcall
jecxz
inc
jo
in
adc
ret
aaa
aas
lret
fstpt
ret
adc
or
xchg
adc
fdivr
clc
scas
fiadds
je
repz
push
test
cmp
jb
addb
popa
or
les
leave
jns
test
fwait
repnz
add
add
mov
lret
sub
outsl
push
scas
fucomi
or
loop
jnp
sarl
test
movsb
lret
or
dec
aam
aad
lret
push
adc
mov
adc
subl
adc
mov
rolb
rorb
loop
repnz
add
adc
and
xor
inc
sbb
arpl
pop
fwait
push
xchg
loope
mov
les
or
pushf
in
clc
pop
adcl
mov
mov
add
xor
push
lock
fmull
add
xchg
call
subb
pusha
in
hlt
in
sbb
jp
mov
xor
pop
dec
popa
repnz
dec
push
adcl
sbb
clc
cmpsb
adc
adc
mov
sub
flds
cmc
sub
or
mov
popa
test
int
cltd
xchg
lock
lock
loope
icebp
pop
push
jecxz
add
in
mov
dec
or
es
outsb
ja
mov
mov
icebp
push
dec
aaa
sub
adc
hlt
add
fwait
and
and
cli
ret
loope
in
or
leave
jmp
lret
insb
adc
jnp
imul
std
xor
les
adc
jns
jg
cmp
or
inc
mov
stos
ds
xor
fbld
push
jae
xchg
xchg
lret
jnp
insl
stc
inc
icebp
cmp
lods
lock
pop
daa
mov
mov
mov
fldl
push
es
je
mov
mov
loop
ljmp
adc
es
push
into
mov
imul
aad
divl
outsb
add
inc
mov
inc
mov
adc
and
xchg
pop
imul
cmpsb
sbb
add
dec
dec
daa
das
mov
pop
aaa
sub
adc
dec
hlt
cmp
les
hlt
mov
insl
aad
mov
pop
add
xchg
popa
pop
loope
jae
xchg
clc
aas
xor
roll
adc
mov
out
push
mov
sub
mov
leave
jge
xor
addl
xchg
cmp
daa
lea
pop
sub
outsl
mov
ljmp
xchg
mov
dec
push
sbb
mov
fs
repnz
das
test
mov
sub
arpl
icebp
aam
call
cli
arpl
push
cmpsb
add
lcall
lock
sub
pop
in
sub
mov
xor
sub
out
daa
ficomps
push
push
push
es
push
cmp
jle
and
mov
pop
movsl
mov
repnz
and
xor
shrb
mov
out
pushf
and
in
int
mov
cmp
lahf
inc
sti
mov
inc
shll
bound
imul
mov
sbb
jne
popf
cld
pushf
jns
jmp
sbb
dec
sbb
sbb
outsl
jnp
xchg
sub
xor
dec
mov
into
cmpsb
lods
jge
or
movl
sbb
adc
xchg
adc
repz
xor
pop
mov
xor
scas
insl
out
test
adc
push
or
sbb
cmc
bnd
call
imul
fwait
adc
add
loope
fwait
fwait
insl
fadds
dec
mov
sbb
jg
loop
jnp
cmp
xchg
add
mov
int3
dec
sub
shll
aaa
cmp
xchg
xchg
sarb
movsb
mov
sbb
xchg
loope
mov
ds
mov
icebp
les
xchg
movsb
xor
in
hlt
in
sub
jns
lret
adc
sbb
lcall
dec
mov
test
les
aam
mov
add
xor
mov
ret
sbb
xlat
shlb
iret
add
bound
cmpb
cmp
mov
add
shll
jno
mov
pushl
mov
fidivrl
mov
popf
ficomps
sti
jnp
movsb
jp
jnp
xor
std
mov
mull
inc
and
lods
insl
sbb
push
push
aam
jg
repnz
test
mov
ret
rcl
imul
fdivrl
dec
dec
loope
subb
inc
mov
lcall
mov
or
xor
call
sti
mov
and
popa
std
jge
popf
xchg
gs
clc
ja
sbb
sub
cmp
add
mov
xor
divb
mov
call
sahf
pop
cmp
sub
and
xor
sub
rcrl
or
dec
in
fimull
sub
sub
mov
sbb
pop
or
in
std
xor
pop
cmp
mov
push
out
and
int3
push
out
enter
popf
mov
scas
jecxz
das
xchg
aaa
jb
jecxz
mov
loop
fnstenv
ljmp
add
add
inc
mov
mov
add
push
dec
cmc
inc
stc
mov
in
and
sbb
inc
xchg
adc
xor
ret
sub
imul
sbb
sbb
push
in
dec
repnz
lds
xchg
insl
fistps
pop
sub
adc
aaa
into
popf
popa
mov
aaa
dec
aaa
ret
movsb
xor
mov
push
out
cmp
xchg
add
mov
scas
mov
movsb
jns
mov
jg
jb
mov
add
repz
das
sbb
lock
lock
call
mov
fidivs
addl
xchg
push
cmc
imul
dec
xchg
xor
xor
je
xchg
popf
jg
mov
adc
dec
adc
mov
dec
jge
icebp
ljmp
movsl
xor
mov
mov
jle
push
in
cmp
nop
adc
add
or
fsubrs
or
dec
data16
sbb
jb
jns
xchg
imul
inc
jo
lods
jne
fwait
mov
sbb
shlb
in
xchg
and
sub
add
sahf
mov
mov
lods
mov
fucomp
std
cmp
aaa
loop
lods
hlt
and
sub
sub
mov
inc
or
dec
push
dec
sti
stc
xchg
fwait
mov
les
ss
cmpsb
jecxz
outsb
ret
xor
lods
sbb
insb
xchg
shll
sarl
les
sbb
mov
mov
adc
pop
or
pop
dec
inc
ja
in
dec
mov
ret
mov
xchg
cmp
popa
loope
in
hlt
pop
cmp
ret
shlb
icebp
push
es
adc
push
push
inc
push
test
pushf
pop
in
ret
daa
addb
or
jg
das
lcall
adc
mov
dec
xchg
and
movsb
popa
dec
cmp
in
inc
cmc
mov
sarl
orb
add
nop
lods
jmp
addr16
pop
and
pop
out
push
mov
adc
adc
mov
call
push
jecxz
ss
pop
inc
or
and
rclb
jb
insl
adc
pop
push
pop
inc
mov
adc
cs
loopne
hlt
imul
add
pop
imul
sahf
mov
jnp
jns
dec
mov
jne
jge
iret
jecxz
pop
fwait
inc
mov
jge
jecxz
mov
mov
sub
jecxz
sbb
mov
sbb
mov
jge
inc
repz
ljmp
lods
inc
mov
mov
sub
xor
cmp
dec
jne
mov
add
or
lcall
aad
test
dec
or
and
cmp
bound
xor
lcall
xor
pop
xor
jecxz
es
ja
push
mov
xor
sbb
leave
cwtl
in
mov
mov
adc
les
dec
mov
loop
icebp
lret
pop
and
pop
push
jmp
dec
enter
jbe
inc
mov
lcall
addr16
and
add
pop
lret
xor
mov
cld
push
ljmp
dec
addb
andb
or
mov
ja
pop
rclb
adc
inc
cmp
sub
ret
fwait
in
shll
xlat
loope
jecxz
jecxz
les
pop
mov
sarb
mov
cmp
cmp
mov
inc
repnz
mov
aas
in
scas
mov
push
dec
add
mov
dec
ljmp
adc
push
jge
inc
sbb
dec
and
mov
sub
push
mov
sbb
cmpl
mov
xchg
mov
adc
and
call
pop
add
pusha
mulb
pusha
mov
pop
pusha
nop
pusha
add
test
sbb
pop
mov
pop
mov
pop
push
pusha
ss
push
dec
jb
inc
mov
stos
imul
mov
sar
adc
mov
or
outsl
mov
movsb
movsb
stc
icebp
sbb
xchg
sahf
jnp
sub
addr16
dec
iret
dec
dec
dec
cmpsb
xor
shrb
inc
inc
addr16
jmp
adc
sahf
sub
pop
mov
mov
in
mov
test
cmpsl
sbb
pop
hlt
inc
jne
in
push
or
cmp
fs
inc
mov
loop
jmp
sub
jecxz
inc
add
xchg
rcrl
jle
imul
dec
mov
sub
lcall
hlt
mov
es
push
sbb
jnp
cli
int3
imul
mov
and
add
add
or
jmp
fldl
xor
add
aam
lahf
xor
frstor
loope
lahf
aas
add
cmp
mov
iret
popa
loope
adc
outsl
xchg
jecxz
ljmp
pop
jmp
inc
repz
mov
addr16
xchg
push
outsl
xchg
repz
pop
divb
jnp
faddl
stos
mov
bound
jecxz
rclb
push
int3
inc
xchg
pop
rorb
repnz
aaa
dec
push
mov
xor
iret
inc
pop
push
jp
jns
pop
cmp
pop
sub
xchg
lahf
or
push
or
adc
xor
jae
and
mov
imul
imul
xor
dec
call
nop
cmp
sub
lock
and
mov
push
jnp
cltd
ret
ja
jnp
popf
bound
ror
xor
rcrl
mov
into
push
push
sti
mov
into
dec
lret
arpl
and
inc
fists
int3
test
cmp
or
or
mov
xchg
mov
sbb
mov
mov
sub
push
jbe
arpl
imul
mov
mov
inc
mov
mov
xor
add
mov
add
mov
stc
imul
pop
arpl
pop
js
repnz
jnp
mov
fsubs
fsubr
push
ljmp
pop
movb
adc
xchg
xchg
sbb
loopne
xor
inc
and
jge
repz
mull
xchg
jl
ret
mov
pop
cmpb
xchg
lods
mov
stos
and
sub
hlt
je
xchg
sub
ret
lods
aad
sub
cmp
adc
lahf
test
pop
adc
sub
shr
mov
pop
xchg
into
push
lret
test
adc
out
mov
or
outsl
insb
cmp
pop
ss
jns
insl
in
rolb
mov
aam
add
aam
les
ja
xor
jecxz
pop
or
dec
jp
push
push
sub
pushf
xchg
shrl
stc
sti
mov
cmp
rcll
sub
pop
subb
fs
imul
ret
cmp
in
es
in
add
xchg
mov
cwtl
imul
dec
call
jecxz
and
ss
in
jne
mov
xchg
lahf
movsl
lahf
mov
lds
in
icebp
popf
add
jnp
xor
in
data16
xchg
test
cmpsl
mov
or
mov
push
jae
popf
aaa
lahf
inc
outsl
push
insl
sub
jecxz
in
mov
stos
adc
pop
and
xlat
dec
test
jne
rorb
xor
imul
shll
lret
sub
aam
or
mov
cltd
xchg
cmp
loope
in
inc
add
sbb
cwtl
daa
mov
mov
sbb
mov
or
in
repnz
out
aaa
inc
loope
aam
mov
xor
test
rcl
aas
mov
mov
ret
xorl
sbb
lret
or
sub
add
add
ljmp
xor
scas
jb
dec
inc
dec
push
int
dec
adc
jg
jb
ret
rorl
in
daa
sbbb
jae
stc
xor
std
xor
push
adc
mov
stos
test
arpl
sbb
jmp
stos
in
sbb
adc
hlt
adc
aad
es
into
sub
jo
xor
and
push
test
fs
movsl
dec
pop
push
cmpsl
lods
incb
les
push
dec
and
sub
dec
nop
add
mov
mov
jecxz
div
imul
push
sub
icebp
repnz
stos
mov
pop
shr
inc
push
test
xchg
fs
or
mov
inc
mov
aam
inc
hlt
mov
mov
testb
lcall
sahf
lret
cwtl
push
xchg
inc
test
aam
ljmp
sub
or
mov
ret
mov
jb
shrl
pop
sub
dec
stos
xor
cld
or
dec
inc
sub
mov
or
idivl
add
mov
xchg
pop
les
or
push
adc
jmp
cs
add
ss
pop
mov
xor
ret
sbb
xor
adc
testl
jnp
xchg
xchg
mov
test
add
sbb
repnz
sub
dec
subb
sahf
mov
jl
fldcw
jnp
or
aaa
pop
in
and
xor
mov
push
imul
xchg
xor
mov
insl
dec
sub
cmc
cmpsb
loop
rorb
jge
sub
mov
pop
aas
shlb
mov
rorl
push
cmpsb
fstpt
push
xlat
adc
ds
sub
xchg
dec
cltd
stos
xor
adc
pop
xchg
jae
jns
sub
js
dec
clc
test
adc
cmp
stos
hlt
fisubrl
cmpsl
adc
pushf
push
test
jp
imul
jecxz
mov
lahf
js
rcll
fisttpl
adc
imul
dec
xchg
xor
adc
or
sbb
cwtl
and
or
jecxz
mov
mov
cltd
jmp
sub
stos
divl
sbb
pop
sub
fmul
and
fyl2x
adc
outsl
in
dec
xchg
xor
xorb
xchg
sub
xor
sub
loop
dec
cltd
xor
mov
enter
and
mov
or
hlt
mov
sub
cmp
add
shrl
adc
movsb
sub
dec
xchg
and
xchg
mov
add
or
or
cmpsb
jl
ret
inc
sub
outsl
shrb
mov
inc
push
test
xchg
xchg
inc
add
sti
jg
in
adc
add
adc
or
pop
aam
pop
nop
dec
or
inc
xchg
add
shrb
enter
sub
dec
bound
xchg
mov
xor
add
add
shrb
rcrb
sub
or
dec
adc
or
enter
out
inc
sbb
jge
call
xchg
imul
loope
outsl
inc
stos
rorb
pop
sbb
xchg
jl
call
cmp
sub
or
repz
jns
pop
fs
dec
pop
test
dec
test
xchg
dec
outsl
and
aas
fidivl
or
xorb
jmp
lods
loop
cmpsl
inc
inc
dec
out
ficompl
dec
dec
movsl
jb
or
push
adc
pop
stos
push
pop
jmp
addb
bound
mov
movsb
popa
pop
dec
mov
stos
inc
xchg
sub
gs
cmp
sti
dec
pop
pop
adc
icebp
in
jns
inc
sahf
mov
imul
lret
aam
fwait
sarl
xor
adc
pop
mov
xchg
xor
mov
cmp
ret
mov
aas
mov
dec
lcall
insl
stos
xor
mov
inc
adc
das
or
jp
in
ljmp
jecxz
addr16
repz
sbb
dec
or
add
sub
jb
sti
push
add
or
adc
push
test
sub
mov
mov
repz
shl
and
lods
cwtl
jb
jne
sti
leave
aad
inc
jbe
mov
mov
pop
adc
pushl
mov
cmc
pop
cmp
cmp
cmp
bound
sub
push
leave
inc
xorl
cmp
jp
or
sub
push
push
push
cmp
mull
addr16
rcll
mov
imul
sbb
sub
lds
outsb
dec
mov
cltd
push
adc
or
adc
loop
adc
xor
add
xchg
cmpsb
imul
ss
xchg
mov
mov
rcl
movsb
mov
sarl
or
stos
pop
mov
dec
repnz
adc
ret
mov
mov
popf
aam
in
adc
adc
mov
sbb
xor
loope
leave
aad
adc
sbb
pop
sbb
jp
add
and
icebp
mov
cli
arpl
lahf
cmpsb
sub
or
mov
ret
jo
imul
fnsave
add
mov
in
in
xor
in
adc
jp
xchg
sarl
jb
or
lcall
add
fildl
addb
xchg
or
ja
add
mov
jecxz
ret
mov
sub
adcl
mov
xor
in
adc
ljmp
cwtl
outsl
arpl
push
sbb
push
ret
dec
mov
test
sbb
adc
push
orl
mov
shl
sbb
je
cmpsb
aad
adc
xor
xor
bound
adc
push
aad
xor
ljmp
and
add
jno
xor
outsb
in
aam
xchg
push
mov
jnp
pop
fwait
cltd
addb
pop
add
mov
inc
or
arpl
xchg
cmp
fcompl
dec
fs
xchg
inc
xchg
jnp
pop
mov
int3
jns
repz
xor
sub
inc
ficoms
mov
sbb
inc
dec
xor
add
push
leave
popf
repz
stos
mov
and
cld
adc
rcrl
pop
dec
xchg
dec
hlt
loop
ljmp
mov
push
xchg
popf
adc
test
xor
icebp
jecxz
lret
xchg
xor
mov
mov
jno
mov
imul
insb
xchg
icebp
sbb
cltd
inc
gs
icebp
and
cmpb
jnp
jecxz
xor
sub
mov
sti
ss
fistpl
push
inc
ret
sbb
pop
xchg
sub
push
add
stos
aam
adc
xchg
mov
aam
adc
inc
jecxz
mov
mov
lcall
je
xchg
imul
and
fistl
sbb
jge
sub
xchg
sbb
push
mov
imul
xchg
insl
shrl
popa
and
sub
adc
repnz
push
lahf
xor
xchg
ret
int3
dec
jno
cmp
push
jae
test
jp
xchg
shrl
in
add
rcrl
xor
xchg
stos
and
adc
mov
cmp
mov
mov
xor
ljmp
mov
and
jno
loope
and
in
xor
cmp
pop
and
inc
adc
mov
sbb
jmp
xchg
push
adc
mov
rep
jb
mov
icebp
cltd
push
shlb
push
cmp
xchg
push
mov
inc
mov
add
frstor
int3
sbb
inc
inc
push
push
adc
int3
or
mov
adc
jae
sarl
adc
cmpl
jb
mov
add
jmp
add
or
or
adc
fs
mov
ret
test
or
mov
and
xor
cmp
imul
shll
das
cltd
xor
jl
xchg
test
sub
movsb
mov
xor
or
xor
jl
adc
mov
jmp
cltd
and
xor
dec
or
arpl
sbb
in
les
loop
sbb
push
sbb
adc
shr
loope
and
add
jb
inc
dec
push
pushf
jecxz
jb
jmp
popa
popf
ret
roll
ja
xor
movsb
add
adc
xchg
inc
jg
sub
xchg
in
int3
jg
ret
adc
mov
pop
ss
outsl
jb
cmp
in
mov
adc
fidivl
mov
xor
les
push
movsb
icebp
jb
fnstenv
or
popa
jg
fcoml
ret
adc
adc
pop
cmpsb
jecxz
or
scas
xorb
repz
stos
mov
jmp
dec
sub
test
xor
les
bound
jl
jmp
cli
push
andb
pop
jl
jl
repnz
sbb
push
add
ret
loop
repnz
dec
aad
cmp
mov
cmp
mov
sub
add
fcmovu
and
outsl
inc
adc
sbb
mul
out
add
cld
sbb
pop
and
dec
inc
adc
pop
shlb
lcall
sbb
push
adc
or
sub
mov
inc
shrl
add
pop
bound
cmp
stos
arpl
popf
xchg
jnp
add
pop
adc
mov
data16
sbb
add
sti
ret
jg
pop
inc
arpl
fcompl
leave
pusha
test
inc
dec
mov
mov
repz
push
mov
repnz
arpl
jno
stc
xor
mov
mov
lods
jno
leave
je
bound
jecxz
mov
ret
jae
xor
ret
jae
and
jmp
mov
stos
fnstenv
aam
mov
xor
jecxz
cmp
xchg
sub
and
xor
xor
dec
je
push
sbb
mov
inc
jb
mov
xchg
sub
mov
add
loop
cltd
arpl
imul
stos
bound
imul
cmp
xor
mov
sbb
dec
add
sahf
xor
push
adc
pop
sub
and
repnz
rcrb
leave
push
int
sub
xchg
sub
sar
jno
subb
mov
xchg
lods
stos
stos
repnz
arpl
ret
jb
icebp
sbb
or
push
jno
rorl
dec
mov
loop
dec
shl
fs
add
ja
inc
je
inc
mov
icebp
ss
jmp
jnp
push
imul
inc
rorb
cmpsl
popa
add
xchg
mov
imul
mov
mov
cmp
mov
popf
inc
jnp
jmp
sbb
jmp
mov
jnp
stos
xchg
and
jecxz
xor
dec
jno
mov
icebp
jmp
sbb
xchg
mov
imul
hlt
je
mov
xchg
popa
mov
inc
mov
inc
movsb
xor
subl
inc
jno
add
inc
ret
adcb
mov
xor
xchg
jecxz
xor
imul
or
icebp
lret
mov
mov
dec
mov
xchg
jmp
lcall
es
fs
mov
sub
inc
cld
jmp
andl
and
sbb
sti
lret
sub
add
and
and
sub
bound
test
fcmovbe
shll
bound
mov
icebp
addb
in
fwait
and
mov
inc
pop
add
inc
test
dec
loope
mov
shr
ffree
xor
outsl
les
push
inc
xchg
icebp
mov
xchg
imul
xor
mov
fwait
imul
mov
sub
inc
ljmp
jecxz
loop
test
dec
sbb
cmpb
add
adc
aaa
inc
inc
jo
in
xor
jb
and
ret
mov
movsb
push
mov
jns
sub
xor
rorb
jae
and
repnz
repz
icebp
and
mov
shll
je
les
jmp
bound
mov
lret
add
inc
or
test
add
outsl
bound
add
adcb
add
fisttpl
xorl
mov
push
loop
sbb
xchg
inc
mov
loope
ret
subb
dec
ret
repnz
jecxz
pop
push
test
inc
add
loop
inc
adcl
je
dec
xchg
adc
xchg
mov
mov
test
mov
shrl
test
mov
mov
xorl
insb
and
dec
in
mov
inc
jmp
xchg
jl
cmpb
dec
sti
ret
mov
outsl
jnp
in
push
mov
dec
xchg
sub
xor
inc
dec
shrl
je
imul
mov
rcll
jnp
dec
jb
mov
jg
dec
mov
shrl
dec
dec
add
or
adc
jnp
popf
xchg
imul
xchg
xor
popa
ret
jge
sub
add
movsb
dec
movsb
dec
fwait
inc
sub
add
mov
aaa
mov
adc
imul
sbbb
add
add
mov
aaa
mov
adc
jnp
jns
sub
mov
inc
jnp
cmpsb
cmp
mov
roll
dec
loop
mov
inc
in
mov
jecxz
jb
inc
jns
sub
les
push
inc
es
shrl
aad
xor
ret
jnp
jns
sub
add
inc
xor
inc
xchg
es
ror
shll
mov
bound
in
add
inc
mov
sub
jecxz
sbb
xchg
aam
add
repnz
mov
add
xor
mov
in
in
sub
jb
insl
and
ret
pop
arpl
add
xor
adc
mov
add
mov
imul
mov
mov
imul
stc
sbb
popa
popf
rol
insb
mov
es
jecxz
inc
stos
test
test
mov
shll
bound
xchg
mov
mov
dec
ror
or
lret
adc
mov
imul
and
and
mov
ret
mov
adc
inc
and
mov
xchg
mov
xchg
xor
sbb
lods
lods
fnsave
pushf
add
push
sbb
adc
in
fwait
jns
stos
xchg
bound
fwait
sub
imul
out
push
cld
int3
mov
test
push
add
add
jg
sub
loop
imul
and
pop
icebp
jns
inc
add
push
imul
insb
repnz
cld
adcl
outsl
popa
dec
addl
mov
bound
icebp
ret
and
sbb
pusha
leave
push
add
jecxz
roll
inc
mov
mov
lods
cmp
clc
loopne
mov
in
roll
push
jecxz
inc
xchg
jns
mov
addr16
adc
jae
lods
jecxz
mov
rcrl
mov
add
dec
adc
aam
call
mov
sbb
out
out
test
add
in
inc
dec
jecxz
or
mov
movsb
dec
inc
jg
fwait
rcll
fisttpl
adc
dec
jae
push
and
mov
push
pop
sbb
adc
ljmp
adc
pop
fstpt
dec
mov
out
loop
jecxz
add
inc
ret
popa
lcall
enter
and
jno
add
inc
push
or
pop
orl
loop
in
adc
mov
sti
mov
adc
jns
jecxz
inc
add
dec
inc
push
adc
rcll
xchg
push
outsb
sbb
sub
ret
int
lcall
jl
andl
inc
adc
mov
mov
arpl
and
addr16
rcrl
xchg
and
add
mov
popa
sbb
dec
cli
and
xchg
ret
sbb
bound
xor
sub
sbb
pop
jecxz
lret
lods
ret
inc
adc
xor
lods
jp
xor
shr
mov
test
adc
push
fldl
push
xor
sbb
cltd
xor
ljmp
lods
stos
mov
or
cmp
stos
or
leave
ss
inc
xchg
test
mov
mov
inc
jb
or
loop
cmp
mov
in
pop
mov
addr16
or
repz
sarl
adc
xchg
outsl
adc
inc
mov
push
adc
mov
inc
inc
or
repz
scas
cli
mov
addr16
mov
mov
dec
loop
stc
shrl
imul
loope
inc
aad
mov
mov
dec
rcl
adc
test
shll
addr16
into
shl
xchg
addr16
xor
pop
movsb
jmp
mov
addr16
mov
mov
repz
popf
fs
mov
aad
addr16
lcall
test
imul
mov
mov
jmp
or
mov
mov
leave
inc
jns
xchg
les
or
cmp
les
mov
mov
rcrl
mov
jmp
les
pop
in
pop
test
xor
xor
pop
hlt
hlt
or
mov
inc
xor
aam
dec
inc
xchg
adc
fdivrl
push
inc
je
paddsb
jmp
flds
mov
inc
repz
mov
fildl
in
pop
jno
sahf
adc
cmp
ss
push
lret
repz
rol
aam
inc
mov
fmul
xchg
push
xchg
push
les
arpl
ret
enter
mov
dec
repz
shlb
pop
bound
in
or
stc
dec
ret
add
jecxz
jecxz
mov
lds
outsl
xchg
inc
stos
inc
mov
xor
movsb
xchg
addr16
repnz
adc
gs
call
mov
mov
movsb
arpl
addl
and
aam
test
mov
fiadds
xor
mov
sub
arpl
mov
ret
jp
aam
push
or
adc
mov
pop
jb
ret
shlb
push
fwait
mov
adc
add
sub
mov
inc
jae
sti
ffree
xor
movsb
in
hlt
mov
pop
xchg
inc
push
xor
sbb
add
movsb
aam
mov
xor
je
xor
icebp
add
imul
add
mov
imul
xchg
insb
insl
xor
jno
dec
mov
shl
lret
mov
mov
andl
mov
mov
orb
sub
mov
je
dec
adc
sub
mov
push
icebp
jb
xchg
xor
subl
je
bound
and
xor
movsb
or
sub
pop
xor
cltd
roll
pop
mov
sub
inc
lret
cmp
bound
or
add
fstl
cmp
in
inc
xchg
je
inc
insb
sbb
dec
bound
add
add
cmp
xor
jb
xchg
mov
shrb
repnz
sbb
outsl
mov
icebp
xlat
test
jecxz
sarl
push
sub
xchg
enter
mov
mov
lret
adc
and
arpl
sbb
xor
ret
mov
jo
add
xor
xchg
push
xor
push
inc
rcll
inc
xchg
or
imul
imul
movsb
addb
pop
push
push
jecxz
mov
mov
sub
je
jns
sub
loop
mov
sbb
adc
dec
xor
icebp
jb
sti
push
popf
adc
sbb
fcomi
mov
insb
mov
xchg
push
mov
push
xchg
cmpsb
arpl
shlb
in
rcl
xchg
aaa
imul
xchg
adc
xor
movsb
je
lods
mov
add
jecxz
push
sti
arpl
int3
icebp
inc
adc
repnz
xor
add
or
aam
movb
int
mov
pop
xor
shl
sbb
mov
push
sbb
shll
roll
subl
loop
jno
ljmp
jae
jmp
test
sbb
mov
mov
jecxz
xchg
push
test
xor
and
pop
ret
xor
adc
push
dec
sbb
fs
inc
xchg
sub
add
jb
xchg
arpl
or
fnstenv
outsl
je
and
mov
rorl
jb
lods
mov
xchg
repnz
push
jno
xchg
xor
aam
dec
mov
sti
xor
or
mov
shrl
mov
popa
or
xchg
lock
in
xorl
jnp
popa
inc
or
mov
inc
shrb
jmp
pop
push
inc
or
stc
lock
insl
add
or
mov
or
stos
icebp
mov
into
gs
test
or
fwait
in
xor
add
inc
dec
push
je
pushf
aam
arpl
jb
rcl
dec
fnsave
adc
std
arpl
and
and
jmp
movsb
icebp
ljmp
and
jecxz
jb
push
ret
mov
mov
bound
sbbl
jb
cli
test
inc
les
jmp
adc
jb
ret
dec
add
add
dec
mov
out
cmp
add
jg
jmp
ss
jmp
fnstenv
mov
push
adc
jb
hlt
jp
mov
pusha
mov
int3
jne
mov
inc
mov
cld
inc
shlb
ljmp
cmp
jb
repnz
and
xchg
bound
mov
mov
mov
sbb
sub
adc
mov
sub
sti
popf
je
xchg
dec
inc
inc
mov
add
rcrl
dec
bnd
xor
add
xchg
inc
movsb
inc
mov
and
xchg
inc
push
icebp
loop
jg
fcmovbe
mov
popf
push
outsl
test
cli
push
imul
mov
in
aam
cli
fstpt
mov
movsb
jb
repz
jae
movsb
adc
inc
fdivrp
fstpt
mov
sar
xchg
mov
pop
jb
xorb
test
or
mov
adc
jae
add
aad
mov
xchg
sarl
mov
fs
adc
xor
aam
popa
mov
subl
mov
sbb
xchg
andl
sub
mov
out
pop
mov
sbb
cmpl
mov
loop
popa
std
lret
mov
add
movb
mov
inc
push
xorb
sub
adc
ret
push
sub
jnp
xchg
and
jne
insl
loope
jp
mov
xchg
mov
mov
dec
sbb
adc
push
jp
xchg
xchg
jg
pop
jmp
inc
adc
jb
in
ret
in
push
test
sbb
add
mov
inc
xchg
insl
in
and
add
rcll
mov
mov
dec
and
inc
test
sarl
add
and
cmp
dec
cmp
mov
ret
cmovne
fs
xor
adc
mov
jnp
sub
cld
lret
xchg
cmpl
cmp
mov
xor
and
xchg
xchg
or
xor
push
jecxz
dec
movsb
push
mov
sbb
inc
pop
mov
gs
sbb
data16
cmp
adc
dec
mov
adc
repnz
xchg
repnz
rclb
adc
xchg
add
or
ret
add
and
xor
mov
leave
into
vcvtpd2dqx
imul
daa
mov
sti
or
and
sbb
inc
jg
dec
or
adc
mov
loop
inc
add
add
mov
insb
add
mov
xchg
pop
add
push
or
dec
dec
push
sub
outsl
ret
inc
enter
mov
jmp
mov
aaa
test
mov
pop
inc
sub
in
xor
xchg
add
xor
roll
push
repz
mov
jnp
jae
mov
stos
inc
flds
mov
stos
mov
xor
icebp
dec
and
add
sahf
jno
sbb
inc
sub
xchg
insb
ret
arpl
sub
adc
ja
add
lods
mov
fdivrl
or
rcrl
jnp
sbb
push
imul
out
movsb
adc
inc
mov
add
mov
and
ret
inc
movsb
fs
jecxz
loop
les
rclb
rcrl
push
rcrl
jns
mov
stos
lret
jno
xor
add
enter
insb
mov
or
xchg
dec
int3
rcl
test
imul
mov
jno
mov
dec
into
cmp
cmp
testl
hlt
sbb
push
fmul
out
fistpll
lret
pop
mov
fistpll
mov
dec
jae
pop
inc
hlt
sub
adc
imul
hlt
sbb
inc
or
mov
mov
les
ret
mov
jp
mov
je
gs
aam
dec
and
xor
int3
mov
and
aam
imul
insb
aam
dec
sti
xor
hlt
jecxz
mov
add
icebp
sub
sbb
adc
insl
mov
lret
sbb
lock
dec
adc
jnp
mov
jmp
pop
call
iret
jns
sarl
imul
ljmp
fstps
fstps
or
dec
inc
dec
fnstenv
in
or
lods
pop
pop
insb
sub
cmp
je
enter
inc
xchg
inc
ret
popf
arpl
sbb
mov
xchg
ret
mov
arpl
clc
lcall
cmpsl
push
or
inc
or
jge
mov
or
ret
adc
fcomps
call
add
dec
lret
mov
lcall
jmp
push
push
mov
mov
push
xor
ret
sbb
add
pop
mov
cltd
jo
mov
jnp
mov
cmpsl
lcall
add
push
mov
outsb
fwait
icebp
xorl
stc
dec
push
cmp
and
or
or
stos
popa
lcall
sbb
repnz
adc
mov
adc
jl
mov
mov
adc
sub
outsl
les
mov
cmp
inc
cs
pop
cmpsl
rcrl
inc
mov
mov
or
jno
push
cmc
cmp
xchg
or
ret
insb
arpl
jae
fidivrs
in
mov
cmpsl
jecxz
inc
lret
fidivrs
in
mov
insb
in
push
mov
cmp
and
add
mov
fidivrs
in
rorl
outsl
out
fidivs
ret
push
outsl
test
mov
lret
icebp
stc
lret
icebp
loope
icebp
ror
cmc
rcll
jo
or
mov
adc
aaa
sub
arpl
dec
push
mov
or
pop
cmpsl
cmp
inc
and
dec
pop
cld
cld
pop
call
into
xor
add
outsl
shrl
pop
stos
adc
cmpsl
cld
or
adc
mov
pop
dec
mov
sbb
cmc
adc
jns
in
jb
pop
fidivrs
in
xor
jnp
jmp
mov
pop
jmp
dec
push
mov
adc
mov
adc
scas
adc
add
repz
scas
jecxz
cmpsl
rorl
xchg
sbb
ret
xchg
pop
stos
mov
inc
jnp
jae
mov
int3
mov
shrl
mov
adc
pop
mov
push
and
lahf
adc
insl
mov
inc
push
jg
mov
dec
scas
xor
stos
fs
mov
mov
lret
roll
mov
mov
jbe
mov
adc
gs
hlt
leave
inc
rcll
jae
decl
out
xlat
cmp
decl
out
mov
mov
imul
dec
pop
adc
mov
ret
popa
xchg
mov
jb
pop
mov
inc
xchg
mov
and
lret
fnstcw
mov
adc
jnp
mov
sarl
lret
sahf
cmp
mov
sahf
mov
icebp
inc
je
pop
add
jns
xor
and
or
in
hlt
pop
call
add
in
movsb
or
and
or
icebp
or
add
mov
lret
dec
push
jge
in
xchg
sbb
popa
xlat
cmp
or
cs
mov
addr16
cltd
jnp
fiaddl
mov
cmpl
inc
flds
mov
fildll
pop
fsubrl
int3
sub
push
mov
adc
sahf
dec
xchg
aad
test
push
adc
dec
cld
jecxz
call
sbb
pop
clc
lret
sbb
mov
dec
cld
or
rcr
idivl
jp
bound
jg
sbb
mov
adc
sahf
mov
shl
sahf
test
dec
repz
adc
or
popa
insb
outsb
sbb
inc
fistpll
ja
sub
sbb
mov
jle
add
adc
mov
aam
inc
in
cmpl
jg
cmpl
imul
stos
push
mov
xor
ja
loope
sarb
bound
sbbl
and
xor
pop
test
les
lods
xchg
loop
xchg
lret
mov
loop
divl
idivl
imull
subb
dec
and
push
pop
ret
pop
ljmp
mov
mov
pop
jle
push
jle
dec
jle
inc
jle
cmp
or
add
lods
hlt
cmp
imul
adc
mov
push
xchg
mov
stos
pushf
pop
insl
xchg
inc
mov
jg
mov
xor
aam
fwait
xchg
mov
in
movsb
inc
adc
repz
cmp
jp
mov
insb
shrl
out
leave
dec
arpl
cmp
pop
inc
push
movsb
pop
repnz
iret
test
cmc
dec
loopne
cmp
cmc
sub
cmc
sbb
cmc
or
imul
nop
lret
int3
mov
fwait
mov
xchg
lods
xor
adc
cli
xchg
insl
and
jge
inc
ret
pop
mov
test
add
aaa
dec
lods
xor
mov
scas
movsb
dec
mov
dec
scas
jl
mov
inc
jecxz
sbb
adc
test
aam
rcr
ss
fnstcw
mov
mov
or
aam
mov
cwtl
mov
cwtl
stc
xchg
jg
cmp
lds
push
push
jb
sti
mov
imul
jg
cmp
sub
push
xchg
jp
mov
inc
mov
push
xor
rcrb
aam
mov
int
jp
dec
xor
jno
mov
shrl
int3
sbb
mov
shll
jge
mov
adc
xchg
jmp
pushf
sub
in
mov
test
push
dec
xchg
jno
fs
adc
and
lods
sbb
loop
add
inc
inc
and
sbb
push
jecxz
sbb
test
mov
and
subl
loope
sub
xchg
mov
push
lods
add
cmp
enter
sbb
popa
test
inc
fldl
inc
mov
inc
iret
test
jbe
sub
iret
test
icebp
popa
jecxz
xorb
sbb
inc
inc
cs
xor
add
imul
rcrb
enter
loop
inc
inc
shrl
ret
ret
mov
aam
xchg
popa
jno
bound
imul
inc
mov
inc
lret
inc
jl
inc
jecxz
cli
movsb
sbb
fldt
dec
arpl
cmpsb
jp
shrl
leave
addb
or
dec
bound
mov
popa
wbinvd
popa
frstor
jnp
fnstcw
enter
cld
adc
push
in
pushf
jmp
or
jmp
jns
pop
or
dec
loop
loop
lcall
aam
in
hlt
cli
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
or
sbb
sbb
fstps
or
cmp
push
jp
mov
add
inc
sti
lcall
dec
add
mov
sbb
insb
mov
jmp
ljmp
aad
lcall
sub
roll
cmc
jl
dec
xchg
jmp
movsl
mov
dec
adc
dec
mov
repnz
aas
sbb
pusha
jl
shrb
scas
mov
loop
pop
rol
pop
stos
jmp
mov
and
loopne
sub
add
aaa
inc
mov
ret
xchg
jo
in
test
loope
lds
cs
movsl
dec
adc
push
or
andb
les
enter
out
cmp
inc
mov
std
jge
in
add
cmp
fmull
or
and
and
add
adc
dec
call
xchg
add
add
inc
loopew
inc
inc
push
xor
into
fildll
pop
xchg
cmpsb
imul
cmpsb
shlb
into
fisttpll
cld
or
jecxz
and
add
rcl
sbb
dec
cmp
cld
xchg
push
push
sub
add
repnz
popa
movsb
test
sbb
fnstsw
adc
subb
pop
xor
imul
imul
leave
sub
pop
in
outsb
icebp
jnp
imul
rcrb
mov
or
insl
lods
loopne
mov
jb
insl
mov
sbb
xor
mov
rcrl
sub
sbb
cmp
loopne
jmp
adc
outsl
mov
mov
fstpl
test
jbe
ljmp
jmp
aaa
mov
ljmp
fs
call
sub
clc
es
movsl
jp
jb
add
lcall
dec
mov
adc
dec
out
xor
mov
dec
xchg
jg
add
pop
mov
mov
jmp
or
cwtl
xor
stos
fadds
jge
sbb
icebp
jb
in
cli
sbb
mov
scas
in
push
in
push
dec
push
push
ljmp
pop
std
jp
or
jecxz
sbb
jl
mov
fildl
mov
mov
or
sbb
adc
cmc
iret
pop
rolb
push
push
xor
faddl
lock
inc
jmp
daa
jb
adc
insb
add
push
mov
jmp
repnz
add
pop
std
icebp
into
pop
mov
sub
cmc
ficomps
aam
push
add
jecxz
mov
imul
repnz
inc
cltd
or
stos
and
push
add
fldcw
mov
sub
in
add
mov
inc
stc
ja
push
sub
aam
add
add
or
les
adc
pop
pop
cmp
lahf
sbb
ficomps
jmp
fwait
add
sbb
cmpsb
or
lods
xor
sbb
test
fisubl
loope
daa
mov
ja
in
ja
je
addr16
or
push
in
sahf
xor
mov
inc
insl
sub
mov
loop
push
xchg
sarl
and
iret
pop
repnz
jle
sub
sub
jmp
sbb
orb
adc
cld
or
int3
fistpl
cltd
pop
push
pop
jg
sbb
jno
mov
mov
gs
fstpl
add
mov
lcall
pop
add
mul
jmp
cli
push
jb
fdivl
sti
mov
inc
icebp
arpl
mov
xlat
jp
imul
mov
or
sub
imull
push
xor
inc
xor
xor
repz
stos
push
mov
arpl
insl
mov
lds
mov
sub
movsb
popa
jmp
sbb
inc
adc
push
add
fldcw
inc
jmp
mov
fisttpl
ret
aad
fldcw
add
dec
dec
mov
out
outsl
dec
sub
in
jle
adc
mov
pushf
test
push
jo
add
fdecstp
sub
push
xchg
aaa
sub
mov
jns
dec
add
sbb
roll
dec
rorl
add
mov
pop
les
aam
aad
sbb
inc
insl
sahf
pop
inc
dec
outsl
test
dec
push
jecxz
push
dec
daa
sub
stos
adc
test
push
movsb
and
inc
inc
pushf
or
lcall
out
jg
shrl
cmp
jg
or
sbb
hlt
sbb
fstps
adc
das
hlt
jp
icebp
scas
xorb
cmpsl
mov
loop
js
in
mov
aas
lods
pop
inc
xor
jno
roll
sub
test
popf
and
mov
imul
xchg
dec
je
jno
shll
loope
in
lahf
andb
stc
std
dec
jne
insb
inc
and
scas
xor
sbb
inc
cmp
add
out
inc
mov
in
cmp
push
mov
inc
sbb
mov
add
add
add
loopne
xchg
sbb
mov
lret
xchg
cltd
mov
dec
xchg
icebp
xor
pop
int3
inc
aam
adc
enter
or
xchg
shll
adc
add
dec
push
clc
mov
adc
xchg
mov
and
adc
xchg
repnz
mov
cmpsl
imul
or
shrl
or
lcall
pop
ja
scas
mov
stos
mov
inc
sub
test
push
or
loopne
ret
add
jge
in
sbb
or
ds
jno
insb
inc
shll
pusha
inc
cmp
pop
adc
jge
sahf
es
pushf
sarl
cmc
or
xor
rcrl
mov
pop
mov
sbb
clc
dec
pop
cmp
mov
mov
or
xchg
lcall
popf
add
in
sub
mov
lahf
mov
jns
pop
jecxz
pusha
pop
pop
mov
fdiv
test
sar
aad
sbb
imul
xchg
add
cmp
cmp
lods
sub
add
sti
fucom
adcb
movsb
add
cmp
std
inc
decl
ljmp
imul
sbb
in
ss
imul
dec
adc
xchg
js
lcall
add
daa
mov
jl
xchg
mov
enter
imul
dec
call
sbb
xor
loopne
sub
xor
add
dec
and
adc
aam
rorl
push
stc
mov
jecxz
icebp
mov
les
bound
adc
mov
addr16
imul
fidivl
ret
and
and
cmp
mov
sarl
popa
mov
and
mov
push
mov
lds
cmp
inc
arpl
and
jmp
ljmp
fs
cld
pop
je
ss
ljmp
je
int
popa
les
mov
fdivl
out
sbb
xlat
repnz
cmp
sbb
outsb
or
and
dec
pop
shlb
dec
repz
inc
push
outsl
in
add
loope
jg
lcall
aam
sbb
mov
ret
cmc
scas
fisubl
jae
jns
cmovne
icebp
add
dec
or
mov
push
or
xor
jecxz
mulb
inc
sub
les
stc
xor
sub
or
or
adc
adc
dec
out
addr16
pop
pop
loope
and
mov
in
add
lret
adc
or
adc
jecxz
jae
inc
inc
leave
loope
push
test
addr16
fsub
mov
lods
repnz
inc
stc
test
mov
ja
stc
aas
or
jle,pt
dec
push
mov
or
cmpsb
sbb
mov
cltd
jmp
jns
sbb
jge
test
dec
mov
fimull
mov
es
imul
cld
pop
adcl
lahf
pop
sub
ljmp
adc
repnz
and
mov
adc
or
add
and
adc
mov
enter
sbb
addl
mov
cmp
jecxz
xchg
or
mov
pop
mov
push
cltd
aaa
ljmp
faddl
das
loop
push
xor
add
jnp
rcll
daa
mov
cmp
subl
mov
insl
push
rorb
idivl
movsb
dec
icebp
jno
in
mov
sbb
hlt
das
test
mov
inc
popa
lahf
int3
outsl
mov
dec
mov
add
and
in
jmp
arpl
aad
es
sbb
and
jl
mov
sarb
leave
inc
cmp
mov
lret
loop
adc
xchg
and
loope
arpl
adc
shrl
adc
pop
jg
popf
xor
test
adc
add
inc
aas
pop
dec
test
and
jecxz
dec
mov
lahf
orb
sub
jne
xchg
pusha
adc
rolb
mov
test
cs
mov
cmp
jbe
xchg
add
jecxz
inc
push
repnz
push
push
xchg
insl
xchg
inc
cmp
mov
in
mov
incl
mov
aas
adc
fnstsw
jns
sub
std
adc
xor
jmp
dec
adc
sbb
fcmovu
jecxz
mov
sub
es
fs
shl
inc
ficoml
mov
inc
push
inc
pop
cmpsb
add
sarl
jge
jnp
fisubs
lret
pop
popa
mov
push
repz
loope
xor
lock
bound
sahf
cmpsl
aam
inc
mov
xlat
or
mov
xor
les
xor
in
jge
jmp
fistpll
inc
mov
mov
andl
sub
xor
sbb
dec
adc
ret
jno
and
call
mov
les
sub
mov
cmc
icebp
jns
mov
mov
call
jecxz
or
adc
das
jp
stos
lret
imul
lcall
xchg
jns
fs
mov
sub
dec
cmp
cmp
mov
mov
loop
mov
imul
or
jp
cmp
cmc
sbb
xchg
les
loope
shrb
les
inc
ret
dec
xchg
aas
leave
push
dec
test
jle
imul
jecxz
sub
xor
loope
cmp
mov
fidivl
lret
rol
mov
jl
xor
imul
test
ret
rcrl
xlat
jns
repz
jmp
pop
cmc
mov
aas
loop
stc
fisubrl
adc
insl
sub
xchg
sub
ljmp
test
dec
ljmp
mov
pop
fwait
aam
js
pop
mov
jl
inc
lret
inc
jae
orb
dec
ljmp
jae
mov
fnstenv
or
jmp
cltd
dec
push
push
add
or
xchg
insl
outsb
xor
hlt
mov
mov
loope
imul
aas
popa
sbb
or
adc
enter
xchg
pop
sbb
arpl
push
inc
mov
imul
sbb
testl
jge
aaa
sahf
mov
mov
jl
mov
adc
fnsave
and
sbb
adc
lret
std
adc
repz
jmp
cld
xor
aad
and
repnz
add
dec
sub
xor
jmp
imul
or
adc
add
rclb
lret
inc
xchg
xlat
xchg
sub
inc
cmc
inc
and
mov
adc
negl
push
jle
fisttpl
shrb
and
repnz
aad
adc
jge
adc
shl
add
cmp
bound
add
das
mov
jg
inc
cld
inc
mov
in
ret
icebp
movsl
jns
dec
loope
add
sub
push
sub
xor
push
fldt
cli
insl
dec
jb
push
add
mov
add
inc
lret
imul
imul
xor
arpl
sbbl
or
xor
dec
mov
fisubl
mov
notl
sub
jmp
fs
xchg
ret
mov
shll
sbb
stc
shll
and
sub
in
adc
xchg
je
mov
pop
lahf
and
icebp
mov
jno
std
cmp
add
dec
and
or
inc
cld
aam
cmp
pop
push
mov
loope
pop
inc
repnz
adc
outsb
fimuls
ljmp
mov
jmp
out
rorl
or
cli
pop
outsl
or
in
repnz
imul
sub
subb
cmpsb
cmp
mov
mov
insl
das
xor
sub
lcall
int3
fisubs
loop
and
and
jmp
aad
cli
jmp
repnz
cli
fmull
cmp
lcall
and
add
arpl
add
xor
pop
in
outsl
dec
dec
fsubp
mov
es
pop
sbb
xor
push
and
dec
daa
mov
adc
scas
add
inc
scas
call
mov
inc
xchg
mull
shl
lahf
jmp
sub
xor
inc
mov
out
stc
jo
or
cmp
lahf
loop
arpl
std
in
mov
cld
jmp
mov
movsl
sbb
clc
xlat
jmp
push
push
push
xor
inc
lret
mov
or
sub
or
push
push
fs
or
sub
fldcw
sub
inc
add
roll
std
cmpsl
xchg
scas
icebp
call
sub
mov
xor
or
cmp
imul
inc
mov
test
or
jno
jmp
sub
into
jecxz
les
or
test
add
or
mov
mov
adc
rolb
sub
inc
mov
mov
ds
jmp
xor
pop
cmc
leave
movsb
and
in
aam
xchg
add
xchg
xchg
add
jb
loope
sbbb
rcll
mov
les
sbb
rorl
cmp
add
fsubs
or
mov
inc
lahf
out
xor
fs
inc
cwtl
inc
imul
sbb
xchg
push
mov
divl
lods
mov
movl
xchg
aaa
or
dec
rcl
movsb
lods
icebp
mov
inc
cmc
jmp
xchg
dec
add
add
jno
inc
or
inc
xchg
add
mov
subb
daa
push
popa
and
jmp
add
lods
dec
mov
bound
or
arpl
dec
push
fs
std
jb
mov
adc
loopne
or
mov
cmc
aam
mov
popf
sbb
subl
mov
and
in
out
xorl
cmc
inc
ret
mov
pop
xor
popa
sub
mov
insb
test
and
mov
dec
repnz
and
add
mov
sub
movsb
dec
add
inc
lret
test
mov
mov
mov
insl
add
fistl
mov
sbb
addl
pop
imul
rcrl
inc
ret
fstpl
imul
mov
jb
scas
sub
jecxz
ret
les
add
lods
repnz
in
and
inc
sub
div
pop
jns
dec
or
test
rcr
arpl
jl
adc
pop
rorl
std
pusha
xor
adc
cld
xchg
push
fwait
or
cli
iret
inc
in
movsl
dec
fstl
addr16
gs
in
xchg
icebp
xchg
fstps
leave
cmp
mov
sbb
adcb
mov
pushw
hlt
inc
mov
in
aad
or
inc
lcall
pop
cmc
cmpsl
sub
int3
std
ljmp
xor
les
sub
lods
cwtl
mov
or
push
add
jp
adc
mov
popa
sub
loope
push
sbb
push
repz
push
sbb
shll
ja
dec
sub
ret
jno
fsubrl
std
and
add
movsl
dec
or
pop
add
je
jns
dec
jecxz
mov
and
pop
jmp
icebp
lahf
cmovne
fs
les
add
xchg
fsubrs
jecxz
xlat
mov
xchg
xor
adc
loop
cs
movsb
aam
adc
xchg
mov
pop
testl
fs
mov
inc
and
xor
lret
sbb
mov
or
mull
cs
and
and
xchg
ret
stc
pusha
pushf
mov
xor
clc
inc
clc
mov
movsbw
bt
shrd
xchg
bt
mov
bswap
mov
dec
bts
btc
mov
rcl
mov
mov
shl
pusha
xor
lea
xchg
lods
ror
ror
add
shr
not
not
shl
sub
neg
dec
dec
cmc
pusha
jmp
fistpll
scas
fistpl
inc
test
out
mov
lds
jle
mov
scas
imul
hlt
je
sub
adcl
push
lods
repnz
test
incb
lds
jmp
mov
xchg
repz
outsb
ja
push
ret
pop
out
lods
cmp
xor
rcrb
add
sbb
out
addr16
pushf
call
or
lods
fistpl
lds
sub
add
inc
insl
insl
outsl
insb
xor
mov
lahf
sti
cld
decl
push
cmp
fidivrs
cmp
xchg
in
aas
xor
repnz
and
sahf
inc
cld
inc
call
je
popf
jle
pop
call
movsl
test
js
xchg
add
movsl
scas
sub
sbb
popf
sbb
call
mul
push
mov
sbb
adc
jb
scas
and
fistpl
sbb
icebp
mov
push
ljmp
dec
or
dec
bound
cmp
lcall
rsqrtps
imul
jbe
aas
ret
ficoml
push
jge
sub
pop
lods
mov
add
jno
les
mov
ja
jo
jb
sub
stos
mov
dec
and
in
rcrl
pop
test
insb
or
lcall
mov
and
test
mov
jge
add
in
mov
ljmp
push
and
push
cmp
stc
pop
loop
test
or
lock
sub
fadds
dec
adc
push
stc
push
mov
loope
jnp
jo
in
sbb
sub
repnz
mov
out
inc
inc
and
xor
in
or
jl
adc
in
adc
add
mov
call
sbb
dec
xchg
xchg
fdivrl
lea
rorl
jg
sbb
add
lods
out
cmp
sti
bound
aam
inc
test
aas
pop
jbe
push
cli
push
adc
adc
in
mov
iret
subb
addr16
sub
sub
popf
fwait
xlat
cli
dec
xchg
adc
sbb
aas
push
fsub
cmp
pop
shr
das
mov
scas
cltd
push
std
pop
and
lds
repnz
test
dec
sbb
push
pop
mov
js
and
sahf
inc
and
stc
pop
fistpll
and
pop
push
and
adc
lods
notb
cwtl
sub
pop
cmp
mov
fistpl
and
mov
cmp
inc
std
push
and
pushf
mov
jae
and
mov
test
jo
inc
das
xchg
add
add
or
pop
aas
mov
ret
dec
or
or
jnp
fcmovbe
cmp
cwtl
jmp
sti
insl
push
dec
es
roll
push
or
cs
mov
pushf
fcompl
adc
insb
lods
mov
or
mov
loope
outsl
ja
fwait
mov
push
lds
sub
inc
test
jl
xor
jle
mov
fwait
stos
pop
or
js
imul
adc
add
dec
rorb
call
xchg
cmc
in
mov
out
ret
pushf
mov
jne
rorl
clc
sar
mov
shl
rcr
btc
mov
pushf
movb
xor
clc
repnz
call
faddl
push
xor
or
outsl
out
stos
sbb
test
inc
out
push
cmpsb
roll
mov
pop
mov
in
gs
adcl
push
mov
leave
cmp
or
cmp
xchg
jnp
mov
jmp
sbb
bswap
bsr
mov
inc
mov
ror
sar
mov
clc
pusha
pusha
sub
push
pushf
stc
push
repnz
pushf
call
fsubrl
jmp
mov
mov
rcr
or
es
dec
xor
out
pop
or
sbb
cmp
imul
push
test
mov
ds
pop
mov
sbb
lret
dec
or
push
shlb
insb
jl
sub
test
mov
ds
packssdw
push
mov
divl
pop
imul
cmp
fistpl
test
fcomps
icebp
insb
scas
ljmp
add
out
stc
mov
xlat
scas
xchg
or
cs
mov
loop
les
pop
iret
ror
sub
dec
test
jnp
mov
pop
xchg
push
nop
push
insl
mov
nopl
pop
mov
cwtl
and
cli
dec
mov
jl
push
mov
pusha
xor
cld
ret
stos
dec
out
mov
imul
fistpl
in
rorl
push
pop
es
shrb
outsb
and
xchg
xchg
cmpsb
iret
xlat
aad
or
inc
leave
nop
jno
dec
add
outsb
xor
xor
movsl
push
cwtl
add
or
or
mov
int
xchg
jl
repz
xor
push
iret
stos
inc
and
pop
sarl
movsl
imul
mov
leave
and
out
std
repnz
push
mov
insb
fcoml
or
cmpsl
fistpl
pop
xchg
test
and
dec
fdivp
ds
jb
sbb
cltd
loop
in
cmp
les
xchg
cmp
popa
push
sbb
adc
movsb
out
lds
lds
add
daa
cs
arpl
jo
cmp
cli
jmp
pop
stos
pushf
mov
jecxz
push
mov
stc
fidivrl
iret
fiadds
mov
lds
mov
cwtl
push
lea
pop
jmp
std
loopne
test
pushf
cltd
fistpll
shrb
pop
and
fimuls
hlt
in
jb
push
outsl
lahf
andb
std
ja
mov
inc
adc
bound
cmp
ficoml
xor
jl
pop
lea
sbb
les
jp
loop
cmp
orb
cmp
fists
outsl
pushf
adc
xchg
jae
ss
dec
shrb
adc
fadds
adc
movzbl
mov
pusha
movw
mov
pusha
mov
pusha
mov
pushf
pushl
ret
sahf
lret
dec
cmpsl
fistpl
repz
cmpsl
nop
fimull
lret
repz
test
xor
stos
add
clc
sub
shl
lret
cwtl
lret
pop
adc
inc
mov
pusha
in
xchg
jmp
cmp
fcomi
inc
mov
daa
mov
jns
mov
leave
mov
movsb
push
jecxz
mov
nop
clc
jns
lods
sbbb
fwait
jnp
rcrl
negl
pusha
and
mov
push
sarb
fstpt
inc
pop
jle
push
les
pushf
cmp
repnz
aam
test
cmc
test
neg
pusha
pushl
pusha
dec
bt
bt
xor
call
mov
lea
jne
xor
btc
add
xchg
mov
cmp
call
lea
jae
pushf
lea
jne
pushf
push
pushf
pusha
stos
pushf
movb
pushl
pushf
lea
jmp
cmpsl
xchg
call
pop
subl
mov
inc
inc
mov
out
hlt
pusha
cmpsb
repnz
dec
popf
xlat
or
sarl
xchg
adc
sbb
pop
xor
mov
or
xchg
push
sub
pop
dec
sub
imul
or
test
fs
fisubs
iret
mov
test
lcall
and
ds
negl
movsb
sti
test
or
inc
cld
cmc
cmp
xlat
movsl
mov
lret
aas
push
sbb
mov
maxps
and
lcall
daa
sub
call
pop
and
and
ret
int3
and
cld
int3
adc
adc
cmp
push
push
ret
xchg
lea
stos
xor
cmp
and
sbb
sub
jnp
scas
int3
sub
jb
test
popf
add
iret
sub
icebp
cmp
xor
loop
pop
lahf
xor
pushf
scas
testb
fcmovnbe
xor
push
mov
nop
pop
push
out
mov
outsb
lahf
stos
sub
mov
mov
jo
inc
lcall
loopne
cmp
rclb
adc
mov
bound
call
les
sbbl
sbb
les
inc
sbb
pop
mov
pusha
mov
out
ret
sbb
jo
cltd
and
jle
inc
aaa
aas
cmp
fistpl
sub
dec
das
fwait
in
in
mov
out
stc
and
cli
xchg
dec
xor
mov
fnsave
dec
jmp
stos
or
sub
in
shll
outsl
inc
xchg
daa
dec
shr
xor
jne
into
dec
int
inc
inc
das
mov
mov
cmc
fdivl
es
sub
sub
add
dec
cli
xor
rorl
pusha
loopne
jecxz
dec
dec
inc
scas
xchg
repnz
fsubrp
inc
aam
repnz
icebp
movsb
fistpl
pushf
loope
and
xchg
lock
fdiv
roll
push
or
out
mov
mov
or
outsb
adc
jns
adc
in
jl
inc
popf
insl
jno
or
decl
push
fs
pop
pop
in
jb
inc
xchg
mov
push
test
mov
scas
mov
xchg
jnp
adc
outsl
jle
lock
cmp
push
mov
lcall
cmp
fistpll
mov
dec
dec
sub
fistpl
lahf
jl
push
aaa
xor
xchg
mull
push
jns
cmp
adc
sbb
dec
cmpsb
mov
arpl
out
rcrl
push
push
lret
jns
or
movsb
shlb
xchg
adc
mov
sbb
pop
fwait
pop
out
dec
xchg
or
push
repz
in
mov
xor
ljmp
test
dec
lods
cmp
xchg
jns
and
lret
shlb
push
ds
fidivrl
push
pop
pop
inc
push
popf
loop
lea
xor
mov
cli
inc
xchg
adcl
lea
push
mov
pop
rorb
or
add
lret
pop
pushf
cltd
mov
arpl
adc
roll
sbb
dec
cli
inc
mov
push
push
lock
push
or
cmp
inc
adc
mov
jg
ss
dec
mov
dec
sub
pushf
orl
mov
push
stos
mov
mov
shlb
pushf
cltd
decb
inc
push
repnz
mov
in
pop
sahf
insl
in
cmp
dec
rcrb
jp
and
sub
dec
mov
out
and
sbb
sub
daa
gs
pusha
or
ret
dec
xorl
jmp
mov
inc
jnp
les
in
push
dec
fstp
mov
sub
js
loop
pop
iret
scas
loopne
mov
outsl
into
sub
imul
pop
nop
mov
inc
mov
sub
test
add
pushf
pusha
mov
pusha
mov
mov
jmp
mov
push
movw
call
lea
jne
pushf
mov
pushl
shrd
btr
shld
sub
jmp
adc
xchg
test
cld
jg
or
cmpsl
mov
and
int3
cmp
jae
pop
cmp
outsb
addl
enter
jg
xchg
jmp
stos
mov
sub
inc
leave
mov
gs
sub
dec
iret
js
adc
js
test
repnz
inc
sarb
cmovns
mov
imul
push
ficoms
push
adc
mov
inc
sbb
inc
lret
lods
mov
out
dec
push
xchg
je
outsb
push
push
rcll
sub
scas
xchg
jbe
popf
or
jecxz
push
clc
xlat
push
dec
shll
sbb
and
subl
roll
sbb
clc
xor
jmp
andl
push
sub
cmp
fistpl
mov
sub
jns
stos
pop
lock
cwtl
jae
popf
push
or
mov
push
cmp
into
into
pop
rol
and
pop
sti
jle
add
push
cltd
push
fisubrs
imul
mov
rcrb
push
outsb
das
xor
push
popf
addr16
adc
cmpb
mov
dec
jmp
xchg
enter
aaa
lds
dec
push
cmp
movsl
sub
hlt
shrl
xchg
js
mov
jle
and
orl
fistpll
pushf
test
in
dec
dec
test
or
cmp
jge
out
fs
xchg
mov
lret
mov
scas
jg
aam
push
sbb
fisubl
dec
iret
mov
mov
and
imul
jp
pop
and
jp
sub
out
ja
cmp
xlat
sbb
in
loopne
xchg
sti
fs
pushf
test
shr
pop
and
sbb
pusha
pop
push
xor
sbb
pop
mov
stos
cld
add
mov
inc
and
cld
call
decl
inc
inc
push
push
xor
cs
insb
add
test
add
add
bsr
movzbw
sub
pushf
bswap
shr
xor
test
mov
neg
add
rcr
cmp
bt
rol
add
lea
or
mov
bts
sub
mov
clc
shr
clc
pusha
pusha
bt
cmp
push
lea
je
call
arpl
mov
loopne
jns
lret
popf
lcall
sbb
lods
clc
dec
hlt
in
stos
stos
add
enter
imul
jle
ljmp
mov
scas
dec
cli
or
push
cmpsb
xchg
push
jns
xor
jecxz
sub
mov
fs
jne
ret
pop
insl
lods
dec
dec
jnp
mov
ret
cmp
sbb
ret
stos
cmp
jns
shrl
notb
xor
push
faddl
xlat
cmpsl
xlat
pop
jg
lahf
js
fistpl
fcomp
inc
mov
push
sbb
ljmp
aad
cmc
jmp
xor
scas
jns
jbe
push
std
dec
dec
xlat
mov
cmp
dec
push
pop
ret
stos
fwait
sub
jns
ja
or
insl
js
fistl
hlt
xchg
push
cld
int3
or
mov
sahf
mov
adc
jne
in
inc
addl
shll
xchg
sbb
xchg
ret
rorl
jne
xor
pop
out
push
and
pushf
and
push
and
aaa
fsubl
ja
adc
mov
mov
and
xor
pop
fsubrs
push
fildl
adcb
addb
inc
enter
cli
mov
xor
sub
mov
cmp
push
lcall
add
push
cwtl
inc
cli
fsubs
jecxz
pop
mov
cmp
or
out
lcall
dec
adc
stos
pop
and
mov
xor
and
loope
mov
inc
xchg
dec
jno
mov
addr16
mov
cwtl
cwtl
das
nop
loopne
bound
int3
dec
in
fadd
mov
sahf
jge
rolb
cmp
sub
pop
lahf
sub
pushf
sub
add
fisubrs
das
cld
inc
mov
out
cmpsl
popa
xor
dec
sub
push
loop
mov
wrmsr
cmp
jmp
mov
sub
add
sbb
pop
sub
in
cs
cmp
xchg
movsb
movsl
mov
test
mov
mov
ret
push
xor
andl
dec
movsb
inc
mov
adc
and
sub
out
aad
fists
fistpl
lods
in
imul
loop
xchg
inc
mul
ja
jle
out
fdivrs
and
cmp
fwait
mov
and
lret
mov
pop
jo
jle
outsb
cmc
inc
fsubrs
inc
mov
adc
aaa
pop
adc
or
mov
cmp
daa
outsl
lret
lods
mov
shrb
ss
fildll
lods
daa
dec
sahf
sbb
out
in
fldt
jge
mov
aad
int
push
in
into
test
das
fwait
mov
fwait
es
pop
jb
pushf
push
cmc
cmpb
movb
lea
jne
bts
mov
test
pusha
add
stc
pushf
pushf
mov
movzwl
sar
sar
mov
movb
movl
push
clc
add
cmc
push
cmp
mov
pushf
cmc
jmp
call
movsbw
call
in
mov
pop
sbb
sub
or
roll
aas
testb
les
mov
popa
dec
lahf
aam
mov
fstl
fdivr
xor
imul
or
shrl
cmpsb
test
cwtl
jmp
mov
sub
xor
jo
stos
pop
std
xchg
jne
jge
fimuls
push
mov
pop
stc
jmp
mov
lea
mov
xchg
jns
shll
mov
mov
pop
xor
ja
cmp
insb
cmc
cmp
outsb
imul
je
outsl
outsb
and
jb
jb
and
dec
into
lcall
inc
adc
icebp
loopne
test
jnp
popf
sub
in
ds
xor
imul
push
or
jp
testb
testb
outsb
fbld
cmp
lahf
data16
cmc
lret
cmp
jecxz
dec
subb
fistpl
outsl
aam
and
das
cs
pushf
popa
mov
cmp
add
sbb
cmp
mov
inc
mov
lods
sbb
daa
div
inc
xlat
mov
js
testl
xchg
cmp
dec
gs
loop
mov
ds
std
inc
inc
int3
dec
fxch
dec
stos
je
mov
fnstcw
cmpsb
sbb
cmp
inc
inc
loope
push
push
lea
bswap
pusha
movzwl
lea
jmp
mov
loope
fistpl
in
jecxz
stos
jno
mov
mov
mov
rorb
push
mov
es
and
out
dec
mov
and
xor
push
cwtl
arpl
mov
ja
lcall
add
jp
mov
push
xchg
jns
rolb
insl
cmp
aad
hlt
push
hlt
add
mov
jnp
mov
mov
mov
in
in
in
sbb
stos
mul
cmp
and
pop
inc
sbb
aaa
sub
ss
mov
aad
fistpl
pushf
fwait
xorl
sbb
es
inc
pop
pop
pop
loop
cltd
push
cmp
or
sbb
aas
sub
outsb
pop
mov
push
jl
push
sbb
sbb
test
scas
sub
dec
in
cmc
mov
mov
stc
cmpsl
mov
cwtl
push
or
cli
addr16
adc
mov
sub
imul
xorl
push
imul
push
scas
outsl
mov
add
pop
cwtl
fistpl
sbb
rcll
jg
sbb
add
push
sbb
shlb
add
push
shll
dec
data16
jo
call
mov
dec
mov
push
inc
fcom
movsl
push
push
lods
cmp
push
lcall
stos
or
dec
cwtl
fistpl
cmp
jne
inc
repz
mov
mov
push
ja
imul
movsl
mov
int
and
dec
mov
jg
and
in
push
mov
xchg
mov
ds
jno
mov
loopne
and
pop
mov
imull
xor
repnz
push
rol
push
xchg
je
test
outsb
lret
hlt
insl
stc
std
or
inc
test
xchg
and
sbb
imul
pop
mov
add
adcl
addr16
dec
movsb
scas
push
dec
dec
imul
int
ret
scas
stc
xor
jns
inc
and
cmp
sub
jge
movsb
or
wrmsr
ds
xchg
cmp
push
mov
add
add
js
stos
or
les
ljmp
fs
jne
cmp
sub
adc
test
mov
pusha
pusha
bt
cmp
or
pushf
pushl
lea
je
jmp
push
ret
mov
inc
inc
mov
and
ret
xchg
aam
loopne
cmp
fsubl
adc
add
xchg
push
mov
adc
test
sub
sbb
and
bound
movsb
sub
adc
scas
sbb
cmp
popf
in
xchg
xchg
faddl
lods
out
cmp
add
jg
sarb
mov
add
inc
cmpsl
ret
mov
inc
sbb
adc
or
loopne
mov
aas
mov
or
xor
fdiv
ljmp
jo
pushf
pushf
call
pushf
mov
lea
je
xor
jmp
jo
cmp
sti
aad
fwait
adc
pop
inc
lods
js
vpshaw
scas
movsl
mov
adc
jle
mov
inc
lods
jl
inc
inc
out
lahf
xor
push
jp
cmp
mov
aad
cld
fdivp
out
loop
inc
std
enter
cmpb
cltd
and
testb
sub
fcom
icebp
lret
cmpsl
in
dec
setne
mov
pusha
jge
filds
or
popf
xorl
pop
int3
mov
cld
out
jnp
mov
js
dec
mov
bsr
cmp
or
and
mov
pushl
xor
pusha
push
bt
repnz
push
lea
jne
btr
neg
pushf
pop
mov
btr
or
adc
movzbw
sub
pusha
shrd
lea
clc
call
pushl
mov
pushf
mov
lea
call
call
sahf
xchg
out
fistpl
xor
add
je
sbb
xor
mov
cli
fucom
sub
ficomps
jne
pop
outsb
lods
and
add
sbb
mov
scas
xor
pop
test
movsb
dec
cli
sub
insb
bound
imul
cmp
push
imul
push
mov
push
push
cltd
fs
pop
and
xor
inc
movsb
cli
mov
rcrl
jne
rcl
mov
call
lea
ja
pushf
pushf
push
lea
jb
jae
test
push
cmpb
mov
pushl
movw
lea
jne
test
mov
stc
clc
cmp
add
test
pusha
test
movzwl
jmp
mov
addr16
or
ss
pop
cmpsb
adc
jbe
add
sub
mov
test
dec
sbb
orl
rorl
mov
mov
push
xchg
bound
lret
out
out
les
sbb
push
rol
inc
dec
xor
and
or
aaa
lret
or
xchg
outsl
jns
fidivrl
movsl
or
nop
xchg
fistpl
cli
sti
in
xor
nop
frstor
or
mov
iret
mov
mov
add
jb
aam
fadds
pushf
cmc
or
cmpl
pop
bound
xchg
xchg
mov
xchg
enter
mov
shrl
xor
mov
mov
out
leave
sub
cmp
mov
inc
xchg
movsl
call
movb
movl
pushl
pushl
call
lea
jb
test
pushf
cmp
pusha
push
call
cmp
bound
jmp
shll
xorb
xchg
dec
adc
es
xchg
in
inc
xchg
jecxz
xor
lds
repz
pushf
xchg
movsb
xchg
pushf
addb
rorb
shr
dec
repz
stc
xchg
jns
loope
or
pop
xchg
popa
std
xchg
mov
rorl
int
popa
xchg
jb
inc
ss
xchg
mov
adc
inc
int
aaa
sbb
jo
fs
push
jl
push
shrb
lds
adc
aad
pop
jg
xor
cmpsb
sarb
aam
ss
fistpl
pop
sbb
inc
xchg
hlt
cmpsl
mov
mov
inc
sbb
pop
gs
pop
scas
sbb
mov
lret
cmp
mov
leave
mov
jl
xchg
xchg
mov
mov
adc
push
in
lds
cmpsb
xor
push
js
dec
push
stos
cmp
cs
mov
in
in
add
dec
pop
xor
lods
add
sbb
push
mov
xor
sahf
stc
ret
or
mov
add
setbe
clc
cmc
bt
mov
lea
rcl
call
add
xchg
fistpl
push
repnz
or
shlb
addr16
pop
pop
mov
jnp
sbb
aas
shrl
push
lret
divb
mov
push
arpl
xchg
shrb
hlt
lea
daa
and
jp
and
outsl
mov
les
cmp
inc
push
pop
cmp
stos
jl
int3
inc
mov
push
sbb
sub
mov
call
pushf
push
add
clc
jmp
lea
ja
dec
shl
sar
neg
add
cmc
rol
shl
mov
ja
pusha
bt
test
cmp
pushf
lea
jb
clc
push
call
int
fstl
fisubrs
stos
cli
out
cmp
lcall
int3
push
sbb
jle
pop
sbb
sbb
insl
jmp
sub
add
push
jp
push
mov
popa
out
fsts
lds
andl
icebp
ret
mov
xacquire
scas
out
iret
imul
mov
aaa
ds
out
rol
xchg
mov
push
xor
fwait
outsw
aaa
xchg
dec
jp
nop
fistpl
jg
jne
cmp
movsl
lret
push
xor
repz
cmpsl
mov
mov
and
mov
movsl
sub
xchg
jb
rolb
outsb
into
movsb
aas
ljmp
push
inc
pusha
sahf
cmp
test
or
loop
mov
stos
inc
orl
es
mov
fistpl
jle
aam
xchg
jo
mov
in
xchg
addr16
sbb
xchg
adc
mov
mov
fisttps
fwait
xchg
int
ficoms
cmc
das
xchg
inc
cmp
popf
test
shrb
mov
subb
and
out
mov
mov
and
or
mov
loop
pop
mov
decb
add
and
mov
stos
and
outsb
cmp
pusha
pop
adc
inc
and
inc
jno
lock
push
movw
movw
lea
jmp
lea
jbe
push
not
mov
or
stc
movsbl
rcr
add
bt
push
pusha
mov
xor
rcr
movl
add
sbb
rcr
pop
movl
bswap
mov
add
test
push
clc
cmp
push
lea
jbe
movsbl
cmc
call
cmp
pop
pusha
lea
lea
call
icebp
ficomps
fbld
pusha
out
lret
jmp
cltd
mov
sarb
pop
les
hlt
pop
fcmove
inc
div
mov
stc
pop
lea
sub
aam
adc
je
mov
adc
mov
push
push
pop
mov
into
arpl
xor
aaa
mov
cmp
in
jns
inc
mov
mov
pop
clc
push
xchg
repz
cmpsb
push
mov
push
fadds
shlb
jne
xlat
into
add
or
mov
inc
movsl
and
inc
mov
pop
pmaxsw
mov
inc
and
fistpl
dec
mov
cmc
push
stos
sbb
popa
dec
jmp
sbb
lret
hlt
xchg
loop
leave
jl
lret
loop
pop
fwait
sahf
stc
push
shlb
cmp
pushl
push
and
pop
or
push
or
jbe
dec
xchg
add
xor
mov
jbe
shlb
leave
jo
hlt
movsl
sbb
scas
mov
imul
sbb
and
push
out
iret
sbb
push
sub
pop
test
in
mov
pop
or
cli
lock
les
add
mov
in
cmp
jl
pop
sahf
and
and
pop
movsl
mov
out
mov
enter
out
pop
gs
mov
fistps
pop
jl
jg
loopne
pusha
roll
inc
mov
and
mov
xchg
jne
pop
lret
pop
add
in
mov
leave
gs
stc
lret
sbb
dec
stos
mov
xor
inc
cmpsb
cmp
inc
sub
xchg
pop
aad
inc
cltd
and
inc
iret
mov
lcall
inc
sbb
les
adc
imul
jl
test
insb
repz
or
fistpl
lds
jp
cmp
xchg
cmp
test
sbb
popa
faddl
rclb
jmp
xchg
sbb
push
adc
add
and
lds
fmulp
jp
js
and
jo
push
xlat
pop
mov
lock
cmc
test
sub
or
xor
mov
pop
sbb
cmc
lahf
pusha
pop
or
jo
nop
mov
and
xchg
push
fwait
cmc
lret
popf
jae
jns
and
mov
test
dec
add
add
pushf
popf
fnstsw
ret
hlt
jns
xor
cltd
mov
jecxz
imul
mov
loope
mov
cs
xor
andl
jo
cmp
mov
push
cwtl
mov
mov
xchg
out
mov
mov
push
subl
cmp
iret
pop
repnz
lods
mov
mov
cmp
sub
loopne
loope
call
into
in
cltd
mov
inc
cmp
dec
push
and
push
js
aas
sub
adc
out
cmp
mov
xchg
test
adc
into
cwtl
mov
xlat
mov
push
shrb
aaa
dec
outsb
jmp
inc
aad
jecxz
rcrb
add
sub
xchg
cmp
mov
dec
mov
sbb
dec
mov
dec
push
push
or
test
movsb
fsubrs
shrb
adc
aam
xorl
imul
push
outsb
jge
push
into
imul
mov
push
je
push
push
add
mov
shlb
jl
shlb
hlt
dec
xor
mov
mov
stos
nop
dec
dec
adcl
call
dec
add
mov
pushf
and
and
js
mov
lods
jbe
mov
cs
jno
add
maxps
mov
mov
repnz
fcompl
mov
jmp
or
ret
xlat
insb
outsb
push
lret
int3
fabs
jle
jae
orl
cmpsb
scas
or
and
out
inc
loop
decb
push
fcmovnb
loopne
call
into
fwait
jl
fistpl
xlat
inc
push
add
pop
fcomps
mov
or
stc
mov
rorl
loope
sub
call
jo
lcall
mov
jae
cmp
mov
pusha
and
in
fistpl
cmp
es
loope
push
inc
push
rcrl
dec
pusha
fucom
mov
clc
mov
pushf
stos
out
and
pop
out
aad
das
insl
pop
es
jae
xor
mov
xchg
add
es
gs
stos
jo
cmp
xchg
das
pop
sbb
adc
sub
movsl
or
arpl
imul
add
lods
out
mov
fwait
stc
dec
mov
sbb
imul
daa
div
sbb
in
ja
inc
and
inc
inc
mov
pushf
jmp
cmp
mov
pushf
int
mov
leave
daa
std
inc
mov
dec
ja
loope
ljmp
les
cwtl
jge
xor
mov
cs
push
push
mov
iret
ljmp
repnz
mov
mov
pop
cs
sub
loopne
mov
movl
movw
mov
pushf
push
pushl
ret
xor
outsl
mov
cmpsl
mov
fcompl
repnz
jne
sbb
imul
dec
jp
adc
xor
fs
mov
shrb
and
xchg
push
inc
push
test
sbb
mov
jmp
sbb
push
mov
in
cmc
adc
movsb
cmpsb
lods
xchg
mov
movsl
cmp
inc
push
jge
mov
or
mov
pop
outsl
pop
nop
cwtl
and
lea
xchg
pushf
mov
sbb
pop
out
xor
inc
sbb
lea
jne
fldl
cmpb
sub
adc
and
mov
xchg
ss
mov
pushf
push
outsb
shll
pop
xlat
push
loope
popa
dec
pop
fwait
jecxz
divb
or
sarl
cmp
sub
dec
mov
sub
mov
das
mov
sbb
lea
jae
push
bt
clc
cmp
call
call
pop
aam
mov
pushf
adc
adc
popf
sti
push
inc
sub
xchg
std
mov
sub
sbb
int3
mov
popf
dec
sbb
dec
ja
lret
add
mov
and
ljmp
pop
jg
jo
xlat
cmp
sbb
insb
ljmp
pushf
pop
ja
enter
inc
add
das
pop
mov
sub
add
ds
sahf
out
int
cwtl
jns
push
and
push
clc
mov
hlt
addr16
fistpl
xor
pop
mov
sbb
ret
in
andl
outsl
adc
sub
inc
nop
mov
or
cmp
jmp
dec
mov
mov
xor
int
cmpsb
mov
xchg
mov
fstpl
sti
cli
ret
and
inc
sbb
lcall
sbb
or
jg
cmc
sub
aaa
xor
and
jmp
out
inc
cltd
adc
push
dec
orl
xchg
pushf
gs
loope
nop
xchg
popa
enter
jge
sub
cmpsb
xchg
inc
push
enter
mov
ds
jmp
nop
rol
ret
outsl
pop
adc
push
xchg
cmpsb
ds
movsl
fwait
cwtl
insl
fnstenv
fnstcw
in
fcomps
and
xchg
xchg
decb
fs
and
xor
jno
test
or
pusha
lea
jmp
jmp
sub
pusha
rep
bswap
mov
mov
pushl
mov
mov
lea
jmp
shr
jmp
cmp
dec
stos
or
mov
push
lret
lods
inc
pop
mov
cmp
sbb
cmp
mov
scas
outsb
icebp
pushl
push
test
mov
enter
les
stos
cld
in
mov
mov
daa
mov
aas
fmuls
push
cmp
test
in
mov
cmp
xchg
dec
mov
lock
iret
das
add
fistpl
ret
sbb
xor
outsb
insl
dec
and
outsb
pushf
rcll
enter
leave
scas
cs
add
das
cmpl
icebp
testl
cmc
pop
stos
mov
movsl
decl
mov
mov
inc
mov
iret
enter
xchg
cmpsl
sbb
mov
dec
aam
adc
negb
mov
aaa
inc
xor
pop
or
jmp
mov
and
cmc
jecxz
push
stos
jge
mov
jg
sbb
inc
out
pop
mov
loop
pop
inc
sbb
pop
cmc
rcll
mov
movsl
push
sbb
lret
rolb
lods
stos
or
inc
mov
stos
and
je
xchg
push
or
xorb
sub
stc
jl
iret
roll
pop
add
inc
mov
jmp
test
push
cmp
nop
xchg
sub
jae
push
mov
push
inc
test
mov
and
ret
add
inc
movsb
cmpsb
repnz
cmp
call
and
inc
ret
jl
xor
in
pop
adc
push
xor
outsb
mov
jne
mov
ljmp
mulb
mov
push
and
cmpsb
push
add
shl
out
and
push
mov
xor
pop
pusha
push
mov
aad
mov
hlt
push
lret
xchg
or
fstps
test
cwtl
and
int3
das
xchg
pop
push
das
and
inc
add
neg
xor
in
dec
mov
inc
test
stc
jmp
push
lea
jne
mov
not
inc
mov
stc
pusha
add
pushf
pushf
cmp
movzwl
lea
call
sub
pushf
pop
iret
nop
jne
das
jno
and
out
fcomps
push
add
xlat
or
and
inc
push
into
mov
leave
jecxz
xchg
test
jg
movsb
mov
shlb
and
jbe
mov
lret
fsubrl
sbb
jp
rcrb
outsl
dec
insb
out
sub
fwait
les
stc
mov
out
inc
aas
inc
mov
in
jge
mov
adc
daa
les
pop
stc
stc
add
sti
or
daa
daa
cmp
cmc
fwait
gs
cmp
sub
insl
gs
mov
stos
sbb
mov
js
iret
fadd
sbb
fistpl
leave
push
or
sahf
pop
adc
adc
fldl
insl
jns
daa
das
jp
push
std
jb
mov
movsb
mov
into
ds
sbb
mov
xor
dec
mov
ret
push
inc
mov
fs
jno
push
sbb
popf
lret
jmp
cmp
shlb
mov
sahf
ss
pop
inc
and
gs
ret
in
adc
enter
ret
add
into
enter
cmp
arpl
push
insb
jb
dec
sbb
pusha
rcrl
loop
and
stos
mov
jns
jg
aam
repnz
das
scas
popf
mov
repnz
pushf
faddp
jge
stos
popf
out
xchg
sbb
cmp
xchg
add
mov
fdiv
push
xor
in
testb
jecxz
bound
hlt
sbb
sub
into
incb
cmp
lds
add
inc
mov
loopne
outsl
incl
jb
addb
dec
inc
mov
jo
decl
cwtl
inc
xchg
loop
add
mov
in
mov
loope
or
aam
sub
fwait
loop
movsb
cmp
lock
jl
mov
popl
je
jb
add
mov
push
sub
loop
sbb
cmp
loop
cmp
push
jle
sbb
mov
jbe
cmp
hlt
inc
int
data16
add
xchg
mov
jecxz
cs
shll
stos
das
inc
jns
jecxz
test
lret
lahf
pop
and
cmp
es
cmp
mov
adc
push
fisubrl
jbe
jnp
aam
push
das
sub
cs
sbb
fwait
decl
xchg
icebp
std
daa
in
mulb
cmp
lods
jp
jl
and
mov
push
ret
test
xor
push
insl
lret
mov
xchg
inc
jge
int
cli
shrl
arpl
aam
dec
push
xor
sub
shll
popa
inc
ss
push
cmp
inc
sbb
mov
in
xor
lock
roll
xchg
adc
nop
repnz
outsb
pop
les
xor
xchg
add
pop
pop
mov
ret
cltd
and
and
push
movsl
mov
icebp
and
loope
iret
push
adc
outsb
cld
sub
mov
and
rorl
jb
ja
cmpsl
in
enter
gs
sub
add
mov
dec
and
or
dec
sbb
add
sbb
sbb
das
in
in
sub
sub
movl
les
adc
pop
mov
mov
push
out
lcall
movsb
sub
pop
push
push
es
xor
adc
or
sub
xor
mov
inc
das
pop
and
inc
dec
cltd
das
cmp
add
sub
cmp
test
lahf
jmp
inc
pmulhuw
sbbb
mov
push
jbe
dec
sbb
pop
cltd
jmp
mov
das
lahf
cmp
sub
hlt
mov
sbb
lock
mov
or
push
mov
sbb
jmp
xor
test
add
sub
adc
mov
and
arpl
les
jp
fnstenv
add
xor
pop
scas
cld
mov
and
ficompl
inc
imul
in
push
test
int3
sub
or
loop
inc
clc
pop
pop
push
bound
sbb
inc
lret
subb
cs
mov
notb
or
and
xor
testb
or
sub
lock
dec
sbb
int
pushf
cltd
mov
cmpsb
imul
popf
sub
sub
das
pop
stc
mov
dec
push
sub
sub
mov
shrl
jle
inc
pop
inc
push
inc
xor
push
fnstsw
aad
mov
add
pushf
inc
sub
xor
ss
add
aaa
and
xor
ja
lea
rclb
lcall
sub
pop
push
aas
rcl
pop
int3
adc
and
mov
xor
mov
es
mov
jp
arpl
stc
scas
andl
enter
mov
nop
push
mov
lods
loop
cmpsb
arpl
add
rcrl
insl
inc
pop
xor
clc
je
test
mov
dec
cmpsb
inc
insl
stc
arpl
stc
mov
xor
mulb
inc
mov
ret
fildl
add
jno
ret
jno
push
std
pop
in
in
cwtl
imul
xor
leave
movsl
aam
sub
adc
js
jle
icebp
movsl
or
stos
sub
push
movsl
push
filds
test
jnp
in
ret
inc
xor
cmp
push
mov
scas
sub
lods
and
fsts
fldenv
push
jae
aas
or
xorb
movsl
sub
bound
data16
idiv
mov
cmp
xchg
inc
enter
mov
push
or
push
bound
add
dec
fwait
dec
push
outsb
dec
cmc
decb
imul
bound
inc
xor
cmp
and
adc
mov
jno
hlt
gs
inc
xchg
in
add
dec
repz
mov
pop
sbb
jnp
arpl
inc
ret
fs
test
or
call
stc
push
and
push
xor
xchg
mov
inc
jns
movsl
dec
les
out
jg
dec
push
mov
adc
push
jo
adc
fisubrl
jns
jbe
lahf
gs
out
mov
sub
aam
in
push
sub
fwait
cmpsl
fisubs
sbb
dec
mov
push
movsl
dec
dec
mov
lods
push
subb
movsb
les
jp
test
xor
hlt
rorl
enter
insl
sub
adc
mov
in
in
xor
bound
out
push
pop
add
cmp
add
xchg
movsl
inc
push
arpl
jns
repz
insl
int
das
cmp
sub
cmp
movsb
fbstp
lods
jmp
hlt
out
dec
lods
xchg
movsl
arpl
in
jb
sub
mov
xchg
lods
test
push
push
or
movsb
mov
push
lds
std
inc
xchg
outsb
jbe
or
mov
xor
popa
das
sbb
jae
inc
jae
shrb
pop
and
sub
in
push
push
mov
jp
bound
lret
xor
int
lret
add
pop
rcll
pop
dec
pop
inc
or
pop
mov
inc
dec
xchg
je
add
inc
ret
mov
push
mov
adc
cmp
cmpsl
mov
dec
lcall
xor
les
andb
shr
mov
inc
mov
dec
test
orl
pop
pop
and
sbb
pop
cmp
loopne
jle
mov
repnz
ds
jo
bound
movsl
xor
outsl
xorb
sbb
jg
add
pop
leave
sbb
insl
or
mov
push
inc
icebp
pop
mov
nop
cmp
xchg
mov
std
mov
xchg
ds
sub
xchg
mov
xchg
cmp
mov
cmp
stos
jmp
and
rcrl
inc
mov
mov
add
xchg
adc
jecxz
imul
sbb
mov
les
in
and
mov
sbb
aas
xchg
push
dec
push
popa
aam
xor
xchg
cltd
call
scas
shll
and
in
add
into
cmp
pop
mov
inc
icebp
cmp
mov
in
lcall
stos
mov
adc
in
or
ss
cs
repz
and
mov
inc
gs
divl
fadd
popf
mov
mov
ja
mov
jne
mov
xlat
icebp
popa
mov
dec
mov
add
loop
sbb
add
sarl
xlat
or
ror
dec
inc
xor
movsl
xchg
scas
mov
jns,pn
inc
jno
sti
dec
int3
xor
test
ucomiss
push
testl
les
lahf
jg
adc
mov
test
sar
mov
jmp
aas
xor
push
or
mov
andl
testb
mov
sub
xchg
fs
stos
test
insl
xor
loope
xchg
in
ror
std
nop
add
mov
xor
mov
xorl
mov
sbb
int3
cs
popa
popa
aaa
ret
add
inc
add
pop
aam
les
inc
cs
inc
pusha
add
dec
xchg
cmp
in
adcl
xor
andl
xor
dec
and
sbb
sub
outsl
mov
inc
mov
pop
push
mov
inc
and
add
arpl
add
adc
xchg
lahf
and
mov
lock
add
mov
push
pop
cmp
push
xchg
xor
xchg
xorl
cmpsl
lods
cmpl
mov
push
decl
sub
mov
pop
es
mov
mov
add
push
arpl
repz
mov
hlt
jnp
and
dec
arpl
movsl
les
leave
icebp
sub
push
xor
mov
sub
shlb
pop
push
push
daa
sbb
jecxz
rorl
das
adc
imul
dec
sub
pop
mov
in
or
add
cmp
sub
jbe
fidivl
ret
xchg
es
mov
adc
cmp
repz
push
inc
icebp
les
fsubs
inc
sub
mov
inc
xor
rolb
mov
xchg
leave
push
decl
aaa
inc
sbb
sub
imul
cmp
scas
and
addr16
sarl
sub
andl
in
push
repz
cs
test
inc
mov
inc
xor
movsb
nop
insl
adc
shlb
movsl
daa
lahf
push
cmpsl
lods
sbb
stc
push
mov
mov
sbb
fdivl
and
sub
xor
push
sub
ret
or
push
inc
aas
xor
roll
das
sub
aaa
test
outsb
test
sub
test
xchg
pop
xor
aaa
sub
out
sbb
or
fwait
sub
loopne
aad
sbb
sbb
lea
adc
cmc
add
mov
out
ret
xlat
cmc
jae
movsl
xchg
icebp
inc
cmp
fs
jl
mov
xchg
fwait
push
inc
add
test
inc
mov
cmc
sbb
and
enter
test
mov
inc
add
fldcw
dec
pop
rep
jge
fwait
adc
lods
add
lret
movsl
pop
movb
push
in
out
xor
dec
test
lea
scas
outsl
add
popa
xlat
mov
cld
adc
stos
aaa
int
popa
out
jne
popa
sub
push
testb
jnp
cmp
shrl
orb
insl
add
sub
dec
add
aam
or
add
pop
imul
les
out
sbb
or
mov
mov
aad
les
bound
and
inc
mov
and
daa
xchg
cmp
les
popf
xor
js
rcl
sbb
xchg
mov
sub
dec
xlat
int3
xchg
jns
xchg
in
rorl
dec
xchg
and
fsubrs
pop
and
sub
rolb
hlt
enter
push
or
pop
push
lods
dec
push
ja
dec
push
lahf
push
ss
int
cmp
xchg
inc
push
cmp
in
insl
mov
fildll
into
je
rcl
enter
gs
mov
or
inc
and
sbb
cmp
xor
add
icebp
repnz
mov
data16
pop
cmp
cmc
or
aas
popa
popf
in
mov
xor
cmp
negb
testl
add
xor
xchg
scas
sti
sbb
sbb
xor
divl
cmp
push
jmp
dec
pop
mov
jle
pop
and
or
push
jnp
mov
sub
add
push
inc
jo
out
fnsave
add
add
push
lret
std
clc
xor
icebp
add
push
dec
mov
cmp
test
dec
test
arpl
pop
fisubl
lock
das
xor
and
mov
in
add
pop
lcall
rcrl
repz
dec
inc
xchg
mov
ret
xchg
jecxz
jns
sbb
xchg
repz
inc
sub
inc
fbstp
test
xor
pop
std
stc
std
mov
shrb
je
xlat
mov
aaa
dec
adc
outsb
aad
daa
xor
pop
mov
mov
std
sbb
stos
jp
dec
dec
xchg
pop
aam
ljmp
jns
scas
mov
mov
outsl
pop
mov
push
dec
cmp
movsl
daa
or
sbb
dec
cmp
lcall
or
xchg
cmc
mov
imul
pcmpgtw
mov
add
adc
rcl
adc
and
fldl
in
add
dec
fdiv
inc
outsb
pop
push
rolb
outsl
mov
dec
in
pop
mov
inc
movsb
rcr
cmpsl
out
adc
cmpsl
inc
js
movsb
adc
stos
ret
cmc
push
or
adc
mov
inc
enter
inc
jb
jbe
push
inc
cmp
lea
adc
lret
xchg
popa
icebp
out
daa
add
jp
xchg
into
movsb
sub
in
mov
add
imul
cltd
pop
mov
fucomi
in
aad
orl
push
dec
adc
inc
shlb
and
adc
jg
sbb
xchg
xchg
sub
push
in
dec
pop
add
lds
sub
xchg
aaa
add
outsb
mov
push
push
lds
mov
adc
jmp
leave
xor
pop
shlb
stos
stos
or
dec
mov
sub
jp
jbe
std
lods
push
jmp
push
sub
push
mov
ss
jg
out
fmul
icebp
jge
fnstenv
icebp
and
mov
test
jo
lretw
push
int
mov
push
xor
and
icebp
mov
orl
dec
xor
pop
dec
xor
jp
mov
es
jmp
jg
or
pop
imul
xchg
movsb
add
addr16
inc
adc
or
mov
test
call
mov
mov
aaa
sbb
cmpsb
push
popa
fnsave
dec
aaa
fistpl
or
sub
pop
xor
xchg
push
je
movsl
ljmp
push
out
ljmp
xor
and
push
popf
inc
les
jno
imull
lret
imul
mov
xchg
fistps
jo
or
add
insb
jge
jmp
mov
je
popf
lahf
mov
movsl
lods
dec
fisttpll
in
add
xor
into
mov
dec
cmp
movsl
sub
mov
inc
and
sub
cmp
or
push
cmp
gs
mov
dec
addr16
pop
in
push
push
mov
out
fld
or
stos
mov
xchg
cmp
lcall
pop
dec
stos
cmp
mov
jno
lods
sbb
fnstenv
jmp
jge
pop
cmpsb
subb
mov
xor
lods
jb
sub
dec
bound
sarb
movsb
or
dec
xor
lea
outsb
imul
push
push
stos
jb
les
mov
insl
sub
dec
dec
mov
cs
add
adc
push
in
cmp
mov
ds
or
clc
sub
aad
icebp
les
pop
repz
fists
movaps
gs
xchg
add
jne
mov
cmpsl
into
inc
inc
nop
mov
in
jmp
loopne
xchg
movsb
sub
jno
les
scas
call
cmp
and
bnd
test
jno
and
test
data16
mov
mov
outsb
jecxz
stos
leave
ret
outsl
cmp
imul
lods
adc
xor
mov
dec
jno
push
subb
push
push
sahf
cmpsl
cmp
int
lods
add
pop
nop
gs
int
in
arpl
addr16
mov
int
shrb
aam
gs
int
add
or
fwait
sub
int
ja
mov
xchg
int
call
pushf
cmc
xchg
shlb
inc
fcomip
mov
mov
xchg
into
ljmp
add
lds
mov
lods
xor
mov
mov
cli
adc
aaa
rclb
out
inc
leave
or
jns
push
fsub
mov
and
sub
lds
popa
mov
data16
orl
mov
popa
push
dec
addb
push
mov
fistl
push
inc
and
cmpsl
add
test
stos
lds
loopne
ret
fidivs
or
enter
mov
sbb
sarl
daa
rcrl
loop
fcmovnu
popa
add
aas
xor
or
mov
out
popf
popa
jnp
rcrl
cs
inc
in
sti
sbb
mov
psubsb
mov
xchg
sbb
mov
jg
out
test
cmp
in
int
mov
sub
push
and
push
dec
les
inc
mov
inc
in
insb
push
dec
test
lods
std
daa
push
inc
cld
mov
call
rclb
jecxz
enter
jmp
in
pop
ds
inc
mov
stc
in
popa
cld
repnz
imul
dec
idivb
adc
add
int
xchg
mov
adc
or
jne
pop
xchg
adc
mov
pop
mov
xchg
ja
pop
or
xor
repnz
xor
pop
es
aaa
add
dec
je
or
xchg
fsts
dec
mov
stos
inc
xor
cmc
xchg
jge
xchg
sbb
xor
aad
ljmp
ret
adc
pop
sub
bswap
lea
mov
ret
icebp
lahf
jo
std
sbb
sbb
sbb
movsb
jg
stc
mov
fisubs
mov
call
loope
gs
or
lods
push
push
lods
sbb
or
xor
lods
cld
call
xchg
inc
dec
lods
shl
iret
lods
jne
lock
or
pop
xor
jg
repnz
cltd
lods
test
test
test
jle
sbb
repnz
dec
cltd
jo
imul
push
cmp
in
push
push
test
test
in
in
in
and
das
lods
sub
pop
loopne
dec
pop
and
cmp
inc
fcoms
sbb
cltd
pop
and
or
xchg
cmp
pop
daa
mov
lcall
sbb
enter
lock
pop
fdivrl
push
popa
push
f2xm1
or
inc
xchg
sub
and
das
test
lret
push
push
cmp
jns
daa
test
adc
bound
inc
pop
jg
mov
and
sub
mov
in
sbb
nop
insl
mov
mov
testb
sub
dec
repz
pop
in
inc
movsl
inc
mov
sbb
leave
pop
push
jns
imul
add
insl
dec
adc
mov
push
inc
mov
incb
pop
sahf
inc
pusha
popf
xchg
scas
dec
mov
pop
pushf
jns
popf
adc
jnp
xchg
movsl
push
pop
push
or
aas
xchg
fsubs
stc
xchg
sbb
push
sahf
xor
jno
cmp
push
repz
mov
push
add
ret
nop
sub
insb
xor
out
cpuid
sub
fwait
push
mov
inc
mov
enter
out
cltd
mov
mov
iret
cltd
lods
js
dec
or
or
add
push
fldcw
adc
xor
add
push
movb
fisubrl
sub
xor
lahf
or
or
add
jae
and
dec
lods
xchg
nop
mov
aaa
pop
repz
adc
test
negl
jbe
mov
bound
stos
mov
std
imull
inc
stos
and
xchg
test
xor
mov
scas
xchg
or
xchg
cltd
fsubp
cltd
add
fisttpll
or
push
jge
movsl
push
xor
xor
test
outsb
xchg
fwait
and
ret
stos
repz
dec
roll
enter
add
into
sub
xchg
cmp
sub
xlat
xchg
mov
in
loope
dec
int
inc
and
lea
xchg
inc
ja
out
stos
insl
js
sub
pmulhuw
lods
leave
mov
jmp
imul
movsl
cmc
lret
leave
pushf
popa
insl
js
mov
push
aad
repz
lods
mov
cld
xchg
lcall
test
fisubrs
scas
sarl
in
lds
jl
and
xor
std
mov
out
sub
sub
addr16
mov
popa
inc
adc
test
mov
fidivs
pop
mov
aas
mov
fnsave
stos
jge
movsb
sub
add
jmp
in
add
movsb
stos
negl
sub
xor
jbe
out
mov
mov
movsb
xchg
les
clc
fbstp
push
arpl
and
test
insl
into
inc
mov
sub
leave
fwait
xor
loop
test
test
sbb
scas
xchg
pop
filds
shl
xchg
shr
and
ret
ljmp
out
inc
std
xor
mov
xor
imul
data16
jge
cli
xor
stc
outsl
jl
js
pop
out
into
inc
and
imul
jae
push
scas
imul
mov
jecxz
int
mov
and
popa
leave
stos
hlt
cltd
lahf
mov
mov
sbb
xchg
inc
sub
lea
test
inc
xchg
pushl
movsl
js
jl
xor
mov
mov
xor
or
xchg
outsl
xor
shrb
jp
jmp
adc
bound
adc
nop
jl
pop
lods
xor
xor
stos
pop
jge
inc
adc
sbb
jnp
mov
sti
int3
jle
jnp
push
jns
insb
add
lret
int
int
or
imul
movsb
jne
cmp
sbb
add
xchg
cmpsb
jns,pn
pop
inc
test
enter
icebp
jns
movsl
popf
or
jb
xor
adc
jne
mov
aaa
mov
lea
cld
dec
or
and
insl
and
jb
push
lahf
cmp
bound
mov
dec
jno
lcall
orb
or
mov
mov
inc
out
push
or
inc
rcrl
push
inc
jae
jb
mov
pop
gs
imul
add
push
cmp
xor
addr16
xor
movsb
jno
outsb
mov
xchg
push
shrl
jno
xchg
xchg
and
inc
inc
cmp
insl
rolb
sub
sbb
cs
stos
cmp
enter
adc
dec
adc
leave
cmpb
jo
inc
sub
mov
push
push
xchg
das
xchg
ret
les
testl
push
roll
adc
imul
out
xorl
dec
push
fimull
clc
ja
mov
out
imull
movsl
jae
lcall
inc
in
inc
sub
mov
cmp
push
jnp
jp
aad
aam
fcoml
dec
jmp
or
pop
jge
repz
mov
sub
mov
lahf
xchg
jnp
movsl
push
gs
inc
mov
sub
sti
jo
xor
inc
xor
popa
jbe
popa
jl
call
cwtl
push
inc
sub
and
std
subl
adcl
jno
clc
lea
sub
rcr
mov
cmp
lahf
push
sub
imul
notb
ss
addr16
pop
push
das
ljmp
test
jnp
stc
mov
popf
dec
sub
jle
adc
out
inc
adc
inc
and
xor
sub
hlt
scas
data16
xor
push
xchg
movsb
adc
les
mov
mov
mov
fidivrl
pop
cmp
lret
in
jl
xchg
add
insl
stos
add
lcall
in
or
mov
sub
enter
xor
cmpsl
rclb
movsb
sbb
aam
shll
int
data16
inc
sub
les
xchg
arpl
fcom
lds
mov
push
cmc
inc
cmc
rsm
mov
jno
popf
xchg
scas
ds
inc
dec
pop
aaa
xchg
and
cmp
jnp
js
scas
push
xchg
lods
pop
push
fwait
cmp
mov
es
adc
ja
ja
sub
cli
lods
fmuls
inc
mov
fs
mov
into
pusha
dec
jae
jp
and
cmc
pusha
test
dec
push
pushf
repnz
inc
dec
pop
inc
mov
icebp
cmp
inc
cld
lahf
mov
mov
dec
adc
and
dec
xor
repnz
lret
enter
outsb
push
pop
inc
xor
mov
aas
sbb
aad
pop
cs
test
faddl
mov
mov
dec
sub
inc
jno
jnp
mov
aad
stc
mov
inc
jb
mov
andl
mov
push
outsl
lahf
fiaddl
sti
mov
fwait
cld
stos
or
inc
mov
pop
addr16
lcall
inc
adc
jb
xchg
xlat
imul
inc
xor
lods
cmp
dec
add
inc
adc
sti
adc
add
repz
xchg
sbb
mov
aam
sub
jae
add
dec
push
inc
cwtl
cmp
and
push
scas
jno
dec
jnp
orl
pop
aaa
inc
sub
in
jno
call
mulb
cmp
jae
mov
cmp
in
lea
push
std
inc
jo
sbb
xchg
jmp
shll
mov
arpl
stc
push
push
idivl
jno
push
cmc
add
xor
js
inc
push
insl
daa
aam
es
inc
jns
sarl
arpl
jl
ss
jno
adc
rol
ds
sub
cli
ljmp
cmp
xorl
hlt
ljmp
xor
insb
cmp
mov
xor
xor
popf
xor
adc
je
aad
aam
sub
adc
xchg
adc
enter
popf
shl
mov
movsl
insb
xor
pop
cs
cmp
call
xor
pop
ljmp
imul
xchg
clc
lock
gs
in
pop
in
pop
dec
andb
add
sti
add
cmpsb
mov
mov
shll
out
icebp
mov
sarl
lahf
mov
mov
dec
popa
add
ret
and
sub
sbb
sbb
inc
dec
inc
add
stos
jmp
xchg
roll
adc
mov
mov
movsl
add
data16
inc
pop
dec
jl
mov
cmp
addl
lea
aaa
popa
inc
mov
hlt
gs
sub
movaps
xchg
mov
jecxz
int3
dec
jecxz
in
xchg
inc
or
arpl
stos
push
in
xor
lods
lret
test
cwtl
fdivl
and
mov
inc
and
hlt
imul
sub
bound
out
pop
jg
mov
mov
repnz
adc
roll
sub
xchg
repz
cld
dec
fdivr
cltd
lods
adc
sbb
inc
test
jle
adc
adc
jmp
mov
xchg
cmpsl
pop
arpl
out
push
xor
inc
popa
or
js
jne
mov
popa
mov
cmpl
cli
dec
inc
sub
inc
jb
fstpt
addr16
push
outsb
sub
xor
lods
mov
les
mov
leave
inc
movsl
xchg
or
mov
xor
jo
fistpll
inc
enter
jl
enter
xor
add
gs
sub
xchg
sub
or
scas
dec
cmpsb
and
sbb
lret
lret
inc
test
mov
sub
inc
leave
out
sbb
inc
js
enter
dec
ret
out
jge
jmp
popa
repz
mov
fbstp
mov
mov
aam
jmp
scas
xor
mov
hlt
movsl
orl
cmp
pop
cwtl
push
or
ficomps
inc
mov
insl
push
incl
push
test
mov
push
ffree
cmpsb
js
jg
movsb
adc
push
and
sarb
jmp
popa
sbb
sub
inc
adc
sub
loopne
jp
xor
xlat
leave
movsl
es
lea
sub
xchg
dec
inc
les
inc
sub
test
add
xor
lret
add
add
pop
add
je
lods
aaa
outsb
ds
jno
mov
out
adc
insl
enter
ret
xchg
inc
push
lahf
loop
shll
xor
fldcw
inc
jno
pop
push
stos
xlat
jne
add
jp
mov
xor
dec
outsb
movsl
mov
or
lahf
cs
inc
pop
jp
xchg
pop
popa
and
ret
dec
aaa
sub
or
je
shl
fists
pop
or
shll
int
inc
movsl
cli
out
popf
fstl
xchg
ret
or
inc
pushf
jno
jmp
jle
ljmp
enter
out
push
test
je
mov
jmp
add
push
out
aaa
xor
adc
and
sub
out
add
and
sub
lods
xor
and
shll
jmp
inc
mov
sub
inc
sbb
add
inc
jae
mov
xor
push
xchg
sbb
mov
cmp
add
add
scas
cmp
adc
aaa
cmp
mov
xor
in
test
popa
lahf
add
push
add
fsub
cli
aaa
ja
push
add
xchg
sub
clc
xlat
iret
stos
push
and
push
adc
pop
sbb
jg
add
imul
xor
cld
dec
mov
sub
and
jne
jle
inc
inc
ja
cmp
fs
and
test
push
cmp
xchg
mov
sarl
ss
push
mov
inc
jno
loope
mov
setp
inc
mov
lods
dec
mov
jmp
jle
les
lcall
cmpsl
xchg
add
mov
sar
add
clc
gs
mov
cmpsb
scas
and
cmp
add
pop
and
das
adc
addr16
arpl
fldt
pop
fs
popf
cld
sarl
out
int
lret
sarl
inc
add
test
push
cmp
mov
leave
popa
xchg
aaa
pop
popa
std
mov
xchg
or
add
repz
push
fdivs
cld
imul
and
inc
and
dec
out
mov
addr16
gs
lods
sub
js
sub
stos
gs
jno
ret
xchg
cmpsl
xchg
sbb
push
xor
lock
call
jb
push
in
push
xchg
add
pop
jae
scas
mov
loop
jg
xchg
add
loop
and
hlt
sahf
ss
xor
add
and
mov
lahf
pusha
sub
mov
les
xor
cmp
in
in
inc
adc
add
mov
adc
inc
out
and
sub
loope
add
std
lods
gs
xor
jmp
push
in
push
gs
popfw
rol
mov
cld
shll
mov
pop
enter
aaa
cvtdq2ps
jnp
jl
enter
sub
sub
pusha
loop
mov
xor
and
stc
gs
xor
xchg
mov
imul
push
fwait
js
xchg
sahf
les
jne
insb
test
in
inc
adc
in
int
std
xor
sbb
adc
imul
sbb
out
inc
lret
mov
test
mov
dec
and
fwait
test
loopne
xchg
mov
pop
out
out
shrl
mov
popf
lods
aas
mov
mov
xchg
mov
fs
cwtl
mov
inc
adc
outsl
mov
arpl
daa
adcl
mov
fcoml
movsl
rorl
cmp
or
scas
dec
test
or
sbb
std
test
mov
add
lahf
inc
jbe
ror
das
fadd
pop
sahf
mov
pop
les
aaa
fs
sbb
inc
lret
xor
adc
stc
lods
les
xchg
jnp
jb
mov
add
xor
fwait
dec
aaa
xor
mov
push
and
sub
pop
addr16
incl
jmp
pop
inc
cmp
xchg
mov
into
lret
sub
sbb
xchg
push
lahf
inc
mov
orl
sahf
adc
fwait
pop
pop
mov
hlt
lcall
mov
sbb
sub
arpl
sarw
aam
or
xor
aam
mov
imul
sbb
fsubrs
inc
adc
push
into
pop
sub
xchg
push
pop
loop
push
ja
push
into
push
shll
dec
cmpl
sbb
xchg
pop
test
popa
xor
iret
mov
dec
lods
xor
jge
adc
lret
movsl
loopne
arpl
inc
je
insb
xchg
ja
js
fs
shlb
add
shlb
fisubl
jne
repz
push
js
fcom
inc
insb
xchg
jno
xchg
shl
fisttpl
mov
hlt
or
mov
mov
les
xchg
and
loope
nop
adc
push
push
test
mov
icebp
dec
xchg
fdivrl
mov
lcall
cli
aas
inc
mov
dec
mov
cwtl
popa
lret
ds
xorl
into
pop
int3
push
and
gs
jl
jg
pop
bound
sbb
imul
inc
xchg
outsb
mov
or
adc
subl
xchg
add
ja
pop
inc
sbb
push
dec
sbb
cmpsb
inc
idivl
sbb
xor
or
pop
pop
jno
push
and
jge
adc
sbb
fiaddl
dec
cmp
or
lds
hlt
stc
xchg
mov
jnp
xadd
les
lret
inc
cmp
inc
pop
sahf
mov
cmpsl
adc
mov
jns
cmp
gs
mov
xor
je
movsl
stos
inc
cmp
ja
mov
and
sbb
mov
stc
dec
js
push
jne
pushf
mov
fidivs
in
mov
adc
outsl
xor
add
mov
mov
mov
arpl
insl
xor
repz
inc
sti
add
sbb
mov
jae
addb
xor
mov
mov
call
sub
or
push
mov
daa
push
andl
pop
push
lahf
mov
sbb
ret
repz
add
ja
sub
outsl
xor
push
ret
in
into
sub
dec
lods
xchg
mov
push
movsl
out
xchg
dec
xor
jo
adc
in
mov
cmp
sub
jg
mov
sub
repz
insl
mov
out
push
xor
pop
mov
ss
daa
mov
inc
inc
lds
lods
mov
add
sbb
mov
mov
cli
xor
stos
mov
cmp
icebp
or
addr16
repnz
ljmp
mov
addr16
sub
imul
xchg
insl
mov
imul
lods
cmp
lock
inc
sahf
xchg
fimuls
mov
gs
sub
jl
fiaddl
imulb
js
dec
loopne
es
nop
adc
jge
popa
daa
test
dec
test
sbb
mov
add
ret
cmpsl
sub
push
inc
out
xor
sbb
cmp
and
aaa
xor
ret
mov
sub
mov
rorl
jmp
or
movsb
inc
xor
popa
jmp
jge
inc
stos
xor
lds
data16
lods
cmp
jmp
jge
mov
cmp
leave
dec
inc
jmp
aaa
ret
out
jmp
loopne
jmp
jge
pop
mov
jns
jae
xchg
icebp
inc
dec
shrl
jmp
mov
xor
ret
lcall
cmp
mov
push
fldenv
pushf
in
pop
repz
sub
stos
mov
xlat
inc
test
loop
gs
mov
cmp
add
push
jne
or
cmp
mov
add
adc
push
outsl
cmp
sbbb
fidivs
xchg
add
scas
pop
lods
adc
ret
aaa
in
dec
in
popf
cltd
incl
mov
mov
and
mov
jno
inc
arpl
inc
jne
sub
lcall
sbb
clc
out
inc
negl
movsl
in
dec
ja
or
add
lcall
push
mov
xchg
xor
dec
loop
aaa
mov
xchg
xor
aas
int3
nop
inc
lcall
lcall
xchg
mov
out
sub
adc
cmp
std
add
flds
push
rcll
xchg
add
lods
mov
mov
ljmp
and
movsl
cmp
xor
seto
pop
movsl
or
sbb
mov
sbb
loope
inc
mov
aas
loop
in
or
jl
push
fdiv
sar
dec
adc
stos
push
movsl
adcb
jns
adc
fcmovne
pop
add
add
int3
pop
enter
stos
cmpsb
dec
enter
mov
push
push
mov
jb
xchg
rcl
dec
fmuls
fs
or
hlt
in
pop
fs
test
out
sub
jg
idivl
dec
xor
inc
imul
dec
xchg
aam
in
hlt
jle
inc
pop
scas
test
aad
jg
adc
pop
fucomp
or
mov
cwtl
jae
cmpsl
inc
test
sbb
and
fcompl
add
adc
xor
test
in
sahf
aam
cmp
in
add
sbb
cwtl
subb
sbb
pop
cwtl
repz
pop
daa
enter
and
adc
imul
movsb
repz
jno
in
sub
lods
in
jmp
mov
sub
xchg
mov
mov
dec
orl
jbe
movsb
test
enter
and
popa
cmp
popf
loope
in
rol
es
mov
dec
pop
das
mov
je
push
les
xchg
sub
das
fsubs
in
das
pop
pop
mov
cmp
and
addb
mov
rclb
les
addr16
adc
data16
push
xor
or
iret
scas
lcall
add
mov
enter
daa
fstl
sbb
sbb
add
mov
aaa
je
adc
int3
les
xchg
icebp
sbb
xchg
lock
xorl
scas
mov
sti
ret
mov
ret
mov
sub
out
cltd
lods
inc
rorb
nop
sub
loopne
repz
aaa
sbb
inc
lea
les
sbb
fs
enter
div
mov
sub
fwait
test
sub
je
ret
and
sbb
popf
data16
pop
lahf
lahf
outsb
fisubrs
push
jnp
clc
inc
mov
js
sbb
add
xorb
in
sub
inc
mov
mov
xchg
movsb
and
add
repz
dec
add
js
outsl
inc
jg
sub
add
sti
outsl
dec
icebp
leave
push
xor
insl
std
mov
adc
roll
or
mov
cmc
insb
or
js
inc
jle
sub
cmp
or
pop
xchg
popa
shrb
aaa
cmp
lret
and
shlb
roll
jns
mov
aaa
movsl
mov
mov
add
xor
inc
imul
or
insl
xchg
mov
xchg
jno
xchg
push
pushf
jg
pop
hlt
les
xor
mov
mov
pop
mov
inc
leave
lock
pop
adc
xorb
xchg
inc
rol
mov
sub
pop
shll
pop
xor
pop
add
inc
mov
stc
lds
daa
pop
jae
add
sbb
pusha
jbe
les
push
aad
mov
sub
xor
inc
call
jl
lds
push
je
in
pop
cwtl
inc
imul
pop
mov
add
dec
jp
push
aas
loopne
fs
push
dec
mov
call
insb
les
mov
mov
and
jnp
daa
shl
mov
mov
loope
aad
les
outsl
imul
lahf
xor
add
lea
mov
ss
popa
aam
roll
insl
mov
insb
adc
lods
or
push
ljmp
mov
aam
loope
cmp
aam
push
mov
sub
test
and
in
xchg
xchg
cmp
mov
in
outsb
and
xchg
xchg
hlt
stc
or
enter
cli
sub
xor
les
inc
sbb
aas
nop
popa
popa
je
movsl
jmp
jno
test
outsl
xor
in
fs
int
stos
cs
inc
mov
add
mov
lcall
dec
inc
iret
icebp
mov
ss
andb
sub
inc
xor
xchg
sbb
push
inc
jg
lcall
pop
fildll
mov
jbe
outsb
stos
call
and
push
inc
cmc
xor
cwtl
pusha
pop
shrb
sbb
push
mov
stc
int
adc
cmp
insl
cld
loopne
cwtl
jno
xchg
adcb
shl
in
jmp
jbe
add
mov
or
aad
lds
pop
idivb
cmpsl
outsl
std
icebp
and
mov
inc
cmpsb
dec
xchg
sub
add
loope
sti
scas
and
mov
lods
aas
lods
and
add
popa
aaa
inc
jecxz
inc
mov
movsb
sbb
int
ss
popa
popa
or
dec
lods
lcall
arpl
sbb
enter
nop
add
jp
fldl
inc
enter
mov
mov
pusha
inc
dec
rorl
movsb
sub
pop
jno
movsb
test
sbb
mul
cmp
pop
jecxz
mov
aas
inc
inc
adc
int3
ret
jno
mov
and
sbb
sub
cmpsl
adc
push
mov
push
insl
mov
lods
mov
mov
xlat
xchg
push
xchg
mov
das
xchg
mov
sbb
add
jg
push
adcb
mov
daa
inc
push
push
pop
pop
data16
pop
add
push
xor
push
int
inc
push
jmp
pop
repnz
stos
dec
add
mov
push
pushf
or
jns
pop
stos
inc
add
xor
adc
pop
aaa
lods
and
gs
and
repnz
xchg
inc
mov
lods
push
dec
mov
xchg
fldl
dec
out
cmpsl
into
dec
ja
jns
cs
out
dec
sub
inc
sub
xchg
push
daa
or
pop
jmp
inc
shll
ret
aaa
pop
in
xchg
dec
lods
mov
dec
test
leave
ljmp
push
jne
popa
inc
movsb
xor
rcll
in
popa
cld
xchg
jp
popa
mov
jo
sub
dec
pop
dec
sahf
adc
xor
aam
push
popf
adc
push
inc
cmp
ss
adc
ret
test
dec
mov
inc
or
cmp
cltd
push
in
aad
mov
lds
aam
mov
inc
lock
mov
sub
sbb
jmp
pushl
jge
cmp
inc
pop
test
cltd
xchg
xchg
loope
icebp
into
push
dec
xchg
outsl
push
outsb
enter
les
or
test
jne
insl
dec
mov
mov
arpl
xrelease
ljmp
jne
les
into
xor
jmp
sti
subb
arpl
arpl
xchg
test
leave
mov
xor
ljmp
mov
dec
xor
mov
lcall
subb
fisttpll
mov
xor
jns
sub
in
or
lea
inc
xchg
sbb
jmp
jl
mov
cwtl
sbb
cmp
aad
cmp
mov
in
and
cld
aam
mov
xor
sbb
stos
mov
adc
push
cs
into
adc
mov
xor
inc
movsl
or
or
xorl
jno
popa
enter
addr16
imul
or
jns
inc
mov
xor
jg
scas
or
cmpsl
ss
les
mov
mov
and
mov
pop
sbb
xchg
std
push
cmc
mov
stos
popa
sti
pop
jl
ror
jmp
push
cwtl
xchg
push
or
pop
cmpsb
jno
insl
imul
push
lahf
mov
call
dec
lock
out
lret
pop
test
out
sahf
clc
pop
inc
dec
nop
jmp
movsl
andl
push
cmpsb
fisubrs
in
ss
inc
jbe
add
test
notb
scas
mov
sbb
and
xor
jae
adc
cmpsl
enter
pop
xor
or
pop
std
xlat
mov
cmovp
pop
mov
add
mov
sub
sahf
sbb
and
notb
cli
out
inc
ret
fmull
jmp
movsl
imul
xchg
add
test
aad
shl
dec
cs
dec
adc
popf
mov
adc
pop
mov
or
jecxz
cwtl
out
xchg
add
fsubl
rolb
sub
icebp
fisttps
inc
push
idivb
daa
scas
and
xor
sub
idivl
dec
enter
cmp
jns
sub
and
sub
dec
jb
ret
vaddps
icebp
rorl
mov
pop
adc
ret
les
push
jns
and
in
mov
add
xor
ret
and
mov
mov
ret
push
mov
ret
push
test
outsb
pop
out
daa
push
inc
sub
pop
push
push
xchg
mov
dec
add
call
pop
out
in
or
into
inc
les
cmp
sar
sbb
vaddpd
sub
push
imul
loope
xchg
aaa
les
sbb
stc
and
and
mov
dec
dec
in
push
xchg
cli
test
inc
pop
sbb
fldl
pop
xor
fsubl
les
or
mov
or
mov
xchg
xor
pop
adc
adcl
les
repz
pop
int
shrl
fldl
inc
pop
cli
aas
test
pop
push
test
std
roll
popf
jno
adc
push
stos
push
and
repz
push
cld
adc
cmp
pusha
insl
call
ljmp
mov
psllq
dec
dec
push
jno
dec
out
jne
and
xchg
stos
xorl
sub
xorps
push
insl
adcl
int
out
in
pop
add
push
cmovp
pop
sbb
add
and
sbb
jns
pop
in
cs
cmp
mov
inc
pop
enter
fcmovnb
call
or
jbe
incl
cmpsl
adc
mov
sahf
in
inc
sub
je
in
lds
hlt
jg
jno
fnstenv
push
stos
cwtl
jg
inc
scas
dec
hlt
push
inc
jns
call
dec
pop
add
test
lret
out
pushf
std
inc
push
push
sahf
mov
mov
pop
and
push
mov
or
das
cmp
scas
inc
pop
cmp
stc
call
xchg
push
notb
cwtl
mov
or
repnz
mov
ja
fldcw
out
jle
mov
xchg
xchg
sahf
aaa
insb
sub
inc
dec
mov
popf
pop
pop
sbb
dec
testb
lods
mov
or
dec
hlt
mov
les
dec
mov
lods
mov
xchg
jmp
adc
and
fs
cmp
rorl
hlt
test
adc
pusha
fidivrs
jl
sub
dec
insb
stos
fidivl
inc
in
xor
push
mov
xor
bnd
andl
inc
in
ljmp
jne
dec
nop
mov
or
jb
aad
xchg
jb
add
push
jge
rclb
es
aaa
cmp
mov
xchg
fdivl
fdivs
push
add
sub
scas
jmp
stc
and
adc
repz
nop
ret
mov
mov
mov
outsl
push
stos
mov
imul
mov
inc
mov
sti
xor
inc
pop
push
pop
dec
js
jmp
jne
lcall
in
pop
arpl
xor
loopne
call
insb
lcall
ss
in
sub
addr16
test
cmpsb
dec
in
lea
cmp
sub
cmp
sbb
sub
out
pop
jne
shrl
and
outsl
ss
fsubr
mov
jno
addr16
xor
fldcw
negl
jle
ja
add
dec
sbb
adc
nop
inc
sub
jnp
xchg
fptan
jp
sub
cmp
adc
add
ja
jo
stos
jle
lock
adc
cmpsb
inc
insb
mov
xchg
imull
cmpsl
dec
idivl
jae
jg
shll
cmc
enter
imul
cmp
adc
mov
sub
hlt
iret
mov
movsl
shl
lea
int
in
outsb
decb
jecxz
jns
sahf
sti
movsl
lcall
cltd
addr16
stos
insl
fistpll
xor
cwtl
or
lods
fnstenv
pop
fistpll
pop
lods
sbb
xor
out
shlb
cltd
unpckhps
ret
add
fbld
aaa
insl
enter
shll
push
ret
add
dec
xor
hlt
xchg
sti
in
push
jg
mov
mov
pop
mov
mov
les
fs
mov
notl
xor
xor
int
cmp
lahf
test
xor
cmpsb
aas
popf
mov
jno
frstor
push
xchg
xchg
xchg
jle
jns
gs
in
jnp
push
popa
mov
nop
mov
fisubs
adc
xchg
int3
and
cmpsl
cmp
xchg
aas
out
imul
mov
push
mov
shl
out
pusha
jp
cwtl
stos
movsl
push
pop
mov
les
adc
outsl
inc
enter
pop
pusha
jecxz
int
mov
jp
jb
mov
xlat
rorl
dec
int3
xor
lahf
and
xchg
fistps
cmp
shl
jnp
push
inc
shlb
popf
jecxz
mov
inc
sbb
insl
sbb
fidivl
cld
fmul
sub
enter
sahf
popa
mov
pop
loop
fisttps
bound
dec
add
lret
dec
lret
or
clc
mov
mov
addr16
addr16
popa
popf
xchg
iret
xor
fcmovnbe
cmp
xchg
and
push
cmpsl
mov
fisttpl
pop
ljmp
je
iret
add
jge
aaa
popf
aad
cld
mov
loope
pop
add
xor
test
mov
mov
inc
ret
xchg
jg
pop
adc
out
mov
jmp
jne
aad
push
lahf
imul
lock
pop
mov
and
mov
inc
lcall
jmp
mov
faddp
cmp
outsb
nop
push
mov
int
outsb
movsb
nop
insb
cmp
push
dec
insb
sbb
or
pop
shll
pop
dec
mov
in
iret
xor
je
fs
fnsave
xor
xor
cmp
inc
mov
iret
stc
loopne
cltd
movsl
scas
xchg
fmul
aaa
stos
nop
lret
xchg
sub
xchg
push
cli
cs
inc
shrl
lret
stc
push
sbb
pop
and
pop
mov
stos
gs
inc
aam
idivb
in
xchg
icebp
xor
sbb
lods
xor
jno
test
add
imull
sarb
out
fucomip
push
sbb
sahf
callw
mov
dec
sub
cmpsl
cmpsl
push
ficompl
mov
cli
pop
loop
ret
test
test
push
rcrb
dec
ret
les
xlat
ret
cmp
jmp
mov
mov
ja
pop
sub
xor
cmpsl
ja
imulb
jp
xchg
mov
pop
mov
adc
cmpsb
push
cmp
sbb
dec
jns
or
and
add
sub
in
xchg
and
aam
cmp
xchg
adc
inc
and
mov
dec
mov
adc
aam
jne
sub
xor
shll
xchg
fdivs
inc
push
add
mov
arpl
testl
dec
leave
adc
lahf
rorl
jns
popa
ret
xchg
out
mov
push
mov
adcl
cltd
jo
ret
shll
sub
push
sbb
mov
mov
inc
jne
loop
imul
popa
ret
fs
mov
iret
pop
add
bound
lea
fwait
insb
push
mov
sbb
repz
or
rcrl
adc
idivb
popa
inc
es
ja
stc
popa
or
mov
add
push
outsw
push
mov
lret
stos
hlt
movsl
sub
pop
lock
ss
dec
fisttpl
scas
inc
rorl
loope
sub
fwait
dec
jb
pop
inc
popa
insb
mov
jle
rcrb
xchg
add
in
jbe
pop
icebp
inc
add
outsl
in
hlt
jmp
or
mov
ja
adc
pusha
mov
jp
imul
xorl
dec
cmpsl
push
testb
adc
stos
cmp
jbe
fs
mov
dec
xchg
movsb
js
scas
es
jo
mov
mov
adc
lret
repnz
dec
xor
dec
dec
inc
jb
ja
icebp
xchg
and
xor
push
and
or
sub
mov
sub
scas
or
jmp
imul
sub
shlb
mov
cmp
stos
push
adc
bound
mov
jge
imul
inc
cmp
inc
mov
sub
cmc
inc
test
cltd
shlb
fiaddl
stos
ljmp
push
or
aam
adc
xchg
std
mov
in
push
dec
sub
push
mov
push
lcall
insl
testb
popa
stos
pop
jne
loopne
dec
jno
into
mov
test
mov
pop
inc
lds
fnstsw
scas
flds
mov
dec
dec
sub
xchg
test
fldcw
cmp
sub
loopne
inc
xchg
dec
cmp
jae
mov
adc
repz
ljmp
ljmp
out
pop
or
pusha
cs
sbb
push
popa
sub
xchg
fsubr
insb
arpl
cmp
das
push
add
adc
sub
xchg
pop
mov
mov
enter
fs
outsb
inc
inc
sub
test
leave
stos
fwait
arpl
jl
sub
mov
mov
add
adc
iret
lods
xor
mov
lds
test
mov
sub
lahf
adc
ds
add
mov
and
jnp
add
repz
repz
mov
add
or
lahf
pop
repz
and
int3
dec
ficoml
dec
shufps
add
add
pop
cmp
fwait
mov
inc
rep
jecxz
stos
bound
es
std
arpl
mov
ja
roll
out
or
mov
inc
mov
shl
mov
divl
push
xchg
loop
push
pop
stos
push
jne
xchg
xchg
jle
std
ret
mov
inc
loopne,pt
cwtl
pop
cmc
inc
int
mov
cmc
lods
test
loope
or
lods
cmpsb
pop
jne
iret
xchg
js
lea
ret
mov
push
loopne
xchg
push
cmc
inc
leave
xchg
mov
std
inc
je
add
push
mov
pop
xchg
imul
jns
adc
inc
cmp
icebp
out
pushf
adc
or
gs
jns
adc
iret
popa
jno
adc
cs
xor
xchg
out
dec
pop
pop
xchg
aam
cs
xchg
xchg
call
pop
int3
pop
stos
imul
cmp
mov
int
cmp
jnp
scas
enter
inc
lret
gs
enter
stos
call
je
mov
push
xor
lcall
jb
xor
xor
ja
inc
jno
jo
push
and
out
push
xor
push
inc
dec
xchg
cmc
loop
or
stc
push
divl
repnz
jg
je
jge
stos
in
sub
lods
pop
xor
lods
imul
push
mov
jge
pop
or
pop
pop
mov
ja
pop
fdivrs
movsb
mov
movsl
andb
jne
jb
mov
add
test
push
cs
dec
addr16
mov
inc
std
inc
dec
inc
imul
jo
inc
sbb
scas
insb
test
lea
adc
pop
cmpsb
dec
add
sub
out
arpl
jo
jp
movsl
sub
arpl
jo
xor
inc
jle
mov
sbb
jo
and
es
mov
repnz
maxps
test
dec
fisubrs
mov
push
lahf
dec
mov
sub
xchg
pop
movsl
icebp
or
xchg
jmp
xchg
lods
loopne
sbb
add
cs
out
push
dec
adc
call
push
or
push
sbb
push
out
or
lret
gs
push
pcmpgtw
or
gs
ljmp
xor
lods
mov
mov
pusha
cwtl
call
mov
sub
inc
xchg
inc
xor
lods
lods
inc
stc
push
inc
aaa
cld
movsl
pop
inc
testb
adc
std
adc
sub
stc
sbb
jg
into
mov
jb
push
aas
mov
popa
stc
mulb
cmc
cld
movsl
std
add
aaa
leave
std
movsl
dec
insb
mov
sub
push
faddp
cmp
aaa
push
movsl
std
cld
add
std
aaa
stos
arpl
cmc
fidivl
ret
dec
aaa
into
inc
stos
sub
cmc
mov
hlt
xor
pop
xor
push
push
fs
xor
test
inc
mov
xchg
cmp
mov
xor
pop
mov
cmp
cmp
das
pop
dec
mov
das
aas
shlb
jb
fisubrl
into
outsb
push
or
sub
das
test
arpl
jl
jl
mov
addb
daa
test
xchg
pop
out
fs
movsl
xor
bound
in
dec
inc
xchg
fwait
loopne
xchg
xchg
dec
addl
sub
ret
testb
fisubrs
cld
fisttpl
iret
out
pop
lods
add
jmp
mov
addr16
imul
mov
sarb
adc
movsb
dec
popa
les
xor
in
cmc
adc
add
or
add
mov
push
jnp
ret
xchg
les
sub
mov
cmc
in
sbb
aam
inc
and
jp
daa
inc
mov
pop
xchg
add
pop
pop
daa
ret
and
pusha
jno
xchg
inc
jmp
and
adc
lds
aaa
jnp
lods
push
add
fstps
sbb
scas
repnz
sarl
and
fiadds
jp
add
add
and
lds
xchg
clc
push
adc
xchg
push
push
xchg
clc
xchg
cs
ds
sub
stos
mulb
dec
lahf
shl
xchg
notb
imul
lret
fstps
out
test
in
push
push
lahf
xchg
mov
loope
inc
sbb
dec
push
sub
loope
or
int
pop
cmp
push
or
push
xchg
xor
sarl
insl
enter
mov
or
out
mov
lods
movsb
inc
push
sbb
scas
mov
mov
sbb
adc
stos
movsb
jno
mov
cmp
lds
mov
mov
ret
scas
stos
out
push
dec
jmp
xchg
arpl
jecxz
divl
es
mov
test
xchg
jnp
jns
movsl
xchg
push
mov
sti
dec
cmp
inc
inc
xor
mov
fistpll
rol
out
push
test
jle
addr16
add
out
inc
push
fnstenv
test
xchg
mov
adc
mov
fs
out
sbb
dec
lods
inc
adc
add
push
aaa
loop
pushf
push
pop
and
out
push
mov
xor
leave
popa
pop
push
rcll
cmp
cmpsl
xor
pop
xor
ror
xor
push
popa
call
cld
scas
std
in
movsb
adc
sbb
sub
jmp
jge
push
roll
aas
mov
lret
adc
cld
test
jle
sbb
leave
adc
inc
pop
add
lods
cli
leave
jb
popl
xchg
out
stos
or
addb
je
inc
xorb
pushf
out
push
sub
addr16
bound
pop
sub
mov
mov
test
push
and
loope
push
rolb
xchg
mov
int
insb
lret
sbb
push
dec
or
push
mov
pop
xchg
cld
mov
push
adc
outsb
mov
sahf
xchg
add
adc
aam
push
cli
mov
pop
push
xor
sub
mov
add
out
movsl
inc
popa
mov
loop
xchg
lock
mov
movsb
stos
jbe
dec
xor
mov
mov
enter
cmp
scas
sub
ror
dec
hlt
add
pop
jl
lret
movsl
dec
inc
loop
stc
xchg
push
jbe
mov
inc
out
and
iret
dec
ficoml
jne
repz
pop
cltd
mov
xchg
xor
sub
gs
repnz
nop
adc
jno
lcall
pop
add
clc
sti
sbb
push
bound
ret
lds
lods
mov
ss
jne
sub
or
cmpsl
inc
sub
push
dec
in
jne
sub
out
pop
aaa
shl
cld
pop
pushf
fldl
fiadds
test
cmp
gs
or
add
mov
mov
jae
xchg
pop
or
data16
repnz
outsb
fsubp
mov
ljmp
shr
add
imul
ret
mov
ret
sub
ljmp
fs
ljmp
dec
pop
ljmp
in
out
out
mov
clc
inc
adc
sahf
movsl
mov
mov
fwait
xchg
xchg
xchg
sub
sbb
rolb
and
mov
jle
outsl
mov
push
cmp
dec
hlt
pop
lds
jg
std
sub
out
inc
aaa
out
and
in
sbb
and
repz
mov
test
push
jne
fcoml
mov
outsb
ds
jns
imul
pusha
loop
icebp
pop
mov
push
jge
lret
mov
aas
xchg
inc
and
ret
xor
sbb
xchg
add
cs
fldl
in
sbb
adc
imul
jmp
mov
sub
fidivrs
inc
jp
mov
sub
adc
ficomps
popf
pop
xchg
out
sub
ficomps
ss
daa
pop
sbb
push
xor
fmulp
dec
sub
insl
dec
cltd
or
xor
dec
inc
jne
sbb
dec
push
xor
jmp
fidivl
sub
fidivl
repz
icebp
out
dec
stos
push
out
push
sub
test
push
loopne
jg
icebp
fcmovb
out
mov
arpl
movsl
push
fadds
inc
daa
stos
add
or
xchg
fistpl
movsl
out
lret
push
data16
andl
add
addr16
lds
ljmp
sbb
xchg
pop
ja
test
repnz
add
sarl
jnp
lods
movsb
rol
add
rclb
sub
movsl
jecxz
movsl
repz
cltd
or
rorb
scas
insl
dec
fistps
popa
push
dec
pop
js
pop
mov
shl
pop
popa
mov
lahf
hlt
lret
shrb
cmp
sahf
andl
lea
icebp
push
leave
popa
mov
into
arpl
movsl
mov
jecxz
inc
xchg
out
sbb
js
sbb
push
push
ds
mov
outsb
aaa
mov
adc
adc
pop
xchg
pushf
xchg
dec
inc
or
sahf
pop
pop
cmp
push
xchg
xor
pop
mov
jno
sub
leave
popa
ror
je
lret
mov
inc
lahf
ljmp
xchg
in
or
mov
cmp
cmc
mov
loop
pop
lret
xor
mov
sbb
push
repz
mov
es
add
shll
jecxz
lea
mov
cli
mov
mov
jo
ljmp
cmp
ret
xchg
sub
out
mov
adc
xchg
cmc
jmp
lcall
inc
loope
mov
rolb
pop
ret
adc
dec
mov
pop
cmp
mov
aam
into
sbb
mov
push
shlb
xor
rcrl
mov
add
addr16
sbb
cli
inc
sbb
adc
jnp
jb
dec
ret
pop
mov
mov
pop
lods
mov
icebp
mov
jbe
lds
stos
in
adc
xor
ss
xor
mov
int
iret
mov
test
mov
roll
xchg
mov
test
mov
popa
lcall
inc
hlt
nop
adc
arpl
xor
jno
movsl
fs
call
or
mov
popa
imul
xchg
lcall
test
je
in
les
jns
jge
mov
mov
push
pop
dec
sti
push
jp
test
jle
lret
pusha
pop
jge
mov
call
cmp
jo
scas
adc
ret
add
pop
stos
mov
lcall
dec
aam
loopne
ja
add
and
stos
loopne
jp
sbb
push
lods
mov
push
xlat
jp
xchg
push
mov
xor
stos
repnz
lods
jle
adc
inc
das
stos
in
stos
out
sbb
nop
mov
adc
cs
call
popa
ret
fwait
xor
es
cmpsb
insb
and
xor
mov
xorb
mov
add
dec
jno
addr16
inc
adc
sbb
push
andl
les
pop
pop
jo
lods
jecxz
mov
stos
shll
jnp
and
insb
rcrl
or
movsl
sbb
lret
xor
mov
pop
push
insb
dec
mov
xchg
mov
imul
sbb
lahf
jl
xacquire
dec
lcall
inc
mov
add
xchg
mov
dec
sahf
sub
sahf
stc
fcoml
pop
loope
outsb
fldcw
pop
and
xor
dec
das
xor
fcompl
mov
cmpsl
mov
bound
dec
mov
xchg
jle
cmp
in
test
push
mov
jp
setp
stos
xchg
nop
fsubs
je
adc
test
lcall
push
jb
std
les
lock
xchg
sti
jle
inc
xchg
pop
mov
push
sbb
adc
jle
mov
xchg
enter
mov
or
bound
sbb
outsl
lock
xor
xchg
sti
loop
ljmp
js
insl
inc
xor
jae
lea
stos
add
fistpll
hlt
inc
call
xchg
imul
loope
les
push
add
xlat
or
daa
inc
repz
dec
jle
xorl
push
inc
push
push
mov
out
push
cltd
inc
or
cmp
xchg
xchg
pop
lahf
or
and
lahf
cmpsl
iret
aad
pop
mov
mov
xchg
adc
add
or
imul
mov
aas
add
mov
pop
scas
stos
cltd
inc
lcall
lcall
iret
jbe
adc
push
movsl
orl
testl
jmp
js
sub
and
in
and
lock
and
rol
mov
add
repz
mov
jmp
xor
mov
popa
xchg
mov
in
jb
dec
adc
sub
lods
mov
popf
popf
aad
jno
add
xchg
inc
shrb
sub
xchg
test
xchg
and
pop
xchg
jmp
cli
bound
aad
and
int
fwait
movsl
push
stos
aad
mov
sbb
mov
sbbb
inc
test
cmp
xor
lock
mov
rcl
lcall
adcb
sahf
enter
pushf
cli
jl
mov
or
xchg
pop
lcall
lods
lock
jmp
lahf
inc
sub
jle
mov
jns
xor
pop
mov
mov
jle,pt
imul
sub
add
jnp
stos
xor
ss
pop
sub
jbe
ret
pop
in
pop
popa
and
xchg
fbld
mov
cmp
push
jns
jp
push
int
mov
jmp
dec
add
movsl
or
hlt
out
inc
and
int
es
push
jp
mov
pop
pop
ljmp
xor
push
xchg
and
xchg
xchg
dec
adc
adc
xorb
jne
stos
push
jbe
mov
mov
inc
xchg
aad
jbe
add
push
stos
in
inc
add
inc
push
cli
pop
bound
cmp
sarb
je
mov
push
test
push
fistl
insl
mov
call
xchg
stos
inc
lcall
imul
test
dec
adc
xchg
or
jnp
mov
cmc
fst
mov
and
test
adc
pusha
dec
mov
icebp
sbb
xor
mov
insb
jns
or
fmull
push
xor
push
imul
int
pop
mov
sub
dec
xor
push
cmpsl
je
mov
das
add
test
sub
sbb
mov
fdivs
sub
jo
inc
xor
cld
and
push
jne
jnp
loope
xchg
lcall
jae
lods
or
arpl
adc
xchg
add
xchg
scas
sub
push
cwtl
cld
push
lods
repz
cmp
lods
xchg
addr16
adc
cs
imul
xor
xchg
push
daa
movsb
popf
inc
cmp
sbb
and
ljmp
mov
xchg
xchg
jg
sub
les
adc
inc
sub
scas
sbb
loop
aas
mov
push
push
pop
aas
stos
xchg
jg
sub
test
outsb
mov
in
add
xchg
mov
pop
pop
add
test
pop
xchg
push
pop
push
fsubs
cwtl
pop
rcl
dec
pop
andb
popa
test
cmc
cmpsl
mov
int3
sbb
bound
sarb
jno
andb
jbe
jle
mov
mov
xor
movsb
cmpsl
int
cmp
jno
jle
add
push
fs
pop
ja
or
dec
mov
lret
shll
pop
dec
jno
shll
mov
mov
xor
jno
jmp
mov
sbb
fnstenv
clc
cmp
setnp
aad
sbb
mov
outsb
je
jecxz
push
pop
ds
mov
xor
pop
mov
adc
push
add
int3
stos
push
inc
hlt
cmp
sar
or
dec
mov
ljmp
inc
push
aaa
loop
push
aaa
arpl
pop
jle
call
inc
test
push
or
pop
in
xchg
inc
jno
jle
test
jl
stos
xor
add
jp
cmp
dec
lcall
out
push
pop
bound
andl
mov
push
lret
pop
sbb
in
or
push
lahf
mov
in
mov
lret
repnz
push
dec
mov
hlt
lahf
ljmp
lret
scas
aam
xor
stos
xchg
leave
scas
stc
call
aam
pop
dec
data16
movsl
in
aam
xor
dec
shrb
add
sub
aas
stos
inc
dec
or
and
stc
enter
outsb
or
mov
inc
popf
mov
fcmovu
inc
lods
or
addl
add
jb
pop
adc
mov
dec
adc
sub
sbb
lea
std
insl
aaa
xor
or
sbb
dec
outsb
int
jb
xchg
cli
lods
push
lahf
inc
loopne
fsubs
mov
inc
cmpsb
notl
xor
xchg
or
scas
inc
or
pushf
shll
sub
inc
and
inc
sbb
and
cmp
and
xor
mov
sti
insl
mov
jns,pt
cmp
adc
out
mov
aam
test
lea
mov
push
inc
adc
aas
xchg
rcrb
mov
or
inc
dec
fdivrl
sbb
adc
inc
cwtl
sti
jae
ss
cmp
cmp
mov
add
je
orb
ds
xlat
mov
test
fwait
lcall
dec
xchg
mov
out
cld
not
mov
hlt
out
sbb
xlat
jle
adc
inc
jb
ss
int
xchg
mov
inc
rcr
imul
mov
ljmp
pushf
mov
clc
sti
mov
rcrb
arpl
popa
aam
and
push
lret
fadd
and
xor
cmp
insb
xlat
mov
mov
mov
jb
push
xor
dec
adc
and
xor
push
inc
add
sub
in
sbb
gs
jg
jns
clc
cs
enter
lcall
int
adc
xchg
test
mov
jecxz
daa
mov
out
xchg
jno
sbb
sub
arpl
mov
lret
leave
fwait
insl
jmp
mov
fwait
sub
leave
test
xchg
sahf
call
inc
insb
pop
push
bound
fwait
mov
je
aam
arpl
test
add
mov
mov
shlb
sub
hlt
stos
mov
sub
lahf
sub
lock
add
scas
clc
pop
arpl
dec
adc
cmpsl
mov
dec
push
mov
inc
xor
dec
jecxz
rol
jecxz
jp
stc
test
in
adc
movsl
mov
mov
add
es
and
ret
pop
inc
mov
aad
xor
pop
stos
mov
es
mov
ljmp
mov
mov
sbbl
ljmp
add
pop
fiaddl
loopne
call
mov
inc
mov
call
pusha
dec
fsubrl
icebp
mov
fldenv
sbb
fdivrs
adc
dec
push
inc
mov
pop
mov
les
pop
mov
cs
jge
int3
aam
lcall
or
push
subb
sbb
imul
paddusw
es
int3
push
fcmovnb
cld
lds
adc
int
pop
setno
lods
stos
adc
outsl
popa
sbb
scas
adc
testb
popa
xor
cs
pop
sbb
sahf
fdivrs
ss
mov
rol
loop
aaa
inc
test
lods
int
dec
xlat
sahf
xchg
call
sbb
push
pop
lods
xchg
movsl
sub
sbb
hlt
stos
ljmp
in
das
mov
je
jnp
movsl
shll
fcompl
jo
lcallw
sub
adc
fsts
outsl
rorl
push
cmc
pop
xor
push
mov
pusha
adc
add
mov
dec
call
push
inc
push
xlat
adcl
jbe
push
enter
mov
cltd
imul
pushf
cli
add
jno
lahf
mov
jbe
mov
int3
cmc
shlb
inc
cwtl
pop
scas
mov
pusha
push
icebp
pop
cltd
lret
mov
loopne
cmpsl
sbb
loop
sbb
sub
pop
add
fsts
packsswb
les
clc
pop
gs
pop
xlat
jne
adc
mov
or
popa
in
hlt
es
adc
in
push
test
or
aaa
lret
inc
cs
sub
or
adc
icebp
data16
dec
popa
add
inc
in
cwtl
sbb
pop
adc
movsb
inc
inc
or
add
imul
sbb
push
outsl
cmpsl
adc
andb
mov
enter
mov
dec
jbe
rorl
jg
jp
xchg
or
outsl
push
fisubrs
push
out
add
add
lea
loopne
and
popa
adc
mov
orl
xor
jo
cwtl
or
push
dec
pop
test
icebp
dec
sub
lock
aas
in
dec
sahf
ds
outsl
jno
xlat
dec
push
adc
lret
imul
mov
scas
mov
popa
aaa
add
mov
sbb
xchg
mov
add
rorl
outsb
jno
fst
or
stos
inc
imul
fidivl
in
jb
les
ss
enter
sbb
xor
sub
enter
aam
test
std
sub
inc
shlb
cmpb
std
mov
mov
out
and
mov
fnstcw
sti
inc
sbb
xchg
and
stc
xchg
fnsetpm(287
sbb
pop
xchg
lods
cli
aad
stc
mov
mov
enter
jae
lret
lret
scas
mov
mov
cmpsb
cmp
or
jg
push
or
cmp
jmp
test
stc
jne
jno
lret
xlat
or
dec
adc
fistpll
pop
inc
ja
rclb
adc
mov
subb
je
jle
inc
sbbb
bound
jbe
cmc
cmp
mov
mov
sbb
icebp
gs
std
mov
popf
in
cmp
das
pop
lcall
cmpsl
xchg
icebp
xchg
or
or
into
addr16
outsl
dec
in
lahf
mov
repz
dec
lahf
jno
prefetcht0
icebp
push
or
jbe
out
out
in
xor
or
insl
jg
or
push
repnz
adc
xor
sti
push
dec
jp
sub
in
outsb
data16
push
push
fsts
bound
add
mov
push
lret
mov
push
cmp
adc
inc
movsl
rclb
test
or
fcoms
mov
gs
jmp
jge
popf
lds
or
clc
mov
xorl
pop
mov
stos
cs
pop
imul
push
lahf
dec
and
mov
loop
pop
jne
aam
jmp
imul
mov
dec
add
in
dec
loop
fwait
jp
movsl
dec
sbb
pop
sahf
call
mov
les
movsb
sbb
pop
je,pt
cltd
ja
jmp
inc
push
loope
jb
icebp
xor
loope
sbb
lods
pop
sbb
sbb
sbb
lods
sti
movsb
adc
fnsave
mov
adc
stc
push
cmpsb
aaa
inc
or
in
fwait
xor
pushf
int
dec
or
or
aaa
dec
popa
movsb
xchg
lods
xchg
fnstcw
mov
fnstenv
fldcw
xor
iret
xor
aad
xor
aad
mov
cmp
pushf
xor
int
popf
aad
sub
out
out
roll
pushf
cmpsl
jae
dec
xor
ror
gs
nop
fdivrs
mov
sub
imul
pop
inc
stos
int
pop
orl
out
int
cmpsl
mov
xor
mov
inc
adc
mov
dec
sbb
push
les
aam
ror
pop
icebp
push
fists
repz
loop
push
es
pop
ljmp
push
xlat
adc
pop
lret
mov
add
mov
jno
add
in
xor
sub
loopne
stos
bound
jno
mov
inc
pushf
jg
mov
mov
adc
or
xchg
inc
xchg
pop
push
mov
mov
fstpl
xchg
push
dec
aaa
mov
jp
mov
jle
clc
outsb
dec
fadds
imul
and
sarl
xchg
xchg
imul
stos
fcoml
ret
jp
fdivrs
je
jbe
ficomps
xchg
and
lods
mov
scas
push
mov
loope
mov
adc
andb
push
lahf
shlb
popa
dec
sahf
js
add
dec
lods
dec
insb
or
subb
mov
arpl
add
push
jnp
jmp
adc
mov
adc
dec
and
jge
inc
xor
inc
mov
nop
cmpsb
jnp
or
orl
pop
aam
int3
iret
push
jbe
cmpsl
imul
out
jae
fsubr
and
cld
loope
xchg
jo
repz
iret
test
dec
adc
roll
enter
sub
mulb
xchg
cs
call
sub
xchg
movsb
mov
sub
and
std
add
sbb
loope
cmpsb
bound
das
xchg
inc
push
xorb
repnz
test
mov
pop
addr16
add
mov
cmpsb
jno
movsl
adc
je
add
push
inc
fbstp
cmp
gs
xchg
jle
dec
aaa
push
mov
add
sbb
xchg
lcall
test
xchg
fwait
sbb
inc
add
xchg
xchg
jbe
mov
in
sub
aaa
xchg
mov
adc
sub
push
ljmp
and
pop
mov
lods
add
cmp
std
enter
cwtl
mov
fisubrs
addr16
sub
adc
scas
mov
xor
test
lret
test
popa
or
adc
ds
stos
hlt
stc
movsl
cltd
push
test
or
fsubl
adc
pop
sbb
stc
aaa
mov
sub
lods
divb
movsb
insb
cwtl
mov
and
cmpsl
out
add
ljmp
out
mov
andb
mov
dec
es
sub
push
jg
xchg
sub
xor
mov
pop
pop
pop
out
jo
cmp
sbb
mov
mov
push
xchg
inc
sub
ficoml
rcrl
or
cld
jno
dec
add
out
push
mov
mov
inc
aaa
pop
push
cmp
jmp
xchg
push
cwtl
pushf
mov
cld
cmpsb
stos
inc
popa
inc
mov
xor
outsb
nop
xor
in
inc
cmp
sarl
shll
sbb
and
cmp
adc
int3
pop
mov
jae
cmpsb
in
push
repz
shll
mov
negb
mulb
mov
jl
stos
xchg
loope
popf
test
hlt
lahf
mov
push
sbb
sahf
leave
or
dec
fs
je
jp
cltd
pop
test
mov
adc
jge
cltd
adc
mov
inc
sahf
cltd
data16
enter
cltd
sub
cs
movsb
fsubs
mov
cltd
mov
xchg
pop
stos
mov
cltd
jbe
std
gs
push
mov
mov
inc
xchg
sbb
jns
mov
mov
stos
enter
inc
and
or
mov
les
loop
or
sbb
test
lds
movsl
cmc
sub
inc
hlt
xchg
jp
test
enter
pop
pop
movsb
adc
xor
addr16
aad
sti
jnp
hlt
xchg
pop
out
xchg
gs
xchg
popa
movsb
mov
and
mov
test
pop
jecxz
push
sbb
adc
xchg
je
xchg
inc
test
push
mov
xchg
dec
fnsave
or
shl
xchg
cmpsb
dec
lea
sub
pop
jne
out
lea
mov
lea
aas
lods
mov
push
js
out
jbe
das
mov
enter
pop
adc
fistpll
sbb
dec
sub
inc
sub
outsl
test
and
scas
cld
arpl
popa
mov
aaa
xor
or
cmc
hlt
cmp
jmp
ja
inc
lahf
cmpl
inc
cmp
add
xorl
sub
jge
inc
imul
jne
push
sub
loope
insl
cmp
dec
mov
hlt
leave
popa
pop
jns
sarl
jns
xchg
jns,pt
cmp
adc
fldcw
sub
cmpsl
and
xor
int
add
popa
ljmp
std
jne
fwait
gs
popa
inc
jne
gs
jno
sbb
jno
xor
jno
xor
adc
inc
mov
mov
insl
jne
test
dec
inc
insl
pop
inc
or
pop
cmpsl
filds
xor
sub
lods
vmaskmovdqu
stc
idivl
xchg
std
call
imul
sub
insb
imul
jge
xor
lock
cmp
pop
add
push
enter
int3
gs
push
sub
push
sub
in
dec
mov
sahf
int3
in
add
inc
cld
repnz
test
jnp
xor
dec
rolb
scas
mov
dec
outsb
mov
je
imul
and
shr
mov
jno
xchg
cmp
dec
outsl
into
adcb
loop
push
enter
movsb
repnz
sbb
dec
icebp
push
and
sub
add
dec
mov
sub
add
leave
adc
es
enter
clc
popa
inc
sub
insb
rcrb
xor
addl
fs
popa
roll
push
adc
fs
sbb
pop
fsubrp
add
adc
fdivl
xor
and
push
xchg
test
cmpsl
enter
cwtl
out
mov
adc
xchg
mov
jge
xor
fldenv
das
xor
cld
jne
bound
add
mov
incb
xchg
and
jecxz
sarb
mov
jecxz
and
mov
sbb
fwait
add
mov
dec
fcoms
inc
xchg
mov
les
xor
inc
mov
xchg
dec
movsl
test
iret
jns
int3
mov
add
xchg
inc
jbe
pushf
pop
mov
xchg
add
inc
pop
aam
mov
insl
fnstenv
xor
xlat
cmp
jbe
pop
mov
mov
fsts
mov
push
loop
push
aas
sub
inc
out
xchg
lods
lcall
jbe
push
lods
add
jp
dec
push
sub
cmp
adc
fwait
cmp
mov
jb
mov
subb
in
dec
pop
loop
dec
aas
sub
adc
sti
dec
jp
scas
dec
xchg
inc
stos
dec
cwtl
test
inc
aaa
mov
frstor
add
inc
out
lcall
imul
out
lcall
lahf
adcb
sub
movsl
cli
add
cmp
add
cmp
scas
fsubl
outsl
cmp
add
movl
addr16
fwait
cmp
mov
xor
mov
mov
fiadds
cmp
pusha
negl
inc
mov
inc
sbb
xchg
inc
jl
pushf
movsl
repnz
popw
mov
shrl
sub
popf
fwait
int
loop
notl
sbb
std
inc
jmp
jbe
cmc
sub
mov
inc
and
sub
sahf
cmp
mov
sbb
ja
inc
xchg
sahf
add
loop
sahf
xor
sub
push
xor
xor
jl
adc
and
lods
and
inc
pop
jge
loopne
rorl
fadd
sbb
mov
rcrl
pop
pop
xchg
xchg
pop
dec
rcl
inc
mov
xor
jg
jo,pt
lods
sti
out
adc
sti
or
scas
and
jmp
mov
mov
sub
mov
inc
aas
sub
outsl
lods
and
mov
pop
dec
outsb
je
push
jno
aam
out
jne
aas
inc
fmulp
jmp
jb
pushf
jns
xor
lret
xor
repnz
cmp
dec
jns
nop
mov
test
ret
cmpsb
and
mov
xor
dec
mov
inc
mov
cmp
xchg
iret
test
ret
pusha
xlat
inc
push
xorl
push
add
xor
push
ja
and
sub
jp
std
ds
add
lea
jnp
movsb
mov
inc
bound
arpl
adc
clc
cmpsl
add
or
orb
and
fcomi
test
push
sahf
add
add
xor
ja
into
mov
inc
adc
push
dec
shr
mov
ret
std
repnz
xchg
jl
inc
and
scas
add
xor
ss
mov
mov
mov
push
xor
jae
and
dec
cmp
stos
inc
xor
dec
cmp
inc
xor
sahf
mov
mov
inc
jl
out
push
xchg
ds
int3
mov
inc
je
fiaddl
add
jns
jnp
insl
cwtl
xor
xchg
test
stos
notb
sbb
sahf
pushf
mov
fdivp
add
inc
dec
adc
dec
fsts
sahf
stos
mov
sarl
jle
imul
xor
scas
repnz
sbb
pop
lcall
sahf
push
jno
xor
hlt
mov
mov
push
test
leave
cwtl
dec
adc
push
test
repnz
sahf
ljmp
mov
add
mov
mov
in
lea
xchg
add
divb
out
outsb
mov
cmpxchg
cmp
leave
and
outsb
xor
xor
repnz
test
sbb
cs
inc
test
enter
bound
push
cwtl
aas
mov
stc
and
lcall
shrl
mov
lahf
outsb
inc
jp
mulb
add
sbb
stos
out
dec
pop
int3
and
and
sbb
cmp
xchg
add
xchg
cmp
gs
and
ret
mov
jmp
ret
mov
add
aaa
pop
negb
dec
jbe
jge
sahf
lcall
cld
mov
popf
daa
clc
mov
mov
rcrl
cmp
push
fidivrs
add
les
add
pop
testb
sarb
dec
cltd
inc
sub
cmpsb
sbbb
int3
dec
fs
inc
push
xchg
icebp
popa
mov
arpl
loope
arpl
xor
outsb
popa
cmc
and
mov
pop
data16
dec
lret
js
cmp
dec
mov
push
inc
cmp
stc
xchg
or
in
dec
lea
xor
xor
and
testb
das
inc
scas
mov
arpl
flds
sub
sub
xor
loopne
stc
xor
pop
jns
sbb
orl
xor
aad
insl
insl
inc
sub
cmp
arpl
xchg
pop
sub
iret
int3
popf
imul
ret
xchg
push
sbb
xchg
pop
sub
jno
and
shll
pop
inc
mov
cmpsl
push
jb
inc
adc
mov
mull
cld
adc
mov
mov
mov
and
adc
sub
arpl
jle
divl
inc
cmp
sbb
or
ja
jb
jb
roll
adc
dec
mov
inc
jno
ss
leave
fidivrs
push
gs
push
mov
mov
insl
dec
lods
add
mov
jno
popa
pop
jno
xlat
int3
jno
xchg
ss
outsl
sub
int3
push
push
gs
shll
jno
aad
daa
arpl
popa
push
mov
pop
iret
xor
push
test
roll
inc
loopne
cmp
pop
cmp
or
sub
daa
lods
and
push
cmp
jb
jne
shl
add
lea
dec
je
or
xorl
sub
test
inc
dec
sbb
xor
mov
jne
and
xor
out
adc
inc
es
dec
sub
cld
shlb
cli
and
xchg
sub
sbb
jno
inc
nop
cmpsl
insl
push
rclb
xchg
adc
xchg
sub
in
pop
adc
pop
pushf
push
inc
sbb
xchg
testb
jmp
cmp
adc
xor
popf
sar
pop
xchg
sub
pop
ds
and
mov
lahf
jno
popa
stos
bound
dec
xor
inc
cmpsl
and
cmpsb
popf
sbb
jge
out
or
sbb
popa
test
jno
aaa
rorl
lcall
cld
push
lods
test
mov
lea
int
sub
pop
ss
mov
push
lcall
in
jmp
test
push
jecxz
cmpl
or
lret
sbb
decb
jno
int
jae
sub
pop
mov
vpsubsw
out
popa
dec
adc
jno
stos
movsl
sbb
xor
pop
mov
inc
ret
adc
push
inc
inc
lods
shrl
and
or
lods
cmp
lahf
sub
cmp
push
xor
fs
mov
loope
scas
loope
addb
inc
fstps
leave
daa
cmp
cmp
push
shrl
rclb
pop
ss
jns
push
mov
inc
inc
mov
enter
leave
or
repnz
sub
dec
xchg
testb
xor
mov
sub
xchg
jl
mov
call
mov
push
les
jge
jmp
jmp
outsl
xlat
and
int
xchg
sbb
sarb
in
cmp
mulb
cmp
stc
inc
shlb
inc
dec
out
xor
xor
insb
push
outsl
xor
and
mov
xor
icebp
mov
loope
dec
dec
sbb
fs
adc
sbb
popf
test
xor
addl
in
dec
aam
sub
jp
into
addl
insl
imul
bound
sbb
aas
push
andl
loope
hlt
inc
xchg
mov
inc
fcoml
dec
dec
inc
lcall
or
or
cmp
inc
jecxz
mov
sub
arpl
or
gs
shl
push
insb
outsb
cltd
jb
movsl
nop
rolb
jnp
bound
mov
aaa
xor
add
fcoms
popa
push
cmp
imul
imul
jb
jmp
mov
inc
cmc
sbb
dec
imul
inc
les
jns
in
sbbl
and
clc
inc
inc
inc
add
gs
sbb
lret
jecxz
ds
mov
mov
mov
setno
mov
jmp
aas
pop
cmpsl
adc
jno
ret
inc
gs
xchg
xor
fdivl
push
sti
sub
insl
mov
inc
fwait
adc
pop
inc
and
mov
pushf
mov
xchg
icebp
shlb
in
inc
cmpsl
xchg
lret
ja
xchg
xor
cwtl
das
push
ficomps
dec
outsl
orb
or
imul
mov
and
dec
cmp
inc
rcrl
jns
push
clc
std
ror
dec
data16
lods
mov
popa
addr16
mov
test
sub
mov
mov
pop
ret
adcb
in
xchg
scas
mov
jecxz
imul
push
shll
jno
xchg
cmpsb
xor
xor
sbb
incb
movsl
ja
xchg
addr16
dec
sub
popa
imul
push
jmp
imul
xor
out
and
les
addr16
imul
jle
push
xchg
dec
pop
lcall
mov
sub
repnz
addb
popa
inc
imul
add
mov
and
insl
es
mov
mov
loop
icebp
ds
mov
lods
push
gs
xchg
push
jge
in
cli
and
imul
inc
and
in
dec
imul
inc
or
inc
jno
adc
in
in
add
jbe
dec
jmp
fldl
xlat
or
roll
inc
mov
subl
inc
data16
cmp
sbb
or
push
mov
and
pushf
pop
mov
and
mov
insl
loopne
push
mov
bound
xchg
movsl
adc
testb
xchg
ret
adc
imul
jne
adc
push
test
xchg
pusha
jno
cmp
push
dec
popa
cld
sub
mov
or
sbb
add
outsb
xor
loop
cmp
bound
loope
and
notb
popf
lcall
mulb
xchg
dec
loopne
jb
lret
cmp
add
push
icebp
and
rol
es
inc
dec
cs
popf
in
pop
push
jb
pushl
sbb
mov
or
push
xchg
aaa
cmp
imul
lea
jno
lret
ds
xchg
pop
lret
ss
fldenv
pushf
lea
cld
lods
in
les
add
fsubs
shl
cmp
ss
popa
mov
stc
inc
inc
inc
loopne
adc
mov
and
cmp
push
pop
push
pop
push
or
call
sub
mov
inc
jno
insb
xorl
imul
cmp
jae
mov
and
gs
and
ja
sub
out
add
mov
pop
pop
roll
enter
les
shll
cld
push
push
jb
test
pop
ret
pop
mov
lret
inc
and
and
jne
clc
dec
xor
shrb
lock
jl
xchg
dec
push
int
inc
repnz
sysexit
xor
das
xchg
mov
popa
mov
mov
sub
mov
inc
and
repnz
xchg
mov
cld
sub
dec
test
add
ds
dec
bound
sbb
test
daa
xor
les
pop
inc
imul
sub
inc
ss
notl
and
insb
push
xchg
inc
mov
xor
push
mov
push
push
pusha
data16
int3
or
or
dec
das
test
cli
mov
inc
loope
imul
lret
es
push
mov
jg
movsl
neg
mov
xchg
daa
shlb
pusha
mov
xor
call
xchg
repnz
dec
stc
jle
cmp
andl
pop
fistpll
adc
push
call
ss
xorl
insb
jecxz
idivb
daa
and
sti
or
or
in
push
mov
aam
imul
mov
xor
xchg
sahf
aad
mov
stos
cs
add
loope
mov
jno
push
jp
bound
pop
mov
mov
arpl
pop
imul
lret
push
inc
cmp
mov
mov
add
jno
lock
outsb
xchg
adc
push
push
jge
dec
aad
dec
add
cmpl
dec
test
xor
sbb
and
arpl
push
ds
jmp
sbb
mov
mov
pop
inc
lcall
xor
jnp
test
movsb
sbb
dec
cmp
outsl
rol
es
sbb
mov
push
push
sub
add
loop
cmp
ss
jb
push
sub
sub
aam
popl
sub
jno
fnsave
sti
loop
xor
push
inc
lcall
xor
push
ret
iret
movsl
push
notl
test
mov
sub
mov
inc
sub
sub
testb
xor
popa
cmp
bnd
adcl
lods
les
pop
mov
pop
xor
fdivs
sub
jle
adcb
loope
in
dec
xor
mov
popf
daa
pop
test
scas
fidivl
leave
shrb
pop
push
xor
nop
mov
int
and
mov
in
repnz
cli
dec
mov
roll
mov
xor
mov
test
mov
scas
jne
shll
popf
shlb
cmpl
std
daa
sbb
xor
mov
in
sub
or
rcrl
lcall
sub
push
cmpsb
lds
and
aaa
dec
imul
in
inc
fadd
cmp
dec
or
xor
insb
push
add
sarb
mov
xchg
movsl
and
ja
and
in
call
dec
xor
and
andb
sub
les
inc
xor
fs
ja
push
sbb
push
out
push
ds
cmp
jae
pop
mov
push
cld
inc
cmp
in
enter
dec
xor
in
shrl
shl
jg
add
xor
jae
aas
mov
test
xor
sub
into
lcall
inc
jecxz
push
in
mov
mov
dec
jns
and
ja
or
int
pop
imul
test
icebp
rorb
push
cmp
scas
dec
in
jnp
pop
and
or
push
jmp
das
in
pop
pop
inc
or
in
call
leave
mov
xlat
cmp
outsb
enter
sub
add
repnz
and
call
dec
dec
lock
popa
loope
int
xor
imul
cs
jb
push
push
push
das
sbb
imul
inc
inc
lds
leave
fs
rol
call
jl
sbb
push
jns
inc
inc
ljmp
arpl
insb
repnz
arpl
jle
stos
or
stos
inc
pop
flds
inc
ljmp
mov
mov
jg
stc
fwait
inc
addr16
roll
jbe
cmc
xor
loope
aaa
cmp
inc
sub
jnp
gs
insb
jmp
push
lds
sub
ret
movsb
bound
inc
jne
mov
fbld
stos
rorb
or
in
xor
xchg
push
idivb
mov
lods
jbe
sbb
dec
repz
dec
xor
fcoms
ljmp
das
mov
push
and
sbb
inc
loop
jecxz
xchg
cmp
imul
sbb
dec
sahf
adc
cs
add
mov
cmp
in
jno
fwait
jg
xor
loopne
sbb
out
mov
sub
idiv
inc
xchg
inc
aaa
push
icebp
faddp
int
int3
cmpsb
mov
sub
dec
ret
filds
mov
pop
xor
push
subl
ja
dec
movsb
xor
mov
xor
mov
push
xchg
adc
dec
cltd
pop
sbb
andl
push
jno
divb
popa
mov
push
sub
les
push
test
cmpsb
mov
and
inc
mov
adc
ret
push
cmp
sbb
push
das
inc
push
push
out
jge
jmp
cltd
test
jno
les
mov
cmp
les
sub
int
cmp
push
aas
cli
xor
pop
or
jbe
repnz
jl
push
jmp
bound
rcl
dec
mov
pop
shl
xchg
faddp
outsb
xor
push
hlt
sahf
lcall
out
mov
add
jns
enter
mov
int
dec
leave
xchg
jecxz
and
xlat
pop
les
inc
inc
xlat
imul
push
xor
adc
pop
add
pop
lret
pop
rorb
imul
in
and
iret
cs
adc
rcl
sub
or
notl
cltd
popfw
add
sub
es
xor
bound
cmp
out
push
pop
xor
sahf
mov
pop
pop
jnp
in
jge
sbb
into
jle
jl
shll
cld
in
push
shll
addr16
ljmp
cld
out
aas
ja
dec
imulb
stos
daa
les
and
ror
mov
mulb
int3
loop
sub
sub
loope
sub
dec
and
xchg
sbb
inc
mov
xchg
inc
xor
xchg
mull
lods
push
adc
sahf
mov
subl
jne
xor
lea
pop
rcll
les
sbb
push
jno
daa
adcb
inc
sti
mov
popa
xor
add
or
push
pop
add
inc
or
fwait
xor
jnp
rcrl
jns
int
adc
addl
gs
sbb
std
sub
scas
xor
aam
jg
or
sub
push
sub
and
addl
jne
push
in
jg
mov
lods
xor
inc
sub
mov
jge
mov
or
andl
xor
arpl
jp
inc
test
ffree
and
sub
pop
mov
popa
jno
cmp
aaa
push
jecxz
das
sub
pop
dec
jmp
lret
sub
mov
cmpsl
xchg
and
lods
cld
mov
movq
sti
jmp
inc
inc
idivl
push
pop
mov
scas
push
sbb
lcall
mov
aaa
mov
imulb
aam
and
popa
cmpsl
mov
sub
rdmsr
add
push
pop
shrb
leave
push
xor
and
adc
sub
es
mov
icebp
in
inc
or
scas
sub
aam
pop
sub
shlb
sahf
and
in
lret
xchg
adc
mov
inc
adc
scas
xor
lahf
xlat
mov
outsb
mov
push
xchg
notb
ja
popa
cmpsl
xchg
and
cmp
jp
das
push
jp
fadds
mov
push
aad
sbb
push
sbb
mov
cmp
push
les
jne
dec
cmp
mov
fsubl
mov
out
cmp
cld
and
push
or
inc
sbb
cltd
dec
int
mov
xor
ret
testl
xchg
lcall
popa
call
push
pop
xor
loopne
ret
jnp
enter
dec
out
jle
add
lahf
out
sbb
pushw
ret
jae
inc
dec
sahf
out
popw
pushf
inc
pop
out
cmp
jb
das
test
inc
cmp
ret
lock
xchg
mov
pop
inc
out
push
jmp
lret
mov
std
mov
sub
lret
cs
cltd
bnd
out
dec
cmp
jnp
or
test
cmp
das
filds
sub
pop
jne
aaa
fldenv
js
and
xor
stos
addr16
jg
les
ss
dec
movsb
mov
and
fs
or
ljmp
iret
xchg
sub
icebp
or
cs
call
add
aas
push
and
push
loope
push
outsb
dec
xchg
cmp
inc
xchg
xor
add
dec
loop
movsl
ljmp
xor
enter
fisubl
loop
inc
out
jno
add
movsl
push
fwait
ljmp
andl
sbb
cld
addb
mov
or
xor
fs
sub
sbb
je
and
cli
cmp
jmp
inc
mov
push
adc
imul
bound
jo
cs
ja
jae
pusha
mov
cmp
rcll
or
sub
mov
adcl
scas
sbb
sub
pop
inc
mov
push
pop
push
and
jns
xchg
popa
mov
push
mov
push
movsb
repz
mov
movsb
xchg
fwait
sbb
fs
xorb
stc
xlat
fisubs
ss
leave
stos
and
aaa
jle
dec
div
stc
js
cmp
cmc
aad
adc
mov
and
cld
ljmp
es
adc
popa
add
sbb
repnz
jle
mov
inc
lds
test
inc
dec
mov
push
and
pop
movsl
sub
xor
adc
in
and
aad
shrb
rcrb
mov
sub
xor
xchg
mov
xchg
imul
add
push
movsb
andb
mov
dec
int3
mov
les
sub
idivb
inc
xchg
mov
mov
jp
je
cld
roll
popa
mov
add
dec
imul
stos
fisttpl
bound
shll
xchg
orl
push
inc
int3
sub
gs
pop
es
out
imul
shll
add
dec
dec
dec
jbe
dec
push
addb
lcall
mov
lcall
int
std
test
fs
or
jbe
cmc
repnz
hlt
cmp
sub
jmp
adcl
adcl
js
cmp
test
adc
sub
jbe
inc
jns
out
sbb
ret
std
insl
les
and
int
fwait
popa
and
es
sbb
lret
or
inc
loop
sbb
jle
jno
xchg
jno
movsb
sahf
mov
xchg
dec
adc
mov
xchg
dec
imul
fdivrs
push
addr16
push
iret
push
pop
xor
push
push
jo
mov
outsb
push
mov
mov
sub
popa
enter
or
in
in
jnp
add
add
insb
leave
cmp
testb
jb
out
sub
mov
mov
fldcw
dec
aad
jmp
cmpsl
pushf
inc
cmp
icebp
inc
and
jno
sbb
clc
and
dec
movsb
xor
dec
xchg
movl
mov
sub
mov
in
push
ret
imul
call
adc
inc
cmpsb
mov
or
jno
test
sbb
out
enter
shlb
les
aaa
sbb
insl
push
sbb
sub
push
jb
fcoml
pop
in
insb
pop
mov
lods
jns
sbb
jne
push
mov
repz
sarb
pop
mov
sahf
aad
imul
bound
ret
add
stos
mov
pop
pop
sarl
jecxz
aam
add
and
mov
sub
fcmovnbe
xor
adc
sub
mov
cs
mov
dec
cmc
or
leave
inc
and
insl
cmpsb
cld
dec
push
push
push
sbb
pusha
jbe
mov
ret
outsl
adc
mov
out
dec
mov
aad
into
pop
push
call
sbb
push
dec
xor
mov
inc
not
cmp
lret
cmc
lods
push
lret
push
jmp
sub
mov
xchg
mov
cmpsl
bound
xor
nop
adc
fists
pushf
loope
mov
push
dec
and
mov
test
adc
add
mull
xlat
push
jecxz
data16
jp
xchg
repnz
xor
jecxz
mov
dec
das
aam
sub
sub
sti
mov
lods
jne
xchg
xor
jae
and
mov
xor
push
cmp
inc
inc
and
jmp
mov
rcpps
pop
inc
in
xchg
inc
dec
jecxz
cli
mov
fsubp
add
push
rcll
sub
sbb
mov
sub
inc
xchg
sub
add
fsubl
adc
gs
mov
cmp
rolb
lods
ficoms
cmp
outsl
mov
push
out
push
xor
ss
pop
add
mov
test
arpl
jbe
subl
aaa
into
dec
arpl
mov
sahf
je
push
pop
and
pop
in
fidivl
loope
popa
les
inc
imul
sbbl
jecxz
add
and
push
lods
icebp
add
cmp
lods
jb
sbb
push
sub
xor
cmp
sarb
data16
fwait
cwtl
hlt
loope
scas
xchg
mov
jp
or
mov
sahf
shrl
and
add
leave
rorb
xchg
popf
clc
je
cmp
sbb
add
mov
ret
xor
jl
jp
out
rclb
inc
cmp
pop
mov
mov
inc
insl
jp
bound
lret
addl
xor
cmpsl
xchg
sbb
icebp
ret
xor
mov
sahf
xor
or
sbb
jge
test
xlat
cmp
test
bound
pop
xorps
inc
xor
mov
mov
movsl
lds
sub
and
ljmp
leave
fstl
fisubl
mov
adc
adc
or
test
push
add
fs
pop
push
out
cmp
add
pop
sub
popa
sbb
or
xor
aad
pushf
cmpl
addl
mov
fsincos
lret
inc
or
xchg
jmp
insb
sbb
lock
dec
sbbb
es
enter
arpl
cmp
pop
daa
fwait
inc
ds
in
push
mov
ret
inc
cwtl
inc
aaa
cld
mov
cmp
das
push
popa
adc
divb
leave
sarb
lock
adc
jns
cmp
loope
xchg
sbb
jecxz
inc
sub
xor
in
fldl
aaa
test
shll
xchg
jmp
dec
and
inc
movsl
xchg
data16
outsb
jecxz
das
add
mov
mov
jne
sbb
adc
and
les
sti
in
xor
and
addr16
popa
mov
jb
and
push
add
loop
ret
in
les
jns
cmc
mov
add
inc
les
xor
in
and
jae
push
inc
loop
es
pop
xchg
repnz
sbbl
int3
cmpsl
sbb
jns
imul
in
and
inc
insl
fisubrs
cli
insl
ja
inc
xor
xchg
lods
inc
jle
test
push
ret
push
cmp
mov
stos
fcom
mov
inc
ss
cs
jmp
subl
cltd
xor
cmpsl
rolb
lds
cmp
inc
xchg
lods
in
add
cmp
xorl
add
or
push
xor
xchg
xorb
bound
in
aaa
popa
leave
xor
add
pop
xor
add
jns
bnd
push
pop
xchg
inc
push
jno
dec
xchg
je
dec
mov
and
fs
xchg
cmp
push
int
gs
mov
test
data16
stos
push
shll
in
inc
adc
pop
push
gs
push
cmp
adc
mov
lds
les
shll
and
inc
cmp
inc
dec
sbb
push
jno
pushf
test
dec
movsb
jp
cltd
push
test
sarl
loope
icebp
inc
add
mov
int
inc
inc
adcl
jb
subb
mov
fnstsw
xchg
inc
popa
dec
mov
jno
es
loopne
test
lock
and
jb
out
mov
sbb
nop
sub
aaa
test
shr
out
jge
adc
cmp
inc
xchg
adc
push
rcrb
clc
pop
ficoms
push
xor
pushf
jge
in
push
gs
cmp
test
shrl
push
dec
popa
cmc
adc
or
pop
daa
into
pop
shll
in
xor
jno
aaa
xchg
sub
icebp
faddl
xor
test
test
jg
pop
push
daa
outsb
sbb
std
push
movsb
adc
fwait
sub
outsl
mov
push
movsl
inc
arpl
push
jns
jb
ljmp
sub
inc
and
jnp
mov
imul
pusha
inc
inc
sub
rcrl
sub
mov
sub
aas
icebp
add
jge
mov
or
xor
push
mov
inc
ror
dec
icebp
cmp
jbe
arpl
inc
dec
mov
test
icebp
xor
in
inc
and
sub
xor
out
xchg
xor
inc
and
ret
out
inc
pop
rcll
xor
add
adc
bound
jb
andl
push
add
cmp
outsb
jns
xor
jmp
sbb
mov
test
mov
adc
push
pop
push
movaps
outsb
push
xor
pop
movntq
inc
mov
push
inc
out
pop
inc
std
jge
imul
adc
aam
ret
test
loope
jno
sbb
rorl
inc
or
push
or
ljmp
jae
jge
mov
out
jnp
adc
jbe
ret
mov
or
xchg
adc
dec
call
push
hlt
insl
dec
in
cmp
sub
xlat
imul
xor
cmp
and
hlt
inc
mov
dec
sbb
mov
xchg
enter
cmp
dec
bound
in
clc
jbe
daa
cld
cmp
mov
daa
pop
and
jecxz
pusha
pop
xor
cmp
cmp
ja
cs
insb
cli
in
loop
xor
add
repnz
mov
inc
push
jns
dec
fsubs
sbb
cmpsl
inc
mov
xor
mov
jo
inc
rcl
sub
shrb
add
dec
jno
leave
loop
imul
repz
inc
mov
sub
jmp
push
jmp
adc
adc
sub
mov
loope
sbbb
inc
push
mov
daa
dec
xchg
sbb
pop
mov
dec
popa
mov
cmp
fstps
inc
jmp
shrb
pop
jns
std
sub
mov
cmp
outsl
and
jl
fstps
push
cmp
bound
andb
imul
or
push
in
sub
pop
and
fs
cmpb
sub
in
lahf
mov
dec
dec
pop
negb
and
mov
push
mov
pop
mov
icebp
mov
jae
adc
inc
scas
popa
not
rep
or
shl
dec
add
loop
popa
in
insb
das
bound
test
jecxz
lds
cwtl
or
popa
xchg
sti
push
inc
inc
test
xchg
adc
loop
movsb
daa
data16
mov
bound
mov
jp
ret
add
pop
mov
fdivr
data16
xchg
cmp
inc
mov
sbb
jae
bound
sub
out
outsb
sbb
pop
call
subl
xor
inc
movsb
in
adc
aaa
stc
cmp
mov
out
arpl
add
push
inc
icebp
outsb
xchg
in
nop
push
sbb
repnz
add
pusha
popa
in
or
sub
xor
dec
mov
add
adc
repnz
cmp
lock
shlb
jbe
lock
dec
lret
sub
ret
inc
popf
pop
and
scas
out
dec
xor
inc
jmp
test
sub
jg
imul
fldlg2
pop
adc
mov
cwtl
cmp
les
push
mov
dec
push
mov
lahf
ret
int
or
rcll
inc
xchg
inc
ret
adc
adc
adc
add
xor
xor
idivb
gs
mov
adc
mov
jmp
push
decb
ss
mov
mov
shl
mov
shll
and
mov
sbb
lock
icebp
insl
enter
mov
sub
enter
out
pop
aas
rorb
xor
jno
cmp
sbb
roll
mov
mov
pop
jo
imul
inc
fwait
lods
sbb
pop
sub
jl
dec
enter
ret
movsl
mov
mov
addr16
das
enter
inc
jecxz
cmpsl
sti
in
ret
test
dec
sub
or
cmp
add
ja
sti
xor
jge
cltd
mov
test
sub
xchg
inc
add
vorps
jmp
cmp
jl
dec
out
insl
gs
data16
lock
adc
bound
inc
les
inc
inc
mov
xor
mov
sub
add
test
dec
ljmp
mov
cmp
xor
sub
xor
sub
pop
inc
adc
mov
sbb
enter
scas
xchg
insb
mov
test
pushf
add
das
loopne
mov
push
subb
xchg
pop
inc
in
dec
ret
int
icebp
adc
shrl
shlb
add
fs
jbe
out
sbb
mov
xchg
jp
lahf
stos
enter
loop
mov
in
mov
jo
lahf
stos
enter
push
push
mov
jl
dec
lahf
stos
enter
sub
outsb
xchg
imul
mov
cs
add
jg
pusha
add
and
xchg
jns
ror
pop
sub
test
mov
or
lret
cs
cmc
test
repnz
es
and
push
aaa
jne
mov
enter
movl
xor
add
dec
stc
nop
push
push
add
xor
inc
fsubl
push
addr16
or
xor
fldt
add
jmp
xchg
in
dec
in
aam
bound
loopne
data16
stos
and
negb
clc
inc
xchg
test
andl
test
loope
addb
jae
shrl
les
imul
lret
sub
imul
inc
test
loop
xlat
push
popa
cs
mov
and
jns
pop
arpl
cwtl
mov
pop
jg
cmp
les
movsl
jae
sbb
fs
outsl
sub
ss
jae
xchg
outsb
add
rolw
push
add
xchg
xor
xor
pop
pop
xlat
xchg
mov
iret
shll
stc
push
or
and
xor
inc
aam
pop
lahf
sub
mov
inc
daa
addr16
xor
push
xor
imul
inc
dec
xlat
push
jecxz
orl
push
cld
andl
add
inc
xchg
xor
sarb
test
mov
ret
dec
negb
or
lret
ret
add
into
jns
dec
pushf
or
cmp
stc
and
xor
jp
inc
cld
popf
stos
mov
mov
mov
popf
jae
xor
arpl
sbb
inc
ljmp
mov
push
int
mov
add
xchg
aaa
inc
in
or
fnstcw
inc
scas
adc
pop
inc
addr16
mov
inc
outsb
stos
loope
out
inc
loop
pcmpeqb
xchg
jecxz
jae
fistpll
scas
scas
xchg
cltd
and
outsl
aaa
sbbl
les
flds
xchg
sbb
mov
jb
sub
push
sbb
pop
jle
lcall
xchg
mov
cmovbe
cwtl
xor
and
fnsave
push
adc
hlt
sub
jnp
ficoms
fs
subl
test
jno
arpl
dec
push
inc
inc
aam
mov
inc
fwait
imul
inc
cltd
mov
sbb
inc
inc
imul
repz
mov
loop
mov
and
push
mov
clc
shll
mov
mov
mov
push
add
inc
or
es
lret
pop
mov
jne
fs
or
cmp
mov
repz
push
mov
xchg
mov
push
mov
ret
xchg
mov
xchg
adc
repnz
pushf
lcall
ja
cmpsb
and
inc
leave
cmc
testl
mov
lret
and
loope
mov
add
sti
sub
rcll
push
cmp
bnd
outsb
je
mov
jmp
xor
sub
adcl
pusha
lods
sub
and
cmp
fadds
mov
adc
shll
movsb
and
das
lods
and
fcomip
and
fisttpll
jbe
sbb
call
fs
sbb
loop
xor
xchg
cmp
and
jno
pop
repnz
sub
hlt
repnz
pop
pop
cmp
mov
mov
add
dec
cmp
mov
xchg
pop
xor
cmp
enter
and
daa
test
mov
mov
and
inc
lret
mov
adc
sub
testb
push
fsts
jmp
outsb
xor
and
gs
xor
dec
int3
xor
sbb
fldl
out
pop
adc
stos
adc
and
cmp
ds
and
les
loop
bound
sbb
mov
sub
mov
aad
imul
incb
lret
cs
inc
test
fwait
jl
addr16
mov
sarl
ficoml
insb
xor
popa
test
inc
insl
jnp
inc
or
adc
sbb
bound
and
adc
sbb
ja
popa
subl
aad
push
xchg
add
fidivl
iret
insl
dec
and
sbb
insl
xchg
stos
lods
mov
push
sbb
jle
jnp
shrb
fcmovb
mov
es
fistpl
es
mov
mov
push
int
cmp
sti
xor
jecxz
or
mov
lcall
xchg
movsl
add
and
pop
xchg
jno
sbb
and
test
mov
or
dec
fdivl
and
popf
and
in
loop
or
inc
mov
lahf
inc
lcall
dec
or
movsb
xchg
int
jmp
push
sub
adc
out
xor
stos
bound
mov
xlat
enter
jae
outsl
xchg
les
je
or
popf
push
gs
mov
bound
insl
cmp
popa
sarl
xor
inc
and
push
test
mov
subb
add
xchg
xor
cmp
js
popa
out
sub
mov
arpl
inc
add
xorl
fwait
js
mov
and
and
xor
lods
movsb
add
inc
movsb
xchg
lret
call
enter
fsubs
or
inc
scas
and
adc
out
xchg
shll
inc
outsl
push
push
lahf
movsl
movsl
xchg
inc
mov
inc
mov
or
fldenv
or
and
mov
cmp
inc
arpl
xor
xchg
pop
mov
or
inc
int3
aad
jno
inc
jae
sub
je
pop
lret
insl
mov
dec
push
faddl
das
cmp
mov
addr16
add
and
mov
in
aas
mov
xchg
xor
sub
outsb
adc
sub
repz
sub
jns
scas
dec
adc
test
rcr
xchg
jp
lahf
lea
arpl
fcoms
xchg
sahf
ror
aad
push
jne
dec
pop
push
and
dec
orl
bound
pop
insb
leave
xchg
aas
pop
dec
adc
sub
jnp
roll
mov
pop
xchg
and
inc
cmp
bound
lods
jle
xchg
xchg
scas
lahf
add
ljmp
pop
jmp
mov
fwait
pop
push
push
inc
mov
mov
xor
icebp
scas
mov
mov
or
sub
xor
outsb
in
sahf
dec
mov
insb
cmp
test
ret
aaa
les
mov
xchg
lret
and
popf
scas
mov
icebp
mov
dec
fs
sbbb
stos
lcall
aam
xor
cmp
mov
movsb
or
dec
adcb
xchg
jb
sub
xor
sub
pop
push
add
imulb
add
jmp
adc
mov
mov
mov
cli
imul
push
stos
in
fimull
xsaveopt
cli
test
cmpsb
jae
jle
xor
loope
add
mov
icebp
jp
jg
ffree
push
sub
jbe
and
xchg
adc
and
mov
cli
jge
enter
mov
lret
and
fs
lea
fwait
sub
cltd
cmpsb
jbe
mov
jl
movsb
adc
xchg
push
push
pop
shlb
jne
addr16
dec
push
jge
dec
fbld
cmp
jb
sarl
imul
and
adc
mov
xchg
inc
into
out
mov
jbe
ss
push
adc
sub
sub
xor
mov
xor
pop
sbb
adc
popa
xor
repz
rcrl
mov
fnstcw
insb
movsl
fs
test
lcall
dec
fisttps
or
pop
jne
pop
leave
pusha
xchg
xchg
mov
stc
popa
mov
push
dec
fists
es
insl
dec
and
repnz
add
ret
mov
xor
push
dec
jge
push
dec
pop
cmp
jmp
push
mov
inc
sahf
adc
lcallw
test
push
mov
jns
sbb
inc
cmp
ljmp
jecxz
les
or
jle
jmp
xor
xchg
outsl
or
sbb
pop
mov
bound
add
xchg
mov
sti
int3
or
icebp
sub
outsl
dec
xor
jecxz
jle
pusha
ja
xorl
lcall
and
imul
cmpsl
pop
sbb
lret
pop
cmpsb
insb
repnz
inc
lods
add
imul
lods
bound
imull
lds
into
adc
push
fwait
pop
push
push
fs
std
xchg
int
pop
dec
lods
lock
ljmp
sub
jo
shll
jecxz
jns
repz
pop
stos
cs
push
mov
fwait
data16
push
fs
loope
icebp
les
and
pusha
mov
push
insl
push
sbb
es
dec
ds
mov
mov
lret
cmp
lret
insb
jno
je
pop
cmc
xorl
arpl
adc
inc
int3
inc
sarb
inc
loope
sbb
dec
sub
outsb
dec
shll
mov
addr16
and
scas
pop
jb
in
mov
inc
stos
xor
int3
loope
cmp
or
inc
sbb
and
push
negb
movsl
dec
fxtract
xchg
xor
ljmp
xor
stos
mov
dec
cmp
jo
daa
and
repnz
jle
mov
in
fs
mov
sub
daa
ja
xor
jno
jns
lods
jmp
cmp
rorl
add
xchg
inc
aaa
sub
test
push
inc
movl
rcr
cmp
push
int
sbb
and
test
jmp
imul
inc
enter
cltd
test
mov
cmp
rolw
subl
pop
add
jl
inc
fdivr
sub
cmp
icebp
cli
pop
insl
cmp
lods
dec
sub
jae
data16
fildl
icebp
jae
fwait
jg
cltd
jno
pop
lds
jno
rcrb
and
fcomp
mov
xlat
jno
sub
rcrb
mov
cbtw
adc
lea
les
leave
adc
mov
arpl
testb
jmp
mov
mov
dec
repnz
pop
les
mov
dec
adc
icebp
inc
bound
faddl
mov
hlt
popa
cmp
xor
lds
adc
cmp
and
mov
xor
mov
inc
fldenv
push
mov
dec
nop
fbstp
in
stos
ja
mov
clc
fnsave
iret
mov
popa
mov
pop
ret
dec
insb
add
adc
out
sub
sarl
sti
mov
outsb
loope
shlb
sub
add
or
mov
les
and
xor
or
xor
out
jae
xor
lods
out
jnp
inc
outsb
add
jnp
jnp
addb
pop
mov
inc
in
jg
and
inc
stos
and
xor
xor
inc
lcall
fs
jno
leave
dec
inc
add
inc
add
gs
mov
add
fadd
cmpsb
es
pop
mov
cli
test
mov
lods
gs
dec
adc
in
xor
ret
out
dec
push
xor
lods
ss
jns
scas
mov
mov
popa
push
jo
mov
les
dec
data16
cmp
sub
inc
fdivrs
xchg
lret
and
push
ljmp
repnz
cmp
rcrb
outsl
and
stos
jbe
jmp
pop
add
inc
and
test
sub
pop
jg
movsl
repnz
mov
jle
pop
movsl
and
dec
xor
mov
xor
adc
clc
aaa
popf
in
pop
push
insl
iret
xchg
sahf
mov
xor
xlat
adc
insb
shlb
lods
icebp
das
jne
bound
xchg
inc
daa
int3
jmp
cltd
test
pop
mov
and
cmp
and
sbb
in
or
and
push
xchg
fs
push
bnd
cs
movsl
add
mov
sub
les
or
bound
pop
outsb
push
cli
mov
jb
ret
xor
adc
es
pop
inc
mov
cmp
jg
ljmp
ret
leavew
rorl
add
outsb
sbb
out
xchg
clc
lcall
insl
gs
jge
andl
js
testb
repnz
es
mov
mov
dec
insl
lods
inc
jae
hlt
insb
mov
rorl
xchg
cli
fsubrl
jno
cmp
icebp
popa
add
jns
sbb
jle
inc
loope
mov
bound
stos
loopne
jp
pushl
sub
inc
les
sbb
in
cmp
xor
popa
dec
gs
push
mov
imul
es
xor
mov
repnz
push
mov
repz
ss
das
adc
mov
cmp
push
push
pop
xor
dec
aaa
pop
xlat
mov
aad
xor
mov
insl
push
pushl
ret
inc
loope
sbb
pop
jle
cmp
aam
or
outsl
pop
ret
and
jge
loope
mov
insb
in
inc
cmp
inc
pop
pop
xor
xchg
pop
std
test
cmp
lods
mov
stos
daa
adc
jle
call
jge
sbb
les
jecxz
xchg
dec
inc
add
mov
repz
ret
inc
sbb
xor
sub
cltd
mov
lock
mov
jno
xchg
jne
loop
xor
mov
icebp
inc
jnp
or
xor
add
mov
jmp
addr16
rcl
and
lret
repnz
inc
fidivrl
loopne
loop
inc
lcall
inc
jle
aad
mov
imull
push
jns
add
popa
fdivl
mov
stos
xchg
pop
sub
insl
psubsb
sub
hlt
mov
jp
xchg
or
ret
or
mov
popa
xchg
jle
fdivrs
icebp
cltd
jge
shlb
xor
mov
sarl
iret
mov
lea
out
lea
out
lea
inc
sub
les
lds
mov
jb
testb
and
dec
mov
test
push
mov
mov
inc
shlb
add
jno
out
xlat
jge
inc
pop
fs
jo
cltd
xor
orb
jp
arpl
inc
loopne
push
or
adc
adc
pop
call
in
jbe
dec
scas
cs
lods
cmpsb
adc
ret
push
dec
leave
stos
push
sub
data16
out
push
enter
sub
icebp
aaa
sub
jle
popa
add
pop
aaa
repz
int
xchg
xor
mov
orb
cmp
jo
push
and
fdivs
xchg
mov
stc
jno
rcll
mov
dec
shlb
push
ret
inc
in
shll
arpl
mov
insl
inc
out
subb
mov
inc
push
jmp
sub
inc
pop
gs
or
inc
bound
xchg
sbb
pusha
cld
sub
std
mov
and
add
xor
loop
push
loope
cli
sbb
arpl
fdivrs
sbb
imul
aaa
data16
mov
les
test
sbb
xchg
movsl
arpl
cmc
dec
lea
mov
inc
mov
aad
push
pop
lods
sbb
sbb
cli
stos
inc
pop
mov
push
in
dec
and
jnp
push
mov
daa
lods
push
test
add
in
insl
cmp
add
inc
xor
mov
loop
fmuls
jo
das
add
dec
inc
inc
inc
cmp
adc
popa
mov
inc
shlb
dec
jp
sbb
dec
cmp
mov
adc
repnz
and
stos
arpl
int3
adc
cmp
icebp
outsl
adcl
sbb
movsb
ss
inc
sbb
out
pushf
dec
imul
mov
pop
adc
sahf
xor
negl
stos
sub
push
test
xor
jns
jl
mov
cmpsb
imul
and
scas
lods
leave
bound
inc
inc
les
aad
into
add
pop
loop
clc
dec
outsb
mov
pop
fs
fiaddl
xchg
xchg
jb
sub
into
adc
push
aam
jne
in
push
pop
sti
loope
sbb
cltd
mov
pop
dec
xor
push
add
mulb
lods
inc
jno
cmc
mov
subb
mov
xor
jmp
push
xor
jbe
cmpsb
jns
dec
daa
out
inc
aaa
inc
int
insl
sbb
xor
add
arpl
inc
in
pop
xor
mov
int
fcompl
mov
cmp
jno
dec
add
adc
push
add
jge
mov
xchg
pushf
xor
test
push
data16
inc
inc
jecxz
dec
add
sub
mov
xchg
dec
sbb
aas
movsl
push
les
or
and
mov
dec
ja
xor
fwait
leave
mov
arpl
push
cmpsl
xlat
gs
rcrl
mov
arpl
out
adc
pop
test
inc
shll
cmp
imul
mov
inc
insl
js
jg
xchg
fistps
mov
sbb
shll
dec
jp
sbb
jno
fimull
xchg
jns
cli
outsb
mov
mov
cs
sbb
mov
jnp
fisubs
mov
cmp
jno
mov
pop
lods
jecxz
xchg
filds
stc
popf
cmpl
and
mov
cmp
mov
inc
roll
inc
xor
pop
inc
int3
gs
pop
inc
into
addr16
loope
test
inc
mov
inc
inc
xchg
mov
push
xlat
mov
push
push
das
xchg
or
sbb
fildll
and
dec
ja
mov
add
int
popa
gs
dec
inc
cmp
pop
inc
dec
sub
xor
xor
ror
sub
jns
vxorpd
pop
add
int
xor
int
jp
repnz
jmp
out
test
and
ss
dec
xor
mov
and
aam
inc
hlt
lcall
popf
movsl
mov
ret
or
pop
inc
jecxz
sub
push
mov
sub
test
inc
andb
sub
addr16
test
inc
push
xor
inc
movsl
mov
pop
lods
add
in
mov
push
data16
les
inc
in
ret
mov
push
mov
cmp
adc
in
jg
xchg
addl
test
mov
mov
sub
inc
pop
addr16
pop
adc
xchg
je
push
adc
mov
push
sub
dec
mov
ficomps
fwait
je
xor
cli
inc
xor
in
xor
cmp
cmp
pop
xorl
jns
sub
ss
jmp
and
jmp
mov
test
add
hlt
ja
adc
popa
aad
bound
lcall
xor
pop
sub
daa
push
arpl
inc
and
repz
das
lods
and
sub
mov
or
stos
bound
icebp
cmp
and
lahf
out
popa
arpl
inc
fs
ja
cli
sub
xchg
cltd
pop
pop
stos
ret
hlt
pop
enter
pop
out
add
cmp
cli
xor
inc
mov
xor
xor
loopne
jno
hlt
in
mov
push
inc
cmp
cmp
mov
add
sti
inc
push
cmp
in
inc
pushf
aam
test
jl
xor
jl
imul
push
imul
pop
cmc
jp
push
hlt
jge
inc
repnz
insb
hlt
imul
dec
clc
js
dec
push
pop
or
inc
mov
adc
cmp
mov
movb
xchg
jecxz
je
out
jmp
gs
sub
jmp
inc
xchg
sbb
mov
das
add
push
jno
dec
cld
mov
and
jg
in
rcr
cmpsl
xchg
and
mov
xor
lea
fs
repz
add
cmc
xchg
into
mov
fdivs
repz
test
stos
jmp
subl
das
mov
inc
add
jb
pop
dec
inc
rorl
addr16
and
pop
lods
repz
mov
pop
enter
xchg
insl
mov
pop
jmp
dec
xor
push
pop
cmp
push
jbe
lds
shll
inc
insb
dec
addr16
sub
ja
lods
movsl
jnp
mov
sub
int
sub
cmp
jmp
jmp
jae
in
and
into
sahf
test
rcl
loope
mov
cmp
movsl
repz
add
fsubl
push
fsubrs
insl
shll
push
loope
add
xor
mov
add
pop
movsl
cmp
bound
push
lods
adc
loop
ret
dec
pop
adc
add
movsl
and
out
xor
fstpt
js
idiv
mov
arpl
jmp
ret
or
addr16
add
dec
call
in
jge
add
push
xchg
shrb
les
dec
and
pop
jmp
push
inc
repnz
in
pop
push
push
int
cs
das
int3
daa
inc
xchg
into
test
in
arpl
push
and
adc
inc
lcall
loop
test
inc
adc
xor
sbb
decl
repz
cltd
push
jne
sub
fucom
inc
test
dec
cmp
push
cmp
mov
adc
xor
test
test
cwtl
adc
jl
sbb
lock
std
cmp
dec
mov
xchg
or
xor
lea
fmuls
adc
push
call
sub
adc
mov
jbe
mov
pop
dec
jl
dec
xchg
xor
ja
test
mov
enter
sub
and
movsl
mov
fldenv
in
add
icebp
shrb
jl
mov
lret
imul
xchg
jne
xchg
push
inc
aad
sub
enter
pop
or
fistps
cs
jno
or
lock
sub
inc
cld
movsl
incb
pop
shll
aam
add
andl
pop
adc
mov
pop
movsl
fsubrl
mov
loope
bound
dec
jno
or
xor
cmp
dec
ss
dec
push
push
je
fisubrl
fwait
repnz
xor
or
mov
jns
dec
lock
ror
aaa
jb
xor
mov
mov
pop
push
out
orl
vxorps
or
mov
pop
jno
loop
jp
gs
sbb
and
pop
out
outsl
jp
and
into
xchg
inc
popa
adc
push
lcall
aad
data16
mov
adc
pop
sbb
loope
cltd
sub
loopne
mov
add
xchg
mov
pushf
dec
in
fsub
mov
aaa
ss
call
mov
test
subb
xor
xor
shll
push
enter
inc
pop
movd
test
adc
push
xchg
pop
mov
in
and
inc
je
pmulhw
cmp
insl
xor
ds
add
call
mov
les
lret
and
pusha
negb
jbe
js
add
jbe
movsl
add
out
je
mov
flds
bswap
scas
idivb
push
call
imul
popa
add
test
ret
or
push
addb
jb
pop
les
std
inc
add
xchg
sbb
shlb
fcoml
dec
addr16
mov
jmp
push
sahf
mov
sub
shlb
xor
mov
pusha
xorl
jno
data16
xor
dec
dec
pushf
add
or
add
shll
add
cmp
xchg
inc
repnz
xor
mov
cmp
mov
das
jbe
repz
push
jnp
adc
loope
push
mov
jae
filds
rcrl
inc
sbb
cmp
dec
aas
lods
js
cltd
lds
or
imul
arpl
add
ret
cmp
jg
jle
jmp
adc
inc
loop
mov
xor
xor
push
dec
inc
andl
arpl
inc
sub
ja
psubw
subb
xchg
sti
mov
cltd
jp
les
out
jp
mov
push
inc
js
xchg
dec
inc
inc
pushf
push
imul
lods
inc
sub
inc
ret
jl
jno
jnp
stos
icebp
or
or
cmpsl
dec
pop
sub
imul
sub
test
sub
dec
push
jno
stos
inc
enter
mov
and
adc
lret
mov
pop
mov
fiadds
dec
xlat
fsubs
mov
movsb
mov
out
add
mov
xor
enter
popa
loope
xlat
call
fnsave
cmp
jb
mov
sbb
mov
rorb
xchg
std
icebp
loopne
pusha
jno
xchg
addr16
rclb
shll
in
dec
mov
add
cmp
inc
lea
jb
add
mov
out
xchg
push
xor
and
pop
shl
add
or
jne
ss
enter
dec
jae
movsl
mov
pslld
cld
mov
lock
add
push
xchg
push
bound
jmp
icebp
imul
loop
mov
mov
mov
push
inc
push
pop
out
inc
xor
sbb
insb
lods
sub
xchg
mov
test
aaa
push
cmp
pop
leave
xor
test
stc
jle
mov
jbe
mov
lds
inc
lock
shlb
inc
xchg
push
mov
cmp
xchg
inc
dec
mov
icebp
push
std
shrb
lds
js
daa
xor
lods
xor
inc
bound
push
adc
repz
popa
xlat
shl
and
mov
inc
xchg
xor
hlt
test
js
out
mov
inc
sbb
cmp
adcl
cmc
inc
in
insl
lds
jmp
js
rcll
insb
dec
push
dec
inc
inc
cmpl
fs
xor
shll
aaa
lods
or
and
fildll
popa
shll
lods
jg
mov
bound
and
ret
and
lds
ss
xor
inc
or
dec
fdivrs
push
dec
jno
popa
add
pop
scas
cmp
mov
repnz
and
aas
loope
iret
jb
cwtl
lcall
push
ds
pop
punpckhbw
xor
sub
popa
xchg
sub
pop
mov
inc
int3
mov
pop
cmc
lods
cmp
inc
into
pushf
aad
ret
enter
outsl
inc
sbb
jmp
inc
subl
cmp
lods
imul
dec
dec
sub
mov
insb
mov
bound
jo
outsb
dec
arpl
fnstenv
lock
lds
je
in
popa
mov
xor
mov
cmpl
aad
in
insl
pop
jae
add
sub
flds
inc
add
push
cs
movsl
jb
xchg
and
and
push
in
fucom
cmp
aas
dec
adc
mov
xchg
jp
les
fsqrt
jle
dec
and
dec
icebp
cmp
inc
imul
mov
and
cs
xor
dec
cs
jecxz
cmp
shl
roll
mov
xor
and
mov
sub
xor
mov
add
mov
sub
sarb
rolb
cmp
stos
mov
gs
shll
mov
dec
ret
dec
sub
push
shrl
xchg
inc
and
mov
bound
mov
data16
ja
dec
push
mov
or
jb
rcl
xor
pop
movsb
shll
inc
pop
decb
xor
sahf
dec
rorb
fwait
mov
pop
int
loope
test
je
fstl
divb
inc
cmp
and
rcll
mov
pusha
push
insb
xor
lods
add
lds
pop
inc
int
movsl
pop
ret
in
jp
mov
outsl
daa
dec
jmp
scas
cmp
dec
cmp
int
mov
outsb
pusha
or
div
or
cmp
inc
data16
inc
inc
jl
pop
inc
and
ror
jle
sub
cmp
mov
out
xor
mov
inc
inc
in
add
gs
sahf
rcr
mov
bound
dec
dec
xchg
repz
stos
vpsubsb
cmp
add
mov
in
and
test
push
movsb
cmc
cmpsl
test
xchg
icebp
push
or
cmp
shlb
or
loope
pop
cmpb
pop
aas
lea
sarl
test
push
jb
lea
aad
push
les
jns
lock
mov
fnstsw
shll
lahf
inc
sti
cmp
mov
fsubrl
dec
sub
les
sub
dec
add
imul
js
pop
loop
inc
inc
xchg
sarl
xchg
out
sub
mov
jle
cmp
adc
shrb
ret
roll
lea
mov
scas
test
jmp
jp
jae
in
stos
movsl
cmp
cld
int
lds
lods
ffree
dec
imul
sbb
outsb
pop
pop
scas
dec
sbb
ficoml
jmp
mov
and
xchg
sbb
mov
inc
mov
inc
repnz
jnp
mov
jae
shr
icebp
mov
push
lahf
stos
rclb
jnp
inc
inc
inc
lods
in
test
sbb
adc
mov
push
xor
outsl
ljmp
jne
pop
fs
and
sbb
push
fisttpll
fisttpl
push
fdivrl
push
add
dec
jno
inc
xchg
pop
mov
fldcw
or
popa
insl
pop
pop
mov
pop
mov
shlb
sub
in
and
pop
jg
pop
stos
out
icebp
jns
lea
xchg
dec
mov
jns
mov
pop
or
rorb
pop
les
in
outsb
mov
adc
inc
aas
inc
xchg
in
sbbb
in
or
mov
mov
sub
jb
pinsrw
cltd
or
mov
clc
cmp
xor
add
shrb
jns
cmp
cmpsb
jge
lret
sbb
fstpl
xor
xor
xor
fnstcw
jp
and
push
pop
aam
adc
adc
mov
imul
cmp
in
xlat
stos
xchg
cmp
rclb
mov
enter
jge
mov
push
cs
and
dec
jge
adc
pushw
sub
inc
jno
xor
push
cmp
rcrb
sub
adc
inc
push
adc
testl
idivb
fs
sub
adc
repz
in
sbb
test
sbb
lcall
lds
mov
das
fdivs
adc
adc
push
gs
aaa
and
add
inc
int3
dec
mov
jb
test
jno
cmp
aas
add
jb
cltd
sub
mov
aas
int
cmp
dec
divb
lods
or
jne
into
jmp
xor
adc
adc
shlb
push
inc
xchg
cmpsb
arpl
int3
mov
out
pusha
imul
mov
pop
stc
aam
ja
inc
je
aaa
sbb
mov
cmpb
dec
mov
xchg
arpl
test
push
inc
dec
inc
lahf
rcl
nop
bound
bound
sbb
and
and
xchg
mov
cli
mov
jnp
jae
push
add
int3
push
ja
mov
mov
cli
add
push
cld
ja
lret
jg
add
movsl
adc
dec
ja
loope
into
cmpsb
ja
movsb
mov
pop
pushf
lret
imul
adc
mov
mov
movsb
int
and
je
shrb
rorb
or
loope
inc
xor
inc
cmp
iret
nop
mov
xor
xor
sub
test
xchg
xor
add
repz
out
repnz
cmc
fsubrs
adc
add
loope
pop
test
pop
dec
xor
cmpsb
push
es
cwtl
mov
leave
mov
inc
sarl
fst
and
les
mov
jno
xor
ja
clc
out
mov
stc
movsl
adc
add
mov
and
and
push
scas
push
jle
popa
pop
call
inc
outsb
js
jle
out
rcr
xor
cmc
adc
mov
es
or
lcall
jae
lcall
das
and
push
repnz
in
mov
push
fcomip
push
sub
or
call
testl
nop
lods
rorl
mov
mov
xchg
inc
push
and
addb
xchg
into
inc
mov
shll
les
or
sbb
pop
pop
push
aad
bound
gs
cmp
jbe
fwait
out
out
lcall
cs
inc
aaa
leave
pushf
xorl
mov
pop
xor
leave
repnz
scas
outsl
data16
roll
xchg
xor
fwait
rcl
ds
test
call
enter
or
push
outsl
andl
jle
push
in
fdiv
ficomps
jbe
sub
xor
repnz
popf
pop
shlb
jbe
cs
movsl
popf
into
jbe
shll
and
push
dec
int
cmpsb
and
testb
pusha
inc
pop
adc
sub
std
xchg
aam
xor
push
scas
jno
jne
ljmp
sub
inc
push
xor
bound
xor
mov
xchg
pop
ficoml
jl
inc
inc
xor
jbe
cmp
mov
in
mov
push
inc
cmpsb
fsubl
jnp
pop
mov
sub
cmp
pop
aas
mov
mov
sbb
jmp
in
xor
xor
inc
pop
inc
jae
add
jns
add
jae
cmp
imul
push
mov
inc
sub
push
sbb
jbe
subl
dec
push
js
cmp
jbe
dec
in
je
test
jp
pushf
stos
cmp
xchg
sbb
mov
fstps
mov
ret
xchg
cmpsl
inc
cmp
push
mov
jge
push
jbe
xchg
push
stos
mov
jl
sarb
jmp
jp
repnz
lock
lcall
mov
cld
nop
push
popa
pop
pop
lods
cmp
orl
mov
push
out
or
sub
lret
mov
and
les
dec
outsb
push
jbe
lcall
xorb
dec
mov
sahf
mov
xor
mov
sub
pop
shlb
mov
xor
lret
cmpsl
imul
imul
xor
jo
popl
xchg
lods
test
bound
add
sub
mov
outsl
add
popa
mov
into
jo
mov
popl
jno
out
in
xor
xor
and
in
dec
stos
ds
stc
push
and
jge
push
adc
cmp
mov
adc
jmp
jno
bnd
mov
ja
inc
ljmp
lds
and
aad
xchg
add
push
hlt
movsl
in
movsb
popf
sbb
xor
popa
shrl
push
popa
aaa
mov
insl
dec
enter
mov
cmp
les
mov
test
xor
dec
inc
jmp
aaa
lcall
push
or
subb
call
lcall
int
dec
sti
out
lods
lret
pop
dec
mov
sbb
mov
inc
sbb
inc
in
dec
jl
bound
push
dec
inc
xchg
ss
int3
dec
pop
into
iret
xor
adc
scas
into
mov
inc
mov
push
sub
cld
xchg
inc
add
dec
test
add
jmp
out
cmp
loop
jp
test
les
pop
xchg
inc
out
inc
adc
sub
mov
loopne
and
xchg
and
arpl
dec
push
cmp
inc
mov
test
fs
mov
xchg
movsl
arpl
bound
xchg
loopne
ret
in
nop
in
jno
add
pop
push
lcall
insb
or
xchg
insl
lock
aam
add
insl
lods
subb
xlat
xchg
clc
in
add
pop
sub
adc
lods
and
xor
xchg
push
xchg
popf
sub
xchg
mov
pop
mov
sub
fnstsw
adc
mov
mov
inc
adc
jecxz
xchg
sub
dec
push
or
fstpl
add
push
dec
cld
loop
mov
add
popa
xor
mov
add
imul
les
fsubrs
movsl
bound
aas
mov
outsb
add
adc
insl
pop
xor
add
xchg
fdivr
leave
jmp
dec
lods
jb
data16
daa
nop
decl
in
mov
loope
hlt
xchg
mov
adc
sub
or
in
les
in
subl
dec
inc
add
scas
dec
pushf
dec
mov
or
fstpl
cmp
adc
enter
insb
jecxz
xchg
data16
leave
fst
imul
ljmp
jp
aad
adc
xor
inc
les
pop
xor
test
sbb
aaa
jg
push
cmp
imul
xchg
stc
mov
les
aas
imul
les
and
sbb
ss
fucom
push
dec
mov
test
mov
stos
loope
subb
mov
push
sub
xor
bound
ret
in
dec
outsl
and
ret
test
push
fcomip
cmp
xchg
xchg
jle
and
ret
lods
sti
dec
dec
loop
cmp
xor
mov
jle
mov
mov
test
jmp
inc
mov
les
int
mov
jae
mov
jecxz
xor
pop
and
pop
std
ja
bound
dec
and
adc
jg
jns
ret
pop
lea
xor
inc
test
jecxz
and
xchg
test
xor
dec
stos
xchg
popa
into
sub
mov
inc
inc
stos
imul
inc
mov
imul
xor
mov
dec
inc
daa
xor
or
ja
mov
and
ljmp
sub
and
popa
insl
sbbl
pop
xchg
in
push
xorl
cld
movsl
aas
xor
inc
xor
push
daa
inc
dec
enter
cwtl
inc
inc
cmp
mov
repz
inc
push
push
xchg
inc
adc
mov
lods
loope
mov
dec
pop
call
imul
sarl
ss
arpl
outsb
jbe
les
rcll
pop
call
xor
clc
sub
mov
jne
lock
mov
inc
mov
push
cmp
incl
dec
dec
test
jecxz
inc
and
jmp
push
adc
sub
leave
cwtl
pop
xlat
mov
imul
and
cmpsl
xor
push
jecxz
std
stos
inc
push
jle
and
imul
and
add
pushf
mov
inc
imul
aam
pop
xor
adc
pop
fs
pop
mov
add
and
daa
in
sbb
test
jge
and
rcl
jmp
ret
jecxz
and
pop
cmpsl
out
loop
mov
inc
fdivs
inc
xchg
or
xor
leave
lods
test
xor
in
nop
jle
jecxz
mov
push
and
andb
lcall
mov
inc
cld
stc
lea
jmp
pushf
xor
data16
ss
mov
mov
push
movsb
mov
or
popa
cs
loop
repnz
pcmpgtw
pop
dec
mov
fdivr
jbe
and
cmp
popf
divb
loope
clc
movsl
ret
loope
dec
sub
aam
js
and
push
cmpsl
jecxz
jnp
and
and
stos
dec
frstor
push
push
sub
xor
inc
mov
cmp
xor
into
icebp
iret
xor
repnz
mov
enter
dec
rcll
pop
mov
bound
sbb
add
xor
idivb
les
mov
fcoml
xchg
mov
mov
scas
leave
adc
jg
adc
ret
jmp
mov
shll
jns
adc
inc
push
xor
sub
pop
in
push
inc
adc
dec
sub
fld
gs
out
loopne
icebp
dec
icebp
addl
lock
push
fiaddl
and
out
arpl
pop
or
inc
gs
or
mov
orl
jb
aad
in
dec
hlt
inc
dec
mov
xor
popf
jmp
inc
sub
jmp
lods
clc
shlb
xchg
push
dec
in
mov
mov
inc
aad
arpl
sub
mov
push
push
inc
mov
js
sub
imul
jl
hlt
and
stos
mov
sbb
cmpsl
push
imul
iret
dec
mov
and
mov
mov
inc
fsubl
sbb
sbbl
xchg
outsb
dec
jne
mov
bound
jae
xor
daa
jle
js
mov
adc
lgs
jne
cmp
dec
mov
fldenv
push
mov
jns
mov
mov
inc
sahf
xchg
mov
pop
stc
int
je
into
inc
jae
loop
xor
arpl
inc
push
outsb
test
popa
inc
mov
mov
mov
push
jns
gs
sub
and
cmpsl
es
and
fs
push
xlat
pop
aaa
addr16
mov
jmp
int
loope
adc
inc
aaa
lret
xchg
inc
xchg
clc
add
inc
jle
hlt
mov
and
mov
mov
dec
and
jo
add
push
repz
mov
pop
out
cmpsb
push
cmp
jmp
mov
jns
lock
scas
mov
das
rcrb
sub
orl
cwtl
adc
mov
and
pop
dec
cmp
lret
push
pop
fld
popa
in
xor
in
push
es
testb
les
pminub
push
call
ret
push
or
jns
loop,pn
test
mov
or
lock
shl
inc
bound
scas
pop
outsl
pop
and
aaa
jg
dec
and
cs
cmp
jecxz
aaa
rolb
sahf
inc
sbb
gs
xor
sbb
and
inc
inc
out
pop
bound
icebp
sbb
lods
aad
push
sbb
int3
ret
mov
sub
and
fnstcw
subb
repz
dec
push
mov
ret
out
cli
mov
or
mov
ds
fsubl
outsl
mov
aam
or
pop
adc
inc
packssdw
push
jnp
rcrb
adcl
shll
push
jmp
mov
mov
xor
jle
adc
shrl
mov
add
xor
dec
mov
out
jp
mov
cmpl
sbb
mov
addb
stc
jae
mov
add
andb
pop
bound
ret
gs
push
fldenv
lahf
cmpl
lahf
adc
leave
pop
insl
or
repz
out
hlt
into
out
xor
lret
cmp
les
pop
dec
orb
sub
jnp
add
loope
int3
popf
dec
pop
pop
cmp
es
cmp
or
jnp
imul
push
bound
cmp
add
push
fwait
sbb
lret
jns
repz
iret
pop
loop
imul
daa
aam
pop
aas
xor
pop
mov
ret
jb
stos
add
subb
notb
test
push
mov
push
and
pop
cmpsb
les
mov
or
or
fwait
jno
cmpsb
pop
sub
daa
xor
sbb
rep
arpl
notl
rcrl
mov
mov
xchg
sub
rclb
daa
pop
inc
push
pop
cmp
mov
lea
inc
mov
xor
xchg
enter
inc
fdivl
mov
dec
add
mov
pushf
into
mov
inc
cmp
mov
je
pop
dec
iret
enter
das
sbb
pop
aas
mov
mov
rol
mov
lea
les
mov
inc
cmp
mov
cmp
inc
jae,pn
std
dec
dec
icebp
roll
push
loope
fwait
jo
ret
add
or
cmp
xchg
stc
mov
adc
aaa
mov
roll
dec
inc
xor
insl
sar
sbb
in
jb
outsl
mov
or
jb
inc
ret
das
sub
cmp
jae
fwait
mov
lods
out
jbe
test
aad
cmp
mov
in
insb
loopne
lahf
sub
mov
test
and
dec
or
mov
xchg
push
push
dec
adcl
sub
mul
add
sub
mov
adc
jns
jmp
push
push
icebp
xor
xchg
sbb
js
dec
pop
mov
mov
fistl
loope
cmp
xchg
jbe
aaa
jns
push
xlat
or
ror
into
jnp
xlat
or
movq
cmpsb
repnz
pop
aad
lcall
pop
mov
adc
push
pop
push
out
cltd
pop
mov
jno
fistl
pop
dec
pop
push
sub
xor
sahf
xor
mov
push
cmp
sub
arpl
jg
pop
sbb
inc
das
add
test
adc
mov
push
jb
outsl
xchg
lret
jge
lret
aaa
add
cmp
inc
test
cmp
inc
rolb
rcrl
sub
rorb
mov
cwtl
mov
or
jno
mov
add
add
or
push
fs
repz
inc
insl
cmpsb
ret
xor
int3
shll
xor
push
xor
sub
or
inc
push
gs
lock
push
mov
xor
lods
loope
scas
and
movsl
xchg
lcall
inc
imul
sbb
xor
popa
xchg
sub
and
xor
lods
sub
int
cmp
and
sub
icebp
inc
dec
sub
inc
xor
aad
fldl
ret
daa
cs
divb
lock
adc
add
gs
inc
pop
dec
mov
imul
add
jo
out
cmp
dec
orl
cmp
insb
xchg
imul
xor
xchg
fcmovu
mov
sub
aas
inc
pop
xchg
and
mov
pop
in
jb
arpl
insl
divb
test
sbb
decb
pop
cld
gs
push
jge
pop
fnstcw
jne
push
jg
and
stc
ljmp
jg
jno
push
sahf
jns
insb
xor
outsb
in
neg
pop
push
jbe
loop
jns
xchg
inc
sahf
mov
push
dec
jmp
inc
jmp
imul
pop
cmp
and
sbb
sbb
jmp
xchg
dec
sbb
mov
sub
sub
sbb
in
sahf
pop
fldt
and
mov
sbb
sbb
test
xlat
lock
cs
inc
and
filds
xor
or
mov
lock
mov
and
jne
inc
jne
push
jge
jne
mov
cmp
jge
enter
mov
ret
movsl
dec
pop
pop
pushf
bound
fldl
jecxz
lods
pop
xor
add
mov
and
iret
mov
lret
inc
push
xor
lods
mov
lret
xor
inc
inc
cli
sbb
adc
scas
lcall
inc
cli
cmp
push
inc
xor
push
mov
mov
notl
imul
inc
lods
cmpsl
jns
sub
out
test
lahf
iret
insb
imul
das
pop
inc
outsb
inc
mov
rcrl
xor
mov
insb
pop
arpl
mov
dec
xchg
inc
les
adc
pusha
in
pop
xchg
and
xchg
lcall
mov
nop
mov
mov
sar
stos
push
in
push
add
movsl
inc
inc
push
mov
jg
and
pop
sbb
insb
roll
ret
or
lods
pop
inc
cmp
pop
jno
arpl
mov
aam
and
and
hlt
imul
inc
dec
xchg
push
in
push
outsl
or
dec
push
call
xchg
test
je
and
jle
inc
ja
mov
jle
mov
imul
out
inc
xchg
cli
cmpsl
mov
inc
xchg
mov
fldl
lahf
inc
in
push
popa
jns
cmp
loop
mov
push
jnp
mov
sub
mov
mov
inc
rcr
bnd
sub
leave
ret
cmp
pop
xchg
inc
dec
pop
int
add
push
arpl
xor
js
inc
sub
cmp
jno
inc
cltd
xchg
jge
push
mov
mov
push
inc
fistpll
mov
lea
jb
orb
cmpsl
popa
ror
mov
xor
sbb
movsb
call
mov
test
fucomi
and
arpl
and
xor
push
ret
inc
pop
push
sbb
jle
lret
shll
movsl
jno
pop
inc
xorl
add
lock
mov
pop
ljmp
dec
sbb
icebp
cmpsb
subb
cs
push
push
cmp
adc
pop
dec
adc
movsl
sub
ror
pop
push
stos
lahf
divl
lret
gs
dec
dec
lahf
dec
mov
sbb
mov
shl
inc
dec
gs
sub
cmpsb
mov
xor
leave
sub
mov
loope
mov
lods
adc
mov
add
mov
inc
insb
insl
pop
xchg
in
pop
inc
test
mov
pop
and
jmp
sarl
mov
jno
dec
call
jmp
mov
rcl
int
push
xor
sub
add
loope
xor
shlb
clc
cmp
cmp
dec
inc
roll
or
ss
jo
or
push
and
pop
xchg
pushf
es
addr16
mov
xorb
push
enter
int
data16
sti
ret
insl
les
hlt
and
or
cmp
imul
and
into
xor
cmp
mov
inc
inc
and
cmp
cmp
jg
and
adc
xor
fdecstp
push
xor
rcl
aad
loop
data16
cmp
imul
int
jno
rcrb
inc
sub
cmp
jp
daa
pusha
mov
imul
xor
adc
mov
popa
stos
xchg
or
adc
out
lock
hlt
mov
mov
icebp
inc
push
loope
mov
push
add
xor
lret
add
pop
cmp
movsl
das
jp
jbe
cmp
sbb
subb
and
les
subb
lods
inc
out
in
outsb
and
inc
incb
push
lret
fstpt
fs
sub
inc
in
nop
arpl
aaa
fcoms
roll
call
fstl
push
sbb
xchg
outsb
cs
popf
push
mov
jmp
push
mov
or
jmp
mov
xchg
enter
les
jecxz
inc
inc
das
or
pop
stc
pop
or
cmp
lahf
arpl
ret
fwait
push
inc
fiaddl
sub
repnz
jl
repz
fistpl
mov
mov
xchg
bound
mov
inc
jo
sub
gs
sub
cltd
mov
dec
mov
daa
aam
sbb
in
mov
mov
imull
mov
insl
xor
push
sub
aam
movsb
dec
outsb
cmpsl
inc
popa
jle
cmpsl
out
pop
aas
push
xlat
orb
sub
rorl
add
int3
cmp
cmpsb
sbb
icebp
adc
testb
test
push
jo
xor
sarl
mov
cmp
sub
dec
push
push
sbb
lahf
test
inc
jle
into
leave
stc
out
stc
test
shlb
in
inc
jns
xchg
sbb
in
and
pop
xchg
leave
push
pop
dec
fwait
inc
cmp
inc
movsl
lahf
arpl
jae
insl
jbe
repnz
mov
cltd
mov
xchg
pop
loope
and
rcr
out
repz
frstor
aam
jg
sub
xchg
dec
and
push
push
sbb
adc
call
dec
ret
test
sub
mov
inc
movsl
mov
add
inc
xchg
cmpsl
in
outsb
xor
cmpsl
inc
push
xor
mov
mov
ret
mov
push
inc
dec
xor
mov
inc
fstpl
cmp
sbb
xor
dec
pop
mov
in
fldt
cwtl
xor
mov
in
push
stos
fldenv
jo
adc
and
rcll
icebp
lods
xor
xchg
daa
mov
add
movb
jle
test
inc
or
stc
lcall
push
xchg
mov
sub
xchg
ss
jb
repnz
inc
fmull
jne
out
and
sbb
shl
mov
test
lds
sbb
jge
repnz
mov
sub
xchg
gs
push
gs
pop
push
sub
adc
xlat
or
add
sub
inc
adc
mov
add
cvttps2pi
enter
jg
pop
jb
mov
add
sub
cld
cmp
inc
test
fcmovne
shlb
mov
lcall
xor
dec
daa
or
mov
shlb
pop
inc
sub
cmp
mov
jbe
pop
jo
cmc
mov
addl
enter
test
push
or
push
sub
outsb
jae
jno
sbb
mov
in
js
mov
frstor
mov
divl
sub
fcomps
mov
popf
sub
fisubrs
sub
inc
cmpb
int
mov
stos
mov
add
test
sub
je
enter
sbb
mov
shll
outsl
adc
lods
cmp
inc
std
push
inc
and
or
cmp
lcall
cmp
repnz
inc
loope
dec
lods
rclw
xor
mov
mov
dec
das
das
cmp
lret
xor
insb
loop
js
out
add
add
xor
push
push
push
push
push
rol
out
ss
in
push
xlat
sbb
pop
inc
push
les
inc
stos
das
sahf
mov
inc
mov
bound
insl
stos
inc
or
or
inc
xchg
ret
jns
jne
test
jmp
and
dec
fwait
imul
mov
je
mov
lcall
cmp
mov
lea
pop
stos
leave
inc
jnp
inc
dec
inc
pop
push
call
insb
inc
mov
popa
daa
xor
daa
xchg
daa
inc
push
mov
js
inc
inc
jne
gs
clc
mov
and
lds
mov
inc
and
nop
dec
or
movsl
add
push
mov
mov
inc
jno
jg
mov
push
mov
int
aas
mov
in
lret
aad
mov
jbe
arpl
push
adc
jp
xor
push
repnz
inc
std
or
inc
jp
ja
sahf
add
pop
mov
push
arpl
xchg
xor
xlat
arpl
push
inc
mov
dec
dec
ljmp
bound
dec
inc
sub
popa
out
ds
cmpsl
popf
rolb
iret
repnz
fimull
addr16
cmc
inc
repnz
xor
inc
test
popa
int
xchg
lcall
or
pop
popa
iret
icebp
out
xor
in
fld
jbe
mov
dec
adc
jae
jbe
adc
push
dec
shll
jno
sub
out
cltd
jg
ss
test
cli
in
nop
sahf
fcmovb
mov
ja
ss
int
rorl
pop
xor
loop
test
dec
pop
mov
pop
and
pop
xor
mov
pop
fmul
mov
enter
icebp
dec
cmp
inc
jg
mov
push
xor
adc
in
int3
sbb
lahf
inc
sub
mov
es
xor
sbb
mov
lret
dec
sbb
pop
xchg
cmp
xor
les
or
push
test
inc
add
xchg
insl
in
ret
pop
mov
sbb
mov
negl
xor
jg
dec
xor
mov
xor
jne
xor
cmpsl
int3
test
push
fwait
repnz
dec
js
jns
cmpsl
adc
roll
addr16
jmp
jge
xor
cmpsb
inc
cmp
mov
loope
sub
add
sub
div
xlat
cli
push
out
sbb
mov
stos
jns
loope
pop
imul
ret
mov
call
xor
repnz
mov
imul
sub
jns
cmpsb
xchg
push
adc
pop
pop
push
loop
in
inc
jo
lcall
mov
rcll
loope
push
pop
test
inc
rorb
aaa
xor
dec
ja
mov
cmp
mov
dec
mov
adc
int
mov
stos
mov
sub
xor
ds
pop
into
mov
mov
jg
sahf
stos
movsb
inc
rcrb
les
xchg
mov
lret
out
sub
pop
test
bound
inc
sbb
sbb
rcrl
push
scas
push
inc
hlt
pop
fsqrt
ja
mov
sub
mov
xlat
jg
mov
into
cld
mov
frstor
jbe
insb
inc
mov
test
adc
iret
dec
repnz
rorl
in
ds
adc
popa
test
in
mov
mov
jb
jne
inc
fldl
xchg
mov
nop
mov
ret
icebp
jle
dec
inc
pop
mov
repz
lock
add
inc
and
xor
and
jl
inc
cmp
fimull
xor
mov
test
inc
dec
movsl
push
in
sti
aam
enter
xchg
ljmp
xlat
in
xor
cmpsl
dec
dec
int3
shl
dec
push
ja
movsb
fwait
jae
inc
les
movsl
popa
xlat
cli
sbb
ja
stc
add
movsb
cmpsl
loope
sahf
mov
les
pop
mov
xor
push
dec
cld
out
push
jb
outsb
dec
ret
mov
xor
out
jp
enter
sub
out
stc
sbb
cmpsb
aam
aad
imul
int3
movsl
sbb
push
sub
inc
mov
and
decl
sbb
jecxz
inc
mov
push
pop
and
cmp
insb
fildl
push
add
sub
jnp,pn
nop/reserved
repz
pop
xchg
xor
inc
pop
sar
lds
ja
push
imulb
mov
icebp
out
clc
add
cli
mov
sti
sbb
xor
push
nop
clc
cmpsb
rcrl
and
jmp
inc
or
jp
shrb
sub
mov
xor
jge
and
popa
or
in
pop
mov
outsb
mov
xor
mov
and
cmp
movl
popa
movsl
push
call
scas
repz
les
mov
or
dec
lods
ret
xor
push
sub
inc
rcr
inc
xchg
and
jge
sub
sub
and
xchg
ret
add
pop
pop
fwait
sahf
test
or
jp
adc
jg
lods
push
push
leave
pop
in
adc
in
rorl
jno
aad
fidivs
fildll
sarb
aam
mov
popa
in
cmp
mov
bound
lods
mov
cld
mov
bound
popa
sub
cs
call
and
out
cmp
cltd
aaa
xchg
not
fcmovne
dec
dec
xchg
mov
mov
mov
jne
push
xor
jbe
mov
jge
inc
test
jae
cs
aad
and
and
and
shll
xchg
xchg
sub
add
jg
and
or
dec
jecxz
mov
pop
lods
nop
aaa
icebp
jae
push
xchg
dec
ret
adc
fs
out
add
in
xchg
in
xorl
dec
loope
xor
dec
cmp
movsl
jae
in
fbstp
stos
inc
mov
dec
cmp
and
and
popf
push
movsl
cmp
pop
adc
popa
jo
repz
push
push
pop
rcl
imul
ret
fucomi
lea
pop
xor
scas
lret
and
lods
jb
es
stc
jecxz,pn
dec
pop
mov
and
cmp
fcoms
cli
movsb
jp
inc
mov
scas
adc
inc
outsb
and
jnp
outsb
sub
cmpsl
and
iret
stos
and
js
xor
orb
popa
outsb
push
aam
pminub
addb
jp
push
enter
mov
fisubrs
jne
test
adc
arpl
nop
imul
mov
adc
ret
inc
decl
pop
js
arpl
sub
inc
addr16
sbb
insb
xor
cwtl
jnp
aas
mov
add
stc
mov
adc
out
lds
or
push
fnsave
into
notb
and
and
mov
loop
inc
lret
jae
inc
int3
xor
or
push
lods
fmul
popa
inc
dec
mov
int
outsb
mov
dec
and
mov
in
add
sbb
cmp
stos
xchg
inc
sub
cld
cmc
scas
fs
adc
mov
in
lret
imul
cmp
pushw
ss
push
mov
xchg
or
sub
shr
test
testb
lea
and
fsubrs
pop
data16
stos
mov
enter
dec
jge
sub
idivb
int3
cmp
and
push
and
test
sti
std
repnz
pop
xchg
fnstcw
pop
mov
sub
std
mov
sbb
push
int
jle
jb
mov
jge
inc
add
pop
mov
in
fimull
test
insl
pop
mov
adc
mov
outsb
push
lahf
arpl
adc
scas
and
sub
adc
ljmp
rcrl
enter
fistpl
adc
sbb
inc
push
popa
test
adc
shlb
inc
out
int3
push
sarb
adc
pop
cs
out
adc
lea
dec
adc
xchg
enter
adc
cmpsl
aad
into
and
paddusb
loop
or
inc
xchg
stc
loope
mov
xor
dec
or
cmp
jne
test
sbb
jnp
lret
xchg
add
mov
loopne
dec
or
xlat
inc
xchg
loop
scas
icebp
xor
xor
es
pop
enter
inc
jno
push
int3
bound
popf
addb
xchg
mov
ret
repnz
stos
and
jb
popf
arpl
jae
andl
mov
mov
inc
shll
jecxz
repz
adcl
insl
sbb
and
and
scas
xor
xor
mov
cmp
gs
test
xor
mov
aaa
popa
mov
xor
mov
push
data16
sub
pop
ljmp
lahf
out
xchg
fldl
xchg
adc
lds
add
lahf
repnz
ds
mov
sub
add
iret
push
push
mov
sar
cmp
arpl
adc
or
in
mov
jg
mov
jno
push
push
ret
enter
xorb
add
mov
aas
jecxz
push
jnp
and
cmp
imul
mov
popf
push
out
xor
in
sub
gs
push
lods
inc
or
adc
lret
sbb
aad
arpl
push
mov
xchg
jne
out
lret
mov
xchg
add
movsl
aas
mov
cld
jg
pop
rcr
daa
adcl
dec
dec
sub
jno
sbb
mov
jbe
cld
jns
push
push
cmp
sbb
mov
xchg
sub
icebp
or
aas
inc
popa
arpl
cs
jle
popa
inc
int3
jne
shll
shlb
adc
cmp
push
inc
xchg
xchg
sub
inc
rcr
pop
cmc
lock
aad
sahf
mov
inc
scas
fcmovnu
jge
aam
imul
xor
sub
pop
pop
pushf
jns
test
cli
inc
add
push
xor
cli
mov
or
sti
and
or
push
loop
jno
mov
icebp
sahf
fcmovnb
test
ret
int3
cld
mov
test
shll
inc
les
xor
bound
lcall
out
data16
fisubrl
add
xor
mov
arpl
pop
mov
std
lods
push
movsl
push
idivl
roll
inc
outsl
test
jno
ss
imul
sbb
push
jle
adc
xor
cmpsb
fidivrl
cmp
lret
cmp
test
pop
mov
add
mov
inc
pop
in
and
insl
es
mov
pop
fdivl
int3
xor
mov
jae,pt
test
les
mov
adc
lods
loope
les
or
ss
pushf
jno
inc
adc
pop
lcall
jp
mov
shrl
popf
push
adc
pop
fwait
or
inc
test
les
dec
inc
xchg
dec
stos
out
stos
or
jl
mov
mov
out
mov
and
mov
fistl
cmp
mov
shl
data16
jecxz
cmp
adc
fcmove
cmp
push
mov
sub
xchg
cmpsb
mov
xor
and
pop
push
jle
ja
fwait
jg
mov
push
jb
and
enter
sbb
aad
outsb
push
lods
lea
push
repnz
movsl
sub
mov
pop
ret
fiaddl
mov
jns
dec
inc
jecxz
fwait
adc
adc
in
les
cmp
outsl
cmp
mov
xor
in
repnz
lret
mov
outsb
cmp
cli
xor
adc
mov
sbb
jecxz
negl
aas
mov
push
dec
fcmovbe
or
jg
arpl
and
movsl
jmp
ret
cmp
xor
aad
pushf
loop
movsb
mov
insb
test
xor
in
sub
jb
mov
mov
xor
adc
and
dec
push
loope
bound
lcall
iret
lret
decb
cwtl
shrb
mov
rcrb
inc
push
outsl
enter
lret
fadds
es
imulb
fidivrl
xor
out
insb
mov
push
in
xchg
aad
xchg
mov
sahf
loopne
ds
mov
mov
and
loop
dec
loope
add
or
clc
sub
xor
clc
jno
xor
push
jbe
add
ja
push
xchg
jns
sub
out
jo
fsts
sub
ror
mov
sub
xor
pop
test
es
mov
mov
and
outsb
push
lret
push
fwait
and
xorb
inc
mov
icebp
imul
and
les
imul
push
cmp
or
mov
add
cvtps2pd
hlt
les
inc
xorb
sub
push
adc
pop
inc
aam
stos
pop
sbb
jmp
lods
cmp
cmpsb
and
ljmp
xchg
jno
sub
mov
add
sub
xor
sbb
popa
jmp
xor
pop
popa
rorl
and
jmp
in
int
add
add
ret
bound
les
shrb
sbb
sarl
mov
and
testl
mov
pop
xlat
clc
add
mov
inc
bound
sbb
pushf
mov
jbe
lcall
xor
or
xchg
push
jle
subb
int
mov
xchg
dec
add
xchg
xorb
dec
add
mov
cmp
popf
dec
mov
sub
test
inc
and
push
and
movsl
jg
and
dec
pop
inc
repnz
cmp
xor
cmp
loop
movl
movsl
aas
mov
add
dec
mov
cvtdq2ps
ja
test
loop
push
or
jmp
inc
lcall
les
jge
aaa
and
mulb
push
je
jae
in
mov
mov
cltd
lcall
pop
mov
lods
sub
sbb
sub
insl
sbb
push
lods
repz
das
scas
fwait
jnp
sub
fistps
sub
push
dec
xchg
testl
daa
loope
outsb
imul
es
cs
mov
imul
and
call
test
popa
leave
xchg
mov
pop
mov
xor
lss
ss
adc
jb
popa
xchg
mov
jle
cmp
ja
push
sub
jno
pop
cld
std
scas
and
jge
aam
pop
or
rorl
rcll
jg
and
cmp
sub
xor
dec
scas
inc
xor
ss
data16
test
cmp
rcll
popa
les
fcoml
xor
hlt
test
xchg
fisubrs
adc
xor
repz
jne
inc
push
orl
popa
lds
shll
loope
icebp
test
inc
inc
test
dec
mov
jno
xor
push
mov
xchg
cs
jb
addb
lds
fcoms
jne
sub
movsl
shlb
inc
repnz
and
or
xor
inc
andl
movsl
arpl
inc
xorl
in
mov
cmp
lods
dec
gs
xor
loop
mov
flds
stos
push
mov
pop
ret
xchg
jb
xor
repz
and
xor
inc
mov
push
test
test
xchg
movsl
movsb
popa
mov
les
aam
in
cmp
hlt
test
sub
push
xor
cs
inc
aam
push
xor
xchg
popa
addl
roll
icebp
popa
add
xor
jmp
push
xor
bound
inc
lods
xorb
test
ret
lret
adc
add
xor
jmp
inc
xor
push
lods
arpl
inc
jae
subl
cmp
mov
dec
inc
in
adc
test
nop
mov
or
sbb
rcll
inc
pop
aaa
jbe
movsl
xor
pop
sub
cmpl
inc
adc
aad
int3
icebp
cmc
sahf
inc
dec
adc
cmp
repnz
gs
pop
shlb
test
xchg
icebp
sub
les
jg
xchg
pop
xor
add
icebp
ret
mov
cmp
movsl
mov
ja
xchg
sub
xor
mulb
mov
sub
xchg
sub
data16
and
push
pop
in
sarl
and
inc
mov
faddl
test
sahf
in
movsb
test
mov
push
insl
test
jno
ss
loop
inc
lahf
fsub
jl
or
mov
clc
push
loope
es
aaa
pusha
insb
inc
std
cwtl
mov
sbb
fnstsw
nop
imul
inc
and
xorb
pop
pusha
roll
jno
loopne
sub
pop
je
aam
cs
xchg
push
int3
lods
inc
sbb
mov
jle
mov
lcall
insl
mov
jo
test
xchg
jle
sbb
lds
lods
test
jns
sysenter
and
xor
repnz
jle
adc
jmp
mov
gs
push
insl
and
cmp
inc
ret
dec
ds
push
xor
lret
repz
movsl
sub
arpl
sub
push
loop
in
in
mov
dec
lods
adc
jle
cli
roll
sahf
jno
jge
xorb
bound
insl
in
dec
sarb
popa
mov
dec
loope
sbb
repnz
jae
cmpsb
call
fldcw
push
inc
sub
mov
inc
das
mul
push
sub
sub
jl
push
jno
shlb
lods
insb
xor
out
jge
imul
daa
sti
push
je
cmp
dec
bnd
out
xor
sub
lret
lods
sub
and
sub
push
and
idivl
mov
insl
mov
lock
sbb
mov
gs
test
sar
xor
xor
pop
inc
gs
add
push
inc
cmp
daa
jecxz
repnz
jp
out
fmull
dec
xorb
popa
xchg
movsl
ret
cmp
add
stos
dec
cmp
inc
xchg
mov
sar
and
push
ja
adc
rol
ds
popa
scas
fildl
mov
mov
mov
imul
mov
imul
inc
and
fistpll
in
push
xorb
add
mov
movsl
mov
jno
addr16
pop
and
adc
adc
or
pop
imul
and
xchg
dec
ror
test
xchg
outsb
inc
insl
or
cltd
iret
jmp
cwtl
outsl
repz
test
ss
jge
in
inc
sub
push
cmp
mov
jg
nop
icebp
add
cmp
les
sbb
jl
pop
lods
xor
dec
shrb
lret
push
pop
xchg
sbb
out
cmp
xor
lahf
pop
xchg
testl
les
xlat
mov
sbb
ficoml
movsl
add
and
stos
dec
adc
imul
imul
fsubrl
insl
fmull
mov
jno
fsubrl
inc
sarl
jecxz
dec
jmp
xchg
out
cmp
and
rorb
mov
jp
ret
xorl
inc
jp
mov
scas
jge
jbe
jbe
imul
xchg
aad
bound
jns
mov
push
aam
sub
imul
xor
sahf
mov
push
and
ficomps
dec
sbb
adc
push
xlat
repnz
out
inc
sub
push
inc
jle
les
add
push
add
mov
or
mov
fidivrs
sub
inc
in
mov
lcall
scas
in
rolb
jp
mov
mov
lret
jmp
cli
mov
sbb
mov
sbb
negl
mov
jo
jns
xor
enter
dec
sbb
shrl
fs
lahf
xor
popa
ja
sbb
add
sar
jb
inc
stos
add
inc
mov
in
push
jb
movsl
out
loopne
mov
cmpsb
mov
jmp
lods
cmp
adcb
and
mov
and
popa
or
push
cmp
movsl
or
or
jb
jg
inc
insb
xchg
imul
mov
xchg
jns
ret
inc
pop
popf
and
imul
jb
xor
loope
stos
jne
fsub
jmp
test
rolb
sahf
xor
sti
inc
pop
pop
mov
aaa
test
xlat
xor
repz
mov
and
cwtl
daa
mov
out
xor
in
mov
fidivrs
inc
fstl
inc
ret
push
mov
sbb
flds
mov
and
jb
movsl
add
sub
lods
xor
lret
rorl
push
xor
push
repz
popa
pushf
out
les
out
and
out
xor
daa
out
push
cmp
push
xchg
fisubs
lods
addl
and
xor
les
xchg
xor
xchg
sub
adc
fldt
adc
add
stos
mov
into
divb
xchg
sbb
xor
ljmp
xchg
xor
adc
bound
mov
dec
enter
pop
stc
xor
inc
jmp
jecxz
mov
enter
jbe
cmp
mov
cld
push
aad
sub
aad
push
jg
lcall
out
out
and
or
and
inc
ds
xorb
stos
mov
popa
push
xor
out
mov
mov
ss
push
rcrb
xor
hlt
lret
dec
mov
ret
ds
ret
das
push
ret
les
xchg
inc
insl
outsb
jle
jg
sahf
cmc
cmc
imul
cwtl
jge
fisttpl
in
jle
adc
sbb
add
into
xchg
push
mov
lret
test
test
scas
adc
ja
lret
in
jp
add
dec
outsb
pop
add
cli
pop
jbe
sub
ret
mov
push
sub
mov
movsb
xchg
fs
ret
push
dec
enter
mov
notl
les
fucomi
popw
pusha
rcrl
mov
out
push
sub
mov
sub
inc
sub
cmc
pop
and
dec
pop
pushf
jns
sahf
mov
stos
lods
ficompl
sub
inc
push
cmp
push
inc
test
xor
aaa
in
ret
push
std
xor
rcrb
cmp
mov
jno
mov
movl
notb
cwtl
loope
cmp
add
and
mov
mov
incb
rolb
mov
dec
add
es
push
mov
and
out
movsl
notl
popa
lea
data16
push
push
sbb
pop
and
xor
adc
imul
insl
mov
outsb
lcall
in
push
jmp
stos
scas
subl
jno
or
mov
push
dec
sub
fwait
sbb
inc
gs
dec
mov
jg
aad
sbb
sbbl
jae
daa
lret
aaa
inc
popa
mov
shlb
and
inc
leave
aam
inc
out
or
inc
insl
loop
pop
mov
aas
arpl
lcall
cmpsl
adc
jo
icebp
jge
testb
sub
mov
mov
mov
xchg
lods
add
jmp
xor
ja
add
inc
jae
xchg
sub
clc
cltd
push
es
lcall
mull
sbb
scas
push
dec
insb
dec
and
jecxz
arpl
and
mov
icebp
sbb
loopne
mov
sbb
dec
jle
pop
and
and
inc
fwait
sbb
arpl
sub
ss
and
sbb
mov
mov
sahf
xorb
jnp
into
pop
scas
das
push
inc
add
cmc
sbb
sbb
dec
xor
pop
insb
jge
cmp
lret
cmp
push
sub
cmp
inc
sbb
outsb
mov
jns
ficoms
mov
xor
pop
popf
xchg
inc
call
addr16
stos
data16
pop
stc
adc
jle
dec
lds
push
scas
adc
inc
test
aas
arpl
ret
outsl
cs
xchg
xchg
dec
pop
and
push
int
mov
test
pop
xchg
sbb
jl
rol
dec
push
les
xor
jp
es
ror
ss
movsl
push
xlat
sbb
out
jle
das
aaa
xchg
dec
cwtl
push
sub
popa
sub
xchg
dec
jae
jno
push
pusha
push
mov
sub
push
xor
bound
in
shrb
xchg
dec
bound
dec
and
add
and
push
jne
inc
cmp
gs
mov
es
dec
push
int
mov
inc
iret
pop
or
js
xor
push
gs
adc
push
sub
cmp
in
movsl
lahf
call
mov
pop
fiadds
add
out
xor
xor
pop
pop
fdivs
jecxz
jp
mov
subl
push
pop
pop
mov
mov
xchg
in
outsl
jbe
std
sub
mov
jp
cmc
mov
jp
push
in
popa
popf
sub
mov
pandn
jno
fnstenv
sub
mov
xchg
dec
and
lods
cmpsl
or
mov
mov
mov
and
push
add
and
in
pop
inc
and
sar
fsubrl
cmp
adc
inc
sahf
inc
adc
dec
sahf
adc
push
lcall
and
popf
frstor
push
scas
dec
enter
je
jno
sub
sbb
push
adc
mov
jbe
shrb
aad
and
push
xor
inc
pop
and
iret
insb
mov
sbb
push
push
push
adc
testb
int
testb
mov
movsl
movsl
add
aad
sbb
push
push
jns
lcall
push
inc
pop
adc
icebp
cmp
fnstenv
iret
fwait
sbb
in
andb
js
push
inc
out
jg
daa
sub
mov
clc
clc
push
jmp
dec
mov
xchg
mov
jmp
jmp
and
js
loopne
mov
fsubl
ds
mov
mov
les
loop
cs
hlt
popf
cmp
idivb
ss
mov
lahf
cli
jns
mov
lock
cmpl
sbb
movsb
dec
mov
cmp
outsl
add
pop
fwait
pop
sahf
lods
outsl
ret
aam
xor
leave
inc
cmp
cmp
pop
test
sub
fnstcw
addr16
inc
orl
jl
jns
test
sub
inc
inc
test
stos
mov
cmp
in
sub
mov
rolb
outsb
xor
inc
and
jne
jp
sar
push
jnp
dec
push
xchg
jb
scas
das
xor
inc
ret
dec
rcrl
aaa
fcomps
mov
rorl
outsb
imul
sarl
adc
cmp
add
fwait
in
je
lahf
lea
rcrl
ss
popa
repnz
add
mov
hlt
jmp
jl
dec
loop
sub
xor
jae
cltd
lret
mov
dec
das
mov
mov
stos
jmp
mov
dec
pop
outsl
dec
fisubl
push
push
out
mov
mov
or
jo
xchg
fisubs
jg
fisubrs
push
aaa
mov
add
mov
cmp
insb
gs
pop
push
cmp
loop
pop
jb
dec
cli
sbb
pop
leave
ret
jns
pop
adc
inc
sarb
dec
jno
xor
jnp
mov
fucom
xchg
mov
popa
inc
mov
roll
icebp
xor
dec
sub
shlb
lret
pop
int3
mov
sarb
cs
adc
jns
jb
sbb
inc
in
add
int
sbb
scas
add
popa
mov
test
adc
pop
push
add
xor
insb
pop
fcompl
inc
into
shll
or
and
sub
cwtl
sbb
enter
inc
inc
add
push
pop
shrl
rcl
repz
push
push
shrl
jnp
sbb
and
push
pop
mov
push
inc
cmp
decl
enter
xor
or
sub
sahf
mov
push
shll
mov
fnsave
mov
imul
mov
pop
pusha
aas
fiadds
and
xchg
clc
sub
in
or
sbb
popa
and
dec
sbb
rclb
popa
jo
int
repnz
add
jbe
cmc
mov
push
jg
inc
lods
xchg
mov
push
imul
scas
mov
in
fdivs
mov
xor
inc
mov
adc
pop
jbe
sbb
hlt
sub
or
xor
sub
push
lcall
popf
cmp
cmp
and
shll
dec
cmp
insl
adc
mov
inc
fildll
ljmp
jnp
cmp
jmp
xor
inc
mov
add
fisubrs
cmp
push
xor
and
insl
test
data16
push
mov
cmp
loop
mov
cmp
push
arpl
jnp
xchg
cmpsl
xorl
jp
data16
ret
popf
ret
mov
sbb
xchg
mov
push
and
xlat
xchg
loope
and
enter
arpl
or
adc
bound
jmp
les
sub
dec
rcrl
mov
fimuls
xor
aam
call
leave
lock
pop
mov
and
and
push
xlat
dec
movsb
cmpb
scas
cmp
inc
inc
repnz
cmc
mov
in
sbb
insb
mov
loopne
sbb
arpl
jns
jge
ds
xlat
xor
xchg
inc
ret
jge
rcll
cmp
sub
mov
pop
shll
dec
mov
aas
pop
jg
and
xorb
mov
lods
sub
adc
aad
mov
loopne
jns
xor
leave
arpl
aad
xor
add
outsl
vsubpd
mov
dec
rorb
mov
inc
cmpl
mov
push
mov
add
les
popa
clc
jnp
or
push
jle
xor
sbb
ljmp
int
roll
imul
loopne
aad
mov
lret
inc
pop
mov
pop
sub
mov
lret
stos
outsb
sub
mov
or
cld
cmp
insl
push
pop
or
jo
push
inc
popa
call
frstpm(287
mov
push
pop
outsl
frstor
inc
mov
ja
or
repnz
push
ds
mov
rol
int3
aad
iret
lods
les
cmp
shrb
inc
hlt
lods
dec
mov
mov
out
or
fisubl
lcall
and
loope
icebp
mov
in
jnp
push
shll
in
cmc
xor
jmp
insl
cmp
pusha
rcrl
cs
dec
cmp
clc
sub
jno
lcall
push
push
sbb
mov
loope
fstl
leave
mov
cmc
fsubrp
in
and
out
arpl
inc
adc
ja
xor
pop
jno
pop
push
les
xchg
arpl
icebp
lahf
xchg
addl
lahf
xor
inc
data16
fildl
add
push
pop
jbe
add
add
mov
cmp
pop
imul
jmp
pusha
loope
jb
push
xor
push
lock
mov
inc
inc
fcomps
push
pop
loope
test
mov
jno
dec
fisubrs
sbb
into
xchg
jno
add
add
cld
inc
xchg
xor
push
les
xor
jge
sti
and
sbbl
imul
daa
sub
xchg
cmp
sahf
imul
mov
es
xor
push
stos
outsb
add
jg
dec
das
test
inc
testb
and
shlb
icebp
pop
es
shlb
sbb
jg
retw
cmp
fsts
xchg
mov
cli
inc
add
cmp
mov
ret
dec
jo
loopne
pop
faddl
jecxz
lahf
push
xchg
fisubl
mov
mov
fs
mov
js
stos
mov
daa
sub
mov
in
xor
jg
push
and
jecxz
sbb
xor
popa
mov
jecxz
mov
mov
fld
fidivs
cltd
cmp
hlt
xor
pop
lods
loop
pop
in
xor
minps
shl
ja
gs
and
xor
pop
les
dec
bound
and
sub
movsb
fwait
push
sub
insl
inc
pop
lods
mov
in
pop
gs
push
les
movsl
jns
popa
cmp
adc
gs
inc
in
ss
lahf
test
and
das
mov
sub
bound
or
inc
push
xchg
and
cmp
movsl
xor
imul
mov
mov
bound
cltd
out
xor
inc
arpl
sub
push
push
loop
out
imul
call
movsb
imul
in
push
sub
pop
inc
inc
out
jb
cmp
push
das
ja
cmp
popa
xchg
cmp
xor
movsl
inc
arpl
adc
cltd
loope
add
sti
loop
pop
push
popa
out
into
leave
iret
lret
popa
sub
or
cmp
int
inc
jg
or
xor
xor
dec
jl
and
sub
cwtl
xor
rolb
pop
cld
jo
ret
mov
adc
inc
push
inc
fs
add
mov
jb
adcl
jnp
clc
inc
int3
or
jge
test
and
bound
lods
test
cmp
int
loop
mov
dec
ror
out
loop
popa
mov
pop
fwait
popa
inc
test
icebp
movsl
std
sub
std
ficompl
push
jle
loopne
insl
dec
inc
mov
mov
and
out
jne
js
xchg
mov
notb
icebp
fs
mov
ds
test
sahf
test
imul
and
mov
sbb
stos
cld
mov
cltd
sub
popa
cmp
push
adc
push
jns
ljmp
and
lret
ljmp
ds
movsl
sbb
inc
imul
xchg
pop
xor
cwtl
mov
popa
popa
pop
les
rcll
roll
loopne
sbbl
jns
sti
xor
mov
jmp
dec
cmp
xchg
lods
inc
arpl
inc
inc
mov
ljmp
cs
lods
mov
ds
mov
add
sub
and
ja
inc
lea
or
insl
lods
icebp
icebp
les
xor
loopne,pn
jno
scas
xor
dec
jle
test
sub
mov
and
jnp
arpl
mov
push
push
loope
les
sbb
jmp
aaa
fsub
repz
pop
xor
jbe
shlb
sbb
cmp
loop
daa
nop
or
jno
orl
bound
les
std
or
cmp
loop
dec
jno
les
pop
hlt
pop
cs
outsb
adcl
cmp
xor
divb
xor
scas
sub
out
mov
add
out
sahf
sbb
push
insb
dec
ja
gs
fiaddl
jmp
fwait
enter
jp
sbb
pop
in
es
lret
aaa
addl
xor
cmpsb
push
int3
inc
rcl
ss
xor
mov
xor
xor
inc
mov
mov
int
repz
popa
jb
cmpsl
jbe
adc
icebp
mov
les
popf
mov
xor
push
or
hlt
or
dec
rolw
aaa
movsl
aad
jg
add
push
add
jno
andb
jnp
sub
ja
xchg
mov
xlat
je
inc
inc
cmp
xchg
cwtl
jp
movsb
mov
add
loope
cmpl
fistps
dec
ljmp
lods
dec
insb
rcll
sbb
test
xchg
lret
mov
insl
icebp
or
push
and
push
mul
test
nop
adc
test
lret
icebp
and
and
xorl
mov
mov
push
and
repnz
cld
test
stos
jle
pop
das
inc
xor
xor
frstor
mov
mov
xchg
enter
movsl
bound
inc
and
jbe
push
jmp
or
inc
bound
shll
cmp
movsl
mov
push
stos
insl
outsb
sub
dec
mov
or
mov
je
dec
repnz
fldl
or
xchg
xchg
jnp
lea
dec
test
cmp
mov
jmp
mov
outsl
push
mov
mov
test
int3
loope
xor
push
inc
xchg
pop
shrb
push
std
movsb
jp
pop
pop
shll
xor
pop
cmp
cmp
push
daa
enter
dec
aaa
fldl
ss
in
addr16
adcl
and
adc
jle
jge
mov
lea
inc
movsl
add
fstps
mov
xchg
andb
mov
dec
test
les
adc
pop
or
push
sbb
pop
mov
inc
andl
fwait
dec
aas
inc
jge
sbb
or
push
pop
enter
fcomps
orb
cmp
test
ret
insl
in
insb
and
int
sar
dec
je
inc
xor
je
out
jge
push
mov
movsl
cmp
sub
xor
fdivr
jns
push
jo
adc
fdivrs
test
dec
sub
gs
push
jg
imul
push
add
mov
test
xor
scas
gs
andl
ss
inc
test
insb
mov
out
cmp
inc
inc
test
cmp
mov
cmpb
gs
inc
js
pop
dec
les
dec
fs
xchg
es
int3
dec
lret
mov
push
repnz
sub
pop
add
cmp
cs
jb
imul
aas
int3
mov
add
add
imul
cmp
addl
dec
sbb
mov
mov
lret
xchg
pop
push
fwait
mov
add
daa
jno
jmp
jns
imul
sub
xchg
movsl
push
xor
roll
mov
mov
aaa
dec
jle
or
xchg
stos
sar
cmp
jmp
xchg
fyl2x
jb
cmp
and
xor
fsub
and
bound
faddl
push
cmp
and
xchg
or
cmpsl
dec
push
sbb
sub
insb
adc
mov
test
xor
xor
aas
insb
mov
mov
push
xchg
test
mov
xlat
loop
fst
sub
es
lea
popa
cmp
dec
sub
push
daa
cmp
addr16
xor
jle
out
sub
mov
mov
or
lahf
cltd
mov
xor
popa
fistl
inc
testl
rclb
call
pop
test
mov
push
fdivs
mov
negb
mov
popf
and
sahf
xor
and
loope
dec
fnsave
imul
test
cmp
push
sbb
arpl
dec
sbb
sti
ret
inc
loop
jno
xchg
jp
cbtw
dec
aaa
test
push
outsl
cwtl
xchg
lret
cs
lods
movsl
mov
pop
ss
popf
pop
cmp
mov
mov
neg
enter
xor
and
sbb
fistpll
lahf
and
sbb
insl
mov
mov
mul
jo
pop
push
sub
mov
imulb
aaa
sub
mov
inc
jno
sub
xchg
inc
shl
inc
jae
sub
sub
jmp
inc
enter
or
cmp
test
and
xor
stos
add
lods
and
lods
push
and
cs
out
or
sub
test
in
test
cmp
shrb
iret
leave
movsl
hlt
icebp
mov
sub
mov
xchg
sub
xchg
cs
and
pop
fisttpl
test
cmpsl
mov
jae
cmp
mov
inc
xchg
arpl
orb
add
push
js
loopne
sub
popa
mov
xchg
xchg
xchg
jb
movsl
add
and
mov
daa
test
or
jb
inc
pop
shll
lods
pop
enter
add
inc
or
in
mov
and
inc
and
enter
xchg
test
out
rcrb
xlat
sub
mov
xor
in
stos
hlt
sub
sbb
pop
pop
add
xor
sbb
and
addr16
xchg
cld
xchg
je
mov
movsl
push
enter
shrb
add
ficoml
xor
mov
xchg
xchg
les
daa
xchg
shlb
or
jbe
cmp
into
ss
bound
int
add
sub
jbe
aaa
popa
fstl
dec
mov
pushf
aad
xor
rcrl
ja
push
sub
lret
jp
aaa
push
dec
shll
filds
sar
fldl
rorb
es
add
jp
dec
cs
jnp
or
mov
dec
clc
test
dec
testb
inc
adc
or
push
fs
xor
out
test
nop
pop
sub
shl
ss
fld
cld
cmp
mov
insl
xchg
dec
lods
bound
inc
cltd
repnz
ss
inc
popaw
out
pop
add
adc
and
mov
rclb
or
dec
push
push
loopne
outsb
xchg
movsl
adc
sub
dec
loop
add
xchg
pop
mov
popa
mov
inc
iret
inc
sbb
arpl
inc
out
gs
popa
push
cmp
inc
insl
or
mov
add
das
test
aas
inc
inc
or
inc
or
shrl
mov
xor
dec
inc
addr16
popa
inc
push
jmp
adc
mov
inc
test
stos
in
popl
in
xchg
les
or
and
inc
mov
daa
scas
outsb
jae
dec
inc
in
sbb
filds
jg
in
les
push
mov
cmp
push
js
out
or
sub
and
lcall
cmc
into
dec
xor
add
filds
shll
lods
lret
xchg
ds
mov
jns
xor
jbe
mov
jo
rol
xchg
out
test
cmp
popl
test
loop
jp
add
xor
dec
mov
xchg
cs
inc
mov
imul
je
test
dec
add
sub
jnp
xchg
pop
mov
iret
gs
sbb
out
in
movsl
jg
xchg
push
cmp
xchg
jo
sub
scas
jno
add
xchg
test
mov
mov
movsb
andb
dec
popf
jne
imul
in
int3
sbb
cmp
inc
outsl
sub
push
dec
lret
jne
mov
loope
sbb
je
mov
cmp
or
inc
test
sahf
sbb
sbb
cmovb
loopne
pop
xchg
adc
sbb
aam
xor
push
icebp
daa
push
xor
movsb
sub
xor
addb
daa
cmp
in
mov
add
cmp
dec
sbb
mov
test
xchg
or
shr
arpl
rcll
imul
es
cmp
stc
lods
out
leave
aam
xor
scas
lods
aaa
sub
mov
test
inc
jne
jle
popa
or
and
jp
xor
rorl
cltd
test
pop
mov
sub
push
or
and
xchg
out
mov
xor
pop
adc
cmp
sub
in
push
ljmp
mov
pop
push
dec
aas
sarl
lahf
pop
dec
mov
dec
and
rcrl
outsb
inc
mov
shrl
or
and
adc
pop
dec
xchg
jno
hlt
add
insb
jnp
lods
xchg
cld
xorl
arpl
sub
ret
arpl
sbb
sub
sub
dec
lahf
add
adc
aas
fidivs
popf
jge
mov
clc
mov
es
mov
jle
add
jns
imul
add
push
add
les
pop
gs
ja
mov
cmc
mov
pop
addr16
push
sahf
popa
and
fimuls
test
div
push
sub
cmp
xchg
shll
movb
xor
test
je
mov
jo
ud1
mov
cmc
adc
adc
dec
je
sbb
adc
adcb
das
pusha
dec
adc
pushf
and
cmp
xor
repz
test
xchg
hlt
sbb
pop
cltd
movsl
mov
mov
sbb
sbb
cld
das
adc
imul
xor
dec
mov
xchg
xor
adc
inc
xchg
pusha
mov
sub
xor
cmp
fbld
mov
ffree
xchg
jp
imul
test
xor
rdpmc
pop
xor
popa
mov
std
push
dec
icebp
fistps
dec
shll
imul
rclb
push
mov
repz
mov
flds
mov
mov
sahf
mov
mov
lods
push
and
lods
test
lahf
inc
shll
mov
enter
xchg
testb
mov
ret
clc
jg
icebp
inc
ret
popa
dec
out
cmpl
pop
xchg
sbb
inc
adc
mov
sbb
mov
mov
xchg
shl
jns
push
dec
jno
ror
int3
stos
cmp
or
lret
aam
pop
out
fwait
arpl
mov
shll
sub
xchg
and
xor
push
mulb
fsubr
cmpl
test
cmpsl
xor
les
push
loopne
jns
pop
xchg
pop
jge
dec
outsb
jno
and
int3
inc
das
jmp
leave
cmovns
rcrb
cmpsl
jp
int
jae
insl
imul
sub
cmp
xchg
in
add
pop
cmp
inc
adc
popa
bound
inc
dec
dec
mov
dec
mov
cld
cmp
inc
mov
fwait
push
cmp
push
push
fstpt
and
imul
int3
lock
movsb
jbe
dec
xchg
cld
adc
inc
pop
mov
pop
xlat
addr16
or
popf
xor
out
jle
int
in
jle
push
dec
xor
dec
scas
sub
popa
sbb
dec
jle
xchg
inc
test
dec
jae
mov
mov
and
addl
cmpsl
shl
in
add
pop
or
roll
jbe
mov
dec
adc
inc
mov
mov
or
cltd
or
jae
iret
movsl
rcrb
pop
outsb
in
insl
lret
loope
or
push
xlat
inc
test
inc
in
mov
lahf
dec
das
xor
fucomp
sbb
jge
mov
sbb
nop
mov
mov
std
outsl
jl
lea
inc
stos
inc
xor
mov
sub
xchg
fucom
lds
cmp
add
jo
mov
sbb
push
mov
lods
or
mov
sbb
dec
nop
jb
sar
insl
inc
pop
popa
lods
sahf
dec
lea
int
imul
push
dec
imul
dec
jo
xor
aaa
cs
push
shlb
xchg
sub
cmp
shlb
cwtl
fwait
jns
aas
sub
sub
push
bound
les
pusha
fistpll
xchg
mov
imul
inc
sbb
adc
rcrl
orb
adc
out
mov
xorb
mov
pop
add
fisubs
dec
push
dec
push
jle
inc
hlt
mov
sbb
sbbl
popa
pushf
mull
shrb
mov
jae
loopne
jp
shll
out
pop
xor
aad
fchs
in
mov
subl
add
xchg
xchg
xchg
sbb
xor
rol
into
xchg
call
sub
rorl
adc
mov
xor
adc
push
cmpsb
cmp
sub
in
mov
inc
bound
lock
fiadds
insl
dec
mov
add
js
pushf
aaa
xchg
test
push
repnz
pushf
pop
lods
std
sbb
push
push
mov
dec
es
ret
inc
push
int
push
inc
faddl
and
lahf
pop
cwtl
mov
int3
sub
mov
rcll
and
add
gs
rorl
fs
lods
and
scas
pop
inc
add
dec
arpl
and
rcl
pop
js
mov
sbb
xchg
loope
or
dec
and
sahf
adc
ret
dec
mov
xor
scas
fsubrs
aam
mov
sub
pop
xchg
lret
mov
fucomp
cld
gs
cmp
xchg
sub
testb
sub
push
push
xor
xor
imul
sahf
adc
loope
rolb
in
xchg
addr16
adc
shll
ja
outsl
mov
sbb
dec
ret
mov
push
daa
inc
cmp
mov
push
les
mov
push
out
and
or
jbe
bound
les
push
pop
out
push
mov
daa
lcall
inc
paddq
dec
les
xchg
mov
cwtl
in
pop
add
fstp
and
push
fwait
cmc
shrb
pop
xchg
cmc
xor
sub
pop
dec
je
sub
dec
jecxz
or
cmp
frstor
mov
pop
sub
sbb
push
push
mov
bound
test
xor
stos
and
jmp
mov
jns
shll
mov
and
in
repz
dec
jbe
fldl
xor
push
notb
cmpb
adc
push
cmp
inc
aam
jmp
dec
sbb
repz
outsb
shr
data16
push
jb
jle
or
xor
xor
sub
sub
and
std
gs
and
lea
xchg
dec
mov
int3
dec
hlt
fstps
mov
mov
adc
jge
cmpl
popa
in
adc
hlt
fld
xchg
sahf
adc
mov
and
adc
insb
test
xor
push
add
loope
sahf
xor
xorb
xlat
xor
cmp
fidivs
mov
mov
fists
insl
cmpsl
stos
scas
or
inc
or
jae
cmpl
mov
xchg
pusha
cmp
xor
xchg
enter
js
mov
sub
mov
mov
mov
movsl
notl
enter
adc
xchg
data16
jle
cli
imul
dec
dec
xchg
jp
bound
sbb
inc
nop
push
pusha
cmp
jno
outsl
js
inc
and
fnstenv
pop
test
adc
icebp
xor
jecxz
pushf
or
and
jb
gs
xlat
ret
mov
test
movsl
sbb
jne
push
aam
cli
ret
scas
and
stc
mov
sbb
aaa
fdiv
lea
inc
push
dec
popa
testl
adc
pop
test
jmp
test
jnp
ss
sahf
scas
jge
fldl
sub
push
sahf
dec
gs
dec
dec
sbb
xchg
lret
jae
push
adc
loopne
int
sub
hlt
or
es
gs
inc
les
push
cmpsl
pop
cli
pop
push
mov
pop
es
adc
lcall
imul
lds
xchg
fdivl
movsl
rolb
mov
loopne
fwait
xor
lahf
sub
movsb
xor
or
repnz
imul
xchg
xchg
inc
cmp
je
sbb
call
cmp
shll
jg
popa
mov
in
or
gs
inc
mov
fs
add
mov
jge
cmpsb
lcall
movsb
inc
cmpsb
pop
and
lods
mov
mov
add
lock
inc
cmc
shlb
rcrl
jp
rol
outsb
push
mov
fnstsw
movsl
data16
mov
aaa
mov
movsl
jle
mov
outsb
sub
pop
xacquire
out
addr16
inc
call
mov
sub
out
and
fnstsw
icebp
pop
jmp
test
jp
pop
movsl
mov
sahf
mov
int
in
mov
sbb
push
adc
loope
fadd
mov
mov
nop
imul
dec
add
loop
inc
fsubp
mov
sub
pop
push
jle
push
ret
sub
sbb
or
inc
add
shr
andb
loope
add
inc
iret
pop
mov
jp
int
pop
movsl
jg
clc
mov
sarb
shll
jg
cmp
xlat
jmp
dec
mulb
scas
scas
pusha
or
sbb
das
and
aad
xor
push
sbb
xchg
inc
inc
add
repnz
sbb
mov
cmp
sbb
stc
cmp
icebp
imul
es
fcoms
cmpsl
shl
cmp
fisttpl
loope
outsb
test
arpl
imul
out
enter
out
xor
xor
mov
add
test
sub
insl
sub
mov
adc
dec
cmp
mov
xor
mov
adc
dec
daa
add
cmp
mov
stos
adc
dec
mov
cmp
mov
or
out
pop
add
je
jns
test
add
and
xchg
push
call
push
cmp
jno
inc
rcrl
sbbl
jle
lahf
inc
loope
stos
jle
fdiv
mov
ds
xor
imul
xor
popa
inc
bound
mov
call
incl
adc
outsb
cmpsb
sub
fs
mov
or
sub
inc
cmc
adc
mov
mov
xorl
inc
mov
std
or
fld
outsb
push
cmpsl
and
inc
mov
mov
out
jle
lods
scas
add
jnp
push
sbb
test
int
inc
push
fsubrl
push
jg
int3
lahf
cs
xor
jle
fs
ds
mov
popa
and
push
mov
jno
jne
faddl
mov
test
jno
xchg
inc
or
sahf
movsl
incb
clc
imul
sub
hlt
bound
adc
outsb
js
push
or
dec
into
sub
mov
in
je
mov
leave
add
mov
jge
cmpl
mov
dec
dec
gs
push
int3
fisubs
sbb
inc
addb
mov
mov
lods
sbb
xor
xchg
in
and
dec
jo
mov
and
lcall
decb
sarl
xor
cwtl
sbb
push
icebp
pop
dec
adcb
sarl
inc
cmp
adc
jle
clc
pop
ret
cmp
jmp
xlat
push
out
sbb
push
shr
sahf
loope
adcb
test
decl
adc
mov
imul
cmp
adcb
inc
das
fcom
stos
shl
jle
mov
dec
cltd
xor
subb
test
jnp
and
jae
subb
push
test
add
push
loop
push
mov
mov
xor
push
jmp
push
jno
test
in
adc
hlt
cmpsl
or
sahf
sbb
stc
dec
dec
fldcw
inc
stc
inc
sahf
stos
push
dec
inc
cmpsb
sub
movsb
adc
cmp
leave
lea
cmp
fbld
jns
cld
jne
xchg
inc
mov
dec
or
mov
sarl
outsb
test
divb
push
cmpb
xor
psubsw
in
mov
and
pop
adc
gs
ficomps
cltd
outsb
imul
dec
dec
pop
ficomps
or
mov
daa
je
jmp
xchg
test
mov
fwait
push
jge
inc
mov
push
ret
je
iret
std
adc
incl
push
stc
mov
cmp
or
and
inc
and
lods
imulb
fnstcw
lds
mov
shrb
push
lds
mov
roll
push
adcb
ret
sub
cwtl
test
movsl
cmp
out
subb
dec
les
out
adc
in
test
lret
push
cs
sub
repnz
mov
arpl
test
pop
inc
and
mov
pop
bound
popf
mov
popa
pop
pop
cwtl
das
and
xor
or
rorb
xor
flds
xor
pop
jmp
xchg
jno
aas
cmp
pop
dec
and
lret
imul
sbb
cmpsb
and
frstor
in
inc
adc
mov
push
pop
jnp
xchg
sbb
xor
mov
fidivl
cmp
daa
fsincos
je
push
mov
inc
cmpsl
cmp
mov
sahf
data16
negl
into
loope
push
mov
imul
std
jno
dec
inc
jp
shrb
aaa
data16
push
test
nop
adc
xor
or
dec
mov
dec
rorb
dec
jbe
xor
mov
or
jbe
mov
push
cmp
enter
inc
or
push
inc
mov
inc
das
push
adc
divb
and
loop
xor
cmp
daa
sbb
adc
mov
xchg
sub
pushl
lret
dec
roll
mov
outsb
ja
aad
shrl
ret
inc
and
pop
xor
loop
int3
xchg
sub
fsubrs
pop
std
es
sbb
imul
int
dec
mov
fimull
lods
popa
popa
out
or
and
pop
add
sahf
out
xchg
lds
jp
aam
mov
mov
fstpl
repnz
push
ja
sbb
push
and
aaa
cmp
int3
xor
dec
mov
js
pop
movsb
and
shll
gs
xor
in
cmpsl
aam
adc
and
outsb
jle
xor
jno
mov
jno
fildll
mov
ret
mov
jae
push
lods
les
cmp
adc
mov
das
pop
cmp
cmp
ret
rol
inc
push
out
and
cs
push
test
sbb
loope
daa
sbb
lods
ret
mov
sub
movsl
ret
inc
jns
lds
jno
popa
push
ja
test
pop
inc
jbe
rolb
fnstenv
test
gs
cmp
into
daa
data16
mov
mov
jns
data16
add
mov
pushf
mov
inc
sub
idivb
dec
cmp
ret
jecxz
mov
rclb
push
icebp
inc
outsl
shl
xor
leave
jecxz
cmp
ss
hlt
mov
jne
bound
pop
std
int
mov
xor
stc
xchg
mov
cmp
xor
pop
shl
loop
repnz
fs
dec
dec
sar
sbb
jns
std
movsb
sub
ret
or
inc
add
sbb
jns
mov
lds
movsb
stos
ljmp
mov
jne
jns
rcr
cmpsb
cmpsb
in
outsl
pop
mov
jge
in
inc
cmpsb
sbbb
mov
push
inc
stos
bound
add
test
stos
add
inc
lahf
push
push
lods
aaa
sub
shl
mov
aad
aas
push
rclb
push
push
push
js
stos
movsl
decl
or
and
inc
loope
xlat
inc
xchg
imul
mov
out
daa
mov
pop
lods
imul
aam
xchg
sbb
push
mov
mov
push
cld
fs
insb
roll
dec
xor
filds
dec
idiv
push
mov
sub
lods
xchg
push
pop
int
pushf
aas
repz
mov
mov
fldt
out
add
stos
pop
loop
mov
mov
push
pop
sub
out
pop
fsubs
imulb
hlt
std
dec
add
pop
aam
adc
decb
xor
and
mov
mov
cmp
sbb
inc
pop
add
mov
bound
inc
ds
arpl
insl
insl
out
sbb
lret
sti
fs
adc
xor
sub
cwtl
je
pop
or
into
and
mov
lret
stos
dec
or
and
loopne
xchg
test
int
popf
test
bound
xchg
and
mov
popa
inc
test
inc
adc
push
pop
add
ficompl
jmp
dec
adc
shll
mov
popl
xchg
mov
mov
mov
stos
shrl
addr16
mov
repz
pop
dec
inc
or
push
sub
and
add
int3
outsb
xor
orb
mov
push
push
xchg
lcall
fs
jmp
pop
xor
repnz
push
cmp
xchg
jne
push
push
xchg
mov
push
in
ss
or
fiadds
filds
pop
daa
ss
xchg
xor
fwait
test
lcall
sti
mov
shrl
daa
pop
mov
testb
xor
bound
lahf
push
in
sub
or
mov
and
rcrb
lea
flds
sub
in
mov
popf
sub
mov
lods
inc
or
cmpsb
aad
lods
inc
jmp
test
fdivrs
loop
stc
or
sub
cmpl
push
fildll
pop
mov
and
or
add
push
xor
mov
cmp
jecxz
dec
push
mov
adc
pushf
nop
mov
aam
repnz
stos
or
loop
jbe
decb
mov
lea
mov
push
xchg
shlb
outsl
ret
mov
push
cli
inc
outsb
mov
push
int
pusha
jmp
cltd
imul
mov
jmp
sahf
sub
notb
inc
dec
lret
and
loopne
arpl
filds
mov
ret
sub
mov
dec
sub
test
push
cmp
lret
inc
mov
dec
bound
inc
lahf
or
or
lds
psrad
push
sbb
sbb
pop
cmpl
mov
jb
insb
xchg
add
lock
pop
sub
pop
jg
int
int3
and
loop
push
pop
adc
jl
sub
dec
loope
fisttpl
sbb
sub
clc
ret
push
andl
cmp
mov
imul
xchg
sbbb
popa
test
sub
jnp
jecxz
mov
xchg
xchg
push
repnz
aam
and
shrl
loop
mov
xorl
daa
inc
hlt
fwait
mov
in
mov
sub
lods
repz
or
lea
add
out
or
cwtl
add
in
jbe
cwtl
pop
jmp
push
dec
sbb
out
pop
nop
loop
jge
and
push
dec
fwait
xchg
or
push
add
xorb
dec
sub
xchg
xchg
stos
les
fnstenv
test
adc
cmc
ret
sub
out
push
ja
mov
sub
shl
in
cmp
mov
xor
inc
sbb
cs
leave
into
loopne
xchg
inc
push
loop
mov
lahf
repnz
aam
jno
cmp
inc
and
push
repz
fnsave
imul
jo
cmpl
pop
sbb
scas
xchg
subb
xor
pop
mov
xor
mov
lea
xchg
push
pop
or
gs
shrb
loope
dec
insb
mov
lods
xor
subl
mov
push
xchg
gs
aad
push
xlat
test
push
push
inc
je
xchg
mov
pop
dec
repnz
xchg
imul
push
jp
add
sub
dec
in
push
cmp
shlb
je
mov
mov
jecxz
push
pop
rolb
and
es
push
mov
jne
sbb
insb
ja
jmp
hlt
test
dec
movsb
lock
add
ret
mov
push
addr16
outsl
xchg
xchg
test
pop
sub
test
jmp
add
out
stos
cld
dec
popa
cltd
pop
sti
repz
insl
jns
imul
sub
push
cmp
loope
lock
jne
sbb
xor
mov
and
cwtl
test
and
fstpl
inc
sub
cmp
cmpsb
insl
ret
cmpsl
jp
and
mov
imul
cmpsb
divb
cmp
jl
xor
dec
sahf
sbb
addr16
mov
mov
jno
mov
push
test
lret
insb
fisttps
or
loop
push
test
dec
inc
add
xor
and
inc
das
add
imul
dec
inc
mov
pop
sahf
mov
sbb
cmp
jne
fdivr
mov
xchg
jmp
jne
xchg
test
fldt
pop
dec
dec
push
js
popa
pop
inc
mov
shl
fstl
icebp
jne
loope
stos
pxor
mov
mov
cmp
outsb
mov
movsl
hlt
bound
push
add
push
jmp
fstpl
aaa
movsb
adc
in
xor
inc
cmp
loop
mov
sbb
mov
xor
ret
loope
cmp
or
inc
or
mov
or
sub
les
or
dec
mov
inc
movsb
hlt
fisttpll
mov
xchg
rol
negl
int
adc
lcall
shrl
push
repnz
pop
insl
mov
fsubr
sbb
adc
sub
in
lods
test
aas
jnp
push
cmp
pop
mov
pop
dec
cltd
movups
roll
jl
gs
popa
jge
movsl
add
movsl
cmp
dec
push
mov
xorb
shrl
xor
sub
les
push
subb
push
adc
jne
outsb
cli
dec
xchg
hlt
scas
lret
mov
adc
push
mov
dec
imul
sub
out
jo
aas
mov
xor
jno
mov
out
rol
mov
inc
std
loope
mov
and
mov
in
jl
test
mov
sub
aas
jns
add
pop
pop
gs
loope
and
sub
rorl
scas
fwait
repnz
loope
sub
insl
xchg
jp
cmpsb
xchg
int
push
fdivrl
add
inc
nop
out
fists
mov
movsl
push
notb
ds
test
aam
pop
out
in
es
mov
and
icebp
dec
push
and
xor
clc
popf
imul
sub
push
movsl
lcall
repnz
or
mov
test
and
inc
jbe
cwtl
dec
inc
js
repnz
sub
dec
push
test
adc
inc
cltd
cmp
inc
sti
ljmp
cmp
iretw
movsl
test
xlat
cmpsb
lods
cmp
pop
sbb
aaa
and
and
sbb
test
mov
and
dec
aas
pop
ljmp
add
mov
jbe
rcl
jae
inc
das
xor
push
jmp
hlt
jp
rcll
xchg
mov
bnd
imul
pop
out
xlat
mov
xchg
mov
rolb
aad
push
sub
stc
and
out
pop
orb
and
addr16
pop
test
ds
push
popa
mov
mov
sub
jle
dec
sub
or
call
das
outsl
adc
loope
pop
mov
jmp
push
imul
push
push
shl
jns
rorb
js
add
out
stos
push
jl
fsqrt
lret
mov
clc
pop
ret
fadds
mov
dec
dec
cld
cmp
cmp
dec
shld
into
inc
mov
test
or
and
pop
pop
cmp
xor
mov
sub
cmp
jae
xlat
fcompl
popa
inc
enter
sbb
cld
imul
int3
push
inc
inc
push
cmc
clc
sub
fdivrl
pushf
popa
jae
and
fisubs
add
enter
push
xor
out
mov
in
notb
outsb
ja
cmp
enter
xlat
in
imul
sbb
div
inc
outsl
or
es
stc
and
sub
mov
push
jg
int3
sub
stos
ss
movsl
fs
loop
repnz
icebp
jns
cmp
rcrl
inc
das
adc
hlt
pop
movb
subb
push
mov
xchg
insb
mov
test
popa
loopne
rorl
mov
jns
mov
pop
les
mov
mov
cmp
cs
add
sub
xchg
or
insb
push
imul
icebp
inc
add
dec
and
and
daa
lods
mov
sub
and
xchg
xchg
repz
sub
jne,pt
sub
sbb
enter
fildl
arpl
inc
push
aaa
es
enter
and
mov
or
mov
sbb
inc
icebp
xor
dec
push
mov
movsb
rcll
lods
pop
adc
adc
negl
fs
outsb
mov
pop
sbb
pop
imul
iret
jmp
xor
sbb
test
lods
mull
sbb
pop
cmc
sub
and
push
cmp
popf
leave
fadds
lods
fmuls
loope
xlat
sbb
arpl
stos
mov
bound
arpl
mov
inc
clc
popf
inc
dec
dec
rolb
jno
inc
imul
mov
pop
cmpsl
repz
push
orb
cmp
test
xor
sub
fs
jbe
jmp
decb
adc
movsl
popw
jg
mov
addl
test
cs
and
leave
xor
pop
mov
ds
sub
mov
push
inc
cmp
mov
inc
dec
inc
mov
cmp
xor
outsb
mull
leave
push
jb
or
and
inc
adc
xchg
sti
add
outsl
mov
repnz
push
pop
jp
insb
push
pop
outsl
loop
sbb
sub
pop
jae
lock
dec
mov
cmp
and
pop
es
mov
and
inc
push
pop
insb
adc
rolb
inc
inc
arpl
inc
les
jp
cmp
bound
int
sub
pop
nop
and
les
jb
lock
sbb
xchg
addl
verr
out
mov
mov
cmp
jno
xchg
ficomps
xor
adc
xor
aam
repz
pop
das
sti
mov
push
test
jbe
lcall
loope
and
enter
add
in
push
int3
jns
pop
push
popa
lret
insl
daa
or
mov
jno
mov
push
pop
mov
cld
mov
ss
sbb
dec
pop
sarl
add
inc
xchg
jo
sub
jecxz
loop
xchg
movsl
je
sbb
inc
dec
dec
xchg
inc
pop
stos
mov
aaa
inc
enter
jno
cli
push
dec
sub
popa
ja
test
pop
imul
xlat
shlb
mov
push
jecxz
sahf
inc
push
fnstenv
mov
mov
repnz
stos
jmp
mov
int
push
mov
mov
add
jno
push
inc
xor
decl
jp
das
inc
xor
mov
test
dec
adc
mov
push
das
mov
imul
mov
pushw
push
pop
fnsave
arpl
jge
cmp
and
inc
inc
xor
out
rcr
cmp
add
sahf
mov
push
dec
sub
mov
insl
stos
popa
inc
mov
cwtl
scas
inc
sbb
push
xchg
lahf
push
lock
xchg
dec
dec
xchg
add
sub
xchg
lret
push
das
pop
mov
push
cld
and
jno
inc
daa
and
pop
fnsave
push
into
inc
gs
jnp
leave
dec
dec
stc
rclb
mov
adc
cli
bound
push
mov
push
lahf
or
dec
sbb
add
inc
xor
hlt
adc
mov
add
ja
bound
mov
imul
lcall
sarb
pop
ds
sub
xchg
sahf
push
cltd
inc
icebp
ret
mov
data16
or
sbb
xor
ret
adc
add
sbb
lcall
les
mov
or
das
shlb
leave
outsb
inc
test
jns
dec
xlat
repnz
adc
fnstenv
cmp
push
inc
int3
daa
in
fadd
or
stos
sbb
sub
jbe
inc
sub
mov
jmp
js
jno
ret
cmp
hlt
test
loop
and
jp
jbe
mov
dec
pop
mov
xchg
std
mov
mov
js
pop
mov
push
ret
bound
enter
mov
idivl
push
push
xor
lahf
xchg
rcll
daa
pop
lock
and
in
adc
dec
push
mov
inc
test
popa
mov
mov
dec
test
int
repnz
xchg
insl
push
out
xor
sbb
inc
call
xor
xor
stos
and
mov
adc
pop
adc
jle
mov
mov
ret
iret
xchg
xchg
enter
inc
xchg
or
enter
mov
jbe
sbb
jae
fistps
leavew
lock
out
jbe
sahf
cwtl
cmp
xchg
nop
pusha
dec
out
fisubrs
mov
dec
addr16
dec
or
push
push
xor
ret
jno
repnz
inc
std
sbb
adc
mov
test
int3
pop
mov
shrl
aas
popa
into
xchg
dec
push
aas
popa
jp
je
dec
cmp
pop
xor
testl
hlt
add
sbb
inc
test
pop
mov
cli
pop
lods
test
jg
push
jno
push
sub
mov
jg
and
add
insl
bnd
mov
int3
vunpckhps
roll
and
mov
mov
add
jle
shlb
dec
push
xor
loope
sbb
xchg
cld
pop
out
push
and
lahf
push
push
pop
mov
ss
je
je
in
addr16
add
inc
in
cmp
movsb
dec
inc
fincstp
ret
inc
dec
jbe
repz
shll
push
push
out
xor
sub
lea
movl
mov
test
jg
mov
sbb
int
sub
adc
dec
cwtl
push
lea
inc
std
mov
sbb
push
leave
jl
arpl
and
loope
jo
icebp
fldt
shll
inc
cmp
push
inc
jp
inc
shlb
incb
repnz
or
enter
imul
in
shll
cmp
les
dec
sub
cltd
jg
inc
insl
loope
xor
bound
in
shlb
ja
test
sbb
rclb
std
mov
push
and
jp
fwait
adc
cmp
dec
jnp
mov
bound
xor
inc
dec
adc
jmp
jp
arpl
jbe
daa
enter
dec
push
jae
dec
aaa
imul
sbb
mov
ret
pop
ljmp
push
loope
mov
in
jge
shl
dec
adc
std
xor
pusha
test
inc
inc
dec
push
leave
cmp
fdivrs
mov
inc
jns
xor
cmp
cmp
jno
insb
mov
test
sub
les
add
aad
dec
and
push
and
add
xlat
ss
xorl
addl
jne
jl
cmpb
mov
ss
mov
cltd
sub
aas
movsb
cli
or
cmpsb
pop
sbb
jno
arpl
rol
xor
mov
popa
psllw
cmpl
fldcw
xchg
mov
xchg
push
mov
fimull
ljmp
gs
sub
mov
mov
fstps
testb
xor
pop
inc
adc
mov
adc
stos
inc
das
icebp
pop
gs
dec
and
or
pop
jecxz
sbb
mov
jmp
jne
and
mov
test
repnz
loope
lock
and
ja
in
test
xor
cmp
pop
pop
insl
lret
scas
ljmp
pop
mov
and
push
sbb
in
cmp
jmp
call
jno
les
aaa
in
dec
call
and
das
xor
dec
pop
stc
dec
push
adc
sbb
fnstcw
aad
and
and
in
insb
push
cmp
test
repnz
fcmovu
xor
add
fsub
mov
sub
mov
lods
mov
sahf
mov
dec
testb
ljmp
test
sti
xorb
cmpb
add
adc
mov
lretw
movsb
in
out
popa
stos
outsl
dec
sub
stos
les
inc
pop
pop
mov
add
push
cld
sbb
test
lods
jno
cmp
ret
xchg
xor
mov
mov
sub
inc
rcrl
inc
daa
sub
icebp
popa
insb
dec
loop
sub
xor
andl
fs
push
and
int
sub
arpl
addr16
test
xchg
enter
sub
pop
dec
sub
sbb
inc
test
ja
cmpsl
cs
sub
repnz
enter
dec
xor
sub
lret
stc
jl
mov
inc
cmpsl
jns
add
loopne
repnz
arpl
hlt
sbb
xor
aam
inc
mov
pop
adc
dec
out
inc
outsl
sarl
jmp
cli
lahf
es
shlb
enter
xor
jne
imul
add
ret
loop
insl
imulb
out
xchg
lods
testl
jne
add
push
popa
ret
ret
xchg
lods
enter
in
enter
mov
jp
jne
mov
cmpsb
cmpsl
aam
test
push
xchg
arpl
pop
push
outsl
scas
xchg
pop
dec
repz
push
dec
fcoms
xor
mov
addr16
sub
dec
movsl
mov
cmpsb
or
pop
sub
cmpsl
xchg
out
lea
adc
sub
push
xchg
fldl
movsl
cltd
xor
push
in
xchg
ds
mov
aad
dec
mov
push
cmp
xchg
inc
aas
dec
stc
xchg
mov
jnp
dec
sbb
test
data16
movsl
xchg
add
imul
mov
aad
xor
cmp
mov
mov
pop
adc
lret
insl
in
jo
imul
xor
push
test
pop
gs
cmpl
test
mov
js
inc
jl
in
gs
inc
test
jmp
nop
push
add
andb
addr16
mov
mov
adc
fndisi(8087
and
bnd
cmp
sbb
dec
aaa
mov
xor
out
dec
cmp
test
and
pop
js
subb
add
sarb
jne
daa
gs
add
repnz
pop
mov
popf
les
ret
es
xor
push
xor
sub
les
leave
ret
in
es
fildl
add
push
sub
lcall
call
dec
mov
addr16
jp
dec
sbb
popa
mov
xchg
loop
mov
sub
es
dec
adc
and
add
call
jle
mov
cwtl
out
and
xor
push
push
push
xchg
neg
and
mov
sub
xor
fdiv
lea
pop
jns
add
inc
cmp
jg
test
movsl
test
push
sbb
dec
bound
enter
mov
push
into
mov
xor
das
lods
sub
mov
add
imul
push
cmc
gs
cmp
cmp
les
lcall
mov
fidivl
call
sub
hlt
das
dec
les
mov
shrl
cwtl
leave
fisubs
pop
outsb
je
lahf
mov
inc
cmp
sub
inc
lcall
mov
mov
aam
push
cmp
icebp
loope
cmp
and
sbb
frstor
mov
ret
les
sbb
add
rcll
and
cmp
push
inc
les
les
shr
or
mov
loop
push
out
int3
int
shlb
inc
cmp
add
sub
sbb
mov
pop
dec
jns
pusha
push
push
cmc
fwait
or
add
ja
jns
jb
shll
add
fsubr
push
mov
rolb
push
cwtl
lret
jns
mov
push
arpl
inc
es
test
int
sub
test
pop
ljmp
push
push
shrb
ljmp
test
pop
inc
outsl
sub
add
push
jg
jp
jmp
insb
pop
pop
stos
xor
cmc
sbb
cmp
popaw
sub
aam
jge
fldl
cltd
push
sub
jno
pop
pop
nop
dec
sbb
xchg
mov
dec
push
outsl
xchg
dec
mov
push
cmp
pop
dec
and
mov
jle
shll
push
std
sub
adc
mov
jg
test
xor
lcall
ret
aas
mov
fldenv
inc
dec
cli
sub
test
or
adc
mov
push
aam
aas
mov
or
pop
inc
push
cli
sub
ret
sub
sahf
stos
movq
xchg
fldenv
sub
les
dec
adc
adc
sbb
cltd
adc
scas
cli
mov
mov
insl
sub
insl
jp
adc
scas
cmp
test
cmp
movsb
push
les
insl
aad
sub
mov
dec
js
sub
add
and
das
je
test
idivl
or
sahf
inc
xlat
lds
dec
out
data16
insl
jbe
insb
mov
jb
pop
outsl
pop
xor
orl
or
dec
adc
xor
pop
nop
xor
and
or
addr16
fwait
push
nop
js
data16
repnz
sub
xor
int3
xchg
xchg
dec
push
pop
cmp
inc
dec
outsb
pop
sub
xchg
ficoms
sub
bound
or
xchg
push
xor
loop
push
sub
icebp
lret
cld
imul
xor
data16
sub
pop
adc
lods
push
outsb
xchg
xchg
push
stos
cmp
jg
nop
fwait
and
xorb
imul
sbb
jecxz
dec
stos
movsl
jns
inc
faddp
popf
fwait
mov
adc
into
push
cmpsl
push
test
mov
sbb
scas
negb
push
arpl
loope
cmp
inc
shl
add
hlt
idivl
jmp
and
cmp
cmp
loop
sahf
jnp
mov
insl
clc
add
or
roll
aam
pop
ret
adc
mov
pop
aad
mov
mov
cmc
lea
les
sub
inc
sbb
shl
xor
cltd
xor
cmp
inc
dec
push
pop
inc
sbb
jno
xor
xchg
outsb
push
rcr
insl
fmuls
aad
bound
loope
push
adc
scas
jg
cmp
insb
lret
dec
jp
mov
sbb
dec
push
cmpsb
xchg
rcrl
fbld
fs
pop
xchg
xchg
int3
in
cmp
daa
cmpsl
rorl
push
leave
cli
sub
sub
and
ret
ja
movups
into
jbe
cmp
shll
popa
mov
push
ret
mov
xchg
dec
imul
sub
daa
jb
subl
pop
movsb
jg
jo
xor
add
inc
sub
js
in
add
sarb
aas
test
daa
dec
cltd
and
jns
sub
rorb
jge
push
les
dec
popa
pop
and
rcrb
cli
add
xorl
icebp
pushf
arpl
les
lods
dec
movsl
pop
push
push
and
pop
popa
push
mov
in
or
out
ret
mov
shrl
fists
in
es
arpl
mov
aam
scas
dec
in
adc
ja
shr
inc
or
mov
fisttpl
gs
push
and
cmp
cmpl
push
xor
divb
gs
loopne
jno
xor
cmp
andl
lret
imul
imul
and
das
adc
aas
popf
ret
jo
add
push
inc
addl
jnp
xchg
mov
das
lods
aad
xor
movsl
push
outsl
mov
jnp
pop
jne
int
inc
loopne
cmp
xor
inc
push
jbe
jle
cmp
push
xchg
and
xchg
xor
in
mov
xchg
xor
fcoml
fldcw
stos
add
cwtl
cwtl
mov
xchg
mov
jno
stc
arpl
int
mov
lcall
fs
dec
cmp
call
out
mov
loope
adc
dec
sarl
fnstenv
push
js
popa
cmc
xor
out
aad
stos
idivb
or
jo
fldl
insl
jp
int3
dec
mov
lahf
hlt
or
das
fildll
jno
pop
leave
dec
jne
and
xor
mov
into
aam
jno
dec
fstl
je
mov
ret
mov
xor
cmp
inc
xor
test
pop
loop
mov
xor
mov
xor
sbb
pop
popa
cmp
scas
mov
mov
or
cmp
pop
adc
mov
jmp
test
std
arpl
pushf
lds
stos
popa
idiv
pop
into
jle
mov
add
mov
sbb
xor
inc
sti
jne
mov
aam
aad
mulb
ret
loopne
sahf
shll
cs
lret
sub
pop
gs
sahf
std
hlt
push
mov
sub
cmp
pop
ds
fildl
in
xor
pop
repnz
jp
jns
stos
sarl
pusha
push
lret
xorl
stos
mov
push
ret
push
icebp
mov
sahf
mov
pop
inc
xchg
dec
stos
rcrl
and
jbe
xchg
push
pop
inc
or
xchg
in
xor
les
fwait
and
aam
xor
popf
divl
faddl
gs
faddl
popf
sahf
movsl
adc
mov
sub
jbe
aad
int
addr16
jae
frstor
mov
sub
adc
add
pop
push
dec
cltd
pop
mov
or
std
xor
cld
aad
ret
movsb
inc
mov
cwtl
arpl
les
mov
dec
xchg
or
push
test
inc
rol
in
jge
lds
gs
jne
and
les
adc
xchg
mov
sbb
jmp
ret
jmp
cmpb
add
ss
filds
jns
pop
pop
xor
xor
mov
repnz
mov
popf
adc
cmp
cwtl
inc
sbb
xor
into
sub
mov
jecxz
int
mov
sub
adc
fistps
mov
pusha
or
xor
or
add
addr16
jne
inc
fdivrs
gs
mov
lret
mov
inc
mov
mov
or
div
ss
adc
test
imul
mov
nop
dec
repz
int3
dec
sub
loope
sbb
push
rclb
add
inc
loop
mov
inc
int3
clc
jge
popa
jb
xchg
sbb
lock
loope
jle
mov
sti
jae
mov
cmpsb
cmpsb
inc
icebp
inc
pop
rcrl
sbb
add
ror
adc
movsl
repz
popf
cmp
adc
push
xor
inc
sbb
mov
pop
scas
lock
inc
mov
ds
insb
icebp
js
and
push
mov
into
sub
adc
or
dec
fcomps
fbld
push
and
jne
stos
push
dec
adc
lds
sub
in
fcomps
add
cmp
cmp
les
loope
push
lahf
adc
inc
pop
add
sub
mov
or
mov
xchg
fucom
hlt
fstpt
or
scas
dec
aas
xor
mov
push
testb
dec
pop
loopne
scas
enter
icebp
xor
fnstcw
mov
mov
test
inc
int3
gs
test
xor
inc
push
imul
mov
xor
inc
mov
pop
test
fsubrl
lods
mov
inc
outsb
addr16
loopne
aas
mov
pop
popf
inc
cmp
inc
mov
inc
in
push
cmp
bound
jnp
roll
pop
cmpsb
pop
movsb
in
imul
lcall
mov
jle
sbb
sbb
hlt
mov
cmp
push
pop
inc
mov
ficompl
push
inc
mov
mov
imul
jb
jbe
insb
xchg
jle
daa
push
js
mov
addr16
and
andb
sub
cltd
sub
xchg
lcall
jp
jbe
push
addb
insl
lcall
push
dec
cmp
jb
jnp
popa
retw
and
cltd
into
imul
push
dec
dec
cmp
sbb
repnz
les
push
push
fxch
stos
bound
xchg
mov
inc
testb
pop
test
xor
xchg
mov
inc
fistps
xor
and
lea
imul
xor
dec
je
stos
inc
loop
mov
aam
imull
jne
aaa
decb
js
shl
mov
shlb
mov
repnz
or
mov
sub
stos
xor
ss
popa
add
lods
xchg
mov
sub
mov
lret
ss
inc
dec
sahf
jmp
jb
les
jle
dec
negl
out
or
mov
xchg
imul
push
ret
in
mulb
fnsave
leave
lods
cmp
jmp
push
aad
out
outsb
xor
add
jbe
rcll
insl
sub
mov
or
add
cmpsl
dec
in
pop
test
call
imul
hlt
pop
inc
push
imul
push
cwtl
cltd
and
mov
inc
pop
mov
jne
dec
bnd
nop
repz
aam
ret
inc
daa
ss
lret
pop
add
jmp
push
or
movsl
jns
xchg
repz
arpl
stc
sub
cmpsl
pop
stos
insl
gs
test
sub
cmpb
xor
xchg
inc
xor
jmp
add
sub
fsub
and
loop
sbb
arpl
xchg
pxor
repnz
movsl
imul
push
mov
add
jg
stc
mov
or
test
push
leave
loopne
in
mov
out
push
les
movsl
jae
out
dec
gs
lods
and
mov
xchg
xchg
insl
inc
jno
xchg
jno
gs
xchg
enter
dec
jno
pop
icebp
mov
or
add
mov
jmp
faddl
int3
jnp
stos
sbb
popa
jb
push
jle
mov
dec
jae
push
imul
push
aam
popa
cmp
xchg
xchg
dec
mov
inc
pop
les
xor
mov
bnd
xor
inc
cmp
push
fdivrl
cmp
lods
xchg
xor
lods
les
popa
inc
dec
inc
stos
xchg
out
xchg
test
mov
dec
mov
mov
je
inc
cmp
loopne
arpl
clc
stos
in
jne
data16
popa
adc
mov
sub
xlat
pop
aaa
bnd
loope
popa
sbb
pop
mov
jb
add
mov
sub
ja
jge
mov
out
cmp
sub
add
sub
cs
dec
pop
out
xor
outsb
jb
push
inc
jp
notl
bound
icebp
ret
mov
pop
cltd
xor
lret
scas
pusha
shrl
mov
dec
out
stos
stos
inc
xchg
pop
xchg
xor
shl
xchg
jno
or
sbb
push
push
das
icebp
mov
loop
das
movsl
push
je
movsb
inc
xchg
mov
jmp
xor
push
adc
jb
cmp
jecxz
cs
movsl
shll
cmp
inc
cmp
mov
mov
rcrb
jne
add
xor
push
mov
es
imul
inc
lret
in
nop
test
add
mov
inc
icebp
lret
pop
dec
hlt
int3
out
leave
fildl
aas
dec
movsl
shll
mov
mov
adc
arpl
cmpb
sub
mov
push
pop
je
sahf
or
mov
sbb
xor
mov
inc
pop
mov
pop
out
sub
lret
lock
inc
mov
jg
jae
loopne
inc
jnp
dec
mov
inc
out
inc
dec
mov
shll
cwtl
xlat
scas
xchg
mov
dec
dec
aam
fwait
aam
stos
fwait
pop
lds
lcall
jecxz
add
lea
mov
adc
mov
mov
fidivl
xchg
sbb
push
fwait
call
cmp
and
jno
jmp
pop
add
imul
mov
add
fxch
out
jns
lea
lret
lahf
rorb
dec
js
int3
inc
add
ss
jge
or
xor
out
sahf
jae
adc
jecxz
hlt
dec
dec
js
mov
cmp
out
sbb
pop
and
or
outsl
pop
rep
gs
xor
push
idivb
lock
add
inc
push
mov
xchg
idivl
fldl
decb
xlat
xor
lret
int
out
flds
or
pop
jns
add
lock
iret
add
pushf
jb
jmp
pop
and
jns
and
aam
pop
sbb
das
popl
repz
inc
fdivs
mov
mov
inc
lret
mov
test
cmp
dec
mov
or
mov
cmp
add
stos
push
push
adc
sub
shll
xor
imul
imul
movsl
cmp
fisubrl
mov
push
cmp
in
jg
mov
and
hlt
orb
push
and
mov
sub
test
pop
fwait
sub
mov
add
xchg
in
xchg
out
popa
and
xor
enter
sbb
push
out
data16
int
sub
lcall
add
xor
subl
xchg
xor
xchg
inc
pop
xor
lcall
sbb
dec
sbb
dec
mov
dec
push
pop
or
pushf
cmp
push
mov
and
add
pusha
jmp
xlat
jno
popl
sub
gs
push
xchg
jg
mov
sub
aas
shll
jo
inc
jmp
jle
movsl
or
mov
pop
inc
fsubrs
arpl
xor
sbb
xor
int
push
sub
xor
out
shl
push
xor
and
inc
mov
jle
fmull
mov
mov
out
rol
inc
pop
add
dec
cld
jbe
test
inc
mov
jno
outsl
cmpsb
repz
jbe
outsb
add
and
adc
cmp
mov
inc
arpl
or
sub
add
int
mulb
sub
adcb
aam
les
mov
jno
pop
xor
xor
enter
cmp
cwtl
dec
lret
adc
test
movsl
adc
rorb
add
inc
fcomps
test
les
dec
lret
mov
dec
push
loope
pop
nop
gs
sbb
xor
insb
imul
dec
jae
lret
fsubrs
daa
cmp
andb
jne
adc
pusha
or
xchg
iret
outsl
faddl
jne
cmpsb
bound
push
jno
clc
fwait
push
subb
das
ljmp
daa
mul
leave
and
jle
aam
pusha
cli
fs
dec
outsl
xchg
cld
movsl
mov
je
movsb
xor
into
add
push
sahf
jbe
and
or
out
insl
cmpl
mov
sbb
ds
rclb
jmp
xchg
loop
sbb
ret
enter
xor
shlb
lcall
sahf
arpl
or
daa
stos
push
pop
gs
adc
scas
sub
jbe
jne
mov
aaa
faddl
gs
das
lcall
or
mov
jp
cwtl
or
call
sbb
jb
cld
bound
lcall
jb
inc
movsb
pop
mov
cmp
or
insw
cmp
pop
lahf
sbb
ss
gs
aad
inc
sar
push
addr16
into
je
movlps
mov
jne
in
addr16
cmpsl
dec
cs
push
test
out
aam
das
cmpsb
inc
or
inc
jb
or
mov
dec
cmp
jl
adc
inc
inc
and
test
jne
pop
loope
jae
fistpll
jge
loopne
xchg
cmp
aaa
push
dec
addl
ret
scas
sub
add
mov
jmp
sahf
shrb
subl
das
mov
sub
iret
inc
scas
sub
ja
cmp
int3
xchg
fidivl
out
dec
xchg
push
imul
sbb
add
xlat
cmp
cwtl
mov
adc
push
outsl
xchg
imul
adc
inc
aaa
mov
popa
shrl
adc
xlat
out
daa
push
push
and
ret
sbb
mov
pop
dec
outsl
aad
jnp
jmp
in
push
aaa
dec
icebp
and
mov
jg
imul
dec
ja
std
inc
adc
and
mov
data16
imul
icebp
mov
mov
xchg
sub
cwtl
cmp
jb
jb
xor
cmpsb
addr16
sub
cmp
sub
fidivrl
push
jb
addr16
loope
daa
enter
pop
outsb
jmp
push
cmp
bound
mov
insl
clc
sub
mov
pop
lret
dec
jo
loopne
inc
or
clc
push
inc
push
in
popa
in
sbb
push
cmp
jne
scas
nop
aad
inc
mov
push
cwtl
inc
sbb
mov
push
rep
sub
lea
pop
inc
movb
xchg
inc
popa
hlt
xor
cmc
lock
adc
imul
outsl
xchg
rcrb
and
pushf
push
loopne
jle
adc
xor
inc
mov
adc
mov
cmp
sub
inc
in
insl
xchg
imul
mov
jg
jnp
dec
xchg
fwait
mov
xlat
mov
jb
loope
jp
inc
sbb
adc
mov
dec
sahf
sub
loop
adc
test
insl
jp
xchg
and
cld
repz
xchg
xor
xor
les
jae
les
test
les
loop
test
dec
ss
rcr
or
dec
xor
mov
xor
xor
arpl
jle
daa
loop
or
int3
cwtl
imul
movsl
mov
nop
pusha
mov
loopne
aas
imull
stos
jo
in
stos
shll
shlb
in
xlat
in
mov
or
inc
sub
push
es
sub
sub
mov
jge
adc
adc
push
ja
mov
push
leave
lods
or
lock
mov
icebp
fxch
arpl
pop
dec
mov
sbb
mov
orl
and
push
les
dec
cmp
inc
xor
int3
sbb
fistps
shlb
inc
mov
jae
inc
inc
and
les
or
sahf
repnz
in
push
sub
lret
je
out
fidivrs
dec
test
or
sbb
popa
and
testb
push
mov
lret
aam
mov
pop
pop
data16
jns
xchg
lcall
inc
movsl
dec
push
jns
cmpb
mov
push
pop
push
push
sbb
das
cmp
cmp
ljmp
aaa
data16
pop
mov
call
lret
xchg
movb
addr16
out
cmc
mov
lods
xchg
fiaddl
adc
test
pop
push
lods
call
jecxz
repnz
add
push
pop
xor
ret
ret
loope
dec
data16
insb
mov
mov
test
pop
dec
jmp
inc
popa
jbe
jns
in
hlt
fdivl
rcrb
xchg
sbb
cmp
rclb
mov
pop
leave
int3
stos
shll
or
rcll
pop
lcall
push
sub
cs
imul
push
movsb
or
lods
jno
jbe
ljmp
dec
insl
xor
adc
lock
mov
das
pop
mov
test
or
add
rcr
sub
fiaddl
dec
jge
lds
cwtl
jns
adc
mul
test
pop
cmp
loop
stos
and
sub
sbbb
in
data16
loop
xchg
in
jns
add
loopne
xchg
fbstp
ljmp
icebp
jns
cmpsl
pop
fnsave
xchg
pop
inc
daa
out
adc
sahf
mov
dec
cmp
outsb
mov
ror
repnz
lcall
xchg
push
in
es
pop
xchg
jp
adc
xchg
push
and
sbb
aad
int
lret
in
hlt
sbb
jb
jns
les
xchg
out
dec
dec
or
fisttpll
pusha
dec
jle
cmp
cwtl
lods
xor
dec
cmp
xor
sub
test
jecxz
xorl
lea
ret
fiadds
sub
sbb
outsb
jecxz
xchg
test
dec
bound
lods
cmp
or
inc
testb
sub
push
push
add
xchg
in
mov
xchg
clc
daa
test
loopne
xor
int3
or
pop
pop
pop
jno
xchg
aad
scas
xor
push
jne
sbb
xor
shll
iret
sub
test
aam
je
adc
shrb
and
cmpsw
jge
xorl
mov
je
addr16
shl
jae
addb
and
je
in
xchg
lcall
inc
rcrl
popf
dec
dec
stc
push
jns
jns
subl
or
mov
or
cmp
or
imul
movsl
xchg
into
mov
or
gs
lods
cmp
or
or
mov
sub
repnz
cmp
pop
cmp
jbe
cmp
movsb
xchg
rorb
push
cli
mov
mov
push
push
cmc
xor
jmp
jno
mov
dec
subl
pop
sbb
in
adcb
xlat
adc
xor
scas
jne
stos
mov
fildl
std
mov
pushf
lcall
jnp
mov
cld
lahf
dec
xchg
arpl
std
inc
popa
dec
fisttpl
push
mov
or
insl
ds
mov
cwtl
pop
or
int3
leave
sbb
lcall
xor
xor
lret
jo
xchg
jo
adc
dec
xor
xor
adc
cmpsl
nop
arpl
or
xchg
stc
lret
xor
mov
xor
adc
cmp
adc
hlt
xchg
mov
mov
movb
sahf
push
jmp
je
xor
cwtl
xor
call
mov
repnz
dec
repnz
inc
shrl
cltd
xchg
loopne
cmp
xor
inc
rcrl
subb
ljmp
mov
call
les
add
and
les
inc
jne
stos
sahf
test
in
orl
imul
cmp
inc
sbb
sbb
mov
fnstcw
mov
fxch
dec
aas
aad
inc
mov
rcrl
fsubrl
pop
lret
dec
push
in
mov
cmpsl
filds
and
lds
fsubrl
add
addr16
or
or
add
popa
leave
enter
inc
imul
popa
ja
push
mov
or
mov
xor
into
in
jno
xchg
or
xchg
inc
sub
out
imul
lret
or
mov
insl
stos
loop
cmp
daa
mov
inc
test
mov
std
fimull
inc
xchg
add
xchg
and
add
filds
push
push
sub
dec
das
enter
push
hlt
repz
insl
xchg
and
mov
cmp
or
es
fldcw
gs
mov
jne
xor
cmpsl
popa
push
int
cli
mov
roll
decb
es
dec
sar
fbstp
cmp
shl
sub
xor
loopne
cmp
sbb
out
mov
lock
popa
mov
mov
adc
xchg
imul
mov
hlt
add
int3
enter
in
and
test
sbb
and
push
das
les
fildll
xchg
lods
sub
add
jno
lret
shrl
negb
and
imul
adc
cmpsl
cmp
outsb
pop
cmp
cmpsb
pop
cltd
inc
cmp
sub
mov
sub
xchg
xchg
or
push
daa
jecxz
roll
outsb
lcall
mov
mov
mov
and
sbb
mov
shll
jmp
addb
loop
test
test
push
aad
or
sbb
ljmp
je
fcmovnu
mov
lcall
les
xorb
in
addr16
lods
loope
fst
test
loope
push
dec
in
jbe
incb
xchg
test
addr16
xor
xorb
dec
or
popa
test
outsb
adc
nop
jbe
fsubl
shrl
test
xchg
cmp
inc
xor
jns
jnp
insb
lret
adc
mov
test
mov
bound
in
gs
icebp
les
das
pop
adc
sbb
xor
lods
test
pop
insl
dec
fwait
cld
addb
and
arpl
bound
dec
xor
ret
jp
push
subb
jnp
imull
sbb
dec
xor
dec
add
push
push
out
test
arpl
inc
aaa
cmp
rep
rcrb
fnstcw
fistpll
insb
and
outsb
inc
fidivrl
clc
sub
push
movl
ror
jg
push
mov
xor
sbb
imul
int
add
adc
ret
jg
xchg
fstps
mov
xlat
push
test
add
jge
jno,pn
mov
push
xor
sbb
mov
xor
lods
lea
inc
clc
testb
add
ret
sbb
pop
repz
test
mov
mov
pop
lret
ljmp
lcall
fistps
push
mov
in
mov
and
roll
popa
add
dec
sbb
or
push
aam
sahf
xchg
shrb
test
clc
in
pop
jno
push
test
dec
fidivl
arpl
jbe
fisubrl
lods
add
rol
pusha
sub
andb
inc
aad
xchg
mov
push
addb
xlat
mov
mov
ja
and
stos
push
fisubl
add
cwtl
jbe
mov
adcl
sbb
pop
aam
repnz
mov
cld
into
jo
xchg
mov
out
inc
jno
bound
cmpsl
ljmp
adc
out
pop
dec
push
jl
fmulp
stos
pop
mov
das
les
push
das
or
pop
adc
mov
push
xchg
cmp
outsb
loop
ds
fdivl
push
sbb
sarb
bnd
and
notb
pop
lods
dec
movsl
jg
push
fstl
aas
dec
popf
and
dec
shrl
les
inc
data16
test
mov
arpl
jmp
data16
inc
sahf
insl
jo
gs
insb
cmp
xchg
aaa
mov
adc
imul
jb
inc
aad
mov
add
jmp
lret
clc
int3
inc
ja
mov
xor
lock
or
xor
popf
cmp
js
adc
xlat
jge
repnz
ja
pop
es
sbb
inc
stos
mov
ss
dec
sti
ss
rolb
xor
rolb
es
movsl
test
xor
ljmp
cli
push
imul
sub
mov
or
jb
adc
sbb
sub
cmp
inc
pop
cmpl
jo
pop
mov
jae
xchg
aam
jg
mov
loop
fs
push
sbb
xor
lods
imul
sbbl
stos
in
xchg
js
push
ss
stc
pop
repnz
xchg
pop
les
or
in
ret
jmp
xor
icebp
enter
push
int
mov
fnsave
xchg
sbb
mov
loopne
dec
push
add
arpl
mov
inc
pop
test
lcall
xor
dec
add
loope
insl
pop
outsl
in
ficomps
insb
test
xor
addb
inc
xchg
xor
xor
in
push
fstl
jl
add
aaa
inc
loope
inc
roll
in
loopne
std
imul
aam
lds
outsl
xchg
cld
orl
mov
iret
push
in
dec
mov
cmp
push
sbb
subl
sbb
movsl
or
outsb
adc
jo
rol
inc
cmp
cmpb
mov
outsl
jb
sbb
sti
ret
xorl
inc
dec
fwait
outsb
ret
iret
push
pop
daa
outsl
jbe
ret
dec
mov
sub
pop
cmp
xchg
sub
push
inc
pop
cmp
insl
xor
daa
stos
or
jne
loopne
mov
mov
mov
add
adc
fsubs
or
pop
leave
add
enter
jno
ss
adcl
gs
inc
daa
push
xor
mov
imul
cwtl
inc
hlt
pop
divb
sub
dec
push
das
cmp
mov
faddl
aaa
cwtl
dec
fsts
sahf
or
dec
lret
inc
add
cs
jno
mov
insl
les
dec
fists
jno
mov
push
add
push
xor
adc
pop
shl
popa
jne
push
adc
test
les
pop
out
cmp
aam
xor
or
pop
inc
sub
push
cmp
int
bound
movsl
and
dec
dec
das
pop
ret
cmp
push
in
shll
xor
jmp
or
jno
std
mov
inc
add
cmp
mov
xchg
or
aam
stos
bound
cmp
lds
mov
cmpb
jmp
in
notl
inc
mov
xchg
jnp
inc
outsl
movsl
mov
es
push
pop
enter
mov
lods
pop
dec
out
inc
cmp
lahf
mov
les
push
fucompp
imul
mov
mov
sbb
jmp
mov
inc
xor
mov
insl
repnz
loopne
fchs
popf
mov
cmpsl
sub
mov
in
dec
or
fnstcw
cmp
subb
pop
insl
xchg
lds
iretw
mov
dec
movsb
xor
outsl
ds
cmp
mov
out
inc
jge
push
hlt
push
push
push
mov
mov
push
sarl
leave
xor
test
out
mov
xchg
aaa
call
sub
and
sbb
mov
and
aaa
inc
xchg
imul
mov
mov
adc
adc
lea
es
push
enter
dec
mov
mov
sub
out
mov
pop
cmp
cmp
cmp
or
push
fwait
das
stos
mov
jmp
inc
into
js
cld
aaa
jno
mov
jg
dec
js
sub
pop
imul
ja
sub
test
or
lea
sbb
outsl
imul
pop
stos
cmp
dec
dec
out
das
jge
pop
cmpsb
xor
dec
sbb
jnp
in
fwait
xor
ret
fwait
in
arpl
add
loopne
mov
push
daa
ljmp
test
push
lea
inc
xchg
insl
into
mov
xor
fwait
sub
cmp
imulb
in
or
mov
arpl
mov
push
jno
lcall
push
xorb
test
repnz
fsubrs
in
repnz
arpl
fimuls
outsl
mov
les
shrb
int3
or
popf
icebp
daa
xor
leave
fwait
and
jp
ljmp
decl
push
mov
cmp
push
inc
xchg
push
push
xchg
mov
lcall
movsl
cmpb
repz
test
xchg
ja
lcall
xchg
push
mov
mov
fcmovnu
adc
rolb
nop
je
testb
mov
sub
and
mov
dec
sarb
add
or
pop
inc
xor
in
scas
test
xor
push
out
jecxz
inc
popa
sub
jne
stc
aam
fs
mov
lret
pop
xchg
push
cmp
jno
pop
pop
inc
xor
dec
jno
or
cmp
or
cmp
push
dec
inc
je
inc
mov
out
jmp
mov
hlt
int
xchg
lods
jo
push
scas
mov
outsb
inc
shll
idivb
sbb
movsl
inc
divl
gs
xor
dec
data16
scas
dec
jnp
cmp
sbb
ljmp
cmp
cmp
mov
pop
jge
imul
or
clc
sbb
aam
mov
loop
jle
inc
rcll
enter
imull
es
arpl
enter
xor
std
aad
sub
stos
cltd
inc
and
mov
jae
ljmp
pop
js
inc
imul
sbb
xchg
and
xor
lods
add
mov
jne,pn
push
jle
inc
add
leave
imul
gs
add
and
in
pop
test
repnz
lods
fcoms
inc
insl
inc
push
xor
fmul
add
pop
push
and
mov
sarl
cmp
mov
inc
bound
dec
inc
xchg
stos
lret
jne
iret
cmp
rcl
shrl
pop
clc
push
movsl
shlb
jg
cmp
jns
mov
add
mov
inc
mov
sub
arpl
sbb
aaa
test
sub
mov
icebp
int3
push
in
and
frstor
test
mov
sub
inc
cmpsl
and
lret
loope
inc
and
jno
nop
lahf
inc
push
and
insl
lods
sub
movsl
push
lods
les
jmp
and
mov
enter
cmp
push
xor
int3
and
add
dec
sub
sub
mov
sub
jne
hlt
push
and
popf
add
inc
adc
popa
cmp
or
fisubl
scas
push
fadd
mov
xor
jnp
repnz
pop
stos
jno
cmp
rcll
or
aad
mov
mov
xor
mov
mov
popa
inc
or
sub
xor
mov
inc
outsb
jae
sub
jbe
cmp
xor
xor
jg
and
xchg
call
xchg
lock
cmp
jle
inc
divl
push
movsb
sub
push
cmpsb
cmp
sbb
sub
ret
rcl
and
leave
push
je
fstpt
or
adc
mov
cmp
xor
dec
movsb
insl
bound
test
aam
movsl
ss
repnz
fidivrs
dec
xchg
loop
mov
sbb
dec
shll
rcr
in
cwtl
xor
scas
dec
xor
cli
pop
push
enter
addr16
or
fadd
call
mov
sub
dec
jae
cs
xor
rolb
mov
leave
in
in
loope
jbe
pop
fs
arpl
jno
add
and
jp
arpl
push
push
sbb
mov
add
aad
lods
mov
sub
sub
mov
jno
cmc
xor
xor
shl
jnp
inc
call
sbb
int
cmp
out
aaa
mov
xlat
xor
push
ret
stos
adc
dec
push
cltd
and
sub
mov
sub
adcb
addr16
test
jmp
sub
mov
out
popa
mov
jne
movsl
les
inc
push
fnstsw
cmp
jle
test
xchg
lahf
pushf
xor
inc
sub
xor
frstor
add
in
repnz
push
mov
std
ljmp
les
or
xchg
and
leave
xor
sub
xchg
data16
clc
mov
add
dec
push
mov
add
ja
loope
mov
push
mov
into
and
shrb
jg
xor
or
inc
in
test
push
push
adc
or
shrl
repz
mov
addr16
int
sub
mov
adc
addl
jl
mov
das
testl
hlt
mov
and
dec
enter
jo
jb
push
inc
mov
test
jg
icebp
pop
fs
xor
lea
daa
inc
mov
push
loope
dec
daa
js
pop
mov
jo
jae
mov
loopne
lock
push
pop
inc
cmp
inc
das
movb
insl
js
fmull
mov
in
adc
aam
pop
and
call
mov
dec
pop
lret
dec
enter
mov
mov
or
jns
mov
cmpb
jbe
adc
jne
sbb
jle
lcall
push
in
sahf
loop
jp
jno
movsl
xlat
sbb
and
nop
testb
push
add
mov
dec
movsb
lods
repz
bound
rol
data16
aas
int
in
aaa
sahf
xchg
pop
stos
xor
test
mov
mov
jbe
xchg
les
lret
sbb
test
jns
push
mov
xor
outsb
jecxz
cmp
rol
fnstcw
pop
lret
test
mov
pop
xor
out
push
fsubrs
out
out
sub
pop
dec
bound
jns
inc
jmp
sbb
idivb
sub
fnstsw
adc
call
imul
orb
test
iret
stc
sub
arpl
or
inc
bound
ror
sub
iret
mov
add
pushf
jecxz
insl
dec
xchg
icebp
xor
in
insl
pop
xor
and
cmpsb
repz
jo
push
inc
push
adc
repz
add
or
rcll
add
mov
xchg
add
jmp
or
in
push
andl
outsb
ret
addr16
mov
rclb
cltd
dec
xchg
xchg
push
cltd
xchg
xor
and
jbe
or
insb
das
pop
shll
pop
adc
fildll
adc
mov
leave
lret
jecxz
xchg
xchg
xor
outsb
and
push
rcrl
cmp
movsl
mov
sbb
jl
jbe
popa
fnstenv
xor
push
push
and
inc
sub
mov
cmp
cwtl
sbb
sbb
inc
and
arpl
lret
sbb
stc
xchg
push
fs
andl
iret
pop
subb
bound
mov
scas
jne
rcll
scas
xchg
push
add
lods
or
test
les
pop
push
or
jns
push
adc
adc
or
loope
popa
mov
shl
mov
or
mov
dec
les
in
pop
push
mov
insl
mov
push
call
add
popf
rolw
jb
or
xor
pop
mov
aas
popa
cmp
stc
out
sub
das
dec
push
cli
fidivrs
sub
pop
std
leave
popa
or
icebp
mov
movsb
pop
push
mov
gs
jbe
enter
mov
aaa
das
test
dec
inc
aaa
pop
daa
or
inc
clc
int
imulb
hlt
mov
das
lods
jbe
gs
enter
je
cmp
aas
roll
clc
stos
and
repnz
lret
insl
inc
inc
inc
xor
xchg
enter
pop
xor
aaa
popf
enter
je
push
sbb
std
cmp
clc
push
je,pt
rcrb
mov
loope
daa
push
inc
cmpsl
or
add
rorb
push
into
daa
add
cmp
es
pop
es
stos
add
mov
sarb
xchg
call
and
shrb
cmp
sub
xor
sub
faddp
jbe
repnz
inc
mov
adc
out
sbb
cltd
out
je
jmp
fs
mov
cmp
lea
insl
mov
push
lret
out
sub
andb
ss
xchg
pop
jno
dec
cs
or
out
xor
inc
popa
cmc
and
in
push
pop
mov
stos
mov
addl
imul
hlt
shlb
push
mov
or
push
lret
add
jae
out
and
mov
loope
push
mov
aas
movsb
or
rep
mov
inc
stos
push
arpl
les
bound
mov
icebp
sub
arpl
or
insl
cmpsb
jo
test
mov
loope
daa
fistpll
push
xchg
push
test
enter
outsw
and
add
mov
loop
pop
push
stos
ljmp
mov
mov
xchg
push
adc
repz
add
sub
hlt
push
dec
icebp
add
jb
xorb
nop
mov
fs
repnz
mov
shlb
adc
cmpsl
jne
repz
scas
and
insb
and
repnz
gs
pop
arpl
lcall
rcl
gs
jg
das
incb
loopne
mov
dec
inc
cmp
jp
and
or
sahf
push
fcomp
dec
add
adc
sahf
repz
daa
mov
outsl
mull
add
jns
int
jno
insl
lods
mov
std
and
mov
xchg
mov
xchg
les
pop
add
xor
ss
adc
inc
insb
fsubrs
mov
xchg
mov
das
test
jg
or
adc
rclb
and
repnz
shl
inc
ret
dec
int3
or
pop
adcb
sahf
dec
cmp
rorb
xchg
and
xchg
mov
cmp
sbb
push
jmp
push
xchg
sbb
mov
dec
sbb
xor
divb
lret
mov
test
mov
mov
xchg
inc
sahf
lret
ret
xchg
jmp
jbe
mov
xor
js
cmp
cs
adc
imul
adc
incl
cmp
int
and
rolb
movsb
mov
in
fldcw
dec
inc
inc
xchg
mov
push
sbb
ljmp
daa
cmp
int
test
into
mov
pop
cmp
pop
dec
mov
aas
popa
and
cs
and
push
idivb
xor
fisubl
sbb
sbb
iret
dec
loop
cmp
repnz
insl
adc
sbb
dec
inc
mov
mov
dec
push
ds
movsl
fstl
lods
test
out
inc
cmp
orb
pusha
out
jg
xchg
lret
mull
popf
or
shll
jns
aaa
xor
push
sbb
cmpsb
stc
es
test
das
inc
adc
loope
popa
mov
pop
jns
adc
sbb
push
xchg
xchg
inc
stos
cmp
mov
pop
dec
mov
mov
ljmp
push
jmp
mov
pop
out
or
lods
add
or
addl
xor
push
mov
and
clc
lock
mov
sub
inc
popa
xor
xor
fisubs
bound
sub
mov
push
and
xchg
adc
and
les
ret
inc
test
and
xchg
hlt
mov
scas
in
add
loop
aaa
idiv
inc
test
popf
xchg
negb
sub
jne
mov
or
jmp
gs
jle
subb
aaa
popa
repnz
pop
test
cmp
jmp
in
xchg
cli
jbe
push
ss
fcompl
xchg
xchg
inc
xchg
or
mov
pop
popa
inc
test
sbbl
sub
pushf
dec
push
aas
jns
inc
inc
or
out
push
and
inc
jae
mov
div
mov
repnz
mov
add
dec
sub
sbbl
call
cmp
sbb
inc
inc
inc
bound
jge
fidivs
sbb
or
movsl
inc
jb
dec
leave
ss
and
imul
pusha
pop
pop
sub
popf
mov
in
cmc
xchg
xchg
push
scas
sbb
movsl
test
inc
out
cmpsb
xor
push
icebp
popa
stos
jmp
call
push
push
ret
cmp
xor
es
and
pop
push
popa
sub
or
icebp
mov
cmp
dec
mov
sbb
bound
dec
subb
hlt
inc
inc
shrl
adc
jmp
mov
inc
dec
and
jae
push
scas
or
or
dec
test
adc
xorb
adc
mov
sbb
addl
sub
rclb
xchg
ret
out
lea
sahf
xor
pop
inc
xchg
mov
out
dec
cmc
adc
pslld
sbb
js
jae
mov
inc
xor
enter
jmp
adc
repnz
out
das
xchg
dec
pop
ds
fbstp
orl
stc
repnz
sub
icebp
dec
in
dec
adc
add
stc
pop
aaa
fdiv
mov
push
xchg
sub
mov
ret
data16
pop
or
adc
xchg
outsl
mov
sbb
lods
jnp
xor
adc
divb
pop
jbe
roll
popa
les
in
cld
mov
sbb
jns
and
mov
inc
jb
dec
mov
sub
push
int
xchg
dec
push
and
sahf
out
xorl
xor
lahf
xchg
jb
rcll
ljmp
push
pop
imul
adc
pop
sbb
pop
add
icebp
loope
repnz
test
xchg
mov
test
dec
fsts
insl
add
and
xor
cmp
and
adc
outsb
and
inc
mov
call
jae
mov
popf
inc
mov
jne,pn
sub
testb
icebp
rolb
pop
ret
popa
xchg
ret
stc
lods
push
test
ret
shll
test
sub
lea
pop
push
mov
xchg
pop
mov
dec
push
repz
es
out
mov
sub
xor
scas
xchg
sti
xlat
int
rolb
pusha
mov
loop
pushl
scas
jo
insb
pop
enter
xchg
fcmovnb
imul
dec
or
sub
xchg
sahf
ret
dec
adc
fdiv
pop
insb
push
adc
jns
jecxz
mov
icebp
sub
adc
dec
cmp
mov
inc
lret
lcall
jp
lahf
pop
call
imul
mov
pushw
inc
imul
add
jmp
negb
lret
dec
arpl
aaa
inc
xor
in
dec
les
fdiv
xchg
aad
loop
jno
mov
outsb
mov
or
scas
mov
mov
jne
adc
fsubl
rdmsr
scas
xchg
jp
xor
mov
js
ljmp
jg
cmp
sbb
mov
leave
jns
inc
adc
xchg
aaa
xor
inc
add
xor
inc
shlb
mov
sar
jg
add
pop
and
test
iret
fs
sbb
jge
pop
fneni(8087
fidivs
leave
push
and
cli
repnz
and
out
xor
movsb
push
xor
out
and
and
inc
lods
cmp
adc
jo
test
and
xchg
dec
inc
ret
pop
aad
and
or
es
sbb
loope
or
add
insl
es
in
mov
andb
shl
add
rcl
adc
adc
jb
popa
jnp
add
and
aaa
mov
mov
inc
sahf
ss
dec
jp
pop
ret
int
push
adc
in
xor
and
xor
or
arpl
ljmp
push
sbbb
mov
enter
cmpb
mov
mov
imul
mov
adc
movsb
mov
iret
push
sahf
loope
adc
mov
icebp
dec
cmp
cmp
inc
out
push
fisubs
inc
add
push
adc
xor
ret
inc
popf
add
out
int
sarl
cli
cmpsb
cwtl
jno
jp
imul
cwtl
in
xor
mov
mov
in
scas
das
lcall
call
outsb
pop
les
dec
gs
adc
or
imul
dec
dec
int3
stos
dec
sarl
xor
inc
insl
stc
out
dec
test
jne
shll
lock
pop
xchg
test
inc
aad
fs
in
int3
jecxz
xor
outsb
ja
dec
fmull
push
movl
jne
sbb
inc
test
les
repnz
popa
sbb
and
inc
push
loope
xchg
pop
call
fldl
int
sahf
cli
or
sub
adc
dec
imul
test
test
jecxz
cltd
adc
push
mov
and
in
jne
sub
das
les
sbb
dec
mov
push
filds
test
mov
pusha
testl
int
enter
or
and
adc
hlt
enter
push
mov
cmc
sub
lret
fwait
jns
mov
js
mov
pop
cli
xor
shrb
xor
loopne
nop
imul
cmp
or
jle
add
inc
jle
je
push
lret
xor
adc
sub
mov
movsb
mov
push
mov
jge
push
dec
mov
mov
insl
or
decl
sbb
shr
popa
loope
jp
mov
jbe
lods
xor
loop
xor
sti
add
sub
cmp
xchg
xchg
sub
std
fs
pop
cli
pop
sub
shl
jg
enter
add
movsb
xor
icebp
pop
loop
sub
pop
into
cmp
xor
or
movsb
lret
mov
rorl
mov
jge
fwait
mov
and
popf
bnd
ja
fstps
xor
cmp
ds
xor
xlat
adc
cmpsb
xchg
repnz
or
mov
sub
mov
xor
aad
fcomps
push
push
dec
and
cmp
pushf
inc
movsl
lods
dec
imul
jne
inc
jp
addl
fldenv
pop
cs
rcl
xor
pop
cmc
mov
add
mov
fsubl
push
out
push
push
icebp
fidivs
in
sub
in
cmp
popf
fisubs
loope
insl
add
pop
pop
movb
lds
fnstsw
iret
dec
adc
in
stos
sub
imull
cltd
repnz
sbb
push
jnp
divb
rclb
imul
cwtl
jecxz
inc
cmp
xor
leave
je
xchg
fldcw
subl
test
jb
and
arpl
ret
sub
push
inc
sub
gs
mov
lcall
add
push
lds
pop
inc
xor
jge
pushf
lds
inc
sbb
jp
sub
je
movsb
insb
pop
jno
sbb
sbb
inc
inc
adc
gs
data16
icebp
inc
out
push
push
sbb
popaw
mov
das
pop
xchg
add
data16
cmc
inc
in
subb
mov
aad
push
pop
sbb
sub
and
xchg
popa
pusha
test
sahf
inc
lret
stos
in
out
aad
sub
dec
cmp
sbb
sub
pop
ret
cwtl
xchg
adc
or
and
cli
jge
push
out
insl
aad
and
scas
data16
movsb
xor
dec
cmp
mov
test
leave
xlat
enter
out
and
shll
test
lret
jno
mull
add
push
xor
mov
xor
jo
sarl
popa
inc
xchg
push
aad
xor
mov
dec
repnz
xchg
push
jge
cmp
push
mov
test
add
dec
pop
cmpsl
add
sub
subl
dec
rolb
mov
ret
sbb
les
jle
in
pop
push
push
les
xor
and
imul
inc
icebp
push
les
popf
xor
addr16
dec
inc
scas
popf
test
cld
sub
sub
xchg
hlt
mov
xor
les
scas
push
push
dec
divb
les
pop
jg
es
jp
inc
push
mov
lret
push
leave
add
daa
xor
fwait
jnp
xor
pop
inc
dec
scas
push
or
popa
push
mov
xlat
pop
sub
jne
jmp
std
inc
pop
stc
shll
add
xchg
push
sub
cmp
sub
dec
cmp
fucom
cmp
in
cmp
popf
test
pusha
and
adc
out
jne
stc
addr16
jns
mov
and
mov
in
int
mov
mov
ret
je
shr
stos
fwait
dec
cmp
dec
lcall
stos
cmp
call
addr16
outsb
mov
xor
lret
dec
popa
pop
into
and
iret
ljmp
inc
test
in
or
clc
ret
mov
std
int
imul
inc
and
aaa
nop
lret
repnz
or
adc
sti
push
pop
iret
or
jp
lods
iret
scas
jge
or
test
fbld
pop
test
dec
push
in
loope
jno
mov
fbstp
xlat
test
test
xchg
jno
cli
xor
xlat
cs
jge
cli
xlat
xorl
mov
inc
cmp
mov
jmp
daa
addr16
mov
mulb
rcrl
pushf
call
loope
inc
cli
ljmp
icebp
xor
outsb
aam
add
jnp
test
or
pop
sbb
jge
mov
jbe
mov
xchg
outsb
mov
inc
lock
test
xor
out
loope
notl
cmp
sbb
ja
push
test
sub
cmp
mov
ret
mov
and
xor
pusha
mov
push
jae
stos
mov
fiaddl
cmp
push
shlb
ret
cld
jbe
xchg
inc
jo
clc
je
fidivs
shll
les
nop
cmp
jno
mov
cmp
pop
adc
inc
mov
es
data16
subl
and
ds
xchg
cmp
sbb
pop
adc
mov
jecxz
inc
mov
in
dec
aas
ds
pop
mov
mov
pusha
xchg
test
jbe
xchg
negb
dec
add
pop
dec
sbb
jb
jg
or
jns
daa
inc
mul
nop
push
xor
fimuls
mov
pop
outsb
pop
ret
push
cmp
dec
in
mov
inc
pop
bound
push
inc
cmp
rolb
push
das
xchg
cmp
cmp
das
add
mov
int3
lret
sbb
dec
daa
and
daa
icebp
shr
xlat
mov
inc
adc
data16
rclb
out
outsl
call
inc
popa
fldcw
fldcw
int
imul
sub
popa
popa
int
hlt
jno
pop
pop
xchg
testl
sub
push
xchg
sub
adc
aad
je
xchg
pop
xor
and
push
aaa
mov
push
out
xchg
xchg
das
jo
arpl
and
jp
leave
jno
add
jno
aaa
push
dec
mov
jno
stos
and
pusha
or
fldcw
dec
mov
inc
cmpsl
jle
mov
insb
clc
stos
dec
dec
loope
xchg
push
in
jmp
pusha
mov
test
dec
jns
cmp
roll
cmp
push
in
inc
xor
shrl
dec
loopne,pn
leave
stc
sbb
xor
test
jg
bound
arpl
int
lret
add
mov
outsl
sub
push
jbe
je
push
xor
shll
lock
sub
cmovae
pop
jle
leave
dec
fdivrl
in
in
jo
fsubl
gs
pop
pushf
rcrl
mov
out
shrb
sbb
roll
sub
inc
gs
sub
leave
ret
les
loopne
cmp
repz
rolb
jle
or
inc
test
andl
jg
mov
outsb
dec
je
mov
mov
cmp
leave
movsb
dec
dec
sbb
insb
xor
and
add
aad
icebp
push
pop
popf
dec
ljmp
loope
inc
shll
loopne
cltd
mov
ljmp
or
imulb
aad
mov
jns
cli
fstpt
add
popa
sub
xchg
fnstenv
xchg
testb
pop
lret
insl
or
movsb
dec
addr16
mov
xor
jb
aaa
insb
jp
sub
repnz
loop
or
sub
mov
sahf
xor
les
sub
inc
es
dec
mov
xchg
fldl
fidivs
das
sbb
or
fsubl
sub
inc
or
mov
call
inc
xchg
mov
inc
xor
aaa
jecxz
or
jmp
push
mov
and
repnz
or
pop
bound
inc
jmp
bound
xchg
adc
jae
pop
stc
jno
test
sbb
in
mov
sahf
rcr
test
sbb
sbb
sbb
or
dec
test
in
and
test
or
stc
mov
mov
fsts
mov
pop
push
shr
jmp
lret
into
sahf
ljmp
or
rcrl
or
jns
mov
orb
or
xor
dec
sub
fs
mov
add
cmp
fisubrl
adc
sub
js
inc
testb
shr
xor
fcmovu
dec
inc
loop
lcall
sbb
les
sbb
ds
pop
ret
cmp
fidivs
rcll
fldenv
les
jb
push
clc
jmp
jbe
pop
xchg
dec
mov
xor
sbb
sub
xor
inc
adc
jle
push
sub
pop
test
push
rclb
cs
repnz
pop
sub
gs
call
dec
les
mov
ja
lock
jmp
testb
mov
jl
cmp
xchg
arpl
xchg
cmpsl
pop
push
lret
adc
mov
outsl
shrl
loope
mulb
sbb
mov
cmp
fnstenv
ret
mov
jmp
mov
xchg
loop
lahf
pop
dec
xchg
repnz
mov
jp
ret
inc
mov
repz
mov
andb
test
mov
aas
lcall
xchg
or
inc
mov
xor
inc
sub
icebp
or
cmpsl
andb
data16
lcall
mov
cwtl
inc
cmpsl
xor
shll
loopne
dec
sbb
jecxz
sar
je
aad
gs
icebp
scas
and
add
push
mov
dec
add
inc
cmp
jb
dec
jmp
mov
nop
mov
xor
pop
data16
xor
lds
and
push
movsl
loope
leave
add
jb
mov
or
push
xor
xor
jg
or
int3
xorl
in
jbe
cmp
movsl
sbb
bound
addb
movsb
push
adc
cmp
int
out
ret
adc
test
mov
popa
add
ret
sbb
out
je
mov
adc
xor
and
cld
jge
add
push
push
inc
mov
mov
and
adc
jmp
inc
dec
shlb
xor
mov
jg
xchg
sbb
pop
pop
mov
jge
in
mov
xor
xchg
outsl
aam
inc
scas
inc
mov
pop
rcrl
sti
aam
les
sbbl
pop
mov
ret
insl
add
lret
xchg
mov
sub
inc
cld
aas
loop
sub
xor
subb
cld
sbb
rorb
dec
les
shrl
pop
and
or
ljmp
pop
frstor
cmpsb
xor
inc
xchg
or
inc
imul
pop
mov
loope
mov
jns
jl
int3
xchg
movsb
pop
pop
sbb
cmc
inc
jle
outsl
adc
rolb
push
aam
sub
mov
fsubrp
sub
jno,pt
clc
popa
or
sub
mov
aam
cmc
lea
movsb
adc
test
aam
mov
insl
jg
xlat
inc
sub
cmp
push
mov
xor
cmp
dec
outsl
popf
movsl
mov
pop
jmp
mov
lret
incb
mov
cmp
dec
cmp
dec
shr
sbb
and
lret
jns
xchg
and
insb
push
stc
adc
aad
push
inc
pop
rorb
xchg
push
out
insl
add
out
pushfw
push
add
int
cmp
adc
cmpb
xchg
pushf
mov
cmp
mov
mov
rorb
jbe
mov
stos
lea
dec
movsl
cs
in
mov
test
in
ret
aad
ljmp
or
not
int
adcb
or
ja
xchg
fdivrs
roll
cmp
lahf
imulb
sti
int3
imul
mov
in
inc
xchg
shl
mov
dec
faddl
shrl
dec
pop
ss
xchg
loopne
cmp
jne
bndldx
ret
loop
dec
xlat
xor
das
fsubrl
cmp
std
pop
je
das
ljmp
mov
mov
and
jae
inc
andb
jnp
cli
adc
out
mov
pop
in
idivb
or
daa
insb
inc
dec
and
outsl
and
mov
fists
sub
adc
leave
aam
pop
cwtl
xor
pop
je
outsl
cmp
xor
pop
cmpsb
sub
scas
push
lock
ljmp
push
jno
pop
sub
lea
sbb
das
xchg
xchg
sub
sarl
add
ret
sub
scas
sub
and
or
jae
mov
in
mull
push
ret
and
roll
leave
jge
jl
push
xchg
add
sub
clc
inc
push
ss
data16
push
push
popa
movsl
mov
mov
ja
cltd
dec
xor
hlt
movsl
jbe
popa
and
mov
fs
push
adc
jl
xor
and
sarl
push
repnz
fidivl
sub
ror
push
mov
loop
cmp
addb
aad
sub
and
fstps
xor
aad
push
and
scas
sub
xor
test
dec
xchg
negb
fwait
pop
xor
xor
fcomps
stos
push
les
cltd
mov
std
int3
lahf
lret
data16
test
ret
xchg
jno
xchg
xor
ret
jmp
jns
pop
sbb
lods
imul
mov
insb
cmp
or
popa
stc
mov
inc
jg
ss
out
je
jno
add
sub
jge
mov
mov
cmp
andl
mov
sub
add
dec
push
insl
jae
adc
scas
data16
jl
inc
addr16
mov
icebp
mov
mov
xor
jmp
cmp
adc
push
pushf
dec
sbb
mov
push
sbb
pop
lds
or
jp
fistl
mov
scas
outsb
mov
jp
bound
jbe
imul
data16
jne
std
enter
push
repnz
xchg
repnz
dec
test
icebp
jae
lds
negl
push
pop
adc
and
push
mov
xor
mov
xor
je
lret
sbb
ss
jns
xchg
dec
xor
test
and
pop
push
fldcw
cmp
push
jge
mov
in
enter
stos
sbb
test
sbb
add
and
imul
movsb
dec
insb
int
mov
and
test
arpl
loopw
out
outsl
mov
dec
into
subl
pop
mov
xor
or
jmp
cmpsb
and
mov
sub
xor
mov
inc
pop
pop
xchg
repz
rorb
cmp
fdivrs
dec
and
ss
les
inc
jnp
pop
imul
stc
ja
and
movsl
jns
xchg
dec
jmp
inc
pop
test
inc
mov
repz
imul
xchg
dec
sbb
mov
loope
push
xor
sahf
daa
cmc
imul
fnstenv
mov
inc
push
loop
aam
repz
pop
fs
mov
push
pusha
jge
or
pop
pop
inc
push
dec
das
xchg
outsl
pop
or
out
cmp
or
dec
dec
cmp
jmp
repz
jno
lcall
xlat
aad
push
mov
inc
loop
dec
jle
insl
ljmp
mov
gs
add
jecxz
fcoml
sbbb
loop
filds
xchg
dec
xor
mov
dec
cmpl
je
push
sbb
sub
and
pusha
sarb
or
insb
xor
hlt
add
inc
push
jp
daa
jns
sub
dec
scas
push
bound
jl
sub
mov
ret
sarl
jno
sahf
cld
dec
mov
pop
sahf
insb
add
leave
repz
or
cld
jg
or
fwait
cwtl
inc
rcrl
sar
pop
and
pop
insl
les
dec
cs
imul
pop
sub
cmp
loope
lock
leave
push
inc
xor
test
shrb
xor
or
bound
aas
mov
ret
mov
out
in
mov
cmp
test
sbb
jnp
fbstp
push
sbb
pop
in
es
int
popf
and
movsl
and
sbb
xchg
cmp
popa
mov
outsb
and
sub
sub
pop
mov
and
inc
xchg
fisubrs
cld
dec
test
les
cmp
cld
bound
cmp
xor
icebp
add
adc
lcall
fidivrs
jmp
stos
adc
in
ss
push
jge
pop
ss
sbb
dec
cmp
and
inc
pop
aas
mov
in
xor
push
lds
out
in
cmp
aad
sub
lock
mov
mov
add
dec
cmp
sbb
dec
lds
imul
es
lods
dec
or
ret
jmp
jno
or
scas
sub
jl
leave
outsb
inc
out
inc
addb
xor
stc
sahf
ss
push
aad
dec
imul
shlb
test
mov
rcrb
mov
mov
int
dec
xchg
sub
add
ror
jne
sub
popa
enter
fcompl
inc
outsb
mov
jno
shlb
xchg
inc
pop
adc
cltd
test
xchg
push
xor
int3
xchg
cmp
fmull
lcall
xchg
add
jb
cmpsb
and
test
fsubs
push
push
push
subb
mov
mov
and
mov
ret
or
dec
mulb
out
jb
pop
ret
pop
insl
pop
xchg
sbb
divb
mov
filds
mov
mov
scas
aaa
xor
jo
int
dec
bound
hlt
sub
dec
lcall
mov
adc
lea
lea
sahf
xchg
xchg
imul
push
in
cs
xchg
xchg
jne
bound
xchg
xchg
popf
mov
push
pop
inc
lea
mov
sahf
mov
sbbl
loop
cmp
mulb
jecxz
mov
sub
lahf
fdivs
lock
jb
jno
jmp
mov
jae
jge
xor
pop
notl
adc
dec
and
xchg
js
outsb
adc
enter
in
insb
xorl
adc
aam
dec
and
icebp
or
add
mov
jg
outsl
jb
mov
cmp
push
shl
mov
test
andl
leave
les
fs
xor
aad
inc
test
cmpsl
and
es
xor
cltd
hlt
xor
fsubr
add
push
sti
mov
dec
xlat
gs
bound
mov
cmpb
mov
cli
stos
data16
xchg
or
arpl
and
call
inc
pop
xchg
rcrl
sub
add
cmpsb
jno
ret
shll
mov
cmp
sbb
xchg
loop
cmp
push
xchg
push
push
inc
cmp
leave
icebp
test
adc
inc
and
outsb
cmp
push
jle
sub
ret
or
mov
in
outsb
and
and
push
sbb
cmpsb
fnstsw
dec
sbbb
jp
enter
imul
add
jo
lods
cmpsb
cli
push
shlb
mulb
add
sbb
mulb
aaa
fcomps
aad
cmp
inc
pushf
pop
lcall
daa
xor
sahf
hlt
scas
cmp
jns
rol
dec
imul
jne
ret
lds
in
and
inc
pop
aaa
jb
mov
dec
js
leave
subl
sti
jbe
arpl
mov
popf
sbb
andb
sbb
jne
jp
out
jle
xor
sti
mov
sub
jns
inc
or
scas
sbb
lret
imull
icebp
ret
xorb
jle
pop
lahf
inc
mov
jno
adc
dec
sahf
mov
dec
lret
lods
mov
inc
arpl
pop
or
lock
andb
xor
push
ficompl
or
cmp
pop
daa
insl
lret
dec
sti
pop
popa
dec
iret
ss
mov
lahf
push
repnz
js
fildl
test
mov
mov
nop
jmp
pop
rorb
and
xor
inc
inc
xchg
mov
ret
pop
into
mov
jp
cmc
enter
push
sbb
cmpsb
xchg
jle
push
mov
mov
sub
or
cmp
push
les
arpl
les
xor
les
loopne
cmp
lcall
or
aas
shll
dec
xor
pop
xor
and
inc
repnz
rorb
pop
cltd
loopne
mov
mov
shlb
inc
mov
inc
mov
shll
lcall
imul
mov
popf
mov
addr16
aaa
idivb
frstor
add
lret
ja
das
push
or
inc
inc
mov
addr16
fcompl
lods
outsb
lods
lods
mov
dec
repz
push
arpl
jns
or
mov
icebp
pusha
dec
fstl
daa
test
inc
enter
in
out
mov
je
sub
jg
mov
addr16
sub
dec
and
sbb
aad
xchg
jp
sub
inc
aas
xor
loopne
push
shll
cltd
xor
xchg
jg
movsl
out
sub
xchg
ret
or
lock
adc
in
mov
roll
inc
and
mov
xchg
fnstenv
shrl
imul
mov
add
jns
push
aam
xchg
cs
popa
popa
test
mov
cld
std
xchg
jno
imul
jmp
and
jle
jmp
lcall
pop
xor
mov
cmpsl
mov
mov
lods
insl
das
pusha
dec
xor
mov
fs
push
insl
mov
outsl
fldt
outsl
mov
add
fwait
lods
pop
mov
xchg
bound
int
jo
int3
xchg
scas
inc
notl
lret
inc
imul
jb
push
cmpl
fiaddl
mov
into
ret
jg
test
clc
mov
and
mov
mov
adc
test
mov
inc
inc
push
xor
and
loop
ret
or
popf
mov
push
jae
pushf
movsl
inc
cmpsl
mov
dec
pop
jne
in
fiadds
or
iret
inc
xchg
sbb
add
mov
fnstenv
cmpsb
stos
das
inc
push
add
push
cmp
and
inc
int
xchg
inc
jns
ds
repnz
je
test
push
call
push
nop
mov
sahf
inc
loop
adc
xchg
mov
pushl
mov
cmp
push
jno
mov
push
int3
and
outsl
dec
jae
cmp
sbb
inc
movsl
dec
shrl
xchg
xor
mov
int
fs
xor
xchg
pop
sub
mov
data16
mov
daa
lods
sub
and
inc
sub
add
inc
js
and
mov
jg
bound
idivl
xchg
fimuls
in
mov
popa
rclb
in
lea
mov
stc
inc
scas
add
ljmp
sbb
stos
mov
js
lcall
loop
cmp
and
ds
ja
or
sbb
jns
test
xchg
shrb
mov
push
das
std
fistpll
and
cmp
popa
imul
fisubl
push
outsb
repnz
adc
jbe
push
sub
ja
push
or
test
xor
push
enter
iret
push
insl
stos
stos
inc
adc
mov
fmulp
std
out
gs
jno
movsl
in
mov
xor
gs
inc
push
pop
or
stc
stos
push
sub
inc
repz
push
add
repnz
dec
mov
mov
and
subb
mov
in
adc
int
in
lcall
xor
or
shrb
test
xor
adc
imulb
repnz
movsl
jnp
push
rolb
aaa
popa
movsl
loop
sub
add
cs
lahf
out
sbb
rolb
test
in
mov
inc
push
jecxz
bound
scas
fs
lret
pop
test
in
aas
mov
inc
shlb
xor
aas
je
dec
scas
mov
out
inc
push
shrb
jnp
popa
dec
push
dec
sub
jns
imul
push
jmp
cli
orl
ja
mov
lods
testb
mov
jae
or
les
arpl
popa
xchg
xor
mov
xor
jae
rcll
imul
jmp
sar
inc
push
jbe
fiaddl
and
jo
dec
adc
mov
mov
push
mov
and
jle
rolb
xchg
imul
pop
je
sub
stos
mov
inc
sti
cmp
bound
cmc
adc
idiv
je
sbb
xlat
cmpsb
lahf
cmc
and
push
popa
push
mov
dec
adc
inc
nop
add
insl
sub
pop
xor
sahf
sti
pop
arpl
arpl
gs
xor
rcl
cmp
hlt
ljmp
jl
test
out
insb
shrl
mov
jl
xlat
daa
cmp
stc
leave
pop
mov
mov
sbb
mov
inc
outsb
mov
data16
bnd
mov
sbbb
in
push
lods
push
inc
dec
xchg
sbb
jg
mov
loopne
cltd
sbb
xor
scas
loope
test
test
push
push
dec
sub
inc
cmp
pop
or
or
jno
mov
pop
pop
dec
cmc
cmp
inc
data16
cmp
inc
fsubrl
incb
test
divl
mov
lcall
les
pop
fs
leave
inc
dec
fwait
jmp
inc
sarb
sti
adc
mov
dec
rol
inc
sahf
cltd
cmc
ja
and
out
push
inc
push
jns
int
jp
mov
mov
xchg
dec
cmp
mov
jge
sub
aas
xor
cld
push
daa
jno
popf
bound
movsl
xchg
out
popf
pop
lahf
inc
lahf
sub
add
imul
inc
cmpsl
cmpsl
dec
jp
in
mov
xchg
sub
les
aaa
fnstcw
inc
cmpsb
insl
and
rorl
arpl
mov
jne
and
sub
lahf
jle
outsl
popf
adc
jno
je
addr16
insl
dec
rcrb
cmc
cmp
xor
add
xrelease
push
push
das
or
std
xchg
out
inc
adc
repz
dec
divb
xor
in
sbb
push
xchg
dec
es
cmp
or
inc
outsl
mov
add
stos
mov
sbb
mov
movl
popa
cmp
negb
imul
bound
gs
les
jnp
mov
cmp
imul
out
push
jmp
dec
movsl
sub
sbb
mov
jns
lods
int3
jb
shrl
lret
push
je,pn
push
push
imul
fmuls
les
mov
or
mov
imul
sbb
jno
frstor
leave
aaa
push
mov
xchg
jno
fcmovbe
mov
push
fidivrs
imul
fucomi
sarb
xor
test
sub
pusha
xorb
xchg
lods
xlat
in
pop
int
or
into
outsb
int3
inc
inc
cli
xchg
xor
or
or
imul
jno
sahf
insl
ret
repz
sub
dec
in
mov
faddp
push
jg
fsubrs
test
dec
je
pop
imul
inc
test
daa
movl
mov
ret
ret
xor
xor
pop
push
out
inc
ret
inc
pop
xlat
mov
jb
dec
mov
and
iret
cmpsl
jno
out
aad
jp
jns
into
daa
pop
fistpl
das
adc
loopne
pop
fistpll
outsb
inc
dec
adc
push
and
shlb
lcall
jo
inc
fisttps
mov
movsl
mov
mov
call
and
into
jno
sub
adc
lods
fistps
test
xor
jp
daa
pop
les
inc
repnz
sti
push
mov
fldenv
inc
cmc
addr16
nop
inc
aaa
mov
jle
push
cld
ret
mov
jg
push
lds
push
std
inc
rorl
push
xchg
dec
leave
enter
xchg
inc
fistpll
sub
imul
ljmp
add
icebp
jmp
add
rorl
add
add
mov
mov
mov
mov
push
mov
call
xor
testb
imul
faddl
dec
xor
mov
lret
movsb
popf
popf
add
inc
loope
iret
mov
jp
push
adc
push
rcr
dec
jb
xchg
mov
and
cmc
jg
divl
test
insl
aam
push
cmp
cmpsb
mov
xor
push
rcll
fdivrp
cld
insl
pop
mov
lahf
sbb
scas
jp
mov
jbe
add
push
dec
call
jno
dec
es
mov
dec
add
lods
lock
in
sbb
push
fcmovb
rcrl
cmovb
arpl
imul
cld
leave
imul
pusha
lcall
jp
pop
fwait
popf
enter
pop
pop
mov
cltd
adc
sbb
jmp
and
cli
dec
in
push
subb
mov
cmp
xadd
gs
xorb
lods
lahf
cmp
js
addr16
ss
pop
cmpsl
jmp
jae
ret
jb
lret
mov
lcall
addb
in
arpl
jge
rorb
stos
lahf
loop
les
push
movsl
sbb
xor
fdivl
ljmp
inc
push
mov
mov
jmp
outsb
jge
in
int3
mov
add
sub
mov
lds
sub
hlt
divb
sub
xor
mov
sub
push
outsb
scas
mov
lret
fs
mov
ret
stc
dec
inc
mov
test
movsb
dec
cmp
enter
mov
rcll
movsb
and
inc
xor
push
mov
movsl
fwait
cmp
jg
test
in
or
ss
lret
aam
insl
jg
sub
test
xor
xor
and
jecxz
incl
pop
and
and
jecxz
ds
mov
mull
push
aam
andb
mov
mov
dec
dec
xchg
or
jnp
sbb
dec
or
pop
adc
cmp
dec
out
xor
xor
inc
aam
mov
mov
jns
add
sbbb
mov
imul
popa
add
les
lret
mov
inc
cli
imul
je
daa
adc
mov
outsb
pop
xor
imul
outsl
push
lods
mov
jl
dec
mov
dec
cli
adc
xchg
test
xor
mov
into
gs
ret
into
xor
jnp
sub
data16
xchg
push
fucomp
adc
jp
jmp
sbb
enter
outsb
ljmp
push
popa
inc
stos
inc
shll
sub
lcall
xchg
aam
ja
gs
jnp
inc
inc
mov
adc
push
popa
repnz
sub
js
add
dec
cwtl
push
fimuls
mov
imul
in
bound
sbb
lods
cs
stc
mov
sub
js
out
cmp
nop
or
inc
fcoml
icebp
lret
mov
mov
add
push
mov
inc
ljmp
gs
icebp
dec
loopne
leave
icebp
inc
in
mov
push
iret
icebp
xlat
pushf
push
mov
xor
subl
mov
faddl
add
push
dec
pop
mov
jb
xchg
xorb
enter
shlb
jae
dec
and
std
popa
repnz
les
std
out
imul
lods
xchg
jns
ret
xchg
mov
lock
mov
lret
sbb
xor
movsb
addr16
cltd
shrb
mov
int3
enter
in
pop
inc
inc
xchg
xor
xor
push
and
xor
add
sub
sbb
push
and
mov
addr16
lods
add
pop
mov
repz
sub
inc
notb
add
inc
ds
mov
inc
inc
xchg
aad
or
mov
sar
push
aaa
jnp
mov
add
jns
adc
mov
repz
cli
ljmp
push
jbe
lods
call
sbb
pop
mov
xor
mov
iret
jb
je
icebp
aad
fnstsw
cmp
and
test
adc
dec
cmp
mov
rol
push
xor
inc
jmp
push
rorl
and
mov
leave
punpckhdq
shl
mov
add
dec
xchg
rorl
xor
sarl
inc
inc
sarl
sbb
push
cmp
sub
jecxz
add
bound
fs
or
js
jb
push
xor
inc
mov
sbb
push
loop
lahf
loope
cmp
jg
cmp
jbe
adc
push
gs
sub
mov
pop
pop
iret
mov
ja,pt
jle
mov
or
mov
mov
pop
mov
pop
rcl
insl
or
jnp
xor
mov
dec
jne
sub
inc
jns
shlb
scas
insl
or
sub
lret
das
push
cmc
sub
ds
btr
push
loop
xor
mov
test
jnp
inc
inc
bound
mov
xchg
data16
repnz
jnp
push
add
test
mov
cld
sti
sbb
aad
dec
loop
jae
stc
mov
dec
cmp
or
test
cmc
inc
gs
hlt
dec
inc
mov
push
test
rol
xor
hlt
ja
xor
sub
xchg
aas
xor
rcrb
pop
mov
out
movsl
pop
and
sbb
fbstp
divl
ds
push
xor
xchg
xchg
push
mov
fildl
xchg
mov
xor
popf
mov
or
pop
je
cmp
mov
sahf
inc
lock
scas
in
lock
arpl
stos
call
ja
xchg
js
cmp
inc
dec
loop
mov
mov
dec
mov
jae
xor
dec
stos
push
leave
sbb
aaa
fisubrl
mov
roll
ds
inc
arpl
sbb
jae
or
filds
sbbl
add
dec
jbe
les
sbb
imul
lods
sub
cld
mov
cmp
push
push
adc
xchg
lretw
inc
add
sarb
ret
sub
cmp
imul
push
mov
xor
ljmp
adcl
cs
jp
ss
adc
mov
push
movsl
adc
sbb
push
fs
inc
pusha
adc
fistpll
jns
push
rcl
lods
bound
inc
fsts
inc
bound
dec
push
daa
daa
sbb
or
dec
jb
sbb
sbb
add
pop
pop
add
sub
rclb
dec
dec
jl
test
das
gs
int
imul
lods
rolb
sbb
push
jno
loop
popa
sub
test
mov
lcall
cld
adcl
add
repnz
and
pop
sbb
fidivrl
inc
daa
ret
loope
in
scas
cmc
adc
cmpsl
cmp
sbb
inc
or
insl
arpl
pop
mov
sub
roll
loop
rolb
xor
push
sbb
cmp
xor
roll
cmp
sub
dec
and
movsb
pop
imul
sti
jbe
jae
fsubs
ret
pop
cltd
xchg
add
jge
mov
cmpl
inc
jnp
adc
inc
ja
mov
js
sbb
fiadds
inc
sbb
popa
vcvtdq2ps
add
push
and
icebp
pop
pop
paddsw
xchg
ss
dec
cs
cmp
imul
sub
iret
sub
and
xor
sub
pop
push
and
sbb
pop
in
pop
es
xchg
rorl
push
and
or
fwait
mov
loop
sub
adc
sbb
cli
dec
cmp
fsubrl
mov
push
cwtl
stc
inc
dec
jl
outsl
jb
sub
bound
mov
sub
hlt
sub
movsl
arpl
jbe
enter
jo
add
pop
jle
sahf
pop
push
sbb
dec
int
dec
imul
je
and
and
adc
into
push
movsl
jle
push
loope
adcl
lock
pause
push
and
sub
sahf
fdivr
mov
xlat
fs
cli
inc
loopne
cmpsl
in
push
dec
push
sub
nop
sub
out
inc
data16
mov
and
gs
ljmp
push
shlb
xchg
cltd
popf
shlb
add
popa
add
das
xor
outsl
aad
push
sub
and
inc
add
sub
stos
test
cmp
das
cmp
and
popf
add
fs
xchg
jmp
sub
mov
jno
negb
insl
sub
daa
or
inc
xor
xor
out
adcb
sbbb
imul
sahf
or
pop
ror
jge
and
pop
and
mov
stos
loope
sub
notb
inc
sub
repz
add
idivb
cmp
jmp
test
xor
pop
push
or
and
decb
enter
add
pop
cmp
and
add
mov
cmc
sbb
in
pop
cmpsb
dec
sub
es
dec
mov
push
testb
jne
and
pop
push
out
loope
push
lcall
and
fucom
sbb
repnz
lods
rep
pop
dec
stc
jle
mov
flds
repz
push
ljmp
fstps
lods
test
inc
int3
fsubrl
lret
pop
test
repnz
and
or
push
jae
inc
jbe
or
cld
push
xor
and
sbb
movsl
dec
clc
pop
push
lods
les
mov
fs
add
dec
inc
inc
push
xor
xchg
cs
insb
sahf
inc
bound
lcall
dec
xchg
enter
dec
jno
mov
xor
sarb
mov
push
jne
int
test
es
push
cwtl
repz
pop
fs
addr16
jge
add
jae
sarb
xchg
sbb
shll
xorl
dec
jmp
out
movsl
and
lahf
pop
inc
dec
addb
gs
sub
mov
and
add
cwtl
dec
sub
mov
rcrb
mov
data16
inc
dec
dec
loope
rcrl
jo
cmp
icebp
and
setae
rclb
jno
faddp
movsl
addl
dec
int
mov
xchg
movsl
jae
dec
adc
int
roll
jmp
repz
cmp
push
mov
jecxz
bound
and
pop
arpl
into
jle
xchg
mov
arpl
adc
outsb
ljmp
sahf
and
mov
pop
sbb
lret
out
add
mov
pop
mov
sub
cs
repnz
and
add
imull
jb
add
clc
push
movsb
inc
lret
push
adc
or
xchg
shll
dec
jbe
popf
scas
js
rclb
daa
int
arpl
fidivs
inc
movsl
adc
push
clc
inc
and
or
movsl
inc
fidivl
flds
sub
inc
add
jae
repz
ja
or
stc
xchg
pop
jecxz
ret
outsb
mov
in
lret
dec
arpl
orb
data16
pop
ss
lret
mov
lock
inc
dec
jbe
dec
ror
sbb
push
insl
adc
in
pop
dec
int
push
fdivs
jmp
and
fsubs
dec
push
leave
jmp
jmp
push
mov
mov
negb
in
jno
rclb
aam
cwtl
cmc
addr16
add
push
xor
les
mov
mov
loope
das
xor
pop
xor
jl
adc
inc
inc
bound
xor
sarl
fistpl
test
mov
inc
shll
push
testb
les
pop
adc
rcl
cmp
daa
stos
insl
mov
call
xchg
and
inc
js
adc
insb
xor
aad
in
pop
repnz
pop
jle
mov
bound
pusha
cmpsb
dec
in
xor
push
test
hlt
into
scas
mov
divl
mov
fdivrs
out
mov
repnz
test
cmpsb
sub
test
adc
jnp
push
insb
fldl
xchg
mov
add
ret
nop
arpl
mov
push
add
rcll
sbb
jmp
pop
and
das
add
popa
xor
in
add
fidivrl
xchg
pusha
jae
sbb
frstor
mov
adc
sub
push
mov
ss
dec
rorl
clc
leave
push
sbb
cmp
mov
mov
out
mov
adc
mov
ja
adcl
shll
push
xchg
test
rcr
mov
cmp
std
push
sbb
popf
clc
gs
in
das
push
lock
add
mov
and
fdivs
mov
inc
sub
aaa
cld
movsb
jge
dec
popf
addr16
or
xchg
fbld
subb
dec
andb
lods
sahf
and
push
xchg
pusha
mov
sbb
lock
dec
sbb
add
mov
jno
shlb
jno
dec
pop
inc
popa
push
dec
or
test
shlb
aad
jle
addr16
imul
mov
aam
jl
es
test
jle
out
testb
adc
fdivs
add
sub
imul
inc
outsl
sub
inc
mov
lods
push
dec
cmp
jmp
cmc
inc
js
and
xor
sub
das
les
test
mov
adc
shrb
pop
or
xchg
in
xchg
dec
jo
xchg
fstl
push
xorb
sbb
insl
jg
xchg
adc
adc
out
in
enter
repz
les
mov
iret
inc
pop
adc
repnz
cmp
dec
pop
test
jne
jbe
mov
loopne
pop
loopne
jle
jp
sarl
les
or
xchg
lock
in
not
push
push
ret
push
std
aaa
xorb
cli
jb
sub
push
icebp
pop
dec
sbb
jle
out
lahf
mov
sub
xchg
xchg
add
fnsave
shll
call
push
inc
sar
icebp
dec
pop
int3
mov
je
cmp
lods
cmp
loop
and
add
inc
cmp
jmp
push
gs
sahf
loop
xor
xor
aas
push
mov
sbb
push
dec
lcall
add
xchg
xor
and
mov
sbb
mov
icebp
ret
scas
inc
outsb
roll
jbe
mov
test
pop
sub
xor
mov
push
mov
out
push
mov
testb
shrl
and
cli
pop
push
scas
jae
inc
arpl
divb
mov
xchg
div
push
xor
inc
fsubl
scas
lret
or
cmp
mov
sub
icebp
movsl
in
add
test
scas
lock
and
lock
xchg
andl
hlt
int
add
subb
out
dec
je
mov
inc
jle
inc
gs
or
mov
cli
ja
mov
loopne
xor
int
inc
xor
out
mov
enter
mov
inc
add
push
call
sbb
mov
mov
jbe
std
pop
cli
push
or
and
imulb
cmp
mov
add
adc
loop
jno
sbb
jg
fs
xor
repz
xchg
dec
xor
movsl
adc
rorl
shll
inc
mov
dec
subb
inc
inc
orl
pop
mov
in
add
cmpsl
sbb
repz
sbb
arpl
inc
out
inc
cld
jle
dec
nop
roll
xor
xchg
outsb
les
nop
cs
setbe
jne
popf
mov
fwait
test
dec
cmp
insl
jbe
repz
mov
insb
and
les
sahf
repnz
stos
inc
aad
test
sbb
mov
and
pop
fbstp
or
ja
sbb
sub
in
mov
dec
repnz
sbb
or
mov
sarl
mov
jbe
in
loopne
and
push
lds
sbb
daa
push
mov
xor
sub
cmp
lret
test
pop
jno
push
sbbl
popf
pop
mov
mov
in
out
pusha
mov
sbb
das
pop
mov
push
cli
ljmp
sbb
jmp
or
mov
in
cld
lds
enter
push
lea
enter
xchg
les
or
ja
call
sbb
inc
clc
mov
xor
xchg
insl
xor
inc
pop
push
mov
dec
jns
inc
lock
mov
dec
mov
push
xchg
xchg
pop
fimuls
fcoms
cmp
lods
mov
xchg
imul
mov
pop
aas
dec
test
jnp
mov
mov
nop
addl
cmp
jno
push
cmp
popa
fwait
cmp
inc
push
ret
dec
mov
loope
frstor
push
stos
in
or
sbb
dec
jns
sub
mov
sahf
test
push
in
pop
into
inc
sub
roll
and
adc
inc
inc
dec
mov
inc
mov
sbb
and
jmp
fnstsw
dec
adc
xor
cwtl
or
mov
cs
xor
sbb
and
daa
inc
sub
cmp
popf
mov
jle
jp
fildll
pop
and
imul
mov
jge
shll
iret
jl
push
flds
inc
les
or
pop
imul
xchg
arpl
add
inc
jb
sbb
jp
sub
push
outsb
mov
imul
in
mov
jp
sbb
pop
mov
lods
int
cmp
bound
cs
test
rcrb
pop
sbb
data16
test
push
lret
pop
test
rorl
outsl
lret
dec
or
ja
mov
fmull
aad
mov
pop
imul
les
or
jp
rcrl
xor
bound
pop
xor
fsubp
sub
rcll
push
jbe
test
mov
pop
inc
and
incl
inc
loopne
inc
sahf
fists
xchg
jns
test
fsts
mov
inc
cs
jmp
and
mov
out
jmp
mov
cmp
or
repnz
inc
sahf
mov
mov
pop
fmull
inc
bound
mov
mov
sti
sar
clc
mull
pop
xor
movsl
repnz
loopne
inc
xchg
add
add
out
test
lcall
icebp
lods
push
cmpsl
xchg
in
pushf
jge
idivb
pop
cmp
mov
adc
shl
sbb
shrb
int3
push
cs
call
sarb
dec
insl
int3
dec
sbb
sbb
or
shr
sub
cltd
arpl
insl
aam
ds
insb
mull
jbe
fstl
bswap
andl
es
mov
pushl
xchg
dec
js
imul
int
dec
lret
test
push
dec
cwtl
mov
aam
lds
fwait
push
and
mov
xchg
jb
pop
jp
scas
adc
lods
cmp
icebp
cmp
outsb
jno
das
sbb
cmc
cmp
inc
les
in
repnz
dec
mov
xchg
data16
inc
adc
sub
ret
imul
das
daa
mov
repnz
imul
xlat
das
add
cmp
inc
xor
mov
std
sub
mov
mov
jge
aam
mov
sbb
mov
into
lret
push
mov
mov
or
jae
adc
sbb
jo
shlb
icebp
mov
icebp
push
int3
add
adc
pusha
cltd
jns
jns
pop
cmc
andl
push
xchg
dec
xor
mov
dec
out
popa
dec
fwait
shll
jmp
mov
dec
mov
imul
into
push
sti
push
es
or
push
out
loop
inc
push
fistpll
push
xchg
jp
clc
jmp
jnp
jecxz
xchg
jp
jno
push
or
mov
std
pop
push
sub
push
lret
inc
repnz
mov
ret
and
mov
adc
ds
dec
test
sub
dec
sbb
pop
jp
inc
popf
xchg
dec
mov
leave
je
aad
mov
popa
arpl
jno
inc
dec
push
mov
xor
pop
xchg
mov
pop
data16
xor
push
test
nop
insb
xor
or
es
aad
cmp
pusha
cmp
mov
ljmp
idivb
subl
int
stc
inc
adc
shlb
fldenv
xchg
add
xor
lret
pusha
movsl
jmp
notb
std
inc
xor
add
insb
loope
repz
scas
lock
jb
inc
popa
push
in
nop
jns
out
pop
adc
shll
int
sti
xor
sub
repnz
dec
xor
dec
adcb
add
sub
mov
lahf
mov
mov
das
es
pop
mov
jle
inc
dec
test
pop
test
or
das
push
pop
repnz
mov
dec
pop
sub
in
push
and
pop
lods
fwait
mov
mov
int3
insl
mov
mov
xor
mov
jb
sub
in
or
cmpsl
jle
stos
fstpl
cmpsb
mul
mov
jbe
loop
insb
ds
mov
arpl
cwtl
sub
ds
jl
lea
mov
pop
pop
popa
mov
mov
inc
sbb
call
clc
out
aad
inc
push
dec
lret
and
lret
leave
dec
sbb
test
adc
fs
aad
in
sub
adc
dec
sahf
fisubs
test
and
mov
mov
or
inc
int
dec
shll
mov
fsubs
push
or
sarl
mov
div
dec
ss
xchg
call
and
sub
andl
xchg
notb
inc
clc
repnz
imul
and
das
shrb
cmp
mov
sub
fists
shrl
or
mov
fisubrl
mov
jae
imul
fistps
mov
mov
xchg
repnz
sbb
sub
dec
int
out
lret
call
inc
ret
ret
lds
and
cmp
lods
mov
test
cmp
push
repnz
and
test
les
inc
push
jmp
lods
pop
xor
roll
cs
les
sub
mov
add
or
clc
add
and
sbb
jecxz
popa
add
and
sbb
sub
bound
fbstp
ficompl
loope
cwtl
xor
pusha
popa
jecxz
pop
sub
bound
inc
outsb
jecxz
pop
mov
nop
sbb
or
sub
pop
cmovge
aaa
cmc
add
movsl
shll
test
pop
jg
mov
ds
inc
repnz
subb
xor
xor
movsl
xor
dec
mov
enter
test
scas
rcll
lods
test
xchg
dec
pop
dec
jnp
std
fisttpl
add
adc
inc
xor
jmp
cltd
xor
ficomps
xchg
adc
movsl
test
xorl
inc
jno
push
testb
cltd
lret
push
dec
adc
jns
in
xchg
inc
mul
push
das
mov
bound
and
aas
leave
scas
scas
mov
int3
sub
push
xchg
sub
mov
lcall
aas
add
aaa
jns
lods
push
lcall
mov
mov
imulb
loope
in
nop
inc
jno
fldcw
loopne
pop
mov
xchg
mov
adc
movsl
inc
bound
aaa
imul
hlt
xchg
mov
inc
dec
sub
push
nop
dec
push
sub
cld
jbe
mov
insb
stos
cltd
jle
lds
cmp
pop
and
pop
pop
sub
mov
pusha
jge
test
rol
jge
imul
dec
xor
sarl
push
mov
adc
popf
adc
push
sub
dec
dec
push
xor
inc
mov
mov
testb
rcl
pop
jns
cmp
push
inc
push
aam
push
lret
pop
jns
outsb
jp
cmp
push
xor
xor
js
addr16
scas
fmul
mov
lcall
cltd
mov
xor
pop
jnp
xlat
and
push
test
scas
leave
mov
mov
stos
pop
add
data16
xor
cmp
jo
add
push
push
pop
popa
mov
cmc
mov
or
call
mov
testb
mov
jae
xor
push
mov
xchg
xor
and
lock
push
jb
cmc
jns
call
inc
jns
and
data16
test
dec
fisttpl
mov
inc
imul
cmp
and
les
push
popa
and
movsl
and
lods
push
bound
aam
inc
ret
outsb
insb
sub
push
movsb
jmp
roll
inc
insb
jns
pop
inc
sub
gs
push
adc
outsb
mov
mov
mov
insl
lahf
icebp
ret
inc
mov
mov
imul
lods
aam
sbb
jge
ret
push
push
push
inc
and
pop
pop
add
adc
dec
sbb
mov
in
loopne
add
mov
lods
fldl
popf
cmp
insl
inc
loope
loop
movsb
fdivrs
and
sub
les
jae
xchg
dec
and
inc
sarl
out
jbe
dec
dec
mov
scas
adc
lret
pop
and
or
sarl
cwtl
xchg
sub
popa
xor
mov
mov
jl
add
push
lahf
cld
and
lahf
sahf
jno
jge
les
sub
cmp
mov
ret
pop
je
dec
xchg
add
sub
adc
ficoms
shrb
gs
out
js
sbb
outsl
pop
adc
add
sub
xchg
mov
lahf
xchg
mov
mov
adc
xchg
imul
lea
add
lods
mov
sahf
pop
and
or
in
inc
xchg
add
sbb
bound
mov
jb
inc
js
testl
ds
jbe
rorl
mov
aaa
ss
xchg
js
xor
push
popa
cmp
mull
dec
ror
loope
sti
fs
adc
aaa
pop
aaa
incl
loop
cmpsb
mov
and
mov
inc
jno
int
mov
and
push
push
jge
xor
jno
or
sti
mov
popa
adcl
jmp
push
push
mov
outsb
out
fs
sub
icebp
fadds
or
out
out
or
lods
fistl
dec
popf
fiadds
repz
jecxz
clc
mov
pop
pop
dec
xchg
mov
inc
hlt
xchg
add
jecxz
lcall
mov
je
lods
cmpsb
stos
test
outsb
or
lds
outsb
repnz
push
outsl
sbb
sbbl
cmp
xor
sbb
imul
add
push
fisubs
in
pop
xor
pop
mov
icebp
insl
repnz
movsb
aaa
jno
jg
adc
mov
pop
xor
orb
jno
pushf
xchg
imul
xchg
mov
pop
and
push
add
mov
jns
push
mov
xor
mov
jns
in
int
lret
fs
nop
mov
sti
addr16
ret
cmp
pop
lea
mov
cmp
push
leave
mov
lock
sub
icebp
popa
mov
xchg
xlat
inc
sbbb
add
imulb
xor
addb
fimuls
and
in
loopne
cmpsl
adc
push
adc
add
scas
stos
test
cs
xchg
fnsave
sbb
into
jle
outsb
xchg
inc
xchg
ljmp
pop
pop
int
js
popa
mov
xor
ja
adc
pop
push
pop
inc
ljmp
loopne
dec
sti
out
or
push
mov
icebp
enter
sbb
aaa
sbb
mov
ror
cltd
insb
mov
aam
leave
mov
sbb
inc
xor
jb
push
fstps
out
ror
xor
into
ret
sub
popf
inc
arpl
push
push
inc
popa
jno
push
pop
inc
imul
and
dec
icebp
add
aam
or
rolb
enter
in
insb
lea
push
arpl
sub
dec
cmpsb
arpl
ja
mov
sub
fs
es
fldl
adc
adc
jbe
dec
aas
mov
mov
mov
inc
sub
repz
dec
testl
enter
add
leave
loopne
jo
cmpsb
in
add
add
xchg
xchg
test
adc
inc
lret
add
fnstsw
push
stos
testl
sub
mov
stc
lret
loope
jge
lods
movsl
mov
mov
shlb
or
in
fstpl
stos
lods
aam
sbb
mov
jne
mov
mov
mov
ret
cwtl
jle
or
mov
cmp
orb
xchg
shrl
jae
sub
pop
aaa
addr16
inc
cmp
add
jge
pop
out
xlat
dec
into
arpl
sub
sbb
ret
mov
pop
push
test
ds
jp
adc
test
xchg
fnsave
pop
sub
mov
pusha
ret
xor
adc
mov
sbb
incl
mov
rorl
xor
mov
das
cmpb
loope
and
loopne
push
xor
mov
xchg
popf
insl
add
mov
cmp
movb
ja
sarb
cld
pop
mov
push
cmp
popa
addr16
cmp
ja
mov
ds
xchg
jae
dec
in
fwait
jno
mov
add
aad
mov
mov
mov
pop
mov
sub
xorl
popa
aaa
jno
xor
jmp
sub
adc
pop
inc
xchg
sbb
or
int3
les
push
ja
dec
inc
push
jg
or
fstpl
sub
and
push
adc
push
pop
clc
int3
xor
push
or
pop
and
enter
int
shll
dec
test
xor
movsb
std
popa
mov
mov
sbb
and
scas
lods
int3
or
lahf
rcrb
push
imul
sub
pop
or
inc
jno
int
imul
stos
push
into
idivb
add
inc
push
push
fs
push
push
sub
les
pushf
mov
lret
adc
dec
mov
push
xor
and
and
mov
cmp
pop
arpl
dec
popa
cltd
and
jmp
adc
cmp
inc
cmp
push
rcll
nop
js
insb
addl
shrl
inc
inc
aaa
mov
loope
dec
inc
bound
int
call
nop
ss
pop
pop
in
pop
lock
mov
inc
jle
outsb
fiaddl
in
add
in
jae
iret
mov
add
and
ret
ds
addl
test
and
roll
dec
sbb
or
std
mov
fldenv
inc
or
xor
fistpll
sub
daa
into
sub
sub
aam
dec
cmp
inc
xor
push
dec
in
pop
jb
aaa
inc
fcoms
and
jl
push
or
out
into
popa
les
push
ds
and
testb
and
mov
outsl
aad
xchg
sub
mov
fldenv
mov
or
xchg
pop
mov
cmp
imul
addr16
dec
imul
jns
in
sbb
inc
inc
ss
sti
sub
dec
inc
sub
pop
xchg
pop
lock
dec
dec
inc
outsl
push
in
fsubl
aam
jno
or
cld
fxch
imul
push
popa
inc
xor
or
add
push
lea
sbb
mov
sti
scas
xor
cmp
inc
dec
inc
cmp
sbbb
test
dec
popa
mov
pop
mov
dec
mov
mov
sub
and
mull
imulb
leave
inc
jbe
lods
les
mov
mov
cli
sub
int3
mov
xor
fcoms
sub
or
inc
fisttps
test
mov
cmp
cmp
mov
mov
jbe
outsb
inc
les
std
jno
xchg
mov
push
mov
xchg
fnsave
ret
aad
mov
sbb
sarl
in
aam
das
inc
cmp
add
push
dec
hlt
dec
sti
mov
inc
pop
ror
mov
repnz
add
pop
outsl
dec
in
js
or
subl
aas
les
sbb
out
sub
aas
subl
arpl
jg
pop
in
fsubs
jecxz
mov
in
mov
lret
sahf
mov
clc
xor
out
xchg
dec
and
add
pop
jno
cmp
adc
jp
outsl
mov
aas
enter
pushf
jnp
lret
xchg
xchg
jb
mov
lret
imul
fwait
or
repz
ss
push
movsb
push
aaa
and
add
cmpsl
pop
mull
pop
dec
cmp
movsb
push
cmpsb
cld
sub
push
jbe
aam
cmp
xor
sub
inc
and
mov
sti
rolb
mov
mov
mov
cmp
bound
add
jle
test
or
jge
fbstp
out
cltd
sub
xor
sub
and
repnz
inc
and
add
ja
fnstsw
jmp
es
bound
arpl
xor
stc
std
jbe
add
dec
push
cmp
inc
ret
ret
cmp
movsl
jae
xor
xor
inc
cmp
xor
mov
xor
imul
or
insb
and
nop
jle
lcall
mov
xchg
xorb
hlt
sbb
inc
push
aad
fdivp
dec
leave
jo
inc
xchg
ret
mov
aaa
and
dec
jns
xchg
pop
xorl
xchg
mov
shrl
cmp
or
dec
pusha
popa
cmp
fdivr
into
inc
cmp
and
popa
inc
xchg
mov
xlat
jl
lret
je
adc
dec
jg
pop
imul
inc
pop
push
jne
cmp
xchg
push
dec
leave
out
sub
jno
push
xchg
bound
movsl
icebp
ja
and
les
dec
enter
pop
push
lds
lods
bound
jp
popa
fildll
inc
int
add
lret
xor
add
jmp
sub
cmc
push
jb
inc
mov
dec
and
addr16
pop
xor
jmp
lods
shlb
or
and
int3
jno
repnz
stos
in
lods
jne
int
popa
ret
pop
cmp
movsl
xor
sbb
into
mov
scas
out
iret
mov
lods
mov
cmp
mov
pop
xchg
ret
mov
test
mov
pop
adc
cs
jp
pop
leave
inc
or
sub
adc
rolb
sub
testb
xor
push
mov
stos
shlb
aas
cs
inc
test
pop
push
jmp
inc
loop
xchg
sbb
data16
push
lret
push
push
sub
or
repz
popf
iret
jnp
xchg
mov
and
pop
xchg
mov
mov
aam
xor
in
sub
int
sub
ret
in
out
rcll
push
inc
cmpsb
jno
and
fsubs
dec
mov
jle
iret
shrb
sti
and
inc
pop
or
test
add
xchg
pop
or
cmp
es
aas
repnz
out
dec
idivb
sti
and
or
jg
in
mov
pop
bound
xchg
cmp
jne
xchg
dec
lods
in
imul
sbb
and
out
xorl
mov
movb
xor
mov
inc
imul
dec
push
cmp
mov
arpl
dec
popa
push
mov
fcmovbe
sub
roll
jp
mov
cmp
mov
loope
mov
cltd
dec
jb
dec
js
xor
aam
stc
jle
jge
sub
cmp
jp
pushf
icebp
cmovge
pushf
stos
sbb
repnz
mov
arpl
xor
mov
sub
and
mov
mov
sahf
mov
fwait
dec
stos
inc
icebp
push
add
lods
rorb
mov
fninit
in
out
lods
mov
inc
mov
cltd
stos
mov
cmc
sbb
lea
mov
testl
aad
push
mov
inc
jg
sarl
aaa
push
int3
cmpsl
mov
scas
mov
je
jle
inc
xchg
std
jns
mov
int3
cmp
sbbl
add
ret
lea
in
fnstenv
xlat
xor
aam
ljmp
xor
aam
xchg
outsb
dec
jle
and
inc
repnz
mov
push
push
sub
sub
cmp
push
test
mov
cmp
fsts
jne
int
sub
in
add
ret
sub
sub
mov
popa
xor
shld
das
in
or
dec
sbb
adc
add
sub
ss
pop
inc
push
mov
imul
idivb
adc
lret
mov
and
jg
cmc
add
add
and
xor
test
icebp
stos
jecxz
inc
jb
dec
in
jp
nop
sbb
in
aas
push
jle
mov
pop
dec
mov
orl
aaa
push
xor
and
jecxz
sahf
cli
mov
dec
xchg
pop
es
int3
jnp
sub
xchg
ds
pop
pop
mov
es
push
xor
lock
shll
mov
sub
sbb
xor
mov
push
jbe
mov
cmp
stc
enter
jae
ds
bound
outsl
xor
lea
popa
movsb
test
lcall
lcall
idivl
adc
xor
dec
cmp
dec
and
inc
pop
cltd
jmp
fbstp
inc
push
fs
outsl
mov
and
mov
sahf
clc
je
xor
dec
mov
and
xor
in
pop
xor
and
sub
sub
test
shlb
push
mov
jp
shlb
fisttps
sub
cmp
rcl
pop
inc
enter
inc
xchg
and
repnz
jecxz
pop
popa
and
cmp
xchg
cmp
pop
jns
xchg
pop
enter
mov
mov
testl
inc
pop
inc
jle
scas
mov
negl
imul
mov
lods
ret
or
pop
add
pop
add
mov
cmp
aaa
int
movsl
mov
inc
int
cmp
pop
addr16
sahf
inc
or
jo
mov
fsubl
adcl
push
mov
jo
sub
inc
add
aaa
dec
or
insb
mov
int
test
rorb
sub
ds
jp
adc
ds
cmp
mov
fstl
push
or
cli
outsl
ret
test
popf
push
mov
cwtl
inc
mulb
call
inc
test
mov
dec
idivb
shll
push
mov
push
ret
mov
inc
dec
int3
adc
repz
fistpl
jmp
sub
aaa
push
in
imul
lret
cltd
mov
fsubl
xor
pop
repnz
xchg
and
das
movsb
push
les
ds
adc
jb
mov
in
push
out
je
into
aas
and
inc
test
and
xchg
and
inc
mov
jle
sub
roll
rclb
push
sbb
ror
xor
sub
repnz
sahf
inc
inc
mov
inc
ss
jl
shrb
loop
add
call
int
sti
test
push
out
dec
sahf
icebp
mov
inc
imul
jl
mov
sub
sub
fistpll
cli
icebp
push
movsl
add
inc
push
cmpsb
dec
jbe
sub
push
les
inc
in
xchg
iret
testb
cmp
jle
cmpsl
dec
je
dec
add
xor
inc
fisubl
mov
xchg
push
xor
inc
inc
leave
inc
and
lcall
sbbb
aam
dec
and
add
cmp
rclb
xchg
aaa
pop
lock
dec
dec
jb
jno
add
dec
pop
mov
pop
sub
push
inc
aas
enter
jle
mov
and
sub
rcll
rcrl
xchg
pop
shll
add
xor
jb
push
adc
dec
je
pop
jmp
mov
mov
cmpsl
jp
das
aam
or
ret
loopne
xchg
cmp
push
jle
xor
neg
add
insb
add
jge
xor
mov
movsb
xchg
jnp
insl
imul
xor
andb
push
divb
mov
mov
ret
dec
rclb
arpl
xchg
fwait
daa
push
mov
subl
push
sub
ficomps
xor
mov
fildl
push
enter
fnsave
out
gs
fstps
movsl
dec
fmulp
imul
cmp
dec
sub
jbe
xchg
lods
shlb
fs
jno
pushf
imull
mov
jp
dec
mov
in
repnz
jae
mov
loope
mov
inc
shl
pushf
ret
pop
mov
rclb
arpl
and
pushf
push
call
jbe
addps
mov
int
mov
jl
inc
shlb
xor
pop
mov
jp
pop
lea
js
fisttpll
movsl
mov
inc
xor
pop
add
add
xchg
arpl
leave
inc
das
or
ss
shll
cli
aaa
repnz
xchg
daa
push
dec
jb
jmp
aam
dec
pop
and
jle
lret
lcall
pop
aaa
and
jge
shll
std
pop
sub
sub
dec
aad
mov
mov
sub
inc
mov
sub
aad
pop
int3
push
insl
push
add
fnsave
cmpsl
mov
jae
scas
pop
pop
push
clc
pop
lods
js
push
int
adc
ret
xorl
movsb
jp
jle
icebp
lcall
pushf
test
pop
push
push
sub
inc
sbbl
inc
stos
das
inc
pop
in
lock
sbb
test
sub
out
int
jmp
das
les
sub
xchg
pushf
jae
mov
idivb
cmpsl
mov
inc
dec
movsl
ja
or
inc
cld
jp
inc
sub
inc
inc
imul
inc
pop
inc
pop
bound
inc
enter
xchg
jno
push
and
out
mov
lea
stos
inc
pop
imul
push
mov
mov
jnp
push
and
sub
pusha
das
ss
test
addr16
jge
inc
adc
and
pop
int
xchg
or
adc
jmp
insl
adc
or
inc
movsl
jl
dec
sbb
shll
call
or
les
arpl
repnz
jle
add
dec
cmp
out
push
out
inc
jbe
cmp
int
xchg
cmpsb
pop
sbb
jp
inc
or
pop
pop
mov
mov
or
bound
xor
ss
in
call
jecxz
fsubr
mov
daa
test
inc
mov
sub
popa
cmp
or
frndint
xchg
push
inc
add
xor
sbb
cmp
xchg
and
push
shl
sbb
add
dec
xchg
mov
stos
dec
pusha
ds
jno,pn
add
fs
cmp
sbb
push
icebp
popa
mov
subl
cmpb
xor
cld
xchg
jecxz
xchg
adc
dec
jno
cmp
pop
sbb
shll
dec
push
mov
cmp
xchg
inc
xor
and
sbb
mov
push
push
mov
ja
push
dec
push
negb
notl
or
dec
lret
pop
cltd
in
xchg
clc
add
sub
leave
call
aaa
jg
inc
inc
xchg
fisttpl
ret
call
add
call
mov
icebp
cli
jne
lcall
ret
sahf
fwait
insl
inc
jmp
cld
pop
aaa
fs
push
fmull
roll
xchg
mov
xor
int
push
mov
mov
push
xor
ja
xlat
jb
jmp
dec
in
or
mov
inc
cmpsb
insb
dec
shrb
pushf
das
pusha
bound
mov
mov
dec
push
lahf
and
jo
sub
jae
xchg
cld
mov
out
push
jbe
xchg
xchg
imul
dec
or
mov
add
and
cmpsl
xchg
das
or
mov
fcoms
cwtl
pop
ja
shrl
mov
dec
roll
les
mov
mov
mov
xchg
int
dec
xor
sub
lods
add
pop
insl
xorb
xor
cmp
mov
mov
or
mov
out
jl
and
cs
testb
int3
push
jb
xchg
sbbl
add
cs
sub
popf
inc
push
xchg
fnsave
iret
popa
sub
dec
adc
in
mov
add
dec
mov
inc
fiadds
gs
or
test
mov
repz
sbb
mov
ljmp
rorl
sbb
add
cmp
fs
mov
neg
fsubrs
aaa
push
gs
imull
mov
out
shlb
sub
cwtl
xor
shrb
xchg
cld
in
repnz
das
leave
int3
rcrb
push
pop
test
jb
add
arpl
flds
inc
xchg
out
pop
jno
fidivs
mov
outsb
cwtl
out
jbe
ret
jns
test
sbb
xor
test
sarb
into
inc
lahf
xchg
imul
out
sbb
mov
fbstp
loop
jmp
int
out
xchg
mov
pop
into
lds
mov
jnp
shl
fidivl
and
and
and
int
sti
pop
or
mov
mov
iret
dec
lcall
jo
sub
lret
pusha
pop
add
jmp
push
jb
inc
add
jmp
add
dec
sarb
test
inc
cmp
or
jne
and
lea
out
inc
inc
mov
cmp
push
mov
mov
in
cmpl
mov
inc
adc
xchg
sbb
sub
jns
xor
mov
ljmp
pusha
or
mov
psubsb
adc
adc
sub
jno
roll
insb
ljmp
mov
inc
dec
leave
mov
sub
push
mov
inc
or
cmp
repnz
data16
inc
sub
ud1
test
push
xor
insl
aad
cltd
sti
push
jp
dec
add
jb
push
clc
dec
add
inc
or
fisttpll
jle
dec
test
fisubs
testb
xor
xor
std
popa
sbb
add
xchg
jo
mov
scas
popf
dec
push
dec
mov
sbb
std
and
int3
push
dec
push
inc
pushf
test
fnstenv
incl
lret
hlt
inc
stos
pop
out
jae
cmp
movsl
lret
imul
cmp
shl
dec
cli
mov
cld
rcll
jbe,pt
jmp
xor
lods
int3
mov
add
jbe
push
test
insl
lret
mov
push
repz
aaa
mov
sub
fwait
push
jecxz
retw
mov
xor
pop
mov
mov
enter
jbe
les
mov
daa
lahf
outsb
push
xchg
xchg
bound
cmp
ret
test
icebp
sbb
adc
and
test
mov
dec
aad
es
pop
int
and
sbb
ds
psubq
imul
arpl
shll
scas
mov
loop
add
add
mov
mov
cmpsl
test
jg
xor
in
inc
xor
dec
jge
fldl
push
test
and
cld
mov
iret
aam
scas
adc
dec
mov
imul
loop
cmp
frstor
mov
mov
repnz
or
adcl
mov
push
mov
sub
mov
adc
fnsave
jbe
out
imul
enter
arpl
jae
test
pop
adc
icebp
enter
int
dec
jo
jle
std
xchg
movsl
dec
sub
pop
push
mov
mov
lcall
pop
xorl
iret
mov
adc
pop
jno
bound
push
and
outsb
lret
ret
mov
popa
inc
fcmovnbe
xor
ss
and
daa
lahf
testl
mov
push
in
add
and
lcall
and
outsb
ret
ja
ror
cli
mov
pop
xchg
or
push
jo
sub
cmp
xor
xlat
xchg
fildll
jns
iret
jno
xchg
in
inc
add
movsb
push
and
jne
mov
jbe
push
push
dec
sbbb
fcmove
mov
bound
hlt
jp
insl
in
hlt
mov
jmp
inc
in
xchg
test
pop
sub
dec
iret
test
xor
inc
fisubrl
jp
icebp
or
jns
fldl
push
outsl
jge
in
xchg
inc
out
dec
sbb
repnz
and
cmpsb
push
inc
dec
push
ss
sarb
sbb
mov
aad
jbe
call
les
in
mov
popa
lods
and
inc
aam
mov
and
dec
xchg
mov
jbe
or
mov
std
icebp
mov
shr
add
dec
mov
dec
dec
lods
sbb
mov
leave
repnz
es
aam
xor
mov
dec
mov
push
enter
pop
and
and
lret
scas
iret
mov
lods
adc
scas
loope
add
sub
sub
pop
mov
push
jle
cwtl
xchg
ja
sub
stc
pop
inc
mov
inc
sub
jle
mov
icebp
or
mov
ljmp
out
test
push
adc
sbb
stos
pop
daa
sub
pop
cmp
push
adc
pop
imul
sbb
mov
or
nop
stc
mov
push
sbb
and
mov
and
push
loope
les
jp
cltd
xchg
sbb
imul
cmpsl
mov
jmp
dec
push
bound
add
push
pusha
lret
mov
jbe
sub
inc
sub
inc
jmp
rolb
stc
arpl
scas
daa
ficoms
test
push
mov
in
in
xchg
subl
push
in
pop
aas
lods
iret
push
and
test
insb
mov
xor
sub
inc
in
xchg
popf
movsl
xor
test
ljmp
lret
pop
lret
sub
lret
gs
lret
and
dec
jno
inc
push
xor
push
and
jae
sub
sub
xor
sbb
lea
xorl
pop
sub
sbb
or
into
adc
stos
mov
inc
subl
jge
addr16
idivb
and
push
fistpll
hlt
rorl
je
push
repz
xchg
insl
xor
jns
jno
flds
jecxz
leave
idivl
lods
mov
jno
pusha
cmc
dec
cmp
jg
mov
jnp
push
push
mov
push
jmp
xor
not
iret
pop
pop
xor
xor
dec
inc
push
std
rcrl
pop
mov
or
addr16
test
xchg
jnp
lods
imul
jle
jo
xor
sub
popa
les
sarl
repnz
insl
outsb
popa
les
popa
jg
adc
repz
repnz
fsubl
jecxz
jno
inc
add
arpl
shrl
jo
xor
inc
int3
inc
and
jo
test
dec
pop
mov
sahf
enter
incb
in
dec
sahf
adc
repnz
les
jo
lret
scas
xchg
popa
inc
push
in
adc
adc
dec
mov
mov
popl
inc
or
stos
outsb
mov
and
inc
popa
hlt
pop
mov
cmc
xlat
fidivs
jecxz
out
mov
push
add
inc
push
add
jno
aas
mov
dec
mov
std
cmpsb
dec
in
testl
adc
mull
insl
push
push
dec
mov
jge
push
mov
icebp
bound
popa
pcmpeqd
push
mov
mov
mov
aas
xchg
xor
stc
push
adc
mov
pop
test
sub
mov
cmp
push
xchg
loop
and
test
lods
push
fsubl
sbb
daa
sub
aam
imul
sbb
inc
popa
call
mov
cmp
test
stos
cmc
ss
mov
data16
sbb
and
arpl
xchg
imul
es
sbb
mov
dec
je
test
test
push
or
dec
inc
fadds
jg
and
les
scas
pop
bound
push
decb
mov
adc
cmp
ss
xchg
or
loop
decl
cmp
repz
and
lea
adc
mov
mov
xchg
inc
and
xor
mov
inc
inc
les
into
std
addr16
sub
jne
dec
xchg
test
and
sub
popa
push
add
inc
xor
add
mov
test
xor
push
mov
sbb
negl
mov
rcpps
push
mov
pop
adc
push
mov
mov
int3
lods
shll
fidivl
mov
inc
jnp
push
addl
xlat
push
test
dec
mov
in
addr16
jle
xlat
add
push
leave
in
addl
jns,pt
imul
sbb
xchg
sbb
push
or
aaa
enter
jmp
xor
sbb
ror
adc
dec
cmc
dec
int
push
ja
sarb
adc
fidivrs
jg
testb
les
pop
jmp
xchg
mov
pop
arpl
les
jne
xchg
pop
shll
aam
xchg
scas
xor
sbb
or
cmc
fdivrl
insl
jle
pop
and
push
push
mov
call
lcall
and
xor
mov
or
mov
icebp
lret
push
mov
andb
mov
hlt
bound
mov
inc
cld
in
popa
mov
test
xor
sbb
adc
mov
push
scas
xchg
sahf
ret
jo
in
adc
dec
dec
sbb
lret
push
pusha
jns
mov
imul
pop
aaa
andl
fstps
ljmp
scas
outsl
ss
mov
mov
mov
sub
int
lahf
int
xor
push
mov
mov
add
popf
cmp
pop
daa
or
jb
stos
xchg
repnz
sbb
dec
mov
sahf
mov
or
sub
add
mov
movsb
int3
mov
jnp
bound
jno
jbe
insl
sub
add
mov
cmp
push
lock
sbb
xchg
test
push
or
add
xchg
push
jbe
call
int3
divb
dec
cld
sbb
jbe
fstl
roll
xchg
xchg
pop
cmp
adc
adc
push
test
dec
call
fisttpll
shrb
aad
mov
daa
and
cs
lds
sub
xchg
fisttps
rol
or
les
imul
xor
in
bound
lcall
add
sub
jno
data16
mov
mov
rolb
jbe
mov
jecxz
xor
inc
push
imul
mov
cmp
cli
inc
or
in
and
inc
and
dec
adc
jns
sub
pop
jmp
mov
xor
sbb
add
push
xchg
or
bound
add
mov
aam
shl
ss
leave
jmp
mov
pushf
mov
sti
gs
jg
in
cmp
sbbl
mov
pop
xorb
xchg
adc
fwait
xchg
jno
mov
ds
sbb
frstor
pop
jl
or
sbb
loopne
or
inc
add
arpl
jne
add
shll
mov
in
sub
jo
sarb
inc
push
imul
xor
loope
dec
cs
daa
daa
aam
cmp
mov
xchg
iret
xlat
xor
and
xchg
lret
and
les
xchg
xchg
clc
sub
inc
xor
inc
in
repnz
mov
xchg
xor
mov
sub
cmp
push
sub
xor
test
inc
sub
cmp
daa
add
inc
jae
inc
jge
mov
loop
les
jae
popa
cmp
xor
pop
jno
fs
les
push
subl
les
imul
xchg
jno
les
shll
sub
xchg
add
jno
pop
stos
jge
jno
pop
dec
pop
hlt
bound
loope
jno
lods
les
push
inc
jno
aas
jno
repz
adc
dec
les
jno
inc
les
xchg
cmpsb
dec
testb
inc
add
insl
roll
mov
bound
pop
xor
jno
xor
les
test
xor
xchg
popa
sub
bound
lcall
jb
mov
and
xor
jbe
fcomip
jns
or
insl
mov
xchg
or
repnz
adc
sub
popa
stos
mov
jl
ret
loope
inc
addr16
ffree
movsl
mov
movsl
cmp
aad
in
aaa
and
xor
sub
les
aaa
lds
std
mov
and
les
and
and
ss
repz
ja
sbb
std
xchg
lods
mov
mov
xchg
adc
mov
inc
movsl
mov
stc
inc
inc
and
icebp
inc
icebp
in
les
les
les
cmc
mov
icebp
stos
lea
push
cmc
stc
icebp
sub
xor
mov
sbb
subw
xor
lods
xor
fisttpll
add
int
lcall
sbb
cmp
adc
and
xor
cmp
push
test
imul
popa
sbbb
sub
push
orb
sbb
xchg
pop
fs
popa
sar
jne
popa
lods
jae
ljmp
fidivl
popa
lods
xchg
ror
inc
sbb
aaa
pop
movsb
sub
stos
cmc
gs
mov
popa
mov
ret
lcall
mov
ret
popa
in
push
jecxz
jb
popa
repz
jecxz
jb
popa
add
pop
outsb
or
lds
popa
rorl
jmp
loop
dec
inc
mov
xor
inc
popa
into
xor
push
shlb
mov
sub
cld
jmp
mov
sub
mov
daa
in
in
jno
mov
inc
data16
xchg
ja
and
or
out
xchg
dec
movsb
jecxz
ret
push
xor
iret
jle
xor
in
sub
mov
fnstenv
xlat
pop
sbb
cs
mov
jae
inc
loope
mov
dec
pop
repnz
inc
ss
loope
dec
mov
sarl
cmp
sub
jb
mov
jecxz
pop
ljmp
and
jae
cltd
les
xchg
xchg
push
shrb
sub
mov
mul
leave
out
add
loop
jbe
icebp
leave
rcrl
mov
mov
add
push
xchg
xchg
loope
sarl
mov
and
sub
test
cs
lods
push
mov
out
aad
xor
add
mov
push
pop
jp
aas
aad
icebp
xchg
punpckldq
loope
dec
add
testb
repz
popf
test
ret
jbe
notb
lret
and
es
lcall
clc
mov
pop
imulb
fnsave
cli
popf
add
das
pop
mov
jp
mov
pop
fsubrl
addl
imul
leave
xchg
jae
imul
pop
inc
cli
call
testb
push
jmp
inc
or
leave
inc
mov
cmpsl
fisubrl
mov
or
jecxz
add
lods
xchg
inc
mov
jmp
mov
mov
mov
jno
add
test
xchg
pushf
test
jmp
push
pop
bound
aad
and
or
sbb
lds
sahf
and
pop
iret
push
lods
jns
mov
dec
pusha
pop
repz
popl
lret
lret
sbb
arpl
rcll
xchg
push
jne
outsl
fcmovu
inc
mov
push
rcrl
mov
xchg
outsb
cli
icebp
orl
hlt
dec
jle
cmpsl
mov
ror
addr16
inc
imul
aaa
or
mov
popf
mov
popf
popa
push
cmp
cmp
rorl
push
test
jno
fnstcw
add
xorl
sbb
icebp
test
ja
rorb
jge
jl
mov
imul
mov
or
sbb
jp
cs
sub
adc
cmp
les
cmp
es
and
inc
aaa
dec
sbb
mov
mov
test
jne
pop
sahf
mov
ds
idivl
or
cmp
mov
jp,pt
cli
mov
xor
loope
lret
es
push
and
sbb
sbb
add
add
sbbl
sti
jno
pop
cli
push
notl
add
mov
sub
push
or
and
cmpsl
fnsave
sbb
mov
jp
lds
sub
xor
dec
mov
sub
mov
inc
andl
dec
imul
cmp
xchg
mov
push
push
fisttpll
pop
andl
sarb
xchg
loop
push
pop
dec
push
and
and
push
adc
cmp
ss
addb
inc
jne
xor
popa
or
inc
cmc
add
enter
arpl
repz
mov
xor
jno
int
loopne
outsb
pop
inc
mov
cmp
and
xor
jecxz
sahf
out
and
loope
jmp
ja
inc
loope
mov
dec
inc
xorps
in
pop
cs
push
xchg
rcr
cmp
mov
imul
arpl
mov
or
adc
mov
lcall
inc
xor
and
dec
lods
jbe
inc
lcall
roll
mov
xchg
xchg
add
xlat
jo
aaa
int
and
ret
loopne
mov
inc
ljmp
lcall
out
ljmp
leave
arpl
push
test
mov
jns
enter
insb
adc
fisttpll
jne
roll
inc
add
cltd
dec
dec
cmp
mov
cltd
and
jge
stos
sahf
adc
stos
inc
xchg
jmp
xor
arpl
mov
and
inc
or
mov
popa
into
xchg
or
ret
sub
xor
es
cli
xor
cmp
sahf
shl
inc
mov
dec
inc
or
inc
xchg
orb
sbb
addr16
icebp
andb
mov
xor
add
adc
xor
popa
mov
xlat
adc
jmp
insl
dec
mov
adc
sbb
loopne
lahf
test
xor
jne
das
in
dec
imul
adc
add
push
pop
mov
out
ja
mov
fdivr
fs
mov
orps
dec
decl
addr16
adc
clc
dec
popa
arpl
sub
bnd
bound
fstpl
xchg
add
dec
movsb
andb
lea
int3
test
jmp
adc
jle
ret
arpl
jne
add
jno
ret
jne
adc
sbb
es
jnp
xor
mov
xor
cld
mov
sbb
cmp
std
sar
testb
inc
inc
dec
mov
mov
push
push
es
lret
push
inc
mov
in
jns
ret
lahf
adc
dec
fcoml
pushf
lret
add
or
xlat
add
mov
movb
sbb
mov
fnsave
pop
cmp
outsb
xor
andl
sbb
pop
or
cmp
add
pop
sahf
xchg
jmp
sbb
in
adc
mov
sbb
push
and
mov
or
mov
aas
pop
mov
mov
and
push
pop
sti
and
dec
fwait
imul
cld
test
jl
shl
xlat
enter
imul
sub
iret
mov
mov
ret
test
jp
les
imul
test
addl
lcall
repz
icebp
push
add
les
in
dec
mov
andb
jp
cmp
sub
dec
es
and
les
sub
cmp
jns
xchg
mov
jb
or
sbb
jno
xor
sub
aaa
cmp
movsl
imul
cmp
push
decl
adc
fstps
cmp
sub
jno
xor
ds
repz
shlb
rorb
mov
pop
inc
je
jle
jb
pop
loop
icebp
shrb
xor
xchg
lods
daa
rclb
inc
lds
or
mov
push
data16
and
aaa
mov
jb
sbb
inc
add
cmp
xchg
pop
sahf
fstpl
sahf
adc
add
sbbl
inc
dec
repz
in
lret
mov
movsb
mov
jecxz
mov
jecxz
and
adc
mov
push
push
flds
cmp
jns
xor
dec
popa
push
outsb
imul
ja
movsl
int
mov
ds
and
out
mov
push
icebp
xor
lcall
xlat
mov
ja
ss
add
imul
jb
cld
xor
and
mov
dec
leave
repnz
push
and
xor
inc
test
mov
jle
or
notb
data16
xlat
push
and
sti
mov
xchg
repnz
xor
fyl2x
push
push
mov
frstor
mov
aas
sub
xor
ret
add
addb
movsb
and
js
pop
icebp
bound
sarb
aas
push
repnz
loope
dec
aaa
and
inc
jmp
aad
std
mov
jle
add
mulb
andb
dec
xchg
sub
testb
push
loope
cwtl
out
add
cmpsl
pop
fisubrl
dec
cmp
lretw
movsl
test
imul
outsb
lock
insb
lret
sahf
jbe
in
sub
cmc
sub
loop
lahf
xchg
inc
les
and
add
add
cmp
push
xor
mov
xlat
ds
mov
inc
loope
pop
out
fld
sub
push
sahf
loopne
xchg
data16
js
cmpsl
cmpsb
les
fcmove
mov
fnstenv
mov
lods
mov
aaa
jg
sti
repz
movsl
inc
pop
fs
movsl
pop
stos
inc
dec
outsl
rorl
fcmovnbe
jnp
and
dec
jl
stos
sbb
push
outsb
rcl
leave
shl
sub
call
adc
movsl
dec
fnstenv
dec
insl
into
push
and
iret
mov
or
repnz
xchg
dec
jbe
cs
les
stos
sub
xchg
pop
and
cmp
fstsw
mov
adc
and
imul
or
jbe
xor
add
lods
jp
or
cs
xor
imul
mov
movsl
fs
je
test
leave
jno
outsl
out
imul
sarb
sub
mov
sbb
bound
shr
fs
fmuls
push
testb
imul
push
sbb
jbe
dec
jbe
cli
out
cmp
dec
add
imul
cs
cmpsl
sbb
cs
imul
push
and
mov
out
fildll
scas
repz
jge
addr16
push
jle
sub
inc
jle
jecxz
mov
push
jecxz
adc
inc
jbe
jge
sbb
or
mov
jns
stos
shll
pcmpgtw
ljmp
pop
mov
lods
icebp
gs
repnz
jno
or
roll
nop
jno
insl
jb
std
push
mov
sbb
mov
xor
push
pop
cmpsl
clc
push
xlat
ffree
cli
and
push
icebp
dec
xor
shrb
and
jne
loope
push
int3
test
push
ja
jge
mov
xchg
push
leave
sbb
mov
test
inc
bound
jge
aam
sub
adc
mov
sti
add
call
inc
or
repnz
ret
outsl
pop
add
divb
adc
sbb
or
mov
enter
stos
push
test
mov
xor
outsl
rcll
daa
dec
sub
xorl
std
add
movb
fnstsw
adc
icebp
inc
mov
inc
pop
and
xchg
mov
sbb
addr16
xor
cmp
ss
push
imul
rolb
stos
test
mov
xor
add
scas
push
popa
stos
bound
sub
push
sti
and
and
mul
jle
mov
dec
xor
shll
jle
es
mov
jne
cltd
inc
lds
xchg
sarl
jno
stos
push
xor
xor
inc
les
lods
sahf
sbb
ljmp
dec
imul
popf
test
inc
mov
insl
ds
jmp
cmp
jno
andb
pop
mov
testb
sbb
js
inc
out
add
inc
or
dec
rolb
mov
inc
lahf
mov
iret
stos
cmc
mov
xor
in
pop
mov
sbb
decl
pop
and
and
dec
das
xor
jb
loope
ret
xchg
and
gs
scas
popf
mov
out
mov
pop
push
and
mov
repz
scas
mov
cmp
mov
xor
lcall
loope
in
popa
pop
test
shlb
hlt
xor
xor
xchg
push
jb
in
enter
mov
pusha
movsl
jns
jbe
loopne
push
xor
in
jp
pop
adc
dec
xor
andl
fldenv
out
scas
xlat
inc
fists
in
xor
add
movsl
inc
loop
xor
data16
inc
sub
sub
adc
inc
je
mov
icebp
sbb
pop
inc
out
xor
cmp
mov
loope
sub
insb
loope
enter
aad
les
mov
add
movsl
xor
cmp
adc
fs
push
out
jg
jns
sbb
ret
popf
gs
sub
stos
jg
daa
pushf
pop
dec
bound
inc
shl
dec
jmp
pusha
fiaddl
jo
jge
iret
insb
and
and
mov
push
and
push
xchg
add
insl
jb
ret
in
fs
dec
lds
or
icebp
shll
call
xchg
xor
out
mov
shll
dec
addr16
push
shl
jb
mov
sbb
punpcklwd
test
data16
mov
aaa
cmc
rol
stos
push
mov
mov
lahf
add
xchg
push
enter
mov
xor
xor
inc
mulb
push
inc
dec
sub
adc
adc
jne
repnz
push
mov
pop
xor
inc
or
adc
xor
xchg
mov
fwait
loope
mov
xlat
loope
cmc
and
ror
lahf
mov
sbb
adc
call
mov
push
in
jle
das
jae
jge
or
pop
dec
outsl
sbb
or
data16
jno
mov
aad
idivl
mov
pop
daa
add
pushf
xchg
jb
pop
inc
adc
xchg
dec
lock
mull
sub
adc
sub
jle
sbb
mov
lock
and
mov
adc
popf
ret
or
movsl
stos
jge
sub
mul
mov
clc
inc
nop
rorl
or
jno
test
in
movsb
shrb
testl
popa
dec
mov
pop
ret
in
repnz
scas
negb
rcrl
pop
jp
filds
xor
lret
xchg
adc
mov
cld
or
cs
dec
std
inc
sub
aam
xor
push
xor
mov
cmp
adc
jne
adc
std
lret
int
inc
adc
shlb
lret
shll
or
jns
adc
xor
push
cmp
cmp
mov
xor
mov
fs
mov
add
jp
cmp
icebp
subl
add
in
popf
dec
push
stos
test
and
jae
jns
ret
mov
sub
mov
push
pop
pop
pop
int3
dec
addb
push
dec
cltd
popa
pop
popa
push
imul
cwtl
jne
arpl
rolb
test
pop
mov
fistl
dec
mov
mov
movsl
sbb
sub
sbb
outsb
jmp
lea
dec
xor
outsl
jno
lods
pop
fxch
aas
insb
out
insl
add
fsubl
adc
fninit
mov
insb
mov
ret
test
mov
cmpsl
out
int
pop
mov
cld
xor
push
das
stc
xorl
shlb
inc
ret
adc
xchg
inc
std
mov
repnz
in
inc
scas
cmpsl
addr16
jae
and
fs
adc
pushf
addb
cmpsb
push
push
or
and
pop
or
imul
inc
mov
push
repnz
out
and
dec
mov
xor
imul
sbb
aam
iret
pop
imul
fistpll
mov
dec
add
xor
in
jns
inc
rcl
xor
ror
add
mov
mov
or
xor
dec
xchg
loopne
adc
addr16
or
sbb
jns
imul
shll
xchg
popf
dec
jl
dec
fistps
daa
xchg
xor
shll
inc
dec
mov
cmp
sahf
jmp
rcll
xor
jge
push
repnz
outsl
in
test
sub
lea
adc
push
mov
push
add
lds
popa
mov
push
jns
lret
push
jbe
push
pushf
sahf
mov
idivb
dec
jle
leave
test
pop
shll
jb
int3
cmp
fidivs
mov
add
int3
jno
xchg
mov
pusha
addr16
fisttps
jmp
sahf
roll
lds
sahf
jmp
mov
inc
xchg
mov
mov
or
daa
rcll
ja
sub
cmpsl
cmp
adc
or
imul
sahf
daa
push
push
cmc
jns
mov
pop
in
or
jg
ja
push
mov
and
jl
cwtl
xchg
pushf
xor
jle
mov
jge
adc
popf
shll
jg
xchg
sahf
fwait
lods
bound
push
inc
push
mov
imul
shrl
dec
adc
out
mov
gs
bound
cwtl
lds
fdivrp
xchg
mov
push
in
imul
rcll
mov
popf
shll
mov
push
mov
mov
adc
sbb
mov
rcrb
enter
gs
mov
cmpsl
fldl
push
pushf
rclb
les
fs
cmpsb
xchg
fs
roll
fisubl
fldt
lret
les
js
bound
mov
xchg
bound
rcpps
inc
sub
cmp
xchg
mov
xor
dec
loopne
lret
fdivp
in
std
push
dec
pushf
insl
movsb
mov
aam
dec
test
sahf
adcl
pop
push
adc
xchg
je
mov
push
insb
xchg
jne
jno
stos
lock
inc
ja
ficomps
ror
jae
andl
pmulhw
test
imul
rclb
jle
jo,pn
inc
gs
lret
pusha
and
mov
inc
lods
push
cmp
repnz
lea
mov
fs
gs
les
add
push
shl
ret
vmulss
cmp
test
inc
aam
movsb
pop
les
push
lahf
pop
icebp
jecxz
repz
pop
aam
das
and
int
sub
jg
leave
arpl
and
les
mov
jo
inc
hlt
mov
mov
sbb
jg
sbb
out
fadds
cmpsb
pop
xor
leave
fcomps
gs
into
imul
popa
roll
sarb
jae
sahf
cmp
jl
es
pop
inc
shrl
xchg
in
ss
and
cmp
dec
xchg
xor
insl
lret
push
je
push
mov
mov
sbb
and
push
shll
inc
jb
adc
and
dec
jp
jo
js
sbb
or
les
gs
ret
cmp
inc
rorl
insb
mov
insl
mov
jmp
xor
sbb
add
dec
push
jnp
out
inc
lea
mov
les
into
mov
mov
and
out
sub
repz
out
fcoms
mov
xchg
push
xchg
jno
sub
pusha
sbb
adc
fs
ret
stc
pop
xor
push
sub
ret
cmp
ret
push
add
or
pop
in
shlb
inc
dec
rorl
daa
cmp
lds
or
push
mov
js
int
cwtl
add
xchg
inc
loopne
test
sahf
xor
xchg
adc
pop
outsb
jb
stos
ss
mov
push
punpckldq
push
lds
xchg
test
inc
insb
pop
mov
addr16
push
add
popl
popa
or
jbe
fs
xor
out
inc
add
adcb
les
dec
xor
pop
cwtl
aam
stos
shll
cmp
inc
jbe
stos
adc
daa
notb
mov
pop
or
fldenv
or
daa
mov
test
mov
rcl
mov
sub
frstor
sub
pop
inc
repnz
inc
repz
nop/reserved
dec
push
push
lret
cmp
and
jp
or
test
pop
divl
or
test
xchg
int
movsl
imul
insl
push
sbb
cmp
mov
jmp
inc
push
cmp
jno
cwtl
in
dec
icebp
push
rol
jns
inc
dec
jmp
cli
pop
sub
mov
shll
add
cmp
mov
jbe
dec
push
dec
popa
mov
fnstsw
inc
xchg
xor
ljmp
mov
sub
mov
fmull
stos
add
xchg
loope
and
shrl
sub
out
pop
clc
mov
out
fistl
push
push
icebp
push
inc
icebp
or
push
jo
mov
adc
sub
xchg
inc
xor
inc
shlb
ret
cltd
loope
mov
mov
lds
sub
inc
jbe
shrl
cs
lcall
outsb
aaa
gs
dec
sahf
mov
pop
adc
loope,pn
int
or
sub
sub
jg
in
xlat
loope
and
mov
pop
mov
cmp
fmul
xor
loopne
jle
mov
dec
js
into
stos
setns
inc
rcr
cwtl
mov
fdivr
mov
mov
jbe
fstl
push
jo
mov
xchg
mov
aaa
cmp
dec
repnz
add
out
push
push
jae
jge
sub
cmp
inc
repnz
cmpsl
std
enter
mov
adcb
mov
dec
add
loopne
dec
push
mov
pop
in
jne
add
rcrl
push
inc
cmpsb
mull
jnp
imul
shlb
les
dec
dec
sub
pop
and
cmp
add
addl
mov
sbb
mov
icebp
lods
loope
adc
sub
or
fcoms
xchg
ljmp
dec
icebp
and
and
pop
test
test
inc
pop
outsb
ret
and
gs
adc
vandps
ret
push
rcll
cli
aaa
les
aam
rcll
push
xchg
imul
sub
inc
xchg
lret
aaa
xchg
les
pop
pushf
push
inc
lret
or
enter
xchg
ss
sbb
xor
lret
popl
inc
inc
dec
shrl
testl
xchg
ljmp
icebp
adc
mov
int
aaa
inc
roll
cs
shll
movsl
sub
jmp
shrl
push
mov
inc
lahf
lcall
fstl
mov
lods
xchg
orb
push
mov
dec
int3
test
ja
mull
popa
aaa
mov
sub
inc
roll
dec
popa
mov
inc
bound
inc
push
jns
add
cmpsl
stos
out
inc
sbbb
data16
or
pop
xor
pcmpeqd
icebp
mov
data16
bound
dec
in
nop
lret
xlat
test
sub
repz
addr16
jge
sub
or
xchg
mov
shrb
enter
mov
xor
into
loopne
mov
std
mov
fcomps
sbbl
xor
inc
dec
xor
jmp
xchg
mov
push
fwait
xorb
roll
jp
pop
mov
loop
shll
rclb
test
out
sub
sub
xchg
lcall
fmul
std
cld
jnp
mov
adc
cli
bound
stos
push
xchg
push
insb
or
mov
filds
call
xor
fcoml
or
repz
les
jns
mov
imul
les
jge
cld
repnz
pop
in
inc
jb
pop
mov
xlat
xor
in
inc
je
repz
mov
cmpsb
insb
or
lcall
cmpsb
pop
imul
andb
cmpsl
xchg
push
inc
jae
jecxz
imul
add
xor
push
dec
fstpt
sub
dec
sbbb
ja
icebp
imul
testb
mov
adc
mov
mov
aam
inc
loop
cmc
pop
and
shll
and
mov
lcall
adc
dec
bound
cltd
loop
lret
out
les
popa
pop
cmpsb
icebp
inc
roll
mov
and
imul
lds
loope
loop
adc
sub
outsb
int3
lock
mov
or
sbb
fsubs
pop
xchg
js
or
rcrb
add
lds
out
xchg
mov
cltd
inc
mov
or
test
scas
in
mov
jmp
pop
outsl
mov
xor
ljmp
call
mov
lods
mov
xchg
dec
pop
mov
imul
inc
push
popa
rol
test
jmp
jns
popl
in
mov
rcrb
repz
add
lret
pop
clc
sarb
push
jne
dec
xor
sub
inc
jmp
movsb
cmp
enter
andl
xchg
bound
outsb
push
data16
loope
or
mov
xchg
pop
jp
jge
mov
mov
rcrl
movsb
pop
lds
dec
and
mov
xchg
lods
xchg
sub
fimull
sub
dec
dec
ljmp
push
push
sarb
push
inc
pop
pop
jp
xlat
xor
lods
xor
in
mov
mov
mov
divl
jno
pop
push
cmp
xchg
inc
rclw
movsl
push
movsb
addr16
mov
test
daa
jae
and
pop
les
jle
jno
pop
insl
popa
test
and
inc
mov
or
lock
shll
loope
les
push
mov
mov
fs
std
push
pop
in
jno
jl
inc
icebp
pop
in
jne
push
push
cmp
aas
xor
jecxz
push
xor
sbb
jge
ja
inc
bnd
dec
adc
and
in
fimull
into
mov
xchg
cltd
mov
cld
and
lods
push
or
cmc
in
test
mov
mov
inc
or
repnz
and
outsl
je
imul
pop
adc
pop
jecxz
aas
pop
xor
mov
inc
shl
push
jle
repnz
addr16
aam
xor
rclb
lahf
cld
mov
call
insb
dec
xor
dec
popl
enter
jo
sahf
and
imul
sbb
cmpsl
xor
jle
pop
movsl
test
mov
cltd
jae
inc
aas
mov
inc
stc
dec
jmp
pop
ds
pushf
les
rcr
xor
push
mul
out
mov
push
pop
inc
jno
xchg
mov
lds
dec
or
stos
add
push
out
push
inc
xchg
or
mov
pushf
insl
dec
inc
xchg
jnp
in
dec
pop
lea
jb
and
inc
sahf
aaa
scas
adcb
repnz
lcall
test
loop
push
les
xor
shrb
sarb
sbb
cmp
sub
fcoms
push
jp
es
les
xor
add
mov
inc
dec
inc
inc
bound
shll
pop
imul
insl
out
ds
add
pop
jge
mov
sbb
jg
arpl
adc
sbb
imul
in
sub
adc
mov
xchg
inc
and
rorb
xchg
icebp
xchg
aaa
imul
jae
adc
icebp
dec
sub
aas
dec
jne
push
mov
push
mov
jg
stos
cmpsb
shrl
nopl
inc
repz
pop
inc
les
bound
int
shll
fsubs
in
icebp
pop
lret
in
dec
in
stos
jne
inc
cmp
outsb
int3
inc
shl
jae
jae
stos
xchg
imulb
mov
inc
xchg
jbe
dec
jns
xor
iret
loop
sub
iret
jo
xchg
rdtsc
inc
les
mov
mov
mov
mov
gs
test
into
add
jae
sub
xchg
or
xchg
cmp
gs
inc
and
mov
fidivrl
xlat
mov
outsl
pop
shlb
sub
mov
hlt
lods
popa
loop
mov
sub
lahf
xchg
aad
stos
mov
xor
dec
xchg
loope
pop
in
subl
pop
jb
das
int
ja
sub
or
push
mov
cmp
sbb
stos
push
jecxz
or
loope
lods
sti
decb
xorb
or
dec
cmpsb
std
push
xor
cmpsb
adc
outsb
js
stos
mov
mov
in
pop
mov
jb
mov
mov
mov
jmp
sahf
inc
xor
loope
les
xor
mov
mov
add
ds
int
or
push
jg
dec
mov
xchg
out
icebp
mov
adc
cmp
hlt
push
sbb
mov
mov
rclb
fldl
jnp
loope
iret
push
icebp
sbb
bound
test
dec
xchg
xchg
sbb
idivb
loope
lea
movsb
aam
jecxz
test
test
ds
popf
imul
fs
popa
lea
out
in
inc
popa
or
pop
ret
test
cltd
dec
shrb
fidivrs
test
jmp
test
iret
cmp
insl
xor
lahf
inc
push
sbb
loop
insl
inc
pop
lea
imul
jge
out
jp
push
pop
out
in
jl
cmp
jmp
daa
js
mov
fwait
insb
mov
jbe
int
inc
bound
inc
inc
and
loop
daa
fwait
push
sub
adc
fs
add
adc
push
nop
add
jg
fwait
mov
stos
jecxz
inc
lret
xor
ljmp
pop
pop
jl
mov
mov
pop
clc
popf
cmp
or
mov
dec
dec
pushf
push
pop
lcall
not
notl
fisubl
hlt
ret
lcall
mov
movl
xor
mov
pusha
push
mov
sbb
inc
outsb
xchg
xor
ja
jle
jno
inc
imul
lahf
push
mov
fcoml
repnz
data16
imul
lods
fmull
loope
bound
int3
mov
push
adc
loop
add
dec
inc
js
jecxz
mov
cwtl
xor
icebp
test
movsl
push
jg
stos
cli
push
pop
jo
mov
negb
repnz
pop
imul
jno
cwtl
sub
mov
add
pop
icebp
shlb
nop
iret
out
mov
mov
push
enter
jecxz
movsl
pop
out
das
add
dec
arpl
lods
rolb
or
pop
insl
inc
fsubrl
pop
dec
sub
dec
cmp
inc
aad
xchg
jns
inc
popa
add
lcall
mov
ss
clc
pop
push
popa
inc
xchg
xor
aas
jne
jns
lret
mov
adc
jb
sbbl
shll
dec
les
iret
div
gs
addr16
xor
mov
dec
inc
fsts
mov
dec
lods
pop
pop
bound
dec
popa
push
add
inc
loop
nop
movsb
movsl
and
sub
mov
nop
push
push
sbb
ret
mov
scas
arpl
sahf
lcall
fisubs
pop
push
fldenv
mov
sub
lcallw
inc
jge
fildl
ljmp
shrl
xor
pusha
push
imul
and
mov
pushl
pushf
or
nop
adc
cli
inc
sub
or
inc
add
bound
and
mov
mov
xchg
outsl
inc
xor
pop
lret
jge
test
fsubl
push
dec
repz
lods
cmpsb
xor
dec
addr16
sub
rcrl
clc
cmp
pop
loope
dec
fstps
pop
fcmovne
or
dec
xchg
les
shll
cld
jno
fldenv
faddp
in
add
in
sbb
push
pop
sbb
scas
inc
pusha
inc
mov
inc
std
cwtl
dec
xor
and
mov
sahf
or
lods
rcrl
test
xorl
les
ret
js
rorl
xchg
in
mov
xchg
adc
jg
decl
shr
insl
inc
xor
inc
out
addl
lahf
rorl
and
sar
cmpsb
sti
scas
mov
xor
xchg
fadds
shl
push
loopne
aad
les
repnz
cmp
push
xor
jl
clc
xchg
mov
movsl
pop
sbb
mov
xchg
bound
out
aad
dec
mov
xlat
ja
and
mov
cmpsb
mov
mov
ror
mov
xlat
mulb
push
in
arpl
adc
adc
mov
mov
fldcw
ja
push
push
insl
imul
xchg
sti
xchg
shll
fcoml
mov
jb
incl
lds
xor
mov
popa
bound
subl
xor
bound
popa
xor
out
inc
int
hlt
stc
ret
push
in
cmpsb
or
mov
out
mov
mov
ja
test
lret
jge
int3
adc
jmp
adc
mov
nop
push
push
inc
in
inc
cs
push
stos
xchg
cmp
add
inc
adc
int
cld
and
test
add
shrl
mull
test
in
ss
push
mov
int
inc
inc
mov
jno
leave
stos
and
out
mov
clc
cmp
inc
mov
xor
rolb
pop
xor
mov
adc
inc
int
pop
or
insl
cltd
adc
jle
inc
je
jb
adc
int
imul
outsl
add
ret
cwtl
ja
mov
push
cmp
xor
les
push
jns
push
dec
flds
add
sbb
mov
lods
push
mov
mov
and
mov
mov
mov
xorl
sub
arpl
jno
dec
xor
push
sbb
jno
ret
mov
mov
mov
sub
add
stc
xlat
xchg
sbb
jno
shr
and
inc
push
sub
dec
or
xor
fs
cmpsl
dec
je
mov
and
sbb
divl
inc
mov
cmpsb
push
mov
push
shl
add
mov
aam
jb
inc
js
pop
stos
lcall
ss
dec
push
insb
adc
jmp
roll
arpl
fs
in
inc
mov
roll
cmp
aad
test
scas
inc
or
lea
in
clc
jmp
push
repnz
xchg
ret
or
and
jno
sub
add
xor
sbb
enter
add
push
bound
inc
push
push
push
dec
mov
jns
sub
insb
ds
sbb
xchg
sub
lods
xchg
negb
lods
inc
and
inc
push
push
dec
pop
cmpsb
sub
and
dec
xor
push
sub
and
dec
dec
sub
cmp
fdivrl
call
xor
or
and
mov
lahf
mov
xor
jno
movsl
and
shl
inc
push
cmp
mov
dec
popa
outsb
push
mov
and
xor
into
push
lds
push
or
jge
ljmp
cmc
subl
mov
and
jg
loop
xchg
jb
fisubs
int3
cmpl
cmp
lods
sub
pop
loop
aaa
shll
pop
aam
xchg
int3
xor
jle
pop
inc
les
insb
call
sahf
mov
mov
repz
aam
cmp
les
xor
jae
lahf
stos
cmp
dec
out
sub
mov
mov
push
shll
es
cmpsb
imul
in
pop
mov
xlat
lcall
push
mov
movsb
inc
out
push
das
adc
idivb
or
inc
add
insb
sarb
mov
add
mov
lahf
inc
inc
shll
popa
lret
dec
add
or
pop
les
rclb
push
rcll
enter
test
sub
sub
lock
dec
jb
inc
in
loope
out
icebp
jg
jle
dec
lahf
popa
imul
push
or
xor
daa
ficomps
test
jge
and
inc
inc
rorb
sub
fstps
insb
lret
sub
pop
mov
add
popa
jae
xor
push
rorl
mov
cmp
jns
daa
imul
aad
aaa
les
inc
dec
ss
addr16
dec
ret
mov
and
shll
lea
testl
xchg
add
xor
gs
sbb
hlt
test
xor
sub
sahf
call
call
or
xor
cmp
insl
lods
sub
mov
lcall
cmp
or
insb
lock
adc
fcomip
inc
loope
bound
adc
sub
out
push
or
sub
les
add
inc
movsb
xchg
and
inc
rcrb
mov
sub
push
and
daa
mov
or
jns
test
fst
cmpsb
jne
push
dec
js
outsb
dec
push
icebp
mov
push
bound
les
decb
mov
test
insb
jp
cmpsl
ss
dec
sbb
icebp
rcrb
aad
inc
aad
push
push
imul
je
mov
pop
push
or
testl
sbb
cmp
imul
dec
pop
sbb
jb
mov
sub
les
sub
lea
es
sub
test
adc
jl
pop
adc
push
fiaddl
inc
mov
test
mov
notl
sahf
out
mov
in
push
xchg
pop
rcrl
push
repnz
mov
push
sub
xchg
and
inc
notb
sub
out
negl
dec
xchg
cltd
leave
jno
mov
leave
inc
push
loopne
pop
shrb
push
call
data16
jg
lret
push
push
jg
jg
cmp
dec
dec
divl
out
iret
sbb
inc
rcll
imul
rcrl
cmpsb
popa
mov
cld
and
sub
sbb
pop
sub
jle
xchg
xor
sbb
insl
mov
push
ret
jae
cmp
shll
xchg
cmp
leave
push
push
push
es
jb
xchg
loope
mov
int3
ss
mov
enter
stos
push
xor
sub
ds
pop
mov
adc
ja
cmp
dec
ret
push
outsl
xor
icebp
mov
les
add
outsb
inc
mov
cmp
xor
repz
push
repz
fdivs
mov
adc
xchg
fstpt
aaa
inc
dec
sub
outsb
lods
xchg
les
or
repnz
fsubrl
pusha
push
jo
movsl
push
cltd
push
jne
sub
pop
mov
in
add
add
jle
push
inc
cltd
rcll
mov
add
add
dec
or
les
js
push
out
aad
outsb
inc
mov
jbe
enter
inc
push
inc
leave
dec
adc
or
out
mov
dec
cmpsl
inc
sub
mov
sahf
mov
xor
sub
shrb
aaa
clc
cmpsb
sbb
sub
and
xchg
sbb
movsl
mov
lds
dec
sub
adc
inc
mov
sbb
fists
repnz
mov
mov
xchg
repnz
nop
mov
mov
fcoml
loop
imul
adc
push
sbb
fdivrs
jle
xchg
dec
test
stos
gs
es
cmpsb
dec
rolb
or
mov
push
or
rcr
repnz
push
jb
dec
rcrb
enter
inc
pop
dec
test
pop
gs
sub
sub
push
lds
mov
sub
xor
lds
mov
mov
adc
test
xchg
xor
arpl
adc
sar
stos
jmp
mov
pop
ss
sub
dec
cmpsb
sbb
mov
adc
aas
push
push
iret
push
les
adc
test
fldt
sbb
push
push
mov
outsb
jp
or
pop
sub
inc
bound
pop
roll
cltd
aad
int
stos
loopne
or
jne
push
dec
scas
xchg
inc
ffree
push
mov
pop
bound
data16
loopne
loopne
inc
add
dec
adc
mov
rcrl
les
push
je
jmp
or
adc
js
loop
inc
push
sub
push
push
mov
dec
ja
stos
repz
rol
add
test
pop
je
ret
les
dec
adc
inc
xlat
sub
fadds
and
dec
add
push
ds
notb
dec
jle
cmp
dec
jge
mov
adc
push
mov
dec
sub
js
nop
push
inc
je
xchg
adc
mov
test
ljmp
add
xor
xor
and
bound
sub
repnz
sti
or
stos
jge
pusha
cmpsl
lcall
js
mov
push
int
sahf
pusha
call
xor
mov
inc
cmpl
and
mov
pop
fucomip
imul
mov
je
xchg
sub
test
dec
mov
adc
jmp
sbb
flds
out
sbb
or
and
out
rorl
inc
bound
test
leave
sub
mov
add
fucomp
xchg
repnz
lods
mov
ret
mov
inc
lret
fistl
orb
sbb
cmpsl
push
mov
mov
push
inc
xor
movsl
sbb
dec
xchg
jbe
popf
sbb
jno
stos
mov
and
cmp
cmp
test
in
repnz
mov
test
faddp
inc
jb
jle
es
add
test
shll
subl
adc
out
xchg
sub
fisttpll
adc
shrl
pop
mov
adc
cmp
loope
mov
jnp
push
lret
lock
arpl
pop
push
imul
in
daa
sub
outsl
mov
mov
dec
nop
jae
inc
std
fnstsw
xor
dec
aam
jno
push
sub
fs
xor
push
xor
and
mov
sahf
jno
repnz
imul
lods
xchg
xor
xchg
shl
iret
sub
inc
mov
xchg
push
mov
jmp
imul
mov
ret
cwtl
lea
xchg
pusha
xlat
fstps
jmp
sti
push
ror
ja
hlt
or
xor
adc
cmpsl
and
adc
inc
adc
cmpsl
inc
cmpsb
dec
inc
sub
bound
das
push
mov
les
or
jno
in
movsl
pop
sub
push
mov
pop
les
shl
mov
inc
scas
pop
test
mov
mov
and
fmul
inc
adc
mov
lock
mov
inc
xor
mov
jmp
jne
pop
scas
jp
mov
aaa
hlt
idiv
movsl
stos
ja
das
fwait
lock
adcl
out
or
cmp
adc
push
push
sbb
incb
inc
and
inc
jl
push
adc
inc
and
mov
out
fnstenv
xor
add
xchg
pop
xor
shlb
loope
das
loopne
in
int3
inc
dec
dec
xor
push
stos
pop
loopne
sub
aaa
pop
testl
leave
bound
mov
sbb
push
xorb
addr16
mov
aaa
stos
xor
sub
aas
inc
mov
mov
fldl
mov
xchg
andb
ds
add
cs
or
lods
add
movsb
inc
das
push
sub
das
pop
xor
push
ja
sahf
mov
jno
pop
lea
sub
pop
sbbl
jnp
lods
inc
xchg
jbe
lds
stc
shl
outsb
sub
pusha
popf
mov
pop
dec
jnp
shll
mov
mov
pop
jo
xchg
jge
mov
test
sub
adcb
and
data16
pop
adc
inc
dec
stos
rcll
xchg
cld
and
xchg
pop
push
int
push
test
hlt
sub
adc
aas
xor
fldenv
push
shll
rorb
mov
pop
or
lock
jmp
pop
stc
and
into
mov
cld
stos
pop
sub
and
xor
data16
aad
add
inc
pop
or
les
jmp
loope
gs
out
or
bound
dec
rclb
xor
loopne
add
jb
add
or
jecxz
aaa
imul
xor
sub
jne
cmp
sbb
mov
mov
mov
mov
in
insb
push
sub
fstpl
mov
push
repnz
imul
hlt
dec
pop
mov
cmp
movsl
mov
std
cs
negb
flds
dec
ror
jmp
jp
lea
ljmp
rcrb
cmp
jecxz
outsl
pop
test
dec
movsl
in
jne
mov
sub
push
inc
sub
inc
push
inc
pop
and
into
or
cmp
cmpsl
inc
cmp
flds
mov
pop
inc
jmp
jp
mov
sub
jnp
call
mov
pop
aas
sbbb
push
inc
rcll
xor
jbe
inc
push
pop
bound
leave
fisttps
outsb
outsl
push
rorl
fisubl
lods
sbb
fstpl
call
xchg
int
cmc
dec
jge,pt
add
imul
pop
inc
les
dec
outsl
xchg
jmp
inc
jp
loop
sub
test
jmp
xor
inc
sub
test
add
subl
jmp
jno
ret
xor
jmp
imul
divb
jo
insl
jno
mov
rorb
mov
inc
or
jle
stos
movsl
xor
xor
insl
xchg
test
and
and
call
test
jle
xchg
push
dec
mov
or
outsl
movsl
add
pop
int
mov
push
jecxz
push
out
stos
jnp
cmpsl
lods
bound
sbb
stos
dec
and
pop
xor
lods
dec
imul
or
arpl
inc
mov
inc
inc
adc
gs
test
inc
gs
outsb
sub
data16
sub
cmp
sbb
jne
dec
fcompl
in
popa
xor
or
movsl
jno
adc
rcrb
xchg
je
jg
movsl
mov
xchg
or
jns
adc
loope
ret
sub
adc
lods
cwtl
pop
fwait
mov
mov
add
mov
mov
pop
shll
bound
push
fadd
in
ror
in
push
imul
jb
lods
jbe
mov
dec
xchg
or
test
out
sarl
pop
adc
inc
lret
push
repnz
xchg
jp
or
cltd
add
sub
inc
mov
sahf
icebp
mov
pop
icebp
push
adc
int3
mov
addr16
addb
xchg
push
adc
rclb
rorb
int
ficoml
mov
jle
jg
insl
mov
pop
push
dec
inc
pop
push
in
mov
arpl
divl
mov
jne
stos
or
call
jo
imul
jp
pop
mov
jb
xchg
lret
or
xchg
jmp
add
les
rcrb
mov
out
push
daa
test
mov
mov
xchg
inc
xchg
and
xor
popl
jle
jnp
sahf
adc
orb
int
adc
mov
adc
jno
in
sub
int
in
ret
push
push
push
jb
push
loope
push
cld
in
sbb
enter
mov
dec
dec
gs
outsb
xor
repz
cmpsb
outsb
or
scas
xchg
inc
xor
dec
movl
pop
dec
inc
cmp
fwait
mov
add
les
lds
in
lret
dec
int
push
push
adc
inc
pop
adc
mov
push
push
ljmp
jecxz
das
mulb
sub
imul
jmp
stos
add
mov
repnz
popa
inc
cmpsb
jae
imul
push
iret
icebp
cli
lret
aam
test
mov
adc
shll
inc
mov
jnp
js
mov
pop
push
clc
sub
mov
pop
mov
cmp
movsl
jnp
lahf
jb
push
imulb
mov
adc
xchg
movsb
dec
cmp
dec
cmp
dec
testb
jp
sahf
icebp
xchg
int
clc
pop
bound
mov
lcall
loope
lock
into
or
dec
les
mov
cmc
jno
pop
sub
pop
inc
je
jge
fs
cmc
mov
adc
inc
dec
sub
shl
and
aam
mov
call
sub
icebp
cmp
ret
lods
jne
rcl
or
lds
pop
pop
or
xor
xor
iret
inc
mov
jnp
jge
jecxz
push
or
iret
shr
add
push
jecxz
ret
jp
mov
or
adc
leave
das
mov
jl
cwtl
popa
add
ret
or
repnz
adc
cmp
test
clc
adc
imul
mov
sbb
mov
ljmp
xor
dec
xchg
rorl
out
addr16
gs
dec
jmp
cmc
inc
xchg
and
icebp
inc
cmp
loope
rorb
in
outsb
push
pop
fucom
mov
mov
lods
test
jp
pop
imul
div
or
cmpsb
repz
inc
xchg
mov
out
rol
pop
sbb
icebp
das
call
sbb
push
or
push
xchg
sub
imul
jb
out
ljmp
dec
popf
jl
xorl
cmc
outsl
dec
dec
repnz
xor
push
mov
into
jge
push
pop
inc
jg
mov
xchg
jg
push
xchg
add
pop
rol
nop
fwait
arpl
mov
mov
dec
loop
ja
lods
loope
mov
out
or
loop
js
inc
ret
inc
mov
cmpsl
add
mov
mov
jnp
insl
daa
imul
int3
mov
pop
and
sub
jl
push
jmp
mov
bound
ffree
aaa
adc
mov
std
xchg
dec
or
jns
add
mov
push
xor
scas
sti
in
dec
test
mov
sub
mov
pop
outsb
and
mov
imull
repnz
mov
pop
daa
lds
ljmp
gs
push
mov
ss
or
aas
test
jno
bound
adc
adc
jo
push
clc
adc
push
pop
inc
mov
lcall
mov
loopne
shr
popf
jp
dec
cmp
subb
sub
pop
adc
pop
sub
les
out
xor
fdivl
mov
std
out
sub
jbe
sarl
sub
adc
mov
test
push
and
mov
mov
jno
lret
icebp
js
jmp
inc
popa
bound
xlat
fwait
out
xor
movsl
es
add
das
dec
add
dec
std
test
imul
or
enter
bnd
jl
and
sar
dec
xchg
sbb
das
pop
and
dec
add
xchg
inc
int
test
mov
xchg
sub
stos
int3
insl
jnp
pop
adcb
lea
pop
jmp
add
popa
dec
add
aam
aaa
mov
sub
pop
inc
cli
enter
mov
bound
xor
push
lods
dec
inc
pop
adc
rcl
cmp
mov
xor
push
push
stos
add
popa
ss
push
loope
popa
xor
movsb
cmp
bound
inc
cwtl
cmp
jb
cmp
jecxz
dec
jns
ror
outsl
cmpl
fstpt
mov
pop
mov
imul
jne
and
lret
lods
sti
mov
jae
dec
jbe
add
push
add
xchg
leave
and
test
cmpsb
push
push
addr16
jecxz
js
pop
and
xchg
mov
stc
mov
mov
std
inc
lea
mov
jo
sbb
sti
pop
mov
cmpsb
rcr
push
sbb
loopne
jmp
scas
and
std
push
out
das
les
and
mov
test
repnz
jb
xlat
sbb
inc
pop
in
shl
sbb
int
rorb
inc
inc
jge
or
sub
daa
sub
sub
fbld
addr16
jno
cmc
mov
call
mov
jne
scas
rcll
pop
cli
xchg
sti
jno
sbb
pop
movl
stos
mov
adc
add
mov
xor
in
in
in
popa
cmp
push
mov
arpl
mov
inc
jno
aaa
jmp
mov
mov
sub
aad
inc
repnz
dec
icebp
hlt
aad
bound
loop
imul
cli
dec
movsl
push
jmp
mov
add
movsb
mov
xor
dec
and
cmpsl
in
pop
jmp
cwtl
lcall
test
arpl
pop
xor
xchg
inc
add
das
shl
jae
dec
fs
mov
inc
or
mov
lret
xor
push
es
mov
and
push
xor
repnz
fidivl
pop
sub
dec
pop
outsl
stos
nop
outsb
popa
out
aas
lahf
mov
mov
xchg
push
iret
mov
dec
repnz
xchg
adc
rorl
jbe
leave
adc
sub
les
es
add
aam
jecxz
jp
or
add
inc
adc
xchg
dec
loope
pusha
les
jecxz
jg
fnstcw
cmpsl
xlat
inc
es
mov
insb
jp
or
and
jle
or
imul
iret
cmp
sti
rorl
imul
jmp
ficoms
sbb
jge
repnz
aad
mov
cmp
mov
inc
testb
into
cmp
mov
cmp
inc
lods
push
dec
add
and
idivb
out
pushf
popf
push
add
xor
outsb
inc
push
dec
and
int
dec
jno
cwtl
mov
cmp
jno
or
inc
call
pop
stos
mov
mov
cli
inc
adc
mov
sbb
ret
cmp
inc
push
insb
ss
sahf
mov
into
lcall
scas
lock
mov
mov
mov
xchg
movsl
sarb
lret
lahf
test
xchg
sub
mov
sub
movsl
shll
hlt
cmpsl
in
push
mov
xor
ret
mov
mov
sub
ret
test
lock
inc
jl
loopne
stc
bound
inc
fsub
dec
sub
mov
mov
fdivl
xchg
mov
xor
mov
ret
mov
insl
jb
icebp
pop
imul
mov
pop
jno
mov
dec
mov
cmp
popa
bound
sub
fwait
mov
fsub
aad
movsb
xchg
and
mov
pop
arpl
fwait
jb
mov
ss
pop
inc
mov
xor
adc
cwtl
cli
es
inc
xchg
add
bound
sub
movsb
es
xor
enter
arpl
ret
data16
outsb
xor
adc
ljmp
cld
xor
repnz
and
testb
mov
stc
daa
mov
andl
dec
dec
test
vpsubusw
pop
cld
cmp
dec
fisttps
mov
cmp
inc
mov
push
loopne
ds
lds
fiaddl
sbb
int
cmp
dec
rcrl
push
mov
add
jle
loopne
adcb
lock
sbb
sub
popa
dec
insl
movsl
mov
test
cwtl
cld
movsl
inc
and
xchg
sub
adc
les
mov
test
xchg
cltd
push
add
movsl
xchg
jge
adc
cmpsl
sbb
jb
or
hlt
test
xchg
jg
adc
mov
pop
push
jb
fcmovne
dec
push
cmp
mov
xor
adc
jo
shll
les
sahf
iret
mov
add
pushf
mov
jge
fcmove
scas
inc
add
stos
out
test
fxch
shl
addr16
test
xor
inc
imul
cwtl
jle
inc
and
sahf
enter
xchg
or
outsb
cld
lods
in
pop
xchg
fwait
mov
mov
pop
push
repz
mov
icebp
gs
mov
hlt
imul
inc
outsb
and
xchg
insb
dec
arpl
cltd
mov
jne
jbe
dec
outsb
pop
inc
push
jmp
sub
push
cmovge
add
gs
push
gs
mov
popf
clc
jo
xor
loop
arpl
jb
or
xchg
cltd
inc
sub
jnp
lods
mov
mov
push
idivb
loop
adc
stos
adc
aam
push
outsl
cmp
shll
push
imul
out
std
lret
jmp
jno
push
push
mov
loopne
icebp
push
jbe
or
fchs
out
test
xchg
pop
xor
xor
push
pop
ja
insl
leave
dec
mov
popf
dec
das
mov
cmp
push
rcll
js
add
xor
rcl
outsb
pop
fstps
inc
leave
cmpsb
push
stos
cmp
push
mov
ror
fwait
imul
inc
mov
jg
bound
rcl
mov
dec
mov
mov
cmpl
jns
mov
push
dec
cmp
adc
fadds
loop
mov
jg
lret
int
outsl
mov
iret
inc
pusha
and
sbb
inc
inc
jle
pop
add
mov
decb
stc
gs
jg
dec
cmp
inc
inc
hlt
das
and
xchg
daa
sahf
jno
or
orl
pop
and
push
insl
and
aad
xchg
in
inc
arpl
jmp
jbe
mov
sub
imul
into
mov
test
or
inc
adc
add
jle
shrl
jo
mov
push
in
xor
sbb
sbb
pop
in
xchg
add
jle
test
test
ret
test
xchg
cmp
sarl
inc
xor
xor
les
shlb
xchg
add
xchg
lods
shrb
repnz
jbe
out
les
adc
jl
test
les
sahf
outsb
xchg
maxps
inc
inc
jp
lret
push
fsubrp
and
xchg
mov
aaa
or
jp
les
mov
mov
or
and
sub
mov
add
les
and
push
ja
mov
adc
xor
push
repz
popa
or
pop
pop
mov
bound
mov
pop
out
jmp
and
pop
push
sahf
in
inc
testl
repz
dec
unpckhps
int
stos
cmp
mov
add
imul
popa
stos
bound
lock
sti
test
mov
ret
insb
push
pop
cmp
cmp
push
outsb
sbb
pop
push
xchg
push
mov
cmp
imul
add
div
mov
mov
and
in
inc
inc
xchg
adc
in
insl
imul
sub
push
pop
jo
inc
pop
mov
and
fdivl
cld
or
inc
push
je
mov
in
andl
outsb
xchg
and
repnz
ret
or
sbb
pop
mov
xor
sarb
imul
outsl
and
sarb
popf
roll
sub
push
inc
dec
sbb
push
outsl
cmp
call
push
popf
int
lahf
fcomp
mov
fiaddl
dec
and
loope
push
pop
xlat
mov
fdivr
sahf
out
sub
int3
out
mov
loope
push
aaa
pop
jge
int3
pop
rcll
test
sub
add
stc
imul
add
lret
jno
add
pushf
sbb
pop
mov
and
dec
or
jg
push
aad
inc
add
cmpsl
sub
in
clc
add
inc
es
xchg
testb
pushf
test
add
mov
testb
adc
enter
test
push
sub
jecxz
inc
bnd
leave
clc
or
add
jno
xchg
adc
jo
movsl
sub
jo
stos
push
mov
add
push
test
xor
lcall
ja
xor
jmp
mov
xor
inc
lahf
xchg
jecxz
cld
cmp
hlt
es
adc
cs
aaa
and
mov
or
xchg
pushf
jns
sahf
pop
fstl
sahf
adc
push
add
sbb
outsb
sub
jne
dec
sub
out
les
jp
bnd
test
dec
stc
cmp
xorl
lret
or
push
mov
and
mov
pop
mov
lahf
mov
sarl
push
outsb
psraw
stos
push
xor
cmp
xorl
bound
push
jae
mov
out
roll
push
bound
jbe
les
call
xchg
jp
roll
mov
or
jb
xor
movsl
pusha
adc
mov
xor
sub
data16
int
jnp
lods
sub
mov
mov
in
sub
mov
pop
fisttpl
inc
adc
fnstenv
dec
mov
std
jp
sbb
sub
mov
or
xor
mov
inc
mov
jl
pop
ss
xchg
sbb
push
xor
cli
sbb
movsl
dec
adc
mov
push
inc
ficoms
sub
loopne
add
lds
mov
sub
test
push
push
lahf
mov
popa
in
sbb
imul
sub
icebp
subl
lret
cmpsb
fs
cld
icebp
movsl
daa
es
dec
cmp
negb
daa
cli
xor
dec
aaa
ja
imul
cmp
push
mov
out
fstps
in
sbb
fildl
pop
pop
stos
mov
inc
pop
mov
push
jae
sub
and
mov
lods
fstp
mov
add
inc
repnz
adc
adc
add
dec
xor
add
mov
fdivrs
fsts
pop
stc
sbb
ret
dec
xor
adc
xor
or
cmp
inc
add
inc
clc
xor
inc
hlt
xor
inc
lock
inc
in
stos
les
fld1
fsubl
loopne
mov
sub
inc
cmp
xchg
fsts
push
xchg
out
js
add
jl
jl
and
mov
adc
xchg
loope
arpl
push
inc
mov
loopne
jo
dec
inc
leave
or
jo
addr16
or
lods
dec
insl
sahf
orl
adc
push
jecxz
adc
gs
shll
imul
sub
xchg
divb
and
cmpsl
xor
cmpsl
and
sti
imul
and
or
jp
ss
dec
test
lcall
push
lods
fnstenv
cmpl
push
out
dec
sbb
scas
xor
dec
es
jb
dec
add
clc
mov
imul
cmp
mov
addr16
leave
roll
in
cmp
dec
xchg
es
mov
cmpsl
lcall
sahf
mov
inc
dec
push
sbb
hlt
mov
in
and
xchg
mov
mov
sub
fsubrl
in
insb
arpl
aaa
cld
hlt
imul
sbb
arpl
and
or
xor
je
jns
pop
fs
rorl
adc
mov
inc
sub
lock
pop
sub
push
push
enter
imul
inc
xor
jp
rcr
push
arpl
xchg
push
outsb
les
jno
xor
js
sbb
jno
sbb
inc
sub
sub
mov
mov
mov
and
mov
inc
jmp
mov
inc
mov
fisubl
push
or
les
push
xchg
xchg
bound
arpl
fxch
sub
pop
add
pop
xor
pop
idivb
sub
or
ja
cltd
sub
lods
inc
mov
mov
cmp
pop
divb
adc
xchg
mov
imul
cmp
test
sub
add
daa
inc
push
fucomip
shl
lds
adc
out
dec
data16
xchg
lods
lock
stos
mov
lds
cmpsb
gs
sub
push
add
xor
sahf
fiadds
xor
loope
jno
xor
mov
insl
jge
addr16
clc
push
rcr
jo
repnz
cmp
movsl
cmpb
xchg
jne
movsb
pop
cli
add
ss
add
test
sbb
pop
insb
pop
pop
mov
jbe
idivb
clc
sub
lea
xchg
sub
shlb
push
adc
pop
cmp
or
add
jle
sub
xor
shr
or
hlt
lods
xor
jle
les
rcll
repnz
inc
adc
in
in
pop
add
xor
test
jmp
mov
or
cmp
xlat
xor
jb
bound
xor
push
mov
mov
inc
dec
xchg
rorl
and
inc
das
jbe
movsb
sub
test
add
mov
fwait
dec
iret
and
gs
jp
stos
fisttpl
dec
insl
or
sub
jg
out
xor
dec
push
jle
sahf
and
stos
sbb
and
and
xchg
std
addb
insb
inc
mov
xor
xor
push
sbb
sub
jg
pusha
mov
les
stos
or
sbb
cmc
mov
jmp
jae
les
es
fucomip
sub
mov
xor
loope
adc
enter
lds
sub
jle
ror
xor
clc
push
sub
add
sub
push
xor
sub
in
inc
sbb
add
push
icebp
les
adc
sub
push
jbe
in
mov
faddl
xchg
mov
dec
fisttpll
inc
fstpl
lock
rep
or
mov
clc
pop
or
fnstcw
imul
jb
cld
movsb
rcll
and
nop
jecxz
and
ret
daa
mov
ret
jno
rorw
xchg
xchg
repnz
adc
xorb
add
jne
dec
and
aam
outsl
sub
jns
push
repz
iret
iret
mov
jae
xchg
cmpb
jb
pop
add
dec
inc
loope
xchg
push
les
xor
sub
popa
xchg
add
mov
xlat
pop
in
and
lret
popa
ss
adc
xor
ljmp
mov
pop
cs
xor
mov
and
cmp
repz
cwtl
mov
adc
cmp
or
scas
inc
cli
sbb
icebp
pop
push
outsb
fisttpl
je
movsb
inc
jp
adc
lret
push
add
out
fiaddl
cmp
insl
imul
xor
loope
js
das
add
sub
push
jmp
jno
mov
cmovns
xor
out
jo
loope
loopne
jp
repnz
ss
push
inc
sub
pushl
in
inc
aaa
push
push
push
cld
sbb
adc
ja
arpl
out
test
aaa
mov
shrl
dec
test
xchg
fiaddl
mov
or
fs
cli
xor
dec
sbb
loope
push
icebp
pop
sbbl
xchg
xor
push
dec
pop
mov
insl
mov
pop
call
pop
sub
shrb
pop
push
mov
xchg
std
ss
inc
push
lds
jae
or
sbb
sub
imul
call
enter
mov
test
sahf
inc
add
cs
hlt
jge
and
lods
orl
outsl
xchg
sub
mov
loope
iret
pop
and
xor
outsb
pop
mov
add
arpl
jbe
lret
arpl
push
or
repnz
fsub
dec
xchg
sub
jnp
mov
pop
xchg
lret
outsl
dec
bound
inc
adcb
fsubrl
cmp
xchg
push
popa
and
xchg
pop
test
idivb
lret
lahf
mov
sahf
mov
pop
rcll
mov
repnz
jae
xor
int
or
xor
mov
out
mov
push
inc
ss
repnz
jle
loope
add
xchg
mov
push
mov
push
loope
test
into
cmp
pop
cmp
sub
inc
enter
xor
push
inc
mov
sub
sub
notb
mov
dec
or
or
inc
ret
mov
out
sahf
cmpsb
push
pop
int
insl
das
adc
mov
movsl
mov
in
pop
movsb
popa
into
pop
inc
mov
adc
mov
sub
dec
xor
aaa
mov
or
xchg
cmp
lods
gs
jecxz
movsb
test
jle
dec
cmpsl
testb
mov
jle
push
dec
fwait
icebp
inc
adc
jp
xor
pop
dec
add
jnp
imul
test
in
adc
outsl
sub
adc
popf
sbb
push
bnd
mov
out
mov
xor
mov
std
or
adc
push
arpl
fs
call
stos
insb
imul
loope
mov
cmp
les
popa
insb
xor
push
cld
scas
cs
add
imul
cmp
or
mov
mov
icebp
in
and
pop
sub
pop
addb
mov
inc
stos
rcrl
mov
cmp
jnp
sbb
cmp
adc
popa
inc
cmp
aam
cmp
sbb
cmp
ja
fnsave
xchg
insb
xor
int3
lods
inc
bound
mov
clc
xor
dec
sarl
cmpsb
xchg
adc
mov
outsl
int3
xchg
out
push
enter
add
sbbb
push
mov
xor
xor
pop
xor
inc
mov
xor
inc
lock
dec
mov
addb
dec
rcrl
and
sub
std
fidivl
inc
jp
mov
lahf
rcrl
pop
fisttps
shrl
pop
pushf
mov
icebp
mov
test
mov
hlt
sub
rolb
dec
mov
sub
inc
adc
cmp
lods
mov
pop
or
gs
rolb
inc
sbb
and
aaa
fs
cmp
fldl
sub
pop
int
sub
sete
movsl
ljmp
xor
popf
fs
fwait
jae
insl
jae
jmp
jge
popa
jo
mov
push
lret
push
mov
xchg
shll
jl
sub
dec
movsw
stos
inc
ss
iret
inc
fisubrl
jnp
mov
push
daa
clc
inc
inc
ret
push
shrl
in
ret
fdivr
cltd
jae
mov
dec
fwait
je
xor
imul
push
jb
cmp
rclb
rol
add
cmp
or
jae
mov
inc
add
mov
sarl
icebp
jnp
mov
mov
mov
dec
dec
scas
add
and
shrd
les
pop
out
xor
popf
mov
cmp
in
xchg
push
dec
jg
lgs
sbb
or
popf
mov
push
xor
dec
xor
test
inc
out
mov
and
add
sub
scas
mov
or
add
jne
xchg
into
push
jmp
ss
mov
xor
mov
pop
negb
push
sub
push
push
or
bound
aas
jge
mov
movsl
les
cltd
xchg
lods
imul
es
loope
test
loope
adc
dec
or
mov
icebp
jnp
sbb
or
repz
adc
idivb
sahf
repnz
test
sbb
repnz
mov
add
push
push
jno
insl
std
mov
mov
dec
inc
outsb
fwait
dec
jge
push
nop
jo
xchg
outsl
dec
push
mov
cmp
xor
and
mov
sbb
aas
pop
mov
and
add
and
dec
fucom
pop
in
shr
je
int3
mov
outsl
jle
mov
cmpsb
ss
cmp
test
test
movsl
sbb
inc
ss
and
add
sahf
cmc
sub
in
or
xor
inc
mov
decb
repnz
movsl
jae
cmc
cmpsl
call
jge
insl
les
imul
jle
imul
cwtl
mov
rcrl
jae
pop
dec
pop
pushf
and
xor
adc
xchg
sti
shl
adc
lcall
dec
stos
sbb
pop
pop
and
ja
xchg
popf
mov
jae
mov
push
push
aaa
mov
inc
or
cmpb
bound
cmpsl
xor
xchg
xor
xchg
les
aaa
xor
pop
lret
sub
or
pop
jb
and
gs
adc
inc
xchg
add
cmp
inc
aam
push
enter
cmp
dec
mov
add
ret
mov
sub
jg
mov
mov
push
test
int
push
push
insl
add
lret
xor
mov
pop
int
add
popa
mov
xor
std
push
push
addl
in
push
out
pop
inc
jbe
std
mov
repnz
adc
mov
ljmp
dec
push
out
add
aaa
icebp
adc
inc
and
xor
aad
addl
mov
mov
inc
pusha
pop
add
stc
pop
shll
cmp
enter
and
mov
mov
lods
or
mov
lock
push
imull
hlt
jmp
add
insl
mov
mov
mov
test
ljmp
les
scas
aad
jae
movsl
xor
movsb
movsl
push
jae
insl
fs
sub
dec
fdivp
sbb
scas
push
pop
push
test
sbb
cmp
ret
les
addr16
mov
dec
xchg
xor
cmp
adc
aas
push
les
or
inc
out
xor
popa
adc
inc
dec
xor
jge
aam
in
hlt
lret
bound
push
dec
clc
dec
hlt
sub
shl
ret
pop
sbbb
arpl
sub
subb
xor
shrb
mov
pop
out
add
mov
xchg
arpl
mov
jnp
stos
sub
repnz
push
mov
xchg
cmp
cli
add
jno
aam
cmpl
lahf
jl
fs
jp
test
les
popf
jl
data16
mov
pop
push
fucom
xchg
aad
xchg
aam
lcall
and
cltd
in
and
push
ja
scas
mov
mov
das
mov
pop
add
mov
cmpl
mov
jmp
outsl
mov
test
push
shrb
pop
or
sub
xor
or
aas
mov
inc
outsl
cmpsb
xchg
dec
cmp
mov
pop
sub
cmp
outsb
cmp
dec
cmp
or
push
out
inc
das
inc
jg
jbe
enter
cmp
jmp
jmp
fmull
flds
jge
cltd
lods
aad
adc
jo
push
lods
out
push
mov
xchg
iret
add
cwtl
popa
xor
fcom
dec
pop
xor
pop
mov
xchg
hlt
int
xor
cwtl
cmp
pop
pop
mov
out
push
cs
dec
sub
sbb
mov
push
gs
mov
rcl
into
repnz
pop
lret
cmp
mov
in
data16
loope
movsb
les
ja
push
cmc
andl
imul
addl
push
ljmp
test
fnstenv
sub
aad
adc
js
dec
mov
aam
outsb
jmp
push
lret
insl
xchg
xor
sub
mov
out
inc
and
addr16
jmp
mov
inc
inc
addr16
nop
xor
or
repnz
int3
iret
jbe
in
subl
imul
cld
cmp
dec
sub
and
jno
daa
pop
int3
aaa
les
dec
ja
xchg
popf
adc
dec
insl
and
in
sub
lock
mov
sahf
repnz
sub
jg
mov
sub
xor
dec
push
jg
rcll
insb
inc
sub
sbb
shll
add
scas
in
jno
mov
sbb
stos
mov
add
xor
push
xor
dec
mov
add
sbb
mov
jl
fsubl
sbb
xchg
ffree
in
nop
mov
dec
ss
outsb
dec
roll
rorl
and
and
test
mov
cmp
out
inc
add
adc
pop
adc
or
cmp
movsb
and
dec
or
and
inc
andb
jmp
mov
inc
xchg
dec
sti
adc
xchg
adc
inc
scas
inc
repz
xor
inc
roll
or
ja
addl
mov
sahf
test
faddp
adc
and
int
addr16
cmp
and
xchg
push
sbb
pop
xor
cmp
mov
cld
inc
and
mull
mov
inc
pop
jno
xor
sbb
insl
test
inc
outsb
insl
aad
gs
inc
xchg
in
dec
xchg
sbbl
pop
pop
in
nop
pop
add
mov
add
jecxz
and
inc
cltd
mov
xor
shlb
or
out
adc
jp
int
ss
sub
add
rcrl
popf
inc
xchg
js
jmp
addr16
or
and
imul
in
or
jae
inc
jmp
jnp
outsb
mov
adc
push
movsb
insl
adc
inc
push
movsl
scas
les
jg
mov
and
and
push
add
sbb
mov
mov
pushf
xor
add
rolb
lcall
loope
inc
addb
pop
pop
sub
das
sbb
movsb
cmp
xchg
dec
lods
and
into
dec
shlb
incl
in
cmpb
je
in
mov
xor
scas
js
adc
inc
mov
loope
pop
cmp
insl
or
inc
lock
les
rcr
and
push
dec
aaa
fdiv
imul
popf
jno
mov
sub
jp
insl
xchg
enter
cmpsb
sub
cld
in
mov
push
out
pop
popa
mov
test
cmp
pop
icebp
mov
test
push
scas
or
jp
loop
lahf
sar
ja
icebp
dec
jmp
dec
stc
rcrb
cmp
mov
push
push
loopne
pop
cmpsb
inc
popa
ljmp
and
mov
idiv
repnz
negl
iret
and
inc
and
push
cs
flds
sub
jno
enter
stc
mov
mov
dec
cmp
loopne
jns
les
jl
ror
andb
xor
insb
lods
dec
imulb
sub
sub
inc
mov
jle
sub
arpl
cmp
add
sbb
and
add
popf
xchg
push
lahf
popa
dec
add
scas
sahf
xor
popa
mov
jge
lods
and
fldcw
push
imul
inc
imul
jle
sub
daa
fstps
out
es
scas
outsl
je
xor
push
aaa
fucom
test
rcrb
subl
sbbl
shrb
mov
mov
arpl
dec
ss
push
sub
mov
outsb
fsubrs
jne
fsubrs
aaa
repnz
or
leave
roll
xchg
sub
insl
or
out
subl
adc
push
stos
adc
add
dec
int
sub
ja
pop
and
bound
idivl
xchg
sbb
gs
fwait
cmp
cmp
push
loop
fstp
dec
sti
add
addr16
xor
dec
es
inc
or
sub
mov
int
or
out
or
andb
lods
cmp
or
mov
or
aam
popf
sbb
xor
or
push
mov
je
or
xor
fs
inc
xor
imulb
mov
push
mov
rcrb
stos
icebp
sub
fldl
ffreep
jg
shl
fstp
jecxz
pop
add
dec
xor
sbb
sahf
popa
xchg
cmp
inc
xchg
loope
cmp
cmpb
ror
fstps
sbb
inc
mov
mov
ss
sub
mov
jb
sub
or
inc
xor
fld
mov
imul
js
lret
inc
push
add
aaa
gs
outsb
inc
dec
xchg
loop
push
dec
push
les
data16
imul
sub
ss
enter
or
bound
inc
les
fcom
adc
das
shll
int
pop
cmp
aas
jno
enter
push
fxch
push
mov
les
setno
shr
jno
dec
inc
sub
imul
in
jb
pop
and
icebp
xor
inc
bound
pusha
or
aaa
jns
add
jge
add
mov
sbb
push
les
leavew
fistpll
test
and
jbe
movsl
cwtl
imul
xchg
mov
or
sbb
push
or
jae
jle
dec
adcl
xor
inc
fdivrl
mov
sti
add
int
push
adc
sub
dec
push
test
dec
or
idiv
cmp
shll
pop
add
aad
push
jne
rolb
cld
aas
clc
fstl
adc
es
les
add
out
pop
fdivl
lret
sbb
out
dec
pop
pop
cmp
in
mov
addr16
or
xchg
mov
rorb
xchg
push
filds
smsw
insl
xor
jno
jnp
push
push
cmp
sahf
dec
xchg
mov
loop
add
loop
sub
ljmp
call
loope
loope
ljmp
add
fsubl
lcall
fcom
loope
cmp
inc
xor
or
add
stos
fstpl
iret
xchg
mov
mov
out
add
bnd
inc
push
fs
ret
and
sbb
cmp
pop
pop
dec
jg
ss
or
mov
mov
mov
jne
stc
adc
popa
mov
mov
stos
mov
push
imul
jmp
mov
and
or
adc
jmp
cmpsb
imul
xchg
mov
lods
fucomip
cmp
xchg
mov
subb
push
repz
jns
dec
divb
jns
mov
pop
jge
addr16
dec
test
into
jmp
js
popa
cmp
daa
icebp
aam
push
fdivr
das
out
xchg
aad
movsb
lret
in
test
cld
int3
sub
aad
imul
cmc
repz
push
or
dec
xchg
repnz
inc
insl
push
je
imul
aad
ss
sbb
stos
dec
lods
inc
std
insb
std
and
push
mov
icebp
mov
shll
or
jbe
adc
sub
aam
test
in
xor
das
xor
jb
int3
notb
sarl
inc
sub
les
hlt
cmpsl
outsb
lea
jge
repnz
orps
or
cltd
test
mov
movsl
in
xor
rorb
jae
cmp
and
mov
or
jae
ss
mov
aaa
mov
shl
andl
pusha
xchg
lret
repnz
enter
gs
les
cmp
add
stos
popf
cmp
add
adc
mov
dec
xor
jns
mov
iret
out
repnz
icebp
inc
xabort
xor
sahf
xor
in
popa
lea
and
jae
into
loop
xchg
inc
popa
push
outsl
addb
or
test
adc
mov
pop
in
add
gs
cmp
out
es
adc
pop
jmp
xor
lods
gs
cmp
xchg
or
repnz
data16
stos
jle
mov
sub
mov
iret
cmpsb
loope
mulb
xchg
repz
outsb
movsl
cld
mov
stos
dec
adc
jo
mov
stos
push
push
push
pushf
jns
jo
je
cmc
pop
xor
jmp
mov
xchg
loopne
jnp
inc
sbb
push
or
mov
lcall
pushf
jmp
inc
adc
inc
mov
jl
mov
xor
je
or
and
mov
cmp
push
push
pop
add
dec
in
hlt
gs
sbb
loope
addl
fs
rcl
imul
xor
in
dec
popa
ljmp
fdecstp
in
enter
cld
lret
inc
stos
icebp
cmp
shll
mov
aad
pop
in
push
dec
rdmsr
ljmp
cmpsl
test
cwtl
out
xchg
xor
jp
or
ror
cmpb
arpl
inc
xor
add
mov
mov
aam
outsb
jecxz
mov
mov
mov
mov
es
lea
mov
inc
sub
shl
and
shll
inc
pop
cmove
aad
sahf
sarl
sub
clc
movb
sub
loopne
pop
and
popa
xchg
pop
sub
pop
inc
push
lret
lahf
xor
sub
mov
inc
shrb
sub
and
mov
adc
ret
jl
inc
mov
gs
jle
mov
mov
ss
add
push
outsb
cltd
sahf
imul
enter
test
outsb
leave
imul
arpl
fnstsw
xchg
lods
arpl
movsl
int
push
push
rcrb
repz
dec
mov
mov
clc
aam
pop
mov
inc
sub
jp
data16
bound
dec
rol
mov
and
dec
outsl
pop
mulb
push
mov
leave
cmpsl
nop
mov
into
enter
cmc
movsb
push
int
neg
pop
loope
mov
mov
push
enter
aaa
in
fsubrl
push
aad
xor
mov
dec
dec
sbb
and
pop
sbb
icebp
bound
popf
fdiv
push
lret
lret
mov
mov
pop
or
inc
imul
pop
cs
mov
mov
xor
lcall
jge
movsb
adc
sbb
pop
mov
dec
fwait
divb
or
mov
addr16
loope
testb
cmp
pop
pop
lods
roll
sub
jno
ret
adc
adc
jge
test
jge
pop
rcrb
inc
clc
dec
addr16
dec
mov
jbe
inc
cs
das
and
jl
adc
in
adcl
lods
dec
mov
xor
repz
pop
inc
pushf
repnz
cmp
lret
and
inc
test
fcmovb
fdivl
xchg
jbe
fstps
je
nop
frstor
dec
loope
in
cwtl
mov
push
rorl
sbb
popf
fsubr
gs
mov
dec
jo
mov
jns
lcall
test
xor
adc
aam
vpmulhuw
dec
jbe
sub
mov
aad
adc
imul
mov
je
push
mov
mov
mov
iret
gs
test
inc
jle
mov
dec
mov
test
mov
cmp
fs
lcall
aam
xor
xor
xor
popa
inc
les
jbe
loope
fstpl
adc
xor
xchg
xor
mov
rcr
jnp
mov
mov
xor
or
or
mov
orl
sbb
and
inc
adc
or
push
sub
add
mov
jmp
sub
out
mov
or
arpl
testl
movsl
shll
lret
icebp
cmp
push
out
push
int
push
cmp
sti
and
inc
dec
rcll
xchg
shrl
repz
push
inc
ss
xor
arpl
mov
aaa
xor
sub
push
xchg
fisubrs
testb
mov
adc
movsl
xlat
inc
cmpsb
pop
iret
jnp
push
iret
mov
mov
inc
into
nop
cmp
scas
jg
cmpsb
cmpl
cmp
std
mov
and
mov
push
shlb
stos
mov
outsb
xor
cmp
pop
ljmp
push
push
xchg
test
bound
shll
jmp
loope
jl
dec
shll
dec
push
jle
cmp
push
mov
jecxz
rorb
icebp
insb
in
mov
push
xor
cli
dec
and
sub
fldenv
imul
xchg
or
stos
ffreep
or
pop
adc
xor
int
shrb
andl
mov
pushf
jbe
enter
into
xor
repnz
push
cmp
adcl
loope
and
inc
clc
popf
jmp
testl
cmpsb
sub
dec
mov
icebp
mov
and
stos
jns
sub
push
and
or
or
mov
roll
mov
shlb
mov
xchg
scas
jnp
mov
adc
jg
dec
mov
or
jecxz
jg
push
add
bound
jbe
push
pop
inc
pop
cmp
enter
notb
cmp
xchg
cltd
inc
and
movsb
inc
das
pop
xchg
inc
cmp
inc
inc
xor
pusha
andb
popa
inc
inc
push
mov
jecxz
xor
and
mov
mov
push
push
call
push
sub
int3
jno
fs
repnz
addr16
sarl
add
ffree
jecxz
cmp
inc
xor
data16
shrl
lds
mov
sarb
inc
gs
leave
movsb
js
imul
clc
enter
xor
test
icebp
sbbb
xchg
add
add
fidivrl
and
add
push
push
fcoml
pop
dec
imul
repnz
in
mov
loope
aaa
inc
jle
inc
test
or
push
call
es
sbb
ret
imul
jmp
jo
mov
filds
and
inc
and
inc
and
xchg
push
mov
jbe
xor
xchg
xchg
ror
aaa
or
pop
ret
mov
add
jae
adc
dec
jb
test
aas
in
jp
popa
lret
jl
jmp
je
inc
jbe
outsl
test
ret
sbb
xchg
mov
fcoml
scas
mov
fiaddl
inc
mov
sub
or
xor
pop
mov
movsl
cmp
out
jns
inc
mov
push
imul
imul
cmp
dec
sahf
loope
xor
inc
add
sbb
test
fcoml
xchg
cmp
popa
sahf
movsl
shll
shlb
loope
sahf
mov
xor
adc
push
lret
add
out
push
jle
jecxz
mov
insb
fdivrl
pop
jp
mov
dec
ds
xor
jnp
movsb
xchg
ds
dec
dec
gs
mov
push
dec
xor
or
jmp
adc
test
mov
or
repnz
sbb
xlat
push
std
lock
dec
dec
mov
inc
ljmp
inc
jecxz
lcall
stos
pop
lret
xorb
enter
sub
stos
pop
cmp
push
or
stos
sub
xadd
xor
in
push
sub
jns
mov
xchg
ss
xor
jp
xchg
pop
push
imul
aad
out
mov
mov
pop
mov
arpl
les
dec
xor
inc
shl
jo
add
pop
sbb
das
imulb
add
outsl
jb
dec
push
stos
push
sti
adc
fcoml
push
push
cmpsb
rcrb
stos
xchg
int
out
mov
mov
mov
fidivrs
insb
mov
ret
ja
cli
mov
pop
into
jmp
cli
adc
or
lods
aad
jmp
mov
sub
out
dec
push
andl
mov
outsl
scas
jge
inc
cld
and
xor
hlt
sbb
repnz
ret
jecxz
jle
add
and
push
xchg
add
mov
mov
imul
jle
mov
pop
push
cmpsb
arpl
std
pop
cwtl
or
sub
sbb
mov
imul
dec
arpl
jle
adc
and
ret
xor
sbb
stos
sbb
jb
adc
add
lods
pop
sahf
gs
jle
gs
daa
jmp
pop
adc
pop
and
mov
mov
mov
jno
in
nop
mov
xchg
sbb
bound
and
cmp
sahf
mov
int
movsl
add
xchg
int
adc
mov
cmp
addr16
and
imul
lds
in
outsb
xchg
mov
arpl
aaa
jmp
lods
sub
imul
loope
in
jne
jb
mov
sbb
xchg
sub
push
mov
adc
lret
out
mov
xchg
aaa
pushf
popa
dec
enter
or
mov
lret
mov
sbb
adcl
outsb
fsubrl
pop
repnz
fs
jbe
out
loope
ss
sub
jl
pop
aas
fcmovbe
xlat
sahf
xchg
orl
arpl
sbb
jb
inc
imul
cmc
inc
sub
push
sti
cmp
mov
pop
in
ja
pop
shlb
inc
jb
inc
leave
inc
add
mov
aaa
hlt
imul
xor
mov
xchg
leave
inc
inc
jmp
popa
push
mov
ja
cmp
mov
cmp
add
jb
cmp
push
stos
pop
pop
loop
sub
fcomip
mov
pop
imulb
adc
shrb
cld
call
xor
pcmpeqw
sti
es
mov
pop
sbb
and
cmp
dec
xorb
mov
jp
in
out
ret
lds
imul
inc
push
mov
sbb
cmp
les
push
jge
add
sub
mov
inc
cmp
fcmovu
push
sub
insl
fwait
pop
mov
stos
inc
fisttpll
mov
or
jp
push
push
popa
cltd
cmp
jecxz
dec
rclb
ficoml
sub
xchg
cmp
dec
in
jno
ret
in
and
and
jo
lods
or
xor
and
fmull
pop
and
and
mov
lahf
xchg
cmp
les
mov
dec
int
out
xor
loop
mov
dec
fldcw
lret
pop
fmuls
cmpb
cwtl
and
ret
pop
shlb
call
pop
mov
test
dec
mov
in
loope
std
fcmovne
mov
sub
push
je
loop
inc
ret
inc
aad
jo
lods
add
mov
cmp
shrb
popw
and
lds
jle
aam
push
pop
jg
add
mov
fidivs
jmp
frstor
bswap
decl
out
xor
inc
or
in
dec
jmp
adc
xor
mov
cmpb
frstor
mov
enter
dec
outsb
les
in
push
jle
test
jne
aas
add
out
cmp
fidivrs
lahf
in
shlb
fsub
xlat
or
mov
loop
xor
push
das
outsb
test
push
test
sarb
jle
repnz
or
inc
mov
adc
inc
push
test
aaa
sub
lahf
lret
pusha
fnstsw
add
gs
and
jl
outsb
addr16
dec
ret
mov
xchg
cmp
ss
mov
add
mov
xor
jmp
mov
sub
imul
imul
js
cmpsl
loop
mov
push
xchg
in
ja
pop
cld
cmp
daa
shrl
orb
addb
pop
mov
sub
cmp
sub
xor
js
cltd
les
insb
adc
or
inc
jno
dec
dec
push
enter
ret
and
daa
and
addb
js
mov
sbb
in
adc
mov
daa
sub
pop
cmp
adc
xchg
adc
mov
inc
inc
or
xor
out
mov
pop
jecxz
mov
push
push
cs
sub
enter
pushf
jne
ds
jle
loope,pn
jp
inc
adc
sub
sub
loope
jnp
pop
and
push
xor
xor
out
sub
and
sub
loop
into
sahf
sub
cmp
and
jbe
outsb
test
sbb
xor
gs
test
roll
xor
es
addb
jbe
xor
push
lret
sbb
xchg
mov
aad
popa
mov
gs
and
push
dec
mov
pop
cltd
push
dec
adc
std
sbb
clc
mov
stos
jo
fnsave
ret
je
insl
push
aam
jge
mov
inc
arpl
jnp
xchg
mov
sbb
popa
cmpl
push
inc
lcall
mov
jp
inc
lods
adc
sbbb
mov
cltd
lds
lcall
cmp
or
or
sub
mov
pop
cs
int3
sub
inc
shlb
pop
xchg
mov
dec
inc
shr
adc
xchg
dec
rdtsc
cmp
and
push
push
adc
dec
inc
xor
push
rcpps
nop
inc
cmpsl
shlb
mov
sub
xor
xchg
sbb
mov
xor
out
shufps
lret
pop
loope
inc
sbb
daa
xor
into
stos
add
ljmp
lret
lds
jl
mov
jnp
dec
sahf
leave
and
or
mov
mov
pop
insl
cli
adc
pushf
in
xchg
xlat
jmp
rcrb
push
jns
rorl
push
into
sub
adc
cwtl
imul
jl
dec
stos
sarb
adc
push
cmp
mov
sbb
mov
jl
jge
sahf
rcl
lods
mov
fdivs
dec
int
push
lea
sub
xor
xchg
or
jle
rorb
mov
xor
in
mov
cmp
loope
mov
movsl
dec
int
popa
in
mov
cmc
enter
in
and
outsl
repz
mov
pusha
repnz
jge
jge
fbld
orb
add
in
mov
sub
mov
sbb
cltd
ret
xchg
jp
fs
sbb
mov
mov
js
arpl
inc
mov
sahf
in
lret
push
xchg
inc
in
leave
ds
or
push
mov
scas
stos
ret
xchg
pop
fwait
push
popf
arpl
dec
sub
jmp
mov
call
daa
pop
mov
fs
push
repnz
bound
push
inc
inc
fnstsw
fnop
outsl
add
mov
or
xor
lock
inc
dec
sub
test
jg
jno
rcl
mov
jecxz
pop
sahf
mov
bound
repz
sbb
push
or
mov
mov
xchg
and
mov
xchg
pop
cmpsb
rol
lock
inc
sbb
aaa
inc
lahf
mov
push
negb
mov
pop
xor
mov
mov
stos
pop
and
xor
movsl
dec
fs
mov
inc
jne
add
in
xor
and
jl
rorl
test
pop
or
sbb
sub
xor
imul
push
xchg
adcl
sbb
shll
jg
imul
mov
xor
cmp
mov
lds
dec
lods
loopne
movl
int
std
enter
cwtl
jnp
jge
das
sbb
jae
cmp
inc
les
sar
mov
or
add
inc
les
jae
outsb
cmp
aam
aam
ja
mov
push
out
imul
fs
mov
je
les
xchg
inc
fstpt
or
pop
loope
lea
fs
mov
rcll
cmp
in
mov
les
iret
jmp
testl
addr16
loope
data16
adc
cmp
cmc
ror
sbb
push
inc
test
jae
stos
cmp
pop
insl
daa
xchg
add
jmp
and
outsb
testl
lret
insb
ret
xor
xor
pusha
bound
or
cmp
mov
push
aad
push
jae
mov
test
jecxz
es
imul
ja
lea
ja
popa
leave
and
cs
inc
addr16
xor
add
and
fisubs
mov
mov
bound
mov
push
add
and
inc
mov
sbb
or
cwtl
aad
iret
lret
jne
rcpps
dec
jle
mov
xchg
dec
sbb
cli
addr16
adc
lods
imul
inc
das
cwtl
cmp
icebp
cmp
lods
test
lods
jnp
flds
inc
test
mov
xorb
aad
dec
cmp
push
xchg
ffreep
pop
mov
inc
mov
into
movsl
cmpsb
mov
movsl
std
sbbl
pop
mov
nop
xchg
inc
loope
test
push
popa
mov
inc
sbbb
ja
out
aam
push
adc
and
inc
sub
mov
fbstp
xchg
fsubl
push
sub
add
inc
sahf
dec
std
lcall
out
popf
subl
jbe
add
adc
test
mov
jnp
outsl
dec
aad
lahf
in
push
test
dec
icebp
dec
loope
xor
daa
inc
jp
cwtl
or
jecxz
bound
fists
cmp
sub
dec
xor
inc
mov
and
pop
sbb
daa
inc
leave
inc
xor
scas
mov
adc
mov
roll
sbb
testb
stc
pop
jg
imul
fisttpll
jecxz
outsb
je
lock
int
xor
cmc
les
icebp
jp
inc
sbb
xlat
mov
push
loop
popa
xor
push
xor
pop
shlb
jecxz
xor
stos
and
xor
rolb
push
push
bnd
dec
jno
cld
mov
ja
push
push
inc
rcrl
add
in
fcoms
mov
ret
mov
mulb
mov
data16
inc
les
xchg
jg
shrb
nop
mov
fisubrl
mov
outsl
leave
dec
add
and
addr16
jb
jae
xchg
imul
imul
fistps
pop
cmp
cmpsl
loope
es
push
ss
xor
aad
mov
jne
std
popa
adc
mov
mov
ret
jp
les
lcall
insl
and
rcrb
add
aad
fs
data16
pop
mov
xchg
mov
daa
loope
ss
or
daa
or
jbe
xchg
repz
dec
jae
stos
inc
addr16
lea
xor
popa
loope
les
adc
mov
add
lods
inc
dec
mov
sub
sub
addr16
dec
push
aam
lret
mov
jecxz
inc
dec
jb
das
aam
loopne
dec
xchg
stos
bound
movsl
dec
mov
pop
subb
jp
cltd
in
mov
push
mov
stc
inc
jg
cmp
mov
inc
gs
fmuls
mov
adc
jmp
dec
das
jb
mov
push
aaa
aad
mov
sti
jl
xor
aad
in
iret
int
dec
imull
mov
aad
add
lahf
mov
inc
pushf
xlat
push
icebp
jg
push
dec
hlt
dec
cwtl
int3
inc
dec
movsb
jb
xor
imul
sub
popa
leave
mov
lock
push
cwtl
adc
test
jl
iret
test
inc
test
xor
sub
sub
leave
dec
cmp
dec
push
pop
inc
sti
xor
fdivl
lret
push
jle
fidivrl
adc
in
sub
outsb
fildl
pop
add
inc
mov
add
flds
mov
testl
mov
push
hlt
dec
lahf
lcall
les
mov
inc
inc
sub
push
arpl
xchg
cmpsb
push
pop
subb
gs
lahf
jbe
rcrb
notl
dec
mov
inc
xor
jae,pn
icebp
xchg
xor
cmpsb
insb
stos
gs
sub
sahf
mov
push
in
mov
lahf
mov
aam
dec
add
push
imulb
sub
sub
xchg
push
aaa
lods
xchg
icebp
icebp
jb
adcl
pop
outsb
xor
icebp
data16
add
cwtl
sbb
inc
loope
out
popa
adc
cmp
sbb
mov
dec
shrl
mov
insl
xchg
stc
fisubrl
xorb
aam
xchg
mov
aad
aam
dec
rcrb
adc
mov
jle
dec
pop
aaa
js
daa
pop
inc
test
pop
out
test
outsb
shll
sub
dec
fcompl
mov
sbbl
arpl
popa
xor
loope
mov
pop
stos
mov
lods
stos
inc
inc
cltd
das
push
jbe
add
or
aad
mov
imul
int
mov
jmp
cmp
jp
inc
cld
roll
inc
shlb
or
mov
test
incl
cmp
lret
push
jl
sbb
mov
dec
ss
mov
icebp
jae
in
sub
aaa
dec
testb
sbb
imul
rol
adc
lret
mov
fldenv
out
rcrl
xor
xchg
in
adc
mov
insb
arpl
dec
push
push
and
and
pop
xchg
jno
push
rcll
xor
push
sbb
mov
lahf
loop
imul
subl
jecxz
in
push
rcll
jge
push
bound
jg
push
mov
mov
jb
mov
aas
dec
xor
jmp
clc
adc
jb
test
xor
in
cmc
pop
xor
sti
addr16
inc
js
pop
jecxz
sub
divb
and
push
sub
mov
mov
inc
xchg
fcomps
mov
push
imul
and
xor
repnz
pop
xlat
adc
shll
movsb
cmpsl
jl
out
jno
inc
sub
sub
daa
dec
push
sub
dec
ss
xor
std
repnz
add
xor
dec
and
sub
cmp
addl
es
dec
mov
loop
adc
cld
sub
and
das
test
push
cmpsb
es
addr16
dec
enter
dec
je
sbb
sbb
xor
ret
sti
out
inc
sub
push
cltd
test
inc
adc
mov
mov
push
notb
fldt
roll
sub
lahf
xor
int
ret
cmp
bound
repnz
adc
addr16
jmp
repz
xchg
enter
dec
jbe
sbb
xchg
js
testb
xchg
pop
dec
fs
ss
push
sbb
inc
dec
and
cs
je
aaa
ret
lret
pop
test
das
repz
pop
push
xchg
inc
lahf
das
mov
xchg
or
mov
push
inc
mov
outsl
std
xchg
xchg
sbb
leave
sbb
fistps
and
fdivs
mov
imull
jae
movsl
sub
nop
mov
jle
push
inc
jge
stos
repnz
loope
cmp
sbb
dec
inc
out
and
or
push
das
andl
pop
aas
hlt
and
mov
jbe
mov
ja
pop
cmp
cmp
pop
mov
arpl
cmp
test
cmpsb
xchg
das
lods
xchg
aam
xor
dec
inc
push
inc
popf
mov
test
arpl
gs
addr16
sbb
cmp
fsts
movsb
xor
in
enter
and
xor
cmp
mov
pop
lods
insb
xor
push
bound
in
inc
test
subb
lea
imul
mul
and
or
pushf
jo
arpl
incl
sarb
sub
add
xchg
adc
lcall
sub
push
inc
jl
jmp
addr16
sub
jae
inc
mov
dec
test
adc
xor
and
and
mov
es
loop
jle
and
pusha
sub
cmp
addr16
inc
cmpsl
ss
std
bound
leave
movsl
mov
jge
call
cmp
out
fldt
cmp
cwtl
popa
lds
out
mov
popf
sbb
jp
gs
loopne
mov
dec
push
jne
movsl
push
dec
and
shlb
bound
cmpsl
inc
mov
sub
or
and
adc
mov
pop
or
in
dec
and
push
rcll
cmp
sub
das
mov
adc
inc
test
test
fcoml
outsl
cmp
loopne
sbb
cld
push
and
push
test
cltd
sahf
popa
cmp
cmpl
cmp
ss
pop
es
pop
add
dec
movsb
lret
pop
pop
push
test
inc
shll
aad
out
sub
jl
dec
and
ja
mov
push
sub
inc
push
jne
cmp
adc
dec
dec
inc
inc
sbb
pop
scas
sub
rolb
push
gs
bound
dec
and
cmp
adc
inc
dec
fnstenv
or
sub
test
loop
sub
sbb
addr16
dec
jno
sub
and
shr
jge
mov
ret
inc
inc
mov
push
push
subb
mov
ds
insl
xchg
mov
mov
fadds
mov
inc
and
lcall
pop
bound
jmp
psraw
sbb
lahf
dec
int
pop
inc
and
sbb
or
jp
inc
out
and
sahf
orl
pop
lods
mov
out
dec
dec
shl
sub
stc
push
jb
jmp
das
les
int3
ljmp
jae
imul
bound
push
and
mov
xor
dec
push
or
imul
and
sub
mov
and
jge
inc
mov
push
lea
inc
inc
rcrb
inc
data16
lret
jno
ss
int
in
jbe
negl
leave
push
mov
push
inc
mov
mov
jo
dec
add
nop
push
arpl
imul
inc
enter
xchg
sarl
jo
lock
aam
push
push
cmp
push
push
and
jae
gs
push
dec
dec
cmp
jp
rcll
shr
repnz
pop
jne
je
arpl
mov
jmp
pop
mov
inc
push
outsb
iret
test
dec
je
push
inc
inc
mov
dec
subb
mov
in
enter
fidivl
cld
cmpsb
cmp
lahf
push
jecxz
mov
subl
loope
sub
or
rolb
fisubrl
stc
push
mov
adc
test
or
ljmp
mov
ss
addl
and
inc
in
pop
inc
stc
mov
xor
inc
lea
sub
dec
dec
lret
jmp
int3
pop
mov
or
jp
dec
jmp
lods
lods
xchg
fwait
dec
popa
lods
inc
push
mov
xchg
mov
or
mov
jns
cmpsb
pop
fldl
imul
adc
jecxz
arpl
arpl
test
movsb
inc
adc
sub
and
xchg
sbb
das
inc
shll
fisttpl
lea
pop
jbe
insl
jle
sub
cmp
cld
cmp
arpl
shll
out
pop
bound
pop
dec
xor
imul
xchg
test
sub
aam
mov
popa
subl
or
or
mov
lret
xor
pop
fisttps
dec
jae
mov
xor
fisttpll
test
pop
adc
jns
mov
sub
push
aam
daa
ret
pop
fidivl
xor
fists
jns
cmp
push
xor
or
pop
inc
jmp
push
jno
inc
add
mov
xchg
push
xchg
xor
push
and
or
adc
test
subl
popf
push
sub
aaa
adc
cmpsb
pop
loope
inc
rcrb
and
adcb
outsl
and
sbb
sub
pusha
sub
lds
jno
inc
in
sbb
lods
jmp
scas
dec
jno
jge
lds
inc
sub
daa
mov
lds
test
pop
ret
xor
pop
push
mov
idivl
xor
cmp
add
cmp
xor
xchg
and
xor
loope
jg
les
xor
add
gs
sbb
push
push
hlt
in
pop
and
pushf
mov
and
sub
int
pop
imul
test
int3
orl
enter
pop
push
adc
xor
xchg
fmul
adc
shrl
push
pushf
xchg
lock
xor
popa
das
out
inc
ss
arpl
xchg
sbbl
in
push
ret
pop
imul
popa
test
xor
jge
ljmp
call
lea
xchg
ss
xor
xor
dec
push
mov
jb
repnz
jne
jae
jae
mov
sbb
lea
sahf
dec
inc
adc
imul
and
cmove
dec
xlat
imul
repnz
sbb
jl
imul
mov
push
sub
xor
mov
xor
dec
mov
push
mov
sub
icebp
mov
jae
sbb
push
movsw
les
sbb
mov
xchg
and
in
dec
inc
test
leave
je
ljmp
cs
mov
daa
inc
enter
sub
mov
add
jg
cmp
icebp
mov
mov
sahf
xchg
pusha
cli
call
xchg
sub
icebp
idivb
pop
xor
movsb
sti
push
fldl
sbb
jl
ljmp
pop
pop
xlat
hlt
mov
es
jne
fstpl
xor
push
or
ja
test
adc
add
repnz
sbb
sbb
outsb
rorb
pop
dec
notl
mov
daa
out
xor
and
lods
jno
test
push
cwtl
or
lahf
popa
mov
lcall
dec
mov
repnz
dec
mov
ljmp
jns
dec
rclb
mov
push
int
lret
lods
imul
testb
hlt
add
hlt
popa
dec
sbb
or
sub
pop
push
inc
mov
mov
inc
mov
cmc
mov
mov
or
jb
imul
xor
imul
cmc
leave
popa
fs
and
mov
mov
imul
rclb
mov
push
sub
mov
scas
xor
jbe
inc
xor
imul
popa
mov
ss
jae
cmpsl
mov
adc
inc
xor
mov
stc
jg
sti
stos
pop
out
loope
fs
push
cmp
xor
or
stos
jb
sub
pop
xor
sub
add
test
and
mov
sahf
dec
jge
fcmovnb
and
cmpsl
mov
or
addb
popa
loop
les
pop
loope
xlat
or
nop
inc
ret
data16
bound
dec
or
aas
aad
movsl
jnp
and
and
inc
popf
sub
pushf
mov
arpl
xor
outsl
jmp
fwait
mov
mov
inc
sbb
xchg
inc
jno
add
push
shll
lods
push
lcall
inc
push
push
sbb
out
cmp
jno
mov
das
aad
mov
popf
test
divl
cs
pop
cmp
adc
ja
mov
imul
ds
rorl
push
and
inc
sub
mov
push
rorl
cmpsb
add
inc
sbb
jno
adc
mov
sbb
xor
mov
inc
es
push
sar
mov
jmp
mov
add
inc
cmp
std
pop
mov
mov
enter
aam
dec
ret
jp
xchg
jmp
pop
mov
pop
orl
push
outsb
in
popa
push
loope
subl
mov
ja
out
fcoms
push
loopne
cmp
aas
or
pop
inc
xor
pop
shl
or
inc
cmp
out
rcrb
les
inc
sub
push
inc
push
nop
loopne
adc
insb
sub
inc
call
cmc
or
add
sbb
fdivr
std
lret
les
out
ret
adc
dec
les
rol
repnz
mov
in
insl
jmp
pop
jno
pop
test
jmp
in
lret
sbb
cmp
enter
or
leave
adc
jg
lahf
cmp
inc
cmpsb
cld
push
dec
fucomi
icebp
je
sarb
and
movsb
adcb
shrl
jg
jns
popa
in
push
cmc
arpl
sub
sub
test
jge
inc
xor
outsb
iret
fsubrp
dec
loope
jo
xor
and
ret
ja
pop
imul
cmpsl
cs
inc
es
sti
pop
push
fsubl
jne
test
pop
sub
das
mov
or
pop
inc
insb
repnz
inc
inc
inc
dec
lds
dec
cli
inc
mov
dec
jo
mov
adc
dec
or
imul
sub
adc
pop
adc
xor
lahf
or
jno
pop
insl
cmp
cmc
fsts
shl
aam
pop
addr16
mov
mov
add
cmp
popa
add
addr16
inc
add
int
and
inc
push
shrl
jb
sub
mov
daa
jmp
mov
test
aad
test
in
mov
out
pop
jne
jp
in
dec
mov
addr16
jnp
les
in
int
jb
mov
les
cmp
imul
test
inc
add
xor
rclb
ror
jb
dec
lea
pop
int
in
jle
pop
mov
pusha
addb
inc
push
pop
sub
and
sub
test
mov
clc
jp
inc
add
shlw
push
fnsave
fs
stc
add
or
sub
stos
xlat
lahf
lods
lcall
or
aad
dec
jns
inc
shlb
push
loope
scas
push
jne
gs
imul
cmpl
mov
push
and
xchg
and
sub
popa
adc
sbb
mov
popa
dec
and
pop
sub
inc
int
adc
cmp
jb
xor
dec
push
jae
xor
cltd
nop
mov
outsb
xor
inc
xor
mov
out
inc
outsl
bound
lock
lock
iret
aaa
fistl
loope
sub
lods
mov
push
sub
inc
sbb
adc
dec
mov
pop
popa
movsl
and
dec
xor
andl
add
push
jge
inc
lahf
call
push
adc
lea
inc
aam
cmpsb
repnz
jp
rorl
sub
inc
data16
out
mov
int
jo
sbb
jbe
ljmp
ja
sbb
sub
int3
sub
add
loopne
dec
push
inc
popa
imull
test
bound
scas
push
aad
sbb
and
adc
push
sub
cltd
addr16
pop
cmp
add
aaa
mov
cwtl
cmc
xorb
add
push
jns
pop
xor
ja
sti
adc
cmpsb
push
and
sub
icebp
add
sub
movsb
in
int3
sub
sbbb
mov
loope
inc
icebp
and
inc
mov
adc
xor
xor
sub
mov
push
push
cwtl
sub
jbe
cmpsl
out
sub
enter
ja
bound
mov
subl
shll
push
mov
in
push
mov
ja
cmpl
xchg
dec
data16
xlat
push
cltd
push
sbb
inc
sbb
mov
add
inc
cld
push
lcall
rcrl
dec
jp
push
ret
into
mov
dec
xor
insl
inc
mov
or
insb
adc
xchg
imul
mov
pop
sub
cmp
je
stos
or
jmp
stos
pop
inc
sahf
out
or
dec
sbb
jae
imul
stos
ja
mov
neg
aaa
fmuls
cli
add
testb
lcall
ss
adc
push
inc
push
shl
jb
or
mov
dec
sub
in
sub
movsl
inc
dec
popa
sub
inc
push
mov
fadd
les
and
add
push
sub
jp
mov
mov
cmp
out
fadds
addr16
lcall
pop
popf
out
ficoml
jae
fs
leave
insl
jae
pop
int
bound
inc
add
fnstcw
sub
mov
push
mov
js
call
pop
sub
movsl
add
in
movsl
xor
sub
push
mov
ret
mov
daa
cli
jb
mov
cmc
int
fildl
cld
aaa
test
ljmp
cmp
adc
push
loope
enter
in
call
mov
pop
cmpsb
jmp
int
fnstenv
sti
adc
fistpl
ret
fidivs
lods
mov
lret
cmc
mul
orl
mov
dec
inc
pop
pop
pop
cmpsl
mov
jae
movsb
xchg
xorb
mov
adc
dec
gs
push
lahf
and
dec
jb
daa
aam
and
out
push
xchg
xor
lret
sbb
andl
mov
les
or
inc
xor
fsubrp
shll
sub
imulb
push
iret
mov
test
inc
jp
xlat
movsb
push
fnstenv
inc
jnp
ret
bound
les
adc
jno
xchg
aaa
andb
mov
push
out
cmpsl
in
inc
leave
add
add
xor
jle
jno
lea
rol
sti
sub
repnz
les
ds
stc
sub
popa
or
or
xor
lock
mov
pop
imul
add
sub
sbb
das
outsb
xchg
cs
ljmp
xchg
pop
mov
xor
test
and
jns
jl
jl
cmp
jne
mov
inc
fwait
addr16
imul
cmpsl
test
sub
add
inc
xor
in
push
aam
jns
adc
pushf
mov
cs
xor
daa
adc
fisubrl
insl
idiv
movsl
inc
push
js
daa
sub
xchg
lods
fistl
sbb
call
fs
or
cmp
and
int
shll
shll
mov
sub
or
arpl
push
js
pushf
int
and
mov
shll
jecxz
mov
add
jle
mov
adc
fstl
cmp
ret
jne
pop
cli
jbe
push
pop
mov
daa
cmpsl
xor
data16
jmp
add
pop
cmp
and
inc
testb
ss
mov
jg
add
and
sub
loopne
xor
fidivl
loope
scas
adc
out
sub
xchg
adcb
jle
push
mov
arpl
cmpsl
daa
les
flds
mov
bound
xor
lahf
das
sbb
cltd
inc
popa
mov
dec
and
or
dec
gs
into
jns
adc
arpl
fs
rcll
sub
sub
sub
mov
xor
add
loope
gs
add
divb
ljmp
push
jno
dec
mov
daa
and
sbb
cmp
cmp
jbe
imul
pop
xchg
sub
inc
in
cmpsb
mull
adc
xchg
jns,pt
pop
jecxz
dec
cmp
inc
jecxz
stc
inc
xor
adc
sub
loope
das
into
inc
xchg
loop
daa
sbbl
inc
popa
jno
jbe
notb
jl
pop
or
les
ljmp
aaa
push
dec
push
push
insl
xchg
dec
sbb
aaa
popfw
jns
addr16
arpl
xor
sub
dec
push
test
mov
sbb
jecxz
sbb
jns
mov
test
mov
mov
clc
adc
pop
sub
add
cld
cwtl
sub
or
dec
arpl
inc
mov
stos
jl
loopne
int
sbbl
ljmp
pop
xchg
punpckhbw
dec
leave
test
jge
bound
push
cmp
aas
test
out
dec
repnz
jecxz
mov
or
in
shl
divb
xor
fildll
add
cmp
dec
push
cmovae
daa
es
or
inc
test
out
and
cltd
dec
stos
xor
mov
or
cmp
es
pop
adc
mov
imul
mov
outsl
lret
fdivr
addr16
into
enter
ret
and
jmp
test
adc
and
les
and
inc
idivl
push
dec
inc
add
dec
mov
sub
mov
and
add
call
cmp
popa
adc
push
leave
pop
inc
pop
jp
and
inc
mov
out
jno
lods
push
stos
sti
ret
sbb
add
push
js
dec
shrl
insl
nop
loop
lock
test
pop
push
mov
add
sub
add
test
outsb
xchg
daa
jecxz
popf
fcompl
in
in
sarb
dec
dec
in
lds
mov
rolb
add
jb
in
loope
sbb
mov
pop
fistps
clc
stos
add
loopne
fwait
movsb
cltd
dec
sub
rcll
mov
mov
sub
leave
cmp
ds
push
in
hlt
stc
push
xor
add
cmp
ret
xor
gs
icebp
jmp
sub
lods
std
fwait
pop
dec
mov
shll
fwait
mov
dec
mov
movsb
adc
sbbl
mov
in
daa
fwait
sarb
in
inc
dec
call
inc
sub
add
inc
jno
push
mov
fs
inc
inc
icebp
mov
and
pop
xor
cmp
xchg
xor
adcb
fwait
call
sarl
fwait
mov
pusha
in
fwait
lret
fidivrs
xor
test
cmp
leave
fs
daa
sub
sub
sbbl
jno
push
jne
out
add
adc
xchg
jmp
movsl
push
mov
mov
outsl
int3
inc
lret
mov
sub
xchg
mov
in
push
sarl
inc
mov
fadds
imul
and
cld
movsl
sahf
sub
movsl
cltd
dec
mov
test
out
pop
and
out
sub
jge
inc
les
push
seto
lods
jo
repnz
mov
mov
sub
int3
setae
jae
pop
inc
mov
xchg
lret
inc
sti
lods
sarb
inc
arpl
inc
ss
xchg
mov
jl
xor
imul
stc
sub
sub
mov
inc
push
sahf
inc
mov
mov
outsb
jno
sub
xor
xor
cmp
jo
cli
xchg
dec
pushw
pop
popa
push
daa
mov
test
xchg
adc
sarb
and
popf
inc
adc
shlb
lods
cmpsl
stos
loopne
jno
scas
shrl
mov
sbb
fsubs
xchg
or
movsl
dec
sbb
mov
es
ret
mov
jb
cmc
popa
addr16
sub
xor
sub
pop
icebp
jae
adc
xor
mov
js
arpl
xor
imul
lock
jno
mov
lret
mov
int3
das
inc
dec
aaa
loope
push
orl
mov
movl
scas
cmp
fisubrs
cmc
popa
cmp
add
loopne
pop
loope
inc
lret
inc
mov
xchg
xor
sub
mov
fidivrs
and
push
inc
lods
cmp
and
push
movsb
mov
push
sbb
mov
xor
cmp
inc
xor
mov
rorl
push
dec
enter
xor
mov
les
fwait
leave
push
aam
daa
cld
out
inc
or
cmpsl
jne
outsl
dec
dec
mov
scas
jo
ljmp
sbbb
test
popa
aam
std
popa
sbb
dec
jns
sub
in
xorb
sub
add
daa
je
xor
mov
in
sub
loop
loope
xor
int3
sbb
xor
sbb
lahf
mov
pushf
dec
lods
lcall
jbe
pop
and
dec
pop
popf
imul
pop
mov
mov
call
adc
inc
nop
loope
inc
mov
inc
loop
pop
sbb
jge
inc
mov
adcl
push
and
add
pop
pop
mov
bound
lods
das
cmp
nop
inc
and
leave
or
cmpsl
ret
js
in
pop
insl
icebp
cltd
sub
cmpb
aaa
loope
je
insl
push
hlt
lods
inc
sbb
int3
add
jmp
and
lds
mov
fldenv
mov
xchg
pop
bound
fs
in
popf
adc
jmp
pop
xchg
sub
cmp
xor
jne
push
xor
adc
insl
movsb
test
mov
add
inc
lret
shll
inc
movsb
sub
enter
mov
sarl
mov
hlt
dec
enter
cmp
jo
xor
push
or
jg
movsl
leave
cs
jns
dec
cmpsl
jmp
shll
outsl
mov
fildl
popa
pop
mov
pop
arpl
dec
sbb
lock
imul
test
bound
ret
mov
mov
mov
sbb
lock
test
scas
rol
sub
push
pop
lret
ficoml
fptan
push
mov
push
loope
lahf
lock
and
push
hlt
loopne
lret
mov
in
cmpsl
mov
pop
bound
ret
xchg
xor
inc
test
shll
and
pop
sbb
fidivs
xchg
inc
mulb
xor
inc
andl
rcrl
mov
push
cmpsl
into
dec
cmc
vpsadbw
loopne
insl
cmp
scas
xor
stos
pop
mov
xor
xchg
gs
pop
aad
cld
imul
jge
loop
mul
fiadds
sbb
add
mulb
xor
or
cmc
in
or
popa
xchg
mulb
arpl
rcrl
insb
or
xchg
pop
addb
mov
xchg
addr16
shlb
popf
mulb
push
cmp
sbb
subl
enter
cmp
lcall
pop
sahf
call
dec
xchg
jp
and
dec
cmp
frstor
in
scas
or
gs
pop
mov
aaa
sub
mov
pusha
jo
pop
push
sub
idivb
cmp
push
xor
repz
push
iret
inc
sub
loopne
mov
mov
iret
pop
loopne
jb
xchg
mov
cli
out
adc
shlb
dec
shll
inc
shl
jnp
jge
movsb
xlat
int
in
dec
mov
jns
data16
pop
inc
leave
popa
inc
lss
mov
and
lcall
fisttpll
inc
inc
sbb
addr16
push
cmp
std
add
ljmp
inc
retw
insb
cmp
cmpsb
out
sti
ror
rcr
xor
and
icebp
out
into
aad
push
pop
adc
idiv
dec
sbb
rorb
in
cmp
mov
leave
inc
adc
push
je
es
xor
gs
push
xor
inc
xor
add
jg
push
int
dec
jl
xchg
sahf
adc
movsl
jge
pop
into
stc
mov
jmp
and
out
sbb
pop
arpl
inc
inc
xor
push
jbe
bound
in
sub
push
icebp
pop
int
roll
jl
inc
jmp
jecxz
cmpsb
push
cmp
and
cltd
int3
xchg
int
sub
ljmp
dec
xorl
push
dec
or
adc
pop
clc
sbb
orl
mov
sub
iret
cmp
inc
add
ljmp
xor
popa
in
lds
push
adc
mov
mov
push
jecxz
ja
aas
fs
daa
dec
jae
mov
push
ja
mov
jle
lret
or
dec
jge
aaa
loope
enter
pop
sbb
popf
rcll
or
xor
adcl
mov
sub
jge
mov
stc
ret
sti
and
les
fsts
lcall
ss
ret
fcmove
push
xchg
xchg
jbe
mov
test
int3
mov
mov
mov
mov
testb
pop
ljmp
in
jbe
movsl
es
dec
or
jmp
push
sub
xor
bound
shll
dec
ja
in
in
ja
cmp
xor
sub
push
mov
jns
dec
jmp
cld
push
mov
push
rorb
insb
in
adc
jge
stos
sahf
sub
cmpsl
jae
lds
mov
sub
addb
mov
pop
ja
imul
xor
hlt
leave
add
or
cmp
jmp
mov
cld
aad
sbb
push
jae
inc
outsb
mov
dec
and
in
cmp
lret
pop
adc
or
pop
testb
lcall
push
xor
cmp
fiaddl
sub
sub
pop
pop
loopne
or
insl
adc
ja
movsl
sbb
add
jo
lods
bound
sbb
bnd
sub
in
sar
pop
xchg
ja
out
test
loopne
mov
inc
inc
ret
sub
sahf
les
fnstsw
lcall
imul
dec
sub
push
decb
sbb
and
mov
stos
repz
call
inc
pop
lret
mov
lods
sbb
aam
pop
les
std
xchg
sbb
aaa
mov
xchg
and
shrl
repnz
imul
pop
addl
cmp
imul
mov
or
mov
inc
icebp
in
lret
in
in
cmp
aaa
dec
test
and
out
cmp
jo
cmc
xchg
jp
push
in
les
faddl
lahf
xor
dec
arpl
xor
pop
mov
imul
mov
lds
stc
jmp
sbb
xchg
pop
mov
xor
push
and
mov
aam
push
sbb
push
imul
es
icebp
mov
xchg
test
es
mov
pushf
pop
je
adc
rcll
sbb
clc
sbb
enter
aam
fs
std
insl
push
add
inc
adc
fidivrl
cmpsb
lret
sbb
pop
movsb
int
icebp
test
nop
xchg
mov
movsb
ret
fstpl
popa
mov
add
mov
mov
shrb
mov
sub
test
icebp
sarb
cmpsb
je
loope
xor
test
pop
push
jo
sbb
loop
push
call
pxor
or
cmc
jne
pop
into
out
data16
jo
xor
xchg
push
inc
jbe
lods
xor
or
jae
xor
mov
repnz
and
data16
pop
and
adc
lret
cpuid
jl
loopne
adc
dec
mov
rcr
mov
pop
cmp
mov
or
dec
dec
dec
push
xor
inc
aam
inc
push
inc
subl
mov
jo
pop
xchg
mov
xor
sbb
inc
pop
ficomps
jno
xor
xor
sub
cmp
addb
push
lret
scas
fnstenv
mov
sahf
popa
sub
ds
adc
shll
fld
xor
xor
testl
adc
ret
add
sub
and
sub
into
mov
mov
sub
adc
inc
sbb
dec
scas
movsl
nop
jbe
cs
add
ret
sub
mov
pop
out
arpl
mov
outsb
leave
in
mov
inc
xor
inc
out
xchg
sub
push
mov
aas
adc
push
aas
cld
inc
test
mov
jg
xor
mov
inc
shlb
int3
ss
lea
cmc
hlt
adc
and
sub
call
adcb
xchg
dec
inc
sbbb
push
dec
and
cld
andl
dec
leave
imulb
push
repz
inc
xor
sub
xchg
xchg
push
out
call
cs
push
je
shlb
and
and
pop
push
arpl
stos
loope
mov
scas
cmpsl
mov
lods
sub
popa
in
mov
cmp
hlt
pop
pushf
repnz
inc
xor
std
sub
xor
out
xchg
mov
xor
sbb
pop
jne
data16
fdiv
test
inc
loopne
add
rcl
arpl
jns
int3
xchg
jmp
mov
push
sbb
imulb
sub
jmp
in
imul
lds
inc
ss
jmp
in
daa
inc
xor
xor
dec
aas
add
push
and
addl
test
inc
add
movsl
sub
adc
pop
xor
mov
inc
shrl
push
ret
inc
test
pop
movsl
dec
mov
ljmp
xchg
xor
mov
gs
and
jae
addr16
ljmp
cmp
lods
inc
addr16
stos
arpl
je
inc
jns
dec
test
and
jge
les
imul
popa
subl
and
cmp
jl
and
sbb
test
jecxz
or
xchg
pop
xchg
sbb
pop
sbbl
hlt
imul
push
ret
int3
imul
adc
movsl
push
and
cmp
movsl
inc
and
mov
jmp
sub
inc
push
cmp
arpl
sub
add
test
repz
dec
movsl
mov
inc
inc
mov
in
rcl
lods
int3
xchg
test
ss
stc
lahf
mov
popa
cs
imul
xchg
sub
imul
stos
xchg
jns
jae
gs
push
dec
sub
arpl
add
push
mov
popa
xchg
daa
cmp
xor
jb
imul
call
fmulp
scas
and
push
push
in
idiv
cmp
aaa
repnz
imul
cld
or
test
push
mov
cmp
lret
push
dec
ja
inc
pop
fbld
data16
imul
scas
fnstsw
lahf
bound
and
ss
addl
jecxz
add
lcall
lods
xchg
stos
pop
outsb
jle
daa
outsb
xlat
mov
pop
arpl
test
ficoms
xor
and
xor
dec
in
mov
add
clc
add
inc
adcb
xor
sbb
lret
out
inc
jecxz
add
cs
loop
shlb
jno
fmulp
pop
sbb
aaa
ss
jns
rcll
xchg
outsb
mov
push
fldenv
into
push
insb
in
dec
dec
fldcw
cmp
cltd
outsb
sbb
adc
xor
fwait
and
sub
sti
xchg
icebp
mov
add
out
out
xor
push
pop
cmp
sahf
mov
dec
jne
or
inc
aad
sti
jecxz
push
sbb
adc
cli
or
cmp
scas
add
out
dec
adc
push
mov
int3
in
mov
jns
iret
popa
in
dec
mov
outsl
xor
jnp
shll
inc
movsb
jo
jo
popa
divb
dec
push
dec
mov
push
bound
movsl
inc
xchg
hlt
stos
mov
or
mov
mov
sbb
out
ds
xor
pushf
jp
lahf
je
dec
xchg
push
cwtl
es
fxch
lds
cltd
sti
and
jp
mov
int3
test
fstps
push
push
mov
les
pop
sub
xchg
pop
imul
jle
mov
ljmp
inc
mov
clc
xor
imul
dec
imul
lock
lds
leave
popa
or
mov
xor
sahf
movsl
nop
dec
mov
inc
jno
xor
push
mov
add
hlt
or
fisubrl
test
nop
xor
jae
sti
sbb
lock
push
mov
mov
push
and
mov
jmp
fadd
add
rolb
rcl
push
arpl
iret
gs
stos
inc
jne
repz
test
call
add
inc
inc
inc
jbe
xor
lret
sbbl
in
jno
fiaddl
je
scas
sbb
xchg
or
stos
lahf
add
rcll
scas
sub
loop
inc
and
jae
gs
lods
mov
xor
hlt
xchg
mov
testb
dec
lret
push
adc
aad
and
sbb
repnz
mov
mov
jge
int3
mov
dec
addb
leave
push
xchg
cltd
push
sahf
jno
scas
imul
xchg
xchg
call
sub
outsb
dec
jne
sub
imul
sub
adc
imul
sub
jbe
jmp
pop
movsl
arpl
xlat
iret
xchg
repnz
adc
shrl
sub
das
cmp
mov
sub
inc
jecxz
divb
ja
mov
cmp
inc
sbb
mov
add
aam
ret
sub
xchg
inc
aaa
jnp
xor
imul
data16
in
stc
arpl
push
xchg
xor
js
shrb
inc
mov
mov
sarb
and
shrb
mov
and
jns
mov
fucomi
mov
xchg
adc
les
dec
fistpll
xor
out
pop
gs
in
addr16
cmpsl
fsubrs
movsl
popa
addr16
stos
dec
xchg
push
roll
insb
inc
jnp
dec
pop
push
xchg
push
bound
pop
je
jg
lods
data16
shrl
sarl
lret
ds
cmp
data16
mov
xor
test
in
js
les
pop
adc
inc
mulb
lret
cmpsb
jle
call
xor
les
roll
add
cmp
sub
dec
xor
push
add
dec
aam
mov
adc
ss
addr16
roll
dec
imul
adc
cmpsl
xor
out
dec
xor
pop
jno
jecxz
out
mov
push
aas
fisubrl
dec
js
inc
test
push
sub
lods
jp
jnp
jb
je
sbb
out
mov
cmp
dec
leave
inc
adc
filds
cmc
xor
xchg
pusha
imul
and
aaa
imul
orb
mov
loop
add
call
aad
sbb
jecxz
aad
pop
dec
cmp
xchg
in
xchg
pop
xorb
lcall
and
xchg
xor
rcrl
inc
or
imul
or
sub
lea
xchg
inc
fidivrl
push
lret
stos
jle
sub
les
cmp
sbb
test
mov
je
imul
shll
les
dec
addr16
out
cmp
mov
bound
stos
roll
dec
adc
jecxz
dec
bound
inc
fistpll
cmp
mov
aad
in
sub
sub
ret
cmp
movsl
jg
sbb
mov
movsl
jl
inc
outsb
fs
mov
lahf
xchg
push
jge
add
mov
wbinvd
or
sub
pusha
xor
dec
mov
test
or
xor
aad
int
xchg
jle
hlt
sub
ljmp
cltd
jg
push
mov
push
push
shlb
lahf
test
inc
push
and
mov
pop
lods
jb
fcos
insb
aas
in
add
pop
sbb
xchg
add
imul
sub
inc
inc
xor
mov
sub
inc
xchg
fs
lret
movsl
fsubl
inc
nop
aas
sahf
inc
out
aas
push
pop
icebp
jne
jp
aaa
sahf
addr16
out
daa
dec
lods
inc
fnstcw
fnstsw
cmp
sub
inc
mov
popa
ds
dec
frstor
arpl
mov
sbb
adc
pop
out
xor
xor
rcll
push
das
pop
or
js
outsb
rclb
mov
add
add
jns
ds
add
jns
adc
call
in
cmp
test
sub
cmpb
and
out
out
inc
in
in
nopl
mov
bound
xchg
inc
jnp
xchg
std
clc
shll
mov
cmpsl
aam
jne
xorb
rcl
pop
jge
test
mov
cmp
push
inc
mov
shll
sub
mov
cmc
lahf
shlb
repnz
cs
les
iret
jae
push
outsb
inc
push
mov
jmp
insl
rcrb
xchg
mov
and
loop
adc
jae
mov
rep
xlat
add
mov
dec
outsl
gs
call
dec
or
ffree
popa
xchg
loope
shlb
gs
xor
rcrb
inc
icebp
jmp
inc
lret
jmp
shrl
les
mov
dec
push
pushl
movsb
out
inc
mulb
push
lahf
sahf
xchg
notb
cwtl
pusha
mov
or
fdivs
ja
push
mov
imul
jno
xor
stos
pop
jge
mov
lret
push
repnz
xor
xor
bound
mov
xor
out
adcb
inc
das
fldenv
jno
aaa
shlb
cwtl
test
popa
mov
gs
stos
and
sub
dec
das
and
ds
pop
movsl
arpl
add
sub
fisubs
loop
ja
popa
push
in
mov
andb
inc
mov
lds
cmp
ljmp
push
gs
shll
mov
ss
in
out
gs
test
loop
popa
xor
xor
xchg
lods
test
adc
cmpl
mov
push
mov
mov
les
push
adc
sahf
les
adc
out
mov
jo
popa
int3
fiaddl
imulb
sub
jno
xchg
repnz
xchg
inc
add
bound
push
jne
aaa
mov
lds
xor
ljmp
test
add
xor
clc
data16
adc
and
add
mov
test
flds
cmp
add
lds
popa
popa
out
add
ss
fwait
lcall
pushw
cmp
inc
aam
xchg
out
cli
inc
jnp
xchg
add
fs
jmp
leave
push
ja
inc
cmp
jbe
and
outsl
sub
clc
and
inc
sub
js
cmp
rcl
push
inc
int3
loope
out
aas
popa
testb
in
jns
sbb
push
mov
pop
mov
jo,pn
popa
sbb
sahf
mov
or
inc
gs
mov
or
mov
fildl
jns
mov
mov
mov
mov
mov
cmc
mov
cmp
test
loopne
mov
cmc
inc
dec
push
or
ljmp
imul
push
mov
push
data16
dec
test
jnp
and
nop
bound
push
and
sarb
lret
lds
push
popa
lea
cli
insl
mov
pop
pop
fstp
dec
add
push
les
loopne
out
jns
lcall
sub
sbb
sub
ljmp
mov
sbb
mov
push
arpl
mov
es
sub
push
fsubl
mov
ds
pmullw
jnp
ret
sbb
es
subl
jno
and
repz
imul
into
pop
sbb
jbe
push
lock
inc
cmp
dec
mov
adc
gs
jecxz
fs
xor
lcall
pop
sbb
es
int3
sbb
inc
rcll
pop
jg
cli
add
dec
xchg
add
ja
sbb
les
popa
insb
xchg
dec
enter
aaa
bound
sub
dec
add
ja
sbb
out
dec
inc
daa
jno
xchg
shrl
mov
or
or
lret
lds
loope
dec
lret
mov
jmp
lea
jb
inc
shlb
adc
std
sub
cmp
mov
dec
mov
out
push
daa
aam
push
jb
test
jmp
xchg
lods
rolb
mov
cmp
xor
xor
fnsave
xor
inc
sub
dec
xchg
mov
bound
les
sbb
push
outsb
fsubs
insb
imul
push
sub
addr16
aam
dec
xor
movb
arpl
repz
cmp
gs
push
sub
into
sbb
sbb
pusha
les
dec
jmp
gs
and
ja
pusha
repz
pop
adc
clc
dec
and
dec
or
sbb
sub
aaa
mov
cmp
mov
dec
pop
inc
mov
fcomip
lcall
mov
rcrb
insl
sub
xor
aam
fs
jns
dec
mov
mov
dec
imulb
loopne
jl
cltd
sarb
cs
push
inc
daa
neg
push
lcall
cmp
inc
fscale
mov
mov
pop
sub
push
test
arpl
mov
pop
movsl
pop
xchg
mov
outsb
pop
popa
sub
sbb
scas
jle
push
outsb
frstor
test
loop
out
adc
cmpsl
lret
loop
xchg
repnz
bnd
inc
pop
push
in
dec
dec
push
add
lahf
jle
dec
fiadds
imul
call
les
pop
ret
fstpl
ja
popa
loop
xchg
addr16
ret
fldenv
aas
sbb
mov
mov
jge
jge
or
ficoml
xor
subb
add
lcall
lock
sub
or
inc
inc
hlt
mov
add
sub
cmpsl
or
jle
xor
pop
add
stos
xor
inc
jbe
sub
mov
lods
push
inc
mov
adc
jmp
xor
insb
je
dec
pop
lret
push
adc
popa
pop
je
mov
adc
sub
les
xchg
scas
pop
stos
adc
push
pop
lret
scas
pop
jno
rcll
test
push
pop
iret
test
mov
loop
xor
out
iret
hlt
sub
sub
adc
jne
add
dec
adc
loopne
push
scas
jne
xor
inc
int
les
xor
push
out
mov
mov
js
insb
je
jmp
mov
shll
out
out
add
loop
data16
inc
out
inc
ret
xchg
xor
loop
push
mov
mov
sbb
jmp
cs
shll
sub
imul
xchg
pop
aam
inc
xor
and
sahf
adc
inc
in
test
mov
movsl
out
cmpsl
in
mov
int
dec
xor
sbb
divb
iret
in
cmp
sbb
and
lds
pushf
les
sub
sbb
jns
mov
loope
dec
in
data16
lar
adc
cmp
pop
das
fmul
in
cmp
jecxz
inc
xchg
or
mov
outsb
in
addr16
in
pushf
repnz
fucomp
inc
imul
outsl
mov
jns
imul
fldl
imul
cs
xor
and
cmp
dec
fcomps
ret
ds
movsl
cli
cmp
pop
mov
inc
xchg
inc
cmpsl
addr16
dec
sti
movsb
xor
add
inc
aam
inc
jbe
add
leave
mov
xor
xor
jge
int3
test
cmpsl
inc
adc
cmpb
push
jle
pushf
arpl
pop
jmp
push
test
xchg
push
sub
jge
arpl
sub
pop
insl
adc
andl
inc
das
add
jmp
fnstcw
out
fildll
pop
imul
push
adc
sub
pop
mov
popf
aaa
mov
xor
jnp
mov
jno
adc
adc
xor
sbb
cltd
add
jns
sub
jns
add
or
sub
adc
popa
repnz
sbb
out
ja
test
sbb
ja
adc
xchg
js
adc
dec
sub
push
sub
in
sbb
xchg
bound
sbb
jmp
jle
cmp
leave
push
xor
pop
test
push
out
ror
or
cmp
dec
shlb
inc
fcoms
add
ss
cmpsb
push
or
sbbb
sbb
subl
push
jnp
fwait
sub
sbb
sahf
dec
je
mov
adc
rcl
and
and
fsubr
push
xor
cmp
nop
imul
rcrl
stos
push
sbb
push
xor
cmp
shrl
lea
mov
mov
inc
lahf
push
push
popf
clc
insb
mov
leave
mov
arpl
loopne
xor
loop
lret
ss
jmp
lds
inc
and
add
or
loop
mov
lods
int
arpl
sarb
add
movsl
cs
add
sarb
into
icebp
int
push
mov
adc
inc
fdivl
jl
jo
mov
in
add
inc
leave
imul
in
imul
or
scas
sbb
ret
nop
js
in
addr16
adc
sbb
mov
arpl
fnsave
andb
add
push
add
push
bound
dec
sub
scas
add
sbb
xor
push
sahf
out
ficomps
xchg
fisttpl
jae
pop
add
ja
mov
lret
int
adcl
pop
mov
mull
std
test
cmpb
test
sbb
mov
mov
rorb
cli
mov
xlat
xor
inc
sub
mov
xor
mov
mov
je
rcrb
scas
js
lods
jne
jl
ret
notl
shlb
mov
adc
rcll
in
sub
shlb
icebp
decb
cmpsb
xor
pop
jno
mov
mov
insl
lods
leave
fcoml
aad
adc
push
inc
popa
xchg
popf
mov
jge
popa
popa
and
stos
in
dec
push
push
inc
or
xchg
in
adc
int3
cmp
xchg
inc
sub
inc
hlt
inc
xchg
cmp
sub
push
in
out
mov
inc
lret
in
xlat
adc
fisubs
testb
add
sbb
inc
in
cmp
ds
shll
inc
cmp
movsb
cmp
inc
std
pushf
fld
xchg
or
jns
mov
xchg
and
das
jle
fwait
push
es
fstpl
mov
cmp
sbb
stos
mov
dec
in
movsb
or
pushf
xchg
shll
cmc
ret
and
or
lret
cwtl
jno
mov
pop
sbb
dec
push
scas
cmc
loope
aad
adcb
inc
jle
scas
mov
call
mov
mov
insl
push
rolb
out
insl
push
mov
cmp
call
int
push
movsb
out
or
sbb
pop
nop
in
bound
fisttpll
cwtl
jno
mov
pop
or
arpl
inc
push
mov
inc
les
cwtl
ja
pop
fisubs
jne
add
push
add
push
sub
and
stos
fstps
lea
xchg
and
push
test
gs
les
insl
test
push
test
dec
pop
popa
fwait
xchg
repz
lcall
pop
outsb
push
int3
and
lret
std
cmpsb
inc
inc
fdecstp
cmp
lds
xor
xchg
lcall
xchg
ja
jecxz
bound
sahf
les
pop
movsb
bound
stos
mov
inc
ja
icebp
mov
add
in
jg
testb
push
jb
in
push
and
mov
pmuludq
ds
mov
stos
fisubrl
insl
daa
insb
in
push
mov
and
jg
inc
push
and
xor
imul
sub
xor
sahf
and
push
mov
push
add
jge
cmp
imul
cwtl
nop
ljmp
and
outsl
mov
mov
daa
addr16
jge
or
mov
test
sar
popa
dec
lods
sbb
sub
lds
xor
and
mov
sbb
sbb
rcrl
push
push
loope
pop
frndint
cmp
sub
jbe
nop
mov
pop
lea
sub
test
cmp
add
sbb
mov
dec
cmp
shll
and
enter
sbb
rolb
xchg
mov
or
outsl
jl
stc
xchg
xor
test
dec
or
sub
inc
cwtl
into
xor
mov
pop
loope
mov
sbb
ss
push
insl
sub
mov
push
inc
mov
aad
cmp
js
int
add
or
inc
andl
jle
push
mov
sub
icebp
int
mov
mov
rcr
jle
pop
je
insl
pop
cmpsb
int3
lods
bound
jmp
loope
or
lret
dec
jl
outsb
aas
mov
hlt
iret
or
test
and
inc
bnd
testb
push
daa
sarl
insl
xabort
sti
fidivs
xchg
dec
cmp
push
dec
cld
nop
sbbl
ja
pop
sbbb
inc
cmc
or
jbe
mov
loop
jg
or
loop
cmpl
out
or
jp
in
mov
xor
sbb
sbb
fcomps
pop
mov
ljmp
arpl
ljmp
fadds
frstor
fbstp
cmp
popf
ja
dec
jnp
lods
adc
dec
mov
jnp
cs
sbb
pop
jns
sarl
xor
dec
cmp
mov
ror
pop
adc
out
jb
loope
lods
rorb
jno
insb
add
jg
imul
mov
lahf
test
repnz
sbb
mov
cld
mov
sahf
mov
sbb
and
push
les
aaa
jl
adc
pop
fimull
push
push
aaa
sub
daa
cmpb
shl
imul
js
iret
scas
mov
push
fstl
and
cmp
inc
and
xchg
mov
pushf
mov
sub
jp
fisubrs
push
lds
dec
xor
add
and
test
pop
aas
dec
daa
aam
dec
xchg
fisubrl
pop
push
pop
in
fadds
inc
inc
cwtl
sub
cmp
lret
jbe
ja
js
ret
cmp
js
imull
jecxz
mov
cmpsb
dec
pop
cwtl
xor
push
psrlq
aaa
mov
inc
xchg
and
inc
roll
sub
xchg
cmpsb
popa
fisubrs
push
out
sbb
cmpb
mov
fwait
addr16
test
dec
popa
dec
mov
ss
and
scas
cmp
fldt
sahf
mov
xchg
cmp
sarb
jge
andb
mov
shr
icebp
jno
daa
loope
aad
lret
push
leavew
les
nop
push
shrb
test
mov
stos
insb
dec
or
and
outsl
pusha
push
incl
mov
xor
outsb
dec
aas
out
std
lahf
mov
jbe
push
enter
inc
adc
not
push
je
add
and
rorl
push
arpl
imul
fs
lahf
adc
cmp
popf
push
addr16
xchg
int
xchg
in
jae
out
in
and
xchg
push
js
jg
and
stos
pusha
outsb
or
xor
inc
xor
jbe
xor
adc
sub
ret
fsubrl
jmp
mov
sub
sbb
adc
jno
leave
cmpl
and
test
mov
sub
sub
xor
pop
jne
dec
jecxz
jbe
sub
pop
pop
xor
fidivrs
bnd
pop
enter
push
push
in
mov
sub
pop
lret
pop
add
pop
dec
xchg
mov
ret
xchg
addr16
mov
js
pop
add
jmp
movsl
scas
loopne
into
mov
addr16
mov
jmp
fistpll
cmpsb
xor
push
imul
cwtl
mov
and
sahf
ret
hlt
mov
nop
push
jb
and
enter
pop
inc
daa
sub
fcoms
rolb
jecxz
inc
sarb
int
inc
xorl
aad
lea
cli
xor
js
sbb
sub
xchg
outsb
inc
jns
ja
scas
dec
xor
jne
loop
cmp
dec
aaa
insb
mov
pop
test
push
xor
lcall
xchg
and
lock
mov
movsl
add
push
push
fisubs
ror
cld
and
arpl
push
jnp
cmp
mov
lcall
fmuls
imul
adcl
test
jnp
icebp
mov
mov
push
or
or
sub
sbb
bound
popa
in
xchg
test
lock
mov
les
gs
sbb
mov
in
xor
adc
rorl
es
xor
flds
mov
jle
sarb
sub
mov
icebp
adc
cmc
or
and
sahf
out
adc
mov
pop
xor
or
cltd
xchg
xlat
jnp
outsl
jno
inc
adc
enter
push
fistps
les
inc
arpl
mov
shl
scas
and
jl
shll
mov
pop
shr
add
jmp
cmp
les
fucomip
add
adc
imul
and
sahf
push
mov
loop
repnz
jno
lods
add
jno
lidtl
insl
es
fisttpl
mov
xor
dec
ljmp
xchg
add
add
stos
out
push
push
add
fcmovnu
jmp
and
sub
sub
or
adc
std
rol
ret
jnp
sub
xchg
movsb
jb
cmpsl
inc
xor
and
xor
add
sub
in
or
mov
cmp
les
aad
stos
dec
inc
not
imul
lods
std
cmp
fsubl
cli
mov
test
pop
fsubrs
push
jge
mov
arpl
sub
rorb
insl
push
mov
sub
jmp
hlt
repnz
fstpt
inc
or
stos
in
jp
inc
test
dec
xor
stos
or
dec
xor
xchg
sbb
add
xor
enter
popa
loop
cli
dec
ljmp
movsb
popa
mov
add
inc
and
sahf
jb
sbbb
bound
test
nop
test
xchg
flds
inc
mov
stos
inc
cmp
xchg
cmp
subl
xor
push
inc
xchg
sarl
jae
inc
push
xor
or
les
sub
inc
and
mov
popa
ss
pop
sbb
filds
repz
push
nop
cmp
xor
hlt
cmp
inc
add
stos
sub
jge
les
ljmp
sarl
push
push
aam
push
fcomps
ror
pop
or
aam
mov
outsb
mov
and
lret
cmp
push
xchg
fwait
das
pop
cmp
and
stos
xor
mov
mov
mov
mov
pop
xor
pop
cmp
popa
das
or
imul
push
cmp
push
dec
inc
and
mov
pop
lret
xor
sub
jecxz
imul
in
negb
mov
cmpsb
pop
mov
push
sub
lds
dec
ljmp
inc
leave
pop
jno
mulb
fnstenv
push
add
cld
cmpb
test
mov
iret
aad
inc
inc
push
jp
mov
ret
push
mov
sbb
mov
aaa
xchg
jmp
jecxz
push
sbb
mov
push
fwait
xor
ret
xor
jg
or
sub
xchg
cmp
or
push
pusha
xlat
jns
cmp
mov
push
and
sub
or
push
test
pop
or
lcall
dec
sub
outsl
call
ds
push
popf
mov
faddl
push
ljmp
out
and
sar
and
cli
adc
mov
fdivl
rcrl
jp
xor
mov
arpl
mov
or
and
mov
or
in
adc
mov
mov
xor
sub
xchg
sub
les
xchg
ret
dec
cmp
dec
scas
outsb
or
lcall
xor
sub
lock
sub
dec
add
fsubs
mov
rcrl
cmc
and
add
adc
xor
xchg
shll
popa
cmp
xor
std
lahf
push
rolb
les
mov
sub
push
inc
stos
cmc
mov
inc
movsb
cmpsb
ljmp
test
cmp
mov
sub
cld
pop
mov
mov
stos
fildll
adc
mov
cmc
xor
dec
xchg
shl
es
pop
xor
aaa
push
clc
test
jp
cmp
mov
xor
mov
test
jl
or
add
push
ss
jnp
xchg
adc
sub
nopl
cmpsl
jns
dec
orb
nop
adc
sub
mov
gs
inc
cmp
mov
ljmp
dec
pusha
lds
in
enter
or
sbb
ret
xor
bound
fbstp
add
push
mov
cmp
outsl
dec
sarb
cmpsl
repnz
test
dec
test
inc
pushf
js
sub
mov
inc
and
insl
aaa
movsl
in
inc
lcall
jns
xchg
lret
test
sbb
inc
daa
insl
addr16
mov
out
fiaddl
jne
shlb
enter
sub
lret
push
rcrb
fstps
sub
mov
out
fstl
xchg
das
inc
test
cmc
jle
test
or
jl
sub
push
in
cmp
repnz
xacquire
push
popf
ret
xchg
push
inc
out
pop
fildl
lods
xor
imul
imul
add
ret
ffree
aaa
fcmovnb
mov
adc
cltd
cmc
mov
andl
les
ss
orb
cmp
pop
std
jno
sbb
xor
cmp
jle
or
add
adcl
dec
and
xchg
sahf
add
sbb
lock
xchg
scas
xor
pop
mov
pushf
ret
popl
incb
inc
mov
or
add
rcll
or
out
cmp
loop
sbb
push
rcll
enter
les
mov
stos
int
jbe
lret
in
ljmp
outsb
mov
stos
sbb
not
inc
jp
xor
or
ljmp
mov
pop
jo
mov
int
sub
xor
aaa
mov
mov
out
jb
shrl
in
push
dec
or
mov
lea
add
lahf
xchg
ljmp
in
add
andb
mov
scas
gs
sbb
push
outsb
les
inc
sub
xchg
cmp
xchg
bound
icebp
push
fisubrs
movsb
push
popa
and
jno
xchg
sbb
or
loop
inc
mov
or
cld
ss
aam
mov
sahf
addr16
xlat
mov
sbb
cltd
or
aaa
insb
adc
or
insl
sub
xor
add
fisttps
sub
adc
sub
pop
sub
cwtl
jmp
sbb
mov
pop
ffree
mov
pop
test
into
pop
orl
push
or
mov
mov
stc
bound
in
mov
dec
dec
sub
mov
jb
mov
call
repnz
inc
lods
jb
lds
fwait
add
add
fisubs
xchg
in
aaa
bnd
loope
mov
lds
test
xlat
and
adc
sub
fst
lcall
push
shlb
dec
xor
or
jmp
gs
daa
adc
enter
mov
jg
or
orb
fstpl
imul
sub
leave
xchg
in
push
dec
jns
push
movsb
sarl
inc
sub
jbe
or
and
addb
add
inc
bound
sub
pop
cmp
sbb
jo
inc
xor
inc
or
pusha
stc
sub
mov
movsl
sbb
iret
dec
jg
shll
roll
sahf
fdivrs
push
jle
das
and
and
pop
out
es
xor
shrl
into
and
les
das
dec
jnp
or
inc
imul
pushf
es
dec
out
mov
ja
inc
cmp
and
mov
dec
and
into
frstor
dec
xchg
out
lret
sub
adc
add
pop
xchg
push
inc
jne
xchg
sbb
cmpsl
inc
mov
test
icebp
jbe
je
push
pop
mov
dec
mov
imul
sub
sub
shlb
mov
outsl
xchg
inc
imul
and
gs
ret
jo,pt
lret
cwtl
in
push
leave
sbb
pop
je
lret
bound
and
xor
push
sbb
mov
jnp
rclb
lcall
arpl
pop
outsl
cmp
mul
orl
jl
loope
jge
and
int
idiv
cli
jno
sub
cmpl
push
jp
and
push
push
cmp
out
mov
inc
jbe
dec
loope
icebp
pop
ja
imul
jp
mov
lcall
sbb
lods
popf
push
adc
js
dec
jno
pusha
cmp
jbe,pt
insl
fidivrs
xor
cwtl
dec
mov
into
mov
call
movsb
int
lods
ja
inc
pop
jge
repnz
jno
stos
mov
test
aad
jp
call
rcr
in
cmpsl
or
lret
icebp
pop
cmc
filds
fs
loopne
mov
daa
inc
enter
jnp
cwtl
fwait
adc
inc
iret
mov
mov
push
pop
imul
inc
cmp
adc
lret
and
inc
int
mov
adc
jecxz
sub
and
shrb
enter
das
xor
push
dec
mov
mov
pop
inc
fldenv
test
cmp
dec
adc
arpl
or
sbb
cmp
pusha
jg
add
daa
xor
mov
cwtl
xor
mov
or
push
js
out
outsl
inc
fsubrl
std
movsl
movl
lcall
sar
shll
cmp
ret
add
push
pop
aam
icebp
xor
imul
jmp
inc
adc
xor
rcl
in
into
hlt
add
push
aam
jnp
lcall
mov
and
pop
repnz
repz
cmpsl
ret
cmp
cmp
xorl
sub
adc
arpl
push
jns,pt
popa
add
sub
int
jmp
test
outsb
imul
dec
sahf
sub
jp
gs
push
sbb
bound
cmp
daa
sub
sbb
arpl
sbb
and
daa
xor
cmpsl
jbe
pop
and
jecxz
faddl
mov
vpmovd2m
mov
adc
xchg
insl
push
sbb
incl
sbb
jne
sub
inc
pop
xor
adc
push
dec
je
stos
es
sbb
cwtl
sub
cmp
out
loop
jecxz
sub
into
std
lret
roll
jecxz
sbb
jno
fcmove
imul
mov
xlat
pop
cld
push
cmp
add
test
and
test
jb
jmp
shll
repnz
jns
popl
mov
aas
sti
pop
sub
or
xchg
push
jbe
mov
or
jmp
in
data16
mov
repz
mov
push
xor
and
mov
test
xor
xchg
cmpsb
add
loope
add
cmp
test
mov
sub
daa
dec
imulb
sbb
push
adcb
lcall
bound
dec
pop
inc
xchg
in
cs
das
loope
jb
imul
imul
adc
jp
mov
mov
shlb
jge
scas
adc
mov
loope
rorb
js
movl
jnp
bound
std
jecxz
push
int
loope
jne
add
sbbb
stos
cmp
xor
inc
xchg
pop
mov
in
out
idivl
xor
mov
adcb
mov
pop
and
outsl
dec
jbe
outsb
push
rorl
xor
dec
out
data16
arpl
inc
jle
push
mov
fcomip
inc
scas
int
or
mov
enter
outsl
aaa
dec
movsb
test
or
cmp
push
aaa
dec
cmp
inc
jp
cs
inc
jge
jbe
push
data16
test
ja
pop
cmpsl
into
cli
mov
adc
lods
push
cld
imul
lret
repnz
inc
shlb
lahf
push
aaa
xchg
in
and
cltd
aaa
push
adcl
push
clc
mov
test
lcall
imul
in
outsb
aas
jb
fs
cmpsb
shlb
sbb
dec
out
and
es
cmp
cli
and
xor
cmp
shrl
xchg
aaa
push
cli
addr16
in
fs
jbe
mov
and
mov
cmp
lods
inc
dec
push
mov
mov
lahf
push
pop
sub
dec
pop
stos
popa
jno
inc
or
sub
leave
push
mov
lahf
fiaddl
sahf
sub
test
fbstp
inc
repz
mov
cli
mov
inc
dec
inc
mov
jle
xor
test
lahf
xchg
es
dec
sub
flds
dec
outsb
mov
sahf
decl
outsb
inc
jno
int
icebp
loop
sub
lea
aaa
xor
add
jno
pop
dec
xchg
sbb
xor
jno
popa
mov
les
pop
sub
enter
xor
enter
xchg
loop
lock
insb
gs
xchg
stos
imul
das
cmpsb
les
mov
std
fldl
or
mov
sbb
pop
xorb
in
cwtl
lds
adc
call
stos
insl
test
xchg
xchg
sub
mov
bound
xchg
jmp
mov
fcmovnbe
scas
lret
and
in
nop
das
add
adc
inc
sub
jp
jbe
xor
xchg
sub
pop
mov
xchg
sub
sbb
push
mov
add
cmp
xlat
js,pn
xor
sub
jno
cli
xor
xor
add
dec
sarl
hlt
and
adcl
dec
sbb
and
stos
push
sbb
lret
adc
dec
jbe
cli
sbb
and
mov
smsw
popa
add
ffree
loopne
jmp
cmp
mov
push
movsl
sub
lods
mov
mov
push
sub
xchg
sub
sub
loope
lret
add
sub
in
imul
jno
dec
inc
iret
add
inc
fs
xor
dec
and
fisubrs
jno
bound
repz
gs
pop
inc
lea
xchg
mov
icebp
mov
inc
inc
dec
dec
outsl
sahf
int3
jmp
addr16
push
imul
jp
lea
mov
inc
inc
jg
lahf
test
hlt
sub
and
pop
popa
bound
mov
sub
int
test
outsb
lock
addr16
cmp
enter
push
inc
pop
xor
loop
repnz
inc
dec
cmp
shrl
dec
sub
lret
insb
xor
mov
gs
sbb
sbb
cmpsl
dec
out
popa
add
repnz
ss
dec
enter
mov
leave
xchg
push
jle
cmpsw
cmc
stos
sarb
jno,pt
sub
and
das
fisttps
lret
int
loop
mov
rcrb
or
mov
ds
jne
jnp
sub
mov
stos
jae
mov
cmpl
sbb
and
add
mov
mov
sarb
inc
insb
mov
jmp
xchg
jnp
mov
mov
cmp
pop
cli
inc
jns
sub
cmp
daa
or
aaa
dec
xlat
out
dec
mov
out
out
sub
mov
inc
sub
popf
adc
mov
aas
dec
add
test
fistpll
insl
mov
mov
jge
repz
data16
testb
lcall
push
pop
adc
loope
cmp
bound
and
xchg
clc
xor
push
mov
inc
pushf
inc
dec
notb
fidivs
push
sbb
fs
sub
std
outsl
add
or
in
inc
outsb
sbb
sub
pop
cmpsl
sarb
inc
mov
inc
fists
mov
xorl
rcl
mov
or
in
mov
push
arpl
shr
shl
fsts
mov
pop
nop
loope
fdivs
shlb
cmp
add
adc
out
inc
test
cmp
out
push
sbb
cmp
or
jne
popa
jp
cmp
sub
iret
lds
mov
mov
cmp
dec
inc
subl
shl
jg
mov
in
imul
sub
imulb
repz
pop
ja
xor
mov
testb
jecxz
pop
pop
call
sub
inc
ljmp
andl
loop
and
bound
push
jnp
push
test
add
xchg
dec
je
cmp
jne
rol
stos
sub
imul
sub
lret
pop
push
adc
fwait
mov
fiaddl
and
jnp
push
lcall
pop
ret
xor
mov
jno
xor
arpl
jno
stc
fistpll
negl
or
imul
xchg
mov
mov
jp
mov
addr16
shrl
mov
pushf
cmp
pop
pop
mov
inc
xchg
inc
cmp
cs
cmpsb
and
add
hlt
ret
sub
adc
ds
fldcw
rorl
jns
sbb
xchg
imul
and
add
enter
fdivr
jbe
sub
mov
mov
movsl
and
dec
sub
loopne
arpl
cmp
lret
filds
and
and
add
inc
inc
movsl
repnz
add
adc
mov
inc
imull
mov
sarb
mov
xchg
sub
xchg
add
fadd
and
cmp
cmp
xor
add
add
arpl
and
cs
cmpsb
inc
xchg
and
mov
stc
testl
or
arpl
popa
out
je
fdiv
jnp
push
imul
imul
mov
mov
inc
pushf
inc
sbb
and
and
add
sub
rclb
cmp
lahf
pop
enter
cmpl
inc
les
adc
test
or
jbe
outsb
sbb
es
xchg
mov
xchg
xor
xor
inc
stos
cmp
movsl
lret
faddp
ret
lret
aaa
adc
mov
xchg
aam
sarb
or
shll
outsb
pop
inc
and
jecxz
addb
data16
mov
mov
jle
xor
push
xchg
push
inc
dec
out
xchg
sub
sub
xor
andl
mov
or
xchg
cmp
xor
insl
movsb
sbb
popf
sub
pusha
inc
mov
cmp
push
xor
pop
inc
mov
cmpsb
xor
xor
jb
xor
cmp
pop
icebp
insl
mov
or
adc
push
inc
les
sub
inc
sbb
pop
pop
out
pop
xor
dec
jbe
xchg
inc
inc
pop
inc
data16
pop
fildll
cmp
data16
add
push
scas
out
cwtl
test
icebp
xchg
leave
mov
out
ss
arpl
xor
clc
popa
leave
js
fs
lcall
add
mov
cs
pop
dec
popf
je
jae,pt
rolb
data16
gs
mulb
push
or
lock
xor
push
mov
cmp
and
mov
sbb
das
stos
fstl
sub
or
mov
mov
push
lds
push
sub
push
add
inc
or
sub
out
mov
or
outsb
and
cs
ret
mov
roll
xchg
repz
sub
pop
push
and
icebp
mov
popa
dec
adcl
in
fnsetpm(287
xor
stos
insb
imul
xor
inc
sub
jno
fcompl
test
int
rcr
test
inc
ljmp
addl
xor
pusha
lea
xor
mov
push
add
mov
xchg
nop
dec
stos
scas
lcall
ret
jb
inc
xchg
inc
cwtl
lods
call
add
jle
and
add
xchg
push
xor
decb
or
in
mov
ret
pop
mov
out
out
jno
nop
xchg
inc
dec
mov
pop
pop
add
jp
add
push
adc
xchg
sub
dec
jl
mov
xor
movsl
pop
adc
sub
imull
pop
jmp
mov
das
sub
adc
ret
add
inc
insb
pushf
shrb
jle
es
inc
xor
les
sbb
outsb
mov
leave
pop
and
xchg
mov
pop
lods
cmpb
jnp
xorb
sub
push
loope
jle
ds
ja
push
xchg
inc
pop
ret
ljmp
ret
mov
inc
lods
add
mov
aad
stc
and
inc
js
adc
sbb
xchg
test
movswl
out
hlt
xor
addr16
es
in
jmp
icebp
xchg
popf
pop
fnstenv
pushl
xor
mov
int3
push
cmp
shl
mov
scas
jbe
shl
ja
scas
push
daa
sbb
mov
fnstsw
addr16
test
pop
popa
andb
push
cmp
cmp
or
repz
lods
mov
repnz
cmp
aam
lcall
shl
dec
sub
jmp
mov
popf
xor
leave
stos
cmp
enter
jbe
push
add
stos
sub
mov
or
or
xchg
stos
mov
aaa
movsb
enter
or
cld
testb
outsb
push
notl
cmp
andl
ds
rorl
jnp
inc
xchg
xor
out
inc
fimull
cli
add
repnz
fucomip
dec
negb
lret
arpl
mov
add
fdiv
roll
loope
das
sub
iret
into
jno
enter
loopne
mov
stos
mov
xchg
add
push
cltd
mov
in
cmpsl
sub
jns
insb
movntps
hlt
xchg
xchg
movsl
xor
ret
inc
push
jne
or
mov
es
xor
push
sub
leave
movsl
jnp
push
sub
das
lea
and
push
mov
push
frstor
stos
popf
sbb
ret
adc
lds
int3
cmc
lea
lds
loop
es
movsb
out
les
jb
jp
hlt
jle
mov
mov
testb
arpl
mov
pop
shrl
dec
imul
lret
fimull
pop
sub
jmp
andl
dec
mov
sbb
jno
or
and
inc
jb
jno
push
cmc
and
lahf
inc
fs
mov
das
dec
enter
mov
ja
fimuls
jno
jecxz
or
cwtl
popf
and
push
jns
jns
inc
add
jns
roll
movsl
imul
loope
rclb
int
cmp
sub
jge
jecxz
outsb
ja
jmp
cli
xchg
push
push
inc
xchg
push
cmp
inc
inc
inc
outsl
xchg
push
pop
jl
pop
mov
das
ret
shrl
in
sub
das
or
mov
loope
dec
js
ja
adc
mov
bound
call
sbb
sub
jno
repnz
sub
inc
shrl
push
shrb
stc
insb
inc
fwait
mov
mov
pop
dec
add
jno
mov
popa
in
jle
stos
subl
outsb
fldl
aaa
mov
inc
das
bound
gs
mov
sub
imul
in
lods
data16
popa
fwait
jmp
and
nop
fsubs
sbb
inc
ror
pop
popa
mov
fsubrs
mov
repnz
imul
push
rcll
cmpsb
adc
insb
hlt
adc
dec
enter
xor
mov
inc
pop
jns
in
sub
lods
xorl
xchg
xchg
mov
mov
and
add
je
popa
inc
repz
bound
sub
popf
int
jne
popa
mov
xor
push
mov
movl
push
push
out
ret
daa
mov
aaa
and
stos
lods
jp
xchg
test
dec
lods
jg,pn
mov
jno
cltd
sbb
sub
dec
in
fwait
int3
imul
cs
and
sbb
cltd
mov
ljmpw
add
adc
mov
aaa
out
loop
and
add
fsts
jp
add
imul
jmp
push
aad
and
cmp
imul
inc
push
and
or
pop
pop
mov
inc
movsl
divb
leave
add
ds
jle
push
dec
cmp
stc
xor
movsl
adc
test
mov
mov
xchg
push
insl
mov
sbbb
sbb
ljmp
mov
cmp
movsb
aas
popa
inc
xor
push
aad
xchg
mov
movsb
jae
arpl
add
mov
inc
gs
push
nop
ss
mov
repnz
adc
sbb
andl
insl
mov
add
sbb
xchg
push
data16
sbb
jae
jb
xchg
mov
inc
movsl
inc
inc
add
lds
in
inc
inc
jae
test
inc
xor
sbb
push
and
cltd
xor
aaa
loope
inc
inc
dec
test
push
and
and
xchg
dec
mov
add
out
add
rcll
pop
ljmp
int
sub
xor
mov
mull
and
push
shl
out
xchg
adc
out
xorb
out
mov
mov
mov
dec
shrb
cmp
mov
out
sbb
add
or
jno
cmp
dec
inc
das
into
aaa
decl
imul
lcall
pop
std
push
adc
dec
ret
sub
mov
jno
and
inc
ds
or
addr16
pop
mov
in
jge
outsb
xchg
test
loop
dec
xchg
idivl
fcmovu
inc
dec
pop
adc
orl
mov
mov
cwtl
repz
or
mov
repz
je
xor
add
xor
push
cltd
cli
pop
pop
addl
or
dec
cmp
pop
jno
push
dec
or
test
imul
pop
cmpl
loop
pop
bound
imul
inc
in
adc
and
pop
jmp
shlb
fcmovb
insl
test
test
iret
jnp,pt
iret
push
outsb
and
or
xor
or
push
lods
jecxz
es
cmpsl
xchg
jle
jp
loope
push
shll
mov
jbe
mov
rcrl
adc
xchg
and
dec
jmp
cmp
inc
inc
dec
pop
insl
into
xor
scas
imul
out
jle
fwait
dec
sbb
jne
adcl
fisubl
dec
stos
or
dec
sub
mov
xchg
push
dec
mov
adc
les
and
insl
sub
sbb
sub
jb
cs
cmp
or
add
testb
inc
xchg
or
bound
sub
push
cmpsb
sahf
and
pop
lods
and
insl
lods
xchg
mov
sarl
mov
jp
sub
test
insl
test
xacquire
es
repz
adc
out
mov
call
ds
jle
jle
sbbl
test
or
mov
inc
gs
add
mov
push
xor
cmp
ss
mov
adc
sub
inc
jmp
test
jp
pop
jae
das
sbbl
rorb
inc
and
pop
sbb
push
inc
inc
movups
dec
jno
pop
sub
sbb
fs
out
enter
or
xchg
jns
bound
cmp
fnstcw
fsts
mov
in
inc
pop
sub
dec
sub
sub
enter
sub
push
jmp
pop
hlt
leave
mov
push
dec
push
dec
cmp
dec
cltd
ret
cmp
movsb
addr16
sbb
repnz
and
inc
inc
mov
frstor
jo
and
and
adc
inc
jae
mov
lods
sbbl
pop
mov
push
lock
imul
in
sbb
aas
inc
dec
ret
flds
mov
out
shll
add
jle
jecxz
sahf
stos
fnsave
nop
stc
loope
shlb
dec
dec
mov
sbb
roll
lods
cvtpi2ps
jae
mov
push
ret
mov
cmp
jmp
shll
push
idivl
jp
sarl
ficompl
xchg
loop
ret
and
bound
adc
mov
pop
push
ss
jno
sbb
sbb
das
mov
stos
outsl
addb
sbb
imul
loope
jg
hlt
mov
insb
mov
cltd
ficoml
jmp
cmp
xchg
sbb
xchg
inc
dec
rcrb
xchg
cmp
jbe
dec
int
push
add
lret
push
popa
xchg
fstl
pop
hlt
ss
int
ret
out
sbb
repnz
dec
push
adc
inc
sub
mov
lcall
jnp
pop
sbb
les
push
mov
pop
cmpsb
mov
add
cmp
push
int3
sub
inc
gs
xchg
shll
mov
inc
and
xchg
push
ds
inc
aam
sbb
pop
and
lock
sbb
sahf
repnz
fst
sahf
push
loop
xor
popa
mov
les
arpl
loope
outsl
and
ret
and
mulb
and
jnp
sub
inc
idivb
add
push
pop
dec
sbb
sbb
add
dec
cmp
mov
and
mov
nop
push
icebp
cs
inc
nop
mov
xor
adc
and
bound
mov
pop
dec
inc
push
fsubl
add
xchg
lahf
push
jnp
sub
and
jns
les
dec
test
xor
push
mov
andb
enter
imul
loop
aaa
mov
xor
hlt
and
sub
test
xor
mov
sbb
mov
ljmp
daa
xchg
dec
pop
push
loop
inc
mov
adc
test
pop
icebp
inc
mov
sbb
dec
bound
dec
neg
pop
pop
test
es
fldcw
inc
mov
and
mov
mov
dec
add
mov
dec
arpl
fwait
cmpsb
ret
ret
imul
xlat
leave
testb
dec
test
cs
js
xchg
lds
sbbb
mov
ss
push
push
cltd
dec
push
dec
push
sbb
popa
jg
push
in
mov
inc
inc
pop
or
mov
push
inc
daa
sbb
xor
movsl
addl
jecxz
cmp
aam
int3
jp
pusha
iret
sub
xor
sarl
and
push
inc
stos
cmovne
roll
inc
cmp
dec
decl
cmp
pop
sub
pop
jno
shlb
sbbb
mov
inc
inc
mov
push
or
bound
movsl
inc
inc
xchg
xor
cs
nop
pop
fs
cwtl
insl
cmp
lret
cmc
lahf
mov
jbe
iret
daa
or
adc
or
and
inc
repz
or
sub
push
movsb
cmp
arpl
inc
popa
jno
je
roll
xchg
movsb
dec
sub
arpl
pop
inc
shll
fldl
pop
sbb
pop
sub
sub
les
inc
ret
cs
sub
xorb
fmul
shl
push
push
push
jmp
mov
or
movsl
mov
iret
adc
or
xor
mulb
push
sahf
sbb
popa
fs
inc
jno
lods
mov
jge
mov
jge
mov
push
mov
xor
add
out
cli
movsb
dec
jbe
sahf
push
stos
and
xchg
add
add
mov
repnz
jae
jge
insl
gs
nop
push
jecxz
mov
inc
aad
dec
fs
addr16
pop
lock
arpl
inc
das
inc
popa
scas
jmp
lret
jecxz
enter
insl
add
in
or
inc
fcmovne
cli
clc
and
push
push
sbb
and
lods
push
out
jnp
sub
cmp
je
push
mov
lods
sub
cwtl
mov
cwtl
int
push
inc
sub
in
inc
jns
int
test
inc
inc
loop
testb
push
loopew
shrb
sub
sub
pusha
xchg
fistpll
inc
int
mov
adc
fbstp
cmp
add
inc
gs
mov
lcall
js
fs
sub
mov
sub
loope
push
ds
pop
mov
out
mov
sub
negb
push
sub
les
ds
rcll
icebp
sub
popa
cmp
cmp
jae
in
jo
inc
mov
imul
jg
and
push
inc
inc
fildl
jl,pn
dec
ret
and
popa
and
mov
lcall
jne
xlat
dec
imul
mov
in
sub
xor
inc
cli
cs
cmp
ljmp
fists
stc
roll
sbb
sbb
lcall
pop
sub
sub
xor
or
xchg
sub
mov
ja
xchg
lea
cli
inc
xchg
lahf
jl
and
test
scas
in
rol
mov
mov
popf
inc
ja
adc
sbb
psubb
or
cwtl
outsb
cld
mov
push
jns
pop
cs
push
xchg
popl
in
rcll
mov
jno
call
sar
cmp
jp
xchg
aaa
adc
inc
insb
push
pop
xor
cld
xchg
int
mov
ja
xor
add
shrl
jmp
cmc
and
jmp
mov
push
xor
xor
rol
push
xchg
add
movsb
cmpb
outsb
les
lcall
dec
mov
rolb
xchg
sbb
mov
push
int3
push
mov
mulb
sub
repnz
mov
dec
cmp
inc
add
cmc
push
and
inc
stos
popa
shlb
mov
push
pop
fldt
dec
outsb
sahf
in
jb
xchg
mov
imul
add
loopne
dec
shll
xor
je
pop
jno
jmp
mov
cli
shr
dec
mov
les
inc
loop
mov
jp
xchg
push
roll
cmp
adc
cmpsl
in
jp
in
arpl
cmp
push
incl
icebp
jp
imul
in
jbe
jp
mov
dec
add
dec
mov
je
xchg
sarl
std
decb
notb
xor
sbb
popa
cmp
cmp
aad
or
cmpsl
in
mov
cli
mov
mov
jge
shr
ret
jbe
call
loop
fcmovnu
loop
inc
or
xor
push
idiv
pop
dec
push
sub
out
xchg
lret
cmp
or
sbb
fstl
stc
imull
insb
imul
imul
lds
mov
fiaddl
add
test
pop
xor
push
lods
cmp
mov
ljmp
and
popf
fldt
std
mov
int
arpl
mov
in
out
mov
fldenv
lods
lcall
stos
shl
ja
aad
sbb
push
insl
adc
jno
adc
xchg
sub
sub
lcall
ret
ds
xor
cmc
das
iret
mov
cmp
les
rcll
jmp
push
and
pop
outsb
push
cmp
sub
pop
jle
jl
pop
decl
loopne
in
fsts
jb
addr16
sahf
fisubl
shrl
arpl
lods
lcall
jmp
sbb
outsb
scas
adc
nop
dec
inc
nop
fiaddl
xor
js
jo
outsb
inc
es
mov
inc
xchg
mov
test
mov
gs
movsb
dec
cmp
cwtl
pop
iret
fisubrl
out
push
jge
popa
jp
pusha
sub
push
mov
mov
mov
imul
ss
notl
push
loope
icebp
repnz
notb
loope
lods
adc
inc
jle
mov
icebp
idivb
mov
jle
push
mov
dec
xor
lret
sbb
cmp
push
lea
sub
gs
ret
popf
les
enter
inc
add
cmp
push
fidivs
mov
xor
push
int3
push
jg
pushf
inc
jb
add
daa
inc
pop
push
lock
bound
ficoml
sti
insb
fstp
sub
sub
jle
jmp
fdivrl
xor
clc
mov
pop
out
xchg
test
testl
or
mov
mov
ret
or
jg
and
sub
fdivl
and
sti
mov
jno
and
js
pushw
xchg
cmpsl
sarl
xchg
shl
mov
loope
push
pop
lret
orl
mov
sub
or
cld
repnz
xchg
mov
jno
aaa
jmp
lods
mov
adc
sub
rolb
pop
jmp
add
pop
arpl
inc
jns
int3
bound
loop
orl
movsl
fildll
in
or
pop
sbb
sub
cltd
xor
xor
sbb
or
xchg
test
inc
or
cmc
dec
fwait
icebp
jge
les
mov
mov
sub
mov
push
and
jb
pop
xor
xlat
ficoml
nop
inc
mov
test
mov
sub
jg
pop
movsl
mov
add
outsb
cmp
xor
or
flds
or
sahf
inc
pmullw
gs
popa
jb
addb
add
pop
insl
xor
push
inc
push
or
lahf
and
sbb
arpl
adc
sbb
stos
pop
rolb
mov
arpl
lea
pop
ljmp
and
inc
lock
out
mov
sarl
dec
mov
sub
dec
cmp
bound
sub
push
dec
dec
test
test
jmp
and
mov
pop
push
aad
push
popf
sub
mov
test
mov
in
push
mov
jecxz
push
in
add
addr16
imul
popa
pop
sbb
and
fildl
arpl
lods
pop
popa
in
jo
sbb
sbb
mov
popa
jle
push
fwait
or
les
repz
popa
inc
adc
inc
jg
pop
jmp
jno
imul
dec
xor
inc
sub
mov
cmp
cmc
shlb
jnp
xor
jg
xor
inc
flds
fs
ret
pushf
sbb
sub
out
adc
sahf
xor
fldl
inc
in
jno
shl
jae
ret
xchg
xor
aaa
push
outsb
xorl
dec
les
adc
lret
sbb
add
stos
cmp
jb
dec
call
sub
push
push
xchg
testl
push
cmp
dec
cmp
sar
xor
cmp
dec
add
or
push
push
sub
lea
cmp
fistps
shl
in
test
pop
bound
test
repnz
ds
scas
repnz
cli
sbb
rolb
inc
sub
adc
jb
ds
or
lods
into
jecxz
ja
sub
or
and
mov
mov
clc
fisubrl
fs
sub
mov
mov
movsb
sub
push
or
xchg
lock
inc
xor
or
xchg
push
and
mulb
popa
rcl
cmpsb
sub
sbb
rolb
bound
mov
std
ret
outsl
loope
push
mov
jae
inc
imul
rorl
sti
lahf
test
mov
dec
add
cmpl
repnz
loope
testb
test
cmp
imul
out
test
xchg
dec
dec
inc
scas
inc
stc
push
shr
shrl
stos
inc
out
fstpt
fstpt
sbb
mov
xchg
inc
jno
inc
out
push
push
inc
jmp
cmp
imul
mov
repnz
fiaddl
push
in
dec
insb
xor
test
mov
ret
movsl
add
sub
or
inc
and
mov
add
cs
pop
ja
leave
icebp
dec
adc
rcr
leave
fnstsw
xchg
jecxz
stos
sar
xor
nop
xor
imul
cmc
mov
mov
fsubl
ja
mov
and
and
sub
xchg
shlb
lcall
xchg
jl
into
xor
lahf
add
daa
movsl
add
in
jno
sbb
push
lods
nop
loope
sub
jle
shrb
cmova
dec
dec
call
mov
js
mov
lods
leave
xchg
nop
fisttps
data16
mov
push
iret
bound
inc
add
andb
lea
jp
popa
dec
repnz
mov
lret
aad
bound
popa
lret
sub
jno
fwait
mov
pushf
add
xor
jnp
jl
add
daa
repnz
sbb
out
push
jb
out
in
aam
add
pop
mov
sub
hlt
ret
shrb
imul
aaa
pop
and
push
add
cwtl
inc
stos
mov
addr16
push
scas
mov
jmp
dec
fwait
insl
sbb
jae
mov
stos
xor
sbb
inc
loop
sub
jle
sbb
std
inc
sub
add
out
cmp
ja
pop
mov
add
inc
mov
rcll
jnp
inc
jg
das
lcall
ret
fldcw
aaa
rcll
mov
popa
lea
in
lahf
cs
jb
stos
inc
xchg
jno
add
mov
inc
adc
popa
adc
sub
xlat
lcall
subb
inc
cli
int
pusha
pop
jge
enter
mov
mov
inc
scas
sub
lahf
xor
arpl
add
bound
xchg
imul
arpl
cmp
popa
push
mov
inc
push
pop
and
xor
mov
sbb
leave
imul
xor
lret
mov
les
push
fcomps
mov
add
jno
lret
in
icebp
mov
jge
sub
sub
lea
xchg
lret
mov
pop
mov
int
mov
pop
jmp
sbb
outsl
loopne
xchg
int
mov
push
dec
xchg
xchg
leave
mov
sbb
adc
jns
insl
xchg
pop
cmp
sarb
sbb
push
mov
cmp
mov
out
pop
or
in
enter
rcrl
repz
inc
leave
ficoml
dec
pop
not
mov
in
mov
in
dec
lcall
or
test
dec
inc
adc
jl
repnz
mov
ss
mov
enter
inc
jno
add
pop
push
mov
mov
mov
mov
xchg
mov
stos
loope
dec
xor
mov
push
xor
data16
xor
xor
mov
pop
fwait
imul
add
adcl
pop
loop
push
icebp
mov
cmp
or
loop
dec
push
loop
pushl
jl
inc
daa
push
xor
push
inc
push
mov
push
push
rcrb
push
xchg
xor
push
iret
sub
push
push
jmp
movsl
jg
mov
data16
inc
push
mov
shrl
add
or
mov
pop
int
jmp
xlat
sbb
and
rcrl
lahf
insl
jp
mov
or
enter
imul
inc
jle
fwait
ud1
adc
cli
push
dec
ljmp
mov
divl
inc
mov
ja
sub
add
push
push
inc
loope
loope
dec
mov
xor
mov
fbstp
cli
xor
push
outsb
insb
aad
mov
jns
stos
aad
test
xchg
mov
int
sbb
adc
push
pop
out
aas
loope
pop
adcl
sub
rcll
jo
jl
or
cmp
or
mov
jp
xor
adc
stos
xchg
mov
mov
icebp
inc
sub
out
sub
pop
inc
xor
div
cli
xchg
inc
pop
jge
jp
and
imul
les
mov
aam
jecxz
jecxz
mov
push
xor
sbb
jle
cwtl
icebp
add
pop
dec
add
dec
mov
xor
cmp
sahf
in
push
or
add
cmp
cmp
pop
out
jns
adc
cmp
arpl
arpl
sbb
sbb
call
stos
out
push
push
jns
idiv
mov
xor
and
jae
mov
xor
mov
mov
aam
mov
lret
call
lock
ret
mov
leave
or
mov
sub
dec
pop
inc
into
loop
adc
jle
xchg
push
fidivl
xchg
cmpsb
xor
xchg
xor
sti
adc
cmp
sub
fidivl
data16
dec
lcall
push
xor
movsb
jno
lods
pop
pop
jmp
push
fnsave
hlt
xor
loope
sbb
andl
cmp
movsl
test
dec
cmc
ret
and
and
mov
sub
aaa
out
sbb
mov
divl
sub
lock
adc
sbb
aad
mov
fstpl
test
inc
adc
orb
push
out
mov
daa
cmp
dec
adc
out
adc
push
test
out
pop
sbb
mov
push
bound
and
popa
lcall
imul
movsl
lahf
fs
dec
cmp
push
ja
sub
xchg
insb
jl
shrl
lock
andb
sub
inc
inc
pop
ret
outsb
int3
dec
sbb
sub
fldcw
pop
loope
popa
pop
push
bound
aad
dec
jno
cld
fidivrs
mov
push
xor
movsb
cmp
outsl
add
jp
mov
cwtl
or
stos
popf
clc
or
dec
int3
jle
into
subl
sub
bound
inc
add
xchg
cli
int3
xor
loope
jecxz
sub
enter
in
and
arpl
out
loope
and
inc
push
xor
shl
mov
add
mov
and
jnp
mov
mov
shrl
push
lret
adcb
sbb
cwtl
mov
fucomp
dec
lcall
mov
in
sbb
push
add
inc
xor
and
jp
push
imul
and
or
mov
sbb
xchg
cwtl
mov
sbb
sub
shlb
hlt
jg
gs
push
xor
xchg
inc
data16
or
xchg
jl
in
outsl
pop
mov
dec
mov
js
lods
int
or
mov
mov
jmp
ficoms
cs
aaa
mov
sub
xchg
out
outsl
xor
std
mov
jmp
in
cmp
inc
mov
push
out
dec
leave
outsb
fnstcw
stos
add
addl
fiadds
fwait
dec
add
xchg
dec
fists
add
dec
das
aam
out
and
sahf
mov
fsubrl
xchg
sahf
dec
inc
stos
pop
fisubl
inc
lret
sub
jg
mov
test
enter
imul
mov
sbb
jno
popa
pusha
xchg
jae
test
into
insl
adc
push
dec
lahf
xchg
xchg
mov
xor
mov
lods
dec
dec
inc
aas
adc
sbb
leave
mov
inc
pop
adc
xchg
adc
loopne
push
adc
dec
dec
sub
cmp
xchg
xor
data16
mov
arpl
pushf
jne
sub
in
ficomps
xchg
cs
cmp
sub
ja
jne
fsubs
mov
dec
mov
cmp
or
jb
test
enter
push
movsl
add
pop
jns
jmp
addr16
cmpsb
sbb
mov
dec
bound
sahf
jmp
inc
icebp
arpl
sub
negb
jmp
jae
add
inc
sub
mov
mov
incb
jmp
push
stos
pop
jns
loope
xchg
stos
push
mov
loope
arpl
mov
aam
cld
iret
xchg
das
arpl
adc
mov
mov
jmp
xchg
xor
scas
rolb
sub
out
subb
mov
in
pop
out
mov
bound
fcmovnb
dec
shlb
insb
xor
jmp
lcall
ss
data16
jmp
aaa
in
les
cltd
inc
push
jb
xor
int3
xlat
data16
jb
jg
adc
dec
push
shrl
lret
pushf
cmpsb
jo
sbb
in
fwait
mov
cmp
push
inc
add
cli
int
icebp
jle
test
shrl
pop
sub
sahf
cli
xor
loop
addr16
add
js
adc
scas
mov
fsubrl
jno
cmpsl
stos
aam
jbe
addl
dec
fdivl
repnz
mov
and
movsl
jnp
lea
mov
lea
sub
mov
aam
cmp
mov
mov
daa
cmpb
int3
inc
pushl
fcoms
push
subl
add
lret
lret
jae
or
adc
pop
leave
push
loope
push
aas
fwait
sub
divb
daa
and
jecxz
ret
ret
loope
int
das
add
dec
push
add
jge
push
loop
jmp
pop
out
imul
dec
push
das
dec
in
cmp
das
add
jl
or
jge
inc
shrl
fisttps
xorl
jbe
cli
fldcw
rcrb
iret
mov
clc
subl
stos
lea
xor
mov
aad
xchg
aam
add
add
pushl
adc
inc
pop
cmpl
pop
adcb
arpl
mov
pop
jg
and
es
mov
fists
inc
lahf
rorl
icebp
je
negl
and
cltd
pop
dec
loopne
clc
ljmp
sbb
xor
icebp
mov
xlat
or
shrl
scas
and
sub
mov
add
stos
pusha
push
lcall
aad
jl
dec
inc
xor
mov
add
push
push
jno
in
mov
or
shll
insl
and
ror
out
inc
inc
push
adc
popf
mov
pop
idivb
stos
rclb
sub
xor
push
int
pop
ljmp
jp
stc
mov
enter
push
mov
push
shlb
mov
sub
aad
leave
lret
adc
mov
divl
xchg
arpl
dec
inc
mov
sub
push
popa
inc
adc
inc
repnz
imul
push
xor
mov
ret
pop
dec
xchg
clc
das
test
mov
rcll
cmpsl
into
loope
xchg
inc
pop
xor
or
add
cmp
pushf
push
xchg
dec
jecxz
push
cmp
sbb
mov
gs
pop
jl
jmp
add
cltd
pop
pop
jmp
shl
add
in
aaa
daa
sub
mov
mov
xchg
inc
mov
xor
iret
mov
fisubrs
jmp
and
pop
mov
sub
movl
bound
lods
stc
add
jns
mov
sti
dec
clc
enter
andb
in
sbb
icebp
fidivrl
jns
call
mov
sub
inc
in
sbb
cmp
je
sti
push
sub
and
popf
cs
pop
out
add
jle
fbstp
dec
jmp
gs
push
mov
mov
push
subb
int3
or
inc
push
sub
movsl
add
push
repnz
xor
mov
mov
inc
mov
sbb
xor
popa
fabs
inc
lret
mov
xor
int
push
popf
add
sbb
adc
push
inc
push
shrb
std
cmpsl
popf
cmpsl
das
mov
push
lret
dec
cmp
inc
push
inc
xchg
cmp
ficompl
out
iret
inc
imul
xor
inc
xchg
sub
mov
mov
jmp
push
jae
jge
push
bound
dec
jns
mov
rolb
adc
xchg
and
and
popf
sarb
mov
test
clc
call
add
call
mov
in
jns
adc
mov
faddl
mov
fcmovne
inc
ss
aas
adc
das
mov
and
pop
popa
icebp
mov
lods
cmp
cwtl
or
cld
repnz
pop
pop
cmp
xor
pop
ret
ljmpw
cmp
outsl
jg
sbb
sahf
sub
aad
js
sub
xchg
xor
int3
imul
divb
mov
mov
cmp
jp
insl
add
dec
fs
icebp
sub
call
cmc
out
push
sbb
push
imul
jecxz
popa
mov
jmp
fscale
ja
cmp
cmp
das
or
sbb
loopne
cli
movsb
dec
or
insb
cmp
in
repnz
mov
idivb
xor
shlb
inc
mov
mov
or
dec
sbb
xchg
idivb
push
and
inc
and
test
jmp
jge
adc
outsb
cmp
sub
pop
or
xor
sub
or
push
dec
aas
xchg
sbb
fbld
fldl
mov
movsl
pop
mov
movsb
mov
scas
or
sub
xchg
adc
mov
andps
arpl
xor
jnp
shll
movsb
aam
mov
lock
inc
inc
je
jmp
inc
rorl
inc
dec
dec
insl
sub
adc
mov
shll
inc
cmp
jb
testl
data16
ss
xchg
pop
pop
lcall
xor
mov
daa
rcrb
test
pop
push
out
mov
pop
mov
shr
adc
pop
xor
xchg
cmp
xor
arpl
mov
lret
scas
xchg
pop
dec
repnz
aad
std
bnd
cmp
sub
mov
push
sbb
adcl
mov
push
xor
or
jl
ficomps
in
inc
repz
push
cwtl
lea
jl
mov
dec
fisubl
rcrb
out
xlat
cs
inc
lock
pusha
nop
and
insl
outsb
rcrb
dec
mov
inc
sahf
cmp
dec
cs
shlb
sahf
shrl
pop
jo
fisubl
mov
pop
xor
push
clc
or
or
mov
jmp
mov
xchg
xchg
shl
jmp
or
jecxz
jo
sbb
sbb
mov
inc
insb
jne
sub
push
xor
push
push
jl,pn
mov
clc
test
mov
neg
out
imul
daa
ret
adc
test
aaa
int
cmp
std
push
dec
xor
gs
inc
imul
out
popa
mov
shll
inc
adc
popf
xor
mov
cmp
sbb
mov
arpl
jne
fwait
popa
add
inc
test
cmp
lret
mov
push
mov
pop
idivl
push
push
push
jno
jnp
xorl
jecxz
adc
adc
sbb
sbb
repz
mov
cmp
fwait
aaa
fstp
dec
jb
fstl
xor
rcr
aaa
cmc
xorb
xchg
add
push
jmp
jbe
or
adc
imul
pop
mov
cld
dec
mov
stos
popa
insb
xchg
arpl
mov
push
push
arpl
inc
jmp
sahf
insb
push
mov
sub
inc
xor
aam
stos
jb
xor
icebp
fwait
in
repnz
cltd
in
cli
mov
xlat
clc
adc
cmp
xor
jp
jae
add
inc
xchg
mov
xchg
adc
in
push
xor
cmpsb
bound
outsb
xchg
aam
imul
inc
mov
divb
or
lcall
jae
push
mov
push
add
dec
insl
add
lods
xorl
bound
mov
outsl
add
sub
push
aad
mov
push
aaa
andl
push
sub
add
test
xor
inc
cmpsl
dec
xorb
lock
outsl
jnp
je
call
adc
nop
insl
dec
call
ret
mov
movsb
icebp
in
or
lahf
inc
out
mov
mov
jno
mov
xchg
push
shll
pop
add
jns
jo
xchg
sahf
popf
adc
and
adc
sbb
push
push
and
sub
mov
arpl
popa
sbb
push
adc
push
inc
sub
jo
addr16
and
ds
fdivs
push
cmpsl
cmp
lods
outsl
xor
add
inc
xchg
adc
insb
sbb
mov
mov
sub
or
stos
sbb
or
lods
pop
push
bnd
and
push
sub
sub
fnstsw
jmp
pop
jne
int3
xchg
enter
adc
sbb
dec
or
inc
and
lcall
arpl
bound
jb
js
push
push
sbb
xchg
int3
dec
mov
sub
inc
push
jmp
jb
test
or
in
repnz
sub
imul
shlb
xchg
xchg
xor
sbb
outsb
lods
icebp
fsts
push
dec
xchg
lcall
repnz
jecxz
push
sbb
xchg
pop
xor
aad
xchg
testl
add
lea
inc
dec
shrl
sub
xor
loopne
lcall
aaa
dec
jnp
xchg
sub
sub
xchg
aam
xchg
popa
inc
inc
mov
or
cmp
lret
in
imul
das
mov
shrl
and
inc
xor
lods
lcall
and
xorl
shl
cltd
or
and
push
aam
dec
or
test
xchg
into
imul
xchg
in
fdivrs
stos
sbb
and
cmp
test
fcomi
ljmp
dec
and
pop
das
or
adc
std
stos
mov
mov
pop
xorl
sbb
addb
shll
push
inc
push
push
mov
xor
scas
scas
call
push
fistl
mov
or
xor
mov
add
jns
and
adc
cmp
test
lahf
je
iret
mov
arpl
inc
repnz
cmp
subl
inc
cmp
test
dec
adc
ja
call
jecxz
out
testl
idivb
mov
inc
lahf
mov
scas
gs
mov
pop
test
es
cwtl
test
movsb
dec
xchg
mov
xchg
iret
xor
notb
test
aad
pop
into
mov
push
popa
or
aaa
and
shld
addr16
xorl
xchg
add
outsb
imul
insl
das
inc
bound
call
mov
out
mov
cs
lea
fimull
jno
movsb
inc
mov
push
nop
loope
xor
and
ja
mov
stos
add
jno
or
aad
ljmp
sub
and
push
ljmp
mov
cmp
pushf
outsl
ret
ljmp
sub
dec
xor
adcl
cli
and
fsts
int
out
fdivrp
mov
add
mov
sub
xchg
enter
shll
jb
outsb
push
dec
adc
out
add
jle
xor
imul
lock
jae
shl
pop
inc
adc
sub
xchg
jg
pop
xor
loope
xchg
jo
push
push
jno
jmp
jge
stos
clc
dec
ja
jecxz
orb
or
push
jno
jbe
push
or
inc
in
push
adc
out
rcrl
cmc
mov
cmp
and
add
aaa
iret
imul
sub
pop
jnp
push
inc
inc
divl
adc
jp
dec
and
dec
cmp
mov
push
xchg
repnz
test
loope
pop
pop
dec
lcall
cmpsl
and
inc
enter
mov
fildll
xorl
mov
sti
pop
outsb
cltd
inc
adc
inc
fsubrp
into
pop
imul
mov
addl
add
and
fldl
add
xchg
jmp
std
stc
gs
leave
adc
jbe
loope
jno
shlb
mov
fbld
adc
dec
mul
sub
mov
sub
outsl
movsl
int3
in
jnp
add
bound
and
sub
push
lret
sub
sub
push
mov
data16
sbb
cltd
ret
lea
or
sub
lods
ret
dec
jb
mov
and
fdiv
std
or
gs
sarl
mov
dec
popa
loope
mov
mov
jl
sub
shlb
xchg
jge
jno
faddl
leave
inc
inc
mov
lret
xor
push
mov
cmp
and
loope
jle
and
stos
loop
mov
jle
stc
pop
jge
movsb
stos
mov
cmp
sarl
mov
sbb
pop
stos
xorl
mov
pop
xchg
add
test
adc
push
or
pop
xor
xchg
repnz
jg
push
xor
sub
das
push
mov
pop
jbe
jne
icebp
insw
addr16
inc
movsl
adc
imul
mov
xchg
xchg
jno
insl
pop
cmp
inc
jno
leave
lock
jecxz
push
pop
jns
mov
mov
dec
filds
rcr
mov
jno
adc
adc
mov
dec
adc
dec
les
xor
and
jg
ja
or
jb
data16
dec
pop
sub
mov
repnz
xchg
sub
mulb
dec
push
rcll
jg
adc
jb
imul
push
pop
lock
int3
push
push
jno
pop
dec
repnz
in
or
test
inc
xchg
aaa
subb
push
or
mov
and
fmuls
gs
sub
sbb
add
rcll
sbb
jo
mov
pop
aas
dec
mov
add
pop
jnp
cmp
xchg
mov
adc
pop
fsubrl
fsubs
insb
sub
pop
mov
mov
push
cli
pop
inc
dec
xor
push
sub
out
aad
movsl
inc
jnp
jnp
jns
dec
aas
dec
xchg
jo
insb
mov
test
mov
fists
ja
sti
sbb
dec
sar
test
xor
jno
mov
push
or
xor
cmp
inc
vmovq
cs
aam
jnp
shl
repz
fs
aaa
push
adc
or
inc
dec
cld
adc
lret
push
inc
lret
xchg
sub
dec
fs
inc
push
mov
xchg
mov
ljmp
push
dec
add
test
push
nop
mov
clc
bound
sbb
jmp
enter
mov
mov
or
data16
xor
shr
xchg
fwait
js
gs
or
outsb
mov
inc
add
fwait
xchg
into
add
jns
cmp
out
sub
adc
lcall
mov
fnstenv
repnz
aad
aaa
mov
mov
ret
mov
pop
imul
repnz
mov
sbb
test
jle
lds
or
stos
jnp
push
pop
xchg
jle
mov
repnz
pop
out
aad
xor
push
ret
rclb
add
jbe
xchg
fldcw
xchg
pop
loope
cmp
pcmpeqd
cmp
inc
xchg
adc
fmul
ljmp
out
jb
movsl
adc
lock
mov
imulb
es
ret
jmp
mov
gs
dec
add
fistpll
inc
xchg
add
inc
test
adc
push
fisubs
push
pop
pusha
lcall
cmpb
ret
ljmp
and
jg
int
add
add
pop
aas
xchg
xlat
add
movsb
dec
das
xchg
cli
cltd
movsb
jno
jmp
stos
shr
arpl
imul
adc
pop
cmp
pop
in
daa
xchg
outsl
cmp
or
adc
dec
int
mov
stos
jecxz
add
aam
push
xchg
data16
inc
fnsave
cmpsl
fwait
movsb
or
push
xor
adc
inc
arpl
cmp
rorl
add
mov
pop
enter
sbb
sbb
and
sahf
push
xorb
cltd
push
jge
inc
fwait
insb
and
cmpsb
out
fidivs
sbb
insl
push
sub
xchg
inc
add
pop
mov
jl
dec
daa
sbb
adc
aad
popa
and
rolb
stos
fs
roll
jae
sub
daa
lcall
cli
dec
xchg
icebp
mov
imul
in
cmpsb
sub
adc
mul
xchg
sbb
fsubs
xor
sahf
add
dec
fsubrs
inc
cwtl
jae
inc
push
andl
mov
inc
sbb
xor
jecxz
mov
gs
adc
imul
aad
xchg
les
es
leave
sub
add
inc
lods
incb
bound
xchg
jbe
mov
xchg
mov
adc
lea
pop
stc
sub
divl
mov
mov
aad
shr
fcoml
es
aad
out
call
outsl
jno
cmpsl
pop
inc
or
popf
ror
xor
sbb
and
test
jb
repnz
orl
std
cmc
xchg
sbb
bound
pusha
sti
sub
int
push
sbb
xor
add
inc
hlt
bound
stos
daa
testb
outsl
jle
bound
mov
popa
xor
arpl
flds
jle
sahf
bound
sbb
movhps
cli
jg
insb
sarl
insl
ret
add
mov
sbbb
outsl
ja
iret
insl
mov
and
jnp
arpl
out
lcall
std
ds
mov
mov
fistl
mov
cmpsl
mov
push
xor
fcmovb
ds
sahf
xchg
xlat
out
xor
mov
inc
mov
and
xor
jg
mov
add
cmpsb
das
and
or
pop
add
push
or
pop
into
jns
pop
or
lcall
push
outsb
add
and
subl
pop
imul
xchg
repnz
push
lret
cmp
push
inc
out
pushf
ja
bound
pop
ss
fldcw
inc
movsl
xlat
pop
imul
jmp
xor
fcompl
jg
aam
xor
mov
dec
shrl
xor
xorl
ljmp
sub
test
inc
push
mov
add
shrb
inc
stos
push
push
mov
fildl
mov
add
mov
mov
xchg
arpl
sbb
lret
jmp
aad
or
icebp
mov
inc
into
scas
xchg
adc
dec
cld
push
rcll
jno
testb
arpl
enter
bound
or
pop
rorl
test
int
mov
ret
dec
rcrl
push
xor
cli
gs
test
fs
cmp
dec
int3
ds
cmp
test
insl
xchg
inc
xor
cltd
mov
push
outsb
in
or
or
loope
dec
xor
adc
inc
mov
xor
push
lea
pop
jnp
jl
push
icebp
jne
icebp
scas
sub
loop
mov
pushf
js
popa
dec
jp
aam
jle
xor
test
mov
rorl
pop
push
dec
mov
loop
push
jecxz
out
pop
inc
mov
repnz
mov
lds
ja
mov
pop
mov
adcl
stos
jp
popa
test
sbb
lds
sub
sbb
jmp
pop
popa
xchg
mov
sahf
push
jo
pop
mov
lret
add
fstpt
js
fistps
or
ja
out
shrl
mov
push
nop
popa
insl
loope
int
or
pop
pop
mov
jle
das
cmp
push
sahf
psubusw
dec
mov
jno
sub
xchg
int
rcrb
sarb
mov
adc
aaa
dec
and
mov
popa
jl
add
sbb
push
mov
or
leave
sahf
dec
adc
push
sbb
sahf
in
insb
jle
dec
arpl
jbe
jge
or
cltd
xchg
jnp
push
aad
add
add
test
outsl
into
loope
inc
dec
into
loop
mov
fmull
dec
and
mov
pusha
gs
aad
xor
xchg
xor
push
jle
xchg
inc
xchg
je
or
sbb
das
or
sbb
push
pop
pop
push
bound
adc
cmp
cmpsl
fmul
push
jno
ret
xchg
imul
ja
add
test
roll
aad
jl
dec
js
jecxz
lock
xlat
loop
dec
add
xchg
add
xchg
or
and
or
jge
loopne
push
test
fucom
imul
out
push
dec
jns
inc
xorl
mov
lock
negl
pusha
into
lcall
jnp
jp
cmp
cld
lcall
inc
ror
jno
mov
dec
cli
lds
mov
dec
adc
and
xchg
in
les
mov
stc
jbe
inc
stos
sub
imul
xor
rclb
decb
out
xor
lods
xchg
sub
int
inc
push
hlt
push
mov
sub
insb
mulb
jmp
sub
and
mov
sub
or
sbb
xlat
int3
hlt
repnz
je
insb
xor
icebp
push
gs
jmp
and
xchg
xor
jno
testb
and
scas
testl
xor
sbb
mov
icebp
into
mov
add
cli
mov
fnstenv
xchg
inc
jg
sbb
inc
xchg
mov
pushf
pop
movsl
fnsave
xchg
sbb
cmpl
mov
cmp
fcoml
lods
push
mov
and
cmp
jmp
jecxz
mov
jge
pop
and
in
cmp
and
mov
insb
dec
sub
mov
pop
mov
jb
cmp
mov
rol
fldcw
rclb
xor
sub
sbb
xor
xchg
cli
xchg
mov
insl
inc
push
jno
in
cli
inc
push
sub
dec
add
inc
xor
inc
cmp
pop
xchg
jb
and
aaa
cmp
addr16
das
xchg
sub
xchg
popa
push
cmp
lcall
enter
dec
lcall
jge
dec
lret
and
cs
arpl
mov
lds
js
cwtl
and
and
shlb
test
orl
test
jae
addr16
inc
paddw
les
mov
mov
aad
mov
andb
lods
out
imul
add
add
jle
sub
push
out
imul
clc
aaa
xchg
sub
imul
shlb
inc
sbb
mov
push
insl
out
pop
and
add
pop
or
fisttps
cltd
jmp
shr
or
cltd
pop
jb
sar
ljmp
loope
or
rcr
adc
test
dec
ds
setbe
add
aam
popa
gs
test
addr16
int3
mov
mov
pop
ret
sarb
mov
insl
call
imul
ds
push
jmp
mov
pop
mov
and
xchg
and
and
dec
push
add
jno
rcl
loope
fwait
mov
adc
xchg
sarl
mov
push
jno
daa
inc
stos
cmp
shrb
pop
push
fwait
ss
mov
push
je
jmp
aad
in
sbb
fsubs
xor
leave
test
jo
les
dec
mov
in
push
mov
loopne
push
and
push
insb
fcomi
cmpsb
roll
popf
rorl
ret
imul
outsb
or
xchg
mov
mov
xor
jecxz
xchg
sarl
dec
fstl
aaa
ja
xor
lret
loope
dec
adc
movsb
sub
cmp
pop
clc
or
add
pop
imul
pop
mov
sahf
sbb
sub
lock
push
ja
push
imul
lods
iret
sub
inc
fldenv
jp
cltd
or
add
push
lahf
mov
decl
xchg
adc
sbb
out
xchg
jge
subb
mov
imul
inc
cmp
loop
mov
das
xchg
bound
jge
jb
push
inc
mov
cmp
test
or
ret
in
dec
shrl
insb
sbb
jp
ds
mov
lea
cli
pop
dec
test
flds
ret
cmp
cld
mov
mov
jnp
and
mov
ljmp
or
shll
loop
xor
inc
mov
pop
popa
xchg
mov
iret
pop
in
sbb
clc
adcl
sub
push
push
in
xchg
cwtl
mov
addr16
and
jmp
addr16
inc
test
movsl
call
pop
or
pop
mov
enter
pushf
ror
pushf
adc
popf
and
adc
push
das
and
arpl
xchg
mov
adc
mov
add
xor
movsl
xor
mov
lds
inc
adc
mov
int3
icebp
dec
int
shlb
dec
xchg
mov
xchg
shll
or
loope
int
loop
les
lds
cmp
pop
movb
push
push
lret
in
xor
mov
inc
lahf
inc
outsl
mov
inc
and
pop
mov
push
fxch
loope
xor
repz
mov
lcall
sbb
mov
fistps
ss
shll
aad
outsl
enter
nop
dec
push
and
bound
mov
mov
fldcw
inc
jle
sub
xchg
pop
jb
les
xchg
jp
push
and
and
inc
inc
jno
orl
inc
jno
sbbl
popa
inc
and
sub
xchg
xor
repz
jmp
xchg
jle
arpl
mov
int
mov
or
into
push
subl
push
mov
sub
push
jnp
ret
mov
cmpsb
dec
xchg
shr
or
or
and
jbe
xchg
jmp
pusha
pusha
jbe
enter
dec
cltd
movsl
mov
int
xor
adc
push
xor
xor
mov
lahf
push
ja
test
inc
xchg
pusha
fiadds
add
ss
aam
mov
push
pop
adc
push
jns
push
ja
fcoml
mov
adc
mulb
mov
cmp
es
hlt
cmpb
xchg
jecxz
and
dec
push
sbbl
addr16
jno
xchg
cmpsl
pop
and
jl
int3
je
shl
pop
adc
fisubrs
mov
sub
in
fnstenv
add
push
js
ret
inc
insb
iret
mov
mov
mov
cs
outsl
stos
out
jnp
es
fistpl
mov
andl
shll
sub
loope
cwtl
sub
sbb
and
inc
orb
fstps
mov
vunpcklpd
jp
shr
clc
xchg
mov
jecxz
rol
lret
jg
inc
xchg
dec
mov
andl
sar
loop
repnz
jns
and
test
pop
jno
push
push
adc
jnp
cmp
mov
inc
sub
sbb
dec
bound
inc
dec
sub
outsl
iret
jnp
ljmp
das
addr16
popl
adc
dec
movsb
push
inc
pushf
jne
mov
ja
fldenv
mul
mov
shl
jg
cli
outsl
roll
out
push
inc
fnstcw
ja
mov
loop
out
xchg
and
adc
pop
popf
mov
movsb
shll
insl
imul
shr
mov
fidivrl
mov
lea
dec
outsl
mov
push
jno
mov
iret
sbb
insl
cmc
repz
push
leave
xchg
subb
inc
data16
test
lds
sub
cmpsb
sbb
sub
inc
sbb
add
aaa
sbb
in
jp
lds
dec
cmp
and
les
addr16
add
clc
sbb
lret
pop
mov
sarb
inc
nop
jge
xchg
test
icebp
push
add
sbb
add
mov
xchg
xchg
mov
ret
int3
mov
and
int3
insb
mov
sub
inc
mov
dec
jae
dec
xchg
nop
xor
xchg
lcall
inc
popa
and
lock
shll
lcall
outsb
clc
dec
pop
push
dec
jae
and
sbb
mov
aad
push
adc
leave
and
test
stos
cwtl
xchg
xchg
and
std
xchg
lcall
mov
adc
sub
out
fnstcw
sahf
or
enter
sbbb
lds
jg
add
loop
xchg
adc
test
cmp
sbb
ljmp
inc
cmp
jge
xlat
mov
jecxz
push
ret
cmp
xor
pop
popa
or
imul
in
mov
popf
mov
loopne
es
push
loop
push
add
dec
mov
add
mov
and
scas
or
adc
push
xorb
mov
adc
int
cmp
lock
mov
xchg
out
imull
into
mov
icebp
stos
iret
xor
or
adc
cmp
push
xchg
fstpl
lods
pushf
loope
rcrb
into
mov
push
sbb
inc
or
sbb
lods
adc
out
mov
imul
cmp
std
push
jb
or
jle
les
ja
jnp
imull
mov
rcll
sbb
daa
mov
xor
subl
push
rorl
popa
push
jns
sub
scas
imull
mov
divb
sbb
stos
push
clc
mul
imul
ret
fnstsw
out
mov
xor
jmp
sub
or
inc
into
and
andb
sub
int3
cmp
lock
sahf
push
xchg
mov
xor
mov
popf
adc
or
aaa
insb
cltd
dec
lcall
inc
iret
dec
jno
pop
fwait
sbb
sbb
push
mov
sarl
mov
cld
inc
sbb
xor
pop
pop
cvtdq2ps
outsb
int
jbe
ja
call
test
add
cli
mov
xchg
and
ljmp
movl
push
das
scas
or
or
stos
sti
and
add
and
sub
push
fldcw
out
int3
inc
ret
ror
sar
push
cmp
xor
iret
push
sbb
xchg
in
roll
mov
mov
hlt
mulb
jg
cmp
dec
xor
adc
push
pop
cmpsl
cs
test
fisubrs
inc
test
adc
mov
adc
inc
sbb
andb
mov
mov
enter
push
hlt
lock
sub
mov
sub
pusha
xor
jp
testl
arpl
repnz
gs
insb
mov
and
sub
icebp
fs
inc
je
push
and
jno
sub
movsb
test
lret
out
outsl
push
mov
decb
xor
push
jno
ret
dec
imul
pop
inc
std
or
fdivl
mov
aam
aas
mov
mov
lret
adc
call
test
popa
movsl
cmp
sbb
out
test
lret
rorl
loop
pusha
or
jmp
ds
xor
into
sbb
ficoms
xor
xchg
mov
mov
xchg
jb
mov
cmpsb
and
push
sub
jl,pn
cmpsl
push
nop
mov
insb
or
pop
inc
and
lods
adc
sub
andb
dec
clc
fistps
mov
out
adc
insb
xor
stc
pop
fs
movsl
lods
pop
fildll
addl
cltd
push
or
dec
call
ficompl
pop
shlb
mov
fld
push
std
dec
push
add
shlb
sbb
pop
xor
adc
sbb
clc
aas
imul
adc
push
sub
stos
in
xchg
mov
push
lods
mov
iret
fisttpll
jno
movsl
cmp
or
push
cmpsb
pop
rorb
push
out
sub
rcrl
mov
sahf
xor
sbb
pusha
jne
dec
push
fidivrs
inc
gs
sub
rolb
insb
pop
pop
dec
xor
sub
adc
inc
pusha
sbb
scas
dec
je
test
lcall
sub
inc
push
loope
es
cmc
push
adc
mov
xlat
cmpsl
repz
and
aad
mov
rcl
or
fwait
sarl
add
push
sub
and
js
imul
xchg
dec
dec
jno
jl
call
ljmp
mov
and
jle
mov
dec
xchg
mov
push
adc
lret
test
inc
inc
jno
cmp
movsl
cli
cmp
sub
loope
sar
imul
lods
rcll
push
push
sti
inc
mov
and
dec
roll
push
inc
mov
ret
xchg
inc
xchg
in
pop
inc
mov
inc
cmp
cmc
inc
insl
add
cwtl
add
push
testb
cmp
mov
jo
dec
xchg
inc
ss
lea
pop
push
ds
sub
adc
push
push
xchg
mov
jmp
and
dec
mov
push
jmp
push
das
in
andb
add
pushf
push
arpl
mov
outsl
adc
push
std
mov
addb
cli
dec
shlb
daa
push
daa
sub
lock
mov
lahf
or
loopne
push
jle
enter
inc
pop
mov
or
repnz
ret
loop
cmc
les
add
gs
jp
pop
test
mov
popa
pop
in
dec
sbb
and
test
outsl
mov
fisubl
loope
std
sub
hlt
mov
jnp
movsb
dec
outsl
popa
mov
dec
cld
or
push
es
inc
daa
cmpsl
cmp
mov
inc
repnz
add
jb
cs
dec
jmp
in
repnz
pop
out
push
pop
bound
jno
popf
mov
sub
jnp
xchg
adc
fisttpl
popf
pop
nop/reserved
data16
xor
jae
test
subb
xchg
imull
cmp
mov
mov
das
push
pusha
fidivs
stc
clc
dec
icebp
bound
imul
push
inc
imul
sbb
push
push
sbb
js
in
aam
dec
inc
dec
add
fildll
pop
scas
shrb
xlat
jle
loop
inc
cmp
pop
xchg
int
in
jmp
or
push
xor
jg
jbe
das
pop
sub
inc
mov
jne
test
or
outsb
push
insl
pusha
xchg
cmpsb
popl
rclw
and
jnp
sub
inc
xor
mov
mov
loop
xor
mov
jecxz
add
mov
inc
pop
or
aaa
int
sbb
fsts
mov
inc
mov
adc
mov
insl
sub
shrb
aad
xchg
out
dec
lahf
sbb
out
xorb
cld
popa
inc
cwtl
inc
pop
aas
testl
mov
test
push
sbb
sbb
cmp
flds
pushw
pusha
mov
mov
jp
add
lcall
jmp
jno
jmp
aad
jp
xor
imull
or
inc
ljmp
subb
cwtl
rclb
jge
inc
dec
fildll
shl
jl
out
pop
insb
and
xor
andl
inc
movsl
loop
sub
xor
xorb
fwait
dec
or
in
filds
jg
cmp
push
insl
orl
pop
fadd
pop
js
mov
add
and
gs
inc
pushf
sub
inc
jge
jecxz
cmp
push
arpl
add
or
dec
and
push
cmp
sub
add
xchg
shrb
jno
jl
mov
adc
and
scas
popf
add
xchg
fs
mov
jecxz
lds
adc
dec
inc
xchg
add
pop
stc
addr16
js
push
bound
in
adc
cmp
roll
in
push
ficoml
popa
jns
xlat
bnd
cmp
bnd
push
and
sub
inc
inc
pusha
jno
lea
std
mul
cmp
aas
sub
inc
xor
cmp
mov
popa
or
mov
int
or
cltd
mov
jne
sbb
and
cmp
jecxz
sbb
aaa
sahf
mov
sub
es
jae
pop
or
add
insb
shrl
inc
add
imul
pop
fdivl
mov
fldenv
sub
in
mov
loop
xor
add
dec
lcall
arpl
pusha
push
lret
push
sub
pop
xlat
push
dec
idivb
aas
movsl
in
mov
mov
js
jmp
xor
rorb
std
mov
cwtl
sbb
inc
mov
pop
xor
ficoms
movsl
test
inc
mov
mov
inc
imul
pop
jne
pusha
cwtl
push
or
cmovl
push
dec
fsub
sti
or
call
lock
sub
fwait
add
jmp
inc
in
fdiv
mov
mov
jp
sbb
mov
xchg
push
icebp
repz
push
adc
sub
gs
inc
adc
imul
out
into
cmc
repnz
dec
call
and
and
inc
add
mov
sahf
test
xchg
push
fidivs
mulb
dec
xchg
push
xor
xchg
fdivrp
popa
mov
jno
mov
sub
add
add
les
sbb
outsl
inc
xchg
fiaddl
repnz
cwtl
inc
mov
nop
and
fs
cmp
sbb
lods
pushf
call
sbb
ss
call
test
jno
inc
mov
mov
mov
jo
mov
jns
rol
enter
push
push
iret
js
jno
lea
pop
xchg
arpl
shlb
sub
push
mov
pop
xchg
push
fwait
das
mov
pop
jmp
negb
inc
and
cmp
and
xor
rol
rcll
jg
push
inc
adc
xchg
imul
xchg
xor
or
push
outsb
pop
mov
mov
mov
pop
jmp
adc
adc
sbb
ja
push
pop
mov
fnsave
movsb
nop
gs
jl
dec
jns
adc
xchg
cmp
in
iret
fcomps
js
and
and
xchg
adcl
cwtl
mov
and
inc
adcl
inc
xor
sti
push
jge
popa
inc
mov
mov
or
icebp
test
jno
cli
cmp
dec
sub
es
xchg
pop
push
mov
in
mov
inc
jmp
push
sbb
shrb
jns
mov
push
sub
fsubrs
nop
xor
jae
lret
inc
in
add
repnz
jno
lods
sub
pop
pop
or
mov
jmp
sbb
std
or
sub
or
imul
jo
gs
sbb
mulb
aam
addr16
lcall
sarb
dec
add
sub
push
enter
or
jecxz
pop
gs
outsl
xchg
adc
imul
push
sub
lds
jne
xchg
adc
xor
lea
sahf
dec
aad
out
fstl
inc
inc
inc
es
add
rolb
lret
loop
movsb
add
dec
mov
inc
xor
icebp
mov
push
adc
add
cld
mov
shlb
sub
xlat
xor
lock
dec
js
bound
push
es
push
fisubs
mov
add
and
dec
imul
mov
jp
gs
jne
icebp
pop
outsb
ret
mov
jno
loop
pop
pop
xor
push
or
lods
cltd
dec
cwtl
cli
call
pop
out
add
pop
sbb
icebp
push
mov
sub
push
mov
mov
push
jecxz
aaa
pop
cld
in
fnsave
sub
and
leave
adc
divl
into
cmp
push
ja
adc
xchg
orb
pop
and
pop
sbb
into
insl
mov
mov
fwait
gs
xlat
lahf
pop
cltd
andl
lods
stos
push
data16
std
pop
add
cmpsl
pushf
decb
insb
adc
xchg
sbb
movsl
cltd
or
xchg
cs
sbb
enter
insl
push
pop
and
or
or
xor
push
pop
dec
cli
es
cld
mov
cmpl
in
in
iret
mov
dec
xor
pop
or
dec
mov
shll
pushf
das
push
into
movsb
movsl
inc
fwait
shlb
cmovge
cmpl
xchg
mov
and
sub
push
mov
fsubl
inc
push
jmp
push
popa
cmpxchg
xorl
push
or
stos
push
popa
divb
push
icebp
mov
mov
jae
es
or
mov
jns
fnstsw
pop
xorb
or
notb
push
sbb
movsl
lahf
cs
rolb
sti
pop
sbb
dec
rorb
mov
add
or
pop
xlat
into
cmp
dec
sbb
and
test
dec
sbb
cltd
push
push
dec
fwait
out
dec
std
xor
lcall
or
push
addb
out
jno
sub
xchg
jae
aad
cmpsb
or
add
dec
cmp
in
inc
inc
mov
fsubr
sbb
test
or
dec
in
dec
popa
xor
xor
add
shlb
sbb
pop
sbb
mov
fcoml
pop
and
addr16
movsb
jae
sti
add
arpl
jge
je
test
leave
out
or
push
inc
xor
ds
push
xor
sbb
ljmp
pop
loop
dec
cmpsb
push
rolb
stos
mov
outsb
lcall
lods
sub
xor
mov
aaa
jp
out
in
fmul
scas
dec
adcb
pop
jno
test
pop
push
mov
inc
aad
xchg
hlt
out
inc
sahf
orl
subl
push
lret
and
sub
jb
sbbb
loop
xchg
fs
arpl
sbb
and
into
lahf
add
enter
scas
xlat
xor
mov
icebp
mov
out
loope
fdivp
adc
dec
xchg
in
jp
ret
push
mov
test
popa
dec
test
add
sbb
push
push
and
mov
sahf
test
sub
addr16
cmp
es
xor
aaa
icebp
ljmp
cli
mov
cmp
in
rcrb
mov
mov
mov
sbb
outsl
cltd
jnp
dec
pusha
inc
insb
shlb
sub
test
insb
push
imul
add
sub
movsb
pop
adc
adc
out
loope
and
mov
adc
shlb
cmp
add
sti
jno
pushaw
jns
int3
outsl
xor
sti
fcmovb
outsb
arpl
push
jo
pmaddwd
insl
les
lahf
push
cli
dec
loope
push
xor
sbb
or
sbb
fnsave
arpl
sub
psubsb
and
je
cmp
xchg
xchg
mov
or
xor
jg
cwtl
sahf
xchg
cmpsb
or
shll
daa
jge
loop
outsl
jo
negb
decl
imul
fwait
mov
outsl
push
fsubr
daa
xchg
outsb
int
fldl
or
xchg
loope
lahf
xor
cli
sub
add
int3
inc
push
enter
in
jg
dec
lcall
sahf
and
popa
test
push
mov
loope
js
scas
testl
and
lods
shll
mov
cmp
sbb
mov
lock
cli
repz
push
pop
add
cmp
dec
cld
and
orb
into
adc
mov
loope
aaa
sub
lds
adc
mov
dec
leave
mov
call
inc
adc
sbb
loope
add
add
jo
pop
imul
mov
loopne
in
inc
imul
pop
dec
mov
dec
pop
int3
jmp
bound
icebp
adc
adc
testb
fstl
inc
divl
ss
push
xchg
popa
in
call
addr16
inc
loop
cmpsl
inc
jmp
inc
aaa
mov
int
mov
and
pop
mov
cwtl
int
jle
andb
out
jnp
lret
stos
mov
mov
add
mov
jecxz
adc
test
sub
jmp
cld
pop
insb
or
cli
fisubrl
pop
lahf
mov
enter
insl
sbb
jo
insl
add
std
mov
mov
call
jno
out
and
add
inc
dec
dec
mov
sub
inc
inc
jle
push
call
ss
jbe
leave
pop
adc
movsb
pop
sbb
push
mov
insl
cmc
shrl
jmp
pop
xchg
xor
add
sti
js
jae
xchg
inc
rcrl
add
fwait
dec
int
jb
dec
gs
xchg
push
movb
cmpsl
loope
push
xor
bound
pop
int3
mov
test
pop
mov
or
or
sbb
pusha
jl
or
add
xchg
add
mov
loop
rcrb
popa
xchg
sbb
les
push
add
aaa
xor
pop
add
push
call
sbbl
shlb
mov
push
adc
mov
fiadds
icebp
cld
add
inc
insb
fld
dec
push
jp
jnp
pop
pop
jbe
sub
mov
jno,pt
inc
inc
push
int
adc
dec
fs
push
test
in
test
enter
aad
jns
enter
data16
mov
push
icebp
sbb
inc
testb
mov
cmp
add
inc
rorl
pop
mov
mov
outsb
jb
adc
imul
jle,pn
pop
inc
jecxz
mov
addr16
sub
lock
daa
aam
sbb
test
pop
out
inc
jge
bound
ret
sub
push
mov
mov
int
mov
jge
dec
out
in
push
add
xchg
jmp
movsw
loope
shr
inc
cs
jns
dec
sbb
mov
cmp
ja
mov
jo
rep
sbb
inc
sub
mov
inc
arpl
mov
mov
cmp
inc
mov
mov
movsb
xchg
push
enter
pop
adc
push
inc
mov
mov
push
xor
fldl
sti
sub
cli
cmp
data16
loopne
sarl
popf
shll
pop
rcl
jge
xchg
int
bound
cmp
faddl
push
stos
rclb
dec
cmp
xchg
inc
mov
jp
jae
adcl
pop
mov
pop
and
sbb
je
jecxz
shl
orl
insb
xchg
mov
jno
or
push
mov
in
jge
mov
cs
test
or
outsb
subl
in
adc
imul
cwtl
lret
mov
xor
in
cld
cs
mov
out
push
pop
and
mov
icebp
mov
popa
lea
xchg
inc
daa
push
cwtl
dec
shlb
add
mov
sub
lock
and
iret
outsb
out
xor
icebp
cmc
popa
dec
inc
dec
popa
push
mov
xchg
mov
inc
pop
inc
jb
out
xor
sbb
jno
shrl
stos
push
push
into
clc
fnsave
stc
test
ljmp
or
jmp
pop
pop
xchg
jns
into
push
hlt
rcrl
outsb
pop
pop
movsl
jno
xor
dec
push
add
adc
sbb
mov
pop
push
xchg
je
pop
inc
mov
mov
cmp
dec
inc
xchg
int
mov
sub
adc
push
arpl
sub
sub
dec
xor
push
dec
push
inc
lret
mov
adc
adc
hlt
push
inc
cli
xor
les
out
jmp
push
je
popf
jae
xchg
jle
call
repnz
in
aas
inc
dec
xchg
jno
fs
add
leave
lcall
das
lock
mov
repnz
sub
inc
and
xor
cmp
cmp
lcall
jno
lods
jns
enter
arpl
adc
into
cwtl
push
cmp
out
push
cltd
add
loope
adc
cld
mov
xchg
out
mov
jge
imul
test
fcompl
jae
jno
and
out
stos
cmp
lea
cmp
test
mov
test
mov
dec
mov
inc
imul
adc
es
jmp
push
std
jo
jmp
adc
push
les
xor
pop
lret
call
and
inc
loope
mov
pop
jmp
xor
imul
inc
test
add
add
or
lods
fisubrs
dec
rcl
fs
lahf
dec
mov
add
add
ffree
xor
jle
mov
test
rorl
cmp
cmp
mov
cmp
mov
jae
jae
and
push
or
in
popa
sbb
xchg
jl
sub
xchg
in
jae
ficompl
test
jecxz
cmpsb
in
cmp
jl
insb
mov
mov
lret
mov
bound
shll
inc
mov
adc
dec
mov
sub
leave
mov
sarl
xorl
popa
ljmp
jnp
add
fiaddl
cli
and
loope
add
aam
cmp
movsb
jg
fsubrl
enter
sbb
push
dec
out
mov
mov
shll
imul
jnp
pop
enter
jge
andb
pop
sti
cmp
sbbl
mov
xchg
gs
mov
mov
rorl
mov
icebp
jno
mov
test
dec
dec
push
pop
jns
cmp
mov
movsb
aaa
mov
xchg
mov
fsubrl
iret
inc
pushf
js
push
jno
js
mov
int
sub
scas
add
jno
loop
jl
out
mov
mov
adc
rorl
inc
dec
push
fsubrl
fsub
jge
mov
cld
xchg
jno
int
xchg
in
xchg
lahf
xor
adc
add
outsl
pop
shrb
sbb
roll
dec
andl
mov
mov
cli
in
arpl
inc
and
addb
jbe
movsb
bound
jg
and
fdivl
dec
mov
jbe
jno
je
xchg
and
mov
repnz
sbb
xchg
push
xchg
pop
pop
jno
fiaddl
mov
pop
hlt
inc
pop
pop
mov
sar
xchg
les
xchg
jmp
jno
test
gs
out
dec
jno
inc
jbe
and
and
xor
enter
inc
aam
gs
push
in
movsb
arpl
sbb
arpl
dec
mov
fstps
xor
sub
das
lds
jl
dec
insb
ds
adc
jne
rorl
jne
xor
ret
push
insb
cmpsl
loope
shrl
insb
or
xor
cmp
js
sub
sub
inc
mov
push
inc
test
xor
imul
imul
shrl
and
mov
outsl
dec
decb
outsb
vphaddubq
int
inc
mov
adc
std
lahf
mov
jmp
sub
or
add
dec
mov
pop
lds
and
stos
fiadds
imul
leave
test
push
in
jb
push
stos
leave
mov
int3
outsl
jno
sbb
inc
out
fwait
bound
jl
fsts
or
jl,pn
jecxz
xor
stos
shl
loope
sbbl
dec
popa
sti
jle
push
xor
or
mov
stos
cmp
mov
bound
mov
xor
inc
jmp
add
test
inc
lods
bound
mov
push
mov
cs
outsl
leave
popa
jecxz
cmpl
cmp
es
gs
dec
scas
pop
imul
imul
ljmp
out
cmpl
mov
mov
movsl
loope
iret
jecxz
test
inc
cwtl
pop
rorl
and
cwtl
gs
mov
push
hlt
fmul
add
push
jbe
ficoms
jmp
in
out
mov
bound
mov
sti
xorl
lds
mov
gs
xchg
jmp
ret
ret
push
je
cmpsl
fimuls
iret
ss
not
mov
popa
cli
xor
sarl
and
push
outsb
push
jo
push
je
repz
loopne
jne
jb
push
mov
andb
scas
hlt
roll
movsl
lock
andl
push
and
sti
add
push
push
mov
icebp
pop
inc
xchg
sub
push
int
mov
out
stc
test
inc
cmovno
stc
cmp
test
mov
dec
inc
inc
lahf
sub
shr
push
cmp
in
sub
addr16
dec
pop
cmc
xchg
xchg
xor
test
adc
pop
mov
imul
xchg
push
or
mov
jb
test
mov
cli
mov
int3
loop
orb
les
pop
sub
sahf
inc
lds
sub
les
mov
cmp
sub
add
push
cmp
aam
mov
les
imul
ja
xchg
movsb
sub
shlb
ret
aaa
xor
dec
jb
call
add
test
addr16
rolb
or
xchg
sbb
mov
in
ret
mov
outsb
push
mov
divb
fsubs
out
andb
int
or
insl
jge
push
push
push
pop
cld
and
xor
mov
clc
push
lds
mov
and
inc
stos
sub
adc
incb
mov
xchg
push
popa
andl
inc
nop
testb
jge
sub
gs
mov
mov
pop
pop
jmp
jmp
cmp
mov
dec
cmp
cmp
pop
and
enter
dec
sub
push
jne
sub
icebp
sub
or
and
pop
cmp
mov
in
aas
mov
mov
pop
jno
int3
mov
jg
scas
loop
sbb
jg
mov
int3
int
fdivr
aas
ss
pop
xchg
sbb
jl
addr16
jo
testb
rcr
aaa
lods
outsl
fcompl
mov
mov
cmp
push
ret
aad
cld
or
and
sbb
xor
xor
int3
inc
push
lcall
es
push
add
insl
inc
sbbl
add
inc
movsb
dec
fisubs
andl
jae
loope
cmp
xor
or
mov
mov
test
push
xor
iret
inc
sbb
jns
insb
loopne
sbbl
mov
and
cmpsb
loope
sbb
movsl
mov
jmp
and
xchg
sbb
sub
sub
and
xorl
sahf
add
adc
lock
rcrl
sti
sbb
xchg
arpl
das
repz
flds
loope
mov
gs
mov
outsl
dec
cmp
inc
clc
ljmp
lods
xor
pop
mov
insb
imul
jg
pop
push
inc
and
mov
insb
mov
mov
and
lret
jl
cmp
cmp
addl
ret
cwtl
lods
or
popa
rorb
inc
cwtl
pushf
repz
outsl
shll
sub
dec
repnz
bound
xor
insl
lock
cli
data16
cmp
xor
vcvtpd2dqy
ret
insb
jb
rclb
cmpb
mov
stc
push
jle
imul
sub
jmp
dec
push
ljmp
xor
xor
shll
in
pop
std
int3
rcrl
and
jb
out
xorl
loopne
push
mov
addb
xor
add
xchg
sub
sub
dec
lds
xor
in
jle
adc
inc
aaa
clc
pop
mov
in
cmp
add
in
sbbb
and
cmc
enter
or
dec
jle
lods
mov
movsb
mov
jp
fnstsw
push
jp
push
sub
xchg
sub
imul
dec
ffree
mov
cmpb
jge
mov
daa
and
rorl
ret
mov
jne
lret
adc
lret
cmp
inc
gs
sub
bound
xor
aas
mov
mov
addb
movsl
inc
or
and
jecxz
pop
outsb
insb
inc
mov
xchg
mov
and
in
sahf
lods
std
xchg
insb
out
mov
movsb
cwtl
dec
ljmp
sub
push
xchg
gs
mov
mov
jnp
fnstsw
icebp
stos
xchg
in
arpl
xchg
jmp
jmp
mov
xchg
pop
dec
push
mov
xchg
test
or
push
mov
sbb
fs
insb
jno
sbb
imul
mov
and
arpl
mov
lahf
out
mov
mov
inc
jbe
sahf
xor
inc
int3
xor
sub
sbb
push
pop
sub
imul
adc
inc
xor
xor
shll
adc
dec
push
fcompl
sbb
jp
rorl
lret
aad
filds
je
fistpl
push
sbb
jecxz
loopne
lcall
outsl
and
inc
repnz
xor
movsl
sub
incb
sub
imul
pop
xor
daa
nop
and
xchg
pushf
xor
push
pop
mov
cs
xor
lds
jmp
inc
xor
popa
lcall
xor
pop
push
push
mov
rcrl
scas
mov
pop
cld
les
dec
bound
or
pop
int3
xor
ds
addr16
mov
xor
int3
fcoms
inc
bts
nop
adcl
inc
mov
jmp
pop
cmp
inc
push
push
ror
xchg
and
ret
adc
stc
shrb
sub
xchg
loop
cmp
sub
pop
aas
mov
cmp
or
inc
mov
daa
cmc
or
stos
in
lea
std
xor
cwtl
stos
dec
cmp
shlw
jnp
insl
xor
xor
fmull
adc
mov
and
xchg
push
or
ss
int
inc
insl
or
inc
jne
mov
cld
cmp
or
sub
mov
std
cmp
pop
insl
dec
imulb
fwait
pop
aaa
inc
cmova
clc
pop
lods
fwait
imul
cmp
sub
sbb
mov
and
pop
pop
add
loope
stos
cmp
std
pop
fucom
push
add
ss
cmp
notl
das
adc
aaa
hlt
imul
jmp
mov
and
xor
hlt
pusha
pop
and
arpl
mov
inc
into
push
in
lds
rcrl
pop
jbe
jns
mov
mov
jle
popf
pop
sbb
mov
jl
lods
pop
mov
mov
les
aas
mov
sub
in
les
fcmovnb
imul
outsb
int3
imul
push
push
loope
push
cmp
mov
and
jp
repnz
les
pop
shl
int3
mov
inc
cmp
xor
and
mov
xor
jno
je
adc
or
sbb
out
dec
inc
data16
scas
hlt
mov
mov
inc
sub
push
and
and
stos
add
leave
or
jb
or
xchg
push
cs
xor
outsl
and
xor
iret
xlat
mov
sahf
pop
mov
aad
stos
bound
movsb
mov
sub
and
and
dec
addr16
xchg
arpl
xchg
sub
outsb
jbe
movsb
push
jle
sub
push
inc
repnz
cmp
lcall
xchg
and
cmpl
add
sbb
push
dec
pusha
pop
adc
ret
push
and
mov
jbe
call
std
dec
adc
pop
jno
ret
test
adc
sub
nop
and
imul
inc
and
xchg
push
idiv
rolb
test
test
mov
sbb
xchg
enter
cmp
enter
adc
sbb
insl
insl
ss
imul
and
push
in
pop
inc
jmp
dec
jbe
pushf
add
xor
shll
add
pop
and
ret
cmpsl
dec
jge
dec
xchg
out
mov
lods
mov
mov
fnstsw
outsb
and
bound
push
inc
and
cmp
lds
div
aaa
int
mov
rorb
adc
sbb
daa
dec
add
xlat
cli
push
xor
imul
pop
or
mov
jns
sub
faddp
bound
popa
icebp
xor
add
dec
push
adc
cli
icebp
or
sbb
mov
jne
mov
cli
jo
leave
stos
data16
push
ljmp
push
jmp
cmpsb
inc
xor
lahf
jae
inc
mov
or
popa
pop
pop
jo
cmp
inc
dec
jo
sbb
out
and
insl
cmp
dec
jecxz
sub
sub
inc
push
jl
loope
cmp
in
les
add
xor
xor
popa
roll
divb
stos
icebp
popa
mov
rcrl
int3
lret
das
ror
int3
aaa
adc
addr16
xor
mov
dec
movsb
aad
or
aas
jg
push
mov
mov
mov
inc
cmpsl
mov
xchg
out
sbb
xor
pop
cmpl
pop
inc
push
cmpsl
test
scas
js
mov
push
in
push
inc
mov
int3
dec
dec
shl
push
dec
in
sub
sar
enter
push
mov
adc
or
cmp
push
sbb
dec
lret
mov
adc
outsl
hlt
jo
mov
shlb
stos
inc
cmp
inc
inc
cwtl
push
xor
ret
sbb
lods
scas
addb
test
movsl
stos
das
xor
out
test
in
je
mov
mov
jb
push
push
pop
jge
inc
aam
mov
loop
sbb
stos
jnp
ffreep
adc
dec
and
mov
xchg
dec
dec
inc
ret
scas
movsl
mov
mov
inc
adc
out
xchg
pop
and
in
arpl
push
aam
jg
xor
xor
jge
push
jle
or
int
sbb
jl
mov
andl
inc
mov
sub
popa
xchg
loop
insl
jge
cmp
mov
hlt
adc
std
fdivl
ret
xor
frstor
pop
sarb
cltd
insb
xchg
or
inc
rolb
call
nop
popf
mov
mov
pop
cmp
jne
sub
rcl
cltd
and
pushf
cmp
pop
loopne
test
sub
repz
jp
inc
or
popf
push
xchg
rolb
and
inc
jne
mov
inc
jle
sub
cli
sub
sub
call
cmp
xor
iret
lahf
bound
push
xchg
adc
sbb
jne
test
mov
and
jecxz
xor
loope
pop
out
xchg
sub
add
add
jp
mov
adc
mov
push
sub
cmc
lds
sub
and
pop
sbb
sub
loop
jbe
xchg
in
and
mov
inc
sbb
cmp
and
jmp
scas
add
jl
ret
inc
stc
and
ss
xor
mov
scas
jge
or
add
test
aam
dec
in
iret
addr16
dec
xchg
movsl
dec
xlat
test
aad
ss
daa
push
ja
pop
mov
mov
inc
in
and
inc
mov
loopne
mov
out
mov
ds
sbb
in
fidivrl
jecxz
mov
mov
ret
ror
dec
mov
scas
sub
test
and
sub
out
mov
aam
lret
cld
xor
into
aam
pop
dec
test
xchg
inc
adc
pop
gs
test
fucom
adc
or
push
add
fisubl
clc
and
sarb
lods
xchg
add
dec
sub
lahf
cmp
rcrb
mov
int3
lods
xor
jge
dec
gs
test
dec
jae
lahf
xchg
mov
mov
mov
push
dec
dec
les
jecxz
push
dec
test
arpl
mov
mov
sbb
mov
cmpsl
icebp
out
cmp
xchg
sub
dec
jne
mov
lods
es
pop
ret
inc
sahf
aaa
xor
xor
inc
mov
addr16
ret
xor
xor
jmp
mov
jno
xor
sub
outsb
cwtl
int3
clc
in
add
or
stc
xchg
push
sbb
dec
mov
sbb
outsb
jp
leave
cmp
mov
test
mov
sbb
and
xor
cmpsl
repz
enter
cmp
test
inc
inc
pop
sbb
and
std
adc
xor
addb
xlat
cld
fstl
push
push
adc
jbe
cmp
loope
cmp
mov
and
repz
mov
cmp
cmpsb
mov
int
ror
push
or
jno
jns
xor
ds
inc
mov
sub
jns
popa
enter
lds
repnz
addr16
mov
xor
jl
testl
push
jge
lods
sahf
test
and
sbb
daa
dec
mov
inc
lcall
lahf
in
shlb
xor
xor
sbb
sub
mov
test
jns
dec
test
test
aaa
and
in
inc
mov
movsl
add
ret
mov
cmp
test
in
inc
mov
mov
xor
xor
mov
popa
ss
mov
imul
jl
mov
inc
arpl
mulb
dec
rolb
lods
imul
divb
and
imul
pop
xchg
inc
xchg
hlt
les
jle
sub
cmp
negb
imul
mov
mov
aaa
dec
push
sbb
inc
int
inc
jge
mov
call
loope
xchg
or
imul
jp
mov
mov
insl
add
fdivl
xor
call
mov
mov
insl
das
sbb
inc
push
pushf
cmp
cmp
ja
imul
lcall
ret
sahf
sbb
movsl
addr16
inc
roll
pop
mov
xor
mov
aas
inc
mulb
lods
sub
sbb
mov
mul
es
xor
icebp
ss
dec
aas
jp
sub
test
clc
jno
adc
in
mov
jno
pusha
gs
sbb
inc
add
aad
es
push
lods
lods
sub
loop
sahf
jle
jne
mov
push
jno
and
cmc
imul
cltd
pop
pop
push
add
ret
and
rcl
xchg
insl
push
jbe
imul
sbb
lcall
les
push
xchg
aam
popa
subb
adc
cmp
in
mov
out
repz
mov
push
pop
test
aaa
dec
inc
mov
jo
gs
cs
xchg
add
push
xor
jns
jp
jmp
scas
xor
xchg
add
shlb
inc
das
enter
aad
imul
and
ret
popf
insl
add
lds
stos
xchg
sub
mov
inc
push
cwtl
popa
stos
testl
aaa
jbe
jecxz
pop
xchg
push
imul
into
ret
dec
aaa
movsl
movsl
icebp
adc
aaa
mov
cmp
dec
les
fwait
int
aad
movsb
mov
and
fdivp
or
idivb
out
fldl
das
test
mov
dec
pop
pop
inc
push
jne
pusha
dec
xlat
cmc
xchg
popf
adc
and
jnp
shrb
decl
cli
push
jno
cmp
lds
es
xchg
ret
adc
jle
adc
ret
insb
hlt
mov
xor
adc
rclb
xchg
leave
inc
dec
dec
popa
shl
cmp
and
pop
icebp
imul
cmpsl
stos
incl
bound
sbb
cmpsl
dec
pop
aas
or
xchg
and
in
xor
dec
das
and
adc
cltd
sub
inc
add
cmp
pop
inc
jnp
and
push
push
cmp
mov
js
rcll
jns,pt
lret
stc
push
fdivp
inc
aas
sbb
push
imul
xor
repz
inc
daa
rcl
and
xchg
sub
cmp
aaa
pop
push
sahf
mov
ret
push
fcomip
cld
insl
ljmp
gs
mov
cli
inc
jno
lea
fstl
push
cmpl
inc
jp
pusha
jb
xlat
push
and
mov
movsl
jge
mov
adc
sahf
jno
iret
sub
push
ret
jne
movsl
cmp
aaa
pop
cmpsl
cli
push
xor
jge
imul
repnz
fildll
sbb
int
mov
xchg
mov
movsb
ret
sub
and
dec
dec
jne
sub
lods
sbb
dec
adc
adc
and
insl
and
insl
dec
fwait
dec
out
sub
imul
and
xchg
leave
iret
in
lahf
loopw
mov
add
mov
inc
sbb
mov
hlt
xchg
jo
xchg
es
mov
loop
in
cmpl
pop
test
ss
test
cmp
sbb
cltd
insl
push
jge
leave
popf
inc
outsb
push
movsl
and
enter
xchg
mov
lret
ss
cmc
imul
imul
es
int
test
sarl
dec
gs
cltd
in
cmp
sub
adc
test
int
add
xor
call
inc
sub
mov
pop
andl
lods
and
fldenv
push
bound
or
fxch
imul
test
inc
or
lret
mov
jl
sbb
notb
jo
stc
xor
inc
es
add
lea
jo
mov
push
in
aad
bound
pop
in
mov
popl
aam
mov
repnz
les
loop
push
lcall
push
in
mov
ret
sbb
outsb
jl,pt
sub
aaa
stos
mov
out
sbb
jno
les
dec
jecxz
sahf
imul
inc
cmp
mov
jo
xor
push
xor
cmp
stos
mov
imul
jno
sbb
jne
cmp
loop
or
pop
push
pop
dec
adc
aad
pop
sub
jbe
mov
popa
dec
daa
or
mov
std
mov
aad
add
stos
mov
jge
cmc
mov
in
pop
push
jno
jle
les
add
fldcw
aad
jle
imul
sbb
mov
out
fwait
sti
ret
ds
sub
inc
xlat
pop
clc
push
jb
lods
cltd
and
mov
jle
lock
outsl
lahf
in
sbb
sarb
mov
mov
movsl
clc
int3
dec
addb
popa
addl
dec
jge
add
push
testb
rclb
faddl
imul
add
insl
sbb
jnp
sarb
insl
es
dec
bnd
cmp
lea
xchg
fnstcw
sub
sbb
sbb
pop
rcrb
test
test
cli
mov
inc
push
add
mov
lea
jo
sbb
idivb
push
mov
xchg
jle
push
stc
leave
push
jle
xchg
testl
cmp
jo
push
cld
mov
jno
sarb
mov
xor
mov
mov
cmpsl
sub
mov
test
je
addb
ret
dec
inc
imul
jmp
dec
aad
shll
insl
xchg
adc
in
cmpsl
mov
mov
adc
sbb
shrl
xor
sbb
and
add
pop
pusha
lods
imulb
into
jno
jbe
jbe
xchg
cmp
xchg
jmp
imul
ror
dec
push
push
adc
sarl
adc
dec
out
jns
out
leave
mov
mov
fnstenv
sbb
fnstsw
in
push
jo
and
mov
sub
adc
add
fisubl
cmpsb
and
mov
test
xor
push
xor
cmp
sub
adc
les
xchg
or
push
pop
insl
sub
fwait
push
jns
cs
mov
shl
int3
jecxz
daa
cmp
and
movsb
test
mov
pop
mov
enter
dec
adc
dec
sub
xor
cld
mov
clc
push
lods
xchg
movsl
fldenv
mov
mov
add
xchg
aam
repnz
imul
jg
icebp
mov
adc
mov
ret
cmp
movsl
and
sub
jno
inc
fstl
or
into
jb
jge
adc
add
bound
or
xchg
dec
mov
add
stos
sbbb
mov
aad
shr
mov
push
or
dec
shll
jne
aam
jns
add
les
xor
mulb
push
dec
sub
adc
cmp
pop
push
imul
inc
int
roll
in
mov
dec
add
call
popa
or
sbb
loop
addr16
dec
loop
dec
mov
mov
adc
decl
hlt
icebp
pusha
repz
lret
pop
sbb
push
xor
sub
mov
std
rcrb
dec
iret
dec
das
push
mov
cmp
push
out
adc
sbb
std
add
repz
data16
ja,pn
or
imul
xor
cmp
inc
sub
std
push
push
fcompl
dec
jbe
xor
cmp
ss
mov
push
dec
sub
in
add
cmp
sub
outsl
jmp
cmp
andl
mov
lds
mov
xor
pop
jne
mov
pop
in
and
fisubl
rorl
pop
test
mov
das
and
divb
das
stc
insl
cmp
sbb
xor
adc
aas
shl
sub
ret
sub
xchg
jecxz
pop
lea
mov
adc
push
dec
dec
jecxz
sub
in
sub
stc
stc
sub
xor
ja
add
jno
es
mov
adc
ds
inc
sub
imul
sub
test
arpl
sbb
jecxz
sbb
stos
lods
adc
dec
stos
mov
ja
jno
stc
ret
xor
stc
cmc
cs
enter
cld
xor
fptan
mov
sbb
sub
jg
mov
adc
inc
bound
movb
sbb
sbb
mov
sub
mov
sub
jo
lods
enter
pop
mov
inc
stos
lahf
mov
jmp
pop
mov
and
xor
nop
sbb
in
push
cmp
fildll
inc
dec
mov
xchg
sbb
jb
jo
into
push
and
push
dec
jns
cmp
ds
lods
sub
dec
sub
cli
sbb
sub
inc
sti
cwtl
mov
sub
dec
sti
mov
xor
pushf
add
cs
dec
ljmp
es
pop
outsl
outsl
shr
js
push
mov
sub
repz
dec
sub
push
adc
mov
std
ret
inc
divl
imul
inc
notl
test
repnz
imul
push
pop
cmp
test
sub
mov
inc
pop
cmc
ret
and
dec
and
inc
dec
pop
out
imul
mov
mov
sbb
mov
push
sub
adc
jbe
shlb
jmp
dec
fndisi(8087
xchg
pop
and
loop
test
mov
dec
pop
pop
pop
rclb
adc
adc
xor
mov
mov
push
jno
call
pop
bound
ja
imul
into
andl
sub
and
add
sub
test
test
add
movsl
mov
sub
jl
push
jge
stc
repz
pop
ss
addr16
push
dec
lods
mov
inc
jge
addr16
sub
mov
jae
mov
pop
ret
mov
xor
aam
sarb
adc
and
sarl
mov
fldl
jecxz
movsl
rcrl
sbb
xor
test
mov
push
bound
and
push
cmp
xor
ret
rcrb
push
loop
inc
mov
andb
int
and
inc
mov
push
test
dec
icebp
mov
repz
dec
add
and
add
inc
sub
push
sub
fs
mov
test
loop
aaa
xchg
movsb
lods
sub
dec
loop
mov
mov
inc
int
repnz
cmc
les
sbb
in
hlt
stos
add
adc
loop
push
inc
mov
mov
mov
lods
andl
mov
loope
inc
out
xorl
adc
repnz
lret
cmp
mov
repnz
int
stos
cmp
mov
loope
test
das
mov
data16
aas
in
and
rclb
add
mov
fsubl
xchg
scas
in
jg
adcb
sub
push
sbb
dec
push
xchg
mov
lret
jge
dec
sub
mov
push
mov
scas
jno
and
jo
mov
sub
std
add
in
fcoml
orl
mov
out
lcall
pop
push
loope
cmpsb
sar
call
loope
dec
sti
ret
and
test
movsb
das
arpl
inc
out
data16
std
mov
sub
sub
xchg
sub
lods
xchg
xchg
fidivl
imul
fwait
in
jmp
sub
fildl
scas
xor
gs
loope
pop
lret
cmp
test
sahf
sbb
icebp
xchg
add
add
jnp
rcrl
ret
gs
sbb
repnz
dec
cmp
insb
or
lock
jp
icebp
cmp
sub
lds
out
hlt
mov
gs
jle
cs
inc
icebp
push
inc
mov
inc
jmp
sub
mov
push
add
mov
mov
dec
pop
mov
ret
daa
loopne
js
push
dec
sbb
out
ret
pop
xor
mov
mov
scas
inc
icebp
int3
or
icebp
push
jns
fwait
imul
jne
push
imul
bound
pop
mov
int3
and
jns
cmc
js
imul
add
repnz
mov
std
add
data16
and
lret
jg
sub
xchg
test
dec
jae
and
xor
inc
repz
and
pop
aad
movsl
dec
fdivl
mov
icebp
adc
mov
outsb
push
paddsb
xor
mov
jae
push
loope
sub
and
lret
in
cld
pop
mov
pop
cmp
push
icebp
mov
cs
adc
or
cmp
xor
fucomi
lret
aad
lcall
je
and
inc
hlt
mov
movsb
xor
rcl
inc
adc
cwtl
add
sub
sub
test
sub
adcb
jecxz
sub
mov
in
rcrb
int3
out
mov
popa
arpl
out
imul
jbe
push
mov
popa
das
outsb
jno
shrb
in
imul
test
push
cmp
push
pop
inc
andl
push
testl
cmp
xor
loope
jge
imul
add
pushf
clc
test
sarb
and
lock
ficoms
insb
and
sub
cld
sub
ret
mov
mov
fcompl
mov
lea
imul
pop
mov
jp
jae
shlb
test
mov
icebp
xchg
stc
mov
pop
je
leave
adc
inc
std
pushf
inc
push
jb
mov
fidivl
jge
faddl
or
jno
jle
push
dec
bound
mov
cld
test
pop
pop
xor
add
pop
fcmovnbe
cmc
mov
mov
pop
add
test
shlb
andb
push
shrl
test
sbb
pop
jns
dec
lds
pushf
xlat
and
mov
ffree
xlat
add
jne
loop
mov
add
in
or
jno
xor
fst
add
mov
ret
push
xlat
lds
jae
out
adc
sub
mov
sbb
leave
icebp
testb
jecxz
push
adcl
cmp
xchg
push
js
sub
sbb
mov
push
mov
lods
movsl
sbb
rcrb
and
pop
adc
imul
inc
insb
push
jno
cmp
shrb
cmp
pop
mov
test
dec
push
out
insb
mov
mov
adc
xchg
push
rcl
mov
test
mov
in
mov
js
es
inc
inc
addr16
bnd
rcl
push
jno
cs
xchg
roll
out
xchg
jl
mov
andw
add
jno
stos
repz
mov
in
popf
jb
cmp
fcmovbe
insb
clc
iret
insl
dec
ljmp
and
and
dec
test
cmc
push
mov
sub
or
data16
adc
arpl
inc
pusha
outsb
call
adc
jp
xor
ds
lahf
orb
stos
adc
inc
jnp
int
push
cli
push
in
sahf
loope,pn
xor
andl
pop
mov
lea
testb
mov
outsl
push
out
adc
fsubs
pop
mov
aaa
cmp
mov
sbbl
sahf
xchg
clc
xor
cld
push
sub
orb
pop
scas
inc
sti
call
mov
adc
mov
jmp
or
pusha
lret
repnz
mov
rcrl
call
inc
and
and
jbe
outsb
insb
inc
pop
in
in
ja
sub
sub
jge
aad
mov
movl
jb
xor
ret
out
jns
pop
insb
mov
adc
insb
cmpsl
jae
sub
iret
movsb
aaa
xchg
int
scas
mov
mov
mull
out
shll
dec
pop
jns
jbe
bound
pop
pmullw
push
jbe
popa
add
out
mov
popa
fstl
dec
lock
mov
pop
js
mov
cmp
ret
pushf
sbb
cmpsb
xlat
adc
or
iret
insl
cmpsl
push
jns
sti
and
xchg
xchg
sub
scas
orl
std
mov
stos
and
ret
in
mov
out
mov
add
ljmp
inc
int3
inc
out
mov
std
mov
bound
mov
aad
and
pushfw
mov
xor
notb
bound
mov
cmp
sub
shl
push
ror
mov
cwtl
ficoms
xchg
dec
and
dec
push
leave
jmp
mov
orb
lods
push
mov
cmp
jb
imul
fisubrs
sti
je
pop
cs
dec
jns
and
pop
cs
mov
inc
inc
insb
xchg
icebp
inc
cld
and
add
dec
in
jecxz
xorb
popa
fst
jl
cmp
repnz
imul
popf
imulb
pop
dec
aam
pop
imul
dec
jns
enter
bound
xchg
xor
ss
scas
jle
rcll
cmpsb
push
sbb
int
jb
cmp
jge
add
push
jno
dec
orb
jecxz
add
into
shll
or
les
daa
addr16
fcmovb
xchg
arpl
repz
inc
jge
lods
sub
jp
loopne,pn
ret
mov
dec
xor
dec
cmc
addb
pop
cmp
shrd
sarl
mov
pop
fldl
push
adc
mov
mov
loopne
sbb
inc
fidivrl
jno
or
cmp
arpl
test
fsin
dec
insl
sub
cmp
imul
int3
jbe
push
shll
jno
pop
inc
into
or
test
sub
push
gs
pop
and
and
lods
jle
cmpb
test
dec
xchg
nop
sub
inc
jns
movsb
dec
cmpsl
cmpsl
dec
mov
insl
cmp
addr16
push
iret
lret
fwait
jo
inc
data16
fisttpl
int
inc
bound
pop
jmp
faddl
xchg
sbb
ss
xchg
out
mov
sbb
test
or
lcall
gs
ss
sahf
mov
inc
dec
inc
mov
mov
sahf
cmp
shl
gs
in
movsb
fnstcw
in
pop
outsl
push
lret
cmp
xchg
jns
mov
stc
sub
push
dec
inc
fbstp
sub
scas
xor
cs
in
sbb
stos
aad
outsb
xor
es
jb
sub
dec
sbb
ret
mov
imul
or
js
cld
les
jno
mov
dec
mov
repnz
inc
mov
dec
or
in
mov
jnp
and
add
int3
jbe
cmpsl
frstor
mov
fnsave
subb
xchg
inc
fistps
dec
outsb
shll
push
mov
ss
add
dec
and
inc
int3
imul
jae
mov
jmp
mov
hlt
mov
ret
xchg
xchg
imulb
inc
jns
scas
cmp
and
jle
pop
inc
mov
jle
aad
sub
cmpsl
test
bnd
imul
sbb
inc
test
shlb
adc
jno
xchg
jge
and
inc
xchg
movsl
cmpsb
xor
imul
xchg
or
pushf
pusha
fcmovnu
pop
movsb
push
sub
mov
data16
dec
les
jle
addr16
add
inc
add
sub
cmp
push
add
dec
testb
fisubs
vmovq
jb
and
ja
xchg
push
dec
push
rolb
les
jg
xor
mov
fs
jge
pushf
stos
in
loope
xchg
mov
dec
clc
and
and
insb
testb
stc
movsb
pop
inc
xchg
in
mov
in
fmul
inc
nop
inc
mov
mov
cmp
stos
push
clc
mov
decl
pushl
call
dec
cmp
sbb
rolb
or
imul
jp
sub
lods
sbb
push
dec
cmc
inc
cmp
sub
and
push
add
xor
dec
and
inc
and
call
lds
mov
add
push
xchg
jbe
jp
push
xchg
sti
jge
shlb
sub
jae
push
rol
inc
pop
movsl
test
pop
in
lret
rcl
imul
int
mov
push
jg
adc
out
xor
cmp
adc
aam
mov
jle
sub
scas
rcl
push
out
loop
movsb
sub
dec
lods
icebp
int
jge
test
mov
stos
loop
icebp
xor
fstpl
aam
or
daa
sar
stos
dec
adc
jl
mov
mov
push
dec
dec
jle
std
mov
xchg
sarl
roll
add
push
adc
dec
int3
mov
mov
stc
bound
cmc
dec
fdivs
stos
inc
sbb
cmp
mov
addl
jg
sbb
ret
fstps
xchg
mov
cmovge
dec
inc
sub
fwait
notb
addr16
js
lods
bound
bound
bound
data16
jnp
jno
addl
push
fs
jno
test
sub
lock
adc
in
pop
inc
dec
pop
sbb
fistl
mov
call
inc
aam
arpl
push
ds
popa
jo
insb
iret
mov
out
sbb
jmp
dec
incl
addl
ss
adc
push
cli
movsl
jns
mov
jbe
imul
mov
insl
sub
pop
pop
mov
outsb
add
jle
lods
mov
dec
lods
movsl
xchg
imul
lods
sbb
aaa
mov
aad
loop
dec
inc
mov
adc
dec
divb
mov
cmp
ret
dec
frstor
and
add
dec
add
xchg
inc
push
jae
mov
inc
dec
inc
test
aaa
adc
cmp
push
hlt
testl
push
shlb
dec
popa
adc
subb
xadd
or
imul
cmpsb
mov
stos
adc
dec
or
mov
addr16
xor
test
xor
push
inc
das
mov
dec
lds
dec
mov
add
mov
es
push
adc
lds
loop,pn
subb
nop
inc
push
mov
adc
rolb
jge
bound
mov
mov
addl
cmp
mov
mov
pop
icebp
sbb
sub
cli
cmp
out
xor
jo
push
xor
pop
mov
out
cmp
outsb
mov
mov
pusha
int
pop
imul
xor
sub
jns
enter
mov
fs
cmpsl
cmp
xor
sub
cmpsl
and
push
lods
rolb
push
push
mov
push
fmulp
dec
or
sub
int
out
cmp
in
cmp
cld
lds
iret
jmp
enter
out
mull
bound
ror
inc
pop
adc
movsl
and
int3
outsl
aaa
gs
dec
pop
mov
push
int3
inc
pop
jno
mulb
sub
shll
lods
pop
xchg
je
jge
jl
rcrb
loop
dec
mov
jp
push
mov
inc
int3
cwtl
aam
pop
loop
cmp
jmp
inc
aaa
insb
repnz
sub
dec
pop
jns
ljmp
or
sbb
cld
imul
mov
push
ret
cmp
je
push
fimull
push
sbb
int3
fs
add
outsb
cmp
shll
les
xchg
scas
out
inc
push
inc
in
inc
push
call
mov
jbe
mov
mov
fsts
add
in
repnz
add
mov
imulb
mov
pusha
add
and
gs
aas
dec
mov
sub
and
pop
pop
ja
fiaddl
lds
mov
inc
push
cmp
xor
imul
fisttps
push
jle
mov
lds
mov
stos
and
in
or
push
inc
sahf
jno
jns
dec
fmull
cmc
in
popf
fstps
ja
add
loopne
mov
xchg
and
leave
repnz
jmp
test
enter
inc
adc
fs
das
or
push
sti
push
ror
shlb
inc
mulb
cs
shlb
leave
cmp
scas
cltd
test
mov
ret
and
cmp
or
divb
adc
mov
movsl
push
jl
add
call
jge
adc
mov
sahf
das
repz
mov
into
dec
pop
add
popa
or
movsl
dec
sub
subb
pop
cmp
lcall
xchg
jno
das
xor
aas
ret
xchg
dec
lds
repz
mov
sbb
arpl
ficompl
out
pop
xchg
push
outsb
jge
mov
out
mov
jno
adc
cmpsl
fldl2e
adcl
addr16
mov
or
mov
xor
push
into
inc
inc
xchg
jae
mov
mov
inc
push
mov
push
inc
ret
sub
les
iret
xchg
imul
sbb
les
shlb
inc
and
ljmp
mov
xor
ror
mov
adc
or
fs
icebp
pop
sarl
add
iret
inc
mov
adc
inc
int
adc
and
xchg
push
int
jo
inc
ljmp
loope
data16
popf
mov
mov
pop
adc
lret
xor
lcall
pop
outsb
repnz
pop
push
adc
cmp
jno
xchg
xchg
mov
push
cmp
or
daa
mov
add
lods
jp
add
dec
fldl
ja
fcompl
or
inc
mov
dec
jmp
loope
jle
sbb
xchg
insl
push
inc
pop
aaa
jno
pop
dec
fmull
shlb
jnp
mov
js
mov
loopne
inc
mov
data16
cmp
mov
mov
pop
and
les
cmc
xchg
stos
mov
jns
mov
pop
mov
xchg
and
leave
mov
lds
aad
scas
bound
cmpsl
orl
or
pusha
lahf
in
push
ja
arpl
in
loop
jg
cmpsb
popa
stos
daa
pop
inc
loop
xor
and
lea
iret
dec
and
loop
mov
jecxz
jae
icebp
andl
xchg
cmpl
mov
dec
push
aaa
out
cmpsb
inc
and
insl
pop
push
mov
addr16
dec
jge
outsl
xor
sbb
loopew
sbb
sub
hlt
jmpw
jl
jbe
les
gs
dec
jmp
movsb
sub
es
repz
imul
ret
rcl
sbb
adc
inc
pop
movsb
inc
adc
call
loop
xchg
push
fsubrl
in
dec
test
fldcw
fldl
in
push
inc
popa
rorb
cltd
inc
xor
inc
cmp
lds
mov
mov
and
cmp
in
int
outsb
mov
push
sbb
cmpsl
pop
jp
shll
loop
mov
sub
daa
adc
xchg
jmp
hlt
movsb
fiaddl
jb
push
arpl
ss
shl
fbstp
and
lods
js
or
stos
and
je
jecxz
push
push
ret
test
je
push
and
mov
and
adc
ss
cmp
mov
in
aam
hlt
adc
in
cmp
cmp
jg
xorl
cmp
or
fwait
clc
mov
shll
inc
jmp
inc
dec
cmp
cltd
push
test
pop
sub
ds
sbb
test
adc
mov
xchg
test
popa
jne
xor
push
les
sbb
or
inc
pop
mov
pop
sub
inc
sub
push
movsb
add
dec
xchg
inc
xor
dec
mov
inc
hlt
cmp
inc
aad
dec
les
bound
lret
xor
comiss
pop
or
inc
or
mov
popa
jb
inc
cltd
adc
mov
push
es
or
mov
and
push
andl
das
fisubs
cmp
cmpsb
test
xor
dec
fwait
dec
shll
sub
ret
icebp
mov
add
repz
les
test
movsb
jmp
outsb
push
out
scas
xor
jg
pop
sbb
pop
push
arpl
xor
das
sub
xchg
pop
mov
pop
add
out
ret
sub
movsb
clc
xor
jno
icebp
fiadds
xchg
pop
movsl
popa
mov
adc
mov
mov
xchg
scas
lret
repnz
les
mov
jle
jp
repnz
xchg
push
jge
mov
sbb
jns
adc
inc
xchg
pop
inc
cwtl
imul
lcall
mov
jnp
popa
sub
pop
aad
orb
add
dec
shrl
cs
jle
mov
mov
sbb
test
es
push
ret
add
mov
clc
out
push
loop
mov
cmpsl
inc
clc
dec
push
inc
push
adcl
test
sub
shll
or
repz
push
xor
je
xor
mov
hlt
xor
jns
out
mov
js
mov
xchg
inc
inc
inc
push
mov
mov
lret
adc
inc
rcr
inc
xor
ficoms
and
add
dec
popa
xchg
les
mov
mov
inc
popa
inc
cmpsl
test
notb
daa
and
push
arpl
add
mov
mov
sahf
and
and
sub
clc
dec
inc
test
fld
stos
and
sahf
stos
inc
xor
cli
testb
mov
xor
push
lahf
inc
lods
outsb
push
nop
push
xchg
mov
xchg
notb
mov
xchg
and
icebp
mov
mov
push
push
and
lcall
cmp
and
fstps
dec
daa
push
data16
ljmp
mov
out
xchg
push
in
or
jmp
das
sbb
mov
lock
les
popa
add
testl
test
or
aaa
aam
sub
push
xor
loopne
ret
dec
or
push
out
shrl
pop
jo
sub
push
data16
inc
jae
out
scas
pop
pop
gs
out
pop
outsb
mov
idivl
test
cmp
popa
inc
jmp
pushf
test
xchg
mov
int3
inc
insl
jno
jecxz
sub
fcompl
dec
iret
mov
cmp
out
dec
cmp
jnp
or
out
test
push
das
outsl
fldl
sub
cmp
loope
aaa
mov
xor
insl
dec
xor
fisubl
loop
loop
and
adc
sbb
mov
xchg
adc
cmp
dec
in
jg
aas
fucomp
in
push
clc
mov
or
push
loope
push
imul
jbe
cmp
dec
xor
pop
mov
jno
dec
mov
imul
add
and
dec
and
ret
and
adc
jno
pop
jl
xor
lret
add
dec
jl
push
or
mov
roll
xor
mov
jbe
psllq
enter
notb
lods
xor
aas
into
sahf
insl
lods
subb
mov
into
pop
inc
scas
push
out
sbb
inc
imul
sbb
sub
leave
mov
rol
xchg
push
outsl
xor
imul
add
repnz
push
xor
stos
sub
les
mov
adc
mov
imul
ret
adc
xchg
leave
loope
sbb
test
mov
sbb
movsb
jle
pop
dec
xchg
ret
mov
cwtl
arpl
lret
pop
push
cmp
lock
das
aam
test
xchg
mov
dec
sbb
fbstp
stos
push
sub
std
mov
js
in
mov
icebp
push
pop
xor
lret
insb
or
push
movsb
cmp
push
into
rcrl
test
dec
push
mov
mov
dec
sbb
add
sub
hlt
and
cli
push
in
dec
inc
jne
sub
push
pop
and
fwait
xlat
mov
into
mov
add
and
lea
sbb
sub
mov
mov
sub
xchg
xchg
cmpl
ficomps
es
test
sub
jmp
pop
add
mov
cmp
xor
imul
pop
imul
ret
pushf
add
jno
cltd
mov
xor
repnz
jge
lds
mov
int
es
pop
aaa
jb
xor
push
jecxz
pop
cmp
jns
int3
xor
ja
test
ds
dec
mov
push
shl
mov
push
sub
jb
inc
iret
sub
inc
sahf
fbstp
arpl
xorb
lods
push
iret
add
lret
dec
icebp
dec
bound
mov
sub
es
push
test
inc
or
mov
dec
movsl
jno
mov
or
push
imul
add
push
xchg
xchg
lods
popa
dec
enter
xchg
mov
push
fsub
jl
jb
add
jg
das
push
ja
addb
fcomps
test
push
push
les
jb
inc
add
aam
or
lret
cmc
adc
mov
notb
aaa
popf
adc
cmp
and
testb
daa
lods
mov
popa
pop
sbb
iret
es
scas
outsb
adc
xor
pusha
dec
xor
lods
lods
imul
cli
sbb
fimull
sub
fisubs
xor
jb
repz
mov
sahf
adc
jae
andb
inc
xor
fdivs
mov
jle
sahf
gs
sub
mov
inc
cmp
or
push
cmp
push
in
aad
xlat
pop
test
adc
jmp
aam
ficoms
ja
ds
push
in
jno
insb
lret
rclb
pop
jne
int
je
daa
add
repz
push
sub
or
mov
sbb
pop
dec
imul
xor
loopne
movsb
adc
mov
add
add
int
xorl
stos
sbb
divl
add
adc
jmp
and
dec
popf
cwtl
fs
mov
rcll
loope
icebp
sub
xor
inc
add
mov
daa
push
outsl
xor
jle
xchg
ret
mov
das
nop
jecxz
mov
xor
in
subl
pushf
sub
std
inc
pop
push
mov
clc
xchg
rorl
popl
lret
scas
dec
dec
and
xor
cmpsb
cmc
and
xor
inc
cmp
sahf
test
repnz
inc
jle
sti
pushf
dec
ret
push
arpl
push
div
push
mov
test
arpl
xor
test
gs
inc
xchg
jp
dec
sbb
inc
jno
int3
pop
add
std
inc
and
cs
sub
push
push
or
cmp
push
loop
sbb
pushf
push
mov
movsl
inc
mov
push
add
addb
ffreep
shr
jno
mov
and
sbb
pop
push
stc
mov
push
adc
mov
mov
mov
rol
push
scas
adc
xor
les
cmp
push
sub
push
mov
cmc
or
mov
test
lahf
loope
push
xor
pop
cmp
movsb
mov
mov
jg
add
jl
loopne
in
nop
inc
or
insb
pop
mull
call
es
pop
lods
sbb
imul
jmp
cwtl
adc
jecxz
or
test
pusha
cli
dec
sahf
mov
push
and
int
repnz
nop
xor
es
mov
mov
push
mov
test
and
adc
mov
les
or
imul
ja
and
sbb
ret
repnz
dec
pop
aaa
fistpl
call
dec
xchg
popf
test
dec
cmp
icebp
cmp
inc
push
and
shl
stc
dec
jb
loope
stos
mov
adc
bound
push
mov
sub
and
sar
dec
fdivrs
xchg
lods
aad
iret
sub
lds
popa
rcrl
es
and
add
les
gs
mov
xor
icebp
les
icebp
add
and
notb
or
test
xchg
in
xor
dec
mov
and
sub
mov
sub
in
mov
jno
jbe
les
pop
mov
inc
int
je
sub
std
mov
movups
sub
lcall
mov
inc
sbb
ret
sbb
insl
push
insl
mov
ljmp
dec
mov
inc
sahf
adc
ret
test
and
std
loope,pt
lods
bound
mov
aaa
cmp
cli
mov
mov
mov
add
jnp
stc
mov
sbb
pop
arpl
imul
push
outsl
lds
aad
sub
roll
push
or
push
cmp
addl
lods
and
pop
ret
mov
lds
xchg
push
outsb
lods
xchg
mov
dec
jmp
jmp
movsl
ds
arpl
repz
dec
shl
inc
jecxz
mov
jle
incl
lret
enter
inc
les
adc
test
in
daa
mov
gs
add
movsb
dec
les
cmc
push
jmp
fwait
sar
andb
push
lcall
or
xchg
jns
fcoml
int
push
mov
mov
dec
mov
sbb
add
leave
scas
pushf
sub
rol
jecxz
into
sti
cmpl
mov
xchg
icebp
push
movsl
lahf
shlb
xchg
dec
in
cs
arpl
xchg
cwtl
cli
leave
mov
ret
push
bound
inc
pop
in
imul
sub
ss
pop
subl
rorl
mov
std
push
mov
inc
repnz
retw
push
xor
les
mov
push
ds
out
lret
mov
jno
sarl
and
cmp
repnz
sar
vmovsldup
mov
in
adc
dec
call
jp
ret
aad
jb
mov
jge
xor
repz
mov
lcall
fstps
outsb
fstl
andl
lods
jno
mov
loope
imul
mov
movsb
fstl
shl
pop
mov
mov
fldl
lock
stos
xchg
daa
jnp
mov
fistpll
mov
push
jnp
bound
popf
cmp
pop
mov
sti
mov
cmp
outsl
test
inc
fs
out
test
loop
pop
gs
sti
mov
add
adc
aad
adc
mov
in
loopne
hlt
scas
je
stos
popa
dec
mov
add
mov
pop
mov
or
cwtl
inc
int
mov
push
call
cli
dec
pop
jmp
adc
loope
ret
dec
jo
or
bound
dec
roll
and
add
or
sub
xchg
aaa
inc
jae
aad
mov
cmp
out
xchg
inc
inc
or
ficoms
adc
enter
outsb
icebp
lods
insl
pop
cltd
jl
leave
adc
jge
pop
inc
fbstp
cld
shll
mov
add
fisubrs
mov
mov
pop
xor
in
dec
mov
icebp
mov
and
sub
sub
aas
sub
adc
test
push
inc
notb
or
imul
rorb
pop
int
push
push
sub
fdivrs
popa
jbe
ja
dec
arpl
cli
sbb
cli
loopne
int
mov
jae
mov
jge
pushf
fs
or
dec
test
jp
rcr
popf
loope
add
lds
je
aas
add
xchg
jle
call
jnp
sub
pop
ret
lds
xchg
jp
fiaddl
jle
lret
xor
xchg
sbbl
inc
imulb
sbbl
dec
and
pop
scas
jp
jne
cld
inc
pop
out
call
aas
sub
mov
push
xor
pop
push
inc
fs
or
mov
pushf
daa
inc
and
lods
xchg
gs
adc
shrb
inc
lods
xor
test
mov
dec
cmp
popa
adc
sbb
out
cltd
mov
sahf
jmp
xchg
movsl
xchg
rcll
divl
mov
mov
cmpsl
mov
lcall
icebp
cmc
xchg
pop
and
dec
and
and
jns
clc
dec
movsl
mov
dec
ss
mov
adc
jns
adc
pop
inc
lret
les
or
out
jbe
andl
mov
cmpsb
lahf
lret
push
mov
xlat
clc
shl
ret
lahf
loop
insl
es
jp
jle
xor
and
pop
push
adcl
inc
cltd
es
lock
jb
adcb
jbe
gs
cli
add
jp,pt
or
out
inc
mov
pop
outsl
repnz
lods
aad
pop
jno
ss
ret
int3
push
or
test
sbb
fdivrp
insl
shll
adc
int
xchg
dec
xchg
int
xchg
add
or
leave
jno
jp
fisubs
repnz
fmull
outsb
mov
data16
mov
lret
les
bound
ret
jae
and
movsb
aad
ret
add
and
cs
mov
adc
popa
and
es
dec
mov
int
xlat
pop
repnz
test
pop
js
lret
pushf
dec
jmp
pop
sub
adc
imul
in
push
xor
sub
mov
mov
and
testl
shll
repnz
push
cld
es
decb
inc
jg
rcr
daa
mov
xchg
in
stc
loope
inc
das
mov
sahf
inc
and
add
enter
push
inc
inc
mov
mov
divb
outsb
sbb
enter
mov
mov
and
sbb
push
mov
pop
and
push
negb
xor
mov
fidivl
lock
test
loop
mov
aad
add
mov
xchg
add
mov
sbb
adc
inc
mulb
xchg
mov
aad
cs
or
mov
cmp
addr16
into
xor
add
cmpsb
push
cmp
jns
pop
dec
dec
sub
mov
or
jmp
jno
jb
inc
inc
mov
nop
cmpsb
jo
out
andb
sub
out
comiss
popf
cmp
jns
repnz
sub
leave
repz
sbb
add
add
xor
shll
jbe
dec
mov
adc
lods
fdivrl
cmp
jg
mov
iret
push
mov
popa
sarl
mov
adc
dec
xchg
adc
les
inc
arpl
test
jae
imul
sbb
in
xchg
push
xchg
cwtl
jmp
cmp
outsl
xor
data16
fldt
or
xor
mov
push
sbb
add
adc
cmpsb
and
bndldx
sub
adc
dec
jns
sub
jmp
sbbb
inc
pop
and
xor
xchg
pop
sbb
inc
inc
fs
mov
cmp
insb
mov
or
cltd
mov
cmc
scas
lods
in
pop
cmp
imul
icebp
jno
adc
fimull
xor
pusha
jg
testb
inc
mov
ljmp
xor
inc
push
mov
les
test
pop
inc
inc
sub
mov
and
cmc
hlt
xor
test
inc
test
push
sahf
sub
pop
int
dec
sbb
imul
ret
addr16
dec
addr16
arpl
pop
data16
push
pop
inc
cmp
sub
cmpsb
inc
ja
pop
imul
inc
and
push
mov
in
push
mov
cwtl
leave
xchg
mov
add
lds
push
pop
fdivrs
xchg
outsb
imul
inc
mov
xor
call
push
movsl
js
js
mov
sahf
inc
arpl
jo
addb
out
sbb
sub
fdivs
rol
hlt
cs
orl
sbbb
adc
test
adc
mov
clc
imul
in
outsb
out
aad
lret
add
aas
loop
outsl
hlt
insl
push
std
call
jg
push
or
hlt
std
dec
add
je
jb
popa
adc
mov
aas
inc
aaa
fnsave
stos
mov
rcll
lahf
and
scas
adc
or
jl
repnz
rcll
js
bound
out
or
xchg
lods
sbb
mov
add
gs
cli
shll
xchg
xchg
vpshlb
dec
adc
xchg
addb
rorb
sub
int
add
icebp
jle
mov
pop
cmc
mov
out
lahf
sbb
fildll
jns
movl
push
rorl
ljmp
jbe
jno
cs
les
jbe
aam
pop
loop
jecxz
test
dec
or
cmp
jmp
pop
scas
nop
or
push
repz
ss
xchg
jne
push
jno
sub
and
and
gs
aaa
stos
mov
in
in
movsb
pop
movsb
lcall
push
xor
loop
cwtl
push
loope
fs
adc
inc
sbb
mov
outsb
out
and
cmp
in
add
mov
pop
sub
in
popa
sbb
add
mov
ret
and
cmp
inc
popa
xor
adc
dec
push
mov
out
jecxz
arpl
dec
push
pushf
push
cmpsl
mov
jp
and
cmpsl
mov
add
fwait
mov
xor
lods
mov
pop
mov
xor
cmpsb
out
mov
add
inc
fsts
sahf
cmp
stc
fnstenv
jns
popf
jle
push
mov
mov
or
outsl
sbbl
rclb
cmpsb
xchg
cmp
dec
cld
fstl
rep
push
or
loopne
inc
push
jle
decl
xchg
cli
les
repz
negb
dec
out
push
and
les
and
sbbl
jmp
js
xchg
mov
shlb
mov
jae
inc
dec
das
ret
test
pop
icebp
inc
ss
stc
xchg
mov
stos
icebp
shrb
loopne
mov
mov
and
cmp
mov
decl
cli
xchg
mov
call
pop
cmp
jo
and
outsl
enter
mov
sub
mov
test
mov
leave
mov
std
ljmp
enter
lret
jne
ret
dec
gs
push
pop
xor
mov
inc
rcrl
idivb
aas
movsl
sbb
push
cmp
dec
lcall
and
and
xchg
mov
push
in
add
test
push
lret
lret
jge
add
in
pop
cmp
pop
arpl
jno
pop
push
popa
xchg
inc
push
adc
imul
cs
cmp
popa
push
mov
mov
clc
xchg
mov
mov
adc
xchg
push
sti
jno
fwait
push
mul
jge
cmp
andl
daa
cli
push
jno
jae
arpl
orl
fiaddl
adc
push
loop
sub
and
mov
lcall
mov
sub
cmp
repnz
and
or
sub
enter
fbld
xchg
pop
popl
xchg
push
mov
cmp
xor
fisubs
repz
sub
inc
sti
mov
cwtl
sub
jns
and
sub
mov
cwtl
lcall
mov
mov
jb
les
sub
xor
xchg
cmp
inc
cwtl
xorl
adcb
push
cmp
data16
out
cwtl
dec
xchg
mov
cmp
les
push
aaa
jbe
lods
lret
xchg
push
out
cmpsl
mov
hlt
mov
push
loop
sub
cmp
and
dec
inc
mov
sub
inc
orw
hlt
pop
adc
and
rcrl
and
mov
popa
cmc
cs
dec
and
xor
inc
jb
inc
cmc
popf
xor
out
ss
test
add
test
and
imul
inc
es
test
inc
xor
in
insb
sub
lret
sahf
xchg
das
and
jno
bound
add
inc
and
push
xchg
push
rcrb
push
mov
adc
mov
sti
jecxz
mov
xchg
xchg
cmpl
push
sbb
cmp
add
and
aaa
mov
xor
in
dec
cmp
loopne
dec
int
shlb
lea
in
and
cmp
shrb
xchg
mov
fnstenv
cmp
jns
fwait
xchg
push
jg
pushf
rorl
mov
mov
mov
or
aad
push
dec
imul
dec
loop
inc
xchg
imul
mov
out
insl
mov
stc
das
jns
sub
xchg
jne
stc
pop
imul
xor
sbb
test
xor
data16
mov
cmc
pusha
xor
xor
scas
push
sbbb
fcmovnu
add
inc
mov
cmc
pop
add
cwtl
and
push
sbb
repnz
jno
push
in
and
inc
sub
pop
push
test
cmp
mov
mov
inc
dec
addr16
jne
lcall
pop
rcll
sbb
cli
push
int
and
das
and
pop
jne
mov
mov
rolb
xor
xchg
je
inc
jne
test
xor
xor
popa
out
aam
arpl
incl
sbb
xchg
inc
mov
sub
inc
movsb
sbb
inc
inc
xchg
int3
movsb
pop
sbbb
pop
xor
les
xchg
movsb
jns
lret
push
mov
xor
shlb
add
sarb
or
negb
xor
sub
cmp
rcll
push
inc
fistps
leave
rolb
add
jne
test
gs
mov
push
jp
mov
and
and
xchg
mov
popa
pop
mov
aaa
les
cmpsl
lcall
mov
das
mov
aam
jns
jae
mov
mov
shrl
les
cltd
and
out
inc
int3
aaa
shll
push
push
popf
add
mov
add
cli
xchg
call
inc
xchg
movsl
push
insl
mov
mov
dec
xor
cld
push
push
loope
movsl
aam
jbe
sub
mov
nop
add
pop
cmc
mov
push
mov
and
sbb
test
xchg
sar
xchg
jle
cmc
imul
pop
adc
mov
push
and
add
mov
sbb
loop
push
loop
outsl
mov
int3
shll
sub
mov
in
adc
push
jecxz
les
add
pop
movsb
dec
stos
repz
inc
mov
lods
jmp
inc
outsb
and
nop
add
popa
jg
jmp
addl
xor
imul
in
pop
movsb
inc
pop
negl
adc
cli
xchg
jnp
loop
fadd
mov
jl
xor
aam
rolb
ret
loop
adc
jecxz
rol
jno
lock
lea
test
mov
xchg
mov
loop
bnd
inc
xor
sub
add
cmc
add
stc
lcall
data16
call
lea
bound
les
mov
sahf
test
add
push
rolb
cmp
loop
lcall
sbb
stos
les
mov
pop
xchg
jno
mov
pop
rorb
ss
sub
notl
lods
popa
test
je
xor
xor
rclb
in
and
jno
ds
jmp
movsl
mov
mov
xlat
arpl
dec
fisubrl
scas
dec
xchg
mov
pushf
repnz
scas
shr
aad
jp
iret
sbb
out
dec
cld
std
sub
out
xor
jns
mov
test
aas
pop
push
push
jno
mul
mov
sub
inc
add
push
and
das
xor
mov
hlt
xor
pop
cmpsl
mov
adc
mov
mov
lcall
add
cli
popf
enter
xchg
mov
jmp
jmp
lcall
push
loope
mov
jmp
in
sbb
or
adc
pop
jo
in
lds
pop
inc
outsl
pop
jmp
test
dec
into
cmp
sbb
xorl
xchg
lcall
cmp
fdivr
es
jp
mov
scas
int3
sbb
cmp
outsb
aas
inc
add
push
add
dec
int
xchg
xor
push
sub
arpl
daa
cmp
push
lcall
icebp
mov
xor
mov
jmp
jmp
jns
add
cmpsl
imul
jp
cmp
inc
imul
sbb
sbb
into
out
roll
pop
jae
and
or
stos
sub
inc
cmp
lods
imull
js
push
hlt
jmp
rorl
jle
jne
daa
mov
sbb
mov
and
mov
ret
call
pop
jle
mov
bound
inc
fwait
push
hlt
cli
push
bound
lcall
int
mov
mov
xor
bound
aaa
xchg
mov
fstp
jns
test
sbb
fwait
xchg
inc
dec
cmp
outsb
scas
cmp
lea
jg
fcmovnbe
popf
imul
jno
pop
std
mov
sbb
lea
xor
ja
pop
jmp
push
dec
xchg
jae
mov
and
push
or
addr16
repnz
sub
ss
inc
add
fmull
gs
stc
stos
sub
ficoms
lods
pop
es
mov
xchg
test
aaa
inc
ret
add
daa
cmp
dec
movsb
daa
rclb
adc
pop
mov
divb
ss
insl
push
scas
add
int3
adc
fdivl
outsb
scas
repnz
xchg
pop
mov
js
pop
das
jmp
ljmp
mov
or
icebp
xor
ss
aas
xor
and
and
xor
test
loop
adc
sbb
pop
and
xchg
ret
push
divb
push
in
cmp
push
rclb
fbld
pop
jmp
inc
and
jns
or
dec
pop
cmpsl
mov
mov
adc
add
popf
dec
xchg
cs
xchg
push
mov
and
icebp
cmp
bound
subb
inc
push
jnp
inc
and
dec
sbb
sub
xchg
les
call
xor
jno
bound
xchg
inc
jbe
repz
inc
xor
mov
bound
push
loope
sub
mov
std
movsb
pop
shll
jb
pop
rolb
pop
fwait
int3
inc
push
xchg
jns
sub
repnz
jg
outsl
adc
xchg
fnstsw
push
sub
xor
jmp
and
popa
xchg
int3
xorb
jne
lods
xor
mov
jle
or
adc
pop
clc
push
jno
add
cltd
and
xchg
hlt
cmpsb
gs
rcll
push
and
dec
inc
jle
jb
adc
aaa
les
test
mov
inc
bound
pushf
inc
push
sub
jbe
mov
repnz
lahf
in
ds
insb
or
xor
push
les
iret
jmp
cld
jne
push
mov
test
mov
push
mov
popa
or
int
lahf
adc
or
push
enter
or
push
enter
xchg
mov
das
mov
test
jns
imulb
pushf
sub
pop
in
movsl
cmp
cmp
arpl
mov
mov
ds
or
mov
aaa
daa
lods
dec
mov
cmp
aam
pop
xor
and
data16
inc
mov
cltd
popl
addr16
xchg
adc
shlb
cs
and
sub
arpl
cmp
xor
cmp
test
inc
jno
cmp
adc
dec
rorb
add
bnd
nop
aad
ds
xor
mov
cld
out
mov
mov
and
xchg
enter
jae
and
mov
enter
sbb
sahf
pop
sub
cltd
inc
cmp
shlb
fninit
dec
in
mov
data16
adc
js
sub
jge
push
fs
xchg
sbb
cmpsl
jns
jl
jno
xchg
xor
push
mov
pop
fsubrs
sbb
mov
or
xchg
mov
inc
lods
pop
test
js
adc
test
xchg
sbb
add
lcall
xor
data16
pop
pop
iret
test
std
outsb
test
xchg
push
lahf
ss
outsb
es
xor
mov
adc
fadds
int
adc
test
push
data16
sahf
stc
cltd
or
adc
inc
sub
dec
std
insb
sarb
repnz
sub
mov
mov
nop
xorl
les
jbe
inc
push
cmc
adc
xchg
xchg
push
mov
ss
repz
enter
imul
in
dec
push
shll
in
mov
test
fadds
movsb
sbb
cli
addr16
add
cwtl
mov
ret
scas
icebp
jle
adc
jge
mov
js
ljmp
mov
notb
lock
wbinvd
je,pt
xor
stc
add
sub
mov
lds
pop
test
ret
xchg
mov
jae
jmp
ja
js
jbe
jp
outsl
daa
arpl
inc
mov
lods
cmc
loope
dec
les
mov
dec
mov
pop
inc
sahf
notl
jb
daa
shl
cmp
inc
mov
sahf
mov
mov
daa
test
cld
xor
sbb
ljmp
div
sub
push
sbb
mov
push
push
pushf
repnz
sbb
push
hlt
push
fstl
add
insb
pop
fldcw
cltd
jno
shlb
loopne
mov
sbb
clc
dec
mov
lods
mov
mov
divb
pusha
adc
xchg
repnz
mov
scas
sbb
or
xor
clc
sahf
add
mov
insb
and
negb
mov
subl
push
rclb
mov
arpl
inc
ret
stc
testb
aas
jo
and
inc
dec
inc
xor
les
ds
js
jno
mov
subl
xchg
sbb
sub
fwait
mov
inc
je
test
lret
add
jmp
into
imul
cmp
add
add
cmp
pop
xor
repnz
and
lea
cmp
jle
bound
div
cmpsb
pop
inc
sbb
jg
lds
inc
fstpl
shlb
popf
or
and
negb
jle
leave
call
xor
jo
push
xor
mov
or
popa
mov
out
imul
mov
outsl
mov
scas
inc
ss
addr16
scas
adc
and
and
xchg
icebp
xor
jb
out
sub
inc
ret
dec
stos
cmp
mov
fisubl
jmp
movsb
cmp
mov
push
add
mov
pusha
add
je
mov
psubsb
cmpsl
jbe
pop
sub
inc
out
and
dec
push
addr16
mov
lea
mov
fldcw
clc
ret
dec
popa
in
scas
sbb
mov
cmpsl
cmp
ret
mov
push
stos
andl
ret
add
mov
pushf
aam
loop
mov
push
cmp
fs
dec
icebp
fucomip
in
test
movsb
popa
xchg
jbe
mov
movsb
push
mov
xchg
sub
inc
push
in
lret
inc
add
adc
test
mov
fwait
test
xchg
aad
xor
cmp
jmp
je
subl
and
repnz
jle
cmp
cmp
loop
jmp
jge
sbb
test
addr16
ss
pop
shlb
stos
addr16
outsl
das
movsb
dec
mov
sbb
mov
xchg
mov
lods
fmul
jno
cs
jp
lret
lods
daa
push
cli
lods
roll
mov
mov
stos
scas
sar
lods
mov
mov
mov
dec
xchg
or
pushf
lret
mov
sahf
mov
mulb
adc
add
xor
mov
and
push
xor
add
pop
lcall
fs
push
mov
push
push
mov
dec
mov
cmp
cmp
inc
in
and
and
divb
mov
xor
out
addr16
in
aaa
sbbb
xchg
mov
or
mov
sub
cwtl
xchg
jg
add
push
xor
ret
testb
push
pop
xor
pop
mov
ret
mov
and
aad
cli
jmp
cmc
cs
andb
popa
lret
repnz
ror
cld
push
lcall
das
adc
jbe
mov
and
adc
push
fisubs
jb
rolb
mov
xor
inc
outsl
movsl
clc
sub
imul
out
shll
push
add
xchg
es
aam
icebp
jnp
dec
rorb
gs
dec
imul
add
xchg
sbb
cmp
and
cmp
xchg
mov
rolb
cmp
dec
xor
cmp
insb
popa
popf
jp
jb
jo
push
lret
inc
mov
and
inc
jno
dec
inc
sahf
push
xchg
aaa
jbe
cmp
sbb
popa
ds
jns
dec
fdiv
sub
in
jp
xor
lcall
cmpsl
addr16
push
pop
sbb
and
shlb
sbb
xor
sub
test
adc
leave
xchg
data16
subl
dec
fmuls
sub
push
aaa
jg
vpmulhuw
outsb
fs
les
subl
out
movsl
add
and
popa
dec
dec
in
insb
test
mov
sub
xor
lret
jecxz
dec
sarb
inc
out
out
enter
dec
inc
sub
push
testb
add
push
lods
test
insb
mov
add
bound
adc
mov
sub
push
sub
enter
sbb
mov
mov
addb
cld
and
bnd
cmp
shll
in
insb
ds
movsl
fs
jbe
mov
cmp
lcall
cmp
mov
lret
popa
jmp
lods
mov
hlt
call
inc
stos
addr16
xchg
lds
jl
jmp
in
cmp
loop
or
stos
mov
push
add
xchg
jns
sub
bnd
xor
sub
dec
pop
inc
or
sub
cmp
adc
xor
mov
xchg
push
mov
mov
adc
xorl
popa
dec
fnsave
sbb
shlb
xor
xchg
pop
jmp
bound
and
out
mov
add
xor
xor
hlt
cld
daa
jmp
and
mov
popa
cld
shlb
jb
andb
jbe
push
cmpl
push
jno
sarb
push
movsl
dec
cmp
test
aas
adc
popl
movsb
jae
jge
mov
xor
dec
xchg
outsl
push
sub
repz
mov
add
cmpsl
fidivs
insl
dec
aad
ret
es
add
dec
and
inc
ds
mov
das
jo
sar
scas
mov
xchg
roll
loope
outsl
int3
repnz
lret
adc
out
popa
gs
shlb
and
jno
shlb
mov
nop
pop
jmp
imulb
mov
pop
or
pop
cmp
cmpsb
pop
mov
pop
movsl
mov
mov
dec
cld
loope
outsb
jle
fbld
dec
movsl
push
xor
sahf
lods
xor
scas
lea
xor
arpl
mov
push
push
sub
cmp
outsb
clc
test
xchg
test
test
out
inc
andl
popa
add
cli
in
sbb
mov
pop
xor
xchg
pop
stos
sahf
xor
adc
mov
stc
sub
repnz
jns
pop
sub
dec
mov
js
push
divb
and
das
lods
add
and
mov
mov
mov
inc
or
xchg
das
enter
pop
push
movsb
add
rcll
push
mov
push
xchg
inc
loop
dec
xchg
inc
and
lods
push
cmp
pusha
stc
push
sub
imul
push
scas
push
inc
aaa
repnz
xorl
shll
mov
cmp
ds
mov
out
xchg
inc
mov
xchg
mov
inc
push
addr16
adc
mov
push
repnz
inc
les
xor
dec
mov
in
xor
dec
mov
add
xor
cmpsl
push
xor
orl
jno
push
mov
jno
push
push
inc
arpl
inc
imul
dec
scas
sarl
push
repnz
or
add
loop
sbb
movsb
fldt
add
mov
jae
cmp
movsl
int
xlat
fiadds
add
orl
movsb
jp
out
bound
sti
aas
xrelease
dec
cmp
test
push
dec
leave
lds
dec
pop
rol
push
filds
jae
mov
inc
mov
shll
test
dec
mov
xchg
xchg
jmp
test
fldenv
push
enter
addr16
ja
lahf
std
push
aam
inc
and
xchg
dec
jnp
sub
leave
sti
inc
or
popa
xor
xchg
jno
add
sub
dec
negb
ss
push
xchg
adc
sub
ret
adc
insb
push
out
push
dec
cmpl
push
jno
repz
and
cmp
cmp
nop
das
loop
int3
mov
aad
repz
and
jle
les
push
adc
ja
popa
inc
sub
add
or
xor
jle
sub
inc
cmp
xor
and
dec
ljmp
mov
dec
pop
repnz
push
and
aam
add
jno
or
or
mov
xlat
fs
xor
adc
popf
hlt
sti
xor
lret
cmp
imul
cmpsl
mov
fs
negb
push
add
lods
dec
push
inc
pusha
mov
loop
shll
popa
pop
mov
daa
enter
xor
insl
out
aam
mov
xor
les
bound
adc
jge
cmpsl
lods
push
call
xchg
inc
mov
sub
fsubl
push
mov
adc
daa
and
pop
add
xchg
imulb
adc
inc
jp
push
inc
add
shrb
inc
repnz
dec
xchg
dec
add
mov
adc
adcl
test
lea
movsl
xor
ret
ror
cs
stc
imul
les
mov
mov
cmp
xor
repz
testb
loop
ds
daa
or
lds
and
repnz
movsl
stos
adc
movsl
dec
popa
dec
stos
xor
or
imul
addr16
or
jp
inc
lcall
inc
fisttps
and
sbb
cmp
jl
in
in
sub
jns
js
movsb
and
pushf
xor
outsl
sub
add
ljmp
idivb
mov
sbbl
arpl
jb
mov
cmp
iret
out
aaa
jae
xchg
xchg
ss
cmp
leave
cmp
lock
daa
clc
addl
jnp
and
lret
jo
lahf
leave
push
xor
jne
push
push
fidivrl
movsb
outsb
in
pop
lcall
ds
mov
shlb
mov
mov
inc
cmp
in
mov
js
and
pop
test
jnp
cmp
dec
pop
mov
test
mov
dec
imul
jmp
mov
inc
rcll
mov
jg
or
out
into
push
jmp
aaa
add
dec
movsb
test
mov
inc
add
jno
push
dec
aas
pushf
in
xchg
push
xchg
mov
arpl
or
pop
aas
outsl
xor
int
sbb
test
push
pop
lahf
std
xor
int
mov
lcall
add
in
add
mov
fnstcw
mov
imul
les
arpl
not
jp
rclb
xor
testb
xchg
pop
mov
in
or
sti
bnd
ficompl
cmpsl
mov
jno
mov
gs
inc
not
xchg
cmp
scas
push
mov
loopne
or
pop
mov
in
movsl
mov
xchg
test
daa
cltd
mov
mov
mov
loop
jl
and
cmp
test
adc
int3
or
movsb
mov
lock
inc
dec
xchg
aas
push
xor
cmp
fisttps
fwait
lcall
daa
or
and
les
adc
xchg
xor
sbb
ss
and
or
mov
int
and
bound
rclb
mov
jecxz
jno
dec
popf
test
xor
sti
pop
push
xor
jbe
lahf
or
cltd
pop
sbb
inc
stos
pop
add
cmc
repnz
imul
dec
xchg
cld
loop
mov
xor
popf
out
adc
adc
cmpsl
aad
nop
inc
lock
gs
roll
int
sub
or
into
les
inc
shlb
xor
mov
cmp
mov
out
xchg
inc
xor
stos
pop
les
adc
iret
xor
add
dec
cmpsl
xchg
inc
scas
push
imul
lods
push
insl
push
in
cmpsb
adc
xor
push
jb
les
xor
jle
jne
imul
push
std
xchg
out
xchg
fdivrs
fidivs
stos
inc
xor
movsl
dec
aaa
nop
sbb
adc
xchg
or
sahf
add
dec
popa
adc
adc
sub
ret
ss
pop
push
mov
pop
mov
inc
mov
pusha
mov
mov
sarl
dec
sub
jae
mov
sub
dec
mov
sarb
mov
mov
and
xor
and
mov
std
inc
insb
in
xchg
inc
or
rcr
xchg
in
repz
push
xor
sub
ds
push
inc
lods
inc
push
loop
imul
loope
sarb
adc
push
dec
enter
dec
gs
pop
lods
xor
and
add
jno
cmp
jne
mov
and
inc
clc
inc
fstps
in
rclb
and
cmpsb
sub
mov
es
cmp
outsl
es
mov
mov
into
dec
sub
adc
lea
inc
push
aad
insb
dec
mov
mov
enter
push
popf
dec
outsl
cmp
cmp
int
in
pop
jne
sub
repnz
or
popa
add
es
je
int
fs
inc
or
ret
add
mov
movb
inc
mov
imul
lds
test
jl
mov
notl
mov
pop
sub
stos
imul
and
sub
cmp
insl
dec
dec
sub
mov
push
insw
and
jle
iret
mov
incl
imul
push
aaa
and
and
jo
pusha
in
cmp
mov
sub
notb
jo
push
sbb
xchg
mov
fstps
jge
adc
imul
bound
test
mov
cmp
sarb
xchg
jmp
mov
xor
adc
inc
mov
stos
adc
add
sbb
jno
add
sub
mov
insb
sahf
mov
mov
shl
pop
pop
jle
mov
pop
movsl
test
add
aas
push
push
push
shrl
xchg
inc
and
out
push
sub
ss
push
pop
icebp
pop
ja
adc
sub
xchg
test
outsb
inc
inc
mov
and
es
outsl
fldcw
mov
mov
fnstcw
lret
fsubl
push
push
movsb
xor
lock
sub
jns
or
dec
subb
insb
mov
xor
cmp
stos
adc
sub
pushw
in
pop
mov
mov
and
cmc
movsb
xor
add
push
sar
dec
mov
jge
cltd
mov
jp
xorb
mov
and
cmova
jge
sub
cmpsl
lods
cmp
dec
or
aas
jo
dec
lock
push
outsb
mov
dec
dec
aad
dec
dec
xchg
cltd
add
mov
lea
ljmp
inc
shrl
inc
jge
das
and
orb
sbb
inc
cld
dec
and
enter
dec
addr16
pop
movb
inc
sbb
adc
lods
ds
test
enter
push
rcll
mov
mov
pop
mov
leave
mov
dec
dec
or
stos
mov
nop
mov
sub
mov
jp,pn
in
sub
mov
gs
sub
inc
dec
aaa
or
mov
dec
testb
adc
movsl
push
mov
insl
inc
aad
jge
xchg
shl
pusha
or
or
cli
aad
pop
test
sbb
and
adc
data16
mov
mov
or
std
push
outsl
and
test
loope
dec
cs
pop
xor
test
mov
enter
imul
adcl
cltd
jno
mov
enter
insb
call
stc
or
xchg
or
pop
enter
sbb
pop
push
sarl
movsb
les
dec
pop
mov
popa
rorl
leave
test
shlb
pop
jb
fisubs
push
push
and
clc
cmpl
add
sbb
neg
xchg
lret
inc
adc
push
sti
icebp
dec
lods
es
push
ret
and
cli
popa
insl
and
rcll
xor
cmp
lods
ficoml
sbb
push
mov
mov
push
out
jp
lret
shrl
xchg
add
iret
jbe
push
mov
nop
add
mov
jecxz
mov
and
aad
pop
clc
mov
mov
mov
aaa
les
pop
inc
sub
cmp
push
sahf
xchg
iret
movsl
sub
mov
arpl
test
mov
inc
cmpsl
xor
xchg
pop
sbb
jmp
or
lods
pop
mov
popa
lods
xor
lods
pop
cmp
lods
mov
adc
adcb
jae
mov
mov
mov
xchg
repnz
or
sahf
dec
aad
testb
jno
sub
inc
cli
div
lea
test
sub
arpl
or
jno
lock
test
pop
aaa
add
xchg
orl
movsb
fnstsw
call
dec
in
adc
dec
rolb
sub
aad
dec
push
arpl
bound
lret
rol
popf
xchg
xchg
shlb
sbb
repnz
insl
adc
in
mov
repnz
notb
fldl
xor
xor
test
movsl
addl
xor
sub
cmp
movsb
fs
pusha
mov
cmp
adcb
xchg
jle
lods
in
dec
imul
jno
mov
jmp
imulb
jp
mov
das
xor
dec
mov
inc
pop
test
mov
pusha
inc
mov
mov
andb
enter
in
scas
jbe
enter
xchg
ds
cmc
sbb
cli
inc
mov
push
xchg
xor
je
inc
insl
xor
mov
xchg
fs
and
and
xchg
dec
pushf
sub
jb
out
idivb
xchg
push
jne
add
jg
mov
cli
sbb
fwait
xchg
movsl
leave
or
push
in
mov
fbstp
mov
in
leave
push
add
outsb
jmp
sub
out
adc
movsl
inc
popa
adc
mov
inc
mov
stos
shrb
data16
les
das
xchg
mov
mov
lcall
inc
rorb
bound
sub
inc
inc
xchg
outsl
test
sbb
pop
adc
cli
loope
cmp
repnz
ret
orb
adc
sbbb
xchg
scas
sub
lea
jnp
push
lods
jp
cs
jbe
fiadds
orl
xor
subb
pop
insl
leave
inc
unpcklps
pusha
cmp
xor
out
push
dec
inc
mov
cmpsb
or
cli
fsts
pop
dec
adc
daa
into
popa
and
adcl
push
es
lods
cli
or
inc
fmulp
xor
sbb
jecxz
and
icebp
aaa
shlb
xchg
shr
sbb
int
or
sbb
fnstsw
cs
lds
inc
andl
cld
pop
xor
inc
and
push
adc
mov
sbb
push
inc
fs
pop
sub
or
es
pop
sbb
dec
call
pop
das
mov
inc
ds
add
fildl
pop
cmpsb
ret
ss
lods
pop
push
mov
fstpl
outsl
jmp
inc
push
xor
aas
ja
mov
imul
fnstenv
mov
or
mov
and
lahf
lds
movsb
pop
shlb
xchg
jecxz
negb
xchg
rolb
in
xor
aad
loop
push
inc
lret
shl
daa
icebp
dec
jbe
inc
mov
movsl
inc
add
cmp
nop
arpl
mov
icebp
stos
sti
inc
or
push
imul
xor
xor
mov
jmp
std
jno
pop
dec
rol
aaa
mov
lahf
out
daa
dec
push
scas
in
in
fs
dec
dec
pushf
mov
xor
leave
int3
mov
into
lea
lea
les
inc
lcall
gs
inc
arpl
xor
ss
aaa
sbb
fbld
and
gs
add
insl
lea
inc
mov
imul
sub
xchg
jno
movsb
pop
cs
sub
lcall
or
add
cld
inc
in
xor
adc
cmovp
roll
sub
dec
repnz
mov
xchg
xor
cmp
mov
cmpsb
aaa
jecxz
mov
repz
push
jp
outsb
cmp
inc
adc
mov
iret
arpl
shl
ljmp
inc
addr16
cmp
and
add
lds
inc
filds
and
cli
mov
jle
fwait
adc
das
jg
cmpsl
les
xchg
sahf
cmp
lret
inc
mov
fnstsw
imul
gs
ja
bnd
adc
cld
pusha
jp
dec
aad
loop
pop
mov
xor
xchg
leave
push
imul
pop
and
sub
popf
inc
mov
inc
xchg
add
loope
xchg
addr16
and
inc
fstps
and
jmp
mov
inc
je
push
test
int
out
inc
inc
inc
call
and
shll
out
ret
rclb
xor
pop
test
add
cmp
push
xchg
jb
pop
xchg
inc
mov
shrb
mov
inc
xor
lcall
push
push
add
inc
xchg
jne
and
imul
push
loop
add
repnz
call
idiv
xor
inc
ja
sarb
mov
call
push
push
xor
bound
or
xor
fdivl
pop
repz
mov
cmpsb
cltd
jecxz
repnz
jg
xor
mov
je
push
flds
or
repnz
pop
mov
xor
scas
xchg
cmp
ja
add
mov
push
xor
push
rolb
fdivl
mov
cmp
aad
sbb
aam
mov
or
push
rdtsc
shrb
or
push
stos
lret
sub
adc
push
or
inc
divl
dec
lret
adc
cmp
iret
cwtl
jmp
dec
int
mov
push
xor
xor
inc
les
insl
and
dec
and
adc
gs
xchg
fcompl
les
dec
sub
adc
xchg
add
popf
repnz
pop
pop
pop
sub
dec
add
sub
jne
or
pop
div
inc
and
insl
add
adc
mov
and
jns
cmp
and
xor
dec
cmp
int
jle
jb
jg
add
and
lock
xor
sub
dec
repnz
xsavec
pop
cmp
call
and
and
sub
jmp
adc
xchg
test
fnsave
insl
pop
popa
flds
pop
adc
jp
pop
xor
sbb
sbb
adc
dec
loope
aaa
imul
arpl
es
in
hlt
decb
adcb
add
and
pop
or
pop
imulb
ds
scas
mov
jns
jge
push
adc
or
fcomp
mov
add
sbb
sti
cmpsb
int
mov
xchg
je
lock
popa
stos
clc
scas
ja
fnstcw
pop
mov
sub
sahf
add
test
sbb
ljmp
rolb
fsubl
test
jl
lods
cmp
mov
add
scas
in
or
call
daa
dec
add
aad
push
sub
or
sub
add
mov
push
push
jne
sahf
inc
into
in
cmp
insl
les
bound
rorb
jl
sbbl
int
sub
adc
jle
in
loope
les
repz
ja
inc
mov
hlt
lods
add
jmp
push
or
push
xor
jmp
lret
test
into
adc
inc
sub
sub
ret
add
sub
cli
arpl
cmp
pop
sbb
adcl
int
xor
inc
push
xlat
int3
add
adc
adc
lock
lock
outsb
idivb
jmp
xchg
mov
inc
cmp
sub
enter
dec
xorb
imul
mov
mov
pop
popa
std
outsl
push
mov
xchg
icebp
je
cmpsl
subl
xchg
xchg
sbb
mov
sub
gs
test
xchg
test
aaa
pop
movsl
mov
pop
in
inc
mov
cmp
sub
sub
es
xchg
sbb
push
or
int
push
cmp
nopl
popf
mov
pop
xchg
xor
xchg
shlb
adc
lret
jae
xor
imul
jg
arpl
std
cmpsb
clc
sub
inc
neg
and
and
in
dec
xchg
clc
daa
shrb
adcl
sbb
mov
repnz
repnz
mov
in
push
pop
mov
inc
insl
imul
xor
or
adc
mov
lcall
add
pop
mov
dec
roll
das
ficomps
or
mov
int
cmp
cmp
daa
push
xchg
push
add
mov
movsl
aad
stos
jmp
test
mov
mov
arpl
arpl
sbb
adc
inc
and
xor
push
cltd
loop
xor
ret
dec
shlb
push
clc
in
outsb
popa
cmp
jae
cmpsl
xchg
imul
scas
adc
cmovne
jmp
mov
mov
enter
dec
aad
int
lea
dec
enter
mov
insb
cmp
xchg
sub
ret
sub
xchg
enter
leave
cltd
inc
cmp
out
sti
jne
inc
lds
shlb
out
idivl
ds
mov
repnz
cmp
xor
sub
push
aaa
add
lret
jno
sahf
push
cli
push
in
mov
ret
xor
nop
into
cld
lods
sub
sub
cmp
cmpsl
gs
sub
enter
jecxz
or
stc
ja
jmp
inc
shlb
fxch
cmp
bound
cltd
loope
subl
push
mov
jge
and
ficoms
add
push
or
inc
jl
and
jle
cli
sbb
aas
sub
enter
dec
and
cmp
cmpsb
in
push
test
mov
es
and
enter
lock
enter
js
mov
sbb
sbb
push
imul
js
movsl
pop
out
mov
gs
cltd
push
les
sub
pop
sbb
lock
lds
mov
push
ret
xor
jo
mov
and
aaa
lods
insb
push
sti
enter
aad
loop
insl
dec
mov
cmp
push
pop
cmp
jne
push
jnp
cld
dec
stc
mov
xorb
add
mov
xchg
pop
pop
push
or
inc
mov
iret
enter
jge
mov
lods
xor
sub
cs
fs
xchg
lods
mov
cli
xor
xor
popa
jno
aaa
push
dec
test
sbb
shlb
xchg
les
dec
gs
xchg
pop
aaa
sbb
popa
sbb
movsb
cmp
sahf
xor
jmp
add
and
mul
fwait
pop
inc
call
jge
xor
jae
vdivps
sarb
xor
arpl
inc
xchg
inc
fcoms
pop
and
mov
dec
jg
cmp
mov
inc
jno
inc
sub
inc
das
or
mov
negb
sbb
lds
inc
mov
jle
inc
lea
sub
cmp
imul
lea
jge
push
cwtl
adc
cmp
movsl
gs
test
or
test
and
mov
add
sub
arpl
popf
inc
ss
mov
test
mov
and
pop
pop
or
in
push
cmp
add
std
stos
sbb
and
push
jg,pn
leave
in
testb
adc
mov
imul
mov
cmp
adc
xchg
and
in
pop
jns
and
jns
sub
decb
add
enter
pop
lea
test
sbb
push
jns
enter
insl
stos
mov
cmp
adc
mov
in
xorl
call
outsl
cmp
rol
fsubs
aam
ret
mov
jae
gs
inc
cmp
inc
loop
movswl
fwait
xor
mov
test
sbb
sbb
insl
adc
pusha
push
mov
pop
xor
gs
cwtl
out
adc
nop
fiadds
iret
mov
popa
imul
mov
lods
pusha
insl
cmpsb
rcrl
shll
arpl
xor
xchg
lods
movsl
popa
cmp
adc
aaa
arpl
lcall
sub
push
mov
push
mov
jge
and
and
add
dec
dec
icebp
xchg
pushf
xor
inc
outsb
cmpsb
jge
or
jns
inc
dec
xor
pop
addl
jmp
ret
in
sub
popa
xor
xor
inc
inc
pop
inc
das
js
dec
je
rolb
outsb
int
add
movsl
rorb
inc
sub
jp
xchg
pop
sub
roll
and
push
or
xor
les
bound
jbe
stc
inc
dec
test
dec
mov
mov
push
shrb
cmpsl
adc
dec
pushf
inc
and
and
and
dec
int3
les
or
pop
pop
popa
inc
nop
jbe
dec
jle
ja
dec
insl
cli
jns
xor
xchg
hlt
lahf
test
sahf
add
sti
or
out
cmp
faddl
adc
adc
adc
xchg
mov
imul
mov
call
out
push
test
insl
or
orb
cmc
lods
sub
fcomps
adc
mov
gs
test
testl
dec
sahf
xor
ss
icebp
pop
inc
daa
loope
aam
lret
mov
movsl
add
fnsave
test
push
out
shr
into
jl
int
mov
lcall
xor
lods
pop
stos
fisttps
in
and
sti
mov
xchg
les
leave
mov
out
xor
inc
icebp
sahf
xchg
xchg
mov
lods
movsb
int3
adc
andl
jmp
xlat
cs
int3
cld
pop
sti
xchg
ss
aam
in
xchg
mov
popf
lcall
jmp
mulb
mov
arpl
xchg
pop
je
dec
cmpsb
nop
cltd
cmpsl
push
shll
dec
push
shrl
xorb
sbb
push
insb
pop
mov
iret
popa
jo
inc
xchg
fdivrs
add
mov
add
dec
jbe
cmp
mov
stos
lods
outsl
xor
adc
lds
sub
add
mov
jbe
insl
push
cmp
dec
movsl
or
enter
xchg
addr16
sbb
stos
pop
jle
aad
push
leave
lcall
lea
out
dec
cmp
lods
sub
popa
push
adc
insb
fimull
or
orl
pop
int3
lods
push
in
xchg
cmp
push
and
mov
es
mov
or
ret
mov
rclb
and
aad
loop
push
sbb
xchg
int
jns
mov
pop
push
je
nop
mulb
and
mov
pop
insl
lret
xchg
loop
loope
inc
mov
push
mov
jmp
add
push
dec
subb
inc
popf
cmpb
add
outsb
jbe
inc
mov
lcall
gs
add
mov
mov
pop
mov
inc
cltd
pop
sbb
enter
aam
mov
jp
ret
dec
subb
xor
lods
test
or
arpl
and
hlt
ljmp
mov
cli
xor
pop
filds
sub
adc
jg
or
push
mov
xchg
mov
inc
sbb
push
imul
daa
and
dec
ret
xor
pusha
jg
sbb
sub
loope
and
pop
aam
adc
jecxz
push
lods
cld
push
and
jne
cwtl
lcall
dec
cld
fstpt
cmc
sub
pushl
jle
test
add
jmp
jnp
mov
add
mov
add
lcall
mov
adc
das
and
cmp
ljmp
bound
outsl
push
xor
or
add
xchg
pop
mov
repnz
or
popa
dec
imul
aad
pop
clc
push
lods
jns
adc
xor
in
xchg
jo
out
pop
insb
push
icebp
arpl
cmp
fcoml
and
arpl
ss
popa
xchg
sbb
dec
sbb
lret
cmp
adc
sbb
sbb
popa
push
cmp
stos
insl
sub
aas
inc
push
push
loope
subb
xchg
xor
cmc
pop
inc
pop
mov
and
and
dec
adcb
shlb
movsl
xchg
inc
out
pop
mov
in
inc
or
stc
jns
xorl
shlb
xchg
push
aad
test
sbb
je
xchg
repnz
arpl
mov
orl
ja
loope
or
jmp
and
in
test
or
mov
xchg
dec
pop
into
dec
adc
sbb
in
xor
xchg
dec
out
adc
cmp
inc
jbe
dec
dec
adc
popf
ret
aaa
sti
clc
push
sbb
les
mov
pop
fmuls
cmp
and
push
add
mov
mov
aaa
cs
dec
push
xorl
mov
pop
mov
lock
sub
sub
loope
in
nop
aam
pushw
cld
pop
add
jae
dec
into
das
push
and
insl
insb
xchg
sbb
pop
jecxz
dec
cmpsb
sub
sub
and
inc
fs
push
insb
xor
in
cmp
cmp
sbb
aad
test
cmp
sub
jno
cmp
lods
and
mov
out
das
sbb
jno
dec
cmp
and
inc
mov
and
and
fistpl
sbb
sub
xor
mov
xchg
mov
adc
cmp
das
xor
inc
jp
xor
aas
xlat
push
ss
adcl
push
xor
mov
cmp
in
scas
jns
mov
mov
mov
mov
mov
lret
adc
imul
test
cmpsl
and
cld
enter
stos
push
pop
xor
es
inc
mov
add
in
loope
adc
jg
cmp
loopne
loop,pt
and
repnz
mov
loope
sub
dec
jecxz
adc
jne
lret
inc
lcall
push
fsubrl
push
loopne
gs
insb
inc
mov
andnps
and
les
lcall
fdivrl
mov
mov
filds
lret
leave
fwait
xorl
sub
repnz
push
xchg
arpl
or
or
jbe
dec
xchg
imul
arpl
and
cli
add
mov
mov
mov
mov
jecxz
ljmp
mov
mov
push
mov
bound
mov
scas
mov
das
bound
das
push
and
ds
jp
stos
mov
stos
popa
cmp
gs
roll
xchg
rolb
sub
arpl
push
das
adc
lea
xchg
enter
pop
inc
incb
lahf
push
aad
dec
xchg
jbe
sbb
ret
or
loope
cmp
inc
leave
sbb
adcb
dec
cmpsl
xor
aad
int3
in
test
ror
jge
dec
push
adc
sub
add
cs
imul
gs
popw
sub
jo
mov
mov
popa
jno
fwait
inc
jp
jp
cmpsb
les
ljmp
sbb
xor
nop
ljmp
aaa
pop
mov
outsb
inc
jle
jbe
cmp
dec
cmp
int
clc
adc
int
add
iret
adc
lods
dec
mov
fs
mov
mov
inc
or
lret
stos
imul
cli
inc
mov
sbb
int
popf
pop
push
out
lds
mov
adc
sbb
lods
sub
out
mov
fldt
cmp
xor
or
xor
sub
adc
shlb
insl
and
and
or
push
sbb
stos
out
in
inc
mov
mov
popf
jmp
dec
or
jp
pop
mov
movsb
out
push
imul
shl
and
imul
cwtl
xchg
push
and
aas
cmpsb
jle
adc
out
aaa
push
adc
or
mov
bound
cmp
cld
and
insb
std
xchg
das
add
push
adc
lret
popf
dec
mov
mov
inc
add
arpl
hlt
shlb
dec
push
cld
fdivrl
fwait
xor
and
sarb
outsl
ret
lret
add
lcall
aam
sbb
adc
or
popf
dec
cld
sub
or
mov
es
xor
dec
cltd
xchg
fisubrl
lret
les
xor
push
xor
mov
sub
icebp
fisttpl
lret
xchg
cmp
shlb
jecxz
lods
dec
lret
mov
sub
push
xchg
stos
inc
ret
and
sub
sub
loope
or
xchg
or
fwait
mov
mov
or
lods
shrb
test
cmp
addr16
test
jmp
shrl
push
xchg
repz
and
and
sub
std
mov
in
jmp
sbb
add
xor
bound
inc
fnsave
iret
pop
aad
ret
add
mov
or
mov
scas
and
js
cmp
mov
sub
mov
inc
es
mul
mov
cld
aad
add
repnz
sbb
mov
jecxz
add
push
lahf
and
xchg
pop
sub
test
repz
or
xchg
cld
sub
loope
jb
mov
pop
les
cmc
repnz
rorb
insb
xor
pop
stc
and
dec
iret
sub
icebp
jecxz
mov
or
sub
arpl
cmp
jno
and
dec
or
bound
loope
dec
repz
scas
mov
xchg
repnz
int3
cmp
into
xchg
xor
data16
add
lds
cmp
add
or
cltd
pop
xor
pop
xor
bound
pop
les
icebp
mov
cmpsl
pusha
pop
add
mov
stos
imul
inc
xor
mov
jp
shrb
lock
dec
add
mov
out
dec
cmovp
xchg
jns
mov
pop
sub
dec
jne
xchg
mov
idiv
loope
ret
daa
inc
ror
sub
inc
aad
pop
mov
inc
dec
outsl
pop
iret
dec
or
mov
cmp
jae
jmp
fdivp
sarb
push
cmp
push
pop
vmulpd
inc
loope
mov
add
jnp
and
inc
lods
xor
fwait
jb
loopne
movsl
mov
lret
adc
adcb
inc
dec
stc
ret
cmc
les
into
test
lea
out
mov
cmc
inc
add
lret
outsl
mov
leave
push
aas
sbbl
and
cmp
or
mov
mov
ss
adc
xchg
int3
aad
push
jg
fnstsw
lds
dec
add
sahf
or
cmpsl
dec
add
in
fs
jp
sbb
cmpsb
jae
inc
ret
adc
mov
xor
das
sub
xchg
in
inc
inc
cmp
dec
pop
sub
daa
sub
dec
pop
xor
incl
icebp
stos
push
or
mov
inc
and
sub
mov
sbb
arpl
mov
xchg
lods
dec
pop
jnp
outsb
lock
or
lock
mov
cld
jb
xor
inc
adc
sbb
das
xor
cmp
push
test
repz
mov
pop
das
adc
and
icebp
das
notb
xchg
cmp
jmp
and
inc
add
xchg
mov
es
and
jge
push
js
gs
fstl
push
xchg
cmp
pop
pop
in
in
dec
jge
mov
das
inc
adc
xor
loope
aad
cmp
sti
sbb
fildll
paddw
je
xor
daa
movsb
push
adc
sub
movsb
out
jge
sub
jg
xor
and
ljmp
cmp
mov
lods
bound
mov
mov
out
mov
lods
add
inc
sti
cmc
cwtl
int
and
mov
adc
insl
inc
mov
cmp
repnz
pop
out
inc
pop
rol
cmp
adc
add
cltd
cmp
stos
adc
lcall
pop
testb
ss
sbb
sti
inc
into
or
xor
mov
pop
ret
mov
divb
xchg
and
xor
lahf
cmp
inc
xchg
push
cli
cwtd
fbld
xor
and
into
test
pop
iret
sbb
push
cmpsl
mov
push
cmc
mov
add
out
or
loope
push
mov
mov
js
jns
test
xor
cs
loope
inc
dec
push
cmp
mov
jge
stc
out
jno
addr16
xor
xchg
scas
and
mov
or
adc
sahf
inc
jmp
or
std
sbb
add
bound
and
call
push
and
mov
cmp
cmp
js
shlb
push
movsl
mov
push
dec
es
shrb
push
xor
pusha
dec
mov
cmp
addl
ss
jo
imul
dec
mov
mov
icebp
fwait
insb
sti
movsb
aad
sub
xor
jb
addl
jno
sub
push
insl
cmp
rolb
arpl
cld
sbb
sub
push
and
in
push
stos
mov
cli
call
ret
insb
addl
test
shrb
jo
add
jno
cs
daa
cmp
xchg
cmp
jmp
popa
and
fisubrl
and
sbb
jae
fldcw
test
out
pop
lods
es
sub
enter
mov
inc
sub
lcall
loope
cmpsl
jmp
mov
pop
inc
loopne
dec
pop
push
outsl
push
testb
pop
arpl
dec
and
xchg
test
sahf
rol
xor
lahf
fs
cmpsl
or
lods
enter
cmp
daa
insl
imul
push
and
add
aam
xchg
imul
sahf
les
jae
insl
push
cmp
sub
andb
rolb
xlat
sub
xor
in
test
jbe
add
add
push
xor
jae
aam
aaa
sub
rcr
icebp
movb
mov
into
fldcw
ss
popa
mov
test
repnz
cmpsb
in
aam
and
cld
int
mov
jno
pusha
sbb
dec
xchg
jbe
mov
push
ret
sti
xchg
ja
add
jg
orl
imulb
push
sbb
add
mov
inc
adc
inc
dec
clc
pop
sub
inc
pop
and
imulb
add
je
cmp
out
stos
imul
leave
inc
inc
sbb
xor
inc
mov
pop
add
shlb
xor
enter
imul
lcall
inc
cs
call
fs
add
movsl
add
cmp
and
and
inc
and
mov
test
lret
sbb
fistl
push
inc
arpl
mov
dec
test
imul
mov
push
jp
xor
xor
gs
repnz
stos
rcll
pop
mov
stos
jge
cs
pop
and
test
ret
adc
lret
outsb
inc
js
push
inc
lretw
repnz
xchg
dec
sub
je
fisubl
push
mov
xchg
pop
sub
arpl
ja
mov
pop
mov
mov
cld
rcll
repnz
movsl
cmp
cmp
add
js
repnz
or
in
dec
xor
xor
adc
pop
rcl
mov
roll
or
data16
push
loope
push
jle
mov
movsl
cmpsl
or
leave
mov
sbb
cmpsl
xchg
loope
dec
clc
sub
xlat
aad
arpl
aas
and
in
xlat
imul
sbb
ss
jmp
and
cmp
jb,pn
ds
pop
shll
xchg
inc
sub
sarb
aad
imul
sub
dec
pop
xor
out
jecxz
xorb
mov
mov
mov
dec
dec
movsl
ret
fstps
mov
xchg
int3
imul
int
inc
cmpsl
mov
and
daa
and
push
sub
jno
es
call
mov
loope
xchg
push
mov
enter
daa
or
aam
daa
insb
inc
sub
sub
aaa
aas
cmp
fs
mov
ret
insl
inc
pop
jle
pop
inc
dec
int
shl
xchg
lds
mov
das
add
lret
dec
ret
dec
loop
in
pop
pop
mov
pop
stc
add
leave
bound
dec
iret
aad
lods
ret
cltd
xchg
sahf
dec
sti
shll
jmp
dec
mov
out
inc
push
std
sahf
out
das
rcrl
inc
int3
in
inc
adcb
insl
mov
xor
jp
mov
lods
pop
jb
mov
outsl
sub
jmp
mov
cwtl
xor
adc
and
and
cmp
xchg
or
fistl
mov
dec
shl
xor
arpl
cmp
lcall
xor
xchg
out
sbbl
or
mov
sarl
in
cs
jbe
jbe
pop
decl
dec
add
divb
xchg
dec
movsl
cmp
mov
cmp
sbbb
sub
xor
div
out
mov
push
cs
push
or
push
mov
adc
or
mov
mov
icebp
dec
sbb
fsubrs
mov
cld
or
mov
frstor
in
mov
jns
pop
pop
cwtl
insl
pop
shl
adc
sbb
and
loope
lea
outsb
add
xchg
or
inc
inc
dec
adc
inc
into
aaa
mov
dec
lds
cmp
stc
jge
jp
imul
or
insl
push
xor
dec
pop
cmp
icebp
mov
xchg
cmp
aad
aad
dec
mull
lret
lahf
sub
stos
mov
enter
mov
inc
leave
test
leave
loope
cmpsb
jmp
mov
jnp
mov
ja
leave
cwtl
and
bound
bound
inc
sub
xchg
or
ds
insl
js
sub
dec
inc
sub
fwait
shl
out
ret
mov
add
bound
out
es
inc
mov
cmpsb
or
test
lcall
dec
rcl
out
mov
gs
xor
xlat
mov
std
jno
pop
sbb
ret
jno
divb
stos
repnz
or
hlt
in
test
add
adc
shl
jp
fildll
jecxz
xor
rcll
jno
push
mov
movsb
jb
stos
nop
push
aas
cld
cmp
loope
mov
mov
test
sbb
inc
mov
test
xor
dec
xchg
xchg
rcl
sub
xor
xor
mov
xor
and
movsb
add
mov
adc
cmp
loop
das
test
loope
dec
or
xchg
pop
adc
lret
imul
mov
and
sti
jns
jb
gs
mov
cmp
das
xchg
sub
cmpsl
xor
test
dec
xlat
mov
testb
pop
sbb
xor
mov
mov
jne
jno
push
jge
sbb
push
popa
mov
push
jmp
divb
pop
sub
stos
pcmpeqd
jns
cwtl
stos
stos
shlb
insl
jb
jb
insb
push
test
mov
in
inc
sub
sub
jns
jmp
jns
sahf
stc
das
cmp
loop
outsl
sbb
fdiv
dec
mov
call
pop
jmp
dec
jbe
sbb
cld
in
sub
enter
mov
aad
and
sub
and
in
sbb
inc
push
movsb
enter
les
out
and
dec
pop
xchg
adc
js
test
rcrb
dec
mov
bound
out
sub
mov
inc
mov
cwtl
pop
jg
or
es
xor
xor
fisubrl
lcall
fildl
bound
pusha
test
mov
int
mov
fisttpl
test
xor
sub
sarb
sub
push
xchg
xorb
lret
movsl
dec
movsb
xor
andb
xchg
fucomip
jno
mov
test
jns
insl
pushf
cwtl
leave
mov
ja
adc
fisubl
ret
outsl
jno
add
in
cs
sbb
adcl
push
and
in
dec
movsb
rclb
add
sub
mov
hlt
push
and
mov
movsl
insl
nop
sub
mov
repnz
std
enter
jp
andb
and
mulb
dec
xchg
xchg
iret
daa
enter
rcrb
bswap
insl
mov
jnp
xlat
cmp
push
inc
dec
mov
or
out
sub
cs
or
pop
orb
std
daa
clc
pop
xorb
sub
and
int
ret
fldl
mov
rol
movsb
cmp
shlb
mov
pop
negl
cmp
sar
addr16
sbb
nop
std
pop
stos
iret
mov
jno
adc
inc
xor
add
xchg
mov
xor
mov
lods
inc
shll
movsl
jbe
mov
dec
cmp
pop
jmp
sub
dec
sub
mov
int3
adc
cs
hlt
rolb
enter
push
mov
jg
mov
adc
inc
adc
movsb
loopne
and
faddp
jnp
xor
pop
jle
add
pop
sub
stos
mov
dec
xchg
xchg
rol
dec
inc
cmp
sbb
loop
fiaddl
push
push
fs
cmp
mov
inc
xor
adc
lahf
mov
imul
dec
aad
xor
xor
imul
mov
std
cmp
inc
dec
sub
test
movsl
or
push
insl
nop
sarl
mov
mov
inc
and
mov
ja
gs
jo
mov
mov
cmpsl
imul
das
movsb
mov
dec
inc
push
jbe
and
enter
dec
outsb
leave
lods
in
jno
aam
dec
xor
rorb
jb
repnz
inc
leave
sub
movsl
jno
orl
aas
jbe
lcall
xor
dec
imul
xchg
push
movsl
fldl
fwait
pushf
inc
sub
inc
sub
rclb
rcrb
push
pop
arpl
stos
sub
mov
jnp
mov
js
pusha
cmp
cld
push
out
popa
push
lds
filds
pop
ss
icebp
mov
ja
stos
shlb
mov
pop
ljmp
add
enter
add
cmp
or
xchg
inc
sub
mul
aad
int3
lea
aad
popa
jno
pop
insb
shrl
xchg
jns
out
mov
adc
sarb
js
xlat
add
sbb
jne,pn
das
into
mov
mov
mov
xchg
jmp
dec
fsubr
jno
ret
fs
fisttpll
sub
loope
lret
mov
arpl
inc
insl
pop
and
mov
ss
loope
ud1
leave
testl
add
fs
lods
mov
mov
loopne
ret
jo
test
pop
mov
push
jo
pop
dec
adc
and
das
adc
movsb
stc
xchg
clc
add
movsl
popaw
xor
push
cmp
pop
scas
jl
insl
leave
mov
inc
stc
sub
test
sbb
ja
pop
outsl
mov
ret
pop
les
in
call
sub
rcll
popa
mov
popl
push
in
xor
addl
in
sbb
outsb
jp
push
jne
add
mov
dec
pushf
xchg
inc
hlt
jbe
sahf
insl
sub
xor
imul
inc
xor
xor
addr16
repnz
aaa
gs
fwait
add
or
icebp
lret
adc
push
lods
loopne
xor
sahf
push
jecxz
dec
scas
aad
leave
cmc
das
mov
fs
add
enter
adc
enter
pusha
movsl
sbb
cmpsl
jge
jne
es
xor
cmpsb
add
das
inc
push
jne
ret
xor
sbb
aaa
cltd
xor
adc
mov
subb
add
and
ss
fiaddl
cmp
sarl
les
int3
sti
pusha
test
dec
push
ret
push
inc
sbb
sub
lds
sbb
daa
mov
rorb
xor
push
push
das
cmp
sub
movsb
daa
add
pop
mov
leave
xor
inc
out
test
push
inc
rcrb
xchg
pop
inc
lea
popf
bound
xchg
and
gs
cmpsb
cmp
leave
dec
or
imulb
out
sbb
in
or
daa
sub
mov
test
add
sub
xor
dec
or
lock
adc
xchg
mov
mov
inc
mov
push
rcrb
pop
cmp
aas
sub
cltd
xor
aaa
push
movsl
jns
sbb
test
sub
insl
pop
test
imul
mov
xchg
mov
adc
ljmp
inc
rcrb
bnd
mov
ret
pop
outsb
aad
xor
add
test
cld
push
loop
pop
lret
cmpsb
mov
gs
jecxz
sbb
insb
xchg
mov
adc
inc
into
dec
fstpl
movsb
ret
iret
test
daa
or
in
rorl
cmp
and
rorl
ret
hlt
das
xchg
fimull
xchg
jp
dec
aad
shll
stos
cltd
fwait
loop
add
sbb
inc
ret
sub
pop
mov
xor
test
imul
dec
lock
cwtl
test
loope
out
add
mov
add
push
xchg
xor
lds
push
push
inc
push
mov
jb
out
loop
jo
and
sbb
sbbb
mov
lret
int
push
popf
int
xor
mov
daa
push
add
pop
push
scas
sub
cmpl
inc
xchg
movsl
stos
adc
sahf
jmp
push
negl
div
mov
je
dec
jge
lret
ja
xor
int3
sub
xor
bts
pop
lods
and
leave
mov
xorb
sbb
push
lock
rorl
mov
fcoml
push
adc
xchg
insb
pandn
mov
int3
pop
mov
mov
les
pop
inc
cs
mov
sbb
pop
xor
add
pop
mov
sbb
leave
icebp
push
sub
pop
xor
or
lahf
popa
dec
add
adc
xchg
push
lea
pop
mov
xor
push
sbb
xor
popa
and
lds
lea
pop
andl
orl
xchg
add
stos
mov
fnstenv
xor
pop
and
test
in
dec
enter
jnp
int3
daa
push
push
hlt
fdivp
pop
inc
push
fs
adc
scas
leave
sub
add
lret
inc
mov
push
xchg
jge
or
insl
mulb
cmp
and
push
or
insb
stos
xchg
jp
ficoml
icebp
inc
and
das
leave
or
clc
mov
mov
mov
jmp
push
xor
mov
pop
data16
cld
lcall
dec
imul
cmp
rol
inc
mov
sub
insl
lods
sbb
cli
push
jae
jns
movsb
mov
ret
pop
sbb
sarl
in
fcompl
mov
mov
inc
fcoms
aas
data16
jo
sbb
add
inc
pop
dec
lea
stos
in
adc
push
notb
push
or
inc
jae
out
mov
dec
push
adc
nop
aad
movsb
push
jp
jae
mov
sahf
das
icebp
notl
insb
je
js
jecxz
call
aas
repnz
insb
cmpsb
xor
xor
fisttpll
outsb
dec
imul
jne
bnd
ds
cmp
adc
subb
ja
leave
mov
ds
sbb
daa
les
ret
mov
hlt
les
xor
sub
adc
fwait
mov
sbb
pop
xchg
dec
cmp
cmp
out
andb
bound
ss
and
ret
jbe
dec
stos
mov
adc
scas
and
loope
daa
pop
inc
aaa
ljmp
dec
mov
jne
dec
push
inc
movsl
addl
or
xor
stc
sbb
mov
jg
les
sbb
rcrb
mov
xor
cwtl
jge
inc
orl
out
icebp
xor
jno
rcl
flds
mov
adc
pop
mov
fldcw
xchg
xchg
xor
cli
inc
cld
aaa
orl
and
mov
and
xor
mov
jle
std
sub
xchg
xchg
push
dec
iret
cmpsb
hlt
add
es
cs
lret
cld
and
insb
cmpsb
cmp
dec
enter
and
sbb
repnz
hlt
outsb
mov
test
add
negb
and
xchg
push
in
mov
mov
dec
cmpsl
divl
mov
xor
js
iret
dec
imul
inc
dec
xor
sub
cmp
cmc
jno
pop
xor
or
and
xchg
and
add
lcall
mov
mov
or
sbb
lock
inc
pop
mov
shl
jmp
lret
lods
inc
in
ss
mov
cltd
jno
jge
jo
push
xor
mov
sbb
fcmovbe
bnd
mov
jmp
out
leave
rolb
dec
ljmp
jl
mov
jae
inc
and
repnz
adc
xor
push
aaa
lcall
xor
add
mov
jns
cmpsl
jge
jbe
xlat
push
xor
adc
insl
lea
dec
call
push
les
test
lcall
retw
les
mov
mov
bound
ret
mov
movb
popf
pop
xor
sbb
les
add
xchg
fldt
xorl
lcall
push
mov
dec
jmp
adc
repz
jno
xor
add
outsb
lods
xorl
push
jae
bound
push
mov
push
mov
mov
jns
inc
and
cs
arpl
jb
les
push
mov
popa
test
pop
mov
push
push
sub
ret
in
adc
movsl
mov
sbb
add
push
jecxz
rcll
xorl
lcall
pop
mov
fs
sahf
popf
pusha
loop
jns
cmp
repz
jno
xor
xchg
outsb
mov
in
pop
jae
bound
pusha
inc
pop
mov
mov
jns
inc
jae
jno
xor
sub
ret
xorl
lahf
dec
pop
gs
sbb
shrl
lock
and
movsb
xchg
add
jns
push
mov
call
aas
jae
add
jno
nop
stos
lds
aaa
xchg
test
es
sub
adc
cwtl
movsl
into
adc
inc
cwtl
xor
ja
xchg
push
add
or
sbb
mov
xchg
inc
adc
sbb
test
mov
inc
dec
sbb
lods
negl
adc
xor
sbb
gs
sbb
adc
lods
aad
mov
xor
sbb
lods
mov
subb
add
outsb
stos
movsb
jns
mov
xor
in
add
and
pop
xchg
lcall
cs
jns
movsl
and
dec
sarl
movsl
fldpi
cltd
push
rorl
jp
aaa
stc
push
popa
jno
leave
dec
push
xorl
push
int
mov
inc
clc
xchg
icebp
jno
jg
mov
adc
add
xor
lock
ja
scas
lcall
popa
rorl
add
and
stos
add
xor
mov
xchg
in
icebp
dec
mov
mov
xchg
and
das
ret
mov
icebp
xor
ret
ljmp
test
adcl
addr16
rcr
imulb
mov
push
push
arpl
mov
cmp
xchg
lea
pop
shll
icebp
cmp
repnz
add
aad
in
mov
add
jp
jmp
gs
dec
and
aas
jmp
adc
lcall
daa
pop
sbb
enter
mov
in
mov
call
insl
xchg
xchg
inc
addl
push
cmp
test
les
mov
into
lcall
xor
repnz
mov
inc
repnz
dec
sub
pop
inc
rorl
mov
dec
incb
aad
lea
fdivr
dec
movsb
int
mov
test
jno
adc
lret
cmp
xor
jmp
sbb
or
arpl
les
daa
push
and
gs
jnp
in
adc
repnz
cmp
cmc
mov
ficoml
jae
xor
jle
add
mov
sub
daa
sbb
cmc
push
lods
popa
jae
and
mov
cld
bound
icebp
fadds
mov
push
mov
push
lods
into
sub
xor
xchg
dec
push
icebp
inc
aaa
negb
jle
daa
icebp
aas
xchg
dec
add
lcall
daa
out
pcmpgtw
int3
cltd
data16
dec
jbe
mov
push
sarb
dec
ljmp
aaa
sahf
pop
push
and
add
subb
leave
cld
sub
xchg
dec
movsb
mov
cmpsl
pushf
ret
and
outsb
shl
das
cmp
mov
sti
sbb
pop
mov
dec
adc
jg
inc
sbb
sbb
pop
mov
pusha
fidivrs
xor
sbb
pop
jo
xor
scas
sub
sub
mov
jbe
sub
test
jg
out
test
lods
lret
jle
testb
lret
inc
and
sahf
clc
pop
sub
jb
inc
repnz
lret
adc
popl
jmp
add
and
add
xlat
dec
dec
movsb
or
xor
dec
popl
xchg
jb
inc
xchg
fisttpl
adc
mov
mulb
sbb
or
jp
in
roll
inc
add
add
push
imulb
fdivrl
jg
ss
stc
int
dec
adc
movsb
xor
fs
ficompl
adc
adc
and
nop
push
jl
xchg
call
xor
inc
jnp
mov
int
add
aad
hlt
jle
rorb
rorl
leave
cli
inc
adc
ss
xchg
jecxz
adc
inc
cmc
pop
pop
inc
xor
push
jmp
adcl
testl
xchg
shrl
mov
loopne
lods
push
jecxz
out
mov
xor
push
dec
mov
lds
or
fcoms
jo
jge
mov
fdiv
int
inc
repnz
cmp
fldenv
jo
test
or
jns
cmp
pop
push
rcrl
and
and
xchg
ljmp
fistps
adc
mov
xor
adc
cmp
cmp
xor
inc
lahf
xor
jle
je
mov
mov
sub
movsl
andl
or
popa
cld
into
xor
jnp
int3
fdiv
mov
test
adc
ret
jae
bound
rorb
inc
cmp
xor
or
enter
jg
inc
imul
fdivrl
jns
lret
jmp
jle
mov
or
inc
lods
mov
out
and
push
adc
push
sbb
sub
mov
sub
jge
ds
dec
xor
ret
lret
xchg
shrb
cld
dec
mov
test
cmp
cmp
sub
mov
push
inc
or
and
xor
cli
repnz
xor
popf
das
sbb
xchg
mov
and
rol
add
adc
pop
jp
cld
and
add
fbstp
add
adc
insl
xchg
and
push
aam
inc
jp
mov
subl
rorb
adc
add
dec
bound
fstl
and
ja
and
xchg
adc
and
call
outsb
xchg
sbb
xor
xor
popa
sub
jno
xchg
jns
sbb
orl
mov
popf
dec
loop
sbb
and
xlat
les
xchg
sub
data16
divb
iret
cmp
or
lods
adc
nop
mov
jns
ja
shll
dec
push
in
jns
les
subl
pusha
add
ret
in
push
push
adc
push
xor
mov
push
jl
popa
jns
sbb
and
add
push
and
stc
cli
arpl
cmp
aaa
adc
mov
test
push
test
hlt
loopne
sub
rol
mov
sahf
cmp
jbe
cmc
int
mov
inc
pmaddwd
dec
sub
mov
call
adc
imul
enter
sbb
pop
hlt
mov
or
xlat
ds
sub
js
cltd
jbe
hlt
jbe
dec
fisubrl
sub
inc
test
movsl
jmp
xchg
outsb
das
ss
add
scas
daa
pop
sbb
mov
in
xchg
add
pop
sbb
xchg
dec
push
push
hlt
aad
pop
inc
jge
cwtl
lea
cmp
sahf
cmpsb
mov
in
into
jp
sub
faddp
mov
sub
rol
decb
xchg
jg
es
dec
and
pop
dec
push
bound
and
fidivs
repnz
add
cld
hlt
sub
xchg
int3
cmp
pop
and
and
inc
fsub
arpl
pop
fwait
mov
pusha
mov
mov
loope
mov
pusha
aaa
mov
fdivl
out
lahf
and
repnz
js
sbb
jmp
cwtl
stos
ds
xor
arpl
cmp
das
jno
cld
std
fsts
inc
imul
xchg
das
insl
outsl
jbe
mov
in
in
sarb
inc
clc
or
push
shl
push
sbb
ds
lock
dec
xchg
xorb
sbb
jle
cmp
les
popa
dec
les
and
or
imul
fiadds
xor
sbb
mov
inc
cmp
leave
out
push
cltd
jb
inc
insl
test
int
xchg
cmp
push
lcall
cmc
popa
xchg
scas
cmp
xchg
xchg
addr16
cmp
in
test
and
pusha
jns
ret
loop
movsb
ret
push
xor
insl
dec
adc
imul
and
outsb
push
xor
and
jae
je
push
test
or
dec
iret
mov
fcmovbe
pop
je
xchg
aam
movsl
mov
leave
adc
pusha
add
mov
cmp
mov
xor
movsb
xor
daa
sbb
das
push
mov
jno
jmp
sub
xor
repnz
cmpsb
mov
and
rorl
test
out
sbb
xlat
data16
dec
outsl
inc
leave
bnd
out
push
es
push
pop
xor
xor
mov
je
mov
adc
lods
pop
cld
adc
loopne
dec
ret
cli
sub
dec
imul
loope
or
adc
cltd
data16
cmpsl
cmp
dec
xorl
cld
inc
lea
cltd
push
xchg
push
mov
mov
inc
filds
jno
pop
rcll
sbb
pop
in
sbb
dec
cmp
and
jp
jg
icebp
xorl
push
xchg
cmp
cmpb
icebp
mov
ret
mov
sarb
bound
movsl
aaa
jno
or
fstl
or
jmp
inc
bound
out
pop
ds
mov
push
jae
jp
mov
sub
and
clc
mov
addr16
mov
addl
mov
inc
lea
xor
gs
cmp
loop
icebp
scas
adc
inc
xchg
inc
add
push
cwtl
inc
sub
imul
mov
fildl
addl
bound
dec
cmp
fsts
jmp
pop
xchg
dec
jg
jge
lock
insb
fldt
data16
lods
jmp
jbe
xor
shlb
es
fs
insb
lea
sar
aam
divb
in
arpl
xchg
xchg
aas
sub
xchg
mov
dec
hlt
and
jns
repnz
out
les
mov
in
mov
enter
and
adc
std
cmpsl
loope
imul
imul
fiaddl
dec
sbb
mov
jle
sub
cld
inc
push
into
cwtl
outsl
cs
enter
cld
xor
lea
aaa
clc
mov
hlt
cmp
fstps
cs
and
shrb
add
push
dec
pop
and
push
xor
jge
aam
xchg
daa
pusha
adc
fmul
jg
cmp
inc
add
les
push
or
lcall
xor
or
add
jg
ja
int3
inc
cmpb
mov
int
insl
aaa
repz
fstps
pusha
or
jge
dec
and
leave
arpl
ds
push
pop
sub
test
es
movsb
sbb
stos
das
ret
mov
gs
movsl
dec
gs
loope
jnp
rclb
mov
jg
pop
adc
cmp
hlt
and
xchg
scas
sbb
xchg
fmull
mov
daa
inc
xchg
mov
shrb
add
inc
stos
xor
test
mov
jno
sbb
push
xchg
fwait
xchg
pop
ss
cmpsl
cltd
lds
imul
pop
movsb
enter
test
ss
mov
or
fs
sbbl
and
cs
dec
gs
and
inc
xchg
dec
mov
loopne
xchg
daa
add
lea
sub
mov
mov
mov
mov
shrb
or
call
ljmp
sarl
mov
inc
clc
mov
imul
dec
movsb
xlat
test
cld
ss
xor
inc
push
xchg
clc
xchg
or
xchg
add
mov
ret
ds
jns
mov
push
lock
push
lods
jp
jno
je
movsb
repz
mov
stc
out
sbb
bnd
mov
push
in
pop
pop
out
jb
cmp
divb
inc
int
cmp
push
mov
add
and
pop
inc
jmp
les
cmp
and
jp
dec
and
das
add
and
leave
sbb
sbb
fs
in
test
fcomi
enter
inc
test
adc
fmuls
fcmovnbe
add
mov
cmp
dec
lock
dec
in
xor
mov
cmp
lcall
int
fisubs
fidivs
lret
jne
fisubrs
pop
addr16
test
dec
popa
push
rclb
xchg
mov
addr16
inc
push
leave
pop
xchg
xchg
ret
orl
pop
es
fldcw
jno
xor
adc
mov
push
leave
sub
xor
sub
sub
mov
inc
xor
bound
sahf
or
daa
xor
and
les
xor
push
clc
fldcw
ret
sbb
cmp
loop
in
loopne
pop
inc
pusha
dec
xor
push
and
daa
push
dec
pop
inc
fnstsw
scas
imul
in
in
xchg
rclb
in
jp
adc
add
imul
and
or
cmp
xor
inc
mulb
cltd
movnti
out
push
push
sub
add
movsl
xchg
add
rcrl
dec
jno
movsl
scas
popf
cmp
cmp
xchg
pop
push
jnp
shrb
pop
dec
lcall
jbe
ja
jg
push
or
dec
movsb
jg
jg
divl
int
in
sub
xor
jns
dec
lcall
out
arpl
push
fidivrl
cmp
out
sbb
xor
das
adc
xchg
sbb
push
jo
dec
add
or
push
sub
mov
xchg
mov
dec
movsb
popf
stos
xchg
jp
add
or
mov
movsb
xchg
inc
push
push
push
das
adc
mov
inc
pusha
fidivs
sbb
daa
test
sub
cmp
mov
push
adc
mov
push
or
dec
ja
and
push
pop
sbb
shrb
test
mov
push
pushf
sub
mov
test
out
fildl
xor
xchg
mov
movsl
or
or
outsb
xor
flds
ret
insb
ljmp
in
xchg
add
sbb
sub
xchg
lcall
test
sub
sub
mov
lcall
movsl
mov
jne
bound
sub
das
mov
mov
orb
inc
cs
pop
popf
pop
and
bnd
sub
mov
lds
cmpb
ret
insl
pushl
and
push
addr16
fwait
dec
mov
adc
dec
adcl
aam
sahf
inc
sub
xor
imulb
in
inc
bound
or
arpl
inc
test
jo
outsb
lds
mov
cwtd
fisubrs
push
in
jle
adc
aad
inc
sub
das
test
inc
lods
sub
adc
mov
jae
dec
fldt
sub
shl
pop
movsb
enter
jo
popf
int
mull
outsl
inc
out
test
out
sbbb
xor
xchg
adc
loope
shlb
dec
push
mov
mov
sarb
out
gs
push
inc
xlat
and
dec
jbe
fadds
popa
mov
loope
fmull
les
insl
adc
nop
aas
or
mov
dec
and
add
lret
push
mov
xchg
mov
or
inc
jbe
sbb
repz
adc
xor
inc
std
adc
loop
mov
mov
pop
or
subl
xor
int
mov
loop
jecxz
in
pop
dec
xor
mov
xsha256
cmp
out
pop
notb
cmp
mov
push
rolb
dec
cmp
jb
inc
rorl
popf
mov
lcall
les
lcall
dec
aas
test
and
aaa
int
and
scas
jge
add
hlt
sub
xor
inc
inc
sbb
testb
test
shrb
pop
inc
jne
shrl
jnp
lahf
jmp
test
xor
stc
jmp
pusha
cmp
cli
fistpll
scas
inc
push
push
fmuls
lret
push
or
adc
pop
cmp
push
test
mov
cmp
sbb
dec
push
lds
scas
jg
pop
push
mov
cmp
out
pop
jo
inc
or
mov
fst
lds
push
pop
movsb
movsl
mov
push
mov
push
outsb
adc
into
fnstenv
jmp
add
xchg
dec
inc
dec
shll
sbb
mul
cli
push
jmp
scas
pop
xor
adc
or
imul
cmp
mov
inc
push
sub
cmp
sub
iret
xchg
jp
jge
xor
inc
imul
jecxz
push
pop
in
dec
ret
mov
stos
mov
inc
cmp
ret
ret
lret
outsb
and
in
rolb
xor
sbb
imul
mov
and
mov
jb
mov
or
mov
mov
fcoms
dec
xor
dec
test
pop
jo
push
xor
loope
pop
loop
jecxz
imul
cs
xor
sbb
push
sub
xor
loope
das
mov
and
inc
cmp
popf
rcll
fldcw
rcrb
popa
dec
shrl
dec
lret
insb
enter
xchg
jg
loop
or
ds
inc
lock
inc
aam
sahf
clc
movntq
jne
cs
loopne
out
inc
xor
les
lods
jne
stos
jle
aad
or
addr16
dec
mov
xor
push
xor
sahf
pop
pop
es
mov
inc
arpl
mov
xor
notb
addr16
dec
cmp
icebp
inc
sub
and
push
inc
adc
imulb
mov
movsl
mov
push
mov
push
jecxz
pop
pop
and
pop
data16
das
mov
cmpsb
aaa
jmp
inc
xchg
mov
adc
pop
sahf
or
stos
pop
insl
sub
pop
ss
jne
lea
cli
cmp
stos
xchg
sahf
scas
mov
push
inc
shll
addb
push
and
int
dec
mov
subl
mov
cmp
mov
int
and
sub
xchg
push
and
push
sub
xor
dec
in
lods
out
popa
sahf
sbb
and
and
imul
push
addl
push
and
push
adc
movsl
cmp
movsl
mov
pusha
shlb
pop
add
or
repnz
jecxz
jbe
push
xchg
aaa
xor
jae
sub
and
mov
stc
sub
ds
iret
aam
pop
pop
icebp
push
or
mov
mov
ficoml
repz
enter
loopne
test
dec
push
lods
add
je
xor
or
jo
dec
shrb
or
ret
pop
xchg
inc
cmp
fadd
fmull
popa
movsl
out
sub
pop
push
aas
cli
rcr
out
sub
push
mov
pop
mov
mov
fcomi
subl
je
mov
stos
out
inc
pop
xor
mov
shrl
inc
inc
sub
xchg
mov
xchg
imul
and
xor
and
mov
push
insl
inc
jg
lret
movsl
inc
pop
xor
sahf
sti
push
jecxz
xor
shll
dec
js
cmp
and
mull
mov
bound
xor
mov
in
and
cltd
mov
jno
inc
mov
xor
xchg
clc
and
jne
cmp
xchg
jno
inc
test
aas
ret
pop
andl
jno
xor
sbb
pop
call
sbb
lods
push
jmp
sbb
fs
jecxz
fnstsw
sub
sub
lea
negb
out
cli
ds
daa
js
mov
imull
rclb
mov
inc
inc
and
daa
push
shrl
pop
fists
iret
cs
ficomps
sbb
ja
cmp
jecxz
inc
sub
mov
addr16
icebp
mov
bound
lcall
test
push
cmp
xor
lods
in
hlt
ja
xor
repz
add
sub
or
jecxz
push
data16
leave
sub
popf
das
pop
daa
or
lods
push
movsl
sub
adc
inc
mov
lcall
loope
loopne
aaa
nop
push
jmp
lods
mov
mov
mov
andl
mov
push
sub
or
push
inc
pop
lret
xchg
mov
sub
mov
dec
negl
mov
mov
mov
xchg
or
and
or
xor
add
and
std
rcr
ret
insl
pop
mul
inc
jle
or
daa
mov
in
ljmp
in
cs
test
cwtl
cltd
pop
sub
dec
add
pop
xor
shlb
jle
pop
int
inc
addb
lcall
popa
and
gs
mov
idivb
xor
daa
cmp
mov
iret
jmp
or
jle
mov
lahf
jge
sbb
lret
push
insl
inc
divb
sub
sub
or
dec
pop
pop
pop
and
mov
jne
sub
cmp
inc
mov
insb
inc
out
add
inc
ret
cmp
cmp
sbb
sahf
and
cmp
test
dec
outsb
jmp
int
pop
xchg
mov
add
ljmp
sub
jne
cs
rolb
push
lds
enter
lret
shll
push
xor
ret
shl
sbb
rclb
les
lock
int
add
movsb
sbb
mov
or
sub
enter
sub
jo
addb
jle
bound
rcrb
pushf
ret
mov
test
xor
shll
adc
add
sbb
mov
inc
hlt
out
bound
xchg
xchg
gs
es
iret
cltd
xlat
sub
and
adc
jno
inc
adc
std
sub
add
shr
inc
xchg
lea
ljmp
lds
and
mov
adc
mov
lds
pop
inc
xchg
jb
jnp
cli
mov
int
sti
jb
test
adcl
sti
xchg
call
hlt
bound
push
xchg
ret
movsl
sub
subb
jae
mov
lds
inc
das
pop
sub
stos
jge
dec
add
adc
sub
rcrl
dec
cmp
icebp
and
xor
loope
adc
jmp
mov
inc
mov
pop
dec
dec
push
inc
add
test
add
sub
bound
sub
pusha
les
pop
out
cmp
out
sbb
fidivrs
sbb
cli
loopne
js
add
pop
mov
jecxz
into
xchg
andb
int
roll
loope
in
popa
mov
shlb
lds
mov
icebp
in
rcr
xor
or
loop
in
imul
jns
push
into
dec
sahf
pop
xor
cmp
push
mov
movsl
mov
dec
test
mov
and
int
sahf
push
or
adc
cli
imul
inc
popf
sub
test
mov
jo
sub
jb
dec
sub
mov
inc
sbb
or
sbb
lret
aam
stos
int
cli
mov
pop
sbb
mov
cmp
and
adc
movsl
sahf
loope
cs
ss
mov
aam
xchg
aam
jl
push
fidivs
lods
mov
pop
xchg
adc
mov
daa
imul
in
dec
jle
jns
ret
mov
fs
xor
hlt
sub
push
loope
xor
jne
jo
test
das
xchg
push
int
and
mov
add
add
popf
xor
dec
ljmp
xor
jl
fstpt
sarl
aas
enter
mov
aaa
sub
jnp
mov
test
jl,pt
inc
cmp
test
enter
jg
cmp
sub
adcb
or
xchg
mov
repnz
jno
inc
pop
xor
jae
and
add
adc
cmpsl
push
sub
leave
imulb
sub
pop
push
sahf
xchg
add
clc
xchg
xchg
dec
dec
fstpl
push
mov
xorl
fs
enter
movl
popf
mov
sub
jns
or
enter
inc
adc
ret
dec
shlb
inc
enter
xchg
movsb
pushf
test
sbb
popa
push
inc
adc
xchg
stc
divb
sbb
push
pop
dec
sbb
ss
enter
mov
sbb
pop
jns
loopne
jge
xor
lret
js
iret
inc
pop
inc
je
xor
add
enter
xor
jmp
xchg
cmp
imul
aam
insl
popa
outsb
sbbl
mov
test
and
mov
loope
fisttpl
jb
jns
or
aaa
call
inc
test
inc
adc
dec
mov
inc
psrld
jmp
je
sub
jl
aaa
insb
subl
xchg
mov
mov
jmp
and
inc
mov
and
lea
mov
sub
lds
inc
push
inc
inc
mov
dec
mov
aaa
inc
add
fdiv
sahf
out
in
push
jmp
lds
mov
mov
je
inc
pop
adc
add
popf
xor
xchg
jp
in
inc
cmpsb
sbb
enter
int3
inc
or
popl
and
mov
int
and
iret
mov
jo
mov
int3
fildll
lret
aam
popf
cmpsl
ret
mov
or
cmp
fcoml
in
sbb
cmp
lods
add
mov
les
adc
faddl
pop
mov
gs
mov
xchg
and
roll
add
pop
adc
push
and
cmp
insl
jne
jp
xor
lret
sub
imul
das
lods
jle
stc
xor
inc
dec
push
aaa
cld
arpl
cmp
aad
imul
and
cld
fcoms
shrl
jmp
xor
lock
aad
adc
xor
call
leave
mov
mov
push
mov
or
insl
enter
mov
push
outsl
insl
mov
mov
jl
adc
data16
add
sub
sbb
inc
jg
popa
repnz
dec
pusha
sarl
loope
inc
mov
sub
ds
inc
jbe
sub
jmp
sub
repz
lahf
cli
adc
inc
shlb
popa
enter
inc
mov
loope
bnd
or
bound
sbb
mov
push
and
jmp
and
mov
enter
cld
in
aas
shlb
insb
xor
mov
test
jle
fldz
insl
xchg
nopl
icebp
movsb
sub
xor
cmp
xor
clc
cs
stos
pop
inc
jmp
add
pusha
inc
add
lods
sbb
dec
mov
out
jbe
test
and
inc
inc
xchg
repnz
sbb
or
push
jp
data16
xchg
rcrb
push
pop
sub
nop
mov
mov
and
pop
xor
rcr
stc
lea
inc
jnp
cmc
nop
cmpsb
repnz
xor
xchg
xor
push
dec
and
movsl
cmp
loope
daa
fildl
xlat
mov
xchg
adc
cld
xor
idivb
cmp
mov
and
cld
dec
inc
mov
hlt
lds
in
push
push
xchg
imul
in
leave
psllw
leave
add
jae
sbb
bnd
xchg
loope
add
mov
add
es
in
sub
aad
xchg
or
cs
mov
call
jmp
pushw
ss
inc
pop
xchg
or
xchg
inc
cmpsl
hlt
vaddps
mov
fs
push
xadd
xchg
dec
stc
jb
ja
lret
inc
sbb
xor
sub
sbb
rolb
shl
adc
inc
mov
cmp
pop
stos
gs
les
sub
xor
shrl
add
lahf
popa
bound
bound
pop
dec
sbb
mov
dec
inc
jno
sar
int
lock
movsl
jg
or
dec
sbb
aad
sbb
mov
shl
push
cmp
cld
es
notb
sbb
lods
lret
add
out
loopne
int3
mov
push
fidivrl
data16
mov
adc
aas
mov
mov
inc
dec
push
inc
sub
mov
pop
sbb
push
nop
pop
sarl
ret
mov
dec
push
mov
adc
adc
popl
jo
push
mov
filds
ss
jb
pop
push
add
clc
mov
inc
jnp
mov
fisubrs
iret
cmp
aad
mov
movsb
in
mov
addr16
push
imul
lods
pushl
inc
adc
xor
mov
jge
xchg
xchg
inc
dec
popf
and
cld
and
xor
popa
pusha
inc
cmpsl
pop
insb
inc
cmc
jecxz
add
outsb
mul
lret
push
popf
adc
inc
mov
jp
push
lret
fs
test
lret
rcll
div
out
pop
dec
and
adc
mov
dec
mov
lock
iret
orl
sti
mov
pop
xchg
mov
xor
adc
sbb
pop
xor
es
das
pop
xor
jnp
and
pop
inc
mov
mov
out
fs
xchg
testb
flds
hlt
xorl
cmp
es
adc
das
xor
xor
ds
call
inc
and
pop
mov
fldt
jo
pop
test
daa
adc
and
lods
push
dec
lahf
mov
and
cmp
das
test
nop
or
stos
cmp
pop
hlt
add
sbb
and
test
dec
cmp
dec
cmp
popa
and
and
and
mov
inc
fistps
lret
aad
je
lcall
dec
dec
aaa
enter
mov
leave
add
jecxz
jmp
inc
out
mov
mov
dec
repnz
cmp
and
adc
cmp
out
or
cmp
xor
push
inc
push
sub
dec
imul
arpl
pop
mov
push
fisttps
inc
test
fs
jle
in
dec
push
in
and
shll
xchg
dec
pop
das
popf
repnz
lcall
in
andb
call
jl
shrl
hlt
js
imul
sub
push
xchg
aad
mov
jg
les
mov
jge
shlb
out
xchg
loop
movsb
adc
jae
insb
fwait
add
fwait
mov
or
dec
and
nop
jle
mov
jmp
and
test
sub
into
or
stc
push
xchg
lahf
sub
jmp
in
jle
ss
inc
dec
mov
je
pop
push
cmp
cmp
and
not
leave
vmulss
mov
mov
pop
lds
inc
les
mov
inc
call
and
aaa
dec
mov
or
hlt
push
cmp
lock
lcall
mov
pop
imul
shlb
push
sbb
pop
leave
test
add
hlt
jb
dec
inc
les
push
push
push
sbb
rol
adc
adc
sub
push
repnz
lods
dec
adc
dec
popa
mov
sarb
test
mov
rcrb
incb
imul
cmp
cmp
call
call
call
cs
adc
scas
test
push
sti
cltd
ss
int3
push
adc
outsb
or
jl
dec
xor
or
sub
xor
xchg
cmp
xor
shll
mov
dec
push
shll
lahf
sbb
testl
popf
loop
data16
pop
outsl
fcmovnbe
dec
and
cmc
dec
movsb
sub
ss
lcall
out
pop
imul
add
jne
pop
lret
mov
cmc
repnz
adc
pop
push
test
pop
enter
shll
aad
sub
mov
stc
or
inc
push
notl
sbb
inc
aad
jno
inc
xchg
dec
mov
adc
int
imul
mov
or
rcl
sub
lcall
sbb
stos
dec
jo
sarb
xchg
inc
popf
fsubs
lds
jne
jecxz
lret
imul
xchg
idivb
lods
loop
mov
leave
jno
adcl
lea
mov
dec
dec
ss
mov
xor
cmp
mov
ds
or
out
divb
mov
shll
fwait
mov
out
repnz
inc
inc
cmpl
push
stos
mov
push
xchg
daa
mov
push
int3
mov
sbb
bound
xor
sub
and
inc
add
jno
push
dec
and
inc
mov
xor
mov
inc
in
push
enter
dec
loopne
aaa
sub
adc
cld
scas
int
gs
cmp
insl
mov
mov
sbb
cmpsb
dec
xor
mov
pop
enter
mov
dec
cmpsb
inc
inc
and
test
inc
testb
outsb
fsubrs
cmc
xor
shlb
pop
ret
stc
cmp
loope
mov
cmp
cmp
or
or
scas
lock
mov
add
jns
fnsave
or
and
lret
jne
sbb
xchg
aaa
lret
pusha
pop
popa
push
dec
mov
lret
mov
xchg
push
cmp
push
lock
ficomps
scas
ds
jp
mov
push
xchg
idivb
jecxz
incl
adc
or
sbb
xor
nop
subb
movsl
mov
in
in
cmp
dec
dec
sub
sbb
and
and
pop
push
notb
jmp
inc
dec
fs
sub
aam
gs
sub
xchg
je
mov
fs
inc
push
cmc
outsb
adc
pop
mov
mov
mov
dec
adc
jmp
mov
push
mov
xchg
les
lods
xchg
sub
sub
xchg
in
push
aaa
imul
push
push
int3
jae
shll
ss
and
xchg
push
mov
xchg
mov
into
push
and
and
xor
rolb
jno
adc
je
outsl
test
ljmp
xor
scas
sub
mov
sarl
mov
mov
sub
das
mov
imul
lock
cmp
inc
and
jno
adc
decl
mov
lods
call
inc
sub
negb
ja
push
lret
std
push
push
stos
mov
jge
inc
out
xchg
test
xchg
and
push
outsb
adc
lcall
pop
jnp
rcl
aaa
cs
xchg
dec
in
divb
xor
bound
add
lods
clc
cmp
mov
cs
mov
mov
mov
xchg
sbb
xchg
jbe
pop
jno
movsl
add
enter
movups
sub
push
out
enter
pop
gs
repnz
or
xor
loop
movsl
cli
popa
dec
and
sub
sub
adc
push
jb
das
loop
clc
cs
jno
xor
mov
push
adc
andb
and
mov
testb
pop
xor
insb
mov
cmp
xchg
jmp
mov
loope
mov
in
adcb
test
push
int3
test
jb
xor
daa
dec
or
dec
jbe
ret
outsl
stos
jno
test
sub
rcrl
inc
mov
sbb
loopne
fidivs
jecxz
sbb
push
xor
jp
pop
shl
roll
xor
xor
xchg
cmp
sarl
cmp
xchg
xor
xchg
dec
sbb
shll
lahf
xchg
cmp
jp
mov
push
sbb
pop
stos
popa
sbb
mov
loope
fdivrl
xchg
and
add
dec
add
xchg
daa
xor
sbb
adc
repnz
fildl
lods
loop
adc
jle
popa
fs
lahf
scas
inc
dec
add
sub
imul
dec
mov
or
add
popa
cs
bound
jo
imul
push
int3
mov
imul
mov
lock
movsl
xchg
push
add
addr16
adc
or
ds
push
xor
frstor
insl
sbb
or
fisubs
pop
clc
fnsave
pop
js
push
fimuls
sbbl
popf
pop
loop
jecxz
stos
movsl
or
das
cld
and
int3
js
movsb
add
sbb
dec
fists
lahf
inc
test
mov
mov
adc
iret
fnstsw
push
mov
xor
mov
inc
aas
mov
add
lods
insl
xor
test
aaa
fwait
movsb
test
mov
add
xchg
popa
fnsave
lcall
sti
mov
leave
mov
inc
xor
adc
clc
mov
imul
xor
jns
inc
popa
inc
and
lahf
loope
cmp
jns
xor
mov
fs
loope
ret
inc
adc
push
adc
sub
inc
popf
jno
jo
inc
std
inc
inc
loope
dec
dec
add
imul
ret
push
pop
ja
icebp
repz
add
std
xor
cs
and
pop
push
out
aaa
stos
and
mov
adc
adc
cmp
sub
jno
aad
push
cmp
loop
jmp
push
repnz
das
imull
and
inc
add
xor
and
add
cld
mov
cmp
sub
out
out
push
movb
fs
ljmp
sub
in
aad
mov
cld
xchg
ret
popf
cmc
insl
dec
xchg
push
popf
jge
dec
and
inc
xor
xor
movsb
adc
pop
fisubs
inc
psubusw
rolb
aaa
les
mov
inc
add
outsl
aad
sub
xchg
repnz
aaa
cmp
and
mov
pop
jecxz
pop
push
cmp
sbb
pop
fs
aas
inc
mov
xchg
cmp
xor
rcl
inc
scas
jno
dec
jle
pop
mov
dec
fdivrs
pushf
cmpsb
xor
cmp
in
mov
pop
fidivl
repnz
lahf
pop
imul
dec
inc
push
popf
sbb
fstpt
or
or
cmp
adc
aad
sub
push
mov
fsubl
mov
rcr
xor
loope
and
sbb
pop
push
adc
cmpl
mov
in
jg
sbb
xor
popa
jecxz
clc
mov
je
ss
mov
add
inc
and
jo
push
push
inc
repnz
cmp
addl
sbb
std
ret
cld
loopne
adc
stc
rcll
dec
test
shlb
mov
sub
xor
aam
cltd
mov
dec
xchg
mov
sbb
jno
inc
cwtl
cmp
sub
and
xor
aad
mov
cmp
mov
int3
inc
xchg
rclb
aam
jae
xor
mov
xor
xor
in
xor
jbe
mov
xor
adc
pop
in
loop
xchg
into
mov
dec
sub
xchg
sub
sbb
clc
sub
ljmp
outsb
jmp
and
cmp
pop
arpl
aam
sub
lds
and
pushf
or
cmp
push
and
in
inc
push
ja
leave
int
or
cmp
push
push
mov
jbe
mov
aas
jbe
cmp
sarl
inc
adc
push
dec
sub
mov
insl
jno
icebp
pop
iret
imul
xchg
cmp
xchg
das
sbbl
cmpsb
pop
mov
inc
push
push
hlt
jle
data16
pushl
gs
mov
dec
dec
insb
push
xor
jg
popa
sub
aad
inc
cmp
dec
roll
imul
lret
icebp
jge
jb
ficoms
add
insb
mov
in
push
mov
enter
cmpsl
push
lods
or
mov
aad
bound
mov
mov
fwait
iret
faddl
loope
cmp
rclb
decl
int
outsb
sub
inc
and
subb
cmp
cmpsl
jbe
fwait
cli
cmpsl
or
add
lcall
jae
xchg
xor
jmp
stos
push
addl
and
repnz
aam
imul
int3
sarb
outsb
mov
das
xchg
data16
mov
pop
cmp
pop
pop
cmc
decl
xchg
int
push
cmp
lds
movsb
jp
icebp
or
jp
loopne
movswl
bound
inc
es
loop
xchg
popa
loop
mov
push
sbb
popa
mov
dec
or
sub
daa
adc
pop
push
scas
pop
adc
xor
outsb
adc
icebp
pop
sub
dec
jbe
adc
and
sub
and
add
xor
or
push
les
insb
dec
testb
sub
jbe
push
push
and
lods
jle
mov
inc
into
dec
dec
adc
push
lret
sub
pop
and
pop
push
jnp
mov
and
jbe
push
add
ret
repz
hlt
jge
xchg
adc
frstor
cmp
sbb
sub
dec
or
sbb
xchg
jno
pop
aaa
or
cmpsl
arpl
push
ja
xor
int
lret
jmp
jne
jns
jns
mov
push
cmp
xor
sbbl
les
mov
push
mov
dec
rolb
loopne
push
adc
sub
xchg
sbb
fisubl
pop
mov
and
push
dec
mov
cmp
lods
jns
mov
and
xor
or
icebp
lret
jecxz
sub
or
jo
popf
xchg
fdivs
inc
add
dec
pop
jns
sahf
loopne
ret
pop
mov
into
inc
pop
shll
xchg
xorl
movsl
out
les
or
addl
dec
inc
push
adc
inc
xchg
add
jno
jno
dec
jecxz
push
into
and
push
mov
mov
and
jp
cld
call
cmp
jno
jb
fwait
repnz
inc
imul
push
mov
scas
adc
rclb
pop
popa
icebp
push
insl
pop
test
loope
dec
out
mov
pop
mov
dec
out
dec
popf
mov
movd
imul
mov
bound
sbb
mov
jp
inc
add
rorl
insb
dec
adc
andl
es
enter
hlt
daa
icebp
cmpsl
jge
and
jecxz
imul
sti
mov
cmc
jae
xor
jmp
dec
into
fdivl
xor
push
push
mov
jp
xor
sub
pop
fldl
sub
dec
mov
fsubl
lret
xor
cmp
std
mov
leave
cmp
mov
into
jl
sub
loope
inc
dec
jbe
mov
lcall
inc
or
adc
cmp
shl
lret
pop
test
stos
bound
fnsave
sub
test
shrl
jecxz
add
inc
hlt
imul
jns
sub
imul
rolb
es
ljmp
pop
cmp
out
addr16
adc
lret
in
test
es
test
addl
xchg
cmp
or
push
test
sahf
adc
adcl
lret
fwait
leave
add
sub
and
imul
or
lods
shlb
jno
jle
mov
and
nop
cmp
sarl
mov
outsb
in
lods
fsubl
cmp
shll
jle
insl
int3
push
lea
es
pop
leave
lock
dec
jle
fidivs
push
adc
cwtl
sub
dec
mov
aas
inc
push
adc
ret
cs
xor
jne
inc
pop
cmpsl
adc
fs
cltd
les
push
pop
aas
lcall
inc
dec
sbb
rcl
mov
das
or
mov
in
jno
inc
leave
test
ffree
loopne
xor
cmp
lahf
insb
cmpsl
cmp
negb
clc
lea
hlt
cmp
and
xchg
mov
mov
andb
test
mov
jno
jl
aaa
sahf
addr16
cmp
rolb
mov
mov
mov
ds
cmp
add
or
aaa
xor
mov
sub
sahf
xchg
add
jbe
push
pop
and
sub
sub
rorb
pop
cs
int3
xorl
sti
cmpsb
in
cmp
and
or
enter
lret
inc
push
add
push
aaa
daa
mov
push
and
inc
test
in
ss
push
out
lret
rcll
sbb
or
shlb
sub
cmp
bound
int
and
xchg
mov
cmpsb
sub
and
sub
lahf
sub
cmp
fs
outsb
dec
xchg
pop
sub
cld
popf
out
ljmp
aas
mov
sub
xor
inc
cmp
hlt
jnp
mov
pop
fwait
pop
loopne
sub
dec
in
cld
int3
shll
push
aad
push
fldcw
fmull
xchg
jo
cmp
fisubrl
xchg
pop
pop
jno
dec
jecxz
inc
int3
and
cmp
mov
sub
orl
inc
out
add
ret
fnstsw
icebp
scas
mov
ret
add
inc
scas
xchg
int
cwtl
mov
bound
sub
cmpsl
mov
stos
imul
jle
jns
add
jecxz
jp
outsb
cmpsb
aam
dec
les
fs
jno
and
pop
divl
call
ljmp
insb
mov
insl
bound
cmp
jbe
sahf
and
sbbb
inc
sbb
pop
add
push
daa
mov
xchg
pop
dec
or
aam
jp
push
aad
adc
xor
mov
jno
inc
jb
mov
inc
scas
or
cmp
sub
pusha
lcall
std
push
pushf
dec
rclb
ficompl
popa
mov
jp
push
fbstp
dec
xchg
sub
popa
inc
and
push
arpl
addl
cmp
adc
pushf
insl
imul
std
rolb
or
cmp
mov
repnz
pop
inc
data16
dec
cmp
lcall
dec
popa
mov
xchg
and
mov
add
int3
jge
int
das
movsl
and
add
aaa
cmp
cmp
push
gs
add
xchg
or
lods
adc
dec
adc
hlt
lcall
lcall
fstps
jo
and
imul
xchg
add
and
loopne
adcl
push
rolb
xchg
cld
jg
ret
sbb
xor
and
xchg
jg
or
in
jno
dec
dec
xor
inc
stos
inc
mov
dec
bound
arpl
jo
jno
or
inc
pop
data16
jno
pop
mov
mov
add
rcl
es
movsl
leave
and
sub
imull
and
sub
clc
xlat
pop
mov
jp
jb
sbb
inc
icebp
and
clc
xor
sbb
clc
iret
jae
sahf
mov
mov
or
jp
pusha
ss
aas
mov
pop
inc
xchg
cmc
inc
xor
add
jg
mov
jle
aam
pop
mov
test
nop
scas
lods
les
sbb
mov
rcrl
sub
push
notb
mov
mov
pop
iret
sub
out
int
or
push
add
mov
testb
fldl
movsb
jnp
ret
push
mov
pop
inc
dec
enter
and
mov
ljmp
sub
and
out
sub
sbb
aaa
mov
and
call
imul
push
inc
xchg
jbe
lds
mov
imul
test
popf
push
inc
out
and
and
call
movl
movsl
jb
mov
mov
ss
dec
xor
sbb
mov
jae
mov
inc
ds
jge
in
push
pop
data16
test
jno
out
sub
push
rcrl
add
test
inc
mov
shrl
in
push
popa
movsl
jae
cmpsl
dec
loopne
mov
call
and
xlat
push
fnstenv
cltd
xchg
das
fimuls
mov
divb
stos
ret
or
les
shll
lods
shlb
ja
sbb
jp
jge
xor
fstl
outsb
dec
aad
mov
xchg
insb
enter
test
sbb
nop
sbb
in
popf
imull
daa
in
mov
gs
and
js
loop
lret
mov
and
cmp
test
fwait
dec
in
adc
add
andb
loope
clc
sbb
mov
in
and
xor
imul
lcall
mov
sub
jle
xchg
ds
xchg
test
xchg
pushl
pusha
gs
jne
out
out
mov
pop
mov
sub
jno
movsl
mov
fs
pop
mov
xor
andb
push
inc
sbb
repnz
bound
pop
and
xlat
insl
sub
xchg
fld1
pop
imul
shlb
or
push
xor
sub
insb
mov
fnop
rcrl
test
movsl
stos
pop
inc
jge
andb
cmpl
inc
rcpps
and
dec
fiaddl
adc
mov
xchg
dec
pop
sub
rcrb
push
imul
repz
dec
pusha
mov
inc
pop
jl
aas
sti
dec
flds
sbb
cli
fsubl
jle
sub
sub
int
scas
insl
mov
lret
cmp
sbb
cmp
jecxz
stos
inc
imul
lret
dec
hlt
mov
les
sub
adc
es
add
mov
dec
mov
sub
inc
mov
or
test
aam
cli
fs
dec
sub
and
xor
push
mov
cmp
mov
jno
movsl
xchg
sbb
outsb
inc
or
mov
xchg
in
fnstsw
or
rorl
mov
fbld
mulb
jle
insb
sti
mov
cmpsl
push
test
or
pop
xchg
insl
imull
sub
inc
xor
in
cltd
or
jmp
mov
jno
add
cmp
leave
les
cmpsl
stos
cmc
lcall
push
negb
cmpsb
pop
jo
xchg
xor
xchg
notb
inc
mov
int3
xor
dec
add
pop
sbb
or
inc
ds
popa
mov
sub
shlb
test
int3
and
test
xchg
jmp
mov
jo
inc
xchg
cs
jo
inc
inc
ljmp
and
sub
mov
inc
sbb
iret
in
ljmp
jae
pop
cmp
dec
cwtl
movsl
cmc
lods
enter
mov
push
adc
imul
pop
sub
in
sub
hlt
and
jns
jns
nop
stos
push
imul
sbb
push
xchg
jle
loope
smsw
inc
dec
inc
push
js
inc
addr16
xor
js
jae
outsb
aaa
fimuls
dec
leave
test
stc
push
xor
adc
aad
jmp
sbb
loope
in
jns
fstps
les
les
mov
repz
data16
imulb
mov
xchg
xchg
or
dec
xchg
and
les
loope
icebp
sub
dec
les
sbb
cmp
mov
ret
mov
sub
loope
sub
add
mov
dec
dec
cli
into
ss
test
fs
mov
add
aam
and
cmp
repnz
inc
int3
dec
das
lahf
mov
and
sub
dec
pop
lcall
pop
aas
sub
mov
xor
cmp
adc
dec
add
xchg
dec
in
adc
cltd
xor
popa
pop
int
xchg
cltd
lods
aad
out
inc
je
jle
or
inc
pop
repnz
cmpb
movsl
imul
sbb
mov
jg
sti
push
test
aad
shrl
cs
pop
inc
bound
xorl
scas
xchg
push
in
mov
pop
ljmp
pop
xchg
pop
pop
dec
pop
and
andl
push
xlat
cmp
cmp
test
ds
sub
stc
movsl
sbb
xchg
imul
leave
rcrb
pusha
mov
lods
cmp
jae
and
test
popa
xchg
mov
in
and
shl
push
lret
push
add
sbb
outsl
dec
imul
adc
mov
pop
cmp
sbb
int
out
out
xchg
cmp
gs
dec
and
ds
imul
inc
imul
cmpsb
xchg
repz
sahf
sbb
fisubs
sarb
pop
sbb
push
mov
xor
inc
andl
lret
mov
push
pop
lds
xchg
push
inc
enter
dec
lds
pop
jns
push
inc
and
sbbb
sbb
sub
xor
sub
inc
movsl
repnz
mov
mov
decl
nop
mov
repz
jg
inc
cmp
lcall
in
xchg
and
enter
mov
aam
xorl
fwait
inc
inc
pop
je
xchg
in
testl
or
xchg
sbb
mov
pop
pop
dec
adc
add
add
in
add
addl
sysexit
adc
stos
call
movsl
rorb
imul
out
int
pop
jnp
in
inc
out
and
shlb
and
inc
scas
mov
out
add
stos
jne
test
sub
ja
popa
andl
adc
pop
out
xchg
popa
adc
jbe
popa
mov
sub
add
sub
pop
aam
sub
xchg
lcall
mov
xchg
lret
mov
dec
push
jbe
mov
dec
cmp
shl
ljmp
ja
dec
xchg
inc
jne
xor
aas
sub
inc
dec
and
sahf
inc
add
sub
jmp
bound
out
or
inc
test
adc
gs
test
xor
inc
daa
imul
ljmp
jb
dec
lock
pop
mov
add
sahf
mov
mov
xor
shlb
xor
sbb
dec
push
testb
cmc
mov
sbb
iret
into
leave
pop
mov
lcall
out
fidivs
or
cmpsb
add
jae
push
hlt
in
das
mov
mov
pop
jmp
jl
mov
les
jp
cwtl
pop
sub
es
les
inc
lods
leave
pop
xor
sub
es
hlt
adc
outsb
cmp
sub
mov
cmp
xor
jno
insl
insl
inc
mov
mov
and
loop
cli
push
in
pusha
loop
sub
fsubrs
push
popf
adc
xor
nop
push
dec
int
scas
inc
popa
push
jmp
jne
xchg
xchg
sbb
imul
dec
imul
adc
push
icebp
and
and
test
jae
jg
cmp
testl
sub
inc
pop
ja
fiaddl
add
rorl
xchg
jbe
or
aad
notb
add
hlt
outsl
imul
ror
stos
sbb
aam
dec
ds
and
clc
lea
aaa
add
dec
fstpt
movsb
sub
inc
movsb
lods
dec
push
cmp
xlat
push
imul
mov
cltd
jmp
shrb
cmp
bound
sbb
inc
shll
jno
inc
hlt
and
loope
andl
lea
outsl
loopne
xor
clc
xor
push
inc
test
or
inc
ljmp
stos
fsubrl
inc
and
leave
push
cmp
mov
cmp
in
bound
xor
fs
test
daa
rol
loop
xchg
fldcw
mov
add
push
sub
movsl
jb
mov
pop
mov
pusha
mov
adc
jge
in
xor
les
cmpsl
call
sub
mov
mov
and
mov
xor
dec
or
mov
lea
jb
mov
lods
pop
pop
shl
pop
xchg
addb
push
inc
xorl
jno
and
in
xor
sub
shll
inc
sbb
jp
or
mov
test
and
sub
lods
shlb
inc
pop
arpl
inc
push
inc
sarl
dec
cmpsl
rolb
jmp
imul
fcoms
xor
pop
add
mov
cmp
jmp
divb
pop
aam
xor
sub
das
in
adc
cmp
cmp
add
adc
sub
repnz
push
or
mov
fcoml
jmp
pop
into
fdivrs
dec
xor
cli
pop
push
pop
std
adc
push
mov
mov
lea
add
sub
sbb
enter
add
sysenter
aas
push
jg
hlt
test
loope
add
ja
int
icebp
sbb
call
xor
push
push
int3
pushf
fcmovnb
fnstcw
in
aam
loope
or
dec
pop
mov
rolb
jp
fwait
mov
aad
inc
mov
jp
popa
pop
and
xor
inc
jns
data16
mov
mov
sbb
mov
mov
xchg
dec
sub
mov
mov
cmpsb
negb
repz
test
ds
xchg
adc
cmp
sahf
add
aad
xor
test
ret
and
fdivr
or
test
daa
or
mov
shlb
movb
jmp
aad
jl
sbb
mov
cs
xchg
pop
xchg
xor
stos
and
imul
jb
lods
cmp
aaa
or
push
ss
inc
mov
mov
inc
enter
shlb
aam
inc
fcoml
and
sbb
fs
cs
sub
shlb
push
or
insb
or
cltd
push
add
jne
das
loop
scas
test
sub
enter
mov
fwait
push
and
add
mov
int
sub
or
stos
sarb
sub
jne
mov
xchg
sub
dec
test
cmp
cli
test
pop
repz
sti
mov
inc
aas
enter
ret
xchg
loop
cmp
sub
pusha
inc
enterw
and
push
push
sub
in
cli
xor
pop
and
jbe
into
dec
cli
push
sbb
cld
lahf
repz
or
sbb
and
mov
test
and
or
sbb
push
test
cld
nop
cmpl
cmpsl
leave
imul
shlb
call
sbb
rcrl
je
sbb
cmp
inc
sbb
fstps
push
mov
call
add
sbb
xchg
sbb
ficomps
lret
mov
cmp
sbb
adc
mov
out
stos
mov
aaa
rclb
push
adc
lods
inc
jp
lahf
int
jns
push
adc
adc
cwtl
rcl
dec
jno
xor
cltd
jge
dec
fdivr
in
adc
out
inc
and
cmc
push
sub
adc
and
ljmp
inc
shr
inc
or
and
and
shr
inc
sub
push
sahf
sub
push
jmp
imulb
mov
nop
arpl
and
imul
mov
in
imul
insb
dec
aam
fwait
mov
dec
fwait
insl
or
ljmp
jecxz
adc
adc
jge
inc
sbb
imul
mov
jns
loope
sbb
cld
aas
cmp
stos
mov
fisttpl
sub
testb
leave
add
dec
les
enter
mov
popf
and
in
add
sub
inc
jmp
idiv
test
adc
rcll
inc
dec
inc
sub
inc
test
mov
xchg
stos
push
hlt
sbb
stos
in
cmp
fildll
pop
adcl
add
les
pop
jg
push
adc
imul
hlt
adc
inc
mov
adc
jecxz
adcl
pop
inc
sub
mov
mov
jno
and
dec
in
pop
jns
adc
cltd
push
lods
addr16
pop
icebp
int
cmpsl
push
cmp
and
xchg
call
imul
xor
add
sahf
pop
xchg
add
pusha
adc
push
pop
dec
sbb
adc
cmc
sub
lret
jmp
xchg
in
jle
dec
cmp
mov
pop
dec
punpcklwd
hlt
fildll
in
mov
mov
pop
pop
ret
popa
or
mov
cmp
stc
add
ret
and
or
testl
psrad
shlb
push
lds
pcmpgtb
ror
sub
fistpll
jl
lods
and
es
popa
das
xor
aas
leave
sub
das
repnz
daa
adc
sub
icebp
xchg
xor
hlt
xchg
mov
insl
cld
call
jns
sbb
inc
std
dec
push
mov
imul
es
lock
cli
inc
repnz
mov
push
inc
inc
mov
cmpsl
lods
mov
cld
aas
jl
ljmp
or
les
or
xor
test
push
pop
cmpsl
bound
in
sahf
or
add
cmovne
lods
scas
xchg
lcall
les
ret
daa
movsb
jne
lcall
shlb
jne
cmp
icebp
dec
adc
adc
cmp
add
jbe
pop
mov
mov
lret
out
scas
pop
fldcw
sub
fstpl
shlb
mov
jne
pushf
cmp
mov
lds
sub
adc
add
xor
jb
mov
add
xchg
cmp
cli
insl
jmp
xlat
jno
inc
enter
ret
and
ret
loope
mov
push
inc
or
out
jb
sbb
iret
xchg
aad
aaa
jae
scas
pop
dec
movsl
movsl
jae
and
mov
je
lods
arpl
push
inc
mov
xchg
popf
mov
inc
cld
lods
push
push
add
popa
fstl
movsl
sarb
cmp
pop
mov
nop
enter
mov
add
ja
imull
mov
jle
push
icebp
imulb
sbb
mov
cmpsl
jno
and
les
sbb
sub
xor
mov
imul
mov
aam
frstor
ja
les
xor
xor
dec
sbb
mov
xchg
or
test
push
push
cmc
bound
mov
adc
mov
bound
and
xchg
aaa
insb
push
sub
enter
fisubrl
and
sbb
add
rcrl
cltd
cmp
sub
jl
in
adc
inc
push
ficoml
jns
test
jae
jnp
inc
xchg
mov
into
je
xchg
jecxz
test
pop
adc
sub
dec
addr16
jb
mul
int3
sbb
sbb
add
jnp
dec
xor
and
adc
repnz
inc
cmp
loopne
and
das
stos
and
push
push
cmp
aaa
movsl
jmp
insl
fnsave
lcall
push
cmpsl
adc
ss
ss
les
sub
adc
jle
clc
xor
hlt
in
aaa
clc
inc
pop
lods
out
mov
repnz
mov
inc
clc
pop
lret
int
andl
pop
lret
mov
popa
cmc
int
pop
cwtl
fidivrl
push
adc
cmp
imul
mov
jae
test
push
enter
pop
add
int3
out
dec
aad
es
or
es
imul
dec
adc
and
mov
cld
cwtl
and
sub
adc
cltd
adc
jno
xor
mov
shlb
aad
mov
lcall
mov
push
sbb
add
shr
ja
pop
and
test
or
mov
stos
dec
adc
test
and
jmp
aad
jmp
lods
std
gs
ljmp
push
aad
or
and
inc
popa
sbb
icebp
add
stc
fstpt
rcl
jmp
fldt
pop
test
xchg
pop
daa
loop
stos
jmp
repnz
jg
es
mov
mull
push
sub
mov
or
mov
or
jp
lret
icebp
dec
cmovae
movl
icebp
repz
bound
jnp
jg
aad
and
jno
insl
push
stos
imul
cmc
mov
into
push
sbb
gs
lods
imul
pop
cwtl
xor
arpl
pusha
imul
xor
mov
xor
pop
add
push
fsubrl
cwtl
repnz
jge
lret
leave
shll
jge
aam
mov
in
xor
ja
and
xor
nop
repnz
lock
mov
inc
pushl
test
push
das
sbb
xchg
ret
rcrb
inc
push
mov
inc
adc
hlt
pop
xor
cmp
cmp
mov
xor
adc
add
jp
fdiv
loopne
push
scas
sub
call
fstps
and
inc
jmp
push
adc
lock
outsb
mov
lea
test
adc
mov
cld
mov
shl
adc
cmpsl
mov
dec
arpl
fmulp
xlat
push
sbb
xchg
lods
pop
xchg
enter
xor
pop
sbb
fimull
pop
lods
mov
es
xor
add
mulb
push
mov
pop
push
mul
int
jle
lods
adc
filds
jno
mov
std
dec
or
popa
push
loop
jg
mov
stos
sbb
ss
lret
cmp
lcall
xchg
add
insb
mov
xor
mov
inc
xchg
and
test
sbb
jb
das
aam
dec
data16
dec
xor
jle
aas
scas
xor
in
ffree
or
out
and
jns
add
xchg
mov
ss
cld
mov
cwtl
fucomp
scas
cld
fnstenv
lsl
inc
xchg
dec
cmp
sub
xchg
lret
loope
cmp
and
sub
les
xor
cs
aaa
mov
add
out
dec
inc
popf
sub
cmp
mov
mov
inc
fwait
hlt
and
push
push
sbbl
xor
mov
inc
dec
add
addl
orl
sbb
sbbl
popf
inc
xlat
sti
push
inc
and
sbb
mov
sub
ss
mov
test
aad
push
mov
ret
rorl
pusha
les
in
outsb
xor
mov
xor
mov
sbb
andl
iret
xchg
dec
jge
xchg
dec
sbb
add
push
aad
or
jno
fmull
loope
sbb
add
push
pop
xchg
int
inc
sub
sti
sbb
ds
aas
insl
pop
inc
inc
xor
sub
aad
lret
mov
pusha
and
mov
mov
stos
cmp
cmc
mov
mov
shll
aaa
out
cld
inc
cmp
jl
push
repnz
sarb
aaa
mov
sbb
mov
cmp
add
cld
cwtl
xor
stos
xchg
pop
das
scas
push
lcall
mov
xorl
cs
jne
test
mov
sub
jae
cmp
push
aad
add
sub
add
test
jne
outsb
cld
daa
xor
jp
dec
push
aam
gs
and
rsm
insl
push
mov
icebp
adc
push
out
and
add
lods
fwait
push
stc
leave
test
stos
mov
mov
xor
out
sub
jecxz
mov
das
push
push
dec
cs
fst
lret
push
cmp
jbe
sub
das
add
cmp
in
sbbl
jns
jo
mov
gs
mov
jb
cmp
xor
mov
in
cmp
test
add
aad
pop
mov
and
xor
imull
sub
jae
push
jnp
inc
in
and
jnp
xor
or
or
cmc
xchg
inc
mov
into
test
sbb
sub
outsl
mov
mull
inc
mov
cmpsl
sub
cmp
cld
stos
dec
cmp
inc
bnd
mov
cmp
leave
in
mov
inc
int
fistpll
mov
xchg
adc
movsb
gs
inc
mov
data16
shll
fs
outsl
jecxz
and
test
mov
shll
cli
ja
cmp
mov
leave
lds
jns
xor
addr16
les
push
inc
jno
pop
insb
push
ret
pop
and
sub
out
or
mov
les
mov
cmp
repz
arpl
inc
pop
push
and
pop
out
or
cmpb
inc
daa
or
ror
sbb
out
sbb
test
push
xor
orb
cmp
mov
les
cmp
rcr
dec
popa
dec
popa
loop
adc
ffreep
dec
aad
add
xor
pop
loop
dec
cwtl
add
imul
insb
gs
sbb
jl
pop
jge
shrl
or
leave
mov
jbe
bound
pop
out
jmp
push
enter
mov
lods
pop
cmp
mov
push
and
xor
mov
and
jg
aaa
insl
xchg
loopne
fisubs
push
inc
jg
or
ds
xor
fucom
push
mov
adc
aaa
cmp
imul
add
mov
sarb
pop
rcl
pop
jmp
pushf
dec
test
dec
sub
inc
and
mov
adc
jnp
pop
dec
jmp
xchg
int
push
xchg
mov
scas
stc
pop
xor
imul
and
out
adc
jne
mov
jno
cmc
dec
jg
push
or
aaa
les
push
jnp
inc
in
testb
xor
sbbb
aad
test
xchg
psllq
adc
jnp
push
addl
mov
mov
lea
xor
cmpsl
insl
mov
pop
pop
sbb
and
or
xchg
imul
jge
repnz
test
jmp
test
and
inc
xchg
adc
bound
insb
mov
or
cmp
sub
xor
add
cld
sbb
aam
cmpsl
push
push
inc
adcl
rcrl
push
sarb
hlt
inc
stos
dec
je
mov
add
test
pop
adc
stos
rcll
aad
testb
pop
lcall
in
add
or
test
addb
outsl
out
pop
insb
in
outsb
or
mov
orl
mov
sbb
sub
mov
fsubrs
push
shrl
popa
inc
mov
xchg
inc
xchg
push
mov
enter
jno
pop
aam
mov
ds
scas
rcrl
sub
loope
cmp
or
jecxz
xchg
push
mov
les
out
stos
or
icebp
enter
lea
test
aam
inc
xor
rol
mov
clc
in
sub
push
push
cmp
push
inc
jmp
push
bound
sbb
inc
bound
push
push
gs
fldcw
pop
out
xchg
xchg
sub
out
jnp
insl
int
dec
push
jae
sub
pop
mov
out
inc
mov
in
dec
sbb
and
gs
inc
test
adc
test
test
hlt
aad
in
gs
popa
and
sub
sbb
cmp
and
mov
jmp
inc
roll
movsb
and
imul
xor
stos
test
ds
add
xchg
xchg
mov
mov
test
mov
shll
into
dec
out
cmp
gs
dec
stc
inc
pop
sub
sbb
ret
mov
hlt
lahf
pop
mov
rep
or
cmc
clc
sub
inc
popl
xor
sahf
mov
aas
leave
lret
in
lret
stc
or
aaa
and
push
jg
push
hlt
mov
and
pop
dec
inc
dec
repnz
inc
push
imul
es
icebp
pop
addb
out
dec
arpl
cmp
ret
es
dec
loopne
mov
mov
mov
sahf
jl
inc
fstps
lahf
shrw
in
in
negb
push
outsb
ret
sbb
inc
adc
dec
aam
mov
add
push
rorl
cmp
js
sbb
and
les
imul
or
jae
lret
push
bound
xor
jbe
fistl
ja
cltd
imul
inc
sbb
lret
adc
pop
xor
push
dec
adc
mov
push
xchg
push
push
mov
imulb
les
call
fmul
mov
cmp
mov
xor
das
sub
sbb
fcmove
lods
aam
cmp
test
shll
stos
adc
inc
push
push
jae
jecxz
hlt
gs
xchg
aaa
mov
xor
pop
insb
mov
mov
clc
cmc
shlb
adc
xor
or
cmp
lea
jno
fbld
jmp
add
sub
lret
push
les
and
or
mov
lea
mov
add
lret
xor
jae
iret
shll
loop
pop
daa
neg
jno
outsb
int
jmp
lods
xorb
jecxz
pop
jo
or
push
cld
test
shll
daa
cli
and
dec
xchg
je
dec
mov
adc
testb
les
or
fnsave
stos
call
fbld
jae
pop
and
mov
test
cltd
adcl
je
mov
mov
cmp
ficoml
js
pop
xchg
stos
or
addb
js
aad
ljmp
shl
mov
mov
mov
jp
mov
cmp
sub
negb
mov
les
into
inc
cmp
rclb
add
aad
pop
jp
orb
cmpb
out
scas
sarl
ljmp
ret
test
int
roll
loop
out
shll
push
fdivrl
pop
xchg
mov
push
cmc
lret
sahf
dec
out
push
in
pop
mov
les
aaa
inc
sbb
sbb
imul
ss
jle
push
repz
push
push
mov
imul
mov
mov
sbb
and
xor
fs
test
andl
dec
es
xor
aaa
insb
popa
mov
inc
xor
mov
fldl
dec
out
mov
fiaddl
pop
push
mov
adc
xchg
call
loop
mov
sub
cmp
in
xor
loopne
mov
push
xor
xor
cmp
testb
ret
xchg
fsts
mov
cmp
ffree
mov
push
imulb
jecxz
lods
dec
xchg
mov
cld
inc
mov
sub
sbb
cmp
lret
lds
pop
xlat
rolb
ret
dec
orb
daa
lds
test
inc
mov
inc
shrb
xlat
push
notl
jnp
stos
xor
add
pop
fistpll
cmpsl
jg
rolb
mov
outsl
fadds
or
push
popa
push
dec
orb
es
pop
jne
daa
inc
mov
push
dec
leave
pop
pusha
test
jnp
das
or
cltd
add
ficoml
pop
data16
shrl
mov
shll
jae
leave
cmp
jno
mov
rcl
xchg
or
push
cmp
inc
jmp
push
push
push
jecxz
and
dec
or
outsl
hlt
or
or
incl
sub
shll
mov
iret
outsl
mov
sub
sub
push
sub
insl
or
dec
aas
pop
jno
jne
ds
rep
add
outsl
dec
js
lds
mov
xor
xchg
mov
xor
dec
add
mov
or
loope
or
mov
ds
incw
loop
aad
dec
popa
xchg
push
mov
adc
insb
in
jb
dec
cmpsl
add
gs
xchg
jns
rol
aad
cs
pop
fs
mov
addr16
xor
pop
push
movsl
mov
sub
cs
test
pop
outsb
mov
xchg
pop
out
aaa
arpl
hlt
inc
push
push
insb
push
and
sub
out
add
cmp
and
inc
jb
pop
rcr
pop
inc
ljmp
testb
pop
jnp
dec
jnp
or
xor
les
dec
xchg
mov
in
lock
ljmp
push
popa
mov
addr16
adc
aad
mov
sub
push
repnz
inc
jp
imul
dec
cli
jns
mov
pop
inc
inc
insb
iret
cld
bound
test
les
ret
les
or
fdivs
pushl
inc
lret
sub
jne
lahf
inc
out
inc
push
sub
inc
loop
add
push
arpl
inc
sbb
add
cmp
inc
filds
arpl
insl
push
leave
sbbl
insl
push
cmp
jb
movsb
stc
outsb
adc
push
in
cmpsb
fidivrl
mov
in
xchg
loope
adc
mov
in
scas
push
shlb
inc
fisttps
lods
imul
enter
pop
test
fldl
icebp
outsl
insb
sub
jns
add
jno
xchg
lds
adc
jno
outsl
xor
in
cmc
sarl
push
cmp
lods
inc
inc
sub
inc
imul
jl
mov
js
and
insb
fisubl
stos
adc
sar
mov
inc
int3
xorl
pop
fildll
push
btr
mov
gs
pushf
dec
dec
in
les
sbb
imul
rolb
lods
add
je
or
aaa
add
sbb
insb
lods
add
call
lea
iret
cmpsb
dec
les
ficomps
out
add
xchg
addr16
mov
xchg
add
movl
lret
cmpsl
xlat
sbbl
jno
push
jns
sbb
loope
adc
int3
insl
test
sub
push
inc
imul
into
ret
xchg
adc
ja
inc
add
test
pop
insb
adc
cltd
add
sti
data16
lret
mov
jg
insb
pushf
test
lock
std
ss
out
inc
cld
jle
lods
outsl
xor
loop
inc
or
jnp
sub
or
pop
push
imul
adc
inc
sbb
mov
mov
imul
add
push
imul
xchg
xchg
and
xor
xor
enter
or
add
fistl
xchg
mov
addr16
ret
cmp
xor
lret
testl
add
enter
push
mov
das
loope
mov
jecxz
and
cli
push
gs
mov
imul
popf
sbb
and
inc
nop
outsb
les
lock
jbe
out
push
add
jo
mov
sbb
repnz
mov
sbb
push
rcrb
fnstcw
iret
push
inc
ret
outsb
stc
mov
and
lret
js
aaa
cmp
adc
lea
mov
mov
sahf
dec
xchg
mov
jmp
fisubl
fmul
mov
std
cltd
jle
loope
orl
pop
inc
sbb
sbb
or
sahf
mov
mov
ret
lods
adc
adc
popa
enter
insb
sbbb
hlt
adc
lods
jle
jo
in
sub
inc
adc
sbb
gs
in
add
ficoml
mov
sub
mov
jge
cwtl
jae
test
dec
add
jge
pop
pop
into
dec
movsl
cld
stos
pop
sub
cmp
fsubl
outsl
lods
gs
shll
fstpt
popf
insb
icebp
arpl
imul
icebp
sub
sbb
fwait
and
imul
mov
and
movntps
push
lahf
mov
data16
xor
jo
das
cmp
push
xor
imul
iret
call
test
mov
adc
les
cmp
push
jnp
mov
xor
enter
or
xchg
cmpsl
jb
xchg
push
cmp
icebp
jae
dec
cmp
aam
jbe
movsl
jno
jns
loopne
outsb
imulb
jnp
and
add
pop
out
and
and
cmc
adc
cltd
stos
mov
inc
xor
jb
sbb
cmpsb
cmp
in
jecxz
mov
mov
inc
lret
ljmp
and
xor
add
pop
cmpb
subb
movsl
imul
shr
cmp
lret
popa
sbbb
xor
loop
movsl
mov
popa
xchg
inc
mov
popa
xor
in
test
cs
pop
ret
lods
out
stc
fnstenv
and
inc
shlb
sahf
hlt
fidivs
je
sbbb
fnstenv
mov
mov
scas
xor
mov
popa
xor
xor
sub
loop
xchg
cmp
sbb
xchg
xchg
mov
pop
es
inc
and
xor
sub
hlt
add
insl
ret
mov
pop
cmc
inc
sbb
mov
hlt
or
aam
sub
sbb
pop
fisubrl
push
js
xor
fadd
jle
pop
aam
mov
fldcw
shlb
jle
mov
std
jge
lods
pushf
mov
adc
jbe
cwtl
test
sbb
dec
std
mov
popf
les
inc
cmp
pop
ss
or
mov
xor
and
push
push
xor
pop
inc
mov
xchg
ljmp
popa
subl
fwait
aas
add
insb
mov
xchg
mov
jle
adc
or
outsb
mov
mov
lahf
dec
jge
cmp
imulb
lcall
or
cmpsl
mov
nop
mov
stc
push
xor
cmpl
mov
es
and
out
sbb
mov
push
sti
popl
hlt
loop
dec
or
das
dec
add
popa
and
rcrl
or
push
sub
clc
cmpsb
adc
xchg
sbb
addr16
test
loop
xchg
test
jne
pop
push
insb
stc
mov
jb
mov
sub
insb
int3
inc
mov
sti
mov
push
mov
in
repnz
hlt
les
cltd
sub
inc
jae
test
ds
xchg
mov
loopne
lahf
in
ja
mov
cmpsb
cmp
popf
notb
adc
call
inc
outsb
xor
stc
or
sbb
testb
ja
cs
adc
jno
aam
mov
into
jle
sbbl
data16
jb
pop
adc
or
or
adcl
stc
dec
sbb
inc
add
pusha
sub
push
adc
addb
popa
cwtl
fadds
test
out
jne
mov
jbe
popa
adc
stos
xchg
cmpsl
mov
sti
int
lds
add
js
aad
pop
xchg
aas
push
subb
int
inc
sub
bound
mov
jg
data16
repz
cltd
dec
add
mov
bound
inc
insl
mov
stos
mov
mov
pop
pop
mov
imul
rcrl
aaa
jp
loopne
xorl
fstpt
popa
inc
mov
jl
jg
pusha
push
sub
cmp
jb
sbb
xchg
ds
adc
add
ljmp
insl
cmpsl
es
scas
adc
sbb
adc
mov
inc
es
dec
lcall
push
or
push
cmp
inc
mov
icebp
pop
sti
xchg
fnsetpm(287
jo
pop
lea
insl
rcrl
imul
xchg
or
orl
xor
xor
mov
and
repnz
stos
push
into
inc
inc
cli
inc
je
sub
cmp
pop
cmp
ret
cmpl
lahf
lret
stos
ljmp
adc
cmp
inc
cwtl
mov
jp,pt
adc
scas
ja
js
lock
testl
push
lods
inc
jns
movsb
add
lea
ss
mov
insl
inc
sub
lods
cli
adc
into
dec
fs
jg
mov
jb
lret
dec
nop
cmp
mov
shl
pop
and
in
mov
lret
or
adc
sahf
rorl
loop
adc
xor
cmp
push
aaa
push
das
jns
fildll
inc
daa
repz
stos
sub
xchg
push
add
scas
cmpsl
stc
lret
stc
push
addl
xchg
mov
xchg
jnp
xchg
das
sbb
xor
dec
pop
xor
sub
or
mov
es
movsl
imul
inc
or
push
push
mov
int3
outsb
push
cmp
dec
lahf
xor
cmp
xor
jmp
xlat
ret
lea
sbb
cmp
inc
push
in
popa
push
push
push
push
jmp
mov
outsl
fiaddl
cli
sub
mov
mov
sahf
mov
scas
pop
mov
rorb
stos
add
sub
leave
jae
cmp
push
mov
xchg
add
inc
mull
sub
pop
insb
arpl
push
cmp
ret
outsl
loope
loop
repnz
movsl
or
or
inc
adc
mulb
shrb
lcall
andb
lods
jo
das
ficoml
aaa
pop
push
shll
mov
sub
insl
shrb
or
xor
jle
bound
mov
xor
popf
mov
popa
sub
das
xlat
sbb
clc
or
sbb
aad
int3
cmp
or
repz
sar
mov
dec
lcall
jp
in
lds
iret
mov
or
in
mov
adc
cmp
pushf
pop
mov
sti
imul
repnz
or
daa
in
xor
xor
out
pop
mov
inc
jne
dec
enter
dec
test
push
cmp
insb
push
int3
mov
divb
fnsave
mov
sub
or
and
into
push
mov
sub
les
aaa
jg
cli
int
or
jae
dec
xor
mov
inc
dec
sub
testl
xor
stos
cmp
ret
std
popf
cmp
ds
dec
dec
xor
test
repnz
nop
cmp
popa
es
outsb
in
outsl
or
stc
xchg
lcall
aas
inc
xchg
prefetch
dec
ss
lds
add
movsb
dec
cmp
jae
lds
cmp
mov
inc
es
jns
data16
inc
mov
push
arpl
imul
xor
mov
adcb
inc
jle
pop
sub
rcll
cld
pushf
inc
inc
and
dec
mov
xor
push
push
adc
jmp
mov
test
mul
jmp
test
repnz
enter
stos
mov
data16
or
outsl
mov
js
pushf
xchg
rcrb
arpl
repnz
xor
sub
bt
andl
lahf
lea
jp
inc
inc
mov
dec
mov
leave
mov
fsubp
mov
add
fisubl
aaa
hlt
fwait
and
movsb
inc
jns
dec
push
dec
ficompl
sub
test
pop
pop
rol
jl
inc
in
nop
pop
inc
outsb
and
jns
mov
push
ss
and
lock
je
pop
mov
repnz
dec
mov
and
test
sub
xchg
rorb
push
and
add
inc
inc
das
xor
rol
xchg
fnstenv
dec
push
enter
inc
xorb
fdivl
adc
movsb
test
and
jne
mov
mov
pop
pop
push
adc
push
testl
mov
inc
adc
pop
mov
xchg
mov
sarb
dec
lret
xor
out
sub
adc
les
int
add
ret
jle
incl
or
sub
sarl
scas
daa
imul
push
pop
cmp
testb
cmp
adc
pusha
dec
scas
lods
dec
shr
pop
add
inc
out
or
mov
inc
push
lea
xor
adc
sub
add
dec
ret
je
fdivr
test
in
mov
dec
cmp
popa
pop
rorl
in
mov
inc
in
jge
or
fdivrl
lock
arpl
fbstp
mov
fldl
cmc
xchg
leave
adc
andb
adc
dec
int3
cltd
shrl
cld
inc
and
adc
mov
mov
cmp
sbb
xor
roll
xchg
mov
sbb
pop
ret
dec
mov
nop
and
mov
movsb
jg
pop
imul
or
clc
sub
xchg
ljmp
sub
adc
ss
int
push
inc
push
pop
mov
outsl
jae
loopne
push
dec
scas
sahf
and
inc
ret
inc
add
repnz
mov
xchg
cmp
xor
jnp
loope
cmp
pop
cmp
leave
ja
lods
push
push
imulb
pop
or
stos
lds
inc
or
out
jmp
repnz
int3
mov
lcall
jmp
mov
pop
mov
pop
push
pop
popaw
loope
outsb
lret
and
xor
sub
jae
mov
add
loopne
mov
xor
mov
adc
add
add
sub
and
mov
mov
add
pop
sub
push
icebp
mov
gs
push
lahf
push
ret
add
dec
pop
push
imul
xor
mov
das
pop
rorl
fs
les
pop
dec
xorb
fildll
ret
cmp
je
or
push
fwait
mov
movb
lret
in
std
mov
repnz
loopne
mov
add
addl
imul
inc
lea
les
push
call
std
movsl
pop
outsl
dec
roll
inc
mov
lods
jno
cld
cmp
lcall
sbb
or
fwait
push
dec
and
shll
imul
dec
cmpsb
adc
lcall
push
or
xchg
mov
adc
loope
les
gs
sub
inc
cmp
jne
jl
inc
sbb
cmp
dec
pop
ljmp
xchg
inc
lret
les
movsl
lcall
pop
lcall
push
out
or
xchg
jae
or
sbb
inc
test
inc
lahf
add
inc
pop
adc
mov
aas
cmpsb
lcall
inc
sbb
pop
pop
call
inc
mov
cld
inc
xor
xor
jns
out
aad
and
adcb
sbb
scas
cmp
and
lret
sub
lret
inc
out
inc
repnz
mov
cmp
negb
adc
scas
pop
shlb
shrl
rcl
cmp
mov
sbb
dec
int3
repz
mul
cmpsb
jp
inc
cmp
in
out
add
mov
sahf
adc
or
cmp
mov
scas
dec
cld
xor
fisubs
inc
push
jae
and
repnz
pop
jg
leave
xchg
fcompl
sub
in
rorb
cli
lock
mov
paddw
xchg
movsb
push
sub
xor
repnz
sub
aaa
or
inc
mov
sbb
sbb
or
mov
stos
test
pop
test
cmp
push
insl
xlat
and
std
or
repnz
out
push
jmp
push
out
arpl
pop
mov
or
jae
in
les
jp
call
adc
jle
shlb
imul
pushf
lret
push
fdivrp
cmp
jge
arpl
lock
mov
jns
inc
les
jnp
test
inc
dec
cmp
mov
cmovo
repnz
pop
mov
push
inc
aaa
xor
add
push
inc
or
sbb
pop
sbb
push
sbb
popa
sub
data16
xor
inc
scas
jmp
jns
inc
xchg
pop
sub
inc
cmp
cwtl
push
fildll
test
or
push
repz
sbb
cmp
aaa
dec
inc
mov
inc
sbb
mov
aad
jg
mov
xchg
sar
xlat
roll
movsb
xor
and
shll
and
repnz
aam
fwait
jo
sbb
das
push
insb
enter
xor
xor
cltd
xlat
or
push
cmp
pushf
sub
pop
jns
jp
fucomip
mov
std
mov
inc
xor
pop
push
fs
sub
jno
inc
addr16
mov
cmpl
push
dec
mov
xor
mov
loopne
lret
fcoml
sub
rcll
ret
in
mov
jae
insb
je
subl
data16
jp
inc
cmc
dec
cmp
pop
sahf
mov
mov
std
scas
mov
jge
or
fwait
stos
mov
sub
xchg
lds
sbb
sbb
jmp
aas
dec
and
inc
stos
mov
dec
sbb
nop
push
lods
test
sub
cs
inc
sub
ss
and
xchg
gs
movsl
daa
mov
lds
mov
inc
sbb
ret
jmp
movsl
inc
pop
cmc
mov
mov
jmp
insb
adc
inc
cmp
dec
mull
inc
test
mov
rorb
push
cmp
xchg
lds
into
mov
xchg
mov
cmp
add
push
jno
or
sbbw
mov
sub
gs
jno
bound
and
je
or
jno
cltd
push
icebp
lret
sub
mov
aam
and
pop
mov
adc
jge
add
sub
and
cmp
int3
cmp
les
fucomip
out
bound
xchg
push
jg
push
cli
xor
xorb
fcomip
cmp
dec
xor
cmp
shr
idivl
or
dec
mov
movsl
dec
lcall
mulb
or
mov
push
and
inc
js
jne
or
test
or
dec
aaa
dec
inc
add
and
jmp
in
lret
jmp
lcall
pop
in
inc
imul
dec
sbb
push
mov
jnp
ret
xchg
repnz
dec
testb
dec
mov
mov
gs
sub
ljmp
xchg
mov
popa
mov
and
test
fwait
xchg
int
loope
adc
jbe
adc
andb
xchg
insl
fadds
jno
mov
sti
sbb
xchg
mov
or
and
and
cs
jl
pop
repz
dec
lock
arpl
fbstp
sub
adc
push
out
add
jne
mov
sbb
loop
insb
daa
sbb
xchg
pop
lahf
xchg
mov
inc
jnp
mov
push
pusha
fcomip
and
mov
cs
pop
addr16
shl
xchg
xor
inc
xchg
aam
pop
das
sbb
lcall
mov
pop
and
les
aam
add
add
or
icebp
and
mulb
fwait
test
es
ficompl
popa
mov
xchg
pusha
into
sti
adc
cmp
xor
pop
mov
inc
clc
mov
leave
push
sub
icebp
scas
loop
std
xor
xor
dec
and
or
mov
cmp
sub
mov
leave
xchg
add
insl
xor
jmp
lahf
call
ret
jo
adc
ret
xchg
gs
mov
pop
mov
stc
adc
ljmp
jl
iret
cmp
divb
mov
push
adc
pop
and
push
mov
or
cmp
jb
lods
add
cld
lcall
cmc
sub
lds
ss
insl
xor
sbb
cmp
lret
ljmp
xchg
cs
aad
add
xor
jp
stos
jg
punpckhbw
jge
in
sbb
adc
stos
bound
mov
shlb
xchg
scas
imul
mov
loop
inc
xor
lret
loope
sbb
fadd
push
adc
aam
inc
adc
or
test
pop
xor
push
inc
scas
mov
mov
repnz
pop
test
add
std
arpl
ss
outsl
inc
mov
inc
aas
push
or
jge
arpl
out
imul
jae
lods
inc
mov
sarl
push
lcall
ja
sar
lcall
aad
sub
shr
out
aad
jno
cmpsl
gs
pop
cmp
cmpsl
mov
nop
and
jae
icebp
rorb
testl
inc
stc
xchg
cmpb
ja
inc
lods
mov
or
jg
enter
pusha
repz
add
or
or
and
jae
in
repz
movsb
ficompl
les
mov
arpl
ret
insb
add
popa
xlat
sub
push
in
cmp
xor
daa
and
and
stc
inc
andl
std
inc
inc
daa
icebp
negb
inc
aas
pop
jmp
les
cmp
into
xor
rcr
ror
sbb
dec
test
hlt
dec
fwait
mulb
dec
sub
adc
ljmp
pop
orb
loop
and
popf
pop
sti
and
add
xlat
imul
xchg
adc
push
aad
mov
pop
lds
dec
ds
stos
pop
dec
cli
xor
jge
push
sbbb
xor
jp
loope
mov
push
out
enter
mov
repz
pop
push
rcr
dec
dec
mov
inc
and
lock
jb
imul
adc
sub
push
mov
movsl
sbb
mov
rorl
insl
cltd
inc
mov
repnz
inc
xsavec
push
outsb
sbb
int
repz
out
ds
mov
divb
mov
jns
aad
jmp
add
insb
das
push
pop
mov
fwait
pop
into
je
and
and
les
lcall
mov
sahf
hlt
test
stos
fs
mov
add
jae
sub
or
outsl
xor
out
iret
ss
shll
test
xor
imulb
imul
dec
xor
push
sub
and
xorl
les
mov
mov
adc
add
int
loop
imulb
mov
popf
xchg
lret
addr16
in
or
rcrl
adc
pop
sub
pushl
dec
arpl
cwtl
push
cmpsb
push
pop
and
or
xor
xor
out
mov
negl
into
dec
insb
mov
sahf
xor
notl
fisttpll
aam
data16
adc
mov
in
rorl
enter
aam
push
fs
je
shl
push
push
xor
pop
mov
jecxz
push
or
in
pop
sbb
fs
mov
test
inc
movsb
daa
mov
mov
mov
mov
adc
pusha
imul
insl
cmpsb
xchg
xor
pop
ja
mov
rorl
test
loop
lea
int3
rorl
int
push
xor
jp
xor
sub
adc
sbb
es
inc
int
mov
adc
bound
and
mov
or
ljmp
addr16
jl
adcl
mov
lcall
les
insl
xchg
inc
ret
jns
movsl
or
sbb
outsl
shrl
shll
xchg
jno
mov
add
pop
and
jns
les
call
and
repnz
les
aas
mov
xorb
mov
xor
out
mov
cmp
jecxz
jno
jmp
cli
cli
adc
sub
loope
push
scas
int
dec
mov
lcall
mov
outsb
push
xor
lcall
push
nop
adc
lret
ss
mov
nop
jg
push
sahf
xor
push
fldl
shrl
xor
test
lock
push
leave
or
mov
outsl
daa
sbb
add
icebp
popa
repz
pop
sahf
pusha
jb
aaa
push
bound
xchg
out
xor
mov
lods
mov
push
inc
arpl
mov
and
mov
jge
jmp
mov
rorl
pop
addl
sub
inc
jle
pop
inc
sub
shlb
pop
test
inc
nop
shrb
aaa
in
icebp
loop
adc
mov
fstp
add
jo
insl
mov
mov
sti
adc
iret
dec
push
shll
icebp
popa
pop
cmp
pop
insl
aad
fs
mov
out
in
cmp
dec
jge
jnp
mov
inc
bound
imul
dec
sti
mov
dec
add
mov
adc
inc
outsl
hlt
and
cwtl
ret
sub
test
out
mov
test
outsl
inc
test
push
add
pop
jmp
loop
repnz
das
sbb
ljmp
sbb
sbb
aas
jle
ret
push
shll
mov
cmp
and
push
lcall
cmp
add
inc
flds
jae
add
and
imul
loope
rcrb
sbb
bound
arpl
pop
ja
xchg
xchg
in
sbb
or
loope
and
popa
jg
test
jne
mov
xor
pusha
repz
adc
pop
jmp
jo
adc
inc
call
les
push
lret
dec
test
hlt
daa
lcall
mov
dec
jmp
xchg
inc
insb
inc
push
push
push
repnz
mov
mov
out
pop
dec
dec
push
xor
leave
popa
xor
add
sahf
ja
mov
fnsave
es
lock
shlb
push
in
int
add
test
mov
test
pop
imul
and
loop
push
inc
pop
mov
divb
inc
movsb
aaa
fstps
pop
cmp
adc
daa
adc
aad
xchg
xlat
adc
mov
dec
jmp
pop
inc
mov
push
dec
bound
lock
jb
gs
dec
push
dec
sbb
mov
int
out
mov
push
stc
pop
ret
dec
dec
mov
mov
cmp
ljmp
cmc
mov
gs
adc
fwait
aad
lcall
add
mov
dec
cmp
les
inc
cmc
xchg
dec
xchg
jl
cmpsb
xor
lock
lds
xchg
cmp
adc
loop
out
cmp
push
or
std
push
fldl
inc
aaa
imul
jne
inc
cmpsl
pop
add
mov
test
xor
rorb
inc
xchg
jb
xchg
fxch
cmpb
cmp
jb
jl
pushl
inc
mov
insl
push
idivl
iret
test
enter
popa
scas
jmp
test
mov
pop
sbb
int
outsb
cmp
in
dec
xchg
dec
push
jle
idivb
hlt
les
cmpsb
decb
inc
aad
mov
data16
cmp
arpl
test
filds
popa
dec
or
jp
shrl
and
mov
cld
add
pop
lods
push
cmp
cli
jecxz
mov
fists
lret
dec
add
mov
inc
inc
mov
inc
subb
push
andl
js
cmc
bound
pop
shlb
das
repnz
jecxz
push
cmp
mov
mov
lock
sbb
call
xchg
fidivs
mov
mov
add
ja
dec
xor
mov
dec
insb
loopne
addr16
das
push
shr
dec
xchg
or
xor
xor
cld
in
inc
ljmp
xchg
hlt
rolb
xchg
dec
mov
pop
push
xchg
jg
dec
cmp
negl
test
mov
cmp
mov
repnz
sub
push
xor
shll
iret
inc
dec
or
daa
sahf
adc
sub
subl
bound
in
inc
xor
mov
pop
fildl
popa
inc
xchg
sbb
inc
in
clc
adc
cmp
push
mov
xchg
mov
jecxz
mov
in
sbb
fdivl
mov
jl
leave
aaa
mov
into
pop
dec
in
inc
push
inc
pop
popf
test
in
outsl
lods
pop
mov
inc
mov
repnz
xorb
xchg
or
pop
xor
jle
and
not
or
mov
inc
cmc
cwtl
mov
jle
fnstsw
daa
push
inc
iret
push
xlat
inc
enter
xchg
inc
dec
mov
sarb
push
jae
or
jns
shrl
loop
sub
sbb
enter
shlb
cmc
inc
sub
jge
repnz
cmp
jbe
add
out
sub
and
ret
andb
data16
shrb
dec
pop
das
scas
mov
and
leave
xchg
mov
in
or
lret
mov
pop
push
inc
mov
es
imul
fs
cmp
lea
in
mov
inc
test
pop
aas
cmp
in
mov
cmp
stc
sbb
enter
call
fidivl
std
enter
pop
popa
inc
push
sub
enter
push
jge
sub
sbb
push
iret
pushl
loopne
cmp
push
movsb
lods
adc
push
inc
mov
subl
test
xchg
xchg
cmp
jo
movsb
push
inc
adc
sbb
mov
xchg
rcr
cli
gs
jg
movsb
inc
or
dec
outsl
aaa
stc
and
mov
and
inc
xchg
popa
inc
fdivl
mov
popa
dec
enter
jo,pt
lret
xor
mov
movsl
sbb
pop
dec
mov
inc
jb
pop
inc
gs
push
ror
inc
mov
dec
mov
lea
mov
call
call
pop
mov
dec
jmp
add
in
int3
push
mov
pop
pop
push
xchg
andb
pusha
shld
fsubrl
pop
jb
aad
cmpsl
mov
lahf
xor
mov
movsl
rorb
mov
repnz
pop
in
xchg
inc
jbe
mov
pop
mov
jne
movsl
cltd
rorb
push
xor
jmp
sbb
dec
xorl
sar
jns
divb
cmp
jle
subl
ljmp
push
xchg
jg
sub
aad
arpl
inc
data16
cmpsb
mov
push
test
mov
jecxz
adc
hlt
mov
and
cmp
mov
inc
xchg
inc
ljmp
sbb
popa
pop
js
or
gs
test
movsl
ss
jle
ret
mov
das
xor
inc
inc
fbld
test
inc
lock
inc
push
jno
xchg
or
mov
mov
xor
repz
gs
jae
dec
roll
dec
xor
sub
add
ja
in
xchg
and
js
scas
cmpl
call
fst
jp
shlb
add
mov
ret
mov
je
je
cmp
jne
outsb
lretw
insl
push
test
and
sar
mov
and
dec
int
lahf
outsl
pop
gs
mov
add
adc
dec
repnz
js
hlt
imulb
push
out
xor
push
sbbb
cmp
jmp
push
or
sub
cmpsb
push
test
roll
dec
xor
inc
mov
mov
orb
ds
dec
dec
les
jmp
scas
sub
push
daa
dec
pop
icebp
pop
imul
add
fcmovnu
jle
lods
mull
xchg
insb
adc
mov
bnd
shl
push
ret
cli
xchg
and
cmp
inc
ds
dec
imul
jnp
shlb
inc
pop
sbb
jge
and
shrb
fstpl
incl
push
ret
pop
lret
lock
mov
stos
sbb
daa
dec
les
mov
push
push
xor
in
cltd
dec
fs
leave
call
fistpll
mov
les
fstp
divl
xor
inc
jg
shr
xchg
ror
imul
enter
cmpb
mov
pop
xchg
xchg
arpl
xchg
les
and
rolb
insb
cs
imul
repz
inc
mov
sub
sub
mov
add
pop
decb
cmp
xchg
in
cli
int3
jge
aad
mov
jmp
lret
int3
mov
jp
xchg
push
mov
dec
lds
pop
test
jge
and
sbb
ja
es
jl
or
jae
push
add
lahf
bnd
push
mov
popa
push
stos
xchg
push
cmp
sbb
cli
mov
sarb
mov
cmp
mov
cmp
fyl2x
push
mov
and
fisubrs
pop
movsb
sub
arpl
popa
mov
sbb
cs
pop
imul
dec
call
mov
mov
sbb
pushf
std
jmp
push
aaa
fwait
icebp
into
dec
jmp
xchg
xor
rclb
cmc
dec
popa
fsts
mov
or
cwtl
add
aaa
shrb
push
into
xor
movsl
stos
sub
shl
mov
mov
ja
stos
add
fdivrs
adc
sub
xor
lret
or
insl
mov
loop
movsl
mov
inc
rcll
lret
jle
xor
mov
add
es
jne
pop
push
xchg
dec
and
xchg
mov
fdivrs
repnz
dec
xchg
cwtl
in
xchg
pusha
stc
sarl
sub
add
test
or
adc
dec
bound
cmpsl
daa
sbb
lcall
incb
sbbl
out
addr16
gs
push
insb
xchg
sbb
and
shlb
int
sub
call
out
dec
add
testb
ret
xor
pop
bound
sbbb
lret
mov
add
imul
adc
jp
cmc
gs
sar
xchg
dec
mov
loop
pop
pop
or
cmpl
ds
jne
sbb
jo
pop
shll
stos
mov
mov
dec
dec
hlt
test
test
pushf
xchg
mov
push
sahf
jno
test
clc
out
pop
ret
out
dec
push
les
add
clc
mov
or
or
pslld
dec
xor
negb
in
les
into
imul
aad
inc
jne
les
xchg
cld
and
mov
icebp
stos
xchg
fcompl
dec
pop
adcl
popa
in
leave
inc
push
aad
cmp
addl
cmp
pushf
cmp
aad
cs
dec
cmpsb
add
lods
push
leave
xchg
jl
cmpsl
les
stos
or
xor
imul
rcll
cmp
xorl
repnz
push
insb
push
inc
add
loopne
movsb
mov
das
mov
add
sti
iret
inc
loop
loop
jg
add
fs
popa
gs
scas
cmc
inc
addr16
inc
push
scas
mov
test
imulb
ss
xchg
dec
add
mov
cmp
pop
or
dec
cld
addb
lods
inc
lods
dec
imul
lods
mov
jae
mov
sub
push
mov
cmpsl
pop
lds
lods
cs
pop
lahf
jecxz
or
add
xchg
fcoms
xor
testb
aad
dec
dec
repnz
push
adc
out
lods
inc
int
test
loope
xchg
adc
jo
xchg
and
imul
mov
int3
jns
xchg
push
aaa
cmp
popa
rcll
mov
pusha
fistpl
lret
imul
ret
push
xchg
mov
lds
sub
add
daa
and
cmpsb
mov
leave
in
xchg
aad
ljmp
jge
and
cmpsl
insb
pop
sub
cmp
loop
push
je
mov
push
jno
xchg
jp
pop
add
push
jbe
pushaw
imul
sub
push
jge
lret
jno
dec
pop
add
push
inc
das
loop
xchg
ljmp
mov
out
dec
imul
insb
xlat
jne
roll
dec
rcrl
std
bound
out
mov
mov
xchg
push
fistpl
dec
out
push
in
push
aam
pop
sbb
aas
cmp
mov
push
inc
mov
lahf
xor
xor
aam
and
mov
mov
call
lds
hlt
in
add
cltd
xlat
mov
pop
lcall
and
cwtl
addr16
inc
fidivrl
and
mov
adc
and
inc
addr16
mov
cld
lock
mov
jno
push
sarb
cmpl
adc
iret
rorl
icebp
push
xchg
adc
shll
pop
aaa
dec
mov
and
les
inc
pop
and
cmp
sbb
clc
inc
mov
jmp
xchg
rcll
mov
scas
shr
mov
adc
test
repz
inc
inc
cmp
addr16
les
jp
imul
inc
adc
cmc
cmpsl
jno
mov
ja
cmp
aad
sub
push
dec
test
xchg
outsb
sub
and
dec
mov
dec
xchg
jns
and
push
movsb
sub
adc
or
cld
push
xchg
pop
roll
xchg
jbe
add
test
ss
sub
mov
sbb
repz
int
shlb
enter
movsb
in
push
int
imul
inc
test
aam
std
dec
shlb
pushf
in
hlt
in
inc
adcl
and
add
cmp
dec
inc
adc
dec
fcoml
add
cmc
les
mov
jecxz
dec
ret
add
cmp
mov
dec
mov
cmp
loopne
pop
mov
and
cmp
data16
shrl
xchg
loope
jle
fincstp
fwait
xor
pusha
mov
xchg
cmp
insb
mov
imul
scas
add
mulb
inc
mov
xor
xchg
and
xor
mov
sub
repnz
push
mov
sahf
test
jp
mov
sub
xorb
imul
and
sub
sbb
pop
ret
lock
insl
les
pop
inc
adc
test
sub
mov
or
aaa
cli
pop
and
inc
pop
sub
inc
push
fnstsw
xchg
int
cmpsb
adc
jbe
insl
pop
pop
mov
shll
mov
adc
mov
xchg
add
lds
mov
mov
sub
insl
gs
aas
xchg
xor
cmp
mov
jle
sub
lret
mov
not
mov
mov
mov
cmp
pop
enter
popf
mov
xchg
imul
push
jno
insl
xor
push
jo
pop
in
sub
add
push
and
xor
lret
or
adc
push
or
es
lods
sub
mov
inc
cmp
aas
mov
ljmp
xor
ss
push
inc
mov
cmp
lahf
mov
das
dec
fsubs
pop
sbb
pop
jg
out
in
or
ja
rcll
adc
popa
sahf
pop
es
movsb
jmp
jmp
xchg
ret
aas
arpl
loopne
lock
cmp
cmpsb
jo
fbstp
jo
xor
enter
call
mov
mov
inc
mov
outsl
xchg
add
jp
lea
push
shr
mov
sbb
add
adc
adc
add
push
mov
adc
add
clc
fs
push
mov
add
stos
sbb
inc
dec
idivb
mov
xchg
out
insl
fs
pop
addr16
cld
mov
mov
outsb
andl
icebp
les
mov
daa
and
imul
sub
repz
iret
sarl
pop
aad
pop
pop
popa
inc
les
mov
jo
jecxz
xchg
mov
mov
mov
mov
dec
jl
popa
dec
in
das
les
in
and
mov
push
icebp
push
dec
xchg
movsl
cmpsb
cvttps2pi
pop
mov
or
add
lret
jae
mov
pop
xor
mov
xchg
push
bound
mov
xor
add
mov
xchg
inc
xchg
fdivrs
sub
push
sub
mov
cmp
bound
adc
push
daa
movsl
xchg
in
cmp
ds
xor
loopne
mov
and
and
jge
ret
or
sub
mov
aaa
xor
pop
bound
mov
test
push
cs
mov
mov
shld
mov
outsb
xchg
and
pop
test
jle
and
rcr
popa
pop
arpl
dec
pop
xchg
mov
adc
xor
ljmp
xchg
lds
test
je
les
and
sub
or
lret
out
xorl
mov
mov
movsl
es
lods
mov
fisttpl
xchg
fcmovnb
xor
sarl
sub
pop
or
jnp
cwtl
mov
jo
fstpl
leave
outsl
mov
lret
add
xchg
xor
inc
das
sbb
xchg
sub
std
in
pop
and
test
stos
xor
popf
push
dec
inc
icebp
mov
and
cwtl
test
push
jne
aad
pop
les
xor
inc
jle
adc
rclb
icebp
loop
leave
loope
dec
lcall
pop
mov
out
stc
gs
sbb
sub
scas
mov
dec
pop
or
lcall
pop
cmpsb
lods
subl
iret
xor
mov
adc
xor
or
mov
pop
add
and
dec
popa
and
pop
fdivrl
mov
push
jg
out
movsb
loop
sub
and
add
lret
fcmovnb
in
mov
scas
stos
jp
mov
call
repnz
cmpsl
xchg
mov
mov
jo
xchg
pop
ret
mov
nop
adc
in
pop
pop
inc
adc
xor
cmp
fnstenv
in
xor
pop
dec
lret
xchg
inc
pop
xchg
lods
shlb
pushf
mov
cmpsl
stos
lret
out
pop
mov
test
test
cmc
or
cltd
jl
js
add
sub
inc
mov
push
adc
xchg
sbb
cld
mov
xchg
xchg
rcl
xor
dec
imul
push
addb
push
js
push
shl
fnstenv
inc
sub
push
mov
sub
mov
sub
cmpsl
jecxz
loopne
inc
sbb
mov
add
rorl
dec
lea
gs
scas
push
mov
dec
mov
insl
imul
dec
push
xchg
sbb
jnp
pusha
nop
jecxz
aad
aam
lds
pushf
mov
add
mov
dec
xchg
pop
fldcw
aad
pushf
ljmp
movsl
mov
jns
scas
inc
pop
mov
pop
inc
xor
add
mov
inc
sub
push
sbb
arpl
call
mov
and
sub
sub
adc
push
addr16
mov
loop
pop
mov
inc
or
jmp
push
jp
out
int
cs
mov
lods
or
add
lret
sub
push
jns
cmp
jmp
mov
mov
cmp
xor
push
and
adc
imul
les
dec
adc
inc
in
adc
lods
fxch
sahf
scas
in
xor
jnp
jb
in
arpl
out
das
xchg
movsb
cmpl
push
mov
push
andl
repnz
inc
cmp
dec
add
mul
stos
inc
lret
mov
lock
push
lahf
ss
aas
mov
xor
xchg
dec
mov
scas
inc
add
pushf
xor
arpl
sahf
mov
mov
adc
lcall
mov
imul
dec
arpl
xor
push
xacquire
gs
enter
sub
rcrb
pop
xchg
das
fcompl
jle
pop
addb
loopne
pop
fs
testb
mov
or
out
cmpsb
faddp
inc
loop
jmp
adc
fsubp
inc
test
jne
and
mov
dec
jmp
movsl
dec
sub
sub
rorb
sbb
iret
dec
xchg
push
xor
fbstp
incl
test
or
and
jae
mov
push
jbe
push
jns
cmpb
inc
inc
aad
sub
inc
clc
and
and
adc
mov
outsb
jbe
inc
jmp
inc
or
sbb
pop
pop
inc
lods
incl
les
in
mov
mov
xchg
inc
les
mov
add
iret
push
sub
fprem
outsl
ja
sbb
xorl
lret
inc
ds
inc
pusha
lret
rol
ja
shrl
mov
out
dec
cmp
leave
inc
sbb
mov
lret
fsubrs
in
pop
insb
movl
sub
inc
xorl
test
sbbb
inc
xlat
inc
jmp
mov
xor
mov
mov
inc
mov
enter
jno
push
inc
sar
xor
inc
or
xchg
dec
jmp
popa
sbb
jns
ret
ds
test
cmp
fs
jbe
enter
insl
mov
xchg
dec
dec
addl
push
popa
add
push
aad
loope
mov
vpslld
mov
es
testb
or
into
je
jp
popf
xor
lcall
dec
rcrb
sbb
fcmovbe
cli
mov
xor
sbb
and
pop
inc
jno
push
sbb
xor
inc
push
test
sub
dec
xchg
dec
mov
cs
int
or
cmp
jecxz
lahf
mov
xchg
ja
jns
adc
ljmp
mov
mov
mov
popf
jecxz
mov
test
xchg
inc
enter
cmp
and
or
inc
leave
out
xor
or
and
inc
pop
divb
in
das
jl
inc
inc
push
js
hlt
cvtpi2ps
inc
in
or
loopw
cmp
clc
rcr
sahf
lock
lods
jp
inc
inc
add
xchg
sub
movsl
aaa
ficoms
mov
or
jp
popa
lock
dec
xor
mov
and
add
add
rorl
cmp
inc
movsl
and
mov
lcall
mov
loop
outsb
jmp
in
xor
and
dec
lahf
xor
dec
add
stc
cwtl
sbb
mov
mov
mov
xchg
cmp
imul
aas
pop
lods
test
and
sub
data16
loop
lods
mov
or
and
jno
les
jno
cmpsl
insl
and
xchg
mov
insb
out
mov
xchg
xchg
outsl
mov
les
mov
cmp
xor
add
lods
mov
pop
mov
cmp
andb
movsl
lods
addr16
sbb
inc
pop
xor
sub
jb
lcall
pop
orb
add
mov
sbb
xchg
add
leave
shrl
sbb
repnz
dec
popa
mul
hlt
adc
out
aam
es
push
sbb
cmc
inc
test
dec
cmp
aas
sub
in
int3
arpl
inc
or
lds
leave
or
test
in
hlt
and
inc
mov
inc
sub
adc
in
cmpsb
rcll
push
mov
lret
loop
mov
gs
jmp
js
ret
jo
loope
in
lock
lahf
xor
aad
or
lahf
push
and
pushf
fldl
data16
pop
dec
inc
jno
sbb
out
mov
test
sub
and
insl
lret
fistpll
and
push
js
sbb
repnz
fistps
jb
stc
mov
jno
bound
or
pop
push
inc
dec
pusha
enter
int
pop
mov
sbb
push
mov
push
xchg
mov
test
mov
das
roll
jmp
push
mov
mov
mov
fildl
sahf
mov
push
sbb
les
pop
jae
or
xchg
mov
push
and
lds
adc
out
jp
xchg
stc
mov
pop
mov
pushf
adc
cmpsl
jno
bound
les
pop
xor
fwait
jmp
mov
pop
daa
dec
sbb
push
mov
gs
test
clc
inc
mov
fs
int
mov
dec
movsb
jp
sbb
sbb
jg
mov
mov
shlb
pusha
in
mov
mov
jg
xchg
fdivrs
shlb
idivl
pop
mov
xchg
divps
test
in
cwtl
cmp
repz
mov
xchg
jecxz
jbe
lcall
dec
popl
lods
jbe
pop
iret
adc
test
rorb
jnp
inc
sub
mov
cmpsl
add
or
add
sahf
pop
fwait
mov
inc
ret
addr16
inc
in
lock
push
cmpsb
inc
mov
mov
in
adc
jge
inc
scas
loop
gs
les
mov
popa
mov
mov
roll
das
pop
imul
pop
out
dec
dec
inc
jne
add
ret
inc
cmp
ljmp
addr16
pop
xchg
dec
data16
xchg
and
sub
lret
stos
test
xlat
frstor
mov
in
cs
jge
push
sbb
imul
notb
stc
dec
test
icebp
mov
xor
inc
imul
cmpsl
and
shlb
jno
bound
jbe
jne
sub
repnz
in
or
xchg
mov
adc
dec
mov
lahf
fstpl
inc
add
pushf
dec
loopne
cmpsb
push
cmp
outsb
int3
aad
imul
loopne
lods
and
gs
fs
imul
or
or
sbb
ds
fsubrs
lods
sbb
icebp
mov
les
push
push
jecxz
loop
shlb
push
clc
xorl
shr
cltd
mov
lcall
or
std
pop
loop
cli
loop
in
dec
hlt
stos
cld
xor
mov
clc
sbb
jl
jge
inc
adc
imul
xor
sbb
sahf
dec
dec
movl
shrb
repnz
lret
cmp
add
mov
imul
pop
cld
fs
jmp
mov
int3
sbb
mov
pop
int3
xchg
ficoml
jl
inc
push
push
lcall
cltd
scas
mov
cmpl
cmp
std
push
daa
fsts
enter
out
cltd
pop
mov
or
mov
pop
or
xor
xor
xchg
sub
cmp
aaa
cmp
or
stos
xchg
jb,pt
cmpsb
arpl
test
bswap
adc
mov
dec
movsb
xchg
pop
std
jle
lock
inc
push
jecxz
mov
fsubs
movsb
push
bound
lret
add
push
mov
sbb
add
insl
jg
cmp
jge
sbb
ret
cmp
mov
repz
daa
rclb
movsl
xor
hlt
or
mov
dec
xor
divb
jge
xor
aad
sbb
notl
add
push
fistl
out
xor
lods
and
add
xor
and
ffree
cmp
pop
addr16
pop
aas
and
push
loope
sbb
ljmp
stc
addr16
mov
mov
stc
adc
adcl
mov
lret
jge
jmp
jno
shll
scas
pop
xorl
sub
in
xchg
cmp
sub
mov
daa
xlat
sub
push
enter
sub
mov
in
push
insl
mov
ret
inc
leave
mov
jl
jns
daa
lea
aaa
in
leave
lods
jecxz
in
aad
jecxz
xlat
push
jo
rclb
mov
lret
adc
dec
in
shlb
jbe
adc
add
lret
rorb
inc
in
loop
mov
jle
and
clc
jmp
and
test
lret
cs
sub
pop
out
mov
iret
scas
cld
jb
sub
mov
bound
lcall
xor
pop
gs
scas
addb
xor
test
mov
pop
dec
push
aas
push
add
imulb
adc
cmp
sarl
leave
xor
cld
mov
repnz
mov
gs
subb
shrb
pop
aaa
mov
rcrb
les
or
inc
cmp
xlat
pop
aaa
bound
lcall
in
and
push
fcom
ds
sbb
lea
repnz
aas
adc
add
icebp
or
cmp
sahf
xchg
insb
jo
or
sub
imul
mov
sub
pop
mov
push
out
xor
jb
xor
stos
fwait
jb
pushl
in
cmp
ss
fiadds
das
cmp
inc
scas
push
scas
xor
adc
loope
lea
ret
cmpsb
jno
pop
test
movsl
push
and
pop
sti
mov
cmp
repnz
aad
jge
roll
je
cmp
repnz
dec
mov
lcall
mov
aas
jbe
xchg
pop
mov
incl
jp
roll
xor
jb
push
push
cmp
call
sbb
mov
ds
mov
popf
test
gs
lret
dec
pop
push
test
mov
xor
ds
movsl
andl
and
mov
mov
dec
sub
repz
add
and
les
xchg
adc
sti
clc
inc
les
fwait
lock
add
push
stos
dec
imul
jle
add
imul
imull
rclb
inc
fwait
sarl
addl
sub
sbb
jmp
adcl
insl
gs
inc
xchg
out
dec
mov
mov
add
lock
sbb
shr
push
mov
jmp
and
lods
mov
test
lock
cmp
cmp
pop
imul
add
dec
outsb
pop
xor
hlt
in
popa
cmp
and
add
jp
push
fs
dec
mov
xor
xorl
pop
inc
mov
out
int3
popf
sub
sub
xor
add
xor
push
add
or
out
dec
das
pop
ss
cmp
sbb
cmp
cmp
sbb
fistpll
mov
mov
sbb
dec
imul
repnz
xchg
rorl
mov
push
xchg
popa
add
insb
addr16
dec
dec
cmp
mov
pop
insb
out
mov
pop
fisubs
fldenv
sahf
movsl
sbb
cmp
test
mov
push
or
add
pop
adc
sub
xchg
xor
test
movsb
test
or
dec
jle
aaa
les
lods
andl
and
inc
adc
pop
xor
testb
xor
sub
in
arpl
mov
and
lahf
into
sbb
hlt
das
cmp
js
inc
mov
ja
sbbl
arpl
aam
test
test
sbb
lock
fiadds
jge
cmp
imul
or
call
mov
jns
sub
sub
jnp
lahf
outsb
mov
ss
sbb
ljmp
rcrb
ret
mov
xchg
mov
xchg
jns
aaa
adc
inc
ss
adc
and
arpl
pop
icebp
cli
adcl
shl
lahf
cmp
add
sbb
imulb
fnstcw
mov
test
xor
sbb
cwtl
leave
dec
jp
add
jp
into
jp
jns
push
ret
cmp
push
sbb
les
imulb
mov
lock
in
or
add
push
or
les
or
idiv
cmpsb
mov
inc
jb
callw
das
and
lret
les
pop
ljmp
mov
xor
lret
and
cmp
mov
dec
loope
add
stc
add
and
and
int3
pop
adc
inc
push
sub
std
test
dec
das
movsl
xor
jo
xor
push
cmp
mov
sub
test
sub
or
mov
pop
mov
test
sub
mov
int3
mov
inc
xor
idiv
or
xor
fimull
pop
testl
gs
fisttpl
dec
jns
sub
daa
dec
pop
jle
loope
sub
push
rcll
lahf
sarl
xor
pop
popf
xor
jl
mov
dec
xor
xchg
xor
ja
push
shrl
movsb
xor
pop
ljmp
mov
pusha
cwtl
aad
sub
enter
inc
mov
mov
cli
inc
fmull
je
aad
imul
jns
iret
push
adc
call
xor
ret
and
clc
jo
mov
jno
inc
push
in
testb
in
dec
roll
and
jbe
in
icebp
inc
rorl
bound
mov
mov
dec
test
push
icebp
bound
in
lret
shl
bound
subl
in
sub
sbb
loope
and
loopne
lea
lret
cs
adc
xor
xor
and
nop
mov
xor
jno
lcall
jno
xchg
aaa
or
cwtl
in
mov
mov
cmp
hlt
adc
and
dec
pop
add
mov
dec
sub
push
cmp
jbe
sub
adc
aaa
lcall
outsb
cmp
inc
xchg
shlb
mov
pop
dec
insb
cli
inc
loop
and
test
xchg
les
mov
imul
gs
dec
sub
icebp
sbb
hlt
mov
xlat
cmp
enter
outsl
inc
mov
dec
aaa
sahf
xorb
and
enter
movsb
test
xorb
clc
xchg
lcall
sbb
adc
lock
push
pop
repnz
xchg
push
cmc
adc
daa
pop
cmp
or
push
inc
cs
adc
cmpsb
xor
cld
jbe
test
jecxz
sbb
aam
test
push
xchg
sbb
pop
dec
adc
int
pop
sub
call
cmpb
rcrl
roll
sub
mov
inc
icebp
cmp
mov
rcrb
jno
mov
dec
mov
ss
inc
push
sub
cmp
lret
les
sar
out
sbb
arpl
sub
fyl2xp1
push
fs
lret
psadbw
loopne
scas
lahf
cmpsb
in
divl
dec
lahf
pop
xor
test
mov
jb
sub
inc
push
lahf
mov
out
ja
mov
mov
int
sub
dec
out
xchg
mov
jae
xchg
ja
mov
jp
jp
test
push
push
cmp
push
add
sbbl
fnsave
les
roll
sub
cmpl
dec
jno
or
dec
outsb
xor
das
jne
jg
dec
or
sbb
jecxz
test
push
and
repnz
rol
int
xchg
outsb
add
jo
loopne
es
lret
mov
clc
jo
dec
sub
fildll
fdivrl
mov
cmp
popa
inc
adc
aad
inc
push
xor
push
mov
pop
sub
sahf
dec
aam
das
push
jge
cmp
dec
lea
std
testb
sbb
stos
cli
jl
inc
and
jmp
sbbb
mov
jne
mov
leave
mov
or
dec
in
pushf
movsb
push
cmpsl
aas
adc
test
mov
cmp
xor
fucomip
xchg
jno
inc
cvtdq2ps
add
icebp
dec
aaa
nop
repnz
xor
or
dec
jns
cmp
dec
xor
ds
cmc
cs
cld
dec
inc
mov
daa
out
loop
mov
fcomps
sbb
stos
mov
jbe
sahf
sbb
outsl
or
movl
daa
sbb
sub
pusha
cmp
ja
lcall
dec
fstl
or
push
or
dec
inc
aas
push
clc
and
dec
testl
std
push
xchg
mov
mov
insb
cmp
shlb
push
push
out
mov
pop
mov
cmp
push
sbbl
imul
hlt
jmp
mov
xorb
insl
push
mov
jecxz
cli
dec
popa
aaa
jl
mov
dec
in
fsts
icebp
cmp
aad
and
push
mov
cmp
aad
lahf
cmp
mov
sub
mov
out
iret
sub
add
dec
enter
les
jl
sbb
pop
or
dec
push
pop
xchg
jo
push
das
sbb
jne
sub
xor
and
mov
shll
clc
cmp
add
divl
pop
fidivl
or
pop
jne
lods
mov
outsb
jbe
les
mov
sbb
sahf
leave
inc
outsb
inc
adc
ja
inc
test
test
pop
enter
pop
inc
adc
or
pop
call
pop
repz
inc
push
dec
and
scas
mov
clc
imul
sub
jbe
cmp
xor
popa
in
adcb
arpl
and
pusha
xchg
push
lods
pop
mov
test
js
mov
jne
inc
stc
adc
stc
jnp
fnstenv
dec
cmp
dec
lods
mov
jae
pop
bound
stos
in
les
mov
sti
push
jnp
lea
popa
xor
scas
or
cmpsl
cmp
add
cld
push
mov
and
cmp
inc
pop
popa
jmp
push
test
push
mov
addr16
add
mov
pop
inc
xor
repz
outsl
xchg
sub
inc
fsincos
sbb
push
icebp
les
andb
xchg
fnstsw
jl
sub
div
fbstp
repz
push
aas
dec
out
cmp
cld
xchg
sti
sub
les
imul
or
cltd
sub
cld
je
sub
cld
jne
ret
push
in
pop
stos
xchg
and
and
out
xor
add
enter
gs
inc
sub
adc
repz
or
cmp
shll
inc
add
std
push
jnp
pop
shrb
imul
pop
adc
stos
roll
mov
adc
mov
sub
adc
jl
call
adc
es
mov
or
pop
xlat
test
cmpsl
jecxz
out
mov
mov
out
or
popa
outsl
shll
pop
iret
stos
inc
jmp
xchg
sbb
cmpsl
int3
cmp
bound
inc
addb
sub
dec
insl
shll
xor
add
gs
xchg
gs
or
cmpsl
ffree
stos
add
add
fs
push
sbb
sub
js
cmp
shlb
lea
daa
or
bound
jns
stos
fwait
mov
xor
les
popf
inc
jns
sar
lock
push
dec
push
dec
xlat
or
stc
aas
push
cli
mov
inc
add
lcall
sbb
and
pop
sti
mov
mov
adc
pop
push
jl
pop
xchg
ds
inc
jne
movsl
xor
dec
rolb
nop
imul
mov
mov
mov
lret
icebp
inc
stc
int3
imul
xor
andb
fistpll
xlat
push
sbb
ja
rcrb
sbb
dec
xor
movsl
lcall
sbb
cmpsb
sti
mov
inc
and
bound
sbb
cli
pop
and
les
imul
rorl
ret
into
nop
xor
add
out
data16
mov
cmp
js
inc
push
sub
das
shr
push
pusha
cltd
sub
add
xor
fwait
inc
lcall
icebp
dec
sbb
sub
inc
jnp
popa
ud1
insl
inc
and
insb
jecxz
adcl
and
or
push
lret
insb
popa
pop
lea
icebp
add
mov
mov
inc
inc
add
jp
inc
iret
push
mov
sbb
pop
jp
inc
cld
xor
dec
ja
jl
jns
stos
xchg
and
jg
fildll
jae
xchg
mov
sub
stos
pop
pop
faddl
cmp
sbb
jg
push
sub
repz
rol
les
addr16
ss
mov
out
bound
leave
movsl
testl
pop
push
in
aam
outsl
int3
insl
ds
std
test
mov
rcll
jno
out
insb
mov
xor
lea
adc
imul
jge
xor
jno
subl
in
cwtl
xchg
xlat
mov
xchg
icebp
cwtl
ss
add
in
loope
cli
push
cmp
mov
add
test
ret
shlb
jno
and
sub
sub
ds
add
dec
jnp
fimull
leave
sub
push
push
add
rorb
sbb
fwait
and
cmp
push
ret
push
jp
pop
iret
cmpsl
inc
mov
xor
pop
push
push
clc
cmp
sbb
xlat
or
iret
push
cmp
enter
inc
les
icebp
jb
sti
pop
mov
and
shll
mov
outsb
rorl
pop
cltd
xlat
and
and
jle
mov
rcrl
clc
cmp
int
add
lea
daa
push
shlb
jb
push
lcall
sub
cmc
ds
bound
test
outsb
add
sarb
pop
rcrl
pop
or
jae
repz
pop
outsl
mov
mov
dec
lea
jae
pop
jno
dec
xor
and
sub
stos
notb
fsqrt
push
fnsave
sbb
or
or
pop
test
mov
dec
mov
and
outsb
push
and
mov
test
jge
fsubs
ljmp
sub
repz
icebp
rclb
add
insb
sub
xor
inc
sahf
jbe
mov
pop
push
loope
add
out
push
outsl
sbb
fisttps
orb
dec
mov
out
inc
les
jle
jnp
xlat
jne
stc
pop
ret
add
ja
and
push
ss
and
dec
mov
cmp
sar
mov
pop
sahf
arpl
push
movsb
sbb
andb
insb
roll
popa
stos
jecxz
popa
push
xor
inc
lret
subb
popa
inc
lods
dec
push
jp
inc
rorb
mov
mov
mov
out
lods
cmp
stos
jno
inc
jle
popa
xor
jecxz
arpl
jp
inc
mov
imul
out
mov
dec
xor
xor
scas
inc
aaa
insl
lret
jbe
jo
sti
cmp
inc
movsb
pop
xor
lods
clc
mov
dec
push
inc
sbb
pop
cmp
add
pushf
movaps
jmp
lock
aam
lret
push
sbb
mov
popa
gs
mov
orl
push
subl
push
inc
lret
jnp
inc
cmp
test
xlat
mov
pop
rclb
cmp
jp
out
arpl
sti
xchg
mov
pop
movsl
adc
sub
decl
mov
and
add
pop
or
popa
rcl
lcall
fs
dec
cmp
push
push
mov
aam
mov
push
stos
loopne
cli
add
stc
mov
sbb
shll
mov
fidivrl
stos
pushf
outsl
popa
rcll
mov
cmp
inc
mov
inc
addr16
jb
sbb
fsubr
gs
dec
push
xor
sub
notl
xor
or
sbb
idivl
mov
or
insb
xlat
jb
fsub
jmp
lds
pop
mov
pop
xor
sub
loope
idiv
lcall
sahf
push
movsl
mov
popf
sub
lret
adc
and
xchg
arpl
push
xor
addr16
jo
mov
pop
int
sbb
push
xchg
pop
outsb
cmp
xchg
pop
aaa
ffreep
fists
lds
jge
pop
psllw
inc
pusha
jmp
cs
mov
inc
dec
lret
out
les
sub
jge
dec
movb
cmpsb
jno
arpl
inc
cltd
mov
sub
inc
mov
pushl
leave
push
cmp
daa
adc
xchg
pop
into
pop
add
dec
xor
or
jbe
jno
jno
repnz
push
out
push
scas
push
jne
fcompl
inc
dec
ljmp
push
or
scas
sub
sbbb
je
mov
sub
and
jl
adc
arpl
sarl
mov
mov
arpl
mov
out
inc
add
or
mov
enter
icebp
jns
sbb
push
outsb
push
mov
mov
sahf
jge
push
cmp
push
lret
jno
out
sub
sar
popa
xor
bnd
cli
inc
subl
jl
dec
mov
stos
mov
mov
jle
nop
sbb
xchg
into
and
xchg
mov
inc
or
mov
sahf
sti
loop
into
jle
adc
push
jno
xchg
cli
cmp
dec
mov
sbb
cltd
or
jno
mov
sahf
icebp
shrb
das
xor
cmp
mov
popa
mov
and
pop
nop
iret
les
pushf
pop
iret
mov
push
xchg
scas
mov
and
ret
cmp
dec
pop
mov
mov
aas
mov
fimuls
push
andl
jp
das
adc
dec
xchg
push
cmpsl
daa
jne
negb
jp
add
fucom
cli
test
adc
addr16
push
std
mov
repz
testl
pop
mov
inc
in
sub
mov
rol
stos
das
hlt
idivb
inc
clc
int
jne
cmp
divl
cwtl
sahf
xlat
popa
adc
sub
inc
loop
xorl
mov
push
popa
ret
mov
inc
xlat
jae
aad
adc
jno
mov
xchg
mov
pop
xchg
hlt
mov
adc
jbe
in
cld
or
repnz
mov
cmp
repnz
dec
mov
sbb
push
call
inc
xchg
decb
scas
jl
int3
mov
cmp
cld
mov
add
idivb
mov
or
xor
fiadds
loope
xchg
jl
push
add
mov
aam
or
cmp
pop
cs
les
outsb
cmp
sbb
aad
xor
inc
pushf
push
idivb
cmp
lock
add
push
lcall
inc
add
jecxz
rclb
jne
xor
shlb
in
dec
lds
push
mov
add
xlat
aaa
dec
imul
mov
shll
dec
fwait
loope
mov
xchg
cmp
data16
rcrl
jo
fadds
divb
jbe
cmp
lods
dec
insl
push
inc
push
les
int3
repnz
std
mov
fbstp
rolb
and
sbb
or
loop
loop
jb
mov
sbb
sbbb
push
movsl
dec
loop
out
xchg
mov
les
pusha
pop
sub
insl
dec
repnz
rorl
lods
int
rclb
pop
test
push
pop
xor
add
lock
leave
lea
cmp
loope
sbb
ljmp
test
les
lret
mov
icebp
cmp
sti
sub
mov
add
cmp
aad
shll
inc
and
add
push
out
inc
mov
fidivs
mov
cmp
icebp
bound
sbb
mov
xchg
jne
jns
loope
sti
dec
cld
in
sub
aas
es
add
cltd
mov
gs
andb
sbb
adc
pop
jle
outsb
lock
mov
imul
sub
les
dec
mov
jmp
stos
cli
fwait
sub
add
pop
jno
rcrb
pushf
pop
inc
repz
adc
in
sub
mov
push
stos
adc
rolb
dec
pop
repnz
mov
xor
and
inc
aam
jno
fisubl
xor
adc
stc
mov
mov
stos
jns
jnp
push
xor
jl
dec
cmpsl
xchg
outsb
or
shll
mov
jb
fnstsw
or
jae
sahf
ror
cmp
jns
xor
xor
adc
cmpsl
test
movsb
ja
push
sub
push
cmp
loop
add
les
xor
jno
icebp
imul
mov
xor
lcall
cltd
repnz
xchg
fsubrl
add
and
repnz
jmp
and
inc
pop
sbb
dec
les
sarb
inc
pop
in
mov
mov
push
jmp
testb
dec
sub
sti
sub
lret
cmpsb
sub
pop
push
mull
out
adcb
mov
add
movsb
fimull
pop
ficomps
cmp
and
aaa
inc
cmp
cmp
fcomi
arpl
addl
xchg
mov
mov
push
repnz
loope
rclb
rorb
and
and
cmp
lods
out
testb
sbb
xchg
adc
sub
dec
stos
sbb
sub
add
push
cmpsl
jmp
jne
rolb
insl
notb
inc
lret
jmp
ljmp
add
icebp
push
stos
add
jle
imul
xchg
jnp
gs
mov
pop
fldt
xor
jl
inc
pop
test
and
add
rcrl
add
mov
in
lret
push
xor
inc
dec
in
cmp
int
push
shrd
mov
ljmp
mov
imul
shlb
inc
add
sub
sarb
rol
mov
cmp
dec
add
inc
inc
add
movsl
cltd
mov
roll
add
and
in
xchg
xchg
jp
adc
xor
xor
jmp
push
mov
dec
jae
adc
xchg
sahf
rorl
add
insl
push
clc
xchg
xor
inc
lret
lret
mov
adcl
sub
fwait
es
je
sub
es
ss
xor
xor
pop
mov
sub
or
or
bound
aaa
dec
inc
and
loop
cmp
dec
inc
test
pop
mov
jmp
jo
imul
jno
adc
ret
fstps
pop
jg
xorl
sub
or
mov
sub
ret
mov
sub
bound
mov
mov
cmp
jge
insl
push
lods
and
jmp
inc
xor
xor
inc
cs
inc
mov
in
rcrb
add
movsl
xchg
jle
sbb
xor
pop
xor
xor
popf
lea
push
mov
jle
jp
sub
les
push
mov
cli
bound
sahf
inc
test
push
divl
add
outsb
subl
mov
adc
jno
rorl
or
cmp
sar
push
mov
sub
jbe
inc
enter
jae
mov
sbb
orl
push
adc
in
inc
push
mov
add
sub
pop
out
adc
fucomp
push
loopne
or
lcall
pop
cmpsl
jg
or
or
stc
loopne
mulb
mov
out
xorb
dec
mov
test
gs
pop
fistps
pop
push
pop
lea
fstl
flds
sub
in
dec
divb
aaa
cmpsb
icebp
cli
shrl
inc
pop
add
idivl
adc
mov
imul
outsl
mov
jb
cmp
fucomip
push
mov
outsl
sub
xor
push
xor
dec
add
roll
outsb
push
ss
addr16
arpl
sub
dec
sub
mov
test
and
xchg
int
loop
dec
std
xor
sbb
rorl
mov
fcomps
sbb
das
inc
xor
sub
in
ret
imul
pop
xor
hlt
pop
ja
jp
sahf
mov
jbe
push
pop
icebp
push
out
outsl
sub
call
jno
imul
outsl
or
xchg
pop
fstpl
ret
fnsave
pop
jno
mov
mov
pusha
push
and
and
insl
outsb
inc
jbe
sbb
int
inc
stc
cmpsl
mov
inc
btc
mov
xchg
pop
shrl
aas
imul
mov
jp
ss
dec
sbbl
mov
bound
sbbb
inc
lock
hlt
sti
sbb
nop
ss
cmpl
rcr
ljmp
cmp
xlat
pop
in
fdivs
ret
jne
dec
lds
pop
loopne
jae
sub
orl
or
dec
pop
or
dec
insb
int3
in
shlb
sub
repnz
push
xchg
cmp
lret
xchg
data16
sub
mov
or
jbe
sub
lea
test
out
and
shl
fcmovb
jp
daa
or
addr16
shlb
scas
les
or
inc
movsl
mov
inc
sub
inc
cld
xor
sub
mov
mov
mov
jb
icebp
xor
andb
pop
shrb
movb
add
lea
sbb
fadds
mov
std
arpl
inc
mov
mov
imul
test
popf
lock
sbbl
inc
pop
xchg
dec
push
insl
mov
aam
jnp
scas
inc
xor
and
mov
cmp
imul
mov
les
lret
test
cwtl
xorl
js
fsubrs
adc
cmc
out
pminsw
stc
inc
mov
xchg
pop
dec
jmp
lahf
test
scas
rolb
jp
daa
inc
jno
sub
stos
push
bnd
repz
jmp
lods
cmp
lods
pop
outsb
xorb
xorb
add
add
aaa
inc
adc
js
daa
add
sub
call
push
out
pop
stos
cmc
jne
movsl
xor
lds
jle
aam
es
pop
inc
pop
sbb
push
scas
sub
mov
cmc
pop
jns
ss
jno
insl
cs
mov
cmp
idivb
push
xchg
js
mov
jae
dec
sbb
jp
jge
mov
lcall
jae
xor
inc
hlt
jmp
xor
in
sbb
mov
push
std
sbb
les
add
mov
fildl
jnp
cmp
mov
shl
in
call
sub
inc
daa
jno
inc
mov
adc
xor
dec
fs
out
inc
and
push
cli
adc
enter
stos
mov
roll
test
dec
aam
test
xor
add
pop
mov
xor
lods
arpl
clc
enter
push
and
les
dec
movsb
shlb
das
xchg
aam
jmp
jbe
bswap
clc
cmc
loop
mov
adc
mov
xchg
aad
inc
xor
sub
std
repz
fs
arpl
out
sbb
leave
out
in
neg
xchg
sti
jmp
sub
js
push
int3
inc
cmp
loope
aam
roll
and
mov
dec
ret
into
lods
xchg
roll
push
and
mov
addl
into
add
je
ret
test
bound
jnp
mov
or
jge
xor
test
outsb
fsubl
bound
fwait
stos
popf
sbb
iret
sub
push
xchg
xor
shlb
add
test
push
sub
aam
imul
loop
or
inc
dec
inc
mov
ret
or
lcall
jb
cmp
xchg
sub
divb
sub
push
cmp
push
and
xor
popf
add
sub
fmul
dec
data16
repz
dec
inc
sub
xor
outsb
dec
out
adc
inc
xor
mov
fnstenv
rolb
enter
sub
insl
les
aad
inc
mov
hlt
cmp
cmp
cmp
pop
and
aam
push
mov
les
jge
inc
popf
movsb
popf
aam
test
cmp
js
shrl
add
inc
loopne
ljmp
cmpsb
push
in
sub
or
call
add
arpl
gs
jns
dec
mov
adc
mov
mov
mov
jmp
sbb
test
cmp
insl
xor
xchg
ljmp
pop
mov
ss
psrld
mov
into
pop
xchg
cmpsl
jo
movsl
lret
cmp
jnp
loope
or
push
jbe
jecxz
lcall
mov
dec
xadd
lods
cmpsl
jmp
or
outsb
jle
xor
pushf
stos
or
dec
jge
enter
test
ret
push
test
jns
or
out
inc
ja
test
push
outsl
out
add
fsub
mov
xchg
lret
pop
lcall
sbb
mov
lcall
dec
ret
out
add
andl
pop
popa
lock
jne
add
mov
add
inc
push
cmp
cmp
rcr
out
inc
lret
jne
mov
cmc
add
test
mov
les
ljmp
fisttpll
inc
jg
and
shrl
jb
cmp
cmp
mov
xor
out
jp
inc
inc
ja
xchg
mov
xlat
out
pop
xor
imul
adc
mov
push
mov
dec
cmc
inc
test
enter
mov
addr16
mov
cmpsl
test
cwtl
xor
cli
dec
sub
mov
rcll
jg
or
jno
cmp
inc
les
mov
pop
aaa
insl
add
leave
cli
jg
rorl
sbb
lcall
daa
cld
xor
mov
enter
and
cmp
xchg
adc
aaa
adc
sub
in
orl
bnd
in
xchg
sbb
test
cmpsl
add
jp
mov
gs
or
push
out
xor
scas
fists
xor
pop
jp
adc
xor
inc
add
ret
adc
enter
inc
icebp
add
inc
or
roll
enter
repnz
dec
mov
imul
cmp
stos
hlt
dec
adc
loope
pop
push
aad
bound
sbb
stc
jne
sub
add
sbb
push
fs
jecxz
and
sub
imul
xchg
outsb
aaa
sub
aam
sub
das
pop
dec
sub
je
stos
and
and
xor
or
int3
lds
imul
shrb
fldt
or
jl
jge
int3
ret
insl
sahf
les
sub
rorl
test
dec
cld
sub
ret
ljmp
int3
mov
pop
test
cli
arpl
in
notb
in
insb
push
inc
xchg
inc
sbb
mov
cmp
popf
gs
xor
inc
push
popa
jmp
inc
popa
inc
ja
pop
mov
dec
and
rcll
mov
mov
and
dec
orl
add
sub
stos
add
xor
mov
push
addr16
or
jmp
xchg
inc
imulb
cmc
in
loop
les
mov
lcall
inc
push
imul
cmpsl
pop
inc
adc
insb
mov
inc
add
jno
in
inc
pop
push
inc
movsl
filds
test
je
clc
test
orl
adc
inc
jge
pushw
jnp
les
shlb
cmp
cmp
aas
push
popa
add
rcrb
inc
and
repnz
jmp
lahf
lcall
cmc
cmp
lahf
xchg
les
js
outsl
xchg
pop
inc
mov
outsl
mov
loopne
mov
jg
in
test
cmp
fcmovu
pop
push
call
cmp
jo
cmp
mov
push
lods
out
sbb
jp
adc
and
jge
jmp
insl
sbb
sub
cmp
fbld
enter
adc
jge
int
rolb
jge
or
dec
jmp
test
sbb
cmp
mov
gs
insb
call
arpl
jge
hlt
pop
std
bound
mov
pop
pop
jle
adc
sbb
out
adcb
sahf
pop
cmp
xor
gs
push
and
andb
les
sub
and
dec
adc
inc
dec
fbld
mov
cmc
inc
cmp
mov
or
inc
and
sub
les
call
jmp
xchg
addr16
adc
aam
mov
or
jbe
mov
inc
aaa
xor
daa
mov
mov
add
lret
inc
rol
bound
inc
neg
bts
jge
add
jg
int
daa
jno,pt
xchg
mov
dec
add
cmp
xchg
jp
bound
xor
sahf
fistpl
cmp
sub
push
and
out
in
and
arpl
sbb
sbb
adc
or
push
loopne
lea
lds
and
cld
xor
mov
pop
adc
inc
insl
pop
push
jg
push
scas
stc
cmp
jg
fldcw
movsb
fs
ret
xor
adcb
ret
add
push
clc
and
mov
mov
jb
cmp
adc
insl
xor
icebp
mov
sbb
ljmp
cmpsb
lcall
sbb
insl
fldt
in
or
loope
popf
sub
test
sbb
inc
pop
aaa
hlt
imulb
inc
lcall
sbb
je
stos
mov
and
les
js
mov
xchg
xor
mov
or
jno
mov
adc
xchg
repz
push
jge
ja
andl
mov
insb
cli
xor
push
cwtl
adc
lahf
cmp
adc
std
test
dec
push
pop
ja
adc
mov
and
loope
mov
pop
push
cmp
sahf
arpl
sub
dec
shlb
ret
xor
sub
cmp
xchg
dec
loop
loope
xchg
or
das
mov
rsm
push
adc
into
pop
xor
call
sbb
adc
cld
mov
gs
mov
es
inc
push
shl
pop
lahf
push
outsb
sub
cmp
test
scas
icebp
dec
inc
jb
push
lret
repz
push
cmp
cmp
xor
xorb
leave
xchg
jb
cmp
sarl
cwtl
dec
into
jbe
outsb
fsubrs
rolb
push
insl
cmpsb
mov
cmp
sbb
mov
add
adc
pusha
fcomip
lock
inc
push
mov
sbb
test
and
xor
ds
sti
xor
sahf
lret
jne
sub
push
sub
rcrb
in
dec
cmp
xor
movsl
ret
adc
fnstcw
inc
in
notl
add
sarl
aaa
jnp
btr
jno
shlb
mov
testb
mov
cmp
sbb
inc
shrb
in
sub
xchg
push
push
out
xor
xchg
cltd
push
test
mov
sbb
test
cmp
xchg
jg
out
cmpsl
aad
push
in
jge
icebp
dec
xor
inc
test
sahf
outsb
push
xchg
fcmovnu
lods
mov
or
aad
pop
int
cmp
insl
jecxz
das
inc
les
push
mov
aam
cmpsl
mov
loope
jae
pop
loopne
xchg
or
dec
and
aaa
icebp
jecxz
mov
dec
push
jp
inc
jle
push
add
inc
in
jp
push
cmpsb
test
adc
dec
mov
jecxz
pop
xchg
xor
push
mov
int3
dec
sbb
inc
mov
add
addr16
daa
int
pop
mov
add
flds
insl
xchg
xor
cmp
add
mov
icebp
xor
fdivl
mov
testl
lret
mov
aam
dec
xor
inc
mov
jp
jg
jns
or
sbb
sbb
xor
das
adc
fdivs
jmp
dec
das
mov
rorl
pop
sub
jns
xor
cs
xor
or
push
out
mov
and
fdiv
sahf
in
ja
mov
add
repnz
pop
imul
sbb
pop
test
clc
leave
shlb
int3
subb
jno
pop
jno
movsl
mov
in
mov
xor
mov
jecxz
arpl
sbb
mov
ret
inc
jne
xchg
lods
loop
roll
sbb
std
mov
sub
test
push
xor
cmp
add
jp
pop
test
scas
gs
rorb
xchg
mov
jne
test
xor
in
daa
insl
cmp
and
mov
iret
cmc
jne
cmp
icebp
push
push
es
fnsave
xor
add
lea
gs
xor
int3
sub
push
orb
fidivl
clc
mov
jmp
cld
sub
mov
fstps
pushf
std
lods
roll
sub
xchg
imul
inc
pcmpeqb
sbb
mov
popa
iret
push
mov
jnp
fnsave
sbb
test
daa
pop
shrl
xchg
pop
arpl
jbe
call
add
inc
popa
test
add
cmpsl
or
into
mov
xchg
inc
sti
xor
cld
pop
dec
push
inc
das
cmp
arpl
andb
pop
inc
lcall
cmp
rcl
push
adc
ret
int3
orb
nop
pop
nop
mov
jno
shll
popa
xor
clc
icebp
or
sbb
jmp
adc
mov
jmp
enter
in
push
inc
mov
cmp
test
sub
xor
cmp
pop
cmp
push
inc
ljmp
xor
vmovlps
mov
inc
hlt
inc
cmc
dec
dec
cmp
inc
cmp
adc
inc
mov
mov
push
inc
loope
cld
push
xor
loope
in
fidivrs
mov
push
add
das
lds
shll
xor
std
and
pop
test
push
cmp
adc
mov
lret
push
je,pn
jns
or
movaps
xchg
les
push
xchg
lods
int
das
push
push
repnz
sahf
inc
orb
stos
mov
adc
pop
hlt
mov
call
jmp
or
in
rorl
push
cmp
cld
add
jae
loope
arpl
sti
sbb
in
dec
add
push
inc
sub
and
sbb
bound
pop
sub
outsb
cmc
adc
pop
scas
lahf
ljmp
mov
mov
outsb
aaa
hlt
gs
jno
push
mov
ret
orb
ror
jge
push
les
imul
cltd
add
cmp
push
inc
push
cmp
mov
call
dec
lret
fistpll
cmpb
notl
xchg
or
popa
scas
inc
int
fsts
pop
xor
add
add
mov
ds
bound
push
jle
rorl
sbb
pop
mov
inc
or
push
hlt
xor
stc
dec
aam
cmpsl
mov
gs
dec
gs
push
xor
fistl
and
jmp
cld
inc
inc
add
pop
add
mov
inc
xor
pop
and
jle
loop
push
pop
frstor
test
je
jp
mov
dec
push
add
popa
add
mov
aam
cmp
call
mov
ljmp
xor
int3
in
pop
sbb
sub
sbb
xchg
adc
popa
test
xlat
fiadds
out
in
jno
lods
mov
movsl
stc
gs
jno
add
mov
ret
sbb
fisubs
lcall
mov
and
les
dec
incb
cmp
popf
lcall
dec
loop
mov
popa
pop
add
xor
mov
int
aam
lcall
xor
cwtl
push
sub
stos
bound
rdtsc
xor
and
hlt
sbb
inc
sbb
addl
int
nop
inc
gs
add
xchg
ret
and
pusha
roll
mov
adc
imul
shl
aas
dec
add
and
lcall
push
or
imul
inc
arpl
cmpsb
jns
cmp
in
ja
daa
popa
jcxz
mov
movsl
xor
bound
xchg
mov
pop
lds
cmp
mov
lods
cmpsl
insl
das
dec
mov
cmp
inc
mov
dec
sub
jnp
mov
push
inc
cwtl
pushf
fisubs
test
and
fnstsw
aam
mov
shrl
cmp
rorb
jle
stos
add
push
pop
xchg
mov
jg
dec
fs
divl
orb
push
mov
div
or
cmc
daa
push
les
adc
cli
out
mov
inc
flds
sbbb
mov
mov
push
out
add
cmpsw
loope
leave
push
ss
stos
cltd
shll
cld
cmp
in
and
pmulhuw
cmp
outsb
mov
pop
les
cmpl
in
adc
or
test
inc
mov
push
jnp
mov
inc
aad
push
jo
jno
pop
cmp
lock
push
icebp
ret
push
test
jbe
stos
out
jo
out
cwtl
jmp
dec
ret
jne
xchg
mov
dec
cld
xchg
lea
fildll
clc
pop
ja
and
inc
mov
fwait
test
fs
sbb
mov
mov
jne
fnstcw
bound
xlat
xchg
fsubrs
cwtl
test
repnz
mull
push
and
mov
push
cltd
cmp
or
dec
add
sti
test
dec
jb
add
sub
movsl
movsl
xor
test
sub
adc
dec
pop
xorl
jne
js
leave
shll
or
xor
rorl
sub
movsl
in
jne
pop
imul
outsl
mov
jp
add
fstpl
mov
mov
test
jb
out
or
push
dec
shrb
or
and
lods
inc
sub
jg
fisubrl
xor
and
and
outsl
jae
cmc
mov
lcall
mov
adc
inc
and
ret
mov
fwait
mov
int3
pop
mov
cmp
jp
xchg
mov
test
adc
jns
mov
fwait
shlb
xor
pop
ja
dec
jns
rcrl
dec
mov
push
push
cli
ss
movsb
sub
lods
cmpsl
aaa
mov
cmpsb
sarl
shrl
les
pop
scas
xor
sub
add
jge
popf
sub
push
ficoml
jmp
popf
and
ljmp
add
push
pushf
es
fisttpll
or
outsl
cmc
scas
add
pushf
mov
and
mov
jo
sbb
dec
adc
test
mov
subb
sbb
fnstsw
add
imulb
aad
hlt
clc
or
and
push
outsl
mov
js
sbb
sbb
popa
jno
ret
fildl
adc
dec
stos
mov
sub
dec
sub
adc
sti
test
movsb
or
inc
fnsave
arpl
inc
es
inc
dec
push
enter
mov
call
mov
aam
or
jnp
mov
jnp
xchg
jg
add
inc
sbbl
sub
mov
add
dec
orb
lock
jno
push
or
ljmp
xchg
add
in
inc
sahf
push
mul
add
cmp
mov
dec
jp
adc
and
and
and
movsl
cmp
pop
loope
ds
sarl
out
int3
das
inc
lea
xchg
call
xchg
lcall
les
fcoml
js
ss
cli
cltd
cmp
test
pushf
pop
mov
mov
mov
mov
mov
sub
cmovb
mov
sahf
stc
mov
daa
imul
aaa
mov
out
mov
les
dec
repz
xorb
mov
imul
xchg
adc
stos
xchg
sub
je
add
roll
subb
jmp
loop
sbb
lcall
lods
dec
les
jae
dec
or
orl
icebp
ljmp
dec
test
dec
loop
cmpsl
in
inc
popf
nop
test
insl
sub
cmp
pop
and
inc
xchg
aas
cld
out
fmulp
or
aaa
ss
push
iret
sbb
xor
loop
fucom
in
fdivr
mov
add
es
lret
cld
pop
jmp
push
lcall
popa
mov
test
mov
test
popf
adc
push
mov
and
enter
or
inc
fistpll
or
and
enter
shll
inc
sub
xor
lods
test
movsb
pop
jbe
bound
mov
and
add
aad
sub
xor
and
add
cmc
push
movsl
xorl
pusha
fs
pop
test
cmp
push
je
fnstenv
test
pop
push
lds
movsl
jnp
es
inc
mov
in
mov
ds
test
inc
jae
cmp
inc
cli
xor
popa
add
in
jns
and
je
addr16
dec
pusha
ret
shl
movsl
and
add
arpl
and
push
enter
xor
int
add
mov
insl
add
xor
inc
stos
or
inc
cltd
mov
les
cltd
aam
nop
push
add
out
aaa
loop
jl
xor
dec
jno
or
je
in
bound
cmp
mov
test
pop
mov
movsb
mov
push
adc
adc
lods
loopne
xchg
inc
cwtl
lods
xchg
adc
lods
insl
push
inc
dec
loope
popa
jecxz
into
in
sub
sub
mov
frstor
and
mov
and
xor
movsl
ficomps
movsl
and
xchg
movsl
and
push
xor
sub
js
movsl
int
push
dec
popa
pop
popa
out
push
gs
or
iret
jp
sub
pushl
mov
mov
inc
sbb
aam
lods
inc
add
cmpsl
mov
shrl
sbb
adc
mov
dec
and
sub
push
inc
jae
inc
in
sbb
ret
cld
xor
popf
or
subl
pushf
jns
in
lcall
adc
loop
mov
or
xor
xchg
xor
add
and
mov
dec
in
divb
mov
mov
cltd
pushf
iret
dec
cltd
loop
jmp
or
into
jmp
mov
insl
inc
loope
int
rcrl
mov
or
xlat
dec
fucomi
movsl
mov
xchg
test
movsl
inc
cs
out
xor
ljmp
xor
and
sbb
ret
push
popa
loop
stos
fidivs
add
aad
and
cmpsl
andl
adc
repz
jno
dec
jno
mov
in
push
gs
add
mov
gs
inc
je
les
repz
popf
pop
inc
shl
jne
jns
movsb
xor
dec
pop
cmp
movsl
test
jnp
sub
lds
add
adc
cmc
mov
mov
aad
clc
test
sbb
sbb
mov
testb
mov
repnz
sub
mov
cmp
std
lea
jns
lds
popa
arpl
mov
add
dec
sarl
rol
push
xchg
cmc
mov
sbb
movsl
xchg
inc
and
xor
adc
enter
and
inc
inc
ret
sub
jae
lea
sbb
mov
mov
jge
cld
stos
sub
sbb
dec
xor
mov
pop
in
ds
or
add
mov
dec
popf
pop
fs
jecxz
fs
and
jnp
fs
arpl
ret
inc
fiadds
insb
sub
dec
pop
std
adcb
packsswb
movsb
cli
inc
aaa
dec
xlat
ja
sub
mov
or
test
jecxz
sub
sbb
mov
jmp
lea
cmp
bswap
inc
xor
xor
iret
mov
movsb
and
pop
arpl
das
xor
xorl
inc
inc
pop
mov
sub
sub
cmp
loop
decl
sub
mov
dec
jge
loop
popa
ds
imul
jecxz
cmp
inc
push
mov
shll
cltd
mov
sbb
inc
outsl
ss
mov
enter
daa
xorb
int
and
test
sub
mov
shrb
mov
inc
mov
push
xor
cmp
adc
pop
insl
and
inc
imul
adc
inc
test
sbb
pop
repz
lds
in
push
sbb
aaa
fcoml
outsl
inc
loope
xor
out
js
test
and
andl
mov
pop
mov
call
mov
mov
sub
xor
fs
xor
jns
fdivs
jno
test
lahf
notl
insb
outsb
xor
stos
jecxz
jns,pn
lods
cmp
pop
pop
stos
aam
popa
xchg
pop
sub
rolb
cmp
cmp
js
repnz
loop
ret
pop
push
jo
ds
cmp
outsb
mov
xchg
loope
lods
addps
cs
popf
lret
adc
jns
inc
cmp
inc
dec
icebp
cmpsl
int3
movsb
ss
jns
and
cltd
enter
xor
or
xor
pushf
jmp
movsl
add
mov
rol
cmp
in
movsl
fwait
mov
xorl
shrl
hlt
and
xchg
rcll
shll
add
enter
and
test
mov
int
fld
in
inc
add
iret
cmp
xchg
fisubs
arpl
leave
movsl
sbb
outsb
jecxz
inc
ret
jge
mov
andb
scas
mov
movsb
inc
mov
jns
lods
xchg
shll
mov
cli
mov
in
and
sbbl
imul
popa
xchg
mov
fs
pusha
push
dec
iret
roll
inc
mov
rorl
xchg
imul
or
andl
jecxz
enter
mov
bound
enter
sub
arpl
jne
test
push
int
fs
jne
pop
mov
test
or
loope
xchg
test
and
inc
mov
xor
inc
xor
rcll
xor
xor
sub
inc
xorl
rcl
sub
fnsave
daa
pop
cs
sti
and
aaa
popa
add
roll
sub
sub
gs
dec
movsl
add
sub
ds
add
mov
repnz
test
xchg
test
inc
adc
sub
sub
adcl
stos
arpl
pop
push
mov
add
aas
sbb
test
test
xor
fwait
std
pop
and
subb
gs
out
cmp
dec
mov
inc
mov
mov
sub
mov
clc
adc
shlb
mov
popa
xchg
xor
fldl2e
in
lret
mov
sarb
pop
xorl
inc
inc
dec
xchg
inc
adc
popa
loop
fisubl
inc
mov
push
roll
aaa
popa
and
pushf
aad
sti
sub
jnp
daa
pop
jne
movsl
add
push
add
mov
mov
add
stos
push
gs
movsl
mov
add
xchg
popa
lret
stos
jecxz
xchg
bound
adc
xor
dec
mov
icebp
inc
mov
mov
add
xor
fwait
sarl
je
lret
jns
sub
mov
insl
xchg
cmc
adc
dec
dec
rorl
std
lods
inc
and
or
icebp
lds
sbb
add
cltd
imul
add
bound
sbb
in
and
scas
xchg
xlat
ret
inc
inc
mov
dec
add
inc
add
repnz
out
and
sti
loop
outsb
bound
and
test
inc
add
mov
inc
inc
lcall
inc
sbb
les
loop
cltd
or
fwait
in
add
inc
pushf
aaa
mov
shlb
decl
ja
test
xchg
or
add
mov
push
inc
jb
insl
inc
jle
or
mov
shll
xchg
cmp
dec
insl
ds
shll
pop
mov
xchg
f2xm1
add
fcomps
pop
mov
xchg
cmpsl
xor
add
pop
ljmp
cmpsb
dec
inc
cwtl
jmp
and
sbb
add
adc
fimuls
bound
repnz
mov
jb
loope
mov
loope
dec
clc
fwait
xchg
mov
mov
cmp
or
sub
call
mov
movsl
test
popa
popf
pop
add
add
xor
mov
and
subl
xor
adc
aas
add
and
data16
fsts
icebp
or
mov
push
and
adcb
xchg
pop
fisttpll
mov
adc
add
je
das
mov
adcl
or
negb
std
test
lods
int
and
mov
aam
pop
lock
popa
xor
jge
xchg
test
gs
aad
loope
loope
xchg
scas
adc
mov
mov
in
adc
movsl
daa
cmp
jns
sub
loope
push
out
fwait
inc
inc
rcll
dec
repz
jp
movsb
lret
push
arpl
mov
in
outsb
inc
xor
add
sub
jns
xchg
and
gs
pop
gs
fisttpll
xchg
and
add
cmpsl
sbbl
sbb
mov
test
jl
mov
sbb
insb
xor
lods
stc
push
ret
and
cmovb
push
pop
cmpsl
shrb
ds
xor
xlat
xor
fstpl
bound
push
test
sbb
inc
dec
movsl
jmp
cmpsb
shlb
movsl
xchg
add
rcrl
cs
jecxz
sub
dec
xor
arpl
roll
mov
aam
sbb
cmc
les
movsb
inc
fstpl
sub
xor
pusha
test
roll
les
add
insb
and
and
out
rol
and
add
leave
cmp
inc
mov
sub
xor
aad
lahf
or
stos
dec
mov
fisubrl
dec
popf
jge
lods
sub
ret
ss
inc
xor
pop
dec
sti
call
leave
out
mov
inc
xchg
add
icebp
adc
cmpsb
mov
into
cmp
push
aad
add
shll
aad
mov
in
adc
enter
lahf
inc
xorl
int
arpl
jns
stos
add
cli
div
sub
movsl
and
scas
ror
mov
xchg
mov
inc
push
and
cmp
test
bound
sbb
ss
dec
inc
dec
scas
or
aaa
or
out
mov
and
leave
stc
addr16
jo
add
mov
mov
fs
inc
enter
add
pop
int
mov
mov
ret
add
fs
inc
mov
enter
aas
jge
dec
adc
stos
and
cli
mov
sub
imul
mov
fs
addl
dec
mov
and
add
mov
inc
movsb
lds
add
leave
nop
jecxz
or
clc
cmp
add
icebp
jge
fiaddl
and
inc
xor
add
imul
xor
imul
jae
fs
and
sbb
pushl
pushw
orl
add
push
movsl
sub
or
je
flds
xchg
xor
xlat
xchg
roll
enter
add
fadd
or
aam
sbb
mov
js
xor
and
and
js
and
daa
add
mov
pop
lcall
jl
fcmovb
call
xchg
scas
rorb
fnsave
dec
add
mov
add
adc
xor
jg
or
fadd
xchg
and
lock
add
xor
xor
and
xchg
ret
xor
ja
popa
inc
sub
leave
repnz
addr16
ret
inc
mov
lcall
inc
inc
sbb
sub
movsl
in
cltd
pop
and
addl
gs
dec
les
sub
fwait
push
push
cmp
sti
jo
in
mov
test
out
and
stos
and
adc
cs
or
xor
push
jae
cs
movsl
fs
xor
adc
mov
movsl
mov
inc
xor
cs
movsl
and
adc
pusha
add
mov
scas
jns
inc
add
aam
pushf
add
mov
cs
movsl
mov
xlat
subl
dec
xorb
jg
movsl
arpl
dec
movsl
push
popa
daa
pusha
inc
call
xor
xor
sub
aaa
ss
inc
decl
adcb
fwait
sub
hlt
fdivrl
movsl
xlat
stos
dec
fstpt
pop
aaa
inc
rcl
add
aaa
inc
jnp
subb
fwait
inc
test
push
add
mov
stos
xchg
sarl
sbb
stos
aas
sarl
adc
fwait
out
stos
mov
jns
pop
push
jbe
sbb
mov
mov
ss
sub
out
sub
rorl
mov
jo
int
or
popa
and
push
inc
lock
popa
inc
xor
je
sub
imul
pop
fsubp
xchg
add
aaa
popa
repz
outsb
outsb
xchg
test
sub
ret
stos
mov
lea
movsb
popa
push
cmpsl
xchg
xor
iret
xchg
xorb
dec
movsl
jae
gs
xor
movsl
pop
rcll
inc
and
shrb
mov
xor
aam
js
js
gs
inc
hlt
mov
bound
inc
inc
movsl
cmp
loope
fcmovu
xor
nop
xor
and
xor
stos
in
cmp
bound
mov
imul
and
orb
mov
inc
cmc
push
loope
lds
cmpl
jecxz
mov
jp
and
imul
inc
inc
cwtl
jae
mov
loope
sbb
fwait
aaa
enter
outsl
popa
and
xor
ret
movsl
lcall
sbb
jno
add
cltd
aas
stos
hlt
imul
jne
shl
fwait
sub
mov
jns
test
dec
mov
sub
inc
movsb
sbb
inc
and
xor
inc
sbb
rcll
and
jecxz
dec
sub
mov
dec
popa
add
aam
xchg
jns
and
dec
insl
cld
xchg
adc
mov
mov
jo
fs
mov
pop
roll
push
aas
or
cmpsl
jns
cmp
test
push
data16
jns
cmp
xorb
xor
xor
mov
ss
movsb
inc
jecxz
or
loop
sti
inc
mov
xor
ljmp
andl
mov
insb
add
sarl
mov
push
and
popa
rcll
sub
popa
cld
popf
mov
arpl
sbb
les
and
adc
jns
adc
add
scas
out
cmp
xor
mov
bound
push
cmp
fwait
jb
inc
scas
push
iret
mov
add
inc
mov
in
push
inc
add
int
loope
int
fs
mov
cmp
test
sub
ja
in
and
roll
inc
cld
cltd
push
mov
ret
stc
outsb
repz
sti
mov
adc
mov
jnp
loop
mov
xor
xor
icebp
mov
and
add
lcall
std
fs
mov
lods
inc
stc
dec
mov
subl
pop
movsb
xor
add
andl
inc
mov
inc
popa
xor
lds
sub
jae
les
xchg
scas
jno
imul
sub
adc
add
shrl
inc
mov
jnp
add
inc
inc
inc
add
sbbl
popa
pop
es
adc
movsl
dec
mov
xor
sub
jno
movsl
adc
mul
stos
jo
icebp
bound
mov
mov
je
xor
cmpsl
inc
sub
xor
bound
adc
fildl
test
add
roll
add
add
jae
popa
fs
mov
imul
orb
mov
mov
xchg
jp
bnd
movsb
movsb
inc
mov
enter
les
mov
repnz
cld
and
movsl
inc
popa
pop
repz
mov
push
std
arpl
mov
addb
inc
lea
les
mov
ficompl
xorl
inc
add
arpl
inc
fsqrt
sub
cmp
jns,pt
loope
lret
out
mov
test
pop
jno
and
data16
loop
rorb
mov
subl
push
add
lods
mov
popa
addl
mov
xchg
push
mov
jns
sub
jns
cmp
add
add
ret
mov
jge
sbb
test
sti
add
dec
inc
nop
mov
out
jnp
mov
jae
jge
xchg
pop
jne
jne
mov
hlt
sbb
and
xor
ret
mov
movsl
popa
cli
stc
movsl
cmp
arpl
mov
inc
xor
add
adc
pop
aaa
lcall
jns
orl
sbb
popa
and
xchg
cmpsb
popa
or
add
sub
in
aam
loope
mov
mov
adc
mov
xor
lock
in
xor
push
arpl
jnp
xor
jo
fsubp
out
jne
inc
and
lods
add
popa
xor
dec
aam
lods
mov
mov
sub
xchg
arpl
in
into
and
aad
jge
bound
add
incl
mov
mov
mov
shll
lods
fwait
ds
enter
les
or
sbb
adc
mov
fwait
xor
ds
icebp
clc
or
sbb
push
inc
seta
push
inc
lahf
xchg
push
das
push
inc
lds
test
inc
cmpsb
jns
add
mov
add
mov
pop
and
arpl
clc
push
divl
movsl
mov
mov
inc
in
push
xor
insl
sbb
shll
enter
gs
dec
and
inc
pop
mov
dec
popa
mov
add
jno
inc
add
xchg
adc
dec
fldl
movsl
rep
arpl
bound
test
ss
inc
outsb
push
mov
xor
add
loopne
jne
sub
or
jmp
sub
call
imul
sbb
movsl
stos
push
jge
inc
sub
jno
popa
mov
mov
xlat
daa
sub
popf
cs
sahf
inc
in
mov
in
cmpsl
adc
jnp
ja
and
lea
xor
lods
sub
aad
ret
aaa
push
lock
xor
in
mov
neg
xor
xor
dec
jns
jp
mov
or
add
movsl
xchg
frstor
shrl
mov
ss
adc
rolb
push
jmp
arpl
popf
orb
in
in
or
mov
xlat
inc
xor
pop
dec
mov
adc
movsl
rcll
movsl
xchg
pop
inc
imul
or
mov
inc
cmp
popa
inc
test
in
test
int
ss
test
imul
inc
pushf
aaa
shrb
and
inc
sub
inc
in
fstps
scas
gs
lods
inc
arpl
mov
repz
add
shll
xchg
loope
add
inc
ss
mov
pop
mov
bound
insl
push
jg
and
gs
fcmovb
je
test
jae
lods
lods
nop
sub
popa
hlt
arpl
cmp
pop
loop
dec
sbb
loop
movsb
fdivrl
or
lret
pusha
cmpsl
mov
fsubs
mov
adc
xorl
add
popf
imul
jl
repz
test
push
les
dec
inc
jle
addl
gs
jae
js
and
clc
mov
outsl
jge
mov
ret
cmpsl
lods
xor
into
jno
int
popa
jbe
fs
add
mov
shrl
cld
mov
mov
push
ret
dec
orb
jge
aam
or
jns
adc
cltd
xchg
dec
pop
fmuls
loope
fcmovnb
xor
scas
aaa
mov
in
shrl
inc
les
popf
jns
outsl
inc
ret
fstps
repnz
out
mov
repz
popa
mov
dec
cmpsl
roll
aaa
mov
in
push
inc
lods
inc
jns
dec
mov
jns
mov
sub
xchg
adc
jne
pusha
roll
popf
pop
adc
xchg
sub
imul
lret
test
inc
mov
pushf
sbb
movsl
jae
dec
scas
inc
dec
sub
inc
sbb
jns
xor
mov
arpl
in
dec
movsl
mov
popa
sub
dec
aaa
and
cld
or
ja
xor
pop
rolb
mov
inc
mov
dec
sub
ds
add
sub
inc
jbe
aam
jp
dec
adc
bound
stc
pop
mov
mov
loope
mov
jns
test
aad
mov
hlt
inc
and
mov
xor
cmp
cmp
test
orl
mov
popf
xchg
xchg
mov
fsubrl
dec
int
cs
shll
insl
xor
loop
jge
inc
or
aaa
rclb
inc
cmp
mov
loopne
gs
ret
cmpsb
aaa
popa
adcb
cmc
dec
movsl
shll
inc
mov
add
xchg
gs
flds
out
imul
xorb
xor
into
hlt
pop
inc
jno
rolb
inc
sbb
mov
xchg
adcl
xchg
dec
in
bound
test
add
jno
aaa
arpl
aad
insl
push
test
inc
movsb
inc
imul
les
inc
sbb
xchg
xor
lret
popa
aaa
pop
dec
cmpb
mov
bound
imul
sub
movsl
fnstenv
xor
shr
mov
arpl
jl
xchg
jmp
xor
fidivl
dec
mov
test
xorl
pop
jmp
mov
sub
mov
xchg
popa
dec
lds
imul
xchg
jae
jno
sbb
hlt
inc
je
mov
xchg
mov
xchg
or
ret
push
sub
mov
xor
inc
roll
mov
mov
jno
test
dec
xorl
and
jb
and
stos
movsl
pop
jb
mov
stos
xchg
xor
mov
jno
loop
popa
sub
jno
loopne
inc
add
sub
nop
xor
mov
test
cltd
call
add
cmpsl
repnz
mov
mov
sub
movsl
stos
cmpsl
jecxz
lock
sub
mov
shl
push
rcr
inc
call
movsl
shll
les
mov
repz
aaa
addr16
xor
xor
ss
loop
adc
insb
inc
sub
loopne
shll
daa
push
jmp
sub
scas
int
mov
adc
bound
aas
cmp
std
pop
inc
movsl
mov
test
out
xchg
xchg
test
cmp
push
sbb
out
add
imul
mov
out
loop
pop
dec
inc
mov
ret
frstor
cmp
mov
movsl
dec
cmp
dec
std
dec
jns
repz
xchg
mov
inc
stos
xchg
add
popa
mov
mov
mov
aaa
lods
pop
adc
inc
dec
jp
mov
mov
imul
imul
inc
roll
sub
jno
cmp
inc
inc
in
cmp
bound
pushf
jno
test
push
insb
mov
es
int
jno
insl
inc
xorb
cmc
lods
mov
xor
rcll
imul
jno
xor
fiaddl
add
mov
and
inc
lds
shrl
add
inc
inc
es
leave
cmp
xor
fdivr
adc
shll
sub
add
fdivl
mov
jno
lock
sub
popf
cmpps
add
jne
add
sbb
imul
or
inc
fimuls
mov
jno
bound
dec
inc
jp
bound
jno
inc
sub
add
cmpsl
push
stc
in
mov
jnp
xchg
inc
mov
fld
test
dec
adc
movsl
cmp
movsl
loope
insl
les
dec
gs
sub
add
aaa
arpl
rcll
inc
push
sub
test
fists
and
mov
movb
jmp
cltd
push
and
pushf
pop
cmp
mov
or
jns
pop
jno
cld
pop
sub
mov
imul
por
and
and
faddl
dec
in
aam
xchg
adc
inc
xor
push
jne
dec
mov
leave
push
mov
fsubs
scas
sbb
and
sbb
xor
in
xchg
mov
xor
pop
sahf
fiaddl
fs
movsl
aad
test
in
xor
stos
pop
lret
fcmovbe
je
or
xchg
cwtl
cmc
test
out
inc
inc
push
jmp
arpl
icebp
dec
xchg
pop
movw
mov
test
pushf
call
push
push
sub
xlat
pushf
mov
xor
pop
mov
sub
and
test
outsb
pusha
or
jge
jbe
jne
nop
leave
adc
xlat
lret
and
cwtl
cmp
adc
bound
rorl
add
mov
jnp
ja
xor
push
out
rorb
cs
push
sub
incb
lods
roll
xchg
and
adc
and
mov
mov
loope
les
pop
cmpsl
mov
or
aaa
icebp
movsl
xor
ja
jmp
movl
out
fimull
and
aas
cmp
cmp
mov
add
and
test
out
pop
aaa
mov
insb
bound
push
in
adc
dec
lock
lds
imul
aas
add
mov
sbb
xchg
lods
dec
mull
sti
mov
scas
sysexit
movl
mov
inc
ret
mov
dec
and
push
leave
rol
mov
push
xor
popf
jmp
popa
roll
jb
mov
cld
push
mov
pop
sub
mov
cmp
mov
cmpsl
ja
pop
xlat
movsb
push
insb
aaa
inc
clc
daa
xor
push
sbb
cmp
adc
sbb
mov
pop
in
jge
dec
or
inc
add
jo
mov
sub
adc
mov
ljmp
push
test
jnp
push
or
icebp
fisubl
cli
cs
dec
mov
insl
inc
jnp
mov
leave
mov
jle
push
pushf
jne
xchg
addr16
and
inc
iret
test
sub
aam
out
and
dec
sbb
jb
cmp
leave
xchg
out
mov
cli
and
ja
retw
cmp
pushf
fstps
out
into
mov
push
cmp
jl
inc
mov
mov
add
jp
cmp
push
js
xchg
and
cltd
xchg
call
and
mov
clc
insl
imul
inc
xor
xchg
mov
mov
mov
aaa
xorb
fcomps
movsb
mov
or
jo
dec
imul
and
in
lret
mov
repz
orb
inc
scas
xchg
fstl
mov
gs
lods
lods
pushf
mov
sbb
pushf
pushf
mov
movl
pushl
lea
jmp
movb
not
not
jmp
jp
in
pop
xlat
pushf
sti
js
rcll
jns
lcall
outsb
jge
mov
xchg
pop
sub
lods
aas
clc
sub
dec
push
stos
jae
je
jp
adc
or
test
mov
aaa
sbb
pop
test
popa
cmp
xor
lret
inc
mov
clc
insl
mov
or
daa
je
cwtl
movsl
cmpsb
pop
not
cmpsl
push
or
shrb
cs
sub
pusha
xor
fiaddl
adc
mov
incl
addb
bt
add
pushf
push
lea
je
jmp
cmp
or
xlat
pushf
scas
pop
lods
adc
xchg
rcrl
mov
lock
push
repnz
test
mov
cmp
lret
mov
fldl
leave
mov
push
mov
mov
mov
jb
sbb
xchg
push
movsl
in
mov
cmp
leave
xor
pop
xor
mov
mov
jns
xchg
setge
mov
pusha
lea
call
push
adc
call
lea
jae
cmc
stc
cmc
xor
jmp
not
lods
jmp
lea
jb
push
pushl
ret
jb
add
xlat
pushf
xor
not
mov
xlat
sub
jb
mov
xchg
mov
xor
insl
fistpl
and
pop
out
rcl
ss
adc
sub
mov
mov
loope
adc
std
mul
mov
inc
xor
nop
cmpb
in
inc
sbb
inc
cmpsl
push
push
fisubl
and
lods
mov
inc
push
pop
insl
fsub
inc
inc
sbb
sbb
pop
scas
pushf
sti
out
xlat
in
cmp
sarb
pop
rol
and
inc
sahf
sbb
pushf
pushf
call
xchg
pop
fs
xlat
pushf
cmc
xor
xchg
sbb
dec
dec
out
sub
jl
push
xlat
and
inc
and
jl
enter
in
or
mov
mov
ficoms
mov
sbb
mov
pop
loope
pop
in
clc
ret
sub
mov
xor
push
push
scas
push
mov
mov
aas
sub
dec
lret
jo
mov
add
into
mov
lahf
js
mov
movsl
cltd
test
sbb
fsubr
movsl
add
push
push
xor
xor
fs
insb
add
out
sbb
sbb
lock
jne
cld
shll
scas
add
jne
fimull
test
dec
cltd
adc
push
and
loopne
daa
mov
xor
gs
cmp
mov
iret
cmp
mov
test
loope
lret
dec
pop
lea
lods
dec
test
jl
addr16
push
xor
cmpsb
insl
pop
mov
jl
pusha
push
mov
jp
in
insl
add
mov
xlat
pushf
add
mov
adc
fistpll
aaa
cmp
ja
mov
push
pop
adc
fistpl
pushf
lahf
scas
push
test
mov
mov
xchg
insb
fisubl
aad
sub
mov
aaa
sahf
sbb
dec
cmpsl
mov
psubd
jecxz
push
lock
inc
cmp
stc
out
mov
xor
pop
das
inc
lea
je
stc
add
push
cmp
jmp
into
add
movsl
push
mov
out
scas
push
not
and
push
dec
shrb
int
sub
jbe
test
lcall
dec
push
mov
or
loopne
and
in
test
hlt
scas
int3
push
popf
xor
pop
fsubrl
mov
mov
xor
lret
stos
mov
pop
mov
in
clc
cwtl
inc
adc
ljmp
add
mov
jmp
pop
and
mov
pop
mov
sbb
pushf
popf
push
xor
gs
mov
icebp
inc
sub
lret
gs
xor
jmp
leave
sub
clc
sub
loop
xchg
call
jge
sub
into
push
in
std
cwtl
push
aad
fwait
dec
adc
jp
shl
lret
enter
enter
cmp
add
shr
inc
mov
cs
loope
loopne
jns
dec
enter
leave
adc
xor
xchg
mov
test
or
and
lahf
lds
xorl
push
lret
push
test
lcall
lahf
mov
mov
dec
into
or
pop
and
mov
xchg
or
loop
sub
jl
pop
mov
stos
aaa
lods
add
in
data16
lods
mov
dec
leave
adc
xor
dec
cwtl
push
adc
mov
sub
mov
insb
out
std
mov
mov
push
mov
lds
add
fstpt
cmp
stos
jbe
les
pusha
hlt
xchg
ret
clc
cltd
xchg
les
mov
pop
out
mov
icebp
cmp
add
dec
arpl
xchg
stc
lret
test
andl
sub
repnz
pop
divl
mov
mov
xchg
jg
adc
dec
daa
imul
jmp
add
shrb
mov
add
cmc
mov
jecxz
js
cmp
dec
or
xor
aam
and
or
jg
jnp
sub
dec
jge
mov
mov
inc
push
xchg
xchg
adc
lea
adc
push
push
cli
popa
inc
push
jmp
xor
jmp
xchg
sbb
inc
dec
and
lds
dec
xchg
xor
or
clc
push
pop
cmp
xor
sbb
mov
sbb
xor
xor
and
cmp
pushf
pushl
movl
jmp
ror
mov
cmc
movzbl
movsbw
add
pushl
movsbw
call
add
inc
gs
outsl
fs
gs
imul
add
pushf
dec
sti
shlb
sub
xor
call
shll
movswl
mov
cmpb
sahf
ljmp
mov
icebp
push
mov
ret
cmp
lcall
adc
bound
xchg
xchg
xor
lds
jbe
movsb
and
in
icebp
jecxz
xchg
mov
in
mov
pop
orl
cltd
pop
sahf
les
add
fildll
loop
into
dec
sub
xor
fs
les
es
dec
pop
inc
pop
inc
adc
sbb
pushf
int
loopne
xchg
jb
iret
les
mov
bound
push
jbe
fisubrs
mov
add
sbb
notb
iret
test
leave
xchg
scas
leave
xor
arpl
jns
xor
add
ss
ja
std
push
xor
js
xor
sbb
iret
jnp
inc
sub
stos
push
es
xchg
xchg
mov
mov
dec
mov
push
loope
cld
sbb
gs
push
pop
cmpsl
outsl
enter
rorl
lea
cmp
lret
xchg
aaa
sbb
test
ret
push
call
call
jae
test
xlat
pushf
bound
mov
mov
mov
jae
loop
jo
cmp
mov
jne
jl
and
sbbl
add
flds
das
ljmp
xchg
pop
push
push
shrb
repnz
add
aaa
cltd
add
insb
ljmp
pop
iret
sarl
xlat
pushf
adc
mov
ret
xchg
adc
dec
stos
and
test
jns
or
movsb
jns
mov
cwtl
test
outsl
xchg
sub
int3
cmp
inc
insb
imul
or
les
and
loopne
or
bound
lret
stc
cmpb
push
call
mov
pushf
mov
and
in
cmp
mov
push
js
fwait
lahf
or
cmp
into
cmp
ljmp
in
daa
push
rorb
jecxz
fs
or
dec
test
inc
xorl
lds
inc
rorb
popa
sub
popf
call
in
stos
sub
cmpsb
cmp
std
adc
into
scas
jg
xor
imul
mov
or
fs
pushf
cmpsl
adc
aad
xor
mov
inc
mov
push
and
jmp
push
pusha
lea
call
pusha
jmp
call
ror
mov
stos
lea
jle
mov
call
call
pushf
push
lea
call
call
push
lea
jbe
or
shld
btc
mov
dec
rol
add
add
btc
stc
mov
inc
movsbw
push
cmc
add
test
sar
call
stc
dec
int3
adc
xchg
stc
lret
pop
inc
xor
cwtl
outsb
mov
push
xor
xchg
inc
mov
mov
mov
ljmp
lea
add
mov
dec
jno
fnstcw
sub
lahf
xchg
and
bnd
jle
mov
mov
mov
mov
pop
adc
das
scas
stc
rcll
dec
pop
shrb
pop
sti
push
xchg
loope
aas
cltd
lock
or
push
mov
add
jmp
jp
add
dec
stos
cmpsb
insl
ds
adc
fiadds
rorb
xchg
xor
sahf
out
clc
cli
popf
out
pop
lahf
add
jl
and
je
jmp
and
stos
cli
inc
and
mov
add
xchg
dec
call
addr16
and
push
mov
cmp
out
call
push
test
leave
lret
xor
std
cmp
movsb
dec
sti
repz
mov
lea
jl
pushf
pusha
lea
je
pushf
mov
movsbw
cwtl
mov
lea
lahf
mov
lea
pusha
movl
mov
pushl
popl
pushf
pushl
ret
dec
jge
adc
pushf
imul
cmp
xchg
cmp
shrl
fidivrl
addl
int
cmp
cmp
dec
jns
lret
xlat
arpl
pop
data16
stos
sbb
mov
mov
mov
adc
loope
rcl
pop
mov
jp
mov
bound
mov
or
addr16
movsb
insl
scas
movsb
push
or
adc
pushf
insl
mov
stos
mov
mov
add
je
xchg
std
dec
jno
in
cmpsb
mov
out
inc
cld
fmulp
mov
insl
lods
adc
sbb
mov
loope
ret
cltd
arpl
xchg
fcompl
xchg
fidivl
fs
je
cmp
cmp
pushf
pushf
lea
je
push
movw
pusha
pusha
lea
jmp
clc
test
cmp
push
pusha
pushf
lea
jb
push
pushl
movw
cmc
cmp
pushf
pushl
call
fs
sub
xchg
jne
in
mov
cmp
pop
xor
arpl
or
jnp
inc
lods
sbb
mov
lcall
inc
pop
xchg
sub
xchg
shll
dec
dec
cwtl
ss
inc
stos
dec
sahf
push
mov
push
cli
pop
outsl
in
adc
loop
mov
jg
cltd
xlat
jmp
push
cmp
mull
adc
pushf
movl
in
cmp
mov
or
and
mov
insb
icebp
pushw
in
std
popf
lods
cmp
cmp
pusha
jmp
and
jl
orl
mov
je
loop
outsb
scas
cmp
push
icebp
xchg
stos
fs
scas
push
push
aas
lret
and
ret
fidivrl
mov
jp
pop
cltd
loop
aas
sub
call
ss
push
fdiv
lds
bt
cmp
add
pushf
bt
call
pusha
push
pushl
call
call
jmp
not
mov
bt
xchg
sub
push
mov
mov
sub
sbb
mov
neg
dec
movsbw
mov
stc
or
pusha
lea
je
stc
cmc
or
pushf
jmp
aas
or
orl
pop
cmp
jge
cmp
jo
leave
insb
cmp
rcll
add
xchg
les
fcoml
aam
sub
lods
xlat
fs
adc
ret
lods
push
sbb
xchg
pop
inc
mov
add
in
mov
scas
andb
mov
fcomps
popf
mov
xchg
pusha
push
jge
lea
xchg
jbe
push
push
push
dec
lods
nop
out
imul
stos
mov
mov
add
sub
jbe
clc
pusha
cmc
not
pushf
neg
jmp
jmp
cmp
xlat
pushf
lods
das
popl
mov
cli
mov
lret
shrb
shrb
les
ja
sub
loop
or
test
xlat
mov
lahf
jecxz
sub
mov
dec
lahf
pop
mov
imul
sahf
sbb
cmp
shlb
rcrl
in
jae
and
lret
fisttps
push
loopne
add
push
mov
orb
mov
pop
loop
pop
insb
pop
push
imul
or
lret
adc
mov
pusha
stc
jmp
xchg
xor
aad
idivl
xlat
loopne
leave
shrl
cmp
ret
xchg
call
call
mov
adc
and
cwtl
popa
es
aaa
call
pop
fstps
jbe
mov
and
dec
push
imulb
mov
aam
aad
cmpsb
out
das
aas
jbe
pop
fcoml
jecxz
ret
dec
adc
es
push
pop
pop
ret
xlat
pushf
fildll
adc
sti
outsl
cmpsb
out
adc
fcoml
xor
xchg
mul
sarl
jno
pop
mov
sbb
outsl
pushf
xchg
ret
and
jl
test
push
push
add
sbb
jge
xchg
cmp
dec
pop
fcmove
sbb
into
mov
scas
scas
and
or
stos
fs
mov
push
mov
repz
cmp
or
xchg
outsb
xchg
or
fnsave
fxch
dec
movsb
xor
flds
push
mov
jno
cmp
pop
stos
and
cwtl
mov
xor
imul
sbb
xchg
xchg
leave
inc
xchg
xor
jl
aad
xor
xor
dec
or
sub
jl
jge
inc
adc
cmp
cli
scas
scas
or
push
mov
testb
or
pop
imul
scas
lea
xlat
and
jnp
and
test
cmp
popa
lds
in
pop
imul
cmpsb
cmp
mov
insl
mov
push
mov
sbb
xchg
int
test
xadd
sub
notl
addl
loop
xor
and
xchg
loop
dec
out
jecxz
dec
push
sarb
xlat
xlat
pop
push
fadds
xchg
into
pop
or
outsb
out
xor
daa
jecxz
sub
xchg
pusha
inc
stos
mov
ror
push
sbbb
or
push
pushl
ret
movb
bswap
lahf
movb
mov
call
dec
daa
push
push
xlat
pushf
add
sub
mov
arpl
jae
xchg
loope
inc
daa
sbb
repz
test
xchg
hlt
leave
sbb
push
jmp
aam
addr16
push
es
mov
sbb
out
jmp
gs
sti
lcall
rorb
sbb
pop
stos
jp
xchg
xor
mov
leave
mov
scas
adc
insb
or
in
clc
ja
or
dec
mov
ljmp
jl
xor
in
js
lods
aam
mov
add
loope
dec
flds
enter
out
add
push
or
int
jecxz
xchg
jo
gs
inc
imul
idivb
imul
outsl
sti
jns
ret
sub
arpl
and
stos
or
cmc
xor
jno
xlat
pushf
inc
cmc
dec
cmpsl
icebp
in
cltd
mov
out
pop
mov
idivb
cmp
sub
icebp
jecxz
call
jne
pop
nop
adc
add
add
pop
js
mov
sub
pop
or
cmpsl
icebp
shrl
pop
xor
movsb
mov
stos
add
test
mov
mov
fs
fildll
xchg
push
jmp
dec
cmp
icebp
ds
jmp
shl
loopne
in
imul
dec
xorl
cmp
stos
divb
adc
xlat
pushf
mov
popa
aam
repnz
inc
fdivrp
lods
sub
loope
mov
jnp
test
cmp
mov
cltd
fisubs
fisubs
std
push
pop
or
cld
mov
sub
rol
ss
out
jle
xchg
push
jnp
mov
dec
add
dec
xor
mov
push
insl
push
popf
idiv
pop
mov
out
adc
mov
pop
cmp
mov
ret
popl
ljmp
inc
cmp
pushf
cli
inc
mov
jo
xchg
push
inc
sahf
jmp
xor
or
add
enter
cli
inc
sub
cmpl
ds
push
out
mov
mov
mov
mov
inc
or
scas
sub
dec
sub
notl
icebp
sub
sbb
test
ds
outsb
rcrl
repnz
inc
enter
aas
cmp
dec
addr16
enter
je
lret
add
imul
aad
lahf
mov
xor
xchg
shlb
push
cmp
and
adc
mov
je
add
inc
and
cmp
add
dec
lea
jmp
call
mov
lea
jne
pushf
call
jmp
xor
fwait
sti
jne
aaa
sbb
jle
xchg
push
pushf
loope
adc
fs
mov
fimull
jae
out
int3
xchg
test
dec
xor
xchg
push
shll
push
scas
enter
pop
pop
sub
lcall
daa
bnd
addr16
ss
pop
aas
add
pop
sub
rol
loopne
repz
ret
out
and
or
mov
orl
fsubl
mov
sbb
jo
les
icebp
dec
mov
or
pushf
scas
ja
lahf
in
mov
and
test
in
or
sahf
xchg
cmp
cmpsb
xchg
add
cmp
sub
test
xor
xchg
or
ss
mov
and
bound
fdivp
pop
mov
sub
jne
addr16
es
aad
mov
fsts
imul
inc
push
sub
fs
fistps
into
xchg
lods
lret
aam
ljmp
dec
cmpsb
mov
scas
sbb
imul
pop
pop
dec
xor
xlat
pushf
xchg
test
loop
mov
xor
and
loopew
imul
popf
sbb
xchg
aas
mov
addr16
push
inc
or
xchg
jnp
inc
hlt
call
stos
in
into
adc
insb
inc
adc
jl
xor
shrl
adc
test
sbb
cmp
or
cmp
lret
sti
fimuls
jne
pop
pop
xor
push
popa
aas
sbb
xchg
psubusw
aam
insl
sbb
or
pushf
push
dec
cwtl
or
dec
sub
fadds
inc
mov
pop
mov
movsl
push
xor
movsl
int3
cmp
dec
xchg
push
btc
iret
add
icebp
push
cwtl
loop
push
jge
inc
or
fiaddl
jae
xchg
sbb
mov
cmp
mov
pusha
pop
mov
shll
outsl
cli
and
test
cli
mov
cmpsb
insb
cmp
cmpsb
std
cmpsl
lret
xor
pop
xlat
or
mov
mov
jbe
sahf
gs
pop
adc
lret
shlb
test
movsl
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
cmc
or
pushf
bnd
xor
notb
pop
pop
orb
popf
jg
cmpsl
jmp
or
push
cmp
out
jne
dec
push
adc
ss
push
inc
or
int3
or
and
in
fldenv
fmull
xchg
jmp
sbb
pop
or
inc
leave
and
jmp
sub
insb
and
push
imul
lods
lods
int
lret
xor
mov
mov
inc
fdiv
insb
cmc
rcrl
sub
mov
inc
cmpsl
lds
test
adc
int
fisttpll
xchg
jno
ja
jmp
push
xor
les
push
andb
adc
fdivrl
lea
jae
pusha
stc
bt
pusha
xor
call
not
mov
pushf
setns
pushf
inc
mov
pusha
pushl
call
add
mov
sbb
add
add
shrb
sub
add
add
adc
add
sti
xor
add
add
add
add
add
add
add
sbb
add
add
pop
leave
daa
add
add
add
push
sub
add
add
daa
std
sbb
add
add
mov
add
add
add
add
add
add
add
add
add
adc
sbb
movsb
lret
daa
add
daa
add
mov
sbb
add
add
add
pushf
enter
jns
mov
mov
adc
push
nop
xchg
sbb
fstpt
push
jb
push
or
imul
jle
mov
rorb
and
ljmp
sub
cmpsl
scas
hlt
clc
jno
mov
ret
xor
outsb
popf
movsl
jne
hlt
gs
or
add
or
jl
mov
xchg
sub
shl
push
adc
push
ret
xor
adc
cmpsb
sti
mov
hlt
jle
or
inc
mov
add
add
push
jno
mov
adc
add
fs
imul
add
push
xlat
pushf
jge
sbb
mov
dec
cmp
xorb
xchg
sahf
pusha
scas
mov
pop
stos
fwait
pop
mov
shlb
and
lds
cld
cmpb
cmp
loopne
scas
pandn
lods
cmpsl
outsb
xchg
sub
cmpsb
xchg
dec
lods
lret
add
into
rcrl
insl
pop
dec
push
adcl
mov
lds
outsb
lret
gs
repz
pop
ret
sbb
es
icebp
pop
out
push
pop
shlb
adc
inc
pop
xchg
addl
cmp
mov
dec
movzbw
stc
mov
stc
push
movw
add
pusha
cmp
push
stc
mov
cmc
jmp
pushf
movw
movb
movl
call
adc
pusha
lea
jmp
inc
into
lods
add
mov
adc
pop
fbstp
mov
and
push
bound
in
ja
stos
inc
inc
mov
cmp
sar
jl
adc
cmp
leave
mov
and
in
mov
or
int3
adc
mov
int3
xlat
push
aas
sbb
jno
lcall
sub
or
outsl
xchg
mov
xchg
jne
mov
sahf
pslld
mov
xchg
in
xor
and
roll
add
in
xchg
mov
xlat
pushf
jge
or
lret
push
push
dec
mov
xchg
push
push
push
jne
sub
sahf
or
pop
and
jmp
lret
movl
push
mov
jno
lods
outsl
imul
outsl
jle
repnz
jmp
jns
and
out
imul
call
in
jne
loopne
movsb
xorb
mov
mov
pop
imul
enter
dec
movsl
test
cmp
pusha
insb
test
lret
push
jl
or
or
repnz
sub
mov
pop
pop
cmp
call
lods
mov
lods
cmp
mov
cmp
xchg
out
cmp
push
fidivrl
mov
lahf
mov
xchg
xchg
push
jmp
jne
xchg
push
or
les
jnp
jbe
das
mov
ja
cmpsb
push
xorb
and
xchg
xchg
pop
insl
imul
loope
adc
sub
push
mov
add
rol
jmp
mov
push
add
pushf
bound
pop
fmulp
and
mov
fimuls
push
sti
inc
push
inc
das
loop
cmp
mov
xchg
pop
inc
fwait
in
xchg
outsb
orb
pusha
fwait
jns
lret
cmp
inc
mov
test
cs
inc
pop
sub
clc
aas
addb
pop
inc
lret
mov
dec
or
or
mov
jg
call
cmp
jns
mov
xor
cmp
add
add
sub
add
add
adc
add
sti
xor
add
add
add
add
add
add
add
sbb
add
add
pop
leave
daa
add
add
add
push
sub
add
add
daa
std
sbb
add
add
mov
add
add
add
add
add
add
add
add
add
adc
sbb
movsb
lret
daa
add
daa
add
mov
sbb
add
add
cmpsl
fidivrs
add
pushf
scas
mov
jnp
lahf
adc
cli
pop
pushf
push
push
ret
push
idiv
test
adc
scas
lods
jge
out
aad
jne
out
in
mov
and
mov
jg
dec
call
pop
and
xor
repnz
xchg
inc
jbe
cmp
ret
xchg
pushf
jbe
outsb
jl
cmp
rolb
inc
mov
cld
shrb
repz
pop
mov
test
xlat
pushf
jecxz
jle
jecxz
movsl
adc
dec
lods
and
loope
fs
push
into
gs
fisubs
pop
loop
xchg
adc
or
aaa
or
push
daa
adc
outsl
mov
mov
jne
or
enter
decb
and
repz
xor
insl
inc
cmpl
cmp
xchg
imul
mov
and
cmpb
sub
arpl
or
push
aam
jo,pt
jbe
inc
mov
sub
in
mov
push
sub
mov
sub
xor
shlb
repnz
push
add
cmpsl
push
dec
fldt
addr16
jnp
jne
int3
movsb
mov
lret
icebp
cmp
xabort
cmc
out
aas
test
inc
pushf
cwtl
cmc
push
fists
sbb
push
adc
imul
mov
dec
sub
ljmp
inc
loop
adc
xchg
add
pushf
mov
fld
or
cmp
inc
rolb
mov
insb
cmp
xlat
outsb
icebp
sbb
mov
loop
mov
aaa
pop
and
leave
test
mov
and
fs
sub
push
cli
inc
stos
xchg
adc
sbb
and
aam
mov
xchg
pusha
fisubl
movsb
and
outsb
xchg
movsb
adc
leave
jae
xlat
pushf
inc
jbe
mov
aam
adc
ja
mov
jg
shrl
jle
insb
cmp
xchg
idiv
fucomip
sti
or
gs
add
sub
repnz
mov
iret
enter
sub
test
lahf
sub
pushl
call
sub
call
pushf
insb
mov
jno
loopne
movsl
and
dec
scas
lcall
mov
jge
lret
and
mov
mov
in
mov
inc
inc
add
or
mov
xchg
mov
daa
sbb
ficoml
push
push
xchg
sbb
xchg
xchg
mov
jo
repz
je
jmp
shl
mov
jg
cli
xor
inc
daa
pushf
add
into
mov
fldpi
push
cld
pop
js
xchg
xchg
in
mov
and
repz
cmpsl
cmc
fcmovbe
mov
sarl
sbb
sub
xchg
adc
mov
dec
aas
jge
pop
icebp
and
pop
cmp
icebp
aaa
push
ljmp
jns
ljmp
cld
repnz
jl
jae
xlat
pushf
roll
fsubrs
sub
das
pop
scas
sbb
add
movsb
cmp
inc
xchg
stc
lock
mov
dec
fcompl
or
push
jne
scas
add
push
lret
cmp
pop
inc
xor
in
jecxz
jmp
pushf
mov
jae
inc
cmc
movsl
popa
jl
mov
outsl
and
mov
aaa
sbb
push
cmpb
xchg
mov
push
inc
fwait
xchg
test
mov
sbb
push
xchg
leave
test
jb
xor
sub
dec
xor
cltd
idivb
push
call
pushf
in
in
and
mov
int
scas
sbb
rolb
lret
sbb
pop
jl
jg
cli
jmp
stos
inc
push
imull
fistpll
sahf
ret
or
pop
fildll
rcrl
inc
mov
and
inc
dec
cmp
stos
stc
sbb
dec
xor
add
add
add
push
ds
call
andb
mov
push
sub
sarb
in
jmp
cs
and
pushf
jle
ljmp
jecxz
sub
pop
or
ss
mov
sub
outsl
inc
mov
mov
dec
inc
clc
mov
cmp
int3
lea
out
cmp
shr
in
mov
lock
or
xor
pop
in
mov
mov
or
fimuls
dec
cmp
ljmp
add
pop
dec
inc
test
cwtl
test
pop
or
popf
hlt
mov
xor
popa
adc
lds
enter
repnz
dec
into
xchg
fistpll
insl
push
jae
cmpb
lods
lods
mov
mov
push
inc
dec
daa
insl
lret
sarb
outsl
jge
aas
adc
or
sbb
push
push
or
inc
sti
adc
ret
cmp
adc
push
lds
adc
lcall
push
cmp
mov
sub
adc
shlb
jne
push
inc
movsl
or
out
cltd
add
data16
mov
outsb
stos
nop
add
cmp
pushl
push
pushf
lea
ja
call
outsl
stos
sahf
std
pushf
sbb
repz
shlb
fsubrl
dec
in
push
stos
sub
fbstp
sbb
mov
dec
int
fcoml
xchg
dec
xlat
icebp
lods
jb
cmpsb
xor
jl
imul
je
insl
mov
icebp
cli
mov
cld
or
repz
out
push
pop
jmp
mov
mov
inc
cmc
addr16
ret
pop
mov
inc
daa
xor
ror
sbb
xlat
inc
and
js
mov
push
scas
and
mov
rolb
leave
push
shlb
pushf
xor
inc
xor
gs
mov
or
aaa
inc
mov
mov
sbb
jbe
pop
dec
and
adc
aam
cli
inc
fdivl
jae
aas
es
negb
push
out
into
leave
xchg
xchg
pop
and
dec
imul
jo
mov
and
or
cltd
sub
out
js
xchg
and
jo
cmp
jno
and
in
das
js
add
and
in
and
test
add
jmp
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
shlb
xchg
push
mov
cmp
shll
and
pop
mov
enter
adc
sbb
pop
push
mov
xchg
xor
pop
jmp
divb
clc
cmp
sub
push
bound
jno
js
cmpsl
sbb
aam
inc
jmp
stos
xchg
mov
push
mov
repz
xchg
push
cmp
mov
adc
addb
pop
aad
test
adc
repnz
sbb
cwtl
adc
mov
mov
test
push
sarl
popf
mov
push
cwtl
lea
aas
push
push
sub
jg
mov
sbb
mov
pushf
push
mov
mov
pushl
ret
cwtl
pushf
movw
movb
pusha
push
lea
movl
mov
call
lea
lea
setae
lea
call
jmp
mov
cmp
int3
int3
in
jl
je
mov
in
jbe
enter
adc
pop
xchg
fs
mov
add
cwtl
les
fldt
dec
out
jnp
dec
aad
cmc
or
outsb
xchg
jne
push
xor
xchg
out
sbb
mov
sti
jmp
ret
or
push
push
repnz
pushf
inc
xchg
daa
and
xor
addr16
cltd
push
pop
pop
mov
xchg
xchg
xor
mov
inc
sub
rcr
cmp
pusha
addr16
jg
lahf
and
lock
bnd
fnstsw
xchg
push
jo
push
fs
fisubs
inc
subl
lahf
ret
stos
or
loope
push
pop
jb
or
mov
cmpsb
and
cmp
sarl
jb
xlat
mov
xchg
into
imul
mov
mov
sbb
or
xor
gs
test
xchg
pop
sarb
pushl
call
test
mov
pop
and
jp
int3
push
xor
cwtl
sbb
inc
das
outsb
dec
push
inc
mov
mov
inc
and
in
sbb
jbe
inc
lods
or
dec
add
stos
push
xchg
adc
enter
btr
shrd
xor
push
bts
shl
btc
lea
mov
pusha
push
neg
mov
sbb
xchg
sar
cmc
movsbl
lea
mov
ror
bsf
or
jmp
push
pushf
pushf
lea
jae
call
xor
sub
pushf
or
dec
sbb
jge
shlb
lods
jae
and
insl
push
add
ss
sub
adc
push
jle
test
jg
adc
add
mov
mov
adc
fisubl
cmpsb
jne
aam
rcrl
pop
mov
xorl
jne
xchg
icebp
aam
outsb
mov
xchg
pop
std
std
xchg
scas
ret
jl
inc
cmpsl
lret
leave
aas
or
mov
pop
sbb
xor
mov
cmp
loope
dec
inc
jmp
jg
pop
push
movb
cs
test
adc
and
jbe
jae
xchg
push
push
mov
or
add
mov
movsb
mov
faddl
xchg
clc
pushf
and
push
dec
mov
fcomps
lret
jnp
push
shlb
imul
mov
or
mov
xor
inc
in
cmp
in
jl
enter
pop
test
pop
pushf
leave
cltd
inc
or
lds
div
sub
leave
push
mov
jecxz
add
lahf
mov
xchg
shlb
das
xlat
outsl
dec
mov
and
jp
into
fidivrs
mov
out
dec
mov
add
ror
lahf
mov
and
mov
mov
iret
lods
or
jp
mov
cmpsb
je
dec
mov
inc
adc
push
mov
ror
xchg
xchg
pop
mov
adc
xlat
jmp
pop
clc
xchg
subl
dec
xchg
iret
addr16
data16
and
out
dec
clc
ret
push
shlb
popf
pop
repnz
sbb
xchg
cs
ret
inc
push
push
fs
mov
mov
shrl
and
inc
sarl
call
pushf
test
dec
dec
sub
leave
lods
out
dec
lods
mov
add
dec
lods
loop
xlat
inc
pusha
fisubl
in
fs
ret
push
pop
out
mov
out
mov
cmpsb
in
mov
rcr
bound
mov
xchg
sub
incl
lock
push
xchg
add
das
mov
cmp
clc
mulb
stos
pop
jnp
and
cmp
rcll
add
decl
inc
sbb
enter
in
pushf
xor
call
add
add
add
add
arpl
dec
add
add
jecxz
daa
add
add
add
add
add
daa
add
fsubl
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
jg
add
in
add
and
add
sahf
mov
add
add
add
add
add
add
add
add
add
or
or
or
or
ljmp
add
frstor
add
daa
add
add
daa
add
daa
add
frstor
add
jmp
daa
add
aas
aas
test
xor
add
aas
aas
mov
int3
aas
test
inc
aas
aas
xor
aas
popa
cmpsb
int3
aas
add
aas
mov
test
aas
aas
test
jns
test
add
test
test
aas
mov
movsb
mov
cmpsb
test
test
add
insl
gs
pop
test
aas
mov
test
inc
test
aas
popa
test
aas
add
popa
aas
aas
test
mov
pop
aas
test
aas
test
test
aas
aas
je
popa
jae
pop
aas
test
aas
aas
inc
test
aas
test
mov
jae
pop
aas
test
mov
mov
mov
mov
jae
pop
inc
mov
test
aas
test
mov
lods
mov
insl
push
shrb
je
xchg
popf
pop
repz
shll
and
mov
mov
push
cltd
mov
dec
stos
sbb
xlat
sbb
lret
lods
mov
mov
stos
jecxz
push
daa
push
add
jecxz
lahf
inc
ljmp
jns
add
cmp
movsb
or
test
std
int3
fdivrp
xchg
notl
arpl
mov
fdivrs
sbb
and
adc
movsl
ljmp
xor
movsb
push
lret
cwtl
repz
push
xchg
out
push
lea
iret
mov
pushf
ficomps
in
cwtl
xor
push
inc
inc
sbb
mov
pop
test
call
push
xor
pushf
inc
jb
sbb
adc
or
clc
xchg
loopne
pop
xchg
xor
repz
sti
rcrl
orl
sbb
adc
dec
rcrb
adc
out
mov
cmp
out
shlb
sbb
cmc
xor
iret
arpl
ds
inc
sub
push
movsl
or
sbb
iret
arpl
cmp
add
stos
lret
test
dec
mov
cs
mov
stc
mov
adc
hlt
test
out
hlt
iret
fsubrs
into
and
aad
int3
add
fstpt
pop
nop
sbb
aam
mov
mov
imul
mov
pop
sub
or
cmp
push
mov
jb
imul
aas
stc
mov
pop
push
int
cld
jbe,pn
call
enter
mov
xlat
lret
sbb
xchg
aad
sti
test
outsb
lret
xor
sub
loope
outsb
mov
not
daa
mov
lahf
into
cmp
pop
fsubrp
aad
fldenv
lods
xchg
sub
movb
movsb
and
jo
mov
stc
pushf
pop
xchg
push
and
les
mov
mov
cmpsb
data16
mov
outsl
cltd
push
fdivl
mov
xor
gs
mov
in
pusha
addr16
jno
decb
mov
ds
aas
je
adc
in
mov
inc
xchg
mov
push
jne
rcr
ss
mov
dec
dec
sbb
int
mov
icebp
mov
sbb
inc
test
inc
dec
fs
fisubrl
loope
xchg
ret
into
xor
inc
lcall
sbb
xor
cmc
rcr
imul
mov
lods
repnz
inc
imul
jg
popa
rcpps
jp
inc
aam
ret
ja
mov
bound
adc
call
and
xchg
test
sbb
push
sbb
mov
movsl
pop
das
or
cmp
outsl
adc
and
mov
stos
test
inc
stos
xchg
adc
mov
aas
and
jo
mov
jg
jecxz
test
cs
sbb
xchg
add
leave
pop
loope
dec
pop
dec
xor
lea
lods
dec
mov
ret
dec
lods
leave
jle
push
xor
cmp
adc
fisubrs
mov
or
stos
repnz
loope
mov
stc
test
cli
int3
mov
jg
dec
mov
jnp
in
daa
cmp
test
pop
jbe
mov
jbe
push
repz
pop
cmp
fistl
loopne
sub
add
xchg
fildll
mov
mov
dec
scas
out
sti
inc
fcomp
mov
mov
popf
and
or
psllq
ljmp
insb
nop
adc
nop
aas
arpl
mov
lods
cs
inc
mov
add
xor
or
dec
mov
nop
inc
dec
mov
int3
cwtl
xchg
in
fldt
or
inc
xor
push
call
nop
ret
loopne
movsl
pop
lods
ljmp
dec
pop
push
and
xor
sbb
les
adc
dec
cmp
repz
icebp
dec
pop
das
out
push
ficomps
cmp
jnp
mov
xlat
repz
shrb
mov
fisubs
mov
push
fsubrs
jg
sbb
rol
inc
test
dec
incl
icebp
and
jmp
xchg
jmp
adc
mov
jmp
push
mov
xchg
mov
or
aas
hlt
or
sbb
fdivs
es
outsl
pop
cltd
xor
in
addb
add
add
sbb
neg
mov
int3
into
dec
xor
enter
lods
aaa
sub
jb
lahf
mov
cs
sbb
lock
inc
call
sbb
lock
in
arpl
popa
orl
fcoml
cmc
mov
in
aad
ffree
arpl
mov
sub
sbb
xor
repnz
dec
rcrb
fnstcw
je
out
jb
movsb
mov
out
inc
pusha
clc
pop
and
adc
sbb
in
xor
cmp
push
mov
mov
jne
pop
mov
in
mov
bound
repz
cmp
jb
fistps
or
mov
std
sub
mov
leave
inc
cmp
cld
out
aam
adc
popf
lret
push
fiaddl
rolb
push
xchg
insl
jo
mov
mov
jbe
mov
leave
sub
adc
daa
inc
lds
xchg
fsubrs
dec
mov
mov
cmp
dec
dec
fldcw
push
insb
cmp
pop
lock
inc
xchg
sub
ficoml
cmp
dec
leave
and
test
test
adc
scas
je
mov
enter
mov
int3
sar
je
and
in
imul
or
stos
cmc
movsl
cmc
js
mov
xchg
mov
popa
sarb
push
dec
lret
jb
cmp
dec
incl
jle
xchg
adc
xor
sahf
sbb
push
inc
popf
divl
dec
das
aad
xchg
out
push
ljmp
mov
shll
mov
mov
lds
cmpsl
xchg
mov
sub
push
xchg
hlt
push
xchg
inc
fcmovne
pushf
loopne
inc
je
add
sahf
push
mov
dec
jns
jbe
adc
xchg
mov
mov
sti
sub
rcll
pop
ficomps
jle
or
sbb
sbb
js
cmp
jbe
mov
jp
cmp
in
mov
xchg
rcl
jmp
imulb
cmp
mov
in
sub
sbb
jl
js
jns
and
sub
dec
jge
loop
add
mov
xchg
lahf
push
pop
cld
inc
mov
popa
inc
ss
inc
leave
aad
sti
push
into
cmp
jp
fcmovu
stc
dec
xchg
add
push
mov
and
data16
scas
inc
xor
mov
lods
gs
lret
jo
out
imul
bound
stos
xchg
or
sbb
push
pop
or
xchg
iret
sarb
mov
mov
cmp
inc
out
sti
rcrb
aad
dec
std
es
cmp
int3
mov
popa
sti
pop
inc
mov
mov
lcall
mov
roll
loopne
add
push
mov
outsl
inc
test
cmc
aas
sub
sub
sbb
fistpl
pusha
jp
or
aaa
popa
jae
mov
dec
ds
mov
lods
mov
mov
aad
es
adc
add
xor
ror
jmp
aad
push
das
ret
pop
shr
cld
cmp
bound
cmp
pushf
idivl
inc
cmpsl
daa
aam
stos
stos
aad
data16
xchg
cmp
push
xor
fidivs
nop
fbstp
sarl
mov
adcl
jl
popf
xchg
mov
cld
dec
cmp
orl
inc
and
imul
cmp
mov
jb
xchg
loop
mov
pop
into
mov
cmp
mov
sub
xchg
cwtl
cmp
push
inc
loopne
sbb
andb
sbb
repz
je
lods
mov
mov
xchg
cmp
shl
dec
xchg
adc
rcll
xchg
mov
xor
pop
movsl
shlb
and
gs
fwait
xor
jae
pop
mov
aaa
idivb
mov
mov
dec
stc
insb
add
pop
ja
or
nop
iret
pop
xchg
stos
shrb
imul
sub
and
dec
int3
xor
or
cmp
divl
clc
cs
mov
lock
jnp
pusha
jge
pop
pop
and
loope
mov
lods
lods
xchg
jecxz
movsb
fs
or
xor
lahf
lahf
loope
xor
cmp
cmpsl
inc
or
rolb
sbb
data16
dec
fs
repnz
mov
in
jle
setge
add
jnp
sahf
icebp
push
insl
iret
iret
sbb
and
sbb
pop
xor
bswap
repnz
mov
mov
fiaddl
push
jne
je
xor
es
shll
int3
mov
jecxz
fisubs
cmp
outsl
xchg
outsl
mov
shlb
test
inc
add
out
adc
inc
push
sub
mov
sub
cmc
cld
jge
cmc
mov
lret
pop
pop
pop
push
das
cmp
repz
out
cmpsb
add
dec
mov
int
lea
jbe
xor
cmpsl
fldenv
pop
jp
popa
loop
jb
add
test
test
je
lcallw
mov
lcall
mov
and
ret
cmp
push
scas
inc
dec
cmp
daa
jge
jae
sub
adc
adc
stos
add
arpl
jp,pt
jg
xor
ds
inc
mov
in
pop
outsb
movsb
aad
pop
jb
or
pop
leave
cmpsl
mov
push
int
fisttps
sub
mov
shlb
movsl
fisubrs
cmpsb
xor
sbb
push
xor
inc
aas
jmp
loop
jmp
movsl
sub
push
mov
movsl
lock
movsl
and
hlt
mov
cmpb
sbbl
ret
clc
addr16
mov
movsl
sbb
int
idivb
mov
clc
andb
dec
xor
sub
inc
xor
sub
test
add
shl
pushfw
mov
pop
cmp
cmp
push
popf
clc
test
push
pop
push
mov
insb
sub
negb
pop
ss
xchg
in
mov
jne
mov
xchg
inc
clc
dec
xchg
or
cmp
pop
aas
pop
out
mov
repnz
push
jmp
arpl
test
xchg
push
aas
rclb
or
dec
ret
mov
pop
ret
adc
or
push
xor
jp
mov
pop
xchg
andl
mul
xchg
lock
rcr
xchg
jbe
rolb
test
pop
mov
test
add
sarl
shrb
pop
mov
test
add
aaa
aaa
xor
xor
fs
insb
add
in
push
jmp
jmp
adc
outsl
ret
mov
hlt
lret
inc
adc
imul
adc
xchg
por
std
add
push
scas
xchg
es
xor
or
call
sbb
push
sbb
pop
shll
mov
pop
cmp
icebp
and
pop
int3
sti
repnz
orl
ret
cli
add
scas
leave
sti
in
leave
fidivrs
push
pop
les
fwait
dec
mov
fistps
pushf
cwtl
leave
adc
xor
push
cmp
jmp
loopne
shll
mov
xlat
xchg
ss
jmp
add
movsl
inc
inc
cmpsb
pushf
cmpb
and
repz
test
push
or
pop
movsb
and
aam
es
and
cmpsl
cmpsl
sar
stos
lret
sub
je
scas
or
ret
std
and
and
add
jno
pop
in
xchg
js
xchg
xchg
iret
mov
das
loope
sbb
push
sbb
add
stos
adc
mov
pop
rclb
cmpsb
aad
arpl
call
out
mov
std
push
lcall
insb
mov
cwtl
fists
setnp
jns
cwtl
and
rorl
test
pop
sldt
imul
mov
movsb
ja
mov
pop
sub
fimuls
pop
andb
push
inc
shrl
pushf
lock
mov
mov
fstps
sub
mov
dec
pop
jmp
loop
xchg
cwtl
jnp
rcrl
div
xor
adc
sub
mov
sub
daa
lcall
nop
rorb
jp
xor
in
stos
sti
stos
mov
fisubl
fcompl
and
cmc
cmp
lds
daa
lcall
shlb
fadd
jecxz
nop
or
add
dec
xchg
xchg
adc
push
fidivrl
mov
mov
shll
inc
mov
orb
push
xchg
push
outsl
pop
call
or
pop
ficoms
repnz
push
inc
cmp
jo
es
mov
hlt
shlb
imul
add
push
dec
sub
jmp
sbb
inc
cmpsl
scas
int3
in
pushf
push
pop
aas
or
mov
fimuls
inc
into
lea
mov
rcll
pop
or
leave
mov
adc
rolb
cmp
es
fistpll
mov
push
jo
mov
lret
add
cmc
sti
imul
mov
rorl
xchg
rclb
scas
sbb
sub
mov
xor
jbe
add
and
sub
push
jne
jmp
and
jecxz
sti
or
jl
mov
sub
les
stos
push
cltd
adc
ret
inc
in
pushf
cmpsl
sub
neg
rolb
imul
ret
sarb
sub
adc
popf
and
mov
shlb
bsf
ret
ds
mov
shl
cmp
pop
xor
sbb
sub
lret
inc
xchg
cltd
aaa
test
out
test
out
pop
mov
dec
pushf
push
pop
sub
pop
call
cmpsb
sub
push
imul
inc
enter
std
fs
rorl
movsl
sti
and
xor
test
inc
cmp
mov
xor
ds
out
mov
pushf
or
shlb
xchg
pop
pop
jge
cwtl
jne
jmp
dec
in
jecxz
mov
cmp
push
and
cld
lock
xchg
xchg
stos
jecxz
xor
out
push
jnp
lahf
ficoml
push
call
xor
push
js
mov
xor
pop
gs
cmpsb
stos
std
jo
mov
adc
pop
arpl
pop
dec
xchg
je
mov
insl
push
xor
iret
and
out
insl
in
pushf
dec
jmp
dec
sbb
sbb
jge
loopne
fwait
cmp
mov
shrb
cwtl
js
sbb
in
cmpsl
fwait
push
aam
ja
cwtl
mov
dec
push
sti
push
test
pushf
inc
ss
or
mov
pop
outsb
lahf
and
xchg
test
lods
cltd
lods
jb
inc
dec
sbb
idivl
adcl
nop
or
std
imul
adc
pop
inc
mov
movsl
xchg
push
pushf
xchg
roll
cltd
shll
or
sbb
adc
xchg
es
aas
push
cmp
push
push
sbb
dec
xor
adc
test
insl
mov
xor
mov
and
sub
notb
cmp
inc
cs
cmp
popl
and
pushf
hlt
outsb
inc
pushf
in
pop
inc
scas
jbe
xlat
aaa
icebp
sarl
shlb
add
popa
insb
inc
insb
insb
outsl
arpl
xchg
or
pop
push
scas
jnp
shlb
in
cmp
xor
jmp
cmp
movsl
out
adc
xchg
les
arpl
sbb
cmpsl
mov
test
test
inc
mov
std
sahf
push
xchg
xchg
cmp
ljmp
dec
or
stos
test
pop
inc
repz
daa
sub
jae
sub
jp
mov
cmp
dec
xchg
sahf
mov
mov
and
mov
je
aas
mov
cmp
sbb
xor
lock
jb,pt
popf
pusha
movl
jmp
jne
call
rol
add
movw
lea
shr
movsbl
rcr
and
mov
dec
add
pusha
pushf
movzbw
call
test
bt
cmp
clc
cmpb
pusha
pushl
push
push
lea
jne
sbb
shrd
mov
cmp
cmp
clc
add
test
push
movzwl
inc
bts
mov
push
add
cmc
cmc
mov
push
cmc
bt
test
call
push
aad
loop
pushf
adc
sbb
cs
rcrb
rolb
inc
lds
sbb
movsl
and
rcrb
sub
nop
add
jl
sti
aaa
or
insl
sub
mov
lcall
dec
fisttpl
leave
stos
xchg
loopne
xchg
outsb
movsl
xchg
xchg
pop
mov
ljmp
test
testb
mov
test
sarl
inc
fdivrl
jae
clc
call
aam
mov
pushf
stos
repnz
adc
cmpsl
in
lds
jnp
gs
nop
aas
test
cs
rol
pop
fldenv
push
les
add
jecxz
push
stos
lahf
dec
jle
dec
fldenv
and
inc
push
add
test
mov
rorl
mov
mov
or
add
testb
mov
sahf
jno
or
cmpsb
pop
pop
cwtl
jne
iret
mov
pop
orl
mov
fmulp
cmpsl
add
mov
std
inc
lahf
xor
xor
inc
repnz
jmp
cld
sub
loopne
pushf
inc
mov
xlat
dec
xor
sbb
insl
out
mov
ror
lds
jmp
lcall
scas
lock
and
arpl
jge
pop
push
inc
cmpsb
sarl
pop
pushf
jns
ljmp
nop
data16
xor
push
mov
sbb
popf
in
fld
jb
xor
lret
push
or
mov
xlat
sub
insb
cmp
push
mov
add
mov
mov
fistps
dec
xchg
push
mov
icebp
fdivl
loopne
pushf
pop
or
pop
shrb
jnp
stc
inc
mov
test
jbe
and
daa
jno
mov
iret
lods
cmp
bound
push
jmp
pop
cld
ljmp
push
inc
out
test
push
jnp
int3
ret
shrl
out
fwait
shr
sbb
call
repnz
push
fnstcw
pop
mov
enter
push
xor
or
inc
clc
out
cwtl
fwait
jns
inc
and
dec
xor
fldpi
loop
push
movnti
cltd
sub
pushf
imul
sbb
les
push
decb
xor
insb
mov
inc
repz
cmpsl
stos
stc
repnz
jge
push
adc
cmpsb
outsb
jl
and
int3
ds
bswap
xchg
or
and
andl
sub
pop
jne
cli
mov
lret
sbb
popf
lcall
gs
fs
ret
lahf
ljmp
jl
inc
pop
test
inc
mov
cltd
loop
pushf
aad
jge
ret
and
lods
sahf
incb
rclb
adc
lret
rclb
jg
mov
das
ss
imul
fs
fmuls
movsb
adc
retw
movsl
xchg
xchg
mov
and
mov
fildl
ds
orl
mov
test
mov
les
mov
lock
sti
fs
cmpsb
cmc
fwait
movsl
sahf
out
pop
es
mov
jp
ljmp
ret
sbb
add
in
mov
sarl
dec
xchg
mov
xchg
pop
stos
lahf
repnz
add
call
fs
jge
mov
fldt
inc
repz
dec
add
out
lret
mov
addl
stc
adc
lds
or
int
outsb
sarl
cmc
or
lds
inc
movsl
and
and
jns
inc
movb
pushf
neg
call
mov
fcomp
pushf
cmpl
mov
out
ret
pushf
push
xor
ja
sub
bound
and
iret
cmp
fs
std
adcb
sub
pop
sarl
mov
fcompl
shr
popa
nop
fwait
shrb
xor
inc
lcall
cmpsb
sub
push
cmc
jp
lock
pop
cmp
in
adc
jge
mulb
mov
addr16
push
dec
or
sub
cmp
jmp
dec
xor
pushf
insb
popf
in
nop
pop
shrl
mov
test
mov
loop
adc
sbb
cld
add
fmull
push
daa
mov
mov
les
jns
ror
scas
xchg
hlt
fistl
aam
sbb
sub
xor
jl
or
imul
adc
es
in
inc
pop
jg
sub
jns
das
loopne
fwait
jmp
dec
dec
pop
mov
incb
imul
mov
outsb
dec
out
aad
or
mov
mov
rol
test
pushf
cmp
cwtl
bswap
lea
movsbw
lea
setg
movsbw
mov
jmp
adc
fst
pushf
rcrb
add
inc
sbb
push
aaa
mov
and
xchg
add
push
out
repnz
in
cmp
adc
xlat
sbb
lret
dec
hlt
jmp
test
test
mov
lds
leave
fidivrl
scas
sub
dec
addl
mov
repnz
add
scas
ja
xor
pop
arpl
push
lds
mov
xchg
jmp
imul
sbb
xor
dec
das
xchg
mov
sub
mov
mov
dec
inc
xor
cs
insb
add
or
pushl
push
lea
je
jmp
push
sub
in
cwtl
add
out
int
and
mov
xor
in
scas
mov
fmull
int3
cmp
rcrl
xchg
sbb
dec
mov
shrb
sbb
inc
mov
sub
cmp
inc
inc
idivb
in
rclb
pop
pusha
xchg
xchg
int
xlat
and
pop
pushf
iret
addr16
rcrb
pop
loop
leave
sub
loop
int
adc
por
xorb
enter
insb
aaa
popf
sti
dec
adc
out
lret
xor
mov
lret
ss
pop
out
lock
iret
add
insl
or
cltd
sbb
sbb
cmp
jl
xchg
sub
jbe
ds
or
call
push
lds
std
mov
aaa
inc
cmp
pop
push
cli
sti
test
xchg
int3
mov
or
xor
ret
inc
add
bound
fwait
push
inc
shl
jo
int3
adc
mov
sub
sub
cld
ljmp
insb
inc
or
inc
push
fs
jne
rcr
shr
call
adc
xchg
pushf
scas
clc
jno
lods
mov
mov
ss
mov
jnp
notb
cmpsl
and
mov
pop
xor
icebp
insl
jle
lcall
jb
push
mov
ret
jle
lcall
dec
xorl
or
lcall
push
in
pushf
add
and
inc
fildll
sbb
push
out
ret
lahf
aad
fistpll
sbb
jo
mov
daa
adc
mov
aaa
xor
pop
mov
out
repz
enter
jae
mov
push
std
std
push
daa
inc
test
scas
sub
dec
or
call
jne
lret
jae
int3
mov
daa
xor
add
pop
fcmovbe
pushf
mov
xorl
push
push
std
fwait
jp
cs
cmpsb
jne
cltd
cmpsl
sbb
xchg
pop
mov
sahf
push
sarb
ret
movsl
mov
push
shrb
ds
and
in
jnp
das
add
xchg
add
mov
sub
adc
push
mov
jmp
pushf
jne
mov
call
das
add
lods
mov
cwtl
add
add
je
inc
mov
sub
fidivs
xor
rep
push
mov
cmc
stos
cltd
loop
stos
test
xchg
in
adc
ret
fdivrp
stos
or
xor
sbb
pushf
aas
jl
ja
mov
sbb
int3
aaa
mov
fadd
cltd
loop
adc
into
scas
mov
mov
sbb
inc
div
aas
push
push
aaa
into
mov
cld
insl
std
test
push
in
negl
fwait
dec
test
loopne
xor
sub
cmpsl
int
adc
orb
xor
test
cmp
test
dec
mov
or
xchg
insl
loopne
push
mov
test
mov
adc
lcall
dec
stc
jo
xorb
sahf
js
lahf
imul
aaa
mov
test
dec
std
add
cmp
jle
inc
mov
jmp
jg
dec
fcom
pushf
push
aam
xor
movsb
dec
cmp
push
xchg
loope
add
insb
rorl
pop
rcrb
out
enter
dec
pop
push
cli
or
pop
mov
push
shrl
shrl
lods
and
addr16
push
test
dec
pushf
jns
sbb
push
shl
movsb
mov
hlt
cwtl
sbb
rcrb
sahf
mov
xor
add
jbe
outsl
aad
push
jbe
lods
imul
aaa
sahf
jmp
dec
out
mov
cltd
testl
fidivrl
ja
out
daa
sub
sahf
dec
xor
pop
ds
cmp
test
test
cmpsb
xlat
mov
fsubr
push
imul
and
insl
orb
inc
rclb
or
test
lea
add
inc
aaa
and
iret
ja
xchg
mov
ja
call
inc
popf
in
xchg
in
cmp
es
jle
pop
xor
and
jae
into
xchg
rclb
cmpsl
xchg
mov
or
pushf
imul
shlb
sbb
sub
mov
cmp
call
jmp
into
shlb
in
xor
stc
jbe
fadd
pop
jecxz
pop
aam
sbb
mov
mov
stos
clc
dec
push
add
popa
clc
cmpsb
adcb
push
or
imul
add
add
and
mov
aaa
adc
dec
repnz
jmp
mov
or
fbstp
sarb
pushf
xchg
mov
mov
mov
mov
call
pop
nop
xchg
pushf
xor
sub
hlt
loop
dec
xchg
pop
fists
pop
sub
repnz
shll
repnz
cmp
jmp
out
fcmovbe
adc
push
outsb
xor
pop
aas
int
push
cmpsb
pop
add
stc
fdivs
pusha
dec
and
stc
mov
stos
inc
sbb
loop
call
jmp
or
or
xchg
outsl
push
adc
push
lods
mov
xchg
outsl
imul
xchg
loope
and
or
bnd
pop
mov
sbb
pushf
or
sbb
in
push
mov
mov
vpaddb
stos
push
out
in
push
fmul
push
scas
jnp
sub
xchg
pop
nop
xchg
add
cmp
add
out
in
movsb
out
rorb
and
xorb
jmp
mov
push
push
adc
or
gs
mov
inc
or
psrld
into
pusha
mov
push
jo
xor
pushf
ljmp
pop
cwtl
pop
loope
gs
jne
push
inc
push
inc
push
dec
xor
cs
insb
add
outsb
and
movsbw
add
bsf
neg
mov
dec
call
mov
cs
pushf
mov
es
jmp
dec
sbb
aam
sub
xchg
jl
sub
pop
and
jne
cmpsb
cltd
add
and
xor
imul
xor
pop
jno
jg
std
sub
into
sbb
nop
dec
sbb
icebp
add
stos
mov
out
fwait
into
lret
aam
adc
outsb
cmovs
fldl
push
pop
mov
subl
adc
jl
jl
and
adc
and
cmp
nop
and
cmp
pusha
lea
jb
call
push
pusha
push
pusha
pushf
lea
jmp
icebp
popa
sbb
pushf
aas
jp
xor
and
aas
and
lods
and
xchg
pop
fldcw
cmp
rorl
loopne
fldt
cld
fldenv
push
cmp
and
cmpb
push
mov
pop
dec
sbb
ss
sarl
sub
bound
ss
fimull
in
push
mov
ret
stos
or
rclb
pop
mov
sarb
push
pop
mov
adc
out
jnp
and
loopne
pushf
push
ficoms
cmp
aad
sahf
pop
nop
jo
aam
pushf
in
or
jg
ror
aaa
xchg
pop
sbb
stc
outsb
sahf
push
sub
mov
sbb
leave
add
or
pop
adc
cwtl
arpl
push
into
stos
testl
sahf
mov
sub
movsl
and
pop
int
jmp
outsl
sub
shrl
pop
dec
sub
xchg
stc
jns
jno
push
jns
mov
inc
mov
push
xchg
adc
inc
push
pusha
pushf
call
cwtl
scas
lcall
xor
and
insb
dec
cs
jg
cs
pop
enter
pop
cmp
xor
mov
ja
dec
stos
and
xchg
pop
insb
and
pop
movsb
or
pop
rsm
push
loope
lock
jbe
test
push
dec
adc
jp
movsb
jne
jg
imul
loopne
cmpsb
mov
pop
push
lahf
mov
cmp
xchg
lods
orl
je
push
push
bnd
pushf
cmp
mov
sti
icebp
aam
and
shrb
mov
add
arpl
sub
in
cmc
sub
mov
sub
sbb
decl
dec
xchg
or
test
push
outsb
fisttps
nop
divl
cmp
int
cmp
jle
movsb
push
data16
pop
xor
lahf
lods
sbb
pop
fninit
mov
jg
and
add
add
outsb
lcall
aam
sub
mov
sub
xchg
push
js
mov
mov
add
and
pusha
movl
pushf
pusha
pushl
movb
movl
pushl
lea
jmp
out
out
pushf
jb
daa
test
jle
stos
adc
push
lahf
cmc
sahf
mov
sbb
pusha
cmp
fwait
mov
aaa
jg
shr
ret
jmp
inc
inc
adc
or
mov
add
loopne
das
fbld
inc
addr16
mov
mov
sbb
hlt
dec
adc
jle
dec
xchg
daa
testl
ss
push
out
icebp
xchg
test
xchg
fistpll
sbb
or
test
and
and
push
scas
jg
pop
loop
adc
and
sub
pop
xchg
cmp
mov
cmp
mov
movb
movl
jmp
push
pushf
lea
call
pushf
adc
mov
mov
pushf
pushl
lea
jae
call
rcr
mov
negl
ljmp
xor
sub
or
pop
dec
add
mov
js,pn
stos
stc
fst
idiv
lea
add
aaa
dec
inc
mov
dec
je
ret
ja,pn
ja
sub
mov
adc
cmp
invd
fwait
lret
adc
jle
sbb
push
add
in
xchg
add
push
testb
jmp
jecxz
adc
cld
xchg
ds
js
adc
jecxz
jecxz
xor
out
mov
jmp
roll
inc
in
cmpsl
jo
pushf
ja
jecxz
push
fisubl
mov
dec
xor
insb
insb
clc
xorb
sub
call
jmp
cmp
aad
mov
mov
cmpsl
xchg
sbb
pop
stos
mov
add
inc
mov
jno
enter
outsl
inc
xor
fstpt
mov
dec
xchg
xor
add
mov
lea
call
pusha
push
adc
call
pushl
popl
call
lea
jb
stc
clc
test
cmpb
pushf
lea
jns
pusha
push
lea
jne
cmp
mov
call
das
aaa
inc
iret
pushf
lock
sbb
mov
push
pop
dec
enter
sub
out
pushf
pop
add
dec
std
mov
sub
xlat
sbb
arpl
sbb
pop
lods
aas
hlt
add
test
rolb
mov
and
push
outsl
jo
mov
mov
adc
or
icebp
and
mov
mov
sbb
subl
nop
outsb
in
sbb
in
xlat
lock
pop
mov
call
les
iret
pushf
sub
and
mov
and
push
mov
adc
test
loopne
xchg
push
int
pop
test
icebp
mov
iret
mov
shlb
mov
cmp
sahf
push
inc
sub
in
ficomps
xchg
mov
xor
clc
out
jne
xchg
ja
xor
mov
fs
adc
inc
push
mov
mov
addb
adc
in
aad
xchg
and
test
pushf
scas
jnp
cmp
xchg
cld
pop
scas
clc
cmc
dec
dec
aas
gs
cs
das
pusha
xchg
mov
pop
pop
aam
cmpsb
ljmp
dec
cmp
inc
das
add
xchg
dec
ds
mov
mov
adc
push
push
sub
and
mov
ret
inc
mov
mov
sbb
cli
xchg
adc
push
or
push
dec
jno
loopne
mov
pop
xchg
movsl
mov
lcall
push
pop
push
pop
pop
mov
add
xor
fdivrl
adc
mov
stos
push
popa
jmp
test
test
call
cmp
pusha
pushf
jmp
dec
push
ror
pushl
cmp
pushl
pushf
shr
call
clc
mov
lea
mov
push
mov
bt
bt
cmc
mov
pusha
ror
bt
neg
stc
xor
jmp
js
cld
lds
or
fidivrs
cmp
mov
ja
xchg
cld
and
jmp
mov
gs
jge
mov
cmp
inc
lahf
jne
jmp
lds
push
jne
adc
cli
inc
cmp
sbb
gs
movsb
cmp
jmp
inc
push
push
mov
cli
lds
dec
popa
insl
pop
jmp
inc
cmp
je
cs
cld
inc
cmp
inc
sbb
cli
lds
sbbl
push
mov
xchg
gs
je
and
mov
stos
push
jmp
push
stos
sbb
jns
push
out
lahf
inc
aam
cld
inc
cmp
pusha
sub
sbb
cli
in
pop
add
jne
mov
xchg
cld
inc
cmp
fadds
lds
imul
cmp
jo
lret
mov
incl
jns
push
jl
das
fsubrp
incl
cmpl
out
cli
inc
cmp
movsl
adc
xor
cli
lds
outsb
popf
aam
jmp
inc
cmp
dec
add
movsl
cmp
das
addb
fwait
push
sub
jmp
lds
push
ffreep
xor
sahf
push
xchg
push
jbe
cmp
cld
and
daa
arpl
test
rcrb
lods
in
inc
cmp
stc
mov
lds
sti
jl
cs
inc
cmp
outsl
pop
cmp
cli
gs
or
movsl
cmp
inc
nop
push
movsl
in
incl
sbbl
test
fistl
cmp
push
decb
mov
push
push
dec
cmp
pop
mov
adcl
je
cmp
fwait
push
scas
adc
add
into
mov
cld
movsl
cmp
sub
xor
repnz
add
and
sub
cmp
pusha
test
add
mov
jmp
inc
cmp
jg
repnz
cli
inc
cmp
fs
aas
push
repnz
inc
cmp
add
gs
fildll
test
movsl
sbb
ds
jmp
inc
cmp
sbb
les
jmp
lds
jns
into
lea
call
pushf
clc
cmc
movb
sub
pushf
lea
jne
push
call
mov
lret
pushf
pop
xchg
jne
lea
cmp
pop
nop
test
push
into
jle
in
jno
xchg
pushf
invd
loope
jmp
adc
test
sbb
pop
ds
pop
arpl
push
ficoms
fsubs
call
mov
cmp
arpl
mov
cwtl
adc
fisubrs
cs
mov
push
xor
dec
mov
adc
xor
pop
arpl
cmpsl
adc
push
dec
sub
and
lea
loop
cmpsb
adc
pop
ret
aas
jns
rol
dec
cmp
ljmp
pushf
dec
fwait
sub
adc
mov
push
aad
add
cltd
hlt
mov
ffree
sbb
adcb
cmp
sbb
mov
xchg
jns
jno
cmpneqps
sub
pop
std
pop
lods
and
pop
jmp
jne
ljmp
fcmovb
mov
mov
imul
cmp
or
add
push
das
dec
enter
dec
xor
push
add
pop
dec
mov
and
push
xor
ret
mov
sarb
inc
leave
pushf
jne
call
adc
je
cmp
stos
pop
mov
add
es
mov
scas
cmp
in
stc
lds
mov
leave
xor
xchg
icebp
jo
sahf
divl
lock
sbb
inc
in
out
and
fcomps
jnp
les
adc
pop
push
movsl
sbbl
cmp
dec
cmp
jo
pop
aaa
pop
out
jbe
mov
mov
push
cmc
movw
and
cmc
stc
add
pusha
mov
mov
lea
jmp
pusha
cmc
clc
pushw
popfw
push
call
lea
jb
cmp
pushf
bt
pushf
cmp
pushf
push
lea
jae
xor
neg
xchg
mov
cmc
pusha
btr
mov
test
pushf
xor
mov
cmp
xor
clc
repnz
jmp
clc
pushf
cmc
cmp
push
jmp
jo
add
pushf
xor
bound
movsl
pop
bound
add
and
jno
popa
rcr
orl
sbb
add
and
xchg
test
test
pushf
in
sub
gs
mov
sbb
xchg
loope
sub
ljmp
ja
lock
outsb
cmp
cmpsb
sbb
xchg
mov
clc
mov
icebp
fistpll
emms
lret
sub
insl
loop
mov
xlat
push
xor
ret
mov
enter
jmp
ret
aam
cmc
add
push
adc
cltd
sahf
out
pop
aad
movsb
lahf
sub
icebp
push
push
mov
ljmp
dec
add
xor
ja
add
into
fmul
fstpt
and
pop
int3
popf
mul
add
mov
mov
inc
jo
or
dec
pandn
or
push
mov
and
data16
fsubrl
and
stc
fiaddl
loopne
int
jb
xor
repz
out
inc
imul
dec
cmc
ror
call
and
sbb
jge
aas
cwtl
in
into
das
push
add
jbe
sbb
mov
sbb
out
adc
mov
mov
cltd
roll
sti
and
add
addl
ja
pop
inc
clc
sub
repnz
fiaddl
add
shll
xchg
pop
mov
dec
lock
mov
ljmp
xchg
scas
mov
push
mov
daa
mov
xchg
in
popf
outsb
cld
xchg
in
pop
mov
pop
sub
xchg
jmp
mov
aam
xchg
xchg
jae
outsl
jnp
xor
lock
pop
pop
pushf
fcomps
out
inc
sub
dec
jl
mov
jno
out
fs
jns
jg
rorb
rol
mov
sbbl
pop
and
or
or
xchg
pop
sarb
fstcw
inc
shrb
xor
or
nop
je
test
mul
push
push
int3
lret
jle
lods
inc
mov
lret
cs
fadd
fbstp
pop
sbbb
js
aam
sbb
push
popf
add
addl
adcb
in
mov
push
das
and
lret
cmp
dec
jp
sbb
mov
aaa
dec
scas
addl
daa
notl
pop
pushf
js
loope
mov
movsb
mov
mov
jge
xor
lcall
lahf
sbb
pushf
rcrb
enter
cli
jecxz
xchg
push
repz
adcl
outsb
lret
not
pop
into
xchg
in
bound
pop
rcll
inc
fstpl
fnsave
gs
mov
cmpsl
mov
test
lds
push
stos
je
int
jb
stos
mov
sub
outsl
or
pushf
fcmovnu
int
test
lret
pop
pop
and
pop
pop
dec
lahf
repnz
push
das
nop
mov
adc
shll
test
pop
jae
inc
mov
dec
jg
mov
scas
scas
rcr
mov
push
mov
xlat
or
movnti
and
xchg
push
gs
cli
into
inc
aam
bound
lahf
into
adc
aam
das
ds
lcall
pop
mov
add
adc
pop
movsb
repnz
and
xor
andl
mov
pusha
call
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
push
pop
pushf
xlat
push
insb
push
mov
sub
mov
or
dec
cld
inc
in
fildl
xchg
xchg
mov
sub
insl
pusha
loopne
or
xor
cmp
and
in
xchg
int
in
mov
movsl
sbb
mov
cs
cmpsb
gs
push
fcomps
and
mov
out
pop
mov
loop
fbld
test
ljmp
mov
in
iret
adc
stos
push
mov
sbb
push
lret
sbb
sbb
push
fwait
add
dec
jb
pushf
ret
lcall
inc
dec
sub
push
fs
lds
insl
mov
cmc
fcmove
pushf
mov
lods
inc
sbb
das
cli
data16
mov
push
lods
sbb
fwait
jecxz
add
mov
mov
xchg
or
ret
rcrb
dec
add
inc
dec
cwtl
out
xchg
jo
adc
mov
outsl
outsb
dec
js
aas
out
jl
outsb
xchg
push
inc
lods
xchg
push
jne
mov
stc
loop
lahf
jae
jae
int
mov
sbb
mov
and
inc
stos
xorl
sub
aam
mov
adc
rcrb
call
cmp
pop
sub
push
mov
cwtl
push
push
sub
cld
fisttps
ljmp
les
fstl
push
popf
inc
dec
aam
xor
xor
pusha
insl
pop
movsl
adc
mov
pop
subl
pushf
pop
mov
mov
ja
xchg
jae
cli
je
dec
lcall
rcrl
adc
adc
pusha
movl
movw
movl
movl
push
lea
jmp
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
pop
out
mov
pushf
pop
mov
sarb
push
fnstsw
into
cs
add
xchg
mov
aad
add
cmp
ret
adc
push
add
jg
outsl
pop
dec
inc
jno
call
loope
sub
repz
inc
nop
mov
push
jo
stc
cmp
xchg
push
js
ret
cmc
and
cmp
add
pop
push
cmp
sbb
add
xor
pop
aam
push
pop
add
sub
gs
mov
or
pop
ret
or
rol
daa
adc
jp
fildl
mov
icebp
sbb
fs
or
ljmp
test
dec
xchg
test
jae
sahf
jbe
ret
xchg
leave
pop
sbb
insl
pop
jl
fidivs
sub
ret
mov
idivb
movsb
push
test
addr16
jo
arpl
push
sbb
xorl
cmp
add
jns
inc
fdivs
xchg
inc
stos
mov
inc
bnd
stos
lahf
adc
push
pusha
jecxz
cmc
mov
jo
cld
addl
and
dec
int
add
or
pop
mov
adc
xor
shll
and
divb
add
xchg
inc
rcl
adc
out
dec
pop
jnp
push
push
fsub
cmp
outsb
mov
bnd
xor
aad
daa
pop
add
mov
movsb
insb
call
aaa
and
je
add
add
cmp
sarb
out
movsb
push
xor
pop
mov
int
ljmp
pop
adc
jns
mov
cmp
xor
loope
sub
jo
adc
sub
dec
into
cld
sbb
and
xchg
jb
out
pop
in
fildll
cmp
dec
in
mov
addps
call
ss
jmp
adc
sahf
out
cmp
mov
and
addr16
test
rcrb
dec
xchg
jne
cld
mov
je
pop
cmp
imul
xchg
xor
xorb
jbe
add
pop
push
jg
aaa
insb
cmp
mov
cltd
cltd
loope
add
out
andl
cs
stos
daa
lahf
sub
movsb
aad
cmpsl
inc
push
jg
sahf
inc
aad
push
jmp
jg
jmp
loop
xchg
pop
mov
es
inc
xchg
std
mov
xorb
sbbl
mov
cmc
inc
lret
int
orl
mov
push
mov
xchg
test
mov
loop
subl
adc
fnstsw
push
adc
dec
push
mov
dec
sub
add
xchg
aam
push
mov
les
out
mov
icebp
scas
cmp
imul
mov
sbb
loop
sti
rol
xchg
fmulp
shl
shrl
scas
sbbb
mov
mov
arpl
loop
rol
mov
mov
test
lods
xor
jo
popf
cmp
dec
loop
repnz
out
pop
in
jo
and
pop
es
out
movsb
push
push
sbb
fildl
cmp
insb
xchg
xor
jne
pop
stc
mov
lds
es
stc
in
iret
xor
push
xchg
and
mov
cli
movsl
inc
inc
in
loopne
inc
adc
ffreep
je
repnz
repz
sub
mov
pop
push
out
enter
dec
add
sbb
mov
xchg
out
hlt
fs
mov
ret
shr
xchg
and
sbb
popa
pop
cmp
dec
je
ret
stos
fcmovbe
pop
stos
gs
pushf
addb
faddl
sbb
sbb
push
inc
and
shr
and
xor
xchg
popa
pop
lods
test
and
sub
loope
inc
mov
push
or
inc
ror
push
add
loopne
leave
xchg
jg
aam
inc
out
jmp
sub
in
filds
cmpsl
cmpsl
sub
cmp
inc
cmpb
push
insb
sub
mov
fdivrs
mov
jp
call
and
or
cmp
push
push
mov
jp
addb
sti
lcall
cmpsl
mov
or
and
repz
xchg
mov
rorl
mov
or
mov
mov
cmpsb
aam
ja
xchg
aam
lcall
mov
push
and
inc
and
sbb
push
xor
inc
dec
sbb
dec
leave
pop
mov
arpl
into
jmp
and
xorb
jge
cmp
xchg
insb
sarb
xor
pop
aaa
cmpsb
adc
call
jmp
daa
add
daa
add
daa
add
into
daa
add
cmpsb
sbb
jo
daa
add
into
daa
add
lret
add
daa
add
lret
or
daa
add
sbb
mov
daa
add
iret
daa
add
pop
sbb
nop
lret
sbb
daa
add
lret
and
daa
add
adc
add
iret
daa
add
sbb
test
daa
add
iret
daa
add
lret
cmp
daa
add
daa
sub
mov
iret
daa
add
xor
add
lret
dec
iret
daa
add
sbb
enter
push
iret
daa
add
pop
sub
ror
daa
add
daa
add
jnp
add
lret
arpl
daa
add
lret
add
add
mov
pop
mov
int
add
sub
out
push
dec
pop
maskmovq
idivl
jecxz
lods
xchg
mov
repnz
and
jno
pop
mov
enter
out
vcvtsd2ss
sti
pop
mov
or
in
bound
pop
jb
out
gs
add
fistl
push
jle
data16
inc
cltd
test
pop
and
push
pop
testl
pop
lahf
adcb
pop
adc
test
jl
dec
dec
dec
dec
inc
push
cs
insb
add
pushf
aad
add
dec
aas
adc
pop
sub
pop
adc
xchg
jmp
je
test
inc
cltd
sbb
add
dec
or
sub
sbb
add
push
aas
lahf
outsl
std
add
pop
es
inc
mov
iret
in
cmp
rorl
ljmp
rolb
daa
repz
int
jg
fidivs
adc
es
mov
xchg
out
push
mov
sub
adc
dec
popa
mov
mov
mov
bound
jnp
ffree
mov
adc
mov
sbb
and
stos
popf
stc
mov
push
jb
std
repz
adc
sahf
mov
xchg
js
or
pop
adc
push
in
sub
movsl
jmp
inc
xlat
out
cs
jns
and
iret
pop
std
repz
push
xchg
sub
pop
sbb
dec
add
pop
enter
dec
rcll
test
push
fimull
xor
inc
iret
xchg
cmp
ffree
and
and
lret
mov
xchg
sbb
or
imul
lods
add
lcall
pop
mov
adc
jl
pusha
cmpsb
add
sbb
xor
mov
stos
stos
nop
jmp
or
cld
xchg
imull
jp
outsb
divb
aaa
or
sbb
and
sub
loope
fldenv
movl
push
lea
jmp
in
cmc
xchg
lds
nop
mov
sbb
cmp
daa
jo
int
fsubrl
push
test
push
cmp
push
push
lods
adc
bound
cwtl
ljmp
int3
sbbb
dec
xchg
cmp
cmc
mov
cmpb
lcall
push
cs
js
aam
adc
adc
xlat
pop
and
sub
jl
inc
mov
popa
sub
out
mov
push
push
or
mov
stos
or
mov
rorb
adc
cmp
aam
insb
cli
lret
loopne
jns
loop
and
mov
push
dec
jge
push
inc
sbb
pusha
sbb
dec
lock
mov
dec
rcll
fsubp
push
and
xchg
repz
out
insb
dec
movsb
mov
enter
neg
cmp
adc
cmpsl
ljmp
popf
mov
movsb
add
pop
filds
xchg
or
mov
adc
lret
rdpmc
jmp
out
pop
cmpsb
jmp
loope
pop
push
cmpsl
ss
mov
insl
imul
xlat
or
mov
dec
push
loopne
inc
and
sarl
xor
pop
mov
jmp
pushf
stos
mov
ret
lock
mov
or
xchg
adc
js
icebp
into
nopl
or
popf
jo
insl
push
mov
pop
ret
fnstcw
dec
mov
xchg
pop
fwait
ljmp
jmp
pop
push
mov
jnp
shll
leave
les
mov
pop
dec
cld
fsubs
div
int3
cmp
cmp
int3
repz
not
pop
pop
jae
jl
sub
sbb
out
sbb
sbb
inc
mov
sbb
mov
push
aas
push
pop
hlt
push
lock
jnp
mov
jmp
push
ljmp
mov
xchg
xor
or
lds
popf
hlt
xor
adc
push
mov
pushf
out
jbe
scas
or
rcrb
data16
adc
mov
add
decl
xchg
gs
sarl
adc
mov
jecxz
adc
push
int
or
mov
mov
jmp
arpl
setp
shr
rcl
mov
pusha
cmp
test
or
pushl
pushf
push
lea
je
pusha
bswap
rcl
shl
add
bsr
mov
sub
sub
and
shr
add
shrd
mov
inc
add
rcl
add
add
shl
movsbw
adc
mov
pushf
stc
shr
pusha
call
mov
pushl
call
jge
pushf
mov
fistpl
jmp
mov
xor
xor
or
mov
sarb
inc
out
dec
rcrb
fnstsw
das
inc
fwait
pop
sub
jl
mov
xchg
lahf
std
or
cs
call
cwtl
or
fisubl
lds
adc
es
mov
ljmp
or
jno
push
leave
push
lods
outsl
push
mov
mov
in
xor
add
aaa
sub
xchg
pop
lods
mov
mov
jmp
pop
mov
push
inc
xor
pop
mov
or
scas
fdivs
loopne
into
xchg
daa
mov
fisttpll
arpl
adc
ljmp
scas
fists
pop
sub
das
pop
dec
fists
cmp
in
clc
mov
icebp
cltd
sub
js
mov
push
mov
repnz
jo
and
outsb
outsb
jae
and
sti
mov
loop
sub
cwtl
adc
cmpsl
add
pop
int
adc
or
sbb
outsb
mov
cwtl
aad
xor
mov
pushf
add
jbe
sub
std
pop
push
call
mov
scas
out
jo
rolb
out
insb
int3
dec
daa
or
testb
js
stos
jg
popa
jle
lds
lds
xchg
mov
div
fsubrs
sti
btc
bsr
shr
rcr
lea
add
adc
cmp
shld
rcr
mov
inc
dec
mov
cmp
test
repnz
call
popf
outsb
or
in
inc
xor
aam
and
pop
into
sahf
lea
push
sbb
call
mov
imul
pop
lds
cmp
mov
mov
stos
dec
sub
nop
add
gs
imul
imull
leave
in
xchg
jmp
cli
ljmp
inc
aad
arpl
addb
push
mov
pop
fnstcw
ret
fstl
lock
mov
test
out
push
fcmovb
rcrb
xchg
call
fistl
ss
inc
mov
negb
test
pushf
clc
bt
sub
cmc
cmp
cmp
jmp
lea
js
pusha
lea
jb
cmp
cmpb
pushf
lea
jne
bsf
movsbw
movzbw
btc
mov
cmc
cmp
add
bt
movzwl
btc
stc
call
mov
call
jmp
lahf
lea
not
movb
pushf
bswap
movl
mov
lea
movsbw
pusha
pop
lea
movb
call
cli
out
mov
pushf
push
push
cmp
jge
leave
sbb
jmp
xchg
fstpt
iret
or
pop
pop
mov
sahf
ljmp
sbb
jmp
cmp
loopne
xor
ret
test
fdivrs
jle
pop
sub
and
stc
xor
movsl
dec
cli
addl
popa
jb
nop
cwtl
int3
push
mov
ret
aas
loope
inc
or
jl
sbb
gs
into
dec
mov
call
sbb
cmpsb
mov
jp
lret
adc
mov
pushf
xor
inc
inc
stos
jne
mov
mov
fwait
subb
sub
push
test
adc
scas
lcall
mov
arpl
jb
dec
sti
notl
mov
iret
shll
sub
push
mov
jne
jmp
mov
in
test
or
dec
jecxz
sub
imul
ficoms
dec
add
pop
mov
into
xchg
ja
in
iret
push
ret
mov
cmpsb
jle
mov
pop
inc
mov
bswap
lea
jne
pushf
movl
jmp
call
xchg
mov
cwtl
mov
lea
pop
movzbw
lea
pop
pushf
mov
push
mov
not
mov
pushf
mov
pusha
mov
pushf
push
pushl
ret
mov
add
or
pop
mov
clc
addr16
ret
pop
cmp
out
inc
push
xor
push
jae
pop
lods
cld
sbb
adc
jecxz
ret
add
mov
js
dec
nop
and
ljmp
jbe
xor
popf
mov
andl
jno
loop
nop
out
incb
loopne
out
callw
pop
push
shlb
cs
scas
cmc
xor
dec
and
mov
repz
repnz
and
sub
in
push
mov
pushf
in
sbb
lret
xor
js
sbb
inc
adc
jo
sub
andl
jp
push
into
sbb
scas
cmp
orl
push
pusha
pop
inc
int
out
cmc
insl
aaa
pop
sub
or
rcrl
sub
imul
mov
mov
jno
faddl
scas
mov
or
mov
sbb
dec
mov
and
and
jmp
sbb
fnstenv
loopne
adc
fldl
iret
push
or
cwtl
jge
inc
int
mulb
add
scas
inc
fcoml
imul
stos
jns
stc
imulb
daa
cltd
aaa
bound
cld
dec
dec
lea
push
cmp
notb
clc
daa
xchg
mov
mov
shlb
pop
leave
pop
aas
add
add
push
mov
jno
and
mov
das
push
or
mov
or
fstpl
dec
aas
xor
sub
jnp
pushf
adc
pusha
pushf
jmp
pushf
cmc
add
push
test
cmp
push
jmp
pushl
pusha
movl
pushf
pushl
lea
jmp
sub
pusha
pushf
pushf
lea
jmp
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
in
scas
pushf
dec
push
gs
adc
das
pop
call
push
faddl
mov
jbe
loop
or
clc
sbb
outsb
pop
sahf
cmp
repz
sub
or
lods
sub
ss
hlt
push
or
dec
jle
in
pop
dec
mov
and
scas
adc
in
lea
mov
into
xor
sub
push
inc
roll
push
scas
pushf
aam
adc
cmp
xchg
or
dec
sbb
push
in
mov
cmc
fisubl
jae
pop
cmp
out
mov
inc
sbb
pop
and
aam
xchg
popa
cmpsb
mov
and
or
sub
lahf
jecxz
in
loope
and
into
push
ss
mov
imul
mov
dec
jnp
insb
repz
pop
or
mov
push
xchg
dec
xor
pop
mov
sbb
xor
xor
pusha
lea
ja
jmp
xchg
ja
scas
pushf
outsb
mov
lods
stos
mov
xor
inc
test
add
pop
push
aas
cld
daa
sahf
fs
rclb
dec
cltd
insb
push
push
lea
fidivrs
pop
data16
cld
rclb
aam
int3
and
bnd
adc
or
push
sbb
xchg
adc
leave
ljmp
inc
inc
es
sbb
dec
call
das
and
inc
stos
jl
sub
out
addr16
push
mov
pusha
call
sub
sbb
sbb
lret
and
push
je
testl
or
xor
movswl
xchg
in
mov
in
imul
outsb
jne
xchg
popf
stos
repnz
push
jmp
repnz
nop
mov
out
nop
inc
or
stos
mov
cltd
jp
dec
arpl
jo
xor
in
ss
dec
pop
lret
aaa
mov
loope
das
sub
aam
adc
scas
mov
rorb
sbb
in
les
iret
lea
jae
push
movb
movb
movw
lea
jmp
neg
bt
push
rol
jmp
call
call
jp
loopne
pushf
push
mov
popa
inc
daa
repnz
les
or
sbb
mov
rcrl
into
es
mov
mov
inc
mov
pop
and
jne
idivb
cmc
mov
ljmp
pop
or
mov
mov
cmp
jge
ret
rcrb
lahf
fisubrs
js
fdivrl
call
enter
pop
or
ss
in
mov
inc
xor
add
cli
jle
xor
add
jbe
call
ret
pop
sbb
in
mov
cmp
lock
call
inc
ljmp
xchg
cmc
mov
xor
loope
sbb
push
jno
mov
test
mov
sbb
mov
into
mov
adcb
jnp
insb
mov
js
mov
xchg
push
ja
push
cmpsb
stc
or
imul
cmc
jmp
mov
aad
dec
int
cwtl
ja
das
adc
jecxz
cmpb
push
call
dec
xor
cmpsl
xchg
call
xor
into
nop
out
push
fwait
popf
mov
xor
in
or
jge
sbb
es
loop
dec
mov
lret
mov
insl
aad
mov
mov
ss
dec
repz
inc
dec
loopne
push
dec
dec
sbb
mov
fisubrl
dec
pop
loop
repnz
sti
mov
and
mov
aas
popf
sbb
shlb
bound
insb
xor
cs
insb
add
es
mov
pushf
sbb
pop
pop
cmp
rcrl
push
xchg
adc
jnp
cmp
imul
out
enter
pusha
and
clc
lods
xchg
sbb
popa
scas
lahf
adc
push
cwtl
xchg
xor
pop
or
movsl
mov
inc
push
inc
or
cmp
pop
repnz
adc
lds
lret
push
cmp
mov
mov
repnz
out
or
adc
das
or
pop
std
bound
insb
sbb
dec
jmp
je
adc
lret
mov
jmp
movw
mov
mov
push
pushf
movw
pushl
ret
pushf
lea
jb
clc
cmc
cmp
jmp
bt
add
stc
stc
test
pushf
cmp
call
movsbw
movsbl
movzbw
movb
cwtl
cwtl
mov
call
pushl
lea
jbe
cmp
jmp
rclb
test
outsb
mov
int
sub
jbe
shl
jmp
rcll
arpl
push
mov
stc
lea
pushf
xor
out
testb
fnstenv
mov
push
movsb
mov
mov
xchg
mov
fildll
sub
push
idivb
add
scas
xchg
clc
in
popa
inc
mov
sbb
jge
shlb
iret
mov
cltd
shrl
push
rcrl
jnp
aaa
or
mov
or
inc
lods
cmp
bound
test
adcl
sar
adcb
inc
shll
loopne
ds
js
movsl
xchg
cmp
fldlg2
sbb
mov
push
int3
cli
adcl
sarb
push
jnp
dec
scas
fsubp
jp
aas
xchg
xlat
dec
sub
sti
ljmp
jo
jl
ja
movsb
sub
fs
jmp
push
pushf
or
mov
push
cwtl
xchg
cmp
mov
nop
std
movsl
out
push
ds
xor
pop
mov
lahf
subps
ss
fs
repz
pop
push
roll
dec
pusha
cltd
lods
frstor
push
mov
inc
outsl
enter
outsb
loopne
in
into
and
dec
cmpsl
mov
loop
lods
mov
pop
in
cli
lea
popl
mov
xchg
pop
cmp
mov
dec
lea
mov
jo
stc
cmp
add
pushl
lea
jne
seto
mov
pushfw
sar
dec
sub
mov
call
sbb
mov
jb
mov
xchg
aad
xchg
sub
std
mov
gs
dec
push
js
push
push
xchg
cmpsl
mov
jae
and
mov
je
stos
mov
and
inc
insb
push
enter
jb
movsl
mov
jge
cmc
pop
mov
dec
jmp
adc
dec
inc
jb
sub
sub
sub
arpl
pop
je
sbb
xchg
mov
test
xchg
cli
jnp
dec
cmp
into
add
mov
in
add
pop
cli
repnz
adc
outsl
ret
mov
lcall
cmpsl
jns
ret
stc
out
jecxz
jmp
push
pop
aam
or
repz
pop
movsl
lds
aad
cmc
or
pop
sti
out
push
pop
jno
test
pop
enter
sub
sbb
lods
enter
jbe
fisubrl
fadds
sub
sbb
iret
mov
iret
scas
sbb
jecxz
adc
bound
ss
cmpsl
pushf
mov
ret
stc
dec
xor
pop
dec
push
add
pop
clc
xchg
jp
int
leave
pop
jl
lret
mov
rcr
push
int3
adc
cli
pop
push
lret
xchg
lahf
std
ficomps
inc
mov
push
xchg
cmp
movb
repnz
cwtl
adc
rcrl
aad
rep
imul
mov
and
cli
test
out
and
dec
cmp
or
ret
sbbl
pushf
lea
je
lea
pushf
lea
mov
mov
lahf
movb
mov
lahf
lahf
push
movsbl
lea
movb
movl
jmp
add
add
shl
push
cmp
cmp
mov
btr
sub
bswap
push
mov
adc
rcr
push
bsf
das
push
lea
bswap
sub
call
pushl
popl
push
pushl
ret
fistpl
mov
repnz
cmpb
inc
jb,pt
testl
shl
stos
lcall
shll
dec
jge
int3
dec
int3
xorb
xor
mov
cmp
out
insl
adc
nop
push
xchg
or
sub
movsb
mov
jae
hlt
cmp
mov
xor
adc
lahf
pop
mov
out
dec
fs
or
in
test
mov
jp
push
mov
sahf
xor
les
or
fwait
stc
in
in
xchg
lock
ret
xchg
pusha
cmp
xchg
out
lea
andl
repz
int
xchg
mov
cli
mov
pusha
adc
mul
sub
or
aaa
jne
imul
leave
jecxz
cmc
call
cltd
arpl
pop
pop
mov
push
cmpsl
stc
lret
cmp
loopne
jb
jge
mov
dec
xchg
rcr
rcrb
xor
push
xchg
ret
mov
add
in
aaa
fwait
stc
fisttpl
sbb
loope
adc
push
push
jmp
add
add
pusha
sbb
adc
sbb
sbb
adc
add
add
add
aas
shlb
add
add
cmp
xor
jmp
aas
cmpsb
aad
pushf
adc
xor
jbe
fadd
pop
xchg
pop
cmp
adc
test
shl
or
cmp
and
add
shll
jmp
and
mov
lods
xchg
sbb
out
pop
adc
inc
out
cmc
sbb
xchg
dec
loopne
out
mov
ficompl
and
xchg
mov
mov
pop
jmp
call
push
xchg
push
lods
sbb
sbb
rcrl
mov
int3
xor
push
and
pop
and
lahf
pop
pop
pop
lea
jmp
bound
movsb
pushf
incb
jb
ds
push
and
sub
lock
push
or
je
sub
inc
cld
add
int
jg
in
rcr
mov
clc
cmpsl
xor
cmp
dec
push
xorl
or
jns
jmp
lock
sbb
jno
aad
push
mov
repnz
mov
int3
push
in
sbb
push
ficoml
push
and
mov
mov
sub
loop
and
lret
mov
loopne
dec
rcrb
add
insl
imul
insl
push
jb
jo
jb
jns
cmc
pushf
or
pusha
jmp
pop
xor
sbb
sahf
out
pop
push
and
jl
push
sarl
stc
movsb
pop
mov
arpl
enter
test
test
cmp
mov
rcrl
js
lcall
or
roll
sbb
out
mov
mov
pop
loope
cmpsl
pop
ret
dec
js
jge
pop
lods
and
mov
or
mov
xchg
arpl
pushf
lods
mull
push
add
dec
sub
adc
out
mov
cltd
mov
and
gs
mov
sbb
iret
pop
and
cmpsb
mov
push
fimull
ss
pop
cli
stc
push
cmpb
jo
ja
sub
xchg
jns
jno,pt
add
xor
sbb
lods
pop
cmp
dec
into
fisubl
sub
inc
add
in
fldl
sahf
dec
mov
cmp
fimuls
data16
mov
fdivs
nop
shll
mov
sub
xor
mov
mov
cmp
fcoml
add
insb
call
hlt
push
or
bound
cmp
repz
xor
imul
adc
cmp
shll
movups
dec
int
mov
lock
pop
inc
push
fwait
sub
ja
pushf
movl
jmp
lods
in
sub
loopne
inc
test
hlt
in
lret
sub
scas
test
sub
imul
ret
lods
jp
push
sub
fs
mul
sbb
outsb
icebp
push
cmp
xorl
out
xchg
cmp
stos
fwait
jecxz
push
fadds
jp
xchg
rol
inc
fistpl
in
hlt
sar
daa
int3
test
rcl
das
sbb
ds
sbb
and
mov
push
fs
fnstsw
fisttps
lock
xor
ljmp
test
jne
clc
sbb
sub
dec
pop
fimuls
in
dec
mov
inc
mov
jmp
outsb
cltd
lds
add
mov
sarl
mov
mov
xor
or
dec
das
sbb
popf
pop
dec
mov
andl
roll
and
inc
jbe
mov
sbb
adcb
fidivs
mov
fucomp
inc
mov
std
fldt
xor
incl
add
movsb
dec
int
clc
mov
adc
mov
ja
mov
xchg
inc
cmp
icebp
rorl
cmp
and
imul
test
or
out
pop
and
mov
sub
lcall
mov
jp
mov
je
inc
mov
jge
xlat
and
push
es
mov
sub
jno
sbb
imul
xchg
sbb
add
jmp
inc
and
xchg
mov
rorl
pop
sbb
dec
sub
test
lahf
sub
push
cltd
hlt
push
lds
mov
decb
sbb
inc
jns
and
ljmp
fucomp
dec
into
lcall
data16
outsb
popa
mov
aad
push
add
cmc
icebp
push
imul
jae
rorl
adc
fisttpll
or
es
pop
or
xchg
mov
pop
dec
in
aam
inc
mov
xchg
out
inc
ror
or
into
and
out
push
lcall
push
mov
test
pushf
call
jle
andl
push
test
push
mov
xchg
mov
cld
lds
adc
stos
popf
outsl
push
outsb
insl
jnp
cs
iret
ljmp
cmpsb
mov
pop
repz
sti
xchg
mov
pop
pop
mov
xchg
movsl
push
xchg
mov
into
nop
push
add
rorl
fld
lcall
ljmp
into
push
cmp
push
mov
or
jecxz
dec
mov
push
pushf
mov
bt
cmp
movb
lea
ja
mov
jmp
es
out
sahf
pushf
inc
xchg
jne
and
sbb
mov
xchg
test
test
pop
push
sbb
aas
fwait
add
mov
clc
xchg
call
lods
cld
mov
outsl
inc
inc
mov
jp
lods
sbb
repz
inc
sub
jae
cmp
dec
xor
cmpsb
outsb
lock
mov
shrl
mov
add
pop
fiaddl
jno
insb
rorl
int3
xchg
popa
popa
adcb
pop
push
push
jno
iret
pop
inc
mov
shrl
ja
cli
cmp
add
sub
daa
adc
test
cmp
sbb
loopne
leave
cmp
mov
cltd
jl
gs
pop
out
dec
push
cmp
into
shlb
mov
lea
mov
cmp
iretw
or
push
into
sub
xchg
jmp
mov
sbbl
cmc
dec
cwtl
sbb
pop
es
out
mov
pop
mov
movsl
mov
adc
je
bound
xor
cli
lea
sbb
cli
cs
cwtl
fs
mov
jno
gs
push
mov
jne
xor
in
lret
mov
jne
push
das
movsb
add
ja
jg
or
push
mov
pop
sub
push
add
lock
frstor
xchg
popf
pushf
adc
test
test
outsb
les
push
mov
xchg
dec
push
int
jp
or
stos
mov
push
and
xor
mov
adc
sti
jb
mov
add
mov
add
shl
movsb
fidivrl
inc
popf
pushf
icebp
ss
into
movsb
jo
mov
imul
addr16
cli
fldl
push
das
cwtl
mov
adc
push
mov
mov
mov
add
push
add
mov
mov
mov
add
push
lods
mov
les
push
ficompl
popf
sbb
outsb
pop
fldenv
lret
inc
es
stos
pushf
pop
add
push
sbb
cmp
in
push
fcmovb
mov
pushf
jg
cmp
lock
lea
xor
dec
cmp
std
std
cmp
stos
ja
push
pop
jnp
mov
fldlg2
aas
jl
pusha
loop
aas
outsl
dec
outsl
int
out
dec
jl
add
inc
mov
adc
dec
push
sub
xlat
push
les
cmpb
xchg
and
or
and
in
call
xor
sub
mov
push
lea
pusha
pushf
mov
pushl
mov
mov
pushl
ret
imull
pushf
pushf
movsb
shlb
adc
jmp
cmp
mov
sbb
rep
xlat
mov
lds
dec
ss
sub
mov
cmp
test
jp
lods
xchg
pushf
push
mov
xchg
add
cmp
cmp
xor
push
aad
dec
cli
or
inc
pop
jecxz
bound
mov
fcmove
or
or
lods
add
mov
dec
lods
mov
add
enter
shlb
jnp
cmp
pushf
stos
scas
xchg
fstpt
and
pop
ljmp
cwtl
scas
push
inc
sub
or
and
ret
int3
mov
shr
aaa
js
cmp
out
pop
test
mov
dec
or
adc
dec
insb
divb
dec
xchg
jmp
mov
sti
call
jmp
push
inc
and
xlat
mov
fnclex
les
jle
add
or
xor
lcall
int
insb
mov
mov
dec
xor
mov
icebp
lcall
in
lcall
jne
outsl
inc
sub
fcmove
sub
xorl
idivb
adc
int3
lret
fsubs
jge
insb
sbb
rcrl
mov
pop
outsb
popa
orl
push
push
and
mov
enter
mov
fidivs
push
jg
pop
jo
stc
push
ljmp
dec
and
jle
mov
shrb
dec
lods
or
cmpsb
nopl
jbe
int
outsl
repnz
pushl
popl
stc
cmp
push
pushf
push
lea
ja
neg
call
call
mov
cmc
pushl
popl
bt
call
loopne
sub
flds
jne
add
lret
lds
or
add
testl
les
jge
ss
rol
test
lret
pushf
pop
movsb
insl
repz
pushw
cmp
jmp
test
and
mov
xchg
es
dec
mov
pop
sbb
jmp
sarl
inc
bound
mov
mov
lock
aam
arpl
or
loopne
jbe
lcall
or
popl
shlb
mov
mov
sti
sbb
mov
cmp
or
in
pop
daa
inc
in
xchg
lock
stc
jnp
arpl
sub
push
movsl
movsb
jmp
xchg
sbb
pop
adc
jb
out
stc
inc
ss
inc
xor
add
cmp
lahf
pushf
lret
int
stos
add
xchg
lret
fnstcw
stos
jb
cmpsb
xchg
push
cmp
cltd
pushf
mov
inc
mov
test
pop
lret
or
mov
mov
cmc
cmp
ret
pop
or
and
enter
add
push
jmp
and
mov
inc
and
dec
fcomp
and
subl
incl
or
pop
fbld
out
int3
daa
mov
and
cld
lds
out
pop
lret
and
push
pop
iret
dec
jb
test
push
dec
test
pushf
in
pop
or
and
lock
in
hlt
mov
jnp
xlat
push
jmp
daa
nop
ret
imul
jecxz
lahf
mov
gs
xchg
or
cmp
cmp
sub
ret
les
mov
mov
divl
in
addb
mov
repnz
mov
cmp
pop
pushf
jle
jb
pop
mov
bound
xchg
jnp
jecxz
aas
jmp
dec
iret
addr16
pop
icebp
jge
xchg
pushf
mov
in
test
pop
push
test
addb
xchg
and
bound
pop
mov
cmp
lods
cmp
jno
test
push
cmp
add
aaa
pop
xlat
jnp
pop
icebp
pop
sub
js
xchg
lret
xchg
xchg
lahf
scas
aas
out
push
mov
outsb
xchg
mov
lods
jae
outsb
add
cmp
mov
fnstsw
jl
les
xlat
mov
dec
mov
out
mov
aas
popl
call
sbb
pushf
aam
jp
cmp
add
mov
clc
xchg
fnsave
add
dec
or
out
mov
ja
hlt
fs
test
xlat
outsb
insl
insl
idivb
push
out
mov
pop
cmp
loope
movsb
outsb
xchg
lods
outsb
out
push
mov
fwait
fs
test
out
dec
jb
lret
nop
call
push
inc
sbb
icebp
push
xor
push
sahf
mov
xchg
push
stos
and
outsl
push
movsl
mov
xlat
mov
xchg
pushf
bound
xor
frstor
in
not
mov
pop
nop
and
xor
aam
out
adcb
outsl
fstpt
lea
jno
les
fsubrl
fimuls
mov
push
sbb
cmp
xchg
xchg
cmc
out
inc
mov
sar
pop
jnp
maskmovq
testl
jmp
aas
inc
xchg
lock
and
fstps
lret
xor
pusha
cmp
inc
mov
clc
jecxz
out
xlat
mov
cmpsb
sbb
mov
scas
pop
lds
insl
fbld
xchg
in
mov
iret
roll
mov
jnp
mov
pop
dec
and
xchg
pushf
pushf
pushf
mov
dec
call
movl
jmp
push
push
xchg
pushf
in
jb
xor
adc
jb
lea
mov
test
inc
inc
adc
cmp
and
aam
dec
cli
lea
mov
lods
jne
cwtl
out
stos
hlt
arpl
push
cltd
je
repnz
sub
mov
outsl
lock
sub
and
movsl
sub
aam
or
aaa
cli
int3
sahf
jle
dec
fidivl
cmp
jle
ret
dec
xchg
pushf
mov
mov
aas
mov
lds
push
in
sub
adc
mov
lcall
ss
xchg
adc
mov
sbb
push
cmp
mov
xchg
xor
push
jmp
pusha
jp
cmpsl
jno
and
ds
cld
int3
jg
dec
aas
sub
adc
cs
jbe
shl
out
arpl
xlat
stos
push
sub
sbb
push
pop
xchg
cld
mov
ss
in
mov
cmpl
addb
call
rorb
into
call
pushl
popl
movb
pusha
pushl
ret
call
pop
dec
jb
pushf
ret
inc
lahf
cld
push
sbb
push
fwait
pushf
and
jg
and
add
sbb
xchg
gs
fldcw
out
cmpsl
addl
and
jmp
rorb
fldenv
jl
push
cmp
insl
lahf
xchg
jo
and
outsl
ljmp
jb
adc
jno
add
mov
jnp
icebp
std
fucomp
stos
stos
cld
dec
mov
inc
mov
sub
out
insb
lahf
xor
xchg
pushf
aad
daa
xchg
fnstcw
and
call
sti
pop
or
adc
mov
or
inc
dec
dec
xchg
imul
scas
or
push
dec
sub
movsb
and
fldcw
xor
inc
pop
cmp
out
scas
cli
jb
stos
stos
pop
pop
into
or
sub
xchg
jle
stos
and
out
cli
mov
out
out
popa
cld
jp
dec
popa
and
sbb
addl
mov
fwait
daa
sbb
int
rorl
cld
sarb
mov
out
mov
and
jle
pushf
mov
ret
sarb
mov
or
add
pop
movsl
push
jge
lcall
dec
cmp
out
or
out
enter
shll
stc
adc
in
xorl
jae
mov
shlb
cltd
adc
jno
lods
cmc
xor
in
push
lock
sub
rol
lahf
sbb
push
jmp
arpl
jmp
dec
adc
insl
mov
mov
clc
cmc
or
mov
sar
call
ret
or
xchg
pushf
dec
push
jae
dec
pop
adc
lret
cmp
sbb
lea
insl
mov
cmp
push
lock
adc
push
push
into
fdivrl
inc
mov
in
pop
fs
popa
lods
mov
sbb
push
mov
or
int3
add
mov
inc
mov
icebp
adc
dec
sub
arpl
xor
movb
mov
enter
testl
jb
mov
push
mov
icebp
jg
pop
lods
aaa
movsb
mov
in
sub
int3
sub
movsl
mov
jp
push
jo
cmc
jmp
xor
sbb
mov
sub
loope
in
sub
jle
jle
fistpll
push
lods
mov
test
pop
push
or
cmp
xor
daa
sub
or
ja
xchg
rorl
mov
addr16
movsl
pop
loopne
adc
mov
pusha
push
dec
sub
xchg
addr16
push
stc
popa
push
enter
xor
mov
xchg
pusha
jns
jmp
pushf
push
xor
test
add
test
add
jae
outsb
add
data16
xchg
xchg
sarl
mov
das
mov
jle
and
testb
orl
mov
insb
and
push
xor
or
jp
fildl
xchg
fcoms
outsb
out
push
adc
and
xchg
fidivrl
testb
inc
lods
popf
stos
das
xlat
leave
shll
mov
xlat
dec
xchg
dec
sub
push
ret
stos
or
idivb
xchg
pushf
push
pop
cld
je
mov
pop
stos
jae
dec
jno
jmp
je
or
cmpsb
sub
loopne
xchg
sbb
loope
movsb
fsubrs
jmp
xchg
jb
fnsave
mov
imul
lret
repnz
das
mov
arpl
stc
add
shll
mov
push
and
mov
fiadds
sarl
loopne
test
pop
rorb
icebp
pop
and
popa
fnstsw
sbb
xchg
pushf
mov
stos
sti
jecxz
movsl
test
mov
ljmp
fnstenv
push
push
jge
cmp
sub
shrl
iret
popa
mov
sub
movsb
mov
adc
push
aas
ds
fs
cmp
out
jbe
adc
push
les
push
cmp
cmc
aaa
aaa
pop
push
enter
push
mov
cs
mov
pop
lds
subb
mov
add
fistl
pushf
xor
mov
push
inc
mov
nop
xor
and
mov
sbb
js
dec
jmp
rorl
test
movsl
je
ss
cmp
jg
mov
push
outsb
int
lods
jp
jg
cmc
js
movsb
stc
mov
xor
sub
mov
add
ret
movsb
dec
push
xlat
jnp
mov
mov
andps
or
insb
and
and
or
sarb
or
cmp
loop
xor
lret
mov
in
pop
mov
pushl
pushf
lea
ja
call
mov
sub
cmp
and
lahf
and
sub
aam
in
test
insb
scas
inc
and
dec
and
push
xlat
mov
test
movsb
and
mov
push
inc
into
stc
or
cltd
lods
xlat
mov
mov
mov
mov
sub
cld
xchg
and
and
sbb
xchg
fisubl
sub
int
and
xchg
and
popf
mov
dec
and
adc
push
sub
cli
test
and
cmp
adc
loope
dec
pop
out
das
ret
inc
xchg
imul
aam
popf
fcoml
aam
xor
dec
and
cwtl
subl
add
faddl
movsb
jl
pop
rorb
push
and
imul
dec
add
aam
and
adc
fwait
xchg
aaa
or
jns
repz
and
xchg
ss
lods
pop
sti
inc
or
jno
dec
inc
mov
and
adc
gs
mov
and
xchg
jmp
subb
out
popf
pushf
mov
inc
mov
test
insb
rorl
add
and
jo
loopne
or
movsl
adc
sbb
mov
data16
ljmp
fldt
aas
testb
pop
imul
in
xchg
mov
and
mov
sub
and
dec
pop
xor
insb
fsts
cmp
sbb
iret
mov
mov
and
add
and
int
ficoms
or
lret
cmp
and
cmp
sbb
and
pmaxsw
push
pop
hlt
mov
lcall
js
xor
cltd
imul
aaa
inc
lock
outsb
mov
and
push
add
pop
add
fisubs
adc
lret
ds
push
pop
add
and
and
and
and
ja
xor
and
jb
lea
pushw
or
mov
and
ficoml
xor
mov
jmp
jp
into
pop
and
jmp
inc
push
inc
and
addr16
and
jne
leave
xchg
mov
dec
lahf
hlt
push
shr
jb
dec
add
and
mov
sub
test
mov
adc
insb
sub
mov
jae
iret
and
out
fstps
xchg
scas
sbb
and
push
fisttpl
mov
and
cmp
pop
mov
and
imul
fisttpll
shll
and
push
lods
in
and
or
sub
sub
fs
dec
inc
and
stc
nop
pushf
and
movsl
out
push
jmp
scas
push
fisttpll
dec
test
jecxz
imul
in
and
les
daa
or
adc
addl
xchg
pop
jmp
and
add
cmp
stc
pop
fisubl
dec
add
xchg
popa
ss
in
adc
cltd
out
stc
and
add
into
incl
dec
jge
and
xor
and
jmp
and
rolb
in
pop
insb
inc
cmp
and
daa
lods
cmc
call
mov
outsb
lcall
mov
pusha
mov
and
loop
clc
cld
fwait
adc
shrb
lods
add
dec
pop
insl
popa
push
imul
mov
imul
push
ss
and
pop
push
and
xor
cltd
jb
sub
in
mov
jge
mov
inc
and
test
mov
mov
ret
or
aam
mov
lds
xchg
sub
mov
mov
xlat
movsb
pop
scas
sbb
in
movsl
testl
pop
xor
xorl
rorl
sahf
dec
mov
movsl
stc
rclb
jnp
fs
and
aas
sbb
add
xor
pop
pop
sub
mov
aas
movsb
push
mov
mov
jg
cmp
fsubl
cld
push
and
push
or
sbb
adc
shll
stos
in
jmp
sub
popf
insl
call
pop
inc
clc
ljmp
cmpl
adc
lcall
and
jnp
in
loop
pushf
adc
aam
dec
and
jae
pop
daa
stos
dec
pop
and
sbb
adc
shrb
and
and
lds
aam
aaa
inc
mov
push
call
jae
in
cmp
cmp
jg
cmp
mov
lea
sbb
int
test
mov
mov
in
dec
cmp
shll
cltd
aaa
pop
fisubrl
pop
pusha
mov
mov
or
call
and
popf
mov
and
lret
xchg
rorl
add
pop
gs
cmpsb
or
sub
mov
dec
jno
xor
and
fbstp
xchg
rcl
xchg
add
cld
js
and
xchg
test
out
sub
dec
xchg
fs
jle
loopne
xchg
fmuls
mov
push
inc
test
xchg
pop
push
scas
adc
repz
dec
and
jno
repnz
push
dec
dec
inc
push
test
loope
inc
test
jecxz
in
rcl
gs
and
lods
xor
lret
es
inc
repnz
pushf
cltd
mov
shrl
add
ss
cmp
loope
xchg
bound
loop
inc
or
pop
scas
test
push
and
and
je
jnp
outsb
movsb
popf
mov
xchg
jl
and
dec
and
pop
mov
mov
rorl
int
movsb
mov
and
iret
adcb
sarb
push
mov
loope
out
cmp
int3
and
and
fnstcw
cmpsl
insl
fs
sub
mov
adc
mov
and
scas
mov
rclb
lret
mov
incb
fnsave
and
jns
lea
test
scas
and
fstpt
jb
mov
and
or
scas
pop
push
lahf
mov
cld
outsl
js
mov
and
test
pusha
and
pop
pop
test
or
mov
fcmovu
jne
push
xor
roll
incl
inc
cmc
push
mov
or
and
or
shlb
in
roll
or
xchg
push
add
mov
aas
pop
and
and
cld
pop
jmp
mov
jno
stos
cmpsb
jno
movsb
cmpsl
negb
scas
push
cmp
dec
dec
and
push
inc
data16
xchg
sub
shll
scas
insl
sbbl
std
xchg
jecxz
mov
ret
inc
mov
mov
mov
inc
leave
addr16
shll
aad
inc
mov
inc
jmp
xor
sub
imul
addr16
inc
dec
imul
pop
test
inc
outsb
imul
jle
xorb
mov
imul
xor
mov
mov
mov
xor
lret
imul
fisubrs
out
inc
out
imul
addr16
test
inc
push
imul
arpl
cmpsl
fildl
imul
addr16
test
inc
mov
xchg
popa
iret
push
inc
test
inc
push
addr16
xor
inc
ret
imul
lods
test
and
addl
inc
mov
test
inc
xchg
imul
addr16
test
inc
pop
xlat
daa
shrl
cmp
addr16
test
inc
xchg
mov
inc
dec
addr16
test
xor
inc
jns
mov
subb
xor
addr16
divl
xor
inc
mov
add
inc
mov
std
test
inc
push
imul
pop
pop
xor
daa
movsl
imul
add
daa
into
mov
ficoml
xchg
jmp
pop
test
repnz
sub
outsb
inc
push
jle
int
inc
fiaddl
fdivl
dec
pop
pop
push
fisubs
ljmp
mov
hlt
fiadds
scas
out
sbb
out
inc
das
sarb
push
fcmovb
inc
cs
cmpsb
sarb
and
fdivrp
lret
shrl
jbe
add
mov
push
add
push
push
nop
cmp
pusha
and
mov
sub
adc
inc
mov
out
popf
sub
jno
ret
loop
sbb
out
sbb
test
mov
xchg
enter
mov
jp
and
testb
or
jle
cmp
cmp
sti
pop
mov
movsb
sbb
in
mov
jnp
pop
mov
int3
push
sbb
ss
cmpb
ret
test
notb
xor
into
in
fisubrs
fldcw
add
push
cmp
cs
sub
movb
shl
xchg
cmp
mov
repz
jb
vucomisd
scas
cld
clc
sub
js
into
shr
and
jb
mov
es
rcrb
dec
testb
imul
push
fwait
jle
stc
rcll
lret
out
out
mov
jecxz
mov
test
lret
lods
mov
cli
fsub
mov
es
lret
dec
fwait
jmp
imul
xchg
fnstcw
mov
inc
push
lods
insb
out
push
cmpsb
mov
leave
loop
testb
cmp
jp
faddp
mov
stos
jne
scas
insb
adc
into
popa
jae
cmp
mov
je
ja
and
fdivp
dec
in
es
jne
jb
repz
pop
lahf
inc
mov
into
cmpl
cli
cmc
xchg
sub
mov
fmul
loopne
lret
test
cs
xor
dec
mov
cs
mov
inc
sbbl
lea
push
cld
and
lret
test
pop
push
adc
pop
jns,pn
fcmovbe
dec
lea
fwait
ja
mov
repnz
xchg
xor
daa
ss
int
lds
jge
cmpsl
imul
jg
jne
mov
insb
jne
roll
insb
push
mov
xor
sub
out
inc
jae
mov
xor
xor
out
mov
aad
and
cmp
lds
ds
dec
clc
hlt
movsl
adc
rcl
rcll
xor
jno
and
sub
jmp
jno
push
inc
scas
gs
js
arpl
xor
fs
stos
sub
jno
arpl
jne
rcl
mov
inc
pop
popa
call
lods
and
and
arpl
mov
pop
arpl
adc
pop
xor
movsb
movsl
arpl
jb
les
negb
sub
imul
in
sti
cltd
movsl
bound
in
loope
add
scas
add
outsl
cmc
lahf
pop
pushf
pop
sbb
enter
scas
std
xchg
or
pop
out
or
fs
mov
and
mov
loop
and
pop
inc
push
inc
mov
gs
lret
shrb
or
movsb
rcl
movsl
add
in
mov
loope
incl
add
pop
movsb
in
mov
push
in
xchg
test
mov
mov
mov
add
dec
std
data16
inc
movsb
mov
es
jl
cmp
add
std
in
stc
add
mov
loope
sub
mov
cwtl
sub
and
xor
xchg
ljmp
push
inc
push
or
inc
sub
in
aad
xchg
icebp
cs
pop
stc
pop
mov
and
xor
fdecstp
cmp
sbb
adc
faddl
cs
add
pop
fldl2t
pop
mov
decl
cmp
std
jmp
rolb
call
xchg
mov
loope
scas
cmpsb
in
mov
add
icebp
mov
push
cmpl
mov
popf
sbb
and
lret
lds
mov
cmp
cs
aas
ja
xor
ret
and
loope
adc
add
inc
cmc
xor
pop
je
mov
xor
xor
repnz
je
fs
adc
in
int3
adc
and
movsb
mov
movsb
and
xchg
sarb
and
sub
and
or
movsb
xor
inc
and
cmp
add
pop
push
cmp
fwait
bound
arpl
bound
mov
ret
sub
test
push
mov
mov
scas
inc
mov
in
and
xchg
cmp
jecxz
mov
and
movsb
sub
pop
jno
fmuls
rcrb
and
ss
jno
or
call
jp
hlt
rcl
aaa
mov
or
aaa
bound
in
fld
fs
lds
or
add
push
add
push
and
movsb
adc
add
in
and
mov
repnz
add
push
scas
in
clc
ss
pop
dec
jno
dec
xchg
and
cmpsl
jno
test
repz
push
inc
jp
or
adc
jl
or
jg
jecxz
loop
jb
out
add
sub
stos
mov
push
pop
cwtl
mov
divb
jno
mov
aas
add
fnstsw
repz
fmull
int
scas
fs
add
mov
sub
repnz
ficompl
fld1
and
add
xlat
test
or
aas
cs
out
stos
aas
js
jge
mov
mov
dec
push
outsb
bound
sub
dec
jno
pushf
jno
inc
lods
popa
orl
out
outsb
and
inc
enter
mov
inc
and
in
movsl
in
inc
arpl
loop
in
and
movsb
xchg
push
inc
loope
in
add
insl
pop
pop
cmc
sbb
int
ss
icebp
lds
cltd
std
xchg
shl
mov
sar
cmpsb
loop
mulb
outsb
repnz
jb
inc
fcmovu
dec
pop
or
adc
jp
mulb
popa
push
pop
and
dec
adc
or
xor
inc
popa
inc
jbe
and
sbb
les
inc
adc
adc
inc
test
stc
jno
test
push
sbb
inc
jecxz
test
sahf
lcall
test
loope
jmp
mov
out
clc
dec
xchg
adc
fbld
dec
pop
mov
fs
cmpsl
je
pusha
test
inc
cmp
pop
jle
jo
stos
pop
adc
jl
and
loope
dec
in
insb
cmc
pop
jo
add
lds
cmp
int
and
push
inc
lds
pop
inc
popa
sub
mov
jno
xor
jg
dec
in
ss
loope
test
addl
push
and
adc
leave
in
and
xchg
cmpl
pop
cmp
add
pop
inc
sub
push
cmp
and
and
xor
dec
jns
pop
and
pop
cltd
repnz
add
arpl
popf
xchg
sub
add
xor
dec
rcrb
push
push
loope
mov
pop
push
adc
jbe
and
mov
popa
loope
shll
test
ret
test
push
lahf
movsl
inc
adc
stc
les
xor
lcall
add
mov
test
aam
inc
jmp
mov
push
fisubl
sbb
adc
icebp
mov
ret
dec
and
dec
cmpl
sub
jl
jno
push
dec
inc
jb
xchg
daa
shll
cmp
inc
or
push
mov
adc
cmp
cmp
adc
lea
ljmp
popa
movsl
in
insb
dec
adc
jae
xchg
ret
lock
jno
dec
dec
and
mov
subl
sahf
jecxz
xchg
xor
outsb
retw
fwait
mov
arpl
shlb
pop
jmp
insb
lea
jle
test
sbb
mov
aas
cltd
push
mov
or
ds
imul
lods
cmp
mov
pop
push
xor
icebp
inc
adcl
and
jno
jbe
int3
jp
out
xor
mov
dec
push
pop
jno
mov
lods
xorl
mov
ror
mov
xor
icebp
aaa
pop
mov
stos
mov
mov
and
jle
mov
shlb
pop
sub
std
sub
popf
bound
sahf
imul
add
lea
jp
add
rol
mov
out
push
fwait
loope
icebp
scas
ds
sub
xor
and
in
in
cs
mov
xor
mov
and
adc
sub
loop
test
dec
ljmp
sub
or
cmp
arpl
fidivrl
mov
xor
or
mov
cwtl
mov
add
jo
xlat
dec
and
xchg
jle
pop
xor
outsb
call
jge
test
rclb
dec
pop
sub
push
cmpsb
repz
es
sub
mov
ja
and
xor
jge
in
enter
sub
mov
lock
mov
and
inc
add
lret
or
fisubl
sub
imul
stc
push
pop
test
cltd
adc
mov
mov
adc
aaa
je
popf
icebp
lcall
icebp
add
in
sbb
jb
cmp
xor
or
stc
popa
mov
xchg
mov
xor
pop
ret
es
enter
adc
xor
test
mov
std
push
xchg
and
mov
cltd
inc
xchg
stc
fwait
gs
test
xor
and
xor
mov
and
and
ljmp
and
push
and
and
repz
sti
cmp
add
pushf
leave
and
sub
fsubs
cmp
inc
arpl
xchg
inc
mov
shll
mov
imul
leave
xor
pushf
and
xchg
and
sub
flds
frstor
icebp
and
in
inc
push
gs
add
es
jmp
inc
addb
movsb
jnp
adc
mov
out
mov
mov
rcll
aam
lods
xor
pop
in
pop
inc
fs
movsl
and
add
cmp
pop
lods
outsb
rolb
xchg
pusha
out
cmp
rcrb
in
jmp
stc
subl
dec
pop
sbb
lret
mov
fiaddl
bound
or
subl
mulb
ds
jno,pn
stos
cmpsl
out
pusha
fdivrl
aad
std
pop
cmp
and
shlb
jmp
scas
loop
fstl
cmpsb
out
sub
fs
inc
xchg
dec
aad
les
icebp
xchg
sbb
out
adc
adc
es
pop
jae
add
jns
jecxz
mov
leave
leave
jg
push
mov
jne
push
cmp
jb
and
xchg
and
je
and
insb
divl
movswl
dec
out
rcll
sti
cltd
inc
push
dec
popa
xor
or
fmull
out
cmc
adc
bound
mov
incl
gs
inc
jno
adc
and
push
adc
xchg
cmp
jl
les
sahf
andb
pop
lret
sub
push
decb
sar
lcall
add
and
or
shl
add
scas
rorl
out
insb
sub
lock
pushf
mov
xchg
sub
sbb
fisubrl
jmp
shl
and
dec
pop
xlat
mov
jl
push
hlt
test
mov
jmp
inc
cmp
sub
jo
imul
out
cwtl
sub
notl
jl
push
and
add
mov
xorb
mov
push
xor
cmpsb
movsl
out
mov
cmpsb
mov
mov
cmp
pop
enter
or
mov
mov
divl
dec
fwait
xor
sti
fistps
mov
shl
movsl
pop
movsl
bound
adc
and
call
add
pop
or
pop
push
pop
cmp
sbb
jmp
inc
movsl
sahf
in
and
and
call
mov
fwait
shrl
in
and
add
mov
mov
sbb
inc
jl
arpl
mov
sbb
mov
add
repnz
xor
lods
out
sub
dec
and
dec
fs
je
and
pop
loop
xlat
pusha
icebp
shll
xor
lret
mov
je
or
insb
xor
pusha
aam
scas
mov
mov
sub
cmpsl
jecxz
add
sub
pop
mov
mov
jns
sbb
inc
push
inc
sub
xor
out
rclb
mov
dec
pusha
hlt
xlat
aam
je
lret
rcll
inc
add
mov
nop
lods
mov
mov
sub
add
jns
shll
rcrl
sar
sarb
xchg
pop
mov
jmp
loope
mov
repnz
arpl
bound
xchg
cmpsb
or
adc
cmp
gs
xchg
mov
mov
cmp
mov
push
scas
or
lods
fiaddl
mov
mov
cmc
jno
lret
jge
imul
aad
and
inc
mov
add
mov
fs
lds
jg
xor
stc
rcl
mov
std
jno
adc
cmp
test
mov
push
lret
push
andl
sub
push
pop
test
adc
mov
mov
jmp
shlb
cmp
cmpsb
scas
ret
sbb
cmp
xor
mov
adc
mov
jae
imul
popa
or
mov
jae
mov
inc
jbe
sub
in
mov
icebp
lea
add
sub
std
nop
cs
aas
ss
loope
sbb
add
loopne
loop
sbb
nop
cmpsl
scas
add
idivb
xchg
mov
mov
and
push
imul
leave
jge
sbb
idivb
cmp
dec
pop
inc
addr16
lahf
inc
imul
pop
push
rcll
adc
cmp
mov
hlt
out
fsubrl
cmp
mov
cld
dec
jnp
cwtl
pop
ficoms
jl
push
and
jle
dec
mov
add
mov
mov
bswap
add
fimull
jl
sub
pop
and
sub
mov
pop
addl
push
xor
cmp
sub
inc
sbb
int
leave
imul
insl
test
sub
xor
pop
inc
adc
test
inc
ljmp
inc
cwtl
and
xor
mov
imul
sbb
stc
shrb
inc
mov
pop
popf
jg
and
xor
mov
mov
xchg
mov
xor
mov
xor
cmp
sub
inc
mov
andl
dec
inc
push
orl
jb
daa
cmp
popa
sub
test
inc
or
lret
mov
addr16
jb
cmp
xor
inc
adc
popa
lcall
mov
xor
xchg
std
and
daa
xor
fdivrl
neg
cmp
mov
adc
lds
mov
inc
mov
add
cmp
sub
and
or
push
cmpsl
and
in
imul
stos
jmp
xor
mov
mov
push
insb
jge
dec
jno
inc
cmc
bnd
sahf
fmuls
dec
sbb
dec
xor
imul
imul
pushf
ficomps
add
addr16
test
jae
orl
push
in
sbb
mov
add
loop
ds
inc
jl
fsubrs
cmp
sub
lea
scas
xchg
xor
and
fs
push
adc
inc
cmpl
add
add
jbe
je
gs
and
lret
sub
in
jne
ud0
lods
jne
inc
dec
sub
dec
or
cltd
and
xor
push
or
test
js
iret
cmp
shll
jmp
inc
xor
stos
leave
xor
repnz
mov
lods
loop
xor
xorl
aad
ss
imul
in
jne
cmp
aam
inc
cmpsl
adc
vmovaps
add
mov
mov
addl
movsb
fildll
fxam
ljmp
cmpsl
out
js
roll
hlt
and
sub
cmp
cmp
out
imulb
lahf
mov
mov
mov
inc
ret
sub
add
andl
jo
pop
stos
inc
mov
cmp
gs
xor
adc
and
dec
pop
aam
and
and
in
cmp
dec
jo
xchg
repz
xor
mov
add
mov
add
push
hlt
pop
jmp
test
add
pop
cmp
movsb
repz
divl
xor
xchg
popa
pop
rcll
loopw
adc
imul
cmpb
in
flds
outsb
cwtl
sub
gs
inc
fidivs
push
fstp
jns
fcoml
or
rep
fisubrs
inc
les
insb
psllq
jo
pusha
incl
jae
shll
push
inc
pop
add
jecxz
pusha
inc
lods
lods
sarl
or
insb
lret
ljmp
pushl
mov
jno
inc
hlt
inc
sub
mov
testl
adc
sub
bound
xor
mov
push
or
mov
int3
adc
xchg
add
and
jl
dec
xlat
inc
ret
popa
and
lods
sbb
cwtl
xor
cmp
or
push
aam
js
jb
inc
outsb
sub
pushf
dec
jae
and
cld
push
or
fdivl
xor
xor
sub
js
daa
dec
inc
adc
stos
incl
dec
jno
inc
fnstcw
dec
stos
jne
push
das
jecxz
or
push
leave
inc
insb
push
int
push
dec
push
pop
adc
push
push
popa
dec
jp
jmp
sti
adc
or
push
test
jns
stc
out
clc
pop
jge
push
jmp
cmp
bound
or
jbe
and
cli
lods
inc
jnp
dec
push
mul
aas
jns
negb
divl
in
loope
subl
jb
and
push
push
cmc
arpl
cld
je
ljmp
lods
in
enter
rcrb
xor
scas
add
sbb
push
cmp
mov
sbb
loope
bound
xor
dec
sub
icebp
in
jno
sbb
in
loopne
fs
movsl
cmc
xor
lahf
cmc
inc
std
cmp
add
cmc
push
popa
ds
add
in
inc
add
stc
rcl
movsb
xlat
add
jae
pusha
in
add
fildll
ret
mov
decb
stc
rolb
repz
shlb
fnstsw
jne
cmp
fldenv
pop
jl
loopne
adc
shll
add
xor
rcl
fistps
dec
gs
jle
dec
inc
cmc
and
cmp
out
cmp
rcrl
les
jne
sub
icebp
fldcw
push
rcrl
sub
dec
mov
xchg
je
cmc
fsubrs
test
dec
push
popf
std
fdivs
stos
inc
mov
hlt
fildll
cmp
mov
mov
fisubrs
pop
sub
jmp
push
fildl
jnp
enter
ja
ss
lods
ljmp
mov
shrb
push
jae
pop
mov
inc
icebp
lahf
mov
lret
pop
push
in
xor
mov
mov
adc
sub
pop
push
mov
mov
orl
mov
mov
scas
cmpsb
ja
jo
outsl
mov
add
test
mov
outsb
jge
lcall
inc
sub
lock
xor
jg,pt
sub
dec
hlt
sbbl
sub
mov
sub
mov
sahf
inc
xchg
jge
es
push
push
sub
in
hlt
sub
cmp
xor
mov
dec
jo
mov
mov
in
xchg
xor
adc
out
inc
xor
pop
nop
loop
in
loope
fimuls
and
int
fidivs
push
aas
pushf
movsl
fidivrs
fcmove
lret
push
jmp
cmc
aad
jmp
out
ss
and
pop
add
repz
movsb
inc
inc
mov
in
sub
sahf
fdivl
leave
xchg
cmp
lds
mov
sbb
test
arpl
sub
inc
in
daa
and
jmp
pusha
fsubl
popa
sbb
iret
jecxz
popa
stc
inc
push
inc
add
inc
aas
xchg
loop
push
inc
mov
stos
mov
ret
repnz
add
scas
xor
adc
fstps
lret
mov
addr16
out
bound
pop
bound
add
xchg
push
sub
adc
xor
gs
and
sbb
pop
mov
mov
loope
gs
sub
inc
push
dec
movsb
testl
inc
and
jne
mov
cmovne
jmp
das
xorl
mov
cmp
arpl
loope
jno
adc
cmp
fisubs
leave
loope
fs
loop
mov
incl
inc
sarl
ret
cmp
inc
mov
sbbl
stos
test
loope
loop
pop
dec
popa
xchg
popa
pop
add
adc
add
in
sub
rolb
xor
fucomp
and
test
out
xchg
sub
xor
lods
fsubl
movsb
sub
movsb
repnz
mov
insb
ret
adc
arpl
insb
cmpl
inc
lds
test
mov
popf
inc
mov
mov
xchg
inc
adc
rorl
dec
and
lahf
and
loopne
in
dec
and
addr16
loop
or
inc
popf
test
loope
jge
mov
mov
adc
sub
sbb
fildl
mov
stos
and
jne
adc
in
push
sub
mov
cmpsl
bound
jne
andl
add
add
int3
sbb
add
add
pop
or
rcrl
and
cmp
in
xchg
and
pop
addb
in
and
pop
shlb
subb
adcl
loopne
test
mov
add
and
fimull
cmpsl
push
in
fs
jcxz
movsb
xor
sub
xor
pop
popf
inc
movsb
dec
xor
adc
rolb
dec
popf
loope
and
scas
lods
arpl
addl
gs
add
movsl
push
sub
das
push
bound
mov
and
imul
cmpsl
jno
shll
arpl
ret
lcall
mov
and
andl
in
lahf
mov
add
test
adc
and
dec
and
cld
add
test
mov
sub
popf
dec
mov
mov
daa
mov
pop
xor
mov
adc
xchg
aas
sub
xchg
popf
inc
popa
xchg
pop
and
out
popa
test
sub
test
and
adc
or
cmp
xor
adc
xor
sbb
or
and
or
stc
add
cs
mov
jno
gs
mov
pop
xchg
jge
sbb
and
test
sbb
sub
hlt
mov
cmp
add
test
sub
xor
arpl
sbb
jecxz
outsb
popa
stos
movsb
lds
and
sbb
popa
movsb
dec
dec
dec
movsb
cmp
pop
loope
movsl
inc
inc
movsb
cmp
adc
loopne
jge
shrl
mov
sub
inc
arpl
or
out
xchg
mov
inc
inc
or
in
and
add
xor
fisubrs
and
fildll
xchg
add
dec
or
fstps
sahf
sub
call
jg
jne
addl
and
in
sbb
int
bound
pop
cmp
popa
stos
sbb
popa
popa
cmpsb
add
outsb
cmpsb
subl
xor
mov
pop
add
mov
je
rcr
add
cli
movsb
mov
arpl
sbb
xchg
movsb
jmp
and
ret
mov
aaa
cmp
push
mov
xchg
lods
loop
loop
jae
les
movsb
roll
pop
add
inc
mov
daa
lock
push
xor
push
jnp
sub
add
popl
clc
popa
jo
test
stc
inc
jge
xorb
inc
loope
inc
inc
dec
test
inc
gs
nop
dec
pushf
push
xchg
sub
fs
mov
dec
andb
das
adc
ret
adc
inc
shrb
insb
and
cwtl
push
shlb
add
test
xor
jecxz
int
fistps
sub
dec
cmp
rorl
sub
add
and
inc
lods
mov
adc
gs
adc
bound
and
loope
int
arpl
sub
sub
jecxz
mov
js
popa
in
fbld
cmpsl
mov
call
leave
inc
xor
jns
movsl
fs
pop
xor
loop
int
arpl
inc
add
xor
sbb
subl
push
and
jecxz
or
daa
nop
mov
movsb
push
inc
add
bound
mov
xor
inc
jmp
in
into
inc
and
sub
loop
ss
andl
inc
in
test
mov
dec
das
and
mov
mov
hlt
fsts
pop
mov
gs
call
xor
mov
in
adc
inc
jl
sti
add
inc
mov
gs
test
mov
and
fildll
hlt
jae
repz
add
xor
jecxz
inc
fiaddl
inc
arpl
dec
xor
call
bound
mov
rol
mov
and
and
loope
and
cmp
arpl
loope
mov
mov
mov
adc
loope
or
iret
fldl
inc
mov
mov
inc
xor
sub
adc
jne
sub
xor
jnp
mov
jecxz
addr16
addl
mov
popa
jecxz
loop
or
sub
sub
adcb
mov
xor
fs
int
pop
xchg
cmp
inc
testl
lret
rcrl
mov
sub
and
mov
mov
mov
mov
and
jp
add
repnz
in
fiadds
cli
jns
outsb
sub
movsl
in
add
mov
int
jb
call
les
inc
sub
mov
arpl
lds
sub
ret
add
loope
andl
ret
push
add
ret
aam
gs
and
inc
lahf
out
iret
xorl
popa
mov
andl
xorl
fs
adcl
sub
xor
lret
jecxz
lret
pop
lods
sti
loop
pop
push
mov
or
xchg
loop
push
loopew
popa
stos
push
shll
fs
or
inc
or
adc
es
mov
pusha
popa
movsb
sbb
and
push
int
test
inc
add
add
lods
popa
xchg
in
shll
push
dec
xor
cwtl
popa
bound
loop
pushf
call
scas
mov
add
xchg
movsb
and
ja
inc
sub
xor
repnz
xor
sub
xor
cs
sub
xor
ret
loope
loope
mov
call
lcall
jge
lcall
loope
int
popa
in
int
xorl
pop
mov
jno
inc
mov
cmpl
add
fwait
outsb
fcos
popa
out
add
and
out
inc
add
es
mull
in
repz
jge
dec
loope
and
cmp
ret
and
pop
bound
rolb
or
inc
popa
loop
dec
stos
call
fcoms
mov
mov
and
movsb
adc
es
xor
mov
ja
jb
mov
inc
and
imul
xchg
icebp
inc
cmp
jbe
arpl
sbb
movsb
mov
aaa
scas
and
add
push
adc
in
lds
and
fildl
cmpsb
repnz
mov
xchg
lods
inc
loope
out
jge
loope
xor
dec
subl
sub
jbe
mov
stos
add
and
push
xor
mov
inc
or
movsl
and
in
dec
fldenv
movsb
push
push
jge
lods
popa
jns
subb
test
aas
addr16
pop
mov
loop
jge
mov
mov
pop
xor
cs
xor
xor
jns
mov
inc
out
cmp
jns
aaa
mov
xchg
in
dec
mov
inc
push
mov
cmpsb
add
inc
jo
fisubs
fcoms
sbb
and
std
adc
jmp
sbbl
fwait
and
shll
rcrl
and
scas
lods
add
and
test
xor
push
add
shll
cmpl
shll
movsl
movsb
lds
mov
mov
mov
dec
inc
inc
mov
lds
cmp
roll
jecxz
outsb
sub
test
inc
mov
ds
test
xchg
mov
int
adc
lcall
mov
xor
int
and
cmpsl
inc
stc
leave
sbb
add
mov
mov
addl
lods
movsb
adc
stos
jecxz
and
jecxz
push
add
loope
add
xor
xor
xor
xor
inc
add
ret
test
ds
sbb
loop
sbb
xchg
lods
mov
sbb
imul
and
pop
movsb
sub
bound
xor
xor
add
jmp
adc
lods
and
xchg
subb
in
loope
movsb
lods
in
mov
inc
in
incl
xor
ds
xor
movsb
add
or
mov
loop
repnz
aaa
loop
mov
mov
inc
mov
and
movl
outsb
aam
popa
ljmp
mov
mov
outsl
dec
sti
icebp
pop
xchg
mov
inc
movsl
xor
loope
lds
mov
inc
jno
inc
insl
cmp
mov
pop
dec
jne
xchg
test
mov
jmp
mov
test
pop
std
mov
cltd
inc
mov
roll
or
icebp
aad
out
popf
imul
je
cmc
inc
adc
aaa
lcall
roll
and
pop
movsl
add
and
inc
or
imul
addr16
add
in
inc
and
and
jbe
and
cmp
popa
sub
ret
gs
out
stos
ret
pop
ss
loope
addl
pop
daa
aad
jge
jb
xchg
loope
andb
or
xor
mov
mov
std
stc
movsb
push
rcll
jb
popa
xchg
pop
imul
push
loop
jmp
xchg
mov
sbb
out
in
and
addr16
fcmovnb
hlt
and
gs
stos
fs
shll
and
mov
movsb
pop
cmp
test
xchg
iret
ljmp
and
in
push
adc
pop
pusha
add
and
and
loop
push
adc
das
cs
out
pop
pop
pop
push
mov
rcl
xchg
xchg
lods
mov
jo
fucom
popf
mov
and
rclb
outsb
and
ficomps
add
xor
hlt
dec
push
or
std
add
add
and
xor
repnz
dec
femms
and
ds
inc
les
jno
int
lea
add
addl
iret
into
mov
mov
sub
in
and
sbb
push
pop
adc
ljmp
es
and
pop
push
test
cltd
pushf
movsl
test
push
cwtl
stos
stos
imul
ficompl
and
xchg
xchg
dec
dec
or
cmp
cld
inc
dec
add
cmc
clc
dec
dec
or
and
cmp
cli
inc
inc
pop
push
and
ss
leave
int3
mov
mov
mov
jne
lret
lret
and
movb
jbe
dec
mov
and
sbb
and
xor
in
cli
mov
aam
push
adc
shl
inc
rcll
xor
inc
loop
xor
mov
add
rorl
in
aam
inc
adc
dec
push
mov
andl
mov
push
call
inc
xlat
sub
push
lds
leave
push
sub
inc
test
jno
les
daa
loop
xor
sub
or
xor
push
cmc
and
mov
xchg
repnz
enter
xor
jno
mov
out
add
and
pop
icebp
push
adc
aas
jae
jno
rclb
jae
pop
dec
shll
lds
xor
test
cmp
jno
mov
shll
jno
or
add
subl
jne
andl
in
push
sub
mov
aad
add
push
xor
ret
mov
inc
in
shr
and
sub
stos
leave
mov
in
mov
leave
adc
mov
adc
push
add
aas
sub
loope
inc
inc
hlt
jle
in
xor
mov
inc
fs
pop
in
jno
rcll
inc
mov
rcl
pop
mov
add
mov
repnz
inc
icebp
arpl
add
xor
mov
mov
add
inc
lds
mov
test
in
xor
add
int
repz
in
and
bound
mov
add
cmpl
outsb
shll
mov
add
loop
xchg
xor
xchg
xlat
cmp
xchg
les
popa
call
jno
cmpsl
arpl
mov
lds
lds
test
lds
mov
inc
or
jno
dec
shll
dec
adcl
shrl
xchg
mov
and
jae
mov
popa
add
adc
xor
xor
jno
jno
in
mov
xor
stos
push
jnp
ds
shll
push
xchg
icebp
aas
outsl
xchg
inc
pop
popa
lods
inc
out
jno
add
mov
mov
push
in
movsl
cld
sarl
dec
xor
xor
ror
lea
roll
movb
xchg
jp
jno
aas
jno
adc
fwait
fs
xchg
mov
jmp
jno
aas
popa
cmpb
xorl
adc
repnz
gs
pop
insb
popa
dec
cmp
cmp
cmp
push
gs
inc
cmp
push
gs
inc
cmp
push
gs
fldcw
sbb
fldcw
insb
jae
inc
push
arpl
fwait
xor
inc
jno
out
xor
ljmp
icebp
ljmp
mov
ljmp
mov
ljmp
cs
inc
push
mov
add
mov
jnp
xchg
jno
aas
popa
xor
inc
das
out
dec
movsl
cmp
sarl
popa
mov
inc
xchg
sub
dec
lods
dec
cmpsl
xchg
inc
jno
dec
lods
push
jno
push
adc
push
dec
jno
inc
xor
adc
popa
pop
lods
and
roll
loopne
jno
aas
addr16
clc
mov
dec
adc
xchg
xchg
sbb
or
xchg
xchg
adc
push
mov
add
mov
je
mov
es
push
jno
roll
sub
mov
fildl
movsl
lret
mov
push
and
lock
adc
out
jecxz
jne
mov
sub
pop
pop
xorl
orl
adc
push
rcr
shll
in
push
repnz
in
aas
imul
or
cmc
insl
rcrl
xchg
xor
data16
roll
push
push
daa
adc
mov
loope
int
mov
adcl
jno
shll
shll
xlat
jno
mov
add
inc
pop
push
hlt
inc
add
pop
and
lds
lods
push
fucomp
aas
imul
lods
loope
movsb
in
mov
inc
addb
dec
movsb
mov
mov
mov
push
jno
push
cmp
inc
mov
jno
fdivrl
cmp
inc
shrb
outsb
popa
jno
fiaddl
mov
mov
pop
popa
stos
fisubrl
sub
fsub
repz
scas
push
dec
in
mov
adc
xor
je
mov
stos
inc
arpl
inc
je
ffree
jno
int
shr
add
lds
jno
cltd
ds
movsl
hlt
imul
jno
jb
les
jae
jno
cltd
aaa
mov
leave
mov
pop
ret
push
int
jno
ret
push
or
mov
jae
jno
jge
inc
bound
fs
sbb
adc
lods
inc
push
add
sbb
frstor
jno
pop
int
sarl
fs
faddl
jno,pt
and
inc
lahf
stos
das
xor
fwait
xor
das
test
adc
ret
ljmp
add
add
push
jno
rol
inc
lds
pop
adc
sub
ret
jno
inc
stos
arpl
dec
push
repz
stos
jno
xchg
sub
inc
imul
dec
movsl
outsl
xor
shll
bound
inc
jnp
add
jg
rol
cmpl
mov
xchg
mov
xchg
test
popl
xor
jno
adc
mov
popa
aam
fwait
xchg
sub
add
or
icebp
xor
jno
jns
push
inc
loope
inc
dec
repnz
ja
mov
scas
cmp
jmp
push
inc
out
out
dec
movsl
cmove
and
adc
inc
jae
jno
xor
adc
jno
add
out
dec
movsl
jmp
jecxz
bound
ret
jno
stos
pop
movsl
mov
adc
aam
inc
lds
xorl
dec
and
xchg
arpl
lock
inc
jno
lods
and
sub
cs
movsl
mov
xor
xorb
lods
inc
jno
cmp
ds
movsl
shll
add
xorl
dec
pop
gs
inc
push
out
dec
movsl
push
xor
rcrl
inc
stos
pop
xchg
sub
test
and
aam
and
inc
xor
test
mov
adc
stos
pop
jno
jp
jno
inc
arpl
jae
jno
add
arpl
push
mov
enter
inc
xor
dec
int
rorl
test
jle
jno
bound
shlb
ja
roll
rcll
pop
push
jb
add
dec
gs
dec
int
shll
test
fcmovnb
jle
add
mov
fs
sarl
roll
pop
test
call
mov
jno
lods
popf
and
lods
mov
mov
xor
in
push
dec
xchg
jno
cs
loope
push
aaa
popa
in
lods
xor
lret
dec
jae
stos
jno
jae
lods
adc
jae
jno
in
push
bound
rolb
add
aaa
sbb
test
fs
test
inc
xchg
nop
outsb
lods
add
aas
add
cld
add
aaa
popa
add
inc
mov
jno
addl
arpl
aas
popa
inc
stos
adc
out
dec
movsl
lock
inc
loop
add
cmp
aaa
movsl
ret
add
stos
xorb
jno
bound
dec
add
xor
aaa
jno
jno
add
int3
inc
loope
xor
shll
aam
mov
andl
sbb
repz
aaa
jno
sarl
mov
int3
loope
mov
jno
hlt
out
xchg
pushf
push
mov
movsb
jno
mov
xchg
sub
insl
inc
mov
jmp
inc
xor
inc
fwait
cmpsb
xor
shll
stos
test
bound
mov
ljmp
out
xchg
mov
xor
les
repnz
mov
adc
orl
lods
xchg
dec
test
les
lds
lods
push
jae
push
in
xor
xchg
movsb
mov
lods
jno
pushf
in
adc
icebp
lods
xchg
inc
jae
push
jno
pushf
inc
shrl
mov
add
inc
xchg
lods
cwtl
movsb
xchg
sub
out
xchg
test
mov
out
xchg
mov
add
adc
xor
icebp
movsl
adc
enter
inc
hlt
enter
aam
mov
jno
fwait
xchg
jp
jno
xchg
dec
xchg
adc
inc
shll
es
pop
repz
mov
xchg
jmp
movsl
xchg
jae
adc
lea
jno
push
bound
outsb
adc
jb
popa
mov
mov
pop
movsl
xor
roll
aaa
popa
shrl
inc
pop
movsl
icebp
xor
icebp
aaa
popa
inc
lods
repz
inc
inc
rep
repz
jno
test
popa
subl
cmp
mov
loope
sub
xchg
movsl
sub
enter
xorl
mov
movsl
inc
jno
mov
aad
add
stos
jno
test
inc
jae
cli
pushf
mov
gs
pop
mov
push
jno
addl
rcll
mov
adc
jmp
cltd
jno
mov
adc
pop
cs
push
push
rclb
mov
jno
out
inc
add
arpl
push
mov
mov
xor
jno
mov
int
shll
stos
jno
xchg
mov
xchg
xchg
add
pop
arpl
lods
arpl
loope
ds
leave
cwtl
shrl
lods
xor
fs
adc
mov
add
loope
fildl
mov
jno
enter
arpl
push
mov
test
xchg
out
xchg
imul
inc
lock
cli
adc
movsl
xor
push
test
scas
push
shr
add
pop
outsb
into
jno
icebp
sub
dec
mov
lods
adc
aaa
and
stos
jno
jae
sub
bound
dec
lds
xor
or
popa
add
inc
aam
ret
dec
movsl
fdivs
lds
enter
movsl
xchg
xor
rcrl
xchg
sub
inc
mov
loop
mov
adc
ret
mov
bnd
sub
dec
mov
xor
inc
dec
movsl
mov
and
mov
popa
add
loope
clc
shll
lds
js
popa
subl
push
push
add
out
inc
fnsave
xchg
push
jp
shrl
lock
lds
shll
jno
data16
add
shrb
mov
shr
xchg
jno
pushw
mov
loopne
movsl
mov
insb
add
data16
inc
movsl
je
in
je
inc
ret
inc
out
pop
push
int
jno
lret
xorl
stos
cmpsb
xchg
sub
dec
cmp
stos
jno
shl
adc
scas
push
xor
rorb
inc
mov
stos
adc
cmpsl
bound
in
xorb
cltd
adc
shll
movsb
repz
inc
data16
movsl
and
cmp
add
jne
rol
jno
loope
fcompl
pushf
mov
mov
xorl
aaa
popa
xorb
imul
adc
mov
shl
inc
inc
mov
adc
test
add
push
rorb
mov
inc
loop
in
adc
add
xchg
xchg
cmp
push
or
shll
fwait
ss
insl
fcoms
mov
xchg
jns
lret
inc
jae
fisttpl
push
mov
sahf
movsl
arpl
jmp
jns
adc
repnz
int
bound
jmp
pop
jno
dec
movsl
push
popa
gs
xchg
xchg
arpl
push
jns
jg
xor
aaa
arpl
mov
dec
movsl
xorl
xchg
mov
aaa
add
inc
pop
addb
jno
in
in
jno
xchg
rol
ja
bound
sarl
test
arpl
rcrl
inc
adc
lods
and
xlat
pop
lods
add
in
jecxz
cs
ret
mov
adc
andl
jno
arpl
arpl
in
inc
xchg
pop
int
adc
add
dec
lock
mov
inc
mov
leave
mov
mov
movsl
mov
push
stos
jno
xchg
jle
adc
xlat
aas
popa
shrl
iret
xchg
movsl
iret
xor
sarl
mov
inc
mov
fstpt
jne
adc
inc
dec
movsl
fbstp
out
mov
in
add
lods
andl
push
jno
in
inc
and
pop
mov
in
mov
mov
shrl
dec
xchg
jno
ficoml
jb
adc
fiadds
mov
adc
xor
rolb
add
mov
rcl
aaa
popa
lods
mov
popa
jno
lock
inc
inc
lock
adc
ja
xchg
add
shrl
mov
xchg
mov
jno
add
mov
aam
fcmovb
pop
mov
inc
in
icebp
movsl
pop
mov
push
fs
pop
loope
push
adc
jno
adc
jo
jmp
hlt
add
adc
rorl
add
add
add
je
data16
pop
mov
add
inc
inc
insl
cmpl
push
xor
and
inc
arpl
jno
das
push
xchg
test
adc
test
aaa
loope
movsl
shll
jge
cmp
popa
nop
cmpsb
popa
and
jmp
out
xor
xchg
fs
icebp
xchg
cmp
and
inc
add
mov
cmovns
push
iret
and
sub
bnd
or
adc
xor
dec
loop
mov
fnstenv
icebp
iret
gs
addl
test
in
adc
int
mov
jno
cs
fdivp
sbb
sbb
ljmp
scas
sbb
sbb
push
in
mov
jmp
sub
fs
mov
inc
mov
ret
shl
daa
mov
xor
movsl
dec
xor
fistl
in
fld1
hlt
stos
ret
jecxz
int
jecxz
sub
xchg
mov
movsl
fistpll
inc
sub
xor
mov
and
sbb
xor
out
loope
arpl
push
and
enter
mov
mov
inc
inc
adc
mov
xor
inc
shll
ret
popl
xlat
insb
inc
mov
inc
out
add
jae
insb
adc
pop
arpl
loop
mov
iret
icebp
jmp
push
out
inc
subl
xchg
xor
push
inc
ljmp
lods
mov
loope
in
cmpsb
cmpsl
clc
repnz
xchg
dec
inc
lds
jge
cmpsb
dec
jnp
mov
ss
pushf
inc
imul
jp
inc
jmp
xchg
test
imul
loope
push
or
and
not
popa
sub
inc
xor
shlw
roll
adc
lds
rcll
rol
mov
stos
add
ds
jne
mov
out
scas
add
jbe
mov
ljmp
push
out
fdivp
ljmp
rolb
dec
jecxz
cmp
arpl
mov
inc
leave
push
daa
mov
or
lds
jle
scas
loopnew
or
int
das
subb
rolb
subl
and
inc
bound
fsubs
insl
pop
inc
mov
jno
inc
in
or
jne
xor
sub
and
mov
cmp
test
or
inc
insb
inc
call
lods
jecxz
test
lds
loope
cmc
xchg
inc
in
outsl
mov
stos
add
xor
jge
xor
push
and
sub
cmp
mov
gs
test
leave
lock
push
jne
mov
inc
stos
dec
mov
dec
mov
sbb
cmp
lods
punpckhdq
inc
jecxz
test
fwait
jecxz
xchg
ss
subb
int
adc
xor
sbb
dec
jbe
shrl
push
mov
adc
dec
inc
mov
cli
xchg
es
outsb
mov
out
dec
sub
mov
add
repnz
les
fiaddl
pop
inc
inc
inc
dec
add
fidivl
aaa
flds
les
add
imul
outsb
in
sub
adc
aas
mov
sbb
mov
mov
pop
movsl
loope
add
pop
sub
inc
mov
addr16
add
jle
popa
mov
in
aad
arpl
subl
sub
push
inc
xlat
dec
das
dec
sub
xor
and
in
lea
sbb
leave
mov
inc
mov
frstor
pushf
sub
ja
ja
arpl
fiaddl
push
cmpsb
sbb
pop
fsubrl
sub
inc
mov
push
xor
and
mov
mov
dec
loopne
pop
icebp
jmp
lods
mov
mov
sbb
idivl
or
sub
push
popf
xor
cmp
movsl
mov
lods
lock
or
jg
xchg
ret
sbb
mov
not
xor
dec
loop
cmpsb
push
adc
mov
adc
jae
jno
push
mov
jle
mov
mov
push
imul
push
aas
xor
bound
rcrb
push
lods
das
cmp
aam
decl
cmp
gs
lock
adc
pop
mov
faddp
mov
or
jno
icebp
mov
inc
shll
inc
imul
mov
add
pop
push
sub
push
and
fnstenv
rorb
xchg
mov
lods
xchg
int3
cmp
fbld
sbb
lods
jno
les
mov
test
cmpsb
dec
inc
xchg
xchg
outsl
out
push
popa
insb
test
les
loope
popa
push
sar
cli
sbb
lret
imul
xchg
test
sub
daa
js
fsubs
jp
lcall
sub
iret
push
and
inc
push
xor
inc
push
mov
sub
add
inc
mov
inc
pushf
in
imul
arpl
jmp
mov
mov
jnp
and
push
mov
pop
aaa
lods
dec
in
xor
xchg
push
icebp
sub
addr16
daa
push
mov
jge
sub
popa
mov
imul
cmp
stc
btc
cmpsl
ret
shl
ja
xchg
and
test
test
gs
and
add
add
pop
cli
pop
inc
sahf
cmpsb
adc
mov
add
dec
mov
aas
xchg
lods
inc
pop
xchg
fmull
inc
or
inc
outsl
xor
xor
fmull
pop
xchg
jb
in
inc
fs
sbb
inc
mov
gs
inc
sub
sbb
in
adcl
fs
push
push
xchg
mov
ret
mov
shrl
insl
mov
es
xor
inc
mov
mov
aaa
add
jno
sbb
sub
mov
ljmp
cmpsb
mov
sbb
xor
push
mov
daa
fs
gs
push
pop
pop
dec
jnp
leave
loope
inc
in
xchg
xor
dec
inc
in
or
test
push
inc
push
mov
mov
in
inc
jecxz
leave
add
movsl
mov
dec
shrl
mov
subl
and
sub
mov
rolb
stos
movsl
cmpl
movsl
add
leave
add
loope
rcrb
sub
ja
js
and
add
lods
int3
jae
rol
jmp
movsb
dec
jg
jnp
push
and
add
iret
test
adc
mov
push
pop
xchg
or
jns
inc
call
cmp
scas
ret
aas
mov
mov
xchg
mov
addr16
pop
mov
cmpsb
cmpsb
lahf
mov
lods
mov
dec
sub
pushf
sbbb
incl
mov
arpl
xor
mov
jb
in
icebp
cmpb
pop
sub
xchg
cmp
xor
dec
push
inc
inc
sbb
movsl
jno
andl
pop
jno
inc
push
push
mov
out
aam
not
mov
movsb
loope
add
jecxz
add
mov
popa
inc
sbb
roll
cltd
inc
xchg
jns
jecxz
xchg
xchg
test
shll
leave
bound
sbb
loope
enter
test
scas
cwtl
imul
and
ss
test
add
xchg
add
push
fdivs
push
rol
dec
jnp
cmp
in
xlat
shrl
test
jbe
inc
mov
cmp
ljmp
adc
xchg
inc
jmp
jae
movsb
and
add
lahf
jns
mov
xorl
outsl
outsb
sub
push
and
push
mov
loop
in
jb
orb
sarl
xor
jmp
out
sbb
fidivl
loop
cmp
push
push
xchg
jge
inc
das
addl
xor
out
in
adc
js
inc
test
cmpl
dec
imul
fwait
int3
repz
repnz
repnz
sahf
lahf
xchg
rorb
test
pop
daa
and
inc
out
pop
mov
push
sub
pop
call
std
add
loop
pop
adc
popa
bound
push
adcb
aad
pop
xchg
push
addr16
leave
and
pop
popa
les
je
push
imul
rcrb
mov
jb
popa
xor
sub
fsubl
sub
ds
inc
mov
adc
mov
movsl
andl
daa
add
adc
loope
popa
in
xchg
addl
dec
dec
jb,pn
cmp
xchg
mov
mov
inc
aam
outsl
inc
add
mov
inc
sbb
repnz
outsl
test
mov
push
sub
xchg
jno
add
cs
cltd
jne
dec
popa
jl
or
dec
inc
repz
fcmovb
jb
mov
cmpsb
adcl
or
mov
add
mov
addr16
loop
ret
mov
jbe
add
movsl
cmpsl
cmp
repnz
mov
daa
mov
adc
scas
add
xchg
jb
enter
insl
mov
lea
stos
in
mov
cmp
inc
mov
and
addr16
mov
lods
push
and
loope
cmp
mov
repz
mov
mov
jmp
bound
out
aas
inc
push
repz
pop
popa
xchg
and
fsubrs
and
fisttpl
les
xor
inc
or
das
mov
sub
fs
push
xchg
sub
insb
pop
cltd
ret
ljmp
pop
cs
jmp
test
xchg
cli
pop
push
pop
movsl
jns
aas
dec
outsb
add
mov
idivb
dec
inc
shrb
popa
fidivl
adc
test
cmp
cltd
cmp
imul
es
push
popa
inc
xor
and
adc
icebp
inc
arpl
sbb
push
mov
xor
stos
sbb
jb
mov
in
cmpsl
or
dec
jb
dec
dec
adcb
inc
fs
adc
add
loope
shll
stos
xor
pop
out
dec
fwait
adc
je
addr16
nop
jae
jecxz
aaa
push
gs
add
sub
mov
cmp
imul
insl
push
sub
loope
pop
jp
push
arpl
icebp
ljmp
sarb
outsl
out
add
outsb
insb
pop
mov
fbstp
dec
test
pop
mov
rcrl
cmpsl
mov
loope
scas
add
mov
rol
mov
xabort
sbb
sar
xchg
or
sbb
add
sar
mov
adc
scas
ret
loop
scas
pop
inc
mov
push
add
add
in
jp
add
cmc
gs
subl
fmull
mov
into
xchg
cld
push
shrl
lock
push
jp
add
fucomp
das
cmp
mov
add
loop
imul
mov
cmp
add
data16
mov
pop
lahf
mov
mulb
scas
into
lcall
fnstenv
sahf
cmp
scas
xor
loop
sbb
jl
lahf
cli
push
lret
dec
add
xchg
jp
mov
lcall
aad
lds
lds
mov
aas
jge
mov
jns
mov
mov
fsts
jp
inc
iret
aas
cs
push
xchg
push
xchg
mov
jge
ss
cmp
mov
mov
adc
lods
cmp
insb
incb
sbb
sbb
add
mov
sbb
mov
push
nop
mov
daa
dec
ss
pop
push
adc
mov
loope
sbbb
ret
mov
dec
sbb
push
dec
loopne
push
push
lods
mov
and
push
sahf
push
fiaddl
dec
jmp
mov
leave
fidivs
or
aaa
xor
stos
stos
repnz
mov
push
sbb
jge
popa
adc
xor
push
lea
stc
jg
popa
test
ljmp
jmp
sub
sbb
push
inc
out
iret
inc
fldl
sti
mov
dec
push
xchg
jno
sub
mov
fsts
inc
mov
into
lods
popa
push
inc
outsb
jl
in
cmpsl
mov
popa
mov
shrl
mov
add
popa
mov
inc
jns
lds
mov
fnstenv
mov
mov
cmpl
and
popa
lcall
push
inc
sub
add
das
mov
cmp
and
jle
add
mov
imul
add
ficoml
sbb
pop
pop
xor
and
notb
xor
and
pop
pop
dec
nop
xchg
jno
cmp
test
ds
push
inc
jbe
xchg
insb
xchg
in
inc
xchg
adcl
lea
imul
shll
outsl
cmpsl
mov
cmpsl
mov
push
out
imul
xor
cmpsl
xor
push
dec
imul
inc
inc
push
cmpsb
jge
inc
and
dec
sarb
cmpsl
popa
fst
fistpl
mov
mov
js
mov
arpl
rcl
mov
cmp
es
fwait
popa
inc
xchg
cmp
in
in
jo
jne
and
lea
inc
aad
sub
flds
inc
push
adc
sti
mov
xchg
or
adc
adc
lock
push
inc
imul
sub
push
xchg
inc
add
mov
and
cmpb
and
adcl
push
jecxz
jno
sbb
les
inc
in
xor
xchg
inc
jno
addl
xor
and
bound
inc
add
adc
arpl
mov
add
cmp
daa
xor
push
jno
or
xor
sbb
xchg
mov
xor
jno
loope
bound
and
arpl
jmp
std
addr16
dec
xor
dec
and
cli
mov
aas
sub
fwait
adc
xor
jno
mov
lods
inc
les
or
lret
xchg
jp
add
fs
jecxz
sbb
add
and
popa
lahf
push
sub
mov
bound
inc
lahf
fiaddl
jno
jno
loope
pusha
xorl
jecxz
mov
adcb
inc
mov
jno
add
and
sbb
outsb
jecxz
lock
cmpsl
mov
je
arpl
ret
jno
adc
sub
xor
jnp
cli
outsb
movsb
test
mov
mov
subl
and
xor
cmpsl
int
inc
loop
lds
lds
add
popf
movsb
movsl
inc
or
stos
and
loope
stos
inc
add
stos
arpl
repnz
adc
sub
mov
lds
mov
push
inc
scas
mov
outsb
mov
dec
test
scas
cltd
and
mov
jmp
jne
mov
jno
mov
inc
scas
pushf
push
bound
jno
add
fs
loope
les
jno
jno
dec
dec
dec
bound
andl
jno
roll
in
adc
pop
out
inc
stos
add
cmp
mov
daa
jb
push
jno
jl
pop
bound
std
ret
dec
xor
jno
inc
or
jecxz
and
and
jno
ret
jmp
std
add
jo
mov
add
ret
mov
xor
xor
jno
xchg
pop
mov
orb
mov
loope
bound
cmp
stos
in
das
xor
mov
bound
mov
mov
xor
jno
loop
and
into
arpl
xchg
inc
xchg
add
cmp
loop
push
and
jno
pop
addb
jbe
or
jmp
inc
and
jle
xor
push
loop
mov
pop
loop
add
popa
dec
jecxz
mov
inc
sub
es
popf
ret
movl
bound
ja
dec
xor
popf
inc
mov
or
and
mov
push
add
push
mov
sti
loope
adc
les
insl
mov
and
lret
push
test
inc
arpl
and
fidivrs
bound
loop
jae
aam
dec
push
and
bound
inc
and
lret
xchg
movsl
or
cltd
movsl
inc
movsl
jno
add
adc
cmp
lods
sti
bound
xor
sub
or
bound
xor
push
jno
mov
or
rcrl
xor
jno
arpl
or
andb
loop
jno
mov
out
and
stc
bound
xor
jno
or
and
aas
push
xlat
cltd
gs
jecxz
inc
xlat
push
cmp
loop
jno
xor
mov
jp
bound
and
jae
aam
inc
in
xchg
addb
mov
jp
jno
adc
mov
add
and
arpl
orl
jno
test
xlat
add
jno
lahf
inc
inc
inc
fists
jno
jno
bound
int
jno
adc
jno
clc
adc
mov
sbb
xchg
sub
popa
xor
sub
pushf
ss
add
loope
xor
jecxz
add
add
loope
popa
mov
mov
int
popa
into
mov
jns
popf
add
dec
rcll
push
and
jecxz
inc
loope
inc
shll
bound
addr16
pop
xor
add
movsb
movsl
and
addl
out
add
and
inc
and
pushf
addl
inc
inc
roll
incl
sbbb
out
mov
bnd
jmp
inc
and
lock
sub
and
xchg
sbbl
jmp
mov
inc
jecxz
pushf
outsb
mov
loop
inc
add
hlt
out
push
xor
ljmp
jecxz
add
mov
insl
inc
xor
inc
int
and
shlb
jae
mov
popa
xchg
xor
inc
fs
mov
cs
test
sub
pop
jno
mov
arpl
int
roll
xor
fadds
sub
pushf
gs
xor
inc
movsl
jne
and
add
and
cmp
in
mov
xor
adc
push
mov
adc
sub
inc
rol
xchg
inc
roll
mull
fs
xchg
movsb
lcall
loop
xor
arpl
sti
std
inc
mov
and
xchg
jno
inc
dec
mov
movsb
cltd
mov
xchg
cmpb
jmp
pop
fs
push
inc
jnp
add
into
and
shl
mov
inc
movsb
mov
xchg
sbb
add
sahf
jecxz
jno
add
inc
cmp
test
sahf
pop
int
roll
mov
ljmp
and
addr16
inc
jmp
imul
mov
inc
sbb
or
lods
arpl
addb
vpsraw
inc
and
mov
push
mov
shll
mov
inc
pop
inc
cmp
sbb
add
arpl
pop
fisubrl
and
inc
inc
addb
cmpsb
add
ds
jnp
les
mov
and
cmc
shll
inc
inc
call
add
inc
or
inc
inc
pop
outsl
imul
call
push
loope
inc
aaa
xor
int
mov
call
jae
inc
in
add
roll
in
subl
pushf
jp
and
dec
dec
shll
mov
out
push
popa
push
inc
sub
and
shll
adc
andl
movsb
pop
ds
ja
adcl
dec
mov
inc
and
mov
xor
loop
mov
adc
les
add
and
popa
popa
pop
add
jne
stos
and
std
imul
push
arpl
and
loopne
add
sub
jp
sahf
movsl
test
sbb
inc
bound
sbb
inc
mov
bound
pop
insl
scas
inc
xchg
xor
inc
jmp
fucomip
sar
cmp
ret
mov
inc
movsb
mov
push
jecxz
add
movsb
adc
mov
pop
xorl
shll
loope
mov
and
mov
outsb
dec
and
mov
cli
lods
push
and
mov
dec
inc
inc
jl
jecxz
add
popa
dec
pop
inc
mov
ljmp
cmp
call
call
es
mov
into
rol
add
or
imul
xchg
test
movsb
sub
and
jno
shr
std
arpl
mov
mov
and
mov
xchg
pop
mov
fisubrs
lods
shlb
add
jp
inc
jmp
add
dec
sub
or
add
and
mov
inc
loope
add
and
test
loop
shll
and
sub
aaa
shll
mov
push
mov
xchg
pop
add
xor
in
push
loope
sbbb
mov
loopew
loope
and
jecxz
jl
bound
jecxz
mov
push
mov
ljmp
mov
add
call
xchg
mov
xchg
imul
adc
gs
pop
jno
push
test
imul
push
test
mov
inc
gs
test
inc
imul
mov
test
inc
dec
imul
xor
lea
into
daa
xchg
jge
addr16
test
mov
inc
or
add
cmp
movsl
cmp
into
loope
and
addr16
ret
jno
movsb
lods
push
and
sti
push
add
add
movsb
push
add
push
add
lods
dec
rcrb
lods
cltd
icebp
lods
cltd
sub
lcall
push
add
add
add
add
add
xchg
push
add
push
add
lods
cmp
cltd
jno
cltd
test
cltd
sbb
mov
xor
push
xor
cmp
mov
push
inc
icebp
test
stos
mov
arpl
adc
fwait
add
loope
cmpsl
xor
mov
push
xor
adc
jae
sub
test
push
shll
stos
inc
std
inc
movsb
push
shll
cli
mov
dec
in
test
cmpsb
fdivrs
add
push
cmp
ret
and
jl
and
inc
ret
mov
and
add
imul
test
dec
sbb
sarl
pop
and
push
sub
dec
inc
inc
mov
adc
mov
add
lods
sarl
cli
and
or
insl
and
lds
ss
inc
dec
addr16
test
inc
pop
imul
add
xor
push
jne
jo
popa
mov
roll
pop
mov
sub
ret
mov
inc
and
jns
and
add
dec
push
les
push
ljmp
inc
xchg
insl
loop
incb
inc
ljmp
out
lea
xchg
ret
sar
out
and
push
add
outsb
cltd
subl
arpl
bound
scas
loopne
test
lds
addr16
cmp
mov
ret
addr16
test
and
movsb
bound
mov
ljmp
inc
dec
bound
lods
mov
jmp
test
xchg
inc
pop
jb,pt
sahf
loope
lret
and
mov
ljmp
jne
add
inc
dec
mov
in
sub
cmp
and
xchg
outsb
movsb
add
les
lods
xor
add
out
shll
fisubs
movsl
and
sub
dec
push
and
xor
inc
ja
rcl
mov
jb
xchg
push
orl
repnz
add
loope
xchg
pusha
std
gs
sub
adc
test
test
mov
loope
inc
les
dec
test
push
in
adc
rcl
adc
cmp
rol
and
and
sub
mov
add
out
popa
cltd
lea
in
mov
inc
ds
xchg
and
notb
ret
out
sbb
insl
pop
and
inc
jmp
jnp
cmp
in
fs
cmpl
in
in
add
sub
cmp
xchg
dec
mov
dec
push
sti
les
push
add
xchg
and
stos
loop
adc
ljmp
mov
vcmpsd
mov
fisubs
std
inc
popa
out
lea
sub
adc
andb
mov
leave
inc
xor
insb
in
mov
pop
add
loop
mov
popa
in
xor
les
andl
lds
call
and
xor
sarl
test
inc
add
ret
into
and
add
insl
mov
loopew
loope
shll
bound
jge
je
int
and
jo
lods
das
addr16
pusha
xchg
in
cmp
sub
inc
je
int
dec
inc
mov
fs
fbld
aas
inc
cmpl
in
inc
js,pt
mov
sbb
add
mov
jecxz
mov
sub
test
push
fstpl
lods
jl
bound
test
loope
in
lods
jge
loop
jle
mov
cmp
inc
lds
fwait
mov
inc
cltd
cmpl
jmp
add
add
lods
and
xchg
sub
mov
cmp
pop
inc
fwait
shll
or
loope
loope
inc
add
xor
out
and
shll
test
and
cmp
in
mov
xor
adc
push
mov
adc
inc
and
scas
add
fnstcw
push
add
roll
test
dec
in
fcmovb
mov
pushf
mov
orb
addb
adc
and
fst
sub
fwait
jg
xchg
stos
lods
in
lods
jb
mov
inc
inc
pop
inc
out
fwait
mov
push
add
push
add
lods
xor
add
add
push
add
push
add
push
add
add
add
pop
in
movsb
xor
in
cmp
addr16
xchg
gs
mov
pop
pop
gs
inc
movsl
inc
jo
test
addr16
hlt
mov
and
test
inc
jne
shrl
leave
imul
xor
push
inc
aad
jle
flds
loope
inc
in
das
leave
add
push
cmp
sbbl
inc
pusha
inc
inc
cwtl
inc
inc
rolb
or
inc
sbb
inc
inc
lods
inc
inc
in
inc
sbb
inc
mov
movb
inc
inc
aaa
inc
inc
outsl
inc
inc
cmpsl
inc
inc
filds
pop
inc
inc
push
inc
inc
mov
rolb
ljmp
dec
lods
cltd
jns
cltd
movsl
lods
cltd
shrl
and
fcmovb
mov
fisubrs
add
arpl
mov
sbb
and
push
adc
inc
fs
std
add
movsl
mov
and
inc
fisubs
movsl
mov
popa
and
and
movsb
inc
xchg
addr16
or
add
out
jns
in
lods
in
lods
push
addb
push
add
push
add
add
add
push
add
push
add
push
add
add
outsb
jecxz
lds
add
inc
dec
push
ret
add
xchg
inc
sbb
adcl
ret
add
add
cltd
roll
adc
sub
sub
subb
pusha
loop
mov
addr16
shll
sub
movsb
test
add
fs
movsb
xchg
movsb
les
xlat
sub
test
and
loope
mov
push
cmp
or
pop
outsb
xchg
add
and
jno
lods
in
jae
loope
addl
bound
test
test
xor
add
jmp
cmp
aaa
pop
incb
dec
loope
add
adc
push
mov
ljmp
fisubrl
push
fs
dec
and
loop
add
out
ret
xor
and
mov
faddp
movsb
inc
loopne
pop
sub
test
pop
movsb
arpl
test
mov
and
sbb
xorb
and
jl
and
jnp
pusha
cmpsl
insl
dec
ror
and
pop
outsb
jo
inc
add
push
rcrl
inc
inc
pushf
loope,pt
sub
inc
sbb
and
jmp
repz
mov
les
cmpb
pop
push
popa
add
imul
xor
out
add
gs
xor
inc
arpl
aaa
add
in
gs
add
adc
ret
mov
mov
lahf
mov
xorl
or
loop
cmp
jne
loope
adc
dec
movsb
pusha
movsb
imul
in
in
add
and
ret
mov
stos
ds
xchg
jnp
dec
sahf
push
out
xchg
sub
dec
xor
int
add
test
pop
cmpl
cmp
aaa
loop
loope
and
and
push
and
xor
cmp
push
popa
cmpsl
sbbl
push
jecxz
xchg
mov
xor
jecxz
aas
arpl
mov
inc
sarl
mov
inc
pushf
jecxz,pn
lods
push
fs
sub
lea
add
or
enter
pop
int
roll
cltd
and
mov
aad
fdivr
loopw
add
xchg
lea
sub
mov
fisubrs
repz
popa
fwait
pop
fnstsw
and
add
mov
insl
sub
add
mov
adc
mov
loope
and
mov
fisubrs
movsb
push
and
ds
add
inc
rclb
pushf
cs
loop
ds
sub
dec
fldl
dec
in
lea
xchg
lcall
sub
dec
in
add
cmove
xor
mov
add
je
cmp
add
rcll
add
lea
fs
pop
add
aam
aaa
and
in
pusha
add
test
jecxz
xor
and
jae
mov
popa
dec
in
dec
xchg
mov
addb
xchg
xor
and
inc
dec
xor
fdivr
jne
andl
fadds
lods
adc
add
int
test
xor
les
imul
push
inc
mov
fldln2
sub
sub
add
pusha
dec
push
loop
call
or
cmpl
call
sbb
orl
mov
arpl
subl
mov
loope
jecxz
mov
cmp
or
sub
push
cltd
push
rcr
push
inc
out
mov
inc
mov
mov
roll
jecxz
mov
bound
mov
push
add
add
add
lea
roll
out
ret
xchg
and
fildl
outsb
lock
lds
dec
inc
pop
inc
out
mov
mov
loope
movsb
in
and
call
xchg
and
and
mov
mov
faddp
and
addr16
lcall
sub
dec
add
les
xorl
fld1
adcl
fisttpll
gs
add
mov
das
addr16
inc
xchg
mov
xchg
and
in
in
pop
cltd
cmp
in
arpl
cltd
cmp
in
arpl
add
jp
jmp
roll
mov
addl
sbbl
and
mov
movsb
mov
pop
lods
hlt
out
sub
and
fisttpl
cmovl
mov
cmpsb
mov
dec
inc
and
lods
adc
and
add
mov
aas
addr16
arpl
lods
mov
clc
fadds
loop
addr16
sti
loope
inc
addr16
inc
fs
out
test
les
in
inc
add
and
inc
inc
fsubl
loop
inc
add
push
inc
test
fnstsw
clc
fidivrl
imul
inc
cltd
and
mov
ljmp
and
cld
add
imul
test
arpl
dec
cmp
loope
lods
in
lods
in
lods
in
push
inc
les
lds
add
outsl
inc
sbb
call
arpl
loope
add
cmpl
addb
loope
ret
mov
les
inc
lods
mov
mov
ljmp
insl
inc
jecxz
xor
jae
movsb
add
cld
stos
sub
shrl
lods
jge
test
add
lods
pop
xchg
mov
inc
ficoms
mov
test
add
dec
fs
test
and
cmc
loope
in
add
xor
jp
les
pop
dec
pop
and
and
loope
mov
fiadds
xchg
bound
and
shl
mov
addr16
pop
push
loope
arpl
and
lods
mov
xchg
in
in
inc
inc
jnp
popf
inc
out
sub
std
gs
inc
dec
push
bound
jle
adc
xor
mov
fbld
mov
into
mov
push
and
inc
mov
xchg
data16
mov
rcll
xor
push
and
ret
sarl
pusha
ret
jns
and
loope
and
shr
push
xor
adc
push
mov
adc
inc
push
lods
popa
jg
cmp
in
mov
cmp
push
xor
adc
push
mov
adc
mov
adc
push
mov
adc
inc
push
mov
adc
push
mov
push
rcrl
fisubs
sbb
mov
jg
and
sbb
lods
mov
out
mov
outsl
and
sub
and
ret
pop
and
andl
movsl
orb
inc
add
sbbb
scas
sub
in
and
xchg
fldenv
xchg
and
addr16
pop
and
movsb
dec
push
mov
adc
dec
cmp
sub
out
loop
dec
stc
xor
cs
inc
mov
sub
repnz
mov
fwait
and
mov
dec
andl
aas
out
imul
andl
add
jno
lods
in
arpl
arpl
add
inc
pushf
push
roll
movsb
pushf
sub
hlt
aas
loopew
inc
xchg
pushf
cs
inc
and
xor
add
jno
inc
dec
ret
insb
sub
jmp
std
arpl
adcb
roll
cs
jecxz
test
hlt
aas
pop
lods
xor
push
mov
jne
rcl
pop
xor
orb
ret
popa
ret
and
xor
inc
fadds
and
ss
sub
fwait
inc
jp
loope
repnz
call
xchg
lea
mov
push
inc
mov
dec
xchg
ret
mov
adc
push
faddl
out
lea
mov
popa
shr
std
arpl
in
cmp
in
and
addr16
addr16
adc
dec
cmp
mov
mov
push
cmc
add
into
test
jns
in
push
cmp
xlat
mov
xor
and
jl
test
cs
fs
movsb
xchg
pop
mov
mov
mov
add
bound
mov
sarl
mov
inc
pushf
cs
inc
in
loop,pn
addl
fidivs
mov
inc
shll
jmp
and
add
movsl
addl
into
add
mov
and
dec
lods
in
push
shrl
roll
jns
and
roll
mov
addr16
push
pop
xor
bound
jae
mov
lds
mov
fidivs
dec
out
add
orl
ss
lock
adc
outsl
mov
add
inc
push
aas
in
push
pop
and
outsl
xor
inc
lods
les
push
inc
arpl
addr16
in
les
aad
lea
jno
lock
xchg
push
shll
bound
bound
xor
hlt
and
js
sub
sub
arpl
arpl
sti
and
nop
sbb
icebp
fnclex
insl
add
xchg
daa
pop
out
sub
fsubs
stos
into
out
adc
sbb
jp
or
cmp
iret
fs
push
je
and
dec
mov
xor
cmp
or
mov
mov
mov
sub
test
and
shll
outsl
dec
add
jmp
push
and
mov
loopne
cld
jne
data16
cltd
xor
scas
add
out
sub
movsb
dec
movsb
popa
orb
xor
push
sbb
mov
and
hlt
add
cmp
sti
and
mov
in
and
cli
add
fistpl
pop
adc
fnsave
lahf
mov
and
xchg
pop
sahf
and
popf
jb
inc
xchg
inc
xchg
add
imul
and
pusha
cmc
pop
xchg
mov
icebp
pop
sub
mov
inc
and
and
xchg
ja
insl
adc
push
jp
aas
imul
pop
lret
rorl
inc
push
inc
pushf
imul
popa
gs
inc
cs
arpl
in
jae
xor
lret
imul
mov
mov
lret
xchg
inc
arpl
mov
inc
shlb
test
inc
subl
mov
int3
movsb
test
inc
ret
imul
xor
fldenv
mov
mov
addr16
test
inc
insb
imul
xor
dec
inc
mov
mov
inc
push
addr16
xor
inc
pushf
imul
roll
adc
jmp
in
sub
inc
jns
leave
test
inc
lcall
xor
sub
xor
inc
fisubl
mov
aas
dec
lea
mov
xor
xor
jl
in
test
inc
mov
lds
sub
xor
leave
inc
subl
les
addr16
test
inc
arpl
mov
inc
shlb
test
inc
cmpl
aam
lods
xor
add
mov
inc
xor
test
inc
icebp
imul
xchg
test
inc
mov
adc
or
inc
jns
cmp
inc
sub
fldt
inc
shrb
mov
inc
sub
test
rolb
push
imul
sub
mov
adc
xor
adc
mov
inc
stos
imul
fiaddl
imul
imul
je
inc
add
mov
inc
and
lret
aad
test
in
imull
icebp
inc
push
mov
cli
inc
cmp
call
shrl
imul
inc
inc
or
jb
lea
jne
les
in
mov
mov
dec
jecxz
inc
jl
cmp
inc
in
daa
jnp
gs
inc
sub
mov
inc
mov
inc
jmp
mov
test
inc
add
test
inc
stos
imul
addr16
xor
adc
imul
xor
inc
les
test
push
arpl
inc
test
test
inc
dec
adc
mov
inc
cmp
leave
out
ret
mov
inc
lret
inc
or
leave
fs
mov
scas
ret
addr16
in
push
cmp
inc
mov
inc
shlb
test
push
pop
lret
inc
cmp
mov
inc
cltd
addr16
loop
hlt
cld
xor
repz
loop
mov
test
inc
subl
xchg
test
inc
fldt
mov
inc
and
test
inc
adc
mov
inc
push
fwait
sbb
xor
mov
imul
sbb
lcall
add
les
inc
fldt
mov
inc
add
test
inc
xchg
fldenv
lret
imul
addr16
hlt
mov
fcomps
push
leave
pop
lds
lods
inc
xor
fiaddl
imul
idivb
inc
loope
and
inc
arpl
jge
es
pop
mov
inc
pushf
inc
dec
adc
lahf
push
mov
sbb
ret
addb
out
shlb
addr16
test
inc
imul
addr16
leave
mov
xor
iret
adc
inc
ret
iret
dec
das
jnp
push
xchg
inc
fldenv
xchg
shl
mov
adc
sbb
aam
cmpsb
dec
jbe
add
or
sub
pop
xchg
and
mov
mov
and
sbb
aad
sbb
xchg
gs
pop
push
and
pop
idivb
push
outsb
inc
test
push
sbb
lds
xchg
pusha
dec
push
pop
sub
rcl
je
xchg
scas
push
pop
mov
push
fstps
roll
repnz
jnp
push
mov
es
mov
and
push
popa
dec
mov
std
rol
test
in
and
dec
jp
sbb
lcall
popf
mov
or
push
insb
pop
and
jmp
pusha
mov
cmpl
xor
dec
out
sub
pop
mov
mov
fwait
mov
mov
es
leave
mov
jecxz
lds
mov
test
jbe
and
dec
xor
sub
aas
dec
cmp
adc
icebp
mov
popf
dec
subb
dec
lods
adc
mov
iret
negb
mov
fwait
push
inc
and
addr16
and
rcrl
jo
out
xorl
scas
fwait
out
and
inc
pop
adc
pusha
popa
mov
adc
movsb
xchg
negb
mov
sti
mov
xor
fildll
arpl
sbb
mov
into
jge
and
cmp
imul
in
ret
fwait
sub
push
xor
mov
pop
out
and
aad
mov
popf
fidivl
cmp
icebp
and
jo
into
mov
and
pop
repnz
push
arpl
inc
pop
pop
lods
ret
adc
mov
jae
pop
mov
paddd
push
pop
sbb
aas
pop
push
roll
and
inc
sub
in
sbb
inc
fldenv
pop
dec
out
pop
std
mov
fldl
pushf
out
lock
and
in
push
dec
lret
scas
insl
jno
pop
sub
add
or
movsb
stos
push
sub
inc
mov
xor
inc
and
push
out
xchg
lods
cltd
stc
lret
pop
xchg
push
test
mov
fwait
fwait
cmpsl
shll
lock
in
push
stc
lcall
repz
xchg
fisttpl
cltd
xchg
xor
dec
shrl
inc
addr16
imul
fcmovne
cltd
lret
mov
dec
xorl
sub
nop
sbb
push
push
mov
sbb
sub
repnz
add
adc
outsl
jge
out
testl
dec
aas
mov
push
movsb
and
mov
and
fs
test
in
inc
addr16
arpl
and
and
ret
int3
fs
and
shr
lret
lock
xchg
push
mov
pop
insb
cld
mov
gs
call
dec
and
and
push
jl
xor
push
xor
add
outsb
and
pop
jecxz
hlt
push
addl
xchg
fldt
xchg
ds
xchg
stc
das
pop
add
or
mov
test
mov
mov
and
dec
cmc
ret
cmp
ficompl
out
and
xchg
insl
xchg
dec
and
add
xor
sbb
xchg
jecxz
adc
in
sub
adc
daa
movsb
or
mov
pop
dec
xor
xchg
in
dec
movsl
repz
mov
stos
test
sbb
cltd
mov
add
lcall
sub
inc
test
and
in
cmp
adcb
test
pop
cmpl
push
popf
and
in
inc
pop
mov
mov
insb
xchg
fcomps
mov
mulb
push
addl
pushl
iret
add
cs
fldcw
out
and
repnz
loopne
push
pop
adc
and
shlb
xchg
jl
call
loope
sbb
jbe
cld
in
and
mov
dec
and
aaa
pop
sbb
cmpsl
adc
adc
and
mov
lods
ret
orl
dec
xchg
pop
loopne
or
icebp
aas
shll
or
bound
jge
inc
inc
and
out
in
pop
sti
and
mov
stos
cmp
adc
dec
cmp
popf
dec
and
cmp
inc
push
dec
and
push
imul
pop
lret
mov
loop
and
pop
pop
add
dec
insl
addr16
insl
mov
cmp
xor
hlt
sbb
sbb
mov
gs
xor
sub
inc
and
add
pop
xor
nop
sub
cmp
stos
adc
xlat
loopne
mov
jl
jne
out
sbb
pushf
and
cmp
xlat
jns
cmp
sub
fwait
mov
in
test
jae
xchg
add
and
sub
pop
aam
sarb
dec
repz
adc
repnz
xchg
sub
xchg
and
sub
push
in
pop
sub
mov
or
cmp
lahf
or
and
bound
cmc
je
xchg
std
inc
pop
mov
jge
jg
cmp
flds
and
bound
loope
nop
shl
mov
xchg
cltd
insl
mov
stc
adc
dec
inc
stos
andb
cmp
loope
push
xchg
jnp
pop
sbb
sbb
cmp
outsb
fistpll
test
andb
shl
inc
daa
enter
stos
je
fidivs
outsb
inc
dec
jle
insl
xor
and
cmp
mov
loope
sbb
pop
add
addr16
jb
iret
push
and
mov
mov
and
inc
les
scas
sbb
fnstsw
mov
sub
jl
adc
pop
and
mov
sbb
dec
xor
loope
xchg
mov
jmp
mov
and
xchg
mov
les
add
sti
inc
and
popa
push
pminub
cs
mov
and
xor
dec
test
inc
testb
pusha
loop
and
lahf
or
dec
dec
test
stos
movsb
jecxz
jbe
les
sbb
mov
dec
xchg
js
fnstcw
sbb
mov
sbb
sbbb
cmpsb
repz
bound
and
push
push
fistl
and
scas
pushf
mov
je
stos
popa
jg
pop
pop
dec
imul
loop
sub
in
loope
and
cmp
in
test
mov
rol
ljmp
ljmp
and
mov
test
dec
aas
dec
and
mov
mov
cld
inc
inc
rcl
jo
test
adc
out
or
xor
push
arpl
cmp
and
xchg
pop
ret
subl
mov
push
xor
push
and
cmpsl
xchg
jne
fisubs
cltd
rcll
ljmp
cs
jl
fisttpll
and
out
stos
lret
pop
bound
leave
adc
sub
inc
ficoms
adc
or
out
or
and
pop
arpl
mov
adc
mov
cmp
pop
mov
sub
and
loop
and
cmp
mov
or
bound
das
dec
dec
test
fwait
and
mov
push
sbb
inc
dec
mov
push
sahf
aaa
pop
ficoms
loop
and
push
sub
test
enter
movsl
dec
and
movsb
fmuls
lahf
jnp
out
mov
mov
rolb
jne
dec
sbb
and
sub
addr16
fdivrl
jl
mov
cmp
repnz
mov
and
mov
das
and
pusha
arpl
cmp
cmp
push
loope
pop
enter
and
cmc
cmp
adc
mov
movsl
mov
loop
and
cwtl
add
loop
out
pop
add
push
pop
daa
cmp
mov
mul
sub
sub
aad
and
inc
mov
std
outsl
les
movsb
imul
add
cmp
movsb
mov
shl
mov
sbb
je
and
fidivrl
inc
aad
jge
ud2
and
add
gs
and
cmp
and
and
imul
jb
dec
add
popf
aas
inc
lods
repz
out
pop
loop
popf
iret
mov
mov
mov
call
clc
pushf
mov
and
pop
lret
arpl
adc
mov
mov
inc
pop
leave
add
in
mov
pop
jns
jecxz
pop
in
shl
mov
sbb
int
push
and
addr16
xlat
inc
pop
push
mov
lcall
aas
or
in
adcl
in
mulb
adc
lock
je
jmp
mov
adc
negb
fidivrl
xchg
xchg
sti
cwtl
pop
out
shll
push
add
mov
pop
out
and
cltd
in
popa
dec
push
ja
test
jns
and
iret
xchg
sti
mov
add
and
aad
fmuls
xor
and
push
imul
xchg
inc
arpl
adc
or
bound
lret
sub
clc
mov
in
loope
in
xchg
mov
pop
cmp
cmpsl
xor
cmp
xchg
and
jbe
sub
insb
arpl
repz
and
dec
cmpsb
dec
mov
pop
shlb
xchg
das
adc
or
scas
and
mov
push
and
lcall
add
fmuls
cmp
repz
xchg
jmp
mov
mov
icebp
sbb
add
sub
aam
dec
and
imul
gs
pushf
and
mov
jg
jmp
dec
sub
xor
inc
fldenv
ss
fsubrs
outsb
ficompl
and
movsl
mov
hlt
xor
xor
arpl
aas
xchg
add
into
cmp
test
stc
int3
shrl
into
push
ds
and
mov
cmpsb
std
xchg
shrb
or
or
js
mov
sub
lret
inc
pop
sub
movsl
stc
xor
and
cmp
cmp
mov
push
scas
and
dec
clc
and
pop
mov
and
adc
add
lods
and
js
jmp
mov
jmp
push
and
cmp
mov
lock
scas
pop
inc
mov
lods
mov
movsl
sbb
or
bswap
lea
call
in
dec
sbb
das
add
and
dec
test
fistpll
mov
daa
xlat
and
or
add
repnz
rcrb
cltd
and
push
push
and
mov
add
or
out
and
jne
icebp
rclb
push
scas
outsb
add
xor
lods
aaa
int
mov
pop
mov
jge
xchg
push
and
inc
mov
pop
or
pusha
add
cltd
xchg
and
sar
add
mov
mov
neg
movb
inc
out
lret
fists
mov
loope
jno
push
sbb
scas
jge
out
cmp
nop
or
mov
loop
dec
jo
dec
and
aas
ds
fstpt
inc
mov
mov
les
dec
mov
jge
inc
sbb
shl
int3
xor
jo,pn
jge
ds
add
mov
xchg
lods
jns
and
enter
pop
sub
cmp
aam
imul
xchg
enter
shrb
outsb
popf
insb
and
and
push
mov
or
add
and
add
pop
dec
xchg
xchg
shlb
and
push
out
popa
pop
cmpl
mov
jge
sub
and
es
rcll
mov
out
mov
call
pusha
push
pop
and
add
and
fistpl
cmp
lcall
movsb
push
jmp
add
popf
in
jb
adc
sub
pop
iret
cmp
daa
loop
repnz
cmp
rorb
bound
or
push
and
inc
ja
loopne
hlt
cmpsb
and
mov
mov
loope
sbb
and
in
int
aaa
ret
adc
mov
out
sub
inc
out
inc
arpl
and
and
cld
adc
mov
jle
shll
mov
mov
jno
es
mov
mov
add
outsb
or
and
xchg
or
xor
and
hlt
mov
inc
sbb
dec
xchg
and
add
pushf
push
mov
mov
adc
and
test
and
mov
call
shrl
dec
ss
lea
mov
inc
add
pushf
adc
push
jmp
sub
scas
test
in
xor
testb
cmp
dec
cmp
mov
and
cmpsb
inc
imul
and
xchg
jp
cltd
adc
out
and
dec
mov
xchg
and
aaa
mov
je
mov
xor
adc
xchg
int3
inc
test
fisubrl
das
nop
arpl
call
push
inc
popa
in
enter
aam
das
pop
and
cmp
rorb
inc
mov
iret
mov
and
es
inc
dec
sbb
shll
rcl
and
sbb
clc
ljmp
shll
pop
sbbb
jmp
mov
jns
xor
lret
das
and
popa
push
jge
dec
andb
leave
and
push
sub
mov
mov
sbb
and
xor
xor
push
fiaddl
fdivl
ret
push
mov
xlat
xchg
sbb
sub
dec
or
icebp
insl
out
movsb
daa
mov
jp
in
fxch
repz
rcll
and
cmp
cltd
in
aam
mov
gs
mov
jl
adc
in
fstpt
adc
sub
cmp
push
and
test
rolb
and
mov
dec
adc
idiv
and
or
lahf
jge
mov
fnstenv
in
xchg
or
lret
js
pop
and
imul
and
or
out
mov
dec
mov
inc
and
mov
insl
pop
pop
and
mov
test
and
and
data16
and
insb
jecxz
in
sbb
je
int3
dec
sub
arpl
cwtl
loope
mov
cmp
jno
adc
sub
clc
pusha
jne
mov
dec
jecxz
xchg
dec
out
lret
and
push
push
test
or
jl
addr16
push
inc
sub
aad
mov
imul
dec
sti
shll
lds
xor
shll
mov
and
mov
call
push
and
cli
xchg
xchg
jmp
cmpb
sbb
cwtl
mov
or
lahf
and
sahf
mulb
sub
leave
and
cmp
and
dec
adc
and
cmp
sbb
and
out
int
and
subl
sub
jmp
loop
mov
push
cmp
adc
ds
and
ljmp
inc
and
adcl
and
mov
ret
and
pop
dec
rcll
jnp
iret
adc
or
unpcklps
dec
outsb
push
test
cmp
xchg
inc
cmp
push
xor
and
xchg
lsl
or
jg
iret
loop
sub
and
mov
addr16
lock
mov
push
ret
adc
add
mov
fs
and
call
idivl
inc
mov
and
das
imul
add
psllq
adc
clc
xchg
pop
out
mov
or
cmpsl
push
jmp
test
cmp
and
sbb
and
mov
and
jne
lret
and
sbbb
xchg
in
sub
inc
xor
shlb
and
lock
icebp
mov
and
or
xchg
fdivrs
adc
or
nop
aas
sarb
gs
mov
in
pop
std
jmp
cmp
sarb
push
push
ret
pop
jp
sbb
sub
cmp
dec
fs
and
insl
pop
sbb
test
and
sarb
test
adc
and
mov
pop
insl
lcall
jecxz
hlt
and
inc
mov
enter
dec
cltd
pop
hlt
push
sub
push
fsubl
mov
enter
insb
sub
rorl
and
adc
and
daa
cli
cmp
js
cli
adc
mov
jns
cld
loope
test
cmp
push
fisubrs
cmp
pop
int3
cmp
in
rorb
cmp
and
and
enter
outsl
lods
popf
cltd
xchg
mov
mov
jo
aaa
pop
bound
gs
movsb
sbb
fldcw
inc
and
mov
movsb
mov
xor
add
push
add
je
sbbb
inc
and
popa
and
fucomip
cmp
fistl
and
xchg
orb
shlb
inc
lahf
push
cmp
push
mul
mov
add
mov
adc
in
in
inc
roll
sub
sub
imul
dec
pop
push
cmp
shl
imul
or
adc
or
sbb
push
rcr
in
and
fistpll
test
inc
xchg
test
imul
jmp
xlat
sahf
pop
mov
mov
cs
add
or
mov
sbb
or
fisubrs
pop
in
imul
das
add
testl
xchg
xchg
int
add
pop
cld
jns
icebp
mov
and
jp
jge
lret
clc
std
bound
sbb
arpl
mov
jae
pop
or
cli
std
lcall
shlb
mov
ds
fnstenv
movsb
xchg
xor
repnz
add
into
clc
jo
mov
repnz
add
pop
aam
sub
adc
sub
jl
pusha
dec
inc
into
adc
sub
and
xchg
dec
sub
outsl
and
sbb
jns
cwtl
testb
fnstsw
ds
insb
lret
out
xchg
fwait
popf
and
mov
or
rcrb
inc
cmp
mov
and
push
ficoms
and
aam
subb
push
xor
mov
into
jo
jns
xor
jecxz
mov
and
rclb
xor
xchg
cmp
and
mov
jbe
and
out
lds
pop
jle
test
movsb
adc
dec
jg
xchg
cltd
and
pop
add
inc
ret
loop
and
leave
cltd
and
mov
imul
fldl
sub
dec
loop
ja
or
loope
jg
add
lcall
loopne
sub
shll
mov
xchg
mov
shlb
lods
xchg
cwtl
inc
mov
xchg
mov
sub
push
sahf
lahf
jmp
and
sbbl
jns
cmpb
xchg
shl
js
fldz
pop
insl
in
sbb
xor
sbb
adc
pop
xor
mov
cmp
cltd
mov
dec
mov
and
xchg
adc
mov
nop
xor
and
aad
fs
and
xor
imul
popf
dec
cmp
insl
aaa
xor
in
and
xor
test
add
and
and
aad
int3
divl
lea
jnp
mov
inc
pop
lock
popa
and
add
fs
xchg
and
les
dec
xchg
push
push
xor
add
fcomps
mov
bextr
inc
lods
imul
es
jle
push
jno
add
iret
mov
lods
in
repz
popa
cmp
sahf
gs
or
adc
sub
and
setg
outsl
mov
int3
repz
enter
jge
jle
inc
es
mov
stos
andl
into
adc
cmp
dec
xchg
and
sub
mov
rdpmc
add
xorl
jge
shrb
push
jns
outsl
push
popf
fidivrs
pop
and
lcall
pop
aas
mov
popf
sub
iret
shlb
jecxz
jge
das
xchg
dec
mov
add
and
enter
and
dec
and
mov
in
cmp
push
idivb
andl
cli
pop
fistl
sbb
inc
mov
pop
mov
jl
and
int3
mov
cwtl
clc
arpl
imul
and
add
lahf
and
sub
add
and
insb
and
mov
scas
jns
pop
fs
loope
and
xchg
dec
cmc
mov
sbb
xor
insl
jecxz
add
decl
fsts
and
jl
int
mov
adc
push
jmp
cli
addr16
in
and
or
mov
lret
cmpsb
adc
mov
push
rol
loopne
inc
cli
and
in
sub
sbb
bound
outsb
enter
lcall
and
mov
and
and
into
addr16
jle
rcrb
loope
and
or
push
and
and
test
and
mov
inc
rcll
in
and
cmp
sti
push
outsb
ret
fimull
adc
add
xchg
pop
repnz
fcoml
lock
in
out
mov
push
cmp
jmp
inc
push
xchg
imul
stos
adc
scas
cmp
add
call
ja
sbb
movsb
jg
flds
push
xor
mov
lods
dec
xor
in
adc
mov
pop
int
lds
fsubp
test
jmp
mov
jns
xlat
push
push
xchg
frstor
inc
mov
xor
and
andb
out
bnd
adc
mov
js
into
sbb
sub
push
cmp
out
jmp
add
jp
cmpsb
cmpl
pop
mulb
and
adc
cmpl
clc
jl
call
or
loope
mov
add
xchg
xchg
dec
movsl
push
call
and
mov
sbb
adc
bound
stos
mov
sbb
dec
cmp
and
scas
and
testl
mov
jmp
dec
cmp
aas
cmp
loopne
and
idivb
fstps
leave
das
popa
out
lock
and
mov
mov
mov
inc
inc
cmp
and
and
fwait
xchg
es
repnz
pop
rcrl
xor
pop
es
push
pop
xchg
dec
pop
adc
xor
xor
aad
loop
dec
xchg
sub
stos
adc
fildll
jp
and
test
push
sbb
cmp
and
xor
fldcw
jo
and
mov
push
add
lcall
das
and
jl
mov
and
imul
pop
push
sbb
in
cltd
pop
ss
andl
sub
insl
andb
cld
sbb
mov
bound
jmp
add
arpl
pushf
lahf
push
shrl
and
adc
loop
outsl
aaa
and
jnp
int3
xor
mov
xor
cs
sub
shrb
or
loopne
shlb
es
and
inc
and
mov
pop
jns
mov
jno
int3
test
test
stc
insl
inc
andb
in
sbb
adc
pop
inc
xor
mov
and
adc
dec
fimull
pop
jle
mov
and
jne
add
popf
insb
xor
sbb
arpl
scas
mov
and
test
xor
sarl
and
fnstcw
cmpb
icebp
cmp
sti
int
add
sub
dec
add
and
and
and
mov
inc
sub
mov
jns
frstor
das
sub
pop
xor
cltd
and
sbb
pop
inc
xchg
adcl
inc
test
xor
jno
add
repz
dec
mov
add
jnp
std
and
xchg
clc
in
sub
out
and
bound
shlb
xchg
mov
ds
jl
lds
and
mov
or
add
shlb
mov
push
jnp
and
and
js
push
sbb
addr16
add
push
stos
repnz
add
ret
mov
cmp
and
stc
jae
mulps
jg
imul
adc
xchg
mov
inc
fcmovb
lock
add
jbe
aas
sbb
repnz
pop
bound
or
call
dec
dec
outsl
push
out
rorw
fisubl
xchg
and
jbe
je
mov
nop
push
inc
push
and
clc
daa
push
and
and
xchg
jg
adc
push
jno
cmp
sub
jle
pop
cli
and
xlat
xchg
and
pop
and
das
and
inc
data16
rclb
xor
outsl
pmulhw
arpl
pop
mov
dec
addr16
and
test
and
push
mov
inc
mov
negl
mov
bound
xchg
cmp
push
hlt
pop
popa
or
and
cmp
fstpt
push
mov
int3
fisubrs
mov
cmpl
and
jle
ja
mov
xor
add
sub
sbb
xchg
lock
arpl
add
dec
and
repnz
aas
jge
or
and
push
xadd
mov
lods
int
and
cli
pop
loope
aas
jb
shl
and
pop
or
scas
mov
and
add
sub
imul
and
daa
mov
push
or
ret
imul
and
push
rorb
and
cmp
fcom
mov
iret
dec
xchg
sub
ficomps
dec
mov
test
shrl
fmul
inc
xlat
sub
add
adc
imul
cwtl
loopne
pushf
and
add
and
dec
jecxz
pop
stc
mov
cmpsl
push
adc
xchg
sub
cld
andb
and
lahf
loop
cmp
push
fadd
sbb
pop
pushf
movsl
movsb
jnp
or
push
xor
pop
mov
or
lcall
mov
repnz
and
and
in
sub
mov
sbb
sbb
xchg
and
dec
or
inc
out
xor
pop
and
enter
and
adc
sub
aad
and
inc
in
and
icebp
js
dec
into
stos
and
ss
mov
and
pop
jnp
dec
out
ficoml
dec
cmp
cld
jle
and
lret
and
aad
mov
daa
mov
dec
mov
mov
xchg
dec
loopne
repz
and
sub
loopne
cmp
jne
and
push
inc
and
divl
dec
and
and
pop
lret
mov
jle
rorb
xor
and
fs
movsb
ljmp
cmp
mov
dec
cmp
arpl
cmp
mov
loope
outsl
outsb
push
cmp
movsb
pop
lods
xor
imul
xor
shrd
jmp
xchg
mov
jge
lock
shll
adc
arpl
and
rorb
xor
mov
or
sarl
xchg
popf
call
jp
loope
mov
aaa
xor
add
test
xchg
fwait
bound
inc
cltd
leave
mov
xor
jmp
push
sbb
mov
pop
add
mov
add
jns
arpl
scas
hlt
cwtl
adc
sbb
stc
orl
push
jb
dec
pop
inc
repz
mull
lret
stos
add
bound
fcoml
cmp
dec
cld
arpl
out
mov
and
fdivl
in
loop
jns
js
inc
inc
leave
xlat
aam
and
insl
int
sub
and
pusha
call
cmp
into
add
pushf
mov
test
inc
mov
mov
pop
lods
jb
popa
insb
jns
mov
pop
mov
iret
jns
adc
dec
test
or
xchg
mov
xor
pop
addr16
push
in
in
out
nop
out
iret
outsl
xchg
cmp
push
test
bound
xbegin
mov
inc
lcall
sti
iret
popa
aas
arpl
pop
inc
add
dec
ret
dec
and
sub
stos
jge
cmpsb
shr
imul
xchg
lds
pushf
outsl
cmp
jp
fwait
loop
mov
inc
and
stc
dec
fisttps
addb
sub
xchg
fwait
jge
ret
mov
add
and
mov
mov
cmp
push
add
ja
mov
inc
repz
adc
push
or
sbb
push
cmp
mov
jbe
clc
jle
xchg
mov
mov
imul
jbe
cmp
xchg
sbb
adc
adc
add
pushf
sub
loopne
mov
cmp
and
pusha
fisubrs
outsb
sub
mov
or
lods
loope
fisubl
lods
adc
scas
lods
lret
sub
stos
add
jb
fdivrp
cmc
inc
lods
mov
and
shrl
inc
mov
insl
lock
inc
cli
jge
add
repz
lods
and
clc
arpl
cmp
dec
loopne
aas
aam
filds
call
clc
xor
push
inc
lea
call
jns
adc
push
dec
mov
push
dec
or
fisttpl
out
ljmp
test
cmpsb
dec
sub
jge
mov
ret
stos
repz
icebp
gs
lock
popa
movsb
in
int3
lods
ljmp
fs
or
shlb
pop
pop
fwait
adc
lock
lret
add
pushf
mov
sub
adc
scas
mov
stos
cmpsl
mov
lods
pop
push
nop
add
pushl
ret
mov
flds
push
sbbb
lods
dec
dec
loop
dec
cmpsl
icebp
int
mov
cmpsb
ja
mov
icebp
xor
stos
std
or
cs
or
sarl
fadd
mov
adc
add
pushf
lea
or
int3
mov
sbb
xchg
cmp
mov
fsubrl
dec
test
fbld
xor
xchg
pop
rolb
adc
jb
pop
scas
je
rcr
nop
inc
pop
jnp
inc
mov
push
imul
jmp
loop
add
sub
shlb
mov
add
jns
out
mov
cmp
jo
cltd
xchg
xor
adc
outsb
cmp
add
mov
scas
or
add
push
gs
jne
jae
jb
outsl
jae
push
call
jmp
pusha
mov
call
push
pushf
pushl
popl
mov
pushf
mov
lea
jmp
push
xor
mov
stc
push
ror
jmp
pusha
mov
movw
lea
jmp
movl
push
call
cmp
add
mov
mov
push
pushf
push
pushl
ret
lea
jne
and
stc
xorb
not
pop
pusha
pusha
push
mov
lea
jmp
mov
pushf
mov
mov
pushf
lea
jmp
pushf
mov
push
call
jmp
cbtw
movw
call
test
mov
bsf
rcl
btr
movzbl
mov
cmc
clc
add
push
pushf
pusha
call
mov
pushf
lea
jmp
push
jmp
mov
pushf
jmp
pushl
pushf
popl
pushl
jmp
test
and
pusha
test
clc
test
cmp
call
pushl
push
jmp
jmp
mov
push
jmp
pushf
mov
call
rol
movzww
jmp
call
pusha
test
sub
pushf
pushl
add
call
test
stc
bt
and
bt
cmp
push
jmp
push
mov
rcr
sub
mov
clc
sub
movl
shl
call
call
pushf
rdtsc
mov
pushf
call
pushf
lea
jne
sub
xorb
not
pusha
lea
mov
mov
movl
pushf
pushl
lea
jmp
mov
push
pushf
lea
jmp
test
and
rcl
mov
stc
jmp
jmp
mov
jmp
mov
push
jmp
pushl
popl
push
pushf
movb
lea
jmp
pushf
movb
pushf
pushf
mov
pushf
lea
jmp
push
movb
mov
push
mov
movb
lea
jmp
mov
clc
add
jmp
adc
pushl
movzbl
bswap
push
shl
dec
mov
neg
push
pop
xor
jl
bt
bswap
stc
call
movsbw
push
mov
call
call
pusha
lea
je
stc
xor
call
mov
pushf
lea
jmp
add
cmp
sub
jmp
call
neg
rcr
test
mov
shl
mov
btc
jmp
jmp
pushl
popl
mov
pushf
lea
jmp
mov
jmp
movb
push
mov
mov
lea
jmp
pusha
pushf
call
clc
test
pushl
pushf
bt
clc
add
std
sub
jl
pushf
mov
pushl
popf
pusha
mov
push
pushf
lea
jmp
mov
pushl
jmp
mov
pushl
lea
jmp
mov
movb
lea
jmp
mov
push
pushf
mov
push
lea
jmp
mov
pusha
pushf
mov
call
pushf
mov
mov
call
pushf
mov
pusha
call
lea
jne
lea
jmp
push
not
mov
lea
pop
pushf
bswap
mov
mov
mov
mov
mov
pushl
ret
mov
pushf
lea
jmp
call
bswap
mov
pushf
lea
lea
js
mov
jmp
pushl
popl
pushf
push
mov
lea
jmp
cmc
clc
pushf
shrd
mov
jmp
pusha
mov
clc
call
pushf
mov
pushf
call
mov
mov
movb
push
lea
jmp
jg
seto
setl
mov
jmp
pushf
pushl
popl
pushl
push
lea
jmp
mov
lea
jb
pushf
push
push
pushf
popl
call
push
mov
push
pusha
mov
push
lea
jmp
jmp
push
jmp
jmp
call
pushf
popl
lea
ja
pusha
pushf
pushf
pushl
popl
push
pushf
push
pushf
lea
jmp
mov
call
mov
xchg
mov
adc
add
sub
add
mov
pushf
cmc
pushf
bt
sub
call
cmp
pusha
pushl
movb
jmp
pushf
pusha
push
mov
mov
pushf
lea
jmp
mov
push
lea
jmp
pusha
mov
pusha
pushl
push
mov
call
pushf
push
not
lea
mov
jmp
neg
pushf
neg
setbe
movzbl
pushf
cmp
cmc
pushf
xor
pushl
clc
stc
add
clc
cmp
pusha
xor
pushf
jmp
pushf
mov
call
pushf
popl
call
cmc
add
movzbl
clc
mov
pushl
call
pusha
rcl
aaa
pushl
popf
mov
mov
xchg
bswap
not
mov
cwtl
push
mov
lea
pushf
movzbl
setbe
mov
setb
movsbw
lea
lea
mov
jmp
cpuid
clc
push
sub
movw
cmp
cmc
call
mov
pushf
push
pusha
call
push
push
mov
call
jmp
daa
cmc
bts
btc
mov
bt
pusha
add
pushl
mov
pusha
pushf
popl
pushf
call
mov
pushl
lea
jmp
movsbl
not
sub
add
add
btc
movsbw
dec
neg
shr
cmp
shld
clc
and
rcl
sbb
cmc
mov
cmc
call
cwtl
jmp
xchg
clc
mov
sar
cmp
dec
mov
bt
stc
not
cmp
call
push
mov
push
call
pushl
call
neg
sar
rcr
mov
and
rcl
shl
cmp
mov
call
xor
cmc
jmp
sub
pusha
bt
stc
cmc
neg
stc
cmc
ror
bt
sub
cmp
mov
pushf
test
sub
pushf
pushl
pushf
pushf
mov
jmp
mov
call
cmp
add
bt
pusha
pushf
movl
xor
pushf
pushf
call
and
jmp
push
pushf
jmp
push
pop
mov
lea
lea
lea
call
pushl
mov
jmp
mov
mov
pusha
movl
movl
mov
pushf
mov
movb
movb
lea
jmp
pop
pushf
movl
push
lea
jmp
pushf
popl
push
lea
jle
pushf
movb
pushl
popl
pusha
push
pushf
lea
jmp
xadd
mov
setle
ror
pusha
and
mov
pushl
mov
cmp
clc
add
bt
lea
jg
push
shrd
call
pushl
popl
movb
movw
mov
movl
lea
jmp
mov
pusha
mov
push
movb
movb
pushf
lea
jmp
pushf
jmp
pusha
mov
mov
pusha
mov
jmp
movw
mov
mov
jmp
pushf
mov
shrd
mov
jmp
mov
push
mov
push
mov
mov
push
lea
jmp
call
lea
push
bswap
sub
shld
pusha
bswap
shld
lea
not
shld
movzbw
shl
mov
movsbl
bsr
mov
add
dec
mov
inc
inc
shld
lea
ror
sub
movsbw
setae
dec
lea
lea
jmp
jmp
mov
mov
pushl
ret
mov
pushf
mov
lea
ja
pusha
pusha
mov
mov
pushf
mov
lea
jmp
push
mov
lea
jp
push
setnp
call
cmc
add
movb
pushf
lea
jno
pusha
mov
pusha
lea
jmp
jmp
push
jmp
push
push
call
dec
setno
rol
mov
btr
adc
pusha
add
inc
xor
add
or
shr
sar
mov
cmc
pusha
shl
pushl
clc
shr
cmp
mov
lea
jne
or
bt
call
pusha
pushl
movb
jmp
rcr
xchg
stc
cmp
movzbl
neg
add
setg
add
not
dec
movsbw
rcr
ror
bt
clc
btc
inc
add
bswap
pusha
clc
pushf
add
bsf
shl
btc
mov
bt
call
mov
pushf
pushf
lea
jne
bts
or
bt
mov
call
lea
jne
je
dec
xorb
setns
pop
pusha
pushf
push
lea
jmp
call
mov
movw
lea
jmp
mov
pushf
jmp
jmp
push
mov
jmp
bt
shl
pushl
pushf
jmp
pusha
mov
pushf
mov
pusha
mov
mov
lea
jne
push
pusha
pushl
pushf
mov
jmp
movb
mov
pushf
mov
jmp
pushf
push
inc
pushf
mov
lea
jmp
jmp
clc
mov
pusha
stc
bt
sub
push
mov
pushl
pushf
lea
jmp
rcl
mov
movb
xor
cmc
clc
add
pushf
mov
movw
mov
pushl
ret
pushf
jmp
mov
jmp
rdtsc
mov
shrd
lea
pop
rol
movzbw
pop
rcl
cmp
pop
call
pushf
bt
bt
or
mov
pusha
stc
cmp
pusha
add
mov
pushf
pushf
lea
jmp
jmp
btc
bswap
bt
lea
ror
sub
add
mov
push
ror
ror
sub
stc
rcr
add
mov
bt
sar
mov
bts
xor
add
bswap
mov
inc
jmp
jmp
add
mov
push
clc
xor
pushl
call
push
mov
pusha
pushf
popl
pushl
jmp
cmc
clc
pushf
ror
bt
test
test
clc
not
push
cmc
jmp
push
mov
push
mov
push
pushf
push
movb
mov
jmp
jmp
pushf
jmp
jmp
call
pusha
mov
mov
movb
call
test
add
pusha
mov
pusha
pushl
ret
pusha
jmp
call
sub
movb
pusha
mov
pushf
pushl
movb
mov
lea
jmp
or
jmp
movl
mov
pushf
mov
lea
jmp
mov
pushf
jmp
push
lea
jmp
sub
cmc
and
pusha
jmp
pushl
mov
pushf
mov
movb
movw
lea
jmp
call
mov
movl
mov
pushl
jmp
cmpl
pushf
mov
mov
call
push
mov
pushf
xchg
jno
push
call
mov
mov
push
jmp
mov
test
cmp
pushf
sub
stc
jmp
pushf
pusha
not
mov
pusha
mov
jmp
push
movb
pushl
popl
pushl
pusha
lea
jmp
mov
movw
pusha
lea
jmp
jmp
push
movb
mov
movb
mov
jmp
mov
movb
mov
push
movb
lea
jmp
add
xadd
mov
sets
cmc
mov
stc
stc
bt
jmp
mov
pusha
movb
mov
lea
jmp
pusha
bts
inc
cmc
mov
bt
stc
xor
jmp
sete
mov
btc
bswap
mov
not
mov
cmc
add
jmp
bt
not
pushf
clc
sub
pushf
pusha
mov
and
mov
push
jmp
lea
je
pushf
cmp
call
clc
cmp
or
pushf
xor
call
pushl
popf
movb
pushf
pushf
pusha
lea
jmp
mov
pushl
pushf
push
movb
lea
jmp
call
pushf
jmp
movb
jmp
call
pushf
popl
mov
call
mov
call
pushf
pusha
pushl
popl
pushf
push
lea
jmp
mov
lea
jne
call
cmc
add
pushf
pushl
call
pushf
mov
push
pusha
push
pushf
lea
jmp
movw
lea
clc
cmp
add
pusha
xor
cmp
sub
pushf
movb
call
call
movl
push
inc
pushf
decl
jmp
jmp
lea
pushf
jmp
jmp
mov
call
pushf
popl
pusha
pushl
popl
movb
movl
movb
pushf
lea
jmp
call
movzbw
mov
call
pushf
popl
pushl
pusha
call
add
push
jmp
push
mov
call
movsbl
movzbw
mov
jmp
pushl
pushf
mov
mov
pushf
mov
pushf
mov
call
mov
movw
mov
mov
lea
jmp
sub
stc
clc
add
pushf
pushf
popl
push
pushf
pushl
popl
push
pushf
movb
movw
lea
jmp
call
pushl
popl
pushf
mov
lea
jmp
and
bt
stc
jmp
jmp
bt
sub
call
pusha
mov
call
mov
mov
movw
movw
pushl
ret
rep
bsr
jmp
bswap
sets
not
mov
dec
inc
shl
bt
sub
mov
lea
dec
bt
pusha
rol
inc
add
xor
call
pushl
popl
movl
movb
lea
jmp
lea
jno
pusha
mov
movw
pushf
movw
pusha
lea
jmp
movzbw
pop
ror
call
stc
or
lahf
aas
mov
bsr
aaa
shl
aam
mov
push
sub
push
mul
pusha
mov
lea
jae
mov
call
inc
bt
stc
add
test
clc
call
and
aas
shr
aaa
mov
or
rcr
mov
cmp
call
jmp
mov
movb
pushf
jmp
mov
push
mov
push
pusha
lea
jmp
cld
not
call
xchg
push
call
div
call
mov
movl
push
pushf
mov
lea
jmp
shld
shl
movzbl
sar
bt
shrd
xor
btr
add
rol
test
xor
mov
push
inc
dec
and
or
cmc
movzbl
xor
bswap
shrd
sub
cmc
call
lea
cpuid
cmc
pusha
stc
sub
push
clc
clc
pusha
cmpl
push
mov
pushf
pushf
jmp
cmc
call
pushf
pusha
mov
inc
mov
movw
mov
pusha
jmp
add
mov
call
aas
mov
rcl
xor
mov
push
movb
add
jmp
sub
shld
movzbl
bts
not
jmp
sub
jmp
pusha
mov
pushf
pushf
pushl
pushf
lea
jmp
cwtl
push
push
mov
cmc
sub
mov
pushf
jmp
mov
call
pushl
popl
pushf
lea
jmp
movl
mov
movw
jmp
call
pushf
popl
push
pushl
popl
pusha
pushf
lea
jmp
stc
push
add
mov
call
pushl
popl
movb
mov
mov
movb
lea
jmp
mov
movb
mov
jmp
adc
sbb
and
xor
movzbl
push
xor
push
pusha
jmp
push
sub
stc
shl
call
call
mov
pusha
pushf
pushf
pushf
lea
jmp
mov
pushl
pushf
lea
jmp
pusha
call
push
pusha
mov
movw
mov
pusha
jmp
call
std
bt
call
pushf
mov
push
movl
call
push
lea
inc
seto
bts
ror
sub
bswap
lea
movzbl
dec
ror
bts
cmc
rol
pusha
shrd
stc
xor
shrd
call
mov
shld
mov
call
dec
stc
xor
clc
cmc
jmp
lea
jmp
mov
movb
pushf
popl
movb
pushl
popl
pushf
push
lea
jmp
test
aam
test
mov
jmp
not
mov
adc
mov
pushf
sub
mov
shr
push
pusha
mov
jmp
mov
pushl
call
pushl
popl
mov
movw
lea
jmp
pushl
popl
movl
lea
jmp
jmp
bt
xor
call
bt
add
push
pushl
pushl
push
lea
jmp
rcr
sbb
mov
jmp
call
call
mov
std
not
mov
push
pushf
cld
pushf
pushl
lea
jbe
push
rep
call
mov
push
pusha
pushf
movw
lea
jmp
pushf
pusha
pushf
call
jmp
pushf
mov
push
call
shl
pushf
movzbl
stc
jmp
pusha
mov
mov
pusha
lea
jge
push
pusha
pushf
mov
pusha
mov
push
jmp
jmp
jmp
jmp
jmp
mov
mov
push
pushf
lea
jmp
pushf
movb
pushl
popl
pusha
mov
push
movb
lea
jmp
mov
pushf
not
mov
movsbl
mov
movsbl
movsbw
setl
movsbw
pushf
popl
shld
sub
mov
adc
pushl
popl
inc
seta
stc
shl
movl
add
cmc
shl
sub
mov
shl
sar
bsf
push
xor
bt
bswap
seta
rcl
btc
ror
movzbl
lea
movsbw
ror
sub
sub
push
rcl
xadd
cmp
lea
pushl
bt
mov
sub
rol
add
movsbw
pusha
lea
js
mov
push
inc
shld
btr
sub
dec
jmp
cmp
pusha
add
call
cmc
test
xor
bt
cmc
pushf
stc
add
pushl
mov
pushl
pusha
push
mov
pushl
ret
pusha
pushl
mov
push
movw
pushf
call
pushf
pushf
call
pushf
pushf
popl
call
pushf
popl
push
movb
call
bt
add
call
jmp
mov
mov
lea
jmp
lea
pushf
call
ror
cmc
call
call
sub
mov
mov
pushf
pusha
lea
jmp
mov
not
lea
push
push
call
jmp
call
call
push
pushf
clc
add
push
call
pushf
call
pusha
mov
movw
pushf
jmp
push
movb
mov
call
lea
jo
pushf
mov
pushf
movb
pusha
lea
jmp
mov
push
pushf
popl
mov
call
call
call
mov
call
pushl
call
push
movb
mov
pusha
mov
mov
call
mov
jmp
mov
pushf
call
mov
movb
lea
jbe
push
mov
pusha
mov
mov
push
call
movl
movw
mov
call
push
mov
pushl
push
pusha
lea
jmp
mov
call
pushf
popl
call
mov
jmp
push
pusha
mov
movb
pusha
jmp
pushf
call
push
dec
call
jmp
not
push
cmc
jmp
pushf
mov
movb
pushf
push
lea
jmp
not
rol
stc
inc
xor
ror
rcr
sub
inc
sub
bts
movzbl
pusha
ror
adc
mov
clc
test
cmc
cmp
xor
jmp
mov
pushf
push
lea
jmp
mov
cmp
btc
lea
ror
mov
cmp
bt
add
movw
pusha
pushf
mov
pushf
push
lea
jmp
pusha
inc
mov
movw
call
jmp
mov
movb
pushf
pushf
lea
jmp
call
pushf
movb
mov
pusha
lea
jmp
push
pusha
pushf
call
not
btc
mov
cmc
bts
mov
jmp
neg
mov
cmc
xor
stc
clc
cmc
add
movb
mov
mov
movw
mov
pushl
pushf
pushl
ret
pusha
mov
mov
mov
mov
mov
call
or
cmp
bsr
bswap
not
add
sub
neg
add
bsf
xor
neg
neg
shr
sub
bts
and
stc
adc
jmp
aam
call
bt
bt
stc
ror
test
neg
bt
jbe
lea
stc
jmp
jmp
mov
pushf
pushl
pusha
pushl
mov
call
add
push
mov
pusha
pushl
lea
jmp
mov
pushf
pushl
mov
jmp
dec
push
rol
clc
cmc
lea
pop
xor
bswap
sub
shr
movzbl
setbe
shld
lea
bt
mov
jmp
sub
rcl
rol
mov
sub
stc
neg
bswap
push
ror
cmc
adc
sub
sar
mov
bt
cmc
clc
sub
cmc
add
pushf
jmp
call
mov
mov
mov
lea
jmp
jmp
shr
sar
bsf
shrd
mov
neg
shr
pushf
add
lea
jo
not
not
mov
pushf
mov
pushf
lea
jmp
jmp
pusha
pusha
shld
pushf
call
pushf
mov
call
jmp
call
movl
movb
rcr
xor
rcl
mov
test
xor
btr
movzbl
rol
bswap
movsbw
rcr
btr
ror
xchg
or
bswap
lea
sbb
add
sbb
sub
test
mov
movsbw
and
mov
not
mov
ror
add
call
jmp
pushf
popl
call
jmp
call
mov
push
pushf
pushf
lea
jmp
pushf
popl
pushf
pushf
pushf
movb
pushl
popl
pushl
push
lea
jmp
pushf
jmp
jmp
pushf
bt
shr
pushf
mov
call
rcl
mov
cmp
add
bt
jmp
jmp
jmp
call
decl
push
lea
jne
jmp
mov
pushf
pushf
mov
lea
jmp
xlat
out
fdivrs
cld
fdivrs
ret
push
int3
fdivrs
fdivrs
enter
enter
ret
fdivrs
enter
rcr
ds
fdivrs
repz
rcr
fwait
cld
fdivrs
in
fdivrs
cli
fdivrs
enter
stc
fdivrs
fdivrs
hlt
fdivrs
loope
jge
out
fdivrs
cld
fdivrs
fdivrs
repz
out
fdivrs
fdivrs
ret
fdivrs
enter
iret
fdivrs
int3
fdivrs
rcr
fucomp
fdivrs
int3
fdivrs
enter
fdivrs
enter
loope
jge
jecxz
jge
iret
fdivrs
enter
leave
fdivrs
loop
jge
repz
repz
iret
fdivrs
sti
fdivrs
out
fdivrs
int3
fdivrs
enter
cli
fdivrs
in
fdivrs
rcr
dec
rcr
gs
fdivrs
leave
fdivrs
into
fdivrs
ds
fdivrs
fdivrs
jecxz
jge
cmc
fdivrs
int3
fdivrs
out
fdivrs
loopne
jge
iret
fdivrs
cld
fdivrs
cmc
fdivrs
repz
out
fdivrs
leave
fdivrs
fdivrs
enter
loope
jge
sti
fdivrs
fdivrs
cli
fdivrs
fdivrs
int3
fdivrs
stc
fdivrs
jecxz
jge
data16
fdivrs
hlt
fdivrs
std
fdivrs
fdivrs
cld
fdivrs
repnz
fdivrs
int3
fdivrs
enter
enter
fdivrs
in
fdivrs
enter
fdivrs
repnz
rcr
mov
fdivrs
fdivrs
into
fdivrs
cli
fdivrs
sti
fdivrs
cli
fdivrs
loop
jge
cli
fdivrs
loope
jge
fdivrs
stc
fdivrs
out
fdivrs
ret
fdivrs
out
fdivrs
sti
fdivrs
loop
jge
jmp
jge
loope
jge
dec
rcr
pusha
std
fdivrs
into
fdivrs
loope
jge
int3
fdivrs
in
fdivrs
iret
fdivrs
ret
ds
fdivrs
int3
fdivrs
ret
push
cmc
fdivrs
lahf
enter
ret
push
cmc
fdivrs
fdivrs
ret
jbe
fdivrs
cmc
fdivrs
int3
fdivrs
enter
ret
push
cmc
fdivrs
enter
out
fdivrs
ret
push
cmc
fdivrs
mov
fdivrs
ret
push
cmc
fdivrs
enter
iret
fdivrs
ret
push
cmc
fdivrs
std
fdivrs
enter
ret
push
cmc
fdivrs
ret
fdivrs
ret
jbe
fdivrs
cmc
fdivrs
rcr
pusha
std
fdivrs
ret
push
cmc
fdivrs
iret
fdivrs
fdivrs
ret
push
cmc
fdivrs
cld
fdivrs
sti
fdivrs
ret
push
cmc
fdivrs
enter
loop
jge
ret
push
cmc
fdivrs
in
fdivrs
ret
jbe
fdivrs
cmc
fdivrs
fdivrs
repz
ret
push
cmc
fdivrs
iret
fdivrs
jmp
jge
ret
push
cmc
fdivrs
stc
fdivrs
std
fdivrs
jecxz
jge
loopne
jge
sti
fdivrs
int3
fdivrs
int3
fdivrs
ret
jle
fdivrs
enter
loopne
jge
fdivrs
leave
fdivrs
hlt
fdivrs
int3
fdivrs
fdivrs
iret
fdivrs
int3
fdivrs
cld
fdivrs
fdivrs
int3
fdivrs
std
fdivrs
int3
fdivrs
loopne
jge
iret
fdivrs
ret
ds
fdivrs
fdivrs
hlt
fdivrs
std
fdivrs
enter
stc
fdivrs
rcr
mov
std
fdivrs
hlt
fdivrs
loop
jge
sti
fdivrs
int3
fdivrs
cld
fdivrs
fdivrs
out
fdivrs
rcr
fucomp
fdivrs
in
fdivrs
iret
fdivrs
repz
jmp
jge
pusha
std
fdivrs
out
fdivrs
cli
fdivrs
hlt
fdivrs
std
fdivrs
fdivrs
fdivrs
fdivrs
iret
fdivrs
fdivrs
repz
cli
fdivrs
leave
fdivrs
fdivrs
fdivrs
cmc
fdivrs
repz
loope
jge
pop
repnz
jmp
pushf
mov
push
call
pushf
pushl
popl
push
movb
pushf
movb
lea
jmp
bswap
ror
aam
mov
pushf
bt
cmc
sub
jmp
shld
btr
shl
xorb
bswap
lea
jmp
jmp
pushf
popl
jmp
add
add
mov
lea
jb
ror
push
neg
call
movb
lea
jns
jne
btr
shld
lea
not
xorb
call
mov
push
dec
notl
rol
or
push
mov
test
clc
jmp
push
pusha
push
pusha
pushf
lea
jmp
lea
jae
push
pushl
mov
call
mov
jmp
bswap
shr
mov
jl
mov
cmp
cmp
sub
jmp
mov
pushf
mov
ror
bt
mov
pushf
cmc
stc
sub
pusha
cmp
pushf
pushf
shr
jmp
test
btc
sub
lea
push
rcl
movzbl
test
call
movsbl
xchg
xchg
pushf
popl
clc
sar
bts
bswap
push
jmp
jmp
stc
mov
jmp
or
dec
adc
mov
call
xor
call
pushl
popl
pushl
pushf
mov
pushf
lea
jmp
test
mov
pusha
pusha
clc
cmp
sub
call
movb
call
movsbw
inc
movzbl
movsbl
bswap
sub
bswap
pusha
pusha
dec
rcl
rol
rcl
lea
rol
movzbw
xor
pushf
sub
btc
rcl
sar
movzbl
pushf
bsf
shl
movsbw
mov
cmc
push
test
push
xor
clc
add
call
pushf
call
btc
dec
cmp
inc
lea
test
test
cmp
pushf
call
divl
push
pusha
mov
pushf
call
xchg
bt
mov
bt
test
sub
pushf
pusha
lea
jne
pushf
clc
pusha
xor
call
clc
bt
bt
cmp
lea
call
pushf
mov
pushf
pusha
mov
jmp
pusha
movb
rep
inc
neg
rcr
mov
rol
btc
mov
push
clc
bt
push
pushl
popf
movb
push
lea
jmp
shr
jmp
pushf
lea
ja
btr
pushf
lea
bts
dec
lea
pusha
xadd
bt
sub
sar
movzbw
lea
mov
and
stc
bts
clc
sub
movsbl
lea
mov
push
movzbl
movzbw
pushf
pushf
popl
not
movsbl
bswap
call
call
call
mov
push
pusha
mov
pushl
lea
jmp
mov
call
pushf
call
pushl
mov
jmp
pusha
mov
pushf
mov
lea
jmp
jmp
mov
pushl
push
mov
movb
mov
movl
jmp
rol
jmp
push
lea
jne
sub
btr
rcl
mov
cmc
bt
call
call
call
pushf
jmp
pushf
mov
pushf
call
mov
clc
shr
push
add
setge
pusha
mov
call
call
dec
jmp
call
sar
cmc
mov
jmp
add
bt
lea
jb
shld
pushf
call
pushf
popl
pusha
call
inc
mov
call
pushl
popf
mov
pusha
pushf
lea
jmp
movb
mov
pusha
jmp
mov
call
shr
and
not
mov
cmc
sub
push
cmp
pushl
call
push
mov
push
pushf
push
lea
jmp
xchg
movsbl
movsbw
mov
push
cld
mov
call
mov
call
push
mov
pusha
push
lea
jnp
push
jmp
clc
neg
pushf
add
cmc
xor
clc
add
movb
call
pushf
popl
mov
pushl
popl
push
push
lea
jmp
mov
pushf
pushf
jmp
clc
not
pushf
stc
call
bsf
mov
push
lea
js
pushf
add
pusha
push
mov
lea
jmp
mov
pushl
mov
pop
lea
jo
lea
pusha
jmp
sub
call
pushf
mov
pusha
call
pushf
mov
pushl
movw
mov
push
lea
jmp
call
mov
mov
pushf
lea
jmp
neg
jmp
lea
push
xor
test
mov
pushf
sub
movb
call
movb
mov
jmp
bsr
shr
bsf
mov
bt
push
add
movl
jmp
btr
aas
pushf
mov
bt
sbb
cmc
btr
mov
call
call
mov
movzbw
push
pushf
xchg
not
pushf
popl
pusha
cmc
movzbl
xadd
mov
shl
bts
bt
test
pushl
popl
call
jmp
cmp
sub
pusha
jmp
mov
pushf
mov
pusha
push
lea
jne
pusha
mov
pusha
lea
jmp
pushl
popf
mov
pusha
pushf
lea
jmp
bt
stc
stc
sub
jmp
add
mov
pusha
movb
mov
push
pushf
movw
lea
jmp
