push
out
lock
into
cmp
add
sub
add
push
add
lcall
ret
in
add
addl
push
pushl
call
leave
ret
imul
movl
xor
add
dec
cmp
jge
ds
in
adc
neg
inc
movsb
sub
in
jns
repz
or
sbb
mov
jnp
fistpl
and
inc
pushl
add
jp
std
jg
sbb
pushl
adc
sub
not
pop
adc
sub
leave
ret
adc
jns
jbe
adc
sbb
xorl
push
in
lea
push
lea
xchg
or
in
push
push
push
add
rcrb
sti
push
mov
addl
movsb
inc
outsl
xor
push
dec
ljmp
and
inc
pop
adc
nop
mov
iret
testb
int3
push
push
hlt
push
test
mov
push
stc
incb
push
icebp
dec
das
mov
lock
insb
dec
popa
adc
cld
push
adc
cld
dec
mull
dec
sub
mov
adc
push
pushf
jbe
push
daa
pop
xchg
and
mov
push
call
push
or
stc
adc
rcl
mov
or
ss
testl
sti
mov
clc
ret
jle
les
cld
push
and
rolb
stc
daa
push
std
jb
lods
mov
fwait
sub
xchg
lock
dec
in
inc
xlat
mov
adc
loope
inc
ja
push
loopne
in
xchg
in
dec
ds
jecxz
xchg
pushf
xor
sub
bnd
imul
jmp
jo
xorl
mov
jb
mov
fwait
aaa
in
jle
jbe
pop
hlt
push
push
nop
xor
enter
mov
mov
pop
ret
or
outsb
mov
call
scas
mov
xlat
div
cmp
mov
fisttpll
xor
cltd
add
push
stc
bound
mov
sti
add
add
out
out
mov
and
add
fstpt
adc
add
add
add
pop
lret
lret
imul
push
add
xor
add
mov
sahf
or
imul
add
iret
testl
aas
add
stos
add
ret
jmp
xor
std
or
jnp
idivb
in
fildl
arpl
das
shll
or
mov
jmp
pop
adc
and
mov
rolb
sbb
lods
push
imul
imulb
sti
add
add
adc
rolb
loop
and
cvtps2pd
sti
mov
filds
jns
add
xchg
sbb
rorl
push
das
add
mov
stc
adc
iret
add
and
in
ja
in
jp
nop
call
xor
sub
add
sbb
je
mov
in
pop
cmp
ret
or
jmp
adc
push
outsl
fsubp
test
add
mov
cs
cld
jmp
scas
sti
jbe
jb
cmp
mov
imul
mov
inc
cmp
or
in
mov
xchg
sbb
cmp
push
mov
add
cmp
leave
add
mov
xchg
test
ljmp
stc
pop
fs
push
sbb
lret
cld
fwait
mov
add
add
mov
mov
or
inc
adc
jl
aad
roll
sar
lock
loop
sbb
mov
mov
mov
inc
add
push
or
xchg
clc
int3
inc
idivb
out
pushl
add
addl
jmp
daa
inc
test
fwait
loope
xchg
or
mov
xor
add
in
stc
adcl
pop
test
mov
rcrb
or
mov
je
add
pop
adc
or
sbb
cmp
push
sbb
mov
add
add
inc
stc
inc
les
call
adc
aas
fisubrs
js
xor
add
test
add
in
add
or
inc
lahf
add
mov
outsl
cli
add
push
sbb
fsubrl
fs
pop
mov
push
jne
sub
cs
mov
cmpsl
xchg
inc
out
and
jle
or
inc
sub
das
sub
add
add
or
dec
inc
stc
xorl
mov
push
push
adc
in
push
scas
pop
mov
jnp
dec
xor
sub
hlt
mov
push
jns
xchg
add
subb
outsb
into
mov
push
mov
inc
cmp
shl
inc
cs
cmp
mov
or
inc
dec
shll
or
movsb
adc
push
sbb
inc
xchg
aaa
pop
lock
add
sbb
or
stc
decl
loopne
lock
push
aas
and
loop
mov
mov
sbb
lahf
xor
aas
jecxz
add
fsubrl
adc
stos
or
push
inc
pop
mov
stos
sahf
jg
mov
push
mov
xor
adc
mov
sar
sub
addb
and
loopne
push
jg
push
cwtl
pop
adc
sub
or
jbe
adc
adc
and
enter
and
inc
dec
popf
cs
add
and
nop
jno
xlat
shll
addr16
sbb
aam
pop
push
repnz
or
addb
lret
fidivrl
imul
xor
sti
mov
mov
outsl
sbb
add
pop
test
fistps
sarl
loopne
add
mov
add
adc
push
sub
arpl
bound
or
sub
popf
mov
das
cmp
push
mov
push
outsb
aaa
pop
jo
mov
ja
jmp
jmp
insl
out
cmp
ss
fs
sbb
cmp
movsbl
clc
mov
dec
dec
add
sub
rorl
pop
mov
push
cwtl
subl
call
xchg
inc
jecxz
movsl
add
lods
pop
cmp
mulb
push
mov
mov
rcrb
aaa
mov
mov
pop
std
mov
cmc
into
add
jl
mov
imul
jmp
dec
cli
adc
gs
inc
sbbl
add
mov
add
adc
add
incb
pop
mov
sub
lahf
scas
data16
out
adc
sbb
or
gs
das
mov
push
mov
lahf
mov
xor
push
pop
mov
scas
add
sbb
jecxz
cmp
or
mov
out
mov
xor
fldl
sbb
xor
adc
cmp
loop
add
mov
mov
add
lods
cld
sarl
stos
cmp
inc
xor
das
cld
cmpb
mov
push
dec
addl
roll
shlb
sbbl
pop
ja
lds
lock
mov
or
push
fldcw
ret
outsb
jg
insb
mov
mov
add
pop
jg
test
xor
into
std
dec
aam
xor
lahf
add
inc
testl
mov
lds
test
pop
jle
scas
in
mov
adc
jo
xchg
ljmp
mov
out
mov
add
sub
xlat
icebp
int
std
and
xchg
aam
mov
push
add
mov
jo
adc
stc
aad
push
testl
cmp
out
mov
xchg
fbstp
jmp
push
pop
jp
int
cmpsl
mov
rclb
fsub
and
scas
repnz
push
je
es
je
mov
std
dec
cmpsl
push
adc
orb
sbbb
sub
pop
pop
mov
rolb
add
mov
mov
testb
push
sbbb
inc
icebp
jg
stos
mov
inc
cmp
add
iret
shll
data16
pop
sbb
adc
insb
or
push
adc
pusha
cmc
cli
inc
pop
push
sbb
add
mov
mov
call
loope
cld
mov
ficoml
add
cwtl
shr
push
jmp
xchg
pop
mov
nop
mov
insb
out
adc
xor
mov
sub
xor
stos
mov
loope
cmp
mov
pop
jo
jb
inc
adc
insl
outsb
std
jae
or
xchg
mov
mov
nopl
leave
ja
nop
inc
divb
fwait
pusha
jb
dec
test
jno
clc
int3
lods
pop
jo
loope
sub
cld
out
fdivr
or
inc
push
pop
mov
int3
insl
out
xchg
xorb
add
adc
aad
and
adc
fwait
add
lds
sbb
mov
or
xchg
sub
je
xchg
stc
nop
aas
sbb
jb
and
jl
pop
pop
jge
mov
out
shr
inc
inc
call
sub
clc
push
and
xchg
fidivs
sub
cs
push
imul
loop
loopne
add
sahf
js
shlb
pop
add
add
fs
inc
sbb
movsb
xlat
push
or
push
add
stos
mov
mov
adc
inc
sbb
out
mov
and
add
andl
adc
fnstcw
cmp
add
shr
inc
test
stos
inc
add
mov
imul
push
daa
out
xchg
push
ljmp
pop
hlt
popf
or
add
inc
lds
outsl
mov
ss
xchg
test
inc
das
xor
decb
jmp
jge
ja
mov
sub
popa
mov
mov
in
or
adc
lea
pop
add
clc
loope
int3
pushf
and
add
sti
test
fldt
inc
das
ljmp
addb
enter
pop
loopne
iret
mov
nop
cmp
xor
add
adc
push
jae
lods
ljmp
or
jo
push
fisubs
adc
enter
or
scas
aad
mov
push
and
dec
pushf
jle
add
sbbb
lods
js
loope
loope
ja
and
adc
notb
push
cli
sbb
ret
add
or
mov
sbb
dec
out
scas
push
cs
mov
dec
aad
mov
aaa
insl
mov
fnstsw
xor
and
loopne
add
and
clc
lds
jno
cmpl
ljmp
add
cli
push
aam
lret
jg
add
mov
mov
mov
pop
pusha
push
cmp
adc
outsb
cmp
add
sbb
jmp
inc
mov
fsts
scas
fcmovu
mov
cmp
push
mov
mov
adc
int
push
lret
xor
jp
scas
aad
pop
les
mov
lcall
mov
or
add
jbe
sbb
testl
test
cld
jnp
add
mov
push
decb
fdivl
nop
mov
ds
sub
clc
mov
push
bound
or
xchg
xchg
inc
add
push
ds
insl
sbb
sbb
sub
lcall
fwait
add
push
int3
sub
fcom
std
add
add
mov
sub
mulb
pop
das
cltd
and
paddb
sbb
mov
inc
pop
adc
adc
int3
into
xchg
xchg
test
xlat
sbb
adc
or
nop
xor
leave
ljmp
dec
adc
fld
adc
clc
inc
jns
adcb
sbb
mov
out
mov
jecxz
dec
stos
loop
sub
nop
sbb
push
xor
out
pushf
sub
and
je
scas
mov
aad
into
stos
xor
add
mov
out
mov
or
push
and
test
icebp
adc
sahf
insb
mov
in
sbb
mov
sbb
stos
in
nop
std
aas
push
cld
enter
cmc
hlt
ficompl
rcrb
ret
push
ja
jno
adc
and
rcrb
push
jl
in
pop
cmp
mov
movsb
arpl
cld
cmp
cmp
mov
sub
push
mov
loopne
mov
push
out
outsl
in
cmp
xchg
testl
js
adc
xor
jp
mov
fsub
sub
jge
test
arpl
test
insb
cmpsb
incl
loope
and
pop
push
in
test
adc
addr16
xchg
mov
inc
adc
jbe
adc
sub
adc
mov
pusha
push
push
cmpsl
outsl
cmpsl
or
std
push
and
je
push
add
inc
dec
inc
jo
data16
push
push
pusha
ja
push
add
int3
cmp
inc
mov
push
pusha
pop
pop
push
inc
jecxz
int3
sbb
cld
mov
cmpsb
ret
mov
or
loopne
ds
or
outsl
aad
cltd
aaa
push
mov
pop
je
pop
inc
mov
cmpsb
insl
int3
xor
lret
in
sti
jns
int3
adc
sub
ret
lea
cld
xchg
mov
rcrb
and
clc
aas
int
jmp
daa
ds
mov
cld
test
nop
or
test
jge
cmpsl
cmp
scas
mov
or
adc
insb
lods
in
lods
and
mov
adc
xchg
call
fcmovb
stc
scas
addb
outsl
fwait
jg
shlb
xor
call
cs
adc
jecxz
mov
fwait
sarl
aaa
clc
push
loope
inc
pop
jne
iret
pop
mov
lock
cmpl
pop
loopne
cmp
sub
das
fcomi
lea
loopne
jle
repnz
int
movsl
js
fidivrs
insb
out
push
cmp
insb
pop
sti
mov
shrl
stos
push
push
fs
xchg
mov
sbb
xor
xor
inc
clc
or
sub
or
xor
fidivrs
lea
pop
cmp
sbb
jl
fs
out
pop
out
jbe
push
fwait
inc
push
pop
push
adc
push
shll
cmp
stos
mov
dec
cwtl
je
cmc
pop
xor
lahf
hlt
sbb
xchg
mov
cmpsl
sub
cmp
pop
cld
mov
iret
sbb
push
stc
jmp
lds
add
subl
movsl
xchg
xchg
mov
add
aam
jge
pushf
addl
insl
sub
push
cli
test
insb
sub
lret
lock
push
xchg
add
sub
mov
adc
dec
in
cmp
push
nop
xor
push
cli
jge
push
sub
std
inc
or
xchg
cmp
and
in
addr16
pop
cmp
daa
in
pushf
jb
sub
jge
negb
xchg
test
mov
mov
jnp
daa
lcall
and
clc
daa
pop
mov
sub
orb
cmpsb
shlb
popa
lds
and
fwait
enter
or
adc
pop
movsb
cmpsl
jle
push
cli
fwait
push
in
arpl
add
rcll
push
lret
shrl
push
cmp
sar
fisubs
mov
js
mov
jp
push
mov
add
push
sbb
aam
mov
out
stos
cltd
adc
add
int3
bound
dec
testb
lods
fisttpl
repz
pop
call
rorl
lcall
pop
mov
loopne
pop
aaa
mov
cmp
repz
add
dec
mov
adc
xor
pop
jl
repnz
int
cmp
popa
or
aas
sub
andb
sub
mov
popf
cmp
adc
mov
mov
adcb
mov
lea
cs
pop
mov
scas
jbe
pusha
lcall
cmp
imul
pop
mov
insl
aas
jns
pop
and
xchg
testl
xchg
push
inc
cmp
stc
lcall
fmuls
sbb
pop
cwtl
push
jle
xchg
mov
adc
hlt
mov
je
cmpsl
jmp
cmp
call
mov
or
and
pop
fdivr
mov
jge
mov
and
inc
mov
inc
xchg
stc
mov
or
push
xchg
mov
sbbb
adc
jp
xor
iret
sahf
incb
lahf
add
mov
sub
les
fcoml
clc
or
mov
shl
mov
ds
push
rcrl
scas
or
popf
repz
fsubrs
addr16
sub
jle
jg
add
pop
push
pop
sbb
incl
ja
std
mov
jmp
inc
sub
lcall
push
repnz
aaa
loopne
push
inc
ljmp
sub
inc
jg
inc
push
xchg
out
test
gs
mov
inc
inc
sub
push
push
pop
lock
xchg
adc
push
adc
sub
repz
pmuludq
out
xor
mov
decl
fmuls
push
xchg
inc
stc
frstor
idivl
sbb
lock
adc
inc
pop
cmpsl
stos
std
push
stos
inc
mov
sub
insl
push
adc
jle
scas
dec
ds
lahf
pop
in
dec
mov
lods
mov
insb
sbb
sbb
cmpl
cmc
movsb
fdivrs
pushf
cmp
cmpsl
push
xor
push
hlt
xor
jle
fistps
dec
sub
cwtl
jno
sub
enter
popa
inc
xor
int3
sub
sub
aas
rorb
adc
in
shrb
adc
hlt
push
cwtl
sub
pusha
movsb
jg
and
mov
add
mov
push
out
pusha
push
jle
in
js
aas
shrb
adcb
decb
loopne
dec
aaa
sbb
hlt
loop
addb
mov
cwtl
or
bound
add
or
cwtl
incl
cwtl
clc
adc
xchg
mov
movsb
sbb
and
inc
les
scas
jmp
mov
cmp
mov
decb
add
push
test
out
dec
bound
mov
std
in
loop
xchg
pop
into
adc
ss
ss
mov
mov
sub
pop
inc
jecxz
scas
pop
lods
lcall
sub
inc
push
rcrl
xchg
fsubl
leave
adc
xor
pusha
mov
loope
fistps
pusha
push
ret
ret
incb
sbb
in
ret
in
nop
out
inc
pop
mov
sbb
xor
add
syscall
sub
into
add
pop
push
xor
cli
pop
mov
ret
add
testl
iret
push
jns
push
xchg
mov
shrl
cwtl
add
and
int3
xlat
subl
incl
adcl
xchg
mov
mov
int3
adc
fwait
inc
loopne
add
inc
mov
iret
xor
add
inc
adc
mov
bound
fidivrl
mov
cmp
es
andb
loope
push
sarl
jns
dec
loop
sbb
xor
xorb
shrb
sub
loop
aaa
inc
dec
add
push
sbb
cmp
push
icebp
scas
icebp
pusha
pusha
adcb
clc
sbb
pop
mov
xchg
mov
lds
cmp
fisubs
mov
xchg
adc
or
mov
orw
jl
add
das
lods
mov
jl
push
pop
cs
mov
sarl
enter
or
cmp
icebp
aas
pop
cld
push
add
orb
stos
cmp
das
fidivl
mov
pop
or
in
xadd
lods
push
int3
scas
or
stos
adc
jnp
inc
add
lahf
jb
xor
xor
pop
fsubs
insb
imul
adc
test
loopne
mov
in
jl
arpl
dec
adc
sahf
push
sub
pop
lcall
xor
js
jae
mov
push
mov
arpl
adc
stc
js
mov
cmpsb
add
or
add
add
test
bound
aad
inc
and
dec
sub
mov
push
jb
pop
inc
ljmp
mov
push
sub
nop
xchg
xchg
str
inc
in
bound
pop
subl
dec
js
les
xchg
es
ljmp
pop
insb
pop
dec
xor
repz
adcb
mov
out
mov
rolb
or
cltd
adc
cmpsb
push
aaa
into
push
pop
pop
sahf
loopne
sbb
cli
cld
sbbb
scas
aam
lock
adc
fstpl
jno
jle
jg
rcr
subb
sahf
dec
inc
call
cwtl
pushf
stc
shll
sbb
ret
out
call
inc
insl
or
push
push
test
mov
pop
mov
jge
imul
dec
xchg
roll
pop
cmpsb
add
sbb
clc
pop
cmp
and
notl
add
fbstp
jo
rorl
ret
clc
xchg
sbb
fstpt
cmp
cmpsb
cld
xchg
out
inc
adc
push
shlb
enter
or
lods
mov
sbb
sbb
xchg
pop
sbb
cltd
repnz
push
lods
ljmp
adc
sbb
mov
fidivl
push
lea
push
int
inc
scas
pop
and
xchg
or
dec
clc
add
nop
xchg
sarb
add
adc
clc
mov
iret
xorb
xchg
mov
dec
xchg
sarl
mov
push
ljmp
pop
mov
dec
lret
leave
mov
sti
xor
lods
int
cs
jl
jb
scas
ljmp
jns
xchg
fisubl
pop
mov
add
cld
mov
lret
incb
xlat
cmc
ret
xor
pop
test
loopne
push
pop
test
sbb
popa
fldl2t
movsb
sub
mov
push
jb
xor
in
pushl
xor
rorl
hlt
mov
mov
sbb
jne
push
mov
hlt
rol
cli
pop
add
jnp
add
mov
fistl
mov
mov
inc
mov
fsubrl
repnz
inc
addb
std
jle
push
lea
cld
fisubrl
dec
pusha
cmp
rcrl
nop
movsb
push
int
rep
push
or
pop
enter
hlt
cli
pop
or
sub
test
add
lahf
call
add
push
ljmp
scas
dec
js
sarb
flds
pusha
cmpsl
repz
je
jecxz
mov
inc
push
test
stos
jle
dec
jo
shll
mov
add
roll
insb
jecxz
jnp
mov
call
fsubrp
xchg
stc
xor
adc
sti
mov
movsl
mov
jp
shll
lods
cld
add
repnz
jbe
add
decl
rcl
std
push
mov
in
ret
stos
pop
out
push
stc
shr
pop
cwtl
mov
jle
outsb
and
sub
sbb
cmpsl
sub
push
sub
leave
in
or
cmp
and
add
dec
add
jne
out
fbld
xchg
jecxz
sub
out
pop
mov
call
idivl
jb
roll
das
pop
pushf
filds
imul
and
test
pop
ret
les
out
into
popa
fbld
dec
inc
vpsubsb
scas
mov
add
adc
data16
rorb
dec
dec
cld
mov
call
lcall
mov
repz
inc
dec
lock
inc
shl
or
loopne
push
lea
sub
subb
sti
mov
lea
loope
incl
pusha
pop
clc
aaa
fistpl
addr16
add
jmp
vsubsd
ret
clc
sub
std
jp
adc
fiadds
fiadds
lds
inc
jmp
sahf
ret
add
xchg
mov
mov
divps
mov
out
xor
aaa
aam
xor
jns
jae
lds
fwait
shlb
addr16
jbe
loopne
adc
outsb
dec
or
inc
mov
pop
into
loope
sbb
ds
ret
sbb
cmp
jo
cmp
or
data16
aaa
sbb
jg
sub
ds
cs
iret
add
cmp
scas
cmp
sub
das
jb
cmpsb
loopne
into
imul
mov
nop
sbbl
sbb
xor
aas
cmp
cmp
push
jnp
adcb
std
aas
cld
sbb
push
add
add
insb
add
push
loope
scas
or
test
adc
or
mov
sub
add
mov
adc
fistpl
fs
adc
enter
andl
mov
add
int
std
jge
jp
ret
pop
inc
loopne
icebp
xorl
jle
push
mov
push
and
sub
mov
mov
mov
hlt
jnp
mov
or
mov
mov
test
inc
cmp
jle
idivl
push
test
mov
cwtl
testb
add
fistpl
pop
push
pop
shlb
lret
sbb
pop
cmp
jb
in
test
mov
xor
or
lock
das
push
test
mov
lods
stos
cmp
sarb
shll
xchg
xorl
div
fnstsw
or
fists
fldcw
mov
jmp
shrb
shl
insb
fidivrl
rolb
xchg
shr
cs
pusha
mov
adc
sti
dec
lds
in
int
cmpsl
call
ljmp
iret
out
or
inc
sub
dec
js
nop
les
lock
mov
icebp
imul
bound
in
aas
sti
dec
mov
call
adc
iret
xor
not
xchg
sub
mov
mov
xor
add
mov
ja
mov
in
mov
cs
popf
scas
cwtl
mov
jnp
sahf
sub
inc
fiadds
shr
mov
call
jecxz
test
mov
xor
cmpl
cmp
sub
test
stos
xchg
and
mov
fstl
clc
hlt
in
jl
aaa
inc
lcall
imul
or
mov
dec
push
inc
or
fwait
pushf
or
mov
out
xor
push
mov
mov
call
pop
aas
or
dec
lret
addr16
hlt
mov
ret
add
fdiv
movsl
int
cmp
push
sbb
out
scas
daa
sbb
mov
ficoml
adc
add
lock
mov
and
inc
movsb
subl
leave
adc
outsb
push
cmpsb
icebp
fwait
push
cmp
incb
dec
sti
push
fstpl
push
iret
push
test
mov
push
stos
in
add
push
cmc
or
add
mov
sbbb
nop
and
jmp
std
stos
rcl
adc
fadds
popa
ds
xor
push
or
divl
sti
sub
cltd
mov
cmp
mov
xchg
xchg
arpl
psubusb
ficomps
xchg
mov
stos
fld
fwait
push
jle
cmp
pop
fildll
popf
test
sub
and
inc
ja
push
popf
jmp
loopne
lock
or
outsl
pop
xchg
dec
add
add
xor
mov
jecxz
pop
nop
push
pop
mov
xor
subl
hlt
lcall
inc
test
push
in
pop
or
out
adc
add
push
xchg
test
adc
mov
sub
aam
sbb
cmp
push
pop
xchg
fisubrl
loopne
xchg
jge
mov
and
fists
lahf
cli
popl
fsubl
jmp
cmp
add
icebp
stc
mov
inc
adc
xchg
xor
add
sub
gs
fwait
pushf
pop
pushf
mov
nop
lods
pop
ret
ret
mov
cmp
je
lock
imul
dec
lock
sbb
mov
aas
repnz
sub
popf
arpl
cwtl
or
stc
loop
mov
js
pop
push
in
pop
cli
cld
mov
dec
dec
push
add
push
aas
in
jae
push
add
cmc
cmp
inc
es
dec
pop
jge
inc
add
nop
repnz
pop
std
movsl
ds
adc
push
add
pop
jecxz
or
out
aam
jb
sbb
rclb
les
sbb
xchg
outsb
fcom
inc
push
aam
xchg
fcmovbe
cmp
cmpb
sub
mov
jl
xlat
xchg
stos
ret
mov
in
in
sbb
in
push
ret
fisubl
loope
push
ljmp
sahf
push
mov
setl
xor
and
enter
xchg
out
sti
dec
cli
mov
jle
mov
sbb
sub
fildl
adc
mov
pop
cli
test
lret
mov
sbb
loope
cmp
pop
cld
mov
mov
pop
outsl
or
sub
mov
call
jge
popa
lea
and
shlb
lock
fildl
xor
cmc
adc
pop
push
fs
bound
jecxz
movsl
push
sub
jecxz
js
cmc
cli
xchg
ljmp
lock
mov
pop
cmp
mov
in
or
push
inc
lods
lcall
mov
push
mov
xchg
cld
nop
and
fbld
push
hlt
fs
cmp
pusha
outsl
push
cs
mov
les
clc
sub
and
adc
lods
jl
in
add
pusha
cltd
xor
ret
xor
mov
in
arpl
push
outsl
sbb
lock
add
add
in
out
pusha
stos
mov
ljmp
dec
jp
mov
mov
mov
mov
cmpsb
or
adc
jo
jmp
cli
clc
sahf
shll
push
inc
inc
mov
shrl
ja
cmp
inc
fstl
push
movsb
loop
sub
in
add
push
fsts
insb
dec
das
rcl
insl
cli
dec
push
bound
xor
push
sbb
mov
sahf
cmp
cmc
insb
mov
mov
jmp
rcrl
idiv
xor
les
dec
jmp
mov
mov
sbb
fsubrs
jle
test
jecxz
sbb
lret
xchg
cltd
outsb
lret
add
dec
mov
and
add
leave
or
sahf
clc
testb
mov
mov
dec
jmp
pop
call
jmp
pop
xorb
out
push
jmp
cli
adc
int
mov
sub
pop
cmp
loop
rorl
mov
xlat
jmp
or
push
add
xchg
sti
jne
cmp
add
jle
icebp
cmp
cmp
cmp
enter
call
js
fistps
adc
lret
xchg
mov
pop
or
and
push
cmp
mov
and
sub
inc
jl
imul
inc
pop
loopne
sub
mov
cvtdq2ps
push
jg
mov
imul
enter
inc
loope
cmp
inc
fcmovnu
cmp
cmpsl
lcall
fistl
lods
rcl
and
loop
jmp
test
test
in
je
out
divl
scas
push
or
xor
xor
push
fidivs
adc
leave
xor
rorb
in
mov
pop
pop
insb
jp
in
push
mov
out
mull
pop
sbb
inc
push
popa
push
mov
mov
jnp
sub
daa
sahf
ret
add
lods
pop
cs
movsb
ljmp
out
ja
adc
ja
mov
add
je
rorb
push
loope
and
cmp
fcoml
jge
push
mov
dec
cli
pop
rcrb
inc
mov
xlat
movsb
pop
daa
js
add
test
mov
jno
roll
xchg
lock
ret
hlt
popf
add
movb
loop
test
inc
add
pop
or
mov
pop
cli
sub
mov
dec
sbb
adc
add
jnp
xchg
mov
xor
std
cmp
in
sub
and
sbb
cld
aam
or
pushf
sahf
in
out
xchg
pop
add
inc
pop
mov
ds
lcall
rclb
in
push
dec
dec
lods
xor
mov
mov
adc
push
mov
push
or
xchg
es
nop
mov
pop
arpl
mov
sbb
popf
and
arpl
xor
xchg
mov
repnz
push
or
test
adc
ds
aaa
jo
push
mov
cld
jecxz
adc
mov
mov
cmpsb
call
push
add
jnp
mov
push
cltd
dec
mov
xchg
inc
clc
or
jl
mov
pop
divl
mov
push
jle
inc
lret
push
lret
inc
add
push
push
nop
cmp
notb
sub
jb
sarl
fcmove
cmp
pop
mov
clc
mov
inc
xchg
frstor
fisubl
add
dec
ret
ficoms
push
push
hlt
es
movl
jns
sarb
sub
mov
mov
outsb
push
daa
mov
inc
cltd
scas
pop
data16
ds
push
test
mov
add
into
jge
cld
cmpsb
loopne
lcall
out
add
or
adc
insb
stos
cmp
fbld
push
insb
lods
add
add
add
xchg
out
dec
outsb
std
inc
ficoms
stos
in
add
ret
mov
test
mov
mov
push
add
mov
sbb
jbe
ss
jo
sub
add
jp
or
shlb
xor
movl
jp
js
pop
jo
roll
imul
test
loope
adc
add
mov
dec
pushf
repnz
adcl
scas
mov
mov
pushf
fistpll
pop
cmp
das
call
pop
xchg
ficoms
repz
pop
push
jge
shll
ret
daa
jl
fdivrs
imul
sbb
mov
mov
in
hlt
sbb
ret
dec
in
lret
dec
mov
mov
aam
xor
inc
mov
outsb
sub
lret
fisubrs
je
mov
sub
insb
adc
icebp
push
pop
mov
jb
pop
pop
bound
in
fwait
loope
sub
mov
push
fdiv
push
ret
test
dec
mov
loopne
fsubl
hlt
add
mov
push
mov
mov
ljmp
sub
pusha
xor
push
jmp
push
xchg
cwtl
mov
inc
aaa
lock
push
je
push
xchg
pushf
dec
pop
jns
xlat
fstpt
lret
adc
jge
dec
aas
push
push
into
out
in
aad
jmp
xor
test
jmp
loopne
mov
mov
or
mov
cmpsb
adcl
loop,pt
ja
dec
ss
sub
push
mov
aam
fdivs
xor
cltd
lds
mov
push
stc
sub
push
add
inc
rorb
lods
mov
xor
push
mov
sbb
xlat
in
and
fsubl
or
out
leave
dec
test
ret
lahf
popf
mov
pusha
mov
addb
pop
data16
test
cmp
mov
loopne
js
cmc
in
rcrb
cwtl
push
mov
dec
scas
jp
jmp
cmp
adc
mov
mov
mov
sub
test
xor
pop
xor
mov
and
xchg
sub
add
adc
jae
scas
jmp
jmp
jg
mov
dec
aad
adc
sbb
inc
fmuls
mov
mov
pop
jmp
icebp
sub
fidivs
orb
int
testb
idivb
data16
jo
sbb
add
push
scas
rcrb
cwtl
cmp
push
mov
or
sub
fildl
addr16
jnp
sbb
sbb
hlt
sti
sti
inc
jo
jg
into
sub
xchg
inc
stos
xchg
stos
js,pt
leave
mov
push
mov
jbe
add
stos
jno
test
mov
lahf
dec
in
enter
loopne
xchg
ret
add
faddl
out
scas
leave
ss
pusha
inc
sbb
aas
fisttps
outsl
call
mov
in
shrb
testb
mov
cmp
outsb
loop
rcrl
cmp
addr16
push
dec
add
adc
jae
ret
pop
mov
mov
test
jl
clc
out
add
cltd
add
push
idivb
and
ffreep
adc
ss
adc
jnp
add
add
sbb
movsb
jl
pop
loope
pop
in
sbb
push
sub
sarl
and
cmpsb
xor
pop
cmpsb
out
stos
pop
fstpt
inc
iret
pop
or
scas
data16
xchg
out
sahf
loopne
fildll
mov
pop
lds
test
in
fiadds
or
push
jp
xor
sti
mov
xchg
incl
jle
xchg
add
xor
mov
orb
mov
push
inc
push
mov
icebp
pop
mov
int
or
xchg
fwait
and
jle
push
jp
adc
xor
jg
mov
fwait
outsb
add
mov
jp
mov
jnp
mov
push
std
push
sti
add
and
test
jb
cmp
dec
adc
enter
sbb
aas
in
and
pop
lret
aaa
mov
faddl
adc
fbld
jge
sarl
data16
test
mulb
push
cmp
out
es
mov
mov
push
sbb
or
push
mov
xchg
aad
cmc
jmp
out
fistps
cmpsl
push
inc
jmp
orl
adc
sbb
aam
push
or
inc
inc
mov
or
mov
jbe
xchg
add
pop
add
in
fdivs
xor
jle
jg
ds
lds
push
mov
sbb
cld
fidivl
sub
xchg
outsb
rorb
mov
sbb
push
cmp
scas
hlt
int3
pusha
pop
out
jno
sub
and
pop
add
add
pop
add
out
and
rclb
std
test
addr16
frstor
mov
in
cld
testb
iret
mov
dec
cwtl
leave
fildll
roll
adc
mov
sub
ret
sbb
dec
xchg
call
fistpll
pop
out
out
repz
push
icebp
lds
pop
xchg
mov
in
filds
xchg
sub
xor
dec
testl
int
or
out
mov
pusha
adc
mov
pusha
pop
std
adc
mov
scas
mov
xchg
lret
ret
js
add
in
lock
hlt
jmp
jp
lods
mov
add
insb
pop
sbb
sub
adc
push
jne
sbb
je
mov
mov
and
movsb
jge
jno
sub
inc
jbe
and
push
push
pop
imul
mov
pop
pop
xchg
jecxz
iret
adc
jmp
mov
aam
add
mov
inc
call
cs
adc
jo
pop
or
push
mov
repz
add
nop
scas
fimuls
mov
inc
mov
gs
mov
cld
popa
pop
stc
mov
jmp
xchg
jecxz
icebp
stos
lcall
clc
mov
xchg
mov
ljmp
sbb
cmpl
inc
push
cs
mulb
lret
iret
js
loopne
enter
add
shlb
mov
sti
dec
pop
or
repnz
das
sub
dec
mov
push
sub
and
cmpsl
pop
je
cmpsb
jp
add
and
mov
fmul
bound
into
lret
jmp
mov
es
xor
inc
mov
loope
dec
cli
lret
movsb
mov
cltd
loop
fcoms
pop
mov
dec
jle
clc
hlt
aam
add
mov
movsb
add
mov
cmp
lahf
aad
ljmp
scas
inc
ds
xchg
mov
adc
nop
clc
or
push
adc
jnp
mov
pop
adc
sub
sti
aam
pop
sbb
lods
stc
hlt
mov
or
stc
cld
paddsw
pop
sub
jnp
xchg
lods
push
fldl
sbb
and
pop
notl
sbbl
cli
ljmp
jmp
lret
jp
dec
imul
aaa
sub
add
shll
ljmp
cmp
jo
xchg
pop
adc
test
adc
mov
inc
jecxz
lods
mov
adc
call
rolb
push
cmp
mov
movb
mov
pop
cmp
and
movsl
xor
jecxz
sub
adc
xchg
xchg
mov
scas
pop
sub
jno
icebp
or
hlt
jg
sub
aad
int
jmp
push
int
jbe
mov
and
call
repz
scas
inc
or
pop
jbe
imul
mov
add
insb
mov
ja
mov
and
jg
and
daa
in
mov
ljmp
sub
rcr
pop
push
clc
pop
aam
add
test
pop
shrb
idivb
test
or
mov
fsubr
fists
mov
sarb
cld
call
or
xchg
cmpsb
jae
add
push
push
add
outsb
sub
nop
adc
or
push
cmp
fisttps
stos
jnp
pop
adc
aad
aas
pop
and
mov
dec
mov
push
negl
add
pop
ljmp
loope
xlat
inc
xchg
jns
or
push
adc
ret
inc
js
push
loop
sarl
out
lock
dec
data16
sti
int3
cltd
push
xor
push
push
mov
fsubs
repz
mov
aad
xor
xor
cmc
das
adc
jg
rcll
ss
es
cs
mov
and
vcvtss2si
addb
fdiv
cmpsb
pop
push
popf
out
pop
pop
std
or
rolb
sbbl
and
rol
ret
pop
mov
imull
add
pusha
icebp
mov
add
cmpb
push
call
pop
mov
sbb
add
ja
push
stos
cmp
sbb
sub
loopne
es
js
mov
pop
shlb
in
xchg
jg
and
paddw
or
cli
xor
leave
lods
sub
imul
push
inc
in
pop
add
mov
imul
aam
addr16
xor
or
je
adc
cmp
cs
add
icebp
and
xor
subb
sarb
cld
adc
cwtl
ljmp
insl
xor
push
mov
mov
xorl
mov
shrl
imul
mov
nopl
jl
cmp
adc
daa
gs
jmp
ja
xchg
stos
xor
adc
or
mov
push
lcall
cmp
cmp
adc
cld
mov
add
push
scas
and
fldt
push
mov
jl
jmp
adc
cld
ja
icebp
std
hlt
xlat
add
sbb
ss
popa
sbb
add
pop
mov
nop
push
cmp
sbb
inc
xchg
xchg
lea
repnz
loopne
lods
fwait
mov
pop
movsl
notb
out
mov
notrack
pushl
inc
sbb
lret
jmp
xchg
test
or
js
push
int3
inc
ror
xlat
ret
and
sahf
sbb
inc
xlat
into
es
mov
cmp
add
or
xor
pop
incl
push
push
gs
jnp
out
jmp
lock
mov
sub
loopne
in
xchg
inc
xor
add
sbb
push
lea
fmulp
push
sbb
push
xor
mov
scas
inc
fwait
sbb
sub
push
add
xor
mov
call
pop
rclb
lret
and
shlb
scas
loop
push
fwait
adc
lock
xchg
adc
push
test
dec
jae
mov
sar
pop
test
push
aam
mov
jae
adc
jg
stos
enter
add
mov
or
out
adc
dec
scas
testl
cmp
stos
push
outsl
push
cmc
xchg
mov
xchg
sbb
ds
add
or
sti
lcall
test
sbb
orb
xchg
out
xchg
or
adc
outsl
mov
loop
out
jnp
and
push
mov
dec
add
cmp
adc
add
aas
inc
ret
pop
cli
insb
mov
arpl
movsl
adc
xor
add
nop
pop
sub
mov
sbb
fcoms
popl
and
test
mov
fcomip
and
scas
les
call
je
mov
repnz
push
push
or
jbe
xor
mov
shrl
add
cmp
loop
inc
and
or
or
sbbl
inc
jnp
mov
pop
das
shrb
mov
or
scas
add
cmpsl
fs
jle
rolb
iret
add
lock
and
xchg
mov
adc
mov
mov
jo
fdivrl
pop
shl
sbb
mov
xchg
jg
cmp
outsl
stc
in
dec
test
int3
mov
sub
cmp
ret
decl
je
push
imul
jo
out
dec
xor
sub
xchg
add
ss
sbb
mov
jne
sbb
pop
mov
sbb
cmp
cmpsb
and
inc
stc
test
scas
ret
sub
and
mov
movsb
cli
sbb
jg
mov
mull
mov
aad
pop
ljmp
out
roll
cmp
repnz
push
mov
or
jno
push
pop
and
addr16
adc
add
pusha
cmp
sar
into
push
into
cmc
sbb
jmp
loopne
ss
jo
add
les
stos
mov
scas
push
out
pushf
cmpsl
aaa
popf
clc
pop
mov
jle
sbb
les
les
jo
jno
cmp
jle
mov
lock
ss
push
dec
add
mov
mov
inc
mov
xlat
int3
lcall
adc
mov
inc
sbb
push
in
sub
cld
sahf
cmpsl
gs
cmp
inc
stos
cmpsb
mov
add
clc
mov
nop
or
or
add
ljmp
clc
mov
sbb
outsl
adcb
push
pop
or
push
mov
and
and
sahf
sbb
adc
sub
pop
mov
test
xor
popf
sbbb
adc
insl
pop
and
pusha
jbe
cmpsl
lcall
push
or
push
add
iret
orl
add
out
and
cmp
xchg
decb
int3
mov
call
popf
inc
imul
js
pop
lcall
mov
loopne
aas
or
pop
ficoms
bound
cltd
xchg
cmpsb
data16
push
test
mov
rcll
push
mov
add
jecxz
mov
push
sbb
cmp
shll
xchg
pusha
pop
mov
test
daa
jno
dec
jnp
pop
pushf
fidivl
in
pop
mov
iret
cmp
je
lock
mov
inc
jb
mov
adc
sbb
int3
je
shrb
add
loop
cmp
inc
sti
out
inc
xchg
test
or
leave
cld
pop
sti
movlps
cmpsb
mov
xchg
push
fiaddl
mov
insb
mov
pop
inc
lcall
mov
mov
adc
into
rorb
jg
dec
jne
xorb
subb
jmp
adc
mov
sbb
rcr
lock
cwtl
xchg
or
jl
ret
cmp
aaa
gs
in
push
jno
pop
pop
mov
xchg
out
push
stos
mov
push
cld
adc
fs
dec
stos
dec
push
rcll
out
cmp
pop
loope
sub
mov
out
or
jno
sub
sbb
adc
push
xor
clc
mov
mov
adc
mov
xor
xor
ret
lahf
sub
loopne
int
push
inc
mov
mov
mov
jecxz
adc
jp
xchg
imul
mov
cltd
addl
fstl
adc
daa
push
add
imul
jbe
cmp
or
jbe
add
movsb
ja
mov
dec
xchg
outsl
push
repz
pop
mov
enter
sbb
mov
lods
jmp
inc
and
test
sahf
data16
mov
pusha
sbb
jbe
mov
mov
jg
mov
loope
push
xchg
clc
add
sbb
adc
adc
lods
inc
pushl
hlt
cmpsl
sub
jne
and
sahf
cmp
xor
stos
ss
add
push
lcall
pop
or
cmp
dec
fsubrl
data16
fwait
push
push
pop
addl
mov
jno
fidivs
hlt
or
out
lahf
and
sahf
mov
xchg
int3
mov
lods
sub
movsl
stos
jo
jbe
cmp
mov
xchg
test
mov
clc
xchg
js
test
loop
push
adc
out
add
mov
push
sub
ret
or
arpl
sub
jb
and
sub
stos
push
ljmp
popa
sbbl
pop
jno
fidivs
lret
pop
lret
or
inc
sbb
sbb
push
mov
mov
or
loopne
nop
xchg
bound
sub
iret
mov
sub
or
lret
pushf
int
jo
roll
mov
and
stos
and
jg
out
insb
dec
daa
or
xor
push
adc
shl
inc
xor
xor
and
mov
push
rorb
mov
loope
mov
xlat
ds
add
push
scas
cmp
sbb
enter
cli
xchg
inc
sti
arpl
rcrb
js
das
fimuls
xchg
outsb
xor
mov
movsl
mov
sti
movb
xchg
xchg
testb
mov
std
and
enter
ret
push
lret
popa
mov
jb
adc
mov
jecxz
cli
or
in
cmpsb
sbb
lea
mov
rcll
adc
pop
neg
xlat
cli
push
and
sbb
fxch
mov
fsubrs
xchg
pusha
ret
andb
jge
adc
cmp
addr16
or
cmpsb
lds
rcl
scas
loope
loopne,pn
loope
sub
mov
leave
or
fdivr
sbb
sbb
out
js
and
push
int3
xor
loope
popa
sbb
pop
fldl
hlt
popa
push
pushf
push
and
sbb
aam
data16
inc
mov
xchg
cmpsb
xchg
outsl
fs
cmp
cmp
outsb
xchg
jnp
incl
enter
sub
sbb
test
ljmp
adc
insb
mov
sub
jge
in
scas
into
bound
fists
idiv
scas
mov
xchg
pushf
dec
sub
clc
or
pop
mov
call
dec
leave
ds
das
pop
pop
scas
enter
rcrl
out
or
jns
push
push
cs
les
xchg
add
andb
pop
jle
mov
sub
mov
loopne
mov
cmpsb
dec
lods
cmp
xor
or
mov
mov
jae
sub
lock
or
push
mov
cmc
mov
mov
cli
or
mov
or
stos
inc
push
mov
jp
jae
pop
call
mov
and
nop
and
pop
sbb
hlt
outsl
incl
mov
fs
or
cmc
jmp
fdivr
int
mov
lahf
dec
nop
and
add
adc
fldl
add
sbb
mov
adc
jmp
in
push
std
es
cmpsb
xor
mov
js
shlb
adc
xor
or
xchg
sbb
fsubl
mov
push
pop
add
pop
divl
add
test
pushf
je
dec
push
jp
dec
jg
in
fsub
mov
mov
fadd
pop
mov
jecxz
jp
lret
mov
sar
sub
cmp
cmp
test
jg
lods
xchg
pop
mov
rorl
pop
fidivl
push
push
add
sub
adc
inc
fwait
jg
jo
data16
lock
out
inc
add
repz
cmp
mov
sub
jne
ljmp
jo
sub
push
inc
repz
and
enter
rcrb
sub
sbb
ds
sbb
addr16
and
cmp
cmp
sbb
incl
pop
adc
adc
outsb
clc
xchg
xchg
jmp
scas
sub
jge
call
mov
mov
cwtl
jg
shr
push
out
dec
cs
dec
add
popa
cmp
push
sbb
test
push
jg
sahf
scas
aas
outsl
mov
inc
add
addb
push
fbld
mov
das
fst
pop
clc
xor
fcmove
bound
int3
and
dec
test
jg
mov
sbbl
jnp
jo
adc
xor
cltd
popa
test
rclb
je
subl
rolb
jne
icebp
jp
rcrb
xor
mov
sbb
movsb
push
cwtl
dec
stos
out
push
inc
jp
call
pop
in
push
adc
cmc
jge
testb
and
push
out
jmp
lock
xor
lcall
adc
fwait
xchg
cmpsb
fidivs
pop
or
imul
loope
iret
and
cmp
int3
addr16
jmp
pop
add
fwait
jbe
outsb
push
xor
mov
clc
pop
shrb
mov
push
orl
outsb
popa
ljmp
mull
add
cli
test
add
sbb
insl
cmpsl
cmc
mov
loope
pop
lock
pop
insl
jae
gs
or
or
out
das
push
movl
cmp
or
loop
push
js
push
pusha
fldt
adc
stos
dec
adc
add
mov
inc
push
rorl
mov
lcall
xor
enter
sti
jp
adc
out
cld
xchg
std
add
inc
mov
sub
jle
std
mov
and
lea
pop
fst
sub
pop
insl
inc
cmp
mulb
fdiv
cmpsl
mov
fidivs
fcom
and
sbb
jbe
pop
lahf
and
adcl
sbb
or
xor
sbb
iret
sbb
jae
iret
mov
dec
push
dec
add
mov
mov
xchg
lock
shl
aaa
outsb
or
decb
inc
ss
fnstenv
sbb
jp
lea
mov
les
cli
lods
into
popf
dec
mov
fnstsw
popw
adc
cmp
pop
test
jmp
cmc
test
xorl
dec
enter
dec
jl
sbb
xchg
add
nop
ljmp
mov
adc
les
stos
add
add
jnp
dec
inc
or
sti
out
jne
mov
sub
cmp
jnp
mov
lods
jl
dec
mov
outsl
rcrl
or
stos
addb
add
dec
jle
psadbw
xchg
out
push
orb
hlt
imul
mov
sub
out
addb
jg
and
outsb
clc
dec
insl
pop
daa
lea
jnp
movb
dec
cs
xchg
mov
aaa
pop
mov
jl
or
sub
lcall
and
leave
or
and
inc
mov
loopne
pop
popa
inc
loope
stos
test
out
jle
and
add
add
jp
loop
out
lds
and
sub
add
in
lcall
test
mov
and
out
adc
push
mov
and
push
fadds
xchg
hlt
pop
sbb
stos
leave
push
add
jle
imul
aam
in
pop
std
cli
outsl
mov
ja
scas
out
or
mov
or
and
pop
push
inc
add
sarb
pop
mov
sub
xchg
pop
lret
xchg
clc
imulb
shl
adc
dec
dec
loopne
push
out
cmp
fidivrs
jmp
mov
hlt
jmp
cmp
shr
jge
rclb
cs
mov
aad
xchg
ret
pushl
cmp
cld
sbb
xchg
pop
jbe
sbb
cmovno
mov
mov
frstor
adc
mov
xchg
cltd
pushf
cmp
xchg
clc
das
or
add
mov
lock
mov
jg
jg
adc
xor
pop
daa
mov
fildl
jb
mov
pusha
ljmp
mov
test
adc
pop
daa
repz
xchg
adc
mov
or
mov
sub
add
xchg
popf
enter
mov
insl
stos
addr16
mov
pop
inc
callw
xor
lds
jae
sbb
jp
jmp
data16
cmc
xchg
dec
pusha
dec
inc
push
cli
shl
jle
xchg
push
xchg
mov
jl
jg
ljmp
push
mov
add
inc
pop
jp
jo
mov
loope
sti
jle
mov
jp
sbb
test
std
inc
add
bound
xchg
lods
adc
std
inc
xor
xorb
mov
or
add
sbb
push
add
cli
sbb
lcall
inc
fisubs
cmp
dec
addr16
clc
in
sbb
adc
mov
fwait
subl
adc
and
jl
mov
les
ljmp
mov
lcall
dec
lock
hlt
jg
les
neg
ja
jl
or
rcrb
pusha
xor
cmp
das
sub
popa
add
adc
mov
subl
cli
pusha
sbb
aas
ret
pop
xchg
popf
clc
or
push
dec
ds
adc
into
mov
sub
sarb
pop
add
mov
pusha
jb
mull
mov
push
mov
push
and
dec
add
movsb
inc
pop
xor
sub
push
inc
adc
and
sub
xlat
add
je
push
addr16
add
jp
ja
loop
or
xor
test
jg
mov
in
inc
addr16
addr16
or
lahf
and
mov
cmp
imull
ret
push
inc
repz
mulb
push
dec
movsb
inc
enter
je
scas
mov
gs
cmpb
mov
aas
mov
movsb
pop
pop
mov
inc
not
mov
or
add
push
sbb
mov
fwait
pop
cld
jp
dec
xor
insb
loope
ljmp
adc
scas
lcall
and
scas
icebp
sub
xchg
pop
shlb
inc
cli
jge
divb
in
jns
sbb
jbe
and
cmp
add
jl
icebp
outsl
jns
add
or
push
dec
sbb
pop
loopne
cmp
test
movb
jnp
add
les
inc
ja
sub
mov
jbe
sub
inc
add
sti
push
shll
xchg
cmp
addl
ljmp
test
shll
rcr
inc
shl
stos
loope
popf
rcr
stos
pop
push
pop
or
dec
lea
mov
inc
bound
or
push
cmp
adc
adc
aam
pop
cwtl
es
lods
and
lret
xchg
add
add
mov
inc
jmp
clc
mov
mov
mov
mov
lock
add
cmp
inc
dec
nop
bound
mov
ror
fs
mov
add
shr
call
mov
fsubrl
lret
pop
pusha
mov
cmp
jbe
cmp
inc
pop
push
testl
pop
loopne
movsb
cwtl
mov
mov
repnz
mulb
mov
push
out
decl
add
pop
rolb
in
inc
mov
jo
mov
lahf
shll
pop
mov
fdiv
ret
xorl
cld
fstl
ret
inc
scas
lcall
fwait
rcrl
and
ljmp
divb
mov
test
cmp
pop
adc
les
mov
xchg
pop
push
in
mov
ret
xchg
js
sti
das
push
jmp
xchg
lock
insb
call
movhps
push
mov
movsb
rcrl
dec
add
shrb
clc
js
or
pop
fs
add
mov
sub
sbb
xchg
jmp
pop
push
xlat
cmp
mov
push
sub
shl
mov
std
ljmp
fstps
add
mov
mov
push
jp
add
in
push
mov
es
lahf
xchg
cmc
clc
mov
popa
cld
popa
outsl
mov
lret
push
orb
xlat
lods
aam
pushf
mov
jle
es
mov
sub
add
je
xorl
jg
mov
mov
jmp
jle
add
push
cmp
mov
jecxz
adc
js
dec
and
test
mov
pushf
cmp
testl
lahf
sbb
out
les
xchg
jbe
cltd
call
mov
outsb
mov
loop
jecxz
xchg
inc
and
push
imul
sub
xor
mov
in
xor
mov
inc
fwait
add
inc
push
xor
shll
sahf
dec
rolb
loopne
sbb
xchg
sbb
xchg
cmp
push
mov
imul
sub
sbb
repnz
adc
mov
jle
sub
dec
cmp
ss
insl
cli
jg
test
xchg
lret
inc
xchg
mov
xorl
dec
and
jp
pop
pop
lahf
hlt
in
and
cltd
mov
dec
dec
out
add
mov
and
rol
push
stos
cmc
outsb
add
cmpsl
pusha
es
mov
mov
pop
sbb
std
jo
mov
push
pop
sbb
into
cmp
cwtl
lea
pop
inc
mov
push
push
jne
nop
xchg
rclb
and
jg
shlb
nop
or
cmp
sub
std
ret
aad
or
cmpsl
xchg
dec
movsl
nop
inc
cli
addr16
cmc
or
or
and
not
sbb
add
mov
popa
xor
popa
and
mov
inc
adc
and
out
mov
dec
test
and
mov
dec
mov
divl
cmpsb
jb
push
out
cwtl
push
mov
pop
scas
movsb
or
mov
jno
cli
xlat
sub
cmpsl
dec
add
loope
adc
inc
or
adc
ja
cld
out
jg
xor
shlb
inc
les
out
pop
fidivs
push
and
in
clc
mov
daa
pop
inc
loop
in
fstpt
inc
adc
push
mov
repnz
aam
icebp
and
inc
cmp
xchg
mov
decl
jg
pop
mov
cmp
ret
stos
sbb
jmp
es
mov
test
mov
push
lcall
test
and
xchg
aam
adc
rorb
mov
add
mov
push
cmp
mov
sar
mov
insl
mov
adc
test
xchg
add
add
into
in
clc
push
pop
popf
pop
and
outsl
xor
inc
jae
mov
push
fiadds
xor
lcall
mov
sahf
add
sti
sub
add
add
jmp
mov
sub
leave
xchg
sub
leave
das
fmull
mov
sub
rol
push
ja
cmp
ret
aam
lret
aam
lock
test
add
sbb
push
cmp
nop
pop
jns
repnz
push
jge
mov
inc
mov
xchg
repnz
xchg
jbe
push
hlt
inc
push
outsl
enter
dec
subl
cmpl
pop
xchg
inc
inc
add
sbb
test
sahf
rclb
xchg
push
in
arpl
inc
aas
adc
sub
pop
loope
add
jo
inc
mov
sbb
and
dec
adc
pop
sbb
std
mov
arpl
sahf
push
xor
pushf
and
xorb
pusha
ret
dec
rorl
mov
push
push
mov
mov
inc
push
push
fs
repz
jp
pusha
pop
stos
dec
xchg
dec
pop
jp
sub
cmc
and
mov
mov
adc
lcall
dec
inc
mov
push
lret
sbb
imul
aaa
add
sbb
cli
hlt
mov
lcall
lret
inc
or
xchg
and
mov
pop
push
cmc
scas
sti
out
sbb
pushf
pop
pop
fimull
cs
mov
jmp
adc
aas
sti
jle
std
rolb
cli
enter
orps
subb
pop
ret
pop
icebp
xor
mov
inc
arpl
popa
add
cmc
jecxz
testb
xlat
andl
inc
sub
rorb
mov
xorl
mov
in
fimull
arpl
ja
hlt
fildl
test
jns
ficomps
inc
push
lret
and
adc
cmpl
outsl
mov
mov
push
divl
cmp
sub
add
adc
cmpsl
decl
jecxz
add
int
or
sbb
and
fistpl
rcr
xchg
add
jle
fdivr
fsubrs
mov
and
aas
xorl
ss
dec
xor
insb
arpl
int
mov
or
stos
es
dec
data16
lock
cs
call
or
or
push
adc
mov
nop
mov
jg
testb
sub
mov
push
and
les
adc
and
push
shlb
sbb
push
or
fldt
daa
js
pop
test
out
xchg
mov
popf
ds
stc
sbb
repnz
jl
xchg
mov
inc
inc
loope
les
and
mov
add
fstps
sbb
pop
sbb
mov
faddl
outsl
jp
ja
lahf
add
sub
pusha
xchg
sahf
hlt
bound
push
sbb
or
push
fisubs
mov
movsb
mov
dec
push
fs
cltd
in
sub
in
dec
push
add
and
call
jne
out
add
mov
push
movsb
sti
mov
jmp
frstor
mov
mov
icebp
test
mov
repz
sbb
call
xor
ds
pop
adc
imul
jae
cmp
add
std
icebp
push
push
xor
mov
incb
pop
add
dec
imul
mov
add
and
jbe
adc
js,pn
cmp
gs
mov
mov
push
hlt
add
lock
cmpsb
movups
dec
or
adc
push
push
out
mov
cld
loop
scas
xor
and
enter
mov
sti
incl
push
xchg
and
sbb
push
jp
pop
shll
jle
std
jno
jg
sbb
adc
push
dec
mov
arpl
es
js
repnz
dec
pop
mov
sarl
adc
cli
js
lret
xchg
popa
decb
movsb
or
jecxz
int3
push
loopne
inc
dec
ljmp
mov
mov
jb
bound
mov
push
pop
mov
movsb
adc
push
cmp
xchg
orl
mov
jge
cmpsb
inc
xchg
dec
push
inc
test
fisttpl
push
cmp
arpl
imul
out
push
mov
call
inc
add
sub
out
add
or
mov
ret
popf
jnp
mov
dec
pop
std
cld
rorl
cmpsb
dec
fildl
sti
sub
inc
aas
add
pop
sar
pop
repnz
lds
xchg
mov
mov
inc
dec
cmp
imul
dec
xchg
push
fucom
push
imul
orl
xor
inc
mov
mov
cmc
mov
inc
xchg
dec
add
clc
inc
jp
adc
test
sbb
adc
fistps
mov
ljmp
repz
lahf
ss
out
aaa
mov
and
jae
mov
idivb
fwait
test
dec
loop
sub
mov
adc
fisubl
fs
push
cli
cli
xchg
mov
push
sbb
fwait
adc
hlt
push
push
sub
clc
stc
cmp
punpcklbw
push
lods
xor
out
std
mov
sar
ja
mov
orl
dec
mov
jp
std
nop
xlat
pop
mov
std
cmp
or
movsl
test
repz
add
fnsave
inc
mov
cld
mov
xchg
lahf
or
in
aad
popa
stos
pop
andl
cli
jg
inc
jp
and
jle
sbb
pop
sarb
lock
pop
sub
or
ljmp
and
idivl
lret
or
jns
jle
pop
push
loopne
lods
and
or
fisttpl
sahf
in
lahf
stos
cmp
mov
test
mov
sarb
push
lret
push
sbb
ret
adc
adc
out
dec
pop
lods
nop
gs
push
pop
xchg
cmp
inc
outsl
sbb
cmp
cli
mov
inc
jb
int
iret
cmc
in
js
shl
add
into
xchg
sahf
mov
out
stos
adc
dec
mov
popf
dec
imul
lods
sub
shll
push
and
and
and
jns
add
or
or
insb
mov
sbb
pop
sub
jne
mov
pop
dec
dec
cmpb
sub
decb
mov
fsub
in
mov
xor
adc
outsb
gs
dec
stos
pushf
test
int
mov
in
inc
loop
sbb
loope
mov
loope
sub
insb
xchg
mov
mov
lahf
pop
mov
ljmp
stc
mov
cmp
das
jne
xchg
test
jecxz
add
sti
cmp
icebp
cmp
int3
pop
addb
je
push
cmpsb
adc
testb
sub
and
pop
testb
sub
add
xor
aad
xor
mov
sub
imul
cmp
mov
cli
addl
push
lcall
ja
pop
rcr
inc
loopne
fs
mov
in
sbb
js
popa
dec
lret
mov
and
push
add
jl
xchg
and
or
mov
lret
sbb
mov
call
sub
adc
add
das
xlat
sahf
push
cmp
scas
push
mov
mov
push
imul
pop
cmp
sbb
pop
hlt
add
je
sub
out
clc
data16
lret
addb
sbb
adc
rorl
adc
mov
outsl
cmp
jnp
push
movsb
mov
in
mov
loop
mov
mov
mov
xlat
sarl
push
push
inc
dec
pushl
mov
lds
mov
out
dec
rorl
cmpsl
cli
test
sti
lret
shr
mulb
lea
mov
mov
sub
dec
inc
sub
aaa
ljmp
roll
in
inc
inc
mov
in
ret
stc
ss
add
sar
pop
push
mov
dec
lods
ljmp
test
dec
fwait
hlt
mov
fsts
ss
xor
adc
pop
mov
dec
aad
sub
push
lods
iret
clc
test
mov
cmpl
push
fldl
sar
add
jno
movsl
bnd
pop
sub
sbb
decl
xchg
or
add
add
dec
xor
xchg
dec
test
mov
ljmp
cld
lds
sbb
sbb
jle
jecxz
aas
gs
xchg
ds
cmp
jmp
loop
int
pop
fcmovnu
pop
stos
push
mov
pop
push
fadds
mov
push
cld
pop
mov
fsubrp
push
sbbb
adc
ret
cmp
inc
inc
sbb
sahf
ret
sarb
adc
test
mov
and
out
jmp
mov
add
sbb
stos
mov
arpl
addr16
mov
idiv
add
jl
iret
lods
push
xlat
add
pop
int3
fs
sarb
repnz
gs
inc
mov
push
lock
clc
cli
fnstenv
rcrb
loop
lea
loopne
push
pop
shll
nop
clc
push
stos
out
loop
and
addb
scas
xor
push
push
test
push
push
aas
std
adc
dec
jle
lock
push
fdivs
and
push
popa
pop
push
sahf
test
test
sbb
xchg
addl
mov
cli
or
push
inc
inc
cmp
mov
out
sahf
mov
js
push
sbb
outsl
sub
mov
pop
mov
decb
mov
aad
ss
into
in
jae
sahf
dec
xchg
nop
cwtl
jle
jg
mov
nop
fildl
das
aad
call
cwtl
or
sbb
push
jne
mov
jl
or
test
jo
dec
mov
pop
rcll
push
sub
or
add
pop
jo
mov
ret
fnstcw
jae
jae
shlb
mov
push
es
dec
shrb
cltd
lods
push
popa
rcrl
and
mov
cs
xor
mov
mov
icebp
mov
addl
jle
mov
fcompl
push
cwtl
push
jg
and
add
sahf
inc
int3
and
loopne
int3
cmp
lahf
mov
mov
movl
push
jo
xlat
sbb
jge
test
add
sub
std
xchg
jb
cmp
push
add
pop
push
outsb
push
int
cld
hlt
out
cmpxchg
iret
xchg
data16
pop
dec
mov
lock
jmp
call
fmuls
cmp
xor
andl
push
adc
clc
mov
subb
lods
repz
dec
test
inc
xor
pop
fs
sub
add
iret
pop
lds
mov
xchg
sub
or
pushf
mov
pushf
decb
jle
inc
rol
sbb
push
jne
ret
ret
js
pop
je
xor
jb
sbb
daa
repz
ss
cmp
xor
call
stc
mov
push
data16
sbb
setno
orb
mov
mov
lret
leave
stos
out
xlat
mov
push
mov
jno
jl
mov
sbb
mov
out
mov
sbb
rorb
adc
jo
sbb
jle
lahf
or
add
fstps
cli
jnp
mov
out
xlat
dec
and
fcmovu
add
dec
jl
rcr
xchg
pop
enter
mov
pop
stos
lret
mov
cmp
lea
dec
scas
int3
cmc
push
out
xor
cli
mov
hlt
mov
mull
or
enter
xor
scas
mov
paddd
data16
pop
cmp
shlb
and
adc
xor
fsubl
pusha
aas
sub
hlt
ds
scas
push
pop
pop
mov
aaa
and
orl
mov
repnz
adc
or
mov
outsl
scas
rcrl
sbb
add
orb
add
sbbb
je
jl
pop
xchg
push
adc
rorl
xorl
les
dec
ficompl
aam
lods
xchg
and
adc
dec
push
loop
pop
pop
out
xor
cs
xchg
cmp
jp
sub
out
imul
add
ret
out
mov
mov
lds
jnp
mov
lock
or
int3
jmp
pop
mov
cld
mov
mov
push
pop
push
inc
dec
cli
mov
adc
adc
jne
jns
or
lock
jb
roll
and
negl
insl
and
mov
in
testb
adc
addr16
popa
cli
pop
mov
ss
lock
mov
and
mov
pushf
rclb
cld
cmc
or
dec
push
shll
not
movsl
clc
lock
add
inc
stos
pop
push
dec
cltd
or
pop
pop
in
mov
pushf
lock
mov
xor
mov
sbb
xabort
jae
pop
in
pop
mov
cs
sub
push
stos
call
loopne
mov
fists
mov
jo
fbld
jg
enter
ljmp
rcll
cld
fildll
or
add
sbb
clc
mov
orl
pop
test
pop
jb
out
ret
movsb
aas
popa
aad
jo
sbbl
sbb
mov
lock
bound
test
mov
mov
dec
cmp
add
mov
xor
dec
add
dec
mov
add
sub
sbb
sahf
mov
xor
outsl
xor
and
jp
loopne
add
add
pop
lods
and
sar
inc
out
cmpsl
pop
push
rcrb
lcall
jb
fnstcw
loopne
mov
in
insl
out
mov
lds
fidivs
jle
adc
lods
hlt
pop
call
dec
adc
rcrl
jle
decb
mov
push
cmp
dec
je
push
insb
xor
call
inc
sti
les
inc
cmc
mov
clc
push
lock
aad
ret
negb
inc
cld
out
pop
imul
xchg
xadd
or
push
scas
outsl
push
mov
jecxz
adc
xor
clc
ja
xor
in
fdivrs
add
push
imul
ss
jg
fcmove
jp
repnz
out
loopne
pop
pushf
ljmp
sub
pop
outsl
mov
push
clc
push
ficompl
scas
pop
fcomps
sub
out
sbb
push
xor
add
xor
clc
and
xchg
movlhps
das
push
mov
add
xchg
loope
cmp
ja
add
mov
loop
add
aad
mov
lea
inc
insl
and
incl
push
mov
stos
idivl
pop
icebp
fs
incb
xor
retw
mov
mov
stc
js
je
xchg
or
add
and
fbld
hlt
fwait
lret
nop
or
sbb
jg
mov
mov
sar
jl
pop
fiadds
xor
cmpl
outsl
mov
add
popf
js
xchg
lahf
scas
fnstenv
les
inc
shl
aad
add
xchg
sarl
outsb
psubsb
stos
fcmovb
or
sub
ror
aas
in
mov
scas
xchg
les
mov
pushf
outsl
pop
add
lret
adc
xchg
mov
adc
push
addr16
mov
or
mov
popf
inc
rcrl
lcall
test
adc
ja
jmp
sub
fldt
adcb
push
das
shrb
cmpsl
es
xchg
pop
outsl
push
ret
or
pop
popa
hlt
lahf
push
cmpb
je
lods
js
push
push
sbb
test
cmp
cmp
stos
rorb
pop
xor
pop
lret
push
les
add
scas
test
dec
mov
push
aas
inc
imul
dec
shl
adc
jle
hlt
ds
loope
mov
pushl
add
cmp
cmpsb
loopne
js
pushf
add
push
or
aam
cld
push
ret
mov
xchg
or
aam
adc
pop
mov
jmp
stos
aaa
sbb
std
mov
cmc
pop
outsb
add
mov
shll
push
push
dec
inc
out
xchg
sbbb
fcmovbe
or
xor
aad
scas
push
loopne
gs
movsl
into
or
pop
or
and
sbb
jb
sub
push
xchg
jnp
push
cld
adc
aam
sbb
into
pop
cmpsb
cli
aas
movsl
sub
cmp
imul
sub
test
loop
sbb
and
sub
pop
inc
sbb
sub
add
inc
ret
pop
out
push
mov
push
mov
aam
xchg
mov
clc
push
jl
aam
adc
add
pop
add
xchg
inc
lahf
clc
mov
dec
std
cmp
sub
add
ret
sub
mov
sbb
and
or
xor
lock
add
or
divl
pusha
jg
jl
shrb
sarb
push
inc
push
sub
jg
adc
jecxz
pop
aam
repnz
cmc
cmc
inc
mov
pop
cld
inc
int3
mov
or
dec
mov
mov
pushw
jg
fidivrl
jge
testb
sbb
fildl
fstp
sbb
and
mov
or
testb
rcl
std
movq
mov
push
inc
mov
add
mov
fmuls
xchg
sbb
push
movsb
hlt
dec
jmp
icebp
xchg
or
push
cmp
imul
mov
test
shrb
jge
pop
push
jmp
cmpb
hlt
add
test
mov
and
sub
push
aam
test
and
lock
jl
sbb
filds
mov
cmp
fistps
pop
xor
fwait
mov
inc
adc
add
or
arpl
mov
or
xchg
dec
sbb
lock
rcrb
call
or
pop
pop
fbld
shlb
add
and
mov
cltd
sbbl
stos
xchg
xchg
xchg
mov
in
mov
cmpl
pop
hlt
xor
mov
adc
hlt
in
xchg
push
call
xor
idiv
inc
mov
stos
in
add
mov
xchg
pop
daa
adc
lods
pop
call
ret
into
roll
rolb
jbe
sub
data16
sbb
enter
mov
jb
jmp
lods
push
pusha
push
dec
cmc
and
push
mov
ret
jns
repnz
cmp
ficoms
xchg
xchg
aaa
or
and
push
loopne
stc
fisttpll
xchg
fcmovnu
add
test
add
xor
testl
mulb
pushf
rolb
add
dec
push
stos
jo
and
push
mov
push
mov
in
sbb
dec
fdivrl
sar
inc
xor
aaa
nop
mov
hlt
sbb
or
or
sbb
insb
sbb
pop
imul
jmp
mov
sub
in
call
lock
sbb
jnp
data16
mov
jmp
vpminsw
nop
pushf
sbb
pop
shl
popf
cmp
ljmp
loop
jmp
adc
pushf
mov
push
js
outsb
cmp
or
pop
push
in
mov
mov
lods
adc
ja
add
xchg
out
out
or
enter
std
incl
mov
or
mov
cmpb
into
fs
cli
data16
aam
mov
add
fisubl
cld
jge
stos
dec
into
test
pop
adc
pop
sub
sbb
jmp
in
add
sbb
pop
dec
test
mov
inc
imul
mov
dec
icebp
daa
jl
inc
bound
clc
sar
in
mov
add
ficomps
adc
sbb
fwait
mov
ljmp
mov
call
mov
pop
mov
pop
add
xor
sti
dec
ret
mov
cli
testb
sub
add
jmp
xchg
pushf
shrl
xor
lods
in
pop
lret
pusha
call
pushl
decl
inc
out
and
xchg
rcrb
pop
enter
jg
pop
addr16
out
lods
loopne
add
adc
sub
cwtl
mov
insb
or
dec
lds
or
mov
rorl
lods
mov
sub
cmpsb
pop
call
and
add
js
fimull
push
les
ja
pop
imul
rolb
adc
movsl
mov
or
in
lret
and
cmp
mov
and
mov
sbb
lods
sbb
mov
xchg
add
in
add
add
jmp
mov
and
xchg
jle
cs
aas
je
pop
fists
dec
cmp
or
adc
fsubs
mov
jo
push
lahf
dec
dec
mov
or
ffreep
pop
pop
cmp
pushf
and
sbb
fisubl
xchg
mov
push
sub
jmp
jbe
inc
cli
adc
xor
inc
lock
or
repnz
and
imul
xchg
ja
fwait
imul
jmp
cld
aad
and
hlt
add
std
mulb
aad
pop
popa
adc
jmp
nop
xchg
add
mov
ret
sbb
testb
add
mov
std
push
pusha
jmp
xor
xchg
xor
push
lcall
adc
sti
adc
dec
lcall
mov
rcll
popf
mov
loop
lcall
inc
push
sub
jecxz
push
add
push
dec
xor
insb
mov
adc
sti
cwtl
lods
iret
jae
das
sub
mov
divb
cs
lret
addb
std
mov
mov
clc
cmp
inc
fs
pop
xlat
fadds
or
cli
ljmp
cld
and
test
je
lcall
jle
out
inc
sub
xchg
pop
cmp
mov
sub
fdivp
sbb
adc
push
js
daa
test
popa
add
fisubrs
je
inc
push
ret
loope
inc
ds
test
js
mov
pop
sub
mov
movsb
nop
cmpl
inc
lret
aad
add
into
pop
aam
xchg
mov
mov
add
xor
fidivrl
int3
dec
add
js
addb
call
jg
out
ret
mov
pop
sub
cmpsl
or
xchg
adc
stc
or
inc
fdivr
lods
out
dec
mov
ljmp
adc
dec
out
mov
pop
mov
sbb
sbb
rcrl
ja
into
and
sub
mov
cmc
add
fisubrs
push
lahf
hlt
push
cwtl
mov
and
jecxz
mov
lahf
cmp
test
xor
inc
push
mov
xchg
cwtl
xlat
fwait
outsb
push
call
sar
sbb
mov
sub
xor
jg
insb
out
cltd
fisubs
jae
cli
pusha
push
rolb
mov
out
insl
mov
sub
mov
jp
inc
jmp
and
xor
pop
dec
pop
push
movsb
or
out
js
dec
decl
mov
testb
das
sub
xchg
cmp
aas
inc
xor
sbb
dec
xchg
jecxz
mov
jns,pn
push
cmpsb
push
lret
nop/reserved
imul
xchg
cmpsb
add
xor
xchg
decb
inc
into
test
cs
movsl
inc
mov
insb
inc
xor
in
pop
mov
push
or
jbe
out
shl
inc
ljmp
mov
jg
movsb
lret
push
and
cmp
call
mov
lock
dec
adc
and
mov
jb
dec
jns
dec
popa
cli
inc
xor
pusha
add
cld
dec
clc
inc
jmp
adc
pop
jp
cvtps2pd
xchg
ss
push
aam
sti
decl
pop
jb
mov
icebp
in
arpl
into
ret
jmp
dec
push
les
clc
pop
push
dec
mov
std
sbb
imul
aaa
xor
test
decb
cmp
xchg
andb
mov
rcrb
xor
out
test
inc
stos
adc
sti
daa
sbb
andb
imul
lods
push
xchg
insl
push
jl
jns
scas
jecxz
sub
scas
pushf
aas
add
sbb
icebp
inc
and
fcmovnbe
cmpb
jae
adc
xchg
add
jbe
mov
fs
cld
mov
dec
lock
stc
ficompl
dec
add
lahf
fbld
fadds
pop
xchg
test
and
cmpsl
mov
sub
les
pop
imul
push
push
cld
or
mov
clc
insb
sbb
dec
popf
push
lock
ret
cmpsb
lods
lret
adc
mov
enter
test
dec
pop
or
scas
mov
dec
lret
dec
sar
xchg
jl
sbb
cld
lea
test
or
cmp
cli
addb
dec
jb
pop
sub
call
retw
bound
add
fsubr
icebp
add
stos
sub
add
sbb
fcmovnb
ja
jnp
sub
sbb
fmull
arpl
cmpsl
sbb
fwait
jp
mov
dec
sbb
or
or
mov
ds
dec
sti
xlat
mov
and
and
mov
push
pop
mov
adc
inc
mov
sub
xchg
shrl
inc
cld
std
sub
loopne
pushf
inc
pop
fimull
jle
rorb
and
sub
and
out
dec
jg
loopne
add
and
xchg
mov
aam
cmovle
mov
add
mov
hlt
or
addr16
push
push
addr16
fstl
ja
inc
loopne
test
sub
jmp
or
add
ss
adc
mov
jno
push
ret
jg
adcl
add
lock
cwtl
xor
cmp
outsb
push
jge
pop
loop
pushw
mov
mov
mov
push
jp
pop
jno
incb
pushf
rcl
or
mov
sub
fmull
mov
inc
incb
and
pop
adc
xchg
icebp
imul
inc
stos
and
inc
mov
jg
lods
add
pop
jecxz
and
xor
adc
lahf
add
sbb
imul
push
sbb
les
jg
lods
das
dec
push
std
jle
test
push
push
adc
jge
jecxz
xor
pop
decl
les
jnp
loopne
jo
or
clc
xchg
lcall
call
jecxz
in
aad
pushf
push
fldt
rcr
mov
jg
imull
gs
cmpsb
jmp
dec
sub
fisubrs
iret
jno
push
push
cmc
inc
enter
xchg
or
adc
adc
push
sahf
lcall
outsl
mov
cmp
jbe
push
mov
jbe
add
add
push
push
sub
inc
xchg
lcall
jp
in
cld
out
mov
cmp
pop
sbb
sub
hlt
mov
cld
dec
aaa
cmp
jbe
in
fwait
dec
sbb
mov
mov
repz
lock
inc
cmp
scas
dec
push
mov
popa
test
loope
mov
out
testl
xor
push
fs
mov
pop
roll
inc
cmpsb
sahf
shrb
je
inc
adc
clc
and
cmp
jo
js
sbb
mov
std
pop
repnz
jle
xchg
fmuls
cltd
movsl
rcrb
lahf
xor
pushl
outsb
dec
xchg
cs
out
xchg
dec
lret
or
and
repz
les
je
nop
push
or
mull
xor
lret
clc
call
sub
bnd
jecxz
cli
fstpt
xchg
push
xor
test
jg
jnp
fld1
jbe
sbb
inc
jecxz
ret
fwait
and
mov
fsubl
mov
std
stos
sub
add
pop
pop
bound
scas
loopne
jns
lcall
ret
push
and
out
mov
loopne
add
inc
inc
mov
js
aam
and
sub
rol
outsl
or
adcl
mov
jmp
jb
inc
pop
jbe
jb
lods
jae
push
xchg
ja
inc
or
ljmp
mov
push
inc
jle
ret
sbb
mov
xchg
ret
push
or
push
lcall
data16
mov
daa
xchg
dec
shrb
and
push
mov
loopne
cmp
sub
sbb
ret
dec
nop
mov
cld
push
fmuls
mov
mov
push
and
cli
and
aad
sahf
pop
lret
test
ss
into
cmpb
sbb
push
imul
mov
adc
ds
mov
aam
ret
push
popf
jle
imul
jle
dec
loopne
mov
mov
xlat
push
mov
mov
push
fcomip
inc
shl
out
loopne
mov
push
adc
mov
inc
inc
adc
jle
jl
push
lock
mov
xor
adc
outsb
bound
and
cmp
add
and
aaa
test
inc
xlat
push
mov
arpl
das
lods
pop
aas
mov
push
adc
rcll
xor
add
inc
mov
mov
aaa
addr16
pusha
ret
fcmovu
andl
and
fcmovb
sar
adc
inc
fidivrs
push
ljmp
add
into
outsb
shlb
jge
add
call
ror
dec
cld
sub
mov
enter
ljmp
lcall
pop
cld
xor
adc
fadds
dec
shl
dec
or
test
add
stos
adc
hlt
arpl
mov
mov
lods
cmpsl
inc
je
dec
jo
push
adc
ds
pop
test
sub
push
add
add
rol
jmp
mov
out
ficoml
nop
into
push
adc
pop
xchg
enter
and
mov
sbb
addr16
cmp
sarl
pusha
xor
mov
dec
into
divl
xor
daa
imul
lea
dec
cmp
test
sbb
or
pop
or
clc
sbb
sub
fists
ret
notl
ja
add
or
stos
push
push
cld
pop
or
mov
cwtl
push
fimuls
jle
and
xchg
scas
ss
call
mov
xor
pop
mov
aas
push
fbld
push
pop
aam
jns
xorl
xchg
sbb
call
jo
sub
lods
notb
in
in
fdivr
daa
xchg
std
mov
incb
mov
adc
ljmp
or
out
sub
mov
stos
mov
cmp
mov
add
pop
sbb
push
lcall
mov
push
stos
decl
imul
mov
aad
pop
mov
push
xor
sub
test
ret
xorl
or
cs
mov
mov
xchg
xor
js
pop
or
mov
adc
stos
bound
lods
outsb
sbb
test
mov
xor
adc
fisubs
shlb
aas
enter
mov
pop
jne
ret
jp
jle
sbb
mov
rolb
fs
mov
add
cmp
mov
push
mov
fstps
subl
outsl
in
add
cmpsb
push
jg
xchg
pop
les
xor
jns
cmp
sti
outsl
pop
mov
fbld
repnz
sbb
ja
sbbl
sbb
push
inc
mov
outsl
lock
mov
pop
jne
cs
mov
cmp
lea
icebp
cmpsb
lahf
jmp
dec
dec
pop
inc
pop
add
jo
inc
test
test
insb
enter
popf
xor
out
inc
ret
fwait
xor
or
mov
jne
cmp
shr
mov
pop
jmp
test
lock
loopne
adc
and
sbb
shl
movsl
push
lret
or
cmc
mov
fisubl
adc
jne
sub
dec
jne
iret
jle
aam
mov
push
andb
rcrb
sub
or
or
mov
in
lcall
call
ret
das
cmp
movsl
cmpsl
pop
jl
int3
and
bound
pop
shl
roll
or
enter
jp
mov
pop
jp
inc
jl
pop
popa
inc
push
jp
xchg
mov
xchg
push
add
les
js
sub
filds
int
pop
mulb
pop
clc
push
or
cld
sub
ja
mov
pop
cmpsb
pop
call
cmp
sbb
incb
and
add
lcall
add
adc
test
push
cli
adc
mov
cmp
mov
inc
inc
cli
push
leave
adc
push
jge
push
shl
test
into
xorl
xchg
cmp
add
lcall
mov
xchg
jg
inc
add
add
incl
push
mov
jge
adc
jecxz
or
ffreep
cmp
adcb
test
aaa
mov
mov
jp
or
push
and
scas
clc
dec
out
fcompl
and
and
lds
xchg
mov
sti
out
push
mov
add
int
and
cmp
stos
mov
std
ffreep
push
popa
iret
cli
call
aaa
adc
jp
adc
sbb
and
and
cltd
mov
fisubs
push
lret
inc
pop
hlt
sbb
pop
cs
cmp
pushf
inc
or
push
or
pushl
mov
jbe
lods
mov
mov
pop
lods
sbb
shr
or
cmp
std
fcmovb
pop
ret
pop
loope
add
das
rorl
test
ja
inc
adc
lcall
call
cmp
or
cmp
push
pop
push
enter
mov
add
addr16
mov
ds
xchg
decb
outsb
dec
and
cmpl
lret
sub
stc
inc
or
and
shrb
mov
in
lds
loop
sahf
mov
ds
sbb
push
push
mov
mov
mull
int
add
aad
imul
pop
adc
mov
mov
scas
js
inc
dec
fidivl
add
sarb
loope
lcall
adc
jo
mov
mov
inc
mov
stos
mov
hlt
stos
xchg
lret
loopne
xchg
lea
les
rcr
xchg
mov
pop
test
int3
pop
test
scas
mov
or
adc
dec
out
xlat
ss
clc
fucom
dec
fdivl
adc
add
es
inc
clc
cmp
inc
enter
movsl
or
jbe
pop
faddp
mov
lods
movb
inc
loope
inc
mov
add
mov
xor
inc
les
dec
xchg
jae
fnstenv
push
mov
out
enter
push
bts
rorl
fisubs
fiaddl
sub
cmp
sub
jge
jmp
std
pop
mov
dec
push
push
xchg
and
pop
mov
cmp
bound
std
push
js
scas
add
hlt
incl
loope
repnz
sarl
jmp
or
movsl
sbbl
mov
les
fisttps
pop
aad
mov
inc
jp
sub
aas
hlt
mov
cld
test
sbb
push
xchg
cmpsl
dec
cmp
lock
or
sahf
jl
jle
pop
xchg
push
or
and
iret
popf
push
push
sbb
fwait
scas
out
adc
adc
daa
in
and
push
jnp
cmp
cmp
xchg
add
adc
mov
inc
outsb
lcall
push
sub
and
scas
sbbl
test
rorl
pushf
fnstcw
mov
pop
xchg
cld
pushl
sbbl
sbb
pop
movsb
and
stos
inc
outsl
je
or
sub
xchg
mov
lock
sahf
xchg
add
dec
inc
lock
out
pop
push
aam
out
pop
daa
inc
xor
bound
xchg
jl
pusha
dec
enter
sbb
sti
mov
jge
testb
adc
push
dec
loope
test
into
xadd
jecxz
adc
mov
sub
ljmp
lea
loope
imul
outsb
test
mov
je
idivl
mov
xor
xchg
and
sbb
aas
inc
std
add
mov
ss
imul
flds
inc
sub
stos
push
ljmp
adcl
pop
vprotb
loopne
inc
cmp
dec
cmpsb
cli
mov
bound
neg
out
or
pop
jp
push
cmp
adc
mov
insb
aas
idivb
sbb
or
push
dec
les
sub
jg
lods
repnz
fisubrl
or
cli
inc
ss
add
sub
push
cmc
cwtl
dec
push
loop
lock
aaa
inc
mov
xchg
push
enter
adc
in
popf
or
push
mov
mov
mov
iret
lea
cli
fwait
lds
jmp
mov
scas
pusha
sub
ds
repz
out
sbb
cmp
sbb
sub
mov
inc
sbb
aas
lods
push
inc
lea
jge
les
xlat
pusha
popl
push
enter
cmpsb
in
fs
cmpsb
sub
or
mov
sub
sub
shlb
gs
scas
mov
adc
jbe
fisubrs
lret
stc
loop
xor
add
out
cltd
mov
inc
ret
push
sti
cmp
cmp
stos
xlat
movsb
hlt
pop
jge
mov
shll
xor
int3
lret
loop
in
lea
cli
mov
pop
jne
test
mov
cmp
ja
mov
loope
sbb
fwait
and
mov
sub
xor
sub
js
movsb
leave
xchg
cmp
push
jns
daa
xchg
sbbb
push
mov
add
popf
out
icebp
dec
pop
adc
mov
add
je
loop
loopne
jl
out
xchg
push
sbb
loopne
nop
and
dec
aas
or
cld
push
sbbb
test
mov
jno
dec
cli
push
aad
mov
pushf
add
mulb
jns
mov
push
push
pop
jmp
test
dec
jbe
je
pavgb
and
and
jp
aad
cli
or
adc
mov
cmc
sub
rolb
ror
push
push
pusha
decw
insb
js
mov
add
sarb
stos
pop
cmp
dec
mov
mov
push
or
scas
pop
movsl
mov
repnz
adc
inc
mov
and
mov
sbb
cmp
std
jmp
nop
or
outsl
pop
test
stos
dec
stos
shlb
scas
or
add
push
cmpps
mov
repnz
jb
mov
add
pop
dec
insb
xchg
enter
in
fisubrs
add
pusha
andl
pusha
jae
push
sub
lahf
fiadds
cmp
addr16
rorl
cmp
rolb
pop
xor
add
mov
push
pop
jb
sahf
cmpl
ret
and
movsl
ljmp
lret
ja
aas
enter
cmp
sbb
mov
jbe
push
cld
orb
or
lock
add
int3
sub
outsb
mov
mov
pushf
lods
add
mov
inc
gs
mov
ret
lret
xchg
push
push
cwtl
bound
push
cmp
push
and
data16
jecxz
dec
mov
lahf
rcrl
jg
pop
ret
clc
mov
push
pop
loopne
mov
sbb
xchg
std
decl
test
adc
add
in
sub
adc
sbb
aam
adc
and
xchg
std
call
call
and
subb
jl
mov
xorl
stos
cmpsl
push
loopne
lock
add
xchg
or
mov
jp
mov
sbb
js
sub
mov
push
sbb
dec
gs
pop
clc
das
ret
ss
loop
scas
ror
arpl
sub
xor
sbb
adc
adc
pop
adc
mov
js
inc
jns
fcoms
xorl
xor
shlb
add
clc
or
scas
lods
sti
or
inc
mov
mov
jp
sbb
push
jl
mov
cmp
pushl
arpl
mov
stos
es
mov
out
xchg
pop
std
mov
test
icebp
mov
mov
insl
lcall
je
shlb
pop
jmp
fidivs
test
lret
mov
roll
or
mov
jmp
fs
std
fnstsw
xchg
add
outsl
loop
xorb
cld
dec
adc
mov
mov
push
jg
or
push
adc
xchg
orb
push
inc
cmp
inc
adc
mov
push
mov
inc
xor
jl
push
andl
inc
cld
add
and
jp
and
imul
add
adc
scas
ss
mov
xchg
pop
lahf
mov
out
push
push
ja
rol
cli
mov
test
imul
jbe
mov
sub
xchg
bound
jl
or
mov
popa
push
push
je
rolb
pop
add
imul
push
ret
pop
xchg
mov
std
fnstenv
sub
fsubs
or
adc
or
test
loop
pop
xchg
jl
sti
mov
sti
adc
push
lods
add
movsl
inc
ret
add
cmp
mov
rcl
lahf
or
nop
ret
sti
xchg
mov
mov
and
incl
and
add
sbb
in
aas
jns
pop
or
pop
in
push
cmp
ja
jbe
or
mov
or
das
movsb
inc
aam
and
pop
xor
cld
aas
fiadds
cli
mov
xorb
cli
jb
pop
das
sarb
and
movsb
lret
nop
add
cli
sahf
in
ja
inc
int3
push
xchg
pushf
mov
pop
std
mov
mov
mov
arpl
test
jo
js
sub
jg
in
adc
and
fs
fdivrl
push
sbbb
jmp
push
jl,pn
testb
rcr
shlb
call
adc
sbbb
pop
fisttpll
shr
mov
mov
xlat
sti
out
or
push
mov
push
mov
mov
out
add
stos
push
pop
cmpsl
lcall
push
inc
add
pop
pop
xchg
scas
push
sub
add
rol
push
mov
adc
ja
inc
in
inc
xor
sub
mov
push
sahf
mov
xchg
bound
out
mov
aaa
sub
clc
mov
xor
mov
hlt
inc
sub
push
jmp
cld
jg
push
jl
mov
in
loopne
pop
mov
fbstp
mov
add
or
push
out
cli
outsl
or
mov
cwtl
lret
out
adc
and
scas
cmp
dec
or
push
loopne
in
aaa
adc
xbegin
stos
orb
test
test
insb
aaa
lahf
jge
divb
pop
es
call
jb
adc
xchg
incl
jbe
aam
cmp
or
icebp
mov
je
sbb
fcmovb
lret
jg
decl
add
and
push
insl
enter
jg
aas
jle
dec
je
jno
clc
into
push
lock
push
pop
push
cmp
js
lcall
call
adc
jmp
push
pop
push
dec
mov
sub
add
loopne
xchg
clc
fsubr
outsb
sub
sub
adc
aas
xchg
ficompl
or
sub
ljmp
dec
add
fcmovnu
pop
subb
divb
xchg
lods
movsb
mov
clc
add
inc
pop
xor
cltd
fistps
add
sarl
add
clc
repnz
shrl
incl
mov
inc
cltd
and
test
popa
fisubl
mov
push
lret
cmc
push
cmpsb
fcos
addb
es
decl
fistpll
ja
mov
test
ret
fs
sarb
mov
and
fcoml
clc
lea
adcb
sbb
cmp
adc
lock
fsubl
mov
mov
jle
int
lock
decl
add
jle
push
push
add
clc
notl
ret
pusha
shl
push
and
leave
rclb
push
xchg
or
cmpsb
ljmp
fwait
pop
outsb
push
jg
xor
cld
jne
loope
imull
in
add
ljmp
rorl
mov
fstp
enter
push
pop
jl
shlb
subb
ret
sbb
loop
clc
pop
push
mov
push
adc
cmp
stos
sbb
inc
jle
aam
stos
add
es
sub
and
test
loop
xchg
mov
out
orb
mov
push
and
pop
loope
and
push
leave
in
movsbl
pushf
js
imul
or
ss
add
add
add
push
add
add
jl,pn
jl
sti
sbb
sbb
or
adc
lahf
ds
xlat
push
inc
cmpl
movsb
jg
in
jo
imul
mov
inc
out
inc
xor
iret
fmuls
xchg
stos
dec
sti
cmpl
jecxz
or
or
sub
in
gs
cmpl
outsl
dec
cmp
sub
cli
leave
xor
repnz
out
and
and
jl
mov
sub
cld
mov
pop
push
mov
daa
push
pop
adc
jo
pop
sub
sub
sti
and
in
icebp
push
sbb
inc
outsl
jle
js
imul
push
mov
rorl
test
js
lea
or
fdivl
jle
outsb
mov
sub
jnp
fwait
out
sbb
aaa
subl
adc
push
insb
pushf
test
sar
jns
add
scas
popa
jle
in
lret
inc
pusha
pusha
mov
mov
push
js
push
add
jb
mov
xchg
faddp
fdivl
push
adc
std
xorb
push
stos
shll
add
mov
pop
cmpsl
mov
popa
out
orl
cmp
aam
cwtl
rclb
sar
pop
mov
push
pop
cli
jno
movsb
int3
dec
mov
jge
fnsave
mov
or
mov
push
push
push
movsb
out
sub
jmp
neg
inc
mov
pop
pop
mov
inc
push
push
mov
add
and
dec
loop
stos
push
xor
incb
sbb
mov
sbb
or
mov
push
arpl
mov
pop
imul
pop
push
and
dec
mov
add
test
mov
pop
xchg
bound
mov
or
scas
mov
fs
stos
sub
sbb
dec
jnp
cmpl
in
addl
fnsave
icebp
outsl
mov
mov
arpl
popf
jmp
int
or
push
lret
test
test
push
mov
test
fcomp
out
imul
or
mov
push
test
shrb
pop
pop
jg
rorb
lods
pop
mov
jae
std
xchg
jg
xor
rorl
dec
fldenv
cmp
nop
inc
mov
pop
ljmp
adc
push
call
ds
jmp
mov
insl
pop
mov
dec
sub
scas
scas
mov
inc
fcomip
fcoms
and
cmpsl
xchg
cmc
mov
xchg
ja
sbb
push
adc
dec
dec
repnz
sub
aam
or
pop
ja
sub
inc
mov
pushl
mov
mov
sbb
test
out
sti
call
rcrb
dec
adc
arpl
add
xchg
or
pop
hlt
pusha
fcompl
xchg
sub
ret
jg
inc
fisttpl
push
lods
in
mov
dec
jne
xor
rcr
mov
lret
aad
and
sbb
sub
cmp
sbb
hlt
cmp
pushf
fildll
nop
cmp
test
rorb
iret
test
andb
push
sub
push
aaa
xor
cmp
mov
inc
or
push
inc
out
jp
and
push
xchg
test
out
into
pop
dec
lds
push
lret
mov
push
mov
test
sub
push
stc
xorb
xchg
cmp
ss
testl
cmp
je
shll
jb
push
fnstcw
call
iret
pusha
ret
lds
mov
test
jl
mov
icebp
sbb
dec
pop
sbb
test
fwait
es
mov
pushf
aas
ljmp
pop
loopne
or
push
xchg
mov
jno
lds
cli
push
rorb
inc
xor
add
add
call
jle
adc
push
fidivs
fisttps
js
cmp
inc
incl
iret
shlb
sub
mov
fsubrs
push
xchg
or
out
jp
jnp
and
test
pop
mov
mov
pop
ja
adc
in
pusha
into
push
inc
jbe
xlat
aam
cld
jb
mov
xchg
ljmp
add
add
mov
bound
mov
fsubs
ret
sub
mov
inc
push
inc
add
pop
cmpsl
push
inc
sbb
ret
push
mov
or
add
add
icebp
xor
loopne
mov
pop
loopne
inc
out
out
mov
mov
cmp
jg
mov
and
and
push
rcrl
jmp
aaa
sub
fwait
roll
pusha
fbld
insb
or
testb
lock
or
xor
cmp
rcll
dec
mov
lcall
pop
sub
mov
xchg
inc
test
add
ds
sub
shrb
adc
xchg
pop
pop
js
jno
mov
jo
stos
sarl
add
jecxz
ja
sub
icebp
decl
into
mov
cld
jge
sub
adc
or
iret
xor
loop
lock
xchg
aas
inc
sub
cmp
scas
aaa
cld
sub
push
mov
arpl
aam
out
push
div
std
test
push
or
mov
int3
dec
inc
pop
lea
and
aaa
cld
orl
push
and
iret
inc
arpl
adc
fdiv
enter
lock
test
add
jl
inc
lcall
jl
cmp
or
mov
jp
xchg
leave
sub
shr
sbb
push
add
lret
add
out
shll
cmpsb
sub
aam
cld
mov
test
xor
dec
loop
pop
xchg
aad
xchg
jbe
sbb
dec
clc
lcall
mov
out
loope
or
jae
rorl
mov
out
push
mov
lcall
popa
nop
cmp
sbb
and
insb
cmp
add
decl
mov
sub
xor
cmc
addr16
mov
or
inc
lods
ret
jno
jae
sbb
sbb
shl
mov
or
mov
push
daa
int3
dec
lret
hlt
les
das
add
or
cmpsb
shlb
mov
mov
rcr
stos
adc
lods
insl
and
cs
icebp
mov
subb
popa
xor
cmp
into
test
enter
add
ljmp
sub
mov
pop
push
add
scas
js
hlt
fiadds
and
cld
pop
dec
inc
mov
iret
stc
ljmp
nop
lods
jbe
ja
js
jo
adc
clc
dec
js
mov
cmp
fadds
cld
arpl
mov
adc
test
sti
pop
loop
push
or
mulb
add
fiadds
inc
stos
ljmp
cmp
cltd
outsb
adc
add
lock
push
push
mov
fldl
sbb
aaa
sub
pushf
mov
outsl
aaa
mov
inc
insb
mov
cmc
mov
jmp
or
add
jge
pop
dec
ficoms
jg
cld
int3
xchg
stos
sub
cmpsb
lods
and
lcall
mov
cmpb
or
sub
xor
aaa
mov
cld
mov
pop
rcr
cltd
sub
adc
sar
es
add
dec
incb
mov
sbb
gs
mov
mov
push
out
fldcw
push
push
jecxz
fildl
jp
das
andb
cmc
push
jae
jecxz
sbb
jbe
add
xchg
jnp
inc
add
fisubl
add
add
inc
dec
cmp
mov
and
sbb
inc
xchg
inc
sbb
sar
pop
decl
pop
fidivrs
cmpsl
add
rolb
add
std
cs
dec
mov
cmc
and
ljmp
push
pop
push
sbb
insb
insb
scas
push
adc
xor
pop
orl
lock
mov
cmp
fnstsw
sub
std
adc
mov
adc
mov
les
xorb
decb
popa
mov
mov
sbb
jmp
push
inc
cltd
data16
sub
out
aaa
mov
and
stc
fstl
aam
sbbb
sbb
ss
push
xor
clc
int
ficoml
xchg
xchg
ret
xchg
xor
call
inc
out
repz
incb
push
sbb
push
es
xchg
cwtl
loope
fstpl
ret
stc
outsl
add
cmovp
cli
add
jmp
jnp
js
xor
sbb
subb
icebp
mov
xchg
inc
xor
mov
jl
cmp
push
push
scas
pop
sbb
mov
fs
cli
mov
jbe
rolb
add
aam
jne
mov
adc
adc
std
sub
fisubrl
adcl
and
cmp
inc
mov
aad
ds
insb
or
cmp
fs
cmc
inc
andb
pop
scas
mov
cmp
mov
test
cs
push
mov
pop
adc
mov
xchg
mov
or
clc
mov
sahf
and
mov
push
pop
std
sub
push
or
cmp
add
cmp
outsl
ljmp
movsb
mov
call
rclb
xorl
iret
dec
cmc
inc
pop
clc
and
insb
xor
imul
sub
cmp
jecxz
and
sbb
xchg
cmp
pop
adc
fs
xor
xor
sub
xor
jnp
dec
mov
push
sbb
js
loopne
adc
les
pop
dec
call
jp
inc
push
rcl
sub
mov
pusha
ss
sbb
loopne
jle
in
int3
cmp
icebp
sub
pop
push
loopne
sub
sub
mov
jmp
inc
std
xchg
incl
push
adcb
ret
mov
call
leave
sarb
ror
daa
jecxz
inc
add
psraw
mov
loop
scas
inc
sbb
mov
cmp
cs
mov
stos
rcrb
mov
xchg
mov
sub
mov
scas
mov
push
aaa
push
add
mov
cli
xor
inc
pop
jne
pop
jge
mov
subl
add
adc
mov
push
xchg
insb
add
xchg
cmp
cmp
xchg
pop
fadds
add
hlt
push
nop
push
jl
and
scas
inc
rorl
fwait
xchg
xor
sub
adc
pop
das
cli
jge
shll
push
sub
sbb
pushf
mov
push
jmp
test
cli
mov
pop
roll
mov
push
mov
ret
adc
outsb
int
je
push
and
gs
sbb
cmpsb
cli
xchg
in
mov
jecxz
fdiv
mov
sbb
cld
sub
xchg
fimull
roll
push
data16
sub
and
mov
adc
or
cmp
aaa
mov
adc
and
sbb
push
hlt
jp
jg
jp
jmp
xor
xchg
and
inc
sbb
test
push
dec
mov
inc
jl
mov
sub
jo
pop
pop
and
mov
push
jg
arpl
push
aam
adc
sbb
dec
pop
in
and
cmpsb
mov
mov
das
les
sub
add
jo
push
pop
sbb
test
mov
sub
sub
mov
rorb
mov
insb
mov
push
pop
out
lock
xor
dec
test
in
adc
mov
cltd
js
mov
jno
sbb
sti
adc
inc
test
pop
enter
jns
and
xor
dec
cmp
outsb
arpl
enter
insl
sbb
xchg
sbb
mov
xor
and
ja
jp
mov
mov
test
ljmp
pop
sub
dec
incl
int
xor
mov
cmp
sbb
lahf
pusha
cmpsb
jns
jmp
aam
sbb
aaa
cmp
push
nop
frstor
div
dec
repz
aaa
ja
and
addr16
sbb
mov
or
mov
pop
add
adc
mov
mov
andl
mov
sub
loop
shr
mov
and
cmpsl
fisubs
mov
add
lods
std
inc
in
orb
ss
adc
dec
pop
add
mov
nop
mov
cli
sbb
mov
dec
and
mov
ja
or
in
faddp
out
int3
xchg
jno
mov
cmc
test
or
push
or
sbb
out
fistl
sarb
add
and
mov
inc
add
cwtl
out
scas
ljmp
push
imul
sbb
call
cli
into
ret
sbb
inc
mov
adc
dec
add
mov
jne
mov
adc
or
cli
mov
sbb
cli
cmp
in
and
cli
jg
out
mov
mov
ret
mov
dec
xor
xor
adc
xor
int3
xor
into
jno
pop
cmp
test
pop
push
sub
mov
and
sub
pop
loop
push
decl
and
dec
xor
ss
fildl
jp,pn
idivl
sub
test
imul
xor
arpl
mov
dec
or
mov
fists
fisttps
test
or
test
divb
sub
push
pop
jmp
sbb
mov
int3
out
xchg
inc
nop
dec
push
arpl
adc
xchg
mov
add
push
les
add
fcmovnb
mov
sbb
mov
xor
jb
inc
in
jg
mov
adc
lods
push
jp
shl
testb
das
pop
jnp
sbb
inc
pop
mov
in
scas
cwtl
imul
test
insl
xor
adc
cmp
lcall
test
rclb
xchg
arpl
dec
push
out
inc
stos
ds
push
and
push
or
sbb
pop
inc
mov
dec
lret
cmc
sbb
movsb
sbbb
popf
adc
jne
pusha
daa
loop
icebp
push
mov
hlt
sbb
icebp
cs
sbb
adc
mov
clc
pop
cmp
test
add
xchg
outsl
fstpt
test
ja
xor
jl
sub
inc
jg
add
dec
mov
pop
ror
jg
add
js
cmp
imul
add
pushf
inc
movsl
xchg
iret
lahf
dec
jg
dec
fwait
xor
add
or
dec
je
les
out
dec
std
call
in
push
adc
hlt
and
or
sub
mov
hlt
push
jl
mov
daa
xchg
mov
sub
insl
cmp
add
movsl
cwtl
xorb
test
adc
stos
mov
mov
gs
add
je
adc
aam
fwait
sbb
hlt
jmp
bound
aad
lock
fldcw
repz
sub
mov
insb
and
or
scas
mov
fdivrp
fistps
push
cltd
inc
idivb
mov
loop
out
xchg
sub
xchg
ja
cld
add
push
loop
adcb
jne
pop
mov
dec
add
loope
push
es
and
or
xor
pop
and
mov
imul
in
mov
jo
out
jl
pop
out
cltd
push
mov
mov
push
adc
mov
dec
negb
std
push
scas
cmp
ret
clc
pop
ret
push
pop
mov
iret
adc
movsb
and
lock
shl
pop
pusha
pop
addr16
lock
lret
jecxz
dec
pop
hlt
push
pop
mov
xchg
scas
sub
test
scas
jmp
push
and
jg
ret
sub
incl
sbb
clc
roll
sbb
adc
test
out
push
dec
loopne
adc
rorl
aad
jg
icebp
mov
pop
pop
mov
aam
cmp
pop
clc
or
jbe
jmp
or
mov
add
fidivrl
push
mov
outsl
int3
adc
incl
lret
xor
stos
push
jb
push
jne
incl
add
push
test
fmulp
push
xor
cltd
sbb
fsub
out
dec
decl
lds
test
scas
lock
or
xchg
test
movb
cmp
imul
sbb
sbb
hlt
jp
outsl
test
or
xorl
dec
push
add
fwait
stos
xchg
sub
test
dec
loope
je
iret
sahf
jmp
rorb
xor
loop
and
aaa
mov
lret
sbb
scas
add
dec
lods
add
mov
subb
sbb
mov
ljmp
push
xchg
jae
sti
sbb
int
call
cmp
stos
inc
and
mov
repnz
push
sbb
insb
lret
add
stc
or
pop
test
fiaddl
mov
aas
mov
jg
ja
lds
push
push
stos
std
lock
shl
or
inc
or
jbe
out
mov
pushf
adc
fiaddl
mov
pop
pop
cmp
jle
pop
fsubrl
stos
gs
mov
push
and
fldl
push
cmp
addr16
dec
cmp
lock
loopne
inc
cld
or
cmp
lock
stos
leave
int3
add
gs
aam
cwtl
call
out
adc
repz
jne
add
sub
in
pop
lret
cmp
and
mov
fs
pop
sub
hlt
and
dec
rolb
push
into
inc
repz
clc
in
in
sub
or
mov
push
or
sbb
sub
dec
push
sub
jb
rolb
push
incl
mov
movb
add
popa
cmp
mov
jae
sbb
fdivrp
mov
add
stc
jns
xchg
test
fidivrl
aad
xor
sti
aaa
sbb
ljmp
add
cmpsl
mov
mov
jnp
and
clc
adc
movsb
xchg
data16
xor
sbb
mov
test
xlat
push
cmp
repz
js
nop
lahf
and
sub
call
push
add
into
inc
cli
pop
sub
mov
cmp
lds
lock
add
and
and
jo
sub
cld
sbb
mov
scas
lahf
loopne
add
out
inc
shrl
repnz
stos
push
mov
pop
mov
movsl
and
in
std
and
mov
mov
test
pushf
fldcw
jg
push
movsb
bound
and
xchg
jle
pop
movsb
inc
or
cwtl
jmp
sbb
or
jno
jg
push
mov
sub
mov
inc
dec
invd
repz
cld
push
outsb
xchg
stos
repnz
add
pushf
add
jp
outsl
push
jbe
xlat
aas
cmpsb
mov
xchg
ja
ds
sub
mov
mov
shll
not
lcall
imul
cli
addr16
add
cmp
call
stc
dec
add
sbb
in
rcrl
ljmp
arpl
fcmove
cmp
mov
insl
mov
ljmp
sbbb
xchg
or
test
pop
js
push
shll
movsb
pushl
and
pop
stos
cwtl
mov
mov
cmpsl
incl
adc
ret
subb
xor
js
std
pop
dec
fwait
push
out
js
lret
adc
pop
stos
add
xchg
xor
sub
adcb
out
hlt
clc
xchg
pop
jg
cld
sub
popa
inc
test
inc
mov
mov
and
inc
push
pop
xchg
dec
jb
push
xor
push
cmp
mov
scas
stc
dec
cld
into
xchg
sub
adc
pop
aaa
jecxz
cmp
add
repnz
adc
cmp
push
mov
dec
inc
std
into
inc
add
scas
push
xchg
inc
and
inc
pop
jecxz
push
imul
push
clc
sub
add
inc
jecxz
cs
adc
fldln2
mov
dec
or
cmpsl
push
sbb
rorb
adc
sub
scas
mov
pop
ljmp
enter
push
js
jg
xchg
loope
clc
jg
push
add
mov
loop
adc
fisttps
inc
pop
sahf
shrl
dec
mov
mov
xor
movsb
push
lock
add
dec
jg
pop
adc
xor
aam
inc
sbb
aam
rolb
les
mov
das
push
arpl
adc
insl
addr16
xchg
sub
push
pop
cltd
mov
push
scas
jo
lods
adc
icebp
sbb
aas
push
cmp
xor
sbb
outsl
push
aaa
cmp
mov
mov
adc
cs
xor
inc
cli
or
shl
jecxz
lock
mov
rol
or
movl
aam
jbe
mov
pushf
xor
dec
stos
insl
fstpl
dec
insb
inc
mov
inc
xor
loop
leave
push
mov
cmp
hlt
mov
xor
sarl
fisttps
sbb
add
movsl
dec
and
hlt
les
push
loopne
repz
call
xchg
or
or
pusha
rcr
and
add
inc
ret
bound
adc
shl
push
or
cmp
shr
cld
jo
mov
mov
mov
sar
xchg
loopne
pop
imul
jge
push
cltd
xchg
test
inc
adc
jbe
ljmp
stc
pop
sbb
cli
mov
popf
sbb
scas
loopne
or
add
jle
rclb
mov
or
inc
mov
inc
lds
int3
mov
loop
xor
cmp
xor
mov
sahf
jo
and
xor
jge
mov
cmp
scas
inc
push
xchg
aaa
inc
mov
cmc
sbb
comiss
repnz
mov
jg
mov
xchg
incb
pop
stos
fidivrl
nop
push
rolb
and
mov
adc
addb
call
cs
xchg
incb
ljmp
push
ljmp
mov
sbbb
std
push
lcall
hlt
fxsave
push
mov
sahf
xchg
cmp
lock
inc
or
mov
or
std
push
and
jg
cld
mul
xlat
xor
pop
rclb
jg
cmp
rolb
sbb
sbbb
cmc
mov
cmpsl
mov
test
testl
sbb
cmp
xchg
jle
mov
jae
out
lock
push
or
je
mov
adc
cli
or
inc
inc
mov
jge
or
or
mov
sbb
mov
std
push
andl
mov
pushf
out
add
mov
mov
ljmp
cli
cld
mov
xchg
and
loope
mov
dec
cmp
cmp
dec
repnz
outsb
cmp
pop
das
sbb
or
sbb
rclb
push
mov
loopne
data16
out
dec
lock
inc
fistl
jle
cmp
jp
stos
push
inc
pop
and
push
test
adc
in
jl
cwtl
xor
pop
outsb
and
ds
ret
sub
lock
movsl
xor
das
cmp
and
js
aaa
rcl
imul
and
push
pushf
cmc
pop
or
dec
inc
dec
xchg
mov
incl
push
inc
ljmp
mov
pop
pop
dec
inc
je
push
pop
lret
push
in
in
or
xchg
incl
test
push
and
push
mov
pop
cmpsb
mov
push
cmc
out
and
jae
sub
mov
or
nop
add
xchg
xor
mov
in
add
dec
rcrb
int3
push
add
aas
je
arpl
push
repz
decl
jge
xchg
int
add
je
insb
lods
stos
fcmovnbe
mov
inc
ret
lds
cld
mov
std
mov
sbb
mov
xor
and
ret
out
lods
add
testb
lods
out
mov
jnp
mov
popa
loope
push
loop
dec
mov
lret
push
or
mov
movsb
sbb
mov
mov
int3
stc
mov
add
or
pop
sbb
mov
mov
pop
add
dec
adc
inc
sub
dec
mov
ret
in
cmp
mov
scas
incl
aad
add
xchg
jecxz
popa
inc
cld
or
call
jmp
lods
sti
je
shr
clc
ffree
imul
add
or
dec
loope
cmp
aaa
pop
daa
repnz
lea
pop
adc
test
mov
call
mov
lods
mov
mov
movsb
cld
iret
cmpsb
out
dec
cmpb
ds
mov
inc
pop
bound
sti
call
pop
push
orb
push
sahf
clc
adc
js
lods
pop
jl
syscall
fldl
add
sub
add
jmp
lock
cmc
adc
mov
pusha
jae
aam
mov
ljmp
jmp
pop
mov
adc
mov
clc
iret
add
daa
pushf
and
std
push
or
dec
je
xchg
inc
and
mov
xchg
mov
icebp
addl
xchg
cld
cs
mov
pop
or
aaa
cld
pop
movsb
mov
daa
add
hlt
out
fbld
icebp
jg
add
pusha
loope
lods
cld
imul
js
inc
mov
mov
pushf
push
jle
aad
shlb
hlt
mov
pop
xchg
outsl
ds
les
mov
icebp
lcall
pop
pop
insb
add
dec
daa
sub
fs
push
repnz
and
pop
pop
mov
push
and
mov
sbbl
retw
or
sub
fcomi
add
mov
cmp
loope
add
xor
icebp
inc
xchg
push
movsb
fidivl
jl
incb
shl
out
inc
xchg
mov
pushl
aad
xchg
sbb
cltd
lods
fsubrs
loopne
notl
sbb
fiadds
jne
fs
scas
sub
push
cmc
mov
mov
jg
enter
lds
mov
or
pop
jge
mov
repnz
and
mov
out
decb
mov
xor
ret
cld
mov
sbb
or
adc
mov
ret
call
test
ja
pusha
shlb
cwtl
pushf
pop
jmp
pop
or
cmc
sbb
lahf
and
cmpsb
sbb
fldl
rcr
cmp
outsl
aam
data16
sahf
xor
push
ficoms
pop
dec
lahf
cli
add
xlat
out
cmp
inc
dec
fisubrl
inc
cmp
sub
lock
push
add
outsb
pop
jle
test
cmp
or
or
or
pushf
mov
mov
mov
mov
or
jmp
add
add
inc
je
test
sti
push
data16
mov
sarb
jo
clc
je
mov
arpl
jns
out
lcall
add
es
mov
std
out
jb
mov
int
cmp
test
xor
jg
je
and
lea
ficoms
xlat
lcall
cmp
xor
dec
add
push
mov
call
pop
sub
cwtl
push
xchg
xchg
and
stos
fcomp
stos
sub
lcall
mov
es
pop
mov
pop
mov
jns
and
roll
mov
pop
outsl
push
xor
inc
clc
fsubrl
or
mov
pop
fxch
paddsw
sub
ficomps
shlb
or
sub
xchg
rorb
movsb
fwait
push
push
push
add
pop
mov
subb
jg
lret
add
mov
pusha
push
mov
jg
test
nop
sub
mov
mov
add
mov
adc
sbb
das
pop
aam
push
lcall
adc
in
fldcw
push
loop
test
mov
pop
dec
push
popa
jno
mov
mov
xchg
pop
sub
out
frstor
push
test
dec
into
fbld
out
int3
or
out
andb
mov
lock
testl
fsubrs
loope
adcb
fcoms
stos
adc
mov
xchg
rolb
lcall
or
pop
addr16
xchg
push
pop
mov
subb
lock
push
cmp
jl
incb
fmulp
fimuls
or
lret
push
ljmp
aas
fs
and
ljmp
mov
xchg
cmp
xchg
les
hlt
add
adc
mov
aaa
inc
mov
rolb
loopne
add
mov
add
add
cli
mov
jge
jmp
adcl
xor
add
out
fcmovnbe
dec
mov
mov
repz
xchg
xor
mov
std
jmp
xchg
dec
inc
sbb
call
sahf
inc
je
jb
jbe
xchg
outsl
out
sub
and
notl
bound
je
div
jnp
repnz
pop
shrl
cld
cmp
clc
push
or
push
ljmp
or
sti
xor
lahf
leave
mov
inc
out
scas
mov
ljmp
rclb
inc
pop
movsl
cmpb
or
mov
lcall
xor
sub
out
push
xchg
int3
in
pop
loopne
fs
pop
inc
jno
sbb
out
adc
ficompl
rcrb
or
add
aas
pop
sbb
lcall
test
loop
or
jl
in
mov
inc
adc
into
mov
xlat
adcb
jbe
enter
dec
aas
lcall
push
cwtl
lret
add
cmp
add
loope
jmp
pop
push
clc
sbb
movl
dec
scas
mov
stos
sub
das
dec
sbb
xor
mov
pop
mov
fldl
xchg
mov
xchg
or
and
std
mov
or
jo
jno
sarl
pop
xor
ret
jns
ljmp
out
insb
ljmp
push
jb
cmp
jmp
pop
aas
jmp
mov
fst
sbb
xchg
cmp
sub
shlb
push
xchg
adc
cmc
hlt
aas
jmp
sbb
insb
repz
test
es
push
and
mov
cltd
cmp
cltd
fsubrl
imul
mov
and
pop
push
nop
push
or
add
mov
and
and
mov
jl
aaa
ss
adc
sbb
add
out
sbb
dec
jle
call
int
inc
in
push
loopne
aas
mov
cmp
in
jno
das
sub
add
cld
call
inc
popa
pusha
or
or
or
out
mov
pop
dec
sbb
sbb
mov
cmp
lea
std
pop
lock
enter
mov
lods
pop
xor
sub
xchg
in
xorl
test
pop
cmp
or
push
aam
sbb
cmovg
je
movsb
push
pop
sarb
add
out
clc
and
ljmp
das
lods
ljmp
hlt
and
dec
and
icebp
mulb
jb
add
test
sbb
js
hlt
call
xchg
push
scas
push
and
in
mov
lret
in
add
das
and
clc
cmc
stos
inc
aam
adc
mov
repz
cmp
out
jg
fucomp
test
int
and
xor
fstpt
cmp
jg
loope
into
sahf
and
add
xchg
xchg
js
shrb
dec
testl
out
mov
dec
int3
repnz
jl
test
inc
in
jg
lret
cld
push
addb
fists
push
cmp
push
int
mov
cmpsl
lock
cmp
into
adc
pop
add
mov
nop
cwtl
add
int3
hlt
add
lock
sbb
push
sbb
mov
frstor
sahf
movsb
dec
sti
mov
movsl
lds
test
aam
mov
loop
mov
adc
cmp
mov
popa
xor
aam
push
push
stos
and
or
sti
imul
push
dec
stos
xor
jg
or
mov
jp
pop
jp
fisubrs
and
or
shlb
xchg
rol
inc
repnz
jge
xchg
mov
std
and
fidivrs
adc
popf
fstpt
adc
es
pop
imul
cmp
fdivrl
loope
inc
loopne
imul
mov
test
xchg
pop
lret
xchg
sbb
sbb
xor
cld
clc
mov
sub
jg
adc
dec
jp
jmp
push
xchg
loop
xor
xchg
ds
clc
incl
movsb
imul
stos
pop
or
sbb
insb
hlt
cld
shll
mov
adc
sbb
sti
aad
mov
adc
mov
lcall
in
push
push
mov
stos
in
mov
or
sbb
add
dec
movsb
rorb
incb
mov
jg
jle
xchg
cli
popf
or
lret
fdivl
mov
clc
or
aaa
stos
pop
sbb
xlat
push
nop
or
pop
jg
decb
ficoml
mov
testb
movl
and
adc
or
lods
or
pop
sti
shlb
mov
jge
ret
add
jmp
lret
loopne
clc
test
push
cwtl
test
outsb
scas
xchg
sahf
cs
mov
pushw
stos
cli
sub
insl
or
add
mov
push
push
in
mov
and
and
cli
and
mov
push
mov
or
pop
fdiv
jecxz
roll
loopne
sbb
pop
mov
scas
jmp
imul
adc
test
icebp
xor
add
popa
fisttpl
pop
jne
mov
xchg
daa
jae
pop
es
out
test
cmpsb
jnp
xchg
mov
jne
aas
sbb
sti
push
pop
stos
cld
dec
adc
rcl
ret
pusha
test
adc
add
xchg
or
sub
pop
inc
rorl
or
arpl
xor
jo
sbbb
pusha
scas
sahf
repz
jecxz
imul
out
nop
cmp
stos
nop
outsb
jbe
push
inc
or
int
popa
mov
flds
xchg
pop
ret
loopne
repnz
xchg
dec
xor
popa
mov
das
loope
cmc
ret
pusha
pop
jo
popf
aaa
jmp
mov
xor
movsb
add
dec
or
push
mov
cmc
ss
adc
jle
xor
sbb
aas
push
or
sbb
dec
sub
push
xor
test
sbb
push
sub
sub
jo
push
loope
cs
cmpb
icebp
loop
or
jmp
xchg
sbb
and
jbe
arpl
ja
or
or
or
or
insb
adc
push
aaa
out
fstps
movsl
stos
pusha
mov
in
mov
jo
fs
lock
nop
imul
xchg
jp
shll
jp
scas
pushf
outsb
test
add
push
outsl
dec
stos
xchg
pop
test
or
push
clc
xchg
push
add
sbb
rcrb
into
or
inc
add
adcb
cmpsb
sub
jne
in
jg
dec
xor
xor
mov
add
stos
daa
jnp
jmp
ret
dec
dec
mov
adc
jmp
cmc
adc
push
dec
mov
push
mov
jg
jmp
dec
xor
jb
scas
jmp
sbb
jae
aas
nop
pop
jb
add
incb
fstpl
out
aaa
push
clc
mov
addb
sar
pop
push
dec
push
jbe
push
xchg
addb
mov
shlb
mov
inc
fwait
sbbl
push
adc
lea
push
inc
or
stos
jns
outsb
xor
test
add
loope
sbb
jbe
cmpsl
neg
inc
pop
jle
or
rorl
jae
outsl
andb
scas
or
or
cmp
sub
jne
add
int3
xchg
cmpsl
dec
or
les
sbb
hlt
mov
mov
leave
fs
insb
mov
push
mov
mov
bswap
fsts
pop
mov
test
daa
jne
fsubrs
testb
xchg
iret
inc
xorl
sub
nop
ret
xchg
dec
in
ja
inc
pop
cli
addl
bound
adc
negb
sub
out
jl
dec
ss
add
cld
sti
adc
insl
cmpsl
adc
add
push
pop
push
popa
jl
in
mov
lods
test
andl
xor
fs
movsl
mov
adc
mov
dec
mov
push
push
pusha
mov
sub
ret
mov
cmp
adc
clc
leave
aaa
hlt
and
sti
aaa
sbb
push
nop
push
or
sub
mov
inc
and
xor
add
jo
loop
xor
sub
xchg
decl
les
sbb
xor
xor
dec
sub
or
jle
dec
and
fnsave
ljmp
inc
lods
mov
push
and
into
mov
ret
mov
cld
roll
jmp
pop
mov
scas
ret
roll
aad
rcr
sbb
sub
mov
pop
sarb
lcall
push
sbb
pop
dec
sub
mov
das
push
mov
jl
jp
cmpsl
or
sbb
jne
jo
jnp
pop
and
ret
ss
push
stos
mov
shrb
rolb
push
dec
add
pop
sar
aaa
stos
sahf
in
dec
mov
shlb
std
push
jle
push
jns
test
je
push
cli
das
mov
cs
lret
insl
loop
push
jmp
fstpt
fcoml
cmpsl
push
iret
xchg
lock
add
push
push
mov
push
inc
or
and
int
rcll
inc
shrb
mov
jmp
cli
push
push
out
sub
sub
fcoml
xchg
repz
popl
fcoml
sti
test
pop
cli
add
adc
scas
jp
inc
sub
jo
push
sahf
ljmp
scas
mov
mov
lods
inc
jmp
out
jl
jmp
cmpb
pop
xor
pop
mov
mov
jmp
push
mulb
aad
pusha
arpl
mov
add
pop
ret
call
cld
add
lods
loope
jmp
xlat
notb
xchg
std
inc
push
shrb
push
dec
loop
std
mov
fistps
movsl
std
adc
js
push
push
ret
xor
repz
push
mov
fiaddl
mov
jbe
sbb
cmp
fdivr
icebp
aad
orb
or
add
pop
jmp
cli
inc
dec
mov
sub
jbe
orl
loop
and
xor
mov
mov
xchg
jbe
mov
jecxz
out
and
pop
cmp
std
negl
xchg
test
adc
insb
and
jle
sbb
xchg
fisubrl
test
add
pop
and
inc
xchg
add
ljmp
ja
jae
push
js
mov
insb
loope
or
ss
push
dec
mov
adc
adc
lret
mov
push
xor
pop
pop
sbb
stos
cmp
and
mov
aaa
aad
cmp
or
xor
jne
sbb
cmp
push
pop
cmpsb
rcrb
call
mov
inc
mov
mov
imul
jne
outsl
call
or
or
js
arpl
mov
xchg
and
pusha
add
push
mov
mov
popf
pop
ds
data16
popf
xchg
aas
add
decb
out
add
add
push
mov
dec
dec
xchg
push
add
in
jecxz
stc
fistl
add
inc
sbb
testl
testb
sbb
arpl
xlat
cli
lcall
cwtl
inc
sti
js
add
pop
sub
adc
xor
adc
jle
inc
or
sbbl
pop
push
stos
mov
pop
lock
fmull
push
daa
mov
adc
sub
test
test
push
jnp
call
mov
inc
leave
pop
dec
push
lcall
mov
idivl
push
addb
int3
js
icebp
mov
adc
and
xor
adc
mov
push
aaa
pop
xchg
mov
imul
push
loope
xor
mov
jg
cmpb
gs
jge
icebp
das
pop
xor
adcl
push
js
jo
pop
add
or
clc
iret
cli
loopne
mov
leave
inc
cmp
bound
repnz
jecxz
mov
cmpsb
sub
out
inc
std
cmp
jecxz
mov
or
jl
add
mov
add
cmpsl
xor
call
xor
std
fidivrs
lret
in
sub
cld
and
sbb
push
pusha
shll
push
fldenv
mov
orl
cmpsb
ja
adc
aam
popa
cmp
jg
push
mov
lock
push
pop
outsb
xorb
sub
stc
insl
push
xchg
dec
sbb
mov
call
divl
out
mov
jmp
iret
movb
lods
sbb
jne
out
push
dec
mov
pop
loop
fwait
aam
push
sbb
push
pop
cli
mov
sbb
pop
loope
fdivs
adc
fiaddl
in
ret
test
add
fmull
push
inc
ss
sub
sub
hlt
aaa
pop
pop
bound
lret
jnp
add
out
mov
and
adc
adc
adc
orb
jl
movsl
add
lcall
sub
pop
adc
and
inc
es
out
lcall
push
push
mov
js
lds
scas
fcomip
je
mov
mov
inc
push
loope
cmp
mov
pusha
adc
movsl
jg
loop
into
pop
or
in
jecxz
or
rol
inc
movsb
sbb
pop
adc
pop
std
push
out
jp
or
inc
subw
rcrl
mov
sub
insb
incl
pop
xor
xor
dec
shlb
icebp
jbe
xlat
decl
push
dec
shlb
out
add
adc
mov
test
mov
sti
sbb
icebp
popa
mov
movsb
aas
nop
push
test
sbb
mov
iret
push
mov
jnp
insl
push
out
bound
push
cld
push
add
adc
cld
aad
std
insl
mov
or
pop
icebp
sub
add
jne
cmpsl
cmp
and
bound
ljmp
decb
ljmp
testl
adc
sub
jge
mov
into
pop
cmp
dec
mov
xor
mov
lods
push
int
rcl
pushf
popf
clc
scas
negl
add
add
ds
iret
incb
xchg
dec
and
xchg
mov
je
dec
cmp
icebp
jg
mov
inc
pop
scas
xchg
sarb
aad
stc
addr16
test
ss
jns
sbb
pop
shr
clc
xchg
incl
leave
rcl
lret
shrl
daa
mov
sarl
add
stos
mov
inc
pop
inc
fcoms
mov
pop
faddl
add
outsb
adc
pop
filds
mov
mov
mov
rcll
xchg
mov
mov
pop
jl
dec
dec
dec
inc
test
jge
jno
mov
sub
sar
adc
push
aas
cltd
mov
push
int
clc
cwtl
subl
insb
push
push
cld
push
in
or
lcall
enter
xchg
push
inc
add
or
clc
sub
icebp
std
cs
xor
jb
push
jno
push
mov
pop
add
xchg
or
push
or
mov
in
gs
push
fsubl
mov
and
imul
dec
pusha
cmp
pop
jl
sar
xchg
shlb
push
sbb
xor
add
mov
sbb
add
mov
add
push
and
bound
mov
lcall
push
mov
cmp
imul
sbb
cmc
jnp
push
in
fcmove
ret
shl
lock
push
mov
stos
sbb
push
mov
fstpt
sub
xchg
mov
mov
and
mov
hlt
stos
popa
mov
inc
add
lock
ret
sahf
outsl
call
adc
stos
nop
push
add
adc
stos
stos
pop
pop
push
cmp
loope
dec
or
std
neg
push
hlt
shrl
icebp
test
testl
or
loopne
ja
xchg
jbe
sub
push
clc
push
insb
mov
jg
adc
xchg
xchg
aas
nop
out
and
scas
jno
xchg
adc
lods
jle
js
call
pop
adc
fadd
shr
imul
sub
nop
sbb
and
pop
push
add
or
outsb
add
mov
out
pop
adc
mov
pop
inc
in
add
sub
pop
pop
jnp
call
or
inc
pop
test
xchg
push
loop
movsb
mov
mov
and
in
sub
cld
mov
cli
call
pop
bnd
stos
sahf
fidivs
pop
jg
js
sub
mul
mov
ljmp
add
adc
pop
cmp
cltd
cld
or
or
scas
mov
push
adc
mov
data16
imul
mov
pop
mov
shll
loope
inc
or
push
call
enter
notl
push
dec
nop
nop
cmpsb
lods
adc
nop
enter
fistpll
loopne
mov
xchg
orb
incb
cld
push
fadd
outsl
cwtl
vgetexpss
bnd
inc
mov
std
nop
shlb
outsb
outsb
jg
das
xorb
cmp
stc
cltd
loope
and
jo
nop
lods
xchg
push
outsl
dec
std
pop
outsl
in
mov
add
and
das
adc
and
cs
add
je
ds
lods
dec
and
gs
mov
aam
pusha
out
add
sbb
dec
pop
fs
dec
sub
inc
or
inc
inc
movsl
test
loop
mov
sbb
or
adc
lret
jge
andb
shl
adc
xor
dec
ret
jl
loopne
mov
lods
clc
ds
mov
adc
xor
bnd
jmp
outsb
xchg
andb
push
mov
in
mov
test
call
adc
push
add
ffreep
mov
add
gs
pop
mov
jmp
jb
push
repz
popf
mov
negb
cmc
pop
outsl
jmp
hlt
mov
mov
adc
push
sub
lds
add
add
or
fwait
jns
inc
add
jo
aad
mov
and
inc
inc
adc
push
pop
mov
ljmp
adcb
out
dec
xchg
xlat
rcll
add
cld
fisttps
push
rolb
dec
nop
mov
fdivrs
loop
xchg
std
push
pushf
ret
out
cmpsl
hlt
jmp
test
push
mov
pushf
arpl
cs
inc
std
into
jbe
sarb
dec
push
std
inc
jl
adc
adc
sar
cmp
push
cmp
xor
bndstx
push
mov
cld
cwtl
jg
or
mov
test
sub
je
push
icebp
shrb
fisubs
cli
xchg
jne
popf
sub
cmpsb
das
rcrb
dec
xchg
add
add
sar
add
pop
jo
imul
sarb
push
xchg
outsb
out
testb
and
loop
cmpb
sub
add
xor
sub
add
or
sbb
add
mov
push
xchg
sbb
sub
xchg
movsl
sub
in
xchg
pop
lea
xor
jg
sarb
movl
fdiv
scas
idivl
jp
sbb
icebp
gs
push
pop
inc
ficompl
je
mov
and
fidivrs
add
pop
sub
jg
mov
sub
in
sbb
jmp
pusha
call
sub
mov
add
je
nop
sti
fidivs
mov
or
test
addr16
dec
xor
xchg
or
lods
adc
es
pusha
cmp
or
inc
aaa
or
mulb
or
adc
dec
push
icebp
cmp
imulb
bound
add
or
lea
xor
push
test
jle
das
push
mov
scas
popa
mov
mov
and
fwait
scas
jg
sub
xchg
sbb
cmp
es
mov
add
inc
inc
push
stos
mov
add
lret
cmp
insb
adc
leave
jle
inc
ljmp
loopne
xlat
fcmovne
incl
cli
mov
mov
jmp
add
imul
dec
test
fwait
jno
sbb
aad
dec
loopne
ss
clc
idivl
push
dec
and
fwait
out
sbb
ret
inc
neg
jmp
jecxz
lahf
jmp
dec
xchg
icebp
cmp
xchg
push
nop
pop
stc
loop
sbb
push
shll
les
scas
xchg
mov
ja
test
scas
je
jbe
pop
push
clc
xor
pop
clc
jo
jg
mov
idivb
and
bound
jle
mov
loopne
adc
xchg
ja
cli
pop
das
mov
add
pop
sbb
pop
add
pop
pop
stos
mov
sbb
mov
xchg
mov
hlt
cmp
pop
mov
push
push
adc
jl
pop
push
jno
out
lods
or
mov
cmp
push
lods
mov
int3
and
int
outsb
push
sbb
mov
xor
ret
cmp
clc
dec
push
cmp
arpl
fsubs
cmp
push
in
or
adc
sub
scas
lock
call
xchg
dec
test
ret
push
stos
cli
jmp
shlb
push
mov
in
jp
idivb
pop
dec
push
mov
xor
jns
sub
dec
inc
es
int3
scas
xchg
stos
lods
jl
rorl
in
je
add
popl
jl
lcall
into
xchg
aam
jecxz
loope
in
aas
mov
sub
cld
inc
std
aas
lods
cvttps2pi
cmp
mov
or
jge
lea
fnsave
dec
scas
sti
aaa
ret
loop
inc
mov
mov
xor
les
std
mov
repz
and
pop
sbb
mov
xor
xchg
jp
push
insb
hlt
or
std
movl
pop
jl
fs
bound
in
mov
inc
cs
rolb
mov
js
xchg
mov
cvttps2pi
test
mov
popl
dec
mov
xchg
mov
adc
inc
mov
pop
jle
ret
sbb
sarb
mov
push
lea
test
or
aad
es
stc
in
cmp
push
jo
mov
insb
arpl
ret
insl
cmp
push
rorb
lea
cmpsb
or
cmp
rcl
xchg
ret
fs
mov
adc
cwtl
sbb
hlt
out
or
push
dec
rcrl
int3
js
insl
lcall
pop
sbb
seto
cli
cld
jnp
test
inc
lds
adcl
lea
pop
das
cld
aas
js
imul
lret
cmp
fmul
aaa
in
shl
sahf
dec
sub
mov
shrl
shl
scas
aam
imul
mov
clc
mov
pop
xlat
cmpsl
add
sbb
testl
jne,pn
les
incb
test
sbb
mov
loopne
shrl
mov
fwait
jb
int
cltd
pusha
push
lock
add
xchg
mov
xorb
or
jmp
cli
add
cmp
jge
test
mov
leave
in
sub
lods
and
repnz
jl
sbbb
add
out
sbb
push
fdiv
or
cld
mov
push
outsb
add
pushl
or
sub
xchg
push
outsb
mov
test
inc
add
sub
and
dec
bound
repnz
test
push
cld
rolb
ret
hlt
nop
sbb
inc
push
pop
mov
jmp
ficoms
das
xor
clc
inc
mov
imul
and
cs
xchg
movsb
into
jle
rcl
inc
pop
pusha
sub
sub
lds
ss
xor
pushf
xor
or
insl
call
and
dec
ljmp
je
insb
mov
push
fisubs
mov
shlb
lods
cwtl
jbe
dec
test
sub
lret
cmp
sub
movsl
aad
int
into
and
xor
sarb
add
mov
mov
push
ret
neg
outsl
dec
iret
into
mov
sbb
sub
out
xor
add
adcb
cli
cwtl
mov
sti
out
jl
xor
sarl
xchg
or
aaa
jecxz
aam
sub
rorb
icebp
xchg
push
push
pop
std
pop
data16
ror
lahf
push
add
cmp
loope
sti
call
subl
arpl
loope
clc
jecxz
lahf
ret
pusha
sti
enter
pop
movsl
out
jle
jmp
inc
xor
or
stos
emms
popa
daa
in
movaps
dec
adc
rcrl
mov
rorb
add
xor
pop
fnstsw
dec
add
shrb
dec
sbb
xor
adc
mov
fnstsw
andb
shll
or
in
in
xchg
push
sbb
jne
ret
and
inc
add
ja
dec
jns
jbe
or
imul
cmp
sub
or
imul
scas
rcrb
scas
jno
inc
add
js
pop
xchg
fstp
sbb
jmp
adc
adc
enter
add
adc
addl
push
add
xlat
or
fdivr
or
xor
adc
lods
and
je
jo
and
push
popf
add
call
mov
mov
or
dec
or
loop
dec
jmp
out
hlt
xchg
jbe
lock
rcll
mov
lret
mov
sahf
or
or
xchg
cli
push
outsl
or
lock
cmp
mov
std
addl
pop
test
bnd
clc
cmp
sub
dec
and
add
dec
inc
push
jecxz
scas
mov
arpl
mov
data16
xchg
filds
cmp
xor
stos
mov
daa
out
mov
jo
hlt
stos
lods
add
and
mov
loope
jmp
jo
mov
out
clc
jo
sbb
sbb
pushl
xchg
pop
mov
ret
xor
inc
fisubs
out
mov
hlt
es
pop
or
mov
mov
pop
push
pop
mov
out
mov
ficomps
ja
inc
ret
fnclex
push
push
ljmp
jg
repnz
mov
fisubrs
mov
fldl
aad
jo
jb
mov
aad
or
clc
and
sub
pop
in
out
cmpsb
es
divps
decl
add
add
jo
lahf
mov
dec
clc
or
pop
out
push
sub
jl
mov
and
hlt
mov
jmp
xchg
and
outsb
jge
addw
or
push
inc
insb
cmpsl
das
shlb
leave
xchg
je
or
mov
push
cmp
fwait
ret
cmp
sbb
add
test
clc
movl
mov
cmpl
sbb
fldenv
lods
xor
or
add
cmpsl
enter
add
add
clc
cmpsb
xchg
in
jecxz
ja
cmpb
das
dec
mov
mov
ret
push
ret
dec
add
cld
ret
mov
add
ret
adc
loop
add
pop
ja
cmp
pop
or
xchg
xchg
add
cmpsb
ljmp
jnp
add
or
cmp
ss
mov
inc
shl
adc
incb
push
aad
add
inc
das
or
jmp
fmull
xchg
cld
push
pop
or
pop
fcoms
dec
test
add
jmp
adc
je
scas
mov
and
xchg
jbe
or
cmpsl
or
sub
pop
hlt
outsl
fadds
roll
sub
xor
negb
cmp
sbb
leave
mov
movsl
xchg
push
test
dec
sub
ljmp
mov
mov
idiv
sahf
push
lods
fbld
inc
insb
xor
xor
xor
mov
pop
pop
jo
js
ret
cld
sub
js
adc
dec
sbb
fdivl
inc
jmp
or
xchg
or
mov
pop
lcall
mov
xor
dec
add
lret
imul
jle
addb
stos
mov
cmp
lmsw
jne
clc
jo
aam
ret
jmp
mov
add
gs
int3
das
add
sbb
adc
xlat
clc
popa
sbb
mov
aam
push
lret
fimull
push
sbb
and
out
inc
lock
xchg
ret
cmp
call
xchg
xchg
loopne
nop
insb
mov
mov
je
divb
call
sub
dec
loopne
add
sbbl
xor
stos
nop
cmp
stos
lock
mov
arpl
cmpsb
mov
stos
lret
adc
stc
mov
add
pop
jns
rolb
hlt
sbb
xlat
adc
pushf
outsb
cmpb
fsubr
clc
or
scas
repz
cmp
mov
and
xchg
dec
fbld
roll
enter
adc
in
int3
stc
outsl
xlat
sub
xlat
fsts
add
lock
cli
add
ret
cwtl
pop
mov
add
cmp
mov
in
call
das
jp
stos
pushf
je
xchg
divl
adc
xor
movsb
mov
les
daa
test
push
xor
hlt
dec
adc
push
xchg
xor
pop
rol
das
push
and
addb
mov
xchg
adc
mov
sbb
jge
aad
xchg
fwait
jmp
movsb
imulb
mov
xorb
mov
sbb
bnd
test
mov
dec
shll
adc
scas
jp
sub
mov
and
push
movsl
ds
or
xchg
fsubs
xchg
push
pop
pusha
pop
jb
je
mov
int3
and
jecxz
loop
lret
out
aam
cmovno
add
int3
fwait
xchg
idivl
loope
outsl
xor
fcomps
in
fistpl
aam
call
or
cmp
clc
push
clc
fstl
scas
hlt
mulb
dec
inc
add
sahf
push
cmpsb
cmp
ret
jg
push
mov
dec
jl
or
push
mov
ret
in
clc
push
sub
add
adc
fcmove
sub
push
mov
fimull
inc
ret
mov
cmp
cmpsb
or
jbe
rolb
lea
add
pop
or
mov
adc
ret
out
jl
dec
xor
fnstenv
out
and
lock
ja
fidivl
push
mov
shll
mov
push
push
outsl
mov
std
outsl
clc
in
push
mov
pushf
out
pop
inc
sub
sub
sub
xchg
call
mov
mov
adcl
or
inc
inc
pop
add
adcl
xlat
scas
mov
cs
sub
and
fcoml
clc
inc
lahf
movsl
js
fs
das
inc
stos
mov
cmp
push
mov
jno
dec
jmp
enter
lea
add
add
and
jp
xor
jbe
das
divb
jnp
push
sti
adc
shll
ds
lock
outsb
sbb
ret
shll
add
pop
gs
stos
enter
lds
outsb
lret
fimull
adc
sahf
cmp
aam
aam
orb
stos
dec
icebp
lock
repz
pop
mov
mov
mov
aas
insl
call
mov
jle
arpl
ret
push
subl
loop
lock
loopne
mov
loop
sti
dec
into
adc
add
jge
jnp
clc
add
xchg
add
insb
push
pop
cmc
add
cmp
or
xchg
shrl
lods
loope
jmp
lds
mov
stos
xchg
sbb
mov
push
lret
sub
push
inc
push
mov
dec
jecxz
shll
imul
xor
inc
in
mov
in
in
dec
inc
or
lea
or
nop
add
movsb
inc
pushf
xor
ljmp
jecxz
out
pminub
dec
xchg
push
lahf
xor
hlt
lds
aaa
and
bound
jg
mov
sub
sub
gs
les
fs
mov
pop
enter
adc
in
mov
jp
sbb
jl
dec
jo
ljmp
cmp
gs
mov
add
xchg
mov
pop
aam
and
adc
jbe
fists
xchg
xor
ficoms
mov
mov
mov
xchg
xor
push
sbb
push
pop
push
cmc
or
add
inc
push
inc
fsubrl
mov
sub
fucom
inc
adc
fdivrs
inc
mov
jnp
loopne
ds
adc
out
popa
jb
mov
les
xchg
mov
decl
add
cmp
and
rolb
push
das
jecxz
pop
js
lods
test
or
cmp
subb
jno
pusha
in
dec
or
sbb
sti
popa
jecxz
fsub
inc
lods
mov
sbb
ljmp
iret
cmp
jp
pop
lock
pop
fcomps
mov
inc
or
sarl
pop
std
inc
dec
mov
ret
jge
dec
sub
mov
push
sbb
stos
pushf
rol
cmpb
adc
pop
add
ds
ss
push
hlt
push
scas
clc
fidivs
pop
daa
sub
mov
or
mov
xchg
ljmp
out
ret
pop
push
dec
xchg
jmp
sbb
push
repnz
or
pop
adc
xor
sub
push
ja
jbe
loopne
jo
pop
adc
test
xor
sub
jo
and
inc
popl
stc
xor
add
ror
pop
cmc
inc
cmc
jo
jmp
icebp
pop
xchg
out
iret
mov
xchg
xor
pop
dec
mov
push
les
gs
loopne
fcoms
repnz
mov
cltd
bound
xchg
les
jg
and
ja
jne
xor
scas
bound
ret
xor
mov
into
pop
mov
hlt
rorb
sub
jecxz
sub
mov
xor
mov
enter
loopne
rcrb
mov
mov
rol
mov
jle
aaa
mov
bound
xor
jmp
enter
cwtl
jns
dec
std
lds
call
jl
mov
ljmp
cmpb
dec
test
mov
dec
call
pop
hlt
push
mov
or
mov
lods
push
adc
in
inc
pop
fsubl
cli
mov
mov
and
pop
jnp
decl
lods
pop
outsl
jo
mov
cli
mov
mov
sub
mov
and
jge
ret
into
out
loop
push
mov
xchg
shlb
inc
shl
adc
inc
and
adc
push
js
pop
inc
lock
subl
mov
shll
lds
xor
aam
push
orb
mov
ret
pop
xchg
mov
and
dec
aam
push
adc
sbb
ja
ss
push
filds
jle
add
and
ds
jg
jo
aas
sarb
cld
rcrb
shrl
dec
cmp
enter
je
pop
das
dec
pusha
push
jle
idivb
jecxz
outsb
cld
out
pop
fiadds
xchg
cld
mov
jg
inc
pop
dec
cmp
clc
xchg
xor
jmp
push
inc
lcall
mov
mov
lods
nop
adc
cli
pop
lock
cwtl
movl
ss
out
sub
jbe,pn
add
insl
cwtl
mov
inc
das
ss
xlat
popf
es
mov
call
adc
call
les
pop
dec
inc
dec
or
dec
sub
jno
mov
daa
dec
insb
arpl
inc
fidivrl
adc
outsb
and
loop
test
loop
stos
jne
test
mov
lcall
xor
imul
nop
loopne
scas
or
inc
dec
subb
adc
mov
inc
or
inc
in
push
arpl
push
roll
clc
nop
and
pop
push
sahf
add
sbb
adc
jle
xchg
ja
je
rorb
xor
daa
push
movb
scas
mov
out
cwtl
dec
jo
shrl
push
push
outsl
pop
mov
lds
bound
into
movsl
add
test
mov
push
movl
stos
fwait
sub
lret
mov
add
xor
fistps
es
mov
imul
jge
nop
sbb
repnz
mov
fdiv
stos
ja
mov
clc
jl
loopne
or
xor
notl
pop
dec
es
cli
in
js
pop
fstpt
or
sbb
cmovle
rorb
sbb
and
aam
lea
dec
xchg
mov
dec
sbb
jg
xlat
movsb
mov
gs
push
pop
xchg
insb
mov
mov
bnd
pop
pop
inc
add
sub
lahf
mov
neg
fwait
clc
icebp
cmc
sub
cld
aad
inc
add
imulb
xlat
rol
fsubl
orb
and
pop
clc
aas
mov
pop
jne
push
fisttpll
sbb
push
loop
add
ljmp
fcompl
xlat
push
jp
inc
je
mov
pop
and
cmc
and
fsubrl
add
cld
cli
std
jmp
adc
adc
pushl
cmpsl
dec
clc
ljmp
add
nop
mov
nop
rolb
mov
popf
mov
lahf
or
jns
addr16
jg
inc
js
push
out
xchg
inc
mov
push
mov
push
pop
loop
mov
cld
stos
mov
xchg
dec
aas
push
scas
mov
add
and
xor
sub
out
push
mov
sub
fisubs
push
les
pop
pop
rcl
ljmp
adc
loope
jbe
fbstp
icebp
push
aam
mov
aam
push
sarl
pop
dec
cmp
push
imul
jge
aam
lock
stos
js
arpl
push
jae
jne
inc
aas
mov
add
push
mov
jnp
into
cmpb
sti
jmp
and
iret
orb
lcall
adc
enter
aas
dec
pop
pop
pop
shlb
add
push
xchg
in
imul
or
insl
pop
iret
enter
dec
test
lcall
clc
stos
inc
scas
cmp
out
mov
mov
push
cld
or
in
fstl
xor
out
insl
xor
sbb
jns
aaa
mov
ficoms
out
ficomps
loopne
jmp
fistpll
inc
fdivrs
or
jnp
push
loope
adc
js
dec
pop
clc
scas
push
fdivrs
or
push
dec
cmpsb
sahf
push
jl
ret
outsl
adc
add
xchg
cmpsb
inc
mov
pushf
nop
xchg
cmpsb
test
imul
cmpsb
les
push
imul
lea
lcall
mov
roll
stc
outsb
mov
mov
call
repnz
decb
es
push
cmp
adc
aaa
jle
iret
mov
adc
cmpb
sbb
adc
data16
fbstp
mov
lods
out
cli
out
outsl
aas
rcrb
dec
into
in
xchg
xlat
aam
add
dec
sbb
sbb
jp
pop
add
inc
data16
mov
andl
in
mov
sbb
add
dec
xchg
int
icebp
mov
inc
cltd
scas
insb
cmc
jnp
cld
ret
popf
push
sbb
imul
inc
in
imul
dec
sbb
mov
sub
js
sub
mov
or
in
aad
stos
test
mov
push
fsubrl
sub
adc
jp
xchg
and
aas
dec
or
das
scas
test
clc
std
mov
inc
dec
mov
into
sbb
repnz
aad
loopne
stos
jo
ss
adc
in
clc
lds
rcrb
adc
hlt
push
andb
jno
pop
pop
das
fisttpl
aad
arpl
ds
dec
or
in
adc
movsb
xchg
cmc
sub
fucomip
adc
push
and
out
adc
into
or
stos
orb
test
mov
stos
cmp
fiadds
jo
jp
jecxz
rcrb
aad
cld
jl
inc
adc
outsl
pop
mov
mov
mov
push
ljmp
dec
sbb
push
jge
sub
stos
pop
add
in
sbb
shlb
and
test
push
lcall
ffreep
sbb
xor
lock
int
test
jp
scas
dec
inc
movsb
stos
adc
xorl
jmp
pop
or
pop
add
test
or
xor
pop
in
adc
stos
cs
jl
dec
mov
sub
mov
pushf
mov
sti
ret
adc
jecxz
jecxz
movd
sbb
pusha
push
mov
or
or
jae
jmp
fadds
lds
cmpl
xchg
test
iret
stos
jp
fildll
add
std
and
dec
mov
js,pn
add
sbb
hlt
jg
sahf
mov
xor
add
or
add
push
fs
and
add
jge
push
icebp
dec
dec
sti
inc
out
sub
jmp
sbb
stc
cwtl
sub
or
fisttps
add
insl
add
movsb
jns
js
jo
arpl
fisubrl
sbb
mov
ror
cmp
out
orl
mov
pop
jg
mov
adc
sub
popa
add
mov
sbb
loopne
in
rorb
ret
xchg
jbe
lods
sub
sbb
sbb
mov
addb
mov
mov
mov
scas
pusha
shrb
cmc
scas
add
mulb
aas
out
pop
mov
mov
push
clc
cmpsl
and
ret
fwait
jne
lds
lods
test
push
jne
sub
mov
das
test
scas
inc
inc
jo
clc
pop
adc
lock
out
ret
mov
push
mov
and
dec
push
mov
arpl
aad
mov
out
lock
inc
jle
adc
pop
addl
shlb
pop
sub
mov
out
mov
sbb
shrl
xorl
add
stos
pop
fists
les
stos
in
xchg
xchg
test
push
daa
sti
xor
xchg
add
or
inc
std
scas
and
dec
mov
push
nop
add
add
loop
push
jg
cmp
jo
pop
mov
sbb
icebp
lcall
rcrb
js
mov
jnp
adcb
pop
or
push
push
dec
cmpb
frstor
aas
stos
pop
or
outsb
jecxz
sbb
adc
popa
scas
mov
std
or
sbb
mov
ljmp
daa
cld
subl
inc
pop
out
ficoms
js
lea
sub
pop
or
mov
add
cmpl
push
rorl
ss
jbe
mov
jecxz
xchg
lahf
mov
or
js
daa
divb
cld
xchg
mov
decl
push
pushl
fidivrl
xchg
aam
je
lahf
xor
adc
scas
sub
inc
leave
sarb
xchg
inc
cmp
aad
pop
xorb
icebp
pop
inc
bound
ja
push
jcxz
mov
test
clc
out
cmp
ret
push
js
dec
xlat
sarb
push
jae
lahf
mov
out
or
xchg
pop
test
cmp
aam
add
fidivs
cmp
cmp
pop
or
xor
outsb
add
mov
inc
adc
adc
aaa
es
lret
lods
and
mov
cwtl
mov
cmc
out
sbb
push
mov
pop
mov
adc
filds
mov
xlat
or
shlb
dec
sarb
lock
cmpsl
sbb
push
pop
in
sub
jo
dec
sbb
or
aas
in
inc
jecxz
dec
pop
inc
mov
xchg
jl
pop
jecxz
ret
std
cmpl
add
xlat
sub
push
clc
inc
pushf
and
push
ss
outsl
inc
lds
and
mov
add
mov
out
xchg
dec
xor
lock
ja
test
dec
pop
xchg
cmpsl
jb
outsl
insl
xlat
push
icebp
fwait
mov
push
fisubs
fisttpll
xchg
and
imul
loopne
mov
fs
enter
and
jne
mov
rclb
test
aas
and
add
jne
daa
jle
call
fnsave
xchg
or
xchg
add
cmc
add
cs
loope
mov
inc
cmc
adc
popa
mov
xor
js
push
push
scas
pop
sub
lds
fisubrl
or
dec
sbb
fmull
out
pop
push
clc
cmp
jmp
lret
cmpsb
adc
out
jge
filds
out
sbb
loopne
xchg
adc
dec
mov
pop
or
xor
lahf
mov
xchg
shr
divl
hlt
popa
cltd
rorl
dec
or
xor
and
mov
addb
jnp
mov
jne
xor
jle
jg
aas
add
outsb
push
and
jo
mov
daa
stos
fistpll
into
adc
jge
pop
dec
leave
or
mov
mov
clc
mov
clc
inc
mov
inc
push
xchg
test
mov
repnz
mov
cmc
xchg
ljmp
mov
jns
popa
sub
adc
js
test
loop
add
and
push
loop
sub
ss
sbb
aam
push
mov
adc
clc
gs
clc
xchg
movsb
in
rclb
mov
and
fsubrs
adc
sub
je
xor
adc
lock
jg
xor
xor
add
mov
adc
bound
or
xor
push
push
cmp
ja
jg
adc
adc
popa
jecxz
sarb
xchg
xchg
push
orb
xor
pop
roll
pusha
es
shr
fmul
bound
cli
mov
pop
add
icebp
mov
sbb
fcmovb
mov
je
xor
fidivrl
fsubl
mov
ja
les
cmpsl
push
add
cmp
jo
sbb
and
and
mov
dec
mov
sti
cmp
jo
jl
cs
icebp
xor
aas
push
in
xchg
xlat
rclb
and
mov
cltd
and
ljmp
movsl
pop
sti
fnstenv
xchg
sbb
jmp
sbbl
cwtl
and
inc
test
fs
or
adc
xor
jo
mov
inc
mov
mov
decl
iret
insl
fbstp
pop
pushf
fisubs
cmc
dec
adc
es
cmp
iret
xor
pop
ljmp
cmp
mov
je
rorb
push
sub
hlt
or
xchg
repz
dec
mov
rorb
mov
add
lcall
push
jb
data16
xor
sub
dec
cmp
add
das
les
and
test
jo
pusha
cld
mov
test
or
mov
xchg
push
ret
or
test
shlb
xchg
mov
stos
xchg
adc
loopne
sbb
ficomps
lds
pop
adc
adc
cmpsl
xor
test
add
and
test
dec
aaa
loopne
out
adc
test
jp
jp
mov
push
or
addr16
lods
mov
pop
rcl
mov
mov
rorb
pusha
cli
xchg
jo
jl
lock
cwtl
inc
push
mov
dec
jmp
push
push
aas
add
std
xor
adc
adc
stos
push
incl
dec
es
or
std
ret
jle
pusha
mov
fbstp
enter
xchg
and
push
sarb
lret
mov
or
or
popa
mov
mov
call
sub
sbb
fsubrl
dec
xchg
jl
inc
iret
addl
in
rolb
mov
scas
lods
xchg
int3
xlat
or
xor
mov
mov
leave
push
insl
cmp
mov
dec
dec
sbb
xor
mov
jmp
test
jle
jno
pop
and
and
aas
mov
insl
pop
rcr
fists
xor
mov
ss
popf
mov
pop
rcrb
lods
and
lcall
push
mov
mov
enter
fisttps
cli
subl
inc
jbe
aaa
add
cld
sbb
mov
arpl
fidivrs
int3
movsl
pop
lret
add
cmpps
adc
adc
sub
jle
insb
ljmp
add
roll
loopne
mov
ds
jmp
fwait
mov
mov
cmp
movsb
mov
scas
mov
jge
jecxz
jb
dec
dec
out
ja
push
mov
add
mov
orb
push
cld
imul
dec
das
stc
xchg
mov
inc
push
ficompl
and
cmc
cwtl
into
jp
shr
mov
push
mov
jnp
std
shrd
cmpsb
cmp
testl
adc
mov
pop
dec
imul
pop
addr16
clc
add
repz
fidivs
adc
filds
mov
xor
sbb
ja
jl
jg
push
aas
pop
push
insl
mov
push
sub
add
addb
aas
clc
aam
and
xor
inc
pop
or
xor
jne
scas
lods
adc
or
inc
cld
mov
jae
leave
loopne
push
add
jg
jle
aad
mov
mov
and
sbb
jg
movsb
mov
add
lret
pusha
popl
bound
inc
sbb
addr16
sub
lods
xlat
in
mov
stos
pop
stos
nop
out
cmp
pop
cli
sti
cltd
xchg
testl
add
out
adc
jmp
mov
xchg
dec
add
test
cmc
lds
pop
and
jo
loop
adcl
out
out
cli
lods
test
fistpl
or
out
les
fs
xchg
shlb
mov
push
add
cmp
int
gs
es
pusha
hlt
rcrl
sbb
mov
aam
ljmp
pop
fadd
mov
lea
scas
je
mov
xchg
jo
rolb
lret
ds
lds
adc
jmp
fmuls
jo
pop
add
outsb
enter
hlt
sub
fdivrs
or
push
add
push
adc
hlt
pop
or
jg
pop
push
mov
xchg
jg
push
xchg
bnd
pop
push
mov
pusha
jns,pn
dec
icebp
mov
adc
xchg
inc
sbbl
and
out
push
fisubs
clc
mov
ffreep
adc
callw
pop
push
add
push
lret
cmpsb
and
push
sbb
cli
sbb
pushf
xchg
mul
in
push
fmull
addb
loop
mov
les
addb
dec
cmp
aaa
stos
leave
ret
fcoms
push
xchg
xchg
pop
dec
mov
push
cmp
mov
testb
movsb
push
movsl
ljmp
repz
fwait
sub
jecxz
push
xor
sub
and
fwait
inc
mov
imul
cld
dec
xlat
mov
movsl
loop
cmp
dec
mov
pop
adc
je
lea
into
fildll
ror
pop
inc
jae
jae
stos
xchg
call
loop
push
pop
dec
or
add
and
xor
push
pop
test
int3
jmp
xchg
mov
das
dec
jl
ficoml
mov
sbb
push
dec
add
aaa
mov
out
ja
mov
lds
sbb
aaa
and
dec
and
push
call
cmp
inc
bound
jge
add
cmpl
mov
jae
xchg
mov
mov
ret
test
pop
call
add
and
aaa
std
inc
jbe
jnp
test
inc
pop
out
and
xchg
std
in
iret
outsb
mov
sub
xchg
inc
rclb
shlb
dec
int
mov
in
incb
mov
outsb
fmul
loop
scas
inc
cmp
push
iret
cwtl
lods
outsl
xor
xchg
cmp
mov
adc
fiaddl
ja
lods
add
or
cmp
insb
inc
push
sbb
xor
popf
in
out
mov
lock
lret
xchg
inc
push
out
test
test
jmp
pop
xchg
leave
lea
jle
mov
or
lock
push
inc
mov
or
mov
js,pn
imul
fcomip
lock
xchg
fs
cld
inc
les
xchg
out
divl
std
sbb
mov
pusha
in
into
mov
mov
mov
inc
xchg
js
jmp
scas
ret
or
cmpsl
cs
das
xchg
push
popa
push
stos
fs
add
and
out
adcl
add
mov
jno
ljmp
test
jns
and
push
sbb
nop
in
pop
scas
fidivs
mov
push
lret
incb
push
and
popa
loop
je
ljmp
mov
lea
mov
lea
sub
call
int
adc
dec
ficoml
loop
out
jg
imul
add
mov
sub
cmpb
loope
cmpb
jle
pop
mov
mulb
jo
cld
test
sar
mov
bound
fidivs
cmp
ljmp
jno
xor
mov
mov
sbb
loopne
add
adc
rcrb
call
sub
ljmp
dec
push
mov
lock
es
or
nop
cld
mov
mov
test
les
xor
jno
test
loopne
lods
mov
jg
cmpsl
bound
repz
add
das
dec
lods
hlt
loopne
stc
pop
int3
in
cld
add
and
jp
ret
inc
mov
out
into
adc
je
cs
mov
fdivrl
mov
shlb
sbb
mov
mov
sub
xor
movsb
add
pop
push
mov
lret
mov
cmp
lds
in
imul
cmp
test
mov
repz
adc
or
dec
enter
sbb
sub
xchg
push
in
inc
loopne
aam
adc
sti
ja
mov
or
aam
scas
sub
es
repnz
fisubrl
arpl
or
ret
les
cli
sbb
cmp
jae
jp
jecxz
jp
sbb
pop
insl
jg
inc
add
push
mov
adc
pop
pop
nop
xchg
or
and
and
pop
adc
pop
addl
roll
cwtl
cmp
ja
movsl
out
cmpl
movsl
test
aas
lds
int3
pop
cld
pop
sub
xchg
in
or
jl
push
sub
mov
inc
ret
adc
sbb
jg
call
xor
ljmp
loop
mov
insl
lret
cmpsl
neg
test
mov
sbb
add
pop
insl
roll
jle
scas
pop
mov
loope
jnp
dec
cmp
repnz
out
addr16
sar
or
fisubl
mov
cs
mov
aam
icebp
stos
dec
mov
add
fmul
pop
pop
push
fldlg2
add
outsl
mov
lahf
dec
ljmp
loopne
ds
fcompl
decb
mov
fsub
cmp
std
mov
xor
test
push
sbb
jo
jb
rorb
adc
ret
aam
and
mov
sar
push
inc
lcall
out
sub
dec
pusha
xchg
hlt
fdivs
push
and
aam
jbe
pop
add
les
pmulhuw
mov
sub
imul
loope
loopne
addl
in
call
mov
dec
push
fldenv
lcall
cmp
fbstp
mov
cmp
and
stos
mov
hlt
pop
jl
mov
das
js
mov
or
fcomip
daa
push
std
es
shlb
imul
sub
lret
incl
pop
test
outsb
mov
add
mov
les
push
jp
cli
ret
les
test
or
ss
pop
push
loope
rorb
loopne
push
mov
dec
or
into
dec
ret
adc
push
rclb
movsb
mov
or
jp
pop
outsb
xor
ret
cmc
add
cld
scas
rcll
lcall
lods
andb
lods
movsl
lret
int3
jle
mov
in
cmp
sub
cmp
sbb
sti
xchg
ret
push
mov
cmp
or
sar
sbb
cli
and
mov
pop
movsb
jg
jbe
test
out
iret
imul
xor
les
loope
jmp
popa
and
pop
cs
fcoml
fwait
xchg
ficomps
lods
push
daa
push
add
sub
sub
mov
std
mov
mov
cmp
add
xchg
sbb
cmp
in
push
inc
mov
fcmovu
das
pop
push
mov
ret
cld
lahf
in
iret
sbb
adcb
pushl
mov
mov
in
add
push
insb
jp
lea
imul
pop
nop
stc
push
out
pop
add
lret
dec
and
or
ja
pop
or
mov
movsl
xchg
mov
shlb
fucomp
subb
jecxz
xchg
push
rcl
xor
clc
inc
fadd
pop
and
mov
xor
mov
sbb
jle
and
push
inc
sub
xchg
add
jl
pop
pusha
xchg
hlt
xchg
adcl
inc
fistps
or
mov
adc
cli
stos
mov
push
rclb
das
push
add
pop
in
mov
inc
xchg
sarb
mov
in
je
cmc
stos
jo
js
jbe
rcl
xchg
jp
dec
ss
outsl
xchg
push
and
aam
js
sub
xor
lret
test
nop
mov
push
stos
jne
xor
call
das
cmp
push
fmull
xor
movsb
loopne
aas
cwtl
adc
mov
mov
movsb
mov
repnz
jg
cmpsl
add
cli
imul
mov
jo
insl
inc
pusha
popa
mov
aad
xchg
inc
mov
daa
enter
mov
mov
add
lds
movsl
nop
les
ret
jnp
test
or
pop
loope
loop
add
in
in
adc
jnp
js
sar
stos
insl
inc
push
lds
or
jg
add
add
inc
xchg
push
imul
sbb
movb
sarl
jb
data16
pop
add
dec
movsb
lock
loope
aam
call
add
inc
insb
xchg
or
and
dec
shlb
sub
pop
sbb
cmp
sbb
adc
pop
push
outsb
dec
lods
sub
arpl
psubw
popl
pop
mov
sbb
dec
hlt
cld
mov
ret
cmc
mov
lods
jge
lods
and
jl
andb
dec
das
cmp
jle
fmuls
jnp
mov
decb
mov
in
movsb
sub
add
aaa
or
sub
js
cmp
jp
push
movsb
cltd
adc
stc
pop
inc
loop
pop
ja
mov
and
mov
loop
push
sub
push
and
cli
imul
bound
or
dec
adc
xchg
loopne
mov
push
leave
stos
jae
fisubs
push
rcll
add
sbb
push
movsl
lock
pop
inc
rcl
sbbl
roll
imul
adc
rorb
jl
jb
sbb
filds
mov
add
or
cmp
aam
into
jmp
repz
mov
xchg
outsb
fisttpll
push
add
add
xor
xchg
inc
mov
xchg
fsubs
ljmp
cltd
mov
pop
adc
fs
test
mov
jne
mov
push
jl
int
mov
popl
add
rolb
jp
loope
js
jp
push
adc
loop
arpl
pusha
mov
out
and
outsl
add
lds
fbstp
ret
das
pop
lods
loop
sbb
clc
aas
rorb
jle
pop
jo
pop
ss
js
pop
xorl
xchg
xchg
mov
dec
fcmovbe
test
adc
adc
lods
fbld
insl
mov
nop
jl
int3
fld
xorb
cmp
dec
clc
sbb
push
ret
testl
push
decl
jmp
or
dec
sub
add
xor
mov
enter
add
sub
fsubrl
dec
adc
mov
pmaddwd
add
sarb
mov
nop
pop
add
inc
cld
xchg
mov
lcall
mov
gs
out
clc
xor
inc
add
and
cmc
sbb
aad
jmp
jmp
pushf
mov
clc
int
repnz
insb
sarb
inc
adc
sub
cmp
roll
mov
mov
add
lahf
movsb
mov
push
adc
orps
sub
sbb
clc
xlat
hlt
cmpsb
pop
mov
add
popa
cmp
js
es
out
cmc
push
mov
mov
cld
add
cltd
fnstsw
aaa
mov
or
dec
mov
mov
push
add
mov
pop
movsl
das
hlt
inc
roll
out
add
loopne
mov
add
jo
pop
int
adc
add
insb
pusha
or
dec
jecxz
mov
rcl
cli
filds
jns
mov
mov
xor
cmpl
jmp
adcb
aad
pop
mov
stc
mov
xorl
or
adc
xchg
jle
mov
addr16
sbbl
mov
dec
mov
push
popa
lds
loopne
xor
rorb
xor
mov
outsb
jge
scas
sbb
mov
outsb
lods
loope
into
push
pop
repnz
sub
push
fldl
pushf
outsb
adc
sub
jecxz
pop
aas
push
inc
push
mov
cmp
mov
cmp
mov
shll
test
inc
xor
push
pushf
push
inc
or
adc
add
cmp
xor
sub
ss
clc
or
jo
sbb
inc
mov
inc
incl
sub
sbb
add
pop
sub
mov
fisttps
sbb
mov
inc
xlat
fwait
mov
into
push
xor
loopne
clc
scas
mov
push
test
jecxz
sub
stos
jmp
int3
add
push
shlb
add
mov
test
shlb
jle
call
lret
repz
repnz
or
imul
mov
test
dec
lods
push
lock
mov
ljmp
xchg
adc
fs
dec
insl
lret
pop
ja
fcomps
lea
fisubs
in
mov
movsl
xor
icebp
jp
adc
push
ret
out
cmp
imul
jecxz
cmpsb
mulb
push
lea
jbe
mov
mov
daa
adc
cmp
mov
aam
mov
jge
out
les
outsl
jae
push
lcall
push
sbb
fistpll
addl
imul
mov
sub
rcrl
pop
xchg
pop
push
fadds
cmp
test
dec
inc
call
mov
xlat
dec
aad
jo
jbe
fcmovnu
cmp
nop
or
jg
inc
adc
shl
pusha
add
push
mov
repz
or
call
outsl
inc
mov
nop
xchg
fwait
arpl
cwtl
fs
inc
inc
sti
cmc
loope
call
in
pop
mov
addl
insb
test
mov
cltd
lods
fisubl
ljmp
data16
out
or
ljmp
pusha
or
jp
add
xchg
rorl
mov
out
out
jp
outsb
add
jo
jp
inc
sub
add
mov
or
xor
mov
dec
loope
addl
add
lcall
sub
add
in
cmc
push
dec
lock
xchg
ds
push
mov
and
mov
fs
sbb
imul
jmp
xchg
loop
repz
cltd
or
mov
andb
adc
sbb
add
fs
bound
push
push
jg
mov
jmp
pop
pusha
fs
sbb
push
adc
push
jl
dec
push
sbb
lods
out
lock
rolb
mov
xchg
ljmp
jbe
ja
pop
xor
add
loope
bound
daa
icebp
sub
push
jle
adc
test
push
mov
test
pop
test
jg
andl
les
jg
dec
pop
in
outsb
jnp
adcb
enter
incb
lods
js
out
mov
pop
pop
outsb
insb
xor
pushf
xor
aas
or
call
fisubrs
add
clc
pop
test
loopne
jb
cmpsb
jg
rcl
xchg
loopne
pop
mov
cli
add
or
and
push
jmp
mov
nop
push
mov
pusha
adc
out
test
icebp
push
push
enter
out
fadd
jl
mov
lret
decl
lock
pop
mov
cmp
cwtl
push
pusha
ret
cld
push
cmp
mov
adc
std
cltd
inc
ret
pop
sub
stos
test
push
lea
js
adcl
and
xor
aaa
cmp
or
xchg
push
incb
inc
push
inc
imul
adc
dec
test
ret
inc
lods
fs
jns
sbb
loope
and
cmp
lods
mov
or
rol
fsubrs
sbb
pop
xor
fs
sbbl
sti
adcb
call
or
nop
mov
rcrb
orl
or
pop
add
adc
add
pop
sbb
data16
mov
js
loopne
pop
cmp
mov
pop
xchg
outsb
ret
mov
mov
xchg
pushf
lret
scas
fmull
adc
loopne
cld
test
xchg
repnz
add
dec
fs
rclb
lock
clc
xchg
stos
aam
mov
js
cmp
pop
push
add
cmp
data16
adc
jge
cmc
or
pop
xchg
xchg
mov
jmp
mov
cmc
icebp
stos
and
test
jae
sbb
int3
push
imul
cmc
sbb
xlat
cmp
inc
cli
data16
cmpsb
mov
sbb
stos
inc
adc
dec
aad
sahf
ret
sbbb
adc
sbb
and
lods
ja
or
mov
cwtl
push
mov
ja
leave
adc
les
movsl
push
sub
pop
addl
dec
add
mov
into
mov
cmp
add
aaa
push
xor
mov
aad
push
dec
scas
or
adc
ja
push
sbb
mov
arpl
hlt
cmpsb
adc
aad
test
insb
lahf
addr16
out
pop
xchg
inc
sarb
lahf
cmp
mov
addb
fidivs
jmp
add
inc
out
xor
push
and
data16
outsb
and
fs
push
cwtl
js
pop
test
cmp
pop
dec
insb
push
test
mov
or
mov
adc
xor
xor
inc
shlb
inc
cld
sarl
push
cmpsb
aam
and
push
cmp
pushf
in
cmp
rol
cmpsl
iret
jmp
sar
jecxz
mov
and
out
cli
rcr
lcall
outsb
hlt
jae
sbb
and
inc
add
rcll
or
lock
pop
test
cld
push
aas
in
addb
push
jg
pop
pop
int
and
sub
push
test
int3
adc
call
test
push
enter
je
cltd
and
sub
jg
dec
jae
fidivrs
jmp
dec
repz
push
loope
inc
lcall
in
mov
jle
lahf
faddl
jno
imul
hlt
scas
loop
nop
lods
movaps
stc
push
xor
je
cltd
sub
mov
fwait
jmp
mov
dec
mov
lods
add
xchg
mulb
sbb
daa
sbb
and
jmp
lcall
imul
jno
or
mov
push
dec
cli
pop
jl
call
pop
jmp
insb
pop
xchg
call
dec
cmp
push
movsb
mov
in
icebp
js
mov
and
iret
icebp
sbb
pusha
loopne
xchg
leave
xor
pop
pop
aam
jo
or
dec
insb
shll
divl
jmp
or
aam
je
pusha
push
add
jae
imul
fimuls
sub
rcr
add
add
add
test
enter
loop
add
push
roll
adc
loop
icebp
mov
inc
sbb
aaa
add
mov
or
iret
mov
rep
mov
outsb
popa
cs
daa
jle
fisttps
jmp
loopne
cmc
js
lea
mov
rcrb
xor
loopne
sub
ret
sbb
sub
loop
mov
imul
cmp
aam
ja
stos
pop
pop
test
jo
aas
testb
push
cmp
jg
xor
jne
mov
mov
jbe
enter
mov
out
mov
sub
pop
sbb
ljmp
xchg
call
inc
sti
cmpsb
xor
jnp
enter
je
clc
mov
cmp
xlat
dec
cmpsb
push
or
push
sbb
pop
pop
sbb
pop
aam
pop
aaa
std
push
aaa
lds
xchg
fidivrs
mov
jo
outsl
xchg
dec
rclb
out
xlat
int3
std
pop
pushl
mov
push
jl
cwtl
sub
inc
icebp
lea
mov
jnp
mov
decb
push
jno
sub
aam
cmp
inc
push
std
jp
or
ljmp
mov
andl
and
orb
sub
je
cmp
xchg
int3
cltd
or
xor
mov
insb
hlt
lea
inc
jne
mov
das
push
imulb
pop
ljmp
imul
fstpt
push
add
push
push
fsubrp
dec
pop
in
cli
mov
add
bound
insb
ficomps
sti
adc
in
jae
add
ljmp
mov
out
aaa
cli
cwtl
mov
xor
imull
mov
and
and
pop
adc
mov
dec
test
dec
je
add
pop
adc
dec
and
stos
testb
sahf
ljmp
xchg
insl
stos
movsb
ret
dec
pop
cmp
jg
movl
jp
mov
nop
inc
shl
sub
add
xchg
mov
add
inc
xchg
push
mov
roll
xchg
jno
cmp
mov
push
pop
dec
out
inc
mov
or
icebp
aas
push
int3
mov
inc
lcall
mov
into
daa
add
mov
aad
xor
and
decl
loop
or
or
orl
nop
fldl
push
movsb
gs
insl
sbb
add
inc
sub
cmp
fsubrp
mov
in
leave
ret
xor
lcall
push
clc
push
cmp
cmpsl
ficompl
or
movsb
and
rcrb
out
das
push
cli
mov
cmp
dec
pop
xchg
nop
test
xchg
mov
lods
push
mov
rclb
mov
shll
push
mov
jmp
mov
sahf
pop
and
shr
push
out
rclb
xchg
int
add
fs
cli
outsb
mov
jbe
ret
icebp
and
pusha
cli
sbb
inc
icebp
fildll
je
cmp
pop
xchg
aaa
push
and
pop
incb
sub
jnp
or
pusha
jbe
adc
jl
adc
fildll
dec
xchg
in
in
and
add
pop
pop
sub
mov
jge
add
call
popf
je
decl
rclb
shrl
std
scas
test
pop
xlat
xor
enter
out
lods
push
fistpl
ss
jb
push
sarl
lds
add
ret
sub
xor
mov
cmp
aas
mov
dec
jl
push
dec
add
enter
pop
and
outsb
pop
xor
loop
xor
adc
insl
cmpsb
lret
stos
in
decl
push
jecxz
xor
xchg
loop
call
pavgb
mov
push
outsb
adc
lret
add
lods
sarl
push
shl
cmp
outsb
mov
cmp
inc
cmpsb
mov
lret
add
out
push
pop
punpckhbw
inc
test
punpckldq
mov
or
fstps
mov
dec
pop
lea
mov
adcb
xchg
cmp
add
je
cmc
cmp
jl
test
push
inc
pop
mov
push
jno,pt
inc
aas
cli
call
adcb
out
aaa
sbb
sbb
stos
fbstp
push
sar
out
test
ja
mov
mov
add
lahf
push
cs
std
inc
add
push
rcll
jg
sub
sbb
outsb
enter
outsl
lock
mov
aas
cmp
incb
jecxz
in
fs
dec
repnz
lahf
push
jno
jg
push
xorb
dec
sysenter
inc
loopne
pop
push
push
mov
repnz
jl
or
dec
mov
je
into
jp
sarb
test
cmp
test
int
sub
cmp
or
pop
pop
pusha
dec
fists
mov
bound
cli
push
hlt
pop
loopne
or
inc
pop
stc
rcll
das
cld
sbb
inc
stos
iret
jnp
fs
clc
inc
xor
outsb
jmp
lcall
xlat
les
dec
jg
sub
les
outsl
adc
push
aas
mov
xor
lods
jns
lock
push
push
ljmp
inc
sub
test
orb
mov
mov
mov
insb
div
lcall
in
adc
xchg
out
inc
jns
notl
cmc
fucomip
leave
shlb
pop
insb
add
xchg
mov
rcll
daa
nop
jecxz
mov
sub
mov
in
iret
adc
mov
jle
adc
sbb
inc
pop
cwtl
outsb
cwtl
sbb
cli
decl
inc
int3
xchg
dec
xchg
mov
xor
add
jg
mov
dec
lcall
mov
in
sahf
cmp
mov
mov
clc
mov
leave
out
test
insl
push
mov
sbb
aam
daa
or
cmp
mov
xchg
fcmovb
push
jl
jecxz
xor
stos
pop
jmp
aas
out
mov
cmp
jg
scas
push
les
mov
adc
or
push
add
dec
mov
jmp
dec
lahf
cld
push
in
scas
das
xchg
hlt
dec
or
mov
out
adc
aas
pusha
subl
jnp
arpl
divb
pusha
cmp
movsb
and
cmp
orb
loopne
ljmp
outsl
mov
sub
push
fildll
sub
pop
dec
ficoms
xor
pop
scas
scas
push
dec
or
not
dec
inc
mov
or
dec
sbb
insb
add
lods
in
pop
stc
sbb
mov
test
xor
scas
pop
fmuls
out
rorb
mov
xchg
jne
pop
jnp
push
add
xchg
scas
push
sub
or
icebp
outsl
and
push
xchg
dec
icebp
xchg
rclb
pop
fwait
idivb
loopne
dec
xchg
mov
stos
or
pop
jmp
ret
les
cmp
jp
or
ja
rolb
xchg
jo
mull
adc
jg
pop
loopne
pop
stos
cwtl
pop
insl
dec
in
cwtl
daa
pop
cmp
jnp
mov
test
pop
cbtw
add
filds
jmp
or
popf
ret
dec
push
addb
xchg
js
jb
mov
sahf
cmp
xor
hlt
fwait
adc
dec
cmpsb
xor
sbb
imul
test
scas
sub
mov
daa
and
adc
sbb
mov
shr
fiadds
pop
or
push
sub
cli
lret
jo
sbb
incb
scas
jg
scas
ds
xchg
faddp
mov
lods
insb
xor
cmp
jnp
pop
lock
jl
aam
jge
out
sarl
call
iret
mov
fisttpll
fisttps
mov
push
lret
fsubrs
je
push
dec
xlat
gs
mov
and
pop
notb
in
add
adc
dec
pop
dec
inc
sub
ss
dec
add
loopne
xchg
mov
xchg
ficoml
daa
push
inc
jns
into
adc
jo
mov
orb
repnz
bound
push
sbb
mov
fcmove
adc
pop
push
sub
bound
mov
outsb
mov
cmovns
insl
pop
or
mov
in
out
movsl
fstpt
push
std
addl
movsl
in
or
sub
mov
cmp
add
das
inc
mov
out
cmp
nop
arpl
out
xor
out
cwtl
jns
push
mov
test
les
lds
pop
outsb
mov
and
sbb
hlt
pop
jb
dec
jne
dec
loop
cmp
xor
in
pop
hlt
sub
inc
sahf
fdecstp
out
pop
push
adc
rorl
lock
mov
hlt
mov
jp
fucom
push
popa
pusha
imul
and
add
push
jbe
mov
push
movsl
pusha
push
sbbb
lds
mov
nop
dec
outsl
sub
dec
push
push
or
or
mov
add
jge
push
incb
outsb
inc
ret
into
out
stos
jp
fs
pop
inc
add
mov
adc
je
add
inc
and
sbb
push
add
lock
inc
pop
add
clc
in
test
mov
inc
and
mov
add
es
sbb
clc
adc
push
or
lahf
mov
call
mov
inc
sub
jle
inc
dec
test
push
cmp
pop
sbb
mov
rolb
int3
subb
pop
in
test
push
pop
jno
dec
add
xchg
hlt
inc
mov
mov
xor
jmp
std
and
rcrb
loope
movsl
scas
decl
dec
or
or
cmp
push
fnstsw
inc
mov
ja
aam
inc
sti
sti
stos
xchg
nop
fstl
incl
out
shrl
cli
pop
test
lahf
push
pop
push
cld
imul
out
addl
cmpsl
adc
xchg
push
push
mov
cmp
jno
lock
xor
mov
mov
or
lret
jle
mov
aam
mov
rorb
mov
or
loopne
jl
inc
sbb
inc
aam
jp
pusha
push
and
sub
jne
or
fcomps
pop
cmp
mov
cmp
pop
cwtl
adc
add
addb
loop
pop
mov
pop
test
push
xchg
push
int3
add
or
cmp
mov
enter
popa
js
popf
daa
hlt
xor
insb
sub
mov
shlb
jbe
xchg
cmp
add
ss
cs
je
adc
inc
loopne
insb
mov
dec
and
jbe
xor
fs
lret
cmpsl
insb
pushf
push
inc
shll
cmpsb
cmp
mov
ficomps
xchg
add
adc
mov
push
adc
insb
mov
adc
and
or
pop
mov
repz
int
sbb
int
xorl
cmp
mov
add
hlt
sbb
out
hlt
adc
xchg
in
stc
xchg
test
sahf
cmp
fcomip
ret
inc
and
mov
jmpw
mov
sti
out
dec
mov
in
cli
xor
xchg
pcmpeqw
enter
push
or
add
mov
cmpl
mov
cmpsl
pop
jo
push
dec
mov
pusha
std
push
mov
loop
mull
adc
pop
or
pop
out
dec
dec
rcrb
std
mov
scas
jle
sbb
push
and
mov
js
or
int
pop
rorb
push
push
inc
sbb
shrl
fcmovb
ljmp
jo
mov
mov
cmp
sbb
or
mov
call
fdivr
push
adc
test
dec
add
mov
sarb
clc
mov
jg
rolb
jl
sbb
mov
mov
sbb
icebp
cmp
or
mov
out
inc
mov
xchg
push
sbb
fwait
sbb
pop
adc
mov
pop
lcall
push
sub
sub
js
xor
lock
mov
das
xor
xor
outsl
mov
push
push
clc
xchg
pop
insl
push
stc
data16
fistl
sbb
daa
adc
pop
idivl
jae
sti
out
inc
pushf
mov
pop
pop
push
ds
aad
test
inc
push
adc
fwait
bound
mov
aas
movsb
adc
mov
cld
push
sub
inc
lods
js
mov
fdivrl
sub
inc
aaa
add
cmp
adc
mov
pop
push
ds
imul
clc
dec
dec
cwtl
testb
add
paddd
or
push
and
adc
pop
out
mov
rcll
or
pusha
sbb
add
jle
repz
mov
or
scas
insl
nop
cmpsl
push
push
or
or
mov
fwait
hlt
aaa
in
mov
dec
call
sarb
stos
mov
jne
hlt
dec
mov
jne
lock
sbbb
sti
roll
pop
ljmp
pop
push
fsubs
aas
pusha
popa
xchg
add
insb
push
insl
arpl
pop
pushf
jp
xor
adc
xor
or
sbb
push
and
push
insb
clc
scas
pop
nop
mov
rclb
ss
repnz
xchg
push
push
inc
ficomps
in
movsb
popa
mov
and
lds
lahf
outsb
cmpsb
jno
xchg
push
or
xchg
mov
pop
mov
pushf
nop
cs
ljmp
addl
sbbl
sar
shrb
ljmp
jmp
and
xchg
cmp
pusha
xchg
push
add
and
movsb
cltd
or
insl
or
out
repnz
push
fs
xchg
mov
jbe
mov
push
rcll
pusha
sub
mov
sti
pop
mov
xorl
cmp
fwait
pop
fdivl
rorb
push
jbe
sub
jmp
fs
dec
les
or
stos
push
movsl
cwtl
adc
loopne
sub
sub
mov
pop
les
adc
dec
scas
mov
loopne
mov
sbb
add
mov
aas
push
or
ficoms
push
sub
xor
adc
add
add
dec
outsb
dec
cmp
push
cmpsb
cld
daa
jge
adc
in
or
push
sub
sti
mov
add
imul
icebp
pop
ret
sub
xchg
orb
out
inc
or
mov
adc
cmpsl
sbb
mov
xchg
in
xchg
addr16
aad
insb
sarl
in
cli
out
lds
clc
inc
push
mov
push
lcall
sub
and
lock
call
aad
or
xchg
cmpsb
stos
bound
lret
jecxz
addb
push
sbb
scas
push
ljmp
sub
divl
xor
cld
ror
xor
aam
mov
mov
sbb
mov
rcr
ffree
ret
loope
insl
jg
dec
leave
das
cli
xchg
jne
mov
out
or
mov
lea
pusha
inc
dec
jo
lahf
bound
sub
fisubrs
mov
xor
cmpsl
or
adc
or
faddl
insb
ret
push
ss
pop
sbb
aaa
ljmp
push
inc
in
jmp
push
xor
test
push
xchg
xor
cmovno
and
repz
mov
int
jp
pop
or
sbb
jmp
data16
add
lret
and
cli
aas
insl
ja
push
sarb
xor
dec
shll
fisubrs
fnstsw
jbe
cmpsl
adc
jmp
jp
das
xchg
adc
xchg
push
push
sbb
loope
push
jg
jno
pop
outsb
xchg
add
insl
scas
dec
add
jbe
and
imul
int3
sub
sti
outsl
or
xor
or
inc
lcall
xor
xchg
mov
andl
mov
push
movsb
lret
sbb
mov
shll
pop
xchg
lods
es
shrb
xchg
in
loop
addr16
dec
mov
pop
mov
xchg
sarb
jmp
inc
pushf
jg
cmpsb
movsl
pop
jge
outsb
mov
mov
cmp
dec
and
jo
jmp
aad
enter
sbb
clc
sub
or
mov
mov
add
test
or
inc
aaa
insb
push
xor
outsb
mov
sar
scas
push
adc
mov
jle
stc
xchg
fdivs
mov
xchg
and
add
jecxz
daa
stos
inc
pop
cs
bnd
subl
push
jg
sbb
insb
pop
popf
add
leave
jns
push
add
testl
pop
pop
insb
pop
sbb
adc
pop
mov
fdivs
insb
jno
xchg
cmp
scas
mov
fiaddl
fildl
scas
clc
not
jl
and
dec
adc
mov
inc
out
dec
xor
loop
loop
divb
int3
jle
dec
in
dec
pushf
or
shll
cld
sub
mov
sbb
lods
frstor
test
mov
cld
xor
aas
push
test
int3
ror
pop
mov
stos
add
imulb
pop
xor
roll
push
mov
sbb
or
test
xchg
rolb
mov
push
jl
sub
mov
mov
test
clc
inc
mov
scas
sub
incb
inc
jl
mov
jl
mov
mov
mov
mov
arpl
mov
push
adc
xchg
in
lods
sbb
pop
or
cmp
jb
stos
repnz
jl
nop
shlb
cld
pop
dec
dec
fstpt
nop
sbb
sbb
push
sbb
lock
add
xchg
xchg
jp
xor
jo
mov
and
xor
imul
add
out
mov
pop
sbb
push
leave
or
arpl
mov
imul
push
pop
mov
clc
incl
lds
aad
stc
inc
mov
xchg
pushf
dec
in
xchg
mov
and
les
push
pop
jp
add
jne
pop
pop
add
js
cvtps2pd
push
sub
scas
mov
js
mov
dec
xchg
and
addl
jle
enter
fwait
rcr
mov
cltd
test
and
adc
shrl
ficoms
add
add
sbb
in
ljmp
je
ljmp
push
jecxz
xchg
push
inc
pop
xchg
adc
pop
fs
xchg
xchg
sub
dec
bound
lret
scas
loopne
jmp
test
dec
loopne
dec
decb
xchg
dec
push
jge
ret
dec
mov
cli
xchg
mov
and
jo
add
fcmovnb
scas
aam
push
adc
ret
dec
fisubs
push
lock
and
insb
push
dec
mov
orl
dec
shr
js
cmp
js
sub
inc
mov
adc
add
stc
lahf
fadds
sub
xor
or
xchg
leave
and
dec
sbb
scas
js
pop
and
sbb
inc
cltd
sub
fs
subl
fdivr
inc
pop
cwtl
xor
aas
iret
cmp
repnz
pop
sar
pop
pop
out
scas
pop
pop
push
pusha
imul
enter
mov
push
ja
adc
jns
roll
add
mov
fwait
xor
ret
dec
or
outsl
mov
lcall
or
adc
xchg
jnp
dec
mov
jo
inc
pop
decl
sub
push
shlb
xor
cs
loopne
out
movsl
adc
inc
orb
or
push
sbb
outsb
clc
mov
dec
and
sahf
or
xlat
es
adc
xor
rorl
sub
and
mov
xor
aas
mov
test
fisttps
jl
adc
and
dec
add
je,pn
mov
sbb
fsub
sbb
shrb
mov
jp,pn
or
pop
dec
mov
pop
inc
insb
cwtl
mov
or
shrb
ret
stos
dec
sbb
inc
push
shlb
loopne
int
ficompl
add
push
aas
add
test
int3
fs
or
jecxz
sbb
push
push
stos
pop
push
lock
add
pop
and
xchg
add
adc
sbb
mov
ret
stos
imul
das
call
sub
or
push
dec
sub
filds
or
test
adcb
or
fimull
out
xchg
lock
jne
xchg
pop
loopne
dec
mov
test
out
aad
shl
mov
cmp
add
mov
push
lcall
inc
mov
mov
loope
dec
push
cmp
sbb
mov
pop
rclb
xchg
test
or
xchg
xor
int3
into
push
cmp
orl
es
add
mov
pop
decl
idivb
ljmp
xorb
cmp
jmp
lock
xchg
or
jecxz
mov
mov
pop
imul
orl
mov
cmp
mov
insl
push
push
dec
insb
mov
lahf
mov
stos
or
dec
rorl
add
cltd
hlt
push
or
stos
lea
sub
jle
mov
test
aas
jb
push
add
xchg
jns
mov
add
mov
stos
or
mov
cltd
xor
cmp
pop
test
xor
cmpsl
pop
das
lret
in
fisubl
add
pop
add
jb
cld
mov
outsb
insl
mov
addr16
pusha
pop
dec
movsb
jp
jnp
mov
notb
jne
push
aad
mov
sbb
push
push
inc
cld
xchg
jno
mov
add
mov
push
push
mov
lret
arpl
aas
mov
scas
sbb
pop
mov
adc
dec
sbb
ljmp
fadds
jb
lcall
sbb
add
sbb
cmp
sub
xor
in
cld
sbb
jle
lcall
mov
nop
push
in
decl
dec
arpl
xchg
mov
movzwl
inc
push
push
jo
jno
push
insb
pop
test
mov
decb
movsl
cld
bound
mov
mov
xchg
push
mov
aas
mov
loop
daa
add
push
out
or
bound
loopne
and
enter
cmp
fs
fsts
xchg
inc
jp
xlat
fcom
pusha
in
and
nop
enter
or
xor
mov
test
inc
cmp
add
loopne
pop
fnstsw
scas
mov
imul
sbb
push
es
insb
mov
or
fidivrl
xchg
lahf
notb
outsl
fcomip
stos
jne
add
popf
push
testl
mov
aam
xor
dec
mov
incl
push
in
ds
ss
push
inc
jecxz
test
xchg
jbe
mov
cwtl
popa
adc
adc
insb
adc
test
aam
inc
aas
scas
ds
sarl
movsb
sahf
and
lea
js
cmp
add
adc
icebp
das
aam
and
sbb
sbb
inc
jns
in
cmc
test
xchg
add
cmc
push
or
mov
push
loopne
fstpl
push
adc
pop
add
or
es
mov
mov
divl
movl
and
cs
add
incb
cmpsl
adc
pop
nop
mov
mov
push
lock
sbbl
pop
or
inc
add
xor
mov
dec
push
sar
fbstp
mov
testl
in
adc
push
lcall
pusha
mov
orb
cmc
or
mov
xor
js
repnz
hlt
inc
ret
orl
mov
cmpsb
dec
lds
ss
and
jg
or
pop
js
add
ss
sub
hlt
aad
jmp
shlb
aad
lret
pushf
jge
lea
push
xchg
mov
std
js
pop
stc
and
pop
inc
test
add
movsb
lock
sub
xchg
aam
fstpl
popl
and
cli
sbb
mov
sub
addl
push
into
in
fdecstp
dec
call
popa
push
push
int
xor
hlt
mov
inc
pop
out
push
or
mov
lea
stc
inc
cmp
ljmp
lock
mov
test
jb
stos
mov
movsb
sub
mov
and
sub
pop
pop
inc
or
into
repnz
mov
inc
jmp
add
sahf
xor
cmp
adc
daa
mov
ja
jecxz
push
adc
jmp
out
and
add
add
lods
add
sahf
dec
js
mov
rolb
test
les
dec
and
cmp
mov
loop
shl
pop
inc
scas
add
test
mov
mov
andb
outsl
movsb
js
ss
stos
add
loope
nop
aad
mov
dec
sub
push
pop
mov
imul
hlt
cmp
in
mov
mov
ljmp
push
cmpsb
out
xchg
pop
push
sti
stos
ss
jo
cli
and
sbb
cmpsb
xchg
xchg
decl
fstpl
pushf
adc
jbe,pt
and
dec
pop
xchg
cli
aas
add
add
push
or
fld1
add
dec
lods
jle
pop
pop
scas
and
fwait
cmp
leave
and
daa
push
movsb
decb
ja
cwtl
movsb
mov
int
sar
mov
mov
inc
shll
adc
data16
push
sub
pushf
jae
and
sbb
hlt
or
push
inc
mov
inc
cwtl
es
and
mov
mov
add
call
call
and
push
mov
inc
jbe
sub
cli
mov
pop
dec
das
jl
xchg
decb
in
sbb
lods
jecxz
clc
cmc
jle
stos
dec
add
push
mov
call
addb
mov
pusha
jns
adc
shr
nop
jae
jp
fs
pop
es
push
movsb
add
dec
and
lods
and
into
int
aad
clc
fcmovb
and
ret
jnp
popl
nop
pop
xchg
add
pop
jno
jp
mov
push
test
inc
mov
dec
loop
inc
adc
mov
push
mov
pop
and
sbb
into
nop
std
jne
and
adc
clc
pop
stos
loope
sahf
fsubr
fcomps
lods
call
loopne
out
fcoms
ss
cmp
push
loopne
mov
clc
rclb
je
movsb
iret
and
mov
rolb
fistl
inc
ret
jne
hlt
xchg
int
jp
dec
pop
dec
mov
push
cmpsl
or
push
jb
pop
xor
pushl
jecxz
or
nop
or
lret
mov
lahf
pop
lcall
cmpsb
test
xchg
mov
xchg
inc
or
ss
lods
adc
subb
pop
pushf
fstpt
cltd
in
mov
fadds
icebp
repnz
mov
lcall
cli
push
xor
cmp
xchg
xchg
subb
enter
movb
mov
js
mov
cld
ljmp
fsubp
mov
or
xor
es
pusha
push
stos
add
loopne
xchg
cmp
or
cwtl
sbb
test
xor
mov
dec
aam
pusha
sti
xor
sub
sahf
jmp
inc
lahf
fdiv
mov
push
mov
add
pop
cld
mov
push
lcall
inc
pop
enter
or
popf
jmp
pop
ds
test
shlb
rcr
and
negl
cmpsl
mov
inc
imul
push
dec
mov
mov
pop
lret
dec
add
out
lock
mov
std
mov
sbb
mov
push
filds
sub
dec
jbe
sbb
cs
mov
dec
mov
rcr
test
mov
xchg
out
lahf
cmp
scas
fmul
or
nop
push
cmp
faddl
push
add
mov
clc
dec
sbb
xchg
testb
ret
pop
xor
or
jmp
xchg
sti
dec
push
enter
pushf
sbb
cld
add
je
inc
dec
icebp
fisubrs
fisttpl
pop
test
add
sbb
xor
xlat
mov
lret
and
jo
lods
mov
stos
sub
dec
scas
xchg
fiaddl
fwait
mov
ficomps
in
jbe
inc
sbb
clc
pop
pop
sbb
push
stos
test
lret
jg
xchg
cld
fnstenv
sub
push
shrb
jmp
in
mov
add
stos
xchg
scas
aaa
bound
fcomps
jle
dec
pusha
outsb
push
adc
lcall
pop
fsubrs
mov
movsb
roll
andl
ljmp
out
into
push
shrl
push
cld
or
std
ret
addb
push
mov
xlat
mov
loop
rcrb
cltd
inc
inc
dec
rorb
mov
pop
mov
or
nop
push
mov
mov
push
fdivr
mov
push
or
shlb
xor
adc
test
and
cs
add
or
adc
sbb
icebp
ja
dec
and
push
popf
and
scas
jo
sbbl
cmc
push
lock
xlat
sub
push
out
and
fwait
shrl
rolb
mov
jnp
clc
out
stos
into
lds
call
nop
dec
cmpsb
push
into
adc
repnz
lret
das
cmpsw
loope
and
ss
push
push
sbb
sbb
dec
pop
in
ds
cmp
or
push
shr
sbb
fs
sub
sti
cs
das
and
and
xchg
mov
xchg
push
push
jecxz
xchg
inc
jle
cmp
xchg
fcomps
pop
push
sub
loopne
mov
or
add
push
sub
and
in
cmp
sbbb
mov
insl
xor
lock
and
xor
dec
sbb
xchg
outsb
mov
adc
aam
lds
bound
xchg
sub
rcl
sbbb
mov
adc
push
add
ss
adc
jb
pushf
mov
inc
dec
ret
dec
std
dec
dec
jmp
stc
sub
cmp
subb
jg
nop
mov
sbb
ljmp
push
inc
pusha
sbb
imul
mov
cli
jbe
mulb
test
mov
inc
adc
inc
sbb
push
inc
out
adc
andl
dec
data16
xchg
scas
pop
pop
ss
das
dec
clc
mov
adc
int
push
inc
cmc
add
pop
xchg
js
fcoml
adc
inc
or
adc
push
ret
dec
aam
mov
adc
fsubrs
frstpm(287
adc
mov
test
hlt
pushf
orb
into
and
xchg
outsb
cmp
sbb
addb
sbb
das
add
mov
les
movl
jmp
lea
xor
pop
iret
out
cmp
pop
rcrl
pop
jecxz
jb
and
lcall
cld
aaa
push
addr16
jns
xchg
and
adc
pushf
fwait
jbe
gs
rorb
or
dec
fsubrl
xchg
and
lcall
xor
adc
js
push
add
icebp
jp
and
sbb
adc
sub
sub
push
push
insb
jg
sbb
push
cmp
sti
je
sbb
rorl
add
je
cmpsb
call
sbbb
mov
aaa
and
stos
or
dec
mov
insl
test
or
in
and
jp
cmovnp
sbb
mov
adc
sbb
adc
xor
movsb
paddb
fwait
shr
lret
cmpsl
sub
mov
test
push
cmp
lock
out
add
xchg
mov
cli
imul
push
dec
xor
inc
push
xor
call
push
fcmove
lret
dec
scas
inc
mov
adc
pop
mov
lret
imul
insb
repz
mov
ss
adc
inc
js,pt
mov
pop
or
test
idivb
repz
out
fsubrs
lretw
xchg
inc
cmpb
ret
movb
mov
or
orb
fs
sti
out
std
inc
xor
hlt
push
sbb
int
sub
jno
aaa
jl
bound
xor
mov
outsb
add
pop
push
lds
mov
test
fstp
movsb
or
pop
push
or
into
or
gs
jbe
xchg
push
push
push
mov
push
mov
or
aam
or
roll
or
arpl
bound
inc
cmp
movsl
inc
lds
out
movl
push
stos
xchg
test
ss
cmc
add
sbb
push
stc
mov
in
mov
ds
popf
je
or
daa
mov
nop
sbb
mov
outsl
cmc
xchg
outsb
sub
xlat
loopne
xchg
xchg
add
xchg
das
xlat
add
loope
mov
inc
das
xchg
inc
cltd
inc
jl
cmp
sbb
rcll
sub
push
adc
sub
pop
in
arpl
mov
shr
jno
ss
xchg
jne
outsl
add
inc
fisttpll
push
in
ja
push
test
jl
xchg
fdivrs
daa
ljmp
icebp
inc
or
roll
cwtl
xor
ljmp
sbb
icebp
adc
dec
arpl
inc
aas
out
cld
cmpsb
jno
pop
clc
in
mov
pop
dec
imull
jb
xchg
inc
addr16
orl
adc
xor
jl
or
mov
lcall
inc
fs
mov
or
jne
sbb
incb
sub
scas
mov
pop
mov
cld
sbb
lret
pop
fisttps
xchg
hlt
mull
jns
adc
insl
pop
orb
or
bnd
add
cmpsb
in
or
popf
add
fdiv
fisubrl
cmp
mov
add
ftst
icebp
mov
or
dec
xor
stos
andl
push
es
or
mov
jle
lcall
dec
mov
cli
dec
mov
icebp
add
shll
pop
xchg
inc
sub
push
lock
and
aad
push
or
xchg
mov
and
lds
or
pop
mov
and
push
out
jbe
jecxz
mov
xor
mov
add
loopne
adc
inc
pop
lret
jno
or
loopne
pop
sub
add
shlb
push
mov
push
lcall
mov
inc
std
rorb
scas
push
hlt
add
pop
jnp
adc
sbbb
cmpsb
cmp
test
push
push
add
pop
mov
pop
sub
sbbb
loop
testb
push
lods
sbb
adc
stos
push
sbb
jg
dec
fimull
xchg
cmp
push
xchg
mov
cli
cmp
ljmp
cmpsb
clc
mov
adc
std
xor
mov
mov
sub
xor
add
mov
adcl
test
fst
clc
clc
inc
pusha
sub
fisubrl
lods
push
jmp
pop
dec
call
adc
push
enter
sbb
sbb
push
pusha
decl
mov
cmc
dec
cmp
xor
ja
outsb
dec
sub
push
idivb
bound
addr16
xlat
sbb
mov
jg
rorb
adc
push
add
outsb
fisubl
scas
movsb
sbb
jbe
cmp
in
decl
mov
add
mov
adc
cmp
cmp
pusha
call
jnp
repnz
inc
test
jle
iret
adc
ljmp
ret
out
shll
sbb
push
mov
sub
push
jmp
cmp
imul
push
push
fbld
push
enter
pop
orb
dec
push
stos
mov
sbb
subb
dec
sub
and
lods
incb
fdivrs
cs
fsubs
inc
adc
incl
dec
push
pop
insl
mov
add
inc
arpl
jl
adc
out
push
lcall
outsl
andb
and
jge
adc
in
test
test
adc
cmpsl
jne
movsb
xor
jg
sar
add
fcmovu
test
sub
jge
mov
insb
xor
adc
mov
dec
clc
fwait
adc
mov
repz
ret
inc
cltd
mov
imul
or
fisttpl
jmp
sahf
xchg
sub
clc
adc
or
mov
cwtl
push
mov
sahf
ret
mov
mov
add
outsl
es
repnz
ret
js
sbbb
pop
lret
insb
cmp
js,pt
sbb
push
jo
lahf
push
pop
fadds
cmp
dec
adcb
hlt
or
mov
sbb
orb
incl
jp
adc
adc
sub
fwait
loope
push
cs
push
cmc
sub
cmp
push
test
in
pop
push
sub
mov
dec
push
icebp
push
test
int3
fcom
lods
or
mov
push
les
xchg
outsb
lock
inc
add
inc
in
inc
push
jo
cmp
sbb
test
pop
inc
mov
xchg
lcall
sub
and
test
icebp
loopne
pop
add
pop
pop
aaa
test
jmp
scas
iret
pop
inc
sub
mov
aam
add
inc
test
stos
push
mov
shlb
loopne
fsubrp
outsl
ficompl
sbb
push
sbb
subb
sub
dec
enter
shrb
insb
xor
cmc
jmp
stos
cvttps2pi
cmp
jp
inc
mov
gs
clc
test
ss
fisttps
jecxz
daa
outsl
add
fdiv
pop
mov
mov
inc
sub
and
jg
sub
mov
std
les
pop
popa
fdivr
adc
mov
pop
push
and
jp
stos
xchg
add
filds
pushf
in
stos
test
adc
shrb
mov
mov
inc
and
pop
mov
or
sbb
adc
rcr
addr16
mov
hlt
xor
lahf
jne
jle
out
mov
mov
inc
sti
mov
pop
xchg
push
jbe
mov
dec
cld
es
ja
scas
lret
cwtl
jg
jl
inc
jmp
cmc
add
dec
jmp
inc
fsubr
dec
mov
and
clc
repnz
mov
dec
jg
mov
lock
clc
iret
xchg
cmp
pop
out
mov
sarb
and
mov
mov
lea
push
mov
faddl
mov
cmp
sub
out
push
dec
mov
adc
dec
add
test
cmp
ss
aas
push
ret
cmp
andb
adc
pushf
push
pop
sub
cli
rcrl
cli
inc
scas
adc
adc
scas
and
je
xor
leave
test
sbbl
xor
and
add
pusha
cli
data16
dec
test
xchg
pop
push
aaa
imul
inc
or
sarl
inc
jmp
sbb
sbb
mov
call
fadds
sbb
mov
cmc
sbb
in
loopne
icebp
sub
nop
push
sub
mov
pop
data16
popa
subb
add
addb
push
xchg
ja
pop
pop
jmp
adc
lock
dec
sbb
xchg
shlb
or
adc
sti
rcr
testb
nop
iret
or
ljmp
out
add
mov
aam
out
je
mov
pop
xor
adc
clc
dec
jmp
in
add
pop
cmp
aaa
mov
or
call
jbe
dec
rcr
dec
stos
lods
push
pop
out
sub
fwait
inc
nop
xchg
sub
enter
mov
ror
test
jns
es
out
icebp
test
aad
lcall
and
scas
aas
xor
and
inc
stos
push
movsb
aam
xor
push
inc
jmp
js
repz
pop
add
sub
dec
xor
mov
imul
inc
loop
dec
in
cli
push
out
lahf
jo
jg
pop
and
or
ds
mov
adc
push
scas
clc
outsl
fists
loopne
cmp
pop
das
jns
daa
out
bound
push
or
jmp
jg
aad
mov
mov
push
stos
or
push
fsubrl
add
sbb
pop
adcl
push
or
jp
mov
inc
js
lds
push
fnsave
add
cmp
popf
icebp
or
and
jge
test
mov
jnp
rcrl
fcompl
inc
pop
adcl
lock
sbb
xor
jle
sahf
sbb
add
loopne
or
ret
enter
cmc
xchg
jecxz
pusha
cmp
fisubs
adc
adc
addl
dec
std
pop
inc
dec
mov
push
fwait
inc
sub
mov
fcmovb
adc
xor
lret
fcmovnu
lock
js
in
outsb
add
ds
test
push
inc
add
icebp
mov
andb
fisttpl
mov
jmp
add
push
mov
loop
push
pop
push
inc
xorb
test
pop
jo
jnp
xchg
clc
jg
cwtl
and
add
mov
rcr
add
sbb
jno
cmpsl
mov
inc
push
or
xchg
mov
dec
and
nop
ret
sub
sahf
es
or
stc
pop
push
loopne
mov
pop
xlat
adc
es
jg
cli
jns
popf
psllw
cli
add
pusha
xchg
adc
ljmp
push
es
hlt
inc
aaa
into
stc
xor
pop
cmp
sub
ret
push
pop
mov
in
clc
addl
add
dec
lock
xlat
mov
or
lods
xchg
jmp
cmc
pop
dec
xorl
fildl
add
jle
cltd
outsb
cmpsb
sahf
sub
cli
or
pop
out
mov
mov
mov
ret
mov
lods
stos
jo
mov
mov
jge
push
int
push
pop
add
sub
call
add
add
call
clc
lret
mov
in
adc
jle
push
or
sub
mov
lds
jecxz
add
mov
cmp
popa
add
shrb
sub
push
bound
adc
sbb
cmpl
scas
fldt
jmp
andl
adc
or
sbb
loope
push
and
pop
mov
adc
gs
int
cmpsb
mov
add
pop
cs
or
jge
popa
loop
incl
or
push
mov
push
pusha
aam
jne
xlat
cmp
adc
sbb
icebp
adc
fwait
test
loopne
stos
dec
ss
and
inc
push
in
stos
sub
lret
cwtl
mov
cmp
jae
stc
xor
test
ljmp
hlt
es
into
rolb
inc
loopne
xor
clc
scas
dec
fsubs
int
sub
sti
pop
adc
dec
pop
call
das
rclb
pushf
mov
sub
mov
ljmp
mov
imul
pop
jg
mov
std
outsl
mov
ss
stos
mov
cwtl
mov
push
mov
cld
push
inc
inc
xor
ret
jmp
inc
inc
xchg
addr16
test
xor
clc
fildl
add
cmp
pop
scas
push
js
mov
mov
cmpb
add
aad
mov
pop
rol
inc
cwtl
fsub
sbb
push
mov
out
testb
movb
inc
inc
jnp
push
pop
push
sub
mov
nop
push
cmpb
mov
shl
rcl
es
sti
stos
mov
outsb
or
and
or
sbb
pop
enter
addr16
les
and
repz
pushl
imul
sar
mov
js
xchg
mov
arpl
xor
mov
dec
xchg
shlb
jge
xor
mov
movsl
push
add
cltd
js
cmp
push
mov
lret
jecxz
push
sub
or
pusha
call
pusha
sub
flds
cmp
or
jge
or
or
xchg
and
and
repnz
cs
xchg
mov
aaa
loopne
jno
fwait
popf
mov
mov
fstpt
imul
fwait
jg
adc
adcb
xchg
adc
add
dec
sub
pop
arpl
jle
aam
jmp
jge
lods
inc
lock
add
cli
movsl
sbb
push
pop
call
or
jbe
in
les
jp
lods
mov
repnz
sbb
lds
stc
add
pop
pop
rcr
add
or
mov
xor
shlb
pop
xchg
fwait
shr
cli
pop
icebp
testl
pop
add
cmp
dec
push
mov
xor
into
mov
js
test
outsb
add
xor
xchg
pusha
lcall
lock
sub
mov
mov
jo
and
repnz
es
roll
add
pusha
xchg
mov
pop
je
and
in
dec
mov
jmp
enter
inc
cmp
ja
outsl
ficoml
bound
sti
cli
into
jnp
das
fdivrl
pop
shrb
xor
std
xor
shll
pop
test
xor
pop
add
ja
mov
shlb
sub
and
sbb
test
mov
jmp
shrl
cwtl
movsb
test
jge
ds
cmp
add
sub
sub
fisttpll
mov
or
sbb
sbb
rorl
mov
mov
icebp
jae
fbld
and
decb
movsl
inc
fmuls
lcall
push
ds
adc
inc
xor
testb
jle
out
sub
pop
ret
rorl
mov
dec
jg
xchg
adc
sbb
sub
xchg
sub
pop
nop
sub
pop
pop
mov
mov
scas
mov
add
xchg
or
out
rclb
xor
sbb
mov
add
loop
call
sub
push
repnz
jb
adc
outsl
mov
inc
rcrl
mov
aad
mov
jp
shlb
pop
sbb
jne
in
jmp
loope
in
fs
pop
bound
mov
jl
adc
mov
movsb
fildll
sub
hlt
in
testl
loop
push
ss
out
add
pop
push
mov
imul
xchg
xchg
inc
cmpl
xor
aas
push
push
in
ss
mov
fadds
sbb
push
sub
je
cmc
xchg
fsubl
cmp
and
add
or
test
mov
sub
mov
adc
cmp
or
into
iret
loopne
mov
add
fcmovb
add
cli
cmpsb
lods
aam
mov
aam
jmp
ljmp
in
sbb
xchg
dec
popf
adc
push
push
jmp
xchg
lods
cmp
dec
jmp
ljmp
fwait
jge
sub
jp
push
loope
push
adc
push
decl
shrl
jg
xor
ret
negl
out
sbb
mov
jne
xchg
sarb
push
xchg
loopne
pop
add
rclb
adcb
or
je
xor
mov
shr
inc
jle
imul
fcompl
testb
jp
shrl
aam
movsb
mov
xchg
aas
cmpsb
add
test
sbb
mov
xchg
dec
and
mov
pop
ret
mov
sarl
mov
pop
add
mov
roll
jmp
rol
icebp
xlat
mov
leave
pop
adc
lret
roll
call
inc
mov
inc
push
sbb
dec
sahf
pop
pop
clc
lahf
mov
mov
sarb
xchg
pop
push
loope
mov
pop
sbb
mov
xor
inc
dec
insb
xor
pop
std
lret
and
aas
inc
adc
dec
add
lea
mov
mov
mov
stos
stos
call
add
xor
push
mov
cmp
xor
jmp
fadd
push
inc
outsb
add
inc
inc
push
lcall
push
fwait
in
aas
mov
or
test
scas
dec
pop
cmpsb
cmc
push
sbb
push
out
mov
sub
pop
shll
mov
mov
mov
div
leave
mov
fildl
sub
loopne
pop
mov
test
jle
into
push
push
sti
std
adc
jmp
mov
adc
sahf
fildl
scas
sbb
and
add
fnstsw
sbb
bound
adcl
or
sbb
incl
pop
pop
es
and
pop
shr
rorb
icebp
sub
mov
cs
out
rclb
adc
lds
loope
and
hlt
pop
in
mov
es
xchg
sbb
aad
sbb
adc
inc
cmpsb
jp
lods
call
inc
mov
add
test
pop
shr
pusha
aaa
popf
mov
add
pop
aad
movl
shlb
stos
std
clc
dec
adc
push
insl
xchg
mov
js
or
xchg
jecxz
test
mov
cs
push
inc
jp
push
push
adc
mov
std
mov
sbb
jl
xchg
mov
pop
jne
rol
pusha
push
sub
dec
mov
inc
fnstsw
xchg
inc
fstpt
push
xorl
lock
popf
pop
stos
or
mov
adc
sti
bound
mov
sub
mov
hlt
pop
dec
cmc
aas
test
mov
std
jnp
mov
sbb
subl
sahf
mov
mov
mov
and
lods
push
dec
push
xor
mov
clc
inc
loopne
pusha
or
add
push
adc
popf
dec
add
and
or
pushf
add
mov
jno
ror
ret
push
xor
movsw
and
inc
hlt
mov
adc
pop
out
sub
add
push
adc
lock
inc
cmp
jp
stos
cmp
jle
push
ret
dec
xchg
pop
dec
ljmp
sub
inc
int3
sti
pmulhw
imul
fcompl
test
aaa
pushf
add
adc
orl
pushf
mov
xor
inc
lret
add
mov
dec
inc
push
cmp
inc
std
push
aam
mov
and
xor
cld
incl
mov
icebp
test
ljmp
push
orl
cli
mulb
icebp
scas
adc
cmc
enter
stos
pop
mov
push
outsl
jmp
push
gs
xor
test
pop
xor
mov
add
outsb
js
fisttps
stos
xor
mov
inc
and
cmpb
dec
in
push
xchg
out
jne
and
pusha
test
shrl
hlt
jg
sbb
adc
or
sbb
cmp
fiadds
sub
stos
xchg
mov
mov
xor
rclb
loopne
std
into
push
xchg
cmp
mov
in
jmp
aaa
mov
test
push
add
out
imul
or
push
scas
or
mov
es
lcall
je
jp
cltd
mov
jmp
es
mov
test
test
sub
repnz
cmp
xor
je
insb
sbb
les
pop
add
add
stos
addb
and
pop
sti
cld
jmp
mulb
adc
push
mov
test
xchg
fstps
xor
int3
aam
inc
dec
cmpsb
sbb
mov
call
je
fsts
fstps
add
lret
jmp
mov
add
inc
mov
rcl
add
jle
or
inc
lea
enter
sbb
inc
mov
popl
out
cmp
clc
xchg
arpl
inc
pop
sbb
adc
inc
data16
jo
dec
jg
je
push
pop
fldt
fisubl
dec
mov
or
xlat
xchg
push
push
push
fldt
ret
enter
in
ss
mov
fisttps
cmp
sub
push
test
or
aam
add
xchg
dec
push
mov
lods
pusha
and
pusha
pop
cwtl
inc
mov
adc
sub
sub
mov
lock
push
fdivr
jbe
addl
xorb
add
sar
cmp
xchg
fcoms
pushf
aam
dec
pushf
sub
cmp
cli
icebp
aas
int3
sbb
inc
inc
mov
faddp
mov
sub
lods
ljmp
rcrb
sbb
cltd
adc
sub
cs
sub
add
xchg
fadds
test
ss
sarb
std
idivb
mov
ret
inc
inc
cmp
rcrb
adc
sbb
dec
test
inc
mov
outsl
clc
inc
adc
xor
mov
adc
adc
das
in
xchg
lock
addb
mov
int
mov
pop
aad
shlb
add
jae
dec
mov
rorb
scas
lahf
sbb
jle
xor
dec
mov
decb
push
mov
into
dec
push
jnp
xchg
inc
int3
xchg
adc
fisttpl
push
mov
inc
sti
jmp
push
dec
cmp
leave
es
mov
mov
orb
inc
mov
inc
add
push
push
lea
push
out
sbb
adc
cli
mov
inc
mov
push
popa
xchg
or
bound
hlt
mov
pop
and
notb
icebp
ficomps
mov
cmp
rorb
imul
cmpl
pushf
mov
mov
add
les
shl
sti
loop
test
dec
jl
jl
fbld
popf
xchg
ss
mov
shll
inc
out
or
lock
jle
pop
dec
and
mov
ret
mov
and
jl
incl
xchg
fstpt
pop
shlb
arpl
stc
std
and
lods
push
int3
inc
or
cmp
xorb
sbb
cli
aad
xchg
cmp
xor
fisubrs
push
popa
jnp
adcl
fs
jnp
xchg
jne
xorb
in
xor
sub
stos
cs
dec
hlt
sub
clc
das
cld
mov
jmp
mov
xor
sbb
pop
std
sbb
adc
sbb
das
mov
loope
cmpl
clc
or
ljmp
test
mov
push
pop
pop
int3
sbb
pop
mov
push
pop
or
pop
or
push
les
sub
ljmp
dec
and
aas
test
data16
test
push
push
fwait
add
sbb
xchg
or
inc
pop
shr
inc
inc
popa
jg
orb
add
dec
jmp
sbb
loop
add
push
push
loope
xor
dec
jns
fdivl
inc
scas
test
mov
add
adc
mov
pop
in
mov
subb
fabs
lcall
jmp
sarb
push
or
out
inc
pop
test
inc
push
pop
int3
movsb
xchg
imul
push
arpl
and
mov
xor
loopne
mov
inc
add
and
das
or
jge
jno
push
test
pop
sub
mov
es
mov
pusha
lret
test
jmp
sbb
dec
fistl
jmp
xchg
xchg
push
push
adc
push
jg
push
xchg
outsl
dec
xlat
movsb
out
sub
push
test
pop
lock
sub
enter
pop
mul
or
das
dec
std
sahf
je
mov
std
inc
and
insl
xchg
mov
xchg
inc
int3
xor
pushl
pop
adc
sub
fwait
test
inc
add
jno
stc
cmp
sbb
icebp
mov
dec
inc
mov
inc
jo
popa
jge
out
nop
mov
imul
cld
into
shrb
mov
jle
cmpsb
ljmp
shrb
cmp
les
jg
outsb
mov
jecxz
push
ret
mov
inc
and
fcomps
inc
push
mov
int3
mov
fidivrs
aaa
sub
push
jge
and
aad
or
sub
aam
pop
add
mov
and
rol
add
cmpsb
xor
inc
clc
fldl
inc
push
je
adc
orb
xchg
nop
aam
mov
aas
mov
test
jle
pop
adc
xchg
adc
nop
movsb
mov
clc
shlb
pop
add
dec
pop
call
sti
and
push
test
sbb
rorl
outsl
inc
jecxz
sub
jecxz
adc
test
ficoms
add
add
and
jmp
pop
lock
xchg
push
mov
xchg
lods
ficoms
clc
je
mov
dec
mov
cmp
xor
faddl
sub
insb
or
cmp
aad
mov
jb
mov
hlt
ret
adc
inc
ja
mov
push
mov
push
roll
lods
sub
mov
mov
rol
xchg
and
roll
jb
cmp
negb
jb
push
adc
loopne
push
xchg
pop
cmpsl
jp,pn
testl
add
and
adc
sti
add
push
and
js
pop
scas
ds
pop
adc
or
push
mov
inc
adc
and
sbbb
mov
mov
inc
add
add
ret
pop
shrb
push
adc
shr
movsb
enter
std
stos
int3
fs
push
mov
jne
inc
add
push
push
or
push
jp
test
adc
jg
ljmp
jo
sti
and
cli
les
mov
jb
cltd
push
mov
inc
pop
das
push
pusha
adc
xchg
cmc
push
mov
sub
or
mov
xchg
mov
mov
jns
fistpl
cmp
testb
rcrb
fdivs
pop
int3
sbb
dec
mov
pusha
jle
adc
imul
std
repz
or
aad
mov
scas
rclb
scas
test
mov
sbb
mov
jo
inc
call
xor
lock
je
decb
pop
add
pop
in
dec
pop
cmp
test
xor
cmpsl
test
add
outsl
xlat
scas
cmpsb
fs
jb
adc
ja
inc
daa
aam
push
adc
inc
mov
mov
push
ljmp
aaa
mov
cmpsl
stos
lods
inc
push
jb
jl
add
fildll
jbe
jecxz
sbb
and
aaa
sbb
mov
sub
adc
jbe
and
dec
jl
mov
pop
jno
daa
mov
ss
enter
inc
das
sbb
push
cmp
cwtl
inc
pop
adc
xor
mov
sbb
dec
cwtl
adcb
call
lea
sbb
mov
loopne
mov
test
cmpsl
cwtl
pop
aad
mov
pop
pusha
aam
or
scas
push
js
scas
insb
or
mov
push
pop
pusha
xchg
outsl
jo
push
out
xor
sbbl
pop
adc
push
je
hlt
sti
cmpsb
push
or
mov
push
decb
in
notb
imul
push
scas
cmpsb
out
xor
loop
arpl
cmpsb
jl
aad
outsb
rolb
adc
sub
adc
fmull
test
outsl
imul
pop
es
fimull
cmp
aas
nop
dec
sarl
pop
inc
sub
mov
mov
cmpl
adc
sbb
in
test
ljmp
std
fisubs
push
mov
pop
fistl
dec
ret
fildl
ret
les
mov
out
mov
fisttps
or
sbb
mov
rcl
and
loop
xchg
jecxz
mov
test
jp
aaa
sbb
adc
pop
dec
das
and
adcb
or
xor
mov
repz
push
mov
sub
pop
je
push
shrl
adc
inc
mov
xchg
push
shr
inc
mov
test
filds
sub
mov
sub
dec
cmpsb
cmp
mov
aas
ja
movl
leave
add
mov
sub
inc
adc
hlt
lods
pop
mov
xor
mov
mov
sub
pusha
aaa
cmpl
xor
add
jmp
mov
call
or
clc
add
mulb
jl
fucomp
jmp
xchg
lods
push
testb
sahf
ret
rclb
and
or
add
cld
add
inc
cmp
pushf
push
aaa
and
andb
push
push
mov
in
pop
mov
lock
sbb
inc
pop
sbb
pop
mov
jmp
dec
adc
jno
dec
push
mov
and
mov
data16
sub
dec
loope
jnp
xchg
xor
scas
push
icebp
push
clc
aad
lods
push
xchg
dec
inc
jmp
xchg
jno
add
xor
cmp
mov
les
add
mov
mov
adc
push
adc
test
adc
pusha
lods
mov
pusha
jo
test
in
out
sar
js
jp
imulb
adc
clts
jo
mov
sub
mov
les
push
sub
mov
add
push
push
mov
lcall
in
fildl
adc
sbb
ja
xor
xor
and
fistl
dec
dec
mov
add
cli
add
repnz
inc
adcb
push
adc
sbb
dec
iret
cli
or
fdivrp
adc
adc
insl
push
imul
decb
sub
add
adc
je
sub
clc
into
mov
mov
push
rorl
mov
jno
lods
adc
sub
xor
aas
dec
call
or
fcompl
pop
incl
mov
test
mov
loop
cwtl
sbb
insb
mov
ja
xchg
je
push
mov
popa
clc
add
or
scas
out
or
push
add
in
outsl
fists
mov
test
push
arpl
test
fs
fs
cld
mov
scas
sub
pop
inc
dec
jb
jo
dec
and
jle
clc
fwait
push
pop
fs
fistpll
sbb
je
out
jmp
data16
xchg
inc
dec
xor
pop
push
pop
aaa
mov
test
adc
push
jnp
rolb
and
movsl
pop
fiadds
mov
mov
mov
xlat
cmp
aas
inc
pop
movsb
rorb
pop
cmp
inc
mov
pop
cld
js
clc
mov
sub
testb
jle
pop
sub
or
push
dec
add
xchg
stos
inc
jp
scas
popf
push
sub
clc
movsl
pop
xorl
adc
add
fsubs
mov
adc
ja
xor
mov
int3
test
jge
jl
sbb
loop
out
les
ljmp
mov
or
mov
mov
mov
add
jbe
xchg
notl
cltd
and
cld
flds
xor
xor
ljmp
mov
xchg
cmp
pop
pop
cmpsb
lcall
push
js
inc
cmpb
pusha
in
scas
add
sub
mov
outsb
adcb
out
sbb
mov
and
mov
or
or
in
test
aas
jbe
and
cmpsl
and
xor
aad
xor
mov
mov
mov
stos
cmc
mov
fsubs
adc
inc
dec
inc
cmc
popf
push
cli
les
pop
test
xor
stos
add
dec
and
ret
mov
mov
nop
push
pop
adc
jmp
lret
xchg
dec
inc
cmp
leave
or
call
dec
jbe
jmp
mov
addr16
lds
jp
ds
mov
das
lock
cltd
scas
ret
in
negl
mov
cmp
insl
int3
add
mov
pusha
insb
mov
stc
sbbb
pop
mov
outsl
cmp
sub
and
in
sub
out
and
jns
and
lea
pop
push
sub
add
dec
mov
outsb
js
scas
mov
jbe
push
fisttpl
or
and
popa
mov
stos
insl
sub
movsl
xchg
dec
scas
jo
mov
xchg
ja
pop
lods
sub
insl
mov
push
push
jg
cmc
int3
out
mov
mov
adc
addl
icebp
pop
add
pop
add
cltd
sbb
pop
pop
in
xchg
mov
mov
hlt
loope
pop
mov
pop
fildll
cmp
js
cmp
dec
test
inc
jmp
clc
sub
or
inc
jl
pop
sar
and
out
mov
push
xchg
pop
fimuls
xor
jo
cmpsl
cs
int
dec
lock
and
addb
dec
adc
mov
out
or
lcall
imul
ja
out
sub
das
lock
test
pop
loope
mov
ljmp
fucomp
lcall
ljmp
dec
sub
hlt
push
inc
hlt
es
mov
inc
mov
xor
push
push
sbb
jbe
mov
pop
stos
in
insb
mov
je
add
pop
mov
mov
cli
cmp
imul
xor
adc
sbb
and
sbb
push
mov
mov
add
add
lcall
dec
cmp
icebp
stos
fsubrs
push
shrb
xor
or
mov
stos
out
insl
and
mov
cmc
mov
dec
and
jbe
push
ret
sbb
inc
push
mov
fs
jg
pop
add
test
and
xchg
faddp
les
sti
ja
pushf
jg
mov
stc
mov
clc
iret
mov
outsb
xchg
mov
ss
scas
mov
or
cmpb
mov
outsl
test
fnstcw
mov
lds
cmp
cmpsb
cmc
sub
sbbb
ja
xchg
loope
pop
icebp
jmp
inc
popa
mov
les
mov
cld
mov
and
or
std
add
pop
add
push
fidivrs
adc
push
lods
jle
test
xchg
jno
mov
jg
xchg
test
pusha
sub
gs
insb
dec
shl
push
into
cmpsl
adc
hlt
adc
imul
das
push
cs
xor
and
mov
frstor
loope
sti
mov
or
jg
test
ret
data16
and
sbb
or
pushf
or
andb
hlt
decl
or
mov
fnstsw
cmp
sbb
lock
inc
repnz
add
in
or
sub
xor
mov
shll
jbe
enter
pop
insl
pop
outsb
test
int3
or
lcall
dec
push
out
push
mov
pop
aad
es
dec
adc
cli
aad
dec
lret
mov
js
fstp
jg
xchg
clc
mov
pop
or
scas
out
mov
imulb
push
dec
ficoms
fmuls
mov
adc
filds
mov
das
jp
insl
aam
dec
adc
jnp
lods
inc
sbb
xchg
aad
mov
data16
dec
test
fistpll
push
stc
nop
imul
out
clc
call
repnz
movsb
repnz
in
fsubrl
aam
pop
inc
pop
cmc
aas
mov
aaa
getsec
outsb
aas
mov
ret
and
or
js
cwtl
lods
mov
add
push
stc
cmc
mov
mov
mov
xchg
mov
pop
dec
mov
xor
shl
fisubrl
mov
inc
push
dec
add
dec
movsl
aaa
xor
inc
clc
push
or
decb
dec
pop
cltd
push
call
mov
adc
push
std
sub
inc
pop
loop
sbbb
jmp
add
adc
enter
inc
inc
fcmovbe
jno,pn
clc
call
lret
mov
scas
rcr
and
sbb
add
pop
repnz
pop
adc
push
pop
inc
xor
inc
dec
sub
dec
fidivs
mov
out
push
clts
jnp
es
pop
adc
adc
cli
outsl
mov
jb
mov
push
mov
add
incb
mov
mov
movsl
int3
cld
add
in
test
pop
adc
sti
push
push
add
movsb
or
cli
std
in
imul
fwait
inc
hlt
pop
cmc
in
lods
test
xchg
negb
lahf
insl
ljmp
mov
dec
or
and
xchg
call
lahf
loopne
mov
cld
or
test
inc
andb
adc
jbe
push
testb
imul
int3
push
xchg
inc
mov
testb
add
cld
out
push
sbb
jmp
out
push
repz
sub
lcall
stc
jnp
adc
sbb
mov
pusha
push
std
data16
mov
movsl
lods
mov
sbb
sbb
sub
in
dec
push
icebp
stos
dec
jmp
cltd
sub
fs
fildll
loope
push
lcall
dec
cs
scas
push
sub
add
sbb
dec
fisttpl
sbb
mov
push
sbbb
fiaddl
dec
sbb
gs
mov
mov
insb
outsb
fs
mov
xchg
push
xor
and
out
cli
cwtl
add
mov
and
mov
stc
push
jg
in
xor
fsubs
mov
cmp
fidivrs
pop
mov
mov
and
stos
mov
aas
jl
imul
xorb
cli
std
outsl
sbb
dec
xchg
mov
jg
enter
pushf
lret
jp
dec
cltd
outsb
dec
stos
mov
push
or
adcl
ficompl
xchg
scas
sub
adc
cmp
pusha
adcl
add
lea
ret
xchg
adc
das
fsub
adc
insb
mov
or
cmpsl
ds
loope
cld
incl
adc
repz
pop
cmpsb
lock
mov
xchg
cmpsb
sbb
push
jo
cmp
mov
mov
jl
stos
std
shll
mov
dec
xchg
dec
data16
dec
ljmp
bound
int
popa
fsubl
loopne
dec
loopne
mov
sti
inc
sbb
je
add
or
xor
lahf
sub
pop
dec
clc
loope
jne
mov
or
mov
fstpl
subl
call
lcall
loopne
mov
push
jbe
push
rclb
mov
std
jp
ljmp
loope
icebp
ljmp
push
jmp
inc
mov
inc
and
inc
out
mov
jle
xor
and
pop
jecxz
test
shrb
sahf
popl
cmp
outsl
sbb
pushl
test
cs
jle
mov
pop
ja
jmp
icebp
push
xor
pushf
aad
pop
in
orb
adc
jecxz
mov
mov
and
add
shrb
sbb
js
rol
and
scas
mov
adc
adc
push
sar
and
cld
dec
jmp
call
sbb
lahf
test
aaa
cwtl
loopne
jno
addr16
cld
in
scas
test
scas
into
mov
ljmp
mov
sti
inc
dec
adcb
push
shrb
hlt
push
cmp
mov
push
or
push
and
call
mov
mov
dec
cmp
jle
punpckhdq
jo
and
popf
sub
outsb
mov
pop
outsl
pushf
and
cmpsb
loopne
rorb
dec
pushl
pop
fdivrs
mov
mov
xor
adc
sbb
pusha
jae
fcomi
or
jmp
sub
shll
mov
rcrl
and
push
push
inc
out
dec
popa
loope
jge
mov
stos
mov
cld
inc
push
cmp
lock
out
cmp
adc
cltd
or
inc
mov
xchg
inc
adc
ret
outsl
pushf
mov
or
add
push
decb
lds
mov
clc
icebp
adc
xor
or
je
inc
adc
dec
in
incl
imul
ss
fwait
push
add
mov
aam
mov
add
jmp
ja
lds
aad
nopl
ss
icebp
jmpw
add
push
inc
dec
add
ss
enter
jmp
adc
and
out
aad
adcb
lods
push
nop
das
mov
nop
add
clc
scas
xchg
into
mov
ffree
adc
adc
sbb
pop
inc
orb
xor
repnz
mov
sub
ret
mov
mov
scas
mov
dec
pop
push
mov
bound
out
or
cmp
sbb
ljmp
cli
int3
js
push
jle
daa
cmp
dec
movsl
dec
xor
ret
ficompl
loope
sahf
dec
pop
addr16
ds
scas
sar
mov
inc
sahf
add
out
or
pop
and
xchg
jp
inc
movsl
mov
mov
frstor
jmp
mov
stos
add
lcall
mov
mov
dec
iret
mov
imul
enterw
mov
jg
mov
nop
xor
outsb
call
push
sbb
lods
aaa
and
push
movb
push
adc
sub
cmp
dec
in
dec
xchg
lods
xchg
push
sbb
push
pusha
mov
clc
ret
lods
sub
insl
fcmovbe
fimull
cmp
add
xor
jge
cli
or
jecxz
add
movsl
pop
das
out
cli
sub
fnstcw
mov
pop
in
pop
icebp
shlb
jp
cmp
push
stos
fucomp
icebp
aas
std
xor
mov
mov
cmp
lods
push
mov
nop
jle
or
in
out
mov
mov
loop
sbb
xchg
rcrb
fmull
aaa
mov
add
pop
pusha
es
out
or
jg
fidivs
mov
loope
push
pop
rolb
es
dec
popa
andb
pop
or
push
call
jle
imul
out
and
pop
cld
add
hlt
mov
push
pushf
push
add
sbb
lods
in
xchg
pop
adc
mov
and
pop
lock
cmpsl
pop
test
andb
push
adc
inc
xchg
divb
ljmp
pop
inc
aaa
sub
push
adc
sbb
mov
cmp
pop
repnz
loopne
int
and
std
jg
rolb
sbb
aaa
ret
lea
sti
dec
loope
dec
sbb
fstpl
dec
jno
bound
inc
clc
jg
cmp
fcos
out
clc
jne
addr16
jno
push
mov
stos
sbb
and
scas
mov
push
leave
xlat
pop
loop
ficomps
mov
aaa
push
mov
test
pop
cmp
sbb
jmp
pop
clc
lods
aaa
jmp
xor
icebp
mov
and
or
jns
rorl
xchg
fidivl
pop
scas
add
add
pop
aam
inc
cmp
inc
in
and
sbbb
repnz
arpl
pop
adc
lcall
xor
and
ret
lret
in
xchg
out
test
sbb
or
pop
mov
leave
fadd
aam
enter
decl
into
shl
add
xchg
ljmp
loopne
xchg
inc
popa
mov
call
xchg
ljmp
sub
clc
cli
jle
dec
sbb
dec
pop
es
rclb
add
or
gs
inc
std
xchg
testl
jns
add
mov
popf
inc
loopne
mov
das
adc
das
negl
out
dec
jne
push
mov
jecxz
shlb
and
push
mov
ds
sbb
and
pop
mov
negb
dec
aas
pop
or
jp
add
incb
fistpl
cwtl
sub
mov
jecxz
jp
push
sbb
mov
mov
fwait
fs
or
bound
jbe
xor
cld
cmp
in
dec
xchg
mov
sbb
xchg
mov
jle
dec
adc
negb
notl
cs
cld
test
arpl
sub
outsb
cmpsl
or
aad
out
cmp
cmpsl
jo
jp
add
loopne
pop
jb
data16
jecxz
or
push
push
sbb
xchg
jne
lret
dec
inc
in
cmp
cmc
in
lods
xor
shlb
mov
loope
and
dec
or
push
mov
addb
jbe
fsubr
mov
adcb
cmc
lcallw
xor
cmp
dec
test
test
shrl
push
rorl
call
stc
add
ficoml
scas
das
clc
decl
ret
cmpsb
aaa
push
add
pop
xchg
jnp
add
int3
xchg
outsl
imul
dec
fdiv
xor
cld
push
lock
jl
sbb
aaa
jle
out
int3
mov
pusha
sbbb
pop
data16
mov
ljmp
jno
mov
idivb
mov
mov
ja
les
jnp
jbe
fcomi
mov
ja
add
jmp
cld
outsl
xchg
push
xor
adc
cld
outsl
add
lods
es
mov
ljmp
push
mov
imul
add
cmpsl
dec
call
pop
mov
dec
push
clc
insb
or
out
mov
imul
adc
je
jnp
cmp
add
insl
cmpsb
mov
push
ljmp
xchg
mov
cmp
cmpsl
mull
clc
test
imul
aas
test
mov
mov
lcall
jmp
inc
hlt
dec
push
fs
lods
lret
leave
mov
cwtl
out
jp
or
aaa
ljmp
cmp
xor
adc
enter
movsb
movsl
mov
mov
cld
mov
mov
cmc
fdivs
push
and
shlb
inc
gs
movl
das
int3
jb
add
hlt
add
sarl
or
stos
or
adcl
sub
inc
add
lock
sub
push
decl
pop
fstp
xchg
lds
shll
adc
adc
add
movsb
pop
fildll
dec
lcall
cmp
outsl
int3
cmpsl
shrl
push
cwtl
out
nop
ljmp
fadd
fimuls
push
and
add
jnp
mov
mov
add
sub
stos
les
addr16
push
ficoms
fcmovbe
add
sub
and
test
mov
mov
pop
or
push
test
inc
int
nop
outsb
inc
cmp
loope
out
dec
xchg
sub
out
shlb
mov
ss
nop
or
add
icebp
das
call
mov
imul
pop
mov
bound
js
pop
ss
out
cli
ljmp
mov
lock
lea
movsb
add
cmp
cmpsb
mov
mull
mov
sub
call
out
fbstp
adc
adc
ss
mov
fdivrl
add
call
push
sti
sbb
popa
push
xchg
sbb
loope
xchg
dec
shr
pop
xchg
jo
sbb
call
mov
das
mov
mov
push
push
add
push
arpl
imul
fwait
cmp
jl
mov
shrb
cmc
add
mov
dec
push
movsl
cmp
adc
and
add
dec
cmp
dec
mov
push
mov
pop
sub
push
inc
mov
cmpsl
aam
jg
movsb
out
test
pop
pop
push
add
nop/reserved
roll
xchg
decb
jge
inc
push
mov
aas
xchg
repz
aad
loop
ljmp
adc
jns
mov
xor
sbbl
jmp
incl
bound
out
inc
pop
cmp
add
incl
sti
lods
notb
mov
notl
add
out
stc
inc
icebp
fcmovnbe
pushl
add
push
pushf
mov
sbb
xor
adc
loop
or
push
addb
xor
push
mov
shlb
add
push
adc
pop
rcrb
xor
je
loop
pop
inc
test
pop
mov
jo
fsubrp
stos
outsb
or
xorb
sbb
call
push
or
fdivs
push
sahf
cmpsl
popf
in
js
subb
jbe
clc
push
cmp
sti
push
add
jl
jno
jmp
xor
cmpsb
mov
adc
filds
repnz
cmc
xchg
jo
mov
mov
mov
es
xchg
pusha
adc
fcoml
shrd
inc
xor
jle
pop
xchg
lcall
lods
je
nop
mov
decl
pushf
adc
insb
mov
push
mov
adc
mov
xor
pop
push
mov
push
inc
lock
jo
add
lcall
mov
mov
shl
imul
out
jge,pt
pop
dec
mov
cs
adc
push
into
jo
push
inc
stos
lret
test
cmp
xchg
loop
pop
rolb
inc
fistps
sub
cld
incl
push
je
fildll
or
adc
stos
mov
add
and
sbb
scas
push
push
jo
loopne
mov
test
jno
mov
lock
pusha
push
jne
mov
clc
daa
mov
and
inc
add
clc
idivb
fistpll
mov
daa
cmc
inc
cmp
inc
mov
fsubrs
or
mov
jmp
inc
sub
sub
add
xorb
mov
sbb
push
out
popf
fs
xchg
adc
and
add
fildll
leave
test
imul
fs
stos
nop
out
sbb
stos
andnps
lds
jmp
mov
or
je
dec
lock
adc
mov
daa
hlt
jg
push
cld
test
pop
push
or
rorb
or
fcmovbe
mov
push
fistpll
push
sub
or
cwtl
mov
xchg
add
addb
stos
push
add
mov
ljmp
pop
mov
out
pop
mov
mov
mov
sub
pop
cltd
pop
fs
adc
jne
inc
push
cwtl
clc
pop
lock
xorl
repnz
shll
cmc
out
cmpl
insl
in
inc
xchg
add
imulb
sbb
jno
sbb
outsb
add
cmp
jecxz
dec
mov
shrl
iret
sti
or
lcall
es
cmp
rcrl
lea
jecxz
fdivr
add
loope
or
enter
pop
sbb
inc
popf
fnstsw
int3
test
push
rcl
pmuludq
js
inc
data16
ret
sti
mov
aam
dec
arpl
scas
sbb
cs
add
sbb
adc
xor
cld
jg
ffree
push
pop
add
cmpsb
cmp
repnz
adc
gs
pop
decl
and
popf
dec
push
xor
cmpsb
ds
dec
test
imul
jl
and
xchg
aaa
sbb
jg
sub
inc
aaa
test
xorb
xor
hlt
imul
adc
mov
and
clc
clc
cmp
pop
fcomps
inc
jl
xlat
push
pusha
andb
adc
negb
movsb
adc
adc
sahf
leave
cmp
ljmp
sbb
les
jo
jo
add
ret
mov
out
mov
mov
push
cmpsb
push
push
xchg
or
loop
adc
fiaddl
addb
in
ret
xor
add
fisubs
inc
es
cmpl
sbb
mov
cld
or
insl
add
sub
sbb
mov
in
outsl
mov
sbb
push
out
xor
pop
xor
add
outsl
mov
movsl
insb
push
bound
cmp
clc
pop
add
xchg
notb
ret
cmp
dec
cli
cmp
loopne
push
clflush
xor
fistl
dec
push
mov
push
mov
jg
sub
dec
pop
sti
ja
add
imul
or
mov
mov
aam
or
add
outsl
out
sarl
pop
mov
sub
dec
test
negb
jecxz
inc
pop
cltd
sbb
jo
cmpsl
add
inc
xor
jecxz
adc
jle
cmp
je
mov
lret
push
cmp
jb
add
jp
into
dec
cmp
inc
sub
cvtpi2ps
mov
test
stos
lods
jmp
repz
pop
fs
test
repz
bndldx
lcall
out
jg
incb
ret
mov
mov
jnp
or
rcl
add
fs
and
dec
stos
jge
lods
xchg
or
xor
and
pop
add
xlat
pop
push
xchg
mov
mov
clc
mov
cwtl
mov
pop
shlb
mov
divb
je
jnp
sbb
or
or
jo
out
ret
add
insl
cmpb
push
popa
fsubrl
test
push
xor
into
xor
xor
or
push
test
mov
sti
scas
jp
aad
outsb
sbb
lcall
add
fmuls
bound
mov
int
data16
and
sbb
xor
in
xor
adc
cld
aas
cli
mov
push
and
push
cmc
cmc
jns
and
jg
cld
sbb
insb
mov
adc
or
nop
sub
dec
cld
fisttps
imul
loop
out
add
jno
and
mov
xor
aad
sarb
jnp
aam
adcb
test
aam
dec
cld
ss
fsincos
mov
xor
std
aas
jbe
out
pop
xchg
and
popf
xchg
push
adc
mov
fcoms
pop
inc
ljmp
fisttpl
std
pop
sub
pop
and
push
call
mov
xor
scas
fists
insl
loope
bound
inc
push
mov
adc
mov
cmpb
pop
xchg
imul
cli
outsb
sbb
ficoms
pusha
call
xchg
add
loopne
pop
adc
test
dec
popf
out
rol
or
scas
push
push
pop
or
jo
jae
adcl
xor
dec
ficoml
add
fdivrl
sbb
xor
push
xor
sbb
dec
xchg
je
sbb
nop
xorb
push
and
sub
or
add
ja
mov
mov
test
call
cmpb
inc
mov
mov
sub
fiadds
mov
dec
push
and
mov
fwait
sub
imul
mov
negb
pop
int3
and
fildll
pop
test
fwait
and
iret
or
negb
pop
sub
jle
mov
mov
pop
push
xor
lret
insl
es
push
xor
ja
ss
outsl
lcall
ret
jmp
aas
push
lcall
mov
adcl
cmovno
inc
mov
mov
adc
or
xchg
call
popf
hlt
out
repz
hlt
add
movsl
jmp
mov
adc
inc
mov
mov
xchg
into
stc
inc
aaa
cld
test
sbb
sbb
ret
push
and
cmp
subb
sub
mov
roll
xchg
lcall
mov
adc
mov
scas
mov
push
jne
cmp
mov
mov
push
inc
std
incl
add
mov
fwait
popa
fists
in
add
and
cmp
mov
pop
pop
add
pop
mov
pop
and
mov
adc
daa
dec
lock
out
push
pop
pusha
push
add
fwait
or
sahf
xchg
es
sub
std
xchg
lods
or
mov
jbe
and
mov
jnp
loope
xchg
rcrl
mov
imul
sti
xor
mov
mov
mov
mov
imul
pop
and
jecxz
into
mov
mov
rolb
pop
sbbl
out
dec
mov
aad
or
popf
or
rolb
out
in
aad
ffreep
mov
testl
or
add
or
in
bound
enter
xchg
pop
loop
cmp
pop
rorl
stos
dec
aam
add
add
daa
das
mov
sbb
pushf
inc
data16
or
hlt
sbb
inc
sbb
insb
mov
clc
aas
aam
test
or
sbb
mov
pop
lock
cmp
addb
lahf
sahf
inc
cwtl
rcl
ja
icebp
pop
cli
or
lock
mov
sub
push
movsl
mov
push
subl
shll
mov
ja
xor
in
mov
loop
out
add
mov
sbb
nop
push
xchg
out
inc
jl,pt
ficoml
xlat
cmpl
das
loop
mov
dec
test
push
test
shrb
push
bound
movsb
lcall
pop
jl
xchg
dec
in
xchg
ljmp
lea
stos
out
imul
push
bound
add
push
decb
pop
mov
push
je
xchg
and
test
pop
pop
fildl
bound
or
lret
mov
dec
movsl
fnsave
mov
mov
adc
or
cli
jno
daa
add
xchg
add
rol
cmp
ljmp
mov
xchg
mov
jbe
jl
and
mov
push
cmpsb
xlat
mov
lea
outsl
push
cwtl
sahf
test
gs
adc
sub
lret
xchg
pop
or
mov
cmp
ja
and
jns
push
pop
cmp
dec
std
add
dec
push
xor
inc
ret
sbb
les
loopne
fiadds
add
mov
cli
iret
xchg
in
and
pop
inc
movsb
pop
sbb
decl
cld
add
jle
dec
fmull
out
rep
ja
std
aas
js
cmp
inc
cmp
fnstsw
mov
in
sub
adc
add
cmp
sbb
popa
mov
ja
pop
sbb
ret
roll
ja
fnstsw
mov
sub
cli
push
loop
add
testb
sbb
mov
fisttps
pushf
sahf
dec
addb
mov
push
adc
jl
imul
sub
pop
fwait
es
addb
xchg
pusha
pusha
stc
aaa
mov
lds
xor
dec
hlt
ret
mov
and
add
and
loopne
mov
jle
test
jl
loope
orb
js
xchg
and
inc
xlat
jo
xor
pushf
dec
std
mov
dec
dec
in
xor
jbe
clc
mov
mov
lods
push
jb
in
add
or
das
scas
pop
roll
or
stos
fnsave
movsb
sub
fdivs
jp
dec
sbb
mov
mov
or
lcall
cmp
pop
scas
lea
je
cmpb
cld
jns
jo
fwait
stc
add
xor
sbb
es
fsubrs
movsl
adc
push
ljmp
inc
sub
test
inc
inc
mov
or
or
jns
aad
xchg
mov
mov
mov
push
stos
sahf
sub
sti
add
inc
or
or
inc
jb
and
dec
imul
rcrb
mov
test
sub
in
mov
std
xchg
rol
mov
in
out
ror
js
aaa
insb
les
sbb
pop
stos
pusha
loop
test
call
adc
jmp
mov
lea
mov
aad
das
xchg
push
inc
sbb
out
cmp
push
push
stc
aas
mov
push
mov
jo
jb
adc
clc
adc
cld
icebp
dec
popa
and
push
mov
mov
mov
sub
pop
mov
scas
outsl
incl
inc
jae
mov
in
mov
clc
popa
adc
nop
jnp
lcall
mov
jmp
sbbl
enter
pop
in
pop
push
pop
loop
mov
js
movsb
stos
push
xchg
xchg
mov
xchg
or
fwait
pop
pusha
das
call
or
movsl
mov
test
jmp
add
add
negb
or
sub
sub
add
push
and
cmc
arpl
les
ljmp
and
or
repnz
lock
lock
sbb
inc
das
cs
adc
into
add
sbb
or
lods
pop
inc
adc
push
add
aam
arpl
loope
cli
pop
movsb
cltd
mov
data16
or
jecxz
add
cs
mov
add
xchg
lcall
pop
push
add
movsl
push
jb
jae
cmp
hlt
aaa
in
add
mov
jno
negb
in
or
mov
sub
adc
add
or
or
iret
push
adc
movsb
jns
jp
jecxz,pn
loope
incl
push
adc
cmpl
mov
jl
push
inc
pop
push
in
test
outsb
jle
push
jg
fdivs
fadds
mov
push
fs
enter
ds
xor
xchg
fiaddl
mov
lds
cmp
dec
push
add
out
insl
fadds
fiaddl
hlt
sbb
fistpl
ss
fmuls
out
pop
xchg
out
mov
mov
mov
cmp
adcb
mov
inc
int3
or
cs
mov
dec
or
fwait
mov
lret
push
xor
cld
inc
jg
insl
test
add
orl
mov
cmpb
scas
mov
and
add
mov
fidivl
dec
xor
fists
sub
test
cs
adc
jle
inc
push
cmp
das
addb
inc
lret
sbb
mov
lcall
xchg
mov
call
lods
add
push
add
mov
mov
fndisi(8087
ja
dec
mov
call
lods
fdivl
adc
jne
test
jb
or
jecxz
mov
xor
dec
jbe
pusha
mull
push
push
out
inc
xchg
stc
mov
add
pushf
mov
mov
xor
or
dec
cmp
movsl
jmp
push
scas
pop
je
or
sub
enter
addb
addb
push
imul
jmp
je
dec
jno
dec
mov
int3
ljmp
test
loopne
pop
in
cmp
scas
cwtl
lcall
sti
imul
sbb
hlt
inc
inc
xchg
fcoms
sbb
xlat
pop
loope
inc
scas
pop
subb
mov
das
adc
or
mov
icebp
pop
mov
adc
jle
shrl
std
push
je
add
or
jg
mov
mov
push
rorb
mov
push
xor
hlt
clc
push
xor
inc
pop
jae
cmp
out
movsl
lcall
repnz
addb
push
clc
push
orb
add
es
mov
mov
push
push
cs
sbb
jg
mov
lea
cmp
cs
clc
daa
sub
pop
aaa
jl
inc
xchg
or
mov
mov
test
inc
xchg
movl
cmp
add
addr16
xor
inc
in
pop
mov
repnz
js
mov
je
out
sbb
les
inc
incb
mov
ds
push
adc
push
fwait
jbe
cli
insl
out
add
imul
ret
cld
mov
and
pop
testb
jmp
pop
inc
aad
jp
arpl
outsl
testb
mov
fs
cli
add
xchg
fld1
inc
sub
lods
cs
lds
push
outsb
js
dec
popf
addr16
sahf
mov
ljmp
adc
mov
imul
push
add
into
pop
jg
loope
mulb
mov
mov
push
or
adc
cli
outsl
mov
jmp
pushf
or
jbe
jns
lret
xor
push
and
and
inc
inc
rcr
lea
mov
push
cmpl
push
dec
mov
in
subb
pusha
std
add
mov
jl
mov
push
dec
test
inc
pop
les
aas
int
sub
or
outsb
mov
out
xchg
mov
mov
push
push
test
sbb
adc
and
cmc
xor
dec
int3
mov
xchg
mov
or
ljmp
lods
mov
sub
dec
push
call
jge
add
aaa
cltd
xchg
lcall
pop
pushl
ficoml
add
pop
sub
add
or
add
test
std
inc
stos
jp
xor
mov
add
add
lods
es
mov
incl
dec
push
mov
mov
jae
popa
adc
mov
enter
dec
addb
sbb
daa
lret
sbb
lock
mov
lods
jmp
cli
lods
jb
mov
data16
lahf
sbb
testb
mov
xchg
push
loopne
stc
add
push
fnstcw
out
add
adc
push
inc
sub
add
lahf
popa
cltd
pop
test
cld
in
add
out
incl
rorl
mov
ds
mov
jp
cmc
fucomi
mov
adc
dec
sti
jg
pop
or
mov
mov
fs
cmp
jb
push
push
je
xchg
jp
mov
pushf
cli
test
sbb
jae
jmp
andb
sarb
cmpsb
mov
cmc
push
movsl
sub
out
int3
shlb
outsl
jg
aas
divl
js
jmp
cwtl
inc
rol
mov
add
sarb
mov
xchg
andb
inc
add
cmpsl
sarb
push
inc
adc
cmp
popa
jno
cmp
pop
add
cmp
movsl
mov
pusha
lret
jns
aad
push
and
and
fmuls
sub
jl
mov
jnp
push
mov
subl
mulb
orb
mov
cmp
mov
lahf
test
test
dec
mov
jle
pop
xorl
mov
pop
outsl
fisttps
mov
int3
cmpsb
mov
sbb
jg
imul
sub
shll
adc
subb
dec
lcall
and
xchg
popf
jno
aam
mov
sbb
cli
movsl
mov
out
mov
cmp
and
dec
aam
jbe
inc
cmp
sub
in
lea
inc
sbb
jl
testl
sub
add
lds
fcoms
xor
xor
decb
sbb
push
mov
in
sbb
push
cmpsb
add
hlt
inc
push
jge
movsb
or
sbbb
repnz
cwtl
int
ja
outsl
bound
jo
xchg
adc
adc
clc
push
std
sub
and
pop
jne
or
lock
xchg
nop
jnp
frstor
jb
test
scas
stos
bnd
hlt
pushf
jo
adc
xor
pop
das
push
nop
sbb
mov
push
jmp
and
cwtl
call
scas
sub
loope
aam
nop
jg
push
fdivrs
iret
inc
aam
std
mov
push
loope
dec
lock
jecxz
sahf
push
cmpb
jne
loopne
push
mov
push
mov
adc
in
outsb
add
add
ljmp
or
mov
dec
cs
push
decl
cwtl
mov
call
pop
lret
rcrb
hlt
into
aam
jge
mov
in
lea
insl
cmpsb
pop
std
call
dec
insl
mov
mov
sbb
inc
sbb
pop
sahf
add
sbb
ret
out
popa
sbbb
kunpckbw
push
add
sbb
push
fiadds
das
push
dec
das
and
pop
cmc
unpcklps
cmc
sub
sub
or
push
xorb
mov
add
sub
cmp
negl
nop
cmc
mov
or
mov
mov
cld
mov
pusha
pusha
fstpl
cmp
ret
stos
lcall
adc
mov
sbb
outsl
dec
out
add
movsb
sub
mov
fucomip
mov
cmc
and
jns
dec
mov
icebp
mov
repnz
sbb
lret
lcall
inc
lods
mov
scas
mov
add
cmp
loopne
lock
js
inc
lea
bound
lods
add
or
fistl
push
xchg
or
pop
lcall
test
aaa
popf
rolb
or
pop
cmc
mov
mov
push
ret
xchg
cwtl
add
mov
mov
mov
popf
jne
xchg
cmc
pop
or
in
jo
jl
xchg
pshufw
mov
call
aas
pusha
add
hlt
inc
das
adc
lods
lea
lret
dec
lds
xlat
shl
mov
add
jmp
and
xchg
jle
mov
push
inc
je
scas
jg
push
fcomip
mov
out
rcrl
xor
sti
mov
aas
movsl
or
fstl
add
ret
int3
jne
mov
fists
lcall
push
xchg
mov
mov
mov
dec
jg
fildll
test
imull
rorb
xchg
cltd
xchg
sbb
mov
xor
cmp
repnz
jge
je
aad
lods
xor
roll
xor
xchg
scas
enter
inc
jle
lock
sbb
pmuludq
hlt
mov
les
push
fwait
lea
stos
sub
adcb
jb
inc
outsl
cmp
dec
push
mov
out
push
push
mov
incb
push
daa
mov
les
iret
cld
pop
ret
sub
cmpl
mov
xor
daa
loop
push
shll
add
pop
mov
loopne
out
mov
push
clc
lcall
sahf
push
in
mov
cld
push
sbb
add
pop
lret
lds
mov
ss
and
lods
es
jbe
pop
sub
mov
lods
mov
orb
inc
loop,pt
mov
les
lcall
out
cmpsl
pop
pop
icebp
pavgb
ja
xor
rclb
cli
scas
cli
xor
std
mov
push
mov
add
sbb
mov
xlat
loop
lods
push
add
loopne
lcall
fisubrl
cmp
std
or
adc
rorb
out
pop
je
jg
sahf
lds
push
lret
shl
xchg
jmp
cld
fwait
or
call
stos
xor
cmp
jg
mov
push
pop
or
add
ret
cli
add
rolb
mov
mov
std
popl
stos
dec
cmp
mov
and
jne
mov
and
dec
enter
fwait
pop
add
jl
xchg
push
push
outsl
clc
adcb
adc
xchg
lock
repz
pop
arpl
shlb
incb
cmp
xor
shr
pop
mov
jle
int3
inc
jno
sar
sub
dec
dec
cmp
push
jecxz
xchg
arpl
lcall
add
sub
hlt
mov
mov
xor
inc
pop
pop
sub
orb
lea
ds
js
mov
jnp
mov
sarb
lea
jecxz
mov
mov
or
xchg
sbb
mov
mov
test
cmp
jge
call
dec
mov
jne
cs
movsl
decb
pop
adcb
mov
xchg
mov
lock
mov
mov
daa
insb
add
mov
rcr
aad
loopne
add
add
int
sub
ret
mov
pop
cld
fldt
mov
outsl
decl
lea
or
enter
mov
mov
lret
pop
xor
mov
mov
and
sbb
jle
pushl
mov
pop
gs
xchg
xor
cmp
in
mov
pop
cltd
mov
dec
mov
out
pop
add
pop
shrl
loope
sub
add
xor
and
dec
push
movsb
dec
pop
mov
add
pop
dec
andb
pop
cs
jae
je
jb
push
ret
xor
scas
sub
icebp
sbb
jae
movsl
adc
pop
idivl
mull
jae
hlt
fcompl
sub
push
xor
js
ja
hlt
or
cmp
mov
push
ljmp
lahf
xchg
das
pop
cmp
test
int
dec
shr
inc
mov
loope
lahf
adc
nop
test
sbb
int
pop
jmp
inc
scas
adc
push
push
gs
push
shl
mov
jmp
jl
sub
fcmovnu
rcl
add
xchg
outsl
xor
test
cmpsl
mov
xchg
bnd
lcall
hlt
or
mov
mov
mov
or
stc
test
adc
fwait
cmp
scas
push
mov
jns
or
test
and
out
mov
out
mov
aas
xor
scas
jle
pop
inc
test
push
dec
clc
xchg
inc
mov
pop
sbb
repnz
dec
jecxz
mov
bound
pop
dec
mov
pop
scas
div
jle
aaa
xlat
popf
aam
fbld
push
hlt
or
fisubrl
jle
and
lret
gs
dec
mov
out
xor
mov
aad
pop
les
enter
sub
dec
ret
in
in
and
jecxz
mov
dec
jmp
push
add
push
mov
add
or
je
xor
and
fcmovbe
out
jb
movb
pop
adc
cmp
sub
adc
test
and
bound
dec
cld
xor
push
popf
adc
jb
push
lods
sub
cs
mov
fiadds
jp
mov
test
jg
or
cmp
rcrl
mov
sbb
call
adc
mov
js
scas
sub
out
or
mov
push
cmp
loope
jnp
sbb
dec
leave
fcoml
arpl
dec
leave
dec
cmp
mov
notl
int3
dec
xor
jge
mov
jge
ret
xchg
cld
shlb
add
outsb
fildll
out
sub
cmp
jg
lock
dec
adc
adc
pusha
lahf
push
icebp
filds
mov
int
mov
sub
cmp
jp
imul
lods
mov
push
xchg
scas
mov
pop
or
stos
lods
ja
scas
dec
jg
xchg
pusha
out
mov
out
xchg
sbbl
andl
shll
loope,pt
aas
movb
fadds
mov
xor
add
fs
add
jns
sub
enter
mov
push
dec
push
repnz
jns
sub
mov
inc
push
or
jp
fwait
lret
add
test
lock
mov
jmp
add
xor
cmp
icebp
outsb
mov
jp
test
std
push
dec
dec
pusha
ljmp
call
sbb
pop
dec
mov
adc
andl
dec
push
imul
pop
mov
jb
push
jle
inc
subb
mov
xchg
jp
aas
cmp
fmull
ret
and
jecxz
inc
std
imul
pop
fists
xchg
or
jle
add
jno
sub
in
push
xchg
mov
fcos
sub
add
aam
lock
clc
aam
stc
mov
scas
scas
sub
cli
shlb
adc
dec
and
les
cmc
pop
push
aas
sub
cltd
pop
fmull
xchg
add
pop
loope
lds
imul
in
push
mov
aam
in
stos
add
addb
cli
aaa
dec
inc
cmp
fnstsw
dec
push
pusha
inc
stos
jl
push
mov
pop
loope
mov
cmc
negb
jl
inc
pusha
lods
fwait
lds
mov
into
lds
scas
stos
xchg
dec
sahf
cld
lret
outsb
mov
xchg
sub
test
in
loopne
lods
cmpsb
scas
jecxz
push
fadds
gs
bndldx
mov
call
cli
dec
adc
mov
dec
mov
sbb
andb
icebp
negb
mov
inc
add
add
insl
and
enter
adc
scas
sbb
sbb
ljmp
mov
xor
call
jnp
hlt
popf
cli
incl
mov
sub
cs
push
push
test
negl
std
test
pop
test
or
shrl
pop
test
dec
jecxz
aam
mov
push
inc
or
mov
repz
nop
pop
pop
push
xor
push
jl
hlt
int3
in
and
push
fstpl
xor
push
push
xor
and
add
fsubs
test
push
test
fwait
dec
adc
dec
jmp
je
cmpsb
mov
cmc
pop
dec
or
leave
jmp
sub
push
loopne
rolb
iret
xor
cmpsl
xor
iret
and
mov
cmp
add
add
lea
push
adc
mov
jmpw
adc
add
mov
enter
pop
push
cmp
cmp
or
das
adc
mov
push
mov
push
and
insb
cmp
adc
ds
sbbb
push
cmp
inc
mov
xchg
jle
mov
fsubl
pop
dec
pop
sar
fsubr
hlt
pop
cld
aaa
pop
and
jl
mov
outsl
push
xor
mov
das
push
ficompl
xor
int3
push
cltd
mov
je
lods
aaa
pop
cmc
mov
psrld
lock
mov
jmp
mov
movsb
inc
rcrb
add
lret
inc
std
cmpb
or
scas
pop
sub
bound
int3
push
into
cmp
mov
sbb
out
cli
enter
lcall
mov
mov
rcll
pop
xchg
mov
dec
popa
cmp
sbb
xor
pushf
ret
push
cmp
mov
xchg
aas
adc
fistpll
mov
loop
jl
jb
adc
pop
jg
pop
add
push
pop
out
in
loopne
clc
or
daa
pop
jbe
push
js
hlt
test
xor
add
pusha
jecxz
xchg
push
add
push
push
jg
mov
mov
inc
lcall
sbb
ljmp
test
mov
xchg
push
mov
add
cmp
mov
mov
les
pushf
lods
sub
outsl
out
js
sbb
data16
push
inc
arpl
xor
decb
or
in
outsb
mov
sub
stos
roll
aam
sub
pusha
int3
cs
fsub
cmp
and
push
adc
repz
push
sbb
add
pop
addl
sbb
or
or
push
xchg
add
aas
mov
jg
aam
inc
int3
push
pop
mov
mov
xor
dec
pop
outsb
and
mov
data16
and
mov
mov
jb
data16
and
test
mov
or
jge
ret
stos
inc
xchg
add
fwait
arpl
mov
clc
mov
or
sbbb
add
mov
xchg
adc
sbb
fsubl
add
mov
jg
clc
cmp
pop
lcall
jmp
das
bound
cmpsl
in
pop
mov
push
subl
sub
push
mov
jb
sbb
mov
pop
adc
add
sbb
dec
mov
mov
movsb
inc
pop
jne
and
add
pop
fs
mov
clc
push
sub
ret
nop
add
and
daa
jmp
hlt
mov
jnp
hlt
lret
ret
call
fcmovnb
adc
mov
xorb
loopne
pop
jg
cmp
push
jns
test
xor
movsl
cmpl
fdivrl
pop
push
loop
push
lods
dec
lods
sbb
filds
sub
and
loopne
sub
or
rorl
inc
std
inc
aad
mov
inc
stos
lahf
scas
bound
ret
clc
sbb
jp
mov
xchg
adc
inc
call
jns
test
mov
cmc
clc
mov
push
out
jmp
sub
stos
xchg
mov
ss
add
inc
inc
lret
add
push
movsb
pop
cmp
add
stc
xchg
inc
pop
mov
pop
push
pusha
mov
push
push
aam
ljmp
fucomi
pop
add
aas
push
mulb
jno
addl
xchg
nop
leave
jmp
scas
push
cmp
xor
loop
and
pop
adc
xchg
dec
fld1
cli
dec
push
sbb
fldl
or
adc
xor
imul
fmul
or
pushl
mov
push
adc
shl
mov
call
sbbb
push
xor
sbb
dec
push
or
pop
pop
inc
clc
test
pushl
xor
sbb
sbb
repz
lods
aaa
lret
jo
jmp
sub
dec
push
fdecstp
xchg
add
shlb
fwait
nop
and
push
mov
and
inc
test
cs
lret
jle
sti
fildll
jl
sbb
cmp
push
jle
pop
stos
sub
add
pop
jle
mov
hlt
out
cmp
adc
jmp
mov
ja
das
push
shll
es
sub
xchg
outsl
fstpt
orl
dec
repz
dec
nop
in
push
jmp
inc
push
cltd
outsb
add
incb
cmp
repz
jl
pop
jp
mov
inc
mov
fdivs
sti
or
inc
adc
shlb
pop
push
inc
cs
scas
sbb
stos
add
scas
std
sub
adc
cmp
popa
lds
outsb
mov
enter
dec
xchg
pop
xchg
fiadds
mov
push
scas
loop
int
in
fs
sub
hlt
add
push
adc
lock
xchg
outsb
sub
adc
push
in
clc
mov
and
insb
push
insb
je
fnstenv
push
pop
mov
cmp
jb
pop
incl
icebp
scas
cmpsb
mov
dec
idivb
mov
cmc
scas
push
icebp
sbbl
inc
aad
pusha
jp
les
sti
xchg
fidivrs
orb
mov
mov
test
adc
pop
pop
dec
rcl
cmc
xchg
pop
cld
pop
cmp
push
dec
add
es
mov
mov
shlb
out
loope
sbb
xor
cmp
jge
sarb
or
push
add
je
sbb
mov
push
sub
push
push
push
jp
cmpsb
xchg
and
and
pop
cli
aaa
push
mov
mov
mov
sbb
adc
es
sbb
fmull
cld
jle
mov
cld
inc
ret
clc
insl
sub
mov
addl
jne
jb
adc
mov
jbe
xor
mov
adc
adc
push
sti
dec
inc
pop
inc
cmc
shl
in
sahf
add
sub
add
and
fists
cltd
add
sub
popa
mov
mov
and
out
ret
fnstenv
rorl
cmp
or
out
mov
dec
loope
fisttpl
or
mov
fldenv
loop
inc
adc
stos
stos
inc
push
cld
sub
pop
aad
xchg
pop
hlt
pop
arpl
adc
and
push
cld
pop
pusha
cmc
ss
or
repnz
cmp
dec
add
add
call
push
push
xor
pop
sbb
in
add
hlt
inc
fmuls
bound
inc
pop
push
in
pop
test
out
xor
out
aad
les
ret
inc
pop
sbbb
mov
fidivs
pop
push
outsl
dec
mulb
in
sub
xchg
cmp
push
ljmp
repnz
add
cmp
push
cmp
inc
sahf
jecxz
mov
ljmp
sbb
mov
sub
xor
pop
jb
nop
dec
sbb
sub
sbb
fptan
xchg
mov
mov
stc
inc
clc
jle
jbe
jp
sub
and
outsl
pusha
xchg
sbb
jl
out
mov
lret
push
cmc
mov
scas
jl
sub
shrb
es
out
lea
push
xchg
push
dec
sub
jle
les
fs
add
out
push
icebp
flds
dec
or
popa
rolb
push
sub
mov
sub
call
jecxz
mov
aad
xor
xchg
sahf
mov
mov
mov
or
pop
test
pmuludq
hlt
mov
mov
rolb
mov
es
xchg
cmp
jbe
dec
xor
mov
and
jg
xor
push
add
int3
adc
jo
pop
sbb
repz
xchg
xchg
adc
inc
jl
nop
inc
call
jg
hlt
jl,pn
jle
mov
push
hlt
aaa
pop
dec
adc
xchg
pop
bsr
xlat
adc
mov
rolb
xchg
inc
push
or
or
negb
int3
pop
rcrb
push
or
jge
or
xor
arpl
xchg
mov
rolb
pop
xchg
inc
inc
push
mov
mov
or
out
cli
mov
insb
lret
fs
mov
jnp
and
data16
inc
loopne
pop
test
fists
ss
add
rol
pushaw
add
lcall
fdivrs
xchg
das
out
jns
rcl
mov
inc
push
push
add
or
negb
xchg
push
in
push
into
cmpsb
or
sub
js
jl
jne
lcall
pop
je
repnz
and
mov
push
ret
fistps
mov
lret
cmp
and
xchg
sub
mov
add
adc
filds
push
andl
jmp
sub
adc
js
enter
shll
dec
adc
jp
shrb
adc
mov
ret
mov
addb
dec
mov
mov
fs
pop
mov
test
ss
inc
mov
inc
dec
mov
loop
aam
pop
test
movsl
mov
cli
sbb
scas
cld
inc
in
lret
pushl
mov
enter
outsb
and
lahf
stos
mov
cmpsl
lea
frstor
push
out
push
push
xchg
test
js
mov
insb
push
jge
xlat
out
inc
sbb
bound
in
outsb
adc
adc
lock
mov
sub
or
fcomi
je
loopne
cwtl
out
sub
push
dec
mov
mov
pop
js
and
ficoms
jp
adc
mov
imul
push
push
mov
pop
mov
sbb
or
sbb
inc
je
mov
scas
ljmp
dec
ljmp
sahf
mov
lods
andl
cmpsb
lds
lds
sbb
lret
xlat
loop
push
je
test
xor
xchg
jb
fidivl
mov
enter
arpl
mov
mov
mov
gs
jnp
adc
or
inc
cmp
aam
repz
mov
leave
or
sub
sub
add
movsb
pcmpgtw
ret
popa
add
lods
and
or
insb
shrl
iret
mov
mov
mov
roll
push
xchg
push
cli
cmp
sbb
cmp
mov
insl
fsubrp
je
nop
test
shrl
mov
add
sbb
scas
rorl
aas
icebp
add
pop
xor
dec
jg
pop
ret
bound
ljmp
movsl
or
xchg
xor
xchg
dec
jl
inc
lods
fistpll
xchg
push
lock
xchg
sbb
pushf
dec
sub
div
or
cmovg
jg
push
cmp
ja
test
es
push
mov
push
push
push
mov
sub
out
mov
xchg
mov
inc
in
adc
xlat
mov
mov
and
fnstenv
jle
xor
pusha
sub
mov
test
popa
rorb
in
stc
enter
add
into
add
and
xor
xchg
shll
sbb
mov
jo
shll
sub
pushf
pop
mov
pop
cmpsb
dec
inc
shlb
testl
jae
sbb
and
ds
enter
movsl
push
cmpsl
shl
les
jmp
jp
mov
push
imul
enter
mov
inc
ret
add
ret
xchg
enter
jb
xor
cli
fstps
inc
lahf
test
jle
push
pop
xorl
clc
jge
mov
pushf
and
pop
ja
dec
lahf
setp
notb
and
aad
pop
nop
js
fdivs
test
ret
jno
dec
xchg
and
jbe
pop
xlat
jg
xchg
pop
cmp
cld
out
xor
ljmp
std
ficoms
imul
loop
into
sub
cmpsb
pop
out
mov
inc
adc
adc
add
jp
insl
das
aam
and
hlt
pop
pop
jp
jbe
inc
imul
jle
cmp
cmp
mov
or
cld
dec
mov
mov
outsb
sahf
xchg
dec
sbb
inc
sub
push
jp
mov
into
inc
vfnmsub132sd
repnz
lahf
cmp
mov
inc
wbinvd
out
push
add
int3
jnp
adc
xchg
bound
dec
xchg
cmp
fcompl
divl
dec
xor
add
jp
mov
imul
lcall
pop
hlt
jae
stos
inc
cmp
push
xor
sbb
aaa
mov
mov
out
inc
repz
or
fucom
rorl
fdivr
inc
mov
ljmp
or
dec
mov
inc
mov
xor
dec
mov
out
adc
adc
sub
or
les
sbb
xchg
sbb
pusha
data16
lock
inc
fcoms
mov
cwtl
enter
jmp
sbb
rolb
add
mov
aam
xchg
jg
test
mov
cmpsb
pop
std
cmp
jb
fisttpll
push
ficompl
loop
lock
xchg
pop
out
sbb
xchg
out
jg
or
mov
lock
int3
cmpl
out
sahf
and
es
aad
push
mov
add
dec
sahf
scas
cmp
adc
ret
add
imulb
loopne
and
or
addb
rol
sub
test
sub
xchg
mov
dec
fucomip
int
divl
in
add
insl
popf
addb
cmp
sbb
mov
out
rolb
xor
mov
pop
out
cmc
out
rorb
adc
loop
insb
jne
pop
mov
add
and
sbb
sbbb
lcall
xchg
jb
aad
jecxz
ret
dec
iret
adcl
cmpsb
je
out
ljmp
adc
inc
lds
movsl
push
aas
bound
or
enter
jbe
clc
jbe
inc
cmpsl
inc
dec
add
add
or
dec
cli
jmp
lret
scas
mov
mov
stc
push
cmpl
push
adc
insb
ret
sarl
mov
cmpsb
or
insb
insl
jne
or
cmpsl
xor
pop
adc
lds
jle
ljmp
dec
push
das
mov
inc
add
pusha
jl
out
or
in
fwait
clc
or
ja
rorl
xchg
into
int
jae
pop
mov
shrl
add
or
fisttpll
jge
and
pop
inc
inc
mov
ja
push
cmp
push
jnp
mov
js
into
jb
lock
cld
pushf
or
test
lret
lods
mov
lock
sub
jnp
or
or
out
cmc
lds
mov
mov
aam
js
std
mov
lds
pop
add
push
cld
push
icebp
sbb
push
xor
pop
imul
into
adc
or
pop
js
jcxz
fidivs
adc
imul
push
pop
cmp
loop
mov
or
fnstcw
inc
sub
push
jnp
adc
lret
add
inc
and
shlb
loope
hlt
sub
test
pop
mov
ficoml
dec
aam
or
mov
lds
scas
les
in
fcomps
jl
sub
fmuls
jmp
jle
dec
and
jno
mov
mov
lods
pop
xchg
adc
inc
mov
adc
fisttps
fsubr
aad
jae
data16
mov
xor
push
adc
dec
or
mov
or
or
xchg
imul
add
movsb
rolb
mov
les
cs
in
loop
lret
jecxz
inc
shr
fists
test
jl
or
rcrb
sahf
push
cs
scas
call
inc
adc
dec
mov
ret
ficoml
stos
sub
mov
mov
mov
cmpsb
push
stos
sbb
push
lcall
push
push
repz
ret
push
dec
insb
fsubp
aaa
add
clc
lahf
xor
jo
xor
clc
push
scas
dec
clc
jns
xor
enter
adc
out
and
push
cmp
cmpsb
dec
cwtl
xor
add
bound
jge
xchg
push
iret
stos
stos
push
or
addl
jle
cmp
pusha
or
jmp
adc
xor
push
mov
dec
cwtl
xchg
mov
jg
add
mov
insb
les
cmp
repnz
mov
mov
pop
cmc
shrb
push
dec
pop
add
andb
push
mov
fdivr
pop
or
maxps
inc
pop
aaa
inc
cmpsl
loope
mov
inc
pop
fidivs
xor
btcl
je
add
and
mov
xor
push
add
pop
mov
or
test
std
xchg
adc
dec
pop
mov
pop
lods
add
negb
imull
or
push
mov
ds
fsubs
inc
sub
seta
sbb
rclb
int3
insb
adc
sbb
pop
cmpsl
mov
mov
fisubl
inc
adcb
aas
nop
inc
aas
or
outsb
into
dec
sub
hlt
int3
sbb
clc
in
repz
cwtl
push
push
mov
add
inc
subl
jns
or
popa
sbb
push
mov
mov
out
and
add
out
fistpll
shlb
pop
je
fidivrs
ret
xlat
push
cmp
movb
int3
fidivrl
cli
mov
add
out
or
add
jle
insb
js
out
mov
rcll
ss
rcrb
add
mov
fwait
xor
pop
cmp
test
or
push
mov
xchg
add
adc
arpl
mov
xor
sbb
push
enter
cmp
fdivs
push
mov
mov
outsl
push
ds
add
and
cmp
ds
inc
aad
inc
push
into
sub
in
out
cmp
push
mov
scas
push
rolb
and
dec
adc
idivl
xor
das
arpl
and
dec
xlat
ret
xchg
call
push
icebp
push
sub
adc
test
rcr
push
and
daa
mov
inc
loopne
dec
pop
pop
mov
icebp
mov
inc
fcompp
push
sub
add
sub
loop
mov
ret
outsl
rorl
mov
test
dec
inc
or
push
add
pop
les
into
push
adc
popf
sub
push
push
push
push
lock
faddp
fists
pop
pop
test
dec
push
pop
loopne
push
pop
pop
test
pop
pop
ret
inc
mov
sahf
cmp
sahf
stos
pminsw
and
jnp
ds
jp
test
or
mov
xor
add
dec
add
fnstsw
mov
aad
je
fwait
movsl
xchg
aad
xor
mov
icebp
jo
xor
ret
das
mov
pop
push
adc
sub
push
into
push
stos
rol
adc
mov
test
enter
insb
es
mov
pop
iret
mov
into
adc
fwait
or
fimull
imul
inc
push
xchg
pop
nop
xor
push
xchg
add
adc
pop
push
repnz
sbb
clc
xor
in
test
or
push
js
popf
pushf
sub
stos
sub
stc
jmp
mov
test
leave
sub
lock
mov
pop
lea
ljmp
xchg
add
cmp
aas
punpckhbw
ja
mov
into
inc
jecxz
ret
loope
stos
or
rolb
loopne
push
add
xchg
js
arpl
aaa
ret
fisttpll
fistpll
mov
mov
icebp
pop
push
cmp
xor
lret
pushf
out
xor
mov
outsb
sub
pop
std
movsb
stc
adc
lods
or
scas
jae
shlb
xchg
cmp
dec
cmp
xchg
inc
cmpsb
rcrl
xor
xorl
jp
push
sahf
js
add
popf
mov
ret
jmp
xchg
jmp
cld
test
call
mov
jl
xchg
jle
je
inc
mov
and
fs
outsl
out
arpl
lods
mov
cmp
cmp
sbb
xor
outsb
insl
pusha
mov
xchg
push
inc
lock
pop
ffreep
les
mov
ret
roll
jo
add
mov
cmovs
mov
call
mov
push
cmp
xchg
ss
cs
lret
pop
push
mov
push
add
dec
clc
add
arpl
xor
out
mov
ljmp
test
je
int3
rcrl
outsb
and
dec
sbb
mov
loope
mov
shrb
xchg
in
add
or
push
or
xor
and
and
fdiv
push
jp
stos
adc
and
test
ret
cmp
xor
rorl
fistpll
sbb
ljmp
push
fcmovnu
aad
dec
negl
clc
and
add
inc
dec
or
dec
jne
jns
dec
mov
push
xor
les
lds
loop
push
rcr
das
sbb
jle
push
int
push
je
popf
pop
xchg
pop
fcmovbe
dec
es
mov
xor
mov
mov
pop
lock
call
mov
ja
mov
pop
mov
adc
inc
loopw
pushf
rolb
xor
ret
or
sub
loope
pop
sbb
dec
les
lea
outsb
lock
out
scas
mov
adc
mov
sbb
adcb
adc
dec
mov
repnz
mov
jge
fistps
cmpsb
inc
cmpsb
movsb
aas
cmp
hlt
int3
testl
pusha
cs
mov
pop
pop
add
inc
mov
inc
pop
inc
inc
in
cmp
mov
pusha
cmp
das
adc
add
mov
push
mov
mov
insb
pop
push
rclb
ljmp
push
push
push
jbe
push
xor
push
leave
pop
jg
rol
mov
inc
pop
popa
jecxz
dec
std
cmpsb
cmp
push
and
ja
jbe
sti
mov
mov
jno
in
dec
jl
ror
push
aaa
sbb
inc
pop
hlt
adc
repnz
pop
clc
sahf
push
ret
push
sub
lea
mov
cwtl
in
xor
pop
pop
jp
cmp
fstpl
xchg
xor
fadds
sbb
and
mov
ret
stos
movsb
adc
sbbl
or
fstpt
jae
and
inc
inc
out
aad
xor
adc
push
ss
dec
imul
xchg
inc
mov
into
in
dec
stc
jmp
out
sub
mov
popa
jmp
mov
and
movsl
lods
mov
dec
aam
push
andl
shll
push
adc
push
stc
cwtl
arpl
mov
dec
icebp
and
cli
cltd
es
and
dec
xor
dec
jg
cmp
in
push
add
xchg
stos
adc
push
mov
cli
jp
in
loope
bound
ljmp
push
sti
cmc
mov
add
sub
stc
sbbl
shl
fimull
rolb
mov
loopne
insb
lfs
push
mov
xchg
loop
mov
dec
sub
loope
das
std
inc
fwait
jno
jbe
xchg
add
sub
in
in
pop
clc
out
outsb
xchg
xchg
sub
jo
call
vminpd
hlt
and
lock
inc
and
xchg
pop
cmp
test
or
pop
or
xchg
sbb
sti
adc
loop
sbb
pushl
ljmp
jno
sahf
adc
push
lahf
sbb
pop
into
clc
xchg
add
inc
loopne
bound
aaa
int
mov
dec
out
lret
add
stos
dec
sar
or
push
add
iret
scas
testb
cld
aam
cli
das
aam
cmpsl
jo
int
lock
sub
hlt
mov
or
push
jl
cli
cmp
int
ret
cs
les
adc
test
rcrl
std
mov
pop
outsl
dec
add
setne
data16
push
xlat
jns
xchg
add
and
jnp
scas
sub
cltd
or
jne
pop
mov
mov
cmpsl
fldcw
xchg
and
stos
cmp
push
mull
and
xor
sbb
lock
jl
sub
icebp
jmp
jge
repnz
and
out
push
lret
ret
stos
mov
in
nop
lods
pop
mov
shl
cld
loope
push
fldt
xor
push
in
cwtl
cs
arpl
xchg
mov
cld
add
pop
imul
pusha
lahf
push
les
sub
mov
popa
adc
call
sahf
xchg
inc
jl
xor
pop
mov
mov
or
stos
cmp
push
loop
mov
pop
cld
test
iret
adc
xchg
mov
jge
xchg
sub
imul
shl
mov
inc
lea
mov
lcall
jbe
faddl
jo
data16
clc
dec
clc
dec
add
xor
cmpb
sti
aas
aad
addr16
mov
inc
xor
xchg
ret
mov
mov
cs
scas
cs
xchg
push
push
aaa
nop
imul
and
add
xor
sub
jle
rorb
pop
sub
testl
clc
pop
xor
pop
jecxz
and
sbb
sbb
lea
push
les
mov
adc
pop
cs
nop
rcl
inc
push
insl
addr16
stos
push
sti
inc
inc
stos
pop
clc
aad
add
fldenv
xchg
aas
fdivp
xlat
icebp
mov
push
out
sbb
mov
pop
mov
lods
cwtl
sti
xor
xchg
or
ds
pusha
add
adc
dec
popa
aas
mov
loope
subb
xchg
pop
or
inc
pusha
add
dec
cmp
or
pop
movsb
mov
inc
xchg
mov
mov
movb
cmp
mov
imul
push
cmp
pop
cmp
nop
pop
mov
pop
inc
int3
xor
pop
sub
loope
into
push
mov
loopne
add
or
int3
push
cli
iret
cmp
and
mov
xchg
rclb
ljmp
cmp
lods
scas
mov
push
or
or
inc
jnp
fistl
mov
and
lcall
or
sti
jmp
fmuls
add
pop
jle
pop
jno
cmpb
dec
in
xchg
cmp
rolb
lods
or
out
pop
cmp
mov
decb
int3
sarb
or
lcall
mov
js
cmp
adc
int3
sbb
adc
push
pusha
and
adc
jp
lock
imul
or
repnz
push
mov
addr16
sub
xlat
pop
jecxz
sub
scas
lea
and
testl
lcall
xor
jnp
mov
push
jne
jns
add
aam
popa
add
pop
mov
outsb
and
pop
xchg
inc
clc
inc
adc
sbb
mov
xorb
inc
sbb
or
mov
inc
test
jno
jmp
pop
xor
repz
sub
push
mov
out
rcll
mov
push
ficoms
jp
jp
dec
xchg
jns
jp
xor
adc
fcomp
cld
lcall
sbb
imul
sti
mov
insb
mov
mov
jl
or
sbb
loope
or
push
inc
outsb
ficomps
out
dec
add
adc
aam
add
sub
iret
mov
cwtl
and
cwtl
lock
paddusb
enter
push
xchg
cmp
cmpsb
inc
mov
dec
adc
push
hlt
insl
or
loopne
xor
leave
test
sub
ss
add
jmp
mov
add
je
or
lock
sub
jno
scas
xchg
call
test
addl
jp
insb
jnp
jo
ret
movsl
mov
jne
sbb
mov
mov
push
das
mov
mov
adc
dec
fsubs
iret
push
out
push
shrb
shr
jle
xchg
idiv
sbb
push
inc
jb
arpl
jae
dec
scas
bound
push
imul
add
cmc
pop
or
lcall
add
mov
mov
lahf
movsl
adc
aam
lret
pushf
mov
cs
mov
sahf
out
mov
adcb
sbb
mov
lods
xor
popa
add
push
mov
inc
into
mov
inc
xor
test
into
mov
scas
push
jp
cld
cmpsl
js
adc
add
cmp
daa
dec
mov
cs
push
or
push
mov
or
adc
push
pop
lock
sbb
add
roll
mov
mov
push
xlat
sub
add
outsb
orl
in
mov
loop
gs
jge
icebp
jp
jle
jb
test
je
sarb
sbb
push
or
xor
xor
mov
mov
dec
xchg
dec
mov
sbb
pusha
mov
inc
jp
push
clc
xor
xchg
inc
lock
push
std
pop
fisubl
or
hlt
and
and
push
pusha
sub
dec
aam
sub
mov
push
lods
push
and
test
xchg
cmpb
push
orl
pop
popa
sbb
rol
inc
adc
lock
lret
pop
mov
in
xchg
dec
xchg
mov
stos
call
std
cli
rclb
inc
loop
out
loopne
push
xor
xor
movsb
pushf
inc
push
xchg
add
push
lds
inc
es
inc
mov
jne
and
pop
push
stos
fldcw
hlt
imul
montmul
cmpsb
add
pop
mov
ret
pop
cmp
xor
push
std
jo
ja
lcall
inc
jp
pop
jnp
mov
lds
rorl
shll
cs
jmp
test
outsb
add
scas
test
xchg
lods
call
cmp
push
mov
mov
test
ss
sub
pop
insb
mov
add
mov
rol
pop
je
sub
add
xchg
test
and
in
add
pop
ret
outsb
push
mov
fbstp
jle
and
add
add
add
cmp
lret
aas
aaa
push
add
cmpsl
xor
mov
xchg
jae
add
orb
imul
sbbl
pop
adc
sti
cmp
add
add
js
adc
aaa
dec
mov
pop
loope
fimuls
xor
xchg
outsl
cmpl
adc
bound
jbe
lea
jg
jecxz
jnp
out
sbb
rcll
dec
cmpsl
mov
hlt
xor
sti
test
aad
movsb
jno
and
std
icebp
lock
mov
cmp
out
and
jmp
and
popa
icebp
hlt
mov
out
dec
dec
inc
out
cmp
movsl
pop
pop
mov
push
jmp
push
sbb
pushl
sub
add
les
pop
sbb
jmp
ret
mov
sbb
ljmp
mov
outsb
pop
fwait
movsb
jns
inc
arpl
out
data16
sub
cmp
mov
add
in
mov
jbe
mov
movl
xchg
xchg
pop
or
push
outsl
and
add
in
daa
and
sbb
out
mov
jmp
test
mov
clc
sbb
data16
mov
js
mov
add
jae
cmp
sub
push
popa
out
je
cmp
lock
lahf
shlb
and
data16
adc
scas
mov
andb
sahf
shll
out
inc
pop
push
and
scas
insb
pinsrw
jno
xchg
icebp
roll
adc
cmpl
cltd
push
push
mov
xor
fimuls
jge
cli
fld
sbb
dec
ret
push
inc
repnz
das
or
hlt
sbb
enter
lods
fbstp
cmp
stos
nop
mov
mov
or
jnp
out
mov
bound
and
decb
sahf
adcb
mov
andl
pop
jg
rcrb
xchg
jns
scas
repz
push
enter
js
fcompl
not
jns
lock
sbb
loope
push
push
pop
cmp
adc
arpl
pushf
adcb
jno
insl
sub
adc
dec
and
notl
test
insb
scas
mov
pop
dec
ret
pop
inc
inc
ljmp
sbb
orb
cmp
ss
jmp
sbbb
dec
cld
jmp
aad
xchg
mov
push
mov
inc
sub
mov
dec
inc
xchg
clc
out
imul
les
pandn
inc
or
and
jle
cwtl
imul
sti
loopne
dec
fs
mov
or
or
inc
xchg
test
pop
ljmp
mov
sub
mov
data16
cmp
dec
sbbb
and
stos
jge
mov
mov
bound
and
sub
mov
xchg
insl
scas
sahf
xchg
in
push
rcll
pusha
rorl
aas
fisubrl
or
cmp
sub
gs
pop
lret
cmpsl
cltd
push
stos
dec
icebp
adcl
xchg
jle
lgs
cmp
loopne
stc
pop
dec
or
mov
xchg
xchg
ds
xchg
jb
js
lds
out
sub
xchg
in
insb
icebp
push
lock
and
fcom
pop
imul
dec
xchg
int
cli
clc
icebp
xchg
imul
jle
out
outsl
sbb
fbstp
mov
add
and
nop
xor
test
pop
pusha
cld
call
jle
mov
hlt
inc
call
mov
ret
pusha
jp
pusha
cmpb
cld
pop
xchg
mov
lods
shrl
sbb
lds
sbbb
lahf
add
loopne
in
rol
cmp
ret
sbb
push
fwait
pop
mov
jae
stc
or
or
data16
xor
xlat
pop
fs
repz
mov
or
dec
or
test
mov
pusha
cs
push
push
insb
or
ljmp
icebp
jae
stc
ss
sbb
pop
or
push
inc
add
icebp
rorb
shrb
clc
dec
repnz
loope
xchg
hlt
nop
hlt
push
daa
sahf
cmc
mov
lahf
test
ljmp
push
cmp
push
lods
imulb
inc
sbb
xor
mov
mov
scas
xchg
cltd
daa
cli
lock
mov
daa
cmp
lods
loope
sti
and
push
incb
push
insl
fwait
pushf
in
cmpsl
sbb
inc
loopne
inc
popa
pusha
add
es
je
lock
cmp
adc
xchg
jnp
mov
push
dec
lea
xor
mov
adcb
push
or
xchg
mov
lcall
aad
stc
and
popl
jge
or
das
pop
adc
popl
sarl
fsubr
fisttpll
push
push
pop
mov
adc
loope
adc
loopne
jne
es
jle
jecxz
mov
je
clc
xchg
ja
ret
inc
sub
dec
jge
jns
mov
jo
nop
push
push
add
ds
push
and
pop
aam
and
sbb
jbe
testb
in
imul
pushf
inc
xor
xchg
cmc
add
cmp
and
lock
lea
scas
movsb
adc
push
in
xchg
daa
clc
or
data16
insl
jl
cli
add
out
mov
ljmp
data16
fwait
push
and
sti
lcall
mov
ds
ficomps
mov
and
aas
dec
cmp
jne
adc
test
or
test
cmpsb
ljmp
mov
inc
and
fcmovb
mov
pusha
out
inc
mov
xchg
or
inc
pop
add
and
in
pop
pop
jnp
dec
and
ret
subl
jb
cmp
xor
mov
and
push
idiv
mov
pop
jle
loopne
daa
push
sub
sahf
shrb
mov
ljmp
mov
imul
adc
in
inc
adc
xchg
mov
jecxz
call
out
jbe
add
mov
out
mov
cli
pop
or
push
mov
sub
cmpsl
incb
data16
and
shl
test
rcll
jg
inc
popf
popa
inc
rcrw
pop
int
lret
pushf
mov
jne
sub
sub
dec
cld
sub
movsl
fninit
fldcw
mov
xlat
rcrl
jo
incb
or
push
sbb
int3
add
cmpsl
push
and
daa
sub
jmp
in
xchg
repnz
dec
ficoml
lret
pop
lock
cmp
aaa
and
repz
add
or
insb
into
testb
xlat
xchg
testb
jbe
movsl
inc
cmovs
test
fistps
nop
push
das
lock
pusha
stos
loopne
dec
mov
add
sahf
jle
push
inc
cmp
inc
xchg
add
fstl
out
jbe
outsl
xlat
mov
jecxz
mov
push
mov
ljmp
sbb
jp
data16
cmp
mov
subl
es
fildll
xchg
dec
rolb
rcr
out
xchg
or
cld
mov
jmp
je
push
push
adc
xchg
pushf
inc
outsl
movsb
pop
mov
pushf
mov
dec
bsf
inc
iret
adc
sbb
scas
shrb
adc
cmp
out
je
mov
aam
test
dec
mov
xor
fwait
lcall
sub
inc
cmpsl
scas
mov
xchg
push
enter
shlb
mov
jp
push
div
cmp
in
subl
test
sbb
cmpl
mov
mov
dec
ret
lcall
sub
movsb
mov
out
pop
xor
jp
cmp
cmpsl
lea
mov
cs
mov
pop
shlb
inc
insl
jno
hlt
enter
dec
jo
sub
sub
scas
dec
pop
je
andl
bound
push
inc
rorb
out
mov
in
mov
xchg
daa
add
dec
out
xchg
jo
test
mov
lock
push
ss
adc
int3
bound
jb
xor
pop
inc
lods
pop
xchg
lret
pop
cmp
clc
sbb
adc
imul
mov
call
sbb
xor
cwtl
push
push
jno
loope
scas
push
clc
xchg
xorb
sbbl
outsl
xchg
daa
mov
push
js
pusha
sub
push
mov
push
mov
cmp
sub
clc
adc
cltd
push
adcl
iret
mov
jbe
clc
adc
shlb
jae
inc
or
and
test
in
cmp
loop
mov
sub
fs
cmc
xor
xchg
inc
mov
popf
mov
fcom
push
add
jecxz
in
sub
imul
sti
xchg
data16
stos
mov
aas
cmc
push
shlb
cwtl
sbb
icebp
cmp
subl
test
sar
insb
test
loopne
push
test
cmpsb
jbe
aad
jle
xor
test
ja
inc
mov
jl
cmp
les
mov
fwait
lea
shr
lea
pop
push
cmp
cmpxchg
sbb
add
test
sub
sbb
adc
scas
push
test
loope
ret
lahf
ret
bound
lods
outsl
adc
imul
shrb
jno
adc
mov
push
das
dec
shl
ror
sbb
xchg
jg
add
pop
pop
jg
cmpsb
mov
mov
into
push
jno
shrl
inc
add
fistpl
jmp
sarb
xlat
xchg
mov
inc
loope
pop
push
jno
lret
dec
push
push
cld
xchg
xor
scas
mov
pcmpeqb
scas
decb
sti
push
cmpsb
loop
js
mov
mov
stc
js
lods
scas
push
stos
dec
push
push
aam
inc
js
outsl
jne
das
lret
xchg
adc
out
sbb
outsl
cmp
pop
adc
sub
pop
jg
inc
idivl
cs
mov
cmc
sbb
cwtl
mov
sbb
sbb
jg
jle
push
popa
pop
cmpsb
shrl
sub
leave
add
subb
shll
xlat
mov
xor
enter
mov
pusha
int
adcb
fmuls
or
sbb
jge
inc
mov
adc
subb
mov
jns
popa
lret
outsl
cmp
cs
pop
insb
stos
sahf
sbb
les
ja
cmc
add
pusha
adc
out
daa
jl
cld
sbb
rol
mov
dec
nop
imul
sbb
cwtl
mov
loope
xor
cmpsl
mov
jmp
shll
push
xor
mov
outsb
std
jne
and
js
dec
mov
inc
cmp
push
int
cmpsb
int3
pushf
mov
movsl
xor
dec
std
inc
and
ss
push
mov
inc
ds
mov
add
or
filds
out
jmp
icebp
push
por
aam
dec
mov
jne
insb
xor
test
cld
inc
sti
pop
jne
pop
in
sub
push
stos
sti
aam
jne
das
fisubrl
sub
mov
dec
in
shl
nop
add
mov
test
mov
cltd
push
add
dec
rolb
sbb
stos
hlt
cmp
inc
std
cmc
pusha
iret
add
gs
push
loope
out
pop
push
pop
jmp
mov
cvtps2pd
int
faddp
or
cld
inc
push
repz
out
int3
pop
xor
addr16
mov
mov
sbb
scas
movsl
inc
fdivl
divl
xlat
shll
incl
nop
jo
jb
jmp
jo
sub
aaa
lock
aad
inc
sbb
stos
int
loope
pop
pop
std
mov
icebp
hlt
sub
cli
or
dec
ds
not
mov
push
lea
push
imull
jp
nop
push
js
ljmp
ret
out
fidivrs
out
ja
dec
or
and
hlt
xor
pop
cmp
inc
sarb
out
sbb
or
imull
je
clc
xor
imull
sahf
repnz
mov
subb
scas
cli
inc
lock
jle
inc
mov
repz
cli
lds
das
or
dec
jo
out
adc
pop
or
jmp
push
cmp
xor
rolb
mov
cmp
std
mov
pop
fnstenv
xchg
lret
and
mov
test
mov
sub
add
pop
dec
add
xor
jl
clc
and
jno
xor
imulb
xorb
scas
pop
pusha
mov
enter
xchg
adc
push
push
incl
in
jnp
pop
adc
ret
in
or
mov
cmpsb
out
cmpsb
out
push
sbb
dec
dec
imul
cmc
lock
lret
aad
mov
div
mov
dec
imul
gs
mov
lret
sarb
dec
push
mov
xor
cld
pop
lock
xchg
dec
sti
stos
sbb
xor
mov
pop
cmp
mov
add
sbb
mov
cmpl
popf
in
test
cmpb
lods
outsl
call
xlat
sahf
or
jo
xchg
inc
pop
ljmp
adc
push
bound
arpl
push
lods
add
jo
jmp
cmp
repz
roll
ljmp
inc
dec
imul
push
mov
push
mov
mov
adc
cmc
ds
xchg
xor
pop
adc
test
cmp
call
shrb
jp
push
outsl
add
je
inc
iret
fisttpl
out
scas
ret
push
mov
stos
mul
mov
sub
add
dec
subl
xor
push
jle
adc
stos
mov
xchg
push
aam
dec
call
jl
imulb
sbb
mov
pop
add
fistps
shr
fwait
mov
stos
mov
pop
push
out
cmpsl
cwtl
mov
mov
stos
mov
push
pop
mov
dec
xchg
mov
inc
jno
cs
push
loop
adc
xor
cmpsl
adc
xor
pop
stos
scas
mov
adc
movsb
xlat
add
mov
sbb
and
fidivrl
xor
cli
sbb
mov
lret
js
mov
mov
shrl
push
outsl
mov
lcall
push
sub
shlb
bound
mov
call
mul
add
and
dec
pusha
loop
jle
jl
je
stos
inc
cmp
sbb
lea
inc
nop
xor
loope
ret
pop
mov
push
mov
lret
pop
add
add
loopne
ljmp
mov
clc
jmp
fbld
push
andb
xchg
movsl
or
fsubrl
punpcklwd
xchg
ljmp
sub
ret
add
shlb
jmp
pushf
mov
xlat
lret
shrd
sbb
ja
daa
cltd
fs
adc
pcmpeqb
cli
rclb
push
add
xchg
and
xchg
dec
mov
xor
mul
mov
mov
clc
loopne
scas
xchg
sub
sub
test
cmp
out
jle
addb
fdivrl
jae
or
notl
cmp
add
mov
jp
movsl
rcrb
fld
scas
sub
add
sbb
loope
jne
xlat
lock
mov
addb
mov
gs
xor
push
push
mov
ret
mov
lock
decl
jo
sbb
pop
or
pop
add
jg
mov
or
adc
js
or
sub
add
in
js
out
negb
lcall
xor
xchg
xor
pop
pop
inc
adc
and
adc
data16
or
popf
clc
data16
sahf
push
iret
cltd
sub
cmp
cmp
xor
pop
jmp
push
jbe
cli
repz
fcmovb
adc
sbb
xchg
cmpsb
jl
lret
ss
test
nop
mov
sbb
pop
lea
cs
out
mov
pop
fisubs
pop
rol
arpl
mov
scas
inc
jle
stc
adcb
out
push
mov
icebp
fldl
shll
jns
loopne
mov
jecxz
xor
or
sbb
mov
cmpsl
sahf
icebp
popa
je
lahf
jl
mov
aas
hlt
aad
es
jg
dec
mov
stos
pop
add
leave
cmp
pushf
cmp
mov
xchg
dec
rorb
lahf
dec
and
in
xchg
stos
rclb
push
insl
pop
jae
das
mov
pushf
jbe
jp
hlt
cld
sub
js
popa
xchg
or
js
test
lods
out
adc
minps
sub
adc
sub
fmuls
push
and
dec
push
js
or
data16
jle
adc
add
call
divl
decb
popf
int
mov
or
mov
add
push
jbe
push
loop
movsl
xor
ljmp
and
aam
dec
scas
dec
mov
add
stos
cmp
push
das
daa
iret
out
jnp
pop
loopne
push
dec
into
pusha
ds
adc
push
add
orb
repz
xchg
cmp
aam
mov
mov
es
lods
ss
push
jge
mov
ljmp
stc
in
or
insl
scas
sbb
bound
lret
adc
insb
push
add
icebp
add
xchg
mov
iret
test
add
sub
lods
pop
mov
iretw
or
icebp
sbb
iret
cmp
icebp
adc
inc
js
out
shl
lds
pop
mov
cld
dec
adc
out
aad
and
push
push
mov
push
xor
lret
fidivrs
cmp
push
pop
mov
xlat
xor
mov
cmpsb
testl
into
sbb
insb
xchg
jmp
imul
lock
jb
movsb
and
ljmp
inc
fildl
cli
sub
lcall
jl
sbb
in
xchg
stos
add
xor
fsubrs
sub
push
aas
pop
ds
and
pop
adc
in
jmp
sub
lret
jb
push
mov
icebp
sub
mov
fcmovnbe
outsb
pop
in
pusha
test
data16
out
jnp
and
inc
rorl
xchg
adcb
daa
int
jge
rcrb
inc
push
pushf
loopw
cmpsl
jns
adc
in
scas
fnstenv
ss
mov
out
clc
push
imul
mov
add
and
sar
inc
mov
rorb
rcll
mov
jmp
lock
lock
and
mov
jns
mov
sbb
and
adc
push
nop
xlat
mov
movsl
push
shrb
xchg
pop
mov
pushf
in
call
add
ret
mov
icebp
or
sub
push
loopne
divb
fidivl
sbb
mov
fisubrl
ret
leave
dec
test
jl
jp
push
ss
adc
aam
and
enter
mov
adc
sbb
cli
cmc
imul
scas
outsl
jno
mov
lds
aad
xchg
pusha
fldl
mov
lret
jecxz
adc
or
push
cmp
rorb
rcrb
cmp
sub
pop
movsb
ds
mov
icebp
push
popa
jmp
mov
fidivrs
and
cmpsb
mov
xchg
in
and
cmpsl
xor
test
and
pushf
mov
arpl
aas
jb
rclb
pop
insb
pop
pop
das
dec
jnp
mov
dec
orps
aad
pop
ja
int3
cltd
in
lock
adc
roll
adc
js
push
and
xchg
repz
xor
xor
clc
sub
cmp
aad
jno
leave
les
repz
sbb
dec
and
shrb
mov
outsb
es
hlt
test
and
cs
hlt
andb
inc
xor
push
add
stc
xchg
mov
cmp
push
ret
push
lret
fcoml
sbb
mov
push
scas
xchg
int3
lcall
nop
lea
xchg
lock
adc
imul
jp
pop
iret
dec
add
add
hlt
mov
xchg
adc
adc
cmp
ret
adc
or
push
push
hlt
ljmp
les
movsb
scas
imul
lods
jle
idivb
fnstsw
shll
cmp
cmpb
jo
mov
aam
mov
jle
sub
pop
popa
push
adc
and
inc
mulb
add
hlt
jl
xchg
ss
adc
mov
enter
sbb
pushf
add
inc
xor
and
stos
pop
fwait
jl
sbbb
push
mov
pusha
xlat
sub
fsubrs
inc
mov
or
push
jo
ret
add
push
icebp
or
pop
xor
jae
shr
movsl
and
jp
adc
in
shrb
sub
adc
jae
add
add
fwait
insl
or
mov
ds
and
lods
sbb
subl
lds
jle
sarl
int
adc
xchg
sbb
cli
lret
cmp
cs
lods
fiaddl
into
sub
outsb
out
aaa
insb
into
mov
fcom
xchg
inc
incb
sbb
add
sub
dec
pop
daa
push
call
add
xchg
xor
mov
mov
repnz
fwait
lods
and
sar
dec
outsl
shrb
mov
scas
insb
stos
das
enter
push
or
cmp
test
xchg
add
les
dec
sbb
jo
cmc
loopne
cltd
xchg
popf
inc
adcb
pusha
mov
push
loop
mov
fsub
ds
inc
aam
sbb
push
fmulp
mov
pusha
lock
stos
jo
outsl
or
inc
das
in
xor
inc
mov
lret
orl
xor
call
sbb
cbtw
inc
jmp
and
push
mov
aaa
and
mov
shr
imul
jbe
mov
aas
mov
pop
iret
mov
lock
aad
outsl
scas
popa
or
cwtl
cmp
fiaddl
push
mov
rcrb
test
movsl
shl
fucompp
inc
mov
push
inc
sbb
shl
dec
lds
icebp
mov
or
and
insb
inc
sbb
test
push
pop
daa
sbb
cmp
clc
xchg
jne
mov
inc
imul
out
ljmp
add
dec
or
incb
mov
sbb
jle
mov
add
fidivrl
das
js
fcoml
shrl
pusha
mov
lahf
ret
int3
pop
sahf
add
dec
xor
mov
gs
pop
test
sub
pop
push
and
aad
sti
xlat
push
js
xchg
lret
in
test
mov
inc
jno
pop
add
std
and
pop
adc
pop
mov
mov
inc
enter
test
cs
int3
xchg
out
xchg
lret
ror
incl
es
je
clc
jg
nop
notl
push
in
pop
dec
jge
mov
insl
lret
push
clc
push
ja
and
inc
cmp
inc
mov
or
mov
jl
cmc
rcr
daa
push
in
sbbl
fs
negl
push
leave
ret
in
pushl
push
lret
push
xor
fistpl
ficompl
fistpll
push
out
jl
mov
iret
xor
lock
and
xchg
fwait
rcl
addr16
push
loopne
ret
jbe
cli
imul
or
popa
arpl
jmp
in
in
lock
fsubrs
fwait
push
push
cmp
xchg
icebp
xlat
xchg
and
pop
pushf
subl
adc
pop
imul
lret
inc
push
mov
in
inc
jbe
add
push
ss
dec
pop
in
jnp
adc
jno
outsl
popf
lret
lret
inc
int3
insb
stc
pop
adc
mov
inc
dec
xor
pop
cmp
stc
cmp
lahf
mov
int
cld
dec
or
cmp
pop
mov
xchg
in
ljmp
rol
int3
cwtl
call
or
lds
lret
inc
push
in
inc
pop
push
or
or
fbstp
push
not
inc
mov
dec
mov
sbb
sub
mov
inc
mov
add
mov
sbb
adc
dec
sub
inc
sub
inc
add
or
mov
jns
fchs
pop
pop
movsl
add
movsb
dec
cld
rol
dec
mov
ret
inc
shrb
call
orb
je
mov
rorb
xor
fimull
outsb
sub
call
mov
into
ja
or
push
cs
mov
mov
icebp
imul
clc
mov
jecxz
in
mov
icebp
rorb
mov
push
mov
in
inc
js
idivl
sub
xlat
dec
mov
cld
adc
mov
and
xchg
sub
cli
dec
sub
push
adc
not
ret
mov
scas
xchg
hlt
out
roll
mov
or
mov
out
pop
cmp
pop
iret
imulb
fisttps
mov
cmc
pop
std
jl
jo
rcl
jne
push
pop
mov
xchg
mov
add
inc
sub
popa
loop
pop
push
adc
sbb
lcall
les
sti
mov
mov
inc
push
mov
sbb
lock
dec
push
dec
shl
insb
insl
icebp
fidivs
movsb
mov
inc
jno
idivb
idivl
fsubrs
dec
fsubrs
dec
dec
push
mov
fcomi
push
or
pop
cld
add
inc
cltd
xchg
jne
cmp
je
ret
push
push
mov
shlb
insl
mov
xor
imul
lock
lods
dec
inc
dec
jecxz
add
sbb
cs
es
neg
int3
dec
scas
cmp
repz
sbb
pop
rolb
mov
jmp
outsl
dec
das
call
cmpsb
dec
add
enter
cmc
xor
inc
out
cmp
push
jns
stos
adc
and
mov
imul
push
in
pop
ds
lods
leave
repnz
add
xor
push
dec
pushl
dec
clc
jbe
ret
jne
inc
lods
push
insl
imul
jg
popa
and
inc
dec
push
pusha
mov
and
repnz
out
add
dec
inc
iret
daa
xchg
shlb
or
cmc
andl
mov
cltd
cs
cmp
popf
lods
xor
xor
int
pop
fs
cmp
insb
in
rcrb
icebp
cltd
fstpt
cmp
ljmp
imull
xor
mov
stos
out
leave
in
sbb
sti
lock
les
xchg
jg
add
add
hlt
sahf
push
testb
mov
shl
ljmp
jo
fwait
adc
lret
sbb
xchg
xchg
push
mov
popa
inc
dec
mov
jge
lret
test
in
mov
jle
lods
sub
push
dec
jb
mull
iret
orl
push
push
out
jmp
inc
inc
cs
cmp
mov
test
pop
divb
mov
xchg
lock
mov
pop
xchg
sub
inc
inc
adc
inc
adc
add
pop
es
mov
xlat
sbb
inc
mov
loop
push
and
int
push
cmpsl
sub
inc
hlt
cmpsb
inc
xor
rcrl
out
inc
ret
dec
insb
xor
add
cmpb
rorl
je
mov
add
sti
add
lret
adc
inc
fwait
ljmp
mov
insb
pop
mov
es
sbb
enter
add
or
test
iret
cwtl
inc
sub
pop
push
ljmp
xor
fiadds
sbb
repnz
addr16
lock
sbb
jo
loop
lret
dec
div
neg
dec
push
lock
leave
decb
arpl
jmp
add
sbb
lret
out
sbb
push
dec
ficoml
xor
xchg
and
ljmp
and
imul
cmpsb
dec
int3
push
shrb
or
in
in
cmp
or
les
xor
popa
das
test
test
addr16
xchg
lock
fsubs
insl
dec
mov
icebp
mov
int3
mov
call
add
fildl
popa
ds
fwait
negb
inc
stc
gs
js
jl
push
dec
pop
gs
fcom
shlb
sub
ret
subl
xor
pop
popa
lahf
dec
imul
inc
cwtl
je
ret
xor
add
js
jo
push
add
pop
fsub
in
xor
arpl
or
jp
push
push
push
xor
cmp
addl
dec
outsb
inc
in
insl
add
or
mov
cmpsb
sbb
mov
ljmp
mov
hlt
bound
pushf
arpl
cmp
add
xlat
loopne
push
insl
dec
mov
rcrb
push
push
pop
inc
push
mov
push
popf
lock
sbb
cwtl
loopne
adc
add
mov
jmp
and
hlt
repnz
fstl
adc
popa
inc
pop
or
push
adc
push
imul
ss
hlt
push
xor
dec
dec
mov
or
xor
jmp
subb
pop
out
xchg
push
ja
sub
or
idiv
xor
test
and
pop
push
lock
rclb
dec
arpl
imul
pop
cmp
sahf
sub
iret
inc
enter
cmp
xor
out
pop
mov
add
idiv
divb
push
or
lock
push
out
or
mov
sub
loopne
pop
pushl
ret
sbb
push
mov
push
cmp
scas
mov
pop
sahf
outsb
dec
xchg
in
int
mov
mov
stos
xor
push
insb
sub
dec
out
jns
add
shl
push
inc
dec
orl
mov
or
or
aaa
out
fwait
movsb
push
clc
lock
cmpb
cmp
ds
mov
mov
jnp
dec
addps
dec
mov
rcrb
in
daa
xor
test
and
cltd
push
icebp
jecxz
ret
fidivs
arpl
inc
push
xchg
push
shl
jb
adc
inc
pop
push
es
pop
mov
jmp
cmp
enter
lret
xchg
mov
out
outsl
imul
sbb
inc
push
cs
or
and
int
shl
xlat
xchg
adc
leave
xor
lea
push
jg
or
cmp
cmp
xorl
pushf
jmp
sbb
inc
test
outsb
jns
add
jle
xchg
fcmovnbe
popf
jne
outsl
push
rorl
stos
push
rol
add
sub
rol
jmp
cmc
add
into
ret
push
insb
ja
xor
or
inc
mov
lea
out
fxch
inc
push
lcall
sbb
pop
add
or
fiadds
dec
adc
std
mov
push
rclb
hlt
ss
sub
sbbb
aaa
ja
add
sbb
pop
dec
inc
cmpb
inc
sbb
add
rcll
enter
inc
rorb
ret
mov
sbb
adc
repz
aad
adc
pop
insl
mov
mov
imul
and
push
pop
imul
push
push
aaa
jp
fsubs
inc
or
cmp
push
pop
into
cwtl
adc
sahf
lock
dec
pop
add
mov
sub
enter
push
xchg
fs
xchg
test
sub
cwtl
aaa
ja
mov
movsl
push
mov
dec
cmp
test
cmp
mov
cmp
in
pop
stc
mov
mov
or
inc
dec
add
inc
fcoms
jge
mov
negl
aam
jne
push
inc
dec
out
cmp
fisubrs
inc
sbb
aam
jne
mov
xchg
dec
das
popf
xor
rorl
divb
mov
inc
decl
push
jae
xorl
sbb
test
je
shll
mov
js
push
mov
push
xor
mov
dec
js
or
push
fists
clc
mov
push
xchg
call
xchg
mov
or
int3
push
loope
jne,pt
hlt
jg
xor
push
mov
push
add
sub
loope
fxtract
mov
adc
shrb
adc
mov
cmp
ret
sbb
pop
push
cwtl
sub
andb
cld
rcl
or
mov
sbb
jae
lock
data16
sub
dec
push
adc
sub
jb
push
jg
cld
cmp
fucomip
dec
cld
insl
dec
push
cmp
mov
decl
int3
or
xchg
rorb
push
clc
sub
cwtl
es
mov
out
mov
xchg
or
int
dec
xchg
cmp
inc
ffree
icebp
mov
jp
test
cmc
and
jl
adc
xchg
ja
popa
dec
xor
jno
mov
cmp
mov
lds
dec
or
ret
sbb
out
movl
jmp
push
push
dec
movl
lret
jno
int
in
sbb
inc
xor
sub
mov
clc
aaa
xor
loopne
or
mov
in
movsb
ret
mov
imul
movsb
pushf
push
push
mov
repnz
and
cmp
loopne
or
lahf
in
div
lret
mov
pop
inc
gs
add
mov
push
pop
nop
call
xor
fistpl
jb
addb
imulb
mov
test
cltd
push
ds
adc
pop
add
neg
mov
add
js
mov
in
mov
cmp
out
mov
mov
gs
in
out
mov
mov
jne
push
add
or
dec
sti
or
shlb
in
sbb
ret
imul
inc
gs
adc
and
sbb
add
imul
or
mulb
shrl
clc
mov
shl
adc
push
sub
adc
adc
pop
out
fcoms
enter
fisttpl
sub
ds
xchg
mov
inc
and
hlt
test
sti
push
jl
aam
repz
std
andl
sti
mov
lret
mov
xlat
xchg
outsl
dec
dec
inc
popf
scas
inc
ds
call
mov
jmp
mov
jnp
sbb
andl
mov
cmp
cli
xor
mov
push
test
loope
sbb
mov
push
mov
movsl
sbb
outsl
cmp
push
sbb
arpl
push
loopne
xor
mov
andl
push
jne
outsb
push
adc
xchg
lock
push
jg
and
aas
call
lock
push
std
add
add
test
fcomps
into
popa
add
mov
add
add
jbe
mov
pop
inc
test
testb
adc
dec
clc
iret
sbb
dec
js
xchg
test
lret
iret
add
push
jg
fstl
bound
xchg
sahf
dec
scas
das
cli
sbb
into
or
sbb
scas
insb
push
or
aaa
push
in
sub
xor
repnz
jmp
push
lods
dec
fwait
xorps
aam
push
lcall
push
repz
lahf
mov
dec
push
push
mov
cmp
lretw
mov
mov
cmp
scas
stc
sub
insl
xchg
shlb
rcrl
jno
out
add
out
inc
scas
rolb
xlat
xor
xor
or
cld
stos
rolb
jne
das
jbe
jb
shl
and
sub
push
xchg
adc
nop
push
add
add
addb
xor
bound
addr16
pushl
add
popa
jns
je
add
jb
push
push
push
dec
je
outsl
mov
jo
insl
arpl
js
addr16
in
inc
and
mov
add
jne
adc
call
push
xchg
or
mov
xor
ss
arpl
je
push
je
push
insl
pop
add
mov
dec
andb
fistpll
imul
insb
dec
inc
add
imul
push
popa
push
mov
xor
imul
push
pop
jne
inc
inc
dec
in
aas
sti
xorb
jo
arpl
loop
cmp
xor
xor
cli
xor
xor
xor
cld
out
inc
mov
mov
movsl
cmpsl
add
in
jl
testl
lret
aas
add
push
mov
outsl
je
rorb
arpl
lds
sbb
jl
inc
scas
and
xchg
pusha
jmp
enter
cmc
xor
nop
adc
mov
lret
xor
mov
jae
pop
push
mov
xchg
lock
jge
push
and
mov
stc
xchg
add
dec
cmp
es
shlb
xor
add
cmp
xchg
jle
ja
int3
add
adc
xchg
sbb
fdivrp
inc
clc
mov
add
mov
add
adc
ret
jge
cmpl
add
sti
sub
ficomps
imul
inc
cmpsl
addb
xchg
lahf
or
push
add
test
out
mov
add
inc
mov
in
test
incb
sbb
inc
ret
pop
ds
pop
mov
aad
cmc
add
fstp
jo,pn
sbb
in
mov
das
fldl
mov
adc
xor
cmc
pop
pop
pop
in
fsubrs
arpl
es
pop
mov
mov
dec
mov
mov
leave
subl
sub
add
in
xchg
shlb
jmp
push
in
test
lock
jo
loope
sub
adc
xor
pusha
or
cs
xchg
push
inc
mov
inc
stos
cmp
loop
lods
adc
push
imul
mov
jnp
adc
pop
subb
xchg
sub
and
lods
mov
outsb
pop
cmp
stc
sbb
cmpsb
xor
movsb
and
xor
aad
mov
add
out
iret
out
dec
push
addr16
push
mov
fwait
sub
jae
icebp
outsb
ffreep
lock
addl
and
aas
out
ljmp
and
xchg
fiaddl
cmp
jge
ss
clc
push
les
cmp
sub
push
add
mov
sbb
pop
pop
push
out
in
mov
loope
adc
fstps
xchg
add
adc
out
cs
add
mov
or
std
outsb
fadds
ret
sti
mov
inc
insb
jg
inc
mov
mov
mov
add
pop
test
in
jbe
fimull
cmp
add
les
notl
push
xchg
mov
lret
call
cmp
add
jne
pop
outsl
or
sbb
jge
adc
push
jne
mov
les
out
std
call
dec
dec
add
mov
subl
dec
jmp
cmpsb
repz
orb
mov
scas
loop
lods
sarl
jmp
pop
push
shll
ljmp
ret
aam
ret
cmp
xchg
cmp
cs
sub
cmp
add
sbb
jp
push
add
jge
and
cmp
insl
push
xlat
push
xlat
out
pop
mov
add
fiadds
push
repnz
test
push
fsub
jbe
aad
xor
stos
sbb
push
js
jae
xor
fidivrl
add
nop
push
imul
adc
int3
pop
push
out
xor
cmp
fwait
mov
lods
xchg
inc
cmp
push
js
add
inc
mov
popf
jno
jns
or
push
int
clc
adc
add
and
subl
sub
cmp
add
adc
iret
and
jmp
mov
call
pusha
jg
ret
xchg
rcll
and
divb
scas
divl
push
push
jle
ret
inc
push
mov
fadd
arpl
xor
xchg
mov
xchg
insb
xor
push
jecxz
leave
or
add
test
je
cli
outsb
in
outsb
and
add
sub
xchg
and
add
and
or
mov
test
rcrb
sub
mov
pop
mov
mov
xor
mov
cltd
jo
sub
ret
push
push
dec
inc
aaa
lds
lret
clc
inc
xchg
or
lds
pop
push
pop
sbb
inc
adc
lea
dec
aaa
lcall
dec
push
ror
adc
addb
mov
sbb
in
bound
repnz
mov
jge
shlb
push
sbbl
out
xor
lcall
scas
lret
outsb
add
mov
orb
cmc
or
loopne
mov
xor
sbb
push
cmpsl
xor
std
jno
in
loop
xor
mov
mov
sti
es
lahf
ret
and
pushf
mov
mov
sbbb
inc
out
jg
jmp
cmp
mov
sbb
sub
call
in
push
cmp
int
add
sti
out
inc
xchg
xor
dec
xor
xchg
xor
sub
ret
add
adc
shl
gs
iret
mov
cmp
imul
sub
loope
lock
shr
add
cmp
cvtps2pi
add
and
fucom
mov
fldt
sub
bnd
icebp
mov
adc
lds
push
sub
jo
jecxz
jle
lock
sbb
lock
jl
jge
test
add
imul
xchg
cli
clc
je
add
loope
shrl
lret
push
mov
xchg
pcmpgtb
dec
and
push
mov
call
cwtl
decb
icebp
dec
std
test
in
rcll
inc
add
cli
and
or
add
mov
clc
lds
and
sbb
je
push
mov
gs
and
adc
cwtl
pop
sbb
xchg
int3
lret
sbb
xchg
jle
add
movd
inc
leave
bound
pop
fidivs
mov
push
scas
pop
test
dec
dec
test
in
pop
pushf
js
fcmovnb
add
jbe
inc
je
insb
ss
lahf
pop
lock
push
data16
cmpsb
test
cmp
jb
jbe
pushf
ficoml
into
add
aad
pop
or
push
mov
repz
ljmp
loope
jnp
mov
rorb
pop
scas
cmc
mov
lods
add
push
out
add
pop
inc
les
mov
lahf
mov
sub
roll
cmp
mov
cli
addr16
mov
pop
mov
cli
add
cmpsl
clc
movsb
ljmp
out
push
inc
popl
push
imul
bound
pop
add
sbb
jo
lret
adc
shlb
pop
mov
stos
mov
push
inc
loopne
aas
push
push
je
add
xor
mov
enter
out
pop
pop
hlt
clc
inc
jge
dec
in
sub
cmp
pop
in
insb
xor
xorb
inc
cmpsl
lahf
xchg
aam
sbb
out
out
pop
dec
push
jb
das
ret
int
std
into
add
push
adc
or
mov
rcrb
mov
sahf
mov
push
repz
cmp
mov
and
xchg
clc
jge
nop
clc
test
xor
dec
dec
xorl
jecxz
test
mov
xor
cs
in
pop
lret
pop
add
jo
ja
jbe
jl
cwtl
pop
orb
mov
pop
add
xor
jp
jge
aad
out
add
scas
and
add
push
test
lcall
push
sbb
cmp
icebp
fisubrs
push
or
inc
push
adc
xchg
fistps
sbb
add
inc
ds
inc
add
loope
inc
orl
add
in
add
and
xor
test
fmull
adc
xchg
shrl
and
xor
xchg
pop
fmul
sbb
das
jp
fmuls
inc
in
ret
iret
mov
pushf
out
das
movsb
push
or
mov
and
xchg
rcrl
jg
aaa
mov
out
sbb
and
imul
fstpl
insb
hlt
sbb
cli
jecxz
shll
mov
push
insb
pop
sarb
subl
cmp
into
push
ret
fadds
pusha
jo
adcb
inc
and
sbb
rorb
lahf
and
adc
ret
cmpb
sahf
js
adc
fnsave
cmp
divl
cli
ret
mov
xor
int
sbb
lods
rorl
pop
xchg
ja
xor
or
pop
fildll
sub
je
sti
xorb
push
aas
outsl
add
adc
or
rcrb
inc
push
clc
loop
sub
jbe
inc
or
and
jp,pn
sub
je
jbe
aaa
test
fistl
popf
in
xor
mov
inc
jne
inc
xchg
hlt
clc
sbb
sub
fbld
inc
inc
movsl
mov
cmp
mov
jb
push
sarl
faddl
pop
mov
mov
adc
add
mov
adc
inc
insl
in
out
xlat
pop
xchg
add
and
sub
pop
pushf
out
xor
aas
adc
pop
stos
and
es
data16
shll
add
or
mov
clc
mov
xor
cmpl
sbb
pop
or
jg
repnz
adc
outsb
rcrb
ds
arpl
dec
pop
mov
loop
jecxz
xor
mov
pop
mov
fidivs
dec
mov
clc
sub
es
cmp
add
mov
ja
fimuls
pusha
fbld
rolb
pop
fisubs
push
sbb
aas
mov
cli
push
test
insb
jb
rcrl
pop
es
dec
xlat
into
mov
jl
sbb
xlat
roll
mov
mov
loope
and
push
xchg
inc
sbb
gs
sbb
push
xor
xor
or
dec
jl
cli
add
mov
dec
ret
cmp
inc
int3
je
outsl
xchg
std
lods
pop
xchg
sbb
pop
pop
clc
bound
stos
fldenv
adc
mov
test
bound
add
jle
pop
addl
sub
dec
or
loop
stos
cs
mov
and
lea
stos
icebp
mov
adc
push
ljmp
lds
loope
add
xchg
popa
cltd
jb
ljmp
cmp
lret
mov
outsl
sbb
pop
sbb
lods
nop
cmpl
hlt
sbb
lahf
sub
adc
insb
loop
push
mov
clc
inc
lcall
xchg
leave
shll
jo
stos
aaa
jge
hlt
sbb
shll
into
sub
shl
jle
pusha
and
sbb
or
pushf
and
or
push
sti
clc
popl
cli
les
aad
shll
push
mov
pusha
sbb
mov
rcll
push
jno
xor
sub
mov
outsl
cs
xor
adc
mov
ja
push
les
fsubrs
mov
cltd
ret
icebp
jnp
int3
dec
mov
xchg
and
push
lock
in
das
fnstcw
sub
repnz
popa
ljmp
test
test
lds
int3
popa
stos
ret
pop
incb
jne
sbb
xchg
mov
mov
cmp
insb
mov
mov
ficoms
dec
adcl
pop
test
ljmp
xchg
or
leave
in
push
shrb
stos
xchg
xchg
punpckhdq
out
xor
test
loopne
jmp
insl
pop
wbinvd
repz
ds
popf
ds
xlat
call
push
inc
mov
popf
hlt
mov
loop
and
das
sub
psubusb
loopne
xor
fsubr
push
inc
enter
add
or
arpl
les
cmc
mov
add
and
sbb
xor
pop
push
clc
call
cli
ret
test
or
push
insb
stos
adc
and
lods
sti
mov
jp
cmpsl
cmpb
sub
cmc
clc
mov
test
repz
int
aam
jg
pusha
mov
xchg
cmp
sub
sti
lret
cmp
loope
mov
mov
mov
movsl
mov
gs
loopne
or
lods
out
cli
dec
or
sbb
popa
jg
adc
orb
fs
jmp
ljmp
sysret
mov
int3
or
xlat
push
dec
jae
and
in
mov
es
mov
movsb
jnp
mov
fucom
add
jl
jecxz
out
pop
push
lock
cmp
lcall
addr16
xchg
ds
mov
imul
out
inc
xchg
test
pop
sbb
sub
ljmp
test
add
das
gs
cmpb
push
jl
pop
pop
test
mov
and
mov
aad
inc
dec
mov
js
inc
insb
push
jl
inc
jg
sbb
xor
jmp
fmulp
mov
jo
adc
popa
or
jge
and
push
sub
mov
loop
mov
inc
test
pop
mov
mull
mov
stos
imul
sahf
das
mov
movl
inc
sbb
jle
addr16
es
rorl
mov
cld
loopne
jp
cmp
fildll
sti
push
sub
dec
add
cs
insl
cmc
mov
out
xor
xlat
or
cmpsl
xor
push
sbb
inc
pop
fimull
cmp
cmp
fisttps
ss
dec
and
mov
lock
lds
mov
mov
lahf
sbb
inc
fsubs
add
adc
neg
in
jbe
jmp
lret
sub
jo
and
dec
les
jecxz
iret
and
fisubl
push
orb
xchg
lret
xchg
jno
cmpsb
xchg
ds
pxor
jp
or
add
adc
out
jle
clc
or
dec
cmp
push
lock
push
cmp
xchg
dec
cmp
cmpsb
out
mov
aaa
into
jb
sub
add
ret
test
dec
ljmp
lret
std
jbe
add
jg
inc
aad
repnz
sub
push
mov
xchg
xor
mov
inc
push
aad
sbb
insb
mov
adc
pop
and
xor
mov
cmp
jo
cs
push
stos
ljmp
mov
mov
pop
movsl
sub
add
rcrb
cmpsb
mov
push
in
inc
enter
in
jle
add
lock
sbb
sarl
xor
ja
add
cli
sub
sbb
inc
loopne
ss
repnz
xchg
ret
or
mov
inc
stc
lret
adc
adc
push
push
push
or
sbb
ljmp
test
jp
cmpsl
or
adc
mov
subl
in
xor
sbb
xor
xchg
ds
in
dec
add
ss
in
mov
mov
adc
js
iret
mov
les
inc
mov
int
mov
mov
into
js
std
rcll
push
cmp
repnz
jo
das
cmp
or
lods
hlt
mov
pop
xchg
and
cvttps2pi
mov
bound
sub
filds
jl
shlb
sti
mov
pop
ds
ljmp
or
iret
je
cwtl
add
cmp
jecxz
aad
adc
cmc
mov
mov
mov
idiv
cwtl
xchg
cmpsl
xchg
mov
lret
fsave
ds
and
lea
mov
les
mov
sti
enter
cmp
cld
fnsave
push
shlb
sarl
loop
addr16
orb
mov
cld
jne
stc
ret
mov
scas
inc
int3
cmp
pop
add
pop
or
rorl
dec
sub
xchg
pop
mov
mov
pop
shrb
cld
and
push
inc
fmuls
std
cmpb
pop
or
iret
ljmp
sbb
ljmp
int3
cmp
push
sbb
jb
mov
sti
push
add
incl
mov
loopne
fdivrs
adc
cwtl
scas
sbb
pop
das
pop
int3
mov
push
add
push
mov
test
daa
pop
pop
pop
dec
push
into
in
mov
jle
sbb
pushf
fdivs
daa
and
fsubrs
inc
fs
push
clc
lret
mov
fisubs
lahf
ja
adc
es
mov
movsb
jg
adc
repnz
mov
mov
dec
cmpl
push
iret
cli
out
mov
mov
xchg
cmp
push
call
idivl
xchg
fs
sub
dec
mov
retw
inc
xlat
jo
sbb
or
test
ljmp
inc
inc
pop
cs
stos
cmpsb
mov
sbb
or
stos
sti
rolb
inc
or
test
pop
fiaddl
inc
pop
je
push
hlt
jmp
sbb
jne
xchg
xchg
pop
sbb
test
bound
dec
push
repz
loope
lret
mov
loop
add
andl
aaa
lcall
push
xchg
cli
ja
push
push
jl
arpl
stos
mov
xorl
xchg
sbb
mov
jo
jmp
mov
push
pop
iret
aas
mov
sub
pop
push
data16
ret
cmpsb
aam
in
xor
fsubl
sub
inc
adc
mov
nop
insb
fwait
push
add
cmpsl
arpl
dec
cmp
xchg
push
test
inc
add
dec
add
xor
lods
fnstsw
add
adc
ret
call
lea
lock
pop
test
mov
sahf
pusha
dec
xchg
jo
add
popf
flds
jg
into
jo
scas
je
mov
cli
stc
xchg
sub
sub
lds
push
les
cmp
push
jle
jp
sub
mov
mov
cs
cmpsb
mov
shrb
push
or
xchg
je
in
lock
dec
add
lock
push
push
cmpsb
push
out
pop
movsb
pop
push
jecxz
ss
jbe
int3
call
clc
std
std
xor
cmp
lds
or
push
dec
rolb
adc
mov
addl
cld
mov
adc
enter
jp
mov
push
std
pop
lea
std
and
aam
test
push
mov
ljmp
testb
nop
mov
xor
adc
pushf
jg
icebp
or
iret
inc
inc
fs
adc
cli
xor
sti
sbb
mov
aas
add
loop
shl
mov
cmp
add
dec
fldt
sbbl
iret
jno
adc
cwtl
out
add
adc
push
mov
pop
loop
inc
cmp
pop
push
mov
popa
and
pop
shrb
xlat
test
test
pop
jle
stc
iret
out
mov
add
and
and
aam
in
mov
rorl
jb
call
gs
sub
jp
clc
adcb
jmp
adc
clc
dec
jbe
lret
or
into
push
push
mov
ljmp
in
lock
push
loop,pt
adc
daa
jl
mov
xor
push
fbstp
shl
orl
and
jle
test
fmul
adc
inc
jne
fnstsw
xchg
inc
loopne
ret
sub
into
insl
rolb
les
fs
pushf
loop
filds
popa
into
pop
nop
fldt
jmp
rolb
pop
aam
cmp
sahf
xchg
shll
add
add
loope
sub
adc
jp
pop
enter
xchg
push
and
adc
out
outsl
adc
adc
stos
ret
jge
cli
inc
cmpsl
movb
icebp
in
andb
popa
push
ja
push
lock
jbe
and
push
mov
add
pusha
fisttps
movsl
jge
jle
shlw
dec
ret
sbb
and
and
inc
or
adc
js
sub
scas
inc
pop
pop
loope
aam
lcall
ret
stos
aaa
mov
add
cmc
cld
mov
cld
add
inc
ret
loope
xor
adc
adc
xchg
mov
xor
sbb
xchg
call
cmc
nop
and
ss
inc
lock
shl
pusha
popa
ret
mov
popa
or
sti
or
pop
add
mov
xlat
fadd
inc
fldl
je,pn
bound
fsubrl
jp
ljmp
mov
jp
mov
int3
pop
pop
loopne
fcomps
sahf
test
jns
push
scas
or
xor
movb
add
jo
sub
arpl
sub
test
pusha
sub
out
push
lret
scas
mov
subb
pop
bnd
jnp
xor
hlt
cmc
dec
ret
xor
mov
call
jne
sbb
jbe
in
xor
rolb
cld
add
orb
or
lock
notl
add
je
pop
add
cmpsl
pop
mov
mov
clc
decb
adc
adc
mov
shrb
sub
push
jl
ja
push
int3
les
les
cwtl
std
cwtl
mov
fidivs
jmp
pop
sub
rcl
dec
ret
sbb
fcoml
xor
ret
mov
add
adc
hlt
pop
mov
lea
loopne
loopne
pop
enter
cmpsb
sahf
xchg
dec
xor
dec
test
xor
xchg
mov
mov
cmp
inc
mov
lret
rorl
outsl
cmc
jo
xlat
cmpl
xor
lds
jl
subl
cli
inc
mov
mov
pop
dec
enter
cmp
push
pop
inc
dec
popf
jp
mov
scas
fisttpl
pusha
in
lods
test
je
dec
and
xchg
insl
popf
lock
sbb
pop
cmp
stos
inc
ret
outsb
enter
pop
add
dec
sbb
pop
test
lea
adc
repnz
shll
jp
popf
imul
inc
pop
pusha
xchg
push
popl
aad
cmp
cmc
dec
ret
xchg
imul
mov
jge
push
cli
adc
out
shlb
fidivrl
fs
imul
movsl
mov
insb
movaps
cli
mov
shll
rcrb
std
push
repnz
movsl
cmp
mov
xchg
sbb
adc
push
push
sbb
jo
xor
jb
mov
sub
test
mov
mov
xchg
stos
cmp
and
push
pop
lock
mov
divl
push
ja
mov
mov
shlb
hlt
ret
xor
enter
ljmp
cmp
sbb
testl
les
imul
sbbb
or
test
mov
jl
lea
out
mov
xor
mov
mov
sub
xor
dec
icebp
mov
ss
mov
pusha
in
xchg
adc
push
into
inc
xlat
aad
loopne
cmp
lret
and
and
push
ja
add
and
call
adc
mov
sub
rcll
orl
push
dec
xor
out
sub
xchg
shlb
insb
aad
jae
cs
and
test
loope
in
js
dec
fs
mov
daa
xorb
pop
sbb
lock
pop
lock
xchg
fsin
call
enter
shr
add
cmp
pusha
add
aad
cwtl
lock
pop
add
ja
pop
fimull
fwait
aas
cs
cmpb
sbb
mov
out
pop
subb
push
jmp
mov
sub
jmp
iret
mov
push
out
or
inc
in
and
jo
icebp
xchg
das
or
out
scas
rclb
scas
ret
add
les
or
inc
test
add
cmc
pop
mov
jmp
jne
pop
test
sbb
in
push
addl
ficomps
jle
hlt
lds
arpl
test
inc
cltd
test
cmp
adc
mov
adc
shrl
mov
cs
add
std
outsb
jno
leave
add
push
cli
ja
mov
gs
pop
sti
add
in
mov
and
aam
fiadds
call
push
incb
xlat
sbb
mov
inc
mov
push
sahf
adc
adc
ret
hlt
pushl
nop
cld
repnz
lock
adc
push
or
push
das
mov
cmpsl
aam
out
mov
mull
mov
mov
dec
pop
mov
push
push
xchg
jecxz
lods
adc
mov
leave
std
ret
idivl
fwait
push
mov
adc
imul
fistps
loop
xchg
mov
jl
ja
or
dec
inc
cmpl
rcrl
dec
inc
subb
pop
push
fstl
pop
mov
das
imul
ljmp
sub
lods
int3
mov
mov
test
shl
push
dec
mov
lods
cmpsb
jbe
jb
rorl
dec
push
mov
and
pop
sbb
xchg
jne
inc
pop
lods
xor
aas
push
out
popa
sub
xor
xor
pushl
les
mov
pushf
dec
xchg
roll
dec
mov
jge
cmp
fdivl
rclb
insl
pusha
scas
sti
xor
adc
insl
lret
push
es
jo
adc
fsubs
pushf
test
lods
jbe
in
adc
mov
push
nop
addr16
nop
clc
pop
mov
decl
add
js
xchg
pop
add
sbb
pushf
bound
pop
loop
dec
mov
ret
je
repz
ffree
aas
and
rorb
mov
pusha
fdiv
std
stc
jae
test
and
push
jb
mov
pop
icebp
and
imul
and
cmp
mov
pop
movsb
clc
shll
fistpll
jmp
jb
inc
xor
adc
dec
xchg
and
adc
push
in
adc
faddl
aam
cmp
dec
pop
cmp
cltd
jbe
pop
jl
sti
adc
insb
mov
test
shl
js
mov
sahf
ds
xchg
push
push
hlt
xor
in
pop
pop
sbb
clc
inc
mov
aas
and
icebp
sub
iret
js
popf
andl
cmp
insl
pop
iret
lock
pushf
jnp
icebp
or
xlat
and
mov
inc
in
xchg
jl
push
and
jge
add
sub
lock
sbb
dec
pop
add
jbe
mov
decb
jl
push
add
dec
xor
cmc
shr
int3
mov
pop
sub
loopne
pop
cmp
sarl
and
mov
add
xor
jle
cmc
push
pusha
mov
add
push
inc
addb
nop
imul
mov
mov
out
fnsave
stc
or
not
addl
popa
cld
push
outsl
fdivrs
pop
xor
shlb
cli
pop
cld
cmp
fsubl
push
imul
jb
push
mov
mov
cli
jge
and
mov
sbb
es
add
sahf
mov
add
jge
ja
cs
or
inc
rclb
dec
dec
out
sbb
lods
sti
push
cmpsl
inc
clc
jl
sti
loop
imul
pop
test
rcll
mov
das
loope
adc
cmpsb
sbb
xchg
pop
andb
xor
cwtl
and
ret
shl
scas
ds
mov
dec
push
mov
sub
adc
daa
jo
dec
mov
mov
sub
mov
outsb
cs
mov
imul
bound
icebp
dec
jne
pop
cs
or
addr16
jle
ds
xor
mov
leave
pop
jno
push
les
mov
ds
or
xchg
int3
dec
adc
xchg
popa
flds
mov
roll
jge
rorl
dec
sbb
or
jns
add
inc
scas
push
xchg
pop
cmp
jmp
sbb
mov
repnz
test
pop
cmp
jecxz
sbb
nop
adc
dec
sub
fs
test
cli
mov
mov
push
sub
push
push
cli
ds
cmp
and
cli
icebp
movsb
pop
fucompp
dec
insb
dec
mov
outsl
loope
ret
aas
push
fbld
adcb
shll
mov
sbb
push
mov
cmp
fcomip
jmp
test
pusha
and
adc
mov
xchg
lods
push
cmp
cmpsb
in
xor
idivl
add
xor
xchg
jb
rcll
jo
mov
push
adc
lret
fiadds
add
inc
movsl
dec
add
fbstp
nop
loopne
dec
es
pop
andl
dec
out
fbld
ficomps
add
and
inc
add
mov
jb
inc
pop
jno
rol
mov
shr
inc
mov
pop
sbb
push
mov
mov
jnp
pop
mov
out
in
in
mov
out
addr16
test
jle
adc
add
out
inc
fwait
cmp
fildll
mov
repnz
imul
or
insb
pusha
in
inc
jp
adc
lcall
mov
notl
subb
dec
adc
push
sub
sub
lods
pop
cli
xor
outsl
sbb
mov
xchg
subl
dec
jecxz
push
add
scas
mov
sarl
pushf
loopne
fwait
fwait
aam
push
in
cmp
pushf
fs
pop
in
fcmovne
shrb
cwtl
add
xor
jg
in
jno
mov
and
dec
popa
mov
adc
pop
int3
jo
pusha
loope
adc
xor
rcr
jp
cmp
mov
or
push
out
andb
sub
jp
and
cmc
cmp
fstpl
mov
ja
pop
mov
ret
mov
out
sub
cmpb
icebp
push
pop
je
push
jae
in
rcl
dec
icebp
sub
pop
enter
fwait
pop
rcrb
mov
roll
add
cmp
test
outsb
jl
clc
subl
rcrl
or
dec
outsb
cwtl
pop
fdivl
fucomip
in
aam
pop
loope
pop
xchg
gs
addr16
fcoms
xor
cs
inc
sub
stc
xor
jnp
pop
orb
and
add
sub
mov
pushf
add
lret
inc
insb
jne
imul
or
push
lea
and
mov
push
in
sbb
stos
mov
adc
xchg
jl
jle
pop
mov
jbe
fidivl
and
mov
sbb
dec
rcr
gs
outsl
xchg
mov
int
mov
push
cmp
nop
sub
push
test
dec
xor
js
cs
loope
adc
movsb
or
les
sub
jae
add
inc
adc
pop
loopne
clc
js
push
shlb
jle
outsl
cmp
mov
xchg
xlat
js
insb
pop
popa
test
nop
addr16
fs
adc
pop
cmc
icebp
ss
push
fisubs
ds
dec
std
xchg
lcall
lods
jbe
aas
push
fdivs
cltd
push
rcll
int3
add
cli
jo
lods
lods
loopne
aam
cmc
or
mov
rclb
pop
testb
out
inc
clc
call
je
ret
scas
dec
dec
or
jmp
movsl
stos
mov
bound
jne
fwait
adc
repz
rcll
xchg
or
outsl
dec
clc
xchg
out
adc
mov
sub
call
daa
pop
mov
xchg
mov
mov
mov
mov
std
mov
jnp
pop
xchg
jnp
sbb
jb
and
and
jg
fmull
push
push
lret
push
mov
jge
cwtl
push
inc
lods
fidivrs
aas
mov
enter
xchg
inc
xor
les
repz
lods
js
jo
mov
movq
sbb
mov
mov
out
mov
fistpl
cmp
mov
and
out
push
adc
pushf
pop
fstpt
jmp
add
lods
mov
mov
movsl
add
js
cmp
lock
repnz
xchg
ljmp
nop
adc
repz
das
call
cmp
sub
dec
xchg
dec
pusha
sub
fisttpll
pop
hlt
inc
pop
std
mov
in
jl,pt
or
inc
sub
pop
test
dec
push
lret
out
fisubrs
add
ja
fnstsw
out
dec
sbb
or
mov
mov
mov
push
or
mov
fisubrs
jg
sub
cltd
mov
rcrb
sub
push
adc
xchg
inc
pop
fwait
jnp
fiaddl
push
push
pop
test
xor
and
dec
stos
cmp
push
sbb
mov
xchg
push
movl
arpl
insl
cli
repnz
mov
lret
xchg
or
in
in
push
push
add
mov
arpl
notl
shll
inc
mov
mov
ljmp
cmp
in
repz
mov
sub
movsb
push
cmpsb
sti
mov
arpl
fldenv
add
test
fsubrl
cmc
sbb
dec
lret
xor
add
cmp
xchg
iret
cmc
out
bound
push
push
cmpl
sahf
ljmp
xchg
rcll
dec
std
stos
and
dec
shll
cmp
out
cmp
aam
xchg
xchg
fmull
ficompl
ret
xchg
test
or
mov
in
xchg
pop
pop
lods
lock
in
mov
mov
dec
decb
fsubrp
pop
jns
dec
sbb
enter
pushl
aaa
mov
in
out
cmpl
ss
imul
into
test
xchg
ret
ja
int
adc
loopne
popa
adc
shll
jae
lahf
icebp
add
fdivp
repz
push
jae
ljmp
mov
test
negl
pop
es
repnz
stos
pop
rolb
scas
pop
idivl
bound
sub
push
dec
rclb
dec
and
dec
mov
sub
daa
insl
clc
loop
pop
lea
and
fcmovnbe
mov
or
inc
push
sbb
xlat
mull
aam
filds
lds
rcl
outsl
add
outsb
outsb
stc
lret
or
sti
cmp
jecxz
pop
push
sbb
imul
test
push
fdivrs
push
cmc
lcall
clc
pop
mov
fidivrl
repnz
add
in
xor
mov
stos
mov
sbb
and
cltd
ds
pop
jo
test
loop,pn
cmp
rclb
add
jbe
pop
pusha
push
shlb
jge
sar
call
stos
and
add
jbe
loope
mov
adc
lock
lahf
pop
ret
sbb
rclb
and
test
addb
dec
pop
adc
repnz
cmpsb
cwtl
push
add
in
jecxz
shll
jecxz
sub
push
int
scas
cmpsb
cwtl
add
popa
sub
pop
add
sub
movsb
jle
lock
movl
test
in
aam
mov
jae
mov
lock
les
cmp
push
sbb
ss
jge
adc
add
and
fstpt
das
imul
call
icebp
push
inc
lcall
cld
cli
pop
adc
movsb
or
xor
push
stos
filds
das
mov
iret
add
xchg
pop
hlt
jnp
cmpsb
push
test
hlt
cwtl
fistpll
push
in
inc
and
adc
test
call
mov
int3
loopne
add
adc
out
mov
inc
mov
pop
dec
mov
lods
out
fs
adc
push
add
pushf
fldl
cld
xor
pop
cwtl
fistps
enter
rcrb
adc
push
test
rcrl
sbb
inc
out
jmp
sti
scas
mov
or
test
mov
arpl
data16
aaa
add
add
and
or
repz
jae
int
dec
inc
xchg
out
insl
jge
mov
mov
mov
inc
addr16
push
mov
mov
pop
scas
sub
out
fbstp
repnz
js
idiv
jno
and
sub
ljmp
xchg
mov
push
cmpsl
cld
push
add
je
jnp
js
mov
xor
aad
sbb
dec
loopne
ds
push
push
jle
mov
hlt
out
arpl
into
mov
add
push
add
fs
add
pop
mov
loopne
mov
and
or
clc
adc
outsb
andb
or
sub
scas
jle
mov
mov
or
icebp
leave
ss
mov
mov
loopne
std
xchg
push
or
jl
cld
out
sub
add
shlb
rol
roll
mov
shl
pop
cmp
mov
repz
insb
divl
pushf
rolb
cmp
decb
scas
mov
jnp
popl
xchg
out
out
push
mov
add
cmp
mov
lahf
cmp
pushf
enter
subb
aam
outsb
call
jle
arpl
lods
xchg
jb
test
add
sbb
mov
or
hlt
mov
push
adc
pop
and
loop
add
jp
ffree
ljmp
sub
aaa
xchg
loope
jmp
sbb
test
push
xchg
xchg
aas
xor
sbb
out
jl
adcb
ljmp
and
lock
fldl
sahf
test
mov
data16
add
or
sub
cmp
cmp
jl
aam
enter
cmp
sbb
imul
push
mov
stos
cmpsb
jns
cmp
adc
add
push
rcll
add
cbtw
dec
cmp
lods
shlb
jp
call
ja
sbb
aam
pop
jecxz
das
mov
dec
pop
mov
or
pop
leave
call
push
mov
insb
sub
push
insb
idivl
jno
dec
add
push
jg
pop
or
shll
shrb
cmp
rcrb
jp
jo
loop
daa
push
pop
gs
nop
mov
pop
sbb
jnp
mov
cmp
jns
in
icebp
add
lock
adc
clc
or
adc
cmp
ljmp
mov
xor
xor
add
shrb
loopne
add
adcl
xchg
loopne
inc
bound
or
roll
inc
xchg
dec
add
arpl
mov
les
ja
mov
out
in
push
sbb
lock
cld
cmp
repnz
subl
fdivl
xchg
push
mov
cmp
ret
xchg
jmp
sbb
xor
data16
sahf
insb
and
lock
adc
outsl
push
push
retw
sbb
cmpsb
fisubs
pushf
outsb
divl
sbb
jl
aaa
lock
scas
jmp
repnz
lds
pop
je
loop
cmp
movsb
adc
cmp
sbbl
and
out
mov
pushf
insb
cmp
and
mov
inc
mov
sbb
xor
lret
loopne
xchg
pop
and
adc
mov
ljmp
mov
outsb
jle
jle
jne,pn
fwait
lock
pop
imul
mov
push
adc
pop
inc
roll
sub
fs
imul
std
jle
sub
mov
cmp
xlat
cld
inc
push
aam
scas
inc
jl
or
lahf
mov
std
jo
or
and
and
cmp
mov
jge
pop
fadd
pusha
sti
pop
ficoml
sbb
inc
dec
fdivr
xor
sub
iret
int3
jg
shl
mov
rorb
push
or
push
xorb
or
std
arpl
pop
popf
scas
pop
jl
pop
add
dec
int3
xchg
mov
jg
or
adc
or
jle
pop
push
mov
push
xchg
enter
movsl
std
ficompl
inc
or
fwait
pop
mov
xor
int
mov
or
mov
xchg
jecxz
xor
push
adcl
mov
in
push
repnz
xchg
mov
loopne
rorb
inc
ds
sub
je
jge
cld
mov
test
inc
jp
arpl
fisubrl
cmc
pop
lods
add
dec
add
loop
inc
xchg
repnz
shll
fwait
js
les
pop
insb
not
out
fsubrs
and
mov
clc
cli
mov
es
xor
sarl
lcall
mov
jl
das
mov
rclb
or
dec
adc
loop
xchg
xchg
popa
dec
inc
push
or
test
mov
mov
xchg
scas
pop
add
out
clc
mov
outsl
pusha
inc
dec
addl
movb
out
out
jne
add
sbb
leave
inc
push
daa
fcoms
mov
push
xorl
popa
leave
fildl
fadds
fwait
in
add
ljmp
add
mov
sarb
and
cmp
fwait
outsl
cmp
push
push
pop
cli
mov
cwtl
add
inc
add
sub
in
fwait
cli
add
pop
push
incb
pop
add
sub
push
mulb
inc
mov
insl
ret
adc
push
jp
negl
divb
adcl
sbb
adc
mov
jp
xchg
mov
cmc
sti
out
push
xlat
mov
xchg
inc
cwtl
les
sbb
inc
pop
mov
add
dec
adc
lahf
in
push
icebp
jnp
xlat
and
sarl
jnp
pusha
mov
ret
inc
mov
mov
mov
idivl
in
and
arpl
jne
push
xchg
lcall
icebp
loopne
pusha
mov
cmpsl
xchg
mov
fisubs
add
lcall
cmpsb
push
mov
and
pop
fidivrl
fsubrs
loop
iret
push
sbb
enter
push
ja
insl
adc
dec
mov
jmp
andl
jbe
adc
ss
stos
in
xchg
imul
jo
inc
shr
divb
movsb
mov
jle
adc
sbb
add
inc
shrw
add
aas
cmp
inc
je
xchg
lahf
mov
aad
push
scas
sti
cmp
xor
cs
das
dec
jecxz
rcrb
cli
je
mov
pusha
jb
push
ss
add
out
lcall
push
mov
sahf
std
rcl
cwtl
inc
fisubl
movsb
filds
xor
sub
loop
pop
cld
sarb
fs
repz
popa
mov
enter
lcall
jbe
xchg
jno
lcall
jnp
mov
je
out
add
aad
stos
nop
faddl
add
mov
add
ljmp
pushf
daa
imull
pushf
cld
mov
loop
add
subb
xchg
test
xchg
insl
jge
je
ss
daa
push
pslld
xchg
push
cmp
xor
pushf
stos
pop
fidivs
push
mov
push
xlat
xor
add
cli
mov
addr16
rcl
push
out
xchg
and
testl
pop
jg
jg
cwtl
or
cs
add
lock
in
mov
inc
dec
in
stc
sbb
or
add
enter
mov
pop
fdivrl
mov
lock
cld
je
je
inc
popa
loopne
sub
js
xorl
mov
rol
addl
aam
aas
cmp
call
mov
cmp
scas
mov
fs
popf
xor
jne
cli
sub
mov
adc
add
mov
ds
and
jl
add
xor
rcrb
incl
and
ret
dec
mov
mov
les
or
xlat
xchg
es
out
xchg
mov
dec
mov
sahf
add
sbb
mov
add
cmp
mov
incl
or
imul
inc
test
and
sbb
fiaddl
das
cwtl
lcall
jl
inc
insb
adc
push
push
popa
dec
jb
mov
call
inc
lretw
int
pop
mov
popa
mov
outsl
sbb
xor
pop
fisttps
cmpsb
mov
pop
sbb
addb
mov
mov
leave
fstps
jp
pop
cmp
imul
shlb
inc
mov
out
inc
imul
push
jne
and
xchg
rolb
add
fildll
ret
pop
inc
testl
xchg
or
push
sbb
adc
mov
rolb
ja
xor
cwtl
outsl
mov
mov
xchg
jle
rol
pop
cli
dec
pop
je
test
sub
loopne
xchg
movsb
and
inc
movsl
push
mov
mov
pop
lret
les
inc
int
push
out
mov
push
fldcw
add
inc
pop
cmp
xchg
in
mov
insb
insb
add
ss
or
or
aad
rorb
test
int3
mov
pusha
sub
mov
mov
setp
xor
scas
std
or
pop
mov
jp
movsb
repz
mov
sbbb
or
nop
insl
push
pop
lret
out
jo
push
stc
or
jmp
mov
sub
rcll
lock
pop
std
mov
scas
stos
idivl
push
std
sbb
es
add
push
add
in
jmp
mov
sbb
xchg
outsb
pop
push
mov
adc
shl
adc
pop
test
mov
xchg
pushf
popf
fadd
mov
and
mov
out
pop
ret
push
mov
movsb
jbe
clc
push
push
sub
mov
cs
scas
pop
frstor
ds
data16
cmc
inc
mov
xchg
push
or
lock
push
das
cmp
jb
adc
hlt
std
or
cld
repnz
and
lcall
in
loop
mov
dec
push
cmp
push
xor
add
loopne
lock
sar
roll
call
mov
in
ret
insb
mov
jl
test
ss
sbb
inc
add
jae
inc
je
cmpb
je
rol
sub
push
pop
pop
je
or
flds
sub
js
mov
adc
inc
test
movsb
out
jne
or
cmp
sahf
pop
jae
mov
fimull
fdivrl
mov
insb
sbb
pop
mov
cld
mov
pop
popa
lcall
jmp
repz
push
mov
jg
add
fdivs
test
xchg
push
js
xchg
pushf
out
add
xadd
stos
enter
pusha
push
sub
sti
fisttps
ljmp
inc
lea
xor
adc
loopne
pop
jo
fisubs
in
fdiv
test
jmp
pop
xor
iret
movsb
pop
push
sub
jnp
mov
or
scas
adc
add
lods
xchg
inc
add
orb
or
sbb
xor
jecxz
rorb
or
cmp
push
out
pop
cmpsl
xor
js
xchg
inc
and
xchg
jmp
andl
sbb
or
sub
pusha
adc
into
out
subb
mov
pusha
lcall
scas
jl
test
daa
lock
sbb
fst
int
js
fiadds
ds
add
jmp
or
inc
insl
mov
outsl
adc
orl
clc
in
or
add
add
gs
push
and
pop
inc
imul
jl
loop
lds
push
pop
sbb
or
dec
push
inc
sub
mov
jp
cltd
lock
subb
add
fisttps
push
aaa
loope
mov
call
xchg
add
add
or
paddsb
or
or
mov
pop
test
lock
or
fs
call
aad
lds
dec
sbb
push
idivb
pop
jne
nop
int
dec
aaa
repnz
lcall
dec
cmp
pop
jmp
cmp
les
ja
mov
add
or
adc
jecxz
ljmp
es
inc
sbb
es
les
sub
xchg
cmp
movsb
mov
das
inc
sbb
iretw
mov
mov
gs
add
mov
enter
aad
adc
in
jne
outsb
dec
je
lcall
adc
dec
push
jbe
and
cwtl
mov
mov
dec
adc
fs
bound
jno
enter
sbb
rcrb
inc
pop
and
pusha
aad
mov
xor
lahf
dec
add
lods
test
mov
adc
add
jno
and
icebp
sbb
inc
xlat
jg
jg
outsl
or
test
ljmp
add
cld
into
mov
mov
movsl
ds
mov
test
outsl
jg
test
mov
cmp
mov
fidivl
jmp
inc
pop
in
rcrl
fwait
lret
sbb
loop
lea
push
adcl
sbb
mov
cmpsl
jmp
rorl
mov
inc
pop
cwtl
cmp
adc
inc
inc
xchg
mov
jl
adc
icebp
jbe
jle
rcl
leave
out
xchg
aam
stos
inc
das
mov
jbe
fdiv
movl
shr
movsb
mov
push
pop
pop
shl
mov
mov
dec
lods
fists
and
movsb
ds
mov
mov
sbb
in
jae
dec
dec
pop
adc
pushf
jp
mov
ret
sbb
sub
cs
pop
mov
jne
or
jl
inc
hlt
xor
cmp
add
add
push
mov
mov
push
add
jle
ljmp
jo
push
fisttpl
lods
xchg
and
or
or
int3
repz
pusha
jecxz
pop
dec
fs
mov
sub
aam
push
xchg
add
lock
pop
adc
dec
push
sbb
mov
movsl
int
aad
outsb
ja
fsts
add
xchg
loope
cmp
xchg
add
push
js
jne
aaa
lcall
aas
mov
mov
jbe
jl
or
pop
push
loope
icebp
jbe
loope
mov
sti
aad
loopne
pusha
push
push
call
pop
lock
aad
xchg
loopne
mov
pop
rcrl
std
aad
clc
nop
jb
imul
jnp
or
jne
pop
js
and
or
mov
fidivs
imul
rclb
inc
fs
add
push
fcomi
int3
push
jle
add
gs
out
das
jge
mov
or
mov
stos
pop
inc
sbb
push
repz
test
out
fiaddl
mov
sbb
sbb
or
scas
out
fiaddl
cmc
fldenv
xor
shlb
xor
push
xchg
mov
out
cwtl
push
adc
jg
fbstp
outsb
add
fcmovnb
outsl
lds
pop
iret
xchg
insb
jbe
mov
dec
jmp
push
jno
fwait
or
lds
pop
test
scas
idiv
or
out
mov
cltd
sub
lret
push
stos
adc
cltd
adc
data16
fst
ret
shlb
xor
push
xchg
inc
mov
add
test
loopne
add
divb
into
pop
cld
lods
fyl2x
push
adc
fmul
shll
or
ds
sarl
xor
sbb
cmp
jb
or
pusha
xor
jecxz
mov
add
fs
jecxz
fsub
push
sub
iret
push
dec
stos
orb
xchg
addr16
pop
lods
imul
mov
push
pop
push
insb
orl
shl
mov
cmpb
pop
cmp
and
ja
movsb
inc
inc
das
cs
push
test
jg
xor
adc
subb
cli
pop
dec
mov
inc
cmp
xchg
mov
data16
ret
push
pushf
andl
je
or
xor
pop
push
inc
loop
sbb
aas
dec
dec
cmp
hlt
out
loopne
ja
shll
sbb
xchg
jecxz
pop
subl
cmp
and
add
and
dec
rcll
aas
notb
jae
or
sbb
movsb
sar
xchg
xor
ljmp
mov
insb
mov
mov
scas
clc
lock
pop
push
or
fildl
or
es
test
cltd
sub
dec
sub
push
xor
inc
add
aaa
mov
test
or
mov
sbb
sub
jmp
inc
cmp
mov
pop
enter
pop
sbb
xor
jbe,pn
lret
adc
les
jb
push
push
mov
into
out
sub
lock
push
add
stos
stos
pop
enter
loop
mov
shlb
cmp
push
push
mov
sub
inc
sbb
or
aaa
cld
jmp
pop
mov
outsb
and
and
in
ja
jp
or
dec
pop
sub
mov
add
cmpsl
mov
movl
sbb
jno
pop
push
push
jbe
jg
mov
mov
mov
test
test
xchg
pushf
sub
adc
rol
mov
push
jo
and
pop
aas
cmp
es
jecxz
sbb
out
int3
or
cli
cmp
sbb
aaa
ljmp
fcmovne
cmp
sub
mov
pop
sub
out
and
adcl
jp
loopne
dec
enter
mov
cmc
loope
bound
je
cmpsl
jne
lea
or
jl
adc
pop
mov
in
add
pop
ss
aaa
lcall
or
insl
and
ret
cld
add
xchg
movsb
movsb
add
vrsqrtps
jo
sbb
pop
push
push
push
cmpsl
aas
cmp
in
push
aaa
mov
pop
js
shrb
push
mov
iret
adc
cli
sbb
or
mov
lea
mov
xchg
mov
xchg
ds
xchg
xchg
mov
dec
mov
xchg
stos
adc
push
cmp
outsl
movl
cmpl
fwait
cs
incb
mov
push
or
addr16
pop
lods
add
call
fcomps
cmpsl
aas
and
or
and
pushf
subl
hlt
outsb
mov
mov
mov
sahf
daa
flds
adc
and
movsl
aad
jle
add
inc
xor
mov
adc
imul
js
js
out
mov
std
xor
loop
lret
inc
lods
mov
cli
in
cmp
cmc
dec
sahf
push
test
mov
pop
push
mov
jp
sub
jbe
push
pop
add
ret
nop
inc
cmp
mov
sti
cmpsl
mov
xchg
cmp
dec
push
call
adc
mov
andb
inc
mov
pushf
fistpll
mov
clc
popa
test
outsb
ret
push
add
scas
jo
test
inc
and
mov
pop
pushf
mov
das
sbb
adc
sbb
lds
jo
jns
mov
jge
xor
movsb
hlt
arpl
cmpsl
dec
ret
repnz
jp
fucom
fnsave
popa
pop
mov
int3
aas
loopne
test
sub
in
adc
out
lahf
mov
inc
push
loopne
pop
scas
or
dec
sub
or
outsb
in
insl
repnz
adcb
push
xor
pop
sbb
mov
dec
decb
sbb
adcb
in
mov
or
jl
popa
add
dec
rclb
lds
sbb
pop
adc
addb
mov
les
test
fmuls
xor
cld
push
out
fisttps
pop
inc
push
xchg
add
out
fadds
mov
mov
inc
aaa
cli
ds
sbb
fdivrs
fimull
and
pusha
mov
movsb
popf
pop
mov
lahf
mov
popa
int3
pop
inc
mov
jnp
icebp
inc
adc
fcomip
jne
dec
lea
sub
fadd
ljmp
add
outsl
sarl
add
mov
jno
jbe
imul
repz
enter
xor
out
mov
jb
gs
push
out
jmp
push
push
push
sub
data16
xchg
in
mov
lock
or
mov
clc
mov
insl
clc
cmp
outsl
mov
je
wbinvd
jl
push
mov
and
cmc
aam
add
push
testl
or
mov
popw
inc
jno
call
jns
fdivr
test
ss
test
imul
cli
xchg
into
sbb
insb
sbbl
push
mov
jecxz
int
and
lahf
test
ss
and
xchg
scas
and
pop
sub
leave
iret
or
push
jnp
mov
and
mov
or
mov
cmp
jl
loopne
shll
push
sub
pusha
lock
push
pusha
mov
sbb
lods
mov
xchg
inc
fsubrp
mov
in
lea
mov
and
insb
inc
and
shll
add
fldt
push
pop
cmp
outsb
inc
mov
adc
push
test
mov
xsave
enter
gs
js
and
xor
outsl
out
hlt
pop
push
stos
xchg
adc
test
clc
ja
pusha
xchg
fcomp
xchg
adc
xchg
push
push
add
jnp
or
xchg
icebp
lock
inc
push
mov
ljmp
cmc
add
je
or
aam
mov
or
mov
xlat
pop
notl
push
iret
push
mov
les
adc
mov
lock
das
xchg
cmp
je
fisttps
ror
xor
sarb
sti
push
test
push
push
je
sub
roll
or
jno
cld
orl
lcall
add
lea
xchg
rcl
jae
inc
je
mov
xchg
xchg
dec
adc
das
jp
pop
xchg
sarb
aaa
dec
sahf
int3
lret
xor
inc
and
and
adc
jge
negl
les
cmp
popa
or
bound
cmpsl
imul
push
je
scas
pop
clc
jle
cmp
orl
ret
mov
or
push
and
xor
lcall
call
hlt
sahf
jle
adc
sub
sub
push
dec
mov
enter
ja
outsb
cmp
mov
popf
les
shlb
sbb
add
jnp
leave
das
adc
ds
mov
xchg
icebp
setne
jl
ds
fdivl
pop
add
mov
xorl
ficoms
filds
sarb
pop
cmp
nop
ss
add
sbb
js
push
scas
daa
pop
jmp
out
cmp
xchg
jno
mov
push
and
or
cmp
jecxz
add
sub
clc
fsubl
out
not
xchg
mov
ljmp
fnsave
sbb
or
hlt
and
pop
outsb
dec
sbb
adc
cld
imul
dec
mov
adc
les
aas
jbe
mov
rorb
into
add
inc
jo
ret
jo
xchg
sahf
call
stc
insl
pop
pop
push
popa
cmp
add
cwtl
sub
push
jae
je
mov
cmp
out
mov
mov
xor
out
ss
xchg
mov
fisubrs
iret
jp
add
in
push
popa
mov
xor
lds
ret
push
adc
js
cmp
cs
test
sbb
inc
jp
and
pushf
push
mov
ss
xchg
sbb
add
xlat
cli
jnp
scas
cwtl
mov
ss
adc
call
aam
outsl
add
iret
stos
shl
push
insl
mov
adc
mov
data16
sar
push
mov
add
pusha
je
sbb
pop
push
das
dec
push
push
or
inc
roll
je
pop
adc
cmp
je
cs
sti
leave
hlt
sub
lock
clc
dec
lds
and
adc
stos
sub
pop
sub
ljmp
rorl
xor
or
loope
dec
inc
add
sbb
addb
movsl
add
push
inc
cmp
popa
cs
inc
mov
icebp
sbb
push
pop
jmp
mov
add
jge
cmpsb
mov
mov
loope
ds
push
pop
add
xchg
xchg
fcomi
lret
mov
add
cmp
test
jl
sub
loopne
fsubrs
sbb
inc
xchg
jne
cld
xchg
gs
sahf
mov
outsb
or
xchg
ja
loope
push
mov
stc
test
test
mov
pushf
rcrb
and
mov
push
mov
sbb
mov
lock
test
and
xchg
shrl
and
ret
movsb
in
insl
fwait
mov
jg
loopne
xchg
rclb
mov
inc
mov
bound
clc
mov
jbe
roll
lret
sub
lods
xchg
mov
cmp
ss
pop
int3
inc
cmp
mov
popf
ficoml
int3
inc
imul
dec
jo
shll
out
dec
and
mov
call
sbb
sub
jecxz
fcomip
adc
or
push
inc
pop
loope
das
xchg
lea
push
pop
leave
mov
cli
or
inc
cli
jne
popf
stc
pushf
insb
push
data16
push
icebp
nop
push
mov
xchg
jle
or
mov
js
inc
fiaddl
push
mov
jbe
push
outsb
pop
outsb
jle,pn
push
cmp
les
lods
iret
sbb
add
mov
inc
jbe
mov
lcall
popa
loopne
dec
xchg
cs
gs
push
icebp
in
rcrb
sub
orb
ret
cmpsl
sarb
test
inc
sahf
mov
jae
rorb
mov
mov
es
int
rorb
mov
outsb
movsb
adc
loope
mull
or
add
fidivrl
scas
lcall
mov
mov
xor
jp
sbb
cwtl
xor
adc
data16
enter
adc
jno
or
push
sbb
cmpsb
xor
cs
subb
sub
inc
lcall
adc
movsb
xchg
mov
outsb
inc
ret
rcll
adc
imul
add
testb
adc
sbb
dec
mov
jl
jle
es
mov
das
arpl
std
add
pop
rcr
dec
std
adc
shr
sub
bound
std
cwtl
inc
in
shl
aaa
pop
scas
push
add
data16
loop
in
push
out
clc
shll
mov
sbb
icebp
push
cmp
xchg
sub
jno
mov
cmp
mov
cmpsl
mov
sbb
cld
adc
nop
rolb
mov
cmpsl
sti
push
enter
lret
rolb
lret
outsb
and
mov
mov
cwtl
sbb
lods
insb
outsl
fstps
stos
loop
cmpsl
js
es
xor
arpl
sbb
outsb
sbb
les
in
dec
movb
in
and
test
xor
addb
int3
call
mov
lock
outsl
cmp
and
adc
ljmp
aam
push
push
pusha
add
fwait
sbb
es
sub
cltd
movsb
addr16
or
mov
xor
xchg
dec
xor
cmpsb
int3
les
jp
stos
ljmp
leave
jp
mov
push
cmp
mov
mov
sbb
repz
mov
sahf
push
pop
imulb
cmp
jbe
pop
and
cmpl
push
mov
pop
adc
jbe
bnd
lret
cmpsb
nop
xchg
test
mov
aam
mov
mov
inc
xlat
js
movsb
dec
jle
xor
fsubrs
fiaddl
scas
divb
mov
fsubrl
inc
cmpsl
push
stos
and
iret
xor
push
and
cmpsl
jecxz
mov
adc
inc
push
bsr
ds
mov
loopne
mov
hlt
dec
dec
sub
and
jp
push
ss
lahf
dec
push
wbinvd
bound
add
mov
dec
bnd
dec
xchg
nop
pop
mov
test
divb
out
push
xchg
sahf
mov
jns
xchg
lods
je
mov
mov
mov
fwait
pop
fsubl
cld
push
pop
dec
ds
lahf
jo
inc
iret
test
jnp
test
movsl
push
sbb
addl
loop
jle
jle
dec
ret
int
psrad
jge
sbb
test
dec
inc
adc
orb
xchg
push
das
adc
stos
xchg
dec
inc
shlb
pop
add
and
push
jns
mov
inc
movsl
or
and
add
jmp
mov
adc
jg
inc
ret
or
nop
inc
inc
outsl
pop
mov
sarb
push
and
maxps
or
push
inc
aad
mov
mov
pop
push
mov
and
mov
mov
arpl
dec
pop
ffreep
aaa
mov
fs
pop
lret
inc
lods
mov
mov
jp
fcmove
ret
jecxz
sub
loopne
cmp
cs
sarb
push
dec
xor
dec
cmp
or
pusha
pop
lea
cmp
pop
cmp
sub
cmp
jecxz
push
sbb
stos
inc
dec
dec
loop
mov
pop
mov
push
loopne
sarl
ljmp
mov
dec
js
push
loopne
filds
sbb
add
mov
loopne
sti
mov
adc
stc
sbb
int3
sbbb
data16
jecxz
or
adc
test
mov
insl
xchg
jmp
xchg
dec
mov
popa
sub
je
faddl
adc
rcl
aaa
les
sub
test
cmpsb
mov
xchg
inc
sbb
pop
es
pop
addb
mov
maskmovq
mull
cmc
mov
scas
aad
cmp
fxch
jmp
sub
push
and
ljmp
pop
push
filds
ret
xchg
movsb
aam
sbb
js
jmp
out
rclb
sets
pop
mov
sahf
imul
scas
cmp
fdivl
pop
jne
xchg
stos
xchg
aad
xchg
fwait
stos
cmp
or
in
enter
arpl
and
jecxz
jns
repz
into
js
andl
sbb
mov
push
enter
in
dec
aas
mov
setle
ss
aam
push
lret
loope
adcb
in
mov
inc
add
ds
sahf
stos
adc
adc
push
sti
add
push
loop
pusha
fdivp
test
xchg
fimuls
mov
outsl
pop
pusha
jp,pt
pop
push
aad
daa
stos
pop
std
push
mov
popf
ljmp
lahf
lods
rorl
sti
hlt
mov
call
cmp
ret
lods
or
testb
push
js
xchg
repz
mov
xchg
push
sbb
xor
outsl
mov
clc
cmp
adcb
lds
mov
inc
arpl
rol
xor
ds
ret
inc
int3
mov
je
xchg
jbe
testl
mov
icebp
popa
loope
inc
mov
ljmp
mov
pop
outsl
aaa
shrb
dec
sti
in
jle
loop
out
lret
test
lret
sub
je
cmp
rorl
nop
pop
imul
loop
jno
mov
daa
test
sub
in
pop
or
test
data16
jl
push
fbld
xor
fistl
filds
mov
dec
jb
pop
inc
mov
jbe
clc
cmpsl
dec
dec
movsb
leave
adc
cs
ficomps
sub
arpl
movsl
cmp
add
push
inc
jno
xor
shrl
sub
adc
call
jl
push
lock
cmp
push
mov
pushf
jle
mov
rcrl
adc
lret
clc
dec
aaa
iret
out
sub
adc
dec
add
sbb
inc
cmp
xchg
sbb
int3
outsb
inc
or
mov
add
leave
add
stos
pop
ret
test
jo
std
test
push
pop
or
test
push
xchg
mov
xorl
adc
sbb
out
pop
test
push
in
pop
scas
pop
jns
add
popf
jns
jle
dec
mov
repnz
shr
mov
jg
sub
mov
or
cs
shr
int
sbb
jbe
sbb
and
testl
add
aam
sub
pusha
imul
cmpsl
pop
test
push
mov
push
push
lea
into
mov
scas
addb
and
jl
cltd
test
adc
arpl
jnp
in
pushf
cmp
fcmovu
fmulp
test
pop
in
cltd
sub
ss
push
xchg
add
fsub
les
pop
xor
inc
cld
sbb
loopne
ret
aam
inc
outsb
lcall
cli
in
cmp
mov
jne
les
out
mov
and
pop
sbb
lahf
jnp
bound
xor
pop
inc
xchg
shlb
mov
fs
fwait
mov
sbb
xlat
mov
cwtl
xchg
cmp
sbb
inc
dec
or
sbb
mov
or
mov
in
rclb
push
push
xchg
xchg
and
or
inc
enter
sarb
add
sub
call
pop
push
push
imul
sbb
mov
loopne
sbbb
push
mov
or
aaa
outsb
pop
addb
sub
icebp
lock
mov
sub
sbb
loopne
repnz
inc
loopne
jbe
push
scas
cmp
ds
lods
sahf
sbb
lods
push
movsb
sub
pop
divl
in
movsl
out
push
pop
jo
jmp
imul
push
pop
xchg
xchg
push
push
into
mov
shrl
add
ret
sub
sbb
adc
test
cmp
sbb
cmp
push
daa
mov
cmp
sub
push
ds
cmp
xorl
cs
rcrl
inc
xlat
add
stos
cmp
das
rcr
sub
shl
cmp
jmp
or
or
stc
dec
cmc
int3
ja
or
or
cmp
cli
mov
orl
mov
push
dec
je
sarb
mov
cmp
inc
loopne,pn
fisubrl
ss
cli
add
push
mov
add
aad
and
pminub
in
sbb
das
push
xchg
es
sbb
jb
fxch
push
mov
je
xchg
push
dec
pop
stos
iret
and
addr16
adc
adc
sbb
test
or
xor
push
mov
es
adc
push
call
inc
lcall
jg
mov
cli
lea
or
sub
and
lods
mov
sbb
sub
pop
inc
imul
mov
sub
add
cmp
cli
mov
mov
sbb
add
push
out
add
mov
cmc
or
mov
addr16
test
loopne
incl
fxch
or
nop
adc
imul
dec
lea
jle
adc
roll
enter
int
mov
pop
sbb
push
mov
sub
pop
push
rolb
subb
rcrl
notl
cmp
inc
call
pop
lret
daa
pop
jp
sbb
fs
jae
lods
fcmove
and
xor
jl
nop
and
aas
movl
xchg
or
aam
stos
roll
xor
mov
mov
add
sub
pop
add
or
lret
mov
in
push
leave
sbb
cli
jmp
adc
ljmp
mov
bound
and
inc
pop
push
xchg
inc
xlat
pop
sahf
mov
dec
and
in
dec
push
pop
sbb
cmpsl
push
cli
push
out
add
imul
inc
call
cmp
cmpsl
push
or
add
aaa
mov
popl
xor
and
cmc
loope
mov
sub
xchg
pop
inc
sarl
xor
stc
popa
or
inc
std
jnp
xchg
aas
arpl
fldl
inc
mov
and
adc
jmp
xchg
mov
mov
xor
mov
push
mov
cli
js
mov
sbb
xchg
aas
call
pop
push
sbb
hlt
sti
inc
repnz
cltd
mov
push
add
scas
hlt
push
cmp
test
shll
jo
xor
in
addb
cmpsl
inc
jnp
cmp
shll
into
daa
push
jl
adc
pop
jno
dec
dec
test
loope
mov
inc
or
jae
xorl
adc
mov
test
push
push
popl
sbb
and
add
and
push
add
insb
fimull
add
lcall
ja
loop
pop
jmp
add
xchg
jl
js
ret
das
pop
pop
imul
pop
test
rolb
add
and
inc
mov
scas
out
mov
les
mov
push
cmp
and
dec
sbb
fdivl
jo
and
ljmp
push
lods
outsb
inc
mov
aas
jmp
or
or
sbb
pop
mov
notb
sub
lahf
xchg
call
mov
rcl
addr16
fstl
cmp
shr
inc
add
test
cmp
mov
aam
rorb
lcall
insb
xor
sbb
pop
xchg
gs
adc
in
jno
jge
arpl
fisttpll
xchg
add
je
scas
hlt
call
cmp
mov
dec
shl
push
and
mov
mov
mov
ret
pop
fcomip
add
add
clc
add
dec
pop
mov
insl
shl
test
cmp
outsl
mov
stc
stc
dec
push
add
addr16
jmp
adc
dec
xor
push
ss
or
out
push
inc
js
je
test
dec
sbb
call
sbb
loopne
dec
and
js
lock
push
inc
popf
adcb
push
pop
jg
test
int
xchg
js
inc
and
gs
cs
fdiv
ret
pop
lea
addr16
fadds
inc
loop
xchg
add
in
cmp
cli
mov
cmc
cmp
lock
push
ja
es
add
cli
xchg
add
mov
or
cmpsb
push
ljmp
mov
adc
aas
jl
dec
push
push
in
lret
xor
xor
and
movb
jge
out
mov
hlt
scas
les
std
js
repz
sbb
mov
test
aad
mov
or
imul
shr
xor
mulb
xchg
ss
mov
inc
ljmp
jo
sbb
adc
sub
orl
into
inc
mov
adc
cmp
dec
adc
jmp
lret
jl
mov
jne
push
adc
mov
dec
pop
inc
mov
icebp
ds
stos
fsubl
shrb
push
lods
xchg
jge
and
adc
or
scas
adc
xchg
cltd
sbb
sub
push
or
mov
leave
add
lock
lahf
mov
add
dec
push
xchg
pusha
orl
iret
xchg
mov
insl
test
dec
in
fsubs
sbb
fiaddl
jl
inc
stos
jb
movsl
fdivs
mov
or
pop
lods
and
les
or
call
fcmovb
in
and
mov
stos
push
dec
leave
push
leave
ss
mov
or
cmpsl
adc
sub
mov
sbb
cli
xchg
mov
ror
ret
add
rcrb
mov
lahf
loopne
rolb
movsl
pop
cs
fs
das
sbb
pop
pop
aas
cmp
add
xchg
andl
mov
daa
dec
scas
lds
cmp
xchg
aaa
xchg
loopne
mov
ja
dec
mov
subl
sti
shll
pop
fbld
sub
dec
out
sbb
adc
dec
jne
dec
fwait
clc
push
sub
mov
fidivrs
mov
or
sti
push
jp
xchg
clc
mov
push
sub
into
mov
xchg
orl
gs
std
and
ds
cwtl
or
dec
pop
or
and
mov
jmp
dec
jp
sbb
xchg
cs
cli
cmp
jp
sti
and
push
adc
adc
sbb
icebp
jecxz
inc
xchg
push
push
out
lea
das
jnp
movsb
test
out
jo
mov
ds
stos
cmpl
mov
scas
push
ds
inc
scas
inc
xor
testl
add
les
test
hlt
add
jmp
fcompl
imul
pop
mov
sbb
mov
mov
sbb
jbe
lret
mov
dec
popf
mov
nop
mov
mov
pop
jl
mov
sub
jmp
sahf
jno
mov
sbb
mov
ss
or
fldenv
pop
and
jb
sbb
jle,pn
scas
xor
addr16
loopne
es
fimull
lret
mov
aas
add
mov
pop
fcmovne
add
in
cli
imul
push
mov
lock
lret
aas
or
pushf
push
rcrb
std
stos
pop
jno
adc
xor
ljmp
add
or
xchg
js
pusha
or
mov
sbb
lock
jbe
inc
dec
push
pop
lock
insl
fisttpll
jl
out
cmc
clc
mov
imul
lods
push
push
ljmp
add
xchg
mov
dec
add
adc
jmp
gs
xchg
mov
scas
lods
sub
rdpmc
inc
xchg
rclb
sub
cmp
test
test
lds
negl
lcall
ret
lcall
popf
pop
mov
push
mov
sbb
fisttpl
push
xchg
stc
fadds
cmc
or
cmp
outsl
icebp
mov
insl
jg
stos
js
movsl
das
sbb
stc
xor
ds
jo
ficomps
mov
adc
inc
call
jl
clc
mov
add
lahf
cmp
pop
lock
mov
or
mov
out
movsb
mov
cmp
out
stos
rorl
fists
ja
xchg
fcomps
loopne
filds
xchg
test
les
mov
rolb
in
adc
lock
cmp
dec
stos
test
sub
aam
cld
add
add
dec
pop
cmp
pop
mov
cmp
or
lods
inc
je
and
insb
cmpsl
jge
xor
mov
popf
cmp
es
sub
in
lcall
jbe
shll
adc
iret
aam
cs
enter
test
out
addr16
scas
xor
pop
hlt
sub
xchg
lock
loopne
cmp
mov
add
jmp
lds
ljmp
or
fiadds
aas
rcrb
mov
cmpsl
and
inc
mov
sbb
add
push
pop
in
push
insb
add
inc
mov
fs
hlt
icebp
sub
mov
push
inc
push
lcall
or
jae
shlb
enter
jp
arpl
out
fildll
pop
cmp
cmp
insl
or
ss
out
aad
jl
js
mov
mov
jmp
or
push
inc
xlat
add
jecxz
test
xor
or
mov
ljmp
cmp
sbb
std
sub
out
xchg
push
mov
jae
mov
subl
cmp
add
push
add
xchg
shll
out
ret
or
and
fwait
imul
mov
sub
lock
adcl
cmpsb
pop
mov
mov
ficoml
xchg
clc
push
pop
inc
out
mov
push
pop
into
fidivl
sbb
fists
nop
fidivrs
fists
ret
xchg
pop
mov
rcrl
aad
cmc
movsl
jns
ret
jecxz
cmp
inc
mov
xor
sti
push
imul
pop
cmp
sub
sub
jnp
imul
adc
add
dec
dec
add
pop
mov
inc
pop
jecxz
shll
xchg
sahf
adc
or
orb
popa
mov
cld
outsl
lock
pop
xor
pop
rclb
dec
mov
inc
xchg
into
scas
adc
cltd
test
dec
jnp
loope
sbb
jle
aas
test
sbb
jmp
jo
lds
push
push
xorb
arpl
jmp
mov
pop
xchg
scas
sbb
or
hlt
or
jg
push
aaa
daa
add
pushf
mov
mov
dec
ss
xor
mov
repnz
mov
mov
jp
xchg
mov
rorl
ret
jo
int
mov
insl
imul
out
aas
lcall
dec
imul
insl
outsb
pop
cmp
mov
outsb
cmp
mov
push
push
imul
push
lock
adc
xor
js
push
jns
dec
pushf
test
xchg
fimuls
ret
dec
push
fdivs
push
test
or
les
aam
xchg
adc
push
out
loopne
loopne
imul
ret
popa
xor
cmp
js
ds
inc
js
dec
aas
lret
movl
pop
jp
inc
cmc
stos
ret
xor
stc
ret
xchg
ficompl
out
daa
repnz
test
mov
pusha
xchg
clc
or
int
cmp
add
xchg
add
pop
imul
mov
scas
push
cltd
mov
xor
out
xlat
adc
in
lock
cmp
push
loopne
popa
daa
lds
and
adc
mov
xor
jne
mov
inc
mov
test
dec
add
clc
cmc
lcall
lock
icebp
cmp
in
sub
dec
sub
shll
pop
jg
mov
bound
push
cmp
xchg
sbb
add
cmp
cmp
sbb
inc
int3
or
lahf
push
inc
shll
inc
mov
and
scas
push
adc
addb
and
mov
add
sti
cmpsb
insb
data16
dec
inc
in
sbb
pop
sub
jb,pt
xchg
jecxz
and
xchg
aad
push
jle
cmp
test
xor
jmp
insb
pop
dec
lock
adc
inc
adc
hlt
adc
xor
mov
add
pop
inc
sahf
cs
mov
jecxz
pop
cmpb
push
dec
fsubs
outsb
jae
inc
leave
mov
xor
mov
pop
mov
pop
jnp
or
test
pop
out
mov
mov
in
inc
ljmp
jl
imul
jno
aad
dec
rclb
mov
mov
dec
push
fdivrs
dec
sbb
outsb
sub
loope
hlt
aam
push
inc
xchg
mov
and
es
xchg
inc
mov
xlat
jbe
dec
cmp
test
mov
mov
in
out
cwtl
es
rcl
jge
add
xchg
sbb
insl
cmpsl
mov
shl
adcb
inc
stos
or
add
adc
push
mov
mov
pusha
test
out
push
repnz
out
loope
inc
int3
and
inc
out
dec
fidivl
push
outsb
in
orb
adc
jl
cmp
xchg
push
js
fistl
xor
in
popf
sbb
rolb
hlt
dec
sti
mov
or
aam
enter
gs
jmp
cmp
sub
loopne
jo
leave
lret
std
icebp
push
xchg
adc
jno
push
xor
mov
stos
daa
sub
lea
test
dec
and
mov
clc
push
xchg
icebp
lods
dec
mov
sahf
mov
ds
in
mov
mov
mov
lock
jo
add
xor
add
jo
sbb
stos
andnps
fistps
add
push
mov
mov
stos
in
mov
and
push
rcrl
mov
xchg
ficompl
pop
shll
in
pop
rcll
or
int
xor
stos
out
test
je
cli
dec
mov
jbe
sub
ss
pop
loope
mov
mov
sbb
xor
dec
dec
sbbl
jp
add
jb
repz
js
pusha
negl
push
pop
loopne
xor
xchg
jb
adc
adc
mov
mov
mov
test
inc
cli
and
stos
sbb
cmp
cmp
loope
xchg
lcall
push
lahf
mov
dec
loop
and
cli
rclb
mov
or
outsb
add
ljmp
push
cmp
lods
lods
lds
scas
repnz
adc
dec
jmp
dec
dec
sbb
push
cmp
loopne
lea
test
shll
insb
into
aad
jns
push
sbb
fisubl
in
inc
mov
popa
popa
pop
pop
adc
arpl
das
or
push
xor
mov
cmpsb
cmp
hlt
adc
decl
mov
pop
cmc
clc
hlt
aad
lahf
ds
not
popf
xchg
mov
cmp
fdivrl
lods
dec
mov
dec
call
cmp
cli
hlt
push
shlb
es
inc
in
adc
push
mov
inc
ret
add
inc
jbe
insl
add
rcr
adc
adc
dec
jnp
lahf
cmp
jle
jae
ror
subb
pop
or
jle
hlt
sbb
sub
andl
sub
xor
mov
movsl
aad
cmp
lret
adc
mov
mov
fmul
call
sbb
ret
jmp
sti
xlat
dec
add
and
popa
xchg
cmp
cwtl
add
cmp
call
sub
pusha
pop
mov
js
adc
add
add
addl
outsb
fadd
mov
adc
xchg
lret
jle
daa
cmc
lods
icebp
pop
cmp
dec
adcl
test
mov
mov
movsl
fs
outsl
dec
pop
outsb
mov
dec
pop
sti
jl
fsts
ss
push
mov
lods
clc
fsubrs
xlat
cmpsl
xchg
cmp
add
or
mov
insb
call
pop
jae
jle
out
mov
and
aad
xchg
jp
fwait
ds
cmp
loopne
loopne
or
lcall
cli
scas
add
ljmp
push
ljmp
ds
clc
ja
mov
push
mov
add
call
popf
push
icebp
mov
sub
xor
pop
fidivs
push
add
sub
int3
mov
mov
push
pop
push
and
pusha
mov
aam
pop
mov
dec
mov
mov
dec
add
les
mov
jmp
or
inc
mov
das
sbb
jge
pop
das
sbb
mov
push
sbb
sub
push
int3
pop
adc
adc
in
push
fwait
mov
pop
fcoml
aam
repz
aas
cs
push
push
aad
rorl
into
lahf
xor
loopne
in
filds
fs
std
inc
xor
out
jns
call
mov
xchg
push
jg
popa
pop
sti
mov
orl
rorl
and
pop
sbb
or
out
mov
push
roll
sub
pop
dec
mov
loopne
icebp
js
push
out
loope
adc
pop
adc
xor
sti
sub
jmp
sub
lcall
pop
or
push
mov
dec
xchg
push
js
bound
cmc
add
ret
xor
sub
hlt
ss
adc
mov
les
aam
fwait
or
mov
out
push
in
jb
aas
cs
call
ja
jbe
jle
icebp
jb
jmp
sbb
pop
and
addr16
xor
mov
cmpsl
and
pop
pop
xchg
icebp
ljmp
stc
xchg
mov
adc
push
mov
sbb
pop
mov
lret
add
mov
repz
push
adc
daa
and
ret
sbb
into
popf
fimuls
dec
cmpsb
pop
data16
cld
fsubrs
jl
nop
adc
iret
clc
loop
insb
movsl
ja
inc
cmp
jns
pop
mov
aam
adc
repz
cmpsl
nop
push
es
insb
xor
daa
lods
mov
loop
cld
push
mov
rol
cmp
add
incl
pop
add
cmp
push
push
xorb
xchg
loopne
push
adc
lea
mov
in
add
mov
fadd
mov
lock
mov
push
push
sub
inc
imul
and
jmp
cmp
add
mov
pusha
pop
push
shlb
cwtl
gs
cs
xor
and
inc
sar
mov
and
jl
mov
push
shlb
dec
mov
add
mov
lret
cltd
push
arpl
or
sub
xchg
out
and
cld
jae
pusha
ljmp
xor
mov
js
xchg
pop
into
inc
or
mov
leave
loop
out
push
cmp
aam
mov
fwait
xchg
and
pop
dec
je
xchg
inc
shr
sub
ljmp
dec
mov
cli
clc
jl
dec
jae
outsl
push
mov
aam
adc
in
mov
inc
sub
dec
and
sbb
leave
mov
mov
mov
mov
lahf
inc
out
aaa
stc
andb
inc
das
pop
push
mov
js
es
add
pop
or
scas
test
fildll
inc
pop
stc
jnp
mov
inc
jnp
sub
xchg
call
cld
add
dec
jg
icebp
clc
rol
xchg
in
jne
ds
popf
mov
repz
aam
aam
pop
cmp
dec
jne
jmp
ss
pop
inc
out
push
xchg
cmp
sub
mov
out
xor
jp
xchg
rorb
jnp
loopne
jae
sub
hlt
mov
pop
cmpb
sbb
and
adc
xchg
adcb
and
in
rolb
pop
jae
andl
inc
loopne
dec
rcll
mov
ljmp
fwait
js
js
and
aam
das
lock
add
pop
aas
orb
dec
notb
dec
xchg
mov
stos
fdivr
cmp
pop
push
inc
ret
sbb
sarl
xchg
aas
fdivp
push
stos
mov
and
xor
addl
mov
add
mov
sub
cmp
inc
mov
jnp
push
sbb
shr
insl
aam
push
clc
fldpi
xchg
addr16
mov
pop
or
out
faddp
mov
std
pop
lods
lods
mov
fwait
or
mov
js
fimull
push
cmc
jecxz
cs
jno
or
and
orb
shrl
inc
cmp
adc
and
mov
clc
xchg
loope
dec
or
sub
xchg
jne
cli
hlt
jp
sbb
push
lret
sub
pcmpeqb
lret
fsubrl
rorb
lret
adc
lods
cwtl
enter
lods
mov
mov
cmp
cmc
loope
cwtl
test
mov
cmpl
mov
cld
sbbl
pop
mov
outsl
movsl
push
sbb
dec
pop
movsb
push
inc
xchg
mov
xor
sbb
cmp
ret
xchg
and
dec
clc
cli
dec
cli
xor
push
ret
ljmp
rol
inc
jne
test
shll
icebp
pop
ja
andb
fs
jge
gs
adcl
pextrw
add
xchg
xor
test
sbb
data16
push
mov
push
lea
aam
ss
sbb
lods
mov
and
pop
in
fnstenv
loope
hlt
insl
hlt
dec
imul
xor
lods
lods
add
jl
mov
out
mov
lods
aad
push
repz
sbb
movsl
mov
jmp
pop
sub
es
jno
cmp
cmpb
fidivl
es
adc
cmp
mov
lret
dec
mov
push
sub
and
dec
outsb
jge
in
frstor
jae
pop
ret
sar
aam
jge
ret
ljmp
push
hlt
rorl
ret
push
jl
dec
mov
push
jbe
add
xlat
mov
mov
dec
adc
add
sbb
dec
jecxz
xchg
mov
icebp
jp
adc
mov
ds
and
sbb
rcr
mov
pop
fwait
aam
push
mov
push
xchg
orl
in
lea
scas
mov
int
mov
std
and
test
ds
cmc
jb
pop
repnz
loop
daa
pop
xorb
mov
stos
div
or
jae
pusha
jg
popl
pop
cmp
enter
push
and
test
je
mov
call
outsb
push
push
das
fs
cli
mov
addb
dec
into
inc
inc
shrl
loope
jae
mov
pop
inc
cmpsb
cmp
fdivs
les
push
test
inc
loopne
pop
icebp
insl
lock
ret
sbb
push
outsb
mov
pop
test
lcall
sti
pop
inc
pop
pop
insb
loopne
add
xlat
test
call
xor
fcomi
movsb
or
pop
jmp
sub
xor
fimuls
sbb
les
mov
cmpsb
addr16
negl
cmpsl
mov
xor
in
lret
dec
jnp
out
or
in
shlb
subl
shl
dec
cmp
popf
cmp
push
ss
lret
fnstsw
pop
and
add
aad
push
and
out
lahf
mov
or
add
subb
inc
cmpsb
shr
rolb
pop
adc
stc
jle
imul
add
stc
pop
xchg
adc
xor
sarl
popa
in
scas
mov
rcll
fnsave
jg
jne
lea
jne
and
pusha
xchg
stos
inc
orl
mov
insb
mov
cmp
add
or
lock
cltd
movsb
inc
loop
pop
mov
jmp
lea
sbb
sub
lods
sarb
rorl
push
jg
cli
dec
int3
inc
lea
nop
bound
cmp
mov
adc
push
movsl
rcrb
shr
shl
jbe
and
push
popa
add
add
push
push
jnp
ret
sub
cmpsl
xor
je
cmpb
jmp
push
mov
roll
mov
fisubrl
jge
je
mov
test
js
aad
xchg
adc
mov
jo
or
jge
js
cmp
aaa
mov
icebp
mov
add
push
cmpb
enter
mov
jne
pop
movsl
pop
jo
jge
aaa
xchg
add
imul
cmpsb
cmp
push
inc
push
nop
mov
xchg
dec
repz
add
dec
inc
mov
sbb
in
js
mov
shl
and
test
stos
jle
jecxz
insb
in
dec
cmp
cwtl
cmpsl
rcrl
xchg
lock
insb
das
mov
xchg
xor
push
rcrb
shll
jle
or
clc
dec
or
pop
lahf
pop
lods
fadd
out
add
xchg
pop
jne
hlt
mov
cltd
movb
ljmp
scas
add
daa
psllw
and
shl
sar
popf
xor
cmpl
mov
inc
mov
lds
dec
jle
in
xor
test
cmc
call
mov
stos
cmp
push
das
fdiv
aaa
fwait
push
mov
xchg
arpl
add
jle
cmp
xor
in
andl
popf
add
scas
jo
sarb
push
mov
cmp
xchg
rclb
jl
or
fistpll
cwtl
push
adc
xor
fdiv
test
adc
ljmp
push
sub
mov
mov
inc
jbe
adc
divl
shrl
jo
adc
mov
loopne
divb
xor
cmp
jp
and
xchg
pushw
push
int3
enter
imul
jmp
sub
cmp
and
xchg
mov
test
pop
adc
xchg
xor
pop
icebp
sub
imull
mov
mov
jmp
push
enter
mov
cmp
lock
es
outsb
pop
inc
pop
push
icebp
sub
leave
aad
shr
cmpsl
dec
lcall
test
sbb
pop
fldt
inc
cmpsl
aas
sbb
pop
test
repnz
je
mov
repz
push
loopne
in
call
mov
jbe
xor
popf
inc
mov
bound
pop
adc
pop
inc
jg
out
mov
gs
div
out
jns
push
sbb
push
mov
sub
fimull
fnstenv
pop
cltd
lock
scas
jl
xlat
xchg
mov
hlt
neg
or
loop
push
cs
rol
fcmovnb
loop
test
lods
push
aad
mov
adc
adc
andl
aad
sbb
cmp
cmp
cmp
or
call
push
mov
lock
mov
mov
sub
mov
mov
je
push
jo
fcomi
mov
subl
sbb
mov
mov
adc
push
mov
sbb
mov
mov
ficomps
and
mov
push
ret
ror
ret
and
jl
insl
stc
adc
pop
push
mov
jge
stos
rorb
dec
inc
stos
mov
sti
fistpll
sbb
jge
or
test
test
mov
adc
or
adc
sti
sahf
scas
andl
xor
in
mov
enter
sub
sub
loope
sbb
aaa
xchg
and
movswl
and
and
fisttps
fucomp
add
mov
cmp
jl
cld
outsl
out
sbb
push
arpl
mov
add
jp
inc
addr16
out
jno
pop
pop
fwait
imul
sti
repz
inc
mov
and
cmp
das
std
cmpl
jecxz
mov
movq
dec
iret
mov
out
pop
push
jg
test
fs
cmpl
sarl
in
mov
add
mov
mov
int3
sub
loopne
jle
xchg
xchg
mov
js
adc
shlb
shl
mov
sbb
sti
lods
mov
fsubrp
sub
cmpsb
jne
orb
js
and
jge
jne
sub
jno
and
daa
dec
push
cmp
lock
ret
mov
cmp
loope
cli
inc
into
jbe
sub
pop
ss
pop
shlb
hlt
std
cmp
dec
sahf
cmp
pop
adc
sub
jmp
pop
in
shl
adc
push
inc
ret
push
cmp
fmul
shrl
xor
jo
pop
mov
sub
push
movsl
mov
jecxz
mov
mov
jo
cmpb
cmp
mov
add
aas
mov
cmp
stos
push
dec
xor
aad
imul
fimull
xor
daa
adc
lret
and
mov
sbb
xor
pop
push
scas
lock
out
popf
jp
stc
mov
lods
movsb
sub
lret
stos
xchg
jp
mov
dec
not
test
xchg
push
testb
xchg
pop
test
add
and
mov
pop
sub
test
mov
xor
mov
push
jae
mov
jno
imul
ss
inc
jnp
lret
mov
frstor
bound
fidivl
sub
jnp
in
sub
sbb
pusha
shr
ret
xchg
push
jno
test
dec
push
or
in
add
pop
jae
lds
push
test
pop
jl
xchg
int3
sub
mov
imul
cmp
pop
stos
cmp
and
push
xlat
sbb
js
mov
aad
inc
add
adc
pop
xor
cmp
imul
test
jae,pt
test
clc
pop
aaa
scas
jmp
lret
cmp
aad
fsubrl
mov
inc
je
sub
cmp
in
adc
adc
pop
or
mov
xchg
mov
test
adc
mov
aaa
mov
sbb
pop
mov
add
jge
dec
jo
sbb
arpl
imul
xlat
ljmp
test
or
mov
mov
test
andl
cmp
mov
mov
and
movsb
inc
ds
mov
jae
cmc
sub
aam
sahf
insl
cld
mov
xchg
lcall
push
cld
jmp
popl
cld
push
scas
lret
sahf
xchg
xor
daa
fdivl
lock
ljmp
mov
loop
pop
jmp
in
imul
dec
sahf
mov
dec
loope
test
jmp
mov
pop
mov
aam
jmp
daa
js
aam
out
sbb
push
jmp
rcl
roll
das
cmpsl
or
sti
xor
jbe
jle
insl
push
loope
adc
mov
int3
out
mov
pop
paddq
sarb
test
or
cmpsb
jp
jno
sbb
or
movb
popa
clc
xchg
mov
je
fwait
add
fisubs
nop
mov
xlat
into
into
pushf
sbb
ficoml
and
xchg
xchg
pop
loopne
pop
out
cmp
xchg
lea
cmpl
clc
cld
ficompl
adc
loop
xchg
cmc
sub
cmp
arpl
xor
dec
dec
rcll
pusha
dec
and
pop
push
jo
cli
mov
ret
and
outsb
out
sbb
push
filds
or
push
fwait
jge
roll
lods
pop
xchg
adcb
bound
sub
cmp
sub
add
test
push
xchg
pop
pop
mov
cmpsb
mov
dec
rol
test
out
cmc
lock
mov
outsl
add
dec
and
lret
push
faddp
insl
cmp
push
sub
mov
or
js
sti
repz
xchg
sbb
mov
sbb
pop
rcrb
mov
int
mov
sbb
push
xlat
inc
sub
roll
add
pop
jmp
mov
mov
orl
js
pop
rcll
cmp
ret
aaa
or
push
xor
push
leave
dec
lds
stos
add
icebp
mov
movsl
cltd
adc
sbb
xchg
fildl
inc
dec
mov
dec
push
pop
xor
and
pop
adc
stos
xorl
mov
pushf
mov
test
loope
pop
inc
out
sub
cmpsb
jmp
jge
iret
repnz
or
test
jle
outsl
add
js
test
dec
add
jecxz
or
mov
push
scas
cmp
clc
stos
push
fsub
push
dec
and
adc
lret
inc
pop
js
jae
xor
sbb
adc
inc
adc
inc
cmpsb
arpl
add
dec
push
xor
or
jg
xchg
popf
sbb
rorl
icebp
loope
popa
lods
push
popa
xor
mov
or
push
stc
lods
idivl
aaa
fdivrs
outsb
jmp
pop
jb
mov
test
iret
rorl
jo
outsl
das
jbe
cmp
mov
and
jle
call
add
xor
shlb
scas
inc
int3
inc
repnz
outsb
test
repz
lret
jmp
shll
cmp
mov
scas
enter
adc
pushf
jne
xlat
mov
pop
cmp
mov
icebp
fucom
push
outsl
jnp
shrb
push
inc
add
jecxz
and
pop
dec
daa
sbb
mov
outsb
jmp
add
jp
dec
cmpsb
sub
add
scas
scas
sub
push
mov
outsl
xchg
push
popa
in
push
mov
xchg
pop
mov
xlat
cmpsl
inc
cmp
rorb
jmp
enter
pop
jl
or
push
call
mov
sbb
mov
jge
orb
sbb
ss
sub
or
rcll
sub
inc
dec
sbb
pop
ss
xlat
shr
mov
mov
xchg
filds
sbbb
movsl
test
je
or
outsb
cmp
jne
xchg
jae
inc
inc
cmp
add
add
int3
cli
scas
jmp
cmp
add
xlat
push
push
repz
insl
push
xchg
or
push
pop
stos
jno
mov
cs
push
xor
lea
add
leave
adc
xchg
jecxz
call
dec
lods
adc
scas
cmc
sub
inc
lret
mov
inc
loopne
jmp
mov
jae
sti
jp
pop
ljmp
sub
mov
insb
xchg
bnd
stos
dec
mov
lods
mov
mov
roll
int3
pop
out
push
inc
lods
pop
add
cmp
adc
ficoml
sahf
lcall
jnp
jp
pop
add
cmpsb
stos
mov
out
js
test
repz
cmp
jp
data16
jns
outsl
xchg
add
scas
xchg
sbb
aas
xor
fistpl
fdivr
inc
lcall
lea
mov
pop
div
cmp
mov
inc
in
mov
sub
mov
incb
out
push
mov
in
or
jne
xchg
cmpsb
push
push
mov
mov
sbb
jbe
add
lods
mov
test
insb
mov
fwait
cmpl
mov
popa
sbb
pusha
jp
clc
movsl
or
sub
add
rcll
int
fsubr
out
pop
js
rcrb
andl
inc
jp
ret
push
mov
cmp
fsubl
icebp
cmp
shrb
jp
sub
mov
push
cmp
test
adc
sub
sub
mov
xchg
sti
into
sbb
shrl
jb
ss
icebp
adc
decb
std
cmp
push
mov
aam
les
ja
ss
icebp
dec
xchg
frstor
mov
pusha
pop
or
add
and
jo
push
lcall
repnz
or
loope
inc
incl
in
stc
jae
xchg
stos
xor
xchg
rcl
xchg
add
mov
lcall
jb
push
dec
adc
roll
push
push
sbbb
imul
gs
sub
popa
js
and
cmpsl
mov
clc
jle
int3
ljmp
out
shrl
les
dec
dec
cli
push
or
mov
mov
pop
cmp
sub
sbb
sbb
fbstp
jno
adc
in
mov
xchg
xlat
lods
mov
push
xor
sti
mov
insl
inc
dec
out
into
mov
imul
mov
ret
push
fnstenv
cmp
aad
xor
clc
loope
lods
pusha
and
fiadds
cmp
mov
jl
pop
clc
pushf
pop
cmp
adc
jmp
pushl
stos
mov
lahf
aam
sbbl
pop
ds
add
xlat
sbb
adc
clc
sbb
sahf
fsts
or
aas
jge
sti
lods
hlt
bound
adc
jno,pt
or
jmp
out
icebp
daa
cld
repnz
cmp
loope
push
push
sahf
mov
int3
jp
jp
adc
repz
and
adc
xor
test
push
ja
xlat
mov
outsl
pop
xchg
add
es
push
stos
lock
shlb
inc
loop
push
mov
mov
add
insl
aad
mov
mov
xor
jp
sub
mov
and
aad
push
lea
push
adc
cli
movsl
jnp
pusha
cmp
mov
sbbb
aaa
xchg
lock
ficoms
fisubl
in
inc
xchg
fdivrs
iret
ss
jnp
insl
lahf
jge
adcl
jb
pop
mov
mov
pop
or
pop
push
lock
call
or
xor
pop
outsl
sbb
mov
mov
add
xlat
push
aas
or
lret
popa
pop
adc
push
mov
lock
lea
add
push
ja
rolb
xchg
mov
pusha
jo
ja
fdivl
jno
aam
fcmovb
inc
scas
cmc
xchg
xchg
sete
fcompl
dec
ret
pop
adc
pushl
mov
xor
lret
xchg
inc
push
call
mov
mov
sbb
jno
or
add
daa
loop
or
aam
or
icebp
scas
dec
sub
cmp
sub
sbb
cmpsb
cmpsl
fists
xorl
fwait
arpl
push
mov
inc
out
dec
out
add
add
into
js
dec
ss
mov
jb
in
add
adcl
push
cmp
pextrw
aaa
in
mov
test
push
jo
lea
add
lods
add
movsl
insl
xchg
dec
mov
insb
xchg
test
adc
out
clc
pop
bnd
sbb
xor
test
or
cmp
jl
iret
out
sbb
mov
hlt
stos
xlat
sti
jnp
ljmp
xor
jae
loope
pop
inc
iret
or
rcl
pop
fdivs
inc
les
mov
sbb
data16
loopne
jecxz
aas
cs
in
addb
cmp
jl
inc
and
add
jne
jge
in
xor
jbe
fadd
inc
push
xchg
loopne
fildl
push
jnp
rcrb
push
sub
loop
and
fistl
cltd
stos
scas
cmp
cmp
cmovs
mov
stos
fidivrs
movb
jnp
jns
cmpsl
pop
mov
or
out
mov
orb
movsl
or
cwtl
jbe
adc
test
mov
push
adc
test
jmp
pop
add
mov
mov
movsl
ret
sarl
xor
fwait
bound
xchg
cmp
adc
cltd
scas
setae
je
jns
or
pushf
sbb
push
mov
cmpsl
add
cmpb
mov
clc
adc
xchg
mov
add
cwtl
mov
aas
inc
pop
mov
out
loop
inc
mov
call
add
xor
jo
ds
lods
and
mov
movsl
xchg
loop
push
inc
mov
mov
aad
jecxz
sub
and
je
dec
ss
xor
lock
cmp
push
and
mov
dec
je
mov
mov
jmp
pusha
cltd
cli
xchg
xor
je
pop
push
ljmp
iret
sbb
scas
add
out
inc
sti
adc
jp
sbb
sub
insl
push
dec
loope
mov
lods
adc
add
addr16
xor
push
mov
pop
or
push
ljmp
movsl
xor
inc
arpl
sbb
pop
push
pop
mov
movsl
or
pop
out
repnz
cli
pusha
roll
bound
pop
lods
lea
or
cmp
test
subb
push
push
lea
jecxz
lret
addb
push
add
push
sbb
xor
add
mov
jae
imul
pop
movsb
lds
repnz
mov
mov
cmp
ror
push
sahf
sbb
nop
shl
mov
push
mov
inc
or
popa
add
cs
jo
jo
inc
pop
ret
add
jo
inc
inc
xchg
cli
jle
repnz
aam
inc
pop
cmp
xchg
jmp
test
mov
inc
pop
mov
loop
cmp
push
or
sbb
dec
xchg
int3
ds
push
notb
cld
xor
pop
xor
into
divb
std
adc
div
sub
adc
sbb
pop
pop
mov
jp
enter
test
jnp
mov
aaa
xor
or
adc
dec
imul
jmp
insb
lahf
or
inc
pop
pop
sbb
mov
jecxz
jo
mov
sti
fsts
cltd
inc
pop
popa
aam
jecxz
xchg
cmpsb
xor
dec
pop
jge
addr16
xor
and
lods
insl
jl
jae
or
shld
cmp
je
inc
fiadds
sti
sar
sub
sti
sub
loop
xchg
bound
mov
imul
xchg
cmp
add
and
sbb
movsl
inc
jle
and
in
mov
xchg
sub
add
xchg
lret
cli
dec
loope
push
movsb
out
mov
fistpl
push
outsb
iret
sub
add
or
xchg
dec
bound
xchg
mov
outsb
or
test
pop
lret
les
andb
mov
or
push
out
es
push
xchg
retw
outsb
xor
lods
or
add
dec
mov
fwait
ds
call
push
dec
repnz
push
mov
push
jmp
sbb
insb
push
push
xchg
ret
out
test
xlat
and
jl
movsl
dec
out
adcb
and
test
roll
push
cmp
xorl
jge
mov
mov
and
dec
js
inc
bound
adc
lock
and
adc
xchg
push
push
adc
mov
jmp
lock
sub
clc
jmp
pushf
add
dec
bound
or
popa
jg
ds
int
pop
out
pop
scas
nop
inc
dec
jecxz
test
repnz
jno
xchg
add
fdivl
outsb
add
push
clc
lds
andl
mov
or
rorl
fwait
fs
inc
push
sbb
les
lret
push
and
sbb
or
pop
and
mov
push
or
jecxz
ljmp
pop
jl
lock
pop
movsb
test
mov
pusha
sbbl
push
stc
call
push
mov
mov
enter
mov
xchg
jns
jp
mov
jno
cmp
mov
outsl
adc
inc
dec
adc
jnp
pop
or
xor
mov
aaa
xlat
xlat
insb
popa
and
xchg
and
xor
mov
cmp
pusha
adc
adc
or
cli
lcall
jg
push
stc
cmp
cltd
sbb
inc
test
xor
mov
mov
fdivrs
lods
in
add
in
inc
push
mov
and
push
stc
inc
insb
adc
dec
clc
mov
in
arpl
xor
testl
jae
adc
cmpsb
mov
jp
push
push
inc
push
adc
lea
adc
sbb
xor
cmp
push
inc
jecxz
and
orb
out
addr16
pop
or
call
cld
jp
pushf
adc
mov
cmp
push
mov
repz
cmp
mov
sub
and
sbb
push
mov
fwait
ret
fidivs
jns
dec
outsl
dec
jl
cwtl
jl
call
mov
push
pop
mov
cmpsl
sahf
lret
dec
inc
mov
cmp
ja
in
bound
outsl
and
or
daa
mov
pop
add
imull
fimuls
xor
bound
mov
push
lret
inc
les
xor
jmp
outsl
rorb
mov
in
divl
shrb
xchg
int
xlat
inc
test
jmp
js
dec
sahf
lret
out
or
aad
xlat
cs
and
or
jno
mov
pop
mov
mov
arpl
shrb
or
cmc
pusha
jp
aam
das
movsl
popa
cmp
xor
popa
jecxz
push
stc
into
loop
loopne
popf
outsb
push
call
pop
inc
loop
pop
xorl
mov
xchg
test
or
repz
in
mov
inc
xor
inc
mov
rcl
sahf
jg
insb
ret
fsubp
mov
or
sbb
sub
test
add
pop
add
jp
orl
mov
test
in
add
mov
pop
xchg
shlb
xchg
and
shll
pop
sbb
setle
pop
outsb
js
ljmp
mov
sar
lret
add
les
pop
cmp
inc
jnp
fdivl
xorb
pop
or
push
and
xorl
sbb
out
mov
push
jne
xchg
jg
insb
repz
xor
loopne
repnz
fdiv
stos
roll
fnstcw
test
add
dec
iret
cmp
mov
add
xor
jnp
inc
sbb
rclb
push
lcall
loopne
and
mov
push
add
sti
add
add
mov
pop
add
jo
in
outsb
jmp
xor
xor
pusha
and
mov
ss
aas
mov
mov
xchg
and
lods
mov
sbb
aas
mov
insl
popa
aaa
jp
iret
leave
rcrb
mov
and
pushf
mov
pop
sub
stos
push
int3
lea
push
adcb
add
pop
jp
cmp
mov
loopne
sbb
ss
pusha
sbb
js
mov
push
lahf
or
pop
shrl
pop
sbb
jbe
jo
imul
inc
fisttps
les
loop
and
mov
and
imul
in
mov
stos
ds
and
cmp
jns
or
push
push
inc
aad
mov
clc
pop
imul
mov
cli
jecxz
sub
push
push
mov
test
mov
jmp
lret
cmp
mov
inc
mov
mov
jno
xchg
jnp
pusha
xchg
cmpsl
and
lods
roll
jbe
addb
sbb
cli
ret
push
out
bound
mov
in
stos
leave
loope
pop
jp
mov
in
inc
mov
lret
cmp
lds
data16
add
pop
push
dec
sbb
xchg
mulb
sahf
adc
sbb
in
sub
dec
shrb
cli
jo
sub
imul
push
mov
sub
mov
dec
sbb
mov
mov
inc
test
mov
addb
lods
mov
loop
es
pop
sub
lock
sbb
aad
loopne
mov
adc
mov
mov
xor
das
loope
je
mov
mov
inc
in
mov
ficomps
sti
test
adc
mov
adc
dec
insb
mov
and
xchg
dec
call
insb
test
imul
add
xchg
aas
cmp
jp
pop
or
sub
popa
add
aas
jns
jecxz
xchg
scas
icebp
mov
loope
add
mov
xor
mov
fiadds
push
fistl
push
in
sbb
or
mov
and
xor
dec
arpl
out
push
add
dec
jecxz
push
fsts
push
arpl
cltd
test
pop
mov
mov
in
and
mov
shl
out
sarb
loope
add
int
mov
or
icebp
lds
fistpl
sub
lret
out
sahf
and
push
sub
cmp
lds
push
fiaddl
dec
jp
rorb
pop
aas
lock
fstpt
sbb
stos
sbb
or
jge
stos
mov
and
testl
sub
push
gs
and
mov
mov
pop
inc
cld
dec
pop
lods
addr16
syscall
push
add
sbb
adc
sbb
cmpsl
push
adc
les
sub
push
les
mov
addb
and
mov
psubusb
mov
fstl
insl
adc
add
cs
fiadds
cmp
imul
std
push
fwait
dec
add
add
push
pop
addb
call
cmp
or
popl
ret
popa
loop
int
addl
cmp
pop
movsb
gs
lea
cmp
xor
mov
loope
ljmp
movsl
fcmove
ret
orb
jp
pop
in
sbb
pop
inc
jns
jne
dec
sub
or
mov
mov
mov
jg
mov
movsl
and
and
lahf
testl
mov
lcall
push
pop
loope
cmp
cmp
data16
loop
sbb
addb
cli
add
sarl
adc
loopne
mov
out
aad
xchg
mov
jecxz
idivl
jo
clc
lret
xorb
add
mov
aaa
daa
mov
xchg
in
popa
pop
roll
fistl
mov
push
add
cmp
mov
jmp
add
pushf
test
jae
and
loope
addl
std
in
jae
pop
popa
test
xor
rolb
fwait
cltd
in
lret
cwtl
adcb
cmp
repz
push
xor
inc
xor
jp
mov
icebp
jmp
cmp
insl
xchg
inc
shll
xor
int3
ljmp
pop
pop
push
cmpl
cld
pop
sbb
pop
or
cmovp
xchg
sarl
push
lods
jecxz
inc
push
xchg
jmp
aaa
adc
sti
iret
cmp
mov
push
adc
jge
mov
daa
push
xchg
pop
xchg
mov
jmp
cmpsl
cmpsl
or
or
ret
cwtl
fmuls
jge
xor
sarb
xchg
push
ss
test
push
pop
jo
and
int3
pop
dec
mov
cltd
dec
mov
xchg
lock
or
xlat
shrl
mov
inc
mov
iret
fmul
jle
cld
push
jo
je
mov
or
je
stos
imul
push
subl
and
pop
mov
jg
jns
sub
stos
outsb
loopne
xchg
cli
shr
xor
adc
and
call
shll
adc
js
sarl
fsubrl
or
inc
mov
mov
jnp
mov
jno
cmp
mov
dec
or
fmulp
testl
and
loop
scas
icebp
pop
in
mulb
mov
out
loope
stos
push
nop
das
dec
insb
inc
cmp
adc
inc
sub
inc
jo
inc
scas
adcl
test
xchg
ret
fwait
mov
jmp
cmp
mov
pop
add
jmp
mov
xchg
push
ffreep
mov
into
ret
inc
xchg
les
leave
lods
movsl
xchg
clc
mov
sub
js
or
mov
inc
call
mov
or
sub
cwtl
jg
jbe
testb
andl
pop
pop
push
data16
inc
testl
out
iret
daa
gs
loope
arpl
mov
cld
add
sbb
pop
cwtl
or
add
mov
mov
push
mov
mov
xchg
and
in
pop
mov
ljmp
fimuls
cmp
pop
or
sbb
or
std
lock
adc
sbb
cld
loopne
add
int
xchg
sub
lahf
cmp
in
scas
dec
jmp
mov
adc
sub
lret
sbbl
add
out
pcmpeqb
push
lret
ret
sbb
xor
xor
push
iret
dec
pop
fildl
test
outsb
and
adc
nop
sbb
sub
xor
xchg
aad
add
jg
jge
pop
cmc
loop
xchg
jno
into
jbe
mov
pusha
push
imul
push
int3
add
xchg
je
dec
je,pn
mov
bound
mov
push
ret
cmp
adc
and
in
loope
in
stos
aad
daa
push
setne
mov
lcall
addr16
adc
mov
or
mov
and
xor
mov
fistps
call
fistps
mov
jne
sete
std
addl
and
int
shlb
mov
daa
sahf
daa
fsubl
xor
lret
add
mov
sbb
fcomip
iret
aam
push
adc
add
stos
in
push
clc
xchg
push
lods
loopne
bound
in
inc
addb
pop
push
fildl
subl
sbb
fnstcw
loope
sub
adc
add
int
cmp
rol
aad
adc
push
jp
or
in
sbb
inc
xor
imul
aam
adc
stos
push
xorb
sub
xchg
scas
es
cmc
mov
mov
lret
jp
xor
xchg
cmpsl
cmp
mov
jne
pusha
notb
sti
push
icebp
fldl
pop
loope,pt
sbb
stc
cmp
pop
jnp
icebp
stos
test
das
popf
shlb
sbb
pusha
repnz
stc
sub
insl
and
or
arpl
adc
xlat
stos
repz
sub
scas
pop
push
nop
jmp
daa
pop
sar
dec
mov
call
out
dec
scas
je
sub
jmp
add
sub
xor
test
lret
fidivrl
fiadds
sub
xchg
jp,pt
idiv
hlt
pop
sub
push
pop
call
clc
add
fisttpl
push
inc
ficompl
rol
negl
xchg
sbb
inc
jo
cmc
jmp
sub
xchg
mov
sub
cwtl
push
aad
mov
rclb
xor
ja
stos
fsubp
incl
mov
stos
stc
mov
lods
xor
add
je
adc
clc
insl
das
jns
sbb
imul
or
js
push
test
jecxz
pusha
mov
add
aam
dec
add
push
pop
or
popa
bound
and
push
pushf
jo
out
jge
mov
loop
jmp
mov
jle
or
mov
test
sub
sub
ret
xchg
jle
dec
adc
xchg
add
xchg
fnstcw
adc
mov
js
aad
and
sub
cmp
mov
inc
dec
es
mov
repz
xor
push
stos
mov
ja
adc
jle
xchg
lds
cs
add
call
jp
shr
int3
mov
mov
xchg
xor
shl
stos
loopne
fwait
ja
in
dec
ja
cmp
test
lods
sahf
inc
roll
push
pop
lea
in
xchg
dec
mov
pop
and
sbb
sbb
xlat
call
mov
pop
push
push
aam
test
add
jae
dec
adc
add
lahf
pop
fisubs
pushf
dec
filds
fs
cmpsl
xor
int3
cmc
push
shrl
loope
lock
push
cmp
es
dec
sub
and
push
push
xlat
and
arpl
or
in
adc
push
xlat
xor
outsl
test
mov
mov
lcall
es
mov
scas
mov
aad
add
mov
and
js
pop
test
mov
pusha
sub
xchg
xor
fiaddl
clc
je
jmp
mov
push
xor
mov
push
stc
xlat
jo
mov
inc
loopne
cmpsl
cmp
mov
cmp
pop
push
punpckhbw
es
inc
dec
push
or
lret
imul
xchg
out
push
leave
push
mov
int
aad
lahf
test
das
ja
fisttps
insl
mov
jp
pop
je
js
push
scas
sub
fwait
cs
sub
insl
icebp
add
add
int
bound
enter
sar
dec
jmp
or
jb
mov
jno
ja
pop
mov
insl
pop
add
das
imul
pop
andl
je
or
adc
popa
add
lock
out
pusha
std
add
out
rsm
out
xchg
xchg
xchg
mov
push
hlt
inc
pop
cltd
stos
xor
insb
ljmp
ret
jg
xlat
cmpsb
rclb
jne
imull
loop
mov
mov
pop
pop
jp
and
xorl
pop
push
add
hlt
push
xor
pop
jl
sub
mov
ljmp
outsb
push
xor
add
sub
add
mov
or
loop
sub
out
ljmp
aas
cmp
in
sbb
daa
adc
andl
xchg
aaa
hlt
repnz
sub
mov
dec
pop
loope
inc
jl
xor
cmp
lds
nop
popa
adc
das
mov
inc
xor
add
stos
ret
mov
nop
pop
mov
aaa
fbld
xor
push
and
lcall
les
out
call
inc
or
hlt
nop
mov
ds
loopne
lea
cmp
xchg
in
pop
add
adc
mov
test
cmp
add
mov
add
mov
cmp
test
insl
lds
sub
aas
xor
sbb
mov
jg
push
mov
xchg
pop
pop
in
loop
or
lds
pop
and
call
xchg
add
xchg
in
stos
das
insl
cmc
xchg
jl
test
inc
incb
jno
inc
pop
jge
jecxz
jl
sahf
mov
add
loop
push
cmpsb
nop
out
stos
jecxz
cwtl
lds
mov
push
mov
adc
sbb
inc
adc
jnp
jge
pop
or
push
fidivl
fisubs
lock
outsl
mov
mov
mov
inc
mov
sub
cwtl
shl
shl
repnz
clc
pop
ds
loope
pushf
sarl
popf
inc
mov
inc
pop
cmp
lods
push
popa
aas
imul
jg
lret
outsl
add
ljmp
push
aad
xchg
xchg
xchg
pop
aam
mov
xor
xor
dec
cmp
adc
mov
ljmp
push
test
cld
fistpll
lods
rcrl
xchg
fdivl
scas
push
inc
pop
or
cltd
mov
imull
adc
sub
push
rcrb
test
or
xor
loopne
je
xor
jg
lahf
mov
pop
and
cs
xor
ds
popa
inc
ret
adc
fadds
sbb
mov
stos
shlb
daa
jl
pop
into
cmp
cmp
call
fisubl
popa
ret
imul
std
sub
mov
aam
shl
scas
add
jnp
xchg
mov
shrl
into
dec
adc
jecxz
jo
and
adc
push
sub
and
shl
rolb
das
incl
je
dec
loop
loope
test
test
push
in
inc
cmpsb
int
sbb
stos
mov
shl
inc
js
inc
mov
mov
movsl
mov
ja
jae
imul
adc
lock
jp
xchg
cmpsl
dec
sahf
cmp
les
pop
call
push
or
cwtl
sub
nop
outsl
sbb
scas
in
inc
lahf
push
pmaxub
or
or
mov
xlat
jno
push
sub
cmp
int3
inc
in
sahf
aas
jmp
mov
pop
xchg
cmp
jl
xchg
cmp
sbb
mov
xor
adc
add
into
mov
and
es
stos
mov
push
ljmp
stos
ljmp
push
ja
stos
je
and
insb
push
sub
cmp
das
stos
sbb
js
jno
or
push
sar
imul
sbb
shlb
sti
xor
mov
ror
outsb
js
movsb
jl
or
dec
cmpl
ret
int
sbbl
or
jle
xlat
and
mov
push
push
test
xchg
and
sub
xchg
mov
pop
push
pop
loopne
xor
popa
inc
pop
scas
lods
xchg
call
push
cmc
fs
xor
jne
lret
cli
cld
mov
adc
xor
adc
pop
std
sub
mov
dec
sbb
push
add
je
jo
adc
clc
sbb
sbb
push
xor
push
popa
mov
xchg
aaa
xor
adc
dec
jnp
rcr
adc
xor
lahf
pusha
or
call
xchg
test
pop
push
sahf
sub
imull
cmpsl
outsl
in
aaa
bound
jg
orb
outsl
div
icebp
mov
out
mov
mov
out
bound
xchg
clc
mov
cmp
sti
lret
mov
arpl
adc
or
rcrb
arpl
xchg
xor
mov
xor
repz
cmpb
jg
test
loopne
and
andl
les
incb
jmp
lea
cmpsl
adc
cltd
loope
arpl
int
loop
stc
cmp
pop
cli
pop
sbb
data16
bound
cmp
xchg
mov
inc
cmp
es
mulb
je
imul
repz
jmp
lret
push
mov
pop
movsb
das
mov
gs
sbb
xchg
jle
inc
shlb
fwait
lods
pop
pop
or
in
mov
mov
outsl
mov
sub
int3
or
cmp
cmpsl
pop
and
jg
loopne
movsb
and
xor
scas
mov
cmp
pop
aad
in
ja
out
mov
add
and
cli
push
loope
mov
sti
inc
popf
and
call
bound
subl
mov
mov
push
arpl
mov
xor
js
sbb
out
lahf
xchg
inc
shl
mov
push
mov
or
out
shlb
pop
xchg
cmpsl
addb
test
cmp
jecxz
adc
loop
push
pop
mov
or
aaa
dec
insl
pop
adc
cmp
bound
add
stc
pop
jge
repnz
mov
push
cmp
jl
call
xorl
add
inc
xor
ds
jo
push
sar
mov
lds
cmpsl
loope
xlat
jmp
test
dec
ror
lahf
stos
or
daa
enter
cmp
fcom
ja
ss
cmc
xchg
lret
cltd
mov
pop
dec
sbb
lds
dec
xor
adc
mov
lret
or
and
repz
xchg
mov
stos
aad
rorb
dec
sarb
mov
test
jge
mov
lds
hlt
nop
mov
inc
push
js
orb
xor
sbbl
loopne
or
loope
subl
dec
faddl
inc
addr16
push
lret
xchg
cli
xadd
inc
cmp
cmp
lock
jg
cmc
or
es
sub
push
cmp
daa
xlat
loop
cli
or
add
mov
fsubrs
rcl
outsb
sub
mov
sti
inc
jae
repnz
xchg
icebp
inc
imul
fnstcw
xchg
popa
sbb
or
nop
loop
subl
outsl
cmp
mov
rorl
and
pop
or
arpl
push
cmp
and
fcompl
das
nop
push
cltd
sahf
inc
xor
imul
flds
sbb
pop
mov
mov
popa
repnz
ficoml
lods
or
jg
adc
jbe
add
int3
inc
leave
mov
inc
ljmp
lock
push
jbe
or
push
cld
data16
repnz
ljmp
jno
push
call
pusha
mov
sbbb
mov
getsec
xchg
out
pop
lcall
adc
pop
sbb
lahf
and
dec
mov
xchg
mov
in
outsb
cmpsb
std
xor
fsub
sarb
cmc
add
rolb
data16
add
mov
fmulp
mov
dec
stos
movsl
pop
xchg
mov
sbb
cmp
inc
pop
mov
cmpsl
fsubrl
daa
sbb
loopne
movsb
xor
jmp
adc
stos
sub
inc
or
test
daa
or
movsb
cmpsb
mov
jecxz
jno
arpl
lret
add
mov
dec
and
pop
xor
je
rorl
dec
pop
cmp
jg
mov
enter
and
add
cmc
or
push
pop
cmc
mov
lock
push
dec
psubsb
dec
mov
fdivrp
lcall
xor
and
lahf
comiss
xchg
sub
add
imul
pop
loop
jbe
and
lea
repz
je
in
dec
add
addr16
sbb
scas
idivb
xor
fxam
sbb
jo
jl
xlat
mov
mov
imul
addr16
hlt
and
hlt
dec
das
shlb
sbb
loop
adc
in
jmp
inc
mov
jecxz
mov
inc
sbb
imul
addr16
cmpsl
das
sbb
jnp
xor
pop
cmp
sbbb
into
mov
xor
jae
popf
and
or
or
das
and
test
xor
xchg
dec
lcall
push
std
out
xchg
loop
lods
aad
pop
ret
cmc
xor
hlt
push
inc
out
adc
jne
fisubs
fwait
xorl
icebp
or
jbe
push
cwtl
jbe
in
pop
or
mov
test
aaa
fnstcw
add
mov
push
mov
jg
sbb
mov
and
movsl
xchg
push
inc
rcrl
mov
jecxz
cmp
test
js
inc
adc
or
mov
roll
pop
movb
mov
in
das
test
dec
ret
mov
xchg
push
pop
js
cmc
pusha
shlb
pop
or
push
cmp
je
fistl
sub
xchg
rcrb
mov
xlat
mov
popl
add
sbb
add
cmp
rorb
mov
pushl
mov
or
jge
mov
mov
push
and
movlps
addr16
int3
lods
push
iret
imul
xor
jnp
adc
jne,pn
and
pushf
mov
js
jns
or
imul
mov
shlb
loopne
or
js
fwait
movsb
sti
idivl
adc
push
hlt
push
lods
lock
cmp
push
rcrb
mov
sub
cmp
xchg
arpl
jmp
lahf
sub
sbb
outsl
push
add
xchg
inc
pop
mov
mov
fldenv
adcl
outsb
into
and
loope
xor
xlat
mov
call
lret
mov
insb
or
and
push
imul
push
or
push
dec
mov
in
lahf
cmpsl
add
insl
lret
push
pop
xchg
jl
fldt
pop
push
movsb
sahf
lock
pop
pop
mov
jae
or
xor
sub
sub
sub
xchg
pop
sahf
xlat
lret
pop
add
les
mov
xchg
sbb
cmpsb
arpl
pop
lahf
rclb
mov
pusha
mov
or
out
outsl
cltd
sbb
push
add
pop
dec
movl
into
rolb
mov
or
clc
pop
cmp
jmp
add
pop
mov
xchg
loope
push
daa
fimuls
pop
in
mov
sub
xchg
pop
cmp
mov
lds
movsb
push
inc
xchg
xchg
scas
ljmp
xor
mov
dec
jp
or
mov
cmp
jmp
or
test
or
pshufw
popa
out
test
push
sahf
cmp
andl
jle
popl
mov
test
mov
inc
jb
add
inc
flds
pushf
push
ss
test
fdivrl
stos
add
xchg
lods
lret
sub
lock
ljmp
push
out
fwait
dec
leave
pop
aad
out
fisttpl
add
idivl
test
imul
and
fistps
out
or
prefetcht1
nop
aad
push
mov
jl
dec
pop
add
cmp
ja
fistps
dec
cli
negl
inc
fimuls
sub
mov
lahf
pusha
mov
ror
mov
imul
xor
inc
cmp
add
or
mov
lock
sti
dec
cmp
jp,pt
mov
loop
shll
lock
push
mov
or
pop
pop
test
jne
clc
loopne
fs
loopne
scas
mov
push
ljmp
or
sbb
push
mov
sbb
mov
xlat
adc
cmc
stos
xor
or
bound
add
cmp
sbbb
stos
jo
adc
and
clc
das
cmpsl
pusha
dec
pop
aaa
addr16
sbb
in
inc
pop
jle
test
fsubs
cs
add
xchg
mov
imul
cmpsb
cmpsb
ret
xor
inc
lcall
fwait
scas
push
mov
gs
cmp
inc
xchg
sbb
push
mov
cmpsl
test
pop
test
push
sbb
cltd
js
cmp
or
test
cli
mov
fwait
jmp
dec
xor
mov
pop
icebp
aad
sbb
lret
clc
cwtl
call
mov
add
call
sbb
add
mov
adc
mov
clc
icebp
out
adc
push
sub
loopne
xor
call
push
ljmp
cmp
push
fisttpll
addb
push
push
mov
jecxz
push
loopne
je
add
sti
movsl
dec
mov
test
aad
enter
inc
aaa
in
add
sti
xlat
mov
nop
aad
aam
roll
cmp
aas
ds
pop
xchg
mov
lock
push
in
dec
dec
push
repz
cmp
push
or
cmc
push
aaa
sbb
movsb
cmpsb
sar
lock
mov
inc
and
shr
je
lcall
push
cmp
cli
xor
push
movsb
mov
xabort
es
or
cmc
pushf
pop
add
sbbl
movsl
jb
in
dec
roll
cmp
xchg
sti
idivl
cld
cli
lods
jbe
or
or
jecxz
jg
pop
cmp
fcomps
ss
loop
jbe
push
sub
push
jne
adc
jnp
push
jle
adc
dec
xchg
pop
jns
jge
loop
cs
das
aas
push
pop
xchg
test
out
push
lsl
popa
lea
nop
jl
mov
loopne
dec
sbb
mov
repnz
inc
pushf
lock
sbb
jp
xchg
popf
popf
mov
dec
shll
jno
xor
dec
ret
jge
inc
mov
pop
sub
cmpsl
push
mov
js
cmc
add
stos
or
sarb
aas
mov
cmpsl
or
inc
jnp
pop
fiadds
push
and
enter
pop
lods
clc
mov
push
pop
add
mov
inc
lahf
mov
and
push
loope
add
mov
inc
or
inc
mov
jae
and
push
sarl
sub
jmp
dec
jp
sub
inc
std
jne
setg
mov
lods
stc
xlat
and
das
sbb
mov
mov
dec
adc
loope
and
mov
jp
push
loope
ljmp
dec
outsb
in
lods
xor
xchg
xlat
or
das
popf
sub
rorl
in
mov
push
sbb
in
push
add
dec
and
es
or
jbe
fadds
mov
sti
clc
aas
cmpb
cmpsb
rcr
dec
inc
pushf
pop
outsl
or
and
cmp
xchg
xor
add
push
xchg
or
dec
stc
insl
out
push
push
loopne
mov
mov
or
adc
fldt
sarb
ja
pushf
or
or
lods
dec
xchg
test
clc
mov
fld1
aas
jne
mov
jne
add
mov
sub
movb
lcall
xlat
repnz
subl
mov
pop
push
add
call
mov
jbe
xchg
aaa
cmpsl
pop
cld
jno
ljmp
rolb
scas
mov
je
bnd
test
stos
add
push
sub
add
lea
test
ss
jns
rcll
mov
outsb
xchg
push
fidivrl
inc
push
xor
js
iret
push
xchg
push
cmpsb
pusha
or
sub
add
icebp
xor
fwait
icebp
call
adc
in
inc
add
aaa
or
fldenv
mov
sub
test
mov
rclb
jmp
movsb
push
inc
es
call
xor
mov
sbb
insl
out
push
cld
cmc
aam
jecxz
test
in
adc
xor
push
adc
add
stos
in
and
es
lret
fldl
add
gs
je
in
and
inc
mov
mov
mov
and
sahf
push
icebp
add
jbe
mov
push
sbb
mov
fwait
jne
mov
lods
or
fwait
aas
xor
ss
out
xor
add
ja
lds
add
xor
insb
int
xchg
mov
fistpl
xchg
or
mov
pop
in
sub
lcall
nop
sub
mov
sti
es
xor
inc
cmp
test
mov
and
pop
negb
and
lds
adcl
loop
enter
pop
xor
jge
mov
ljmp
dec
sarb
add
or
adc
jno
sub
cvtps2pi
popa
mov
mov
or
push
mov
or
ret
adc
into
lea
int
push
jo
popf
out
inc
out
les
add
ret
test
push
xor
mov
lock
imul
inc
cmc
iret
js
push
xchg
jbe
sub
call
in
into
xorb
lcall
mull
cmp
add
popa
in
jns
frstor
fwait
imul
pop
adc
mov
fwait
jmp
dec
mov
pand
iret
ja
stc
imul
sbb
push
loopne
mov
shl
mov
add
arpl
cli
xchg
fimull
fstps
fwait
pop
jbe,pn
xchg
enter
stos
aaa
dec
pop
rcll
push
mov
cli
adcb
or
stos
pop
push
in
lds
fdivs
mov
nop
pop
or
sub
jg
sub
push
pop
adc
and
xor
mov
repnz
add
shlb
push
add
mov
xchg
or
pusha
movsb
or
push
stos
add
enter
stos
mov
test
iret
jp
repnz
nop
nop
into
bnd
push
leave
lea
or
mov
loop
bound
loop
push
lods
cmp
sub
sub
and
push
mov
jmp
mov
into
clc
icebp
test
ljmp
out
cmp
call
sub
hlt
cli
inc
mov
and
mov
test
or
jno
or
das
sbb
push
sbb
clc
jecxz
icebp
cmpsl
xchg
push
inc
es
mov
ret
cmp
in
data16
cmp
add
adc
mov
in
sbb
push
sbb
mov
mov
cmc
add
mov
mov
ficoml
xchg
clc
orb
mov
inc
mov
mov
jge
jecxz
and
das
in
rcll
div
jge
mov
aam
je
jb
bound
shll
fcmovb
and
xor
movsb
adc
jecxz
pop
mov
pop
pop
pshufw
sti
lods
add
mov
int
jae
xchg
jp
jo
dec
or
add
xor
fwait
cmp
cmpsb
js,pn
and
mov
mov
arpl
or
jle
mov
mov
push
or
xor
push
add
pop
xlat
dec
fiaddl
dec
xchg
mov
fiadds
aas
lock
push
xor
jbe
imul
cmp
mov
jmp
ds
xchg
orl
jge
mov
sub
xchg
inc
movsl
adc
fisttpll
push
hlt
add
jg
push
jo
lods
dec
movb
and
je
push
ffreep
and
lea
push
xchg
adc
inc
js
mov
sbbb
mov
fs
jno
cmp
pop
xor
mov
push
pop
pop
ja
std
dec
scas
inc
xchg
daa
mov
mov
repz
in
sbb
out
sub
dec
inc
cmp
out
push
mov
cltd
insl
outsb
data16
pop
push
out
lock
into
cmp
add
sub
add
push
add
lcall
ret
in
add
addl
push
pushl
call
leave
ret
imul
movl
xor
add
dec
cmp
jge
ds
in
adc
neg
inc
movsb
sub
in
jns
repz
or
sbb
mov
jnp
fistpl
and
inc
pushl
add
jp
std
jg
sbb
pushl
adc
sub
not
pop
adc
sub
leave
ret
adc
jns
jbe
adc
sbb
xorl
push
in
lea
push
lea
xchg
or
in
push
push
push
add
rcrb
sti
push
mov
addl
movsb
inc
outsl
xor
push
dec
ljmp
and
inc
pop
adc
nop
mov
iret
testb
int3
push
push
hlt
push
test
mov
push
stc
incb
push
icebp
dec
das
mov
lock
insb
dec
popa
adc
cld
push
adc
cld
dec
mull
dec
sub
mov
adc
push
pushf
jbe
push
daa
pop
xchg
and
mov
push
call
push
or
stc
adc
rcl
mov
or
ss
testl
sti
mov
clc
ret
jle
les
cld
push
and
rolb
stc
daa
push
std
jb
lods
mov
fwait
sub
xchg
lock
dec
in
inc
xlat
mov
adc
loope
inc
ja
push
loopne
in
xchg
in
dec
ds
jecxz
xchg
pushf
xor
sub
bnd
imul
jmp
jo
xorl
mov
jb
mov
fwait
aaa
in
jle
jbe
pop
hlt
push
push
nop
xor
enter
mov
mov
pop
ret
or
outsb
mov
call
scas
mov
xlat
div
cmp
mov
fisttpll
xor
cltd
add
push
stc
bound
mov
sti
add
add
out
out
mov
and
add
fstpt
adc
add
add
add
pop
lret
lret
imul
push
add
xor
add
mov
sahf
or
imul
add
iret
testl
aas
add
stos
add
ret
jmp
xor
std
or
jnp
idivb
in
fildl
arpl
das
shll
or
mov
jmp
pop
adc
and
mov
rolb
sbb
lods
push
imul
imulb
sti
add
add
adc
rolb
loop
and
cvtps2pd
sti
mov
filds
jns
add
xchg
sbb
rorl
push
das
add
mov
stc
adc
iret
add
and
in
ja
in
jp
nop
call
xor
sub
add
sbb
je
mov
in
pop
cmp
ret
or
jmp
adc
push
outsl
fsubp
test
add
mov
cs
cld
jmp
scas
sti
jbe
jb
cmp
mov
imul
mov
inc
cmp
or
in
mov
xchg
sbb
cmp
push
mov
add
cmp
leave
add
mov
xchg
test
ljmp
stc
pop
fs
push
sbb
lret
cld
fwait
mov
add
add
mov
mov
or
inc
adc
jl
aad
roll
sar
lock
loop
sbb
mov
mov
mov
inc
add
push
or
xchg
clc
int3
inc
idivb
out
pushl
add
addl
jmp
daa
inc
test
fwait
loope
xchg
or
mov
xor
add
in
stc
adcl
pop
test
mov
rcrb
or
mov
je
add
pop
adc
or
sbb
cmp
push
sbb
mov
add
add
inc
stc
inc
les
call
adc
aas
fisubrs
js
xor
add
test
add
in
add
or
inc
lahf
add
mov
outsl
cli
add
push
sbb
fsubrl
fs
pop
mov
push
jne
sub
cs
mov
cmpsl
xchg
inc
out
and
jle
or
inc
sub
das
sub
add
add
or
dec
inc
stc
xorl
mov
push
push
adc
in
push
scas
pop
mov
jnp
dec
xor
sub
hlt
mov
push
jns
xchg
add
subb
outsb
into
mov
push
mov
inc
cmp
shl
inc
cs
cmp
mov
or
inc
dec
shll
or
movsb
adc
push
sbb
inc
xchg
aaa
pop
lock
add
sbb
or
stc
decl
loopne
lock
push
aas
and
loop
mov
mov
sbb
lahf
xor
aas
jecxz
add
fsubrl
adc
stos
or
push
inc
pop
mov
stos
sahf
jg
mov
push
mov
xor
adc
mov
sar
sub
addb
and
loopne
push
jg
push
cwtl
pop
adc
sub
or
jbe
adc
adc
and
enter
and
inc
dec
popf
cs
add
and
nop
jno
xlat
shll
addr16
sbb
aam
pop
push
repnz
or
addb
lret
fidivrl
imul
xor
sti
mov
mov
outsl
sbb
add
pop
test
fistps
sarl
loopne
add
mov
add
adc
push
sub
arpl
bound
or
sub
popf
mov
das
cmp
push
mov
push
outsb
aaa
pop
jo
mov
ja
jmp
jmp
insl
out
cmp
ss
fs
sbb
cmp
movsbl
clc
mov
dec
dec
add
sub
rorl
pop
mov
push
cwtl
subl
call
xchg
inc
jecxz
movsl
add
lods
pop
cmp
mulb
push
mov
mov
rcrb
aaa
mov
mov
pop
std
mov
cmc
into
add
jl
mov
imul
jmp
dec
cli
adc
gs
inc
sbbl
add
mov
add
adc
add
incb
pop
mov
sub
lahf
scas
data16
out
adc
sbb
or
gs
das
mov
push
mov
lahf
mov
xor
push
pop
mov
scas
add
sbb
jecxz
cmp
or
mov
out
mov
xor
fldl
sbb
xor
adc
cmp
loop
add
mov
mov
add
lods
cld
sarl
stos
cmp
inc
xor
das
cld
cmpb
mov
push
dec
addl
roll
shlb
sbbl
pop
ja
lds
lock
mov
or
push
fldcw
ret
outsb
jg
insb
mov
mov
add
pop
jg
test
xor
into
std
dec
aam
xor
lahf
add
inc
testl
mov
lds
test
pop
jle
scas
in
mov
adc
jo
xchg
ljmp
mov
out
mov
add
sub
xlat
icebp
int
std
and
xchg
aam
mov
push
add
mov
jo
adc
stc
aad
push
testl
cmp
out
mov
xchg
fbstp
jmp
push
pop
jp
int
cmpsl
mov
rclb
fsub
and
scas
repnz
push
je
es
je
mov
std
dec
cmpsl
push
adc
orb
sbbb
sub
pop
pop
mov
rolb
add
mov
mov
testb
push
sbbb
inc
icebp
jg
stos
mov
inc
cmp
add
iret
shll
data16
pop
sbb
adc
insb
or
push
adc
pusha
cmc
cli
inc
pop
push
sbb
add
mov
mov
call
loope
cld
mov
ficoml
add
cwtl
shr
push
jmp
xchg
pop
mov
nop
mov
insb
out
adc
xor
mov
sub
xor
stos
mov
loope
cmp
mov
pop
jo
jb
inc
adc
insl
outsb
std
jae
or
xchg
mov
mov
nopl
leave
ja
nop
inc
divb
fwait
pusha
jb
dec
test
jno
clc
int3
lods
pop
jo
loope
sub
cld
out
fdivr
or
inc
push
pop
mov
int3
insl
out
xchg
xorb
add
adc
aad
and
adc
fwait
add
lds
sbb
mov
or
xchg
sub
je
xchg
stc
nop
aas
sbb
jb
and
jl
pop
pop
jge
mov
out
shr
inc
inc
call
sub
clc
push
and
xchg
fidivs
sub
cs
push
imul
loop
loopne
add
sahf
js
shlb
pop
add
add
fs
inc
sbb
movsb
xlat
push
or
push
add
stos
mov
mov
adc
inc
sbb
out
mov
and
add
andl
adc
fnstcw
cmp
add
shr
inc
test
stos
inc
add
mov
imul
push
daa
out
xchg
push
ljmp
pop
hlt
popf
or
add
inc
lds
outsl
mov
ss
xchg
test
inc
das
xor
decb
jmp
jge
ja
mov
sub
popa
mov
mov
in
or
adc
lea
pop
add
clc
loope
int3
pushf
and
add
sti
test
fldt
inc
das
ljmp
addb
enter
pop
loopne
iret
mov
nop
cmp
xor
add
adc
push
jae
lods
ljmp
or
jo
push
fisubs
adc
enter
or
scas
aad
mov
push
and
dec
pushf
jle
add
sbbb
lods
js
loope
loope
ja
and
adc
notb
push
cli
sbb
ret
add
or
mov
sbb
dec
out
scas
push
cs
mov
dec
aad
mov
aaa
insl
mov
fnstsw
xor
and
loopne
add
and
clc
lds
jno
cmpl
ljmp
add
cli
push
aam
lret
jg
add
mov
mov
mov
pop
pusha
push
cmp
adc
outsb
cmp
add
sbb
jmp
inc
mov
fsts
scas
fcmovu
mov
cmp
push
mov
mov
adc
int
push
lret
xor
jp
scas
aad
pop
les
mov
lcall
mov
or
add
jbe
sbb
testl
test
cld
jnp
add
mov
push
decb
fdivl
nop
mov
ds
sub
clc
mov
push
bound
or
xchg
xchg
inc
add
push
ds
insl
sbb
sbb
sub
lcall
fwait
add
push
int3
sub
fcom
std
add
add
mov
sub
mulb
pop
das
cltd
and
paddb
sbb
mov
inc
pop
adc
adc
int3
into
xchg
xchg
test
xlat
sbb
adc
or
nop
xor
leave
ljmp
dec
adc
fld
adc
clc
inc
jns
adcb
sbb
mov
out
mov
jecxz
dec
stos
loop
sub
nop
sbb
push
xor
out
pushf
sub
and
je
scas
mov
aad
into
stos
xor
add
mov
out
mov
or
push
and
test
icebp
adc
sahf
insb
mov
in
sbb
mov
sbb
stos
in
nop
std
aas
push
cld
enter
cmc
hlt
ficompl
rcrb
ret
push
ja
jno
adc
and
rcrb
push
jl
in
pop
cmp
mov
movsb
arpl
cld
cmp
cmp
mov
sub
push
mov
loopne
mov
push
out
outsl
in
cmp
xchg
testl
js
adc
xor
jp
mov
fsub
sub
jge
test
arpl
test
insb
cmpsb
incl
loope
and
pop
push
in
test
adc
addr16
xchg
mov
inc
adc
jbe
adc
sub
adc
mov
pusha
push
push
cmpsl
outsl
cmpsl
or
std
push
and
je
push
add
inc
dec
inc
jo
data16
push
push
pusha
ja
push
add
int3
cmp
inc
mov
push
pusha
pop
pop
push
inc
jecxz
int3
sbb
cld
mov
cmpsb
ret
mov
or
loopne
ds
or
outsl
aad
cltd
aaa
push
mov
pop
je
pop
inc
mov
cmpsb
insl
int3
xor
lret
in
sti
jns
int3
adc
sub
ret
lea
cld
xchg
mov
rcrb
and
clc
aas
int
jmp
daa
ds
mov
cld
test
nop
or
test
jge
cmpsl
cmp
scas
mov
or
adc
insb
lods
in
lods
and
mov
adc
xchg
call
fcmovb
stc
scas
addb
outsl
fwait
jg
shlb
xor
call
cs
adc
jecxz
mov
fwait
sarl
aaa
clc
push
loope
inc
pop
jne
iret
pop
mov
lock
cmpl
pop
loopne
cmp
sub
das
fcomi
lea
loopne
jle
repnz
int
movsl
js
fidivrs
insb
out
push
cmp
insb
pop
sti
mov
shrl
stos
push
push
fs
xchg
mov
sbb
xor
xor
inc
clc
or
sub
or
xor
fidivrs
lea
pop
cmp
sbb
jl
fs
out
pop
out
jbe
push
fwait
inc
push
pop
push
adc
push
shll
cmp
stos
mov
dec
cwtl
je
cmc
pop
xor
lahf
hlt
sbb
xchg
mov
cmpsl
sub
cmp
pop
cld
mov
iret
sbb
push
stc
jmp
lds
add
subl
movsl
xchg
xchg
mov
add
aam
jge
pushf
addl
insl
sub
push
cli
test
insb
sub
lret
lock
push
xchg
add
sub
mov
adc
dec
in
cmp
push
nop
xor
push
cli
jge
push
sub
std
inc
or
xchg
cmp
and
in
addr16
pop
cmp
daa
in
pushf
jb
sub
jge
negb
xchg
test
mov
mov
jnp
daa
lcall
and
clc
daa
pop
mov
sub
orb
cmpsb
shlb
popa
lds
and
fwait
enter
or
adc
pop
movsb
cmpsl
jle
push
cli
fwait
push
in
arpl
add
rcll
push
lret
shrl
push
cmp
sar
fisubs
mov
js
mov
jp
push
mov
add
push
sbb
aam
mov
out
stos
cltd
adc
add
int3
bound
dec
testb
lods
fisttpl
repz
pop
call
rorl
lcall
pop
mov
loopne
pop
aaa
mov
cmp
repz
add
dec
mov
adc
xor
pop
jl
repnz
int
cmp
popa
or
aas
sub
andb
sub
mov
popf
cmp
adc
mov
mov
adcb
mov
lea
cs
pop
mov
scas
jbe
pusha
lcall
cmp
imul
pop
mov
insl
aas
jns
pop
and
xchg
testl
xchg
push
inc
cmp
stc
lcall
fmuls
sbb
pop
cwtl
push
jle
xchg
mov
adc
hlt
mov
je
cmpsl
jmp
cmp
call
mov
or
and
pop
fdivr
mov
jge
mov
and
inc
mov
inc
xchg
stc
mov
or
push
xchg
mov
sbbb
adc
jp
xor
iret
sahf
incb
lahf
add
mov
sub
les
fcoml
clc
or
mov
shl
mov
ds
push
rcrl
scas
or
popf
repz
fsubrs
addr16
sub
jle
jg
add
pop
push
pop
sbb
incl
ja
std
mov
jmp
inc
sub
lcall
push
repnz
aaa
loopne
push
inc
ljmp
sub
inc
jg
inc
push
xchg
out
test
gs
mov
inc
inc
sub
push
push
pop
lock
xchg
adc
push
adc
sub
repz
pmuludq
out
xor
mov
decl
fmuls
push
xchg
inc
stc
frstor
idivl
sbb
lock
adc
inc
pop
cmpsl
stos
std
push
stos
inc
mov
sub
insl
push
adc
jle
scas
dec
ds
lahf
pop
in
dec
mov
lods
mov
insb
sbb
sbb
cmpl
cmc
movsb
fdivrs
pushf
cmp
cmpsl
push
xor
push
hlt
xor
jle
fistps
dec
sub
cwtl
jno
sub
enter
popa
inc
xor
int3
sub
sub
aas
rorb
adc
in
shrb
adc
hlt
push
cwtl
sub
pusha
movsb
jg
and
mov
add
mov
push
out
pusha
push
jle
in
js
aas
shrb
adcb
decb
loopne
dec
aaa
sbb
hlt
loop
addb
mov
cwtl
or
bound
add
or
cwtl
incl
cwtl
clc
adc
xchg
mov
movsb
sbb
and
inc
les
scas
jmp
mov
cmp
mov
decb
add
push
test
out
dec
bound
mov
std
in
loop
xchg
pop
into
adc
ss
ss
mov
mov
sub
pop
inc
jecxz
scas
pop
lods
lcall
sub
inc
push
rcrl
xchg
fsubl
leave
adc
xor
pusha
mov
loope
fistps
pusha
push
ret
ret
incb
sbb
in
ret
in
nop
out
inc
pop
mov
sbb
xor
add
syscall
sub
into
add
pop
push
xor
cli
pop
mov
ret
add
testl
iret
push
jns
push
xchg
mov
shrl
cwtl
add
and
int3
xlat
subl
incl
adcl
xchg
mov
mov
int3
adc
fwait
inc
loopne
add
inc
mov
iret
xor
add
inc
adc
mov
bound
fidivrl
mov
cmp
es
andb
loope
push
sarl
jns
dec
loop
sbb
xor
xorb
shrb
sub
loop
aaa
inc
dec
add
push
sbb
cmp
push
icebp
scas
icebp
pusha
pusha
adcb
clc
sbb
pop
mov
xchg
mov
lds
cmp
fisubs
mov
xchg
adc
or
mov
orw
jl
add
das
lods
mov
jl
push
pop
cs
mov
sarl
enter
or
cmp
icebp
aas
pop
cld
push
add
orb
stos
cmp
das
fidivl
mov
pop
or
in
xadd
lods
push
int3
scas
or
stos
adc
jnp
inc
add
lahf
jb
xor
xor
pop
fsubs
insb
imul
adc
test
loopne
mov
in
jl
arpl
dec
adc
sahf
push
sub
pop
lcall
xor
js
jae
mov
push
mov
arpl
adc
stc
js
mov
cmpsb
add
or
add
add
test
bound
aad
inc
and
dec
sub
mov
push
jb
pop
inc
ljmp
mov
push
sub
nop
xchg
xchg
str
inc
in
bound
pop
subl
dec
js
les
xchg
es
ljmp
pop
insb
pop
dec
xor
repz
adcb
mov
out
mov
rolb
or
cltd
adc
cmpsb
push
aaa
into
push
pop
pop
sahf
loopne
sbb
cli
cld
sbbb
scas
aam
lock
adc
fstpl
jno
jle
jg
rcr
subb
sahf
dec
inc
call
cwtl
pushf
stc
shll
sbb
ret
out
call
inc
insl
or
push
push
test
mov
pop
mov
jge
imul
dec
xchg
roll
pop
cmpsb
add
sbb
clc
pop
cmp
and
notl
add
fbstp
jo
rorl
ret
clc
xchg
sbb
fstpt
cmp
cmpsb
cld
xchg
out
inc
adc
push
shlb
enter
or
lods
mov
sbb
sbb
xchg
pop
sbb
cltd
repnz
push
lods
ljmp
adc
sbb
mov
fidivl
push
lea
push
int
inc
scas
pop
and
xchg
or
dec
clc
add
nop
xchg
sarb
add
adc
clc
mov
iret
xorb
xchg
mov
dec
xchg
sarl
mov
push
ljmp
pop
mov
dec
lret
leave
mov
sti
xor
lods
int
cs
jl
jb
scas
ljmp
jns
xchg
fisubl
pop
mov
add
cld
mov
lret
incb
xlat
cmc
ret
xor
pop
test
loopne
push
pop
test
sbb
popa
fldl2t
movsb
sub
mov
push
jb
xor
in
pushl
xor
rorl
hlt
mov
mov
sbb
jne
push
mov
hlt
rol
cli
pop
add
jnp
add
mov
fistl
mov
mov
inc
mov
fsubrl
repnz
inc
addb
std
jle
push
lea
cld
fisubrl
dec
pusha
cmp
rcrl
nop
movsb
push
int
rep
push
or
pop
enter
hlt
cli
pop
or
sub
test
add
lahf
call
add
push
ljmp
scas
dec
js
sarb
flds
pusha
cmpsl
repz
je
jecxz
mov
inc
push
test
stos
jle
dec
jo
shll
mov
add
roll
insb
jecxz
jnp
mov
call
fsubrp
xchg
stc
xor
adc
sti
mov
movsl
mov
jp
shll
lods
cld
add
repnz
jbe
add
decl
rcl
std
push
mov
in
ret
stos
pop
out
push
stc
shr
pop
cwtl
mov
jle
outsb
and
sub
sbb
cmpsl
sub
push
sub
leave
in
or
cmp
and
add
dec
add
jne
out
fbld
xchg
jecxz
sub
out
pop
mov
call
idivl
jb
roll
das
pop
pushf
filds
imul
and
test
pop
ret
les
out
into
popa
fbld
dec
inc
vpsubsb
scas
mov
add
adc
data16
rorb
dec
dec
cld
mov
call
lcall
mov
repz
inc
dec
lock
inc
shl
or
loopne
push
lea
sub
subb
sti
mov
lea
loope
incl
pusha
pop
clc
aaa
fistpl
addr16
add
jmp
vsubsd
ret
clc
sub
std
jp
adc
fiadds
fiadds
lds
inc
jmp
sahf
ret
add
xchg
mov
mov
divps
mov
out
xor
aaa
aam
xor
jns
jae
lds
fwait
shlb
addr16
jbe
loopne
adc
outsb
dec
or
inc
mov
pop
into
loope
sbb
ds
ret
sbb
cmp
jo
cmp
or
data16
aaa
sbb
jg
sub
ds
cs
iret
add
cmp
scas
cmp
sub
das
jb
cmpsb
loopne
into
imul
mov
nop
sbbl
sbb
xor
aas
cmp
cmp
push
jnp
adcb
std
aas
cld
sbb
push
add
add
insb
add
push
loope
scas
or
test
adc
or
mov
sub
add
mov
adc
fistpl
fs
adc
enter
andl
mov
add
int
std
jge
jp
ret
pop
inc
loopne
icebp
xorl
jle
push
mov
push
and
sub
mov
mov
mov
hlt
jnp
mov
or
mov
mov
test
inc
cmp
jle
idivl
push
test
mov
cwtl
testb
add
fistpl
pop
push
pop
shlb
lret
sbb
pop
cmp
jb
in
test
mov
xor
or
lock
das
push
test
mov
lods
stos
cmp
sarb
shll
xchg
xorl
div
fnstsw
or
fists
fldcw
mov
jmp
shrb
shl
insb
fidivrl
rolb
xchg
shr
cs
pusha
mov
adc
sti
dec
lds
in
int
cmpsl
call
ljmp
iret
out
or
inc
sub
dec
js
nop
les
lock
mov
icebp
imul
bound
in
aas
sti
dec
mov
call
adc
iret
xor
not
xchg
sub
mov
mov
xor
add
mov
ja
mov
in
mov
cs
popf
scas
cwtl
mov
jnp
sahf
sub
inc
fiadds
shr
mov
call
jecxz
test
mov
xor
cmpl
cmp
sub
test
stos
xchg
and
mov
fstl
clc
hlt
in
jl
aaa
inc
lcall
imul
or
mov
dec
push
inc
or
fwait
pushf
or
mov
out
xor
push
mov
mov
call
pop
aas
or
dec
lret
addr16
hlt
mov
ret
add
fdiv
movsl
int
cmp
push
sbb
out
scas
daa
sbb
mov
ficoml
adc
add
lock
mov
and
inc
movsb
subl
leave
adc
outsb
push
cmpsb
icebp
fwait
push
cmp
incb
dec
sti
push
fstpl
push
iret
push
test
mov
push
stos
in
add
push
cmc
or
add
mov
sbbb
nop
and
jmp
std
stos
rcl
adc
fadds
popa
ds
xor
push
or
divl
sti
sub
cltd
mov
cmp
mov
xchg
xchg
arpl
psubusb
ficomps
xchg
mov
stos
fld
fwait
push
jle
cmp
pop
fildll
popf
test
sub
and
inc
ja
push
popf
jmp
loopne
lock
or
outsl
pop
xchg
dec
add
add
xor
mov
jecxz
pop
nop
push
pop
mov
xor
subl
hlt
lcall
inc
test
push
in
pop
or
out
adc
add
push
xchg
test
adc
mov
sub
aam
sbb
cmp
push
pop
xchg
fisubrl
loopne
xchg
jge
mov
and
fists
lahf
cli
popl
fsubl
jmp
cmp
add
icebp
stc
mov
inc
adc
xchg
xor
add
sub
gs
fwait
pushf
pop
pushf
mov
nop
lods
pop
ret
ret
mov
cmp
je
lock
imul
dec
lock
sbb
mov
aas
repnz
sub
popf
arpl
cwtl
or
stc
loop
mov
js
pop
push
in
pop
cli
cld
mov
dec
dec
push
add
push
aas
in
jae
push
add
cmc
cmp
inc
es
dec
pop
jge
inc
add
nop
repnz
pop
std
movsl
ds
adc
push
add
pop
jecxz
or
out
aam
jb
sbb
rclb
les
sbb
xchg
outsb
fcom
inc
push
aam
xchg
fcmovbe
cmp
cmpb
sub
mov
jl
xlat
xchg
stos
ret
mov
in
in
sbb
in
push
ret
fisubl
loope
push
ljmp
sahf
push
mov
setl
xor
and
enter
xchg
out
sti
dec
cli
mov
jle
mov
sbb
sub
fildl
adc
mov
pop
cli
test
lret
mov
sbb
loope
cmp
pop
cld
mov
mov
pop
outsl
or
sub
mov
call
jge
popa
lea
and
shlb
lock
fildl
xor
cmc
adc
pop
push
fs
bound
jecxz
movsl
push
sub
jecxz
js
cmc
cli
xchg
ljmp
lock
mov
pop
cmp
mov
in
or
push
inc
lods
lcall
mov
push
mov
xchg
cld
nop
and
fbld
push
hlt
fs
cmp
pusha
outsl
push
cs
mov
les
clc
sub
and
adc
lods
jl
in
add
pusha
cltd
xor
ret
xor
mov
in
arpl
push
outsl
sbb
lock
add
add
in
out
pusha
stos
mov
ljmp
dec
jp
mov
mov
mov
mov
cmpsb
or
adc
jo
jmp
cli
clc
sahf
shll
push
inc
inc
mov
shrl
ja
cmp
inc
fstl
push
movsb
loop
sub
in
add
push
fsts
insb
dec
das
rcl
insl
cli
dec
push
bound
xor
push
sbb
mov
sahf
cmp
cmc
insb
mov
mov
jmp
rcrl
idiv
xor
les
dec
jmp
mov
mov
sbb
fsubrs
jle
test
jecxz
sbb
lret
xchg
cltd
outsb
lret
add
dec
mov
and
add
leave
or
sahf
clc
testb
mov
mov
dec
jmp
pop
call
jmp
pop
xorb
out
push
jmp
cli
adc
int
mov
sub
pop
cmp
loop
rorl
mov
xlat
jmp
or
push
add
xchg
sti
jne
cmp
add
jle
icebp
cmp
cmp
cmp
enter
call
js
fistps
adc
lret
xchg
mov
pop
or
and
push
cmp
mov
and
sub
inc
jl
imul
inc
pop
loopne
sub
mov
cvtdq2ps
push
jg
mov
imul
enter
inc
loope
cmp
inc
fcmovnu
cmp
cmpsl
lcall
fistl
lods
rcl
and
loop
jmp
test
test
in
je
out
divl
scas
push
or
xor
xor
push
fidivs
adc
leave
xor
rorb
in
mov
pop
pop
insb
jp
in
push
mov
out
mull
pop
sbb
inc
push
popa
push
mov
mov
jnp
sub
daa
sahf
ret
add
lods
pop
cs
movsb
ljmp
out
ja
adc
ja
mov
add
je
rorb
push
loope
and
cmp
fcoml
jge
push
mov
dec
cli
pop
rcrb
inc
mov
xlat
movsb
pop
daa
js
add
test
mov
jno
roll
xchg
lock
ret
hlt
popf
add
movb
loop
test
inc
add
pop
or
mov
pop
cli
sub
mov
dec
sbb
adc
add
jnp
xchg
mov
xor
std
cmp
in
sub
and
sbb
cld
aam
or
pushf
sahf
in
out
xchg
pop
add
inc
pop
mov
ds
lcall
rclb
in
push
dec
dec
lods
xor
mov
mov
adc
push
mov
push
or
xchg
es
nop
mov
pop
arpl
mov
sbb
popf
and
arpl
xor
xchg
mov
repnz
push
or
test
adc
ds
aaa
jo
push
mov
cld
jecxz
adc
mov
mov
cmpsb
call
push
add
jnp
mov
push
cltd
dec
mov
xchg
inc
clc
or
jl
mov
pop
divl
mov
push
jle
inc
lret
push
lret
inc
add
push
push
nop
cmp
notb
sub
jb
sarl
fcmove
cmp
pop
mov
clc
mov
inc
xchg
frstor
fisubl
add
dec
ret
ficoms
push
push
hlt
es
movl
jns
sarb
sub
mov
mov
outsb
push
daa
mov
inc
cltd
scas
pop
data16
ds
push
test
mov
add
into
jge
cld
cmpsb
loopne
lcall
out
add
or
adc
insb
stos
cmp
fbld
push
insb
lods
add
add
add
xchg
out
dec
outsb
std
inc
ficoms
stos
in
add
ret
mov
test
mov
mov
push
add
mov
sbb
jbe
ss
jo
sub
add
jp
or
shlb
xor
movl
jp
js
pop
jo
roll
imul
test
loope
adc
add
mov
dec
pushf
repnz
adcl
scas
mov
mov
pushf
fistpll
pop
cmp
das
call
pop
xchg
ficoms
repz
pop
push
jge
shll
ret
daa
jl
fdivrs
imul
sbb
mov
mov
in
hlt
sbb
ret
dec
in
lret
dec
mov
mov
aam
xor
inc
mov
outsb
sub
lret
fisubrs
je
mov
sub
insb
adc
icebp
push
pop
mov
jb
pop
pop
bound
in
fwait
loope
sub
mov
push
fdiv
push
ret
test
dec
mov
loopne
fsubl
hlt
add
mov
push
mov
mov
ljmp
sub
pusha
xor
push
jmp
push
xchg
cwtl
mov
inc
aaa
lock
push
je
push
xchg
pushf
dec
pop
jns
xlat
fstpt
lret
adc
jge
dec
aas
push
push
into
out
in
aad
jmp
xor
test
jmp
loopne
mov
mov
or
mov
cmpsb
adcl
loop,pt
ja
dec
ss
sub
push
mov
aam
fdivs
xor
cltd
lds
mov
push
stc
sub
push
add
inc
rorb
lods
mov
xor
push
mov
sbb
xlat
in
and
fsubl
or
out
leave
dec
test
ret
lahf
popf
mov
pusha
mov
addb
pop
data16
test
cmp
mov
loopne
js
cmc
in
rcrb
cwtl
push
mov
dec
scas
jp
jmp
cmp
adc
mov
mov
mov
sub
test
xor
pop
xor
mov
and
xchg
sub
add
adc
jae
scas
jmp
jmp
jg
mov
dec
aad
adc
sbb
inc
fmuls
mov
mov
pop
jmp
icebp
sub
fidivs
orb
int
testb
idivb
data16
jo
sbb
add
push
scas
rcrb
cwtl
cmp
push
mov
or
sub
fildl
addr16
jnp
sbb
sbb
hlt
sti
sti
inc
jo
jg
into
sub
xchg
inc
stos
xchg
stos
js,pt
leave
mov
push
mov
jbe
add
stos
jno
test
mov
lahf
dec
in
enter
loopne
xchg
ret
add
faddl
out
scas
leave
ss
pusha
inc
sbb
aas
fisttps
outsl
call
mov
in
shrb
testb
mov
cmp
outsb
loop
rcrl
cmp
addr16
push
dec
add
adc
jae
ret
pop
mov
mov
test
jl
clc
out
add
cltd
add
push
idivb
and
ffreep
adc
ss
adc
jnp
add
add
sbb
movsb
jl
pop
loope
pop
in
sbb
push
sub
sarl
and
cmpsb
xor
pop
cmpsb
out
stos
pop
fstpt
inc
iret
pop
or
scas
data16
xchg
out
sahf
loopne
fildll
mov
pop
lds
test
in
fiadds
or
push
jp
xor
sti
mov
xchg
incl
jle
xchg
add
xor
mov
orb
mov
push
inc
push
mov
icebp
pop
mov
int
or
xchg
fwait
and
jle
push
jp
adc
xor
jg
mov
fwait
outsb
add
mov
jp
mov
jnp
mov
push
std
push
sti
add
and
test
jb
cmp
dec
adc
enter
sbb
aas
in
and
pop
lret
aaa
mov
faddl
adc
fbld
jge
sarl
data16
test
mulb
push
cmp
out
es
mov
mov
push
sbb
or
push
mov
xchg
aad
cmc
jmp
out
fistps
cmpsl
push
inc
jmp
orl
adc
sbb
aam
push
or
inc
inc
mov
or
mov
jbe
xchg
add
pop
add
in
fdivs
xor
jle
jg
ds
lds
push
mov
sbb
cld
fidivl
sub
xchg
outsb
rorb
mov
sbb
push
cmp
scas
hlt
int3
pusha
pop
out
jno
sub
and
pop
add
add
pop
add
out
and
rclb
std
test
addr16
frstor
mov
in
cld
testb
iret
mov
dec
cwtl
leave
fildll
roll
adc
mov
sub
ret
sbb
dec
xchg
call
fistpll
pop
out
out
repz
push
icebp
lds
pop
xchg
mov
in
filds
xchg
sub
xor
dec
testl
int
or
out
mov
pusha
adc
mov
pusha
pop
std
adc
mov
scas
mov
xchg
lret
ret
js
add
in
lock
hlt
jmp
jp
lods
mov
add
insb
pop
sbb
sub
adc
push
jne
sbb
je
mov
mov
and
movsb
jge
jno
sub
inc
jbe
and
push
push
pop
imul
mov
pop
pop
xchg
jecxz
iret
adc
jmp
mov
aam
add
mov
inc
call
cs
adc
jo
pop
or
push
mov
repz
add
nop
scas
fimuls
mov
inc
mov
gs
mov
cld
popa
pop
stc
mov
jmp
xchg
jecxz
icebp
stos
lcall
clc
mov
xchg
mov
ljmp
sbb
cmpl
inc
push
cs
mulb
lret
iret
js
loopne
enter
add
shlb
mov
sti
dec
pop
or
repnz
das
sub
dec
mov
push
sub
and
cmpsl
pop
je
cmpsb
jp
add
and
mov
fmul
bound
into
lret
jmp
mov
es
xor
inc
mov
loope
dec
cli
lret
movsb
mov
cltd
loop
fcoms
pop
mov
dec
jle
clc
hlt
aam
add
mov
movsb
add
mov
cmp
lahf
aad
ljmp
scas
inc
ds
xchg
mov
adc
nop
clc
or
push
adc
jnp
mov
pop
adc
sub
sti
aam
pop
sbb
lods
stc
hlt
mov
or
stc
cld
paddsw
pop
sub
jnp
xchg
lods
push
fldl
sbb
and
pop
notl
sbbl
cli
ljmp
jmp
lret
jp
dec
imul
aaa
sub
add
shll
ljmp
cmp
jo
xchg
pop
adc
test
adc
mov
inc
jecxz
lods
mov
adc
call
rolb
push
cmp
mov
movb
mov
pop
cmp
and
movsl
xor
jecxz
sub
adc
xchg
xchg
mov
scas
pop
sub
jno
icebp
or
hlt
jg
sub
aad
int
jmp
push
int
jbe
mov
and
call
repz
scas
inc
or
pop
jbe
imul
mov
add
insb
mov
ja
mov
and
jg
and
daa
in
mov
ljmp
sub
rcr
pop
push
clc
pop
aam
add
test
pop
shrb
idivb
test
or
mov
fsubr
fists
mov
sarb
cld
call
or
xchg
cmpsb
jae
add
push
push
add
outsb
sub
nop
adc
or
push
cmp
fisttps
stos
jnp
pop
adc
aad
aas
pop
and
mov
dec
mov
push
negl
add
pop
ljmp
loope
xlat
inc
xchg
jns
or
push
adc
ret
inc
js
push
loop
sarl
out
lock
dec
data16
sti
int3
cltd
push
xor
push
push
mov
fsubs
repz
mov
aad
xor
xor
cmc
das
adc
jg
rcll
ss
es
cs
mov
and
vcvtss2si
addb
fdiv
cmpsb
pop
push
popf
out
pop
pop
std
or
rolb
sbbl
and
rol
ret
pop
mov
imull
add
pusha
icebp
mov
add
cmpb
push
call
pop
mov
sbb
add
ja
push
stos
cmp
sbb
sub
loopne
es
js
mov
pop
shlb
in
xchg
jg
and
paddw
or
cli
xor
leave
lods
sub
imul
push
inc
in
pop
add
mov
imul
aam
addr16
xor
or
je
adc
cmp
cs
add
icebp
and
xor
subb
sarb
cld
adc
cwtl
ljmp
insl
xor
push
mov
mov
xorl
mov
shrl
imul
mov
nopl
jl
cmp
adc
daa
gs
jmp
ja
xchg
stos
xor
adc
or
mov
push
lcall
cmp
cmp
adc
cld
mov
add
push
scas
and
fldt
push
mov
jl
jmp
adc
cld
ja
icebp
std
hlt
xlat
add
sbb
ss
popa
sbb
add
pop
mov
nop
push
cmp
sbb
inc
xchg
xchg
lea
repnz
loopne
lods
fwait
mov
pop
movsl
notb
out
mov
notrack
pushl
inc
sbb
lret
jmp
xchg
test
or
js
push
int3
inc
ror
xlat
ret
and
sahf
sbb
inc
xlat
into
es
mov
cmp
add
or
xor
pop
incl
push
push
gs
jnp
out
jmp
lock
mov
sub
loopne
in
xchg
inc
xor
add
sbb
push
lea
fmulp
push
sbb
push
xor
mov
scas
inc
fwait
sbb
sub
push
add
xor
mov
call
pop
rclb
lret
and
shlb
scas
loop
push
fwait
adc
lock
xchg
adc
push
test
dec
jae
mov
sar
pop
test
push
aam
mov
jae
adc
jg
stos
enter
add
mov
or
out
adc
dec
scas
testl
cmp
stos
push
outsl
push
cmc
xchg
mov
xchg
sbb
ds
add
or
sti
lcall
test
sbb
orb
xchg
out
xchg
or
adc
outsl
mov
loop
out
jnp
and
push
mov
dec
add
cmp
adc
add
aas
inc
ret
pop
cli
insb
mov
arpl
movsl
adc
xor
add
nop
pop
sub
mov
sbb
fcoms
popl
and
test
mov
fcomip
and
scas
les
call
je
mov
repnz
push
push
or
jbe
xor
mov
shrl
add
cmp
loop
inc
and
or
or
sbbl
inc
jnp
mov
pop
das
shrb
mov
or
scas
add
cmpsl
fs
jle
rolb
iret
add
lock
and
xchg
mov
adc
mov
mov
jo
fdivrl
pop
shl
sbb
mov
xchg
jg
cmp
outsl
stc
in
dec
test
int3
mov
sub
cmp
ret
decl
je
push
imul
jo
out
dec
xor
sub
xchg
add
ss
sbb
mov
jne
sbb
pop
mov
sbb
cmp
cmpsb
and
inc
stc
test
scas
ret
sub
and
mov
movsb
cli
sbb
jg
mov
mull
mov
aad
pop
ljmp
out
roll
cmp
repnz
push
mov
or
jno
push
pop
and
addr16
adc
add
pusha
cmp
sar
into
push
into
cmc
sbb
jmp
loopne
ss
jo
add
les
stos
mov
scas
push
out
pushf
cmpsl
aaa
popf
clc
pop
mov
jle
sbb
les
les
jo
jno
cmp
jle
mov
lock
ss
push
dec
add
mov
mov
inc
mov
xlat
int3
lcall
adc
mov
inc
sbb
push
in
sub
cld
sahf
cmpsl
gs
cmp
inc
stos
cmpsb
mov
add
clc
mov
nop
or
or
add
ljmp
clc
mov
sbb
outsl
adcb
push
pop
or
push
mov
and
and
sahf
sbb
adc
sub
pop
mov
test
xor
popf
sbbb
adc
insl
pop
and
pusha
jbe
cmpsl
lcall
push
or
push
add
iret
orl
add
out
and
cmp
xchg
decb
int3
mov
call
popf
inc
imul
js
pop
lcall
mov
loopne
aas
or
pop
ficoms
bound
cltd
xchg
cmpsb
data16
push
test
mov
rcll
push
mov
add
jecxz
mov
push
sbb
cmp
shll
xchg
pusha
pop
mov
test
daa
jno
dec
jnp
pop
pushf
fidivl
in
pop
mov
iret
cmp
je
lock
mov
inc
jb
mov
adc
sbb
int3
je
shrb
add
loop
cmp
inc
sti
out
inc
xchg
test
or
leave
cld
pop
sti
movlps
cmpsb
mov
xchg
push
fiaddl
mov
insb
mov
pop
inc
lcall
mov
mov
adc
into
rorb
jg
dec
jne
xorb
subb
jmp
adc
mov
sbb
rcr
lock
cwtl
xchg
or
jl
ret
cmp
aaa
gs
in
push
jno
pop
pop
mov
xchg
out
push
stos
mov
push
cld
adc
fs
dec
stos
dec
push
rcll
out
cmp
pop
loope
sub
mov
out
or
jno
sub
sbb
adc
push
xor
clc
mov
mov
adc
mov
xor
xor
ret
lahf
sub
loopne
int
push
inc
mov
mov
mov
jecxz
adc
jp
xchg
imul
mov
cltd
addl
fstl
adc
daa
push
add
imul
jbe
cmp
or
jbe
add
movsb
ja
mov
dec
xchg
outsl
push
repz
pop
mov
enter
sbb
mov
lods
jmp
inc
and
test
sahf
data16
mov
pusha
sbb
jbe
mov
mov
jg
mov
loope
push
xchg
clc
add
sbb
adc
adc
lods
inc
pushl
hlt
cmpsl
sub
jne
and
sahf
cmp
xor
stos
ss
add
push
lcall
pop
or
cmp
dec
fsubrl
data16
fwait
push
push
pop
addl
mov
jno
fidivs
hlt
or
out
lahf
and
sahf
mov
xchg
int3
mov
lods
sub
movsl
stos
jo
jbe
cmp
mov
xchg
test
mov
clc
xchg
js
test
loop
push
adc
out
add
mov
push
sub
ret
or
arpl
sub
jb
and
sub
stos
push
ljmp
popa
sbbl
pop
jno
fidivs
lret
pop
lret
or
inc
sbb
sbb
push
mov
mov
or
loopne
nop
xchg
bound
sub
iret
mov
sub
or
lret
pushf
int
jo
roll
mov
and
stos
and
jg
out
insb
dec
daa
or
xor
push
adc
shl
inc
xor
xor
and
mov
push
rorb
mov
loope
mov
xlat
ds
add
push
scas
cmp
sbb
enter
cli
xchg
inc
sti
arpl
rcrb
js
das
fimuls
xchg
outsb
xor
mov
movsl
mov
sti
movb
xchg
xchg
testb
mov
std
and
enter
ret
push
lret
popa
mov
jb
adc
mov
jecxz
cli
or
in
cmpsb
sbb
lea
mov
rcll
adc
pop
neg
xlat
cli
push
and
sbb
fxch
mov
fsubrs
xchg
pusha
ret
andb
jge
adc
cmp
addr16
or
cmpsb
lds
rcl
scas
loope
loopne,pn
loope
sub
mov
leave
or
fdivr
sbb
sbb
out
js
and
push
int3
xor
loope
popa
sbb
pop
fldl
hlt
popa
push
pushf
push
and
sbb
aam
data16
inc
mov
xchg
cmpsb
xchg
outsl
fs
cmp
cmp
outsb
xchg
jnp
incl
enter
sub
sbb
test
ljmp
adc
insb
mov
sub
jge
in
scas
into
bound
fists
idiv
scas
mov
xchg
pushf
dec
sub
clc
or
pop
mov
call
dec
leave
ds
das
pop
pop
scas
enter
rcrl
out
or
jns
push
push
cs
les
xchg
add
andb
pop
jle
mov
sub
mov
loopne
mov
cmpsb
dec
lods
cmp
xor
or
mov
mov
jae
sub
lock
or
push
mov
cmc
mov
mov
cli
or
mov
or
stos
inc
push
mov
jp
jae
pop
call
mov
and
nop
and
pop
sbb
hlt
outsl
incl
mov
fs
or
cmc
jmp
fdivr
int
mov
lahf
dec
nop
and
add
adc
fldl
add
sbb
mov
adc
jmp
in
push
std
es
cmpsb
xor
mov
js
shlb
adc
xor
or
xchg
sbb
fsubl
mov
push
pop
add
pop
divl
add
test
pushf
je
dec
push
jp
dec
jg
in
fsub
mov
mov
fadd
pop
mov
jecxz
jp
lret
mov
sar
sub
cmp
cmp
test
jg
lods
xchg
pop
mov
rorl
pop
fidivl
push
push
add
sub
adc
inc
fwait
jg
jo
data16
lock
out
inc
add
repz
cmp
mov
sub
jne
ljmp
jo
sub
push
inc
repz
and
enter
rcrb
sub
sbb
ds
sbb
addr16
and
cmp
cmp
sbb
incl
pop
adc
adc
outsb
clc
xchg
xchg
jmp
scas
sub
jge
call
mov
mov
cwtl
jg
shr
push
out
dec
cs
dec
add
popa
cmp
push
sbb
test
push
jg
sahf
scas
aas
outsl
mov
inc
add
addb
push
fbld
mov
das
fst
pop
clc
xor
fcmove
bound
int3
and
dec
test
jg
mov
sbbl
jnp
jo
adc
xor
cltd
popa
test
rclb
je
subl
rolb
jne
icebp
jp
rcrb
xor
mov
sbb
movsb
push
cwtl
dec
stos
out
push
inc
jp
call
pop
in
push
adc
cmc
jge
testb
and
push
out
jmp
lock
xor
lcall
adc
fwait
xchg
cmpsb
fidivs
pop
or
imul
loope
iret
and
cmp
int3
addr16
jmp
pop
add
fwait
jbe
outsb
push
xor
mov
clc
pop
shrb
mov
push
orl
outsb
popa
ljmp
mull
add
cli
test
add
sbb
insl
cmpsl
cmc
mov
loope
pop
lock
pop
insl
jae
gs
or
or
out
das
push
movl
cmp
or
loop
push
js
push
pusha
fldt
adc
stos
dec
adc
add
mov
inc
push
rorl
mov
lcall
xor
enter
sti
jp
adc
out
cld
xchg
std
add
inc
mov
sub
jle
std
mov
and
lea
pop
fst
sub
pop
insl
inc
cmp
mulb
fdiv
cmpsl
mov
fidivs
fcom
and
sbb
jbe
pop
lahf
and
adcl
sbb
or
xor
sbb
iret
sbb
jae
iret
mov
dec
push
dec
add
mov
mov
xchg
lock
shl
aaa
outsb
or
decb
inc
ss
fnstenv
sbb
jp
lea
mov
les
cli
lods
into
popf
dec
mov
fnstsw
popw
adc
cmp
pop
test
jmp
cmc
test
xorl
dec
enter
dec
jl
sbb
xchg
add
nop
ljmp
mov
adc
les
stos
add
add
jnp
dec
inc
or
sti
out
jne
mov
sub
cmp
jnp
mov
lods
jl
dec
mov
outsl
rcrl
or
stos
addb
add
dec
jle
psadbw
xchg
out
push
orb
hlt
imul
mov
sub
out
addb
jg
and
outsb
clc
dec
insl
pop
daa
lea
jnp
movb
dec
cs
xchg
mov
aaa
pop
mov
jl
or
sub
lcall
and
leave
or
and
inc
mov
loopne
pop
popa
inc
loope
stos
test
out
jle
and
add
add
jp
loop
out
lds
and
sub
add
in
lcall
test
mov
and
out
adc
push
mov
and
push
fadds
xchg
hlt
pop
sbb
stos
leave
push
add
jle
imul
aam
in
pop
std
cli
outsl
mov
ja
scas
out
or
mov
or
and
pop
push
inc
add
sarb
pop
mov
sub
xchg
pop
lret
xchg
clc
imulb
shl
adc
dec
dec
loopne
push
out
cmp
fidivrs
jmp
mov
hlt
jmp
cmp
shr
jge
rclb
cs
mov
aad
xchg
ret
pushl
cmp
cld
sbb
xchg
pop
jbe
sbb
cmovno
mov
mov
frstor
adc
mov
xchg
cltd
pushf
cmp
xchg
clc
das
or
add
mov
lock
mov
jg
jg
adc
xor
pop
daa
mov
fildl
jb
mov
pusha
ljmp
mov
test
adc
pop
daa
repz
xchg
adc
mov
or
mov
sub
add
xchg
popf
enter
mov
insl
stos
addr16
mov
pop
inc
callw
xor
lds
jae
sbb
jp
jmp
data16
cmc
xchg
dec
pusha
dec
inc
push
cli
shl
jle
xchg
push
xchg
mov
jl
jg
ljmp
push
mov
add
inc
pop
jp
jo
mov
loope
sti
jle
mov
jp
sbb
test
std
inc
add
bound
xchg
lods
adc
std
inc
xor
xorb
mov
or
add
sbb
push
add
cli
sbb
lcall
inc
fisubs
cmp
dec
addr16
clc
in
sbb
adc
mov
fwait
subl
adc
and
jl
mov
les
ljmp
mov
lcall
dec
lock
hlt
jg
les
neg
ja
jl
or
rcrb
pusha
xor
cmp
das
sub
popa
add
adc
mov
subl
cli
pusha
sbb
aas
ret
pop
xchg
popf
clc
or
push
dec
ds
adc
into
mov
sub
sarb
pop
add
mov
pusha
jb
mull
mov
push
mov
push
and
dec
add
movsb
inc
pop
xor
sub
push
inc
adc
and
sub
xlat
add
je
push
addr16
add
jp
ja
loop
or
xor
test
jg
mov
in
inc
addr16
addr16
or
lahf
and
mov
cmp
imull
ret
push
inc
repz
mulb
push
dec
movsb
inc
enter
je
scas
mov
gs
cmpb
mov
aas
mov
movsb
pop
pop
mov
inc
not
mov
or
add
push
sbb
mov
fwait
pop
cld
jp
dec
xor
insb
loope
ljmp
adc
scas
lcall
and
scas
icebp
sub
xchg
pop
shlb
inc
cli
jge
divb
in
jns
sbb
jbe
and
cmp
add
jl
icebp
outsl
jns
add
or
push
dec
sbb
pop
loopne
cmp
test
movb
jnp
add
les
inc
ja
sub
mov
jbe
sub
inc
add
sti
push
shll
xchg
cmp
addl
ljmp
test
shll
rcr
inc
shl
stos
loope
popf
rcr
stos
pop
push
pop
or
dec
lea
mov
inc
bound
or
push
cmp
adc
adc
aam
pop
cwtl
es
lods
and
lret
xchg
add
add
mov
inc
jmp
clc
mov
mov
mov
mov
lock
add
cmp
inc
dec
nop
bound
mov
ror
fs
mov
add
shr
call
mov
fsubrl
lret
pop
pusha
mov
cmp
jbe
cmp
inc
pop
push
testl
pop
loopne
movsb
cwtl
mov
mov
repnz
mulb
mov
push
out
decl
add
pop
rolb
in
inc
mov
jo
mov
lahf
shll
pop
mov
fdiv
ret
xorl
cld
fstl
ret
inc
scas
lcall
fwait
rcrl
and
ljmp
divb
mov
test
cmp
pop
adc
les
mov
xchg
pop
push
in
mov
ret
xchg
js
sti
das
push
jmp
xchg
lock
insb
call
movhps
push
mov
movsb
rcrl
dec
add
shrb
clc
js
or
pop
fs
add
mov
sub
sbb
xchg
jmp
pop
push
xlat
cmp
mov
push
sub
shl
mov
std
ljmp
fstps
add
mov
mov
push
jp
add
in
push
mov
es
lahf
xchg
cmc
clc
mov
popa
cld
popa
outsl
mov
lret
push
orb
xlat
lods
aam
pushf
mov
jle
es
mov
sub
add
je
xorl
jg
mov
mov
jmp
jle
add
push
cmp
mov
jecxz
adc
js
dec
and
test
mov
pushf
cmp
testl
lahf
sbb
out
les
xchg
jbe
cltd
call
mov
outsb
mov
loop
jecxz
xchg
inc
and
push
imul
sub
xor
mov
in
xor
mov
inc
fwait
add
inc
push
xor
shll
sahf
dec
rolb
loopne
sbb
xchg
sbb
xchg
cmp
push
mov
imul
sub
sbb
repnz
adc
mov
jle
sub
dec
cmp
ss
insl
cli
jg
test
xchg
lret
inc
xchg
mov
xorl
dec
and
jp
pop
pop
lahf
hlt
in
and
cltd
mov
dec
dec
out
add
mov
and
rol
push
stos
cmc
outsb
add
cmpsl
pusha
es
mov
mov
pop
sbb
std
jo
mov
push
pop
sbb
into
cmp
cwtl
lea
pop
inc
mov
push
push
jne
nop
xchg
rclb
and
jg
shlb
nop
or
cmp
sub
std
ret
aad
or
cmpsl
xchg
dec
movsl
nop
inc
cli
addr16
cmc
or
or
and
not
sbb
add
mov
popa
xor
popa
and
mov
inc
adc
and
out
mov
dec
test
and
mov
dec
mov
divl
cmpsb
jb
push
out
cwtl
push
mov
pop
scas
movsb
or
mov
jno
cli
xlat
sub
cmpsl
dec
add
loope
adc
inc
or
adc
ja
cld
out
jg
xor
shlb
inc
les
out
pop
fidivs
push
and
in
clc
mov
daa
pop
inc
loop
in
fstpt
inc
adc
push
mov
repnz
aam
icebp
and
inc
cmp
xchg
mov
decl
jg
pop
mov
cmp
ret
stos
sbb
jmp
es
mov
test
mov
push
lcall
test
and
xchg
aam
adc
rorb
mov
add
mov
push
cmp
mov
sar
mov
insl
mov
adc
test
xchg
add
add
into
in
clc
push
pop
popf
pop
and
outsl
xor
inc
jae
mov
push
fiadds
xor
lcall
mov
sahf
add
sti
sub
add
add
jmp
mov
sub
leave
xchg
sub
leave
das
fmull
mov
sub
rol
push
ja
cmp
ret
aam
lret
aam
lock
test
add
sbb
push
cmp
nop
pop
jns
repnz
push
jge
mov
inc
mov
xchg
repnz
xchg
jbe
push
hlt
inc
push
outsl
enter
dec
subl
cmpl
pop
xchg
inc
inc
add
sbb
test
sahf
rclb
xchg
push
in
arpl
inc
aas
adc
sub
pop
loope
add
jo
inc
mov
sbb
and
dec
adc
pop
sbb
std
mov
arpl
sahf
push
xor
pushf
and
xorb
pusha
ret
dec
rorl
mov
push
push
mov
mov
inc
push
push
fs
repz
jp
pusha
pop
stos
dec
xchg
dec
pop
jp
sub
cmc
and
mov
mov
adc
lcall
dec
inc
mov
push
lret
sbb
imul
aaa
add
sbb
cli
hlt
mov
lcall
lret
inc
or
xchg
and
mov
pop
push
cmc
scas
sti
out
sbb
pushf
pop
pop
fimull
cs
mov
jmp
adc
aas
sti
jle
std
rolb
cli
enter
orps
subb
pop
ret
pop
icebp
xor
mov
inc
arpl
popa
add
cmc
jecxz
testb
xlat
andl
inc
sub
rorb
mov
xorl
mov
in
fimull
arpl
ja
hlt
fildl
test
jns
ficomps
inc
push
lret
and
adc
cmpl
outsl
mov
mov
push
divl
cmp
sub
add
adc
cmpsl
decl
jecxz
add
int
or
sbb
and
fistpl
rcr
xchg
add
jle
fdivr
fsubrs
mov
and
aas
xorl
ss
dec
xor
insb
arpl
int
mov
or
stos
es
dec
data16
lock
cs
call
or
or
push
adc
mov
nop
mov
jg
testb
sub
mov
push
and
les
adc
and
push
shlb
sbb
push
or
fldt
daa
js
pop
test
out
xchg
mov
popf
ds
stc
sbb
repnz
jl
xchg
mov
inc
inc
loope
les
and
mov
add
fstps
sbb
pop
sbb
mov
faddl
outsl
jp
ja
lahf
add
sub
pusha
xchg
sahf
hlt
bound
push
sbb
or
push
fisubs
mov
movsb
mov
dec
push
fs
cltd
in
sub
in
dec
push
add
and
call
jne
out
add
mov
push
movsb
sti
mov
jmp
frstor
mov
mov
icebp
test
mov
repz
sbb
call
xor
ds
pop
adc
imul
jae
cmp
add
std
icebp
push
push
xor
mov
incb
pop
add
dec
imul
mov
add
and
jbe
adc
js,pn
cmp
gs
mov
mov
push
hlt
add
lock
cmpsb
movups
dec
or
adc
push
push
out
mov
cld
loop
scas
xor
and
enter
mov
sti
incl
push
xchg
and
sbb
push
jp
pop
shll
jle
std
jno
jg
sbb
adc
push
dec
mov
arpl
es
js
repnz
dec
pop
mov
sarl
adc
cli
js
lret
xchg
popa
decb
movsb
or
jecxz
int3
push
loopne
inc
dec
ljmp
mov
mov
jb
bound
mov
push
pop
mov
movsb
adc
push
cmp
xchg
orl
mov
jge
cmpsb
inc
xchg
dec
push
inc
test
fisttpl
push
cmp
arpl
imul
out
push
mov
call
inc
add
sub
out
add
or
mov
ret
popf
jnp
mov
dec
pop
std
cld
rorl
cmpsb
dec
fildl
sti
sub
inc
aas
add
pop
sar
pop
repnz
lds
xchg
mov
mov
inc
dec
cmp
imul
dec
xchg
push
fucom
push
imul
orl
xor
inc
mov
mov
cmc
mov
inc
xchg
dec
add
clc
inc
jp
adc
test
sbb
adc
fistps
mov
ljmp
repz
lahf
ss
out
aaa
mov
and
jae
mov
idivb
fwait
test
dec
loop
sub
mov
adc
fisubl
fs
push
cli
cli
xchg
mov
push
sbb
fwait
adc
hlt
push
push
sub
clc
stc
cmp
punpcklbw
push
lods
xor
out
std
mov
sar
ja
mov
orl
dec
mov
jp
std
nop
xlat
pop
mov
std
cmp
or
movsl
test
repz
add
fnsave
inc
mov
cld
mov
xchg
lahf
or
in
aad
popa
stos
pop
andl
cli
jg
inc
jp
and
jle
sbb
pop
sarb
lock
pop
sub
or
ljmp
and
idivl
lret
or
jns
jle
pop
push
loopne
lods
and
or
fisttpl
sahf
in
lahf
stos
cmp
mov
test
mov
sarb
push
lret
push
sbb
ret
adc
adc
out
dec
pop
lods
nop
gs
push
pop
xchg
cmp
inc
outsl
sbb
cmp
cli
mov
inc
jb
int
iret
cmc
in
js
shl
add
into
xchg
sahf
mov
out
stos
adc
dec
mov
popf
dec
imul
lods
sub
shll
push
and
and
and
jns
add
or
or
insb
mov
sbb
pop
sub
jne
mov
pop
dec
dec
cmpb
sub
decb
mov
fsub
in
mov
xor
adc
outsb
gs
dec
stos
pushf
test
int
mov
in
inc
loop
sbb
loope
mov
loope
sub
insb
xchg
mov
mov
lahf
pop
mov
ljmp
stc
mov
cmp
das
jne
xchg
test
jecxz
add
sti
cmp
icebp
cmp
int3
pop
addb
je
push
cmpsb
adc
testb
sub
and
pop
testb
sub
add
xor
aad
xor
mov
sub
imul
cmp
mov
cli
addl
push
lcall
ja
pop
rcr
inc
loopne
fs
mov
in
sbb
js
popa
dec
lret
mov
and
push
add
jl
xchg
and
or
mov
lret
sbb
mov
call
sub
adc
add
das
xlat
sahf
push
cmp
scas
push
mov
mov
push
imul
pop
cmp
sbb
pop
hlt
add
je
sub
out
clc
data16
lret
addb
sbb
adc
rorl
adc
mov
outsl
cmp
jnp
push
movsb
mov
in
mov
loop
mov
mov
mov
xlat
sarl
push
push
inc
dec
pushl
mov
lds
mov
out
dec
rorl
cmpsl
cli
test
sti
lret
shr
mulb
lea
mov
mov
sub
dec
inc
sub
aaa
ljmp
roll
in
inc
inc
mov
in
ret
stc
ss
add
sar
pop
push
mov
dec
lods
ljmp
test
dec
fwait
hlt
mov
fsts
ss
xor
adc
pop
mov
dec
aad
sub
push
lods
iret
clc
test
mov
cmpl
push
fldl
sar
add
jno
movsl
bnd
pop
sub
sbb
decl
xchg
or
add
add
dec
xor
xchg
dec
test
mov
ljmp
cld
lds
sbb
sbb
jle
jecxz
aas
gs
xchg
ds
cmp
jmp
loop
int
pop
fcmovnu
pop
stos
push
mov
pop
push
fadds
mov
push
cld
pop
mov
fsubrp
push
sbbb
adc
ret
cmp
inc
inc
sbb
sahf
ret
sarb
adc
test
mov
and
out
jmp
mov
add
sbb
stos
mov
arpl
addr16
mov
idiv
add
jl
iret
lods
push
xlat
add
pop
int3
fs
sarb
repnz
gs
inc
mov
push
lock
clc
cli
fnstenv
rcrb
loop
lea
loopne
push
pop
shll
nop
clc
push
stos
out
loop
and
addb
scas
xor
push
push
test
push
push
aas
std
adc
dec
jle
lock
push
fdivs
and
push
popa
pop
push
sahf
test
test
sbb
xchg
addl
mov
cli
or
push
inc
inc
cmp
mov
out
sahf
mov
js
push
sbb
outsl
sub
mov
pop
mov
decb
mov
aad
ss
into
in
jae
sahf
dec
xchg
nop
cwtl
jle
jg
mov
nop
fildl
das
aad
call
cwtl
or
sbb
push
jne
mov
jl
or
test
jo
dec
mov
pop
rcll
push
sub
or
add
pop
jo
mov
ret
fnstcw
jae
jae
shlb
mov
push
es
dec
shrb
cltd
lods
push
popa
rcrl
and
mov
cs
xor
mov
mov
icebp
mov
addl
jle
mov
fcompl
push
cwtl
push
jg
and
add
sahf
inc
int3
and
loopne
int3
cmp
lahf
mov
mov
movl
push
jo
xlat
sbb
jge
test
add
sub
std
xchg
jb
cmp
push
add
pop
push
outsb
push
int
cld
hlt
out
cmpxchg
iret
xchg
data16
pop
dec
mov
lock
jmp
call
fmuls
cmp
xor
andl
push
adc
clc
mov
subb
lods
repz
dec
test
inc
xor
pop
fs
sub
add
iret
pop
lds
mov
xchg
sub
or
pushf
mov
pushf
decb
jle
inc
rol
sbb
push
jne
ret
ret
js
pop
je
xor
jb
sbb
daa
repz
ss
cmp
xor
call
stc
mov
push
data16
sbb
setno
orb
mov
mov
lret
leave
stos
out
xlat
mov
push
mov
jno
jl
mov
sbb
mov
out
mov
sbb
rorb
adc
jo
sbb
jle
lahf
or
add
fstps
cli
jnp
mov
out
xlat
dec
and
fcmovu
add
dec
jl
rcr
xchg
pop
enter
mov
pop
stos
lret
mov
cmp
lea
dec
scas
int3
cmc
push
out
xor
cli
mov
hlt
mov
mull
or
enter
xor
scas
mov
paddd
data16
pop
cmp
shlb
and
adc
xor
fsubl
pusha
aas
sub
hlt
ds
scas
push
pop
pop
mov
aaa
and
orl
mov
repnz
adc
or
mov
outsl
scas
rcrl
sbb
add
orb
add
sbbb
je
jl
pop
xchg
push
adc
rorl
xorl
les
dec
ficompl
aam
lods
xchg
and
adc
dec
push
loop
pop
pop
out
xor
cs
xchg
cmp
jp
sub
out
imul
add
ret
out
mov
mov
lds
jnp
mov
lock
or
int3
jmp
pop
mov
cld
mov
mov
push
pop
push
inc
dec
cli
mov
adc
adc
jne
jns
or
lock
jb
roll
and
negl
insl
and
mov
in
testb
adc
addr16
popa
cli
pop
mov
ss
lock
mov
and
mov
pushf
rclb
cld
cmc
or
dec
push
shll
not
movsl
clc
lock
add
inc
stos
pop
push
dec
cltd
or
pop
pop
in
mov
pushf
lock
mov
xor
mov
sbb
xabort
jae
pop
in
pop
mov
cs
sub
push
stos
call
loopne
mov
fists
mov
jo
fbld
jg
enter
ljmp
rcll
cld
fildll
or
add
sbb
clc
mov
orl
pop
test
pop
jb
out
ret
movsb
aas
popa
aad
jo
sbbl
sbb
mov
lock
bound
test
mov
mov
dec
cmp
add
mov
xor
dec
add
dec
mov
add
sub
sbb
sahf
mov
xor
outsl
xor
and
jp
loopne
add
add
pop
lods
and
sar
inc
out
cmpsl
pop
push
rcrb
lcall
jb
fnstcw
loopne
mov
in
insl
out
mov
lds
fidivs
jle
adc
lods
hlt
pop
call
dec
adc
rcrl
jle
decb
mov
push
cmp
dec
je
push
insb
xor
call
inc
sti
les
inc
cmc
mov
clc
push
lock
aad
ret
negb
inc
cld
out
pop
imul
xchg
xadd
or
push
scas
outsl
push
mov
jecxz
adc
xor
clc
ja
xor
in
fdivrs
add
push
imul
ss
jg
fcmove
jp
repnz
out
loopne
pop
pushf
ljmp
sub
pop
outsl
mov
push
clc
push
ficompl
scas
pop
fcomps
sub
out
sbb
push
xor
add
xor
clc
and
xchg
movlhps
das
push
mov
add
xchg
loope
cmp
ja
add
mov
loop
add
aad
mov
lea
inc
insl
and
incl
push
mov
stos
idivl
pop
icebp
fs
incb
xor
retw
mov
mov
stc
js
je
xchg
or
add
and
fbld
hlt
fwait
lret
nop
or
sbb
jg
mov
mov
sar
jl
pop
fiadds
xor
cmpl
outsl
mov
add
popf
js
xchg
lahf
scas
fnstenv
les
inc
shl
aad
add
xchg
sarl
outsb
psubsb
stos
fcmovb
or
sub
ror
aas
in
mov
scas
xchg
les
mov
pushf
outsl
pop
add
lret
adc
xchg
mov
adc
push
addr16
mov
or
mov
popf
inc
rcrl
lcall
test
adc
ja
jmp
sub
fldt
adcb
push
das
shrb
cmpsl
es
xchg
pop
outsl
push
ret
or
pop
popa
hlt
lahf
push
cmpb
je
lods
js
push
push
sbb
test
cmp
cmp
stos
rorb
pop
xor
pop
lret
push
les
add
scas
test
dec
mov
push
aas
inc
imul
dec
shl
adc
jle
hlt
ds
loope
mov
pushl
add
cmp
cmpsb
loopne
js
pushf
add
push
or
aam
cld
push
ret
mov
xchg
or
aam
adc
pop
mov
jmp
stos
aaa
sbb
std
mov
cmc
pop
outsb
add
mov
shll
push
push
dec
inc
out
xchg
sbbb
fcmovbe
or
xor
aad
scas
push
loopne
gs
movsl
into
or
pop
or
and
sbb
jb
sub
push
xchg
jnp
push
cld
adc
aam
sbb
into
pop
cmpsb
cli
aas
movsl
sub
cmp
imul
sub
test
loop
sbb
and
sub
pop
inc
sbb
sub
add
inc
ret
pop
out
push
mov
push
mov
aam
xchg
mov
clc
push
jl
aam
adc
add
pop
add
xchg
inc
lahf
clc
mov
dec
std
cmp
sub
add
ret
sub
mov
sbb
and
or
xor
lock
add
or
divl
pusha
jg
jl
shrb
sarb
push
inc
push
sub
jg
adc
jecxz
pop
aam
repnz
cmc
cmc
inc
mov
pop
cld
inc
int3
mov
or
dec
mov
mov
pushw
jg
fidivrl
jge
testb
sbb
fildl
fstp
sbb
and
mov
or
testb
rcl
std
movq
mov
push
inc
mov
add
mov
fmuls
xchg
sbb
push
movsb
hlt
dec
jmp
icebp
xchg
or
push
cmp
imul
mov
test
shrb
jge
pop
push
jmp
cmpb
hlt
add
test
mov
and
sub
push
aam
test
and
lock
jl
sbb
filds
mov
cmp
fistps
pop
xor
fwait
mov
inc
adc
add
or
arpl
mov
or
xchg
dec
sbb
lock
rcrb
call
or
pop
pop
fbld
shlb
add
and
mov
cltd
sbbl
stos
xchg
xchg
xchg
mov
in
mov
cmpl
pop
hlt
xor
mov
adc
hlt
in
xchg
push
call
xor
idiv
inc
mov
stos
in
add
mov
xchg
pop
daa
adc
lods
pop
call
ret
into
roll
rolb
jbe
sub
data16
sbb
enter
mov
jb
jmp
lods
push
pusha
push
dec
cmc
and
push
mov
ret
jns
repnz
cmp
ficoms
xchg
xchg
aaa
or
and
push
loopne
stc
fisttpll
xchg
fcmovnu
add
test
add
xor
testl
mulb
pushf
rolb
add
dec
push
stos
jo
and
push
mov
push
mov
in
sbb
dec
fdivrl
sar
inc
xor
aaa
nop
mov
hlt
sbb
or
or
sbb
insb
sbb
pop
imul
jmp
mov
sub
in
call
lock
sbb
jnp
data16
mov
jmp
vpminsw
nop
pushf
sbb
pop
shl
popf
cmp
ljmp
loop
jmp
adc
pushf
mov
push
js
outsb
cmp
or
pop
push
in
mov
mov
lods
adc
ja
add
xchg
out
out
or
enter
std
incl
mov
or
mov
cmpb
into
fs
cli
data16
aam
mov
add
fisubl
cld
jge
stos
dec
into
test
pop
adc
pop
sub
sbb
jmp
in
add
sbb
pop
dec
test
mov
inc
imul
mov
dec
icebp
daa
jl
inc
bound
clc
sar
in
mov
add
ficomps
adc
sbb
fwait
mov
ljmp
mov
call
mov
pop
mov
pop
add
xor
sti
dec
ret
mov
cli
testb
sub
add
jmp
xchg
pushf
shrl
xor
lods
in
pop
lret
pusha
call
pushl
decl
inc
out
and
xchg
rcrb
pop
enter
jg
pop
addr16
out
lods
loopne
add
adc
sub
cwtl
mov
insb
or
dec
lds
or
mov
rorl
lods
mov
sub
cmpsb
pop
call
and
add
js
fimull
push
les
ja
pop
imul
rolb
adc
movsl
mov
or
in
lret
and
cmp
mov
and
mov
sbb
lods
sbb
mov
xchg
add
in
add
add
jmp
mov
and
xchg
jle
cs
aas
je
pop
fists
dec
cmp
or
adc
fsubs
mov
jo
push
lahf
dec
dec
mov
or
ffreep
pop
pop
cmp
pushf
and
sbb
fisubl
xchg
mov
push
sub
jmp
jbe
inc
cli
adc
xor
inc
lock
or
repnz
and
imul
xchg
ja
fwait
imul
jmp
cld
aad
and
hlt
add
std
mulb
aad
pop
popa
adc
jmp
nop
xchg
add
mov
ret
sbb
testb
add
mov
std
push
pusha
jmp
xor
xchg
xor
push
lcall
adc
sti
adc
dec
lcall
mov
rcll
popf
mov
loop
lcall
inc
push
sub
jecxz
push
add
push
dec
xor
insb
mov
adc
sti
cwtl
lods
iret
jae
das
sub
mov
divb
cs
lret
addb
std
mov
mov
clc
cmp
inc
fs
pop
xlat
fadds
or
cli
ljmp
cld
and
test
je
lcall
jle
out
inc
sub
xchg
pop
cmp
mov
sub
fdivp
sbb
adc
push
js
daa
test
popa
add
fisubrs
je
inc
push
ret
loope
inc
ds
test
js
mov
pop
sub
mov
movsb
nop
cmpl
inc
lret
aad
add
into
pop
aam
xchg
mov
mov
add
xor
fidivrl
int3
dec
add
js
addb
call
jg
out
ret
mov
pop
sub
cmpsl
or
xchg
adc
stc
or
inc
fdivr
lods
out
dec
mov
ljmp
adc
dec
out
mov
pop
mov
sbb
sbb
rcrl
ja
into
and
sub
mov
cmc
add
fisubrs
push
lahf
hlt
push
cwtl
mov
and
jecxz
mov
lahf
cmp
test
xor
inc
push
mov
xchg
cwtl
xlat
fwait
outsb
push
call
sar
sbb
mov
sub
xor
jg
insb
out
cltd
fisubs
jae
cli
pusha
push
rolb
mov
out
insl
mov
sub
mov
jp
inc
jmp
and
xor
pop
dec
pop
push
movsb
or
out
js
dec
decl
mov
testb
das
sub
xchg
cmp
aas
inc
xor
sbb
dec
xchg
jecxz
mov
jns,pn
push
cmpsb
push
lret
nop/reserved
imul
xchg
cmpsb
add
xor
xchg
decb
inc
into
test
cs
movsl
inc
mov
insb
inc
xor
in
pop
mov
push
or
jbe
out
shl
inc
ljmp
mov
jg
movsb
lret
push
and
cmp
call
mov
lock
dec
adc
and
mov
jb
dec
jns
dec
popa
cli
inc
xor
pusha
add
cld
dec
clc
inc
jmp
adc
pop
jp
cvtps2pd
xchg
ss
push
aam
sti
decl
pop
jb
mov
icebp
in
arpl
into
ret
jmp
dec
push
les
clc
pop
push
dec
mov
std
sbb
imul
aaa
xor
test
decb
cmp
xchg
andb
mov
rcrb
xor
out
test
inc
stos
adc
sti
daa
sbb
andb
imul
lods
push
xchg
insl
push
jl
jns
scas
jecxz
sub
scas
pushf
aas
add
sbb
icebp
inc
and
fcmovnbe
cmpb
jae
adc
xchg
add
jbe
mov
fs
cld
mov
dec
lock
stc
ficompl
dec
add
lahf
fbld
fadds
pop
xchg
test
and
cmpsl
mov
sub
les
pop
imul
push
push
cld
or
mov
clc
insb
sbb
dec
popf
push
lock
ret
cmpsb
lods
lret
adc
mov
enter
test
dec
pop
or
scas
mov
dec
lret
dec
sar
xchg
jl
sbb
cld
lea
test
or
cmp
cli
addb
dec
jb
pop
sub
call
retw
bound
add
fsubr
icebp
add
stos
sub
add
sbb
fcmovnb
ja
jnp
sub
sbb
fmull
arpl
cmpsl
sbb
fwait
jp
mov
dec
sbb
or
or
mov
ds
dec
sti
xlat
mov
and
and
mov
push
pop
mov
adc
inc
mov
sub
xchg
shrl
inc
cld
std
sub
loopne
pushf
inc
pop
fimull
jle
rorb
and
sub
and
out
dec
jg
loopne
add
and
xchg
mov
aam
cmovle
mov
add
mov
hlt
or
addr16
push
push
addr16
fstl
ja
inc
loopne
test
sub
jmp
or
add
ss
adc
mov
jno
push
ret
jg
adcl
add
lock
cwtl
xor
cmp
outsb
push
jge
pop
loop
pushw
mov
mov
mov
push
jp
pop
jno
incb
pushf
rcl
or
mov
sub
fmull
mov
inc
incb
and
pop
adc
xchg
icebp
imul
inc
stos
and
inc
mov
jg
lods
add
pop
jecxz
and
xor
adc
lahf
add
sbb
imul
push
sbb
les
jg
lods
das
dec
push
std
jle
test
push
push
adc
jge
jecxz
xor
pop
decl
les
jnp
loopne
jo
or
clc
xchg
lcall
call
jecxz
in
aad
pushf
push
fldt
rcr
mov
jg
imull
gs
cmpsb
jmp
dec
sub
fisubrs
iret
jno
push
push
cmc
inc
enter
xchg
or
adc
adc
push
sahf
lcall
outsl
mov
cmp
jbe
push
mov
jbe
add
add
push
push
sub
inc
xchg
lcall
jp
in
cld
out
mov
cmp
pop
sbb
sub
hlt
mov
cld
dec
aaa
cmp
jbe
in
fwait
dec
sbb
mov
mov
repz
lock
inc
cmp
scas
dec
push
mov
popa
test
loope
mov
out
testl
xor
push
fs
mov
pop
roll
inc
cmpsb
sahf
shrb
je
inc
adc
clc
and
cmp
jo
js
sbb
mov
std
pop
repnz
jle
xchg
fmuls
cltd
movsl
rcrb
lahf
xor
pushl
outsb
dec
xchg
cs
out
xchg
dec
lret
or
and
repz
les
je
nop
push
or
mull
xor
lret
clc
call
sub
bnd
jecxz
cli
fstpt
xchg
push
xor
test
jg
jnp
fld1
jbe
sbb
inc
jecxz
ret
fwait
and
mov
fsubl
mov
std
stos
sub
add
pop
pop
bound
scas
loopne
jns
lcall
ret
push
and
out
mov
loopne
add
inc
inc
mov
js
aam
and
sub
rol
outsl
or
adcl
mov
jmp
jb
inc
pop
jbe
jb
lods
jae
push
xchg
ja
inc
or
ljmp
mov
push
inc
jle
ret
sbb
mov
xchg
ret
push
or
push
lcall
data16
mov
daa
xchg
dec
shrb
and
push
mov
loopne
cmp
sub
sbb
ret
dec
nop
mov
cld
push
fmuls
mov
mov
push
and
cli
and
aad
sahf
pop
lret
test
ss
into
cmpb
sbb
push
imul
mov
adc
ds
mov
aam
ret
push
popf
jle
imul
jle
dec
loopne
mov
mov
xlat
push
mov
mov
push
fcomip
inc
shl
out
loopne
mov
push
adc
mov
inc
inc
adc
jle
jl
push
lock
mov
xor
adc
outsb
bound
and
cmp
add
and
aaa
test
inc
xlat
push
mov
arpl
das
lods
pop
aas
mov
push
adc
rcll
xor
add
inc
mov
mov
aaa
addr16
pusha
ret
fcmovu
andl
and
fcmovb
sar
adc
inc
fidivrs
push
ljmp
add
into
outsb
shlb
jge
add
call
ror
dec
cld
sub
mov
enter
ljmp
lcall
pop
cld
xor
adc
fadds
dec
shl
dec
or
test
add
stos
adc
hlt
arpl
mov
mov
lods
cmpsl
inc
je
dec
jo
push
adc
ds
pop
test
sub
push
add
add
rol
jmp
mov
out
ficoml
nop
into
push
adc
pop
xchg
enter
and
mov
sbb
addr16
cmp
sarl
pusha
xor
mov
dec
into
divl
xor
daa
imul
lea
dec
cmp
test
sbb
or
pop
or
clc
sbb
sub
fists
ret
notl
ja
add
or
stos
push
push
cld
pop
or
mov
cwtl
push
fimuls
jle
and
xchg
scas
ss
call
mov
xor
pop
mov
aas
push
fbld
push
pop
aam
jns
xorl
xchg
sbb
call
jo
sub
lods
notb
in
in
fdivr
daa
xchg
std
mov
incb
mov
adc
ljmp
or
out
sub
mov
stos
mov
cmp
mov
add
pop
sbb
push
lcall
mov
push
stos
decl
imul
mov
aad
pop
mov
push
xor
sub
test
ret
xorl
or
cs
mov
mov
xchg
xor
js
pop
or
mov
adc
stos
bound
lods
outsb
sbb
test
mov
xor
adc
fisubs
shlb
aas
enter
mov
pop
jne
ret
jp
jle
sbb
mov
rolb
fs
mov
add
cmp
mov
push
mov
fstps
subl
outsl
in
add
cmpsb
push
jg
xchg
pop
les
xor
jns
cmp
sti
outsl
pop
mov
fbld
repnz
sbb
ja
sbbl
sbb
push
inc
mov
outsl
lock
mov
pop
jne
cs
mov
cmp
lea
icebp
cmpsb
lahf
jmp
dec
dec
pop
inc
pop
add
jo
inc
test
test
insb
enter
popf
xor
out
inc
ret
fwait
xor
or
mov
jne
cmp
shr
mov
pop
jmp
test
lock
loopne
adc
and
sbb
shl
movsl
push
lret
or
cmc
mov
fisubl
adc
jne
sub
dec
jne
iret
jle
aam
mov
push
andb
rcrb
sub
or
or
mov
in
lcall
call
ret
das
cmp
movsl
cmpsl
pop
jl
int3
and
bound
pop
shl
roll
or
enter
jp
mov
pop
jp
inc
jl
pop
popa
inc
push
jp
xchg
mov
xchg
push
add
les
js
sub
filds
int
pop
mulb
pop
clc
push
or
cld
sub
ja
mov
pop
cmpsb
pop
call
cmp
sbb
incb
and
add
lcall
add
adc
test
push
cli
adc
mov
cmp
mov
inc
inc
cli
push
leave
adc
push
jge
push
shl
test
into
xorl
xchg
cmp
add
lcall
mov
xchg
jg
inc
add
add
incl
push
mov
jge
adc
jecxz
or
ffreep
cmp
adcb
test
aaa
mov
mov
jp
or
push
and
scas
clc
dec
out
fcompl
and
and
lds
xchg
mov
sti
out
push
mov
add
int
and
cmp
stos
mov
std
ffreep
push
popa
iret
cli
call
aaa
adc
jp
adc
sbb
and
and
cltd
mov
fisubs
push
lret
inc
pop
hlt
sbb
pop
cs
cmp
pushf
inc
or
push
or
pushl
mov
jbe
lods
mov
mov
pop
lods
sbb
shr
or
cmp
std
fcmovb
pop
ret
pop
loope
add
das
rorl
test
ja
inc
adc
lcall
call
cmp
or
cmp
push
pop
push
enter
mov
add
addr16
mov
ds
xchg
decb
outsb
dec
and
cmpl
lret
sub
stc
inc
or
and
shrb
mov
in
lds
loop
sahf
mov
ds
sbb
push
push
mov
mov
mull
int
add
aad
imul
pop
adc
mov
mov
scas
js
inc
dec
fidivl
add
sarb
loope
lcall
adc
jo
mov
mov
inc
mov
stos
mov
hlt
stos
xchg
lret
loopne
xchg
lea
les
rcr
xchg
mov
pop
test
int3
pop
test
scas
mov
or
adc
dec
out
xlat
ss
clc
fucom
dec
fdivl
adc
add
es
inc
clc
cmp
inc
enter
movsl
or
jbe
pop
faddp
mov
lods
movb
inc
loope
inc
mov
add
mov
xor
inc
les
dec
xchg
jae
fnstenv
push
mov
out
enter
push
bts
rorl
fisubs
fiaddl
sub
cmp
sub
jge
jmp
std
pop
mov
dec
push
push
xchg
and
pop
mov
cmp
bound
std
push
js
scas
add
hlt
incl
loope
repnz
sarl
jmp
or
movsl
sbbl
mov
les
fisttps
pop
aad
mov
inc
jp
sub
aas
hlt
mov
cld
test
sbb
push
xchg
cmpsl
dec
cmp
lock
or
sahf
jl
jle
pop
xchg
push
or
and
iret
popf
push
push
sbb
fwait
scas
out
adc
adc
daa
in
and
push
jnp
cmp
cmp
xchg
add
adc
mov
inc
outsb
lcall
push
sub
and
scas
sbbl
test
rorl
pushf
fnstcw
mov
pop
xchg
cld
pushl
sbbl
sbb
pop
movsb
and
stos
inc
outsl
je
or
sub
xchg
mov
lock
sahf
xchg
add
dec
inc
lock
out
pop
push
aam
out
pop
daa
inc
xor
bound
xchg
jl
pusha
dec
enter
sbb
sti
mov
jge
testb
adc
push
dec
loope
test
into
xadd
jecxz
adc
mov
sub
ljmp
lea
loope
imul
outsb
test
mov
je
idivl
mov
xor
xchg
and
sbb
aas
inc
std
add
mov
ss
imul
flds
inc
sub
stos
push
ljmp
adcl
pop
vprotb
loopne
inc
cmp
dec
cmpsb
cli
mov
bound
neg
out
or
pop
jp
push
cmp
adc
mov
insb
aas
idivb
sbb
or
push
dec
les
sub
jg
lods
repnz
fisubrl
or
cli
inc
ss
add
sub
push
cmc
cwtl
dec
push
loop
lock
aaa
inc
mov
xchg
push
enter
adc
in
popf
or
push
mov
mov
mov
iret
lea
cli
fwait
lds
jmp
mov
scas
pusha
sub
ds
repz
out
sbb
cmp
sbb
sub
mov
inc
sbb
aas
lods
push
inc
lea
jge
les
xlat
pusha
popl
push
enter
cmpsb
in
fs
cmpsb
sub
or
mov
sub
sub
shlb
gs
scas
mov
adc
jbe
fisubrs
lret
stc
loop
xor
add
out
cltd
mov
inc
ret
push
sti
cmp
cmp
stos
xlat
movsb
hlt
pop
jge
mov
shll
xor
int3
lret
loop
in
lea
cli
mov
pop
jne
test
mov
cmp
ja
mov
loope
sbb
fwait
and
mov
sub
xor
sub
js
movsb
leave
xchg
cmp
push
jns
daa
xchg
sbbb
push
mov
add
popf
out
icebp
dec
pop
adc
mov
add
je
loop
loopne
jl
out
xchg
push
sbb
loopne
nop
and
dec
aas
or
cld
push
sbbb
test
mov
jno
dec
cli
push
aad
mov
pushf
add
mulb
jns
mov
push
push
pop
jmp
test
dec
jbe
je
pavgb
and
and
jp
aad
cli
or
adc
mov
cmc
sub
rolb
ror
push
push
pusha
decw
insb
js
mov
add
sarb
stos
pop
cmp
dec
mov
mov
push
or
scas
pop
movsl
mov
repnz
adc
inc
mov
and
mov
sbb
cmp
std
jmp
nop
or
outsl
pop
test
stos
dec
stos
shlb
scas
or
add
push
cmpps
mov
repnz
jb
mov
add
pop
dec
insb
xchg
enter
in
fisubrs
add
pusha
andl
pusha
jae
push
sub
lahf
fiadds
cmp
addr16
rorl
cmp
rolb
pop
xor
add
mov
push
pop
jb
sahf
cmpl
ret
and
movsl
ljmp
lret
ja
aas
enter
cmp
sbb
mov
jbe
push
cld
orb
or
lock
add
int3
sub
outsb
mov
mov
pushf
lods
add
mov
inc
gs
mov
ret
lret
xchg
push
push
cwtl
bound
push
cmp
push
and
data16
jecxz
dec
mov
lahf
rcrl
jg
pop
ret
clc
mov
push
pop
loopne
mov
sbb
xchg
std
decl
test
adc
add
in
sub
adc
sbb
aam
adc
and
xchg
std
call
call
and
subb
jl
mov
xorl
stos
cmpsl
push
loopne
lock
add
xchg
or
mov
jp
mov
sbb
js
sub
mov
push
sbb
dec
gs
pop
clc
das
ret
ss
loop
scas
ror
arpl
sub
xor
sbb
adc
adc
pop
adc
mov
js
inc
jns
fcoms
xorl
xor
shlb
add
clc
or
scas
lods
sti
or
inc
mov
mov
jp
sbb
push
jl
mov
cmp
pushl
arpl
mov
stos
es
mov
out
xchg
pop
std
mov
test
icebp
mov
mov
insl
lcall
je
shlb
pop
jmp
fidivs
test
lret
mov
roll
or
mov
jmp
fs
std
fnstsw
xchg
add
outsl
loop
xorb
cld
dec
adc
mov
mov
push
jg
or
push
adc
xchg
orb
push
inc
cmp
inc
adc
mov
push
mov
inc
xor
jl
push
andl
inc
cld
add
and
jp
and
imul
add
adc
scas
ss
mov
xchg
pop
lahf
mov
out
push
push
ja
rol
cli
mov
test
imul
jbe
mov
sub
xchg
bound
jl
or
mov
popa
push
push
je
rolb
pop
add
imul
push
ret
pop
xchg
mov
std
fnstenv
sub
fsubs
or
adc
or
test
loop
pop
xchg
jl
sti
mov
sti
adc
push
lods
add
movsl
inc
ret
add
cmp
mov
rcl
lahf
or
nop
ret
sti
xchg
mov
mov
and
incl
and
add
sbb
in
aas
jns
pop
or
pop
in
push
cmp
ja
jbe
or
mov
or
das
movsb
inc
aam
and
pop
xor
cld
aas
fiadds
cli
mov
xorb
cli
jb
pop
das
sarb
and
movsb
lret
nop
add
cli
sahf
in
ja
inc
int3
push
xchg
pushf
mov
pop
std
mov
mov
mov
arpl
test
jo
js
sub
jg
in
adc
and
fs
fdivrl
push
sbbb
jmp
push
jl,pn
testb
rcr
shlb
call
adc
sbbb
pop
fisttpll
shr
mov
mov
xlat
sti
out
or
push
mov
push
mov
mov
out
add
stos
push
pop
cmpsl
lcall
push
inc
add
pop
pop
xchg
scas
push
sub
add
rol
push
mov
adc
ja
inc
in
inc
xor
sub
mov
push
sahf
mov
xchg
bound
out
mov
aaa
sub
clc
mov
xor
mov
hlt
inc
sub
push
jmp
cld
jg
push
jl
mov
in
loopne
pop
mov
fbstp
mov
add
or
push
out
cli
outsl
or
mov
cwtl
lret
out
adc
and
scas
cmp
dec
or
push
loopne
in
aaa
adc
xbegin
stos
orb
test
test
insb
aaa
lahf
jge
divb
pop
es
call
jb
adc
xchg
incl
jbe
aam
cmp
or
icebp
mov
je
sbb
fcmovb
lret
jg
decl
add
and
push
insl
enter
jg
aas
jle
dec
je
jno
clc
into
push
lock
push
pop
push
cmp
js
lcall
call
adc
jmp
push
pop
push
dec
mov
sub
add
loopne
xchg
clc
fsubr
outsb
sub
sub
adc
aas
xchg
ficompl
or
sub
ljmp
dec
add
fcmovnu
pop
subb
divb
xchg
lods
movsb
mov
clc
add
inc
pop
xor
cltd
fistps
add
sarl
add
clc
repnz
shrl
incl
mov
inc
cltd
and
test
popa
fisubl
mov
push
lret
cmc
push
cmpsb
fcos
addb
es
decl
fistpll
ja
mov
test
ret
fs
sarb
mov
and
fcoml
clc
lea
adcb
sbb
cmp
adc
lock
fsubl
mov
mov
jle
int
lock
decl
add
jle
push
push
add
clc
notl
ret
pusha
shl
push
and
leave
rclb
push
xchg
or
cmpsb
ljmp
fwait
pop
outsb
push
jg
xor
cld
jne
loope
imull
in
add
ljmp
rorl
mov
fstp
enter
push
pop
jl
shlb
subb
ret
sbb
loop
clc
pop
push
mov
push
adc
cmp
stos
sbb
inc
jle
aam
stos
add
es
sub
and
test
loop
xchg
mov
out
orb
mov
push
and
pop
loope
and
push
leave
in
movsbl
pushf
js
imul
or
ss
add
add
add
push
add
add
jl,pn
jl
sti
sbb
sbb
or
adc
lahf
ds
xlat
push
inc
cmpl
movsb
jg
in
jo
imul
mov
inc
out
inc
xor
iret
fmuls
xchg
stos
dec
sti
cmpl
jecxz
or
or
sub
in
gs
cmpl
outsl
dec
cmp
sub
cli
leave
xor
repnz
out
and
and
jl
mov
sub
cld
mov
pop
push
mov
daa
push
pop
adc
jo
pop
sub
sub
sti
and
in
icebp
push
sbb
inc
outsl
jle
js
imul
push
mov
rorl
test
js
lea
or
fdivl
jle
outsb
mov
sub
jnp
fwait
out
sbb
aaa
subl
adc
push
insb
pushf
test
sar
jns
add
scas
popa
jle
in
lret
inc
pusha
pusha
mov
mov
push
js
push
add
jb
mov
xchg
faddp
fdivl
push
adc
std
xorb
push
stos
shll
add
mov
pop
cmpsl
mov
popa
out
orl
cmp
aam
cwtl
rclb
sar
pop
mov
push
pop
cli
jno
movsb
int3
dec
mov
jge
fnsave
mov
or
mov
push
push
push
movsb
out
sub
jmp
neg
inc
mov
pop
pop
mov
inc
push
push
mov
add
and
dec
loop
stos
push
xor
incb
sbb
mov
sbb
or
mov
push
arpl
mov
pop
imul
pop
push
and
dec
mov
add
test
mov
pop
xchg
bound
mov
or
scas
mov
fs
stos
sub
sbb
dec
jnp
cmpl
in
addl
fnsave
icebp
outsl
mov
mov
arpl
popf
jmp
int
or
push
lret
test
test
push
mov
test
fcomp
out
imul
or
mov
push
test
shrb
pop
pop
jg
rorb
lods
pop
mov
jae
std
xchg
jg
xor
rorl
dec
fldenv
cmp
nop
inc
mov
pop
ljmp
adc
push
call
ds
jmp
mov
insl
pop
mov
dec
sub
scas
scas
mov
inc
fcomip
fcoms
and
cmpsl
xchg
cmc
mov
xchg
ja
sbb
push
adc
dec
dec
repnz
sub
aam
or
pop
ja
sub
inc
mov
pushl
mov
mov
sbb
test
out
sti
call
rcrb
dec
adc
arpl
add
xchg
or
pop
hlt
pusha
fcompl
xchg
sub
ret
jg
inc
fisttpl
push
lods
in
mov
dec
jne
xor
rcr
mov
lret
aad
and
sbb
sub
cmp
sbb
hlt
cmp
pushf
fildll
nop
cmp
test
rorb
iret
test
andb
push
sub
push
aaa
xor
cmp
mov
inc
or
push
inc
out
jp
and
push
xchg
test
out
into
pop
dec
lds
push
lret
mov
push
mov
test
sub
push
stc
xorb
xchg
cmp
ss
testl
cmp
je
shll
jb
push
fnstcw
call
iret
pusha
ret
lds
mov
test
jl
mov
icebp
sbb
dec
pop
sbb
test
fwait
es
mov
pushf
aas
ljmp
pop
loopne
or
push
xchg
mov
jno
lds
cli
push
rorb
inc
xor
add
add
call
jle
adc
push
fidivs
fisttps
js
cmp
inc
incl
iret
shlb
sub
mov
fsubrs
push
xchg
or
out
jp
jnp
and
test
pop
mov
mov
pop
ja
adc
in
pusha
into
push
inc
jbe
xlat
aam
cld
jb
mov
xchg
ljmp
add
add
mov
bound
mov
fsubs
ret
sub
mov
inc
push
inc
add
pop
cmpsl
push
inc
sbb
ret
push
mov
or
add
add
icebp
xor
loopne
mov
pop
loopne
inc
out
out
mov
mov
cmp
jg
mov
and
and
push
rcrl
jmp
aaa
sub
fwait
roll
pusha
fbld
insb
or
testb
lock
or
xor
cmp
rcll
dec
mov
lcall
pop
sub
mov
xchg
inc
test
add
ds
sub
shrb
adc
xchg
pop
pop
js
jno
mov
jo
stos
sarl
add
jecxz
ja
sub
icebp
decl
into
mov
cld
jge
sub
adc
or
iret
xor
loop
lock
xchg
aas
inc
sub
cmp
scas
aaa
cld
sub
push
mov
arpl
aam
out
push
div
std
test
push
or
mov
int3
dec
inc
pop
lea
and
aaa
cld
orl
push
and
iret
inc
arpl
adc
fdiv
enter
lock
test
add
jl
inc
lcall
jl
cmp
or
mov
jp
xchg
leave
sub
shr
sbb
push
add
lret
add
out
shll
cmpsb
sub
aam
cld
mov
test
xor
dec
loop
pop
xchg
aad
xchg
jbe
sbb
dec
clc
lcall
mov
out
loope
or
jae
rorl
mov
out
push
mov
lcall
popa
nop
cmp
sbb
and
insb
cmp
add
decl
mov
sub
xor
cmc
addr16
mov
or
inc
lods
ret
jno
jae
sbb
sbb
shl
mov
or
mov
push
daa
int3
dec
lret
hlt
les
das
add
or
cmpsb
shlb
mov
mov
rcr
stos
adc
lods
insl
and
cs
icebp
mov
subb
popa
xor
cmp
into
test
enter
add
ljmp
sub
mov
pop
push
add
scas
js
hlt
fiadds
and
cld
pop
dec
inc
mov
iret
stc
ljmp
nop
lods
jbe
ja
js
jo
adc
clc
dec
js
mov
cmp
fadds
cld
arpl
mov
adc
test
sti
pop
loop
push
or
mulb
add
fiadds
inc
stos
ljmp
cmp
cltd
outsb
adc
add
lock
push
push
mov
fldl
sbb
aaa
sub
pushf
mov
outsl
aaa
mov
inc
insb
mov
cmc
mov
jmp
or
add
jge
pop
dec
ficoms
jg
cld
int3
xchg
stos
sub
cmpsb
lods
and
lcall
mov
cmpb
or
sub
xor
aaa
mov
cld
mov
pop
rcr
cltd
sub
adc
sar
es
add
dec
incb
mov
sbb
gs
mov
mov
push
out
fldcw
push
push
jecxz
fildl
jp
das
andb
cmc
push
jae
jecxz
sbb
jbe
add
xchg
jnp
inc
add
fisubl
add
add
inc
dec
cmp
mov
and
sbb
inc
xchg
inc
sbb
sar
pop
decl
pop
fidivrs
cmpsl
add
rolb
add
std
cs
dec
mov
cmc
and
ljmp
push
pop
push
sbb
insb
insb
scas
push
adc
xor
pop
orl
lock
mov
cmp
fnstsw
sub
std
adc
mov
adc
mov
les
xorb
decb
popa
mov
mov
sbb
jmp
push
inc
cltd
data16
sub
out
aaa
mov
and
stc
fstl
aam
sbbb
sbb
ss
push
xor
clc
int
ficoml
xchg
xchg
ret
xchg
xor
call
inc
out
repz
incb
push
sbb
push
es
xchg
cwtl
loope
fstpl
ret
stc
outsl
add
cmovp
cli
add
jmp
jnp
js
xor
sbb
subb
icebp
mov
xchg
inc
xor
mov
jl
cmp
push
push
scas
pop
sbb
mov
fs
cli
mov
jbe
rolb
add
aam
jne
mov
adc
adc
std
sub
fisubrl
adcl
and
cmp
inc
mov
aad
ds
insb
or
cmp
fs
cmc
inc
andb
pop
scas
mov
cmp
mov
test
cs
push
mov
pop
adc
mov
xchg
mov
or
clc
mov
sahf
and
mov
push
pop
std
sub
push
or
cmp
add
cmp
outsl
ljmp
movsb
mov
call
rclb
xorl
iret
dec
cmc
inc
pop
clc
and
insb
xor
imul
sub
cmp
jecxz
and
sbb
xchg
cmp
pop
adc
fs
xor
xor
sub
xor
jnp
dec
mov
push
sbb
js
loopne
adc
les
pop
dec
call
jp
inc
push
rcl
sub
mov
pusha
ss
sbb
loopne
jle
in
int3
cmp
icebp
sub
pop
push
loopne
sub
sub
mov
jmp
inc
std
xchg
incl
push
adcb
ret
mov
call
leave
sarb
ror
daa
jecxz
inc
add
psraw
mov
loop
scas
inc
sbb
mov
cmp
cs
mov
stos
rcrb
mov
xchg
mov
sub
mov
scas
mov
push
aaa
push
add
mov
cli
xor
inc
pop
jne
pop
jge
mov
subl
add
adc
mov
push
xchg
insb
add
xchg
cmp
cmp
xchg
pop
fadds
add
hlt
push
nop
push
jl
and
scas
inc
rorl
fwait
xchg
xor
sub
adc
pop
das
cli
jge
shll
push
sub
sbb
pushf
mov
push
jmp
test
cli
mov
pop
roll
mov
push
mov
ret
adc
outsb
int
je
push
and
gs
sbb
cmpsb
cli
xchg
in
mov
jecxz
fdiv
mov
sbb
cld
sub
xchg
fimull
roll
push
data16
sub
and
mov
adc
or
cmp
aaa
mov
adc
and
sbb
push
hlt
jp
jg
jp
jmp
xor
xchg
and
inc
sbb
test
push
dec
mov
inc
jl
mov
sub
jo
pop
pop
and
mov
push
jg
arpl
push
aam
adc
sbb
dec
pop
in
and
cmpsb
mov
mov
das
les
sub
add
jo
push
pop
sbb
test
mov
sub
sub
mov
rorb
mov
insb
mov
push
pop
out
lock
xor
dec
test
in
adc
mov
cltd
js
mov
jno
sbb
sti
adc
inc
test
pop
enter
jns
and
xor
dec
cmp
outsb
arpl
enter
insl
sbb
xchg
sbb
mov
xor
and
ja
jp
mov
mov
test
ljmp
pop
sub
dec
incl
int
xor
mov
cmp
sbb
lahf
pusha
cmpsb
jns
jmp
aam
sbb
aaa
cmp
push
nop
frstor
div
dec
repz
aaa
ja
and
addr16
sbb
mov
or
mov
pop
add
adc
mov
mov
andl
mov
sub
loop
shr
mov
and
cmpsl
fisubs
mov
add
lods
std
inc
in
orb
ss
adc
dec
pop
add
mov
nop
mov
cli
sbb
mov
dec
and
mov
ja
or
in
faddp
out
int3
xchg
jno
mov
cmc
test
or
push
or
sbb
out
fistl
sarb
add
and
mov
inc
add
cwtl
out
scas
ljmp
push
imul
sbb
call
cli
into
ret
sbb
inc
mov
adc
dec
add
mov
jne
mov
adc
or
cli
mov
sbb
cli
cmp
in
and
cli
jg
out
mov
mov
ret
mov
dec
xor
xor
adc
xor
int3
xor
into
jno
pop
cmp
test
pop
push
sub
mov
and
sub
pop
loop
push
decl
and
dec
xor
ss
fildl
jp,pn
idivl
sub
test
imul
xor
arpl
mov
dec
or
mov
fists
fisttps
test
or
test
divb
sub
push
pop
jmp
sbb
mov
int3
out
xchg
inc
nop
dec
push
arpl
adc
xchg
mov
add
push
les
add
fcmovnb
mov
sbb
mov
xor
jb
inc
in
jg
mov
adc
lods
push
jp
shl
testb
das
pop
jnp
sbb
inc
pop
mov
in
scas
cwtl
imul
test
insl
xor
adc
cmp
lcall
test
rclb
xchg
arpl
dec
push
out
inc
stos
ds
push
and
push
or
sbb
pop
inc
mov
dec
lret
cmc
sbb
movsb
sbbb
popf
adc
jne
pusha
daa
loop
icebp
push
mov
hlt
sbb
icebp
cs
sbb
adc
mov
clc
pop
cmp
test
add
xchg
outsl
fstpt
test
ja
xor
jl
sub
inc
jg
add
dec
mov
pop
ror
jg
add
js
cmp
imul
add
pushf
inc
movsl
xchg
iret
lahf
dec
jg
dec
fwait
xor
add
or
dec
je
les
out
dec
std
call
in
push
adc
hlt
and
or
sub
mov
hlt
push
jl
mov
daa
xchg
mov
sub
insl
cmp
add
movsl
cwtl
xorb
test
adc
stos
mov
mov
gs
add
je
adc
aam
fwait
sbb
hlt
jmp
bound
aad
lock
fldcw
repz
sub
mov
insb
and
or
scas
mov
fdivrp
fistps
push
cltd
inc
idivb
mov
loop
out
xchg
sub
xchg
ja
cld
add
push
loop
adcb
jne
pop
mov
dec
add
loope
push
es
and
or
xor
pop
and
mov
imul
in
mov
jo
out
jl
pop
out
cltd
push
mov
mov
push
adc
mov
dec
negb
std
push
scas
cmp
ret
clc
pop
ret
push
pop
mov
iret
adc
movsb
and
lock
shl
pop
pusha
pop
addr16
lock
lret
jecxz
dec
pop
hlt
push
pop
mov
xchg
scas
sub
test
scas
jmp
push
and
jg
ret
sub
incl
sbb
clc
roll
sbb
adc
test
out
push
dec
loopne
adc
rorl
aad
jg
icebp
mov
pop
pop
mov
aam
cmp
pop
clc
or
jbe
jmp
or
mov
add
fidivrl
push
mov
outsl
int3
adc
incl
lret
xor
stos
push
jb
push
jne
incl
add
push
test
fmulp
push
xor
cltd
sbb
fsub
out
dec
decl
lds
test
scas
lock
or
xchg
test
movb
cmp
imul
sbb
sbb
hlt
jp
outsl
test
or
xorl
dec
push
add
fwait
stos
xchg
sub
test
dec
loope
je
iret
sahf
jmp
rorb
xor
loop
and
aaa
mov
lret
sbb
scas
add
dec
lods
add
mov
subb
sbb
mov
ljmp
push
xchg
jae
sti
sbb
int
call
cmp
stos
inc
and
mov
repnz
push
sbb
insb
lret
add
stc
or
pop
test
fiaddl
mov
aas
mov
jg
ja
lds
push
push
stos
std
lock
shl
or
inc
or
jbe
out
mov
pushf
adc
fiaddl
mov
pop
pop
cmp
jle
pop
fsubrl
stos
gs
mov
push
and
fldl
push
cmp
addr16
dec
cmp
lock
loopne
inc
cld
or
cmp
lock
stos
leave
int3
add
gs
aam
cwtl
call
out
adc
repz
jne
add
sub
in
pop
lret
cmp
and
mov
fs
pop
sub
hlt
and
dec
rolb
push
into
inc
repz
clc
in
in
sub
or
mov
push
or
sbb
sub
dec
push
sub
jb
rolb
push
incl
mov
movb
add
popa
cmp
mov
jae
sbb
fdivrp
mov
add
stc
jns
xchg
test
fidivrl
aad
xor
sti
aaa
sbb
ljmp
add
cmpsl
mov
mov
jnp
and
clc
adc
movsb
xchg
data16
xor
sbb
mov
test
xlat
push
cmp
repz
js
nop
lahf
and
sub
call
push
add
into
inc
cli
pop
sub
mov
cmp
lds
lock
add
and
and
jo
sub
cld
sbb
mov
scas
lahf
loopne
add
out
inc
shrl
repnz
stos
push
mov
pop
mov
movsl
and
in
std
and
mov
mov
test
pushf
fldcw
jg
push
movsb
bound
and
xchg
jle
pop
movsb
inc
or
cwtl
jmp
sbb
or
jno
jg
push
mov
sub
mov
inc
dec
invd
repz
cld
push
outsb
xchg
stos
repnz
add
pushf
add
jp
outsl
push
jbe
xlat
aas
cmpsb
mov
xchg
ja
ds
sub
mov
mov
shll
not
lcall
imul
cli
addr16
add
cmp
call
stc
dec
add
sbb
in
rcrl
ljmp
arpl
fcmove
cmp
mov
insl
mov
ljmp
sbbb
xchg
or
test
pop
js
push
shll
movsb
pushl
and
pop
stos
cwtl
mov
mov
cmpsl
incl
adc
ret
subb
xor
js
std
pop
dec
fwait
push
out
js
lret
adc
pop
stos
add
xchg
xor
sub
adcb
out
hlt
clc
xchg
pop
jg
cld
sub
popa
inc
test
inc
mov
mov
and
inc
push
pop
xchg
dec
jb
push
xor
push
cmp
mov
scas
stc
dec
cld
into
xchg
sub
adc
pop
aaa
jecxz
cmp
add
repnz
adc
cmp
push
mov
dec
inc
std
into
inc
add
scas
push
xchg
inc
and
inc
pop
jecxz
push
imul
push
clc
sub
add
inc
jecxz
cs
adc
fldln2
mov
dec
or
cmpsl
push
sbb
rorb
adc
sub
scas
mov
pop
ljmp
enter
push
js
jg
xchg
loope
clc
jg
push
add
mov
loop
adc
fisttps
inc
pop
sahf
shrl
dec
mov
mov
xor
movsb
push
lock
add
dec
jg
pop
adc
xor
aam
inc
sbb
aam
rolb
les
mov
das
push
arpl
adc
insl
addr16
xchg
sub
push
pop
cltd
mov
push
scas
jo
lods
adc
icebp
sbb
aas
push
cmp
xor
sbb
outsl
push
aaa
cmp
mov
mov
adc
cs
xor
inc
cli
or
shl
jecxz
lock
mov
rol
or
movl
aam
jbe
mov
pushf
xor
dec
stos
insl
fstpl
dec
insb
inc
mov
inc
xor
loop
leave
push
mov
cmp
hlt
mov
xor
sarl
fisttps
sbb
add
movsl
dec
and
hlt
les
push
loopne
repz
call
xchg
or
or
pusha
rcr
and
add
inc
ret
bound
adc
shl
push
or
cmp
shr
cld
jo
mov
mov
mov
sar
xchg
loopne
pop
imul
jge
push
cltd
xchg
test
inc
adc
jbe
ljmp
stc
pop
sbb
cli
mov
popf
sbb
scas
loopne
or
add
jle
rclb
mov
or
inc
mov
inc
lds
int3
mov
loop
xor
cmp
xor
mov
sahf
jo
and
xor
jge
mov
cmp
scas
inc
push
xchg
aaa
inc
mov
cmc
sbb
comiss
repnz
mov
jg
mov
xchg
incb
pop
stos
fidivrl
nop
push
rolb
and
mov
adc
addb
call
cs
xchg
incb
ljmp
push
ljmp
mov
sbbb
std
push
lcall
hlt
fxsave
push
mov
sahf
xchg
cmp
lock
inc
or
mov
or
std
push
and
jg
cld
mul
xlat
xor
pop
rclb
jg
cmp
rolb
sbb
sbbb
cmc
mov
cmpsl
mov
test
testl
sbb
cmp
xchg
jle
mov
jae
out
lock
push
or
je
mov
adc
cli
or
inc
inc
mov
jge
or
or
mov
sbb
mov
std
push
andl
mov
pushf
out
add
mov
mov
ljmp
cli
cld
mov
xchg
and
loope
mov
dec
cmp
cmp
dec
repnz
outsb
cmp
pop
das
sbb
or
sbb
rclb
push
mov
loopne
data16
out
dec
lock
inc
fistl
jle
cmp
jp
stos
push
inc
pop
and
push
test
adc
in
jl
cwtl
xor
pop
outsb
and
ds
ret
sub
lock
movsl
xor
das
cmp
and
js
aaa
rcl
imul
and
push
pushf
cmc
pop
or
dec
inc
dec
xchg
mov
incl
push
inc
ljmp
mov
pop
pop
dec
inc
je
push
pop
lret
push
in
in
or
xchg
incl
test
push
and
push
mov
pop
cmpsb
mov
push
cmc
out
and
jae
sub
mov
or
nop
add
xchg
xor
mov
in
add
dec
rcrb
int3
push
add
aas
je
arpl
push
repz
decl
jge
xchg
int
add
je
insb
lods
stos
fcmovnbe
mov
inc
ret
lds
cld
mov
std
mov
sbb
mov
xor
and
ret
out
lods
add
testb
lods
out
mov
jnp
mov
popa
loope
push
loop
dec
mov
lret
push
or
mov
movsb
sbb
mov
mov
int3
stc
mov
add
or
pop
sbb
mov
mov
pop
add
dec
adc
inc
sub
dec
mov
ret
in
cmp
mov
scas
incl
aad
add
xchg
jecxz
popa
inc
cld
or
call
jmp
lods
sti
je
shr
clc
ffree
imul
add
or
dec
loope
cmp
aaa
pop
daa
repnz
lea
pop
adc
test
mov
call
mov
lods
mov
mov
movsb
cld
iret
cmpsb
out
dec
cmpb
ds
mov
inc
pop
bound
sti
call
pop
push
orb
push
sahf
clc
adc
js
lods
pop
jl
syscall
fldl
add
sub
add
jmp
lock
cmc
adc
mov
pusha
jae
aam
mov
ljmp
jmp
pop
mov
adc
mov
clc
iret
add
daa
pushf
and
std
push
or
dec
je
xchg
inc
and
mov
xchg
mov
icebp
addl
xchg
cld
cs
mov
pop
or
aaa
cld
pop
movsb
mov
daa
add
hlt
out
fbld
icebp
jg
add
pusha
loope
lods
cld
imul
js
inc
mov
mov
pushf
push
jle
aad
shlb
hlt
mov
pop
xchg
outsl
ds
les
mov
icebp
lcall
pop
pop
insb
add
dec
daa
sub
fs
push
repnz
and
pop
pop
mov
push
and
mov
sbbl
retw
or
sub
fcomi
add
mov
cmp
loope
add
xor
icebp
inc
xchg
push
movsb
fidivl
jl
incb
shl
out
inc
xchg
mov
pushl
aad
xchg
sbb
cltd
lods
fsubrs
loopne
notl
sbb
fiadds
jne
fs
scas
sub
push
cmc
mov
mov
jg
enter
lds
mov
or
pop
jge
mov
repnz
and
mov
out
decb
mov
xor
ret
cld
mov
sbb
or
adc
mov
ret
call
test
ja
pusha
shlb
cwtl
pushf
pop
jmp
pop
or
cmc
sbb
lahf
and
cmpsb
sbb
fldl
rcr
cmp
outsl
aam
data16
sahf
xor
push
ficoms
pop
dec
lahf
cli
add
xlat
out
cmp
inc
dec
fisubrl
inc
cmp
sub
lock
push
add
outsb
pop
jle
test
cmp
or
or
or
pushf
mov
mov
mov
mov
or
jmp
add
add
inc
je
test
sti
push
data16
mov
sarb
jo
clc
je
mov
arpl
jns
out
lcall
add
es
mov
std
out
jb
mov
int
cmp
test
xor
jg
je
and
lea
ficoms
xlat
lcall
cmp
xor
dec
add
push
mov
call
pop
sub
cwtl
push
xchg
xchg
and
stos
fcomp
stos
sub
lcall
mov
es
pop
mov
pop
mov
jns
and
roll
mov
pop
outsl
push
xor
inc
clc
fsubrl
or
mov
pop
fxch
paddsw
sub
ficomps
shlb
or
sub
xchg
rorb
movsb
fwait
push
push
push
add
pop
mov
subb
jg
lret
add
mov
pusha
push
mov
jg
test
nop
sub
mov
mov
add
mov
adc
sbb
das
pop
aam
push
lcall
adc
in
fldcw
push
loop
test
mov
pop
dec
push
popa
jno
mov
mov
xchg
pop
sub
out
frstor
push
test
dec
into
fbld
out
int3
or
out
andb
mov
lock
testl
fsubrs
loope
adcb
fcoms
stos
adc
mov
xchg
rolb
lcall
or
pop
addr16
xchg
push
pop
mov
subb
lock
push
cmp
jl
incb
fmulp
fimuls
or
lret
push
ljmp
aas
fs
and
ljmp
mov
xchg
cmp
xchg
les
hlt
add
adc
mov
aaa
inc
mov
rolb
loopne
add
mov
add
add
cli
mov
jge
jmp
adcl
xor
add
out
fcmovnbe
dec
mov
mov
repz
xchg
xor
mov
std
jmp
xchg
dec
inc
sbb
call
sahf
inc
je
jb
jbe
xchg
outsl
out
sub
and
notl
bound
je
div
jnp
repnz
pop
shrl
cld
cmp
clc
push
or
push
ljmp
or
sti
xor
lahf
leave
mov
inc
out
scas
mov
ljmp
rclb
inc
pop
movsl
cmpb
or
mov
lcall
xor
sub
out
push
xchg
int3
in
pop
loopne
fs
pop
inc
jno
sbb
out
adc
ficompl
rcrb
or
add
aas
pop
sbb
lcall
test
loop
or
jl
in
mov
inc
adc
into
mov
xlat
adcb
jbe
enter
dec
aas
lcall
push
cwtl
lret
add
cmp
add
loope
jmp
pop
push
clc
sbb
movl
dec
scas
mov
stos
sub
das
dec
sbb
xor
mov
pop
mov
fldl
xchg
mov
xchg
or
and
std
mov
or
jo
jno
sarl
pop
xor
ret
jns
ljmp
out
insb
ljmp
push
jb
cmp
jmp
pop
aas
jmp
mov
fst
sbb
xchg
cmp
sub
shlb
push
xchg
adc
cmc
hlt
aas
jmp
sbb
insb
repz
test
es
push
and
mov
cltd
cmp
cltd
fsubrl
imul
mov
and
pop
push
nop
push
or
add
mov
and
and
mov
jl
aaa
ss
adc
sbb
add
out
sbb
dec
jle
call
int
inc
in
push
loopne
aas
mov
cmp
in
jno
das
sub
add
cld
call
inc
popa
pusha
or
or
or
out
mov
pop
dec
sbb
sbb
mov
cmp
lea
std
pop
lock
enter
mov
lods
pop
xor
sub
xchg
in
xorl
test
pop
cmp
or
push
aam
sbb
cmovg
je
movsb
push
pop
sarb
add
out
clc
and
ljmp
das
lods
ljmp
hlt
and
dec
and
icebp
mulb
jb
add
test
sbb
js
hlt
call
xchg
push
scas
push
and
in
mov
lret
in
add
das
and
clc
cmc
stos
inc
aam
adc
mov
repz
cmp
out
jg
fucomp
test
int
and
xor
fstpt
cmp
jg
loope
into
sahf
and
add
xchg
xchg
js
shrb
dec
testl
out
mov
dec
int3
repnz
jl
test
inc
in
jg
lret
cld
push
addb
fists
push
cmp
push
int
mov
cmpsl
lock
cmp
into
adc
pop
add
mov
nop
cwtl
add
int3
hlt
add
lock
sbb
push
sbb
mov
frstor
sahf
movsb
dec
sti
mov
movsl
lds
test
aam
mov
loop
mov
adc
cmp
mov
popa
xor
aam
push
push
stos
and
or
sti
imul
push
dec
stos
xor
jg
or
mov
jp
pop
jp
fisubrs
and
or
shlb
xchg
rol
inc
repnz
jge
xchg
mov
std
and
fidivrs
adc
popf
fstpt
adc
es
pop
imul
cmp
fdivrl
loope
inc
loopne
imul
mov
test
xchg
pop
lret
xchg
sbb
sbb
xor
cld
clc
mov
sub
jg
adc
dec
jp
jmp
push
xchg
loop
xor
xchg
ds
clc
incl
movsb
imul
stos
pop
or
sbb
insb
hlt
cld
shll
mov
adc
sbb
sti
aad
mov
adc
mov
lcall
in
push
push
mov
stos
in
mov
or
sbb
add
dec
movsb
rorb
incb
mov
jg
jle
xchg
cli
popf
or
lret
fdivl
mov
clc
or
aaa
stos
pop
sbb
xlat
push
nop
or
pop
jg
decb
ficoml
mov
testb
movl
and
adc
or
lods
or
pop
sti
shlb
mov
jge
ret
add
jmp
lret
loopne
clc
test
push
cwtl
test
outsb
scas
xchg
sahf
cs
mov
pushw
stos
cli
sub
insl
or
add
mov
push
push
in
mov
and
and
cli
and
mov
push
mov
or
pop
fdiv
jecxz
roll
loopne
sbb
pop
mov
scas
jmp
imul
adc
test
icebp
xor
add
popa
fisttpl
pop
jne
mov
xchg
daa
jae
pop
es
out
test
cmpsb
jnp
xchg
mov
jne
aas
sbb
sti
push
pop
stos
cld
dec
adc
rcl
ret
pusha
test
adc
add
xchg
or
sub
pop
inc
rorl
or
arpl
xor
jo
sbbb
pusha
scas
sahf
repz
jecxz
imul
out
nop
cmp
stos
nop
outsb
jbe
push
inc
or
int
popa
mov
flds
xchg
pop
ret
loopne
repnz
xchg
dec
xor
popa
mov
das
loope
cmc
ret
pusha
pop
jo
popf
aaa
jmp
mov
xor
movsb
add
dec
or
push
mov
cmc
ss
adc
jle
xor
sbb
aas
push
or
sbb
dec
sub
push
xor
test
sbb
push
sub
sub
jo
push
loope
cs
cmpb
icebp
loop
or
jmp
xchg
sbb
and
jbe
arpl
ja
or
or
or
or
insb
adc
push
aaa
out
fstps
movsl
stos
pusha
mov
in
mov
jo
fs
lock
nop
imul
xchg
jp
shll
jp
scas
pushf
outsb
test
add
push
outsl
dec
stos
xchg
pop
test
or
push
clc
xchg
push
add
sbb
rcrb
into
or
inc
add
adcb
cmpsb
sub
jne
in
jg
dec
xor
xor
mov
add
stos
daa
jnp
jmp
ret
dec
dec
mov
adc
jmp
cmc
adc
push
dec
mov
push
mov
jg
jmp
dec
xor
jb
scas
jmp
sbb
jae
aas
nop
pop
jb
add
incb
fstpl
out
aaa
push
clc
mov
addb
sar
pop
push
dec
push
jbe
push
xchg
addb
mov
shlb
mov
inc
fwait
sbbl
push
adc
lea
push
inc
or
stos
jns
outsb
xor
test
add
loope
sbb
jbe
cmpsl
neg
inc
pop
jle
or
rorl
jae
outsl
andb
scas
or
or
cmp
sub
jne
add
int3
xchg
cmpsl
dec
or
les
sbb
hlt
mov
mov
leave
fs
insb
mov
push
mov
mov
bswap
fsts
pop
mov
test
daa
jne
fsubrs
testb
xchg
iret
inc
xorl
sub
nop
ret
xchg
dec
in
ja
inc
pop
cli
addl
bound
adc
negb
sub
out
jl
dec
ss
add
cld
sti
adc
insl
cmpsl
adc
add
push
pop
push
popa
jl
in
mov
lods
test
andl
xor
fs
movsl
mov
adc
mov
dec
mov
push
push
pusha
mov
sub
ret
mov
cmp
adc
clc
leave
aaa
hlt
and
sti
aaa
sbb
push
nop
push
or
sub
mov
inc
and
xor
add
jo
loop
xor
sub
xchg
decl
les
sbb
xor
xor
dec
sub
or
jle
dec
and
fnsave
ljmp
inc
lods
mov
push
and
into
mov
ret
mov
cld
roll
jmp
pop
mov
scas
ret
roll
aad
rcr
sbb
sub
mov
pop
sarb
lcall
push
sbb
pop
dec
sub
mov
das
push
mov
jl
jp
cmpsl
or
sbb
jne
jo
jnp
pop
and
ret
ss
push
stos
mov
shrb
rolb
push
dec
add
pop
sar
aaa
stos
sahf
in
dec
mov
shlb
std
push
jle
push
jns
test
je
push
cli
das
mov
cs
lret
insl
loop
push
jmp
fstpt
fcoml
cmpsl
push
iret
xchg
lock
add
push
push
mov
push
inc
or
and
int
rcll
inc
shrb
mov
jmp
cli
push
push
out
sub
sub
fcoml
xchg
repz
popl
fcoml
sti
test
pop
cli
add
adc
scas
jp
inc
sub
jo
push
sahf
ljmp
scas
mov
mov
lods
inc
jmp
out
jl
jmp
cmpb
pop
xor
pop
mov
mov
jmp
push
mulb
aad
pusha
arpl
mov
add
pop
ret
call
cld
add
lods
loope
jmp
xlat
notb
xchg
std
inc
push
shrb
push
dec
loop
std
mov
fistps
movsl
std
adc
js
push
push
ret
xor
repz
push
mov
fiaddl
mov
jbe
sbb
cmp
fdivr
icebp
aad
orb
or
add
pop
jmp
cli
inc
dec
mov
sub
jbe
orl
loop
and
xor
mov
mov
xchg
jbe
mov
jecxz
out
and
pop
cmp
std
negl
xchg
test
adc
insb
and
jle
sbb
xchg
fisubrl
test
add
pop
and
inc
xchg
add
ljmp
ja
jae
push
js
mov
insb
loope
or
ss
push
dec
mov
adc
adc
lret
mov
push
xor
pop
pop
sbb
stos
cmp
and
mov
aaa
aad
cmp
or
xor
jne
sbb
cmp
push
pop
cmpsb
rcrb
call
mov
inc
mov
mov
imul
jne
outsl
call
or
or
js
arpl
mov
xchg
and
pusha
add
push
mov
mov
popf
pop
ds
data16
popf
xchg
aas
add
decb
out
add
add
push
mov
dec
dec
xchg
push
add
in
jecxz
stc
fistl
add
inc
sbb
testl
testb
sbb
arpl
xlat
cli
lcall
cwtl
inc
sti
js
add
pop
sub
adc
xor
adc
jle
inc
or
sbbl
pop
push
stos
mov
pop
lock
fmull
push
daa
mov
adc
sub
test
test
push
jnp
call
mov
inc
leave
pop
dec
push
lcall
mov
idivl
push
addb
int3
js
icebp
mov
adc
and
xor
adc
mov
push
aaa
pop
xchg
mov
imul
push
loope
xor
mov
jg
cmpb
gs
jge
icebp
das
pop
xor
adcl
push
js
jo
pop
add
or
clc
iret
cli
loopne
mov
leave
inc
cmp
bound
repnz
jecxz
mov
cmpsb
sub
out
inc
std
cmp
jecxz
mov
or
jl
add
mov
add
cmpsl
xor
call
xor
std
fidivrs
lret
in
sub
cld
and
sbb
push
pusha
shll
push
fldenv
mov
orl
cmpsb
ja
adc
aam
popa
cmp
jg
push
mov
lock
push
pop
outsb
xorb
sub
stc
insl
push
xchg
dec
sbb
mov
call
divl
out
mov
jmp
iret
movb
lods
sbb
jne
out
push
dec
mov
pop
loop
fwait
aam
push
sbb
push
pop
cli
mov
sbb
pop
loope
fdivs
adc
fiaddl
in
ret
test
add
fmull
push
inc
ss
sub
sub
hlt
aaa
pop
pop
bound
lret
jnp
add
out
mov
and
adc
adc
adc
orb
jl
movsl
add
lcall
sub
pop
adc
and
inc
es
out
lcall
push
push
mov
js
lds
scas
fcomip
je
mov
mov
inc
push
loope
cmp
mov
pusha
adc
movsl
jg
loop
into
pop
or
in
jecxz
or
rol
inc
movsb
sbb
pop
adc
pop
std
push
out
jp
or
inc
subw
rcrl
mov
sub
insb
incl
pop
xor
xor
dec
shlb
icebp
jbe
xlat
decl
push
dec
shlb
out
add
adc
mov
test
mov
sti
sbb
icebp
popa
mov
movsb
aas
nop
push
test
sbb
mov
iret
push
mov
jnp
insl
push
out
bound
push
cld
push
add
adc
cld
aad
std
insl
mov
or
pop
icebp
sub
add
jne
cmpsl
cmp
and
bound
ljmp
decb
ljmp
testl
adc
sub
jge
mov
into
pop
cmp
dec
mov
xor
mov
lods
push
int
rcl
pushf
popf
clc
scas
negl
add
add
ds
iret
incb
xchg
dec
and
xchg
mov
je
dec
cmp
icebp
jg
mov
inc
pop
scas
xchg
sarb
aad
stc
addr16
test
ss
jns
sbb
pop
shr
clc
xchg
incl
leave
rcl
lret
shrl
daa
mov
sarl
add
stos
mov
inc
pop
inc
fcoms
mov
pop
faddl
add
outsb
adc
pop
filds
mov
mov
mov
rcll
xchg
mov
mov
pop
jl
dec
dec
dec
inc
test
jge
jno
mov
sub
sar
adc
push
aas
cltd
mov
push
int
clc
cwtl
subl
insb
push
push
cld
push
in
or
lcall
enter
xchg
push
inc
add
or
clc
sub
icebp
std
cs
xor
jb
push
jno
push
mov
pop
add
xchg
or
push
or
mov
in
gs
push
fsubl
mov
and
imul
dec
pusha
cmp
pop
jl
sar
xchg
shlb
push
sbb
xor
add
mov
sbb
add
mov
add
push
and
bound
mov
lcall
push
mov
cmp
imul
sbb
cmc
jnp
push
in
fcmove
ret
shl
lock
push
mov
stos
sbb
push
mov
fstpt
sub
xchg
mov
mov
and
mov
hlt
stos
popa
mov
inc
add
lock
ret
sahf
outsl
call
adc
stos
nop
push
add
adc
stos
stos
pop
pop
push
cmp
loope
dec
or
std
neg
push
hlt
shrl
icebp
test
testl
or
loopne
ja
xchg
jbe
sub
push
clc
push
insb
mov
jg
adc
xchg
xchg
aas
nop
out
and
scas
jno
xchg
adc
lods
jle
js
call
pop
adc
fadd
shr
imul
sub
nop
sbb
and
pop
push
add
or
outsb
add
mov
out
pop
adc
mov
pop
inc
in
add
sub
pop
pop
jnp
call
or
inc
pop
test
xchg
push
loop
movsb
mov
mov
and
in
sub
cld
mov
cli
call
pop
bnd
stos
sahf
fidivs
pop
jg
js
sub
mul
mov
ljmp
add
adc
pop
cmp
cltd
cld
or
or
scas
mov
push
adc
mov
data16
imul
mov
pop
mov
shll
loope
inc
or
push
call
enter
notl
push
dec
nop
nop
cmpsb
lods
adc
nop
enter
fistpll
loopne
mov
xchg
orb
incb
cld
push
fadd
outsl
cwtl
vgetexpss
bnd
inc
mov
std
nop
shlb
outsb
outsb
jg
das
xorb
cmp
stc
cltd
loope
and
jo
nop
lods
xchg
push
outsl
dec
std
pop
outsl
in
mov
add
and
das
adc
and
cs
add
je
ds
lods
dec
and
gs
mov
aam
pusha
out
add
sbb
dec
pop
fs
dec
sub
inc
or
inc
inc
movsl
test
loop
mov
sbb
or
adc
lret
jge
andb
shl
adc
xor
dec
ret
jl
loopne
mov
lods
clc
ds
mov
adc
xor
bnd
jmp
outsb
xchg
andb
push
mov
in
mov
test
call
adc
push
add
ffreep
mov
add
gs
pop
mov
jmp
jb
push
repz
popf
mov
negb
cmc
pop
outsl
jmp
hlt
mov
mov
adc
push
sub
lds
add
add
or
fwait
jns
inc
add
jo
aad
mov
and
inc
inc
adc
push
pop
mov
ljmp
adcb
out
dec
xchg
xlat
rcll
add
cld
fisttps
push
rolb
dec
nop
mov
fdivrs
loop
xchg
std
push
pushf
ret
out
cmpsl
hlt
jmp
test
push
mov
pushf
arpl
cs
inc
std
into
jbe
sarb
dec
push
std
inc
jl
adc
adc
sar
cmp
push
cmp
xor
bndstx
push
mov
cld
cwtl
jg
or
mov
test
sub
je
push
icebp
shrb
fisubs
cli
xchg
jne
popf
sub
cmpsb
das
rcrb
dec
xchg
add
add
sar
add
pop
jo
imul
sarb
push
xchg
outsb
out
testb
and
loop
cmpb
sub
add
xor
sub
add
or
sbb
add
mov
push
xchg
sbb
sub
xchg
movsl
sub
in
xchg
pop
lea
xor
jg
sarb
movl
fdiv
scas
idivl
jp
sbb
icebp
gs
push
pop
inc
ficompl
je
mov
and
fidivrs
add
pop
sub
jg
mov
sub
in
sbb
jmp
pusha
call
sub
mov
add
je
nop
sti
fidivs
mov
or
test
addr16
dec
xor
xchg
or
lods
adc
es
pusha
cmp
or
inc
aaa
or
mulb
or
adc
dec
push
icebp
cmp
imulb
bound
add
or
lea
xor
push
test
jle
das
push
mov
scas
popa
mov
mov
and
fwait
scas
jg
sub
xchg
sbb
cmp
es
mov
add
inc
inc
push
stos
mov
add
lret
cmp
insb
adc
leave
jle
inc
ljmp
loopne
xlat
fcmovne
incl
cli
mov
mov
jmp
add
imul
dec
test
fwait
jno
sbb
aad
dec
loopne
ss
clc
idivl
push
dec
and
fwait
out
sbb
ret
inc
neg
jmp
jecxz
lahf
jmp
dec
xchg
icebp
cmp
xchg
push
nop
pop
stc
loop
sbb
push
shll
les
scas
xchg
mov
ja
test
scas
je
jbe
pop
push
clc
xor
pop
clc
jo
jg
mov
idivb
and
bound
jle
mov
loopne
adc
xchg
ja
cli
pop
das
mov
add
pop
sbb
pop
add
pop
pop
stos
mov
sbb
mov
xchg
mov
hlt
cmp
pop
mov
push
push
adc
jl
pop
push
jno
out
lods
or
mov
cmp
push
lods
mov
int3
and
int
outsb
push
sbb
mov
xor
ret
cmp
clc
dec
push
cmp
arpl
fsubs
cmp
push
in
or
adc
sub
scas
lock
call
xchg
dec
test
ret
push
stos
cli
jmp
shlb
push
mov
in
jp
idivb
pop
dec
push
mov
xor
jns
sub
dec
inc
es
int3
scas
xchg
stos
lods
jl
rorl
in
je
add
popl
jl
lcall
into
xchg
aam
jecxz
loope
in
aas
mov
sub
cld
inc
std
aas
lods
cvttps2pi
cmp
mov
or
jge
lea
fnsave
dec
scas
sti
aaa
ret
loop
inc
mov
mov
xor
les
std
mov
repz
and
pop
sbb
mov
xor
xchg
jp
push
insb
hlt
or
std
movl
pop
jl
fs
bound
in
mov
inc
cs
rolb
mov
js
xchg
mov
cvttps2pi
test
mov
popl
dec
mov
xchg
mov
adc
inc
mov
pop
jle
ret
sbb
sarb
mov
push
lea
test
or
aad
es
stc
in
cmp
push
jo
mov
insb
arpl
ret
insl
cmp
push
rorb
lea
cmpsb
or
cmp
rcl
xchg
ret
fs
mov
adc
cwtl
sbb
hlt
out
or
push
dec
rcrl
int3
js
insl
lcall
pop
sbb
seto
cli
cld
jnp
test
inc
lds
adcl
lea
pop
das
cld
aas
js
imul
lret
cmp
fmul
aaa
in
shl
sahf
dec
sub
mov
shrl
shl
scas
aam
imul
mov
clc
mov
pop
xlat
cmpsl
add
sbb
testl
jne,pn
les
incb
test
sbb
mov
loopne
shrl
mov
fwait
jb
int
cltd
pusha
push
lock
add
xchg
mov
xorb
or
jmp
cli
add
cmp
jge
test
mov
leave
in
sub
lods
and
repnz
jl
sbbb
add
out
sbb
push
fdiv
or
cld
mov
push
outsb
add
pushl
or
sub
xchg
push
outsb
mov
test
inc
add
sub
and
dec
bound
repnz
test
push
cld
rolb
ret
hlt
nop
sbb
inc
push
pop
mov
jmp
ficoms
das
xor
clc
inc
mov
imul
and
cs
xchg
movsb
into
jle
rcl
inc
pop
pusha
sub
sub
lds
ss
xor
pushf
xor
or
insl
call
and
dec
ljmp
je
insb
mov
push
fisubs
mov
shlb
lods
cwtl
jbe
dec
test
sub
lret
cmp
sub
movsl
aad
int
into
and
xor
sarb
add
mov
mov
push
ret
neg
outsl
dec
iret
into
mov
sbb
sub
out
xor
add
adcb
cli
cwtl
mov
sti
out
jl
xor
sarl
xchg
or
aaa
jecxz
aam
sub
rorb
icebp
xchg
push
push
pop
std
pop
data16
ror
lahf
push
add
cmp
loope
sti
call
subl
arpl
loope
clc
jecxz
lahf
ret
pusha
sti
enter
pop
movsl
out
jle
jmp
inc
xor
or
stos
emms
popa
daa
in
movaps
dec
adc
rcrl
mov
rorb
add
xor
pop
fnstsw
dec
add
shrb
dec
sbb
xor
adc
mov
fnstsw
andb
shll
or
in
in
xchg
push
sbb
jne
ret
and
inc
add
ja
dec
jns
jbe
or
imul
cmp
sub
or
imul
scas
rcrb
scas
jno
inc
add
js
pop
xchg
fstp
sbb
jmp
adc
adc
enter
add
adc
addl
push
add
xlat
or
fdivr
or
xor
adc
lods
and
je
jo
and
push
popf
add
call
mov
mov
or
dec
or
loop
dec
jmp
out
hlt
xchg
jbe
lock
rcll
mov
lret
mov
sahf
or
or
xchg
cli
push
outsl
or
lock
cmp
mov
std
addl
pop
test
bnd
clc
cmp
sub
dec
and
add
dec
inc
push
jecxz
scas
mov
arpl
mov
data16
xchg
filds
cmp
xor
stos
mov
daa
out
mov
jo
hlt
stos
lods
add
and
mov
loope
jmp
jo
mov
out
clc
jo
sbb
sbb
pushl
xchg
pop
mov
ret
xor
inc
fisubs
out
mov
hlt
es
pop
or
mov
mov
pop
push
pop
mov
out
mov
ficomps
ja
inc
ret
fnclex
push
push
ljmp
jg
repnz
mov
fisubrs
mov
fldl
aad
jo
jb
mov
aad
or
clc
and
sub
pop
in
out
cmpsb
es
divps
decl
add
add
jo
lahf
mov
dec
clc
or
pop
out
push
sub
jl
mov
and
hlt
mov
jmp
xchg
and
outsb
jge
addw
or
push
inc
insb
cmpsl
das
shlb
leave
xchg
je
or
mov
push
cmp
fwait
ret
cmp
sbb
add
test
clc
movl
mov
cmpl
sbb
fldenv
lods
xor
or
add
cmpsl
enter
add
add
clc
cmpsb
xchg
in
jecxz
ja
cmpb
das
dec
mov
mov
ret
push
ret
dec
add
cld
ret
mov
add
ret
adc
loop
add
pop
ja
cmp
pop
or
xchg
xchg
add
cmpsb
ljmp
jnp
add
or
cmp
ss
mov
inc
shl
adc
incb
push
aad
add
inc
das
or
jmp
fmull
xchg
cld
push
pop
or
pop
fcoms
dec
test
add
jmp
adc
je
scas
mov
and
xchg
jbe
or
cmpsl
or
sub
pop
hlt
outsl
fadds
roll
sub
xor
negb
cmp
sbb
leave
mov
movsl
xchg
push
test
dec
sub
ljmp
mov
mov
idiv
sahf
push
lods
fbld
inc
insb
xor
xor
xor
mov
pop
pop
jo
js
ret
cld
sub
js
adc
dec
sbb
fdivl
inc
jmp
or
xchg
or
mov
pop
lcall
mov
xor
dec
add
lret
imul
jle
addb
stos
mov
cmp
lmsw
jne
clc
jo
aam
ret
jmp
mov
add
gs
int3
das
add
sbb
adc
xlat
clc
popa
sbb
mov
aam
push
lret
fimull
push
sbb
and
out
inc
lock
xchg
ret
cmp
call
xchg
xchg
loopne
nop
insb
mov
mov
je
divb
call
sub
dec
loopne
add
sbbl
xor
stos
nop
cmp
stos
lock
mov
arpl
cmpsb
mov
stos
lret
adc
stc
mov
add
pop
jns
rolb
hlt
sbb
xlat
adc
pushf
outsb
cmpb
fsubr
clc
or
scas
repz
cmp
mov
and
xchg
dec
fbld
roll
enter
adc
in
int3
stc
outsl
xlat
sub
xlat
fsts
add
lock
cli
add
ret
cwtl
pop
mov
add
cmp
mov
in
call
das
jp
stos
pushf
je
xchg
divl
adc
xor
movsb
mov
les
daa
test
push
xor
hlt
dec
adc
push
xchg
xor
pop
rol
das
push
and
addb
mov
xchg
adc
mov
sbb
jge
aad
xchg
fwait
jmp
movsb
imulb
mov
xorb
mov
sbb
bnd
test
mov
dec
shll
adc
scas
jp
sub
mov
and
push
movsl
ds
or
xchg
fsubs
xchg
push
pop
pusha
pop
jb
je
mov
int3
and
jecxz
loop
lret
out
aam
cmovno
add
int3
fwait
xchg
idivl
loope
outsl
xor
fcomps
in
fistpl
aam
call
or
cmp
clc
push
clc
fstl
scas
hlt
mulb
dec
inc
add
sahf
push
cmpsb
cmp
ret
jg
push
mov
dec
jl
or
push
mov
ret
in
clc
push
sub
add
adc
fcmove
sub
push
mov
fimull
inc
ret
mov
cmp
cmpsb
or
jbe
rolb
lea
add
pop
or
mov
adc
ret
out
jl
dec
xor
fnstenv
out
and
lock
ja
fidivl
push
mov
shll
mov
push
push
outsl
mov
std
outsl
clc
in
push
mov
pushf
out
pop
inc
sub
sub
sub
xchg
call
mov
mov
adcl
or
inc
inc
pop
add
adcl
xlat
scas
mov
cs
sub
and
fcoml
clc
inc
lahf
movsl
js
fs
das
inc
stos
mov
cmp
push
mov
jno
dec
jmp
enter
lea
add
add
and
jp
xor
jbe
das
divb
jnp
push
sti
adc
shll
ds
lock
outsb
sbb
ret
shll
add
pop
gs
stos
enter
lds
outsb
lret
fimull
adc
sahf
cmp
aam
aam
orb
stos
dec
icebp
lock
repz
pop
mov
mov
mov
aas
insl
call
mov
jle
arpl
ret
push
subl
loop
lock
loopne
mov
loop
sti
dec
into
adc
add
jge
jnp
clc
add
xchg
add
insb
push
pop
cmc
add
cmp
or
xchg
shrl
lods
loope
jmp
lds
mov
stos
xchg
sbb
mov
push
lret
sub
push
inc
push
mov
dec
jecxz
shll
imul
xor
inc
in
mov
in
in
dec
inc
or
lea
or
nop
add
movsb
inc
pushf
xor
ljmp
jecxz
out
pminub
dec
xchg
push
lahf
xor
hlt
lds
aaa
and
bound
jg
mov
sub
sub
gs
les
fs
mov
pop
enter
adc
in
mov
jp
sbb
jl
dec
jo
ljmp
cmp
gs
mov
add
xchg
mov
pop
aam
and
adc
jbe
fists
xchg
xor
ficoms
mov
mov
mov
xchg
xor
push
sbb
push
pop
push
cmc
or
add
inc
push
inc
fsubrl
mov
sub
fucom
inc
adc
fdivrs
inc
mov
jnp
loopne
ds
adc
out
popa
jb
mov
les
xchg
mov
decl
add
cmp
and
rolb
push
das
jecxz
pop
js
lods
test
or
cmp
subb
jno
pusha
in
dec
or
sbb
sti
popa
jecxz
fsub
inc
lods
mov
sbb
ljmp
iret
cmp
jp
pop
lock
pop
fcomps
mov
inc
or
sarl
pop
std
inc
dec
mov
ret
jge
dec
sub
mov
push
sbb
stos
pushf
rol
cmpb
adc
pop
add
ds
ss
push
hlt
push
scas
clc
fidivs
pop
daa
sub
mov
or
mov
xchg
ljmp
out
ret
pop
push
dec
xchg
jmp
sbb
push
repnz
or
pop
adc
xor
sub
push
ja
jbe
loopne
jo
pop
adc
test
xor
sub
jo
and
inc
popl
stc
xor
add
ror
pop
cmc
inc
cmc
jo
jmp
icebp
pop
xchg
out
iret
mov
xchg
xor
pop
dec
mov
push
les
gs
loopne
fcoms
repnz
mov
cltd
bound
xchg
les
jg
and
ja
jne
xor
scas
bound
ret
xor
mov
into
pop
mov
hlt
rorb
sub
jecxz
sub
mov
xor
mov
enter
loopne
rcrb
mov
mov
rol
mov
jle
aaa
mov
bound
xor
jmp
enter
cwtl
jns
dec
std
lds
call
jl
mov
ljmp
cmpb
dec
test
mov
dec
call
pop
hlt
push
mov
or
mov
lods
push
adc
in
inc
pop
fsubl
cli
mov
mov
and
pop
jnp
decl
lods
pop
outsl
jo
mov
cli
mov
mov
sub
mov
and
jge
ret
into
out
loop
push
mov
xchg
shlb
inc
shl
adc
inc
and
adc
push
js
pop
inc
lock
subl
mov
shll
lds
xor
aam
push
orb
mov
ret
pop
xchg
mov
and
dec
aam
push
adc
sbb
ja
ss
push
filds
jle
add
and
ds
jg
jo
aas
sarb
cld
rcrb
shrl
dec
cmp
enter
je
pop
das
dec
pusha
push
jle
idivb
jecxz
outsb
cld
out
pop
fiadds
xchg
cld
mov
jg
inc
pop
dec
cmp
clc
xchg
xor
jmp
push
inc
lcall
mov
mov
lods
nop
adc
cli
pop
lock
cwtl
movl
ss
out
sub
jbe,pn
add
insl
cwtl
mov
inc
das
ss
xlat
popf
es
mov
call
adc
call
les
pop
dec
inc
dec
or
dec
sub
jno
mov
daa
dec
insb
arpl
inc
fidivrl
adc
outsb
and
loop
test
loop
stos
jne
test
mov
lcall
xor
imul
nop
loopne
scas
or
inc
dec
subb
adc
mov
inc
or
inc
in
push
arpl
push
roll
clc
nop
and
pop
push
sahf
add
sbb
adc
jle
xchg
ja
je
rorb
xor
daa
push
movb
scas
mov
out
cwtl
dec
jo
shrl
push
push
outsl
pop
mov
lds
bound
into
movsl
add
test
mov
push
movl
stos
fwait
sub
lret
mov
add
xor
fistps
es
mov
imul
jge
nop
sbb
repnz
mov
fdiv
stos
ja
mov
clc
jl
loopne
or
xor
notl
pop
dec
es
cli
in
js
pop
fstpt
or
sbb
cmovle
rorb
sbb
and
aam
lea
dec
xchg
mov
dec
sbb
jg
xlat
movsb
mov
gs
push
pop
xchg
insb
mov
mov
bnd
pop
pop
inc
add
sub
lahf
mov
neg
fwait
clc
icebp
cmc
sub
cld
aad
inc
add
imulb
xlat
rol
fsubl
orb
and
pop
clc
aas
mov
pop
jne
push
fisttpll
sbb
push
loop
add
ljmp
fcompl
xlat
push
jp
inc
je
mov
pop
and
cmc
and
fsubrl
add
cld
cli
std
jmp
adc
adc
pushl
cmpsl
dec
clc
ljmp
add
nop
mov
nop
rolb
mov
popf
mov
lahf
or
jns
addr16
jg
inc
js
push
out
xchg
inc
mov
push
mov
push
pop
loop
mov
cld
stos
mov
xchg
dec
aas
push
scas
mov
add
and
xor
sub
out
push
mov
sub
fisubs
push
les
pop
pop
rcl
ljmp
adc
loope
jbe
fbstp
icebp
push
aam
mov
aam
push
sarl
pop
dec
cmp
push
imul
jge
aam
lock
stos
js
arpl
push
jae
jne
inc
aas
mov
add
push
mov
jnp
into
cmpb
sti
jmp
and
iret
orb
lcall
adc
enter
aas
dec
pop
pop
pop
shlb
add
push
xchg
in
imul
or
insl
pop
iret
enter
dec
test
lcall
clc
stos
inc
scas
cmp
out
mov
mov
push
cld
or
in
fstl
xor
out
insl
xor
sbb
jns
aaa
mov
ficoms
out
ficomps
loopne
jmp
fistpll
inc
fdivrs
or
jnp
push
loope
adc
js
dec
pop
clc
scas
push
fdivrs
or
push
dec
cmpsb
sahf
push
jl
ret
outsl
adc
add
xchg
cmpsb
inc
mov
pushf
nop
xchg
cmpsb
test
imul
cmpsb
les
push
imul
lea
lcall
mov
roll
stc
outsb
mov
mov
call
repnz
decb
es
push
cmp
adc
aaa
jle
iret
mov
adc
cmpb
sbb
adc
data16
fbstp
mov
lods
out
cli
out
outsl
aas
rcrb
dec
into
in
xchg
xlat
aam
add
dec
sbb
sbb
jp
pop
add
inc
data16
mov
andl
in
mov
sbb
add
dec
xchg
int
icebp
mov
inc
cltd
scas
insb
cmc
jnp
cld
ret
popf
push
sbb
imul
inc
in
imul
dec
sbb
mov
sub
js
sub
mov
or
in
aad
stos
test
mov
push
fsubrl
sub
adc
jp
xchg
and
aas
dec
or
das
scas
test
clc
std
mov
inc
dec
mov
into
sbb
repnz
aad
loopne
stos
jo
ss
adc
in
clc
lds
rcrb
adc
hlt
push
andb
jno
pop
pop
das
fisttpl
aad
arpl
ds
dec
or
in
adc
movsb
xchg
cmc
sub
fucomip
adc
push
and
out
adc
into
or
stos
orb
test
mov
stos
cmp
fiadds
jo
jp
jecxz
rcrb
aad
cld
jl
inc
adc
outsl
pop
mov
mov
mov
push
ljmp
dec
sbb
push
jge
sub
stos
pop
add
in
sbb
shlb
and
test
push
lcall
ffreep
sbb
xor
lock
int
test
jp
scas
dec
inc
movsb
stos
adc
xorl
jmp
pop
or
pop
add
test
or
xor
pop
in
adc
stos
cs
jl
dec
mov
sub
mov
pushf
mov
sti
ret
adc
jecxz
jecxz
movd
sbb
pusha
push
mov
or
or
jae
jmp
fadds
lds
cmpl
xchg
test
iret
stos
jp
fildll
add
std
and
dec
mov
js,pn
add
sbb
hlt
jg
sahf
mov
xor
add
or
add
push
fs
and
add
jge
push
icebp
dec
dec
sti
inc
out
sub
jmp
sbb
stc
cwtl
sub
or
fisttps
add
insl
add
movsb
jns
js
jo
arpl
fisubrl
sbb
mov
ror
cmp
out
orl
mov
pop
jg
mov
adc
sub
popa
add
mov
sbb
loopne
in
rorb
ret
xchg
jbe
lods
sub
sbb
sbb
mov
addb
mov
mov
mov
scas
pusha
shrb
cmc
scas
add
mulb
aas
out
pop
mov
mov
push
clc
cmpsl
and
ret
fwait
jne
lds
lods
test
push
jne
sub
mov
das
test
scas
inc
inc
jo
clc
pop
adc
lock
out
ret
mov
push
mov
and
dec
push
mov
arpl
aad
mov
out
lock
inc
jle
adc
pop
addl
shlb
pop
sub
mov
out
mov
sbb
shrl
xorl
add
stos
pop
fists
les
stos
in
xchg
xchg
test
push
daa
sti
xor
xchg
add
or
inc
std
scas
and
dec
mov
push
nop
add
add
loop
push
jg
cmp
jo
pop
mov
sbb
icebp
lcall
rcrb
js
mov
jnp
adcb
pop
or
push
push
dec
cmpb
frstor
aas
stos
pop
or
outsb
jecxz
sbb
adc
popa
scas
mov
std
or
sbb
mov
ljmp
daa
cld
subl
inc
pop
out
ficoms
js
lea
sub
pop
or
mov
add
cmpl
push
rorl
ss
jbe
mov
jecxz
xchg
lahf
mov
or
js
daa
divb
cld
xchg
mov
decl
push
pushl
fidivrl
xchg
aam
je
lahf
xor
adc
scas
sub
inc
leave
sarb
xchg
inc
cmp
aad
pop
xorb
icebp
pop
inc
bound
ja
push
jcxz
mov
test
clc
out
cmp
ret
push
js
dec
xlat
sarb
push
jae
lahf
mov
out
or
xchg
pop
test
cmp
aam
add
fidivs
cmp
cmp
pop
or
xor
outsb
add
mov
inc
adc
adc
aaa
es
lret
lods
and
mov
cwtl
mov
cmc
out
sbb
push
mov
pop
mov
adc
filds
mov
xlat
or
shlb
dec
sarb
lock
cmpsl
sbb
push
pop
in
sub
jo
dec
sbb
or
aas
in
inc
jecxz
dec
pop
inc
mov
xchg
jl
pop
jecxz
ret
std
cmpl
add
xlat
sub
push
clc
inc
pushf
and
push
ss
outsl
inc
lds
and
mov
add
mov
out
xchg
dec
xor
lock
ja
test
dec
pop
xchg
cmpsl
jb
outsl
insl
xlat
push
icebp
fwait
mov
push
fisubs
fisttpll
xchg
and
imul
loopne
mov
fs
enter
and
jne
mov
rclb
test
aas
and
add
jne
daa
jle
call
fnsave
xchg
or
xchg
add
cmc
add
cs
loope
mov
inc
cmc
adc
popa
mov
xor
js
push
push
scas
pop
sub
lds
fisubrl
or
dec
sbb
fmull
out
pop
push
clc
cmp
jmp
lret
cmpsb
adc
out
jge
filds
out
sbb
loopne
xchg
adc
dec
mov
pop
or
xor
lahf
mov
xchg
shr
divl
hlt
popa
cltd
rorl
dec
or
xor
and
mov
addb
jnp
mov
jne
xor
jle
jg
aas
add
outsb
push
and
jo
mov
daa
stos
fistpll
into
adc
jge
pop
dec
leave
or
mov
mov
clc
mov
clc
inc
mov
inc
push
xchg
test
mov
repnz
mov
cmc
xchg
ljmp
mov
jns
popa
sub
adc
js
test
loop
add
and
push
loop
sub
ss
sbb
aam
push
mov
adc
clc
gs
clc
xchg
movsb
in
rclb
mov
and
fsubrs
adc
sub
je
xor
adc
lock
jg
xor
xor
add
mov
adc
bound
or
xor
push
push
cmp
ja
jg
adc
adc
popa
jecxz
sarb
xchg
xchg
push
orb
xor
pop
roll
pusha
es
shr
fmul
bound
cli
mov
pop
add
icebp
mov
sbb
fcmovb
mov
je
xor
fidivrl
fsubl
mov
ja
les
cmpsl
push
add
cmp
jo
sbb
and
and
mov
dec
mov
sti
cmp
jo
jl
cs
icebp
xor
aas
push
in
xchg
xlat
rclb
and
mov
cltd
and
ljmp
movsl
pop
sti
fnstenv
xchg
sbb
jmp
sbbl
cwtl
and
inc
test
fs
or
adc
xor
jo
mov
inc
mov
mov
decl
iret
insl
fbstp
pop
pushf
fisubs
cmc
dec
adc
es
cmp
iret
xor
pop
ljmp
cmp
mov
je
rorb
push
sub
hlt
or
xchg
repz
dec
mov
rorb
mov
add
lcall
push
jb
data16
xor
sub
dec
cmp
add
das
les
and
test
jo
pusha
cld
mov
test
or
mov
xchg
push
ret
or
test
shlb
xchg
mov
stos
xchg
adc
loopne
sbb
ficomps
lds
pop
adc
adc
cmpsl
xor
test
add
and
test
dec
aaa
loopne
out
adc
test
jp
jp
mov
push
or
addr16
lods
mov
pop
rcl
mov
mov
rorb
pusha
cli
xchg
jo
jl
lock
cwtl
inc
push
mov
dec
jmp
push
push
aas
add
std
xor
adc
adc
stos
push
incl
dec
es
or
std
ret
jle
pusha
mov
fbstp
enter
xchg
and
push
sarb
lret
mov
or
or
popa
mov
mov
call
sub
sbb
fsubrl
dec
xchg
jl
inc
iret
addl
in
rolb
mov
scas
lods
xchg
int3
xlat
or
xor
mov
mov
leave
push
insl
cmp
mov
dec
dec
sbb
xor
mov
jmp
test
jle
jno
pop
and
and
aas
mov
insl
pop
rcr
fists
xor
mov
ss
popf
mov
pop
rcrb
lods
and
lcall
push
mov
mov
enter
fisttps
cli
subl
inc
jbe
aaa
add
cld
sbb
mov
arpl
fidivrs
int3
movsl
pop
lret
add
cmpps
adc
adc
sub
jle
insb
ljmp
add
roll
loopne
mov
ds
jmp
fwait
mov
mov
cmp
movsb
mov
scas
mov
jge
jecxz
jb
dec
dec
out
ja
push
mov
add
mov
orb
push
cld
imul
dec
das
stc
xchg
mov
inc
push
ficompl
and
cmc
cwtl
into
jp
shr
mov
push
mov
jnp
std
shrd
cmpsb
cmp
testl
adc
mov
pop
dec
imul
pop
addr16
clc
add
repz
fidivs
adc
filds
mov
xor
sbb
ja
jl
jg
push
aas
pop
push
insl
mov
push
sub
add
addb
aas
clc
aam
and
xor
inc
pop
or
xor
jne
scas
lods
adc
or
inc
cld
mov
jae
leave
loopne
push
add
jg
jle
aad
mov
mov
and
sbb
jg
movsb
mov
add
lret
pusha
popl
bound
inc
sbb
addr16
sub
lods
xlat
in
mov
stos
pop
stos
nop
out
cmp
pop
cli
sti
cltd
xchg
testl
add
out
adc
jmp
mov
xchg
dec
add
test
cmc
lds
pop
and
jo
loop
adcl
out
out
cli
lods
test
fistpl
or
out
les
fs
xchg
shlb
mov
push
add
cmp
int
gs
es
pusha
hlt
rcrl
sbb
mov
aam
ljmp
pop
fadd
mov
lea
scas
je
mov
xchg
jo
rolb
lret
ds
lds
adc
jmp
fmuls
jo
pop
add
outsb
enter
hlt
sub
fdivrs
or
push
add
push
adc
hlt
pop
or
jg
pop
push
mov
xchg
jg
push
xchg
bnd
pop
push
mov
pusha
jns,pn
dec
icebp
mov
adc
xchg
inc
sbbl
and
out
push
fisubs
clc
mov
ffreep
adc
callw
pop
push
add
push
lret
cmpsb
and
push
sbb
cli
sbb
pushf
xchg
mul
in
push
fmull
addb
loop
mov
les
addb
dec
cmp
aaa
stos
leave
ret
fcoms
push
xchg
xchg
pop
dec
mov
push
cmp
mov
testb
movsb
push
movsl
ljmp
repz
fwait
sub
jecxz
push
xor
sub
and
fwait
inc
mov
imul
cld
dec
xlat
mov
movsl
loop
cmp
dec
mov
pop
adc
je
lea
into
fildll
ror
pop
inc
jae
jae
stos
xchg
call
loop
push
pop
dec
or
add
and
xor
push
pop
test
int3
jmp
xchg
mov
das
dec
jl
ficoml
mov
sbb
push
dec
add
aaa
mov
out
ja
mov
lds
sbb
aaa
and
dec
and
push
call
cmp
inc
bound
jge
add
cmpl
mov
jae
xchg
mov
mov
ret
test
pop
call
add
and
aaa
std
inc
jbe
jnp
test
inc
pop
out
and
xchg
std
in
iret
outsb
mov
sub
xchg
inc
rclb
shlb
dec
int
mov
in
incb
mov
outsb
fmul
loop
scas
inc
cmp
push
iret
cwtl
lods
outsl
xor
xchg
cmp
mov
adc
fiaddl
ja
lods
add
or
cmp
insb
inc
push
sbb
xor
popf
in
out
mov
lock
lret
xchg
inc
push
out
test
test
jmp
pop
xchg
leave
lea
jle
mov
or
lock
push
inc
mov
or
mov
js,pn
imul
fcomip
lock
xchg
fs
cld
inc
les
xchg
out
divl
std
sbb
mov
pusha
in
into
mov
mov
mov
inc
xchg
js
jmp
scas
ret
or
cmpsl
cs
das
xchg
push
popa
push
stos
fs
add
and
out
adcl
add
mov
jno
ljmp
test
jns
and
push
sbb
nop
in
pop
scas
fidivs
mov
push
lret
incb
push
and
popa
loop
je
ljmp
mov
lea
mov
lea
sub
call
int
adc
dec
ficoml
loop
out
jg
imul
add
mov
sub
cmpb
loope
cmpb
jle
pop
mov
mulb
jo
cld
test
sar
mov
bound
fidivs
cmp
ljmp
jno
xor
mov
mov
sbb
loopne
add
adc
rcrb
call
sub
ljmp
dec
push
mov
lock
es
or
nop
cld
mov
mov
test
les
xor
jno
test
loopne
lods
mov
jg
cmpsl
bound
repz
add
das
dec
lods
hlt
loopne
stc
pop
int3
in
cld
add
and
jp
ret
inc
mov
out
into
adc
je
cs
mov
fdivrl
mov
shlb
sbb
mov
mov
sub
xor
movsb
add
pop
push
mov
lret
mov
cmp
lds
in
imul
cmp
test
mov
repz
adc
or
dec
enter
sbb
sub
xchg
push
in
inc
loopne
aam
adc
sti
ja
mov
or
aam
scas
sub
es
repnz
fisubrl
arpl
or
ret
les
cli
sbb
cmp
jae
jp
jecxz
jp
sbb
pop
insl
jg
inc
add
push
mov
adc
pop
pop
nop
xchg
or
and
and
pop
adc
pop
addl
roll
cwtl
cmp
ja
movsl
out
cmpl
movsl
test
aas
lds
int3
pop
cld
pop
sub
xchg
in
or
jl
push
sub
mov
inc
ret
adc
sbb
jg
call
xor
ljmp
loop
mov
insl
lret
cmpsl
neg
test
mov
sbb
add
pop
insl
roll
jle
scas
pop
mov
loope
jnp
dec
cmp
repnz
out
addr16
sar
or
fisubl
mov
cs
mov
aam
icebp
stos
dec
mov
add
fmul
pop
pop
push
fldlg2
add
outsl
mov
lahf
dec
ljmp
loopne
ds
fcompl
decb
mov
fsub
cmp
std
mov
xor
test
push
sbb
jo
jb
rorb
adc
ret
aam
and
mov
sar
push
inc
lcall
out
sub
dec
pusha
xchg
hlt
fdivs
push
and
aam
jbe
pop
add
les
pmulhuw
mov
sub
imul
loope
loopne
addl
in
call
mov
dec
push
fldenv
lcall
cmp
fbstp
mov
cmp
and
stos
mov
hlt
pop
jl
mov
das
js
mov
or
fcomip
daa
push
std
es
shlb
imul
sub
lret
incl
pop
test
outsb
mov
add
mov
les
push
jp
cli
ret
les
test
or
ss
pop
push
loope
rorb
loopne
push
mov
dec
or
into
dec
ret
adc
push
rclb
movsb
mov
or
jp
pop
outsb
xor
ret
cmc
add
cld
scas
rcll
lcall
lods
andb
lods
movsl
lret
int3
jle
mov
in
cmp
sub
cmp
sbb
sti
xchg
ret
push
mov
cmp
or
sar
sbb
cli
and
mov
pop
movsb
jg
jbe
test
out
iret
imul
xor
les
loope
jmp
popa
and
pop
cs
fcoml
fwait
xchg
ficomps
lods
push
daa
push
add
sub
sub
mov
std
mov
mov
cmp
add
xchg
sbb
cmp
in
push
inc
mov
fcmovu
das
pop
push
mov
ret
cld
lahf
in
iret
sbb
adcb
pushl
mov
mov
in
add
push
insb
jp
lea
imul
pop
nop
stc
push
out
pop
add
lret
dec
and
or
ja
pop
or
mov
movsl
xchg
mov
shlb
fucomp
subb
jecxz
xchg
push
rcl
xor
clc
inc
fadd
pop
and
mov
xor
mov
sbb
jle
and
push
inc
sub
xchg
add
jl
pop
pusha
xchg
hlt
xchg
adcl
inc
fistps
or
mov
adc
cli
stos
mov
push
rclb
das
push
add
pop
in
mov
inc
xchg
sarb
mov
in
je
cmc
stos
jo
js
jbe
rcl
xchg
jp
dec
ss
outsl
xchg
push
and
aam
js
sub
xor
lret
test
nop
mov
push
stos
jne
xor
call
das
cmp
push
fmull
xor
movsb
loopne
aas
cwtl
adc
mov
mov
movsb
mov
repnz
jg
cmpsl
add
cli
imul
mov
jo
insl
inc
pusha
popa
mov
aad
xchg
inc
mov
daa
enter
mov
mov
add
lds
movsl
nop
les
ret
jnp
test
or
pop
loope
loop
add
in
in
adc
jnp
js
sar
stos
insl
inc
push
lds
or
jg
add
add
inc
xchg
push
imul
sbb
movb
sarl
jb
data16
pop
add
dec
movsb
lock
loope
aam
call
add
inc
insb
xchg
or
and
dec
shlb
sub
pop
sbb
cmp
sbb
adc
pop
push
outsb
dec
lods
sub
arpl
psubw
popl
pop
mov
sbb
dec
hlt
cld
mov
ret
cmc
mov
lods
jge
lods
and
jl
andb
dec
das
cmp
jle
fmuls
jnp
mov
decb
mov
in
movsb
sub
add
aaa
or
sub
js
cmp
jp
push
movsb
cltd
adc
stc
pop
inc
loop
pop
ja
mov
and
mov
loop
push
sub
push
and
cli
imul
bound
or
dec
adc
xchg
loopne
mov
push
leave
stos
jae
fisubs
push
rcll
add
sbb
push
movsl
lock
pop
inc
rcl
sbbl
roll
imul
adc
rorb
jl
jb
sbb
filds
mov
add
or
cmp
aam
into
jmp
repz
mov
xchg
outsb
fisttpll
push
add
add
xor
xchg
inc
mov
xchg
fsubs
ljmp
cltd
mov
pop
adc
fs
test
mov
jne
mov
push
jl
int
mov
popl
add
rolb
jp
loope
js
jp
push
adc
loop
arpl
pusha
mov
out
and
outsl
add
lds
fbstp
ret
das
pop
lods
loop
sbb
clc
aas
rorb
jle
pop
jo
pop
ss
js
pop
xorl
xchg
xchg
mov
dec
fcmovbe
test
adc
adc
lods
fbld
insl
mov
nop
jl
int3
fld
xorb
cmp
dec
clc
sbb
push
ret
testl
push
decl
jmp
or
dec
sub
add
xor
mov
enter
add
sub
fsubrl
dec
adc
mov
pmaddwd
add
sarb
mov
nop
pop
add
inc
cld
xchg
mov
lcall
mov
gs
out
clc
xor
inc
add
and
cmc
sbb
aad
jmp
jmp
pushf
mov
clc
int
repnz
insb
sarb
inc
adc
sub
cmp
roll
mov
mov
add
lahf
movsb
mov
push
adc
orps
sub
sbb
clc
xlat
hlt
cmpsb
pop
mov
add
popa
cmp
js
es
out
cmc
push
mov
mov
cld
add
cltd
fnstsw
aaa
mov
or
dec
mov
mov
push
add
mov
pop
movsl
das
hlt
inc
roll
out
add
loopne
mov
add
jo
pop
int
adc
add
insb
pusha
or
dec
jecxz
mov
rcl
cli
filds
jns
mov
mov
xor
cmpl
jmp
adcb
aad
pop
mov
stc
mov
xorl
or
adc
xchg
jle
mov
addr16
sbbl
mov
dec
mov
push
popa
lds
loopne
xor
rorb
xor
mov
outsb
jge
scas
sbb
mov
outsb
lods
loope
into
push
pop
repnz
sub
push
fldl
pushf
outsb
adc
sub
jecxz
pop
aas
push
inc
push
mov
cmp
mov
cmp
mov
shll
test
inc
xor
push
pushf
push
inc
or
adc
add
cmp
xor
sub
ss
clc
or
jo
sbb
inc
mov
inc
incl
sub
sbb
add
pop
sub
mov
fisttps
sbb
mov
inc
xlat
fwait
mov
into
push
xor
loopne
clc
scas
mov
push
test
jecxz
sub
stos
jmp
int3
add
push
shlb
add
mov
test
shlb
jle
call
lret
repz
repnz
or
imul
mov
test
dec
lods
push
lock
mov
ljmp
xchg
adc
fs
dec
insl
lret
pop
ja
fcomps
lea
fisubs
in
mov
movsl
xor
icebp
jp
adc
push
ret
out
cmp
imul
jecxz
cmpsb
mulb
push
lea
jbe
mov
mov
daa
adc
cmp
mov
aam
mov
jge
out
les
outsl
jae
push
lcall
push
sbb
fistpll
addl
imul
mov
sub
rcrl
pop
xchg
pop
push
fadds
cmp
test
dec
inc
call
mov
xlat
dec
aad
jo
jbe
fcmovnu
cmp
nop
or
jg
inc
adc
shl
pusha
add
push
mov
repz
or
call
outsl
inc
mov
nop
xchg
fwait
arpl
cwtl
fs
inc
inc
sti
cmc
loope
call
in
pop
mov
addl
insb
test
mov
cltd
lods
fisubl
ljmp
data16
out
or
ljmp
pusha
or
jp
add
xchg
rorl
mov
out
out
jp
outsb
add
jo
jp
inc
sub
add
mov
or
xor
mov
dec
loope
addl
add
lcall
sub
add
in
cmc
push
dec
lock
xchg
ds
push
mov
and
mov
fs
sbb
imul
jmp
xchg
loop
repz
cltd
or
mov
andb
adc
sbb
add
fs
bound
push
push
jg
mov
jmp
pop
pusha
fs
sbb
push
adc
push
jl
dec
push
sbb
lods
out
lock
rolb
mov
xchg
ljmp
jbe
ja
pop
xor
add
loope
bound
daa
icebp
sub
push
jle
adc
test
push
mov
test
pop
test
jg
andl
les
jg
dec
pop
in
outsb
jnp
adcb
enter
incb
lods
js
out
mov
pop
pop
outsb
insb
xor
pushf
xor
aas
or
call
fisubrs
add
clc
pop
test
loopne
jb
cmpsb
jg
rcl
xchg
loopne
pop
mov
cli
add
or
and
push
jmp
mov
nop
push
mov
pusha
adc
out
test
icebp
push
push
enter
out
fadd
jl
mov
lret
decl
lock
pop
mov
cmp
cwtl
push
pusha
ret
cld
push
cmp
mov
adc
std
cltd
inc
ret
pop
sub
stos
test
push
lea
js
adcl
and
xor
aaa
cmp
or
xchg
push
incb
inc
push
inc
imul
adc
dec
test
ret
inc
lods
fs
jns
sbb
loope
and
cmp
lods
mov
or
rol
fsubrs
sbb
pop
xor
fs
sbbl
sti
adcb
call
or
nop
mov
rcrb
orl
or
pop
add
adc
add
pop
sbb
data16
mov
js
loopne
pop
cmp
mov
pop
xchg
outsb
ret
mov
mov
xchg
pushf
lret
scas
fmull
adc
loopne
cld
test
xchg
repnz
add
dec
fs
rclb
lock
clc
xchg
stos
aam
mov
js
cmp
pop
push
add
cmp
data16
adc
jge
cmc
or
pop
xchg
xchg
mov
jmp
mov
cmc
icebp
stos
and
test
jae
sbb
int3
push
imul
cmc
sbb
xlat
cmp
inc
cli
data16
cmpsb
mov
sbb
stos
inc
adc
dec
aad
sahf
ret
sbbb
adc
sbb
and
lods
ja
or
mov
cwtl
push
mov
ja
leave
adc
les
movsl
push
sub
pop
addl
dec
add
mov
into
mov
cmp
add
aaa
push
xor
mov
aad
push
dec
scas
or
adc
ja
push
sbb
mov
arpl
hlt
cmpsb
adc
aad
test
insb
lahf
addr16
out
pop
xchg
inc
sarb
lahf
cmp
mov
addb
fidivs
jmp
add
inc
out
xor
push
and
data16
outsb
and
fs
push
cwtl
js
pop
test
cmp
pop
dec
insb
push
test
mov
or
mov
adc
xor
xor
inc
shlb
inc
cld
sarl
push
cmpsb
aam
and
push
cmp
pushf
in
cmp
rol
cmpsl
iret
jmp
sar
jecxz
mov
and
out
cli
rcr
lcall
outsb
hlt
jae
sbb
and
inc
add
rcll
or
lock
pop
test
cld
push
aas
in
addb
push
jg
pop
pop
int
and
sub
push
test
int3
adc
call
test
push
enter
je
cltd
and
sub
jg
dec
jae
fidivrs
jmp
dec
repz
push
loope
inc
lcall
in
mov
jle
lahf
faddl
jno
imul
hlt
scas
loop
nop
lods
movaps
stc
push
xor
je
cltd
sub
mov
fwait
jmp
mov
dec
mov
lods
add
xchg
mulb
sbb
daa
sbb
and
jmp
lcall
imul
jno
or
mov
push
dec
cli
pop
jl
call
pop
jmp
insb
pop
xchg
call
dec
cmp
push
movsb
mov
in
icebp
js
mov
and
iret
icebp
sbb
pusha
loopne
xchg
leave
xor
pop
pop
aam
jo
or
dec
insb
shll
divl
jmp
or
aam
je
pusha
push
add
jae
imul
fimuls
sub
rcr
add
add
add
test
enter
loop
add
push
roll
adc
loop
icebp
mov
inc
sbb
aaa
add
mov
or
iret
mov
rep
mov
outsb
popa
cs
daa
jle
fisttps
jmp
loopne
cmc
js
lea
mov
rcrb
xor
loopne
sub
ret
sbb
sub
loop
mov
imul
cmp
aam
ja
stos
pop
pop
test
jo
aas
testb
push
cmp
jg
xor
jne
mov
mov
jbe
enter
mov
out
mov
sub
pop
sbb
ljmp
xchg
call
inc
sti
cmpsb
xor
jnp
enter
je
clc
mov
cmp
xlat
dec
cmpsb
push
or
push
sbb
pop
pop
sbb
pop
aam
pop
aaa
std
push
aaa
lds
xchg
fidivrs
mov
jo
outsl
xchg
dec
rclb
out
xlat
int3
std
pop
pushl
mov
push
jl
cwtl
sub
inc
icebp
lea
mov
jnp
mov
decb
push
jno
sub
aam
cmp
inc
push
std
jp
or
ljmp
mov
andl
and
orb
sub
je
cmp
xchg
int3
cltd
or
xor
mov
insb
hlt
lea
inc
jne
mov
das
push
imulb
pop
ljmp
imul
fstpt
push
add
push
push
fsubrp
dec
pop
in
cli
mov
add
bound
insb
ficomps
sti
adc
in
jae
add
ljmp
mov
out
aaa
cli
cwtl
mov
xor
imull
mov
and
and
pop
adc
mov
dec
test
dec
je
add
pop
adc
dec
and
stos
testb
sahf
ljmp
xchg
insl
stos
movsb
ret
dec
pop
cmp
jg
movl
jp
mov
nop
inc
shl
sub
add
xchg
mov
add
inc
xchg
push
mov
roll
xchg
jno
cmp
mov
push
pop
dec
out
inc
mov
or
icebp
aas
push
int3
mov
inc
lcall
mov
into
daa
add
mov
aad
xor
and
decl
loop
or
or
orl
nop
fldl
push
movsb
gs
insl
sbb
add
inc
sub
cmp
fsubrp
mov
in
leave
ret
xor
lcall
push
clc
push
cmp
cmpsl
ficompl
or
movsb
and
rcrb
out
das
push
cli
mov
cmp
dec
pop
xchg
nop
test
xchg
mov
lods
push
mov
rclb
mov
shll
push
mov
jmp
mov
sahf
pop
and
shr
push
out
rclb
xchg
int
add
fs
cli
outsb
mov
jbe
ret
icebp
and
pusha
cli
sbb
inc
icebp
fildll
je
cmp
pop
xchg
aaa
push
and
pop
incb
sub
jnp
or
pusha
jbe
adc
jl
adc
fildll
dec
xchg
in
in
and
add
pop
pop
sub
mov
jge
add
call
popf
je
decl
rclb
shrl
std
scas
test
pop
xlat
xor
enter
out
lods
push
fistpl
ss
jb
push
sarl
lds
add
ret
sub
xor
mov
cmp
aas
mov
dec
jl
push
dec
add
enter
pop
and
outsb
pop
xor
loop
xor
adc
insl
cmpsb
lret
stos
in
decl
push
jecxz
xor
xchg
loop
call
pavgb
mov
push
outsb
adc
lret
add
lods
sarl
push
shl
cmp
outsb
mov
cmp
inc
cmpsb
mov
lret
add
out
push
pop
punpckhbw
inc
test
punpckldq
mov
or
fstps
mov
dec
pop
lea
mov
adcb
xchg
cmp
add
je
cmc
cmp
jl
test
push
inc
pop
mov
push
jno,pt
inc
aas
cli
call
adcb
out
aaa
sbb
sbb
stos
fbstp
push
sar
out
test
ja
mov
mov
add
lahf
push
cs
std
inc
add
push
rcll
jg
sub
sbb
outsb
enter
outsl
lock
mov
aas
cmp
incb
jecxz
in
fs
dec
repnz
lahf
push
jno
jg
push
xorb
dec
sysenter
inc
loopne
pop
push
push
mov
repnz
jl
or
dec
mov
je
into
jp
sarb
test
cmp
test
int
sub
cmp
or
pop
pop
pusha
dec
fists
mov
bound
cli
push
hlt
pop
loopne
or
inc
pop
stc
rcll
das
cld
sbb
inc
stos
iret
jnp
fs
clc
inc
xor
outsb
jmp
lcall
xlat
les
dec
jg
sub
les
outsl
adc
push
aas
mov
xor
lods
jns
lock
push
push
ljmp
inc
sub
test
orb
mov
mov
mov
insb
div
lcall
in
adc
xchg
out
inc
jns
notl
cmc
fucomip
leave
shlb
pop
insb
add
xchg
mov
rcll
daa
nop
jecxz
mov
sub
mov
in
iret
adc
mov
jle
adc
sbb
inc
pop
cwtl
outsb
cwtl
sbb
cli
decl
inc
int3
xchg
dec
xchg
mov
xor
add
jg
mov
dec
lcall
mov
in
sahf
cmp
mov
mov
clc
mov
leave
out
test
insl
push
mov
sbb
aam
daa
or
cmp
mov
xchg
fcmovb
push
jl
jecxz
xor
stos
pop
jmp
aas
out
mov
cmp
jg
scas
push
les
mov
adc
or
push
add
dec
mov
jmp
dec
lahf
cld
push
in
scas
das
xchg
hlt
dec
or
mov
out
adc
aas
pusha
subl
jnp
arpl
divb
pusha
cmp
movsb
and
cmp
orb
loopne
ljmp
outsl
mov
sub
push
fildll
sub
pop
dec
ficoms
xor
pop
scas
scas
push
dec
or
not
dec
inc
mov
or
dec
sbb
insb
add
lods
in
pop
stc
sbb
mov
test
xor
scas
pop
fmuls
out
rorb
mov
xchg
jne
pop
jnp
push
add
xchg
scas
push
sub
or
icebp
outsl
and
push
xchg
dec
icebp
xchg
rclb
pop
fwait
idivb
loopne
dec
xchg
mov
stos
or
pop
jmp
ret
les
cmp
jp
or
ja
rolb
xchg
jo
mull
adc
jg
pop
loopne
pop
stos
cwtl
pop
insl
dec
in
cwtl
daa
pop
cmp
jnp
mov
test
pop
cbtw
add
filds
jmp
or
popf
ret
dec
push
addb
xchg
js
jb
mov
sahf
cmp
xor
hlt
fwait
adc
dec
cmpsb
xor
sbb
imul
test
scas
sub
mov
daa
and
adc
sbb
mov
shr
fiadds
pop
or
push
sub
cli
lret
jo
sbb
incb
scas
jg
scas
ds
xchg
faddp
mov
lods
insb
xor
cmp
jnp
pop
lock
jl
aam
jge
out
sarl
call
iret
mov
fisttpll
fisttps
mov
push
lret
fsubrs
je
push
dec
xlat
gs
mov
and
pop
notb
in
add
adc
dec
pop
dec
inc
sub
ss
dec
add
loopne
xchg
mov
xchg
ficoml
daa
push
inc
jns
into
adc
jo
mov
orb
repnz
bound
push
sbb
mov
fcmove
adc
pop
push
sub
bound
mov
outsb
mov
cmovns
insl
pop
or
mov
in
out
movsl
fstpt
push
std
addl
movsl
in
or
sub
mov
cmp
add
das
inc
mov
out
cmp
nop
arpl
out
xor
out
cwtl
jns
push
mov
test
les
lds
pop
outsb
mov
and
sbb
hlt
pop
jb
dec
jne
dec
loop
cmp
xor
in
pop
hlt
sub
inc
sahf
fdecstp
out
pop
push
adc
rorl
lock
mov
hlt
mov
jp
fucom
push
popa
pusha
imul
and
add
push
jbe
mov
push
movsl
pusha
push
sbbb
lds
mov
nop
dec
outsl
sub
dec
push
push
or
or
mov
add
jge
push
incb
outsb
inc
ret
into
out
stos
jp
fs
pop
inc
add
mov
adc
je
add
inc
and
sbb
push
add
lock
inc
pop
add
clc
in
test
mov
inc
and
mov
add
es
sbb
clc
adc
push
or
lahf
mov
call
mov
inc
sub
jle
inc
dec
test
push
cmp
pop
sbb
mov
rolb
int3
subb
pop
in
test
push
pop
jno
dec
add
xchg
hlt
inc
mov
mov
xor
jmp
std
and
rcrb
loope
movsl
scas
decl
dec
or
or
cmp
push
fnstsw
inc
mov
ja
aam
inc
sti
sti
stos
xchg
nop
fstl
incl
out
shrl
cli
pop
test
lahf
push
pop
push
cld
imul
out
addl
cmpsl
adc
xchg
push
push
mov
cmp
jno
lock
xor
mov
mov
or
lret
jle
mov
aam
mov
rorb
mov
or
loopne
jl
inc
sbb
inc
aam
jp
pusha
push
and
sub
jne
or
fcomps
pop
cmp
mov
cmp
pop
cwtl
adc
add
addb
loop
pop
mov
pop
test
push
xchg
push
int3
add
or
cmp
mov
enter
popa
js
popf
daa
hlt
xor
insb
sub
mov
shlb
jbe
xchg
cmp
add
ss
cs
je
adc
inc
loopne
insb
mov
dec
and
jbe
xor
fs
lret
cmpsl
insb
pushf
push
inc
shll
cmpsb
cmp
mov
ficomps
xchg
add
adc
mov
push
adc
insb
mov
adc
and
or
pop
mov
repz
int
sbb
int
xorl
cmp
mov
add
hlt
sbb
out
hlt
adc
xchg
in
stc
xchg
test
sahf
cmp
fcomip
ret
inc
and
mov
jmpw
mov
sti
out
dec
mov
in
cli
xor
xchg
pcmpeqw
enter
push
or
add
mov
cmpl
mov
cmpsl
pop
jo
push
dec
mov
pusha
std
push
mov
loop
mull
adc
pop
or
pop
out
dec
dec
rcrb
std
mov
scas
jle
sbb
push
and
mov
js
or
int
pop
rorb
push
push
inc
sbb
shrl
fcmovb
ljmp
jo
mov
mov
cmp
sbb
or
mov
call
fdivr
push
adc
test
dec
add
mov
sarb
clc
mov
jg
rolb
jl
sbb
mov
mov
sbb
icebp
cmp
or
mov
out
inc
mov
xchg
push
sbb
fwait
sbb
pop
adc
mov
pop
lcall
push
sub
sub
js
xor
lock
mov
das
xor
xor
outsl
mov
push
push
clc
xchg
pop
insl
push
stc
data16
fistl
sbb
daa
adc
pop
idivl
jae
sti
out
inc
pushf
mov
pop
pop
push
ds
aad
test
inc
push
adc
fwait
bound
mov
aas
movsb
adc
mov
cld
push
sub
inc
lods
js
mov
fdivrl
sub
inc
aaa
add
cmp
adc
mov
pop
push
ds
imul
clc
dec
dec
cwtl
testb
add
paddd
or
push
and
adc
pop
out
mov
rcll
or
pusha
sbb
add
jle
repz
mov
or
scas
insl
nop
cmpsl
push
push
or
or
mov
fwait
hlt
aaa
in
mov
dec
call
sarb
stos
mov
jne
hlt
dec
mov
jne
lock
sbbb
sti
roll
pop
ljmp
pop
push
fsubs
aas
pusha
popa
xchg
add
insb
push
insl
arpl
pop
pushf
jp
xor
adc
xor
or
sbb
push
and
push
insb
clc
scas
pop
nop
mov
rclb
ss
repnz
xchg
push
push
inc
ficomps
in
movsb
popa
mov
and
lds
lahf
outsb
cmpsb
jno
xchg
push
or
xchg
mov
pop
mov
pushf
nop
cs
ljmp
addl
sbbl
sar
shrb
ljmp
jmp
and
xchg
cmp
pusha
xchg
push
add
and
movsb
cltd
or
insl
or
out
repnz
push
fs
xchg
mov
jbe
mov
push
rcll
pusha
sub
mov
sti
pop
mov
xorl
cmp
fwait
pop
fdivl
rorb
push
jbe
sub
jmp
fs
dec
les
or
stos
push
movsl
cwtl
adc
loopne
sub
sub
mov
pop
les
adc
dec
scas
mov
loopne
mov
sbb
add
mov
aas
push
or
ficoms
push
sub
xor
adc
add
add
dec
outsb
dec
cmp
push
cmpsb
cld
daa
jge
adc
in
or
push
sub
sti
mov
add
imul
icebp
pop
ret
sub
xchg
orb
out
inc
or
mov
adc
cmpsl
sbb
mov
xchg
in
xchg
addr16
aad
insb
sarl
in
cli
out
lds
clc
inc
push
mov
push
lcall
sub
and
lock
call
aad
or
xchg
cmpsb
stos
bound
lret
jecxz
addb
push
sbb
scas
push
ljmp
sub
divl
xor
cld
ror
xor
aam
mov
mov
sbb
mov
rcr
ffree
ret
loope
insl
jg
dec
leave
das
cli
xchg
jne
mov
out
or
mov
lea
pusha
inc
dec
jo
lahf
bound
sub
fisubrs
mov
xor
cmpsl
or
adc
or
faddl
insb
ret
push
ss
pop
sbb
aaa
ljmp
push
inc
in
jmp
push
xor
test
push
xchg
xor
cmovno
and
repz
mov
int
jp
pop
or
sbb
jmp
data16
add
lret
and
cli
aas
insl
ja
push
sarb
xor
dec
shll
fisubrs
fnstsw
jbe
cmpsl
adc
jmp
jp
das
xchg
adc
xchg
push
push
sbb
loope
push
jg
jno
pop
outsb
xchg
add
insl
scas
dec
add
jbe
and
imul
int3
sub
sti
outsl
or
xor
or
inc
lcall
xor
xchg
mov
andl
mov
push
movsb
lret
sbb
mov
shll
pop
xchg
lods
es
shrb
xchg
in
loop
addr16
dec
mov
pop
mov
xchg
sarb
jmp
inc
pushf
jg
cmpsb
movsl
pop
jge
outsb
mov
mov
cmp
dec
and
jo
jmp
aad
enter
sbb
clc
sub
or
mov
mov
add
test
or
inc
aaa
insb
push
xor
outsb
mov
sar
scas
push
adc
mov
jle
stc
xchg
fdivs
mov
xchg
and
add
jecxz
daa
stos
inc
pop
cs
bnd
subl
push
jg
sbb
insb
pop
popf
add
leave
jns
push
add
testl
pop
pop
insb
pop
sbb
adc
pop
mov
fdivs
insb
jno
xchg
cmp
scas
mov
fiaddl
fildl
scas
clc
not
jl
and
dec
adc
mov
inc
out
dec
xor
loop
loop
divb
int3
jle
dec
in
dec
pushf
or
shll
cld
sub
mov
sbb
lods
frstor
test
mov
cld
xor
aas
push
test
int3
ror
pop
mov
stos
add
imulb
pop
xor
roll
push
mov
sbb
or
test
xchg
rolb
mov
push
jl
sub
mov
mov
test
clc
inc
mov
scas
sub
incb
inc
jl
mov
jl
mov
mov
mov
mov
arpl
mov
push
adc
xchg
in
lods
sbb
pop
or
cmp
jb
stos
repnz
jl
nop
shlb
cld
pop
dec
dec
fstpt
nop
sbb
sbb
push
sbb
lock
add
xchg
xchg
jp
xor
jo
mov
and
xor
imul
add
out
mov
pop
sbb
push
leave
or
arpl
mov
imul
push
pop
mov
clc
incl
lds
aad
stc
inc
mov
xchg
pushf
dec
in
xchg
mov
and
les
push
pop
jp
add
jne
pop
pop
add
js
cvtps2pd
push
sub
scas
mov
js
mov
dec
xchg
and
addl
jle
enter
fwait
rcr
mov
cltd
test
and
adc
shrl
ficoms
add
add
sbb
in
ljmp
je
ljmp
push
jecxz
xchg
push
inc
pop
xchg
adc
pop
fs
xchg
xchg
sub
dec
bound
lret
scas
loopne
jmp
test
dec
loopne
dec
decb
xchg
dec
push
jge
ret
dec
mov
cli
xchg
mov
and
jo
add
fcmovnb
scas
aam
push
adc
ret
dec
fisubs
push
lock
and
insb
push
dec
mov
orl
dec
shr
js
cmp
js
sub
inc
mov
adc
add
stc
lahf
fadds
sub
xor
or
xchg
leave
and
dec
sbb
scas
js
pop
and
sbb
inc
cltd
sub
fs
subl
fdivr
inc
pop
cwtl
xor
aas
iret
cmp
repnz
pop
sar
pop
pop
out
scas
pop
pop
push
pusha
imul
enter
mov
push
ja
adc
jns
roll
add
mov
fwait
xor
ret
dec
or
outsl
mov
lcall
or
adc
xchg
jnp
dec
mov
jo
inc
pop
decl
sub
push
shlb
xor
cs
loopne
out
movsl
adc
inc
orb
or
push
sbb
outsb
clc
mov
dec
and
sahf
or
xlat
es
adc
xor
rorl
sub
and
mov
xor
aas
mov
test
fisttps
jl
adc
and
dec
add
je,pn
mov
sbb
fsub
sbb
shrb
mov
jp,pn
or
pop
dec
mov
pop
inc
insb
cwtl
mov
or
shrb
ret
stos
dec
sbb
inc
push
shlb
loopne
int
ficompl
add
push
aas
add
test
int3
fs
or
jecxz
sbb
push
push
stos
pop
push
lock
add
pop
and
xchg
add
adc
sbb
mov
ret
stos
imul
das
call
sub
or
push
dec
sub
filds
or
test
adcb
or
fimull
out
xchg
lock
jne
xchg
pop
loopne
dec
mov
test
out
aad
shl
mov
cmp
add
mov
push
lcall
inc
mov
mov
loope
dec
push
cmp
sbb
mov
pop
rclb
xchg
test
or
xchg
xor
int3
into
push
cmp
orl
es
add
mov
pop
decl
idivb
ljmp
xorb
cmp
jmp
lock
xchg
or
jecxz
mov
mov
pop
imul
orl
mov
cmp
mov
insl
push
push
dec
insb
mov
lahf
mov
stos
or
dec
rorl
add
cltd
hlt
push
or
stos
lea
sub
jle
mov
test
aas
jb
push
add
xchg
jns
mov
add
mov
stos
or
mov
cltd
xor
cmp
pop
test
xor
cmpsl
pop
das
lret
in
fisubl
add
pop
add
jb
cld
mov
outsb
insl
mov
addr16
pusha
pop
dec
movsb
jp
jnp
mov
notb
jne
push
aad
mov
sbb
push
push
inc
cld
xchg
jno
mov
add
mov
push
push
mov
lret
arpl
aas
mov
scas
sbb
pop
mov
adc
dec
sbb
ljmp
fadds
jb
lcall
sbb
add
sbb
cmp
sub
xor
in
cld
sbb
jle
lcall
mov
nop
push
in
decl
dec
arpl
xchg
mov
movzwl
inc
push
push
jo
jno
push
insb
pop
test
mov
decb
movsl
cld
bound
mov
mov
xchg
push
mov
aas
mov
loop
daa
add
push
out
or
bound
loopne
and
enter
cmp
fs
fsts
xchg
inc
jp
xlat
fcom
pusha
in
and
nop
enter
or
xor
mov
test
inc
cmp
add
loopne
pop
fnstsw
scas
mov
imul
sbb
push
es
insb
mov
or
fidivrl
xchg
lahf
notb
outsl
fcomip
stos
jne
add
popf
push
testl
mov
aam
xor
dec
mov
incl
push
in
ds
ss
push
inc
jecxz
test
xchg
jbe
mov
cwtl
popa
adc
adc
insb
adc
test
aam
inc
aas
scas
ds
sarl
movsb
sahf
and
lea
js
cmp
add
adc
icebp
das
aam
and
sbb
sbb
inc
jns
in
cmc
test
xchg
add
cmc
push
or
mov
push
loopne
fstpl
push
adc
pop
add
or
es
mov
mov
divl
movl
and
cs
add
incb
cmpsl
adc
pop
nop
mov
mov
push
lock
sbbl
pop
or
inc
add
xor
mov
dec
push
sar
fbstp
mov
testl
in
adc
push
lcall
pusha
mov
orb
cmc
or
mov
xor
js
repnz
hlt
inc
ret
orl
mov
cmpsb
dec
lds
ss
and
jg
or
pop
js
add
ss
sub
hlt
aad
jmp
shlb
aad
lret
pushf
jge
lea
push
xchg
mov
std
js
pop
stc
and
pop
inc
test
add
movsb
lock
sub
xchg
aam
fstpl
popl
and
cli
sbb
mov
sub
addl
push
into
in
fdecstp
dec
call
popa
push
push
int
xor
hlt
mov
inc
pop
out
push
or
mov
lea
stc
inc
cmp
ljmp
lock
mov
test
jb
stos
mov
movsb
sub
mov
and
sub
pop
pop
inc
or
into
repnz
mov
inc
jmp
add
sahf
xor
cmp
adc
daa
mov
ja
jecxz
push
adc
jmp
out
and
add
add
lods
add
sahf
dec
js
mov
rolb
test
les
dec
and
cmp
mov
loop
shl
pop
inc
scas
add
test
mov
mov
andb
outsl
movsb
js
ss
stos
add
loope
nop
aad
mov
dec
sub
push
pop
mov
imul
hlt
cmp
in
mov
mov
ljmp
push
cmpsb
out
xchg
pop
push
sti
stos
ss
jo
cli
and
sbb
cmpsb
xchg
xchg
decl
fstpl
pushf
adc
jbe,pt
and
dec
pop
xchg
cli
aas
add
add
push
or
fld1
add
dec
lods
jle
pop
pop
scas
and
fwait
cmp
leave
and
daa
push
movsb
decb
ja
cwtl
movsb
mov
int
sar
mov
mov
inc
shll
adc
data16
push
sub
pushf
jae
and
sbb
hlt
or
push
inc
mov
inc
cwtl
es
and
mov
mov
add
call
call
and
push
mov
inc
jbe
sub
cli
mov
pop
dec
das
jl
xchg
decb
in
sbb
lods
jecxz
clc
cmc
jle
stos
dec
add
push
mov
call
addb
mov
pusha
jns
adc
shr
nop
jae
jp
fs
pop
es
push
movsb
add
dec
and
lods
and
into
int
aad
clc
fcmovb
and
ret
jnp
popl
nop
pop
xchg
add
pop
jno
jp
mov
push
test
inc
mov
dec
loop
inc
adc
mov
push
mov
pop
and
sbb
into
nop
std
jne
and
adc
clc
pop
stos
loope
sahf
fsubr
fcomps
lods
call
loopne
out
fcoms
ss
cmp
push
loopne
mov
clc
rclb
je
movsb
iret
and
mov
rolb
fistl
inc
ret
jne
hlt
xchg
int
jp
dec
pop
dec
mov
push
cmpsl
or
push
jb
pop
xor
pushl
jecxz
or
nop
or
lret
mov
lahf
pop
lcall
cmpsb
test
xchg
mov
xchg
inc
or
ss
lods
adc
subb
pop
pushf
fstpt
cltd
in
mov
fadds
icebp
repnz
mov
lcall
cli
push
xor
cmp
xchg
xchg
subb
enter
movb
mov
js
mov
cld
ljmp
fsubp
mov
or
xor
es
pusha
push
stos
add
loopne
xchg
cmp
or
cwtl
sbb
test
xor
mov
dec
aam
pusha
sti
xor
sub
sahf
jmp
inc
lahf
fdiv
mov
push
mov
add
pop
cld
mov
push
lcall
inc
pop
enter
or
popf
jmp
pop
ds
test
shlb
rcr
and
negl
cmpsl
mov
inc
imul
push
dec
mov
mov
pop
lret
dec
add
out
lock
mov
std
mov
sbb
mov
push
filds
sub
dec
jbe
sbb
cs
mov
dec
mov
rcr
test
mov
xchg
out
lahf
cmp
scas
fmul
or
nop
push
cmp
faddl
push
add
mov
clc
dec
sbb
xchg
testb
ret
pop
xor
or
jmp
xchg
sti
dec
push
enter
pushf
sbb
cld
add
je
inc
dec
icebp
fisubrs
fisttpl
pop
test
add
sbb
xor
xlat
mov
lret
and
jo
lods
mov
stos
sub
dec
scas
xchg
fiaddl
fwait
mov
ficomps
in
jbe
inc
sbb
clc
pop
pop
sbb
push
stos
test
lret
jg
xchg
cld
fnstenv
sub
push
shrb
jmp
in
mov
add
stos
xchg
scas
aaa
bound
fcomps
jle
dec
pusha
outsb
push
adc
lcall
pop
fsubrs
mov
movsb
roll
andl
ljmp
out
into
push
shrl
push
cld
or
std
ret
addb
push
mov
xlat
mov
loop
rcrb
cltd
inc
inc
dec
rorb
mov
pop
mov
or
nop
push
mov
mov
push
fdivr
mov
push
or
shlb
xor
adc
test
and
cs
add
or
adc
sbb
icebp
ja
dec
and
push
popf
and
scas
jo
sbbl
cmc
push
lock
xlat
sub
push
out
and
fwait
shrl
rolb
mov
jnp
clc
out
stos
into
lds
call
nop
dec
cmpsb
push
into
adc
repnz
lret
das
cmpsw
loope
and
ss
push
push
sbb
sbb
dec
pop
in
ds
cmp
or
push
shr
sbb
fs
sub
sti
cs
das
and
and
xchg
mov
xchg
push
push
jecxz
xchg
inc
jle
cmp
xchg
fcomps
pop
push
sub
loopne
mov
or
add
push
sub
and
in
cmp
sbbb
mov
insl
xor
lock
and
xor
dec
sbb
xchg
outsb
mov
adc
aam
lds
bound
xchg
sub
rcl
sbbb
mov
adc
push
add
ss
adc
jb
pushf
mov
inc
dec
ret
dec
std
dec
dec
jmp
stc
sub
cmp
subb
jg
nop
mov
sbb
ljmp
push
inc
pusha
sbb
imul
mov
cli
jbe
mulb
test
mov
inc
adc
inc
sbb
push
inc
out
adc
andl
dec
data16
xchg
scas
pop
pop
ss
das
dec
clc
mov
adc
int
push
inc
cmc
add
pop
xchg
js
fcoml
adc
inc
or
adc
push
ret
dec
aam
mov
adc
fsubrs
frstpm(287
adc
mov
test
hlt
pushf
orb
into
and
xchg
outsb
cmp
sbb
addb
sbb
das
add
mov
les
movl
jmp
lea
xor
pop
iret
out
cmp
pop
rcrl
pop
jecxz
jb
and
lcall
cld
aaa
push
addr16
jns
xchg
and
adc
pushf
fwait
jbe
gs
rorb
or
dec
fsubrl
xchg
and
lcall
xor
adc
js
push
add
icebp
jp
and
sbb
adc
sub
sub
push
push
insb
jg
sbb
push
cmp
sti
je
sbb
rorl
add
je
cmpsb
call
sbbb
mov
aaa
and
stos
or
dec
mov
insl
test
or
in
and
jp
cmovnp
sbb
mov
adc
sbb
adc
xor
movsb
paddb
fwait
shr
lret
cmpsl
sub
mov
test
push
cmp
lock
out
add
xchg
mov
cli
imul
push
dec
xor
inc
push
xor
call
push
fcmove
lret
dec
scas
inc
mov
adc
pop
mov
lret
imul
insb
repz
mov
ss
adc
inc
js,pt
mov
pop
or
test
idivb
repz
out
fsubrs
lretw
xchg
inc
cmpb
ret
movb
mov
or
orb
fs
sti
out
std
inc
xor
hlt
push
sbb
int
sub
jno
aaa
jl
bound
xor
mov
outsb
add
pop
push
lds
mov
test
fstp
movsb
or
pop
push
or
into
or
gs
jbe
xchg
push
push
push
mov
push
mov
or
aam
or
roll
or
arpl
bound
inc
cmp
movsl
inc
lds
out
movl
push
stos
xchg
test
ss
cmc
add
sbb
push
stc
mov
in
mov
ds
popf
je
or
daa
mov
nop
sbb
mov
outsl
cmc
xchg
outsb
sub
xlat
loopne
xchg
xchg
add
xchg
das
xlat
add
loope
mov
inc
das
xchg
inc
cltd
inc
jl
cmp
sbb
rcll
sub
push
adc
sub
pop
in
arpl
mov
shr
jno
ss
xchg
jne
outsl
add
inc
fisttpll
push
in
ja
push
test
jl
xchg
fdivrs
daa
ljmp
icebp
inc
or
roll
cwtl
xor
ljmp
sbb
icebp
adc
dec
arpl
inc
aas
out
cld
cmpsb
jno
pop
clc
in
mov
pop
dec
imull
jb
xchg
inc
addr16
orl
adc
xor
jl
or
mov
lcall
inc
fs
mov
or
jne
sbb
incb
sub
scas
mov
pop
mov
cld
sbb
lret
pop
fisttps
xchg
hlt
mull
jns
adc
insl
pop
orb
or
bnd
add
cmpsb
in
or
popf
add
fdiv
fisubrl
cmp
mov
add
ftst
icebp
mov
or
dec
xor
stos
andl
push
es
or
mov
jle
lcall
dec
mov
cli
dec
mov
icebp
add
shll
pop
xchg
inc
sub
push
lock
and
aad
push
or
xchg
mov
and
lds
or
pop
mov
and
push
out
jbe
jecxz
mov
xor
mov
add
loopne
adc
inc
pop
lret
jno
or
loopne
pop
sub
add
shlb
push
mov
push
lcall
mov
inc
std
rorb
scas
push
hlt
add
pop
jnp
adc
sbbb
cmpsb
cmp
test
push
push
add
pop
mov
pop
sub
sbbb
loop
testb
push
lods
sbb
adc
stos
push
sbb
jg
dec
fimull
xchg
cmp
push
xchg
mov
cli
cmp
ljmp
cmpsb
clc
mov
adc
std
xor
mov
mov
sub
xor
add
mov
adcl
test
fst
clc
clc
inc
pusha
sub
fisubrl
lods
push
jmp
pop
dec
call
adc
push
enter
sbb
sbb
push
pusha
decl
mov
cmc
dec
cmp
xor
ja
outsb
dec
sub
push
idivb
bound
addr16
xlat
sbb
mov
jg
rorb
adc
push
add
outsb
fisubl
scas
movsb
sbb
jbe
cmp
in
decl
mov
add
mov
adc
cmp
cmp
pusha
call
jnp
repnz
inc
test
jle
iret
adc
ljmp
ret
out
shll
sbb
push
mov
sub
push
jmp
cmp
imul
push
push
fbld
push
enter
pop
orb
dec
push
stos
mov
sbb
subb
dec
sub
and
lods
incb
fdivrs
cs
fsubs
inc
adc
incl
dec
push
pop
insl
mov
add
inc
arpl
jl
adc
out
push
lcall
outsl
andb
and
jge
adc
in
test
test
adc
cmpsl
jne
movsb
xor
jg
sar
add
fcmovu
test
sub
jge
mov
insb
xor
adc
mov
dec
clc
fwait
adc
mov
repz
ret
inc
cltd
mov
imul
or
fisttpl
jmp
sahf
xchg
sub
clc
adc
or
mov
cwtl
push
mov
sahf
ret
mov
mov
add
outsl
es
repnz
ret
js
sbbb
pop
lret
insb
cmp
js,pt
sbb
push
jo
lahf
push
pop
fadds
cmp
dec
adcb
hlt
or
mov
sbb
orb
incl
jp
adc
adc
sub
fwait
loope
push
cs
push
cmc
sub
cmp
push
test
in
pop
push
sub
mov
dec
push
icebp
push
test
int3
fcom
lods
or
mov
push
les
xchg
outsb
lock
inc
add
inc
in
inc
push
jo
cmp
sbb
test
pop
inc
mov
xchg
lcall
sub
and
test
icebp
loopne
pop
add
pop
pop
aaa
test
jmp
scas
iret
pop
inc
sub
mov
aam
add
inc
test
stos
push
mov
shlb
loopne
fsubrp
outsl
ficompl
sbb
push
sbb
subb
sub
dec
enter
shrb
insb
xor
cmc
jmp
stos
cvttps2pi
cmp
jp
inc
mov
gs
clc
test
ss
fisttps
jecxz
daa
outsl
add
fdiv
pop
mov
mov
inc
sub
and
jg
sub
mov
std
les
pop
popa
fdivr
adc
mov
pop
push
and
jp
stos
xchg
add
filds
pushf
in
stos
test
adc
shrb
mov
mov
inc
and
pop
mov
or
sbb
adc
rcr
addr16
mov
hlt
xor
lahf
jne
jle
out
mov
mov
inc
sti
mov
pop
xchg
push
jbe
mov
dec
cld
es
ja
scas
lret
cwtl
jg
jl
inc
jmp
cmc
add
dec
jmp
inc
fsubr
dec
mov
and
clc
repnz
mov
dec
jg
mov
lock
clc
iret
xchg
cmp
pop
out
mov
sarb
and
mov
mov
lea
push
mov
faddl
mov
cmp
sub
out
push
dec
mov
adc
dec
add
test
cmp
ss
aas
push
ret
cmp
andb
adc
pushf
push
pop
sub
cli
rcrl
cli
inc
scas
adc
adc
scas
and
je
xor
leave
test
sbbl
xor
and
add
pusha
cli
data16
dec
test
xchg
pop
push
aaa
imul
inc
or
sarl
inc
jmp
sbb
sbb
mov
call
fadds
sbb
mov
cmc
sbb
in
loopne
icebp
sub
nop
push
sub
mov
pop
data16
popa
subb
add
addb
push
xchg
ja
pop
pop
jmp
adc
lock
dec
sbb
xchg
shlb
or
adc
sti
rcr
testb
nop
iret
or
ljmp
out
add
mov
aam
out
je
mov
pop
xor
adc
clc
dec
jmp
in
add
pop
cmp
aaa
mov
or
call
jbe
dec
rcr
dec
stos
lods
push
pop
out
sub
fwait
inc
nop
xchg
sub
enter
mov
ror
test
jns
es
out
icebp
test
aad
lcall
and
scas
aas
xor
and
inc
stos
push
movsb
aam
xor
push
inc
jmp
js
repz
pop
add
sub
dec
xor
mov
imul
inc
loop
dec
in
cli
push
out
lahf
jo
jg
pop
and
or
ds
mov
adc
push
scas
clc
outsl
fists
loopne
cmp
pop
das
jns
daa
out
bound
push
or
jmp
jg
aad
mov
mov
push
stos
or
push
fsubrl
add
sbb
pop
adcl
push
or
jp
mov
inc
js
lds
push
fnsave
add
cmp
popf
icebp
or
and
jge
test
mov
jnp
rcrl
fcompl
inc
pop
adcl
lock
sbb
xor
jle
sahf
sbb
add
loopne
or
ret
enter
cmc
xchg
jecxz
pusha
cmp
fisubs
adc
adc
addl
dec
std
pop
inc
dec
mov
push
fwait
inc
sub
mov
fcmovb
adc
xor
lret
fcmovnu
lock
js
in
outsb
add
ds
test
push
inc
add
icebp
mov
andb
fisttpl
mov
jmp
add
push
mov
loop
push
pop
push
inc
xorb
test
pop
jo
jnp
xchg
clc
jg
cwtl
and
add
mov
rcr
add
sbb
jno
cmpsl
mov
inc
push
or
xchg
mov
dec
and
nop
ret
sub
sahf
es
or
stc
pop
push
loopne
mov
pop
xlat
adc
es
jg
cli
jns
popf
psllw
cli
add
pusha
xchg
adc
ljmp
push
es
hlt
inc
aaa
into
stc
xor
pop
cmp
sub
ret
push
pop
mov
in
clc
addl
add
dec
lock
xlat
mov
or
lods
xchg
jmp
cmc
pop
dec
xorl
fildl
add
jle
cltd
outsb
cmpsb
sahf
sub
cli
or
pop
out
mov
mov
mov
ret
mov
lods
stos
jo
mov
mov
jge
push
int
push
pop
add
sub
call
add
add
call
clc
lret
mov
in
adc
jle
push
or
sub
mov
lds
jecxz
add
mov
cmp
popa
add
shrb
sub
push
bound
adc
sbb
cmpl
scas
fldt
jmp
andl
adc
or
sbb
loope
push
and
pop
mov
adc
gs
int
cmpsb
mov
add
pop
cs
or
jge
popa
loop
incl
or
push
mov
push
pusha
aam
jne
xlat
cmp
adc
sbb
icebp
adc
fwait
test
loopne
stos
dec
ss
and
inc
push
in
stos
sub
lret
cwtl
mov
cmp
jae
stc
xor
test
ljmp
hlt
es
into
rolb
inc
loopne
xor
clc
scas
dec
fsubs
int
sub
sti
pop
adc
dec
pop
call
das
rclb
pushf
mov
sub
mov
ljmp
mov
imul
pop
jg
mov
std
outsl
mov
ss
stos
mov
cwtl
mov
push
mov
cld
push
inc
inc
xor
ret
jmp
inc
inc
xchg
addr16
test
xor
clc
fildl
add
cmp
pop
scas
push
js
mov
mov
cmpb
add
aad
mov
pop
rol
inc
cwtl
fsub
sbb
push
mov
out
testb
movb
inc
inc
jnp
push
pop
push
sub
mov
nop
push
cmpb
mov
shl
rcl
es
sti
stos
mov
outsb
or
and
or
sbb
pop
enter
addr16
les
and
repz
pushl
imul
sar
mov
js
xchg
mov
arpl
xor
mov
dec
xchg
shlb
jge
xor
mov
movsl
push
add
cltd
js
cmp
push
mov
lret
jecxz
push
sub
or
pusha
call
pusha
sub
flds
cmp
or
jge
or
or
xchg
and
and
repnz
cs
xchg
mov
aaa
loopne
jno
fwait
popf
mov
mov
fstpt
imul
fwait
jg
adc
adcb
xchg
adc
add
dec
sub
pop
arpl
jle
aam
jmp
jge
lods
inc
lock
add
cli
movsl
sbb
push
pop
call
or
jbe
in
les
jp
lods
mov
repnz
sbb
lds
stc
add
pop
pop
rcr
add
or
mov
xor
shlb
pop
xchg
fwait
shr
cli
pop
icebp
testl
pop
add
cmp
dec
push
mov
xor
into
mov
js
test
outsb
add
xor
xchg
pusha
lcall
lock
sub
mov
mov
jo
and
repnz
es
roll
add
pusha
xchg
mov
pop
je
and
in
dec
mov
jmp
enter
inc
cmp
ja
outsl
ficoml
bound
sti
cli
into
jnp
das
fdivrl
pop
shrb
xor
std
xor
shll
pop
test
xor
pop
add
ja
mov
shlb
sub
and
sbb
test
mov
jmp
shrl
cwtl
movsb
test
jge
ds
cmp
add
sub
sub
fisttpll
mov
or
sbb
sbb
rorl
mov
mov
icebp
jae
fbld
and
decb
movsl
inc
fmuls
lcall
push
ds
adc
inc
xor
testb
jle
out
sub
pop
ret
rorl
mov
dec
jg
xchg
adc
sbb
sub
xchg
sub
pop
nop
sub
pop
pop
mov
mov
scas
mov
add
xchg
or
out
rclb
xor
sbb
mov
add
loop
call
sub
push
repnz
jb
adc
outsl
mov
inc
rcrl
mov
aad
mov
jp
shlb
pop
sbb
jne
in
jmp
loope
in
fs
pop
bound
mov
jl
adc
mov
movsb
fildll
sub
hlt
in
testl
loop
push
ss
out
add
pop
push
mov
imul
xchg
xchg
inc
cmpl
xor
aas
push
push
in
ss
mov
fadds
sbb
push
sub
je
cmc
xchg
fsubl
cmp
and
add
or
test
mov
sub
mov
adc
cmp
or
into
iret
loopne
mov
add
fcmovb
add
cli
cmpsb
lods
aam
mov
aam
jmp
ljmp
in
sbb
xchg
dec
popf
adc
push
push
jmp
xchg
lods
cmp
dec
jmp
ljmp
fwait
jge
sub
jp
push
loope
push
adc
push
decl
shrl
jg
xor
ret
negl
out
sbb
mov
jne
xchg
sarb
push
xchg
loopne
pop
add
rclb
adcb
or
je
xor
mov
shr
inc
jle
imul
fcompl
testb
jp
shrl
aam
movsb
mov
xchg
aas
cmpsb
add
test
sbb
mov
xchg
dec
and
mov
pop
ret
mov
sarl
mov
pop
add
mov
roll
jmp
rol
icebp
xlat
mov
leave
pop
adc
lret
roll
call
inc
mov
inc
push
sbb
dec
sahf
pop
pop
clc
lahf
mov
mov
sarb
xchg
pop
push
loope
mov
pop
sbb
mov
xor
inc
dec
insb
xor
pop
std
lret
and
aas
inc
adc
dec
add
lea
mov
mov
mov
stos
stos
call
add
xor
push
mov
cmp
xor
jmp
fadd
push
inc
outsb
add
inc
inc
push
lcall
push
fwait
in
aas
mov
or
test
scas
dec
pop
cmpsb
cmc
push
sbb
push
out
mov
sub
pop
shll
mov
mov
mov
div
leave
mov
fildl
sub
loopne
pop
mov
test
jle
into
push
push
sti
std
adc
jmp
mov
adc
sahf
fildl
scas
sbb
and
add
fnstsw
sbb
bound
adcl
or
sbb
incl
pop
pop
es
and
pop
shr
rorb
icebp
sub
mov
cs
out
rclb
adc
lds
loope
and
hlt
pop
in
mov
es
xchg
sbb
aad
sbb
adc
inc
cmpsb
jp
lods
call
inc
mov
add
test
pop
shr
pusha
aaa
popf
mov
add
pop
aad
movl
shlb
stos
std
clc
dec
adc
push
insl
xchg
mov
js
or
xchg
jecxz
test
mov
cs
push
inc
jp
push
push
adc
mov
std
mov
sbb
jl
xchg
mov
pop
jne
rol
pusha
push
sub
dec
mov
inc
fnstsw
xchg
inc
fstpt
push
xorl
lock
popf
pop
stos
or
mov
adc
sti
bound
mov
sub
mov
hlt
pop
dec
cmc
aas
test
mov
std
jnp
mov
sbb
subl
sahf
mov
mov
mov
and
lods
push
dec
push
xor
mov
clc
inc
loopne
pusha
or
add
push
adc
popf
dec
add
and
or
pushf
add
mov
jno
ror
ret
push
xor
movsw
and
inc
hlt
mov
adc
pop
out
sub
add
push
adc
lock
inc
cmp
jp
stos
cmp
jle
push
ret
dec
xchg
pop
dec
ljmp
sub
inc
int3
sti
pmulhw
imul
fcompl
test
aaa
pushf
add
adc
orl
pushf
mov
xor
inc
lret
add
mov
dec
inc
push
cmp
inc
std
push
aam
mov
and
xor
cld
incl
mov
icebp
test
ljmp
push
orl
cli
mulb
icebp
scas
adc
cmc
enter
stos
pop
mov
push
outsl
jmp
push
gs
xor
test
pop
xor
mov
add
outsb
js
fisttps
stos
xor
mov
inc
and
cmpb
dec
in
push
xchg
out
jne
and
pusha
test
shrl
hlt
jg
sbb
adc
or
sbb
cmp
fiadds
sub
stos
xchg
mov
mov
xor
rclb
loopne
std
into
push
xchg
cmp
mov
in
jmp
aaa
mov
test
push
add
out
imul
or
push
scas
or
mov
es
lcall
je
jp
cltd
mov
jmp
es
mov
test
test
sub
repnz
cmp
xor
je
insb
sbb
les
pop
add
add
stos
addb
and
pop
sti
cld
jmp
mulb
adc
push
mov
test
xchg
fstps
xor
int3
aam
inc
dec
cmpsb
sbb
mov
call
je
fsts
fstps
add
lret
jmp
mov
add
inc
mov
rcl
add
jle
or
inc
lea
enter
sbb
inc
mov
popl
out
cmp
clc
xchg
arpl
inc
pop
sbb
adc
inc
data16
jo
dec
jg
je
push
pop
fldt
fisubl
dec
mov
or
xlat
xchg
push
push
push
fldt
ret
enter
in
ss
mov
fisttps
cmp
sub
push
test
or
aam
add
xchg
dec
push
mov
lods
pusha
and
pusha
pop
cwtl
inc
mov
adc
sub
sub
mov
lock
push
fdivr
jbe
addl
xorb
add
sar
cmp
xchg
fcoms
pushf
aam
dec
pushf
sub
cmp
cli
icebp
aas
int3
sbb
inc
inc
mov
faddp
mov
sub
lods
ljmp
rcrb
sbb
cltd
adc
sub
cs
sub
add
xchg
fadds
test
ss
sarb
std
idivb
mov
ret
inc
inc
cmp
rcrb
adc
sbb
dec
test
inc
mov
outsl
clc
inc
adc
xor
mov
adc
adc
das
in
xchg
lock
addb
mov
int
mov
pop
aad
shlb
add
jae
dec
mov
rorb
scas
lahf
sbb
jle
xor
dec
mov
decb
push
mov
into
dec
push
jnp
xchg
inc
int3
xchg
adc
fisttpl
push
mov
inc
sti
jmp
push
dec
cmp
leave
es
mov
mov
orb
inc
mov
inc
add
push
push
lea
push
out
sbb
adc
cli
mov
inc
mov
push
popa
xchg
or
bound
hlt
mov
pop
and
notb
icebp
ficomps
mov
cmp
rorb
imul
cmpl
pushf
mov
mov
add
les
shl
sti
loop
test
dec
jl
jl
fbld
popf
xchg
ss
mov
shll
inc
out
or
lock
jle
pop
dec
and
mov
ret
mov
and
jl
incl
xchg
fstpt
pop
shlb
arpl
stc
std
and
lods
push
int3
inc
or
cmp
xorb
sbb
cli
aad
xchg
cmp
xor
fisubrs
push
popa
jnp
adcl
fs
jnp
xchg
jne
xorb
in
xor
sub
stos
cs
dec
hlt
sub
clc
das
cld
mov
jmp
mov
xor
sbb
pop
std
sbb
adc
sbb
das
mov
loope
cmpl
clc
or
ljmp
test
mov
push
pop
pop
int3
sbb
pop
mov
push
pop
or
pop
or
push
les
sub
ljmp
dec
and
aas
test
data16
test
push
push
fwait
add
sbb
xchg
or
inc
pop
shr
inc
inc
popa
jg
orb
add
dec
jmp
sbb
loop
add
push
push
loope
xor
dec
jns
fdivl
inc
scas
test
mov
add
adc
mov
pop
in
mov
subb
fabs
lcall
jmp
sarb
push
or
out
inc
pop
test
inc
push
pop
int3
movsb
xchg
imul
push
arpl
and
mov
xor
loopne
mov
inc
add
and
das
or
jge
jno
push
test
pop
sub
mov
es
mov
pusha
lret
test
jmp
sbb
dec
fistl
jmp
xchg
xchg
push
push
adc
push
jg
push
xchg
outsl
dec
xlat
movsb
out
sub
push
test
pop
lock
sub
enter
pop
mul
or
das
dec
std
sahf
je
mov
std
inc
and
insl
xchg
mov
xchg
inc
int3
xor
pushl
pop
adc
sub
fwait
test
inc
add
jno
stc
cmp
sbb
icebp
mov
dec
inc
mov
inc
jo
popa
jge
out
nop
mov
imul
cld
into
shrb
mov
jle
cmpsb
ljmp
shrb
cmp
les
jg
outsb
mov
jecxz
push
ret
mov
inc
and
fcomps
inc
push
mov
int3
mov
fidivrs
aaa
sub
push
jge
and
aad
or
sub
aam
pop
add
mov
and
rol
add
cmpsb
xor
inc
clc
fldl
inc
push
je
adc
orb
xchg
nop
aam
mov
aas
mov
test
jle
pop
adc
xchg
adc
nop
movsb
mov
clc
shlb
pop
add
dec
pop
call
sti
and
push
test
sbb
rorl
outsl
inc
jecxz
sub
jecxz
adc
test
ficoms
add
add
and
jmp
pop
lock
xchg
push
mov
xchg
lods
ficoms
clc
je
mov
dec
mov
cmp
xor
faddl
sub
insb
or
cmp
aad
mov
jb
mov
hlt
ret
adc
inc
ja
mov
push
mov
push
roll
lods
sub
mov
mov
rol
xchg
and
roll
jb
cmp
negb
jb
push
adc
loopne
push
xchg
pop
cmpsl
jp,pn
testl
add
and
adc
sti
add
push
and
js
pop
scas
ds
pop
adc
or
push
mov
inc
adc
and
sbbb
mov
mov
inc
add
add
ret
pop
shrb
push
adc
shr
movsb
enter
std
stos
int3
fs
push
mov
jne
inc
add
push
push
or
push
jp
test
adc
jg
ljmp
jo
sti
and
cli
les
mov
jb
cltd
push
mov
inc
pop
das
push
pusha
adc
xchg
cmc
push
mov
sub
or
mov
xchg
mov
mov
jns
fistpl
cmp
testb
rcrb
fdivs
pop
int3
sbb
dec
mov
pusha
jle
adc
imul
std
repz
or
aad
mov
scas
rclb
scas
test
mov
sbb
mov
jo
inc
call
xor
lock
je
decb
pop
add
pop
in
dec
pop
cmp
test
xor
cmpsl
test
add
outsl
xlat
scas
cmpsb
fs
jb
adc
ja
inc
daa
aam
push
adc
inc
mov
mov
push
ljmp
aaa
mov
cmpsl
stos
lods
inc
push
jb
jl
add
fildll
jbe
jecxz
sbb
and
aaa
sbb
mov
sub
adc
jbe
and
dec
jl
mov
pop
jno
daa
mov
ss
enter
inc
das
sbb
push
cmp
cwtl
inc
pop
adc
xor
mov
sbb
dec
cwtl
adcb
call
lea
sbb
mov
loopne
mov
test
cmpsl
cwtl
pop
aad
mov
pop
pusha
aam
or
scas
push
js
scas
insb
or
mov
push
pop
pusha
xchg
outsl
jo
push
out
xor
sbbl
pop
adc
push
je
hlt
sti
cmpsb
push
or
mov
push
decb
in
notb
imul
push
scas
cmpsb
out
xor
loop
arpl
cmpsb
jl
aad
outsb
rolb
adc
sub
adc
fmull
test
outsl
imul
pop
es
fimull
cmp
aas
nop
dec
sarl
pop
inc
sub
mov
mov
cmpl
adc
sbb
in
test
ljmp
std
fisubs
push
mov
pop
fistl
dec
ret
fildl
ret
les
mov
out
mov
fisttps
or
sbb
mov
rcl
and
loop
xchg
jecxz
mov
test
jp
aaa
sbb
adc
pop
dec
das
and
adcb
or
xor
mov
repz
push
mov
sub
pop
je
push
shrl
adc
inc
mov
xchg
push
shr
inc
mov
test
filds
sub
mov
sub
dec
cmpsb
cmp
mov
aas
ja
movl
leave
add
mov
sub
inc
adc
hlt
lods
pop
mov
xor
mov
mov
sub
pusha
aaa
cmpl
xor
add
jmp
mov
call
or
clc
add
mulb
jl
fucomp
jmp
xchg
lods
push
testb
sahf
ret
rclb
and
or
add
cld
add
inc
cmp
pushf
push
aaa
and
andb
push
push
mov
in
pop
mov
lock
sbb
inc
pop
sbb
pop
mov
jmp
dec
adc
jno
dec
push
mov
and
mov
data16
sub
dec
loope
jnp
xchg
xor
scas
push
icebp
push
clc
aad
lods
push
xchg
dec
inc
jmp
xchg
jno
add
xor
cmp
mov
les
add
mov
mov
adc
push
adc
test
adc
pusha
lods
mov
pusha
jo
test
in
out
sar
js
jp
imulb
adc
clts
jo
mov
sub
mov
les
push
sub
mov
add
push
push
mov
lcall
in
fildl
adc
sbb
ja
xor
xor
and
fistl
dec
dec
mov
add
cli
add
repnz
inc
adcb
push
adc
sbb
dec
iret
cli
or
fdivrp
adc
adc
insl
push
imul
decb
sub
add
adc
je
sub
clc
into
mov
mov
push
rorl
mov
jno
lods
adc
sub
xor
aas
dec
call
or
fcompl
pop
incl
mov
test
mov
loop
cwtl
sbb
insb
mov
ja
xchg
je
push
mov
popa
clc
add
or
scas
out
or
push
add
in
outsl
fists
mov
test
push
arpl
test
fs
fs
cld
mov
scas
sub
pop
inc
dec
jb
jo
dec
and
jle
clc
fwait
push
pop
fs
fistpll
sbb
je
out
jmp
data16
xchg
inc
dec
xor
pop
push
pop
aaa
mov
test
adc
push
jnp
rolb
and
movsl
pop
fiadds
mov
mov
mov
xlat
cmp
aas
inc
pop
movsb
rorb
pop
cmp
inc
mov
pop
cld
js
clc
mov
sub
testb
jle
pop
sub
or
push
dec
add
xchg
stos
inc
jp
scas
popf
push
sub
clc
movsl
pop
xorl
adc
add
fsubs
mov
adc
ja
xor
mov
int3
test
jge
jl
sbb
loop
out
les
ljmp
mov
or
mov
mov
mov
add
jbe
xchg
notl
cltd
and
cld
flds
xor
xor
ljmp
mov
xchg
cmp
pop
pop
cmpsb
lcall
push
js
inc
cmpb
pusha
in
scas
add
sub
mov
outsb
adcb
out
sbb
mov
and
mov
or
or
in
test
aas
jbe
and
cmpsl
and
xor
aad
xor
mov
mov
mov
stos
cmc
mov
fsubs
adc
inc
dec
inc
cmc
popf
push
cli
les
pop
test
xor
stos
add
dec
and
ret
mov
mov
nop
push
pop
adc
jmp
lret
xchg
dec
inc
cmp
leave
or
call
dec
jbe
jmp
mov
addr16
lds
jp
ds
mov
das
lock
cltd
scas
ret
in
negl
mov
cmp
insl
int3
add
mov
pusha
insb
mov
stc
sbbb
pop
mov
outsl
cmp
sub
and
in
sub
out
and
jns
and
lea
pop
push
sub
add
dec
mov
outsb
js
scas
mov
jbe
push
fisttpl
or
and
popa
mov
stos
insl
sub
movsl
xchg
dec
scas
jo
mov
xchg
ja
pop
lods
sub
insl
mov
push
push
jg
cmc
int3
out
mov
mov
adc
addl
icebp
pop
add
pop
add
cltd
sbb
pop
pop
in
xchg
mov
mov
hlt
loope
pop
mov
pop
fildll
cmp
js
cmp
dec
test
inc
jmp
clc
sub
or
inc
jl
pop
sar
and
out
mov
push
xchg
pop
fimuls
xor
jo
cmpsl
cs
int
dec
lock
and
addb
dec
adc
mov
out
or
lcall
imul
ja
out
sub
das
lock
test
pop
loope
mov
ljmp
fucomp
lcall
ljmp
dec
sub
hlt
push
inc
hlt
es
mov
inc
mov
xor
push
push
sbb
jbe
mov
pop
stos
in
insb
mov
je
add
pop
mov
mov
cli
cmp
imul
xor
adc
sbb
and
sbb
push
mov
mov
add
add
lcall
dec
cmp
icebp
stos
fsubrs
push
shrb
xor
or
mov
stos
out
insl
and
mov
cmc
mov
dec
and
jbe
push
ret
sbb
inc
push
mov
fs
jg
pop
add
test
and
xchg
faddp
les
sti
ja
pushf
jg
mov
stc
mov
clc
iret
mov
outsb
xchg
mov
ss
scas
mov
or
cmpb
mov
outsl
test
fnstcw
mov
lds
cmp
cmpsb
cmc
sub
sbbb
ja
xchg
loope
pop
icebp
jmp
inc
popa
mov
les
mov
cld
mov
and
or
std
add
pop
add
push
fidivrs
adc
push
lods
jle
test
xchg
jno
mov
jg
xchg
test
pusha
sub
gs
insb
dec
shl
push
into
cmpsl
adc
hlt
adc
imul
das
push
cs
xor
and
mov
frstor
loope
sti
mov
or
jg
test
ret
data16
and
sbb
or
pushf
or
andb
hlt
decl
or
mov
fnstsw
cmp
sbb
lock
inc
repnz
add
in
or
sub
xor
mov
shll
jbe
enter
pop
insl
pop
outsb
test
int3
or
lcall
dec
push
out
push
mov
pop
aad
es
dec
adc
cli
aad
dec
lret
mov
js
fstp
jg
xchg
clc
mov
pop
or
scas
out
mov
imulb
push
dec
ficoms
fmuls
mov
adc
filds
mov
das
jp
insl
aam
dec
adc
jnp
lods
inc
sbb
xchg
aad
mov
data16
dec
test
fistpll
push
stc
nop
imul
out
clc
call
repnz
movsb
repnz
in
fsubrl
aam
pop
inc
pop
cmc
aas
mov
aaa
getsec
outsb
aas
mov
ret
and
or
js
cwtl
lods
mov
add
push
stc
cmc
mov
mov
mov
xchg
mov
pop
dec
mov
xor
shl
fisubrl
mov
inc
push
dec
add
dec
movsl
aaa
xor
inc
clc
push
or
decb
dec
pop
cltd
push
call
mov
adc
push
std
sub
inc
pop
loop
sbbb
jmp
add
adc
enter
inc
inc
fcmovbe
jno,pn
clc
call
lret
mov
scas
rcr
and
sbb
add
pop
repnz
pop
adc
push
pop
inc
xor
inc
dec
sub
dec
fidivs
mov
out
push
clts
jnp
es
pop
adc
adc
cli
outsl
mov
jb
mov
push
mov
add
incb
mov
mov
movsl
int3
cld
add
in
test
pop
adc
sti
push
push
add
movsb
or
cli
std
in
imul
fwait
inc
hlt
pop
cmc
in
lods
test
xchg
negb
lahf
insl
ljmp
mov
dec
or
and
xchg
call
lahf
loopne
mov
cld
or
test
inc
andb
adc
jbe
push
testb
imul
int3
push
xchg
inc
mov
testb
add
cld
out
push
sbb
jmp
out
push
repz
sub
lcall
stc
jnp
adc
sbb
mov
pusha
push
std
data16
mov
movsl
lods
mov
sbb
sbb
sub
in
dec
push
icebp
stos
dec
jmp
cltd
sub
fs
fildll
loope
push
lcall
dec
cs
scas
push
sub
add
sbb
dec
fisttpl
sbb
mov
push
sbbb
fiaddl
dec
sbb
gs
mov
mov
insb
outsb
fs
mov
xchg
push
xor
and
out
cli
cwtl
add
mov
and
mov
stc
push
jg
in
xor
fsubs
mov
cmp
fidivrs
pop
mov
mov
and
stos
mov
aas
jl
imul
xorb
cli
std
outsl
sbb
dec
xchg
mov
jg
enter
pushf
lret
jp
dec
cltd
outsb
dec
stos
mov
push
or
adcl
ficompl
xchg
scas
sub
adc
cmp
pusha
adcl
add
lea
ret
xchg
adc
das
fsub
adc
insb
mov
or
cmpsl
ds
loope
cld
incl
adc
repz
pop
cmpsb
lock
mov
xchg
cmpsb
sbb
push
jo
cmp
mov
mov
jl
stos
std
shll
mov
dec
xchg
dec
data16
dec
ljmp
bound
int
popa
fsubl
loopne
dec
loopne
mov
sti
inc
sbb
je
add
or
xor
lahf
sub
pop
dec
clc
loope
jne
mov
or
mov
fstpl
subl
call
lcall
loopne
mov
push
jbe
push
rclb
mov
std
jp
ljmp
loope
icebp
ljmp
push
jmp
inc
mov
inc
and
inc
out
mov
jle
xor
and
pop
jecxz
test
shrb
sahf
popl
cmp
outsl
sbb
pushl
test
cs
jle
mov
pop
ja
jmp
icebp
push
xor
pushf
aad
pop
in
orb
adc
jecxz
mov
mov
and
add
shrb
sbb
js
rol
and
scas
mov
adc
adc
push
sar
and
cld
dec
jmp
call
sbb
lahf
test
aaa
cwtl
loopne
jno
addr16
cld
in
scas
test
scas
into
mov
ljmp
mov
sti
inc
dec
adcb
push
shrb
hlt
push
cmp
mov
push
or
push
and
call
mov
mov
dec
cmp
jle
punpckhdq
jo
and
popf
sub
outsb
mov
pop
outsl
pushf
and
cmpsb
loopne
rorb
dec
pushl
pop
fdivrs
mov
mov
xor
adc
sbb
pusha
jae
fcomi
or
jmp
sub
shll
mov
rcrl
and
push
push
inc
out
dec
popa
loope
jge
mov
stos
mov
cld
inc
push
cmp
lock
out
cmp
adc
cltd
or
inc
mov
xchg
inc
adc
ret
outsl
pushf
mov
or
add
push
decb
lds
mov
clc
icebp
adc
xor
or
je
inc
adc
dec
in
incl
imul
ss
fwait
push
add
mov
aam
mov
add
jmp
ja
lds
aad
nopl
ss
icebp
jmpw
add
push
inc
dec
add
ss
enter
jmp
adc
and
out
aad
adcb
lods
push
nop
das
mov
nop
add
clc
scas
xchg
into
mov
ffree
adc
adc
sbb
pop
inc
orb
xor
repnz
mov
sub
ret
mov
mov
scas
mov
dec
pop
push
mov
bound
out
or
cmp
sbb
ljmp
cli
int3
js
push
jle
daa
cmp
dec
movsl
dec
xor
ret
ficompl
loope
sahf
dec
pop
addr16
ds
scas
sar
mov
inc
sahf
add
out
or
pop
and
xchg
jp
inc
movsl
mov
mov
frstor
jmp
mov
stos
add
lcall
mov
mov
dec
iret
mov
imul
enterw
mov
jg
mov
nop
xor
outsb
call
push
sbb
lods
aaa
and
push
movb
push
adc
sub
cmp
dec
in
dec
xchg
lods
xchg
push
sbb
push
pusha
mov
clc
ret
lods
sub
insl
fcmovbe
fimull
cmp
add
xor
jge
cli
or
jecxz
add
movsl
pop
das
out
cli
sub
fnstcw
mov
pop
in
pop
icebp
shlb
jp
cmp
push
stos
fucomp
icebp
aas
std
xor
mov
mov
cmp
lods
push
mov
nop
jle
or
in
out
mov
mov
loop
sbb
xchg
rcrb
fmull
aaa
mov
add
pop
pusha
es
out
or
jg
fidivs
mov
loope
push
pop
rolb
es
dec
popa
andb
pop
or
push
call
jle
imul
out
and
pop
cld
add
hlt
mov
push
pushf
push
add
sbb
lods
in
xchg
pop
adc
mov
and
pop
lock
cmpsl
pop
test
andb
push
adc
inc
xchg
divb
ljmp
pop
inc
aaa
sub
push
adc
sbb
mov
cmp
pop
repnz
loopne
int
and
std
jg
rolb
sbb
aaa
ret
lea
sti
dec
loope
dec
sbb
fstpl
dec
jno
bound
inc
clc
jg
cmp
fcos
out
clc
jne
addr16
jno
push
mov
stos
sbb
and
scas
mov
push
leave
xlat
pop
loop
ficomps
mov
aaa
push
mov
test
pop
cmp
sbb
jmp
pop
clc
lods
aaa
jmp
xor
icebp
mov
and
or
jns
rorl
xchg
fidivl
pop
scas
add
add
pop
aam
inc
cmp
inc
in
and
sbbb
repnz
arpl
pop
adc
lcall
xor
and
ret
lret
in
xchg
out
test
sbb
or
pop
mov
leave
fadd
aam
enter
decl
into
shl
add
xchg
ljmp
loopne
xchg
inc
popa
mov
call
xchg
ljmp
sub
clc
cli
jle
dec
sbb
dec
pop
es
rclb
add
or
gs
inc
std
xchg
testl
jns
add
mov
popf
inc
loopne
mov
das
adc
das
negl
out
dec
jne
push
mov
jecxz
shlb
and
push
mov
ds
sbb
and
pop
mov
negb
dec
aas
pop
or
jp
add
incb
fistpl
cwtl
sub
mov
jecxz
jp
push
sbb
mov
mov
fwait
fs
or
bound
jbe
xor
cld
cmp
in
dec
xchg
mov
sbb
xchg
mov
jle
dec
adc
negb
notl
cs
cld
test
arpl
sub
outsb
cmpsl
or
aad
out
cmp
cmpsl
jo
jp
add
loopne
pop
jb
data16
jecxz
or
push
push
sbb
xchg
jne
lret
dec
inc
in
cmp
cmc
in
lods
xor
shlb
mov
loope
and
dec
or
push
mov
addb
jbe
fsubr
mov
adcb
cmc
lcallw
xor
cmp
dec
test
test
shrl
push
rorl
call
stc
add
ficoml
scas
das
clc
decl
ret
cmpsb
aaa
push
add
pop
xchg
jnp
add
int3
xchg
outsl
imul
dec
fdiv
xor
cld
push
lock
jl
sbb
aaa
jle
out
int3
mov
pusha
sbbb
pop
data16
mov
ljmp
jno
mov
idivb
mov
mov
ja
les
jnp
jbe
fcomi
mov
ja
add
jmp
cld
outsl
xchg
push
xor
adc
cld
outsl
add
lods
es
mov
ljmp
push
mov
imul
add
cmpsl
dec
call
pop
mov
dec
push
clc
insb
or
out
mov
imul
adc
je
jnp
cmp
add
insl
cmpsb
mov
push
ljmp
xchg
mov
cmp
cmpsl
mull
clc
test
imul
aas
test
mov
mov
lcall
jmp
inc
hlt
dec
push
fs
lods
lret
leave
mov
cwtl
out
jp
or
aaa
ljmp
cmp
xor
adc
enter
movsb
movsl
mov
mov
cld
mov
mov
cmc
fdivs
push
and
shlb
inc
gs
movl
das
int3
jb
add
hlt
add
sarl
or
stos
or
adcl
sub
inc
add
lock
sub
push
decl
pop
fstp
xchg
lds
shll
adc
adc
add
movsb
pop
fildll
dec
lcall
cmp
outsl
int3
cmpsl
shrl
push
cwtl
out
nop
ljmp
fadd
fimuls
push
and
add
jnp
mov
mov
add
sub
stos
les
addr16
push
ficoms
fcmovbe
add
sub
and
test
mov
mov
pop
or
push
test
inc
int
nop
outsb
inc
cmp
loope
out
dec
xchg
sub
out
shlb
mov
ss
nop
or
add
icebp
das
call
mov
imul
pop
mov
bound
js
pop
ss
out
cli
ljmp
mov
lock
lea
movsb
add
cmp
cmpsb
mov
mull
mov
sub
call
out
fbstp
adc
adc
ss
mov
fdivrl
add
call
push
sti
sbb
popa
push
xchg
sbb
loope
xchg
dec
shr
pop
xchg
jo
sbb
call
mov
das
mov
mov
push
push
add
push
arpl
imul
fwait
cmp
jl
mov
shrb
cmc
add
mov
dec
push
movsl
cmp
adc
and
add
dec
cmp
dec
mov
push
mov
pop
sub
push
inc
mov
cmpsl
aam
jg
movsb
out
test
pop
pop
push
add
nop/reserved
roll
xchg
decb
jge
inc
push
mov
aas
xchg
repz
aad
loop
ljmp
adc
jns
mov
xor
sbbl
jmp
incl
bound
out
inc
pop
cmp
add
incl
sti
lods
notb
mov
notl
add
out
stc
inc
icebp
fcmovnbe
pushl
add
push
pushf
mov
sbb
xor
adc
loop
or
push
addb
xor
push
mov
shlb
add
push
adc
pop
rcrb
xor
je
loop
pop
inc
test
pop
mov
jo
fsubrp
stos
outsb
or
xorb
sbb
call
push
or
fdivs
push
sahf
cmpsl
popf
in
js
subb
jbe
clc
push
cmp
sti
push
add
jl
jno
jmp
xor
cmpsb
mov
adc
filds
repnz
cmc
xchg
jo
mov
mov
mov
es
xchg
pusha
adc
fcoml
shrd
inc
xor
jle
pop
xchg
lcall
lods
je
nop
mov
decl
pushf
adc
insb
mov
push
mov
adc
mov
xor
pop
push
mov
push
inc
lock
jo
add
lcall
mov
mov
shl
imul
out
jge,pt
pop
dec
mov
cs
adc
push
into
jo
push
inc
stos
lret
test
cmp
xchg
loop
pop
rolb
inc
fistps
sub
cld
incl
push
je
fildll
or
adc
stos
mov
add
and
sbb
scas
push
push
jo
loopne
mov
test
jno
mov
lock
pusha
push
jne
mov
clc
daa
mov
and
inc
add
clc
idivb
fistpll
mov
daa
cmc
inc
cmp
inc
mov
fsubrs
or
mov
jmp
inc
sub
sub
add
xorb
mov
sbb
push
out
popf
fs
xchg
adc
and
add
fildll
leave
test
imul
fs
stos
nop
out
sbb
stos
andnps
lds
jmp
mov
or
je
dec
lock
adc
mov
daa
hlt
jg
push
cld
test
pop
push
or
rorb
or
fcmovbe
mov
push
fistpll
push
sub
or
cwtl
mov
xchg
add
addb
stos
push
add
mov
ljmp
pop
mov
out
pop
mov
mov
mov
sub
pop
cltd
pop
fs
adc
jne
inc
push
cwtl
clc
pop
lock
xorl
repnz
shll
cmc
out
cmpl
insl
in
inc
xchg
add
imulb
sbb
jno
sbb
outsb
add
cmp
jecxz
dec
mov
shrl
iret
sti
or
lcall
es
cmp
rcrl
lea
jecxz
fdivr
add
loope
or
enter
pop
sbb
inc
popf
fnstsw
int3
test
push
rcl
pmuludq
js
inc
data16
ret
sti
mov
aam
dec
arpl
scas
sbb
cs
add
sbb
adc
xor
cld
jg
ffree
push
pop
add
cmpsb
cmp
repnz
adc
gs
pop
decl
and
popf
dec
push
xor
cmpsb
ds
dec
test
imul
jl
and
xchg
aaa
sbb
jg
sub
inc
aaa
test
xorb
xor
hlt
imul
adc
mov
and
clc
clc
cmp
pop
fcomps
inc
jl
xlat
push
pusha
andb
adc
negb
movsb
adc
adc
sahf
leave
cmp
ljmp
sbb
les
jo
jo
add
ret
mov
out
mov
mov
push
cmpsb
push
push
xchg
or
loop
adc
fiaddl
addb
in
ret
xor
add
fisubs
inc
es
cmpl
sbb
mov
cld
or
insl
add
sub
sbb
mov
in
outsl
mov
sbb
push
out
xor
pop
xor
add
outsl
mov
movsl
insb
push
bound
cmp
clc
pop
add
xchg
notb
ret
cmp
dec
cli
cmp
loopne
push
clflush
xor
fistl
dec
push
mov
push
mov
jg
sub
dec
pop
sti
ja
add
imul
or
mov
mov
aam
or
add
outsl
out
sarl
pop
mov
sub
dec
test
negb
jecxz
inc
pop
cltd
sbb
jo
cmpsl
add
inc
xor
jecxz
adc
jle
cmp
je
mov
lret
push
cmp
jb
add
jp
into
dec
cmp
inc
sub
cvtpi2ps
mov
test
stos
lods
jmp
repz
pop
fs
test
repz
bndldx
lcall
out
jg
incb
ret
mov
mov
jnp
or
rcl
add
fs
and
dec
stos
jge
lods
xchg
or
xor
and
pop
add
xlat
pop
push
xchg
mov
mov
clc
mov
cwtl
mov
pop
shlb
mov
divb
je
jnp
sbb
or
or
jo
out
ret
add
insl
cmpb
push
popa
fsubrl
test
push
xor
into
xor
xor
or
push
test
mov
sti
scas
jp
aad
outsb
sbb
lcall
add
fmuls
bound
mov
int
data16
and
sbb
xor
in
xor
adc
cld
aas
cli
mov
push
and
push
cmc
cmc
jns
and
jg
cld
sbb
insb
mov
adc
or
nop
sub
dec
cld
fisttps
imul
loop
out
add
jno
and
mov
xor
aad
sarb
jnp
aam
adcb
test
aam
dec
cld
ss
fsincos
mov
xor
std
aas
jbe
out
pop
xchg
and
popf
xchg
push
adc
mov
fcoms
pop
inc
ljmp
fisttpl
std
pop
sub
pop
and
push
call
mov
xor
scas
fists
insl
loope
bound
inc
push
mov
adc
mov
cmpb
pop
xchg
imul
cli
outsb
sbb
ficoms
pusha
call
xchg
add
loopne
pop
adc
test
dec
popf
out
rol
or
scas
push
push
pop
or
jo
jae
adcl
xor
dec
ficoml
add
fdivrl
sbb
xor
push
xor
sbb
dec
xchg
je
sbb
nop
xorb
push
and
sub
or
add
ja
mov
mov
test
call
cmpb
inc
mov
mov
sub
fiadds
mov
dec
push
and
mov
fwait
sub
imul
mov
negb
pop
int3
and
fildll
pop
test
fwait
and
iret
or
negb
pop
sub
jle
mov
mov
pop
push
xor
lret
insl
es
push
xor
ja
ss
outsl
lcall
ret
jmp
aas
push
lcall
mov
adcl
cmovno
inc
mov
mov
adc
or
xchg
call
popf
hlt
out
repz
hlt
add
movsl
jmp
mov
adc
inc
mov
mov
xchg
into
stc
inc
aaa
cld
test
sbb
sbb
ret
push
and
cmp
subb
sub
mov
roll
xchg
lcall
mov
adc
mov
scas
mov
push
jne
cmp
mov
mov
push
inc
std
incl
add
mov
fwait
popa
fists
in
add
and
cmp
mov
pop
pop
add
pop
mov
pop
and
mov
adc
daa
dec
lock
out
push
pop
pusha
push
add
fwait
or
sahf
xchg
es
sub
std
xchg
lods
or
mov
jbe
and
mov
jnp
loope
xchg
rcrl
mov
imul
sti
xor
mov
mov
mov
mov
imul
pop
and
jecxz
into
mov
mov
rolb
pop
sbbl
out
dec
mov
aad
or
popf
or
rolb
out
in
aad
ffreep
mov
testl
or
add
or
in
bound
enter
xchg
pop
loop
cmp
pop
rorl
stos
dec
aam
add
add
daa
das
mov
sbb
pushf
inc
data16
or
hlt
sbb
inc
sbb
insb
mov
clc
aas
aam
test
or
sbb
mov
pop
lock
cmp
addb
lahf
sahf
inc
cwtl
rcl
ja
icebp
pop
cli
or
lock
mov
sub
push
movsl
mov
push
subl
shll
mov
ja
xor
in
mov
loop
out
add
mov
sbb
nop
push
xchg
out
inc
jl,pt
ficoml
xlat
cmpl
das
loop
mov
dec
test
push
test
shrb
push
bound
movsb
lcall
pop
jl
xchg
dec
in
xchg
ljmp
lea
stos
out
imul
push
bound
add
push
decb
pop
mov
push
je
xchg
and
test
pop
pop
fildl
bound
or
lret
mov
dec
movsl
fnsave
mov
mov
adc
or
cli
jno
daa
add
xchg
add
rol
cmp
ljmp
mov
xchg
mov
jbe
jl
and
mov
push
cmpsb
xlat
mov
lea
outsl
push
cwtl
sahf
test
gs
adc
sub
lret
xchg
pop
or
mov
cmp
ja
and
jns
push
pop
cmp
dec
std
add
dec
push
xor
inc
ret
sbb
les
loopne
fiadds
add
mov
cli
iret
xchg
in
and
pop
inc
movsb
pop
sbb
decl
cld
add
jle
dec
fmull
out
rep
ja
std
aas
js
cmp
inc
cmp
fnstsw
mov
in
sub
adc
add
cmp
sbb
popa
mov
ja
pop
sbb
ret
roll
ja
fnstsw
mov
sub
cli
push
loop
add
testb
sbb
mov
fisttps
pushf
sahf
dec
addb
mov
push
adc
jl
imul
sub
pop
fwait
es
addb
xchg
pusha
pusha
stc
aaa
mov
lds
xor
dec
hlt
ret
mov
and
add
and
loopne
mov
jle
test
jl
loope
orb
js
xchg
and
inc
xlat
jo
xor
pushf
dec
std
mov
dec
dec
in
xor
jbe
clc
mov
mov
lods
push
jb
in
add
or
das
scas
pop
roll
or
stos
fnsave
movsb
sub
fdivs
jp
dec
sbb
mov
mov
or
lcall
cmp
pop
scas
lea
je
cmpb
cld
jns
jo
fwait
stc
add
xor
sbb
es
fsubrs
movsl
adc
push
ljmp
inc
sub
test
inc
inc
mov
or
or
jns
aad
xchg
mov
mov
mov
push
stos
sahf
sub
sti
add
inc
or
or
inc
jb
and
dec
imul
rcrb
mov
test
sub
in
mov
std
xchg
rol
mov
in
out
ror
js
aaa
insb
les
sbb
pop
stos
pusha
loop
test
call
adc
jmp
mov
lea
mov
aad
das
xchg
push
inc
sbb
out
cmp
push
push
stc
aas
mov
push
mov
jo
jb
adc
clc
adc
cld
icebp
dec
popa
and
push
mov
mov
mov
sub
pop
mov
scas
outsl
incl
inc
jae
mov
in
mov
clc
popa
adc
nop
jnp
lcall
mov
jmp
sbbl
enter
pop
in
pop
push
pop
loop
mov
js
movsb
stos
push
xchg
xchg
mov
xchg
or
fwait
pop
pusha
das
call
or
movsl
mov
test
jmp
add
add
negb
or
sub
sub
add
push
and
cmc
arpl
les
ljmp
and
or
repnz
lock
lock
sbb
inc
das
cs
adc
into
add
sbb
or
lods
pop
inc
adc
push
add
aam
arpl
loope
cli
pop
movsb
cltd
mov
data16
or
jecxz
add
cs
mov
add
xchg
lcall
pop
push
add
movsl
push
jb
jae
cmp
hlt
aaa
in
add
mov
jno
negb
in
or
mov
sub
adc
add
or
or
iret
push
adc
movsb
jns
jp
jecxz,pn
loope
incl
push
adc
cmpl
mov
jl
push
inc
pop
push
in
test
outsb
jle
push
jg
fdivs
fadds
mov
push
fs
enter
ds
xor
xchg
fiaddl
mov
lds
cmp
dec
push
add
out
insl
fadds
fiaddl
hlt
sbb
fistpl
ss
fmuls
out
pop
xchg
out
mov
mov
mov
cmp
adcb
mov
inc
int3
or
cs
mov
dec
or
fwait
mov
lret
push
xor
cld
inc
jg
insl
test
add
orl
mov
cmpb
scas
mov
and
add
mov
fidivl
dec
xor
fists
sub
test
cs
adc
jle
inc
push
cmp
das
addb
inc
lret
sbb
mov
lcall
xchg
mov
call
lods
add
push
add
mov
mov
fndisi(8087
ja
dec
mov
call
lods
fdivl
adc
jne
test
jb
or
jecxz
mov
xor
dec
jbe
pusha
mull
push
push
out
inc
xchg
stc
mov
add
pushf
mov
mov
xor
or
dec
cmp
movsl
jmp
push
scas
pop
je
or
sub
enter
addb
addb
push
imul
jmp
je
dec
jno
dec
mov
int3
ljmp
test
loopne
pop
in
cmp
scas
cwtl
lcall
sti
imul
sbb
hlt
inc
inc
xchg
fcoms
sbb
xlat
pop
loope
inc
scas
pop
subb
mov
das
adc
or
mov
icebp
pop
mov
adc
jle
shrl
std
push
je
add
or
jg
mov
mov
push
rorb
mov
push
xor
hlt
clc
push
xor
inc
pop
jae
cmp
out
movsl
lcall
repnz
addb
push
clc
push
orb
add
es
mov
mov
push
push
cs
sbb
jg
mov
lea
cmp
cs
clc
daa
sub
pop
aaa
jl
inc
xchg
or
mov
mov
test
inc
xchg
movl
cmp
add
addr16
xor
inc
in
pop
mov
repnz
js
mov
je
out
sbb
les
inc
incb
mov
ds
push
adc
push
fwait
jbe
cli
insl
out
add
imul
ret
cld
mov
and
pop
testb
jmp
pop
inc
aad
jp
arpl
outsl
testb
mov
fs
cli
add
xchg
fld1
inc
sub
lods
cs
lds
push
outsb
js
dec
popf
addr16
sahf
mov
ljmp
adc
mov
imul
push
add
into
pop
jg
loope
mulb
mov
mov
push
or
adc
cli
outsl
mov
jmp
pushf
or
jbe
jns
lret
xor
push
and
and
inc
inc
rcr
lea
mov
push
cmpl
push
dec
mov
in
subb
pusha
std
add
mov
jl
mov
push
dec
test
inc
pop
les
aas
int
sub
or
outsb
mov
out
xchg
mov
mov
push
push
test
sbb
adc
and
cmc
xor
dec
int3
mov
xchg
mov
or
ljmp
lods
mov
sub
dec
push
call
jge
add
aaa
cltd
xchg
lcall
pop
pushl
ficoml
add
pop
sub
add
or
add
test
std
inc
stos
jp
xor
mov
add
add
lods
es
mov
incl
dec
push
mov
mov
jae
popa
adc
mov
enter
dec
addb
sbb
daa
lret
sbb
lock
mov
lods
jmp
cli
lods
jb
mov
data16
lahf
sbb
testb
mov
xchg
push
loopne
stc
add
push
fnstcw
out
add
adc
push
inc
sub
add
lahf
popa
cltd
pop
test
cld
in
add
out
incl
rorl
mov
ds
mov
jp
cmc
fucomi
mov
adc
dec
sti
jg
pop
or
mov
mov
fs
cmp
jb
push
push
je
xchg
jp
mov
pushf
cli
test
sbb
jae
jmp
andb
sarb
cmpsb
mov
cmc
push
movsl
sub
out
int3
shlb
outsl
jg
aas
divl
js
jmp
cwtl
inc
rol
mov
add
sarb
mov
xchg
andb
inc
add
cmpsl
sarb
push
inc
adc
cmp
popa
jno
cmp
pop
add
cmp
movsl
mov
pusha
lret
jns
aad
push
and
and
fmuls
sub
jl
mov
jnp
push
mov
subl
mulb
orb
mov
cmp
mov
lahf
test
test
dec
mov
jle
pop
xorl
mov
pop
outsl
fisttps
mov
int3
cmpsb
mov
sbb
jg
imul
sub
shll
adc
subb
dec
lcall
and
xchg
popf
jno
aam
mov
sbb
cli
movsl
mov
out
mov
cmp
and
dec
aam
jbe
inc
cmp
sub
in
lea
inc
sbb
jl
testl
sub
add
lds
fcoms
xor
xor
decb
sbb
push
mov
in
sbb
push
cmpsb
add
hlt
inc
push
jge
movsb
or
sbbb
repnz
cwtl
int
ja
outsl
bound
jo
xchg
adc
adc
clc
push
std
sub
and
pop
jne
or
lock
xchg
nop
jnp
frstor
jb
test
scas
stos
bnd
hlt
pushf
jo
adc
xor
pop
das
push
nop
sbb
mov
push
jmp
and
cwtl
call
scas
sub
loope
aam
nop
jg
push
fdivrs
iret
inc
aam
std
mov
push
loope
dec
lock
jecxz
sahf
push
cmpb
jne
loopne
push
mov
push
mov
adc
in
outsb
add
add
ljmp
or
mov
dec
cs
push
decl
cwtl
mov
call
pop
lret
rcrb
hlt
into
aam
jge
mov
in
lea
insl
cmpsb
pop
std
call
dec
insl
mov
mov
sbb
inc
sbb
pop
sahf
add
sbb
ret
out
popa
sbbb
kunpckbw
push
add
sbb
push
fiadds
das
push
dec
das
and
pop
cmc
unpcklps
cmc
sub
sub
or
push
xorb
mov
add
sub
cmp
negl
nop
cmc
mov
or
mov
mov
cld
mov
pusha
pusha
fstpl
cmp
ret
stos
lcall
adc
mov
sbb
outsl
dec
out
add
movsb
sub
mov
fucomip
mov
cmc
and
jns
dec
mov
icebp
mov
repnz
sbb
lret
lcall
inc
lods
mov
scas
mov
add
cmp
loopne
lock
js
inc
lea
bound
lods
add
or
fistl
push
xchg
or
pop
lcall
test
aaa
popf
rolb
or
pop
cmc
mov
mov
push
ret
xchg
cwtl
add
mov
mov
mov
popf
jne
xchg
cmc
pop
or
in
jo
jl
xchg
pshufw
mov
call
aas
pusha
add
hlt
inc
das
adc
lods
lea
lret
dec
lds
xlat
shl
mov
add
jmp
and
xchg
jle
mov
push
inc
je
scas
jg
push
fcomip
mov
out
rcrl
xor
sti
mov
aas
movsl
or
fstl
add
ret
int3
jne
mov
fists
lcall
push
xchg
mov
mov
mov
dec
jg
fildll
test
imull
rorb
xchg
cltd
xchg
sbb
mov
xor
cmp
repnz
jge
je
aad
lods
xor
roll
xor
xchg
scas
enter
inc
jle
lock
sbb
pmuludq
hlt
mov
les
push
fwait
lea
stos
sub
adcb
jb
inc
outsl
cmp
dec
push
mov
out
push
push
mov
incb
push
daa
mov
les
iret
cld
pop
ret
sub
cmpl
mov
xor
daa
loop
push
shll
add
pop
mov
loopne
out
mov
push
clc
lcall
sahf
push
in
mov
cld
push
sbb
add
pop
lret
lds
mov
ss
and
lods
es
jbe
pop
sub
mov
lods
mov
orb
inc
loop,pt
mov
les
lcall
out
cmpsl
pop
pop
icebp
pavgb
ja
xor
rclb
cli
scas
cli
xor
std
mov
push
mov
add
sbb
mov
xlat
loop
lods
push
add
loopne
lcall
fisubrl
cmp
std
or
adc
rorb
out
pop
je
jg
sahf
lds
push
lret
shl
xchg
jmp
cld
fwait
or
call
stos
xor
cmp
jg
mov
push
pop
or
add
ret
cli
add
rolb
mov
mov
std
popl
stos
dec
cmp
mov
and
jne
mov
and
dec
enter
fwait
pop
add
jl
xchg
push
push
outsl
clc
adcb
adc
xchg
lock
repz
pop
arpl
shlb
incb
cmp
xor
shr
pop
mov
jle
int3
inc
jno
sar
sub
dec
dec
cmp
push
jecxz
xchg
arpl
lcall
add
sub
hlt
mov
mov
xor
inc
pop
pop
sub
orb
lea
ds
js
mov
jnp
mov
sarb
lea
jecxz
mov
mov
or
xchg
sbb
mov
mov
test
cmp
jge
call
dec
mov
jne
cs
movsl
decb
pop
adcb
mov
xchg
mov
lock
mov
mov
daa
insb
add
mov
rcr
aad
loopne
add
add
int
sub
ret
mov
pop
cld
fldt
mov
outsl
decl
lea
or
enter
mov
mov
lret
pop
xor
mov
mov
and
sbb
jle
pushl
mov
pop
gs
xchg
xor
cmp
in
mov
pop
cltd
mov
dec
mov
out
pop
add
pop
shrl
loope
sub
add
xor
and
dec
push
movsb
dec
pop
mov
add
pop
dec
andb
pop
cs
jae
je
jb
push
ret
xor
scas
sub
icebp
sbb
jae
movsl
adc
pop
idivl
mull
jae
hlt
fcompl
sub
push
xor
js
ja
hlt
or
cmp
mov
push
ljmp
lahf
xchg
das
pop
cmp
test
int
dec
shr
inc
mov
loope
lahf
adc
nop
test
sbb
int
pop
jmp
inc
scas
adc
push
push
gs
push
shl
mov
jmp
jl
sub
fcmovnu
rcl
add
xchg
outsl
xor
test
cmpsl
mov
xchg
bnd
lcall
hlt
or
mov
mov
mov
or
stc
test
adc
fwait
cmp
scas
push
mov
jns
or
test
and
out
mov
out
mov
aas
xor
scas
jle
pop
inc
test
push
dec
clc
xchg
inc
mov
pop
sbb
repnz
dec
jecxz
mov
bound
pop
dec
mov
pop
scas
div
jle
aaa
xlat
popf
aam
fbld
push
hlt
or
fisubrl
jle
and
lret
gs
dec
mov
out
xor
mov
aad
pop
les
enter
sub
dec
ret
in
in
and
jecxz
mov
dec
jmp
push
add
push
mov
add
or
je
xor
and
fcmovbe
out
jb
movb
pop
adc
cmp
sub
adc
test
and
bound
dec
cld
xor
push
popf
adc
jb
push
lods
sub
cs
mov
fiadds
jp
mov
test
jg
or
cmp
rcrl
mov
sbb
call
adc
mov
js
scas
sub
out
or
mov
push
cmp
loope
jnp
sbb
dec
leave
fcoml
arpl
dec
leave
dec
cmp
mov
notl
int3
dec
xor
jge
mov
jge
ret
xchg
cld
shlb
add
outsb
fildll
out
sub
cmp
jg
lock
dec
adc
adc
pusha
lahf
push
icebp
filds
mov
int
mov
sub
cmp
jp
imul
lods
mov
push
xchg
scas
mov
pop
or
stos
lods
ja
scas
dec
jg
xchg
pusha
out
mov
out
xchg
sbbl
andl
shll
loope,pt
aas
movb
fadds
mov
xor
add
fs
add
jns
sub
enter
mov
push
dec
push
repnz
jns
sub
mov
inc
push
or
jp
fwait
lret
add
test
lock
mov
jmp
add
xor
cmp
icebp
outsb
mov
jp
test
std
push
dec
dec
pusha
ljmp
call
sbb
pop
dec
mov
adc
andl
dec
push
imul
pop
mov
jb
push
jle
inc
subb
mov
xchg
jp
aas
cmp
fmull
ret
and
jecxz
inc
std
imul
pop
fists
xchg
or
jle
add
jno
sub
in
push
xchg
mov
fcos
sub
add
aam
lock
clc
aam
stc
mov
scas
scas
sub
cli
shlb
adc
dec
and
les
cmc
pop
push
aas
sub
cltd
pop
fmull
xchg
add
pop
loope
lds
imul
in
push
mov
aam
in
stos
add
addb
cli
aaa
dec
inc
cmp
fnstsw
dec
push
pusha
inc
stos
jl
push
mov
pop
loope
mov
cmc
negb
jl
inc
pusha
lods
fwait
lds
mov
into
lds
scas
stos
xchg
dec
sahf
cld
lret
outsb
mov
xchg
sub
test
in
loopne
lods
cmpsb
scas
jecxz
push
fadds
gs
bndldx
mov
call
cli
dec
adc
mov
dec
mov
sbb
andb
icebp
negb
mov
inc
add
add
insl
and
enter
adc
scas
sbb
sbb
ljmp
mov
xor
call
jnp
hlt
popf
cli
incl
mov
sub
cs
push
push
test
negl
std
test
pop
test
or
shrl
pop
test
dec
jecxz
aam
mov
push
inc
or
mov
repz
nop
pop
pop
push
xor
push
jl
hlt
int3
in
and
push
fstpl
xor
push
push
xor
and
add
fsubs
test
push
test
fwait
dec
adc
dec
jmp
je
cmpsb
mov
cmc
pop
dec
or
leave
jmp
sub
push
loopne
rolb
iret
xor
cmpsl
xor
iret
and
mov
cmp
add
add
lea
push
adc
mov
jmpw
adc
add
mov
enter
pop
push
cmp
cmp
or
das
adc
mov
push
mov
push
and
insb
cmp
adc
ds
sbbb
push
cmp
inc
mov
xchg
jle
mov
fsubl
pop
dec
pop
sar
fsubr
hlt
pop
cld
aaa
pop
and
jl
mov
outsl
push
xor
mov
das
push
ficompl
xor
int3
push
cltd
mov
je
lods
aaa
pop
cmc
mov
psrld
lock
mov
jmp
mov
movsb
inc
rcrb
add
lret
inc
std
cmpb
or
scas
pop
sub
bound
int3
push
into
cmp
mov
sbb
out
cli
enter
lcall
mov
mov
rcll
pop
xchg
mov
dec
popa
cmp
sbb
xor
pushf
ret
push
cmp
mov
xchg
aas
adc
fistpll
mov
loop
jl
jb
adc
pop
jg
pop
add
push
pop
out
in
loopne
clc
or
daa
pop
jbe
push
js
hlt
test
xor
add
pusha
jecxz
xchg
push
add
push
push
jg
mov
mov
inc
lcall
sbb
ljmp
test
mov
xchg
push
mov
add
cmp
mov
mov
les
pushf
lods
sub
outsl
out
js
sbb
data16
push
inc
arpl
xor
decb
or
in
outsb
mov
sub
stos
roll
aam
sub
pusha
int3
cs
fsub
cmp
and
push
adc
repz
push
sbb
add
pop
addl
sbb
or
or
push
xchg
add
aas
mov
jg
aam
inc
int3
push
pop
mov
mov
xor
dec
pop
outsb
and
mov
data16
and
mov
mov
jb
data16
and
test
mov
or
jge
ret
stos
inc
xchg
add
fwait
arpl
mov
clc
mov
or
sbbb
add
mov
xchg
adc
sbb
fsubl
add
mov
jg
clc
cmp
pop
lcall
jmp
das
bound
cmpsl
in
pop
mov
push
subl
sub
push
mov
jb
sbb
mov
pop
adc
add
sbb
dec
mov
mov
movsb
inc
pop
jne
and
add
pop
fs
mov
clc
push
sub
ret
nop
add
and
daa
jmp
hlt
mov
jnp
hlt
lret
ret
call
fcmovnb
adc
mov
xorb
loopne
pop
jg
cmp
push
jns
test
xor
movsl
cmpl
fdivrl
pop
push
loop
push
lods
dec
lods
sbb
filds
sub
and
loopne
sub
or
rorl
inc
std
inc
aad
mov
inc
stos
lahf
scas
bound
ret
clc
sbb
jp
mov
xchg
adc
inc
call
jns
test
mov
cmc
clc
mov
push
out
jmp
sub
stos
xchg
mov
ss
add
inc
inc
lret
add
push
movsb
pop
cmp
add
stc
xchg
inc
pop
mov
pop
push
pusha
mov
push
push
aam
ljmp
fucomi
pop
add
aas
push
mulb
jno
addl
xchg
nop
leave
jmp
scas
push
cmp
xor
loop
and
pop
adc
xchg
dec
fld1
cli
dec
push
sbb
fldl
or
adc
xor
imul
fmul
or
pushl
mov
push
adc
shl
mov
call
sbbb
push
xor
sbb
dec
push
or
pop
pop
inc
clc
test
pushl
xor
sbb
sbb
repz
lods
aaa
lret
jo
jmp
sub
dec
push
fdecstp
xchg
add
shlb
fwait
nop
and
push
mov
and
inc
test
cs
lret
jle
sti
fildll
jl
sbb
cmp
push
jle
pop
stos
sub
add
pop
jle
mov
hlt
out
cmp
adc
jmp
mov
ja
das
push
shll
es
sub
xchg
outsl
fstpt
orl
dec
repz
dec
nop
in
push
jmp
inc
push
cltd
outsb
add
incb
cmp
repz
jl
pop
jp
mov
inc
mov
fdivs
sti
or
inc
adc
shlb
pop
push
inc
cs
scas
sbb
stos
add
scas
std
sub
adc
cmp
popa
lds
outsb
mov
enter
dec
xchg
pop
xchg
fiadds
mov
push
scas
loop
int
in
fs
sub
hlt
add
push
adc
lock
xchg
outsb
sub
adc
push
in
clc
mov
and
insb
push
insb
je
fnstenv
push
pop
mov
cmp
jb
pop
incl
icebp
scas
cmpsb
mov
dec
idivb
mov
cmc
scas
push
icebp
sbbl
inc
aad
pusha
jp
les
sti
xchg
fidivrs
orb
mov
mov
test
adc
pop
pop
dec
rcl
cmc
xchg
pop
cld
pop
cmp
push
dec
add
es
mov
mov
shlb
out
loope
sbb
xor
cmp
jge
sarb
or
push
add
je
sbb
mov
push
sub
push
push
push
jp
cmpsb
xchg
and
and
pop
cli
aaa
push
mov
mov
mov
sbb
adc
es
sbb
fmull
cld
jle
mov
cld
inc
ret
clc
insl
sub
mov
addl
jne
jb
adc
mov
jbe
xor
mov
adc
adc
push
sti
dec
inc
pop
inc
cmc
shl
in
sahf
add
sub
add
and
fists
cltd
add
sub
popa
mov
mov
and
out
ret
fnstenv
rorl
cmp
or
out
mov
dec
loope
fisttpl
or
mov
fldenv
loop
inc
adc
stos
stos
inc
push
cld
sub
pop
aad
xchg
pop
hlt
pop
arpl
adc
and
push
cld
pop
pusha
cmc
ss
or
repnz
cmp
dec
add
add
call
push
push
xor
pop
sbb
in
add
hlt
inc
fmuls
bound
inc
pop
push
in
pop
test
out
xor
out
aad
les
ret
inc
pop
sbbb
mov
fidivs
pop
push
outsl
dec
mulb
in
sub
xchg
cmp
push
ljmp
repnz
add
cmp
push
cmp
inc
sahf
jecxz
mov
ljmp
sbb
mov
sub
xor
pop
jb
nop
dec
sbb
sub
sbb
fptan
xchg
mov
mov
stc
inc
clc
jle
jbe
jp
sub
and
outsl
pusha
xchg
sbb
jl
out
mov
lret
push
cmc
mov
scas
jl
sub
shrb
es
out
lea
push
xchg
push
dec
sub
jle
les
fs
add
out
push
icebp
flds
dec
or
popa
rolb
push
sub
mov
sub
call
jecxz
mov
aad
xor
xchg
sahf
mov
mov
mov
or
pop
test
pmuludq
hlt
mov
mov
rolb
mov
es
xchg
cmp
jbe
dec
xor
mov
and
jg
xor
push
add
int3
adc
jo
pop
sbb
repz
xchg
xchg
adc
inc
jl
nop
inc
call
jg
hlt
jl,pn
jle
mov
push
hlt
aaa
pop
dec
adc
xchg
pop
bsr
xlat
adc
mov
rolb
xchg
inc
push
or
or
negb
int3
pop
rcrb
push
or
jge
or
xor
arpl
xchg
mov
rolb
pop
xchg
inc
inc
push
mov
mov
or
out
cli
mov
insb
lret
fs
mov
jnp
and
data16
inc
loopne
pop
test
fists
ss
add
rol
pushaw
add
lcall
fdivrs
xchg
das
out
jns
rcl
mov
inc
push
push
add
or
negb
xchg
push
in
push
into
cmpsb
or
sub
js
jl
jne
lcall
pop
je
repnz
and
mov
push
ret
fistps
mov
lret
cmp
and
xchg
sub
mov
add
adc
filds
push
andl
jmp
sub
adc
js
enter
shll
dec
adc
jp
shrb
adc
mov
ret
mov
addb
dec
mov
mov
fs
pop
mov
test
ss
inc
mov
inc
dec
mov
loop
aam
pop
test
movsl
mov
cli
sbb
scas
cld
inc
in
lret
pushl
mov
enter
outsb
and
lahf
stos
mov
cmpsl
lea
frstor
push
out
push
push
xchg
test
js
mov
insb
push
jge
xlat
out
inc
sbb
bound
in
outsb
adc
adc
lock
mov
sub
or
fcomi
je
loopne
cwtl
out
sub
push
dec
mov
mov
pop
js
and
ficoms
jp
adc
mov
imul
push
push
mov
pop
mov
sbb
or
sbb
inc
je
mov
scas
ljmp
dec
ljmp
sahf
mov
lods
andl
cmpsb
lds
lds
sbb
lret
xlat
loop
push
je
test
xor
xchg
jb
fidivl
mov
enter
arpl
mov
mov
mov
gs
jnp
adc
or
inc
cmp
aam
repz
mov
leave
or
sub
sub
add
movsb
pcmpgtw
ret
popa
add
lods
and
or
insb
shrl
iret
mov
mov
mov
roll
push
xchg
push
cli
cmp
sbb
cmp
mov
insl
fsubrp
je
nop
test
shrl
mov
add
sbb
scas
rorl
aas
icebp
add
pop
xor
dec
jg
pop
ret
bound
ljmp
movsl
or
xchg
xor
xchg
dec
jl
inc
lods
fistpll
xchg
push
lock
xchg
sbb
pushf
dec
sub
div
or
cmovg
jg
push
cmp
ja
test
es
push
mov
push
push
push
mov
sub
out
mov
xchg
mov
inc
in
adc
xlat
mov
mov
and
fnstenv
jle
xor
pusha
sub
mov
test
popa
rorb
in
stc
enter
add
into
add
and
xor
xchg
shll
sbb
mov
jo
shll
sub
pushf
pop
mov
pop
cmpsb
dec
inc
shlb
testl
jae
sbb
and
ds
enter
movsl
push
cmpsl
shl
les
jmp
jp
mov
push
imul
enter
mov
inc
ret
add
ret
xchg
enter
jb
xor
cli
fstps
inc
lahf
test
jle
push
pop
xorl
clc
jge
mov
pushf
and
pop
ja
dec
lahf
setp
notb
and
aad
pop
nop
js
fdivs
test
ret
jno
dec
xchg
and
jbe
pop
xlat
jg
xchg
pop
cmp
cld
out
xor
ljmp
std
ficoms
imul
loop
into
sub
cmpsb
pop
out
mov
inc
adc
adc
add
jp
insl
das
aam
and
hlt
pop
pop
jp
jbe
inc
imul
jle
cmp
cmp
mov
or
cld
dec
mov
mov
outsb
sahf
xchg
dec
sbb
inc
sub
push
jp
mov
into
inc
vfnmsub132sd
repnz
lahf
cmp
mov
inc
wbinvd
out
push
add
int3
jnp
adc
xchg
bound
dec
xchg
cmp
fcompl
divl
dec
xor
add
jp
mov
imul
lcall
pop
hlt
jae
stos
inc
cmp
push
xor
sbb
aaa
mov
mov
out
inc
repz
or
fucom
rorl
fdivr
inc
mov
ljmp
or
dec
mov
inc
mov
xor
dec
mov
out
adc
adc
sub
or
les
sbb
xchg
sbb
pusha
data16
lock
inc
fcoms
mov
cwtl
enter
jmp
sbb
rolb
add
mov
aam
xchg
jg
test
mov
cmpsb
pop
std
cmp
jb
fisttpll
push
ficompl
loop
lock
xchg
pop
out
sbb
xchg
out
jg
or
mov
lock
int3
cmpl
out
sahf
and
es
aad
push
mov
add
dec
sahf
scas
cmp
adc
ret
add
imulb
loopne
and
or
addb
rol
sub
test
sub
xchg
mov
dec
fucomip
int
divl
in
add
insl
popf
addb
cmp
sbb
mov
out
rolb
xor
mov
pop
out
cmc
out
rorb
adc
loop
insb
jne
pop
mov
add
and
sbb
sbbb
lcall
xchg
jb
aad
jecxz
ret
dec
iret
adcl
cmpsb
je
out
ljmp
adc
inc
lds
movsl
push
aas
bound
or
enter
jbe
clc
jbe
inc
cmpsl
inc
dec
add
add
or
dec
cli
jmp
lret
scas
mov
mov
stc
push
cmpl
push
adc
insb
ret
sarl
mov
cmpsb
or
insb
insl
jne
or
cmpsl
xor
pop
adc
lds
jle
ljmp
dec
push
das
mov
inc
add
pusha
jl
out
or
in
fwait
clc
or
ja
rorl
xchg
into
int
jae
pop
mov
shrl
add
or
fisttpll
jge
and
pop
inc
inc
mov
ja
push
cmp
push
jnp
mov
js
into
jb
lock
cld
pushf
or
test
lret
lods
mov
lock
sub
jnp
or
or
out
cmc
lds
mov
mov
aam
js
std
mov
lds
pop
add
push
cld
push
icebp
sbb
push
xor
pop
imul
into
adc
or
pop
js
jcxz
fidivs
adc
imul
push
pop
cmp
loop
mov
or
fnstcw
inc
sub
push
jnp
adc
lret
add
inc
and
shlb
loope
hlt
sub
test
pop
mov
ficoml
dec
aam
or
mov
lds
scas
les
in
fcomps
jl
sub
fmuls
jmp
jle
dec
and
jno
mov
mov
lods
pop
xchg
adc
inc
mov
adc
fisttps
fsubr
aad
jae
data16
mov
xor
push
adc
dec
or
mov
or
or
xchg
imul
add
movsb
rolb
mov
les
cs
in
loop
lret
jecxz
inc
shr
fists
test
jl
or
rcrb
sahf
push
cs
scas
call
inc
adc
dec
mov
ret
ficoml
stos
sub
mov
mov
mov
cmpsb
push
stos
sbb
push
lcall
push
push
repz
ret
push
dec
insb
fsubp
aaa
add
clc
lahf
xor
jo
xor
clc
push
scas
dec
clc
jns
xor
enter
adc
out
and
push
cmp
cmpsb
dec
cwtl
xor
add
bound
jge
xchg
push
iret
stos
stos
push
or
addl
jle
cmp
pusha
or
jmp
adc
xor
push
mov
dec
cwtl
xchg
mov
jg
add
mov
insb
les
cmp
repnz
mov
mov
pop
cmc
shrb
push
dec
pop
add
andb
push
mov
fdivr
pop
or
maxps
inc
pop
aaa
inc
cmpsl
loope
mov
inc
pop
fidivs
xor
btcl
je
add
and
mov
xor
push
add
pop
mov
or
test
std
xchg
adc
dec
pop
mov
pop
lods
add
negb
imull
or
push
mov
ds
fsubs
inc
sub
seta
sbb
rclb
int3
insb
adc
sbb
pop
cmpsl
mov
mov
fisubl
inc
adcb
aas
nop
inc
aas
or
outsb
into
dec
sub
hlt
int3
sbb
clc
in
repz
cwtl
push
push
mov
add
inc
subl
jns
or
popa
sbb
push
mov
mov
out
and
add
out
fistpll
shlb
pop
je
fidivrs
ret
xlat
push
cmp
movb
int3
fidivrl
cli
mov
add
out
or
add
jle
insb
js
out
mov
rcll
ss
rcrb
add
mov
fwait
xor
pop
cmp
test
or
push
mov
xchg
add
adc
arpl
mov
xor
sbb
push
enter
cmp
fdivs
push
mov
mov
outsl
push
ds
add
and
cmp
ds
inc
aad
inc
push
into
sub
in
out
cmp
push
mov
scas
push
rolb
and
dec
adc
idivl
xor
das
arpl
and
dec
xlat
ret
xchg
call
push
icebp
push
sub
adc
test
rcr
push
and
daa
mov
inc
loopne
dec
pop
pop
mov
icebp
mov
inc
fcompp
push
sub
add
sub
loop
mov
ret
outsl
rorl
mov
test
dec
inc
or
push
add
pop
les
into
push
adc
popf
sub
push
push
push
push
lock
faddp
fists
pop
pop
test
dec
push
pop
loopne
push
pop
pop
test
pop
pop
ret
inc
mov
sahf
cmp
sahf
stos
pminsw
and
jnp
ds
jp
test
or
mov
xor
add
dec
add
fnstsw
mov
aad
je
fwait
movsl
xchg
aad
xor
mov
icebp
jo
xor
ret
das
mov
pop
push
adc
sub
push
into
push
stos
rol
adc
mov
test
enter
insb
es
mov
pop
iret
mov
into
adc
fwait
or
fimull
imul
inc
push
xchg
pop
nop
xor
push
xchg
add
adc
pop
push
repnz
sbb
clc
xor
in
test
or
push
js
popf
pushf
sub
stos
sub
stc
jmp
mov
test
leave
sub
lock
mov
pop
lea
ljmp
xchg
add
cmp
aas
punpckhbw
ja
mov
into
inc
jecxz
ret
loope
stos
or
rolb
loopne
push
add
xchg
js
arpl
aaa
ret
fisttpll
fistpll
mov
mov
icebp
pop
push
cmp
xor
lret
pushf
out
xor
mov
outsb
sub
pop
std
movsb
stc
adc
lods
or
scas
jae
shlb
xchg
cmp
dec
cmp
xchg
inc
cmpsb
rcrl
xor
xorl
jp
push
sahf
js
add
popf
mov
ret
jmp
xchg
jmp
cld
test
call
mov
jl
xchg
jle
je
inc
mov
and
fs
outsl
out
arpl
lods
mov
cmp
cmp
sbb
xor
outsb
insl
pusha
mov
xchg
push
inc
lock
pop
ffreep
les
mov
ret
roll
jo
add
mov
cmovs
mov
call
mov
push
cmp
xchg
ss
cs
lret
pop
push
mov
push
add
dec
clc
add
arpl
xor
out
mov
ljmp
test
je
int3
rcrl
outsb
and
dec
sbb
mov
loope
mov
shrb
xchg
in
add
or
push
or
xor
and
and
fdiv
push
jp
stos
adc
and
test
ret
cmp
xor
rorl
fistpll
sbb
ljmp
push
fcmovnu
aad
dec
negl
clc
and
add
inc
dec
or
dec
jne
jns
dec
mov
push
xor
les
lds
loop
push
rcr
das
sbb
jle
push
int
push
je
popf
pop
xchg
pop
fcmovbe
dec
es
mov
xor
mov
mov
pop
lock
call
mov
ja
mov
pop
mov
adc
inc
loopw
pushf
rolb
xor
ret
or
sub
loope
pop
sbb
dec
les
lea
outsb
lock
out
scas
mov
adc
mov
sbb
adcb
adc
dec
mov
repnz
mov
jge
fistps
cmpsb
inc
cmpsb
movsb
aas
cmp
hlt
int3
testl
pusha
cs
mov
pop
pop
add
inc
mov
inc
pop
inc
inc
in
cmp
mov
pusha
cmp
das
adc
add
mov
push
mov
mov
insb
pop
push
rclb
ljmp
push
push
push
jbe
push
xor
push
leave
pop
jg
rol
mov
inc
pop
popa
jecxz
dec
std
cmpsb
cmp
push
and
ja
jbe
sti
mov
mov
jno
in
dec
jl
ror
push
aaa
sbb
inc
pop
hlt
adc
repnz
pop
clc
sahf
push
ret
push
sub
lea
mov
cwtl
in
xor
pop
pop
jp
cmp
fstpl
xchg
xor
fadds
sbb
and
mov
ret
stos
movsb
adc
sbbl
or
fstpt
jae
and
inc
inc
out
aad
xor
adc
push
ss
dec
imul
xchg
inc
mov
into
in
dec
stc
jmp
out
sub
mov
popa
jmp
mov
and
movsl
lods
mov
dec
aam
push
andl
shll
push
adc
push
stc
cwtl
arpl
mov
dec
icebp
and
cli
cltd
es
and
dec
xor
dec
jg
cmp
in
push
add
xchg
stos
adc
push
mov
cli
jp
in
loope
bound
ljmp
push
sti
cmc
mov
add
sub
stc
sbbl
shl
fimull
rolb
mov
loopne
insb
lfs
push
mov
xchg
loop
mov
dec
sub
loope
das
std
inc
fwait
jno
jbe
xchg
add
sub
in
in
pop
clc
out
outsb
xchg
xchg
sub
jo
call
vminpd
hlt
and
lock
inc
and
xchg
pop
cmp
test
or
pop
or
xchg
sbb
sti
adc
loop
sbb
pushl
ljmp
jno
sahf
adc
push
lahf
sbb
pop
into
clc
xchg
add
inc
loopne
bound
aaa
int
mov
dec
out
lret
add
stos
dec
sar
or
push
add
iret
scas
testb
cld
aam
cli
das
aam
cmpsl
jo
int
lock
sub
hlt
mov
or
push
jl
cli
cmp
int
ret
cs
les
adc
test
rcrl
std
mov
pop
outsl
dec
add
setne
data16
push
xlat
jns
xchg
add
and
jnp
scas
sub
cltd
or
jne
pop
mov
mov
cmpsl
fldcw
xchg
and
stos
cmp
push
mull
and
xor
sbb
lock
jl
sub
icebp
jmp
jge
repnz
and
out
push
lret
ret
stos
mov
in
nop
lods
pop
mov
shl
cld
loope
push
fldt
xor
push
in
cwtl
cs
arpl
xchg
mov
cld
add
pop
imul
pusha
lahf
push
les
sub
mov
popa
adc
call
sahf
xchg
inc
jl
xor
pop
mov
mov
or
stos
cmp
push
loop
mov
pop
cld
test
iret
adc
xchg
mov
jge
xchg
sub
imul
shl
mov
inc
lea
mov
lcall
jbe
faddl
jo
data16
clc
dec
clc
dec
add
xor
cmpb
sti
aas
aad
addr16
mov
inc
xor
xchg
ret
mov
mov
cs
scas
cs
xchg
push
push
aaa
nop
imul
and
add
xor
sub
jle
rorb
pop
sub
testl
clc
pop
xor
pop
jecxz
and
sbb
sbb
lea
push
les
mov
adc
pop
cs
nop
rcl
inc
push
insl
addr16
stos
push
sti
inc
inc
stos
pop
clc
aad
add
fldenv
xchg
aas
fdivp
xlat
icebp
mov
push
out
sbb
mov
pop
mov
lods
cwtl
sti
xor
xchg
or
ds
pusha
add
adc
dec
popa
aas
mov
loope
subb
xchg
pop
or
inc
pusha
add
dec
cmp
or
pop
movsb
mov
inc
xchg
mov
mov
movb
cmp
mov
imul
push
cmp
pop
cmp
nop
pop
mov
pop
inc
int3
xor
pop
sub
loope
into
push
mov
loopne
add
or
int3
push
cli
iret
cmp
and
mov
xchg
rclb
ljmp
cmp
lods
scas
mov
push
or
or
inc
jnp
fistl
mov
and
lcall
or
sti
jmp
fmuls
add
pop
jle
pop
jno
cmpb
dec
in
xchg
cmp
rolb
lods
or
out
pop
cmp
mov
decb
int3
sarb
or
lcall
mov
js
cmp
adc
int3
sbb
adc
push
pusha
and
adc
jp
lock
imul
or
repnz
push
mov
addr16
sub
xlat
pop
jecxz
sub
scas
lea
and
testl
lcall
xor
jnp
mov
push
jne
jns
add
aam
popa
add
pop
mov
outsb
and
pop
xchg
inc
clc
inc
adc
sbb
mov
xorb
inc
sbb
or
mov
inc
test
jno
jmp
pop
xor
repz
sub
push
mov
out
rcll
mov
push
ficoms
jp
jp
dec
xchg
jns
jp
xor
adc
fcomp
cld
lcall
sbb
imul
sti
mov
insb
mov
mov
jl
or
sbb
loope
or
push
inc
outsb
ficomps
out
dec
add
adc
aam
add
sub
iret
mov
cwtl
and
cwtl
lock
paddusb
enter
push
xchg
cmp
cmpsb
inc
mov
dec
adc
push
hlt
insl
or
loopne
xor
leave
test
sub
ss
add
jmp
mov
add
je
or
lock
sub
jno
scas
xchg
call
test
addl
jp
insb
jnp
jo
ret
movsl
mov
jne
sbb
mov
mov
push
das
mov
mov
adc
dec
fsubs
iret
push
out
push
shrb
shr
jle
xchg
idiv
sbb
push
inc
jb
arpl
jae
dec
scas
bound
push
imul
add
cmc
pop
or
lcall
add
mov
mov
lahf
movsl
adc
aam
lret
pushf
mov
cs
mov
sahf
out
mov
adcb
sbb
mov
lods
xor
popa
add
push
mov
inc
into
mov
inc
xor
test
into
mov
scas
push
jp
cld
cmpsl
js
adc
add
cmp
daa
dec
mov
cs
push
or
push
mov
or
adc
push
pop
lock
sbb
add
roll
mov
mov
push
xlat
sub
add
outsb
orl
in
mov
loop
gs
jge
icebp
jp
jle
jb
test
je
sarb
sbb
push
or
xor
xor
mov
mov
dec
xchg
dec
mov
sbb
pusha
mov
inc
jp
push
clc
xor
xchg
inc
lock
push
std
pop
fisubl
or
hlt
and
and
push
pusha
sub
dec
aam
sub
mov
push
lods
push
and
test
xchg
cmpb
push
orl
pop
popa
sbb
rol
inc
adc
lock
lret
pop
mov
in
xchg
dec
xchg
mov
stos
call
std
cli
rclb
inc
loop
out
loopne
push
xor
xor
movsb
pushf
inc
push
xchg
add
push
lds
inc
es
inc
mov
jne
and
pop
push
stos
fldcw
hlt
imul
montmul
cmpsb
add
pop
mov
ret
pop
cmp
xor
push
std
jo
ja
lcall
inc
jp
pop
jnp
mov
lds
rorl
shll
cs
jmp
test
outsb
add
scas
test
xchg
lods
call
cmp
push
mov
mov
test
ss
sub
pop
insb
mov
add
mov
rol
pop
je
sub
add
xchg
test
and
in
add
pop
ret
outsb
push
mov
fbstp
jle
and
add
add
add
cmp
lret
aas
aaa
push
add
cmpsl
xor
mov
xchg
jae
add
orb
imul
sbbl
pop
adc
sti
cmp
add
add
js
adc
aaa
dec
mov
pop
loope
fimuls
xor
xchg
outsl
cmpl
adc
bound
jbe
lea
jg
jecxz
jnp
out
sbb
rcll
dec
cmpsl
mov
hlt
xor
sti
test
aad
movsb
jno
and
std
icebp
lock
mov
cmp
out
and
jmp
and
popa
icebp
hlt
mov
out
dec
dec
inc
out
cmp
movsl
pop
pop
mov
push
jmp
push
sbb
pushl
sub
add
les
pop
sbb
jmp
ret
mov
sbb
ljmp
mov
outsb
pop
fwait
movsb
jns
inc
arpl
out
data16
sub
cmp
mov
add
in
mov
jbe
mov
movl
xchg
xchg
pop
or
push
outsl
and
add
in
daa
and
sbb
out
mov
jmp
test
mov
clc
sbb
data16
mov
js
mov
add
jae
cmp
sub
push
popa
out
je
cmp
lock
lahf
shlb
and
data16
adc
scas
mov
andb
sahf
shll
out
inc
pop
push
and
scas
insb
pinsrw
jno
xchg
icebp
roll
adc
cmpl
cltd
push
push
mov
xor
fimuls
jge
cli
fld
sbb
dec
ret
push
inc
repnz
das
or
hlt
sbb
enter
lods
fbstp
cmp
stos
nop
mov
mov
or
jnp
out
mov
bound
and
decb
sahf
adcb
mov
andl
pop
jg
rcrb
xchg
jns
scas
repz
push
enter
js
fcompl
not
jns
lock
sbb
loope
push
push
pop
cmp
adc
arpl
pushf
adcb
jno
insl
sub
adc
dec
and
notl
test
insb
scas
mov
pop
dec
ret
pop
inc
inc
ljmp
sbb
orb
cmp
ss
jmp
sbbb
dec
cld
jmp
aad
xchg
mov
push
mov
inc
sub
mov
dec
inc
xchg
clc
out
imul
les
pandn
inc
or
and
jle
cwtl
imul
sti
loopne
dec
fs
mov
or
or
inc
xchg
test
pop
ljmp
mov
sub
mov
data16
cmp
dec
sbbb
and
stos
jge
mov
mov
bound
and
sub
mov
xchg
insl
scas
sahf
xchg
in
push
rcll
pusha
rorl
aas
fisubrl
or
cmp
sub
gs
pop
lret
cmpsl
cltd
push
stos
dec
icebp
adcl
xchg
jle
lgs
cmp
loopne
stc
pop
dec
or
mov
xchg
xchg
ds
xchg
jb
js
lds
out
sub
xchg
in
insb
icebp
push
lock
and
fcom
pop
imul
dec
xchg
int
cli
clc
icebp
xchg
imul
jle
out
outsl
sbb
fbstp
mov
add
and
nop
xor
test
pop
pusha
cld
call
jle
mov
hlt
inc
call
mov
ret
pusha
jp
pusha
cmpb
cld
pop
xchg
mov
lods
shrl
sbb
lds
sbbb
lahf
add
loopne
in
rol
cmp
ret
sbb
push
fwait
pop
mov
jae
stc
or
or
data16
xor
xlat
pop
fs
repz
mov
or
dec
or
test
mov
pusha
cs
push
push
insb
or
ljmp
icebp
jae
stc
ss
sbb
pop
or
push
inc
add
icebp
rorb
shrb
clc
dec
repnz
loope
xchg
hlt
nop
hlt
push
daa
sahf
cmc
mov
lahf
test
ljmp
push
cmp
push
lods
imulb
inc
sbb
xor
mov
mov
scas
xchg
cltd
daa
cli
lock
mov
daa
cmp
lods
loope
sti
and
push
incb
push
insl
fwait
pushf
in
cmpsl
sbb
inc
loopne
inc
popa
pusha
add
es
je
lock
cmp
adc
xchg
jnp
mov
push
dec
lea
xor
mov
adcb
push
or
xchg
mov
lcall
aad
stc
and
popl
jge
or
das
pop
adc
popl
sarl
fsubr
fisttpll
push
push
pop
mov
adc
loope
adc
loopne
jne
es
jle
jecxz
mov
je
clc
xchg
ja
ret
inc
sub
dec
jge
jns
mov
jo
nop
push
push
add
ds
push
and
pop
aam
and
sbb
jbe
testb
in
imul
pushf
inc
xor
xchg
cmc
add
cmp
and
lock
lea
scas
movsb
adc
push
in
xchg
daa
clc
or
data16
insl
jl
cli
add
out
mov
ljmp
data16
fwait
push
and
sti
lcall
mov
ds
ficomps
mov
and
aas
dec
cmp
jne
adc
test
or
test
cmpsb
ljmp
mov
inc
and
fcmovb
mov
pusha
out
inc
mov
xchg
or
inc
pop
add
and
in
pop
pop
jnp
dec
and
ret
subl
jb
cmp
xor
mov
and
push
idiv
mov
pop
jle
loopne
daa
push
sub
sahf
shrb
mov
ljmp
mov
imul
adc
in
inc
adc
xchg
mov
jecxz
call
out
jbe
add
mov
out
mov
cli
pop
or
push
mov
sub
cmpsl
incb
data16
and
shl
test
rcll
jg
inc
popf
popa
inc
rcrw
pop
int
lret
pushf
mov
jne
sub
sub
dec
cld
sub
movsl
fninit
fldcw
mov
xlat
rcrl
jo
incb
or
push
sbb
int3
add
cmpsl
push
and
daa
sub
jmp
in
xchg
repnz
dec
ficoml
lret
pop
lock
cmp
aaa
and
repz
add
or
insb
into
testb
xlat
xchg
testb
jbe
movsl
inc
cmovs
test
fistps
nop
push
das
lock
pusha
stos
loopne
dec
mov
add
sahf
jle
push
inc
cmp
inc
xchg
add
fstl
out
jbe
outsl
xlat
mov
jecxz
mov
push
mov
ljmp
sbb
jp
data16
cmp
mov
subl
es
fildll
xchg
dec
rolb
rcr
out
xchg
or
cld
mov
jmp
je
push
push
adc
xchg
pushf
inc
outsl
movsb
pop
mov
pushf
mov
dec
bsf
inc
iret
adc
sbb
scas
shrb
adc
cmp
out
je
mov
aam
test
dec
mov
xor
fwait
lcall
sub
inc
cmpsl
scas
mov
xchg
push
enter
shlb
mov
jp
push
div
cmp
in
subl
test
sbb
cmpl
mov
mov
dec
ret
lcall
sub
movsb
mov
out
pop
xor
jp
cmp
cmpsl
lea
mov
cs
mov
pop
shlb
inc
insl
jno
hlt
enter
dec
jo
sub
sub
scas
dec
pop
je
andl
bound
push
inc
rorb
out
mov
in
mov
xchg
daa
add
dec
out
xchg
jo
test
mov
lock
push
ss
adc
int3
bound
jb
xor
pop
inc
lods
pop
xchg
lret
pop
cmp
clc
sbb
adc
imul
mov
call
sbb
xor
cwtl
push
push
jno
loope
scas
push
clc
xchg
xorb
sbbl
outsl
xchg
daa
mov
push
js
pusha
sub
push
mov
push
mov
cmp
sub
clc
adc
cltd
push
adcl
iret
mov
jbe
clc
adc
shlb
jae
inc
or
and
test
in
cmp
loop
mov
sub
fs
cmc
xor
xchg
inc
mov
popf
mov
fcom
push
add
jecxz
in
sub
imul
sti
xchg
data16
stos
mov
aas
cmc
push
shlb
cwtl
sbb
icebp
cmp
subl
test
sar
insb
test
loopne
push
test
cmpsb
jbe
aad
jle
xor
test
ja
inc
mov
jl
cmp
les
mov
fwait
lea
shr
lea
pop
push
cmp
cmpxchg
sbb
add
test
sub
sbb
adc
scas
push
test
loope
ret
lahf
ret
bound
lods
outsl
adc
imul
shrb
jno
adc
mov
push
das
dec
shl
ror
sbb
xchg
jg
add
pop
pop
jg
cmpsb
mov
mov
into
push
jno
shrl
inc
add
fistpl
jmp
sarb
xlat
xchg
mov
inc
loope
pop
push
jno
lret
dec
push
push
cld
xchg
xor
scas
mov
pcmpeqb
scas
decb
sti
push
cmpsb
loop
js
mov
mov
stc
js
lods
scas
push
stos
dec
push
push
aam
inc
js
outsl
jne
das
lret
xchg
adc
out
sbb
outsl
cmp
pop
adc
sub
pop
jg
inc
idivl
cs
mov
cmc
sbb
cwtl
mov
sbb
sbb
jg
jle
push
popa
pop
cmpsb
shrl
sub
leave
add
subb
shll
xlat
mov
xor
enter
mov
pusha
int
adcb
fmuls
or
sbb
jge
inc
mov
adc
subb
mov
jns
popa
lret
outsl
cmp
cs
pop
insb
stos
sahf
sbb
les
ja
cmc
add
pusha
adc
out
daa
jl
cld
sbb
rol
mov
dec
nop
imul
sbb
cwtl
mov
loope
xor
cmpsl
mov
jmp
shll
push
xor
mov
outsb
std
jne
and
js
dec
mov
inc
cmp
push
int
cmpsb
int3
pushf
mov
movsl
xor
dec
std
inc
and
ss
push
mov
inc
ds
mov
add
or
filds
out
jmp
icebp
push
por
aam
dec
mov
jne
insb
xor
test
cld
inc
sti
pop
jne
pop
in
sub
push
stos
sti
aam
jne
das
fisubrl
sub
mov
dec
in
shl
nop
add
mov
test
mov
cltd
push
add
dec
rolb
sbb
stos
hlt
cmp
inc
std
cmc
pusha
iret
add
gs
push
loope
out
pop
push
pop
jmp
mov
cvtps2pd
int
faddp
or
cld
inc
push
repz
out
int3
pop
xor
addr16
mov
mov
sbb
scas
movsl
inc
fdivl
divl
xlat
shll
incl
nop
jo
jb
jmp
jo
sub
aaa
lock
aad
inc
sbb
stos
int
loope
pop
pop
std
mov
icebp
hlt
sub
cli
or
dec
ds
not
mov
push
lea
push
imull
jp
nop
push
js
ljmp
ret
out
fidivrs
out
ja
dec
or
and
hlt
xor
pop
cmp
inc
sarb
out
sbb
or
imull
je
clc
xor
imull
sahf
repnz
mov
subb
scas
cli
inc
lock
jle
inc
mov
repz
cli
lds
das
or
dec
jo
out
adc
pop
or
jmp
push
cmp
xor
rolb
mov
cmp
std
mov
pop
fnstenv
xchg
lret
and
mov
test
mov
sub
add
pop
dec
add
xor
jl
clc
and
jno
xor
imulb
xorb
scas
pop
pusha
mov
enter
xchg
adc
push
push
incl
in
jnp
pop
adc
ret
in
or
mov
cmpsb
out
cmpsb
out
push
sbb
dec
dec
imul
cmc
lock
lret
aad
mov
div
mov
dec
imul
gs
mov
lret
sarb
dec
push
mov
xor
cld
pop
lock
xchg
dec
sti
stos
sbb
xor
mov
pop
cmp
mov
add
sbb
mov
cmpl
popf
in
test
cmpb
lods
outsl
call
xlat
sahf
or
jo
xchg
inc
pop
ljmp
adc
push
bound
arpl
push
lods
add
jo
jmp
cmp
repz
roll
ljmp
inc
dec
imul
push
mov
push
mov
mov
adc
cmc
ds
xchg
xor
pop
adc
test
cmp
call
shrb
jp
push
outsl
add
je
inc
iret
fisttpl
out
scas
ret
push
mov
stos
mul
mov
sub
add
dec
subl
xor
push
jle
adc
stos
mov
xchg
push
aam
dec
call
jl
imulb
sbb
mov
pop
add
fistps
shr
fwait
mov
stos
mov
pop
push
out
cmpsl
cwtl
mov
mov
stos
mov
push
pop
mov
dec
xchg
mov
inc
jno
cs
push
loop
adc
xor
cmpsl
adc
xor
pop
stos
scas
mov
adc
movsb
xlat
add
mov
sbb
and
fidivrl
xor
cli
sbb
mov
lret
js
mov
mov
shrl
push
outsl
mov
lcall
push
sub
shlb
bound
mov
call
mul
add
and
dec
pusha
loop
jle
jl
je
stos
inc
cmp
sbb
lea
inc
nop
xor
loope
ret
pop
mov
push
mov
lret
pop
add
add
loopne
ljmp
mov
clc
jmp
fbld
push
andb
xchg
movsl
or
fsubrl
punpcklwd
xchg
ljmp
sub
ret
add
shlb
jmp
pushf
mov
xlat
lret
shrd
sbb
ja
daa
cltd
fs
adc
pcmpeqb
cli
rclb
push
add
xchg
and
xchg
dec
mov
xor
mul
mov
mov
clc
loopne
scas
xchg
sub
sub
test
cmp
out
jle
addb
fdivrl
jae
or
notl
cmp
add
mov
jp
movsl
rcrb
fld
scas
sub
add
sbb
loope
jne
xlat
lock
mov
addb
mov
gs
xor
push
push
mov
ret
mov
lock
decl
jo
sbb
pop
or
pop
add
jg
mov
or
adc
js
or
sub
add
in
js
out
negb
lcall
xor
xchg
xor
pop
pop
inc
adc
and
adc
data16
or
popf
clc
data16
sahf
push
iret
cltd
sub
cmp
cmp
xor
pop
jmp
push
jbe
cli
repz
fcmovb
adc
sbb
xchg
cmpsb
jl
lret
ss
test
nop
mov
sbb
pop
lea
cs
out
mov
pop
fisubs
pop
rol
arpl
mov
scas
inc
jle
stc
adcb
out
push
mov
icebp
fldl
shll
jns
loopne
mov
jecxz
xor
or
sbb
mov
cmpsl
sahf
icebp
popa
je
lahf
jl
mov
aas
hlt
aad
es
jg
dec
mov
stos
pop
add
leave
cmp
pushf
cmp
mov
xchg
dec
rorb
lahf
dec
and
in
xchg
stos
rclb
push
insl
pop
jae
das
mov
pushf
jbe
jp
hlt
cld
sub
js
popa
xchg
or
js
test
lods
out
adc
minps
sub
adc
sub
fmuls
push
and
dec
push
js
or
data16
jle
adc
add
call
divl
decb
popf
int
mov
or
mov
add
push
jbe
push
loop
movsl
xor
ljmp
and
aam
dec
scas
dec
mov
add
stos
cmp
push
das
daa
iret
out
jnp
pop
loopne
push
dec
into
pusha
ds
adc
push
add
orb
repz
xchg
cmp
aam
mov
mov
es
lods
ss
push
jge
mov
ljmp
stc
in
or
insl
scas
sbb
bound
lret
adc
insb
push
add
icebp
add
xchg
mov
iret
test
add
sub
lods
pop
mov
iretw
or
icebp
sbb
iret
cmp
icebp
adc
inc
js
out
shl
lds
pop
mov
cld
dec
adc
out
aad
and
push
push
mov
push
xor
lret
fidivrs
cmp
push
pop
mov
xlat
xor
mov
cmpsb
testl
into
sbb
insb
xchg
jmp
imul
lock
jb
movsb
and
ljmp
inc
fildl
cli
sub
lcall
jl
sbb
in
xchg
stos
add
xor
fsubrs
sub
push
aas
pop
ds
and
pop
adc
in
jmp
sub
lret
jb
push
mov
icebp
sub
mov
fcmovnbe
outsb
pop
in
pusha
test
data16
out
jnp
and
inc
rorl
xchg
adcb
daa
int
jge
rcrb
inc
push
pushf
loopw
cmpsl
jns
adc
in
scas
fnstenv
ss
mov
out
clc
push
imul
mov
add
and
sar
inc
mov
rorb
rcll
mov
jmp
lock
lock
and
mov
jns
mov
sbb
and
adc
push
nop
xlat
mov
movsl
push
shrb
xchg
pop
mov
pushf
in
call
add
ret
mov
icebp
or
sub
push
loopne
divb
fidivl
sbb
mov
fisubrl
ret
leave
dec
test
jl
jp
push
ss
adc
aam
and
enter
mov
adc
sbb
cli
cmc
imul
scas
outsl
jno
mov
lds
aad
xchg
pusha
fldl
mov
lret
jecxz
adc
or
push
cmp
rorb
rcrb
cmp
sub
pop
movsb
ds
mov
icebp
push
popa
jmp
mov
fidivrs
and
cmpsb
mov
xchg
in
and
cmpsl
xor
test
and
pushf
mov
arpl
aas
jb
rclb
pop
insb
pop
pop
das
dec
jnp
mov
dec
orps
aad
pop
ja
int3
cltd
in
lock
adc
roll
adc
js
push
and
xchg
repz
xor
xor
clc
sub
cmp
aad
jno
leave
les
repz
sbb
dec
and
shrb
mov
outsb
es
hlt
test
and
cs
hlt
andb
inc
xor
push
add
stc
xchg
mov
cmp
push
ret
push
lret
fcoml
sbb
mov
push
scas
xchg
int3
lcall
nop
lea
xchg
lock
adc
imul
jp
pop
iret
dec
add
add
hlt
mov
xchg
adc
adc
cmp
ret
adc
or
push
push
hlt
ljmp
les
movsb
scas
imul
lods
jle
idivb
fnstsw
shll
cmp
cmpb
jo
mov
aam
mov
jle
sub
pop
popa
push
adc
and
inc
mulb
add
hlt
jl
xchg
ss
adc
mov
enter
sbb
pushf
add
inc
xor
and
stos
pop
fwait
jl
sbbb
push
mov
pusha
xlat
sub
fsubrs
inc
mov
or
push
jo
ret
add
push
icebp
or
pop
xor
jae
shr
movsl
and
jp
adc
in
shrb
sub
adc
jae
add
add
fwait
insl
or
mov
ds
and
lods
sbb
subl
lds
jle
sarl
int
adc
xchg
sbb
cli
lret
cmp
cs
lods
fiaddl
into
sub
outsb
out
aaa
insb
into
mov
fcom
xchg
inc
incb
sbb
add
sub
dec
pop
daa
push
call
add
xchg
xor
mov
mov
repnz
fwait
lods
and
sar
dec
outsl
shrb
mov
scas
insb
stos
das
enter
push
or
cmp
test
xchg
add
les
dec
sbb
jo
cmc
loopne
cltd
xchg
popf
inc
adcb
pusha
mov
push
loop
mov
fsub
ds
inc
aam
sbb
push
fmulp
mov
pusha
lock
stos
jo
outsl
or
inc
das
in
xor
inc
mov
lret
orl
xor
call
sbb
cbtw
inc
jmp
and
push
mov
aaa
and
mov
shr
imul
jbe
mov
aas
mov
pop
iret
mov
lock
aad
outsl
scas
popa
or
cwtl
cmp
fiaddl
push
mov
rcrb
test
movsl
shl
fucompp
inc
mov
push
inc
sbb
shl
dec
lds
icebp
mov
or
and
insb
inc
sbb
test
push
pop
daa
sbb
cmp
clc
xchg
jne
mov
inc
imul
out
ljmp
add
dec
or
incb
mov
sbb
jle
mov
add
fidivrl
das
js
fcoml
shrl
pusha
mov
lahf
ret
int3
pop
sahf
add
dec
xor
mov
gs
pop
test
sub
pop
push
and
aad
sti
xlat
push
js
xchg
lret
in
test
mov
inc
jno
pop
add
std
and
pop
adc
pop
mov
mov
inc
enter
test
cs
int3
xchg
out
xchg
lret
ror
incl
es
je
clc
jg
nop
notl
push
in
pop
dec
jge
mov
insl
lret
push
clc
push
ja
and
inc
cmp
inc
mov
or
mov
jl
cmc
rcr
daa
push
in
sbbl
fs
negl
push
leave
ret
in
pushl
push
lret
push
xor
fistpl
ficompl
fistpll
push
out
jl
mov
iret
xor
lock
and
xchg
fwait
rcl
addr16
push
loopne
ret
jbe
cli
imul
or
popa
arpl
jmp
in
in
lock
fsubrs
fwait
push
push
cmp
xchg
icebp
xlat
xchg
and
pop
pushf
subl
adc
pop
imul
lret
inc
push
mov
in
inc
jbe
add
push
ss
dec
pop
in
jnp
adc
jno
outsl
popf
lret
lret
inc
int3
insb
stc
pop
adc
mov
inc
dec
xor
pop
cmp
stc
cmp
lahf
mov
int
cld
dec
or
cmp
pop
mov
xchg
in
ljmp
rol
int3
cwtl
call
or
lds
lret
inc
push
in
inc
pop
push
or
or
fbstp
push
not
inc
mov
dec
mov
sbb
sub
mov
inc
mov
add
mov
sbb
adc
dec
sub
inc
sub
inc
add
or
mov
jns
fchs
pop
pop
movsl
add
movsb
dec
cld
rol
dec
mov
ret
inc
shrb
call
orb
je
mov
rorb
xor
fimull
outsb
sub
call
mov
into
ja
or
push
cs
mov
mov
icebp
imul
clc
mov
jecxz
in
mov
icebp
rorb
mov
push
mov
in
inc
js
idivl
sub
xlat
dec
mov
cld
adc
mov
and
xchg
sub
cli
dec
sub
push
adc
not
ret
mov
scas
xchg
hlt
out
roll
mov
or
mov
out
pop
cmp
pop
iret
imulb
fisttps
mov
cmc
pop
std
jl
jo
rcl
jne
push
pop
mov
xchg
mov
add
inc
sub
popa
loop
pop
push
adc
sbb
lcall
les
sti
mov
mov
inc
push
mov
sbb
lock
dec
push
dec
shl
insb
insl
icebp
fidivs
movsb
mov
inc
jno
idivb
idivl
fsubrs
dec
fsubrs
dec
dec
push
mov
fcomi
push
or
pop
cld
add
inc
cltd
xchg
jne
cmp
je
ret
push
push
mov
shlb
insl
mov
xor
imul
lock
lods
dec
inc
dec
jecxz
add
sbb
cs
es
neg
int3
dec
scas
cmp
repz
sbb
pop
rolb
mov
jmp
outsl
dec
das
call
cmpsb
dec
add
enter
cmc
xor
inc
out
cmp
push
jns
stos
adc
and
mov
imul
push
in
pop
ds
lods
leave
repnz
add
xor
push
dec
pushl
dec
clc
jbe
ret
jne
inc
lods
push
insl
imul
jg
popa
and
inc
dec
push
pusha
mov
and
repnz
out
add
dec
inc
iret
daa
xchg
shlb
or
cmc
andl
mov
cltd
cs
cmp
popf
lods
xor
xor
int
pop
fs
cmp
insb
in
rcrb
icebp
cltd
fstpt
cmp
ljmp
imull
xor
mov
stos
out
leave
in
sbb
sti
lock
les
xchg
jg
add
add
hlt
sahf
push
testb
mov
shl
ljmp
jo
fwait
adc
lret
sbb
xchg
xchg
push
mov
popa
inc
dec
mov
jge
lret
test
in
mov
jle
lods
sub
push
dec
jb
mull
iret
orl
push
push
out
jmp
inc
inc
cs
cmp
mov
test
pop
divb
mov
xchg
lock
mov
pop
xchg
sub
inc
inc
adc
inc
adc
add
pop
es
mov
xlat
sbb
inc
mov
loop
push
and
int
push
cmpsl
sub
inc
hlt
cmpsb
inc
xor
rcrl
out
inc
ret
dec
insb
xor
add
cmpb
rorl
je
mov
add
sti
add
lret
adc
inc
fwait
ljmp
mov
insb
pop
mov
es
sbb
enter
add
or
test
iret
cwtl
inc
sub
pop
push
ljmp
xor
fiadds
sbb
repnz
addr16
lock
sbb
jo
loop
lret
dec
div
neg
dec
push
lock
leave
decb
arpl
jmp
add
sbb
lret
out
sbb
push
dec
ficoml
xor
xchg
and
ljmp
and
imul
cmpsb
dec
int3
push
shrb
or
in
in
cmp
or
les
xor
popa
das
test
test
addr16
xchg
lock
fsubs
insl
dec
mov
icebp
mov
int3
mov
call
add
fildl
popa
ds
fwait
negb
inc
stc
gs
js
jl
push
dec
pop
gs
fcom
shlb
sub
ret
subl
xor
pop
popa
lahf
dec
imul
inc
cwtl
je
ret
xor
add
js
jo
push
add
pop
fsub
in
xor
arpl
or
jp
push
push
push
xor
cmp
addl
dec
outsb
inc
in
insl
add
or
mov
cmpsb
sbb
mov
ljmp
mov
hlt
bound
pushf
arpl
cmp
add
xlat
loopne
push
insl
dec
mov
rcrb
push
push
pop
inc
push
mov
push
popf
lock
sbb
cwtl
loopne
adc
add
mov
jmp
and
hlt
repnz
fstl
adc
popa
inc
pop
or
push
adc
push
imul
ss
hlt
push
xor
dec
dec
mov
or
xor
jmp
subb
pop
out
xchg
push
ja
sub
or
idiv
xor
test
and
pop
push
lock
rclb
dec
arpl
imul
pop
cmp
sahf
sub
iret
inc
enter
cmp
xor
out
pop
mov
add
idiv
divb
push
or
lock
push
out
or
mov
sub
loopne
pop
pushl
ret
sbb
push
mov
push
cmp
scas
mov
pop
sahf
outsb
dec
xchg
in
int
mov
mov
stos
xor
push
insb
sub
dec
out
jns
add
shl
push
inc
dec
orl
mov
or
or
aaa
out
fwait
movsb
push
clc
lock
cmpb
cmp
ds
mov
mov
jnp
dec
addps
dec
mov
rcrb
in
daa
xor
test
and
cltd
push
icebp
jecxz
ret
fidivs
arpl
inc
push
xchg
push
shl
jb
adc
inc
pop
push
es
pop
mov
jmp
cmp
enter
lret
xchg
mov
out
outsl
imul
sbb
inc
push
cs
or
and
int
shl
xlat
xchg
adc
leave
xor
lea
push
jg
or
cmp
cmp
xorl
pushf
jmp
sbb
inc
test
outsb
jns
add
jle
xchg
fcmovnbe
popf
jne
outsl
push
rorl
stos
push
rol
add
sub
rol
jmp
cmc
add
into
ret
push
insb
ja
xor
or
inc
mov
lea
out
fxch
inc
push
lcall
sbb
pop
add
or
fiadds
dec
adc
std
mov
push
rclb
hlt
ss
sub
sbbb
aaa
ja
add
sbb
pop
dec
inc
cmpb
inc
sbb
add
rcll
enter
inc
rorb
ret
mov
sbb
adc
repz
aad
adc
pop
insl
mov
mov
imul
and
push
pop
imul
push
push
aaa
jp
fsubs
inc
or
cmp
push
pop
into
cwtl
adc
sahf
lock
dec
pop
add
mov
sub
enter
push
xchg
fs
xchg
test
sub
cwtl
aaa
ja
mov
movsl
push
mov
dec
cmp
test
cmp
mov
cmp
in
pop
stc
mov
mov
or
inc
dec
add
inc
fcoms
jge
mov
negl
aam
jne
push
inc
dec
out
cmp
fisubrs
inc
sbb
aam
jne
mov
xchg
dec
das
popf
xor
rorl
divb
mov
inc
decl
push
jae
xorl
sbb
test
je
shll
mov
js
push
mov
push
xor
mov
dec
js
or
push
fists
clc
mov
push
xchg
call
xchg
mov
or
int3
push
loope
jne,pt
hlt
jg
xor
push
mov
push
add
sub
loope
fxtract
mov
adc
shrb
adc
mov
cmp
ret
sbb
pop
push
cwtl
sub
andb
cld
rcl
or
mov
sbb
jae
lock
data16
sub
dec
push
adc
sub
jb
push
jg
cld
cmp
fucomip
dec
cld
insl
dec
push
cmp
mov
decl
int3
or
xchg
rorb
push
clc
sub
cwtl
es
mov
out
mov
xchg
or
int
dec
xchg
cmp
inc
ffree
icebp
mov
jp
test
cmc
and
jl
adc
xchg
ja
popa
dec
xor
jno
mov
cmp
mov
lds
dec
or
ret
sbb
out
movl
jmp
push
push
dec
movl
lret
jno
int
in
sbb
inc
xor
sub
mov
clc
aaa
xor
loopne
or
mov
in
movsb
ret
mov
imul
movsb
pushf
push
push
mov
repnz
and
cmp
loopne
or
lahf
in
div
lret
mov
pop
inc
gs
add
mov
push
pop
nop
call
xor
fistpl
jb
addb
imulb
mov
test
cltd
push
ds
adc
pop
add
neg
mov
add
js
mov
in
mov
cmp
out
mov
mov
gs
in
out
mov
mov
jne
push
add
or
dec
sti
or
shlb
in
sbb
ret
imul
inc
gs
adc
and
sbb
add
imul
or
mulb
shrl
clc
mov
shl
adc
push
sub
adc
adc
pop
out
fcoms
enter
fisttpl
sub
ds
xchg
mov
inc
and
hlt
test
sti
push
jl
aam
repz
std
andl
sti
mov
lret
mov
xlat
xchg
outsl
dec
dec
inc
popf
scas
inc
ds
call
mov
jmp
mov
jnp
sbb
andl
mov
cmp
cli
xor
mov
push
test
loope
sbb
mov
push
mov
movsl
sbb
outsl
cmp
push
sbb
arpl
push
loopne
xor
mov
andl
push
jne
outsb
push
adc
xchg
lock
push
jg
and
aas
call
lock
push
std
add
add
test
fcomps
into
popa
add
mov
add
add
jbe
mov
pop
inc
test
testb
adc
dec
clc
iret
sbb
dec
js
xchg
test
lret
iret
add
push
jg
fstl
bound
xchg
sahf
dec
scas
das
cli
sbb
into
or
sbb
scas
insb
push
or
aaa
push
in
sub
xor
repnz
jmp
push
lods
dec
fwait
xorps
aam
push
lcall
push
repz
lahf
mov
dec
push
push
mov
cmp
lretw
mov
mov
cmp
scas
stc
sub
insl
xchg
shlb
rcrl
jno
out
add
out
inc
scas
rolb
xlat
xor
xor
or
cld
stos
rolb
jne
das
jbe
jb
shl
and
sub
push
xchg
adc
nop
push
add
add
addb
xor
bound
addr16
pushl
add
popa
jns
je
add
jb
push
push
push
dec
je
outsl
mov
jo
insl
arpl
js
addr16
in
inc
and
mov
add
jne
adc
call
push
xchg
or
mov
xor
ss
arpl
je
push
je
push
insl
pop
add
mov
dec
andb
fistpll
imul
insb
dec
inc
add
imul
push
popa
push
mov
xor
imul
push
pop
jne
inc
inc
dec
in
aas
sti
xorb
jo
arpl
loop
cmp
xor
xor
cli
xor
xor
xor
cld
out
inc
mov
mov
movsl
cmpsl
add
in
jl
testl
lret
aas
add
push
mov
outsl
je
rorb
arpl
lds
sbb
jl
inc
scas
and
xchg
pusha
jmp
enter
cmc
xor
nop
adc
mov
lret
xor
mov
jae
pop
push
mov
xchg
lock
jge
push
and
mov
stc
xchg
add
dec
cmp
es
shlb
xor
add
cmp
xchg
jle
ja
int3
add
adc
xchg
sbb
fdivrp
inc
clc
mov
add
mov
add
adc
ret
jge
cmpl
add
sti
sub
ficomps
imul
inc
cmpsl
addb
xchg
lahf
or
push
add
test
out
mov
add
inc
mov
in
test
incb
sbb
inc
ret
pop
ds
pop
mov
aad
cmc
add
fstp
jo,pn
sbb
in
mov
das
fldl
mov
adc
xor
cmc
pop
pop
pop
in
fsubrs
arpl
es
pop
mov
mov
dec
mov
mov
leave
subl
sub
add
in
xchg
shlb
jmp
push
in
test
lock
jo
loope
sub
adc
xor
pusha
or
cs
xchg
push
inc
mov
inc
stos
cmp
loop
lods
adc
push
imul
mov
jnp
adc
pop
subb
xchg
sub
and
lods
mov
outsb
pop
cmp
stc
sbb
cmpsb
xor
movsb
and
xor
aad
mov
add
out
iret
out
dec
push
addr16
push
mov
fwait
sub
jae
icebp
outsb
ffreep
lock
addl
and
aas
out
ljmp
and
xchg
fiaddl
cmp
jge
ss
clc
push
les
cmp
sub
push
add
mov
sbb
pop
pop
push
out
in
mov
loope
adc
fstps
xchg
add
adc
out
cs
add
mov
or
std
outsb
fadds
ret
sti
mov
inc
insb
jg
inc
mov
mov
mov
add
pop
test
in
jbe
fimull
cmp
add
les
notl
push
xchg
mov
lret
call
cmp
add
jne
pop
outsl
or
sbb
jge
adc
push
jne
mov
les
out
std
call
dec
dec
add
mov
subl
dec
jmp
cmpsb
repz
orb
mov
scas
loop
lods
sarl
jmp
pop
push
shll
ljmp
ret
aam
ret
cmp
xchg
cmp
cs
sub
cmp
add
sbb
jp
push
add
jge
and
cmp
insl
push
xlat
push
xlat
out
pop
mov
add
fiadds
push
repnz
test
push
fsub
jbe
aad
xor
stos
sbb
push
js
jae
xor
fidivrl
add
nop
push
imul
adc
int3
pop
push
out
xor
cmp
fwait
mov
lods
xchg
inc
cmp
push
js
add
inc
mov
popf
jno
jns
or
push
int
clc
adc
add
and
subl
sub
cmp
add
adc
iret
and
jmp
mov
call
pusha
jg
ret
xchg
rcll
and
divb
scas
divl
push
push
jle
ret
inc
push
mov
fadd
arpl
xor
xchg
mov
xchg
insb
xor
push
jecxz
leave
or
add
test
je
cli
outsb
in
outsb
and
add
sub
xchg
and
add
and
or
mov
test
rcrb
sub
mov
pop
mov
mov
xor
mov
cltd
jo
sub
ret
push
push
dec
inc
aaa
lds
lret
clc
inc
xchg
or
lds
pop
push
pop
sbb
inc
adc
lea
dec
aaa
lcall
dec
push
ror
adc
addb
mov
sbb
in
bound
repnz
mov
jge
shlb
push
sbbl
out
xor
lcall
scas
lret
outsb
add
mov
orb
cmc
or
loopne
mov
xor
sbb
push
cmpsl
xor
std
jno
in
loop
xor
mov
mov
sti
es
lahf
ret
and
pushf
mov
mov
sbbb
inc
out
jg
jmp
cmp
mov
sbb
sub
call
in
push
cmp
int
add
sti
out
inc
xchg
xor
dec
xor
xchg
xor
sub
ret
add
adc
shl
gs
iret
mov
cmp
imul
sub
loope
lock
shr
add
cmp
cvtps2pi
add
and
fucom
mov
fldt
sub
bnd
icebp
mov
adc
lds
push
sub
jo
jecxz
jle
lock
sbb
lock
jl
jge
test
add
imul
xchg
cli
clc
je
add
loope
shrl
lret
push
mov
xchg
pcmpgtb
dec
and
push
mov
call
cwtl
decb
icebp
dec
std
test
in
rcll
inc
add
cli
and
or
add
mov
clc
lds
and
sbb
je
push
mov
gs
and
adc
cwtl
pop
sbb
xchg
int3
lret
sbb
xchg
jle
add
movd
inc
leave
bound
pop
fidivs
mov
push
scas
pop
test
dec
dec
test
in
pop
pushf
js
fcmovnb
add
jbe
inc
je
insb
ss
lahf
pop
lock
push
data16
cmpsb
test
cmp
jb
jbe
pushf
ficoml
into
add
aad
pop
or
push
mov
repz
ljmp
loope
jnp
mov
rorb
pop
scas
cmc
mov
lods
add
push
out
add
pop
inc
les
mov
lahf
mov
sub
roll
cmp
mov
cli
addr16
mov
pop
mov
cli
add
cmpsl
clc
movsb
ljmp
out
push
inc
popl
push
imul
bound
pop
add
sbb
jo
lret
adc
shlb
pop
mov
stos
mov
push
inc
loopne
aas
push
push
je
add
xor
mov
enter
out
pop
pop
hlt
clc
inc
jge
dec
in
sub
cmp
pop
in
insb
xor
xorb
inc
cmpsl
lahf
xchg
aam
sbb
out
out
pop
dec
push
jb
das
ret
int
std
into
add
push
adc
or
mov
rcrb
mov
sahf
mov
push
repz
cmp
mov
and
xchg
clc
jge
nop
clc
test
xor
dec
dec
xorl
jecxz
test
mov
xor
cs
in
pop
lret
pop
add
jo
ja
jbe
jl
cwtl
pop
orb
mov
pop
add
xor
jp
jge
aad
out
add
scas
and
add
push
test
lcall
push
sbb
cmp
icebp
fisubrs
push
or
inc
push
adc
xchg
fistps
sbb
add
inc
ds
inc
add
loope
inc
orl
add
in
add
and
xor
test
fmull
adc
xchg
shrl
and
xor
xchg
pop
fmul
sbb
das
jp
fmuls
inc
in
ret
iret
mov
pushf
out
das
movsb
push
or
mov
and
xchg
rcrl
jg
aaa
mov
out
sbb
and
imul
fstpl
insb
hlt
sbb
cli
jecxz
shll
mov
push
insb
pop
sarb
subl
cmp
into
push
ret
fadds
pusha
jo
adcb
inc
and
sbb
rorb
lahf
and
adc
ret
cmpb
sahf
js
adc
fnsave
cmp
divl
cli
ret
mov
xor
int
sbb
lods
rorl
pop
xchg
ja
xor
or
pop
fildll
sub
je
sti
xorb
push
aas
outsl
add
adc
or
rcrb
inc
push
clc
loop
sub
jbe
inc
or
and
jp,pn
sub
je
jbe
aaa
test
fistl
popf
in
xor
mov
inc
jne
inc
xchg
hlt
clc
sbb
sub
fbld
inc
inc
movsl
mov
cmp
mov
jb
push
sarl
faddl
pop
mov
mov
adc
add
mov
adc
inc
insl
in
out
xlat
pop
xchg
add
and
sub
pop
pushf
out
xor
aas
adc
pop
stos
and
es
data16
shll
add
or
mov
clc
mov
xor
cmpl
sbb
pop
or
jg
repnz
adc
outsb
rcrb
ds
arpl
dec
pop
mov
loop
jecxz
xor
mov
pop
mov
fidivs
dec
mov
clc
sub
es
cmp
add
mov
ja
fimuls
pusha
fbld
rolb
pop
fisubs
push
sbb
aas
mov
cli
push
test
insb
jb
rcrl
pop
es
dec
xlat
into
mov
jl
sbb
xlat
roll
mov
mov
loope
and
push
xchg
inc
sbb
gs
sbb
push
xor
xor
or
dec
jl
cli
add
mov
dec
ret
cmp
inc
int3
je
outsl
xchg
std
lods
pop
xchg
sbb
pop
pop
clc
bound
stos
fldenv
adc
mov
test
bound
add
jle
pop
addl
sub
dec
or
loop
stos
cs
mov
and
lea
stos
icebp
mov
adc
push
ljmp
lds
loope
add
xchg
popa
cltd
jb
ljmp
cmp
lret
mov
outsl
sbb
pop
sbb
lods
nop
cmpl
hlt
sbb
lahf
sub
adc
insb
loop
push
mov
clc
inc
lcall
xchg
leave
shll
jo
stos
aaa
jge
hlt
sbb
shll
into
sub
shl
jle
pusha
and
sbb
or
pushf
and
or
push
sti
clc
popl
cli
les
aad
shll
push
mov
pusha
sbb
mov
rcll
push
jno
xor
sub
mov
outsl
cs
xor
adc
mov
ja
push
les
fsubrs
mov
cltd
ret
icebp
jnp
int3
dec
mov
xchg
and
push
lock
in
das
fnstcw
sub
repnz
popa
ljmp
test
test
lds
int3
popa
stos
ret
pop
incb
jne
sbb
xchg
mov
mov
cmp
insb
mov
mov
ficoms
dec
adcl
pop
test
ljmp
xchg
or
leave
in
push
shrb
stos
xchg
xchg
punpckhdq
out
xor
test
loopne
jmp
insl
pop
wbinvd
repz
ds
popf
ds
xlat
call
push
inc
mov
popf
hlt
mov
loop
and
das
sub
psubusb
loopne
xor
fsubr
push
inc
enter
add
or
arpl
les
cmc
mov
add
and
sbb
xor
pop
push
clc
call
cli
ret
test
or
push
insb
stos
adc
and
lods
sti
mov
jp
cmpsl
cmpb
sub
cmc
clc
mov
test
repz
int
aam
jg
pusha
mov
xchg
cmp
sub
sti
lret
cmp
loope
mov
mov
mov
movsl
mov
gs
loopne
or
lods
out
cli
dec
or
sbb
popa
jg
adc
orb
fs
jmp
ljmp
sysret
mov
int3
or
xlat
push
dec
jae
and
in
mov
es
mov
movsb
jnp
mov
fucom
add
jl
jecxz
out
pop
push
lock
cmp
lcall
addr16
xchg
ds
mov
imul
out
inc
xchg
test
pop
sbb
sub
ljmp
test
add
das
gs
cmpb
push
jl
pop
pop
test
mov
and
mov
aad
inc
dec
mov
js
inc
insb
push
jl
inc
jg
sbb
xor
jmp
fmulp
mov
jo
adc
popa
or
jge
and
push
sub
mov
loop
mov
inc
test
pop
mov
mull
mov
stos
imul
sahf
das
mov
movl
inc
sbb
jle
addr16
es
rorl
mov
cld
loopne
jp
cmp
fildll
sti
push
sub
dec
add
cs
insl
cmc
mov
out
xor
xlat
or
cmpsl
xor
push
sbb
inc
pop
fimull
cmp
cmp
fisttps
ss
dec
and
mov
lock
lds
mov
mov
lahf
sbb
inc
fsubs
add
adc
neg
in
jbe
jmp
lret
sub
jo
and
dec
les
jecxz
iret
and
fisubl
push
orb
xchg
lret
xchg
jno
cmpsb
xchg
ds
pxor
jp
or
add
adc
out
jle
clc
or
dec
cmp
push
lock
push
cmp
xchg
dec
cmp
cmpsb
out
mov
aaa
into
jb
sub
add
ret
test
dec
ljmp
lret
std
jbe
add
jg
inc
aad
repnz
sub
push
mov
xchg
xor
mov
inc
push
aad
sbb
insb
mov
adc
pop
and
xor
mov
cmp
jo
cs
push
stos
ljmp
mov
mov
pop
movsl
sub
add
rcrb
cmpsb
mov
push
in
inc
enter
in
jle
add
lock
sbb
sarl
xor
ja
add
cli
sub
sbb
inc
loopne
ss
repnz
xchg
ret
or
mov
inc
stc
lret
adc
adc
push
push
push
or
sbb
ljmp
test
jp
cmpsl
or
adc
mov
subl
in
xor
sbb
xor
xchg
ds
in
dec
add
ss
in
mov
mov
adc
js
iret
mov
les
inc
mov
int
mov
mov
into
js
std
rcll
push
cmp
repnz
jo
das
cmp
or
lods
hlt
mov
pop
xchg
and
cvttps2pi
mov
bound
sub
filds
jl
shlb
sti
mov
pop
ds
ljmp
or
iret
je
cwtl
add
cmp
jecxz
aad
adc
cmc
mov
mov
mov
idiv
cwtl
xchg
cmpsl
xchg
mov
lret
fsave
ds
and
lea
mov
les
mov
sti
enter
cmp
cld
fnsave
push
shlb
sarl
loop
addr16
orb
mov
cld
jne
stc
ret
mov
scas
inc
int3
cmp
pop
add
pop
or
rorl
dec
sub
xchg
pop
mov
mov
pop
shrb
cld
and
push
inc
fmuls
std
cmpb
pop
or
iret
ljmp
sbb
ljmp
int3
cmp
push
sbb
jb
mov
sti
push
add
incl
mov
loopne
fdivrs
adc
cwtl
scas
sbb
pop
das
pop
int3
mov
push
add
push
mov
test
daa
pop
pop
pop
dec
push
into
in
mov
jle
sbb
pushf
fdivs
daa
and
fsubrs
inc
fs
push
clc
lret
mov
fisubs
lahf
ja
adc
es
mov
movsb
jg
adc
repnz
mov
mov
dec
cmpl
push
iret
cli
out
mov
mov
xchg
cmp
push
call
idivl
xchg
fs
sub
dec
mov
retw
inc
xlat
jo
sbb
or
test
ljmp
inc
inc
pop
cs
stos
cmpsb
mov
sbb
or
stos
sti
rolb
inc
or
test
pop
fiaddl
inc
pop
je
push
hlt
jmp
sbb
jne
xchg
xchg
pop
sbb
test
bound
dec
push
repz
loope
lret
mov
loop
add
andl
aaa
lcall
push
xchg
cli
ja
push
push
jl
arpl
stos
mov
xorl
xchg
sbb
mov
jo
jmp
mov
push
pop
iret
aas
mov
sub
pop
push
data16
ret
cmpsb
aam
in
xor
fsubl
sub
inc
adc
mov
nop
insb
fwait
push
add
cmpsl
arpl
dec
cmp
xchg
push
test
inc
add
dec
add
xor
lods
fnstsw
add
adc
ret
call
lea
lock
pop
test
mov
sahf
pusha
dec
xchg
jo
add
popf
flds
jg
into
jo
scas
je
mov
cli
stc
xchg
sub
sub
lds
push
les
cmp
push
jle
jp
sub
mov
mov
cs
cmpsb
mov
shrb
push
or
xchg
je
in
lock
dec
add
lock
push
push
cmpsb
push
out
pop
movsb
pop
push
jecxz
ss
jbe
int3
call
clc
std
std
xor
cmp
lds
or
push
dec
rolb
adc
mov
addl
cld
mov
adc
enter
jp
mov
push
std
pop
lea
std
and
aam
test
push
mov
ljmp
testb
nop
mov
xor
adc
pushf
jg
icebp
or
iret
inc
inc
fs
adc
cli
xor
sti
sbb
mov
aas
add
loop
shl
mov
cmp
add
dec
fldt
sbbl
iret
jno
adc
cwtl
out
add
adc
push
mov
pop
loop
inc
cmp
pop
push
mov
popa
and
pop
shrb
xlat
test
test
pop
jle
stc
iret
out
mov
add
and
and
aam
in
mov
rorl
jb
call
gs
sub
jp
clc
adcb
jmp
adc
clc
dec
jbe
lret
or
into
push
push
mov
ljmp
in
lock
push
loop,pt
adc
daa
jl
mov
xor
push
fbstp
shl
orl
and
jle
test
fmul
adc
inc
jne
fnstsw
xchg
inc
loopne
ret
sub
into
insl
rolb
les
fs
pushf
loop
filds
popa
into
pop
nop
fldt
jmp
rolb
pop
aam
cmp
sahf
xchg
shll
add
add
loope
sub
adc
jp
pop
enter
xchg
push
and
adc
out
outsl
adc
adc
stos
ret
jge
cli
inc
cmpsl
movb
icebp
in
andb
popa
push
ja
push
lock
jbe
and
push
mov
add
pusha
fisttps
movsl
jge
jle
shlw
dec
ret
sbb
and
and
inc
or
adc
js
sub
scas
inc
pop
pop
loope
aam
lcall
ret
stos
aaa
mov
add
cmc
cld
mov
cld
add
inc
ret
loope
xor
adc
adc
xchg
mov
xor
sbb
xchg
call
cmc
nop
and
ss
inc
lock
shl
pusha
popa
ret
mov
popa
or
sti
or
pop
add
mov
xlat
fadd
inc
fldl
je,pn
bound
fsubrl
jp
ljmp
mov
jp
mov
int3
pop
pop
loopne
fcomps
sahf
test
jns
push
scas
or
xor
movb
add
jo
sub
arpl
sub
test
pusha
sub
out
push
lret
scas
mov
subb
pop
bnd
jnp
xor
hlt
cmc
dec
ret
xor
mov
call
jne
sbb
jbe
in
xor
rolb
cld
add
orb
or
lock
notl
add
je
pop
add
cmpsl
pop
mov
mov
clc
decb
adc
adc
mov
shrb
sub
push
jl
ja
push
int3
les
les
cwtl
std
cwtl
mov
fidivs
jmp
pop
sub
rcl
dec
ret
sbb
fcoml
xor
ret
mov
add
adc
hlt
pop
mov
lea
loopne
loopne
pop
enter
cmpsb
sahf
xchg
dec
xor
dec
test
xor
xchg
mov
mov
cmp
inc
mov
lret
rorl
outsl
cmc
jo
xlat
cmpl
xor
lds
jl
subl
cli
inc
mov
mov
pop
dec
enter
cmp
push
pop
inc
dec
popf
jp
mov
scas
fisttpl
pusha
in
lods
test
je
dec
and
xchg
insl
popf
lock
sbb
pop
cmp
stos
inc
ret
outsb
enter
pop
add
dec
sbb
pop
test
lea
adc
repnz
shll
jp
popf
imul
inc
pop
pusha
xchg
push
popl
aad
cmp
cmc
dec
ret
xchg
imul
mov
jge
push
cli
adc
out
shlb
fidivrl
fs
imul
movsl
mov
insb
movaps
cli
mov
shll
rcrb
std
push
repnz
movsl
cmp
mov
xchg
sbb
adc
push
push
sbb
jo
xor
jb
mov
sub
test
mov
mov
xchg
stos
cmp
and
push
pop
lock
mov
divl
push
ja
mov
mov
shlb
hlt
ret
xor
enter
ljmp
cmp
sbb
testl
les
imul
sbbb
or
test
mov
jl
lea
out
mov
xor
mov
mov
sub
xor
dec
icebp
mov
ss
mov
pusha
in
xchg
adc
push
into
inc
xlat
aad
loopne
cmp
lret
and
and
push
ja
add
and
call
adc
mov
sub
rcll
orl
push
dec
xor
out
sub
xchg
shlb
insb
aad
jae
cs
and
test
loope
in
js
dec
fs
mov
daa
xorb
pop
sbb
lock
pop
lock
xchg
fsin
call
enter
shr
add
cmp
pusha
add
aad
cwtl
lock
pop
add
ja
pop
fimull
fwait
aas
cs
cmpb
sbb
mov
out
pop
subb
push
jmp
mov
sub
jmp
iret
mov
push
out
or
inc
in
and
jo
icebp
xchg
das
or
out
scas
rclb
scas
ret
add
les
or
inc
test
add
cmc
pop
mov
jmp
jne
pop
test
sbb
in
push
addl
ficomps
jle
hlt
lds
arpl
test
inc
cltd
test
cmp
adc
mov
adc
shrl
mov
cs
add
std
outsb
jno
leave
add
push
cli
ja
mov
gs
pop
sti
add
in
mov
and
aam
fiadds
call
push
incb
xlat
sbb
mov
inc
mov
push
sahf
adc
adc
ret
hlt
pushl
nop
cld
repnz
lock
adc
push
or
push
das
mov
cmpsl
aam
out
mov
mull
mov
mov
dec
pop
mov
push
push
xchg
jecxz
lods
adc
mov
leave
std
ret
idivl
fwait
push
mov
adc
imul
fistps
loop
xchg
mov
jl
ja
or
dec
inc
cmpl
rcrl
dec
inc
subb
pop
push
fstl
pop
mov
das
imul
ljmp
sub
lods
int3
mov
mov
test
shl
push
dec
mov
lods
cmpsb
jbe
jb
rorl
dec
push
mov
and
pop
sbb
xchg
jne
inc
pop
lods
xor
aas
push
out
popa
sub
xor
xor
pushl
les
mov
pushf
dec
xchg
roll
dec
mov
jge
cmp
fdivl
rclb
insl
pusha
scas
sti
xor
adc
insl
lret
push
es
jo
adc
fsubs
pushf
test
lods
jbe
in
adc
mov
push
nop
addr16
nop
clc
pop
mov
decl
add
js
xchg
pop
add
sbb
pushf
bound
pop
loop
dec
mov
ret
je
repz
ffree
aas
and
rorb
mov
pusha
fdiv
std
stc
jae
test
and
push
jb
mov
pop
icebp
and
imul
and
cmp
mov
pop
movsb
clc
shll
fistpll
jmp
jb
inc
xor
adc
dec
xchg
and
adc
push
in
adc
faddl
aam
cmp
dec
pop
cmp
cltd
jbe
pop
jl
sti
adc
insb
mov
test
shl
js
mov
sahf
ds
xchg
push
push
hlt
xor
in
pop
pop
sbb
clc
inc
mov
aas
and
icebp
sub
iret
js
popf
andl
cmp
insl
pop
iret
lock
pushf
jnp
icebp
or
xlat
and
mov
inc
in
xchg
jl
push
and
jge
add
sub
lock
sbb
dec
pop
add
jbe
mov
decb
jl
push
add
dec
xor
cmc
shr
int3
mov
pop
sub
loopne
pop
cmp
sarl
and
mov
add
xor
jle
cmc
push
pusha
mov
add
push
inc
addb
nop
imul
mov
mov
out
fnsave
stc
or
not
addl
popa
cld
push
outsl
fdivrs
pop
xor
shlb
cli
pop
cld
cmp
fsubl
push
imul
jb
push
mov
mov
cli
jge
and
mov
sbb
es
add
sahf
mov
add
jge
ja
cs
or
inc
rclb
dec
dec
out
sbb
lods
sti
push
cmpsl
inc
clc
jl
sti
loop
imul
pop
test
rcll
mov
das
loope
adc
cmpsb
sbb
xchg
pop
andb
xor
cwtl
and
ret
shl
scas
ds
mov
dec
push
mov
sub
adc
daa
jo
dec
mov
mov
sub
mov
outsb
cs
mov
imul
bound
icebp
dec
jne
pop
cs
or
addr16
jle
ds
xor
mov
leave
pop
jno
push
les
mov
ds
or
xchg
int3
dec
adc
xchg
popa
flds
mov
roll
jge
rorl
dec
sbb
or
jns
add
inc
scas
push
xchg
pop
cmp
jmp
sbb
mov
repnz
test
pop
cmp
jecxz
sbb
nop
adc
dec
sub
fs
test
cli
mov
mov
push
sub
push
push
cli
ds
cmp
and
cli
icebp
movsb
pop
fucompp
dec
insb
dec
mov
outsl
loope
ret
aas
push
fbld
adcb
shll
mov
sbb
push
mov
cmp
fcomip
jmp
test
pusha
and
adc
mov
xchg
lods
push
cmp
cmpsb
in
xor
idivl
add
xor
xchg
jb
rcll
jo
mov
push
adc
lret
fiadds
add
inc
movsl
dec
add
fbstp
nop
loopne
dec
es
pop
andl
dec
out
fbld
ficomps
add
and
inc
add
mov
jb
inc
pop
jno
rol
mov
shr
inc
mov
pop
sbb
push
mov
mov
jnp
pop
mov
out
in
in
mov
out
addr16
test
jle
adc
add
out
inc
fwait
cmp
fildll
mov
repnz
imul
or
insb
pusha
in
inc
jp
adc
lcall
mov
notl
subb
dec
adc
push
sub
sub
lods
pop
cli
xor
outsl
sbb
mov
xchg
subl
dec
jecxz
push
add
scas
mov
sarl
pushf
loopne
fwait
fwait
aam
push
in
cmp
pushf
fs
pop
in
fcmovne
shrb
cwtl
add
xor
jg
in
jno
mov
and
dec
popa
mov
adc
pop
int3
jo
pusha
loope
adc
xor
rcr
jp
cmp
mov
or
push
out
andb
sub
jp
and
cmc
cmp
fstpl
mov
ja
pop
mov
ret
mov
out
sub
cmpb
icebp
push
pop
je
push
jae
in
rcl
dec
icebp
sub
pop
enter
fwait
pop
rcrb
mov
roll
add
cmp
test
outsb
jl
clc
subl
rcrl
or
dec
outsb
cwtl
pop
fdivl
fucomip
in
aam
pop
loope
pop
xchg
gs
addr16
fcoms
xor
cs
inc
sub
stc
xor
jnp
pop
orb
and
add
sub
mov
pushf
add
lret
inc
insb
jne
imul
or
push
lea
and
mov
push
in
sbb
stos
mov
adc
xchg
jl
jle
pop
mov
jbe
fidivl
and
mov
sbb
dec
rcr
gs
outsl
xchg
mov
int
mov
push
cmp
nop
sub
push
test
dec
xor
js
cs
loope
adc
movsb
or
les
sub
jae
add
inc
adc
pop
loopne
clc
js
push
shlb
jle
outsl
cmp
mov
xchg
xlat
js
insb
pop
popa
test
nop
addr16
fs
adc
pop
cmc
icebp
ss
push
fisubs
ds
dec
std
xchg
lcall
lods
jbe
aas
push
fdivs
cltd
push
rcll
int3
add
cli
jo
lods
lods
loopne
aam
cmc
or
mov
rclb
pop
testb
out
inc
clc
call
je
ret
scas
dec
dec
or
jmp
movsl
stos
mov
bound
jne
fwait
adc
repz
rcll
xchg
or
outsl
dec
clc
xchg
out
adc
mov
sub
call
daa
pop
mov
xchg
mov
mov
mov
mov
std
mov
jnp
pop
xchg
jnp
sbb
jb
and
and
jg
fmull
push
push
lret
push
mov
jge
cwtl
push
inc
lods
fidivrs
aas
mov
enter
xchg
inc
xor
les
repz
lods
js
jo
mov
movq
sbb
mov
mov
out
mov
fistpl
cmp
mov
and
out
push
adc
pushf
pop
fstpt
jmp
add
lods
mov
mov
movsl
add
js
cmp
lock
repnz
xchg
ljmp
nop
adc
repz
das
call
cmp
sub
dec
xchg
dec
pusha
sub
fisttpll
pop
hlt
inc
pop
std
mov
in
jl,pt
or
inc
sub
pop
test
dec
push
lret
out
fisubrs
add
ja
fnstsw
out
dec
sbb
or
mov
mov
mov
push
or
mov
fisubrs
jg
sub
cltd
mov
rcrb
sub
push
adc
xchg
inc
pop
fwait
jnp
fiaddl
push
push
pop
test
xor
and
dec
stos
cmp
push
sbb
mov
xchg
push
movl
arpl
insl
cli
repnz
mov
lret
xchg
or
in
in
push
push
add
mov
arpl
notl
shll
inc
mov
mov
ljmp
cmp
in
repz
mov
sub
movsb
push
cmpsb
sti
mov
arpl
fldenv
add
test
fsubrl
cmc
sbb
dec
lret
xor
add
cmp
xchg
iret
cmc
out
bound
push
push
cmpl
sahf
ljmp
xchg
rcll
dec
std
stos
and
dec
shll
cmp
out
cmp
aam
xchg
xchg
fmull
ficompl
ret
xchg
test
or
mov
in
xchg
pop
pop
lods
lock
in
mov
mov
dec
decb
fsubrp
pop
jns
dec
sbb
enter
pushl
aaa
mov
in
out
cmpl
ss
imul
into
test
xchg
ret
ja
int
adc
loopne
popa
adc
shll
jae
lahf
icebp
add
fdivp
repz
push
jae
ljmp
mov
test
negl
pop
es
repnz
stos
pop
rolb
scas
pop
idivl
bound
sub
push
dec
rclb
dec
and
dec
mov
sub
daa
insl
clc
loop
pop
lea
and
fcmovnbe
mov
or
inc
push
sbb
xlat
mull
aam
filds
lds
rcl
outsl
add
outsb
outsb
stc
lret
or
sti
cmp
jecxz
pop
push
sbb
imul
test
push
fdivrs
push
cmc
lcall
clc
pop
mov
fidivrl
repnz
add
in
xor
mov
stos
mov
sbb
and
cltd
ds
pop
jo
test
loop,pn
cmp
rclb
add
jbe
pop
pusha
push
shlb
jge
sar
call
stos
and
add
jbe
loope
mov
adc
lock
lahf
pop
ret
sbb
rclb
and
test
addb
dec
pop
adc
repnz
cmpsb
cwtl
push
add
in
jecxz
shll
jecxz
sub
push
int
scas
cmpsb
cwtl
add
popa
sub
pop
add
sub
movsb
jle
lock
movl
test
in
aam
mov
jae
mov
lock
les
cmp
push
sbb
ss
jge
adc
add
and
fstpt
das
imul
call
icebp
push
inc
lcall
cld
cli
pop
adc
movsb
or
xor
push
stos
filds
das
mov
iret
add
xchg
pop
hlt
jnp
cmpsb
push
test
hlt
cwtl
fistpll
push
in
inc
and
adc
test
call
mov
int3
loopne
add
adc
out
mov
inc
mov
pop
dec
mov
lods
out
fs
adc
push
add
pushf
fldl
cld
xor
pop
cwtl
fistps
enter
rcrb
adc
push
test
rcrl
sbb
inc
out
jmp
sti
scas
mov
or
test
mov
arpl
data16
aaa
add
add
and
or
repz
jae
int
dec
inc
xchg
out
insl
jge
mov
mov
mov
inc
addr16
push
mov
mov
pop
scas
sub
out
fbstp
repnz
js
idiv
jno
and
sub
ljmp
xchg
mov
push
cmpsl
cld
push
add
je
jnp
js
mov
xor
aad
sbb
dec
loopne
ds
push
push
jle
mov
hlt
out
arpl
into
mov
add
push
add
fs
add
pop
mov
loopne
mov
and
or
clc
adc
outsb
andb
or
sub
scas
jle
mov
mov
or
icebp
leave
ss
mov
mov
loopne
std
xchg
push
or
jl
cld
out
sub
add
shlb
rol
roll
mov
shl
pop
cmp
mov
repz
insb
divl
pushf
rolb
cmp
decb
scas
mov
jnp
popl
xchg
out
out
push
mov
add
cmp
mov
lahf
cmp
pushf
enter
subb
aam
outsb
call
jle
arpl
lods
xchg
jb
test
add
sbb
mov
or
hlt
mov
push
adc
pop
and
loop
add
jp
ffree
ljmp
sub
aaa
xchg
loope
jmp
sbb
test
push
xchg
xchg
aas
xor
sbb
out
jl
adcb
ljmp
and
lock
fldl
sahf
test
mov
data16
add
or
sub
cmp
cmp
jl
aam
enter
cmp
sbb
imul
push
mov
stos
cmpsb
jns
cmp
adc
add
push
rcll
add
cbtw
dec
cmp
lods
shlb
jp
call
ja
sbb
aam
pop
jecxz
das
mov
dec
pop
mov
or
pop
leave
call
push
mov
insb
sub
push
insb
idivl
jno
dec
add
push
jg
pop
or
shll
shrb
cmp
rcrb
jp
jo
loop
daa
push
pop
gs
nop
mov
pop
sbb
jnp
mov
cmp
jns
in
icebp
add
lock
adc
clc
or
adc
cmp
ljmp
mov
xor
xor
add
shrb
loopne
add
adcl
xchg
loopne
inc
bound
or
roll
inc
xchg
dec
add
arpl
mov
les
ja
mov
out
in
push
sbb
lock
cld
cmp
repnz
subl
fdivl
xchg
push
mov
cmp
ret
xchg
jmp
sbb
xor
data16
sahf
insb
and
lock
adc
outsl
push
push
retw
sbb
cmpsb
fisubs
pushf
outsb
divl
sbb
jl
aaa
lock
scas
jmp
repnz
lds
pop
je
loop
cmp
movsb
adc
cmp
sbbl
and
out
mov
pushf
insb
cmp
and
mov
inc
mov
sbb
xor
lret
loopne
xchg
pop
and
adc
mov
ljmp
mov
outsb
jle
jle
jne,pn
fwait
lock
pop
imul
mov
push
adc
pop
inc
roll
sub
fs
imul
std
jle
sub
mov
cmp
xlat
cld
inc
push
aam
scas
inc
jl
or
lahf
mov
std
jo
or
and
and
cmp
mov
jge
pop
fadd
pusha
sti
pop
ficoml
sbb
inc
dec
fdivr
xor
sub
iret
int3
jg
shl
mov
rorb
push
or
push
xorb
or
std
arpl
pop
popf
scas
pop
jl
pop
add
dec
int3
xchg
mov
jg
or
adc
or
jle
pop
push
mov
push
xchg
enter
movsl
std
ficompl
inc
or
fwait
pop
mov
xor
int
mov
or
mov
xchg
jecxz
xor
push
adcl
mov
in
push
repnz
xchg
mov
loopne
rorb
inc
ds
sub
je
jge
cld
mov
test
inc
jp
arpl
fisubrl
cmc
pop
lods
add
dec
add
loop
inc
xchg
repnz
shll
fwait
js
les
pop
insb
not
out
fsubrs
and
mov
clc
cli
mov
es
xor
sarl
lcall
mov
jl
das
mov
rclb
or
dec
adc
loop
xchg
xchg
popa
dec
inc
push
or
test
mov
mov
xchg
scas
pop
add
out
clc
mov
outsl
pusha
inc
dec
addl
movb
out
out
jne
add
sbb
leave
inc
push
daa
fcoms
mov
push
xorl
popa
leave
fildl
fadds
fwait
in
add
ljmp
add
mov
sarb
and
cmp
fwait
outsl
cmp
push
push
pop
cli
mov
cwtl
add
inc
add
sub
in
fwait
cli
add
pop
push
incb
pop
add
sub
push
mulb
inc
mov
insl
ret
adc
push
jp
negl
divb
adcl
sbb
adc
mov
jp
xchg
mov
cmc
sti
out
push
xlat
mov
xchg
inc
cwtl
les
sbb
inc
pop
mov
add
dec
adc
lahf
in
push
icebp
jnp
xlat
and
sarl
jnp
pusha
mov
ret
inc
mov
mov
mov
idivl
in
and
arpl
jne
push
xchg
lcall
icebp
loopne
pusha
mov
cmpsl
xchg
mov
fisubs
add
lcall
cmpsb
push
mov
and
pop
fidivrl
fsubrs
loop
iret
push
sbb
enter
push
ja
insl
adc
dec
mov
jmp
andl
jbe
adc
ss
stos
in
xchg
imul
jo
inc
shr
divb
movsb
mov
jle
adc
sbb
add
inc
shrw
add
aas
cmp
inc
je
xchg
lahf
mov
aad
push
scas
sti
cmp
xor
cs
das
dec
jecxz
rcrb
cli
je
mov
pusha
jb
push
ss
add
out
lcall
push
mov
sahf
std
rcl
cwtl
inc
fisubl
movsb
filds
xor
sub
loop
pop
cld
sarb
fs
repz
popa
mov
enter
lcall
jbe
xchg
jno
lcall
jnp
mov
je
out
add
aad
stos
nop
faddl
add
mov
add
ljmp
pushf
daa
imull
pushf
cld
mov
loop
add
subb
xchg
test
xchg
insl
jge
je
ss
daa
push
pslld
xchg
push
cmp
xor
pushf
stos
pop
fidivs
push
mov
push
xlat
xor
add
cli
mov
addr16
rcl
push
out
xchg
and
testl
pop
jg
jg
cwtl
or
cs
add
lock
in
mov
inc
dec
in
stc
sbb
or
add
enter
mov
pop
fdivrl
mov
lock
cld
je
je
inc
popa
loopne
sub
js
xorl
mov
rol
addl
aam
aas
cmp
call
mov
cmp
scas
mov
fs
popf
xor
jne
cli
sub
mov
adc
add
mov
ds
and
jl
add
xor
rcrb
incl
and
ret
dec
mov
mov
les
or
xlat
xchg
es
out
xchg
mov
dec
mov
sahf
add
sbb
mov
add
cmp
mov
incl
or
imul
inc
test
and
sbb
fiaddl
das
cwtl
lcall
jl
inc
insb
adc
push
push
popa
dec
jb
mov
call
inc
lretw
int
pop
mov
popa
mov
outsl
sbb
xor
pop
fisttps
cmpsb
mov
pop
sbb
addb
mov
mov
leave
fstps
jp
pop
cmp
imul
shlb
inc
mov
out
inc
imul
push
jne
and
xchg
rolb
add
fildll
ret
pop
inc
testl
xchg
or
push
sbb
adc
mov
rolb
ja
xor
cwtl
outsl
mov
mov
xchg
jle
rol
pop
cli
dec
pop
je
test
sub
loopne
xchg
movsb
and
inc
movsl
push
mov
mov
pop
lret
les
inc
int
push
out
mov
push
fldcw
add
inc
pop
cmp
xchg
in
mov
insb
insb
add
ss
or
or
aad
rorb
test
int3
mov
pusha
sub
mov
mov
setp
xor
scas
std
or
pop
mov
jp
movsb
repz
mov
sbbb
or
nop
insl
push
pop
lret
out
jo
push
stc
or
jmp
mov
sub
rcll
lock
pop
std
mov
scas
stos
idivl
push
std
sbb
es
add
push
add
in
jmp
mov
sbb
xchg
outsb
pop
push
mov
adc
shl
adc
pop
test
mov
xchg
pushf
popf
fadd
mov
and
mov
out
pop
ret
push
mov
movsb
jbe
clc
push
push
sub
mov
cs
scas
pop
frstor
ds
data16
cmc
inc
mov
xchg
push
or
lock
push
das
cmp
jb
adc
hlt
std
or
cld
repnz
and
lcall
in
loop
mov
dec
push
cmp
push
xor
add
loopne
lock
sar
roll
call
mov
in
ret
insb
mov
jl
test
ss
sbb
inc
add
jae
inc
je
cmpb
je
rol
sub
push
pop
pop
je
or
flds
sub
js
mov
adc
inc
test
movsb
out
jne
or
cmp
sahf
pop
jae
mov
fimull
fdivrl
mov
insb
sbb
pop
mov
cld
mov
pop
popa
lcall
jmp
repz
push
mov
jg
add
fdivs
test
xchg
push
js
xchg
pushf
out
add
xadd
stos
enter
pusha
push
sub
sti
fisttps
ljmp
inc
lea
xor
adc
loopne
pop
jo
fisubs
in
fdiv
test
jmp
pop
xor
iret
movsb
pop
push
sub
jnp
mov
or
scas
adc
add
lods
xchg
inc
add
orb
or
sbb
xor
jecxz
rorb
or
cmp
push
out
pop
cmpsl
xor
js
xchg
inc
and
xchg
jmp
andl
sbb
or
sub
pusha
adc
into
out
subb
mov
pusha
lcall
scas
jl
test
daa
lock
sbb
fst
int
js
fiadds
ds
add
jmp
or
inc
insl
mov
outsl
adc
orl
clc
in
or
add
add
gs
push
and
pop
inc
imul
jl
loop
lds
push
pop
sbb
or
dec
push
inc
sub
mov
jp
cltd
lock
subb
add
fisttps
push
aaa
loope
mov
call
xchg
add
add
or
paddsb
or
or
mov
pop
test
lock
or
fs
call
aad
lds
dec
sbb
push
idivb
pop
jne
nop
int
dec
aaa
repnz
lcall
dec
cmp
pop
jmp
cmp
les
ja
mov
add
or
adc
jecxz
ljmp
es
inc
sbb
es
les
sub
xchg
cmp
movsb
mov
das
inc
sbb
iretw
mov
mov
gs
add
mov
enter
aad
adc
in
jne
outsb
dec
je
lcall
adc
dec
push
jbe
and
cwtl
mov
mov
dec
adc
fs
bound
jno
enter
sbb
rcrb
inc
pop
and
pusha
aad
mov
xor
lahf
dec
add
lods
test
mov
adc
add
jno
and
icebp
sbb
inc
xlat
jg
jg
outsl
or
test
ljmp
add
cld
into
mov
mov
movsl
ds
mov
test
outsl
jg
test
mov
cmp
mov
fidivl
jmp
inc
pop
in
rcrl
fwait
lret
sbb
loop
lea
push
adcl
sbb
mov
cmpsl
jmp
rorl
mov
inc
pop
cwtl
cmp
adc
inc
inc
xchg
mov
jl
adc
icebp
jbe
jle
rcl
leave
out
xchg
aam
stos
inc
das
mov
jbe
fdiv
movl
shr
movsb
mov
push
pop
pop
shl
mov
mov
dec
lods
fists
and
movsb
ds
mov
mov
sbb
in
jae
dec
dec
pop
adc
pushf
jp
mov
ret
sbb
sub
cs
pop
mov
jne
or
jl
inc
hlt
xor
cmp
add
add
push
mov
mov
push
add
jle
ljmp
jo
push
fisttpl
lods
xchg
and
or
or
int3
repz
pusha
jecxz
pop
dec
fs
mov
sub
aam
push
xchg
add
lock
pop
adc
dec
push
sbb
mov
movsl
int
aad
outsb
ja
fsts
add
xchg
loope
cmp
xchg
add
push
js
jne
aaa
lcall
aas
mov
mov
jbe
jl
or
pop
push
loope
icebp
jbe
loope
mov
sti
aad
loopne
pusha
push
push
call
pop
lock
aad
xchg
loopne
mov
pop
rcrl
std
aad
clc
nop
jb
imul
jnp
or
jne
pop
js
and
or
mov
fidivs
imul
rclb
inc
fs
add
push
fcomi
int3
push
jle
add
gs
out
das
jge
mov
or
mov
stos
pop
inc
sbb
push
repz
test
out
fiaddl
mov
sbb
sbb
or
scas
out
fiaddl
cmc
fldenv
xor
shlb
xor
push
xchg
mov
out
cwtl
push
adc
jg
fbstp
outsb
add
fcmovnb
outsl
lds
pop
iret
xchg
insb
jbe
mov
dec
jmp
push
jno
fwait
or
lds
pop
test
scas
idiv
or
out
mov
cltd
sub
lret
push
stos
adc
cltd
adc
data16
fst
ret
shlb
xor
push
xchg
inc
mov
add
test
loopne
add
divb
into
pop
cld
lods
fyl2x
push
adc
fmul
shll
or
ds
sarl
xor
sbb
cmp
jb
or
pusha
xor
jecxz
mov
add
fs
jecxz
fsub
push
sub
iret
push
dec
stos
orb
xchg
addr16
pop
lods
imul
mov
push
pop
push
insb
orl
shl
mov
cmpb
pop
cmp
and
ja
movsb
inc
inc
das
cs
push
test
jg
xor
adc
subb
cli
pop
dec
mov
inc
cmp
xchg
mov
data16
ret
push
pushf
andl
je
or
xor
pop
push
inc
loop
sbb
aas
dec
dec
cmp
hlt
out
loopne
ja
shll
sbb
xchg
jecxz
pop
subl
cmp
and
add
and
dec
rcll
aas
notb
jae
or
sbb
movsb
sar
xchg
xor
ljmp
mov
insb
mov
mov
scas
clc
lock
pop
push
or
fildl
or
es
test
cltd
sub
dec
sub
push
xor
inc
add
aaa
mov
test
or
mov
sbb
sub
jmp
inc
cmp
mov
pop
enter
pop
sbb
xor
jbe,pn
lret
adc
les
jb
push
push
mov
into
out
sub
lock
push
add
stos
stos
pop
enter
loop
mov
shlb
cmp
push
push
mov
sub
inc
sbb
or
aaa
cld
jmp
pop
mov
outsb
and
and
in
ja
jp
or
dec
pop
sub
mov
add
cmpsl
mov
movl
sbb
jno
pop
push
push
jbe
jg
mov
mov
mov
test
test
xchg
pushf
sub
adc
rol
mov
push
jo
and
pop
aas
cmp
es
jecxz
sbb
out
int3
or
cli
cmp
sbb
aaa
ljmp
fcmovne
cmp
sub
mov
pop
sub
out
and
adcl
jp
loopne
dec
enter
mov
cmc
loope
bound
je
cmpsl
jne
lea
or
jl
adc
pop
mov
in
add
pop
ss
aaa
lcall
or
insl
and
ret
cld
add
xchg
movsb
movsb
add
vrsqrtps
jo
sbb
pop
push
push
push
cmpsl
aas
cmp
in
push
aaa
mov
pop
js
shrb
push
mov
iret
adc
cli
sbb
or
mov
lea
mov
xchg
mov
xchg
ds
xchg
xchg
mov
dec
mov
xchg
stos
adc
push
cmp
outsl
movl
cmpl
fwait
cs
incb
mov
push
or
addr16
pop
lods
add
call
fcomps
cmpsl
aas
and
or
and
pushf
subl
hlt
outsb
mov
mov
mov
sahf
daa
flds
adc
and
movsl
aad
jle
add
inc
xor
mov
adc
imul
js
js
out
mov
std
xor
loop
lret
inc
lods
mov
cli
in
cmp
cmc
dec
sahf
push
test
mov
pop
push
mov
jp
sub
jbe
push
pop
add
ret
nop
inc
cmp
mov
sti
cmpsl
mov
xchg
cmp
dec
push
call
adc
mov
andb
inc
mov
pushf
fistpll
mov
clc
popa
test
outsb
ret
push
add
scas
jo
test
inc
and
mov
pop
pushf
mov
das
sbb
adc
sbb
lds
jo
jns
mov
jge
xor
movsb
hlt
arpl
cmpsl
dec
ret
repnz
jp
fucom
fnsave
popa
pop
mov
int3
aas
loopne
test
sub
in
adc
out
lahf
mov
inc
push
loopne
pop
scas
or
dec
sub
or
outsb
in
insl
repnz
adcb
push
xor
pop
sbb
mov
dec
decb
sbb
adcb
in
mov
or
jl
popa
add
dec
rclb
lds
sbb
pop
adc
addb
mov
les
test
fmuls
xor
cld
push
out
fisttps
pop
inc
push
xchg
add
out
fadds
mov
mov
inc
aaa
cli
ds
sbb
fdivrs
fimull
and
pusha
mov
movsb
popf
pop
mov
lahf
mov
popa
int3
pop
inc
mov
jnp
icebp
inc
adc
fcomip
jne
dec
lea
sub
fadd
ljmp
add
outsl
sarl
add
mov
jno
jbe
imul
repz
enter
xor
out
mov
jb
gs
push
out
jmp
push
push
push
sub
data16
xchg
in
mov
lock
or
mov
clc
mov
insl
clc
cmp
outsl
mov
je
wbinvd
jl
push
mov
and
cmc
aam
add
push
testl
or
mov
popw
inc
jno
call
jns
fdivr
test
ss
test
imul
cli
xchg
into
sbb
insb
sbbl
push
mov
jecxz
int
and
lahf
test
ss
and
xchg
scas
and
pop
sub
leave
iret
or
push
jnp
mov
and
mov
or
mov
cmp
jl
loopne
shll
push
sub
pusha
lock
push
pusha
mov
sbb
lods
mov
xchg
inc
fsubrp
mov
in
lea
mov
and
insb
inc
and
shll
add
fldt
push
pop
cmp
outsb
inc
mov
adc
push
test
mov
xsave
enter
gs
js
and
xor
outsl
out
hlt
pop
push
stos
xchg
adc
test
clc
ja
pusha
xchg
fcomp
xchg
adc
xchg
push
push
add
jnp
or
xchg
icebp
lock
inc
push
mov
ljmp
cmc
add
je
or
aam
mov
or
mov
xlat
pop
notl
push
iret
push
mov
les
adc
mov
lock
das
xchg
cmp
je
fisttps
ror
xor
sarb
sti
push
test
push
push
je
sub
roll
or
jno
cld
orl
lcall
add
lea
xchg
rcl
jae
inc
je
mov
xchg
xchg
dec
adc
das
jp
pop
xchg
sarb
aaa
dec
sahf
int3
lret
xor
inc
and
and
adc
jge
negl
les
cmp
popa
or
bound
cmpsl
imul
push
je
scas
pop
clc
jle
cmp
orl
ret
mov
or
push
and
xor
lcall
call
hlt
sahf
jle
adc
sub
sub
push
dec
mov
enter
ja
outsb
cmp
mov
popf
les
shlb
sbb
add
jnp
leave
das
adc
ds
mov
xchg
icebp
setne
jl
ds
fdivl
pop
add
mov
xorl
ficoms
filds
sarb
pop
cmp
nop
ss
add
sbb
js
push
scas
daa
pop
jmp
out
cmp
xchg
jno
mov
push
and
or
cmp
jecxz
add
sub
clc
fsubl
out
not
xchg
mov
ljmp
fnsave
sbb
or
hlt
and
pop
outsb
dec
sbb
adc
cld
imul
dec
mov
adc
les
aas
jbe
mov
rorb
into
add
inc
jo
ret
jo
xchg
sahf
call
stc
insl
pop
pop
push
popa
cmp
add
cwtl
sub
push
jae
je
mov
cmp
out
mov
mov
xor
out
ss
xchg
mov
fisubrs
iret
jp
add
in
push
popa
mov
xor
lds
ret
push
adc
js
cmp
cs
test
sbb
inc
jp
and
pushf
push
mov
ss
xchg
sbb
add
xlat
cli
jnp
scas
cwtl
mov
ss
adc
call
aam
outsl
add
iret
stos
shl
push
insl
mov
adc
mov
data16
sar
push
mov
add
pusha
je
sbb
pop
push
das
dec
push
push
or
inc
roll
je
pop
adc
cmp
je
cs
sti
leave
hlt
sub
lock
clc
dec
lds
and
adc
stos
sub
pop
sub
ljmp
rorl
xor
or
loope
dec
inc
add
sbb
addb
movsl
add
push
inc
cmp
popa
cs
inc
mov
icebp
sbb
push
pop
jmp
mov
add
jge
cmpsb
mov
mov
loope
ds
push
pop
add
xchg
xchg
fcomi
lret
mov
add
cmp
test
jl
sub
loopne
fsubrs
sbb
inc
xchg
jne
cld
xchg
gs
sahf
mov
outsb
or
xchg
ja
loope
push
mov
stc
test
test
mov
pushf
rcrb
and
mov
push
mov
sbb
mov
lock
test
and
xchg
shrl
and
ret
movsb
in
insl
fwait
mov
jg
loopne
xchg
rclb
mov
inc
mov
bound
clc
mov
jbe
roll
lret
sub
lods
xchg
mov
cmp
ss
pop
int3
inc
cmp
mov
popf
ficoml
int3
inc
imul
dec
jo
shll
out
dec
and
mov
call
sbb
sub
jecxz
fcomip
adc
or
push
inc
pop
loope
das
xchg
lea
push
pop
leave
mov
cli
or
inc
cli
jne
popf
stc
pushf
insb
push
data16
push
icebp
nop
push
mov
xchg
jle
or
mov
js
inc
fiaddl
push
mov
jbe
push
outsb
pop
outsb
jle,pn
push
cmp
les
lods
iret
sbb
add
mov
inc
jbe
mov
lcall
popa
loopne
dec
xchg
cs
gs
push
icebp
in
rcrb
sub
orb
ret
cmpsl
sarb
test
inc
sahf
mov
jae
rorb
mov
mov
es
int
rorb
mov
outsb
movsb
adc
loope
mull
or
add
fidivrl
scas
lcall
mov
mov
xor
jp
sbb
cwtl
xor
adc
data16
enter
adc
jno
or
push
sbb
cmpsb
xor
cs
subb
sub
inc
lcall
adc
movsb
xchg
mov
outsb
inc
ret
rcll
adc
imul
add
testb
adc
sbb
dec
mov
jl
jle
es
mov
das
arpl
std
add
pop
rcr
dec
std
adc
shr
sub
bound
std
cwtl
inc
in
shl
aaa
pop
scas
push
add
data16
loop
in
push
out
clc
shll
mov
sbb
icebp
push
cmp
xchg
sub
jno
mov
cmp
mov
cmpsl
mov
sbb
cld
adc
nop
rolb
mov
cmpsl
sti
push
enter
lret
rolb
lret
outsb
and
mov
mov
cwtl
sbb
lods
insb
outsl
fstps
stos
loop
cmpsl
js
es
xor
arpl
sbb
outsb
sbb
les
in
dec
movb
in
and
test
xor
addb
int3
call
mov
lock
outsl
cmp
and
adc
ljmp
aam
push
push
pusha
add
fwait
sbb
es
sub
cltd
movsb
addr16
or
mov
xor
xchg
dec
xor
cmpsb
int3
les
jp
stos
ljmp
leave
jp
mov
push
cmp
mov
mov
sbb
repz
mov
sahf
push
pop
imulb
cmp
jbe
pop
and
cmpl
push
mov
pop
adc
jbe
bnd
lret
cmpsb
nop
xchg
test
mov
aam
mov
mov
inc
xlat
js
movsb
dec
jle
xor
fsubrs
fiaddl
scas
divb
mov
fsubrl
inc
cmpsl
push
stos
and
iret
xor
push
and
cmpsl
jecxz
mov
adc
inc
push
bsr
ds
mov
loopne
mov
hlt
dec
dec
sub
and
jp
push
ss
lahf
dec
push
wbinvd
bound
add
mov
dec
bnd
dec
xchg
nop
pop
mov
test
divb
out
push
xchg
sahf
mov
jns
xchg
lods
je
mov
mov
mov
fwait
pop
fsubl
cld
push
pop
dec
ds
lahf
jo
inc
iret
test
jnp
test
movsl
push
sbb
addl
loop
jle
jle
dec
ret
int
psrad
jge
sbb
test
dec
inc
adc
orb
xchg
push
das
adc
stos
xchg
dec
inc
shlb
pop
add
and
push
jns
mov
inc
movsl
or
and
add
jmp
mov
adc
jg
inc
ret
or
nop
inc
inc
outsl
pop
mov
sarb
push
and
maxps
or
push
inc
aad
mov
mov
pop
push
mov
and
mov
mov
arpl
dec
pop
ffreep
aaa
mov
fs
pop
lret
inc
lods
mov
mov
jp
fcmove
ret
jecxz
sub
loopne
cmp
cs
sarb
push
dec
xor
dec
cmp
or
pusha
pop
lea
cmp
pop
cmp
sub
cmp
jecxz
push
sbb
stos
inc
dec
dec
loop
mov
pop
mov
push
loopne
sarl
ljmp
mov
dec
js
push
loopne
filds
sbb
add
mov
loopne
sti
mov
adc
stc
sbb
int3
sbbb
data16
jecxz
or
adc
test
mov
insl
xchg
jmp
xchg
dec
mov
popa
sub
je
faddl
adc
rcl
aaa
les
sub
test
cmpsb
mov
xchg
inc
sbb
pop
es
pop
addb
mov
maskmovq
mull
cmc
mov
scas
aad
cmp
fxch
jmp
sub
push
and
ljmp
pop
push
filds
ret
xchg
movsb
aam
sbb
js
jmp
out
rclb
sets
pop
mov
sahf
imul
scas
cmp
fdivl
pop
jne
xchg
stos
xchg
aad
xchg
fwait
stos
cmp
or
in
enter
arpl
and
jecxz
jns
repz
into
js
andl
sbb
mov
push
enter
in
dec
aas
mov
setle
ss
aam
push
lret
loope
adcb
in
mov
inc
add
ds
sahf
stos
adc
adc
push
sti
add
push
loop
pusha
fdivp
test
xchg
fimuls
mov
outsl
pop
pusha
jp,pt
pop
push
aad
daa
stos
pop
std
push
mov
popf
ljmp
lahf
lods
rorl
sti
hlt
mov
call
cmp
ret
lods
or
testb
push
js
xchg
repz
mov
xchg
push
sbb
xor
outsl
mov
clc
cmp
adcb
lds
mov
inc
arpl
rol
xor
ds
ret
inc
int3
mov
je
xchg
jbe
testl
mov
icebp
popa
loope
inc
mov
ljmp
mov
pop
outsl
aaa
shrb
dec
sti
in
jle
loop
out
lret
test
lret
sub
je
cmp
rorl
nop
pop
imul
loop
jno
mov
daa
test
sub
in
pop
or
test
data16
jl
push
fbld
xor
fistl
filds
mov
dec
jb
pop
inc
mov
jbe
clc
cmpsl
dec
dec
movsb
leave
adc
cs
ficomps
sub
arpl
movsl
cmp
add
push
inc
jno
xor
shrl
sub
adc
call
jl
push
lock
cmp
push
mov
pushf
jle
mov
rcrl
adc
lret
clc
dec
aaa
iret
out
sub
adc
dec
add
sbb
inc
cmp
xchg
sbb
int3
outsb
inc
or
mov
add
leave
add
stos
pop
ret
test
jo
std
test
push
pop
or
test
push
xchg
mov
xorl
adc
sbb
out
pop
test
push
in
pop
scas
pop
jns
add
popf
jns
jle
dec
mov
repnz
shr
mov
jg
sub
mov
or
cs
shr
int
sbb
jbe
sbb
and
testl
add
aam
sub
pusha
imul
cmpsl
pop
test
push
mov
push
push
lea
into
mov
scas
addb
and
jl
cltd
test
adc
arpl
jnp
in
pushf
cmp
fcmovu
fmulp
test
pop
in
cltd
sub
ss
push
xchg
add
fsub
les
pop
xor
inc
cld
sbb
loopne
ret
aam
inc
outsb
lcall
cli
in
cmp
mov
jne
les
out
mov
and
pop
sbb
lahf
jnp
bound
xor
pop
inc
xchg
shlb
mov
fs
fwait
mov
sbb
xlat
mov
cwtl
xchg
cmp
sbb
inc
dec
or
sbb
mov
or
mov
in
rclb
push
push
xchg
xchg
and
or
inc
enter
sarb
add
sub
call
pop
push
push
imul
sbb
mov
loopne
sbbb
push
mov
or
aaa
outsb
pop
addb
sub
icebp
lock
mov
sub
sbb
loopne
repnz
inc
loopne
jbe
push
scas
cmp
ds
lods
sahf
sbb
lods
push
movsb
sub
pop
divl
in
movsl
out
push
pop
jo
jmp
imul
push
pop
xchg
xchg
push
push
into
mov
shrl
add
ret
sub
sbb
adc
test
cmp
sbb
cmp
push
daa
mov
cmp
sub
push
ds
cmp
xorl
cs
rcrl
inc
xlat
add
stos
cmp
das
rcr
sub
shl
cmp
jmp
or
or
stc
dec
cmc
int3
ja
or
or
cmp
cli
mov
orl
mov
push
dec
je
sarb
mov
cmp
inc
loopne,pn
fisubrl
ss
cli
add
push
mov
add
aad
and
pminub
in
sbb
das
push
xchg
es
sbb
jb
fxch
push
mov
je
xchg
push
dec
pop
stos
iret
and
addr16
adc
adc
sbb
test
or
xor
push
mov
es
adc
push
call
inc
lcall
jg
mov
cli
lea
or
sub
and
lods
mov
sbb
sub
pop
inc
imul
mov
sub
add
cmp
cli
mov
mov
sbb
add
push
out
add
mov
cmc
or
mov
addr16
test
loopne
incl
fxch
or
nop
adc
imul
dec
lea
jle
adc
roll
enter
int
mov
pop
sbb
push
mov
sub
pop
push
rolb
subb
rcrl
notl
cmp
inc
call
pop
lret
daa
pop
jp
sbb
fs
jae
lods
fcmove
and
xor
jl
nop
and
aas
movl
xchg
or
aam
stos
roll
xor
mov
mov
add
sub
pop
add
or
lret
mov
in
push
leave
sbb
cli
jmp
adc
ljmp
mov
bound
and
inc
pop
push
xchg
inc
xlat
pop
sahf
mov
dec
and
in
dec
push
pop
sbb
cmpsl
push
cli
push
out
add
imul
inc
call
cmp
cmpsl
push
or
add
aaa
mov
popl
xor
and
cmc
loope
mov
sub
xchg
pop
inc
sarl
xor
stc
popa
or
inc
std
jnp
xchg
aas
arpl
fldl
inc
mov
and
adc
jmp
xchg
mov
mov
xor
mov
push
mov
cli
js
mov
sbb
xchg
aas
call
pop
push
sbb
hlt
sti
inc
repnz
cltd
mov
push
add
scas
hlt
push
cmp
test
shll
jo
xor
in
addb
cmpsl
inc
jnp
cmp
shll
into
daa
push
jl
adc
pop
jno
dec
dec
test
loope
mov
inc
or
jae
xorl
adc
mov
test
push
push
popl
sbb
and
add
and
push
add
insb
fimull
add
lcall
ja
loop
pop
jmp
add
xchg
jl
js
ret
das
pop
pop
imul
pop
test
rolb
add
and
inc
mov
scas
out
mov
les
mov
push
cmp
and
dec
sbb
fdivl
jo
and
ljmp
push
lods
outsb
inc
mov
aas
jmp
or
or
sbb
pop
mov
notb
sub
lahf
xchg
call
mov
rcl
addr16
fstl
cmp
shr
inc
add
test
cmp
mov
aam
rorb
lcall
insb
xor
sbb
pop
xchg
gs
adc
in
jno
jge
arpl
fisttpll
xchg
add
je
scas
hlt
call
cmp
mov
dec
shl
push
and
mov
mov
mov
ret
pop
fcomip
add
add
clc
add
dec
pop
mov
insl
shl
test
cmp
outsl
mov
stc
stc
dec
push
add
addr16
jmp
adc
dec
xor
push
ss
or
out
push
inc
js
je
test
dec
sbb
call
sbb
loopne
dec
and
js
lock
push
inc
popf
adcb
push
pop
jg
test
int
xchg
js
inc
and
gs
cs
fdiv
ret
pop
lea
addr16
fadds
inc
loop
xchg
add
in
cmp
cli
mov
cmc
cmp
lock
push
ja
es
add
cli
xchg
add
mov
or
cmpsb
push
ljmp
mov
adc
aas
jl
dec
push
push
in
lret
xor
xor
and
movb
jge
out
mov
hlt
scas
les
std
js
repz
sbb
mov
test
aad
mov
or
imul
shr
xor
mulb
xchg
ss
mov
inc
ljmp
jo
sbb
adc
sub
orl
into
inc
mov
adc
cmp
dec
adc
jmp
lret
jl
mov
jne
push
adc
mov
dec
pop
inc
mov
icebp
ds
stos
fsubl
shrb
push
lods
xchg
jge
and
adc
or
scas
adc
xchg
cltd
sbb
sub
push
or
mov
leave
add
lock
lahf
mov
add
dec
push
xchg
pusha
orl
iret
xchg
mov
insl
test
dec
in
fsubs
sbb
fiaddl
jl
inc
stos
jb
movsl
fdivs
mov
or
pop
lods
and
les
or
call
fcmovb
in
and
mov
stos
push
dec
leave
push
leave
ss
mov
or
cmpsl
adc
sub
mov
sbb
cli
xchg
mov
ror
ret
add
rcrb
mov
lahf
loopne
rolb
movsl
pop
cs
fs
das
sbb
pop
pop
aas
cmp
add
xchg
andl
mov
daa
dec
scas
lds
cmp
xchg
aaa
xchg
loopne
mov
ja
dec
mov
subl
sti
shll
pop
fbld
sub
dec
out
sbb
adc
dec
jne
dec
fwait
clc
push
sub
mov
fidivrs
mov
or
sti
push
jp
xchg
clc
mov
push
sub
into
mov
xchg
orl
gs
std
and
ds
cwtl
or
dec
pop
or
and
mov
jmp
dec
jp
sbb
xchg
cs
cli
cmp
jp
sti
and
push
adc
adc
sbb
icebp
jecxz
inc
xchg
push
push
out
lea
das
jnp
movsb
test
out
jo
mov
ds
stos
cmpl
mov
scas
push
ds
inc
scas
inc
xor
testl
add
les
test
hlt
add
jmp
fcompl
imul
pop
mov
sbb
mov
mov
sbb
jbe
lret
mov
dec
popf
mov
nop
mov
mov
pop
jl
mov
sub
jmp
sahf
jno
mov
sbb
mov
ss
or
fldenv
pop
and
jb
sbb
jle,pn
scas
xor
addr16
loopne
es
fimull
lret
mov
aas
add
mov
pop
fcmovne
add
in
cli
imul
push
mov
lock
lret
aas
or
pushf
push
rcrb
std
stos
pop
jno
adc
xor
ljmp
add
or
xchg
js
pusha
or
mov
sbb
lock
jbe
inc
dec
push
pop
lock
insl
fisttpll
jl
out
cmc
clc
mov
imul
lods
push
push
ljmp
add
xchg
mov
dec
add
adc
jmp
gs
xchg
mov
scas
lods
sub
rdpmc
inc
xchg
rclb
sub
cmp
test
test
lds
negl
lcall
ret
lcall
popf
pop
mov
push
mov
sbb
fisttpl
push
xchg
stc
fadds
cmc
or
cmp
outsl
icebp
mov
insl
jg
stos
js
movsl
das
sbb
stc
xor
ds
jo
ficomps
mov
adc
inc
call
jl
clc
mov
add
lahf
cmp
pop
lock
mov
or
mov
out
movsb
mov
cmp
out
stos
rorl
fists
ja
xchg
fcomps
loopne
filds
xchg
test
les
mov
rolb
in
adc
lock
cmp
dec
stos
test
sub
aam
cld
add
add
dec
pop
cmp
pop
mov
cmp
or
lods
inc
je
and
insb
cmpsl
jge
xor
mov
popf
cmp
es
sub
in
lcall
jbe
shll
adc
iret
aam
cs
enter
test
out
addr16
scas
xor
pop
hlt
sub
xchg
lock
loopne
cmp
mov
add
jmp
lds
ljmp
or
fiadds
aas
rcrb
mov
cmpsl
and
inc
mov
sbb
add
push
pop
in
push
insb
add
inc
mov
fs
hlt
icebp
sub
mov
push
inc
push
lcall
or
jae
shlb
enter
jp
arpl
out
fildll
pop
cmp
cmp
insl
or
ss
out
aad
jl
js
mov
mov
jmp
or
push
inc
xlat
add
jecxz
test
xor
or
mov
ljmp
cmp
sbb
std
sub
out
xchg
push
mov
jae
mov
subl
cmp
add
push
add
xchg
shll
out
ret
or
and
fwait
imul
mov
sub
lock
adcl
cmpsb
pop
mov
mov
ficoml
xchg
clc
push
pop
inc
out
mov
push
pop
into
fidivl
sbb
fists
nop
fidivrs
fists
ret
xchg
pop
mov
rcrl
aad
cmc
movsl
jns
ret
jecxz
cmp
inc
mov
xor
sti
push
imul
pop
cmp
sub
sub
jnp
imul
adc
add
dec
dec
add
pop
mov
inc
pop
jecxz
shll
xchg
sahf
adc
or
orb
popa
mov
cld
outsl
lock
pop
xor
pop
rclb
dec
mov
inc
xchg
into
scas
adc
cltd
test
dec
jnp
loope
sbb
jle
aas
test
sbb
jmp
jo
lds
push
push
xorb
arpl
jmp
mov
pop
xchg
scas
sbb
or
hlt
or
jg
push
aaa
daa
add
pushf
mov
mov
dec
ss
xor
mov
repnz
mov
mov
jp
xchg
mov
rorl
ret
jo
int
mov
insl
imul
out
aas
lcall
dec
imul
insl
outsb
pop
cmp
mov
outsb
cmp
mov
push
push
imul
push
lock
adc
xor
js
push
jns
dec
pushf
test
xchg
fimuls
ret
dec
push
fdivs
push
test
or
les
aam
xchg
adc
push
out
loopne
loopne
imul
ret
popa
xor
cmp
js
ds
inc
js
dec
aas
lret
movl
pop
jp
inc
cmc
stos
ret
xor
stc
ret
xchg
ficompl
out
daa
repnz
test
mov
pusha
xchg
clc
or
int
cmp
add
xchg
add
pop
imul
mov
scas
push
cltd
mov
xor
out
xlat
adc
in
lock
cmp
push
loopne
popa
daa
lds
and
adc
mov
xor
jne
mov
inc
mov
test
dec
add
clc
cmc
lcall
lock
icebp
cmp
in
sub
dec
sub
shll
pop
jg
mov
bound
push
cmp
xchg
sbb
add
cmp
cmp
sbb
inc
int3
or
lahf
push
inc
shll
inc
mov
and
scas
push
adc
addb
and
mov
add
sti
cmpsb
insb
data16
dec
inc
in
sbb
pop
sub
jb,pt
xchg
jecxz
and
xchg
aad
push
jle
cmp
test
xor
jmp
insb
pop
dec
lock
adc
inc
adc
hlt
adc
xor
mov
add
pop
inc
sahf
cs
mov
jecxz
pop
cmpb
push
dec
fsubs
outsb
jae
inc
leave
mov
xor
mov
pop
mov
pop
jnp
or
test
pop
out
mov
mov
in
inc
ljmp
jl
imul
jno
aad
dec
rclb
mov
mov
dec
push
fdivrs
dec
sbb
outsb
sub
loope
hlt
aam
push
inc
xchg
mov
and
es
xchg
inc
mov
xlat
jbe
dec
cmp
test
mov
mov
in
out
cwtl
es
rcl
jge
add
xchg
sbb
insl
cmpsl
mov
shl
adcb
inc
stos
or
add
adc
push
mov
mov
pusha
test
out
push
repnz
out
loope
inc
int3
and
inc
out
dec
fidivl
push
outsb
in
orb
adc
jl
cmp
xchg
push
js
fistl
xor
in
popf
sbb
rolb
hlt
dec
sti
mov
or
aam
enter
gs
jmp
cmp
sub
loopne
jo
leave
lret
std
icebp
push
xchg
adc
jno
push
xor
mov
stos
daa
sub
lea
test
dec
and
mov
clc
push
xchg
icebp
lods
dec
mov
sahf
mov
ds
in
mov
mov
mov
lock
jo
add
xor
add
jo
sbb
stos
andnps
fistps
add
push
mov
mov
stos
in
mov
and
push
rcrl
mov
xchg
ficompl
pop
shll
in
pop
rcll
or
int
xor
stos
out
test
je
cli
dec
mov
jbe
sub
ss
pop
loope
mov
mov
sbb
xor
dec
dec
sbbl
jp
add
jb
repz
js
pusha
negl
push
pop
loopne
xor
xchg
jb
adc
adc
mov
mov
mov
test
inc
cli
and
stos
sbb
cmp
cmp
loope
xchg
lcall
push
lahf
mov
dec
loop
and
cli
rclb
mov
or
outsb
add
ljmp
push
cmp
lods
lods
lds
scas
repnz
adc
dec
jmp
dec
dec
sbb
push
cmp
loopne
lea
test
shll
insb
into
aad
jns
push
sbb
fisubl
in
inc
mov
popa
popa
pop
pop
adc
arpl
das
or
push
xor
mov
cmpsb
cmp
hlt
adc
decl
mov
pop
cmc
clc
hlt
aad
lahf
ds
not
popf
xchg
mov
cmp
fdivrl
lods
dec
mov
dec
call
cmp
cli
hlt
push
shlb
es
inc
in
adc
push
mov
inc
ret
add
inc
jbe
insl
add
rcr
adc
adc
dec
jnp
lahf
cmp
jle
jae
ror
subb
pop
or
jle
hlt
sbb
sub
andl
sub
xor
mov
movsl
aad
cmp
lret
adc
mov
mov
fmul
call
sbb
ret
jmp
sti
xlat
dec
add
and
popa
xchg
cmp
cwtl
add
cmp
call
sub
pusha
pop
mov
js
adc
add
add
addl
outsb
fadd
mov
adc
xchg
lret
jle
daa
cmc
lods
icebp
pop
cmp
dec
adcl
test
mov
mov
movsl
fs
outsl
dec
pop
outsb
mov
dec
pop
sti
jl
fsts
ss
push
mov
lods
clc
fsubrs
xlat
cmpsl
xchg
cmp
add
or
mov
insb
call
pop
jae
jle
out
mov
and
aad
xchg
jp
fwait
ds
cmp
loopne
loopne
or
lcall
cli
scas
add
ljmp
push
ljmp
ds
clc
ja
mov
push
mov
add
call
popf
push
icebp
mov
sub
xor
pop
fidivs
push
add
sub
int3
mov
mov
push
pop
push
and
pusha
mov
aam
pop
mov
dec
mov
mov
dec
add
les
mov
jmp
or
inc
mov
das
sbb
jge
pop
das
sbb
mov
push
sbb
sub
push
int3
pop
adc
adc
in
push
fwait
mov
pop
fcoml
aam
repz
aas
cs
push
push
aad
rorl
into
lahf
xor
loopne
in
filds
fs
std
inc
xor
out
jns
call
mov
xchg
push
jg
popa
pop
sti
mov
orl
rorl
and
pop
sbb
or
out
mov
push
roll
sub
pop
dec
mov
loopne
icebp
js
push
out
loope
adc
pop
adc
xor
sti
sub
jmp
sub
lcall
pop
or
push
mov
dec
xchg
push
js
bound
cmc
add
ret
xor
sub
hlt
ss
adc
mov
les
aam
fwait
or
mov
out
push
in
jb
aas
cs
call
ja
jbe
jle
icebp
jb
jmp
sbb
pop
and
addr16
xor
mov
cmpsl
and
pop
pop
xchg
icebp
ljmp
stc
xchg
mov
adc
push
mov
sbb
pop
mov
lret
add
mov
repz
push
adc
daa
and
ret
sbb
into
popf
fimuls
dec
cmpsb
pop
data16
cld
fsubrs
jl
nop
adc
iret
clc
loop
insb
movsl
ja
inc
cmp
jns
pop
mov
aam
adc
repz
cmpsl
nop
push
es
insb
xor
daa
lods
mov
loop
cld
push
mov
rol
cmp
add
incl
pop
add
cmp
push
push
xorb
xchg
loopne
push
adc
lea
mov
in
add
mov
fadd
mov
lock
mov
push
push
sub
inc
imul
and
jmp
cmp
add
mov
pusha
pop
push
shlb
cwtl
gs
cs
xor
and
inc
sar
mov
and
jl
mov
push
shlb
dec
mov
add
mov
lret
cltd
push
arpl
or
sub
xchg
out
and
cld
jae
pusha
ljmp
xor
mov
js
xchg
pop
into
inc
or
mov
leave
loop
out
push
cmp
aam
mov
fwait
xchg
and
pop
dec
je
xchg
inc
shr
sub
ljmp
dec
mov
cli
clc
jl
dec
jae
outsl
push
mov
aam
adc
in
mov
inc
sub
dec
and
sbb
leave
mov
mov
mov
mov
lahf
inc
out
aaa
stc
andb
inc
das
pop
push
mov
js
es
add
pop
or
scas
test
fildll
inc
pop
stc
jnp
mov
inc
jnp
sub
xchg
call
cld
add
dec
jg
icebp
clc
rol
xchg
in
jne
ds
popf
mov
repz
aam
aam
pop
cmp
dec
jne
jmp
ss
pop
inc
out
push
xchg
cmp
sub
mov
out
xor
jp
xchg
rorb
jnp
loopne
jae
sub
hlt
mov
pop
cmpb
sbb
and
adc
xchg
adcb
and
in
rolb
pop
jae
andl
inc
loopne
dec
rcll
mov
ljmp
fwait
js
js
and
aam
das
lock
add
pop
aas
orb
dec
notb
dec
xchg
mov
stos
fdivr
cmp
pop
push
inc
ret
sbb
sarl
xchg
aas
fdivp
push
stos
mov
and
xor
addl
mov
add
mov
sub
cmp
inc
mov
jnp
push
sbb
shr
insl
aam
push
clc
fldpi
xchg
addr16
mov
pop
or
out
faddp
mov
std
pop
lods
lods
mov
fwait
or
mov
js
fimull
push
cmc
jecxz
cs
jno
or
and
orb
shrl
inc
cmp
adc
and
mov
clc
xchg
loope
dec
or
sub
xchg
jne
cli
hlt
jp
sbb
push
lret
sub
pcmpeqb
lret
fsubrl
rorb
lret
adc
lods
cwtl
enter
lods
mov
mov
cmp
cmc
loope
cwtl
test
mov
cmpl
mov
cld
sbbl
pop
mov
outsl
movsl
push
sbb
dec
pop
movsb
push
inc
xchg
mov
xor
sbb
cmp
ret
xchg
and
dec
clc
cli
dec
cli
xor
push
ret
ljmp
rol
inc
jne
test
shll
icebp
pop
ja
andb
fs
jge
gs
adcl
pextrw
add
xchg
xor
test
sbb
data16
push
mov
push
lea
aam
ss
sbb
lods
mov
and
pop
in
fnstenv
loope
hlt
insl
hlt
dec
imul
xor
lods
lods
add
jl
mov
out
mov
lods
aad
push
repz
sbb
movsl
mov
jmp
pop
sub
es
jno
cmp
cmpb
fidivl
es
adc
cmp
mov
lret
dec
mov
push
sub
and
dec
outsb
jge
in
frstor
jae
pop
ret
sar
aam
jge
ret
ljmp
push
hlt
rorl
ret
push
jl
dec
mov
push
jbe
add
xlat
mov
mov
dec
adc
add
sbb
dec
jecxz
xchg
mov
icebp
jp
adc
mov
ds
and
sbb
rcr
mov
pop
fwait
aam
push
mov
push
xchg
orl
in
lea
scas
mov
int
mov
std
and
test
ds
cmc
jb
pop
repnz
loop
daa
pop
xorb
mov
stos
div
or
jae
pusha
jg
popl
pop
cmp
enter
push
and
test
je
mov
call
outsb
push
push
das
fs
cli
mov
addb
dec
into
inc
inc
shrl
loope
jae
mov
pop
inc
cmpsb
cmp
fdivs
les
push
test
inc
loopne
pop
icebp
insl
lock
ret
sbb
push
outsb
mov
pop
test
lcall
sti
pop
inc
pop
pop
insb
loopne
add
xlat
test
call
xor
fcomi
movsb
or
pop
jmp
sub
xor
fimuls
sbb
les
mov
cmpsb
addr16
negl
cmpsl
mov
xor
in
lret
dec
jnp
out
or
in
shlb
subl
shl
dec
cmp
popf
cmp
push
ss
lret
fnstsw
pop
and
add
aad
push
and
out
lahf
mov
or
add
subb
inc
cmpsb
shr
rolb
pop
adc
stc
jle
imul
add
stc
pop
xchg
adc
xor
sarl
popa
in
scas
mov
rcll
fnsave
jg
jne
lea
jne
and
pusha
xchg
stos
inc
orl
mov
insb
mov
cmp
add
or
lock
cltd
movsb
inc
loop
pop
mov
jmp
lea
sbb
sub
lods
sarb
rorl
push
jg
cli
dec
int3
inc
lea
nop
bound
cmp
mov
adc
push
movsl
rcrb
shr
shl
jbe
and
push
popa
add
add
push
push
jnp
ret
sub
cmpsl
xor
je
cmpb
jmp
push
mov
roll
mov
fisubrl
jge
je
mov
test
js
aad
xchg
adc
mov
jo
or
jge
js
cmp
aaa
mov
icebp
mov
add
push
cmpb
enter
mov
jne
pop
movsl
pop
jo
jge
aaa
xchg
add
imul
cmpsb
cmp
push
inc
push
nop
mov
xchg
dec
repz
add
dec
inc
mov
sbb
in
js
mov
shl
and
test
stos
jle
jecxz
insb
in
dec
cmp
cwtl
cmpsl
rcrl
xchg
lock
insb
das
mov
xchg
xor
push
rcrb
shll
jle
or
clc
dec
or
pop
lahf
pop
lods
fadd
out
add
xchg
pop
jne
hlt
mov
cltd
movb
ljmp
scas
add
daa
psllw
and
shl
sar
popf
xor
cmpl
mov
inc
mov
lds
dec
jle
in
xor
test
cmc
call
mov
stos
cmp
push
das
fdiv
aaa
fwait
push
mov
xchg
arpl
add
jle
cmp
xor
in
andl
popf
add
scas
jo
sarb
push
mov
cmp
xchg
rclb
jl
or
fistpll
cwtl
push
adc
xor
fdiv
test
adc
ljmp
push
sub
mov
mov
inc
jbe
adc
divl
shrl
jo
adc
mov
loopne
divb
xor
cmp
jp
and
xchg
pushw
push
int3
enter
imul
jmp
sub
cmp
and
xchg
mov
test
pop
adc
xchg
xor
pop
icebp
sub
imull
mov
mov
jmp
push
enter
mov
cmp
lock
es
outsb
pop
inc
pop
push
icebp
sub
leave
aad
shr
cmpsl
dec
lcall
test
sbb
pop
fldt
inc
cmpsl
aas
sbb
pop
test
repnz
je
mov
repz
push
loopne
in
call
mov
jbe
xor
popf
inc
mov
bound
pop
adc
pop
inc
jg
out
mov
gs
div
out
jns
push
sbb
push
mov
sub
fimull
fnstenv
pop
cltd
lock
scas
jl
xlat
xchg
mov
hlt
neg
or
loop
push
cs
rol
fcmovnb
loop
test
lods
push
aad
mov
adc
adc
andl
aad
sbb
cmp
cmp
cmp
or
call
push
mov
lock
mov
mov
sub
mov
mov
je
push
jo
fcomi
mov
subl
sbb
mov
mov
adc
push
mov
sbb
mov
mov
ficomps
and
mov
push
ret
ror
ret
and
jl
insl
stc
adc
pop
push
mov
jge
stos
rorb
dec
inc
stos
mov
sti
fistpll
sbb
jge
or
test
test
mov
adc
or
adc
sti
sahf
scas
andl
xor
in
mov
enter
sub
sub
loope
sbb
aaa
xchg
and
movswl
and
and
fisttps
fucomp
add
mov
cmp
jl
cld
outsl
out
sbb
push
arpl
mov
add
jp
inc
addr16
out
jno
pop
pop
fwait
imul
sti
repz
inc
mov
and
cmp
das
std
cmpl
jecxz
mov
movq
dec
iret
mov
out
pop
push
jg
test
fs
cmpl
sarl
in
mov
add
mov
mov
int3
sub
loopne
jle
xchg
xchg
mov
js
adc
shlb
shl
mov
sbb
sti
lods
mov
fsubrp
sub
cmpsb
jne
orb
js
and
jge
jne
sub
jno
and
daa
dec
push
cmp
lock
ret
mov
cmp
loope
cli
inc
into
jbe
sub
pop
ss
pop
shlb
hlt
std
cmp
dec
sahf
cmp
pop
adc
sub
jmp
pop
in
shl
adc
push
inc
ret
push
cmp
fmul
shrl
xor
jo
pop
mov
sub
push
movsl
mov
jecxz
mov
mov
jo
cmpb
cmp
mov
add
aas
mov
cmp
stos
push
dec
xor
aad
imul
fimull
xor
daa
adc
lret
and
mov
sbb
xor
pop
push
scas
lock
out
popf
jp
stc
mov
lods
movsb
sub
lret
stos
xchg
jp
mov
dec
not
test
xchg
push
testb
xchg
pop
test
add
and
mov
pop
sub
test
mov
xor
mov
push
jae
mov
jno
imul
ss
inc
jnp
lret
mov
frstor
bound
fidivl
sub
jnp
in
sub
sbb
pusha
shr
ret
xchg
push
jno
test
dec
push
or
in
add
pop
jae
lds
push
test
pop
jl
xchg
int3
sub
mov
imul
cmp
pop
stos
cmp
and
push
xlat
sbb
js
mov
aad
inc
add
adc
pop
xor
cmp
imul
test
jae,pt
test
clc
pop
aaa
scas
jmp
lret
cmp
aad
fsubrl
mov
inc
je
sub
cmp
in
adc
adc
pop
or
mov
xchg
mov
test
adc
mov
aaa
mov
sbb
pop
mov
add
jge
dec
jo
sbb
arpl
imul
xlat
ljmp
test
or
mov
mov
test
andl
cmp
mov
mov
and
movsb
inc
ds
mov
jae
cmc
sub
aam
sahf
insl
cld
mov
xchg
lcall
push
cld
jmp
popl
cld
push
scas
lret
sahf
xchg
xor
daa
fdivl
lock
ljmp
mov
loop
pop
jmp
in
imul
dec
sahf
mov
dec
loope
test
jmp
mov
pop
mov
aam
jmp
daa
js
aam
out
sbb
push
jmp
rcl
roll
das
cmpsl
or
sti
xor
jbe
jle
insl
push
loope
adc
mov
int3
out
mov
pop
paddq
sarb
test
or
cmpsb
jp
jno
sbb
or
movb
popa
clc
xchg
mov
je
fwait
add
fisubs
nop
mov
xlat
into
into
pushf
sbb
ficoml
and
xchg
xchg
pop
loopne
pop
out
cmp
xchg
lea
cmpl
clc
cld
ficompl
adc
loop
xchg
cmc
sub
cmp
arpl
xor
dec
dec
rcll
pusha
dec
and
pop
push
jo
cli
mov
ret
and
outsb
out
sbb
push
filds
or
push
fwait
jge
roll
lods
pop
xchg
adcb
bound
sub
cmp
sub
add
test
push
xchg
pop
pop
mov
cmpsb
mov
dec
rol
test
out
cmc
lock
mov
outsl
add
dec
and
lret
push
faddp
insl
cmp
push
sub
mov
or
js
sti
repz
xchg
sbb
mov
sbb
pop
rcrb
mov
int
mov
sbb
push
xlat
inc
sub
roll
add
pop
jmp
mov
mov
orl
js
pop
rcll
cmp
ret
aaa
or
push
xor
push
leave
dec
lds
stos
add
icebp
mov
movsl
cltd
adc
sbb
xchg
fildl
inc
dec
mov
dec
push
pop
xor
and
pop
adc
stos
xorl
mov
pushf
mov
test
loope
pop
inc
out
sub
cmpsb
jmp
jge
iret
repnz
or
test
jle
outsl
add
js
test
dec
add
jecxz
or
mov
push
scas
cmp
clc
stos
push
fsub
push
dec
and
adc
lret
inc
pop
js
jae
xor
sbb
adc
inc
adc
inc
cmpsb
arpl
add
dec
push
xor
or
jg
xchg
popf
sbb
rorl
icebp
loope
popa
lods
push
popa
xor
mov
or
push
stc
lods
idivl
aaa
fdivrs
outsb
jmp
pop
jb
mov
test
iret
rorl
jo
outsl
das
jbe
cmp
mov
and
jle
call
add
xor
shlb
scas
inc
int3
inc
repnz
outsb
test
repz
lret
jmp
shll
cmp
mov
scas
enter
adc
pushf
jne
xlat
mov
pop
cmp
mov
icebp
fucom
push
outsl
jnp
shrb
push
inc
add
jecxz
and
pop
dec
daa
sbb
mov
outsb
jmp
add
jp
dec
cmpsb
sub
add
scas
scas
sub
push
mov
outsl
xchg
push
popa
in
push
mov
xchg
pop
mov
xlat
cmpsl
inc
cmp
rorb
jmp
enter
pop
jl
or
push
call
mov
sbb
mov
jge
orb
sbb
ss
sub
or
rcll
sub
inc
dec
sbb
pop
ss
xlat
shr
mov
mov
xchg
filds
sbbb
movsl
test
je
or
outsb
cmp
jne
xchg
jae
inc
inc
cmp
add
add
int3
cli
scas
jmp
cmp
add
xlat
push
push
repz
insl
push
xchg
or
push
pop
stos
jno
mov
cs
push
xor
lea
add
leave
adc
xchg
jecxz
call
dec
lods
adc
scas
cmc
sub
inc
lret
mov
inc
loopne
jmp
mov
jae
sti
jp
pop
ljmp
sub
mov
insb
xchg
bnd
stos
dec
mov
lods
mov
mov
roll
int3
pop
out
push
inc
lods
pop
add
cmp
adc
ficoml
sahf
lcall
jnp
jp
pop
add
cmpsb
stos
mov
out
js
test
repz
cmp
jp
data16
jns
outsl
xchg
add
scas
xchg
sbb
aas
xor
fistpl
fdivr
inc
lcall
lea
mov
pop
div
cmp
mov
inc
in
mov
sub
mov
incb
out
push
mov
in
or
jne
xchg
cmpsb
push
push
mov
mov
sbb
jbe
add
lods
mov
test
insb
mov
fwait
cmpl
mov
popa
sbb
pusha
jp
clc
movsl
or
sub
add
rcll
int
fsubr
out
pop
js
rcrb
andl
inc
jp
ret
push
mov
cmp
fsubl
icebp
cmp
shrb
jp
sub
mov
push
cmp
test
adc
sub
sub
mov
xchg
sti
into
sbb
shrl
jb
ss
icebp
adc
decb
std
cmp
push
mov
aam
les
ja
ss
icebp
dec
xchg
frstor
mov
pusha
pop
or
add
and
jo
push
lcall
repnz
or
loope
inc
incl
in
stc
jae
xchg
stos
xor
xchg
rcl
xchg
add
mov
lcall
jb
push
dec
adc
roll
push
push
sbbb
imul
gs
sub
popa
js
and
cmpsl
mov
clc
jle
int3
ljmp
out
shrl
les
dec
dec
cli
push
or
mov
mov
pop
cmp
sub
sbb
sbb
fbstp
jno
adc
in
mov
xchg
xlat
lods
mov
push
xor
sti
mov
insl
inc
dec
out
into
mov
imul
mov
ret
push
fnstenv
cmp
aad
xor
clc
loope
lods
pusha
and
fiadds
cmp
mov
jl
pop
clc
pushf
pop
cmp
adc
jmp
pushl
stos
mov
lahf
aam
sbbl
pop
ds
add
xlat
sbb
adc
clc
sbb
sahf
fsts
or
aas
jge
sti
lods
hlt
bound
adc
jno,pt
or
jmp
out
icebp
daa
cld
repnz
cmp
loope
push
push
sahf
mov
int3
jp
jp
adc
repz
and
adc
xor
test
push
ja
xlat
mov
outsl
pop
xchg
add
es
push
stos
lock
shlb
inc
loop
push
mov
mov
add
insl
aad
mov
mov
xor
jp
sub
mov
and
aad
push
lea
push
adc
cli
movsl
jnp
pusha
cmp
mov
sbbb
aaa
xchg
lock
ficoms
fisubl
in
inc
xchg
fdivrs
iret
ss
jnp
insl
lahf
jge
adcl
jb
pop
mov
mov
pop
or
pop
push
lock
call
or
xor
pop
outsl
sbb
mov
mov
add
xlat
push
aas
or
lret
popa
pop
adc
push
mov
lock
lea
add
push
ja
rolb
xchg
mov
pusha
jo
ja
fdivl
jno
aam
fcmovb
inc
scas
cmc
xchg
xchg
sete
fcompl
dec
ret
pop
adc
pushl
mov
xor
lret
xchg
inc
push
call
mov
mov
sbb
jno
or
add
daa
loop
or
aam
or
icebp
scas
dec
sub
cmp
sub
sbb
cmpsb
cmpsl
fists
xorl
fwait
arpl
push
mov
inc
out
dec
out
add
add
into
js
dec
ss
mov
jb
in
add
adcl
push
cmp
pextrw
aaa
in
mov
test
push
jo
lea
add
lods
add
movsl
insl
xchg
dec
mov
insb
xchg
test
adc
out
clc
pop
bnd
sbb
xor
test
or
cmp
jl
iret
out
sbb
mov
hlt
stos
xlat
sti
jnp
ljmp
xor
jae
loope
pop
inc
iret
or
rcl
pop
fdivs
inc
les
mov
sbb
data16
loopne
jecxz
aas
cs
in
addb
cmp
jl
inc
and
add
jne
jge
in
xor
jbe
fadd
inc
push
xchg
loopne
fildl
push
jnp
rcrb
push
sub
loop
and
fistl
cltd
stos
scas
cmp
cmp
cmovs
mov
stos
fidivrs
movb
jnp
jns
cmpsl
pop
mov
or
out
mov
orb
movsl
or
cwtl
jbe
adc
test
mov
push
adc
test
jmp
pop
add
mov
mov
movsl
ret
sarl
xor
fwait
bound
xchg
cmp
adc
cltd
scas
setae
je
jns
or
pushf
sbb
push
mov
cmpsl
add
cmpb
mov
clc
adc
xchg
mov
add
cwtl
mov
aas
inc
pop
mov
out
loop
inc
mov
call
add
xor
jo
ds
lods
and
mov
movsl
xchg
loop
push
inc
mov
mov
aad
jecxz
sub
and
je
dec
ss
xor
lock
cmp
push
and
mov
dec
je
mov
mov
jmp
pusha
cltd
cli
xchg
xor
je
pop
push
ljmp
iret
sbb
scas
add
out
inc
sti
adc
jp
sbb
sub
insl
push
dec
loope
mov
lods
adc
add
addr16
xor
push
mov
pop
or
push
ljmp
movsl
xor
inc
arpl
sbb
pop
push
pop
mov
movsl
or
pop
out
repnz
cli
pusha
roll
bound
pop
lods
lea
or
cmp
test
subb
push
push
lea
jecxz
lret
addb
push
add
push
sbb
xor
add
mov
jae
imul
pop
movsb
lds
repnz
mov
mov
cmp
ror
push
sahf
sbb
nop
shl
mov
push
mov
inc
or
popa
add
cs
jo
jo
inc
pop
ret
add
jo
inc
inc
xchg
cli
jle
repnz
aam
inc
pop
cmp
xchg
jmp
test
mov
inc
pop
mov
loop
cmp
push
or
sbb
dec
xchg
int3
ds
push
notb
cld
xor
pop
xor
into
divb
std
adc
div
sub
adc
sbb
pop
pop
mov
jp
enter
test
jnp
mov
aaa
xor
or
adc
dec
imul
jmp
insb
lahf
or
inc
pop
pop
sbb
mov
jecxz
jo
mov
sti
fsts
cltd
inc
pop
popa
aam
jecxz
xchg
cmpsb
xor
dec
pop
jge
addr16
xor
and
lods
insl
jl
jae
or
shld
cmp
je
inc
fiadds
sti
sar
sub
sti
sub
loop
xchg
bound
mov
imul
xchg
cmp
add
and
sbb
movsl
inc
jle
and
in
mov
xchg
sub
add
xchg
lret
cli
dec
loope
push
movsb
out
mov
fistpl
push
outsb
iret
sub
add
or
xchg
dec
bound
xchg
mov
outsb
or
test
pop
lret
les
andb
mov
or
push
out
es
push
xchg
retw
outsb
xor
lods
or
add
dec
mov
fwait
ds
call
push
dec
repnz
push
mov
push
jmp
sbb
insb
push
push
xchg
ret
out
test
xlat
and
jl
movsl
dec
out
adcb
and
test
roll
push
cmp
xorl
jge
mov
mov
and
dec
js
inc
bound
adc
lock
and
adc
xchg
push
push
adc
mov
jmp
lock
sub
clc
jmp
pushf
add
dec
bound
or
popa
jg
ds
int
pop
out
pop
scas
nop
inc
dec
jecxz
test
repnz
jno
xchg
add
fdivl
outsb
add
push
clc
lds
andl
mov
or
rorl
fwait
fs
inc
push
sbb
les
lret
push
and
sbb
or
pop
and
mov
push
or
jecxz
ljmp
pop
jl
lock
pop
movsb
test
mov
pusha
sbbl
push
stc
call
push
mov
mov
enter
mov
xchg
jns
jp
mov
jno
cmp
mov
outsl
adc
inc
dec
adc
jnp
pop
or
xor
mov
aaa
xlat
xlat
insb
popa
and
xchg
and
xor
mov
cmp
pusha
adc
adc
or
cli
lcall
jg
push
stc
cmp
cltd
sbb
inc
test
xor
mov
mov
fdivrs
lods
in
add
in
inc
push
mov
and
push
stc
inc
insb
adc
dec
clc
mov
in
arpl
xor
testl
jae
adc
cmpsb
mov
jp
push
push
inc
push
adc
lea
adc
sbb
xor
cmp
push
inc
jecxz
and
orb
out
addr16
pop
or
call
cld
jp
pushf
adc
mov
cmp
push
mov
repz
cmp
mov
sub
and
sbb
push
mov
fwait
ret
fidivs
jns
dec
outsl
dec
jl
cwtl
jl
call
mov
push
pop
mov
cmpsl
sahf
lret
dec
inc
mov
cmp
ja
in
bound
outsl
and
or
daa
mov
pop
add
imull
fimuls
xor
bound
mov
push
lret
inc
les
xor
jmp
outsl
rorb
mov
in
divl
shrb
xchg
int
xlat
inc
test
jmp
js
dec
sahf
lret
out
or
aad
xlat
cs
and
or
jno
mov
pop
mov
mov
arpl
shrb
or
cmc
pusha
jp
aam
das
movsl
popa
cmp
xor
popa
jecxz
push
stc
into
loop
loopne
popf
outsb
push
call
pop
inc
loop
pop
xorl
mov
xchg
test
or
repz
in
mov
inc
xor
inc
mov
rcl
sahf
jg
insb
ret
fsubp
mov
or
sbb
sub
test
add
pop
add
jp
orl
mov
test
in
add
mov
pop
xchg
shlb
xchg
and
shll
pop
sbb
setle
pop
outsb
js
ljmp
mov
sar
lret
add
les
pop
cmp
inc
jnp
fdivl
xorb
pop
or
push
and
xorl
sbb
out
mov
push
jne
xchg
jg
insb
repz
xor
loopne
repnz
fdiv
stos
roll
fnstcw
test
add
dec
iret
cmp
mov
add
xor
jnp
inc
sbb
rclb
push
lcall
loopne
and
mov
push
add
sti
add
add
mov
pop
add
jo
in
outsb
jmp
xor
xor
pusha
and
mov
ss
aas
mov
mov
xchg
and
lods
mov
sbb
aas
mov
insl
popa
aaa
jp
iret
leave
rcrb
mov
and
pushf
mov
pop
sub
stos
push
int3
lea
push
adcb
add
pop
jp
cmp
mov
loopne
sbb
ss
pusha
sbb
js
mov
push
lahf
or
pop
shrl
pop
sbb
jbe
jo
imul
inc
fisttps
les
loop
and
mov
and
imul
in
mov
stos
ds
and
cmp
jns
or
push
push
inc
aad
mov
clc
pop
imul
mov
cli
jecxz
sub
push
push
mov
test
mov
jmp
lret
cmp
mov
inc
mov
mov
jno
xchg
jnp
pusha
xchg
cmpsl
and
lods
roll
jbe
addb
sbb
cli
ret
push
out
bound
mov
in
stos
leave
loope
pop
jp
mov
in
inc
mov
lret
cmp
lds
data16
add
pop
push
dec
sbb
xchg
mulb
sahf
adc
sbb
in
sub
dec
shrb
cli
jo
sub
imul
push
mov
sub
mov
dec
sbb
mov
mov
inc
test
mov
addb
lods
mov
loop
es
pop
sub
lock
sbb
aad
loopne
mov
adc
mov
mov
xor
das
loope
je
mov
mov
inc
in
mov
ficomps
sti
test
adc
mov
adc
dec
insb
mov
and
xchg
dec
call
insb
test
imul
add
xchg
aas
cmp
jp
pop
or
sub
popa
add
aas
jns
jecxz
xchg
scas
icebp
mov
loope
add
mov
xor
mov
fiadds
push
fistl
push
in
sbb
or
mov
and
xor
dec
arpl
out
push
add
dec
jecxz
push
fsts
push
arpl
cltd
test
pop
mov
mov
in
and
mov
shl
out
sarb
loope
add
int
mov
or
icebp
lds
fistpl
sub
lret
out
sahf
and
push
sub
cmp
lds
push
fiaddl
dec
jp
rorb
pop
aas
lock
fstpt
sbb
stos
sbb
or
jge
stos
mov
and
testl
sub
push
gs
and
mov
mov
pop
inc
cld
dec
pop
lods
addr16
syscall
push
add
sbb
adc
sbb
cmpsl
push
adc
les
sub
push
les
mov
addb
and
mov
psubusb
mov
fstl
insl
adc
add
cs
fiadds
cmp
imul
std
push
fwait
dec
add
add
push
pop
addb
call
cmp
or
popl
ret
popa
loop
int
addl
cmp
pop
movsb
gs
lea
cmp
xor
mov
loope
ljmp
movsl
fcmove
ret
orb
jp
pop
in
sbb
pop
inc
jns
jne
dec
sub
or
mov
mov
mov
jg
mov
movsl
and
and
lahf
testl
mov
lcall
push
pop
loope
cmp
cmp
data16
loop
sbb
addb
cli
add
sarl
adc
loopne
mov
out
aad
xchg
mov
jecxz
idivl
jo
clc
lret
xorb
add
mov
aaa
daa
mov
xchg
in
popa
pop
roll
fistl
mov
push
add
cmp
mov
jmp
add
pushf
test
jae
and
loope
addl
std
in
jae
pop
popa
test
xor
rolb
fwait
cltd
in
lret
cwtl
adcb
cmp
repz
push
xor
inc
xor
jp
mov
icebp
jmp
cmp
insl
xchg
inc
shll
xor
int3
ljmp
pop
pop
push
cmpl
cld
pop
sbb
pop
or
cmovp
xchg
sarl
push
lods
jecxz
inc
push
xchg
jmp
aaa
adc
sti
iret
cmp
mov
push
adc
jge
mov
daa
push
xchg
pop
xchg
mov
jmp
cmpsl
cmpsl
or
or
ret
cwtl
fmuls
jge
xor
sarb
xchg
push
ss
test
push
pop
jo
and
int3
pop
dec
mov
cltd
dec
mov
xchg
lock
or
xlat
shrl
mov
inc
mov
iret
fmul
jle
cld
push
jo
je
mov
or
je
stos
imul
push
subl
and
pop
mov
jg
jns
sub
stos
outsb
loopne
xchg
cli
shr
xor
adc
and
call
shll
adc
js
sarl
fsubrl
or
inc
mov
mov
jnp
mov
jno
cmp
mov
dec
or
fmulp
testl
and
loop
scas
icebp
pop
in
mulb
mov
out
loope
stos
push
nop
das
dec
insb
inc
cmp
adc
inc
sub
inc
jo
inc
scas
adcl
test
xchg
ret
fwait
mov
jmp
cmp
mov
pop
add
jmp
mov
xchg
push
ffreep
mov
into
ret
inc
xchg
les
leave
lods
movsl
xchg
clc
mov
sub
js
or
mov
inc
call
mov
or
sub
cwtl
jg
jbe
testb
andl
pop
pop
push
data16
inc
testl
out
iret
daa
gs
loope
arpl
mov
cld
add
sbb
pop
cwtl
or
add
mov
mov
push
mov
mov
xchg
and
in
pop
mov
ljmp
fimuls
cmp
pop
or
sbb
or
std
lock
adc
sbb
cld
loopne
add
int
xchg
sub
lahf
cmp
in
scas
dec
jmp
mov
adc
sub
lret
sbbl
add
out
pcmpeqb
push
lret
ret
sbb
xor
xor
push
iret
dec
pop
fildl
test
outsb
and
adc
nop
sbb
sub
xor
xchg
aad
add
jg
jge
pop
cmc
loop
xchg
jno
into
jbe
mov
pusha
push
imul
push
int3
add
xchg
je
dec
je,pn
mov
bound
mov
push
ret
cmp
adc
and
in
loope
in
stos
aad
daa
push
setne
mov
lcall
addr16
adc
mov
or
mov
and
xor
mov
fistps
call
fistps
mov
jne
sete
std
addl
and
int
shlb
mov
daa
sahf
daa
fsubl
xor
lret
add
mov
sbb
fcomip
iret
aam
push
adc
add
stos
in
push
clc
xchg
push
lods
loopne
bound
in
inc
addb
pop
push
fildl
subl
sbb
fnstcw
loope
sub
adc
add
int
cmp
rol
aad
adc
push
jp
or
in
sbb
inc
xor
imul
aam
adc
stos
push
xorb
sub
xchg
scas
es
cmc
mov
mov
lret
jp
xor
xchg
cmpsl
cmp
mov
jne
pusha
notb
sti
push
icebp
fldl
pop
loope,pt
sbb
stc
cmp
pop
jnp
icebp
stos
test
das
popf
shlb
sbb
pusha
repnz
stc
sub
insl
and
or
arpl
adc
xlat
stos
repz
sub
scas
pop
push
nop
jmp
daa
pop
sar
dec
mov
call
out
dec
scas
je
sub
jmp
add
sub
xor
test
lret
fidivrl
fiadds
sub
xchg
jp,pt
idiv
hlt
pop
sub
push
pop
call
clc
add
fisttpl
push
inc
ficompl
rol
negl
xchg
sbb
inc
jo
cmc
jmp
sub
xchg
mov
sub
cwtl
push
aad
mov
rclb
xor
ja
stos
fsubp
incl
mov
stos
stc
mov
lods
xor
add
je
adc
clc
insl
das
jns
sbb
imul
or
js
push
test
jecxz
pusha
mov
add
aam
dec
add
push
pop
or
popa
bound
and
push
pushf
jo
out
jge
mov
loop
jmp
mov
jle
or
mov
test
sub
sub
ret
xchg
jle
dec
adc
xchg
add
xchg
fnstcw
adc
mov
js
aad
and
sub
cmp
mov
inc
dec
es
mov
repz
xor
push
stos
mov
ja
adc
jle
xchg
lds
cs
add
call
jp
shr
int3
mov
mov
xchg
xor
shl
stos
loopne
fwait
ja
in
dec
ja
cmp
test
lods
sahf
inc
roll
push
pop
lea
in
xchg
dec
mov
pop
and
sbb
sbb
xlat
call
mov
pop
push
push
aam
test
add
jae
dec
adc
add
lahf
pop
fisubs
pushf
dec
filds
fs
cmpsl
xor
int3
cmc
push
shrl
loope
lock
push
cmp
es
dec
sub
and
push
push
xlat
and
arpl
or
in
adc
push
xlat
xor
outsl
test
mov
mov
lcall
es
mov
scas
mov
aad
add
mov
and
js
pop
test
mov
pusha
sub
xchg
xor
fiaddl
clc
je
jmp
mov
push
xor
mov
push
stc
xlat
jo
mov
inc
loopne
cmpsl
cmp
mov
cmp
pop
push
punpckhbw
es
inc
dec
push
or
lret
imul
xchg
out
push
leave
push
mov
int
aad
lahf
test
das
ja
fisttps
insl
mov
jp
pop
je
js
push
scas
sub
fwait
cs
sub
insl
icebp
add
add
int
bound
enter
sar
dec
jmp
or
jb
mov
jno
ja
pop
mov
insl
pop
add
das
imul
pop
andl
je
or
adc
popa
add
lock
out
pusha
std
add
out
rsm
out
xchg
xchg
xchg
mov
push
hlt
inc
pop
cltd
stos
xor
insb
ljmp
ret
jg
xlat
cmpsb
rclb
jne
imull
loop
mov
mov
pop
pop
jp
and
xorl
pop
push
add
hlt
push
xor
pop
jl
sub
mov
ljmp
outsb
push
xor
add
sub
add
mov
or
loop
sub
out
ljmp
aas
cmp
in
sbb
daa
adc
andl
xchg
aaa
hlt
repnz
sub
mov
dec
pop
loope
inc
jl
xor
cmp
lds
nop
popa
adc
das
mov
inc
xor
add
stos
ret
mov
nop
pop
mov
aaa
fbld
xor
push
and
lcall
les
out
call
inc
or
hlt
nop
mov
ds
loopne
lea
cmp
xchg
in
pop
add
adc
mov
test
cmp
add
mov
add
mov
cmp
test
insl
lds
sub
aas
xor
sbb
mov
jg
push
mov
xchg
pop
pop
in
loop
or
lds
pop
and
call
xchg
add
xchg
in
stos
das
insl
cmc
xchg
jl
test
inc
incb
jno
inc
pop
jge
jecxz
jl
sahf
mov
add
loop
push
cmpsb
nop
out
stos
jecxz
cwtl
lds
mov
push
mov
adc
sbb
inc
adc
jnp
jge
pop
or
push
fidivl
fisubs
lock
outsl
mov
mov
mov
inc
mov
sub
cwtl
shl
shl
repnz
clc
pop
ds
loope
pushf
sarl
popf
inc
mov
inc
pop
cmp
lods
push
popa
aas
imul
jg
lret
outsl
add
ljmp
push
aad
xchg
xchg
xchg
pop
aam
mov
xor
xor
dec
cmp
adc
mov
ljmp
push
test
cld
fistpll
lods
rcrl
xchg
fdivl
scas
push
inc
pop
or
cltd
mov
imull
adc
sub
push
rcrb
test
or
xor
loopne
je
xor
jg
lahf
mov
pop
and
cs
xor
ds
popa
inc
ret
adc
fadds
sbb
mov
stos
shlb
daa
jl
pop
into
cmp
cmp
call
fisubl
popa
ret
imul
std
sub
mov
aam
shl
scas
add
jnp
xchg
mov
shrl
into
dec
adc
jecxz
jo
and
adc
push
sub
and
shl
rolb
das
incl
je
dec
loop
loope
test
test
push
in
inc
cmpsb
int
sbb
stos
mov
shl
inc
js
inc
mov
mov
movsl
mov
ja
jae
imul
adc
lock
jp
xchg
cmpsl
dec
sahf
cmp
les
pop
call
push
or
cwtl
sub
nop
outsl
sbb
scas
in
inc
lahf
push
pmaxub
or
or
mov
xlat
jno
push
sub
cmp
int3
inc
in
sahf
aas
jmp
mov
pop
xchg
cmp
jl
xchg
cmp
sbb
mov
xor
adc
add
into
mov
and
es
stos
mov
push
ljmp
stos
ljmp
push
ja
stos
je
and
insb
push
sub
cmp
das
stos
sbb
js
jno
or
push
sar
imul
sbb
shlb
sti
xor
mov
ror
outsb
js
movsb
jl
or
dec
cmpl
ret
int
sbbl
or
jle
xlat
and
mov
push
push
test
xchg
and
sub
xchg
mov
pop
push
pop
loopne
xor
popa
inc
pop
scas
lods
xchg
call
push
cmc
fs
xor
jne
lret
cli
cld
mov
adc
xor
adc
pop
std
sub
mov
dec
sbb
push
add
je
jo
adc
clc
sbb
sbb
push
xor
push
popa
mov
xchg
aaa
xor
adc
dec
jnp
rcr
adc
xor
lahf
pusha
or
call
xchg
test
pop
push
sahf
sub
imull
cmpsl
outsl
in
aaa
bound
jg
orb
outsl
div
icebp
mov
out
mov
mov
out
bound
xchg
clc
mov
cmp
sti
lret
mov
arpl
adc
or
rcrb
arpl
xchg
xor
mov
xor
repz
cmpb
jg
test
loopne
and
andl
les
incb
jmp
lea
cmpsl
adc
cltd
loope
arpl
int
loop
stc
cmp
pop
cli
pop
sbb
data16
bound
cmp
xchg
mov
inc
cmp
es
mulb
je
imul
repz
jmp
lret
push
mov
pop
movsb
das
mov
gs
sbb
xchg
jle
inc
shlb
fwait
lods
pop
pop
or
in
mov
mov
outsl
mov
sub
int3
or
cmp
cmpsl
pop
and
jg
loopne
movsb
and
xor
scas
mov
cmp
pop
aad
in
ja
out
mov
add
and
cli
push
loope
mov
sti
inc
popf
and
call
bound
subl
mov
mov
push
arpl
mov
xor
js
sbb
out
lahf
xchg
inc
shl
mov
push
mov
or
out
shlb
pop
xchg
cmpsl
addb
test
cmp
jecxz
adc
loop
push
pop
mov
or
aaa
dec
insl
pop
adc
cmp
bound
add
stc
pop
jge
repnz
mov
push
cmp
jl
call
xorl
add
inc
xor
ds
jo
push
sar
mov
lds
cmpsl
loope
xlat
jmp
test
dec
ror
lahf
stos
or
daa
enter
cmp
fcom
ja
ss
cmc
xchg
lret
cltd
mov
pop
dec
sbb
lds
dec
xor
adc
mov
lret
or
and
repz
xchg
mov
stos
aad
rorb
dec
sarb
mov
test
jge
mov
lds
hlt
nop
mov
inc
push
js
orb
xor
sbbl
loopne
or
loope
subl
dec
faddl
inc
addr16
push
lret
xchg
cli
xadd
inc
cmp
cmp
lock
jg
cmc
or
es
sub
push
cmp
daa
xlat
loop
cli
or
add
mov
fsubrs
rcl
outsb
sub
mov
sti
inc
jae
repnz
xchg
icebp
inc
imul
fnstcw
xchg
popa
sbb
or
nop
loop
subl
outsl
cmp
mov
rorl
and
pop
or
arpl
push
cmp
and
fcompl
das
nop
push
cltd
sahf
inc
xor
imul
flds
sbb
pop
mov
mov
popa
repnz
ficoml
lods
or
jg
adc
jbe
add
int3
inc
leave
mov
inc
ljmp
lock
push
jbe
or
push
cld
data16
repnz
ljmp
jno
push
call
pusha
mov
sbbb
mov
getsec
xchg
out
pop
lcall
adc
pop
sbb
lahf
and
dec
mov
xchg
mov
in
outsb
cmpsb
std
xor
fsub
sarb
cmc
add
rolb
data16
add
mov
fmulp
mov
dec
stos
movsl
pop
xchg
mov
sbb
cmp
inc
pop
mov
cmpsl
fsubrl
daa
sbb
loopne
movsb
xor
jmp
adc
stos
sub
inc
or
test
daa
or
movsb
cmpsb
mov
jecxz
jno
arpl
lret
add
mov
dec
and
pop
xor
je
rorl
dec
pop
cmp
jg
mov
enter
and
add
cmc
or
push
pop
cmc
mov
lock
push
dec
psubsb
dec
mov
fdivrp
lcall
xor
and
lahf
comiss
xchg
sub
add
imul
pop
loop
jbe
and
lea
repz
je
in
dec
add
addr16
sbb
scas
idivb
xor
fxam
sbb
jo
jl
xlat
mov
mov
imul
addr16
hlt
and
hlt
dec
das
shlb
sbb
loop
adc
in
jmp
inc
mov
jecxz
mov
inc
sbb
imul
addr16
cmpsl
das
sbb
jnp
xor
pop
cmp
sbbb
into
mov
xor
jae
popf
and
or
or
das
and
test
xor
xchg
dec
lcall
push
std
out
xchg
loop
lods
aad
pop
ret
cmc
xor
hlt
push
inc
out
adc
jne
fisubs
fwait
xorl
icebp
or
jbe
push
cwtl
jbe
in
pop
or
mov
test
aaa
fnstcw
add
mov
push
mov
jg
sbb
mov
and
movsl
xchg
push
inc
rcrl
mov
jecxz
cmp
test
js
inc
adc
or
mov
roll
pop
movb
mov
in
das
test
dec
ret
mov
xchg
push
pop
js
cmc
pusha
shlb
pop
or
push
cmp
je
fistl
sub
xchg
rcrb
mov
xlat
mov
popl
add
sbb
add
cmp
rorb
mov
pushl
mov
or
jge
mov
mov
push
and
movlps
addr16
int3
lods
push
iret
imul
xor
jnp
adc
jne,pn
and
pushf
mov
js
jns
or
imul
mov
shlb
loopne
or
js
fwait
movsb
sti
idivl
adc
push
hlt
push
lods
lock
cmp
push
rcrb
mov
sub
cmp
xchg
arpl
jmp
lahf
sub
sbb
outsl
push
add
xchg
inc
pop
mov
mov
fldenv
adcl
outsb
into
and
loope
xor
xlat
mov
call
lret
mov
insb
or
and
push
imul
push
or
push
dec
mov
in
lahf
cmpsl
add
insl
lret
push
pop
xchg
jl
fldt
pop
push
movsb
sahf
lock
pop
pop
mov
jae
or
xor
sub
sub
sub
xchg
pop
sahf
xlat
lret
pop
add
les
mov
xchg
sbb
cmpsb
arpl
pop
lahf
rclb
mov
pusha
mov
or
out
outsl
cltd
sbb
push
add
pop
dec
movl
into
rolb
mov
or
clc
pop
cmp
jmp
add
pop
mov
xchg
loope
push
daa
fimuls
pop
in
mov
sub
xchg
pop
cmp
mov
lds
movsb
push
inc
xchg
xchg
scas
ljmp
xor
mov
dec
jp
or
mov
cmp
jmp
or
test
or
pshufw
popa
out
test
push
sahf
cmp
andl
jle
popl
mov
test
mov
inc
jb
add
inc
flds
pushf
push
ss
test
fdivrl
stos
add
xchg
lods
lret
sub
lock
ljmp
push
out
fwait
dec
leave
pop
aad
out
fisttpl
add
idivl
test
imul
and
fistps
out
or
prefetcht1
nop
aad
push
mov
jl
dec
pop
add
cmp
ja
fistps
dec
cli
negl
inc
fimuls
sub
mov
lahf
pusha
mov
ror
mov
imul
xor
inc
cmp
add
or
mov
lock
sti
dec
cmp
jp,pt
mov
loop
shll
lock
push
mov
or
pop
pop
test
jne
clc
loopne
fs
loopne
scas
mov
push
ljmp
or
sbb
push
mov
sbb
mov
xlat
adc
cmc
stos
xor
or
bound
add
cmp
sbbb
stos
jo
adc
and
clc
das
cmpsl
pusha
dec
pop
aaa
addr16
sbb
in
inc
pop
jle
test
fsubs
cs
add
xchg
mov
imul
cmpsb
cmpsb
ret
xor
inc
lcall
fwait
scas
push
mov
gs
cmp
inc
xchg
sbb
push
mov
cmpsl
test
pop
test
push
sbb
cltd
js
cmp
or
test
cli
mov
fwait
jmp
dec
xor
mov
pop
icebp
aad
sbb
lret
clc
cwtl
call
mov
add
call
sbb
add
mov
adc
mov
clc
icebp
out
adc
push
sub
loopne
xor
call
push
ljmp
cmp
push
fisttpll
addb
push
push
mov
jecxz
push
loopne
je
add
sti
movsl
dec
mov
test
aad
enter
inc
aaa
in
add
sti
xlat
mov
nop
aad
aam
roll
cmp
aas
ds
pop
xchg
mov
lock
push
in
dec
dec
push
repz
cmp
push
or
cmc
push
aaa
sbb
movsb
cmpsb
sar
lock
mov
inc
and
shr
je
lcall
push
cmp
cli
xor
push
movsb
mov
xabort
es
or
cmc
pushf
pop
add
sbbl
movsl
jb
in
dec
roll
cmp
xchg
sti
idivl
cld
cli
lods
jbe
or
or
jecxz
jg
pop
cmp
fcomps
ss
loop
jbe
push
sub
push
jne
adc
jnp
push
jle
adc
dec
xchg
pop
jns
jge
loop
cs
das
aas
push
pop
xchg
test
out
push
lsl
popa
lea
nop
jl
mov
loopne
dec
sbb
mov
repnz
inc
pushf
lock
sbb
jp
xchg
popf
popf
mov
dec
shll
jno
xor
dec
ret
jge
inc
mov
pop
sub
cmpsl
push
mov
js
cmc
add
stos
or
sarb
aas
mov
cmpsl
or
inc
jnp
pop
fiadds
push
and
enter
pop
lods
clc
mov
push
pop
add
mov
inc
lahf
mov
and
push
loope
add
mov
inc
or
inc
mov
jae
and
push
sarl
sub
jmp
dec
jp
sub
inc
std
jne
setg
mov
lods
stc
xlat
and
das
sbb
mov
mov
dec
adc
loope
and
mov
jp
push
loope
ljmp
dec
outsb
in
lods
xor
xchg
xlat
or
das
popf
sub
rorl
in
mov
push
sbb
in
push
add
dec
and
es
or
jbe
fadds
mov
sti
clc
aas
cmpb
cmpsb
rcr
dec
inc
pushf
pop
outsl
or
and
cmp
xchg
xor
add
push
xchg
or
dec
stc
insl
out
push
push
loopne
mov
mov
or
adc
fldt
sarb
ja
pushf
or
or
lods
dec
xchg
test
clc
mov
fld1
aas
jne
mov
jne
add
mov
sub
movb
lcall
xlat
repnz
subl
mov
pop
push
add
call
mov
jbe
xchg
aaa
cmpsl
pop
cld
jno
ljmp
rolb
scas
mov
je
bnd
test
stos
add
push
sub
add
lea
test
ss
jns
rcll
mov
outsb
xchg
push
fidivrl
inc
push
xor
js
iret
push
xchg
push
cmpsb
pusha
or
sub
add
icebp
xor
fwait
icebp
call
adc
in
inc
add
aaa
or
fldenv
mov
sub
test
mov
rclb
jmp
movsb
push
inc
es
call
xor
mov
sbb
insl
out
push
cld
cmc
aam
jecxz
test
in
adc
xor
push
adc
add
stos
in
and
es
lret
fldl
add
gs
je
in
and
inc
mov
mov
mov
and
sahf
push
icebp
add
jbe
mov
push
sbb
mov
fwait
jne
mov
lods
or
fwait
aas
xor
ss
out
xor
add
ja
lds
add
xor
insb
int
xchg
mov
fistpl
xchg
or
mov
pop
in
sub
lcall
nop
sub
mov
sti
es
xor
inc
cmp
test
mov
and
pop
negb
and
lds
adcl
loop
enter
pop
xor
jge
mov
ljmp
dec
sarb
add
or
adc
jno
sub
cvtps2pi
popa
mov
mov
or
push
mov
or
ret
adc
into
lea
int
push
jo
popf
out
inc
out
les
add
ret
test
push
xor
mov
lock
imul
inc
cmc
iret
js
push
xchg
jbe
sub
call
in
into
xorb
lcall
mull
cmp
add
popa
in
jns
frstor
fwait
imul
pop
adc
mov
fwait
jmp
dec
mov
pand
iret
ja
stc
imul
sbb
push
loopne
mov
shl
mov
add
arpl
cli
xchg
fimull
fstps
fwait
pop
jbe,pn
xchg
enter
stos
aaa
dec
pop
rcll
push
mov
cli
adcb
or
stos
pop
push
in
lds
fdivs
mov
nop
pop
or
sub
jg
sub
push
pop
adc
and
xor
mov
repnz
add
shlb
push
add
mov
xchg
or
pusha
movsb
or
push
stos
add
enter
stos
mov
test
iret
jp
repnz
nop
nop
into
bnd
push
leave
lea
or
mov
loop
bound
loop
push
lods
cmp
sub
sub
and
push
mov
jmp
mov
into
clc
icebp
test
ljmp
out
cmp
call
sub
hlt
cli
inc
mov
and
mov
test
or
jno
or
das
sbb
push
sbb
clc
jecxz
icebp
cmpsl
xchg
push
inc
es
mov
ret
cmp
in
data16
cmp
add
adc
mov
in
sbb
push
sbb
mov
mov
cmc
add
mov
mov
ficoml
xchg
clc
orb
mov
inc
mov
mov
jge
jecxz
and
das
in
rcll
div
jge
mov
aam
je
jb
bound
shll
fcmovb
and
xor
movsb
adc
jecxz
pop
mov
pop
pop
pshufw
sti
lods
add
mov
int
jae
xchg
jp
jo
dec
or
add
xor
fwait
cmp
cmpsb
js,pn
and
mov
mov
arpl
or
jle
mov
mov
push
or
xor
push
add
pop
xlat
dec
fiaddl
dec
xchg
mov
fiadds
aas
lock
push
xor
jbe
imul
cmp
mov
jmp
ds
xchg
orl
jge
mov
sub
xchg
inc
movsl
adc
fisttpll
push
hlt
add
jg
push
jo
lods
dec
movb
and
je
push
ffreep
and
lea
push
xchg
adc
inc
js
mov
sbbb
mov
fs
jno
cmp
pop
xor
mov
push
pop
pop
ja
std
dec
scas
inc
xchg
daa
mov
mov
repz
in
sbb
out
sub
dec
inc
cmp
out
push
mov
cltd
insl
outsb
data16
pop
mov
mov
dec
and
icebp
dec
lock
xchg
xor
in
jb
xor
jnp
dec
inc
xor
clc
dec
mov
pusha
add
nop
pop
inc
pop
push
ret
out
mov
xor
ficoms
scas
test
cmp
dec
add
nop
jo
addr16
pop
js
je
lret
test
aas
int3
test
adc
aas
inc
hlt
or
add
mov
dec
addl
jne
adc
sub
popf
dec
in
and
jmp
mov
lods
pop
adc
mov
in
mov
mov
inc
sbb
out
daa
or
add
push
das
push
test
xchg
pop
xor
shrb
daa
adc
push
cs
mov
andb
dec
andl
out
mov
sub
mov
jmp
adc
push
repz
aaa
adc
aaa
fwait
jnp
aas
hlt
mov
or
cmp
pop
call
pop
inc
pusha
js
rorb
mov
mov
fdivl
in
adc
adc
mov
cmpl
loopne
in
movsl
pop
add
mov
sbb
negl
lahf
fnstsw
mov
push
sub
inc
ret
cmp
dec
lock
out
push
sbb
loop
xchg
shrb
popa
jle
ljmp
push
and
adc
xor
loop
cmpsl
or
xor
out
jae
xlat
lea
inc
arpl
bswap
dec
xchg
sub
mov
or
mov
cmp
mov
shll
xchg
insl
xor
mov
pop
fsubl
and
xlat
xchg
push
sbb
mov
pop
add
ljmp
in
out
adc
loop
int
add
dec
test
das
pop
xchg
rolb
aad
insb
xor
mov
xchg
hlt
ljmp
add
adc
fistps
lea
decl
mov
sub
in
sbb
rcrb
call
mov
mov
das
js
xor
jne
movl
fidivrl
rolb
push
jo
xchg
pop
sbb
or
loopne
into
xchg
lods
sub
mov
hlt
sub
add
stc
jp
lea
add
adc
lods
xchg
cmpsb
sbb
bound
mov
inc
push
push
fwait
je
fs
mov
xor
cmp
imul
mov
or
popf
hlt
cmp
roll
cltd
repnz
stos
pop
adc
or
ret
nop
es
test
pop
stos
or
or
jp
clc
ljmp
mov
and
addl
mov
add
inc
pop
cmp
sahf
or
xchg
sub
stos
loope
das
lock
pop
adc
mov
dec
lods
sbb
add
ret
jle
shrb
sbb
mov
fwait
fwait
call
sysexit
insl
cli
sbb
xor
aad
push
movsb
adc
dec
push
xchg
std
sub
xor
inc
insl
push
jl
ficoml
out
xor
out
pop
xor
les
inc
mov
lock
jnp
cli
rol
cs
fcmovb
xor
inc
fs
cmp
stos
fwait
sti
add
xor
pop
cmp
push
add
add
lahf
int
sbb
mov
sub
add
dec
inc
pop
sbb
dec
ja
inc
aaa
add
jmp
pop
mov
nop
loope
mov
mov
push
andb
ljmp
inc
int3
and
xchg
test
add
rorl
or
stc
shll
mov
lds
outsl
sub
jno
push
lds
mov
lret
repz
mov
cli
cli
popf
daa
dec
xchg
inc
movb
adc
push
outsb
mov
sub
sbb
pop
inc
mov
enter
mov
jbe
mov
sbb
lret
movq
jg
and
adcb
inc
inc
cmp
js
ret
lods
mov
mov
dec
aas
fnstenv
iret
jne
add
ret
je
pop
loopne
push
data16
icebp
sub
mov
jne
ja
bound
jne
ljmp
imull
mov
cld
cmpsl
cmp
je
or
mov
xchg
gs
ret
test
sti
add
out
mov
add
arpl
xchg
lods
addr16
out
xchg
inc
pop
shll
cltd
xor
scas
dec
sbb
ret
cmp
enter
insl
in
xor
push
jecxz
xor
sbb
pop
fcmovu
jb
loop
pop
movsl
jmp
lods
pop
repz
and
mov
cmp
ja
stc
mov
iret
mov
cmpsl
add
fsubrs
and
mov
ds
jge
sbb
inc
xchg
popf
sbb
sbb
mov
je
popl
xlat
std
stc
inc
ret
scas
cmpsb
jle
inc
jae
xor
std
sbb
and
into
movsb
or
mov
shlb
pop
or
cs
push
dec
push
sarb
cli
lods
lahf
mov
int3
ljmp
scas
inc
xchg
daa
mov
and
fwait
cwtl
or
push
mov
mov
add
mov
loope
adc
push
inc
mov
xor
aas
inc
jno
inc
subb
pop
clc
inc
cmp
mov
into
mov
mov
mov
sub
sub
aas
dec
gs
enter
sbb
pop
pop
dec
outsb
mov
lods
not
std
lret
fstpl
inc
lret
ljmp
or
fisttps
shrl
push
adc
fiadds
or
jmp
add
loop
fisttps
xchg
test
lds
adc
push
jmp
jl
mov
fisttps
add
xchg
inc
js
je
loop
xor
xor
pop
out
mov
dec
rcrb
jge
outsb
ja
cmpl
in
daa
mov
push
aaa
push
lret
mov
push
push
iret
stos
testl
ret
jp
sbb
or
adc
lret
lock
add
add
inc
or
xchg
outsb
test
popf
rcll
jns
outsl
aad
add
ss
out
je
cmp
xor
dec
mov
or
enter
and
and
mov
imul
out
sbb
rcl
insl
arpl
jo
and
adc
adc
incb
cmc
push
pop
xchg
jo
hlt
subb
lods
inc
ret
sbb
ss
mov
out
or
jge
xlat
xor
arpl
inc
lahf
lock
rolb
cmpsb
outsb
cwtl
push
addr16
test
xchg
icebp
gs
les
ret
jmp
push
add
add
mov
cmpsb
rcll
mov
mov
js
insl
adc
loop
jb
fcoms
ret
in
pop
pushf
mov
sub
jmp
cmp
mov
lcall
shrb
outsl
stos
int
inc
cmpsl
cmp
loop
test
test
popa
xor
adc
in
notl
ffree
xlat
and
mov
pop
mov
or
hlt
cs
jo
jo,pn
push
ret
in
popf
inc
sbb
pop
pop
xchg
dec
xadd
jge
vmread
ljmp
loop
and
rcr
test
mov
xor
lret
lret
fnsave
pop
imul
push
jle
xchg
dec
add
rol
pushl
mov
cmp
nop
js
rorb
and
push
pop
sbb
pop
call
jl
das
adc
jp
xchg
jo,pn
aam
scas
push
in
dec
and
outsl
or
test
cmpsl
inc
push
imul
mov
or
xor
jbe
xchg
mov
cmp
xor
mov
xlat
lahf
push
aad
subb
inc
fs
xor
inc
xlat
cli
adc
rolb
shll
in
mov
mov
pop
pop
daa
mov
test
ret
leave
cmpsb
inc
rcrl
adc
inc
add
sub
outsl
adc
cwtl
mov
fnstsw
cmp
test
or
mov
insb
or
push
add
mov
outsb
dec
orl
mov
mov
loope
xchg
insl
push
and
fcoms
stos
add
inc
cmpsb
mov
loopne
sbb
test
cmp
cwtl
xchg
mov
xchg
push
sub
iret
call
adc
dec
cmc
pop
jp
dec
rcrb
sarl
aad
inc
push
add
add
xorl
mov
cmovs
xor
jb
jns
inc
fists
imul
in
cmp
mov
fstpl
jle
inc
mov
xchg
adc
pop
jns
sbb
adc
adc
ret
push
mov
rcrl
cmpsb
call
mov
ret
test
add
cmp
ss
fmuls
pop
test
xchg
inc
popf
call
mov
xor
mov
push
cmp
push
push
cmp
fnstenv
popf
push
pop
xchg
loop
lds
xchg
int
lods
ret
in
or
dec
sub
cmpsl
out
sbb
or
frstor
pushf
hlt
js
icebp
xchg
push
lea
lcall
sbb
push
js
arpl
lock
fisubrs
xchg
mov
jmp
push
and
inc
xchg
or
mov
loopne
insb
clc
jae
add
inc
add
idivb
mov
lock
lea
jnp
cmp
shrb
in
ljmp
ret
mov
xchg
xchg
cwtl
jmp
int
es
inc
inc
cmp
sar
mov
cmp
scas
ret
ljmp
ja
cmp
dec
sbb
sbb
sbb
mov
cli
push
rorl
es
popa
cmp
push
jo
and
ss
mov
push
add
xor
push
lcall
push
cmc
cmc
sbb
xchg
pop
xchg
fninit
and
pop
mov
xchg
out
mov
push
xor
mov
leave
fwait
mov
loopne
data16
pushf
inc
jae
imul
inc
ret
push
clc
xchg
jmp
pop
push
in
xchg
outsb
mov
xchg
xor
push
std
inc
aad
sub
xchg
adc
lods
andb
icebp
in
push
push
loope
jg
jp
jp
xchg
mov
fwait
in
push
mov
adc
icebp
jns
icebp
fnstcw
lock
adc
push
cmpsb
dec
subl
daa
in
push
stos
mov
lcall
sub
mov
ret
mov
xchg
ficoml
out
mov
mov
xor
outsl
fwait
pop
lds
push
mov
xchg
push
jns,pn
dec
or
pop
dec
scas
and
arpl
or
push
movsl
fstps
repz
insb
fisttps
pop
xorl
xchg
imul
push
scas
xchg
les
ret
iret
pop
lcall
adc
mov
aas
adc
mov
mov
mov
sbb
sbb
inc
pop
dec
lods
aad
jmp
or
out
push
cltd
out
out
dec
or
or
mov
sarb
cmp
sbb
aas
lcall
loope
inc
scas
mov
iret
add
ret
and
jno
pop
xchg
mov
ja
ja
test
cmp
mov
or
and
pop
pop
jne
xchg
mov
loope
mov
xor
sti
das
fists
mov
stos
sbb
test
pop
test
loopne
mov
pop
push
inc
xor
push
or
pop
aaa
test
je
inc
xchg
jmp
xor
xor
adc
or
ss
icebp
fs
out
mov
mov
or
jp
imul
or
inc
mov
add
cmp
ret
xor
jmp
pusha
fsubp
insl
mov
xor
and
pop
and
xor
sbb
mov
add
mov
push
cltd
loope
lock
stos
enter
aas
mov
mov
add
push
bound
adc
popf
dec
cmp
pop
adc
and
lret
sbb
jo
adc
aam
jno
popf
add
fmulp
sub
ret
xor
jmp
icebp
aad
xlat
and
shll
ret
mov
or
rol
lcall
or
push
mov
push
rolb
clc
sub
sarb
out
cwtl
adc
test
push
cmp
fstpl
xchg
inc
mov
mov
dec
add
lcall
mov
aad
pusha
pop
dec
inc
fadd
add
into
fnstsw
sub
push
imul
mov
mov
pop
into
jl
mov
mov
cs
test
xchg
sarl
les
repz
shrl
mov
clc
or
sbbl
xor
roll
xor
mov
mov
sahf
std
repz
decb
jne
rcll
xor
stos
roll
push
repz
push
adc
fstl
mov
clc
movsl
inc
jns
jmp
or
add
jmp
jbe
popf
mov
scas
les
sbb
mov
imul
mov
push
xchg
ds
sahf
sbb
mov
or
in
push
loope
mov
mov
mov
int
lods
pop
push
add
es
xlat
cmp
add
test
jecxz
jae
jl
push
testb
pop
jle
mov
dec
mov
aaa
aad
outsl
xchg
xor
add
arpl
sbb
stos
jne
addr16
iret
pop
fisubs
fildll
mov
mov
in
dec
cmp
je
mov
inc
pop
jne
xchg
xor
inc
loope
mov
push
ret
jns
mov
ja
mov
pop
loop
bound
or
mov
add
add
xorl
test
ret
nop
lds
sbb
mov
ret
mov
aaa
or
jg
loope
ret
mov
lods
inc
mov
loop
test
aaa
cwtl
dec
pushf
xchg
or
xor
mov
push
xchg
xchg
inc
cs
call
fsubrl
mov
loop
dec
ljmp
mov
sbb
aaa
mov
adc
dec
shll
iret
mov
testb
push
xor
ja
sub
cmp
sbb
xchg
sub
jl
sti
xorl
lods
inc
loop
inc
mov
push
fistpll
cmpsb
mov
xchg
add
mov
test
inc
add
cmc
sbbb
push
mov
test
out
test
xor
mov
je
xor
sub
pop
pusha
cli
mov
lds
movq
int
popf
mov
das
fadd
bound
ss
leave
js
add
cmp
rorb
ret
lahf
sub
jbe
incb
popf
xor
xchg
mov
andl
iret
js
pop
mov
loope
push
jmp
lahf
shr
or
bound
jb
mov
jge
cld
std
or
clc
jle
add
sbb
imulb
dec
stos
pusha
call
inc
into
cmp
cmp
add
jmp
cmp
test
icebp
lock
movsb
ja
mov
adcl
adc
mov
cmp
mov
mov
or
push
sub
lret
pop
push
push
push
cmp
mov
inc
orps
insb
test
add
cmp
cwtl
and
push
or
inc
cmpsb
lret
out
xchg
xor
or
mov
inc
enter
add
fwait
mov
mov
push
and
push
dec
cmp
int
jmp
jp
fwait
arpl
sbb
subb
pop
arpl
gs
add
pop
into
lds
ljmp
imul
lods
dec
jl
xchg
ljmp
xchg
adc
xor
push
mov
loope
cld
ret
cmp
add
aam
int
ret
sub
stc
call
adc
xor
add
insb
iret
push
add
pusha
ret
fs
adc
je
jle
clc
shlb
add
dec
mov
inc
mov
or
bound
rorl
in
lods
pop
test
mov
sub
push
cmp
adc
mov
jmp
icebp
mov
xchg
xchg
inc
or
dec
jp
out
jae
daa
add
add
test
sbb
push
popf
ret
jl
imul
scas
mov
xchg
dec
or
inc
jle
roll
jae
stos
sub
mov
xor
std
mov
push
cmpsb
call
pop
jp
dec
mov
stc
xchg
repnz
dec
iret
arpl
push
mov
push
mov
repz
lods
sbb
adc
idivl
mov
cmc
inc
addr16
inc
lret
orl
cmpsb
cltd
sub
imul
sub
popa
and
inc
xchg
scas
add
int
test
push
or
dec
inc
in
stos
scas
push
sbb
insb
psadbw
movsb
or
outsl
pop
jecxz
lods
mov
sub
leave
xchg
sub
jl
inc
mov
sti
fmuls
rol
push
sbb
rclb
jno
ss
jnp
dec
out
in
mov
in
int
mov
daa
popl
jp
inc
repnz
mov
std
xchg
add
shll
inc
add
icebp
andl
lds
dec
sub
test
mov
and
rcrl
xor
int
rorl
or
add
int3
add
sub
and
fcomip
ljmp
xchg
pop
jle
test
nop
orb
fmull
ficoml
ds
test
loop
sbb
dec
ds
sub
pop
add
sub
cli
hlt
add
xor
subl
stos
jno
or
push
daa
fiadds
xchg
jg
out
push
and
xchg
mov
je
adc
pop
add
cmp
arpl
popfw
bnd
cmp
add
dec
ja
sbb
pop
sub
aam
rorb
data16
lcall
dec
std
mov
fstpt
inc
lcall
lds
pop
daa
test
push
loopne
xor
push
lds
je
je
cltd
adc
test
outsl
test
mov
loopne
ror
imul
jecxz
sbb
pop
test
pusha
dec
push
mov
jo
gs
dec
or
shll
data16
cmpsl
rcrl
lcall
jge
fwait
sbb
adc
rcll
test
fidivs
mov
jge
scas
lock
out
mov
ss
and
scas
pop
mov
cmp
lds
andl
inc
leave
aaa
dec
lods
fildl
testl
mov
sub
outsb
jno
lods
sbb
scas
push
sbb
jno
push
pop
sub
jno
inc
push
dec
vpcmpeqw
sbb
icebp
rorl
add
xor
aaa
push
lods
lcall
adc
mov
test
sahf
cmc
filds
mov
vunpckhps
sarl
or
mov
divb
add
dec
aad
sbb
movsl
out
orl
fsubl
inc
mov
dec
lock
sub
outsl
int3
push
xchg
out
pop
dec
jl
mov
or
push
push
rclb
sbb
or
lcall
dec
cmp
add
pop
call
je
or
imul
xchg
jo
sbb
inc
ror
lahf
inc
fsubrs
mov
data16
enter
ljmp
bound
cmp
lret
pop
rol
sub
loope
xchg
sub
add
cmp
mov
xchg
and
cmp
inc
xor
fildl
enter
fimull
outsb
out
xchg
nop
in
dec
movsl
sbb
add
sbbl
pop
lods
dec
or
dec
cmp
ret
bound
lret
ja
ror
lret
sub
pop
mov
in
or
adc
mov
jg
push
inc
push
push
or
cmpl
mov
cli
or
dec
ret
or
in
ret
cmp
adc
push
ja
fstpl
pop
nop
push
jge
adc
aam
daa
sub
les
lds
js
or
inc
lea
push
jp
jge
xchg
repz
out
jge
mov
sub
pop
scas
std
xor
ds
jle
adcl
and
mov
pushf
leave
test
xor
lret
add
mov
test
clc
jle
addl
mov
neg
fwait
mov
jae
out
arpl
clc
andb
sbbl
shll
cmp
push
setb
or
dec
adc
in
rclb
push
shll
lret
pop
out
cmp
mov
shlb
xchg
test
mov
shr
xor
outsb
xor
test
xchg
shlb
repnz
std
pop
adc
dec
cltd
xchg
mov
pop
dec
lahf
clc
xlat
shll
out
cmp
js
push
pusha
aaa
stos
xchg
jno
pop
sbb
and
insb
je
clc
es
shlb
jmp
xchg
outsb
aam
mov
push
icebp
or
in
scas
mov
loop
adc
stos
lahf
test
adc
js
adc
bound
cmp
sub
jno
mov
lahf
and
sub
mov
scas
jbe
push
outsl
inc
gs
push
push
aas
push
lods
es
loop
mov
addr16
js
cmp
jp
call
mov
in
rolb
dec
scas
sbb
popf
lock
dec
lcall
mov
popa
sub
pop
scas
test
inc
inc
div
push
aas
popa
jae
and
call
jle
pop
xchg
add
mov
cs
push
dec
fisttpl
negl
rcll
mov
or
pop
pop
xlat
xchg
leave
cli
aas
fbstp
mov
add
dec
insl
mov
mov
inc
fyl2x
cltd
pop
sbb
fld
adc
mov
hlt
mov
pushf
repz
pop
dec
cmpsl
scas
mov
jp
imul
pop
dec
mov
cmpb
adc
fwait
push
insb
shrb
inc
cmp
out
movl
pop
dec
pop
or
sbb
fisttps
xor
cmc
outsb
pop
inc
jge
pop
adc
xchg
cmpsb
icebp
fmull
inc
add
and
push
xchg
xchg
call
or
mov
jno
pusha
cmpsl
ja
popf
dec
dec
sti
in
adcl
xchg
pop
scas
xchg
or
cwtl
push
sub
xlat
std
ljmp
xchg
fistps
inc
sbb
in
xchg
xchg
jp
pop
in
sub
jno
xorl
movsl
test
sahf
mov
movq
xchg
rolb
push
or
and
jmp
popf
dec
inc
sub
cmp
lods
clc
aaa
lds
stos
scas
sahf
sub
je
cmp
stos
rorl
test
movsl
jb
notb
cmpsb
cmp
jge
adc
push
mov
popa
test
maskmovq
negl
imul
movsl
push
push
adc
jecxz
cli
inc
xor
dec
mov
lahf
insl
mov
shr
test
outsl
cmp
iret
mov
lea
rcrb
mov
push
push
adc
mov
adc
pushf
xchg
fs
adc
push
and
adc
jp
subb
addb
push
out
shll
cli
cs
popl
fnstenv
jecxz
bnd
lahf
pop
das
fistpll
insl
jp
pop
mov
dec
jge
subl
jle
out
popf
cmp
imul
sub
ja
or
in
scas
push
sbb
jg
in
adcl
popa
push
mov
das
xchg
mov
cltd
pop
dec
rcrl
adc
pop
or
dec
cmpsl
loopne
add
push
mov
xchg
adc
adc
je
sub
xor
insl
cmp
inc
jle
pop
or
push
dec
ljmp
adc
gs
into
xchg
mov
push
push
js
xchg
cmp
adc
stos
mov
lcall
mov
xchg
jmp
add
stos
push
divl
or
dec
addl
push
cwtl
mov
scas
dec
pop
xchg
dec
in
out
aaa
cmp
aad
mov
push
mov
js
or
sbb
clc
aaa
sbb
ds
adc
out
fidivrs
and
sbbb
pusha
testb
lret
or
jp,pt
push
rcl
insb
rolb
sbb
lret
mov
pop
jns
scas
xor
xorl
in
loop
aaa
out
mov
dec
adc
pop
pop
or
push
mov
dec
pop
loopne
or
mov
cwtl
push
or
sbb
sub
push
cmp
je
and
push
jo
std
ja
cmp
imul
loopne
arpl
sub
fldenv
stc
or
pop
fisubl
andb
mov
addr16
test
leave
mov
dec
cs
paddb
mov
mulps
icebp
arpl
pop
pop
pop
pop
arpl
cwtl
jg
jg
jno
addl
lahf
movsl
std
adc
pop
test
pushf
mov
mov
scas
jbe
stos
xor
test
sub
bound
add
mov
jp
mov
mov
dec
adc
push
jge
testb
jns
pop
rol
ret
cmp
insb
ljmp
bound
cmpsb
add
and
mov
and
lock
movsl
inc
test
xchg
es
daa
rorb
lcall
sub
inc
stos
test
cmpsb
pusha
cmp
aam
lods
sbbb
orb
mov
dec
lods
adc
loop
dec
adc
jne
ljmp
test
test
inc
roll
iret
push
mov
cmovno
xor
jns
loop
mov
popf
add
aas
xor
icebp
adc
add
in
cmp
and
ret
push
out
sbbl
cwtl
inc
fstpl
push
inc
xlat
push
test
mov
imul
or
test
shll
push
mov
mov
push
daa
mov
push
xor
mov
lods
insb
outsl
in
outsl
daa
xchg
sbb
mov
dec
fcoms
idivl
mov
pop
sub
dec
or
mov
icebp
aaa
enter
flds
fstps
call
add
ljmp
imul
movsb
arpl
mov
cmp
and
ffreep
push
mov
inc
pop
stos
pop
notl
jne
cltd
aas
mov
das
rcr
les
pop
rep
sub
push
inc
sbb
aad
clc
movsl
into
and
cli
mov
xor
xchg
fcmovnb
lahf
mov
sub
dec
and
adc
ljmp
dec
push
inc
cmp
nop
int
push
push
add
mov
sbb
fnsave
test
jb
test
and
dec
cmp
push
mov
or
call
sbb
aas
fdivl
inc
mov
sub
fistl
dec
or
cli
mov
repnz
inc
mov
sub
adc
push
and
mov
mov
push
sahf
mov
or
fstl
inc
and
inc
fwait
mov
inc
lds
dec
jg
andl
push
sahf
popa
xchg
xor
aaa
pop
cs
mov
mov
icebp
or
test
pop
xchg
sbbl
scas
xchg
push
jmp
rcrl
lret
adc
bound
xchg
lret
adc
sub
add
sub
rol
pop
add
cmpsb
sub
scas
cmp
lea
pop
popf
cmp
ret
cmpsb
imul
inc
std
shll
daa
imul
push
lret
pop
mov
mov
and
shl
in
into
cmp
or
lret
cltd
ret
ret
pushf
nop
popf
mov
sub
add
in
mov
sbb
inc
mov
cmpsl
push
cltd
and
jno
dec
sub
xor
aaa
fnstenv
and
cmpsb
push
pop
fs
pop
jno
out
cltd
pop
xor
add
scas
cld
out
fbstp
ror
xchg
lret
pop
roll
mov
call
in
inc
cmp
outsb
xchg
es
mov
xlat
pop
outsb
ljmp
arpl
jae
jg
cmp
push
rolb
mov
mov
push
cwtl
sbb
xor
popf
or
rcll
scas
push
jns
inc
add
adc
or
cmp
repz
and
aad
pop
xchg
add
push
ss
out
cmp
xchg
jle
scas
mov
mov
out
jns
inc
cmp
mov
pop
adc
dec
and
and
cmp
adc
inc
enter
ja
arpl
aas
jge
jle
je
or
add
sub
sbb
aad
addr16
das
mov
inc
popa
push
push
loopne
outsl
inc
jno
xor
xchg
pop
mov
je
push
lret
mov
cmp
cltd
aad
lds
add
dec
xchg
cmc
mov
dec
sbb
das
cmp
loop
movsl
pop
mov
insb
shlb
loop
mov
sub
mov
sub
jge
or
push
cli
movsb
xor
mov
aas
or
jecxz
int3
cmp
jmp
push
sub
rolb
movsl
xlat
adc
ds
adc
imul
fsubs
dec
mov
jno
jmp
pushf
xchg
inc
sub
repz
pushf
adc
shr
sub
into
lds
in
add
jb
popa
or
das
add
cmp
cmp
lods
sbb
adc
lock
dec
dec
hlt
mov
mov
inc
scas
sub
shl
jne
xlat
push
icebp
cwtl
imul
lds
mov
jp
std
push
inc
xchg
ljmp
cmp
call
js
test
adcb
in
mov
mov
aad
cmpsb
inc
jae
sbb
or
pusha
dec
addl
dec
loopne,pt
ffreep
inc
imul
movsl
rcrb
and
add
adc
dec
mov
add
mov
push
dec
cmp
or
push
test
in
sub
inc
dec
aam
inc
jno
add
pop
sbb
or
stc
jle
loope
inc
dec
iret
adc
pusha
cmp
push
pop
jb
fldcw
mov
inc
test
ds
out
test
xchg
test
fs
adc
ss
rcrl
pop
insl
xchg
shlb
scas
stos
dec
das
gs
mov
adc
dec
mov
call
add
call
or
mov
mulb
mov
mov
sbb
shll
shr
sub
and
test
outsl
stos
fisubs
test
pop
inc
sahf
fwait
inc
iret
mov
push
mov
pop
push
filds
mov
jmp
or
testb
fists
mov
dec
imul
push
cltd
dec
lret
js
inc
xchg
addr16
roll
ja
inc
pop
int3
mov
cmp
shrl
sub
outsl
jge
xchg
fiaddl
sub
sub
lock
xchg
out
and
pop
fnsave
jno
cmp
insl
push
dec
lea
add
inc
ja
xor
mov
aas
pop
orb
push
ret
mov
xchg
mov
xor
or
add
mov
or
xor
inc
adcl
into
cmp
mov
sahf
xchg
popf
rol
or
and
pop
mov
cmp
pop
sub
xor
repz
or
notl
out
dec
loopne
push
or
cmp
adc
adc
pop
movsl
jbe
dec
lret
inc
divl
and
mov
dec
lea
xchg
dec
fnstcw
aam
adc
add
xchg
out
or
and
shll
aas
setge
fs
fcomp
bound
sub
fnsave
lcall
mov
fcompl
imul
stos
testl
leave
pusha
jb
cmpsb
and
les
push
lds
and
cs
cmc
int
jmp
add
dec
ds
ficomps
insl
mov
outsb
adc
mov
inc
in
mov
dec
les
shll
mov
ja
stc
jecxz
jns
cmp
sub
loopne
popa
mov
cmc
std
xor
iret
aad
leave
pop
adc
loopne
xchg
push
rcl
aam
lds
xor
pop
repnz
dec
dec
adc
das
rorb
sbb
push
push
add
sbb
pop
pusha
jb
int3
es
mov
or
mov
insb
add
adc
cmp
mov
mov
repnz
inc
lcall
xchg
sbb
or
xor
or
add
rcr
mov
ja
nop
jge
mov
in
pop
shll
and
loope
cmp
mov
sarl
inc
push
lock
jns
shlb
mov
in
adc
xchg
fcomps
sub
sub
jge
or
and
mov
cld
repnz
xor
mov
aad
pop
or
mov
imul
jne
test
mov
imull
lea
cvtps2pd
and
out
sbb
xchg
push
dec
lods
xor
or
jbe
or
xor
fwait
mov
std
add
cmpsb
in
add
in
mov
pop
rorb
add
push
inc
leave
push
sbb
sbb
sub
adc
mov
jne
xchg
arpl
inc
aaa
lods
popa
adc
jecxz
jns
stos
iret
pop
and
nop
cmpsl
inc
sbb
enter
out
popa
dec
mov
sub
lret
call
jp
test
mov
xlat
jmp
cmpsb
lret
cmpsl
push
mov
inc
xchg
mov
mov
mov
fs
fs
pop
andl
mov
cmpsb
dec
cltd
outsl
xchg
cs
clc
sub
sub
jg
adc
cmpsl
lea
dec
xor
sub
mov
dec
stos
aad
in
adc
pop
orl
xor
jg
sub
hlt
sub
inc
jle
and
jg
mov
jp
mov
push
sti
das
inc
shll
add
ds
mov
push
sahf
push
cmc
pop
test
pop
mov
clc
dec
adc
shlb
mov
add
pop
lret
flds
inc
xchg
and
xchg
or
ret
cmp
sbb
cld
xlat
cmp
dec
jnp
in
sbb
arpl
and
jmp
jae
aaa
imul
inc
std
imul
xor
fstps
jl
dec
loope
enter
sbb
les
xor
mov
je
xchg
jno
xchg
xor
jle
cwtl
fisttpll
dec
sbb
dec
sbb
inc
cmp
xor
ret
jp
divb
push
inc
addl
adc
subl
xchg
out
aas
fwait
xchg
mov
xor
mov
sbb
pusha
lret
fs
xchg
outsb
ds
push
fadd
sbb
rol
repnz
outsl
dec
in
scas
jg
dec
ror
stos
sbb
addl
arpl
push
cmpsl
js
icebp
xor
sub
jle
xor
mov
cmp
inc
das
inc
cmp
push
pop
cltd
dec
mov
xor
xchg
mov
insl
stos
ljmp
cmp
inc
inc
mov
adc
inc
in
arpl
and
scas
adc
xchg
cmp
pop
fdivs
mov
jae
test
xorl
outsb
addb
push
xor
xchg
inc
dec
icebp
pop
stc
mov
dec
and
test
outsl
or
add
jle
inc
or
cmp
std
jmp
push
ja
psubsw
sbb
popf
aam
jno
cld
stc
mov
xlat
pop
inc
push
mov
push
popa
pop
aas
sbb
movsb
adc
fstpt
jecxz
daa
mov
pop
mov
add
cltd
mov
mov
aad
sub
push
into
out
iret
rcrb
sub
inc
into
xchg
cmp
fisubs
in
movsl
cmp
loopne
lds
sbb
cltd
jb
repnz
ljmp
and
lret
jb
xor
ds
jecxz
pop
mov
cmpsl
enter
jl
pop
sub
out
inc
mov
dec
lock
jbe
lcall
jnp
xor
xchg
scas
add
lret
push
xchg
inc
mov
fdivl
pop
jo
inc
or
mov
test
mov
or
push
negb
mov
movsl
xchg
paddusb
in
lock
or
test
pop
daa
jmp
sub
mov
mov
mov
and
iret
push
xchg
xor
cmp
inc
jmp
scas
mov
loop
xor
out
movsl
mov
mov
scas
adc
adc
fwait
xor
fimull
jnp
imul
sbbb
lds
mov
push
inc
dec
mov
pop
cmp
test
lcall
out
out
xor
jl
mov
daa
sbb
adc
push
adc
push
sbb
mov
add
mov
cs
dec
out
sbbb
mov
dec
jmp
gs
pop
cmp
xor
xchg
data16
je
mov
std
repnz
jnp
incl
push
ja
push
pop
lock
stc
mov
add
lahf
cwtl
movsb
mov
das
inc
subl
ret
rcr
jl
cmpsb
dec
test
mov
adc
push
adc
inc
scas
rorl
movsb
cmpsl
cmp
jg
call
jecxz
pop
in
xchg
in
mov
or
daa
xor
cmpsl
push
orl
lds
les
cmp
cmp
push
pop
fnsave
test
sar
scas
cmp
sub
fsubrs
jno
fdivl
mov
aas
shl
or
pop
jp
mov
push
inc
rcrb
es
mov
jecxz
dec
lahf
popf
adc
mov
dec
test
paddb
push
popa
mov
inc
and
push
jnp
insb
aas
jo
ja
push
leave
std
insl
xchg
xchg
ficoml
rcr
pandn
loopne
les
mov
in
pusha
xlat
pop
lea
mov
jns
mov
imul
mov
xchg
or
xorl
leave
cmp
rorl
mov
inc
lods
inc
and
je
ds
inc
jle
push
jns
scas
sahf
inc
mov
fildll
aaa
imul
sahf
sti
scas
imul
cmp
scas
xor
test
scas
xchg
push
jp
add
cwtl
outsb
cmp
push
loopne
lahf
loope
xchg
not
popf
adc
pop
mov
sbb
ja
adc
pop
jmp
nop
arpl
sub
loop
ficomps
sub
arpl
jecxz
sahf
popa
das
in
sbb
or
cmc
ret
test
mov
mov
adc
inc
adc
stos
or
dec
movsl
repnz
xlat
call
shlb
push
mov
fmul
aaa
gs
repnz
out
push
scas
cmp
rolb
mov
imul
movsl
and
stos
js
adc
ret
and
insl
scas
scas
dec
fisubrl
inc
mov
add
hlt
xchg
and
lock
loope
adc
addb
sub
insl
cmp
test
icebp
insl
or
and
stos
jp
aad
or
ss
outsl
inc
mov
sbb
cmpsb
and
imul
popf
hlt
sbb
bound
or
int
shll
xchg
mov
shll
and
sub
mov
xchg
pop
mov
mov
dec
mov
rol
leave
cli
add
dec
mov
ffree
pop
lods
std
cmp
scas
jo
dec
dec
pop
aam
in
dec
les
and
inc
pop
out
push
cmpsl
inc
or
addl
mov
mov
stos
xchg
cwtl
dec
in
subl
pop
in
xchg
aas
add
or
and
je
jle
cmc
imul
movsb
and
fcmovbe
addr16
lods
push
leave
cmpsb
sbb
popa
mov
imul
add
mov
bound
push
popf
rcl
mov
stc
xchg
pop
jmp
fdivs
pop
adc
rcll
pop
mov
movsb
ret
add
mov
jne
xchg
pop
repnz
lods
sarb
aam
fisttpl
dec
imul
push
rolb
push
jb
imul
mov
stos
xor
cmp
xchg
lea
inc
scas
cltd
xchg
adc
fdivl
or
cmpb
aad
imul
mov
outsb
test
sub
shrb
mov
pop
and
adc
les
xchg
lret
xlat
shufps
cmp
push
cmp
imul
bound
lret
cmp
jb
pop
pop
mov
pop
int
xchg
sbbl
cmp
loop
push
adc
add
movsl
cwtl
or
rolb
sub
xchg
mov
aad
or
nop
mov
and
cmpsb
dec
xchg
stc
addr16
movsb
add
xor
in
add
lea
int3
sbb
cmp
and
ret
dec
dec
andb
jle
jecxz
cmp
push
jecxz
out
dec
xor
jo
int3
inc
push
clc
test
sbb
int3
test
aad
mov
cmp
inc
mov
or
inc
orl
xorl
mov
movsl
pop
daa
aaa
outsl
das
rcrb
int
push
imul
xor
sbb
mov
call
int3
adc
test
sar
cmc
pop
inc
test
push
leave
or
mov
cmc
cltd
shll
sub
loop
mov
add
or
mov
pop
arpl
add
sbb
loopne
lock
push
jbe
std
iret
arpl
andl
inc
push
fs
mov
in
faddl
fsubrs
mov
pop
nop
arpl
dec
lret
jne
ror
mov
int
push
bswap
clc
ljmp
add
or
push
pop
mov
adc
shl
mov
push
loopne
sub
mov
imul
cmp
add
lea
sub
lret
stos
add
fstl
cmp
test
jnp
in
mov
lahf
add
cmpsl
inc
lcall
pop
mov
jl
mov
add
loop
cltd
in
adc
push
adc
or
pop
pop
xorl
mov
fwait
xlat
jne
jecxz
ffreep
pop
scas
add
mov
cmp
push
cmp
lret
or
hlt
popa
mov
and
clc
lea
hlt
and
loopne
cmp
insb
imul
push
movsb
fstpt
imul
sbb
push
arpl
fwait
inc
cmp
ffree
inc
add
es
test
pop
mov
or
or
lods
xor
xlat
mov
xchg
xor
sub
or
hlt
aad
push
cmp
jne
mov
mov
movl
shlb
inc
daa
sub
testb
bound
jp
fisubrs
push
sub
mov
mov
dec
shll
sub
sub
aaa
cmp
pop
cmp
pop
xlat
sub
push
push
clc
int
mov
pop
in
or
jno
sbb
push
inc
pusha
mov
ret
add
mov
inc
in
sbb
cmp
mov
sbb
stc
ret
sub
and
mov
shlb
bound
cmpb
loop
pop
shr
sub
xchg
clc
cld
inc
cli
bound
add
xchg
mov
loope
mov
insb
xlat
jmp
std
xor
pop
xchg
pop
pop
outsl
gs
shlb
push
add
in
mov
fwait
arpl
lahf
add
incb
outsb
sbb
pop
add
mov
cmp
fldcw
push
cmpsb
mov
cmp
je
xor
adc
add
sbb
shrb
xchg
pop
fisubrl
shlb
mov
lods
dec
cmpsl
rcrb
hlt
cmc
rcrb
xchg
or
and
imul
mov
cwtl
rorb
pop
pop
mov
mov
xor
and
add
int3
out
sub
addr16
enter
jl
scas
icebp
or
or
pop
cmp
or
add
push
cmpl
mov
movsb
imul
jns
popa
mov
mov
mov
shll
test
in
or
int
leave
fisttpl
xchg
push
jo
jp
flds
push
mov
dec
addl
mov
pop
lea
push
loopne
dec
aam
jle
leave
cmp
inc
in
pop
mov
cmpsb
inc
sub
aam
push
cld
mov
pop
dec
xchg
add
test
and
jge
popa
pop
xor
jno
xchg
adc
stos
rcl
jno
and
mov
sub
inc
lods
fcmovb
scas
or
data16
std
adc
pop
sti
addl
lcall
leave
xchg
mov
sbb
mov
xlat
and
xor
mov
lods
dec
push
repz
shlb
icebp
mov
mov
scas
lahf
pop
add
push
lds
push
loopne
adcl
or
scas
sub
jecxz
outsb
mov
sbb
xchg
sbb
xchg
push
inc
xchg
fcmovnbe
mov
sbb
and
dec
xchg
inc
int3
xor
sbb
pusha
cmp
mov
add
int3
icebp
test
test
call
pop
push
cmc
adc
movsb
repnz
dec
push
cmpsb
xlat
add
in
bound
arpl
pushf
adc
pop
jae
xor
ffree
jo
add
sarl
sbb
xchg
adc
xor
aaa
popa
outsb
pop
pop
dec
and
and
lcall
dec
jge
cmp
and
xor
xor
xchg
inc
push
jne
jnp
rcrl
jge
pop
jge
xchg
mov
or
lods
ret
pusha
mov
xchg
xor
mov
push
loope
or
lods
call
sbb
add
sub
dec
cwtl
fnstsw
mov
inc
xchg
pop
shrl
xchg
xlat
xchg
push
dec
adc
popa
cmp
adc
inc
jge
sbb
xchg
push
pop
xor
adc
outsb
mov
fildl
adc
mov
lahf
dec
jp
imul
push
aam
aas
mov
movsb
and
dec
ret
or
add
bound
or
xor
stos
fnstsw
lahf
push
rclb
mov
inc
xchg
scas
bound
je
mov
fwait
push
inc
mov
jg
sti
xor
jle
movsb
push
mov
fnstcw
sbb
mov
lds
pop
cmp
xchg
adc
scas
push
dec
testb
push
repnz
add
andl
rolb
stos
pop
ss
arpl
popf
movsl
bnd
lret
popa
push
aam
mov
insb
nop
scas
inc
push
js
mov
xchg
jle
adc
insl
mov
jno
dec
dec
xor
je
cmp
nop
mov
fistpll
lcall
or
push
in
lods
mov
mov
incl
and
enter
mov
xchg
pop
adc
and
inc
bound
add
push
mov
and
inc
fwait
push
jns
cmp
adc
sub
inc
mov
popf
jno
ja
xor
ret
aaa
ret
arpl
movsl
cltd
mov
and
mov
and
adc
aaa
xchg
and
xor
add
fs
mov
js
sbb
pop
mov
lcall
test
jns
sub
dec
xchg
add
push
dec
or
movsb
and
push
pop
xchg
fidivrl
inc
pop
test
cmp
push
add
shlb
data16
ja
test
xor
dec
push
adc
xchg
xchg
dec
xchg
mov
adc
dec
stc
cs
mov
inc
dec
add
aam
mov
pop
addl
inc
inc
xlat
jno
stc
jno,pt
aaa
in
cmp
fnstenv
fadds
xor
jo
testl
xor
ss
or
lods
xor
xor
cmp
cs
out
push
gs
xchg
jmp
pop
pop
and
mov
stos
and
scas
pop
cmc
adc
or
imul
pop
jae
mov
and
jb
sbb
outsl
push
clc
xlat
inc
arpl
adc
inc
mov
dec
pop
push
stos
shrb
mov
sbb
add
add
xorb
inc
cs
in
sbb
adc
dec
aas
sarb
out
mov
add
xor
inc
andps
rcll
sbb
inc
sub
xchg
mov
bound
in
xor
dec
movsbl
clc
or
inc
sub
dec
movsl
rclb
das
add
or
rorl
sbb
mov
jae
jne
adc
ja
jo
push
outsl
jb
insb
cli
push
adc
stos
xchg
inc
add
lahf
fstps
pop
pop
rcr
sbb
lea
sbb
lahf
cmp
sub
imul
push
cmp
rol
cmp
jl
add
pushf
pop
pop
shlb
shl
sarl
xchg
cltd
sbb
lds
test
or
pop
cmp
mov
mov
xchg
jmp
fbstp
xor
xchg
int
js
jmp
jns
inc
adcl
adc
mov
ret
ds
addr16
stos
dec
outsb
call
sbb
cmc
pusha
mov
and
ret
sbbl
insl
xchg
push
jge
adc
jno
cmp
push
aas
cmp
dec
push
add
or
cwtl
lds
mov
rorb
mov
addr16
sbb
stc
test
mulb
sbb
push
enter
add
add
aam
sbb
call
xor
add
bound
pushf
adc
insl
popa
xchg
call
lods
test
sub
mov
daa
add
add
notl
popa
push
and
ret
cmp
and
loope
stc
sbb
inc
dec
push
pop
xchg
test
or
cmp
lcall
mov
cmpsl
cli
ljmp
imulb
test
movsl
mov
mov
mov
mov
test
jmp
sub
jns
gs
int
clc
fptan
std
scas
pusha
pop
test
loope
dec
rclb
ja
repnz
sbb
pop
lds
std
in
adc
sbb
stc
gs
mov
mov
mov
sub
mov
sub
out
or
decl
jns
sbb
pushf
repnz
dec
adc
das
xor
fs
sti
mov
dec
xchg
cmp
pop
pusha
sbb
adc
lcall
test
pop
loopne
fwait
es
add
lret
adc
xor
mov
lret
aad
rolb
xor
mov
aas
cmp
inc
or
ljmp
les
push
popf
shr
jno
cltd
leave
subl
mov
aad
addr16
inc
sub
imul
sarl
iret
std
cmc
mov
cltd
jno
and
adc
insl
fstpt
pop
pop
jno
and
pop
or
shll
push
mov
sub
sbb
jmp
xorl
out
mov
inc
push
lods
cs
fisttpll
cmp
xor
jg
loope
jns
adc
xchg
nop
faddl
dec
lea
push
cwtl
in
iret
adcl
jne
fwait
inc
mov
xor
add
or
inc
xor
gs
or
jmp
dec
insl
lods
call
inc
lret
xchg
scas
push
push
nop
out
xor
xchg
rorl
pop
roll
fbstp
push
sbb
in
mov
xchg
cltd
test
in
mov
xchg
leave
test
imul
inc
xlat
aad
enter
mov
add
jno
mov
add
fldcw
cmp
pop
imul
sbb
xor
mov
xor
or
add
dec
add
sub
or
shlb
or
pop
scas
int
cs
movsl
xor
dec
dec
sub
arpl
jno
popa
repz
inc
xchg
rorl
xor
imul
jns
xor
xor
xchg
xlat
mov
int3
dec
sbb
mov
jmp
push
push
xchg
ljmp
test
mov
mov
jmp
add
cmpsb
scas
icebp
cmp
add
aad
xor
lods
adc
test
push
fwait
sahf
andl
mov
jle
mov
inc
cwtl
adc
cmp
loope
jo
ss
xchg
add
imul
or
lcall
mov
adc
lret
mov
dec
addl
push
mov
pop
push
push
es
lods
pop
pop
bound
jb
pop
jne
out
mov
subl
sub
roll
popf
push
adc
decl
scas
sbb
rcl
add
and
adc
push
dec
dec
or
adc
pop
je
pop
lret
adc
dec
loop
repnz
negb
adc
sbb
test
mov
add
cltd
mov
sub
pop
cmpsb
popa
imul
cli
push
fwait
lea
shrb
pushf
push
jp
or
mov
in
or
ds
jp
orb
test
push
pop
shll
es
fcomps
movhps
jno
dec
lods
jl
jl
adc
mov
icebp
push
mov
or
xchg
sahf
sbb
cmp
imul
dec
and
lods
lret
je
xchg
adc
outsl
xchg
jo
jns
xlat
add
add
test
mov
hlt
cmp
mov
add
adc
repz
cld
add
scas
pop
int3
test
jl
pop
sbb
gs
aam
pop
je
sub
inc
jp
or
rcrl
pop
xchg
enter
add
popa
test
in
or
add
addr16
pop
mov
out
cmp
test
pop
cmp
or
scas
sbb
xchg
out
sar
mov
shlb
aaa
enter
add
cmpb
or
cmc
fidivs
sub
mov
out
repz
sbb
jp
test
fsubs
push
loop
inc
cmp
loopne
cmpsl
push
test
fildl
xor
mov
add
inc
fdivl
jecxz
push
jge
add
std
notl
orl
inc
xlat
pop
rorb
test
enter
cmp
inc
sub
jbe
test
push
scas
orb
adc
cmp
adc
inc
test
popf
jp
loop
add
cs
ficompl
test
dec
xchg
push
data16
inc
push
add
jle
fidivl
pop
sbb
adc
js
fwait
and
incl
clc
mov
out
sarb
push
push
jmp
inc
mov
gs
mov
test
mov
cmpsb
popf
sub
xchg
mov
push
mov
test
sub
fsubl
mov
cmpb
lds
pop
mov
ret
popf
cld
add
inc
enter
clc
ljmp
sbb
ret
mov
jmp
mov
mov
je
imul
fists
pop
in
bound
scas
mov
jp
leave
subb
pop
lret
out
cmpsl
push
mov
and
mov
dec
mov
fwait
inc
xor
push
mov
inc
aaa
shlb
cs
push
mov
imul
pop
jbe,pt
fadd
popa
lret
ljmp
xchg
shl
mov
sub
loop
aad
jno
cmp
aam
jo
in
sahf
sahf
fsubrp
popa
jmp
or
xor
sbb
out
push
movsb
push
pop
inc
scas
xor
data16
or
adc
in
mov
popf
icebp
jnp,pt
fisubrs
lahf
arpl
pop
sub
ljmp
push
and
pop
jecxz
add
cmpsb
lods
mov
pop
xlat
bound
xchg
fcmove
neg
inc
sarb
lds
inc
lds
cwtl
pusha
dec
mov
xchg
ds
xor
js
push
icebp
sbb
push
mov
cmp
dec
in
aad
insb
ss
fbstp
push
push
ds
sbb
scas
pop
inc
rol
test
jne
pop
roll
sub
push
lock
sub
dec
mov
inc
daa
pop
cmp
aad
cli
or
xchg
ficompl
sti
sar
call
sub
jmp
dec
and
loop
arpl
test
and
lahf
js
sub
lahf
push
xchg
cld
fcoml
cmp
andb
fmulp
and
mov
ret
jno
je
ficoms
mov
movsl
inc
cmp
jo
push
adc
es
inc
dec
adcb
fsubs
and
cmp
xor
or
in
cmc
or
mov
pop
notl
dec
loopne
xor
cwtl
fcoml
mov
int3
out
xor
push
add
mov
pop
push
inc
lahf
mov
jb
jae
syscall
das
sahf
jbe
sahf
outsl
pop
cwtl
pop
dec
fimuls
sbb
pop
pop
shlb
pop
mov
test
stos
lret
lcall
ret
xchg
adc
les
insb
aad
mov
add
pop
sbb
inc
mov
mov
js
or
add
mov
pop
jp
jae
add
ret
dec
mov
push
push
pushf
inc
cmp
pop
jb
popf
out
test
ds
inc
add
popa
xchg
pushf
dec
pop
push
mov
add
dec
xchg
ss
xlat
lea
rorl
mov
ds
sbb
xor
sahf
pop
mov
jns
clc
lds
mov
pop
rcrb
mov
inc
scas
insb
in
roll
cmp
arpl
sub
xor
push
test
in
das
pop
sbb
add
mov
pop
cltd
dec
push
inc
ss
or
lock
mov
stos
int
ds
sub
pop
std
lds
cs
ja
add
dec
inc
mov
js
cwtl
mov
cmp
xor
dec
loope
mov
scas
or
xor
pop
dec
arpl
push
test
mov
test
mov
test
in
jb
or
popa
in
dec
mov
jmp
out
in
push
outsb
aam
decl
stc
in
rcll
xchg
push
gs
call
pushf
into
in
xchg
pop
or
jp
enter
pop
or
rcll
out
xchg
and
dec
or
mov
xchg
cltd
cwtl
leave
lahf
cmp
ds
popf
dec
test
add
jo
mov
testb
je
mov
push
filds
push
das
bound
add
hlt
stos
push
mov
mov
pop
mov
xor
jle
pop
mov
inc
push
ficomps
push
sbb
pop
sbb
dec
and
mov
iret
rcll
jle
jle
in
iret
lods
or
add
mov
jp
ror
gs
pop
pop
jae
xchg
repnz
dec
idiv
imul
xchg
cli
aad
sbb
daa
clc
mov
hlt
bound
fdivr
sahf
int3
loopne
xchg
mov
add
loop
lods
insl
clc
cwtl
or
stos
jp
and
loopne
test
push
adc
add
inc
pushf
inc
jp
das
das
pop
leave
adc
jg
push
js
push
jbe
std
push
sub
sbb
push
pusha
push
xorl
add
pop
mov
arpl
jg
xchg
mov
mov
rolb
cmp
pop
jle
mov
sbb
in
ret
or
xchg
cmp
jg
jl
stc
mov
in
or
call
addr16
mov
jbe
cli
push
inc
rclb
jb
repz
lret
jp
push
pop
pusha
dec
and
and
into
mov
inc
pop
popf
call
shrb
imul
gs
sbb
sbb
stos
pop
xchg
pop
lahf
sarl
dec
pop
xchg
inc
sub
test
ds
cld
mov
sbb
sub
pop
push
out
inc
loope
andl
mov
mov
xchg
aam
les
mov
stos
or
or
jo
es
dec
cwtl
mov
jmp
inc
rorb
lods
packsswb
movsl
dec
dec
movsl
sbbb
dec
inc
jg
fisttpll
icebp
mov
push
cli
cmp
jno
rorb
push
adcb
xor
pop
in
mov
add
jp
sbb
xchg
daa
add
pusha
push
ljmp
inc
push
pop
fisubrs
cs
clc
jl
cwtl
and
dec
js
fisubs
dec
xor
mov
fs
dec
jb
sarb
fidivrs
mov
and
lret
pop
sbb
mov
mov
pop
sbb
insb
or
test
mov
and
push
popa
mov
adc
push
mov
mov
jg
test
push
std
mov
sub
fadds
cmp
pop
mov
jecxz
fwait
ret
push
sahf
nop
loop
jecxz
xchg
mov
adc
ret
pop
in
mov
adc
ds
or
or
mov
adc
sub
cmp
push
dec
loopne
mov
add
arpl
push
cli
nop
xchg
stc
sub
idivl
aad
sbb
lret
mov
fisubs
jno
stos
pop
insl
pop
dec
je
fisubrl
inc
in
xchg
hlt
lret
pop
in
loope
mov
nop/reserved
cmpsl
jg
mov
dec
rcl
push
inc
sub
jb
lret
and
ljmp
inc
pop
cli
push
in
in
out
aas
scas
clc
pop
sbb
mov
jb
xchg
insl
dec
pop
dec
jae
mov
cmpb
or
aad
pop
inc
pop
dec
imul
orb
in
outsb
repnz
jns
cwtl
xchg
xchg
movsb
popa
cmp
push
push
add
adc
inc
adc
repnz
rcrb
mov
add
aas
xor
push
inc
cmp
ljmp
in
ds
hlt
adc
cmpsl
cmc
cmp
push
mov
mov
mov
xchg
call
jno
fadd
mov
or
mov
jo
sub
push
mov
pop
sbb
inc
fidivrl
testb
icebp
fst
mov
lea
fbld
les
roll
mov
into
jle
ret
ficoml
loop
in
sahf
jae
scas
les
cmp
mov
sbb
rsqrtps
push
mov
pop
adc
inc
movsl
xor
roll
cmp
test
xchg
in
cmc
adc
and
pop
shlb
lock
ja
mull
shl
mov
jo
fs
inc
test
pop
fadd
or
insl
inc
jp
filds
push
fs
arpl
aad
mov
or
aaa
dec
movsl
xor
and
loope
sbb
ds
pop
lock
sbb
cmp
cwtl
clc
popf
fcoml
aad
xor
fisubs
loopne
or
dec
stos
xchg
lods
pop
lods
js
sub
xchg
into
mov
or
sub
mov
and
mov
inc
and
fidivrl
sti
jmp
push
cs
outsl
cs
pop
ljmp
rcrb
mov
pop
inc
shlb
fnstenv
clc
lcall
mov
mov
cmp
push
xor
pop
mov
repnz
cmp
pop
inc
scas
cmpl
xor
pusha
mov
aam
sbb
push
mov
xchg
movsl
jp
adc
xchg
mov
jg
cli
pop
and
push
mov
push
hlt
sbb
aaa
in
dec
push
push
stc
sub
jnp
test
mov
negb
sub
ficompl
mov
and
std
test
xor
inc
outsb
cmpsl
xorb
xor
inc
cli
and
inc
aaa
xor
movsb
push
lock
and
mov
xor
pusha
cmp
xor
sahf
dec
insb
cmp
cli
push
es
les
popa
lods
cli
xor
aas
xchg
shll
xor
les
mull
mov
iret
adc
int
das
push
lahf
roll
aaa
mov
rorl
xchg
mov
dec
mov
scas
or
jmp
iret
cmp
shrl
jns
inc
sbb
scas
insl
ljmp
sbb
jge
sub
cwtl
insb
sub
rcll
xor
hlt
std
imul
fcom
inc
jbe
xlat
or
and
and
lret
mov
push
pop
or
fnsave
add
dec
pusha
bound
mov
sub
mov
fistpll
out
adcl
lock
or
jb
out
int3
pop
add
mov
fisubrl
pop
add
into
and
xchg
lcall
pop
sbb
adc
loope
jmp
out
push
or
jg
dec
cld
push
push
add
push
xor
pop
div
mov
jg
pop
popf
push
aad
xor
test
jp
pop
xor
bndstx
aaa
cmpsb
mov
mov
push
push
pop
cli
adc
add
mov
sbb
ljmp
push
shll
jns
cmp
rcl
int
sti
mov
dec
icebp
pop
fldcw
movsb
movsb
aas
movsb
mov
aaa
push
add
rorl
jg
xlat
jp
jbe
ds
jae
movsb
movsl
sbb
jl
scas
scas
jo
ja
jge
fldcw
je
pop
mov
icebp
or
inc
xor
fisubs
jmp
aas
lds
jmp
int
sub
adc
cmp
adc
mov
xchg
rcl
lods
mov
imulb
mov
push
xchg
jg
and
outsl
enter
insb
icebp
jne
mov
es
cmp
mov
sub
pop
cmp
nop
ja
adc
inc
or
cmpsl
and
dec
mov
in
lret
sub
cltd
divb
enter
mov
or
add
js
xor
push
push
sbb
mov
lcall
inc
repz
fcmovb
add
lahf
cmpsb
flds
aaa
inc
jne
adc
inc
and
adc
cs
cmp
or
sbb
mov
adc
stos
jno
bound
out
mov
outsl
mov
xor
inc
loop
sub
mov
aad
xchg
pop
mov
outsl
cwtl
fadd
jno
imul
ret
clc
int3
xor
mov
adc
mov
push
andl
mov
clc
mov
cmc
aad
or
push
stos
push
inc
push
out
stos
out
inc
xorl
and
nop
icebp
cmp
mov
xor
les
pop
sbb
mov
imul
pop
dec
lret
add
sarb
cs
inc
cld
mov
fisubs
push
imul
jl
cmp
jo
jmp
sbb
js
inc
inc
mov
rcll
lock
scas
lock
xor
div
stos
std
mov
cld
insl
cmp
outsl
xor
jge
xor
mov
push
ds
pop
fs
dec
sub
lahf
cmp
jno
push
fistps
shr
pop
icebp
test
stos
sub
jmp
sbb
scas
dec
into
mov
je
pusha
inc
xchg
xchg
xchg
adc
or
push
inc
xchg
cmp
sub
data16
and
lea
and
lock
and
stos
mov
xchg
add
aas
adc
jle
mov
xor
icebp
loopne
xchg
sub
scas
call
loop
xor
mov
jge
xor
repnz
mov
in
xorb
daa
sub
cld
cmp
push
mov
dec
xor
lods
out
clc
and
jmp
add
dec
sub
ror
push
stos
pop
jge
cli
sbb
js
push
das
xchg
xchg
mov
repnz
mov
out
mov
popl
cs
xor
dec
stos
cs
pop
lea
fildll
cltd
aas
cli
push
loope
leave
dec
xor
popf
dec
iret
jae
xchg
inc
cli
outsb
cmpsb
lret
pop
push
andb
call
scas
mov
lock
jno
sbb
ret
xchg
pop
add
mov
mov
addl
lods
mov
mov
shlb
jmp
fcompl
push
mov
dec
add
xchg
fwait
jnp
add
shrl
std
add
out
aad
movsb
jno
cmpl
sbb
push
inc
cmpsl
inc
inc
mov
mov
mov
fistps
or
mov
out
push
mov
and
mov
push
push
jne,pt
pop
cmpl
mov
scas
call
pusha
bound
push
imul
adc
cmp
add
bound
xchg
sbb
mov
flds
xchg
xlat
sahf
stc
sbb
adc
xchg
lcall
xchg
movntps
push
sub
mov
dec
bound
popa
imul
cmp
fnstcw
icebp
cmpsb
xor
add
or
loope
cmovg
pop
hlt
push
lret
bound
in
fmull
cmp
push
clc
pushf
popl
xlat
call
mov
xchg
ret
and
je
ja
inc
rcrl
mov
dec
pusha
dec
and
xlat
xor
and
rcrb
dec
pop
inc
add
dec
xchg
push
arpl
shrb
and
push
xor
movsl
call
imul
sub
mov
fmuls
inc
or
mov
sbb
add
push
cmp
cmc
add
cmpl
xchg
push
inc
rorl
jo
and
addb
fsubrs
movsb
pop
clc
jnp
scas
cmp
adcl
out
xlat
sub
mov
mov
push
mov
out
adc
adcl
cmp
inc
aas
aam
sub
jns
out
out
or
mov
xor
sub
clc
mov
es
test
mov
rol
rcrl
pop
shll
and
sub
ret
and
popa
mov
stos
addl
pushf
inc
outsb
jle
test
test
sbb
loope
and
mov
ss
dec
bnd
daa
cs
or
jae
mov
add
mov
pop
or
lods
fimull
adc
jp
push
cltd
outsb
cli
jecxz
add
xor
pop
fwait
sub
sub
lock
fs
ss
add
mov
mov
aaa
aam
jmp
jle
shl
xchg
jecxz
stos
pop
sub
movsb
sbb
in
xchg
pop
adc
mov
mov
andb
ss
xchg
mov
pop
or
push
aad
xchg
mov
stos
cmp
hlt
js
mov
lods
fsubs
ja
nop
clc
sbb
inc
xchg
jl
scas
mov
and
or
cmc
dec
gs
adc
insb
rorb
inc
test
es
cli
jmp
sbb
fs
cld
mov
popl
mov
or
cs
push
std
cmc
dec
dec
cmc
xor
cwtl
add
and
divl
sbb
outsl
hlt
cmp
pop
pop
mull
lcall
movb
mov
loopne
test
cmpsb
sti
pop
mov
mov
mov
add
jbe
lret
insl
add
dec
or
sbb
xor
add
aad
lcall
mov
cmp
push
cs
pushl
loopne
xor
inc
add
mov
mov
dec
inc
adc
jg
movsl
sbb
imul
pop
es
and
adc
cli
idivb
xchg
and
sbb
call
and
cwtl
xor
leave
ds
rcl
push
pop
imul
mov
mov
stos
inc
push
in
dec
ds
mov
or
cmp
cmp
dec
or
pop
inc
inc
mov
push
mov
dec
mov
mov
sbbl
bound
or
test
icebp
jmp
in
mov
mov
in
scas
jge
shlb
arpl
cmp
movl
xchg
add
lods
inc
mov
ret
cmpsl
adc
push
notl
clc
scas
scas
add
ja
clc
sbb
in
jmp
imul
add
mov
js
adc
mov
mov
mov
pop
pop
iret
stc
or
dec
jno
leave
mov
xchg
sahf
scas
imul
aam
mov
insb
clc
movsb
mov
dec
je
rclb
dec
cmpsl
fsubp
dec
add
loope
jo,pt
mov
rorl
xchg
dec
sbb
xchg
or
dec
test
xorl
hlt
lock
xchg
inc
mov
push
cmp
fisttps
xchg
adc
dec
and
movsl
addr16
mov
inc
fiadds
add
lds
xchg
mov
mov
adc
out
cld
das
jbe
iret
ret
inc
pushf
sbb
jmp
insb
sbb
cmpsb
pop
adcl
subb
fld
pop
jno
cmc
stos
add
aam
mov
ror
arpl
pop
sbb
lcall
or
inc
ja
rcl
pop
sbb
adc
out
fmull
push
cmp
sub
push
mov
nop
adc
ret
leave
mov
cwtl
incl
ret
clc
fwait
sbb
mov
ja
push
cmp
mov
and
push
ds
scas
fidivrl
cltd
outsb
dec
ret
dec
outsl
dec
jno
pop
rcrl
xlat
mov
js
push
in
inc
pop
iret
inc
jns
cmp
dec
fcoml
stos
data16
rorb
mov
clc
pusha
cltd
sarb
mov
add
enter
cmp
cmp
inc
sbb
loopne
ja
stc
outsl
xor
pop
cmp
loop
lret
cmpl
inc
subl
in
fwait
xchg
ds
cmp
fnstcw
es
rcr
inc
or
adc
cmp
faddp
mov
xlat
dec
dec
mov
mov
sbb
fs
daa
mov
sub
sbb
add
mov
ret
mov
push
les
ja
inc
pushl
stos
lods
js
add
cmp
pop
or
wbinvd
cmp
xchg
loopne
jp
inc
add
cli
enter
mov
mov
jle
dec
inc
pop
popf
addr16
pop
iret
insl
pop
in
andb
sbb
add
filds
mov
dec
sahf
mov
dec
and
in
add
mov
lods
cs
ss
cwtl
lods
push
xchg
inc
mov
push
sti
sti
mov
jne
adc
cmpsl
pop
dec
lcall
sub
test
sbb
sbb
cmp
pop
inc
imul
pusha
xor
pop
in
dec
imul
mov
add
pushf
shlb
xchg
or
sub
ret
jge
cmp
shll
lret
add
clc
inc
rcl
sub
push
in
inc
jnp
insl
xor
out
decb
pop
push
and
mov
ja
mov
jo
shrl
pop
mov
je
fnstsw
arpl
jge
inc
fsubs
mov
mov
push
into
mov
mov
roll
push
jmp
imul
jo
test
mov
mov
in
pop
cmpsl
shrb
push
push
out
xchg
xor
jg
jns
loop,pt
cwtl
push
lret
cmp
test
mov
mov
cmpsl
sbb
fsubrl
mov
lock
fsubrp
mov
pushf
sbb
popa
push
lds
sbb
or
ret
xchg
outsb
ss
clc
jp
test
jge
stos
repnz
outsb
push
pop
in
inc
cmp
push
test
cmp
ljmp
mov
xchg
push
frstor
xor
nop
xchg
lods
xor
pop
fnstcw
push
cmp
sbb
cli
sub
sahf
pop
mov
popa
push
cmc
sub
clc
ljmp
pop
inc
xor
cmp
push
and
ptwritel
lea
pop
in
rcl
adc
cmp
xor
aas
jle
in
outsl
aad
inc
jne
lds
mov
sbb
and
fisubrl
imul
js
push
add
stc
mov
sahf
ljmp
add
mov
lock
daa
es
jecxz
xor
scas
test
push
xor
and
inc
inc
inc
rdmsr
xchg
cmp
addb
das
lds
pushf
fs
cli
bound
outsl
popa
sub
outsb
inc
andb
jmp
pop
mov
repz
cmpsb
and
bound
data16
xchg
sbb
sub
lcall
jmp
sbb
stos
aaa
dec
xchg
shl
inc
jl
lods
mov
inc
mov
pop
add
les
sbb
lret
push
daa
rorl
or
jecxz
cmp
addr16
mov
aam
imul
push
mov
mov
cwtl
mov
mov
pusha
or
inc
push
loope
add
loop
notb
clc
ljmp
inc
pushf
fmull
dec
out
int3
inc
sarl
fnsave
adc
mov
adc
pop
out
movl
pusha
inc
stos
add
loop
je
push
inc
clc
add
sub
lcall
daa
push
mov
push
inc
roll
or
xsaves
fidivrl
cmpsl
hlt
in
loopne
mov
dec
pusha
push
fnstsw
cmc
imul
mov
popa
lock
das
dec
jecxz
lcall
fsubrl
push
scas
das
lcall
and
push
stos
clc
adc
in
scas
inc
dec
push
fwait
mov
cs
dec
sarb
call
cmpl
xchg
fbstp
xchg
jmp
sub
aas
enter
inc
and
and
dec
cltd
neg
inc
mov
lock
popa
cmpl
xchg
adc
iret
adc
aam
lahf
clc
les
andl
xchg
bnd
push
push
pop
push
jp
test
lcall
xor
out
mov
lahf
or
mov
fidivs
fidivl
add
or
push
mov
xchg
or
push
jae
inc
mov
in
shr
ret
imul
inc
cs
pop
jmp
push
das
call
sar
test
mov
push
lods
jmp
fwait
idiv
lock
cs
cs
mov
mov
outsb
cmp
or
int3
shl
cmp
jecxz
ret
ds
jl
xor
andb
gs
bound
xchg
cmp
hlt
mov
jns
int3
mov
and
sub
fnsave
mov
mov
lds
inc
movsl
and
icebp
lock
movzwl
dec
es
data16
jmp
in
adc
out
in
jp
xchg
mov
imul
nop
pop
push
mov
dec
cmp
movsb
aaa
or
cld
cmpsl
pop
push
rcrb
and
adc
inc
pop
pop
scas
fisubl
sahf
jb
sbb
icebp
jb
stc
mov
imul
xor
mov
push
cld
clc
cli
inc
repz
push
and
test
pop
minps
push
push
mov
sarb
test
pop
insl
scas
add
push
enter
shlb
leave
xchg
out
sbb
inc
sbb
mull
dec
inc
xchg
cs
pop
data16
cld
mov
sub
jl
push
add
pushf
je
and
popf
sub
sti
cmc
les
jne
add
pop
sar
xor
das
hlt
aaa
sub
or
sub
or
sbb
icebp
rcrl
in
mov
movsl
push
mov
enterw
pop
loop
pushf
daa
or
mov
mov
xchg
pop
idivl
jge
pop
mov
mov
adc
scas
pusha
push
mov
and
scas
jno
sarb
popf
cmp
repnz
cmp
pop
jns
xchg
mov
addr16
imul
ret
pop
sub
xchg
icebp
nop
lock
dec
daa
enter
xor
push
ja
popf
push
ret
mov
fldenv
mov
arpl
sti
sbb
dec
insb
shrb
rcl
in
into
sbb
xchg
xlat
out
popa
jp
cwtl
add
mov
dec
test
rorb
push
mov
lods
data16
inc
in
or
sti
sbb
popf
ja
fistpl
inc
loop
stos
scas
jnp
and
fisubs
pusha
test
rol
cld
and
mov
xor
pop
jno
xlat
scas
dec
adc
pop
pop
out
mov
pop
fisttpll
out
mov
or
fs
xchg
fldt
xchg
pop
movsl
call
push
inc
and
dec
push
shrb
sub
push
mov
jmp
fwait
add
cmp
jo
out
push
call
dec
ds
ljmp
mov
out
sub
cwtl
sti
mov
cmpsl
xchg
mov
std
cli
mov
bound
sub
jp
lock
decb
icebp
sti
jle
push
scas
ss
test
fdivl
pop
test
stos
cmp
dec
pop
pop
fcomps
push
add
icebp
icebp
cmp
rcll
mov
mov
sarl
arpl
inc
popf
jmp
mov
xor
and
mov
sbb
mov
jbe
dec
and
dec
inc
shlb
jne
cwtl
cli
pop
pop
aaa
rclb
pop
xchg
andb
mov
jge
pop
adc
pop
movb
pop
inc
insl
mov
push
fadd
int
add
loop
sbb
mov
push
lds
call
dec
pop
adc
aam
sub
cwtl
cli
clc
lcall
jmp
add
stc
aam
mov
push
inc
loopne
mov
xlat
sbb
inc
imul
repz
cmpsl
cli
daa
pop
je
rcl
pop
mov
insl
inc
pop
dec
ljmp
scas
jns
cli
or
fs
xchg
stos
shr
and
lret
into
shlb
xlat
dec
push
jnp
lock
jp
jecxz
push
mov
pop
aas
mov
je
cmpsb
aaa
push
sbb
mov
inc
js
pop
or
shlb
inc
sti
lcall
adc
cmp
fcoml
mov
mov
das
cwtl
ret
or
pop
imul
xor
add
rcll
add
or
stos
ret
nop
jge
call
out
xchg
xor
xchg
ss
lock
mov
std
jecxz
in
lods
mov
sub
or
jne
lds
les
cmp
mov
cmp
shlb
insb
jbe
cli
ljmp
xor
inc
sti
mov
std
sbb
cmp
fmul
mov
negb
cmp
cwtl
dec
std
std
mov
jp
inc
inc
cmp
or
int
jle
cmpsl
cltd
mov
mov
xchg
push
shl
xor
or
or
iret
inc
sarb
out
xor
call
aas
scas
lds
xchg
mov
aas
cmp
add
imul
push
xor
adc
mov
stc
jmp
sub
jle
pushf
sub
pop
imulb
adc
ja
cs
stos
and
pop
xchg
pop
inc
aad
push
out
test
dec
add
cmpsb
pusha
rcrb
aam
adc
ljmp
mov
push
subb
sub
aad
es
xchg
mov
mov
mov
pop
mov
adc
ljmp
jb
and
je
pop
push
ljmp
cld
sub
fsubrl
cmp
push
mov
ret
test
sbb
mov
insl
mov
sbb
mov
fildl
test
insb
or
out
pop
or
nop
push
or
and
orl
pop
jge
xlat
es
or
lahf
into
faddl
adc
lods
cmpsl
xchg
data16
fisubs
lret
dec
mov
dec
outsl
mov
jo
mov
jl
adc
call
xchg
jno
in
mov
inc
ret
mov
shlb
in
cmp
sub
mov
mulb
loope
scas
rorb
xor
lea
xchg
cmc
cmc
imul
or
je
and
mov
cs
mov
sub
imul
xchg
lods
repz
jecxz
adc
jne
lods
std
mov
dec
test
sarl
lret
or
push
jge
fildl
mov
inc
sbb
or
ret
fldl
sub
int3
and
mov
cltd
fbld
add
cwtl
pop
xor
dec
adc
jae
xor
in
dec
pop
les
dec
fdivl
or
xor
pop
js
add
xor
xlat
ret
push
incb
ficomps
cmc
cmp
ds
push
fldl
mov
shll
pop
lods
fisubs
dec
popf
cli
bound
imul
xchg
fdiv
hlt
jne
jmp
or
jecxz
xor
out
cli
out
cwtl
and
push
add
imul
clc
and
pop
dec
xchg
lcall
cmp
jl
scas
dec
ficoms
ja
or
add
pop
sub
imul
adc
xor
mov
cli
sbb
or
roll
lods
jbe
lds
push
ficomps
inc
lds
sbb
out
ret
jle
and
dec
mov
aaa
outsb
idiv
adc
xchg
mov
lea
jno
jbe
mov
cmpsl
mov
movsl
ret
jecxz
mov
push
js
mov
in
or
pop
jge
inc
leave
rcl
xchg
pop
dec
inc
std
or
popf
jo
sbb
mov
sub
jno
test
lea
lods
pushf
ret
or
loopne
shll
push
adc
pop
clc
inc
jmp
jbe
les
add
in
xchg
push
mov
cld
enter
test
inc
bound
icebp
pop
gs
cs
pusha
mov
loope
mov
lods
or
lcall
xor
dec
adc
loop
es
mov
sbb
mov
loope
pop
sbb
test
push
mov
sub
push
mov
call
in
dec
and
inc
dec
in
jae
fisttps
pop
dec
sub
mov
fbstp
jns
xor
pop
mov
inc
jl
push
mov
add
cmp
adc
or
push
sbb
mov
std
mov
cmpsb
push
cld
sbb
pop
rcr
in
sbb
pop
es
insb
push
lock
adc
call
cli
xor
loopne
adc
sbbl
mov
cltd
jne
push
pop
pop
negl
rcr
push
mov
in
aam
add
dec
mov
loope
loopne
pop
inc
inc
das
sbb
xorl
inc
push
jno
mov
or
xchg
sbb
lock
fstpl
ljmp
lret
adc
inc
dec
jg
mov
xor
repz
test
or
xchg
jmp
pop
call
push
mov
mov
pop
push
aas
cmpsb
jnp
andl
out
ljmp
inc
pusha
cmp
stc
test
pop
loopne
sbb
fnstcw
mov
mov
negb
mov
adcl
sub
popf
cli
sbb
cld
jl
iret
push
scas
push
mov
push
nop
call
cmp
ljmp
mov
dec
test
stc
dec
into
jecxz
loopne
mov
xchg
push
out
shl
loope
cwtl
push
clc
sub
mov
pop
lds
dec
xchg
cli
xor
jo
sub
mov
xchg
jb
out
ror
mov
inc
out
out
es
add
sti
mov
es
and
filds
ret
in
mov
push
or
aam
mov
test
int
cmp
mov
pop
push
aad
sub
mov
inc
dec
or
xchg
call
push
cmpsb
xchg
add
jl
rol
out
loopne
test
mov
or
push
add
aaa
imul
movsl
les
mov
out
mov
shrl
mov
addl
std
sbb
add
clc
aad
sub
push
std
fimuls
sub
js
pop
add
lods
out
es
je
push
enter
rcl
dec
movsb
fiadds
into
cld
or
cmp
jl
mov
dec
ss
addb
loop
je
bound
insl
inc
sub
cmova
cltd
cmp
cmp
jge
mov
sarb
fsubs
and
mov
and
gs
and
out
add
les
xor
jbe
lods
outsb
cmp
inc
icebp
mov
test
or
scas
sbb
int
fldl
not
mov
movb
faddl
fisttpl
pop
leave
adc
loop
xchg
sti
jle
ds
cmpsb
shld
fs
and
js
pop
cmp
push
push
lret
fstl
fldl
daa
and
je
cld
std
push
mov
jbe
pop
cld
sub
jnp
inc
sub
daa
idivb
sub
fwait
mov
mov
sub
jge
add
cmp
jns
sub
mov
scas
or
and
push
cli
aaa
dec
scas
neg
and
imul
enter
xor
subl
add
cmpsl
push
mov
shrb
or
push
dec
addl
cwtl
mov
mov
nop
mov
cmp
test
jo
push
lea
sbb
ss
cmp
and
scas
sarl
aas
push
dec
and
inc
add
or
mov
push
popa
cmpb
in
dec
adc
in
lds
add
pushf
out
rorb
lea
adc
adc
ja
dec
xlat
dec
sub
imul
andl
sbb
and
push
lock
mov
sbb
fisubrs
xchg
mov
add
les
fs
mov
leave
pop
test
dec
out
lods
xor
sar
mov
mov
xchg
fisttpl
movsb
adcl
pop
sbbl
mov
or
lea
out
out
sbb
add
and
out
es
xchg
int3
xchg
sbb
pop
pop
pop
jle
popa
cmp
es
fsubs
dec
sub
pop
stos
mov
sbb
lahf
sbbb
sahf
js
mov
sarb
add
push
call
sbb
scas
lods
pop
xor
dec
pop
mov
xchg
rcll
add
movsl
sub
clc
test
cmpsl
jo
jecxz
xchg
dec
cmp
cmc
inc
stos
sbb
and
fcmovnu
dec
and
cmpsl
sbb
mov
push
pop
in
mov
push
jge
push
insl
aam
adc
aad
aad
adc
pop
fadd
in
scas
movsb
mov
scas
out
push
pop
test
scas
jmp
aam
push
or
mov
gs
inc
pop
test
mov
sub
lock
aam
arpl
push
std
inc
call
out
js
fcoml
js
fwait
mov
mov
icebp
add
adc
push
jo
dec
dec
pusha
mov
xchg
xor
mov
test
cld
xchg
xchg
jno
push
js
sub
sub
dec
or
jns
mov
lret
nop
mov
inc
aaa
mov
sub
loop
insl
dec
adc
insb
pushf
xor
ret
mov
add
imul
cmp
dec
ficompl
push
jno
cmp
rorb
jle
xlat
pop
lretw
call
sub
and
ret
sub
lcall
icebp
mov
mov
outsb
mov
inc
jge
cmpb
shrl
pop
sub
mov
mov
mov
hlt
inc
lods
or
int3
imull
pop
mov
xorl
xchg
shrb
stos
test
shl
lock
jecxz
and
add
inc
adc
fdivs
xlat
sbb
jp
add
inc
lock
cmpsb
pop
xor
sarb
in
fwait
push
rcl
jl
ds
xor
jnp
cmpsl
sub
push
stos
pop
lock
add
test
adc
hlt
rcll
int3
sub
xchg
cli
push
push
mov
pusha
mov
jb
movsb
mov
jnp
push
push
jb
fimuls
or
xchg
add
std
imul
pop
filds
cmp
imul
sub
inc
jb
add
and
test
mov
xor
push
pusha
hlt
xor
mov
inc
push
movsl
shll
sub
lods
outsb
sbb
pop
movsb
pusha
adc
cmpl
es
cmc
sbb
int
xchg
and
stos
lods
mov
sub
shlb
std
xor
jbe
mov
dec
repz
lock
sbb
inc
test
arpl
pop
clc
mov
sub
clc
inc
incb
inc
incl
cwtl
xchg
stos
push
xor
pop
cld
cmpsl
add
jne
outsb
or
stos
jnp
cmpsb
pop
xchg
mov
in
insb
loopne
ljmp
sti
out
mov
pop
icebp
push
sbb
dec
rcr
mov
xor
test
sbb
xlat
pop
call
sub
std
js
cmp
mov
push
scas
pusha
outsb
sub
mov
je
or
pusha
mov
and
les
inc
xchg
xor
pop
or
and
movsl
inc
xor
in
test
add
fidivs
xchg
lahf
ja
decb
aaa
scas
aaa
adc
cwtl
insl
and
out
mov
push
mov
insb
push
and
les
cmp
mov
sub
and
cmp
mov
and
sub
insb
test
inc
ror
pop
jb
imul
subb
leave
sbb
ja
sub
popa
rclb
scas
mov
inc
inc
jns
cs
jg
sahf
jle
inc
cmpsb
inc
add
fstps
nop
mov
in
mov
scas
sahf
jmp
push
cli
cmpsb
fists
out
xchg
mov
dec
pop
jbe
mov
cld
and
push
mov
xchg
orl
sahf
adc
push
je
or
ret
add
cmp
stos
xor
mov
pushf
sub
hlt
clc
loopne
inc
push
dec
xor
sahf
ret
fmul
jmp
dec
mov
mov
rorb
lahf
dec
cmp
sub
leave
sub
mov
sub
repnz
and
dec
add
repz
lea
test
dec
sbb
inc
xchg
test
pop
xor
push
lock
and
push
clc
and
mov
cwtl
xchg
jp
or
pop
inc
mov
testb
dec
stos
rorl
icebp
lods
scas
stc
xor
lods
daa
jmp
mov
jno
mov
enter
jge
xchg
ljmp
pop
aas
lret
test
xchg
mov
adc
pop
into
jecxz
adc
mov
mov
and
pop
cli
fdivp
xchg
adc
mov
inc
sub
add
cmpsl
rorl
sbbl
jns
inc
out
mov
cmp
movsl
push
insb
in
outsb
or
add
sub
andb
aaa
bound
xchg
jmp
out
fisubrl
xor
mov
jmp
dec
aas
xchg
iret
pop
ret
inc
add
pop
adc
push
cmc
sub
dec
pop
clc
test
roll
clc
push
mull
ds
cmp
inc
sbb
or
in
arpl
js
int
decb
mov
or
jae
inc
push
dec
repz
gs
lret
test
lds
ss
jmp
sbb
nop
mov
mov
ret
pushf
jno
ret
fdivs
mov
and
or
jae
lock
hlt
push
jmp
mov
mov
and
nop
arpl
clc
inc
and
clc
loop
rcll
shlb
icebp
add
ret
arpl
sti
incl
in
stos
std
nop
dec
jae
and
into
push
fsubs
mov
dec
leave
cwtl
push
add
scas
jno
push
sbb
adc
fstl
xor
std
pop
cwtl
out
xor
sub
dec
aad
rolb
inc
cmp
inc
add
add
in
mov
dec
and
or
adc
inc
add
mov
mov
and
aas
add
or
sahf
inc
push
jg
xchg
xor
adc
js
les
cmp
push
pushf
xchg
inc
repz
int
sbb
adc
lods
push
and
sub
insb
test
lods
mov
ret
jbe
incl
jmp
out
std
mov
ds
mov
aaa
jb
inc
leave
sbb
pop
ja
add
je
mov
es
hlt
pop
mov
mov
mov
adc
std
movsb
les
ret
lds
lahf
lret
imul
xchg
ljmp
xchg
xchg
icebp
or
movsl
jns
xchg
in
les
daa
je
xchg
pop
rol
pop
sbb
mov
adc
data16
xlat
dec
in
sub
shlb
xor
cmc
aad
dec
push
sbb
mov
sbb
lcall
pop
dec
lods
gs
std
add
add
cmpsl
mov
jmp
mov
xchg
xor
mov
push
out
test
icebp
es
push
cli
push
push
push
pop
pop
push
data16
cltd
in
push
or
mov
mov
sahf
stos
or
out
hlt
xchg
out
sub
cmc
je
lret
test
pop
xor
popa
push
cld
addb
add
mov
cmp
mov
test
push
mov
and
call
push
cmpl
in
out
loope
popa
mov
jo
cmc
push
les
int3
sbb
insl
aaa
imul
outsl
sti
addl
in
js
dec
sub
inc
aam
outsb
or
xorb
mov
and
fsubp
imul
mov
adc
mov
pop
outsb
adc
enter
mov
sbb
inc
add
add
mov
cli
cmpsb
into
fdivs
ffreep
testl
enter
push
cmpsl
dec
cwtl
push
mov
shl
jp
iret
leave
cmp
pop
add
add
dec
jg
adc
xchg
outsl
dec
xchg
fcompp
fs
jl
rolb
jmp
test
ret
fwait
sbb
push
insb
dec
mov
shll
adcl
jns
lret
xchg
jmp
cmp
fsubl
cli
dec
sub
mov
pop
cwtl
sbb
int3
test
cwtl
mov
pop
push
das
pop
hlt
aaa
pop
jl
je
leave
mov
clc
add
push
dec
test
ja
mov
subb
call
jg
cmp
sbb
push
xchg
loope
movsl
jne
jmp
dec
adc
ljmp
dec
pop
jo
adc
mov
andl
clc
mov
pop
mov
mov
mov
rclb
popa
xor
hlt
loope
aam
jnp
pop
fs
jle
out
andb
add
nop
ds
iret
test
aad
pop
jl
in
or
out
add
mov
mov
ret
mov
xor
lret
push
adc
cmp
mov
cmc
insl
dec
incb
add
push
imul
sub
xorb
or
adc
iret
mov
jg
mov
hlt
aas
jnp
cs
aas
inc
or
rcrb
rol
mov
data16
or
bound
or
dec
pushf
dec
sti
fcoml
fimull
fwait
push
jne
dec
jo
adc
ret
in
mov
add
mov
push
adc
in
adc
jg
sahf
jo
mov
xchg
insl
scas
sbb
mov
sbb
push
push
into
mov
xor
sete
scas
push
hlt
nop
xlat
rcl
add
stos
int
data16
adc
rcr
or
ret
push
xchg
nop
mov
mov
nop
shrl
push
loop
incb
ja
sub
pusha
aaa
in
xor
outsb
es
sbb
push
aam
sbb
std
rcll
jno
in
mov
int3
and
test
and
imul
push
jbe
sbb
add
xor
jecxz
push
add
push
mov
loopne
mov
fwait
call
das
fisttpll
inc
daa
xor
clc
stos
mov
iret
sbb
xor
mov
adc
pop
pop
fisubrs
jo
jmp
in
rorl
mov
cmp
call
cs
je
in
test
fiaddl
sbb
insl
std
sti
leave
cmp
mov
scas
je
les
outsl
es
loop
jecxz
xchg
or
cmp
rcrl
jae,pn
cld
ret
aad
and
push
xor
xchg
cmp
jns
dec
add
dec
sarb
xchg
shlb
mov
mov
xchg
mov
jbe
shl
scas
daa
sub
cmp
ja
stc
in
xchg
push
insl
sub
push
jno
sub
cmp
cli
hlt
out
neg
mov
filds
and
and
lods
addb
and
cwtl
clc
scas
bound
add
or
arpl
dec
push
bound
add
aas
divb
push
pop
test
xor
jge
lret
push
int
sub
iret
lret
jecxz
push
push
aas
cmp
lock
push
jno
pop
and
stc
or
ljmp
and
pop
xchg
jmp
js
ret
mov
jge
push
add
sub
dec
push
loop
mov
fsubl
call
mov
out
jmp
sbb
jle
xor
outsl
inc
outsl
push
dec
bound
push
js
dec
outsl
insw
shrb
add
js
inc
push
imul
mov
adc
insb
insb
outsl
arpl
ss
data16
test
dec
and
add
aam
fcomip
jg
push
outsl
js
push
inc
push
arpl
pop
xor
call
dec
mov
jge
inc
clc
cwtl
outsl
les
test
dec
mov
xor
jae
cmp
push
das
mov
incl
pusha
mov
xor
insl
fnstcw
lret
in
push
daa
xchg
negl
test
loop
mov
aas
int3
fwait
pop
ljmp
stc
sbb
push
ret
mov
inc
adc
outsb
xchg
std
leave
xor
mov
loop
in
pushl
push
mov
fs
ljmp
insl
fdivrs
lret
jmp
test
adc
xchg
push
shll
pushl
scas
insl
nop
or
xor
ret
sub
add
pushl
or
clc
arpl
jl
rclb
das
into
inc
mov
jbe
or
inc
movsb
call
std
fnsave
jne
leave
movsl
movsl
sbb
rcl
xchg
std
popf
mov
adc
loopne
test
aam
sub
sub
jmp
mov
int
or
inc
loope
incl
dec
sub
das
xchg
in
push
jl
dec
ds
inc
inc
cli
xchg
lock
sub
stc
lods
sub
shlb
adc
filds
sbb
fcmovne
sub
fadds
cltd
jmp
jns
push
sbb
sbb
mov
push
lods
push
or
pop
lock
adc
les
cmp
fwait
rclb
mov
cmpsb
or
jne
lret
pop
sub
push
xchg
fidivrl
popf
pushl
push
mov
call
jb
mov
js
leave
and
pop
lret
pop
or
fwait
lcall
js
dec
into
fidivrs
shll
ja
jecxz
jp
iret
push
push
fcom
mov
cmp
incl
aas
mov
sub
mov
jnp
mov
push
ret
xorl
iret
jno
xor
jmp
stc
ljmp
dec
std
push
pop
shlb
das
lods
test
push
or
lods
in
leave
daa
mov
cld
push
cmp
xor
jno
aaa
insb
mov
mov
mov
loopne
repnz
ss
decl
jb
js
xchg
icebp
sbb
dec
inc
dec
jae
stos
js
dec
ljmp
pushl
ja
or
pushf
or
sbb
cmc
adc
push
lea
or
cmp
lcall
cmp
push
jnp
aas
and
test
xchg
mov
popa
andb
pusha
inc
jb
xlat
push
cmp
add
loopne
les
mov
cltd
out
dec
sub
fdivrs
cmpsb
fistpll
fistpl
sahf
faddl
cli
lret
ret
in
sbb
sbb
xor
xor
cltd
cmp
jo
out
push
and
mov
call
js
test
ret
andb
ret
int3
outsb
stos
in
imul
arpl
adcl
pop
fdivr
jb
inc
sub
cmc
lcall
pop
push
lret
inc
dec
int3
jb
jge
mov
scas
adc
jg
pop
mov
dec
inc
lahf
sub
movsb
and
test
notb
and
ret
jg
in
cltd
insb
fs
test
sbb
lahf
popa
popf
cwtl
adc
stos
push
pop
lcall
cmp
out
enter
sub
cmpsb
and
cmp
ret
pushl
sbbl
xchg
mov
dec
lds
sbbb
mov
std
jmp
add
and
mov
pushf
aam
jge
inc
stos
or
cmp
sbb
hlt
loopne
out
out
push
ficoms
cld
xchg
insb
call
scas
xor
jb
loopne
pop
fbld
xor
pop
aaa
divb
incl
and
bound
add
jecxz
sbb
push
pushf
adc
mov
into
lods
push
jmp
mov
outsl
pop
es
mov
loopne
pop
xor
cmp
jg
cwtl
es
ds
outsl
rcrl
inc
cmpsl
xchg
mov
inc
fidivrl
in
or
mov
adc
pusha
cmp
jp
mov
loopne
mov
sub
jg
aad
pop
scas
adc
and
add
lret
mov
and
sbb
cwtl
fnstsw
aas
cs
decl
sub
mov
mov
jl
pop
notl
int3
pop
aaa
dec
mov
pop
add
in
ljmp
in
sub
mov
xlat
xor
mov
push
and
mov
mov
pop
cmp
fwait
int3
out
sub
pop
mov
jns
lods
mov
repz
cld
mov
pop
and
cwtl
inc
jecxz
pop
xor
mov
jmp
mov
adc
and
icebp
add
ljmp
clc
loope
and
mov
ljmp
xor
leave
pop
fdivrl
xor
ss
mov
pop
dec
imul
rcrb
insl
xchg
cmc
mov
stos
xor
ret
mov
mov
loopne
lret
sub
jmp
add
mov
call
ljmp
sbb
leave
imul
mov
adc
push
xchg
lods
cld
push
xor
decl
lcall
pusha
sbb
movsl
cli
in
test
sub
shlb
ljmp
insb
out
leave
lcall
leave
mov
pop
stc
neg
cmc
jbe,pn
push
xor
ss
jg
jmp
das
xchg
mov
dec
lods
or
xchg
pop
push
clc
xchg
dec
mov
mov
notb
call
jl
test
jo
push
cmpsb
daa
sub
test
lock
icebp
pop
ret
mov
push
jb
decl
xchg
lcall
jno
stos
movsb
sti
fadd
push
scas
xchg
divl
mov
cmp
dec
pop
cmp
jb
push
mov
push
std
adc
jmp
xlat
rcll
repz
mov
incl
and
loop
cltd
dec
and
leave
mov
jmp
sahf
bound
aam
pushl
and
fisttpl
fldl
and
sbb
mov
xlat
stc
fists
push
in
mov
fldt
aaa
ljmp
popf
adc
mov
jmp
aas
pop
jg
push
mov
jns
inc
mov
pop
loope
lret
ret
sbb
push
inc
lods
jg
fcomip
ljmp
das
xchg
bnd
and
and
jl
lcall
filds
in
sbb
sbb
int3
mov
sbb
jne
in
out
adc
out
out
and
cmp
jns
jo
push
push
aad
dec
or
sub
push
xor
mov
mov
lcall
xor
mov
push
mov
mull
ljmp
mov
jo
mov
xchg
ljmp
add
cmp
mov
add
call
mov
push
dec
dec
je
je
cmp
stos
pushf
jb
inc
ds
incl
cwtl
mov
mov
xchg
pop
das
cltd
cmp
test
not
scas
xchg
mul
leave
mov
in
je
andl
test
cld
cmp
cs
in
call
and
imul
dec
mov
incl
fiadds
jb
fwait
test
rorb
out
push
xchg
adc
mov
sub
movntps
jp
inc
in
xlat
jge
mov
xchg
jg
pusha
std
cmc
pop
and
dec
fnstcw
mov
jmp
repz
stc
repnz
cs
sbb
sti
push
inc
jmp
cmc
out
mov
dec
int
shll
jp
xchg
loopne
mov
shl
or
lcall
pop
inc
mov
ret
sti
jne
mov
outsb
out
hlt
adc
cmp
loopne
loop
sti
xchg
pop
push
stc
mov
aam
mov
out
push
lret
mov
pop
xchg
loop
shll
add
dec
and
fisubrl
sbb
call
adc
sbb
mov
aaa
xor
adc
sub
mov
mov
xor
add
xlat
rcrb
sbb
in
push
mov
lea
sub
in
lret
mov
in
and
mov
fcomip
jno
cmp
cli
xchg
into
loope
dec
mov
cmp
mov
pop
sbb
mov
cmp
das
and
jae
test
mov
pop
scas
inc
hlt
push
or
pop
fadds
adc
lock
cwtl
xchg
ret
jo
popf
shlb
stc
movsl
nop
ss
add
outsl
pop
orb
dec
push
xchg
negl
repz
dec
jnp
cmp
xchg
das
cmc
ret
or
ljmp
xor
jg
clc
popf
inc
mov
mov
mov
shlb
clc
sbb
mov
xor
stc
xchg
inc
ljmp
push
ja
pop
cmp
pop
in
push
scas
sti
repnz
stc
pop
in
nop
add
lcall
dec
or
and
xor
out
ret
dec
pushf
int3
xor
adc
xorb
ljmp
fwait
xor
xchg
dec
and
add
inc
sub
je
test
in
in
call
je
jns
lret
nop
push
js
mov
pop
lret
jle
mov
or
int
das
pop
lock
dec
sub
int3
rorl
dec
pop
push
add
js
push
mov
movsb
xchg
xchg
and
xor
outsb
sub
adc
mov
jmp
sbb
in
push
insl
dec
int
clc
mov
fisttpll
inc
cmpsl
inc
outsl
dec
ss
cmp
incl
pop
popa
decb
mov
dec
pop
jl
je
addb
aaa
or
adc
lods
and
pop
lcall
pop
adc
xchg
lods
or
or
mov
xor
cld
aad
incl
jp
aaa
sahf
data16
out
hlt
push
mov
jno
mov
in
lods
xchg
ret
incl
dec
out
pop
xchg
jg
cmp
and
push
jmp
xor
jae
clc
xchg
inc
inc
das
dec
out
push
mov
std
aad
mov
outsl
sbb
lcall
push
and
mov
ljmp
popf
add
leave
lods
test
sbbl
es
mov
ja
loopne
cmp
pop
daa
movsb
scas
dec
mov
cmp
adc
sti
sub
clc
pushl
gs
gs
xor
cs
insb
mov
and
orl
and
aaa
adcl
outsl
insl
jo
je
jb
idiv
sti
dec
popa
insl
gs
and
popa
insb
gs
outsb
outsw
pop
dec
outsl
fs
inc
imul
imul
fistl
pusha
gs
dec
fs
outsl
push
push
sub
mov
fildll
jne
jb
outsb
je
push
push
imul
dec
fldenv
outsl
mov
out
sub
mov
data16
je
je
and
push
gs
pop
pushaw
sub
andps
fildl
sbb
fs
sti
fstpt
outsb
outsl
ja
inc
imul
mov
lds
mov
dec
imul
dec
popa
push
repz
loope
insl
popa
addr16
or
inc
pop
ja
test
insb
lock
sti
mov
push
cmp
xchg
gs
jbe
dec
pop
fdivrs
or
dec
popa
jae
gs
shl
jae
sbb
outsb
imul
xchg
insb
jae
cmc
int
daa
sbb
add
or
lock
outsb
jae
inc
insb
or
adc
inc
test
push
xor
sarl
dec
inc
fisubl
ds
outsb
mov
add
outsl
aam
jns
inc
sbb
dec
arpl
js
je
je
cmp
inc
adc
fcomip
mov
and
sub
dec
outsb
sbb
sbb
jno
insb
repz
sbbb
pop
dec
outsl
jb
jne
dec
imul
sub
lcall
xor
cmpsl
inc
data16
inc
insb
imul
roll
and
dec
sub
jmp
mov
inc
insb
addr16
je
insb
dec
inc
inc
dec
push
push
insb
jnp
pop
scas
push
loopne
out
xchg
mov
data16
addr16
push
jns
inc
push
xor
outsb
or
xor
jb
insl
ret
mov
inc
dec
gs
push
mov
mov
inc
jbe
call
xor
push
ror
jle
shlb
mov
icebp
pop
insb
xor
push
inc
loope
ss
lock
cmp
cmpsl
test
orb
mov
mov
fidivs
and
add
mov
jns
imul
in
inc
loopne
xchg
fiaddl
outsl
add
dec
std
sbb
addl
dec
push
cltd
sbb
mov
push
cmp
pop
arpl
sbb
data16
jg
ret
roll
unpckhps
sub
test
cwtl
popa
push
sub
jo
outsb
insl
inc
outsb
pop
cmp
ret
adc
push
inc
mov
sub
iret
mov
mov
outsl
js
mov
pop
gs
orl
pop
inc
jo
push
jecxz
bound
sub
mov
aad
lea
inc
jo
addl
mov
dec
rorl
jbe
push
sbb
adc
addr16
and
imul
xchg
scas
movsl
push
sbb
jbe
stos
data16
cmp
jbe
sbb
out
mov
out
je
dec
mov
or
popa
bound
outsl
js
sbb
mov
roll
xor
jo
arpl
dec
enter
loopne
and
inc
inc
sbb
mov
pusha
xorl
cmpsb
push
jge
popa
mov
lock
jp
xchg
inc
idivb
pop
and
insb
xchg
mov
mov
jns
in
je
popa
mov
pop
add
out
outsb
mov
sbb
mov
subb
popa
jnp
lea
jge
imul
das
push
cltd
push
test
push
add
jb
sbb
or
cmpsb
xchg
xor
loope
not
jbe
shll
imul
and
push
jns
scas
jne
add
lret
lods
call
mov
or
stos
popa
add
and
shlb
add
sbb
lock
popa
jmp
fldl
lsl
es
mov
mov
mov
push
adc
lock
inc
pop
sub
inc
push
mov
aaa
mov
addr16
or
add
prefetch
add
stos
mov
hlt
cmp
rclb
add
mulb
dec
add
cmp
je,pn
in
and
pop
xor
mov
pusha
cs
std
add
testl
out
mov
add
dec
xchg
in
push
xchg
scas
dec
rcrb
jb
mov
add
xchg
inc
sbb
jbe
repnz
inc
aaa
test
ret
fidivrl
fidivs
lahf
or
xchg
and
add
add
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
